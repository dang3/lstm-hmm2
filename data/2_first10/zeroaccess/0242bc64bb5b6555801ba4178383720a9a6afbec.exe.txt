push
mov
sub
add
movl
mov
or
mov
movl
inc
mov
sub
movl
movl
movl
and
mov
and
xor
sub
mov
div
xor
add
sub
xor
orl
push
add
mov
orl
and
div
adc
mov
cmpl
jg
mov
xor
jmp
push
push
pushl
push
pushl
push
pushl
call
movl
movl
mov
mov
imul
notl
lea
mov
mov
cmp
movl
je
cmpl
jb
jmp
push
push
push
call
movl
movl
movl
mov
mov
xor
and
cmpl
jl
andl
jmp
push
push
push
call
mov
xor
mov
movl
movl
mov
mov
sbb
mov
orl
jmp
xchg
test
xchg
mov
push
imul
sbb
and
cmc
cmc
cmc
push
push
cmc
mov
dec
mov
xchg
or
xor
cmpl
mov
push
jge
out
inc
aad
push
sbb
cs
loopne
inc
shl
insl
jmp
scas
pop
ss
mov
aaa
enter
subl
push
inc
push
sub
fwait
xor
addr16
loopne
pusha
repz
mov
mov
lahf
push
mov
dec
inc
dec
stc
and
mov
push
movsl
repz
jo
aas
sub
int3
shrb
sub
xchg
lods
idivl
xchg
sub
call
mov
jp
out
cmp
add
or
aas
and
inc
mov
ljmp
sub
test
inc
cmp
add
or
popl
idiv
mov
jno
or
sbb
or
and
push
ss
popa
shlb
rorl
add
mov
or
pop
pop
bound
push
jnp
mov
hlt
int
mov
pushf
pop
lahf
sahf
outsb
sbb
shll
addr16
inc
test
jbe
add
shll
sbb
sarb
push
scas
clc
insb
pop
lret
push
push
lahf
and
xchg
xchg
mov
imul
stos
fbstp
out
xchg
lods
insb
fdivl
sub
and
adc
loop
lds
pop
and
push
je
stos
icebp
lods
test
les
test
es
push
into
push
push
sbb
push
popa
cmc
shlb
and
dec
jae
mov
or
xor
xor
jecxz
mov
push
daa
mov
ficoms
add
ljmp
or
sub
or
test
sub
pop
filds
lahf
shl
xlat
aam
jg
pop
ss
mov
sbb
push
pop
push
push
and
scas
or
or
loopne
daa
push
mov
add
std
jecxz
inc
adc
je
mov
sub
mov
aas
mov
cwtl
shrb
fmul
dec
outsl
mov
dec
dec
add
adc
cmp
cmp
push
add
out
and
jb
xor
rclb
pop
sbbl
pusha
lret
dec
pop
inc
or
mov
int3
loop
lods
and
rcl
dec
sbb
cmp
leave
pop
or
je
iret
mov
stc
inc
xchg
mov
fs
inc
daa
push
gs
dec
cmp
sbb
xchg
add
aad
push
push
mov
push
adc
imul
je
jmp
xorb
dec
mov
jnp
data16
repz
or
xchg
adc
lds
inc
sbb
das
adc
scas
mov
mov
push
pop
xor
pop
cmp
sub
iret
mov
adc
aam
std
imul
pop
jmp
mov
paddw
adc
add
arpl
push
lock
imul
fcomps
dec
and
lret
je
mov
fstpl
insb
out
lcall
loopne
mov
mov
int
or
inc
pop
xor
ja
scas
lss
xchg
xchg
and
pop
rcr
push
mov
enter
scas
cmp
push
push
dec
insb
data16
fistpll
mov
test
rcrb
test
adc
mov
sbb
push
mov
or
mov
cld
cs
push
aad
outsb
loope
clc
daa
sbb
test
sub
pop
out
xchg
cmp
xor
cmc
and
es
xchg
mov
mov
jbe
lds
sbb
test
cwtl
xchg
xchg
xchg
jnp
and
jae
into
sti
cmp
dec
push
nop
icebp
cwtl
daa
add
fstp
imul
push
inc
pop
inc
push
xchg
xchg
fbstp
scas
and
les
pop
dec
mov
push
xchg
xchg
inc
scas
clc
cmp
sbbb
lods
sub
mov
in
push
outsl
jne
das
mov
test
jl
int
fs
mov
cmc
dec
jae
nop
mov
pop
insb
ficoms
cmp
mov
dec
inc
les
loop
dec
add
scas
or
mov
cltd
add
sub
sbb
mov
push
xor
lods
lds
outsl
xor
mov
inc
add
lret
orb
xchg
lahf
xor
out
push
repnz
adc
jle
jb
add
repz
cs
loop
scas
fsubl
xor
and
in
add
xor
sahf
xchg
adc
sbb
fimuls
mov
es
sub
imul
or
adc
adc
cs
push
cmpb
je
in
cmp
push
fdivs
jns
push
dec
insb
les
mov
in
aaa
rcrl
xchg
cmp
aaa
mov
adc
jbe
movsl
adc
in
add
adcb
push
es
outsl
add
add
roll
icebp
lds
loope
shl
xor
shlb
jle
xchg
sbb
insb
push
ja
sub
xor
popf
stos
aaa
stos
mov
std
cltd
jno
inc
cmp
ss
orb
out
in
mov
adc
clc
sub
jge
adc
or
rolb
add
daa
inc
add
icebp
mov
movl
cmp
je
sub
movl
or
movl
and
movl
cmpl
jl
jmp
push
push
call
movl
movl
push
movl
mov
mov
push
push
sbbl
push
call
mov
mov
orl
and
add
mov
sbbl
and
adc
jmp
add
push
jae
inc
add
dec
jecxz
push
push
cmc
push
push
cmc
enter
mov
push
divl
xchg
xor
add
pushf
outsl
pusha
fists
in
cwtl
add
xor
sbb
push
push
inc
in
notb
imul
mov
mov
das
dec
cmp
lds
adc
sub
rcl
rcr
xchg
enter
pusha
arpl
cmc
cmp
stos
inc
adc
aam
or
pusha
or
or
ret
mov
test
ljmp
fildll
jmp
mov
aas
lret
mov
sbb
insl
ficompl
scas
addr16
cmp
jmp
repz
mov
loop
adc
cwtl
cmp
jmp
fwait
stos
mov
dec
cld
jno
ret
loopne
dec
push
mov
xchg
inc
sub
test
hlt
pop
ljmp
adc
std
popa
iret
ss
xchg
pusha
aaa
adc
adc
sti
or
scas
clc
pop
and
call
test
fs
aaa
xchg
sahf
and
mov
jb
movsb
dec
cld
aaa
mov
sbb
push
cltd
mov
mov
sub
xor
mov
clc
mov
jo
mov
mov
and
testl
xchg
mov
testl
call
inc
push
js
bound
inc
arpl
mov
imul
dec
mov
cmp
cltd
mov
sbb
sbb
fisttpll
push
mov
adc
jae
lea
ljmp
jmp
sbbl
das
inc
int3
push
inc
push
jb
push
adc
add
or
mov
jns
mov
cmp
pop
cmp
fwait
xor
in
and
rcr
aaa
xor
pop
inc
add
je
movb
ss
sti
mov
add
cmpb
add
fdivp
cmp
mov
les
jo
adc
out
jge
mov
lcall
jns
mov
mov
push
pop
mov
repnz
dec
jae
and
cmp
or
inc
nop
shrl
loope
mov
push
les
fdivrs
mov
push
inc
js
mov
cmp
cmp
push
push
sti
adc
imull
ret
arpl
test
sub
and
rolb
loopne
repz
or
mov
outsb
xor
fldl
and
adc
push
addr16
je
out
mov
mov
std
mov
sbb
das
push
leave
inc
ficoms
push
adc
push
out
jnp
or
decb
xchg
mov
jl
lret
push
push
sub
inc
jne
neg
jno
pop
add
test
dec
push
loop
ja
shll
scas
jge
jl
mov
icebp
push
or
mov
int3
popa
and
lock
or
xchg
aad
je
popa
test
subb
std
add
loop
cmp
mov
push
push
adc
rcrl
sub
ret
lret
andb
push
incl
gs
loopne
repnz
pop
add
fldt
mov
scas
lods
and
pop
pop
insb
sub
imulb
sbb
in
push
lahf
fs
daa
cmpsb
nop
negl
stc
mov
scas
xor
fcmovnbe
inc
in
fucomip
sbb
sub
lret
lea
popa
and
pop
xchg
icebp
repnz
inc
pop
jo
test
sub
xchg
cmp
push
mulb
jp
mov
insl
cmp
dec
aas
adc
test
mov
pushf
cmp
fidivl
imul
adc
insl
jl
scas
add
pushf
add
daa
mov
enter
in
push
cli
mov
lds
in
add
aad
aaa
pop
sahf
shlb
xchg
rcl
xor
push
in
xlat
popa
mov
rorl
mov
in
sub
xlat
sbb
inc
and
in
mov
push
daa
pop
inc
inc
shll
inc
jb
dec
jnp
mov
xlat
sahf
mov
adc
shll
cli
inc
sar
xchg
xor
cvttps2pi
jle,pn
insb
mov
rcrb
jno
pop
das
dec
repnz
imul
xor
xor
inc
add
popf
cs
mov
call
out
mov
lods
adc
int
out
xchg
sbb
or
mov
or
cli
mov
mov
jns
in
mov
jns
lock
repnz
das
outsl
push
inc
call
push
ds
or
jge
jnp
dec
pop
or
push
seto
dec
adc
imul
call
dec
out
add
xor
clc
push
inc
inc
dec
mov
push
inc
mov
test
int
adc
seto
fcoml
adc
mov
in
stos
and
test
xchg
add
xchg
jnp
repz
rclb
xor
into
dec
mov
rclb
lds
les
sub
xorl
and
jmp
adc
xor
push
lods
mov
lock
cmc
cmc
push
push
cmc
lcall
pop
cmp
inc
mov
inc
fcomps
insl
xchg
inc
outsb
popa
test
jnp
add
add
into
jno
fcoml
jmp
enter
mov
repz
inc
jae
and
push
js
push
je
or
mull
jno
xchg
xchg
pop
int
sub
or
clc
movsb
lret
mov
icebp
push
jnp
mov
das
out
sub
icebp
scas
pop
aas
or
cld
pop
clc
rcr
and
int3
in
mov
cld
jle
scas
add
jne
and
push
test
sub
loop
jnp
sub
cli
xorb
add
icebp
adc
nop
jle
cld
std
pop
loop
add
cmpsb
out
int3
sbb
adc
mov
test
loop
sub
mov
into
fs
in
daa
dec
mov
movsl
loopne
or
or
sar
sbb
aaa
jge
dec
mov
adc
sbb
lret
adc
gs
add
lods
add
fcomps
and
in
aad
lea
sti
mov
push
fwait
mov
xchg
out
sbbl
cmp
lods
je
and
mov
and
fmull
std
xor
aad
add
rcr
scas
xorl
adc
dec
in
adcl
inc
adc
mov
scas
movsb
adc
sbb
hlt
iret
and
lret
popf
into
leave
jecxz
cmp
push
sub
push
dec
adcl
xchg
imul
jge
push
xchg
insb
stos
cmp
or
js
popf
mov
das
mov
push
jge
push
sbb
mov
repnz
insl
decb
jnp
pop
mov
push
enter
inc
shll
and
repnz
lods
mov
pop
xor
xor
cld
ljmp
sub
mov
inc
adc
mov
popf
or
dec
shlb
or
pop
dec
mov
sahf
pop
xor
jns
dec
mov
inc
xor
cmp
jecxz
or
insb
jne
faddl
mov
loope
and
imul
and
mov
jnp
or
in
std
xor
adc
pop
int3
pop
sub
xchg
lds
repz
fcomps
lahf
dec
ljmp
pop
and
jg
lcall
lcall
aam
aaa
dec
test
jecxz
mov
dec
cmp
dec
movsb
and
sub
das
sub
jno
test
jno
vpsllq
mov
push
outsl
bound
xchg
repnz
testb
test
adc
jmp
cmp
cmp
jmp
sbb
movsl
std
jb
rolb
mov
xor
cwtl
mov
xchg
mov
pop
das
mov
imul
add
mov
cmc
mov
push
add
fistpl
ret
test
icebp
pop
push
or
sbb
jecxz
lret
js
mov
pop
jecxz
sub
xlat
xlat
sbb
xchg
inc
jle
loope
add
sbb
add
jecxz
iret
movsb
pop
push
int3
sub
lods
insb
mov
push
lcall
sub
xchg
pop
aam
leave
scas
sub
and
push
cmp
cmp
pop
sar
dec
ljmp
xchg
xchg
push
mov
stc
push
push
mov
sbb
test
push
nop
mov
jns
sbb
fisttps
clc
movb
cmp
mov
out
push
mov
jnp
lret
pop
out
mov
push
rorl
out
dec
jmp
test
cmp
mov
imull
xor
icebp
mov
lods
inc
mov
push
and
test
xor
inc
xchg
push
jae,pn
cmpb
push
push
enter
ret
aad
out
incb
adc
cmp
loopne
lret
sub
andb
xor
rcrl
mov
orl
addr16
push
push
in
scas
xchg
jmp
xchg
stos
sub
in
xor
sbb
cmp
jmp
push
dec
mov
mov
fdivrp
movsl
cmp
jmp
test
sbb
sbb
popf
add
fucom
popl
pop
in
mov
mov
clc
sti
mov
ja
movsl
sub
mov
mov
jb
dec
addb
inc
loope
push
pop
sbb
jp
std
sti
push
scas
jno
mov
pop
mulb
or
inc
xchg
test
dec
dec
push
jecxz
pop
int3
dec
mov
mov
cmp
flds
lds
cmp
sbb
xchg
daa
mov
xor
xor
aaa
sarl
fnstcw
lods
mov
inc
pop
mov
sbb
imul
outsl
xor
in
xchg
sub
push
daa
inc
jge
rolb
test
jb
add
pop
sub
add
xchg
lock
xor
pop
cmc
mov
mov
push
cmp
push
mov
leave
lret
inc
pop
push
adc
xor
add
test
xor
add
jb
pop
nop
or
pop
out
mov
jg
inc
add
insb
add
mov
mov
mov
movl
cmp
jne
mov
mov
mov
mov
shrd
shl
mov
mov
shr
mov
xor
xor
or
jmp
add
pop
call
xchg
jecxz
ficoml
cmc
push
push
cmc
jo
dec
aas
pop
enter
push
in
mov
scas
ds
xchg
pop
sbb
cwtl
outsb
adc
sub
dec
ret
decb
call
lret
mov
adc
ret
das
and
jg
or
add
add
or
push
xor
xor
sahf
cli
push
decl
rcll
add
call
or
lock
add
jbe
adc
dec
dec
jno
out
mov
sub
xchg
cmc
pop
lock
int
je
adc
js
gs
hlt
mov
xor
lea
ficoms
loopne
mov
or
inc
insb
pop
rorb
and
pop
jmp
jmp
jmp
xor
movsb
cmp
xor
dec
add
xor
dec
xor
data16
sbb
lret
push
and
push
cltd
push
xchg
xchg
dec
pop
aaa
sub
sub
add
into
push
dec
adc
lock
jb
insb
outsb
xchg
pushf
inc
loop
inc
cli
xchg
add
das
sti
daa
mov
sbb
sub
dec
sub
dec
mov
sbb
inc
loope
out
pop
aad
add
test
push
mov
and
mov
push
fistpll
push
data16
jo
int3
inc
sbb
in
sub
out
loopne
icebp
jae
pop
leave
sub
dec
add
arpl
rorb
test
add
xchg
push
cmp
shrl
xchg
cmp
cmpsl
les
sti
add
push
jb
pop
inc
fcomps
fsincos
mov
inc
sbb
and
jb
dec
xor
jmp
rclb
mov
dec
outsl
mov
jecxz
pop
inc
inc
cmp
adc
fistps
jmp
adc
addr16
pop
arpl
push
sbb
mov
repnz
pop
dec
jle
push
push
subl
mov
pusha
ja
push
loop
sub
jns
inc
aam
add
push
cmp
daa
sbb
push
jno
push
pop
jno
add
inc
or
aas
xchg
arpl
icebp
xor
push
and
insl
xchg
xchg
and
mov
hlt
or
jle
popa
mov
js
jl
mov
repnz
or
movsl
and
pushf
mov
xchg
cmp
inc
enter
cwtl
cmp
jbe
xor
les
push
sbbl
mov
std
lds
imul
out
cwtl
dec
loopne
out
imul
xchg
jmp
dec
out
pop
jo
push
mov
mov
in
aam
fwait
mov
xor
push
mov
in
sub
inc
sti
jle
shll
repz
int
scas
sbb
scas
xchg
push
mov
daa
fldt
jp
imul
dec
mov
lea
or
push
aad
sub
es
push
xchg
cmp
push
cld
lcall
in
cmc
mov
dec
in
imul
or
insl
mov
mov
sti
dec
pop
xchg
jne
fdivl
stc
xlat
xor
add
adc
pop
mov
test
movsl
and
ljmp
pop
cltd
or
jne
inc
imul
in
add
xor
adc
dec
std
lock
or
sub
mov
xor
jb
cs
adc
push
inc
out
arpl
out
out
xlat
cs
cmc
inc
fistpl
ljmp
push
sbb
sub
rorl
mov
push
jnp
ds
std
xchg
int3
cmp
mov
dec
cmpsb
outsb
pop
cmp
sub
mov
push
fwait
lret
out
xchg
clc
orl
jmp
daa
xor
jns
fcompp
or
test
into
dec
mov
lea
pop
cmp
je
fidivrs
mov
lods
add
ja
aaa
or
cmp
ljmp
push
stc
in
ret
push
mov
icebp
adc
xor
push
daa
lcall
mov
int3
push
rorl
mov
aas
popa
sub
insb
popf
push
and
aad
loop
push
clc
lcall
adc
pop
sti
xlat
dec
add
fs
aaa
add
sub
cmpsl
pop
mov
mov
jle
push
into
shll
test
cs
lahf
mov
dec
mov
inc
mov
xor
mov
or
jo
std
inc
mov
mov
jg
add
mov
xchg
fstpl
lods
movsb
lods
out
jmp
push
sbb
dec
daa
dec
jmp
push
loopne
and
mov
jmp
mov
in
into
mov
dec
mov
das
stos
push
push
cwtl
mov
loop
jo
mov
cmp
pop
shlb
and
fidivs
xlat
notb
cld
cmc
daa
iret
je
test
jbe
jae
hlt
call
xorb
stc
pop
sub
adc
xorl
imul
pop
addr16
xor
add
mov
jne
inc
mov
add
rorl
sub
in
sub
pop
sbb
into
call
push
fidivs
jbe
scas
cmp
mov
push
mov
lock
addb
sub
push
mov
mov
mov
shrd
xor
shr
mov
mov
xor
or
mov
movb
movb
movb
movb
or
shl
mov
sub
mov
xor
mov
and
mov
imul
movzbl
shr
mov
movb
movb
movb
mov
mov
jmp
sub
xor
les
add
repnz
jbe
cmc
cmc
push
push
cmc
call
popf
stos
test
or
stos
cmp
inc
repnz
mov
scas
add
in
or
mov
push
push
fstps
loope
cmc
clc
inc
pop
xchg
or
pop
fnstsw
mov
cmp
lods
fimuls
hlt
push
loope
decl
mov
push
sbb
ja
je
lock
dec
icebp
jo
add
sbb
xchg
test
test
fwait
lahf
stc
hlt
mov
pop
rcrb
jp
xchg
mov
fnstenv
dec
and
mov
outsl
call
inc
shrb
pop
xchg
cmpb
jmp
rclb
out
xor
sarl
mov
fs
imul
fdiv
or
pop
test
add
aad
int
les
aas
enter
mov
or
jl
repnz
cmp
scas
xchg
icebp
int3
cmp
pop
push
xchg
stc
fidivs
clc
pushf
and
xor
ret
pop
cmp
and
loope
adc
jge
xchg
rcl
mov
test
cltd
mov
cld
popa
adc
xchg
pushf
sub
xchg
sbb
jmp
testb
out
outsl
add
mov
std
ret
divb
in
addr16
cwtl
push
lds
lock
xor
repz
jle
sqrtps
xor
add
mov
cld
push
pushf
dec
js
repz
xor
mov
lock
inc
loopne
pushf
inc
in
es
sbb
xchg
push
xor
sub
scas
lock
outsl
push
dec
adc
xor
test
adc
mov
loop
fwait
imul
sbb
sbb
adc
mov
mov
sub
daa
enter
popa
or
jb
dec
lds
sbb
das
repnz
scas
aaa
stos
mov
insl
push
pop
and
adc
enter
sbb
mov
or
adc
sbb
aam
xor
sbb
cmp
pushf
test
insl
xor
inc
xor
inc
xorb
gs
dec
dec
adc
and
in
xchg
sbb
jecxz
daa
pop
pop
mov
xor
and
js
es
jmp
jne
pop
and
mov
inc
imul
ljmp
push
or
outsl
sbb
sbb
cmp
xchg
in
adc
insb
js
lcall
mov
mov
int3
cmpsb
jp
push
movsl
andb
ljmp
inc
out
mov
cmp
xor
pop
insl
outsl
stos
and
xor
push
dec
fsub
mov
mov
std
in
sbb
fdivrs
add
mov
and
push
jg
or
ret
lahf
xlat
or
and
adc
push
xor
mov
fsubrs
pusha
out
lds
lcall
dec
jo
sbb
sub
push
push
cltd
lock
and
xor
js
mov
faddp
mov
inc
pop
adc
jl
inc
sbb
mull
fstps
xlat
into
shrb
push
ja
and
cltd
push
push
aam
repnz
clc
nop
lea
popa
test
stc
push
aam
cli
jo
cmpl
lods
stos
mov
xor
aam
push
dec
in
stos
xchg
cld
fwait
pusha
shlb
inc
shlb
inc
in
es
gs
out
and
push
imul
fildl
lea
fdivrl
mov
je
pop
out
cli
push
pop
loop
insl
test
xchg
fimuls
out
inc
sub
push
ret
sbb
sub
stos
test
sub
mov
lds
fsubrs
cmp
notl
xchg
jns
mov
adc
cmp
and
pop
xor
pop
adc
xchg
rcr
adc
ror
das
sub
fildll
mov
jg
lcall
jle
fdivr
bound
outsb
dec
dec
mov
fs
pushf
or
in
push
lods
movsb
or
xchg
pop
mov
cwtl
insb
cmp
adc
adc
addb
or
adc
aas
fidivrs
movsb
jno
add
test
out
inc
pop
mov
outsl
pushf
jne
stos
inc
lds
leave
add
stos
in
mov
pop
insl
dec
addb
dec
fs
dec
mov
mov
int3
mov
lret
push
dec
lock
lds
xchg
adc
sub
js
popf
xor
pop
pop
cmp
or
xchg
cmp
sarb
pop
ds
jbe
mov
sbb
in
jmp
and
adc
shll
sbb
pop
aam
int
adc
out
insb
mov
sbb
sbb
and
ljmp
inc
jb
xchg
xor
pop
jmp
cld
or
dec
stos
xor
lret
pop
sbb
or
addr16
sbb
mov
push
mov
dec
mov
push
adc
clc
push
jge
cmp
int
inc
mov
divb
xor
sbb
sub
add
xchg
jbe
xor
cmpsl
jns
xor
popf
cmp
repz
jns
mov
incb
ret
incl
cmp
ja
mov
mov
shrd
xor
mov
shr
mov
xor
shl
or
mov
pop
leave
ret
movl
cmp
movl
jae
movl
cmp
movl
jmp
repnz
jge
aas
xor
mov
cmp
shl
cmc
scas
push
cmc
sbb
xchg
mov
push
imul
aad
add
hlt
xor
mov
adc
jp
xor
lds
je
daa
cld
add
mov
leave
or
and
add
sbb
and
notl
sub
cli
lock
aad
rol
in
stc
movsb
movsl
ja
mov
notl
addb
xchg
jecxz
xor
sbb
in
mov
mov
sbb
sub
pusha
loope
test
mov
inc
addb
pop
xchg
mov
push
fwait
cld
dec
push
das
pop
lea
inc
cs
push
in
inc
push
dec
sbbb
sti
mov
dec
mov
fidivrl
shrl
out
movsb
popa
fmulp
sti
and
mov
push
fsubrp
cmpsb
or
ret
loope
or
add
andb
adc
push
fldl
push
push
pusha
lea
leave
jb
aaa
sbb
fsubrs
xor
js
iret
imul
out
jl
jmp
jl
mulb
jg
outsl
ljmp
movsl
arpl
test
or
jne
or
iret
mov
or
test
scas
lret
jb
or
push
data16
mov
push
xor
xor
int3
jnp
mov
fisubl
push
dec
mov
out
imul
daa
hlt
ret
push
repnz
cmpl
cld
in
and
mov
xchg
sub
repz
mov
fwait
mov
imul
jo
scas
sub
imul
mov
imul
jmp
mov
and
insl
fwait
popf
enter
and
sub
jecxz
sub
adcl
loopne
rolb
lret
cmpsl
xor
movsl
xor
fldcw
int3
inc
out
mov
shlb
and
inc
jne
lahf
jmp
and
insb
cwtl
inc
or
fldl
xor
inc
shlb
mov
pop
iret
imull
pop
lds
inc
mov
dec
add
or
add
imul
xchg
leave
rcll
test
mov
sbb
stos
imul
lcall
pop
or
sbb
fdivrs
add
testl
pop
fabs
in
cmp
push
xchg
jbe
shll
sub
sbb
enter
rcll
lea
mov
push
jb
push
xor
and
scas
xor
roll
cmp
or
xchg
in
xchg
dec
adc
inc
or
int3
mov
lods
dec
enter
lret
inc
lods
daa
roll
lock
xchg
jnp
loop
sti
mov
fsts
and
xchg
add
fldenv
mov
or
in
pop
push
mov
xor
leave
mov
lcall
dec
lahf
data16
cmp
sti
hlt
inc
and
mov
idivl
enter
sub
sub
cld
pop
es
push
aad
es
mov
push
push
int3
jmp
push
lcall
mov
jmp
stos
xor
dec
arpl
add
scas
or
cmpsl
sub
jge
repnz
aam
bound
cmp
push
ret
mov
sti
add
imul
cld
push
fists
ljmp
sbb
push
sub
inc
mov
push
push
std
shll
roll
lret
fwait
pop
je
das
bound
out
cwtl
cmpb
sarb
std
xchg
cli
xor
popf
xchg
into
cmp
cmpsb
test
adc
loope
sub
xor
dec
jl
or
push
ljmp
ljmp
aas
cmp
lods
cmp
add
ljmp
sub
inc
cwtl
adc
and
test
mov
jecxz
dec
dec
sub
push
push
push
cmp
adc
pop
jle
stos
addr16
aas
inc
xchg
int3
imul
loop
js
orb
inc
mov
pushf
test
mov
dec
mov
pop
push
cld
lock
add
mov
aas
mov
jno
mov
clc
cld
or
mov
imul
stos
rcrb
movsl
stc
ja
in
push
call
push
lds
inc
mov
cvtps2pd
insl
and
or
adc
in
sbb
mul
lcallw
subb
xor
pop
leave
sti
lret
test
fldl
ret
jno
mov
or
movsb
shr
push
ss
test
sub
mov
mov
mov
mov
mov
pop
mov
add
rclb
lahf
shrb
cmc
jg
and
mov
adcl
add
adcl
shrd
shr
ret
xorl
mov
xor
and
shr
ret
xor
xor
ret
mov
mov
ret
mov
mov
ret
push
mov
sub
mov
xorl
mov
subl
mov
adcl
sub
movl
push
mov
mov
mov
inc
sbb
adc
mov
and
orl
sbbl
orl
mov
mov
mov
xor
or
sub
imul
mov
adc
mov
subl
sub
mov
movl
sbb
mov
adc
orl
orl
cmpl
ja
jmp
pushl
push
push
call
lea
mov
mov
mov
mov
jmp
xor
xor
and
in
lock
ljmp
mov
push
add
es
mov
test
clc
mov
push
mov
xor
rcrb
adc
inc
ret
xor
push
mov
sub
dec
popa
cmpsl
mov
cs
dec
scas
stos
lret
pop
idivb
sub
lods
xchg
sub
and
pop
xor
loopne
fs
repnz
fmul
mov
cmp
ror
jno
out
mov
dec
lahf
add
push
stos
lock
fucomi
addl
or
nop
sbb
scas
xchg
in
dec
inc
jg
jp
lahf
inc
sbb
jecxz
pushf
sub
mov
mov
sbb
lods
dec
insb
rcrl
rcl
sarb
test
add
je
jg
imul
xchg
mov
movsb
sahf
xchg
push
push
sarb
xor
jns
fcompl
inc
xor
outsb
xor
rclb
or
add
rcl
jbe
lods
movsb
mov
nop
clc
and
push
fcmovnu
jecxz
popf
push
cmpsl
push
lods
jne
sbb
push
pop
jmp
xchg
or
iret
lret
adc
orl
pusha
jo
lret
dec
mov
scas
sub
in
cmp
loopne
pop
ret
jge
inc
outsl
push
pop
pop
ret
jle
push
push
sub
lds
jbe
and
push
subb
mov
std
mov
ja
inc
or
push
movsl
cmp
rolb
dec
push
and
decl
mov
scas
cs
cwtl
jle
jl
fucomi
add
and
xchg
ds
adc
push
mov
mov
and
movsb
in
dec
div
xchg
xchg
jae
jge
out
dec
ret
gs
rolb
jge
test
inc
cmp
dec
cmp
out
push
cmp
or
push
add
xor
jo
imul
das
outsl
in
sub
lock
mov
push
mov
movsb
jbe
aaa
pusha
popa
or
mov
pop
ret
add
iret
dec
xchg
lds
or
inc
mov
mov
repz
icebp
int3
inc
ficomps
outsl
dec
push
leave
movsb
test
ss
scas
adc
addr16
out
test
cmp
fsts
jecxz
test
lods
add
movaps
or
loopne
test
mov
dec
xchg
fcompl
pop
cli
rcl
xor
cmp
js
ds
jle
dec
lahf
pushf
clc
jns
cmp
dec
inc
into
pusha
scas
stos
adc
adc
stc
in
mov
jne
faddl
fimuls
inc
mov
mov
adc
dec
push
xchg
loopne
push
lock
sbb
sarl
mov
rcrb
out
xor
mov
pop
pusha
pop
mov
add
adc
sti
xchg
xchg
hlt
dec
mov
push
mov
push
loope
or
dec
mov
inc
cmp
hlt
daa
dec
scas
insb
mov
sbb
and
lahf
adc
les
push
mov
xchg
pop
les
jge
dec
and
sub
cmpsl
mov
xchg
into
push
inc
xor
xor
push
xchg
cmp
pop
or
and
or
add
jge
mov
in
sbb
loop
test
mov
dec
lret
xor
pusha
mov
or
inc
hlt
mov
or
out
mov
orl
popa
loop
test
shrl
out
enter
xor
call
adc
xor
ret
add
dec
dec
pusha
pop
sbb
mov
insb
int3
mov
ret
out
imul
cmpsl
fdivr
sub
jae
jle
icebp
bound
xchg
test
xchg
iret
aam
andl
dec
shrl
push
adc
and
insb
add
out
mov
aam
dec
mov
pop
mov
jecxz
pop
jo
jmp
xor
pusha
iret
rcrb
xchg
int
je
fs
cmp
aaa
pusha
pop
aas
loop
xor
sbb
jne
xorl
mov
cltd
add
sti
pop
lcall
jb
sub
xor
test
inc
lea
in
mov
stc
aas
mov
or
loopne
stc
lret
test
jo
adc
push
bound
lock
lret
je
hlt
imull
cmp
xchg
xchg
movsl
add
cmp
adc
dec
fistl
xor
sub
je
fldl2e
fstpl
adc
call
fisttpll
sahf
mov
xor
dec
bound
ret
divb
xor
xchg
push
pop
mov
inc
cmp
xor
stos
clc
push
fcomps
mov
in
leave
jo
cli
cmp
movsb
mov
ret
cs
mov
sbb
rorb
jnp
xchg
mov
sub
in
mov
sbb
fcoml
dec
lret
push
aad
sub
add
push
mov
push
fistl
adc
cltd
xor
and
iret
fdiv
orb
lahf
jnp
inc
push
pop
dec
mov
push
gs
mov
add
mov
cmpl
jle
xor
jmp
pushl
push
call
mov
shrd
shr
mov
mov
xor
subl
xor
or
xorl
mov
movzbl
adc
movl
movl
movl
or
movl
movl
movl
movl
mov
mov
adc
movl
xor
movl
sbbl
movl
or
movl
sbbl
movl
mov
adc
mov
movl
movl
movl
movl
cmpl
jl
xorl
mov
or
jmp
pushl
pushl
push
call
movl
movl
movl
movl
movl
mov
add
mov
movl
mov
or
mov
jmp
mov
sbb
mov
jle
call
cmc
mov
inc
testl
int3
out
adc
adc
and
mov
fists
push
sti
push
inc
inc
push
pop
cmp
mov
jmp
std
push
cmp
push
je
sub
mov
or
inc
ljmp
xchg
into
xchg
lea
ljmp
push
dec
pop
and
jno
addr16
enter
pusha
mov
test
push
or
cmp
pop
cltd
mov
push
sbb
add
lea
mov
call
sbb
and
dec
mov
sbb
mov
and
lock
ds
adc
xorl
inc
adc
shr
pop
mov
ret
mov
xor
imul
ret
aaa
xor
jl
or
and
test
ret
jge
xor
xchg
sub
ret
into
or
adc
ja
lods
inc
subb
pop
inc
inc
jno
xchg
std
cmp
mov
dec
inc
test
sbb
rcl
lret
jno
add
les
inc
adc
jl
mov
pop
imul
ljmp
jo
mov
and
add
insl
fcomip
mov
pop
dec
sbb
loopne
xchg
in
fmull
cmpsl
mov
scas
pop
add
ja
icebp
jmp
xchg
sbb
dec
shll
js
cmp
mov
inc
cli
push
add
mov
lock
xchg
xchg
and
aad
jle
fisubrl
lret
dec
sub
andb
xor
xlat
addr16
in
or
xchg
push
cmpsl
mov
cwtl
popf
or
out
pop
stos
lcall
mov
popf
ja
mov
xchg
adc
imul
jp
sbb
notl
push
inc
xor
aad
and
cmc
jne
mov
std
fdivs
loopne
dec
scas
inc
insb
lock
mov
mov
sbb
xor
push
push
gs
bsr
stc
lcall
and
pop
int
mov
or
adc
jp
scas
cmp
clc
ja
lock
xchg
fadds
dec
or
les
subl
jno
sbb
cmp
adc
mov
ds
neg
idivb
pusha
mov
int3
bound
cltd
or
sti
lods
add
daa
movsb
insb
cmpsb
mov
jo
std
mov
adc
test
xchg
dec
lret
push
fldenv
xchg
mov
clc
push
inc
repnz
jmp
ljmp
in
dec
push
sub
cs
in
test
pop
stc
inc
pop
and
into
insl
mov
jne
clc
pop
or
scas
mov
and
sahf
int
das
loope
jno
fnstcw
push
xchg
jb
dec
mov
pop
or
jae
icebp
call
imul
lock
push
sbb
stos
jo
aas
aam
call
mov
sbb
cs
xchg
out
testb
js
shll
pop
stos
testl
jp
mov
test
xor
lods
es
call
test
dec
mov
fiadds
popf
jnp
jecxz
lret
fidivl
xlat
jge
push
xchg
sbb
lret
cmp
pop
mov
imul
sub
push
push
dec
in
fstps
loope
add
dec
xchg
mov
push
repz
bound
add
cld
mov
bound
fistpll
or
fdivrs
stc
dec
icebp
add
mov
mov
or
cltd
cmp
pushf
aas
adc
lcall
std
sbb
test
cmp
iret
pop
jmp
ret
jae
jecxz
repnz
push
ret
mov
mov
outsb
jbe
insl
dec
push
jmp
sub
dec
pop
cld
shll
aas
cmp
mov
sub
add
xchg
dec
or
repnz
imul
push
scas
mov
int3
cmp
and
xor
mov
out
adc
jbe
jl
shl
dec
negb
cwtl
repz
imul
fmuls
and
pop
sub
repz
addl
mov
and
aas
push
js
sbbb
repnz
push
or
mov
idivb
mov
inc
mov
push
stc
jge
inc
sub
dec
cmpsb
and
xchg
test
cmp
leave
add
test
in
sti
cmp
lods
jp
pop
bound
push
mov
aaa
pop
scas
add
xchg
jl
stos
xlat
sbb
sbb
adc
push
pop
mov
or
insl
stc
push
xchg
sub
xorl
fisubs
jae
jp
lret
andb
je
lds
clc
neg
adc
loop
sbb
sub
adc
sbb
jae
fstpt
lds
jmp
push
lods
pop
push
ror
push
fsubl
nop
jmp
rorl
jnp
xor
imul
lods
in
leave
pop
aad
fisttpll
add
aam
xchg
ss
outsb
cmpl
hlt
and
mov
cmp
insb
shl
mov
push
subl
push
andl
push
push
xorl
call
xor
mov
mov
cmpl
jb
jmp
push
push
pushl
call
xor
mov
mov
sub
mov
lea
mov
adcl
mov
or
adcl
and
mov
or
xor
movl
cmp
jne
movl
mov
mov
andl
shrd
andl
shr
cmpl
jb
orl
jmp
pushl
call
mov
mov
jmp
pop
cli
das
lds
adc
imul
out
stos
pop
jg
movsl
mov
cmc
mov
add
fldenv
ret
mov
pop
ret
pop
add
addb
and
jge
xchg
push
pop
cmc
stos
adc
ss
enter
pop
push
imul
xchg
nop
mov
out
dec
push
cltd
fdivl
std
loop
fs
movsb
hlt
fnstsw
and
pushf
test
out
dec
adc
xor
xor
add
sar
inc
xchg
mov
mov
pop
xor
mov
or
fstpl
imul
mov
enter
bound
xchg
mov
repz
std
lret
xor
out
shl
leave
andl
fcomps
sbb
in
gs
lods
mov
jmp
mov
addl
stc
pushf
dec
pop
rolb
test
enter
mov
loope
mov
pushf
leave
test
mov
lret
in
and
xchg
mov
popa
mov
mov
sti
ror
inc
adc
push
sub
lahf
nop
data16
jo
int
icebp
sub
jno
pop
mov
insb
repnz
jge
out
or
inc
pop
loope
insl
dec
imul
jnp
ret
jo
xchg
ffreep
jno
mov
and
mov
out
inc
dec
adc
in
push
jecxz
mov
push
cmp
jo,pt
sub
stos
repz
mov
mull
scas
notb
nop
lret
out
xor
iret
mov
add
repnz
pop
jns
mov
push
popa
mov
and
dec
xchg
xchg
and
xor
mov
or
test
movb
sbb
ret
sarb
mov
push
dec
clc
mov
cmp
pop
cmp
mov
inc
in
jg
imul
mov
dec
add
ss
sbb
pop
add
mov
adc
cmp
ja
add
mov
mov
cmp
and
ds
mov
push
or
std
out
sub
dec
mov
sbb
and
cmp
inc
dec
leave
mov
lods
sub
pop
push
xchg
jno
in
xchg
jmp
push
js
push
fldcw
pop
fs
jbe
sub
int
cmp
daa
xchg
pop
es
cwtl
cmp
leave
loope
testb
pop
mov
mov
or
mov
mov
dec
mov
wrmsr
xchg
mov
xchg
push
push
xor
push
pop
sbb
sbb
ds
nop
adc
loopne
and
loop
test
insb
cmp
mov
sbb
adc
repz
je
fwait
cmc
or
scas
or
dec
sbb
movsl
out
mov
fimull
cmp
mov
cmp
lcall
enter
add
clc
cld
sub
insl
pusha
icebp
jns
and
mov
mov
sbb
leave
mov
and
je
and
mov
repnz
pusha
add
mov
xchg
push
jae
shll
jmp
sti
mov
test
push
xchg
repnz
sub
jno
xorb
movsb
js
mov
fisttpll
add
mov
notb
pop
sbb
adc
aad
ret
leave
jp
mov
rolb
inc
mov
mov
cld
jno
push
and
pop
sub
bound
pop
add
inc
jmp
into
sbb
sbb
and
pop
sbb
negl
xor
or
icebp
inc
daa
and
jmp
cwtl
sbb
mov
aam
stos
mov
sub
inc
mov
mov
arpl
mov
or
lods
sub
outsl
mov
ja
scas
pop
inc
push
inc
dec
call
orl
and
cli
mov
sub
test
and
pop
std
jg
lcall
push
movsl
pop
and
rcl
mov
sbb
push
addl
nop
das
xchg
xor
in
and
fsubs
enter
adc
xor
or
ss
out
ljmp
adc
rcrl
or
scas
lret
ja
sbb
jmp
aas
cltd
pop
and
movsb
je
ja
stc
imull
dec
fidivl
pop
stos
sub
loope
dec
stc
jge
loop
cli
jl
es
scas
test
pop
sti
cmp
push
and
and
repnz
in
mov
popf
mov
test
jno
mov
enter
js
push
lods
and
and
lods
movsb
notb
andb
push
sbb
sbb
rcl
and
dec
loope
fcomip
mov
rolb
popa
sbb
jae
mov
push
in
fsubs
inc
cmp
jge
mov
or
cmp
sti
into
jb
push
gs
ror
and
pop
or
popl
gs
dec
cwtl
mov
hlt
outsl
sub
hlt
aad
cmp
jge
pop
jl
lods
ds
jnp
xchg
enter
mov
mov
push
push
mov
pop
in
roll
and
mov
movsl
jbe
push
xchg
sbb
jge
push
xor
shl
xor
xor
or
mov
mov
cmp
movl
jne
mov
movzbl
add
mov
xor
cmpl
jg
add
jmp
pushl
push
pushl
call
mov
mov
mov
shrd
mov
jmp
pop
mov
sbb
dec
andl
mov
push
push
mov
test
pusha
clc
xchg
push
push
mov
loope
mov
push
sahf
in
cmpsb
xor
outsb
pop
push
inc
adc
pop
cmp
pop
and
je
pop
aaa
mov
mov
ljmp
lock
and
arpl
fs
mov
pusha
inc
insl
jb
imul
call
outsl
fisubs
fdivl
fst
sbb
ficompl
sbb
stos
adc
sbb
xchg
in
rcll
aas
jmp
fprem1
cmpsl
iret
int
cmc
adc
jg
in
call
lods
and
jb
mov
test
sub
jae
inc
ja
addl
lret
stos
lods
mov
in
hlt
loope
insl
popa
inc
push
or
shll
iret
push
pusha
call
arpl
in
and
cmpsb
fiadds
cmp
mov
loopne
push
adc
sub
rcr
pop
bts
rolb
xchg
aad
cmp
cmp
in
and
jmp
mov
and
ret
mov
in
push
pop
iret
popf
pop
pop
push
test
add
mov
sbb
mov
push
push
movsl
add
add
mov
xchg
cmpsl
cmp
mov
jns
je
pusha
xchg
or
or
jb
cmp
mov
pop
xor
hlt
adc
push
ja
cld
cwtl
mov
popl
or
ret
je
jns
ss
fdivs
xor
cmp
fs
ljmp
enter
hlt
push
add
rcl
inc
sti
stos
pop
jmp
push
cli
cmp
sub
in
jl
inc
pop
decb
hlt
dec
xchg
cmp
mov
xchg
xchg
ss
xor
cld
insb
fwait
sti
jne
repz
mov
loope
rcll
dec
push
incb
xor
xor
sub
mov
and
inc
cmp
test
les
scas
inc
and
outsb
aam
nop
mov
sbb
aas
lds
inc
popa
pop
cmpl
sbb
mov
add
sbb
xchg
jns
adc
cli
popf
out
adc
xor
xchg
xchg
xlat
popa
inc
ja
std
mov
jo
sti
pushf
or
xor
jne
sub
pop
cmp
movsb
jo
out
pop
add
stos
std
mov
aaa
dec
sarb
jp
mov
shl
fisubl
xor
popf
or
call
lea
mov
paddsb
ret
jle
inc
pop
xor
movsb
push
jmp
je
xchg
xor
and
lret
mov
arpl
mov
js
out
out
mov
pushf
fs
dec
push
sub
xor
movsl
pushf
insb
add
sbb
jns
mov
mov
scas
push
imul
mov
in
lods
and
ud2
clc
sbb
push
push
jno
and
add
ja
lods
sub
stos
fwait
sbb
pop
cltd
sub
sar
pop
pop
mov
inc
pop
test
and
insb
add
in
jle
insertq
mov
cmp
push
inc
test
xchg
push
cmp
aad
lods
cli
notl
adc
adc
lretw
addr16
push
test
fbstp
pop
mov
sub
ficoml
xor
mov
mov
in
xchg
nop
out
fnstcw
xor
xchg
pushf
sbb
dec
in
arpl
aam
mov
pop
pop
sbb
jne
jbe
xor
fiaddl
rcl
movsb
outsb
jle
pop
das
cld
int
fs
loopne
cmp
dec
add
popf
hlt
daa
sub
and
sbb
push
mov
xor
xor
cwtl
mov
mov
mov
and
mov
repz
mov
std
fwait
ret
ja
pop
sub
mov
sub
stos
push
mov
sti
sub
dec
orb
rol
cli
imull
jg
mov
xor
int
xchg
in
dec
imul
daa
mov
int3
loopne
push
das
xlat
xchg
and
bound
cmp
pop
jmp
les
lret
loopne
add
lcall
push
or
xchg
pop
cld
fisttpl
pop
out
mov
cmpsb
mov
sub
push
mov
iret
inc
jecxz
bound
es
add
rcl
xor
fdivl
mov
in
ljmp
scas
jns
sub
pop
sub
jns
xchg
out
jp
cmp
adc
pop
mov
outsb
jmp
mov
mov
xchg
jb
std
lods
mov
xorb
push
and
repz
mov
xchg
lcall
mov
ret
fdivr
lret
stc
push
ret
and
jae
int
popf
inc
into
aas
mov
test
and
jle
jl
cltd
clc
xor
sbb
mov
popa
pushf
ret
mov
inc
imul
ss
call
push
jmp
add
add
mov
bound
out
cmp
adc
mov
ljmp
andl
push
push
pop
add
or
xchg
xchg
jg
in
jo
in
sbb
mov
add
sbb
add
jge
shr
mov
adcl
jmp
out
out
imul
push
and
jecxz
mov
cmc
mov
lret
pop
nop
pop
decb
mov
pop
mov
dec
pop
lret
inc
push
add
mov
mov
mov
adc
cvtps2pi
mov
mov
sar
jo
outsl
mov
cmc
push
cs
inc
xor
dec
sub
jg
das
cwtl
pop
jb
inc
and
push
pop
cmp
mov
outsl
push
rcll
imul
lea
push
aad
mov
fsubrl
push
icebp
aaa
mov
pop
fwait
dec
fldenv
sub
push
jns
jne
and
jge
jmp
bound
push
sub
mov
cmp
test
aaa
xor
inc
sbb
pop
movsb
inc
sahf
nop
inc
insl
nop
mov
gs
hlt
mov
sbbb
cmpsl
push
test
or
cmpsl
or
sub
mov
gs
xlat
xchg
mov
adc
lock
int
xor
mov
or
jae
push
mov
sahf
das
shrl
decl
mov
dec
movsb
iret
pushf
test
and
ret
adc
in
xchg
fcoml
and
sbb
mov
mov
xor
ja
xor
mov
jae
fs
sbb
fcomp
push
push
cmc
jae
or
mov
popa
dec
mov
rorb
imul
loope
in
lahf
mov
pushf
inc
lods
xchg
jbe
sbbl
cmp
in
das
js
mov
push
fistps
out
repnz
jnp
jns
out
aam
and
mov
test
icebp
call
xor
xor
roll
lretw
jb
mov
repz
mov
cmpb
xor
adc
ret
cmp
pop
and
push
adc
fldenv
mov
mov
dec
cmp
or
xchg
adc
cld
and
adc
popf
jno
mov
mov
pop
dec
pusha
sar
popf
ljmp
pop
mov
sti
inc
ja
int3
mov
push
inc
or
clc
popf
jl
cmpsb
and
or
repz
std
add
sub
iret
and
push
push
jecxz
mov
or
push
mov
enter
sub
xchg
xchg
xor
xor
out
mov
repnz
adc
jl
rcll
sbb
mov
sbb
out
pop
mov
aam
sahf
mov
jnp
dec
pusha
sub
popa
jecxz
call
jl
insb
fdivr
mov
sbb
les
inc
mov
xor
push
cmp
in
cmc
fldt
inc
xor
cmpsb
fnstsw
pop
dec
push
adc
out
pop
xor
pop
test
mov
xlat
cld
nop
add
repnz
test
pop
andl
mov
pop
popa
lods
pop
outsl
rorb
aas
ss
scas
and
jnp
xchg
js
ret
add
mov
push
xlat
sub
mov
pusha
sub
add
mov
leave
and
or
mov
ds
cmp
popf
lret
sbb
sbb
mov
insb
jns
add
adc
xor
mov
loop
test
fwait
sub
jle
daa
xor
push
pop
roll
jle
mov
es
add
sub
out
push
mov
xor
subl
xchg
aas
mov
sbb
mov
sub
icebp
andb
dec
pop
mov
mov
mov
pusha
and
add
mov
push
in
and
ret
gs
inc
shlb
ss
in
jge
pop
fldcw
jne
das
cmp
lahf
leave
nop
lods
push
shll
cmpsb
or
loopne
add
notl
adc
lods
add
pop
push
pop
dec
in
mov
xor
dec
push
cli
push
add
push
pop
addb
cmp
jl
dec
push
mov
gs
adc
dec
mov
mov
xchg
sti
cltd
adc
arpl
lods
or
mov
rorb
mov
xor
imul
in
sub
mov
icebp
cwtl
cmp
sub
fdivr
push
push
lods
lea
mov
test
mov
add
fstpl
movb
push
jp
andb
ja
sbb
cmp
cmp
pop
shr
testb
loopne
mov
adc
xchg
xchg
fisttpl
shrb
cmp
xchg
iret
bnd
ss
push
mov
pop
and
int
jnp
inc
out
mov
and
cmp
mov
xlat
imul
xor
xor
sub
lds
inc
dec
adc
pop
pusha
mov
inc
in
out
push
push
shrl
das
icebp
xchg
adc
enter
ret
popa
clc
lret
ljmp
negb
xor
xchg
aas
fdivl
std
ss
sbb
mov
jp
shlb
mov
fldl
or
cmp
imul
inc
pop
push
mov
mov
and
sti
xor
jmp
call
outsl
stos
inc
jmp
out
jg
scas
xor
cmc
cmc
mov
aas
aad
adc
push
cmp
mov
cmpsb
ss
insb
outsb
sahf
divb
and
ret
add
cmp
inc
mov
lds
sbb
mov
lahf
pop
xchg
mov
xchg
sub
cmp
jge
dec
xor
repnz
ja
out
jae
or
mov
aaa
dec
cmp
aas
pop
sbb
cltd
fldenv
add
in
inc
std
adc
xor
scas
cld
mov
jns
add
shll
bound
push
xchg
pop
stos
popa
cmc
ror
inc
mov
sbb
mov
mov
jp
mov
mov
loope
movsl
lahf
fldenv
sbb
sub
xor
and
pop
lods
adc
push
mov
sbb
test
sbb
or
popa
mov
lea
inc
into
imul
pop
nop
test
aad
mov
shlb
xor
cwtl
repnz
push
xchg
jmp
sub
fildl
call
pusha
mov
or
or
stos
xchg
mov
cmpsl
lock
or
push
stos
addr16
cmp
cmp
lahf
call
jge
je
cltd
push
dec
push
mov
je
lahf
jl
mov
pop
mov
test
jbe
lcall
ret
sahf
mov
in
inc
ds
in
or
scas
cltd
inc
insl
ret
push
pop
in
xchg
or
data16
mov
jae
mov
fidivs
mov
dec
inc
xlat
jecxz
xchg
sub
push
xchg
mov
inc
xchg
imull
adc
xchg
subb
inc
cltd
jno
inc
push
clc
pop
in
ljmp
mov
movsl
movsb
fdivrs
rcl
add
and
dec
xchg
push
jmp
cmp
aaa
jb
add
pop
repnz
mov
jmp
sbbb
lret
aam
push
dec
push
xchg
call
cwtl
je
sub
lret
sub
push
fdivrl
nop
add
jae
push
dec
inc
shr
lret
stos
repnz
int
jo
adc
or
jl
cmpsb
push
cmpsl
push
xor
fists
enter
xchg
xchg
push
sbb
movsl
lds
dec
pusha
mov
and
jne,pt
mov
inc
pop
stos
cmp
push
rcrb
mov
negb
sahf
aam
sub
cmp
xchg
sub
pop
shrl
add
popa
cmp
outsl
fsubl
jbe
addr16
inc
int
dec
xor
iret
iret
inc
mov
jl
into
cmp
push
pop
adc
mov
ret
dec
lds
out
sbb
mov
fisttpll
std
orl
xor
out
lcall
scas
xor
aaa
js
mov
and
iret
inc
jge
nop
mov
inc
loopne
adc
cli
pop
lret
int3
pop
ja
cmp
add
jnp
stc
dec
inc
sub
fs
and
and
add
sub
sbb
jg
xlat
dec
ret
sti
daa
pop
xchg
int
sub
sub
mov
js
stos
push
cld
jno
mov
xlat
arpl
ret
add
jo
rorl
arpl
arpl
push
out
and
dec
mov
mov
xchg
push
xor
jge
or
movsl
pushf
insb
adc
jb
mov
andb
jae
in
clc
movsl
cwtl
xchg
insb
shrb
xchg
or
loope
sub
aad
pop
mov
cmp
fisttpll
pop
pop
dec
mov
cmp
in
ja
jmp
cmpsb
mov
rcrl
jno
shll
inc
stc
pop
imul
add
sub
sarb
pop
nop
cmp
cmc
roll
xor
dec
and
or
aas
fcom
lahf
inc
test
xchg
mov
inc
jp
loope
or
icebp
popf
mov
pop
dec
inc
jl
inc
adc
push
test
push
or
jle
jno
insl
gs
dec
cltd
aas
jecxz
lahf
xchg
out
or
or
sbb
dec
lods
push
mov
sbb
inc
data16
ljmp
add
sbb
lahf
sbb
inc
scas
lods
push
test
loop
cmp
mov
jl
sub
hlt
sub
push
pop
add
add
or
or
cltd
outsl
int3
xor
xchg
dec
or
stc
xchg
and
xchg
in
cwtl
mov
xchg
jge
xchg
lcall
xchg
xor
cmp
adc
cwtl
hlt
inc
leave
mov
adc
insl
out
nop
mov
push
orl
call
in
push
add
iret
add
lret
cmc
movsl
fsts
adc
xor
enter
movsb
pop
fadds
scas
mov
or
rcrb
add
aaa
sahf
loope
inc
mov
fiadds
std
ds
std
mov
xchg
aaa
jecxz
push
out
cli
pop
dec
imul
nop
mov
and
mov
and
cmp
insb
cmp
shll
js
cmp
xor
aas
arpl
jle
mov
sbb
and
cmpsl
sbb
dec
int
jo
or
inc
pusha
cmc
add
push
in
shl
sbb
sub
jmp
jl
sbb
lds
jae
mov
cmc
mov
push
sbb
cmp
push
jns
imul
cmp
pusha
dec
pop
dec
testb
pop
shll
adc
xchg
inc
jae
mov
arpl
or
jae
xor
int3
loope
test
xchg
pop
hlt
jb
or
add
push
mov
dec
sub
fldl
es
add
std
mov
dec
add
pop
scas
shrl
add
push
push
arpl
in
pop
push
and
stos
xchg
push
jo
daa
mov
cmp
or
aam
dec
pop
adc
psraw
adc
les
sub
jne
or
in
das
mov
add
mov
rcrb
sbb
jne
adc
loope
lea
fcoml
inc
shr
mov
mov
jne
insb
dec
and
push
insl
pop
mov
insl
loope
pushf
leave
sbb
fistl
rcll
inc
mov
sti
shrb
mov
sbb
and
js
outsb
lods
sub
int
xorl
inc
clc
movsb
stos
dec
imul
sbb
pushf
pushf
sub
fmuls
or
pushf
data16
push
hlt
xor
roll
insb
push
movsl
ljmp
and
mov
insb
dec
xor
out
loop
iret
les
inc
rol
mov
insb
mov
xor
pop
pop
enter
fistpl
mov
scas
push
push
inc
shr
sub
testb
out
and
ret
pop
movsb
in
xlat
mov
mov
push
fsubl
cmc
pop
bound
pop
add
sub
cltd
scas
cmpsb
mov
lea
adc
sub
xchg
ss
sub
jle
int3
sahf
pop
ret
pop
xchg
cmpsl
jg
mov
cmp
mov
dec
pop
mov
fisubrl
pavgw
scas
adcl
fidivs
push
sbb
sbb
addr16
fstl
lret
cmp
ret
jmp
icebp
out
cmp
and
add
jmp
outsl
movsl
sub
push
dec
cmp
outsl
pop
pop
scas
lahf
jbe
pop
cmpb
inc
jne
jo
pop
or
adc
xor
and
and
in
test
jl
lret
pusha
iret
je
jmp
jmp
fdivrl
enter
mov
dec
stos
fdivrl
outsb
mov
ljmp
imul
call
arpl
add
pop
dec
shrb
sti
fucompp
pushf
xchg
js
mov
outsl
pop
and
mov
aas
push
mov
shlb
ss
xchg
pop
mov
aad
shll
pop
mov
mov
mov
lret
dec
add
daa
dec
mov
mov
xor
add
sbb
sbb
pop
or
fwait
in
sub
add
lock
lret
mov
jbe
mov
mov
adc
call
sbb
jno
sub
mov
gs
add
filds
loop
pop
xor
mov
mov
push
bound
scas
pop
fbld
sbb
push
mov
shrl
fstp
fcmovb
mov
fsubrs
add
xchg
adc
test
fs
clc
jg
push
or
push
insl
cmp
push
scas
or
in
or
cmpsl
xlat
adc
add
jno
push
inc
lret
int
pop
cmpsb
movsb
cli
xchg
jae
mov
test
cmpsl
sbb
arpl
mov
sub
in
mov
add
pop
xor
adc
sub
and
movsl
mov
outsl
shlb
repz
fistl
lahf
in
mov
shl
mov
inc
out
or
jae
scas
in
mov
mov
cmp
je
adc
cmpsl
xchg
in
xor
xchg
inc
pop
maskmovq
testl
into
lret
lcall
lock
mov
outsl
mov
stos
bnd
stos
sahf
mov
adc
sub
xor
inc
movsb
add
and
sub
ret
frstor
push
fidivs
jno
cmpb
imul
inc
movsl
vmulpd
sti
sbb
add
sbb
fcmovu
and
cwtl
ds
cmpsl
negl
pushf
adc
xchg
incb
jp
cmp
jl
je
ljmp
ficoml
inc
aam
mov
mov
push
rolb
jb
mov
dec
push
cmp
scas
pop
loope
adc
test
sub
push
push
aad
jae
jae
mov
jnp
dec
cmc
fs
pop
xchg
clc
or
xor
dec
fldenv
sti
jnp
sub
loop
mov
cmp
fstps
or
loop
daa
xchg
mov
stc
popf
outsb
pop
jmp
inc
je
mov
xchg
hlt
in
daa
push
cmp
sub
shll
shr
imul
out
fs
cmp
stos
rorb
cltd
sbb
push
push
push
inc
out
fs
aaa
adc
out
jns
in
mov
sbb
mov
mov
or
add
and
mov
mov
and
mov
cmpl
jl
xor
or
add
sbb
jmp
pushl
call
shrd
shr
mov
xor
or
add
mov
xor
xorl
shl
cmpl
jge
jmp
push
call
xor
or
mov
mov
shrd
shr
mov
mov
sub
mov
xorl
xor
orl
xor
or
shl
lea
sbbl
mov
and
mov
shrd
shr
and
mov
mov
mov
add
mov
xor
jmp
in
push
cmp
add
adc
jecxz
push
cmc
mov
sub
push
cmp
in
jmp
cltd
add
les
mov
mov
pop
inc
and
cmpb
test
mov
jge
cmp
stos
xor
pop
sub
push
mov
leave
pop
cld
inc
les
pop
cmp
sahf
xchg
imul
push
xor
pop
sbb
xor
jnp
or
je
scas
repnz
jae
mov
xor
adc
adc
aam
aam
jne
mov
and
ret
stos
sub
cmp
mov
daa
js
xchg
pop
adc
sahf
xor
push
dec
test
lret
cmp
shl
dec
adc
pop
outsl
call
pop
fisubs
data16
hlt
cmp
mov
cmpsb
mov
jo
sbb
sbb
cmp
mov
add
insl
mov
repnz
push
xor
js
inc
cli
xor
push
sbb
inc
ss
jno
pop
xlat
jmp
mov
gs
sbb
push
inc
mov
and
lahf
mov
addb
int
push
sub
inc
jp
mov
xor
scas
mov
call
faddl
sub
xchg
rcll
adc
jmp
adc
sub
daa
icebp
jb
xchg
scas
sbb
test
inc
mov
ret
scas
test
fwait
push
stc
xor
sub
xchg
sub
or
xchg
imull
leave
test
lds
pop
xchg
inc
dec
or
in
jmp
cmp
fisubl
ds
sbb
pop
jbe
and
fwait
scas
rcrb
mov
push
int
xor
pop
enter
iret
adc
jle
pop
frstor
sarb
jg
jne
cwtl
pop
lea
das
jg
or
add
and
xchg
jmp
push
and
dec
repnz
dec
jg
repnz
filds
push
jne
movsb
cltd
mov
out
andl
sbb
cs
jp
mov
push
lret
out
mov
xchg
push
sti
push
in
inc
add
mov
fwait
xlat
lds
das
sbb
jns
inc
imul
jo
adc
adc
or
and
cmpsl
jnp
jmp
mov
pop
pop
out
shll
idivl
fistl
jmp
pop
adc
xchg
jg
fsubrp
inc
loopne
or
xor
jmp
ljmp
imul
andb
mov
cmp
sub
ficomps
shl
mov
mov
data16
jecxz
push
fidivrl
pop
data16
fisttpl
adc
push
mov
push
mov
fnstcw
xchg
imul
scas
fwait
cmp
repz
lds
aas
xchg
cmpsb
push
jae
sub
fstps
mov
mov
fisttpll
enter
add
adc
loop
sbb
mov
rep
push
mov
xchg
mov
inc
push
mov
add
gs
xchg
jne
arpl
push
pusha
mov
push
dec
mov
bound
xacquire
dec
cwtl
dec
ret
push
adc
addr16
js
cmp
cli
jae
mov
fdivrp
mov
sub
into
inc
cs
inc
jo
push
cld
mov
xor
jp
in
or
pushf
fnsave
arpl
scas
mov
testb
inc
cmp
sti
out
js
mov
and
add
fldenv
clc
popa
cmp
lret
jb
dec
scas
scas
inc
clc
jl
mov
push
jp
inc
int3
lcall
pusha
pop
xlat
jnp
xor
int3
mov
repz
scas
out
jp
cmp
fistl
pop
mov
xor
xchg
or
lea
or
pop
lods
jb
jge
xor
or
aaa
fildll
movsl
dec
mov
pop
mov
sub
cmp
filds
roll
xor
inc
mov
inc
icebp
xchg
ss
sub
jmp
call
ljmp
xor
dec
cld
test
fidivrl
jb
leave
cli
jo
cli
mov
lret
jge
jbe
fwait
mov
mov
ds
sub
mov
cmp
fcmovb
lret
lret
repz
adc
push
pop
jge
mov
test
push
add
jmp
mov
arpl
push
mov
imul
cltd
cld
pmullw
test
cmp
jl
dec
rcrb
mov
fstps
aaa
fisubrs
xchg
std
rorl
and
jecxz
cwtl
jl
data16
test
out
jg
jne
imul
pop
push
rolb
mov
popa
jge
int
pcmpeqb
xchg
or
cmpsb
xchg
fistps
pusha
push
push
xchg
rol
mov
fldenv
mov
js
push
addr16
mov
sub
xchg
mov
insb
vmwrite
shlb
xchg
mov
cmp
into
sub
scas
xchg
xor
pop
loop
adc
pushf
leave
and
sub
fimuls
enter
pmaxub
mov
rol
push
push
hlt
push
cltd
lds
neg
xchg
lods
mov
adcl
xor
subl
or
shl
jmp
push
ja
outsl
jg
lock
pop
xor
push
cmc
shll
cmp
stc
mov
adc
cmp
movsl
pop
cltd
xchg
sbb
cmpsb
shlb
inc
repz
fwait
or
in
mov
cmp
cmp
loope
sbb
mov
mov
stos
lods
xor
inc
xor
lds
fld
pop
fists
inc
dec
mov
loopne
add
jle
xchg
fsubl
mov
in
outsl
inc
fsubp
cltd
cmp
shll
out
icebp
mov
in
pop
jle
pop
repnz
sbb
aas
dec
hlt
xor
jne
pop
mov
jne
cmp
div
and
inc
scas
cmp
popa
in
push
repz
inc
cli
cmpsl
sub
jno
mov
push
xchg
pop
ljmp
test
adc
lcall
ret
push
jge
adc
lds
stos
cwtl
xorl
xchg
int
bound
xchg
mov
ljmp
jge
sub
ret
stos
inc
push
pop
mov
pop
add
pop
andl
nop
jb
popf
jbe
sub
push
enter
repnz
xor
sub
xor
fiadds
scas
stc
shlb
push
xor
cmp
push
ss
fwait
push
imul
cmp
es
out
popl
es
les
daa
jmp
and
rcl
cmp
call
fiadds
add
dec
sub
xlat
jne
popa
adc
lret
aaa
imul
imul
cmp
jge
jmp
cld
jp
jne
push
int3
and
sbb
pop
out
fisubs
jno
mov
dec
pavgb
push
or
test
push
pop
pop
mov
adc
jne
or
ror
scas
mov
mov
mov
jmp
sbb
mov
into
fs
pop
or
shlb
cmpl
lret
jnp
fidivs
cmp
jns
xchg
or
jmp
adc
xor
cli
or
mov
je,pn
cmp
in
or
pop
in
pop
out
inc
stos
xchg
neg
stos
and
mov
ret
outsl
dec
push
cmp
sahf
cmp
add
sub
xchg
mull
sbb
mov
mov
and
clc
jns
adc
cmpsl
in
imul
pop
lods
sbb
enter
jle
es
sub
mov
mov
jecxz
push
add
outsb
aad
jne
outsl
aaa
xor
repz
test
jbe
ss
shll
cmp
pop
pop
scas
cmp
sub
mov
mov
and
adc
jb
jmp
push
xchg
jo
mov
push
push
or
cmp
jecxz
push
add
push
int
imul
push
fcomps
jge
adcb
adc
or
imul
jle
mov
fwait
cmp
cld
mov
and
pop
mov
or
push
sbb
testl
fucomi
outsl
imul
shl
out
aaa
and
sbbl
movsb
rorb
insl
add
jbe
ds
lods
adc
add
mov
loope
cmp
mov
test
repnz
cmp
in
mov
scas
jo
inc
out
mov
lret
popf
mov
or
jmp
les
cli
and
insb
mov
and
mov
pusha
push
cmp
adc
orb
inc
jg
pop
sahf
imul
fmul
jnp
fcom
in
ret
test
sbb
mov
rclb
jecxz
popf
lods
inc
sbb
test
es
aam
jp
mov
sbb
sub
fld
xlat
jmp
or
inc
cmpsb
jmp
filds
out
mov
sbb
fstpt
cli
pop
je
into
mov
fwait
push
in
adc
rcl
dec
out
stos
adc
outsl
cmp
xchg
and
addl
xchg
add
fstpt
jnp
push
and
rcl
fiaddl
sarb
push
rclb
push
mov
mov
xor
test
imul
add
sub
ficompl
or
cmpsl
shlb
orb
fcomp
or
imul
int
mov
aam
cmp
ds
dec
dec
cmpsl
leave
and
jg
sub
rclb
js
inc
aaa
fstpt
or
dec
pop
ret
popa
test
dec
push
and
arpl
mov
aaa
mov
xchg
movsb
jecxz
sub
std
xor
nop
lds
mov
push
push
mov
ret
push
lea
xchg
sub
sbb
mov
mov
jge
nop
mov
nop
xchg
xor
jns
das
aam
xor
xchg
repz
inc
xchg
out
repz
xor
scas
add
mov
mov
xor
or
sbb
mov
push
push
popf
pop
daa
inc
inc
jmp
or
cli
push
enter
js
sub
ds
mov
cs
sbb
push
movsb
inc
out
subl
subb
dec
cmp
inc
sar
or
jne
imul
cmpl
jle
jmp
push
push
push
pushl
pushl
push
call
jmp
sub
and
das
push
pusha
adc
mov
push
cmc
xor
dec
dec
insb
stos
inc
push
push
xor
ja
mov
mov
mov
inc
jecxz
dec
and
mov
test
sbb
mov
add
cmc
xor
jae
scas
push
pop
xor
cli
call
insl
stos
ret
pop
int
lret
sbb
sub
fimull
jl
cltd
cmp
pop
sahf
out
negb
sahf
out
ljmp
lcall
aaa
lcall
mov
jp
in
and
jae
jmp
adc
sbb
dec
pusha
repnz
xchg
add
jge
push
in
sub
arpl
inc
mov
roll
inc
cltd
clc
sub
jo
out
shrb
in
lock
push
mov
push
dec
pop
fbld
xor
out
mov
fsubs
jo
dec
mov
mov
adc
rcl
lock
adc
jno
pop
cwtl
test
stos
and
pop
cli
scas
cwtl
add
pop
sbb
aaa
imull
or
roll
pop
jnp
lahf
loop
fbld
xor
xchg
jl
bound
call
fbstp
lahf
and
les
inc
push
mov
inc
xchg
sub
addr16
lea
out
out
push
push
push
out
sbb
push
data16
push
stos
orl
pop
adc
shll
movsb
in
das
aaa
mov
andl
mov
push
inc
push
rolb
out
insl
sub
sbb
pushf
in
test
inc
add
ficoml
push
xchg
lahf
sbb
iret
enter
loop
adc
add
in
and
sti
clc
lret
or
nop
mov
fcoms
push
loope
outsb
inc
dec
xchg
lea
mov
ret
dec
out
dec
cmp
loopne
repz
repz
push
ficomps
add
call
jmp
mov
test
popa
push
dec
xor
xchg
jmp
xor
xor
dec
lret
mov
push
cli
scas
adc
aas
dec
mov
sti
fidivrs
inc
jo
pusha
dec
xlat
in
scas
and
jns
jae
pop
outsb
jg
sub
faddl
ret
jns
imul
xor
enter
shr
xor
mov
sub
push
add
out
adc
pop
rolb
insl
mov
in
sub
sub
iret
add
test
pop
jns
aad
push
adc
mov
bound
cli
or
cmp
mov
push
add
roll
push
mull
ret
notl
outsl
push
pop
sarb
jl
cmp
add
dec
mov
sbb
inc
pop
push
push
outsb
add
lret
js
imul
jns
fldt
push
jle
scas
xchg
pop
cmp
xchg
les
ljmp
xchg
add
jne
xchg
xchg
mov
mov
jne
sub
sbb
cmp
inc
dec
sbb
lea
daa
stos
pop
sub
mov
and
shr
mov
out
mov
push
sahf
and
les
jle
adc
out
imul
pop
push
mov
pop
cmp
push
pop
insb
loop
lock
xchg
mov
loope
rolb
or
js
gs
mov
inc
xor
push
adc
add
or
rclb
jnp
cmpsl
jo
leave
imul
enter
cmp
das
ret
sub
orb
mov
inc
mov
out
aas
or
shll
imul
sbb
aam
and
in
sbb
mov
and
pop
pushf
xchg
test
sbb
inc
lods
fistpll
push
pop
je
or
test
loop
xchg
xor
rorl
fs
mov
fwait
pop
sub
push
imul
lock
cmp
add
jl
hlt
aad
lcall
jmp
sub
and
mov
sub
fisttpll
in
or
mov
sub
rclb
incb
adc
loop
je
sbb
enter
mov
push
xchg
ljmp
inc
mov
cmp
into
push
xor
fs
mov
push
inc
sub
mov
inc
sbb
add
movsl
gs
das
pop
pop
pop
adc
das
in
cs
push
and
mov
and
faddp
int3
outsl
jo
xor
arpl
dec
fisubs
cltd
pop
or
add
cmp
sti
movsb
push
mov
sbb
and
lock
popf
pop
lcall
imul
pop
loope
shll
je,pt
daa
popf
and
daa
push
adc
out
push
mov
pushf
jno
inc
out
jnp
xchg
aad
sub
jmp
cmp
push
sub
dec
jb
cmp
stos
mov
fdivp
push
in
add
adc
mov
inc
push
add
adc
or
xor
xor
mov
mov
shrd
mov
mov
xor
shr
mov
sub
mov
andl
xor
or
shl
sub
mov
movl
cmp
mov
jg
xorl
mov
xor
add
or
mov
shrd
addl
mov
adc
mov
xor
shl
andl
xor
subl
or
addl
shr
mov
cmpl
jbe
adc
jmp
push
call
mov
mov
mov
shrd
shr
mov
sub
mov
mov
xor
xor
or
subl
shl
jmp
mov
xor
into
rclb
cmc
mov
test
stos
orb
cmp
fmul
cmpb
pop
push
xor
stos
dec
cli
add
xor
sbb
mov
xchg
sahf
in
nop
mov
sub
insl
adc
je
cli
insb
shrb
scas
rcrb
sbb
cmp
xorb
push
xor
xchg
mov
jne
push
scas
outsb
into
sub
or
mov
call
xchg
out
lret
mov
rclb
inc
jb
pop
xor
dec
out
loop
mov
jae,pn
pop
in
push
shll
mov
cmp
mov
mov
push
mov
popa
ret
repz
push
std
or
pop
push
sbb
test
pop
rol
xchg
xor
les
test
pop
push
add
cwtl
enter
leave
cmp
and
call
xchg
xlat
xchg
test
popf
mov
icebp
cmp
pop
sbb
mov
jae
and
shll
mov
push
gs
cs
lcall
fcoms
xor
sbb
push
out
mov
mov
cwtl
hlt
arpl
sub
pop
mov
mov
mov
fsubrs
leave
pop
adc
mov
xchg
and
push
sub
fstpt
lcall
pop
movsl
jns
dec
movsl
inc
out
mov
pop
fimull
jge
fildll
and
xlat
lahf
inc
mov
mov
cltd
or
decl
mov
or
pop
add
fwait
aas
out
mov
push
int
je
add
xchg
sbb
xor
adc
add
cmc
lcall
jg
mov
mov
mov
stos
das
pop
mov
pop
mov
inc
push
fldcw
stc
fmull
push
push
pop
aaa
adc
or
adc
nop
jg
dec
out
jp
out
push
pop
or
stos
or
mov
pop
xchg
inc
test
test
pop
adc
pop
pusha
mov
inc
mov
outsl
push
cmc
and
rcl
mov
movsl
push
inc
movsb
fcmovu
in
xor
and
mov
jo
loop
pop
std
mov
and
jmp
mov
bound
es
negl
sub
inc
addb
sub
mov
mulb
adc
jge
test
addr16
push
jbe
push
movsb
test
aam
test
leave
dec
gs
inc
test
fnstcw
cwtl
fisubl
orb
ja
mov
add
clc
or
pcmpeqb
sub
xor
dec
and
cmp
dec
inc
push
cltd
lock
push
pop
sti
lret
xor
mov
mov
loope
insl
jno
xor
movsb
sub
pop
testb
popf
adc
inc
in
ds
add
int3
xchg
sahf
mov
cwtl
cmp
ljmp
in
mov
std
mov
aas
pop
mov
pop
add
cmc
mov
cmp
aad
xor
mov
lahf
hlt
dec
push
adc
mov
sahf
jnp
push
jns
jp
adc
fnstcw
scas
push
inc
test
ds
mov
sbb
lcall
data16
xor
xrelease
sar
lods
mov
popa
loopne
negb
fucomi
and
sub
sub
fwait
push
mov
nop
movsl
nop
aam
and
mov
or
mov
dec
and
mov
and
jno
les
sbb
push
sbb
inc
hlt
xor
jp
cmp
paddusb
mov
xchg
xchg
push
add
loop
fdiv
int
fptan
pop
sbb
push
leave
in
lahf
or
cmp
arpl
cs
cmp
xchg
or
or
std
ss
aas
cltd
aaa
push
mov
out
subl
insb
dec
lret
push
xor
pusha
dec
lods
cmp
mov
jmp
loopw
mov
loope
adc
daa
rclb
lds
cltd
xor
jg
sbb
mov
sbb
pop
mov
test
cmpsl
popa
enter
lret
into
aam
les
mov
sbb
fsubrl
cli
clc
je
or
mov
add
das
call
insb
jecxz
jne
jge
icebp
xlat
mov
in
imul
push
push
repz
mov
int3
push
or
mov
pop
test
mov
adc
mov
cltd
dec
mov
mov
sub
add
ret
clc
js
pop
mov
sub
bound
sub
ficoml
add
add
aas
mov
sbb
mov
jo
lahf
aaa
aam
add
imul
jmp
push
lock
paddd
loop
sbb
cli
outsl
rcrl
pop
pop
pop
adc
rorl
adc
test
cmp
push
mov
scas
test
adc
ss
or
pop
lahf
je
xchg
negl
add
push
or
setl
pop
sbb
out
mov
cmp
add
pop
shrl
mov
aam
add
sub
add
adc
add
pop
add
jmp
or
mov
mov
addl
shrd
subl
mov
mov
xor
subl
shl
subl
xor
or
shr
cmpl
ja
dec
jmp
pushl
push
push
pushl
push
push
push
pushl
call
mov
mov
mov
mov
shrd
shr
mov
cmpl
jl
sub
jmp
push
call
mov
mov
xor
xor
or
shl
add
add
xor
mov
adcl
mov
shrd
cmpl
jg
adc
jmp
push
push
call
shr
mov
mov
xor
shl
xor
or
xor
mov
cmpl
ja
mov
sub
jmp
push
push
push
pushl
call
movl
mov
jmp
add
mov
push
or
lods
jnp
repnz
cmp
cmc
mov
lahf
cs
xchg
inc
int
xchg
je
pop
mov
rol
push
xchg
int3
pop
push
gs
insb
inc
adc
test
movsl
mov
pop
sbb
enter
push
imul
sbb
jbe
fstpl
push
mov
int3
inc
xlat
pop
sbb
xchg
ret
xchg
lea
and
and
add
lds
add
push
xor
push
les
mov
pop
cmp
pop
push
push
out
or
scas
cltd
jge
pop
mov
cmpsl
or
push
add
xor
and
xorl
mov
stos
xchg
jbe
jae
leave
daa
testb
sbb
js
movsl
fs
addr16
add
mov
sahf
daa
repnz
adc
fwait
mov
aam
xchg
leave
dec
lds
jecxz
bswap
iret
push
xor
jp
xor
mov
xchg
int
pusha
hlt
pop
mov
insl
lock
adc
dec
dec
mov
push
xor
ret
sbb
mov
popf
out
enter
pop
pop
pushf
imul
xor
and
sub
out
cs
dec
cmpsl
dec
xchg
fsubr
and
mov
xchg
jbe
outsl
jmp
in
or
sub
cwtl
pop
mov
xor
in
jp
and
pusha
or
js
lcall
jmp
mov
aaa
add
sub
xlat
popa
inc
adc
movsb
xor
mov
hlt
lret
add
add
movsl
push
add
cmp
sbb
scas
lds
xor
jmp
movsb
lcall
gs
cwtl
xor
dec
xacquire
mov
daa
pusha
mov
test
sub
sub
mov
aam
mov
adc
hlt
hlt
mov
sub
ljmp
out
movsl
add
sarl
in
push
xor
lods
filds
or
bound
stos
mov
push
cmpsl
xorb
cmp
lods
outsl
pop
jge
mov
pop
icebp
inc
push
mov
rorb
mov
adc
test
fdivp
mov
out
sbb
xor
and
sbb
add
data16
push
jne
cmp
test
and
pop
div
inc
jle
inc
mov
push
call
sub
das
fisubl
add
call
sahf
lods
sbb
loope
or
and
add
jmp
loop
icebp
ds
mov
pop
jns
lods
mov
xor
scas
scas
lea
jecxz
jne
orb
cmpsl
in
leave
cs
mov
gs
jle
js
sbb
ret
fidivs
xor
mov
sub
movsl
stos
imul
aas
jle
out
sarb
or
add
cld
jns
sbb
jmp
jge
jmp
idivb
gs
sar
dec
inc
js
int3
mov
repnz
jp
stos
popf
imul
xchg
and
orb
mov
lahf
in
jmp
mov
sub
clc
lods
cmpsb
mov
lcall
fdivrp
test
mov
cld
push
cmp
roll
adc
sahf
cmc
fsts
dec
adc
loope
call
and
nop
mov
call
movsl
lcall
xlat
mov
pushf
xor
es
fistl
ja
ret
cmp
add
idivb
rorl
pop
push
adc
pop
add
xchg
mov
sub
pushf
jge
jns
repnz
cmc
cmp
mov
sub
sub
and
xchg
sbb
mov
sbb
inc
sbb
and
rcll
repnz
test
mov
and
jmp
push
or
jp
fnstcw
ljmp
cmp
cmpsl
cmpsb
aas
adc
pop
movsl
in
clc
jecxz
cmc
movsl
jo
das
sub
arpl
push
popa
or
cmp
cmp
and
xor
xchg
stos
and
fst
mov
dec
jmp
loop
xorb
mov
add
ficompl
repz
lods
adc
xor
pop
sbb
bound
pop
mov
test
pop
pop
mov
out
or
cltd
cmp
test
xor
orb
and
mov
maskmovq
test
sub
sahf
insb
sar
sarl
and
and
inc
jle
es
call
sbb
push
jmp
adc
aam
push
jbe
js
in
stc
adc
inc
mov
aas
popa
aas
int3
adc
xor
lods
mov
mov
loop
rorb
jns
mov
js
movsl
xchg
xchg
dec
mov
imul
daa
cmp
outsb
inc
movsl
adcb
dec
mov
jo
inc
repnz
add
pop
sub
subl
or
icebp
inc
jbe
sbb
orl
adc
lods
into
mov
neg
mov
and
jl
dec
int
repz
or
sti
and
add
lcall
mov
nop
lret
sub
adc
inc
aam
inc
loopne
xchg
push
mov
inc
lock
xchg
push
mov
cmp
add
xchg
add
add
add
add
lret
adc
jmp
pushl
push
push
pushl
pushl
call
movl
mov
mov
mov
shrd
cmpl
jge
or
movl
jmp
push
call
shr
mov
mov
xor
shl
xor
or
lea
add
mov
and
mov
mov
movl
shrd
cmpl
jbe
or
jmp
pushl
pushl
call
shr
mov
mov
jmp
adc
nop
xor
cmp
and
cmc
cmc
mov
sub
mov
dec
aam
cmpsl
outsl
xor
aam
inc
test
je
je
lods
push
nop
lss
lret
sahf
mov
jno
xchg
push
adc
jge
sub
mov
sbb
sub
or
movsl
push
sbb
test
sub
xorl
out
mov
fcom
arpl
jp
loopne
add
jo
hlt
dec
into
pop
imul
xchg
hlt
pop
fs
inc
sbb
fldenv
inc
inc
ret
xor
repnz
mov
pop
shrb
test
sub
cli
popf
mov
jle
mov
aad
pop
push
dec
xchg
or
mov
inc
imul
adc
mov
jecxz
pop
sarl
movsl
hlt
lds
push
dec
test
sti
shrl
add
test
out
pop
mov
adc
mov
mov
loope
lock
loope
xchg
xor
xor
das
out
and
add
sub
jmp
repnz
out
int3
xchg
cmp
das
adc
xor
push
xchg
push
imull
test
test
jl
repnz
push
lods
roll
int3
scas
testl
or
adc
adc
jle
sub
xchg
push
inc
lods
mov
call
mov
pop
clc
xchg
mov
movsb
imul
jl
fwait
cmc
push
pop
stos
loope
jo
imul
add
add
mov
into
hlt
cli
or
icebp
jle
sbb
out
fwait
lds
pop
xor
or
inc
cmpb
push
rolb
or
jb
mov
stc
je
arpl
loop
out
mov
ds
mov
cmp
cld
fdivrs
cmp
lods
nop
and
dec
ljmp
sbb
jp,pt
xor
in
xor
sub
insl
mov
mov
sahf
cmove
movsl
or
mov
jns
test
iret
xor
push
sti
bound
jl
into
std
mov
aaa
jle
and
pusha
xchg
std
mov
pop
sbb
jb
pop
cwtl
lret
ds
insl
jl
repnz
push
dec
xor
mov
push
arpl
stos
iret
leave
rcl
cmp
loopne
adc
sub
mov
je
shl
cmp
push
inc
movsl
test
nop
jp
test
cmp
jp
insb
pusha
outsb
sub
fiaddl
xor
sub
push
ljmp
test
xchg
xor
or
gs
and
and
insb
mov
aam
mov
pushl
inc
cmp
cmp
arpl
sbb
mov
dec
sysenter
dec
clc
inc
in
std
nop
fadd
adc
fcomps
add
jp
push
cmp
arpl
add
add
sub
push
jo
pop
mov
cli
inc
adc
adc
rorb
dec
aam
test
stos
stos
cmp
daa
dec
scas
cmp
fildl
lret
adc
loopne
cmpsl
mov
inc
jb
out
andb
mov
push
inc
data16
fistps
fmuls
mov
fisttpl
es
popl
and
int3
lret
insl
dec
scas
cmpb
jb
sub
inc
mov
jbe
in
mov
dec
jecxz
les
or
out
test
shr
leave
mov
fistpl
dec
dec
inc
lds
insb
cmp
imul
aas
stc
clc
sbb
add
shrb
sbb
pop
pusha
insl
cld
inc
stc
jmp
inc
sahf
jmp
in
enter
int
push
mov
xor
jp
cmpsb
sub
pop
inc
or
andb
jmp
adc
mov
pop
pusha
or
imul
out
inc
cmp
es
mov
mov
adcl
fwait
leave
mov
lcall
pop
or
xchg
mov
jbe
sbb
in
pop
clc
out
loope
mov
xchg
mov
mov
repnz
repz
xor
idiv
jl
mov
test
hlt
adc
xor
js
mov
mov
ja
pop
lds
or
mov
push
mov
mov
sbb
jb
jns
nop
pop
addr16
je
push
mov
adc
jge
adc
mov
mov
fwait
lods
mov
sub
cmpsb
mov
bound
int
nop
xchg
push
push
pushf
movsb
data16
inc
and
aas
adc
xchg
cmp
sbb
jo
int
jno
push
call
popa
shlb
mov
and
xor
or
jns
mov
inc
jnp
inc
cltd
mov
xor
pop
test
inc
jns
mov
pop
adc
es
xchg
add
pop
push
pop
xor
or
xor
push
lods
aad
cli
out
outsl
cmpsb
aaa
xchg
fadd
dec
add
and
add
xchg
jl
pop
dec
loope
loopne
and
cmp
add
pop
mov
out
push
loop
sub
sub
xchg
shl
mov
xor
addl
xor
or
cmpl
jg
andl
jmp
pushl
push
pushl
call
mov
mov
xor
mov
jmp
repnz
push
adc
adc
mov
fwait
int
or
cmc
cmc
mov
jle
scas
mov
aam
push
jl
push
fcmovnbe
cmpsl
cmpb
dec
jp
pop
or
push
imul
xor
fs
or
jns
sbb
sub
insl
jl
icebp
push
cld
xor
mov
iret
add
dec
jmp
push
sub
xchg
mov
lret
inc
xlat
data16
or
lret
or
imul
test
test
cmpsb
mov
je
popa
mov
sbb
out
and
lahf
repz
scas
lahf
outsb
stos
in
pop
sub
outsl
mov
mov
adc
ljmp
sahf
mov
es
pushf
in
je
in
pop
leave
sahf
repnz
pop
push
cmpsb
mov
mov
inc
xchg
ret
ds
cmp
cmc
sarl
push
pop
int
test
cmp
imul
lds
out
aaa
cmp
fidivrs
in
xchg
data16
xlat
iret
mov
jecxz
add
add
inc
lretw
mov
push
mov
dec
or
xchg
outsl
pop
xchg
cld
push
push
push
mov
lahf
sti
iret
outsl
adc
ret
es
or
sub
lret
push
cwtl
xorb
ss
ret
and
sbb
test
sub
fidivrl
xchg
ret
sub
mov
pop
add
int3
fdiv
movsb
rcrb
or
mov
jl
stc
jmp
or
xchg
rcrb
jb
xor
dec
cmp
mov
mov
mov
outsb
fldenv
xchg
push
pop
jns
jne
and
mov
ret
cs
insb
push
cwtl
fildl
outsl
push
mov
es
shrb
out
mov
and
mov
rorl
xor
mov
loop
fcmovnu
adc
cmp
jmp
fists
fisttpll
popa
sub
pop
sub
jl
xchg
dec
push
push
push
sbb
jge
hlt
in
add
jnp
gs
rol
mov
hlt
cmc
lret
shll
xor
sti
mov
sub
lock
stc
pop
roll
sbb
cs
xor
dec
dec
push
add
cmp
push
sub
push
je
and
lcall
stos
push
fs
orl
cmp
jne
rolb
dec
inc
pop
pusha
loop
dec
shll
js
jl
xchg
push
int3
cmp
xchg
cmpsl
shlb
adc
push
xchg
cmovbe
popf
lock
or
fsubrs
adc
lret
repz
arpl
mov
mov
lcall
repz
cmc
in
pop
mov
hlt
push
or
cmpsl
imulb
imul
movsb
test
or
push
test
cmp
lret
mov
loope
xor
xchg
xor
xchg
mov
aad
dec
popf
mov
jge
xor
fwait
pop
pusha
pop
sbb
rcrl
mov
push
inc
icebp
pop
inc
cmp
and
add
outsl
aaa
fsts
enter
lret
out
dec
push
cmp
xor
add
repz
cmp
popa
adc
stos
insl
fildll
adc
movsb
scas
mov
jge
jmp
pop
cmpsb
roll
sbb
push
call
jae
sbb
dec
push
xchg
push
popf
push
sub
xchg
jae
xchg
cmpsb
ret
or
jmp
mov
sub
stos
daa
cmp
sbb
push
or
outsb
cmp
adc
mov
aaa
test
fisubs
mov
xchg
push
or
fnstcw
out
pop
into
or
or
pop
or
xchg
inc
je
or
repnz
into
mov
xchg
cmpsl
popf
inc
hlt
loopne
cmc
adc
sbb
dec
gs
add
inc
adcl
addb
inc
xor
ss
xchg
sbb
adc
loope
sahf
jp
in
aaa
jecxz
or
inc
add
adc
out
adc
out
xor
into
push
aam
in
loop
pop
mov
int
lock
inc
inc
aaa
jl
das
subl
sbb
test
jp
out
repz
cmpsl
add
sahf
daa
ja
scas
stos
movq
sbb
imul
dec
pop
or
in
pop
and
cmpsb
ds
jmp
mov
fisubrl
stos
sarb
rcl
sbb
xchg
mov
push
xor
std
lret
repnz
xor
ljmp
or
test
aad
mov
and
mov
pop
cli
bound
fcomps
repnz
or
jmp
jp
aas
sbb
test
fld
stos
lock
pop
adc
cmp
pop
xor
addr16
push
aas
outsl
xor
lock
lret
jns
xor
shufps
cmpsl
imul
js
jl
push
adcl
lahf
shr
popa
int3
cs
xor
mov
aam
mov
rorb
inc
loopne
nop
pop
sbb
mov
cmp
cld
cmp
ljmp
std
rclb
xchg
push
cmp
mov
xchg
lods
push
rorb
fwait
pushl
jge
out
pushf
stos
push
ret
dec
gs
jbe
sub
loopne
add
enter
cmpsl
daa
inc
add
jmp
daa
inc
add
dec
loopne
adc
mov
adcl
xor
shl
xor
addl
or
cmpl
jle
and
jmp
push
call
jmp
pop
mov
or
and
loop
shl
movsl
sti
fstl
push
cmc
arpl
outsl
inc
pop
push
and
mov
stos
jb
adcb
mov
ret
cld
push
insl
sbb
loope
hlt
pushf
aad
test
sub
jno
jbe
pop
repnz
lods
jo
push
xlat
leave
xor
aaa
outsl
das
mov
sarl
jne
inc
sbb
dec
add
cmp
inc
mov
ljmp
imul
shrl
inc
dec
mov
test
and
sbb
xlat
lods
lea
popa
lcallw
mov
sbb
into
incb
in
data16
and
fxch
fwait
sarb
mov
movsb
jle
popa
jne
dec
hlt
dec
jo
jne
fs
xchg
xchg
pop
add
lods
das
cmp
flds
rcl
cli
add
inc
cwtl
rorl
xlat
cmp
sarl
push
popf
mov
jae
js
cli
inc
mov
cmc
fdivl
fimull
lds
das
mov
imul
xlat
sbb
pop
ss
lods
arpl
out
cwtl
mov
and
fdivs
mov
mov
loope
mov
addr16
enter
cmc
inc
cmp
rorl
out
js
push
or
and
sti
repnz
movb
inc
mov
sub
pop
into
pop
push
jmp
mov
fwait
pop
push
cmpsl
out
pop
sti
js
pop
test
push
pop
ficoms
out
dec
jmp
and
cvtdq2ps
lock
add
lret
stc
inc
or
and
sbb
inc
lods
jge
cs
subl
mov
cmp
mov
adc
loop
in
scas
xchg
icebp
cld
in
xor
mov
sub
ja
sbb
pop
sub
sbb
cmpsb
idivb
outsl
jle
mov
mov
xchg
faddp
mov
stos
enter
xchg
sub
call
add
jb
inc
mov
test
pop
sub
cmp
adc
mov
pop
sahf
dec
das
and
imul
mov
std
push
cmp
push
js
out
push
imul
subb
jp
xorb
fwait
ret
jge
mov
pop
add
aad
add
sub
add
push
int
adc
shlb
jne
sti
xor
pushf
dec
mov
into
popa
dec
fwait
add
cld
clc
pop
hlt
pop
rcll
adc
movsl
cmp
and
out
mov
ret
pop
and
mov
in
cmp
mov
pop
icebp
mov
sbb
mov
lret
test
out
cli
or
inc
adc
pop
cmp
jbe
pop
inc
ret
cs
xchg
push
jo
jle
xor
aaa
pop
mov
sub
data16
rcr
xor
pop
and
sub
shrb
gs
adc
out
jle
call
pop
jmp
push
mov
inc
push
push
adcl
or
test
icebp
pop
filds
pop
cmpl
pop
inc
jnp
std
lock
sbbl
sbb
mov
sbb
inc
outsb
loope
int
inc
cmpsl
mov
rolb
sbb
mov
cmc
sub
mov
sbb
arpl
mov
aam
std
das
out
xor
jecxz
dec
sti
lods
out
ficoms
sbbb
mov
gs
sub
shrb
lea
loopne
mov
stos
adc
mov
push
mov
test
push
and
into
sbb
jl
push
rorb
xchg
pusha
push
mov
nop
nop
int
out
pop
cli
mov
dec
into
std
fsubr
jg
and
mov
mov
add
int
insb
cmp
insb
lcall
ffree
push
push
xchg
stos
aas
in
mov
sbb
jecxz
mov
fdivr
pop
andb
pop
leave
out
neg
jns
test
dec
mov
stc
movq
bound
inc
mov
lea
add
xor
ds
sbb
imulb
sbb
test
test
bound
push
jnp
add
push
mov
dec
mov
scas
inc
popa
pop
mov
inc
daa
das
pop
add
jno
roll
icebp
xor
imul
dec
bound
int
push
sub
int3
push
ret
ljmp
or
clc
push
subl
dec
inc
push
aas
push
popa
fwait
idivb
aas
inc
in
faddl
and
push
insb
pushf
leave
pusha
sbb
push
sbb
push
sub
into
popf
adc
mov
hlt
xor
je
mov
cmp
test
iret
mov
scas
and
jmp
mov
pop
shrl
popa
test
xor
adc
rcl
sbb
int
outsb
ret
xchg
mov
cs
inc
test
add
pop
je
insl
test
call
adc
push
adcl
movsb
mov
inc
add
mov
mov
shrd
shr
mov
or
mov
orl
shl
not
mov
adcl
xor
xorl
xor
xorl
jmp
sub
out
fidivl
aam
or
loopne
repnz
shlb
and
cmc
mov
jns
enter
dec
popf
into
adc
jb
dec
ja
fisubrl
and
lea
loop
mov
inc
xchg
add
jb
sbb
testl
xor
cmpsb
daa
dec
inc
lock
sbb
out
mov
mov
add
xor
ffreep
sub
sub
insb
aad
clc
ljmp
leave
ror
cmc
pop
mov
cmp
jno
xor
pop
testb
cs
xchg
jg
out
lds
jns
push
rcrb
mov
pop
xor
and
xchg
fdivp
and
xchg
imulb
inc
stos
cmp
inc
mov
sub
xlat
inc
jno
stc
inc
rcll
cltd
push
ja
shrl
imul
adc
leave
sub
xchg
push
lahf
jae
fmul
gs
or
inc
lcall
fcoml
mov
in
sub
subl
mov
stos
push
or
into
adc
outsb
push
jo,pn
notb
push
fstp
xchg
dec
dec
sbb
hlt
jecxz
or
and
xor
in
stos
sbb
dec
jl
rorb
push
les
cmp
lcall
jae
adc
sub
or
mov
push
mov
xchg
cmp
and
push
iret
push
int3
or
iret
dec
bound
adc
pop
xlat
adc
fwait
mov
sub
stos
or
pop
cmp
test
mov
jae
imull
pop
movl
mov
cmp
mov
mov
pop
pop
xor
xor
and
push
mov
add
adc
int
xor
sbb
pop
addr16
insl
mov
imul
lea
in
dec
fwait
jg
xchg
mov
shlb
loopne
cmpsb
cmp
mov
lods
mov
sahf
inc
adc
cmp
mov
push
aas
sbb
or
jle
cltd
sbbb
popa
lods
push
es
scas
sub
xchg
dec
xor
and
fwait
and
mov
mov
fs
mov
push
push
dec
sbb
insb
fistps
call
enter
push
mov
loopne
xchg
js
inc
mov
mov
mov
sbb
divl
mov
dec
pop
jmp
pusha
pop
jns
addb
or
jno
aam
rorb
xchg
sbb
jle
add
fs
aam
ret
insb
pop
xor
jge
and
xor
shlb
je
mov
cltd
mov
sbb
lret
insl
lods
shr
mov
out
pusha
mov
stos
pop
cwtl
xchg
or
xor
lods
mov
ficomps
enter
jbe
adc
test
push
mov
dec
pusha
aas
cmp
int3
adc
leave
jmp
mov
movsl
popf
notb
jne
push
test
sub
movsb
mov
iret
leave
pop
out
icebp
not
jmp
xor
dec
ja
fwait
cmp
dec
lock
lret
pop
lret
dec
les
cmp
adc
cmp
jle
pop
nop
mov
outsl
add
sub
fisttps
mov
mov
into
fidivrl
lods
pop
ja
fmull
and
daa
cmp
mov
test
ss
in
rcrb
inc
sahf
mov
testl
call
cli
lea
adc
sbb
jne
jp
mov
loop
stc
test
and
stos
jo
les
push
jmp
fs
ficompl
jge
mov
pop
push
lahf
mov
fistpll
mov
lahf
dec
jnp
punpckhwd
sahf
popf
sub
dec
pushf
enter
xor
fucomp
and
imull
roll
xor
scas
mov
dec
lret
dec
mov
test
arpl
inc
sbb
stos
dec
mov
orb
inc
imulb
jno
in
gs
outsl
adc
test
mov
fidivrs
sbb
lahf
popf
out
pop
xchg
mov
ret
mov
loope
cmp
push
nop
sub
cs
xchg
outsb
jbe
fsubrp
adc
jmp
add
cmp
xor
xchg
xor
je
pop
jg
inc
rcrb
inc
lahf
xchg
jno
jecxz
lods
into
jb
xchg
adc
lcall
pusha
and
in
and
jmp
dec
lret
mov
repz
lahf
cmc
nop
movswl
outsb
dec
shrl
pop
in
mov
pop
and
adc
and
rolb
lds
or
xchg
in
and
fcoml
push
repz
adc
add
push
cmpsl
dec
lea
incl
xchg
in
out
pusha
mov
fdivp
je
sbb
sub
mov
mov
pop
add
loop
pop
push
mov
mov
jl
adc
out
mov
je
outsl
push
repnz
and
mov
or
das
push
push
mov
xchg
xlat
or
cmpsl
lret
nop
ljmp
mov
leave
inc
imul
adc
stos
shl
das
es
jbe
ja
scas
or
or
jmp
aam
sti
dec
repz
push
pop
pushw
adc
jns
int
cmc
cmc
mov
mov
xor
leave
push
aam
dec
orb
inc
mov
push
cmpsl
fdivrs
push
push
test
inc
out
and
or
cmp
mov
inc
dec
andl
shlb
scas
cmp
or
clc
stc
sub
pushf
push
test
mov
pop
fs
dec
lods
aas
lret
dec
lcall
pushf
cmc
mov
and
pushf
enter
out
mov
les
cmp
aas
push
jle
outsb
aad
int
out
xchg
mov
mov
or
cmpsl
add
addl
popf
inc
cmp
xor
or
in
xchg
add
mov
sub
sub
sbb
fwait
dec
or
mov
mov
xchg
stc
lods
and
lods
nop
loopne
push
outsl
fcmovnbe
cbtw
sub
sub
sub
cltd
stos
loopne
or
xor
lahf
cli
dec
xor
enter
insl
stos
push
xor
mov
cwtl
push
mov
loopne
dec
mov
mov
xchg
push
mov
stos
dec
fisubrl
lock
mov
inc
imul
add
insl
xor
sub
dec
xor
sbb
jge
xchg
notl
dec
dec
push
call
daa
cltd
int3
inc
sub
in
or
jbe
or
adc
lds
fmuls
push
push
add
push
sahf
mov
pop
clc
arpl
mov
imul
push
adc
in
popl
lods
or
mov
leave
mov
clc
js
sti
scas
xchg
pop
jmp
jmp
xor
xor
or
xor
dec
div
lods
push
jle
loop
shlb
bound
xor
mov
insl
out
mov
addr16
outsb
lea
inc
into
cltd
xor
clc
das
jg
pop
or
cmp
push
jae
sub
ret
jns
movsl
mov
mov
ljmp
stc
loopne
inc
xor
push
loope
fstl
imul
pop
loope
mov
test
xchg
xlat
inc
inc
adc
in
mov
pop
xchg
push
pop
mov
adc
push
fdivl
adc
or
pop
faddp
movsb
into
mov
hlt
std
les
rol
cmp
mov
lret
cmpsb
pop
aas
push
inc
call
xchg
faddl
es
inc
push
push
test
inc
add
push
sub
ffreep
mov
adc
mov
cmp
mov
pop
cld
iret
cmp
cmpsb
mov
push
popf
cmp
bound
jo
add
inc
mov
dec
leave
pop
pop
lret
sub
mov
adc
je
lods
push
imul
test
int3
movsb
xor
ja
push
sbb
popa
dec
push
add
push
inc
sub
mov
test
aam
leave
fmuls
xlat
push
adc
sbb
xor
or
test
fbld
push
fists
shll
aad
push
cli
insl
mov
push
dec
push
shll
ret
ret
cmpsl
sti
jg
sbb
lods
in
cwtl
in
push
sub
inc
xlat
cmp
and
pop
sub
adc
inc
insb
fstps
ret
pop
cli
cmp
dec
stos
stos
sub
popa
aad
xchg
dec
aaa
out
subl
mov
mov
jnp
mov
sub
mov
cmp
ficoml
push
cs
mov
jge
adc
and
lods
fcompl
sbb
inc
fnstenv
adc
xchg
sub
xchg
push
dec
rol
or
pop
test
push
fnstcw
inc
mov
movsl
dec
int
push
xor
pop
add
insb
lret
sbb
and
repz
push
decl
out
lea
pusha
jge
or
mov
inc
push
leave
and
imul
packsswb
fs
scas
ret
std
stos
push
outsl
xchg
std
subb
mov
push
into
aam
arpl
mov
jnp
insl
ret
mov
adc
les
enter
and
pop
cld
iret
mov
push
adc
pushf
adc
popa
fisttpll
add
imul
mov
mov
int
xor
cpuid
stos
loope
imul
adc
out
dec
sub
fldl
cli
movsl
dec
sub
cmc
out
cmp
test
ds
nop
pusha
icebp
rclb
xor
daa
mov
es
pop
mov
scas
test
cmp
sub
cli
xor
and
dec
add
mov
cmp
shll
push
fmulp
into
jnp
js
imul
test
out
jmp
dec
mov
mov
fbstp
jne
push
sbb
std
insl
xchg
and
out
mov
fdivrl
or
cmc
pop
test
shrb
daa
push
mov
rol
push
jo
mov
jecxz
jno
jo
inc
imul
outsl
adc
cld
xchg
call
test
fwait
movsl
sti
mov
sbb
mov
sbbl
or
subl
mov
negl
mov
sub
shrd
cmpl
jl
sbb
jmp
push
pushl
push
call
shr
mov
mov
xor
shl
xor
adc
or
lea
sbb
jmp
inc
mov
fimull
pop
add
das
test
cmc
cmc
mov
sbb
test
loope
adc
mov
cmpsl
cld
xchg
sbb
push
xchg
aaa
xlat
and
in
subb
bnd
inc
dec
jnp
xchg
icebp
call
ret
fidivrl
adc
jbe
into
xchg
mov
pop
cmp
fiadds
pop
pop
mov
inc
inc
sub
or
jne
mov
outsl
insb
lods
hlt
and
mov
lcall
fmuls
clc
mov
sbb
dec
pop
mov
arpl
fisttpl
je
das
mov
xor
jl
in
daa
aaa
add
ss
stos
ja
fstpt
jle
lods
aad
sub
lods
repnz
into
and
clc
xlat
or
dec
adc
sub
mov
sbb
scas
pusha
movsb
mov
js
and
sub
std
fnstsw
sbb
xor
cmp
in
sar
out
ds
xor
rcl
and
xchg
popf
jmp
call
or
or
in
push
mov
loopne
fisttpl
jb
jbe
and
frstor
sarl
loopne
dec
push
xor
pop
outsb
mov
sbb
les
sti
icebp
repnz
repnz
outsb
mov
or
lcall
inc
aaa
mov
lret
push
sbb
xlat
loopne
pusha
dec
pusha
std
push
push
stos
dec
jge
popfw
leave
mov
add
notb
xlat
jb
mov
xor
leave
out
dec
mov
mov
pop
push
adc
into
push
out
adc
sub
mov
push
das
sbb
jns
dec
mov
jne
iret
stc
jp
jecxz
lea
push
iret
lcall
mov
pop
xchg
cmpps
cld
xchg
in
mov
push
mov
push
repnz
fiaddl
inc
mov
lock
pusha
out
xor
xchg
idivl
js
stc
mov
mov
jle
icebp
sub
int3
fwait
imull
rorb
adc
mov
outsl
adc
fstpt
sbb
les
lods
out
xchg
sahf
mov
push
add
push
enter
cmp
xchg
jbe
shrl
loope
pop
push
loopne
ds
mov
test
out
daa
adc
cmc
out
push
std
xlat
dec
xlat
dec
mov
data16
dec
icebp
and
jge
sub
imul
jno
ss
or
lods
bound
scas
mov
int3
les
test
test
sarb
aam
neg
add
bound
popf
popa
mov
test
xorb
into
pushf
popl
das
pop
hlt
imul
jecxz
pop
loop
pop
cld
inc
mov
pop
dec
xor
lock
xor
pop
sbb
mov
sbb
or
xchg
and
scas
aad
and
movsb
lret
dec
insl
xor
adc
sub
out
mov
idivb
xor
inc
fsubrs
aam
and
mov
jmp
ljmp
mov
loope
mov
imul
pushf
out
popf
mov
popf
push
mov
xchg
hlt
insb
push
or
sar
mov
ljmp
rcl
pop
jl
inc
mov
cli
xlat
push
add
das
filds
popa
cmp
out
push
or
ret
dec
sub
jne
orl
adc
push
mov
pop
xchg
adcb
sahf
nop
dec
aaa
ret
add
xor
dec
out
and
mov
popa
dec
cmp
dec
push
scas
sbb
jecxz
es
mov
cld
fsts
insl
rorb
movsb
jne
push
mov
mov
lahf
rcr
or
inc
rcrb
and
pop
push
lods
into
daa
inc
lahf
call
pop
xchg
or
loop
scas
in
ja
dec
jmp
xlat
je
lahf
lock
dec
push
mov
test
pop
in
addl
mov
fnstcw
jb
jns
fwait
ret
lea
fisubs
inc
insl
add
in
cmp
jmp
mov
loope
gs
stos
adc
jmp
cwtl
push
sbb
pop
cmpsb
lret
clc
inc
dec
inc
ja
mov
xchg
mov
push
push
mov
pusha
loop
xor
shll
xchg
icebp
or
cmpsb
cwtl
rcrl
push
sub
dec
dec
jge
sbb
xchg
sbb
je
adc
gs
push
inc
push
pop
mov
repz
mov
jnp
mov
daa
scas
add
xor
dec
xor
and
pop
push
sub
insb
dec
pop
pop
adc
push
add
xor
mov
pop
pop
test
xchg
xchg
push
lcall
ret
pusha
lahf
xor
jecxz
push
sub
sbb
int3
movsl
mov
mov
push
test
jae
or
shlb
and
sub
int3
idivb
dec
sub
mov
xchg
xor
push
aad
and
jne
jecxz
shll
sbb
sbb
lds
dec
and
aaa
cmp
push
es
into
mov
ds
mov
mov
and
mov
mov
cmpl
jl
movzwl
sbb
mov
jmp
pushl
push
pushl
call
jmp
mov
repnz
mov
and
ds
and
call
cmc
cmc
jge
js
test
popf
dec
cmp
jmp
mov
mov
mulb
adc
push
adc
add
cmp
data16
out
pop
jae
push
pop
mov
sbb
stc
int3
dec
inc
ss
cmp
ds
mov
mov
hlt
jle
movsl
xchg
jle
test
cltd
cmp
lds
inc
lock
or
push
jne
outsl
out
inc
shll
mov
fidivs
lea
push
dec
add
xchg
pop
adc
xor
dec
mov
xchg
push
and
xchg
xchg
sahf
jb
push
pop
daa
std
ret
in
fiaddl
mov
shlb
jb
cmc
ret
jno
xchg
repz
sub
cltd
mov
ljmp
mov
pop
hlt
xchg
lods
or
sbb
out
inc
in
sub
xchg
in
xlat
jno
add
in
adc
jns
outsb
xor
dec
in
sbb
dec
ljmp
sarl
movsb
sbb
in
testl
scas
jo
dec
jmp
mov
add
xchg
in
or
call
mov
inc
fwait
dec
call
lods
aaa
sbb
adc
js
pop
popf
int3
jge
or
inc
cmp
inc
pop
fdivs
push
lock
mov
xor
scas
inc
mov
aas
cld
adc
xor
mov
mov
lret
cmpsb
sbb
push
sbb
sub
sub
sbb
and
push
mov
popf
cmpsb
std
xchg
cmpsl
mov
push
xor
jge
out
in
add
dec
mov
mov
pop
mov
mov
dec
fdivp
pop
inc
pop
lret
dec
sbb
adc
add
in
ss
stc
ds
dec
sub
shrl
or
jbe
outsb
pop
call
jp
hlt
cmpb
xor
repnz
aaa
aaa
mov
ret
jp
lock
pop
aas
ljmp
xchg
and
cmpl
pop
mov
je
pop
jbe
xchg
push
sbb
push
sbb
mov
pusha
inc
jns
cmpsb
out
pop
lret
add
push
jmp
xchg
adc
xor
sbb
mov
cmp
jae
sbb
push
das
xchg
or
xchg
popf
ret
and
aaa
adcl
jg
xchg
mov
sub
pop
cld
mov
inc
imul
xor
adc
pusha
mov
cmc
repz
fidivrs
aad
imul
pop
mov
movsb
scas
and
cwtl
fcomps
insl
stos
jmp
and
jbe
dec
cmp
inc
sbb
xchg
test
iret
enter
insl
arpl
sahf
movb
add
mov
dec
gs
xchg
daa
inc
sub
cmp
mov
int3
mov
test
test
leave
cmp
cli
cmp
sub
lret
mov
pushf
inc
scas
xchg
notl
test
or
cmc
pushf
fsubp
pushf
xor
lret
aam
in
push
xlat
scas
cld
nop
pop
frstor
jg
shl
loopne
out
sbb
sbb
std
cmp
sbb
andl
and
jg
stc
iret
jl
mov
cmp
lret
mov
in
cmpsl
pop
lcall
xor
fcmovnu
and
push
das
jp
or
stos
jg
jg
fwait
and
pop
in
xor
mov
clc
sub
pushf
popf
mov
mov
mov
or
aad
fmuls
xchg
cmpl
mov
dec
xor
lcall
repnz
fildl
sbb
mov
fucomp
or
aam
inc
or
pop
popl
add
ret
push
insb
xor
std
popa
mov
je
xlat
xor
test
ret
jp
movsb
mov
imul
inc
in
les
ret
dec
mov
dec
aad
test
loope
jne
nop
add
scas
imul
outsb
pop
jp
stos
mov
iret
cmc
into
out
adc
xor
cmpsl
test
sub
orb
movsl
dec
jl
fldt
loopne
sub
push
add
test
pop
inc
xchg
clc
scas
fldz
lahf
imul
bound
rcrl
movsl
scas
lahf
mov
imul
out
sbb
push
rcll
repz
add
mov
int3
add
daa
decb
out
push
mov
mov
das
sub
lods
dec
and
cwtl
mov
ret
test
int3
negl
cmc
popa
aaa
imul
mov
mov
insb
out
fwait
jl
hlt
mov
add
cmpsl
mov
out
adcb
addr16
fadds
aas
jge
movb
int3
lahf
lahf
into
xchg
les
mov
jge
or
test
jbe
lock
scas
bound
adcb
inc
or
movsb
mov
repz
test
rolb
mov
pop
pop
out
mov
js
cli
shrb
add
lods
enter
add
hlt
addl
xor
sbbl
shl
xor
mov
orl
xor
subl
or
cmpl
ja
xor
jmp
push
pushl
call
mov
mov
add
mov
mov
shrd
shr
mov
jmp
pop
jb
test
fnsave
into
in
das
xchg
repnz
cmc
mov
scas
and
push
filds
inc
mov
mov
adc
aas
xchg
test
ljmp
dec
jp
test
js
popf
ljmp
movsl
pop
cltd
mov
mov
pop
pop
push
mov
adc
lods
cmc
jb
pop
testl
arpl
ret
mov
add
push
sub
sti
inc
insl
sbb
or
add
jnp
movsl
sub
cli
xchg
adc
cmpsl
adc
addr16
scas
sbb
dec
mov
shrl
fldl
dec
addr16
xor
aad
dec
inc
add
jns
aas
mov
adcl
cwtl
je,pt
and
inc
jmp
dec
das
or
jno
aad
pop
push
push
cs
out
mov
xorl
xor
lods
mov
dec
stc
xor
rcrb
inc
test
jo
push
and
mov
push
movsl
adc
jmp
xchg
filds
xchg
test
jl
cmpb
inc
cwtl
mov
sti
jns
std
pop
iret
cli
std
roll
sahf
sbb
xchg
pop
ja
enter
loop
fwait
mov
adc
ds
mov
dec
push
mov
test
cs
dec
sbb
pop
mov
and
jmp
test
rorb
jl
mov
add
mov
mov
pop
cmpsl
push
mov
mov
mov
push
mov
push
scas
pop
ja
mov
sbb
pusha
std
mov
test
aaa
ret
loopne
in
cmpsl
inc
fcoml
fistpll
cmp
roll
or
mov
lds
icebp
inc
and
test
in
ds
fstpl
mov
mov
rolb
jae
push
rcl
jno
push
loop
push
cltd
mov
push
stos
adc
jmp
add
int3
lret
mov
int3
ss
cltd
ret
aaa
sub
aam
jl
xchg
pinsrw
push
jle
js
loop
fwait
sti
aad
push
sti
cmp
mov
mov
jle
scas
mov
mov
sub
je
rolb
mov
cmp
inc
in
adc
dec
gs
mov
cld
and
sbb
push
or
cmp
xorps
or
inc
stos
pop
jnp
pop
or
minps
mov
sbb
adc
ja
dec
fstpt
push
pop
add
rcrb
rol
inc
mov
xchg
pop
movsl
lcall
lods
into
filds
cmpb
jbe
add
mov
push
imul
or
fnstcw
enter
fbstp
xchg
mov
adc
adc
jmp
sbb
cmp
out
sti
subb
out
push
lret
loop
out
sub
mov
sti
jb
mov
loopne
pop
add
sbb
roll
cltd
js
dec
cli
jmp
pusha
cmpl
fdivrp
in
mov
sbb
popf
dec
daa
jl
pop
lods
and
not
fidivs
sbb
sub
and
out
out
mul
push
xchg
sbb
aaa
test
out
jmp
shlb
or
pop
jmp
lds
insb
inc
mov
ljmp
sbb
daa
js
cmpsl
es
and
jae
stos
repnz
fldt
lahf
inc
mov
negl
dec
pushf
sbb
filds
sbb
es
hlt
leave
dec
inc
fidivrs
cmp
sbb
sarb
aam
arpl
and
push
stos
sub
es
daa
sub
js
xchg
xor
stos
pop
lea
loopne
out
mov
sub
js
fwait
push
testb
pop
cmp
cmp
ret
lret
arpl
cmp
cli
mov
cs
jmp
imul
xor
inc
push
loopne
les
dec
dec
jb
hlt
fwait
es
mov
test
hlt
mov
add
push
das
xor
insl
lods
out
pop
inc
mov
insl
lea
fisttps
xchg
adc
adc
flds
dec
sub
scas
sub
imul
cmpsl
dec
dec
ljmp
enter
and
or
lret
cmp
out
push
rcrl
dec
dec
repnz
sbb
out
int3
pop
jb
shr
scas
pop
push
ds
mov
push
addr16
inc
sbbl
incl
fcmovnbe
movsl
movsb
jmp
or
xchg
jne
scas
mov
in
jnp
mov
dec
xor
rcrb
push
pop
daa
out
push
or
fcmovb
in
mov
pop
js
inc
aam
outsb
adc
mov
das
clc
inc
mov
inc
or
cmp
pop
sub
mov
aas
mov
sub
jns
aam
mov
jecxz
jns
push
mov
frndint
out
jb
xorb
add
cmp
scas
mov
jl
outsl
adc
mov
and
add
and
and
cmpsb
inc
pop
dec
nop
mov
or
jle
ss
aaa
in
incb
and
ds
rclb
out
in
pop
adc
mov
mov
andl
xor
xor
or
mov
mov
xor
lea
cmpl
jl
xor
or
mov
sbb
jmp
push
call
mov
mov
shl
orl
mov
cmpl
jl
subl
jmp
push
push
call
shrd
shr
mov
mov
xor
xor
addl
or
and
mov
addl
jmp
fsub
inc
in
inc
or
sarl
mov
das
mov
cmc
mov
popf
call
lods
in
adc
lcall
sub
stc
push
lods
mov
push
pop
idivb
cmc
out
inc
jmp
sti
popa
popl
sub
cmp
push
es
rorb
in
enter
jb
cmp
cmp
xchg
xchg
int
cmp
push
xlat
pop
mov
mov
jl
sahf
xchg
mov
adc
mov
xchg
cld
hlt
sti
lea
int
cmp
rorb
lea
sti
scas
scas
push
dec
xchg
jl
dec
push
dec
mov
js
ret
arpl
imul
xlat
sbb
xor
cmpsl
push
orb
or
or
shrl
test
std
push
or
jno
int
push
jl
xor
cmpsl
or
pushl
add
ret
sub
lret
xlat
push
xchg
mov
test
ds
mov
std
sbb
scas
sub
sbbl
push
push
push
jns
add
ret
push
sbb
xor
in
xchg
movsb
fchs
push
mov
out
jge
push
sub
sub
movsb
out
xchg
idivl
or
sbb
lods
dec
rolb
out
fldl
or
adc
shrb
stc
bound
adcb
andl
or
fdivs
xchg
sbb
cli
sbb
and
repz
stc
or
inc
cmp
scas
inc
cmp
arpl
bnd
inc
xor
cmp
sbb
mov
push
jbe
shrb
xchg
stos
arpl
xchg
add
sub
or
xchg
in
je
mov
dec
pop
jge
add
jmp
pop
enter
add
rcll
mov
xor
jae
aam
inc
loop
fcomip
pop
stc
shlb
movsl
cmp
lcall
jmp
adc
stos
push
pop
jno
cld
nop
test
cmpsl
jge
add
inc
pop
sti
mov
icebp
je
and
test
push
fmuls
lret
jo
or
pop
cmpsl
and
cld
fs
xchg
cmp
jb
mov
outsb
or
pop
jmp
add
push
mov
push
pop
add
movsl
mov
leave
lret
sub
add
and
ds
pop
fadds
cmpsl
xchg
hlt
scas
sbb
mov
push
mov
sub
push
ljmp
mov
mov
movsb
cmp
push
les
aam
cmc
mov
xlat
cmp
cmpsb
sub
movsl
int3
xchg
movsb
mov
cmc
mov
push
divb
sub
dec
cltd
dec
sti
inc
fidivrs
add
rol
pop
pushf
mov
outsl
jg
addr16
cmp
mov
lods
mov
mov
lods
arpl
outsl
cmc
or
call
in
call
pop
jg
and
ljmp
push
mov
xor
add
pop
dec
rcr
mov
sbb
cmp
adc
jae
test
lahf
cmp
test
out
cmpsb
jo
adc
das
test
pusha
push
xorb
icebp
dec
lds
jns
adc
scas
pushf
adcl
outsl
mov
bswap
popa
jbe
pop
pop
popf
xchg
push
insl
ja
or
in
jbe
aam
xor
and
mov
mov
decb
add
aad
mov
lds
hlt
mov
push
sub
test
push
scas
loop
jne
mov
adc
mov
pop
int3
imul
push
inc
cli
mov
loop
outsl
mov
xor
movsl
rorl
arpl
mov
test
repnz
pop
fldcw
xchg
sub
sbb
sbb
adc
fucom
ljmp
pop
ret
pop
cld
jae
outsl
cmp
in
out
pusha
xchg
aaa
jmp
les
aaa
ret
adc
mov
adc
mov
loopne
test
ret
add
push
out
out
mov
dec
and
scas
sub
jne
or
adc
rcl
inc
movl
xchg
mov
fimuls
sub
arpl
lds
pop
jno
mov
push
jbe
adc
mov
jmp
popf
int3
je
jns
mov
les
lea
and
pushf
adc
fistl
sub
mov
lcall
cmp
adc
push
repnz
inc
mov
fstpt
add
pop
cwtl
sub
fs
dec
test
into
jb
mov
subl
test
cltd
mov
or
mov
in
cmp
fmuls
mov
bound
pop
cli
mov
jns
lret
cs
imul
cmc
xchg
adc
jge
xchg
jnp
add
mov
push
and
sub
sbb
sub
int
xchg
test
popa
iret
aam
or
rcrl
cwtl
popa
add
sahf
test
sbb
scas
push
fld
imul
xchg
out
mov
inc
sbb
bound
fstps
pop
inc
jae
ljmp
cs
mov
pop
cmp
jl
dec
daa
mov
shl
sbbl
mov
subl
mov
adc
mov
or
orl
mov
sbb
mov
shrd
subl
shl
jmp
shll
pop
aad
inc
jecxz
pop
push
repnz
leave
cmc
cmc
mov
mov
sub
mov
push
jbe
pushf
push
xchg
pop
xlat
lahf
sar
push
mov
fildll
fstp
cmpsb
xchg
pushf
cld
inc
cmp
xor
es
nop
xor
xchg
mov
dec
lea
jecxz
outsb
das
aas
cmp
aam
dec
push
mov
pop
inc
adc
inc
xchg
jae
jb
mov
and
pusha
ficoms
mov
cmp
jl
sarl
lods
push
or
dec
pop
mov
jge
ss
lcall
cmp
testl
jge
xor
push
ss
or
ret
rcl
out
dec
inc
dec
es
and
dec
test
fwait
call
push
inc
jle
inc
xchg
dec
ja
inc
mov
sbb
sub
mov
sbbl
lret
imul
insl
push
dec
stc
cld
out
adc
clc
lret
inc
cmpsl
imul
nop
pusha
and
inc
inc
lahf
xor
vmovntpd
mov
xchg
inc
mov
dec
push
flds
xchg
xchg
aaa
xchg
jmp
lock
test
arpl
aam
lods
out
push
pop
inc
cmpsl
cmp
push
sub
sub
mov
inc
cmp
testb
popf
jno
jnp
xchg
xchg
or
pop
out
js
adc
aas
cld
jmp
dec
mov
mov
inc
mov
or
lods
lret
sarb
jno
or
pop
adc
cld
push
repnz
jp
or
xchg
push
movsl
push
lahf
stos
das
ja
in
mov
push
enter
enter
mov
xchg
push
sub
inc
xlat
clc
es
inc
test
push
test
in
mov
cs
clc
and
mov
scas
rolb
les
cmp
cmpb
push
pmaxsw
ret
xlat
sbb
push
fsub
mov
imul
mov
cs
jge
test
enter
pop
shl
jp
and
inc
mov
addr16
xchg
xor
hlt
fsubs
das
push
xchg
daa
out
adcb
dec
pushf
sbb
stos
jae
jg
cmp
inc
jg
ljmp
and
push
fidivs
jmp
adc
fsubrs
dec
sbb
and
cli
mov
je
adc
js
and
push
lock
mov
inc
mov
cmp
mov
ret
rcll
mov
sub
ficomps
jb
movsb
loopne
mov
fstps
inc
in
jno
notb
cmpsb
ffreep
jg
xchg
mov
je
imul
adc
adc
gs
ljmp
mov
arpl
dec
adc
adc
mov
mov
inc
call
ret
icebp
dec
cmp
xchg
adc
pop
test
add
sub
jo
mov
xlat
pop
rclb
and
fildll
in
movsb
mov
stc
adc
jo
dec
push
fcomps
and
pop
rcrb
cmp
seto
adc
subb
jbe
adc
jg
inc
push
adcb
mov
rcr
lret
pop
in
xchg
cltd
fisttpll
add
cmpsb
ljmp
rcl
cmp
inc
jne
scas
sbb
data16
mov
arpl
adc
imul
pushf
xor
aaa
sub
add
mov
jmp
lcall
cmp
dec
sbb
xchg
push
icebp
push
push
int
and
jg
cmp
cmp
mov
sbb
shrl
std
mov
or
fisttps
adc
popf
out
mov
xor
in
sarb
add
adc
insl
data16
inc
mov
jecxz
ljmp
aad
ror
jno
pop
add
lcall
cli
mov
adc
add
lret
lahf
or
push
in
dec
popf
je
mov
and
add
push
xchg
cmp
sub
in
push
bound
ret
jno
jo
sub
in
das
cmc
or
push
mov
sahf
sub
xchg
loop
loop
inc
xorb
sbb
stos
push
cltd
les
imul
je
cs
and
pusha
popf
jno
or
mov
sub
xor
jno
xchg
testb
or
mov
mov
or
enter
sub
mov
mov
mov
or
je
idivl
jb
adc
idiv
add
call
pusha
cmp
loop
mov
add
mov
mov
pop
ds
push
imul
es
jno
iret
gs
movsl
ja
in
je
and
lret
jl
repz
cmp
inc
loop
mov
xlat
mov
add
and
sbb
pusha
fldcw
push
dec
daa
inc
out
mov
insl
jo
xor
in
outsb
pop
clc
negb
fsts
mov
ja
lods
mov
cld
mov
lds
mov
jne
xchg
push
sub
in
cmpsl
lea
xchg
pop
adc
movsl
aaa
in
xchg
xor
sbb
jnp
sbb
je
or
sarl
and
push
int
call
subl
mov
adcl
mov
cmpl
jb
add
jmp
push
call
xor
mov
xor
or
mov
dec
orl
not
and
sub
xor
cmpl
jl
jmp
push
push
push
call
mov
mov
xor
or
jmp
bound
fdivs
movsl
push
pop
xor
push
cmc
mov
cs
lock
xchg
add
jg
or
pusha
sbb
arpl
add
jle
repnz
lock
roll
sbbb
lret
les
jmp
sbb
dec
xor
cli
cmp
ljmp
adc
dec
lret
cwtl
jb
fadds
mov
imul
xchg
adc
inc
xchg
repnz
xor
jb
std
pushf
mov
pop
insl
and
mov
push
xchg
add
negb
dec
hlt
sbb
or
fadds
call
adc
sbbb
and
and
lcall
fs
lock
ss
mov
sahf
icebp
les
mul
cmpsl
mov
ffreep
clc
rcrl
xor
jecxz
jg
mov
scas
add
jge
push
jb
loopne
rcrb
and
fwait
lods
pop
xchg
movsb
xor
addl
int
dec
pop
mov
xchg
cmp
sbb
lods
xchg
icebp
aam
lret
enter
imul
shl
xor
int3
enter
sbb
jne
bound
in
add
fildll
inc
out
cmp
xchg
lahf
testl
aas
test
inc
cmp
lock
mov
pop
add
gs
loopne
sbb
sbb
out
cmpsb
dec
fildl
inc
loope
out
dec
test
mov
sbbb
xor
mov
rol
pop
fldt
jae
and
cmp
dec
cmp
lret
into
mov
fcmovb
lahf
xor
in
mov
repz
pusha
xor
mov
movsl
pop
mov
mov
loopne
inc
or
aaa
add
mov
pushf
dec
push
push
inc
in
les
jo
cmp
push
xchg
adc
stos
mov
lods
out
lcall
xlat
cmp
xor
sub
xor
dec
scas
clc
xor
repz
adc
shlb
arpl
outsb
add
lcall
pop
sub
xchg
dec
mov
cltd
mov
cltd
pushf
xchg
int3
mov
cmpl
push
cmpsl
std
sbb
loop
adc
inc
shl
jge
mov
xchg
mov
aad
pop
clc
inc
pop
pop
cltd
sub
push
cmp
shl
cmp
push
fildl
mov
scas
insl
dec
cmp
mov
jno
mov
inc
aam
and
xchg
je
cmp
out
add
inc
mov
scas
in
jns
imul
xchg
cmpsb
xchg
int
fdivs
cmp
or
out
pusha
daa
popl
mov
pop
and
stos
pushf
inc
popf
rol
cmp
and
mov
je
ret
cmp
sti
lods
jp
add
call
cmp
and
unpcklps
cltd
sbb
outsl
sarl
adc
ret
xor
movsb
popf
mov
mov
pop
popf
mov
mov
jbe
mov
loop
dec
fwait
mov
push
cs
loopne
add
sti
mov
clc
push
imul
dec
imulb
movsl
test
push
xor
lret
into
lods
imul
pusha
loop
pop
mov
or
mov
inc
jg
mov
iret
cmp
nop
cmp
mov
and
push
call
loope
xchg
repz
jns
add
adc
stos
mov
cld
pusha
or
mov
arpl
xchg
insb
movsb
adc
xor
cmp
sub
mov
lock
sub
fcomp
dec
xchg
iret
dec
lods
and
movsb
cld
mov
popa
leave
js
mov
fistps
add
mov
mov
lds
mov
shlb
push
jl
push
scas
xlat
xor
mov
mov
shld
inc
and
pop
aas
int
adc
sbbl
in
pusha
mov
cmpsl
ds
loop
xchg
inc
cwtl
out
inc
pop
pop
jmp
mov
sbb
leave
xorl
sahf
jo
mov
pop
adc
mov
push
out
call
hlt
jmp
dec
mov
test
cwtl
outsl
xor
out
in
mov
loop
push
orb
icebp
pop
push
mov
dec
pop
push
mov
adc
leave
mov
sub
mov
dec
cmp
fs
dec
popa
jge
stos
cmp
pop
les
push
push
pop
add
adc
popf
push
jo
sahf
shrl
aas
xchg
addr16
mov
pop
fdivs
ja
js
test
inc
add
mov
cwtl
out
bound
mov
jmp
jae
nop
lds
xor
cli
mov
and
movsb
adc
add
pop
cmc
xor
dec
push
sbb
add
ljmp
cmp
inc
in
add
inc
lahf
xchg
xor
sbbl
add
insb
mov
mov
loop
cli
and
pop
mov
cmp
pop
fistps
outsl
ret
jbe
jmp
inc
in
jecxz
lds
aas
sub
je
mov
popf
nop
in
aad
add
mov
mov
shrd
addl
shr
cmpl
jg
or
jmp
push
call
mov
mov
mov
xor
mov
xor
xorl
shl
addl
mov
addl
or
mov
mov
cmp
movl
je
sbbl
mov
xor
or
sbb
mov
sub
xor
xor
and
mov
cmpl
jl
mov
adc
jmp
pushl
call
mov
mov
shl
xor
mov
mov
mov
xorl
xor
subl
xor
orl
shrd
orl
shr
orl
or
xorl
xor
incl
or
sub
mov
mov
mov
mov
xorl
xor
notl
shl
xor
xorl
mov
mov
jmp
cmpl
pop
and
inc
aaa
cwtl
ja
data16
cmc
mov
loope
mov
hlt
jae
dec
push
or
clc
jmp
cmp
push
sub
loopne
daa
faddp
mov
dec
es
ds
fmul
bound
pop
and
push
dec
sbb
and
aad
nop
movsb
out
cmc
mov
push
add
lods
stc
jl
cwtl
adc
movl
mov
sahf
dec
xchg
or
rcrl
sub
add
or
addr16
in
inc
push
jae
mov
cli
adc
out
sbb
repnz
mov
jl
notl
dec
mov
lret
ret
and
sbb
and
and
sbb
pop
clc
vpunpckhwd
scas
pop
clc
mov
shl
aaa
outsb
cmp
int3
ss
push
insl
inc
add
dec
data16
xorb
out
sbb
lret
push
mov
ds
aad
push
testl
popf
push
sub
test
push
adc
dec
sub
mov
arpl
pop
mov
setae
adc
sbb
jge
jp
mov
xchg
fs
cmp
xchg
xchg
mov
in
leave
jbe
pop
ss
lock
das
jae
push
sub
sbb
sub
addr16
fdivr
clc
mov
incb
lret
mov
aam
mov
and
mov
imul
xchg
push
mov
std
xlat
out
mov
mov
mov
mov
pusha
adc
mov
in
cmp
push
push
adc
movsb
jmp
sub
xchg
loopne
test
test
into
adc
dec
insb
mov
scas
xor
inc
inc
jl
mov
inc
mov
popa
data16
aad
jb
stc
mov
insl
insl
cmp
pop
xchg
jns
negb
lock
aas
inc
or
subl
sbb
pop
mov
pushf
loop
enter
in
adc
nop
dec
adc
outsl
cmp
sbbl
inc
sarb
fstl
inc
xor
lcall
jo
fmul
loopne
sbb
add
dec
cmc
cwtl
push
test
pushf
adc
jae
rolb
jbe
arpl
loope
push
mov
fistps
pushf
mov
aad
pop
cmpsb
out
dec
popa
and
stos
jmp
js
mov
cmc
shrb
inc
sbb
rcrb
ds
fs
mov
out
xor
scas
sub
and
nop
sbb
mov
lock
es
jl
cmp
mov
stos
outsb
or
pop
jecxz
stos
divb
push
pop
in
testl
jmp
jne
sbb
dec
jecxz
lret
lods
nop
add
and
and
mov
rcrl
pusha
fstl
dec
fwait
push
add
jl
insl
push
jl
or
sub
mov
mov
aaa
lock
cmpsb
clc
mov
mov
fs
shll
xchg
xchg
mov
push
pop
xchg
out
push
pop
lods
scas
cmp
pop
in
fisttps
inc
or
sbb
mov
imul
mov
int3
sbb
adc
xchg
test
insb
mov
je
into
lock
xor
in
fwait
icebp
or
int
movsl
movsb
adc
push
mov
pop
lods
in
in
arpl
and
or
stc
cmp
inc
aad
dec
test
mov
lock
shll
les
insb
xchg
enter
xlat
imul
cli
aaa
fldl
jg
pop
mov
and
out
cmp
jg
add
subb
jns
addb
add
add
fstpt
add
arpl
adc
push
push
loope
jg
xorl
jae
leave
into
xchg
or
repnz
cmp
inc
mov
jg
in
push
arpl
pop
test
jle
inc
mov
jp
sti
fwait
mov
sbbb
pop
mov
push
iret
pop
xor
inc
dec
mov
in
inc
push
loope
lahf
mov
push
mov
pop
add
jne
in
sbb
dec
jbe
mov
fdivrs
daa
or
int3
mov
imul
mov
icebp
mov
inc
cwtl
aaa
sahf
cli
mov
dec
fsubs
xor
call
mov
mov
push
xchg
popa
xchg
ret
orl
lahf
call
xorl
call
scas
imul
out
mov
and
mov
mov
jae
out
ljmp
stos
iret
xchg
scas
sbb
je
push
cld
xchg
or
cwtl
dec
fidivrl
fnsetpm(287
dec
dec
jmp
push
pop
xchg
bound
mov
lahf
lret
call
mov
ret
mov
mov
pop
pop
add
outsb
fucomip
or
dec
xor
or
mov
mov
jmp
lret
mov
aam
out
fildl
xor
and
xorb
sub
gs
push
mov
jmp
dec
cmp
sub
fists
outsb
stos
cmc
cmc
mov
pop
ss
lret
inc
add
icebp
jmp
xor
shl
push
cmp
cwtl
dec
push
hlt
mov
push
push
mov
inc
inc
xchg
mov
sti
cld
stc
pop
push
pop
into
es
orl
ret
and
cli
std
jbe
jl
mov
call
sbb
ss
pop
sub
jl
adc
lea
lret
jmp
js
cs
push
lahf
mov
jecxz
enter
cwtl
and
mov
aad
pushf
mov
cwtl
lret
inc
jmp
popa
lahf
sbb
jnp
pop
mov
mov
testl
into
aas
mov
ficoml
cmp
xor
cmp
in
fcmovnb
xlat
test
jns
out
push
shlb
lcall
or
inc
mov
lea
decl
pop
xor
into
mov
rorb
jne
cld
push
inc
pop
lret
cmp
aas
movsb
mov
dec
inc
push
adc
bound
jns
sub
icebp
test
outsb
lds
sbb
xor
lods
frstor
aas
and
fdivl
inc
enter
jle
adc
push
enter
jmp
and
push
pop
or
add
movsl
fwait
xchg
sahf
and
mov
stos
push
and
adc
imul
sbb
sbb
stos
leave
lds
movsb
std
pop
jp
jo
nop
xchg
sbb
fildll
out
sahf
scas
mull
and
adcl
mov
cmp
and
stc
dec
mov
sahf
jl
test
dec
imul
fisttps
push
mov
lcall
decl
inc
sbb
inc
dec
push
sahf
fsubp
push
adc
mov
cli
mov
sub
inc
mov
dec
sbb
jo
imul
call
mov
je
into
cmpsl
ljmp
mov
lods
add
mov
adc
adc
enter
aam
std
mov
addr16
clc
mov
sub
mov
insl
or
es
jl
adcl
in
addr16
int3
gs
aad
push
xchg
push
pusha
lods
aas
or
dec
sbb
adc
mov
and
lods
outsb
xchg
lock
cmp
test
jo
nop
loope
out
imul
pop
fcoms
jmp
loop
sbb
push
sub
mov
mov
addr16
das
cmpb
test
ja
mov
mov
addr16
dec
repz
fwait
mov
xchg
xchg
out
jmp
push
adc
xchg
mov
std
addl
pop
rcr
roll
and
sub
test
dec
test
sub
mov
mov
push
pop
and
dec
outsb
stc
test
mov
sbb
in
fildll
in
andl
cvtdq2ps
loopne
mov
fnstcw
sbb
jle
or
out
ss
in
das
shr
mov
fisttpll
cmp
popa
iret
int
dec
add
fstpt
push
repnz
es
fs
lret
dec
lahf
xor
pop
push
pop
inc
ja
sti
push
popa
push
dec
popf
arpl
mov
pop
adcb
out
std
mov
sub
and
in
sub
fbstp
jnp
xor
mov
sbb
fsts
cmovno
jmp
xchg
pop
sbb
stos
and
mov
jmp
stc
hlt
add
es
nop
je
jl
neg
das
adc
jno
jmp
sbb
nop
cltd
mov
push
shrb
mov
das
or
jecxz
pop
test
leave
jne
mov
inc
jbe
enter
out
cld
jbe
ljmp
sbb
cmp
cmp
inc
rol
jb
xchg
dec
mov
in
mov
pop
pop
stos
or
sbb
sbb
stos
inc
nop
test
cltd
adc
fists
mov
nop
stos
and
adc
sbbl
lds
aad
xchg
js
adc
ljmp
cltd
or
int
cli
jg
dec
cmp
clc
sbb
pop
xchg
outsb
fs
arpl
push
or
imulb
sbb
cmp
fdivrs
stos
jnp
pop
ret
aaa
mov
in
and
int3
fwait
lods
into
sub
sbb
dec
mov
popa
in
mov
test
leave
cmc
cmc
inc
in
orb
imul
fsubrl
in
pop
mov
icebp
cmpb
ljmp
test
lods
adc
jecxz
sub
cmpsl
pop
inc
into
nop
pop
sbb
jnp
in
or
loope
int3
lret
jno
inc
inc
add
jnp
sbb
leave
or
stc
cmp
mov
jmp
cmpsl
push
pusha
mov
sub
push
cli
mov
inc
les
fldl
mov
mov
shll
mov
movsb
nop
movsl
leave
pop
dec
jle
call
mov
loope
or
js
dec
xchg
fildll
rcll
fsubs
stos
lods
aaa
sub
jbe
adc
mov
xor
xor
andl
shrd
xorl
or
sbbl
shr
orl
mov
mov
or
mov
mov
or
mov
cmp
movl
jne
cmp
movl
je
movl
jmp
mov
cmpl
jb
sub
jmp
push
call
mov
mov
shl
xor
mov
mov
mov
xor
xor
shrd
xor
or
mov
mov
mov
mov
xor
shr
or
mov
mov
shl
xor
jmp
call
push
rorl
xor
lock
xchg
cmc
cmc
mov
addr16
jo
int3
pop
push
xorl
cmc
das
jno
lahf
xor
aas
or
mulb
out
jne,pt
rcrl
xor
xchg
div
push
xor
jns
dec
push
mov
push
jne
repz
pop
or
xchg
adc
sarl
mov
sti
in
stos
push
mov
mov
pop
stos
cmp
call
js
mov
mov
cs
jmp
loopne
inc
imul
sbb
xchg
ljmp
test
lods
jne
cs
icebp
call
pushf
jl
inc
mov
out
cld
mov
jp
cmp
test
out
xchg
pop
lret
bound
mov
mov
movl
mov
imul
adc
add
fnsave
sub
lret
cld
mov
movsl
inc
in
xor
loope
dec
cld
pop
inc
aad
mov
paddusb
cld
sti
ret
push
cld
mov
and
fcoms
mov
sub
lret
loopne
jl
lcall
lds
lods
jae
mov
outsl
pop
jb
xchg
xchg
xchg
mov
push
nop
aam
and
adc
jecxz
mov
stos
sub
loope
loop
xor
xor
in
sub
mov
fisttpll
xor
cmpb
mov
jmp
xor
mov
stos
shlb
xor
not
les
nop
dec
test
adc
pop
out
repz
fs
xor
and
push
jb
in
push
push
dec
and
stos
mov
xor
jmp
scas
je
xchg
decl
lds
leave
ret
lret
sbb
sti
pop
imul
sbb
insb
lret
sbb
jp
out
xchg
push
loop
into
mov
fcmovnu
push
xchg
ret
xchg
lret
push
fs
mov
in
enter
mov
mov
lock
fdivrl
movsb
xchg
repnz
pop
loop
adc
movsb
into
cltd
jp
push
dec
ss
fidivl
imul
shlb
jp
dec
dec
xchg
mov
in
pop
into
je
loopne
scas
stc
in
mov
inc
lcall
fcmovne
mov
cmp
int3
pop
enter
mov
mov
popf
cli
stc
lea
test
sti
jl
pop
pop
dec
emms
xor
iret
sarw
or
addb
mov
xor
fs
loopne
push
mov
aaa
shlb
loopne
xor
nop
test
xchg
adc
xchg
dec
iret
je
jmp
cmp
insb
xor
mov
add
push
push
jno
mov
dec
sbb
pop
rorl
sub
enter
xchg
jmp
dec
les
lahf
mov
stc
int
les
cli
test
inc
loopne
cmpsl
out
int
enter
jg
sarb
and
lods
out
fnstsw
mov
lahf
add
out
test
je
out
out
jecxz
push
data16
inc
test
or
jecxz
xchg
arpl
dec
cmp
pop
mov
es
orl
mov
int
aaa
push
jecxz
sub
pop
je
adc
xchg
lds
dec
jecxz
inc
lods
ss
mov
dec
xor
mov
mov
lcall
mov
adc
xchg
xor
push
lds
repnz
push
xor
cli
fs
push
aas
shl
mov
mov
cmpl
cld
das
cwtl
sub
loop
stc
cli
cmp
ja
inc
xor
adc
push
fists
test
imul
scas
cmp
int
mov
cmpsb
cmc
jecxz
insb
mov
stos
sub
out
ss
movsl
imul
test
cs
fstl
sub
pop
ret
rcll
pop
xchg
mov
dec
mov
pop
mov
dec
mov
pushf
aas
repz
das
test
cmp
pop
fdivl
insb
sub
mov
stc
pop
cld
jg
inc
shrl
fnstsw
cmpsl
push
mov
xor
pop
add
jmp
mov
cli
sub
addl
xor
cmp
or
aas
data16
mov
push
push
mov
vmread
pusha
jnp
std
mov
add
fidivs
xor
cmpb
andb
dec
xor
cmpsb
cld
mov
arpl
mov
jmp
lock
repz
cmpsb
cmpsb
into
test
lods
mov
fcom
xchg
mov
mov
mov
mov
test
sahf
dec
and
add
fcmovnbe
sbb
lahf
push
mov
ffree
mov
push
sbb
in
cmp
fisttpll
movsb
cltd
xchg
shr
hlt
adc
xchg
shrb
xchg
sarl
popf
and
fcompl
mov
repnz
ret
pop
push
jmp
mov
sub
or
jle
add
int3
mov
jle
fdivrl
pushf
mov
and
ja
fldenv
sub
pop
scas
int
cmp
add
pop
xchg
push
mov
mov
shrd
or
jmp
fimull
xchg
xchg
enter
adc
xchg
repnz
cmc
cmc
hlt
mov
cmpl
sbb
fs
pop
fldl
cmp
jo
data16
div
sbb
mov
daa
lea
push
xchg
dec
lret
xchg
int3
out
ds
mov
sahf
adcl
jae
lods
cmpsb
roll
outsb
lock
jp
xor
outsl
jl
hlt
inc
adc
cli
flds
push
loope
fstps
repnz
pop
pushf
or
push
jl
jne
add
ja
enter
and
imul
mov
shll
popf
js
cmc
hlt
pop
loopne
push
jecxz
sub
test
in
les
mov
fisttpl
sbb
xchg
call
and
mov
jb
jae
push
jne
xor
cmpsl
cmp
cmp
cmp
loopne
test
bound
inc
xchg
mov
sbb
push
cmp
adc
js
push
jo
push
add
jge
iret
inc
divb
outsb
je
dec
sahf
popf
sbb
incb
aad
sub
gs
add
mov
dec
add
movsl
push
push
repnz
xor
fcmove
mov
lea
int3
jo
push
jmp
xchg
scas
push
int
cmpsb
fisubl
add
dec
fcomip
sbb
aaa
gs
jle
and
xor
and
sahf
sahf
jle
or
push
shlb
enter
add
inc
lods
int
movsl
and
push
icebp
ret
out
cli
add
inc
sub
fsubp
jno
lret
xchg
daa
push
int
sahf
jmp
mov
or
inc
xor
lcall
sbb
fadds
xchg
cmpsb
dec
test
inc
jb
add
gs
mov
fldt
das
je
cmpsb
stc
fsubrs
or
ljmp
inc
rcrb
icebp
push
sbb
daa
mov
adcb
aam
sbb
out
incl
sti
jle
cld
adc
or
mov
in
fnstcw
lahf
xchg
mov
lea
data16
lock
pop
sahf
repnz
add
push
jns
std
or
aad
daa
add
outsb
mov
out
add
rorl
inc
test
pop
jo
inc
push
mov
xor
adc
mul
shlb
mov
fbstp
jbe
cld
hlt
pop
lahf
lcall
push
or
mov
mov
pop
sbb
popa
xor
mov
jno
cmc
jmp
in
imul
leave
sbb
lods
test
scas
ror
mov
shrb
cmp
or
add
adc
aaa
test
or
pop
xor
sub
mov
push
cmp
mov
outsb
xchg
cmp
push
test
ss
cltd
je
xchg
cmp
loop
or
xor
ja
lea
add
nop
clc
lods
lea
cmp
sub
ret
outsb
jo
imul
adc
loopne
dec
cmc
pop
leave
cli
push
jno
mov
cmp
js
rorl
add
and
xchg
dec
filds
sbb
sti
mov
push
in
push
lret
cmp
clc
je
push
dec
inc
pop
movsl
push
fisubrs
loope
scas
cwtl
insb
mov
xor
iret
mov
ss
dec
out
mov
mov
out
adc
pop
lock
sub
repz
xor
adc
insb
push
mov
addb
mov
sub
movsl
cli
aam
mov
or
outsb
insb
xchg
pop
imulb
scas
inc
mov
lock
testl
push
sbb
sti
lods
lods
push
sti
sti
test
rcrb
jns
sbb
jo
inc
cmp
cmpl
fmul
outsl
or
mov
mov
push
sbb
push
ds
test
ljmp
dec
xchg
inc
scas
push
xor
pop
and
xchg
cmp
cmp
xor
testl
repz
dec
hlt
enter
in
sbb
les
clc
ret
f2xm1
sbb
movl
mov
mov
out
push
mov
popl
inc
popa
mov
mov
xchg
push
hlt
imul
and
add
mov
or
icebp
test
mov
mov
pop
mov
pop
jecxz
pop
mov
dec
test
std
mov
pop
out
inc
push
jmp
popf
cld
mov
test
and
and
mov
arpl
mov
sbb
pusha
push
sbb
jns
jge
push
adc
pop
mov
or
mov
fdivrl
hlt
add
lods
mov
xchg
std
mov
sbb
inc
stos
enter
lock
outsb
xchg
fisttps
fnstenv
inc
xchg
arpl
es
loop
mov
popf
xor
and
lods
ljmp
pop
sub
mov
or
sbb
imul
jg
mov
in
ljmp
insb
jg
push
mov
nop
lock
icebp
sbb
int3
in
pop
int3
ret
ret
pop
jmp
stos
cmp
mov
pop
sbb
aam
xor
adc
rorl
insb
mov
outsl
sbb
rorb
sub
mov
push
out
pop
es
ljmp
or
jmp
sahf
push
jae
jae
and
and
jno
xor
cmc
cmc
icebp
pop
loop
inc
pop
add
and
sti
push
ss
popa
xor
cli
aaa
shrl
pop
fs
jae
mov
iret
stos
pushf
pusha
das
jmp
sbb
push
mov
push
inc
cwtl
jns
pop
andb
mov
fmuls
aam
loope
test
sbb
sbb
inc
push
ss
stos
ss
mov
movl
push
aam
mov
bnd
xchg
std
aad
outsl
pushf
sahf
rcrb
les
mov
lods
pushf
push
ljmp
iret
nop
mov
clc
mov
pushfw
mov
loope
repz
fcmovnb
fisubs
cmp
dec
fwait
lock
sbb
fsubs
clc
ror
sbb
in
lea
jne
mov
inc
mov
into
cld
test
je
xor
test
rcll
adc
mov
mov
pop
cli
adc
mov
sbb
lahf
arpl
push
lcall
loopne
rcrb
mov
xchg
mov
vcvtsi2sd
mov
movsb
or
mov
lcall
jae
data16
movsb
and
jmp
repz
sbb
push
push
inc
pop
repz
test
fwait
enter
fcmovb
jbe
add
xor
inc
xchg
gs
add
mov
es
sarl
movsb
imulb
dec
fcmovu
std
movb
mov
imul
sub
scas
push
dec
ljmp
test
inc
int3
stc
iret
push
lret
sbb
lock
stos
in
into
out
sbb
fwait
cmp
mov
stos
add
jne
andl
hlt
jae
cltd
or
jo
pop
xor
inc
out
xor
cmp
out
jle
mov
sahf
sbb
fists
inc
dec
adc
pop
clc
sbb
lods
sub
cmp
push
dec
xchg
xchg
fnsave
icebp
mov
gs
sbb
iret
in
aaa
xchg
andb
push
ss
fwait
std
xchg
sub
testb
adc
prefetchwt1
push
mov
add
xchg
mov
out
mov
lret
inc
jmp
sub
dec
ja
inc
cli
in
pop
out
sbb
xchg
hlt
in
out
lods
jmp
sbb
jnp
and
mov
jb
popf
sbb
xchg
fimuls
xchg
int3
mov
dec
pop
push
pop
mov
cmc
ljmp
daa
test
daa
and
and
insb
ds
xchg
xchg
ja
lock
adc
or
rcrl
decl
mov
icebp
lods
imul
repz
push
rcr
arpl
sbb
mov
dec
sub
sub
nop
or
bound
sbb
out
cmp
ljmp
nop
jo
mov
fdiv
loope
inc
pop
movsl
xchg
lods
inc
je
nop
aad
mov
iret
dec
iret
imul
jecxz
mov
sub
adc
fmul
pushf
inc
fsub
out
ja
inc
mov
ret
push
cmp
popf
arpl
jno
roll
je
push
lret
push
jle
or
dec
pop
dec
sahf
in
out
mov
and
in
jns
push
xor
js
push
loopne
xchg
or
xchg
pop
push
sub
and
shl
jmp
cmpsb
sbb
imul
or
ret
call
das
aad
mov
leave
push
les
push
imul
testb
bound
inc
mov
je
push
aas
mov
xor
or
aaa
adc
cltd
outsb
repnz
push
insb
in
loop
jge
hlt
sarl
das
rolb
add
push
mov
mov
loopne
inc
outsb
outsl
dec
lds
and
push
xor
or
cmpsb
dec
jecxz
xor
xchg
imulb
sub
adc
shll
jmp
inc
cmp
push
scas
add
inc
addl
pop
mov
ss
push
sub
rcrl
lods
idiv
push
shl
mov
adcl
rolb
in
je
jg
mov
cmp
push
adc
rcrb
das
add
pop
mov
push
movsb
cmp
fwait
add
hlt
lds
jno
sbb
lahf
sti
lock
arpl
ret
dec
mov
add
popf
jge
lahf
mov
addr16
cmp
pop
sub
and
xchg
aad
xchg
mov
push
rclb
xchg
test
adc
xchg
mov
call
push
ja
cld
push
inc
insl
xchg
fs
test
mov
inc
or
cmp
mov
fsubl
mov
arpl
es
sbb
std
bnd
adc
ret
cmp
push
adc
or
outsl
dec
dec
shrb
fwait
js
push
sub
xor
mov
push
add
sbb
mov
cltd
push
repnz
lea
xorb
cmpsb
xor
add
out
add
add
mov
pop
outsl
pop
notb
dec
rol
popf
add
push
fcoms
mov
mov
sbb
inc
test
imul
out
mov
dec
les
jge
add
pop
jg
cmp
sti
mov
lods
xor
mov
mov
mov
cmp
jne
mov
cmp
je
mov
mov
jmp
xor
xor
xor
adc
and
mov
push
cmc
mov
or
int
sbb
notl
mov
subb
cmp
enter
shlb
jge
das
insl
adc
inc
shrb
add
and
or
aam
out
inc
push
or
mov
or
mov
mov
lods
mov
xlat
add
roll
aaa
mov
or
repz
mov
lea
mov
ret
mov
je
loop
xor
test
mov
rcrl
xor
or
xchg
jmp
shlb
call
mov
mov
outsb
or
js
pop
inc
xor
mov
in
pop
add
mov
mov
iret
loope
stos
mov
xor
sbb
out
dec
stos
mov
outsb
insl
fs
mov
push
xchg
repz
jo
cmpsl
and
sub
mov
movsb
cmpsl
test
mov
rorb
inc
inc
mov
icebp
dec
data16
jl
jns
je
lds
andb
movzwl
ret
ss
inc
jnp
push
push
push
and
xchg
sub
add
jne
loopne
jg
sbb
data16
ljmp
cltd
cmp
ror
mov
jo
imul
jge
sub
xchg
or
sbb
xchg
adc
lock
mov
dec
stc
lds
in
aaa
aaa
call
jmp
out
aas
xor
mov
lds
adc
in
xchg
lods
daa
cmp
push
call
stc
hlt
push
push
pop
pop
adc
pop
cltd
pop
or
jge
mov
jne
mov
cwtl
fildl
dec
insl
inc
nop
mov
pop
mov
es
push
cmpsb
mov
loopne
loopne
pushf
ja
mov
mov
jnp
in
test
sbbb
cltd
cmpl
rcl
shl
jecxz
and
in
rcrl
ds
inc
adc
cmp
or
dec
test
and
mov
adc
inc
fdivp
xchg
stos
out
mov
push
fists
loopne
fwait
dec
push
mov
sarb
mov
mov
inc
mov
repnz
jo
jecxz
negb
add
push
bound
mov
mov
jno
mov
mov
dec
pop
xchg
or
int3
push
mov
insb
xchg
ss
jne
movsb
lods
mov
jle
jecxz
push
add
dec
scas
jo
outsl
fisubs
out
push
xchg
and
adc
push
nop
ret
iret
jecxz
sbb
push
cmp
lret
cltd
jle
gs
sub
dec
and
jecxz
jnp
or
sub
testl
xor
lcall
add
leave
fists
out
jae
iret
dec
push
js
rol
lods
inc
and
push
or
movb
sarl
shrl
adc
in
cmp
aaa
repz
push
cs
jne
pop
mov
shrb
adc
jne
rorl
pushl
jmp
cmpsb
jne,pn
iret
pop
push
fs
mov
sbb
mov
add
mov
dec
out
cmp
leave
mov
lret
loope
scas
inc
cmp
push
adc
push
mov
cmc
cmp
fs
mov
dec
lods
in
mov
dec
cs
fsubr
aam
xchg
stos
mov
into
int3
fsub
pop
gs
inc
lods
popa
jl
cmp
or
pop
imul
addr16
adc
adc
jae
dec
xchg
or
inc
notl
push
sbb
cmp
loop
cli
push
push
xlat
scas
xchg
sbb
aam
aas
cltd
nop
fwait
enter
ja
out
lea
cmp
stos
jnp
outsl
adc
jae
lret
and
jns
mov
pop
enter
mov
xor
sbb
jbe
mov
jle
cltd
scas
outsl
sbb
shlb
shrb
repnz
pop
dec
xor
js
bound
popf
outsb
mov
cmp
push
push
and
jne
cmp
adc
fimuls
int
aad
push
into
shl
mov
or
shlb
out
mov
pop
inc
out
test
or
pop
cmp
fwait
into
ret
ds
ret
pop
loope
scas
sbb
rcrl
test
out
bound
shrb
ljmp
jo
jbe
inc
rcll
jecxz
mov
and
out
sub
jp
jp
nop
js
repnz
sub
fistpl
lods
decl
std
or
jbe
dec
mov
mov
ja
inc
mov
xchg
add
mov
adcb
test
test
mov
mov
pop
xchg
movsb
fadd
in
push
or
in
dec
add
cmp
mov
ds
and
shlb
and
cmpsb
cli
clc
into
pop
aad
push
mov
jns
cmp
cwtl
fdivs
stc
xor
jg
sub
add
int
ds
hlt
mov
scas
jae
outsb
scas
push
inc
inc
cmc
push
cs
imul
aaa
mov
mov
lea
mov
jmp
in
xorb
jae
mov
and
adc
mov
mov
inc
or
and
dec
clc
mov
fcmovnbe
imul
jb
sbb
mov
lret
stc
pop
inc
test
mov
sahf
dec
les
adc
ja
rcrb
inc
adc
mov
push
stos
out
push
mov
jl
adc
xlat
fwait
insl
and
xchg
iret
dec
addr16
movb
daa
pop
adc
mov
sub
stc
mov
fwait
enter
fdivl
mov
and
mov
mov
movsl
add
pop
mov
mov
adc
mov
and
repz
scas
and
fbld
arpl
rcrb
lcall
arpl
xor
pop
das
jle
rcr
aad
stos
sbb
and
test
out
jp
push
mov
lahf
push
lods
dec
jecxz
pusha
mov
adc
in
sbb
mov
mov
call
mov
scas
rcl
inc
dec
scas
inc
int
and
test
mov
xor
mov
out
filds
fsts
xlat
push
mov
out
dec
sub
inc
mov
xor
add
imul
adc
test
xchg
lret
stos
mov
inc
push
cmp
mov
jge
in
cmp
add
rorl
negl
push
cli
fxch
sbb
cmpsb
mov
fs
unpckhps
int3
lcall
test
notb
insl
push
xor
js
mov
cli
fildll
or
in
inc
leave
jp
fisttpl
push
jbe
arpl
mov
inc
push
and
mov
pop
fcmovb
pop
xor
shlb
jno
pop
jb
out
pop
pop
out
pop
push
loope
outsl
xchg
cs
and
jae
insl
cld
pop
add
fwait
mov
stos
addr16
mov
cli
sbb
add
mov
fwait
imul
lea
xor
test
sbb
cmp
dec
pop
inc
xchg
and
xchg
aam
pop
mov
inc
push
lea
xchg
outsb
mov
inc
push
and
out
mov
dec
xchg
aam
loope
inc
mov
push
xor
or
in
xchg
icebp
cltd
por
push
sbb
test
mov
cwtl
pusha
out
push
push
jecxz
jbe
cli
mov
addr16
cwtl
sbb
inc
and
jle
imul
xchg
dec
push
cmp
mov
ja
jmp
movsb
jbe
sbb
scas
jecxz
pop
cmp
out
std
testb
dec
call
or
pop
sub
ucomiss
pop
mov
sbb
cli
cmp
mov
sub
mov
xchg
xlat
pop
movsl
bound
aas
sti
mov
inc
fwait
xchg
jb
cmp
arpl
out
add
inc
nop
mov
pop
push
dec
int
xchg
rep
mov
cmp
xor
or
test
leave
ljmp
lret
dec
ljmp
pop
les
push
shlb
enter
inc
mov
jns
fbstp
lods
in
push
push
pop
push
test
mov
outsb
push
sub
xchg
mov
popa
push
js
sbb
nop
out
ljmp
pop
out
xchg
popf
sbbl
das
push
lret
icebp
lock
sub
dec
mov
jl
nop
adc
push
sbb
testl
and
sbbb
enter
mov
es
adc
mov
xor
pop
dec
cltd
lcall
scas
aad
mov
test
test
stc
scas
and
sub
nop
add
sti
or
inc
insl
or
lret
sti
inc
divb
cld
loop
arpl
dec
repz
out
shld
xor
scas
inc
loope
sub
call
ljmp
mov
jbe
testb
jnp
mov
xor
lret
jecxz
add
fiaddl
fincstp
es
add
fimull
xor
pop
call
nop
mov
lods
jne
jo
and
or
fnstsw
ss
cmpsl
or
adc
in
cli
add
fisubs
mov
push
and
dec
push
sarl
or
lahf
xchg
pop
lods
test
jae
addr16
lds
xor
lcall
or
pop
xorl
fcmove
lret
fiadds
jns
add
add
fptan
cli
fisubs
push
push
cli
ljmp
mov
inc
int3
cmp
cmp
in
outsb
sub
push
popf
mov
sub
add
out
dec
inc
pop
cmpsl
mov
mov
jl
sbb
aas
mov
sbb
push
cs
fisttpll
insl
push
and
enter
dec
mov
cmp
and
jecxz
inc
jmp
dec
dec
loopne
pop
fsubl
or
je
popf
mov
int3
pop
sub
jecxz
push
inc
stos
xchg
cltd
pop
addr16
iret
sub
loop
sbb
stos
push
sub
xchg
test
repnz
into
stc
dec
and
mov
dec
xchg
pushf
xchg
fiaddl
mov
mov
jmp
lret
xchg
or
cmp
cmc
cmc
mov
add
adcb
gs
orl
int3
cltd
pop
mov
or
fildll
xlat
in
jo
sub
and
push
xor
dec
mov
xor
out
fidivrs
les
sbb
adc
aam
jp
out
icebp
sbb
lcall
cwtl
xor
inc
rol
dec
fwait
cmpsb
ds
pop
push
or
pushf
jecxz
push
xchg
adc
enter
loopne
out
push
lret
cmpl
sub
or
dec
xor
cmp
cmp
inc
cld
mov
je
sbb
jmp
cs
jnp
mov
cli
jl
leave
nop
mov
push
inc
enter
fldcw
getsec
imul
ret
in
pop
test
dec
incl
outsb
inc
xor
outsb
cmp
faddl
shr
xchg
sti
xor
sti
cs
jecxz
xorl
rolb
test
sbb
je
adc
lret
xchg
inc
iret
pop
sar
popf
add
je
mov
das
cmc
in
mov
xchg
sbb
xchg
and
sahf
mov
xor
fdivr
aas
pop
jbe
movsl
stos
push
scas
pop
mov
lret
xor
lock
inc
ror
dec
call
dec
push
es
and
lahf
lods
lods
inc
mov
mov
pop
push
sbb
pop
ret
or
xchg
xor
sub
imul
add
ja
cld
pop
outsl
pop
cmpsl
lock
and
rcrl
leave
incb
xchg
dec
mov
leave
pcmpgtb
fiadds
push
insl
xlat
adc
sbb
icebp
xchg
fistps
lcall
pop
roll
int3
jnp
inc
cmpsb
xorl
movb
hlt
scas
imul
subl
dec
push
loope
xchg
pop
arpl
int
jecxz
jae
rorl
rcr
jo
dec
add
jl
or
dec
fmull
pop
sbb
aas
movsb
loope
sub
xor
sti
sub
movsb
mov
inc
xchg
jle
xlat
lock
sbb
sub
mov
pop
xchg
loopne
in
push
mov
cmc
jae
fsubrl
ret
jb
je
ret
cmp
imul
sub
inc
lret
int
mov
cmp
fs
xchg
jmp
jmp
inc
and
mov
pop
in
fmull
jbe
xchg
push
sub
sub
mov
or
jne
jmp
hlt
in
push
into
push
or
out
movsl
inc
in
add
ss
mov
repnz
pop
in
and
js
daa
loopne
dec
xor
dec
xchg
sub
xchg
mov
sbb
jge
enter
inc
mov
push
dec
sub
mov
cld
sbb
pop
int3
mov
sbb
mov
xor
push
inc
mov
sbb
fdivl
mov
inc
or
stos
cmp
leave
add
das
ret
es
mov
ljmp
ds
clc
je
test
setbe
test
in
jne
std
jae
fisttpll
jge
lods
out
int3
insl
cmp
adc
cmpsl
movsl
mov
push
mov
mov
out
cld
jmp
lahf
ret
les
mov
sub
sub
pop
pop
loope
ja
mov
push
cld
jmp
imull
push
jae
mov
mov
and
jl
push
pop
aam
aad
fwait
cli
dec
and
pop
in
arpl
jno
lds
add
dec
mov
adc
sahf
pop
loopne
shll
cltd
daa
xor
push
mov
imul
in
lret
dec
test
push
fsubl
push
mov
mov
cmp
ficoms
xor
mov
mov
xchg
mov
jge
outsb
fistpll
sbb
mov
cmc
push
and
jl
lods
fistpll
jae
ss
je
fsubl
inc
into
push
jmp
push
mov
and
pop
ja
mov
negl
push
in
xor
addr16
xchg
lret
push
push
test
cmp
ficoml
add
pop
jns
les
mov
in
xor
fildl
jg
clc
push
jmp
and
jae
mov
push
adc
or
lods
sbb
mov
stos
mov
hlt
sahf
test
jns
xor
popf
sbb
aas
std
jns
jnp
mov
rorb
xchg
cld
imul
fistl
mov
cmp
in
push
and
cltd
inc
mov
and
shlb
into
enter
push
loope
mov
fidivl
and
les
out
data16
mov
test
aam
paddusw
aas
insl
ret
or
mov
or
xchg
out
push
mov
add
lods
repz
inc
inc
cltd
cmp
push
fidivs
les
and
mov
lcall
cmp
ret
mov
incb
sub
imull
cld
xchg
mov
mov
jmp
test
cmp
inc
adc
lock
fldl
push
cmc
movsb
push
sbb
push
inc
mov
sbb
cmp
cwtl
cmpsl
sarb
dec
in
jbe
pusha
adc
cmp
push
sar
in
xchg
cli
mov
push
jo
dec
or
iret
jne,pt
into
aam
mov
mov
and
sbb
and
mov
rorl
push
inc
mov
jo
mov
cld
push
push
dec
jne
lret
cld
test
adc
inc
enter
inc
cmc
pushf
lods
sub
sahf
shll
lahf
mov
xchg
dec
xor
inc
mov
dec
mov
adc
outsl
xor
in
dec
inc
icebp
pop
jp
mov
push
loopne
ss
xor
fldl
sahf
filds
and
mov
cmp
outsl
or
inc
test
or
jg
mov
divb
loope
pop
push
pop
adc
inc
mov
or
xchg
mov
in
aaa
out
lock
outsb
lods
outsb
fistpl
js
addr16
imul
in
adc
add
adc
ret
dec
adc
mov
ficoms
int
mov
and
ss
daa
dec
lahf
ret
add
in
adc
add
or
push
orb
adc
pop
int
sub
add
and
adc
pop
or
xchg
mov
lret
sbb
adc
popa
add
loopne
add
loopne
outsb
dec
faddl
push
movsl
gs
mov
orl
fucom
and
scas
popf
mov
fildl
push
jb
out
sbb
scas
cmp
mov
push
add
cmp
aas
lahf
ljmp
push
pop
mov
push
addr16
int
dec
xchg
cmp
cli
sub
sub
ljmp
xchg
leave
xchg
mov
fmuls
mov
adc
mov
dec
rcll
push
clc
daa
or
cwtl
fsubs
cmp
lds
cmp
arpl
sub
daa
pop
outsl
cmp
adc
bound
test
es
mov
ror
jnp
gs
pop
enter
aam
mov
push
mov
lods
int
mov
cmpsb
xchg
mov
rcrb
rorl
add
and
jg
push
pop
or
aam
clc
jle
mov
and
cwtl
repz
jge
xchg
lret
repz
loop
les
pusha
cmp
and
aaa
popa
sub
stos
rol
push
dec
out
cld
pop
mov
scas
pop
adc
mov
pop
cld
push
jae
test
cld
mov
push
pop
xchg
mov
sub
and
lods
mov
add
ret
popf
xchg
sbb
cmpsl
addr16
mov
out
jecxz
dec
inc
xchg
ds
ret
mov
jne
sbb
repnz
sti
push
mov
jecxz
jecxz
and
loope
jo
cmp
arpl
mov
sub
jno
mov
or
sub
sub
daa
mov
insb
jbe
fstpt
xor
rcll
or
daa
sbb
mov
std
mov
cli
int3
push
dec
in
jae
lods
fisttpl
mov
lds
adc
cli
pusha
cmp
clc
sbb
jmp
lock
push
int3
data16
xor
or
push
std
in
mov
and
add
insl
add
inc
scas
add
add
daa
subl
lods
lret
fcmovnu
ficoms
ret
push
pusha
lods
cmp
cmp
call
jae
fwait
int3
inc
cmpsb
or
ja,pt
mov
or
xchg
adc
das
lea
lds
sub
lahf
shll
dec
imul
jl
jle
adc
pop
mov
dec
les
pop
cmc
dec
inc
pop
sub
ja
add
mov
stos
fstpl
daa
xchg
sbb
sbb
add
daa
out
incb
loope
popf
xchg
fptan
adc
loope
adc
arpl
xor
mov
mov
sahf
jle
ja
xchg
sahf
fnstcw
arpl
enter
cmp
pop
pop
rol
inc
ret
push
xor
inc
jmp
movzwl
repnz
clc
push
mov
nop
aaa
shr
or
imul
popf
jne
inc
shr
js
loope
mov
leave
arpl
outsl
icebp
mov
fcomip
lods
push
cmp
fisttps
pusha
pushf
adc
inc
sarb
std
mov
fimuls
add
push
mov
pop
popf
icebp
insl
insl
push
push
fsubrl
movl
xchg
sbb
inc
ss
push
cmp
mov
in
std
or
push
mov
adc
scas
and
insl
clc
sarl
inc
mov
inc
sbb
jl
jnp
add
ja
xor
mov
mov
push
xor
sbb
dec
sbb
jmp
pop
mov
lock
movsl
imul
push
andb
or
inc
rcll
mov
jle
fwait
sbb
push
mov
mulb
or
push
clc
sub
dec
xchg
hlt
shrb
inc
adc
into
add
aaa
aas
aaa
cmovge
and
mov
mov
test
cwtl
sahf
cwtd
jno
inc
cmp
xchg
iret
fwait
iret
mov
xlat
ljmp
gs
addr16
loopne
popf
mov
jge
sub
cmp
aad
xor
xor
inc
cmc
fs
sub
imul
sub
push
pop
and
sub
xor
pop
movsl
jl
ja
pop
or
jg
les
arpl
and
roll
or
add
push
jge
jne
loop
outsl
loopne
push
push
adc
push
lods
jle
cmp
dec
int
cmp
xor
xorl
push
push
mov
sbb
push
push
push
push
mov
pop
mov
rcl
cmp
mov
push
dec
jnp
loope
push
mov
mov
out
xchg
xor
adc
movsl
out
adc
into
cltd
mov
sbb
outsl
push
leave
and
xchg
inc
add
cmp
and
lock
adc
sbb
loope
jo
mov
jae
adc
cmp
xor
mov
loope
sarl
adc
test
pop
cltd
fstpl
cwtl
aaa
xchg
add
add
nop
stos
mov
push
aas
loop
jne
mov
cmpsl
sahf
fs
mov
push
fadds
xchg
jbe
fs
dec
das
aad
push
and
cmpsl
mov
sbb
pop
xchg
jne
pop
subl
push
pop
lea
ljmp
cmp
xor
cmpsb
jno
or
lods
jmp
push
jl
inc
gs
jns
jmp
jae
jns
push
lock
add
adc
add
jnp
js
dec
test
insl
adc
sbbw
fwait
xchg
sbb
out
xchg
in
sti
jno
adc
divb
or
lret
sbb
shrb
sub
movsl
and
fstl
arpl
xorps
into
outsl
inc
dec
popa
pop
movsb
int
push
add
xchg
jecxz
je
pusha
sti
jecxz
sar
dec
adc
xor
fstps
inc
add
or
cmpsl
sahf
jns
imul
stos
out
enter
sarl
out
clc
jne
and
cmpsb
jmp
xchg
pop
pop
decl
and
push
push
sbb
movsl
fdivr
mov
and
in
jne
mov
lods
cmp
jge
inc
mov
cmpb
sbb
fsubs
adc
das
cmp
xchg
mulb
out
jo
cmp
xchg
adc
js
jge
mov
shlb
and
cld
lret
cli
int
add
data16
jne
inc
jno
test
jg
or
xchg
out
shll
cmp
sub
jnp
jg
sub
adc
and
sar
mov
fcompl
inc
adc
in
mov
lret
inc
fildll
pop
jmp
std
mov
and
sub
fcom
fwait
cmpsb
inc
int3
mov
push
xor
xchg
enter
mov
jle
test
ja
stos
pop
mov
adc
pop
dec
pop
mov
inc
sub
in
jno
mov
mov
sub
std
inc
adc
jo
cmp
inc
pop
nop
cmp
sub
and
imul
mov
mov
push
mov
xchg
repnz
hlt
jns
adc
mov
iret
jecxz
or
shlb
jbe
xor
aam
nop
push
cmp
jae
xor
or
jmp
hlt
test
dec
mov
scas
cmpsl
in
or
mov
xchg
dec
icebp
push
ljmp
add
inc
out
out
lods
js
out
adc
mov
out
add
pop
xchg
jae
lods
int
arpl
scas
les
mov
arpl
pop
cmp
push
outsl
or
push
dec
xchg
rcl
xchg
fnstcw
add
mov
xchg
lods
sub
ds
mov
jecxz
xchg
enter
cmp
repnz
fstps
mov
shll
mov
sub
nop
push
les
xchg
mov
mov
xchg
pop
jmpw
outsl
mov
outsb
cltd
jl
add
add
ljmp
mov
subb
mov
jo
pop
lret
in
nop
or
sub
sbb
movsb
xchg
hlt
mov
xor
js
jle
idiv
fsubp
hlt
mov
stos
lods
pmulhw
inc
push
mov
xor
mov
cwtl
lods
rclb
mov
jecxz
xlat
lahf
aam
fwait
addr16
pop
and
adc
sub
add
cmp
dec
in
filds
fistps
xchg
xor
int3
xlat
enter
sbb
mov
popa
mov
out
mov
add
mov
aad
push
cmp
cmpsl
jae
lcall
and
xor
sahf
into
dec
daa
cmp
cltd
loope
pop
push
stos
movsb
inc
js
pop
insb
enter
inc
daa
fwait
mov
fisttps
shr
cli
cmpsb
ret
movsb
push
lea
ja
cmp
loop
shll
clc
jle
sti
jns
dec
push
adc
mov
xor
shr
mov
xor
shl
or
mov
mov
mov
xor
shld
xor
mov
mov
shl
mov
mov
xor
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
mov
mov
xor
shl
mov
mov
xor
mov
mov
xor
jmp
inc
sbb
xor
xchg
sbb
and
push
cmc
cmc
mov
in
outsl
in
test
insb
cmc
mov
inc
mov
pop
mov
subl
iret
pop
out
inc
fmull
ficoml
and
enter
cmpsb
arpl
push
pop
jne
mov
xchg
icebp
xchg
mov
rol
xchg
or
push
imul
aaa
cmc
cmp
data16
and
adc
add
fsincos
fiadds
jp
dec
nop
cmp
shlb
mov
and
jle
mov
pushf
adc
in
test
pushf
arpl
jge
je
into
mov
jb
fbld
daa
sbb
add
xchg
mov
jb
mov
cli
sub
mov
push
stos
push
add
lods
rcll
pop
mov
mov
sub
pop
sub
mov
mov
inc
out
jle
outsb
mov
enter
das
xchg
pop
push
cmc
push
mov
into
ja
pushf
push
push
fimull
subl
in
std
sub
lahf
ljmp
or
adc
push
je
inc
sahf
sub
pop
pusha
movsl
nop
sub
pop
faddl
rorl
dec
sbb
decl
inc
pop
push
jnp
mov
or
int
push
xchg
or
sar
xchg
adc
adc
push
pop
out
sbb
ljmp
jo
jmp
andb
add
ds
inc
sub
cmc
das
xor
popa
push
pushf
jbe
jae
lret
and
inc
xchg
fmulp
push
mov
add
cmpsl
jb
insl
mov
iret
xchg
cmp
in
in
inc
adc
sub
xor
outsl
push
or
sub
adc
imul
inc
nop
add
inc
sbb
push
push
inc
mov
xorl
push
and
mov
cmc
iret
push
in
jl
sbb
push
rclb
or
sub
pop
hlt
or
jge
leave
pop
mov
add
jb
xor
insb
js
aas
cmpsb
push
xchg
xor
mov
js
cmp
mov
mov
lcall
lcall
cltd
fisttpll
rcrb
dec
lods
sbb
adc
pop
mov
sbb
imul
mov
jo
and
jge
jo
iret
ja
add
inc
hlt
mov
cmpsb
mov
loopne
jg
imul
jp
inc
aam
arpl
and
lock
mov
jb
push
pop
cmp
inc
add
test
mov
mov
dec
add
add
mov
sti
mov
add
and
sahf
sbb
es
pop
jno
xor
xchg
cltd
std
cwtl
scas
data16
mov
add
repnz
or
clc
adc
and
jp
ljmp
filds
pusha
mov
or
and
in
mov
sarl
lret
inc
je
ljmp
pop
jno
popf
push
xor
fldcw
jns
data16
add
ds
push
mov
pop
dec
or
ror
scas
add
aam
or
and
push
jne
jbe
iret
dec
ljmp
sbb
in
jb
movl
jns
xchg
je
loope
stos
mov
jnp
dec
add
cmpsb
cmp
dec
iret
mov
cmp
adc
add
pop
mov
shlb
iret
xor
popf
dec
inc
roll
imul
clc
daa
fdivs
jb
adc
pop
lods
mov
cld
repz
jmp
loop
ret
icebp
pop
jnp
cld
lods
out
inc
sub
arpl
inc
ret
mov
jmp
jge
repz
pusha
mov
pop
sub
fdiv
push
cmp
clc
aaa
arpl
pop
daa
and
dec
sub
stos
pop
or
adc
dec
rcrb
sbb
dec
push
lret
fiaddl
ss
mov
dec
sub
out
lods
xor
in
mov
adc
je
mov
ret
inc
and
mov
sbb
mov
or
hlt
mov
rol
pop
cltd
dec
or
stc
sub
das
adc
sbb
sub
ds
or
stc
inc
pop
fsubs
inc
mov
orb
add
js
out
cwtl
jbe
aam
sbb
out
lahf
cmp
add
movsl
outsb
orl
roll
fisubl
cltd
int
jbe
js
push
push
pop
and
pusha
mov
mov
push
xchg
and
jb
push
jg
mov
cmpsl
stos
jg
inc
mov
repnz
rcl
push
loop
sbb
std
ret
add
rcrl
in
movsl
ret
xchg
cmpsb
jo
imul
mov
lcall
lock
xor
xor
jbe
adc
aam
imul
inc
pop
adcl
gs
stc
decl
in
push
mov
and
mov
test
pop
fs
lods
enter
adc
jmp
mov
or
mov
mov
push
pushl
jmp
lret
mov
mov
lock
cmc
cmc
inc
mov
add
xor
mov
xchg
cmp
lret
sbb
or
sbb
adc
int3
hlt
shrb
roll
fiadds
jg
xchg
ds
stos
js
hlt
int
jmp
cltd
inc
mov
adc
arpl
cvtdq2ps
jno
pop
xchg
cmc
cltd
push
push
or
sbb
ss
cmp
cld
stc
push
push
imul
ja
lahf
insl
push
and
loop
and
push
or
push
std
scas
mov
jnp
and
rorl
das
xlat
mov
xchg
mov
jae
aas
shlb
test
cmp
cmp
dec
cli
sbb
cmc
adc
lds
mov
call
push
jecxz
lahf
and
cmpsl
xchg
mov
mov
notb
mov
mov
jg
jle
jne
push
jl
lds
push
inc
les
ret
mov
jmp
aaa
mov
mov
out
popf
out
nop
out
iret
xchg
cmp
and
xchg
and
inc
enter
dec
ja
adc
sarb
loopne
pop
adc
mov
sbb
popl
ja
xchg
test
mov
pop
sbb
dec
dec
cmpsl
shrb
mov
xor
xchg
jae
inc
mov
mov
es
dec
repz
mov
push
into
sub
xchg
test
stos
cmpps
pop
andl
push
sub
cmc
push
cmp
cli
cmp
fdivs
iret
mov
test
xchg
add
std
imul
leave
cmp
mov
addr16
leave
stos
outsb
cli
paddb
sub
jmp
sbb
add
test
cmp
xor
daa
stc
ja
or
xchg
enter
jo
out
mov
bound
jle
pop
and
sub
fwait
and
ja
outsb
and
sub
loopne
cli
push
pop
test
insb
pop
data16
adc
adc
in
mov
out
outsl
subl
lock
mov
fldcw
adc
enter
rorl
mov
movsl
popa
xor
pop
sbb
mov
mov
jecxz
es
inc
xchg
bound
cwtl
or
cwtl
push
sub
mov
pusha
xchg
sbb
mov
adc
test
and
mov
cli
jne
mov
movsb
pop
or
jo
pop
sbb
mov
jmp
sub
scas
mov
ja
lods
xchg
lock
aam
icebp
sarl
dec
mov
push
and
ljmp
mov
js
xchg
add
dec
bound
jmp
pusha
nop
movsl
popa
push
test
jp
movsl
mov
adc
inc
test
jbe
dec
imul
pop
xchg
stos
push
sahf
cmp
jae
mov
test
xchg
push
pushl
out
aaa
lods
fnsave
mov
xchg
out
aas
test
xchg
lea
es
xchg
mov
mov
ss
xchg
fdivrl
movsb
lret
test
jb
sub
dec
fmuls
mov
mov
jl
lds
in
adc
dec
aam
iret
mov
leave
xchg
pop
xor
mov
insl
dec
aas
xorb
inc
popf
clc
das
sbb
mov
mov
ret
mov
outsb
and
mov
divl
jle
push
xchg
pushf
hlt
ret
dec
mov
nop
sti
xchg
cmp
bound
adc
inc
cmpsb
xlat
enter
xor
pop
and
push
cmp
lock
lock
mov
jmp
cmp
addr16
adc
or
repnz
imul
push
xor
mov
pop
sbb
or
jno
imul
lods
repnz
out
xchg
mov
popa
int
lret
mov
arpl
mov
mov
nop
fidivl
xor
mov
mov
rcr
js
xchg
mov
adc
jmp
rol
jl
pop
loope
cmp
xchg
pop
pop
mov
xlat
push
lods
nop
cs
adc
xchg
pop
jecxz
rcrl
xor
cmp
pop
jp
fmull
call
movl
mov
or
cltd
sahf
jle
dec
mov
add
inc
sbb
aad
repz
ficompl
scas
int
inc
lea
sub
addr16
sarl
push
aas
pop
insb
ja
mov
hlt
jmp
int
or
iret
das
out
cmp
test
outsl
loopne
mov
mov
adc
jnp
jle
jge
sarl
es
loop
or
bound
mov
jmp
cmpsl
adc
cmp
jge
in
lret
push
push
popa
sahf
loop
push
adc
cmc
cmp
push
inc
mov
test
mov
add
mov
and
inc
push
js
jb
ja
cmp
sbb
dec
cmp
push
faddl
fwait
inc
mov
pop
cmp
les
stos
mov
dec
shr
xor
or
ljmp
cmp
and
test
bound
ret
push
jmp
test
arpl
and
fisttpll
xor
mov
fdivrl
cltd
or
push
add
pop
movsb
xor
das
add
inc
mov
popa
rcl
dec
in
cmp
push
push
mov
loop
sbb
rcl
add
pop
adc
inc
test
repz
sbb
stc
shl
lahf
add
gs
sbb
mov
dec
push
shlb
push
sbb
sahf
outsl
pop
or
test
adc
pusha
add
adc
scas
and
fistl
mov
incb
popa
mov
jb
cmp
pop
mov
push
negl
mov
cmp
mov
or
cltd
mov
stos
xor
aad
jne
jl
mov
xchg
ficoms
int
jae
jns
mov
loopne
adc
or
stc
inc
adc
cmp
jmp
dec
jp
into
xchg
mulb
int
sbb
xchg
lods
dec
push
inc
loopne
fwait
cwtl
test
fucomip
sbb
push
pcmpgtd
aas
dec
push
fstps
das
inc
mov
push
mov
rol
jmp
cmp
outsl
cltd
mov
xchg
gs
mov
or
sar
cs
push
fmulp
dec
lds
popf
ret
jg
loope
fucomi
dec
aam
int
add
pop
lahf
cli
inc
mov
xchg
adc
daa
and
add
push
push
cmp
push
xlat
daa
in
es
shll
cmp
xchg
mov
jae
cmp
aam
lds
lock
in
aas
sbb
test
jle
pop
mov
xchg
cs
mov
push
repnz
jp
jnp
sarl
jmp
adc
popa
test
jno
arpl
inc
push
jl
inc
orl
mov
test
repnz
dec
jge
movsb
mov
push
lea
ja
inc
std
mov
mov
jg
xor
cmp
dec
pusha
cmpsl
xchg
stc
jl
lret
xor
or
into
mov
jl
rol
std
push
pop
mov
repz
xor
push
and
sub
add
test
or
stc
cltd
xor
ljmp
inc
or
int
xor
divl
cmp
cmp
gs
mov
cmp
rcr
ljmp
test
dec
shll
inc
sub
dec
fists
pop
lods
and
xchg
fadd
xlat
daa
dec
dec
mov
cmp
je
mov
and
mov
xchg
push
xchg
test
dec
cwtl
lcall
add
repz
pop
mov
fs
dec
cmp
or
push
popa
sub
call
mov
fucomp
mov
mov
adc
sti
out
jno
push
outsl
ljmp
and
outsb
cmpsl
jmp
pop
repz
iret
nop
adc
gs
test
sub
and
xchg
cltd
dec
daa
or
aaa
aaa
rorl
xchg
inc
dec
push
cmp
mov
arpl
sbb
popa
xor
mov
out
sbb
push
aad
out
add
call
decb
sub
loope
fisttps
push
scas
mov
in
mov
mov
push
jg
mov
and
push
push
pop
fisubrs
add
enter
test
dec
out
xchg
fcmovb
arpl
aad
xchg
sub
push
les
ret
jno
push
cmp
div
sub
out
jbe
mov
mov
idivb
jae
or
outsl
insb
or
js
fstpt
shll
push
es
repnz
xor
fistps
call
xchg
push
mov
inc
outsl
daa
add
cli
jno
jecxz
mov
cli
adc
int
push
cld
inc
call
lock
mov
xchg
outsb
dec
push
xchg
xchg
out
push
mov
push
cmp
fs
ffreep
ss
ljmp
pop
insb
mov
testb
xchg
out
nop
jmp
stc
add
or
pop
push
test
xchg
fldenv
repnz
addr16
cmp
ja
addl
dec
adc
outsb
jle
xchg
push
jmp
cmp
pop
or
pop
lea
jno
inc
mov
mov
daa
jp
dec
fs
adc
iret
int3
pop
arpl
sarb
xlat
mov
push
xchg
and
pop
int
push
cwtl
mov
pop
iret
cmp
psrlw
ds
aam
lret
popf
fildll
iret
aad
out
cli
mov
or
jl
ret
add
pop
jae
inc
mov
sahf
mov
mov
jns
or
movsl
in
pop
add
aaa
pushf
sahf
aaa
sub
dec
dec
cmpsb
jp
xlat
lock
inc
pop
mov
xchg
sub
outsl
nop
inc
add
xor
fs
pop
add
push
lret
test
ss
and
xchg
pop
mov
inc
stos
push
mov
hlt
xchg
xchg
leave
out
xor
adc
sub
mov
daa
sti
push
pop
push
int3
rcrl
push
imul
mov
xor
rclb
inc
out
pusha
mov
lcall
into
lods
cmpsb
jg
enter
test
jge
call
mov
mov
shrd
shr
shr
xor
push
xor
mov
mov
mov
push
push
push
call
shld
mov
xor
or
mov
mov
shl
or
xor
xor
xor
xor
jmp
stos
lods
and
xchg
rsm
xor
lods
xor
cmc
cmc
mov
negl
in
div
xlat
in
sbb
and
pop
cmp
xchg
ret
fisubs
cli
xor
gs
add
push
int
lods
enter
cmpsb
aam
pop
push
push
mov
push
pop
hlt
adc
or
push
adc
and
jg
mov
sbb
push
push
jno
in
push
or
imul
and
arpl
aaa
adc
lcall
andb
lock
push
add
loope
idivb
test
dec
aam
and
jne
imul
sbb
js
inc
jg
push
out
sbb
pushf
and
shlb
lods
fs
bound
nop
xchg
push
pop
jl
mov
pop
insb
arpl
push
mov
mov
lret
insb
mov
js
sahf
and
sbb
jbe
cld
adc
xchg
bound
inc
push
incb
hlt
pop
mov
sub
movsb
icebp
out
mov
aam
push
xchg
aas
or
and
scas
add
loop
sub
adc
adc
or
pop
cmp
push
out
lods
lds
push
push
mov
xor
mov
inc
xor
mov
mov
fwait
push
pop
xchg
in
fisttpll
xchg
mov
out
push
iret
ret
iret
fisttps
inc
outsl
push
cmp
gs
sbb
mov
out
hlt
dec
inc
call
inc
push
and
xor
fwait
push
mov
std
arpl
subl
int
mov
mov
lock
pop
test
add
jmp
fsubp
inc
shlb
popf
outsl
jp
pop
cmp
xchg
sahf
and
lea
cmp
sbb
and
push
daa
or
pop
inc
loop
mov
lcall
popf
mov
popf
dec
cmp
push
mov
outsb
mov
and
mov
jmp
leave
icebp
lret
dec
xchg
int3
std
sbb
mov
dec
insb
std
pop
push
icebp
or
pop
pop
movsb
scas
test
push
pusha
int
les
add
xchg
rolb
loopne
insl
cmp
xchg
je
ret
mov
mov
fdivl
pop
enter
movsb
inc
sbb
pusha
fs
aam
inc
mov
hlt
sub
adc
cmp
mov
cmc
mov
adc
aas
add
cmpsb
pop
ss
pop
mov
lret
adcb
xlat
sub
pushf
ds
fisubl
mov
enter
adc
jmp
shrb
or
fadds
cmp
mov
imul
pop
fwait
dec
xchg
out
loopne
roll
push
xor
cmp
iret
push
pop
pop
lods
dec
xlat
lss
dec
jg
pusha
cmp
stos
xchg
or
pop
jge
lcall
mov
xor
ja
insb
xchg
jg
pop
rorl
fsubrs
inc
inc
add
js
shll
pop
repz
mov
enter
fdivl
push
je
push
dec
xchg
fldt
fs
inc
jno
scas
push
aas
adc
cmp
and
and
fs
xor
loope
movsb
lahf
cmpl
addr16
cmp
lahf
and
loope
push
sti
std
jo
scas
fcoms
and
scas
sbb
cmp
add
out
pop
pop
das
lcall
repz
jmp
push
push
and
mov
mov
xor
insl
int3
add
cmp
mov
das
and
dec
mov
pop
mov
mov
jge
mov
repnz
mov
pop
fistpl
cmpl
lahf
jmp
in
out
dec
jbe
lea
jno
xor
add
aad
mov
imul
pop
rcl
shlb
mov
mov
mov
push
into
pop
ret
xor
pop
inc
xlat
mov
pop
dec
jae
inc
sti
mov
cmp
insl
cmp
xlat
cld
cmp
nop
xchg
out
adc
jmp
rorl
fcoms
jmp
mov
ds
or
ja
adc
sti
rcl
pop
cmp
or
push
mov
cmpsb
mov
inc
test
jnp
and
mov
cmp
add
negl
incl
gs
ja
and
fs
lahf
bound
movq
loope
jo
xor
repz
fnstsw
xchg
xor
and
ljmp
mov
inc
cwtl
sbb
mov
clc
and
jp
testl
fisttpl
xchg
pop
mov
mov
ret
les
sbb
xchg
aas
jno
and
mov
sub
xchg
mov
xchg
jnp,pt
pop
imul
jnp
cmp
gs
push
cmp
sub
sbb
inc
xchg
dec
ret
insl
fsubl
stc
test
push
cwtl
xor
test
outsl
scas
hlt
xor
jp
mov
test
ss
mov
push
dec
mov
and
inc
sub
aam
or
outsb
sar
out
sub
xchg
sahf
filds
dec
adc
mov
mov
jmp
mov
add
mov
mov
mov
mov
mov
mov
movzwl
cltd
shld
xor
mov
mov
shl
mov
mov
xor
mov
cmp
jne
mov
cmp
jne
movl
mov
movl
mov
movl
mov
movl
mov
jmp
fiaddl
ret
adc
xor
scas
xor
pop
cmc
cmc
mov
test
insb
lret
and
add
aas
add
mov
adcb
decb
jbe
daa
mov
add
pop
aad
in
ret
fs
mov
sahf
stos
cmpsl
cmp
sti
negb
xchg
mov
scas
or
pop
dec
fwait
in
dec
mov
pop
ja
inc
mov
lock
lcall
jnp
divl
push
pop
dec
int
mov
xchg
mov
mov
mov
add
jnp
std
popf
leave
jle
pop
sbb
or
loope
jnp
orb
ret
xchg
insb
dec
xchg
and
jl
cwtl
adc
pushf
xlat
mov
pushf
mov
fidivrl
dec
ds
hlt
adc
and
popa
push
adc
mov
sub
jae
lock
int
popf
xor
fs
iret
sbb
adc
loop
insl
jp
test
push
es
push
mov
mov
pop
push
inc
fsubs
sbb
mov
xchg
mov
icebp
addr16
sbb
scas
cli
cmpsl
mov
test
cwtl
xchg
cmpsb
addr16
pop
in
jp
mov
sahf
enter
mov
jbe
in
lret
push
adc
gs
inc
fld
push
pop
repnz
fidivrl
jp
fprem1
icebp
adc
jge
stos
flds
xor
in
int3
sarl
sub
lcall
test
aam
inc
and
repz
inc
arpl
xor
add
mulb
dec
stc
mov
out
cmp
lcall
leave
adc
fbld
adc
sbb
jbe
push
jg
or
ds
lret
sbbb
mov
dec
jb
lahf
sub
push
out
test
xchg
je
pop
shl
dec
in
push
jne
pop
loope
pop
and
xor
mov
adc
jae
dec
mov
jo
sahf
sub
lds
int3
jno
dec
inc
xchg
sti
jecxz
movsb
push
cmpsl
mov
xchg
mov
andl
cmpsb
jne
pop
xor
push
cmp
add
sti
ds
jo
xor
jl
fdivrp
addr16
stc
xchg
pop
or
add
mov
and
setp
mov
sub
popf
pop
pop
ja
add
add
insl
fldcw
mov
call
hlt
movsb
and
add
and
or
insl
jne
jo,pn
into
orb
je
int
jb
xlat
es
fstpl
lods
mull
push
scas
test
dec
cmpsb
pushf
adc
jnp
jbe
adc
xchg
adc
inc
sbb
hlt
push
sub
rcl
negb
int3
in
mov
inc
pop
cltd
push
fs
arpl
mov
add
insl
dec
sbb
mov
in
sub
xchg
ja
enter
ljmp
int
idiv
mov
call
leave
pop
movsl
daa
add
sbb
das
ljmp
push
jg
or
std
testb
das
adc
mov
dec
or
push
jl
out
jmp
push
fwait
addr16
mov
sahf
pop
xlat
xor
and
test
jae
xchg
pushf
push
mov
add
sbb
xor
imul
mov
jecxz
or
push
int
mov
in
mull
leave
push
push
outsb
dec
xchg
cmpsb
xor
jle
cmp
fcoml
iret
mov
popa
cs
lret
mov
adc
lret
cs
out
adc
jecxz
inc
bound
cwtl
inc
sub
nop
xor
lods
xchg
pushf
test
out
xor
mov
or
fisttpl
and
push
cmp
and
mov
inc
pushl
scas
jo
lods
divl
pop
test
and
mov
cmp
mov
shufps
inc
sbb
rol
or
shll
or
cmp
mov
in
test
out
xchg
fadds
push
addl
jl
pop
push
lahf
lds
pop
in
mov
mov
int3
sahf
sti
mov
int
and
sbb
pop
fxch
fldt
ss
and
jp
pop
data16
in
lret
in
sub
fbld
jl
mov
jo
jne
mov
stc
lods
imul
out
dec
add
cmp
pop
aas
mov
jmp
mov
pop
and
lahf
lcall
fidivrs
call
jp
push
push
mov
call
or
test
ret
call
scas
lds
stos
mov
mov
imul
pop
cmp
sbb
hlt
pop
dec
cmp
sub
lret
fistpll
mov
ss
xchg
inc
and
adc
test
addr16
push
xor
stos
rcrb
mov
mov
stc
adc
dec
das
sub
in
ljmp
loopne
xchg
or
iret
clc
or
xchg
decl
insb
jmp
sub
adc
xor
xlat
hlt
lock
mov
int
sbb
or
lods
enter
add
or
mov
or
add
mov
mov
mov
shrd
shr
mov
jmp
inc
jecxz
push
xor
dec
mov
or
cmc
cmc
mov
rorb
imull
bnd
out
lcall
sbb
and
jne
loopne
xor
lcall
filds
sbb
push
ljmp
cld
add
aam
push
push
mov
ja
imul
add
and
push
test
pop
test
out
xchg
cmp
stc
pop
xchg
mov
cmp
dec
sbb
es
stos
enter
leave
loop
int3
sti
adc
add
repnz
push
insl
jg
enter
clc
inc
jb
xlat
sar
loope
xchg
push
sub
data16
cmc
addr16
cmp
dec
xchg
and
ja
arpl
scas
dec
jo
sfence
pop
and
push
pop
in
inc
mov
lds
lahf
dec
jl
or
scas
adcb
cmp
inc
mov
xor
and
fistl
xchg
fcom
add
and
dec
nop
cs
jne
test
push
insb
pop
aas
lea
or
jno
sbb
out
push
rcr
rcrl
iret
psubsb
mov
fcompl
fcmove
ljmp
jle
xchg
shr
loopne
cmovb
mov
pop
and
xchg
in
pop
pop
mov
es
or
mov
mov
and
cmpl
push
mov
iret
fmull
je
imul
pop
sub
cmpsb
mov
mov
andb
adcb
pop
inc
sub
daa
xor
pop
xor
or
mov
std
push
gs
dec
jecxz
loope
outsl
inc
cmp
sbb
testl
adc
sbb
pop
inc
into
fistps
push
scas
div
je
push
cmpsl
repz
cmpsb
movsb
inc
and
cwtl
loop
ret
pop
xchg
push
cmp
into
popf
movsb
xchg
movsb
das
sbb
out
dec
pop
es
push
loop
jg
loop
flds
sbb
imul
sbbb
aam
dec
cmpsb
daa
pop
jge
mov
mov
cltd
or
repz
iret
pop
jo
xor
and
jnp
inc
mov
mov
push
test
jp
pusha
test
cmp
mov
mov
cmpsb
xchg
fyl2x
cmpb
test
sbb
adc
test
scas
sbb
arpl
nopl
lret
add
ud0
shlb
mov
js
xor
filds
mov
mov
scas
in
in
cmp
insl
imul
insl
xor
inc
lcall
ja
js
repz
repnz
xchg
jecxz
mov
cli
fidivrl
mov
hlt
sub
jmp
mov
mov
add
lret
inc
pushf
test
xor
and
sti
cmp
cwtl
fsubrp
fisubrl
insb
js
out
mov
add
sub
pop
in
pushf
cmp
arpl
inc
popa
in
lods
fs
dec
scas
dec
sbb
push
inc
push
jp
sbb
push
dec
add
imul
or
mov
cwtl
movsl
lea
pop
mov
or
insb
push
sahf
xor
cltd
rorb
inc
inc
mulb
repnz
cli
mov
nop
mov
cmp
int3
jge
add
fxam
popf
clc
cmp
outsb
ja
sbb
dec
adc
out
out
faddl
insl
push
jecxz
cmc
fldcw
inc
sbb
mov
cmp
push
cli
rorb
add
dec
or
dec
shlb
mov
sub
aam
movsb
pop
ds
call
push
ret
loop
mov
fidivl
shll
sbb
xchg
popa
imul
inc
mulb
or
mov
jmp
xor
cmp
adc
pop
cmpsl
ds
inc
adc
int
adc
and
sbb
inc
push
mov
push
lahf
icebp
sub
push
jne
pop
lock
mov
int
fmull
lock
lods
call
mov
push
add
inc
pop
sbb
push
cmc
mov
out
lds
mov
scas
inc
push
mov
sbbb
push
sub
fldenv
lahf
rolb
pop
hlt
mov
cmp
sub
xor
outsb
frstpm(287
orl
ljmp
imul
pop
jns
inc
and
pop
mov
lret
daa
rorb
retw
adc
mov
or
or
push
adc
rcrl
jmp
fdivl
jp
and
in
cmp
or
mov
jne
ret
xchg
imul
mov
popa
mov
sbb
sahf
adc
or
lahf
inc
stos
adc
push
push
mov
movsb
addr16
sub
test
pop
aam
xchg
xor
fstpt
pop
sti
add
aam
out
lock
sahf
ret
cmp
mov
lahf
in
testl
sbbb
cmc
cmp
scas
jecxz
movsl
cmp
or
push
xor
bound
inc
or
fcoms
inc
movsl
fiaddl
sub
xchg
testb
mov
pop
in
pop
lds
add
divb
popa
cvttps2pi
xchg
cmpsl
add
or
dec
sbb
mov
repnz
mov
repnz
outsb
adc
jbe
ja
pushf
jne
cs
mov
inc
out
or
dec
xlat
pop
jo
int3
push
xor
sub
jg
imul
mov
push
sub
cmp
jnp,pn
mov
inc
aad
rcll
cmp
repnz
sub
mov
sbb
push
and
cmp
rcrb
out
xchg
stc
jg
dec
pop
sbb
pop
scas
out
test
aad
or
gs
cmp
scas
adc
rcll
repnz
pop
enter
imul
and
pop
ret
or
decb
in
push
or
or
mov
es
cmp
mov
sar
sbb
push
push
jl
cltd
pop
scas
movsl
out
insb
arpl
idivb
adc
ljmp
xchg
shrb
jo
jae
add
and
adc
mov
lods
adc
fistpll
cmp
sub
pop
jp
lods
dec
hlt
inc
ss
cwtl
dec
lods
mov
sahf
jecxz
jge
addr16
fidivl
notl
sbb
stc
pop
add
dec
cmp
cmpb
jb
xchg
loope
jae
aas
pop
push
shrl
xor
dec
adc
jl
sub
push
out
popa
shr
push
cltd
xchg
dec
mov
xchg
cmp
frstor
cld
mov
sbb
xchg
push
mov
xchg
pop
push
pop
jbe
dec
xchg
sbbl
cmp
jg
test
ja
insl
es
dec
sarb
push
and
mov
pop
orb
cltd
scas
das
je
das
test
cltd
add
dec
adc
iret
cmp
jmp
mov
mov
cmp
pop
xor
arpl
mov
inc
sbb
xor
pop
pop
inc
or
clc
data16
rcr
dec
enter
xchg
add
cs
fs
xchg
adc
xor
pop
mov
mov
mov
das
imul
pusha
push
lret
icebp
stc
sub
pop
and
jbe
sub
ja
mov
cs
ljmp
fs
aad
xchg
or
int3
icebp
xor
scas
test
data16
pop
stos
xchg
test
inc
test
lret
push
daa
inc
pop
sbb
aad
cmp
sub
das
int
xchg
mov
test
push
inc
inc
dec
mov
das
je
dec
jge
jle
test
and
push
js
add
fildll
add
mov
data16
dec
xor
mov
aaa
mov
sti
push
adc
cmpb
sbb
push
pop
mov
fstpt
mov
lahf
sbb
jne
mov
inc
and
loope
mov
ret
fadds
jo
xor
cmc
mov
out
cmp
pop
xchg
sub
adc
cmpsl
mov
setb
pop
add
repnz
lea
jae
inc
ds
shrl
or
xchg
int
insb
jbe
std
mov
sahf
scas
in
mov
mov
int
jl
mov
and
cs
ror
mov
inc
pop
dec
jb
dec
and
cltd
xchg
xor
cmp
pushf
aam
scas
fs
sbb
and
xlat
pop
jns
pop
mov
stos
mov
daa
call
pop
stc
cmp
push
pop
sahf
xchg
or
jle
push
cwtl
jg
jg
cltd
mov
sub
rcrl
cwtl
sub
xor
add
sbb
inc
xor
or
out
gs
add
popf
clc
adc
testl
loopne
mov
fs
mov
inc
ljmp
cmp
or
fidivrs
adc
hlt
push
mov
into
out
mov
insb
imul
test
mov
mov
inc
mov
loope
push
pop
and
dec
addb
add
xor
iret
jb
cmc
ja
in
mov
xor
sti
subb
call
cmc
imul
mov
add
pop
push
add
lods
std
push
xchg
pcmpgtw
icebp
and
lcall
xchg
sub
imul
xor
repnz
mov
cld
inc
cmpsl
idivl
in
xlat
jns
notl
cli
pop
bound
push
sahf
insl
add
push
jno
or
aam
cltd
fnstenv
sbb
mov
dec
je
add
jns
mov
jae
sbb
add
add
push
movsb
les
in
adc
cmp
or
fcoml
sub
push
pop
xchg
inc
inc
mov
xchg
rorl
clc
iret
sbb
rorl
fbstp
pusha
xchg
add
mov
or
sbb
pop
pop
ficomps
cmpsl
adc
out
mov
ss
outsl
xor
sbb
cmp
test
lret
dec
imul
dec
dec
mov
jo
push
or
stc
or
in
push
push
cmc
stc
scas
cmp
mov
jmp
inc
aad
jecxz
and
inc
fwait
dec
add
ret
loop
aam
ja
popa
jecxz
in
lret
xor
pushf
and
mov
ss
mov
mov
int3
sub
dec
test
xor
shl
xor
or
mov
jmp
insl
mov
cs
push
mov
xor
das
add
div
mov
and
popf
jae
cmp
xchg
insb
fnsave
pop
adc
push
into
mov
or
shll
add
push
cld
mov
add
add
ja
xchg
cwtl
cld
jle
and
leave
mov
fists
jo
movsb
sub
cld
test
mov
int
jecxz
stos
inc
mov
pop
movsb
xchg
push
stos
es
daa
mov
mov
jae
mov
jbe
repnz
jle
shrb
enter
shrl
jg
pop
or
xchg
jecxz
inc
aam
pop
fstl
sbb
ss
orl
pop
xchg
enter
mov
cltd
mov
jecxz
hlt
arpl
inc
sub
leave
cld
xchg
out
mov
shlb
cmp
sub
call
ljmp
cmpsb
popa
pushf
or
cmp
jp
mov
adc
cmp
stc
ffree
mov
adc
mov
push
add
std
add
lds
sub
inc
sub
pop
es
xchg
pop
subb
jmp
xor
repnz
js
xchg
push
push
movsl
push
cwtl
daa
aam
hlt
mov
mov
mov
pop
ret
stos
cltd
sub
or
push
sub
adc
in
shlb
and
cld
dec
cltd
cmp
fdivs
pusha
test
xor
orl
cmpsb
dec
insl
push
xor
test
dec
sbb
adc
mov
mov
nop
ds
and
mov
inc
mov
sbb
push
in
mov
test
or
daa
add
inc
in
sub
ret
and
pop
outsb
into
push
pop
mov
pop
out
mov
mov
les
mov
and
mov
jb
jae
or
dec
in
ret
sub
pop
nop
xlat
mov
and
jb
lds
in
pop
in
stos
pop
dec
pop
or
jp
cmpsb
jno
pop
push
insb
leave
dec
lahf
jl
popf
jecxz
ret
pop
push
pop
imul
xlat
mov
mov
xlat
add
out
addr16
mov
mov
mov
mov
mov
pop
lret
jne,pn
dec
lea
xor
sub
icebp
push
jbe
xor
insl
test
xor
pxor
ljmp
mov
adc
sbb
sahf
outsb
or
push
daa
orl
inc
fs
sbb
cwtl
add
adc
mov
sub
flds
pcmpgtd
std
out
pusha
ja
lds
fcoml
movl
in
cwtl
fimull
loopne
mov
push
pop
loop
jb
push
test
mov
lret
pop
add
scas
pusha
test
sub
mov
shrb
xor
push
inc
pop
loope
cmc
out
lods
cmpsb
inc
loop
inc
out
mov
xchg
rol
in
lahf
lret
imul
mov
sub
arpl
stos
adc
xchg
push
push
gs
pop
cmc
aaa
inc
je
std
push
nop
sbb
or
test
fwait
addb
push
in
xor
in
test
inc
pop
iret
sub
out
cmp
lock
push
call
sub
mov
fsts
movsb
mov
sbb
inc
shll
out
fdivs
lcall
das
or
es
ja
icebp
or
pop
pop
pop
jle
jne
mov
and
rolb
test
test
dec
sbb
adc
cmpsl
loope
or
leave
jge
push
cli
cld
add
jne
pop
aad
hlt
shll
cld
aaa
lret
mov
out
mov
cmpsb
je
jae
sar
push
lret
push
or
aad
in
out
popf
into
sbb
vpinsrb
push
imul
ret
jbe
addr16
pop
sbb
adc
mov
lock
cmp
bound
sub
rcrl
adc
sub
jno
dec
rcrl
sbbl
jae
cmp
xchg
stos
fcoms
clc
dec
inc
push
push
inc
push
loopne
loopne
pop
shlb
dec
nop
dec
push
dec
cmp
xchg
fists
mov
sub
adc
cmp
mov
adc
jo
jbe
add
mov
mov
enter
fdivrl
xor
push
jne
aas
in
cmp
sbb
outsl
js
mov
mov
stos
push
xor
jmp
loopne
and
jb
scas
adcb
add
inc
movb
arpl
insl
sbb
mov
xorb
repnz
or
jo
ret
std
lods
pop
jge
sbb
fdivs
mov
hlt
and
clc
mov
cli
sbb
ljmp
mov
and
pop
inc
add
push
clc
jno
icebp
xor
lcall
xor
cmp
out
jae
adc
push
je
clc
xchg
push
xor
cs
das
xor
jle
dec
lcall
pop
stc
sbb
dec
bound
or
scas
ret
loopne
jno
pop
mov
sub
insl
jbe
pop
jle
mov
cmp
mov
mov
xor
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
add
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
jmp
push
add
mov
sbb
call
cmc
mov
dec
and
mov
mov
outsl
in
mov
cmp
pop
fldenv
inc
inc
cmpsb
mov
mov
inc
lods
pop
pop
fsts
sub
and
jle
dec
rclb
inc
movsl
rcrb
fsts
das
cmp
sub
test
icebp
in
cmpsl
jno
mov
scas
std
shl
adc
cltd
push
and
gs
cmpsb
jmp
in
sbb
fisttpl
xchg
sbb
mov
adc
out
add
jg
mov
mov
jl
pop
jno
ljmp
mov
sub
cmp
mov
add
dec
cmpsb
fbstp
mov
pop
loope
jmp
adc
aam
cmp
inc
add
xchg
mov
xchg
xchg
add
iret
mov
adc
inc
push
xchg
out
fcmovnb
pushf
mov
sbb
outsl
hlt
sbb
cmc
push
jnp
add
jo
push
cli
jecxz
mov
dec
std
insl
shll
notb
jno
adc
ret
sti
cli
push
imul
jno
inc
inc
imul
shrb
push
pop
notb
xchg
mov
frstor
insb
dec
xor
daa
mov
shl
or
pushf
sub
sub
jno
lods
add
or
cmp
add
jb
cli
inc
je
jbe
mov
lret
xor
pop
stos
icebp
mov
dec
sar
pop
outsb
bound
mov
out
mov
or
mov
adc
jnp
pop
inc
out
std
mov
push
mov
js
mov
mov
lds
xor
inc
repnz
jmp
aas
jecxz
enter
pop
pop
xchg
push
mov
std
push
jge
push
imul
inc
into
lcall
clc
and
ret
and
jle
xorb
adc
shl
push
and
mov
cmp
mov
mov
sub
gs
mov
add
and
xchg
stc
leave
inc
ret
in
dec
in
inc
out
ss
icebp
mov
mov
inc
insl
cmc
or
pop
push
addr16
stos
in
imulb
jecxz
xorb
stc
mov
movb
jno
push
xor
xchg
push
sbb
popf
adc
and
je
pop
adc
sti
jbe
out
sub
mov
cmp
sti
jp
icebp
clc
jp
iret
hlt
es
adc
sub
pop
scas
mov
push
mov
mov
idivl
out
cmp
call
xor
xor
fucomip
lock
addr16
add
and
xchg
dec
xor
scas
enter
pop
pop
fists
push
pop
nop
mov
mov
divl
mov
jmp
sbb
mov
or
stos
mov
leave
fsubr
lret
out
sbb
mov
mov
rep
hlt
loope
add
inc
out
mov
fistpl
les
jp
mov
mov
loop
fsubrl
mov
sbb
or
fists
dec
scas
imull
adc
aam
jo
leave
in
xchg
fabs
ljmp
inc
dec
push
in
out
sub
mov
mov
lods
fisttpll
or
into
es
lcallw
push
mov
es
aaa
insb
xchg
lds
or
inc
or
scas
cmpsl
jnp
in
out
pop
xlat
loop
stos
jns
pusha
mov
xor
lret
and
outsb
jbe
inc
lcall
leave
in
in
xor
fnstcw
je
stos
fwait
sahf
cld
sub
shl
enter
xlat
or
mov
adc
push
cmc
xor
stos
dec
insb
in
mov
inc
xchg
xchg
jne
cmpsl
push
and
imul
mov
cltd
or
es
std
dec
jg
movsl
cmp
push
daa
xor
push
sub
xchg
or
fnstcw
ljmp
xchg
test
cmpsl
stos
lea
add
mov
push
loop
cmpsl
mov
fsubp
xor
or
je
push
jmp
leave
jp
lods
test
mov
dec
pushf
xor
aad
sub
rcpps
or
orl
mov
rolb
cmc
lret
lret
xchg
scas
iret
scas
and
xchg
adc
outsb
mov
iret
enter
mov
pop
xchg
pushf
test
xchg
push
inc
add
fstpl
sub
out
jp
sti
stos
dec
pusha
and
sub
mov
push
cmpsl
shl
andb
pop
in
lahf
mov
mov
pop
aam
cli
outsb
mov
xlat
dec
or
rcrb
xchg
fcoms
jmp
flds
ja
jno
sub
scas
movsl
xor
adc
rolb
pop
data16
pop
lcall
insl
fcomip
out
add
cmpsb
negb
imul
jne
fndisi(8087
dec
jl
sub
out
dec
stos
aaa
jne
in
cmc
faddp
cs
int3
add
dec
stos
push
test
xor
dec
ret
mov
lcall
sub
xor
pop
jg
jle
hlt
rcr
imul
and
daa
bound
dec
xchg
mov
adc
cli
jle
outsl
or
add
dec
in
xchg
sahf
pop
inc
sbb
pop
adc
cmpsl
or
mov
jmp
dec
jmp
nop
and
dec
sub
cmc
f2xm1
jo
mov
mov
jecxz
fs
imul
push
push
dec
dec
ret
cmc
stos
mov
mov
xchg
in
adc
xchg
testl
pushf
loop
int3
inc
jg
inc
mov
call
fdivrs
xchg
jno
arpl
ss
ja
dec
adc
pop
xor
ss
int
dec
lock
add
and
addr16
std
mov
jp
and
movsb
enter
mov
inc
lahf
add
xor
test
fisubrl
ss
movsl
mov
sub
rolb
add
xor
mov
sbb
mov
call
cmpsb
and
pop
lahf
or
add
sahf
pop
mov
xchg
cmovno
lods
test
rolb
add
adc
xor
loopne
popf
dec
cmp
repz
aas
ss
scas
jecxz
adcb
and
ss
xorb
ljmp
add
push
fcoms
popa
sub
popa
inc
push
clc
xchg
lret
test
pop
adc
sub
out
pop
xchg
mov
pop
or
iret
cwtl
test
cld
lcall
subl
into
dec
scas
mov
into
dec
jnp
mov
js
cwtl
cmpsb
push
add
push
cmp
out
cmc
push
lret
lret
inc
cli
xchg
inc
mov
mov
xchg
inc
inc
cmpsl
out
xor
cmp
pop
xor
popf
out
lahf
ror
pop
shlb
mov
test
sarl
lahf
insb
dec
mov
sbb
push
push
dec
shll
jl
in
std
lret
les
aaa
scas
mov
mov
add
jecxz
sbbb
add
or
cmp
mulb
mov
mov
xchg
in
mov
xor
and
xchg
adc
jp
adc
xor
pop
jle
test
push
mov
mov
mov
cmc
jb
dec
lcall
ret
pop
dec
lcall
or
fdivl
mov
aas
pop
push
mov
pop
cwtl
adcl
jmp
xor
popa
fdivl
inc
jns
push
in
or
popf
and
jbe
xchg
je
cmp
cli
lds
stos
out
or
outsl
mov
mov
mov
sub
sub
mov
sahf
fwait
stc
mov
and
lret
lock
push
int3
scas
pop
jmp
cld
js
xchg
ja
and
cmp
sbb
mov
cmpsl
mov
xor
or
pop
lock
mov
cmp
jle
cltd
lock
mov
sbb
jmp
jp
aas
mov
pushf
xorb
gs
imul
inc
mov
push
pop
fcomps
push
in
ja
sbbb
gs
add
adc
jo
pop
xchg
add
xlat
jb
daa
push
lds
sub
jb
push
fsts
adc
adc
fwait
and
cmpsl
mov
mov
or
and
adcb
sbb
add
loope
enter
loopne
cli
jo
sbb
fwait
or
icebp
ret
std
scas
lods
sub
inc
rcrl
jecxz
jp
sti
jbe
cwtl
dec
ret
nop
lret
cld
jge
inc
mov
test
sbb
mov
movsb
lahf
jl
outsl
mov
leave
cwtl
pusha
les
sub
jecxz
ret
jne
xor
cmp
mov
mov
dec
push
sub
inc
xchg
mov
rol
pop
neg
xchg
ret
cmp
mov
dec
mov
push
xchg
cs
mov
movsl
or
lock
hlt
inc
rorb
xchg
inc
cmpsb
loop
insb
mov
sub
sub
adcl
push
jbe
iret
pusha
pop
jge
aaa
or
jecxz
jmp
push
cwtl
mov
shlb
data16
shll
pop
xchg
in
push
jmp
sub
lret
pop
xor
cltd
outsb
repz
ja
xchg
cmp
mov
jl
test
inc
outsl
in
xchg
mov
inc
push
lret
sbb
and
dec
inc
sub
xor
hlt
pop
pusha
dec
scas
adc
sub
xchg
bound
pop
pop
inc
push
incb
lret
pop
movsl
xor
mov
fldt
mov
test
mov
ljmp
jb
in
lds
lret
addb
dec
lea
push
jg
pop
lock
mov
jne
sbb
xor
lea
imull
inc
cmp
push
mov
in
stc
in
aas
xor
push
and
incl
fwait
in
dec
jo
out
jecxz
sbbb
add
push
lods
imul
push
jp
decl
sbb
mov
sbb
xor
sbb
push
xor
sbb
and
mov
sti
push
sub
add
or
test
rol
ljmp
addr16
sti
xorb
out
loop
lods
aam
pop
dec
mov
jno
cwtl
stc
xchg
stos
out
fimuls
push
hlt
cmp
mov
xchg
pop
sub
dec
movsb
mov
cli
xor
xchg
arpl
mov
push
repz
adc
or
mov
add
aas
xor
dec
xchg
xor
jg
repnz
cmc
mov
xor
xchg
out
and
xchg
jl
push
stos
subl
dec
scas
rclb
mov
push
sbb
pop
cmp
inc
cmpsb
pushf
dec
aam
push
out
jg
dec
mov
or
lcall
shrb
cs
hlt
gs
inc
imul
scas
imul
pop
test
mov
add
jge
mov
das
or
mov
xchg
push
out
xor
negl
aam
mov
jmp
or
jae
popf
or
insl
xchg
sbb
add
outsb
pop
jl
andb
call
jno
addb
sbb
or
hlt
in
sbb
mov
es
les
jecxz
cwtl
leave
mov
jo
sub
dec
adc
mov
push
cltd
add
add
jp
stc
fildll
data16
imul
psubb
mov
in
dec
lods
mov
and
xor
aam
lret
bnd
mov
and
jmp
idiv
jecxz
push
pop
mov
or
dec
or
fs
roll
icebp
cld
aas
daa
out
push
and
daa
fidivl
dec
mov
lds
aam
add
lods
mov
and
push
and
jo
fldcw
fmull
and
aaa
icebp
popa
ja
int3
jnp
cltd
or
mov
ret
add
cmp
mov
das
lea
sub
add
or
out
mov
bound
mov
inc
es
sub
and
fistpll
imul
push
mov
fisubrs
jmp
mov
or
sar
movsb
mov
mov
cmp
movsb
lods
push
scas
fistpl
or
into
mov
ljmp
push
rcrb
clc
fistpl
imul
icebp
jmp
xchg
adc
push
pop
stos
push
dec
push
add
mov
inc
repz
xchg
mov
jp
sub
dec
popf
push
movsb
sbb
jle
lret
jns
add
fsubrs
pop
mov
call
and
adc
je
sbb
adc
cmp
popa
ja
popf
mov
stos
jno
inc
inc
repnz
jb
out
mov
std
ret
sti
or
lds
lret
in
rclb
cmp
mov
sahf
pop
cmp
popf
fs
dec
pop
dec
mov
cmpsb
cmp
fnstsw
inc
repnz
aaa
pop
mov
dec
and
ljmp
and
fimuls
lcall
movsb
pop
std
mov
push
rorl
mov
imul
fstpt
jno
or
xor
outsb
dec
aad
fimuls
lret
test
jmp
mov
loopne
sbb
and
sahf
adc
lods
lret
push
and
xlat
jbe
ljmp
in
stos
inc
dec
add
aaa
cwtl
ret
divl
pop
mov
pop
xchg
lret
mov
fistps
imul
out
sub
sar
dec
push
roll
test
lahf
out
mov
jge
out
mov
leave
repz
sub
xchg
pop
aas
dec
xor
xchg
jecxz
out
je
les
mov
arpl
mov
mov
psubd
mov
out
adc
push
in
out
lret
lea
pop
imul
push
icebp
clc
call
dec
sarl
sbb
mov
inc
mov
sbb
into
or
mov
add
lods
push
int
push
int
pop
sbb
loopne
jbe
mov
jle
push
adc
stos
ljmp
adc
sbb
test
xor
pop
or
scas
stos
inc
cld
fsubrs
mov
dec
and
into
push
xchg
push
mov
dec
sbb
hlt
mov
movsl
shrb
push
sarl
jl
cmp
lods
and
add
movsb
mov
popf
or
sti
xchg
mov
xchg
bnd
loopne
repz
popf
loopne
cmpb
pop
in
lock
in
loope
xchg
lods
arpl
mov
mov
ja
jl
test
sbb
orb
or
sub
ret
jge
or
jbe
out
xchg
sbb
iret
or
subb
dec
sub
loopne
xlat
lock
fnstenv
xchg
xor
test
mov
sbbb
mov
int3
popa
jl
cmp
pop
add
lea
loopne
jne
mov
mov
aaa
in
jmp
sbb
mov
sbb
dec
add
mov
dec
mov
das
scas
dec
xchg
out
scas
or
lock
cwtl
in
insb
sbb
mov
ss
aaa
fisubrs
mov
pushf
enter
or
lds
ljmp
fiaddl
jg
cmp
loopne
les
stos
icebp
mov
dec
cmpsl
inc
adc
out
push
pop
arpl
xlat
lds
mov
adc
mov
cmp
push
xadd
adc
push
mov
sar
clc
scas
lret
inc
shrd
shr
mov
mov
xor
xor
or
add
shl
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
add
mov
mov
shrd
shr
mov
mov
xor
shl
mov
xor
or
mov
add
shrd
jmp
mov
out
call
sbb
and
dec
out
shl
cmc
mov
xchg
dec
pop
mov
xor
xor
ret
shlb
pop
jne
xchg
pusha
ror
xchg
jbe
xchg
je
test
mov
mov
adc
mov
pop
sbb
jp
js
mov
mov
icebp
in
subl
and
jp
or
jbe
xor
jb
or
out
adcb
xchg
leave
sbb
imul
adc
mov
cmp
inc
addb
cmp
sti
or
aaa
mov
xor
lods
repnz
movb
inc
push
je
mov
cmc
mov
and
inc
dec
insb
cmp
mov
sarb
add
fsubs
xchg
sbb
or
scas
rcrb
push
adc
cmp
jge
iret
xor
sbb
das
hlt
int3
jg
mov
jl
test
push
clc
aam
lods
xor
or
int3
lret
dec
jmp
pop
mov
lret
out
jmp
xor
in
loop
mov
xchg
test
pop
jle
loopne
xor
mov
pop
mov
mov
gs
into
int3
es
sbb
popa
stc
inc
add
add
push
fwait
pushl
add
lods
fwait
mov
jecxz
sbb
adc
mov
pop
lods
mov
subb
xchg
pusha
and
inc
sbb
cmp
je
inc
flds
call
inc
cld
adc
popf
cmp
std
fwait
out
rcr
add
pop
aam
ljmp
clc
xorl
lahf
mov
cmp
sub
mov
pop
cmc
cwtl
and
adc
pop
test
or
xor
xchg
rolb
adc
les
addr16
and
or
push
loope
and
test
adc
sub
mov
rcrb
lcall
adc
daa
lods
call
test
cmc
movsb
lea
sbb
and
push
lock
push
cmpsl
aam
add
jno
inc
fldl
sbb
mov
add
sti
rcll
sbb
add
adc
push
jne
pop
cmp
std
je
jl
dec
aaa
fwait
push
add
mov
dec
sub
lods
and
rcr
mov
cmp
mov
cmpb
adc
inc
ss
push
lcall
repnz
inc
push
dec
mov
add
push
and
or
fs
popa
pop
mov
daa
or
lds
sub
inc
imulb
test
add
fsubr
xchg
out
aad
push
mov
push
jbe
loopne
cmp
sub
push
scas
bound
cli
and
imull
push
call
push
dec
je
mov
sub
lahf
movsb
lcall
dec
aaa
in
xchg
fs
fwait
std
xchg
ljmp
scas
imul
iret
lock
daa
inc
pop
mov
sbb
std
mov
adc
jnp
cmp
mov
sub
je
loope
pop
push
dec
addl
adc
mov
sub
mov
push
pop
mov
adc
jnp
fsubr
adc
cmpl
test
jmp
push
outsl
push
push
push
pop
addl
subb
aad
xchg
cs
and
sbb
out
xor
std
jns
add
or
int
enter
cmp
inc
je
cmc
xorb
xchg
pusha
iret
movsb
ja
ljmp
scas
in
mov
sub
rcr
push
xchg
loop
out
shlb
dec
movsl
xor
push
push
movsb
xchg
repnz
sbb
cmp
inc
loop
jp
test
outsl
cs
pusha
and
mov
xor
mov
jb
pop
mov
push
pushf
lods
mov
push
inc
test
repz
hlt
ja
imul
xchg
test
out
pop
out
push
hlt
mov
add
xor
js
fs
je
sti
push
leave
push
pop
arpl
rcrl
imul
jne
add
push
nop
out
mov
dec
mov
cmpl
inc
mov
jge
cltd
hlt
imul
sub
pushf
and
dec
mov
xchg
and
and
jo
sahf
jbe
aas
movhps
sbb
dec
xchg
repz
sbb
sti
xchg
out
push
fnstsw
cmp
push
push
fs
xor
sbb
rclb
cltd
jle
subb
lock
pop
cmpsl
xchg
clc
dec
je
hlt
outsl
sub
hlt
pop
mov
arpl
call
jne
xchg
jge
xchg
iret
hlt
mov
mov
push
sti
in
pop
push
adc
push
hlt
cmp
push
cld
jbe
sbb
iret
pop
xor
lods
dec
fcoms
cmp
push
outsl
mov
cmc
xchg
xor
dec
scas
je
xor
and
out
in
cmp
inc
jecxz
mov
add
or
sbb
stos
data16
jo
xchg
and
inc
pop
sbb
flds
add
loop
sbb
bound
push
outsb
sub
pop
xchg
pushf
inc
repnz
js
test
outsb
xor
shr
mov
mov
xor
or
mov
or
shl
mov
mov
shl
mov
xor
mov
mov
mov
xor
xor
jmp
add
aam
adc
shll
mov
and
clc
add
mov
cmc
pop
fwait
or
mov
or
or
enter
sbb
mov
cmp
pop
jae
aaa
xchg
and
test
repnz
sbb
bound
push
or
ret
xchg
or
xchg
cmp
psrlw
movsb
add
je
adc
mov
pusha
in
out
add
add
lea
lea
mov
mov
fmuls
data16
mov
push
repnz
pop
dec
sbb
repnz
dec
ret
push
adc
cmp
fwait
mov
cmp
push
mov
mov
ljmp
out
and
repnz
scas
add
push
cld
fdiv
das
inc
in
lret
fucomp
pop
xor
jl
rcl
and
lcall
stos
sbbb
ja
xor
push
test
mov
movsl
rcrb
push
adc
xor
outsb
xor
push
adc
adcl
fsubs
jb
movsl
push
inc
push
stc
or
xor
xchg
mov
sti
fsubl
adc
insl
jg
or
arpl
daa
mov
adc
sub
int3
sahf
jae
decl
mov
sub
ret
cwtl
push
and
mov
incb
cmc
sub
cltd
adc
inc
sahf
pusha
jno
je
jge
je
sahf
dec
pop
mov
imul
jo
jne
push
int
dec
data16
insb
mov
icebp
or
fcompl
sbb
cmpsl
lret
aaa
push
int
inc
xchg
repnz
test
adc
cmp
mov
push
push
shlb
imul
test
into
inc
das
xchg
dec
enter
std
push
and
mov
loope
cwtl
int3
test
enter
clc
pop
ljmp
rcrl
test
ret
dec
mov
pop
pusha
mov
push
insb
adc
inc
stos
sbb
pop
add
fs
outsl
push
sub
clc
mov
add
fldenv
mov
lcall
adc
or
outsl
sti
lds
dec
icebp
inc
sbb
xor
mov
sbb
ficoms
popf
fsubrl
test
nop
push
mov
mov
int3
sbb
dec
stos
inc
fwait
jo
mov
or
or
add
hlt
ss
lret
jno
sub
lds
push
jnp
pop
xchg
pop
xchg
adc
cmp
dec
cmp
dec
and
xchg
aas
and
fstps
jge
mov
mov
mov
xchg
sahf
dec
inc
dec
push
cmp
daa
xor
inc
dec
dec
and
idiv
pop
out
inc
or
inc
push
jo
xchg
adc
decb
mov
addr16
mov
pop
ja
shr
ja
popf
js
std
movsb
lea
call
popf
or
sbb
rolb
imul
or
int3
in
cmp
cmc
cwtl
ja
idivl
test
sahf
adc
dec
jb
ljmp
aaa
movsb
mov
cld
movsb
test
lea
fprem1
sub
loope
sub
cmpsl
stos
int3
imul
sbb
cli
icebp
jg
xor
movsl
fwait
add
outsb
loope
ja
repnz
mov
les
pop
or
lods
in
sbb
out
in
nop
sub
jle
scas
rol
cmp
and
das
arpl
repnz
in
cmpsb
ss
add
fldcw
or
mov
push
rcll
inc
mov
idivb
mov
cmp
lods
jmp
dec
pop
sti
call
push
pop
mov
test
frstpm(287
clc
jge
jmp
mov
pusha
mov
inc
jp
stos
cltd
popa
mov
adc
popa
sub
jnp
and
js
inc
xchg
jg
rcrb
test
adc
or
or
jno
nop
cmp
jp
adc
fwait
mov
add
push
push
test
push
sbb
mov
sbbb
repz
lods
jl
subw
mov
push
mov
push
pusha
pop
inc
iret
and
xchg
mov
pop
xchg
xchg
inc
adc
test
add
jb
inc
pop
push
gs
pop
push
push
imul
inc
dec
adc
and
cli
in
sub
bound
mov
adc
cmp
data16
inc
outsb
loopne
stos
jns
cmp
aad
pop
call
test
mov
jle
repz
xor
imul
xchg
stos
cmc
loopne
jge
out
test
imul
jnp
mov
pop
and
mov
cmp
bound
iret
sub
out
mov
xchg
loope
fwait
sub
insl
mov
fwait
xor
pop
fidivl
popa
stos
inc
mov
aas
mov
add
pop
addb
subb
out
pop
int
inc
bnd
and
negb
daa
loopne
inc
jbe
jo
lcall
gs
outsb
addl
push
lds
cmpb
stos
cmp
pop
or
xor
mov
xor
inc
pop
xor
das
mov
fcoml
scas
shlb
int
xchg
rorl
inc
lock
mov
scas
cmp
pop
jl
shrd
shr
or
jmp
aaa
jg
adc
push
and
and
jge
adc
push
cmc
sub
sbb
jae
shlb
je
ja
or
jbe
cmc
cmpl
and
and
push
add
outsb
lret
leave
icebp
xchg
leave
jnp
push
push
dec
sti
pop
or
imul
in
dec
or
rorb
add
pop
xchg
jnp
data16
pop
add
xchg
movsb
and
inc
pop
and
mov
xor
mov
push
dec
xor
jmp
add
jae
inc
jp
cmpsb
xor
xchg
iret
mov
push
add
popw
xchg
scas
xor
push
loopne
xor
xor
mov
mov
adc
cmp
add
dec
jg
in
jecxz
cld
mov
cli
jbe
dec
gs
shrl
ret
adc
loop
mov
sub
mov
es
cli
mov
inc
push
daa
int3
cld
pusha
sbb
and
sahf
popf
or
insb
leave
lahf
jge
shrb
stos
outsl
add
adc
subb
ret
mov
push
cmp
ss
fwait
mov
test
fwait
xchg
cltd
imul
hlt
push
scas
pop
test
not
sbb
int
shl
in
jp
mov
popa
or
jecxz
inc
xchg
mov
xor
lcall
sbb
push
xor
loope
fsubrl
ficoms
in
adc
add
loope
mov
adc
xorl
cmp
fcmovb
test
or
arpl
int
aad
loop
jb
or
and
aas
push
push
fimull
out
shrb
sbb
out
and
dec
xchg
out
lods
add
loopne
mov
xchg
xlat
je,pt
rol
mov
adc
daa
clts
das
cmp
bound
xor
adc
stos
bound
push
insl
test
mov
stos
sti
ljmp
clc
pop
mov
sahf
dec
mov
pop
push
mov
jae
orl
jg
xorb
lret
call
divb
jmp
xchg
lds
and
pop
mov
outsl
cmpsl
jle
cltd
jg
arpl
nop
frstor
cli
inc
jmp
pop
inc
xor
push
mov
int3
loop
pop
add
jnp
int
lahf
das
popa
or
push
add
inc
inc
adc
andb
mov
stos
outsl
fmuls
sbb
cmp
adc
and
jge
mov
mov
inc
aaa
js
rcrb
push
push
arpl
ret
pusha
inc
lahf
mov
andb
jg
sbb
jg
or
mov
std
dec
mov
push
and
inc
clc
sbb
add
mov
jno
xor
or
pop
xor
cmpsl
imul
jne
cmp
dec
jmp
mov
mov
movsl
inc
addr16
sub
push
xchg
outsl
push
loope
push
fcom
adc
inc
push
sub
lock
jb
daa
sbb
in
mov
rolb
push
jg
xlat
mov
in
jno
movsl
data16
cmc
rcrb
adc
imul
push
jb
pop
in
and
mov
mov
push
mov
icebp
test
out
inc
cmp
lock
lahf
dec
cmovne
adc
adc
into
xor
cmp
imul
bswap
mov
and
and
outsl
and
fcomps
arpl
sub
bt
aad
cmc
pushf
xor
ljmp
das
or
push
jns
loope
outsl
pop
or
adc
jnp
xorb
rcrl
int
ret
push
les
int3
hlt
jbe
push
aad
in
pop
mov
sbb
jl
popa
pop
and
inc
jnp
or
mov
push
mov
sbb
int
mov
sahf
mov
clc
adc
push
outsl
mov
pop
js
dec
lcall
fstp
movsb
rclb
int3
and
testb
popa
stc
jne
inc
inc
lods
call
test
mov
shll
pusha
jne
sbb
mov
mov
aam
mov
shll
xchg
fmuls
int
pop
mov
and
xor
in
adc
in
aam
pop
dec
sti
inc
clc
xchg
mov
sbb
mov
adc
mov
mov
dec
mov
sub
or
lds
cmp
or
sub
xor
xlat
cwtl
xorb
sbb
ljmp
jb
imul
cmp
adc
addr16
repnz
adc
adc
xchg
jns
pop
lahf
lret
mov
outsb
jns
ljmp
popf
std
popa
js
push
or
imul
out
ds
filds
sbb
adc
test
and
shrb
sbb
sarb
clc
add
inc
jne
push
jp
je
inc
xchg
js,pn
sbb
pushl
inc
fsubrl
sbb
sub
mov
popf
in
mov
and
in
push
or
gs
cld
sahf
jae
jbe
gs
inc
xchg
sbb
inc
ljmp
leave
and
roll
enter
clc
pop
xor
jns
loop
adc
leave
or
mov
mov
mov
mov
xor
shl
xor
mov
mov
mov
mov
xor
xor
jmp
mov
stos
out
and
arpl
shll
cmc
mov
ja
xchg
xor
das
sbb
outsl
and
adc
sub
mov
xchg
pop
sub
push
sbb
adc
or
sub
jb
adc
sub
mov
mov
inc
pushf
add
adc
loope
jns
popa
sbbl
sbb
cmc
leave
inc
shlb
push
insb
mov
fs
jne
out
lods
inc
cwtl
clc
sbb
xchg
add
lea
fmuls
popf
jb
enter
out
mov
mov
pop
sub
mov
adc
and
adc
add
pop
inc
adc
into
jl
lods
ss
scas
cld
xor
hlt
outsb
xchg
pushf
sbb
cmp
or
movsl
push
xor
lret
pop
jnp
push
icebp
add
jg
das
xchg
je
insb
psrld
adc
pop
mov
ficoml
cmpsl
andl
popa
dec
daa
repz
mov
xor
mov
pop
stos
aas
dec
test
fwait
lcall
add
fcmovbe
imul
stos
dec
stos
mov
inc
roll
mov
push
inc
mov
std
ret
lret
in
int3
fs
cli
test
insl
push
cmp
push
xor
sub
sarb
or
sub
pusha
xorl
push
cmp
movsl
lea
or
adc
jns
xchg
inc
inc
cmc
lea
xor
jnp
pop
into
push
cmp
clc
enter
mov
cmpsb
daa
cld
adc
imul
or
mov
cmc
out
jno
imul
dec
sub
adc
sbb
mov
xchg
push
cltd
mov
imul
in
xchg
push
shl
inc
arpl
fisubl
adc
aad
pop
imulb
fmuls
and
jmp
push
xchg
call
movsl
xchg
pusha
xlat
and
add
jle
push
xor
and
in
mov
mov
jbe
adc
jp
daa
jo
jbe
int
sub
insb
push
mov
out
leave
outsb
fxrstor
arpl
les
sarb
test
cli
xchg
and
lods
sub
into
fmul
mov
mov
adc
or
rol
mov
clc
lretw
xor
sub
or
bound
jnp
testb
pop
mov
pop
sti
mov
out
add
push
leave
inc
xor
push
jp
sbb
and
xor
ficoml
xchg
pop
push
jb
xor
sub
xorl
movsl
aaa
popa
roll
mov
shlb
stc
inc
jnp
xor
int
and
stc
jno
int3
and
or
les
movsb
leave
xchg
pop
xchg
cmp
testb
or
sbb
out
leave
adc
imul
sbb
sbb
add
rclb
add
sbbl
mov
mov
dec
arpl
xor
inc
mov
arpl
arpl
and
and
push
insb
pop
std
sub
mov
lds
and
in
out
jge
xchg
push
nop
divl
mov
cli
pop
and
mov
fbstp
xchg
subl
pop
add
shlb
dec
in
or
sub
fmull
jg
push
out
lahf
add
add
mov
les
fldt
test
adc
ret
ret
sarl
adc
adc
mov
push
js
mov
mulps
or
mov
in
push
lret
dec
cmp
fmull
push
cwtl
mov
es
fldt
pushf
cli
out
std
outsb
pop
pop
xorl
bound
fistps
aaa
pusha
or
clc
adc
push
cltd
mov
jmp
or
js
pop
rclb
and
xor
mov
mov
jns
stos
mov
or
sahf
out
faddp
lods
cmpsb
and
sub
xchg
mov
push
scas
sub
movsb
mov
ja
inc
stos
mov
sbbl
xchg
iret
push
cmpsl
gs
or
or
push
cmpsb
sar
ja
mov
mov
add
xor
mov
adc
cmp
subb
test
ja
and
cmp
xchg
add
push
lea
xchg
xchg
and
pop
push
sarl
stc
test
lds
xchg
push
pusha
enter
xlat
cmp
aaa
jg
fwait
push
adc
stos
shr
std
mov
popf
pop
loope
inc
inc
add
inc
and
push
inc
shrb
dec
sub
push
mov
test
fildl
test
mov
jmp
stc
lret
scas
adc
pop
mov
andl
pop
lock
or
lret
pop
cmp
sbb
adc
cmp
loope
mov
jae
flds
adc
lods
stc
add
dec
adc
out
add
or
mov
cmp
jne
cmp
jne
jmp
mov
mov
mov
mov
mov
xor
shl
mov
mov
xor
mov
jmp
and
loopne
adc
adc
mov
or
mov
sbb
cmc
mov
sahf
cmc
cmp
loope
std
dec
sbb
pop
jecxz
mov
push
loopne
mov
xor
xchg
ficomps
push
push
mov
outsb
daa
cltd
dec
pop
fisubl
mov
push
adc
ret
inc
mov
jge
mov
pop
test
aas
dec
js
xor
jmp
add
hlt
loopne
mov
push
cmpsb
xchg
hlt
xchg
xor
loopne
repz
ret
or
shrl
fildll
jmp
stc
in
test
push
dec
jle
outsb
and
lahf
loopne
add
mov
into
icebp
xchg
scas
xchg
sub
dec
pop
pop
xchg
fwait
popl
call
loop
je
ret
loop
aad
popa
fcoms
or
pop
jl
cmp
cmpsl
add
sub
cvttps2pi
xchg
daa
xchg
inc
je
and
cmp
bnd
es
sub
and
xchg
ds
jecxz
mov
pusha
loopne
push
mov
cmpb
je
mov
mov
lds
stc
sahf
and
test
sub
sbb
ret
xchg
pop
mov
inc
xchg
add
or
mov
aaa
mov
push
dec
popa
jo
jnp
cwtl
fs
insl
mov
lds
lret
adc
and
loop
inc
call
popf
fists
mov
mov
fs
mov
out
test
outsl
cld
shrb
mov
loope
imul
scas
push
mov
fidivrs
fildl
sahf
loop
jmp
and
jo
and
ljmp
test
iret
cld
sub
loope
jno
jns
addr16
xchg
outsb
ficoml
and
adc
mov
xor
cmp
jno
cmp
out
xor
sub
inc
int
les
sub
mov
add
xchg
shll
fs
inc
or
rcrb
call
or
data16
fcmove
mov
lahf
fisttps
add
jecxz
push
push
inc
sub
stos
fnsave
mov
and
scas
pusha
scas
scas
rorl
imul
and
cmp
xor
sbb
leave
repnz
jmp
rcrl
in
es
jbe
pop
xorl
in
dec
sub
insl
cs
sbbb
popa
cmpsb
mov
pop
pop
push
add
subb
fs
int3
rcr
mov
xchg
xor
icebp
subl
insl
jb
xor
bswap
movsb
cwtl
pop
push
test
je
test
sub
je
sahf
sbb
std
cmp
push
and
inc
sahf
sub
aam
or
push
cmp
cld
adc
mov
mov
lock
mov
adc
mov
jl
shr
xchg
jl
jmp
adc
sbb
lock
repz
inc
std
mull
push
dec
inc
lret
scas
cmp
sbb
cmpsb
idiv
iret
ja
sbb
daa
push
cmp
add
add
scas
push
pop
ljmp
jbe
jg
mov
adc
dec
mov
iret
sbb
push
nop
int
jno
dec
push
add
sub
shl
movsb
dec
cmp
adc
lock
xor
sti
push
lock
jmp
sbb
repnz
aaa
mov
clc
mov
cmc
xlat
push
test
push
es
sti
clc
push
and
clc
push
pusha
inc
mov
out
out
lcall
jbe
push
sbb
imul
mov
lahf
popl
xor
cli
xorl
in
faddl
jb
push
add
insl
shr
addr16
sub
jnp
adc
sub
cmpsl
mov
into
sub
push
xchg
dec
popa
aaa
ret
inc
push
jmp
cmp
inc
and
push
mov
cmp
mov
pop
jp
out
or
sahf
aam
inc
sub
loop
mov
cs
aas
repz
xchg
bound
jecxz
or
fldt
loope
sub
sbb
pusha
xchg
scas
mov
test
std
xor
fs
xor
jno
js
jmp
shll
inc
mov
scas
in
mov
mov
mov
pop
mov
sbb
pop
sub
jbe
xchg
je
inc
mov
movsl
outsb
sub
cmp
sbb
mov
jle
jae
mov
inc
or
ja
fwait
xchg
sub
fiaddl
in
mov
xchg
loope,pt
imul
xchg
sti
inc
sahf
das
jns
jecxz
imul
dec
cmp
dec
mov
or
xchg
sbb
sti
sbb
sub
xor
push
dec
insl
sbb
mov
sub
lds
sti
loopne
test
imul
loopne
mov
jbe
mov
rol
xchg
out
movsb
test
or
jecxz
ja
xor
or
push
lods
ret
out
lds
mov
dec
xchg
out
adc
mov
mov
xor
xor
shrd
or
shr
jmp
lds
and
fimull
das
jb
stos
fstp
mov
cmc
mov
test
pop
fadds
mov
je
jle
out
sub
xor
lahf
pop
jg
adc
cmp
inc
fdivrp
lahf
js
es
pushl
mov
adc
sahf
add
push
xchg
lods
pop
int
mov
lcall
add
mov
sbb
mov
mov
xchg
enter
lods
pop
aam
sub
inc
lret
cmpsb
lods
pop
jb
inc
xchg
fwait
clc
pop
roll
cmc
cmpsb
stc
into
ret
sbb
inc
cmp
jbe
sub
adc
in
add
push
fisttpll
push
sbb
cwtl
or
in
or
ds
outsl
dec
les
insl
or
adc
fldenv
outsl
stc
mov
repnz
xchg
out
pop
cmp
lahf
push
leave
loope
mov
stos
dec
bound
iret
repnz
sbb
lret
nop
jae
leave
adc
mov
lret
push
xor
lock
xor
xchg
mov
adc
pop
adc
rol
lahf
in
adc
sub
stos
sub
wrmsr
jo
cli
mov
or
sub
jl
repnz
pop
ja
test
dec
nop
lret
loop
xor
sub
xor
pop
push
iret
mov
xchg
push
ret
or
jae
fldl
mov
imul
and
pop
xor
inc
sub
lret
call
icebp
sub
sub
pop
ret
or
fidivl
cmp
add
jns
mov
jne
testl
mov
scas
and
sbb
push
leave
mov
ficompl
fst
pop
idivb
xchg
fidivl
notb
jae
mov
and
ds
mov
add
aas
xor
xchg
xchg
xchg
shlb
adc
pop
jmp
repz
push
pop
addl
mov
sbb
imull
sbb
insl
call
sbb
mov
cmp
dec
cwtl
and
xchg
popf
jne
add
popa
push
or
inc
std
sti
lcall
jle
stos
ret
push
cld
mov
fwait
mov
jl
popa
andl
nop
bound
stc
jle
fistpll
and
or
sarl
int3
sbb
daa
mov
sub
call
sub
jno
bound
pop
sti
adc
sbb
jnp
leave
mov
cmp
xor
notl
sbb
lcall
adc
cmp
xchg
lret
call
jbe
xlat
in
mov
xchg
scas
pop
insb
shll
sahf
dec
ds
push
mov
mov
iret
mov
xchg
push
pop
ja
bound
mov
inc
ss
cmp
outsl
cmp
adc
sub
jno,pt
sti
jns
sbb
aas
dec
pusha
add
sub
mov
mov
add
mov
xlat
inc
call
rolb
cwtl
movsl
xchg
jl
ss
addr16
mov
xchg
push
pop
pop
pusha
scas
call
aas
roll
xchg
dec
stc
dec
or
movsb
jecxz
aam
or
scas
mov
fcompl
lea
shlb
sbb
adc
out
cld
jl
aaa
pop
das
push
jo
popf
mov
lods
adc
mov
data16
dec
aad
xchg
add
lret
xor
xchg
fs
out
xchg
fstl
out
sbb
loope
cmp
xchg
mov
aad
mov
push
pop
mov
inc
inc
std
dec
jns
push
cwtl
stc
aad
das
xchg
shlb
mov
gs
jmp
ss
gs
sbb
cs
lret
jno
push
sahf
lcall
sarb
mov
pop
scas
or
push
bound
mov
int
ror
pop
push
or
xor
adc
add
sub
fs
ret
movsb
rol
cmpsl
dec
mov
out
jmp
mov
xchg
call
mov
xchg
hlt
pop
sub
push
push
cld
das
dec
or
xchg
das
arpl
dec
fdivrs
fwait
dec
pushf
cli
outsb
enter
adc
sbb
test
pop
sbbl
push
xor
xchg
xchg
int
push
gs
xor
repnz
lds
jp
pop
data16
adc
mov
dec
bound
xor
jae
sti
fildl
pushf
data16
xlat
int
jnp
test
ss
dec
xchg
mov
negb
push
mov
icebp
inc
xchg
jmp
jns
aas
cwtl
pop
loop
cli
adc
pop
ja
fdivrs
push
or
sbb
add
addr16
subps
xor
pop
dec
and
test
mov
mov
push
addr16
aam
popa
xchg
mov
jne
xor
andl
movsl
push
mov
popa
lock
mov
xchg
mov
lods
enter
adc
push
pop
xor
jg
sub
dec
mov
xchg
lock
fisttpl
loopne
or
and
mov
dec
repnz
fdivrl
dec
or
aam
stos
lcall
lcall
test
cmp
sbb
mov
cs
aas
sub
inc
or
mov
mov
push
pushl
push
push
call
mov
mov
shrd
shr
shr
xor
push
xor
jmp
or
test
mov
cmp
xor
stc
mov
gs
div
mov
sbb
andb
push
cmp
sti
pop
xchg
jmp
mov
mov
faddl
mov
push
dec
lahf
loop
sbb
push
insb
cmp
xchg
outsl
cmpsb
int
movaps
cli
fcmovnb
mov
push
enter
lcall
add
mov
fists
sbb
push
stc
test
pop
mov
and
mov
lcall
cmp
jecxz
push
rorb
and
push
outsl
pop
push
sahf
rcr
mov
push
fninit
xor
in
cmpsb
mov
lock
jno
pop
add
sbb
mov
stos
jae
mov
or
inc
jb
enter
hlt
mov
gs
cmp
sbb
pop
subb
iret
outsb
and
inc
cmp
ja
hlt
inc
out
sbb
rorb
pop
jecxz
sbb
lret
test
mov
adc
hlt
sub
stos
insb
xchg
cmp
cwtl
xchg
jb
pop
jg
mov
dec
mov
sbb
les
jle
arpl
je
xchg
mov
aaa
sti
mov
jns
fmuls
pop
xchg
cmp
daa
push
cmp
xchg
add
int
enter
sarl
mov
cmp
mov
les
mov
push
xchg
roll
outsl
cmpsb
cmp
cmc
sub
aam
rcr
ja
mov
stos
dec
mov
sub
in
mov
push
subl
xor
jns
pop
fldz
gs
ret
push
mov
outsl
sbb
notb
adc
pand
push
scas
out
xor
shll
shll
mov
sub
repz
push
cmp
lods
mov
hlt
fsubr
pop
or
xchg
int3
lret
inc
lcall
rcll
rorl
inc
mov
test
adc
mov
and
sbb
lods
repnz
or
push
inc
add
in
test
mov
jg
push
mov
imul
pop
ja,pt
sti
mov
sti
outsb
push
cwtl
call
imul
and
dec
ljmp
test
push
inc
movl
push
dec
push
pop
lahf
mov
std
xor
rol
add
mov
aam
adcb
idivl
jmp
sbb
push
inc
loope
loope
lret
imul
jns
mov
or
mov
dec
movsb
cmp
stos
pop
adc
lret
loop
fisubs
mov
sbb
sbb
mov
lret
call
lea
shrb
and
fistpll
aaa
jo
aad
lret
ds
jbe
xor
sub
repnz
mov
fmul
leave
adc
mov
fs
mov
inc
xorl
xchg
imul
dec
inc
pop
cld
inc
inc
in
rorl
ret
xchg
xor
ja
into
xor
jle
test
sub
jmp
dec
loop
add
jmp
sub
daa
rolb
inc
adc
push
je
lock
jne
cmpsb
lahf
popf
outsb
cmc
add
leave
cltd
add
cs
ficompl
lret
pushf
adc
mov
popf
push
insl
inc
loopne
push
cs
cs
fiaddl
in
dec
int3
sub
into
loop
mov
mov
push
out
fwait
std
jb
das
adc
cmp
decb
pusha
inc
stos
inc
inc
jns
and
push
adc
cmp
int
dec
in
js
pop
and
sub
std
sub
in
xor
push
cwtl
or
jb
aam
arpl
push
mov
jl
enter
ret
shll
repnz
mov
add
mov
push
repz
int3
outsl
insb
push
arpl
imul
pop
mov
jb
jle
add
imul
jns
mov
adc
cld
repz
std
ret
push
fstps
and
sti
jmp
aas
xlat
popa
test
hlt
insb
xchg
add
push
mov
jb
ds
push
movsl
cmp
mov
stos
ficompl
lret
dec
rcrl
loope
jp
xchg
icebp
popf
or
test
adc
adc
cmp
push
xchg
mov
dec
out
push
rclb
sbb
movsb
mov
inc
icebp
cmp
icebp
mov
mov
pop
pop
xor
adc
bound
jne
cmp
sub
xchg
sbb
push
sub
dec
or
pop
andb
or
enter
movsb
cmp
xor
pop
call
imul
sbb
fldenv
xor
rcrb
mov
or
push
push
fldenv
push
jg
push
adc
cli
adc
push
and
les
icebp
adc
aas
cs
pop
dec
lea
int
pop
mov
cmp
addl
lret
out
enter
mov
cli
addps
jmp
dec
subl
xchg
and
sbb
jns
mov
les
out
xlat
cmp
add
aas
jmp
data16
iret
jae
or
xchg
adc
into
add
data16
dec
or
jecxz
llwpcb
div
mov
xchg
es
mov
pop
bound
or
add
pop
jmp
rclb
push
lret
jle
scas
ljmp
adc
jge
dec
sbbl
sbb
int
aaa
mov
lret
pushf
push
or
sub
jno
je
sub
xchg
fistl
popf
ret
mov
cs
pop
add
or
xchg
push
pop
xchg
jl
out
icebp
xchg
or
gs
lds
icebp
outsl
enter
test
in
in
jo
pop
xchg
pop
add
mov
popa
adc
addl
scas
push
sub
js
mov
bound
aaa
sub
xor
mov
mov
pop
rol
or
xchg
ret
and
mov
and
inc
mov
mov
stos
mov
pushf
repz
daa
mov
lods
rolb
adcb
dec
outsl
mov
iret
lea
jge
or
mov
jns
mov
mov
mov
fnstcw
jno
sub
sahf
cmpl
test
out
cli
in
dec
inc
xchg
aad
xor
sbb
outsb
icebp
ret
push
flds
fidivrl
inc
lods
jo
dec
mov
add
sti
bound
daa
mov
inc
lahf
cmpsl
imul
aam
gs
loope
push
xchg
jo
cli
xchg
sub
sub
jl
ret
sbb
dec
subb
insb
inc
cmp
push
cmpsb
je
xchg
adc
inc
mov
sbb
pop
in
pusha
adc
jmp
jne
nop
dec
stc
mov
cmpsl
aaa
je
sub
scas
xor
pop
xor
add
sbb
fsts
sarl
dec
fisubrl
jnp
inc
fwait
mov
sub
inc
popa
imul
adc
imul
mov
popa
stc
inc
aaa
cltd
pop
adc
mov
pop
mov
gs
aad
daa
adc
mov
rorl
gs
sahf
imul
pop
loopne
std
mov
push
aad
popa
hlt
fninit
adc
scas
adc
pop
sub
inc
dec
fsubrs
mov
sub
mov
cmpsl
jb
dec
cli
or
sub
inc
jne
xchg
pop
lock
pop
add
sub
adc
xor
xor
sahf
les
test
dec
mov
mov
mov
cmp
cmp
ljmp
push
repnz
xchg
cmp
or
dec
mov
loope
sbb
xchg
push
fcoml
sub
xchg
lret
enter
push
adcb
and
daa
insl
fiaddl
xchg
inc
mov
push
pop
jae
lea
sbb
into
stos
adc
addr16
push
out
insb
in
loopne
in
mov
pop
lea
xchg
rolb
jp
add
or
repnz
js
imul
xor
or
jle
or
push
aas
out
mov
setbe
or
add
aaa
mov
jg
xor
lcall
call
dec
int3
xor
daa
leave
xor
cmp
inc
orb
mov
push
popf
mov
push
lahf
inc
fistpll
mov
iret
push
xchg
fwait
or
out
cmpl
das
jne
push
inc
adc
sbb
xchg
push
mov
loope
imul
popa
sbb
pop
lret
sbb
mov
aad
cmp
push
push
daa
jno
cmc
daa
popf
inc
pop
dec
xchg
cmp
std
jnp
call
push
lcall
scas
leave
push
cmp
xor
add
mov
xor
sbb
or
test
jo
mov
ror
xor
popf
ja
sbb
sub
mov
jmp
xchg
sbb
adc
std
test
sub
xlat
sarb
mov
sub
cmp
pop
mov
cltd
push
imul
mov
dec
mov
cmpsl
or
stos
mov
cltd
xchg
enter
notb
or
fldl
lea
push
scas
cmp
add
cld
pop
mov
mov
gs
push
nop
in
jne
mov
daa
ret
cmpsl
aad
lds
rorb
popf
scas
int
cli
test
push
divb
repz
int
test
sarl
jne
outsb
xchg
push
int3
in
mov
cmp
jp
push
loop
or
adc
sarl
push
pop
jns
add
mov
adc
std
int
test
lock
lds
inc
sbb
mov
or
repnz
mov
ljmp
repnz
enter
outsl
in
mov
out
loope
data16
pop
loopne
das
sar
dec
jb
sub
sbb
pushf
sti
out
rcll
push
sub
mov
in
lret
cmpsl
cmp
sbb
cwtl
clc
cmc
or
pcmpeqb
std
jae
testb
mov
adc
movsl
sub
in
push
push
call
shld
shl
mov
or
xor
or
xor
xor
mov
mov
mov
mov
mov
mov
shl
xor
mov
mov
mov
xor
xor
jmp
in
mov
adc
sub
sbb
sbb
mov
fsts
nop
in
inc
inc
pop
add
jae
cmp
push
cmpsl
test
pop
fstl
mov
or
xchg
test
inc
loop
mov
jp
jg
push
inc
int3
dec
mov
adc
xor
outsb
mov
call
or
movsb
xor
adc
test
call
repnz
lods
lret
dec
xchg
mov
movsl
push
out
ljmp
cmpsl
icebp
mov
cs
add
shrl
add
daa
jo
orl
dec
lret
cwtl
mov
int
sbb
fwait
adc
enter
jo
sti
xchg
inc
mov
pop
adc
cmc
dec
stos
xchg
call
mov
loop
sub
xor
xchg
scas
popa
adc
insb
jg
pop
ret
sub
call
xlat
and
sub
sarb
in
xchg
repz
and
int
test
and
loop
lock
fucompp
pop
in
movsb
cltd
pop
pop
cmp
and
ret
inc
pop
push
mov
pop
test
adc
stc
mov
mov
outsl
add
add
mov
mov
aam
lods
out
adcl
mov
xchg
gs
adc
lea
cs
outsl
pop
gs
js
nop
cmp
dec
mov
cld
into
lods
out
adc
sbb
outsb
loope
jne
pop
fsubl
mull
xchg
cld
mov
inc
das
xchg
outsb
push
mov
jg
add
mov
stc
scas
js
mov
xor
das
sub
imul
out
jnp
inc
or
aam
lock
and
rolb
test
cmpsl
sub
mov
xchg
outsl
repz
mov
shr
xchg
jg
sub
mov
orl
shrl
inc
inc
inc
dec
xchg
int3
mull
mov
mov
push
push
stos
js
jge
ficoms
js
xchg
xchg
pop
xor
cmp
push
xchg
mov
push
lea
cmp
in
insb
stos
and
pop
push
push
push
rolb
adc
cmpsb
les
cmp
sub
sub
add
ret
sub
roll
jne,pn
mov
je
stc
iret
push
inc
add
in
jmp
xor
inc
out
cwtl
ja
push
and
cld
or
fcomp
fdivl
sbb
mov
ljmp
in
mov
pop
dec
push
out
pop
inc
sub
sbb
rcll
cmpl
sub
mov
cmpsl
sbb
push
jp
lret
and
xor
cmp
das
shrl
aaa
jns
adc
sub
icebp
pop
gs
test
insb
jp
out
mov
xchg
jge
xlat
pop
sbb
mov
pusha
lds
int3
cltd
add
pusha
dec
stos
sti
push
xor
jnp
mov
pushl
pop
mov
mov
nop
leave
out
push
lret
insb
mov
test
lea
out
pop
out
cmpsl
pop
mov
into
lea
hlt
ljmp
sub
push
rcl
inc
pushf
mov
cmp
shll
ljmp
mov
and
pop
add
pop
jne
push
and
popa
shrl
popf
dec
and
pop
mov
xlat
mov
xorb
adc
xchg
xchg
or
test
inc
leave
repz
sub
jno
je
fdivl
test
hlt
fs
mov
int3
inc
lds
mov
jge
js
mov
lea
data16
clc
imul
fldcw
imul
dec
xchg
fimuls
xchg
inc
cmpsl
push
mov
and
and
push
les
subb
lahf
sub
xor
mov
cs
jl
lret
push
in
sbb
xchg
sub
test
jnp
jbe
mov
add
pop
adc
loopne
push
fimuls
sbb
shlb
gs
mov
xchg
cmp
fimull
and
fnsave
xor
xor
cmpsb
push
das
lcall
dec
adc
int3
push
push
lret
push
out
push
or
lahf
mov
cli
bound
popa
xchg
inc
cmpsb
mov
fwait
sub
sahf
sub
dec
imul
mov
mul
je
subb
shll
inc
in
xor
sbb
mov
xchg
jmp
and
adc
mov
inc
ret
jge
cwtl
inc
or
lret
sub
outsl
fisubrs
xchg
jge
pop
ja
inc
pop
or
sub
fdiv
pop
std
mov
add
std
and
mov
fdivrl
adc
xor
mov
push
popf
ja
mov
jne
pop
push
xor
sub
or
mov
fs
mov
mov
push
mov
mov
loope
fldenv
mov
mov
inc
sbb
adc
test
adc
lea
into
adcl
adc
leave
jno
dec
pop
sbb
lea
jge
shrd
shr
or
xor
mov
or
mov
mov
mov
shl
xor
mov
mov
mov
xor
xor
shrd
jmp
stos
pop
movsl
outsb
adc
xor
jo
jecxz
in
lahf
push
repnz
cmc
mov
aaa
fildll
and
mov
enter
inc
and
push
movsl
int3
jo
jne
repnz
jmp
jmp
mov
inc
pop
jno
out
std
push
dec
mov
hlt
xlat
mov
shlb
xchg
in
inc
hlt
imul
sbb
and
popf
adc
jp
pop
mov
test
inc
inc
pushf
mov
mov
push
mov
inc
mov
mov
xor
into
ror
cld
enter
ljmp
push
inc
shlb
mov
std
subl
jae
cmpsl
xor
push
shll
adc
or
xor
je
add
adc
xor
dec
push
sbb
cmp
mov
mov
pop
das
aaa
fistpll
jnp
push
jmp
and
sbb
es
jbe
inc
push
jmp
aas
mov
pop
pusha
and
hlt
clc
lahf
or
mov
mov
popf
or
mov
aas
mov
add
dec
cmp
addb
pop
movsl
jns
push
ljmp
mov
xor
push
adc
sub
inc
mov
xor
pop
inc
push
mov
push
mov
sub
popf
mov
pop
sub
sbb
bound
test
hlt
adc
mov
jae
xchg
ja
push
jb
fstpl
outsl
jl
and
mov
cmp
cmp
mov
je
inc
decl
in
cltd
pop
inc
pop
adcb
fisubrs
addr16
pop
mov
sbb
pusha
scas
jmp
test
das
hlt
arpl
lods
ffreep
xor
lods
fsubrs
roll
int
sbb
out
into
ds
insb
dec
mov
inc
push
jl
jo
cmpsb
jmp
in
or
push
in
aaa
fidivl
out
jns
sbb
mov
scas
out
or
dec
dec
xchg
lret
test
mov
jb
adc
iret
loope
xor
mov
mov
fcompl
ljmp
pop
xchg
mov
leave
icebp
popf
cwtl
aaa
ret
dec
sbb
adc
iret
cwtl
fcomps
jno
push
ret
jl
addr16
test
cmpsl
xchg
dec
mov
ret
sbb
pop
mov
iret
sbb
sbb
jne
dec
push
inc
push
sbb
mov
adc
xchg
lods
and
xor
lcall
fbld
int3
mov
jge
and
xchg
adc
or
mov
scas
test
shr
ret
sti
imull
aam
xchg
push
sbbb
mov
int
notl
pop
lcall
leave
std
xchg
outsl
cmp
pop
push
sbb
sbb
fldt
aas
lods
push
notl
pop
daa
sub
mov
or
push
out
or
or
insb
loopne
pop
mov
adcb
xchg
test
lea
adc
and
dec
rclb
pop
fnsave
mov
jle
rorb
mov
imul
shll
popa
test
xor
rclb
cmp
pop
jno
sub
jno
push
in
add
lock
mov
in
inc
adc
xchg
daa
mov
dec
int3
mov
clc
mov
jg
fisubs
test
rcrb
iret
add
lcall
minps
add
rcrb
xchg
jle
adc
int
cmp
push
sub
cwtl
mov
pop
xor
pop
mov
mov
mov
mov
xchg
dec
inc
shll
mov
insb
push
fildll
and
mov
adc
jle
add
or
sahf
mov
mov
popf
mov
push
lock
lds
mov
into
pop
loop
jl
add
icebp
sub
adc
push
fisttpl
xchg
aam
cs
fimuls
int3
lret
xchg
mov
ss
lahf
push
mov
xorl
push
xchg
or
mov
cmp
mov
xchg
out
popl
mov
imul
iret
in
cld
or
mov
shlb
icebp
idivl
and
mov
jno
fmull
inc
cmp
mov
out
flds
push
mov
xchg
mov
aas
mov
sub
jne
lret
lea
fucomi
push
and
leave
adc
push
data16
out
mov
ret
jmp
push
rcrl
jns
dec
ss
xlat
popf
mov
push
inc
mov
sbb
sub
inc
bswap
test
clc
in
mov
fcomps
push
cs
cld
jge
clc
mov
mov
popf
jnp
inc
xorl
mov
inc
jns
mov
fs
mov
or
jns
and
loop
into
dec
fstpl
fistpll
enter
push
adc
xchg
jge
push
aaa
xchg
ja
stc
shrb
mov
popf
aad
fcomps
stos
pop
je
jp
outsb
adc
pop
repnz
fisttps
cmpb
incb
add
int
lcall
popa
out
aaa
xlat
cld
in
std
mov
dec
push
inc
les
mov
lcall
dec
lret
scas
mov
xchg
xor
shr
or
or
cmp
jmp
out
es
xor
enter
and
dec
lods
xor
push
cmc
jp
push
jae
or
bound
push
stos
sbbl
add
in
xchg
sub
sbb
stc
xchg
in
pop
push
pop
loope
push
dec
dec
jbe
sub
loopne
arpl
sbb
mov
sbb
int3
adc
jb
cmp
jnp
adc
lret
imul
out
out
in
mov
loope,pt
sti
jbe
sahf
sarl
mov
pop
mov
inc
mov
sbb
fwait
outsl
jae
fisttps
or
pop
cli
in
mov
inc
shrl
aad
mov
mov
test
fiaddl
mov
stos
sahf
mov
out
ret
out
or
xlat
insl
jns
cmp
insl
xor
dec
sarl
scas
aas
mov
js
in
jg
cli
pop
cld
cmp
lods
fnstenv
mov
orb
mov
in
mov
pushw
push
arpl
in
and
xor
loop
pop
notb
je
pop
femms
mov
sbb
cmpsl
inc
push
xchg
jmp
push
leave
xchg
pop
dec
pop
mov
movsl
ficompl
pop
mov
adc
sub
idivb
ret
mov
jno
aas
es
jnp
test
mov
inc
jae
lret
dec
and
pop
test
mov
negl
fwait
enter
jno
shlb
and
fldenv
shl
dec
add
in
int3
xor
pop
lahf
inc
loop
sbb
lcall
mov
mov
fincstp
sub
jo
lcall
xchg
sbb
rolb
xor
insb
adc
mov
daa
lret
dec
ret
es
and
shrl
scas
adc
cld
cwtl
testb
cwtl
xor
stc
enter
lcall
push
jle
sbb
xor
les
xor
scas
mov
dec
ret
sbb
mov
lea
sbb
dec
dec
or
arpl
and
inc
icebp
sub
js
sub
iret
push
cwtl
int
pop
or
stos
bswap
test
neg
pop
pop
adc
mov
addl
test
xchg
lret
or
pop
pop
mov
mov
insl
adc
push
add
mov
push
jecxz
push
xor
shrl
jecxz
adc
lea
fcoml
sbb
mov
cwtl
and
sbb
dec
fcmovne
add
adc
and
imul
xor
ja
adc
cwtl
sub
cmpb
lret
mov
xlat
cmpsl
add
test
loope
pop
adc
xchg
sbb
pop
testb
mov
push
xor
aaa
movhps
mov
mov
inc
stos
xchg
sub
add
pop
and
andb
imul
and
and
sub
dec
xlat
xchg
jg
push
pop
sbb
pop
es
jle
add
jge
cld
iret
inc
inc
out
xor
insl
mov
in
and
xchg
bound
fwait
jne
outsb
and
mov
push
mov
loopne
adc
jg
stos
mov
js
js
clc
in
fwait
add
and
or
sbb
lods
jmp
jge
inc
cmc
pushf
ret
pop
dec
pop
or
jecxz
hlt
xchg
out
leave
call
scas
add
push
adc
out
mov
mov
inc
adc
les
push
xchg
inc
outsb
push
mov
lea
subl
mov
or
push
xorb
sti
popa
and
push
jg
sub
fdivrs
or
gs
movsl
sub
pop
dec
icebp
shl
popa
xchg
or
mov
imul
mull
data16
in
adc
sbb
pop
clc
mov
imul
sub
insb
jae
pop
sub
jbe
pop
push
lods
push
mov
stos
cwtl
xor
lret
lea
cmp
xchg
int3
pop
and
jmp
add
push
pop
jb
das
cld
sti
clc
pop
imul
mov
stos
les
icebp
mov
fdiv
mov
adc
test
pop
test
fisubrl
and
test
insl
mov
jp
xchg
cmp
movsl
adc
push
cmpl
in
add
push
out
pop
jnp
lret
add
mov
xor
inc
cltd
dec
in
inc
loopne
test
mov
sti
mov
add
fdivr
ficomps
dec
dec
in
add
andl
jo
popa
mov
popf
pop
repnz
rcrl
mov
jle
push
xlat
sahf
movsb
inc
jnp
rcrl
fwait
cli
inc
sbb
imul
sub
push
fs
das
jae
sub
mov
sub
pop
sbb
or
xchg
adc
nop
cld
aaa
mov
mov
and
ljmp
in
std
adc
leave
mov
dec
push
add
in
jno
add
das
adc
jge
shrb
aaa
sub
and
dec
push
jb
jns
mov
inc
sti
mov
cmp
push
sbb
scas
xchg
fisttpl
enter
cmp
lods
push
outsl
mov
lret
xchg
inc
popa
hlt
pushf
test
or
cwtl
mov
mov
pop
outsb
sub
into
jne
cmp
je
pushl
pushl
pushl
push
push
call
pop
leave
ret
mov
mov
ret
mov
mov
ret
push
mov
sub
push
push
push
movl
movl
movl
movl
movl
movl
movl
jmp
sub
or
adc
adc
xchg
cmpsl
fstl
dec
div
std
cmc
cmc
push
mov
mov
sub
mov
movsl
movsb
push
push
cltd
dec
andb
xor
fucomip
or
adc
dec
ret
int3
ret
mov
mov
adc
mov
cmpl
add
mov
or
and
mov
bound
lods
pop
sbb
cmp
bound
repz
outsb
mov
cwtl
cmpsl
mov
cmp
loope
inc
fucom
movsl
aam
call
stos
in
lahf
std
out
int3
mov
pop
adc
scas
fists
push
mov
imull
push
mwaitx
push
or
mov
outsb
push
pusha
pop
xchg
mov
lahf
pop
lcall
dec
fisttpl
fbstp
enter
mov
xchg
mov
movq
add
cli
jnp
pop
inc
addr16
push
dec
ljmp
cmp
jecxz
icebp
sbb
sbb
movl
scas
movb
int
inc
popf
fidivrs
mov
clc
lods
jge
push
stc
push
mov
jle
loope
adc
sbb
pop
lret
lahf
inc
jb
and
xchg
xor
jnp
inc
pop
inc
aad
incl
imul
mov
jbe
xchg
in
out
mov
sti
jo
cmpsb
test
inc
sti
lods
insl
cmp
xor
lcall
pushf
movsl
call
testb
add
fcoms
cmp
das
cmp
rcrb
repnz
pop
push
dec
inc
in
mov
mov
pushf
push
cld
jle
stos
fdiv
mov
push
cld
adc
mov
jp
mov
ljmp
mov
pusha
fwait
sub
fcompl
pushf
xor
in
and
add
sub
jmp
xlat
lret
test
jo
jno
add
sbb
jno
push
inc
and
sub
imul
push
sbb
sbb
js
mov
push
out
jle
adc
pop
in
sub
les
inc
insb
fadd
movsb
das
mov
pop
out
and
mov
inc
xchg
inc
pusha
incb
dec
ljmp
lods
sbb
in
movsb
dec
leave
jbe
pop
sub
mov
out
sbb
mov
inc
or
stos
push
loope
pop
aaa
icebp
out
rorl
pop
test
mov
imulb
fs
cwtl
jns
xchg
test
and
push
cwtl
mov
and
lret
lret
adc
mov
xchg
fcmovnbe
into
jp
xor
or
pop
dec
lock
mov
or
inc
inc
push
mov
cwtl
test
dec
push
jle
aam
jno
xchg
into
inc
rorl
dec
les
cmpsl
adc
pop
jne
sarl
sbb
dec
ljmp
sbb
ss
in
stc
cmp
clc
call
into
icebp
fmull
mov
ror
inc
repnz
pop
dec
sub
lock
jp
movsb
add
scas
mov
ret
test
add
loop
bound
das
push
ds
ds
pusha
push
repz
lds
cmp
adc
mov
stc
fcmovbe
fs
ja
mov
out
cmp
xchg
fstpl
push
in
out
fsub
adc
sbb
mov
cs
in
dec
divl
jo
mov
xchg
dec
xchg
out
into
cmc
or
mov
xor
movsl
imul
ds
fstps
dec
mov
push
sbb
int3
push
test
flds
mov
xor
mov
mov
jmp
mov
sar
jnp
fdivl
push
mov
shlb
cmpsb
insb
ret
ja
mov
cltd
scas
xchg
cs
sbb
lods
aam
filds
mov
xchg
jbe
lret
daa
adc
fdivl
sub
daa
jle
sub
mov
insb
push
cli
rcll
in
add
or
and
popa
cs
mov
not
aam
push
std
adc
int3
rcrl
fdivrs
adc
test
lock
mov
shlb
dec
outsb
dec
out
jnp
dec
repnz
fstl
jae
dec
lock
or
imul
jmp
jp
xchg
adc
hlt
sarl
fisttpll
div
std
cmc
cmc
imul
inc
jge
jge
jecxz
mov
xchg
sub
les
mov
mov
js
loop
mov
xchg
movsl
cmpsl
mov
call
mov
testl
loope
mov
sbb
jb
dec
mov
ja
mov
xchg
jl
int3
dec
nop
movsb
in
fldenv
add
jno
es
test
les
sti
mov
lret
mov
rcl
sbbl
out
or
arpl
loopne
aaa
shlb
sub
repnz
and
sub
mov
pop
movsl
lcall
add
in
std
rorb
stos
dec
les
filds
outsb
dec
or
fsubrp
std
xchg
inc
fcmovne
ds
adc
dec
push
jns
int3
mov
cld
dec
sub
imul
or
dec
lock
cmc
mov
test
inc
xchg
fucomp
outsl
xor
add
loopne
push
cmpsb
xor
jnp
int
fstpt
cltd
andb
int
iret
pop
jo
outsl
jnp
or
mov
cltd
sahf
xchg
jmp
push
adc
fstl
stc
test
mov
dec
pop
popf
sbb
or
push
stos
lods
es
aas
sub
add
mov
testl
mov
sub
jbe
aam
xor
jae
cs
mov
out
mov
imul
stos
cmp
je
mov
xor
push
stos
dec
pusha
fisttpll
cli
mov
xor
dec
daa
push
jmp
jge
push
mov
jg
sti
jle
mov
adc
cmp
inc
fists
mov
adc
add
out
lret
mov
and
enter
or
movsb
mov
repnz
xchg
xor
adc
adc
ss
mov
fidivs
loope
pop
mov
xchg
push
lcall
jp
orb
cmpb
sbb
std
jne
cmp
mov
icebp
inc
adc
mov
iret
ljmp
aam
ljmp
xor
ljmp
mov
scas
mov
insb
nop
mov
add
push
adc
push
jb
add
stos
or
push
cmpsl
pop
fsts
call
fs
jl
sub
and
mov
lods
adc
popf
enter
outsb
fwait
icebp
cld
ficomps
dec
push
fwait
mov
xlat
repz
cwtl
test
int
mov
jmp
xor
mov
icebp
inc
jb
cld
les
jns
or
mov
dec
cmpsl
sub
xor
inc
fcmovbe
sbb
orb
arpl
mov
roll
lods
in
jmp
add
inc
push
mov
mov
mov
test
insb
sbb
xchg
lds
pop
add
cmp
fstps
sbb
pop
out
ja
aad
adc
mov
jge
jmp
xor
rorb
mov
clc
add
cmp
pop
aaa
es
mov
je
xchg
pop
out
inc
sub
and
add
mov
ss
lcall
ds
xor
jge
cltd
pop
movsb
pop
mov
pop
dec
cli
inc
xchg
sbb
sbb
sarb
push
add
das
daa
in
mov
sub
lret
adc
mov
mov
and
or
sbb
js
icebp
xor
fwait
sub
iret
mov
popa
enter
jle
gs
xchg
cmp
add
xchg
clc
adc
mov
dec
pop
movb
mov
dec
movb
je
ret
inc
cli
push
cmp
adc
bound
sbb
mov
pop
test
scas
add
inc
into
sbb
stos
sub
mov
fincstp
cwtl
shrb
sbb
lret
pop
push
mov
out
xor
jle
movsl
cmp
push
sub
in
shll
adc
inc
lock
sub
jge
mov
aas
xchg
xchg
mov
sbb
sbb
add
incl
add
add
and
add
mov
sub
mov
and
mov
jmp
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
add
or
jmp
jnp
jo
adc
dec
repnz
inc
div
std
cmc
cmc
sahf
stc
or
mov
daa
lea
add
sub
add
aam
outsb
and
insb
pop
jg
push
xor
xor
ljmp
ja
jo
imul
mov
inc
sub
imul
sti
out
es
inc
pushf
xchg
mov
cmp
cli
mov
scas
sub
repnz
jo
push
mov
inc
test
fs
push
fldcw
push
sbb
ds
fadd
pop
in
xor
aas
scas
loope
and
push
pop
adc
ljmp
addr16
sbb
int
es
pop
jp
sub
repz
add
add
sbb
cmp
lods
les
and
icebp
inc
aas
ds
movsb
push
out
mov
and
mov
xor
or
inc
aas
insl
sti
int
repz
push
imul
mov
cmp
popf
pusha
mov
scas
pop
arpl
cmpsb
ret
inc
mul
sub
xor
push
cmp
adc
mov
popa
lret
in
adc
nop
adc
sub
fwait
jg
popa
popf
mov
dec
into
loope
xor
sbb
cmp
add
gs
jge
sbb
push
pop
sub
in
and
aam
loopne
scas
sub
mov
imul
sbb
xor
iret
jle
mov
push
or
jnp
sbb
rcll
jge
jge
loope
int3
xor
push
dec
or
cmp
cwtl
jl
arpl
cld
add
or
or
enter
test
stos
fsub
test
jmp
je
and
ror
fwait
stos
push
xor
cli
push
push
mov
scas
mov
sbb
xchg
pop
hlt
fwait
pop
pop
mov
cwtl
or
out
sbb
hlt
movl
add
lcall
popf
ret
mull
jle
mov
ret
daa
mov
dec
add
ficoml
mov
lds
jg
pop
out
xchg
adc
push
and
das
arpl
pop
nop
stos
das
pop
in
aaa
lods
xchg
in
or
pop
pop
stc
icebp
fs
ficomps
mov
fidivs
cmp
call
mov
mov
mov
dec
pop
mov
mov
call
add
jne
loop
inc
repz
das
rclb
test
sbb
in
repz
stos
xchg
aaa
enter
adc
js
push
pushf
clc
cli
lea
cli
dec
jo
or
mov
out
xor
sahf
push
sub
and
and
mov
push
xchg
sti
cmp
rclb
xchg
lods
mov
shll
and
enter
popf
mov
stos
mov
out
mov
leave
mov
shr
int3
iret
icebp
and
pop
jo
mov
inc
je
xor
ss
adc
sub
or
dec
test
loope
loop
or
or
add
add
sarb
sub
call
leave
add
push
clc
iret
fs
rcrb
neg
stc
sbb
push
inc
pop
enter
xor
sub
or
out
xchg
jb
test
int
popa
push
or
mov
mov
jecxz
jecxz
repz
mov
loop
jno
pop
fnstsw
notb
jmp
xor
sbb
xor
bswap
outsb
adc
fcoms
loope
mov
inc
pop
jle
test
test
leave
leave
jne
stos
dec
mov
test
scas
mov
mov
add
add
out
xor
mov
mov
mov
or
movsl
cmp
jo
and
insb
sub
inc
stos
das
inc
mov
dec
clc
fdivrs
stos
jb
call
mov
stc
dec
xchg
ret
inc
push
std
mov
daa
cmp
std
cmpsb
hlt
mov
pop
inc
loope
insl
ficomps
stos
push
test
adc
fs
jecxz
subl
test
lods
pusha
jns
imul
mov
xor
mov
sub
jmp
jo
cmp
push
xor
cli
adc
das
in
loope
and
sub
cmc
std
cmc
cmc
mov
and
mov
pcmpeqb
push
jl
movsl
daa
shll
sbb
inc
jecxz
jo
cld
icebp
cmp
pop
lret
out
sub
jge
aas
or
jle
popa
cmp
inc
sbb
mov
in
ss
mov
inc
cmpsb
lods
add
fistps
stc
jo
adc
sti
sub
sbb
daa
mov
and
nop
cmp
mov
push
je
fidivrs
repz
je
ja
or
dec
movsl
dec
and
cmp
cmp
add
jnp
adcb
call
mov
jl
into
iret
xchg
push
test
jbe
loop
xchg
std
fwait
fs
cmp
mov
stc
test
push
adc
push
mov
repnz
jg
andb
shrb
stos
pmaxsw
dec
push
sbb
pop
loope
cmp
stc
icebp
aad
pop
mov
xor
mov
inc
inc
push
cltd
hlt
fistpl
xlat
popf
or
arpl
scas
jae
lods
pop
lahf
mov
sbb
call
add
mov
pop
sub
ret
clc
mov
xor
inc
mov
inc
cmp
mov
enter
rorb
imul
test
push
je
jp
cwtl
pop
stos
hlt
jmp
mov
inc
or
outsb
push
lahf
pushf
imul
dec
rclb
sbb
push
nop
jle
sarb
fsts
sub
xor
fs
loopne
into
mov
dec
sbb
jo
loop
mov
test
lcall
xchg
mov
and
sub
cltd
movsl
cld
dec
xchg
test
xlat
jnp
out
stc
push
arpl
add
jns
mov
pop
sub
loope
psubusb
mov
out
out
cli
dec
mov
int3
jmp
dec
mov
sub
stc
cmp
pop
or
cwtl
sbb
mov
or
mov
into
mov
add
xchg
pop
jp
fdivrs
movsb
lock
sub
pop
pmaxub
ja
orl
ret
dec
lret
outsl
mov
int
push
cmp
mov
iret
mov
jg
push
decl
sbb
xchg
xchg
inc
imull
jb
rcrl
repz
add
iret
shll
sbb
lea
notb
ss
ret
cld
insb
lods
out
xchg
dec
imul
or
xchg
mov
jp
fdivl
outsl
cmp
scas
xchg
adcl
mov
lods
movsl
das
sbb
inc
lods
cli
lcall
sub
cmp
fs
mov
jle
cwtl
in
cmp
call
enter
fdivl
xor
or
aas
xor
mov
test
or
inc
dec
ret
mov
das
push
sbb
xchg
dec
jl
dec
inc
cmpsb
dec
out
ret
je
aaa
in
lods
cmp
cmp
or
adc
fdivr
inc
int
gs
daa
and
dec
cli
jg
in
nop
jecxz
pop
pop
rol
dec
inc
nop
mov
leave
or
in
sbb
js
out
xor
and
mov
faddp
jne
mov
adc
les
mov
enter
jno
scas
es
push
pop
push
rclb
negb
in
subb
sti
xor
insl
movsb
inc
cwtl
outsl
cwtl
lods
mov
out
icebp
neg
add
outsb
daa
mov
scas
mov
inc
xlat
cmp
push
push
dec
pop
inc
divb
lret
cli
sub
xchg
xor
adc
mov
mov
into
dec
and
insb
jl
xor
aam
adc
lock
popf
push
jmp
or
jb
test
cmpsl
mov
adc
fistl
ds
popf
lds
pop
ret
adc
and
adc
fisubrs
push
cltd
mov
pop
push
pusha
imul
push
hlt
cmp
insb
enter
sbbb
aad
cli
shlb
jle
mov
add
mov
imul
mov
add
add
and
jmp
test
sarb
cli
mov
das
mov
xor
cmc
std
cmc
cmc
in
jns
insb
lret
rolb
clc
lock
dec
sbb
jmp
push
inc
dec
enter
or
imul
inc
aam
fstps
adc
push
test
jb
scas
pop
mov
mov
cmp
shll
es
xchg
inc
push
rorb
push
ja
jne
lahf
adc
lods
inc
daa
cmp
xor
cmpsl
outsb
lds
ds
sbb
cmp
inc
sub
or
test
dec
into
inc
out
roll
fildll
xor
mov
fnstsw
orb
stos
or
ja
lahf
dec
test
sbb
mov
es
into
sub
les
jg
cmp
ret
scas
hlt
hlt
mov
xchg
inc
orl
jbe
rcrb
sbb
pushf
mov
sbb
sub
loop
sub
repz
sbb
mov
push
testb
jecxz
popf
push
mov
in
out
out
push
and
int
pop
fs
sti
jge
xor
pop
sub
sbb
fdivrs
or
pusha
clc
cltd
lcall
in
scas
cwtl
daa
fmuls
ss
jecxz
and
pop
push
jecxz
das
scas
mov
jge
or
dec
adc
inc
imul
push
cli
int
dec
test
jle
cmpsb
mov
jp
fcomps
ror
jns
pushf
xchg
stc
pop
cli
cmc
dec
push
scas
add
and
add
testb
stos
js
xor
or
xrelease
cmpsl
push
movsl
cmp
cmpsl
ret
cwtl
or
jp
out
mov
and
jno
sahf
popa
sbb
mov
cli
inc
lock
fcompl
hlt
cmc
jle
sbb
xchg
mov
js
push
or
scas
xor
vpunpckhqdq
xchg
pushf
and
cmp
out
bound
cs
shlb
mov
loop
push
es
cld
jb
divl
imul
xchg
inc
xor
sbb
icebp
int
loope
data16
aas
push
push
push
jbe
sbb
leave
or
adc
pop
hlt
sbb
inc
xor
pop
into
insb
lods
aaa
sub
inc
leave
daa
mov
enter
jp
decb
add
xor
adc
fistps
mov
cmp
sbb
mov
cmpsb
dec
jge
aad
and
push
icebp
scas
and
pop
dec
mov
adc
pop
rcll
adc
mov
lock
and
mov
lret
fsubs
or
and
xchg
cmpsb
inc
stc
push
popa
stos
pop
loope
into
dec
sbb
shr
test
es
mov
mov
movsb
loop
lret
sar
sub
xor
pop
dec
push
or
int3
mov
dec
lcall
and
in
and
int
mov
jno
loopne
push
push
in
jecxz
ds
ljmp
adc
call
movsb
sub
movsl
jbe
iret
mov
cmpsb
and
fs
outsl
xor
out
xor
jns
inc
sbb
andps
in
xchg
into
mov
std
shlb
sub
test
mov
mov
mov
adc
mov
cmpsb
loope
fbld
and
enter
mov
push
and
push
insb
int3
push
inc
dec
mov
ret
icebp
call
sbb
cmpsb
pop
sbb
adc
sbb
ds
mov
push
cwtl
repnz
mov
sub
and
movsb
push
fldl
outsb
aaa
push
dec
mov
mov
inc
test
lods
inc
sbb
aas
lahf
push
ffree
rcrl
jae
into
jmp
xchg
sub
ret
and
mov
inc
flds
outsl
je
or
rcrl
mov
decl
pop
sub
cwtl
cmp
jmp
cld
mov
lea
loope
stos
xor
test
pop
mov
push
cmp
cmp
leave
sahf
insl
mov
mov
gs
sub
mov
or
sbb
mov
xor
sub
mov
mov
mov
mov
mov
xor
imul
mov
sub
and
lea
mov
or
add
and
add
mov
and
xor
cmp
jne
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
xor
jmp
or
adc
sbbb
das
sub
div
std
cmc
cmc
ficoms
ror
rcr
xor
and
add
shrb
ljmp
pop
fs
jmp
int
cmpsb
xlat
xchg
dec
sbb
jns
lods
xchg
xchg
adc
stos
mov
sbbb
jbe
arpl
jmp
movsl
test
jg
sub
pop
and
stos
adc
lods
out
ja
es
inc
jg
cmp
mov
adc
jb
fs
mov
sub
mov
cmp
xlat
repz
hlt
sarl
mov
pushf
mov
mov
mov
out
jmp
jno
pop
aaa
lds
inc
sbb
xor
call
lods
xor
or
out
lea
sbb
subl
cmp
ret
mov
inc
mov
movsb
or
jbe
ret
loop
xchg
xor
sub
movsb
and
mov
or
icebp
xchg
out
cmp
jmp
daa
inc
in
dec
jb
push
dec
or
mov
or
cli
loope
cwtl
out
sbb
xchg
cmc
adc
inc
add
push
push
sub
pop
cld
and
insl
lcall
mov
xor
mov
loop
fildll
and
mov
fsub
push
push
loop
jmp
sub
ja
fmull
push
xorl
dec
push
cmc
jg
test
mov
sahf
arpl
lahf
mov
ds
outsb
aas
mov
push
aas
and
push
sahf
pop
insl
loopne
jmp
cmp
mov
pop
jne
mov
add
aad
negl
push
out
fildl
jmp
sub
loopne
cmpsl
sahf
mov
push
sahf
mov
add
in
stos
enter
aad
mov
xor
add
pusha
dec
and
out
and
xor
add
mov
ja
int3
xchg
loope
test
push
ret
dec
in
mov
ss
mov
shll
jae
inc
pop
insb
out
out
xchg
cld
or
mov
dec
mov
popf
sbb
cmp
test
push
test
push
je
test
push
push
fcomps
adc
cmp
lods
push
lds
insb
je
pop
test
jge
or
push
xchg
push
or
fwait
adc
mov
jg
sarl
mov
jp
jge
dec
jmp
inc
les
push
cli
roll
mov
enter
ljmp
mov
xor
add
cmpsb
mov
sub
lods
push
sti
mov
mov
cmp
inc
cmc
dec
mov
dec
dec
inc
pop
inc
rcrb
mov
fldl
inc
inc
cmp
xor
pop
xor
bound
popf
and
fbstp
jne
rep
outsb
subb
sbb
rolb
mov
push
test
loopne
lds
fs
push
lods
std
push
pusha
dec
inc
mov
add
gs
adc
imul
fisttps
ja
cmpsb
in
mov
and
jg
xor
or
mov
vzeroall
shlb
mov
fnstcw
sub
loop
lds
mov
xor
pop
in
cld
dec
xchg
cmp
aad
cmpsb
add
mov
in
loope
in
cmp
mov
sbb
bound
jb
mov
mov
push
cli
loop
bound
mov
aam
fcmovb
sbb
adc
mov
inc
mov
ret
xor
fs
and
push
and
dec
fisttpll
push
dec
push
push
jae
mov
push
das
mov
shrl
test
lcall
movsb
flds
adc
inc
jb
dec
jmp
and
aad
jecxz
sbb
lcall
out
sub
andb
lcall
mov
sbb
je
ljmp
cmp
pushf
mov
push
push
cmp
neg
mov
inc
jns
mov
fimuls
test
pop
out
pusha
divl
push
mov
sbb
test
sub
add
mov
xor
jmp
or
dec
stc
or
dec
rcrb
xor
cmc
std
cmc
cmc
mov
mov
or
mov
nop
lods
dec
and
aad
insb
sbb
cli
hlt
adc
fwait
imul
pop
das
pop
hlt
mov
mul
xchg
sub
sub
xlat
sub
fisubs
fidivrl
mov
fadds
pop
pop
xchg
test
pop
pop
cwtl
andb
jo
mov
sub
jge
insb
mov
mov
js
stos
divl
fdivrl
lret
outsl
push
mul
std
hlt
xor
or
mov
dec
nop
pop
insb
push
inc
inc
mov
loop
rcrb
or
mov
test
adc
test
pop
bound
imul
push
xor
loop
je
inc
js
pop
hlt
add
imul
imul
push
add
faddl
out
mov
dec
xchg
adc
sub
lahf
mov
shlb
mov
xchg
mov
shll
push
or
sub
fwait
push
imul
stos
jle
sbb
ss
push
jle
and
dec
repnz
insl
insb
jle
mov
push
mov
outsb
leave
jbe
mov
repnz
cmp
pop
lds
mov
push
movsb
lahf
sbb
lods
ret
sub
jne
pop
adc
xor
adc
lds
lods
int
mov
push
xlat
jl
sub
aas
push
rcrl
sahf
mov
lret
cmp
jb
xor
adc
sbb
and
mov
hlt
pop
mov
das
cmc
cmp
inc
orl
push
push
push
mov
fidivrl
scas
pop
filds
in
mov
mov
dec
mov
fidivrl
stc
jge
jns
xlat
jb
push
mov
pop
ds
stc
nop
push
dec
mov
stc
fisttps
mov
add
xchg
pushf
pop
inc
sbb
mov
cmp
jmp
cmpb
out
xor
pop
daa
fdivl
dec
and
dec
add
mov
out
fimull
and
loope
cmpsb
daa
add
int3
push
imul
adc
mov
xchg
jno
fimuls
or
shl
mov
loopne
lock
fidivrl
jb
dec
popf
repnz
mov
dec
push
stc
mov
inc
mov
push
push
mov
cld
subl
sub
mov
out
imul
jne,pt
inc
inc
jno
sbb
nop
xchg
sub
add
insl
xchg
call
leave
and
pop
push
pop
out
dec
sbb
mov
rorl
sbb
in
jns
jmp
nop
popf
dec
hlt
mov
cltd
es
enter
in
pop
ret
mov
aad
lods
xlat
jecxz
loop
add
pop
push
push
xor
rcrl
xor
push
mov
lcall
orl
xchg
jae
arpl
nop
jnp
mov
or
jmp
xor
xor
imul
fistpl
mov
cld
pop
push
cmp
inc
jno
jae
test
dec
outsl
mov
jge
addl
mov
or
push
outsl
and
dec
push
adc
and
push
xchg
push
pop
push
insl
mov
xlat
je
jmp
lahf
lret
mov
jp
dec
sub
shrb
or
shlb
mov
mov
push
gs
into
pop
fcompl
out
lret
scas
adc
push
addr16
pop
bound
mov
adc
push
adc
jno
mov
jle
mov
mov
mov
pop
add
jg
sbb
lahf
jp
mov
imul
mov
jbe
mov
dec
and
adc
shl
push
push
xchg
dec
nop
cmpl
inc
iret
inc
aad
inc
into
out
push
inc
lahf
xchg
iret
xor
movsl
dec
and
aam
pop
stc
hlt
adc
ss
jmp
rorl
sub
jmp
test
aam
test
jae
popa
test
icebp
mov
mov
xor
jmp
movl
movl
movl
movl
movl
movl
mov
mov
or
xor
mov
lea
xor
mov
sub
mov
mov
mov
add
or
xor
div
mov
mov
imul
add
xor
sub
mov
mov
mov
mov
and
lea
mov
mov
lea
mov
and
add
cmp
jb
movl
jmp
xchg
pusha
into
sub
sub
push
xor
dec
repnz
div
std
cmc
cmc
push
lcall
mov
cmp
adc
fistpll
outsl
in
mov
mov
and
ffreep
js
ret
sub
push
cltd
adc
pushf
lea
rcll
inc
xchg
sbb
mov
leave
xchg
pop
pop
push
add
addr16
insl
test
inc
jg
jp
cld
mov
sahf
jp
cmp
push
cs
repz
pop
aaa
into
lret
je
sub
and
sbb
pusha
in
add
mov
cmovle
imul
ljmp
add
sub
ljmp
lahf
and
fs
mov
data16
and
ret
or
mov
fiadds
pushf
rcr
out
ss
dec
pop
fldenv
mov
movsl
jbe
jl
mov
mov
or
lcall
xchg
sbb
sahf
dec
cmpsl
cmp
fcomp
test
ds
adc
inc
data16
icebp
lds
dec
sub
in
mov
dec
mov
add
push
lret
or
cmpsb
add
fmuls
stc
loopne
push
rcrb
fucomip
data16
scas
add
adc
ud2
mov
sub
dec
shl
or
cmp
and
mov
rorb
jle
mov
pop
mov
inc
adc
movsl
cmp
lods
xchg
dec
ss
and
aad
cmc
jmp
inc
inc
pushl
xchg
jns
imul
and
lret
inc
jbe
cmp
pop
ficoms
add
aad
les
fstpt
std
sub
aaa
repnz
cmp
rcll
xchg
cltd
sahf
iret
aaa
add
in
aam
add
cmpsl
jb
mov
dec
mov
dec
js
cmp
fcomps
pop
mov
test
fidivrl
out
mov
pop
mov
icebp
xchg
jno
cmp
push
pop
nop
pushf
mov
dec
dec
sub
out
adc
xorb
ljmp
sbb
call
inc
mov
idivl
cmp
xor
jecxz
xchg
inc
cli
insl
movsb
aam
mov
xchg
shlb
ror
cld
insl
out
sbb
jbe
xchg
and
aaa
pop
enter
jae
adc
xchg
ja
in
mov
cmp
cmc
xchg
dec
dec
mov
push
push
jb
cmp
les
push
mov
jb
jp
xchg
add
inc
xchg
test
aas
mov
pusha
call
cltd
sub
aas
repnz
popf
mov
std
sub
cmp
sub
jno
pop
push
rorl
stos
sub
mov
cmp
cmpsl
and
hlt
movsl
xchg
fwait
sbb
cmp
std
jae
test
pop
push
loope
insl
stos
es
or
jle
popf
pop
out
and
ss
stos
xchg
fcmovu
stos
jecxz
mov
pop
nop
mov
mov
mov
fcmove
push
mov
inc
repnz
dec
adc
sub
mov
xor
adc
or
roll
jge
out
jns
inc
jg
jmp
inc
addl
cmc
dec
les
or
test
fnstenv
xor
xchg
push
adc
adc
mov
lret
or
pop
or
aaa
daa
inc
push
xchg
add
and
shll
push
sub
mov
mov
testb
add
add
int3
mov
mov
push
adc
push
push
inc
jp
or
repnz
pop
ljmp
or
jp
mov
fisubrs
mov
xlat
inc
jle
xchg
pushf
mov
js
mov
daa
out
ljmp
les
lods
push
or
ds
call
sahf
xor
inc
fimuls
xchg
lea
sti
daa
sub
jmp
jmp
outsb
and
mov
dec
adc
ret
rol
stos
in
jnp
push
int
cmp
and
into
adc
mov
push
stos
xchg
cld
cbtw
mov
xchg
jecxz
scas
cmpsb
add
shl
add
dec
push
fildll
mov
int3
mov
inc
enter
add
pushf
add
add
push
xchg
push
xchg
inc
adc
int
das
and
div
std
cmc
cmc
add
pop
dec
sbb
shl
les
lea
jle
jle
mov
iret
je
mov
outsb
jge
rorb
sbb
mov
ficoml
ror
and
call
and
sub
pop
add
and
mov
int3
push
sbb
jp
test
inc
mov
adc
pop
inc
lcall
dec
push
cmp
add
stos
push
popa
sbb
lds
adc
push
mov
adc
mov
adc
mov
mov
or
ljmp
lds
movsb
stc
cmp
sub
pop
mov
dec
nop
push
push
mov
ja
sub
push
stos
test
pop
push
insb
insb
sysenter
push
sub
cmp
dec
ljmp
mov
push
xor
clc
outsl
pop
cltd
mov
shll
sbb
outsb
or
cmp
test
add
cld
xor
scas
negl
sarl
jp
fdivs
add
test
loopne
xor
nop
mov
lds
mov
xor
and
pop
cmp
inc
sbb
jb
aam
mov
jbe
adc
in
or
cwtl
mov
call
sahf
insl
dec
dec
fsubp
sbbl
adc
mov
mov
ret
sarb
daa
pop
dec
push
lods
pop
loop
push
add
sarb
clc
and
scas
movl
pop
mov
cmc
movsb
dec
and
pop
dec
pusha
sub
and
sahf
xor
rolb
sarl
pop
inc
lds
gs
push
push
mov
fwait
pop
outsb
ljmp
xchg
dec
in
mov
dec
or
pop
pop
xchg
cmc
rcll
xchg
ret
mov
mov
jle
in
mov
mov
fiadds
add
ss
ljmp
pop
or
inc
or
fisubs
dec
push
mov
popf
icebp
icebp
leave
shr
jbe
xor
mov
jp
lock
notl
jno
and
imul
xor
or
jle
dec
std
call
imul
mov
mov
xor
mov
and
mov
lcall
in
testb
xor
cmp
enter
sbb
jle
sub
and
mov
int
sbb
sbb
std
cwtl
and
xchg
dec
pop
jno
xor
pop
cmp
leave
fwait
cmp
push
mov
imul
shr
lock
xchg
jno
pushf
dec
adc
jmp
and
dec
shlb
movsb
or
lock
lods
mov
scas
imul
sub
ret
lcall
mov
lods
sbb
outsb
add
xlat
lahf
pop
jnp
lcall
sub
lods
ret
jnp
mulb
dec
in
dec
or
push
in
cmp
sbb
lods
sbb
sar
fidivl
in
in
sub
mov
pop
cmp
mov
push
mov
add
jb
ret
jne
rorl
pusha
lret
xchg
pop
dec
sahf
mov
shrb
sbb
xchg
cmp
push
push
mov
pop
push
and
mov
int3
mov
jne
sub
xchg
lds
xchg
icebp
loop
ds
cmp
xchg
loope
mov
imul
std
fs
fucomi
outsb
mov
mov
fucom
add
mov
fsubs
outsb
sarb
jl
inc
xchg
and
cmp
insb
outsb
ja
sub
aam
dec
sbb
pusha
mov
shll
in
fcomip
and
xchg
stos
xor
fwait
push
cmpsb
cmpsl
jo
call
push
dec
shll
aaa
mov
inc
in
pop
mov
nop
stos
icebp
mov
insl
pop
push
aam
mov
jle
cltd
outsb
pop
mov
mov
jp
fldcw
cmp
cmp
jne
mov
ret
add
sbb
mov
lods
shrb
pop
les
adc
cmp
imul
sarb
hlt
sti
cmpsl
jbe
mov
xorl
mov
xchg
sbb
add
inc
hlt
movsb
das
add
movl
movl
movl
movl
mov
mov
imul
mov
imul
or
xor
add
xor
mov
mov
jmp
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
and
mov
or
jmp
adc
xor
xor
adc
lods
adc
jecxz
mov
div
mov
test
pop
fiadds
fnstsw
lods
mov
pop
fadd
out
mov
fsubr
push
popa
test
jns
xor
aaa
mov
fmul
sub
aaa
mov
imul
cmp
jge
and
into
inc
adc
xchg
sbb
fucom
es
or
dec
popa
jl
add
jl
js
ds
cmp
push
aam
add
push
mov
scas
and
and
inc
sub
push
cmp
or
and
shll
jo
test
adc
aam
mov
xlat
ja
inc
jno
mov
idivb
push
aaa
in
loop
insl
xchg
imul
dec
loope
mov
popa
xchg
insl
in
hlt
outsb
jne
leave
in
xlat
or
add
scas
shlb
fsts
mov
jle
inc
jmp
testl
aad
mov
xchg
dec
pop
sub
cwtl
push
pop
imul
ds
dec
fstpt
xchg
push
popf
scas
cwtl
xchg
int
sbb
sub
movsl
mov
xchg
inc
push
sti
shrl
sbb
cld
outsl
mov
mov
mov
rcr
dec
in
xor
scas
popf
dec
pop
fbld
jns
cmp
decb
cmpsl
stc
cmp
dec
cli
ss
dec
mov
xlat
sbb
or
sub
mov
sub
bnd
sti
lcall
out
lods
ror
movsl
shll
sub
fs
addr16
call
cmp
je
lock
pandn
push
mov
in
add
lods
sbb
mov
nop
jge
cmp
pop
xchg
andl
sub
pop
imul
xor
jecxz
sub
inc
xchg
cmp
rclb
or
xchg
mov
jge
inc
lret
fs
fcmovnb
les
fstps
fcompl
mov
fs
in
jge
dec
or
dec
in
int3
and
sarl
mov
mov
jecxz
mov
pop
or
hlt
jmp
jge
ja
je
fs
iret
pop
xchg
push
pop
xchg
ds
jmp
nop
fcmovnbe
push
push
int3
inc
pop
jno
pop
js
sti
jnp
dec
popa
mov
jmp
fucomip
adc
xchg
cmp
jo
cmp
inc
xor
cmpsb
jne
lret
add
dec
pop
xchg
jo
mov
pop
push
mov
mov
xor
xor
div
mov
mov
add
lea
mov
mov
mov
and
or
sub
xor
mov
sub
mov
mov
mov
mov
mov
mov
add
and
or
xor
add
mov
and
add
mov
and
sub
mov
imul
sub
cmp
jb
pop
pop
pop
leave
ret
push
mov
sub
push
movl
movl
mov
mov
imul
or
and
xor
add
xor
mov
movl
movl
mov
mov
add
div
mov
or
sub
imul
lea
mov
movl
movl
movl
movl
mov
mov
or
mov
and
mov
or
sub
mov
movl
movl
mov
mov
mov
mov
or
mov
imul
and
or
and
xor
mov
sub
mov
movl
movl
mov
mov
or
or
mov
sub
mov
movl
movl
mov
mov
sub
xor
sub
mov
movl
mov
movl
mov
add
mov
and
imul
and
sub
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
or
or
mov
mov
xor
xor
sub
mov
sbb
mov
sub
mov
sbb
mov
push
push
push
push
call
add
mov
adc
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
sub
xor
add
xor
push
mov
mov
xor
div
mov
and
lea
add
push
mov
mov
mov
mov
and
sub
mov
mov
add
and
mov
mov
xor
add
mov
push
mov
xor
div
mov
xor
mov
imul
mov
sub
xor
lea
call
mov
mov
imul
mov
or
sub
and
mov
sub
cmp
jne
mov
push
pop
xor
div
xor
xor
add
xor
lea
push
mov
mov
imul
mov
and
mov
or
add
mov
and
mov
div
push
mov
add
push
mov
mov
and
xor
and
mov
mov
xor
pushl
call
mov
mov
lea
mov
incl
mov
mov
xor
shld
shl
mov
mov
xor
xor
cmp
jne
cmp
jne
mov
mov
jmp
lea
mov
mov
mov
mov
mov
sub
mov
mov
mov
sub
mov
movl
movl
mov
mov
mov
mov
pushl
pushl
pushl
pushl
pushl
push
push
pushl
mov
call
mov
mov
mov
call
mov
push
add
push
push
call
mov
jmp
mov
mov
pop
leave
ret
push
mov
sub
movl
movl
movl
push
movl
mov
mov
push
push
push
call
mov
mov
or
and
add
xor
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
xor
mov
mov
lea
mov
mov
or
mov
mov
or
mov
mov
sub
add
xor
xor
lea
mov
sub
mov
movl
movl
movl
movl
movl
mov
and
add
mov
and
mov
imul
mov
xor
div
mov
push
sub
mov
mov
movl
movl
mov
sub
xor
pop
div
mov
xor
push
sub
add
mov
mov
movl
movl
mov
pop
div
mov
xor
xor
imul
sub
div
mov
xor
mov
movl
movl
movl
movl
movl
mov
mov
and
mov
div
xor
add
mov
div
sub
leave
ret
push
mov
sub
push
push
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
xor
mov
xor
mov
or
mov
mov
mov
or
or
or
add
cltd
adc
cmp
jne
cmp
je
mov
mov
mov
mov
push
push
or
or
push
push
call
mov
mov
mov
add
adc
and
and
mov
sub
mov
sbb
mov
mov
mov
xor
cmp
jne
cmp
jne
mov
mov
xor
or
mov
or
lea
xor
mov
mov
and
imul
mov
xor
sub
mov
and
sub
mov
mov
xor
or
xor
div
mov
push
push
sub
lea
mov
mov
mov
xor
imul
and
lea
mov
add
mov
mov
mov
mov
and
and
and
and
push
push
call
mov
xor
xor
add
adc
xor
xor
xor
cmp
jne
cmp
jne
mov
mov
and
xor
div
mov
sub
mov
add
mov
add
add
add
mov
pop
pop
leave
ret
push
mov
sub
push
push
push
movl
movl
movl
movl
movl
xor
inc
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
movl
movl
movl
movl
mov
mov
push
mov
push
xor
xor
push
push
call
push
mov
push
push
push
call
mov
mov
sub
mov
sbb
add
adc
mov
mov
xor
push
push
xor
xor
push
push
shr
mov
call
push
push
push
push
call
mov
mov
sub
sbb
add
adc
shld
shl
or
mov
or
xor
xor
mov
mov
mov
mov
mov
mov
push
push
push
push
call
mov
mov
push
push
and
and
push
push
call
mov
mov
mov
xor
xor
add
mov
adc
mov
mov
mov
mov
mov
mov
xor
mov
xor
mov
push
push
xor
xor
push
push
call
mov
mov
add
mov
mov
mov
mov
xor
mov
xor
mov
push
push
xor
lea
xor
push
shl
push
xor
xor
call
mov
mov
add
adc
add
adc
xor
xor
shrd
shr
or
or
mov
mov
mov
mov
mov
mov
or
or
add
adc
and
mov
and
mov
xor
xor
and
and
add
mov
pop
adc
pop
mov
mov
pop
leave
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
or
sub
mov
and
imul
mov
mov
xor
mov
sub
mov
xor
add
cmp
jne
mov
mov
or
mov
imul
add
mov
push
mov
push
mov
or
mov
imul
add
mov
or
or
mov
add
add
mov
xor
xor
mov
mov
shl
mov
add
add
mov
mov
mov
imul
or
imul
mov
sub
pop
pop
cmp
je
mov
jmp
mov
mov
sub
add
add
add
xor
jmp
movl
movl
mov
mov
or
sub
add
leave
ret
push
mov
and
sub
push
push
lea
mov
mov
mov
mov
sub
sbb
mov
orl
orl
lea
push
lea
push
call
mov
mov
pushl
mov
pushl
mov
pushl
pushl
pushl
pushl
pushl
call
pop
pop
mov
pop
ret
push
mov
sub
push
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
xor
imul
or
mov
mov
xor
mov
and
mov
or
and
xor
sub
mov
sub
mov
mov
xor
add
div
mov
mov
or
mov
sub
add
cmp
ja
push
movl
movl
movl
movl
movl
mov
mov
mov
and
xor
div
mov
mov
xor
or
xor
div
mov
mov
sub
sub
mov
mov
mov
mov
mov
mov
mov
mov
xor
mov
xor
and
xor
mov
div
add
mov
mov
xor
mov
and
mov
or
and
xor
mov
sub
mov
mov
xor
add
div
mov
or
mov
sub
add
cmp
jbe
pop
pop
pop
leave
ret
push
mov
sub
mov
xor
push
cmpl
jg
jmp
pushl
push
pushl
pushl
push
call
push
push
mov
mov
shrd
shr
mov
cmpl
jb
jmp
pushl
call
mov
xor
mov
xor
or
mov
mov
cmpl
ja
and
jmp
push
pushl
pushl
call
shl
mov
shrd
xor
shr
mov
xor
xor
xor
mov
xor
or
mov
cmpl
jb
andl
mov
mov
sub
xor
jmp
pushl
call
mov
mov
cmpl
jbe
sbb
jmp
push
push
push
call
mov
mov
mov
mov
mov
mov
subl
mov
mov
xor
or
sub
and
shl
xor
shld
sub
shl
mov
mov
notl
mov
mov
subl
xor
addl
xor
movl
movl
movl
movl
mov
movl
cmp
jne
cmp
je
mov
cmpl
jl
inc
add
jmp
push
call
mov
mov
xor
shld
shl
mov
xorl
mov
xor
xor
mov
cmp
movl
jne
movl
cmp
je
and
mov
mov
sub
shl
movl
mov
movl
xor
andl
shr
andl
or
xor
mov
adc
mov
cmpl
jb
xor
jmp
pushl
push
push
call
mov
mov
mov
mov
push
pop
sub
cmpl
jge
movl
jmp
push
push
call
mov
add
mov
lea
mov
mov
neg
mov
xor
adcl
shr
sbbl
shl
orl
or
mov
mov
or
mov
movl
cmpl
ja
jmp
pushl
push
push
push
push
call
mov
mov
xor
shr
shl
or
push
sbbl
lea
push
lea
addl
push
xorl
call
xor
mov
cmpl
jb
mov
mov
xor
jmp
pushl
call
mov
xor
shr
shl
or
cmpl
jg
xor
jmp
push
call
push
lea
push
mov
mov
shrd
shr
or
mov
mov
subl
xor
xor
or
xorl
lea
push
shl
orl
call
mov
sbb
mov
sbbl
xor
shl
cmpl
ja
sbb
not
jmp
push
call
shr
or
push
lea
push
mov
mov
cmpl
jbe
sbbl
jmp
push
pushl
call
shrd
shr
mov
mov
xor
shl
xor
adcl
or
orl
lea
addl
push
orl
call
or
mov
mov
cmpl
ja
movl
mov
and
jmp
pushl
push
call
xor
shl
shr
or
push
cmpl
ja
jmp
pushl
push
call
lea
push
mov
mov
shrd
shr
mov
adc
mov
adc
xor
cmpl
jb
sub
mov
and
mov
jmp
pushl
push
push
call
xor
or
shl
sbb
mov
or
mov
or
shrd
adc
shr
mov
sub
mov
xor
xor
or
adcl
add
adcl
lea
push
negl
shl
call
or
mov
addl
mov
cmpl
ja
adc
decl
jmp
pushl
push
push
push
call
shl
xor
shr
or
push
addl
lea
sbb
push
xor
add
xor
mov
mov
mov
sbb
mov
mov
shrd
subl
shr
mov
xor
or
mov
sub
add
mov
sub
xor
mov
or
mov
shl
and
mov
xor
or
or
cmpl
ja
jmp
pushl
pushl
call
mov
shrd
shr
mov
mov
xor
xor
addl
or
adc
add
and
mov
cmpl
jle
movl
jmp
push
push
pushl
push
push
pushl
pushl
call
shl
mov
shrd
shr
mov
mov
sbbl
xor
xor
or
adcl
add
movl
lea
orl
push
subl
shl
call
mov
and
mov
mov
xor
xor
add
shr
shl
cmpl
jle
jmp
pushl
call
or
mov
lea
push
mov
mov
shrd
xor
shr
and
mov
cmpl
jl
xorl
or
jmp
pushl
pushl
pushl
call
mov
xor
xor
or
push
mov
mov
addl
push
pushl
shl
orl
call
addl
lea
or
push
mov
add
mov
mov
xor
mov
incl
shrd
or
shr
sbb
mov
cmpl
jl
add
jmp
pushl
push
call
mov
xor
xor
or
push
mov
addl
push
pushl
sbbl
shl
orl
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
rol
mov
xor
cmp
je
movl
mov
movl
mov
mov
mov
mov
mov
mov
xor
shld
shl
xor
mov
mov
mov
xor
inc
xor
mov
mov
mov
movzwl
mov
cltd
idiv
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
imul
mov
and
mov
and
mov
imul
mov
sub
mov
cmp
ja
mov
mov
shrd
shr
mov
mov
xor
xor
or
shl
mov
mov
mov
mov
mov
xor
xor
shrd
mov
shll
xorl
xor
or
mov
shr
or
xor
cmp
ja
jae
mov
add
mov
mov
movb
movb
movb
movb
mov
movzbl
mov
xor
mov
imul
movzbl
xor
and
add
mov
movb
movb
mov
mov
and
or
imul
mov
cmp
ja
movb
movb
movb
mov
mov
and
or
add
mov
movzbl
cltd
movzbl
idiv
mov
movb
movb
movb
mov
mov
xor
sub
mov
movzbl
movzbl
cltd
idiv
mov
cmp
jb
mov
mov
shrd
shr
mov
mov
xor
xor
or
sub
shl
mov
mov
shrd
shr
mov
mov
xor
xor
shl
mov
or
ror
jmp
mov
mov
mov
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
mov
shl
mov
mov
mov
xor
xor
shrd
mov
shll
xorl
xor
or
mov
shr
or
xor
cmp
jb
ja
cmp
jb
decl
jne
mov
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
add
push
lea
push
shl
call
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
push
push
mov
shl
mov
shrd
shr
mov
mov
xor
xor
or
add
push
shl
call
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
push
shl
call
mov
mov
shrd
shr
mov
mov
pop
xor
xor
pop
shl
or
pop
leave
ret
mov
orl
mov
or
mov
movl
jne
mov
mul
ret
push
or
mul
sub
mov
mov
sbb
mov
addl
mull
add
mov
mul
add
pop
ret
push
mov
sub
push
push
xor
inc
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
movl
mov
mov
sub
mov
or
mov
imul
mov
sub
or
add
sub
shr
lea
mov
mov
mov
and
xor
xor
div
mov
sub
cmp
ja
push
movl
movl
mov
mov
xor
sub
and
xor
mov
sub
sub
mov
mov
xor
mov
div
mov
xor
sub
div
mov
mov
add
sub
mov
mov
mov
sub
or
mov
xor
xor
add
mov
sub
or
add
shr
lea
mov
mov
mov
and
xor
xor
div
sub
cmp
jbe
pop
pop
pop
leave
ret
push
mov
and
sub
push
push
xor
push
mov
inc
pushl
call
cmp
je
movl
movl
cmpl
jle
xor
or
mov
sub
add
jmp
push
push
call
movl
push
adc
movl
mov
mov
and
mov
movl
push
push
push
addl
call
sub
mov
mov
addl
xor
add
xor
mov
mov
and
and
sub
and
cmpl
jg
add
jmp
push
push
call
add
mov
adc
mov
movl
movl
movl
movl
cmpl
jge
mov
mov
sub
sub
jmp
push
push
push
push
push
pushl
pushl
pushl
push
push
push
push
call
movl
movl
mov
adc
mov
mov
cmpl
jle
sbb
jmp
pushl
push
pushl
push
call
mov
add
mov
adc
mov
xor
adcl
xor
or
mov
addl
or
movl
xor
addl
xor
cmp
movl
jb
ja
movl
cmp
movl
jbe
cmpl
jle
jmp
push
push
push
call
movl
movl
movl
movl
movl
movl
mov
cmpl
jle
sub
jmp
pushl
push
push
pushl
call
mov
movl
movl
movl
movl
movl
movl
cmpl
jbe
and
jmp
push
push
push
push
call
movl
movl
movl
mov
mov
imul
mov
imul
subl
sub
orl
and
cmpl
jl
sbb
jmp
push
push
push
call
or
mov
sub
pushl
mov
mov
imul
sub
mov
xor
add
mov
andl
pushl
andl
xor
div
xor
xor
mov
sub
pushl
xor
xor
pushl
mov
pushl
orl
add
adcl
pushl
xor
pushl
pushl
and
pushl
neg
push
mov
mov
add
pop
subl
div
mov
addl
xor
div
mov
adcl
xor
andl
sub
add
pushl
cmpl
ja
movl
jmp
push
push
push
call
mov
mov
div
mov
or
mov
sbbl
or
mov
orl
or
sub
movzbl
sub
pushl
mov
mov
sub
sub
mov
adc
mov
addl
pushl
andl
add
subl
xor
and
or
xor
pushl
pushl
call
cmpl
jge
movzwl
or
sbb
jmp
push
call
movl
movl
movl
mov
cmpl
jb
movl
jmp
pushl
pushl
pushl
pushl
pushl
pushl
push
push
pushl
push
call
mov
sub
mov
xor
div
pushl
orl
pushl
pushl
call
dec
movl
cmp
movl
jne
mov
not
mov
dec
mov
subl
mov
movl
sbbl
mov
xorl
call
inc
lea
cmpl
jbe
xor
xor
jmp
push
push
push
call
mov
lea
mov
mov
mov
sub
mov
mov
xor
shl
cmpl
jl
sub
jmp
pushl
call
shr
or
mov
mov
lea
mov
xor
add
sbb
mov
adc
mov
sbb
mov
add
shrd
cmpl
jl
xorl
neg
jmp
call
shr
mov
mov
xor
xor
adcl
or
mov
subl
push
pushl
addl
lea
push
shl
call
sbbl
lea
sbbl
push
xorl
mov
decl
mov
negl
lea
adcl
push
mov
lea
xorl
mov
andl
mov
subl
mov
push
adcl
call
push
push
pushl
incl
call
cmpl
jbe
or
jmp
pushl
call
mov
mov
mov
mov
shr
shl
or
mov
xor
xorl
mov
adc
lea
mov
adcl
lea
mov
xor
mov
adc
sub
cmpl
jge
dec
movl
jmp
push
push
push
push
pushl
pushl
pushl
call
lea
xor
movl
movl
mov
mov
sbb
mov
mov
or
xorl
or
push
push
orl
push
andl
push
adcl
call
xor
or
sub
mov
or
mov
movl
or
movl
sbb
movl
sub
push
inc
movl
mov
mov
push
subl
push
push
call
cmpl
jl
sbbl
jmp
push
push
call
mov
mov
and
and
mov
mov
subl
add
movl
adc
adcl
xor
xor
cmp
jb
ja
cmp
jbe
movl
movl
andl
movl
movl
cmpl
jl
jmp
push
push
push
call
movl
movl
mov
mov
mov
mov
and
addl
and
sbbl
or
or
add
mov
adc
mov
add
movl
mov
movl
adc
cmpl
ja
add
jmp
push
push
push
call
mov
movl
movl
movl
movl
movl
and
movl
sub
mov
sbbl
mov
mov
cmpl
jbe
jmp
pushl
push
call
mov
xor
xor
and
mov
and
mov
adcl
push
push
addl
push
orl
push
call
mov
movzbl
or
mov
mov
add
movl
adc
orl
or
xorl
or
movl
cmp
movl
jne
cmp
movl
je
cmpl
jb
jmp
push
call
mov
mov
mov
xor
shld
shl
xor
subl
xor
cmp
jne
movl
cmp
je
mov
movl
cmp
movl
je
sbb
mov
mov
and
mov
cmpl
jle
jmp
push
push
call
mov
mov
xor
xor
shrd
mov
shr
xor
mov
mov
or
sbbl
mov
shl
xor
sbbl
or
mov
mov
movl
cltd
cmp
jne
movl
cmp
jne
cmpl
jb
and
jmp
push
call
movl
movl
mov
mov
mov
mov
addl
xor
shld
andl
shl
orl
xor
adcl
xor
cmp
jne
movl
cmp
movl
jne
movl
mov
mov
shrd
shr
mov
mov
shl
mov
xor
xor
or
mov
mov
cmp
jne
movb
movb
mov
mov
add
movzbl
cltd
movzbl
idiv
mov
movb
movb
movb
mov
mov
and
imul
mov
and
mov
xor
cmp
je
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
add
adc
xor
mov
xor
mov
sub
mov
sbb
mov
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
or
or
xor
mov
xor
mov
push
push
push
push
call
push
push
push
push
call
mov
mov
push
push
push
push
call
mov
mov
cmp
jb
ja
cmp
jb
mov
mov
shrd
shr
mov
mov
mov
xor
xor
or
push
push
push
lea
push
lea
push
shl
call
jmp
mov
jmp
mov
pushl
pushl
pushl
pushl
call
mov
mov
shrd
shr
mov
mov
shl
xor
xor
or
mov
mov
mov
mov
shrd
shr
mov
mov
shl
xor
xor
or
mov
mov
mov
mov
mov
cmp
jne
mov
mov
mov
cmp
jne
xor
inc
mov
mov
mov
mov
mov
mov
mov
movzwl
movzwl
and
mov
xor
cltd
movzwl
idiv
push
pop
mov
xor
inc
mov
mov
mov
mov
movzwl
cltd
idiv
mov
movzwl
movzwl
cltd
idiv
mov
add
cmp
jb
lea
push
lea
call
cmp
jne
cmp
jne
xor
jmp
mov
mov
mov
mov
add
adc
mov
mov
push
push
lea
push
call
mov
push
pushl
lea
push
call
mov
mov
mov
mov
mov
mov
mov
lea
mov
add
mov
mov
mov
mov
movzwl
mov
imul
mov
imul
add
xor
mov
mov
mov
mov
mov
mov
mov
mov
xor
mov
imul
mov
sub
mov
cmp
ja
mov
mov
mov
xor
shld
shl
xor
xor
cmp
jne
cmp
je
mov
mov
mov
mov
xor
shr
shl
or
xor
shld
shl
xor
xor
cmp
jne
cmp
je
mov
cltd
mov
mov
cltd
shld
shr
xor
shl
or
or
mov
mov
xor
xor
mov
cmp
jne
cmp
je
pushl
pushl
mov
mov
pushl
mov
call
mov
mov
mov
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
push
push
adc
push
movl
movl
cmpl
jl
movzbl
add
add
jmp
push
pushl
push
push
call
mov
add
xor
mov
cmpl
jl
jmp
push
push
call
xor
xor
mov
movl
movl
mov
xor
mov
mov
mov
add
imul
add
and
or
sub
mov
mov
add
mov
movl
movl
negl
movl
and
movl
cmpl
ja
xor
or
sub
orl
jmp
push
pushl
push
push
push
pushl
call
movl
movl
mov
adc
imul
or
mov
xor
mov
sub
xor
xor
and
mov
and
mov
and
sub
or
mov
and
xor
neg
mov
add
sbbl
mov
subl
movl
movl
movl
movl
movl
orl
mov
mov
xor
adcl
div
add
sbb
mov
subl
imul
sub
mov
movl
mov
sbb
movl
movl
cmpl
jb
jmp
pushl
call
mov
mov
lea
shr
mov
xor
and
xor
add
and
mov
sub
neg
mov
movzwl
and
mov
movl
cmpl
jl
jmp
push
pushl
call
movl
movl
mov
and
mov
sub
add
add
mov
subl
and
mov
sub
and
mov
cmpl
jbe
not
jmp
push
push
push
push
push
call
movl
movl
movl
mov
add
mov
andl
sub
and
add
cmpl
jb
adc
jmp
push
push
call
xor
mov
movl
movl
movl
mov
mov
subl
lea
imul
or
mov
xor
cmpl
jg
jmp
push
push
call
xor
sub
mov
movl
movl
movl
mov
mov
andl
sub
add
sub
or
movzbl
sbb
sub
mov
decl
xor
mov
or
sub
subl
mov
dec
movl
sub
movl
cmpl
jle
mov
mov
sub
sub
jmp
push
call
movl
movl
movl
movl
adc
movl
movl
xorl
mov
cmpl
jge
jmp
push
push
call
mov
sub
add
mov
sub
mov
sub
incl
add
sbbl
push
movl
call
mov
sub
mov
imul
sbb
mov
mov
or
mov
xor
cmpl
ja
movzbl
sub
and
jmp
push
call
mov
lea
mov
and
adcl
mov
or
sub
mov
sub
mov
add
andl
mov
movl
cmpl
jg
mov
mov
sub
sub
jmp
push
push
call
movl
movl
movl
movl
add
movl
movl
movl
add
movl
movl
movl
or
mov
add
mov
sub
mov
mov
xor
and
xorl
sub
negl
mov
lea
subl
mov
mov
adc
mov
or
mov
cmpl
jge
jmp
pushl
push
pushl
push
call
mov
imul
and
sub
sub
mov
lea
mov
movl
movl
sbb
movl
cmpl
jg
xor
jmp
call
movl
mov
mov
mov
xor
xor
addl
mov
call
or
mov
cmpl
jle
mov
xor
mov
adc
jmp
pushl
pushl
call
mov
mov
mov
addl
xor
xor
mov
orl
call
adcl
or
or
or
mov
mov
adcl
xor
xor
mov
adcl
call
sbb
mov
xor
add
and
mov
mov
subl
mov
cmpl
jb
xorl
movzbl
adc
jmp
push
push
call
mov
xor
xor
mov
movzwl
or
mov
mov
add
mov
andl
mov
mov
adcl
call
mov
sub
mov
or
movzbl
sbb
mov
or
sbbl
push
push
subl
push
push
call
movl
mov
cmp
movl
jne
xor
mov
subl
mov
movl
xor
notl
xor
addl
mov
sbbl
call
and
mov
mov
addl
mov
cmpl
jbe
sub
jmp
push
call
mov
xor
xor
mov
call
or
xor
or
adc
mov
mov
addl
xor
adcl
xor
andl
mov
sbbl
call
mov
mov
cmpl
jg
addl
jmp
push
call
mov
mov
xor
xor
mov
mov
xorl
mov
sbbl
call
adcl
or
mov
mov
adc
mov
or
adcl
push
push
adcl
push
xorl
push
sbbl
call
mov
movl
jmp
jmp
mov
mov
and
lea
mov
mov
cmpl
ja
xor
jmp
pushl
push
pushl
push
pushl
pushl
call
movl
mov
xor
shr
mov
xor
adcl
shl
or
or
mov
mov
xor
or
sub
and
mov
mov
and
mov
add
mov
mov
orl
xor
incl
xor
sbbl
mov
sbbl
call
cmpl
ja
mov
mov
sub
xor
jmp
push
pushl
push
call
mov
mov
mov
cmpl
jb
mov
and
mov
mov
adc
mov
jmp
push
call
mov
xor
xor
mov
subl
call
or
movzbl
adc
or
mov
and
mov
subl
xor
decl
xor
mov
call
cmpl
jl
dec
jmp
pushl
push
call
mov
mov
mov
mov
xor
xor
adcl
mov
cmpl
jle
movzwl
sub
jmp
push
pushl
push
push
call
mov
mov
mov
mov
call
movzwl
adc
mov
mov
subl
or
cmpl
jbe
xor
or
mov
sbb
jmp
push
push
push
push
call
mov
or
push
xorl
push
sbbl
push
xorl
push
sbbl
call
mov
mov
cmp
movl
je
or
mov
mov
xor
xor
subl
mov
call
mov
add
mov
mov
mov
sub
mov
subl
xor
addl
xor
mov
call
or
or
and
mov
imul
xor
add
mov
mov
mov
movl
mov
jmp
movl
jmp
cmpl
jge
andl
jmp
push
push
call
mov
mov
xor
xor
mov
call
cmpl
jb
xor
xor
mov
sub
sub
jmp
push
push
push
push
push
call
mov
mov
or
mov
and
mov
xor
xor
mov
andl
call
or
sub
or
andl
mov
cmpl
ja
jmp
push
pushl
call
mov
xor
xor
mov
call
mov
mov
mov
sub
mov
xor
subl
xor
mov
negl
mov
orl
mov
xorl
call
subl
or
add
mov
sbbl
or
push
adcl
push
push
andl
push
call
mov
movl
jmp
mov
xor
mov
xor
xor
subl
mov
notl
call
add
mov
subl
mov
cmpl
jg
add
jmp
pushl
push
push
pushl
call
mov
mov
xor
xor
mov
call
sbbl
or
orl
or
movl
mov
movl
jmp
cmpl
jbe
jmp
push
push
push
call
mov
mov
xor
xor
mov
call
mov
mov
and
mov
mov
add
mov
mov
xorl
xor
andl
xor
addl
mov
andl
call
or
adc
or
mov
mov
or
cmpl
jg
add
xor
xor
mov
sub
add
jmp
pushl
push
push
call
mov
cmpl
jb
add
jmp
pushl
push
pushl
pushl
push
push
call
xor
imul
and
add
mov
lea
mov
movl
movl
movl
movl
movl
movl
movl
movl
mov
add
mov
or
add
mov
imul
xor
add
mov
and
sub
mov
sub
mov
sub
mov
xor
and
mov
mov
add
lea
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
imul
add
xor
mov
lea
mov
imul
mov
sub
imul
mov
xor
div
mov
and
mov
sub
mov
add
mov
xor
mov
imul
or
add
xor
mov
mov
add
add
mov
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
and
add
or
mov
sub
xor
add
mov
and
mov
or
mov
sub
mov
mov
imul
imul
sub
xor
mov
mov
add
add
mov
andl
jmp
mov
inc
mov
mov
mov
cmp
je
mov
mov
mov
add
mov
mov
mov
mov
mov
movl
movl
movl
movl
lea
mov
mov
movzwl
xor
movzwl
sar
mov
movzwl
xor
movzwl
shl
or
movzwl
mov
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movzbl
push
lea
push
call
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
add
mov
mov
cmp
je
mov
mov
movzwl
xor
movzwl
sar
mov
mov
movzwl
xor
movzwl
shl
or
movzwl
mov
mov
mov
movzwl
xor
movzwl
sar
mov
mov
movzwl
xor
movzwl
shl
or
mov
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
or
je
lea
mov
mov
xor
mov
call
mov
mov
mov
xor
mov
call
or
or
xor
xor
mov
mov
mov
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movsbl
cmp
je
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
movsbl
cmp
je
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movsbl
cmp
jne
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
add
mov
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
cmpl
je
mov
mov
movzwl
mov
mov
mov
jmp
jmp
cmpl
jne
xor
jmp
mov
add
mov
movl
cmpl
je
cmpl
je
mov
shl
mov
movl
sub
mov
movl
mov
cmp
je
mov
mov
mov
mov
mov
mov
mov
inc
mov
jmp
movl
push
jmp
mov
mov
ret
push
pushl
pop
or
mov
push
mov
notl
or
jne
not
mov
xor
mov
or
xor
xorl
div
mov
movzwl
and
mov
notl
div
not
mov
movl
jmp
mov
or
mov
sub
mov
andl
mov
shr
movl
rcr
shr
movl
rcr
adcl
or
jne
div
mov
mull
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
xor
mov
pop
pop
ret
addl
subl
movl
cmpl
je
negl
add
movl
mov
mov
movl
pop
pop
pop
leave
ret
movl
cmp
movl
jae
movl
cmp
movl
jae
shld
shl
ret
mov
andl
xor
and
shl
ret
xor
xor
ret
