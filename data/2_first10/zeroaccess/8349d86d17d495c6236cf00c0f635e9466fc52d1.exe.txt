push
mov
sub
mov
mov
inc
mov
sbbl
jmp
xchg
xor
xchg
and
mov
adc
adc
adc
adc
lea
push
repz
lods
push
push
in
lea
ret
pop
rorb
mov
hlt
test
popf
fldcw
push
rorb
scas
inc
sbb
scas
ror
arpl
icebp
dec
js
mov
adc
js
dec
cmp
mov
jns
pop
lahf
or
inc
les
call
sub
movsb
fsts
pop
mov
fidivrs
xor
inc
dec
xchg
in
xor
mov
shlb
stos
iret
mov
cltd
cmp
mov
lock
mov
xchg
inc
mov
negl
mov
lods
fldcw
das
sarb
and
push
js
jnp
jne
pushw
cwtl
inc
popl
fstl
mov
pop
fsubr
dec
js
cmp
xchg
mov
mov
push
and
push
movsl
jge
pushl
or
mov
cmpsb
sub
dec
mov
stos
test
js
loope
push
mov
in
push
or
fwait
jecxz
scas
out
cmp
sub
push
lods
pop
xor
cmp
jo
or
xlat
dec
ficoml
jae
jne
in
out
call
call
push
mov
mov
inc
pop
xchg
xor
and
mov
push
jp
fidivl
ret
jno
ret
shll
stc
out
ss
inc
les
add
mov
aas
clc
addl
es
xchg
sbb
imul
test
cmp
push
imul
inc
mov
scas
mov
adc
and
mov
leave
outsb
pusha
nop
test
lods
or
push
add
or
xor
mov
cmpsb
out
ljmp
jne
xor
js
loopne
outsb
and
cld
pop
inc
stos
repz
mov
js
inc
lods
scas
test
xchg
shlb
jo
xor
leave
xchg
call
out
dec
pop
or
cld
jmp
rcrb
inc
loopne
xlat
xchg
mov
push
xor
aas
js
pusha
xor
and
cmp
push
fs
iret
adcl
xor
and
jecxz
dec
insl
add
fnstsw
cmpsl
jae
loopne
jb
add
dec
ficoms
cmpsl
adc
or
dec
adc
orl
jo
loope
lods
inc
fnstsw
inc
pop
fildl
test
nop
out
test
push
cmp
jg
push
mov
aad
in
push
loop
xor
insl
dec
fsubrs
jae
addr16
mov
mov
lods
lcall
test
pop
stc
and
mov
les
mov
xchg
ss
jbe
inc
sahf
and
or
push
xlat
ret
mov
imul
loope
pop
jo
and
cld
push
lods
insb
pop
lock
push
push
lods
xchg
fdivrl
jecxz
pop
jbe
adc
bound
ret
cmp
imul
jno
lcall
xchg
add
sbb
call
imul
pop
sub
mov
in
enter
insb
sub
push
mov
movl
mov
sbb
mov
orl
orl
mov
and
mov
mov
cmpl
mov
mov
jmp
mov
jbe
pushl
pushl
pushl
call
mov
mov
add
adc
movzwl
sub
dec
or
xor
mov
add
adc
mov
cmpl
movl
mov
jmp
movl
jb
push
push
call
xor
mov
mov
and
mov
or
mov
xor
sub
xor
mov
mov
xorl
sub
mov
movl
sbb
cmpl
mov
not
jmp
mov
jg
pushl
call
xor
or
mov
sub
or
and
dec
mov
or
xor
subl
mov
cmpl
movl
mov
movl
jmp
mov
movl
jb
push
call
or
mov
xor
movzwl
and
sub
sub
adc
sbbl
or
orl
orl
adcl
lea
mov
mov
sub
imul
mov
or
mov
or
jmp
and
sub
sbb
sbb
fs
lods
xor
adc
adc
pop
loopne,pt
mov
sub
push
cmp
popl
sbb
add
push
or
sbb
in
pop
insb
shrl
pop
dec
repz
jmp
sub
movsb
push
js
inc
push
iret
fmuls
icebp
hlt
in
dec
je
outsl
mov
aas
adc
cwtl
xchg
xor
aaa
mov
pop
insb
add
das
mov
repz
movsb
push
cmpsb
adc
sbb
fiaddl
cmp
jl
div
aam
int3
insl
mov
pop
insl
out
test
sub
jae
xchg
outsb
inc
pusha
mov
sbb
add
aad
jbe
test
or
in
call
out
inc
xchg
and
push
jns
hlt
popf
and
cmp
cmp
cmp
mov
es
cmpsb
pop
mov
js
das
adcb
lea
std
dec
frstor
sub
enter
xchg
inc
mov
adc
or
ljmp
or
int
dec
ror
jecxz
ja
push
inc
mov
mov
fucom
jae
dec
ret
jle
stos
sbb
xchg
or
les
repz
mov
or
negb
mov
mov
inc
jb
push
xor
dec
mov
adc
mov
stos
nop
into
pop
jnp
shl
add
daa
rcrl
outsb
inc
in
jae
and
in
cld
or
stos
movsl
or
cmpsb
add
insl
jae
in
inc
sub
stos
outsb
xor
and
insb
cmp
sbb
in
insl
mov
ja
repnz
mov
add
mov
int3
loope
inc
and
jb
sbb
loope
jae
or
mov
rorb
cwtl
push
push
mov
lahf
bound
push
sbb
jne
xlat
push
push
mov
mov
jle
add
hlt
mov
cmp
in
out
or
and
out
ret
mov
push
hlt
loop
push
cmp
sub
push
sti
movb
xor
loopne
pop
xchg
jge
jmp
arpl
mov
inc
jne
imul
nop
lret
xchg
mov
bound
mov
popa
xor
and
mov
insl
push
cs
pop
iret
mov
mov
cmpsb
pop
loopne
push
or
add
out
jbe
inc
mov
adc
mov
adc
xchg
dec
outsb
dec
mov
cmc
pushf
jmp
xor
lret
add
stos
movb
mov
lock
cmp
into
add
cwtl
mov
aam
cmp
adcb
sbb
cmpsl
sahf
aam
inc
jbe
add
inc
lods
xlat
sub
adc
xchg
loope
adc
pop
aam
xor
test
xor
pop
ljmp
mov
popf
or
fwait
jne
scas
je
sub
out
jno
push
push
es
cmpsl
mov
mov
cltd
aad
mov
add
in
and
dec
test
push
lods
cli
pop
push
mov
ret
mov
mov
mov
sub
or
mov
jmp
push
pop
and
pop
leave
and
sti
lcall
pop
adc
adc
adc
push
sbb
mov
mov
das
lcall
es
mov
dec
mov
addl
jne
jg
mov
es
mov
and
dec
sbb
int
push
aas
cmpsl
xor
je
ljmp
xchg
int
xchg
inc
lock
adc
mov
xchg
cmp
mov
test
cltd
push
pushf
ja
pop
out
xchg
xlat
jp
lcall
add
dec
mov
leave
pop
nop
mov
xchg
or
cld
iret
testb
cmpsb
xchg
add
popa
arpl
std
scas
inc
or
xchg
sbb
inc
insb
mov
mov
cltd
inc
pushf
lahf
in
ret
fs
jbe
sbb
xchg
mov
iret
xchg
mov
pusha
cmp
pop
xchg
jb
das
out
inc
sbb
jmp
xor
xchg
stc
jle
mov
nop
cmp
sahf
add
hlt
jle
loope
inc
jno
pusha
xchg
push
in
push
mov
jne
or
subb
cltd
mov
sub
xor
mov
jae
loope
ficomps
cmp
cmp
dec
mov
stc
cmc
mov
push
ret
fdivrp
fucomip
idivl
xchg
jns
push
cli
addr16
aam
loop
push
stc
ljmp
pop
pop
out
rcr
les
mov
push
gs
jp
push
ret
mov
test
cmp
or
adc
gs
xor
adc
sbb
cwtl
cld
loope
add
mov
paddsb
pop
pop
pop
repnz
in
jae
iret
add
mov
and
pop
rol
dec
xchg
jmp
xchg
test
roll
stos
idivl
cmp
sub
cmp
xchg
cli
loopne
sbb
jbe
shl
ds
adc
outsb
and
cmp
clc
int3
xchg
pop
shl
adc
fmul
tzmsk
test
pop
dec
pop
adc
adc
test
decl
ret
cwtl
push
iret
outsl
xchg
ss
xchg
rcl
or
psrld
loop
mov
add
xchg
nop
jmp
test
andl
aaa
xchg
inc
inc
lds
push
xor
in
adc
shll
popa
add
enter
pop
or
rolb
mov
and
jo
cmp
movsl
mov
and
mov
je
icebp
lea
ret
out
sbbl
cmpsl
lods
ja
mov
lods
mov
sbb
cmp
push
inc
mov
xchg
or
jne
rclb
sub
jb
jmp
testl
imul
cmp
or
pop
push
hlt
push
aas
shl
dec
sbb
xor
in
pop
push
int
arpl
cwtl
shrb
pushl
jbe
jnp
jecxz
sbb
scas
xor
mov
lods
mov
call
add
mov
mov
sub
or
mov
cmpl
mov
mov
movl
mov
jmp
mov
mov
jl
push
pushl
push
pushl
push
call
not
adc
adc
mov
sub
mov
movzbl
sub
mov
mov
shrd
shr
andl
mov
adc
mov
xor
addl
xor
or
mov
movl
xor
or
sbb
movl
movl
movl
xor
add
mov
adc
movl
movl
movl
cmpl
movl
notl
movl
movl
jmp
not
jge
push
push
pushl
push
push
call
addl
xor
movl
addl
adcl
movl
add
movl
and
movl
sub
movl
movl
movl
movl
sbb
movl
movl
movl
mov
xor
movl
movl
subl
movl
add
movl
movl
movl
movl
cmpl
movl
movl
jmp
movl
movzwl
jne
push
call
addl
andl
adcl
or
subl
andl
cmpl
movl
movl
jmp
not
ja
push
call
subl
andl
subl
orl
subl
andl
mov
shl
orl
mov
push
subl
push
xorl
push
xorl
jmp
and
pop
and
push
push
adc
adc
adc
sub
jmp
into
dec
mov
mov
in
inc
cmp
dec
cmc
jmp
adc
fsubrl
mov
pop
aaa
in
decb
sub
addr16
adc
stos
rol
jns
rclb
add
loope
in
xchg
fnsave
cwtl
syscall
fisttpl
addr16
mov
xchg
addr16
and
psubw
sbb
ret
mov
jg
sbb
mov
cmc
mov
mov
ss
frstor
push
push
dec
int3
push
shl
lods
fimull
mov
jmp
scas
mov
or
mov
es
mov
mov
pop
jmp
pop
aas
sub
inc
cs
jp
push
test
fwait
insl
dec
fldcw
xchg
fcoml
aaa
out
or
xchg
es
or
ljmp
arpl
sbb
mov
dec
cmpsl
pop
push
pop
cmp
sub
add
bound
dec
sbb
dec
insb
test
mov
mov
sti
int3
cmpsb
add
and
mov
mov
inc
mov
pushf
sti
xchg
pop
and
leave
push
bsr
xchg
mov
lock
inc
and
push
outsb
test
pop
xchg
xchg
xor
bound
lds
jg
or
and
mov
dec
inc
adc
jo
cmc
daa
push
push
cld
push
enter
sub
mov
jne
outsb
xor
call
int3
xor
je
lcall
sbb
pop
lcall
roll
and
push
vmwrite
mov
aas
sti
jo
dec
movb
lcall
jg
jg
push
add
mov
fmull
sub
fs
dec
jmp
insb
popf
sarl
cld
push
push
repnz
inc
cwtl
mov
pop
sub
in
xchg
lahf
cmp
xchg
sub
roll
ud1
xchg
outsl
lret
pop
sbbl
in
and
sub
add
loope
push
ja
outsl
pop
inc
fmull
xlat
insl
cwtl
out
push
stc
fisubrl
sub
cmp
lds
xor
sbb
add
ret
int3
push
aas
aam
insl
jg
xor
xlat
cmpsb
and
fldt
sbb
mov
mov
adc
in
ja
int
arpl
pop
mov
pushf
jg
fmuls
and
add
lods
lret
add
dec
subl
mov
pop
xchg
out
fstpl
test
lds
insl
hlt
stos
mull
test
sti
shll
xchg
fisubrl
and
ret
push
stc
pushl
movsb
ds
push
popf
mov
mull
ja
mov
push
in
sub
inc
jae
xchg
inc
test
xchg
xor
aam
push
in
int3
scas
mov
push
lods
out
cli
aad
add
orl
jo
in
je
jns
fdiv
fmulp
je
push
cwtl
jg
cli
pop
jns
mov
mov
pop
dec
sbb
add
inc
xchg
mov
push
es
or
rcrl
leave
loope
lret
push
call
mov
sbb
mov
mov
xor
xor
not
jmp
sub
sub
negb
adc
adc
adc
enter
xor
push
sbb
inc
cmpsb
mov
adc
adc
add
xchg
call
mov
mov
cmp
mov
push
cmpsl
lods
outsb
incb
shlb
push
xor
mov
test
cmp
push
add
sbb
shlb
mov
adc
push
movsb
mov
test
push
ss
clc
mov
dec
xchg
sub
js
out
sbb
jl
dec
in
insb
sti
ljmp
sub
outsb
mov
fwait
incl
pop
push
add
mov
add
lods
test
add
stc
xacquire
shll
sub
rorl
sbb
in
or
and
mov
jnp
mov
mov
dec
jecxz
imulb
pop
jl
inc
shl
pop
push
mov
popa
mov
inc
cmpsb
sbb
add
hlt
ljmp
xchg
cmp
fbstp
pop
pushf
lods
pop
and
add
pop
sbb
hlt
mov
push
cmp
pop
add
movups
mov
jne
fstpl
sbb
pop
addl
mov
push
insb
jae
dec
fisttps
nop
xchg
int3
sbb
xchg
popf
push
mov
pop
scas
pop
cmp
scas
inc
into
add
mov
push
xor
test
sbb
stos
in
xchg
sub
dec
clc
inc
std
dec
sbb
insl
fmuls
sahf
nop
xor
cmp
flds
out
push
adc
pop
mov
mov
cmc
in
mov
test
inc
mov
add
push
push
xchg
add
jno
mov
xchg
cmp
fcoml
mov
mov
dec
daa
test
pop
push
fdivrs
or
lods
mov
loope
je
add
jbe
outsl
add
and
loopne
push
lcall
jmp
mov
les
pop
sbb
jmp
test
mov
sbbb
mov
ljmp
dec
outsl
sub
cmp
cmp
jl
faddl
inc
push
push
mov
ret
outsb
mov
bound
jmp
in
and
mov
daa
push
jl
xorl
or
jmp
sub
mov
jb
mov
stos
scas
sbb
rol
xor
aaa
mov
adc
xor
mov
cmp
jo
pushf
fidivrl
xor
sub
nop
je
pop
push
add
in
cmc
rcll
call
xor
push
incb
mov
outsl
js
mov
ljmp
cmpsb
jo
push
sbb
ja
jge
dec
push
fwait
cmp
pop
lahf
push
jg
inc
mov
and
arpl
test
clc
push
daa
fisttps
push
mov
dec
dec
scas
test
mov
mov
push
mov
aaa
notb
dec
hlt
xor
cmp
jne
mov
mov
and
adcl
test
insl
mov
jns
and
sbb
loope
pop
into
mov
add
mov
xor
add
add
mov
sub
or
mov
mov
sub
mov
lea
xor
or
mov
and
mov
adc
mov
adcl
or
and
addl
mov
or
adcl
xor
movl
cmp
movl
jne
mov
mov
sub
sub
mov
sbb
mov
shrd
xorl
shr
mov
or
mov
movl
shl
adcl
xor
xorl
xor
addl
or
movl
mov
movl
cmp
jne
adc
mov
mov
mov
sub
add
mov
xor
sbb
mov
cmpl
movl
mov
jmp
notl
jbe
push
pushl
pushl
pushl
pushl
push
push
call
xor
subl
notl
or
mov
sbb
mov
cmpl
movl
movzwl
mov
jmp
movl
jle
push
call
sbbl
xor
neg
subl
sbb
mov
orl
shrd
subl
mov
dec
mov
addl
xor
shr
xor
mov
sbbl
xor
adcl
or
xorl
shl
xor
sub
and
mov
and
mov
xor
add
xor
mov
xorl
add
mov
neg
mov
adc
mov
and
shrd
orl
shr
mov
mov
add
mov
mov
xor
mov
mov
adc
xor
shl
negl
xor
cmpl
mov
mov
mov
jmp
movl
jb
pushl
push
push
pushl
pushl
push
push
push
pushl
pushl
pushl
pushl
pushl
call
sub
sbb
subl
sbbl
neg
adcl
xor
xor
xor
mov
subl
or
mov
add
jmp
lcall
imul
imul
adc
adc
adc
int
shll
dec
sbb
dec
push
xchg
nop
sub
sbb
fisubl
sbb
mull
dec
test
sti
mov
dec
rcrb
out
and
mov
bound
inc
add
lock
mov
adc
and
add
mov
add
inc
pop
sub
cltd
pop
cs
inc
pop
mov
jecxz
dec
sub
mov
lds
in
rorl
push
icebp
fmull
pushf
sbb
push
stos
loopne
je
and
mov
lods
sub
loope
push
pop
jno
xchg
xchg
in
mov
mov
in
mov
mov
mov
ds
dec
dec
out
lock
mov
loop,pn
nop
aad
rorb
and
je
mov
mov
mov
xchg
dec
fisubl
lds
mov
cwtl
lods
aas
orb
adc
in
mov
dec
imul
fnstcw
lret
fbld
arpl
cmp
lods
lahf
add
mov
mov
push
jl
mov
inc
ja
jg
mov
adc
push
fildl
fiaddl
push
pop
pop
mov
add
adc
into
jp
mov
and
repz
movzbl
addr16
or
sahf
imul
mov
push
add
mov
lret
push
xor
outsb
stos
add
inc
mov
inc
pop
por
xor
shlb
jno
and
xor
andb
xchg
add
ficoms
dec
iret
or
push
ss
mov
fsts
jge
adc
mov
mov
or
sti
cmpsb
mov
int
sub
jg
cmp
int3
cltd
fisubs
in
mov
jge
aad
in
add
insb
rcrl
and
push
cmp
add
and
push
sbb
and
mov
sbb
shlb
pop
imul
inc
movsb
call
push
repz
sbb
sub
leave
and
aad
add
lods
call
stos
out
mov
movsl
add
sbb
push
add
cwtl
add
hlt
sub
inc
mov
jmp
push
outsb
leave
fisttpl
dec
js
dec
xlat
jle
dec
iret
jg
dec
scas
pop
call
push
in
mov
cmpb
xchg
out
dec
add
stos
jl
test
add
jle
sub
xchg
adc
jge
adc
daa
out
sub
jnp
push
ja
leave
pop
ss
mov
ficompl
and
stos
add
out
sbb
inc
xorb
and
xchg
insl
pop
push
and
jne
in
ja
imul
les
pop
cmp
fwait
outsb
dec
out
outsl
cltd
mov
lcall
je
inc
add
cmpsb
sub
add
test
push
mov
inc
popf
lret
rol
aam
xorb
xchg
and
jb
pushf
xchg
testl
cmp
inc
xor
push
ljmp
jmp
xchg
cltd
bound
and
push
jo
imul
adc
adc
pop
cmp
dec
xor
ss
ret
add
jecxz,pt
shlb
lret
scas
push
gs
jne
gs
xor
lods
push
jnp
adcl
cli
imul
xor
fsub
rol
inc
int
sub
add
xlat
mov
stos
insb
xor
push
sbb
cmp
pop
out
dec
push
xchg
aaa
loopne
and
fs
inc
leave
ds
adc
and
cwtl
mov
mov
xchg
shll
mov
lds
sbb
pop
leave
fcomi
test
stc
nop
mov
fistpl
mov
mov
std
cmp
inc
push
lsl
xchg
xchg
cmpsl
pop
fwait
leave
xlat
adc
dec
mov
lds
aas
sbb
mov
push
dec
mov
out
repnz
nop
mov
fidivs
sub
or
push
jo
adc
outsl
or
loope
addr16
or
lds
jle
pop
mov
loop
lahf
and
pop
call
lret
das
jmp
dec
sub
ret
mov
add
movsb
int3
add
sub
xchg
jp
std
sub
pop
inc
es
test
loope
add
pop
nop
imul
mov
out
pushl
jge
xor
mov
mov
pop
and
inc
jb
test
shrb
mov
cmp
jp
pushf
adc
in
push
mov
xchg
sub
pop
bnd
adc
jp
adc
cmpsl
dec
jne
pop
mov
add
inc
push
cmpsb
mov
js
pop
lahf
fldl2e
sub
addr16
and
rcrb
loope,pn
adcl
dec
inc
pusha
jo
mov
mov
push
or
cld
cmc
mov
add
movsb
or
sbb
ljmp
cmovbe
xor
push
mov
daa
adc
incb
xorl
arpl
insl
inc
inc
push
je
int
mov
sbb
pop
mov
adc
mov
push
sub
mov
or
and
fiadds
in
inc
std
xchg
dec
aaa
jmp
push
clc
loope
xor
xchg
pop
push
push
inc
mov
xchg
dec
xchg
adc
inc
mov
mov
cmpsl
cli
lock
mov
dec
push
or
sub
sbb
fldl
loopne
into
gs
rol
sar
xor
cmp
loop
and
lods
push
xchg
arpl
pop
mov
adc
lds
mov
je
test
xchg
in
sbb
cmp
jp
lea
and
jns
xor
int
dec
mov
mov
sbb
mov
mov
imul
insl
mov
popa
ret
jp
cmp
js
jno
adc
xchg
aad
adc
mov
add
pop
adc
mov
loop
rcll
mov
cmp
fcomps
nop
or
popa
aas
outsb
sub
in
dec
xor
andl
shr
mov
sbb
mov
mov
xor
orl
xor
or
shl
orl
lea
neg
mov
movzbl
add
mov
mov
shrd
subl
shr
mov
cmpl
mov
mov
mov
jmp
mov
movl
jae
push
pushl
pushl
call
dec
not
or
sbb
adcl
sbb
mov
mov
adcl
xor
mov
xor
orl
or
xorl
shl
add
imul
mov
movzwl
xor
mov
mov
shrd
mov
adc
mov
movl
xor
shr
mov
sbb
jmp
out
pop
out
pop
pop
jns
lcall
push
pushf
lods
cmp
adc
adc
adc
or
add
call
adc
shlb
enter
sub
aas
adc
ljmp
inc
mov
sbb
push
mov
xchg
leave
mov
stos
stos
mov
pop
sub
test
sub
lods
or
int
out
cmp
and
sbb
mov
mov
adc
push
test
pushw
dec
lret
mov
jbe
mov
movsl
adc
enter
test
mov
sub
stos
imul
mov
call
lds
pop
xor
bound
pop
dec
xor
mov
jmp
std
or
ficoml
sbb
jmp
scas
mov
aas
jne
add
sti
addl
imul
sub
sub
popf
lret
mov
loop
add
mov
popa
xor
sbb
int3
fcmovb
mov
pop
inc
scas
jmp
mov
sub
mov
mov
jg
ret
cmp
lahf
movsb
ljmp
fmulp
cmpsb
cld
push
popl
mov
subl
sbb
and
fdivl
mov
and
sahf
popf
xchg
cs
seta
or
sub
outsl
or
cld
cmp
mov
sbb
jo
xchg
adc
cltd
rorl
xchg
das
ret
stos
sub
scas
adc
sti
enter
enter
pop
addr16
dec
mov
mov
xor
out
loopne
scas
repnz
sbb
xchg
fstl
jp
jmp
xlat
jmp
sti
lcall
add
int
inc
mov
push
lock
adc
mov
in
inc
dec
mov
mov
int3
xchg
nop
sub
sbb
in
repz
js
mov
xchg
jne
mov
test
mov
pop
dec
inc
cltd
shlb
in
cli
xchg
cmc
mov
cmc
jno
loop
xchg
std
iret
subb
xor
stc
inc
mov
aaa
cltd
dec
xor
push
xchg
or
cwtl
adc
inc
push
sub
cmp
xchg
pusha
ret
push
insb
call
and
outsl
lods
loopne
cmp
pop
add
xchg
call
cmp
add
xor
neg
into
xchg
gs
filds
popa
and
je
inc
and
adc
lods
xchg
mov
push
sahf
fbld
ja
ret
pop
cmpsl
fwait
pusha
mov
mov
sbb
adc
push
and
orl
inc
pop
push
add
in
push
icebp
popf
mov
adc
fsts
jo
xorb
add
shlb
ret
mov
xor
cld
add
lock
loop
faddp
inc
cmpsl
dec
ds
dec
aad
cs
jnp
add
cli
mov
xor
or
orl
shl
sub
movl
mov
movl
cmp
mov
mov
jg
sbb
mov
cmpl
mov
movl
jmp
notl
notl
ja
pushl
pushl
pushl
pushl
push
push
call
adcl
mov
add
sbb
add
and
mov
subl
shrd
mov
cmpl
movl
mov
mov
jmp
movl
ja
push
call
or
mov
mov
adc
movl
mov
add
movl
dec
mov
xor
shl
xor
orl
or
shr
mov
mov
mov
mov
xorl
shrd
shr
mov
sbb
mov
andl
mov
xor
sbbl
xor
or
orl
shl
imul
orl
sub
jmp
mov
dec
mov
shrd
orl
mov
mov
sub
mov
xor
andl
shl
xor
xorl
or
orl
shr
xor
mov
mov
cmpl
mov
mov
jmp
movl
movl
jae
call
and
xor
xor
xor
or
sub
add
subl
mov
mov
sub
imul
adc
sbb
jmp
popa
aad
mov
mov
popf
adc
cwtl
punpckhdq
adc
adc
dec
pop
sbb
or
nop
adc
sub
inc
shr
in
and
out
sbb
adc
push
insb
lret
sub
push
jbe
fsubs
pop
ljmp
ljmp
es
sbb
dec
add
sbb
mov
clc
and
data16
mov
push
push
cwtl
scas
outsb
or
pop
push
mov
rolb
movsb
fcmovbe
push
push
push
sub
ret
mov
mov
push
sahf
push
arpl
lods
faddl
ret
xchg
jns
mov
push
push
bound
int3
mov
rclb
sahf
mov
pop
in
addb
xchg
sahf
inc
adc
mov
jmp
loop
rclb
add
mov
jbe
imul
popa
aas
xchg
mov
push
clc
ror
adc
cltd
shrl
js
mov
push
xor
lahf
add
jae
push
sub
pop
mov
jbe
pop
inc
adc
or
mov
push
iret
push
dec
and
jmp
popa
mov
mov
aas
inc
xchg
dec
mov
scas
mov
sbb
cld
sub
shll
jmp
les
or
cmp
mov
jmp
sub
iret
jle
xchg
mov
ror
fdivr
test
push
dec
adc
cmpl
bound
xchg
mov
arpl
aad
dec
loopne
dec
stos
mov
clc
or
push
inc
mov
sub
push
mov
loopne
sub
jne
clc
pop
pushl
leave
adc
andb
push
jo
fbstp
jg
jmp
iret
or
and
and
sub
jecxz
lret
mov
pop
insl
inc
inc
ja
lahf
push
fs
cwtl
out
and
push
hlt
jns
xor
push
imul
test
adc
inc
arpl
xchg
dec
mov
push
cmp
inc
add
cmp
icebp
mov
jb
ds
out
imul
pop
xchg
jmp
or
out
inc
inc
loop
jno
push
sahf
cmp
lret
inc
pop
sbb
adc
adc
xor
mov
pop
cmp
adc
in
fisubrs
xchg
je
mov
test
sub
pop
std
inc
pop
dec
hlt
mov
adc
push
inc
cmp
cs
test
dec
jge
rorb
testb
jle
dec
dec
clc
xchg
sahf
xor
mov
shrl
adc
fcmovnu
and
and
ds
xchg
aaa
mov
push
xchg
cmp
in
mov
jge
mov
ds
or
xchg
cmp
lea
mov
stc
inc
or
mov
ret
dec
inc
sub
add
leave
dec
jbe
mov
out
xor
xchg
clc
jne
scas
or
or
push
cli
mov
mov
in
pusha
jb
xchg
xchg
adc
pop
ss
test
xchg
fildll
pop
inc
xchg
adc
dec
jle
xchg
push
sub
adc
cli
cmp
jae
dec
adc
push
mov
jg
jno
cltd
decl
mov
scas
mov
or
cmpl
mov
movl
movl
jmp
notl
je
push
push
call
sub
movzbl
sbb
movzbl
sbb
sub
and
mov
adcl
shrd
sbbl
shr
mov
or
mov
mov
sbb
mov
xor
xor
adcl
or
xorl
shl
add
add
xor
mov
movl
mov
shrd
shr
mov
cmpl
mov
mov
jmp
movl
movl
jbe
push
push
push
push
call
and
xor
add
add
add
movl
xor
add
mov
xor
sub
mov
subl
xor
shl
xor
or
sbb
mov
cmpl
mov
mov
movzbl
jmp
notl
jl
push
pushl
push
push
push
call
sub
adc
sbb
subl
add
movl
adcl
mov
mov
add
movl
cmpl
movzbl
mov
mov
jmp
movl
movl
jl
push
push
push
push
pushl
pushl
push
pushl
call
sbb
sub
add
and
add
sbbl
sub
mov
movl
mov
sbb
movl
mov
mov
mov
or
shrd
subl
shr
cmpl
movl
movl
jmp
movl
jae
pushl
pushl
pushl
call
sbb
add
and
subl
adc
and
adcl
mov
mov
mov
add
mov
subl
xor
shl
and
xor
xorl
or
lea
mov
mov
mov
shrd
shr
mov
mov
shl
mov
xor
xor
or
mov
mov
xor
jmp
or
adc
inc
add
pushf
lods
sub
push
mov
adc
adc
inc
loope
dec
sbb
popf
jle
cmp
dec
mov
push
pop
jge
jbe
movsb
aad
imul
popl
jo
mov
inc
jl
mov
mov
fwait
rolb
sub
xchg
pop
in
jg
and
sbb
xlat
pop
jae
ss
pop
sub
mov
xor
popa
pop
roll
mov
or
iret
jle
dec
lahf
leave
lea
icebp
popa
js
pop
xor
sti
out
cli
inc
cwtl
mov
inc
or
movsb
data16
sub
inc
mov
lods
xchg
test
add
fbld
pop
mov
test
push
cli
cli
mov
jge
sub
test
mov
mov
pop
aad
xchg
daa
or
ja
push
cmp
sbb
ficoms
xchg
cld
push
daa
lods
sub
mov
mov
cli
mov
sub
xor
pop
hlt
or
cmp
mov
das
jl
mov
subl
aas
neg
add
xor
adc
cmp
push
pusha
or
cmpsl
int
ljmp
into
roll
pop
add
lret
cmp
add
lods
das
dec
or
dec
mov
lahf
iret
pop
and
sub
dec
adc
lret
push
cmpsb
mov
cmpb
inc
xchg
pop
test
cmp
pop
jb
outsl
jle
inc
outsl
push
sub
xchg
rcll
push
andb
cmovo
jno
or
lcall
and
or
or
lret
fisubrs
aas
and
push
out
xchg
and
mov
pop
cwtl
stos
lret
mov
fisttpll
inc
into
dec
push
mov
out
outsb
pop
adc
xchg
xor
incl
stos
sbb
rorl
int3
outsb
mov
addr16
imul
leave
xor
fsubrs
lock
xchg
aad
adc
test
pop
sub
sbb
push
mov
aas
dec
int3
sbb
and
cltd
imul
js
sbb
mov
cmp
insb
push
xlat
jns
cmp
and
ds
push
adc
lds
clc
xor
fwait
mov
cmp
xchg
dec
or
xor
lea
outsl
mov
mov
or
dec
pop
sub
mov
outsl
movsl
sub
cmp
cltd
xchg
mov
mov
mov
mov
jp
movsl
push
sub
mov
test
lret
out
or
popl
sbb
xchg
and
pop
fmull
mov
cmpsb
outsl
xor
inc
mov
add
daa
xor
sub
sbb
popf
inc
pop
sbb
cltd
push
and
sarl
adc
imul
mov
mov
mov
imul
inc
mov
int3
xchg
or
ss
jle
mov
lret
lods
popf
popf
ss
std
pop
int
xchg
sbb
xchg
lret
addr16
jb
arpl
xor
int
ja
mov
inc
loopne
dec
in
lods
enter
add
in
mov
or
lea
mov
mov
mov
shrd
shr
mov
mov
shl
mov
xor
xor
or
mov
mov
or
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
lea
jmp
gs
test
sbb
xchg
js
ret
and
adc
adc
adc
mov
loope
shrb
lods
or
mov
mov
and
inc
adc
fbld
stos
lds
int3
std
adc
clc
adc
nop
jns
and
out
xlat
sarl
lea
mov
sbb
sbb
sahf
clc
pop
ficomps
shrb
jmp
sbb
inc
xor
gs
xor
lret
in
testb
mov
jl
pop
ds
sbb
inc
ficoml
cli
clc
outsb
pop
sahf
jge
push
stc
push
mov
in
das
in
mov
outsl
ret
outsl
test
sbb
adc
lods
sar
pop
divb
cld
cmc
mov
push
iret
jecxz
push
or
ja
xchg
out
mov
pop
enter
lods
ss
dec
fisttpll
cli
inc
dec
popf
std
mov
call
stos
cmp
dec
rclb
and
lods
out
add
or
mov
xchg
loopne
xor
push
ret
and
js
fstl
xchg
inc
add
out
int3
push
xlat
stc
popa
movsb
mov
push
pop
adc
aam
jae
jecxz
lods
dec
mov
adc
pop
xor
mov
or
xchg
stc
mov
cwtl
adc
rcl
bound
fnstenv
or
ljmp
in
inc
es
mov
dec
mov
movsb
test
adc
imul
gs
pop
mov
js
mov
inc
fwait
xor
mov
cmpsb
mov
jnp
cmpsl
and
repz
mov
xor
mov
daa
adc
addr16
je
sahf
xor
jecxz
pop
jle
inc
add
and
repz
divb
aas
cmpsl
cmp
sti
sub
loopne
rcll
sbb
outsl
xor
mov
cmp
fiadds
out
daa
pop
in
xchg
sar
lea
fucom
and
push
add
outsl
iret
mov
sbb
add
dec
imul
aad
or
push
xchg
movsb
xor
cmpsl
jmp
in
out
popa
cs
dec
xchg
cli
push
fs
bound
cmp
sbb
jge
sbb
insb
pop
shll
lds
mov
std
add
xlat
mov
cmp
jge
sub
stos
pushf
adc
lds
pop
inc
movsl
and
jbe
mov
enter
and
int3
sbb
mov
ljmp
mov
inc
inc
in
call
test
xchg
sbb
dec
cmp
imul
xor
cmp
mov
pop
mov
int3
sbb
je
ja
repnz
and
sarl
lret
inc
and
cmc
jmp
ds
jbe
stc
ja
das
aas
jnp
in
inc
or
es
dec
pusha
test
push
mov
xchg
cmp
push
dec
aaa
ljmp
in
gs
int3
fistpll
ja
icebp
ja
adc
add
push
xchg
pop
andps
dec
mov
leave
fisubl
mov
push
pusha
loop
test
addr16
mov
mov
mov
shrd
shr
mov
mov
xor
shl
mov
xor
or
mov
mov
add
mov
mov
shrd
shr
mov
mov
xor
xor
or
jmp
cli
mov
cltd
mov
adc
int3
adc
adc
adc
lock
ret
ss
push
loop
stos
imul
sti
scas
adc
inc
pop
nop
add
in
sarb
xor
mov
mull
adc
imul
shrb
sub
scas
pop
mov
push
ja
mov
rol
fs
mov
add
mov
test
mov
ja
mov
add
dec
jle
and
dec
ja
jns
ss
test
add
cmp
mov
js
ds
xor
jecxz
mov
mov
sti
in
mov
add
xchg
adc
sub
mov
dec
inc
shlb
popf
mov
jb
lret
add
adc
push
mov
or
or
xchg
jp
sbbl
shrd
mov
xchg
popf
pop
call
not
scas
or
push
push
push
mov
in
add
sarb
mov
xorb
pop
imul
xor
pop
addr16
push
int
dec
ss
pop
and
mov
pop
lds
rorl
xor
pusha
jp
dec
xlat
rep
cmp
loope
jnp
jmp
imul
mov
out
push
cmp
loopne
cmpsb
ret
call
mov
lcall
lods
or
add
lock
ljmp
mov
and
std
mov
shlb
sbb
push
rorl
xor
mov
jl
and
icebp
mov
pop
dec
mov
mov
pop
test
lahf
aaa
mov
movl
aas
mov
gs
cmp
mov
int3
shlb
stc
xchg
sbb
push
enter
inc
test
sub
dec
arpl
push
mov
jne
add
xchg
jle
les
into
inc
push
jmp
xor
cli
ss
mov
jae
pop
popw
mov
xor
mov
loope
pop
jns
or
inc
ret
lahf
adc
fisubrs
jg
jns
or
out
jno
nop
xor
and
or
cltd
fyl2xp1
sbb
inc
jno
ss
aad
addl
inc
jmp
push
push
test
add
pop
add
sti
sub
push
loope
scas
pop
sub
mov
dec
stos
add
out
jns
add
popf
jp
fbld
xchg
sbb
into
xchg
pop
adc
inc
xor
aad
movsl
sub
scas
mov
add
xor
xchg
or
lret
jge
bound
inc
mov
xchg
mov
push
sbb
cmp
or
mov
fcomp
mov
cli
std
enter
adc
int
jae
cwtl
out
xchg
push
xor
in
out
lods
sub
adc
xchg
sbb
sbb
mov
sbb
push
sti
bnd
lcall
pop
aas
push
ds
jno
jg
adc
cmp
sub
pop
jne
movsl
andl
sbb
nop
jbe
nop
dec
xchg
sub
push
leave
leave
lret
in
loope
lret
sub
lods
lea
mov
mov
shl
mov
shrd
shr
mov
mov
xor
xor
or
mov
shl
mov
jmp
in
repz
jmp
les
inc
stos
xchg
mov
adc
adc
test
and
mov
xor
lcall
pop
lret
or
dec
dec
std
insb
sbb
push
xchg
jb
sbb
push
aas
dec
fisttpl
inc
adc
shl
imul
icebp
js
enter
dec
and
leave
out
adc
std
cltd
ljmp
pop
push
and
pop
sahf
lods
ja
or
andl
mov
add
adc
daa
hlt
scas
arpl
mov
cmp
into
dec
jge
fiaddl
xor
clc
stos
xor
mov
mov
xchg
or
cmp
xchg
in
cltd
cltd
popl
sahf
pop
mov
into
or
sarb
cmp
sbb
xchg
or
mov
loopne
in
in
divb
or
cltd
pop
xlat
xorb
sbb
add
and
mov
in
xchg
pmulhw
in
cmp
insb
mov
test
mov
jbe
cmp
xlat
xor
xor
into
notl
add
mov
adc
imul
scas
ficoms
xlat
or
outsl
test
clc
add
cmp
repnz
xchg
xor
push
mov
mov
cmp
mov
fwait
leave
lea
dec
push
inc
rclb
fbstp
mov
cmpsl
gs
cltd
jb
dec
fisttps
mov
mov
push
adc
ret
std
dec
pop
and
cmp
jle
mov
xorl
orl
mov
push
subl
mov
jns
and
fmuls
clc
out
mov
xchg
mov
xlat
out
out
lods
mov
mov
sub
inc
cmpsl
aas
cmp
lret
cs
nop
jne
mov
and
mov
cmp
jno
in
hlt
adc
test
xorb
or
xchg
cmc
divl
popa
mov
int
mov
mov
push
and
or
pop
sbb
out
xor
mov
cmpsb
popf
xchg
popf
mov
call
push
lea
adc
daa
rcrb
cli
fucomip
js
xchg
gs
mov
inc
pop
xchg
fwait
rorl
cli
test
mov
add
loopne
cmp
cmpsl
jne
pop
add
nop
jns
aaa
jp
bound
loop
and
incl
push
cld
repz
call
push
out
sbb
mov
and
mov
adcb
xchg
stos
fidivl
shl
cmp
adc
pop
mov
jle
pop
mov
pop
cmpsb
cmp
and
sbb
sarl
push
in
xor
mov
ljmp
fiadds
in
out
cmc
ret
xchg
out
inc
addb
jne
dec
mov
shrl
ja
int3
enter
jl
leave
shll
ret
jbe
dec
mov
subl
lret
fwait
sahf
lock
adc
out
mov
mov
mov
or
mov
mov
shrd
shl
shr
mov
mov
xor
mov
xor
or
mov
dec
not
and
xor
mov
mov
xor
or
mov
mov
shrd
shr
mov
mov
mov
xor
mov
xor
shl
mov
or
mov
cmp
je
mov
sub
mov
mov
xor
xor
shrd
shr
mov
mov
mov
mov
xor
or
mov
mov
mov
xor
xor
mov
mov
mov
shrd
shl
jmp
fs
push
add
aaa
sbb
push
push
mov
push
ret
adc
adc
shlb
and
dec
add
push
mov
aad
xchg
ja
pop
divb
test
xchg
add
jo
lea
fs
cmp
and
movsl
adc
push
push
hlt
push
sbb
fs
mov
arpl
repz
ficoml
sub
int
and
add
jecxz
and
gs
aaa
xchg
and
into
push
out
mov
pushf
jmp
xchg
cld
xchg
inc
ljmp
loope
ret
aam
sub
mov
adc
cmp
or
xchg
or
mov
icebp
mov
ja
mov
jmp
rep
movsl
mov
jge
imul
lret
push
inc
rcll
sub
xchg
jg
stos
jecxz
xchg
push
mov
mov
or
adc
stos
inc
add
or
sub
pop
outsb
jae
fcompl
stos
scas
lock
movsl
adc
rclb
insl
mov
dec
lds
outsl
jns
push
fs
dec
cltd
in
mov
ds
sbb
addr16
and
and
jge
sbb
sbb
clc
lret
cmp
ror
jne
cmp
or
lea
dec
jmp
bound
adcb
jp
or
inc
imul
mov
stos
cmpsl
fidivs
lret
push
int
fnstenv
jge
jne
xchg
pop
jl
xor
out
aam
or
cmc
cmpsb
dec
int3
sub
adc
loope
mov
movsl
cwtl
pushf
add
adc
jge
and
mov
add
xchg
ds
mov
push
mov
das
pop
roll
out
pop
test
sbbb
add
mov
xor
pop
xchg
jp
nop
mov
add
dec
dec
notl
gs
cli
mov
push
jl
test
les
imul
stos
fldl
test
shrb
int3
push
rorl
pop
imul
in
bound
cmp
push
xchg
xchg
adc
push
or
push
or
sti
adc
push
insl
pushf
xchg
sti
test
mov
lods
sbb
dec
xchg
movb
jno
cld
out
pop
or
xlat
cmc
jg
mov
jns
lret
mov
cmp
mov
cli
or
repz
cmp
push
mov
cmp
int3
pushf
sub
push
jle
outsl
lea
push
xchg
add
xchg
sbb
js
cli
adc
xor
pop
xor
xor
fdivp
popa
test
and
push
pop
lret
les
xor
fadd
iret
mov
stos
ljmp
jno
les
add
fidivrs
stc
popf
sbb
mov
adc
sbb
push
push
pop
push
mov
mov
movsb
imulb
mov
sbb
ficoml
add
std
dec
lods
mov
xchg
push
push
dec
stos
jnp
js
retw
xchg
mov
xchg
or
mov
mov
mov
shll
mov
mov
mov
xor
or
shr
or
cmp
jne
cmp
je
jmp
mov
mov
xor
xor
shrd
shr
mov
mov
mov
mov
xor
or
jmp
lods
dec
sbb
sbb
sbb
and
mov
adc
adc
rorb
call
sub
sbb
shrl
lds
pop
pop
mov
fisubrl
xor
lds
and
cltd
inc
in
sti
ss
inc
sub
push
js
lea
mov
dec
les
vmread
clc
stos
xor
repz
pushf
push
flds
inc
mov
jle
pop
mov
push
inc
fldl
adc
sub
mov
add
in
int
jns
sub
inc
xchg
daa
lret
xchg
stos
pop
sub
inc
pushf
push
fbld
xor
sbb
flds
inc
sbb
lahf
sbb
loopne
sub
mov
cs
cmp
sahf
ljmp
xor
data16
icebp
xlat
cltd
jle
hlt
adc
sbb
dec
int
add
pop
loopne
sub
push
sbb
lret
dec
inc
xor
and
lcall
or
out
sub
pop
mov
push
pop
adc
inc
nop
pop
xchg
mov
adc
jb
fst
lods
nop
mov
push
xchg
mov
iret
aaa
repnz
cmp
orl
inc
pop
clc
js
es
rorb
and
adc
sti
sbb
hlt
cmp
cmpsb
scas
adc
rolb
adc
rep
rcrb
lcall
or
rol
dec
sub
cmpsl
cmp
popa
das
push
loopne
in
decl
data16
data16
dec
cmp
push
fidivs
test
mov
push
stos
rep
xor
mov
popf
call
insb
mov
lea
jecxz
aas
lcall
or
shlb
enter
mov
cmove
add
lret
mov
pushf
pop
icebp
push
out
lahf
mov
jp
xchg
or
les
xchg
cwtl
pop
or
cmp
push
sbbb
jg
mov
cmp
dec
sbbb
mov
std
jl
push
jne
fisubl
imul
jnp
pop
sti
sbb
xor
mov
dec
icebp
mov
jb
iret
add
adc
in
negl
add
add
in
xchg
inc
push
dec
jge
xchg
mov
int3
int3
enter
shlb
pop
nop
icebp
les
in
test
and
lret
cmc
out
cwtl
push
xchg
sub
sbb
xchg
enter
notb
jbe
inc
and
adc
jae
cltd
cmp
fdivs
jg
xor
mull
mov
mov
inc
jl
cli
jl
cmpl
mov
rcll
in
push
push
sbb
std
mov
insb
mov
jecxz
pop
stc
mov
cmp
cs
mov
xor
jp
jne
push
pusha
dec
mov
push
je
mov
jo
sub
adc
cmp
jecxz
lds
push
mov
les
add
in
test
loopne
ss
cld
mov
xor
in
or
loop
or
mov
mov
xor
mov
mov
mov
mov
xor
mov
mov
shrd
shr
mov
mov
mov
shll
xor
mov
or
mov
mov
mov
or
mov
mov
cmp
jne
mov
cmp
je
mov
jmp
scas
mov
mov
sub
stos
sahf
xchg
mov
adc
adc
add
das
push
je
xor
mov
and
aaa
sub
lds
pushf
ret
pop
ja
hlt
psrad
lock
jae
leave
aad
shl
outsb
jl
inc
les
and
cmpsb
sbb
jno
pop
popa
jbe
lock
mov
fs
sub
jge
fstpt
dec
jbe
jne
aad
sbb
and
bound
cmc
or
push
inc
js
sti
loopne
sar
push
aas
xchg
adc
fsubrp
jno
push
or
add
and
mov
addb
in
mov
in
mov
subl
mov
xchg
bound
mov
inc
ds
mov
cmp
sbb
movsl
add
adc
xor
mov
sbb
aas
in
out
push
dec
push
jne
jns
aas
mov
dec
pop
imul
cli
jecxz
cmc
or
enter
and
xor
comiss
movsl
inc
jae
hlt
data16
cmp
pop
dec
gs
mov
or
cld
dec
xor
sbb
add
mov
push
decb
les
push
lea
adc
sub
cwtl
xchg
cld
push
lods
dec
jmp
mov
fwait
jo
adc
fxch
in
stos
int
pop
xbegin
test
jno
xor
mov
lods
cmc
inc
stos
push
out
adc
sub
not
sub
mov
inc
pop
sub
and
sbb
mov
loop
jecxz
push
jg
xchg
outsl
lock
inc
pop
xor
and
repnz
mov
or
popa
idivl
mov
rolb
pop
jle
xchg
inc
lock
sbb
jnp
push
in
xchg
lods
hlt
fldt
cmp
cmc
cmp
aas
fld
cmp
shlb
cmpsl
cs
sub
add
leave
inc
out
rep
cmp
test
popf
nop
sub
mov
ljmp
jge
loope
push
and
jle
mov
outsl
arpl
ret
lock
dec
sub
test
inc
jno
nop
add
popf
in
pop
mov
addr16
jae
sub
cltd
dec
out
pop
adc
mov
mov
shrl
jbe
lock
pop
imul
jmp
lcall
std
cld
mov
cmp
iret
xchg
bound
xor
dec
cltd
jle
cmp
addr16
jb
dec
int3
shll
or
sbb
pop
into
mov
popf
outsb
dec
cwtl
ss
movsl
inc
pop
mov
dec
mov
fldenv
sbb
fidivs
pop
inc
lods
fldl
js
repnz
mov
push
sub
outsl
mov
sbb
xchg
into
in
jle
jmp
cmp
into
pop
movsl
mov
sub
addl
or
lock
cs
fcoms
ljmp
movsb
out
jp
out
inc
shll
minps
adc
push
sub
sub
test
cld
mov
add
and
lcall
dec
iret
popf
mov
je
mov
push
aas
mov
mov
mov
lea
mov
mov
mov
mov
mov
shrd
mov
mov
xor
shr
mov
xor
shl
or
mov
mov
mov
xor
xor
xor
shld
mov
mov
mov
mov
shl
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
mov
xor
xor
jmp
hlt
xor
pop
and
insb
leave
sbb
adc
adc
sti
call
outsl
xchg
aas
adc
mov
mov
adc
jg
mov
aad
mov
lret
pop
insl
add
dec
and
pusha
mov
adc
add
or
mov
js
push
lret
cmp
push
jns
adc
mov
sub
ja
fdivrl
dec
dec
jmp
cmp
lret
inc
cmc
andb
movsl
test
mov
movsl
inc
repz
sbb
ret
les
mov
insb
cmp
sti
mov
mov
test
xlat
dec
dec
pusha
dec
mov
push
jmp
sbb
pop
hlt
xchg
arpl
mov
fsub
jge
das
sbb
and
mov
sbb
loop
jmp
or
mov
inc
pop
push
shlb
adc
out
inc
push
gs
imul
dec
les
jbe
popa
mov
xchg
inc
cmp
aad
push
jne
mov
xor
dec
cmpsb
mul
mov
inc
add
xchg
jne
mov
and
loop
dec
mov
dec
push
aas
lds
out
sbb
cmp
stos
adc
xor
mov
ds
repnz
mov
pop
dec
in
fstpl
lds
dec
fisubrl
les
jno,pn
mov
dec
ja
mov
shlb
cmpl
int
lret
ljmp
push
mov
dec
stc
fdivs
addl
add
fstl
mov
adc
es
bound
push
pop
mov
xchg
out
jle
or
dec
inc
arpl
xor
cmp
xchg
cmp
stos
add
shl
adc
push
cli
ret
ret
in
push
and
dec
sub
push
adc
lods
sbb
scas
repz
push
add
sub
jmp
daa
in
shrl
or
sarb
inc
mov
cltd
or
ror
sbb
js
aad
sub
jb
das
cmpsl
inc
inc
adc
push
jge
adc
in
sbb
leave
lret
es
cltd
jg
mov
loope
and
or
adc
ljmp
xor
shlb
scas
hlt
jle
int
xor
loopne
lods
push
mov
xorl
add
ret
call
ret
in
call
add
int3
cmpl
rcrl
mov
inc
aam
push
sub
and
pop
neg
bound
or
and
mov
icebp
add
inc
dec
sbb
push
inc
xchg
sbb
pop
in
imul
insl
int
inc
mov
sbb
rcl
and
jnp
cmp
cmpsb
aas
push
ficompl
ja
inc
lds
jne
lods
in
mov
cld
mov
repz
or
fnstcw
dec
outsb
dec
push
sub
mov
dec
nop
lret
aam
pop
loopne
scas
scas
loop
push
pop
xor
fwait
aas
inc
xor
adc
enter
lods
roll
call
mov
mov
mov
xor
or
mov
shl
mov
mov
or
jmp
inc
jbe
js
js
sub
push
stc
jle
movsb
adc
adc
adc
in
sub
shll
mov
add
sbb
cmp
clc
mov
jecxz
add
call
sub
enter
stc
jno
jae
jp
xor
mov
xchg
icebp
fisttpll
loopne
cli
inc
inc
dec
cmp
push
mov
fwait
adc
and
out
add
dec
jg
dec
jl
sahf
mov
lret
leave
cmp
jbe
fwait
push
out
add
out
inc
or
test
dec
outsl
mov
leave
pushf
fwait
subb
fwait
mov
aas
das
hlt
add
dec
in
sub
rep
inc
sbb
js
test
out
cli
leave
fldt
xchg
notl
or
sbb
dec
or
sub
inc
push
xor
or
xchg
mov
sub
jb
fbstp
push
cmpsl
jo
mov
pop
mov
call
mov
push
sub
cmp
ss
testb
xchg
pushf
cmp
nop
mov
add
mov
sbb
popa
iret
outsb
xchg
dec
jb
scas
push
into
inc
jo
mov
ret
lahf
pop
and
adc
lds
je
xchg
jno
shll
mov
iret
mov
or
js
push
cld
xchg
dec
push
popf
lods
popf
test
movsl
out
mov
push
divb
xlat
mov
mov
movsb
out
sbb
out
fwait
push
push
or
fisttpll
sub
mov
das
shll
xlat
sarl
mov
pop
into
lods
push
mov
cli
push
das
loope
ds
stc
xor
push
jns
sub
mov
xchg
lds
fidivrs
xchg
cmpsb
je
dec
loopne
fs
mov
inc
mov
sbb
fdivr
lret
or
stos
dec
call
add
add
jae
lods
jl
lock
and
int
jo
jecxz
fadd
loope
jo
sti
dec
rcl
cwtl
pop
arpl
daa
lret
cmc
mov
cmc
arpl
movsb
lret
pop
mov
fldcw
inc
dec
lcall
cld
mov
lret
daa
popf
int
pop
xchg
push
and
mov
and
fstps
movb
out
jmp
movsl
std
cmpsb
roll
enter
mov
fdivp
jne
movsb
push
push
fcompl
jmp
cmp
out
pusha
mov
cwtl
xchg
pushf
imul
psubsw
inc
lods
mov
jae
sbb
inc
cmpsl
arpl
fcoml
cmpsl
ret
pop
xchg
add
test
loop
or
inc
shlb
std
inc
jmp
loop
insl
xchg
dec
mov
iret
or
xor
xchg
push
ss
mov
push
aad
dec
pop
movsl
popa
sub
cli
cbtw
fdivl
imul
and
outsb
inc
cs
xacquire
push
cmp
jp
stos
or
mov
fstpl
mov
mov
xor
repz
inc
mov
push
inc
into
out
and
and
add
mov
sbb
cld
mov
cmpsb
fisubrs
pop
inc
mov
push
pushl
push
push
call
mov
mov
andl
shrd
shr
shr
xor
push
xor
mov
mov
mov
push
push
push
call
shld
mov
mov
or
mov
shl
or
xor
xor
xor
xor
mov
mov
jmp
mov
add
mov
mov
mov
mov
mov
mov
movzwl
cltd
xor
xor
shld
mov
mov
mov
mov
shl
mov
cmp
jne
mov
cmp
jne
movl
mov
movl
mov
movl
mov
movl
mov
mov
mov
shrd
shr
mov
mov
jmp
stc
xor
mov
sub
icebp
stos
faddp
stos
insb
nop
pushf
adc
adc
adc
les
cmp
out
mov
mov
stc
outsb
imul
mov
mov
jns
push
sub
sbb
mov
cmp
adc
jae
bound
shrb
arpl
xchg
ret
jl
lret
jge
ss
test
mov
dec
add
js
cmc
aad
cmp
push
cltd
xchg
inc
xchg
cmpsb
call
clc
sbb
mov
sbb
aas
add
rcr
lret
test
add
dec
ljmp
jmp
sbb
adc
dec
std
mov
mov
aas
jl
jbe
mov
mov
fldcw
lods
jecxz
mov
sub
dec
movsl
cwtl
ret
insb
les
stos
jg
adc
scas
pop
neg
xlat
jae
dec
data16
xor
dec
jne
adc
jmp
aas
pushf
lahf
pop
sbb
lahf
test
rcl
adc
xchg
sbb
jge
mov
hlt
inc
das
fcmovbe
leave
dec
cwtl
mov
mov
jbe
scas
jb
inc
xchg
pop
pop
jmp
mov
fsubrs
dec
call
lahf
cmp
mov
sbb
mov
dec
jne
xlat
inc
roll
cmpsb
cmp
jo
lea
xlat
sub
xchg
mov
xlat
or
pop
adc
cwtl
and
mov
or
dec
sub
sub
inc
adc
pusha
lcall
xchg
test
xlat
andb
stos
es
sbb
mov
dec
mov
push
sub
push
dec
ret
test
xor
arpl
mov
dec
mov
xor
cmp
insb
icebp
das
out
ret
pop
aas
xor
add
and
mov
iret
daa
and
in
adc
out
push
push
cmp
decb
leave
jno
mov
shrb
arpl
je
scas
lds
scas
mov
cmc
stc
ss
cmp
in
movsl
xchg
iret
inc
outsb
sbb
mov
add
das
jb
pop
jno
and
pop
repz
subb
push
je
xor
in
out
std
push
testl
cwtl
sarl
push
cmp
pop
scas
adc
test
mov
xor
push
xchg
popa
xchg
dec
add
push
out
jge
fadd
outsb
dec
lds
mov
cmp
les
adc
imul
and
sub
scas
nop
pop
pop
xchg
xor
jle
fnstenv
adc
ret
and
cmc
aam
dec
mov
jno
outsl
ja
out
aas
and
lea
pop
jp
add
mov
xchg
repz
sahf
or
inc
adc
scas
gs
pushf
gs
xchg
test
cwtl
add
adc
lds
in
addr16
rolb
scas
sahf
rolb
or
cmp
les
in
je
push
push
and
push
lcall
xor
push
mov
add
sahf
push
push
inc
xor
shl
xor
or
add
mov
jmp
xor
and
aas
fidivrl
adc
adc
cmc
mov
ss
and
xchg
call
insl
inc
es
mov
ficomps
pusha
mov
jp
cmc
rorl
pop
mov
pop
cmp
jbe
fwait
dec
jmp
fs
pop
jmp
test
adc
mov
add
adc
mov
sub
cld
sbb
cli
and
out
hlt
fstpt
jbe
push
sub
adc
jmp
in
mov
pop
or
lahf
xlat
mov
mov
jle
jb
add
shl
imul
jg
sti
sub
repnz
leave
out
pop
or
sbb
sahf
fsubrs
mov
push
enter
enter
and
pop
les
insl
lods
cmc
xchg
cltd
cmp
and
sti
mov
xor
popa
ss
dec
cmc
fcmovne
test
mov
mov
cs
adc
daa
dec
mov
in
mov
cmc
add
dec
lret
fcmovbe
mov
mov
and
sar
frstor
inc
stc
jns
decl
dec
inc
inc
mov
add
shlb
cmp
lock
inc
sahf
push
xlat
push
jo
or
stos
popa
shl
gs
icebp
loopne
sub
jo
mov
xchg
out
pop
sbb
push
imul
push
pop
mov
lret
inc
pop
out
loop
and
push
cmpsb
inc
cmp
xor
add
pop
shll
fmull
std
lret
dec
comiss
sbb
int3
fdivs
pop
adc
push
push
outsl
popa
orl
mov
push
add
in
test
pop
ficompl
hlt
dec
ss
jecxz
test
imul
mov
andl
shrl
mov
mov
bound
pushf
mov
add
mov
cmpsl
lahf
leave
cld
into
test
mov
jg
fcoms
add
mov
jg
xor
xchg
ljmp
xor
lods
adc
int
pushf
mov
xor
add
sti
andl
les
cmpb
jbe
push
dec
inc
fisubl
mov
cs
jbe
dec
andl
dec
xchg
dec
adc
in
jmp
gs
cmp
shrl
nop
pop
adc
sub
inc
and
jp
and
mov
outsb
out
ljmp
lret
xor
xchg
mov
jl
ret
push
pop
outsb
fmuls
in
les
fnstcw
arpl
xor
test
incb
xchg
js
rcll
push
incl
clc
dec
mov
sub
cmc
xor
incl
mov
scas
mov
sbb
out
lods
loopne
rcr
jno
hlt
lahf
gs
sqrtps
fidivl
mov
xchg
lds
insl
add
lods
test
hlt
insb
shrb
loop
xchg
mov
pop
inc
xchg
jle
jbe
cmp
outsl
cld
cwtl
seta
xor
in
add
mov
push
add
sbb
mov
arpl
push
dec
imul
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
xor
mov
mov
shrd
shr
mov
mov
xor
shl
jmp
adc
and
sbb
sub
sub
adc
xchg
mov
popa
sbb
inc
cmp
inc
repnz
movb
push
ds
add
divb
xor
adc
push
call
aad
mov
cwtl
inc
clc
inc
in
daa
je
xor
xor
push
mov
test
loope
xchg
test
inc
scas
inc
sbb
arpl
sbb
lret
mov
or
push
cld
addr16
sbb
pop
mov
dec
mov
adc
inc
and
push
xchg
or
sbb
sbb
frndint
and
orl
out
js
lds
je
mov
jnp
cmp
sub
fwait
dec
test
test
jb
mov
scas
sti
aas
fucomip
adc
outsl
jb
sbb
movsl
leave
test
adc
cwtl
add
pop
leave
aas
jns
test
push
lods
add
mov
ljmp
imul
push
xchg
adc
pop
hlt
in
les
mov
addl
mov
ret
and
dec
cwtl
add
jge
pop
xchg
and
and
and
ret
shrb
ljmp
hlt
or
aaa
out
addr16
or
rclb
clc
or
jecxz
mov
insb
mov
fbld
cs
aam
scas
mov
inc
shrb
push
cwtl
invd
jg
orl
add
jo
and
mov
lock
mov
pop
aaa
lahf
or
iret
jne
insl
push
xor
outsb
sbb
jecxz
mov
mov
fpatan
ficoms
push
iret
popa
xchg
sbb
bound
sub
cltd
adcb
in
mov
lock
fsubrs
arpl
outsl
les
rcl
les
inc
lods
push
insl
pop
notb
pop
xor
scas
test
and
mov
sysexit
jo
xor
mov
sahf
out
call
scas
pop
cmp
sbb
out
or
dec
xor
dec
mov
and
xchg
in
stc
cwtl
xor
inc
insb
dec
leave
icebp
scas
lods
clc
das
jno
jmp
insl
sbb
push
std
stos
push
mov
inc
movsb
enter
mov
jne
ljmp
mov
mov
add
lods
cli
jecxz
dec
inc
adc
in
shll
mov
cmp
adc
mov
pop
cmp
ret
push
jmp
shrl
pop
adc
scas
dec
icebp
pop
xchg
aam
inc
mov
daa
sbb
add
popa
pop
out
test
inc
out
dec
pop
pop
add
lods
test
dec
xchg
cmp
data16
xchg
and
mov
push
cmpsl
mov
imul
push
mov
test
and
out
mov
ret
lcall
push
pop
jecxz
les
ret
shlb
aaa
sbb
or
popa
fcom
stos
dec
stc
mov
jl
pop
mov
sub
adc
mov
test
rorb
ret
push
ret
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
or
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
shl
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
add
mov
mov
shrd
shr
mov
mov
xor
shl
mov
xor
or
mov
shrd
add
xor
shr
mov
mov
xor
or
mov
or
shl
mov
mov
xor
jmp
insl
outsb
fstps
ret
mov
or
mov
adc
adc
add
ret
into
cmp
clc
push
test
rorb
scas
cmp
push
adc
push
mov
pop
ss
jl
outsl
stos
push
fsubrs
and
add
pop
aad
inc
adc
out
test
cmp
add
fmul
fisubs
js
or
cmpsb
and
call
bound
dec
stos
and
jae
fbstp
and
cmp
jbe
sbb
pop
clc
insb
les
xor
cmpsb
cmpsl
nop
xchg
ljmp
insb
lret
push
push
cld
lods
pop
or
push
je
lods
mov
xor
sub
int3
add
dec
lret
or
add
fwait
sub
subl
or
sti
out
sbb
mov
loop
jns
mov
repz
imul
imul
stc
es
cmp
mov
cltd
sahf
out
mov
leave
aas
dec
std
dec
aam
sub
int
andl
rolb
icebp
sub
mov
out
push
or
cld
dec
and
into
push
scas
daa
mov
lds
adc
repz
pop
jnp
dec
mov
pop
lea
push
dec
and
sub
lret
pop
cmpsb
imull
inc
sub
cmp
loopne
jecxz
ljmp
xor
inc
mov
out
outsl
ret
in
les
lcall
add
pop
in
mov
jl
mov
dec
shrl
push
and
fildll
or
fs
dec
flds
sub
out
xchg
xchg
jns
loop
cmp
inc
ret
inc
scas
pop
frstor
push
std
jmp
dec
roll
inc
fiaddl
xchg
sub
dec
xchg
adc
stc
aad
jno
idivb
lea
stos
dec
gs
and
pop
jg
notl
outsw
mov
xchg
lcall
cli
bound
movsl
repnz
test
push
repnz
or
jmp
add
aad
and
aad
mov
out
jns
jns
nop
cltd
or
movsb
and
es
rcrb
rorb
push
mov
inc
cld
ja
dec
or
lret
sbbl
sbb
mov
lcall
es
xor
out
je
dec
add
aas
sbb
dec
pop
out
out
js
ja
cmp
fcoms
adc
lock
xlat
cmovb
mov
call
cs
push
pop
insb
shlb
lret
addr16
push
subl
pop
push
add
jb
mov
mov
rclb
inc
push
dec
dec
dec
das
xor
movsl
xchg
imulb
xchg
mov
mov
inc
sub
mov
push
and
sbb
cmp
test
xor
cld
sub
icebp
fwait
pop
push
and
jnp
inc
pushl
mov
xchg
mov
pop
insb
pop
dec
pop
outsb
loopne
push
push
pop
pusha
pop
or
les
fdivs
and
les
mov
aad
cld
xchg
addr16
push
and
movsl
imul
lret
jmp
mov
mov
mov
xor
or
mov
mov
mov
xor
xor
mov
mov
mov
shrd
shl
or
mov
mov
mov
shll
mov
mov
mov
xor
or
shr
or
cmp
jne
cmp
jne
jmp
mov
jmp
out
sub
pop
popf
and
inc
dec
mov
movl
push
xor
pop
popf
pop
and
pop
decb
or
cmp
insb
inc
lret
aaa
nop
sub
pushf
dec
sub
xor
mov
xor
cltd
test
aad
enter
iret
clc
in
push
sub
in
mov
hlt
inc
arpl
xchg
les
test
dec
jne
adc
xlat
lret
lret
testl
or
je
mov
pop
imull
lods
mov
adc
aas
sbb
enter
and
ja
dec
cmc
xor
pop
aam
xor
cmp
popa
call
bnd
cmp
pop
xchg
xchg
push
ss
mov
push
aas
jno
daa
mov
push
icebp
adc
inc
mov
xor
xchg
lods
mov
pop
pusha
jno
and
xor
jne
out
add
scas
in
or
mov
mov
out
xor
in
les
xchg
cmp
popf
mov
cmp
test
rclb
lret
or
mov
fadd
les
ljmp
and
movsb
out
cltd
push
inc
mov
rcrl
mov
mov
pop
jb
push
cmp
int3
out
in
icebp
cltd
cmc
fbstp
mov
negl
arpl
pop
loope
aam
cmp
push
daa
dec
pop
mov
pop
pop
mov
int3
lds
mov
mov
mov
loop
je
test
shll
or
adc
das
and
mov
sub
sahf
or
sbb
or
out
movsb
pop
pop
iret
shl
cltd
mov
aam
jno
lret
leave
ret
pushf
test
mov
mov
sbb
lahf
lds
jae
inc
scas
out
imul
mov
and
ret
cmp
pop
sbb
push
aas
mov
sub
shll
scas
lret
loope
xor
jne
sbb
dec
gs
mov
adc
pop
fstpt
pop
inc
mov
pop
popa
icebp
xorb
cwtl
je
andl
popf
fcmovbe
les
mov
loope
or
sahf
lods
loop
ret
scas
mov
aam
push
test
adc
lcall
mov
cmp
sbb
notl
fiadds
mov
andb
lahf
mov
mov
mov
sub
xchg
cmp
imul
int3
lcall
es
push
and
pop
and
push
and
mov
outsl
sbb
jg
rcll
lret
lret
jb
pop
push
add
ret
push
fldenv
xchg
jl
jns
pcmpgtb
xchg
jge
push
and
arpl
inc
mov
dec
mov
cmpsb
cmpsl
test
mov
data16
push
and
mov
ljmp
das
neg
ljmp
stc
add
fwait
jp
sbb
sarb
xor
insl
popf
xchg
pushf
fcompl
cmpl
sbb
fisubl
push
out
lcall
mov
mov
xor
xor
mov
mov
shrd
shr
mov
mov
mov
mov
xor
jmp
xchg
hlt
insb
lret
xor
pop
dec
mov
stos
sbb
adc
adc
insb
sbb
hlt
jbe
pushf
int
or
add
xor
jl
push
jecxz
dec
fs
xorps
xchg
repnz
xchg
repz
ficoml
inc
mov
jecxz
xchg
jo
inc
cmp
daa
lock
add
adc
insl
or
xchg
test
or
ja
pop
and
dec
jl
fdivrs
xor
repz
inc
and
lock
leave
push
add
jae
or
and
cmp
xchg
mov
movsb
jl
fwait
les
lods
dec
in
ret
mov
mov
sub
lahf
loopne
sub
cmc
stos
sahf
das
jp
and
or
jno
test
test
xchg
int3
mov
es
push
lds
sbb
imull
mov
pusha
xchg
inc
rol
shrb
jge
and
dec
jne
jecxz
movl
mov
sub
jge
or
jbe
pop
pop
in
stos
movl
ret
movsb
push
sbb
cli
pop
lahf
lea
push
popf
mov
adc
popa
adc
push
pop
movsb
mov
add
enter
scas
xor
pop
mov
test
jl
hlt
fidivrl
out
inc
test
stos
xor
mov
adc
push
ljmp
dec
mov
popf
enter
popa
inc
pop
bnd
gs
mov
push
xor
and
shll
xor
pop
stos
or
inc
sub
inc
mov
int
and
and
xor
cli
jg
ficoml
bound
enter
mov
adc
fnstenv
lods
daa
popf
inc
sub
sbb
pop
loope
dec
dec
js
dec
push
loop
outsb
and
gs
ficoms
xor
xchg
sbb
idivb
and
gs
push
sbb
test
shr
decl
push
jo
leave
mov
push
sbbl
cmp
leave
pop
jne
or
cmc
xchg
lods
push
add
push
pusha
push
out
sti
xchg
pop
sub
jge
outsl
mov
aaa
xorl
mov
sti
fisubrs
adc
or
adc
jg
push
and
sbb
sub
push
and
sbb
adc
or
pop
fxch
lea
jnp
adc
mov
lea
es
daa
inc
das
lret
popa
pop
cwtl
outsb
incb
xor
jmp
ret
iret
dec
or
insb
insb
push
out
inc
jg
sbb
insl
push
and
out
add
adc
xchg
cmp
cmc
mov
out
add
leave
or
pop
inc
das
out
ss
addb
lods
jle
sarb
pop
add
mov
test
inc
test
dec
mov
xor
mov
cmpsb
into
mov
xor
repz
pusha
inc
and
sahf
repz
and
pop
clc
inc
sub
pop
pusha
hlt
dec
repz
push
cmp
dec
mov
aam
mov
lods
pop
rorl
dec
xor
lods
add
rorl
inc
adc
mov
push
pushl
push
push
call
mov
mov
andl
shrd
shr
shr
xor
push
xor
mov
mov
jmp
inc
jae
jge
sbb
into
lods
cmp
je
adc
adc
ret
jmp
leave
call
or
in
jmp
mov
in
sub
fstpl
xchg
mov
fsubrp
pmaddwd
inc
test
jge
and
bound
add
les
bound
add
xchg
jmp
mov
testb
xchg
sbb
je
xlat
push
in
xor
sub
or
adc
pop
ror
scas
inc
push
jb
test
or
fstps
add
adc
leave
adc
iret
inc
lret
xor
in
fisttps
loope
inc
pop
cmp
popf
xlat
out
adc
mov
and
stos
popf
mov
fwait
bound
dec
mov
test
xchg
test
fwait
jno
addr16
lea
jb
repz
loop
jmp
fnstenv
adc
pop
jl
aas
dec
sti
sbb
int
addb
xchg
lock
test
xor
or
popa
mov
cmp
pop
aaa
roll
inc
int3
clc
mov
scas
xor
mov
push
loopne
and
adc
cli
xchg
add
into
mov
les
mov
outsb
lods
cmc
lahf
lret
jo
popa
cld
call
push
lods
leave
sarl
xabort
cmp
jae
sti
lods
mov
jge
test
cli
mov
in
in
inc
push
in
iret
mov
imul
inc
int3
das
ror
cmpsl
add
sub
mov
mov
out
mov
aaa
jns
mov
gs
adc
rorl
js
shrl
jno
insb
jne
adc
scas
and
addl
stos
or
lret
stos
adc
xchg
bound
fidivrs
or
cmp
int3
xchg
aam
and
lahf
mov
loopne
out
lods
stos
sbb
les
faddl
add
mov
aaa
or
fwait
adc
scas
cmp
test
mov
hlt
xchg
mov
xor
and
jg
pop
cmp
gs
popl
cmp
pop
ret
or
pop
gs
dec
push
addl
hlt
pop
out
pop
pop
and
fstpt
pop
scas
mov
fsub
test
jmp
cmpsb
xor
push
mov
add
pop
daa
or
div
mov
pop
add
or
lods
mov
divb
fiadds
dec
pop
subb
mov
push
gs
pop
xor
fbstp
pop
mov
inc
out
pop
sub
sub
in
fcomps
ret
orl
aas
xlat
les
mov
mov
adc
fisttpl
and
sbb
in
mov
insb
xor
push
std
push
push
mov
push
into
fs
les
mov
add
add
dec
sub
popl
or
lea
or
dec
inc
adc
inc
sbb
inc
rcrb
mov
stc
inc
xor
jnp
dec
bound
fstpt
jne
xchg
iret
test
rolb
fdivrs
or
push
call
shld
or
shl
or
xor
xor
mov
mov
mov
mov
mov
xor
xor
shrd
shr
mov
mov
mov
mov
shl
or
xor
or
mov
mov
mov
mov
xor
xor
mov
mov
mov
shrd
xor
shr
shl
or
or
cmp
jne
cmp
je
pushl
pushl
pushl
push
push
call
pop
leave
ret
movl
cmp
movl
jae
cmp
movl
jae
adcl
shrd
shr
ret
mov
mov
adc
mov
xor
and
shr
ret
xor
xor
ret
push
mov
sub
movzbl
xor
movl
sub
mov
or
mov
notl
movl
and
mov
inc
movl
movl
dec
movl
movzbl
and
push
sub
movl
movl
push
addl
movl
movzbl
or
mov
cmpl
mov
mov
jmp
movl
ja
push
call
adc
adc
sbb
sbb
and
xor
add
add
sbb
mov
push
andl
push
andl
push
jmp
mov
pop
sbb
je
jp
mov
adc
mov
or
push
ror
mov
hlt
add
repnz
pushf
cmp
add
mov
pop
add
mov
add
cli
stos
adc
push
arpl
push
mov
outsb
sub
cmc
mov
iret
daa
push
lods
dec
ficoml
or
xor
and
lret
mov
inc
sbbl
sbb
mov
aad
jo
inc
int
pushl
call
mov
xor
and
cmp
daa
mov
imulb
cmpsb
mov
sub
xor
xchg
fnsave
or
imul
mov
roll
inc
or
xchg
adc
mov
mov
or
lret
sbb
xchg
push
int
push
out
jnp
jecxz
in
pushf
add
pop
sub
repnz
insb
icebp
dec
sbb
clc
hlt
cs
lret
out
mov
shufps
add
push
xor
loop
xchg
fcmovb
popa
pop
lods
sahf
fidivrs
mov
sarb
aas
fisttpll
lret
call
mov
stos
popa
xchg
sub
test
sahf
and
inc
mov
leave
push
sub
out
mov
cmp
test
hlt
dec
inc
add
cs
lret
sub
xorl
imul
dec
pop
and
add
aas
loopne
xor
icebp
enter
rorl
mov
lods
popf
jle
ficompl
mov
xchg
lods
mov
or
dec
inc
pop
subb
xor
imul
mov
pop
and
addr16
adc
xchg
push
mov
adc
and
push
insb
pop
pop
sbb
sti
clc
loope
fs
jecxz
loop
xchg
notl
sbb
mov
mov
and
pop
add
or
cmp
pop
sbb
or
cmpsb
xchg
mov
mov
adc
sarb
mov
arpl
inc
out
out
movsl
adc
daa
fnstsw
adc
jecxz
and
or
lds
scas
mov
stos
and
int
hlt
push
repnz
push
and
hlt
mov
cvtpi2ps
sahf
pop
rcrl
aam
rclb
popf
push
into
inc
cmpsl
ja
mov
leave
stos
push
adc
out
dec
test
mov
into
add
imul
xor
push
push
pop
add
push
popa
xor
xor
daa
ja
mov
sbb
pop
test
xlat
cltd
pop
mov
xchg
lret
push
adc
ret
pop
sahf
add
repnz
fistpl
ffreep
cmpsl
fcoml
cltd
dec
mov
std
dec
fwait
sahf
mov
jg
loope
mov
sar
push
cltd
ret
xor
jge
sbb
dec
xor
and
mov
and
mov
decb
pop
addl
scas
data16
mov
dec
mov
subb
fsubl
outsb
test
pushf
test
sub
mov
add
adc
cmp
test
mov
je
xchg
int
inc
jno
fcomip
jmp
mov
inc
std
xor
mov
mov
cltd
sbb
push
lahf
out
mov
out
xchg
pusha
mov
jmp
push
adc
movsb
cld
out
or
mov
mov
inc
add
add
mov
mov
subl
push
sbbl
or
xorl
push
or
xor
xor
push
push
xorl
call
mov
movzbl
xor
mov
orl
push
andl
push
adcl
push
push
call
mov
xor
or
mov
sub
sub
mov
cmpl
movl
mov
movl
jmp
movzwl
mov
ja
push
pushl
call
add
andl
adc
adcl
movzbl
sub
add
and
movl
movl
adcl
movl
movl
movl
cmpl
mov
movl
mov
jmp
movl
mov
je
push
pushl
call
sub
mov
adc
mov
and
sub
movl
mov
cmpl
mov
not
mov
movl
jmp
movl
jg
push
push
push
call
dec
add
adc
neg
mov
adc
mov
sbbl
jmp
mov
and
sbb
scas
push
mov
inc
push
adc
fnstenv
sbb
lea
pop
lret
les
adc
mov
lret
imul
xor
jbe
inc
or
pop
add
jbe
push
inc
movsl
stos
das
xor
add
fs
and
pop
jmp
fldl
mov
cld
pop
test
ltr
addr16
mov
das
cli
jle
aaa
cmc
and
loop
mov
cmp
adc
sub
push
test
mov
std
cmpsl
das
pop
call
sbb
dec
cmp
bound
xchg
jg
adc
and
aam
inc
pop
mov
sarl
and
dec
mov
add
ret
xchg
ficoms
scas
ret
jmp
cmp
xor
cli
mov
call
push
pop
popf
iret
cmp
lea
xchg
adcb
clc
push
jecxz
insl
cmpsb
es
jae
lret
add
scas
mov
scas
xorl
dec
jnp
ss
int
ss
lahf
js
add
movsb
mov
or
inc
mov
jne
iret
sarb
mov
scas
sub
mov
addr16
dec
cli
outsb
or
and
dec
out
mov
out
fidivrs
jl
push
jge
movsb
push
stos
sbb
cli
test
jo
maskmovq
mull
fistps
popf
fwait
subl
inc
push
mov
aam
fdivrs
outsb
inc
stos
inc
pop
lock
lea
repnz
xor
adc
mov
test
sbb
cmc
or
rcll
rol
fisttps
cmp
xor
adc
jb
rcll
adc
jle
jg
imul
push
inc
jno
lea
arpl
push
cmp
add
push
lret
or
and
aam
mov
fsubl
insl
cmpsl
in
mov
imul
cmpsb
add
pop
mov
add
ds
lahf
lods
push
leave
mov
int3
out
cwtl
inc
sbb
int
xor
subb
imul
and
imul
outsl
xchg
sti
ret
mov
jb
sub
and
or
push
cmp
out
mov
int3
loope
pop
shll
mov
hlt
ficoms
xor
jbe
mov
js,pn
jmp
nop
subb
lret
insl
fnstcw
mov
test
scas
rorb
div
loopne
mov
popf
ja
jge
push
addr16
insl
mov
popa
push
test
mov
mov
jne
and
mov
xor
faddl
xchg
sbb
insl
clc
aaa
insl
addb
std
mov
gs
idiv
ss
or
das
aad
adc
pop
int3
sarl
in
jge
mov
dec
lret
jbe
xchg
in
inc
dec
loope
test
fcomp
or
cmc
gs
fcoms
mov
mov
cmp
cld
cmp
loope
ja
mov
sub
mov
sub
js
inc
adc
lret
dec
push
test
cmovl
mov
mov
or
insb
inc
sub
xchg
xor
sbb
repnz
xor
scas
add
das
fsubrl
fidivrs
enter
sub
ja
rcl
imul
jns
xchg
mov
addr16
lcall
jge
je
loop
cmp
or
xor
movsl
sbb
add
adc
andl
or
xor
xor
sbb
mov
or
cmpl
movl
movl
jmp
movl
jle
pushl
call
sbb
adc
sbb
adc
add
xor
xor
adc
mov
or
sub
mov
or
mov
notl
or
or
movl
cmp
jne
movl
cmp
je
movl
movl
mov
mov
xor
xor
and
and
mov
mov
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
add
mov
adc
mov
add
adc
xor
xor
add
mov
adc
mov
cmp
jne
cmp
je
movl
movl
jmp
cld
into
loope
mov
cs
mov
adc
mov
mov
test
mov
add
addr16
cmp
movsb
adc
bound
cmp
or
and
orb
iret
pop
mov
lods
inc
arpl
xchg
sub
popa
or
xchg
pop
shlb
out
jb
sbb
add
adc
jb
jg
pop
jle
jb
xchg
pop
xor
xchg
mov
aaa
dec
lcall
mov
int3
push
cmp
sbb
xor
mov
jne
sbb
cmpb
jmp
fstpt
stos
dec
outsb
cs
push
mov
es
dec
mov
xchg
pop
imul
pop
mov
cmpsb
call
inc
dec
add
out
idivb
stos
leave
jmp
pop
push
sub
sbb
test
jne
lahf
clc
js
loop
push
jns
push
inc
ds
mov
xchg
adcl
add
cmp
and
lea
js
ret
jo
je
test
bound
iret
cmp
scas
dec
sti
mov
sarl
cmpsb
lret
stos
add
loop
mov
fistpl
fldl
mov
sub
test
mov
scas
xor
jns
test
add
mov
lret
std
mov
xchg
ds
int
icebp
add
pop
mov
out
lea
pusha
scas
adc
xchg
pop
js
inc
jg
mov
xchg
stos
mov
addr16
movsb
dec
push
cmp
shl
out
movsb
dec
mov
add
push
push
cmp
fwait
jno
sbb
out
sahf
dec
rorl
rcll
lds
fmull
mov
pop
mov
fnstcw
int
cmp
xlat
shrb
scas
or
pop
inc
jbe
mov
pusha
iret
mov
mov
adc
js
lock
pop
dec
pop
inc
sbb
push
hlt
shr
push
es
stos
cmpl
dec
or
push
push
jb
jno
adc
ss
daa
lcall
sub
push
pop
lret
cmc
clc
in
bound
adc
test
mov
inc
sub
add
stos
dec
mov
and
or
sarl
mov
add
aas
out
jnp
out
xor
divl
xor
cmp
iret
lcall
sahf
insb
sbb
in
je
dec
stos
fsubrs
sub
ret
lods
dec
pop
xchg
in
shlb
ret
and
push
shlb
adc
xor
icebp
mov
lock
lcall
shll
xchg
pop
lods
aaa
jg
fadds
lahf
add
or
cmpsb
les
jecxz
orb
pop
sbb
mov
dec
xor
add
icebp
pop
nop
testl
sub
inc
scas
repnz
aad
test
cmpsb
loope
jae
imul
or
add
push
in
adc
or
outsb
add
imul
or
jecxz
out
cltd
sub
jmp
sahf
cmc
cmpb
bound
xor
mov
daa
pop
pop
in
xchg
stos
mov
call
mov
jmp
outsb
les
jnp
mov
mov
movl
push
movl
mov
mov
push
push
push
call
mov
mov
push
push
and
and
push
push
call
jmp
icebp
push
out
sub
repnz
xor
lods
gs
adc
mov
sarl
adc
or
push
jl
aam
test
data16
sub
and
sub
fistl
mov
jns
outsl
imul
inc
dec
fst
bound
int
push
jmp
out
ja
in
xchg
in
xchg
pop
lock
into
xchg
xor
loope
inc
rorl
loopne
leave
inc
or
inc
push
das
cmp
repz
or
add
jae
adc
add
jb
or
fnstsw
dec
add
jb
inc
loop
out
jp
ljmp
sub
shlb
ret
dec
addr16
mov
xchg
lcall
push
pusha
inc
adc
cmp
std
push
nop
imul
shlb
pushf
mov
fwait
mov
sbb
mov
fidivrl
mov
orb
or
daa
mov
jbe
push
xchg
jnp
ret
mov
mov
push
xor
fwait
lock
sti
fwait
mov
mov
cmc
cld
add
xchg
pop
pop
dec
in
pushf
les
icebp
add
repz
sub
jbe
mov
pop
ljmp
or
ret
ficompl
jle
jns
push
or
xor
xor
iret
and
dec
lea
popf
add
jmp
sbb
shll
adc
nop
xchg
and
or
push
push
lock
adc
xor
mov
cs
sub
add
pop
mov
xchg
mov
ljmp
jne
test
and
add
adc
xor
or
and
movsb
fidivrl
pop
int3
jno
jbe
repz
xchg
xchg
imul
enter
aam
pop
insb
mov
adc
sub
adc
sbb
lods
mov
mov
adc
in
inc
push
popa
push
ss
pop
add
inc
push
cmp
mov
pop
jbe
sbb
icebp
lahf
idivl
frstor
lcall
sbb
cmp
sub
mov
xor
std
hlt
cltd
xchg
dec
adc
adc
or
and
push
sahf
pushf
dec
cmp
testl
test
xor
rol
dec
andb
scas
pmulhuw
movsb
out
sahf
ds
or
xor
sbb
rorb
mov
imul
push
or
out
outsl
mov
push
or
rcrl
notl
sbb
call
adc
cmp
pop
stc
lret
stos
ret
int
adc
test
inc
cmp
xor
out
mov
jne
jmp
add
push
out
sbb
fadds
inc
inc
cmp
mov
push
xchg
ret
arpl
add
or
xchg
or
aas
out
xchg
xor
add
adc
loopne
das
scas
sti
jp
arpl
inc
mull
and
jge
mov
inc
cmpsb
and
mov
dec
adc
mov
cmpsb
mov
mov
add
push
mov
xchg
mov
sub
mov
dec
aaa
fimull
adc
adc
addr16
adc
mov
mov
mov
mov
jnp
sbb
sub
inc
cmp
cmp
add
xor
mov
mov
mov
cmp
jne
mov
mov
mov
mov
shrd
shl
mov
mov
shr
xor
mov
xor
or
mov
mov
mov
shrd
shr
mov
mov
xor
xor
or
mov
movb
movb
movzbl
shl
mov
xor
add
push
add
mov
movb
pop
mov
movb
mov
movzbl
cltd
idiv
mov
add
mov
or
mov
add
cmp
jae
mov
mov
shrd
xor
mov
shr
mov
xor
shl
or
mov
pop
leave
ret
push
mov
sub
push
push
push
movl
movl
movl
movl
movl
movl
movl
movl
xor
inc
mov
movl
mov
mov
sub
add
jmp
sub
aam
push
cltd
sbb
adc
js
es
push
adc
mov
adc
mov
fdivp
xchg
cmp
jne
xor
dec
fcomip
sub
decb
xor
pop
adc
xor
inc
loope
repz
outsb
ja
jge
sbb
mov
dec
mov
nop
xor
out
sbb
or
xchg
mov
fsubrs
push
mov
setbe
push
fcoml
cmp
imul
pop
mov
jo,pn
cmc
mov
and
cmp
sub
lahf
nop
push
mov
outsl
arpl
mov
push
imul
inc
test
sbb
mov
bound
pop
jo
cmp
mov
sub
ds
shll
pop
dec
insb
mov
inc
imul
jbe
mov
ret
mov
xchg
jecxz
xchg
push
stos
out
int3
dec
xchg
mov
sub
icebp
jne
shll
sub
mov
add
fstps
xor
lret
mov
test
adc
insb
test
std
jmp
adc
push
cmpsb
pop
push
in
pop
inc
outsb
call
fcomp
mov
jg
xchg
add
loopne
push
sbb
pop
jbe
cmc
xchg
les
inc
pop
fildl
ss
mov
and
lock
xlat
xchg
inc
push
pop
and
mov
dec
out
or
int
fwait
cmp
adc
mov
test
add
imul
sbb
pop
arpl
insl
jle
dec
push
jecxz
shll
sbb
mov
sub
stos
loop
sbb
pop
out
in
adcb
data16
cmpsl
adc
push
inc
stc
xor
lcall
sub
enter
orb
sbb
aas
movsl
inc
pop
adc
ret
add
mov
in
repnz
sbb
jl
pop
push
xorb
lahf
sub
mov
mov
sub
lahf
mov
and
pop
jle
pop
inc
int3
jb
cmp
test
dec
inc
jmp
adc
sub
cmp
cmpsl
imul
cmpsb
xlat
cmp
xor
fisubrl
push
pop
mov
lahf
std
scas
pop
add
push
fsubl
or
jle
lods
xchg
or
add
xor
mov
dec
push
lods
pop
mov
mov
xchg
sbb
dec
mov
scas
mov
jnp
add
xor
jl
es
mov
mov
jp
and
add
ficoml
jp
jne
xchg
icebp
push
push
arpl
sub
lret
hlt
pop
mov
jecxz
rcrl
mov
cmp
loopne
adc
push
add
pop
cmp
pushf
pusha
lahf
push
jno
test
xchg
push
test
subl
in
lds
test
lea
dec
mulb
jae
add
lcall
mov
push
aam
add
mov
int3
mov
out
pop
int
mov
orl
push
mov
sbb
int
mov
and
mov
mov
mov
sub
push
lahf
pusha
das
mov
mov
bound
push
inc
psrlw
push
arpl
lret
add
test
es
negl
jbe
shll
int
sbb
jns
jl
mov
sub
cli
mov
cmp
fldenvs
fdivl
loopne
lcall
out
sub
cmp
arpl
sub
mov
mov
and
mov
imul
add
xor
movl
movl
movl
movl
mov
or
add
mov
and
mov
sub
mov
mov
mov
add
or
sub
xor
sub
mov
mov
mov
mov
mov
and
xor
xor
div
lea
mov
add
mov
and
mov
imul
mov
sub
cmp
jbe
push
pop
mov
mov
movl
movl
movl
mov
movl
movl
xor
movl
mov
mov
sub
div
mov
xor
mov
div
mov
xor
div
xor
mov
mov
imul
mov
add
div
mov
mov
sub
sub
xor
div
mov
add
cmp
jae
movl
movl
movl
movl
xor
movl
movl
mov
push
pop
div
mov
mov
mov
sub
mov
mov
imul
mov
xor
sub
add
and
mov
sub
mov
sub
mov
sub
mov
mov
mov
mov
xor
add
xor
and
lea
mov
mov
add
div
mov
mov
sub
xor
div
add
jmp
xor
sub
cltd
xor
outsb
or
jle
dec
adc
mov
adc
sub
out
scas
and
xchg
loopne
rorb
ja
pop
rorb
sbb
cmp
std
punpckhdq
pushf
lret
out
mov
push
clc
lcall
js
div
popa
or
sbb
mov
lcall
jp
sarl
lret
jle
pop
sub
repnz
and
stc
dec
fs
popa
stc
hlt
out
sbb
pusha
pop
adc
sahf
xlat
xchg
outsb
xchg
pop
mov
adc
mov
sbb
fnstenv
mov
xchg
jle
fcmovne
sub
xchg
fwait
inc
cmpsl
or
popa
jp
divb
pop
push
cmp
jae
or
jge
icebp
cmc
lea
push
sbb
sbb
mov
push
es
push
mov
popa
inc
insl
shlb
lret
and
mov
loope
sub
jo
loop
push
add
ret
sbb
push
cmp
jae
leave
dec
int3
jecxz
outsl
push
add
daa
sub
pop
sub
xlat
adc
push
jae
mov
xchg
sub
aaa
out
pop
daa
imul
fdiv
mov
ljmp
lods
test
js
xchg
and
push
and
adc
sti
jbe
ja
imul
mov
push
adc
pop
sbb
add
and
ljmp
ret
mov
sub
push
jecxz
push
jne,pn
loopne
jecxz
fnsave
adc
or
int3
push
add
out
fiadds
out
and
popf
adc
mov
loope
sti
and
sbb
jl
rclb
sub
and
out
mov
arpl
dec
push
adc
sub
add
xor
hlt
lret
popa
cmp
push
ss
and
movsl
mov
sbb
insb
pop
es
jl
and
jno
pop
pop
mov
cmp
lret
fisttpl
ret
sbb
sub
popf
es
adc
daa
cld
aam
rcrb
ret
jne
mov
mov
or
lret
or
jg
rolb
dec
insl
imul
push
push
mov
adc
out
cltd
jmp
cs
insb
push
mov
or
lea
jb
add
adc
mov
mov
in
iret
xchg
xchg
pop
add
arpl
adc
cmc
xchg
and
mov
cmp
stos
data16
int
inc
in
xchg
dec
pushf
push
test
sub
jmp
inc
mov
mov
dec
lock
insb
rcrl
mov
sub
cwtl
fdivs
lds
mov
aas
push
push
negl
cmp
pop
ret
loopne
loop
and
inc
aaa
push
jp
mov
cmpsb
scas
xor
pop
mov
sbb
call
sbb
icebp
pop
das
sub
or
push
mov
xor
pop
sti
pushf
mov
mov
cld
and
stos
pop
icebp
shrb
dec
and
je
stos
std
inc
fwait
testb
pop
je,pn
rep
cmc
pusha
and
mov
xor
test
mov
iret
xchg
aam
int3
dec
in
lods
notb
sbb
in
push
add
gs
dec
lods
idivl
cltd
int3
pop
or
nop
push
dec
jne
lret
mov
adcl
dec
loope
xchg
push
jecxz,pn
scas
jnp
xchg
xchg
fdivrl
mov
shll
or
add
mov
pop
cmp
jb
xor
inc
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
add
and
xor
mov
sub
movl
movl
mov
movl
movl
mov
mov
imul
xor
or
xor
mov
sub
mov
mov
mov
or
sub
xor
div
jmp
mov
in
xor
sbb
stc
test
movsl
call
adc
mov
adc
and
lahf
lds
in
dec
lods
cli
mov
jp
mov
pop
mov
loopne
lods
and
dec
mov
or
adc
sahf
adc
push
xchg
xor
aam
pop
aas
adc
jg
xor
arpl
cmp
cwtl
das
mov
sub
cmp
fcoms
cmp
adc
adc
lret
pop
mov
int
in
add
lds
flds
test
mov
pop
sbb
mov
ss
sub
cltd
leave
leave
subl
bswap
mov
cli
sbb
or
mov
sbb
sbb
add
psubd
bound
mov
sub
pop
ds
roll
aaa
or
xor
iret
lahf
imull
inc
daa
mov
and
rcl
xor
sti
lea
movsb
shrl
add
lods
hlt
pop
aam
xor
stos
jno
pop
push
fucomi
dec
stos
outsb
add
xor
pusha
out
sub
scas
popf
xlat
xor
gs
adc
scas
outsb
lods
jg
cld
jle
fdivl
adc
dec
das
cmp
jecxz
pop
insb
gs
cld
sub
jb
mov
mov
inc
lcall
xor
test
fbstp
mov
mov
stc
push
add
mov
cmp
xchg
adc
mov
adc
jae
fisttpl
fcomi
pop
in
cli
and
gs
jmp
add
jl
sbb
jp
ss
push
lret
adc
jnp
jecxz
inc
sub
fwait
scas
not
dec
pop
gs
or
sub
sti
mov
sti
mov
mov
add
inc
cwtl
or
rcrl
xor
scas
mov
pop
movsl
imul
mov
add
or
jbe
adc
mov
cmp
sbb
pop
sub
pop
or
and
cmp
negl
xor
out
test
sbb
lds
repnz
lret
xchg
mov
and
mov
roll
popf
addb
mov
stos
adc
js
pop
jp
mov
nop
leave
stos
adc
popf
aad
push
lods
sub
dec
icebp
sbb
mov
add
push
aam
call
movsl
sub
xchg
outsl
andl
scas
or
in
out
mov
mov
incb
mov
mov
inc
std
test
pusha
mov
sub
push
out
out
loope
sbb
icebp
ja
sub
subl
int3
xor
lods
ret
mov
wrmsr
scas
hlt
pop
sbb
adc
cmp
add
push
rolb
ja
add
fcomps
int
mov
lret
mov
sub
push
pop
cs
stos
jae
jae
insb
std
jp
test
lea
lea
les
jp
dec
mulb
fsubl
pop
fcomps
lea
cld
testb
repnz
in
bound
push
test
divb
int
jl
pop
ljmp
popl
das
jg
jp
rcl
jge
push
add
sub
mov
sbb
mov
cltd
aad
pop
mov
mov
shl
ljmp
imul
and
inc
add
add
rorb
push
mov
mov
mov
imul
jmp
mov
leave
pop
dec
push
sub
push
call
js
adc
mov
adc
sbb
sub
cmp
call
mov
cmp
sbb
pushf
dec
in
or
lcallw
pop
mov
inc
adc
xor
mov
xchg
test
inc
js
cmp
mov
sub
cmp
pop
jmp
jl
jg
add
sahf
inc
mov
je
rorl
pop
xor
cmp
jnp
mov
sub
inc
mov
lods
push
stos
push
mov
xlat
leave
push
ret
ret
idivb
rclb
das
scas
ja
test
mov
or
mov
mov
nop
mov
adc
add
or
nop
dec
pop
jp
lahf
cmc
test
xor
popa
jle
xor
pop
out
fisubs
mov
add
test
push
xor
pop
xor
jno
xor
clc
sub
jbe
jmp
dec
outsb
sub
xchg
xchg
inc
addr16
mov
push
mov
nop
jo
push
cmp
cmp
dec
gs
xchg
sub
jno
mov
stos
mov
pop
lcall
mov
xchg
mov
mov
mov
xor
repnz
inc
mov
jbe
or
enter
sub
scas
popa
mov
pop
cwtl
out
fwait
jns,pn
lods
or
jl
sbb
jp
cmp
mov
dec
jnp
cli
jg
shrl
xchg
mov
jecxz
dec
in
mov
mov
negb
ret
fneni(8087
push
aad
inc
mov
cmp
and
cmp
ret
pop
dec
dec
dec
xchg
frstpm(287
mov
clc
in
cmp
js
pop
mov
pop
add
add
stos
stos
push
bound
push
aad
repnz
hlt
inc
mov
call
rcrb
aad
in
pop
iret
scas
xchg
add
push
jecxz
lahf
loopne
xor
shl
xchg
test
mov
scas
xchg
lods
mov
dec
pop
dec
sbb
inc
pop
gs
push
xlat
in
xor
or
sub
stos
pop
jo
xchg
scas
sub
cli
call
inc
roll
icebp
mov
push
xorl
movsl
decb
ss
int
rorb
sbb
adc
ljmp
add
mov
pop
ds
fdivp
cmp
ja
movsb
or
dec
pop
mov
dec
mov
icebp
std
shll
addr16
inc
push
dec
xchg
xchg
call
push
add
lods
and
sub
std
lods
scas
outsl
dec
and
dec
scas
aas
xchg
ljmp
addb
jmp
push
sarl
imul
stos
push
mov
orl
adc
mov
adc
cmpsl
into
push
nop
pop
hlt
hlt
push
or
xor
movsb
sahf
fiaddl
and
mov
mov
push
rol
jmp
mov
fnstsw
xor
cs
fmulp
push
adc
rcrb
das
cmc
addr16
push
mov
add
add
adcl
and
sti
subl
sub
mov
mov
out
push
pushf
cli
and
jmp
adc
sbb
jl
add
mov
sbb
std
and
loop
imul
mov
jp
loopne
fdivs
je
mov
adc
sub
add
or
mov
or
xor
lea
mov
and
add
xor
add
cmp
jne
pop
pop
pop
leave
ret
push
mov
sub
push
push
movl
movl
jmp
pop
sub
pop
rcll
sub
scas
je
int3
dec
mov
adc
adc
testl
adc
loope
fwait
fisttps
repnz
jo
icebp
insl
out
push
jg
sahf
push
pushf
cmp
xor
xor
dec
outsb
dec
sahf
std
dec
call
lea
orl
sbb
xor
fisubs
push
sbb
add
les
cmp
dec
and
fcoms
push
shr
out
pusha
bound
sub
inc
mov
test
xor
inc
pop
push
push
repz
add
pop
lock
lcall
push
cmp
lcall
pop
ret
xor
neg
jge
adc
mov
mov
xchg
daa
jecxz
loopne
leave
jg
jle
in
cmp
out
mov
nop
push
js
cmp
lods
mov
cmp
push
fisttps
leave
jg
jp
pop
movsb
adc
push
sahf
push
andl
lahf
into
mov
in
pusha
cmpsb
loop
sub
mov
mov
fxch
sbb
jecxz
adc
daa
pop
xchg
call
pop
stos
xchg
mov
mov
jg
movsl
mov
mov
adc
in
into
shlb
and
js
scas
mov
insl
jge
xor
push
out
cmp
mov
sbb
imul
jl
jns
adc
dec
sti
stos
mov
js
mov
inc
fisubrs
sub
pop
add
popa
mov
jl
aam
lahf
add
adc
js
xorb
mov
std
repnz
add
cmp
and
cmp
arpl
push
or
ja
fsubrs
ljmp
mov
jae
cwtl
fnstsw
add
imul
lret
sbb
dec
test
or
mov
aas
fdivs
sub
mov
in
xchg
sarl
jge
out
test
xchg
jno
sbb
jo
pop
mov
adc
sbb
cmp
jbe
rcll
jnp
inc
out
mov
mov
addr16
adc
sbb
dec
push
js
xchg
push
test
fisttpl
push
clc
mov
test
cmp
xor
insl
mov
int
jne
ljmp
dec
xchg
mov
jnp
mov
push
mov
inc
push
push
pshufw
fistps
inc
shl
jl
mov
inc
xchg
lods
in
test
test
popf
pop
ljmp
jg
into
jne
dec
test
jg
adc
les
mov
mov
or
jmp
pop
sbbb
adc
test
movsl
and
arpl
sub
test
arpl
sti
add
adc
xorb
les
xchg
xor
sub
insb
lahf
sbb
loop
out
lahf
jo
cwtl
into
hlt
adc
mov
adc
xchg
ds
mov
lds
or
push
xor
dec
leave
cmp
cmp
popf
jo
pop
aad
xchg
sbb
adc
push
test
test
push
out
sbb
in
inc
outsl
outsl
adc
mov
cltd
pusha
dec
sub
icebp
mov
lea
rclb
mov
xchg
std
and
pop
xor
pop
mov
dec
clc
aas
mov
aas
xor
inc
daa
cmp
xchg
mov
cli
ds
jns
ret
mov
mov
add
or
mov
lea
mov
movl
movl
mov
mov
and
xor
mov
imul
xor
lea
mov
movl
movl
mov
xor
push
pop
div
mov
xor
jmp
in
stc
sub
les
outsb
insb
or
adc
mov
adc
stc
das
shrl
cmp
out
dec
int
adc
ss
mov
mov
std
jno
xchg
mov
stos
and
ds
jmp
fmul
cltd
mov
call
sub
fidivrl
cmpb
fiadds
pop
cmp
mov
mov
sbb
pop
xlat
push
mov
ds
xchg
js
loopne
dec
push
ret
out
ss
ret
mov
push
cmpb
pop
out
adc
add
sbb
mov
movsb
imul
and
pop
sbb
mov
pop
jg
divl
in
in
or
xchg
xor
daa
addr16
scas
inc
xor
dec
cli
jae
or
dec
or
dec
jmp
xlat
mov
mov
xor
movsb
bound
aas
mov
sub
pop
imul
loope
push
shlb
rcrb
stos
outsb
addr16
test
mov
or
cmp
sbb
sbb
dec
cmc
das
inc
bound
adc
mov
rclb
pop
repnz
test
or
into
pop
fwait
pop
mov
push
cmp
in
push
cli
js
inc
jmp
ljmp
xor
lahf
inc
inc
lods
test
mov
aaa
adc
xlat
addb
or
fsubs
das
xor
aam
jp
std
and
sub
addr16
ret
pop
stos
loope
aam
and
or
inc
lret
or
stc
sub
push
push
inc
cmp
mov
pusha
in
nop
cs
and
int
loop
fisttpl
mov
orb
leave
out
inc
insb
pop
xchg
mov
xor
je
repz
shlb
xor
xchg
sbb
and
ljmp
stc
filds
fsubrl
es
das
pop
lret
out
loop
dec
shlb
adc
xchg
aad
push
neg
sar
mov
ret
pop
jmp
cmp
repz
int3
pop
mov
dec
pop
fadds
addr16
stc
dec
inc
dec
ss
pop
fcomps
mov
iret
imul
mov
sahf
inc
popa
pop
pop
xchg
std
aaa
jecxz
push
cmove
daa
fdivs
cld
cmc
cmp
lcall
aas
cmc
jle
lea
aad
pop
sti
je
mov
clc
jecxz
into
xchg
adc
mov
pusha
cmp
or
lods
sub
push
sbb
icebp
lret
mov
pop
adc
shlb
filds
js
pop
mov
sbb
es
lods
aaa
jae
jmp
mov
pop
cltd
jg
inc
lcall
dec
sub
in
adc
push
stos
inc
and
mov
call
aad
jecxz
clc
add
aad
cmc
mov
sbb
popa
adc
fnstcw
or
xchg
xchg
jbe
mov
mov
jns
cltd
inc
mov
imul
mov
mov
pop
pop
jg
iret
jmp
jno
sub
data16
cmp
jne
jecxz
test
add
data16
enter
mul
outsb
es
sub
scas
fdivr
mov
ror
addr16
xor
aam
int3
cmp
push
dec
idivb
dec
out
add
add
fwait
loope
in
pop
mov
lds
mov
inc
pop
pop
mov
and
sbb
pop
cld
sbbl
sub
in
push
mov
mov
pushf
leave
mov
cmp
aaa
popf
lcall
add
and
mov
sub
mov
movl
movl
movl
mov
mov
lea
mov
div
mov
lea
mov
movl
movl
movl
mov
mov
xor
sub
mov
sub
xor
mov
movl
pop
mov
movl
jmp
jo
pop
bound
stos
or
mov
test
adc
adc
cmp
mov
dec
mov
std
pop
call
fsts
faddp
mov
mov
popa
popf
inc
inc
dec
xchg
shlb
jae
out
cmpsb
cld
mov
test
inc
mov
pop
fwait
sbb
mov
xchg
pushf
stos
cli
jno
push
jmp
popa
mov
pushf
fbld
sbb
popf
out
xchg
cltd
int
cld
and
sub
jnp
inc
push
movsl
and
push
ja
fwait
and
pop
ret
mov
out
scas
lret
sahf
fcoms
ret
sti
xchg
shr
repz
cmp
mov
mov
fcoms
mov
mov
mov
add
mov
hlt
jl
or
mov
in
or
xchg
fmuls
adc
mulb
mov
cltd
xchg
jbe
fildl
jae
clc
push
xchg
cli
inc
add
fidivl
and
iret
test
and
fbstp
xchg
pop
daa
orb
mov
jl
push
xor
pop
enter
adc
pop
and
jecxz
xor
clc
ret
fucomp
and
dec
test
ret
rolb
lds
repnz
es
push
xchg
out
push
pop
jns
je
xchg
testl
mov
inc
jmp
mov
flds
lods
pop
mov
cli
pop
add
imul
add
inc
fiaddl
mov
test
adc
rclb
or
out
leave
lret
icebp
lret
or
mov
inc
xchg
shll
xor
mov
push
in
fwait
xchg
into
pop
xor
pop
jg
ds
dec
cli
inc
shll
ret
je
mov
loope
dec
xchg
jl
loope
xchg
inc
and
cmp
roll
insb
mov
inc
jb
lcall
jle
dec
lods
or
jb
hlt
je
pop
inc
mov
aas
outsl
jae
popa
push
pop
xor
fwait
sub
out
mov
adc
pop
insl
xor
cwtl
mov
clc
or
mov
inc
sahf
mov
xor
or
lock
aaa
mov
jns
jnp
inc
dec
loopne
xchg
lods
pop
mov
les
cmp
les
xlat
in
je
sbb
mov
cmp
jl
or
push
cmpsb
fistps
lods
es
stos
sahf
xchg
rorl
mov
aaa
jno
test
jg
fst
call
aas
out
sbb
in
arpl
sbb
mov
mov
repnz
mov
mov
dec
push
out
and
lcall
sub
jp
push
test
sub
push
mov
push
inc
dec
sub
mov
jnp
lea
xor
fisubrs
fdivrp
push
addb
lret
add
sbb
test
adc
lret
xor
or
and
jnp
in
popa
ffreep
and
sar
adc
jmp
add
inc
dec
mov
les
in
std
push
cmpb
cmp
cmp
jle
sub
aas
pop
mov
incl
sbb
jp
mov
fistpll
sbbb
sub
in
sub
push
addb
pop
ja
pusha
lea
leave
cmp
jne
cmpl
lods
cmpsl
pop
movsl
adc
cwtl
pushf
dec
adc
xor
pop
push
lahf
and
cmp
add
clc
mov
xor
xor
jmp
pop
xchg
push
dec
push
sbb
js
insb
insb
loopne
cmc
stos
inc
sbb
adc
cmpsl
scas
sbb
js
test
and
inc
and
jae
mov
ja
add
sarb
add
loope
lea
jne
frstor
rcrb
aad
int3
movsl
popa
mov
sub
mov
mov
sti
inc
sbb
and
pop
sbb
inc
jb
inc
outsl
pop
fcoms
cld
adc
push
mov
fs
cmpsl
daa
call
inc
jp
pop
popa
push
mov
rcr
dec
and
cmc
movsl
out
mov
pop
jmp
pop
ljmp
ljmp
scas
xorl
push
imul
dec
or
add
mov
mov
fiaddl
sbb
call
aas
mov
cmp
addr16
int
dec
mov
scas
cmp
rcll
adc
dec
addr16
mov
add
mov
sub
ret
sbb
push
sbb
mov
mov
dec
jecxz
lahf
out
jno
filds
xorl
ja
push
pop
ljmp
dec
mov
jne
shl
movsl
fimull
dec
icebp
stos
pusha
je
xchg
lock
add
bsf
push
jae
out
dec
leave
jl
pop
fcomi
and
inc
push
xchg
mov
xchg
mov
pop
mov
xchg
hlt
inc
sub
inc
mov
lret
ja
push
adc
out
pop
insb
int
dec
insl
mov
add
int
sbb
sub
jbe
cwtl
pop
push
cwtl
pop
stc
xor
cli
or
sbb
insb
outsb
in
fidivrs
inc
pop
sbb
pushf
inc
scas
ja
cli
xchg
repz
inc
das
adc
push
inc
inc
fistl
cmpsb
fsubs
ficompl
inc
loope
sub
or
jbe
xchg
cmpsb
push
out
gs
movsb
or
out
mov
pushf
ds
ljmp
lret
mov
popf
lret
test
pop
mov
dec
mov
inc
sarl
mov
pop
fldt
fiaddl
cwtl
sub
adc
inc
repz
outsb
and
pop
adc
jns
inc
or
or
loope
xor
mov
into
hlt
pop
adc
xchg
test
fisubrs
rcrl
pop
or
mov
push
sub
popa
maxps
jmp
fsubs
popf
jle
and
cli
lods
cmp
out
lds
loope
and
into
daa
jb
xchg
push
sbb
mov
push
pop
data16
movsl
pop
loop
repz
cmp
pusha
fs
testb
std
cmp
mov
xchg
cld
mov
and
mov
out
add
pop
jmp
fwait
cld
cmp
sbb
jle
lea
lea
mov
xchg
lods
pop
sub
jge
in
arpl
push
xor
jns
and
xchg
rcr
push
ss
jns
les
cmpsl
popf
and
mov
jae
inc
inc
icebp
add
pusha
lret
int3
xchg
jl
jno
inc
rorb
cmpsb
nop
cmp
jnp
mov
push
inc
test
xchg
add
orb
pushf
and
mov
adcb
loope
xchg
sbb
aad
xchg
test
fisttps
jge
cmp
jg
sbb
xchg
mov
movsl
cwtl
xor
js
adc
push
div
mov
and
sub
mov
movl
movl
movl
jmp
out
sbb
fsts
xchg
add
ficoms
adc
fcoms
movsl
in
icebp
adc
mov
add
jge
adc
loopne
imul
sti
das
and
loopne
jnp
into
cmpsb
push
or
mov
fnstenv
pop
pusha
mov
mov
mov
sub
jnp
pop
xchg
pushl
je
mov
push
je
es
cmpsl
xor
in
jge
mov
cmp
xor
int
mov
sub
or
aaa
dec
sub
loop
jmp
pop
inc
adc
dec
lds
bound
in
test
pusha
into
lret
push
fidivrl
add
jb
mov
test
int3
int3
loopne
mov
stc
test
xor
pop
cmpsb
addl
inc
test
jnp
push
es
inc
cli
or
mov
pop
mov
add
adc
xchg
mov
loope
push
or
ss
cmpsb
inc
push
sub
rol
dec
jnp
lea
mov
pop
dec
cmp
aaa
push
jns
or
pop
les
xchg
push
repz
push
outsl
push
popl
fidivs
push
pusha
or
pop
push
and
into
nop
pushf
jl
push
call
mov
xor
out
add
mov
stos
jmp
cmc
xchg
pop
cmp
mov
imul
sbb
lds
loop
pop
bound
fmuls
cmpsl
mov
scas
gs
dec
adc
inc
and
inc
mov
scas
lods
xorl
stos
lea
add
lret
mov
repz
cmc
mov
cmp
mov
push
inc
fimull
insb
int
int
jecxz
lock
add
data16
ret
adc
mov
add
mov
sbb
inc
sub
sub
xor
aad
sub
fcom
push
rorb
mov
pop
dec
lcall
aaa
mov
pop
daa
test
pop
ds
dec
add
xor
test
xor
clc
loop
sbb
leave
stc
rolb
rorl
sbb
lods
cmp
jg
adc
pushf
push
popa
push
add
rcr
ja
out
mov
inc
push
mov
add
repnz
mov
inc
xchg
loop
les
enter
fs
test
mov
mov
mov
das
and
ret
xchg
adc
and
stos
add
inc
int
inc
xor
mov
xor
and
icebp
loop
xor
pop
mov
xlat
and
cmp
cmc
mov
jne
fdivl
test
cmp
or
cmc
fildll
pusha
loopne
mov
xchg
mov
pop
fdivrs
adc
ficomps
adc
in
scas
out
dec
scas
or
movsl
sub
lds
or
insl
aad
gs
jae
push
imul
pop
popa
aaa
inc
jl
inc
into
icebp
imul
jb
adcb
mov
ficoml
inc
ret
dec
and
dec
push
sbb
cmp
mov
cmpsl
mov
mov
icebp
repnz
mov
xchg
rclb
and
shr
inc
aaa
sub
leave
sbb
adc
ret
jp
pop
rclb
in
ret
pop
mov
ret
mov
hlt
add
add
ja
inc
cmp
mov
cmp
flds
pop
arpl
insl
pop
fs
xchg
loopne
xchg
jb
mov
pop
dec
cmc
xchg
mov
cmp
xor
cli
jp
xor
xor
inc
clc
mov
inc
hlt
insb
dec
add
movl
mov
add
mov
xor
mov
or
mov
or
mov
and
mov
sub
mov
movl
jmp
fisubrs
outsb
rcrl
iret
sbb
insb
add
int3
lods
jae
adc
mov
adc
xchg
dec
dec
xor
pop
icebp
xor
das
inc
aas
push
adc
repz
je
movsb
sub
testl
xor
jno
loopne
dec
shl
ficoms
inc
cwtl
inc
aam
es
mov
mov
int3
insl
sbbl
sub
add
sub
pop
push
fs
aad
mov
orb
int3
out
xor
and
push
push
adcb
mov
mov
arpl
xchg
mov
jno
inc
mov
repnz
lret
mov
xor
and
shll
imul
loopne
mov
pusha
test
mov
sti
sbb
add
or
andl
mov
js
adc
out
jo
aad
lods
adc
mov
out
jb
dec
or
lahf
lahf
in
popf
std
test
adc
mov
movl
fnstenv
out
iret
or
shll
xor
stc
cld
loop
xor
lock
sbb
in
pop
jg
mov
mov
inc
ret
leave
jmp
jnp
dec
mov
icebp
mov
loop
inc
mov
inc
mov
xchg
stos
lds
push
fwait
mov
jmp
mov
filds
in
sub
imul
dec
popa
mov
pop
xor
cli
ss
mov
sbb
adc
mov
adc
jl
cltd
or
shll
jl
xor
xchg
mov
push
push
insb
mov
mov
in
and
pop
insl
mov
pop
inc
or
lods
das
subl
movl
into
sbb
jecxz
xchg
mov
push
loope
lcall
je
adc
sahf
mov
mov
sub
or
add
dec
pop
pop
pop
daa
test
cmpsb
pop
cli
loop
imul
push
cmp
xchg
mov
adc
mov
or
andl
cmc
movsl
mov
jbe
pop
fwait
mov
or
sbb
test
jg
xlat
mov
sbb
sbb
sti
mov
mov
sub
inc
xchg
jns
aad
mov
ror
lods
push
lds
jl
sbb
push
jnp
addb
test
gs
scas
int3
das
push
inc
xlat
mov
loopne
and
dec
xor
cmpsl
mov
aad
ret
pop
in
mov
adcb
inc
xchg
push
pop
movb
stos
insl
int3
jmp
dec
xchg
arpl
inc
pop
dec
in
cmpl
adc
mov
mov
pop
jp
adc
dec
pop
pop
in
push
in
test
stc
mov
push
ret
jo
ret
je
cmp
dec
into
je
add
insb
or
sub
lds
or
push
test
jo
push
fdivrl
inc
adc
lahf
mov
dec
add
addb
inc
dec
jne
arpl
xchg
xchg
pop
push
fiaddl
icebp
mov
fistps
mov
adc
repnz
dec
cwtl
jle
dec
and
sub
mov
cmc
jge
pop
outsb
fisttpll
or
movsl
dec
jnp
pop
add
and
mov
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
add
adc
or
mov
or
or
mov
mov
or
mov
sub
mov
sbb
mov
or
or
add
mov
adc
mov
movl
movl
movl
movl
movl
movl
movl
xor
inc
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
movl
mov
movl
movl
mov
or
add
mov
or
mov
sub
mov
sub
imul
add
mov
push
mov
lea
mov
xor
div
mov
lea
push
mov
mov
push
push
push
push
call
mov
mov
push
push
or
or
push
push
call
mov
mov
xor
mov
mov
mov
and
add
lea
xor
push
lea
call
mov
mov
mov
sub
xor
imul
add
xor
xor
mov
div
cmp
jne
jmp
in
xchg
es
cwtl
pop
push
and
xlat
idivl
or
adc
inc
jnp
lock
push
sub
jbe
adc
push
and
shll
xor
icebp
scas
pop
out
nop
dec
scas
pop
aaa
btr
push
mov
or
and
out
push
mov
or
sbb
xchg
push
jmp
cmpsb
mov
push
mov
hlt
enter
jne
in
and
sub
fs
data16
xchg
jne
jg
push
or
loope
mov
pop
pop
xchg
scas
movsl
cli
test
jno
insl
jp
lahf
jp
jge
inc
cwtl
testb
sti
subb
pop
cs
mov
pop
pop
fidivs
inc
sub
jp
push
mov
icebp
outsb
jg
iret
and
xor
movsl
inc
rcr
fcoml
jae
movsl
fdivrl
cmp
rorl
inc
movsl
test
mov
movsl
popa
fs
mov
mov
cmpsb
pop
addr16
inc
je
dec
cli
and
dec
in
jge
shlb
xchg
loope
imul
xchg
push
jge
adc
loopne
sbb
push
and
ja
in
jmp
push
popa
mov
lret
inc
jo
out
jle
sub
rorb
xchg
jmp
test
adc
addb
loop
xchg
sub
stos
mov
mov
aad
dec
add
mov
int
sub
mov
mov
faddl
pop
pop
into
lahf
dec
xchg
iret
pop
iret
andl
push
out
je
test
cwtl
test
sbb
scas
push
into
scas
ja
std
xor
fidivs
pop
dec
xchg
test
js
addr16
int3
aaa
mull
loopne
jns
push
add
or
pop
push
nop
jne
mov
add
out
daa
sub
and
lods
push
pop
test
rcll
cmp
push
ljmp
cmp
js
adc
fwait
inc
add
dec
pop
js
in
shlb
pop
add
xchg
in
das
pop
push
add
mov
dec
clc
js
rcrb
lds
sub
out
pop
sub
push
jmp
int3
add
mov
test
mov
mov
mov
cs
mov
adc
pop
das
leave
mov
push
in
inc
pop
pop
fidivs
adc
in
mov
sbb
ficompl
sub
rcrb
cmpsl
dec
scas
mov
loop
lret
cld
das
xorb
add
xchg
out
jb
test
sarb
mov
pop
add
mov
or
xchg
sub
push
xor
pop
adc
pop
and
call
pop
pop
test
repz
movsl
outsl
sbb
cs
jmp
jmp
fcmovnu
leave
bsr
cmc
push
sti
xor
or
jo
outsl
push
popf
add
jnp
xor
xchg
loope
and
cmpsl
or
sbb
outsl
je
xchg
dec
lret
sub
xchg
push
fsubr
leave
adc
jnp
mov
sbb
stc
inc
loopne
push
xlat
xchg
push
rolb
repz
sbb
jnp
daa
add
dec
gs
xchg
or
dec
inc
xchg
sbb
cltd
sub
nop
ret
push
les
ret
shrl
push
dec
pop
je
repnz
ljmp
cmp
cltd
clc
sbb
js
jne
je
add
jle
out
rcll
popa
xor
fwait
ljmp
shr
iret
add
add
pusha
inc
ja
pop
aaa
and
or
lods
test
adc
mov
adc
mov
add
push
test
in
enter
lahf
push
out
sar
dec
mov
mov
jg
shrl
jbe
jb
add
hlt
push
ror
adc
push
lret
cmp
sbb
js
mov
sub
xchg
dec
aaa
inc
dec
push
hlt
cmc
pop
fcompl
lea
lea
xchg
sti
adc
imul
mov
int
mov
sbb
mov
ja
mov
pop
cltd
xchg
test
lret
push
addb
push
int3
sub
xor
mov
adcb
mov
daa
ret
mov
shlb
push
cmpsl
sub
shlb
adc
add
jg
sbb
idivb
stos
sbb
cwtl
int
ja
cmp
in
jl
xor
jb
add
and
or
dec
ss
xor
sub
jp
cmp
jle
lcall
mov
adc
mull
imull
out
gs
das
mov
push
jl
xchg
and
mov
shlb
std
mov
lcall
outsl
mov
sti
lahf
int
pop
mov
push
imul
pop
adc
mov
in
or
mov
repnz
test
iret
cmp
sbb
xor
add
push
ds
jp
fucom
xchg
lods
sbb
mov
ja
out
daa
test
cmp
test
movsb
dec
push
incl
sub
mov
notb
xor
movsb
mov
sub
cmp
pop
sub
subb
jmp
push
inc
sub
xchg
adc
xor
rclb
inc
ja
in
lret
shll
dec
mov
rcrb
aaa
ds
cmpsb
shlb
popf
dec
sbb
mov
fsubl
loopne
outsl
outsb
addl
out
stc
pusha
jl
xchg
loope
sub
sbb
and
pop
orb
daa
jecxz
mov
movsl
pop
cmp
scas
cwtl
sbb
loope
lret
cmc
and
ret
sar
mov
int
and
mov
repz
sub
inc
fisubrl
arpl
push
addr16
lea
xor
cmc
sub
inc
repnz
aas
push
stos
test
sbb
sbb
test
leave
pushf
jge
int3
push
mov
fs
popa
inc
adc
sub
add
lods
sbb
jb
and
mov
addr16
mov
cmpsl
lret
aad
sub
test
xchg
jle
addl
rcll
mov
inc
mov
lods
inc
notb
testl
dec
test
push
lods
scas
fbld
adc
sbb
ja
out
popf
sbb
enter
repz
adc
cltd
xor
xor
scas
out
mov
xlat
mov
pop
mov
push
or
adc
leave
jg
daa
aad
sbb
mov
lret
lcall
cli
inc
loope
pop
jne
in
mulb
stos
iret
fs
stos
push
jmp
test
jg
adc
add
not
inc
pop
mov
pop
adc
xchg
stc
mov
sbb
stos
fiadds
out
int
dec
xor
mov
div
mov
mov
xor
sub
mov
xor
sub
or
lea
push
mov
push
pop
div
mov
xor
div
mov
mov
xor
xor
div
imul
sub
push
mov
add
push
mov
sub
mov
pushl
call
mov
mov
lea
mov
incl
mov
mov
xor
mov
xor
xor
and
cmp
jne
cmp
jne
mov
jmp
lea
mov
mov
mov
mov
mov
sub
mov
mov
mov
sub
mov
movl
movl
mov
mov
mov
mov
pushl
pushl
pushl
pushl
pushl
push
push
pushl
mov
call
mov
mov
pushl
call
mov
push
add
push
push
call
mov
jmp
mov
pop
mov
pop
leave
ret
push
mov
sub
push
push
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
push
push
push
call
mov
mov
add
adc
and
push
and
or
push
or
xor
xor
push
push
call
mov
movl
movl
movl
movl
xor
movl
push
inc
mov
mov
mov
push
push
push
call
mov
mov
or
or
push
add
push
adc
push
push
call
mov
lea
xor
mov
div
mov
sub
mov
movl
mov
movl
mov
mov
sub
mov
xor
div
mov
xor
or
or
mov
mov
movl
movl
movl
mov
add
mov
and
lea
mov
mov
mov
movl
movl
movl
mov
mov
sub
add
xor
add
mov
div
mov
xor
pop
pop
or
mov
movl
movl
movl
mov
mov
and
sub
or
mov
imul
mov
div
leave
ret
push
mov
sub
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
jmp
xchg
lods
sub
addl
adc
adc
adc
cmc
loope
xchg
jmp
push
dec
aas
sub
pop
jb
and
xor
pop
fld
outsb
jbe
push
add
shlb
fcmovnu
pop
jg
push
xor
cs
orb
mov
cmp
int
dec
les
and
jl
icebp
and
mov
mov
bound
cmpl
pop
insb
mov
jmp
adc
xchg
cltd
inc
fmuls
shll
jns
inc
mov
aaa
xchg
inc
push
fldt
dec
xor
cltd
adc
cmp
add
pop
lcall
out
jge
jg
push
dec
into
sub
push
push
inc
adc
jle
or
push
movsb
push
push
mov
inc
lods
push
lahf
lret
add
loope
mov
sti
cmp
or
xchg
mov
pop
cltd
mov
bound
test
lods
xor
fmuls
dec
arpl
add
and
mov
and
imul
xchg
ret
xchg
sti
rolb
lds
pop
cmp
adc
lods
inc
pop
loop
xchg
call
xor
cmp
popl
repz
or
sub
push
add
adcl
mov
mov
fisubl
sbb
dec
sbb
aad
nop
lds
call
and
cwtl
int
and
mov
stos
push
out
xchg
jge
out
lcall
test
aas
xor
adc
lock
xor
scas
jle
inc
pop
test
insb
leave
iret
mov
and
add
add
or
in
pop
cltd
fwait
arpl
xchg
xchg
jge
and
movsl
push
fists
inc
or
rol
xchg
cmpsl
push
pop
sub
in
xlat
rorl
orl
loop
lret
in
jne
cmp
push
mov
imulb
inc
mov
mov
stc
nop
push
imul
mov
sbb
test
popa
test
and
movsl
adc
and
pop
sbb
pop
add
lret
aam
cmpsb
arpl
and
and
push
daa
movsb
sub
xchg
out
mov
mov
fistpll
and
xchg
cld
mov
cmp
mov
fisubl
jnp
dec
push
or
xor
xchg
xchg
ja
xchg
add
mov
inc
in
mov
xchg
mov
dec
lock
and
incb
jl
xchg
mov
adc
addr16
or
inc
fisubrl
pop
imul
fs
mov
iret
xlat
leave
jo
jp
aas
add
jle
in
push
xchg
inc
mov
sub
iret
adc
fistps
in
inc
mov
fwait
add
xor
sbb
dec
mov
hlt
push
cmp
add
test
call
add
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
push
movl
mov
mov
push
push
push
call
mov
mov
xor
mov
mov
mov
xor
mov
xor
or
mov
mov
mov
xor
jmp
jle
mov
cltd
cmp
or
stos
addr16
adc
adc
adc
adc
out
out
rcrl
cmp
mov
les
sub
arpl
lret
addr16
popf
jbe
cmc
xchg
lret
popa
mov
scas
mov
pop
add
clc
xchg
fwait
jno
outsl
and
out
cmpsl
adc
out
testb
shll
or
or
xor
mov
push
add
xor
inc
xchg
xchg
leave
pop
dec
out
fnstenv
jle
sub
subl
jb
psubd
call
jl
lahf
fnstsw
hlt
cmp
inc
clc
add
inc
les
fcom
sti
jns
insb
shlb
nop
sbb
aam
outsl
xchg
loope
mov
and
pop
jns
add
lret
outsl
push
jne
mov
or
sbb
inc
or
cmp
div
lods
cmpsl
ffreep
dec
cmp
mov
mov
ret
repz
mov
insl
mov
mulb
mov
cld
adc
jp
sahf
out
lret
test
pushf
jb
outsl
xchg
cmp
cs
sbb
xor
es
mov
rolb
pop
popa
nop
mov
aam
push
mov
leave
cmp
fucomp
adc
sbb
and
test
call
mov
sub
je
sbb
pop
outsb
lds
mov
sub
movsb
adc
push
xor
pop
mov
imul
xchg
movsl
pop
jmp
in
xchg
icebp
dec
insl
and
lea
test
mov
or
pop
xchg
lret
int
addr16
inc
push
call
mov
test
mov
inc
fcmovnbe
mov
mov
in
push
mov
sbb
inc
and
sti
jns
xchg
sbb
outsl
sbb
pop
sahf
cmpsl
test
push
xchg
jge
js
mov
insb
jnp
jp
mov
ja
repz
xor
sub
lds
into
stc
movsl
pop
dec
pop
xchg
pop
inc
push
gs
mov
xchg
push
hlt
ds
fdivrs
les
in
outsw
loop
push
mov
inc
sub
push
pop
call
xor
lret
sub
xchg
cmpsb
jge
mov
xchg
and
xchg
mov
cli
mov
out
mov
xlat
push
mov
jbe
cmp
or
mov
push
add
mov
frstor
xchg
into
andl
bound
and
adc
sbb
push
and
mov
fnsave
mov
fs
dec
adc
into
test
xchg
insb
pop
lods
rcrb
in
mov
mull
pop
sti
ss
das
fwait
cwtl
push
mov
adc
mov
sub
xor
ret
fisttpll
mov
lcall
push
scas
and
jnp
pop
or
xor
call
repnz
cltd
adc
cmp
jne
cmp
je
mov
mov
mov
mov
jmp
mov
popf
dec
cltd
push
and
rclb
test
adc
adc
adc
lahf
xor
xchg
sbb
movsl
jo
jnp
pop
in
sbb
psrlw
push
mov
out
std
inc
ljmp
adc
push
xor
movsb
jnp
orl
cmp
js
pop
jnp
es
aad
pop
push
test
in
outsl
push
mov
and
sbb
inc
cltd
das
sbb
sbb
jmp
jmp
aad
cmovg
fistl
sahf
and
mov
or
hlt
add
cmp
dec
pop
adc
out
jbe
pop
and
test
stos
inc
adc
mov
jle
iret
cmp
mov
call
outsb
jge
or
in
in
loop
loope
add
sub
into
pop
imul
pusha
je
movsb
pop
sbb
scas
add
jl
sti
arpl
shll
push
dec
test
xor
dec
fstl
xchg
sbb
or
mov
cmp
gs
nop
push
fwait
jnp
in
pop
cmp
mov
inc
xlat
inc
fdivs
insl
das
mov
xlat
xchg
cmp
insb
gs
test
dec
lret
adc
adc
daa
push
inc
addr16
xor
aad
xor
cmp
pushf
mov
sarl
xor
js
mov
mov
inc
mov
popa
dec
jge
dec
mov
push
clc
mov
mov
jle
std
mov
lock
or
daa
repz
fnsave
and
ja
imulb
loop
ret
and
xor
addb
js
sbb
sbb
mov
xlat
je
push
jecxz
iret
lret
ss
push
repz
aam
lods
out
imul
lea
and
shll
rcrl
out
add
nop
adc
outsb
cmp
lods
pop
fdivs
into
push
mov
mov
add
mov
loopne
push
or
inc
outsl
push
pop
mov
push
xchg
fnstsw
loopne
xchg
xor
shll
dec
hlt
push
outsl
imul
mov
ja
jl
outsb
subb
mov
aas
dec
scas
out
and
add
out
rcll
xchg
bound
insl
iret
sti
adc
testl
inc
into
sti
xchg
xor
pop
lea
mov
jp
xchg
and
cmp
jecxz
push
lahf
push
fwait
out
ret
jae
pop
inc
jecxz
subl
stos
fldt
idivl
or
std
fisttpl
dec
test
filds
push
jg
jecxz
or
shl
gs
and
fwait
subb
sahf
cld
ret
flds
mov
add
push
pushf
icebp
mov
push
daa
out
in
lock
popf
aas
xor
jecxz
imul
push
mov
insl
lcall
fst
jecxz
push
inc
sbb
push
xor
ljmp
add
adc
or
mov
or
mov
push
push
push
push
call
mov
mov
and
mov
mov
mov
and
xor
xor
xor
cmp
jne
cmp
jne
mov
mov
add
or
mov
or
xor
lea
xor
mov
and
add
mov
jmp
xchg
jne
and
js
cmpb
adc
adc
xchg
insl
addb
shlb
add
outsb
mov
stos
push
dec
xor
sbb
lods
fs
xlat
adc
je
je
mov
inc
add
push
xchg
jl
lret
data16
rorl
dec
mov
and
fimull
bound
popf
sbb
lds
add
adc
int3
or
sbb
in
push
cs
es
xlat
cli
fimull
add
jo
inc
sti
dec
fidivl
push
cli
pop
outsb
and
cs
sbb
stos
cltd
std
out
lcall
inc
cmp
nop
jnp
aad
adc
mov
mov
pop
into
int3
mov
mov
lods
pop
xor
xchg
in
fwait
adc
xchg
xchg
andb
mov
and
sub
fdivs
and
xchg
mov
rorl
jmp
fs
daa
pop
push
jne
or
cmp
cmpb
add
sub
mov
xchg
in
fimull
jge
xchg
xchg
mov
mov
xor
nop
cltd
js
push
dec
sub
sbb
and
cld
sbb
push
insl
or
xor
inc
sahf
lds
dec
adc
in
xor
stos
sub
dec
dec
xchg
stc
cmpsb
xchg
shll
mov
jns
add
cmpl
out
scas
and
dec
xor
popa
sbb
xchg
adc
adc
fildll
daa
pop
mov
xor
nop
movsb
cmc
adc
test
je
jno
and
cmp
in
push
gs
cmp
xor
mov
mov
and
cmp
in
xor
mov
mov
adc
aad
cmp
les
jecxz
insl
cmp
jnp
push
sbbb
mov
cs
lock
outsl
dec
push
std
ret
mov
mov
jno
push
js
mov
aam
push
pop
fistl
jnp
sahf
fs
lock
push
cmp
sbb
dec
in
and
data16
cmp
lret
or
dec
hlt
mov
adc
ss
cwtl
rcrl
stos
mov
int
stos
nop
mov
les
fwait
adc
loopne
push
mov
push
sub
in
repz
mov
loope
rclb
adc
lds
out
push
pop
rcrb
aad
in
mov
xchg
lcall
rorb
int3
popa
data16
nop
mov
xor
in
sub
inc
cmc
test
mov
add
stos
cld
mov
xchg
and
pop
lea
mov
xor
add
imul
mov
cli
addr16
add
push
les
jb
or
xor
div
mov
mov
xor
imul
mov
push
push
xor
mov
lea
jmp
or
jo
outsb
mov
insb
movsb
mov
loope
adc
adc
adc
es
dec
dec
adc
sbb
push
jle
dec
push
push
jno
jb
cmpb
inc
or
ficomps
iret
movsl
loope
mov
lret
add
or
mov
nop
mov
ret
and
daa
scas
ret
insl
or
filds
cmp
inc
mov
xchg
adc
fisttpl
jl
mov
in
dec
lock
cmp
into
jl
mov
jnp
push
mov
out
and
into
shl
mov
add
addb
cmp
hlt
insl
bound
fisubs
adc
sbb
xchg
and
xor
scas
xor
ja
sub
ss
pause
inc
inc
sub
mov
push
push
sub
out
in
cmpl
lahf
push
call
and
xor
bound
inc
aam
mov
pop
cmpsl
jb
xchg
retw
or
push
lret
pushf
aaa
test
mov
lret
dec
in
sbb
sbb
and
popf
push
cmp
jbe
rep
cmp
insb
in
dec
xor
push
imul
adc
lods
pop
jns
jp
mov
fwait
out
loope
imul
xchg
rorb
mov
in
fisttps
add
scas
test
add
and
stos
adc
sbb
stos
mov
pop
out
ret
and
push
in
ljmp
fcoml
loop
mov
xchg
in
mov
add
sub
lcall
loopne
lods
dec
je
mov
xchg
ss
adc
nop
sbb
sahf
mov
das
ss
rcrl
rolb
sub
dec
and
push
xchg
mov
mov
mov
rcr
rorb
outsl
testb
jno
xchg
inc
mov
dec
iret
fsubl
stos
out
out
leave
mov
xchg
fwait
out
xor
outsb
dec
cmp
pop
xchg
inc
dec
add
mov
mov
stos
jecxz
js
aas
jbe
ss
xchg
pop
sbb
dec
je
inc
cmp
sbb
inc
and
mov
adcl
push
jle
mov
das
push
stos
nop
mov
lahf
inc
lcall
je
xchg
xlat
stc
mov
push
xchg
pop
ficompl
adc
dec
push
incl
lahf
xchg
jmp
test
mov
jle
es
flds
mov
hlt
lods
in
mov
test
mov
aad
cs
dec
mov
pop
xchg
repnz
or
jmp
popa
xchg
or
push
imul
pop
sarl
std
shlb
jno
adc
mov
pop
jne
push
test
xchg
or
mov
pop
fidivrl
es
add
jae
fistpl
jae
lret
ds
xor
les
ret
mov
fmulp
dec
cs
cmp
test
pop
sub
cld
pop
negl
sbb
push
sub
fldt
push
mov
mov
lea
mov
mov
or
xor
div
mov
add
xor
add
mov
jmp
lds
mov
mov
cmpsl
xlat
adc
adc
adc
ss
movsb
cmpsb
and
sbb
mov
push
fldl
xchg
pop
adc
or
xchg
popf
insl
cli
lods
push
mov
jnp
xchg
shlb
sbbb
or
lock
pop
int
fnstenv
push
lods
in
mov
stc
cmp
addr16
mov
je
push
daa
sub
loopne
or
cmp
cltd
cltd
xor
pop
mov
sbb
xchg
out
jg
push
cmc
outsb
call
and
mov
push
iret
pop
jle
cmpsb
xchg
push
inc
fs
xchg
push
pop
fmuls
cmp
fcomi
jnp
loop
lods
and
out
or
inc
or
insl
inc
inc
fwait
and
mov
mov
xchg
std
in
andb
xchg
mov
cmpsl
ja
xchg
push
andl
xchg
mov
sub
mov
jb
xchg
sub
sbb
mov
or
inc
sbb
into
rorb
shrl
push
pushf
loopne
push
or
add
xlat
cmp
sub
pop
dec
nop
add
add
sarb
enter
add
xorb
lods
movsl
lcall
sbb
mov
mov
adc
scas
sbb
adc
fstp
inc
in
cmc
jnp
ds
dec
mov
movsb
pop
mov
sub
lahf
cld
mov
lods
pop
xor
popl
cmp
scas
xchg
sub
js
scas
sub
cli
sub
xchg
outsl
jecxz
pop
cmp
loope
jl
sub
sbb
mov
or
jecxz
ret
mov
imul
jmp
dec
mov
or
mov
in
mov
jle
sbb
add
adc
das
fsts
repnz
or
xor
mov
jbe
pop
adc
scas
addr16
pop
inc
scas
fistpl
pop
iret
scas
add
mov
test
incl
adc
mov
xchg
or
mov
inc
orb
xlat
xchg
push
ficomps
cmp
nop
add
in
lret
loop
js
mov
pusha
insb
mov
and
jo
movb
out
sub
mov
xlat
loope
add
push
cmp
xchg
mov
dec
sub
sbbb
sub
mov
sub
lea
into
and
sub
aas
pop
out
loopne
jecxz
imul
and
add
mov
mov
rcr
xchg
sub
and
test
jmp
push
sbb
addl
xchg
aad
xor
sbb
mov
cld
pop
dec
aaa
lcall
pop
dec
push
adc
faddl
cmpsb
add
jns
shll
je
cmpsb
sbb
lea
pop
sub
pushf
sub
xor
mov
xor
xchg
lods
into
jb
in
fmuls
cmp
inc
call
mov
int
scas
sbb
push
add
mov
mov
mov
mov
sub
mov
sbb
mov
xor
mov
xor
mov
add
adc
add
adc
push
push
call
mov
sub
push
pop
jmp
mov
sbb
adc
jg
push
aad
adc
adc
adc
lods
es
loopne
sub
insb
lahf
cmpl
cmpl
or
sbb
mov
xor
sahf
cmp
imul
sub
jp
cmpsl
cld
aam
frstor
jae
cmpsb
call
xchg
cmpb
outsl
add
cmc
push
or
popa
xchg
rcr
pop
mov
loop
mov
xlat
xchg
sub
or
dec
mov
cmpsl
ds
xor
movsb
int3
add
mov
imul
ret
mov
int
nop
mov
imul
stos
cltd
mov
jp
mov
push
rcr
push
out
add
cwtl
nop
sub
test
lahf
push
rol
mov
ret
fwait
push
cmp
decl
pop
xor
inc
add
mov
sub
xchg
and
outsl
std
pop
push
jns
xchg
in
bound
sti
sbb
fs
call
and
push
jg
xorl
in
sub
arpl
out
std
push
sbb
mov
insb
push
cmp
pop
in
sti
ja
pushf
mov
int
xor
pushf
lds
push
dec
test
scas
push
popa
and
jp
arpl
inc
imul
sub
inc
ficoms
ds
or
and
xchg
or
jmp
cmp
mov
test
pop
fimull
mov
aas
ret
hlt
push
sti
xor
jbe
stos
mov
fsub
adc
lahf
jne
lret
daa
test
stos
outsb
dec
and
in
mov
xchg
sbb
adc
add
addl
rcrl
bnd
pop
xchg
ds
lea
push
add
cmpb
dec
mov
mov
xchg
stos
mov
adc
fsub
pop
or
jnp
pop
push
sub
clc
mov
fstl
fists
push
cwtl
in
mov
shll
mov
cli
jae
std
gs
xor
shl
aas
sub
add
cmpsb
mov
xlat
les
mov
sbb
mov
cmp
es
pmaddwd
mov
adc
imul
dec
sbb
lcall
outsl
lahf
pusha
cmp
dec
and
in
ret
cmp
aad
in
add
arpl
test
sbb
dec
bound
popa
mov
rcr
out
inc
addb
jecxz
sbb
data16
or
ficoms
outsl
mov
out
js
inc
iret
fcom
fistpl
out
cmpsb
lahf
das
int
cmc
inc
data16
adc
xchg
pop
xor
sub
jl
mov
imul
leave
dec
fisttps
roll
mov
int3
insl
push
in
xlat
es
lea
mov
xchg
shlb
ret
nop
adc
cmp
ret
mov
idivb
rorl
test
lock
mov
mov
add
shr
or
mov
xor
xor
add
mov
pop
leave
ret
push
mov
sub
push
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
adc
mov
push
push
or
or
push
push
call
mov
mov
and
or
mov
mov
and
or
xor
xor
shld
shl
shr
xor
or
or
xor
mov
mov
xor
mov
mov
mov
mov
mov
push
push
push
push
call
add
push
adc
push
push
push
call
jmp
xchg
and
sbb
outsb
dec
adc
repz
add
adc
xchg
movlps
stos
pop
enter
mov
push
cmp
jb
sbb
cmp
fisubs
dec
arpl
mov
jbe
outsb
cmpsb
movsl
xlat
std
pop
cmp
rorl
mov
add
test
xorb
add
lahf
sbb
rcrl
mov
or
cmp
std
fsts
lahf
leave
sbb
shlb
sbb
xor
mov
fs
lahf
jecxz
adc
xor
mov
mov
cld
or
mov
fdivrl
push
out
push
xor
test
pop
inc
outsb
je
xlat
daa
xchg
fidivl
mov
cmpsl
fnstenv
adc
or
sub
repz
es
pop
pop
movsl
and
sbb
and
hlt
mov
push
int3
mov
stos
push
mov
xchg
jl
test
xchg
mov
enter
cli
iret
fs
inc
ret
push
xchg
jae
mov
daa
push
loope
shl
aad
js
mov
adc
cmc
jmp
jae
movsl
fildl
lcall
dec
shl
adc
xchg
rorl
mov
jle
mov
pop
xor
cmp
push
inc
and
mov
hlt
rorl
shrl
aad
push
mov
mov
ret
lods
insb
out
lahf
jo
imul
scas
dec
xchg
xor
into
jo
adc
cmp
xchg
verw
stos
icebp
into
mov
push
adc
inc
add
scas
outsl
dec
jbe
std
xchg
dec
lret
fsubr
roll
jge
mov
les
add
push
inc
aam
mov
or
mov
or
mov
sbb
lret
sar
xchg
aas
xor
je
fstpl
push
cmp
push
mov
inc
orl
ss
clc
bound
mov
pushf
into
mov
dec
xchg
rcrl
jb
cmpsl
clc
aaa
pushf
mov
popf
stos
mov
in
sub
inc
subl
fsubr
sbb
rcrl
sub
cmp
cld
in
and
jbe
mov
jbe
shrl
outsb
daa
mov
mov
mov
mov
xor
xor
add
mov
adc
mov
mov
mov
mov
mov
jmp
ds
fistl
nop
js
leave
adc
xchg
movlps
sbb
cmc
add
out
pop
xor
jne
push
mov
mov
cmpsb
xchg
outsl
and
movsb
push
cmp
and
fcom
ret
stos
adc
es
mov
mov
adc
sbb
imul
jae
mov
stos
xchg
add
cmpsl
popf
pop
lods
dec
mov
es
mov
mov
jns
push
jne
sar
jle
sub
mov
stc
cmp
pop
push
mov
lret
add
outsb
arpl
xor
and
jl
xchg
leave
inc
data16
push
fdivrl
cs
mov
loope
arpl
adc
in
dec
sbb
jmp
mov
shr
add
mov
push
mov
xchg
test
mulb
aam
stc
dec
shll
dec
cmp
test
mov
mov
pop
push
shrb
mov
dec
mov
mov
lods
out
addr16
in
cmp
and
dec
sahf
or
and
sub
fisubrl
jbe
loopne
add
inc
je
or
mov
popa
jno
mov
imul
fsub
sub
xor
fimull
scas
out
lcall
call
lcall
push
mov
es
inc
add
pop
scas
std
cltd
movl
lock
xchg
mov
fadd
sbb
pusha
out
mov
xor
push
adc
adc
sbb
lcall
aam
mov
shlb
dec
xor
popa
sbbl
sti
mov
push
pop
pop
xor
mov
loop
outsl
mov
mov
adc
sbb
test
and
loopne
loope
es
add
pop
pop
sbb
dec
xchg
sti
iret
aam
and
push
mov
jmp
add
mov
lods
insb
mov
push
leave
sub
adc
pop
xchg
enter
xchg
aam
xor
jmp
in
push
sub
mov
mov
sbb
jmp
sbbl
cmp
aam
pop
lods
inc
mov
adc
xchg
movlps
test
pusha
loop
pop
adcl
sbb
or
pop
inc
xor
cs
mov
mov
adc
test
inc
popf
dec
pop
loope
mulb
test
das
mov
push
xchg
rep
jle
sbb
mov
sub
mov
stos
aaa
loope
push
cmc
sbb
jno
mov
and
push
pop
insb
mov
icebp
sub
jo
mov
insl
jb
inc
push
mov
filds
mov
roll
inc
xlat
pop
in
mov
mov
sahf
push
cltd
popa
and
mov
mov
outsl
jle
pop
cmpsl
mov
add
sbb
adc
pop
imul
cmp
xchg
in
ja
out
push
mov
mov
inc
or
push
mov
out
adc
jne
pop
pop
fimull
stos
into
inc
es
add
sub
cmpl
push
sahf
pushf
lods
sub
stos
out
nop
inc
jp
add
adc
fs
pop
cmpl
and
adc
dec
mov
aad
jmp
cmp
ss
movb
inc
popa
adc
jmp
xchg
and
cmpsl
sub
int
leave
movsb
jbe
inc
push
clc
inc
aaa
xor
iret
add
adc
repz
inc
pop
and
pop
mov
xchg
jle
or
xchg
mov
dec
out
mov
mov
mov
inc
lcall
jle
loop
ljmp
inc
outsb
lods
gs
rclb
fstl
xchg
dec
jb
lahf
or
sahf
movsl
jg
ret
movsb
mov
rorb
sbb
insb
pop
iret
or
cmc
mov
jae
shr
scas
pop
xorb
mov
pop
xor
mov
int3
or
pop
mov
fs
sub
sbb
lock
ret
xchg
test
popf
dec
push
lea
mov
ds
sub
out
jg
add
int
sbb
movsl
dec
fld
shlb
jmp
xor
dec
fsubrl
rorb
add
mov
adc
push
xor
mov
pop
sub
mov
sub
jmp
rclb
mov
insb
mov
outsb
insb
add
adc
aad
inc
dec
clc
sub
inc
outsl
ret
call
push
pop
pop
stos
inc
or
jle
cld
dec
jb
repz
icebp
gs
repz
and
inc
hlt
insb
pusha
xchg
inc
push
cltd
jne
ss
pop
repz
cmp
xor
shl
insb
outsb
adc
mov
out
mov
insb
mov
jo
sti
sarl
testl
nop
jg
fmul
outsb
roll
mov
inc
pop
jb
test
jle
pop
push
sbb
mov
xor
imul
mov
push
daa
test
add
push
adc
xchg
nop
inc
lahf
pop
cmpsb
lock
gs
sbb
sbb
pusha
xchg
mov
ror
xchg
pop
xor
mov
movsb
sbb
es
dec
andb
cmp
dec
push
negb
incb
adcl
lea
fisttps
aas
jbe
fmul
cmp
jne
cli
insb
dec
push
xor
loop
jb
pop
inc
push
pop
mov
std
or
dec
add
lods
dec
xor
mov
push
int3
pusha
xlat
rclb
mov
add
mov
insl
js
insb
loope
stos
adc
push
negl
add
out
xor
dec
orb
sub
push
mov
inc
stos
mov
adc
ret
xchg
sbb
fidivrs
std
aam
mov
push
and
cmc
adc
xchg
clc
xchg
dec
int
std
int
adcl
bound
ficompl
push
shlb
pop
push
ds
lret
sub
jns
add
inc
mov
push
push
push
and
mov
gs
cmp
xor
add
outsb
lcall
pop
mov
adc
sbb
pusha
add
jge
out
pop
push
lds
xor
dec
push
xchg
jmp
out
stos
mov
lcall
sub
xor
ljmp
int3
mov
push
pop
out
loopne
mov
mov
mov
mov
mov
add
xor
jmp
fnsave
cmp
add
add
adc
inc
out
mov
out
fs
pop
dec
test
enter
les
rorb
cmovns
js
mov
pusha
sub
insb
dec
insb
out
sub
test
sbb
jl
xor
aas
push
push
fists
adc
mov
pop
cmp
or
pushl
push
gs
sbb
lret
push
or
and
test
icebp
adc
loopne
lcall
lods
repz
idivl
or
test
add
inc
repz
mov
fnsetpm(287
push
push
insl
jge
push
nop
sub
push
jge
insl
pop
cmpsl
in
mov
clc
add
pushf
outsb
mov
jg
pop
inc
xor
adcl
pop
push
cwtl
pop
jg
lods
out
mov
jo
ja
add
shlb
inc
push
inc
ror
xlat
push
dec
fcomip
mov
daa
mull
xor
push
mov
rol
mov
imul
sub
mov
in
cmp
int
sub
in
push
jg
xor
ds
sub
out
and
nop
jae
push
cmc
sub
adc
lods
filds
sahf
sub
mov
sahf
mov
pop
into
jecxz
jecxz
or
sbb
inc
jo
repz
sbb
mov
subb
fisubrl
mov
cmp
cwtl
loopne
out
sbb
cmc
pop
outsl
and
sub
inc
movsb
xchg
pop
sbb
iret
popa
mov
fmul
sub
push
int
sbb
adc
fstpt
inc
dec
pushf
adc
or
and
adc
sahf
pop
fcmovbe
imul
sbb
gs
pop
mov
lcall
or
mov
pop
xor
pop
push
sub
sbb
stos
inc
pop
push
mov
push
mov
cmpsb
rcrb
call
jmp
mov
mov
lahf
cmp
pop
sbb
fwait
and
test
inc
pop
test
sbb
push
lret
fstl
mov
mov
cmpsb
push
stc
popa
jns
lods
ret
leave
shr
or
shl
or
mov
push
mov
mov
mov
push
push
push
call
mov
mov
mov
or
mov
or
mov
add
jmp
inc
lds
gs
inc
and
imul
adc
js
mov
adc
hlt
fistps
ljmp
sub
sub
cmp
sub
test
xlat
daa
in
lret
ja
sbb
mov
es
and
jmp
jae
fwait
cmpsl
dec
stos
adc
pop
or
pop
and
pop
out
xorl
mov
movsl
jmp
shld
ss
or
jl
test
test
adc
nop
mov
xor
repnz
inc
sbb
clc
push
jae
out
cmp
stc
dec
rcrl
outsb
mul
int3
mov
movsb
or
nop
dec
add
jl
in
push
movb
mov
decb
or
test
jp
inc
out
dec
cmp
jb
pop
mov
sar
pop
and
movsl
adc
bound
push
negb
adc
mov
inc
pop
jnp
shl
adc
add
daa
inc
mov
loop
pop
lahf
cmpsl
stos
sub
lods
inc
aas
daa
loop
add
test
inc
int
xor
loopne
je
shl
inc
les
in
aad
or
bound
lods
mov
cmp
xchg
inc
mov
push
mov
scas
lcall
sub
mov
cld
or
xor
and
adc
pop
xor
xchg
pop
xor
inc
aaa
rclb
arpl
xchg
orl
inc
cmp
jo
mov
dec
add
out
xor
jne
cmpsl
addl
xchg
lret
push
xchg
mov
mov
and
sti
mov
je
enter
jmp
int
mov
lcall
in
movsl
mov
call
filds
mov
stos
mov
into
push
call
sbb
lock
arpl
not
adc
iret
or
je
xchg
ja
loopne
mov
xor
pop
xchg
test
aaa
lahf
jnp
push
xlat
pop
push
roll
adc
or
adc
jns
and
mov
and
in
add
mov
adc
mov
add
mov
adc
add
adc
pop
mov
mov
pop
leave
ret
push
mov
sub
movl
movl
movl
movl
jmp
hlt
aaa
add
pop
dec
pop
sbb
inc
stos
add
adc
add
adc
rcrb
sti
cmp
es
fwait
gs
mov
mov
repz
or
test
clc
add
je
insb
mov
shll
aam
mov
and
jecxz
sub
lds
mov
insl
pop
lea
mov
mov
rcrl
pop
xchg
mov
jbe
into
inc
ljmp
xor
pop
xor
insb
sbb
cmc
mov
es
xchg
xchg
sub
imul
add
popa
loope
fsub
adc
fdivs
mov
pusha
insl
mov
mov
push
mov
add
pop
roll
in
in
mov
xchg
inc
xlat
mov
jns
adc
pop
jmp
cs
leave
out
das
sub
sbb
jo
and
cmp
enter
adc
adc
jo
sbb
sub
and
dec
xor
add
es
or
mov
fsubs
mov
push
popa
int
jecxz
push
loopne
adc
pop
inc
fdivrl
dec
mov
insl
push
pop
mov
xchg
xchg
nop
movsb
fmul
addr16
int3
stos
fstl
scas
movsl
inc
inc
xor
and
mov
movb
addr16
fisttps
add
fildl
push
sub
xchg
rcll
sbb
mov
js
xor
mov
adc
add
lds
xchg
pusha
jmp
sbb
xlat
shrb
push
push
fidivrs
in
outsl
sbb
sbbl
in
test
js
inc
xchg
lods
mov
adc
es
pop
sti
loopne
push
cmpsl
or
in
and
data16
jb
loope
add
loopne
pushf
ret
lahf
xor
mov
call
mov
sbb
divb
mov
lods
mov
mov
data16
sbbb
ljmp
sbb
stos
das
push
push
xlat
daa
mov
pop
xchg
fistl
mov
push
jns
adc
cmp
in
jns
add
pop
addb
pop
ljmp
inc
bound
mov
jg
and
push
adc
pop
sbb
jecxz
and
test
fwait
ret
loop
or
xchg
xchg
out
into
and
sarb
roll
sbb
popf
test
xorb
cmpsb
or
push
fmull
mov
lock
and
fst
iret
and
pop
pop
ret
push
cmpl
mov
mov
mov
dec
dec
jo
lret
imul
lods
lods
xorb
icebp
sbb
ret
adc
outsl
pushf
cmp
mov
dec
daa
jo
mov
xchg
test
xor
movsb
pop
std
packsswb
fs
subl
mov
imul
xchg
aas
mov
imul
cld
sbb
into
insl
xchg
push
insb
popa
push
outsb
mov
mov
cmp
enter
xlat
daa
cmp
inc
cld
cmpsb
inc
clc
mov
or
clc
mov
scas
and
mov
out
mov
outsl
xor
mov
push
dec
mov
ja
sub
andl
mov
andb
sub
cmp
jmp
lock
add
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
and
add
mov
and
mov
sub
and
mov
mov
imul
add
add
xor
jmp
xor
cmpsb
pop
cmpsb
pop
sub
jg
push
push
out
push
push
cmpsl
adc
add
adc
loop
sbb
sbb
shr
pushf
loopne
jle
mov
popf
or
orb
enter
cmc
sbb
out
and
insb
es
mov
lea
mov
mov
mov
cmpsb
mov
ficoms
and
pop
fmulp
jecxz
pop
icebp
mov
mov
pusha
hlt
shl
loop
mov
dec
add
stos
out
leave
dec
outsl
ss
stc
enter
arpl
and
sbb
shll
lret
xor
push
popf
push
add
mov
jp
push
bound
out
ret
daa
into
and
mov
shlb
lahf
adc
push
jae
aad
loopne
push
sarl
addb
adcb
insl
or
mov
mov
xchg
xor
lds
and
push
ljmp
push
inc
repnz
add
push
nop
dec
stc
enter
inc
lcall
pop
imul
cmp
xchg
daa
insb
cmp
test
bound
lret
mov
jmp
jmp
pop
mov
es
xchg
push
xchg
sbb
sahf
xchg
call
add
push
nop
divl
xchg
out
sbb
push
pop
fcmovne
mov
cmp
mov
dec
xor
sub
push
js
pop
mov
ja
movsl
scas
stos
mov
add
push
push
das
js
into
stos
mov
loope
xlat
and
shrb
mov
adc
aas
nop
adc
addr16
add
jmp
out
mov
std
lret
xchg
repnz
push
ja
xchg
mov
sbb
repz
push
push
aas
imul
and
out
adcb
push
dec
pop
pop
pop
out
inc
stc
enter
je
dec
subb
dec
jne
jb
psrlw
test
iret
push
cmp
jle
xchg
repz
mov
addb
push
cmp
js
mov
dec
adc
lods
stc
cmp
enter
lea
cmp
dec
mov
mov
xchg
jbe
outsl
insl
rcrb
xchg
jmp
mov
jnp
pop
divb
jne
sub
pop
clc
jl
mov
sbb
inc
jns
je
rcrl
mov
inc
add
or
sbb
adc
mov
or
aad
movsl
cmp
sub
lock
sub
xchg
dec
mov
inc
aad
js
adcl
mov
insb
repnz
push
cmpsl
sahf
in
sub
mov
inc
test
lcall
pop
sarl
sbb
pop
or
xchg
icebp
leave
cmp
xor
or
je
jno
shll
lock
xor
pop
jbe
icebp
xor
icebp
pusha
adc
call
add
popf
cmpsb
leave
xor
cmp
inc
cs
and
outsb
lds
leave
lret
stos
movsl
xchg
inc
outsl
fs
cmpsb
sub
lock
pop
pop
pop
mov
hlt
ss
mov
sbb
dec
and
loop
add
sub
je
test
add
xchg
push
repnz
xor
add
jne
mov
mov
mov
sub
add
mov
or
mov
imul
sub
add
mov
or
mov
mov
add
imul
add
mov
add
mov
mov
mov
and
mov
and
mov
imul
mov
or
mov
imul
mov
sub
cmp
je
jmp
loop
repnz
es
jle
js
movsl
adc
add
adc
jp
xor
or
mov
mov
mov
mov
xchg
xor
cmp
jbe
sub
jecxz
in
jecxz
mov
sub
push
lods
outsb
out
sub
xorb
push
cmpsb
test
pop
mov
push
mov
sbb
push
sub
or
mov
cmc
cmpsb
sub
jbe
in
int
jno
call
iret
xchg
mov
ja
aam
cmpsl
xchg
xchg
dec
jne
sbb
inc
adc
mov
and
push
mov
ja
dec
fs
ljmp
jnp
and
mov
add
dec
jmp
ret
add
adc
lods
and
push
stos
dec
lret
mov
movl
jbe
mov
cltd
xchg
adc
testb
cwtl
cmc
pushf
shlb
stos
rcr
ljmp
fimull
dec
into
push
in
jg
sub
mov
cmp
cwtl
or
inc
ficoml
cmpsl
mov
out
shlb
call
data16
xchg
adc
cmpsl
insl
js
jnp
je
icebp
jge
jecxz
mov
push
mov
je
test
jbe
pop
sbb
pop
xchg
outsb
adc
push
cld
bound
mov
mov
popf
pop
cwtl
add
pop
mov
xor
push
sahf
and
sub
test
roll
dec
jnp
and
arpl
ret
xlat
test
into
cmp
arpl
mov
cmp
push
in
clc
inc
cmp
in
loop
add
adc
dec
xor
and
fdivrp
or
inc
popf
ret
sub
ja
mov
adc
popf
pop
mov
shll
jo
mov
stc
xchg
jecxz
sub
push
inc
xor
jb
sarl
dec
sti
stos
test
mov
das
dec
shlb
movsb
cmpsl
lret
insl
hlt
adcb
mov
push
xor
xchg
or
fcmovb
je
mov
cmc
mov
inc
and
push
ljmp
fists
mov
imul
cmp
pop
add
pop
and
cmp
dec
test
pop
and
js
stc
jno
scas
lods
popa
repnz
out
jl
decl
in
fdivrs
sub
or
mov
jne
shlb
stos
jge
dec
pushf
pop
ljmp
mov
dec
orl
aam
or
je
mov
lds
pop
icebp
xor
push
and
scas
pop
loop
sbb
adc
ds
pop
or
adc
pusha
inc
dec
sahf
xor
mov
jo
or
push
add
xchg
push
cmp
mov
outsb
stos
repnz
adcl
mov
lock
sub
jbe
jns
cmp
adc
cmp
jbe
and
push
fsubrs
ljmp
das
dec
jo
scas
cltd
or
fiaddl
daa
out
jne
mov
xchg
cmpsl
xchg
std
pop
pop
push
gs
test
aad
and
andl
sub
sbb
push
movsl
xlat
push
in
mov
rcll
fiadds
cmc
push
lods
dec
mov
inc
or
inc
add
add
push
add
xor
add
jmp
movl
movl
mov
mov
imul
add
and
add
or
sub
leave
ret
push
mov
and
sub
jmp
popf
jnp
cwtl
sub
loopne
sbb
dec
mov
jne
adc
cmp
push
call
push
sub
mov
xlat
enter
sbb
rcrl
scas
cmp
pop
lret
outsb
or
out
popf
sbb
push
xchg
lods
adc
xchg
mov
and
lahf
notl
jae
adc
cmpsl
sbb
pop
in
jb
std
sti
in
jp
cwtl
xor
push
leave
cmp
stc
lret
out
stc
stc
or
push
push
pop
sbb
aam
in
lahf
lret
out
shll
insb
aaa
je
test
mov
jg
mov
mov
stc
adc
pop
mov
fimuls
mov
push
fisubs
adc
pop
add
das
push
ds
frstor
js
fisubrl
jno
pop
push
jns
dec
mov
xchg
orb
not
inc
push
mov
stos
push
push
lods
fsubrs
popf
pop
lret
cmp
xor
lret
out
int3
loope
xor
popa
imul
movsb
xor
jne
add
imul
xor
ss
bound
xor
or
test
or
adc
jmp
jle
xor
scas
mov
add
mov
mov
psrlw
mov
test
rolb
jo
data16
mov
jbe
das
pop
sahf
jae
repnz
loop
movsb
xchg
inc
gs
xor
mov
scas
jbe
loope
sahf
cmpsb
adc
cs
pop
aam
arpl
dec
pop
out
iret
or
into
fprem
cmpsb
filds
cwtl
ss
loope
mov
or
cmpsb
cld
jle
testl
or
sub
lea
ss
xlat
mov
fwait
movsb
fdivrl
jnp
ja
pushf
outsb
cmp
xlat
lock
stc
pop
popf
std
fstl
fcomip
pop
insb
pop
ss
xchg
adc
jnp
jo
negl
dec
shll
mov
jb
and
inc
lret
out
add
fisttpl
cmp
adc
sbb
mov
dec
xchg
decb
arpl
xor
nop
cmc
mulb
mov
cmp
in
xor
out
cmp
push
repnz
cmovno
repnz
xchg
fs
in
into
outsl
inc
lea
mov
jne
enter
pushf
bound
movsb
outsl
fwait
xorb
arpl
push
sbb
dec
inc
jle
mov
cltd
xchg
push
adc
aad
mov
mov
daa
popf
outsb
in
lahf
jne
rorl
loopne
mov
repnz
mov
pop
sbb
pop
sti
mov
sti
ret
lea
fisubrs
mov
add
mov
jp
or
and
cmpsb
xchg
sti
lock
adcl
push
bound
cmp
mov
sub
mov
sub
les
paddusb
imul
sub
out
cmp
jo
jo
loopne
xor
dec
lahf
jns
pop
pushw
or
dec
stos
adc
aam
dec
loop
mov
rolb
mov
mov
sub
data16
xchg
jae
icebp
aad
sub
sbb
int
and
call
or
les
ret
jp
inc
push
cli
jecxz
pop
jle
xlat
mov
mov
das
dec
jo
lods
xor
cmp
jge
int3
adc
loopne
test
sbb
push
xchg
cmp
push
sbb
xlat
por
fwait
push
push
lea
mov
mov
mov
mov
sub
sbb
mov
orl
orl
lea
push
jmp
dec
mov
loope
and
les
cwtl
lods
std
aad
mov
jne
adc
mov
je
mov
lret
inc
or
xchg
sbb
and
fists
fisttps
or
mul
test
jbe
sbb
out
jns
out
and
jae
jecxz
popa
add
ss
addr16
xlat
sbb
insl
mulb
adc
or
pop
je
test
fidivrl
test
jl
and
xchg
mov
mov
outsl
sub
jb
sub
cmpsb
dec
shrl
mov
jns
pusha
mov
in
push
push
sbb
pop
popa
add
mov
dec
out
call
and
cmp
lods
es
push
stos
or
lcall
push
mov
loop
scas
lret
pop
sbb
mov
pop
cmp
fiadds
mov
or
add
jns
in
mov
test
xchg
adc
jge
inc
inc
sbb
adc
dec
mov
push
mov
and
sbb
testb
adc
push
inc
pusha
sub
and
xchg
lds
gs
adc
mov
push
loop
std
cld
call
mov
rcl
cld
adc
testl
sub
bound
jge
jno
inc
call
in
movsb
sbb
sbb
or
dec
shlb
push
add
pop
mov
mov
xor
mov
dec
pop
test
das
mov
incb
neg
mov
outsl
pop
mov
xor
mov
push
lcall
repnz
mov
inc
adc
pop
jne
aam
pusha
stc
mov
stos
jecxz
push
int3
push
pop
push
cmp
xchg
xor
dec
lcall
popf
mov
mov
cli
movsb
out
cmc
jb
repnz
lods
push
sbb
or
jmp
pushf
adc
cmc
mov
xchg
lods
mov
loop
in
jbe
mov
inc
xor
mov
pushf
adc
fbstp
lods
fwait
mov
mov
sub
xchg
mov
mov
out
repz
pop
stos
add
iret
add
fsubrp
stos
out
inc
sbb
loopne
jp
push
mov
out
jecxz
pop
mov
and
xchg
mov
in
mov
and
pop
lahf
lock
rorb
xor
jno
fisubrl
rol
mov
pop
mov
mov
fs
or
jg
push
cmp
xor
mov
cmp
fcoms
mul
cld
push
cli
jno
dec
dec
pop
ds
out
inc
arpl
mull
inc
cmp
mov
fists
iret
xlat
or
xchg
cmpb
mov
mov
inc
scas
inc
imul
xchg
push
cmp
or
popa
mov
inc
adc
add
insl
bound
hlt
icebp
in
out
jp
sbb
ds
loopne
movsl
cs
hlt
aam
cld
cmp
xchg
mov
xchg
add
lock
out
push
dec
insb
pop
lds
sub
inc
xor
pop
fbstp
xchg
std
dec
stc
xchg
xchg
mov
pop
sbb
push
sbb
and
xor
ret
add
nop
into
mov
add
xchg
data16
clc
fcoml
adc
jno
dec
fs
pop
pop
outsl
sub
imul
pop
pop
loopne
xor
out
sbb
rcrl
jmp
imul
lea
push
call
mov
mov
pushl
mov
pushl
mov
pushl
pushl
pushl
pushl
pushl
call
pop
pop
mov
pop
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
add
xor
mov
and
imul
xor
push
movl
movl
movl
mov
mov
xor
sub
div
mov
mov
or
xor
mov
sub
mov
mov
mov
mov
mov
mov
mov
mov
imul
and
or
xor
add
mov
mov
sub
add
mov
xor
mov
and
mov
xor
sub
jmp
popf
mov
and
sbb
js
clc
cmp
orl
adc
lret
mov
push
insb
mov
push
fisttpl
push
pop
xor
movsb
push
std
and
addr16
sub
mov
jno
pop
popf
mov
das
std
test
lret
loop
pop
jp
aam
push
pop
subb
lahf
or
call
mov
fcomps
xchg
cmp
arpl
lds
pop
mov
dec
filds
push
cmpsb
fbstp
inc
sub
add
mov
mov
sub
fwait
jno
add
mov
in
repz
pop
aaa
sub
dec
and
jge
test
mov
bound
xchg
jecxz
je
add
mov
into
adc
jl
push
adc
push
push
mov
sub
bound
sub
pop
imul
or
test
jnp
pusha
dec
ljmp
test
push
and
mov
adc
call
subb
mov
cltd
bswap
inc
lock
in
cmp
fists
movsb
mov
daa
xlat
loope
loopne
mov
mov
pop
sahf
jne
cmp
adc
dec
cwtl
jmp
repnz
mov
leave
movsl
pop
enter
test
pop
jbe
push
test
arpl
notb
repz
paddq
inc
pushw
shl
push
out
inc
dec
out
fwait
js
xchg
out
inc
mov
arpl
xor
imul
test
mov
fwait
pop
or
pop
aas
dec
psubusw
jmp
insl
sub
pop
pusha
inc
movsl
inc
mov
stos
jb
mov
mov
push
bound
lock
lret
idivl
cmp
in
ret
daa
pushf
orb
jmp
pop
and
sbb
arpl
push
shll
daa
neg
out
adc
inc
adc
loope
sti
xchg
scas
mov
movsl
scas
sahf
and
out
les
cmpsl
xlat
inc
pop
jecxz
fdivrl
cmc
dec
adc
mov
and
lea
mov
shr
or
mov
sub
add
cmp
jbe
pop
leave
ret
push
mov
sub
add
push
cmpl
notl
movl
movl
mov
jmp
movl
movl
jle
pushl
push
push
call
xor
or
sbb
add
cmpl
movl
mov
jmp
mov
je
push
pushl
pushl
call
or
sbbl
sub
xor
or
mov
sub
xor
xor
add
and
push
notl
push
mov
mov
shrd
cmpl
movl
movzbl
mov
jmp
mov
jbe
pushl
pushl
push
call
add
dec
xorl
add
sbb
and
shr
cmpl
mov
movl
movl
jmp
mov
ja
push
call
mov
xor
sub
add
xor
sub
xor
add
adc
mov
cmpl
mov
mov
mov
jmp
notl
jbe
push
push
push
call
add
xor
addl
add
mov
mov
add
sbb
mov
cmpl
movl
mov
movl
jmp
movzwl
jb
pushl
call
adc
mov
xor
add
sub
or
mov
mov
or
and
adc
movl
xor
adc
mov
xor
cmpl
movl
mov
movl
jmp
movl
movl
jae
push
pushl
push
call
xor
xor
or
mov
sub
movl
movzwl
sub
mov
or
adc
not
mov
add
xor
or
mov
mov
cmpl
movl
mov
movl
movzwl
jmp
mov
jle
pushl
push
push
push
push
push
call
mov
add
add
inc
add
mov
and
mov
or
and
sbb
shl
mov
shrd
xor
sbb
shr
cmpl
movl
mov
mov
movzwl
jmp
movl
movl
ja
push
push
pushl
push
pushl
call
or
xor
or
adc
adc
movzwl
xor
sub
adcl
and
mov
mov
cmpl
movl
mov
movl
movl
jmp
mov
movl
ja
push
pushl
push
pushl
push
call
xor
add
adc
subl
movzwl
sbb
mov
xor
andl
movzbl
adc
xor
sbb
or
orl
mov
neg
mov
negl
mov
cmpl
movl
mov
mov
jmp
movl
not
jge
pushl
pushl
pushl
call
sbb
sub
notl
sub
sbb
add
mov
adc
mov
mov
cmpl
mov
movl
movl
jmp
mov
mov
jle
push
call
sbbl
xor
or
or
mov
movzbl
sbb
mov
cmpl
mov
not
jmp
mov
jne
push
pushl
push
pushl
pushl
pushl
push
call
andl
and
or
movzwl
add
or
mov
adc
mov
orl
shl
xor
movzwl
add
xor
sub
mov
cmpl
not
mov
mov
movzwl
jmp
mov
mov
ja
push
push
pushl
pushl
push
call
xor
xorl
sub
or
mov
and
mov
xor
shld
shl
mov
movl
movl
movl
movl
movl
cmp
movl
jne
movl
cmp
je
adc
mov
movzbl
adc
mov
sbb
xor
xor
xor
mov
mov
andl
shld
shl
jmp
ffree
addl
cmp
push
inc
jmp
dec
xchg
adc
movlps
lret
jmp
scas
fwait
inc
mov
jle
xor
lods
int
jbe
adc
and
xchg
pop
clc
jp
jno
repz
push
clc
cmc
movsb
xor
adc
push
outsl
lds
dec
or
xor
scas
and
sbb
test
popf
ljmp
jmp
mov
add
sbb
lahf
cmp
push
out
xor
xchg
aaa
stos
imul
mov
bound
sub
nop
xchg
scas
push
push
mov
mov
test
fucomp
lds
mov
addr16
mov
pop
out
in
jp
shrl
outsb
jb
adc
sbb
jg
add
cmp
lret
stos
decb
dec
cmc
jge
ss
rcl
rcll
out
cmp
lea
adc
adc
cmp
cmp
jl
cmpsb
mov
mov
insl
xlat
nop
jo
fisttpl
cmp
xor
notb
inc
dec
pop
call
sub
xchg
leave
ficoms
push
mov
xor
lods
stos
in
mov
xchg
jno
test
lods
push
mov
mov
add
jns
sahf
fildl
sbb
stos
das
or
and
jbe
mov
push
fs
repz
int
data16
cwtl
lods
inc
popf
popa
sub
repz
lea
add
pop
or
and
mov
lret
pop
nop
bound
stos
outsl
pop
icebp
arpl
adc
fs
pop
outsb
out
sti
dec
mov
sub
adc
das
jl
test
sbb
sub
push
sbb
cld
mov
xchg
mov
jne
inc
or
jo
movsl
cltd
fildll
jnp
repnz
pop
test
and
outsb
pusha
dec
test
dec
jns
adc
mov
aaa
in
fwait
inc
outsl
into
test
cmc
in
jne
in
or
into
xchg
mov
xor
cmp
lret
int3
push
add
lahf
fimull
jns
movsl
js
jne
mov
loopne
pop
sahf
xorb
mov
xchg
dec
push
hlt
ds
mov
lock
mov
jo
bound
call
outsl
ds
into
jno
mov
cltd
fisubrl
push
lds
or
adc
jns
pop
mov
cmp
movl
jne
cmp
je
mov
mov
push
pop
xor
shl
mov
xor
shr
or
mov
mov
mov
mov
mov
mov
push
pop
sub
mov
add
mov
lea
mov
mov
mov
xor
jmp
gs
test
dec
jmp
push
pop
add
decb
adc
call
mov
mov
loopne
inc
and
xchg
shlb
rcrb
pop
ss
fistpl
mov
test
pop
pop
adc
add
add
shl
insb
out
xchg
pop
lods
js
lea
pop
pusha
inc
lock
or
out
leave
psubusb
jmp
leave
and
xor
aad
sahf
into
sbb
sbb
add
mov
xor
sbb
push
jmp
test
pop
clc
jp
nop
test
test
push
cmp
int3
push
rclb
pmaxsw
mov
lds
xchg
xor
inc
loop
rorb
mov
int
lods
add
inc
cmp
mov
ljmp
jmp
and
mov
inc
sbb
mov
popa
inc
xchg
scas
pop
enter
mov
push
addr16
adc
or
xor
sub
ljmp
jl
sub
dec
fnstcw
sub
jecxz
xor
mov
out
ret
jne
xchg
xorl
in
insl
pop
loop
cltd
jle
lcall
cs
xchg
lods
imul
mov
out
out
sub
das
aad
xor
dec
repz
and
test
ds
xchg
pop
insl
jbe
mov
ret
ljmp
add
imul
and
mov
int3
jp
rorl
cmpl
inc
mov
cmpb
faddl
jns
arpl
lods
sbb
das
out
insl
lea
cmp
push
fscale
mov
or
lcall
cmp
sbb
es
pop
dec
les
mov
dec
int3
add
test
scas
mov
shll
imul
or
cmp
fisubs
test
inc
test
cmc
push
out
ret
idivb
adc
cltd
jno
inc
pop
fs
into
or
jp
push
test
aad
cltd
leave
push
push
jns
jmp
fisubrs
pop
sbb
inc
adc
test
icebp
call
aam
sub
and
movb
cmp
fistps
cltd
dec
loop
fidivrl
ret
icebp
je
add
jno
push
je
loope
ss
and
popa
xor
shr
shl
or
mov
movl
mov
mov
xor
xor
shr
shl
or
push
lea
push
jmp
xchg
enter
pop
cs
in
adc
movlps
dec
fucomi
sbb
loop
aam
nop
cli
xor
xor
mov
xchg
sub
mov
push
mov
adc
jne
out
and
movsb
in
loope
cmc
xor
mov
mov
jo
pop
adc
cmpsb
sub
cmp
pushl
pusha
ss
fs
enter
sti
es
jp
cmpsl
xor
mov
sbb
in
jg
jmp
inc
jo
mov
in
jo
and
mov
dec
mov
daa
cltd
movsl
or
mov
pop
xor
lods
sarb
pop
gs
xor
fistpl
arpl
cmpb
pop
xchg
mov
xor
aad
inc
mov
dec
fists
popf
add
and
mov
inc
xchg
mov
add
lds
cs
loop
or
xchg
sub
push
stc
mov
test
push
xchg
cltd
imul
xor
push
aad
popa
mov
cmp
rcl
insb
fldt
in
sub
or
sbb
sbb
test
pop
cmp
clc
inc
test
fistpl
fnstsw
notb
sbb
jnp
gs
mov
mov
xor
fnstsw
das
popa
xchg
test
xchg
pop
cmp
lcall
push
inc
scas
pop
pop
xchg
inc
mov
mov
cmp
jle
add
ret
cmp
and
fxch
xchg
and
adc
outsb
nop
mov
stc
dec
scas
push
xchg
sahf
int
incb
pop
inc
adc
in
xor
pop
aas
fiadds
mov
jle
jo
pop
fwait
adc
int
mov
mov
scas
pop
stc
xchg
pop
push
popa
mov
cld
or
jne
dec
scas
dec
mov
cwtl
pop
xor
ds
fbstp
aas
jge
lock
je
cmp
sbb
and
or
inc
mov
push
jo
cmp
jp
pop
xor
dec
out
in
repz
mov
jb
pop
in
fucomi
into
pop
or
fiaddl
stos
mov
in
push
es
rorb
rol
push
xchg
cli
sbb
sbb
in
xor
inc
sub
into
rcr
out
insl
pop
push
and
lea
push
call
mov
mov
xor
xor
shr
shl
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
lea
push
jmp
adc
sbb
lret
clc
ja
adc
movlps
or
xlat
fbld
cmpsl
dec
push
stc
mov
mov
sub
gs
xchg
neg
test
mov
subb
ljmp
sbb
push
shlb
hlt
jmp
cwtl
lret
ss
push
adc
mov
mov
xchg
aaa
shll
ret
fldt
xlat
std
cmp
cmp
sbb
dec
test
push
in
inc
rcrl
fsts
fs
dec
int
and
das
je
shr
inc
js
imul
add
ret
push
sbb
sbb
mov
cmpsb
push
mov
mov
je
pop
add
popa
call
xchg
andb
lcall
out
aas
mov
js
cli
xor
out
or
mov
popa
scas
cwtl
adc
xor
out
xchg
popa
inc
aaa
jbe
jns
js
sbb
clc
imul
scas
dec
mov
push
dec
mov
mov
fcompl
sbb
arpl
jmp
je
dec
pusha
push
add
mov
out
pop
jl
cmp
push
push
out
mov
jp
xor
sbb
mov
push
xor
dec
addl
dec
icebp
pop
dec
fidivl
push
dec
stc
fstps
inc
and
mov
pop
and
jnp
cmpsl
sub
xchg
jbe
pop
jmp
pop
xchg
enter
ss
adc
push
iret
mov
cmp
leave
sarb
insl
movsl
xor
test
jmp
aad
jge
mov
sbb
jmp
push
hlt
xchg
and
fidivl
cmp
repz
dec
pushf
mov
mov
jns
xchg
in
pop
add
cmpsb
es
lea
ret
fmul
jge
scas
push
mov
jge
leave
pop
or
sub
lahf
mov
test
xlat
mov
mov
or
cld
leave
lcall
mov
adc
adc
nop
incl
and
xor
push
xor
or
aam
scas
movsl
ja
fiadds
pushf
nop
test
insb
push
mov
dec
aam
inc
iret
movsl
mov
inc
mov
mov
aas
xchg
int
cs
and
insb
jno
mov
xor
loope
pop
aad
push
mov
adc
pop
int3
test
and
cmp
push
call
mov
jmp
js
cmc
repz
sub
mov
jne
adc
movlps
rorb
loop
cmc
pop
and
aaa
loope
scas
dec
xchg
push
outsl
push
test
xor
and
push
jae
iret
lods
pop
and
insl
js
xlat
fs
jle
mov
aaa
lock
jno
lock
fwait
shrb
test
out
cmc
sub
sbb
ljmp
ficompl
aad
out
sub
mov
fadds
loop
insb
shll
ja
sub
sti
jp
pop
out
gs
testb
or
sbb
enter
sbb
lcall
loop
out
jecxz
mov
fildl
adc
add
ret
push
push
mov
in
lret
xchg
mov
xlat
jae
in
mov
xchg
sti
pushf
mov
cmpsl
xor
aas
pop
inc
call
xchg
clc
xor
dec
lock
fidivs
fildll
fucomip
test
mov
add
mov
fisubrs
pop
stos
lods
or
xlat
jbe
xor
push
in
in
mov
js
mov
jne
dec
daa
fbstp
inc
and
adc
jp
icebp
pop
sub
adc
push
sub
xchg
mov
clc
adc
aas
xor
mov
push
mov
sub
rolb
ficoms
mov
inc
mov
xchg
pop
in
xor
dec
jle
test
or
jmp
xchg
pop
dec
stos
sbb
xchg
adc
sti
add
mov
mov
mov
mov
mov
fbstp
insl
rcrb
push
call
addps
out
imul
cmpsl
pop
jb
incl
lret
daa
testl
sub
sub
out
or
rorb
ret
adc
mov
sbb
movsl
and
mov
outsb
jge
loop
movsb
fnstcw
sti
mov
adc
push
ss
cmpsb
shlb
je
adc
push
jmp
push
dec
faddp
sbb
push
sbb
rclb
js
xor
cmp
nop
xor
insb
push
push
ss
add
inc
push
pop
push
adc
push
pusha
add
cmpsb
inc
jno
dec
js
lahf
jge
enter
or
loope
push
adc
stos
rolb
hlt
arpl
push
sub
cwtl
and
inc
icebp
mov
ja
mov
xor
xor
shr
shl
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
lea
push
shl
call
mov
mov
xor
xor
shl
shr
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
shl
mov
mov
shrd
shr
mov
mov
xor
xor
jmp
jb
and
sbb
pop
jmp
add
jle
jno
adc
movlps
add
jl
shlb
aas
int
ds
adc
pusha
push
dec
add
ficompl
xor
idiv
fstl
pop
push
mov
xor
std
mov
xchg
push
pushf
test
clc
les
movsb
arpl
shlb
jae
jmp
test
sub
addr16
test
inc
ror
or
push
jae
loopne
jge
popa
testb
sbb
js
dec
scas
mov
out
lcall
fsts
dec
iret
mov
dec
adc
lret
ret
jmp
jo
or
push
mulb
das
daa
adc
inc
xchg
leave
insb
xchg
cmp
xor
or
lods
add
out
add
popf
clc
pop
cmp
mov
mov
out
daa
push
pop
add
or
rcpps
mov
xchg
add
and
out
xor
add
dec
adc
mov
movsb
daa
cmpsb
cltd
repz
loope
cmpsl
xchg
in
xchg
sbb
dec
jb
or
or
sub
pusha
push
test
hlt
or
xchg
push
dec
stc
cmp
and
mov
inc
xchg
aam
out
mov
enter
fsts
subb
hlt
fisttps
mov
push
mov
in
cmp
pop
adc
icebp
or
sbb
xor
nop
popa
jp
cmc
sti
cltd
xlat
xchg
mov
mov
outsb
inc
pop
testb
or
fistl
cmpsb
lds
push
jo
nop
sub
nop
insb
fdivs
mov
mov
pop
add
mov
xchg
sbb
jne
rcrl
cmp
inc
fsubrl
leave
outsb
push
fdivp
out
inc
jl
jg
popf
das
mov
add
rep
xor
jl
lret
outsl
sub
jnp
or
imul
sbb
pop
jmp
lods
mov
push
scas
in
outsb
dec
in
loop
push
mov
dec
mov
sbb
and
jnp
push
mov
out
repnz
and
stos
out
fs
adc
xchg
nop
loopne
nop/reserved
loopne
nop
mov
ds
mov
lret
xor
es
push
mov
xchg
pop
adc
jg
int
add
lahf
add
jmp
scas
nop
aam
mov
jecxz
incl
ja
and
inc
or
add
lea
push
shl
jmp
push
loopne
jo
jno
mov
dec
push
mov
movlps
jmp
inc
scas
jne
loop
mov
in
or
rclb
adc
in
and
daa
cmp
mov
adc
out
mov
pop
int
mov
rcrl
sub
cltd
mov
shrb
es
pop
data16
push
insb
mov
jl
clc
rorl
pop
lcall
loop
pop
inc
js
mov
mov
rclb
dec
das
push
rorl
ret
movsl
dec
cltd
jo
sti
hlt
fldenv
jno
out
push
insb
out
push
push
shlb
out
scas
loop
jno
or
adc
push
cmp
cmp
and
aam
sarb
inc
lahf
pop
dec
add
mov
mov
sbb
mov
dec
fcoml
jns
or
loopne
outsl
and
jne
repnz
sbb
dec
xchg
lds
pushf
rcrl
rol
sbb
jo
leave
and
pop
imul
xor
das
cmc
in
stc
jbe
insb
outsb
push
jbe
loopne
mov
stc
cli
inc
push
aaa
push
push
adc
and
lods
push
xchg
dec
jb
pop
sub
lcall
sbb
sti
sub
out
sbb
test
dec
test
and
and
subl
stos
dec
mov
mov
sbbl
lcall
out
sahf
icebp
jnp
imul
mov
jno
push
cmc
mov
mov
cmpsb
repz
nop
insb
fsub
cld
inc
jns
xor
scas
in
jmp
popa
cmp
sbb
xchg
cs
movsl
cmp
push
mov
ds
int3
loopne
int3
sbb
scas
mov
pop
aaa
and
mov
sbb
add
inc
lret
push
mov
fidivrs
fnsave
xchg
fucomp
rep
mov
or
aad
jp
jg
xchg
lods
movsl
xchg
fldl
mov
stc
cmp
pusha
iret
shr
mov
sub
or
mov
out
inc
adcl
dec
mov
cmp
add
repz
ficomps
js
filds
addr16
stos
ljmp
ret
nop
popa
out
pop
or
mov
mov
pop
and
cmp
insb
pop
prefetch
imul
std
shlb
xchg
call
mov
mov
xor
shl
xor
shr
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
shl
mov
xor
or
mov
shrd
shr
mov
mov
xor
xor
or
shl
add
mov
mov
shrd
shr
xor
mov
mov
xor
or
add
lea
push
shl
call
jmp
imul
sbb
addb
arpl
adc
movlps
pusha
mov
sbb
push
fdivrl
pop
xchg
lods
mov
xchg
mov
aam
popl
popf
dec
sub
xchg
xor
pop
addb
in
das
and
pop
or
xchg
sbb
insb
push
mov
dec
cld
inc
jb
lret
xchg
repz
and
adc
ret
test
adc
gs
xor
out
xchg
add
mov
sbb
xor
out
add
push
and
pop
xor
je
ljmp
lods
pop
js
lea
pop
call
bound
out
pcmpeqd
movsb
xchg
lods
in
fucomp
pushf
inc
cmp
cmpb
lds
or
push
inc
mov
shlb
cli
push
or
jecxz
clc
out
es
mov
dec
and
pop
cmp
or
fisubrs
dec
in
pop
nop
mov
push
sti
cmp
sub
das
fimuls
dec
int3
push
cs
lret
leave
lods
cmp
popf
loope
pop
pop
loope
popf
jae
cmp
data16
rcrl
and
lds
or
fildl
mov
sbb
fdivs
cvtps2pd
cmp
add
dec
adc
mov
in
sub
inc
in
nop
push
mov
or
out
push
cmpsb
and
pop
or
pop
daa
cmp
dec
push
pop
cmp
in
leave
and
jle
xchg
or
popf
loop
add
inc
leave
lds
inc
scas
sbb
hlt
mov
ja
cmp
xchg
and
mov
dec
shll
mov
dec
icebp
in
mov
mov
pop
test
cmp
sub
jp
xor
sbbl
pop
gs
xchg
push
cmp
shlb
rorl
jns
int3
stc
sub
or
mov
insb
fistpll
adcl
and
adc
test
inc
ds
es
scas
add
daa
aad
dec
adc
sar
fsubp
dec
fmul
fidivrl
int3
loopne
lahf
jp
adc
adc
pop
inc
fadd
add
push
jne
in
out
adc
inc
inc
bound
jl
mov
scas
inc
sbb
sbb
dec
rep
pop
ret
push
pop
adc
sub
sbb
rorb
fldl
mov
mov
xor
xor
shr
shl
or
mov
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
mov
mov
push
pushl
shl
call
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
mov
push
pushl
shl
call
mov
mov
mov
mov
mov
mov
rol
mov
xor
cmp
je
mov
mov
xor
jmp
lods
lods
scas
sbb
xchg
adc
xor
stos
jp
adc
decb
adc
pop
jo
sbb
xchg
push
mov
js
xchg
sbb
mov
or
lock
sahf
add
scas
and
and
in
cmp
jns
in
loope
add
fdivrs
sub
rorb
pop
insl
cmpsl
adc
popa
dec
fbstp
pop
es
aad
jns
es
rcrb
lret
leave
pop
cmp
jbe
shrb
dec
add
bound
dec
in
xor
push
loope
add
mov
pop
pop
shrb
push
inc
ret
jg
cli
movsb
enter
movsb
sub
push
lods
sub
enter
or
jp
repz
dec
pop
dec
push
lods
out
jl
pushf
push
cmp
inc
out
sar
fcompl
or
jne
mov
sub
adc
in
sub
mov
pop
inc
adc
push
sbb
dec
push
sub
imull
inc
jae
push
mov
out
cmp
xorl
je
add
and
stos
fstps
adc
and
xchg
push
in
fst
es
mov
lea
out
mov
add
insb
cltd
jl
jns
imul
iret
push
inc
xchg
xchg
xor
and
pop
dec
movsb
mov
sub
sbb
add
fmulp
outsl
push
ds
jge
xchg
mov
bound
mov
push
cmpsb
mov
or
mov
mov
imul
dec
int3
and
fwait
jle
popf
dec
sbb
mov
andl
lods
jle
mov
jnp
xorb
push
rclb
fadd
mov
icebp
or
xchg
push
xor
push
push
jmp
ret
in
stos
aas
int
inc
dec
cwtl
lds
lret
cmp
dec
repz
cltd
mov
pop
dec
or
xchg
mov
xor
pushf
aas
dec
fsubr
cmp
arpl
lcall
lds
mov
add
mov
data16
fimull
lea
fisttpl
test
jns
mov
ficomps
pop
jo
cmp
mov
iret
scas
cmp
push
iret
and
or
call
pushf
call
pushf
std
mov
or
dec
push
jg
or
and
jmp
xchg
push
fists
insb
and
stc
adc
jle
fcomps
inc
shll
ret
rolb
add
je
test
je
mov
mov
movzbl
sub
mov
jmp
sbb
sbb
mov
mov
push
pop
adc
decb
adc
and
sbb
push
push
adc
mov
inc
ss
xlat
daa
adc
lock
ret
inc
mov
cld
push
sub
pop
cld
cwtl
and
jp
mov
aas
jo
xor
jecxz
add
test
and
lock
insb
cwtl
fidivl
jecxz
or
in
ss
rol
mov
xchg
xchg
push
jae
incl
push
idiv
aaa
aam
decb
inc
xor
in
or
add
aam
mov
repz
jg
mov
push
in
test
je
lods
xchg
test
cmpsb
movsl
fs
pushf
lds
inc
ret
data16
lds
std
cmp
mov
pop
in
jbe
flds
loop
into
mov
push
push
lds
stos
or
ss
add
in
mov
outsb
addr16
adc
iret
fimull
fwait
sbb
aad
loop
ja
adc
int
inc
hlt
negl
mov
std
sub
inc
call
add
or
dec
fstl
mov
dec
test
fs
mov
rcl
pushf
mov
xor
jb
sub
add
in
add
mov
jp
lcall
pushf
jge
push
inc
fidivs
stc
jns
arpl
xlat
sub
xlat
clc
sub
xchg
fnstenv
mov
in
pop
test
movsb
fs
sbb
cmp
movsb
cli
mov
xchg
lods
std
cmp
lahf
es
dec
adc
loope
mov
mov
dec
fs
and
mov
pop
in
divb
jge
push
mov
sub
std
cld
mov
les
aaa
push
aad
lds
call
mov
pop
xchg
movsb
push
sub
mov
data16
push
push
lock
xor
mov
xor
decb
int
pop
mov
mov
cli
inc
adc
jmp
retw
mov
pop
fs
xor
or
sub
scas
lret
xor
repz
mov
pop
je
jns
ffreep
inc
stos
divl
mov
stos
mov
add
pop
push
xchg
lret
mov
jge
popf
addb
pop
call
jbe
dec
mov
dec
decl
cmp
shr
add
add
bt
cmp
popf
sub
adc
decb
adc
inc
test
aas
out
mov
icebp
xchg
inc
rorb
dec
hlt
sub
outsl
ficomps
mov
cltd
xor
and
ja
mov
jns
imul
lds
jb
imul
sbb
and
sahf
xchg
jge
insl
adc
das
add
pop
fistpll
push
icebp
stc
and
addr16
test
mov
outsb
jp
popf
cs
sti
addb
cmpsl
xchg
xor
pop
sub
or
imul
decl
loop
popa
inc
add
std
adc
ja
sahf
divl
addr16
lret
xchg
out
clc
mov
jge
push
mov
loope
call
cwtl
lcall
xchg
xor
mov
jl
cmp
inc
fildll
dec
push
in
int3
outsb
fwait
out
mov
adc
inc
dec
scas
clc
pop
pusha
daa
ret
cmp
push
add
sbbl
jo
stos
icebp
push
out
mov
xor
hlt
clc
bound
cli
icebp
ja
adc
in
or
sahf
adcb
jecxz
mov
jbe
jnp
mov
mov
xchg
lahf
jne
pusha
mov
jno
mov
pop
cmp
mov
call
xchg
lret
adc
cmp
into
notl
or
cmp
cmp
stc
popa
out
xchg
add
jo
adc
ret
inc
jmp
insl
clc
popf
sub
scas
fwait
mov
ss
push
xor
xchg
test
xor
mov
mov
xlat
jnp
or
xor
mov
fcmovnb
add
mov
mov
sbb
lods
mov
jns
pop
pop
fstpt
fstpt
cs
pop
mov
mov
lret
arpl
fmul
push
scas
mov
scas
xlat
sub
adc
out
sub
xorl
ja
xchg
inc
and
and
fidivl
mov
jae
dec
shll
xor
imul
lcall
ret
cmp
fwait
mov
mov
mov
loopne
scas
mov
push
stc
jns
pop
aas
dec
jb
test
scas
sub
jne
jp
push
or
lahf
ficomps
and
xchg
in
mov
sbb
loopne
repnz
shll
xor
cmpb
decl
test
inc
or
enter
add
or
xor
or
push
add
jmp
nop
sti
sti
fnstsw
jno
mov
jle,pn
push
cmp
dec
adc
decb
adc
repnz
leave
adc
sti
lods
or
push
je
xor
addr16
popa
mov
stos
mov
sub
outsl
sub
aas
in
aam
mov
dec
test
add
hlt
arpl
add
push
push
std
or
xchg
xchg
jo
inc
and
pop
jecxz
daa
ljmp
movsb
add
enter
pop
jmp
push
pop
ret
mov
and
imul
stos
fsubl
inc
es
xchg
add
mov
lds
shlb
xor
mov
lods
cwtl
stos
push
and
rorb
lock
sub
test
xchg
adc
push
ficomps
imul
int3
lods
subb
jl
mov
adc
imul
push
lcall
add
das
sbb
movsb
xchg
lock
into
cmpsb
sbb
xchg
xorl
pop
cvtps2pi
data16
enter
stos
loop
daa
mov
lds
push
push
add
stos
xchg
adc
or
or
mov
fisubl
dec
adc
divl
jae
mov
jle
iret
sahf
dec
sub
nop
fdecstp
add
dec
into
or
push
out
mov
mov
mov
scas
inc
pop
js
push
xor
sub
inc
sti
in
in
lock
ja
out
jg
push
xchg
xchg
imul
sahf
scas
and
idivb
mov
dec
add
out
insb
lods
or
xchg
xchg
test
cmc
or
ret
dec
lcall
pop
orl
fstps
push
stos
pusha
xor
es
arpl
cwtl
mov
test
cmp
ds
cli
pop
sub
rorl
inc
jnp
cltd
jno
cmp
pop
dec
push
jb
nop
movsb
jmp
add
cli
push
adcl
fwait
out
pop
adc
lock
sbb
fsubrp
and
sbb
pop
cs
lret
sub
add
adc
gs
and
pusha
stos
mov
out
aas
cmp
popa
das
gs
es
fdivl
push
std
pop
and
add
fistpl
sub
leave
rclb
ljmp
out
add
popa
jne
mov
xchg
xchg
dec
mov
scas
adc
mov
dec
call
pop
test
and
push
lea
push
shl
call
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
push
push
mov
shl
mov
shrd
shr
mov
mov
xor
jmp
ss
mov
lods
insl
xor
js
fsubl
push
dec
adc
decb
adc
ljmp
outsl
xor
or
cs
cmp
mull
subl
stos
sbb
sahf
mov
les
or
mov
pop
insb
out
pop
adc
jle
add
push
push
mov
cmp
cmpsl
aas
loop
test
divb
inc
sub
jg
xchg
jge
fisubrs
mov
mov
lods
mov
sahf
lcall
pop
int
movsl
aas
lret
jmp
mov
nop
ret
mov
sti
cld
in
cmpb
mov
cmpb
popa
mov
xor
test
cmpb
pop
lcall
jl
push
arpl
adc
jmp
pusha
mov
xor
xchg
les
mov
pop
mov
push
sbb
fdivrl
lds
bound
mov
inc
xchg
repz
call
aam
mov
adc
fs
inc
inc
dec
mov
and
sbb
dec
inc
lret
sti
pop
inc
neg
out
imul
icebp
and
test
rcll
addr16
packuswb
rol
xor
mov
dec
movsl
jp
icebp
sub
arpl
mov
call
out
je
shlb
hlt
adc
pop
xadd
loopne
imul
hlt
test
ljmp
ljmp
jns
je
arpl
repz
and
mov
and
xchg
cmpl
mov
push
mulb
aam
inc
and
adc
subl
lret
paddusw
idivl
xchg
stos
or
movsb
sbb
cmp
dec
mov
imul
xchg
lea
cli
hlt
adc
mov
xor
mov
xor
lods
jp
adcl
popf
bound
pop
jp
lahf
mov
loop
popa
push
inc
pop
adc
pop
jbe
push
repnz
inc
inc
testl
xlat
jp
lea
mov
out
stos
js
and
cmp
pop
fisubl
scas
adc
push
push
call
add
dec
psllw
cmp
lret
js
pop
std
loop
adc
inc
adcb
sbb
ljmp
enter
or
cltd
jle
lret
out
xor
or
add
push
shl
call
jmp
cmp
addr16
pop
push
cmp
cmp
mov
repz
adc
decb
adc
sub
das
fists
and
push
out
imul
jbe
mov
xlat
out
sub
and
rorl
popf
lret
and
pop
pusha
stos
insb
lret
shll
int3
enter
popa
push
out
test
iret
adc
lret
push
aad
mov
xor
js
scas
fildl
scas
mov
aaa
out
xchg
dec
jge
aas
lds
bound
sbb
in
inc
mov
xchg
stos
das
push
xchg
loopne
je
lret
dec
sub
ret
xor
and
xchg
scas
subl
xor
jmp
lahf
or
mov
dec
inc
xchg
push
arpl
fcmovu
or
dec
add
shl
enter
out
pop
rcr
cli
sbb
mov
es
sub
cmpsl
hlt
push
adc
xchg
jle
lea
pusha
fs
push
pop
push
push
adc
ret
add
inc
stos
push
jmp
data16
popl
mov
jge
jp
repz
xor
xchg
sbb
dec
arpl
adc
repnz
inc
sub
mov
in
inc
fwait
jo
leave
pop
sbb
ret
sbb
cmp
inc
popf
cmp
lods
xor
mov
lock
stc
aad
push
inc
loope
popf
cmc
rcrl
mov
jbe
je
pop
sbb
loope
or
insl
fimuls
in
popf
nop
outsl
fcompp
cmp
push
test
std
xor
sbb
sub
mov
sub
jae
mov
push
or
cmp
fs
jg
scas
add
inc
or
xlat
cli
testl
add
pop
mov
sbb
out
aad
iret
and
int3
movsb
aam
in
mov
divl
add
fidivl
xchg
sub
pop
fcomps
lock
sub
das
out
xchg
inc
jecxz
arpl
sub
int
test
jbe
adc
mov
cli
enter
sbbl
jae
dec
je
jb
pop
cmpsl
adc
test
inc
mov
or
push
jns
icebp
aam
in
mov
add
add
loop
dec
leave
xor
mov
jns
xchg
lds
mov
cmp
dec
cmp
sbb
and
inc
test
push
xchg
mov
mov
jmp
je
arpl
cmp
jecxz
inc
adc
jb
adc
jmp
cld
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
push
shl
call
mov
mov
shrd
shr
mov
mov
pop
xor
xor
pop
shl
or
jmp
imul
leave
sub
xlat
xor
fnstsw
adc
decb
adc
daa
mov
ljmp
jl
cmp
xor
mov
or
loopne
mov
push
dec
lret
faddp
loop
out
add
mov
in
jbe
jnp
in
inc
daa
or
loopne
mov
lret
mov
xchg
add
push
cmp
dec
push
lods
mov
adc
aaa
je
xchg
imul
fwait
or
pushl
out
lods
in
mov
daa
out
jg
pop
add
mov
pusha
sbb
lds
loop
inc
ljmp
lods
outsb
fimuls
cmc
cmp
notb
daa
mov
jge
push
adc
jle
push
test
inc
xchg
push
cmpsl
ret
mov
push
jg
lea
scas
fstps
pop
and
lods
mov
hlt
adc
cmp
add
pop
and
repz
adc
shrb
mov
fcom
test
inc
incb
cltd
mov
pop
xchg
dec
stc
inc
push
lods
push
fmuls
fs
mov
mov
fwait
cmp
cmpsl
adc
daa
jecxz
lock
movsl
sbb
sahf
pop
cmc
jle
aam
adc
or
fldl2t
mov
pop
in
imul
pop
mov
ja
mov
jecxz
cmp
inc
leave
cmc
sbb
std
nop
xchg
xor
pop
lds
jecxz
ret
sub
and
mov
cmp
jo
lds
sub
shlb
add
inc
leave
jnp
movsl
push
dec
out
jae
jp
cmpsl
mov
xchg
mov
push
shlb
cli
mov
sahf
iret
jo
fnstsw
test
inc
xlat
lods
popa
out
pusha
fdivs
out
ljmp
enter
cmp
mov
shl
cmp
cmc
scas
orb
add
arpl
icebp
cmp
lahf
mov
mul
in
jp
negb
js
adc
push
stc
or
out
popa
mov
testb
xchg
imul
dec
cmpsb
pop
addr16
inc
scas
push
inc
ja
mov
jmp
leave
xchg
inc
sbb
outsb
ficoms
rcl
pop
dec
pop
fisubl
es
pop
mov
in
test
aas
clc
les
and
ficoml
pop
fldl
rclb
dec
les
in
sbb
mov
sub
xchg
xchg
dec
fistps
ret
mov
inc
mov
or
mov
mov
jne
mov
incl
mul
ret
push
mul
mov
cmpl
movl
movl
jmp
not
ja
push
push
pushl
call
subl
adcl
adcl
xorl
xor
mov
mull
add
mov
mul
add
pop
ret
push
mov
sub
push
push
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
xor
jmp
jmp
mov
dec
addl
xchg
xchg
call
adc
fnstsw
insl
adc
js
inc
xor
jg
cmp
pop
mov
std
mov
outsl
test
lock
leave
pushl
push
cltd
in
insb
sub
sbb
int3
jge
add
sbbl
into
or
ljmp
hlt
dec
fdivs
push
xchg
aam
pop
aas
cmp
or
mov
faddl
and
addr16
shl
ret
pusha
popa
add
into
pop
mov
mov
mov
jne
jae
test
jp
sub
mov
ds
stc
fwait
aam
in
imul
jmp
ret
enter
jg
notl
xor
adc
cmp
shlb
mov
rorb
enter
mov
cmpsb
add
pop
ja
dec
inc
pop
push
stos
test
sbb
test
sub
pop
xchg
jns
outsb
add
push
and
pop
mov
sub
sub
andl
add
push
loope
les
push
push
jae
int3
into
mov
and
mov
ja
in
cli
imul
mov
mov
mov
int
mov
add
iret
push
mov
popf
adc
xchg
mov
in
add
sbb
sub
test
insl
aaa
in
popa
push
push
cwtl
pop
add
mov
mov
push
or
xchg
mov
cs
jmp
jne
mov
loop
sbb
ret
cs
ja
cmp
and
and
divps
test
sbb
fistps
lret
popf
nop
mov
mov
mov
in
adc
bound
nop
loop
and
xchg
sub
popa
stos
xor
mov
cmp
jg
aad
pop
cmp
mov
lds
imul
mov
ja
and
leave
xchg
adc
ror
dec
lahf
in
sbb
pop
xchg
cmp
mov
inc
mov
cmp
stos
setne
sub
lods
pop
and
dec
jnp
mov
fbstp
push
mov
xor
mov
loop
fwait
xchg
sub
fsubl
loopne
inc
mov
jnp
dec
xor
add
cmc
push
push
xlat
sbb
in
daa
insl
daa
imul
add
cli
push
mov
in
pop
push
cmp
mov
shrl
imul
int3
pop
ret
out
mov
add
dec
fdivl
sarb
jmp
xchg
add
and
xchg
and
sub
mov
mov
popf
movlps
pop
pop
adc
adc
mov
jmp
scas
mov
scas
jb
add
fcomps
jae
pop
pop
cli
mov
fwait
push
and
add
lret
xor
mov
adc
rcll
dec
idivb
jb
out
and
aaa
dec
and
outsb
imul
arpl
add
cltd
sub
jp
lret
pop
push
mov
pop
add
inc
aam
adcl
fwait
add
adc
loop
dec
stos
in
push
test
icebp
pop
sarb
aas
jae
test
out
adcb
mov
xchg
sub
cmp
inc
das
movsb
add
xchg
cmp
and
cwtl
test
leave
adc
cmpsl
adc
sar
inc
and
jno
clc
loopne
sbb
fucomp
cltd
sbb
cmc
test
cmp
aaa
and
fildll
mov
adc
mov
mov
dec
or
inc
jns
push
call
in
dec
mull
stos
dec
dec
addr16
pop
cmpsl
xor
add
js
bound
push
cmp
aaa
jecxz
inc
ret
jge
int
mov
repnz
rorl
and
add
sub
jb
arpl
lahf
cmpsb
fmuls
sbb
mov
iret
pop
add
loop
shll
mov
imul
jo
and
decb
dec
xrelease
add
and
xchg
sub
inc
sbb
adc
in
jnp
mov
xor
adc
mov
lea
xchg
aas
xor
jle
out
push
cmpsl
pop
stos
int
loope
rcl
iret
pop
mov
stc
stos
inc
lahf
test
es
dec
mov
mov
adc
je
das
sub
xchg
mov
pop
jne
mov
jnp
jns
pop
ret
sarb
cmp
cmpsb
out
fwait
test
fs
cmp
orb
pop
icebp
decl
andl
xchg
cli
outsb
cmp
popl
pop
inc
mov
and
int
jmp
test
and
ret
leave
repnz
shl
cs
pushl
insl
pop
adc
and
add
int
in
pop
lods
popf
sbb
sub
cmp
sbb
hlt
sarb
sbb
mov
les
testl
pushf
lods
or
lahf
jmp
jae
mov
dec
jecxz
dec
aam
addl
test
push
div
mov
xor
xor
sub
mov
lea
mov
mov
sub
xor
mov
xor
or
xor
mov
sub
mov
mov
xor
mov
sub
div
mov
pop
xor
sub
cmp
ja
jmp
mov
movl
movl
movl
movl
mov
mov
mov
sub
imul
xor
xor
div
mov
mov
push
and
mov
sub
sub
mov
mov
mov
xor
mov
xor
and
add
add
mov
mov
add
jmp
pop
mov
pusha
cltd
pop
sbb
xchg
adc
popf
movlps
mov
inc
jae
or
cld
int
enter
packuswb
or
add
jg
xchg
cmp
xchg
das
mov
fs
xchg
adc
mov
add
outsb
popa
cmp
rcll
cmpb
out
jmp
mov
xor
lcall
mov
mov
jle
ja
jp
and
add
in
sub
aas
pop
hlt
xchg
jge
std
xor
xlat
out
cmp
ljmp
pusha
cld
add
and
mov
pop
push
xchg
or
or
add
pusha
popf
mov
mov
push
jno
aad
or
in
sti
call
xchg
je
pop
imulb
pminsw
lret
jbe
add
ret
and
or
or
xor
jp
add
movl
lret
add
mov
lods
add
mov
jmp
dec
jae
loope
test
pusha
sbb
das
cld
lods
and
xor
pop
add
mov
loopne
loop
dec
adcb
and
adc
adc
sbb
cmp
sbb
or
jnp
gs
xor
cmpb
and
mov
jecxz
adc
in
aas
movsl
dec
in
pop
sarl
inc
push
mov
scas
dec
xor
cmpsl
sub
movsl
jp
add
movsl
aaa
or
mov
test
ss
xchg
adc
xor
cmpsb
sub
icebp
or
cld
xor
das
mov
jbe
pand
cmpb
inc
add
dec
mov
xorl
mov
sbb
mov
lcallw
ja,pn
in
test
fwait
fwait
addr16
filds
cmp
cwtl
inc
jo
or
fwait
sbb
dec
xor
pop
bound
mov
icebp
fidivl
nopl
and
into
adc
mov
in
fiadds
and
jno
and
fiadds
cs
mov
aaa
push
mov
jne
mov
jne
daa
call
fwait
mov
and
scas
and
mov
mov
xor
xchg
sbb
inc
out
or
pusha
cmp
faddl
bound
sbb
out
mov
lret
insl
in
xor
dec
pop
imul
mov
cmp
ss
mov
jp
outsl
lret
mov
xor
mov
xor
mov
sub
mov
add
mov
jmp
jo
sbb
lcall
sub
adc
stc
mov
sbb
dec
xchg
test
fwait
mov
rcl
mov
add
mov
mov
mov
xor
data16
push
or
mov
jne
mov
cli
dec
sub
mov
fcomps
xchg
add
iret
lret
cmp
jmp
sbb
out
and
push
pop
jae
cmp
je
inc
imul
mov
mov
mov
sub
adc
or
and
aas
cwtl
mov
mov
push
jg
dec
xor
mov
pop
lea
mov
jp
mov
cmc
testl
dec
or
lds
shlb
hlt
mov
push
subl
inc
or
inc
outsb
xor
jo
sbb
insb
sti
gs
sub
or
push
mov
aaa
push
xor
bound
sub
sub
imul
fcmovbe
outsb
pusha
jnp
fbld
mov
je
dec
xchg
mov
outsl
sbbb
mov
aaa
inc
jns
xlat
jbe
or
movl
les
push
mov
sti
dec
xchg
xchg
and
sbb
mov
ret
arpl
mov
orl
insb
push
call
cmp
dec
outsl
jecxz
setno
add
xchg
nop
xor
inc
cmp
jns
inc
test
fidivrl
push
rol
fists
pushf
or
or
xchg
add
enter
outsb
cmp
in
mov
mov
pop
imul
out
orb
popa
scas
mov
mov
cs
dec
mov
or
frstor
sub
je
mov
and
pop
mov
int
adc
ret
mov
out
jno
popa
loope
mov
jl
push
sbb
adc
call
andb
les
in
lods
or
in
inc
push
adc
adc
loop
jae
inc
sbb
pop
cli
sub
pop
sbb
mov
push
mov
push
fneni(8087
leave
cmpb
subl
mov
sub
lods
loopne
ret
xchg
cmp
sub
push
sub
inc
push
nop
sbb
call
loope
pop
jge
shr
or
subb
push
xchg
jbe
add
xchg
xchg
jmp
xchg
or
in
cltd
mov
outsl
mov
mov
int3
mov
jp
jmp
pop
adc
add
add
ret
hlt
xor
or
xor
mov
sub
mov
mov
mov
xor
xor
sub
div
pop
xor
sub
cmp
jbe
pop
pop
pop
leave
ret
push
mov
and
sub
push
push
jmp
fiadds
ljmp
or
fsubs
adc
iret
movlps
popa
add
xor
jg
push
cmp
in
call
adc
aad
call
mov
int3
mov
std
add
xchg
sub
cmp
inc
sbb
jno
outsl
xchg
pop
into
ljmp
dec
mov
lea
sbb
adc
into
incl
jb
ret
sti
fists
mov
scas
mov
imulb
and
add
rcll
cli
daa
push
iret
fidivrs
mov
xchg
xchg
lods
or
js
mov
push
lods
je
inc
jb
sub
gs
jle
mov
pop
rcrl
xchg
xchg
cmpl
sbb
negl
lds
mov
test
cmp
xchg
cld
xchg
adc
sub
push
mov
jne
ljmp
imul
test
imul
jno
sub
into
scas
leave
pop
mov
and
pop
shll
mov
push
mov
pop
mov
mov
mov
es
push
scas
insl
sbb
sub
into
leave
cltd
loopne
push
shr
pop
idiv
dec
jp
pop
push
mov
pop
popf
stc
pusha
sub
shr
push
xor
loopne
push
push
mov
aas
add
stos
hlt
inc
mov
int3
jnp
xor
bound
sub
leave
mov
mov
loopne
testl
or
xor
loopne
dec
mov
and
sbb
xchg
and
push
in
xor
jge
mov
dec
mov
sahf
and
sahf
lds
sbb
dec
mov
xlat
enter
sub
xchg
dec
repz
pop
fwait
pop
movsl
xor
pop
or
arpl
stos
popf
in
loopne
mov
imul
jbe
or
into
jle
fimull
lahf
insl
stos
jo
loop
dec
clc
imul
cmp
out
pop
loopne
adc
sbb
push
xchg
inc
outsb
push
mov
loop
mov
lcall
shlb
mov
dec
mov
mov
mov
insl
popa
xchg
pushl
lahf
adc
ja
xlat
xchg
jo
push
inc
mov
adc
inc
jl
sub
lcall
out
jnp
mov
mov
fildl
outsl
les
hlt
xor
imul
filds
push
call
mov
movzbl
push
call
test
jne
decl
xor
jmp
mov
mov
incl
mov
cmpl
mov
movl
jmp
mov
mov
jae
call
sbb
adc
xor
movl
orl
add
push
add
pop
mov
sbb
mov
mov
andl
mov
addl
mov
adcl
movzwl
or
cltd
sbbl
movzwl
sbbl
idiv
sub
movzwl
or
or
mov
neg
mov
xor
xor
mov
adc
mov
cmpl
movl
mov
movl
jmp
movl
jge
push
pushl
push
pushl
pushl
pushl
call
xorl
sbb
mov
xor
mov
orl
and
addl
sub
mov
sbbl
jmp
arpl
ja
arpl
mov
jle,pn
pop
adc
iret
movlps
add
out
sbb
add
inc
cmc
mov
xchg
push
adc
int3
lds
and
sub
jecxz
adc
jge
mov
popf
mov
adc
adc
cmp
jle
sub
sub
pop
ror
lahf
push
xor
jp
outsb
pop
ljmp
insl
cmp
repz
stos
cmpsl
add
lret
xchg
sbb
pop
and
mov
xchg
lds
sbb
outsl
test
sahf
cmpsb
lds
in
cmpsb
mov
xor
jae
cmp
data16
pop
xchg
rcr
or
mov
mov
inc
jp
xchg
clc
lret
cwtl
pusha
sbb
das
in
pushf
popf
dec
or
mov
int3
pop
in
pop
pop
xchg
arpl
test
and
das
call
loope
stos
jl
dec
or
cld
in
mov
sti
outsl
lods
out
sub
or
push
jne
jmp
movsb
jp
adc
mov
dec
and
jbe
push
in
lods
pop
jbe
fwait
ljmp
mov
sbb
inc
mov
inc
cs
pop
ficomps
push
xchg
pop
jle
ret
adc
xchg
adc
xor
lea
mov
stc
mov
sbb
jle
adc
xchg
shlb
int3
pop
lret
mov
xorl
xchg
test
mov
mov
cmp
fildl
xchg
pop
jmp
cmpsl
ja
imul
subb
push
call
xor
out
leave
aam
sub
ja
pop
inc
cmp
cmpsb
frstor
mov
pop
es
cmp
fnstcw
test
mov
mov
mov
and
mov
xchg
int3
enter
rol
xor
pop
dec
inc
lret
insl
sbb
xchg
adc
push
fcmovu
jns
loopne
xor
test
xor
or
mov
mov
test
and
fistpll
dec
jnp
sub
sarb
sbb
and
jecxz
adc
sbb
dec
ret
test
push
repz
dec
mov
sbb
stc
xlat
mov
test
mov
and
repz
and
addr16
pushf
cmp
mov
cmpsl
lret
add
inc
and
and
mov
and
mov
adcl
sub
mov
xor
mov
sub
movl
mov
cmp
movl
jb
cmpl
mov
mov
jmp
movzwl
jb
push
call
mov
sub
mov
xor
mov
orl
xor
or
sbb
add
subl
add
movl
movzwl
sbb
movl
movl
andl
movl
mov
mov
sbb
mov
andl
xor
mov
adc
add
mov
mov
xor
mov
subl
xor
subl
div
or
mov
andl
add
adcl
and
pushl
orl
pushl
sbbl
call
movl
not
movl
movl
sub
mov
and
mov
subl
and
or
mov
xorl
and
xor
pushl
adcl
pushl
call
sub
pushl
movl
movl
cmpl
movl
mov
jmp
movl
movl
jge
pushl
push
call
movzbl
or
xorl
andl
negl
sbb
mov
mov
add
dec
sub
or
movl
xor
movl
movl
cmpl
mov
movl
jmp
movl
jbe
pushl
push
push
call
xor
neg
add
adc
sbb
and
adcl
cmpl
mov
mov
mov
jmp
mov
mov
jg
pushl
call
orl
xor
adc
xor
andl
sbb
movl
movl
xor
movl
mov
and
mov
sub
movl
mov
orl
or
and
mov
sub
cmpl
mov
movl
movl
jmp
movl
movl
jge
push
push
pushl
call
decl
xor
xor
add
not
pushl
mov
xor
mov
addl
add
and
xor
mov
sub
sbb
mov
xor
subl
and
andl
pushl
xor
mov
sbb
mov
andl
imul
xorl
xor
subl
or
movl
mov
subl
sub
addl
pushl
andl
call
dec
jne
or
movl
xor
add
adc
mov
movl
mov
andl
movl
mov
call
lea
xorl
mov
cmpl
movl
mov
mov
jmp
movl
movl
jg
push
push
push
call
or
sub
addl
or
xor
xorl
lea
adc
mov
sbbl
mov
orl
mov
mov
mov
cmpl
movl
not
mov
jmp
movl
notl
jne
pushl
push
push
pushl
call
sbb
sub
neg
or
or
adc
xor
cmpl
mov
movl
mov
jmp
mov
jle
push
push
call
or
movzbl
and
mov
sub
subl
orl
xor
jmp
pop
mov
xor
mov
out
cmc
stos
push
sbb
adc
jg
scas
sbb
or
aad
scas
push
cmp
int3
test
lea
sti
jmp
mov
push
stos
mov
repz
cltd
scas
in
push
inc
sub
jl
out
out
mov
mov
test
xor
mov
call
jecxz
test
fnsave
stos
es
jo
xchg
lock
fcoms
pop
push
pop
ficompl
dec
mov
mov
cs
leave
inc
int3
sbb
jl
aad
mov
push
aad
dec
mov
sub
jnp
int3
sti
or
mov
fsubr
add
mov
arpl
cld
pop
aam
mov
addr16
push
pop
in
xor
loopne
fisttpll
mov
in
mov
xchg
arpl
test
in
jno
ror
cmp
les
mov
mov
lea
ds
rcrb
daa
test
sub
cmp
pop
scas
add
mov
push
sti
hlt
inc
inc
subl
mov
mov
mov
enter
push
int
sub
fmuls
xchg
divb
ljmp
sbb
movsl
inc
xchg
pop
std
movb
pop
xor
loopne
mov
idivb
outsl
xor
adc
cmpsb
mov
aam
imul
outsb
fsubrp
out
push
dec
lret
dec
adc
in
push
negl
sub
or
inc
mov
cmp
imul
push
jno
outsb
int
test
xchg
dec
inc
ja
mov
cmp
cmp
ret
jbe
xchg
dec
out
aad
xor
mov
pusha
repnz
std
dec
loop
push
xor
adc
xor
decl
adc
nop
cltd
sub
cld
insb
mov
mov
xchg
xchg
pop
sbb
je
in
lods
xchg
lret
mov
pushf
add
sub
in
jb
dec
and
pop
jns
mov
adc
fld
pop
adc
sbb
hlt
sti
dec
pop
es
out
hlt
inc
cmp
js
mov
roll
sub
xchg
sbb
jg
push
mov
mov
jns
cmp
fnsave
lcall
call
int
lock
aaa
and
or
call
jbe
push
push
mov
jmp
call
mov
enter
adc
inc
cli
pop
jl
loopne
cmpsl
mov
pop
orl
jae
mov
inc
shl
shr
or
incl
mov
cmpl
movl
movl
mov
movl
jmp
mov
movzbl
jbe
push
call
movzbl
sbb
andl
xorl
and
subl
sbb
mov
adc
mov
inc
mov
mov
mov
mov
mov
shrd
cmpl
mov
movl
mov
not
jmp
mov
jb
push
push
push
push
call
mov
and
mov
add
and
add
xor
sbb
shr
mov
inc
mov
cmpl
movl
mov
movl
jmp
movl
jbe
pushl
pushl
call
andl
sbb
or
xor
xor
negl
mov
andl
xor
addl
xor
sbbl
or
xor
xor
add
mov
andl
push
addl
pushl
lea
push
subl
shl
call
xorl
lea
push
mov
mov
lea
xorl
push
addl
mov
lea
andl
mov
mov
andl
mov
push
adcl
call
sbbl
push
push
pushl
call
add
mov
mov
sbb
mov
addl
mov
mov
xor
add
sub
or
mov
or
shr
cmpl
mov
notl
not
jmp
movl
jg
pushl
push
call
sbb
inc
or
sub
add
sub
dec
neg
adc
shl
cmpl
notl
mov
movl
jmp
movl
jb
push
push
call
adc
adcl
xor
and
add
adcl
or
subl
mov
xor
xor
mov
dec
lea
cmpl
movl
mov
movzwl
jmp
movl
notl
jbe
push
pushl
call
adcl
and
add
movzbl
or
movzbl
xor
mov
mov
xor
lea
cmpl
mov
movl
jmp
movzwl
movl
jg
push
pushl
push
pushl
push
pushl
pushl
call
and
sub
sbbl
mov
sbb
mov
add
neg
mov
movzwl
and
mov
sub
lea
cmpl
mov
mov
mov
jmp
movl
jbe
push
push
push
pushl
call
xor
add
xor
andl
xor
add
or
movzbl
sub
sbb
xor
mov
sbb
movl
movl
movl
jmp
out
rclb
bound
cwtl
push
insb
jbe
mov
or
adc
adc
mov
lods
orb
mov
xchg
ficoms
jge
jb
cmp
insl
enter
fistps
jo
cmpsb
clc
sti
loopne
pop
sbb
test
pop
adc
mov
push
fnstsw
cwtl
add
cli
jo
and
mov
cmp
xchg
frstor
cld
sbb
and
pop
pop
adcb
push
pop
repnz
mov
das
lret
cmp
jbe
mov
cltd
outsb
dec
lock
int3
mov
out
cmc
adc
lock
mov
sub
cmpb
adc
push
test
cmpsb
push
lret
pop
inc
jmp
push
bound
into
jle
daa
pop
xchg
fidivrl
aas
or
aas
pop
in
repnz
xor
xchg
add
sbb
xorb
mov
loopne
outsb
in
push
adcl
cmpsb
scas
fmuls
pop
sbb
ss
int
mov
das
add
mov
loope
add
and
adc
push
xchg
mov
inc
inc
in
lret
push
pop
hlt
jns
and
add
loop
push
cmpsl
popf
sub
or
gs
cwtl
adc
sbb
xor
jmp
hlt
push
mov
mov
cmp
jl
pop
push
dec
dec
jbe
test
push
sub
pop
or
xor
dec
jne
mov
mov
test
mov
iret
sbb
add
loope
adc
shl
ljmp
push
aam
adc
loopne
mov
outsl
pop
fs
insb
cwtl
andb
test
arpl
push
jno
out
xor
test
xchg
test
jmp
movsl
add
adc
inc
xchg
sbb
cltd
sub
xor
jp
fst
adc
les
dec
lcall
push
popa
mov
out
push
out
out
cmc
or
pop
in
repz
push
push
sub
jl
jl
pop
insb
mov
popf
and
xchg
xor
scas
rcl
jb
test
pop
fwait
xchg
jge
aad
pop
sbb
mov
mov
mov
in
dec
int
jge
outsb
cmp
subb
scas
daa
bound
or
pop
lahf
and
mov
pop
lret
sub
pop
adc
and
cs
and
fld
or
mov
cld
ret
ror
clc
sub
lods
mov
movl
mov
mov
mov
mov
add
adc
xor
xor
and
mov
and
mov
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
jmp
mov
adc
jg
mov
shl
idivl
sub
insb
unpckhps
iret
movlps
cmp
xor
xor
jns
push
mov
mov
icebp
fidivl
fcomps
pop
jge
or
mov
pop
xor
dec
xor
pop
jnp
icebp
out
push
mov
testl
insb
add
sarl
int3
sub
mov
xchg
cmp
xor
add
and
outsb
mov
mov
int3
iret
scas
dec
and
and
mov
sbb
ljmp
sarb
inc
movl
xchg
sbb
stos
cltd
in
cld
nop
push
and
mov
mov
mov
pop
sbb
in
lret
lods
jo
rorb
stos
lea
lds
out
add
mov
mov
dec
dec
int3
jns
cmp
fldl2e
aam
fists
and
int3
push
movsl
subb
adc
sti
sbb
les
gs
aad
push
push
lods
popf
pop
xchg
push
push
pop
jmp
stos
daa
arpl
lods
cmp
aaa
sarl
shll
in
xchg
int
add
mov
xchg
sti
add
ficoml
xchg
mov
cmp
and
mov
cs
push
sbb
adc
sub
cmp
pop
and
sahf
and
pushf
lods
dec
scas
adc
es
or
mov
leave
lds
lea
rep
xorl
push
jg
cld
movsl
mov
cmp
xchg
popl
jl
jecxz
inc
xrelease
cmp
cmp
push
pushf
fnstenv
sub
pop
sarb
xchg
scas
decb
cmp
inc
dec
push
movb
mov
iret
call
ljmpw
test
aad
fildll
mov
mov
fdivl
adc
fs
or
cs
lret
shll
mov
in
fcoms
movsb
pop
fisubrl
addl
lret
mov
movsb
in
pop
xor
out
dec
lret
daa
rolb
leave
dec
inc
inc
iret
or
repz
mov
adcl
jmp
cmc
lods
jno
ficoml
and
cmp
add
test
mov
adc
in
shrl
cs
fistl
mov
or
add
arpl
pushf
xchg
dec
mov
cmc
rolb
cmp
std
jg
push
call
xchg
jle
mov
jno
lock
inc
jns
mov
push
push
or
or
jmp
dec
pop
imul
enter
inc
stos
test
adc
mov
pop
sbb
adc
sbb
lods
sahf
movsl
test
mov
lcall
mov
cwtl
and
push
xor
int
out
jg
xchg
ror
or
cld
jl
sbbb
imul
mov
ljmp
dec
mov
enter
fisttpll
call
call
sub
mov
mov
pop
xor
sbb
outsb
push
rcrl
adc
sbb
inc
sub
sbb
scas
push
and
jae
xchg
jp
push
pop
clc
xorl
or
lock
xchg
rol
pop
test
pop
push
rorl
fnstsw
and
leave
pop
test
cmp
lea
cmpsb
out
push
sar
popf
pop
fnsave
fdivrs
cmp
mov
mov
aam
ret
pop
pop
sbb
mov
cmp
xchg
fldenv
jnp
sub
mov
shl
dec
jns
bound
mov
dec
data16
xchg
push
iret
jbe
jmp
ds
movsb
mov
cmp
pop
xor
push
add
aas
lock
or
and
lret
xchg
push
outsl
clc
push
lea
push
mov
xor
imul
xchg
aaa
fcompl
xchg
movsb
fbstp
lcall
leave
lods
hlt
stos
movsl
xchg
push
inc
jmp
pusha
push
rcrl
add
cltd
test
in
sub
xchg
lahf
notl
dec
push
adc
adc
push
cmpsb
ss
add
je
repnz
fldenv
push
fcmovnb
loop
push
sbb
sbb
and
pop
push
sbb
mov
and
fdivr
movsl
hlt
adc
push
scas
loopne
or
int3
jg
pop
and
mov
mov
movsl
fdivrs
les
mov
imulb
jne
adc
mov
or
hlt
adc
dec
jle
sbb
sbb
test
fisttpl
fwait
ret
lea
es
inc
jecxz
lods
jecxz
lret
fidivrl
mov
popa
jo
adcb
push
xchg
jmp
movsl
xchg
dec
out
xchg
rcl
sbb
shlb
xlat
stos
adc
jne
repnz
jp
sbb
outsb
push
jp
and
inc
js
or
push
push
call
mov
mov
sub
mov
sbb
mov
cmp
jne
cmp
je
movl
movl
movl
movl
mov
mov
mov
mov
add
adc
xor
xor
and
mov
and
mov
movl
movl
movl
movl
movl
movl
movl
jmp
jp
jg
aaa
lret
int
xor
aas
or
adc
ja
sub
pop
mov
adc
sarb
xor
push
pusha
les
rcll
lret
fldl
dec
inc
pop
and
pop
loope
and
and
add
jle
sbb
and
mov
pusha
cmp
jmp
jmp
hlt
push
cs
xor
mov
sarl
scas
lcall
aad
stos
add
jae
mov
inc
fsts
and
or
mov
and
push
pop
stos
out
lcall
popf
pusha
lods
adc
jbe
mov
adc
shlb
pop
fisubrs
cltd
movsl
mov
fwait
test
xchg
negb
push
push
test
gs
sti
cs
pop
cmp
xchg
inc
ret
inc
push
jno
ljmp
sahf
add
xor
cmpsl
fldenv
mov
or
fsubrp
mov
xchg
fnsave
or
out
inc
xchg
mov
in
mov
sti
push
vmptrld
stc
mov
jb
mov
mov
sub
mov
imul
push
add
pushf
adc
out
divl
lods
push
imul
or
adc
leave
in
cmp
cmp
int3
mov
lahf
outsb
and
mov
jo
iret
call
ret
ficompl
cld
fxch
dec
xchg
jo
in
mov
shl
cmp
jmp
sbbb
xorb
pop
sub
shrb
add
aam
outsb
xchg
xchg
ljmp
rcll
or
daa
jp
test
pop
cwtl
pop
xor
int3
inc
inc
lahf
push
xchg
cmp
inc
in
jae
roll
pop
mov
inc
inc
mov
fwait
enter
scas
cli
int
icebp
push
jo
adc
inc
inc
jnp
push
loop
push
mov
cmp
mov
hlt
cmpsb
mov
xor
and
or
nop
das
aad
xchg
shr
pop
cld
mov
in
add
pop
dec
adc
push
lock
adc
push
je
adc
pop
sbb
cmp
outsb
inc
sbb
dec
jo
or
inc
je
test
mov
pop
sub
dec
cmp
mov
xlat
arpl
lret
mov
stc
inc
pop
rcr
pop
jno
push
xchg
negb
mov
or
mov
movsb
lret
sub
xor
inc
and
fnstcw
add
dec
and
push
push
xor
xor
push
push
call
mov
mov
push
push
push
push
call
mov
mov
jmp
aaa
jae
jnp
jns
das
jmp
out
mov
iret
movlps
cmpsl
and
sti
mov
fcom
sbbl
pop
lret
sbb
mov
lahf
push
inc
mov
mov
and
mov
adc
sbb
pop
insb
scas
test
ljmp
popa
mov
mov
fdivr
gs
mov
ds
and
out
lods
adc
aad
adc
mov
jns
push
cmpsl
push
out
in
test
mov
lret
fbld
mov
xchg
mov
inc
mov
or
fsubs
dec
incb
or
jnp
xchg
shl
mov
xor
adc
rcll
xlat
jle
pushf
cmc
dec
mov
mov
lahf
push
mov
cmpsl
dec
scas
ret
jge
mov
and
dec
mov
adc
insl
movsl
adc
xchg
in
sbb
sub
outsb
fdivr
xchg
sbb
xchg
dec
fs
xor
jnp
addl
lods
pop
fs
mov
lods
jecxz
rcr
out
sti
fsubs
xchg
sub
fimull
dec
pop
scas
push
es
shrl
insl
int3
jg
mov
or
sub
scas
cmp
js
ds
sub
outsb
xchg
sub
pop
gs
cmp
mov
and
adc
dec
add
arpl
loope
in
imul
or
aas
adc
push
insb
or
das
roll
adc
sub
mov
mov
xchg
inc
fiaddl
push
dec
std
xor
shlb
out
data16
pop
nop
clc
xor
int
adc
sub
add
mov
test
or
icebp
sbb
loope
cmp
out
cld
cmpsl
and
xchg
addr16
aam
cs
and
xchg
jo
dec
jp
insl
shll
cltd
mov
jnp
inc
adc
imul
shlb
out
lea
jns
jg
and
in
mov
outsb
cmp
mov
push
add
sbb
and
pop
xchg
fs
imul
fst
pop
push
cwtl
test
cwtl
dec
add
test
mov
cltd
push
mov
dec
push
cmp
subb
pop
add
stos
mov
add
sub
dec
mov
inc
imul
jl
rcrb
lret
xor
push
jae
into
mov
jmp
je
xchg
mov
sbbl
stos
add
cmp
mov
in
sub
mov
push
push
push
call
mov
mov
add
mov
adc
jmp
and
das
sbb
sbb
or
mov
movlps
jo
or
inc
and
pop
inc
bnd
mov
mov
popf
nop
lahf
scas
aas
adc
pop
pop
sbb
dec
push
jb
mov
push
lret
loopne
cmp
popa
int3
mov
lahf
xor
sbb
clc
push
aad
sahf
or
pop
lcall
leave
mov
sbb
in
sub
cld
cmpsl
loope
push
stc
mov
push
dec
hlt
dec
fidivs
shrl
sbb
inc
mov
mov
inc
xchg
xor
cli
outsl
les
sub
push
es
ja
push
es
jp
outsl
loope
int3
pusha
inc
lock
jl
mov
fmull
push
imulb
push
sbb
pop
pop
int3
push
cmp
ljmp
add
lds
mov
inc
cmp
push
add
jmp
push
sub
xchg
jno
add
int
push
add
adc
xchg
sub
addl
int
mov
cmp
add
into
xor
das
xchg
ljmp
test
jb
pop
or
fsubp
scas
pop
stos
xor
push
test
or
movsb
dec
mov
mov
pop
iret
pushfw
int3
cmp
cmc
pop
adcb
scas
cli
pop
adc
mov
and
mov
shll
idivl
icebp
lret
xor
outsb
cmpsl
xor
fucomip
jb
xchg
insl
js
cs
jne
inc
imul
stos
mov
test
jecxz
and
sub
movsl
sbb
outsb
push
je
idivl
addr16
jno
mov
adc
jo
inc
fucomip
push
jne
dec
in
push
jle
add
pop
roll
repz
inc
into
clc
pop
sbbb
test
xchg
outsl
stos
inc
addr16
or
jmp
cmp
and
repz
inc
fisubl
dec
out
mov
ljmp
cmp
push
cltd
mov
and
in
cld
lock
mov
mov
daa
lret
push
adc
test
std
mov
mov
jae
subl
imul
out
cld
sbb
pop
push
or
in
inc
rclb
pop
icebp
xchg
insl
out
mov
mov
inc
pushf
ret
adc
call
cltd
ret
cmpsb
or
pop
int3
pop
pop
fldl
hlt
mov
cmp
jne
cmp
je
mov
mov
mov
xor
xor
xor
shld
shl
cmp
jne
cmp
je
mov
cmp
je
mov
mov
mov
mov
xor
xor
shrd
mov
shr
shl
or
mov
xor
or
cltd
cmp
jne
cmp
jne
movl
movl
jmp
pusha
into
out
sbb
and
insl
dec
insb
insb
jae
adc
adc
leave
fcompl
mov
sarb
lods
cmovs
rcrl
inc
sub
jmp
mov
scas
jecxz
jle
inc
shll
xchg
push
jbe
lret
jle
pop
mov
out
clc
or
jecxz
or
lcall
add
and
aam
jbe
fstl
cmp
push
jae
mov
negb
in
fbld
cltd
xor
addl
out
dec
xchg
mov
lret
sbb
jae
pop
adc
push
mov
or
mov
or
les
mov
cmp
pop
sub
scas
pusha
lret
stos
mov
daa
int
xchg
lret
push
imul
adc
adc
stc
fildll
mov
mov
pop
notl
out
sbb
dec
and
in
pop
adc
mov
xchg
loopne
jmp
lds
lret
xchg
inc
enter
in
daa
fimuls
dec
std
fs
mov
jecxz
push
in
aad
mov
adc
insl
cld
mov
iret
and
cmp
jne
push
testl
xchg
xor
add
fmul
sbb
dec
aad
out
es
cmpsb
or
pop
movsb
pop
inc
sbb
shl
mov
aam
scas
bound
dec
in
aam
xchg
jo
push
push
pop
mov
inc
insb
stos
mov
test
lret
lock
mov
xor
inc
ss
loop
sbb
inc
mov
adc
into
inc
adc
lret
sbb
jno,pn
frstor
gs
aam
pop
cli
cmc
mov
data16
lods
ja
mov
shl
mov
xchg
mov
push
mov
iret
inc
imul
dec
dec
pop
push
jge
or
push
mov
xorl
aas
dec
add
or
loopne
pop
idivb
xchg
or
fs
mov
add
mov
out
ljmp
enter
push
test
sarb
mov
push
push
jp
movsb
xor
hlt
mov
cli
inc
ds
inc
push
dec
icebp
push
fdivrp
fsts
mov
out
adc
jg
and
inc
push
xor
push
arpl
ss
scas
pop
inc
xor
and
mov
mov
mov
xor
xor
xor
shld
shl
cmp
jne
cmp
jne
movl
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
cmp
jne
mov
mov
jmp
pop
and
fldenv
js
outsb
insb
loop
jo
xor
adc
adc
test
loopne
pop
mov
ss
fsubs
dec
in
sub
dec
mov
jns
inc
fwait
stc
or
sbb
push
in
fists
jbe
loop
arpl
adc
inc
add
mov
pushf
pop
inc
int
scas
lds
movsb
inc
cmpsb
rep
test
xchg
ss
xor
cmovns
fists
call
push
sub
jecxz
std
hlt
inc
pop
dec
clc
xchg
inc
lret
cmp
adc
and
in
sarb
loopne
insl
mov
and
cmp
test
cld
cmp
dec
pop
ret
xor
js
inc
adc
sbb
fldl
cmc
mov
icebp
stc
cmp
inc
dec
jne
lahf
out
pop
outsl
push
fdivrp
xchg
fstpt
mov
fadd
pop
lock
mov
mov
pusha
ldmxcsr
jb
out
sbb
imul
pop
addr16
mov
pop
xchg
in
std
jp
mov
push
adc
pop
stc
lods
mov
int3
pop
xchg
pushf
aad
adc
addr16
rep
mov
ret
aam
loope
xchg
push
xor
sub
loope
push
ljmp
xchg
or
outsb
ds
stc
mov
call
rclb
jnp
sub
mov
cmp
pushf
xlat
shrb
movsl
push
stos
xor
icebp
addr16
gs
jmp
jno
xlat
orl
stos
push
fmuls
sahf
pop
lock
mov
mov
dec
pop
jne
cmpsb
jo
dec
adc
ficoml
add
xor
xchg
pop
jno
jb
lcall
pop
adc
adcb
xor
push
ficoms
pop
in
adc
mov
mov
insb
ret
fwait
and
loop
insb
jne
cmp
mov
sub
sbb
lret
loop
adc
push
jecxz
mov
adc
cmp
roll
xchg
jnp
movsb
sub
std
arpl
mov
shlb
push
call
lock
mov
lahf
xchg
pop
jo
cmp
daa
je
or
pop
jbe
and
mov
sub
jmp
mov
out
addr16
cmp
sub
enter
sub
pop
pop
cmp
iret
sub
xchg
or
std
mov
je
xor
lods
scas
push
push
mov
jnp
lock
lea
cmp
movsl
and
pusha
add
mov
mov
mov
movzwl
mov
and
mov
or
mov
add
or
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
add
and
inc
and
lcall
iret
movlps
mov
pop
pop
lcall
ret
jb
pusha
adc
xlat
leave
cmpsl
insb
popf
sub
sti
xchg
cs
cmc
in
jae
cmc
jle
gs
adc
sbb
ds
push
pop
jg
jne
push
jecxz
les
flds
inc
leave
sbb
sbb
mov
jl
mov
sbb
movsb
scas
cmp
inc
or
jge
xchg
cmc
leave
in
pusha
repz
xlat
inc
lret
mov
lahf
pop
cli
cmp
mov
pop
adc
dec
cmp
mov
mov
gs
push
js
lea
sub
jbe
and
pusha
dec
xor
in
mov
ret
fwait
js
sahf
mov
push
cmp
mov
jbe
mov
fbld
call
daa
ficoms
mov
cmp
cmp
xchg
pop
push
out
push
js
andl
xchg
sub
lea
sarl
lahf
xchg
dec
cmc
push
stos
mov
stos
test
flds
mov
sbb
or
mov
lods
pop
mov
dec
js
jne
xchg
les
loope
mov
subl
adc
sub
jl
sahf
mov
shll
or
ss
or
cmp
adc
push
mov
xchg
arpl
mov
or
mov
shl
mov
and
sbb
out
lahf
int
and
mov
and
outsl
dec
push
clc
xor
sti
inc
push
pop
add
inc
into
cmp
add
cli
in
dec
in
xchg
inc
push
mov
xor
push
mov
xchg
mov
xchg
dec
lcall
xor
fnstenv
outsl
add
pop
cmp
popa
and
addr16
or
insb
sahf
add
mov
jno
push
je
and
fs
inc
and
daa
enter
ret
inc
lods
iret
mov
mov
out
incb
je
aaa
jno
repnz
mov
cltd
push
ret
arpl
dec
jmp
daa
push
pop
lret
adc
fs
xchg
fisubrl
jo
ret
mov
push
mov
jno
ficomps
mov
ret
xor
push
jge
subl
sbb
sbb
testl
jae
dec
aas
mov
fsubrl
lcall
mov
cmp
jo
fbld
jecxz
mov
mov
mov
or
mov
or
mov
sub
mov
sub
mov
cmp
jbe
mov
mov
mov
mov
movzwl
mov
or
mov
sub
mov
or
imul
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
xor
mov
imul
mov
and
mov
and
mov
cmp
ja
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
push
push
lea
push
lea
push
shl
call
pushl
pushl
pushl
pushl
call
mov
mov
shrd
shr
mov
mov
shl
xor
xor
or
mov
mov
mov
mov
shrd
shr
mov
mov
shl
xor
xor
or
mov
mov
mov
mov
mov
cmp
jne
mov
mov
mov
cmp
jne
movb
movb
movb
movb
mov
mov
or
sub
mov
sub
movzbl
movzbl
cltd
idiv
movzbl
or
mov
movb
movb
movb
movb
movb
mov
mov
jmp
les
mov
mov
cmpsl
ljmp
dec
ds
jmp
push
sahf
jbe
jmp
and
mov
leave
push
jnp
mov
pop
and
sbb
js
add
imul
into
cmp
lock
and
adc
pop
dec
sbb
adc
test
sbb
out
aam
cmp
mov
fcompl
iret
push
je
xchg
inc
insb
jp
fwait
dec
adc
jne
int
aaa
push
mov
or
pop
jg
popf
lcall
addl
pop
cmp
cmp
lahf
xchg
arpl
add
add
call
stc
outsb
mov
jb
cwtl
aam
pop
data16
xor
frstor
loope
lock
or
lds
inc
aaa
push
fistl
out
shll
fcmovbe
mov
sbb
lret
jno
cmpsb
mov
jbe
out
in
xchg
dec
aad
and
mulb
add
std
jle
jl
inc
adc
sahf
dec
cld
push
xchg
mov
cmc
mov
insb
test
mov
xorl
jp
mov
or
jb
popa
repnz
mov
movsl
cmpsl
cmpsb
cmp
ds
stc
pop
sub
cmpsl
test
xor
imul
or
imul
popw
pusha
enter
jge
fninit
or
jmp
mov
push
cwtl
or
pop
jmp
js
subl
stos
stc
push
movsb
xchg
xor
test
into
xchg
add
sub
loopne
add
sbb
sbb
mov
lea
je
movsl
xlat
movsb
pop
divb
add
mov
jecxz
adc
pop
xchg
popf
repz
cmc
xor
and
test
push
ret
cmp
mov
add
inc
mov
and
sarl
in
jns
clc
adc
inc
mov
or
jbe
loope
or
stos
mov
mov
in
xor
cmpl
cmpsl
fbld
pop
push
xor
les
repnz
inc
aam
scas
mov
insl
jecxz
mov
scas
sbbl
jae
adc
faddp
cmpb
rcrl
fimull
dec
cmp
aaa
in
push
push
stos
ss
sub
icebp
mov
add
xor
aam
lds
lds
and
adc
mov
sub
js
cmp
fdivl
scas
xchg
pop
insl
dec
and
jbe
or
orb
rorl
mov
movzbl
movzbl
and
mov
movzbl
cltd
idiv
mov
cmp
je
lea
push
lea
call
cmp
jne
cmp
jne
jmp
mov
mov
mov
mov
add
adc
mov
mov
push
push
lea
push
call
mov
push
pushl
lea
push
call
mov
mov
mov
mov
mov
mov
mov
lea
mov
add
movl
movl
mov
and
add
and
jmp
je
adc
cmp
inc
stos
fs
adc
movlps
outsl
dec
jo
mov
dec
and
mov
test
pop
jge
dec
push
sbb
push
sub
popa
sbbl
xor
add
je
xchg
adc
dec
mov
enter
shll
into
pop
jmp
or
pop
sbbb
push
and
push
pop
loop
enter
mov
lock
sahf
mov
inc
add
clc
mov
ds
insb
sarl
lret
lcall
scas
jne
test
int3
addr16
xchg
repnz
push
mov
push
out
jp
mov
jne
fidivl
push
les
repz
dec
mov
dec
jae
jmp
pop
dec
movsb
fnstsw
sbb
lds
mov
cmc
clc
pusha
mov
push
inc
repnz
std
jae
paddusb
fisubrs
inc
in
je
fistps
pop
mov
mov
nop
insl
cmp
sub
sti
jp
jle
pop
sub
popa
mov
aas
xchg
xchg
fs
jmp
test
mov
mov
mov
inc
pop
cli
jmp
lds
iret
popa
pop
xor
mov
jmp
insl
in
mov
ret
mov
mov
inc
push
jnp
aam
shl
and
xchg
out
negb
jecxz
push
sbb
inc
adc
mov
xchg
scas
cmpsl
adc
ja
js
mov
jne
fiadds
xor
into
mov
pop
or
je
fwait
sbb
mov
mov
repnz
push
inc
xchg
xchg
sbb
inc
lcall
aas
insb
int3
xchg
std
insb
fs
out
stc
sub
fdivrl
dec
xchg
sbb
icebp
cltd
lret
movsl
out
pop
loop
mov
jbe
mov
loop
fisubs
test
xchg
stos
or
jne
lods
jmp
ss
ds
adc
out
dec
adc
cmp
and
sbb
mov
inc
ret
jle
inc
cmp
mov
mov
mov
repnz
push
mov
mov
and
push
push
jmp
ds
out
push
sbb
add
dec
and
enter
mov
pop
mov
out
arpl
ljmp
adc
mov
dec
jg
cwtl
xchg
shrb
cld
and
imul
mov
cmp
negl
jne
into
or
ds
lret
dec
xchg
imul
in
mov
add
or
xchg
sub
and
mov
movl
mov
mov
or
add
cmp
je
mov
mov
mov
xor
xor
xor
shld
shl
cmp
jne
cmp
jmp
in
xchg
xchg
or
or
mov
lods
xor
pop
fcoml
adc
subb
ds
sub
fildll
fsts
cmp
aaa
add
stc
outsl
arpl
dec
mov
setg
lods
jb
in
jge
stos
xchg
rcrl
clc
cmp
lods
lds
testb
ret
mov
adc
pmaxsw
fisubl
mov
mov
push
popf
pop
or
xchg
testl
push
xchg
mov
jo
sbb
dec
sbb
stos
xchg
adc
lcall
inc
or
les
and
sarb
jno
xchg
xchg
aad
xor
cmc
inc
cmpsl
or
adc
loop
lods
or
mov
cld
aaa
pop
movsl
fs
dec
cli
dec
lea
fimull
pop
dec
jae
fstl
rcll
xor
or
mov
lock
xchg
dec
adc
jne
out
mov
jg
sti
mov
jg
imul
sub
xor
and
xchg
pusha
call
sub
mov
mov
aad
leave
arpl
push
addl
add
dec
mov
mov
mov
add
mov
xchg
push
in
jnp
das
jg
call
jo
jle
mov
or
lret
xor
pop
or
cs
fcoms
sub
pop
xlat
mov
jmp
mov
pop
pop
pop
and
sbb
icebp
sarl
mov
cld
pusha
xchg
cmpsl
and
sbb
sbbb
lcall
mov
je
mov
rcrl
addr16
pop
inc
pop
js
loop
mov
mov
inc
outsb
lcall
imul
scas
das
push
adc
inc
inc
ja
in
aas
and
sbb
adc
leave
stos
add
sbb
je
inc
in
sub
leave
push
mov
je
mov
mov
sbb
clc
push
push
hlt
adc
jae
push
lret
add
je
lods
mov
pop
xchg
out
dec
xlat
lcall
sub
enter
dec
loop
xchg
or
ja
mov
insb
jge
mov
divl
xchg
jae
dec
stc
dec
xchg
dec
movsl
and
cmpsb
mov
stos
fsubl
xor
adc
test
add
mov
mov
mov
mov
xor
xor
shl
shr
or
xor
xor
jmp
pop
sbb
sbb
and
lret
xor
js
jae
mov
iret
movlps
mov
xchg
mov
push
pushf
in
sti
enter
repnz
add
int
in
out
sarb
pop
fidivs
insl
lods
dec
fcom
cmp
jg
lret
jl
or
sub
sub
fisubrs
xchg
pop
mov
xor
rorb
sti
sbb
xchg
mov
test
sub
stos
push
lods
xor
cmc
addr16
in
dec
mov
adc
aaa
or
mov
ret
sbb
sub
rolb
mov
sub
sbb
andb
xor
les
pop
fwait
push
xor
mov
sub
mov
lret
jp
loop
inc
popa
into
andl
into
insl
cmp
mov
lds
push
fidivrl
jbe
fisttpll
out
jno
pusha
enter
outsl
or
pop
jae
popa
scas
mov
mov
stc
push
mov
xchg
mov
je
out
dec
lret
push
test
xor
pop
in
into
out
mov
int
jno
mov
out
addb
mov
lret
mov
shlb
arpl
and
add
imul
rcrb
aam
bound
mov
mov
sbb
dec
pop
xor
push
cmc
xor
cmpsb
les
out
sbb
inc
mov
sti
sbb
add
mov
sbb
pop
mov
or
in
or
mov
push
int
inc
jae
jl
pop
push
cltd
mov
jns
outsl
stc
inc
into
cmp
push
push
sbb
xor
push
jne
or
adc
call
fdivl
sub
adc
add
cmc
lcall
inc
sub
mov
jb
xchg
test
sub
and
cmpb
callw
adc
jl
in
jmp
xor
pop
sbb
das
push
jle
lods
xchg
adc
or
icebp
xchg
cs
mov
movsb
sbb
inc
ljmp
and
repz
cmp
push
pop
mov
jne
outsl
mov
or
xchg
jp
mov
dec
sub
shll
arpl
xor
stos
push
add
jne
add
mov
sub
or
cmpsb
mov
and
inc
out
pop
imul
xchg
mov
push
mov
faddp
dec
xor
and
cmp
jne
cmp
je
mov
cltd
mov
mov
cltd
shld
shr
xor
shl
or
or
mov
mov
xor
xor
mov
cmp
jne
cmp
je
pushl
pushl
mov
mov
pushl
mov
call
mov
mov
mov
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
push
movl
push
cmpl
mov
movl
not
jmp
mov
je
push
pushl
push
push
call
sbb
sub
adc
add
sub
add
cmpl
mov
mov
not
movl
jmp
movzbl
movl
jg
push
call
andl
xor
xor
andl
mov
mov
sbb
dec
push
movl
sub
movl
xor
movl
dec
mov
xor
add
xor
mov
xor
xorl
div
cmpl
movl
mov
movl
jmp
movl
movl
jl
pushl
call
orl
or
not
sbb
imul
mov
xor
mov
add
mov
and
mov
xor
adcl
jmp
adc
sbb
xchg
pop
pop
cmp
jle
rclb
adc
hlt
lret
jmp
adc
xor
add
mov
push
and
shlb
mov
nop
cmp
xchg
push
mov
rclb
roll
aaa
inc
xchg
mov
inc
dec
ret
loope
pop
in
idiv
xor
outsl
iret
jne
dec
repz
inc
dec
aas
inc
bound
cmc
clc
jae
ss
mov
leave
repz
aam
mov
lods
outsb
adc
push
xchg
lahf
pop
aaa
jle
xchg
adc
sbb
add
not
mov
and
xor
pop
sbb
pop
sub
clc
dec
add
mov
into
fdivl
iret
imul
and
imul
repnz
adc
push
clc
pop
rcrl
leave
xchg
push
add
sbb
das
pcmpeqb
or
jecxz
xchg
lcall
jmp
push
mov
dec
shll
scas
ret
jle
xchg
loope
sbb
repnz
cld
cld
dec
adc
in
nop
frstpm(287
shrb
aad
and
bound
push
jne
sub
sub
sbb
in
gs
lahf
fdivs
ret
rolb
and
pusha
cltd
aam
dec
movsb
movsl
add
and
pop
mov
fmul
call
add
jo
sub
adc
rcl
push
xchg
xchg
gs
sub
cmp
gs
imul
pop
dec
cmp
nop
and
xor
loope
dec
dec
push
mov
adc
loope
aas
sub
addr16
dec
mov
pop
fsubp
out
test
ds
sbb
xchg
inc
jnp
movsl
xorl
ret
inc
push
pop
aad
or
add
mov
push
adcl
aas
push
nop
aas
lock
jle
subb
neg
lea
add
movsl
out
add
repnz
dec
or
jnp
and
adc
int3
xor
sub
sbb
nop
imull
push
es
sub
dec
jmp
sbb
sub
and
sub
mov
lret
out
xchg
and
inc
pop
idivl
add
jae
push
inc
xor
les
mov
subl
outsb
pop
or
jnp
sub
sarb
mov
jnp
and
std
fistpl
pop
ja
inc
stos
in
push
jmp
cli
add
pop
outsb
jg
repz
push
mov
rcrb
cmpsw
je
mov
fsubrl
js
mov
repnz
mov
out
imul
imul
jge
adc
fs
sarl
mov
pop
jecxz
jmp
sbb
xlat
xor
jle
xor
sahf
jp
dec
dec
ss
ja
lds
push
scas
cmp
dec
ss
arpl
dec
cmc
leave
jg
test
sbb
inc
pop
or
cltd
dec
cli
lds
inc
and
add
jne
pop
test
mov
jecxz
notl
inc
sahf
push
push
xchg
fwait
decl
lock
xor
inc
xor
mov
test
add
in
jge
ja
mov
or
or
mov
and
xchg
mov
and
filds
in
or
dec
mov
sub
popa
inc
or
dec
call
vmovaps
fcomi
icebp
sub
adc
mov
movl
sub
movl
add
movl
mov
adc
mov
add
mov
or
xor
xor
imul
mov
and
sub
xor
mov
mov
mov
sub
sub
movl
movl
sub
movl
movzwl
or
movl
mov
sbb
imul
mov
cmpl
mov
movl
jmp
movl
movl
jl
push
push
call
sbb
addl
xor
xor
xor
add
mov
dec
adc
sub
imul
imul
mov
adcl
and
or
not
mov
xor
mov
adcl
mov
sbbl
lea
mov
sub
movl
and
movl
and
movl
cmpl
movzwl
mov
movl
jmp
mov
mov
jne
pushl
pushl
push
call
sbbl
and
sbbl
subl
sub
mov
xor
mov
or
add
jmp
adc
mov
and
xchg
js
sbb
lods
das
into
adc
adc
cmp
add
outsl
movsl
cld
pop
ret
pop
inc
into
in
les
cli
pushf
inc
pop
enter
jo
push
adc
sti
sub
sbb
mov
outsl
mov
andl
jbe
jno
adcb
mov
je
js
lods
sbb
xor
push
rcrl
sub
pop
sub
push
imul
leave
add
movsb
imul
xchg
inc
shlb
lods
je
pop
xchg
frndint
jmp
rclb
sbb
notl
inc
xchg
bound
stos
cmp
push
sub
mov
push
jo
cmp
add
sahf
jb
add
sbb
pop
xor
cmp
mov
addr16
rcr
aad
outsb
cmpsl
jp
scas
les
inc
mov
sbb
inc
es
sbb
gs
popa
gs
fidivl
mov
pop
xchg
or
dec
inc
mov
push
sub
mov
xchg
bound
lods
dec
cmp
daa
xchg
lcall
adc
arpl
mov
and
mov
adc
push
int
out
dec
scas
jmp
jmp
inc
cmp
out
sti
mov
call
test
sbb
gs
pushf
sub
push
bound
mov
adc
pop
roll
shrl
cli
dec
sbb
adc
mov
pop
mov
add
jne
xchg
jg
fmuls
popa
stc
js
orl
les
add
pop
push
pop
xor
ret
mov
out
or
inc
outsl
ljmp
out
fwait
pop
fwait
es
nop
sbb
aaa
addr16
jp
in
adc
xchg
xor
cmp
jo
jne
cwtl
xchg
cmp
setns
movsb
xchg
ret
or
mov
mulb
nop
push
adc
sti
stos
aas
adc
ja
int3
or
pop
push
jbe
lahf
cld
add
sub
jnp
dec
inc
mov
lret
dec
cs
cwtl
sub
jecxz
pop
js
xchg
mov
int
aas
mov
clc
outsl
add
jle
sbb
fwait
pushf
bound
mov
mov
mov
sahf
dec
inc
dec
sbb
xor
push
rorb
mov
lahf
lds
inc
lods
add
lcall
sti
leave
das
mov
sub
rcll
dec
jno
xor
mov
adc
cwtl
test
dec
jmp
rorl
xchg
or
xlat
jge
out
addb
pop
jbe
scas
and
push
jp
adc
jo
xor
arpl
mov
dec
mov
sub
sbb
out
add
cli
adc
shl
push
sahf
scas
imul
xchg
orb
arpl
xchg
jp
insl
pop
fistpll
ds
or
mov
pop
mov
repz
lea
mov
add
xchg
gs
outsl
mov
fisubrs
dec
sbb
push
pop
es
xor
stos
ja
addb
jno
ret
das
pop
cmp
push
std
inc
adc
int
clc
cmpb
adc
gs
sti
xchg
icebp
jns
adc
mov
int3
mov
mov
or
lahf
adc
push
fst
mov
or
sub
add
adc
xor
cmpl
not
mov
not
movl
jmp
movl
movl
jae
push
push
call
or
or
adc
notl
adc
xor
mov
or
movl
movl
movl
cmpl
mov
movzbl
movl
movl
jmp
mov
jg
pushl
push
push
pushl
push
push
push
call
adc
xor
mov
and
mov
dec
sub
and
mov
sub
add
xorl
mov
sbbl
sub
cmpl
movl
mov
mov
jmp
movl
jne
pushl
call
xor
or
add
mov
xor
mov
mov
sbb
and
xorl
mov
xorl
lea
mov
xor
mov
or
cmpl
movl
mov
mov
jmp
mov
je
push
pushl
call
and
andl
adc
mov
or
not
sbb
sub
mov
cmpl
mov
mov
mov
mov
jmp
movl
mov
jae
push
pushl
call
mov
adc
mov
xor
movl
movzwl
xor
and
orl
movl
and
movl
cmpl
mov
mov
jmp
movl
jb
push
push
push
call
adc
adc
add
or
mov
add
mov
or
adc
mov
add
add
movl
imul
mov
imul
or
xor
mov
div
or
sub
mov
cmpl
movzbl
not
jmp
mov
jb
pushl
pushl
push
call
xor
or
and
mov
inc
sbb
add
xor
add
mov
and
xor
mov
mov
and
movl
add
movl
movzbl
or
movl
movzbl
or
mov
add
mov
subl
xor
xorl
div
or
imul
add
cmpl
mov
mov
movl
jmp
movl
mov
jbe
push
push
pushl
push
pushl
call
sbb
addl
add
add
adcl
adcl
add
mov
xor
cmpl
mov
mov
movl
mov
jmp
mov
movl
je
pushl
pushl
call
movzwl
xor
movl
xorl
andl
movl
add
sbbl
xor
jmp
xchg
fldenv
push
pop
xchg
pop
outsb
bound
mov
mov
adc
lcall
sahf
jbe
jg
xchg
adc
gs
jne
fucomp
xor
data16
sti
push
test
cmp
cmp
ret
jno
popf
call
mov
inc
and
insb
push
notb
mov
ja
notb
enter
insb
out
shrl
fisubrs
rol
xabort
inc
stos
enter
mov
sub
push
add
addr16
jl
jge
push
scas
jle
cmpsb
ret
adc
out
or
sbb
cmpb
movsb
js
jp
sub
arpl
xor
lret
mov
jno
fiaddl
or
adc
dec
lods
movsb
iret
push
or
addr16
add
imul
neg
jge
mov
and
mov
sbb
xchg
adc
jmp
test
xor
or
lea
xor
cmp
or
jne
dec
push
loop
js
enter
gs
aam
cmp
ja
scas
fdivs
sub
mov
add
push
outsl
mov
fadds
cs
int
and
fstpt
sub
pop
jbe
je
iret
andl
pop
dec
fadds
lcall
icebp
cmp
js
sbb
ljmp
jge
mov
ljmp
stos
jns
fidivs
jae
ror
sbb
jp
adc
in
sub
mov
sub
hlt
xlat
push
cwtl
adc
fbstp
jle
in
shr
push
push
xor
mov
into
xor
cmc
and
mov
cltd
cmp
cmp
movsl
mov
in
and
loop
mov
cmp
stos
rcl
fs
sahf
outsl
mov
aam
orl
dec
xor
adc
gs
dec
mov
adc
or
push
pop
push
add
into
mov
add
sbb
out
add
mov
mov
and
js
sti
addr16
les
scas
rcr
cmc
data16
mov
addr16
inc
adc
push
in
arpl
sub
lods
stos
aam
dec
rcrl
cmp
cmp
movsb
movsb
ja
push
fs
mov
stos
arpl
and
je
and
daa
mov
bound
lods
fmuls
inc
ror
mov
sub
jae
mov
fisubrl
ret
mov
mov
mov
fisubs
pop
iret
addr16
push
fstpt
stc
iret
jmp
into
mov
popfw
shlb
push
lock
shlb
pop
push
xor
dec
shlb
xchg
cmp
inc
sub
fstpt
dec
mov
and
gs
sub
push
mov
push
mov
pop
mov
lods
add
loop
vmread
in
sub
jb
out
loop
inc
mov
es
jp
mov
xor
inc
inc
int
imul
mov
mov
push
mov
push
outsl
cmp
push
adc
cs
shlb
loopne
cmp
dec
sbb
mov
ljmp
aad
inc
add
outsb
push
rclb
stos
or
add
ret
xor
or
add
xor
sub
daa
mov
daa
lds
jb
xor
mov
shlb
data16
mov
xchg
dec
cmp
pusha
gs
push
xchg
add
nop
or
out
push
dec
out
dec
dec
jb
push
les
hlt
loop
loopne
fsubrl
jnp
mov
div
subl
xor
mov
adc
movl
movl
movl
mov
and
mov
addl
sub
dec
shr
sub
mov
imul
cmpl
movl
mov
mov
jmp
mov
jne
push
call
orl
adcl
movl
xorl
adcl
addl
mov
addl
and
cmpl
movl
movl
jmp
movl
jl
push
pushl
push
push
push
push
pushl
pushl
push
push
pushl
call
xorl
sbb
andl
sub
andl
orl
xor
or
adc
mov
andl
sub
mov
movl
cmpl
mov
mov
movl
not
jmp
mov
jbe
push
call
dec
xor
orl
add
mov
mov
sub
adc
adcl
movl
mov
cmpl
mov
movl
movl
jmp
movl
mov
jae
push
push
pushl
push
call
subl
mov
adc
mov
movzwl
or
negl
and
adc
and
jmp
insb
cmp
push
daa
aaa
mov
test
pusha
mov
adc
stc
xchg
lret
pop
push
fs
mov
jns
jl
adc
outsl
pxor
xchg
movsb
adc
es
dec
or
sub
dec
xacquire
ret
add
add
cmpsl
lods
mov
xchg
cli
mov
inc
les
jmp
sub
popa
jnp
test
movsl
xchg
mov
xchg
shlb
les
dec
mov
and
popf
push
cmp
shrl
push
dec
jle
aad
ljmp
fildll
stos
xor
lea
or
inc
lock
inc
or
lea
arpl
out
xlat
out
out
dec
imul
fwait
cwtl
fsub
cltd
and
mov
lcall
and
fst
mov
repz
jg
sbb
or
lods
lods
fsubrs
rcll
out
adc
xchg
sti
fmull
outsb
daa
inc
loop
into
add
ficompl
imul
setne
mov
insb
out
push
out
mov
and
ljmp
push
outsb
sbb
mov
mov
mov
daa
inc
jae
sbb
lock
rdtsc
imul
sbb
inc
adc
jo
or
fsin
lods
stos
nop
stc
dec
jp
adc
add
mov
mov
jae
sbb
shr
push
out
mov
inc
mov
push
call
jnp
jmp
loopne
repz
cmp
push
rol
push
and
ss
pop
out
das
popf
mov
into
out
pop
xchg
cs
xlat
out
xor
or
and
push
cmp
dec
jae
pop
test
das
mov
push
inc
xor
xchg
hlt
mov
loope
stc
or
aam
stos
add
mov
inc
sbb
xchg
adc
cltd
dec
cltd
and
dec
fwait
into
mov
push
xor
sub
jo
out
cmp
stos
push
inc
jle
mov
arpl
mov
icebp
mov
pop
xor
outsb
cmpsl
test
xchg
popa
mov
xor
sti
mov
and
ljmp
add
mov
inc
ja
std
fcompl
jp
sub
arpl
push
cwtl
pop
adc
push
pusha
add
aaa
xchg
jns
cmpsb
jno
addl
into
mov
push
data16
iret
xor
aas
push
dec
jmp
pushf
xchg
xor
jecxz
pop
push
and
jae
adc
negl
iret
add
scas
push
push
lock
jmp
xchg
arpl
popa
sub
sub
ret
pop
push
ret
pop
out
and
mov
sahf
out
sub
jmp
cli
shlb
dec
jne
and
xchg
icebp
mov
je
mov
add
jg
test
and
addr16
inc
fidivl
cmp
mov
mov
roll
push
incb
pop
cmpsb
int3
in
out
mov
cwtl
inc
js
xor
lea
movsl
pop
adc
shr
add
cmpsb
icebp
movsb
push
pop
jnp
inc
xchg
cmp
push
lods
das
push
push
and
push
jge
testl
lret
xor
shlb
lds
popa
xchg
push
mov
fmull
jp
xor
sub
jno
dec
adc
and
push
mov
movsl
sub
fwait
rolb
daa
mov
push
or
inc
mov
or
xor
sub
mov
cmpl
notl
mov
jmp
movl
mov
jne
push
pushl
push
push
call
movzbl
adc
mov
xor
mov
and
subl
adc
add
movl
or
jmp
xchg
pop
dec
or
cltd
push
pop
jecxz
mov
mov
adc
cmpsb
or
cmpsl
inc
ds
insb
daa
mov
xor
popf
stc
adc
jno
nop
sub
icebp
test
mov
mov
mov
and
xchg
mov
sub
sbb
mov
cmpsl
popf
test
cld
xor
push
mov
mov
xchg
xchg
out
and
xchg
push
push
adc
fwait
add
sahf
int
mov
add
rcrb
addb
cmpsl
aaa
out
push
andl
stc
dec
bound
mov
or
clc
fldcw
shl
cs
add
sahf
in
sub
sbbl
jl
mov
jp
cmp
cmc
or
fisubs
mov
sarb
sub
in
or
pop
pop
cmp
add
mov
mov
push
jmp
out
mov
test
mov
and
push
dec
adc
loop
das
dec
dec
add
out
push
dec
loopne
rclb
adc
lock
and
adc
sahf
dec
lock
mov
or
psubsw
mov
inc
mov
call
cli
loope
jb
mov
rcrb
mov
push
fistpll
cmp
aad
sub
jge
sub
arpl
shlb
fadds
cmpsb
push
mov
adc
clc
and
and
scas
mov
lock
push
and
mov
dec
shlb
pop
adc
mov
pop
pop
nop
or
test
aas
xchg
inc
mov
push
jge
sub
cmp
imul
mov
mov
into
pop
lds
push
jge
out
jg
cmpsb
or
jae
sub
xor
test
hlt
inc
ljmp
dec
lods
sahf
ret
mov
push
cld
jns
cmp
pop
je
test
dec
jo
cmpsb
adc
inc
mov
inc
pop
push
stc
xchg
mov
and
fnsave
mov
dec
pop
int3
and
inc
inc
adc
pop
jle
jbe
jle
in
mov
add
ficoml
mov
adc
std
xchg
mov
les
mov
daa
sarl
hlt
adc
mov
notl
dec
adc
xor
push
call
mov
fsubrs
push
orl
scas
push
adc
xlat
add
shld
pop
mov
ror
jbe
and
jne
push
jecxz
inc
xchg
push
inc
sbb
nop
sbb
xchg
jecxz
inc
test
adc
and
out
out
enter
and
pop
ss
xchg
leave
xchg
or
sahf
test
push
loop
ret
sbb
mov
cltd
and
aam
in
mov
cmpl
pop
dec
sbb
mov
stos
sarb
dec
or
cmc
jbe
jle
aas
neg
int
jns
imul
mov
push
jne
fistpl
or
inc
mov
aad
call
lret
xchg
push
sbb
inc
jo,pt
mov
into
cs
aas
cmp
push
xchg
sbb
mov
cmp
push
roll
lds
sub
mov
idivl
repz
pop
orb
mov
mov
out
aad
in
sub
lea
subl
cwtl
or
repnz
jle
lahf
test
ja
mov
cmc
inc
add
test
pushl
bound
add
add
jle
add
inc
test
insb
add
sbbl
movl
mov
mov
sub
xor
movl
or
movl
movl
cmpl
mov
movl
mov
movzbl
jmp
mov
jb
push
call
sub
adc
and
add
movzwl
and
mov
mov
add
mov
sub
cmpl
movl
mov
jmp
mov
jne
push
pushl
call
sbb
mov
add
and
or
and
andl
mov
mov
add
mov
imul
cmpl
mov
mov
mov
mov
jmp
movl
movl
jbe
push
push
push
push
pushl
call
sub
dec
mov
sub
or
adc
orl
add
imul
mov
or
dec
mov
lea
adcl
push
call
add
mov
add
mov
imul
add
and
mov
mov
xor
sub
add
xor
mov
andl
div
cmpl
notl
movl
movl
jmp
movl
movl
ja
push
push
pushl
pushl
call
xor
xor
and
mov
or
sub
mov
or
mov
inc
xor
xor
add
and
mov
movl
mov
and
mov
movl
and
movl
addl
movl
cmpl
mov
mov
mov
jmp
mov
jg
pushl
call
mov
adc
sbb
mov
adc
or
movl
xor
movl
andl
movl
orl
movl
xorl
movl
sub
movl
movl
movl
sbb
movl
mov
mov
mov
cmpl
mov
mov
jmp
movl
ja
pushl
push
push
call
or
sbb
adc
movl
cmpl
mov
movl
mov
jmp
mov
ja
push
push
pushl
call
and
and
incl
mov
and
not
and
mov
adc
mov
cmpl
notl
mov
movl
jmp
movl
jbe
push
push
call
sub
xor
adc
mov
mov
sub
sbb
sbb
and
xor
sub
sub
cmpl
mov
movzbl
mov
jmp
movl
jg
push
pushl
push
call
add
mov
xor
add
sub
or
xor
add
mov
sub
or
notl
sub
adc
xor
imul
mov
sbb
lea
mov
xorl
mov
neg
mov
mov
movl
xor
adc
add
or
mov
xor
lea
and
xor
add
sbb
mov
mov
cmpl
movl
mov
jmp
movl
movl
je
push
push
push
call
subl
sub
adc
sub
or
sbb
sub
movl
add
mov
cmpl
movl
mov
mov
not
jmp
mov
jb
push
call
xorl
sbb
add
add
xor
add
movl
sub
movl
adc
movl
movl
cmpl
movl
movl
jmp
movl
not
jle
pushl
call
andl
sub
xor
mov
adc
or
and
mov
cmpl
not
movzwl
mov
jmp
movl
jl
pushl
pushl
call
add
neg
or
adc
adcl
sub
mov
and
mov
xor
xor
adcl
mov
adcl
call
cmpl
mov
mov
movl
jmp
movl
movl
ja
push
call
adcl
xor
xor
or
and
or
mov
mov
mov
mov
xor
xor
mov
call
or
or
jmp
sbb
adc
cli
sbb
push
xchg
ss
lods
adc
adc
stc
mov
mov
push
stos
mov
sbb
loop
ds
inc
push
pop
lock
push
int3
jge
pop
stos
add
fwait
cmp
cmc
cmp
aaa
popa
test
inc
outsb
popf
mov
loop
jge
cs
sub
add
shlb
jecxz
dec
movsl
pop
inc
enter
mov
clc
xlat
mov
sbb
mov
lahf
fistpl
jp
add
lcall
cmp
pop
adc
jmp
loopne
pop
sahf
sti
enter
mov
sub
loope
dec
int
and
andl
std
sbb
inc
pop
pop
test
rep
and
fwait
adc
shll
jnp
cmp
xchg
mov
inc
sti
imul
inc
mov
sti
cmp
push
fs
and
mov
rclb
cmpsb
test
push
xor
std
add
adc
sub
xchg
fs
mov
fsubl
xor
jns
bnd
mov
orl
cmp
mov
mov
jmp
cmp
add
push
dec
int
jmp
aam
scas
or
inc
mov
push
jg
or
or
pop
pop
adc
pop
push
faddl
and
inc
pop
pop
repnz
sub
xchg
sub
fistpl
movsb
es
mov
shrl
scas
sbb
add
rol
mov
aad
inc
dec
jecxz
xor
insb
mov
enter
xor
mov
adc
xchg
loope
push
lret
mov
sub
xchg
into
fldcw
lods
mov
loope
and
mov
sbb
nop
jbe
rorb
mov
cmp
sbb
lods
inc
and
mov
cwtl
push
pop
mov
jno
xchg
sahf
dec
push
loope
mov
adc
popa
jl
js
loope
ror
inc
hlt
xchg
mov
lret
mov
sub
into
cwtl
inc
jae
loopne
sub
xchg
iret
outsb
fcmovne
mov
mov
sbb
sbb
mov
xorb
xchg
xchg
into
cwtl
lret
dec
adc
cli
and
rcr
lcall
add
cmpsb
add
popf
divb
movsl
push
dec
cmp
sbb
mov
cmpsb
pop
sbb
jmp
js
mov
popf
cmp
or
cld
outsb
mov
mov
ret
mov
sbb
push
mov
in
ret
mov
je
imul
dec
jae
push
fidivrs
call
addr16
push
cmc
or
sbb
fcoml
das
xor
int
adc
stc
sbb
xchg
and
dec
ret
cli
shrb
sub
icebp
das
xorl
nop
stos
insb
push
dec
pop
lea
andl
dec
repnz
push
mov
mov
icebp
fidivrs
sub
adc
push
fwait
pop
inc
adc
sbb
aaa
and
subl
fmull
and
mov
rcl
or
test
xor
inc
jno
cli
cmp
ljmp
js
out
inc
adc
mov
xor
sti
mov
dec
dec
incb
icebp
daa
dec
mov
mov
xor
xor
jmp
or
mov
mov
mov
call
movsb
adc
adc
adc
mov
xchg
and
inc
lods
sbb
dec
ret
or
test
and
cmp
divb
xor
fdivrl
mov
mov
mov
push
cmpsl
rol
loopne
sbb
push
cltd
sbb
outsl
cmpsl
add
in
ljmp
data16
lds
lcall
sub
inc
inc
jns
dec
add
sti
adc
push
or
pop
jmp
jo
test
mov
add
mov
xor
lret
jb
scas
pop
jg
xchg
ficoms
pop
mov
ficompl
inc
jbe
test
jo
out
rorb
cmp
dec
jb
push
popa
ret
inc
scas
pop
mov
lds
push
cvtpi2ps
xchg
xchg
lret
push
scas
xchg
aaa
mov
in
cs
and
dec
sbb
pushf
sarb
pop
ret
jne
xor
dec
pop
aas
sub
push
lret
pop
adc
pop
jnp
sub
mov
push
mov
mov
in
ret
mov
cmp
scas
lds
clc
lock
push
aaa
xchg
xchg
dec
sub
test
faddl
mov
cmpsb
cmp
inc
sub
int3
fnstsw
xchg
pop
testb
xchg
cmpsb
cmp
xchg
aaa
push
mov
imull
in
push
shl
call
daa
pop
clc
daa
pop
adc
xchg
jl
lret
xchg
loopne
sahf
ds
xor
fnstsw
push
xchg
arpl
mov
cs
mov
nop
bound
lea
out
or
rolb
pop
jo
inc
rcrb
test
mov
sbb
cmp
push
lcall
dec
xor
jmp
testb
jae
inc
pop
or
push
or
movsb
mov
push
pop
daa
cmp
push
addr16
sbb
mov
jne
xchg
mov
xlat
mov
das
pop
push
ret
push
sub
dec
inc
ljmp
jle
pop
out
or
dec
les
lea
scas
movsb
out
pop
int
enter
dec
fsubs
sbbb
and
ret
sahf
adc
sub
mov
fnsave
sbb
loopne
out
jnp
sbb
push
ret
push
ret
dec
cmpsl
xor
dec
mov
xchg
cmp
xor
sub
adc
jns
in
mov
andb
repnz
mov
fadd
xchg
and
cmpl
js
jmp
sub
orb
aaa
lcall
mov
xlat
clc
push
push
push
cltd
pop
and
jbe
sub
pop
jl
pop
hlt
inc
imul
shlb
in
mov
imul
xor
jmp
movsb
or
addr16
pop
cltd
pop
sbb
mov
cld
fidivl
rcrb
dec
dec
mov
xor
fwait
movl
stos
mov
mov
cmp
cmpl
xor
shll
adc
mov
mov
call
lret
pop
jmp
adc
cli
nop
xchg
push
lret
nop
jp
sbb
cs
jecxz
mov
mov
xchg
in
lods
scas
or
sub
mov
jb
addr16
mov
pop
and
loope
decl
decl
decl
incl
lret
add
add
inc
incb
cmp
ds
mov
stos
rcrb
das
mov
sbb
push
inc
sti
pop
and
fadd
sub
sub
mov
lods
data16
push
or
mov
mov
bound
xor
jecxz
nop
xchg
insl
add
dec
js
flds
jae
and
mov
lock
icebp
cmpsb
push
xor
je
mov
lea
lcall
mov
push
inc
imul
fisttpl
mov
aad
jle
inc
xorl
push
mov
sub
fidivrs
and
pushf
es
or
jnp
fsts
adc
and
data16
out
das
outsb
sub
inc
inc
mov
fidivl
sahf
sahf
sbb
bound
push
cmc
xor
sbb
push
cmpsl
dec
jp
repz
xchg
mov
adc
call
out
fxch
mov
imul
or
or
cltd
and
ret
mov
aas
sub
add
dec
call
ret
jp
int3
stos
fsubrs
mov
mov
jmp
dec
mov
pushf
cmpsl
setp
mov
jbe
ficomps
imul
out
or
jecxz
dec
pop
add
cltd
pushf
inc
jle
sbb
popf
in
push
xchg
cmp
xor
push
imul
push
jae
pop
data16
sub
imul
mov
es
push
fcmovnbe
jle
fcoms
jb
pushl
push
insl
inc
adc
xor
jno
pushf
mov
lock
sahf
sahf
aaa
mov
aaa
pop
sub
or
push
cs
addl
pop
enter
clc
clc
jmp
aad
fs
scas
gs
lods
gs
push
xor
cmp
sbb
xor
mov
pop
xchg
xchg
adc
imul
scas
nop
pop
push
ret
push
adc
lcall
mov
int3
and
sbb
addr16
jne
stos
push
in
insb
int3
add
call
mov
add
fstpt
rorb
fimuls
outsl
push
mov
mov
shrb
xlat
leave
sbb
cwtl
mov
addl
jbe
popf
adc
out
shll
in
call
xchg
jne
fucomip
sbb
add
mov
cmp
inc
or
dec
or
sub
adc
lahf
test
lock
cmpsl
cld
cmp
ret
sub
jno
mov
jne
mov
mov
cmpsb
rcl
push
jbe
mov
or
mov
leave
fimull
jecxz
aaa
lahf
gs
fidivs
pusha
lea
pop
jmp
and
call
fdivl
sti
inc
cmp
out
push
xor
mov
pop
divl
push
inc
es
jne
scas
sub
stos
jnp
or
es
lret
gs
iret
outsb
es
cmp
jnp
or
xchg
scas
xor
add
inc
ret
lds
repz
fwait
xchg
fcoms
loopne
lret
push
dec
push
adc
in
fs
std
ss
lock
cs
dec
sbb
push
clc
fimuls
add
xchg
std
mov
mov
test
push
jne
cmp
push
das
das
js
sbb
fsts
mov
fcmove
jge
adc
push
js
mov
xchg
jl
or
mov
and
je
jo
rolb
jmp
jge
jmp
cmp
mov
js
cld
ljmp
adc
adc
ret
jmp
xchg
sub
pop
movsb
jp
push
inc
repz
add
add
xchg
push
ret
ds
push
rcrl
or
out
mov
divb
add
cmp
outsl
insl
lcall
cmpl
movhpd
xor
sub
retw
das
int
add
cwtl
repnz
xor
mov
out
lcall
cmp
inc
inc
add
lods
je
pop
push
sub
loope
xchg
push
pop
hlt
out
ficomps
je
loop
or
outsl
pop
and
clc
es
or
stos
jb
ret
movsb
xorb
lods
mov
add
sbb
or
adc
sub
mov
pop
and
fdiv
ds
ds
add
jecxz
outsl
mov
outsl
fildll
icebp
cmp
jmp
jne
mov
fs
dec
mov
cmp
movsb
popa
loop
pop
xchg
mov
pop
lahf
xchg
xlat
mov
sub
xor
jb
imul
jmp
push
test
jno
mov
jge
and
dec
cmp
adc
into
sarb
aam
popa
push
rcl
scas
push
mov
stc
mov
adc
or
dec
lret
and
cli
and
arpl
hlt
xchg
loop
mov
int3
xchg
push
sarb
mov
lods
push
mov
jge
aaa
or
mov
push
inc
and
sti
add
lret
adc
dec
and
imul
and
sbbb
pusha
mov
and
cmpsb
xchg
ret
lahf
and
push
cmp
jmp
imul
jnp
add
jns
mov
cwtl
imul
dec
pushw
and
jecxz
negl
fsubrl
ficoml
jmp
pop
sub
loop
aam
mov
lods
dec
rorl
out
mov
xor
dec
test
or
sub
mov
lods
lock
shll
mov
xor
lods
mov
scas
out
pop
xchg
xlat
push
imul
sbb
aas
sbb
ret
jecxz
xor
loop
bound
cli
cmp
popf
sub
sahf
and
loopne
jmp
inc
xchg
sbb
lret
push
test
movsl
inc
enter
xchg
bound
push
push
pop
add
mov
lods
pop
jle
jmp
fs
out
ss
cmpl
sbb
call
mov
lods
mov
xor
imul
and
pop
xor
clc
mov
and
xchg
aam
dec
dec
add
lcall
fcmovnbe
aam
sbb
in
jecxz
cwtl
pushf
or
out
mov
dec
test
clc
sub
push
ret
dec
pop
in
jo
sahf
daa
adc
cmpsb
or
gs
inc
repnz
push
int
popf
xchg
push
adc
mov
inc
jns
lret
sub
xchg
mov
les
call
insb
stc
in
push
fsts
push
mov
or
dec
or
test
mov
dec
addr16
mov
dec
lea
int
gs
mov
arpl
cmp
repnz
push
repnz
mov
lret
push
in
sbb
loop
test
std
decl
loopne
pushl
add
mov
or
mov
or
push
push
push
push
call
mov
cmp
jne
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
xor
jmp
inc
fwait
pop
dec
sbb
fwait
lds
movsb
js
xchg
adc
adc
ljmp
mov
push
ds
jnp
repz
daa
scas
push
repnz
sbb
lods
sbb
dec
inc
or
divps
xlat
mov
sar
mov
int3
or
int
fmulp
xchg
int3
inc
sbb
xor
and
movsl
stos
in
mov
add
insl
mov
fadd
jg
xor
inc
fxch
add
jo
mov
or
int3
clc
cmpsb
lock
fdivrl
mov
sahf
push
pop
stc
add
xor
cwtl
stos
or
sbb
xor
cmpsl
jnp
inc
dec
cmp
lods
dec
cmp
hlt
jno
fnstsw
xor
mov
mov
sub
add
xor
cmpsl
sbb
push
pop
cmp
lea
xorb
and
mull
popf
loop
pop
mov
lea
mov
aas
adc
jne
sahf
sub
daa
stos
push
and
dec
push
xorb
jbe
fs
insl
adc
mov
lcall
lock
xchg
xchg
std
sbb
loopne
cmp
jo
add
or
mov
mov
or
sbb
adc
mov
pop
aad
pop
pop
mov
and
pop
push
pop
loopne
repz
xchg
fldlg2
imul
cltd
jmp
and
dec
test
push
adc
add
add
sub
jp
xchg
aas
or
jnp
inc
mov
addl
mov
mov
sub
decl
jb
mov
xchg
sbb
dec
fmulp
ret
mov
push
add
dec
test
test
fldenv
lahf
sub
mov
iret
data16
dec
cld
sbb
sub
mov
xchg
xor
hlt
lods
lds
mov
lods
dec
push
inc
in
fisttps
fsubs
pop
mov
jno
and
mov
fsubrl
mov
mov
jno
cltd
aad
and
push
push
inc
data16
movhps
xor
aam
dec
in
sti
mov
lock
cmc
rorb
iret
push
cmpsl
inc
cmp
std
pushf
sbb
jnp
mov
xchg
push
cmpsl
sub
mov
sbb
je
shll
loop
mov
stc
dec
insl
call
push
imull
push
push
push
push
and
mov
or
sub
bound
xlat
in
pop
jle
mov
and
rcrl
int
imul
aam
or
inc
fcom
xchg
lods
gs
sar
scas
popf
fucomp
mov
in
lcall
js
mov
dec
xor
clc
int
outsl
sti
mov
dec
inc
lret
icebp
cmp
in
push
add
fxch
out
popa
jno
rorl
or
inc
jne
dec
outsl
dec
cmp
push
lods
inc
mov
adc
js
iret
cmc
dec
pusha
sub
and
cmp
rolb
fwait
data16
adc
negl
push
and
mov
dec
fnstcw
inc
mov
stos
mov
or
std
mov
jl
popl
mov
lahf
scas
pop
into
daa
adc
or
mov
mull
mov
std
and
std
or
sub
inc
add
cltd
into
sbb
lahf
ret
aas
add
inc
sti
mov
adc
xor
pop
das
mov
dec
hlt
jmp
cld
dec
sahf
rorb
or
subl
ds
ret
loop
repnz
jmp
sahf
pop
pop
adc
lahf
sbb
lods
mov
adc
mov
push
imul
push
pop
sbb
push
dec
shr
cmp
test
repnz
inc
bound
xlat
dec
jle
iret
fstps
add
jmp
ljmp
aas
cs
cmpsb
hlt
dec
add
stc
sti
sub
std
inc
xchg
xor
test
lds
dec
push
jg
ja
in
adcl
push
mov
push
movsl
pop
jge
repz
jb
negb
ret
sub
dec
xchg
pop
push
sahf
mov
xor
in
xchg
int
clc
mov
in
jns
lea
test
inc
mov
jb
push
es
sub
jg
addr16
rcr
sub
adc
or
scas
cmp
mov
and
xor
js
pop
scas
imul
push
mov
out
repnz
mov
ja
sbb
sbb
mov
lret
fs
stc
push
jb
scas
fldt
push
add
push
leave
imul
sub
mov
add
in
loopne
aas
pop
imul
mov
fldenv
std
xchg
jno
push
xchg
mov
enter
pop
lret
push
addr16
rcr
daa
repnz
add
pop
jp
push
dec
mov
jl
stos
adc
jmp
and
xor
frstor
cmpsb
mov
or
test
inc
jp
ret
push
mov
mov
inc
mov
cmpsb
jp
pop
push
dec
cwtl
cs
sub
jno
je
pop
push
scas
andl
js
cmp
jle
sahf
cmp
xchg
in
arpl
jmp
cwtl
ds
rcll
dec
jmp
dec
xor
dec
pop
jl
lods
sbb
pop
movsb
xchg
movsl
and
sbb
int3
into
aad
mov
pop
lds
xor
jbe
xchg
stos
sub
and
mov
iret
adcl
inc
das
rorl
dec
mov
and
sbb
aaa
mov
adc
mov
xorl
push
cmpsb
jmp
or
adc
enter
dec
fmuls
mov
jo
outsb
sbb
jle
pop
outsl
sti
pop
out
mov
int3
lcall
call
rol
movsl
outsb
push
xchg
or
cmc
mov
sti
xor
imul
loope
sub
scas
mov
dec
push
push
jge
sub
mov
dec
js
pop
fidivrs
pusha
jnp
push
xor
dec
mov
push
xchg
pop
or
mov
stos
pusha
in
out
lods
subb
mov
mov
stos
cwtl
je
mov
mov
nop
sub
testw
mov
rorb
jne
mov
jl
jmp
cwtl
jle
fs
adc
and
jmp
stos
add
mov
mov
cli
adc
xor
push
in
or
lahf
push
mov
jb
nop
and
mov
xlat
and
and
ljmp
js
cli
std
movsl
xor
inc
cmp
leave
in
sub
stos
sbb
test
and
fstp
push
mov
add
pop
sbbl
jbe
out
jecxz
in
pop
xchg
mov
add
pop
jbe
lods
les
sub
aaa
push
push
call
mov
mov
mov
mov
xor
xor
mov
mov
mov
call
or
mov
or
push
push
push
push
call
mov
jmp
jmp
lea
mov
mov
movl
mov
jmp
mov
sbb
lahf
cmp
stc
jle
adcb
xchg
faddl
or
daa
movsb
push
push
loop
jo
cmp
dec
movsl
xchg
fsubs
cli
iret
mov
cmp
loop
and
inc
mov
popf
mulb
mov
aas
jo
movsl
jge
lea
mov
rorl
sbb
mov
movsb
imul
out
cmp
ret
pop
gs
clc
es
rcll
iret
lods
mov
xchg
jge
mov
mov
outsb
cli
xchg
or
mov
mov
mov
pop
repnz
fucomi
adc
mov
scas
xchg
in
das
or
je
mov
sbb
or
sbbl
adc
mov
pop
or
mov
aaa
add
incl
outsb
mov
div
or
xor
iret
add
jg
push
mov
test
xor
push
pop
mov
mov
ss
sub
rcrb
jb
xlat
sahf
inc
mov
bound
inc
adc
jae
xor
shll
or
imul
mov
adc
mov
stos
aaa
lods
ljmp
jo
rclb
leave
inc
dec
data16
pop
or
or
fucomip
dec
fistpl
xor
push
imul
sub
lds
push
xchg
mul
mov
pop
xlat
pop
mov
push
jns
fstl
inc
push
ret
pop
repz
mov
inc
add
negl
lahf
subb
sbb
push
call
jo
aas
xchg
inc
insb
push
cld
imul
repz
out
pushf
scas
dec
popf
dec
pop
frstor
xchg
inc
pop
sub
rcrl
mov
jbe
imul
sub
hlt
push
test
push
mov
pop
inc
repnz
aas
sti
jecxz
mov
ja
and
push
sub
sub
pusha
dec
sbb
insb
or
in
out
jbe
lods
cmp
iret
shlb
jg
dec
jno
ds
in
enter
and
inc
neg
enter
mov
jge
mov
jbe
notl
mov
sti
or
es
push
adc
ficompl
pop
add
je
mov
inc
adc
cmp
scas
xorb
adc
scas
or
sbbl
push
and
loope
mov
push
cmp
iret
adc
and
mov
sub
or
test
xchg
xchg
cwtl
pop
add
addr16
movsl
and
leave
xor
pop
sub
mov
adc
jle
inc
aad
rcr
int3
ficompl
jno
xchg
inc
test
shrl
outsb
loope
rcl
jp
insl
and
sti
dec
xchg
andb
push
stc
scas
addr16
inc
mov
push
insl
imul
add
nop
inc
pop
js
dec
pop
inc
push
out
inc
lcall
sbb
mov
adc
push
push
lock
mov
rcrl
xor
pushf
insb
in
hlt
add
xchg
push
rcll
push
sub
icebp
xchg
cs
jl
push
inc
inc
xchg
iret
xchg
stos
ss
dec
sub
bound
lods
in
push
out
sub
cmc
or
test
mov
xlat
sub
inc
shl
ljmp
je
hlt
dec
test
sahf
lcall
lea
icebp
sahf
lcall
rorl
mov
mov
jmp
stos
cwtl
dec
pop
ds
lcall
frstor
stos
adc
adc
inc
jmp
jo
push
add
lcall
insl
mov
add
in
scas
rdtsc
add
dec
mov
sbb
std
stc
push
stos
cmp
in
xchg
jp
push
adcl
in
hlt
dec
sbb
rol
xor
ja
mov
sub
je
bound
xchg
fcoms
dec
add
icebp
fisubs
les
dec
dec
pop
rol
push
ja
fmuls
xor
lret
std
cmpb
sub
sbb
add
and
mov
adc
push
rorl
fmul
out
enter
addr16
cmp
jae
jge
movsl
lahf
stos
pop
push
jno
adc
and
mov
xchg
dec
mov
jns
out
cmp
jo
lds
jmp
lea
sbb
je
testl
xchg
fmuls
shlb
pop
mov
aas
inc
out
shr
aam
out
jnp
or
cmp
mov
enter
xchg
loope
in
imul
das
or
das
fcmovne
lahf
je
adc
retw
or
lods
scas
mov
or
jbe
loop
adc
sub
push
out
rorb
mov
jecxz
mov
cli
imul
or
int
aas
jbe
sub
dec
shll
mov
shr
mov
out
sbb
push
dec
nop
out
mov
ljmp
dec
repz
std
bound
gs
ss
lret
popa
call
pop
test
push
outsl
add
iret
repnz
loop
xor
adc
pop
mov
jb
pop
cmp
jae
dec
xabort
inc
nop
mov
jmp
xchg
and
aad
xor
mov
fmul
scas
in
decb
pop
leave
cs
rol
or
xchg
addr16
lahf
and
rcl
push
int3
push
push
out
mov
ficompl
scas
pop
pop
lret
inc
pop
rcr
mov
in
push
popa
outsl
xchg
fs
add
push
lret
mov
push
into
xchg
imul
pop
nop
dec
push
pop
sbb
je
mov
mov
sahf
dec
xchg
rorb
sub
or
jne
roll
lods
fdivrl
mov
call
mov
lret
inc
mov
frstor
xor
les
sub
out
outsl
cmpsb
popa
cmpsb
jp
cmp
rorl
stos
inc
sbb
cltd
fwait
repz
mov
cmp
out
inc
mov
loop
mov
jle
inc
xchg
test
shll
xor
cmp
xor
and
fxch
push
xor
fdivs
cmp
mov
pop
mov
pop
push
dec
sub
ficoms
bound
arpl
iret
dec
sti
ss
lods
popa
imull
subb
pop
push
cli
mov
icebp
inc
out
dec
shrb
and
out
jb
and
int
popa
dec
aaa
or
repz
push
push
push
pop
and
cmpsb
dec
scas
push
fs
scas
cmpsb
dec
ljmp
xchg
lods
ljmp
adc
dec
xchg
ljmp
test
and
push
mov
movl
push
inc
and
fildll
stc
xor
jo
test
je
dec
aas
pop
adc
scas
xchg
jmp
xchg
outsb
mov
sti
cs
adc
mov
sbb
es
push
xor
out
cmp
add
decl
jmp
mov
clc
mov
sub
jle
repnz
jo
adc
jne
loope
insb
dec
stos
mov
ret
and
sub
ja
mov
std
je
stos
insb
sub
cmp
out
adc
fisubl
xor
cmp
dec
outsl
out
fs
mov
mov
call
stc
adc
adcl
pop
cmp
and
mov
inc
xchg
push
mov
out
jne
xchg
scas
jmp
loopne
mov
into
loopne
std
scas
mov
pop
loope
pushf
mov
lods
inc
mov
push
lahf
sbb
push
movsb
repz
sub
mov
xor
insl
movsb
xchg
rcrl
push
das
lahf
mov
lds
add
call
inc
cmc
mov
dec
pop
jne
cli
pop
lret
aad
andl
and
xchg
insl
out
sbb
and
cs
shlb
data16
xor
fnstsw
js
in
out
and
out
xchg
or
push
jb
gs
mov
sub
test
pop
es
stos
scas
mov
cmp
sbb
jae
jnp
fs
rcr
and
adc
push
test
popa
movsl
into
jbe
les
and
cmp
stos
cltd
loopne
pop
inc
push
add
inc
mov
leave
inc
mov
xor
xchg
push
xor
push
inc
pop
jl
pop
loope
stos
insl
pop
das
dec
aaa
inc
sub
push
xor
cmp
jg
and
mov
fwait
cmp
sbb
iret
aaa
jns
add
loop
cltd
bound
or
sbb
sub
test
mov
mov
sub
aas
add
ficoms
mov
sbb
adc
fsubrl
or
pop
jb
in
stos
mov
leave
sub
mov
sti
sbb
test
int
xchg
mov
or
jmp
mov
mov
aas
orl
push
roll
sub
mov
mov
inc
nop
adc
mov
popf
icebp
fistps
pop
add
pop
fcomip
imul
cmp
aam
and
hlt
jmp
ljmp
mov
pop
popa
adc
shrl
inc
sub
imul
iret
mov
mov
jmp
xchg
sub
inc
push
jnp
lods
inc
sub
mov
mov
cmpsl
push
int3
call
out
push
movl
sbb
xchg
sbb
cmpb
aaa
push
jb
xor
dec
adc
and
test
daa
fistpl
dec
popf
push
mov
pop
xor
jp
nop
iret
fwait
test
fsubl
sti
rorl
lcall
cmp
je
push
repz
out
ret
dec
sub
shrb
je
jae
loopne
pop
pushf
jge
jnp
xchg
sbb
pop
lea
sub
stos
nop
jo
xchg
push
out
mov
fcomi
or
push
mov
sub
xchg
pop
mov
les
movsb
cmp
adc
loope
aad
shrl
mov
cmpsb
pop
sbb
adcl
shrb
movsl
bound
movsl
sbb
mov
xchg
out
jbe
jnp
jnp
adc
insb
mov
push
xor
out
cwtl
lcall
push
mov
dec
and
notl
and
and
jns
pop
cmp
xor
cmp
and
xchg
mov
pushl
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
jmp
icebp
sbbb
push
cmpsb
icebp
stos
sub
int3
lods
call
adc
adc
sarl
adc
mov
andl
jl
das
icebp
rcll
jp
xchg
inc
rorb
push
out
imul
xor
sbb
mov
sbbb
jo
mov
pop
mov
test
mov
nop
xchg
inc
jo
stos
sbb
push
loope
sahf
xchg
push
adc
call
xchg
xor
jnp
dec
push
xlat
sti
and
mov
rolb
inc
lods
pop
pop
jp
add
sbb
repnz
xchg
divl
cmp
insb
adc
rol
xchg
pop
add
fistps
sub
mov
mov
jmp
ret
out
fstps
addr16
and
in
lret
mov
vmovmskps
sub
mov
int
das
or
dec
ss
call
fidivrs
xchg
ffreep
pop
push
mov
fcmove
mov
rorl
mov
mov
pusha
xchg
ja
repz
jno
sbbl
or
or
shlb
inc
leave
mov
js
insb
test
xchg
arpl
push
loop
cmpl
xchg
pop
push
aas
pop
mov
mov
cld
and
in
push
jmp
js
jno
xorb
std
adc
int3
scas
jge
add
jmp
inc
jge
and
icebp
clc
adc
sti
ficoml
mov
xchg
clc
or
mov
cmp
insb
and
mov
sar
scas
push
jae
das
mov
push
lahf
and
orb
push
inc
in
mov
mov
mov
repz
subb
mov
dec
loop
xor
and
push
xor
ret
xor
adc
and
imul
in
and
pop
push
mov
push
push
add
movsl
and
sub
mov
or
jno
pop
push
inc
or
dec
adc
mov
mov
bound
sbb
mov
xchg
lods
jae
pop
xor
add
push
in
test
aas
scas
pop
insl
mov
addl
in
xchg
mov
lahf
pop
jnp
or
cld
push
adc
mov
jecxz
stos
ds
rcl
jnp
push
ja
lret
jmp
lcall
mov
mov
cmp
imul
test
repz
sbb
mov
mov
testl
cmp
mov
cmp
xor
lds
aad
pop
jae
push
cmpsl
jge
cmc
sbb
insl
mov
in
xchg
add
lds
push
hlt
shll
in
add
and
popw
sbb
rcrb
xchg
fcmovnb
pop
xchg
adc
or
into
outsl
jnp
mov
jo
ljmp
hlt
sbbl
mov
icebp
and
inc
sub
jne
cmp
mov
dec
mov
nop
and
incb
inc
clc
loopne
pop
orl
adc
lods
jo
in
add
sbb
jle
mov
sahf
test
sbb
cltd
xchg
ret
std
mov
mov
mov
mov
mov
call
mov
or
mov
or
push
push
push
push
call
mov
cmp
je
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
imul
add
mov
mov
mov
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
xor
xchg
aas
sbb
sub
jb
add
jg
adc
adc
add
lret
push
push
pop
lods
call
push
adc
inc
ret
addr16
adc
aaa
and
dec
xchg
push
or
int3
lahf
and
or
pop
lcall
pop
dec
xor
ja
cmc
stos
ljmp
aas
daa
sti
mov
push
mov
lods
insl
fwait
in
mov
insl
xchg
xor
push
out
sbb
fdiv
mov
aaa
cltd
ficoms
js
and
enter
cli
mov
jb
lods
sbb
push
and
inc
dec
jmp
push
push
fidivrs
scas
push
or
imul
mov
push
mov
mov
xchg
sub
xor
or
adc
outsl
decl
mov
mov
inc
xchg
sub
cmc
inc
aas
cmpsb
xlat
cmp
cmp
jecxz
xchg
add
pop
xchg
stos
lock
xor
pop
xor
sbb
xchg
pop
sbb
pop
out
add
xor
mov
outsl
mov
lods
pop
out
sbb
mov
jmp
out
les
in
aad
sarb
jae
jno
sbb
cmp
cmp
aaa
inc
enter
setg
fs
cmp
or
data16
cmp
fldcw
cmp
inc
js
sti
cld
mov
ja
fcmovnbe
test
mov
out
scas
pop
lds
dec
mov
mov
andb
std
cld
inc
lret
jns
lahf
adc
jne
icebp
outsb
ret
cmp
cmp
cmp
sgdtl
pop
lret
push
add
mov
push
loop
xchg
pop
jle
inc
les
sbbb
or
shl
xchg
in
mov
adcb
sbb
cmc
sub
jl
imul
cld
sub
and
fscale
lret
adc
add
or
push
lcall
or
sbb
aaa
and
rorb
addl
mov
sub
int
xchg
mov
in
jno
stc
jmp
inc
out
cmp
fldcw
push
arpl
jl
mov
jne
push
js
in
sub
push
mov
inc
push
and
in
rol
and
fildl
mov
inc
mov
mov
sbb
leave
movb
jb
hlt
lds
adc
lret
xchg
cs
test
pop
aas
test
mov
outsl
and
sbb
and
xor
lahf
icebp
sub
enter
mov
ja
js
sub
mov
jae
into
mov
push
pop
sub
jbe
les
ret
xchg
out
pop
or
mov
push
fstpl
dec
cmp
adc
sbb
mov
idiv
js
lahf
lods
mov
push
imul
and
icebp
out
xchg
fnstsw
mov
cmp
adc
cmpsl
cmovle
clc
fs
daa
call
lods
icebp
imul
ret
aam
or
movups
xchg
imul
insl
insb
add
lret
push
fiaddl
adc
iret
sbb
inc
scas
aad
shll
push
repz
cwtl
test
and
sbb
push
and
push
mov
mov
push
shl
sbb
sub
add
jle
add
fsubrp
lods
sbb
js
pusha
fs
arpl
rcr
jo
pop
sbb
xchg
dec
inc
mov
mov
dec
and
pushl
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
mov
mov
call
or
mov
or
push
push
push
push
call
mov
jmp
mov
mov
xor
xor
mov
call
jmp
adc
and
sbb
arpl
aam
jl
sbb
adc
pusha
mov
aaa
xchg
mov
sbb
jns
or
inc
ja
mov
mov
rclb
dec
sub
pushf
dec
in
mov
pushl
jo
test
out
leave
cmp
sar
cmp
sbb
aaa
mov
lock
orb
inc
shrb
xchg
jecxz
push
pop
xor
mov
push
loopne
loop
mov
in
cmp
adc
jge
dec
lock
int
cmpsb
popa
xor
mov
daa
jecxz
out
pop
xchg
int3
jno
mov
std
and
adc
testb
or
ror
aaa
pusha
stc
or
mov
mov
xor
in
xchg
das
mov
cmp
xchg
mov
xchg
aaa
pop
adc
add
nop
subl
clc
or
fcoml
jnp
out
mov
jb
mov
or
dec
aad
push
mov
add
nop
int3
xchg
shl
sarb
repz
pusha
jae
sub
pop
ja
jmp
clc
inc
lahf
mov
into
and
mov
or
shl
and
push
cmp
lret
stos
imul
mov
cmovl
lods
fwait
inc
lea
leave
cmpl
fcompl
push
dec
xchg
or
loop
jae
ret
insb
shl
inc
pop
ret
faddl
outsb
jns
fidivs
or
inc
pushf
ja
lret
adc
aam
std
mov
mov
mov
lock
ljmp
jecxz
ljmp
std
push
popf
mov
pop
int3
xchg
gs
in
arpl
lret
mov
add
and
mov
loope
loopne
loope
sub
fistl
aad
mov
outsb
push
sbb
sub
inc
pop
lcall
icebp
mov
fldcw
faddl
lret
pop
shlb
or
or
iret
push
add
not
lret
fildll
leave
aas
mov
jge
cmp
fstl
cmp
cmc
cld
inc
ja
inc
sbb
inc
into
popa
xchg
iret
dec
pop
scas
mov
fwait
mov
push
sub
lods
ret
xlat
pop
inc
and
xor
mov
data16
xchg
js
gs
popa
push
or
add
adc
or
sub
push
jo
lret
xchg
fisttpll
mov
gs
lret
cltd
shr
fwait
dec
loopne
imul
rclb
inc
pop
push
incb
nop
testb
dec
jmp
lret
mov
arpl
cwtl
call
aas
mov
or
push
cmp
cmp
fdivl
jb
repz
pop
jecxz
mov
test
shlb
sti
aas
lods
add
ret
xchg
lds
add
mov
shll
imul
out
add
test
inc
leave
jg
lahf
push
push
imul
inc
imul
add
dec
adc
mov
push
sahf
xor
push
inc
jl
fdivs
inc
in
fidivrl
cmp
repnz
mov
pushf
sbb
jbe
jle,pn
out
ljmp
pop
push
pop
jmp
popf
push
insl
sub
fidivrs
jnp
rcrb
clc
arpl
dec
mov
jnp
leave
jb
sbb
sub
add
cmp
mov
addr16
cmp
rclb
dec
outsl
int
push
push
dec
adc
push
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
xor
div
mov
and
add
mov
lea
xor
jmp
jg
dec
dec
sub
loop
mov
mov
adc
adc
imul
mov
cmp
es
lcall
add
jp
insb
std
inc
dec
dec
mov
inc
mov
sti
fisttps
movsl
add
test
cmp
mov
mov
push
dec
jne
push
mov
repnz
pushf
mov
pop
xor
xor
adc
arpl
xor
clc
fmulp
push
mov
in
ficoms
stos
leave
pop
aaa
xor
push
push
fisubrl
mov
mov
test
sub
iret
push
lds
clc
cmpsb
in
sub
popa
mov
iret
jbe
jno
xchg
pop
lods
and
sub
xchg
aaa
mov
sub
cld
mov
out
jno
mov
movsb
mov
mov
push
jl
push
jno
inc
negb
mov
cmp
xchg
daa
loop
cmp
fstpl
mov
nop
fiaddl
jmp
cwtl
or
sti
and
sti
ret
xor
sti
ret
pop
or
cmp
dec
stos
sbb
les
mov
xor
xor
loope
push
or
cmp
in
loope
jbe
pop
jbe
sbb
jo
lahf
jmp
fisubrs
cmp
inc
add
lret
arpl
outsl
and
ja
out
cli
setae
mov
xchg
add
push
mov
enter
push
xchg
sbb
aaa
pushf
insb
cmp
fisubrl
imul
sub
inc
loopne
in
scas
or
cwtl
mov
sub
in
push
aaa
movsb
popa
fwait
inc
pop
pop
andb
inc
outsl
fwait
movsb
fisubl
stos
and
scas
dec
mov
xor
fisubs
pop
std
andb
sti
loopne
cmpsb
mov
mov
inc
push
and
pop
ret
popf
fucomp
push
add
ja
repz
adc
int3
push
les
jle
lods
pop
leave
push
xchg
in
mov
sbb
hlt
les
rorb
rcr
mov
push
and
xor
flds
jge
arpl
cmp
ds
andl
sarl
rorb
mov
into
arpl
in
in
dec
xor
cmc
mov
sbb
and
inc
push
ss
or
enter
ja
mov
pop
mov
std
xchg
mov
js
jmp
mov
sti
inc
inc
dec
mov
ss
add
cli
push
xor
sbb
mov
loop
das
xsaveopt
dec
stos
rcrl
push
cwtl
popf
jae
es
jmp
dec
pop
out
test
lahf
je
sar
in
xchg
cmp
xchg
popa
lret
mov
pop
out
cmc
inc
jecxz
scas
mov
jmp
dec
test
cmp
xlat
jne
push
mov
jecxz
incl
or
jns
call
jbe
icebp
jl
sbb
push
movsb
mov
mov
sub
xchg
or
mov
shlb
xchg
faddl
inc
adcl
es
pop
sub
aam
push
pop
cwtl
test
into
adc
in
fcomps
in
addl
sbb
js
out
push
insb
sbb
inc
dec
outsl
call
pop
rcll
jl
xchg
dec
int3
and
stc
xor
inc
jno
push
inc
jbe
mov
out
ds
xchg
mov
icebp
or
arpl
jp
cwtl
xor
push
or
mov
decl
inc
inc
hlt
push
pop
add
movl
movl
movl
movl
movl
movl
jmp
sbb
or
pusha
cmp
push
popf
or
stos
adc
adc
inc
ljmp
nop
mov
pop
in
inc
negb
clc
jmp
es
mov
cmc
mov
pop
adc
jns
cs
jp
and
sahf
mov
aad
add
in
popf
add
xchg
ds
mov
jmp
data16
adcl
sbb
and
jns
jmp
jbe
lods
mov
hlt
push
sbb
imul
pusha
ficoml
dec
and
push
pop
jns
xchg
add
orb
dec
mov
lcall
cld
iret
mov
lods
cltd
lock
jnp
insl
lods
in
mov
imul
test
jne
push
jo
outsb
iret
adc
mov
insl
and
popf
inc
mov
dec
fmull
incb
and
int
jg
fsts
pop
mov
and
adc
shlb
addl
dec
cmp
xor
fdiv
je
arpl
mov
xchg
out
xor
icebp
mov
mov
ljmp
lret
aaa
push
jae
cld
rcrl
cmp
repz
out
jb
shl
js
mov
addr16
arpl
pop
sti
gs
pop
jo
push
push
jp
inc
test
pop
mov
in
mov
jnp
mov
loop
fs
loope
mov
insb
roll
iret
out
xor
ffree
dec
fstl
sbb
sbb
mov
int3
push
xchg
or
std
and
outsb
inc
push
jb
pop
cli
pusha
cltd
mov
mov
lock
pop
pop
or
mov
aas
stos
mov
adc
fsubrl
inc
adc
xor
iret
sub
fcmovnbe
mov
test
stos
fldt
jmp
cmpsl
shll
cmc
lds
sti
add
scas
dec
int3
rcrb
scas
sbb
mov
sahf
mov
xor
cmp
mov
fnstcw
push
adc
pop
outsb
pop
xchg
xor
and
push
addb
mov
mov
cmpsb
lret
push
or
push
mov
sub
fadds
mov
lret
mov
xchg
mov
sbb
sub
test
jle
pop
dec
ror
or
lock
inc
mov
imul
inc
negb
addr16
mov
leave
inc
cmp
xchg
flds
mov
outsl
inc
imul
int3
mov
mov
mov
imul
sahf
rorl
dec
loope
adc
faddp
outsb
and
pop
jecxz
cmp
or
xor
lret
xchg
or
test
shll
stc
mov
faddl
sub
outsb
shlb
imul
dec
pusha
inc
popf
test
pop
pop
dec
xor
sub
cwtl
push
xchg
pop
add
dec
push
pop
clc
shrl
test
add
mov
xchg
or
repnz
std
cmp
pop
and
adcl
xor
xor
sbb
dec
roll
jnp
add
cmp
int3
dec
addr16
aas
shlb
fildl
sarl
cmpsl
decl
repz
adc
decb
out
dec
in
jb
jecxz
test
xor
mov
imulb
fmull
mov
out
sub
incb
push
mov
rol
pop
lcall
jno
add
test
push
or
add
test
call
test
decl
pushl
shl
icebp
add
mov
and
xor
add
mov
mov
sub
mov
or
mov
and
mov
xor
mov
mov
sub
mov
imul
xor
xor
mov
mov
add
add
mov
movl
movl
movl
movl
movl
movl
mov
xor
mov
imul
mov
lea
mov
and
and
xor
push
pop
div
imul
mov
and
mov
or
add
imul
mov
xor
xor
mov
mov
add
add
mov
movl
movl
movl
movl
movl
movl
mov
xor
jmp
test
sub
sbb
xchg
push
push
mov
mov
filds
stos
adc
adc
loope
pop
addr16
dec
mov
out
or
popa
push
ja
xchg
xor
sbb
stc
mov
ret
inc
cli
adc
dec
addr16
out
mov
push
lea
int3
dec
push
loop
test
xchg
sub
mov
fs
and
xor
add
or
test
jae
push
fcomip
push
popa
and
xchg
mov
xchg
test
imul
rclb
jns
popf
lods
dec
xchg
fxtract
lret
mov
cmp
pop
mov
mov
repnz
enter
dec
loop
add
clc
fistpll
xchg
aas
or
jg
stc
arpl
lods
cmp
test
jecxz
call
jle
mov
jnp
into
pop
mov
gs
fidivl
xor
push
clc
xchg
cltd
cmp
daa
movsb
mov
push
mov
dec
loop
addr16
inc
mov
ret
jno
push
arpl
pusha
or
stos
retw
pop
add
jl
push
stos
test
popf
dec
mov
mov
daa
xlat
xchg
popa
sbb
adc
iret
adc
nop
or
seta
dec
mov
icebp
test
sbb
cs
rorb
mov
mov
imull
std
fists
dec
push
insl
cmp
mov
addb
sbbl
push
jbe
jb
add
shr
adc
sbb
mov
movsl
in
mov
sbb
push
out
mov
add
rcl
aam
push
imul
mov
sti
sub
cs
mov
fidivrs
jb
push
xchg
repnz
mov
cltd
mov
push
pop
add
inc
sti
xchg
jbe
ret
pop
dec
out
iret
mov
mov
movsl
or
lods
mov
dec
mov
dec
fdivl
ret
jge
in
shrb
xchg
mull
aam
cld
lea
pop
dec
jb
lock
adc
rcll
xchg
mov
jg
sahf
pop
mov
xor
addb
icebp
and
or
mov
dec
repnz
movsl
inc
xor
arpl
stos
push
ja
fnstsw
xor
xor
insb
test
test
test
sarb
sarb
jecxz
mov
xchg
int
push
lret
fidivrs
dec
inc
negl
adc
pop
push
popf
pop
hlt
xchg
pop
insl
jo
xchg
add
pusha
insb
clc
vpmuludq
dec
xchg
in
mov
movb
jnp
xchg
jnp
pop
sbb
and
xor
xor
cmpl
push
lcall
push
lret
and
movsl
subl
jae
cmpl
push
dec
not
lret
mov
data16
cmp
sbb
sbb
scas
lea
jne
cltd
call
and
addr16
sahf
aad
cmp
cmp
sub
mov
jnp
pcmpeqd
jbe
cld
jmp
mov
mov
xor
das
sti
or
sbb
adc
dec
sbb
bound
push
adc
sarl
jl
lcall
mov
add
ja
mov
call
mov
xchg
call
add
div
sub
push
xchg
inc
lahf
pop
neg
jge
in
mov
sub
lcall
and
mov
mov
lods
push
add
cmpsl
test
push
pop
div
mov
or
mov
xor
div
imul
mov
lea
mov
and
and
sub
xor
mov
xor
mov
and
and
or
mov
mov
add
lea
mov
andl
jmp
mov
inc
mov
mov
mov
cmp
je
mov
mov
mov
add
mov
mov
mov
mov
mov
movl
movl
movl
movl
lea
mov
mov
movzwl
xor
movzwl
sar
mov
movzwl
xor
movzwl
shl
or
movzwl
mov
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movzbl
push
lea
push
call
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
jmp
mov
pop
cmp
movsl
mov
mov
adc
xor
push
pop
fdivs
sarb
test
cmp
lcall
or
outsl
test
out
xchg
lods
cmp
ljmp
scas
add
cltd
inc
imul
and
cmp
push
pop
push
test
xor
dec
mov
xchg
loop
sub
inc
mov
dec
mov
push
popf
jnp
xchg
scas
xchg
push
mov
cmp
int3
push
mov
dec
clc
out
pop
insb
sbb
in
mov
xor
arpl
mov
push
rcr
int3
leave
jge
xor
call
sbb
fildll
fs
xchg
data16
mov
and
fsubrl
inc
loopne
call
fisubs
add
xor
enter
scas
pop
jo
or
mov
adc
aad
ljmp
adc
iret
fistpll
scas
movsb
andl
pop
pop
adc
cmc
test
dec
cs
lods
sbb
stc
sti
cmpsl
xchg
hlt
out
pop
outsl
fmull
add
push
push
or
dec
int
fadds
repnz
fs
jnp
das
push
mov
icebp
mov
xor
cld
xchg
sbb
shlb
test
mov
aam
xchg
insl
sbb
inc
icebp
out
mov
add
mov
hlt
sbb
dec
cmc
and
push
jmp
xor
xchg
mov
loop
repz
int3
in
insl
dec
mov
rcr
inc
and
push
mov
into
andb
push
or
mov
in
xchg
dec
push
adc
add
je
fs
inc
shll
pop
cltd
sbb
xorl
lret
enter
adc
xorl
ljmp
lods
add
rcl
in
xchg
test
inc
into
pop
cld
jge
push
bound
adc
jae
adc
fadd
sahf
xlat
out
and
sti
out
ljmp
xor
jecxz
push
jbe
jg
mov
data16
test
fdiv
aas
jp
add
jae
ror
pop
leave
in
out
mov
ret
inc
nop
mov
je
cmp
test
cmpsl
sub
imul
adc
add
mov
cmp
and
cmp
iret
aaa
pushf
pop
repnz
loopne
mov
mov
jp
jp
fnsetpm(287
mov
mov
leave
mov
xchg
pop
lahf
push
cmc
ja
pmulhuw
ljmp
jle
lret
int
je
insl
cmp
test
mov
mov
or
and
pushf
nop
popa
sbb
fnsave
pop
js
es
push
aad
push
dec
loop
dec
imul
cmp
mov
popa
fwait
daa
pop
mov
cs
cli
ds
in
subl
das
fmul
adcl
mov
xor
push
test
inc
lret
shll
and
gs
pop
xor
lahf
out
cmpsl
sbb
fmull
xor
or
dec
rcrl
inc
sub
sbb
push
or
cmp
int3
lret
push
fisttps
cmp
test
or
jmp
jb
dec
sub
test
jl
sbb
add
xor
rcll
sti
stos
icebp
lods
sub
push
loop
fnclex
sub
jmp
aaa
mov
dec
fisttpl
faddl
stos
rolb
pushf
mov
call
or
or
add
mov
mov
jmp
jbe
ja
cmp
aam
ret
insb
sysenter
adc
adc
rcll
jns
dec
imul
es
ret
out
inc
stos
test
sbb
inc
jge
test
aam
jae
mov
fisttpll
jmp
out
xor
pop
dec
mov
mov
push
xorl
js
push
xchg
dec
das
nop
addr16
dec
ret
in
cmp
adc
push
xchg
enter
jb
pop
leave
inc
mov
lret
push
aad
push
cmp
mov
add
lock
adc
xor
cmpsl
dec
pop
insb
subb
xor
imulb
repz
inc
add
outsl
xor
aaa
cld
scas
mov
daa
fs
mov
out
outsl
push
xor
inc
in
outsb
out
movsb
mov
mov
sbb
jo
pop
sub
loope
mov
lahf
loope
adc
into
xchg
dec
pop
sbb
clc
cmc
adc
sbbl
dec
int3
cmpsl
dec
mov
pop
add
sub
ret
arpl
add
pop
in
dec
add
sub
jno
out
sub
sub
sub
or
ljmp
pop
xchg
rcl
xchg
mov
sbb
stos
daa
in
mov
add
cmpsl
or
scas
pop
mov
es
jl
js
xor
pop
mov
xchg
daa
int
and
add
stc
sub
out
addr16
aam
jae
pop
sbb
mov
sbb
scas
insb
mov
mov
sbb
cmc
lods
fnstenv
dec
sti
jo
mov
dec
rcr
mov
lahf
int3
xor
das
cmp
imul
add
xor
fidivl
push
push
sub
int
cmp
lcall
pusha
jae
cld
mov
std
inc
sbb
fldz
mov
out
jns
xchg
adc
data16
push
nop
push
mov
pop
mov
das
shll
hlt
fldcw
popa
lods
jnp
mov
in
cli
rol
es
clc
mov
lea
inc
xchg
clc
loop
lahf
or
sub
hlt
imul
rcr
sub
fstl
pop
dec
adc
pop
sub
cmp
scas
add
adc
sbb
rcll
dec
xchg
jne
push
cmp
add
push
imul
cli
popa
enter
push
mov
pop
push
pop
clc
push
lahf
les
in
and
sbb
mov
rolb
out
mov
cmpl
stos
jne
lds
icebp
ds
fsubrs
js
inc
xchg
jge
arpl
xor
insl
inc
movsl
cmc
popa
test
sub
fstpl
notb
lods
cmp
sub
pop
jle
cs
jo
mov
into
sub
shrl
jl
sub
lea
shlb
xchg
rclb
dec
popa
xchg
and
mov
xchg
jmp
jne
mov
and
cmp
push
fcoms
cmp
shll
pushf
cmc
lahf
daa
add
adc
cld
mov
xchg
add
dec
mov
jno
arpl
jp
outsl
gs
cmp
mov
inc
dec
lods
cmp
gs
in
cmc
jne
sbb
repz
rolb
mov
stos
mov
dec
aaa
cmp
je
mov
mov
movzwl
xor
movzwl
sar
mov
mov
movzwl
xor
movzwl
shl
jmp
jnp
add
xor
push
push
xor
adc
or
pop
pushf
mov
js
enter
and
cmp
add
sbb
movsb
ficompl
ret
lods
movsb
mov
cltd
fnsave
icebp
out
jmp
pop
and
frstor
les
push
scas
repnz
inc
clc
adc
aam
icebp
out
loope,pn
sbb
add
lcall
ret
cmp
cmp
int3
js
inc
inc
inc
outsb
sub
xor
shrb
xchg
mov
cmp
mov
xchg
ljmp
push
add
jbe
xor
mov
mov
jecxz
aam
cld
rcr
pop
add
dec
jmp
icebp
and
mov
jmp
test
pushf
das
cmpsl
or
fdivrl
xlat
adc
sbb
cmpsb
cmp
hlt
xor
test
jge
inc
lods
decb
sub
adc
hlt
cltd
lods
rcr
mov
cmpl
push
pop
and
mov
xchg
inc
mov
shrb
mov
mov
inc
out
fcmovnbe
les
or
xor
stc
push
bound
dec
repz
sti
pop
test
pop
lods
pusha
in
sub
cmp
adc
movsl
lcall
cs
mov
sub
stos
jl
mov
popa
xchg
add
mov
mov
cld
out
fiaddl
pop
fwait
inc
xchg
push
mov
mov
inc
dec
mov
shll
loope
mov
jb
lret
mov
dec
dec
test
add
xorl
out
sub
sbb
int3
inc
cs
pushl
lret
cmc
or
inc
scas
sub
sbb
das
cwtl
lahf
sarl
fimuls
leave
dec
mov
dec
cmpsl
add
test
sbb
inc
cmp
mov
stc
mov
lret
inc
mulb
dec
pop
aam
inc
jmp
push
bound
in
lret
ss
mov
cmp
mov
adc
sbb
sbb
sub
push
mov
scas
test
int3
sbb
cli
add
jge
imul
ljmp
stos
jge
sub
push
in
mov
or
cwtl
jmp
jmp
data16
sti
sbb
mull
mov
in
push
adc
inc
xor
mulb
jmp
push
mov
call
mov
lahf
ret
jle
and
add
xchg
jns
arpl
jo
insl
out
fcoml
dec
xchg
daa
inc
lret
daa
fwait
jb
mov
aaa
sbb
movsb
icebp
ret
dec
mov
out
outsb
mov
test
mov
out
aad
xor
dec
sbb
and
hlt
test
fdivrl
cld
repz
jg
jmp
mov
lock
and
fsubrl
jp
jnp
movsb
xlat
and
lods
cli
ror
adc
push
mov
cli
mov
in
dec
imul
nop
xlat
sbb
addr16
xchg
lods
rorb
push
xchg
popf
test
jg
mov
outsl
or
lods
pop
add
push
iret
aam
in
and
cmp
sub
mov
inc
sub
pusha
mov
cmp
inc
jo
test
fstl
cmc
dec
push
add
outsl
pop
cmp
mov
mov
addr16
popf
mov
xor
mov
addr16
jmp
pop
sbb
cmpsb
inc
iret
mov
sbb
cmp
dec
dec
mov
and
cwtl
je
ds
jl
or
movzwl
mov
mov
mov
movzwl
xor
movzwl
sar
mov
mov
movzwl
xor
movzwl
shl
or
mov
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
jmp
popa
rolb
and
loopne
insb
insl
aas
sbb
stos
adc
adc
add
pop
pop
faddp
sub
jge
call
or
jno
mov
test
jnp
call
aad
enter
xor
outsb
rol
push
aam
or
xlat
loope
push
xor
mov
or
push
dec
xchg
cmp
out
lea
lods
jge
pop
addr16
inc
push
xor
add
jecxz
and
sbb
or
or
xchg
jae
push
imulb
xchg
cs
lahf
add
adc
scas
push
rcrl
pop
mov
pop
lods
mov
add
add
dec
rorl
mov
sbb
insl
loop
pusha
pop
cmpsl
xchg
loopne
sub
dec
xor
pop
jns
pop
pop
cmp
sub
sub
scas
lret
xchg
movsl
nop
bound
out
popa
inc
fadd
fdivrl
ret
mov
push
bound
mov
xchg
mov
fstps
push
fs
sbb
lock
roll
sahf
jp
dec
rcll
mov
sbb
test
cmp
push
pop
mov
add
dec
push
pop
xchg
movsb
lods
insl
out
fs
pop
pop
aaa
mov
cmp
aad
cmp
sub
jp
sub
mov
aaa
add
lcall
out
and
mov
sbb
shrl
scas
mov
dec
cmpsb
je
mov
sbb
ja
sub
mov
and
outsl
outsl
and
fs
sbb
push
ds
dec
xchg
xor
das
lods
imul
out
pop
cmp
pushf
ja
dec
sahf
inc
sub
leave
push
divl
pop
or
cmp
std
outsb
leave
mov
cmp
mov
mov
out
inc
inc
subl
jne
sub
arpl
push
sub
lcall
mov
mov
adc
in
mov
cmp
cmp
jb
or
pop
cwtl
push
iret
insb
incb
sub
test
mull
dec
xchg
vpsubusb
xor
add
sub
cmp
lret
bound
sbb
add
mov
dec
test
pusha
inc
adc
xor
pusha
lahf
adc
push
pop
or
stos
adc
lret
and
stos
xor
cmp
aas
pop
dec
scas
loope
out
or
push
aas
imul
cmp
insl
cld
aaa
std
push
insl
int3
sub
and
jecxz
test
outsl
mov
rorl
cmc
mov
cmpsb
adc
dec
clc
sub
xchg
sbb
aaa
std
inc
out
add
pop
fnstsw
scas
out
and
xchg
mov
nop
sub
vlddqu
xor
lock
sub
inc
aas
lods
sahf
test
and
xchg
inc
pop
and
testb
xor
pushf
jnp
bswap
xchg
sub
or
stc
rorb
xchg
sub
xchg
adc
add
or
mov
out
mov
nop
cmpsl
stos
sub
sbb
rolb
pushf
dec
jg
mov
pop
lret
ljmp
neg
mov
xor
xor
mov
in
pop
clc
mov
rcrb
aas
clc
ja
xchg
sub
ja
lock
and
icebp
cs
push
call
xchg
das
jle
mov
cmpb
sbb
rcrl
pop
scas
mov
push
and
gs
push
stc
add
int3
frstpm(287
xor
pop
adc
icebp
push
and
push
stos
outsb
jne
sbb
add
or
or
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
or
je
lea
mov
mov
xor
jmp
test
push
cmpsb
inc
sbb
cltd
adc
mov
fsubs
adc
adc
push
xlat
jecxz
add
cmpsb
pop
mov
out
xor
andl
and
in
add
stc
stos
cmp
daa
push
je
negb
lcall
xor
xchg
sbb
leave
mov
out
aaa
sub
inc
push
jbe
push
mov
nop
pusha
pop
je
pop
sub
xor
insb
cmc
pop
pop
lods
pop
outsb
adc
cmc
pop
pop
xor
lret
add
adc
xor
jmp
mov
mov
push
loope
aad
sub
mov
aam
cmp
mov
pop
subl
xor
cmpsl
loope
insl
xchg
pop
jo
and
cmpneqps
jb
in
dec
pusha
and
xchg
dec
stos
daa
mov
pop
sbb
jae
loope
cwtl
dec
dec
inc
xchg
mov
inc
and
xor
push
aas
stos
push
mov
xchg
out
pop
pop
pop
das
ljmp
inc
push
and
addb
jecxz
outsb
dec
pusha
cli
leave
test
lds
mov
cld
lods
adc
mov
mov
xchg
outsl
xchg
mov
nop
sub
inc
insl
or
dec
pop
mov
cmc
outsb
xor
mov
ret
sub
cmp
add
or
adc
jge
lock
jge
scas
mov
popa
repz
mov
das
pop
push
mov
xor
int
dec
sbb
xor
mov
xchg
movsl
lods
sbb
data16
lods
xchg
dec
add
loope
imul
pop
push
jge
fs
jecxz
adc
dec
enter
xor
lds
add
rcrb
mov
call
jb
mov
cmp
sbb
xor
call
or
mov
jnp
outsl
pop
stos
mov
lcall
movsb
test
xchg
xor
jl
and
pop
add
fwait
push
add
and
add
jae
cmp
outsb
xchg
pop
jne
test
xchg
rorb
xchg
or
dec
cld
mov
js
lret
call
mov
gs
cwtl
push
scas
push
fnsave
xor
out
lret
rclb
push
xchg
cmpsl
xchg
dec
xchg
bnd
rcl
push
and
mov
xchg
test
out
sub
enter
push
enter
cs
daa
xchg
and
imul
stos
lret
cmc
iret
loopne
shlb
or
mov
pop
inc
sub
imul
push
lods
push
out
pushf
push
jns
int3
and
sbb
xchg
xchg
cmp
jbe
mov
push
clc
adc
adc
xor
and
rsm
mov
jo
fcoms
loop
mov
iret
mov
mov
out
std
fsts
ss
insb
push
fdivs
sub
push
clc
aaa
rcrb
add
stc
ljmp
cltd
fidivrl
ret
cmpsl
xor
push
add
sahf
mov
sti
or
sub
pop
xor
jnp
test
rcrb
ds
and
xchg
and
xchg
sarl
fists
xchg
xchg
mov
jge
inc
shrb
xchg
outsb
and
pop
dec
imul
outsb
in
mov
hlt
shll
dec
lock
aad
jecxz
cmp
rorb
jg
cli
and
and
outsl
cmp
insl
aaa
pop
mov
call
mov
mov
mov
jmp
or
mov
adc
movsl
adc
adc
xor
loopne
test
aas
mov
push
jae
lret
push
dec
jnp
mov
mov
dec
movsl
xor
mov
or
lcall
cli
ret
cmp
out
movsl
stc
fcompl
inc
movsb
in
in
inc
mov
mov
not
out
mov
mov
popf
js
pusha
out
xor
out
sbb
loopne
insb
inc
and
jbe
aas
or
mov
out
or
outsl
mov
in
repz
jae
adc
call
add
ljmp
outsb
cmp
mov
or
das
popa
lcall
pop
arpl
cmp
lret
mov
add
mov
jo
mov
stc
in
cmp
daa
and
jns
xchg
fidivrs
xor
jns
adc
push
push
es
mov
xchg
adc
fidivrl
add
sti
sub
fdivs
adc
jne
lcall
dec
dec
mov
sbb
testb
in
jmp
imul
adc
cmp
inc
adc
and
pop
das
cmp
loopne
pop
sahf
frstor
mov
jb
mov
in
stos
and
mov
sub
shrl
in
mov
repz
loope
ret
push
xor
mov
insb
jge
fs
xor
std
xchg
icebp
mov
jp
loop
cltd
scas
xor
push
jno
push
sti
inc
mov
mov
into
stc
jp
test
stos
mov
daa
jns
dec
xchg
jle
sbb
icebp
idivl
shlb
adc
es
int
xorl
shrl
mov
clc
repz
sbb
dec
sbb
mov
lock
imul
aam
xor
push
xor
jecxz
lea
mov
pop
aam
inc
lock
push
dec
push
adc
push
push
inc
mov
js
inc
inc
pop
cmp
testl
mov
jecxz
fs
insl
inc
push
xchg
or
lcall
lods
pop
pusha
xchg
ja
jo
arpl
ret
cmovns
lods
inc
fbld
sar
aam
add
xchg
dec
or
cmp
movups
sbb
or
repnz
push
or
xlat
mov
xchg
rolb
jo
lds
shll
inc
dec
into
mov
mov
mov
mov
sbb
call
outsb
jl
into
mov
ss
sub
movsb
out
or
cs
mov
cmp
mov
jno
or
inc
cmp
inc
cmpsb
pop
lret
aam
add
ret
xchg
dec
leave
mov
jle
repnz
inc
sbb
dec
shr
subl
push
add
popf
add
sarl
mov
add
cmpsb
js
cmpl
int3
daa
repnz
sbb
sub
push
lds
push
jle
fdiv
fstpt
mov
jo
dec
inc
xchg
inc
call
stc
cld
lds
enter
xchg
xor
and
jae
mov
mov
pop
or
push
sarb
push
out
lods
adc
sub
push
sub
or
xchg
sbb
imul
sahf
fs
loop
mov
xor
sub
inc
cmpsb
mov
call
or
or
xor
xor
mov
mov
mov
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movsbl
cmp
je
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
movsbl
cmp
jmp
insl
into
leave
mov
jne
lret
dec
pop
lods
or
adc
adc
push
xor
mov
push
xor
mov
hlt
jnp
jp
sub
xchg
cmc
dec
xor
imul
cmp
inc
call
fcmovbe
jge
sbb
and
or
adc
jo
push
jl
inc
test
stos
ljmp
pop
xor
jno
roll
mov
lahf
xor
add
cwtl
sbb
fxch
call
shr
sbb
mov
mov
loope
mov
outsb
pop
inc
leave
callw
xor
or
pop
fldenv
xchg
out
mov
in
sbb
insb
out
xchg
in
xchg
jecxz
aaa
into
jns
lahf
xor
xor
jns
cmpsl
imul
stc
jmp
dec
lods
or
and
sub
ljmp
outsb
aam
mov
in
push
xchg
icebp
push
jle
xchg
orb
out
add
test
lods
enter
sbb
mov
jle
sahf
mov
mov
int
icebp
lcall
std
ja
stc
iret
and
mov
lock
lcall
and
dec
roll
inc
popf
mov
stos
aas
push
incb
add
xor
scas
mov
clc
and
cltd
mov
jae
push
add
cmp
repz
out
xchg
popa
adc
fdivl
cmpsl
daa
or
or
movsl
movsl
mov
in
jl
or
fdivs
outsb
out
lea
test
repnz
inc
lret
pop
cmp
adc
iret
mov
dec
scas
adc
inc
inc
ret
cmp
mov
cwtl
sub
and
dec
or
lret
lock
gs
pop
jmp
test
adc
xchg
sub
xor
data16
mov
addr16
sbb
xor
jg
xchg
jle
fsubrp
xor
mov
mov
orl
jno
loop
mov
ljmp
and
sar
arpl
sub
repnz
push
pop
gs
mov
push
fs
dec
or
push
cmp
or
je
testb
jl
pushf
mov
enter
call
mov
stc
dec
insb
mov
and
into
pusha
jg
inc
cmp
shll
cmp
mov
test
lahf
xor
ret
inc
inc
das
std
mov
cmp
rcrl
add
es
sarl
repz
pop
push
lahf
movsb
mov
orb
js
fsubl
sub
push
cltd
push
ljmp
out
or
xchg
mov
mov
xchg
jnp
adc
mov
dec
out
push
outsb
idivl
cmpsl
ret
pusha
mov
pop
jno
and
rorl
into
dec
jbe
cmp
mov
cmp
xchg
adc
mov
xor
sub
pop
xor
loope
mov
es
and
dec
jle
or
aas
xchg
xchg
xchg
mov
adc
mov
push
sub
cltd
call
imul
cmc
adc
push
xchg
push
daa
xor
xlat
fdivrl
add
insb
sub
pop
cmp
xchg
shrb
test
add
and
repz
push
cwtl
cmc
mov
jge
and
jo
add
aam
mov
orb
popa
mov
cwtl
add
jns
mov
loop
stos
pop
xchg
inc
cmc
cmp
lock
leave
push
lret
jecxz
sub
lods
adc
fwait
add
lock
clc
es
push
int3
stos
je
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
jmp
mov
xchg
pop
mov
dec
mov
mov
adc
scas
loop
xchg
cltd
aad
pushf
xlat
inc
bound
cmpsb
mov
idivb
push
popa
sbb
push
and
popa
xchg
es
in
mov
ja
test
std
sub
inc
sbb
mov
shll
movsl
test
mov
out
imul
xor
or
subb
arpl
es
adc
inc
popf
jne
stos
add
jno
aaa
adc
sbb
cmp
inc
loope
iret
shlb
int3
faddl
gs
aas
dec
adc
test
add
addr16
into
add
leave
hlt
idivl
sub
gs
mov
fwait
lods
adc
adc
push
mov
imul
jb
adc
mov
pop
jecxz
lock
fs
mov
inc
inc
outsl
inc
dec
adc
mov
jp
dec
mov
xor
fwait
mov
inc
xlat
xchg
rcrb
in
sbb
adc
scas
sti
dec
mov
out
into
sbb
xchg
aad
ljmp
ja
andb
and
jbe
jge
push
inc
adc
jl
and
enter
popa
scas
push
push
mov
xchg
add
ret
mov
add
push
addr16
cmp
xchg
xor
cmpsl
int
inc
stos
xchg
call
or
or
movsbl
cmp
jne
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
add
mov
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
cmpl
je
mov
mov
movzwl
mov
mov
mov
jmp
jmp
cmpl
jne
xor
jmp
mov
add
mov
movl
cmpl
je
cmpl
je
mov
shl
mov
movl
sub
mov
movl
mov
cmp
je
mov
mov
mov
mov
mov
mov
mov
inc
mov
jmp
movl
push
jmp
mov
mov
ret
push
cmpl
movl
notl
movl
jmp
mov
jg
pushl
pushl
push
call
adcl
orl
adc
sbbl
orl
addl
notl
push
movzbl
sub
mov
or
jne
mov
and
mov
mov
sbbl
xor
div
sub
mov
mov
and
mov
div
notl
mov
jmp
xor
mov
mov
mov
mov
shr
rcr
shr
rcr
or
jne
div
mov
mull
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
xor
mov
pop
pop
ret
adcl
subl
cmpl
movl
je
and
add
movzbl
mov
mov
mov
pop
pop
pop
leave
ret
movl
cmp
movl
jae
cmp
jae
subl
shld
movl
shl
ret
cmpl
mov
mov
jmp
movl
je
pushl
push
call
xorl
adcl
sbb
and
xor
adc
adc
mov
xor
and
shl
ret
xor
xor
ret
