push
mov
sub
movl
cmpl
je
cmpl
jb
jmp
push
push
pushl
push
pushl
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
mov
add
push
andl
xor
or
inc
mov
cmpl
ja
jmp
push
push
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
push
push
mov
movl
cmpl
je
cmpl
jb
jmp
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
xor
mov
decl
add
add
mov
mov
xorl
mov
mov
sbb
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jg
jmp
push
call
cmpl
jne
mov
inc
mov
jmp
mov
xorl
mov
mov
movl
cmpl
je
cmpl
jl
jmp
push
push
push
push
call
cmpl
jne
xor
or
dec
mov
mov
dec
mov
jmp
movl
mov
xor
xor
add
or
mov
adc
mov
xorl
mov
mov
mov
adc
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jg
jmp
push
push
call
cmpl
jne
mov
inc
mov
jmp
push
orl
pop
andl
sub
dec
add
movl
adcl
mov
movl
orl
mov
xorl
mov
adc
mov
andl
mov
xor
mov
adcl
xor
add
addl
mov
andl
lea
mov
add
mov
xor
subl
add
mov
incl
lea
addl
push
sub
mov
andl
xor
add
push
and
mov
subl
push
andl
pushl
call
mov
add
mov
mov
adc
mov
andl
mov
inc
mov
cmpl
ja
jmp
pushl
pushl
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
or
movl
subl
mov
sbbl
mov
sub
lea
adc
mov
inc
movl
or
mov
mov
xor
xor
sub
sub
mov
xor
xor
sub
mov
sbbl
sub
mov
movl
mov
movl
mov
movl
cmp
movl
je
or
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jb
jmp
push
pushl
pushl
call
jmp
mov
adcl
xor
xor
orl
lea
mov
xor
mov
xor
xorl
div
mov
sub
mov
xor
addl
xor
sub
movl
cmp
movl
jne
mov
xor
mov
mov
addl
mov
orl
xor
addl
xor
orl
add
adcl
add
mov
cmp
jae
andl
mov
inc
mov
cmpl
ja
jmp
push
call
cmpl
jb
lea
adcl
mov
mov
xor
addl
add
lea
movl
mov
mov
cmp
movl
jbe
addl
movl
jmp
addl
sbbl
mov
xorl
xor
xorl
inc
incl
adcl
add
cmp
jb
movl
cmpl
je
cmpl
jl
jmp
push
push
call
mov
dec
mov
jmp
mov
mov
sub
mov
mov
xor
mov
sub
add
mov
xor
sub
ror
xor
mov
mov
mov
mov
sub
xor
cmp
jne
mov
mov
xor
xor
sub
sub
xor
mov
mov
xor
mov
sub
jmp
mov
xor
mov
sub
add
mov
mov
cmp
jne
movl
mov
xor
add
jmp
lea
mov
mov
sub
mov
mov
mov
mov
movl
mov
movl
mov
xor
add
mov
mov
xor
add
mov
movl
jmp
mov
dec
and
adc
push
pop
pop
xchg
addl
subl
es
cmp
js,pn
je
xchg
jo
jae
dec
fsub
cld
insl
push
jb
bound
pusha
push
cmp
push
jle
lea
xor
ja
add
pop
lock
rol
lock
sub
xchg
xor
fs
flds
jo
sbb
lsl
and
jne
scas
sub
hlt
push
xor
and
test
mov
or
jecxz
imul
xchg
xor
int
rcll
push
adc
or
mov
shll
add
mov
pop
and
aam
xlat
xor
xor
xchg
adcb
cmp
or
xor
in
fcomip
pushf
stos
or
loopne
inc
ja
mov
inc
enter
sub
pop
or
adc
insb
leave
adc
fwait
or
outsb
daa
adc
mov
repnz
bound
jmp
or
push
iret
and
or
dec
push
ja
inc
sbb
fwait
mov
leave
mov
sbb
jne
loop
xchg
mov
loopne
test
stos
jmp
dec
sbb
mov
mov
adc
shl
aaa
pop
and
sti
pop
cmp
stos
dec
mov
sti
sbb
mov
notl
inc
dec
cmpsb
ret
popa
outsb
xlat
movsl
xchg
push
mov
sub
push
sbb
xchg
jp
push
pop
or
jae
shll
xchg
bound
scas
push
notl
pop
sub
out
mov
mov
enter
fimull
inc
mov
xchg
xlat
xor
call
jns
or
push
into
pop
in
fildll
inc
and
loopne
lret
js
push
adc
or
sub
dec
jp
adc
mov
leave
mov
adc
sbb
adc
push
push
mov
and
adc
lea
mov
push
push
xchg
add
sbb
cmp
mov
add
dec
mov
xor
fadds
lock
int3
es
in
cmpsl
mov
andl
cmp
jnp
xor
mov
rolb
aas
dec
popf
popf
mov
imul
cwtl
or
push
sbb
push
cmpl
inc
dec
stos
pop
jo
cltd
cs
xchg
mov
push
cmpsl
cmpsb
xor
mov
in
fimull
fcompl
lds
dec
inc
stos
mov
loop
xchg
mov
jge
in
mov
scas
outsl
std
xor
add
sbb
add
xchg
pop
adc
rcrb
and
cmp
scas
outsb
push
push
lret
pop
xor
sub
lods
cmpb
cmp
imul
daa
arpl
push
lds
cmp
mov
fadd
cmc
cmp
mov
cltd
iret
cs
int3
mov
mov
shll
jp
aam
shrb
mov
mov
cmp
out
sub
or
xor
ljmp
fcmovb
sbb
lret
repz
cmc
cmpsl
jmp
mov
fwait
jmp
pop
xchg
xchg
addr16
insl
mov
pop
adc
pop
jo
out
mov
out
sarb
lea
cmp
stos
push
sub
js
int3
dec
imul
push
lea
dec
sub
sbb
shrb
fwait
adc
jl
jns
bound
leave
dec
lahf
sbb
sbb
pop
or
shl
shl
ret
or
push
data16
sbb
mov
stos
std
arpl
mov
sahf
imul
jb
mov
shlb
and
jnp,pn
adc
shlb
cmp
gs
adc
cld
dec
or
mov
call
jbe
into
aad
imul
in
shrb
lea
pop
int
inc
jle
mov
ss
jnp
cltd
dec
inc
cmpb
xor
push
cld
icebp
call
lds
pop
add
pop
shlb
mov
aad
cmpsl
pop
das
jg
ljmp
push
xchg
shlb
sti
inc
push
divb
inc
mov
call
out
in
adc
jbe
rorb
pop
jbe
mov
inc
enter
lret
mov
xchg
out
mov
push
movsl
adc
iret
ud0
and
mov
mov
mov
dec
adc
sbb
or
imul
jmp
ret
test
xchg
sub
data16
outsw
lods
test
mov
jmp
sub
orb
xor
adc
iret
add
cmp
sub
sbb
lahf
int3
mov
roll
sahf
test
inc
adc
push
push
fisttps
ret
inc
adcl
nop
ficoms
pop
jmp
jmp
sbb
js
fsubs
fidivrs
mov
mov
mov
inc
movsl
inc
mov
stc
mov
lret
imul
or
or
jle
inc
sbb
mov
cmp
aaa
mov
sarb
inc
mov
jl
sub
mov
decb
pop
xchg
push
mov
mov
loop
cmpsb
jnp
hlt
cmp
inc
ret
decl
lret
sub
pop
cmc
sbb
or
test
adc
sbb
stc
mov
xor
jbe
ja
dec
in
jbe
orl
push
imul
pop
jl
push
lds
jbe
sahf
cli
test
pusha
sub
ret
sub
sbb
out
xor
ja
jecxz
in
adc
mov
cmc
clc
enter
cmpsl
mov
scas
inc
pushf
inc
into
adc
shlb
push
xchg
shlb
mov
sbb
das
sub
ret
std
das
dec
xchg
xor
inc
popa
xchg
sahf
mov
std
add
pop
outsl
pop
xor
adc
xor
in
dec
sub
test
jne
jne
or
xchg
incl
lret
out
stc
aad
mov
xor
mov
cmp
ficomps
mull
jnp
js
stos
roll
or
and
add
add
xor
gs
arpl
mov
cmp
or
sahf
js
push
jecxz
sub
aam
inc
cmp
xor
aaa
xchg
dec
aad
add
push
pushf
loopne
jno
cmc
inc
popa
loop
aaa
test
int
lock
test
or
xchg
int3
xchg
int3
stos
int3
add
pop
push
xchg
mov
in
add
loopne
mov
dec
adcl
imul
pop
imul
aaa
mov
add
test
push
and
sahf
mov
bound
lret
xorl
xchg
inc
inc
jle
pop
cltd
loopne
or
dec
lahf
mov
jl
and
cmp
shrb
loop
in
or
mov
dec
jbe
frstpm(287
in
or
mov
adcl
out
jl
rcl
cmc
sbb
sub
jno
and
adc
test
mov
cltd
mov
mov
mov
lods
xor
lock
and
dec
mov
test
js
mov
jne
adc
cmpb
jno
sbb
jg
pop
mov
inc
fistpl
xchg
jnp
pop
pop
sbb
scas
stc
sub
jecxz
xchg
popa
xor
mov
ss
daa
rol
cmova
inc
nop
clc
push
mov
pop
mov
test
or
mov
movl
xchg
repnz
sub
movsl
jbe
fs
enter
imul
addr16
jb
sub
divl
push
add
dec
sbb
mov
outsb
mov
cli
xor
or
cmp
or
out
cmp
xor
repz
nop
dec
mov
sub
sbb
je
dec
stos
lret
mov
cli
mov
arpl
push
mov
iret
push
mov
dec
arpl
adc
add
sbb
sbb
sub
xor
add
movb
ror
test
ja
mov
mov
dec
pusha
sbb
push
mov
test
mov
add
sub
cs
sub
les
dec
addr16
aad
mulb
dec
and
mov
mov
cmp
sub
sub
adc
push
scas
jecxz
or
ja
rol
pusha
pop
jnp
fs
sub
out
jo
inc
sub
inc
test
mov
loop
cmp
pop
sti
dec
pop
mov
fisttpl
add
dec
mov
or
mov
aad
xchg
fsubrl
pop
inc
shll
sub
jl
push
or
jae
ffree
lret
add
inc
aas
leave
fcoms
sarl
mov
scas
fcmove
icebp
mov
adc
xchg
inc
mov
imul
inc
sub
sti
lret
and
mov
in
pop
xchg
push
or
lret
and
push
push
push
sahf
mov
cwtl
mov
popa
xor
cmc
adc
sahf
cmp
mov
push
xchg
dec
out
test
mov
ret
aaa
out
orb
mov
shlb
jle
adc
std
pop
shll
pop
jmp
push
sbbb
pop
xchg
push
cmp
into
test
jg
ss
imul
inc
xor
jmp
jno
ljmp
jl
dec
lret
sbb
movsb
dec
mov
mov
into
lds
dec
cwtl
mov
shlb
fisttpll
sub
or
aad
mov
fstl
push
or
loop
add
loope
jp
jne
mov
jb
sti
movsb
sub
testl
dec
push
sbbb
push
mov
jmp
mov
mov
lcall
sti
dec
stos
cmpsl
icebp
js
add
mov
gs
push
jno
jnp
ror
fisttpll
cmp
je
popl
movsl
cmp
push
mov
xor
xchg
push
mov
mov
xchg
dec
fwait
xchg
dec
pop
or
movsb
mov
xchg
hlt
push
aam
xchg
jb
cmp
lret
sbb
cmp
outsb
push
repz
sbb
nop
cmp
mov
movsl
pop
jg
inc
mov
inc
rcll
jbe
inc
xchg
loopne
in
xchg
js
sub
cs
jl
fwait
mov
add
gs
sbb
jbe
iret
imull
fsubs
lea
mov
rcll
fnstenv
subb
ss
hlt
push
mov
sub
repz
aas
lcall
imul
mov
fs
or
and
loop
push
push
lcall
test
data16
mov
les
into
loope
rcl
repz
and
sbb
sbb
daa
iret
jbe
xchg
dec
mov
sbb
cmp
or
sub
pusha
dec
inc
ds
movsl
lret
add
xchg
cmp
add
call
dec
xlat
leave
stos
mov
daa
lds
popa
int3
lds
mov
or
loopne
sub
lock
sub
rclb
mov
dec
addr16
xor
rolb
inc
out
aas
sub
dec
jle
push
repz
rcr
push
rorb
fisubrs
imul
shlb
mov
fidivs
imul
pop
movsb
rcrb
scas
adc
int
in
adc
out
icebp
add
in
mov
pop
cmc
shl
scas
fistpl
dec
rcrl
stos
repz
data16
movsb
dec
inc
mov
xchg
push
mov
hlt
aam
sbb
outsl
sahf
jg
xchg
popf
in
xchg
loop
fpatan
cmp
mov
cmp
mov
inc
idivb
test
decb
or
imul
in
sbb
xchg
ret
jle
bnd
rcr
xor
out
and
shll
add
fs
int
lret
test
repz
mov
mov
lods
pop
jmp
push
cltd
push
lret
xchg
jmp
lahf
fwait
push
inc
mov
pop
inc
mov
cmp
jae
sbb
pop
adc
nop
test
adc
fstps
das
stos
push
nop
or
dec
decl
mov
pop
pop
ss
ja
push
and
jge
popf
mov
sub
cwtl
dec
xor
ret
pop
imul
ja
shrl
repz
push
xchg
dec
enter
sub
inc
enter
inc
mov
push
add
adc
loope
sbb
add
mov
dec
ror
cltd
sbb
fdivs
incb
mov
mov
push
into
lret
outsb
mov
aaa
pop
jg
sar
popa
cmc
xor
jmp
mov
std
cmp
ret
mov
es
or
lret
data16
push
xchg
in
into
sub
or
add
lods
xor
ret
xlat
sti
in
jge
repz
sbb
cmpsb
xlat
fldenv
sub
jp
push
stc
jnp
pop
insb
in
aaa
push
inc
sbb
add
ja
or
add
adc
jp
pop
popa
fmuls
cmp
cltd
insl
lret
popf
les
ljmp
xchg
adc
push
push
dec
outsb
push
dec
les
pop
into
enter
js
or
arpl
xchg
shlb
or
outsb
cwtl
cmc
mov
es
in
mov
sub
in
sub
dec
sub
cmpsb
add
daa
sub
or
dec
shll
rorl
into
adc
data16
inc
pop
orb
inc
gs
out
fadd
xchg
outsb
xchg
xchg
loop
ds
jmp
pop
jbe
push
loopne
jnp
push
rolb
xchg
daa
and
pop
ljmp
jne
rolb
jb
shr
jo
xorb
mov
hlt
std
mov
xor
xor
inc
jp
pusha
notl
les
dec
cmp
loop
outsl
jae
das
jg
xor
mov
or
and
mov
mov
xchg
sbb
jnp
insl
loope
mov
fisttpll
cmp
pop
add
mov
mov
test
or
imul
adc
fwait
nop
or
stc
lcall
leave
insb
pop
xor
mov
lods
cmpsb
xor
cmp
dec
pop
jg
xchg
cmp
fsubl
xchg
cmpb
jp
test
ljmp
jl
out
dec
fnstenv
sarb
out
repnz
jnp
push
adc
lret
and
add
or
xchg
out
mov
jns
adc
dec
and
cmpsl
jp
and
mov
push
frstor
xor
bound
mov
fsubrs
scas
xor
xchg
jo
es
xchg
xchg
or
cmp
dec
lahf
dec
lock
pop
adc
leave
xchg
fiadds
test
sub
cmp
pop
lods
and
xor
add
cmp
push
xchg
sub
xchg
mov
rorb
sbb
jno
cmp
adc
aad
jmp
mov
mov
push
sub
loope
mov
dec
jae
out
imulb
inc
mov
aaa
inc
pop
out
or
outsl
push
int3
add
add
out
sbb
out
aam
push
adc
icebp
push
aaa
pushf
mov
call
cmp
in
xchg
jecxz
push
loope
movsl
mov
inc
adc
fidivl
dec
mov
jmp
jno
mov
sub
mov
loop
lcall
adc
test
cld
lea
repz
cli
leave
mov
leave
sub
adc
add
and
movsl
jb
mov
cmpb
cli
fwait
scas
or
dec
cmp
xchg
scas
sarb
pop
insb
in
jp
add
add
int
mov
ss
loopne
ds
call
sti
or
fs
loop
push
movsb
sub
inc
or
pop
dec
aad
push
testl
icebp
ss
subl
push
in
mov
jg
pop
mov
and
lods
test
and
fdivrl
mov
add
push
mov
adc
popl
or
or
push
dec
fwait
insb
rcrb
cmpsb
jae
int
inc
testb
leave
in
jp
fs
lahf
das
push
call
lret
mov
adc
aad
aas
leave
inc
mov
popa
mov
les
iret
gs
in
aam
jmp
xchg
inc
pop
cld
stos
inc
push
out
and
dec
cmp
call
and
push
lret
fisubrs
push
aas
mov
dec
and
pushl
nop
sub
inc
xchg
pop
adc
test
mov
int
sbb
xlat
dec
loope
push
mov
lods
push
fwait
xchg
pop
add
push
arpl
roll
pop
xor
pop
mov
fdivrp
stos
cltd
ficomps
loop
push
mov
xchg
jo
ds
aam
push
xchg
push
ror
sub
arpl
mulb
mov
iret
or
adc
out
sti
inc
jle
in
leave
std
dec
leave
clc
pop
inc
aam
jmp
into
pop
dec
in
xor
repz
add
xchg
popa
aam
lds
mov
pop
mov
mov
jae
mov
dec
inc
lods
sbb
xlat
xchg
pop
push
outsb
dec
dec
jbe
and
jmp
xor
test
push
int3
push
cmpsl
fcomp
add
jp
xor
push
jle
adcb
sbb
xlat
mov
pop
out
gs
lret
cwtl
xchg
test
xlat
adc
lods
repz
das
ret
jmp
ss
fwait
imul
sets
mov
jle
add
out
pop
inc
bnd
jge
inc
out
out
pop
iret
je
imul
fistpll
lret
in
stos
jp
jmp
inc
int3
in
dec
mov
rolb
movb
dec
in
divl
in
push
sub
jmp
mov
xor
lahf
inc
je
out
jbe
add
cmp
dec
mov
mov
or
bound
mov
sarl
xor
loop
pop
adc
push
scas
jo
mov
dec
filds
and
repz
out
adc
inc
addr16
xor
xor
xor
xchg
jo
cmpsb
jge
sti
testb
add
cmp
mov
inc
fimuls
shlb
push
les
fnstcw
adc
or
stc
in
jae
aad
sbb
xlat
mov
or
push
push
jbe
inc
out
push
les
xchg
imul
shr
or
pusha
jne
stos
mov
inc
cs
mov
fst
bound
push
cltd
push
jb
js
ror
iret
dec
mov
mov
loop
sbb
shl
js
mov
pop
lahf
xor
or
test
insb
or
xchg
insb
in
aaa
pop
mov
adc
inc
mov
mov
out
addr16
lahf
pushf
popa
mov
fists
sub
jge
stc
inc
packsswb
mov
sub
hlt
popa
push
cld
jmp
lods
xor
loopne
adcb
jle
inc
pushf
mov
pop
mov
mull
jns
sub
aad
std
or
rorb
mov
lods
fs
xchg
dec
adc
popf
sbb
int3
cmp
inc
mov
pavgb
pop
xchg
jp
popa
jo
dec
dec
xchg
insl
pop
out
repnz
push
pop
mov
addr16
out
mov
and
xor
fsubs
mov
dec
and
aaa
pop
inc
insl
xchg
pop
cmp
movsl
mov
add
or
and
or
mov
mov
fbstp
fcoml
cmp
inc
sahf
bswap
ret
rclb
inc
imul
mov
inc
aad
mov
fisttps
and
pop
aam
adc
push
pop
stos
into
mov
mov
mov
loopne
popf
jmp
cmp
pop
sub
mov
or
mov
scas
call
mov
jns
out
pop
adc
out
ds
add
xor
nop
or
sub
test
mov
push
mov
adc
gs
jbe
and
mov
lahf
jae
push
lods
sub
push
jle
inc
cmc
cld
in
adc
mov
out
mov
add
and
adc
adc
jo
mov
ja
jns
fdivs
notb
out
out
lods
sub
cmp
adc
mov
test
or
jb
mov
lock
sahf
cmpsb
out
mov
adc
dec
popa
xchg
inc
mov
push
loopne
ror
and
lahf
pop
sbb
je
jecxz
sbbb
iret
sub
mov
out
scas
jg
addr16
fucomi
add
cmp
pop
stos
mov
inc
not
jne
or
fcmovnu
lcall
sub
push
xor
cld
add
rcrb
gs
dec
or
loop
jno
or
dec
in
jb
xchg
inc
ret
xor
lret
xchg
and
jo
in
stos
stos
pusha
cmp
pop
mov
sti
mov
dec
inc
rcrb
in
add
jl
loopne
repnz
adc
aaa
mov
leave
mov
dec
aam
aaa
and
jo
in
fisubrl
or
cwtl
test
cmc
loopne
out
popf
daa
push
push
sub
out
push
xchg
mov
les
jg
rcrl
jle
sbb
xor
cmpsl
cmp
xor
rcll
inc
mov
jbe
sahf
in
dec
xor
mov
shrl
add
fdivl
shlb
push
outsb
mov
daa
sbb
bnd
fnstenv
xchg
xor
and
pushf
jl
in
insl
enter
leave
jno
pop
xchg
xor
jp
ret
ja
mov
in
xor
mov
lcall
imul
jnp
int3
adc
xchg
cmpsb
xchg
add
repnz
ja
stos
andl
pop
pop
loopne
adc
jo
pop
dec
ja
lds
xlat
mov
xchg
inc
ror
cwtl
adc
hlt
push
jns
push
out
fildl
adc
fcomp
inc
inc
pop
inc
inc
or
mov
adc
fildl
outsl
xlat
mov
sbb
outsl
shr
out
fbld
jmp
jbe
icebp
lods
add
shrb
xor
adc
dec
jne
xor
cld
or
xlat
mov
in
push
xlat
jbe
jae
int
js
or
nopl
jns
in
jnp
fsubl
pop
mov
inc
cmp
ficoms
fdivrs
cmp
cmpl
leave
jl
add
mov
push
es
sbb
inc
xor
cmp
gs
movsb
shll
or
mov
movsl
fisubrs
and
inc
mov
aas
mov
mov
dec
iret
cmp
movsl
cmpsb
pop
insb
out
cmpsl
inc
pop
jecxz
cmp
fucomip
or
push
xchg
es
mov
xor
in
test
cmp
xor
push
fs
aas
arpl
dec
push
jne
rolb
loopne
jecxz
in
inc
into
inc
inc
xchg
inc
or
pop
pop
popa
mov
popa
cmp
lahf
pop
add
jg
mov
inc
mov
xchg
add
and
int
add
mov
fsubrl
cmp
add
gs
sahf
mov
adc
lret
mov
sub
outsl
xor
dec
adc
push
scas
pop
mov
int
hlt
outsb
fwait
jb
movsb
xchg
sbb
adc
adc
ror
int3
push
add
jnp
ficoms
inc
dec
mov
inc
or
movsb
shrb
and
mov
mov
ret
aam
arpl
movsb
mov
pushf
xchg
xor
push
mov
sub
out
std
int3
popf
xlat
call
cmp
test
xchg
aam
leave
test
pop
sti
decb
jl
inc
dec
mov
aad
jmp
pop
dec
and
ficomps
mov
cltd
mov
cmp
xchg
mov
movsb
pop
add
xchg
jno
test
loop
cs
pop
and
std
enter
stc
mov
lcall
and
add
jne
call
and
shll
es
fsubrp
inc
inc
add
fdivr
mov
add
jnp
xchg
xor
add
shl
and
lock
icebp
in
mov
pop
cmpsl
sbb
sub
xor
pop
dec
into
mov
jne
xor
mov
iret
repnz
lahf
stc
div
mov
push
mov
pop
dec
mov
push
stc
xchg
or
insl
sarb
dec
xchg
negl
out
sub
cltd
in
mov
in
xlat
vpcmpgtd
sar
jp
and
test
adc
push
mov
mov
inc
mov
xor
mov
sahf
stc
pushf
and
popa
fists
or
scas
sbb
pop
mov
jae
sub
pop
scas
inc
mov
sub
jno
addl
js
ret
dec
push
xor
adc
cmp
cltd
jo
mov
push
pop
into
roll
enter
inc
xor
adc
shlb
es
mov
or
mov
xor
je
mov
mov
dec
in
inc
pop
cmp
mov
lods
mov
or
pop
inc
loopne
mov
jp
lcall
and
jo
sbb
mov
daa
push
into
lds
lret
ret
pop
xor
xchg
jb
nop
les
je
cmpsb
cld
aam
xor
xchg
push
lret
cli
cs
ss
jle
jo
cmp
xchg
xor
jecxz
andb
jp
into
mov
and
xor
sbbl
sub
fwait
test
dec
inc
aam
movsb
mov
jl
sahf
mov
lret
fisubrs
addr16
lea
cmp
push
jns
std
test
outsb
orl
rcrl
sub
bound
push
xchg
enter
icebp
call
mov
jae
scas
fsubs
mov
add
mull
int3
push
clc
jecxz
xor
cmp
aad
leave
shrl
push
push
jecxz
mov
out
aas
and
int3
sub
rorb
or
push
rcl
mov
mov
sbb
js
adc
jae
xchg
cli
or
jno
add
pop
test
jle
mov
cltd
add
sbb
cmc
push
pop
mov
gs
mov
mov
fdivr
loope
cmp
xchg
decb
sub
xor
fstl
outsl
jns
pop
ja
pusha
cmp
jo
and
rol
mov
aad
or
mov
sub
cmp
xlat
inc
jg
not
or
int3
mov
repz
lock
mov
push
fsub
bound
addr16
loope
cmp
adc
lods
aad
cltd
and
imul
mov
fadds
or
mov
add
jne
ret
aas
in
out
aas
sbb
lret
xchg
lods
or
repz
in
test
jge
mov
inc
mov
mov
inc
jmp
dec
and
pop
add
cmp
ja
out
imul
jp
mov
sbb
es
ljmp
sahf
addb
push
stos
imul
into
mov
add
jle
or
mov
movsb
int
out
jl
dec
sub
pop
mov
sub
xchg
jmp
mov
pop
sti
jne
xchg
xor
sbb
cmovs
push
test
popa
mov
dec
xor
test
push
cltd
lret
sbb
add
test
dec
push
sbb
push
mov
xlat
nop
in
cmp
or
mov
add
inc
aad
mov
orb
out
pop
xchg
std
or
loop
repnz
movsb
ret
mov
dec
or
insl
daa
fildl
or
stos
out
and
in
add
dec
dec
js
scas
pusha
insl
xor
pop
sub
lds
xchg
adc
jae
dec
add
pop
pop
push
repnz
pop
dec
stos
rol
add
pop
mov
pop
fnstsw
aas
jg
ss
orb
std
push
jbe
mov
push
cmpsl
jg
push
movsl
cmp
sarb
add
jl
pusha
mov
enter
or
movsb
sbb
xchg
cmp
les
out
cmp
out
mov
inc
mov
and
std
mov
inc
push
push
jae
jl
mov
jbe
pop
inc
xchg
loop
dec
outsl
dec
pop
push
dec
jnp
lcall
cwtl
sub
fnstsw
xchg
cmp
xor
inc
popa
mov
or
ret
inc
xor
test
jmp
xor
das
into
scas
int
lock
sbb
mov
xlat
push
je
mov
ja
in
inc
sub
notl
xor
or
or
rorb
mov
out
dec
mov
mov
js
xchg
cmp
jmp
cmp
lock
insb
inc
pop
pop
xchg
ret
mov
enter
arpl
pop
mov
mov
hlt
mov
xchg
dec
dec
xlat
lods
pop
popf
and
dec
daa
and
mov
inc
mov
or
xlat
pop
mov
mov
movb
push
push
and
jl
cmp
inc
aad
mov
jns
insl
sbb
loope
fldcw
in
cwtl
icebp
push
mov
mov
vmwrite
mov
scas
adc
lahf
ljmp
dec
insb
sti
mov
scas
sbb
mov
test
and
cli
mov
and
mov
pop
adc
xchg
add
mov
enter
out
push
cmc
call
int3
jecxz
lahf
outsb
cmp
or
in
adc
adc
and
lods
add
adc
cmp
fwait
subl
mov
call
lret
mov
adc
dec
lock
scas
sub
aad
fdivl
int3
add
fs
fs
pop
fucomi
out
sti
cmpsl
mov
mov
lods
or
aam
test
fdivrl
fstl
lods
adc
cmp
fdecstp
sbb
js
fildl
push
sub
ljmp
aam
scas
add
inc
cwtl
pop
aam
xchg
xor
repz
pushf
out
addr16
repz
loopne
mov
mov
or
pop
mov
icebp
bound
add
xor
rcrb
adc
mov
sbb
ss
xchg
cmpsl
cltd
dec
lock
mov
and
sub
add
imul
out
rorl
jb
out
cmp
rolb
insl
xchg
aad
iret
data16
cmp
outsl
imul
push
scas
addr16
sbb
jo
je
sahf
out
dec
sti
sbb
mov
sub
mov
scas
mov
bound
cld
xor
stos
push
push
test
mov
sub
jns
into
aas
mov
mov
inc
enter
xor
add
cmp
je
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
ja
mov
mov
mov
sub
xor
xor
add
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
mov
mov
movl
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
jmp
dec
inc
sub
scas
push
xor
addl
mov
mov
fs
mov
sbb
lret
xor
mov
mov
inc
into
out
sbb
aas
xor
mov
fisubrs
jne
dec
jno
mov
mov
sti
lret
addr16
jecxz
jno
jae
jne
cmpsl
cli
inc
aas
jno
add
jbe
mov
mov
addr16
mov
ret
stos
mov
cmp
mov
jns
cmp
mov
push
mov
aaa
sbb
leave
and
int3
int
mov
xor
mov
cltd
cli
cmp
sbb
in
sbb
or
inc
popa
cmp
notb
mov
std
addb
fs
jge
sbb
sbb
inc
mov
adc
xor
xchg
das
pop
hlt
int3
in
inc
out
out
push
pop
sbb
popa
shll
mov
dec
ret
ret
pop
call
pop
popf
notl
dec
lods
sar
sub
sub
mov
sbb
push
movsb
pop
jnp
in
cmpsl
xchg
adc
jo
xchg
cld
dec
inc
lods
out
bnd
loope
out
out
cvtpi2ps
insb
rorl
jle
testb
scas
ljmp
aad
outsl
int3
cmc
pop
xchg
pop
pushf
sbb
imul
jae
sub
pushf
aad
pop
popa
and
push
push
std
jae
in
addr16
xor
enter
loopne
inc
pop
push
push
enter
pop
dec
pop
push
ja
rcrb
jge
xor
leave
pop
mov
fildl
jmp
fabs
ja
mov
jno
add
sub
mov
cmp
scas
push
cmp
jmp
add
pop
loope
lods
xor
dec
or
push
mov
in
xor
nop
fwait
popf
inc
sub
mul
les
scas
pusha
xor
into
shrb
imul
les
mov
sbb
scas
xchg
or
dec
mov
arpl
jbe
loopne
inc
inc
adc
pop
push
loopne
push
cmp
adc
push
jge
xchg
mov
pusha
inc
cmpsb
insl
and
pop
lods
lcall
scas
insb
fs
test
popa
jo
ret
xor
jno
icebp
inc
mov
or
mov
or
pop
popa
fs
xchg
xchg
mov
into
cmp
aaa
bound
pop
jnp
rorb
adcb
mov
test
outsl
mov
jp
imul
and
push
dec
fistps
push
xchg
daa
lret
mov
push
pop
push
inc
adc
test
cs
gs
mov
pushf
out
mov
icebp
xlat
shll
rcrb
nop
xchg
inc
popa
sub
loop
fiadds
arpl
stc
mov
insb
inc
in
scas
dec
pop
fisubl
pop
push
push
xor
lcall
pop
movb
jle
and
test
shrb
addps
inc
shlb
inc
faddl
shlb
push
aam
imul
jmp
fstpt
pop
sbb
push
dec
rolb
out
cli
pop
or
xor
xchg
cmp
jp
cmpsb
xor
add
sbb
xor
push
imul
mov
enter
xor
out
adcl
dec
pop
addb
mov
fisttps
lods
add
dec
cmpb
jae
arpl
pop
es
add
das
dec
and
jle
mov
sti
mov
rcrl
sub
dec
push
subb
lds
add
or
xor
insl
aas
outsb
rcrb
idiv
leave
mov
inc
mov
ss
outsl
test
cmp
ret
push
mov
out
push
sbb
sti
mov
fidivs
cmc
cmp
stos
rcr
mov
push
dec
insb
das
or
repz
imul
sbb
fimuls
push
out
mov
or
sbb
jbe
sub
fwait
dec
jae
stos
mov
nop
enter
cmpsl
aad
jle
dec
sub
xchg
and
mov
lods
or
cmc
andb
stos
push
sbb
cmp
mov
pop
and
insb
push
pop
xor
mov
mov
pop
add
or
adc
mov
fadd
inc
mov
mov
fs
stos
imul
fsubs
scas
stos
pop
pop
jbe
cmc
cmpsb
nop
aam
mov
or
push
xchg
out
adc
mov
out
pop
mov
xchg
cmp
or
aas
sbb
xchg
mov
imul
jmp
cmpsb
les
aam
clc
dec
push
test
push
xchg
jo
pop
xchg
mov
xchg
lods
xor
cmp
add
or
dec
rcll
pop
mov
jns
cmpsb
cmp
ss
fisttpll
icebp
cwtl
repz
outsb
aas
fldenv
mov
sub
or
xor
pushf
lret
push
jns
cmc
sbb
int3
lds
lods
cli
int
cmc
hlt
xchg
cli
and
mov
shr
fcomip
mov
mov
loop,pn
push
subl
add
sbb
cli
xchg
hlt
sbb
nop
inc
push
dec
pop
rcrb
mov
ja
cli
sub
cs
pop
addr16
dec
ljmp
mov
sti
jge
xor
loopne
xor
inc
adc
mov
jae
xchg
inc
adc
and
push
dec
inc
add
dec
cmp
lea
inc
arpl
push
push
nop
shrb
stc
mov
mov
mov
push
pop
cmp
inc
je
pop
inc
fs
icebp
mov
shll
and
das
enter
enter
lret
mov
std
mov
test
push
lcall
movsb
stos
nop
dec
jb
ss
add
pusha
xor
mov
mov
cmpsl
mov
cmp
mov
jo
push
sub
arpl
daa
xor
lcall
pop
pop
mov
mov
in
mov
pop
push
test
movsl
sub
pop
in
xchg
fs
sbb
mov
and
cmc
ds
fwait
popf
and
into
push
int3
adc
jl
push
psubusw
mov
shrb
lcall
das
cmpsb
ror
push
faddl
outsl
sbb
inc
aas
or
xchg
sub
rorl
inc
and
aam
imul
push
xchg
inc
mov
out
je
cli
cmc
mov
int3
pop
add
in
mov
jnp
sub
mov
jbe
lods
sbbb
inc
jns
push
je
and
jmp
clc
push
int
jle
sbb
push
lcall
jo
jmp
mov
xorl
cmp
fdivs
inc
xorb
fs
sub
push
inc
and
test
movsb
mov
inc
jno
mov
mov
stos
push
out
dec
add
divl
lock
jbe
mov
xchg
insb
imul
mov
std
pop
addb
aam
imul
rcll
adc
sbb
lcall
in
fidivs
movsl
ljmp
test
cmp
xor
cmp
rcrl
mov
lock
out
ret
xchg
arpl
aaa
mov
clc
dec
push
js
enter
movsl
enter
shll
in
xchg
push
mov
in
cmc
xchg
into
ret
ret
ja
lretw
sub
ret
push
jb
mov
in
xorb
dec
in
insl
and
shl
mov
pop
cmp
adc
or
mov
ljmp
mov
and
fimull
jne
sbb
push
in
mov
cmp
pop
jmp
and
aam
out
mov
xchg
loopne
pop
sbb
cmpsb
push
stos
aaa
or
lret
into
pushf
test
aad
lods
add
mov
sbb
ljmp
cmp
mov
movsb
push
imul
fildl
push
cmp
mov
inc
movsl
jb
in
aam
sub
cld
dec
cs
lret
adc
push
rorb
popa
sub
ficompl
pop
lahf
pop
adc
push
jb
outsb
leave
jmp
test
std
mov
icebp
lea
fld1
sbb
pop
cmpsl
xchg
dec
sub
dec
idivl
jmp
es
out
mov
pusha
enter
jne
cs
sub
popa
push
adc
cmp
gs
dec
jp
and
pop
jae
mov
dec
ret
sub
repz
aaa
mov
mov
call
in
jl
and
or
xchg
lock
sbb
mov
lea
call
mov
inc
outsl
pop
mov
and
je
test
and
pop
xor
mov
pop
test
jmp
popa
mov
testl
or
aaa
inc
mov
ljmp
xor
lcall
shll
insl
hlt
xor
flds
jle
adc
or
fwait
push
sub
inc
inc
stos
iret
incb
loope
test
in
andb
mov
lds
cmpsl
add
adc
loope
mov
cwtl
dec
orl
adc
repnz
inc
pop
scas
sbb
andb
rclb
inc
dec
out
mov
cmp
pushf
les
jmp
add
aas
jnp
dec
movsb
pop
data16
push
mov
sbb
pop
fldl
fdiv
lret
int3
xor
test
xchg
pop
and
mov
sbb
adc
cmpsb
mov
dec
aam
outsl
je
mov
mov
popa
bound
je
into
jno
arpl
add
or
les
adc
mov
loop
popl
jecxz
out
test
out
mov
nop
data16
cmp
mov
push
andl
loope
xchg
cmpsl
mov
loopne
xchg
inc
push
jbe
cltd
jbe
jmp
insl
lods
ljmp
fildll
jg
ficompl
add
rolb
repz
enter
inc
xchg
fadds
call
xchg
mov
in
lret
fwait
and
repnz
push
lcall
mov
or
xchg
xor
pop
lcall
subl
push
das
xchg
xchg
push
adc
stos
aas
push
mov
popf
or
cwtl
mov
xchg
sbb
add
jge
push
pop
mov
xchg
mov
js
ljmp
or
out
orl
hlt
nop
add
mov
fs
pop
dec
popa
out
mov
xchg
cltd
and
jp
inc
jmp
xchg
loopne
push
sbb
cmpsl
gs
mov
sti
fsubrs
sbb
sbb
nop
dec
rclb
mov
ss
pop
out
fildl
mov
xor
mov
outsl
pushf
fnstcw
sbb
imul
pop
cmc
dec
dec
mov
inc
pop
xor
jne
sar
es
ficomps
repz
add
cli
mov
gs
push
mov
sub
sbb
mov
testb
mov
fwait
push
mov
popa
and
jmp
clc
jo
mov
mov
cltd
pop
dec
lahf
push
dec
repnz
cmp
xlat
outsl
jg
pop
push
clc
pusha
test
inc
or
pop
pop
pushf
jg
sbb
sbbl
loop
scas
aaa
ds
sbb
push
mov
mov
adc
jnp
scas
in
test
inc
addl
jmp
mov
in
mov
pop
push
jge
inc
es
orb
ret
push
addl
loopne
xor
sar
je
ficompl
sub
test
jg
aam
sahf
nop
mov
gs
xor
jo
fbld
out
pop
jle
sub
outsb
push
cmpb
cmp
pop
fcoms
push
pop
mov
adc
mov
push
test
stc
mov
dec
in
mov
xchg
popa
inc
sbb
adc
je
sti
mov
sbb
jae
sar
or
aam
rorb
nop
enter
call
xor
insb
es
lods
xchg
cmpsl
clc
xlat
lret
mov
mov
andl
jp
add
sbb
push
cwtl
gs
mov
cmc
ja
lcall
inc
cltd
outsb
dec
inc
sahf
icebp
jbe
sub
ret
sbb
in
dec
out
xchg
andb
int
popa
dec
ds
nop
pop
daa
popa
popa
and
sbb
daa
sbb
xchg
sbb
jge
ret
mulb
lret
cmpb
in
jae
mov
lods
or
arpl
or
sti
jg
mov
aaa
and
fnstsw
jp
cs
gs
rcrb
jae
scas
out
sub
in
mov
adc
cld
into
addr16
push
or
test
dec
or
inc
scas
dec
mov
and
or
xchg
or
sub
pusha
lods
pop
rcr
inc
shlb
mov
cld
call
adc
push
mov
sbb
sbb
fsubl
cmp
jmp
fstpt
mov
aas
jg
and
adc
jno
ss
int3
outsl
hlt
bound
and
or
loopne
call
push
imul
add
dec
push
gs
loopne
cmp
hlt
mov
pop
and
lods
push
stos
xchg
out
jno
cltd
lret
lret
fdivs
cmc
jb
jmp
insl
lahf
mov
jo
jmp
les
popa
lods
mov
hlt
adc
imul
out
idiv
or
mov
pop
lock
js
addb
arpl
test
push
scas
xchg
stos
fistpl
fs
push
les
mov
sbb
xor
dec
mov
std
daa
fs
cmpsb
sbb
push
fwait
shr
mov
push
dec
lahf
inc
xchg
fstpt
and
or
jp
mov
sbb
stos
loope
test
sbb
cmp
mov
add
mov
jmp
mov
in
xor
popf
data16
inc
and
iret
stos
ror
mov
repnz
insl
mov
xchg
xor
or
sub
mov
test
xor
cmp
out
or
pop
jg
push
gs
mov
mov
sbb
or
mov
std
push
sub
mov
addr16
test
addr16
lea
mov
mov
into
xchg
sbb
lods
sub
out
jmp
rcll
or
in
and
mov
sbb
xchg
addb
mov
mov
pusha
scas
call
lcall
cld
push
mov
test
loop
inc
mov
imul
cmp
jns
cmp
stos
out
and
test
dec
enter
leave
test
add
out
std
dec
dec
mov
out
lds
std
cmp
ret
fisubs
out
lahf
lret
mov
push
adc
and
cmpsb
dec
rcrb
popf
lret
jg
mov
repz
lahf
fcoms
scas
ficomps
cmpsl
xor
inc
aas
mov
push
insb
pop
jae
xchg
clc
push
adc
inc
int
cwtl
push
fisubl
into
inc
orl
mov
loop
psrad
rcrb
pop
enter
or
addr16
popa
scas
xor
cmp
shrl
repnz
mov
lods
arpl
pushf
test
loope
data16
sbb
jbe
in
and
and
mov
repz
jno
adc
xchg
dec
imul
mov
mov
jg
jg
mov
test
inc
in
das
loopne
pop
lds
push
outsl
pop
or
loop
outsb
jmp
sub
rorl
pop
mov
mov
and
fwait
add
push
es
adc
inc
inc
sbb
push
mov
dec
out
dec
outsb
pop
xor
das
outsb
loop
cwtl
mov
inc
push
in
pop
aam
jo
xchg
xlat
gs
jns
sahf
mov
push
lock
cmp
jne
mov
dec
cmp
rcrb
push
adc
sahf
adc
push
cmp
xor
arpl
imul
nop
ljmp
cmp
push
incl
in
loopne
out
in
fildll
lcall
and
das
jae
dec
iret
adc
negl
pop
lret
leave
mov
inc
mov
ljmp
jp
loop
mov
popf
jmp
lahf
faddp
pop
pop
push
out
sub
popf
repz
ret
mov
mov
pop
test
pop
xchg
gs
lods
mov
cmp
addb
xchg
sbb
ds
pushf
clc
test
ja
sub
mov
xchg
repnz
adc
sub
fdivrs
fidivrl
xor
stos
mov
add
nop
sub
cmp
push
xchg
sbb
and
jecxz
pop
jl
jg
mov
loope
mov
push
xchg
out
lcall
add
push
inc
outsb
dec
inc
int3
or
xchg
or
push
xchg
int3
loop
pop
js
sbb
addr16
mov
out
movsb
aad
cmp
icebp
scas
movsb
xchg
and
or
sbb
sbb
push
jl
lret
mov
out
stc
jg
mov
in
dec
mov
xchg
mov
stc
jbe
ds
jle
and
sbb
and
movsl
xor
in
shlb
pop
fimuls
out
popa
cmpsl
xor
movsb
mov
pop
mov
fadds
mov
dec
mov
pop
fbstp
push
ljmp
outsb
dec
outsb
mov
xor
mov
lcall
xchg
lea
fists
outsb
or
imul
jl
add
aad
popf
call
dec
fs
push
sbb
push
jo
xor
sub
mov
aaa
lcall
pop
dec
push
fidivrs
ret
mov
jmp
and
cli
pushf
popa
in
mov
call
sahf
xchg
xchg
rolb
cwtl
loop
popa
insl
inc
xor
fsubl
and
push
sarl
xchg
sti
sub
mov
xchg
fcomps
shrb
nop
and
aas
push
shl
mov
nop
out
dec
adc
xchg
push
scas
dec
outsb
aas
lcall
jnp
adc
push
sbbl
movsb
xor
push
fsts
push
and
cmc
lods
jle
in
cld
or
mov
gs
jb
je
fisubs
cmp
enter
xor
in
in
insb
ja
orb
int
les
sbb
repz
xchg
xchg
xchg
adc
cld
jns
xchg
cmpsb
or
sahf
out
xor
mov
push
int
pop
mov
andl
dec
js
bound
and
jmp
mov
das
sbb
fwait
mov
out
inc
fmuls
jp
mov
sbb
sub
add
test
sub
mov
xchg
enter
test
cld
push
add
jb
push
xchg
dec
lahf
cli
xchg
bound
sbb
mul
sub
mov
sbb
sar
pop
or
sbb
imul
xlat
push
mov
jnp
xor
pop
xor
inc
movl
xor
sbb
mov
inc
cmp
into
out
fisttpll
pop
push
push
cmp
into
push
pop
aas
lahf
ss
sarl
mov
out
bound
cmp
stos
cwtl
inc
sub
cmp
in
inc
sub
jge
mov
loop
or
ljmp
xchg
mov
pusha
push
jmp
xor
fs
push
mov
inc
pop
and
in
mov
pop
nop
mov
pop
lock
xchg
add
mov
int3
pop
addb
mov
mov
arpl
lret
jmp
adc
push
fimull
ja
imul
lret
das
xchg
mov
fmul
ss
adc
test
xor
mov
out
push
call
add
mov
pop
imul
lods
mov
adc
push
es
ss
add
lahf
test
push
sub
ret
push
jne
test
mov
fdivl
imulb
sbb
dec
sbb
outsb
and
sub
les
mov
jg
or
outsb
fwait
cmp
lcall
inc
xchg
jnp
mov
paddusb
dec
mov
mov
mov
xchg
inc
xchg
xor
mov
mov
push
jmp
add
ljmp
pop
add
scas
xor
sbb
lret
push
out
in
add
lods
sub
paddw
cmp
adc
test
pop
ja
add
sub
cs
or
movsb
or
jge
jecxz
stos
lcall
pop
insl
cmp
dec
inc
adc
mov
xlat
mov
les
jl
and
out
xchg
jae
mov
or
call
in
push
cmpsb
sbb
xor
lea
aaa
sbb
sub
rcl
clc
jnp
cmp
sub
mov
imul
mov
xor
mov
add
push
cli
loope
pushf
cli
cmc
cmp
movsl
imul
repnz
in
inc
jg
daa
jmp
repz
lods
and
outsl
or
rcrl
mov
pop
jle
add
stos
out
stos
pop
and
pop
xor
sti
xchg
ret
add
xchg
and
les
popa
pop
mov
and
inc
pusha
inc
cmp
jl
inc
push
xchg
cwtl
sti
mov
imul
add
in
int
push
icebp
arpl
loope
sbb
sarl
mov
out
jge
pusha
sbb
out
test
sub
sbb
inc
sbb
arpl
les
pop
cmp
dec
or
or
and
add
sbb
cmp
ret
rolb
out
jle
jle
ss
mov
les
leave
cld
outsl
scas
mov
mov
or
inc
cwtl
sbb
out
cltd
ret
ret
pusha
push
popf
cs
dec
inc
test
into
xor
bound
js
cli
imul
repz
enter
pop
jno
or
outsl
dec
in
cmpsb
jmp
dec
sarl
cli
sub
mov
repz
aaa
icebp
int3
jb
enter
dec
push
fidivl
xchg
int
or
dec
dec
mov
inc
lods
jno
in
and
fidivs
add
fnsave
add
xchg
clc
add
jmp
and
and
dec
sbb
mov
lret
xor
push
idiv
ljmp
lods
popf
ljmp
push
inc
scas
imul
aad
sbb
mov
shr
jo
sti
mov
xchg
xchg
mov
orb
roll
cmp
hlt
in
mov
mov
cmc
sub
shrb
aad
mov
fisttpll
add
pop
dec
ret
inc
dec
inc
adc
hlt
movsl
jbe
popa
js
inc
std
lret
xor
sbb
ret
sti
lret
lret
mull
ss
out
and
jle
pop
or
push
fdivrs
sbb
iret
call
jl
jnp
mov
push
mov
faddl
or
cmpxchg
add
aas
sub
mov
popa
mov
push
loope
add
dec
stos
pusha
or
fwait
jp
mov
sub
aaa
pop
insb
inc
jmp
inc
psubsw
xchg
into
inc
push
inc
data16
push
or
clc
dec
fstps
scas
or
xor
ljmp
adc
mov
call
push
aad
ret
xor
mov
aas
sub
mov
movsb
jg
je
lds
sti
add
sbb
sbb
pop
push
jns
je
enter
enter
stos
mov
xchg
ret
in
enter
push
push
std
movsb
push
adc
mov
cmpsl
dec
sbb
test
inc
jno
pop
loop
cli
xor
aam
xchg
xchg
data16
stmxcsr
mov
pop
ret
mov
jno
out
pushf
cltd
repz
adc
lret
notl
lahf
push
xor
filds
mov
call
outsl
lret
loop
out
outsb
add
js
mov
lds
divl
lds
and
push
pop
stos
lahf
fldenv
push
pop
fistl
orl
movl
pop
clc
push
cmpsl
jnp
je
sbb
addl
mov
adc
mov
adc
push
out
insb
push
cmp
adc
outsl
scas
mov
stos
movsl
mov
pop
out
mov
sar
sarl
xchg
clc
and
pop
repz
subb
nop
pop
pop
xchg
int
push
sbb
fstps
sub
jle
call
add
loopne
mov
sub
daa
fmul
es
test
mov
xchg
mov
movl
or
lea
lods
xchg
pop
jmp
fs
xchg
pop
push
subb
jb
xlat
sub
sbb
fwait
add
cld
repnz
mov
mov
test
sbb
loop
popf
xlat
cmc
sub
clc
rorb
mov
mov
dec
dec
xor
imul
ficomps
or
mov
ret
sub
shrl
adc
daa
mov
mov
push
adc
pop
adc
pushf
in
bound
sarb
xor
xchg
or
pop
pop
stos
insb
nop
fsubl
int3
inc
sbb
shlb
mov
in
cmc
int
mov
icebp
add
jb
add
sti
es
cld
push
add
gs
dec
mov
ss
lods
out
nop
leave
jmp
cltd
pop
mov
jb
inc
lahf
cmovbe
push
sub
loop
sub
jmp
jne
push
pusha
bound
jo
into
insl
sarl
sbb
push
fbld
imulb
pushf
xchg
xchg
les
add
inc
adc
add
adc
aaa
std
xchg
pop
mov
lret
movsbl
fnsave
cltd
imul
dec
insl
dec
rolb
pushf
ret
sbb
xor
jle
sbb
or
stc
outsb
sub
fdivrs
stos
inc
dec
push
inc
sbb
test
mov
pop
outsl
mov
rolb
pop
std
out
xchg
add
mov
jae
push
repz
or
stc
pop
repnz
js
je
into
xor
cltd
add
jns
xchg
cld
cmpsl
xorb
flds
dec
adcl
hlt
arpl
mov
movsl
cmpb
jno
lret
repz
test
and
jg
ja
push
call
mov
sub
std
add
or
popa
stc
xor
sbb
nop
fstps
mov
inc
dec
ss
mov
jno
or
in
sbb
ret
mov
aam
lahf
cmp
nop
pop
mov
outsl
mov
paddusb
das
push
in
xchg
inc
sbb
sub
jnp
adc
popa
pop
xor
ds
les
mov
and
imul
or
or
cmp
pop
dec
push
push
imul
sbb
imul
fsubl
je
mov
mov
push
jecxz
sbb
arpl
jecxz
adc
cmp
jmp
add
dec
sbb
loope
and
mov
sub
stc
test
push
and
out
lods
lea
jge
xchg
adc
adc
adc
push
ret
mov
out
repz
lods
sub
test
mov
int3
jne
into
insb
xor
daa
adc
ret
xchg
push
add
cmp
or
add
imul
push
or
and
add
push
jno
xor
pop
imul
popa
data16
pop
mov
or
repnz
dec
mov
mov
cmp
ja
xorl
sbb
jg
adc
cltd
mov
xor
pop
xor
repz
sub
lret
movsb
lret
ficomps
lods
push
xor
fcomps
out
stos
xor
sbb
and
dec
div
dec
call
xlat
outsl
cmp
xchg
stos
fiadds
fdecstp
rclb
mov
and
cli
lods
mov
or
repz
sbb
addr16
jmp
adc
mov
out
cmpsl
jle
imul
lcall
fstps
sbb
aas
and
add
add
pop
test
pop
test
scas
cmp
or
mov
ss
rcrl
cli
out
sbb
push
pop
mov
jmp
repz
mov
xchg
sub
dec
out
jl
xor
and
fwait
lods
lods
mov
arpl
or
js
mov
push
adc
jo
das
mov
lock
xor
mov
sbb
lahf
xor
jmp
xorb
cmp
or
pop
pushl
adc
int3
or
push
inc
nop
inc
jge
leave
xchg
dec
lods
dec
das
cli
jns
fdivl
fnsave
xchg
xchg
pusha
jmp
popf
mov
xchg
or
pop
cmpsb
cmp
pop
shl
jmp
sbb
add
mov
sbb
sub
fwait
arpl
mov
xchg
shlb
mov
sbb
pop
out
dec
inc
jae
mov
pop
mov
mov
or
dec
cmp
mov
sub
and
adcl
adc
mov
jecxz
imul
adc
fbld
nop
je
sub
movsl
push
mov
testl
fcoms
xchg
sub
adc
xchg
xchg
inc
add
jno
push
in
push
mov
xor
shrb
xor
cs
add
fbld
pusha
test
adc
push
push
push
pop
loopne
out
inc
push
jns
lock
cld
jo
and
mov
push
xor
sbb
or
les
adc
mov
push
dec
ror
jne
jecxz
dec
stos
and
jnp
mov
sub
jns
mov
mov
das
dec
out
gs
xchg
inc
mov
cmp
push
das
push
add
inc
rcll
inc
outsb
ljmp
mov
inc
je
jl
dec
mov
mov
sub
clc
push
adc
inc
dec
pushf
add
add
call
mov
pusha
xchg
xchg
cmp
clc
and
ljmp
insl
cmp
ljmp
push
lock
mov
lret
cmpsl
stc
aad
pushf
int
mov
neg
sub
xchg
sub
leave
sbb
sbb
pusha
mov
iret
push
cmpsb
data16
and
mov
fwait
imul
shl
sbb
movsb
scas
mov
call
aad
mov
lock
dec
fninit
jp
or
pop
ja
popf
fimull
mov
xor
jae
or
xchg
ljmp
rorb
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
jmp
mov
mov
xor
lea
lea
xor
cmp
jne
decl
jne
mov
mov
mov
xor
mov
xor
mov
xor
mov
mov
xor
mov
mov
xor
add
pop
pop
pop
leave
ret
sbbl
xor
sbbl
inc
ret
push
mov
sub
andl
mov
inc
mov
cmpl
jbe
jmp
push
push
push
push
call
cmpl
jb
movl
push
movl
mov
push
andl
mov
inc
mov
cmpl
jbe
jmp
pushl
call
cmpl
jb
mov
orl
xor
subl
push
addl
mov
andl
add
mov
mov
addl
test
je
movl
cmpl
je
cmpl
jle
jmp
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
sbb
mov
mov
and
mov
xor
movl
cmpl
je
cmpl
jg
jmp
push
push
pushl
pushl
pushl
push
call
mov
dec
mov
jmp
add
mov
sub
mov
add
xor
adc
add
add
mov
mov
add
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
ja
jmp
push
pushl
push
push
call
jmp
add
mov
movzbl
add
mov
mov
xor
mov
or
add
andl
mov
inc
mov
cmpl
jg
jmp
pushl
call
cmpl
jb
mov
andl
sub
subl
lea
xorl
xor
adcl
xor
cmp
je
mov
sbb
mov
mov
xor
add
movl
cmp
movl
jne
xorl
pushl
call
xor
mov
mov
mov
sbb
mov
sbb
mov
xor
add
movl
cmp
je
pushl
pushl
movl
call
mov
adc
mov
adc
mov
subl
xor
adcl
add
cmp
movl
je
xor
add
and
mov
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jb
jmp
push
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
mov
adc
mov
mov
orl
add
and
mov
mov
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jbe
jmp
push
push
push
push
call
cmpl
jne
mov
inc
mov
jmp
mov
add
mov
adcl
mov
andl
mov
inc
mov
cmpl
jbe
jmp
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
add
mov
jmp
mov
mov
add
mov
mov
mov
xor
add
cmp
je
jmp
mov
mov
xor
add
cmp
mov
je
mov
xor
add
cmp
je
lea
push
pushl
pushl
call
mov
mov
xor
add
cmp
je
mov
movzwl
mov
mov
mov
jmp
mov
xor
lea
jmp
mov
xor
add
jmp
mov
add
mov
mov
test
je
movl
push
xor
pop
add
push
pop
push
dec
pop
dec
xchg
sub
xchg
dec
mov
imul
sub
mov
mov
xor
add
jmp
mov
mov
mov
mov
xor
add
xor
div
mov
xor
lea
mov
mov
mov
mov
mov
xor
jmp
mov
mov
pop
ja
les
or
addl
rcl
xor
pusha
rolb
fwait
dec
frstor
cmpsl
ror
lods
jmp
push
mov
stos
dec
es
jno
lcall
adcl
and
mov
jbe
or
into
adcl
jmp
xchg
adc
cmp
pop
jge
outsl
pop
je
jle
xor
or
fisttpll
test
push
pusha
mov
out
add
js
push
stos
sbb
lea
mov
mov
nop
popa
inc
divb
test
push
stos
jg
std
sbb
and
mov
pop
cmc
stc
std
gs
cmpsb
cli
pop
xchg
mov
test
mov
fmull
test
icebp
mov
push
mov
call
mov
es
sahf
xchg
mov
cld
out
dec
and
push
stos
pop
or
rolb
and
outsb
imul
mov
fs
sbb
mov
hlt
sub
fistl
push
jmp
enter
cmp
fwait
xor
icebp
fistl
adc
cmp
filds
das
xor
fwait
mov
loop
mov
mov
test
sbb
jns
sbb
mov
mov
xchg
cmp
fmuls
je
out
ret
add
imul
out
imul
inc
imul
xor
jmp
daa
mov
ds
rcll
mov
adc
aad
add
sbb
mov
jns
inc
stc
out
add
mov
sub
add
aas
mov
jae
mov
addr16
test
sbb
mov
repnz
dec
jnp
int3
xor
ja
jmp
pop
outsb
popa
rcr
enter
xor
stc
pop
int
jns
sub
testl
mov
data16
push
push
jns
call
ss
fwait
mov
pop
sbb
pusha
xchg
cmp
sub
test
lock
ffreep
fwait
aaa
and
stc
or
xor
pop
fisubl
or
sub
movsl
lahf
cmpl
and
pop
xchg
pop
mov
iret
push
sbbl
push
jecxz
and
enter
mov
add
adc
push
inc
scas
push
cmpsb
cmpsl
xchg
xchg
dec
imul
jbe
into
leave
pop
int
xor
scas
cmpsb
bound
mov
cmp
sbb
dec
cmpl
pop
lahf
and
push
subb
sub
test
sub
push
mov
int
jns
movsb
test
daa
mov
dec
mov
outsl
jns
aam
mov
popa
aam
stos
mov
lret
lock
ret
pop
inc
cmc
in
jmp
pushf
mov
cmpl
test
dec
lds
sbb
or
inc
ret
dec
cwtl
sbb
in
loop
call
cmp
sub
adc
fldl
jecxz
scas
and
leave
lock
mov
push
je
add
insl
add
daa
push
add
loope
mov
inc
lret
repz
xor
adc
in
pop
ja
into
xor
cmp
daa
loopne
shrb
or
mov
push
div
xchg
jg
js
pop
sgdtl
mov
add
cld
pop
pop
cmp
fistps
or
aad
movsb
lea
adc
push
xor
xor
and
xchg
ljmp
and
pop
sarl
testl
dec
jae
scas
aad
addr16
cs
adc
push
or
sub
jmp
test
loopne
mov
xor
out
or
mov
es
cmc
stc
jno
int3
movsb
mov
popa
or
popf
fsubs
xchg
mov
arpl
outsl
mov
xchg
pop
xchg
jae
pop
or
lods
xchg
dec
mov
call
sti
addr16
bound
dec
mov
lea
lret
push
in
xchg
dec
dec
js
lds
sub
xor
jns
stos
pushf
adc
mov
mov
scas
push
jno
mov
loopne
mov
push
lret
xor
mov
fdivrs
inc
sbb
add
add
dec
repnz
popa
aaa
xchg
js
push
aas
das
mov
test
inc
jb
scas
lds
xchg
pop
adc
lock
ss
std
sbb
or
movsl
pop
mov
sti
add
mov
and
add
out
sahf
nop
jnp
mov
das
fwait
inc
pop
sbb
sub
jo
mov
xor
pusha
push
in
jns
adc
mov
push
mov
mov
sbb
int
add
fildll
faddl
mov
cltd
test
shlb
push
xorb
cmc
xlat
pop
in
shl
cltd
movsl
xchg
cmp
push
and
sbb
outsb
movsb
dec
test
mov
shrb
pop
pop
xchg
add
sub
cmp
push
aad
insb
outsb
sbb
neg
and
push
dec
pop
push
into
push
daa
sbb
add
cld
mov
ret
push
lds
mov
jge
xor
pushf
data16
cs
mov
push
popf
push
pop
and
sbb
cmp
xorl
or
inc
xlat
or
test
sarb
stos
mov
fs
xchg
mov
jmp
jnp
dec
xchg
popa
pop
inc
xor
adc
dec
addl
out
sbbb
insl
xor
out
jp
je
sub
cmpb
cwtl
jbe
out
push
mov
pop
repnz
int3
subl
out
pop
cld
xor
fstps
int
outsl
out
add
int3
in
jmp
xor
sbb
mov
iret
and
xorb
xchg
adc
das
dec
movsb
jb
sub
push
inc
adc
in
xor
lods
pop
mov
stc
mov
xchg
ja
cmp
in
arpl
or
pop
iret
shl
jno
clc
push
dec
jge
fwait
push
inc
repz
lds
jp
sbb
and
clc
sub
filds
outsb
jo
mov
movsb
dec
pop
dec
or
test
sti
sbb
push
mov
lock
add
dec
cli
sbb
std
shll
xchg
sahf
repz
adc
cwtl
pop
xor
and
bnd
add
inc
mov
mov
js
pop
mov
filds
mov
in
fs
dec
pop
stc
xchg
or
push
xlat
inc
xchg
test
adc
xlat
daa
in
push
movb
ljmp
xor
lock
adc
mov
or
push
mov
ja
add
push
or
daa
push
clc
mov
adc
sahf
sarl
pop
outsl
add
and
or
ficoms
pusha
mov
sub
in
out
pop
xchg
adc
and
xor
jle
cmp
aam
adc
and
hlt
cltd
xchg
hlt
push
mov
mov
lods
adc
pushf
test
pop
lret
push
in
cmp
movsb
ficomps
and
scas
jmp
scas
push
stos
xor
fnstcw
lods
cmc
adcl
sub
aam
sbb
cs
pop
decl
fbstp
out
sahf
push
push
sub
out
ja
push
movsl
and
loope
cmp
cmpsb
orl
into
push
cmp
lods
xor
mov
lds
ja
mov
or
pop
sbb
push
xchg
sqrtps
push
xor
dec
popa
sahf
xor
insl
add
cli
int3
in
jne
les
mov
push
je
call
xchg
es
dec
mulb
pusha
mov
push
jno
movsl
inc
js
dec
dec
xchg
pop
inc
testb
sub
imul
mov
fcomp
lcall
jmp
mov
inc
cmp
add
pop
out
call
cmp
fwait
mov
cmpsl
nop
xchg
xchg
dec
add
mov
outsl
repz
dec
cmp
xchg
push
lock
jge
int
pop
scas
and
cltd
jno
notl
or
inc
add
jecxz
fs
mov
dec
and
cmp
std
mov
dec
subl
mov
mov
cs
std
push
jo
test
ds
cs
leavew
adc
or
mov
push
iret
pop
aaa
jns
loope
inc
or
shr
loop
lcall
cmpsl
ja
push
add
into
es
filds
dec
jl
mov
inc
push
icebp
pop
cmpsl
insl
cmpsl
xor
inc
rclb
enter
mov
sbb
and
das
stos
jns
pop
inc
fs
fdivl
sub
in
sbb
pop
mov
das
das
das
rorl
pushf
xor
rcrb
inc
push
fdivrl
mov
cmc
lcall
ret
lret
test
out
loop
daa
and
aam
insl
nop
fsubrl
out
movsb
dec
lret
cwtl
pop
mov
sbb
jl
movsl
jmp
xor
icebp
push
and
or
pop
xchg
icebp
xor
mov
push
add
enter
adc
jge
daa
push
enter
pushf
dec
call
movsl
mov
mov
or
and
or
out
or
enter
sbb
push
lea
sub
cwtl
and
or
clc
fnstenv
je
sbb
inc
fiadds
fstl
mov
outsl
test
gs
jns
add
idivb
leave
pop
popf
test
inc
shlb
lcall
dec
lahf
iret
xor
bound
pop
data16
cmpsb
mov
mov
mov
and
dec
or
sahf
lds
rcrb
sahf
adc
movsl
cltd
dec
adc
add
push
jl
cmp
repz
fstpt
jb
push
imul
pop
add
iret
pop
xor
and
mov
cmpsl
and
adc
cmp
sarb
lret
xchg
loope
aaa
insb
loopne
pop
or
fucomp
outsb
mov
push
xor
pop
adc
fisttpl
mov
in
aam
mov
and
pusha
inc
add
lock
mov
inc
loope
ret
fxch
xor
popf
sub
stos
in
aas
rol
mov
jg
aad
fstl
lods
frstor
mov
mov
xor
popf
jmp
sub
das
sbb
leave
adc
push
aam
push
sti
out
mov
rorl
adc
mov
nop
js
xlat
fs
or
in
lret
fs
mov
cmp
nop
add
xor
xlat
in
js
scas
mov
xor
jecxz
xchg
jp
mov
int
cmp
loopne
or
scas
xchg
aas
add
fdivrp
int
ss
bound
in
xchg
call
imul
inc
fiadds
push
dec
rol
aad
out
xchg
push
pushf
mul
push
test
adcb
sbbb
jae
rcrl
push
test
fstps
xchg
and
std
jle
push
loopne
cmp
fiaddl
lcall
roll
pop
imul
arpl
imulb
and
xor
add
subl
jne
mov
mov
in
cmp
movl
idiv
pop
push
stos
sahf
adc
jmp
decl
pushl
ljmp
loop,pt
xor
xchg
out
iret
push
popf
shld
jge
mov
test
pop
lahf
sbb
cmp
icebp
arpl
xor
mov
mov
inc
push
and
insl
jb
stos
lret
xchg
hlt
mov
mov
pop
adc
imul
or
vmovaps
mov
xchg
in
adc
cmp
mov
into
xlat
scas
mov
xor
push
sub
repz
nop
test
out
lds
inc
fsubrl
jmp
scas
pop
and
aas
mov
daa
test
dec
inc
push
xchg
dec
loopne
mov
stc
pushf
aam
insl
fs
mov
lcall
in
push
jbe
mov
xchg
mov
mov
adc
push
push
les
ds
pop
sbb
mov
mov
fcmovnb
in
jp
xchg
dec
add
xor
in
xchg
enter
cld
cmp
pop
cmp
pushf
sbb
and
mov
dec
imul
repnz
xchg
ficomps
sub
enter
and
dec
insl
mov
jo
cltd
cmp
sbb
xchg
mov
cld
loope,pn
add
cwtl
outsl
je
fsubr
lods
sub
inc
sbb
lock
cmp
cld
ret
lret
test
mov
push
sbb
mov
data16
sbb
sub
arpl
sbb
les
insb
arpl
sbb
dec
imul
jb
jmp
or
cltd
cwtl
or
enter
or
cmpsb
or
push
or
and
fs
adc
or
dec
call
inc
test
scas
pop
rcll
sub
outsb
insl
loope,pn
call
jno
mov
inc
and
push
ds
or
adc
add
lods
rcrl
sbb
popf
mov
dec
daa
xor
test
mov
pop
insb
cs
and
mov
idivb
mov
or
mov
cwtl
pop
test
add
rolb
dec
adc
fildll
movsb
lea
loop
sub
scas
test
dec
push
or
xor
dec
xchg
arpl
inc
mov
mov
movsb
push
push
mov
fmulp
dec
std
gs
pop
or
cwtl
xor
fdivrs
jnp
fildl
lret
jb
and
add
jp
lods
out
cmpsl
rorl
xor
jecxz
xor
flds
roll
fwait
loopne
push
sub
adc
push
sub
test
jne
sub
push
pop
int3
pop
pop
mov
xlat
outsl
xor
shll
into
pop
dec
push
insl
pop
icebp
add
sbb
dec
sbbl
sub
jnp
ja
pop
lahf
xor
imul
ljmp
pop
inc
stos
test
sub
dec
inc
cmp
mov
psubusw
addl
add
pop
mov
lcall
sub
jge
adc
repz
fmuls
out
arpl
ret
lea
mov
outsl
push
js
sub
test
popa
aad
push
sub
mov
fldt
cltd
inc
pop
enter
push
jne
adc
inc
jmp
sar
into
inc
fldcw
popa
aaa
pop
clc
jnp
stos
mov
inc
push
dec
je
jecxz
sub
outsb
addr16
xlat
xor
arpl
jbe
pop
jge
pop
out
mov
xor
xchg
repz
xchg
popa
or
jl
mov
or
adc
rcrb
push
ja
cmp
aad
pop
call
jp,pn
je
out
popl
cmc
mov
fcomps
add
jnp
add
scas
mov
pop
ss
sbb
xchg
imul
aaa
cli
mov
testl
adc
rorl
jno
sbb
lcall
push
repnz
pop
sbb
int3
pusha
sub
mov
and
out
mov
iret
or
cli
stos
movsb
add
push
cmp
inc
and
inc
mov
subl
xchg
pop
jge
push
imul
push
fwait
cltd
iret
stos
cmp
cmp
stos
cmp
icebp
adc
cli
adc
lret
pop
or
aas
divb
lret
lcall
jmp
out
dec
sti
sub
loop
and
pop
mov
lea
lods
sbb
incl
out
sub
mov
in
rorb
popa
mov
sti
lds
mov
jl
mov
lahf
test
insl
push
les
cmp
xchg
outsb
fldt
inc
popf
mov
enter
or
or
push
mov
stc
bound
pop
stos
mov
leave
movsl
add
push
sar
fisubrl
insl
mov
push
pop
xor
mov
pushl
out
enter
mov
inc
sub
xchg
push
fsts
out
imull
sub
sub
rcrl
out
cmp
stos
loop
jmp
in
pop
push
std
movsb
jl
push
mov
fildl
push
lret
lahf
aam
lds
push
mov
and
in
mov
repz
pop
imul
addr16
dec
mov
and
cmpb
xchg
movsb
std
jbe
pop
lret
out
and
add
es
push
add
adc
bnd
sub
iret
pop
add
inc
loope
test
addr16
jmp
ds
and
mov
push
dec
xchg
std
add
add
xchg
mov
ja
add
cmp
jmp
jnp
ljmp
ds
sbb
enter
mov
in
mov
add
sbb
dec
cmovne
sti
cmp
out
int3
inc
arpl
les
xor
int
out
pop
cmp
xlat
cmpsl
fistpll
push
lds
cmp
pop
arpl
ss
or
jo
jecxz
dec
and
xor
push
xchg
and
pop
shl
pop
xlat
ljmp
inc
andl
iret
mov
in
lret
xchg
scas
xchg
pop
int3
adc
sub
dec
jecxz
jg
arpl
lahf
pop
push
xorl
orb
stc
push
cltd
in
in
stos
neg
xchg
sahf
jp
mov
mov
cmpsl
sub
outsb
xchg
or
lcall
fildl
add
mov
fwait
cmp
mov
inc
lea
inc
pop
inc
or
xchg
add
sub
mov
mov
jle
inc
push
mov
dec
nop
push
push
jb
inc
pusha
and
lds
xor
js
sbb
aad
jg
insl
into
int3
add
pusha
cltd
testl
cmpsl
push
xchg
loopne
lods
push
jo
and
lock
or
mov
jae
push
cmp
mov
in
scas
mov
or
add
and
bound
ja
add
cmp
sti
lock
dec
iret
mov
nop
ret
xor
ficomps
cmpsb
out
xchg
insb
mov
xor
sub
xor
xchg
mov
lods
hlt
outsb
ljmp
pop
pop
cltd
dec
mov
shrl
lods
stc
int
shrl
inc
mov
ret
dec
cs
shrb
fcomps
enter
adc
push
jb
mov
cmc
and
loope
scas
mov
je
jle
dec
sti
outsb
adc
mov
leave
insb
xchg
jnp
test
loope
aaa
aaa
ljmp
pop
leave
pop
aam
push
in
pop
xchg
imul
push
adc
popa
repz
mov
scas
iret
js
cmp
loopne
push
cwtl
add
fadd
pop
leave
xchg
inc
mov
add
mov
adc
icebp
in
popa
fwait
jmp
icebp
adc
push
imul
jnp
mov
cmp
dec
push
insb
stos
jbe
in
cmp
sub
lret
pop
cmc
mov
cmp
jecxz
lods
push
fs
push
dec
xchg
fcomip
pop
in
ljmp
sub
out
cmpsb
jnp
pop
lcall
lret
xchg
call
pop
dec
add
add
enter
loop
cmp
inc
push
pop
flds
in
mov
pop
leave
imul
enter
dec
pop
and
adc
and
cmpsb
scas
gs
loope
mov
push
sub
inc
pop
pushl
mov
inc
fadd
mov
jbe
lock
test
xlat
sbb
push
jmp
sbb
inc
pop
mov
push
push
mov
loop
hlt
popf
add
inc
pushf
sub
test
cmc
xor
aaa
std
into
pop
cs
std
leave
lods
out
insb
cmp
ljmp
ret
cld
in
adc
lcall
stos
add
pop
stos
jle
ret
sub
cmp
je
leave
out
data16
mov
inc
mov
push
or
pop
subl
push
pop
movsl
adc
push
mull
jne
xor
jl
ds
cmc
or
jbe
mov
aas
push
add
inc
add
loopne
mov
popa
out
xchg
pop
decl
push
mov
sti
sbb
lahf
rorl
std
cld
lds
dec
or
push
fnsave
sub
and
dec
dec
out
cmpsb
test
jmp
sahf
jb
daa
popf
mov
cmpsl
xlat
pusha
mov
out
outsl
lds
mov
sahf
sbb
cmpsb
cs
out
lcall
sub
mov
bound
inc
ficomps
popa
out
jbe
test
push
aaa
hlt
sbb
daa
lcall
inc
adc
sbb
or
cmp
and
incl
mov
scas
lods
dec
test
sahf
rorb
and
jle
adc
mov
ja
lcall
add
jp
xchg
ret
mov
outsl
sahf
iret
jmp
jmp
push
out
mov
or
push
outsl
loop
push
jnp
xchg
out
xchg
sub
iret
jns
inc
mov
add
push
adc
fs
xor
mov
xor
ret
cli
sbbb
mov
mov
mov
pop
push
xchg
cmp
inc
xchg
mov
cmp
cwtl
adc
xor
push
or
and
add
jmp
or
sub
sub
movq
in
fnsave
or
ficomps
lock
jecxz
or
movsb
in
movd
inc
xor
aas
cld
or
insb
fcoms
sbb
push
addr16
bswap
test
inc
cli
aad
or
notb
lds
addr16
mov
jp
and
rep
out
push
ret
push
leave
adc
pushf
repnz
test
add
sub
mov
ss
iret
test
xchg
into
sub
sbb
cmp
xchg
stos
cs
sahf
mul
mov
lds
popf
cmp
jb
sub
lds
push
js
iret
dec
movsl
fists
fndisi(8087
dec
fstps
mov
xchg
or
out
out
cmp
test
cmpsb
addr16
sbb
xchg
inc
jle
mov
or
cmp
inc
fmull
fdivrl
adc
and
test
bnd
add
cmpsb
jns
adc
hlt
mov
jge
shrb
pop
scas
andb
inc
or
andl
xor
fdivrl
add
sub
mov
jns
cltd
adc
jo
loopne
pop
or
fidivs
clc
icebp
ror
orl
shrb
test
mov
or
ret
nop
test
xchg
xor
std
pop
push
or
push
insl
jbe
in
and
inc
outsb
aaa
lret
add
stos
cmp
pop
xlat
add
pushf
inc
fwait
push
in
bound
mov
sbbb
cld
inc
jns
xor
sbb
int
add
cmp
test
leave
rorb
out
inc
add
lock
fcomip
jmp
stos
movsl
dec
cmp
inc
ret
mov
mov
jo
sbbb
xchg
pusha
cmp
add
out
push
gs
mov
or
xor
jmp
stos
insb
ret
cmp
cmpsl
ret
les
jo
aam
sub
lcall
subb
addr16
in
neg
dec
mov
jb
outsl
loopne
std
inc
mov
add
bound
dec
sbb
lcall
mov
stos
jg
int
dec
fcmovu
push
sub
push
cld
cwtl
jmp
jg
lret
out
popf
test
jge
mov
fs
loopne
stos
jle
sub
add
or
out
cmpl
es
mov
mov
sbb
adc
jecxz
es
adc
dec
inc
pop
mov
inc
ret
sub
mov
xchg
mov
lahf
push
mov
cwtl
or
mov
and
dec
jbe
mov
or
btc
mov
jp
enter
adc
popa
dec
mov
es
lret
ljmp
mov
arpl
jne
aam
in
loope
imul
int
push
les
xor
sbb
pop
sbb
js
ret
sahf
or
test
mov
lret
jmp
and
sub
jnp
repnz
sub
in
daa
jle
push
fwait
push
rol
pop
xchg
mov
test
dec
subl
adc
bound
out
cmp
push
xor
std
sbb
and
add
pop
cmp
jl
inc
cmp
leave
movsl
popf
lahf
imull
ljmp
inc
jecxz
add
sbb
aad
push
dec
cmp
in
repnz
out
mov
push
test
nop
push
mov
stos
fildl
inc
jecxz
es
mov
adc
pop
sbb
mov
mov
sarl
repz
lret
cs
push
inc
sub
in
sub
aam
aas
imul
add
push
cmp
xchg
ljmp
jae
scas
mov
je
cmp
push
loop
mov
ret
jo
mov
sbb
test
sarl
push
sbb
outsl
mov
loop
sbb
pop
test
test
fldl
mov
lcall
fists
iret
pop
pop
xchg
movsl
xlat
dec
mov
xor
in
pushf
xchg
push
sbb
jecxz
lods
fsubrp
imul
jg
pop
enter
mov
xchg
inc
push
mov
jmp
dec
stos
xlat
aad
sbb
mov
cli
push
ds
xor
xchg
mov
jno
fstp
out
adc
fwait
sub
rol
mov
adc
mov
add
xor
sbb
enter
jle
push
mov
sbb
xlat
mov
push
mov
daa
loop
shll
adc
jbe
push
or
sti
inc
mov
xor
mov
addr16
xor
mov
aam
push
xchg
jnp
dec
rcrl
add
jae
adc
fs
nop
xchg
stc
sub
imul
sbb
xchg
pusha
daa
sti
inc
mov
hlt
scas
stos
testl
push
mov
stc
and
repnz
int3
dec
test
fisubrl
sbb
jecxz
xchg
clc
call
lcall
push
lret
aad
in
lcall
inc
pop
inc
dec
sbb
and
insl
push
daa
inc
mov
xchg
jge
fildll
sub
outsb
outsb
mov
jns
fldcw
mov
xchg
pop
sti
sbb
jno
repz
ljmp
dec
loopne
das
jl
iret
and
fimull
test
mov
cmp
fdivrs
cmc
stc
mov
icebp
cli
add
je
outsb
clc
xchg
mov
nop
add
mov
and
lcall
bound
sub
outsb
test
mov
divb
out
lock
mov
mov
mov
or
xchg
andl
xor
mov
or
test
jmp
fldt
jmp
sbb
les
repnz
push
fimuls
or
jbe
das
xor
push
pop
sub
adc
lods
iret
jl
jb
mov
ja
sbb
leave
xchg
push
lcall
jnp
mov
mov
lods
mov
add
add
xchg
repz
in
push
jbe
das
xchg
mov
int
sti
push
outsb
or
mov
scas
pop
xchg
jge
cltd
jb
fs
jb
leave
mov
jo
scas
and
iret
mov
adc
rcl
push
push
mov
nop
push
push
lds
test
dec
stos
dec
mov
pop
movsl
mov
pop
xor
shll
xchg
xchg
cld
mov
xchg
sarl
push
add
movsb
xor
sbb
roll
mov
test
dec
xchg
loopne
mov
das
push
sbb
or
mov
jecxz
mov
push
pop
outsb
fsub
jle
xchg
sti
adc
daa
add
iret
idivb
dec
cwtl
in
jecxz
loop
push
sbb
push
insb
fistpll
call
cmp
sbb
jmp
in
fsubrl
aad
out
test
jns
sub
or
lock
std
outsb
mov
fmuls
bound
pusha
fisttpll
loope
pop
adc
ror
sahf
push
push
int3
sbb
xchg
pop
sub
call
ror
frstor
sub
nop
pusha
add
pop
std
mov
gs
inc
xchg
jae
dec
mov
bound
leave
cmp
movsb
shr
push
lods
push
adc
push
imul
out
jmp
icebp
out
jb
mov
cld
or
sbb
add
aaa
dec
daa
pop
shlb
popf
push
es
mov
in
mov
outsb
jl
adc
push
push
sub
dec
into
jmp
repz
fcoml
sarb
jb
xchg
mov
shrb
cltd
jmp
in
mov
mov
aaa
adc
mov
pusha
xchg
stos
cwtl
mov
repnz
ds
ret
xor
lods
adc
add
jns
mov
and
xchg
push
cs
xor
test
adc
sbb
adc
inc
enter
xchg
sti
pop
out
insb
jmp
js
or
mov
ret
ficomps
push
jae
dec
mov
stc
lods
adc
in
cmp
jo
jg
lds
mov
cs
jp
popf
outsb
in
dec
xor
cmp
test
cld
sbb
cmp
es
mov
jge
insb
int
into
lods
xchg
cmp
shlb
sub
add
push
int
jecxz
xchg
pop
jl
cmc
mov
test
sbb
popf
insl
xchg
push
insl
or
push
xor
lea
in
ror
jae
push
test
inc
jg
add
mov
cmpsl
loopne
fwait
dec
xchg
mov
js
test
and
pushf
push
mov
dec
repnz
cli
pop
jb
dec
sub
cld
jp
xchg
sarl
lret
push
ret
mov
sub
out
cmp
dec
mov
pop
lahf
inc
mov
out
pop
mov
in
inc
jo
ss
sbb
movsb
imul
outsb
cmp
sub
lds
call
daa
shll
ret
aam
jno
test
stc
jmp
or
lret
adc
popa
jge
mov
xorb
mov
cmc
and
clc
jecxz
xor
sub
ret
psubb
ficompl
inc
cmp
idivb
ffree
mov
lock
jg
and
jb
xchg
imul
hlt
sub
adc
scas
hlt
cmpsb
icebp
or
jp
dec
arpl
and
cmp
sahf
insb
push
int
and
test
xor
imulb
lods
sbb
mov
push
mov
mov
scas
sbb
xchg
or
lcall
lret
andl
rolb
jmp
cmp
ss
imul
add
push
cmp
and
pop
cmpsb
xlat
mov
mov
movsb
pop
das
fisttpll
inc
repnz
cld
mov
mov
push
lcall
mov
push
stc
clc
mov
mov
and
xor
mov
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jne
jmp
or
mov
into
and
and
std
pushf
sbb
sbbl
ljmp
ficompl
xor
mov
jg
scas
jnp
dec
and
iret
in
jb
test
out
not
flds
inc
movsb
adc
add
sub
in
pop
aam
sbb
xchg
lret
js
mov
xchg
pushf
xor
insb
in
imul
mov
mov
sub
push
or
aam
es
int3
jle
sbb
cmp
pusha
stos
nop
in
xchg
test
jecxz
mov
cmc
jb
mov
mov
mov
imul
and
nop
xor
push
pop
cmp
insb
cmp
inc
lret
pop
dec
or
stos
inc
sub
daa
or
imul
cltd
ljmp
xchg
inc
xchg
incl
das
sti
adc
loop
xchg
mov
rol
xor
and
cmp
push
dec
into
lret
test
and
adc
mov
loope
push
fisubrl
fsubs
mov
add
dec
push
jecxz
lret
push
ja
pop
add
imul
out
xor
cmpl
jno
xorb
mov
cmc
sub
orb
lahf
inc
js
mov
fildl
mov
repnz
or
mov
inc
out
sbb
adc
les
inc
push
fnsetpm(287
test
jle
es
in
cmp
jo
repz
cmp
stos
xchg
enter
loop
mov
pop
rcrl
data16
daa
sahf
ret
jne
push
dec
cmp
push
xchg
cmp
xlat
loope
ret
movsl
mov
jp
cmp
int3
or
out
sahf
leave
and
jb
test
cld
mov
fmuls
sub
imul
outsl
stc
fstl
cmpsb
jl
movsb
xchg
mov
arpl
mov
arpl
dec
je
aas
sub
xor
fdivr
insl
jo
and
insl
mov
sub
and
cltd
cmp
rcll
xchg
mov
push
popa
push
out
sub
cltd
adc
insl
mov
in
call
mov
adc
les
outsb
jnp
lea
xchg
loop
cmc
push
ja
and
push
xchg
fimull
mov
mov
hlt
ds
shll
in
es
fwait
shlb
sbb
call
outsl
cltd
sti
push
inc
sub
mov
rorb
jmp
ss
pop
jno
aas
xor
imul
mov
jmp
test
fnstcw
sub
mov
jge
cmp
flds
daa
mov
insl
push
stos
and
mov
cmp
or
jp
pop
adc
pusha
pop
dec
popa
cmp
addl
dec
fnclex
xchg
sbb
sbb
dec
jle
rcrb
xchg
aad
pop
lods
adc
rorb
call
and
fs
jne
scas
mov
repz
jno
mov
popf
adc
or
mov
pop
dec
xor
movsl
ja
test
roll
adc
das
inc
mov
xlat
xchg
aaa
pop
aaa
inc
push
in
xchg
cmc
outsb
mov
mov
fxtract
dec
jge
stos
cmpb
cmp
call
dec
in
xchg
sbb
fsubrp
pop
fistpll
push
fwait
stos
clc
aaa
scas
push
pop
cmc
xchg
dec
jle
lret
jns
lret
ret
test
inc
push
enter
negl
push
int
fcmovnbe
dec
adc
std
jns
jno
addb
insb
mov
hlt
xor
lret
in
cmp
push
pop
dec
xor
ja
push
pop
jg
pop
inc
dec
popa
lea
fwait
sbb
lcall
sarb
xor
sub
mov
mov
mov
shr
xlat
cmpsb
xchg
inc
in
shrl
mov
mov
mov
scas
lret
mov
and
stos
jge,pt
fwait
xchg
mov
stc
outsb
xchg
gs
pop
xchg
and
aaa
adc
inc
push
imul
and
dec
insb
sub
jb
push
lea
cmp
out
pop
add
jae
aam
jmp
lcall
pusha
pop
gs
xor
icebp
pop
subl
sub
test
lret
aas
inc
mov
xor
fstpt
mov
int3
loope
out
mov
xor
xchg
cs
call
jle
mull
dec
mov
mov
mov
ljmp
lds
mov
xor
mov
xor
in
sub
call
int3
das
repz
arpl
push
bound
dec
jp
or
push
fsubr
into
aad
mov
xchg
mov
xchg
mov
ret
mov
adc
mov
jbe
sub
jbe
das
ds
jecxz
stos
xor
int
stos
cmc
push
adc
ret
cmp
cltd
and
cltd
cmc
lds
xlat
inc
repnz
mov
xor
clc
ja
xor
or
cmpl
jne
mull
sub
mov
sti
int
fdivr
or
mov
enter
ja
sub
out
aam
pop
faddl
sti
clc
push
repz
adc
add
push
sub
call
push
gs
scas
mov
xchg
jnp
adc
or
or
jmp
mov
das
jmp
xchg
or
rclb
xchg
andb
jns
test
or
addr16
and
xor
dec
jmp
repnz
xorb
pop
sbb
mov
int3
xor
sub
out
cmpsl
es
jb
stos
inc
add
pop
bound
js
xchg
mov
lret
scas
lods
push
fwait
adc
es
dec
cmovg
mov
aam
jb
inc
xor
loopne
mov
clc
cmp
jl
push
scas
insl
sub
pop
in
dec
mov
mov
rorl
ret
cmpsl
mov
lods
ljmp
mov
lcall
xchg
xchg
fadd
pop
sahf
outsb
dec
cmc
xor
jno
jo
pop
clc
jmp
add
add
fiadds
lea
sub
lods
inc
mov
xor
xchg
rcrb
in
inc
adc
cmp
push
jnp
shl
shll
jnp
stos
pop
jo
jp
inc
ficoml
int3
xchg
dec
in
test
lea
cmpl
xchg
in
push
jl
fwait
int3
or
aas
mov
shll
dec
ficoms
fnstsw
pop
adc
nop
popl
lods
mov
add
pop
fldcw
add
pusha
jbe
mov
add
aas
push
mov
pop
dec
jns
mov
inc
jle
imul
icebp
push
jnp
mov
shlb
dec
les
sar
dec
cmpsl
xchg
mov
enter
mov
cmpsb
decb
pushf
push
xchg
sub
push
xchg
cld
add
repz
out
xchg
mov
jne
dec
jnp
stc
scas
pop
out
dec
or
in
sti
or
and
in
mov
insl
lahf
jae
xor
adc
movsb
mov
mov
xchg
test
test
mov
dec
arpl
out
jp
pop
xchg
ret
test
mul
xchg
arpl
out
xor
cli
into
adc
sbb
xor
push
dec
outsb
jns
pop
and
add
sahf
add
fiadds
push
stos
mov
iret
add
sub
jns
jmp
jnp
inc
mov
add
lea
dec
mov
das
sub
dec
mov
or
mov
dec
push
and
sbb
mov
movsl
add
push
jb
jno
jb
ret
jg
arpl
cmp
push
or
cli
pop
ja
test
ljmp
lods
push
push
xchg
ja
ret
push
cmp
sti
fcompl
das
mov
adc
loop
mov
rorb
arpl
lea
dec
add
fidivrs
lea
int
shrl
cltd
mov
lods
in
fcmove
aam
aaa
int
dec
mov
mov
mov
and
fwait
push
push
sahf
iret
adc
in
fdiv
call
cld
add
jg
loopne
push
ljmp
or
out
sbb
int3
scas
adc
pop
xchg
ds
or
mov
icebp
int3
push
ja
lret
sbb
out
and
jmp
pop
pop
pushf
xor
push
out
ss
dec
pop
jp
inc
cmp
sub
inc
testb
pushl
mov
mov
adc
fildl
daa
rolb
fistps
rorb
mov
pop
mov
movsb
dec
repz
adc
ljmp
inc
jo
cmc
jno
adc
mov
sahf
cmp
push
inc
dec
int3
lahf
push
outsb
imul
popa
sbb
mov
pop
sub
xor
divl
inc
xchg
sbb
aaa
cmp
int3
cmp
pusha
pushf
mov
xor
dec
pop
nop
pop
in
inc
jp
mov
stos
insb
sub
in
imul
notb
ja
cli
or
sub
xchg
nop
sbb
imul
adc
sbb
adc
pop
xor
lcall
inc
pop
in
fmuls
xchg
pop
int
aad
push
jg
mov
int
mov
xchg
pop
pushl
fmul
inc
add
mov
aaa
xchg
jg
sbb
test
scas
movl
adc
mov
std
fbld
std
cmp
mov
repz
add
movsl
loopne
std
push
adc
and
pop
pop
mov
cmc
int3
test
dec
pop
pop
imul
pop
loope
or
popf
arpl
js
lock
pop
xor
mov
pop
not
cld
lock
out
push
dec
iret
pop
mov
pop
push
xor
mov
outsl
ljmp
lods
sbb
jl
call
mov
mov
or
shl
xor
pop
sub
xor
push
gs
out
jl
add
or
mov
lret
add
push
cmpsb
into
xchg
leave
sub
cmp
pop
mov
ss
int3
dec
test
iret
pusha
pop
inc
xchg
push
bound
adcb
and
aam
xor
popf
call
and
movsl
push
sbb
arpl
adc
ss
unpcklps
xor
dec
insl
adc
popf
adc
shlb
cmp
test
cmp
push
jle
mov
test
mov
sub
les
dec
ja
adc
cld
lock
sub
jne
jp
loopne
cmp
adc
push
shll
cmp
sub
mov
or
gs
imul
dec
push
mov
jbe
xchg
xchg
pop
mov
pop
dec
push
mov
add
imul
mov
xlat
pop
add
mov
and
sbb
xchg
xchg
imull
adcb
or
lea
into
xor
inc
mov
cld
and
scas
xor
mov
into
dec
mov
mov
addr16
addr16
cmp
xor
js
mov
daa
adc
adc
mov
lret
adc
dec
rclb
fdivs
sub
pop
subl
sbb
push
das
inc
pop
xchg
xor
mov
aad
sbb
dec
mov
add
sti
adc
jb
imul
xor
mov
mov
imul
adc
mov
add
add
aas
fxch
jg
mov
xor
xor
cmp
xchg
xchg
inc
mov
xor
sub
mov
mov
stc
xchg
insl
fsubl
sbb
mov
icebp
js
xrelease
stos
mov
xor
push
ja
out
pop
dec
xchg
daa
push
jge
dec
jecxz
call
fcomp
jae
in
fdivl
pop
dec
cmc
jns
xor
enter
in
cltd
push
ja
stos
mov
cmpsl
dec
lret
mov
jle
jmp
push
and
stc
mov
es
mov
aad
cmc
xchg
lcall
cmp
js
adcl
sub
and
stos
int3
shrb
mov
pop
inc
mov
xlat
mov
xor
sahf
pop
loopne
jo
das
mov
mov
adc
stos
std
sub
fsts
lcall
xor
inc
xor
and
stc
pop
in
add
aaa
mov
mov
cld
shlb
testl
xorb
dec
xor
and
mov
js
dec
ret
pop
xchg
push
in
cld
out
mov
mov
lock
cmp
add
cli
pop
inc
dec
sbb
push
jp
inc
clc
outsb
addl
out
jns
in
aas
shll
lahf
xor
jo
or
add
jnp
cld
fimull
cmc
xchg
push
clc
clc
sbb
mov
add
outsl
into
in
iret
int
xor
fisubrs
lahf
and
and
ret
push
pop
in
pause
sub
xor
ljmp
mov
xchg
das
mov
dec
leave
cmp
movsl
shl
push
je
mov
repnz
loope
add
stos
jnp
sbb
push
mov
mov
add
fcomp
push
lds
add
lods
adc
iret
loop
out
fildl
movsl
js
dec
jecxz
jmp
mov
loop
push
xor
xor
testl
imul
outsb
popa
in
sbb
stc
xlat
stos
mov
jbe
das
lock
stc
pop
insl
je
inc
hlt
nop
sub
push
pop
imul
cwtl
shrl
cs
cmp
or
pop
jnp
pop
sbb
or
mov
fcmove
lds
xchg
test
and
outsl
mov
stc
add
lds
dec
movb
jg
or
lcall
cmp
out
sbb
mov
arpl
cmp
push
pop
mov
or
ja
add
inc
pop
daa
cmp
ja
int
scas
gs
inc
les
jl
imul
inc
mov
jmp
popl
repnz
inc
jecxz
rcl
pop
adc
push
cmp
dec
adcb
rclb
aad
mov
jae
xorl
in
scas
add
mov
sub
sub
insb
das
and
js
test
mov
mov
pusha
sbb
xchg
cmpsb
xchg
jo
xlat
push
add
mov
das
pusha
inc
fcmove
or
dec
iret
sbb
and
cmp
jns
test
pop
mov
sbb
je
cmp
and
fmulp
aas
das
inc
cltd
pop
fadds
sbb
test
dec
ret
push
imul
adc
cltd
mov
ror
ja
aaa
scas
lods
pop
jl
int
ret
inc
lods
in
cmpl
bnd
out
sub
cltd
gs
xor
icebp
pushf
lret
lds
mov
lds
sbb
add
les
dec
jo
or
ljmp
sub
sar
pop
out
jmp
sub
or
insl
test
push
push
lret
xor
inc
int3
insl
jmp
cmp
jb
mov
std
xor
pop
push
adc
push
adc
pop
mov
mov
or
lods
pusha
mov
int3
inc
mov
xchg
add
push
push
cltd
xor
sub
mov
jecxz
roll
ret
xor
fistps
stc
pop
pop
data16
mov
test
jge
ret
xor
or
mov
ss
js
add
insb
pop
inc
xchg
imulb
js
mov
in
xchg
mov
je
pop
cltd
dec
adc
je
cmp
xor
mov
jb
test
mull
rolb
or
mov
in
pop
stos
sbb
je
loop
xor
pop
out
mov
xchg
push
push
out
mov
mov
ljmp
mov
jmp
loope
fnstenv
dec
nop
arpl
movsb
ret
cmc
xor
xchg
lds
fsts
mov
xor
in
push
jno
lock
aam
hlt
sbb
and
lcall
ret
pusha
or
dec
divb
adc
mov
cmp
shl
push
andl
jle
ja
xchg
ja
add
paddd
lock
andl
xor
loop
jbe
adc
push
inc
pop
out
insl
daa
and
jg
in
out
es
fiadds
pop
stos
orl
insl
dec
xchg
shufps
xorb
add
dec
xchg
cmp
xchg
lods
ds
lret
outsl
cmp
add
nop
ds
repz
adc
rcrb
je
repnz
xor
or
test
sub
jp
loope
lcall
orl
jnp
sbb
call
and
aam
fmull
test
pop
rcrl
movsb
cmp
lods
outsb
fwait
push
fs
mov
lods
ljmp
or
cmp
or
imul
test
push
or
pop
jecxz
fabs
mov
jns
call
sbb
or
pusha
dec
cli
adc
or
out
pop
sbb
mov
call
leave
mov
push
arpl
sahf
add
mov
sti
jp
fwait
addb
scas
arpl
mov
stos
rclb
and
mov
out
push
dec
fldt
and
ljmp
hlt
hlt
insb
insb
xchg
mov
lods
dec
cmovnp
lods
cmpsl
xchg
test
sub
xchg
add
xchg
mov
int3
xor
adc
xchg
addr16
add
nop
pop
incl
cmp
loope
mov
add
aaa
xor
jecxz
popf
jne
ret
mov
xchg
bound
pop
out
sub
push
jle
out
sbb
xchg
sarl
mov
test
lret
out
jp
jo
dec
je
shlb
mov
stos
in
pop
jo
std
repz
lret
testb
hlt
lcall
jecxz
in
mov
cmp
dec
push
aam
inc
push
sub
or
movsl
xor
lods
push
mov
pop
jmp
test
push
leave
fcomi
ss
std
and
xor
shrl
xchg
xor
test
xchg
xchg
mov
imul
cmp
cmp
mov
shr
or
jp
xchg
mov
repz
jo
into
iret
lret
xchg
sub
push
out
sub
nop
ss
ret
dec
rcll
loop
loop
sbb
mov
mov
nop
mov
adc
adc
mov
icebp
add
es
or
xlat
xor
xchg
rclb
imul
neg
ficoml
fldl
jmp
std
leave
es
sub
and
sub
adc
subl
mov
mov
add
pop
mov
enter
xor
push
int
ljmp
jno
push
clc
js
mov
ljmp
xlat
fidivl
mov
adcl
cltd
imul
inc
shr
or
pushf
in
bnd
les
push
out
das
out
mov
loop
jo
unpcklps
pop
fmulp
pop
xlat
xlat
adcl
fildll
fwait
in
or
ret
in
js
xchg
cmc
xchg
hlt
adc
fisttpl
test
cs
mov
ret
lods
dec
dec
popa
hlt
or
mov
pop
shrb
popl
repnz
ret
jmp
fildl
or
pop
test
push
sub
adc
cmpl
lret
adc
imul
pop
aad
lahf
jg
je
fistps
popa
movsl
in
mov
inc
pop
insb
xor
jae
lret
daa
inc
dec
inc
xchg
outsb
sahf
aaa
fisubl
std
inc
jbe
mov
out
push
nop
cs
xor
or
pop
and
shl
fs
test
aam
repz
rcll
xlat
pop
pop
lret
sbb
in
lcall
mov
in
inc
out
mov
lds
adc
jnp
aas
mov
sahf
ret
shlb
inc
ficoml
out
data16
test
and
into
out
data16
and
jne
add
in
pop
mov
dec
stos
sub
pop
pop
fucomi
inc
nop
push
jg
mov
daa
pop
fildl
push
test
flds
je
jmp
aas
and
pop
subl
andl
add
dec
ss
xchg
les
ret
xorb
inc
push
xchg
inc
daa
and
or
mov
cmc
cmp
mov
mov
dec
in
ss
add
pop
ja
movsl
pop
dec
adc
jecxz
pushf
mov
xchg
scas
add
xlat
xchg
pop
lahf
mov
dec
dec
fisubl
xchg
dec
push
ljmp
lea
mov
popa
mov
cmp
jge
sub
mov
cmpsb
dec
sub
or
es
push
aaa
addr16
jl
xor
dec
test
inc
or
mov
pop
mov
pop
and
xchg
aaa
insb
in
mov
arpl
fists
mov
arpl
push
lds
clc
push
dec
mov
pushf
sbb
mov
sahf
jb
xor
shl
adcl
incb
repnz
sbb
rcrb
movl
jbe
mov
scas
pop
les
push
iret
xlat
mov
inc
jnp
mov
push
rcl
arpl
and
addb
push
js
pop
mov
xchg
xor
clc
decb
pop
jmp
es
stos
mov
int3
xchg
ss
inc
and
push
stos
xchg
jnp
icebp
mov
icebp
pop
add
sbb
cmpsl
out
stos
cwtl
into
inc
mov
int
inc
bound
daa
addr16
and
bound
push
fcoms
cmp
or
lahf
ret
pushf
or
movsb
push
jecxz
nop
hlt
testb
fsts
lret
inc
jo
jnp
mov
andb
call
cmp
roll
inc
mov
fs
jmp
jbe
dec
repnz
inc
mov
jo
popf
adc
jbe
fistpll
fbld
lods
rcll
invd
adc
repnz
sbb
mov
sub
push
ret
out
mov
mov
test
xor
pop
vpshufhw
addr16
leave
js
mov
enter
hlt
xchg
jmp
iret
loop
jle
cmpsl
dec
xchg
add
je
loop
fsubs
mov
test
lock
inc
push
imull
xchg
and
nop
loope
mov
cmp
mov
sahf
add
out
jno
cltd
add
jb
xor
enter
cmc
dec
mov
cmp
dec
push
rclb
iret
leave
jae
dec
lods
mov
fimull
push
jl
fwait
aaa
scas
xor
ret
pop
popa
jg
or
cs
imul
adc
push
in
jle
jecxz
inc
pop
int
pop
out
outsl
data16
or
or
mov
mov
in
cld
add
push
jmp
andb
cld
cmp
lds
cmpb
fstpl
fdivrs
fcoml
insb
xchg
pop
mov
mov
orl
sub
addl
fildll
dec
mov
iret
adc
fldenv
int
pop
mov
addb
pop
int3
fidivs
jle
mov
and
jb
fistl
pop
aaa
push
cld
inc
mov
add
inc
mov
sub
mov
or
and
dec
loop
call
mov
fnstenv
xor
leave
das
inc
out
mov
cmp
inc
or
jno
mov
add
arpl
jmp
fcoml
push
je
mov
movsl
lock
fisttps
and
adc
rcrb
fcomp
jmp
outsl
sub
and
popa
std
ret
mov
push
adc
inc
loop
hlt
leave
dec
cld
adc
jbe
call
sbb
add
data16
into
mov
leave
cmpsb
mov
inc
ret
in
out
sub
je
test
push
sbb
xchg
lds
je
mov
scas
ds
lahf
into
mov
xchg
pushf
and
jle
xlat
mov
cs
push
iret
push
je
fndisi(8087
xchg
xchg
mov
push
xor
les
sub
xchg
adc
andl
or
mov
mov
mov
sbb
xchg
ficompl
fs
or
pop
or
std
repnz
cmp
inc
notb
xor
loopne
xor
and
dec
cwtl
andb
addl
je
shlb
xchg
cmp
mov
cmc
mov
sbb
sahf
movsb
xchg
xor
int3
stc
jns
and
cs
mov
lahf
jmp
and
bound
push
pop
leave
jmp
add
cmp
call
mov
pop
cmp
xchg
push
and
sbb
push
dec
aad
xor
sarl
repz
adc
mov
adc
adc
or
test
sti
dec
mov
xor
or
or
mov
fnstcw
inc
pushf
pop
dec
es
decl
pusha
sbb
gs
push
or
je
sbb
in
enter
enter
hlt
mov
icebp
arpl
xor
pop
push
out
cld
mov
addr16
lock
cli
or
push
jle
mov
pusha
fstpt
mov
jne
enter
int
pop
inc
cltd
mov
dec
inc
pop
in
dec
lods
movsb
cmp
push
adcl
jae
test
mov
push
cmp
shll
loopne
xor
push
ljmp
pop
cwtl
aaa
sub
mov
movsl
xor
mov
lods
mov
push
and
leave
adc
adcl
flds
jmp
sar
into
mov
pop
sub
ds
mov
testl
cmp
ret
loop
les
test
sub
fwait
mov
bound
repz
sarl
hlt
decb
fwait
sahf
sbb
cld
or
movsl
and
sbb
popf
loope
loope
lds
add
mov
ret
jmp
popa
in
mov
adc
mov
stos
sahf
test
mov
out
add
cmp
jne
xor
and
add
es
dec
inc
xchg
adc
mov
fisubs
mov
jmp
push
xchg
adc
jg
xor
ljmp
imul
jg
lahf
cmp
mov
adc
popa
popa
sarl
push
push
mov
xchg
mov
push
xor
stos
fdivl
dec
xchg
repz
je
aaa
lahf
pop
cmp
push
push
or
dec
push
ss
pop
mov
in
mov
div
pop
test
jle
mov
fcmovb
mov
push
inc
and
xor
push
lret
lret
pop
add
cmc
das
loope
cmp
test
into
sbb
pop
stos
xchg
imul
or
dec
dec
sysret
xor
adc
imul
sbb
xor
dec
add
lea
imul
in
mov
pop
jne
cmp
pop
fnstsw
repz
ret
jnp
mov
inc
jmp
jmp
sbb
test
fistpll
ljmp
fstps
cld
cs
mov
stos
shlb
pop
mov
push
and
out
push
sub
loopne
xchg
pop
jne
mov
pop
mov
mov
lock
out
stos
in
cld
std
cld
push
xor
es
je
cmp
lods
dec
jnp
js
dec
ret
lods
fcmovbe
js
daa
rcrl
fistpll
mov
dec
bound
xor
inc
out
dec
sbb
popf
jb
adc
movsl
mov
cli
and
sgdtl
jbe
mov
lods
pop
outsb
cmp
dec
pop
xor
ljmp
push
mov
leave
shll
repz
and
cld
push
insb
and
xor
cltd
sub
es
add
xchg
insb
cs
add
dec
dec
mov
adcb
push
popa
mov
pop
cmp
inc
sarb
enter
and
test
nop
ret
dec
in
mov
push
or
test
mov
jle
or
jbe
subb
jo
loop
sbb
sbb
mov
mulb
mov
xor
rolb
les
or
jb
inc
pop
add
dec
pop
jg
xor
mov
mov
adc
add
in
cmp
loop
insb
jle
outsb
repz
adc
in
add
cmp
xchg
adc
test
pop
cmp
std
aam
adc
fs
push
sbb
jbe
mov
cwtl
jno
xchg
in
mov
es
iret
push
jle
push
or
repz
fisttpl
xchg
inc
ljmp
pop
fdivl
add
cmp
lods
cs
int
into
mov
ljmp
or
data16
test
notb
jae
ss
out
mov
ja
push
mov
and
adc
cmp
js
jbe
push
or
pusha
jne
les
jle
push
in
je
in
and
or
into
inc
addr16
in
jbe
inc
xor
loop
sub
bound
push
push
jp
mov
xchg
and
xor
lret
je
mov
es
xchg
lods
rclb
aas
lods
pop
mov
fildll
mov
sbb
sub
mov
lret
imul
jno
enter
sbb
add
lods
jmp
mov
rcr
into
stc
xchg
les
pop
mov
rcrl
ss
or
std
vmwrite
or
daa
inc
push
aam
js
dec
pop
adc
add
inc
inc
lcall
out
mov
cmp
movsl
mov
or
cwtl
movsb
xchg
aam
lret
push
andl
shl
sub
adc
lods
cwtl
enter
arpl
sub
pop
pop
mov
pusha
jg
mov
mov
cwtl
out
and
into
repnz
adc
ja
in
lret
imul
pusha
xchg
pop
sbb
xorl
mov
lock
push
lods
scas
or
addr16
lods
shr
add
mov
test
insb
dec
mov
shll
es
fsubl
lods
and
mov
stos
test
and
mov
mov
sub
adc
adc
push
add
push
loopne
jmp
pop
test
sbbl
roll
cmc
or
xchg
fdivr
jle
dec
aad
mov
scas
enter
popfw
out
pusha
scas
scas
sbb
les
popf
ret
test
jg
mov
gs
jp
pop
bound
stos
lcall
push
xchg
in
test
mov
xor
add
mov
mov
add
xchg
xor
push
mov
pop
mov
jmp
cli
mov
addb
jnp
sub
addl
mov
cmp
push
xchg
mov
mov
inc
jmp
mov
popf
les
outsb
out
je
das
cwtl
mov
ret
std
sbbb
cmp
and
movsb
and
xchg
sbb
inc
or
insb
into
mov
or
mov
mov
xor
lret
and
lock
aas
and
push
xchg
mov
addr16
push
aaa
sub
stos
clc
mov
pushf
pop
mov
insl
bndldx
repz
outsb
xchg
nop
ljmp
dec
in
es
aas
add
out
cmc
repz
push
xchg
add
lods
es
add
out
adc
fstpl
ret
pusha
jnp
adc
push
out
mov
sahf
jle
shll
pushf
mulb
cs
mov
test
inc
shlb
push
data16
push
pop
pop
or
loopne
fwait
jb
push
cmp
mov
mov
mov
mov
jo
cwtl
icebp
fwait
mov
sbbl
mov
add
scas
mov
xlat
call
adc
xchg
je
push
filds
daa
rorl
div
mov
mov
sbb
gs
add
hlt
jnp
jg
dec
aas
cmpsl
adc
push
inc
cmp
push
inc
sub
int3
pop
aam
out
cmpsb
out
pop
lahf
repz
pop
lea
jmp
push
xor
sub
mov
jge
cld
or
adc
inc
ljmp
fs
xchg
mov
jns
fcomps
loop
pop
mov
cltd
fcompl
loopne
shr
rcrl
xchg
push
mov
fisttpll
sub
std
inc
add
shll
xchg
mov
mov
stc
sbb
jmp
inc
push
popa
xlat
adc
xchg
mov
loopne
fidivl
xor
add
sbb
mov
cmp
mov
mov
aad
mov
push
push
hlt
mov
mov
filds
mov
adc
xorb
sbb
cmpsb
mov
movntq
jecxz
xlat
outsb
xchg
add
mov
xor
push
xor
cmp
in
mov
pop
and
jge
das
enter
daa
mov
mov
in
sub
xchg
aad
repnz
scas
jo
mov
push
lods
mov
sub
call
outsl
iret
mov
cld
push
and
jnp
cltd
adc
movsl
sbb
sbb
push
inc
mov
xor
push
pop
adc
xchg
cmpsl
fldenv
pushf
push
mov
js
arpl
add
push
lock
jnp
mov
fnsave
scas
in
cmp
sti
leave
out
push
jnp
icebp
xor
and
xchg
outsl
iret
add
pop
lods
lcall
repz
xchg
xrelease
mov
sub
data16
jbe
insl
jmp
popf
and
pop
jno
push
inc
test
mov
jnp
sub
lods
add
in
jmp
fldl
in
cli
subl
push
sbb
pop
mov
outsb
sbb
jo
adc
pop
adc
sti
cmp
bound
popa
pop
pop
es
pop
clc
leave
flds
cwtl
add
enter
test
add
sbb
sbb
pop
insl
daa
add
push
sbb
in
scas
jmp
inc
push
pop
and
bound
and
nop
push
jae
test
fldt
scas
out
and
jl
sbb
inc
in
outsb
sub
iret
push
outsl
mov
push
pop
add
add
in
rcr
push
jo
cltd
push
add
iret
mov
cwtl
push
aad
xorb
test
sub
sahf
adc
into
cmp
mov
ss
adc
mov
push
in
cmp
lods
mov
test
or
scas
add
fstl
mov
ss
dec
sbb
in
xor
cs
int3
jo
add
mov
stos
sub
xchg
or
fwait
pop
inc
pop
insl
adc
cltd
imulb
cltd
lret
pushf
stc
sti
cltd
push
push
enter
push
lods
or
lods
bound
xorl
or
mov
lea
sub
mov
outsl
mov
fbstp
pop
or
xorb
leave
movhps
mov
mov
out
xor
xchg
js
mov
inc
lods
movsb
jne
cmpb
lret
mov
mov
popf
mov
xchg
pop
es
pop
cmp
stc
xchg
inc
mov
push
lret
lea
adc
pop
push
add
into
out
movsl
dec
das
xchg
fcmovu
adc
mov
sbb
mov
scas
adc
lret
mov
mov
test
xchg
fisttpl
push
cmpsb
loopne
add
inc
jg
push
pop
mov
xor
inc
pusha
sbb
mov
inc
mov
xchg
push
jle
ret
mov
sub
lods
sbb
xor
inc
inc
outsl
imul
and
adc
mov
or
cli
mov
xchg
pushf
je
mov
mov
push
mov
faddl
push
jp
cmp
insl
pop
repz
fiaddl
xor
or
xor
data16
jo
lcall
and
push
repz
push
mov
mov
lods
dec
loop
add
jle
add
pushf
pop
sti
xchg
fisubrs
inc
xor
rcrb
clc
repnz
push
push
xchg
dec
cmp
fdivl
in
and
lcall
lds
aad
sub
inc
ja
jae
scas
inc
mov
and
sbbl
xor
push
shrl
insl
inc
adc
ret
or
lret
cmpsl
add
push
aad
rcrl
ret
push
frstor
xor
mov
in
sbb
lcall
stc
or
and
aam
aad
arpl
lods
dec
sbbb
stos
sub
addr16
addl
fldenv
flds
sub
inc
stos
add
stc
mov
pop
movsl
jnp
int
dec
or
jne
movsl
mov
mov
enter
cmpb
es
mov
or
or
popa
subb
repz
lcall
cmp
jmp
sbb
adc
mov
mov
adcb
cmp
and
dec
in
add
repnz
xor
push
cmpsb
xchg
jo
lods
add
mov
sti
add
xchg
pop
ret
push
in
out
rclb
xchg
pop
xchg
inc
adc
adc
push
sub
and
add
cmp
fisttpll
pop
mov
inc
sub
insl
sub
mov
pop
lea
fldenv
or
sub
bound
dec
stc
jmp
push
push
sbb
push
xchg
test
out
jle
fldcw
add
stos
mov
pushf
jecxz
mov
dec
cmp
pop
sarl
popf
or
punpckldq
mov
ja
sbb
or
iret
leave
popf
pushf
and
add
xlat
or
add
cwtl
inc
ret
pop
dec
jbe
movsb
cmp
addr16
dec
out
cld
jnp
ds
mov
data16
mov
add
push
cmc
push
xor
dec
dec
je
push
jl
fdivrl
ret
test
stc
fcomip
pop
cmp
pop
sub
inc
addr16
pop
push
xchg
ret
into
dec
popa
shlb
or
data16
dec
push
pop
dec
jl
inc
ja
sub
lods
ja
gs
mov
push
fwait
sub
push
xor
je
push
jbe
add
aaa
push
lcall
adc
int
out
scas
into
pause
xlat
mov
aam
std
xchg
ret
sbb
cs
aas
fidivrs
cld
xchg
fwait
sti
sbb
cmp
xor
sbb
loopne
sub
push
jecxz
cltd
in
jo
insb
sbb
pushf
push
scas
cs
int3
stc
rorl
das
inc
or
fistpll
or
lret
dec
or
push
push
stc
std
sub
lea
jmp
repnz
les
fwait
movsl
or
das
imull
xor
insb
pop
test
or
pusha
mov
shrl
sub
xchg
mov
push
daa
pop
cmp
jle
mov
in
and
aad
cmp
fdivp
imul
aad
jae
stc
mov
mov
cmp
in
jbe
mov
insb
shlb
in
mov
lea
or
cmp
outsl
rolb
insb
ja
mov
ffreep
dec
jne
or
stos
add
sub
mov
inc
ljmp
das
iret
push
push
dec
or
push
sub
xchg
pop
rorb
or
inc
mov
jo
ljmp
arpl
mov
jno
push
negb
pop
movl
filds
pop
mov
adc
out
test
xchg
inc
in
int3
inc
shrb
ljmp
add
bound
pop
dec
imul
cmp
cmp
inc
inc
mov
enter
mov
dec
push
pop
and
add
sbb
jns
cmp
outsb
clc
inc
pushf
sar
mov
and
arpl
mov
inc
inc
sarb
jmp
push
int
arpl
sub
sub
repnz
test
mov
bound
or
or
xchg
lcall
xchg
sbb
adc
out
xor
jge
cmp
inc
out
fcmovnbe
insl
add
mov
subl
scas
fldcw
jae
push
das
jecxz
fnstsw
repz
daa
ss
rcl
mov
jne
mov
cltd
jecxz
das
cld
fucomip
decb
mov
cmc
cmp
adc
es
push
lcall
mov
mov
and
roll
in
mov
jle
or
notb
ja
cmp
repz
ret
or
pop
adc
sub
cmp
imul
iret
xchg
inc
sti
or
and
mov
and
loop
xchg
mov
sahf
sbb
lea
cmp
in
loope
xchg
insb
mov
test
mov
push
sbb
fmull
in
mov
fdivs
hlt
xor
sub
repnz
adc
or
test
push
bound
xor
cmpsb
fstpl
ret
outsb
jmp
push
rcl
and
cmp
mov
sub
cmp
or
pushf
push
jecxz
lahf
jmp
add
and
adc
pushf
popa
dec
add
dec
push
xor
and
sbb
cmpsl
pop
aas
dec
add
or
jmp
in
pusha
xchg
sti
and
in
dec
sub
repz
sub
fiaddl
push
push
mov
out
mov
xor
jbe
mov
lods
and
dec
rcrl
and
into
xchg
cltd
pusha
movl
dec
lret
inc
pop
lret
xchg
cmp
popf
out
mov
popa
jmp
out
daa
addr16
jge
es
lret
imul
sbb
sbb
sti
jo
inc
push
adc
sbb
pop
dec
push
jae
enter
mov
or
dec
cld
insb
ja
insl
adc
aas
fwait
pusha
cmp
adc
jnp
xchg
mov
mov
ficoml
cmp
ret
shlb
and
push
sbb
ds
mov
popa
jo
mov
subb
fwait
push
inc
adc
mov
inc
cmpsl
jne
dec
jns
pushl
out
out
shrl
out
stos
add
adc
mov
jmp
push
shrb
dec
push
popf
fcoms
popa
std
ja
testb
sub
nop
and
loope
sbb
mov
ret
pop
mov
fwait
mov
jmp
dec
jg
sub
cltd
std
cld
cmp
call
mov
stos
arpl
lock
pop
ljmp
dec
xor
lods
mov
sub
aaa
popf
repz
sbb
pop
ljmp
dec
mov
addl
arpl
pop
testl
test
mov
add
loop
jb
outsw
pop
dec
ficomps
mov
arpl
dec
jl
clc
jg
stc
hlt
xor
mov
dec
in
jmp
sbbb
outsl
imul
push
rcrb
mov
mov
mov
add
mov
cld
mov
xchg
dec
mov
lret
mov
cmp
jge
in
stos
adc
jno
lret
test
rcl
cs
dec
js
movsl
jge
cmp
jae
int3
or
xor
gs
sub
mov
repnz
test
ss
sub
and
ss
pop
jnp
into
inc
sti
mov
mov
jle
and
dec
out
popa
mov
rcrl
mov
popa
into
inc
xlat
dec
nop
fistpl
sbb
mov
push
add
xchg
jb
jp
shlb
shlb
mov
gs
lahf
inc
and
pop
mov
sbb
repz
outsl
mov
push
scas
sbb
mov
cmp
cs
mov
movsl
test
ret
or
and
mov
add
fcmovb
xor
jb
pop
sub
jno
frstor
hlt
fwait
ds
repz
pcmpgtd
cmp
out
outsb
or
adc
mov
mov
ret
aas
fisubrl
sub
lea
stc
cmpsl
sub
jp
loopne
sub
sahf
jge
test
add
sub
inc
xchg
sub
push
pop
mov
les
aaa
add
push
xor
stc
mov
adcl
mov
dec
lods
stos
mov
and
push
dec
jl
xchg
insb
in
je
ret
jo
scas
xchg
sbb
out
cltd
icebp
inc
jle
ds
xchg
adc
inc
push
add
mov
sbb
stos
add
xor
mov
hlt
ret
lock
subb
pop
inc
std
nop
mov
mov
and
lock
add
xchg
insb
aad
cmp
pop
in
push
outsb
pop
out
loopne
inc
stos
mov
lods
stos
add
addr16
dec
sbb
scas
lds
lret
std
pop
rolb
mov
xacquire
fiadds
dec
dec
lods
in
gs
jb
out
push
add
xchg
sbb
insb
hlt
xchg
out
mov
xchg
or
lret
call
mov
icebp
adc
inc
jmp
loop
call
mov
pop
xor
jb
call
inc
fistl
jae
dec
cmc
add
addb
into
adc
xor
in
lods
nop
inc
mov
inc
jp
inc
std
into
stc
rolb
hlt
push
fisubrs
pop
test
cmp
pop
mov
dec
fbld
out
add
pop
add
xor
add
in
repnz
arpl
mov
cmpb
imul
cmp
xchg
insl
pusha
daa
lods
out
cmc
push
pop
int
jne
fs
mov
pop
push
push
and
je
and
jl
and
sarb
jnp
inc
nop
mov
lret
adc
insl
ret
data16
mov
and
ds
mov
sti
sbb
cmp
into
ret
rcrl
xchg
stos
sub
shrl
adc
jne
mov
dec
into
ljmp
jns
les
sub
ljmp
push
inc
cmc
mov
push
hlt
mov
pminub
imul
mov
jp
enter
pop
adc
inc
xor
sub
outsl
dec
and
inc
mov
adc
clc
jmp
dec
push
shll
sbb
das
scas
leave
in
repz
insb
test
cs
mov
cmp
leave
stc
das
mov
loopne
daa
mov
inc
adc
inc
push
scas
shr
jnp
xchg
imul
pusha
loop
scas
or
shll
into
sbb
sub
jns
xchg
call
mov
jmp
mov
mov
xchg
cli
xchg
dec
mov
outsb
jae
add
daa
push
cmp
cwtl
ds
outsl
rcll
push
cmp
cmp
lds
sub
or
repnz
lea
jae
arpl
add
inc
lods
lret
ja
dec
cmp
jne
or
dec
outsb
mov
stos
mov
es
in
mov
insb
popa
iret
sbb
mov
push
xchg
imul
stc
mov
test
into
adc
sub
cmp
int3
inc
stc
jp
fbstp
and
cmp
clc
loop
and
adc
mov
add
scas
cmp
pop
sub
jl
dec
mov
and
mov
or
mov
jns
inc
and
pop
dec
push
xchg
loop
dec
cmp
mov
add
into
mov
inc
ret
mov
mov
movsl
call
adc
and
daa
or
lahf
pop
ljmp
xchg
movsl
inc
jl
pop
out
xchg
lret
sub
ret
mov
cld
stos
pop
inc
jbe
out
sbbl
sub
adc
loopne
out
lock
pop
mov
jo
jp
test
and
sub
sub
dec
dec
lea
inc
jle
nop
sahf
mov
gs
add
xchg
cmpsl
dec
jl
ret
out
add
iret
movsl
push
add
lods
mov
mov
lods
xor
inc
je
mov
fisttpll
mov
mov
mov
ss
dec
sbb
xor
xchg
lods
fsts
push
mov
jg
push
mov
mov
lahf
es
imul
and
test
inc
xor
dec
aaa
inc
stos
pushf
int
fdivs
jg
inc
ret
sub
and
jecxz
int3
and
add
mov
iret
shlb
dec
sar
decl
sub
pop
jecxz
mov
or
mov
cmp
jge
gs
inc
lods
sub
aam
int3
outsb
cmp
sarl
insb
mov
pop
xlat
jae
inc
xor
pop
jg
fists
subl
xchg
cld
push
dec
leave
scas
imull
out
iret
ds
sub
cmp
fsubl
pushf
std
test
mov
leave
cmp
rcrb
cld
cmp
fs
std
lods
lahf
adc
sub
or
stc
leave
sbb
fidivrs
lcall
xor
mov
cmp
lret
in
dec
push
movsl
pop
test
js
test
inc
je
xchg
adc
add
adc
mov
xchg
and
mov
mov
lahf
je
lods
or
push
fldln2
imul
push
js
lds
jo
pop
cli
imull
je
adc
jno
stos
pop
ja
push
dec
fidivs
and
mov
jo
js
xlat
mov
pop
rcrb
imul
mov
sub
and
mov
inc
aaa
je
add
cmp
mov
std
pop
jo
mov
adc
and
pop
xchg
or
clc
bound
scas
inc
add
leave
cmp
or
cvtpi2ps
cmp
push
outsl
lock
fcomip
xchg
insl
cmp
sbb
sub
jmp
add
das
jle
out
add
decb
mov
pushf
das
xchg
icebp
in
mov
lods
je
mov
mov
idivb
add
sbb
loop
ret
mov
scas
adc
fldt
jnp
insb
pushf
call
imul
pop
lahf
test
hlt
add
sbbl
jecxz
aam
cltd
sub
add
ret
jno
fcomps
dec
cmpsl
fmull
ret
and
adc
rorl
xchg
loope
cs
xchg
int
mov
jmp
out
adc
gs
lods
adcb
mov
movsl
cltd
or
add
sbb
std
jle
insb
cli
dec
push
jecxz
and
jae
cmpsb
or
int
inc
mov
push
or
mov
jae
jb
dec
pop
ret
and
popw
cmp
ret
dec
and
test
mov
pop
add
push
add
fdiv
ja
push
push
rcrl
cmp
stos
inc
fildll
out
call
je
lock
pushf
stos
les
pop
pop
add
fsub
sbb
test
mov
notl
adc
cmpsb
dec
ljmpw
popa
or
out
das
fdivrl
jo
pop
ret
cld
out
fwait
jns
cs
add
cltd
mov
cmp
push
and
inc
flds
add
jecxz
std
adc
aam
xor
inc
mov
stos
test
sub
insl
sub
push
cmp
push
xorb
jbe
rcrb
mov
dec
pop
inc
ljmp
ja
mov
fstpl
cmp
push
mov
cwtl
gs
data16
cmp
scas
pop
jecxz
scas
insb
mov
fbstp
inc
lcall
ss
lcall
stc
outsb
lcall
movsb
test
aas
pop
das
cmpl
fcomps
ficomps
out
sbbl
mov
arpl
or
adc
jbe
ficoms
adc
es
mov
mov
nop
shlb
nop
insb
push
xor
cltd
aaa
ret
or
mov
das
popf
outsl
sti
mov
faddl
pusha
xlat
out
cmp
scas
cld
dec
mov
fwait
scas
cs
lock
push
mov
cmpsl
ss
loope
cmp
test
call
in
dec
in
sub
out
jg
rcll
mov
ja
dec
pop
ja
pop
loopne
es
faddl
push
xor
inc
push
leave
sbb
sub
pop
pop
mov
mov
dec
mul
js
push
inc
fptan
xchg
insb
mov
ret
enter
pminub
insl
enter
pop
jo
in
jmp
mov
push
lret
and
push
xor
mov
mov
push
rorb
mov
scas
ret
fisttpl
ret
aas
roll
pop
pop
outsl
mov
add
or
insb
mov
sti
iret
mov
lahf
xchg
push
mov
mov
cmp
sub
imul
es
lods
std
or
jb
sub
xchg
stos
inc
ret
inc
mov
mov
adc
and
mov
jno
mov
out
jge
ret
arpl
mov
lods
adc
js
stos
pop
roll
lret
divb
aad
adc
and
jge
cmpsl
adc
hlt
cwtl
adc
rolb
cmp
insb
das
popa
sub
loopne
leave
ds
or
sbb
inc
stos
pop
adc
mov
les
jae
test
mov
loop
scas
out
add
repz
push
push
subb
xor
mov
cmp
add
push
iret
or
fsubl
loope
jno
int3
shll
mov
int
ss
mov
mov
sub
lock
sbb
nop
and
iret
adc
xorb
and
jbe
cmpb
and
jge
sbb
jae
repz
cmc
movsl
gs
ficoml
and
add
jmp
lods
sub
jp
sar
xor
mov
xchg
and
sub
cwtl
mov
push
mov
ret
daa
sbb
sbb
adc
bound
je
mov
push
imul
dec
repnz
inc
cmpsb
xchg
sahf
dec
pop
pop
push
loope
je
das
add
out
and
xor
inc
push
les
or
push
pusha
fnstsw
xor
rorl
and
or
leave
lret
mov
sbb
popf
mov
add
pop
xlat
leave
cli
stc
sbb
iret
sbb
mov
xchg
add
pop
stos
aaa
or
pushf
daa
xchg
roll
insb
and
aad
in
ja
ljmp
notb
push
push
pop
div
push
in
scas
into
es
jb
sub
inc
mov
push
mov
xor
lock
mov
jge
and
lret
mov
rorb
hlt
call
jb
adc
add
sub
pop
sub
das
xor
xor
pinsrw
aad
outsb
sbb
jns
push
xor
pop
cmp
jecxz
imul
cmpsl
inc
addb
iret
push
lret
dec
push
lock
mov
jmp
xor
cli
daa
adc
inc
leave
data16
mov
jg
mov
adc
stos
fdivl
test
popa
xchg
fld
mov
mov
dec
xor
xchg
fsubr
or
push
add
lods
add
pop
lods
cltd
or
ret
xchg
mov
xor
fsts
jg
loope
push
es
addr16
lret
push
clc
arpl
divl
or
test
mov
out
ljmp
dec
mov
les
jb
into
loopne
psadbw
jmp
lods
jle
sbbb
lret
xor
pushf
push
lds
scas
push
mov
mov
sbb
pop
jmp
mov
fstl
test
and
xchg
add
xor
jge
push
nop
in
mov
adc
sbb
pop
push
mov
push
jg
idivb
cltd
mov
nop
jo
sahf
ret
je
cmp
int
es
int3
ficomps
pop
es
enter
pop
xchg
jecxz
je
call
test
out
jns
pop
sti
mov
negb
loop
cmp
or
into
xchg
or
sbb
ficoms
cli
inc
push
sbb
and
cmp
mov
cmc
inc
mov
push
imul
mov
adc
rclb
sub
daa
mov
les
dec
adc
sub
cmp
mov
rolb
inc
movsl
repnz
jp
xchg
or
lock
mov
out
lods
sbb
sahf
cmp
repnz
pop
push
jmp
pmaddwd
jg
imul
outsl
lret
fcompl
mov
adc
push
pop
mov
mov
inc
sbb
fsts
xchg
insb
cli
hlt
adc
shl
pop
scas
out
mov
sbb
fwait
and
rolb
in
aam
paddusb
outsb
mov
push
dec
fistps
adc
push
mov
shll
arpl
ljmp
lock
push
jg
push
adcl
cmp
js
xor
ljmp
fisubrl
aaa
adc
pusha
fwait
mov
or
mov
lods
push
dec
gs
flds
or
fwait
push
push
pop
daa
push
inc
aaa
xor
or
icebp
xlat
xor
lret
xchg
mov
push
sub
int
pop
push
cmc
call
lods
lcall
jo
stos
jp
mov
inc
lods
or
mov
sbb
sub
mov
lods
mov
dec
add
mov
xchg
pop
and
xor
divl
and
test
lds
push
jno
fisttpl
mov
adc
rcrl
mov
mov
insl
lock
test
sub
push
pop
mov
in
pop
dec
int3
out
mov
and
dec
sbbw
insl
pop
sub
mov
mov
jno
lret
mov
subps
lods
dec
push
jg
xlat
int3
sbb
imul
push
adc
and
notb
fisubl
fisttpll
addb
cmp
adc
jmp
outsl
out
cmc
enter
std
call
pop
jecxz
mov
jne
inc
mov
arpl
xchg
out
jmp
push
bound
shrl
fmulp
and
inc
push
xchg
fs
lods
jge
lds
push
jno
pop
loope
cmpl
iret
fidivrs
pop
inc
pop
xor
hlt
jb
and
sbb
cmp
and
js
push
icebp
mov
xlat
aas
shll
flds
sub
test
hlt
nop
scas
or
popf
sbb
sti
jle
lods
add
push
dec
jns
cmp
loop
jmp
daa
popf
jmp
outsl
pusha
xor
add
mov
arpl
sub
xchg
jae
mov
je
mov
xor
and
jno
sbb
loop
fucomp
fcmovne
add
mov
and
rolb
inc
dec
sahf
call
sbb
sbb
ret
hlt
inc
pop
aaa
jmp
test
fisttpll
cli
or
add
in
daa
xchg
loop
adc
push
mov
pop
or
dec
int
add
ljmp
jg
sti
sbb
in
jb
clc
mov
jp
push
pop
lods
xchg
imul
cmp
xor
pop
lods
int3
stos
cs
mov
fcoml
dec
jbe
das
sbb
cld
push
jo
cmc
shlb
stc
jae
lock
mov
push
inc
insb
fadd
sub
mov
je
pop
shlb
fdivp
lcall
stc
popa
xchg
daa
push
imul
xchg
out
rcll
test
xor
mov
fidivs
mov
push
clc
mov
ds
xor
call
mov
fisttps
xchg
mov
mov
lcall
dec
sbb
push
aaa
adc
out
xchg
mov
lret
aaa
jnp
push
sbb
add
inc
or
mov
mov
aad
cmpsb
pop
add
adc
lock
and
loope
jge
cmpb
movsb
movsl
adc
push
mov
cmp
mov
dec
cmp
jns
jle
xor
sub
dec
inc
dec
dec
adc
mov
jmp
and
push
push
and
mov
test
and
xor
mov
jne
inc
mov
jmp
or
mov
inc
mov
mov
push
cmp
pusha
aad
mov
or
outsl
push
sub
inc
sub
jl
aaa
pop
imul
insb
out
sub
mov
subl
mov
stc
sti
inc
std
mov
cli
std
cmp
ret
mov
loope
jg
stos
test
xchg
pop
shll
xchg
notb
jle
fisttpll
xor
fistpl
aam
ret
xchg
in
aas
fisubrl
test
out
cld
jg
cltd
in
dec
js
mov
out
and
and
sub
xor
out
and
cltd
bound
mov
sub
and
sub
push
and
mov
inc
popa
mov
fcoml
inc
push
xchg
mov
popa
fists
and
mov
stos
ja
addb
sbb
lds
pusha
cmp
imul
xor
cwtl
fdivrs
xchg
sbb
adc
scas
pushf
fsubl
test
int
stos
inc
daa
pop
cmp
jle
fdivrs
cmp
lret
xchg
xor
adcl
std
mov
gs
jns
lods
and
sbb
stc
int3
or
sub
rcrb
push
jle
jmp
sub
stos
xor
sbb
gs
sbb
std
test
pop
add
add
add
push
inc
pop
dec
xchg
dec
xchg
dec
xchg
dec
push
mov
pop
dec
call
cmp
je
xchg
push
pop
dec
push
pop
inc
xchg
inc
sub
xchg
dec
dec
mov
imul
jmp
inc
sbb
push
mov
aad
orl
orl
xorl
push
lock
xchg
jno
xorl
inc
dec
rcll
ret
aad
dec
jecxz
in
lds
daa
fs
dec
fstl
std
cli
movsl
and
cs
cmp
movsl
xor
cmp
lock
pop
sbb
sbb
insl
enter
dec
mov
leave
xor
push
sub
int3
mov
cs
inc
pop
jb
cli
in
add
fcomip
incl
test
iret
sbb
cs
xor
imul
mov
xor
sbb
inc
aam
mov
int3
mov
inc
push
add
mov
hlt
inc
mov
insb
xchg
add
outsl
lret
jle
sub
in
push
pop
pop
jle
mov
dec
ds
mov
fucompp
lock
xor
bound
shlb
adc
hlt
jnp
outsl
xchg
pop
sahf
inc
arpl
mov
loopne
jecxz
je
dec
sbb
adc
stc
movsb
movsb
sub
cli
lds
sti
sahf
adc
fnstenv
mul
insb
cltd
cld
ja
loop
stos
mov
push
jb
or
pop
mov
xchg
lods
cmc
lret
lahf
jecxz
int3
pop
fcmove
daa
sub
push
ss
sub
clc
inc
hlt
mov
add
rcll
ret
pop
push
clc
shlb
mov
fcmovbe
bound
pop
pop
inc
movsl
sbb
xchg
lea
jno
in
pop
lds
mov
push
ret
mov
push
sub
xor
mov
cmpsb
mov
hlt
push
xchg
cmp
inc
mov
popf
pop
nop
fcoml
es
fldcw
outsl
mov
cmp
xor
out
pop
aad
clc
fnstcw
int
imul
aad
cmp
and
test
imul
dec
pop
enter
aas
mov
sbb
rorl
addr16
outsb
or
jb
call
lods
add
mov
call
int
lds
and
lcall
in
cmp
divl
dec
push
movsl
add
dec
dec
mov
jb
sti
push
aad
dec
mov
arpl
scas
add
fidivrl
lret
mov
repz
inc
dec
dec
out
jmp
mov
rorb
hlt
imul
aam
adc
out
loope
dec
je
mov
jmp
popf
or
add
push
dec
dec
and
cmp
shlb
cmc
iret
faddp
or
jne
ficoml
icebp
es
xor
fstpl
xchg
sbb
pop
inc
sbb
orl
in
sbb
insb
lret
sub
adc
mov
into
lods
arpl
cmp
pop
jge
xchg
ss
into
sub
xor
popa
mov
int3
jns
jbe
xchg
rsqrtps
add
ja
dec
ret
fdivs
xchg
xor
jp
popf
mov
insl
pop
addr16
mov
xchg
out
mov
xchg
inc
frstor
adc
movswl
fisubrl
xchg
mov
outsl
jp
scas
shlb
into
push
imul
mov
sbb
mov
inc
sbb
dec
cmp
mov
jl
ja
and
or
pop
inc
push
je
iret
ds
xchg
pop
inc
test
jmp
push
shlb
mov
sub
shrl
mov
shlb
ret
pop
mov
cwtl
mov
fidivrl
cmp
mov
xor
addl
cmp
dec
dec
lock
pop
mov
inc
in
add
pusha
mov
push
imul
mov
es
popa
pop
sbb
fistpl
add
test
mov
lds
in
leave
aas
jp
or
in
sub
lea
aaa
iret
mov
in
lods
inc
das
stos
fwait
cld
inc
cmp
mov
imul
push
jmp
std
jmp
lret
pop
rcll
jns
gs
mov
adc
xchg
iret
mov
and
or
pop
sti
mov
insb
push
mov
and
sahf
add
ja
jae
pop
popf
pop
inc
lods
or
cmc
popa
mov
or
xchg
pushf
sbb
mov
or
mov
call
enter
mov
pop
out
xor
arpl
loopne
int
jae
jo
push
xor
mov
cmp
cltd
push
lcall
inc
xchg
inc
and
jl
mov
pop
and
jle
jge
inc
mov
mov
lds
inc
leave
push
cmpsl
xchg
test
lret
imul
mov
out
ds
repnz
pop
push
xor
mov
es
out
aaa
bound
mov
xor
cmc
pop
fildll
jle
xchg
jecxz
sbb
push
mov
pop
addl
data16
in
fdivr
pop
mov
inc
or
loopne
in
dec
es
js
push
jo
insl
mov
xor
lock
mov
xchg
insl
rep
repnz
jg
mov
push
mov
dec
std
mov
pop
or
push
xchg
push
xor
aaa
mov
pop
out
lods
push
roll
or
adc
stos
inc
adc
mov
pop
mov
sub
push
loopne
dec
fstps
lods
adcl
es
shrb
push
mov
mov
adc
xchg
pop
inc
fwait
sarl
cmpb
out
cmc
inc
inc
mov
inc
mov
testl
iret
cwtl
rolb
pop
lods
sarb
mov
stc
pop
imul
and
loope
push
fildl
rcr
jb
lcall
sub
push
fxch
lret
mov
push
cmpsl
adc
sbb
add
push
inc
es
fidivrl
out
popa
jg
sahf
in
push
xchg
and
jp
push
imul
adc
xor
inc
mov
xorl
cs
out
mov
lea
stos
jp
aad
adcb
push
add
sti
sub
xchg
mov
and
mov
repnz
push
adc
inc
in
dec
ret
adc
push
imulb
inc
dec
inc
out
push
movsl
mov
dec
nop
pop
call
push
ret
jecxz
xchg
sub
sbb
cmp
ret
add
push
sbb
jg
addr16
sbb
ja
pop
xor
mov
xchg
adc
or
sub
jmpw
adc
icebp
mov
movsl
xlat
int
mov
dec
sub
mov
jno
push
push
cmc
xchg
in
add
push
mov
dec
stc
enter
sar
out
jnp
movsl
sti
add
jle
push
lods
inc
adc
add
fildll
sbb
test
popa
sbbl
pop
insl
sub
insb
and
push
or
loop
jl
xlat
decl
pop
inc
andl
sbb
subl
in
push
mov
sbb
loopne
dec
mov
mov
mov
inc
and
mov
mov
mov
movsl
mov
pop
jecxz
push
xor
addr16
xchg
js
test
add
daa
inc
add
es
call
addr16
dec
popa
cli
cmc
push
adc
xor
add
lods
jp
fs
es
inc
mov
test
adc
outsl
push
sbb
cmp
inc
ror
inc
pop
mov
cmp
adc
xchg
cmp
push
fsubs
pusha
inc
xchg
sbb
scas
stc
shlb
cld
insb
je
cmp
mov
stos
inc
dec
call
outsl
out
aas
stos
mov
mov
push
aas
test
mov
fisubrl
inc
cmpsl
jae
popf
hlt
adc
inc
cltd
call
cmp
dec
or
mov
icebp
lret
xor
std
adc
into
test
sub
data16
fwait
nop
jns
movsb
testl
add
pusha
xchg
mov
adc
mov
cs
test
xchg
mov
sbb
test
mov
mov
sarl
xchg
cmpsl
or
sub
inc
push
cmp
out
xlat
mov
mov
lret
add
ss
mov
cmp
or
add
bound
daa
hlt
negb
icebp
mov
aas
sbb
sbb
jns
adc
cmc
int3
sub
xor
xor
in
aad
test
xchg
outsb
test
dec
xchg
aam
stc
or
sahf
lods
lods
fiadds
inc
sub
scas
mov
add
jno
push
dec
mov
movsb
inc
fadds
add
xchg
fisttpl
ret
pushf
cld
xchg
jmp
xor
sbb
dec
arpl
mov
lret
push
xchg
inc
leave
stos
push
flds
cmp
fwait
ret
push
ret
push
in
adc
shl
aaa
ss
pop
stos
or
xchg
sub
jo
xor
sarl
scas
xor
jecxz
lcall
popf
or
cmp
inc
cmp
sbb
mov
inc
sub
inc
stos
fwait
or
lahf
pop
xchg
cmpsl
inc
lcall
add
shrb
or
cmpsl
mov
pop
ret
mov
in
lock
inc
cmpl
dec
pop
push
or
pop
cmc
in
or
sbb
cmp
loop
pushl
fstpt
push
dec
fstps
sti
push
mov
jns
das
jmp
mov
loopne
fbld
stos
imul
loop
in
enter
cltd
cmp
dec
icebp
or
lret
mov
push
mov
mov
dec
mov
or
repnz
mov
mov
lods
mov
ja
hlt
dec
lret
in
fistps
std
shlb
push
cltd
or
leave
das
xchg
pop
cmc
or
aam
and
or
cmc
xchg
std
jbe
jmp
dec
cmp
push
push
cmp
nop
pushf
sbb
mov
movl
mov
cwtl
xor
sbb
pop
adc
mov
dec
lea
out
std
arpl
push
push
les
scas
mov
inc
orb
mov
sbb
idiv
je,pt
inc
or
mov
in
hlt
jns
inc
mov
add
lock
dec
out
and
cmp
and
movsb
test
ljmp
out
enter
popl
or
pcmpeqd
rorl
cmp
ret
out
imul
or
in
push
call
dec
dec
stos
imul
inc
mov
scas
lods
mov
repnz
pop
cmp
cmp
lcall
cltd
lea
push
testl
test
sti
lea
in
lods
mov
jnp
xor
scas
sbb
cli
pop
sub
and
sbb
mov
in
repz
adc
bound
int3
add
loope
sbb
and
out
ss
sbb
mov
lahf
sbb
repnz
add
or
repnz
pop
jl
aas
mov
push
popa
or
gs
aas
test
sub
adc
or
xchg
out
add
out
mov
xorb
insl
or
mov
or
mov
xchg
sti
nopl
xorl
push
or
sub
lods
push
mov
cld
aaa
sbb
cli
shrl
xchg
push
dec
xchg
adc
fst
in
aad
inc
jnp
jp
fimull
or
cmp
push
dec
fistpl
int
sbb
jbe
pop
out
cmp
fldcw
sbb
arpl
leave
mov
hlt
addr16
pop
cs
enter
data16
sarb
std
subl
push
movsb
call
adc
push
add
xchg
shlb
lcall
xor
ficompl
mov
inc
mov
jne
xor
jno
cmpsb
popa
imul
decb
mov
repz
fistps
push
lock
cwtl
iret
inc
xchg
aam
xchg
test
push
es
das
test
jbe
orl
stc
pushl
icebp
sti
inc
fistpll
and
les
push
mov
ret
add
out
jl
mov
push
clc
enter
repnz
in
mov
xor
pushf
icebp
popf
rorb
and
and
aas
fs
arpl
sahf
jns
leave
add
in
enter
adc
jge
sbb
xchg
pop
adc
push
insl
mov
daa
mov
xchg
imul
add
mov
inc
xchg
xor
rclb
outsb
jp
jmp
or
fscale
stc
xchg
imul
sub
lods
xchg
popf
cs
jno
push
sbb
cli
lea
cmp
sbb
push
sub
jo,pn
fdivrl
lahf
push
mov
inc
dec
push
ja
sub
sbb
mov
es
sub
out
jb
or
or
rolb
leave
gs
in
popf
mov
movsl
inc
inc
jnp
sbb
repnz
mov
outsl
out
outsl
imull
xchg
or
stc
cmpsl
shll
push
daa
fisubrs
out
inc
xlat
arpl
dec
movsb
or
xchg
outsl
add
mov
fsubrp
lods
loope
jbe
hlt
outsl
fisubrl
dec
subl
and
or
fbld
push
xorb
scas
and
and
fldt
loope
mov
roll
mov
push
xchg
mov
push
jno
xchg
lds
stos
pop
or
push
jbe
add
jg
cwtl
shll
mov
add
bound
js
sub
nop
in
mov
cmp
pop
popf
or
mov
sub
ljmp
scas
or
pop
inc
aas
and
es
add
nop
pop
jg
jno
jno
mov
test
jmp
xchg
sub
xor
rorl
gs
scas
out
popf
das
jl
mov
subl
xchg
mov
insb
jnp
es
push
xchg
fsubs
mov
insb
stos
or
dec
jl
test
xchg
pop
popf
jb
ret
aaa
adc
push
sahf
inc
fwait
test
les
outsb
jmp
xchg
cmp
int
movsl
mov
xchg
mov
stos
fwait
sbb
popa
into
call
test
clc
add
into
mov
xor
fsts
sbb
or
sbb
inc
mov
outsb
ja
mov
push
adc
int3
aam
nop
imul
and
pop
ret
dec
jae
inc
adc
jnp
or
pop
mov
pop
cmp
push
addr16
mov
int
jne
push
imul
hlt
adc
test
fdivr
out
adc
dec
loop
pop
movsb
rorl
insb
les
jb
adc
xchg
shrl
jmp
xor
dec
mov
jbe
sbbb
xor
or
repz
es
xchg
stc
into
out
mov
mov
pop
jb
aas
ds
cmp
test
insb
shlb
xor
into
leave
add
xor
jb
stos
jnp
dec
sub
and
push
xlat
pop
jno
push
cs
inc
rcrw
test
add
cmp
pop
adc
xchg
mov
pop
call
cli
push
in
lods
mov
mov
xchg
jno
mov
and
enter
adc
imull
push
les
inc
aad
dec
fnstsw
lret
scas
arpl
xchg
js
xchg
stos
pop
lds
repz
out
pop
push
adc
fs
and
xor
mov
inc
stos
call
lods
sbb
jg
stc
aad
enter
jne
es
push
cmp
jb
shl
dec
cmp
pushf
dec
in
cmc
jg
mov
pop
in
outsb
and
push
xchg
insl
dec
fmuls
adc
xchg
dec
ret
fwait
push
xchg
fcomip
in
inc
fwait
dec
fnsave
mov
loop
je
mov
cs
or
jecxz
mov
aaa
ret
push
dec
mov
lcall
je
and
dec
push
push
push
jg
add
sub
std
add
nop
adc
jmp
negb
adc
ret
repz
dec
pop
mov
push
sub
pusha
fidivrl
and
push
leave
aas
adc
or
push
lds
lods
shll
bound
mov
bound
jl
idivb
in
push
loop
imul
enter
push
mov
in
dec
ffreep
jl
jecxz
nop
ss
hlt
sbb
pop
iret
adc
lds
push
xor
adc
in
inc
mov
in
mov
mov
jns
jno
mov
cmp
ljmp
dec
xchg
aaa
dec
rorl
adc
sub
call
push
cmp
jbe
sahf
xchg
jge
das
movsl
data16
mov
xor
icebp
mov
cmp
testl
std
dec
mov
fldt
dec
pop
xchg
lahf
inc
pop
dec
jb
je
add
mov
adc
in
sub
andl
add
cmp
add
lea
pop
rcll
xchg
in
xchg
lea
ja
insl
test
stc
push
cmpsb
aaa
push
scas
sub
hlt
mov
insl
dec
das
out
mov
mov
icebp
and
out
frstor
xchg
andb
or
outsl
sarl
ficompl
cmp
sub
dec
jmp
std
mov
cmpsl
sbb
jge
cmp
cmp
call
jge
in
sbb
inc
idiv
sbb
sbbl
xchg
int
jmp
jmp
cmp
loop
movsl
cmpsl
inc
mov
pop
seta
out
pop
insb
inc
subl
or
pop
pop
xchg
leave
fs
push
adc
imul
insb
mov
rol
pop
xchg
jno
push
cmpl
and
sub
mov
clc
jge
mov
and
insl
arpl
jae
nop
sti
lcall
sbb
inc
or
sar
adc
insl
or
push
or
clc
test
lock
mov
xor
xor
ret
loopne
shll
adc
pop
rolb
jae
cmpsl
add
stos
jo
imul
inc
subb
scas
jg
fmul
ret
dec
adc
push
lods
sbb
sbb
dec
push
sbb
ror
lcall
push
je
test
pop
mov
in
aaa
rol
jmp
push
xchg
fs
aad
lahf
es
imul
cmc
xchg
into
push
pop
xchg
outsl
outsl
or
cltd
lds
lahf
jl
ja
pop
lods
add
xor
in
or
loope
jne
dec
cmpsb
loopne
fnstsw
das
nop
sbb
add
push
xor
cli
xor
push
jb
pxor
das
xor
loopne
in
mov
mov
mov
jno
fcompl
inc
jnp
shrl
insl
sbb
push
lds
subl
mov
push
popa
sarl
and
loopne
cli
xchg
jg
ret
jmp
lret
sbb
cmp
stos
test
inc
add
inc
xor
lret
push
jb
aaa
je
pop
inc
pop
enter
aad
les
inc
sbb
ds
add
cld
push
in
inc
rorl
or
int3
jp
pop
lock
jmp
cli
clc
sbb
and
nop
jo
xchg
enter
mov
pushl
fs
es
rorb
inc
data16
ror
adc
andb
xor
clc
cmpsb
jo
shrb
loope
xchg
jae
pop
dec
je
inc
gs
push
ss
pop
lea
push
cmp
adcl
scas
xor
fwait
int
cmp
adc
stc
or
insb
arpl
imul
jns
jmp
popa
pop
sbb
or
lahf
sbb
into
mov
pop
pushl
shll
in
test
inc
push
and
fdivrp
add
jecxz
push
push
fimuls
pop
push
int
jmp
inc
jo
push
pop
rolb
repz
lret
mov
outsb
or
mov
push
xor
mov
pushf
fildl
insb
push
adc
jne
or
ljmp
repz
dec
mov
roll
cmp
mov
pop
scas
mov
push
push
out
sub
pop
popf
shrl
mov
dec
dec
push
popa
inc
mov
sahf
int
ss
jns
pop
dec
sbb
cli
outsb
or
jns
mov
int3
test
outsb
jns
sbbb
fnsave
pop
xor
jmp
or
dec
xorl
mov
loop
daa
mov
mov
and
dec
test
pop
mov
inc
or
hlt
call
mov
inc
pop
xor
dec
dec
sub
dec
out
outsb
or
sub
lock
cmc
and
daa
mov
dec
mov
add
fidivl
pop
je
sbb
sbb
xchg
dec
fwait
jbe
jae
sarb
rorb
sbb
lds
loop
pop
or
mov
and
pop
jo
mov
test
mov
adc
rolb
scas
aad
mov
xorl
xchg
pop
sahf
fwait
mov
inc
fists
xor
pop
imul
test
mov
sub
int
jg
dec
outsb
cmp
lret
enter
pop
idiv
ljmp
gs
ds
or
jp
jbe
or
leave
mov
add
adc
lret
cwtl
inc
mov
mov
stos
cmpsl
cwtl
pmulhw
xchg
outsl
ljmp
mov
push
dec
out
sub
xchg
dec
cmp
xor
cmpsl
insb
dec
mov
jbe
movsb
lret
scas
iret
lcall
xchg
lds
or
idivl
pop
stos
sbb
leave
pop
loopne
std
jmp
push
cmp
mov
ss
das
out
jmp
sbb
aas
fwait
cltd
movsb
inc
shll
cmp
addl
mov
adc
repz
daa
jmp
roll
add
push
rcrb
cmp
imul
pusha
outsl
fnstenv
pushf
cmpsw
jnp
nop
lea
xlat
xchg
jg
cmp
jmp
out
jbe
fistpl
jb
addb
jo
xor
lret
inc
mov
fldt
pop
neg
push
stos
lret
test
pop
mov
inc
pop
dec
fists
cmpsb
sub
aad
lcall
fisubl
push
add
xor
les
mov
push
jecxz
pop
sub
jnp
jnp
mov
xchg
out
mov
pop
cmp
pop
je
insb
pop
stos
adc
aaa
subl
insb
stos
inc
lods
ljmp
add
dec
mulb
or
cld
push
jae
insb
fbld
cs
lret
scas
pusha
rolb
push
push
pop
imul
cmp
scas
pop
xchg
ds
les
jb
test
out
xor
std
mov
ds
xrelease
cmp
xor
imull
or
int
scas
dec
hlt
test
dec
jge
pop
bound
popa
into
into
dec
cmpsb
in
xor
scas
div
cwtl
add
test
cli
sbb
sbb
jnp
aad
ret
mov
lods
loope
js
mov
movsb
dec
mov
jne
sbb
mov
fs
mov
or
std
popa
pop
inc
add
sahf
lret
adc
repnz
fsubr
daa
test
insl
imul
xor
jbe
pop
notl
imul
pop
xchg
sbb
incl
ljmp
movsl
fsubs
cli
push
xchg
cmp
mov
mov
mov
jnp
call
aas
mov
test
inc
add
out
test
xor
mov
hlt
add
xchg
bound
xchg
xlat
pop
pop
mov
jle
dec
mov
sub
jb,pt
into
icebp
mov
outsl
xchg
enter
sub
in
mov
cmpsb
out
daa
incb
push
xor
push
out
outsb
lahf
sbb
xor
mov
rolb
aas
add
jge
push
fsubs
cmp
clc
adc
cmp
cmp
mov
mov
jo
jp
dec
pop
ret
rcl
push
das
test
call
cltd
scas
and
iret
std
mov
or
adc
sbb
mov
loopne
lcall
ja
add
cli
jecxz
mov
add
xchg
add
xchg
je
cmp
xchg
lods
xor
subl
pusha
push
lock
xchg
mov
xor
negl
xor
cli
lods
jnp
frstor
jns
or
xor
iret
mov
cmc
test
in
mov
dec
aaa
lods
and
mov
ror
xchg
xchg
sahf
or
int3
repnz
mov
or
mov
repz
repz
cmp
inc
fsubr
aas
ja
dec
jb
lret
mov
xchg
std
or
cmp
dec
mov
push
pop
inc
lcall
aam
cs
inc
fs
loopne
into
push
fistpll
and
ljmp
lret
adc
iret
repnz
add
adc
and
testl
mov
fs
iret
stos
sub
outsb
sub
xor
nop
pop
mov
add
mov
fwait
loop
push
aad
mov
cmp
cmp
mov
mov
mov
clc
fidivs
sbb
loope
in
mov
push
adc
adc
outsb
test
fldpi
sub
cmp
imul
mov
mov
add
adc
popf
jecxz
js
sbb
lahf
popf
mov
xchg
cltd
sub
dec
xchg
mov
pop
fsubr
imul
ss
hlt
push
leave
jnp
push
loope
xchg
clc
adc
push
call
lea
in
shlb
pop
jo
push
gs
adc
icebp
cmp
out
sub
xchg
repnz
jno
xchg
in
test
shrb
and
jb
mov
icebp
pop
sub
clc
and
sbb
bound
out
scas
mov
lret
xchg
cld
sub
or
pop
pop
adc
push
xor
sbb
mov
lret
inc
ret
or
aaa
fwait
sarl
jle
in
stc
jl
or
pop
mov
jmp
adcb
push
jp
subb
push
pop
hlt
fnstenv
test
xchg
ficomps
xchg
mov
add
lret
ja
shlb
sub
mov
negl
xor
notl
pop
add
push
inc
ds
xor
test
add
shl
jg
push
push
outsb
cs
cmp
or
jbe
jb
cmc
out
push
ret
jae
fists
fstl
loopne
not
inc
sub
xor
or
sbb
push
fsubrs
or
sbb
out
outsb
out
adc
dec
xchg
mov
int3
inc
add
pop
cmp
mov
jl
mov
push
orb
cmp
in
aaa
shl
loopne
jo
test
pushf
cmc
shrl
adc
add
mov
sub
sbb
add
fstpl
cld
mov
fnstenv
pop
mov
cmp
add
outsb
movsl
lret
mov
pop
movsb
mov
sub
mov
push
aad
fisubrl
xor
pop
ret
push
xchg
mov
mov
aaa
mov
jmp
mov
inc
add
jg
add
pusha
loope
fcmovb
pushf
cmp
in
bt
sub
and
adc
and
sti
fs
mov
cmp
incl
xor
mov
outsl
pop
stc
ljmp
fsubrl
sti
sub
imul
mov
fndisi(8087
stc
outsl
in
lcall
fmulp
push
pop
add
ljmp
and
sti
jne
js
call
push
adcb
fbstp
notl
xor
call
in
mov
fwait
jge
inc
stos
adc
repz
jge
xchg
shll
mov
cmp
mov
xchg
push
mov
adcb
leave
sub
lahf
flds
les
xchg
in
shlb
insl
dec
in
sbb
cmp
cmp
ret
push
push
xchg
filds
inc
xor
push
insb
inc
incl
inc
adc
cmp
pop
insb
and
negb
add
aam
pop
push
outsl
mov
pop
repz
jbe
sbbl
repz
push
jb
imul
lcall
mov
iret
dec
push
leave
mov
rcll
mov
pop
mov
pop
lods
dec
lret
adc
pop
xor
pop
fisttpl
neg
fildll
jl
test
stc
popf
cmp
inc
and
cmp
xchg
aaa
sbb
jmp
iret
iret
mov
and
push
popf
int3
ss
jnp
in
cmp
mov
iret
addr16
pop
cwtl
add
jb,pt
jbe
in
jno
lea
call
in
add
push
shrb
jns
sbb
xchg
adc
mov
xor
mov
mov
xchg
cmpb
je
mov
gs
sbb
cli
lret
jle
in
dec
out
xor
arpl
pop
or
mov
sbb
roll
mov
popf
xchg
fwait
jl
rdrand
shlb
sbb
and
dec
movsb
add
in
lods
iret
cmpsb
aaa
mov
push
aad
dec
push
int
outsl
mov
pop
into
xchg
aas
int
push
pop
imul
stc
add
xorl
push
mov
stos
sahf
leave
xchg
jbe
dec
dec
into
xchg
test
xor
pop
into
mov
rcrl
fiaddl
pushf
ficomps
inc
mov
lahf
loop
push
jne
fcmovbe
imul
dec
nop
mov
xor
jmp
and
ljmp
adc
stos
mov
inc
shrb
aaa
sahf
mov
dec
rol
sub
or
std
push
pushf
popa
ljmp
push
dec
mov
xor
xor
adc
popf
loopne
fsubrs
cmp
push
dec
inc
sbb
cmc
cs
sbb
dec
cmp
xor
pop
cmpsl
into
push
push
loopne
mov
lret
pushf
sti
lock
mull
push
mov
mov
daa
xchg
inc
fdivrs
loopne
fwait
ljmp
jg
cmpsl
jns
ja
in
mov
roll
shlb
lret
imul
aaa
inc
cmp
pop
ss
cmp
xchg
rclb
out
hlt
mov
fmul
adc
shrb
pushw
fldt
movsb
mov
xor
inc
sub
insl
cmp
push
cmpb
scas
jge
fnsave
sbbl
out
lcall
push
cmp
add
xchg
mov
cmc
mov
inc
adc
inc
testl
pop
inc
cmpsb
push
and
dec
add
repnz
pop
fsubrs
mov
jge
sub
mov
fistl
mov
ljmp
pop
mov
lock
sub
push
jns
pmulhuw
sarl
movsl
mov
aaa
pop
push
call
sahf
add
lds
mov
xor
loope
jno
and
xor
dec
jp
lea
mov
push
aaa
jo
lcall
loope
pop
sub
jp
adc
fisttpl
cmp
or
cmp
mov
inc
and
imul
and
mov
in
fwait
in
push
fsubrs
sbb
mov
fadds
scas
cmp
lds
cs
add
xchg
push
xor
mov
dec
inc
add
dec
xor
add
pop
mov
pop
pop
pop
leave
ret
push
mov
push
movl
mov
mov
sub
xor
mov
andl
mov
inc
mov
cmpl
jb
jmp
pushl
pushl
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
mov
addl
xor
add
mov
mov
xor
push
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
pop
leave
ret
push
mov
sub
andl
mov
inc
mov
cmpl
ja
jmp
push
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
xor
mov
xor
xor
mov
adcl
add
andl
mov
inc
mov
cmpl
jge
jmp
pushl
call
cmpl
jb
movzwl
or
mov
andl
movb
mov
sub
lea
movl
cmpl
je
cmpl
ja
jmp
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
or
mov
xorl
mov
xor
add
andl
mov
sbb
movl
push
movl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jbe
jmp
push
pushl
push
push
call
cmpl
jne
xor
xor
inc
mov
jmp
mov
subl
push
dec
mov
andl
xor
or
mov
adcl
push
andl
add
movl
jmp
movl
mov
movl
mov
movl
inc
movl
cmp
jb
sbb
mov
adcl
xor
subl
add
jmp
mov
mov
sbbl
xor
adc
mov
xorl
add
adcl
movzwl
andl
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jge
jmp
push
call
jmp
mov
addl
movzwl
xor
add
mov
mov
inc
mov
mov
cmp
jne
movl
cmpl
je
cmpl
jle
jmp
push
call
xor
add
dec
mov
jmp
mov
and
mov
andl
mov
inc
mov
cmpl
jge
jmp
push
push
push
pushl
push
pushl
call
cmpl
jb
xor
inc
add
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jl
jmp
push
pushl
push
pushl
call
cmpl
jne
xor
xor
inc
mov
jmp
mov
xor
mov
andl
xor
xor
inc
mov
cmpl
ja
jmp
pushl
call
cmpl
jb
xor
and
add
orl
mov
adc
movl
or
movl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jle
jmp
push
call
cmpl
jne
xor
xor
inc
mov
jmp
movl
mov
mov
mov
xor
xor
or
add
mov
mov
je
addl
mov
mov
and
mov
mov
xor
xor
xorl
sub
sub
movl
cmpl
je
cmpl
jb
jmp
push
push
pushl
push
call
mov
dec
mov
jmp
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jb
jmp
push
push
call
cmpl
jne
xor
add
inc
mov
jmp
mov
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jb
jmp
pushl
pushl
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jb
jmp
push
pushl
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
addl
add
imul
orl
mov
sub
jmp
add
cld
shl
mov
xchg
lret
addl
pop
addl
dec
icebp
push
or
cmp
aad
cmpsl
xchg
movsb
jmp
sub
adc
call
pop
shl
sbb
fiadds
aad
shrl
stc
les
cmp
ret
call
inc
sar
jns
cmp
pop
lods
jp
push
int3
sub
data16
cmp
lds
or
push
in
inc
xorb
daa
and
mov
daa
push
movl
xor
dec
andb
and
pop
pop
jge
cmp
call
jno
hlt
xchg
xchg
add
testb
push
popf
add
jmp
jmp
je
xor
rcrb
mov
aam
cmpl
mov
or
call
in
js
stos
jl
call
add
push
inc
mov
stc
rclb
lds
cwtl
push
xchg
pushf
inc
movsl
xchg
fmuls
je
cmp
sbb
jns
pop
xchg
and
and
stos
lds
or
aas
pop
and
pop
and
je
xor
xor
stos
xchg
mov
mov
fistps
pop
clc
jg
xchg
pop
xor
es
adc
cmpsl
xchg
sbb
lock
leave
ds
xor
mov
push
mov
xor
cmp
jo
jmp
cmp
loop
stc
pop
mov
push
cmpsl
clc
test
xchg
sbb
cmp
repz
testb
leave
cmp
pop
aad
cltd
or
push
fwait
pop
rolb
jb
daa
sub
push
mov
jecxz
mov
cmp
adc
dec
and
ljmp
aam
inc
test
aaa
jl
cmpsb
cmpsl
outsl
testl
jo
das
inc
add
loop
mov
sbb
adc
xor
jb
push
fs
xor
stc
sub
adc
mov
jl
adc
aad
stc
jne
repz
pop
pop
insl
mov
ds
and
faddl
xchg
mov
jl
outsb
and
sbb
dec
adc
mov
test
adc
cmp
add
dec
xchg
je
xorb
daa
xor
test
mov
pop
fcoms
jbe
inc
jg
jge
pushf
adc
inc
bound
jecxz
insl
or
aas
sti
sbb
dec
imul
int3
mov
jle
lahf
mov
xchg
cmp
rcll
icebp
add
cmp
repz
xchg
cmpsb
inc
and
add
cmpsl
dec
lcall
xchg
add
int3
dec
hlt
bound
scas
pusha
sub
lds
add
dec
dec
mov
mov
addr16
lock
lods
add
das
out
cmpsl
or
pop
cmp
lahf
scas
addb
jne
xchg
jnp
dec
xchg
stc
mov
sti
leave
xchg
in
divl
jg
outsl
loope
cmp
movsl
jle
adc
cld
lahf
sub
fs
hlt
js
cmpsl
mov
push
cltd
outsb
imull
sar
stos
addb
in
es
into
xor
sbb
inc
and
leave
stc
push
pop
cltd
mov
add
mov
call
xor
dec
push
movsl
mov
stos
icebp
in
lret
imul
roll
lahf
mov
mov
jmp
pop
outsl
pop
dec
fdivr
dec
jo
add
xchg
mov
xlat
jge
fcmovnu
stc
les
ja
push
xchg
mov
rcll
jno
hlt
or
xchg
pushf
push
or
and
jns
and
andb
ja
push
fs
rsqrtps
fbstp
dec
cmpsb
jae
pop
in
xor
cmp
scas
insl
popf
pop
cmp
xor
fsubrl
or
add
data16
push
pop
sbb
mov
lcall
outsl
int3
lahf
mov
cld
sbb
scas
inc
aas
inc
lahf
pop
push
adc
aam
arpl
add
icebp
adc
mov
dec
mov
loopne
movsb
dec
test
int3
add
stos
loope
lret
fmuls
adc
decl
test
cmp
sub
rolb
in
mov
out
popa
fs
movsb
pop
and
dec
and
xlat
inc
ja
and
push
or
stc
and
iret
mov
in
mov
jecxz
xor
lea
jmp
mov
and
pop
push
enter
test
mov
sub
adc
push
push
stos
pop
pop
mov
push
in
mov
into
cmovb
fsubrl
scas
lds
mov
mov
data16
push
fwait
push
bound
iret
imul
scas
sbb
add
aaa
sub
jl
scas
xchg
loope
add
sbb
dec
pop
xchg
hlt
test
out
jnp
popf
ss
movsl
dec
pop
je
or
xchg
xchg
dec
enter
test
jecxz
dec
or
es
pop
pop
test
add
in
sbb
and
sub
shlb
cltd
mov
ss
loopne
fwait
mov
out
out
mov
jmp
push
push
mov
ds
mov
jle
adc
test
test
mov
add
lods
cli
mov
jp
mov
push
adc
fsub
dec
mov
addl
lods
mov
cmp
gs
jle
inc
sub
in
icebp
sti
into
sub
rol
bound
lret
rcl
addl
sarb
jo
aad
jbe
mov
int3
fidivrl
lcall
lret
int
frstor
sub
inc
push
add
popa
repnz
aad
out
adc
adc
bound
iret
mov
mov
scas
outsb
lds
xorb
fidivrs
add
or
leave
repnz
jmp
mov
lods
sbb
ss
stc
sti
es
and
sub
cmp
loopne
out
push
jge
mov
jp
mov
outsl
sar
loop
push
push
dec
in
lods
push
push
mov
pop
repz
das
mov
sbb
loopne
orl
test
mov
movsl
inc
xchg
mov
lcall
xchg
les
cltd
jbe
push
adc
andl
inc
sti
stos
sbb
cmc
add
lret
in
and
xchg
ss
pop
sbb
addr16
sbb
int
leave
in
or
add
aam
sahf
repnz
leave
in
xor
and
mov
jle
jmp
not
lock
lret
dec
mov
fs
sub
sbb
divb
pop
fwait
xchg
mov
leave
nop
aas
sarb
aam
into
cmpsb
mov
mov
shll
je
fwait
sub
stc
repnz
sarb
xchg
push
pop
lret
xor
cmp
inc
inc
lcall
jmp
sub
cmp
xchg
mov
outsb
cmp
ljmp
insl
pop
pop
and
or
repnz
sti
mov
lods
jo
pop
cld
pushf
imul
push
outsb
dec
jle
pop
xchg
inc
mov
lahf
lods
xor
addr16
mov
sbb
mov
push
sbb
gs
ds
mov
cs
aaa
dec
push
addr16
inc
aaa
sahf
mov
sbb
add
sbb
dec
outsl
pop
int3
cwtl
insl
fs
ret
insl
push
hlt
adc
fldt
fcmovbe
pop
sub
jp
mov
cmp
sbb
outsb
push
or
cmpsb
imull
lcall
mov
repz
xchg
out
or
xor
hlt
add
jb
dec
imulb
and
int3
pop
mov
ja
sbb
mov
in
mov
push
and
es
pop
xor
xchg
mov
insl
xor
sbb
cwtl
addb
addl
adc
xor
test
mov
imul
popf
cmp
push
mov
imul
sbb
dec
xchg
mov
std
mov
enter
sbb
mov
sub
sbb
add
lock
lcall
icebp
loope
std
gs
lahf
fsubs
xor
nop
jle
int3
out
pushf
adc
jp
adcb
hlt
subb
jo
js
fmul
hlt
or
add
sbbl
pop
mov
loop
mov
or
jb
into
xchg
mov
shrl
sbb
sahf
and
divb
adc
push
addr16
sub
ss
pop
leave
or
out
push
aas
iret
lcall
out
xchg
mov
cmp
mov
adc
fs
in
inc
pop
push
cmpsl
icebp
inc
push
cwtl
push
push
mov
xlat
mov
in
movsl
insl
inc
mov
or
fildl
adc
xor
xchg
add
daa
adc
mov
adc
into
scas
and
stos
ds
rcrl
inc
and
out
orb
das
sbb
lea
es
je
dec
mov
loopne
cmp
popf
mov
xchg
xchg
fmul
addl
in
cmp
fisttpll
xor
and
pop
xchg
bound
xor
ds
ds
lcall
lret
ja
xchg
cmp
and
stc
setno
mov
xchg
mov
rolb
cmpsl
lds
or
leave
addr16
xor
lea
rol
popf
jmp
gs
mov
mov
sbb
lock
cmp
sub
movsb
push
test
imul
lea
mov
int
mov
push
inc
int3
jae
jbe
lods
lcall
cmc
imul
push
leave
pop
dec
repz
mov
or
mov
sbb
pop
sub
testl
stos
push
test
or
inc
cmpsb
push
inc
aas
pop
in
lea
xlat
inc
xchg
jle
subb
sbb
in
mov
sub
pop
push
and
cmp
scas
insb
inc
outsl
jge
mov
dec
mov
dec
xor
xchg
mov
sub
outsb
fwait
xchg
xchg
popa
adc
mov
stos
ds
les
push
xor
bound
sti
into
sbb
sub
sub
les
pop
repnz
rclb
xchg
lock
repnz
mov
xor
push
adc
lcall
mov
clc
dec
sub
imul
loopne
call
inc
mov
or
ficoml
mov
mov
lods
out
out
sbb
movsl
dec
sub
loopne
outsb
lock
jle
into
or
mov
jmp
inc
fiaddl
fs
les
pop
mov
fldl
add
jae
aam
shll
xchg
sbb
ret
mov
stc
adc
mov
cmpsl
gs
pop
mov
nop
ss
cmpsl
mov
nop
lods
subb
sub
dec
jmp
mov
stos
and
cmp
stos
cmpsl
test
and
mov
ds
and
add
or
cmp
orb
cmp
inc
jge
jnp
add
or
cmp
mov
ret
clc
data16
mov
xor
push
mov
adc
lock
stc
mov
and
not
sub
xorb
mov
iret
inc
subl
and
fiaddl
mov
in
sub
push
ds
push
aas
mov
jo
mov
or
mov
adc
out
and
test
or
movsl
out
dec
xchg
mul
call
ret
sti
sub
lock
cmp
fcomps
xchg
pop
lahf
popa
popf
jmp
pop
xchg
dec
push
inc
dec
sbb
or
inc
add
inc
les
iret
sbbl
lret
movsl
sub
test
popa
add
aam
mov
test
adc
sub
movsb
in
push
std
sub
jb
push
lock
ds
mov
lods
scas
cld
movsl
out
inc
in
lods
cmp
shlb
aas
les
sbb
cmp
push
pop
stos
jmp
jnp
sbb
outsb
and
dec
jl
test
xlat
pop
or
mov
and
in
lock
loop
adc
xlat
ja
mov
dec
clc
adc
jl
adc
lahf
push
shlb
cmp
push
call
sbb
mov
jge
imul
jns
sarl
fwait
pop
xor
lret
dec
es
test
pop
sar
jno
mov
add
mov
incb
add
stos
and
jecxz
push
mov
mov
xor
inc
test
dec
int3
xchg
lret
pop
push
inc
or
enter
dec
jns
leave
jo
jbe
sub
adc
out
repnz
xor
outsb
lret
xor
pop
dec
rorb
xchg
lcall
cmp
push
out
filds
xchg
cvtpi2ps
lock
push
adc
lahf
cmp
ja
add
cli
cmpsl
pop
fstps
dec
adc
inc
push
clc
lods
cmp
cltd
jle
sahf
icebp
and
andb
pop
outsl
pop
sti
fs
xor
arpl
shrl
push
jg
pop
cmp
rcl
dec
dec
sub
sbbl
push
cmpsl
movsl
or
dec
int3
jmp
inc
cwtl
and
or
xor
and
mov
adc
xchg
pop
or
daa
sbb
imul
sub
mov
pop
arpl
sbb
or
movsl
cmp
ror
push
stos
das
fdivp
and
icebp
push
jb
imul
pop
dec
scas
lcall
ljmp
adc
xor
jecxz
push
push
in
fadds
jp
scas
fisttpl
jge
das
dec
pop
sahf
stc
sub
push
stc
std
mov
out
je
rcl
push
hlt
adc
inc
sub
lcall
out
push
aam
xchg
pushf
mov
mov
int
out
movsb
loop
fiaddl
mov
sub
xor
sarb
mov
mov
pop
jmp
std
sub
mov
daa
out
mov
and
adc
es
inc
xchg
add
cmpsl
xor
notl
sub
rorb
shll
push
into
cs
out
popf
sub
loope
xchg
xchg
mov
mov
add
sub
or
push
leave
mov
scas
sub
idiv
fisttpl
xchg
fwait
repz
sub
fcmovne
or
and
or
jae
cmc
jmp
push
outsl
add
les
push
rcrb
insb
adc
call
sub
and
push
loopne
arpl
xrelease
das
js
add
lds
mov
sbbb
add
aad
pop
jp
ss
mov
std
push
inc
pop
jno
std
repnz
jne
jge
loop
adc
sub
jge
or
mov
iret
sar
fwait
imul
pop
test
lret
ret
mov
pop
mov
mov
push
sti
sarb
inc
push
xchg
nop
mov
js
or
pop
mov
ljmp
mov
aas
add
out
push
call
shl
rclb
push
and
or
fsubl
sahf
sbb
fldcw
sti
std
mov
xor
pop
mov
cmp
fisttps
jbe
fcmovnbe
scas
fs
adc
fidivs
add
fisubrs
mov
adc
pop
or
jbe
aam
and
or
shl
adc
pop
and
js
pop
jb
enter
inc
xor
out
cmp
lcall
out
mov
or
inc
cmc
stos
testl
add
mov
sbb
dec
push
xchg
test
sbb
andb
icebp
pop
iret
lock
mov
stc
insl
lock
in
xor
shlb
mov
pop
cmp
adc
cmp
pop
push
inc
js
scas
push
into
add
inc
ds
sbb
lret
push
push
adc
inc
push
sahf
jecxz
mov
pop
pusha
gs
and
pushf
lret
in
call
outsb
test
aaa
movsb
dec
or
add
sbb
mov
cmp
push
mov
cmp
imul
mov
subl
sub
xchg
mov
cmpsl
push
jmp
jle
sbb
push
xor
xchg
dec
fldt
movsl
push
jbe
cmp
mov
xchg
fildll
movsb
iret
imul
sbb
xlat
fiadds
add
pop
push
mov
add
mov
or
dec
movsl
dec
das
insl
loopne
or
mov
sbb
or
and
jb
cmp
inc
mov
subb
stos
es
push
pop
jl
xchg
repnz
jl
loop
arpl
sti
dec
lea
push
popa
aad
adc
mov
nop
aad
sbb
add
aas
enter
cmc
scas
mov
popf
cmc
pop
push
mov
movb
and
pop
adc
push
mov
pop
cwtl
mov
mov
adc
call
test
pop
xchg
loopne
xchg
ss
into
and
leave
cvtdq2ps
out
in
scas
jge
mov
jb
ljmp
cmp
sub
sub
push
mov
cmp
incl
mov
pop
mov
sahf
insl
outsb
fdivl
jne
fwait
xchg
int3
jl
mov
cwtl
les
fldt
push
dec
xchg
xchg
or
outsb
jecxz
adc
scas
loopne
incl
fsts
in
pop
xor
mov
fwait
stos
dec
pop
jg
dec
jmp
popf
or
jl
pop
xchg
mull
inc
scas
push
out
pop
test
and
outsl
popa
std
lahf
lret
mov
lahf
js
ds
aaa
ljmp
sbb
mov
add
inc
sbb
mov
mov
add
arpl
pop
mov
andb
mov
and
lock
cmp
adc
jnp
jnp
mov
push
jp
and
push
pushf
outsl
movsl
adc
jmp
or
imul
xchg
push
xchg
jmp
movsl
nop
in
adc
mov
inc
push
pusha
xor
jecxz
shrl
sti
or
inc
push
je
in
in
pop
jle
std
push
outsl
xor
cmp
out
sbb
push
xchg
mov
ffreep
xor
sbb
mov
xchg
dec
cmp
iret
push
jnp
enter
mov
sub
in
sarb
xorb
hlt
js
jecxz
xchg
push
iret
aas
lcall
lahf
lea
je
nop
mov
push
pop
mov
jle
jnp
push
xor
jne
stos
icebp
leave
lods
out
dec
int
xor
scas
out
xlat
xor
sub
mov
mov
add
xor
jo
in
xor
repnz
fs
lret
fbld
pushf
bound
fdiv
popa
pop
lea
xor
add
mov
cmp
enter
popa
or
mov
loopne
sub
lret
rclb
mov
fistl
cmp
lret
mov
xlat
stos
cmp
add
leave
mov
jae
das
and
sub
sbb
pop
jg
xor
push
test
out
jle
inc
in
inc
xor
dec
hlt
dec
xchg
xchg
mov
clc
mov
je
jge
fnsave
fcmove
mov
mov
jecxz
cwtl
daa
sahf
jl
clc
inc
xor
inc
push
std
add
sbb
xor
roll
mulps
sub
test
add
or
imul
adc
aam
jecxz
xchg
insb
shlb
into
sahf
stc
hlt
leave
mov
mov
add
or
mov
dec
adc
cld
mov
mov
sti
sub
das
sti
popf
es
push
or
rcr
mov
push
push
aaa
mov
adc
sub
addb
aad
pop
xor
movsl
pop
aas
push
fs
adc
sbb
or
add
cmpsb
xchg
testb
sbb
test
inc
gs
xchg
inc
outsb
xlat
jmp
pop
mov
mov
mov
in
sbb
fmull
outsl
dec
mov
ficomps
iret
sub
or
xor
or
ljmp
adc
push
mov
mov
add
pop
add
pop
cmp
or
jl
and
jbe
mov
addr16
aam
dec
popa
mov
sub
sbb
xorb
xchg
adc
jbe
loopne
rclb
and
or
push
mov
and
add
pushl
outsb
and
popa
mov
cmp
jg
push
pop
jmp
and
sub
xor
movsl
pushf
mov
testb
imul
fidivs
gs
rcl
pop
out
mov
dec
rcll
mov
mov
aas
popf
jne
mov
and
mov
fimuls
add
jl
roll
cmc
icebp
cmp
es
inc
jge
sbb
jmp
cwtl
lock
mov
mov
push
mov
pusha
jb
bound
into
sub
ficoms
mov
lods
adc
push
cmpsl
mov
push
pop
test
lds
int3
lds
mov
jecxz
mov
mov
negb
pop
lock
mov
aaa
lock
ja
into
fsts
scas
call
invd
sbb
movsb
movsb
movsl
cli
xor
cmp
cmpl
sahf
or
jmp
lret
testl
imul
cmc
nop
mov
sbb
sbbl
imul
cwtl
and
sarl
or
test
push
xor
xchg
add
icebp
test
push
mov
sbb
fstpt
xor
mov
loop
cmp
jns
stos
pop
ss
pop
push
xor
insb
or
sbbl
addr16
ss
jae
test
in
sbb
shlb
fmul
push
mov
jae
sti
push
mov
sbb
shr
mov
mov
add
mov
xor
jno
out
adc
sub
mov
aas
int
push
or
ljmp
and
pop
push
call
inc
pusha
pop
pop
es
pop
add
and
push
mov
jne
mov
iret
in
jo
add
ljmp
push
pop
into
leave
mov
scas
push
mov
aaa
mov
mov
mov
loopne
inc
loop
scas
clc
dec
pop
cmc
in
in
popf
clc
pushf
and
pop
xor
scas
sbb
push
pusha
mov
sub
ret
and
push
scas
sub
ss
mov
jl
test
inc
movsb
jl
into
movsb
fidivrs
sub
jmp
jp
lock
inc
imul
adc
push
movsb
jne
xchg
jo
mov
cmp
mov
sub
mov
cltd
lahf
xchg
mov
lret
lret
in
mov
adc
les
mov
cmpsl
lcall
mov
adc
sub
mov
jl
icebp
pop
test
inc
stos
test
pop
fmuls
sub
cmp
andb
icebp
xor
adc
mov
lea
push
push
scas
nop
xchg
call
jp
fs
cld
xchg
dec
fdivr
push
es
rep
cmc
adc
pop
and
inc
cmp
or
lret
xchg
lcall
cwtl
mov
push
dec
rclb
dec
ja
call
jmp
pop
lret
xchg
mov
jns
xchg
push
imul
dec
mov
add
or
popa
nop
xchg
ss
insl
mov
adc
inc
stc
lahf
push
jne
out
lret
mov
lds
add
cli
addr16
scas
leave
jo
or
out
stos
movsb
mov
int
jmp
dec
adc
imul
js
and
outsl
push
out
out
jp
push
cmc
ja
inc
ja
dec
cltd
lock
mov
sar
and
xorb
jmp
outsl
or
iret
and
pop
inc
sub
jp
sub
xchg
loop
nop
push
and
dec
adc
stc
repnz
das
xchg
jge
sbb
add
mov
push
sbb
push
sbb
jl
cmp
pop
fsubrl
xlat
outsl
hlt
and
sbb
dec
xor
jle
movsl
lods
fcompl
enter
aaa
push
cltd
imull
movsb
out
jecxz
lds
add
add
jmp
mov
lea
mov
addr16
ror
inc
sub
mov
mov
ret
xor
jnp
dec
jo
in
ljmp
ds
mov
in
inc
ficompl
fdivl
xorl
mov
lcall
inc
push
push
std
mov
and
mov
mov
inc
cld
lods
test
icebp
cmp
push
push
cmpsb
gs
push
sub
cld
test
fildll
xor
out
loop
sbb
gs
pop
mov
pusha
push
add
test
mov
rcr
mov
shll
jg
add
faddl
sub
call
jp
lahf
xchg
nop
adc
cwtl
jmp
xchg
xchg
roll
fimuls
fsubrs
xchg
fcomp
int3
mov
gs
loope
jmp
je
mov
aas
jo
mov
scas
iret
loop
sahf
xchg
cmp
sbb
stos
mov
ja
pop
cmp
mov
mov
pop
cmp
and
cltd
push
push
inc
sub
or
stos
aas
push
lea
outsl
ja
rcl
cmp
pop
imul
or
fistpl
jp
fbstp
push
mov
out
scas
imul
xchg
jne
packuswb
or
mov
and
jno
mov
jne
notl
mov
mov
ja
xor
or
xor
pop
shl
ja
xor
push
pushf
mov
test
cmp
jns
xchg
dec
jecxz
or
pop
push
adc
xchg
test
rorl
fs
sub
and
pop
das
xchg
in
cs
xor
and
insb
cli
dec
faddl
sti
lahf
adc
ds
mov
inc
ret
xor
push
jecxz
jecxz
xor
mov
addr16
mov
repnz
imul
mov
jo
mov
jnp
stos
jp
mov
jge
xor
mov
loope
push
inc
cld
adc
pop
clc
shlb
jmp
cli
xor
negl
jecxz
and
push
and
dec
orl
mov
mov
mov
mov
test
clc
call
loop
scas
mov
inc
aad
movb
sub
pop
cmp
popa
jbe
or
mov
mov
xchg
and
int3
pop
inc
roll
loop
cmpsb
and
testl
cmp
mov
test
imul
inc
jg
cmpsb
pop
jg
xor
adc
and
sbb
shll
incb
je
lds
imul
push
cmp
test
adc
mov
and
aad
lret
lahf
mov
jl
out
pop
imul
fdivrl
and
sbb
popa
xlat
adc
and
out
loope
push
bound
aad
push
sbb
pusha
mov
push
jg
adc
adc
mov
daa
sahf
movsl
xchg
push
out
jno
inc
shrb
movb
push
jecxz
and
das
push
xchg
pop
aas
inc
adc
in
dec
mov
aas
sbbl
jmp
jp
out
add
mov
xor
mov
jno
xor
jno
pop
sbb
movsl
nop
daa
cmpsl
pop
mov
and
dec
test
push
imul
and
or
std
scas
imull
fcomip
jae
decl
loop
xchg
sub
out
popf
push
incl
shrl
les
jp
inc
fnsave
push
add
mov
and
addr16
xorb
ljmp
push
idiv
mov
adc
out
cmc
inc
pop
xchg
cltd
imul
mov
icebp
jle
cwtl
xchg
push
mov
mov
inc
push
loope
mov
dec
mov
mov
mov
add
xor
mov
loope
lret
pusha
loope
mov
dec
jecxz
inc
mov
mov
jp
addr16
popa
cmp
add
cwtl
or
pop
popf
lods
dec
or
jne
test
cmp
stos
imul
fdivs
xor
ret
sub
or
adc
mov
sbb
mov
rolb
cltd
mov
cli
fsubs
sub
add
pop
and
sbbb
dec
dec
xor
mov
addl
rolb
iret
push
dec
das
sbb
mov
pop
loope
adc
cs
and
pop
mov
and
lret
jno
sub
ljmp
stos
sbb
push
cmpl
adc
out
adc
cmp
push
mov
iret
enter
vmulpd
insl
add
jae
mov
cmp
ljmp
and
call
xor
fxch
inc
scas
test
jmp
push
lcall
xchg
cmp
push
adc
xor
and
jno
rcrl
jb
mov
hlt
xchg
mul
sub
xchg
adc
scas
cmpsl
mov
aaa
enter
dec
xor
dec
imul
push
clc
icebp
push
out
mov
jno
fbstp
cli
mov
outsb
in
cmp
pop
in
rol
loope
pop
push
rorb
idivb
je
pushf
aas
lcall
xor
push
icebp
jno
mov
mov
aaa
mov
mov
dec
lds
xor
or
out
inc
or
in
sbb
fcoms
flds
pop
stos
sbb
fidivs
mov
jae
dec
or
jnp
ljmp
or
mov
adc
mov
sub
xchg
arpl
push
subb
iret
and
xchg
push
and
in
test
loopne
xor
pop
in
sub
adc
sbb
inc
cmp
push
lea
fiaddl
fsubrs
sbb
push
loope
dec
adc
inc
push
dec
pop
add
mov
je
xor
fmulp
je
sbb
mov
std
ret
out
xchg
sbb
xchg
cmp
cltd
out
lret
ret
dec
rcll
mov
jp
shrl
dec
mov
sub
loope
pop
lahf
inc
xor
xor
inc
mov
jo
and
loop
sub
jp
jp
sub
nop
shrb
fxch
scas
test
scas
mov
add
pop
or
dec
pop
orb
xor
push
les
or
mov
leave
scas
xlat
xor
jae
aaa
repz
dec
repnz
test
mov
adc
out
stc
mov
jne
sub
mov
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jg
jmp
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
movl
add
or
mov
mov
xor
mov
andl
add
sbbl
xor
mov
movl
mov
andl
mov
inc
mov
cmpl
ja
jmp
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
add
and
mov
add
mov
addl
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
jmp
mov
sub
xor
mov
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
jmp
xlat
push
xchg
repz
addb
divb
fsubrs
ds
addl
fsts
mov
push
xlat
dec
loope
pushf
scas
push
push
movsb
ret
arpl
jne
xor
leave
es
xchg
xor
out
sub
test
in
out
aas
and
and
ret
cmp
flds
or
sub
shlb
aam
mov
adc
sbb
ss
test
daa
pop
add
pop
mov
xor
sub
mov
insb
inc
cld
pop
aaa
xchg
push
or
or
mov
std
movsb
mov
mov
daa
lahf
add
jne
in
dec
data16
ret
jecxz
mov
pop
in
lahf
adc
mov
js
sub
or
shll
fnsave
aam
and
or
cld
pop
aaa
clc
stos
int
push
insb
ljmp
dec
test
xchg
test
lods
inc
mov
daa
xchg
ljmp
ficoms
dec
je
mov
into
cmp
arpl
inc
and
mov
call
ret
sub
subb
xor
mov
inc
aam
std
cltd
cmp
jb
aaa
xor
jmp
ret
pushf
movsl
imul
jp
shll
mov
cwtl
push
inc
outsb
test
aas
test
mov
call
mov
add
cmp
sub
or
push
mov
pop
inc
and
sbb
xor
jnp
sub
scas
out
push
fs
jbe
rol
clc
test
ljmp
lock
adc
mov
data16
mov
add
cs
xchg
or
adc
mov
lcall
dec
andl
test
sbb
andb
or
fadd
xor
cmpsb
bound
mov
ret
or
fldcw
add
push
lock
mov
mov
xor
scas
jg
adc
sbb
aas
mov
mov
push
push
pop
ret
pop
jbe
adc
push
repnz
sbb
add
jnp
call
cmp
adcb
arpl
fcompl
sbb
scas
jmp
cmpsl
xor
insb
cmpsb
sbb
and
cld
out
jno
or
adc
jle
pop
dec
sub
mov
or
data16
sahf
outsb
std
aaa
insb
add
mov
repnz
repnz
les
mov
mov
in
sbb
testl
push
iret
xlat
pop
dec
push
or
add
mull
mov
cltd
xchg
outsl
pop
mov
mov
lock
pop
sbb
dec
xchg
clc
sahf
cmc
cmp
roll
push
lds
jns
jecxz
mov
xor
add
movsl
mov
pop
repz
fistps
mov
dec
out
jb
inc
fists
xchg
out
cmp
rcrl
movd
adc
cmp
iret
adc
popa
jns
rorb
and
xor
push
sub
leave
jno
std
sbb
inc
jbe
arpl
test
inc
sub
ret
cmp
faddl
imul
fadds
push
int3
pusha
jb
shlb
das
cmp
mov
mov
adc
mov
sub
jno
clc
getsec
inc
lds
repz
jmp
imul
mov
nop
xor
inc
loopne
push
mov
pop
cmp
jnp
bound
push
pop
enter
shrb
pushf
jge
ds
adc
xor
pushf
lret
pushf
mov
xchg
cmp
nop
dec
mov
test
into
lods
adcl
jmp
icebp
xor
add
ja
mov
xor
in
loope
sti
mov
and
lret
pop
cmp
xchg
test
outsb
rcll
daa
lret
sahf
xlat
mull
data16
cli
sbb
das
push
cmp
loopne
sbb
stos
inc
inc
xchg
mov
mov
pop
cs
cld
fmuls
push
mov
mov
push
and
stc
pop
das
cld
andl
add
bound
xchg
lea
pop
test
in
jle
sub
cld
inc
pop
mov
dec
out
lahf
repnz
mov
adc
cmpsb
mov
mov
shrb
test
mov
sbb
loop
pop
mov
ja
xchg
cmp
pop
es
out
xor
pop
adc
rclb
jecxz
push
data16
rcrb
loop
add
sbbb
jecxz
scas
push
pushf
xchg
ds
jl
into
aad
int3
inc
je
repnz
cwtl
lcall
cmp
pop
mov
repnz
inc
arpl
add
jg
add
push
cmpsl
pop
inc
les
sti
jb
or
hlt
outsl
dec
iret
dec
enter
mov
inc
pop
stos
cmp
aas
dec
fwait
mov
std
xor
push
mov
outsl
lods
mov
pop
xor
stos
sbb
dec
cltd
push
mov
rorb
or
inc
xchg
cmp
mov
sti
into
or
stos
mov
arpl
dec
sbb
pop
xor
pop
negb
pusha
sbb
jge
popa
das
pop
dec
push
pop
mov
icebp
xor
addr16
inc
mov
fcomp
dec
dec
sbb
or
jmp
lds
fs
xchg
jp
stos
or
or
mov
push
popf
lds
dec
adc
mov
mov
stos
repnz
in
add
bound
and
sbbl
in
adcb
cld
cs
aad
and
ret
mov
and
sub
std
popa
mov
cmp
ja
inc
ficomps
hlt
jo
std
ret
ror
lahf
jmp
movsl
mov
mov
push
aaa
into
or
ja
test
aam
ljmp
mov
mov
mov
pop
dec
fnstcw
mov
jne
enter
and
push
je
add
adc
out
jae
pusha
cmp
push
shlb
sub
sbbl
lret
lahf
leave
sub
cli
adc
stos
stos
mov
rolb
adc
ficoms
push
adc
hlt
inc
jno
push
out
ds
stc
je
sub
out
dec
das
rorl
sti
daa
cmp
and
les
not
adc
cmpsl
mov
xor
imulb
jmp
orl
add
fisubl
loope
fsubl
addl
sbb
xchg
je
lock
adc
xchg
les
jp
out
test
xchg
or
jmp
cmp
mov
lock
pop
jmp
scas
mov
dec
data16
lret
sbb
mov
jns
data16
mov
jle
dec
bound
outsb
idivl
lea
mov
test
adc
in
cld
or
idivl
jl
lret
cmp
pop
cmpsb
push
aam
fildll
ss
lock
mov
rcll
and
sbb
push
jecxz
push
xlat
clc
out
pop
cmp
jp
push
mov
sub
cmp
fldenv
jecxz
ds
or
jle
and
ret
and
cmp
pushf
pusha
dec
movb
pop
outsl
inc
push
loop
cmp
and
loop
pop
xchg
popa
mov
push
xchg
sbb
mov
and
fstl
pushl
leave
aad
call
xchg
dec
jns
test
das
scas
lahf
and
cmp
ror
cmp
aaa
jecxz
popa
ret
push
imul
in
xor
pop
inc
mov
pop
xlat
or
dec
mov
icebp
test
addl
dec
push
mov
mov
inc
adc
xlat
dec
outsl
frstor
lcall
mov
xor
push
cmp
lcall
jp
shll
jns
or
push
cmp
loop
outsl
gs
sti
rcr
stc
shll
ret
std
in
shrb
icebp
fldenv
sbb
push
adc
push
lea
jle
gs
stc
loop
mov
cli
jbe
inc
aas
jge
lods
call
cmp
push
mov
adc
adc
adc
repnz
xor
mov
xor
xor
or
pop
jg
xchg
lock
push
add
mov
lcall
mov
push
pop
or
repnz
vmovapd
cmp
stos
cmp
push
es
adcl
int3
outsb
das
adc
out
int3
pop
xor
push
mov
mov
cmpsb
movsb
mov
test
inc
daa
add
std
lcall
sub
mov
add
mov
cmp
dec
cltd
jne
idiv
mov
xchg
inc
ss
iret
shr
xchg
mov
out
popf
enter
jl
push
mov
enter
dec
and
xor
ds
push
movsl
xor
aaa
fsubs
mov
cmp
xor
cli
and
test
xor
enter
jns
nop
std
roll
jle
in
loope
jb
mov
mov
sahf
adc
addr16
mov
sub
jl
es
shlb
or
scas
jbe
and
in
lods
inc
lea
out
dec
push
mov
sub
shlb
in
les
adc
sbb
sbbl
fs
mov
fs
cs
fsubs
es
repnz
call
mov
sub
xor
ret
faddl
xchg
movsb
cmp
test
in
push
sbb
pop
and
lea
pop
ret
xor
into
pusha
loopne
mov
mov
scas
jae
leave
inc
sarb
into
xchg
adc
hlt
xlat
add
or
mov
aaa
decb
pusha
fidivrl
std
jge
rcll
push
lret
ficoms
filds
push
or
sub
call
fcmovnu
xor
mov
ret
enter
mov
test
push
or
int3
popf
add
subb
adc
pop
in
insl
aad
out
scas
xorb
mov
mov
push
mov
test
aas
in
int
inc
mov
jns
orb
pop
mov
pop
xor
xor
fsubs
dec
xchg
pop
cwtl
jmp
subb
mov
lahf
jo
cmpsl
mov
pop
mov
lock
cmp
mov
mov
dec
pop
jo
lcall
mov
push
popa
cmp
sbbb
mov
ss
push
inc
pop
loopne
sub
add
out
and
xchg
lret
add
ret
lcall
rorb
jne
cmpsl
mov
and
or
in
jb
int
lcall
lahf
inc
imul
aad
insl
mov
pop
xorl
jno
mov
mov
push
jecxz
arpl
push
cmp
test
mov
xchg
repz
jp
in
mov
mov
cwtl
jle
lods
and
xor
inc
outsb
inc
mov
pop
mov
xchg
arpl
out
icebp
cmp
mov
push
push
sub
xchg
icebp
cmp
icebp
rcr
xchg
mov
pop
paddusw
imul
cmpsb
cmp
push
les
cmc
dec
push
in
mov
jl
imulb
inc
or
sub
xchg
test
sub
mov
jmp
mulb
gs
test
mov
ret
dec
push
fstpl
or
mov
sub
mov
pop
xorb
fbld
movsl
jge
inc
movsl
pop
jno
cmp
jo
xchg
imul
add
sarb
jo
lods
fisubl
push
push
cmp
sbb
dec
jg
inc
fnstsw
push
fwait
mov
mov
hlt
jae
pop
test
out
sub
xchg
imul
pop
push
cmp
mov
push
sub
pop
cmpl
fs
jns
inc
xor
mov
sbb
iret
lock
add
imul
sahf
jmp
push
int
jns
sbb
pop
es
mov
roll
enter
adc
das
jae
cmp
scas
push
lret
cmp
jge
testl
xor
mov
in
or
mov
rorl
adc
out
inc
xchg
test
scas
mov
repz
jae
xchg
dec
xchg
push
shl
ja
xchg
dec
jns
inc
movsb
inc
sbb
repnz
dec
iret
fiaddl
cmp
sbb
push
call
into
lods
js
fwait
cmp
hlt
mov
out
mov
add
mov
mov
enter
fistpll
mov
sarl
or
cmpsl
imul
mov
ss
sbb
push
sub
and
movsb
mov
outsb
shrb
rcl
mov
lahf
psubusb
popa
cltd
push
popa
outsb
mov
add
outsl
sub
jmp
mov
mov
out
scas
xor
cmpl
jo
xchg
call
loop
pop
push
daa
jp
outsb
in
testl
jbe
and
lret
rcrb
jmp
xchg
push
mov
adc
aas
lock
jb
mov
jle
or
flds
in
adc
jb
imul
mov
push
inc
fsubrs
jns
in
mov
aas
or
pop
fcmovb
add
push
jne
sbb
or
lcall
ss
outsb
ljmp
test
push
xchg
mov
jl
xchg
in
leave
xor
jmp
insl
push
push
pop
jno
iret
jge
cmp
dec
fwait
addr16
jecxz
push
lods
jmp
mov
jne
cmp
cmp
sub
push
jb
in
lret
push
mull
jle
jns
xchg
xchg
ss
leave
dec
jmp
add
movsb
sbb
test
mov
jmp
addr16
sahf
fiaddl
icebp
pop
out
pop
bound
add
add
jno
or
xchg
arpl
pop
or
mov
testb
je
jge
adc
jge
pop
cmp
sahf
cmc
cmp
adc
and
pop
inc
add
xchg
movsb
icebp
mov
adc
ret
js
jecxz
push
mov
or
cmp
jnp
je
iret
dec
and
sbb
lret
xor
test
mov
adcl
xlat
mov
movsl
cmp
mov
add
rolb
mov
add
out
sub
leave
pusha
stc
test
iret
cmpsl
mov
ret
aad
call
js
iret
mov
lahf
push
or
dec
push
inc
mov
test
popa
arpl
ljmp
fwait
loopne
sbb
xor
inc
jo
add
sbb
adcl
xchg
shll
aad
jecxz
sbb
fisubrl
test
je
dec
adc
dec
loope
or
push
and
add
daa
je
xor
mov
xchg
imul
mov
cmp
xor
or
sbb
pop
xor
mov
inc
mov
lods
jae
js,pt
ja
adc
je
jns
push
in
in
cmpsb
add
inc
xchg
out
lods
or
sbb
jb
and
popf
ljmp
lahf
adc
inc
popa
sbb
push
popf
lock
leave
icebp
mov
int3
jmp
sub
out
shll
sub
repnz
rolb
push
mov
ds
pop
pop
adc
pop
mov
loope
inc
ja
adc
ret
xor
xchg
gs
jge
xchg
test
repz
pop
mov
mov
imul
adc
pop
xlat
std
scas
pop
scas
adc
in
sarl
aam
ret
sub
sbb
mov
xchg
dec
mov
fdivrs
out
orb
popa
inc
loop
loope
sub
leave
xchg
push
lea
sub
mov
mov
jg
adc
test
popa
jl
fldcw
aam
add
iret
lock
or
les
pop
sti
icebp
mov
rcll
lret
lea
xor
lock
movsb
ror
jb
dec
call
aas
je
fiaddl
sub
lods
cmp
pop
xchg
mov
or
mov
pop
incb
sbb
or
pop
or
aas
xchg
aaa
or
cmpsb
inc
mov
xchg
xchg
add
out
mov
cmc
inc
push
imul
stc
xchg
test
and
test
lock
inc
ficomps
jp
push
sbb
test
push
push
out
daa
jecxz
stc
jnp
flds
mov
xor
cmp
scas
xchg
test
jno
inc
aas
loope
insb
jns
cmp
xchg
jbe
push
jb
cld
stc
loop
clc
mov
fsubrs
cmp
int
stos
inc
push
cmp
dec
adc
call
sub
and
xchg
fcmovbe
das
aas
fistpll
in
sti
cmp
sbb
cli
int3
imul
ljmp
ja
push
fimull
cmp
lea
fmuls
mov
fisubs
rcll
movsb
ret
bound
push
add
psadbw
setl
pushf
inc
lds
icebp
jae
add
mov
scas
sarb
int
xor
bound
mov
enter
test
jge
mov
xchg
out
mov
push
into
fs
mov
and
loope
and
xchg
fidivl
popl
sub
adc
push
out
mov
push
pop
adc
cmp
and
stos
mov
adc
lods
mov
ja
insb
sub
pop
les
out
mov
sbb
push
xchg
sbbb
lret
addl
cmpsl
lock
jg
cmp
daa
ljmp
jmp
add
inc
sbb
mov
popa
pop
mov
sub
mov
xor
fisubrl
outsb
cmp
inc
push
xorb
rolb
test
rolb
lahf
adc
sbb
add
cwtl
rcrl
jbe
std
pop
in
dec
jecxz
call
add
not
add
adc
shrb
jle
enter
dec
cld
xchg
pop
loopne
dec
aaa
jne
dec
pop
lcall
scas
pop
lcall
aas
cld
sub
jno
mov
jo
filds
mov
and
pushf
xor
pop
ja
je
ja
sbb
xchg
clc
aad
and
pop
lret
fistps
xchg
stos
mull
push
lock
jnp
jg
jno
or
xchg
jae
ret
xchg
filds
imul
cmp
push
cld
dec
pop
push
sahf
js
xor
loop
sarl
les
out
add
cli
not
jbe
sbb
and
adc
filds
in
sarl
xor
push
and
pop
in
and
and
fldenv
popa
gs
add
cmpsb
int
jle
inc
jle
aaa
push
insb
roll
dec
xchg
or
xchg
fcompl
dec
dec
push
sub
pop
xor
push
nop
lret
xor
mov
mov
std
xlat
bound
adc
inc
pushf
cmp
cmp
insl
enter
jnp
mov
jle
call
sar
mov
popa
jle
std
into
and
test
cmp
jle
dec
lret
jb
mov
xchg
sub
xor
movsb
shrb
or
popf
add
jns
outsl
push
jbe
movsl
pop
xor
mov
mov
test
lea
stc
mov
jecxz
shr
pop
or
std
cmp
or
cmp
jo
or
or
and
add
mov
insb
addr16
or
ljmp
push
sub
jb
loope
add
adc
les
xchg
sbb
inc
cmpsl
clc
adc
cmpsl
daa
sub
outsb
adc
imul
gs
sar
mov
push
or
not
stos
and
mov
mov
mov
xor
adc
and
ret
jp
outsl
rolb
test
cltd
outsb
fwait
repnz
jp
shlb
adc
outsl
jns
out
stos
test
pop
cmc
xor
lahf
cmpsl
mov
loope
incl
cltd
mov
adc
test
sub
or
xchg
mov
mov
cmp
js
xor
or
dec
push
lods
andb
mov
mov
jmp
xchg
xor
xorl
inc
fmuls
aad
ret
pop
jl
push
movsl
sahf
aad
mov
bound
movsb
mov
cmp
int3
cld
leave
and
ja
nop
xchg
out
daa
ja
fnsave
or
adc
addr16
ret
xchg
inc
pop
imul
inc
imul
xchg
sbb
das
inc
sbb
shll
inc
jg
roll
push
ret
dec
fildl
pusha
inc
icebp
or
push
addr16
mov
sahf
jl
push
jnp
jmp
jne,pn
mov
mov
lods
mov
xchg
mov
nop
push
popw
jns
mov
push
imul
insl
xor
stos
arpl
cmp
scas
movsl
mov
lea
sub
sbb
out
stc
leave
mov
mov
scas
sar
xchg
lods
fbld
jb
add
dec
scas
mov
lods
aad
popa
cli
sbb
iret
push
xor
xchg
rclb
gs
add
outsb
or
fcoml
or
sbb
xchg
fwait
jp
mov
rcrb
sub
popa
dec
inc
mov
lret
in
push
and
rcr
rcrb
testl
dec
or
int
mov
sarl
pop
or
dec
outsb
in
test
adc
call
mov
mov
jg
jo
out
cmc
jae
lods
addl
or
jbe
cmp
xchg
loope
and
cmpsb
push
lea
scas
dec
fwait
subl
lods
mov
lret
or
int3
adc
cmpsl
out
jge
sbb
leave
gs
pop
adc
int3
sub
cmc
push
or
ljmp
leave
lock
ret
push
cmp
cs
pushf
ds
xchg
push
into
ficompl
cwtl
push
push
push
cmc
out
push
xor
rorb
sub
scas
in
pushf
dec
pop
aas
mov
mov
cmp
push
inc
mov
dec
cmp
in
pop
outsl
cmpsl
addl
sbb
rorl
outsb
mov
xor
movsl
mov
or
and
pop
mov
gs
cmp
cmpsb
fisttpll
ret
push
sub
xor
and
cmp
push
mov
inc
sbb
fs
jge
xchg
sub
lock
ja
lret
cmpsl
nop
push
jecxz
mov
lods
mov
dec
mov
ja
xor
stos
leave
imul
sub
mov
icebp
gs
rol
mov
hlt
cmp
pop
addb
mov
ja
inc
fstpt
lea
pop
into
dec
dec
outsl
loope
fstpl
mov
cmp
repz
mov
mov
inc
leave
enter
lret
aad
test
or
arpl
dec
ret
dec
fistpl
mov
pop
sbb
sbb
jmp
sbb
lahf
dec
push
dec
xchg
or
or
xor
cli
inc
xchg
or
push
insb
test
cmp
shll
cmc
pusha
xor
push
dec
sarl
cmp
push
xchg
cltd
mov
dec
not
call
xor
es
mov
out
inc
inc
dec
lods
push
jle
adc
or
mov
cld
in
lods
lret
mov
rol
xor
push
sub
insl
jge
cmp
stos
mov
outsl
xor
ja
ja
add
shl
mov
lret
pop
ds
pushf
xor
mov
add
arpl
mov
cmp
test
dec
jecxz
loop
stc
in
or
mov
jb
or
push
jle
aam
popf
dec
in
enter
and
dec
inc
mov
mov
rorl
xchg
mov
push
out
sub
xor
mov
sbb
sahf
push
pop
es
sub
jl
nop
addps
and
cmpsl
out
mov
roll
push
lods
aam
rcrl
cmp
or
test
movsb
sub
lods
adc
push
sbb
arpl
dec
xor
and
xor
loopne
mov
adc
xchg
mov
push
cmp
out
lahf
pushf
arpl
movb
mov
in
push
xchg
sbb
push
shrb
mov
call
imul
xchg
sub
aad
loopne
ret
mov
inc
in
jne
mov
dec
iret
int3
repz
shrb
push
sub
dec
out
clc
xchg
repnz
adc
inc
jae
jbe
push
sub
pop
imul
scas
or
scas
and
repnz
push
xchg
jge
std
and
test
repnz
mov
xchg
cmp
pop
mov
sbb
fcmove
inc
adc
scas
in
push
push
or
xorl
movsb
add
and
and
dec
movsb
iret
jecxz
bound
push
inc
ljmp
mov
rcrl
jge
xchg
int
test
pop
xchg
jmp
lret
lock
sub
dec
inc
nop
mov
ficomps
popf
iret
cmp
or
dec
jnp
mov
jbe
cmp
push
push
or
stos
push
movsb
scas
mov
jae
out
fsubp
sahf
arpl
or
and
aas
out
cmpsb
fistpl
push
pop
pop
jp
jmp
sbb
das
xchg
test
push
inc
dec
mov
ret
js
jb
aam
and
test
pop
cmpsb
jl
sub
jle
mov
ljmp
xchg
jbe
pop
hlt
jg
insl
mov
xor
fadds
push
fwait
in
movsl
out
jne
inc
inc
outsb
pop
adc
cmpsl
or
bnd
mov
std
pop
sbb
jle
xchg
fcmovnbe
xchg
das
int3
out
pop
cmpl
sub
sbb
mov
mov
xchg
pop
sbb
in
pop
dec
pop
or
ret
js
lods
jnp
dec
icebp
xlat
dec
mov
mov
mov
inc
adc
gs
sarl
add
cli
test
shrl
lock
inc
icebp
cmc
push
xchg
push
test
sub
ret
sbb
std
xchg
or
push
bound
hlt
or
lret
sets
icebp
sbb
das
xor
jecxz
int
es
test
out
dec
sub
pop
push
leave
pop
push
jecxz
popf
jmp
mov
mov
ss
call
xchg
inc
push
in
mov
insb
xchg
push
adc
sub
sbb
insl
nop
xchg
test
mov
dec
cmp
push
push
xchg
or
sbb
mov
test
add
add
push
imul
mov
cwtl
repnz
add
cmpsl
rcr
push
cwtl
pop
pop
dec
clc
mov
push
cltd
adc
test
push
int3
push
dec
jno
fcoml
inc
jae
lds
jns
push
int3
stc
jbe
jl
xchg
cmc
add
push
icebp
lret
repz
in
cmovle
mov
sbb
pop
jb
mov
cli
je
or
call
je
or
jb
js
mov
inc
inc
out
addr16
inc
lcall
in
and
imul
or
jge
loopne
pop
hlt
stos
jmp
fcoml
or
jno
inc
movsl
fbstp
pushf
xchg
mov
insl
gs
push
mov
dec
add
clc
push
jle
xor
mov
cmp
pop
xor
call
mov
clc
scas
cli
jecxz
fwait
lcall
repnz
pop
cmp
rclb
ljmp
or
test
adc
cmp
xorb
aad
fisubl
sub
mov
stos
sub
pop
xor
mov
aam
add
adcl
stos
les
cli
inc
leave
xor
add
icebp
out
bound
sbb
sub
shrw
cmpsl
aas
cmc
div
push
push
ds
jbe
in
icebp
xor
dec
dec
fidivrl
mov
sbb
and
pop
out
xor
ss
and
pushf
xchg
aas
add
mov
into
aaa
arpl
arpl
cmp
xor
js
popa
scas
mov
fsubs
cmpsl
cmpl
ret
lahf
sub
sub
stc
mov
pop
mov
jp
lcall
mov
mov
ret
mov
adc
ss
and
lea
add
es
test
push
je
jmp
cld
scas
fucomp
cld
das
sahf
xchg
push
lahf
imul
jo
stc
in
and
nop
lcall
jp
fisubl
addr16
cmp
es
mov
lret
or
push
sahf
pop
pop
push
jle
sub
cmpsl
ss
fisubrs
fstps
lods
mov
pop
sub
jns
or
add
and
pusha
adc
jbe
cli
lock
mov
lea
rcll
sub
cmp
xlat
leave
fwait
push
lcall
jg
sub
mov
mov
lcall
js
shll
ja
push
js
jl
rolb
fisubl
call
ret
sub
adc
fdivs
push
cmp
lods
mov
xor
ds
jecxz
ret
and
xor
arpl
inc
daa
test
or
lea
gs
cltd
out
sbb
lret
nop
add
std
sbb
sbb
repnz
leave
lods
lahf
je
push
inc
inc
leave
add
xor
push
adcl
xchg
add
dec
push
sub
mov
inc
xchg
jae
cld
testb
jmp
jge
dec
mov
ja
jge
sbb
jle
pop
dec
cmpsl
addb
repz
int3
sbb
xchg
sbb
cmp
xlat
lret
pop
mov
cmp
aam
js
mov
repz
call
in
xchg
aad
jmp
cmp
insl
nop
inc
repz
pop
xor
fnstsw
sub
mov
cmp
or
nop
iret
repz
sbb
lock
rorb
add
inc
add
frndint
pmullw
pushf
fisttps
movsl
sbb
scas
or
mov
iret
pushf
cltd
lcall
scas
test
orl
push
and
and
and
lea
inc
dec
xor
and
inc
ss
outsb
and
lock
outsl
repz
fcoms
push
shlb
mov
jns
mov
daa
adc
xchg
daa
or
or
fcomip
xchg
lock
dec
mov
popa
cmc
frstor
ror
push
cmp
daa
jecxz
jae
inc
testl
ss
mov
lock
adc
push
inc
adc
dec
and
or
ljmp
in
loopne
and
jb
mov
cmp
and
xor
xchg
jmp
je
ds
sub
rclb
adc
stos
cmc
movsl
push
jbe
lds
pop
test
or
jae
dec
sub
cmc
in
jl
aam
or
dec
frstor
cmp
mov
pop
adc
or
add
jne
mov
mov
mov
cmp
je
mov
mov
mov
mov
xor
cmp
jne
mov
mov
xor
movsbl
mov
xor
add
cmp
mov
mov
mov
je
xor
add
mov
je
mov
jmp
jo
cmc
dec
orb
sub
mov
pop
addl
adc
mov
fstpl
jae
add
xchg
idivl
cmp
pop
mov
shlb
test
iret
arpl
idivl
sub
cmpsb
xchg
sarl
hlt
cwtl
in
out
out
repz
mov
push
lcall
add
loopne
std
mov
sahf
sbbl
push
and
cmp
xchg
testl
lcall
sar
stc
in
mov
mov
mov
test
push
gs
xchg
jno
movsb
jl
xor
out
fisubrs
pop
jle
mov
pop
xor
jo
sbb
or
inc
ss
in
cmp
cmp
pop
mov
mov
inc
ret
mov
sbb
and
mov
sbb
sbb
jg
jae
ret
mov
xor
arpl
add
repnz
fwait
dec
inc
xchg
push
inc
hlt
push
jge
imul
push
sbb
aam
sub
notl
gs
rcrb
xor
add
aad
mov
sub
mov
lea
in
sbb
push
jno
xor
sub
pop
data16
sbb
aaa
mov
xchg
leave
loop
ftst
decb
daa
jg
shr
xchg
imul
mov
ja
fs
sub
sub
sub
cmpsb
add
leave
mov
adc
adc
sub
nop
test
in
push
in
dec
mov
cmp
mov
push
mov
lahf
cmp
cmpsl
or
mov
mov
in
adc
xor
sar
adc
jno
push
cmpsb
xchg
outsl
sub
mov
es
pop
inc
stos
hlt
adc
xchg
jae
sub
ja
pop
mov
xchg
sti
inc
dec
xor
daa
cltd
adc
es
lcall
push
test
push
fucom
call
mov
in
sbb
push
lahf
jmp
ret
mov
push
push
in
xor
xor
icebp
insl
shlb
push
push
bnd
addr16
shl
ret
or
subb
icebp
lret
movsl
out
mov
pop
shlb
inc
test
mov
mov
and
xor
loope
ret
jl
cltd
dec
ljmp
push
fwait
dec
add
je
insl
lods
imul
imul
cmp
std
stos
pop
mov
fidivl
push
sub
sbb
aaa
ds
xor
jle
outsl
push
and
in
pop
int3
stos
xchg
mov
mov
out
pop
add
cltd
adcl
jnp
pop
xorl
add
jl
int
pop
mov
popa
mov
movsl
push
out
arpl
sbb
shrb
xor
cmpsb
mov
dec
in
pop
repnz
pop
pop
mov
jbe
sbb
jl
push
xchg
xchg
push
sbb
xchg
xchg
adc
mov
xchg
jl
lods
fldenv
mov
sbb
lods
gs
pusha
xchg
jecxz
popf
dec
scas
xor
call
push
daa
add
cmp
push
into
sbb
loop
test
lea
andl
add
xor
mov
mov
sub
cmp
pop
pop
bound
jnp
push
pushl
cmp
dec
jno
pop
outsb
add
js
and
sbb
push
sbb
xchg
jno
test
out
rol
adc
sahf
imul
xchg
test
ds
dec
pop
jns
or
xchg
outsb
xlat
jae
mov
std
fnstsw
ret
cmc
add
push
push
stc
xchg
xchg
add
dec
cmp
leave
pop
cmc
mov
pusha
push
dec
cmp
test
sbb
adc
stos
mov
rcl
and
mov
cwtl
and
mov
sbb
jo
cwtl
pop
mov
sti
lods
ja
pop
push
nop
xchg
repz
jg
cld
adc
jmp
xor
add
nop
fnstcw
shl
mov
add
lds
lods
xchg
mov
mov
in
mov
fcompl
xchg
xchg
cmp
ja
movl
adc
lret
in
adc
pop
jmp
je
adc
rcrl
pop
jbe
jno
mov
jg
or
mov
fwait
enter
push
mov
pushf
push
dec
clc
add
push
jge
push
adc
sti
out
pop
dec
mov
cmpsb
lret
arpl
and
test
and
adc
and
inc
jl
pop
popf
adc
lret
mov
loopne
idivb
xor
aad
or
int
sbb
fdivl
imul
mov
shl
sbb
js
cmp
adc
push
and
xchg
and
sti
adc
xor
adcl
pop
out
mov
je
stc
icebp
es
push
dec
xlat
icebp
and
test
test
jl
js
or
inc
xchg
loope
repz
in
scas
movsl
jg
push
mov
pop
aaa
mov
mov
xchg
dec
sub
test
jg
xor
fisttps
pop
mov
xchg
jb
out
jg
xchg
mov
shll
pushf
xchg
dec
xchg
pop
add
or
jb
sbb
test
sbb
jle
enter
call
inc
insl
sar
push
add
push
cmpsl
or
lock
push
inc
rcl
cmp
sub
jae
mov
sbb
sub
dec
js
and
adcb
jns
in
cmpsl
pop
out
lds
inc
in
dec
inc
in
popf
insl
outsl
or
add
mov
les
adc
std
outsl
lods
adc
ljmp
xchg
aaa
mov
enter
mov
jno
xor
cmpb
xlat
or
adc
mov
idivl
jbe
jno
mov
out
mov
xchg
das
in
or
je
or
std
or
or
int
and
mul
lds
lcall
aam
pop
das
xlat
or
cs
jmp
fsubr
add
test
jmp
cmp
mov
gs
fisttpl
loope
cmpb
pop
push
das
mov
into
rcrb
mov
and
jl
and
jbe
adc
iret
jp
enter
frstor
jle
ret
ftst
inc
scas
insl
nop
adc
mov
insb
jle
mov
or
add
xchg
cmp
or
or
imul
pop
les
insl
idiv
jns
mov
xchg
roll
stos
insl
rcll
lods
pop
dec
lods
in
lea
mov
mov
mov
outsb
cs
not
ja
repz
sarb
jecxz
clc
cmp
sti
push
jb
cmpsb
sub
xlat
gs
jp
and
or
int3
jl
jecxz
xchg
cltd
cli
push
das
jp
fsts
mov
push
jl
add
leave
test
sahf
daa
test
rcrb
pop
repnz
cmp
inc
xlat
xchg
push
movsb
inc
pushf
add
add
stos
mov
inc
jb
sub
mov
jno
and
or
pop
mov
or
insl
jp
pushf
cmpsb
enter
scas
lahf
lret
lahf
cs
mov
xchg
insl
cmpsl
sbb
adc
adc
js
jo
mov
ss
pop
and
pop
or
mov
mov
cmp
jl
ret
sub
lods
xor
test
push
out
std
ret
aam
aaa
out
xchg
gs
pop
sbb
sub
sbb
jl
mov
sub
push
mov
das
push
xchg
inc
insb
sbb
push
aas
pop
lahf
mov
mov
cmp
test
mov
jno
sbb
jecxz
dec
push
dec
out
mov
or
fstpt
dec
loope
sbb
push
dec
add
cld
mov
adc
mov
insb
mov
inc
in
popa
jnp
xor
sbb
mov
push
xor
ret
fdivs
rorl
cld
push
cwtl
lahf
das
jnp
addl
add
aam
loop
into
and
mov
inc
pop
mov
jmp
mov
or
insb
xlat
lret
fdivs
push
mov
sbb
adc
sbb
repz
pusha
dec
mov
add
data16
cmp
push
fmull
mov
pop
inc
test
jmp
mov
popf
or
push
sub
or
cs
shrl
es
mov
cmc
sahf
pushf
jns
jle
decb
mov
out
leave
adcl
jb
and
iret
jae
lret
add
lret
mov
addps
lea
jnp
shll
insb
mov
dec
mov
enter
adc
scas
mov
orl
mov
nop
pop
dec
addr16
fmull
loop
adc
ja
and
scas
cmp
xchg
cmpsb
xor
gs
push
mov
mov
push
cwtl
mov
fdivs
stos
or
xchg
stos
arpl
test
std
outsb
sub
loopne
mov
lea
jbe
aam
inc
das
mov
pusha
xor
call
hlt
xor
stc
cld
vmovmskpd
cmp
loop
popf
mov
adc
aaa
lret
adc
addr16
ss
xchg
fnstcw
push
dec
jp
sbb
add
iret
test
orb
jp
les
dec
popa
cmp
xchg
dec
push
or
repnz
cmp
ret
mov
add
add
jb
xchg
pop
je
cmc
dec
daa
ret
js
mov
inc
cmp
call
sbb
cmp
adc
or
ds
stc
outsl
sub
test
aaa
and
popa
push
setge
push
adc
mov
imul
jnp
mov
mov
dec
xor
repz
scas
inc
adc
aad
mov
cwtl
add
ss
outsl
clc
std
lds
push
sti
add
test
insb
sub
sub
int3
mov
adc
pop
int3
jl
in
adc
fisubrs
mov
insl
push
loop
jl
les
xchg
orl
ffree
xchg
outsl
addr16
aaa
push
orb
jp
leave
daa
fstps
leavew
push
into
xor
inc
jecxz
or
sti
in
jmp
dec
cmp
movsl
pop
test
dec
mov
xor
mov
pop
jmp
shl
cmp
inc
pop
xchg
ret
mov
xor
mov
pop
orb
faddl
fldt
sbb
xor
outsb
movsl
xchg
lret
repnz
add
jbe
inc
cmc
dec
addr16
test
sub
jmp
lea
jne
sub
in
lods
jg
sti
jns
movsb
xchg
aam
cld
fcmovbe
fsubr
out
push
inc
aad
pop
cli
sub
rorl
xchg
fisttpl
jae
je
or
adc
jmp
sub
aam
inc
xchg
mov
cwtl
test
leave
sub
ret
filds
ret
es
jl
mov
into
outsl
mov
test
test
fstpt
inc
cs
xchg
add
imul
mov
fnstcw
dec
and
call
aas
daa
call
subb
shl
js
push
insb
arpl
in
add
popl
mov
or
out
add
cmc
and
dec
mov
fsubrs
mov
icebp
lret
cmpsb
jmp
cmp
cmpsl
jae
pusha
dec
mov
int
fdivs
xchg
add
ds
pop
or
addb
xor
call
into
mov
loopne
sbb
cmpsl
mov
push
and
ret
dec
jmp
aad
movsb
fs
mov
push
and
into
cltd
or
inc
jne
aas
mov
sbb
push
xor
xchg
cs
inc
movsl
jne
xor
stos
int3
cmp
mov
subb
jle
mov
pop
add
in
popf
mov
dec
mov
xchg
add
cltd
sbb
xor
dec
leave
jnp
and
pop
out
mov
xchg
cmp
push
add
lods
and
sub
sbb
fistpl
mov
addr16
movsb
sbb
lods
push
insb
iret
mov
in
stos
loope
test
jecxz
stos
vmovss
ss
aaa
in
xlat
mull
fisubs
fsubr
inc
sub
mulb
push
jnp
stos
sbb
cmp
loop
cmp
dec
jl
leave
div
into
cmpsb
and
inc
hlt
jge
mov
mov
cmp
pop
icebp
lods
aaa
and
lock
imul
dec
mov
aas
sub
rorb
dec
cld
mov
cmpsl
imul
inc
sbb
movsl
jnp
fcmovu
sbb
ret
imul
movl
or
xorl
into
bnd
jns
inc
and
in
adc
sub
mov
fwait
xlat
out
in
scas
repz
mov
fucom
pop
div
jo
jp
adc
pop
jle
add
xchg
rorb
xchg
mov
ret
test
push
fwait
repz
mov
into
out
cwtl
jbe
icebp
sti
or
mov
pop
movsl
fnsave
mov
mov
enter
dec
mov
popa
jb
or
push
xchg
xchg
lods
lcall
cmovbe
xchg
push
sbbl
popaw
outsb
sub
mov
stos
data16
scas
sub
mov
cmp
cmc
cli
sarl
cmp
pop
cmp
mov
lds
mov
mov
jl
daa
mov
mov
xchg
repz
and
mov
jg
sub
pop
mov
je
adc
hlt
mov
xor
lods
adc
aad
dec
sarb
dec
pop
loop
out
mov
ret
pop
mull
scas
push
test
jae
push
inc
xchg
fldcw
fdivs
loope
fidivrl
jae
inc
lea
or
andb
and
cli
inc
pop
xchg
inc
fisubrs
bound
add
and
xchg
mov
pop
xor
fcoml
fdivr
jno
xchg
or
sbb
inc
in
popa
and
pop
xchg
test
dec
movsb
dec
mov
jo
stos
test
xor
data16
jge
insb
rcl
jnp
jmp
insb
mov
push
lods
xor
and
mov
addr16
imul
es
fcompl
push
pop
cmpsl
lea
inc
dec
mov
sbb
ret
adc
aam
sbb
xor
bound
or
push
and
add
cltd
les
push
fwait
cmp
mov
sti
add
hlt
mov
mov
inc
cmp
subb
cmc
jmp
add
outsl
outsl
aaa
dec
dec
aad
inc
dec
cmp
mov
repnz
adc
test
outsl
mov
inc
lcall
out
adc
inc
and
xor
movsb
mov
add
lret
and
ret
xor
mov
lea
cmp
jl
or
ljmp
add
rclb
rcr
ds
dec
das
test
mov
pop
inc
add
mov
pop
push
mov
jno,pt
adc
lock
out
sub
sbb
xchg
mov
test
sub
mov
call
in
fistps
or
xchg
jne
pop
das
cmpsl
call
fs
xchg
dec
mov
jecxz
mov
rolb
sub
je
inc
fsubrl
cmp
push
push
mov
push
lock
in
dec
push
or
rol
in
jmp
les
imul
enter
aas
xor
stc
ret
pop
jge
out
mov
pop
jb,pn
fwait
pop
push
outsl
sub
mov
bound
push
mov
dec
ja
mov
aas
popf
and
sub
push
int3
pop
jp
dec
mov
stos
stc
hlt
and
pop
pop
push
out
insl
adc
loope
es
aam
out
or
xlat
ljmp
dec
addb
mov
mov
lods
jae
popf
mov
jo
repz
out
pop
lock
mov
xchg
test
mov
jmp
adc
insb
stos
dec
lods
adc
outsl
cmp
mov
ret
popf
lods
xor
inc
mov
int
or
jo
lcall
push
lods
repnz
push
cmpsb
imul
xchg
push
and
gs
movsl
sbb
int3
inc
mov
add
dec
sub
push
and
daa
pop
cmp
into
jp
pop
cs
push
andb
push
arpl
cmp
push
fnstenv
dec
ss
out
sbb
out
daa
sbb
pop
cld
and
stos
loopne
mov
jmp
sub
in
inc
out
add
mov
mov
mov
orb
repnz
jle
neg
das
push
add
jno
pop
sub
das
cmp
push
adc
jge
jo
lea
dec
nop
fimuls
sbb
les
popl
fdivrl
pop
jle
lea
fsubs
lods
adc
pop
jb
rcrb
loope
xchg
lds
push
add
jg
rcrb
lods
ja
data16
add
inc
add
jl
push
jbe
xchg
add
cltd
div
cmp
lods
cmp
jnp
ds
push
iret
mov
call
pop
mov
outsb
aas
and
push
mov
jbe
je
lahf
rcrb
adc
idivb
adc
lret
cli
repnz
mov
push
mov
int
sbb
repz
xor
cmp
addb
push
adc
mov
push
aam
scas
xor
push
fucomp
cmpl
xchg
and
call
lock
add
xchg
pop
xchg
mov
out
nop
sahf
sbb
xor
push
arpl
fwait
xchg
dec
jo
lea
lret
ss
pop
loope
aam
mov
xor
push
out
sub
outsb
aad
fnsave
or
sub
jmp
loopne
in
push
das
nop
xor
orb
das
push
pushf
mov
add
jb
lahf
mov
mov
sbb
in
and
push
add
dec
mov
push
popf
adc
int3
dec
push
inc
push
fisttpll
jge
mov
cmc
fwait
dec
jae
sbb
je
sub
mov
scas
mov
sbb
ljmp
mov
or
jmp
sbb
test
push
xor
or
imull
test
inc
push
dec
push
sti
shlb
popf
and
data16
mov
bound
popf
push
and
xchg
sarl
fstps
mulw
jmp
mov
inc
movsl
inc
test
pusha
in
in
lods
fildl
mov
into
inc
scas
fcoml
fldenv
cmpsl
cmc
sub
adc
test
ss
adc
fnstcw
add
dec
inc
dec
stos
imul
xlat
jmp
add
andl
push
push
shll
push
dec
ret
aam
sub
insb
cltd
out
fwait
xchg
leave
xchg
and
mov
sub
pop
xor
inc
shrb
fwait
aad
xchg
mov
xchg
xchg
mov
push
sub
cmpsl
clc
push
cmc
mov
movsl
fbld
xor
lret
outsl
ja
push
adc
inc
xchg
aas
push
sarb
push
repz
mov
pushf
ljmp
jae
repz
stos
adc
fmuls
inc
data16
imul
inc
shrb
lcall
xchg
mov
mov
int3
push
movsl
shll
mov
adc
aas
inc
xor
int3
scas
imulb
xor
jae
out
mov
popa
sub
loope
mov
sti
cmc
adc
mov
inc
mov
shlb
mov
sub
mov
outsb
aad
out
jmp
mov
adc
in
inc
pop
sub
rcrb
fbstp
int
insl
lock
pop
test
mov
and
mov
or
sbb
scas
dec
es
shl
mov
mov
je
pop
adc
mov
test
jo
push
stos
mov
fadds
stos
stos
mov
sahf
out
push
ret
inc
dec
cltd
insb
sahf
jmp
ljmp
inc
mov
gs
ss
pop
mov
mov
adc
add
testl
xchg
xor
mov
sbb
or
sub
decl
cmpsb
cld
stos
adc
scas
subl
addr16
stos
xchg
sbb
insl
mull
jns
aaa
cmpsb
cli
aaa
add
xchg
dec
hlt
test
pop
in
mov
adc
lds
or
mov
cmp
push
cli
shlb
insl
lea
mov
bnd
dec
ds
in
das
pop
repnz
mov
ret
sbb
adc
dec
mov
pop
int3
jg
push
inc
sbb
pop
sbb
push
loop
dec
test
lds
adc
in
outsl
pop
enter
jg
or
and
ficoml
cmpsb
push
out
lods
outsb
cmp
sub
jmp
loopne
and
mov
and
lret
push
jae
cwtl
or
xchg
pop
lret
xchg
mov
adc
pushf
insb
jnp
push
das
in
stos
cmp
jb
pop
push
rol
int
sbb
sub
sub
mov
pop
mov
loop
sub
popf
mov
add
push
xchg
xchg
outsb
addl
lret
cmp
cmp
push
enter
mov
push
or
sbb
stos
jo
movsl
loope
std
or
lds
loop
mov
shrb
call
push
mov
pop
dec
pop
iret
ds
stos
cmp
jle
add
and
daa
in
xchg
add
pushf
mov
mov
addr16
ds
sbb
loopne
mov
loope
cmp
in
pushf
movsb
popa
lods
adc
xchg
xchg
cmpsb
and
sub
adc
jle
into
loope
shlb
stc
dec
ds
sbb
iret
jno
lods
arpl
je
mov
mov
pop
mov
mov
adc
movsl
jg
popf
sarb
pop
mov
hlt
xchg
stos
dec
pop
push
stc
add
ja
insb
xor
add
or
gs
test
pop
dec
xchg
xchg
sub
out
mov
inc
jp
mov
out
enter
jb
fs
sbb
test
or
ret
mov
lahf
lods
sbb
mov
aam
jbe
lods
xchg
inc
mov
mov
in
das
jmp
mov
fdivrs
mov
sub
adc
lret
inc
outsl
cs
push
fsubrl
nop
pop
cmp
cmpsl
cmc
cli
in
fidivs
xchg
fs
xchg
rcll
divl
mov
lods
dec
not
xchg
push
xchg
mov
xchg
mov
outsl
inc
in
lret
push
cwtl
sahf
out
jg
pop
pop
add
ss
mov
aad
jns
inc
in
xor
int
shrl
lea
jg
cltd
cld
sbb
and
add
rol
data16
rcll
lea
dec
or
js
or
cltd
xchg
dec
fisubrs
xchg
adcl
inc
call
imul
add
adc
outsl
fldcw
stos
stos
sbb
ss
sub
stos
cli
in
in
pop
ja
je
adc
adc
adc
repz
lcall
jecxz
arpl
or
js
xchg
sub
sub
jnp
xor
pop
lock
pop
or
inc
add
pop
rclb
pushf
mov
add
cmp
and
push
clc
push
sbb
push
arpl
push
push
lahf
push
out
adc
xlat
je
jbe
cmp
in
in
js
scas
fs
xor
nop
sbb
mov
arpl
stos
xchg
dec
add
inc
push
cmpsl
int3
lret
xor
pop
leave
dec
sbb
fsubs
int3
repnz
ljmp
mov
sbb
stc
inc
mov
aas
fwait
or
faddl
stc
cli
movsl
mov
jge
jecxz
jns
mov
lret
fcomps
loopne
cli
inc
jmp
push
sbbb
hlt
push
or
lock
ja
or
pop
and
shl
les
movsb
je
cmp
push
adc
mov
fmul
xchg
pop
shl
inc
in
add
divl
jecxz
jg
lock
es
inc
test
lahf
xor
pop
stc
lods
cs
and
or
daa
and
and
lret
popa
sti
mov
sti
ljmp
sub
add
subb
in
sbbb
xchg
das
pop
repz
sti
jmp
adc
into
in
pop
fdiv
inc
lea
push
popf
dec
push
mov
lret
or
push
sti
sbb
push
sub
dec
xor
sbb
mov
pop
cmp
xor
mov
cmp
add
inc
xchg
pop
subb
mov
aas
mov
sub
cmc
add
dec
mov
push
pusha
add
aas
pop
push
std
cmp
clc
insb
push
rcrb
mov
pop
pop
dec
fmul
mov
or
xorl
xchg
adc
mov
adc
sti
mov
outsl
imul
popa
nop
pop
sarl
nop
cmp
cmp
jg
jo
cmp
movl
pop
mov
out
xchg
fsubl
jbe
add
and
mov
mov
dec
prefetch
int
insb
out
mov
stc
and
mov
dec
leave
sub
sbb
xor
in
in
xor
nop
lahf
push
daa
xchg
inc
jecxz
cmp
mov
lods
mov
ds
or
lahf
xor
filds
pusha
mov
das
mov
mov
in
xchg
fsubs
xchg
inc
je
in
sti
std
xlat
imul
xchg
mov
mov
jmp
xor
xor
jno
rcr
jo
fnstenv
stos
inc
add
cs
cmp
shrl
in
aas
mov
push
add
in
jb
mov
or
iret
jnp
mov
pusha
cs
and
pop
dec
sbb
pop
add
cmp
dec
insb
ficompl
mov
repnz
mov
enter
adc
fwait
in
xorb
sbb
inc
iret
clc
sbb
cmp
ja
cs
adc
mov
ja
jno
adc
sbb
loopne
sbb
outsb
aam
repnz
repz
fwait
xor
mov
inc
popf
mov
mov
cltd
clc
dec
add
sahf
push
pop
jmp
add
push
in
das
cmp
jnp
ds
sbb
shrl
dec
and
xchg
fst
fstpt
inc
jge
sbb
pop
pop
movsb
xchg
push
jle
xor
mov
popf
push
sbb
mov
test
ror
jne
fs
mov
jge
ja
and
or
lret
adc
lea
inc
mov
xchg
cmp
shrl
stc
push
push
sub
xchg
dec
adc
jo
jo
pop
jnp
xchg
loope
and
pop
pop
push
hlt
xor
ljmp
and
xchg
mov
sub
stos
adcl
addl
mov
pushf
pop
iret
and
lods
mov
mov
pop
imul
cmpsl
sub
rorl
add
adc
xor
scas
cltd
xchg
in
cmp
lock
fst
inc
pop
inc
cmp
and
test
jbe
inc
cltd
cmp
daa
jle
cli
sbb
jnp
sahf
pop
push
aad
dec
mov
xchg
jl
leave
test
cwtl
jo,pt
push
fwait
jmp
mov
rcrb
xor
mov
sub
push
sub
ret
cmp
aaa
popa
das
inc
sbb
mov
xor
xor
arpl
jle
imul
pop
test
out
and
inc
mov
arpl
lcall
jns
xchg
repz
mov
in
mov
dec
xlat
mov
in
outsl
insl
xchg
aaa
mov
ror
jo
int3
cmp
into
jg
movsb
mov
js
or
mov
push
cmc
mov
cmpsl
or
adc
scas
inc
jge
orb
imul
sub
mov
dec
jmp
popf
mov
int3
xchg
out
js
outsb
push
mov
and
fisttpll
gs
mov
cmpsl
repnz
and
sti
adc
pop
fwait
test
cmp
cmpsb
mov
sub
lods
pop
or
mov
fmul
out
inc
add
movsb
and
pusha
push
fsts
sub
das
push
outsb
outsb
adc
test
push
mov
mov
push
mov
sarb
lds
cmpsb
add
les
xor
adc
mov
or
es
jmp
das
cmp
jecxz
sbb
inc
mov
mov
insl
inc
mov
push
ja
push
into
inc
sbb
jp
or
sub
xchg
out
sbb
and
inc
aam
jbe
stos
nop
into
aad
shl
push
mov
fnsave
cltd
in
int
mov
data16
and
jle
or
push
aad
or
lcall
je
out
aaa
pop
jle
or
sub
in
subl
fcompp
add
mov
sub
fistps
lcall
push
mov
dec
addr16
jmp
dec
mov
jecxz
sub
out
pop
iret
sti
push
sub
lcall
sub
adc
sub
fmul
mov
ss
push
in
add
fs
hlt
cli
and
inc
mov
fldenv
xchg
sub
jne
mov
icebp
lea
or
or
rcrb
popa
mov
pop
adc
push
add
leave
sbb
fsts
mov
dec
pop
mov
cs
push
and
mulb
or
inc
cmp
dec
cwtl
cmpsl
cmc
xchg
push
das
pop
mov
xchg
xor
mov
shrb
outsb
pop
jecxz
test
mov
lock
iret
mov
mov
pop
hlt
fcmove
pop
lods
pop
pushf
mov
pusha
sbb
iret
mov
mov
xchg
sahf
mov
lods
mov
and
stos
or
shrb
push
ffreep
push
cmp
ror
in
cmc
dec
cmp
cmp
das
adc
adc
xor
push
cli
xchg
pop
sub
int3
or
rcll
int
aam
jne
cs
rclb
inc
lea
leave
rorl
push
out
or
sahf
movsb
leave
inc
mov
scas
packsswb
es
leave
mov
xlat
jl
xor
das
loopne
je
ljmp
loope
jmp
sub
in
inc
loope
sbb
mov
lret
mov
sbbb
or
or
mov
out
cltd
add
xchg
icebp
out
int
fistpll
dec
cltd
cli
lret
jo
fcmovnu
mov
sub
jb
insb
pop
lret
dec
mov
push
repnz
sub
mov
in
scas
push
add
mov
lcall
mov
sarl
xchg
push
mov
inc
sbb
dec
fsubs
aad
sbb
add
sub
stos
dec
push
add
jbe
cs
and
and
in
inc
jle
jns
xor
push
dec
or
mov
out
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
jmp
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
jmp
adc
xchg
add
push
inc
je
addb
mov
pop
mov
lea
add
cld
fs
jl
xchg
aad
or
sub
pop
movsb
jnp
and
call
pusha
test
push
jb
rcll
xor
inc
jecxz
cli
mov
jmp
cmp
push
dec
iret
rcll
jns
push
pop
enter
insb
cmp
add
test
cmpl
sbb
loope
push
cld
mov
mov
cmp
jbe
into
out
cmp
icebp
iret
rclb
ds
xchg
es
mov
mov
mov
faddl
add
adc
aam
sar
push
xchg
in
out
sbb
sub
jb
cmc
pop
ret
xchg
inc
mov
and
mov
jnp
jnp
out
xchg
frstor
inc
jbe
xor
cmpsl
call
xlat
lcall
mov
aas
jne
sbb
xor
js
les
popa
pop
and
es
xor
gs
imul
push
dec
mov
lods
xor
iret
ror
mov
cmp
mov
ljmp
pop
js
dec
push
and
cli
les
dec
cmp
cmpsb
xchg
mov
sub
cld
jle
pop
xorb
loopne
fwait
dec
ret
loope
negb
aas
xchg
or
push
mov
nop
jno
cli
popf
insb
test
mov
movsb
xchg
loop
inc
pop
sub
icebp
xor
cmp
add
cli
data16
push
dec
fs
fs
or
insl
cmp
jns
or
mov
cmp
repnz
xorb
sahf
sub
aaa
fwait
idivb
fs
sbb
stos
sub
decb
frstor
sbb
adc
dec
xchg
and
imul
cmpsb
push
jnp
cmp
test
mov
mov
fmull
ret
xchg
test
mov
aas
add
data16
insb
add
dec
fcomps
es
mov
xchg
aaa
js
out
or
cmp
test
mov
push
pop
enter
jge
inc
mov
testl
xchg
cmp
sbb
or
andb
enter
inc
add
fidivrl
jno
push
or
inc
sbb
pop
hlt
lods
push
jo
loope
jmp
out
hlt
mov
and
sarl
ja
push
dec
ljmp
jmp
icebp
mov
int
sti
addb
xor
fcmovu
mov
sbb
jo
fwait
out
cmpsb
insl
mov
into
setl
lret
push
and
cmpsl
aad
xor
fistpl
and
adc
cmp
les
jp
mov
fmuls
jo
imul
es
jl
mov
lret
or
or
mov
fisubs
adc
aaa
shr
iret
mov
les
add
jp
cmc
enter
pop
xchg
pop
push
xchg
inc
add
lcall
out
in
in
xor
sbb
xchg
or
iret
loop
out
lods
inc
cmp
imul
and
push
mov
stos
jecxz
jne
aad
lcall
aam
hlt
xor
or
gs
jnp
jo
in
dec
lods
ja
push
out
out
rorb
or
outsb
jnp
mov
dec
fwait
xlat
jne
repnz
jae
aas
data16
in
xor
repz
xchg
xchg
xchg
cmp
je
and
adc
pop
in
rcll
adc
inc
mov
push
std
pushf
and
cmp
out
mov
daa
std
jns
mov
jmp
adc
enter
mov
iret
cltd
es
pop
mov
in
incl
and
into
andb
jae
push
xor
cmp
scas
leave
jle
jns
decb
and
out
mov
sub
das
and
xor
in
add
push
sbb
sbb
into
idivl
fdivs
push
fimuls
mov
jle
imul
push
fucomi
cli
cltd
sub
mov
clc
shrb
adcb
and
cwtl
and
jl
jno
sbb
lods
gs
or
xor
jmp
mov
mov
mov
icebp
xchg
sub
repnz
scas
sbb
pop
adc
jb
xchg
dec
int3
jmp
das
mov
sahf
scas
ret
xchg
adc
stc
loope
cld
jo
mov
push
fcoms
mov
movsl
mov
les
fwait
movsl
pop
sbb
stc
loope
popf
mov
push
bound
shr
or
inc
add
sbb
jmp
sbb
or
mov
xchg
sub
andl
mov
or
sbb
lods
scas
aam
test
bound
popf
lcall
push
xchg
xchg
adc
call
jp
stc
pop
inc
cmp
push
loopne
sarb
dec
dec
sub
lahf
xor
idivb
inc
inc
ljmp
mov
cmp
mov
sub
aad
jmp
int3
mov
call
push
mov
sbbl
jp
dec
jae
push
pushf
subl
sub
push
push
xchg
push
mov
cmpsl
cmc
and
jo
xor
push
out
pusha
bndstx
setae
mov
push
inc
repnz
ror
movsb
pop
movsb
mov
sbb
daa
outsb
sbb
mov
sarb
sbb
sbb
jae
dec
aad
ret
test
cmp
xchg
xor
dec
stos
sbb
pop
stc
int3
fsubr
xchg
jmp
push
or
shll
ss
xchg
inc
enter
pop
add
adc
sbb
dec
call
in
mov
sti
adc
lret
je
add
insl
xchg
adc
pop
test
sbb
imull
or
mov
or
dec
insb
ljmp
jp
pushf
dec
and
lock
lret
leave
mov
and
sbb
fstl
push
ret
adc
pop
dec
es
inc
imul
mov
out
in
pop
into
mov
insl
mov
xchg
andb
out
lods
rcl
mov
inc
mov
enter
imul
stos
jbe
xor
jb
cwtl
cmp
sub
shl
jbe
rclb
fdivl
mov
jmp
in
push
push
arpl
xchg
fisubrs
dec
sub
push
pop
pop
add
sub
adc
std
repz
mov
idiv
add
outsl
and
xchg
das
xor
inc
mov
ds
insl
xor
icebp
es
pop
aam
leave
xor
cmp
add
rolb
hlt
lcall
sub
or
push
adc
imul
leave
jae
cs
jbe
cmpsl
aaa
mov
xor
add
bound
addr16
idivb
jl
mov
pop
mov
cmp
rcll
daa
sbb
out
movsl
divb
jp
aam
add
lock
imul
xchg
push
movsb
xchg
pop
imul
cld
inc
imul
mov
ret
std
inc
adc
mov
stos
dec
sub
lea
data16
notl
jp
mov
in
mov
mov
lahf
jmp
inc
and
inc
in
jo
xor
lahf
mov
rorl
outsl
shl
test
inc
insb
nop
ret
jno
aas
int3
sbb
adc
pop
adc
mov
adc
hlt
clc
or
add
cmc
jecxz
dec
mov
adc
mov
xchg
pop
add
aaa
cmp
inc
hlt
cli
sub
fistps
lret
jne
and
stos
ss
pop
or
out
test
mov
cld
mov
roll
test
push
adc
mov
lods
mov
aaa
test
push
or
jmp
sbb
aaa
pop
lock
pop
pop
lea
fdivrp
hlt
jle
in
mov
les
mov
xor
sbb
mov
mov
jns
inc
sbb
addr16
cmp
dec
inc
or
pop
scas
mov
clc
sub
rcrb
lods
and
addl
push
jne
mov
sbb
imul
imul
or
xlat
into
loope
jmp
sbb
into
in
sahf
sub
shll
jl
movsb
jnp
or
adc
cmpsl
xchg
mov
leave
sti
adc
pusha
jne
mov
out
icebp
jne
sub
popa
or
cli
mov
outsl
in
lret
lret
frstor
inc
pop
sub
cmpsl
mov
mov
push
mov
jnp
pop
and
adc
jg
jge
mov
lret
pop
iret
cld
xor
jp
xor
adc
jl
pop
xchg
aaa
push
xor
sbb
mov
ss
out
adc
dec
loop
sub
rolb
sub
mov
pop
sbb
movsb
mov
push
ficomps
fcmovne
lods
push
dec
popa
loopne
pushf
cmp
cli
push
or
jne
xchg
or
adc
dec
xor
cli
dec
sub
es
lds
mov
add
cmp
adc
mov
shlb
sub
cs
sub
sar
push
lret
xchg
xlat
lahf
xchg
xchg
cmp
adcl
or
cmc
mov
ret
xchg
or
jmp
jae
add
xchg
cmp
fistl
aas
sarl
mov
lods
in
or
in
insl
call
ret
and
pop
sub
xchg
lahf
lods
iret
pop
out
pusha
jne
jmp
rcl
xor
pop
adc
lods
mov
in
shll
popf
cwtl
and
fwait
mov
mov
dec
mov
cmp
testl
fimull
push
push
jae
inc
in
outsb
fwait
cmp
in
ss
in
lcall
out
scas
popa
mov
scas
pop
cmc
rcrb
imul
mov
in
add
mov
mov
test
dec
mov
and
stc
gs
fiaddl
push
inc
and
sub
cmp
das
mov
adc
mov
out
mov
pop
int
dec
loope
cmpsl
int3
inc
movsl
jle
sbb
int3
mov
scas
fistl
mov
push
sti
test
ss
sbb
mov
inc
sbb
ds
fisttpll
add
sub
bound
sti
inc
test
mov
or
push
test
jns
test
lods
xor
imul
imul
out
fimuls
add
inc
jge
mov
cmp
lahf
adc
dec
push
divb
bound
jns
daa
inc
mov
and
rorb
pop
cli
xor
sbb
dec
lods
test
xor
push
scas
lahf
pop
jle
xor
cmpsb
push
mov
inc
cs
out
es
imul
pushf
push
int
arpl
dec
xor
loope
push
sarl
add
mov
mov
negl
cmp
dec
inc
jbe
mov
mov
push
pop
adc
push
test
sub
lea
xor
jmp
leave
call
xorb
pop
push
aas
mov
pop
pop
xchg
arpl
mov
dec
call
mov
js
fcompl
outsl
jmp
sbb
mov
push
leave
insb
or
sbb
mul
xlat
jmp
jns
inc
int3
notb
inc
stos
xor
sti
inc
dec
frstor
dec
sub
push
out
mov
je
mov
cltd
mov
push
adc
fsubrl
jle
cmp
push
dec
cmc
in
in
imul
hlt
call
adc
insl
sahf
push
mov
nop
adc
xchg
fcomip
jbe
dec
shr
add
pop
aas
sbb
pushf
inc
sub
pop
arpl
pop
push
ficompl
stos
bound
xor
push
ljmp
data16
cmp
and
sbb
pop
cmp
iret
repz
xchg
sarl
cmp
cmc
fdivp
jecxz
sub
cmc
mov
sbb
or
es
and
in
dec
sub
mov
cmp
bound
pop
nop
jns
fnsave
jns
pushf
jg
loopne
int3
inc
dec
iret
xchg
and
and
push
stc
inc
testb
sarb
pop
push
adc
pop
push
mov
stc
or
leave
int3
sbb
pushf
and
sub
lods
mov
push
in
inc
movsl
lods
aas
cmpsl
jnp
mov
fcomps
mov
fcoms
push
mov
inc
and
mov
pop
test
imull
stc
adc
notb
jecxz
test
dec
pop
repnz
test
fisubs
mov
push
sbb
push
addr16
cmpsl
nop
and
inc
icebp
push
mov
adc
pop
ljmp
scas
jnp
pushf
jnp
outsl
das
inc
aad
xchg
and
pusha
xchg
pop
sbb
pushf
mov
in
push
adc
mov
dec
pop
loope
sub
ret
sub
imul
sub
daa
pop
movsl
push
xchg
in
push
sub
ss
cmp
push
add
push
mov
into
cltd
lods
push
and
mov
hlt
mov
ja
dec
adc
jle
jp
jne
xchg
pop
push
mov
fimull
pop
sbb
loopne
mov
in
pop
outsl
cmp
jle
fstpt
shrl
mov
jne
or
jl
dec
adcb
stos
push
int3
jmp
cmp
roll
or
es
cltd
fnstenv
div
sub
xchg
movsb
loopne
push
mov
sarl
jp
loopne
pushf
sbb
cs
into
pop
rcr
out
xchg
insb
insb
ljmp
mov
lret
jns
mov
mov
sbb
dec
sub
jnp
imul
stos
sahf
jne
pop
xchg
pusha
lods
cmpsb
stos
movsl
xchg
inc
sub
fcoml
push
lea
outsb
jp
in
in
fnstcw
and
jne
push
cmp
and
mov
jmp
mov
shrb
in
push
jmp
cmp
fimull
repz
outsl
enter
mov
out
icebp
mov
hlt
fimull
push
jg
jns
inc
lock
test
lret
fidivs
add
add
test
xor
push
push
ljmp
ret
pop
push
ds
push
jle
pop
adc
mov
lods
inc
or
je
iret
popa
pop
xor
push
and
dec
fstl
ja
insb
mov
sbb
aas
insl
shl
xchg
push
stos
out
jnp
in
or
cmpsl
jmp
jne
aam
or
dec
inc
lret
call
cmp
xor
insb
ljmp
sbbl
xchg
popf
jmp
aas
lret
xorb
push
mov
mov
push
mov
decl
adc
pop
push
dec
shl
xchg
loope
int
jge
and
fstl
mov
leave
jl
adc
js
and
inc
test
test
enter
mov
bound
arpl
dec
les
xor
lods
jo
movl
es
rol
sbb
shr
add
mov
ljmp
lret
pop
stos
scas
xchg
lods
pop
sbbl
adc
mov
inc
in
sar
dec
or
mov
lock
pusha
faddl
adc
aam
sbb
out
pop
cmp
mov
mov
adcl
pop
push
sbb
xchg
fldt
repnz
push
fnstsw
add
in
mov
dec
test
or
int
lock
dec
jnp
in
subb
and
dec
aam
dec
xor
cwtl
pop
jecxz
dec
adc
cwtl
inc
lea
mov
js
cwtl
cmc
push
add
xchg
jne
mull
out
les
xchg
pop
imul
inc
push
mov
cmp
shlb
jnp
out
push
outsl
hlt
nop
test
mov
fadd
sti
or
mov
or
pushf
push
subb
das
mov
mov
sbb
in
and
mov
divl
movsb
lea
stos
pop
leave
and
clc
xchg
xor
repnz
movb
cmp
pop
adc
int
adc
jg
dec
repz
pop
adc
inc
add
jns
bound
cmp
xor
int3
jge
cli
mov
call
je
ret
xchg
push
hlt
xchg
stos
ljmp
adc
or
pop
mov
loop
mov
pop
outsl
mov
cwtl
push
sbb
pusha
rdpmc
jle
cmp
mov
cli
insb
cmpb
fmul
xchg
stc
es
and
cmp
adc
mov
loopne
int3
cmp
push
sahf
push
sbb
ds
mov
xchg
aas
or
mov
decb
lea
mov
lock
dec
xor
es
lahf
test
movsl
inc
fdiv
jle
cli
cmp
xchg
iret
and
cmp
sarl
cmc
je
lea
push
fimull
inc
adc
inc
std
cmp
aad
xor
out
rol
cmp
sbb
mov
push
push
das
jno
pop
dec
test
xchg
add
cmpsb
rorb
negb
out
bound
mov
inc
adc
and
inc
jge
mov
xorb
xchg
loop
in
jecxz
inc
out
cmp
les
cmpsb
adc
subl
adc
lcall
jecxz
rcll
outsb
pop
pop
jbe
inc
lock
pop
cmp
es
sbb
dec
mov
sti
dec
test
in
lock
sub
js
and
mov
es
outsl
add
inc
addr16
cli
out
inc
xchg
fsub
jne
and
push
lcall
fcoml
ret
test
xchg
ss
mov
scas
jbe
test
jg
sub
in
xchg
pop
push
sub
ja
mov
cmp
sub
loop
or
cmp
jge
sarb
adc
jne
jnp
mov
imul
pop
jb
mov
mov
fiaddl
mov
mov
clc
cmp
xchg
rclb
jno
pop
arpl
addr16
je
sbbb
push
faddp
pushf
ret
lret
pop
push
push
sub
add
movsb
movsl
sarb
xchg
adc
fs
add
add
sub
cmp
mov
daa
sub
mov
out
inc
adc
xchg
imul
and
sahf
pushf
lock
cli
test
leave
aad
mov
fdivrl
jge
pop
mov
or
je
xor
out
fstps
xor
call
test
pushl
cs
lods
hlt
xlat
lods
daa
or
dec
ljmp
mov
mov
das
inc
push
jp
out
scas
sub
jb
jmp
adc
push
fnstenv
lcall
or
mov
xor
iret
push
in
inc
flds
call
orb
xlat
mov
adc
dec
into
push
mov
imul
jp
cwtl
xchg
xchg
je
in
or
lcall
sub
sbb
inc
jno
inc
lret
lcall
inc
mov
adc
and
sarl
cvtps2pd
int3
lret
es
ljmp
inc
test
js
mov
in
call
xchg
push
or
mov
or
adc
mov
pop
out
xorb
adc
add
mov
sarl
pop
jl
enter
inc
jmp
icebp
icebp
call
xlat
ds
out
lcall
or
xchg
add
shll
jnp
cld
les
push
int3
je
mov
mov
and
loopne
cmp
leave
fwait
pop
out
pop
ja
or
cmp
into
daa
or
lcall
cmp
inc
mov
pop
jp
out
aam
push
sbb
insb
sbb
fstl
shrl
shlb
shll
sbb
mov
adc
and
lea
icebp
fcmovnb
jnp
xchg
adc
std
jne
sbb
sub
fs
add
adc
jo
shlb
pop
xchg
aam
xchg
ja
dec
in
lods
sbb
inc
popa
push
inc
nop
ja
out
jmp
push
orl
adc
aaa
out
lret
addr16
mov
popf
sbb
add
lret
inc
outsl
mov
cmp
repz
mov
das
lret
xchg
sub
call
aas
sub
fildll
mov
hlt
or
ret
dec
enter
and
mov
push
rol
mov
jmp
push
or
fsub
inc
shlb
enter
sub
xchg
cmp
out
mov
movsb
mov
movsb
pop
gs
in
and
sub
inc
cmp
xor
inc
shll
push
pop
lods
fsts
imul
roll
loopne
inc
out
dec
inc
inc
add
lret
xchg
pop
mov
imul
adc
insb
test
sbb
mov
sbb
cmpsb
xchg
test
outsb
sti
xchg
mov
call
and
adc
fcmovu
sbb
ss
xor
xorl
sub
aaa
xchg
iret
inc
push
inc
pushf
popa
xchg
loopne
pushl
movsl
sahf
xor
stc
add
xor
sti
aam
test
faddl
jle
or
fdivrs
inc
sqrtps
fisttpll
dec
ja
adc
push
cld
and
adc
cltd
jae
sbb
jae
sub
mov
xchg
xchg
pop
sti
testb
pusha
outsb
cmc
and
push
jle
xchg
or
cli
xor
ret
mov
lea
scas
testb
iret
inc
adc
sbb
pop
loope
pusha
ljmp
jmp
jle
adc
adcl
push
push
push
sub
cmpsl
jno
fisttpl
dec
iret
lods
andl
adc
les
lock
push
call
dec
insl
dec
jbe
adc
sahf
in
mov
repz
addr16
lcall
mov
sub
mov
stos
clc
dec
xor
push
jae
lcall
ret
shl
sub
js
jle
das
fcmovbe
pop
sub
jno
or
imul
mov
push
mov
cmp
and
push
inc
mov
dec
out
cmp
xchg
push
sti
mov
loopne
outsl
lods
dec
xchg
jge
lods
mov
sub
or
cmpsb
shll
daa
mov
scas
cmpsl
mov
cmp
cwtl
jge
mov
pop
mov
push
push
xor
scas
xchg
mov
out
jl
cmp
ret
rcrl
shl
sub
into
test
repz
mov
adc
loope
lret
xor
inc
imul
sbb
filds
sbb
mov
out
lret
inc
roll
ja
mov
add
sbb
bound
leave
pop
cmp
ror
mov
and
sub
arpl
mov
std
in
xor
test
fnsave
daa
loop
imul
std
leave
out
cmp
adc
and
hlt
pushf
sub
jae
dec
roll
mov
mov
dec
mov
je
leave
shl
mov
push
mov
push
pop
leave
into
data16
iret
movsb
sub
insl
mov
outsb
pushf
ja
fnstenv
jns
jnp
lods
movsl
pushf
add
test
shlb
xchg
inc
and
insb
push
pop
mov
mov
pop
jns
in
js
cmpsb
pop
or
leave
call
gs
dec
nop
pop
cmp
xchg
adc
pop
jbe
iret
js
out
cwtl
out
push
adc
ret
pop
out
stos
cmp
aas
in
jp
mov
push
push
out
sub
and
repnz
gs
int
stos
fldt
scas
daa
int
leave
test
inc
or
cmp
mov
gs
cmpl
mov
jmp
pop
xor
add
pop
shl
data16
lods
cmp
out
mov
test
sbb
or
xchg
jae
mov
in
sub
inc
jbe
mov
lods
movsb
dec
mov
and
xchg
adc
sub
and
adc
cmp
les
mov
dec
pop
ja
add
sbb
jnp
mov
or
iret
xchg
dec
ret
aam
xchg
xchg
mov
fpatan
or
cmpsb
aaa
mov
mov
push
icebp
outsb
add
xor
jnp
bnd
dec
dec
in
pushf
cmp
mov
and
push
test
mov
xlat
pop
xchg
jo
idivb
mov
pop
dec
out
rclb
or
lods
or
lods
pop
inc
and
aam
cmpsl
cwtl
out
cld
sbb
out
mov
and
mov
jbe
and
outsb
stos
shl
test
outsl
int3
andb
add
xchg
sub
sbb
cmove
sbb
aas
repz
bound
xlat
arpl
mov
lret
scas
lcall
push
icebp
adc
cmp
and
stos
lret
mov
cmp
xorl
pop
dec
icebp
cltd
push
and
shr
sbb
movsl
stos
mov
mov
fisttpl
pop
loopne
add
mov
aad
pop
das
enter
lock
mov
leave
shlb
inc
fadds
cmp
xor
xor
cmp
add
cmpsl
in
pop
adc
test
xor
orb
ret
fld
push
sub
test
int3
stos
push
jmp
xor
mov
outsb
cmpsl
in
daa
loopne
inc
add
sbb
fsubr
subl
sahf
int
mov
lods
mov
cs
mov
fucom
outsb
stc
cli
negb
pop
sbb
outsb
mov
test
push
icebp
mov
aas
lock
in
xchg
xchg
xchg
int3
mov
adc
addr16
fsubrs
lods
lods
dec
bound
mov
xchg
repz
subb
test
sbb
xchg
call
cmpsb
data16
mov
pop
dec
jne,pn
mov
clc
outsl
rcll
push
lret
je
insl
test
mov
sbb
push
outsb
xor
pop
rcrb
inc
mov
mov
xchg
bound
add
fcoml
loopne
mov
insl
repnz
push
mov
mov
cmp
adc
and
es
dec
dec
fbld
add
cmp
clc
in
fwait
jbe
rcll
adc
sub
pop
jne
stc
mov
xor
pop
pop
scas
hlt
pop
cmpl
add
outsl
shlb
sub
cwtl
jo
rclb
mov
mov
ret
pop
shrl
push
push
hlt
push
movsl
leave
int3
mov
pop
pop
sub
popf
es
iret
inc
dec
inc
xor
pop
leave
push
or
scas
push
inc
dec
repz
ret
loopne
cmp
and
or
test
ja
orl
neg
dec
lahf
add
dec
jb
jno
imul
push
sub
repz
clc
mov
std
cltd
xor
outsl
add
xor
xor
cmpsb
jle
aad
add
outsl
xchg
movb
fadds
cltd
or
dec
push
aam
add
pop
shlb
jp
inc
ficomps
jg
leave
add
mov
repz
cmp
cmpsb
add
push
popa
div
xchg
sahf
rorl
adc
das
out
pop
inc
dec
icebp
mov
dec
lods
mov
mov
pop
mov
orl
push
mov
test
dec
andb
pop
push
outsb
push
mov
dec
sbb
pushf
inc
decb
fildl
gs
or
mov
inc
push
sbb
mov
test
jnp
dec
gs
in
inc
sub
xchg
gs
jnp
popa
inc
sbb
or
mov
mov
test
lcall
clc
insl
inc
in
andb
cmp
jo
shr
dec
cmp
cmpsb
adc
pop
push
mov
mov
add
sub
imul
in
cmpsb
jns
aaa
sti
je
rcrl
sub
fstps
pop
mov
add
xor
test
push
leave
dec
int3
imul
lret
cli
aam
ret
rolb
les
test
mov
mov
adc
mov
push
in
pusha
pop
lods
sub
xlat
js
clc
adc
add
or
push
jle
clc
popa
rclb
mov
dec
add
pop
xchg
js
mov
sub
mov
imul
push
es
xor
scas
push
psubsw
dec
lods
popa
loope
mov
mov
cmpsb
xchg
clc
mov
mov
push
mov
mov
test
addl
adc
nop
mov
dec
imul
pushf
ljmp
ficomps
shll
cmp
xchg
lds
pusha
movsb
aad
mov
jae
adc
int3
js
push
aas
mov
pop
jo
inc
loop
push
xlat
mov
mov
sub
inc
jge
xor
jno
mov
int
pop
nop
outsb
arpl
lds
dec
adc
icebp
lahf
pop
jnp
cmp
mov
fs
js
ret
pop
addl
inc
mov
jg
mov
mov
fs
sub
adc
outsl
aad
rcrl
pop
inc
or
mov
ljmp
dec
dec
popa
stc
out
adc
test
rcrb
stc
lcall
push
xchg
out
pop
and
xchg
in
addl
stos
addr16
or
addr16
out
or
jl
xchg
push
dec
push
ret
arpl
xchg
push
xchg
jnp
out
mov
jb
aaa
xchg
repz
icebp
mov
adc
sub
dec
in
adc
cwtl
xor
inc
test
xchg
cmpsb
mov
repz
repnz
mov
mov
xor
sub
mov
fimuls
fistps
repnz
push
mov
dec
movsl
sub
adc
je
xor
xchg
mov
call
ja
push
sub
push
aad
cld
push
pop
inc
iret
rcl
imul
xchg
lea
lahf
jo
lods
clc
adc
add
je
scas
mov
adc
xlat
or
xchg
mov
enterw
cmp
mov
rclb
addr16
and
pop
mov
ret
scas
sub
jge
cmpsl
cs
or
rol
in
ficoml
dec
fldl
push
add
xchg
insl
xor
rorl
mov
inc
fisttpll
daa
int3
inc
dec
mov
and
lret
mov
xchg
and
fcmovne
repnz
pop
push
mov
js
outsb
fists
shl
sti
pop
lcall
loop
int3
fscale
cmp
insb
mov
hlt
fimull
or
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
mov
mov
xor
lea
mov
mov
xor
add
jne
jmp
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
jmp
pop
cmp
inc
xchg
test
and
inc
arpl
and
sbbl
outsl
sbbb
imul
pushf
js
mov
and
arpl
xchg
imul
pop
xor
fldcw
and
mov
mov
mov
add
daa
jno
mov
mov
test
scas
stc
clc
lcall
and
jne
pop
sbb
lret
cwtl
push
push
ret
mov
xchg
mov
in
cmp
mov
cmpsl
xlat
jg
mov
xor
int
cltd
in
sub
and
popa
push
xor
mov
add
push
rorb
xorb
jne
out
add
stos
mov
dec
sbb
pop
mov
cmp
stos
and
dec
jecxz
popa
push
daa
js
sbb
imull
push
cmpb
mull
pop
mov
and
lea
push
pop
jno
pop
jb
xchg
lea
dec
adc
dec
rcrl
pop
jne
imul
andl
sub
mov
adc
sbb
dec
pushf
mov
loop
inc
mov
mov
sub
push
lock
dec
insb
cmp
jle
mov
pop
sbb
les
movsb
mov
xor
in
das
mov
lret
cwtl
mov
push
push
add
mov
xor
or
fnstenv
sahf
ret
repnz
ja
or
fildl
icebp
icebp
rcrb
leave
fcmovnb
mov
or
or
sbb
mov
enter
push
loopne
imul
das
xchg
mov
xchg
rcrl
lcall
cld
push
insb
adc
sbb
cltd
jo
sahf
cmpsl
cli
imul
loop
imul
xchg
pop
mov
mov
dec
frstor
or
jb
sbb
or
mov
sti
add
dec
loopne
stc
push
push
test
sbb
and
or
cmpsb
push
or
mov
sub
test
lock
cmp
rorl
daa
adc
inc
mov
das
xchg
cmpl
cltd
mov
adc
push
das
rolb
inc
imul
lret
inc
xor
mov
xchg
xor
mov
stc
fistl
ds
lea
mov
xchg
popf
out
pop
sub
movsb
xorl
or
pushl
imul
cs
sub
out
dec
xchg
daa
or
xorb
pop
push
mov
inc
sbb
push
fcoml
adcl
lea
inc
aad
jbe
adc
out
int3
in
sbb
jo
test
dec
ja
push
fidivrl
xor
sbb
repz
lret
lret
xor
repz
jae
dec
shll
mov
adcl
jg
mov
pop
pop
aad
stc
jmp
fisttpll
sbb
mov
ret
incb
call
loopne
pop
mov
fs
push
mov
ljmp
push
stos
aaa
sub
push
sbb
sbb
ret
fisubl
sub
or
bound
jecxz
mov
lds
ss
xchg
outsl
iret
fsubrl
push
popf
xor
xor
xlat
xor
out
add
pop
pusha
sbb
loopne
movsl
jmp
mov
push
or
push
pop
sbb
add
stos
sub
dec
repnz
aas
pushf
add
nop
adc
mov
test
insl
jae
mov
pushf
data16
mov
add
jg
lea
jmp
xor
and
cli
iret
push
or
mov
add
xor
xchg
add
arpl
mov
movsl
sub
lods
js
mov
cwtl
or
fidivl
int
fadds
or
cmp
imul
imul
lahf
inc
ss
js
adc
push
pop
jbe
rorl
into
insl
iret
pushf
or
sbb
mov
cli
sbb
fbstp
mov
mov
cmp
lds
sbbb
rcll
lahf
mov
jle
mov
dec
inc
hlt
pop
ss
sbb
xchg
inc
lcall
fimull
adc
sbb
cmpsb
loop
push
inc
sbb
test
lea
push
insb
cmp
push
jmp
xchg
pop
xor
or
or
in
or
cmpsb
mov
jmp
loope
pusha
mov
jecxz
or
jg
mov
imul
xchg
jp
inc
stos
stc
aam
sub
movsl
je
or
cmp
dec
lcall
out
jne
jg
push
pop
mull
or
incl
insb
aas
and
leave
jecxz
add
iret
or
add
pop
insb
xchg
mov
andl
test
mov
lods
mov
add
push
adc
movsl
insb
movsl
xor
sahf
ljmp
jge
adc
stc
outsb
rorb
push
inc
das
pop
and
adc
ret
and
xor
out
jge
sbb
lods
pop
pop
inc
cmpsl
sar
cmp
xchg
push
lret
jb
out
cs
mov
mov
push
dec
das
das
mov
cli
jmp
sub
ret
cmp
dec
inc
ficoml
xchg
filds
mov
or
lods
lret
inc
out
mov
sbb
xor
xchg
sti
push
cmc
dec
mov
and
je
push
repnz
push
sub
cmpsl
mov
clc
repz
cwtl
and
xor
leave
xchg
idiv
xor
mov
ret
xlat
cmp
add
cmp
mov
adc
scas
and
ret
subl
or
cmpsb
iret
es
mov
pop
inc
xor
loopne
jl
das
sbb
mov
cmpb
jns
dec
mov
cmp
mov
jmp
push
push
popa
mov
movswl
sbb
jge
lcall
ret
in
ss
sub
mov
push
xchg
adcb
xchg
mov
in
arpl
repnz
push
test
stos
loope
pop
mov
mov
pushf
jne
push
cld
repnz
setge
lcall
lcall
dec
repnz
int
out
push
icebp
loope
xorl
sub
mov
and
cli
lret
sub
pop
xor
xchg
lods
xor
ret
sti
dec
inc
add
jge
into
cltd
and
jae
push
je
pop
push
fcomps
notb
sbb
sbb
ds
test
mov
roll
mov
lahf
xor
mov
xor
pop
movsb
aaa
lea
pop
sarl
pushf
repnz
mov
sub
rcr
test
jnp,pt
add
cmpsl
cmpsl
ss
sbb
jo
dec
data16
popa
sbb
xor
fsubrs
hlt
jo
divl
pop
push
fistpl
jnp
xchg
mov
mov
es
cmp
mov
jb
mov
and
enter
out
mov
dec
inc
xor
data16
rorl
das
jo
in
sub
cwtl
jne
repz
jmp
fnsave
adc
divb
dec
ficoms
in
jo
in
loop
jb
sbb
ret
sbb
jg
fstps
mov
push
and
jp
repz
sbb
shlb
and
mov
mov
das
icebp
mov
ja
sbb
fists
inc
sub
test
lahf
push
in
sbb
int3
lods
scas
dec
push
xor
fwait
xchg
div
aas
mov
pop
into
mov
mov
lcall
orb
daa
mov
jne
dec
fldt
stos
adc
dec
lea
jecxz
and
and
xchg
je
cmp
jmp
int
in
xor
mov
mov
push
fidivs
add
out
and
push
xchg
inc
xor
andb
pop
adc
jno
xchg
popf
test
jge
insl
lods
cmp
or
jmp
mov
jge
sbb
add
and
dec
cmp
or
dec
addr16
add
popf
dec
imul
adc
or
add
or
subl
mov
std
dec
sub
jbe
in
push
arpl
sub
out
lret
outsl
push
cmp
movsl
lea
ds
pop
mov
sub
push
pushf
pop
rclb
add
adc
push
sbb
loop
repz
push
xchg
js
dec
mov
mov
sahf
rorb
mov
pushl
ja
inc
pop
dec
pop
stos
push
jge
daa
push
cmp
ffree
ret
dec
adc
je
repz
push
loope
repz
sub
iret
lret
pop
sub
xchg
rolb
pop
push
jne
outsl
xor
faddp
ljmp
or
popa
pop
pusha
or
loope
mov
lds
fcmovu
jg
inc
sub
lock
daa
gs
repz
pop
jb
xor
scas
addr16
cli
pusha
mov
jo
jmp
fdivr
test
out
jno
movups
inc
mov
add
imul
data16
popf
dec
cmp
addl
aam
sub
sbb
rorl
fwait
ja
add
stos
cmp
fldcw
inc
mov
fisubl
push
rcll
mov
jo
cmpsl
mov
mov
rcrb
es
iret
mov
inc
fwait
cmpsb
cli
aas
sub
xchg
stos
out
testb
inc
push
jne
sbb
rcrb
mov
xor
call
aam
sti
push
pop
addb
jmp
push
push
push
ljmp
in
or
or
adc
pop
mov
mov
mov
loop
xchg
xchg
add
inc
jecxz
sub
cmp
ja
rorl
pop
cmp
loope
sub
add
outsb
movsb
dec
lods
pop
xor
cmp
pop
mov
mov
inc
or
imul
fidivrl
pop
mov
daa
adc
pop
jmp
lock
es
negl
pop
mov
jle
sbb
add
out
movsb
scas
and
ljmp
xlat
fildll
jecxz
push
nop
adc
mov
jmp
or
aad
pop
lods
mov
and
adc
sahf
int
add
add
cmp
xchg
pop
jmp
dec
movsl
insl
lds
cmp
aad
fimuls
int3
jb
clc
cmp
push
jp
xor
fs
insl
das
adc
sub
das
xchg
jno
out
push
clc
insb
lods
jge
loope
cli
je
lahf
lret
add
lods
cmc
nop
cmp
or
in
cmp
aad
or
sbb
loop
aaa
mov
rcrb
mov
xor
xchg
loope
dec
xlat
mov
dec
dec
fs
orb
call
scas
push
out
sub
sbb
mov
popf
paddq
repnz
adc
xor
cs
test
xchg
pushf
stc
sbb
xchg
inc
sbb
add
out
mov
push
and
icebp
xorb
mov
mov
das
xchg
out
test
mov
ja
stos
mov
xor
lods
fimull
test
xor
jo
pop
aas
popa
mov
dec
movsl
dec
or
ret
add
push
adc
mov
cmp
mov
pop
xchg
jg
xor
stc
scas
push
mov
scas
aam
shrb
inc
fwait
cli
scas
jmp
insb
inc
sbb
cmp
jb
mov
and
out
dec
loop
mov
aas
add
jo
cmp
jnp
mov
mov
ljmp
cli
shll
pop
or
xor
es
cmp
mov
adc
mov
xchg
pop
daa
ljmp
stos
in
sub
iret
mov
jmp
rcll
sub
out
outsl
push
aaa
mov
cmc
aad
jecxz
enter
test
in
in
mov
jae
xchg
dec
mov
adc
mov
adc
cwtl
or
out
les
clc
ds
fdivrp
sub
mov
xchg
dec
lods
pop
loop
fisubrs
pop
add
lahf
and
bnd
push
out
fistpll
addr16
inc
cli
inc
and
add
cmp
inc
dec
mov
out
jo
mov
adc
adc
and
adc
sbb
push
fsub
jg
cmp
fs
std
cmc
adc
mov
stos
cltd
lock
jp
inc
push
rcl
pop
mov
mov
rorl
jnp
mov
jno
push
jg
ret
mov
sub
lds
pop
inc
jmp
lret
rcrb
xlat
or
subb
pop
dec
mov
push
daa
jle
imul
shlb
xchg
andps
test
xchg
test
jno
repnz
lret
inc
mov
fadd
dec
imul
mov
mov
test
pusha
mov
dec
jp
add
orl
xor
arpl
cmpsb
mov
mov
leave
mov
inc
pop
nop
lods
pop
leave
fdiv
sub
data16
out
vandps
pop
dec
push
mov
adc
call
sub
dec
add
cmpsl
pop
fistps
jb
aad
mov
mov
out
push
jl
aaa
in
call
xchg
cld
pushf
lock
jmp
mov
nop
jle,pn
je
idivb
pop
cmp
es
or
inc
mov
aad
adc
pusha
pop
aaa
cs
jbe
xchg
ja
sub
pop
repnz
mov
cli
pop
inc
lahf
addb
mov
or
lea
add
jl
dec
iret
and
pop
push
cwtl
pop
dec
xor
dec
pusha
or
push
subl
in
test
mov
test
movsl
nop
call
addr16
mov
sub
dec
arpl
mov
pop
in
loopne
pop
stos
out
cmpsl
sub
jbe
add
pushl
cwtl
inc
mov
mov
push
fstl
fnstcw
and
in
shll
pop
xchg
inc
jmp
insb
mov
jge
lcall
pop
cmc
scas
xchg
push
mov
add
xlat
cltd
push
fiaddl
in
out
inc
das
jns
adc
shll
add
push
in
lcall
xchg
scas
dec
leave
xor
add
cli
mov
and
mov
loopne
fcompl
mov
xor
call
dec
sti
xchg
outsb
int3
stc
xor
outsl
or
and
js
in
aaa
mov
cmp
pushf
cmp
jnp
cmpsb
xchg
xor
inc
add
sbb
add
icebp
fcompl
pop
push
sub
stos
sbb
sub
enter
mov
out
pop
shlb
pop
ljmp
jle
push
aas
add
and
mov
mov
adc
imul
mov
inc
cs
sbb
sub
sbb
test
cmc
outsl
bound
or
sub
leave
aaa
test
jnp
dec
and
lret
je
test
inc
sub
xchg
cmp
popf
inc
call
fs
xorl
pop
cmp
cwtl
popl
loope
dec
repz
test
fistps
das
push
pusha
addb
popa
add
dec
push
cld
dec
sarb
cmp
pavgw
mov
push
loope
mov
fwait
adc
add
lahf
in
xchg
lds
inc
out
inc
pop
adc
and
xchg
das
mov
fsts
push
cmp
scas
sbb
rcrl
fistl
push
sahf
cmpsl
xorl
dec
xchg
lret
rclb
dec
jle
add
out
gs
call
enter
fildll
add
jne
pop
and
ljmp
and
inc
or
fs
pop
std
xchg
insb
cmp
insb
xor
adc
jae
enter
xchg
sarl
rolb
xlat
scas
out
adc
cmpsl
push
bound
xchg
insb
fidivrs
outsb
push
cwtl
xchg
push
jo
push
adc
jecxz,pt
je
adc
mov
int
cmp
popf
push
push
xor
mov
sub
fisttps
sub
paddq
les
jg
pop
jbe
adc
sub
mov
inc
xor
lock
bound
mov
sbb
sbb
add
repz
jg
js
dec
ljmp
and
sub
push
insl
xor
pop
xchg
push
cmp
jecxz
mov
or
movsl
mov
rorb
and
pushf
pop
jne
jae
ret
loopne
dec
and
ret
mov
cmpsl
repz
sbb
mov
jmp
sbb
xor
cld
sub
mov
shrb
adc
or
fsubs
pop
inc
repnz
sarl
roll
fcoml
inc
push
mov
test
inc
mov
mov
mov
cmpsl
shlb
xchg
addr16
and
in
fsubl
cmpsb
adc
ljmp
add
cld
fsubrp
jb
notl
lods
and
xchg
arpl
scas
and
xorb
xchg
movsl
sahf
xlat
pop
ficoml
test
call
jecxz
fcmovbe
inc
bound
push
imul
cmc
push
mov
cmp
lret
dec
loopne
xor
adc
movsl
hlt
pop
or
jg
pop
mov
and
mov
cmp
dec
push
push
jl
sbb
flds
cmpsl
daa
push
jne
adc
xchg
pop
xlat
pop
jbe
xchg
jne
xchg
mov
sub
orb
push
push
xchg
shlb
xchg
rolb
je
stos
xor
jns
clc
mov
jecxz
cmpsb
dec
pop
add
lods
mov
adc
ja
aam
mov
ret
enter
xor
cmc
dec
fs
in
or
or
jge
lahf
das
fs
mov
sub
xor
rorb
xchg
push
aaa
and
stos
sub
pop
cmp
xor
imul
or
pop
arpl
mov
ficoml
xor
jg
mov
cmp
cltd
inc
xchg
loop
mov
fmul
outsl
cmpsb
ss
mov
cmp
pop
push
sahf
xor
loopne
jb
stc
push
in
fbstp
arpl
jmp
cmp
addr16
mov
ret
mov
mov
iret
pop
xchg
js
test
dec
cmp
pop
bound
fidivrl
lods
cvtps2pi
cmpsl
push
sbb
nop
mov
sbb
cwtl
int3
lret
xor
add
out
sbb
mov
scas
jle
rcl
pop
xor
mov
push
divb
fldl
hlt
pop
jns
xor
pusha
pop
inc
mov
dec
daa
repz
aam
mov
sub
outsl
rol
dec
adc
inc
and
rcl
scas
adc
mov
xor
daa
adcb
shufps
push
pop
test
les
mov
imul
ret
cltd
xchg
sbb
mov
jecxz
xchg
mov
mov
mov
clc
mov
jo
xchg
sahf
fisubs
mov
jns
inc
push
push
movl
gs
adc
mov
fs
call
push
rcr
mov
mov
into
mov
push
mov
add
test
leave
xchg
in
mov
int
and
push
pop
add
xor
push
movsb
jbe
jo
xchg
leave
lret
lahf
call
data16
jg
cmp
dec
ds
rcr
push
icebp
outsb
push
mov
inc
pushf
pop
mov
fisubl
cs
push
sahf
mov
sbb
push
fisubrl
or
insl
aad
sbb
imul
fildll
cmpsb
sub
repz
ss
xlat
in
sbb
dec
or
cmp
aad
jge
loopne
cmp
and
out
xor
pop
outsb
xchg
dec
out
std
jae
push
in
xlat
addr16
sbb
jg
imul
mov
mov
and
sbb
popa
adc
add
mov
add
push
enter
pop
popa
ret
inc
xor
mov
mov
dec
mov
jns
std
pop
push
test
mov
mov
dec
cwtl
mov
or
add
sbb
sbb
and
in
cld
xchg
fwait
popa
inc
jp
adc
pop
pop
mov
jae
cmpsb
imul
in
sahf
mov
push
pop
xchg
mov
and
push
inc
inc
or
sub
cwtl
addr16
mov
inc
fmuls
stos
aad
mov
data16
test
rol
dec
ret
push
mov
outsl
mov
inc
aam
movsb
push
jl
lret
shl
xchg
jo
mov
xchg
xor
add
cli
sub
aad
mov
and
jb
jecxz
lds
js
bound
or
jmp
imul
aaa
outsl
add
mov
xor
fmull
mov
pop
push
add
xchg
iret
xlat
rcrb
jb
pop
shrb
sub
mov
popf
push
sub
sti
cmpsl
sub
int
dec
aas
les
push
sbb
fcoms
andb
out
push
mov
xor
push
rolb
mov
mov
pusha
inc
str
inc
es
mulb
mov
add
lock
inc
rol
dec
rcr
lahf
lahf
out
adc
in
insl
sbb
lds
jge
cmp
aad
sti
and
xor
movsl
inc
and
in
add
jle
imul
fnstcw
shlb
jo
in
push
jmp
stos
rorl
and
jl
xchg
cld
clc
pmovmskb
or
xor
inc
push
in
mov
mov
mov
sbb
pop
cmp
cld
mov
lock
int3
mov
outsb
jb
push
jecxz
repz
cmp
xor
adc
aam
arpl
inc
mov
dec
and
lahf
xor
cmp
and
push
adc
xor
xchg
fisubrs
jmp
cltd
or
rcl
push
push
icebp
sahf
mov
bound
pop
das
mov
dec
push
lds
pop
mov
shll
addr16
jnp
mov
sarl
mov
and
adc
jg
xchg
and
sbb
jg
rclb
mov
mov
jne
stos
pop
sbb
lock
adcb
enter
fnstsw
inc
jbe
sarl
pop
jne
imul
cmc
push
add
fstpt
sbb
push
cmp
fisubrs
cmp
out
jp
and
push
inc
xchg
and
jo
leave
mov
or
in
dec
pop
sub
icebp
or
out
dec
push
lret
sub
push
mov
sub
and
mov
stos
ffree
sub
jle
popa
sub
push
add
adc
add
push
movsb
leave
sbb
jge
dec
sub
mov
call
xor
jge
sbb
mov
dec
push
sub
incl
push
stos
add
inc
dec
mov
mov
into
mov
push
pop
mov
add
insl
adc
push
sub
nop
aad
in
leave
int3
jno
cmpb
jmp
mov
dec
sbb
sbb
ljmp
xor
mov
aaa
push
sbb
adc
push
push
addr16
push
jae
cld
aas
movsl
pop
out
imul
xor
xor
lret
icebp
jl
addr16
fs
mov
sbb
push
inc
inc
inc
jb
iret
ret
jmp
inc
int
shl
xchg
imul
mov
and
xchg
lock
cmpps
aas
outsl
push
gs
mov
or
scas
xor
jne
dec
cmp
jmp
repnz
aas
aaa
jg
pop
jl
cmpb
mov
or
int3
arpl
ret
jnp
int
add
push
pop
popa
add
ret
mov
push
adc
stc
cmp
popa
rcrb
call
mov
sub
inc
jmp
mov
pop
sbb
push
test
xchg
inc
stos
lahf
and
add
jnp
sbb
xchg
aaa
inc
inc
mov
pop
jae
mov
fwait
cwtl
into
imul
mov
jp
mov
adc
lret
sarl
daa
xor
sbb
ret
int3
jg
and
mov
push
scas
lock
lahf
mov
push
ror
xchg
sbb
hlt
pmaxub
mov
dec
xor
ds
lret
inc
inc
fisubl
test
outsl
popf
sub
and
sbb
mov
adc
inc
sub
test
lret
adc
mov
sub
xchg
loop
cmp
jp
out
imul
mov
nop
xchg
mov
push
or
inc
faddl
pusha
pop
mov
mov
mov
xchg
fwait
aaa
stos
adc
insb
or
adc
cmp
inc
xor
adc
orb
rcrl
lcall
inc
push
ret
lret
add
stc
dec
sub
adc
cmp
andl
xor
pop
bnd
pushf
pop
lods
lcall
fsubrs
push
ja
mov
inc
sti
aas
sub
ss
pushf
stos
arpl
cmpsb
push
cmp
add
xor
xor
sbb
mov
mov
pop
add
cmp
mov
push
test
xchg
jo
xlat
push
push
jmp
xor
xor
ja
std
sub
xchg
in
pop
jmp
inc
dec
cltd
pop
enter
sbb
xchg
out
fmuls
sbb
insb
push
fistpll
notb
pop
test
mov
sub
fsubl
mov
push
fucomp
lcall
gs
jae
pop
or
push
lcall
mov
cltd
mov
adcl
pusha
arpl
lahf
dec
in
push
cmp
in
mov
or
jp
and
jle
or
jecxz
stos
jecxz
enter
dec
or
and
inc
movsl
pop
add
fistl
fists
fbld
adc
and
sbb
loop
jmp
adc
jge
test
shlb
sub
xchg
dec
dec
mov
mov
aaa
mov
pop
cmp
test
daa
es
fcoms
pop
js
sbb
mov
pop
movsb
out
js
pushf
icebp
dec
mov
inc
cmp
mov
sub
sub
in
lret
add
sbb
and
pop
pop
jno
repz
ret
inc
movsb
faddp
hlt
and
imul
andb
add
or
popf
out
xchg
jge
pop
adcl
push
lcall
mov
sbb
xchg
mov
movsl
in
dec
jg
loopne
insl
das
mov
lret
xor
lahf
sbb
adc
mov
sub
xor
cld
scas
jge
in
inc
fisttpll
push
lds
mov
cli
sub
jae
clc
push
movsl
ds
insb
je
frstor
jle
dec
mov
daa
push
sbb
mov
aas
lret
sbb
push
mov
mov
fdivs
adcb
jns
lret
add
add
xor
cld
sbb
mov
or
jl
xchg
pop
mov
rorl
ja
andl
enter
mov
lahf
je
loopne
mov
in
dec
mov
sub
loope
xor
repnz
jmp
dec
in
jbe
xchg
shll
cmp
jne
mov
imul
and
ja
inc
pop
mov
push
mov
fwait
popf
scas
sub
cmp
pop
rcrb
into
push
jne
insb
ret
aaa
lahf
cmp
lock
sahf
leave
fptan
ds
pop
cltd
mov
mov
mov
cmc
cmp
jae
in
test
or
jnp,pt
mov
cmc
movsb
jne
aas
pusha
gs
jge
pop
gs
jle
add
popa
push
sub
fistpl
cld
fisttps
clc
inc
sbb
mov
or
imul
sar
sbb
pusha
sub
lds
arpl
sbb
push
push
repnz
mov
pop
andb
cmp
adc
lds
in
test
fcmovu
and
pop
xchg
in
mov
rcl
std
icebp
lds
sbbl
cld
mov
fs
sahf
arpl
lret
std
mov
movsb
lret
lcall
shr
push
pop
cmp
test
in
out
add
imul
push
or
jnp
ljmp
insb
mov
rep
das
sbb
mov
rcrb
aas
mov
sbb
outsb
roll
xchg
push
cmp
inc
add
hlt
lret
aas
icebp
or
cmp
mov
jle
xchg
mov
push
xor
xor
fcomp
mov
adc
sbb
leave
mov
jnp
or
jle
cli
pop
xchg
pop
iret
stos
imul
in
jmp
and
pop
adc
mov
cmp
cmp
fsubr
sub
imul
sub
pop
jbe
insb
adc
daa
das
mov
stc
ds
in
gs
out
frstor
loopne
iret
pop
or
enter
mov
inc
push
stc
dec
mov
lahf
repnz
outsb
push
nop
pop
inc
jne
pop
mov
cmp
iret
xlat
add
sbb
adc
cmp
pop
pop
jp
roll
push
ja
adc
lea
lds
scas
xchg
xchg
cmp
xor
imul
jmp
call
roll
pop
adc
aas
sbb
or
fwait
mov
mov
cmc
and
movsl
lods
mov
out
rcr
push
jecxz
std
pop
xor
mov
adc
mov
sub
dec
ss
fs
xchg
inc
inc
jae
jmp
lret
test
cwtl
enter
jge
xor
mov
xor
xchg
xor
jno
paddd
inc
mov
pushf
pop
iret
xchg
add
repz
dec
jne
and
lahf
sbb
out
lcall
mov
add
mov
mov
mov
push
imul
pop
sub
and
mov
fbstp
iret
in
push
and
sub
scas
mov
mov
jecxz
xchg
jno
stos
and
mov
add
mov
ret
inc
sbb
cmp
push
jl
or
pop
fstps
xchg
jbe
inc
bound
outsl
add
test
divl
xchg
subb
addr16
outsb
orl
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
mov
xor
mov
add
mov
pop
pop
pop
leave
ret
push
mov
sub
push
movl
cmpl
je
cmpl
jle
jmp
push
push
push
push
call
mov
dec
mov
jmp
push
subl
mov
xor
xor
add
mov
mov
and
mov
mov
mov
xor
mov
movl
cmpl
je
cmpl
ja
jmp
push
call
xor
xor
dec
mov
jmp
movl
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jl
jmp
push
call
cmpl
jne
mov
inc
mov
jmp
movl
or
mov
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jb
jmp
push
push
pushl
push
push
pushl
call
jmp
mov
movl
cmpl
je
cmpl
jle
jmp
push
push
pushl
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
sub
and
jmp
xchg
fdiv
test
xchg
sbb
gs
incl
orl
pop
in
shll
mov
outsb
and
cmpsl
test
out
in
mov
int3
ljmp
inc
lods
pop
lods
xor
popf
xor
fnsave
lock
in
cmpsb
hlt
xor
ficompl
lea
sbbl
add
add
push
nop
mov
mov
jmp
notl
decl
repz
stc
or
mov
cmp
scas
cmp
or
jg
icebp
pop
mov
and
pop
sub
xor
cmp
test
int3
dec
ja
fnstcw
loope
mov
push
push
mov
pusha
and
jg
cltd
add
jnp
out
mov
das
jge
jmp
dec
mov
pop
push
cmpsl
inc
inc
call
mov
imul
js
arpl
mov
push
movsl
clc
insb
mov
lcall
adcb
jbe
cmpsb
in
repz
mov
sbb
mov
leave
nop
pushf
arpl
repz
pop
insl
sbb
push
adc
xor
dec
mov
xlat
enter
sbb
test
sarl
cmpl
inc
cmc
xchg
pop
fisubrs
jae
ja
and
repz
jl
or
clc
lahf
pop
xor
hlt
aam
imul
push
mov
inc
arpl
sbb
sub
xor
or
or
adc
and
and
mov
testl
fsubl
mull
mov
mov
lret
mov
andl
inc
push
dec
in
addr16
pop
leave
sbb
addr16
inc
mov
cmp
clc
pop
adc
pop
ficoml
push
andb
mov
add
popa
cmp
fdivrs
fcmovne
push
xchg
mov
push
nop
cmp
and
jmp
ja
jl
frstor
imul
and
inc
pop
dec
icebp
jnp
inc
mov
jp
or
sbb
fstl
jle
test
xor
push
xchg
cwtl
cld
mov
jne
and
mov
lock
lahf
pushf
xchg
mov
cmp
out
adc
and
add
nop
add
push
test
push
inc
dec
sbb
cmp
sti
xor
sub
sbb
out
outsl
leave
xchg
mov
push
and
inc
add
icebp
mov
stos
add
out
inc
orb
xor
roll
call
xchg
or
inc
mov
cmpl
push
insl
and
adc
push
xor
mov
fidivrs
adc
sub
cli
mov
push
rorb
imul
sbb
imul
xor
cmpsl
and
stc
rcll
push
out
jge
jo
push
jmp
xchg
or
out
cli
popf
jne
nop
add
icebp
inc
add
mov
in
test
adc
fsub
sub
sub
insb
and
repz
jnp
rorl
rcrl
leave
popf
dec
jmp
popl
into
xchg
addl
sbb
adc
xchg
outsb
out
cs
adc
push
mov
arpl
adc
cmp
in
loopne
rcll
test
jae
dec
sbb
sub
ret
dec
out
hlt
aam
jmp
xchg
push
popa
scas
mov
cmpsb
xor
fcmovne
rclb
push
inc
or
mov
in
inc
sbb
xchg
dec
sub
bnd
ret
test
in
sbb
xchg
repnz
int3
and
pop
mov
xchg
cli
test
push
mov
je
jecxz
sub
arpl
sti
and
inc
clc
push
in
push
inc
xchg
xor
shll
xchg
dec
lahf
inc
stc
out
sbb
pop
mov
push
sub
jecxz
push
jo
dec
mov
int
sub
pushf
cmc
pop
std
xchg
les
inc
inc
ds
jb
inc
das
popf
mov
dec
mov
sbb
fistpl
mov
sbb
inc
fwait
es
sbb
aam
popf
and
popl
push
lar
xchg
fwait
in
call
pop
mov
lods
inc
loop
xchg
pop
orb
or
push
stos
call
mov
pop
push
cld
mov
into
or
addr16
jg
push
dec
cmp
cmp
pop
call
addb
lods
mov
je
loope
sbb
push
arpl
ja
cmc
push
dec
lcall
lcall
jge
lock
cmpsl
addr16
sub
add
sbb
pop
inc
mov
pop
fsubrp
jge
mov
jbe
repz
loopne
adc
and
sbb
rcr
inc
push
mov
insb
fisubrl
out
push
jmp
hlt
mov
call
xlat
aad
in
gs
test
cmp
loopne
jnp
cmp
mov
cmp
sbb
mov
clc
xchg
clc
aam
inc
aam
mov
jb
imulb
insb
inc
sarl
sahf
out
popa
push
xlat
rclb
sub
into
xchg
rorb
movsb
shr
push
lods
sub
dec
and
mov
clc
popl
xchg
je
int
sahf
out
inc
fstpt
mov
xchg
outsb
mov
sub
push
adcl
xchg
pop
mov
inc
sarl
sub
push
test
orb
fidivrs
mov
mov
mov
lea
add
pop
jb
xchg
jb
push
xchg
add
pop
aam
fldenv
shrb
lds
leave
xchg
incl
rcrb
push
mov
mov
mov
aaa
cmc
decb
jae
mov
xchg
out
movsb
push
popf
dec
inc
xor
aad
jmp
inc
ficomps
sub
and
in
xor
int3
out
sbb
notb
ljmp
pusha
lcall
sub
int3
fimuls
jl
sub
inc
mov
lock
push
jo
mov
dec
add
add
fcomps
xor
movsb
stc
test
call
jmp
mov
add
inc
push
hlt
ficoml
mov
int
andl
fimull
es
push
sub
xorl
push
gs
enter
and
adc
push
cmp
adc
xor
dec
lock
out
jbe
int
dec
mov
in
movsb
in
sub
push
and
ret
pop
push
fildll
jl
pop
mov
mov
dec
xchg
push
xor
sub
and
data16
dec
dec
ret
xchg
mov
cmp
push
ljmp
lds
js
xchg
sahf
pop
xor
jecxz
and
outsb
into
dec
pop
loopne
jns
in
push
nop
pushf
sub
bnd
stos
mov
jo
sahf
movsb
and
mov
inc
insl
jg
xchg
add
push
lds
pop
incl
cmc
and
mov
arpl
xor
sbb
sub
xchg
push
ja
jecxz
cmp
repnz
in
pop
call
aam
adc
pcmpeqw
inc
scas
pmullw
xchg
xchg
inc
mov
add
mov
sbb
loop
imul
inc
adc
jmp
mov
dec
outsl
sub
mov
add
lcall
pop
js
dec
and
inc
adc
inc
lock
clc
sarb
sbb
aam
xchg
inc
push
and
hlt
adc
xor
adc
fdivrs
mov
cwtl
push
fldenvs
icebp
int3
ret
shll
in
insb
fldl
or
jg
lret
jp
out
hlt
and
xor
into
push
shrb
mov
mov
sbb
dec
cmp
and
and
sub
orl
test
pop
jmp
inc
mov
shrd
insb
lret
sbb
cmpsb
fs
lods
adc
int3
push
xor
insl
add
mov
xchg
jmp
xor
add
add
jo
xlat
loopne
mov
ret
push
hlt
jb
stos
mov
fwait
call
ja
add
dec
cltd
jge
clc
insl
mov
mov
clc
mov
js
js
and
cld
out
into
push
mov
pop
les
enter
leave
cltd
cmp
outsb
add
fwait
pop
inc
insb
jmp
clc
xchg
pop
out
daa
jmp
in
push
adc
ret
out
sbb
nop
idivb
push
dec
dec
int
cli
pushf
mov
test
loopne
imul
jmp
pop
sbb
or
sbb
sahf
es
dec
lret
jb
pushl
push
dec
jp
cld
sub
fmul
sbb
fadd
sbbl
cmp
jecxz
mov
loopne
std
lret
fistpl
stos
in
repnz
aam
mov
aam
inc
leave
aam
shll
loopne
fildl
lds
fsubrl
sub
adc
sub
mov
cwtl
rol
xor
push
lods
xor
or
sbb
sub
in
aaa
lcall
sub
call
cmp
scas
arpl
pop
sbbl
pop
test
adc
or
sahf
popf
icebp
movb
jns
loopne
hlt
ret
pop
fwait
xor
movb
orb
push
cld
dec
mov
mov
data16
leave
adc
in
pop
xlat
xchg
and
shrl
cmc
sub
xchg
out
out
nop
dec
mov
and
cmpsb
push
arpl
fs
dec
scas
roll
pop
xchg
add
fimull
jp
mov
push
out
adc
pop
call
mov
push
inc
sbb
imul
jge
inc
das
fdivl
or
mov
adc
sbb
sarl
sub
xchg
lret
sub
xor
xorb
jo
jmp
jns
in
mov
stos
mov
lods
arpl
inc
imul
xlat
jo
repnz
xchg
xchg
push
loope
jno
mov
cld
fstp
nop
sbb
push
dec
insb
xchg
sbb
ret
fidivs
test
lea
and
gs
in
repz
mov
lret
mov
sbb
mov
aam
push
push
fisubl
lret
addr16
pop
fcompl
movsl
das
cmc
adc
rcll
push
xchg
mov
pop
popl
lods
mov
jb
push
or
in
pop
sbb
fstps
add
cli
xorl
cmpsl
jg
add
call
inc
in
or
hlt
jmp
out
sub
mov
adc
dec
ret
and
fimuls
loopne
jecxz
test
and
jp
dec
out
xor
sti
cmp
lods
pop
test
mov
sbb
jne
sbb
push
mov
cmpsb
in
jg
movl
cmpsb
rcll
dec
stos
jne
jne
mov
add
cwtl
mov
mov
stc
or
adc
inc
pop
dec
mov
xlat
xchg
mov
mov
inc
lret
fistpll
mov
pop
repz
ljmp
mov
sbb
and
sub
cmc
ret
imul
push
sar
aas
lock
imul
mov
jno
push
dec
or
in
lcall
dec
lret
pop
cs
popf
xor
pop
push
arpl
fwait
adc
addl
pop
dec
notb
lret
mov
add
push
ficompl
mov
dec
out
shr
push
dec
push
sbb
mov
xor
repnz
dec
xor
das
hlt
xchg
popf
jecxz
arpl
inc
fidivs
addr16
in
push
out
sub
popf
xchg
bound
sub
call
push
jnp
sti
xor
mov
int3
add
jne
cwtl
test
mov
lcall
insl
in
movsb
scas
movsb
fidivl
mov
dec
scas
popf
hlt
sub
lcall
add
loopne
repz
testl
lea
gs
jl
and
xor
es
push
inc
out
das
adc
outsl
mov
psubsw
test
clc
gs
sub
sub
jmp
cmp
stos
lock
xlat
xor
add
fwait
test
je
rorl
xor
cli
add
pop
mov
dec
xor
jnp
push
dec
xor
cmpsl
fs
sub
test
sbb
adc
insl
imul
scas
insb
cmp
inc
sbb
adc
test
and
adc
mov
ret
mov
in
jnp
dec
mov
cwtl
and
pop
in
mov
icebp
xchg
lock
xor
push
or
push
push
mov
pop
add
pop
or
jno
xor
repnz
jmp
fistpll
inc
jg
aam
mov
faddl
in
adc
mov
sti
xchg
inc
stos
scas
lret
sub
pop
push
je
mov
xchg
ror
xor
fists
mov
das
jne
sbb
inc
jle
push
jbe
adc
push
repz
push
dec
movsl
mov
pop
fnstcw
jmp
xchg
mov
cmp
imul
cli
sbb
adc
shl
cli
mov
and
jmp
sub
mov
repnz
pop
popa
je
ret
adc
movsl
daa
inc
in
pop
mov
adc
adc
jno
dec
add
sbb
orl
cltd
or
lahf
push
imul
shlb
test
jno
xor
punpcklwd
cmp
hlt
inc
lcall
pop
into
pop
lcall
pop
jge
out
pop
pop
mov
dec
fs
dec
rcll
mov
cs
in
mov
popf
push
adc
jb
in
shr
pop
dec
test
adc
push
addb
add
inc
push
sbb
insb
sbb
lret
cmp
gs
jg
arpl
pop
mov
in
cmpsl
push
jne
push
in
sbb
fwait
stc
aaa
jns
sub
pop
outsl
jge
mov
sbb
sub
fs
pop
lock
repz
lret
cld
lcall
sub
int
pop
lea
sahf
jecxz
mov
jecxz
cwtl
fwait
repnz
mov
xchg
add
sbb
dec
jns
xchg
aas
aad
rorl
xor
sahf
cmc
das
sub
mov
push
jg
jge
mov
data16
and
sti
fiaddl
dec
pop
lds
adc
fsubrp
xchg
popa
mov
je
in
fisubs
imul
adc
mov
repnz
lods
faddl
add
imul
testl
ss
sarb
mov
or
jne
and
xor
int
into
rolb
cmp
mov
cmp
cltd
dec
in
jno
adc
call
xor
xchg
cmc
jle
push
test
cmp
test
scas
test
clc
mov
addr16
enter
xchg
into
sub
and
pop
push
push
xor
lcall
cmp
pop
shl
push
mov
mov
loope
lods
insl
popw
lods
jmp
mov
das
jb
aaa
mov
nop
jb
mov
inc
inc
adc
cmp
incl
ss
insl
icebp
out
movsb
les
add
rorb
lock
shrb
stos
fsubrl
sbb
add
clc
ret
fistps
push
aad
iret
mov
es
jns
ss
cmpb
or
arpl
cmpsl
cmp
sti
and
jle
and
add
fisubl
ss
scas
out
scas
out
pop
icebp
scas
sbbb
mov
jne
fisttpll
adc
cmp
pop
fucomp
mov
jg
cmp
mov
xlat
fdivr
xlat
xor
aas
imul
mov
push
mov
xchg
loop
push
repnz
arpl
sub
in
or
test
shll
adc
mov
cmc
sti
cltd
sbb
jp
in
jle
sub
jnp
cmp
orb
stc
xchg
and
cmp
inc
fnop
mov
mov
shrl
cltd
arpl
in
mov
mov
cld
cmc
in
sbb
and
gs
add
jae
cs
xor
ja
out
test
aam
push
xrelease
mov
outsl
sti
mov
jbe
cmp
pop
jae
push
push
lret
xchg
mov
mov
dec
loopne
std
jnp
pop
pop
or
or
inc
mov
push
test
mov
fildll
adc
xchg
rcl
mov
es
cmp
mov
cs
pop
mov
fdivrp
testb
sahf
loop
int
cmp
sbb
popf
jl
movsb
push
jnp
dec
mov
cmc
cmpsb
ljmp
xor
xor
sbb
sub
mov
xor
push
cmp
push
and
mov
cwtl
mov
cmc
shrl
fldenv
jo
imul
inc
addl
test
rcll
cs
mov
push
or
sub
sbb
das
and
rolb
adc
mov
adc
lds
int
out
outsb
leave
jge
mov
stc
mov
add
in
pusha
pop
adc
std
xor
cmp
mov
movsl
in
push
add
mov
ds
jno
inc
fnstenv
cwtl
mov
mov
cs
and
cld
inc
fildll
jp
dec
cmpb
push
pop
jge
push
data16
pop
mov
in
filds
mov
lret
dec
jmp
xchg
sbb
inc
ja
rol
mov
xchg
or
cmp
daa
adc
sahf
loopne
pmulhuw
mov
pop
repnz
sub
push
sbb
out
pop
int
xor
xchg
js
mov
push
pop
add
scas
adc
and
xlat
shll
out
mov
or
stos
shr
icebp
cmp
cmp
adc
push
stos
jp
sbb
out
adc
push
pop
mov
jecxz
jmp
jb
testl
fstpl
jbe
mov
dec
cs
vmovntdq
jle
lods
loopne
jns
hlt
jae
or
xchg
and
adc
jmp
cmp
push
xor
and
cmp
fbstp
add
ss
push
shll
jo
sub
and
popa
test
sbb
int3
rclb
icebp
dec
jle
ficompl
aad
cs
xor
or
in
mov
jge
nop
push
and
push
or
and
repz
negl
push
jo
inc
loopne
or
sti
imul
xor
ljmp
mov
dec
mov
jle
lods
add
iret
aad
cmp
xlat
jae
js
adc
mov
add
mov
je
mov
inc
std
cmpsb
xchg
sti
pop
add
mov
stc
sbb
xchg
fisubl
mov
ds
addb
enter
out
fisttpll
mov
test
sub
sub
mov
dec
test
mov
dec
push
push
shlb
pop
pushf
jae
mov
jp
mov
mov
inc
sar
adc
stc
lahf
dec
scas
insb
insb
insl
mov
inc
xlat
xchg
sbb
cwtl
dec
mov
hlt
loope
sbb
pop
lcall
shl
or
push
dec
dec
jp
mov
std
or
jg
and
ret
ja
jle
int
adc
add
xor
or
je
mov
mov
mov
scas
cwtl
dec
xchg
pop
cltd
cmpsb
push
mov
sub
add
es
mov
dec
sub
scas
jmp
test
lret
and
mov
jb
aas
rorl
add
ss
in
xchg
movsb
push
in
decl
adc
mov
call
dec
cmp
insb
cwtl
gs
mov
scas
insb
pop
inc
pusha
jg
sbb
cs
pop
ds
adc
out
xor
popf
and
cmc
adc
or
icebp
jnp
test
add
sahf
sub
pop
xrelease
jg
lahf
enter
jmp
add
dec
or
loop
add
fwait
ret
adc
push
push
lea
ret
andl
lcall
xchg
jg
push
and
sbb
hlt
and
lods
cmp
in
rcrl
adc
and
fwait
mov
or
sbb
pop
scas
sub
jle
jno
into
mov
in
dec
push
das
pop
add
fwait
pop
pop
rclb
cmp
rcll
xchg
clc
inc
push
cmp
push
int
jbe
jle
sbb
jno
sub
lret
lcall
inc
imul
sbb
movsl
sub
lock
insl
cld
dec
fbstp
cmp
cmp
sti
push
sti
add
jl
ja
cmp
jmp
cmp
push
mov
adc
or
test
mov
arpl
faddl
mov
inc
xchg
into
clc
je
bound
call
add
push
in
aaa
ret
mov
fwait
inc
fdivs
enter
aad
cwtl
sub
mov
rclb
add
lds
mov
mov
mov
pop
ja
out
jbe
jo
mul
ds
sbb
cld
jg
dec
mov
jge
jecxz
scas
mov
xchg
xchg
mov
rcrb
mov
scas
leave
jbe
into
lods
data16
dec
gs
push
sahf
pop
popa
mov
mov
mov
inc
push
adc
pop
cmpsl
push
and
dec
xchg
pop
lcall
or
or
mov
xlat
jle
js
stos
repnz
int
mov
add
mov
mov
inc
pop
cli
adc
xchg
icebp
adc
jle
sarb
imul
cmp
or
fldenv
mov
hlt
xor
stos
fnstcw
out
movsl
pop
xor
fistpll
jbe
or
negl
mov
sbb
iret
inc
xchg
pushf
rclb
mov
mov
pop
int3
mov
repnz
pushf
pop
out
cmp
jb
cwtl
push
inc
out
and
cld
mov
cs
cmp
pushf
adc
push
mov
sub
cwtl
aas
inc
stos
push
mov
inc
pop
mov
pushf
jns
push
in
pop
sbb
and
jnp
out
mov
cli
pop
push
stos
js
scas
jae
leave
pushf
dec
cmpsb
mov
aad
pop
sbb
jo
enter
test
sbb
push
or
cmpsl
and
sub
xchg
xchg
imul
cmp
jnp
push
pop
cmp
xlat
adc
push
mov
movsb
imul
imul
xchg
sub
sbb
cs
xchg
pop
cmp
loopne
loopne
aam
js
insb
pop
mov
mov
pop
pop
je
aam
popa
push
adc
fcmovnbe
gs
insl
incl
jp
mov
aam
aaa
rorb
aam
loop
sahf
loope
roll
and
sbb
call
popa
push
mov
shll
test
jl
jne
and
ret
mov
adc
sbb
jecxz
adc
push
inc
lcall
pop
add
and
inc
sti
add
lds
dec
test
pop
lcall
pusha
cli
clc
jle
sub
into
mov
mov
loopne
push
dec
jle
aas
mov
cmpsb
aaa
pop
lds
stos
repnz
mov
js
and
mov
arpl
mov
lock
jle
dec
xchg
sbb
sub
mov
pop
addb
fcompl
jns
lea
arpl
shrl
mov
adc
xchg
push
rolb
push
ficompl
mov
push
aam
or
or
dec
iret
pushf
inc
enter
or
leave
test
xchg
shlb
aad
sbb
jo
cs
pandn
mov
and
cmovle
jns
sbb
jmp
pop
pusha
pop
mov
leave
push
rcr
cmpsb
push
cmc
fbld
and
pushf
subb
ds
xor
aam
enter
jnp
cmp
add
fsubrs
or
popa
cli
test
inc
mov
mov
and
divb
cs
or
repnz
cld
popa
out
into
adc
arpl
xor
push
sub
js
inc
sub
sbb
inc
test
mov
sub
sbb
inc
rorb
xchg
push
dec
in
xchg
sti
jnp
lret
mov
mov
adc
inc
lahf
pop
mov
movsl
xlat
stc
or
addr16
adc
idivl
cwtl
sub
inc
pop
stc
lods
adc
int
inc
push
sbb
sub
repnz
and
fsubrs
shl
sbb
in
pop
loope
lahf
dec
mov
adc
jne
mov
in
jle
or
sbb
dec
xchg
jecxz
sub
sub
repnz
jne
cs
jp
pop
pushf
pop
lea
mov
xchg
jne
out
push
and
sub
in
xchg
pop
ja
sahf
stos
mov
push
mov
xor
pop
cmp
jne
nop
mov
bound
not
shll
adcl
jb,pn
stos
lods
mov
jmp
push
xor
xor
jl
rcrb
cld
mov
aad
cmp
push
ret
cmp
mov
lds
lret
dec
int
sub
negb
lret
cmp
or
mov
stos
sub
test
sbb
cmpsb
push
push
and
adc
js
popa
sub
mov
and
mov
loop
push
xchg
bound
lret
sub
call
sub
xchg
and
mov
jp
sarb
pop
pop
inc
xchg
mov
mov
pop
inc
pop
dec
cmpsl
shrl
xchg
stos
mov
cmc
cmpsb
popa
mov
divb
es
dec
sbb
dec
dec
jbe
push
xchg
jno
popa
mov
fcomi
sub
jmp
data16
jmp
mov
sub
adc
icebp
and
flds
lret
sub
add
shr
jecxz
sbbl
jns
cmc
sbb
mov
dec
add
ret
cmpsl
clc
and
xchg
fbstp
cmp
scas
clc
rolb
negl
and
push
xor
pop
jecxz
mov
sarl
cmpsl
repnz
pushf
xchg
jno
add
mov
sub
subl
xchg
mov
leave
xchg
lea
int
popa
cmpsl
pusha
sub
je
in
xchg
rcl
adc
adc
push
push
loopne
push
outsl
mov
leave
jp
dec
cmp
out
xor
es
adc
sbb
mov
scas
dec
jmp
xor
jle
call
and
into
mov
sbb
dec
inc
cli
sbb
pop
add
dec
adc
push
testl
xor
sbb
les
mov
icebp
je
dec
mov
int
mov
mov
pop
cmp
clc
push
repnz
repz
inc
sub
cmp
cs
sbb
sbb
jge
ljmp
notb
mov
jg
in
ds
ret
push
aaa
int3
mov
dec
les
sbb
in
push
popf
xchg
jge
pop
jg
jns
jns
and
pop
dec
and
dec
fidivs
in
int3
in
jg
testb
cwtl
movsb
rclb
negl
js
cmp
sub
lock
addb
jp
getsec
lret
lods
cmp
mov
out
mov
add
out
bound
sarl
and
mov
and
inc
cld
inc
xor
or
sub
adc
or
xor
subl
dec
add
ficompl
lods
inc
clc
call
cs
in
test
dec
xor
push
inc
shlb
push
xor
pop
lea
aaa
inc
jle
imul
adc
mov
loope
test
clc
test
mov
sub
pushl
shrl
xor
lcall
mov
push
add
data16
fstl
mov
dec
and
popf
insl
test
xchg
and
sub
dec
inc
cmp
fsubp
in
aaa
add
or
int3
lcall
cli
push
mov
js
rorb
pushf
sub
fwait
push
push
xchg
rolb
adc
and
enter
lock
outsb
stos
imul
pop
pop
loop
enter
ret
popa
sub
push
xchg
fwait
mov
mov
pop
jo
pop
push
fsubrl
xor
xor
pop
sub
std
xor
sub
jnp
sub
shlb
inc
and
mov
sbb
push
sub
xchg
push
loop
jmp
inc
sbb
pop
jl
mov
ds
jne
ljmp
js
jle
adc
xor
je
mov
adc
lods
mov
mov
mov
dec
call
sahf
add
add
inc
mov
sbb
and
cmp
xchg
adc
arpl
shlb
dec
rolb
push
out
and
stos
out
call
nop
in
sahf
aad
inc
or
shll
fimuls
aad
mov
mov
push
lret
pop
lahf
add
inc
out
mov
hlt
outsb
arpl
xchg
adcl
and
arpl
jbe
movsb
and
ret
scas
cmp
aas
cmpsb
adc
stos
and
add
std
mov
pop
ss
pusha
pop
dec
push
loop
es
int
out
mov
jo
cmc
xor
sbb
jge
scas
xchg
jecxz
addr16
out
and
sbb
push
or
lahf
in
jmp
stos
test
jne
pop
cmpl
sub
adc
call
pop
sub
daa
hlt
cmp
inc
cmpsb
cltd
mov
inc
fwait
stos
call
sub
ds
pop
xlat
nop
fbstp
cli
or
push
out
in
into
icebp
add
aaa
je
cmp
loope
fs
out
addr16
dec
in
out
inc
xchg
loopne
into
clc
loopne
lret
inc
pop
lock
adc
insb
adc
scas
pop
pop
rcl
mov
hlt
mov
test
push
push
fildl
mov
or
mov
outsl
pop
adc
loopne
adc
daa
adc
cli
lret
insl
inc
jne
and
add
fwait
fwait
dec
stc
orl
lods
jp
lea
inc
mov
repnz
iret
aas
or
fsts
push
xchg
mov
mov
mov
push
es
pop
and
leave
mov
outsb
hlt
cmp
icebp
mov
sub
pop
insl
sub
je
jp
out
cltd
jmp
add
loop
push
call
push
call
sub
test
inc
inc
inc
enter
pop
mov
sbb
test
inc
pop
sub
out
xchg
insb
sub
aam
repnz
add
push
gs
cmp
mov
cmp
cmp
ss
mov
imul
mov
mov
inc
lock
and
xorl
mov
movl
cmpl
je
cmpl
jle
jmp
pushl
call
cmpl
jne
xor
add
dec
mov
mov
dec
mov
jmp
jmp
push
movb
movsl
mov
call
addb
dec
leave
jle
ficomps
in
movsb
ret
lds
int
cmp
jge
mov
sbbb
shrl
add
mov
pushf
jl
call
mov
push
icebp
push
push
dec
jb
notl
sbb
pop
fldenv
jo
ja
outsl
pop
and
adc
push
xchg
xor
and
fsubrs
xchg
lret
xor
fldcw
nop
stos
xor
add
cmp
add
pop
cmp
out
rorb
imul
pop
sbbb
rcll
negl
sub
popa
jle
and
fsts
orb
fstpl
fisubs
movsl
cmp
dec
ret
loopne
and
je
aam
pop
push
pop
mov
mov
lock
adc
pusha
pop
add
sbb
pushf
cmp
in
repz
sbb
push
or
clc
js
inc
inc
jae
xor
mov
or
orb
andl
mov
adc
push
sarl
mov
out
js
mov
insb
push
test
leave
mov
lahf
jne
or
lret
stos
push
lock
vmwrite
cmp
fwait
push
jne
insl
mov
wbinvd
fwait
xor
outsb
mov
leave
icebp
pop
sarl
pushf
fcoml
adc
mov
push
mov
repnz
inc
mov
or
mov
fisttpll
xchg
push
aas
lcall
test
sbb
inc
cli
inc
popa
cltd
icebp
adc
pop
das
jp
daa
sbb
dec
lea
jle
loope
lahf
leave
xchg
enter
inc
icebp
mov
out
xor
sub
imul
add
jbe
adc
push
dec
cli
push
std
in
mov
ja
mov
push
add
inc
js
mov
and
cmp
fsubs
shlb
adc
dec
fdivl
sub
mov
sbb
fistl
push
sub
enter
ffree
mov
dec
cmp
stc
jl
mov
mov
movsl
cmp
ja
scas
ss
and
call
movb
cmp
mov
out
test
push
mov
jp
dec
xor
dec
loopne
inc
insb
push
mov
mov
mov
xor
push
xchg
or
dec
inc
cltd
mov
adc
lock
fdivr
mov
or
pop
orl
and
xchg
adc
mov
ret
and
daa
inc
jg
ret
sub
outsl
dec
push
call
notb
jns
in
mov
sbb
jg
in
cmpsb
push
or
pop
cmp
ds
enter
mov
out
add
sub
fstps
cmp
pop
fdivr
sub
lea
mov
xchg
ljmp
adc
mov
fldcw
cmpsb
lds
mov
cmp
scas
pop
jns
mov
stc
icebp
clc
and
xchg
cld
fwait
jg
inc
out
xor
cld
aam
int3
xchg
sti
fcmovnb
or
jecxz
jle
enter
shrb
shlb
test
jmp
jge
mov
inc
xchg
inc
sbb
out
jne
ret
out
ja
add
add
xor
add
cwtl
je
jmp
mov
jo
hlt
sub
pop
push
icebp
inc
scas
out
pushf
outsl
xor
aad
jecxz
sar
outsl
les
xchg
daa
mov
mov
mov
xor
addr16
ja
push
adc
jecxz
mov
in
push
cmpsb
cld
pop
xchg
cmpb
jne
xchg
in
lock
jno
enter
sbb
out
inc
insb
repz
jp
in
outsb
ljmp
jge
test
pop
push
loop
notb
adc
push
and
mov
adc
lahf
mov
or
xor
inc
out
push
inc
pop
cmp
loopne
out
test
pop
imul
jl
mov
cmp
jb
pop
lods
pop
add
fdivrl
testb
out
scas
fisubrs
jb
cmp
sets
inc
fcompl
aaa
xchg
fiaddl
cmpsl
cmp
ja
xor
js
addl
loop
add
push
outsl
fimull
outsl
push
pop
lret
fucomip
mov
add
mov
push
shll
pop
or
out
dec
shlb
jo
es
push
das
mov
enter
mov
gs
jecxz
mov
and
pop
cld
out
in
not
lret
out
sbb
out
bound
mov
mov
fstpl
or
mov
sub
in
mov
jg
js
jo
jge
imul
repnz
xchg
mov
call
in
mov
mov
enter
pop
mov
inc
xor
jp
or
add
cs
ret
jmp
mov
popf
daa
fcompl
cmpsl
ljmp
and
push
mov
repz
jl
mov
sahf
cltd
sti
imul
mov
sti
addl
lock
xor
jnp
fdivrs
int3
ja
nop
ret
ljmp
add
testl
clc
add
lds
xor
js
sub
fnstenv
insb
dec
or
dec
andb
sub
xchg
into
lahf
inc
xchg
test
push
imul
lea
xor
push
sar
and
pop
test
jle
pop
mov
jnp
mov
mov
shlb
cltd
push
mov
notl
das
xor
dec
test
mov
cmp
pop
adc
out
lods
outsl
pop
cli
iret
mov
daa
insl
cmp
hlt
in
push
scas
jmp
jns
inc
xchg
cmp
inc
cmp
inc
mov
add
lahf
cwtl
and
mov
xor
out
movsl
or
into
aas
pop
xchg
sti
mov
sbb
and
xchg
inc
add
cmp
mull
inc
push
cwtl
and
sahf
sbb
sbb
movsl
pusha
lds
xchg
xor
cmc
mov
xchg
out
xor
insl
call
sbb
leave
sbb
in
dec
aam
mov
in
mov
push
mov
mov
jg
jb
loope
dec
ss
or
jge
xchg
push
int3
adc
test
sbb
mov
and
sub
cmp
das
sub
aaa
sbb
pushf
popf
push
imul
pushf
in
hlt
in
xchg
or
pop
imul
cmp
push
and
sti
inc
vmwrite
pop
mov
pop
aad
pop
test
fs
insb
cmc
xchg
rcr
sbbl
in
fiaddl
or
fcmovnu
test
xchg
push
jmp
int3
andl
fdivrs
movsl
jns
push
xchg
icebp
mov
aam
add
insl
xchg
mov
jne
and
cmpsl
jg
sub
scas
push
ficomps
or
pop
cmp
test
push
pop
ja
push
pop
test
and
cmp
sbb
jns
cmc
ss
dec
inc
fs
adc
inc
sbb
test
shll
fdivs
nop
es
inc
mov
and
pop
gs
adc
int3
ret
xchg
sub
repz
sbb
push
jbe
push
and
mov
sbb
sbb
mov
adc
test
push
fwait
movsl
xchg
push
or
push
in
or
shr
mov
sti
lcall
flds
insl
arpl
jp
fidivl
sbb
es
mov
pop
test
xor
jg
icebp
int
test
adcl
js
xchg
xchg
mov
pusha
aaa
arpl
dec
je
or
movsl
sub
adc
es
movsb
mov
enter
add
in
push
jns
mov
jl
xor
add
test
std
add
sti
inc
fs
lahf
mov
add
testl
fwait
movsl
mov
test
hlt
xchg
sub
sbb
sbb
dec
test
fisubrs
cld
pandn
mov
cmpsb
adc
sub
pop
shlb
sub
sub
imul
call
dec
inc
jno
mov
mov
shll
dec
fnsave
adc
xor
inc
cmpsl
cs
fs
in
incw
inc
mov
sub
testl
adc
add
notb
shl
mov
leave
xchg
sahf
cltd
add
out
jg
mov
push
and
test
xchg
faddl
dec
jge
fdivl
mov
jbe
mov
sahf
dec
pop
mov
jns
mov
gs
iret
call
pushw
jb
loop
sbb
push
movsl
nop
pop
arpl
in
test
push
sub
ss
shrl
xor
push
push
sarl
mov
scas
jp
test
cmp
mov
in
pusha
xchg
test
test
aaa
dec
ret
pusha
jle
std
aad
popa
testl
pushf
cmp
xchg
nop
or
xchg
jl
pop
mov
lret
xor
cmp
xchg
xor
mov
push
jbe
cld
aas
test
stos
fmull
adc
push
jecxz
mov
jo
cld
sbb
jmp
jg
push
in
jno
leavew
pop
add
out
les
bound
stc
int
pop
out
stos
jecxz
push
aas
mov
seta
aad
into
jbe
aaa
jno
push
test
cmp
das
lret
call
xchg
xchg
out
mov
adc
inc
orl
stos
cmp
lods
daa
in
and
dec
push
and
xchg
outsl
push
negb
hlt
cs
dec
or
sub
aad
movsb
pop
or
mov
add
sbbl
scas
test
cmp
sti
loopne
test
or
in
cmp
outsl
lock
add
inc
adc
test
ret
inc
popa
xor
cmp
mov
cld
add
lret
idiv
mov
andl
mov
dec
mov
stos
pop
aad
push
popf
aam
dec
call
mov
dec
and
xor
subl
cmp
jo
or
add
and
jne
pop
mov
pop
aaa
mov
out
rcll
shr
sahf
mov
inc
mov
je
je
add
lret
out
mov
push
or
pop
dec
inc
and
lcall
push
push
flds
bound
ret
lahf
sbb
fwait
icebp
xlat
out
mov
sbb
fmull
adc
aaa
sub
in
cmpsl
aas
xlat
out
popf
ljmp
fs
lahf
push
into
rol
jl
loop
lret
sti
mov
pop
fld
mov
cmpsl
sbb
imulb
cld
scas
mov
cltd
pusha
xor
xor
xchg
push
neg
dec
data16
inc
outsl
sarl
or
xchg
mov
mov
jp
sahf
jmp
testl
gs
cltd
pusha
mov
cli
fldenv
cli
mov
nop
out
in
test
in
mov
or
and
pop
das
das
xor
push
insl
shrl
sub
push
popa
testl
mov
jl
ret
stc
retw
pop
stc
imul
stos
mov
xchg
mov
into
push
pop
addb
stc
add
jecxz
filds
or
add
popf
lods
cli
sub
jp
es
xchg
je
sti
popa
arpl
out
les
jecxz
imul
cs
push
pop
outsb
lock
and
in
cmp
add
push
cmp
jmp
add
lea
incl
jae
inc
xchg
push
in
test
mov
es
fdivrs
sub
mov
mov
push
out
rclb
fadds
lods
mov
insb
xchg
nop
call
icebp
push
push
xchg
dec
imul
dec
pop
and
ja
pop
xor
ljmp
push
jle
pusha
cmpsl
sbb
imul
jmp
jbe
mov
faddl
test
iret
ror
insb
and
inc
aas
loopne
mov
dec
lret
add
and
mov
nop
enter
xchg
cmp
xlat
dec
cmp
sbb
lret
push
xchg
mov
and
cmp
adc
adc
lahf
js
cmpsl
jge
sbb
sbb
or
cmp
fwait
test
push
out
arpl
sahf
out
sbb
cld
ja
cltd
imul
lret
pop
jb
in
push
adc
in
xor
aad
lret
inc
mov
lds
movl
add
jb
addr16
bound
inc
add
cmpsl
imul
sahf
add
cmc
arpl
xchg
xchg
xabort
fsub
loopne
mov
sbb
idivl
aam
lahf
xor
push
and
sub
dec
pop
clc
imul
jbe
and
scas
jecxz
sbb
xchg
je
pushf
cmp
pop
jecxz
jno
jmp
movsl
stos
mov
mov
iret
mov
lret
cld
or
push
sbb
sub
bswap
aas
and
mov
int3
pop
xor
push
lods
mov
mov
jno
test
in
mov
dec
cmc
mov
and
roll
mov
mov
mov
repnz
mov
icebp
sub
adc
and
pop
and
faddp
stc
enter
mov
xchg
mov
inc
kxorw
lea
cmp
push
cmc
out
es
push
jno
btr
sbb
lea
insl
test
les
out
aad
sub
popf
mov
mov
rorl
add
mov
pop
mov
pop
or
stc
jmp
mov
dec
dec
push
movsb
push
inc
mov
mov
adc
enter
stc
and
lods
pushf
lcall
mov
es
fldt
pop
sbb
cmp
fdivrp
stos
shll
in
loopne
or
sbb
pop
xor
lods
aam
sub
mulb
adc
mov
or
es
movsb
andb
sar
push
mov
popa
out
mov
filds
inc
and
shll
mov
loopne
mov
loope
inc
mov
push
mov
pop
filds
popf
aad
cs
popf
or
or
mov
jns
or
mov
xor
xor
es
addr16
inc
dec
cmp
scas
adc
sarl
sahf
dec
lods
pop
adc
ljmp
xorb
cmp
mov
imul
pop
jecxz
jl
insb
ds
sub
cld
pop
sub
and
sbb
seta
fcmovnb
inc
insb
pop
inc
mov
jge
cs
jno
inc
jnp
sbb
movsl
out
xchg
std
aaa
hlt
and
es
jmp
fs
jno
inc
fdivrs
lret
jnp
adc
sbb
jecxz
mov
inc
popa
scas
adc
pushl
mov
inc
repz
cmc
es
fsubrp
jb
xchg
cmpsb
adc
jbe
sbb
ss
rclb
cmpsb
pop
stos
mov
insl
push
mov
adc
xor
dec
sbb
jne
sbb
popf
outsl
cmpsl
ret
mov
pop
xor
jp
test
sti
sub
scas
sub
adc
aas
jg
out
jp
mov
cmp
mov
mov
jmp
fwait
shll
dec
les
je
cld
je
fisubs
sahf
insl
mov
adc
add
incl
imul
bound
mov
add
lock
in
mov
outsl
mov
xchg
cmp
movsl
add
mov
jns
fldt
sti
push
adc
stc
aam
xor
adc
xchg
cs
cmpsb
daa
lock
in
ret
out
lods
mov
xor
sbb
leave
cmp
cmp
mov
push
jno
pop
sub
dec
xor
pop
inc
jecxz
lds
mov
push
ljmp
outsl
pop
and
xor
aaa
sti
loope
mov
pop
out
clc
les
push
and
pop
orl
sti
lahf
inc
pop
push
scas
cmpsl
stc
inc
hlt
arpl
fistl
sbbb
jmp
shl
scas
xor
sub
scas
popf
push
scas
xchg
std
push
scas
mov
jmp
fsubs
mov
jmp
inc
adc
push
cmp
daa
imul
sbbl
push
push
sub
sub
ficomps
icebp
aas
gs
inc
stos
arpl
out
mov
mov
adc
adc
movl
xchg
sarb
idivl
cmp
xchg
filds
int
lods
adc
xchg
inc
ss
and
push
notl
add
add
mov
iret
loope
lds
mov
aam
adc
lcall
test
sbb
cli
or
inc
xlat
adc
jne
loop
pop
or
mov
lcall
push
lret
negl
xchg
rolb
int3
push
scas
sti
jl
repnz
loopne
adc
mov
icebp
jne
jg
pop
lock
mov
leave
test
sbb
mov
xor
mov
arpl
packsswb
pop
sbb
loope
sub
cmp
bound
icebp
cmp
pop
stos
mov
fs
leave
jnp
push
shlb
push
pop
mov
pop
scas
lock
mov
pushf
sub
int3
pop
jns
and
pop
xlat
dec
cmpsb
jb
jge
sbb
movsb
add
aam
mov
and
push
movl
cmp
leave
xchg
les
push
and
aas
lods
pop
data16
sete
cmp
cmp
loope
add
jns
mov
push
ss
mov
mov
add
movsl
rcr
std
mov
femms
or
mov
loop
adc
or
push
hlt
pop
xchg
pushf
ret
inc
cmp
mov
mov
test
dec
cmpl
jb
jg
push
pop
fdivrs
push
and
jbe
in
call
sbb
pushf
jae
fstl
aaa
pop
push
daa
pop
sub
xor
push
jno
xor
or
cmp
popf
push
push
addr16
dec
jle
lods
outsb
add
fwait
jle
andb
xchg
add
push
lcall
xor
int
sub
out
stos
add
inc
push
and
cmp
loop
addr16
leave
xchg
mov
sbb
push
push
imul
inc
mov
xor
mov
mov
fbstp
sub
out
lea
inc
jno
sarb
jmp
data16
mov
and
jmp
cmpsl
sub
sbb
and
movsl
outsb
or
idivl
cmp
pop
push
mov
es
push
dec
movsb
sbb
lret
xor
inc
sti
js
xor
xchg
sbb
or
sbbb
pop
cltd
and
sahf
fisttpll
ds
cmp
or
nop
inc
xor
dec
pop
aam
sti
jl
repz
cmp
xchg
loop
ljmp
mov
hlt
cmp
xor
sarl
mov
scas
fdivs
inc
pop
leave
mov
or
jecxz
adc
or
xor
sbb
fldenv
fwait
aad
mov
in
les
rol
out
push
or
or
rcrl
mov
out
fstpl
lods
xchg
fstl
ds
mov
inc
shrb
mov
push
mov
jmp
test
repz
sub
notb
int
xor
jb
xchg
int3
adc
pushf
sub
cmp
lahf
pop
mov
test
jle
pop
iret
orl
daa
inc
push
aad
sub
fsubrp
mov
push
das
add
or
or
cmp
lret
aaa
sub
int3
mov
jns
mov
xor
inc
negl
and
ret
cmp
cli
iret
in
js
jmp
adc
mov
pushf
xor
into
in
sub
aam
es
call
mov
adc
decl
sbb
cltd
ret
stos
dec
test
aaa
fnstcw
gs
mov
cwtl
negl
sbb
gs
data16
test
mov
jns
cli
idiv
lret
les
cmp
lcall
or
test
sbb
adc
sub
mov
add
lret
mov
rorb
pop
and
cli
push
sub
aaa
xchg
adc
jl
mov
jg
cwtl
dec
inc
sbb
scas
hlt
int3
xor
test
ret
jae
jp
je
lods
or
mov
ret
cmp
in
pusha
jl
scas
add
mov
out
cs
test
adc
cmp
insl
push
or
mov
push
and
pop
movsl
xor
pop
adc
mov
sub
xor
clc
popa
xchg
nop
xor
fdivl
jne
xchg
xchg
lret
mov
xchg
in
mov
scas
mov
cmp
ficoms
and
aaa
adc
jb
and
stos
jno
mov
call
je
cmpsb
int
std
mov
pop
jae
add
cld
mov
xchg
mov
xor
jbe
dec
icebp
jmp
clc
xchg
movsl
out
or
sbb
rolb
dec
sbb
std
stos
test
push
push
divb
mov
pop
ja
imul
mov
popa
or
jge
cmp
xchg
ljmp
mov
in
pusha
testb
xchg
sbb
jl
icebp
xchg
insb
nop
je
sti
popa
cmp
stos
dec
adc
push
push
aam
jmp
insl
shlb
sub
divl
call
lea
and
mov
xor
add
and
movsl
mov
loop
pop
adc
cmp
and
imul
or
ljmp
in
dec
out
or
inc
sbb
pop
jne
sbb
shlb
repnz
ret
lret
mov
std
lahf
dec
mov
mov
dec
xor
das
mov
mov
imul
mov
popl
push
add
lea
clc
das
jno
cld
mov
cmp
mov
lahf
cmc
jno
push
pop
sahf
push
outsl
push
lcall
clc
mov
push
maxps
std
cs
push
shrl
popa
cltd
mov
jmp
divb
and
cmp
dec
scas
add
mov
and
loope
jb
fsubl
and
orb
xorl
hlt
outsl
lcall
lea
cmp
das
aas
ret
cmp
xchg
xor
pop
jl
and
and
push
sub
cmovo
mov
int
out
enter
scas
ret
inc
or
and
ja
enter
adc
jmp
addl
sbb
cwtl
dec
jnp
hlt
lret
dec
movsl
repnz
sbb
mov
push
call
and
mov
xor
sti
in
in
stos
and
inc
call
inc
mov
xor
mov
and
daa
jns
adc
jbe
sahf
push
add
pop
test
shll
mov
jae
pop
mov
test
cmp
negb
les
fdivs
xor
notb
mov
sub
cli
mov
enter
ds
int3
ljmp
pop
push
shlb
lds
idiv
imul
loope
out
mov
pop
cwtl
std
loope
xor
jp
add
mov
test
hlt
data16
pop
mov
jo
cltd
mov
cmp
sub
jne
mov
outsb
in
pop
push
push
dec
add
stos
inc
out
cld
adc
imul
jo
cli
xchg
jmp
enter
rorb
jne
add
inc
lret
mov
jb
jmp
repz
sub
inc
xor
insb
mov
cmp
sahf
inc
add
and
std
jp
les
psrlw
pop
mov
cmpsl
test
bound
into
pop
aas
sub
sub
les
les
dec
rcr
clc
bound
mov
sbb
aam
xchg
inc
es
sbb
and
adc
push
test
mov
jne
mov
sub
dec
mov
arpl
jg
adc
mov
sub
cs
cmp
aad
inc
pop
adc
sub
pusha
mov
data16
pop
movsb
je
data16
xchg
xchg
in
cmc
ret
sub
aam
push
xor
es
fistpl
pop
jl
inc
add
hlt
sahf
lea
int3
call
dec
pop
idivb
fisttpl
dec
xor
dec
adc
lods
aad
and
add
shrl
sub
add
rolb
jmp
mov
das
adc
and
xchg
mov
daa
jbe
mov
lcall
movzwl
outsb
scas
lcall
pop
and
in
mov
shlb
and
stos
int3
sub
pushf
inc
ljmp
pop
pusha
pop
das
lret
mov
mov
or
jle
sub
aas
push
add
rcl
push
mov
popa
xlat
cmp
dec
lret
pop
push
in
test
inc
xor
loop
sub
jmp
ret
adc
rol
loopne
out
inc
popa
test
jmp
test
call
xchg
mov
push
fdivrs
nop
dec
insb
iret
mov
lds
xchg
cmpsb
jg
divb
call
sbb
imul
xor
and
jg
sbb
xor
aaa
mov
mov
pop
pop
jno
fldt
mov
pusha
and
mov
cmp
insb
mov
les
orb
push
scas
fstps
cmp
or
jns
fiaddl
enter
mov
inc
mov
movsl
pop
xchg
cmp
push
call
xor
in
out
jl
es
test
and
cwtl
enter
fnstsw
add
movsl
int
movsb
roll
sub
cmp
test
insl
pop
lret
mov
ja
mov
xchg
xchg
xchg
ficomps
jb
xchg
fsubrp
mov
subl
out
out
movsl
mov
dec
aam
rcl
hlt
inc
loop
pop
push
aas
test
lret
imul
push
lds
enter
cwtl
push
dec
pop
adc
mov
and
sub
cmp
cld
sub
mov
repz
adc
scas
popa
mov
sahf
loop
xor
nop
sub
fs
add
ret
and
xchg
aaa
addl
push
in
repnz
leave
xor
fsubrp
mov
adc
jno
mov
xchg
and
out
cmp
xor
pusha
cmc
push
rcll
push
sbb
enter
cmp
lahf
leave
mov
and
sbb
ljmp
xchg
xchg
sbb
movsl
xchg
and
sbb
mov
adc
popf
push
inc
sti
out
loope
sub
push
or
ret
or
loop
sub
jns
insl
dec
adc
ret
xchg
mov
sub
or
jb
insb
jp
inc
scas
daa
loope
inc
mov
fidivrl
pop
ss
adc
aas
push
sub
cmc
dec
cmpsb
stos
jnp
and
les
jbe
pusha
nop
pop
stc
fsubrp
popf
mov
sbb
popf
lods
xor
in
mov
and
mov
js
push
mov
cmpb
jmp
stos
mov
clc
leave
int
jl
or
and
jl
in
adc
add
and
push
add
xchg
cwtl
les
pop
outsb
push
fisubl
test
test
lret
shl
cli
addr16
stc
mov
sarl
fsubs
sub
mov
cmpsb
mov
add
lods
nop
cltd
pop
fadds
xchg
xor
icebp
sahf
mov
jae
sub
xor
add
ret
xchg
cmp
lock
or
add
push
push
jo
les
sbb
jmp
imul
cmp
aaa
or
mov
lock
cmp
inc
aam
sub
pop
lea
jmp
out
push
and
rcll
faddl
das
scas
pop
mov
imul
adc
or
pusha
fs
push
inc
clc
js
cmp
cmpsb
mov
repz
mov
jb
cmp
push
popa
or
lret
inc
leave
ja
sbb
mov
adc
lods
push
stos
pusha
mov
mov
sub
inc
icebp
movsl
cwtl
mulb
dec
mov
lcall
ret
fadds
xchg
ss
cmpsl
or
stos
and
mov
divb
push
or
adc
sarl
rol
sbb
cmp
aad
vunpcklpd
fwait
add
out
fsts
aam
xor
mov
dec
or
pop
jno
jmp
subl
fldl
in
pop
mov
rol
call
mov
mov
mov
aad
int
mov
dec
data16
insb
scas
sub
xor
pop
das
dec
jl
mov
jb
out
ljmp
jmp
fdivl
sbbl
jb
push
hlt
mov
add
cli
repnz
lcall
mov
dec
fistpll
sub
movsb
xchg
xor
repz
ss
stos
pop
hlt
and
or
arpl
sbb
lds
cs
pop
aam
mov
add
add
scas
cltd
sbb
mov
mov
call
xchg
outsb
idivl
bound
gs
xchg
sbb
sbb
insb
inc
das
cmc
outsb
cs
jo
add
dec
ret
add
xchg
cs
mov
lret
jns
dec
jno
push
clc
mov
inc
jg
fisttpll
xor
gs
test
movsb
sub
lahf
std
cmp
jnp
push
jg
push
push
fsubl
out
sbb
sub
cmpsb
and
movsl
sub
and
and
clc
or
cmp
insl
sub
mov
loope
mov
popf
or
out
dec
adc
lods
ljmp
pop
popl
stos
nop
data16
leave
jnp
lods
movsl
adcb
pop
xor
fbld
test
push
or
xor
cltd
sub
rorb
ljmp
inc
push
cmp
std
test
leave
inc
das
mov
pop
add
scas
dec
xchg
clc
test
xor
and
mov
sahf
mov
inc
xor
or
mov
inc
xchg
jo
mov
jo
inc
lock
shll
xchg
add
cld
sub
mov
xor
push
ja
jmp
push
jb
pop
dec
ffree
cmpsl
shrb
fidivrs
fsubs
cvtpi2ps
fsub
jg
jp
fistpl
lock
lcall
repnz
ljmp
xlat
pop
enter
xchg
dec
xorl
cli
bound
xchg
mov
inc
xchg
fsubs
hlt
dec
lahf
lock
aad
xchg
adc
add
mov
cs
ss
pusha
and
cmp
or
sbb
addl
jne
divl
inc
sbb
adc
sahf
ljmp
cmp
pusha
int
rorb
push
jns
rorb
and
int
jge
jecxz
rcrb
int3
mov
scas
scas
mov
sub
mov
orl
mov
mov
sub
mov
orl
mov
mov
sub
mov
orl
mov
mov
sub
mov
mov
mov
mov
xor
mov
add
or
mov
mov
mov
sub
mov
orl
mov
xor
add
push
mov
xor
add
push
mov
xor
add
push
lea
push
pushl
pushl
call
test
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
mov
lea
mov
incl
mov
test
je
lea
mov
mov
mov
mov
mov
sub
mov
mov
xor
mov
sub
add
mov
mov
mov
mov
jmp
adc
incb
cmpsb
xchg
or
lahf
cmp
or
mov
orl
addl
out
or
enter
sbb
mov
xor
test
sbb
shlb
stos
mov
xor
xlat
loop
adc
out
imul
pop
or
pop
pushf
add
in
inc
loop
ja
shlb
dec
lods
xor
stc
mov
fadds
push
lahf
push
mov
shrl
je
fsubl
out
in
cmpsl
dec
push
pop
or
mov
scas
xchg
in
and
xlat
movb
push
int3
dec
fcoml
out
sub
adc
sbb
adc
or
shrl
dec
das
loopne
or
push
add
inc
dec
sbb
jne
sahf
fwait
and
fcomps
out
sub
pusha
into
mov
hlt
pop
mov
sti
fmul
testb
sub
mov
ljmp
fldt
int
stos
xchg
push
lahf
inc
push
roll
mov
inc
testl
adc
js
sub
cltd
bound
lret
mov
in
ret
and
es
std
jmp
adc
jno
dec
cmp
pop
or
int
in
xchg
pusha
sub
mov
pusha
movsb
inc
test
sub
jae
cmp
and
es
divb
pop
add
popa
mov
add
fs
popf
xor
push
enter
mov
pushf
xor
mov
mov
fwait
pop
xchg
into
mov
test
add
pop
fwait
mov
mov
xchg
pop
cmp
xchg
cmc
push
cmpb
mov
dec
jp
adc
mov
push
in
cs
bound
outsl
test
loop
in
test
es
std
jg
dec
mov
jmp
dec
inc
dec
leave
mov
adc
ja
xchg
or
inc
mov
stos
sbb
dec
lea
mov
cmp
push
into
pop
outsb
sti
mov
mov
jp
and
sub
push
push
xchg
cmp
mov
or
sbb
cmp
leave
fistl
ljmp
sti
pop
dec
mov
pop
adc
in
push
mov
data16
sub
aam
gs
mov
test
add
push
mov
ret
test
mov
in
les
mov
jb
jg
push
test
jnp
sahf
inc
leave
cmp
pop
push
pusha
cwtl
jnp
cmp
clc
add
fldl2t
push
into
mov
sub
add
aaa
xor
xchg
lret
push
je
fxam
fistl
popf
cltd
sti
roll
scas
adc
push
sbb
dec
fiadds
push
jl
call
movsl
inc
stc
adc
mov
mov
stos
mov
mov
adc
popf
out
in
addr16
jae
icebp
sub
cmp
test
loop
aaa
and
jo
xchg
cmp
push
insl
xor
int3
mov
jle
stc
xchg
sahf
adc
das
stos
test
aaa
push
mov
jns
push
mov
outsl
fcmovnu
fstpl
sub
fs
mov
fistps
mov
bound
clc
dec
push
lea
xor
insl
dec
mov
mov
enter
stos
sahf
xor
repz
out
mov
sbb
pushf
daa
cmp
aad
add
add
or
je
subl
dec
out
mov
bound
or
sahf
pop
and
scas
push
cmp
push
mov
xchg
jo
dec
adc
aas
pop
sbb
sti
sti
call
leave
dec
movsb
push
test
mov
sbb
push
out
sbb
mov
loop
xchg
aad
shlb
xchg
jl
push
adc
test
mov
imul
lcall
adc
dec
dec
jecxz
scas
push
stc
insl
cmp
movsb
push
sbb
adc
push
adc
lods
lods
xor
fmull
rcrb
fwait
je
pop
mov
sub
orl
test
adc
cmp
sub
lahf
fidivl
daa
jg
adc
push
mov
mov
xor
stos
mov
loop
les
or
sub
cwtl
fadds
or
mov
inc
push
xchg
inc
icebp
mov
add
call
test
out
lods
sub
movsb
test
rorl
lret
ret
add
bound
pushf
sbbb
out
loope
or
mov
rcrb
add
pop
scas
sbb
push
xchg
jno
cmp
push
out
les
xchg
mov
push
pop
addr16
pop
test
insb
inc
inc
mov
in
push
popa
adc
or
movsb
cmp
sti
sahf
add
shrl
dec
inc
sub
shrl
ret
rol
fisttpl
inc
dec
aam
cmp
out
and
shl
xlat
shl
push
mov
stos
test
lahf
scas
lods
add
fists
mov
inc
testl
ds
addl
cld
push
imul
add
cli
pop
ljmp
inc
pop
addr16
fildl
adc
rolb
xchg
dec
nop
add
mov
mov
cmp
mov
iret
mov
int3
inc
adc
popa
popf
jl
mov
mov
or
cmp
mov
xchg
dec
in
xor
mov
add
cli
inc
sbb
test
jbe
pop
push
out
negb
aam
jbe
mov
dec
inc
jno
pop
dec
rcl
jp
add
loopne
dec
fiadds
fcoml
aam
test
punpcklwd
je
in
rcrl
sahf
stc
lahf
adc
or
sbb
cmp
push
push
push
fistps
jmp
mov
addl
je
aad
shrb
neg
and
sbb
imul
and
leave
push
sbb
jg
xlat
lea
inc
xchg
push
int3
and
sahf
inc
jp
xor
fcmovb
test
popa
daa
lock
sbb
xchg
dec
xchg
test
lahf
imul
add
add
mov
cmp
fadd
sahf
arpl
mov
mov
sbbb
xor
dec
cmp
push
or
sub
add
xchg
jge
or
fbstp
dec
imul
lea
pusha
sub
dec
aas
mov
cmp
cmp
aam
fsubr
std
sbb
ljmp
mov
cmp
loop
rclb
fstpl
out
xor
dec
leave
addr16
inc
les
js
cmp
sarb
arpl
mov
mov
in
jge
loop,pt
pop
imul
jge
fsubrs
mov
xchg
js
or
pop
push
jg
stos
test
mov
sbb
xchg
lcall
cmp
fmuls
aam
add
mov
xchg
cmp
stc
mov
repz
xor
jns
enter
fsubl
pop
jle
jecxz
push
cltd
xor
sub
test
lds
sbb
xor
aas
mov
lahf
popa
in
xchg
test
popf
scas
fidivrl
mov
fstpl
dec
adc
jl
in
push
push
xchg
inc
in
stc
mov
xorb
jne
dec
xchg
fildll
aam
mov
cmp
jmp
leave
and
mov
mov
test
or
inc
loopne
sub
gs
mov
lret
pop
jmp
test
testl
xchg
xor
test
insb
fs
pop
lock
inc
clc
and
out
pusha
inc
jp
gs
pusha
cmpsl
inc
push
mov
ja
leave
cmp
sub
jbe
ds
xlat
andl
or
xor
push
popf
dec
mov
cmpsl
in
shrb
xchg
pop
pusha
and
or
arpl
add
ja
insl
or
mov
cwtl
jecxz
lods
arpl
pushf
aam
adc
pop
nop
arpl
cmp
movsl
mov
cltd
fs
loope
pop
or
xor
mov
lret
cmc
cmp
pop
clc
lret
in
mov
adc
andl
sarl
into
fistpl
push
pop
mov
jmp
loop
ret
add
inc
out
push
ja
pop
xchg
mov
mov
in
pop
cmpsb
std
insl
fstpl
stc
pop
std
lahf
dec
add
mov
cmp
aam
out
fucomi
and
inc
mov
aas
mov
jle
mov
inc
insb
loop
and
sbb
jmp
enter
loope
movsl
int
bound
xchg
js
xor
push
pusha
dec
std
push
mov
push
push
mov
les
nop
push
je
iret
cmp
inc
pusha
mov
mov
cmp
pop
lea
lods
sbb
jno
mov
inc
mov
mov
xor
jns
mov
xchg
cltd
mull
push
lea
sbb
dec
jae
and
ja
movsl
pop
sub
insb
add
int3
sub
mov
call
pop
mov
out
sbb
cmp
jnp
dec
fs
mov
gs
mov
push
jp
mov
or
ljmp
test
xchg
ret
push
int3
push
mov
sub
cmp
sub
mov
push
jp
add
mov
sahf
ds
out
mov
jmp
lret
sarl
cmp
inc
push
addb
add
mov
fsubrp
pop
sbb
xor
jge
xchg
sarl
es
push
and
push
jg
adc
insl
lea
fistpl
push
jmp
repnz
scas
or
adc
in
insb
mov
dec
or
xor
and
pop
out
out
push
jne
rorl
in
cmc
fidivs
out
pop
jmp
xchg
xchg
fcoms
push
fisubrl
or
jae
andb
push
mov
aam
cmp
or
jl
ja
add
or
sbb
and
outsl
test
fdivr
test
mov
and
sub
adc
shrl
test
push
push
xchg
pusha
pushf
adc
std
in
push
es
xor
lock
mov
ret
pop
push
idiv
roll
jle
mov
xor
sbb
aas
ds
sbb
and
fucomp
in
in
sub
mov
mov
cltd
clc
sti
jmpw
testl
pop
push
adc
inc
jnp
fdivrs
daa
mov
push
dec
ja
rolb
imul
dec
jle
fadds
gs
push
push
es
sub
dec
sbb
inc
push
imulb
movsb
data16
dec
std
mov
in
inc
in
repz
xchg
push
mov
sub
adc
or
xor
lcall
inc
add
mov
aas
and
scas
add
icebp
sub
bound
push
cmpsb
popa
cmp
sub
xchg
jne
stc
push
ret
sbb
inc
cmp
jp
das
ja
adc
xor
sbb
xchg
int3
jge
inc
sub
cmp
push
stos
inc
adcb
bound
mov
out
repz
les
lea
mov
gs
sbb
fcoms
xchg
cmp
or
ja
xchg
mov
inc
adc
xchg
hlt
das
pusha
add
jecxz
mov
pop
or
push
cs
mov
stos
mov
add
fists
in
xor
pop
or
sbb
sbb
lods
mov
nop
push
or
push
fsubrs
jbe
jno
pushf
bound
pushf
push
test
inc
lea
imul
fnop
repz
or
das
or
lret
cmpsb
ss
jae
jle
dec
mov
push
filds
inc
mov
push
or
sbb
mov
icebp
mov
add
adc
in
xor
fistpl
push
mov
adc
out
xlat
fmull
dec
dec
mov
add
push
cmpsl
xchg
mov
push
jbe
pushf
movsb
add
xchg
in
jp
mov
adc
popa
xor
jae
fcomip
fwait
sbb
xorl
insl
jecxz
test
std
pop
add
add
mov
dec
mov
push
pop
imul
sbb
out
shr
into
mov
jmp
std
outsb
push
fldenv
loopne
punpckhdq
pusha
or
shll
aad
negb
jmp
es
loop
xchg
arpl
sub
imulb
imul
lcall
inc
or
rcr
cmp
push
lret
in
test
cli
icebp
xchg
sub
andb
jbe
int3
jmp
lahf
jns
mov
cli
popf
call
pop
ret
out
mov
pop
push
sub
int
decb
lret
imul
pushf
mov
xlat
xchg
xor
xchg
stos
insb
test
push
jb
adc
loope
mov
xor
mov
idiv
das
mov
ja
fadds
pop
fbstp
fsubrl
aad
inc
ret
outsl
inc
iret
xor
call
mov
imul
ss
dec
mov
add
push
shll
loope
jo
push
jl
outsb
xchg
xor
and
push
rcrl
jmp
ror
je
inc
and
rolb
or
nop
add
fadd
or
pop
xorl
sub
js
add
aas
xor
add
dec
mov
stos
xchg
push
or
pop
popa
in
dec
enter
sbb
nop
mov
mov
scas
test
cwtl
push
pop
rcrl
adc
jg
cld
push
nop
xor
sbb
les
jbe
push
aad
push
xchg
ja
xchg
mov
or
cltd
call
cmc
mov
mov
daa
xchg
sub
sbb
in
in
cmpsl
inc
icebp
pusha
fdiv
ret
jb
add
xchg
pop
push
ret
add
data16
jb
jge
pushf
addl
popf
lahf
aaa
stos
int3
fnstsw
inc
movsb
jb
idivb
sbb
push
pop
push
stos
or
fldt
cmp
inc
bound
mov
insl
dec
je
mov
push
int
adc
xor
sbb
push
inc
pop
adc
or
xchg
in
les
call
jno
add
shll
sti
movsl
loop
shll
dec
cmp
push
mov
add
mov
add
xchg
sub
jle
push
dec
clc
adc
jmp
bound
pop
and
sarl
adc
pop
adc
movsb
in
or
jecxz
pop
into
push
jo
sub
jae
mov
bound
inc
outsl
xor
pop
push
rcll
xor
rcrl
lds
pop
icebp
in
sbb
out
pushf
stc
idivl
push
sahf
lret
out
pop
jnp
lret
lds
mov
gs
xchg
scas
loope
pop
icebp
rclb
popa
add
pop
pop
in
bound
push
movsl
and
mov
jecxz
jne
cmc
add
sbb
clc
cld
mov
stos
mov
cs
lock
mov
enter
fldenv
push
sub
cmp
loope
and
out
in
push
in
jb
mov
mov
or
dec
sbb
mov
inc
ljmp
repz
sbb
repz
addr16
cmp
in
ja
mov
cmpsl
lods
or
pop
out
push
and
aaa
cmp
pop
enter
inc
pop
inc
test
into
lods
jle
sbb
fists
inc
clc
loopne
mov
cwtl
push
ss
or
mov
mov
adc
jmp
sbb
stc
cs
enter
and
add
mov
cmp
jl
sarb
xor
aam
in
stc
and
add
add
lcall
lods
into
or
shl
or
sub
mov
push
or
rclb
sub
sbb
lea
into
sbb
cmpsl
lock
push
sub
hlt
test
int
popf
adc
sarl
aaa
sub
adc
dec
cwtl
push
inc
mov
loope
jmp
out
cli
fmuls
sub
jb
rcrl
pushf
sahf
icebp
mov
fnstenv
nop
hlt
mov
push
mov
incl
mov
in
ret
add
xor
lds
cmp
add
mov
mov
adc
xchg
popa
push
dec
les
aaa
jno
cmp
mov
inc
jae
mov
cmp
ljmp
mov
xor
dec
outsl
jmp
movsb
mulb
fwait
dec
stc
fidivrs
lcall
aad
inc
xchg
pop
add
leave
aas
dec
repz
call
in
loopne
mov
sub
sbb
dec
testl
xchg
pop
sub
adc
lds
loop
adcl
xchg
mov
inc
and
addr16
sarl
or
xchg
insl
inc
mov
imulb
daa
xor
and
jae
xor
add
int
and
xor
xor
sbb
mov
inc
loopne
shlb
dec
clc
jmp
mov
jl
sbb
dec
mov
or
ret
cmpsb
sbb
or
jo
es
or
xchg
mov
fbld
arpl
sbb
dec
xchg
pslld
jbe
adc
sbb
adc
ret
sbb
pushf
mov
pop
and
cltd
into
int
xchg
add
mov
cmp
cmc
shl
pop
pop
jp
adc
cwtl
push
mov
mov
into
rorl
sub
adc
cmpsl
xchg
roll
push
push
inc
or
mov
pop
aad
mov
sub
insb
loopne
mov
clc
pop
call
push
cmpsb
shlb
fs
mov
lds
out
xchg
repz
mov
data16
stc
fcomps
xor
insl
das
mov
fnstenv
dec
sub
mov
outsl
add
xchg
clc
les
mov
dec
pop
lret
sub
das
add
sahf
loope
shlb
aas
push
adcb
sub
inc
arpl
imul
imul
jp
cmpsb
or
add
out
or
inc
fs
iret
xor
cltd
in
xchg
and
xchg
mov
shl
or
inc
leave
pop
sub
pop
icebp
outsl
popf
sub
les
bound
mov
pmaxub
xor
fstp
aas
int3
aas
xchg
mov
dec
cmp
loope
ja
sub
mov
mov
int3
enter
dec
mov
jp
mov
shr
inc
xchg
and
popf
mov
aaa
mov
jns
push
aad
adc
sarb
sub
sub
loope
pop
adc
lcall
aam
inc
sub
mov
hlt
loop
pusha
pop
fdivs
clc
insl
jb
das
jae
adc
sbb
jmp
repnz
ret
scas
shlb
pop
outsb
fwait
and
bound
into
lock
sub
and
lea
iret
jo
dec
add
mov
mov
ljmp
jo
dec
jge
mov
xchg
dec
sub
lret
or
push
arpl
jl
test
sub
jg
add
add
es
clc
pop
das
ja
fisubrs
xchg
scas
mov
dec
add
mov
fs
ret
fwait
daa
jno
repnz
sub
aad
push
jae
inc
jg
mov
pop
cmp
movsl
mov
mov
int3
fcmovnbe
mov
cmp
xchg
lret
inc
sbb
cmc
mov
fs
aaa
inc
xchg
push
sti
mov
jge
or
fidivs
push
mov
dec
dec
insl
into
mov
adc
sub
add
mov
add
aam
and
xchg
ds
add
fwait
test
add
add
movsl
loope
fst
push
in
lret
sbb
int3
out
lahf
pop
sub
ficompl
jl
sub
stc
cmp
loop
mov
jns
cli
cmc
cmp
inc
xchg
jb
out
cwtl
pusha
or
std
pop
jecxz
cmc
scas
cmp
cld
cmp
out
stos
mov
jo
mov
call
fdiv
jmp
push
dec
les
sti
mov
movsb
cmp
sbb
and
ficoms
movsl
cmc
jns
adc
mov
lock
xchg
lahf
in
mov
jbe
sbb
xchg
mov
popa
xor
push
shrl
nop
movsb
jle
push
mov
mov
jne,pt
test
sbb
dec
cmc
fcmovu
mov
test
mov
sub
loopne
and
adc
aaa
frstor
cmp
jge
nop
push
push
mov
sarl
jae
shll
xchg
cmp
xchg
xor
inc
or
jecxz
outsl
adc
insb
adc
or
enter
push
sti
sti
add
and
pop
in
push
cltd
addr16
mov
test
mov
pop
repz
xchg
imul
or
mov
out
negl
fisttpl
or
lret
mov
fistpll
push
mov
enter
mov
iret
aad
adc
mov
fbld
fcompl
shrl
loopne
ljmp
jne
dec
pop
adc
jle
mull
inc
fiaddl
ja
cmpsb
insb
xor
jns
mov
and
cwtl
fsubrs
xor
cld
pop
je
xor
mov
sbb
inc
xor
ljmp
mov
jmp
push
jnp
mov
jmp
inc
iret
adc
aas
cmc
mov
ja
mov
lahf
bound
sub
outsl
mov
div
pop
mov
xchg
or
dec
imul
dec
xchg
lds
nop
data16
push
das
aaa
push
xor
ljmp
pop
imul
loop
cmpsl
loopne
stc
xor
into
cmp
sbb
imul
xchg
stc
shrb
aad
or
xor
bound
rcrl
adc
nop
mov
out
lods
xor
idivb
inc
push
mov
fsubl
cmc
inc
call
mov
mul
sahf
ss
xor
repz
and
cmpsl
pop
imul
inc
mov
xor
cwtl
nop
adc
sbb
or
cli
in
in
push
xchg
test
fldcw
dec
xchg
hlt
push
add
das
cld
pushf
lea
movsl
pusha
test
loop
jo
sbb
add
out
cltd
add
das
pop
out
fwait
mov
lahf
cmp
or
or
clc
jb
outsb
jecxz
lret
nop
or
mov
jae
aad
pop
nop
aam
add
js
es
int3
ret
movsl
out
jo
repz
xchg
sub
or
add
dec
mov
dec
enter
xchg
enter
aad
sbb
jno
mov
adc
flds
addr16
gs
sub
jns
vprotw
mov
mov
inc
jno
sar
lods
push
mov
js
ud2
leave
aam
ret
je
xchg
inc
xchg
jne
in
sbb
int
or
pop
pop
cltd
test
sub
stos
cmp
cmpsb
mov
pushf
inc
lods
or
mov
fsubrs
pop
pop
popa
xchg
adc
shr
mov
add
sbb
aaa
mov
xchg
xor
cmpsl
cmpsl
mov
aas
push
sahf
cltd
add
loopne
sub
insl
inc
cmp
insl
mov
xchg
inc
cmpsb
mov
mov
iret
add
stos
icebp
repz
insl
cmc
sub
pop
jecxz
in
fwait
fwait
rorl
sbb
xlat
and
jl
mov
jl
or
cmp
mov
pop
ss
jg
xchg
inc
out
xor
in
fdivl
mov
pop
lods
adc
mov
shr
xchg
mov
jo
in
imul
paddusw
mov
test
stos
jb
add
cmp
sub
arpl
add
sbb
outsb
dec
shl
mov
rcll
mov
cmp
mov
jl
int
je
xchg
jg
mov
stos
cs
pop
mov
stos
repz
in
cli
pop
mov
fldenv
jmp
das
mov
add
call
inc
lods
arpl
mov
ds
mov
inc
push
add
dec
lds
sbb
push
jle
inc
mov
mov
sbb
sbb
sbb
sbb
sbb
dec
call
xorl
xchg
xchg
dec
repz
mov
outsl
cld
movaps
xchg
mov
sbb
adc
cmp
and
fcmovu
pop
xchg
insl
sbb
cmp
fidivrs
shll
sbb
xor
mov
pushw
sbb
mov
sub
lret
add
hlt
dec
fidivrl
cltd
cmpsb
lcall
fadds
jb
cmp
xor
pop
xchg
mov
int3
sbb
or
pop
scas
ja
push
mov
adc
jbe
or
mov
outsl
clc
sub
xor
xor
mov
and
mov
xor
scas
xor
and
push
adc
ret
mov
push
inc
loope
sub
sbb
cmp
imul
hlt
mov
or
push
inc
pop
sub
testb
gs
sub
cwtl
dec
mov
sbb
cld
das
daa
fstps
sbb
ret
pop
test
sub
movsb
fdivl
ds
popf
xchg
les
sarb
popa
ficomps
out
arpl
sbb
dec
sub
lcall
inc
out
shll
sarl
test
pop
add
addl
out
in
pop
movsl
mov
ds
mov
cmp
ss
add
aas
sub
push
push
fwait
jns
cmp
add
ficoms
add
nop
int3
push
mov
adc
dec
sub
or
push
aam
push
pop
movsl
inc
jo
and
icebp
dec
xor
cld
sbb
jno
push
mov
jl
xchg
ret
dec
in
mov
jge
ds
or
jmp
push
mov
mov
test
pop
in
outsl
push
sub
pop
rcrb
xor
arpl
outsl
iret
popf
pop
cmpl
sub
pop
aad
enter
xor
mov
out
out
push
jp
or
repnz
jne
push
pop
addr16
lret
jnp
cmp
mov
xchg
mov
enter
in
aam
shrb
push
jns
mov
loope
ficompl
pushf
push
arpl
hlt
pop
cmpb
clc
xchg
push
mov
es
hlt
mov
icebp
sbb
mov
das
xlat
cmp
cmp
stos
mov
mov
hlt
leave
out
or
lock
icebp
pop
mov
jb
inc
mov
push
mov
sbbl
adcb
and
push
or
rol
pusha
std
lds
sbb
cli
add
shll
ret
jg
mov
mov
lds
sahf
sub
fsubl
outsl
fidivs
sub
push
sub
int3
dec
in
dec
push
pop
jecxz
push
nop
cmp
rorb
cmpsl
sub
or
movsl
iret
iret
xchg
push
std
and
pusha
mov
xchg
cmp
filds
cmpsb
fstp
or
mov
call
mov
push
ret
mov
or
stos
adc
sahf
push
pop
ja
fnstcw
sbb
push
dec
les
xlat
stos
push
ljmp
iret
test
mov
adc
and
sub
rclb
mov
push
push
dec
aad
xor
sbb
sub
loopne
orb
sbb
inc
lea
adcl
push
jmp
inc
rol
idivl
call
or
xor
push
in
xor
ror
addr16
nop
dec
pop
push
fwait
xchg
call
test
sub
pop
xor
adc
xchg
inc
push
in
je
outsl
push
nop
std
xchg
adc
adc
outsb
jne
xor
decl
faddl
imul
leave
jg
pop
popa
pop
shrb
fcoml
nop
xlat
push
adc
and
sub
imul
and
inc
mov
pop
cmp
je
jbe
cmpsl
jnp
sti
xor
ret
jecxz
mov
icebp
movsl
aam
cmpsl
sbb
test
xchg
dec
hlt
push
add
push
test
flds
fadds
push
mov
les
bound
iret
mov
and
mov
shll
call
fsubl
out
mov
les
int3
cli
test
sub
scas
aam
mov
push
push
mov
mov
test
fiaddl
inc
int3
pop
icebp
adc
inc
mov
xchg
stc
pop
xchg
aam
les
adc
sbb
test
movsl
push
popf
std
push
and
pop
ljmp
or
or
dec
cmp
push
dec
std
ja
fldl
movsb
nop
mov
or
ds
mov
sbb
and
dec
push
push
vpsrld
rcl
sbb
mov
pop
xchg
ljmp
aad
mov
stos
call
movsl
call
data16
xor
dec
js
lods
push
dec
mov
mov
shll
mov
inc
fwait
xor
push
aad
push
push
xor
js
adc
jo
add
div
aas
pop
aaa
in
pop
mov
cmp
js
cmc
incl
les
mov
push
ljmp
sub
push
jns
mov
int3
pusha
jmp
and
cmc
or
inc
jns
and
js
jecxz
xchg
cmp
ficompl
fdiv
movsb
pop
fsubs
cmp
sbb
adc
insl
fdivrl
inc
push
jae
jg
fwait
mov
daa
clc
adc
xchg
jg
adc
in
inc
pop
ficoms
in
xchg
and
fidivs
lahf
pop
xor
insl
fldl
roll
sub
test
xchg
cmp
push
in
bnd
lret
sbbb
iret
lock
popf
cmp
mov
out
and
sahf
sbb
jns
andl
mov
test
xor
pop
cmpsl
outsb
or
pop
push
aad
test
sub
fisubrl
xor
cld
lahf
dec
cmc
jg
sahf
popf
fcos
add
lock
dec
adc
mov
rorl
dec
or
pop
push
or
jae
das
clc
call
adc
imul
daa
push
inc
mov
enter
push
ja
adc
adc
popf
xchg
in
sbb
jge
mov
movsl
test
dec
cs
add
lea
movsb
fwait
and
dec
pop
jmp
cs
enter
sbb
scas
js
or
xchg
jle
mov
mov
icebp
ljmp
fistps
into
pop
push
dec
insl
pop
call
xchg
mov
xor
mov
sbbb
movsb
into
sub
adc
add
adc
and
mov
mov
mov
inc
cwtl
in
or
clc
pop
inc
sub
leave
fsub
push
mov
bound
mov
jo
mov
mov
mov
lret
int3
pop
cmc
int3
mov
aam
into
stos
ss
pop
pop
mov
sbb
je
insl
sbb
in
xor
add
mov
pushl
pushl
pushl
pushl
pushl
pushl
pushl
mov
call
pop
pop
leave
ret
push
mov
sub
push
adc
push
movzbl
sbb
push
movl
andl
mov
inc
mov
cmpl
jg
jmp
push
call
cmpl
jne
xor
xor
inc
mov
cmpl
jb
lea
mov
movl
lea
movl
cmpl
je
cmpl
jge
jmp
push
push
pushl
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jle
jmp
push
push
call
jmp
mov
movl
cmpl
je
cmpl
jbe
jmp
pushl
push
push
pushl
call
cmpl
jne
mov
dec
mov
xor
add
dec
mov
jmp
mov
xor
mov
sbb
xor
add
mov
xor
or
mov
and
mov
mov
movzbl
adc
mov
add
and
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jbe
jmp
push
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
movl
cmpl
je
cmpl
jbe
jmp
pushl
call
mov
dec
mov
jmp
mov
movzwl
xor
mov
xor
andl
mov
addl
add
movl
cmp
je
mov
movl
jmp
mov
mov
adc
mov
or
movl
cmp
movl
jne
movl
cmp
movl
jne
movl
push
push
movl
jmp
mov
mov
movl
cmp
jne
movl
cmp
movl
jne
push
push
jmp
mov
mov
cmp
jne
movl
cmp
jne
push
push
jmp
mov
movl
mov
cmp
movl
jne
cmp
jne
movl
push
movl
push
movl
jmp
mov
mov
mov
mov
mov
movl
cmp
movl
jne
cmp
movl
jne
sbbl
mov
or
xor
sbb
add
mov
mov
mov
xor
add
imul
mov
xor
add
cmp
mov
mov
je
mov
add
mov
mov
xor
add
imul
mov
jmp
mov
xor
mov
mov
xor
sub
add
mov
mov
add
mov
mov
mov
xor
xor
lea
mov
xor
add
imul
mov
xor
sub
mov
add
cmp
mov
mov
jg
xor
mov
sub
add
jmp
xor
add
add
mov
mov
mov
xor
add
movl
mov
not
movl
mov
mov
mov
and
mov
xor
mov
add
cmp
je
mov
xor
movl
movl
mov
sub
movl
add
movl
mov
mov
mov
xor
add
cmp
jne
mov
mov
mov
lea
mov
mov
mov
xor
add
mov
mov
xor
mov
add
cmp
je
mov
add
mov
mov
mov
mov
xor
mov
mov
add
cmp
jne
mov
mov
mov
jmp
pushl
pushl
jmp
mov
mov
cmp
jne
cmp
jne
push
push
pushl
pushl
pushl
pushl
call
pop
pop
pop
leave
ret
push
mov
and
sub
orl
push
xorl
push
push
orl
lea
push
subl
push
call
movl
cmp
movl
je
subl
push
adcl
push
adcl
call
movl
jmp
andl
mov
addl
push
lea
push
push
push
movl
push
addl
call
imul
cmp
movl
je
xor
movl
jmp
addl
lea
orl
push
addl
push
xorl
call
test
movl
jne
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jg
jmp
pushl
pushl
call
cmpl
jne
xor
or
inc
mov
jmp
mov
mov
andl
mov
inc
mov
cmpl
jl
jmp
push
push
push
push
call
cmpl
jb
mov
mov
mov
sub
add
movl
mov
xor
or
sub
and
lea
or
mov
adcl
lea
andl
mov
inc
mov
cmpl
jle
jmp
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
xor
add
mov
sub
add
mov
mov
mov
adc
mov
xor
mov
adc
xor
mov
sbb
mov
mov
add
movl
mov
mov
cmp
jne
andl
mov
inc
mov
cmpl
ja
jmp
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
ja
jmp
push
pushl
push
push
push
push
call
cmpl
jne
mov
inc
mov
jmp
mov
addl
mov
sbbl
xor
add
subl
mov
sbb
mov
xor
addl
add
orl
mov
mov
xor
adcl
add
sbbl
mov
sub
mov
adcl
mov
adcl
mov
orl
mov
not
mov
sbbl
mov
mov
sbbl
mov
mov
subl
mov
movl
andl
mov
addl
xor
add
jmp
orl
lea
push
push
call
movl
cmp
movl
jne
xorl
push
subl
lea
push
push
push
addl
push
decl
call
imul
cmp
jne
sbbl
lea
push
orl
push
addl
call
xorl
test
movl
jne
mov
mov
orl
xor
andl
lea
push
sub
mov
xor
lea
addl
push
adc
mov
pushl
andl
call
mov
neg
mov
xor
lea
adc
mov
add
mov
andl
xor
xor
notl
add
mov
and
mov
xor
movl
lea
movl
mov
cmp
jbe
xor
mov
adc
mov
mov
adc
mov
inc
mov
mov
and
mov
sub
sbbl
xor
xorl
mov
subl
lea
mov
lea
sbbl
mov
lea
push
xorl
push
movl
call
cmp
jne
push
lea
subl
push
orl
push
push
sbbl
push
xorl
call
imul
movl
cmp
movl
jne
lea
push
push
andl
call
sbbl
test
movl
jne
subl
lea
sbbl
push
push
adcl
call
movl
cmp
jne
adcl
push
lea
orl
push
push
decl
push
push
subl
call
imul
movl
cmp
movl
jne
lea
andl
push
addl
push
andl
call
movl
test
jne
andl
lea
push
addl
push
call
movl
cmp
jne
sbbl
push
subl
lea
push
push
push
push
call
andl
imul
cmp
movl
jne
lea
push
negl
push
call
sbbl
test
movl
jne
orl
lea
push
push
sbbl
call
cmp
movl
jne
push
orl
lea
push
push
xorl
push
subl
push
addl
call
addl
imul
movl
cmp
movl
jne
adcl
lea
orl
push
push
call
andl
test
movl
jne
decl
lea
decl
push
orl
push
addl
call
cmp
movl
jne
push
addl
lea
xorl
push
push
subl
push
push
orl
call
andl
imul
movl
cmp
jne
addl
lea
subl
push
sbbl
push
adcl
call
orl
test
jne
andl
lea
xorl
push
push
call
movl
cmp
movl
jne
subl
push
adcl
lea
andl
push
push
subl
push
movl
push
call
incl
imul
cmp
movl
jne
orl
lea
movl
push
adcl
push
andl
call
sbbl
test
movl
jne
subl
lea
addl
push
andl
push
sbbl
call
movl
cmp
movl
jne
orl
push
lea
orl
push
push
push
push
addl
call
xorl
imul
movl
cmp
jne
lea
xorl
push
push
call
test
jne
addl
lea
push
adcl
push
orl
call
movl
cmp
movl
jne
addl
push
lea
xorl
push
push
addl
push
push
xorl
call
xorl
imul
movl
cmp
movl
jne
orl
lea
push
push
call
test
jne
lea
push
push
call
cmp
jne
push
lea
push
push
push
push
call
imul
cmp
jne
lea
push
push
call
test
jne
lea
push
push
call
cmp
jne
push
lea
push
push
push
push
call
imul
cmp
jne
lea
push
push
call
test
jne
lea
push
push
call
cmp
jne
push
lea
push
push
push
push
call
imul
cmp
jne
lea
push
push
call
test
jne
lea
push
push
call
cmp
jne
push
lea
push
push
push
push
call
imul
cmp
jne
lea
push
push
call
test
jne
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
pushl
mov
pushl
add
mov
mov
pushl
call
mov
mov
mov
jmp
mov
mov
xor
add
cmp
jne
mov
mov
mov
xor
add
cmp
jne
mov
push
push
xor
add
push
push
pushl
pushl
call
pushl
pushl
call
mov
xor
add
mov
mov
xor
add
mov
mov
test
je
lea
movl
push
movl
movl
push
movl
call
cmp
jne
push
lea
push
push
push
push
call
imul
cmp
jne
lea
push
push
call
test
jne
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
andl
mov
add
adcl
mov
xor
mov
mov
xor
cmpl
mov
jne
cmp
je
mov
mov
cltd
add
adc
andl
xor
mov
mov
mov
xor
add
mov
adcl
xor
mov
mov
xor
mov
cmp
jne
mov
cmp
je
mov
add
mov
jmp
mov
mov
xor
mov
mov
mov
add
mov
mov
xor
add
xor
add
adc
xor
xor
xor
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
lea
push
push
call
cmp
jne
push
lea
push
push
push
push
call
imul
cmp
jne
lea
push
push
call
test
jne
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
mov
movl
cmpl
je
cmpl
jbe
jmp
push
push
push
push
call
cmpl
jne
xor
add
dec
mov
mov
dec
mov
jmp
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jg
jmp
push
call
cmpl
jne
mov
inc
mov
jmp
movl
mov
or
mov
mov
not
push
and
mov
xor
adc
mov
andl
push
adc
mov
xorl
add
movl
cmp
movl
je
xor
mov
sbbl
mov
subl
xor
xor
xorl
add
add
adc
xor
mov
push
xor
xor
mov
add
adc
xor
xor
cmp
jne
cmp
je
jmp
mov
mov
mov
xor
add
mov
imul
mov
xor
add
mov
mov
mov
mov
xor
xor
add
adc
lea
xor
xor
xor
mov
add
adc
xor
xor
cmp
jne
cmp
jne
mov
pop
pop
pop
leave
ret
push
mov
push
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jg
jmp
push
call
jmp
movl
andl
xor
xor
inc
mov
cmpl
jle
jmp
push
push
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
movsbl
mov
sub
mov
xor
cmp
jne
mov
push
mov
add
mov
mov
mov
xor
add
cmp
pop
je
mov
jmp
mov
xor
add
leave
ret
push
mov
sub
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jle
jmp
push
push
call
cmpl
jne
mov
inc
mov
jmp
push
andl
xor
or
inc
mov
cmpl
jl
jmp
pushl
pushl
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
orl
mov
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jge
jmp
push
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
movl
push
mov
mov
mov
mov
xor
xor
mov
add
add
imul
mov
jmp
jge
jnp
mov
mov
jmp
sbb
addb
push
mov
cli
es
push
inc
inc
aaa
mov
adc
xchg
mov
rcr
add
mov
test
insb
sbb
adc
jae
rolb
hlt
cmp
jno
mov
add
add
and
add
and
mov
xor
je
xor
xor
dec
in
add
fsubrl
les
je
mov
scas
call
dec
sbb
sub
inc
insb
mov
pop
into
das
pushf
decb
pop
movsl
in
dec
xchg
mov
loope
fimull
fs
mov
test
inc
ja
cmp
mov
sub
lret
or
add
mov
fildl
fs
aam
fcomps
cltd
filds
mov
negb
sub
aam
cmp
cmc
mov
test
mov
inc
mov
add
popa
xchg
fsubrl
push
rcrl
je
lock
push
or
cmp
mov
out
repnz
push
xchg
hlt
dec
ret
mov
cwtl
pusha
cmp
clc
dec
jle
nop
add
fidivrs
and
push
adc
sub
add
outsl
cwtl
sti
mov
inc
in
xchg
imull
mov
jns
lods
je
xor
sahf
lea
daa
add
push
add
icebp
fwait
and
xor
cmp
mov
aam
or
pushf
or
push
pop
and
fisttps
jbe
outsl
pop
xchg
je
mov
fwait
sub
inc
or
pop
add
aas
lock
stc
cmp
outsl
push
cmp
cwtl
push
arpl
push
frstor
sbb
stos
xchg
repnz
inc
xchg
sbb
stos
in
bound
adc
jno
pop
pop
xor
cmpsb
ljmp
lock
mov
es
mov
push
aam
cmpsb
neg
call
sub
daa
adc
xchg
and
test
cli
dec
insb
into
sbb
mov
cltd
xchg
add
add
pop
int3
ds
cltd
push
aas
mov
in
jecxz
xor
push
cmp
in
xor
gs
iret
sbb
std
mov
inc
pop
out
iret
mov
pushf
pushf
sbb
xchg
push
sbb
pop
pop
sbbl
rolb
out
xorl
lret
ljmp
jae
scas
and
icebp
in
repnz
cmp
pop
orb
scas
rorb
sub
daa
test
and
js
lret
and
and
lds
inc
push
jo
add
mov
push
xchg
lcall
and
fstps
mov
sub
xchg
ret
xchg
xlat
int3
cmp
or
cwtl
mov
xor
aam
adc
fwait
push
sub
push
or
inc
inc
or
call
iret
push
sti
jno
repz
jo
jecxz
jmp
xchg
inc
pop
push
mull
push
shrb
cmp
out
sbb
pop
jmp
add
add
xorl
and
xor
pop
nop
cmpsl
jb
enter
xor
and
adc
sbb
ljmp
jne
stos
or
cmp
std
xor
jg
and
in
push
mov
in
sti
out
mov
idivb
xchg
add
imulb
push
or
pop
pop
aad
popf
mov
mov
jb
mov
lds
jno
dec
mov
stc
and
and
jle
into
dec
adc
or
lea
and
lcall
mov
test
add
repz
ljmp
xorb
mov
sbb
std
fistpl
push
dec
sbb
add
push
jbe
inc
test
es
fcompl
cwtl
adc
pop
mov
mov
lret
int
fmulp
fwait
xor
ret
push
jl
add
mov
mov
xor
jg
popa
mov
stc
adc
test
dec
and
icebp
shlb
xor
or
cmp
sub
leave
sub
xor
adcl
xlat
mulb
pop
lods
pop
outsb
pop
push
sub
jecxz
aad
xchg
and
cld
and
sahf
insb
add
jmp
jb
fwait
rcr
adc
aam
cmp
repnz
jmp
adc
es
fadd
cld
jae
mov
xor
fidivs
inc
push
div
jle
jne
push
xchg
ljmp
int
cmp
dec
fidivs
test
gs
xchg
cmp
aas
insl
mov
mov
push
sbb
jnp
pusha
mov
add
das
jmp
push
jne
cmp
mov
cmc
jbe
jecxz
push
xor
mov
je
or
shlb
insl
in
loop
inc
das
or
mov
xchg
dec
xor
adc
push
mov
dec
and
enter
cmp
cmpsb
mov
jg
jp
lahf
or
aas
aam
inc
cmpsb
and
call
add
xor
pop
cwtl
cmp
mov
cmp
outsl
fistl
jb
push
aaa
push
or
test
mov
add
push
int
xor
test
imul
jne
push
sub
std
lods
adc
and
rcr
mov
lods
loop,pn
sub
xchg
pop
mov
push
ja
icebp
pop
dec
xchg
add
inc
pop
outsb
aad
mov
pop
repnz
pop
iret
jp
scas
out
mov
add
cmp
aaa
push
into
pop
jae
cmc
inc
iret
sbbl
lock
push
and
int
or
cmp
mov
sar
add
pop
sbb
push
jp
sbb
pop
cltd
unpcklps
sahf
in
sbb
push
push
loop
ds
or
lods
fmull
stos
sub
mov
inc
fldcw
mov
push
dec
ljmp
int
std
mov
outsb
jecxz
hlt
icebp
dec
je
jo
mov
out
pop
push
mov
adc
jno
inc
pushl
cld
jno
addr16
push
mov
and
sbb
das
dec
or
pop
inc
jno
jbe
test
add
lea
jmp
add
sub
xchg
xlat
decl
test
xchg
gs
lret
aaa
addr16
and
or
scas
repnz
int3
sbb
xchg
daa
shlb
scas
xlat
inc
stos
or
sbb
int3
out
test
xor
sub
cs
sbb
and
bound
ja
adc
adc
xor
sbb
jl
out
js
in
sub
mov
and
int
icebp
dec
int
cs
xor
sbb
sbb
sti
ret
mov
jb
scas
sbb
adc
ss
and
pop
or
sbb
test
or
imul
xchg
pop
inc
call
mov
cmp
cwtl
xor
and
and
dec
cmp
sbb
mov
pop
scas
das
test
mov
xchg
mov
addl
mov
in
cmpsl
std
fwait
jge
dec
mov
push
outsb
fnstcw
inc
imul
rcrb
xchg
out
mov
cmpsl
mov
scas
mov
ret
out
rcll
aam
out
popf
nop
lea
sbb
jmp
sbb
push
ja
shll
mov
push
push
mov
push
mov
jge
jecxz
cmp
aam
out
je
sbb
xlat
shll
adc
sub
lods
adc
lcall
mov
test
push
xor
xor
lock
rorb
rolb
aaa
lahf
shrl
push
mov
dec
jl
jno
subl
cmp
inc
dec
popf
mov
stos
pop
mov
sub
push
cmp
mov
nop
cmpsl
push
mov
test
mul
fnsave
add
pop
xchg
cwtl
jnp
lahf
pop
pop
dec
test
xor
in
adc
add
mov
roll
mov
dec
push
std
loop
cmovg
stos
and
pop
rclb
xor
push
inc
call
std
or
push
jns
sbb
addl
lret
inc
loopne
or
mov
push
sbb
pusha
or
out
mov
out
add
push
dec
mov
ret
arpl
ss
adc
pop
inc
sbb
mov
ret
fistl
push
cmp
movsb
dec
movsb
ret
inc
sub
jo
push
push
outsb
sti
mov
lea
mov
add
stos
dec
pusha
mov
xchg
push
into
adc
popl
dec
or
mov
psubd
jnp
adc
inc
push
addl
mov
xchg
dec
xor
mov
mov
sub
fldenv
pop
fidivs
mov
push
je
inc
sahf
stc
push
mov
int
jae
pop
out
insl
sub
fsubs
popf
add
and
jg
mov
xchg
inc
ds
or
dec
sub
imul
jne
sbb
cli
rorb
test
push
sbb
dec
fwait
nop
and
cmp
cmp
ds
xor
push
movsb
hlt
lahf
mov
insb
sub
pop
xor
mov
inc
add
les
mov
or
pop
sbb
pop
ljmp
xchg
out
sbb
adc
push
dec
addb
and
cmpsl
std
into
dec
cwtl
sbb
adc
stc
fidivrl
loope
sbb
lret
push
cmp
adc
call
jecxz
out
pop
sub
subb
or
lods
mov
pop
aad
lret
into
fnstsw
inc
addr16
decb
push
or
aas
lods
pop
inc
add
call
data16
ss
xor
movsb
xchg
mov
movsl
pop
cwtl
out
dec
and
adc
loop
pop
mov
lret
sub
sarb
or
xchg
test
jno
das
imul
mov
jns
fisubrs
push
ds
xor
dec
std
xor
test
shll
cmp
cmpsl
jle
popf
pusha
pop
inc
push
stos
xor
sbb
jmp
jp
mov
aas
sahf
mov
or
mov
xor
enter
or
and
cmp
mov
cwtl
mov
xor
mov
mov
in
imul
lahf
fistl
test
lods
mov
movsl
add
ficompl
mov
outsl
inc
pop
adc
ljmp
loopne
sub
cmpsl
sbbl
cmp
add
hlt
jge
mov
fdiv
hlt
add
fs
xor
stos
rcrl
in
mov
push
enter
data16
pop
xor
movsl
mov
sub
dec
and
push
push
ret
and
jp
pop
jns
fbld
mov
dec
negb
sbb
adc
dec
fisttps
pop
shlw
or
fists
cmpsb
mov
loopne
fldcw
mov
les
cmpb
pop
sbb
jb
mov
mov
push
adc
pop
ret
cld
in
lods
cmc
xlat
sbb
inc
pop
push
stos
jge
andb
ret
inc
sub
sbb
jge
xor
lea
cmp
and
jmp
mov
pop
pop
pop
fiaddl
sbb
sub
dec
xor
and
ljmp
cmp
sti
sbb
call
cmp
int3
movsb
sub
push
incb
sub
addr16
adc
das
lock
loope
subb
rolb
xor
loop
cmp
loopne
inc
push
mov
je
jmp
fisttps
mov
mov
rcrb
adc
mov
jmp
inc
sbb
es
jge
jb
mov
and
imul
pop
shll
mov
xor
xchg
mov
pop
out
pop
mov
or
and
ret
add
lahf
adc
testb
pop
xor
pop
cmp
shlb
inc
shlb
sbb
sub
cmpsl
out
cmp
jg
lods
mov
dec
adc
pop
mov
dec
in
test
xchg
incl
push
jp
jno
stc
int
pop
push
xchg
stc
jno
sub
ficoml
shll
leave
pop
insb
mov
sti
mov
out
push
lock
and
fadds
ret
and
into
or
cmp
sbb
idivb
icebp
mov
ds
inc
outsl
mov
mov
and
jo
push
test
xchg
xor
mov
dec
loop
xor
pushf
cmp
es
aam
sub
mov
sti
xchg
loop,pn
int
int
ljmp
pop
mov
xor
mov
hlt
xchg
pop
xor
dec
in
test
shll
fnstcw
xchg
xor
mov
fsubs
inc
enter
push
xor
cmpsb
fndisi(8087
push
xor
pop
or
mov
and
and
dec
xlat
and
mov
mov
adc
lock
cmp
in
sub
jbe
xorb
xchg
out
inc
cmpb
int3
or
mov
mov
mov
push
test
std
imul
pop
xlat
sbbb
les
mov
push
pop
dec
or
mov
adc
inc
mov
push
xchg
or
fcompl
imul
imul
bound
movq
mov
push
mov
aam
jmp
xchg
inc
lds
push
aaa
add
sbb
jl
ret
cmp
lret
testl
insb
pushf
mov
testb
or
mov
dec
dec
dec
cmp
cmp
push
fld
pop
sarl
mov
hlt
daa
nop
mov
inc
in
int
iret
ret
ffreep
mov
mov
pop
outsl
jecxz
sub
mov
pushf
maxps
pusha
cmp
push
or
stc
in
shll
outsl
outsb
push
sbb
xchg
popf
pop
adc
push
pop
push
into
or
sar
fidivs
push
xchg
enter
stos
sbb
pop
imul
inc
subb
adc
lcall
rcrb
add
xor
dec
dec
mov
xchg
roll
mulb
pop
push
bound
xchg
add
stos
pop
mov
test
jnp
sahf
js
dec
lret
mov
jp
xor
leave
mov
lea
mov
adc
cmpsb
and
pop
call
adc
fstpl
xchg
and
cs
mov
inc
outsb
in
pop
sub
dec
cmp
shll
sub
jmp
jl
pop
mov
ds
faddp
mov
xchg
pop
test
fdivrs
in
inc
lods
inc
mov
pop
add
cmpsb
imul
add
pop
out
xor
aad
and
cltd
inc
mov
jo
int
out
and
test
add
inc
sub
dec
push
push
mov
dec
jl
repnz
and
jge
cmp
mov
jne
pop
pop
in
mov
lcall
xchg
rclb
push
cli
pop
jb
xchg
ljmp
mov
test
lods
inc
decb
mov
xor
pop
push
xchg
arpl
dec
sbb
fs
mov
sbb
mov
jle
add
mov
mov
pusha
push
cmpsb
inc
sub
mov
dec
xchg
mov
ja
popa
mov
cmp
jnp
dec
dec
lods
outsl
mov
orb
fbld
dec
into
cmp
jbe
invd
fimuls
jnp
arpl
arpl
daa
insl
addb
pop
cmp
jb
dec
sbb
jmp
xchg
jbe
and
cmpsb
insl
inc
or
aas
ss
or
pop
and
jmp
pop
adc
mov
aad
out
adc
ds
gs
iret
push
test
outsl
sub
cmp
push
pushf
out
icebp
sub
addr16
mov
mov
mov
push
subl
sti
pop
outsb
and
movsb
jo
or
xor
jno
mov
sub
xor
cltd
mov
jge
cmp
lret
aam
xor
jle
shlb
in
cmp
subb
data16
xchg
jge
mov
pop
shlb
fildll
push
mull
dec
inc
rolb
in
pop
sbb
xchg
xchg
xchg
popf
mov
aad
fdivr
nop
movsl
sub
popa
clc
and
push
sti
adc
mull
push
test
out
sbb
repnz
lret
fcoms
xchg
mov
push
ja
and
xchg
push
push
fnstcw
fucomip
sbb
sbb
cmp
lret
ss
repz
test
call
cmp
das
loope
mov
jmp
dec
in
sbb
cmc
js
stos
push
cmp
mov
mov
jp
addr16
add
sbb
sbbl
pop
inc
xchg
aad
sbb
dec
cmpsl
call
lret
inc
les
sahf
stos
add
jp
aaa
jbe
ss
jecxz
pop
dec
cmp
sti
das
adc
in
mov
lods
sub
scas
sub
insl
stc
cmp
or
inc
mov
pop
add
jae
push
mov
pop
sub
jnp
jge
idivl
pop
in
das
sbb
xchg
rcl
and
mov
jbe
into
push
or
sahf
cmp
int
dec
mov
mov
insl
push
push
cmp
mov
mov
sub
xor
out
iret
xor
orl
mov
jo
inc
sbb
scas
xor
outsl
daa
sbb
clc
test
pushf
negb
pop
sub
pop
jo
or
inc
ss
xlat
enter
scas
mov
mov
and
rcrl
mov
fsts
shll
int3
lods
pop
mov
loop
cli
out
and
push
mov
pop
popf
xchg
test
dec
aaa
inc
int
jg
push
ds
xchg
dec
dec
mov
pop
or
sub
in
or
push
add
gs
loope
inc
cwtl
dec
cwtl
popa
loope
mov
adc
bound
inc
loop
ret
fldcw
sub
and
cli
dec
fwait
mov
push
insb
inc
xchg
enter
cmp
movsb
mov
xlat
sub
loop
gs
add
cmp
out
fimuls
sbb
push
dec
mov
add
adc
outsl
std
call
adc
fs
stc
lods
pop
xchg
mov
faddl
adc
inc
test
in
sub
out
sub
and
test
ds
fistps
mov
jne
xor
ds
jno
ds
push
in
stc
mov
loope
test
mov
push
das
add
pop
xor
std
mov
mov
pop
cmc
pop
repz
mov
jae
fcomps
mov
stos
in
jne
or
adc
adc
push
shrb
mov
jne
pop
aam
ret
rol
rclb
cmp
and
fdivrl
push
jno
clc
je
mov
mov
mov
xor
lea
mov
mov
mov
mov
xor
xor
add
add
imul
mov
cmp
je
mov
xor
mov
add
imul
add
mov
mov
jmp
mov
mov
xor
xor
add
add
imul
pop
pop
leave
ret
add
add
cmp
dec
add
add
add
add
add
add
add
jo
add
add
add
push
push
inc
push
mov
sbb
sti
addl
jb
pop
add
add
inc
cmp
jae
inc
imul
inc
imul
outsb
jae
fs
or
add
push
mov
xchg
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
xor
lea
movzbl
xor
add
inc
mov
cmp
jb
xor
lea
movzbl
xor
add
inc
mov
cmp
jb
xor
lea
movzbl
xor
add
inc
mov
cmp
jb
lea
mov
mov
mov
mov
mov
push
push
mov
mov
cmp
jne
lea
mov
mov
mov
add
mov
lea
mov
add
mov
lea
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
lea
push
mov
mov
xor
add
push
mov
lea
mov
lea
push
mov
mov
mov
mov
mov
movl
movl
movl
movl
pushl
mov
call
mov
mov
test
je
xorl
jmp
mov
mov
mov
xor
cmp
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
mov
movl
movl
lea
pop
mov
xor
add
mov
inc
dec
jne
lea
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
movl
pushl
mov
call
mov
xor
add
mov
cmp
jne
mov
or
mov
add
mov
mov
mov
mov
add
mov
mov
mov
mov
add
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
lea
mov
add
mov
lea
mov
mov
mov
mov
movzwl
xor
add
xor
mov
mov
movzwl
xor
add
xor
mov
xor
mov
mov
mov
lea
lea
movl
mov
call
mov
lea
push
mov
xor
add
push
lea
push
pushl
mov
call
mov
lea
lea
mov
call
mov
mov
mov
pushl
pushl
pushl
pushl
pushl
pushl
pushl
call
test
je
add
pushl
lea
call
mov
mov
mov
xor
add
mov
jne
mov
mov
pushl
mov
call
jmp
mov
mov
add
mov
mov
decl
mov
mov
mov
lea
mov
mov
mov
mov
add
pop
pop
pop
leave
ret
push
push
push
push
mov
mov
add
push
cld
mov
add
push
mov
lods
xchg
push
mov
or
shl
not
push
mov
or
shl
not
push
add
mov
sub
sub
inc
push
push
push
push
push
push
sub
push
or
mov
shl
lea
mov
shr
rep
push
pop
call
loop
lea
lea
mov
mov
sub
and
mov
mov
call
jne
mov
and
shl
sub
neg
shr
pop
add
pop
lea
shl
cmp
pop
lea
push
push
mov
push
mov
jb
mov
sub
movzbl
mov
shl
mov
and
add
lea
call
mov
shr
and
cmp
mov
jne
cmp
jb
jmp
mov
call
inc
inc
sub
sub
cmp
jb
pop
inc
cmp
dec
mov
jb
inc
cmp
dec
mov
dec
jb
mov
dec
sub
push
jmp
mov
dec
call
jne
pop
pop
pop
pop
pop
pop
pushl
push
push
mov
mov
jmp
mov
dec
call
jne
mov
dec
call
jne
pop
cmp
mov
jb
mov
push
mov
sub
cmp
jb
lods
mov
stos
jmp
mov
call
mov
je
mov
call
mov
je
mov
mov
mov
mov
mov
mov
mov
mov
pop
pop
pop
mov
mov
add
push
push
cmp
mov
jb
add
push
mov
call
jne
mov
mov
shl
sub
push
pop
lea
jmp
mov
add
call
jne
mov
mov
shl
push
pop
push
pop
lea
jmp
mov
add
push
pop
mov
mov
sub
inc
mov
call
mov
sub
jb
add
cmpl
jae
addl
mov
cmp
jb
push
pop
mov
shl
sub
inc
push
pop
lea
mov
call
mov
sub
jb
mov
mov
cmp
jb
mov
andl
shr
orl
dec
cmp
jae
mov
sub
mov
shlb
add
shl
add
mov
jmp
sub
call
shr
shll
cmp
jb
incl
sub
dec
jne
mov
add
mov
shll
push
pop
sub
inc
mov
mov
call
test
je
or
shl
dec
jne
jmp
incl
mov
add
mov
mov
sub
cmp
ja
mov
sub
mov
lods
stos
cmp
jae
dec
jne
mov
movzbl
cmp
jb
call
sub
lea
mov
mov
sub
mov
mov
cmp
sbb
add
jmp
jmp
ja
mov
pop
test
mov
imul
sbb
test
scas
popf
or
mov
fwait
les
sets
mov
popf
fwait
mov
stos
mov
mov
ja
mov
mov
sbb
test
mov
mov
xchg
test
push
and
mov
movzwl
shr
imul
cmp
jae
mov
mov
sub
shr
add
add
lea
ret
shr
sub
sub
sub
add
add
lea
ret
push
mov
sub
push
push
push
movl
movl
mov
mov
mov
mov
xor
mov
add
mov
mov
xor
add
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
movl
push
pop
mov
mov
push
pop
mov
mov
movl
movl
mov
xor
add
mov
mov
xor
add
mov
movl
movl
movl
lea
lea
call
decl
jne
decl
jne
decl
jne
movl
mov
xor
mov
add
mov
mov
andl
xor
add
mov
mov
mov
mov
mov
mov
mov
mov
lea
mov
mov
lea
mov
mov
pushl
lea
mov
call
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
add
mov
mov
lea
push
mov
mov
mov
add
push
pushl
push
call
pushl
xor
movl
movl
movl
movb
lea
stos
stos
stos
xor
movl
movl
movl
movb
lea
stos
stos
stos
mov
mov
mov
movl
movl
movw
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
call
push
mov
mov
pushl
call
test
jne
mov
mov
mov
add
mov
mov
mov
call
push
mov
call
test
jne
mov
mov
mov
add
mov
mov
mov
call
push
mov
call
mov
mov
xor
add
cmp
je
mov
xor
mov
sub
add
mov
cmp
ja
movl
pushl
mov
mov
mov
call
push
mov
mov
pushl
call
mov
mov
mov
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
mov
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
andl
mov
mov
and
add
push
call
test
je
mov
push
xor
pop
div
add
movzbl
push
call
test
jne
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
mov
jmp
andl
incl
cmpl
jb
mov
mov
xor
mov
add
lea
call
push
mov
mov
xor
add
lea
call
push
call
mov
xor
add
cmp
jne
movl
mov
mov
xor
lea
mov
mov
test
je
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
cmp
jbe
mov
mov
mov
cmp
jne
pushl
lea
push
call
mov
jmp
mov
mov
xor
add
xor
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
je
mov
xor
add
jmp
mov
mov
and
or
sub
add
mov
xor
lea
mov
cmp
jb
mov
mov
mov
movl
mov
mov
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
jmp
mov
mov
sub
mov
xor
add
xor
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
movl
mov
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
mov
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
push
mov
mov
xor
add
push
call
mov
mov
xor
add
cmp
je
mov
jmp
mov
xor
mov
mov
mov
xor
lea
xor
mov
sub
xor
cmp
jne
mov
mov
mov
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
mov
mov
mov
xor
mov
add
movl
movl
jmp
xor
mov
xor
add
mov
movsbl
movzbl
cmp
jne
mov
mov
xor
lea
xor
cmp
jne
jmp
mov
xor
add
mov
xor
add
cmp
je
mov
movl
movl
movl
movl
mov
mov
mov
xor
add
push
mov
mov
xor
add
push
mov
xor
add
push
mov
xor
add
push
call
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
mov
pushl
xor
add
push
call
mov
xor
add
mov
cmp
je
mov
xor
add
cmp
je
movl
movl
mov
xor
sub
mov
mov
xor
sub
mov
mov
xor
sub
mov
andl
andl
lea
push
pushl
push
lea
push
mov
pushl
mov
add
push
push
call
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
push
call
mov
add
xor
cmp
mov
mov
mov
jne
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
mov
jmp
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
movl
mov
mov
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
jmp
mov
mov
sub
mov
xor
add
xor
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
movl
mov
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
pushl
mov
pushl
lea
push
mov
mov
pushl
mov
mov
pushl
pushl
pushl
call
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
xor
add
push
mov
xor
add
push
pushl
call
pop
pop
pop
leave
ret
push
mov
push
push
lea
mov
push
mov
mov
mov
mov
cmp
pop
jne
movb
movb
movb
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
mov
movb
movb
movb
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
movb
mov
movb
movb
leave
ret
push
mov
push
push
lea
mov
push
mov
mov
mov
mov
cmp
pop
jne
movb
movw
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
mov
movb
movb
movb
leave
ret
push
mov
call
mov
mov
movb
call
push
mov
movb
call
push
movb
call
movb
mov
jmp
push
mov
push
mov
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
movl
mov
movzwl
xor
add
pop
test
je
mov
movl
leave
ret
push
mov
sub
andl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
push
mov
mov
mov
mov
mov
push
mov
test
jne
pushl
mov
call
mov
mov
add
mov
mov
mov
mov
xor
mov
add
cmp
jne
mov
mov
mov
mov
mov
mov
xor
add
mov
mov
andl
xor
add
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
movl
pushl
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
lea
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
movl
pushl
mov
call
test
je
andl
cmpl
jbe
mov
mov
sub
mov
incl
mov
mov
inc
cmp
jb
mov
mov
add
mov
mov
add
sub
add
mov
mov
mov
movl
jmp
add
shr
mov
je
lea
mov
mov
mov
mov
movzwl
mov
and
mov
mov
shr
add
xor
cmp
jne
mov
add
mov
cmpl
je
mov
add
mov
mov
mov
mov
addl
decl
jne
mov
add
mov
cmp
jae
add
mov
mov
test
jne
mov
mov
movl
mov
mov
mov
xor
add
mov
lea
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
mov
call
mov
mov
add
mov
pushl
mov
pushl
pushl
call
mov
add
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jb
mov
mov
mov
lea
mov
add
cmp
jae
mov
mov
mov
sub
add
mov
mov
jmp
xor
pop
pop
pop
leave
ret
push
mov
sub
push
mov
mov
cmpl
je
test
je
test
je
mov
test
je
cmpl
je
cmp
je
mov
andl
mov
sub
add
movzwl
mov
movzwl
add
je
lea
push
mov
mov
push
test
je
mov
andl
and
add
movzwl
movzwl
add
je
lea
mov
test
je
mov
andl
and
add
movzwl
movzwl
add
je
lea
mov
mov
mov
test
je
mov
add
movzwl
movzwl
incl
addl
add
cmp
jb
movzwl
movzwl
mov
incl
add
add
mov
cmp
jb
mov
movzwl
movzwl
incl
add
add
mov
cmp
jb
pop
pop
xor
inc
jmp
xor
pop
leave
ret
push
mov
mov
mov
sub
push
xor
push
push
cmp
je
cmp
je
cmp
jne
xor
inc
jmp
mov
add
mov
mov
mov
mov
add
add
mov
cmp
ja
mov
mov
cmp
jbe
cmp
jae
movzwl
jmp
mov
lea
mov
test
je
add
mov
cmp
jbe
mov
mov
add
cmp
jae
mov
jmp
sub
mov
mov
test
je
mov
inc
mov
cmp
jb
jmp
xor
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
movl
mov
mov
mov
mov
mov
mov
push
mov
push
mov
movl
mov
mov
push
mov
xor
xor
add
add
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
je
add
mov
mov
xor
add
mov
mov
cmp
je
mov
mov
imul
xor
add
cmp
jne
mov
mov
imul
xor
add
cmp
je
mov
mov
mov
imul
add
mov
add
xor
mov
mov
mov
xor
add
xor
mov
mov
add
add
cmp
je
add
mov
mov
xor
add
mov
lea
mov
movl
mov
pushl
mov
call
mov
xor
add
mov
cmp
jne
mov
pushl
mov
call
mov
movl
movl
mov
xor
add
cmp
jne
mov
mov
xor
xor
lea
mov
mov
add
imul
push
call
mov
xor
add
cmp
jne
mov
xor
add
cmp
jbe
mov
xor
add
cmp
jne
mov
mov
xor
lea
mov
jmp
movl
movl
mov
xor
add
jmp
mov
xor
add
mov
mov
xor
add
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
mov
xor
add
cmp
je
mov
mov
xor
add
shr
cmp
je
mov
mov
mov
movzwl
push
pushl
call
jmp
mov
add
mov
mov
add
push
pushl
call
mov
mov
mov
xor
add
cmp
mov
jne
mov
xor
lea
mov
jmp
mov
xor
add
imul
mov
mov
mov
xor
lea
mov
mov
xor
add
cmp
jne
mov
mov
mov
sub
xor
jmp
mov
xor
add
cmp
mov
jne
mov
jmp
mov
xor
add
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
mov
mov
push
mov
mov
mov
mov
xor
mov
add
cmp
je
mov
mov
add
push
mov
movl
mov
mov
mov
xor
xor
add
cmp
je
mov
mov
add
mov
mov
sub
mov
xor
add
mov
cmp
je
mov
xor
add
mov
push
movl
jmp
mov
xor
lea
add
shr
cmp
jae
sub
lea
mov
movzwl
and
mov
mov
mov
sub
add
movzwl
shr
xor
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
cmp
jne
mov
mov
add
add
decl
jne
mov
add
mov
mov
mov
xor
cmp
jae
add
mov
mov
xor
add
mov
cmp
jne
pop
mov
pop
jmp
mov
xor
add
pop
leave
ret
push
mov
sub
movl
movl
mov
push
push
mov
xor
push
mov
add
mov
mov
xor
add
mov
mov
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
movl
mov
test
je
mov
test
je
mov
test
je
mov
mov
xor
add
cmp
jne
mov
xor
add
mov
mov
mov
mov
add
mov
mov
test
je
movl
mov
xor
add
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
cmp
jne
mov
lea
push
mov
xor
add
push
pushl
pushl
call
mov
mov
mov
sub
add
push
call
mov
mov
mov
mov
pushl
pushl
push
call
mov
mov
add
movzwl
lea
mov
mov
movzwl
xor
add
mov
cmp
je
mov
xor
add
mov
mov
movzwl
xor
sub
sub
cmp
ja
mov
add
mov
jmp
mov
mov
lea
mov
mov
test
je
not
and
add
mov
add
push
call
mov
mov
mov
xor
add
cmp
je
push
mov
add
mov
add
push
push
call
mov
mov
mov
add
xor
lea
mov
mov
mov
movzwl
xor
sub
mov
sub
mov
cmp
jbe
mov
mov
cmp
jne
mov
lea
push
mov
xor
add
push
mov
pushl
push
call
test
je
mov
mov
mov
xor
add
je
mov
xor
add
andl
mov
mov
lea
movl
movl
mov
mov
mov
movl
mov
mov
xor
mov
add
mov
incl
cmpl
mov
jb
mov
mov
mov
mov
mov
lea
lea
mov
mov
movl
mov
mov
movl
movl
movl
movl
movl
mov
movl
mov
movl
mov
movl
mov
movl
movl
xor
mov
xor
sub
mov
inc
cmp
jb
mov
lea
push
call
mov
lea
push
push
call
mov
lea
push
mov
pushl
mov
call
mov
xor
add
mov
mov
mov
xor
add
cmp
je
mov
jmp
mov
mov
mov
mov
cmp
je
mov
mov
cmp
jne
mov
mov
cmp
jne
mov
mov
mov
add
mov
mov
xor
add
mov
mov
push
push
pushl
call
test
je
pushl
mov
pushl
call
test
je
mov
mov
mov
call
test
je
push
pushl
call
test
je
mov
mov
cmp
jne
mov
lea
push
pushl
mov
pushl
push
call
mov
mov
mov
xor
add
je
mov
mov
movl
mov
pushl
xor
pushl
add
or
add
push
call
movl
jmp
mov
mov
add
call
mov
mov
mov
mov
movl
cmpl
jne
andl
mov
jmp
xor
pop
pop
pop
leave
ret
push
mov
movzwl
movzwl
push
push
xor
lea
test
je
mov
lea
cmp
jb
mov
add
add
cmp
jb
add
inc
cmp
jb
xor
pop
pop
pop
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
mov
xor
push
mov
mov
add
push
cmp
je
mov
mov
xor
add
cmp
je
mov
xor
add
mov
mov
xor
add
mov
mov
mov
mov
xor
mov
xor
add
add
sub
mov
jmp
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
mov
mov
je
cmp
je
mov
mov
xor
add
cmp
jb
mov
mov
xor
add
cmp
ja
movzwl
movzwl
add
mov
mov
mov
xor
add
cmp
jb
mov
mov
xor
add
cmp
ja
movzwl
movzwl
add
mov
mov
mov
cmp
jne
mov
mov
xor
lea
mov
mov
mov
xor
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
imul
mov
jmp
mov
mov
xor
lea
mov
mov
sub
xor
mov
mov
sub
xor
mov
mov
mov
xor
add
xor
add
imul
mov
movzwl
mov
mov
xor
add
xor
add
imul
mov
movzwl
sub
sub
xor
xor
cmp
jne
mov
mov
xor
add
xor
add
imul
mov
movzwl
mov
sub
xor
cmp
mov
je
mov
pop
xor
pop
add
pop
leave
ret
push
mov
push
mov
push
mov
sub
mov
xor
mov
movl
mov
cmp
je
push
push
movzwl
mov
mov
mov
cmp
jne
mov
lea
xor
mov
xor
mov
mov
sub
mov
xor
mov
cmp
jne
mov
pop
pop
cmp
je
xor
lea
pop
leave
ret
push
mov
push
push
push
movl
mov
call
mov
mov
sub
xor
cmp
je
mov
mov
mov
push
mov
mov
sub
mov
xor
mov
cmp
jne
mov
lea
xor
mov
xor
lea
mov
sub
xor
cmp
jne
mov
pop
cmp
je
xor
xor
mov
mov
pop
pop
leave
ret
push
mov
push
push
movl
mov
call
mov
mov
sub
mov
xor
mov
cmp
je
push
push
movzwl
mov
mov
mov
cmp
jne
mov
lea
xor
mov
xor
mov
mov
sub
mov
xor
mov
cmp
jne
cmpl
pop
pop
je
xor
inc
jmp
xor
pop
leave
ret
push
mov
push
mov
movzwl
push
lea
mov
push
xor
mov
mov
cmp
je
mov
sub
mov
jmp
mov
mov
add
movzwl
mov
add
xor
mov
cmp
jne
xor
pop
mov
mov
pop
leave
ret
push
mov
sub
movl
movl
mov
push
mov
xor
mov
add
mov
movl
movl
push
movl
jmp
mov
mov
sub
mov
xor
add
cmp
jbe
mov
add
mov
add
mov
mov
mov
mov
mov
jmp
mov
mov
sub
mov
xor
add
cmp
mov
jbe
add
mov
add
mov
mov
mov
jmp
mov
sub
mov
xor
add
cmp
mov
jbe
add
mov
add
mov
mov
mov
mov
xor
lea
mov
jmp
add
mov
add
mov
mov
incl
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jb
pop
pop
leave
ret
push
mov
sub
movl
push
mov
movl
mov
mov
xor
mov
add
cmp
je
push
push
mov
mov
xor
mov
sub
add
lea
xor
mov
mov
mov
xor
sub
xor
mov
mov
xor
add
cmp
jne
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
mov
mov
mov
push
push
mov
xor
mov
add
cmp
mov
jne
xor
add
jmp
mov
xor
add
cmp
jne
mov
jmp
lea
mov
mov
mov
mov
xor
add
mov
mov
push
call
mov
mov
mov
jmp
mov
sub
mov
mov
mov
call
mov
pushl
mov
call
mov
xor
add
cmp
jne
mov
call
mov
xor
add
push
pushl
mov
call
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
add
cmp
jne
mov
xor
add
pop
pop
pop
leave
ret
mov
mov
jmp
push
mov
mov
sub
cmpl
push
push
push
je
test
je
movzwl
mov
mov
xor
and
mov
xor
add
mov
andl
xor
push
pop
cmp
jae
lea
xor
movzwl
mov
lea
cmp
jne
movzwl
mov
cmp
jne
mov
movzwl
cmpb
je
mov
movzwl
movsbw
mov
sub
xor
cmp
je
push
pop
incl
mov
cmp
jb
jmp
incl
push
pop
mov
movzwl
cmpb
je
inc
cmp
jne
xor
pop
pop
pop
leave
ret
mov
add
xor
xor
cmp
sete
jmp
push
mov
sub
push
mov
mov
cmpl
jne
xor
jmp
pushl
push
pop
call
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
push
mov
mov
call
push
mov
pushl
call
mov
test
je
mov
push
push
mov
add
mov
mov
mov
mov
add
mov
mov
add
add
mov
mov
mov
cmp
ja
mov
xor
mov
cmp
jbe
jmp
mov
mov
movzwl
cmp
jae
cmp
jae
mov
mov
mov
mov
lea
add
add
sub
movl
mov
mov
cmpl
jne
mov
pushl
push
call
mov
test
je
mov
mov
mov
addl
decl
jne
mov
inc
mov
cmp
jb
pop
pop
pop
leave
ret
push
mov
mov
push
pushl
lea
mov
call
mov
mov
mov
xor
cmp
pop
setne
mov
pop
ret
mov
push
jmp
xor
add
mov
add
add
movzwl
mov
cmp
jne
xor
mov
mov
pop
ret
push
mov
mov
shl
add
jmp
xor
add
mov
inc
inc
mov
cmp
jne
movb
mov
add
pop
ret
push
mov
sub
movl
movl
mov
mov
movl
push
push
movl
mov
mov
mov
xor
mov
xor
add
add
imul
jmp
mov
mov
xor
xor
add
add
test
mov
mov
je
xor
xor
add
add
shr
mov
xor
add
xor
jmp
xor
xor
add
add
shr
mov
mov
xor
lea
mov
mov
xor
xor
sub
cmp
jbe
mov
pop
mov
mov
pop
leave
ret
push
mov
sub
push
mov
mov
lea
mov
mov
mov
push
mov
xor
push
mov
add
cmp
mov
je
mov
xor
add
cmp
je
mov
mov
mov
mov
movl
mov
lea
mov
mov
mov
mov
mov
xor
mov
sub
sub
mov
movl
jmp
mov
mov
xor
xor
lea
mov
xor
div
mov
mov
xor
xor
sub
cmp
jne
mov
mov
mov
mov
mov
xor
xor
add
add
cmp
jae
lea
mov
mov
xor
add
lea
mov
mov
cmp
jbe
addl
jmp
addl
mov
xor
inc
incl
add
cmp
jb
mov
cmpl
jne
xor
add
jmp
mov
xor
mov
sub
add
mov
xor
sub
ror
xor
mov
mov
mov
mov
mov
sub
xor
cmp
jne
mov
mov
xor
xor
sub
mov
sub
xor
mov
mov
xor
sub
sub
jmp
mov
xor
mov
sub
add
mov
mov
cmp
jne
mov
jmp
mov
xor
add
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
movl
push
movl
mov
push
mov
push
xor
mov
add
mov
movl
movl
movl
mov
mov
mov
xor
xor
add
add
imul
jmp
mov
sub
xor
mov
lea
call
mov
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
xor
sub
mov
cmp
jbe
mov
xor
add
mov
movl
mov
jmp
mov
mov
xor
add
shr
mov
mov
mov
mov
mov
mov
movzbl
xor
mov
mov
mov
xor
add
and
mov
mov
xor
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
pop
pop
xor
pop
leave
ret
push
mov
mov
mov
mov
mov
mov
sub
push
push
push
mov
xor
mov
add
cmp
jne
orl
jmp
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
sub
mov
mov
mov
mov
dec
test
mov
je
mov
mov
mov
dec
not
and
mov
mov
add
jmp
mov
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
xor
add
mov
mov
movl
movl
movl
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jae
mov
xor
add
mov
mov
add
mov
pushl
mov
mov
call
mov
movl
mov
xor
lea
add
push
call
mov
test
je
mov
xor
add
push
pushl
lea
push
call
mov
mov
mov
mov
sub
mov
mov
mov
mov
add
mov
cmp
jb
mov
mov
mov
add
mov
sub
jmp
push
pushl
lea
push
call
mov
mov
movl
movl
movl
lea
mov
lea
mov
lea
mov
lea
mov
mov
xor
add
mov
jmp
cmp
je
mov
xor
mov
add
mov
mov
xor
lea
mov
mov
mov
xor
add
cmp
jne
mov
xor
add
push
push
lea
push
call
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
lea
push
call
mov
cmp
je
mov
xor
add
mov
mov
xor
lea
xor
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
jne
mov
mov
xor
lea
jmp
push
pushl
lea
push
call
mov
mov
xor
add
cmp
je
mov
xor
add
push
push
lea
push
call
mov
add
mov
pushl
pushl
mov
add
push
call
mov
mov
xor
add
cmp
je
push
pushl
mov
add
push
call
mov
mov
add
mov
add
mov
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jb
mov
mov
mov
jmp
mov
mov
xor
xor
add
add
cmp
jne
mov
imul
mov
jmp
mov
xor
add
cmp
je
subl
jmp
andl
pop
pop
pop
leave
ret
push
mov
and
mov
sub
push
mov
push
push
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
mov
add
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
push
push
pushl
push
call
mov
mov
pushl
xor
add
mov
lea
push
push
pushl
pushl
pushl
call
mov
mov
xor
add
cmp
je
mov
mov
xor
add
imul
mov
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
pushl
pushl
push
pushl
pushl
pushl
call
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
mov
mov
movl
mov
xor
add
mov
mov
push
mov
pushl
lea
pushl
push
pushl
pushl
pushl
call
mov
mov
leave
ret
