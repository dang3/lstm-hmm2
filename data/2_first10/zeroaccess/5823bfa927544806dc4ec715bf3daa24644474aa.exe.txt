push
mov
sub
mov
mov
jmp
adcb
shrl
cmp
outsl
jge
jle
xlat
cmp
rol
pop
add
add
add
xor
rcrb
adc
mov
push
out
mov
es
lods
fiadds
data16
outsl
or
pushf
js
inc
stos
push
sub
mov
stos
push
roll
jmp
mov
dec
out
inc
call
mov
and
jnp
ret
xchg
and
jmp
ret
lock
and
add
adc
xor
or
fisttpll
ds
or
fst
or
pop
fstps
jno
inc
dec
aaa
adc
sarl
dec
call
loopne
ljmp
aaa
or
shl
fs
daa
adc
test
mov
push
shll
sbb
push
mov
in
call
mov
lret
add
pop
int
xlat
imul
mov
dec
fisubl
scas
das
cmp
cmp
stos
hlt
leave
fs
mov
lods
nop
and
and
ficoml
stos
pop
iret
jne
das
outsl
stos
sub
mov
lret
in
lds
pop
pop
dec
sbb
mov
push
xchg
mov
lret
sub
jbe
ret
xor
mov
xchg
shl
orb
cmpsl
fmuls
test
out
ss
cmp
call
pop
data16
xchg
mov
sti
mov
and
fidivrs
in
cmp
push
jmp
ret
and
and
mov
cmp
sbb
fnstsw
std
insb
sbb
pop
push
jmp
jl
push
std
pop
xor
jbe
fcoml
jbe
and
pusha
stc
mov
mov
rorl
roll
jl
subb
loopne
addr16
in
mov
mov
or
cmp
cmp
fcomip
aaa
test
fldt
xchg
adc
ret
mov
sbb
popf
call
test
out
ss
xchg
ljmp
mov
pushf
in
mov
js
and
in
in
xchg
mov
mov
mov
mov
testb
bound
pop
and
xchg
scas
ljmp
sbbb
movsl
rcrl
pop
cmp
add
dec
test
shrl
das
fisttpll
repz
dec
mov
jno
xor
jp
loop
jb
lret
xchg
mov
aam
add
sbb
fs
test
pop
fwait
adc
aam
ss
pushf
cltd
je
mov
out
sub
je
and
mov
or
js
movsb
jbe
pop
es
pop
sbb
outsl
lret
mov
divb
mov
xchg
test
flds
lret
jecxz
add
arpl
sub
loop
dec
dec
mov
sub
add
sub
push
lcall
pop
aad
lock
loop
repz
cmp
or
sub
jmp
mov
dec
add
jge
or
in
push
cmc
call
outsl
in
mov
adc
ret
jmp
mov
jbe
or
call
push
cltd
fdivl
pop
mov
jmp
jns
rcl
in
ljmp
push
xor
push
mov
sbb
inc
sbb
pop
or
push
xchg
jae
pusha
cmpb
sbb
or
mov
popa
adc
rclb
inc
ret
push
lock
cwtl
or
inc
int3
xchg
shll
add
gs
loope
xlat
sub
mov
subb
movsl
push
arpl
push
mov
xor
popa
push
sub
sub
jle
notl
addr16
adc
fcomps
mov
mov
movl
adc
movl
adc
mov
mov
mov
or
push
push
sbb
mov
movzbl
sbb
xor
and
push
movl
cmpl
je
cmpl
jne
pushl
call
mov
dec
mov
jmp
mov
jmp
xchg
mov
push
mov
push
out
xor
jge
jle
jge
jle
lea
xor
mov
inc
cmp
sbb
popf
pop
xor
ret
punpckldq
mov
xor
adc
lret
mov
popa
push
mov
push
ja
mov
xor
inc
rorb
repz
add
cmpsb
negb
in
icebp
sti
test
insl
stos
data16
mov
mov
xchg
popf
fs
mov
cmpsb
cli
xor
xchg
xlat
in
lock
mov
add
outsl
repnz
std
jge
dec
int
dec
xlat
push
dec
nop
jg
cmp
push
lds
mov
inc
and
es
mov
clc
xor
inc
cwtl
sbb
pop
in
mov
and
stos
add
or
mov
sub
out
fists
xchg
jb
push
xchg
sub
push
jmp
scas
repz
jmp
sbb
mov
es
mov
bound
lods
xchg
dec
lea
dec
mov
push
in
shl
icebp
sbb
sub
std
add
leave
lds
push
fsubrs
ja
dec
adc
data16
mov
lret
cmc
jb
xchg
cwtl
out
cwtl
pop
sbb
mov
mov
stos
js
dec
out
rcrb
adc
ret
mov
jp
out
push
pop
dec
enter
jae
ja
setae
in
mov
xchg
push
clc
lea
xor
push
push
adc
jmp
stos
cmp
cmpsb
loopne
lret
add
lcall
jp
inc
xchg
in
xor
pop
loopne
int
or
cmpsb
pop
das
pop
jmp
negl
out
bound
fistl
int
jecxz
or
fwait
push
sbb
sbb
mov
adc
std
jbe
mov
loop
or
lds
mov
fisubrs
clc
xchg
ss
ret
insb
xchg
jae
int3
clc
push
pop
fildl
adc
push
push
fisttps
add
jbe
cld
out
adc
push
sub
push
xlat
push
out
out
cld
adc
xchg
cs
and
sbb
int
rcrb
ds
or
fsubs
nop
mov
in
mov
push
imul
add
xor
xlat
and
cmp
imul
dec
repz
xchg
outsl
or
jns
fwait
je
lahf
jno
clc
loop
push
out
fdivrl
add
adc
insl
jg
icebp
in
mov
sbb
jb
jo
jb
shrd
inc
cmp
xor
cltd
nop
xchg
cmp
sbb
add
jl
out
pusha
scas
inc
mov
cmp
push
add
scas
add
pop
jl
dec
add
imul
ret
dec
ss
mov
adc
mov
push
sub
gs
lret
dec
sbb
push
lods
jnp
add
and
adc
sbb
repnz
inc
push
pop
and
cltd
test
das
cmp
or
xchg
cmpsl
fwait
or
aad
insl
inc
cmp
mov
mov
inc
mov
xor
cmp
addr16
movsb
push
dec
mov
jo
xor
iret
sahf
shlb
loopne
movsl
add
pusha
cmp
xor
stos
xor
xchg
lahf
out
jo
jbe
and
movl
into
xor
xchg
xchg
push
sbb
adc
dec
lcall
mov
out
into
out
shll
out
ret
push
cs
mov
and
cld
imull
sub
test
cmp
or
mov
leave
lret
in
sub
or
cmpl
cltd
push
movl
mov
adc
pusha
cmp
aaa
aaa
inc
add
add
add
or
sbb
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
movl
mov
movl
movl
or
movl
add
movl
xor
mov
xor
xor
add
mov
movl
sbb
movb
subl
mov
xor
add
sbbl
mov
mov
xor
xorl
add
mov
mov
movl
cmpl
je
cmpl
jne
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
andl
xor
add
not
mov
sub
mov
add
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
xor
xor
inc
mov
jmp
movl
cmpl
je
cmpl
jne
push
call
cmpl
jne
xor
xor
dec
mov
mov
dec
mov
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
xor
jmp
mov
mull
cmp
cmp
jg
jns
jle
jge
jle
lods
call
jge
lods
dec
mov
add
jmp
arpl
js
pushf
add
faddp
fwait
mov
adc
or
cld
xchg
mov
inc
sti
fistps
dec
rol
xchg
icebp
mov
int3
jb
push
mov
aas
add
popf
sahf
sbb
lods
int3
jle
stc
scas
sbb
data16
sbb
add
nop
fwait
and
out
push
test
icebp
scas
dec
or
cmp
out
jl
pop
pop
enter
xchg
test
mov
and
dec
adc
cmp
test
cltd
cmc
ja
je
addr16
fldl
std
mov
jae
ffree
dec
clc
sub
hlt
push
inc
fcomps
xor
inc
ja
or
and
cmpsb
xchg
aad
cmp
ds
insl
das
rclb
lock
cwtl
fisttpll
jb
dec
pop
icebp
mov
mov
mov
xor
hlt
jl
push
inc
jbe
add
mov
lods
sub
lds
movsl
outsl
adc
fwait
nop
xor
dec
fsts
es
mov
and
int3
mov
aam
cmp
js
rcll
mov
flds
xor
push
popf
mov
std
xchg
sub
jo
sub
cmp
es
addl
gs
mov
shll
lods
push
rcll
or
cmp
lret
add
divps
pop
lret
xchg
test
add
jl
cltd
push
mov
stc
idiv
int3
shl
scas
add
xor
xchg
sub
jp
xchg
cmc
ss
jno
es
lods
sbb
adc
movaps
add
ret
ja
bound
push
lods
or
scas
inc
hlt
push
jno
jle
xchg
xchg
add
inc
lods
jp
push
fcmovu
int3
add
lods
sbb
test
cmp
scas
cmp
mov
sahf
mov
notb
add
nop
fwait
insb
add
js
pop
xor
mov
mov
adc
mov
lea
sahf
gs
cwtl
xor
add
iret
or
enter
xor
inc
push
jl
mov
xor
jnp
adc
mov
xor
sbbb
mov
cmc
test
je
ljmp
adc
repnz
mov
ljmp
adc
call
xchg
mov
data16
mov
jl
ficomps
dec
adc
jecxz
clc
xlat
pop
xor
mull
fcompl
mov
xchg
repz
aaa
mov
jecxz
int
mov
sbb
inc
ss
lret
dec
dec
bound
mov
jnp
mov
jno
mov
push
inc
out
pop
mov
xor
jp
dec
mov
push
add
xor
loopne
mov
jmp
fcomps
cmp
push
pop
xor
aaa
cli
pop
mov
jb
mov
mov
insb
fldt
mov
btr
xchg
in
scas
shrl
js
insl
pop
xor
jae
add
xor
xchg
andl
push
sub
jmp
mov
dec
std
cld
rcr
and
push
add
mov
loopne
sub
dec
xlat
test
xchg
jb
pop
in
and
inc
jl
dec
sbb
adc
ss
ja
mov
data16
mov
orb
in
icebp
mov
or
int
mov
nop
lahf
push
jo
je
mov
into
fadds
mov
mov
sub
add
mov
mov
mov
xor
jmp
lahf
in
leave
decl
imul
je
inc
jle
add
jle
jl
aas
in
or
mov
lret
sbb
loopne
mov
push
xchg
loope
mov
mov
inc
mov
inc
mov
int3
push
mov
negb
stos
sbb
rcl
test
mov
push
xchg
and
int
out
int3
mov
xor
das
pop
je
cmpsl
jp
jno
in
mov
mov
dec
jmp
xchg
mov
repz
sbb
cli
lods
mov
add
mov
cmovae
lahf
push
cmp
sub
ret
out
inc
dec
mov
adc
jg
add
dec
or
imull
or
dec
mov
jecxz
xor
test
in
lahf
ss
inc
pop
pushf
xchg
pop
jg
mov
rep
cmp
jnp
push
iret
dec
pop
daa
dec
ds
sbb
lcall
add
or
mov
cmp
dec
shlb
xchg
xchg
bsr
pop
push
mov
xchg
fbstp
add
mov
pop
subb
jmp
int
test
push
pop
and
divl
fbstp
push
test
dec
xchg
mov
jno
fwait
das
sbb
mov
outsl
fucomi
lahf
ds
xchg
pop
dec
scas
push
mov
ja
pop
mov
ss
in
sub
into
and
iret
test
sbb
mov
xchg
out
jbe
dec
pop
xlat
and
lar
clc
xchg
rcl
stos
lret
ja
js
inc
push
xor
sahf
lahf
fstps
lret
out
je
fstp
pop
addr16
enter
push
stc
enter
aad
adc
ficoml
pop
dec
dec
cmp
pop
andl
inc
xor
push
rcl
cli
add
adc
pop
adc
aas
dec
mov
add
pusha
sbb
sub
xchg
rorl
cmc
mov
scas
fwait
gs
sbb
mov
xchg
dec
adc
imul
mov
std
daa
jecxz
sub
xor
gs
adc
cli
mov
sub
out
cmp
inc
jp
push
lds
jmp
sti
sub
mov
xchg
scas
fisubrs
sbb
in
jle
sbb
lods
dec
xchg
in
addl
stos
sbb
and
xchg
sub
fs
dec
incl
pop
loop
inc
and
outsb
in
jns
push
mov
lds
mov
iret
lcall
lret
or
pop
xchg
and
insb
add
fldl
fadds
loopne
add
jmp
dec
popf
xor
push
ror
mov
push
pop
ljmp
fsts
int3
mov
stos
nop
cmp
mov
popa
mov
test
mov
inc
cwtl
popaw
scas
sbb
add
pop
push
out
iret
mov
lea
mov
add
lahf
test
pop
add
xor
jo
xchg
idivl
int3
mov
mov
pop
test
mov
cmp
into
addr16
enter
les
loop
pop
adc
outsl
dec
loop
xacquire
mov
or
dec
int3
push
out
lahf
cmp
cmpsb
push
stos
neg
and
fxtract
ret
and
mov
lret
jns
shlb
mov
nop
dec
inc
mov
aaa
sub
lds
je
psraw
movsl
adc
mov
cmp
mov
pop
xor
jne
js
out
sarb
inc
xchg
push
incl
inc
clc
mov
xor
mov
not
mov
or
mov
and
mov
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
movzwl
or
mov
xor
add
orl
mov
mov
andl
mov
inc
mov
cmpl
jne
pushl
pushl
pushl
pushl
push
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
xor
add
mov
mov
mov
jmp
rorb
dec
inc
push
push
push
sbb
fdivl
outsl
jge
jle
and
cmpsl
das
aad
outsl
dec
lods
scas
cmp
mov
clc
sub
rol
mov
jg
and
xchg
pop
lock
out
subl
pop
add
and
pop
push
dec
fists
or
imul
in
xor
pushf
and
add
sbb
into
lods
sahf
and
insl
xor
inc
mov
test
and
push
addr16
das
pop
xor
xor
adc
dec
inc
pop
xor
daa
lret
in
dec
xor
ja
outsl
mov
andb
push
adc
adc
nop
jae
mov
imul
int3
scas
mov
stc
lods
bnd
into
in
xchg
cmpsb
mov
loop
adc
inc
mov
int
sub
lds
cmc
mov
push
mov
mov
pop
mov
mov
scas
xor
lock
pushf
mov
jp
scas
sbb
pop
push
adc
push
aam
mov
and
repnz
call
jg
mov
dec
iret
lods
adc
imul
stos
sub
sbb
push
xchg
add
adc
lret
popf
mov
push
out
cmp
cwtl
fcoms
or
pop
std
sbb
out
imul
mov
mov
in
aam
int3
jge
outsl
adc
ljmp
mov
jbe
pop
into
aaa
xor
ss
stos
insl
mov
sbb
data16
insl
dec
pop
sub
lods
jmp
mov
mov
sbb
in
push
lods
jb
jo
or
aas
jo
pop
mov
sbb
faddp
push
pop
mov
push
jge
mov
lret
mov
sub
mov
jecxz
out
aas
mov
popf
mov
push
mov
arpl
jo
mov
mov
xlat
jns
dec
stos
mov
test
xor
adc
lret
xchg
popf
imul
insb
sbb
and
call
pop
and
inc
dec
adc
xorl
xor
shl
inc
negl
sub
mov
xor
loopne
jle
ss
pop
repnz
imul
sbb
sub
push
cwtl
mov
pop
test
xchg
jne
aad
pop
popf
push
inc
sub
cs
cwtl
mov
push
adc
ss
jmp
outsl
fiadds
cmp
sbb
in
jmp
jae
jg
nop
inc
mov
xorb
add
jns
ret
xchg
repnz
ds
mov
pop
pop
lahf
push
mov
mov
mov
jecxz
sti
jbe
dec
mov
mov
fmull
js
cmp
mov
pop
mov
push
pop
xlat
hlt
loopne
pop
and
mov
insb
out
or
out
insl
pop
and
add
call
pop
ficoms
inc
fnstenv
pop
stos
xor
cmpb
push
scas
pop
aas
jnp
and
jp
pop
fnstcw
jo
push
dec
add
mov
push
cmpsb
and
popa
scas
add
call
dec
jbe
or
enter
fwait
dec
inc
push
dec
scas
rcrb
xor
mov
cmp
push
xchg
mov
xor
and
hlt
push
jmp
mov
add
pop
orb
xchg
lret
shlb
dec
mov
fwait
sub
fstps
stc
scas
cmp
add
pop
arpl
pushf
enter
inc
and
js
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
je
lea
push
mov
xor
add
push
mov
jmp
xor
mov
mov
mov
sbb
adc
stos
or
jle
movsl
in
repnz
jecxz
loop
ds
rorb
adc
test
test
sub
sub
push
insb
jo
cld
pop
lock
mov
lds
imul
pop
inc
lret
pop
mov
fs
pop
fists
and
sub
andl
push
push
popa
sbb
shll
out
ret
add
sti
in
push
sbb
outsl
es
lahf
or
lods
cmp
add
and
out
cmpsb
push
and
mov
adc
push
pop
popa
imul
xchg
jle
sbb
out
mov
cmp
sub
test
and
pop
in
mov
inc
into
pop
jmp
or
subb
push
adc
fcomps
stos
cmp
lods
popf
subb
cmp
xchg
cmpb
sub
cs
out
imul
in
xor
cmc
sub
rcrl
jo
lahf
andl
jno
push
cwtl
in
in
inc
xor
push
out
das
mov
lock
xor
in
cmp
test
test
pop
fnstsw
fucomi
pop
ja
xchg
stos
loopne
sar
pop
clc
int3
jl
add
lds
sub
test
xor
cmp
orl
hlt
jo
mov
xor
mov
push
sti
and
cmc
arpl
pop
sub
push
js
mov
jg
lret
pushf
xchg
and
fldenv
fistl
add
pop
ret
ss
popf
lea
dec
mov
jg
mov
mov
xor
jb
fs
xadd
inc
xchg
gs
pop
and
add
outsl
ret
xor
pop
or
js
stos
pusha
inc
testl
mov
inc
nop
fildl
in
aas
mov
mov
cltd
push
lock
lret
or
mov
mov
stos
mov
or
scas
je
push
inc
test
adc
sbb
cmp
push
xor
mov
add
jbe
push
mov
in
call
push
inc
pop
cltd
jns,pt
fstl
call
jg
jno
filds
dec
xor
cmp
and
fucomi
pop
insb
inc
sbb
mov
sub
shll
sbb
fs
xchg
jbe
sub
mov
mov
sbb
pop
cltd
mov
push
addr16
insb
inc
adc
add
mov
cmp
popa
insb
pop
sub
adc
add
jo
mov
mov
xor
mov
loop
sub
mov
test
daa
iret
in
das
sub
rcrb
out
mov
clc
inc
add
stos
lcall
mov
jg
lods
push
dec
jnp
or
pop
fiadds
add
sub
aam
push
lret
push
addr16
subb
movsl
inc
test
scas
fdivrs
pushf
jae
mov
push
pop
mov
adc
fdivs
sub
mov
jnp
cli
pop
or
xor
cwtl
cmovs
movsb
mov
fcmovnb
add
aad
fwait
mov
ret
jl
pop
push
test
lahf
and
sub
push
lret
out
rclb
test
in
js
adc
adc
icebp
and
loope
fisubs
insb
ds
and
pop
ja
jmp
mov
fucom
xchg
ror
or
xor
aaa
sub
dec
mov
mov
jnp
repz
push
es
in
fadds
arpl
sbb
in
add
push
mov
mov
pushl
call
mov
cmpl
lea
mov
je
lea
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
jmp
stos
addr16
in
loope
jno
jo
fs
or
outsl
jge
jle
add
jo
push
mov
xor
lcall
mov
mov
ret
in
adc
mov
dec
pop
lret
aaa
cmp
pop
shl
fstpl
decl
in
out
jle
push
mov
fs
sbb
in
fstl
push
imul
and
push
dec
lods
stos
cmp
cmpsl
xor
shll
add
inc
push
lods
pop
xchg
flds
testb
pop
mov
das
lahf
xchg
pop
std
pop
es
shll
push
sub
in
pop
sbb
rcr
jbe
fcomps
adc
cmpsb
loopne
inc
je
fnstcw
and
cmpsl
out
icebp
jb
shrl
cld
std
pushf
icebp
push
scas
xchg
or
sbb
sub
sbb
add
lret
mov
push
iret
fnstsw
pop
push
add
add
scas
xor
push
ja
cmp
inc
and
jmp
lods
pop
push
push
sar
add
pop
push
dec
pop
fidivs
mov
sub
movsl
fwait
pop
mov
lods
sub
jmp
pop
dec
jns
inc
lods
rcrl
mov
cmp
cmp
add
int
or
and
mov
adc
jae
mov
aam
insl
mov
jbe
sbb
sbb
mov
das
jp
cmc
mov
movsl
mov
imul
xor
hlt
pop
fldl
add
jp
xchg
jg
daa
mov
cli
insl
aam
push
icebp
movsb
int3
int3
xchg
ljmp
mov
push
out
or
outsb
aam
out
mov
sar
xchg
sbb
movsl
divl
mov
jmp
push
mov
test
call
in
dec
cmp
jbe
js
inc
adcb
sub
mov
out
sub
push
movsl
add
popa
scas
xlat
test
mov
sub
shll
add
int
enter
pusha
pop
push
or
sarl
xor
sahf
aad
sahf
push
mov
incb
addr16
adc
sbb
fnstsw
loopne
fisttps
push
push
enter
sbb
bound
lea
rcl
mov
inc
loop
aaa
cmp
adc
adc
orb
jb
jno
lods
lock
clc
xchg
fs
mov
aam
xchg
sbb
int
jne
xchg
lods
dec
mov
or
pop
mov
cwtl
lock
hlt
aaa
fidivrs
ror
mov
dec
loope
std
icebp
icebp
jbe
push
shr
mov
xlat
stc
imul
jnp
pop
movsl
js
jnp
sub
addl
sub
stos
adcl
xor
xchg
push
or
test
ret
push
std
bound
outsl
push
dec
cmp
mov
ficomps
lahf
int
dec
mov
push
int
mov
adc
sbb
sahf
ret
sbb
push
dec
mov
stos
mov
and
popf
push
pop
mov
xor
div
arpl
sbb
push
in
or
imul
sub
data16
mov
add
push
mov
mov
das
sti
xchg
pushf
ja
aam
sahf
jp
dec
pop
sub
test
fwait
sarb
lods
ljmp
mov
xchg
xlat
scas
scas
xchg
std
add
mov
sub
ret
sub
adc
pop
jecxz
xchg
imul
adc
mov
mov
addb
sub
mov
push
fdivr
loop
add
clc
mov
mov
mov
mov
mov
mov
mov
mov
jmp
mov
jmp
jno
mov
cs
mov
out
and
jge
jle
push
cli
out
sbbl
pop
popf
jnp
dec
sub
popa
xor
jnp
mov
inc
or
xor
jbe
call
sub
lds
mov
sbb
cwtl
mov
pop
out
fldcw
out
mov
mov
cmp
sub
jmp
imul
pop
pop
inc
lods
add
push
in
jl
addr16
and
icebp
cmpsl
push
mov
or
or
stos
shrl
dec
pop
add
test
mov
inc
scas
dec
leave
xor
ds
xlat
cmp
jb
popa
xchg
inc
das
pop
cwtl
ret
out
cld
stos
pop
in
ret
jne
fwait
or
fnstsw
add
cmc
enter
pop
fnstenv
loope
cld
fisubrs
out
push
and
call
xor
lods
sub
or
mov
enter
mov
add
out
lods
iret
hlt
mov
pop
adc
and
notb
fmuls
lahf
and
pop
test
repnz
lods
fmull
jbe
add
out
rcll
xchg
out
pop
es
mov
lock
xlat
andl
cmp
cmpsl
out
ss
add
push
std
inc
ret
adc
insb
or
and
jo
enter
or
mov
sub
pop
out
dec
outsl
dec
push
rep
xchg
xor
test
xchg
sbb
mov
push
mov
sbb
insb
push
rcrl
sbb
jp
mov
mov
xor
xchg
or
dec
ret
add
jae
jno
sbb
repz
mov
pop
or
shlb
dec
jmp
mov
mov
sub
sub
jne
iret
add
cmc
mov
xchg
inc
rclb
mov
fstl
mov
test
push
stc
and
pop
in
popa
mov
mov
mov
jb
jno
mov
sub
jno
shrb
jle
mov
jp
leave
or
ds
mov
fbld
das
aas
enter
adc
iret
mov
pop
sub
xor
mov
cltd
pop
push
das
pop
lods
pop
and
add
popf
das
and
sub
in
mov
in
pop
push
icebp
cmp
leave
out
sbbl
jmp
push
mov
add
mov
subl
xchg
or
cmc
xchg
pop
push
movsb
cs
lret
lea
aaa
inc
inc
divl
int
dec
sbb
sub
push
pop
cmp
adc
int
mov
xor
pop
repz
sbb
js
aad
je
stc
inc
inc
in
rcll
xor
sub
xor
imulb
mov
xchg
test
repz
jecxz
mov
push
mov
sub
and
aas
jg
repz
ret
shl
outsb
mov
lret
jg
cs
jl
shrb
lods
lds
xchg
fld
jg
dec
inc
add
mov
loope
cltd
mov
es
sarb
dec
dec
adc
stos
fldcw
add
lret
lea
mov
sarb
cmp
into
xor
pop
pushf
adc
loop
les
adc
push
lock
imul
cmpsb
int
push
push
sbb
push
jnp
lahf
int
sti
icebp
sub
ret
sbb
out
repz
dec
mov
mov
mov
mov
test
mov
jne
mov
xor
add
jmp
in
adc
ret
icebp
xor
xchg
sbb
jge
pop
dec
xchg
jle
outsl
jge
jle
scas
jmp
dec
and
jbe
mov
sbb
jmp
das
insl
stc
rorb
fistpll
pop
iret
push
js
push
xchg
push
mov
or
dec
mov
cmp
jp
dec
test
or
dec
outsb
mov
sbb
jbe
jnp
dec
inc
adc
scas
rcrb
adc
adc
xlat
inc
adc
and
data16
mov
sbb
push
sbb
and
add
imul
sahf
push
mov
cli
movsb
je
outsl
cmpsb
dec
fldt
into
sbb
pusha
inc
jl
leave
fcoms
sub
sub
call
pushl
ret
xchg
out
sub
xchg
and
mov
std
lods
push
jo
fwait
adc
lods
mov
aaa
jg
jmp
std
cli
and
adc
add
jl
mov
mov
shlb
pop
fcom
mov
cmp
push
aaa
into
pop
push
pop
stos
mov
daa
into
in
mov
hlt
xchg
mov
fs
mov
mov
pop
push
gs
sub
icebp
dec
xor
js
xchg
rorb
add
mov
cmp
mov
jns
imul
or
jp
test
or
js
push
insb
jp
pop
pusha
sub
xchg
loope
push
or
xchg
rcll
cwtl
sbb
f2xm1
movsb
into
gs
inc
test
pop
cld
push
pushf
mov
mov
test
cmp
push
mov
push
and
pop
inc
aam
sbb
js
push
arpl
loopne
fs
mov
es
fs
jg
stc
pop
sub
mov
lcall
and
xchg
scas
flds
mov
mov
jg
aaa
pop
fildll
les
es
cld
pop
adc
arpl
pop
lock
fiadds
inc
xor
mov
sbb
or
xor
mov
outsb
cmp
movsl
fwait
mov
lock
adc
and
cwtl
idivb
lods
int3
andb
int
jecxz
add
imul
push
lods
enter
out
in
fidivrs
fwait
outsl
xor
push
and
test
cmp
dec
fs
fldenv
loopne
adc
in
lods
mov
repnz
imul
mov
adc
mov
push
jecxz
jl
enter
add
cmpsb
jmp
xchg
scas
xor
adc
inc
inc
stos
mov
mov
adc
dec
into
xor
into
lret
dec
inc
fwait
xchg
mov
cltd
bound
add
xchg
and
inc
inc
adc
mov
fsubrs
test
add
jns
fsubr
fld
movsl
aam
and
push
js
dec
cs
cmpsl
push
in
dec
pushl
jae
insl
push
cmp
cmp
out
jns
cmp
insl
lret
leave
dec
icebp
push
pop
das
jg
dec
bound
and
inc
mov
add
cmp
lds
push
fildll
loope
popa
pcmpgtb
iret
xor
or
mov
roll
testb
popa
inc
sbb
cmp
loope
sub
mov
std
xchg
addr16
inc
jns
dec
movsb
xchg
cltd
adc
ret
sbb
popl
xor
icebp
js
mov
pop
or
jb
in
jg
iret
pop
mov
cmpl
loope
sbb
mov
adc
mov
add
insb
ds
mov
pop
and
fcomp
rcrl
cld
imul
sub
arpl
jno
xor
sbb
pop
adc
gs
lcall
rorb
ss
add
call
inc
in
movb
push
mov
add
push
mov
mov
pushl
jmp
push
js
repnz
jno
call
xor
sbb
jle
pushf
xorl
add
mov
test
bound
jge
push
lock
mov
inc
daa
and
inc
pop
xor
sub
stos
push
outsl
cli
lcall
fistps
icebp
pop
inc
icebp
push
mov
in
mov
fdivp
jge
sub
jo
dec
cli
jno
mov
cltd
sbb
and
dec
pop
imul
xlat
push
test
mov
pusha
out
or
sub
arpl
test
cmpsb
jp
nop
dec
cld
push
cwtl
cmp
out
loope
jg
and
fcomps
or
iret
out
pop
into
push
les
and
mov
xchg
adc
sub
add
lock
fldenv
inc
dec
clc
inc
adc
mov
sub
call
sub
and
jns
lret
mov
ss
pushf
out
or
fsubl
or
pop
and
adc
cltd
inc
rcl
mov
sbb
ljmp
cmpsl
stc
lcall
popa
and
cmp
outsl
jle
repnz
das
cld
adc
adc
inc
xchg
mov
adc
mov
insb
xor
fsubrp
cmp
cmp
in
lahf
push
sbb
mov
xchg
xchg
mov
pop
sbb
pusha
mov
cmp
stos
sub
mov
cmpsl
imul
aad
inc
cmpsl
jmp
cmpsl
sub
imul
pop
pop
vpshlw
testb
ss
lcall
les
mov
dec
out
mov
mov
adc
inc
fsubrl
lock
popa
mov
mov
xchg
jae
sbb
out
loop
dec
ljmp
mov
mov
shll
ljmp
ret
jb
sbbb
inc
mov
negl
jl
stos
cmp
xlat
push
xor
add
fwait
cmp
sbb
mov
dec
outsl
fwait
add
add
mov
jns
imul
cmp
out
sahf
icebp
push
scas
insb
mov
mov
addr16
clc
jmp
push
push
lock
rol
push
lcallw
roll
pop
je
mov
xrelease
mov
mov
out
pop
jbe
clc
push
daa
push
fmull
push
hlt
push
aam
ret
scas
cmpsl
popa
in
int
std
cmp
ja
mov
ret
cs
mov
cmp
cmc
outsb
aad
push
icebp
xorl
popf
mov
dec
orb
shl
sbb
ret
mov
loop
xchg
fadd
xor
xchg
bound
xor
in
adc
sub
addr16
dec
or
xchg
cmc
sbb
lcall
pop
es
mov
sub
cld
and
enter
mov
jno
jne
lods
mov
mov
sub
sbb
ficoms
clc
jl
decb
flds
into
and
sahf
repnz
repz
pop
jl
and
pop
xchg
inc
xor
mov
xor
popf
lods
sbb
das
insb
out
sahf
sub
imul
iret
push
int
dec
fadd
int3
lret
gs
icebp
std
push
int
lock
or
push
cwtl
dec
in
sub
xor
les
mov
call
pusha
jae
cli
mov
and
outsl
sbb
mov
xchg
sarl
nop
adc
or
jecxz
xchg
imulb
ret
repnz
addl
mov
adc
lea
add
loop
xor
cmp
sub
jecxz
cli
sub
and
cmp
mov
adc
mov
and
stos
call
mov
xor
mov
sub
sub
mov
add
mov
mov
mov
mov
xor
sub
mov
lea
incb
inc
push
pop
dec
jmp
dec
repz
insb
jno
in
sbb
sbb
outsl
jge
jle
sbb
les
dec
sub
insl
lcall
lret
xchg
mov
hlt
or
cmp
xor
or
shl
insb
aam
and
cmp
enter
push
xchg
stc
or
sahf
bound
shl
hlt
sti
arpl
xchg
mov
das
sahf
adc
fsubr
mov
movsl
sarb
pop
mov
inc
pushf
ljmp
arpl
adc
dec
sub
lret
xor
pop
pop
aas
cmc
popf
addr16
add
jbe
and
cld
push
cs
loopne
lds
mov
aad
fdivs
loopew
push
test
cwtl
fistpl
inc
mov
je
pop
jecxz
ret
jg
mov
mov
xchg
out
fld1
cs
mov
xchg
sub
stos
icebp
scas
mov
icebp
jle
hlt
subb
push
lods
dec
adc
add
out
dec
mov
mov
dec
popf
lods
push
sti
inc
lock
cli
mov
cmpsl
popa
mov
xor
jecxz
pop
scas
pop
mov
sbb
pop
sbb
imull
jbe
lods
xchg
push
sbb
mov
ja
lret
adc
add
jae
pop
mov
int3
enter
xchg
fiaddl
in
xchg
push
mov
inc
mov
cmp
push
lret
xor
stos
icebp
mov
jle
ret
daa
je
ja
adc
les
mov
mov
arpl
xchg
outsb
and
sbb
adc
mov
sbb
cmpsb
adc
push
clc
inc
jnp
rolb
sub
or
stos
cmpsb
data16
popa
sbb
stos
jbe
test
or
mov
push
movsb
sti
xchg
out
and
outsl
mov
cmpsl
pop
mov
outsb
or
mov
xor
mov
in
cmp
adc
ljmp
pop
xor
mov
jnp
mov
add
sbb
adc
dec
mov
leave
push
ja
jns
cs
popf
or
sub
or
sub
xchg
setno
in
bound
mov
lret
cmc
fwait
mov
repnz
aad
cwtl
sarl
add
out
xchg
scas
fldl
lods
xor
scas
pop
fcmovnb
dec
or
and
cli
sbb
push
add
je
jne
mov
cs
ljmp
stos
sub
jnp
test
rol
xor
in
ficomps
rcll
inc
mov
test
mov
sbb
mov
xacquire
sbb
lret
cmp
sub
jbe
jmp
insl
gs
mov
adc
cwtl
sbb
push
in
xor
call
aad
or
pop
push
icebp
cmp
aam
jnp
fcoms
in
xor
test
pop
push
push
jle
lods
js
out
sub
je
pop
outsl
cmp
jae
xchg
inc
cld
pop
cmp
push
cmp
inc
xchg
or
lods
or
mov
jne
xlat
sarb
pop
mov
xor
repnz
outsl
and
fbstp
push
nop
inc
out
adc
xchg
jb
sar
in
xchg
or
fmuls
outsl
mov
dec
sub
ja
imul
jp
pop
jno
addr16
out
inc
dec
jae
xchg
inc
ja
leave
ret
ja
sbb
scas
jo
into
outsb
test
aam
mov
cld
insb
xchg
lods
pop
or
add
xchg
das
pop
adc
xchg
loop
decl
adc
popf
insb
push
fwait
inc
aas
ret
ds
pop
or
xor
add
cmp
mov
xchg
push
pop
xchg
decb
pushl
mov
mov
pushl
lea
pushl
lea
pushl
lea
jmp
out
sahf
mov
addr16
push
subl
jne
aad
jle
outsl
jge
jle
lds
nop
rorl
fwait
push
mov
lret
notl
mov
mov
and
mov
imul
sub
mov
aam
rcrl
and
mov
jns
add
push
dec
dec
pop
dec
add
push
cmc
and
ret
out
rolb
sbb
dec
popa
dec
dec
jle
popw
jmp
jp
movsl
jp
xor
push
dec
push
lea
jb
bound
sub
mov
aas
push
js
push
xchg
pop
lea
xor
mov
out
cli
dec
pop
jge
xchg
cmc
loope
into
lods
lds
cwtl
mov
leave
push
sbb
adc
pop
dec
jne
rolb
push
inc
add
scas
icebp
pop
ljmp
push
jp
mov
ret
mov
push
into
int
or
or
adcl
push
jne
inc
xchg
mov
arpl
cmp
add
xor
add
cmp
leave
divb
insl
push
fisubrl
or
sub
lcall
add
lret
xor
cmp
add
and
scas
cmovne
dec
out
cmovnp
stos
adcb
inc
add
lods
mov
dec
ja
xlat
loope
dec
cwtl
sbb
stos
out
add
in
std
stos
and
and
dec
stc
pop
jge
daa
jle
loop
cmpsb
into
sti
lcall
push
jge
movsl
pop
dec
imul
dec
sbb
and
std
dec
std
sub
cmpsl
mov
mov
aaa
imul
lcall
inc
xor
inc
jns
jo
mov
into
xor
ja
inc
in
test
mov
adc
adc
adc
jnp
jae
lods
cltd
js
inc
mov
movsb
daa
or
mov
scas
push
xchg
jae
outsl
xchg
popf
fsubrl
or
sbb
addr16
xor
js
out
xchg
ljmp
fwait
inc
daa
cmp
ficompl
mov
cmp
add
in
push
jo
jge
movsl
jb
push
jecxz
lock
sbb
out
popf
shlb
sub
ss
mov
sarl
test
leave
repz
inc
jb
push
mov
xlat
jno
inc
repnz
sub
cltd
cwtl
adc
mov
aam
xlat
hlt
repz
mov
into
cmc
mov
xchg
lcall
mov
mov
js
fnstenv
xlat
enter
std
xchg
loope
jno
adc
fcoml
out
cs
pop
jl
mov
xor
inc
sbb
cmp
divl
stos
pop
add
add
jecxz
xchg
decl
dec
jge
sub
sub
jno
mov
fxch
or
sbb
add
sub
xchg
push
mov
outsl
mov
and
hlt
mov
out
aaa
int3
xchg
jg
fisubl
shll
pop
cmp
dec
add
imul
push
xchg
lock
lcall
jg
cmp
data16
push
pop
outsl
pushf
pop
mov
scas
mov
push
cli
jp
inc
adc
jb
movsl
lahf
xchg
sub
ljmp
push
cmpsl
sahf
fisttpll
sahf
and
or
pop
push
adcb
lds
cmp
or
bound
movsb
cltd
mov
mov
mov
imul
insl
pop
fldcw
jne
cwtl
jg
xlat
add
bound
les
or
xor
lea
pushl
xchg
inc
inc
push
pop
call
mov
mov
add
jmp
xor
mov
jne
xor
mov
and
outsl
jge
jle
js
mov
nop
cs
mov
sbb
mov
ja
sti
insb
xor
out
xchg
dec
hlt
icebp
or
add
ffree
sub
in
call
jp
js
pop
sub
sub
or
sti
data16
lods
rcll
mov
mov
mov
scas
or
lock
cmp
iret
mov
sbb
inc
mov
jecxz
pop
sub
sub
mov
mov
addr16
lahf
mov
cltd
and
sbb
hlt
pop
jne
mov
shlb
cmc
pop
pop
out
mov
push
icebp
imul
pop
mov
jo
sti
repnz
les
push
mov
inc
add
inc
hlt
dec
jge
out
cmpsb
or
insl
mov
sbb
lea
fdivl
dec
mov
push
dec
jl
mov
sbb
dec
addr16
adc
mov
jb
add
mov
pop
cmp
push
push
insb
icebp
or
movsl
repnz
out
jge
jl
push
jl
into
and
sahf
mov
fwait
mov
fidivl
imul
jle
aaa
sub
jl
dec
test
ja
push
pop
out
repz
xor
prefetchnta
jnp
xor
sbb
adc
or
aad
rolb
pop
bound
stos
pop
add
mov
das
and
daa
in
xlat
ljmp
or
je
mov
xchg
outsl
fld
push
ret
enter
pushl
or
xchg
or
pop
adc
mov
ja
dec
psubd
xor
cmc
jae
mov
jecxz
fcmovbe
cmp
int
shll
arpl
cmp
ds
popf
arpl
lds
loopne
add
arpl
jns
addr16
fdivp
jl
loopne
cmp
test
loop
adc
mov
cld
dec
enter
sub
outsb
out
xchg
inc
imul
divb
mov
stc
movsl
push
loop
scas
lcall
into
js
repz
push
add
pop
pop
sbb
sub
mov
sbb
mov
stc
rol
jl
inc
push
movsl
push
sbb
gs
or
add
mov
xchg
push
repnz
inc
mov
jmp
out
jle
xor
cmpsb
adcb
std
fsubs
jo
fdivs
aas
ret
push
push
push
jle
push
and
push
cs
scas
mov
sahf
negb
push
out
push
imul
pushf
mov
mov
add
scas
outsb
or
int3
outsl
int3
push
dec
out
or
call
movsb
sub
add
in
arpl
mov
mov
jle
into
add
pop
push
mov
test
sarb
ret
xchg
push
sarb
cmc
mov
sub
clc
shlb
cltd
std
add
sbb
idivl
cmp
sub
lret
push
mov
xor
pop
inc
xchg
inc
jg,pt
stc
fisttpl
pavgb
js
lret
pop
mov
fistps
int
cmp
lds
fisubrl
popa
inc
mov
fidivrs
dec
ror
sarb
out
or
movsb
rclb
insb
mov
adc
not
xor
in
mov
loope
stc
movsb
inc
cltd
lret
xchg
push
rcll
push
in
scas
in
xchg
sub
mov
inc
xchg
add
test
fistpl
adc
xchg
xchg
mov
cs
pop
pop
pop
leave
ret
push
mov
sub
leave
ret
push
mov
sub
adc
push
mov
mov
and
mov
adcl
mov
xor
movl
movl
movl
andl
mov
inc
mov
cmpl
jne
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
jmp
push
mov
jno
insl
inc
filds
xor
jle
or
mov
popf
sbb
pop
pop
mov
or
or
jle
mov
insl
iret
enter
aam
adc
xchg
aam
or
leave
cli
jb
jo
and
addr16
mov
xchg
jle
add
mov
cltd
test
sbb
popf
loope
out
stos
fcomps
stc
mov
xsha256
cmpsb
xlat
add
into
jns
call
dec
out
mov
test
jl
mov
stos
sbb
out
mov
add
lahf
addb
dec
bound
inc
push
add
popf
shlb
out
aad
cs
dec
aaa
rcrb
dec
mov
sbb
out
push
xor
loopne
or
xor
ss
in
mov
jmp
add
mov
lea
xchg
clc
xchg
popf
test
leave
sbb
jns
fisttpl
dec
sub
xchg
ja
cmp
int
mov
je
lea
sbb
mov
frndint
loope
es
push
ds
dec
and
add
xchg
mov
bound
add
sahf
mov
xchg
jne
rcl
or
xor
pop
stos
scas
enter
loope
pop
imul
fisubl
jae
or
stos
movsl
call
inc
push
dec
push
cmp
xchg
fwait
shll
insl
dec
cmp
imull
dec
cmp
cmp
dec
and
adc
jae,pt
and
imul
mov
xor
insl
repnz
data16
int3
sbbl
adc
fsubr
add
scas
clc
mov
test
cltd
push
jle
sub
mov
jb
js
xchg
push
xchg
adcb
jmp
push
sbb
in
gs
mov
mov
insb
dec
pop
push
aam
cs
lret
fildll
xchg
pop
or
dec
sub
pop
rorl
sti
mov
lcall
das
push
int
outsb
xchg
inc
mov
mov
sbb
fbld
repnz
push
jno
mov
leave
push
sar
push
push
orb
inc
outsl
testl
add
jl
adc
das
repz
stos
and
pop
pop
adc
mov
imul
jge,pn
jae
flds
ficompl
push
mov
inc
sbbl
cmp
sub
sarl
jecxz
sar
aam
dec
ret
push
scas
mov
iret
push
icebp
stc
out
cmc
sbbl
fwait
cmp
stos
pop
cwtl
out
daa
repnz
push
cmpsl
jecxz
pop
stc
fxch
in
movsl
repz
jns
pop
int3
jo
in
push
cmpsb
das
fstps
cwtl
xor
in
mov
icebp
mov
sub
xor
xchg
repnz
in
pop
js
pop
in
push
xor
mov
out
mov
adc
sub
jns
orl
or
jns
out
orl
in
xchg
adc
shlb
shlb
jbe
shrb
shlb
and
push
adc
push
pop
jne
and
lea
movsb
adc
push
mov
adc
mov
mov
xor
adcl
mov
mov
adc
add
neg
mov
movl
cmpl
je
cmpl
jne
push
push
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
and
mov
sbb
xor
sbb
add
andl
xor
add
inc
mov
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
movl
movl
xor
movl
movl
sbb
movl
adc
movl
movzwl
and
movl
dec
movl
mov
add
xor
add
mov
add
cmp
movl
je
movl
push
movl
jmp
mov
andl
mov
inc
mov
cmpl
jne
pushl
pushl
pushl
pushl
push
call
cmpl
jne
xor
xor
inc
mov
cmpl
jb
xor
add
add
mov
sub
mov
xor
add
movl
cmp
movl
jb
mov
mov
xor
incl
xor
notl
add
add
adc
imul
mov
mov
sbbl
sub
movl
cmp
movl
ja
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jne
push
push
call
jmp
mov
sbbl
xor
xorl
jmp
cltd
jp
pushf
insl
imul
aaa
jb
cmp
sub
xor
jle
jmp
push
mov
adc
xlat
data16
aad
xorl
cmp
std
icebp
inc
mov
fwait
xor
cli
xchg
out
cmp
iret
idivb
cmp
mov
push
std
int3
scas
negb
dec
adc
dec
pushf
mov
and
mov
jecxz
in
aaa
stos
dec
pop
shrb
sbbb
mov
cmpsb
movsb
faddl
nop
lret
rorb
pop
mov
fwait
jb
mov
movsb
ljmp
or
loopne
test
jns
xor
les
mov
add
adc
out
cmpsl
icebp
sbb
push
lcall
std
loope
jle
add
and
lcall
xchg
dec
sbb
in
fisttpl
ds
out
arpl
rcrb
push
mov
sub
cmp
mov
pusha
mov
es
jae
jecxz
pop
push
pop
arpl
pop
pop
mov
mov
fneni(8087
xchg
dec
sub
and
fidivrl
mov
mov
mov
cs
xor
repnz
cli
mov
rcrl
mov
loope
pop
movsb
pop
popf
add
push
icebp
adc
mov
pop
ret
data16
dec
int
xor
sbb
and
ds
and
inc
rcl
int
xchg
adc
cmp
lret
ret
jp
scas
test
pop
bound
pop
test
pop
xor
addl
int3
out
add
push
cmp
pop
dec
pop
decl
in
xor
inc
inc
aaa
jnp
mov
es
xchg
mov
aaa
test
mov
cld
mov
insl
fs
mov
adc
mov
das
sbb
je
mov
xchg
std
pushf
stos
mov
aam
jg
dec
lahf
punpckhwd
aad
out
aam
mov
push
cs
loop
xchg
push
aam
lods
jbe
sub
dec
roll
testl
jb
jle
pop
and
lock
pop
loop
rolb
stos
pushf
mov
mov
test
loop
or
xor
push
iret
lock
xchg
push
xor
lock
test
test
mov
lret
mov
cmp
lret
addr16
outsl
nop
arpl
addb
arpl
add
sub
dec
or
xchg
shl
jb
lea
pop
les
adc
aas
mov
and
mov
push
outsl
and
pop
mov
jae
sbb
outsb
xchg
sub
pop
inc
jl
mov
lods
fwait
inc
xchg
push
arpl
sti
popf
sbb
or
jbe
dec
xor
aad
push
fs
mov
cmp
unpckhps
insl
inc
lcall
or
sbbb
sub
add
subl
outsl
inc
add
mov
add
jmp
mov
mov
xor
movzbl
or
xor
andl
xor
add
inc
mov
cmpl
jne
push
push
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
movl
add
add
imul
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
push
pushl
pushl
pushl
push
push
call
cmpl
jb
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
jmp
pop
jne
loope
clc
cmpsb
dec
push
test
jge
jle
pop
popa
out
pop
dec
mov
fidivs
jp
outsl
or
or
sbb
sub
adc
mov
add
add
push
ret
mov
sbb
inc
mov
pop
lods
pop
xchg
repz
scas
xor
pop
pop
mov
into
lods
movsl
ja
mov
shll
push
loope
sar
dec
aad
sbbb
out
sub
icebp
push
push
loope
and
sbb
push
rcll
add
into
jl
mov
push
inc
daa
jb
cmpsl
jmp
shlb
cli
ret
in
push
ret
cli
mov
inc
pop
stos
lea
ljmp
push
aaa
push
sti
scas
jmp
test
push
js
mov
enter
mov
outsl
sbb
jp
pop
inc
pusha
pop
addr16
or
iret
fs
fidivrl
dec
loop
add
in
sbb
test
cmpsb
scas
dec
arpl
pop
lret
mov
mov
pop
cmpsl
inc
leave
decl
xchg
cmc
mov
mov
add
or
inc
pop
lds
push
popa
pop
enter
or
or
add
push
xchg
mov
sub
adc
pop
cmp
outsb
fcomip
inc
inc
xchg
jecxz
mov
pop
lret
xor
cmpsl
aam
and
stc
mov
push
xlat
push
in
std
mov
dec
mov
popa
inc
sarl
out
or
int3
sub
push
shrl
or
mov
imul
das
imul
cld
icebp
jmp
inc
ficoml
mov
mov
daa
inc
ror
sti
dec
sbb
or
xor
add
jne
mov
mov
sub
fistps
ja
jae
pop
jmp
je
mov
imul
loope
dec
mov
sbb
sub
and
bound
lahf
xor
test
insb
add
fstl
mov
loope
inc
cmpsb
jnp
dec
ja
push
outsb
xor
mov
or
in
sub
lods
out
sarl
lret
fcom
dec
xor
int3
insl
nop
cld
mov
mov
or
mov
mov
cs
cmc
repnz
mov
adc
pop
hlt
in
fildll
fcompl
mov
rcrl
sbb
cmpsl
das
cmp
sub
and
lds
es
repz
inc
jle
aad
push
shll
addr16
nop
dec
sbb
mov
lock
sbb
dec
test
ror
mov
jns
xchg
mov
sbb
cs
test
xor
outsb
jle
inc
mov
dec
xlat
dec
cld
pop
jmp
ret
inc
or
into
dec
or
arpl
add
test
ljmp
mov
imul
cmp
jae
cltd
and
xchg
jg
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
jmp
push
outsb
adc
pusha
cli
sarb
fildll
jle
jge
jle
sbb
sub
jbe
sbb
repnz
fdivl
sbbb
sbb
mov
adc
or
mov
cmp
adc
insl
dec
daa
or
cmpsb
inc
cmp
scas
mov
fcomps
inc
inc
ficoml
mov
addr16
ret
enter
jo,pt
jg
addr16
xor
mov
sbb
cmp
dec
mov
imul
adc
cmp
imul
stc
vpshufhw
and
mov
sub
icebp
out
ljmp
mov
mov
dec
pop
shlb
jae
sub
gs
mov
xor
xchg
lahf
lods
icebp
or
pop
or
in
shlb
mov
cs
adc
mov
push
mov
dec
shr
and
fsub
in
xadd
cmp
xor
out
je
pop
jno
inc
xor
call
jg
xchg
outsb
aad
sbb
mov
jbe
dec
cmpsl
or
pusha
int
repz
in
clc
subl
xchg
stc
lret
das
pop
rcr
push
pop
or
icebp
jge
push
cld
lcall
int
out
adc
xchg
jp
xchg
insb
push
and
xchg
insl
jmp
pop
xor
cmp
or
xchg
in
xorl
mov
add
jecxz
jb
jle
je
mov
dec
leave
lahf
xor
pop
lods
lret
xchg
idiv
jmp
call
push
cmp
xor
std
sti
pop
fs
mov
icebp
and
dec
sub
lcall
adc
ret
leave
nop
cmp
data16
test
test
inc
sub
movsb
std
sub
outsl
outsb
cmpsl
insb
adc
addr16
pop
in
push
xchg
gs
nop
xchg
adc
in
sbb
negl
push
mov
dec
or
adc
mov
jle
aaa
frstor
sahf
bound
in
or
scas
fistpl
sub
mov
mov
sub
lret
cmpsb
cmp
shrl
xchg
dec
addr16
cmp
add
lods
or
jo
arpl
sub
cld
add
lret
lods
xlat
mov
sbb
lods
cmp
lock
xchg
out
jno
pop
dec
pop
sahf
ret
xchg
mov
les
mov
jmp
lock
sub
xchg
xor
popf
or
push
push
sti
and
mov
test
mov
lret
adc
xchg
inc
mov
cmp
mov
sbb
jmp
mov
push
cs
cli
mov
cmpsl
lock
cmp
ja
into
mov
aas
mov
sbbl
adc
jne
and
loop
bnd
out
xchg
adc
mov
fists
cli
outsb
pop
out
aaa
in
imul
sarb
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
jmp
jmp
xor
les
sub
adc
jle,pt
xor
jle
cmp
or
and
mov
repz
dec
pop
mov
ljmp
cmpsb
lods
out
out
insb
pop
mov
jnp
scas
es
jge
pop
inc
mov
jg
adc
test
inc
clc
lods
mov
and
or
sbbb
ja
jg
mov
adc
dec
push
pop
ljmp
cmpsb
test
sbb
iret
cmpsl
loop
mov
pop
jb
sub
xlat
jo
pop
pop
mov
fxch
sti
notb
xchg
fdivrs
push
push
arpl
xchg
push
cmp
mov
loope
sbb
rcl
pop
das
lea
push
outsl
cmp
jmp
inc
ss
shrl
jmp
pop
std
adc
mov
jge
lret
lds
rcrb
adc
aam
ret
adc
dec
push
adc
lret
and
rcrl
cmp
fdivs
iret
sub
cmc
fistpll
jmp
orl
test
add
stos
stos
jl
test
jo
or
or
dec
pop
pop
stc
jne
test
push
add
jns
cmpsb
inc
rcrl
xchg
pop
dec
fs
lock
push
movsb
push
xor
sbb
movsb
mov
int3
xor
jp
add
out
mov
xchg
jecxz
cmp
pop
jl
mov
xor
cmp
aaa
dec
daa
in
xor
jnp
std
iret
hlt
fimull
sbb
sub
sbb
push
mov
scas
xor
test
dec
dec
push
push
faddl
and
ja
sti
fs
pop
cmp
rcl
mov
sti
add
int3
fistps
inc
pop
js
pop
repz
push
les
adc
addr16
inc
sti
loop
cmp
mov
das
arpl
hlt
aad
pushf
sbb
sbb
push
adc
pop
stos
les
ds
out
jge
sbb
jae
mov
mov
mov
loope
outsb
push
fstpt
shlb
xchg
aaa
cmpsl
addl
inc
mov
adc
or
bound
mov
outsl
out
jae
mov
je
das
out
mov
dec
test
dec
mov
or
xchg
jns
fs
lret
adc
loopne
inc
and
cmp
out
popa
mov
jbe
sbb
jmp
push
add
xchg
or
add
push
int
outsl
adc
push
mov
in
and
inc
mov
pushf
and
fisubrs
fisttpl
out
xor
adc
imul
notb
fwait
push
xor
fs
or
aaa
fcoms
ret
scas
adc
jp
popl
cmp
sub
ja
mov
dec
in
pusha
add
xor
mov
bound
mov
jmp
test
jno
ja
shrb
in
test
jle
jge
jle
jne
in
repz
pop
mov
dec
mov
sbbl
sub
cmpsl
fisubs
lahf
push
mov
jmp
xor
mov
mov
movsl
sbb
add
cmp
inc
mov
mov
dec
lds
mov
out
mov
dec
and
je
add
inc
or
sbbl
mov
inc
out
aas
pop
gs
stos
jl
fs
lock
add
imul
cmp
mov
jnp
mov
popa
popf
xor
pop
mov
out
test
jns
adc
daa
inc
andb
jl
roll
xchg
xor
adc
or
sbb
sub
sbb
push
adc
out
mov
add
and
and
inc
pop
mov
int
and
sub
push
xor
aad
pop
inc
fdivs
rorb
mov
test
jmp
mov
in
loopne
mov
add
add
sbb
rolb
add
mov
scas
adc
iret
imul
inc
pop
and
arpl
or
dec
sub
testb
lcall
inc
mov
stos
xor
repz
sbb
mov
xchg
mov
xchg
leave
sbb
mov
jecxz
loope
dec
push
pop
div
mov
push
mov
sbb
mov
daa
mov
leave
cwtl
adc
sub
inc
je
popa
ror
pop
daa
and
int3
addr16
inc
fnstenv
mov
or
jno
rolb
inc
loope
ljmp
pop
xchg
push
insb
outsb
lods
test
mov
sub
dec
outsl
int
cmp
or
lcall
enter
pop
ficompl
int
and
sahf
lret
out
fwait
xchg
and
int
movsl
xchg
lahf
loop
push
fidivrl
arpl
sbb
jae
std
mov
jecxz
inc
push
scas
pop
dec
or
and
lahf
pop
mov
and
dec
lret
and
mov
xchg
out
test
jg
lahf
or
lea
lahf
in
scas
xor
movb
jecxz
mov
dec
mov
ds
or
jo
into
cltd
sub
sbb
push
pop
hlt
inc
push
mov
scas
xor
and
icebp
jnp
and
popa
aaa
sbb
out
dec
hlt
pop
adc
sub
mov
sub
imul
jge
out
xor
aas
cld
aas
pop
mov
sbb
mov
std
mov
decb
in
jle
dec
outsl
iret
xchg
push
mov
inc
cmp
aaa
stos
sub
outsl
push
int3
adc
clc
aaa
idivb
cmc
jge
adc
and
fcmovne
jge
imul
aad
subb
or
sahf
in
repnz
jp
call
mov
out
xlat
mov
sbb
pop
rorl
xchg
add
add
cld
xor
xor
add
add
imul
mov
mov
mov
mov
add
movl
mov
movl
movl
mov
xor
add
jmp
mov
xor
add
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
jmp
pop
xlat
pop
jmp
jae
push
jmp
cmc
pop
mov
jle
xor
jle
push
pop
xor
jge
inc
loop
mov
and
mov
mov
mov
inc
mov
cltd
push
gs
in
addr16
xor
xor
leave
mov
sub
ret
mov
clc
cmp
cmp
mov
xor
push
jmp
mov
jnp
xchg
arpl
outsl
dec
jg
outsl
cmp
mov
stc
add
out
les
stos
jae
notl
xchg
js
cmpsb
outsl
and
or
jo
cmp
stos
orl
xchg
mov
xchg
adc
adc
dec
cmpl
cmp
cli
cmc
push
movsl
push
adc
fmull
sbb
outsb
cwtl
aas
adc
inc
mov
inc
dec
pop
xchg
icebp
popa
cmp
outsb
push
xchg
add
cmc
icebp
fistpl
sub
inc
sub
mov
mov
xchg
cmp
push
pop
dec
or
or
mov
xchg
ja
pusha
outsb
xchg
sti
mov
push
insb
lods
and
movsl
cmp
and
mov
jb
mov
lret
imul
lea
fsubs
inc
dec
aaa
xor
ficoms
cmp
jmp
mov
mov
movsl
pop
movsb
mov
pop
jmp
jae
int
js
test
jle
add
int3
lahf
xor
push
pop
mov
stos
and
mov
inc
push
xchg
push
jp
inc
and
jge
int3
js
dec
xor
das
xchg
cltd
push
inc
daa
add
or
cmc
loop
mov
cmp
xchg
dec
std
aaa
push
jg
mov
jns
adc
mov
mov
sub
jge
push
adc
fwait
add
cmp
popa
ret
xchg
std
adc
jg
xchg
add
push
aaa
movb
cmp
adc
pop
decl
cmpsb
pop
inc
xor
fcoml
in
xchg
pushf
pop
push
inc
notb
jno
push
add
cmp
or
sbb
xor
arpl
dec
in
jge
out
rcrl
test
push
pusha
or
pop
mov
roll
lds
and
imulb
xchg
sbb
dec
pusha
lret
push
mov
inc
iret
jnp
call
adcl
jnp
jbe
gs
mov
aad
enter
mov
addr16
xor
stc
jmp
xor
ds
xchg
es
jg
cmpsb
vpmulhuw
sbb
fucomp
add
inc
fstl
shrb
sub
adc
mov
cld
aad
int
mov
imul
loope
lds
push
pop
int3
test
mov
xor
pop
outsb
push
adc
into
xchg
xor
insb
add
jl
jbe
je
jb
xchg
xor
lds
fsubrl
orl
inc
mov
int
mov
or
or
aad
inc
add
jge
jne
out
add
xchg
jb
jmp
movsb
xor
add
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
xor
add
imul
mov
xor
sub
mov
mov
xor
add
imul
mov
xor
sub
lea
cmp
jbe
mov
mov
xor
add
imul
mov
xor
add
mov
lea
mov
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
pop
pop
leave
ret
push
mov
push
mov
mov
sub
xor
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
push
call
cmpl
jne
mov
inc
mov
jmp
mov
sbbl
xor
andl
add
movl
mov
movl
mov
movl
mov
push
movl
movl
mov
mov
movl
cmp
movl
je
andl
mov
xor
subl
xor
lea
xor
cmp
jne
jmp
add
mov
xor
add
mov
mov
xor
xor
mov
mov
mov
mov
add
mov
mov
mov
pop
test
jmp
gs
jns
dec
jno
xor
or
fistpll
xchg
push
cli
jecxz
cmp
cmpl
and
mov
outsl
clc
daa
fbstp
test
pop
lods
push
adc
xchg
mov
pop
jno
jg
inc
cmp
in
sbb
xor
daa
pop
pop
imul
jne
mov
lret
daa
push
xor
loopne
fiadds
aad
gs
mov
and
dec
xchg
sbb
lock
ret
inc
inc
imul
int
jnp
jle
insl
jecxz
repnz
pop
mov
pop
test
icebp
xchg
mov
lret
sub
jb
js
ret
andb
jmp
mov
popf
push
mov
int
cmpsl
or
and
sub
iret
mov
fmuls
xor
cmp
sbb
imul
push
rorl
call
adc
lds
out
jle
add
xchg
jns
enter
jne
pop
add
loope,pt
lock
push
lret
loope
mov
inc
pop
in
movsb
push
jb
pop
xchg
or
ljmp
sub
cli
pop
push
scas
mov
mov
and
jb
loope
test
cld
adc
decb
sub
outsl
cmp
jl
adc
adc
roll
lods
jnp
stos
mov
push
inc
mov
xchg
and
inc
dec
push
ja
push
inc
inc
and
fs
sub
cmp
imul
aam
jae
mov
add
xchg
ljmp
mov
js
movsb
into
out
outsb
fisubrl
stos
mov
loope
pop
out
xor
cs
bound
jle
push
mov
adc
or
and
adc
call
leave
mov
les
mov
dec
and
add
xor
xchg
stos
orb
adc
push
mov
jg
sarl
push
imul
lcall
xlat
insb
aam
inc
xchg
xor
xor
jns
jecxz
inc
xor
dec
pop
mov
aam
mov
divl
push
jbe
std
test
clc
out
or
out
push
rclb
dec
push
xchg
mov
mov
icebp
dec
stos
mov
push
cld
inc
arpl
dec
je
mov
add
pushl
pushl
mov
pushl
mov
call
jmp
jmp
push
jo
es
mov
shrl
mov
jle
bound
mov
adc
fisttpll
jno
pusha
mov
mov
dec
jl,pt
xchg
adc
ss
mov
aaa
or
lcall
lods
mov
arpl
xor
lds
cltd
sbb
jbe
decl
xor
xchg
jbe
leave
and
loope
nop
push
subb
loop
lret
outsb
test
out
in
iret
xchg
xor
inc
sbb
xchg
mov
mov
loope
in
inc
rorb
lods
clc
adc
ja
inc
les
push
pop
sbb
jo
dec
xor
add
lea
dec
fdivl
xchg
sub
movsl
mov
mov
aam
push
pop
ds
out
add
xor
jl
mov
scas
or
mov
shlb
fs
or
insb
cmp
movsb
jp
push
adc
ljmp
out
clc
in
xor
push
stos
dec
or
push
shll
mov
lock
adc
loop
and
fcomps
add
add
push
cmp
dec
sbb
arpl
sar
or
xlat
orl
or
scas
lea
call
aad
addr16
jae
inc
xor
adc
pusha
xchg
jnp
push
mov
jae
leave
bound
std
inc
jmp
push
arpl
mov
insb
add
out
xor
insl
lods
pop
mov
mov
out
ret
cmp
ss
es
mov
popl
inc
xchg
mov
cwtl
inc
inc
fwait
sbb
pop
rorl
push
pop
leave
lret
dec
das
xor
dec
push
js
movsl
mov
dec
loop
es
push
orl
stc
lret
mov
push
cmp
xor
into
or
pop
adc
dec
mov
inc
adcb
add
xchg
stos
adc
sbb
cltd
mov
les
ret
scas
xor
sbb
std
xchg
cli
jo
mov
pop
aad
xchg
bound
addb
or
lahf
mov
sub
imull
inc
lcall
sahf
jp
or
nop
fldenv
or
imul
mov
jmp
mov
cmp
or
push
mov
sub
movl
push
call
cmpb
movl
je
andl
xor
jmp
push
addl
call
movl
cmp
movl
jl
add
movl
movl
cmpl
je
cmpl
jne
push
push
call
cmpl
jne
mov
dec
mov
xor
add
dec
mov
jmp
adcl
movl
movl
cmpl
je
cmpl
jne
push
push
push
call
cmpl
jne
xor
or
dec
mov
mov
dec
mov
jmp
sbb
lea
movl
cmpl
je
cmpl
jne
pushl
push
pushl
call
mov
dec
mov
jmp
xor
mov
lea
mov
adc
mov
mov
mov
xor
mov
orl
mov
sub
mov
addl
push
push
sub
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
push
call
cmpl
jne
xor
xor
inc
mov
cmpl
jb
and
xor
sub
push
xor
mov
movl
cmpl
je
cmpl
jne
push
pushl
call
mov
dec
mov
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
andl
mov
inc
mov
cmpl
jne
pushl
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
adc
add
movl
mov
movl
mov
mov
cmp
mov
mov
je
mov
xor
add
imul
mov
jmp
xor
add
mov
mov
xor
add
mov
mov
mov
xor
add
cmp
jne
push
pushl
pushl
call
mov
mov
mov
mov
mov
mov
mov
movl
mov
movl
mov
xor
add
jmp
mov
xor
lea
push
mov
xor
lea
push
mov
pushl
call
mov
xor
lea
mov
mov
xor
xor
add
mov
xor
lea
cmp
jbe
mov
mov
mov
mov
mov
mov
pushl
sub
pushl
xor
mov
pushl
call
sub
xor
mov
mov
mov
xor
add
xor
div
mov
cmp
jne
call
lea
mov
mov
push
add
push
lea
push
call
mov
mov
mov
mov
mov
mov
sub
xor
cmp
je
mov
mov
sub
xor
cmp
jne
mov
add
jmp
mov
xor
add
mov
mov
xor
add
mov
jmp
mov
mov
mov
mov
add
mov
mov
pop
pop
pop
leave
ret
push
mov
push
push
mov
mov
movzwl
mov
jmp
shll
sbb
inc
out
jle
inc
cmp
sarb
jge
jle
adc
cmp
jl
fucomip
mov
popa
lods
nop
inc
fwait
push
lahf
sbb
pop
jno
cmp
add
cwtl
test
mov
mov
rcrl
and
push
push
cmpb
int
aas
jo
imul
pop
push
ja
sbb
pop
ljmp
ja
add
dec
add
jae
push
iret
dec
fbld
arpl
lcall
lods
mov
fsts
cmp
adc
jns
xchg
lock
rorl
ja
push
jmp
cs
ja
push
inc
mov
dec
sti
mov
xor
dec
orb
xchg
in
push
scas
push
jp
pusha
add
inc
inc
cmpb
in
out
pop
xor
in
inc
push
sbb
lock
push
fs
adc
out
iret
or
add
nop
arpl
inc
movsl
push
cmp
out
mov
sub
arpl
push
mov
jp
fs
add
inc
pop
and
sbb
pushf
std
das
scas
lcall
mov
shrl
enter
push
pop
xor
jnp
lret
scas
fwait
popa
cs
sub
gs
xchg
rcrb
aam
sub
hlt
adc
sbb
push
sbb
and
xor
jmp
add
push
pop
push
popf
add
sbb
sahf
mov
or
hlt
mov
das
mov
mov
push
inc
aas
mov
add
lods
cli
test
out
out
or
xchg
popa
adc
sub
in
sub
das
pop
push
adcl
push
lret
add
sbb
cmp
loop
mov
cmpsl
mov
xor
nop
push
cmpb
cmc
repz
call
js
lahf
and
adc
jnp
jecxz
xchg
adc
movsl
sbb
out
popa
adc
cmc
jo
push
or
pusha
or
or
pop
inc
out
or
adc
dec
jg
clc
imul
jae
mov
push
cmp
add
mov
sbb
loop
adc
out
jnp
data16
clc
jl
das
mov
push
lahf
insb
dec
shl
outsb
fmuls
in
popa
out
cmp
mov
mov
pop
inc
sbb
inc
sbb
jge
cli
aas
sbb
jns
cmp
and
lods
les
int3
mov
lcall
xchg
pop
jne
sbb
jo
mov
gs
in
push
add
xchg
test
cmp
push
mov
push
ret
pushf
push
inc
add
jne
add
std
repnz
or
outsb
add
shr
lahf
mov
lret
push
mov
lods
cmpsb
pop
in
fs
shll
xor
and
pop
repz
and
outsb
mov
inc
cli
shlb
int
and
icebp
mov
bound
mov
xor
mov
movl
movl
jmp
out
psubd
push
cmc
mov
loop
movsb
ljmp
jle
jge
jle
scas
cwtl
cmp
jg
sbb
xchg
lahf
cmpsl
icebp
jmp
pop
xlat
lret
test
enter
mov
cmpsb
jnp
cmpsl
add
mov
xchg
cmp
dec
jp
push
sbbb
mov
mov
xchg
push
or
lds
sbbl
daa
fwait
lods
pop
mov
outsb
xchg
fistpll
icebp
stc
stos
sub
or
or
stc
fisubs
mov
mov
cld
out
ss
adc
xchg
mov
dec
xchg
push
in
xor
lds
and
lret
rorb
mov
xchg
subl
dec
push
js
cmp
pop
data16
aas
ror
add
ffree
or
int
aas
es
push
ror
xlat
pop
xor
and
insl
xchg
pop
outsb
inc
sbb
jp
lret
fsubs
lea
pop
mov
pop
adc
arpl
add
jmp
xlat
mov
inc
stc
lcall
clc
enter
mov
lahf
sub
std
lcall
sub
or
sub
mov
pop
dec
jo
stos
imul
insb
jne
lock
mov
xor
push
jge
nop
push
dec
and
popf
mov
scas
data16
out
jnp
adc
outsb
jmp
fmulp
cmp
cltd
lret
ss
mov
mov
mov
sub
dec
lar
repz
gs
add
pop
jnp
in
leave
das
sti
and
pop
jecxz
in
stos
mov
cmp
mov
iret
fstpt
fs
or
inc
add
dec
jae
mov
mov
jnp
add
xor
cmc
out
dec
negl
nop
mov
inc
xlat
cmpsb
push
adc
popa
pop
stc
mov
ss
mov
cmc
push
ds
dec
dec
mov
fcmovnu
pop
xor
mov
dec
lds
or
push
mov
push
cmp
in
lds
mulb
or
dec
lock
dec
or
lcall
mov
test
mov
mov
cmp
mov
pop
punpcklwd
mov
test
popa
pop
shll
adc
mov
leave
enter
push
mov
es
inc
mov
les
jbe
adc
aad
bound
add
sbb
cmpb
sbb
fmul
xchg
cmpsb
insb
subl
dec
stos
and
pop
imul
jmp
shll
mov
lret
stos
inc
fists
xchg
mov
adc
inc
xor
adc
xchg
mov
mov
js
jae
jp
add
popl
imul
mov
pop
dec
scas
mov
gs
es
push
or
push
es
in
repnz
std
sahf
sub
scas
mov
mov
jae
sub
daa
mov
movsb
add
enter
add
add
inc
clc
xor
mov
subl
xor
mov
subl
add
mov
movzwl
andl
not
and
movl
mov
movl
mov
jmp
jmp
dec
sbb
jno
push
cwtl
mov
jl
add
jle
and
jle
mov
cltd
mov
sbb
fldenv
lods
nop
xchg
add
subb
inc
or
xchg
mov
leave
lock
outsl
ficomps
ret
cwtl
fbstp
and
inc
lret
mov
xchg
jl
pop
movb
pop
jecxz
mov
add
cld
imul
cld
daa
jae
mov
push
aam
sbb
sub
clc
decl
fs
mov
mov
inc
xor
movsb
push
mov
jae
xor
cmp
pop
cltd
lret
lea
push
push
dec
insl
xor
xlat
push
dec
pop
pop
mov
rclb
es
dec
inc
sbb
push
out
popf
sahf
outsl
shlb
mov
fisttpl
inc
inc
xchg
cmp
sub
rcll
cs
mov
pushf
cmp
movb
jge
adc
ja
std
jnp
sub
stos
lcall
movb
lea
int3
sbb
addr16
jg
arpl
mov
sub
adc
mov
push
jnp
pop
pop
push
xchg
and
jge
repnz
shlb
or
cmpl
fdivrs
mov
fisttpl
cltd
ljmp
lahf
loop
out
xchg
jb
in
or
mov
mov
mov
test
shl
push
or
mov
out
clc
xchg
jae
ljmp
inc
and
sbb
jo
or
cmc
inc
rorl
mov
xor
aam
mov
push
stc
popa
daa
dec
push
dec
rolb
adc
ja
push
int3
xor
inc
push
jmp
xchg
sub
push
xor
std
sbb
fdivrs
or
clc
mov
je
stos
js
sub
pop
shlb
xor
push
dec
aas
out
scas
lcall
xor
outsl
push
jno
pop
jecxz
scas
hlt
cpuid
int3
jmp
add
adc
or
dec
jnp
fsubrl
sbb
fsts
cli
mov
fs
jmp
add
int3
or
cmp
sarl
pop
add
mov
int3
add
iret
nop
popf
cmp
lret
iret
cmp
movl
loope
fcoms
popf
cltd
and
imul
fs
inc
aas
dec
and
or
cs
lcall
pop
into
nop
outsb
outsl
ja
movsb
icebp
fsubs
xor
loop
addr16
xlat
jns
mov
lcall
xlat
idivl
pop
rcrb
or
add
ret
fsubs
in
xlat
daa
jecxz
xchg
xchg
and
mov
mov
enter
dec
out
mov
lcall
pop
cmp
xor
inc
xlat
mov
cltd
test
push
add
clc
cmp
mov
ds
enter
std
adc
aaa
aaa
fiaddl
adc
mov
pushl
call
test
je
leave
ret
push
mov
sub
or
jmp
outsl
cmpsb
insb
inc
jne
jne
push
push
mov
int
inc
out
jle
in
jle
rorl
rep
rolb
push
and
xor
adc
icebp
mov
das
arpl
cld
aaa
adc
jbe
and
rcrl
mov
jb
xchg
mov
push
mull
sub
inc
dec
adc
adc
adc
pop
push
pop
inc
jo
rorb
dec
mov
xlat
adc
pop
insl
mov
pop
call
filds
mov
sub
loope
dec
imul
in
xchg
clc
cmc
rclb
push
sbb
int
incb
push
mov
subb
testl
push
scas
addr16
out
movsb
jle
inc
xchg
aam
pop
fnstenv
sub
jo
movsb
adc
jnp
popf
jg
fldl
jecxz
push
aaa
xchg
mov
sbb
test
loope
pop
pop
cmpsb
test
in
test
int
stos
cmp
adc
add
testl
int3
dec
jecxz
adc
xchg
cltd
nop
jl
shlb
pop
addr16
xchg
sahf
adc
das
push
stos
pop
pusha
pusha
mov
xor
adc
add
inc
or
test
jne
xor
int
or
mov
push
imul
into
cmp
inc
clc
xor
inc
in
xor
xchg
add
mov
xor
mov
incl
lea
mov
sbb
mov
mov
push
movzwl
add
mov
lea
mov
mov
and
push
or
push
add
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
mov
movl
jmp
xor
inc
arpl
jae
aas
or
dec
nop
xlat
jle
in
jle
pop
adc
xchg
mov
rorb
lahf
mov
ret
ss
cs
cmp
xor
mov
popf
xor
rorb
sbb
leave
pop
adc
int
and
mov
jbe
ljmp
int
out
dec
or
xorb
je
push
mov
cmpsb
dec
sub
test
nop
lea
pop
dec
ficoms
hlt
mov
mov
outsl
sti
adc
pop
outsb
mov
lret
rolb
out
add
sbb
lea
mov
mov
cmp
dec
pusha
xchg
add
dec
in
cmp
or
mov
cmp
mov
xchg
pushf
pop
mov
sbb
idivb
mov
adc
adc
sarb
sub
adc
mov
push
movsl
movsb
dec
ret
sar
and
iret
mov
aas
dec
outsb
int
jae
mov
das
sbb
pop
xor
push
fs
add
mov
insb
push
inc
stos
in
sbb
repz
cltd
sti
popa
or
int
mov
inc
lret
pop
cmpl
sbb
mov
jb
es
shlb
push
dec
mov
push
sahf
jg
xor
andl
mov
addl
xor
xorl
xor
addl
add
add
div
movl
mov
movl
movl
movl
cmp
movl
jmp
or
add
aam
lret
imul
mov
push
aad
jle
jg
jle
fdiv
sbb
int3
daa
clc
inc
mov
inc
gs
insb
imul
and
js
dec
mov
jnp
ret
sub
add
push
xor
mov
out
bnd
fcomip
mov
dec
ret
push
subl
mov
lods
mov
inc
pop
fstpt
fistpll
inc
or
mov
sub
push
shlb
cmp
sbbb
or
add
cmpb
sbb
mov
js
xchg
shrl
xlat
mov
cmp
inc
add
dec
and
mov
sbb
loopne
dec
adc
mov
push
mov
jnp
pop
sbb
lds
jmp
fistl
push
adcb
popa
es
adc
sarb
xor
jg
mov
mov
nop
jno
pop
mov
iret
sub
push
mov
mov
or
sub
adcb
push
push
cltd
jmp
mov
lods
mov
in
pop
adc
push
fs
call
mov
cld
rcrb
push
and
loopne
cmpsl
jg
lock
adc
mov
sub
les
pop
mulb
jae
push
pop
loope
mov
outsl
incl
add
add
neg
movl
lea
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
mov
and
mov
inc
mov
imul
mov
mov
movl
cmp
je
sub
mov
sbb
orl
andl
mov
inc
mov
cmpl
jne
pushl
push
pushl
call
cmpl
jb
jmp
xor
xor
outsb
fucomi
and
pop
jne
sarb
in
jle
add
mov
inc
jnp
sub
daa
mov
dec
push
push
stos
or
inc
pop
das
movsl
dec
outsl
mov
xchg
loopne
out
movsl
in
add
into
and
inc
xchg
dec
xor
subl
cmp
fistpl
sub
sahf
pop
mov
lods
in
add
lock
fs
popf
xchg
or
push
ret
ds
shll
xchg
dec
enter
xchg
mov
sahf
lcall
mov
sub
pop
outsl
clc
lret
jbe
mov
arpl
cmp
jmp
cltd
fstpl
and
jo
mov
mov
cld
cmp
jg
rorl
or
fucom
jecxz
sbb
cmpsl
or
xchg
aas
inc
mov
and
fstl
xchg
aaa
sti
or
shl
imul
arpl
cmp
push
cwtl
insb
testb
rcrb
shrl
fcoms
push
scas
xor
or
pop
leave
cmp
pop
cmp
pop
fwait
idivl
sub
int3
fldcw
cli
add
sahf
dec
sbb
ds
or
cmp
adc
movsb
andl
aas
bound
mov
in
aas
sub
sub
inc
clc
xor
add
jmp
adc
test
or
pop
gs
in
jle
test
adc
add
ljmp
movl
int3
orb
dec
mov
loopne
imul
jge
or
sub
scas
pop
sbb
in
mov
or
pop
add
mov
pop
lea
and
or
adc
pushw
stc
add
pminub
cld
jbe
inc
pop
loopne
lods
gs
f2xm1
mov
push
adc
jle
rolb
mov
aam
and
push
fimuls
jbe
push
mov
jge
dec
test
xor
fsubp
mov
in
xchg
fstl
sarb
pop
adcl
push
pusha
test
xor
popf
mulb
jb
xor
loope
stos
push
icebp
das
xor
xor
push
popa
inc
mov
mov
xor
insb
into
sarb
cmp
test
dec
sub
addr16
push
es
outsl
push
dec
dec
push
stos
fildl
pop
pusha
jge
add
pop
pop
js
push
ds
mov
jne
add
pop
test
cmp
insl
adc
sarb
mov
and
test
outsb
test
jmp
or
stos
std
mov
jae
movsb
xchg
popa
pop
pop
pop
leave
ret
mov
add
cmp
je
mov
andl
jmp
mov
mov
or
cmp
je
mov
xorl
jmp
mov
jmp
test
loope
jno
jmp
mov
cmp
jle
in
jle
out
lods
xchg
pop
dec
xchg
push
enter
mov
dec
sbb
lret
adc
mov
clc
jmp
sub
sub
xchg
jno
mov
jl
mov
movsb
dec
jmp
push
sbbl
je
fcmovnu
loop
dec
sarl
cmp
cltd
cmc
addw
mov
into
iret
inc
out
mov
rolb
stc
mov
fisubl
sub
or
leave
dec
and
out
fidivrs
xor
insl
scas
bound
dec
movsl
cmp
xor
pop
into
or
daa
mov
mov
xor
mov
gs
push
fnstsw
arpl
mov
sbb
xor
push
adc
pop
sbbl
xchg
and
xchg
movsb
repz
pop
xchg
mov
jae
sbb
ss
stc
sbb
sub
leave
test
xor
mov
and
push
cmc
mul
aas
out
pop
je
xchg
xchg
imul
sub
xchg
add
push
mov
adc
int3
pop
movsl
lods
xchg
add
out
push
sbb
movsb
add
shll
jae
stos
andb
add
es
cld
cmp
or
stos
mov
and
jno
jmp
dec
inc
sti
das
pop
scas
jp
push
inc
push
pop
cmp
mov
xor
mov
add
cmp
je
mov
xor
add
mov
mov
mov
mov
xor
add
movzwl
mov
xor
lea
add
mov
mov
mov
xor
jmp
push
adcb
sub
jmp
fildl
data16
fidivrs
in
jle
in
ret
add
jo
outsb
cmp
out
adc
jb
fnstenv
addr16
and
out
leave
adc
stos
fisubrs
pushf
sub
test
mov
cmp
adc
mov
ja
add
jns
push
je
lret
sub
push
jnp
jbe
xor
pop
and
sub
mov
mov
push
icebp
xor
and
pop
pushf
dec
sahf
popa
jmp
pop
and
mov
mov
hlt
inc
push
shll
ja
insb
inc
test
dec
js
cmp
mov
in
fcom
pop
cli
xlat
inc
inc
add
mov
mov
pop
sub
jae
sbb
divb
iret
mov
cmpsl
rcrb
repz
scas
inc
insb
and
push
xchg
das
outsb
inc
pop
loope
sub
testl
cmpsl
jns
sbb
sbbl
lods
mov
xchg
test
outsl
insb
into
xor
test
sbb
push
fildll
fcmovnb
mov
push
ljmp
inc
jle
ds
jle
dec
push
and
imul
cmc
sbb
pop
mov
cli
mov
movsb
mov
xchg
mov
jp
xchg
push
rcr
jmp
jnp
inc
sti
xor
push
dec
rcrb
xchg
add
imul
sub
mov
jmp
mov
mov
jmp
test
stc
test
sbb
or
jle
in
jle
and
cltd
icebp
leave
fdivp
add
dec
fbld
mov
inc
sahf
cs
mov
sub
mov
jnp
dec
ds
daa
mov
ja
adc
scas
pushf
inc
xlat
dec
call
add
mov
add
scas
jnp
jbe
lret
lea
cmp
mov
jg
xchg
mov
and
mov
cmpsb
je
and
or
aad
jae
xchg
inc
xchg
dec
data16
repnz
jo
push
sub
stc
aam
out
aad
int
pushf
xor
sti
mov
add
add
decb
cmp
cs
mov
push
cmc
inc
cmp
mov
divps
loopne
movsl
leave
lea
xchg
xchg
lea
mov
inc
cmp
add
test
enter
mov
mov
fucomip
inc
in
mov
inc
stc
stos
call
mov
and
pop
lret
cmp
mov
mov
outsb
mov
jp
daa
xchg
rol
add
or
mov
das
mov
into
fimuls
xchg
int
jns
movsl
cld
shrl
sbb
mov
jmp
gs
scas
aad
lods
pop
add
jbe
sub
arpl
xor
cmp
je
mov
addl
jmp
mov
jmp
xor
xchg
xor
jmp
cli
fnstsw
in
jle
mov
xchg
inc
mov
imul
mov
cmpsl
inc
inc
jmp
ret
das
sbb
dec
push
mov
cs
call
enter
inc
clc
insl
or
sbb
dec
jb
daa
push
mov
call
les
mov
cld
sbb
xchg
xchg
incl
or
fwait
popf
cmpsl
fs
gs
iret
push
push
sbb
rcr
call
push
sbb
insl
shll
jnp
nop
jbe
jge
aaa
pop
shrb
leave
fmull
pop
xlat
fdivs
inc
pop
insl
xor
jno
mov
jg
inc
xchg
cmc
xchg
jb
test
fmull
xchg
pop
mov
mov
nop
or
sbb
and
rclb
les
xor
jbe
dec
pop
xor
cli
xchg
xchg
inc
jl
popa
leave
out
jae
jg
sbb
push
add
sbb
pop
xchg
ss
pop
es
outsb
adc
call
jle
mov
and
aas
xor
pop
nop
and
or
push
lea
into
mov
cmc
sub
mov
jns
cmp
dec
jle
cmp
mov
xchg
pop
mov
outsl
sbb
cltd
mov
movsb
fimuls
clc
inc
adc
je
mov
jmp
push
mov
sub
sub
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
call
jmp
mov
mov
andl
mov
inc
mov
cmpl
jne
push
push
push
pushl
call
cmpl
jb
mov
and
mov
sbbl
push
xorl
push
mov
mov
sub
or
mov
xor
adcl
push
mov
and
add
mov
or
lea
mov
mov
mov
xor
sbb
add
movl
cmpl
je
cmpl
jne
push
push
pushl
call
mov
dec
mov
jmp
mov
negl
jmp
add
jmp
mov
pusha
movsl
inc
jo
fidivrl
jp
jle
sub
mov
xor
xchg
pop
shlb
inc
nop
mov
and
xor
adc
lods
push
xor
sub
mov
sub
sbb
pop
and
push
mov
sbb
adc
jbe
mov
fcmovu
lret
adc
and
push
testl
pop
jne
dec
lods
sbb
aam
in
push
cmp
dec
sbb
sarb
lods
pushl
movsb
lret
test
pop
cmpsb
push
fucom
sub
ds
popa
mov
imul
rol
sbb
stc
out
cld
mov
insb
ss
cmp
push
in
sub
push
mov
push
cltd
xor
js
repnz
addl
mov
insb
mov
mov
jno
push
inc
mov
push
aas
sub
in
shrl
cmp
fdivrl
in
call
xchg
inc
jae
adc
repz
sbbb
mov
lret
lahf
lock
or
push
xor
inc
mov
xchg
call
dec
lods
inc
xorl
fadds
cltd
in
int3
ret
inc
cld
mov
sahf
arpl
aas
and
add
xor
fidivrs
xchg
mov
movsl
push
push
jbe
mov
stos
pop
movsl
sbb
jno
xor
push
and
sub
sbb
xchg
mov
mov
jo
xor
or
jp
cmp
in
cmp
and
xor
popf
and
mov
mov
scas
shrl
faddl
and
ljmp
pop
push
jmp
pop
test
cmp
arpl
in
push
fucom
and
loop
push
lds
mov
popf
sti
sub
insb
cmc
push
or
mov
jle
mov
mov
push
fwait
push
cli
loope
jae
push
dec
mov
inc
daa
mov
dec
or
lret
cmp
jnp
and
fdivs
scas
lcall
adc
mov
push
xchg
imul
push
inc
jle
xor
fwait
inc
mov
mov
into
push
push
shr
daa
xchg
cmp
test
mov
push
push
adc
daa
xchg
ljmp
sub
popf
sahf
or
data16
or
sbb
ret
cli
shrb
pusha
fdivrl
dec
std
loopne
fucom
mov
stc
roll
mov
out
jns
push
cmpl
je
lock
cmp
xor
mov
add
mov
inc
pop
mov
xchg
addr16
mov
ljmp
sub
inc
in
xor
sub
inc
add
add
add
leave
add
inc
mov
cmpl
jne
push
pushl
pushl
push
pushl
push
call
cmpl
jb
sub
lea
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
sbb
mov
xor
and
add
sub
mov
or
mov
mov
mov
xorl
mov
andl
mov
jmp
jge
mov
mov
ds
jb
fnstcw
jp
jle
mov
aas
clc
push
cmp
ret
lea
lock
or
pop
pushf
popf
mov
enter
or
in
mov
outsb
xor
sub
mov
adc
mov
mov
les
lds
loope
mov
push
push
sbb
pop
test
mov
insl
lcall
leave
xchg
inc
lods
popf
scas
lret
and
and
mov
lret
xchg
icebp
popa
adc
test
jl
fidivrs
aad
push
mov
sub
mov
add
test
add
push
rorl
push
mov
push
call
lret
ret
lret
xchg
xchg
add
add
lods
fiadds
imul
arpl
jne
insb
inc
or
or
inc
sub
ret
test
jl
outsb
jns
mov
in
push
arpl
sarl
xchg
es
xchg
sub
lea
insl
lret
and
fcoms
insl
sahf
adc
jb
shrl
dec
push
pushf
pop
fwait
xor
pop
in
ds
pop
xchg
leave
leave
into
jp
das
add
pop
and
shr
and
and
pusha
inc
sbbl
add
or
test
outsb
sbb
ss
in
in
fisttpll
divb
jne
mov
jg
cli
jnp
ret
lods
pop
and
inc
stc
inc
pop
xor
scas
data16
jmp
cmpsb
dec
xchg
jae
mov
cmpsl
jmp
in
test
mov
mov
test
ljmp
cs
cltd
jmp
movsb
cld
jmp
lahf
in
clc
or
aad
test
mov
lahf
arpl
clc
rol
sbb
xor
jecxz
int
iret
jo
mov
lcall
xchg
leave
loopne
daa
xor
fidivrl
in
mov
mov
add
push
shll
sbb
ret
xorl
shlw
out
ret
popl
loop
mov
xor
push
jnp
mov
xchg
inc
adc
mov
ss
jbe
test
sbb
mov
sahf
aad
mov
push
mov
and
cltd
pop
imul
int3
sbb
pop
mov
xchg
mov
and
rcl
in
and
loop
mov
fists
test
pop
fistpl
movsl
rclb
lea
inc
mov
jo
std
rclb
movsl
test
add
xchg
lahf
mov
and
popl
test
push
xor
jl
ds
mov
mov
in
dec
adc
aas
adc
xchg
and
fs
mov
add
fldenv
lret
push
pop
push
or
out
scas
and
mov
aaa
sbb
mov
sbb
and
add
or
sbb
mov
and
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
call
cmpl
jb
movl
cmpl
je
cmpl
jne
push
pushl
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
xor
add
cmp
jmp
cmovbe
je
dec
cmc
fstpl
loopne
push
jge
jle
popf
lds
int
mov
jp
fimuls
cmp
cmp
lods
data16
sahf
xchg
jbe
repnz
push
hlt
les
arpl
jb
test
pop
adc
call
orb
adc
xchg
inc
jno
mov
nop
bound
jmp
and
jp
jns
rcrb
daa
dec
std
int
cmp
aam
add
mov
jl
xor
adc
js
add
mov
mov
scas
jmp
mov
insb
ljmp
push
jp
jnp
pop
mov
xor
inc
cmp
ljmp
or
fs
shrb
lahf
out
pop
fs
cmp
adcb
mov
jmp
lods
and
xchg
test
rcrb
push
in
icebp
out
scas
inc
lahf
sbb
cmp
stos
leave
mov
lret
or
add
jmp
inc
test
jl
fnstcw
adc
and
movb
xchg
jnp
mov
in
sbb
outsb
inc
imul
mov
cmpsb
cmpsl
mov
mov
and
rorl
xor
sahf
add
daa
add
clc
out
and
leave
cmp
cltd
stos
stos
and
adc
mov
push
int
cmpsb
jmp
adc
test
nop
adc
bound
cmp
mov
inc
and
sbb
lods
sub
mov
movsl
call
push
aaa
xchg
pop
shrl
dec
push
mov
mov
jp
faddl
cmpsb
mov
jne
out
push
xchg
cltd
out
gs
ret
insl
test
aad
testb
fs
repz
mov
add
lret
mov
mov
inc
dec
adc
int3
std
xor
incl
adcb
xor
and
and
push
ror
or
ds
cltd
test
jnp
das
push
in
pop
pop
sbb
and
in
dec
fdivl
sub
adc
arpl
adc
cld
jo
lods
push
cmovs
leave
inc
mov
and
cli
pop
aam
sub
cmp
enter
movsb
lcall
ljmp
mov
mov
push
jmp
call
loopne
inc
stc
cmp
pop
insb
movsl
mov
pop
mov
mov
cld
int
in
mov
je
fstps
and
aad
add
mov
add
jnp
dec
repnz
iret
sub
mov
xchg
orb
out
jl
mov
add
mov
mov
dec
mov
xor
addr16
push
adc
jne
mov
mov
xor
add
cmp
jne
mov
jmp
inc
aad
shlb
push
out
push
stc
jmp
jecxz
jle
jge
jle
in
test
pop
mov
xchg
fadd
xchg
je
jl
push
sbb
push
mov
mov
fwait
inc
clc
pop
mov
sbbl
cmp
mov
cmpb
mov
gs
xor
pop
sti
push
cmp
stos
push
rorb
xchg
push
rcll
xchg
add
fsubr
popl
push
les
movsb
cmp
repz
repnz
sahf
mov
insb
cli
push
dec
loop
mov
popa
cmpl
sarb
imul
test
cwtl
out
cmp
stos
outsb
push
add
add
lods
cmp
xchg
cs
out
mov
mov
divb
loopne
mov
imul
mov
sub
lock
and
stos
jb
or
inc
inc
dec
adc
arpl
faddl
push
rorb
mov
dec
in
fidivrl
adc
sub
cwtl
adc
lret
sub
inc
fwait
nop
mov
dec
jne
inc
pop
repz
nop
jmp
xchg
mov
aaa
jnp
jns
fldenv
pop
ficoml
stos
push
sbb
pusha
adc
gs
lock
repz
adcb
call
test
rorl
in
adc
xor
push
cs
sbb
loope
ljmp
push
in
sti
add
rcr
mov
ret
lock
daa
in
sbbl
jb
je
lods
iret
jl
in
rcrl
or
cmp
xchg
lahf
sti
aam
neg
pop
lods
xchg
in
mov
mov
jne
shl
mov
movsb
xor
iret
loop
cli
inc
lret
insb
add
les
imul
fstpt
scas
popl
push
add
aad
int
mov
cmp
movsb
into
iret
push
addl
notl
int3
fistps
pop
insl
mov
xchg
hlt
rcll
fimuls
inc
xorl
nop
arpl
push
jle
sub
mov
ss
sub
xchg
addr16
outsb
and
adc
inc
inc
jnp
out
mov
jecxz
pop
ret
pop
lods
loopne
push
jnp
fbstp
lret
push
shrb
mov
test
or
out
test
shlb
xor
or
mov
inc
cmpsl
test
mov
popf
in
lcall
nop
clc
add
xor
ljmp
sub
xor
fsts
pop
mov
lea
aam
jbe
lods
lahf
or
adc
stc
ret
and
xor
pop
jecxz
mov
adc
fimull
inc
repnz
pusha
dec
xor
push
lock
adc
pop
iret
in
enter
cmp
pusha
loopne
test
es
adc
gs
add
dec
lock
add
mov
mov
mov
jmp
enter
enter
sbb
mull
daa
aam
jo
jle
jp
jle
adc
loop
adc
clc
push
dec
pusha
mov
shll
cli
pushf
mov
mov
and
add
addr16
jp
mov
push
dec
stos
lds
jge
mov
shrl
outsb
cmp
outsb
lret
dec
push
xor
out
scas
iret
add
nop
xor
xchg
test
push
cmp
mov
jmp
lds
mov
or
in
pop
dec
mov
mov
pop
arpl
cmp
mov
xor
je
sti
out
mov
mov
cwtl
std
xlat
lret
sub
mov
movsb
add
bswap
mov
push
dec
repnz
sbbb
cmp
in
test
adc
cmp
mov
mov
add
cmc
sub
loopne
xor
imul
int
push
cmp
lods
push
jno
pop
sub
dec
adc
adc
fnsave
test
clc
xor
mov
push
mov
fs
mov
jmp
aad
js
mov
and
pop
das
push
and
inc
sbb
and
push
push
mov
xlat
cwtl
adc
sbb
cmp
mov
xorl
fisttps
test
jb
pusha
push
into
scas
pop
or
aam
xchg
lods
stc
pop
scas
ss
dec
mov
sahf
lret
inc
mov
jbe
pop
dec
leave
enter
adc
js
push
or
push
jecxz
pop
aam
jns
daa
mov
push
and
jg
add
xor
adc
dec
repz
das
or
sub
dec
inc
in
out
fsubs
cmp
daa
hlt
jns
adc
es
icebp
clts
or
loope
mov
xchg
and
scas
cmpsb
push
inc
jle
scas
lcall
int
icebp
or
aam
imul
push
dec
xor
inc
aas
and
jecxz
mov
fildll
adc
repnz
insb
xor
loop
popa
cs
jae
shrl
scas
inc
hlt
inc
add
push
mov
pop
movsl
ret
pop
or
and
subb
sahf
and
inc
orl
xor
mov
lods
mov
sbb
xchg
pop
push
sub
adc
adc
pop
inc
push
add
mov
inc
sub
adc
aaa
xchg
mov
ret
int
mov
mov
dec
icebp
popf
and
push
jbe
sbb
pop
pop
adc
gs
arpl
jle
mov
mov
loope
mov
rcrl
js
or
push
jb
dec
fsubrl
or
out
subl
push
cmp
in
inc
mov
imul
hlt
mov
dec
dec
stos
push
leave
jmp
pop
and
into
mov
sub
add
mov
mov
mov
movzwl
add
mov
mov
mov
xor
add
xor
sub
mov
movzwl
sub
cmp
mov
movzwl
jg
xor
sub
sub
mov
jmp
xor
lea
mov
mov
cmp
je
mov
movl
jmp
mov
mov
xor
jmp
lret
out
icebp
jmp
inc
popf
cmpsb
fnsave
jl
jle
jp
jle
jnp
js
fldenv
add
dec
adc
ds
cmpb
pop
ss
sbb
out
mov
ljmp
xorb
pop
jnp
adc
lea
cmpsl
jnp
lods
and
and
leave
push
inc
fs
mov
add
add
push
jg
mov
pop
add
fsubrs
sbb
add
xchg
outsb
mov
push
mov
int3
xchg
clc
inc
hlt
lret
inc
pop
scas
push
jp
pop
xchg
push
in
xor
mov
add
push
pop
sub
mov
xor
mull
mov
sub
xchg
jns
flds
hlt
push
cmp
shlb
mov
cli
mov
cmp
pop
stos
xor
cmp
lret
adc
push
xchg
ret
rorb
mov
and
adc
xchg
xchg
jne
pop
roll
repz
rol
daa
fcmovb
lods
dec
push
jnp
lea
loope
neg
aaa
scas
or
xchg
sbb
fnstenv
ffree
inc
and
popa
insb
int
cmpsb
dec
call
in
mov
loopne
repz
mov
lods
xchg
ret
or
adc
in
adc
stos
daa
xchg
cmpsb
mov
xchg
ds
jns
mov
test
icebp
scas
sbb
mov
inc
or
jae
cld
sahf
es
imul
mov
jp
xor
insl
or
movsl
push
fucomp
lea
cmp
push
cltd
mov
pop
xor
out
mov
les
cld
ljmp
jle
scas
push
or
loop
inc
push
aad
repz
filds
push
mov
loop
mov
xchg
rcr
mov
loope
push
stos
nop
ficomps
xor
jns
and
sti
inc
sbb
pop
sti
mov
lods
or
push
dec
mov
repz
xchg
fnstcw
movsb
repz
popf
shlb
daa
ljmp
inc
hlt
xchg
push
and
imul
int3
test
cmc
inc
negl
adc
pop
sub
xor
mov
test
sub
mov
push
sub
push
push
xor
pop
push
push
stos
sbb
sub
xchg
in
outsb
ja
lahf
mov
stos
mov
lds
fucomip
dec
or
pushf
into
gs
sub
fwait
xchg
cmpsl
orb
sbb
and
or
adc
andb
xchg
lahf
ret
xchg
cmp
pop
leave
adc
adc
sub
imul
in
cs
mov
les
xchg
xchg
aaa
jnp
into
fimuls
mov
cmc
jmp
test
cmpsb
into
adc
sbb
add
in
notb
sub
fwait
mov
jle
jge
jle
pop
xchg
xchg
inc
pop
in
shlb
mov
sbb
mov
adc
mov
repnz
pop
js
in
lods
rep
and
pop
test
icebp
pop
ret
outsb
jns
scas
inc
fwait
popa
fmuls
xchg
xchg
bound
adc
out
aam
mov
dec
mov
lods
stos
rol
in
lret
es
aas
inc
cmpb
fistpl
add
fsubrs
push
mov
sub
rcrl
adc
addr16
rorb
dec
sbbb
push
mov
std
lods
loopne
sub
or
mov
mov
jns
nop
add
or
push
dec
sbb
hlt
imul
idivl
ds
stc
push
cli
sbb
outsb
cmp
rclb
xchg
pop
jle
and
mov
arpl
xorl
mov
jae
sub
or
lods
rol
and
sbb
stos
xor
pop
fistps
xchg
loop
mov
or
addr16
or
inc
and
lahf
stos
inc
out
push
adc
sbb
jne
fnstsw
dec
sbb
fstpl
mov
daa
bound
fbld
shl
roll
fadds
dec
jno
jns
xchg
test
fsubp
movsl
cli
loopne
and
inc
dec
sti
xchg
mov
das
xchg
into
push
pop
mov
inc
mov
ret
push
lods
mov
push
movb
scas
divb
cmp
adc
pop
subl
fdivs
and
cmp
mov
mov
lret
adc
xchg
pop
lock
dec
leave
aas
pusha
es
cmpsl
call
ja
add
ret
add
jmp
ss
sbb
inc
push
jle
ja
mov
cmp
xchg
imul
pop
mov
jns
les
lea
les
lds
rcll
add
and
sub
call
mov
iret
outsb
jmp
push
dec
adc
int3
clc
xchg
sub
dec
lahf
pmaddwd
lret
es
push
jmp
push
adc
push
popf
jp
mov
aam
cmpsb
das
and
xchg
jno
dec
jecxz
outsb
sbb
jo
roll
movsb
out
mov
fisttps
cmp
mov
mov
andb
inc
jl
cmpsl
sub
icebp
sbb
mov
loop
enter
pop
jp
loop
mov
fistl
pop
cmp
adc
iret
loope
xchg
cmpsb
mov
lsl
dec
xor
jbe
push
loop
mov
push
cmp
ljmp
push
xchg
jbe
sti
ret
push
test
jl
pop
inc
insl
xchg
add
test
adc
add
clc
mov
mov
lea
jmp
dec
mov
pop
jno
nop
lret
add
jae
add
jle
jp
jle
rcrb
push
adc
adc
lock
lds
loop
jp
repz
cli
cs
jae
pop
push
sbb
aam
repnz
movl
rclb
push
shlb
adc
push
push
xchg
xor
bound
adc
cmp
mov
subl
jns
test
mov
dec
fcoml
or
xorb
inc
mov
adc
cmpsb
loop
mov
inc
mov
out
btr
adc
inc
loop
outsl
mov
divl
pop
or
dec
jge
loopne
outsl
pop
int
sbb
xor
pop
aas
out
aam
mov
and
jns
je
lods
ljmp
cmp
js
mov
out
repnz
inc
fdiv
adc
dec
jp
xchg
sbb
add
sub
jo
xchg
stc
push
cwtl
pop
fsubrl
cwtl
sbb
nop
nop
add
fdivs
xchg
js
int
adc
pop
sarl
or
aam
call
and
jne
inc
adcl
popf
sub
popf
inc
cmpsl
pop
mov
mov
ss
cli
pop
xchg
push
push
add
les
into
loop
inc
adc
ja
push
lahf
lcall
aam
push
push
jns
stos
in
out
xor
jecxz
or
out
es
rcrb
xchg
jge
xchg
mov
pop
jo
jb
imul
cmp
cli
out
add
xchg
and
sub
in
scas
int3
push
inc
in
fs
out
inc
and
fs
cmp
sub
sbb
push
mov
push
xor
mov
sub
fcmovne
xchg
xor
popa
nop
pop
lret
lds
inc
push
test
mov
xor
sub
push
notb
stos
mov
in
xchg
mov
add
add
push
mov
cmp
jecxz
outsl
mov
xor
pop
out
mov
mov
lret
in
dec
movsl
mov
xchg
push
and
adc
mov
dec
fstl
xor
stos
hlt
sbbb
pop
mov
adc
and
ds
int
inc
insb
popa
xor
mov
inc
lret
gs
sub
xchg
popa
stos
push
pop
cmp
cwtl
mov
push
fwait
push
loope
jmp
jg
movsb
inc
hlt
and
inc
loope
sub
xchg
push
inc
pop
sbb
jge
fiaddl
mov
xor
cmp
test
jle
das
rorl
mov
shrl
xchg
jle
cmp
fs
cmp
sbb
fwait
pop
jno
dec
cmpsl
mov
orl
add
fnstenv
mov
add
fnstcw
jbe
lods
xchg
pop
jmp
imul
punpcklwd
stos
pop
adc
orb
sarl
icebp
cmp
add
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
xor
add
cmp
je
mov
mov
add
mov
jmp
adc
inc
sahf
popa
scas
icebp
jno
ficomps
daa
add
jle
jp
jle
aaa
adc
push
cli
sti
cmp
loopne
add
int
mov
mov
xchg
mov
in
lahf
jmp
shlb
xlat
repz
shll
ret
loopne
or
inc
inc
xchg
popf
dec
dec
out
pop
std
or
lock
cmp
adc
pop
jp
push
mov
pop
idiv
sbb
inc
popa
fcomi
popl
fldl
cmpsl
cmpsb
mov
sbb
and
int
jp
mov
push
pop
mov
inc
or
test
cmove
and
push
or
cmpl
xchg
gs
or
in
mov
jbe
fidivrl
arpl
insl
stos
cmp
and
into
jnp
sbb
test
rorb
xchg
mov
push
sub
lods
and
adc
and
mov
push
mov
shlb
jle
adc
shl
and
hlt
pushf
sub
and
lods
test
mov
lods
imul
ljmp
dec
ret
je
dec
mov
aam
fdivs
stos
in
dec
iret
ret
mov
imul
push
sbb
das
scas
xchg
out
mov
bound
aas
gs
mov
xchg
adc
push
pop
jecxz
mov
adc
in
es
push
clc
pushf
adc
cmc
in
xor
andl
cltd
and
decl
rol
lea
xchg
inc
loop
addr16
ss
inc
lret
das
xor
mov
jae
testl
cmp
xor
mov
or
shrl
mov
mov
jno
mov
push
mov
pop
pop
aaa
jmp
xor
mov
outsb
jbe
lods
mov
ret
xchg
jmp
push
int3
cmp
addr16
scas
inc
xorl
pop
into
dec
jns
fisubrs
maxps
fadd
pop
mov
js
adc
push
xor
pop
or
popf
adc
pop
out
gs
rclb
pop
or
jmp
int
rcll
cmp
mov
loop
dec
ljmp
jecxz
lods
sahf
nop
aam
jp
fbstp
data16
call
or
aam
cmpsl
aam
cmp
stc
rorl
mov
adc
movsb
ror
popf
or
adc
mov
bound
push
pop
out
pop
out
orl
ret
mov
mov
pop
icebp
or
xor
dec
push
and
fisubs
mov
push
test
xor
imul
and
dec
enter
jl
mov
lods
pop
pop
sbb
dec
test
daa
addr16
and
sub
adc
dec
mov
fdivrs
jle
inc
loopne
dec
clc
mov
mov
mov
add
xor
cmp
je
jmp
sarl
mov
mov
shrl
fsubrs
out
in
ret
or
jle
jp
jle
sub
das
cwtl
incb
xchg
mov
sahf
jp
dec
cld
dec
imul
push
lahf
pop
fistl
adc
mov
scas
repz
xor
loop
pop
push
pop
jmp
roll
insl
mov
sbb
ret
jnp
lock
jp
out
pop
push
shl
jno
mov
hlt
mov
icebp
scas
out
and
adc
es
fcompl
stos
lods
arpl
mov
mov
xor
sub
subb
or
mov
push
cmp
jns
push
inc
adc
fs
xchg
pop
pop
jmp
jg
xor
mov
xor
into
jecxz
shrb
aaa
fwait
mov
ja
mull
sbb
sbb
cmp
ret
mov
dec
out
fldln2
cmp
adc
xor
or
pop
add
dec
and
jle
mov
out
imul
adc
sub
jp
inc
jge
adc
xchg
cmp
cltd
dec
repnz
icebp
shrb
push
ja
data16
xor
cmp
adc
popa
mov
mov
lcall
push
inc
mov
jle
jb
and
xor
les
dec
jno
int
rolb
rcrb
sbb
shll
pop
add
cmp
mov
push
adc
jo
jnp
imul
pmaxsw
jp
stc
bound
outsl
push
movsl
adc
test
pop
cmp
out
jno
xor
popf
decl
ljmp
xchg
push
or
inc
sub
xor
out
push
inc
jns
dec
jae
add
mov
lds
lods
loop
and
cmp
icebp
sbb
test
test
mull
popa
mov
xchg
je
fiaddl
enter
xor
adc
shlb
outsl
into
dec
mov
cmp
jno
scas
add
xchg
or
jmp
mul
aam
inc
nop
mov
xchg
xchg
mov
les
and
adc
and
and
js
push
mov
roll
xchg
arpl
xchg
rclb
jp
daa
fmull
mov
inc
movb
imul
icebp
lds
jo
sub
in
jecxz
mov
or
pop
out
mov
xlat
leave
test
xchg
jb
gs
mov
sbb
add
and
fwait
cs
mov
sbb
mov
cmp
iret
hlt
repz
xchg
push
popf
mov
sbb
xor
pop
mov
mov
outsb
loop
rcll
adc
nop
imul
test
cld
jmp
dec
clc
xor
add
jmp
and
jno
pop
xchg
sar
cmp
or
jle
jp
jle
jl
xchg
xchg
push
sbb
pop
hlt
push
add
pop
add
loop
imul
mov
mov
push
xchg
stc
cmp
mov
mov
lcall
mov
scas
jecxz
fsubp
rcrl
adc
lret
dec
aad
fstl
rcr
dec
addb
mov
popf
jl
ret
into
mov
in
pop
ret
out
jnp
or
std
mov
pop
fcomip
mov
mov
xchg
jg
aam
jge
lea
data16
jl,pn
popf
xor
idivl
leave
inc
out
jbe
rcll
mov
xor
dec
mov
sbb
inc
div
into
jo
add
add
aas
push
pop
testb
jecxz
and
xor
adc
lods
mov
loop
jl
fsts
mov
push
xchg
push
mov
leave
sub
push
jle
jne
and
aaa
call
sbb
and
sarb
or
movsb
jle
xchg
dec
mov
cmp
scas
cmp
fsts
jb
in
dec
in
test
sbb
enter
sbb
jno
sub
loop
leave
cltd
jo
cmc
xchg
and
aam
lcall
repz
mov
shlb
xlat
icebp
push
add
shll
sbb
scas
xchg
out
movsb
sbb
xchg
jno
inc
rcr
pop
shll
je
lahf
andl
lea
ss
out
rdpmc
mov
and
lret
popa
pop
lea
dec
adc
insl
push
mov
sahf
jnp
outsb
scas
cltd
sub
mov
aad
fwait
hlt
aad
jbe
aam
or
xchg
shrb
or
fwait
mov
xchg
in
stos
jns
cmp
adc
rolb
sahf
pop
fwait
js
jle
and
or
test
fcmovnb
daa
fnsave
inc
sbb
jae
fldenv
jge
pop
cltd
push
dec
and
sub
lahf
idiv
xor
push
cmp
mov
adc
xor
mov
xor
jp
pop
imul
dec
adc
iret
loopne
sti
and
mov
mov
mov
psraw
dec
jbe
inc
movsl
popf
sbb
xchg
xchg
mov
mov
mov
mov
jp
cvtpi2ps
stos
clc
push
mov
xor
std
in
jno
pushf
sbb
or
jnp
lock
shr
mov
movsb
sub
inc
and
and
into
shlb
fdiv
pop
out
mov
pop
test
xchg
stos
add
or
jmp
insb
pop
hlt
mov
jmp
and
aad
pop
or
jmp
mov
xchg
add
xorl
jmp
jmp
and
jnp
cmp
and
jp
push
mov
xchg
dec
adc
jle
jp
jle
scas
addl
lahf
cld
pop
xorl
or
mov
or
int
gs
and
call
sub
xor
add
or
addr16
sub
cltd
cmpl
mov
mov
negb
data16
repnz
inc
call
cwtl
mov
or
lret
pop
push
sub
shl
cmp
out
or
addr16
fbstp
jecxz
sbbl
jmp
int3
inc
push
out
jno
adcl
or
lahf
nop
cmpsb
and
pop
leave
mov
testl
xlat
push
and
in
xchg
sbb
mov
and
orl
repz
mov
push
add
scas
enter
das
fiaddl
inc
rorl
fwait
push
sar
adc
pop
sub
in
sbb
inc
scas
sbb
mov
ljmp
and
mov
test
xor
jnp
lods
jge
cmp
adc
fcmovbe
loope
lods
or
sub
shl
mov
call
sti
test
scas
mov
mov
leave
jnp
mov
test
xor
jp
xlat
sti
cmpsl
cmpsl
and
punpckldq
cmp
cmpsl
jecxz
mov
and
dec
add
cmc
loop
jecxz
cld
jmp
pop
sub
or
pop
inc
dec
xor
jnp
in
xor
mov
pop
add
push
lret
add
lds
and
movsb
dec
movsb
outsl
ljmp
mov
jp
xor
sbb
add
dec
pop
add
xchg
int
cmp
repnz
dec
sbb
repz
decb
push
std
rclb
jl
add
or
cmpsb
daa
xchg
adc
addl
stc
xchg
stos
sub
cld
or
sub
in
inc
cmp
sub
cmpsb
jbe
shll
push
pop
je
in
inc
test
insb
or
ret
sub
jb
jmp
jecxz
popf
std
xchg
int3
jp
jp
jnp
fwait
mov
repz
push
mov
add
mov
leave
xchg
mov
cli
repnz
xlat
xchg
lcall
loop
xchg
fnstenv
or
in
push
inc
or
sub
jecxz
dec
shrl
negl
xor
nop
fucomip
ret
xchg
repnz
add
jge
test
in
aaa
icebp
loope
lods
sub
mov
push
pop
lcall
popf
jnp
lret
push
mov
hlt
adc
dec
fisubs
pop
lock
and
inc
out
popa
adcb
clc
mov
jmp
xchg
jge
hlt
push
jne
pop
cld
into
inc
cmp
jns
fwait
adc
jle
sbb
cmp
mov
push
dec
lret
inc
or
ret
jbe
mov
sarl
out
subb
ret
repz
push
outsl
inc
lock
sub
xchg
inc
out
push
push
push
jmp
icebp
incb
inc
test
sbb
adc
mov
sbb
push
shlb
add
jge
add
fbld
or
fldl
int3
mov
nop
dec
shrb
sbb
addr16
inc
shl
dec
call
in
testb
mov
xor
lret
sbb
xor
add
cmpsl
inc
mov
dec
and
lods
cli
stos
jecxz
push
clc
adc
leave
push
icebp
cmp
xor
addl
pop
loop
pop
outsl
push
cmpsb
cltd
aam
inc
arpl
cmp
or
dec
enter
mov
das
mov
clc
push
gs
and
xchg
xchg
lock
push
int3
outsb
mov
pslld
pop
js
sbb
cmp
test
js
or
adc
inc
imull
push
les
iret
imul
xor
cmp
in
lock
shlb
adc
cli
or
fcmovnb
pop
fwait
or
lods
clc
dec
hlt
xor
out
out
cmp
push
dec
jp
sub
mov
sbb
fildll
repz
xor
mov
out
aam
fldl
sahf
loope
fdivl
inc
gs
loop
mov
add
dec
mov
cmpsb
dec
repz
cmc
or
lock
addb
adc
icebp
sub
add
call
jmp
and
push
ss
jae
leave
sti
inc
add
xor
ds
outsl
out
sahf
sub
push
inc
data16
nop
mov
mov
ljmp
lcall
xlat
push
inc
mov
out
cmpsb
lret
test
stos
mov
jno
fldt
sti
inc
sub
and
test
imul
sub
outsl
out
cmp
ds
dec
pop
fsubrs
or
repz
xchg
call
faddl
mov
mov
add
insl
mov
cmpsl
imul
lahf
push
inc
ret
aad
pop
fisttps
sbb
push
sbb
cmc
cmc
pop
repz
scas
out
push
movl
int
fistps
mov
push
outsb
pop
mov
rclb
lods
movsl
pop
clc
cmpsb
jge
cmp
test
inc
orl
jge
sar
cwtl
das
out
cmp
aas
sub
jecxz
xchg
imul
xchg
fstpt
aad
int
cmp
inc
imul
xchg
insl
scas
in
lea
fbstp
pusha
sub
enter
sbb
jmp
out
xor
mov
loop
into
xor
xchg
adc
sbb
jle
jp
jle
mov
lea
cld
out
sub
sbb
sub
fdivrs
dec
out
popa
inc
jecxz
in
negl
andl
mov
fcmovne
xchg
nop
orl
xchg
cmpsb
push
inc
mov
aam
inc
lahf
or
scas
dec
xor
or
cmpsb
cmpsb
push
idivb
push
outsl
insb
pop
cs
jmp
sarb
mov
addr16
movsb
sarb
cmp
aam
xlat
jno
sbb
pop
loopne
mov
xchg
mov
dec
adc
andb
mov
cwtl
pop
aad
jnp
fimull
lods
xor
arpl
mov
push
sbbl
pop
or
je
shlb
aam
inc
cmp
add
cmp
mov
fwait
dec
jge
pop
dec
lds
outsb
fnstcw
addr16
xchg
orb
xchg
imul
js
cmp
or
sarl
ret
out
cmp
insb
mov
cld
mov
addr16
cmpsb
idiv
aad
jmp
call
clc
and
mov
push
lcall
scas
mov
out
enter
cltd
fstps
inc
cmp
push
cmp
imul
call
fadds
sub
mov
push
popf
mov
rcll
ja
scas
lock
scas
in
pop
adc
adc
clc
outsl
out
mov
movsl
inc
cmc
roll
dec
mov
push
push
sti
xchg
int3
in
outsl
imul
sub
mov
cmp
xor
div
jb
das
int
sbb
stc
xchg
repnz
mov
ljmp
movsl
dec
cld
mov
orl
fists
loopne
movsw
lret
outsb
sub
scas
mov
clc
sbb
xchg
xor
sahf
je
mov
scas
test
jge
ret
ja
rolb
pop
or
mov
inc
xchg
cld
in
inc
sub
sbbl
adc
xchg
or
add
iret
cs
jg
sub
mov
repnz
mov
sub
pop
out
xor
add
mov
in
cmp
ljmp
sbb
rolb
push
adc
movsb
insl
stc
mov
xor
ja
sub
icebp
push
repz
jae
adc
or
imul
xor
and
hlt
and
cltd
daa
pop
xor
mov
test
leave
mov
cmpsl
fistps
push
imul
and
jne
out
add
inc
mov
cltd
inc
cmp
adc
pop
sub
cltd
cmp
dec
sarb
fmull
add
subb
jae
lret
mov
lock
add
mov
inc
or
jne
call
mov
cmp
je
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
adc
movl
xor
or
and
movl
mov
movl
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
push
movl
cmpl
je
cmpl
jne
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
movl
cmpl
je
cmpl
jne
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
adc
xor
mov
add
mov
movzbl
xor
mov
orl
push
push
test
movl
je
mov
movl
cmpl
je
cmpl
jne
pushl
pushl
pushl
call
xor
or
dec
mov
jmp
movl
cmpl
je
cmpl
jne
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
and
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
pushl
call
jmp
sbb
mov
mov
adc
imul
mov
xor
or
sub
or
mov
mov
mov
sub
add
mov
and
mov
sbbl
xchg
andl
xor
add
inc
mov
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
neg
sub
adc
xor
addl
mov
xor
mov
or
mov
mov
mov
addl
xor
andl
xor
xor
add
movl
mov
mov
mov
je
sbbl
mov
adcl
xor
sbbl
add
cmp
movl
jne
pushl
call
mov
adc
mov
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jne
pushl
call
cmpl
jne
xor
xor
inc
mov
jmp
mov
xor
or
and
mov
mov
subl
xor
xorl
add
movl
cmp
je
andl
pushl
pushl
subl
call
sub
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
add
mov
mov
mov
add
mov
jmp
mov
fs
mov
repz
sbb
jle
push
movl
inc
jg
jnp
je
sbbb
adc
in
inc
mov
clc
add
mov
mov
xor
xchg
cmp
add
bound
mov
xchg
imul
or
call
insl
fwait
add
insb
push
xchg
or
pop
dec
data16
mov
dec
outsb
bound
shll
repz
lea
cmp
les
fnstcw
daa
inc
movsw
stos
subl
or
fmuls
jne
stc
call
stos
mov
cltd
divl
test
xor
testb
out
or
xchg
rolb
es
scas
ret
gs
movsl
inc
imul
imul
je
dec
xchg
or
mov
pop
dec
ficompl
push
add
ds
mov
cmpsb
les
icebp
sbb
mov
mov
inc
xor
cli
and
inc
inc
enter
xchg
nop
lahf
dec
lods
movsb
add
movsl
out
and
add
mov
movsb
add
sbb
xchg
dec
insb
pop
sarb
sub
cmc
jbe
pop
int3
cs
xlat
pusha
scas
fcoms
daa
xchg
fwait
mov
movsb
push
mulb
mov
rclb
jbe
fs
add
push
sti
daa
xchg
pop
mov
int3
push
pushw
cmp
andl
mov
and
stos
leave
mov
aam
push
push
mov
jge
mov
pushf
pop
popa
test
and
jle
stc
fstl
nop
test
dec
sarb
lods
push
ss
and
adc
cmp
out
add
push
mov
mov
xchg
mov
push
cmp
insb
das
pop
inc
push
pop
pop
pushf
scas
add
add
cltd
xor
cmc
xor
pop
dec
ss
push
sub
xchg
jle
mov
xchg
pop
arpl
add
test
or
out
xlat
add
mov
lods
pop
adc
movsb
imul
pushf
mov
pop
sbb
test
inc
test
pop
dec
jg
stos
es
jp
mov
or
in
aam
push
xchg
jae
in
mov
xlat
bound
push
jne
cmp
gs
push
push
jecxz
xchg
lret
stos
loopne
and
imul
in
cli
xor
add
cwtl
mov
adc
stos
es
xlat
ficomps
xor
stc
imul
xchg
mov
and
dec
adc
add
cmpsb
and
sbb
pushf
les
inc
jo
hlt
xor
and
out
in
jns
insl
fadds
fdivl
fimull
int3
lcall
out
pop
push
add
lods
jle
test
mov
ret
push
mov
adc
or
and
dec
or
dec
sbb
testb
mov
add
lea
mov
jmp
push
adc
shrl
cs
cmc
dec
shlb
jge
jle
inc
ja
adc
push
nop
dec
mov
jmp
lahf
and
cmp
repz
out
dec
icebp
lahf
push
movlps
in
bound
xor
lods
pop
adc
sub
sbbb
mov
popf
xchg
jb
mov
sub
shlb
inc
bound
fldenv
and
mov
sbb
in
movsl
xor
adc
inc
ljmp
push
and
test
ud2
mov
stc
ficompl
pop
push
or
in
repnz
mov
int3
in
outsb
push
loop
in
std
push
imul
xchg
push
push
ljmp
enter
aas
or
out
pusha
jo
dec
jne
mov
xor
or
lret
in
mov
loop
dec
js
inc
les
jg
mov
test
sbbb
adc
outsl
lods
into
sahf
mov
xchg
adc
cs
ss
fnstsw
inc
jno
sub
or
mov
sbb
jmp
cld
aad
sbb
mov
out
test
mov
lea
xlat
or
sbbb
mov
mov
nop
push
mov
cmp
outsb
dec
mov
data16
jmp
mov
es
imul
cmp
lcall
rcl
add
lret
inc
pushf
push
fildl
ds
popa
mov
cmpb
loopne
popf
andb
adcb
in
xor
stos
inc
lds
and
xor
pop
inc
mov
xlat
in
cmp
and
arpl
outsb
ljmp
test
adc
out
inc
cmp
adc
pop
push
sarb
sbb
adc
mov
addr16
movsb
les
push
aaa
xchg
jge
pop
mov
xor
jnp
xor
fiadds
shlb
int
lcall
ss
jge
jae
lcall
sub
push
rolb
sbbl
insb
insl
xchg
stos
imul
pop
cs
inc
enter
inc
insl
fs
pop
sbb
push
in
fbld
imul
xor
outsl
cmp
cmp
rcll
xchg
push
push
sub
aam
or
pop
es
shrb
add
add
cmp
mov
ss
outsl
cmc
int3
dec
inc
ljmp
xor
dec
or
mov
outsl
test
jae
add
sub
and
xchg
jnp
mov
inc
inc
and
cltd
push
fildl
in
sub
add
pushl
pushl
call
mov
mov
xor
add
cmp
jne
mov
inc
cmp
jb
jmp
mov
xor
add
jmp
mov
movzwl
mov
mov
mov
mov
mov
xor
add
cmp
jne
mov
xor
jmp
jmp
xchg
adcl
and
jle
pushf
cwtl
or
rcll
ss
divb
sysexit
lods
jecxz
cmc
and
cs
mov
into
pop
or
mov
fs
sub
aas
in
or
pop
mov
int3
outsb
cmpsl
rorl
sub
jl
stos
loopne
dec
inc
sbb
pop
repz
hlt
xchg
pop
mov
stos
fidivrs
ret
xlat
push
adc
mov
mov
sbb
xlat
repnz
dec
mov
js
iret
jmp
sub
and
sbb
loope
inc
mov
and
ljmp
loopne
adc
das
shll
and
lea
adc
lret
or
mov
sbb
xor
inc
mov
ds
jno
roll
cltd
lea
push
pop
jge
nop
cmpl
push
sub
sbb
mov
mul
jns
pop
cmp
test
cwtl
or
xor
xchg
loop
jmp
xchg
cs
dec
stos
cld
push
rcrl
cmp
sub
mov
gs
cmp
mov
sub
lcall
sub
mov
fldl
xlat
imul
mov
fidivrl
into
outsl
sub
xor
xchg
rcll
xchg
int
xor
mov
jnp
pop
pop
sti
mov
cmp
movsb
jmp
loopne
jae
jbe
xchg
dec
xlat
sub
adcb
outsl
add
ds
or
adc
mov
test
stos
jmp
into
mov
cmp
xchg
fsubs
push
out
or
test
add
jno
mov
or
lods
rolb
fidivrl
scas
repnz
sbb
jl
mov
jle
adc
ret
adc
test
or
test
inc
inc
pop
gs
mov
out
pop
xor
cmc
inc
sbb
add
add
fbstp
and
add
sbbb
fst
lds
jl
ficompl
push
xchg
inc
bound
fs
jg
call
lahf
pushf
mov
adc
mov
popa
pushl
dec
and
mov
flds
mov
xchg
mov
out
mov
push
add
sahf
arpl
ficomps
ret
aaa
notl
insl
fistpl
sub
mov
jg
push
fistl
out
jmp
mov
mov
pop
pop
cmp
pop
mov
loope
add
or
test
cmpsl
rcr
and
imul
inc
popa
mov
jb
les
fcomps
in
lret
or
dec
lret
mov
add
pop
sub
imull
pop
iret
push
in
push
aad
data16
mov
mov
add
mov
mov
test
je
mov
push
pop
push
dec
jmp
test
jnp
mov
xchg
rcr
jp
ret
and
jle
mov
fsubr
xorl
test
repz
push
rcll
jbe
daa
jecxz
push
mov
jmp
push
adc
inc
test
notl
jb
jl
jl
mov
adc
lret
lahf
inc
out
xchg
fdivs
xchg
incb
fmull
sub
and
pop
or
test
movsb
fsubl
dec
lods
sbb
insl
and
xor
add
int3
jae
ss
mov
cmc
add
lret
cmc
cmpsb
repnz
dec
fmull
mov
jp
dec
and
jae
cmp
cmp
xor
and
sti
xlat
jl
push
xchg
xor
mov
lcall
cltd
add
mov
add
js
sahf
fidivrs
mov
pop
sub
lret
loop
shll
or
or
xchg
bnd
aad
xlat
or
or
sbb
add
loopne
adc
xor
aad
sti
xchg
shr
test
test
popf
or
les
mov
scas
cli
je
mov
orl
and
loop
lea
mov
out
es
mov
aam
dec
repz
lods
fcompl
popa
pop
push
imul
push
leave
dec
imull
add
jp
pop
int
lods
inc
push
mov
notb
jge
mov
fildl
jae
incb
mov
out
lods
fwait
pop
jns
stos
and
xor
fcomps
ret
jno
jae
jecxz
xor
sti
fnsave
jae
jge
sbb
adc
or
mov
push
ja
xor
inc
aaa
stos
pushf
inc
dec
dec
dec
mov
vpmacswd
mov
rcl
rolb
vpperm
push
dec
xchg
mov
in
subl
jmp
fiadds
mov
or
pop
sub
mull
xchg
dec
push
mov
xor
or
std
or
bound
xchg
loopne
inc
test
leave
cmpsb
shrb
xor
test
inc
pop
jmp
stc
icebp
or
inc
icebp
in
jnp
in
cltd
pusha
addr16
mov
push
cs
mov
mov
mov
push
jmp
mov
push
dec
leave
fisttps
mov
mov
sub
mov
or
fwait
cmp
dec
jl
shr
cs
int3
or
lcall
xor
inc
inc
add
push
mov
cmp
cltd
ss
sbb
mov
jg
jmpw
push
insl
sbb
and
dec
and
sub
mov
ds
leave
cwtl
xchg
push
scas
mov
sbb
je
mov
or
cwtl
std
inc
dec
cmc
jmp
out
pop
out
cmpsb
les
ja
lods
cmp
mov
push
add
repnz
inc
add
flds
in
scas
shrl
mov
mov
mov
xor
mov
add
mov
mov
xor
add
mov
jmp
xor
xor
xor
pop
xchg
pop
sub
jle
jge
jle
push
inc
mov
xchg
pop
es
push
shrb
jb
jne
adc
or
jbe
jecxz
repnz
aaa
insl
mov
mov
or
and
or
mov
imul
push
pop
dec
lcall
push
xor
lea
outsl
lret
xchg
insb
jbe
lock
xlat
sbb
div
jbe
in
or
mov
jecxz
sbb
push
repnz
sbb
repz
jbe
adc
mov
push
out
out
or
int3
sub
xlat
call
outsl
xchg
push
dec
lea
and
jecxz
out
mov
sbb
insl
lahf
fwait
pslld
cmp
and
stos
mov
xor
mov
lahf
fsubs
cli
pop
ret
adc
in
jno
fisttps
cmp
outsl
or
and
arpl
mov
cmp
scas
repz
xor
jo
adc
sub
pop
mov
hlt
ret
int3
sub
or
mov
mov
leave
faddp
jp
xchg
pop
imul
xor
pop
inc
pop
pop
xchg
sbb
cld
mov
enter
mov
pop
into
test
xor
inc
xor
stos
mov
popa
lea
lock
ljmp
mov
rol
ret
xchg
inc
lds
test
push
mov
dec
lret
xchg
cli
insb
int3
aas
in
lcall
aaa
adc
and
push
pop
mov
jge
or
leave
xchg
add
and
push
mov
jo
xor
xchg
sbb
arpl
loopne
mov
jl
mov
lret
mov
inc
jg
or
shrb
or
scas
mov
or
push
and
test
inc
fmuls
loope
pop
pop
fmull
jno
cmp
xchg
dec
mov
cmpsl
aaa
inc
cwtl
rol
mov
pusha
inc
jge
int
ss
mov
mov
pop
and
aas
movsl
cwtl
int
sub
sub
icebp
push
jne
inc
mov
and
add
cmpsb
sbb
jl
inc
shll
jne
and
enter
mov
and
push
mov
es
cmpsl
mov
push
pusha
xor
ds
fiaddl
and
push
popa
push
aam
arpl
in
mov
xlat
xlat
testl
popa
les
sub
leave
cmp
sarl
xchg
xchg
sub
xor
ret
or
jp
mov
mov
out
incb
mov
inc
fucompp
dec
cmp
mov
mov
in
dec
pop
cmp
inc
fsts
imul
mov
xor
mov
lea
cmp
je
mov
mov
mov
mov
mov
xor
xor
mov
add
div
mov
jmp
inc
stos
push
jmp
jae
mov
jo
jecxz
sbb
jle
jge
jle
pop
jmp
mov
out
dec
int
push
mov
cld
pop
push
ja
scas
rcll
xchg
inc
lods
cltd
or
jle
ss
lahf
mov
inc
out
add
sub
repz
bound
mov
pop
lock
lods
rolb
popa
push
and
mov
test
mov
daa
inc
jge
jge
push
jns
aas
fdivrs
sarb
pop
adcl
mov
cmpsb
sbb
mov
jno
std
mov
fidivl
sub
xor
rcll
je
shl
iret
or
cmp
mov
jbe
jecxz
jecxz
mov
and
cltd
adc
push
push
ja
push
pop
pop
sub
outsl
insb
stos
jp
fwait
mov
and
xchg
lds
mov
add
jmp
sbb
in
adc
sbb
and
cmp
rcrl
mov
jge
dec
or
ficoms
vmovdqu16
xor
mov
call
pop
mov
add
xchg
mov
mov
pushf
sub
pop
push
icebp
stc
sub
lods
push
mov
jno
inc
cmp
iret
imul
push
pop
jecxz
leave
mull
movsb
je
scas
int
daa
jmp
pop
je
pop
ja
int
das
andl
and
stos
or
mov
dec
add
lret
int
lea
repz
aas
xorl
testb
mov
je
fstpl
mov
mov
nop
aam
jb
pop
movsb
out
or
adc
ret
cmc
rorb
ss
or
pop
pop
in
sbb
xlat
jle
xchg
mov
lea
and
lret
das
ret
mov
push
into
push
mov
mov
inc
in
fadds
and
ret
and
shr
and
cmp
sbb
add
add
jo
imul
shll
or
or
in
adc
test
push
hlt
dec
pushf
cmp
addl
pop
frstor
mov
mov
push
mov
out
loopne
and
test
mov
addr16
lods
sbb
mov
jnp
andb
loope
jge
out
mov
sub
mov
or
add
dec
adc
sbb
test
mov
pop
shl
leave
xchg
les
movsl
ret
mov
out
and
aaa
jg
push
stos
mov
inc
int3
out
jmp
jae
adc
insl
xor
and
movsb
pop
cmp
and
scas
loope
cwtl
pop
sbb
out
xchg
out
pop
mov
shrb
icebp
aam
fbld
gs
jmp
lods
js
adc
repnz
push
mov
rorl
xor
jmp
das
subb
mov
xor
sar
aaa
ss
jle
jge
jle
cmpsl
movsl
jecxz
enter
push
dec
adc
stos
xchg
sbb
sbb
cmp
mov
rcrl
mov
mov
aas
jo
xor
insl
mov
popa
adc
ret
and
pop
cs
jmp
jg,pn
mov
outsb
andl
rorb
imulb
jmp
and
push
shlb
jbe
in
std
scas
jo
js
sarl
cli
scas
hlt
leave
add
sub
pop
lcall
mov
add
mov
scas
mov
test
jge
sub
enter
mov
xor
mov
loope
idivb
jge
aam
cmp
inc
les
mov
jnp
jns
lahf
lret
mov
jg
mov
movsb
push
bound
ljmp
je
fadds
cli
popa
jge
add
stos
ficompl
xchg
sub
aas
movl
cmp
mov
mov
fstpt
outsl
popa
jno,pt
or
sub
loopne
dec
mov
pop
insl
xchg
stc
push
push
cltd
mov
leave
mov
das
mov
and
hlt
add
cmp
dec
dec
cltd
mov
push
lret
ljmp
mov
add
mov
shrb
imul
cmpsb
add
shlb
inc
lahf
icebp
into
cmp
jno
or
dec
bound
mulb
xchg
test
inc
mov
cmp
sahf
fwait
lcall
cmp
ja
lcall
pushf
push
cmp
cmp
inc
mov
pop
ljmp
sbb
push
push
leave
cmp
outsb
sbb
and
imul
addr16
out
call
lea
pop
cmp
jno
popa
adc
push
shl
iret
pop
imul
mov
test
add
xchg
cmp
fs
idiv
sbb
out
or
jno
xchg
adc
loop
clc
xor
add
sub
lcall
mov
dec
ds
stc
jl
cmp
fsub
and
mov
addb
repz
sbb
jle
lds
mov
fcomps
outsb
xor
out
fnstenv
mov
xor
mov
pusha
sub
or
sbb
push
outsl
ss
scas
jno
sbbb
push
int
cli
int3
ljmp
sbb
pusha
dec
lock
repz
inc
addb
decl
sub
pop
inc
dec
adc
dec
movsb
lods
jb
mov
lods
pop
cmpb
mov
sahf
jecxz
adc
clc
xlat
cli
cli
pop
push
and
rcr
cmp
out
in
xchg
insb
out
movsb
jmp
shll
es
dec
out
int3
add
jp
or
xor
or
add
add
cmp
adc
aad
fcoms
in
xor
jge
jle
out
xchg
or
loopne
es
roll
cmp
or
iret
and
inc
int
adc
mov
add
xchg
mov
dec
mull
push
jmp
and
adc
popa
cmp
insl
jecxz
jnp
test
xor
test
pop
in
and
jae
adc
xchg
jb
jg
shrl
aaa
pop
int3
sahf
in
pop
dec
mov
inc
mov
adc
sbb
or
dec
push
mov
adc
pop
mov
pop
cmp
cmp
or
adc
xchg
inc
mov
mov
adc
inc
sub
mov
xchg
loope
ret
les
stos
xchg
leave
mulb
cmp
shl
aas
outsb
mov
test
stos
xor
jle
or
sub
repz
mov
out
wbinvd
test
fldt
sbb
adc
lods
and
pop
insb
pop
aas
arpl
sbb
cmpsl
inc
jo
jnp
inc
iret
jg
and
aaa
inc
push
movb
xchg
pop
pop
daa
mov
shll
or
fwait
dec
call
nop
imul
adc
movsl
xor
pop
xor
xor
loop
repz
iret
jmp
cli
and
sub
jne
cmp
std
push
xor
xchg
pop
push
fwait
shlb
repnz
push
cmpsl
lods
hlt
aas
push
shrb
imul
pop
xchg
test
and
pop
test
cmp
adc
adc
pmaxsw
fwait
or
cmpsl
mov
outsl
mov
add
shrb
in
aad
into
jmp
aas
cmpsb
cltd
lds
ss
ljmp
int3
pop
loop
ja
push
fdivrl
inc
rcrl
pop
cltd
lcall
inc
cs
int3
dec
enter
stos
ja
leave
xchg
sub
mov
fisubrl
cmp
inc
mov
jmp
outsl
mov
in
add
and
mov
push
stos
xlat
push
xchg
xor
inc
sbb
lret
pop
mulb
stc
ljmp
pop
test
add
dec
inc
dec
dec
and
out
pslld
jnp
lock
shlb
dec
push
call
das
mov
pop
repz
sahf
xor
repnz
jae
aaa
test
push
sub
shl
clc
js
jle
fisubrl
test
in
jb
ret
out
rcll
sahf
mov
repz
sahf
push
xor
sbb
arpl
fisubrs
cmp
or
adc
out
mov
jge
inc
or
push
jae
std
mov
mov
rorl
test
out
cmp
jle
cmp
fmul
pusha
enter
fsubrp
add
xor
sbb
add
mov
mov
xor
lea
mov
mov
mov
xor
add
imul
mov
xor
mov
lea
cmp
jne
mov
jmp
mov
mov
xor
add
mov
xor
lea
add
call
xor
inc
cmp
je
xchg
push
pop
push
pop
inc
xchg
sub
xchg
dec
mov
imul
add
xchg
push
xor
mov
dec
inc
add
jmp
lods
and
xchg
jno
jno
add
cs
out
in
xor
jle
jo
mov
fidivrs
dec
jae
mov
sbb
aas
fidivl
imul
iret
xchg
mov
sub
mov
inc
sbb
dec
out
xchg
add
jmp
cmpsb
pop
sbb
mov
lcall
ss
fdivs
loop
fisubrl
mov
push
outsl
jmp
mov
mov
loope
call
cmp
jo
pmaxub
iret
sbbb
xor
insb
call
push
mov
sbb
mov
push
cmpl
xchg
sub
aas
cmp
icebp
ss
push
sbb
stos
sbb
cltd
cmp
outsb
xchg
push
test
jge
jnp
inc
aaa
lahf
cmp
xor
fcomp
mov
mov
std
out
jno
rcr
ja
gs
rclb
clc
pop
and
push
xchg
cmp
mov
adc
lahf
repz
fisubs
lcallw
cmpsb
cld
icebp
pop
movsb
pop
hlt
lret
add
mov
cs
outsl
leave
xorl
mov
sbb
sbb
stos
cmpb
add
mov
cmp
cmp
incl
testl
leave
outsb
or
cs
cmp
jge
mov
xor
jo
cmc
cmp
out
cwtl
push
sbb
mov
jne
popa
mov
mov
aam
cmc
inc
push
cmp
nop
lds
xchg
inc
cmp
lds
outsb
movsb
fnstsw
cmp
xchg
mov
sub
test
rolb
sbb
sbb
xchg
sub
push
cmpb
push
std
jg
dec
sbb
push
lahf
lods
popf
clc
sahf
ret
inc
xor
or
inc
xchg
xchg
pop
fsubs
stc
xchg
xor
cli
mov
lret
xchg
mov
cmp
sar
ljmp
imul
fimull
and
das
pop
dec
sub
mov
mov
push
das
sti
cmp
inc
push
jmp
mov
mov
fcmovnbe
icebp
adc
xor
outsb
mov
leave
in
sarl
push
imul
fdivrl
cli
ljmp
cmp
repz
mov
es
push
or
ljmp
std
popa
mov
lret
mov
sbb
iret
add
outsl
pop
jbe
push
ljmp
insb
stc
jnp
sbb
push
ljmp
pop
aad
por
int3
les
jo
cld
jo
jo
outsb
mov
aam
adc
outsb
pop
je
test
push
cmpsl
fstps
jns
sti
ret
adc
dec
cmc
add
lods
mov
cmp
xor
add
pop
mov
pop
pop
pop
leave
ret
push
mov
push
movl
push
movl
mov
movl
movl
push
movzwl
mov
mov
movl
push
mov
not
mov
movl
cmp
movl
jmp
jecxz,pn
add
push
popf
jmp
movsb
jle
push
jg
jle
push
adc
jecxz
push
lret
dec
pop
inc
push
and
mov
outsl
lret
add
mov
je
dec
movsb
push
cmpsl
or
push
jns
mov
mov
imul
mov
push
push
cmp
jle
hlt
std
js
adc
popa
aas
lret
ret
cs
outsl
xchg
das
repz
jmp
add
inc
mov
lret
mov
xor
add
ret
push
mov
imul
mov
pop
sub
and
mov
in
jecxz
popf
mov
sub
jp
dec
cs
imul
sbb
xchg
mov
jp
loope
cmp
ss
pop
dec
add
xorb
push
cwtl
sbb
cmp
cmp
jge
sbb
daa
and
orb
mov
lret
dec
or
cmp
out
in
call
insl
jp
sub
insb
pop
lahf
cmpsl
je
addl
mov
mov
xorl
xor
add
cmp
movl
je
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
call
cmpl
jne
mov
inc
mov
jmp
mov
sub
xor
dec
add
push
adcl
pushl
or
pushl
mov
call
mov
mov
mov
mov
jmp
jmp
xor
fs
mov
sti
adc
das
fwait
iret
movsl
jle
push
jg
jle
add
push
xchg
xor
out
jo
cli
fwait
push
addr16
test
inc
inc
xchg
loop
int3
adc
hlt
sti
cld
fsubrl
sub
imul
jo
xchg
mov
cwtl
stos
push
push
lock
pop
mov
push
stos
pop
in
mov
aad
in
rcll
sbb
fnstsw
jge
sbb
adc
sub
mov
ja
sbb
dec
mov
cld
xorw
add
or
repnz
push
mov
ja
and
int
xlat
adc
lahf
leave
push
xchg
scas
dec
xor
std
dec
in
sbb
xor
stos
lcall
pop
cld
xchg
or
mov
movsl
add
mov
mov
outsb
cmp
stos
test
mov
divb
rcrb
jnp
fstpt
iret
in
mov
pushf
adc
push
clc
ret
xchg
mov
push
imul
js
xor
push
popf
xorl
mov
mov
xor
add
cmp
jne
mov
xor
add
jmp
xor
xor
mov
cmp
fbld
jle
div
lcall
mov
dec
or
jg
push
mov
in
in
pop
mov
mov
decb
mov
popa
inc
xor
test
add
lret
xchg
dec
add
fldl
les
nop
cmpsb
mov
rol
shlb
mov
mov
xchg
push
imul
cld
dec
add
sbb
mov
jle
leave
adc
lods
ficoml
add
pop
je
xchg
mov
push
add
mov
push
sbb
rcr
or
or
xlat
repz
int3
pop
popf
out
jne
inc
inc
out
mov
sti
icebp
mov
or
jb
mov
data16
mov
sbb
shl
idiv
rcrl
push
fnsave
pop
sbb
fisubrl
sub
xor
stc
int3
ja
xchg
sbb
mov
sub
std
jbe
inc
push
push
jnp
mov
xor
scas
adc
out
sub
je
mov
cmp
add
add
mov
pushl
pushl
call
mov
xor
pop
add
pop
leave
ret
push
mov
sub
mov
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
call
jmp
subl
push
andl
mov
inc
mov
cmpl
jne
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
movl
cmpl
je
cmpl
jne
push
pushl
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
dec
mov
xor
mov
add
andl
push
negl
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
call
cmpl
jb
sbb
mov
xor
andl
movl
adcl
movl
subl
add
movl
jmp
cmp
jne
movzbl
mov
jmp
xchg
inc
jae
push
aaa
mov
lret
out
mov
jle
sbb
mov
test
jmp
pusha
mov
mov
cmp
mov
ret
cmp
inc
pop
xor
aas
scas
mov
pop
mov
lds
insb
jne
cmp
int3
push
sub
movsl
movsl
mov
xchg
cmp
jbe
stos
mull
sbb
aas
mov
mov
roll
or
fnstcw
jmp
ret
aad
sti
dec
cmp
ret
inc
jmp
call
add
fs
aas
jno
call
jecxz
mov
cmp
scas
insl
mov
mov
out
gs
xchg
into
push
or
rcrb
rorb
sub
push
fstps
mov
pop
fmuls
int
dec
mov
jns,pt
fisubrl
mov
addb
repz
adc
mov
add
mov
mov
dec
sbb
pop
cs
ds
and
test
lret
mov
rcrl
ljmp
push
out
shrb
inc
jnp
sub
pop
mov
xchg
jl
dec
sti
notb
pop
mov
push
out
mov
inc
aaa
scas
adc
sbb
es
cmp
mov
sbb
jne
ret
adc
aad
xchg
inc
lods
jbe
fdivrs
ret
push
daa
pop
hlt
popa
xor
mov
push
push
popa
adc
cld
mov
mov
les
jmp
mov
pushf
fwait
mov
inc
adc
sahf
xorl
push
mov
sbb
rcr
xchg
mov
sarl
push
push
repnz
fistl
aad
and
or
arpl
and
outsb
in
das
jo
cmp
ss
jb
xchg
pop
test
arpl
bound
or
nop
and
jno
popa
inc
inc
popf
adc
shll
and
leave
dec
fnstsw
add
xchg
aas
add
mov
movl
mov
movl
mov
movl
mov
movl
jmp
cmp
jne
andl
mov
sub
push
mov
add
push
jmp
es
gs
test
mov
jle
xlat
xor
push
add
stos
into
adc
std
inc
sub
adc
aaa
add
and
xor
rcll
mov
inc
dec
shrl
aam
frstor
loop
insl
and
add
or
fstpt
dec
inc
jno
mov
sbb
pop
inc
jle
cmp
jp
dec
nop
jmp
and
mov
scas
clc
in
push
jne
or
les
and
adc
mov
push
push
sub
sti
repz
mov
adc
cmpsb
test
int3
dec
pop
lret
daa
sbb
fs
sbbl
arpl
sub
inc
test
mov
jnp
fisubl
push
lahf
push
cmp
push
jmp
jo
push
repnz
testl
out
stc
pop
xor
loop
sbb
jge
mov
sbb
popf
outsl
xor
rcll
fidivs
subl
int
mov
shrb
lahf
mov
push
icebp
ret
inc
mov
mov
xchg
subb
jns
in
xchg
jg
cs
sbb
test
das
mov
gs
dec
add
lods
mov
inc
icebp
mov
rclb
mov
sbb
jp
sbb
test
dec
mov
dec
icebp
popf
imul
pop
dec
jnp
call
xlat
mov
push
xor
test
and
scas
mov
cmpsl
mov
inc
or
sub
cmp
movsl
call
enter
push
jo
stos
lret
leave
pop
push
punpckhwd
push
or
out
or
std
fmull
mov
nop
xor
mov
int3
rolb
pop
hlt
push
ret
pop
cltd
mov
sti
call
scas
cld
shrb
xchg
xor
add
mov
call
incl
cmpl
jb
jmp
jmp
lds
imul
scas
jle
push
jl
jle
sar
faddl
and
pushf
cmp
aad
push
jnp
scas
inc
cmp
sub
mov
add
filds
add
dec
rcll
mov
inc
loope
dec
stos
imul
dec
lret
loopne
sbb
pop
xchg
cmc
mov
jle
int
sub
bound
pop
sbb
lahf
mov
ss
jne
out
insb
fnsave
inc
xchg
or
adc
lods
inc
mov
cld
push
xchg
sahf
and
fsubrs
fdivrp
movsb
adc
loop
sarb
mov
xor
shll
jge
roll
jecxz
daa
fists
adc
push
mov
enter
xchg
int3
out
movsl
pop
cld
rorl
xor
mov
sbb
push
imulb
ss
mov
stos
mov
mov
jnp
scas
mov
sti
push
push
adc
insb
aas
push
inc
inc
jge
inc
pop
movsb
mov
fdivrp
ja
jnp
fisttpll
ds
push
out
mov
and
and
add
popa
xchg
jne
icebp
in
xchg
rcrb
jmp
sbb
call
rcl
sbb
push
add
jo
insb
fldcw
ds
mov
fbstp
testb
sets
repnz
out
push
xchg
lods
stos
sub
cmp
std
and
sub
std
andl
movsl
pushf
add
push
mov
sbb
xor
sbb
push
mov
jb
fs
push
xor
xchg
dec
pop
cmpsl
loop
shlb
xchg
popa
jns
fiadds
pushf
jbe
jge
in
jae
mov
dec
mov
xchg
in
or
ljmp
lods
mov
movsl
rclb
or
in
or
push
faddl
arpl
pop
pop
test
mov
cmp
adc
call
xchg
push
test
xchg
fwait
pop
or
adc
jo
dec
stc
lahf
fwait
int
fucomi
and
faddl
rorl
shrb
pop
std
cmp
jne
movl
mov
mov
mov
mov
mov
xor
add
mov
lea
mov
mov
xor
add
mov
lea
push
mov
xor
add
push
mov
push
pushl
call
jmp
cmp
jne
mov
xor
add
mov
mov
mov
mov
mov
mov
push
pop
sub
add
mov
mov
xor
lea
cmp
jne
mov
pop
xor
jmp
push
mov
jno
scas
out
lds
lahf
lods
jle
push
jl
jle
adc
mov
sbb
mov
stos
and
mov
nop
mov
out
adc
mov
mov
sub
hlt
cld
inc
pop
notl
xchg
mov
stos
or
aam
pop
mov
es
mov
sbb
jmp
mov
jmp
es
push
sti
repz
lcall
cmp
push
adc
sub
lret
movsl
and
call
mov
test
add
add
adc
lds
pushl
sti
add
jecxz
xchg
sub
jo
lret
int3
loope
pop
add
jno
pusha
adc
or
pop
pop
adc
dec
cmc
lods
push
jne
fs
sbb
adc
test
dec
pop
or
sbb
or
fadds
or
mov
aad
inc
lods
inc
js
mov
lods
push
and
shrb
sub
cli
loopne
testl
xchg
scas
stos
mov
pusha
repz
pop
cmp
in
sub
cmovg
repz
fs
cmp
loope
movsl
adc
enter
mov
movsl
mov
sahf
cmpsb
outsb
jbe
or
dec
mov
jno
pop
push
adc
mov
repz
ret
enter
les
into
pusha
imul
fwait
mov
xchg
jp
ljmp
xchg
jecxz
pop
mov
adc
aam
mov
test
iret
jge
or
out
mov
mov
js
sub
mov
pop
mov
sub
insl
pop
pushf
rorb
movsl
pop
push
sti
dec
pop
jg
sub
movsb
arpl
xchg
mov
movsb
sbb
xor
shl
jmp
mov
sub
pop
add
pop
leave
ret
push
mov
push
movl
push
xor
movl
jmp
lcall
push
inc
push
dec
movsb
jl
subb
jle
lods
jl
jle
mov
pop
add
cmp
pslld
sbb
mov
or
in
test
les
add
add
push
rorl
sub
arpl
push
out
and
faddp
cmp
jb
xor
fstl
add
cwtl
inc
jge
dec
jle
imul
movb
rol
test
mov
pop
mov
and
or
mov
gs
popf
fwait
div
and
or
inc
mov
and
sub
mov
xchg
inc
jnp
andb
dec
fcmovb
push
lahf
pop
imul
sub
mov
sub
xor
push
repnz
into
and
popa
pop
mov
push
sbb
sbb
cmp
sbb
jmp
cld
add
test
fcom
fistps
hlt
ljmp
jge
mov
push
adc
shrb
aas
aaa
not
sbb
mov
leave
jl
call
insl
pop
or
add
fbld
test
jge
insl
dec
push
sbb
fadds
int
gs
xor
cvtpi2ps
xor
pop
fwait
add
andb
subl
cmp
xor
jns
dec
push
pop
or
lods
push
add
push
test
sbb
adc
rcll
rcll
lahf
jne
in
ja
sarl
pop
push
adc
push
inc
mov
icebp
cmc
call
mov
xor
or
push
lret
jno
std
test
xor
add
negl
cmp
cld
dec
out
popa
std
loope
outsb
dec
enter
das
xchg
mov
push
sti
inc
loopne
inc
ret
inc
xchg
pop
cld
mov
out
icebp
insl
repnz
rcrl
dec
xchg
enter
scas
lods
movsb
mov
push
inc
xlat
mov
hlt
out
xchg
dec
jmp
push
ljmp
mov
sbb
lods
xlat
push
clc
lret
loope
cld
cmp
ss
mov
sbb
mov
inc
xor
jbe
pop
or
out
mov
bound
pop
jl
adcl
pop
lcall
pusha
stos
in
mov
mov
push
lds
sub
mov
xor
dec
test
add
mov
mov
jle
ret
in
das
sarb
int
dec
xor
fadds
test
shl
iret
movl
subl
mov
addl
jmp
insb
xchg
xchg
in
or
adc
fnsave
jle
adc
aas
repnz
iret
or
mov
sub
dec
ret
dec
rol
pop
sbb
or
fdivrp
hlt
lock
std
aaa
push
and
inc
sub
lea
ret
adc
movl
inc
ret
mov
xchg
or
jecxz
pop
or
or
fs
test
jb
push
pushf
mov
pop
imulb
or
test
ja
mul
pop
push
ljmp
xchg
pusha
jmp
mov
jge
mov
call
add
mov
in
pop
mov
cmpsb
repz
cwtl
xchg
ja
dec
cmp
mov
dec
inc
cmp
mov
inc
push
stos
mov
sub
scas
adcb
jmp
cwtl
add
mov
cmpl
add
fwait
cs
arpl
scas
push
call
out
repz
jle
test
rorb
and
hlt
pop
or
call
repnz
inc
leave
and
inc
lods
jbe
repnz
dec
bound
dec
test
clc
cwtl
mov
or
xor
cmp
and
jg
xchg
stc
xor
and
or
das
hlt
pop
gs
mov
mov
dec
and
dec
dec
in
mov
imul
inc
inc
imull
inc
stos
and
jl
dec
jno
sar
add
mov
popf
ret
andl
ret
adc
mov
mov
mov
add
test
movsl
sbb
in
add
ret
rol
nop
mov
enter
xchg
xchg
xchg
inc
xor
and
pop
ja
and
lock
test
lea
cwtl
inc
sahf
push
std
pop
sbb
push
fdiv
xchg
cltd
jnp
xchg
push
dec
mov
sbb
movsb
cmpsl
and
or
push
repnz
mov
xchg
sbb
xlat
jp
lods
xor
or
icebp
je
dec
xchg
in
lods
jnp
lret
lahf
push
ret
imul
in
scas
and
into
and
arpl
inc
rorb
add
ja
pop
jle
mov
push
xchg
dec
ret
push
cli
sbb
out
push
das
sub
xor
shlb
mov
shll
cltd
pop
lea
or
js
fs
push
or
scas
or
int
popf
pop
pop
loopne
push
pop
add
xlat
sbb
adc
repz
push
adc
mov
movzbl
adc
mov
xor
xor
xor
mov
jmp
mov
jno
jb
inc
pop
outsl
hlt
mov
jle
lods
jl
jle
ljmp
push
xor
mov
pushf
inc
mov
pushw
xchg
imull
hlt
mov
sti
jmp
mov
jnp
push
inc
cltd
into
cld
adc
push
mov
jo
arpl
add
pop
mov
lret
ffreep
test
push
leave
fnstcw
les
xor
ss
pop
pop
pushf
sub
fmul
add
dec
add
jbe
jns
andb
and
add
inc
jmp
xchg
cltd
addr16
aas
shlb
testl
popf
add
psubusb
jno
dec
lcall
stos
cmp
mov
inc
inc
add
push
lahf
add
sbb
lcall
fisubrs
leave
dec
cld
pusha
insl
xchg
cmp
sub
cltd
pop
mov
jl
mov
daa
push
das
mov
lods
in
pop
test
insl
mov
pop
or
lret
pop
and
adc
jl
pop
and
mov
push
fnstcw
sub
mov
negb
or
mov
push
or
push
and
stc
sub
add
dec
popf
fucomip
sbb
cld
movsb
jge
mov
adc
xor
jp
push
mov
in
insb
pusha
repz
push
fisubl
cs
or
sub
mov
repz
push
xchg
fimull
add
pusha
mov
mov
pushf
repnz
shlb
mov
mov
cli
dec
mov
sbb
loopne
shll
ds
inc
mov
mov
shll
mov
sarb
jmp
xor
scas
mov
mov
movsb
xor
shll
and
mov
push
loopne
aad
mov
adc
fnstcw
je
cwtl
lret
fldt
fwait
push
or
jmp
add
xchg
dec
or
sub
mov
imul
jo
pusha
mov
rol
hlt
push
out
fmul
add
lahf
mov
jmp
jne
or
lret
cli
jo
push
push
stc
movsb
adc
in
cmp
mov
push
fcompl
aad
fs
test
inc
mov
fbstp
mov
out
lret
push
mov
fs
push
in
mov
lret
dec
xchg
cmp
xor
add
call
daa
mov
jo
sahf
xchg
push
xor
jne
mov
lret
fwait
out
cltd
or
sub
inc
pop
les
and
push
mov
add
jmp
lock
arpl
sub
scas
ret
rcll
cmpsb
pop
mov
jl
jle
ret
nop
icebp
push
loopne
insb
loope
and
adc
adc
repz
or
test
cmpl
or
cmp
lods
or
sub
into
cmp
std
add
loope
inc
sub
xlat
fisubl
orl
stc
data16
jl
adc
mov
imul
js
push
lods
das
cltd
insb
fdivl
dec
push
adc
pushf
jl
jp
push
and
push
push
and
in
adc
fadd
sub
mov
pop
xchg
out
lods
lahf
xchg
or
in
les
icebp
pushf
and
push
shll
rcrb
sbb
movsl
lods
nop
pop
mov
jecxz
and
dec
xchg
fdiv
ret
lds
and
mov
push
movsl
mov
ljmp
test
pop
mov
cmp
and
pop
jge
inc
xor
pop
jae
fisttpl
pusha
pusha
dec
ss
adc
hlt
imul
push
or
xor
mov
or
js
sbbb
xlat
mov
mov
clc
mov
in
dec
iret
jecxz
sub
xor
inc
test
clc
outsl
popa
lahf
cmp
stos
lea
adc
cmpsl
push
add
pop
loopne
test
loop
sub
adc
je
add
mov
in
add
push
and
bound
dec
xor
leave
sbb
adc
shr
test
enter
fists
cmc
jae
pop
jo
fs
aas
xchg
stc
popf
daa
iret
mov
daa
shlb
push
sub
inc
stc
mov
movsl
add
movsl
fwait
cwtl
insl
cwtl
jmp
mov
dec
inc
or
daa
hlt
clc
pushf
jp
pop
mov
lret
loopne
fdivrl
out
gs
dec
je
cli
loope
outsb
cmc
xchg
clc
aas
mov
fs
jo
dec
lahf
xor
out
subb
lahf
icebp
push
sahf
mov
dec
andb
popf
sub
fcoms
xchg
mov
push
push
movsl
cmp
les
enter
cmpsb
cltd
std
outsl
cmp
xor
adc
inc
stos
hlt
sbb
jno
xchg
cmp
add
mov
add
fidivs
shlb
out
loop
vcvtsi2sdl
mov
xchg
mov
sbbb
loopne
fldenv
push
sbb
movsl
lea
jge
scas
mov
movl
cmp
jne
mov
sbbl
jmp
inc
sbb
test
add
jnp
idivl
jle
fcmovne
sub
gs
mov
inc
mov
add
jmp
imul
mov
add
cmpsb
mov
dec
xchg
pop
push
leave
sub
mov
rorb
xchg
push
mov
cmp
mov
in
push
mov
test
mov
mov
pop
pushf
add
jle
dec
jecxz
fisttpll
daa
push
jns
mov
int
pop
scas
ljmp
nop
fidivrs
push
les
or
fiadds
and
mov
inc
push
xor
cld
mov
sahf
or
and
outsl
xchg
mov
insb
push
addl
fsubl
mov
lods
add
aaa
sub
cltd
lahf
ss
xlat
scas
sahf
ret
dec
incb
and
pop
ljmp
xchg
int3
test
loop
data16
stos
test
aaa
inc
into
push
aam
ds
push
pop
aaa
outsl
mov
jne
test
aaa
or
insl
mov
and
pop
mov
adc
jnp
lock
jns
add
lret
dec
dec
in
fisttps
adc
andb
mov
aaa
addr16
jae
xchg
rclb
adc
inc
jmp
sbb
int
pop
negb
mov
inc
dec
xchg
out
and
enter
pushl
icebp
scas
scas
lods
sahf
dec
and
clc
gs
and
imul
jo
dec
xchg
fsubs
xor
loopne
push
push
fwait
pusha
es
imul
std
cmc
daa
icebp
add
imul
fbstp
sub
fwait
lret
xchg
dec
pop
sti
mov
out
jns
arpl
lds
or
jl
mov
push
mov
call
push
mov
cmc
cmpl
icebp
mov
or
xchg
loope
iret
rcrb
in
cwtl
shll
jecxz
inc
test
jne
adc
jmp
cmp
mov
imul
xor
inc
pop
imul
pusha
notb
dec
in
or
pushf
data16
push
jecxz
push
and
and
and
arpl
loopne
jmp
out
push
fiaddl
ds
addr16
out
jb
roll
xchg
mov
std
mov
sahf
sbb
adc
pop
xlat
in
sbbb
movl
fcmovb
data16
adc
std
dec
sbb
inc
inc
add
inc
cmp
pop
and
xchg
pop
int
fiaddl
dec
iret
jo
xor
jno
jne
mov
movl
xor
xor
add
subl
add
imul
jmp
movl
cmpl
je
cmpl
jne
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
mov
mov
mov
mov
xor
xor
add
add
imul
mov
cmp
mov
je
xor
add
mov
imul
add
mov
mov
pop
leave
ret
push
mov
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
call
cmpl
jne
mov
inc
mov
jmp
xor
push
addl
mov
or
mov
jmp
jne
dec
cs
xchg
or
and
jl
jle
and
mov
mov
or
jmp
das
je
icebp
mulb
lret
fldt
push
xchg
lahf
mov
pop
lcall
ss
cmp
out
xor
mov
sub
mov
xor
mov
mov
mov
or
pop
or
lcall
pop
xlat
in
pop
in
fists
xchg
cmpsl
and
mov
mov
push
mov
in
lcall
cmpsl
dec
subl
into
mov
mov
sti
dec
add
jns
pop
mov
iret
or
stos
movsb
mov
mov
push
dec
adc
or
mov
aad
mov
repz
cli
push
test
cmp
jge
xor
jl
add
addr16
insl
push
add
xlat
push
mov
adc
pop
sbb
adc
dec
mov
sub
sbb
cmp
lock
test
push
incl
aas
mov
mov
jo
add
dec
stos
out
jle
mov
jle
cmp
gs
dec
mov
jo
and
xor
pushf
fiaddl
jo
and
fldcw
dec
fsubs
stos
push
call
fists
jl
push
mov
xchg
jge
xchg
movsb
movsl
xor
push
popa
leave
sti
cld
mov
ljmp
xor
imul
sbb
je
clc
or
or
out
test
por
mov
and
insb
add
sub
or
test
arpl
mov
mov
fwait
adc
inc
add
add
sbb
add
pop
push
insl
insl
aam
jns
xor
int3
cli
fs
mov
test
cmpsb
rcll
xchg
popf
sub
mov
into
cmp
sbb
sarb
lahf
addr16
sti
enter
cmpsb
xor
rclb
stos
jae
pop
lcall
push
inc
stc
into
xor
fadds
xchg
lods
xchg
nop
repz
fcmove
jno
or
sbb
xor
popf
movsl
push
lret
movl
andl
mov
inc
mov
cmpl
jne
pushl
call
cmpl
jb
xor
or
sbb
mov
mov
movl
cmpl
je
cmpl
jne
push
pushl
pushl
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
movl
push
xor
mov
sbb
xor
mov
adcl
push
mov
add
cmp
je
mov
mov
xor
mov
sub
add
xor
add
cmp
ja
push
jmp
mov
mov
mov
xor
add
mov
imul
mov
xor
add
mov
mov
mov
xor
lea
mov
xor
mov
sub
add
cmp
jbe
pop
jmp
out
adc
adc
ja
orl
icebp
adc
arpl
jl
jle
nop
push
and
add
in
decl
das
push
jnp
xor
pop
cmp
ja
loopne
xchg
fisubs
fiadds
pop
mov
imul
nop
add
sub
insb
cmp
and
cmp
inc
push
in
test
mov
sti
cmpsb
adc
or
and
in
xorb
pop
push
and
mov
xlat
orb
and
mov
mov
shrl
add
jle
ficoms
mov
add
adc
pop
sahf
sbb
es
xor
cmp
sub
ljmp
test
enter
adc
clc
iret
xchg
js
not
inc
sub
mov
xchg
and
push
mov
lcall
test
mov
or
leave
jae
cmp
jno
inc
int3
pop
inc
lods
adc
test
xchg
xor
push
ret
pop
jecxz
jo
popa
and
cmp
aam
mov
or
jg
mov
loope
orl
sahf
iret
scas
ficompl
jbe
jno
mov
jecxz
insb
sub
fnsave
daa
es
xorl
sbb
call
dec
xor
push
cmp
push
int3
repz
dec
push
fsub
cmp
lret
xchg
lds
lea
or
aaa
lods
add
push
ret
lret
xor
lcall
sbbb
popf
and
mov
sbb
push
xchg
inc
ficompl
adc
fwait
push
cmp
dec
adc
rcll
hlt
xchg
add
out
cli
lods
lea
or
jle
xchg
mov
jb
inc
xchg
aas
inc
ss
and
jbe
inc
test
pop
sub
adc
dec
xlat
aam
mov
into
scas
out
adc
call
jg
shll
cs
push
pop
out
inc
ret
ja
adc
adc
mov
popa
nop
push
testb
fmuls
fmuls
push
jbe
inc
xchg
adc
data16
mov
outsl
xchg
jle
add
adc
sub
push
divl
xor
leave
ret
push
mov
mov
xor
mov
div
mov
and
or
mov
pop
ret
push
mov
sub
xor
mov
movzwl
sbb
mov
mov
xor
andl
mov
add
andl
movzwl
xorl
mov
movb
adc
lea
mov
adc
mov
mov
xor
sub
adcl
mov
xor
xor
sbb
jmp
add
mov
cmpsl
scas
sub
jle
icebp
jg
jle
in
cmp
push
sub
aas
hlt
sub
lea
ljmp
jmp
test
sub
push
or
cwtl
or
ljmp
cmpsl
dec
or
add
pop
lret
xchg
stc
inc
xchg
fildl
mul
xor
lsl
rolb
xor
mov
daa
imul
bound
xor
test
stos
add
mov
pop
icebp
mov
jp
fcomps
leave
and
jns
mov
dec
test
lds
jb
test
ss
mov
xchg
fstp
stc
pop
pop
jmp
out
rcrb
cmp
insb
dec
adc
push
sbb
add
cmpsl
lcall
lret
subl
jnp
idivl
imul
add
push
inc
sbbb
dec
add
lock
xchg
iret
jnp
dec
adc
popf
cwtl
incl
mov
push
add
dec
mov
sti
inc
and
daa
adcl
xchg
fcoml
sub
scas
xchg
xor
bound
cli
xchg
or
scas
push
dec
sub
or
movsl
mov
or
push
dec
xchg
aaa
pop
sbb
mov
popa
sbb
js
or
clc
out
lds
cs
js
push
jb
inc
in
push
mov
push
or
adc
dec
push
insl
cwtl
sub
mov
inc
clc
xor
movl
mov
orl
mov
movl
push
xor
or
mov
add
jmp
mov
mov
movl
inc
movl
cmp
movl
jb
mov
add
mov
mov
movl
cmpl
je
cmpl
jne
pushl
pushl
pushl
pushl
push
call
cmpl
jne
xor
xor
dec
mov
mov
dec
mov
jmp
mov
addl
xor
sbbl
add
movl
cmp
jmp
adc
in
in
jno
aad
dec
add
and
jle
jg
jle
stc
or
jge
push
mov
inc
pop
mov
cmc
xor
ja
sub
in
test
or
popf
sbb
loop
mov
lahf
addr16
inc
incl
lahf
cmp
sbb
or
sbb
rolb
aam
adc
or
icebp
xor
inc
pop
sar
dec
sub
mov
add
adc
or
psllq
or
and
push
lods
call
xor
pushf
push
xor
dec
xor
or
mov
mov
int3
addr16
xlat
pop
enter
jbe
fwait
call
sbbl
shrb
sbb
js
in
ficoms
sahf
addr16
imul
pop
add
cmpsb
push
out
lock
xchg
lock
pop
icebp
clc
std
push
dec
mov
mov
xor
push
lea
je
das
mov
xchg
sbb
xchg
sbb
pop
jb
mov
lods
add
iret
in
movb
mov
loop
adc
insl
mov
or
mov
jns
pop
mov
jne
mov
jle
aad
push
add
popf
pop
xchg
aam
in
add
adc
or
pop
xor
pop
dec
jo
jnp
sub
mov
pop
mov
or
es
dec
daa
ds
aas
mov
je
xor
add
sub
push
sub
push
movl
cmpl
je
cmpl
jne
push
pushl
pushl
push
call
cmpl
jne
mov
dec
mov
xor
or
dec
mov
jmp
mov
mov
xor
jmp
mov
ja
jne
mov
insl
push
push
push
jle
dec
mov
icebp
jg
jle
fcoml
sarb
push
jle
into
dec
mov
sub
mov
je
sarl
add
pushf
jl
inc
sbbl
inc
addl
rclb
inc
std
shlb
arpl
and
cmp
je
add
sbb
adc
inc
pop
dec
sub
inc
dec
outsl
test
les
mov
inc
push
bound
fists
inc
sbb
lcall
jbe
jns
call
imul
add
add
bound
dec
fisttpl
lcall
xchg
lds
cli
pusha
sub
adc
push
stc
popf
push
imul
int3
out
out
aaa
lahf
mov
aas
test
hlt
dec
sti
sbb
fsubrl
push
repnz
xchg
inc
iret
rorb
std
pop
test
push
push
aam
cmp
xor
lds
xchg
mov
push
inc
or
js
ljmp
sarb
fs
jmp
rcll
sub
push
xor
sub
ret
inc
movsb
add
dec
pusha
pop
dec
nop
ret
mov
mov
xor
inc
jge
xchg
in
daa
inc
xor
push
cmp
data16
jbe
sbb
jne
mov
lret
notb
cmp
mov
mov
add
movzwl
mov
mov
movzwl
xor
add
mov
mov
mov
inc
cmp
jne
pop
pop
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
mov
cmp
je
mov
jmp
mov
adc
adc
imul
lock
inc
jle
icebp
jg
jle
imul
icebp
jne
fnstcw
xor
fdivrl
leave
pop
xor
call
and
ficomps
stc
decb
push
ficomps
jl
sbb
arpl
les
iret
inc
pushf
cmc
out
std
add
jg
pop
loope
aam
sbb
jg
repnz
jmp
movsb
outsl
mov
ljmp
scas
loop
daa
adc
adc
sahf
ljmp
ljmp
ljmp
ror
loop
cmp
pop
das
lea
push
xor
dec
fdiv
push
mov
bound
arpl
icebp
add
insb
cmpsb
xchg
dec
ja
cltd
push
mov
dec
sub
in
dec
mov
in
push
arpl
xor
xchg
xchg
jns
add
ret
jno
pop
insl
nop
inc
cld
or
insl
pop
fisttpll
sub
addl
xlat
inc
cmp
lahf
push
aad
mov
pushf
in
push
test
shr
loop
pop
popf
add
jne
les
shrb
popa
cmp
jno
clc
inc
arpl
mov
pop
and
andb
sub
push
cmp
gs
movsl
sub
lds
xor
cmp
mov
cmpb
xor
cmpsl
test
in
out
imul
adc
aam
adc
decb
push
or
add
test
inc
clc
mov
movsbl
xor
add
cmp
je
movl
lea
mov
mov
addl
mov
mov
xor
lea
mov
jmp
sub
sub
test
pop
cld
add
test
icebp
jg
jle
inc
andl
adc
pop
mov
pop
push
cmpsl
dec
mov
lock
roll
sub
mov
cmp
mov
int3
sub
jbe
daa
in
cwtl
and
fdivrs
cltd
stos
bswap
in
pop
sti
adc
add
sub
sub
cs
add
xor
imull
clc
stos
repnz
sbb
lcall
jle
jns
push
hlt
dec
movsl
out
xchg
lods
sbb
jnp
call
or
cmp
out
test
movsl
xchg
in
mov
xchg
shlb
inc
or
jnp
pop
adc
mov
adc
sbb
pop
add
jg
mov
mov
adc
push
hlt
nop
inc
scas
cmp
adc
sbb
fstps
pop
fildll
add
jl
aaa
or
loop
pop
xchg
pop
mov
inc
daa
sub
or
inc
icebp
pop
adc
lods
adc
add
and
fadd
addr16
loope
in
test
fwait
lods
jmp
xchg
mov
fisttpl
pop
lods
std
outsb
fmull
pop
adc
inc
fcmove
rol
popa
hlt
cltd
inc
mull
adc
xchg
push
clc
cmpsb
icebp
mov
fimuls
call
or
inc
cmp
jmp
jno
stc
pop
js
cli
inc
cli
fcoms
stc
popf
push
imul
push
test
mov
incl
jmp
mov
xor
jmp
ljmp
jo
fidivs
xchg
jle
icebp
jg
jle
xchg
leave
repnz
pushf
addl
jo
mov
out
add
xor
movsb
push
mov
sbb
sub
mov
xchg
pop
adc
filds
mov
xchg
mov
pop
add
and
and
cs
stc
push
adc
jbe
mov
push
and
mov
sar
add
int3
jg
dec
mov
lock
test
ds
sub
mov
divl
pusha
and
cltd
movsl
sti
fidivl
or
adc
jge
imul
rorb
int
subl
sub
test
adc
and
cmpsl
fs
loope
call
sbb
mov
lods
pop
and
push
xchg
sti
adc
icebp
xchg
lods
xchg
and
cs
js
pusha
cmp
cmp
or
mov
pop
mov
leave
mov
inc
mov
sub
jno
stos
and
add
in
xchg
or
outsl
cwtl
bound
dec
jle
jo
mov
mov
mov
mov
cwtl
test
pop
mov
nop
in
gs
mov
push
in
jp
dec
inc
jae
scas
es
popl
xchg
mov
xor
ljmp
pop
cmpsb
pop
cmpsl
push
mov
ss
out
lret
in
stos
test
adc
mov
pop
leave
ret
push
mov
push
neg
movl
mov
adcl
mov
sbbl
add
xor
cmp
movl
jne
and
mov
xorl
mov
add
jmp
jo
sbbl
roll
push
sbb
add
jle
jl
jle
and
enter
cmp
mov
mov
push
dec
xor
jns
icebp
ret
mov
xor
sbb
clc
mov
adc
lock
outsl
pop
xor
pop
push
loope
xchg
mov
repz
out
mov
push
jns
scas
sbb
xorl
xchg
stc
mov
psrad
ljmp
addl
jno
scas
stos
sbb
negb
movsb
xchg
xor
push
xchg
add
adc
dec
lcall
data16
into
es
xor
ss
mov
sbb
mov
cmp
sub
push
jne
pop
jb
inc
lock
bt
test
cwtl
test
jmp
aad
sub
mov
mov
pop
xchg
mov
nop
es
bound
push
pop
inc
sub
mov
inc
mov
sbb
fs
shrb
push
inc
sub
nop
xor
xchg
pop
cmp
mov
sbb
scas
out
icebp
aas
into
ret
pop
dec
adc
xchg
mov
popa
pop
jno
jle
sub
cmp
pop
insl
ja
jne
jg
mov
in
imul
in
roll
lea
dec
xor
movsb
mov
jo
pop
and
mov
insb
mov
mov
les
jg
and
cmpsl
or
jge
adc
cltd
insb
lcall
mov
xchg
scas
enter
push
mov
xchg
lock
and
xchg
inc
ss
cmp
aad
xlat
sahf
fisubrl
mov
cmp
cs
xchg
sbb
fbstp
test
push
je
sar
scas
fwait
jmp
and
mov
sbb
dec
inc
push
inc
push
das
les
ficoms
pop
jle
or
ss
jae
loopne
jg
cmc
pusha
xchg
mov
dec
cmp
sbb
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
call
jmp
mov
jmp
pop
pop
dec
pop
dec
xor
outsl
aam
fsubrl
and
jl
jle
into
lret
dec
gs
inc
insb
mov
or
cmp
xchg
stos
xchg
lods
mul
std
inc
mov
or
pop
mov
mov
mov
adc
or
push
cltd
cmp
push
xchg
outsb
out
outsl
lahf
sbb
mov
jg
cmpsb
stos
test
test
inc
outsb
mov
pop
pusha
sbb
mov
or
xchg
or
xor
lret
js
daa
add
stc
stc
lods
ficoml
lock
cmp
adc
scas
ret
push
fdivs
stos
in
std
push
mov
mov
mov
mov
adc
fsubr
push
adc
aas
int3
mov
or
mov
leave
mov
mov
or
mov
movsb
add
pop
dec
js
scas
iret
incl
stos
std
mov
hlt
hlt
sub
ja
add
inc
shll
mov
or
add
aas
ss
jne
outsl
out
xorb
jle
aad
pop
aas
sbb
in
lcall
ljmp
test
mov
ret
cmc
adc
stos
jmp
mov
cs
int3
or
sbb
fists
sti
in
shl
mov
inc
or
pop
insl
pushf
enter
outsb
pop
mov
jae
mov
dec
push
in
rcll
fdivs
push
xor
dec
push
pop
dec
xchg
jae
sub
fisubs
add
enter
mov
cltd
lret
inc
mov
imul
add
test
arpl
push
sub
inc
cmc
dec
loope
sbb
xchg
mov
xchg
dec
int3
fs
mov
sbb
cmpsb
dec
mull
adc
sahf
jle
and
test
push
ljmp
dec
fnstsw
scas
sub
mov
jno
ret
jne
mov
add
jmp
mov
imul
lea
push
dec
jle
adc
or
jg
pop
pop
rcrb
lret
insb
es
sbb
and
out
jbe
test
cmp
jle
daa
loop
dec
es
fnstenv
xor
lret
aam
pop
push
add
ss
jle
pushf
inc
js
push
pop
adc
int3
in
mov
insb
ret
add
hlt
stos
xchg
aaa
cmpsl
sbb
mulb
mul
movsl
scas
pop
repnz
pop
movsb
fcomps
xor
dec
rorb
mov
repnz
fdivp
fstpt
mov
in
cmpl
shlb
lret
or
lds
xor
pop
pop
push
es
adc
ficoms
popf
ficoml
adc
xchg
nop
mov
cmpsb
and
in
jge
lods
xchg
std
sahf
or
jno
sarb
dec
mov
adc
xchg
jbe
aad
cmp
jle
pusha
lods
add
repnz
pop
imul
mov
mov
and
out
jae
and
or
orb
xchg
int3
outsl
jbe
or
mov
cmpb
pop
sub
mov
int3
mov
mov
xor
mov
jg
in
or
jmp
adc
add
enter
fs
and
add
cmp
ret
jge
push
pop
stc
nop
xorl
shll
xor
test
mov
jmp
jno
sbb
out
idivb
insl
fistl
push
popa
lret
xor
cmp
sub
jl
mov
jle
adc
dec
repnz
insl
sbb
jmp
sub
sbb
fbstp
int3
push
and
cli
jg
and
mov
ret
out
sbb
lods
lcall
pop
cmp
xchg
sahf
shlb
loop
dec
add
adc
xor
sub
cmp
cmp
inc
push
pop
je
mov
jmp
mov
xor
add
jmp
mov
xor
add
leave
ret
subb
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
add
and
add
sub
add
add
pop
sub
add
add
js
add
mov
add
sahf
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
add
inc
sub
add
add
sub
add
add
test
add
mov
add
sahf
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
add
cmp
add
add
pop
sub
add
add
jl
add
mov
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
es
add
dec
sub
add
push
add
je
add
test
add
sahf
sub
add
mov
sub
add
out
sub
add
or
add
push
add
xor
add
dec
add
pop
add
je
add
xchg
add
lcall
add
add
fisubrl
add
out
add
cli
add
push
das
add
push
das
add
cs
add
inc
das
add
pop
das
add
outsb
das
add
jle
add
lcall
add
das
add
aam
add
in
add
cli
das
add
or
add
push
xor
add
xor
add
xor
add
add
add
jb
add
jle
add
mov
add
mov
xor
add
add
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
dec
xor
add
add
xor
add
add
xchg
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
xor
add
add
push
xor
add
add
js
add
mov
add
lcall
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
cmp
add
push
xor
add
add
add
cwtl
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
dec
xor
add
add
add
add
je
add
xorb
xchg
xor
add
add
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
push
xor
add
sub
add
ss
add
dec
xor
add
pop
xor
add
je
add
jle
add
mov
add
mov
xor
add
mov
xor
add
fidivs
add
clc
xor
add
or
add
push
add
and
add
sub
add
xor
add
cmp
add
inc
add
push
add
pop
add
fs
outsb
add
xorb
add
add
add
add
fdivs
add
hlt
add
or
add
and
add
add
add
inc
aaa
add
pop
aaa
add
jo
add
jle
add
mov
add
cwtl
aaa
add
movsb
aaa
add
mov
add
les
add
into
aaa
add
fidivl
add
repnz
add
push
cmp
add
cmp
add
cmp
add
add
dec
cmp
add
add
add
add
stos
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
add
sub
add
cmp
add
inc
cmp
add
add
cmp
add
add
add
xchg
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
add
add
add
ljmp
add
add
add
add
add
sub
add
test
add
jp
add
add
add
add
add
add
add
jo
add
je
add
js
add
je
add
mov
add
add
push
aaa
inc
inc
js
fs
data16
jo
aas
inc
outsb
gs
je
push
je
je
inc
inc
pop
inc
push
inc
dec
push
inc
inc
dec
dec
push
inc
inc
cmp
add
pop
and
add
add
add
enter
add
add
adc
add
pop
xor
add
daa
add
mov
and
add
daa
add
pushf
add
pushf
and
add
add
add
add
add
aaa
add
push
and
add
sub
add
cmp
add
add
add
cmp
add
and
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
add
and
add
sub
add
add
pop
sub
add
add
js
add
mov
add
sahf
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
add
inc
sub
add
add
sub
add
add
test
add
mov
add
sahf
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
add
cmp
add
add
pop
sub
add
add
jl
add
mov
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
es
add
dec
sub
add
push
add
je
add
test
add
sahf
sub
add
mov
sub
add
out
sub
add
or
add
push
add
xor
add
dec
add
pop
add
je
add
xchg
add
lcall
add
add
fisubrl
add
out
add
cli
add
push
das
add
push
das
add
cs
add
inc
das
add
pop
das
add
outsb
das
add
jle
add
lcall
add
das
add
aam
add
in
add
cli
das
add
or
add
push
xor
add
xor
add
xor
add
add
add
jb
add
jle
add
mov
add
mov
xor
add
add
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
dec
xor
add
add
xor
add
add
xchg
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
xor
add
add
push
xor
add
add
js
add
mov
add
lcall
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
cmp
add
push
xor
add
add
add
cwtl
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
dec
xor
add
add
add
add
je
add
xorb
xchg
xor
add
add
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
push
xor
add
sub
add
ss
add
dec
xor
add
pop
xor
add
je
add
jle
add
mov
add
mov
xor
add
mov
xor
add
fidivs
add
clc
xor
add
or
add
push
add
and
add
sub
add
xor
add
cmp
add
inc
add
push
add
pop
add
fs
outsb
add
xorb
add
add
add
add
fdivs
add
hlt
add
or
add
and
add
add
add
inc
aaa
add
pop
aaa
add
jo
add
jle
add
mov
add
cwtl
aaa
add
movsb
aaa
add
mov
add
les
add
into
aaa
add
fidivl
add
repnz
add
push
cmp
add
cmp
add
cmp
add
add
dec
cmp
add
add
add
add
stos
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
add
sub
add
cmp
add
inc
cmp
add
add
cmp
add
add
add
xchg
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
add
add
add
add
add
add
imul
popa
jae
push
add
push
add
je
arpl
insb
insb
push
outsl
jae
add
fs
imul
add
imul
jb
add
push
gs
outsb
jne
gs
jne
je
je
insl
add
pop
add
je
jns
inc
outsl
insb
outsl
jb
add
mov
imul
jae
bound
push
push
imul
add
push
imul
popa
bound
add
add
outsb
dec
arpl
add
stos
add
fs
jne
jae
jb
add
jae
popa
je
inc
arpl
insb
gs
je
jb
add
inc
jb
popa
je
push
outsl
jo
jo
outsb
jne
add
popa
jb
jo
gs
add
mov
imul
imul
add
je
gs
popa
addr16
js
jb
dec
outsb
outsw
add
inc
insb
outsl
jae
inc
gs
je
jo
add
add
outsb
dec
outsb
jo
je
gs
je
jo
add
je
insl
push
popa
jb
insl
gs
jb
dec
outsb
outsw
inc
add
push
gs
outsb
jne
je
insl
dec
outsb
outsw
push
add
adc
gs
jae
inc
inc
add
popa
insb
imul
je
add
arpl
outsl
push
push
outsb
outsl
ja
add
insb
push
imul
imul
fs
gs
outsb
je
cmp
arpl
popa
imul
outsb
add
sahf
add
push
arpl
jo
jns
mov
dec
jae
push
jo
popa
dec
jne
gs
arpl
mov
inc
jb
ja
outsb
jne
popa
jb
mov
push
popa
bound
fs
gs
dec
jne
push
add
or
inc
gs
inc
inc
js
jno
push
gs
imul
outsb
add
xchg
add
je
outsl
jns
arpl
insb
gs
je
jb
popa
bound
push
add
je
jb
jo
add
sti
add
dec
outsb
push
arpl
push
push
jae
jb
bound
arpl
outsw
jb
popa
je
outsl
outsb
push
add
add
imul
jae
addr16
add
xor
jb
outsl
dec
gs
push
add
addb
outsb
data16
popa
je
push
arpl
add
ja
arpl
add
mov
inc
jb
ja
jb
insl
gs
outsl
outsb
je
outsl
insb
add
inc
add
je
gs
inc
insb
addr16
jb
jne
dec
je
insl
add
fs
outsb
jo
je
mov
inc
gs
jb
insl
gs
jb
arpl
mov
inc
gs
imul
outsl
arpl
add
outsl
addr16
outsl
js
popa
jb
insl
inc
add
add
imul
popa
jae
inc
add
dec
add
jo
inc
arpl
insb
gs
je
jb
popa
bound
add
inc
gs
jns
je
insl
dec
outsb
jne
mov
ja
je
je
push
add
loope
inc
imul
outsl
ja
add
inc
jb
popa
je
push
imul
inc
add
add
popa
bound
imul
cmp
inc
push
jo
jb
add
or
push
imul
je
gs
add
add
push
jae
push
imul
arpl
add
aad
dec
gs
popa
addr16
outsl
js
add
add
jae
popa
addr16
outsl
js
js
add
inc
gs
outsl
jo
imul
dec
add
je
outsb
jne
loop
inc
imul
outsl
ja
js
add
fs
outsb
jne
add
add
jae
popa
addr16
outsl
js
add
add
jne
insb
push
arpl
add
outsb
imul
add
inc
gs
imul
js
dec
outsb
addr16
push
add
mov
push
imul
ja
add
add
je
insb
imul
jb
les
dec
popa
jo
imul
arpl
add
fs
je
imul
dec
imul
jne
je
insl
add
xor
inc
gs
outsb
jne
je
insl
inc
outsl
jne
je
add
add
imul
arpl
dec
fs
jb
insl
inc
imul
jns
mov
dec
outsb
je
jb
arpl
arpl
add
je
outsl
jne
insb
gs
insb
imul
add
daa
add
je
gs
outsl
popa
jb
push
jns
gs
add
je
jae
outsb
arpl
jns
je
je
add
sub
inc
push
ja
jb
jne
push
add
popf
add
insb
outsl
addr16
outsl
js
popa
jb
insl
push
add
add
popa
jb
outsl
ja
jb
add
and
inc
push
dec
outsb
jne
add
imul
outsl
ja
jo
popa
je
add
mov
imul
movl
imul
gs
js
add
pop
add
je
arpl
jo
jns
add
add
je
insb
popa
jae
dec
outsl
outsb
addr16
add
add
jo
imul
imul
push
jb
outsb
jae
popa
je
inc
arpl
insb
gs
je
jb
add
inc
push
outsb
jne
popa
imul
add
push
gs
arpl
insb
insb
dec
outsb
outsw
add
outsl
ja
gs
outsl
jb
addr16
jne
fs
imul
lahf
add
jo
je
push
popa
addr16
add
sub
jb
gs
push
add
add
popa
insl
gs
arpl
add
data16
je
arpl
mov
dec
outsb
jbe
insb
imul
add
push
gs
outsl
jb
addr16
jne
fs
imul
add
je
arpl
gs
imul
add
inc
push
fwait
add
insb
outsl
popa
fs
gs
outsl
popa
jb
dec
popa
jns
jne
add
pushf
add
dec
arpl
imul
gs
outsb
jne
je
imul
add
fs
outsb
jne
add
add
imul
outsb
outsl
ja
gs
popa
addr16
add
cmp
push
gs
jne
jae
jb
add
je
gs
popa
addr16
add
inc
outsl
jb
addr16
jne
fs
imul
add
gs
je
inc
imul
jb
insl
push
add
stc
add
je
insb
popa
jae
dec
outsl
outsb
addr16
add
inc
push
xor
cs
insb
add
mov
push
gs
outsl
jbe
inc
imul
jns
add
add
dec
gs
jbe
inc
jb
je
arpl
push
arpl
outsb
add
pop
add
gs
imul
bound
gs
add
xchg
imul
jne
jb
add
mov
jo
jb
popa
je
add
or
gs
jne
jb
outsb
je
imul
jns
add
cmp
dec
jo
outsb
inc
jbe
outsb
je
add
dec
add
insb
outsb
inc
add
add
je
push
dec
outsl
arpl
add
push
outsb
push
gs
js
gs
imul
gs
add
je
popa
insb
inc
jb
add
inc
outsl
insl
jo
je
jb
popa
insl
gs
add
int
inc
jb
popa
je
inc
jbe
outsb
je
add
movsb
add
outsb
arpl
dec
outsl
add
outsl
add
outsb
insl
popa
jo
imul
insb
add
push
insb
gs
sti
add
je
popa
jae
inc
jb
outsl
jb
add
add
je
jb
arpl
fs
jae
add
addb
jb
gs
imul
rolb
inc
gs
popa
je
inc
outsl
jb
popa
je
add
outsl
add
je
imul
popa
je
add
jge
push
gs
data16
gs
imul
push
add
xchg
add
outsl
bound
push
gs
insb
insb
outsl
arpl
fildl
inc
jb
popa
je
dec
popa
imul
in
push
gs
outsl
insl
insl
push
imul
add
gs
jns
je
insl
push
imul
gs
jns
je
insl
inc
imul
jns
add
add
inc
popa
fs
gs
fs
je
add
mov
jo
insb
insb
outsl
arpl
and
inc
outsb
jne
push
gs
jne
arpl
jns
gs
add
push
add
fs
imul
js
add
mov
inc
outsl
insl
jo
jb
push
je
imul
add
gs
jb
outsl
jb
outsl
fs
out
inc
jb
popa
je
push
gs
outsl
je
push
push
add
popl
inc
insb
outsl
bound
inc
insb
popa
addr16
mov
popa
imul
insb
gs
bound
arpl
add
je
jne
bound
inc
outsl
jb
popa
je
add
xchg
add
imul
outsl
dec
jne
je
inc
jns
add
inc
gs
jns
je
insl
inc
gs
jne
je
dec
dec
popa
outsb
addr16
add
test
inc
gs
imul
imul
jns
add
jl
inc
fs
je
insl
inc
add
stos
add
gs
jb
outsl
insl
insl
inc
jb
outsl
jb
add
add
jae
jb
insl
jo
inc
add
add
gs
push
inc
outsl
outsb
je
js
add
repnz
gs
je
push
popa
imul
insl
gs
add
movb
je
arpl
imul
gs
je
inc
imul
imul
jae
jne
arpl
add
add
fs
imul
add
mov
inc
gs
inc
push
add
pop
add
imul
add
dec
inc
push
dec
inc
dec
xor
cs
insb
add
add
inc
push
inc
outsl
outsb
je
add
add
imul
add
add
je
jo
outsb
inc
imul
add
or
inc
imul
push
add
insl
fs
xor
cs
insb
add
cmc
add
outsl
outsb
je
outsl
insb
data16
add
gs
popa
jo
pop
je
jo
add
mov
pop
pop
insw
outsl
fs
insl
add
gs
add
pop
pop
arpl
insl
outsl
fs
mov
insl
bound
outsl
ja
jae
add
add
insl
jae
pop
gs
je
add
imul
add
outsb
imul
add
arpl
outsl
imul
xchg
add
popa
insb
outsb
jne
add
add
imul
ja
jae
popa
je
add
add
jb
jo
add
out
jae
jb
outsl
insb
insb
add
add
arpl
outsl
insl
bound
add
arpl
jb
jb
add
ljmp
jo
add
add
jb
push
add
ja
arpl
data16
insl
bound
gs
add
int3
add
outsl
jb
add
add
outsl
ja
outsl
ja
jb
add
insb
outsl
arpl
add
add
jns
je
insl
add
sub
ja
jae
bound
add
add
jae
jo
imul
pop
pop
arpl
inc
imul
jbe
jo
imul
add
jne
arpl
mov
insb
outsl
arpl
je
insl
add
data16
jne
push
ja
jae
push
add
js
je
pop
add
insb
insb
outsl
arpl
add
add
je
bound
add
jb
outsb
je
or
gs
add
cmp
arpl
outsl
jne
add
add
gs
je
add
bound
popa
jb
push
pop
jae
je
jae
jb
popa
je
gs
add
jb
pop
pop
addr16
popa
imul
enter
je
push
push
push
inc
push
push
cs
insb
add
push
add
imul
inc
outsl
outsb
je
outsl
insb
jae
js
add
dec
insl
popa
addr16
imul
fs
insl
popa
addr16
add
adc
inc
jb
popa
je
push
jb
jo
jb
jns
push
popa
addr16
add
dec
add
popa
addr16
imul
insb
popa
arpl
arpl
add
add
popa
addr16
imul
dec
arpl
push
imul
insl
popa
addr16
imul
dec
arpl
add
dec
inc
push
dec
xor
cs
insb
add
les
inc
outsb
jne
inc
outsl
outsb
je
popa
insl
imul
add
add
je
dec
inc
inc
outsl
insb
outsl
jb
popa
bound
add
add
je
gs
dec
jne
push
add
popa
je
dec
inc
push
add
bound
gs
outsb
add
mov
inc
gs
gs
inc
inc
add
inc
add
je
gs
arpl
popa
jo
add
add
je
imul
jae
movl
inc
inc
add
jne
inc
imul
addl
gs
gs
inc
js
outsb
je
outsl
imul
stos
add
gs
je
push
outsl
insb
jns
outsl
outsb
push
outsb
add
xchg
add
gs
je
inc
dec
inc
imul
add
gs
dec
bound
arpl
outsb
add
je
imul
add
gs
je
inc
jb
jae
dec
outsb
imul
add
je
gs
dec
gs
imul
inc
jb
popa
je
inc
imul
add
je
imul
outsb
jae
outsl
outsb
inc
js
add
popa
je
inc
outsl
outsb
je
outsb
imul
iret
add
insb
arpl
insb
gs
gs
add
jne
fs
arpl
add
gs
je
push
outsl
insb
imul
add
add
je
jne
jb
outsb
je
bound
arpl
stos
add
gs
je
push
arpl
outsb
add
add
je
bound
je
jb
arpl
add
add
insb
arpl
imul
add
gs
je
inc
outsl
outsb
je
add
add
jne
inc
outsl
outsb
je
push
add
dec
add
je
outsl
outsb
je
popa
je
add
gs
outsl
inc
js
add
gs
popa
insb
gs
gs
outsb
je
imul
gs
dec
jne
push
add
rolb
push
gs
imul
jae
movsb
add
je
insb
je
add
jae
je
imul
dec
jb
inc
js
xlat
add
insb
insb
push
outsb
add
popa
je
inc
insb
insb
imul
outsb
dec
outsb
imul
add
je
gs
inc
js
outsb
je
outsl
imul
push
gs
jp
push
popa
insb
gs
gs
add
je
jb
jae
dec
jb
inc
js
mov
jae
je
outsb
add
add
je
jne
inc
add
mov
insb
imul
je
add
inc
inc
dec
xor
cs
insb
add
push
popa
je
inc
imul
outsb
jae
outsl
outsb
inc
add
push
dec
dec
push
inc
push
dec
cs
insb
add
popa
jns
pop
je
push
imul
lcall
add
or
dec
ja
cmp
dec
jp
cmp
dec
ss
add
dec
ret
dec
push
push
pop
push
cmp
dec
ret
dec
cmp
dec
jp
cmp
dec
ss
imul
dec
push
bound
arpl
dec
jns
ret
dec
cmp
dec
dec
dec
xor
ret
dec
push
jb
jae
orl
js
jns
aas
dec
jbe
ret
dec
ds
dec
dec
cmp
dec
xor
dec
push
sbbb
setae
nop
js
jns
aas
dec
jbe
ret
dec
ds
dec
dec
cmp
dec
xor
dec
push
xchg
pop
xchg
bt
mov
aas
dec
push
dec
cmp
dec
push
dec
xor
ret
dec
push
mov
or
aas
dec
push
dec
cmp
dec
pop
dec
cmp
dec
xor
mov
ret
or
js
jns
aas
dec
push
dec
cmp
dec
dec
dec
xor
ret
dec
push
ret
psrlq
sarb
jns
aas
dec
push
dec
cmp
dec
dec
dec
xor
ret
dec
push
rcrb
rorl
jecxz
loopne
lock
aas
dec
insl
dec
ret
dec
cmp
dec
ret
dec
push
loop
jecxz
repz
js
jns
js
jns
ds
jg
ret
dec
cmp
jb
ds
dec
dec
cmp
dec
xor
add
adc
adc
jns
aas
dec
add
data16
pop
cmp
add
inc
add
ds
add
cmp
add
inc
add
cmp
add
mov
inc
add
cmp
inc
add
cmp
inc
add
cmp
mov
inc
add
ds
add
test
push
inc
add
or
inc
add
fisttpll
ss
add
inc
inc
cli
jne
in
incb
mov
cmp
add
xchg
pushf
clc
xor
pushf
clc
cmp
pushf
clc
cmp
xchg
pushf
clc
aas
xchg
pushf
clc
cmp
pushf
clc
cmp
pushf
clc
in
stc
add
cmp
add
pop
dec
imul
pushf
clc
sahf
jmp
add
push
cmp
pushf
or
jecxz
inc
add
adc
add
add
inc
add
imul
dec
add
add
add
inc
add
imul
add
dec
add
add
imul
jo
outsl
add
insl
add
add
insb
add
data16
imul
add
imul
outsl
add
add
push
add
add
add
add
inc
dec
dec
imul
inc
dec
dec
inc
dec
jne
dec
dec
push
imul
imul
inc
imul
insb
imul
dec
push
inc
outsl
imul
dec
dec
inc
dec
dec
sub
inc
inc
add
add
fs
addr16
add
dec
pop
dec
dec
dec
push
dec
pop
dec
push
dec
or
dec
add
pop
dec
pop
dec
pop
dec
or
dec
dec
dec
dec
dec
pop
dec
dec
dec
or
dec
add
dec
dec
pop
dec
push
dec
dec
dec
arpl
dec
pop
dec
ret
add
add
add
add
outsb
lea
outsb
lods
outsb
mov
outsb
in
outsb
std
outsb
or
outsb
cmp
outsb
jb
jae
jo
jno
jbe
ja
je
jne
mov
outsb
mov
outsb
mov
pop
jge
jge
jge
jns
mov
bound
add
mov
aaa
dec
jle
jno
mov
imul
inc
xlat
rcll
rcr
leave
xchg
fs
push
rcrl
shll
mov
inc
add
shll
and
inc
push
outsl
push
dec
cmp
add
in
adc
inc
inc
jae
inc
jae
popa
push
pop
pop
outsb
jbe
jns
push
imul
jns
inc
jo
data16
jp
insb
je
jns
popa
push
push
push
popa
push
push
push
dec
je
push
bound
push
arpl
inc
jne
push
outsl
push
inc
inc
push
imul
push
jb
add
js
popa
inc
push
insb
pop
ja
je
add
insb
jb
inc
push
push
inc
insb
add
jbe
push
push
dec
imul
add
in
jnp
jnp
cmc
lcall
and
push
adc
xlat
add
add
add
xor
dec
das
test
sbb
les
aad
mov
adc
icebp
lock
adc
and
push
jmp
sbb
lods
xchg
adc
fsts
stos
test
xlat
xchg
sarb
popf
sub
and
aad
lock
ret
enter
sbb
add
test
lods
outsl
pop
mov
sub
sbb
fdivl
push
jno
push
add
adc
xlat
push
cld
pop
mull
ret
cld
mov
std
jge
jle
fisttpll
push
lcall
sub
fidivrl
inc
push
jge
repz
hlt
cmp
outsb
shl
out
add
sub
and
xchg
stos
nop
pop
lret
leave
add
cmp
xchg
test
mov
enter
push
xlat
sub
xchg
jmp
jb
and
mov
nop
adc
lods
outsl
outsl
or
cltd
pop
ficoml
in
jle
lcall
mov
add
add
xchg
xor
adc
in
mov
in
mov
aas
test
in
shll
test
jge
pop
jbe
mov
xor
lock
mov
mov
xorb
xor
mov
es
addr16
jno
and
cmp
cltd
fs
decl
lahf
arpl
dec
push
cmpb
pop
xchg
and
sub
imul
sahf
or
sti
sub
movsl
push
movsl
hlt
std
inc
xchg
pop
mov
cmp
push
cmp
arpl
jmp
jle
jle
xchg
adc
sti
push
stos
insl
pop
pop
mov
inc
mov
mov
call
outsl
mov
add
fsubp
icebp
es
mov
mov
mov
sarl
push
das
sbb
out
outsb
call
inc
dec
fldenv
out
inc
xor
adc
hlt
add
add
mov
push
push
notb
add
add
out
pusha
ljmp
xor
mov
addl
mov
dec
lcall
xorl
inc
inc
lds
xlat
pop
cwtl
xchg
adcl
cwtl
cmp
sbb
sub
pop
lret
stc
out
test
mov
test
cmp
mov
fnstenv
lock
sbb
iretw
lcall
or
clc
jl
incb
push
inc
test
aam
xor
adc
jg
and
je
adc
xchg
movsl
push
mov
addw
orb
std
fwait
push
sub
out
cmp
js
dec
fisttpll
shll
int
mov
enter
mov
cmp
les
and
xor
ljmp
shl
negl
cld
rorl
lcall
js
mov
add
mov
roll
testb
fiaddl
add
add
add
iret
jae
int
pop
repz
lahf
rorb
jbe
xlat
inc
subl
push
jl
xchg
ja
add
pop
xchg
enter
pop
inc
push
std
repz
sbb
hlt
sub
xor
add
aad
mov
xor
push
fucompp
xor
test
fldenv
mov
rcr
call
out
icebp
or
out
jg
xchg
xlat
fs
jp
jmp
imul
mov
push
in
out
andb
cwtl
add
pop
xor
add
outsb
and
outsl
mov
pusha
pop
cwtl
movsl
pop
stos
jns
jl
mov
ljmp
push
push
filds
jb
cmpsb
enter
add
cmp
rcr
xchg
sub
lcall
or
pop
bound
adc
jp
daa
inc
adc
outsb
lahf
sub
push
clc
pop
outsb
imul
add
pop
jae
or
pop
dec
or
iret
xchg
fildl
add
add
add
or
adc
jne
jbe
les
cmp
sbb
hlt
mov
cltd
mov
jl
idiv
loopne
aam
push
add
ja
inc
mov
xor
and
sbb
mov
test
sbb
shrb
in
loope
cld
sub
jp
jae
xchg
fstps
mov
lods
call
or
mov
ds
fnstsw
add
or
sahf
pop
stos
xchg
lahf
xchg
adc
int3
fcomp
pusha
mov
mov
push
pushf
push
mov
pop
push
cmp
je
mov
outsl
jne
out
rcl
js
push
stos
mov
cltd
adc
dec
inc
std
xor
subl
mov
fdivs
dec
lds
mov
imul
call
fmuls
xor
cli
clc
push
jbe
jg
cmc
insl
cmc
out
lcall
enter
jno
sbb
add
add
add
cmc
or
jp
sub
mov
sahf
or
dec
addr16
hlt
cmc
cwtl
enter
mov
fwait
push
call
xor
jl
xor
pop
addl
mov
fists
hlt
xor
repz
insb
xchg
int3
cmp
pop
sbb
mov
out
movsb
pop
aas
outsl
mov
mov
std
inc
mov
inc
xor
ss
int3
es
add
or
in
pop
push
mov
adc
adc
push
jge
mov
mov
out
jne
dec
xchg
jp
nop
sbb
ficomps
mov
fldcw
jmp
rcrb
push
xchg
pop
jns
in
jbe
push
cmc
scas
mov
imul
push
das
mov
pop
xor
inc
mov
sub
sbb
cmp
stos
sbbl
mov
imul
add
ss
sbb
mov
add
add
add
outsl
jle
aas
mov
cmp
fldl
add
add
add
jmp
out
imul
cwtl
adc
jns
xor
pop
rcll
xchg
jnp
pop
lock
mov
mov
cli
insl
xor
mov
negl
test
mov
outsl
xor
cli
sub
and
dec
out
ja
mov
js,pn
inc
lret
jmp
push
xchg
mov
xor
xchg
movsl
dec
or
iret
arpl
test
mov
aas
xchg
movswl
mov
lock
cmp
enter
push
xchg
cmp
dec
dec
xchg
sbb
sbb
outsl
inc
fiadds
cmpsb
or
pushf
and
add
sub
mov
aaa
push
pop
mov
fcoml
cmp
jbe
std
mov
add
add
adc
decl
inc
stos
inc
sbb
sub
mov
pop
fwait
pop
push
adc
outsl
xlat
push
mov
inc
and
lret
add
or
and
scas
sti
jle
pop
push
pop
push
xor
fiadds
add
add
add
out
jg
jp
movsb
fistpll
cld
sbb
or
nop
pop
mov
aas
aas
mov
repz
fnsave
sub
push
or
fs
cld
data16
jb
movsl
mov
cld
daa
add
mov
dec
sarl
cld
mov
lcall
ret
fwait
mov
scas
inc
sbb
xchg
ljmp
and
xchg
jo
outsb
mov
adc
mov
mov
pop
out
pop
loop
cli
sub
adc
int3
jb
fisttpl
sarb
gs
add
les
mov
sub
adc
inc
jp
inc
in
push
and
loopne
mov
lods
pop
hlt
sub
pop
lret
add
stos
mov
push
pop
pushf
je
cmp
sub
aas
outsb
cmpsb
push
fcompl
mov
cmp
add
add
negl
arpl
loopne
filds
add
add
add
add
repnz
adc
jmp
pop
fcomps
mov
ret
inc
das
mov
notl
or
or
dec
inc
adc
or
sub
scas
mov
outsl
sub
push
and
jg
jecxz
pusha
mov
icebp
push
cmp
xchg
inc
loop
mov
aaa
sub
in
rclb
js
shll
pop
add
add
sub
sbb
sbb
mov
arpl
loope
cmpsl
sbb
xor
out
jmp
xlat
xchg
pusha
mov
push
inc
test
fists
es
pop
push
outsb
sahf
insb
or
fildll
test
xchg
hlt
outsb
ret
insb
and
out
xor
and
dec
js
mov
mov
mov
xor
and
dec
out
leave
push
pop
mov
push
test
add
xor
push
jl
jle
insb
out
cs
int
lret
add
add
add
mov
dec
out
xor
stc
inc
shlb
jo
pushf
decb
fs
jo
mov
mov
mov
adc
sbb
in
mov
or
pop
movl
cli
movsb
inc
or
adc
stc
ret
pop
aam
cmpsl
cmp
scas
popf
das
in
ljmp
xor
sbb
fsts
mov
fwait
lds
in
adc
push
stc
ret
jbe
fsubl
sbb
bound
inc
inc
xlat
cmp
fisttpl
jle
pushf
push
ss
mov
mov
add
dec
rcrl
cld
stos
sbb
sahf
lea
data16
mov
push
lock
out
data16
pop
push
insl
pushf
orl
popa
add
sub
mov
jnp
mov
out
mov
inc
sbb
cmpsl
in
cmp
aaa
fwait
and
xchg
mov
add
add
fwait
mov
in
xor
adc
loopew
add
add
add
mov
inc
jecxz
outsb
cmp
adc
pop
sub
outsl
cmp
inc
dec
lods
aaa
dec
xor
test
jmp
sarl
mov
fidivrs
jmp
aam
adc
xchg
stc
mov
push
cmp
adc
imul
out
adc
xor
pop
xchg
and
fmul
or
adc
inc
inc
mov
repz
jo
mov
std
in
and
pop
jnp
aaa
fsts
imul
jbe
add
iret
add
or
xor
or
cmp
mov
movsl
mov
insl
addr16
cmpsl
int
loop
and
jne
in
stc
ja
xor
sub
fists
insl
je
push
rcrb
shlb
jp
jle
sub
jp
loope
ja,pt
rorl
call
jne
into
cmc
sbb
stos
cmp
add
data16
jne
mov
lcall
add
add
add
lahf
xor
or
xchg
xchg
sbb
int
loope
jp
sahf
add
pop
xchg
push
mov
rol
lds
jp
cmp
out
cld
mov
sbb
xchg
subb
cmc
aas
pop
add
sbb
sbbl
add
pop
cmp
mov
pushf
or
sub
adc
cld
cwtl
stos
mov
and
mov
addr16
icebp
sarb
xchg
mov
xchg
mov
movsb
and
xchg
aad
enter
jge
and
push
add
adc
addr16
shrb
mov
lds
push
dec
jge
pop
pop
add
into
scas
adc
fcom
movsl
je
pusha
jb
dec
dec
sub
jmp
jnp
adc
dec
pop
test
jnp
xchg
push
add
sarb
int
aam
out
stc
xor
addb
add
jnp
add
jnp
sti
xchg
lahf
mov
xor
jcxz
add
add
add
pop
lea
dec
mov
insb
sub
mov
inc
cmpb
pusha
dec
push
xchg
ficomps
xor
test
sbb
fidivs
cmc
ret
add
daa
ret
shlb
imul
idiv
vmovdqu
mov
xchg
adc
dec
cmp
adc
repnz
out
adc
push
pop
popa
lods
shlb
iret
xchg
clc
dec
lock
jge
pop
test
xor
stos
mov
xor
outsl
sub
dec
mov
xchg
aaa
and
push
pop
ficompl
push
jb
xor
hlt
gs
mov
shlb
inc
dec
int3
mov
outsb
ret
sub
iret
les
lods
xor
lcall
sbb
daa
jmp
bound
mov
sahf
dec
into
push
fistps
and
sub
pop
sarl
mov
adc
add
add
add
mov
aad
cmp
ret
push
cmpsb
das
fwait
es
add
mov
inc
dec
les
push
inc
loop
mov
jmp
xor
enter
sbb
enter
jno
sahf
ljmp
mov
lock
pop
leave
jnp
insl
or
out
mov
iret
jae
mull
mov
mov
xchg
or
in
rolb
dec
aas
sub
xchg
adc
lcall
out
movl
sbb
cs
or
out
pop
out
and
jge
sbb
popa
sub
pop
sahf
adc
xlat
into
push
nop
jg
xchg
adc
xor
inc
cmpsl
les
xchg
mulb
push
jmp
mov
pop
js
repz
and
je
add
or
es
out
pop
cmp
or
ret
inc
ljmp
rorb
popl
fidivrl
fdivrl
insl
lock
std
repz
add
add
add
add
add
inc
testl
mov
xchg
gs
mov
addr16
loope
int
xorl
dec
cmp
xor
nop
xor
dec
inc
push
cmp
out
sbb
pop
addl
cmp
call
mov
sub
lcall
scas
jne
fistpl
jbe
imul
cmpsl
pop
dec
hlt
mov
nop
lods
ret
ret
mov
insl
xchg
xor
fsubs
or
mov
mov
cltd
xchg
pop
cmpsl
hlt
rclb
test
and
das
jo
mov
or
inc
push
stos
and
jg
fiaddl
dec
mov
sti
mov
or
jg
xorb
popa
xlat
mov
mov
cmp
ljmp
arpl
cltd
gs
xor
add
add
lock
cmp
arpl
je
div
push
addr16
add
add
add
fbstp
sub
je
loopne
cmp
hlt
lret
roll
cmpsb
jb
jae
add
xlat
sbb
pushl
loope
fadds
loop
inc
sbb
out
and
xchg
sbb
das
inc
and
cs
and
and
cmp
decl
jnp
in
dec
cmpsl
addr16
mov
sbb
sahf
std
mov
sub
fnstsw
sbb
push
xor
das
cmp
out
push
dec
out
xor
cmpsb
les
sbb
mov
fmull
jecxz
sub
shrl
mov
es
es
mov
les
xchg
pusha
lcall
adc
xchg
push
addr16
aam
adc
sbb
test
shr
or
or
jmp
arpl
js
jle
or
pop
insl
lcall
mov
inc
sub
ds
or
out
add
add
add
adc
lret
cli
xor
das
push
push
loop
pop
ja
cmc
in
push
js
sahf
pusha
sbb
sti
cmpsl
cmp
and
jnp
dec
jmp
add
mov
cmpsl
push
push
cmp
pop
out
or
push
xor
cwtl
add
mov
xor
lea
notl
in
pushf
repnz
and
xchg
push
push
pop
arpl
xor
add
mov
push
rcl
lahf
lahf
sbb
push
in
sbb
out
notl
add
lods
mov
fisubrl
sbb
cmpsl
mov
inc
sub
jne
hlt
push
loope
jp
mov
inc
cwtl
push
daa
es
push
enter
fnstcw
repnz
in
dec
pop
insl
xor
sub
sbbl
sbb
jno
add
jbe
dec
data16
lret
xchg
in
mov
incl
sarl
inc
packuswb
add
add
add
ficoml
daa
flds
popa
mov
dec
loop
out
inc
jno
jne
daa
pop
push
fdivl
fucompp
fadds
addr16
call
popa
insb
pop
sbb
fdivr
int3
cmp
xchg
in
xchg
shlb
mov
cmpsl
fs
ret
cmp
or
mov
test
in
push
mov
jae
jae
add
rcr
sub
in
jmp
test
scas
mov
loopne
or
dec
les
xchg
mov
mov
mov
lods
sbb
aam
cwtl
mov
pop
mov
cmp
mov
mov
ret
orl
arpl
cmp
ds
aam
xor
aaa
push
popa
pop
push
ss
daa
es
sar
xchg
stos
xchg
adc
pop
sbb
mov
dec
cwtl
jae
mov
add
faddl
les
cwtl
add
inc
mov
in
negl
sub
movsb
jne
testl
add
add
hlt
das
xchg
xchg
sbb
jl
fiaddl
mov
xchg
lret
jae
test
sbb
cmp
xlat
sbb
test
pushf
mov
sub
dec
cmp
jae
pop
mov
leave
movsb
je
fiaddl
popa
aas
outsl
aaa
fidivrl
xor
loop
xchg
dec
jo
mov
push
xchg
out
out
pushf
popa
dec
sbb
mov
pop
sti
int
outsb
faddl
jb
or
lahf
mov
cmc
ficoml
outsb
add
add
incb
out
es
jno
sbb
sahf
out
dec
dec
sub
mov
fnstcw
int
ret
mov
jne
push
ss
stos
das
mov
fwait
cld
jg
out
bound
cmp
xor
push
int3
fistpl
mov
inc
jmp
lret
sub
adc
movsl
mov
ds
call
push
pop
jecxz
insb
pop
adc
add
add
mov
stc
dec
push
fdiv
cwtl
loope
ljmp
test
insl
dec
mov
addb
jl
es
popa
rcrb
or
sub
mov
cmc
das
jns
scas
xchg
xchg
cmp
mov
jne
iret
push
cmp
push
fcom
pushf
jo
andb
pusha
ret
xchg
mov
cltd
add
test
loope
mov
sbb
in
push
icebp
in
mov
push
xchg
xor
sbb
inc
add
sbb
xchg
push
cltd
cmp
pop
notl
call
mov
or
jnp
and
push
cmpsl
pop
push
dec
dec
push
mov
mov
std
or
or
outsb
hlt
dec
lret
sbb
int3
test
in
cltd
cmp
sbb
hlt
sbb
jb
cmp
xor
and
fs
jmp
shr
nop
xorb
push
test
jb
mov
push
ja
std
inc
data16
cmp
jg
push
mov
fs
popa
leave
out
push
dec
popf
cmp
shlb
add
add
adc
push
push
push
mov
jl
jmp
add
add
add
adcb
xchg
inc
and
in
pop
popa
sahf
and
or
inc
movsl
scas
mov
lods
clc
add
das
subb
mov
movsl
and
aam
arpl
xchg
dec
mov
inc
and
call
and
dec
and
in
push
sub
mull
jns
xor
jl
insb
aas
mov
data16
out
inc
add
pushf
lret
jnp
pop
mov
mov
mov
sarb
mov
push
scas
jns
mov
cli
and
add
sub
sbbb
lods
and
mov
inc
adc
jecxz
pop
mov
jnp
movsl
and
inc
and
sti
mov
pop
xchg
inc
mov
or
and
ficoml
pop
aas
pusha
sub
or
dec
loope
popa
sbb
inc
and
into
xchg
sbb
shr
aaa
sbb
out
repnz
add
pop
lcall
les
pop
ror
addr16
add
add
add
adc
sub
js
xor
push
xor
xchg
dec
jg
lods
jl
movsb
lret
mulb
xor
cmovo
mov
jo
shlb
scas
add
arpl
movups
dec
ss
popa
and
imul
aaa
test
mov
leave
cmp
sub
jl
in
out
pusha
gs
xchg
stos
jae
mov
icebp
xor
xor
inc
andb
pop
cmp
mov
dec
and
and
mov
mov
leave
mov
loop
and
adc
push
jmp
rclb
aas
cmp
pusha
in
xchg
sub
mov
fisubrl
jbe
adcl
dec
mov
pop
fcompl
xchg
ret
mov
sub
ja
sub
mov
test
push
xor
sbb
jge
and
imul
sbb
sbb
test
cmp
pop
add
add
add
mov
push
decl
cmp
pop
addr16
add
add
add
popa
pop
sub
rcll
test
add
sbb
adc
dec
or
stos
inc
mov
cwtl
mov
lods
into
jb
popf
mov
mov
push
jb
test
mov
xchg
dec
lods
xor
adc
test
xor
inc
popf
push
shlb
fcmovnu
nop
sub
adc
stos
lea
test
and
imul
movsl
sub
call
and
cli
mov
cltd
and
pop
jge
add
inc
mov
lahf
lahf
out
jae
push
fldt
nop
adc
aad
mov
pop
icebp
es
imul
cmp
lods
int3
into
fsubr
sbb
in
xchg
xor
pop
mov
sub
xchg
push
or
inc
inc
cwtl
popf
mov
fstpt
clc
add
out
jbe
adc
pop
mov
icebp
in
repnz
or
int
and
inc
and
cmp
sti
fsubp
inc
push
sub
in
out
add
add
add
add
push
xor
adc
mov
push
adc
and
push
push
push
sub
int
js
call
fstpl
pop
mov
mov
pop
jne
mov
fidivrs
fisubs
fcmovne
add
andl
and
enter
into
fistps
call
xchg
icebp
push
mov
ss
cld
addb
pop
mov
scas
xchg
cli
cmp
shlb
daa
and
cltd
pop
lock
popf
or
sqrtps
xor
push
lcall
scas
push
outsl
mov
mov
add
frstor
outsl
pop
stos
or
cld
or
outsl
inc
cwtl
scas
cmp
dec
das
jl
adc
fwait
mov
aas
iret
dec
and
jb
push
shrl
lods
add
es
add
push
sti
cmp
jp
movsb
sbb
mov
add
outsb
xor
mov
lcall
out
add
add
add
inc
mov
test
dec
test
lcall
sub
push
mov
xchg
loop
insb
frstor
arpl
scas
into
jb
lret
popf
jge
mov
pop
insl
sbb
sbb
inc
cmpsl
or
scas
cltd
cmpsb
xor
push
adc
dec
std
cmp
or
sti
test
mov
outsb
scas
scas
lahf
and
insb
push
ljmp
mov
lcall
lahf
jae
sub
std
shrb
xchg
rcll
test
inc
stc
in
bound
jae
js
dec
or
vpxor
rcll
cmp
orl
fisttpl
pop
inc
jecxz,pt
fsubs
dec
mov
mov
lds
je
mov
add
jl
stos
test
mov
push
inc
or
cmpsb
push
sti
pop
stos
sbb
adc
add
add
inc
ror
lock
jnp
xor
xchg
xor
addr16
lock
add
add
or
dec
add
add
pop
in
xchg
xor
inc
adc
pop
xor
into
xchg
out
mov
pop
js
push
sbb
es
sbb
icebp
sub
push
pusha
jno
sarl
add
addr16
and
push
pop
rclb
imul
mov
stos
clc
sub
mov
mov
adc
and
pop
outsb
das
rcrb
jl
ljmp
mov
push
xchg
in
ficomps
cmp
sub
imul
in
out
gs
or
lock
cmp
inc
repz
push
js
mov
xchg
out
fdivl
dec
mov
jnp
test
inc
je
aam
in
fcomps
repz
add
pop
push
movsl
add
mov
xor
cmp
imul
test
nop
cmp
cmp
cmpsb
push
ret
iret
and
repz
fisubs
mov
inc
addr16
add
add
add
inc
ret
mov
mov
mov
cmc
andl
push
and
inc
in
cld
int
sbb
inc
repz
daa
loop
hlt
mov
movsb
les
ljmp
sbb
add
shufps
sbbb
std
sub
jae
pushf
orb
push
fistpl
ficompl
or
pop
pop
mov
add
lcall
stos
fdivl
in
fsubl
cmpsb
mov
cwtl
and
mov
mov
in
push
cmp
dec
jns
icebp
popf
daa
push
stos
mov
push
and
sub
cmp
cwtl
mov
adc
stos
sub
pop
xchg
or
sti
pop
cmc
pop
add
sub
pop
imul
jae
into
std
ds
inc
and
push
xchg
cmp
jnp
imul
and
mov
adc
jnp
lods
fstps
xchg
dec
adc
or
popf
orb
rolb
add
add
out
sbb
adc
lods
repnz
add
add
shlb
addr16
cmpsl
les
sbb
dec
in
leave
cltd
dec
clc
jns
xchg
cmovl
xchg
pop
repz
sub
xor
iret
xchg
sub
jge
pop
and
scas
mov
xor
fsubrs
and
pusha
dec
arpl
xchg
xor
jp
mov
xor
fwait
clc
sar
mov
out
std
js
adc
mov
add
fildll
lods
leave
ja
sbb
jl
mov
mov
push
jle
lahf
dec
lods
invd
jnp
lods
xchg
fwait
sbbl
cmpsl
pop
push
enter
dec
ja
into
and
pushf
fdivl
lods
cmc
repnz
mov
push
pop
jae
in
cmp
or
xor
xchg
cltd
add
ljmp
ja
pushf
fisubrl
mov
inc
notl
imul
shrl
cmc
scas
sub
mov
repz
add
add
out
mov
ss
popl
jae
cmp
fsubrs
mov
das
push
aaa
push
data16
mov
xor
push
sub
dec
add
out
mov
es
outsl
es
lds
xchg
andl
out
fists
inc
adc
loope
pop
outsl
bound
inc
jmp
loop
adc
push
mov
mov
mov
fucom
add
popf
xchg
add
out
subl
pop
les
pop
into
pop
pop
rcll
mov
adc
cmp
lods
fst
movsb
outsl
out
fstpt
in
sbbl
mov
mov
mov
push
mov
mov
std
je
push
dec
xor
or
xchg
jb
ud1
leave
push
jecxz
lds
lret
loopne
xchg
jmp
call
jle
sbb
jge
stc
test
sbb
pop
mov
dec
lret
pusha
rorb
cmpsb
mov
repz
add
add
iret
mov
adc
test
xchg
into
adc
into
xchg
cli
mov
push
jle
lret
or
lret
pop
mov
push
jmp
rcrb
inc
inc
dec
fistpll
xchg
int
ljmp
cmp
push
clc
dec
in
ss
push
test
cmc
push
pop
jne
test
mov
fcmovnu
popa
das
and
shll
stc
hlt
dec
fsts
push
jmp
pop
call
fdivrs
das
push
xor
mov
push
dec
sbb
test
jb
stos
xchg
adc
sar
movsb
setp
mov
mov
sbb
ret
dec
mov
dec
cmp
mov
jle
jnp
sbb
xchg
ss
rol
adc
adc
inc
cld
int3
cmp
pop
mov
xlat
andl
ds
mov
push
dec
ret
cmp
push
push
jmp
dec
sub
pop
jecxz
lcall
add
add
gs
testl
or
add
add
add
cs
shrl
xchg
fisubl
and
push
insl
pop
xor
xchg
ss
lock
or
out
mov
repnz
cmp
ret
push
jecxz
mov
ficoms
push
pop
sub
jp
mov
stc
cmc
mov
aaa
mov
add
aam
ret
lods
scas
jmp
cltd
xor
jg
pop
stos
pushf
push
xor
xor
inc
enter
and
and
sysenter
xchg
iret
cmp
xchg
push
jns
lret
addr16
adc
pop
cmp
sti
das
push
aam
push
xor
lahf
jno
dec
cmp
and
pop
mov
pop
cli
ja
mov
daa
hlt
and
mov
shll
out
add
lcall
loopne
and
lds
dec
add
mov
lds
mov
and
daa
lahf
mov
pop
das
into
nop
xor
add
add
add
out
adc
sub
mov
sbb
bound
and
ja
stc
cs
jge
jp
pusha
pop
lahf
clc
inc
cld
adc
test
jecxz
sub
lahf
xorb
loopne
mov
out
xor
push
cwtl
inc
shrl
jne
xor
mov
loopne
popa
imul
je
lahf
mov
mov
jecxz
mov
mov
popf
mov
loopne
inc
cmp
iret
mov
and
lods
loopne
add
xchg
iret
xlat
nop
push
pushf
fxch
add
repz
pop
push
mov
push
lock
stos
sub
ja
adc
cmp
mov
ds
jmp
clc
xchg
roll
outsl
test
fs
pop
mov
jge
decb
out
aad
stc
jae
cwtl
notl
or
lock
add
mov
fucomi
xor
inc
inc
testl
add
bound
out
sub
or
adc
jae
arpl
push
out
loop
movsw
js
xor
out
addr16
add
jecxz
or
out
rcll
push
popf
add
cltd
jg
adc
sub
cmpl
imul
xor
mov
sub
add
xor
sbb
xchg
jae
pushf
inc
fldcw
mov
fistpl
mov
sbb
cltd
icebp
mov
ret
sub
cmpsl
adc
movsb
jns
or
mov
imul
fwait
test
dec
int
and
xor
mov
daa
sti
mov
test
fnstsw
in
rclb
and
xor
inc
fiadds
ror
sbb
das
in
xorb
jbe
add
xchg
adc
mov
mov
adc
addr16
js
sti
ret
adc
jo
jbe
push
inc
pop
jns
aas
loopne
sub
lcall
add
add
sahf
scas
pop
icebp
int3
sub
add
push
jl
inc
ljmp
jae
stos
sub
mov
dec
test
push
idivb
repnz
rclb
rorl
mov
ja
fisubl
add
in
enter
ds
imul
jne
mov
or
in
ja
leave
outsb
popa
sbb
cmpsl
xor
arpl
pop
scas
es
loope
dec
or
xchg
xchg
arpl
mov
pop
cmpl
aad
jne
divl
pop
out
out
add
sub
lcall
movsb
test
sub
pop
outsb
ret
cmpsb
adc
std
add
ss
jne
out
jp
dec
xlat
sbb
pop
icebp
inc
xchg
addl
out
std
mov
fdivrs
stc
fcmovnbe
and
pusha
push
jae
pop
push
loopne
mov
sbb
rclb
in
cmpsb
sbb
jnp
mov
pop
pop
mov
add
add
add
push
mov
clc
es
push
xlat
inc
xchg
movsb
jecxz
lahf
sbb
gs
xor
imul
inc
imul
add
daa
lret
out
push
xor
inc
cmc
cmpsl
mov
jns
pop
sub
std
sbb
dec
pop
xchg
imul
pop
mov
dec
sub
sub
cli
mov
jb
jecxz
xchg
sti
subl
mov
lea
dec
pop
adc
ja
jae
imul
mov
add
add
fldl
loope
jge
cmp
dec
pop
jle
mov
or
lret
pop
inc
pop
xchg
rcll
or
dec
lcall
dec
stos
fcom
add
loope
ret
pop
bound
das
jge
mov
mov
loop
fisubl
push
pop
rcrl
sub
adc
sbb
xor
test
push
popa
cmp
sub
mov
mov
xchg
pop
dec
cmp
add
xlat
pop
xlat
jg
mov
ficompl
pop
xchg
addr16
add
add
add
push
mov
mov
into
mov
sahf
iret
cli
sub
lret
dec
cs
jns
adc
test
lret
popa
and
popf
pop
rcll
int3
jbe
cld
ja
in
adc
repnz
jge
adcl
mov
cltd
sbb
xchg
push
dec
push
pop
and
sub
movsl
insl
pop
inc
sub
cmp
mov
adcb
mov
cld
stos
ja
push
jmp
xchg
or
xchg
loope
out
xor
lods
add
dec
pusha
mov
call
push
add
inc
jno
inc
scas
bound
fwait
adc
and
shr
adc
mov
ss
xor
inc
das
sbb
sti
sub
outsb
jae
xor
adc
sbb
icebp
lods
jae
inc
push
sbb
leave
das
sub
gs
leave
lock
pop
push
pop
inc
popl
lds
lea
sbb
icebp
xchg
mov
idivl
pop
push
cs
addr16
add
add
add
frstor
lock
xchg
xchg
cmc
nop
ret
adc
xchg
fsubl
fwait
sahf
pop
and
pusha
mov
dec
imul
enter
xorb
pusha
sbb
leave
int3
push
lret
leave
mov
fucom
test
add
imul
ljmp
xor
sub
popf
xor
lcall
xor
mov
out
cs
push
out
mov
in
pop
decb
sbb
lds
adc
hlt
or
sub
std
push
arpl
cmp
arpl
fcom
scas
addl
dec
jmp
ds
mov
adc
or
mov
fistpll
inc
jne
cmp
mov
test
sub
popf
push
jg
fsts
test
test
mov
ficoml
add
add
add
or
dec
mov
dec
cmpsb
cld
lock
les
jmp
push
or
xorl
enter
outsb
jecxz
arpl
nop
or
pop
xchg
jecxz
sets
push
xor
out
fsubl
dec
repz
xlat
js
popl
divl
fdivrs
mov
test
addr16
rol
cmp
es
xor
loope
adc
jle
inc
lock
test
stos
sbb
jns
or
adc
fbld
mov
dec
shrb
jae
lea
adc
dec
jne
xor
out
inc
rol
inc
xchg
push
push
cmp
jb
sub
mov
arpl
int3
push
mov
pop
dec
pop
jns
xor
test
and
in
jae
fisubs
mov
andb
dec
mov
lret
add
add
add
push
pop
push
jmp
shr
adcb
add
add
test
test
lret
adc
jno
out
xor
cld
and
daa
push
or
push
lcall
jne
jmp
xchg
mov
push
inc
inc
fmul
mov
orb
mov
xor
jecxz
mov
test
mov
add
mov
xor
adc
fcoms
sbb
push
outsb
pop
mov
test
pusha
mulb
push
jns
push
popf
or
out
sub
scas
push
rcll
xchg
pop
adc
mov
push
es
out
je
in
push
mov
andl
push
je
scas
push
sbb
sub
sbb
les
cmpsb
adc
out
pop
adc
cli
icebp
push
les
iret
jnp
fisttps
out
sbb
in
mov
test
or
movsb
xchg
cli
dec
add
out
jbe
add
add
pop
lods
pop
cli
cmc
cmpsb
lret
js
pop
int3
incb
add
add
add
dec
rorl
lods
pop
in
std
mov
dec
cs
sbb
pop
or
cld
or
xor
mov
sub
imul
icebp
call
ficomps
xchg
xchg
mov
push
mov
dec
sub
stc
adc
popf
das
cmp
sbb
or
dec
imul
mov
dec
adc
into
cmp
ret
mov
mov
fisubl
inc
inc
xor
push
lret
push
pushf
mov
into
or
out
outsb
in
lcall
out
jb
decb
insb
xchg
fwait
add
pop
incb
testl
pusha
add
out
mov
xor
add
lods
insb
mov
cmp
scas
int
push
mov
sti
pop
jle
inc
xchg
and
adc
mov
add
add
stos
cltd
inc
popf
jae
out
xor
incl
add
add
add
inc
mov
push
xchg
lahf
dec
adc
push
push
mov
int
aad
sbb
scas
push
lock
lea
xor
into
inc
test
frstor
jae
pusha
rcll
push
out
dec
aaa
lret
outsl
fs
jge
out
dec
and
mov
add
cmpsb
add
push
inc
push
js
sub
into
and
xor
ja
or
sub
scas
mov
enter
loop
xchg
mov
js
sarb
in
sarb
adc
cmp
nop
lods
xchg
daa
mov
js
leave
mov
aas
loop
shll
push
lcall
dec
fyl2xp1
in
ja
add
iret
cmp
mov
dec
or
pop
call
icebp
pop
mov
add
sbb
filds
dec
jmp
cmp
mov
int
fs
push
arpl
inc
bound
add
aam
int
aaa
das
aam
cmpsb
lods
mov
add
add
push
pop
cld
imull
mov
out
int3
add
int
sub
xchg
cmpsb
mov
xchg
negl
jmp
bnd
aas
sub
cli
in
mov
sarb
push
mov
or
hlt
lcall
nop
or
sub
pushf
mov
xchg
xchg
dec
movb
cs
cwtl
addb
xor
mov
sbb
jb
xchg
loopne
xchg
mov
or
ret
addr16
out
out
push
repz
leave
mov
cmp
xchg
popa
mov
and
push
pop
dec
xor
das
xchg
nop
in
jbe
sbb
jns
pushf
sar
mov
and
jge
pop
mov
fcmovbe
pop
sub
pop
mov
lds
pop
and
aam
jp
mov
lret
and
shrl
inc
sub
mov
mov
push
or
icebp
in
jge
sub
mov
add
arpl
addr16
sub
movsb
pop
aam
add
add
add
add
das
push
mov
xchg
aas
inc
or
imul
cmp
sbb
adc
sub
cli
adc
jo
loope
shll
out
imul
pop
daa
out
xchg
pop
insl
pop
insb
adc
cli
pop
xor
and
pop
dec
push
out
fisubl
inc
in
xchg
pop
mov
pushf
int3
mov
repnz
icebp
hlt
inc
loop
pop
decl
hlt
mov
testb
jl
add
mov
sahf
sub
int3
add
push
in
xchg
shlb
pop
das
je
fimuls
sbb
lea
mov
or
shlb
hlt
cli
loop
xor
fwait
testl
sbb
jge
les
push
sti
cmc
push
mov
dec
jmp
arpl
aas
push
xor
sub
xchg
xchg
imul
in
testb
enter
arpl
dec
out
cmp
cmp
pushl
xchg
xor
push
adc
or
add
add
add
and
gs
dec
cmp
push
gs
pop
hlt
cwtl
xchg
jg
ficompl
mov
fstl
fnop
fwait
or
push
cli
cwtl
mov
fcomi
cmp
addl
cmp
xor
add
icebp
ss
xchg
add
push
rcrb
cs
lock
jmp
lea
dec
adc
into
mov
xlat
push
or
ja
jno
and
out
jmp
sub
cmp
or
out
jmp
subl
sbb
into
sbb
xchg
test
or
loope
hlt
jecxz
and
mov
or
jp
inc
loope
mov
fnsave
fistps
sbb
sub
scas
dec
les
push
movsb
push
scas
lcall
add
lods
ret
pusha
cmp
sbb
or
shlb
cmpsl
xchg
in
outsl
jmp
test
push
scas
mov
js
popf
add
add
add
add
test
xlat
and
mov
mov
sub
loopne
adc
mov
lock
push
mov
ja
xchg
movsl
mov
inc
fdiv
jo
and
sub
inc
enter
jl
jno
mov
insl
je
cmp
lds
aam
cmpb
fs
iret
ret
aam
sbb
inc
pop
cmp
jle
aad
nop
push
arpl
sbb
aas
fcompl
jne
rcr
dec
push
pmulhw
mov
mov
outsl
rep
pop
out
xchg
pop
mov
shl
dec
nop
mov
sahf
mov
jge
je
jge
frstor
lods
sarl
nop
pop
movl
mov
stos
outsb
push
sahf
xchg
call
add
sti
mov
pop
stos
dec
inc
fnstenv
jno
out
and
jp
pop
or
shlb
data16
into
and
cmp
hlt
add
push
aaa
xchg
and
movsl
mov
mov
mov
shll
add
add
add
lret
sub
shll
inc
mov
sub
jnp
mov
jp
dec
push
aas
mov
xor
cld
sub
movsl
and
fsubrs
xchg
andb
cmpl
cmp
shll
fdiv
mov
ret
sub
jb
pop
outsl
dec
mov
mov
ret
out
ficomps
lea
fiadds
cltd
sub
mov
cmp
test
fistpl
roll
xchg
mov
es
sub
pop
mov
dec
xchg
cld
insb
pusha
dec
cmpb
mov
xor
fmuls
movsb
push
and
mov
xlat
xchg
out
sub
jno,pt
xor
mov
mov
xchg
mov
pop
jp
jae
inc
mov
cld
or
pop
inc
xchg
fs
xchg
mov
mov
insb
push
les
jl
push
mov
lcall
add
add
mov
push
jg
mov
jl
jecxz
addr16
add
dec
lock
cs
xchg
inc
lret
movsb
sub
cmc
addr16
lods
pop
test
add
jns
adc
sbb
imul
ret
das
xchg
rcr
or
xor
dec
sbb
ja
test
ftst
mov
leave
lcall
mov
jecxz
aam
out
inc
adc
jno
and
sub
adc
add
shlb
mov
or
xchg
xchg
and
sub
test
jl
pushl
lods
dec
push
xor
pop
out
es
shr
mov
pushf
imul
les
jo
and
jle
mov
jbe
stc
es
mov
fwait
mov
xor
mov
cmp
rcl
sub
cwtl
pop
adc
inc
ror
jmp
mov
mov
add
movsb
cmp
pop
ds
into
icebp
sbb
fmuls
inc
stc
mov
mov
lods
imul
scas
pushf
sbb
addr16
add
add
add
or
stos
mov
stos
jmp
shll
pop
lcall
push
mov
shll
loope
sub
cmpsl
test
jae
iret
jle
insb
pop
mov
leave
lods
cmpsb
lcall
cmc
lds
adc
cmp
xor
push
orb
mov
std
outsb
xchg
or
test
push
xor
sbb
mov
addr16
mov
orl
xor
adc
enter
jo
rcrb
push
stos
and
jmp
aas
lcall
xor
or
push
daa
or
dec
jnp
and
shrb
jle
ss
std
in
push
fcmovu
push
xor
jecxz
lret
enter
sarb
adc
in
pop
add
aaa
inc
shll
mov
sahf
daa
xchg
push
iret
mov
xchg
dec
xchg
sub
scas
or
cmp
dec
add
add
add
add
cli
xlat
lods
popa
push
out
shll
lret
xchg
in
pop
inc
cmp
stos
insl
test
stos
cmpsb
in
xchg
and
cwtl
xchg
pop
test
lcall
in
shrb
imul
icebp
push
push
shlb
push
pop
ss
movb
int3
push
and
mov
repnz
ret
insb
fucomi
cs
out
push
adc
fsts
lret
cmpsb
add
popf
outsb
push
cwtl
daa
push
push
outsl
mov
cmp
dec
jae
jg
mov
add
pop
mov
jmp
add
inc
pop
push
sbb
add
leave
adc
popf
testl
add
scas
xor
xor
popf
mov
add
xchg
out
mov
pop
int
sbb
pop
sub
inc
std
sub
pop
aam
mov
mov
pop
jnp
or
jecxz
mov
loop
out
jp
and
clc
inc
loop
mov
add
add
hlt
fbld
fwait
push
jl
or
add
add
add
lahf
in
in
sub
ljmp
dec
mov
mov
pop
pop
xor
jno
xor
call
mov
fnstenv
sbb
dec
inc
lods
sbb
jno
daa
push
outsl
out
inc
in
sub
mov
or
ljmp
pop
pcmpgtw
arpl
mov
aaa
cmpsl
cli
xlat
sbb
sub
and
inc
cwtl
mov
pop
jg
mov
mov
pusha
ss
add
xor
mov
out
push
in
adc
adc
mov
xor
cwtl
lea
pop
cmp
inc
daa
lea
cwtl
cmpl
stos
sbb
mov
shrb
sub
data16
inc
push
adc
int
lods
dec
cmpsb
scas
mov
shl
mov
imul
insb
and
push
push
jnp
testb
add
add
into
fwait
add
mov
add
or
add
add
add
cmp
xchg
loopne
pushf
xchg
dec
imul
inc
loopne
sub
jb
push
scas
loope
cmp
pop
cmp
add
mov
or
jecxz
out
sub
xlat
inc
test
cmp
inc
dec
imul
test
shll
push
add
pop
emms
jl
popa
mov
decl
jle
adc
sahf
lret
rclb
cmp
pop
jno
cmp
outsl
es
clc
pushf
sub
pop
ljmp
xlat
stos
and
rolb
lahf
and
ret
test
out
in
pusha
adc
fucomp
pop
adc
arpl
sub
mov
pop
mov
scas
inc
add
or
gs
jno
lods
pop
mov
das
les
push
push
shl
inc
mov
sub
iret
cmp
and
dec
into
hlt
shll
jns
mov
push
push
in
and
cli
jb
cmp
mov
push
inc
int3
cmpsl
imul
mov
mov
jl
test
out
mov
pop
sarb
in
sub
push
or
add
add
add
xor
insl
pop
xchg
sbb
nop/reserved
push
mov
or
push
cmpsl
push
xchg
jle
inc
cwtl
mov
cmp
pop
mov
jle
xor
inc
inc
sbbl
aaa
mov
shl
je
movsl
mov
ljmp
je
add
jl
fucomip
pop
pop
jae
sub
cmc
aad
jl
fldcw
jg
inc
das
lahf
aas
gs
or
ficoms
or
adc
sub
mov
pop
call
xorb
outsl
xchg
sub
mov
hlt
pop
pandn
int3
pop
mov
mov
sub
xchg
cmp
cmp
in
out
fs
dec
loop
flds
fs
dec
leave
loop
mov
push
rcrb
sub
push
in
mov
arpl
mov
cmpb
xor
or
push
xorl
or
push
xor
andb
aad
sti
inc
out
aas
mov
rolb
or
add
add
add
fisubrs
push
cmp
mov
lds
cltd
or
fsub
fucomip
jns
shl
mov
push
dec
or
mov
add
xor
gs
imul
xchg
sbb
jmp
movsb
in
subb
sbb
push
ljmp
movsb
outsb
cmp
and
dec
rcrl
pop
mov
enter
cmp
jne
ret
scas
and
adc
lock
and
fwait
xor
jge
add
fmuls
stos
sbb
jnp
xor
add
fstpl
sub
dec
pusha
pop
fadds
movsb
subb
jnp
jle
pop
and
cmc
mov
sarl
and
subl
jmp
lahf
into
push
cmpb
pop
mov
mov
popa
sbb
shlb
jle
aam
push
clc
ficoml
leave
push
bnd
dec
leave
and
inc
iret
addr16
add
add
add
iret
or
mov
into
call
mov
test
sub
sub
jb
dec
sbb
inc
sub
std
insb
and
fs
scas
fstps
xlat
sti
pop
fwait
push
add
add
aam
sti
lret
mov
das
sub
bound
mov
mov
sarb
add
pop
push
arpl
jp
sbb
add
or
push
pop
push
mov
arpl
sub
sub
push
cs
pop
adc
mov
sahf
or
lret
push
shlb
cld
pop
pop
or
mov
adc
cltd
dec
dec
imul
pop
imul
enter
lods
sbb
push
repz
dec
dec
inc
outsb
inc
das
inc
stc
inc
push
push
fstpt
and
fistpll
push
xor
sub
jbe
or
mov
sub
imul
add
add
in
out
ja
filds
dec
ljmp
add
add
repnz
movsl
pop
inc
mov
cmc
jnp
outsl
inc
or
dec
pop
jg
sarl
push
mov
lea
lock
das
xchg
cmp
out
call
sbb
inc
or
xor
or
addr16
ss
les
xchg
jb
popa
jno
xchg
and
lds
js
pop
xchg
adc
sub
mov
call
jno
inc
xor
rolb
dec
repz
add
flds
subb
fs
addl
add
push
imul
int3
ljmp
cmpsl
sbb
add
xchg
movsb
jns
bound
mov
enter
sbb
xlat
push
and
sbbl
or
cwtl
in
cmpsb
call
sbb
xchg
cmpsl
jae
xor
sbbb
add
scas
test
in
inc
push
or
lock
addr16
add
add
add
cmp
inc
addl
ljmp
scas
pop
adc
fs
cmp
cli
cmp
js
xor
lret
add
add
xchg
cmp
jb
xchg
dec
and
xlat
push
loopne
push
jecxz
inc
jo
jae
clc
dec
inc
push
outsl
lock
sbb
jns,pn
xchg
outsl
pusha
mov
jecxz
lahf
cmp
or
sti
cmp
loope
pop
popa
nop
jae
imul
lcall
inc
outsl
nop
cltd
aad
mov
push
std
and
push
hlt
mov
add
movsl
jnp
push
fistpll
cli
mov
mov
cmpsl
shrl
push
mov
adc
and
add
stos
nop
push
das
test
fiaddl
or
cwtl
sbb
mov
clc
insl
das
jle
cmpsl
mov
push
jnp
jmp
mov
jg
push
dec
add
mov
mov
or
popf
int3
sub
mov
jg
neg
pop
daa
inc
mov
sgdtl
add
add
pop
std
adc
pop
je
nop
lret
sub
xchg
inc
es
aam
ret
sub
cmpb
mov
ljmp
and
xchg
jnp
mov
loop
xor
or
into
cmp
xor
jno
mov
inc
mov
and
lea
push
pop
sub
jmp
repz
push
lods
imul
adc
repz
loope
out
lock
iret
mul
mov
popf
push
jle
and
shl
mov
jg
test
mov
imul
mov
xchg
pop
rcr
inc
mov
mov
push
sub
xchg
movsl
push
dec
insb
shr
insb
mov
cmp
mov
test
xchg
sub
push
fucom
and
pop
cmp
sti
jg
cmp
je
push
out
loopne
adc
add
add
add
mov
lahf
aam
add
cmpsl
pop
push
cmp
es
inc
in
movsb
pop
daa
inc
cmp
pop
mov
std
fidivrs
sahf
popa
adcb
xor
repz
out
inc
mov
cmp
push
imul
fnsave
pop
adc
cmpsb
pop
cli
cmp
dec
add
lods
mov
mov
sub
cmovnp
loopne
push
cli
or
andb
sub
and
mov
out
int
enter
push
push
insl
hlt
mov
mov
in
loopne
xchg
xor
cwtl
push
jg
popf
push
push
js
mov
cmpsl
fbstp
fs
in
inc
lret
into
push
in
add
jbe
xor
jge
cs
mov
lahf
hlt
cmp
push
enter
and
es
mov
icebp
popf
jmp
or
inc
add
mov
mov
add
jb
mov
sbb
out
daa
mov
add
add
jnp
fstp
fcompl
jmp
adc
add
add
add
mov
inc
pop
inc
lret
sub
cmp
mov
in
or
lahf
in
cmp
enter
push
and
push
fmulp
scas
sub
xchg
push
jecxz
int
inc
sbb
rcr
jns
or
inc
jg
jle
or
movsb
nop
dec
xchg
pop
lret
adc
in
cmp
lods
and
cmp
in
cmpsb
stc
ljmp
test
test
cmp
xchg
cltd
out
cli
pop
leave
nop
cmpl
mov
out
cmc
leave
in
movsb
out
popf
adc
pop
inc
mov
movsb
lods
adc
movsb
daa
jno
xor
int3
test
xchg
jp
and
cmp
jecxz
jmp
int3
xchg
add
call
mov
inc
xor
jecxz
shrb
push
and
out
fs
ja
dec
xchg
mov
add
push
test
mulb
add
pop
adc
or
cmp
push
notb
add
mov
jno
std
outsl
mov
add
xchg
push
adc
add
add
add
or
lcall
js
shrb
sub
rorl
iret
xchg
jbe
ja
inc
gs
dec
jbe
icebp
imul
movsb
std
inc
imul
adc
mov
bound
jp
fidivrs
push
imul
inc
fwait
cmpb
fucom
add
out
ljmp
sbb
cwtl
and
mov
jge
popf
ja
test
bound
mov
repz
ss
aas
pop
pop
jl
fnstcw
xchg
add
jo
ja
cmp
fisttpll
or
je
scas
xor
inc
mov
cmp
adc
jne
negb
pop
xor
cwtl
aad
push
and
and
jmp
int
test
dec
nop
insb
mov
sbb
xchg
aas
subl
pop
push
and
call
sbb
test
jb
aam
fdivrl
aaa
sbbb
loope
jmp
fst
cmc
test
adc
add
add
add
pop
mov
push
mov
cmc
loopne
mov
lret
aaa
cmpsb
ds
jg
mov
int
xor
cmp
add
cmpsb
jo
aam
js
cltd
imul
fldcw
test
sub
mov
pop
sahf
loop
xor
std
sbb
push
scas
test
es
and
xor
add
lret
addr16
adc
cmp
out
push
in
inc
sub
daa
mov
inc
jo
push
orl
pop
pop
push
and
dec
stc
fs
push
xor
ret
pop
sahf
cwtl
push
fs
in
fdivrl
add
mov
xlat
fmul
pop
adc
cwtl
fwait
bound
loope
push
or
iret
lock
aas
xchg
pop
push
iret
aas
jbe
add
pop
leave
push
filds
dec
pop
sub
cmp
add
add
xor
test
daa
jmp
add
add
add
int3
stc
jp
js
stc
cmp
inc
xor
mov
inc
sahf
addr16
or
frstor
fldcw
xchg
xor
inc
cmp
mov
cmp
int3
in
ljmp
shl
xchg
testb
jnp
xlat
lret
inc
sbb
cmpsb
imul
dec
insb
fstpt
add
and
daa
mov
mov
decb
repnz
rcrl
mov
clc
inc
popf
cmp
push
fwait
inc
mov
mov
lds
mov
inc
test
rclb
fdivp
mov
and
clc
and
xchg
xchg
cwtl
xchg
les
pop
test
mov
jle
jmp
stc
sbb
test
mov
pop
sub
mov
add
add
cmpsb
jne
xor
lret
ret
arpl
mov
push
sub
xchg
popf
dec
jl
and
xor
sbb
dec
cli
inc
jg
int
xchg
lods
or
idivb
addr16
add
shl
dec
adc
movsb
addr16
jo
sub
out
ds
ret
jge
ret
iret
js
out
cmp
adc
push
add
and
pop
faddl
ss
clc
in
xchg
mov
add
test
fcmovnb
mov
push
cmp
mov
xchg
shrb
es
sub
js
mov
popa
cld
inc
and
inc
inc
cmpsb
out
iret
sub
jns
mov
ljmp
repnz
mov
mov
dec
cmc
push
inc
loopne
inc
and
aad
xor
adc
out
mov
leave
pop
jbe
imul
in
fs
pop
fsubs
in
out
dec
loope
sub
cs
ljmp
jne
xchg
cwtl
lret
dec
mov
clc
lret
cmpsb
movsb
xor
cmp
add
sub
hlt
sahf
add
js
in
mov
cmp
push
and
push
lock
std
cmp
jle
fistpll
fidivl
sub
add
add
mov
je
lcall
rclb
xchg
repnz
add
je
dec
loope
andl
cmp
and
nop
add
mov
push
ret
xor
fistpl
lods
ds
ljmp
cmp
xchg
mov
sti
jmp
pusha
cli
arpl
xchg
add
dec
sub
sbb
xor
out
push
pop
push
lahf
mov
paddq
mov
push
outsb
sbb
pop
xchg
xchg
popa
dec
std
jmp
jb
jo
aaa
cmp
out
das
fidivrs
inc
xor
inc
nop
fbstp
jge
inc
and
pusha
pop
sbb
add
imul
decl
mov
stos
scas
ffreep
jp
incl
pop
idivb
shl
int
int
cmc
inc
sbb
out
or
inc
xor
xchg
mov
lcall
add
iret
xlat
ficompl
inc
stos
aad
lcall
add
mov
jo
mov
sti
cld
adc
add
mov
pushf
sub
xor
cmpl
lea
cmp
inc
inc
pop
rcrl
inc
fcoms
or
xlat
xor
leave
mov
mov
dec
mov
jae
push
lods
mov
fsubl
push
mov
scas
push
paddd
push
in
cltd
leave
adc
sarl
push
in
jmp
cmp
in
jo
push
cld
add
xor
xorl
mov
sub
pop
cmp
hlt
loope
mov
lcall
ret
inc
sub
lret
xor
movsb
imul
loopne
mov
mov
sub
add
and
adc
fwait
pop
inc
mov
sub
out
mov
dec
cmp
xor
push
pop
loope
inc
insl
call
mov
sbb
fs
mov
nop
dec
jmp
dec
scas
iret
outsb
jmp
push
test
cmp
add
add
add
pop
mov
nop
jl
mov
add
out
push
jmp
sub
jl
hlt
lds
push
inc
push
pop
xor
imul
iret
pusha
and
dec
lcall
test
push
mov
sahf
or
push
testb
jp
sbb
jne
dec
add
loope
cmp
notb
das
xchg
cmp
mov
enter
jbe
and
hlt
shrb
into
in
imul
add
mov
icebp
jmp
cmc
loop
cmc
dec
dec
fsubrl
mov
inc
lret
jns
add
daa
imul
rclb
pusha
xchg
jecxz
sub
sub
dec
xchg
fucomp
adc
cmpsb
xchg
push
popf
pop
mov
dec
int3
push
arpl
add
and
dec
loop
jo
lods
inc
mov
push
cmp
fldt
sbb
std
sbb
stc
cld
or
lahf
data16
sbb
add
add
add
mov
cmpsb
fmull
enter
lahf
div
fisttpll
mov
adc
cwtl
inc
pop
fcoms
imul
push
inc
or
add
es
loopne
pop
xor
lea
xchg
out
mov
jmp
cmp
scas
pop
jp
jp
dec
mov
jmp
mov
fcom
xchg
pop
mov
outsb
mov
rol
inc
or
or
lds
test
loope
mov
jmp
add
xor
sar
mov
cmp
xchg
push
fimull
sahf
adc
repnz
imul
mov
jp
xchg
adc
pop
stc
adc
fiadds
mov
pop
mov
outsl
scas
cmc
data16
loopne
mov
xchg
nop
sti
mov
gs
cmp
dec
xor
cmp
aam
jo
dec
shl
adc
negl
adc
pop
xchg
cmpsb
idiv
and
add
add
add
fcoms
xchg
daa
dec
push
fcomi
orb
sub
mov
pop
and
mov
mov
andl
cmp
adcb
mov
jecxz
call
je
mov
inc
dec
or
xchg
add
movsb
addr16
pushf
aaa
xchg
or
loop
mov
shr
dec
negl
insl
cmovl
jnp
cwtl
cs
je
sbb
xor
aaa
jb
jno
lahf
imul
rorb
addr16
cmpsl
popa
dec
pop
sub
pop
pop
push
ficompl
hlt
xor
jns
inc
sarl
or
xchg
add
xchg
and
enter
out
mov
jle
sub
nop
or
nop
jmp
push
xchg
testl
outsl
rorb
jmp
mov
push
iret
dec
adc
jne
mov
dec
pushl
out
pusha
or
add
add
add
jbe
xchg
xor
fisubs
sar
xor
inc
mov
jnp
aam
rcr
sbb
inc
js
jl
and
je
cmp
aaa
and
ljmp
mov
pushf
outsl
aad
cmc
rclb
popa
mov
cmp
ss
dec
addr16
jmp
fidivs
mov
in
ja
adc
and
and
outsb
mov
mov
loop
mov
or
mov
divb
push
xchg
push
and
mov
test
andb
outsb
ss
stos
into
aad
add
cwtl
sbb
xchg
mov
call
cwtl
leave
mov
decl
jle
xor
dec
roll
inc
stc
xchg
sub
mov
mov
inc
jnp
sub
pop
push
push
dec
pop
push
jmp
add
add
inc
ja
pop
aas
dec
push
cli
or
sbb
add
add
add
cmovg
fstpt
add
dec
decb
sub
or
jl
add
xor
repnz
inc
dec
iret
jmp
adc
movsl
lcall
ljmp
jno
mov
and
pop
out
and
lds
and
mov
fwait
mov
adc
out
xchg
inc
push
aad
aad
pop
stos
imul
mov
out
cmpsb
insb
das
lret
loope
mov
dec
js
sti
gs
jno
or
sub
push
xor
and
jp
insb
jno
out
and
leave
popa
rcl
adc
xor
jg
lret
jge
push
push
pushf
lods
lret
pop
adcl
ret
push
ss
div
jl
je
dec
std
rolb
mov
xor
dec
pop
repz
jae
ja
div
mov
cld
add
add
lahf
mov
sti
pop
cmpl
xor
add
lock
and
push
xlat
jb
or
cwtl
adc
push
mov
testl
inc
decl
sub
inc
cmp
fists
pusha
in
dec
leave
and
insb
pop
imul
icebp
mov
cs
xor
adc
les
movsb
mov
sbb
jne
mov
jmp
xor
lock
push
pop
sub
mov
fwait
enter
cmp
jnp
jnp
int
fldl
pop
pop
cmpsl
inc
and
pushf
sub
aaa
cltd
ret
lahf
push
fcmovnbe
sbb
inc
rolb
mov
daa
push
fmulp
push
lahf
stos
xchg
push
mov
or
mov
into
pusha
sub
adc
sub
shrb
add
add
mov
inc
or
jne
ret
ja
xchg
adc
add
xor
cli
std
jg
push
pushf
dec
stos
pop
clc
addr16
add
add
add
shll
inc
repz
ja
cmpsb
fcomps
pop
fwait
dec
xchg
incb
add
int3
scas
hlt
sub
stc
inc
or
fwait
cmp
shll
pop
loope
icebp
insb
je
mov
mov
dec
xor
fisubrl
lret
bound
outsl
test
add
sub
cli
stos
in
jns
push
nop
pop
clc
fstps
idivl
stc
test
sbb
lock
or
fsubs
inc
push
jb
and
loop
aam
push
cmp
bound
and
cli
cld
sbb
int
lock
ljmp
and
ljmp
pop
jmp
ficoms
jo
fstpl
xchg
in
adc
inc
mov
mov
xor
daa
sbb
jmp
push
cmpl
and
pop
lahf
cmp
aas
dec
lds
mov
mov
sub
xchg
scas
testl
incl
sbb
and
add
add
add
out
aaa
cmp
popf
fists
jl
scas
push
or
pop
or
add
and
fmuls
sbb
sub
lock
fsqrt
mov
jecxz
js
xchg
mov
rol
mov
loopne
dec
arpl
test
xor
cmpsb
mov
jbe
mov
stos
sub
ss
mov
idivb
pmuludq
shlb
je
dec
arpl
mov
mov
push
sbb
fnstcw
aad
adc
addr16
pop
mov
jbe
push
rcrl
stc
mov
add
int
push
and
sbb
cmc
sarl
lcall
xchg
and
push
xchg
jnp
xchg
nop
lcall
inc
cmpsb
js
push
js
xor
repz
push
pop
mov
sbb
pop
mov
stc
and
push
mov
sub
lret
jl
mov
add
push
es
jg
pop
or
xor
pop
sub
add
add
add
repz
pop
mov
insl
iret
sbb
push
add
pop
sbb
rclb
icebp
fs
cmc
jle
std
pushf
inc
test
sbb
jnp
and
and
xchg
inc
mov
cltd
jge
adc
xchg
fs
dec
sub
cmp
das
mov
mov
loop
sti
es
cmc
dec
push
jmp
mov
les
mov
int3
les
jg
test
enter
dec
jp
cwtl
pop
aam
xchg
or
mov
sahf
loopne
scas
mov
pop
cmp
push
jnp
mov
add
fdivs
out
mov
testl
and
dec
cmc
mov
aam
cmp
cmp
dec
mov
fbld
sub
ja
add
sahf
mov
add
push
loope
or
test
push
out
imul
add
push
clc
or
dec
push
cmp
and
add
add
add
push
test
pop
pop
mov
in
jnp
pop
mov
jle
iret
xor
mov
xor
mov
outsl
or
stos
dec
out
xchg
or
mov
mov
gs
scas
bound
aad
sahf
popf
stos
popf
fnstenv
adc
in
xchg
in
outsl
arpl
insb
pop
loop
dec
pop
int3
fstpt
shrb
jne
sub
je
jae
loopne
push
sbb
xchg
push
aad
pop
fimuls
jne
jns
cmc
pop
sbb
fstl
and
dec
scas
inc
cmpb
aaa
jp
pop
stos
xor
inc
sub
aas
dec
loopne
clc
jg
lds
sahf
shl
lcall
cmp
xchg
jl
adc
movsl
pop
pop
pop
mov
push
arpl
nop
inc
sbb
dec
mov
xchg
cmpl
xchg
jb
sarb
sbb
xchg
dec
cmp
cmp
test
popl
inc
movsb
push
adc
scas
xor
mov
aas
cmpsb
and
add
add
add
lea
add
adc
cmpsl
inc
inc
ret
push
lret
pop
repz
je
mov
sbb
xchg
pop
dec
pop
cmpsb
sarb
incb
pop
gs
sbb
in
mov
test
fdivs
lock
loope
in
or
lea
rorb
add
std
sti
ja
push
rorl
out
addr16
stos
adc
cmp
ljmp
pop
mov
andb
push
sbb
bound
test
cld
fwait
dec
inc
mov
fimuls
jo
test
pop
mov
sti
or
xor
cmp
xorb
shll
pop
jmp
aaa
bound
shl
xor
roll
int
sub
scas
repnz
aad
sbb
lret
outsl
decb
mov
inc
lea
sbb
cmp
icebp
hlt
scas
xlat
cmp
and
jno
push
xchg
sbb
mov
add
ficoms
stos
sbb
call
mov
and
add
add
add
and
dec
ficompl
jns
adc
dec
je
testb
sahf
mov
push
rcll
or
jmp
mov
call
shr
xchg
stos
test
iret
and
ljmp
sub
fwait
lret
sbb
xor
mov
stos
je
jno
mov
stos
push
and
pop
pop
movsb
jbe
mov
ljmp
sbb
pop
les
jo
in
xor
imul
es
rcl
out
or
inc
int3
test
add
mov
fcmovnu
stos
ret
stos
ds
xor
sbb
pop
addb
push
pop
jg
sub
or
and
or
xchg
sub
sub
push
mov
test
jge
xchg
shrb
xor
pusha
lahf
loop
mov
pop
lret
or
cmp
add
in
out
stos
jge
or
xor
lods
addr16
add
add
add
aad
aam
ljmp
mov
ja
pusha
push
push
data16
fdivs
arpl
push
mov
subb
popa
adc
into
sub
inc
push
mov
and
push
iret
jmp
mov
or
int3
in
nop
into
mov
and
sarb
cmpsl
xchg
push
add
cmp
loope
or
mov
dec
aad
and
push
xor
adc
push
cmp
mov
test
and
inc
in
dec
fwait
dec
cwtl
sbb
inc
movb
ds
sbb
pop
inc
bound
fstpl
sbb
sub
test
rcl
loopne
push
leave
mov
iret
int
leave
das
inc
sbb
xor
push
dec
rol
jmp
std
je
cmp
dec
leave
mov
pushf
jle
sub
cmpsb
pushf
int3
sub
jnp
dec
or
out
xchg
iret
push
aas
leave
sub
ret
add
add
add
rol
xchg
lea
pop
jp
xlat
sti
test
push
cltd
neg
push
int
incl
sbb
testb
mov
xor
and
out
std
mov
xchg
test
pop
and
test
jg
adc
testb
in
push
test
xchg
sub
sahf
push
pop
adc
cmp
testb
js
lock
mov
js
xor
mov
fcompl
and
ja
jnp
dec
pop
or
inc
mov
add
inc
int
push
sti
add
out
add
jb,pn
push
xchg
pop
cmp
lea
ljmp
and
cmp
sub
popa
jb
rcll
pop
lea
bswap
mov
lds
pop
aas
inc
pop
imul
sti
mov
stos
leave
mov
popf
push
pushl
dec
xorb
out
loopne
in
inc
mov
add
aam
add
cmp
out
loope
jns
pop
je
mov
add
add
jp
or
jbe
lret
mov
rolb
lods
mov
fwait
out
jbe
aaa
inc
ljmp
jnp
aad
in
add
dec
pushf
iret
mov
push
rclb
repz
cltd
adc
or
nop
jae
or
inc
fnsave
adc
mov
loop
push
fcom
in
icebp
xor
rorb
pop
lret
jo
das
and
xchg
pushf
mov
push
pop
mov
add
test
or
repnz
mov
cli
enter
pop
shll
aaa
push
mov
inc
repz
out
sub
pop
jmp
mov
cwtl
jne
outsl
inc
mov
cltd
dec
popa
and
cs
mov
adc
mov
insb
push
std
mov
clc
int3
aas
pop
aas
adc
cmp
push
fwait
push
iret
mov
js
arpl
arpl
dec
cmp
push
data16
push
aad
add
add
lods
jg
push
mov
popa
hlt
jno
addr16
add
add
add
faddp
ja
mov
dec
jae
jae
rcr
xlat
movsb
sub
and
xchg
ds
add
ds
push
inc
outsb
dec
add
test
xchg
jp
cmp
sbb
cwtl
sbb
in
mov
andl
sbbl
into
dec
cmp
andl
cltd
pop
xchg
or
fstl
cltd
cld
les
or
adc
int
lcall
xchg
leave
mov
dec
add
add
adc
out
in
ret
mov
or
jg
in
fstl
jne
adc
in
xor
in
cltd
mov
fs
rol
lret
jne
mov
insl
fnstcw
add
mov
pop
push
cmc
and
test
dec
scas
andb
lret
sub
and
in
fiaddl
adc
mov
data16
scas
or
push
pop
add
add
add
jg
cld
ret
add
test
xor
add
add
add
repz
aaa
push
push
xor
push
data16
inc
arpl
ja
jge
fisubs
pop
xchg
in
adc
jl
daa
sahf
daa
xor
cltd
scas
cmp
and
sub
cmpsb
jbe
jo
mov
jnp
adc
scas
and
test
rcl
mov
leave
fidivrl
adc
dec
add
jl
out
sahf
and
repz
stos
or
mov
outsb
les
addb
and
pop
mov
adc
lahf
ror
push
mov
vphaddbq
push
add
stos
imul
mov
xchg
ret
pop
clc
pushf
lods
dec
adc
ret
mov
cltd
loop
xor
out
in
mov
stc
mov
fimull
clc
ud2
mov
lea
fimuls
js
outsl
insl
xchg
fcomi
addb
popf
adc
cmc
mov
ret
mov
iret
mov
and
jae
sub
add
add
add
in
cli
aas
mov
and
ret
idivb
loopne
ljmp
orb
rcrb
and
push
mov
cs
test
cmp
pop
mov
sti
cwtl
out
popf
lahf
pop
fs
inc
push
idivl
mov
or
lea
negb
pop
icebp
jbe
lret
enter
adc
lret
adc
lcall
mov
dec
cmc
adc
shlb
enter
jbe
aam
stos
sbb
mov
cmp
loop
pop
outsl
inc
adc
mov
mov
and
lret
pop
inc
movsl
mov
push
pshufw
xor
sub
sub
in
jmp
cld
cmpsb
push
icebp
sub
jg
mov
dec
pop
mov
inc
add
xchg
out
pop
repz
int3
add
or
jg
arpl
imul
add
add
sahf
inc
cmp
adc
jb
stc
xchg
xchg
loope
cmp
test
and
fs
dec
push
cmp
in
or
clc
test
ss
xor
in
jle
dec
stos
xchg
shll
dec
repnz
int
lods
cli
test
jmp
jo
test
jle
int
das
adc
test
fwait
loope
jecxz
cmp
pop
stos
faddl
clc
clc
fucomip
test
xor
jb
xor
sub
mov
scas
sbb
xchg
dec
cltd
inc
mov
fucomp
pushf
in
das
shlb
in
jae
pushf
ret
adc
mov
xor
gs
test
push
mov
scas
jmp
sbb
jl
sbb
ficomps
xor
sbb
push
test
fucomi
sbb
xlat
fcompl
mov
pusha
mov
sarb
push
scas
push
dec
shlb
cli
clc
cli
clc
sarb
sti
mov
cmpsb
sub
add
add
add
cmp
int3
add
clc
or
out
aad
adc
rorb
repz
mov
ja
adc
sub
push
mov
leave
lahf
not
sti
pusha
cwtl
mov
lcall
sahf
mov
rorl
cmpsb
mov
and
and
mov
insb
aam
test
mov
mov
sub
xor
mov
test
jae
jno
pop
jns
sti
pop
shll
sub
mov
in
jb
clc
push
js
rorb
pop
imul
clc
mov
je
jae
test
and
jp
orb
pop
inc
ss
cmc
adc
xor
arpl
xchg
out
xchg
push
fcoms
fiadds
je
arpl
and
testl
lods
mov
into
push
jecxz
in
dec
cmp
jns
add
add
jnp
out
mov
cmp
addr16
add
add
add
inc
xchg
ret
call
jno
mov
cld
test
pop
add
and
insb
xchg
out
xchg
movsl
test
jae
xchg
xchg
fwait
rcrb
aas
push
mov
in
fcomps
or
pop
adc
jle
dec
lahf
pop
in
pop
aad
sub
iret
dec
hlt
pop
lahf
dec
out
cs
insb
pop
sahf
aas
lods
sbb
insb
pop
jns
cmpsl
pop
pop
idivl
je
test
movsl
fs
add
into
mov
in
lods
sub
push
xchg
fcmovnu
push
add
je
cmpsl
mov
ljmp
push
jg
scas
cmp
addb
add
cs
movl
or
lea
xor
sub
das
pop
faddl
sub
mov
repz
daa
pushf
add
iret
add
sbb
add
add
es
data16
insb
daa
mov
push
jns
addr16
add
inc
das
push
add
or
sub
nop
decb
fisubrs
popf
daa
add
popf
pop
sub
inc
adc
loop
cmp
jne
xor
gs
add
push
and
jae
xchg
stos
add
arpl
clc
adc
imul
loope
pop
rcrl
mov
inc
pop
das
stc
es
cmp
rcl
mov
repnz
push
clc
cmp
inc
fs
pop
mov
sahf
push
scas
push
loop
cmp
dec
push
mov
push
cmpsl
ret
pop
fs
push
subb
aad
scas
mov
lods
sbb
fimull
and
in
in
pop
lods
test
scas
mov
lea
and
sbb
push
mov
lcall
setge
sar
sub
pop
outsb
clc
mov
fldcw
add
jo
add
add
add
add
or
aad
ret
pop
lods
cmp
and
jmp
cmc
or
xchg
push
addr16
inc
arpl
pop
movsb
lds
pop
sub
mov
lods
add
add
push
mov
mov
ljmp
sbb
jnp
pushf
in
lcall
xsaveopt
mov
cmpsb
ss
shl
sub
imul
scas
jmp
loop
in
dec
add
mov
aaa
xor
cmp
adc
scas
jb
lcall
inc
jle
pop
out
push
movsl
add
adc
add
or
imul
test
out
mov
les
roll
xchg
icebp
mov
negb
mov
imul
mov
incl
inc
je
sti
adc
mov
cmp
sbb
push
js
lret
mov
mov
add
repz
push
sti
cmpsl
enter
pop
nop
push
dec
addr16
add
add
add
jp
shlb
xchg
dec
addr16
pop
out
xchg
lret
jge
mov
mov
mov
std
jg
pop
lret
idivb
push
dec
popf
cli
leave
xchg
js
cmp
loope
lcall
cld
fsubl
adcb
dec
sbb
outsl
rcll
inc
pop
push
pop
loop
dec
mov
cmc
std
fisubl
les
movsb
pop
dec
clc
jae
xor
push
mov
or
mov
mov
lds
out
cmp
push
jl
and
sub
jl
clc
add
lahf
push
gs
cld
sub
out
dec
jnp
and
bound
filds
mov
jle
pop
imul
divl
mov
jmp
add
lods
add
leave
and
xchg
pop
push
out
loopne
mov
dec
push
sub
xchg
push
sub
inc
loop
push
and
std
mov
dec
push
fsubrs
add
add
add
dec
mov
popf
dec
push
std
xchg
das
ret
repz
addr16
push
mov
jl
xor
adc
out
xlat
int
push
pop
pop
push
add
call
icebp
in
or
addr16
ret
negb
jecxz
fucomp
push
xchg
sub
push
or
arpl
jle
jp
adc
fsubl
xchg
push
scas
push
pop
mov
aam
dec
inc
cmc
iret
mov
pusha
imul
inc
mov
push
mov
notl
and
test
push
push
push
cmpsb
stc
out
inc
stos
ds
mov
lods
shlb
movsl
or
outsl
inc
int
std
push
jge
enter
test
fisubrs
daa
cmp
rcrb
cmc
fdivr
lret
push
dec
push
sub
arpl
loopne
inc
cld
mov
decb
lea
sbb
in
cltd
xor
fmulp
outsb
mov
push
mov
jns
add
add
and
jecxz
and
lcall
add
add
add
sbb
into
cmpsl
mov
js
gs
dec
inc
pop
cmp
bound
pop
test
lods
jmp
mov
adc
xchg
ds
out
shufps
inc
or
xor
in
and
out
jo
fnsave
ret
cmp
inc
aas
or
adc
cli
stos
pop
push
fisubrs
xor
arpl
loop
xlat
push
lcall
in
and
xor
jmp
mov
push
ret
adc
fsts
imul
int
push
fisttps
pop
adc
inc
mov
out
xor
pop
cli
and
sbb
lret
jnp
push
inc
pusha
push
xlat
sub
sbb
loope
insl
dec
imul
inc
mov
aaa
push
loope
and
jno
shll
and
mov
mov
fisttpl
fnstsw
mov
pop
mov
mov
dec
and
sbb
add
add
add
xchg
ficomps
cmp
lahf
jmp
pushf
sti
xor
add
add
add
imul
imul
mov
adc
push
jo
test
dec
and
leave
cmp
or
lods
xchg
in
mov
mov
iret
lds
cmpsb
xor
mov
add
push
xlat
fstl
sbb
xor
data16
push
xor
stc
lcall
adc
movsb
pop
lahf
push
xlat
mov
push
xchg
pop
add
or
shl
dec
lret
push
mov
push
leave
or
inc
mov
fsubp
psrlw
and
ss
inc
out
jnp
push
outsb
push
push
add
out
fsubrl
dec
fiaddl
stos
jbe
sqrtps
repz
mov
addr16
inc
sti
xchg
iret
sti
cmp
cmc
jae
xor
insl
cmp
cmp
cli
insb
sbb
bnd
shl
pop
sbb
es
mov
arpl
ja
sub
add
jae
xor
add
add
add
les
dec
mov
loope
xor
leave
jge
sbb
mov
jns
pop
cmc
clc
jl
inc
adc
push
movsb
inc
mov
pop
jae
int3
scas
mov
and
mov
xchg
xor
push
dec
dec
and
mov
push
sub
adc
flds
inc
outsb
insl
pop
insl
cmp
daa
cmp
das
dec
test
out
lods
push
scas
push
movsb
inc
outsb
xor
jbe
ret
jb
sub
lock
icebp
loope
mov
xchg
cld
les
out
std
pop
out
cmc
je
xor
fwait
dec
inc
push
cwtl
movsb
gs
xor
xor
hlt
pop
repnz
and
jecxz
xchg
addr16
and
jge
add
xchg
push
shlb
jl
loopw
pusha
daa
into
iret
push
xor
loope
mov
mov
mov
test
pop
xchg
rorl
cs
imul
mov
lock
mov
or
xchg
outsb
lds
addr16
add
add
add
ret
scas
jg
pop
out
fldcw
inc
lret
jg
dec
jl
mov
jnp
fcomi
xor
xchg
or
jb
enter
mov
insb
ja
fs
mov
jo
ds
data16
inc
lahf
pop
call
add
aad
scas
add
mov
pop
pop
fadds
enter
mov
mov
dec
inc
dec
add
lcall
enter
dec
adcl
js
dec
testb
or
dec
pop
push
add
inc
xlat
enterw
addb
cmp
push
adc
outsl
dec
fs
jge
lods
stos
xor
js
nop
xchg
fnstcw
mov
xchg
cmpsl
sbb
push
inc
inc
adc
dec
push
in
inc
stc
jl
les
adc
ret
mov
shlb
fwait
jne
outsb
pop
aad
es
add
mov
xchg
jg
pusha
add
add
sti
pop
jge
neg
hlt
add
packuswb
add
xchg
iret
xor
dec
or
bound
ret
ss
pop
repnz
clc
xlat
sub
lcall
mov
xchg
or
mov
int
sub
fyl2xp1
inc
cld
cmp
icebp
mov
sub
das
insb
fildll
rcll
dec
ret
sub
ucomiss
cmp
push
mov
sbb
sti
mov
filds
add
fdivrs
dec
pop
adc
pop
pop
cmp
lods
push
add
jnp
test
adc
cmpsl
cmp
dec
xchg
sbb
dec
test
out
mov
sub
stos
jo
ds
es
or
insb
jmp
stos
dec
push
or
mov
mov
pop
out
pop
jns
cmp
js
dec
xor
cmp
ret
bound
xor
dec
push
std
mov
jl
jbe
out
sbb
inc
out
dec
mov
xchg
das
pop
jno
lods
fildl
add
add
fsub
std
in
popf
in
stc
jmp
test
adc
add
add
sbb
sbb
sbb
dec
stos
mov
mov
push
inc
add
ret
cmp
add
jp
scas
icebp
xor
and
sbb
mov
or
mov
clc
cld
mov
jb
push
or
push
insb
sub
test
cmp
mov
inc
stos
push
es
push
or
push
dec
inc
adc
push
mov
mov
mov
cmp
ja
add
cmpsl
jmp
inc
pop
pop
dec
cs
mov
dec
jb
jle
std
sub
fmull
xchg
sahf
add
inc
arpl
mov
dec
dec
cmp
and
cwtl
dec
in
pop
jns
cmpsb
outsb
roll
push
stc
xchg
out
unpckhps
mov
outsb
or
lods
or
clc
stos
dec
sahf
jo
jb
mov
scas
pop
jns
and
push
fwait
lret
xchg
sbb
and
lods
mov
adc
add
jp
jnp
sti
xchg
jle
jp
lods
out
xchg
sbb
add
add
add
pop
pusha
pop
and
std
mov
ja
xchg
sbb
cmp
cmc
int
inc
insl
dec
les
adc
vmaxss
push
in
dec
std
sarb
movsl
xor
jge
ja
aam
lods
out
out
dec
repz
mov
jmp
adc
subl
or
cwtl
arpl
scas
and
testb
jo
aam
push
push
hlt
int3
or
fcompl
mov
lret
fwait
sbb
pop
jo
test
out
mov
enter
adc
fs
pop
or
pop
aas
jne
and
imul
cmp
mov
push
pop
insl
push
orl
inc
enter
sub
push
mov
inc
imul
in
adc
jmp
jno
dec
mov
inc
shrb
shrb
in
inc
lods
cmp
jl
inc
test
outsl
push
pop
dec
int3
outsb
jne
xchg
mov
push
sti
decb
mov
shlb
add
add
add
adc
pop
scas
xor
fsubrs
push
insb
mov
imulb
out
dec
lcall
push
jne
inc
fistpl
out
stc
cmp
call
loope
and
mov
test
movsb
xlat
loop
push
inc
sbb
dec
mov
push
mov
xchg
inc
xchg
jle
cmovle
mov
insb
mov
cmpb
arpl
adc
jp
test
test
or
mulb
sbb
notb
mov
imul
test
fsubr
cmp
pop
adc
adc
lcall
sbb
sbb
addr16
lods
ret
inc
pop
dec
pop
test
addr16
xorb
nop
or
inc
sbb
fldt
cmp
les
ss
sbb
orl
jbe
rol
lea
pop
dec
in
xchg
aaa
cmp
mov
mov
out
lock
add
push
ret
cmp
xor
hlt
inc
lahf
subb
cmp
add
add
add
inc
jnp
flds
cmpsl
pop
les
and
mov
fcoml
scas
sub
mov
loop
push
xchg
rolb
mov
rcr
int
cmpsl
jnp
test
xchg
push
scas
aaa
dec
inc
aad
scas
fcoml
inc
mov
gs
test
push
xchg
xor
sub
arpl
ss
loop
xor
test
jg
inc
pop
das
iret
jae
popf
repz
outsl
push
bound
lods
daa
pop
loop
xchg
push
mov
imul
repz
stc
jmp
xor
add
jae
xchg
push
dec
imul
jae
rclb
gs
push
xchg
movsl
push
scas
pop
and
outsb
test
jg
fs
jecxz
lods
pop
mov
mov
cmp
add
repnz
sub
jge
in
enter
lahf
or
add
xor
scas
in
jle
adc
or
imul
inc
incb
ljmp
pop
aaa
pop
cmp
add
add
add
add
pop
je
out
inc
fcoml
ljmp
pop
xchg
bound
roll
mov
jbe
xchg
jmp
std
fistps
iret
adc
mov
cs
ret
hlt
pop
sbb
sbb
jl
mov
pop
cs
push
test
arpl
mov
call
daa
sub
lahf
incl
cltd
test
sbb
arpl
int3
or
insb
call
xchg
adc
in
jmp
insb
ljmp
and
inc
pop
push
cmpsb
jge
ficomps
pop
dec
xchg
shlb
jg
xor
into
leave
int3
mov
inc
js
pop
dec
sub
and
shl
and
mov
clc
mov
mov
test
fadds
aas
sbb
scas
inc
or
mov
add
addr16
outsb
lock
lods
push
fnstcw
dec
xchg
popf
push
sbb
add
rclb
nop
lcall
cmp
add
add
add
xor
adc
adc
loop
sub
mov
in
mov
sub
cld
daa
sub
push
vpunpckhwd
jecxz
fisubl
sbb
add
shlb
xor
cmpsb
jmp
cwtl
sbb
mov
dec
pop
pop
sbb
fldl2e
sub
and
in
or
inc
inc
loop
pushf
push
inc
xor
cmpsl
enter
lock
out
mov
or
sbb
inc
push
adc
inc
fwait
rcrl
mov
int
stos
mov
pop
clc
into
push
adc
jg
outsl
and
loopne
test
test
lret
push
loopne
mov
jb
jge
cltd
imul
nop
es
and
xchg
adc
dec
jnp
sbb
mov
ret
pop
jbe
or
dec
enter
or
mov
xlat
pop
scas
rorl
pop
xchg
cmp
add
jl
dec
jbe
idivl
or
jle
xchg
addr16
add
add
add
push
inc
call
inc
mov
push
mov
sub
lods
xor
int3
div
sti
in
ljmp
and
nop
pop
pop
rorl
push
and
int3
dec
mov
ficoms
cmp
int
js
cmp
dec
sbb
push
pop
add
imul
aad
sub
or
call
scas
jp
sub
dec
sub
jmp
jp
add
mov
mov
cmpsl
push
dec
rcrl
mov
imul
mov
ljmp
mov
push
loope
mov
aam
arpl
mov
pop
adc
fcmovnbe
fs
fucomi
add
mov
pop
and
dec
mov
lods
add
jecxz
jne
dec
cmp
insb
mov
and
adc
ret
push
daa
aam
sbb
add
and
outsb
sub
stos
fs
jmp
leave
aas
adc
add
add
add
add
xchg
cmp
mov
pop
jb
mov
enter
xorl
ja
shr
ror
je
dec
mov
inc
pop
out
add
aam
stos
test
rorl
cmp
stos
mov
ror
mov
aam
je
scas
sbb
enter
sti
inc
sub
fs
xchg
xor
mov
push
and
aas
mov
insb
sbb
sub
or
mov
andb
loop
sbb
sti
and
inc
mov
and
xor
subb
pop
inc
adc
popa
nop
fstl
jo
pop
icebp
xchg
mov
imul
jg
lds
mov
mov
cmpsb
out
sbb
jg
lahf
in
and
rclb
fildll
cmp
mov
ljmp
inc
cmpb
lea
xchg
mov
jecxz
push
les
scas
fistpll
outsl
incb
add
add
add
test
add
vcvtss2si
mov
or
in
pop
push
sahf
sbb
cli
inc
aas
iret
movsb
inc
mov
popf
shll
loope
jp
add
jne
je
and
mov
jns
jne
dec
jecxz
dec
sub
push
push
push
ret
pop
inc
shrd
lahf
sub
ja
xchg
or
in
popa
jb
cmp
lret
cwtl
rcrl
int
lock
cmp
xchg
cmc
jb
add
mov
sub
ljmp
shll
sti
sbbb
lret
sbb
dec
xor
adc
mov
stos
sbbl
mov
mov
cmpsl
xchg
push
jo
rcll
adc
int
dec
mov
mov
enter
push
les
jo
outsl
fmulp
fisubrs
stc
pop
idivb
xor
cmpsb
mov
arpl
add
jle
add
add
cmp
movsb
push
sbb
fs
das
addr16
add
add
add
pop
pushf
mov
mov
popf
push
pop
add
jecxz
loope
cmp
push
mov
jo
out
xchg
add
push
sahf
or
dec
test
jae
mov
fxch
push
dec
imul
jg
sbb
fwait
push
das
fnstsw
movsb
leave
movsb
daa
jge
push
push
pop
loopne
mov
mov
push
dec
mov
out
cmpsl
sub
sub
mov
mov
push
xchg
sbb
inc
out
dec
adcl
test
add
mov
lock
jns
cli
lds
loope
dec
or
and
xlat
divb
clc
test
icebp
mov
push
inc
jno
jb
cs
mov
ds
xchg
cmpsb
stos
add
aad
out
mov
xchg
sbb
xchg
add
jge
jno
add
add
outsl
lret
mov
out
jmp
and
add
add
add
push
dec
cmp
xchg
call
scas
mov
cmp
out
std
and
test
push
rclb
test
std
xor
mov
fidivrl
subl
std
add
sub
fidivrl
push
fistps
cmpsb
push
xchg
int
popf
pusha
pusha
loope
or
push
ficompl
mov
push
fisttpl
cmp
inc
jo
fistl
push
daa
cmc
xor
sub
rorb
cmp
outsb
push
lock
les
and
cwtl
dec
inc
sti
sub
stc
rep
fdivrl
insl
pop
or
lahf
in
sahf
scas
dec
hlt
test
outsb
and
push
dec
sti
xchg
fwait
fwait
jb
xchg
fdivs
sbbb
lret
popa
movsl
jb
push
stc
pop
adc
dec
add
addr16
fwait
jecxz
out
dec
clc
add
inc
sahf
mov
push
leave
aam
inc
arpl
in
and
dec
rorl
add
add
repz
cmp
lods
repz
mov
lods
dec
cmp
inc
add
add
add
pop
jnp
xor
lock
sbb
outsl
push
call
mov
pop
sar
std
test
repnz
inc
loope
out
and
sub
xlat
test
jle
rolb
jne
out
push
and
lea
push
push
xlat
mov
stos
icebp
outsl
outsb
stos
cmovle
insb
rorb
xchg
lock
mov
cwtl
pop
push
dec
xlat
jmp
mov
push
sbb
test
cld
fs
mov
movzwl
mov
jl
pop
fs
stos
divb
lods
dec
rcrb
jl
jno
pop
mov
mov
and
jns
ljmp
push
mov
call
scas
lret
sbbl
and
add
out
cmp
cmp
sbb
jl
imul
test
xor
and
pop
push
or
aaa
cltd
das
lret
push
push
push
mov
sbb
aas
daa
push
cld
push
std
jmp
dec
push
push
shlb
add
add
add
pop
fsts
sub
adc
rcl
inc
push
fcomp
lahf
out
imul
pop
sti
dec
fimuls
dec
lock
int
sti
pop
test
and
cli
lock
pushf
and
dec
gs
mov
test
adc
xchg
iret
repz
sbbb
push
push
xor
inc
cmp
cmpb
push
outsl
cs
imul
rorb
mov
addr16
mov
pusha
lahf
filds
or
jp
jnp
in
adc
aam
sbb
xlat
mov
adc
inc
cmc
stos
adc
aad
insb
ret
lahf
mov
mov
jbe
test
dec
add
push
mov
push
sahf
insb
lret
push
fadds
jnp
push
push
push
or
jl
xchg
xchg
scas
imul
dec
push
outsb
push
insb
call
inc
xchg
push
adc
sbb
outsb
add
mov
cli
cmc
sbb
jle
pop
rol
sub
mov
add
add
add
sbb
dec
push
out
aad
pop
push
in
addr16
add
add
add
xchg
mov
aas
es
loope
xchg
xchg
sub
cmp
in
or
push
cmp
ret
pop
pop
fistl
bound
push
das
fidivs
bound
into
aaa
jo
inc
and
icebp
pop
sti
rcrl
and
mov
enter
lcall
aad
out
sub
jp
jmp
pop
adc
push
fsubrl
scas
adc
cmpsl
fs
fistpl
inc
pusha
pop
ret
push
cmp
aam
cmovno
mov
call
rclb
hlt
xchg
dec
insb
daa
jno
les
inc
aam
cmp
scas
cmpsb
idivb
jne
jle
fadds
nop
rclb
es
and
lret
js
aad
xor
movsb
out
sub
cmp
je
inc
sbbb
cmpsb
lret
pop
inc
xchg
cmp
insl
push
pop
mov
pop
ss
stos
add
push
mov
or
push
add
add
add
repnz
int
cmp
ja
aam
test
push
imul
outsb
out
pop
xchg
out
jo
imul
cmp
shl
cli
sarl
mov
fmuls
mov
xchg
outsb
arpl
mov
addr16
adc
mov
leave
add
sbb
xor
jo
das
sub
push
jl
add
add
scas
incl
jne,pt
jbe
fnstsw
fcom
dec
push
dec
jb
push
or
mov
pop
ljmp
push
orl
push
mov
js
mov
mov
push
xlat
les
mov
lea
and
and
icebp
popf
sub
flds
out
pop
jg
jnp
mov
jbe
push
mov
mov
xchg
mov
jb
sar
inc
hlt
lret
jg
xchg
pop
call
dec
lahf
cltd
out
movsl
push
or
push
mov
add
add
jg
xchg
orl
push
addr16
add
add
add
xchg
add
dec
inc
aad
das
and
fmulp
insb
clc
pop
dec
push
and
inc
insl
inc
ljmp
jge
mov
jmp
mov
loop
pop
or
insb
push
inc
int
jge
les
js
popa
test
jae
push
jg
pop
js
lea
or
out
mov
sbb
mov
push
cmp
pop
sub
add
or
jmp
or
pop
mov
cld
and
cmp
gs
and
or
arpl
stos
lahf
and
daa
cli
je
cmp
stc
jl
pop
push
jl
insl
mov
jmp
sbb
daa
shrd
scas
insb
or
jo
add
fs
insb
lret
fdivl
cmp
mov
lahf
sub
mov
inc
ss
sub
iret
data16
ja
pop
stos
adc
testl
add
add
push
dec
lret
jmp
imul
aaa
je
xlat
mov
add
add
add
aam
fcmovbe
mov
mov
popl
fistps
mov
lock
imul
rol
lock
ljmp
xor
mov
shll
add
mov
xor
adc
mov
fnsave
jmp
and
ds
ljmp
sti
mov
inc
push
sbb
les
jg
jmp
insl
js
mov
les
pop
mov
pop
test
stos
inc
loop
enter
push
dec
cltd
inc
inc
cmp
out
enter
mov
sbb
lret
lock
xchg
pop
sub
jecxz
das
xchg
push
test
adcl
rcll
bound
sbb
push
mov
pop
and
adc
fs
roll
jle
stos
sbb
scas
mov
lds
cmc
cwtl
xchg
push
sub
inc
add
add
add
dec
inc
int3
pop
add
inc
and
gs
jno
sbb
popf
add
in
cltd
outsl
iret
add
jno
jo
adc
lods
push
mov
jo
fldenv
ret
xor
push
jbe
or
stc
loop
inc
scas
in
sub
mov
mov
in
movsl
test
aas
mov
incl
sti
pop
jge
test
rol
mov
push
cld
xchg
mov
push
insb
fwait
ljmp
scas
xchg
push
mov
adc
cmp
sub
xorl
js
push
dec
cs
fcomi
push
push
push
aaa
lock
loop
stc
or
scas
sbb
std
dec
sub
pop
inc
rcr
es
sub
cmc
cmp
iret
frstor
jnp
and
fldenv
sti
jge
ret
mov
sbb
push
dec
mov
sub
jns
xor
jg
add
addr16
add
add
add
arpl
inc
sbb
addr16
jp
shlb
push
cmp
cmpsb
jle
decb
and
pop
lock
adc
hlt
xlat
fwait
gs
lea
push
mov
cld
ljmp
in
hlt
lds
adc
int3
adcb
inc
dec
jno
test
call
push
sti
fldl
xorb
add
mov
mov
hlt
fiadds
sub
dec
jg
inc
sub
pop
pop
aas
outsl
bound
jns
lock
repnz
les
sub
lret
in
outsl
pop
sar
repnz
nop
add
pusha
insl
movl
xor
add
jb
sti
jnp
mov
test
andb
shrb
mov
pop
test
xor
adcb
test
aaa
inc
inc
cmp
js
ret
jg
decl
rol
in
out
rcrb
addr16
add
add
add
push
cltd
or
adc
adc
test
pop
fmull
lret
pop
dec
and
mov
xchg
ljmp
inc
imul
mov
mov
inc
lock
jg
test
sub
in
jo
inc
imul
lret
mov
js
cmc
and
xor
and
outsb
mov
jb
lcall
movsb
jnp
jbe
fwait
jb,pt
add
fstps
push
cwtl
sub
cmpsb
ret
paddd
lret
cmp
push
xlat
fiaddl
aas
sub
pop
adc
jg
xchg
push
xor
in
sub
cld
inc
and
push
and
push
shrb
mov
adc
mov
add
xchg
xor
js
int
rcr
sahf
shll
popf
cli
je
jae
lods
clc
and
aaa
jle
push
into
lods
adc
add
add
das
mov
out
aad
lret
mov
add
add
add
popa
mov
sbb
jg
shlb
ret
xlat
scas
popf
movsl
imul
divl
jb
dec
sbb
je
push
imul
sbb
push
sti
add
xchg
xor
sbb
mov
rol
pop
sub
lds
andl
in
in
xor
fistpl
pop
jp
test
aas
sbb
xchg
sub
ja
lods
ljmp
cmpsb
lods
out
jge
movsb
iret
into
xor
je
cld
sbb
fwait
pushf
add
jp
decl
arpl
inc
add
sahf
test
inc
icebp
mov
push
mov
push
add
sti
push
call
sbb
xchg
sub
cmp
add
enter
dec
push
pop
leave
call
dec
test
in
orb
ret
pop
xor
add
add
hlt
gs
dec
adc
outsl
hlt
addr16
add
add
add
lea
std
and
call
rorb
pop
sar
int3
mov
dec
or
adc
movsb
xlat
jg
mov
xchg
das
jae
inc
mov
rcll
in
inc
mov
xor
or
unpckhps
push
jge
lods
cwtl
or
and
and
sbb
mull
cwtl
hlt
gs
decb
popf
dec
out
lds
jg
push
in
sarb
scas
dec
jo
jg
pop
out
and
sbb
aas
mov
pop
push
or
subl
lods
pop
and
cltd
out
mov
inc
call
ret
xchg
mov
xchg
mov
adc
test
lahf
jne
inc
dec
mov
jge
mov
lods
inc
pop
insl
icebp
repnz
xchg
adc
or
mov
mov
stc
stos
add
add
add
aas
gs
pop
repnz
dec
add
add
add
mov
out
add
fcmovbe
inc
pop
push
jecxz
sub
ret
sahf
xchg
pop
int3
pop
mov
test
lret
sahf
scas
orl
aaa
rcll
sbb
push
fisubrs
test
push
pop
dec
add
lcall
aam
fcoms
movsl
mov
or
add
pop
add
jnp
aam
mov
dec
sub
cltd
jno
stos
enter
dec
jg
data16
pop
inc
lret
insl
push
inc
in
xchg
xlat
mov
dec
pusha
jns
xor
lahf
jb
add
xchg
jb
es
jb
adc
mov
dec
insb
ret
jmp
in
lock
insl
jle
mov
sub
pop
ret
mov
ljmp
sti
jmp
repnz
cmp
push
cmp
outsb
popa
fwait
sub
stc
add
cmp
sub
pop
test
aaa
push
push
sbb
sti
lcall
add
add
out
fisttpll
lock
fsubs
addr16
add
add
add
ss
fdivs
inc
fstpl
outsb
mov
cmp
push
sub
arpl
fs
jp
jmp
jne
shll
je
jns
add
sahf
add
in
fistps
andl
xchg
pop
pop
jg
dec
imul
scas
rorl
movsb
adc
mov
xchg
lret
inc
cmp
push
jge
adc
roll
in
inc
jae
cmp
or
imul
lods
outsl
add
clc
jl
jb
cmp
clc
jmp
jmp
push
pop
mov
cs
addr16
cwtl
aas
push
movsl
mov
imul
xor
xor
mov
lcall
adc
dec
sbb
mov
ret
iret
jb
lods
sbb
mov
sbb
mov
insl
adcb
out
test
jge
xchg
adc
fildll
mov
ljmp
add
add
add
xor
pop
movsl
push
mov
in
and
mov
scas
or
cmp
push
int
test
cmpsb
adc
adc
and
dec
jmp
fisubrl
sub
pop
push
pop
jl
rcrl
out
fs
in
imul
stos
push
mov
out
fxch
icebp
or
pop
jmpw
es
sub
popf
sarl
mov
ljmp
xchg
push
dec
push
adc
enter
cmc
xlat
mov
push
xchg
inc
dec
xchg
push
vcvttss2si
stos
mov
jne
cmp
into
sbb
mov
push
in
adc
lret
adc
cmp
jbe
loopne
lods
popa
ret
ljmp
xor
lods
xchg
test
or
inc
or
sbb
push
push
test
push
adc
pop
addr16
mov
aam
movsl
sbb
push
sbb
jmpw
fnstcw
jo
sahf
jb
cs
addr16
add
add
add
in
daa
cmp
mov
mov
and
dec
cmp
push
adc
mov
sbb
jl
mov
std
cmp
jecxz
inc
inc
into
fbstp
pusha
push
in
pusha
push
mov
mov
outsb
pop
xor
mov
scas
or
test
test
divb
lret
arpl
mov
xchg
push
push
enter
cmp
adc
ss
repnz
ds
dec
fnstcw
fiaddl
xor
mov
sahf
inc
clc
add
sub
xchg
in
pop
das
in
lcall
int3
xchg
bound
or
pop
iret
inc
pop
mov
or
mov
xor
lcall
jno
decb
pop
pop
xchg
out
mov
arpl
jno
xlat
lea
in
add
push
in
xor
out
push
imul
in
ret
cmp
imul
out
mov
mov
cmp
inc
addr16
add
add
add
dec
sub
or
mov
push
xor
mov
push
dec
pop
and
and
cli
cmp
stos
std
aaa
daa
push
test
jmp
lea
adc
cmp
xchg
lea
dec
js
aaa
or
scas
or
popa
cmp
mov
orb
sti
leave
add
iret
loope
shl
stc
sahf
test
int
jmp
fwait
in
fistpl
or
pop
mov
inc
call
in
jmp
fsubrp
jg
sti
jg
jge
mov
mov
dec
aas
cmpsl
mov
xor
fnstenv
mov
push
movsb
cmp
push
mov
fwait
inc
cmc
mov
mov
inc
cmp
sbb
cmpl
cmp
jbe
push
call
scas
fcoml
in
bound
loope
nop
and
dec
inc
add
mov
add
out
mov
xchg
js
add
dec
stc
mov
ljmp
addr16
add
add
add
xor
mov
test
call
adc
jecxz
xchg
xchg
push
mov
jl
mov
repnz
pusha
mov
bound
cli
lret
gs
outsb
cmpsl
or
mov
shll
ljmp
sub
movsl
cmp
ja
adc
cmp
inc
push
outsl
das
lods
movsb
jmp
ret
adc
sub
rorl
test
jae
inc
rcll
pop
cwtl
jns
imul
cld
ret
test
in
mov
aaa
cmc
lret
aaa
mov
shll
pop
fiadds
loop
xorb
out
ret
enter
or
clc
mov
into
fmul
mov
jns
push
sbb
adc
into
mov
rcl
pop
cmp
add
je
mov
and
dec
jne
movsl
xchg
cmp
jle
jg
cld
lcall
cwtl
addr16
add
add
add
inc
ss
pusha
dec
lods
les
lds
sbb
mov
shlb
push
push
jb
adcb
scas
mov
stos
jmp
add
icebp
and
push
mov
jmp
cmpsb
cltd
sub
mov
pop
mov
dec
shl
and
cwtl
fdivs
push
push
push
sbb
leave
mov
loop
mov
out
mov
rcrb
inc
jae
add
mov
stos
adc
lret
imul
and
jo
sub
add
add
lds
ss
ss
and
divl
sub
inc
jg
into
push
push
sbb
mov
inc
popa
lds
in
sarb
adc
mov
sub
leave
cltd
das
or
xchg
mov
push
lcall
add
mov
xchg
mov
pop
inc
ficoml
push
add
add
add
and
cmpsl
in
dec
or
jbe
out
add
ljmp
push
dec
sbb
fucomp
in
add
ret
std
fucomip
sarb
adc
loope
mov
jno
cmp
jb
mov
mov
repnz
fwait
ja
divl
inc
mov
out
mov
or
pusha
adc
dec
xor
bound
push
lahf
adc
mov
dec
inc
aad
fstpt
pop
push
add
jbe
cs
xlat
ja
mov
adc
outsb
fldl
ds
cmp
mov
mov
mov
pop
aam
or
push
testb
mov
dec
call
out
fbld
roll
into
sti
sub
andb
xor
je
jp
adc
and
je
pop
shll
mov
inc
pop
pop
fsubs
and
xor
sub
inc
in
adc
or
mov
and
adc
addr16
add
add
add
inc
inc
aaa
scas
psadbw
ljmp
fadds
arpl
lds
and
in
call
test
lock
loop
ret
mov
in
shrl
stos
mov
push
aas
mov
push
xor
push
mov
hlt
out
push
mov
ja
fcompl
cs
push
into
inc
sti
aam
xchg
cmc
popf
shlb
fidivs
mov
pop
pop
jno
out
push
xor
jne
fcomp
std
xchg
push
fisubrs
mov
test
mov
pop
dec
inc
jg
mov
je
lahf
fdivl
add
in
bound
cmc
dec
jle
pop
mov
cmc
inc
lods
push
outsb
enter
mov
push
inc
mov
shl
data16
push
imul
dec
pop
ffree
or
insb
cmpsl
sahf
fistpl
cmp
mov
rcrl
setns
and
add
fwait
into
lods
ss
push
add
add
sub
cmp
ret
or
fldenv
popf
nop
addr16
add
add
add
xchg
add
cmp
and
dec
push
gs
cs
xchg
jnp
add
in
jo
xor
cmp
push
sbb
inc
jnp
inc
repnz
sar
cmp
fwait
imul
es
fdivrs
xor
sbb
lods
into
add
int
xor
fists
hlt
push
pop
pusha
dec
pop
mov
lret
pop
xchg
or
pusha
pop
shll
mov
lea
jle
and
popa
xor
and
mov
jb
push
lret
cmpsl
lea
ret
mov
xchg
and
jbe
mov
sbb
sbb
cli
mov
hlt
jb
dec
xchg
mov
lods
nop
sti
dec
bnd
cli
cld
mov
imul
dec
add
xlat
fstl
nop
outsb
xor
pop
mov
sbb
add
hlt
dec
cmp
push
loope
popf
or
movsb
xor
cmp
ja
cli
or
push
shll
out
pop
pop
pushf
push
lret
add
addr16
add
add
add
jp
jmp
out
addb
sub
in
inc
lret
adc
cmp
mov
icebp
in
xor
pop
adcl
stos
rolb
les
or
fisttpl
mov
pusha
xchg
dec
lret
sbbl
mov
xor
sti
xchg
adc
stos
xor
popf
out
cli
cmp
mov
aam
ljmp
shl
mov
js
sub
dec
push
jmp
mov
xchg
mov
std
add
mov
icebp
sbb
stos
cmp
mov
xchg
mov
nop
mov
xchg
aam
adc
inc
push
scas
ds
mov
xor
and
sbb
push
jno
fs
test
xchg
subl
iret
sbb
stos
add
adc
pop
jmp
dec
jmp
sub
cmp
pop
fucom
and
push
adcb
daa
out
or
mov
stos
push
lcall
hlt
mov
popfw
xor
push
add
add
add
mov
mov
ds
xchg
jl
dec
scas
aam
fisttpl
mov
add
gs
fldcw
hlt
mov
mov
orl
add
mov
dec
add
int
sub
shll
lret
popf
and
push
or
stc
mov
aam
pop
inc
mov
sahf
int
mov
icebp
pop
and
adc
outsb
cwtl
xchg
jae
jg
jecxz
in
std
mov
push
aaa
lock
sub
insl
sbb
push
or
push
sbb
inc
jp
outsl
ds
pop
nop
cmp
or
jle
add
mov
mov
scas
sbbb
clc
pop
out
inc
hlt
dec
adc
cmpsb
aaa
into
xchg
mov
and
inc
hlt
in
mov
pop
jb
sub
cmp
ja
bswap
jmp
out
push
jg
add
icebp
imul
jecxz
pop
sub
add
add
jbe
idiv
imul
lret
pusha
jp
pop
add
add
add
gs
xor
mov
hlt
ret
sbbl
and
insb
adc
cmp
jno
fnstcw
stos
mov
lret
mov
repz
ljmp
cmovo
arpl
cmp
and
sti
lcall
fcoms
xchg
loope
mov
js
enter
call
pop
cmp
imul
pop
jns
stc
pusha
or
push
adc
push
popf
in
in
repz
mov
movsl
stos
aam
xchg
jmp
sahf
adc
lods
sbb
sub
in
fisubrl
repz
cwtl
mov
jl
add
xchg
mov
mov
loopne
into
in
xlat
lcall
fnsave
mov
xchg
cmp
dec
fisttpll
insb
popa
hlt
fsts
fcoml
cli
movsb
mov
je
icebp
xchg
cmp
pop
clc
xchg
pop
and
test
notl
xchg
add
fwait
cmp
stos
sarb
addr16
add
add
add
imul
pop
out
popf
scas
inc
pop
ja
sbb
int
data16
push
rcrl
repnz
jno
push
cltd
ret
jg
fdivrs
mov
lcall
jle
hlt
test
bound
xchg
jp
bound
push
and
imul
mov
xchg
jg
xchg
pusha
pop
cwtl
push
scas
faddl
jne
inc
ret
or
mov
pop
mov
aaa
push
mov
pop
adc
stc
in
mov
icebp
jge
add
xor
mov
lahf
pop
jecxz
jo
sbb
mov
stos
xor
outsl
cmpb
lret
cwtl
cmp
fiadds
add
jecxz
xor
jecxz
aaa
mov
mov
je
push
fdivr
ljmp
insl
rcrb
vphadduwq
mov
mov
aad
fwait
or
scas
icebp
out
mov
cltd
inc
push
clc
mov
and
hlt
xchg
nop
aam
addr16
add
add
add
fwait
divb
pop
pushf
dec
push
or
into
adc
neg
cmpsb
fistpll
insl
pop
pop
xchg
fnsave
iret
jle
mov
xlat
lods
adc
xchg
sbb
fstpt
or
ljmp
cmp
in
insl
fst
sbb
ljmp
inc
add
jecxz
jl
sti
mov
xlat
scas
mov
add
jno
lds
mov
stos
jo
pop
jne
hlt
fidivl
stos
xchg
shrb
and
or
es
inc
push
mov
sub
ss
scas
sbb
push
aaa
push
enter
mov
mov
mov
xchg
pop
in
leave
xchg
jnp
mov
mov
icebp
ret
stc
pushf
adc
aam
sti
sbb
mov
push
mov
stos
mov
mov
lret
and
cmp
pop
movsl
js
cmp
xchg
imull
push
das
xchg
adc
add
scas
xchg
push
adc
out
mov
inc
mov
clc
addr16
add
add
add
jb
inc
sbb
or
arpl
stc
jb
sar
cmp
jl
add
sub
inc
sub
faddl
push
aaa
std
pop
cmp
mov
frstor
jo
scas
push
push
adc
push
mov
shrl
leave
sub
dec
lea
clc
std
add
mov
jnp
mov
adc
add
les
jmp
bound
jb
daa
pop
push
icebp
xchg
cli
sub
lods
rcrl
arpl
clc
iret
aas
mov
enter
ljmp
jns
jmp
adc
call
movsl
xor
mov
sub
push
jmp
xorl
std
mov
and
add
inc
sub
addl
rcrb
scas
hlt
test
mov
mov
int
out
xchg
or
fnstenv
xchg
mov
jb
adc
je
test
or
fdivs
jns
call
add
add
add
lock
lret
insb
int
je
popa
or
cwtl
push
cmpsb
outsb
mov
mov
cmp
orl
pop
je
sub
add
fsubrl
and
jmp
dec
and
mov
pop
ss
aam
fsubs
pusha
cltd
popa
cmp
scas
mov
loop
cmp
cmp
mov
sarl
cmp
mov
lea
dec
cmp
sub
push
mul
lock
rolb
xor
into
or
in
inc
cli
cli
push
negb
je
cmp
test
ds
xchg
adc
push
mov
jmp
pop
mov
and
lcall
add
repz
mov
and
xchg
jmp
pop
lods
lds
pop
cwtl
fsubrp
fnstsw
cmp
cltd
jp
lods
xchg
popf
in
aas
jae
loope
and
jb
imul
mov
and
das
cmp
pusha
shr
movsl
addr16
add
add
add
popf
jb
fwait
fs
repz
xchg
mov
jo
or
and
mov
rolb
iret
xor
push
adc
xchg
jae
popf
int
ror
and
mov
or
cwtl
icebp
inc
mov
popf
mov
mov
push
xor
mov
and
jns
hlt
out
pop
push
imul
push
mov
mov
push
sub
roll
fistpl
sub
mov
dec
cwtl
outsb
sub
es
pop
mov
dec
jb
ds
dec
fwait
push
xchg
loop
jb
jle
mov
stos
lret
cmpb
shl
clc
pop
cli
xchg
stos
out
lods
sub
lods
ja
push
mov
in
push
jb
cld
xor
push
mov
shlb
mov
add
or
nop
in
xlat
mov
sarb
and
cmp
adc
ret
lcall
and
or
jl
push
pusha
push
fsubl
mov
ja
mov
ficoms
add
add
add
xor
cli
out
dec
jns
push
cmp
mov
aas
xchg
xchg
movl
push
test
cmc
jo
inc
lahf
rcrb
xlat
xchg
adc
push
adc
jg
or
cmc
sti
and
loope
push
jbe
sbb
mov
push
test
jno
nop
cld
add
mov
pop
das
orl
xchg
sar
adc
pop
std
repz
in
mov
ficomps
shlb
push
iret
pop
xor
and
pop
or
std
js
lret
rcl
sub
dec
mov
dec
dec
andb
mov
sahf
add
loopne
adc
ljmp
je
or
xchg
sub
stos
adc
scas
mov
inc
pop
loope
ljmp
mov
xlat
ret
pop
stc
lret
int3
jmp
mov
mov
or
pop
inc
inc
imul
adc
mov
seta
fbstp
scas
adc
lahf
xlat
out
cld
mov
pop
add
add
add
add
push
cmc
sub
rol
adc
and
push
cmp
out
mov
cmpsl
add
push
sbb
pop
pop
mov
adc
and
sbb
cmpsb
xchg
nop
xchg
sbb
and
add
xchg
lret
xchg
push
fbld
in
pop
lods
mov
jb
jns
fldt
aaa
outsl
mov
jmp
in
cmpsb
dec
pop
xchg
and
ds
cmpsb
pcmpgtw
outsb
or
xchg
xchg
data16
mov
pop
mov
insl
outsb
es
jo
loope
sbb
dec
and
cs
xor
lret
or
ret
call
or
mov
fistl
mov
jecxz
gs
push
add
loope
arpl
addr16
aas
push
and
sub
dec
push
dec
roll
test
test
mov
inc
mov
mov
in
mov
dec
addr16
add
add
add
adc
and
add
orl
js
cmp
icebp
jmp
xchg
fcomps
imul
mov
pusha
outsl
inc
xor
push
sbb
xchg
push
sub
mov
fldcw
in
sti
rorb
pusha
int
out
movsb
stos
dec
in
inc
jbe
fwait
inc
sub
mov
int3
imul
jl
pushf
push
pusha
jb
add
jb
sub
inc
repnz
or
movsl
ja
inc
cli
sub
push
mov
lahf
or
pop
adcl
cltd
pop
mov
and
rcrl
adc
addr16
push
dec
sar
lahf
enter
dec
scas
mov
rorl
mov
out
test
or
cld
clc
mov
imul
daa
filds
mov
out
add
add
sub
cmpsb
dec
sbb
pusha
cld
and
jecxz
xchg
pop
mov
repz
add
add
push
into
push
push
inc
lahf
mov
addr16
add
add
add
and
and
add
stos
sub
dec
mov
push
xchg
repz
or
mov
dec
cmp
out
notb
sahf
int3
mov
pop
rcll
sbb
loopne
lds
cmpsl
or
lcall
cmp
mov
sti
jno
or
add
and
pop
cmpsl
mov
and
rcr
idivl
jb
lods
jae
adc
mov
fsts
inc
mov
cmp
shrb
fstps
mov
fxch
hlt
mov
xchg
cmp
mov
lea
jno
cmp
xchg
es
jecxz
jecxz
in
xchg
out
dec
adc
pop
leave
jl
aas
jecxz
ffree
mov
insl
testb
sub
fldt
in
inc
xlat
mov
mov
inc
enter
inc
xchg
sub
ret
js
or
and
adc
fcoms
and
mov
jg
or
bound
add
add
add
jge
xchg
jecxz
movsb
imul
je
mov
cmp
in
dec
and
mov
sti
in
push
xchg
jle
inc
dec
pushf
mov
mov
movsl
adc
or
test
int3
mov
inc
add
das
xor
int3
loopne
arpl
popf
or
les
or
xor
add
xchg
xchg
sbb
mov
ds
in
sub
and
or
add
pop
xor
jno
cwtl
rol
mov
aam
dec
in
ja
cmp
out
lods
sahf
call
rcll
jbe
lret
jns
xor
nop
pusha
mov
js
out
idiv
and
and
jmp
xchg
and
movl
jle
xorl
rolb
mov
pop
xchg
inc
idivl
or
mov
fwait
inc
addb
xor
lahf
pop
fcmovb
fcmovnb
lahf
pop
cmpsl
jne
mov
cmp
add
add
add
stos
cltd
mov
push
movsb
in
ljmp
inc
ds
push
mov
mov
mov
mov
sbb
stos
test
int
int3
xor
scas
test
jo
dec
mov
movsb
fiaddl
sbbl
lahf
outsl
js
or
jg
iret
and
enter
inc
jg
push
dec
outsl
aas
mov
outsl
push
mov
imul
mov
or
imul
xchg
loopne
loope
mov
pop
pop
sub
mov
add
out
push
fisttpl
gs
push
dec
outsb
dec
push
lret
insl
fistpl
jl
sti
negl
jle
aam
xor
push
dec
outsl
xchg
mov
das
lock
inc
iret
ds
scas
sbbb
popf
inc
mov
cmpsb
xor
ret
shl
sbb
adc
jae
inc
test
add
or
out
sahf
pop
testl
int
and
add
add
add
mov
iret
mov
pop
data16
xchg
sarb
call
pop
push
das
and
imul
das
loopne
pop
or
daa
cmp
cld
sbb
imull
xchg
cltd
xor
cs
cltd
rolb
lcall
rolb
repnz
ret
sub
xlat
adc
aad
push
dec
stos
test
add
aas
arpl
xor
lcall
fildll
push
aam
inc
xchg
or
test
xor
ljmp
mov
xchg
inc
cli
call
out
jge
mov
jo
or
cmp
jns
jnp
imul
fisubrl
and
dec
push
sbb
daa
xchg
pop
or
xor
jns
push
clc
mov
stos
mov
adcb
data16
jp
js
insb
push
stos
add
ret
xchg
ret
fstpl
inc
pop
mov
fstps
lea
add
add
add
xchg
int3
std
lea
xchg
or
push
lds
rcr
xchg
push
xchg
mov
iret
adc
mov
pop
mov
imul
into
cmp
sbb
jl
dec
rol
inc
cmp
jmp
dec
mov
ret
xchg
and
push
fcomps
jb
in
aas
inc
inc
pop
and
sub
mov
sub
mov
pop
loopne
mov
aas
and
adc
sub
shrl
jo
sarb
add
outsb
stos
lret
mov
fs
add
lret
mov
or
jl,pt
adc
ds
pop
mov
and
shrl
stc
out
imul
loopne
hlt
cmpsl
pop
sub
in
pushf
lods
test
inc
ljmp
jns,pt
int
fsubs
popf
ret
int3
test
enter
jbe
or
negb
xchg
push
mov
fsubrs
in
jle
cs
xchg
rolb
add
add
repnz
movsb
jle
arpl
jne
add
add
add
jno
dec
sbb
test
lds
sarb
addr16
pop
add
insl
dec
ljmp
aaa
xchg
pop
cmpsb
mov
add
add
mov
lods
xchg
js
mov
in
nop
ret
jmp
int
popf
inc
loopne
loope
std
inc
pop
push
js
inc
popf
mov
or
outsb
sub
ret
call
test
xor
cmp
xchg
sbb
daa
in
call
mov
add
lahf
ret
popf
jo
jns
nop
pop
scas
insb
movsb
lock
lahf
aam
push
mov
test
sti
enter
add
bndstx
xchg
dec
leave
aas
stos
cwtl
xchg
jbe
filds
fwait
pop
push
adc
lea
leave
outsb
mov
test
ljmp
jmp
in
cmp
test
mov
outsl
repnz
insb
push
stos
sub
stos
out
jmp
sub
push
outsl
push
out
addr16
add
add
sbb
lahf
jmp
mov
ret
inc
aas
xor
into
adcl
fldenv
enter
mov
imul
inc
xor
mov
xchg
adc
xchg
call
das
dec
enter
or
fidivrs
fiadds
jae
mov
sar
popf
or
xchg
push
sub
jge
cmp
aad
jecxz
and
cmp
call
std
adc
aaa
inc
ror
out
cwtl
in
xor
mov
inc
mov
jg
outsb
pop
push
aas
push
sahf
mov
dec
shrl
xlat
mov
aaa
subl
in
int
aam
xor
test
mov
pushf
and
in
fdivl
push
cs
rclb
imul
add
cld
push
or
mov
imul
lret
clc
ds
das
inc
push
xor
flds
add
add
mov
fnstenv
pop
dec
adc
add
add
add
mov
sub
xchg
xor
pop
adc
dec
dec
add
fistpl
repnz
xor
sbb
mov
sbb
push
clc
sub
ss
iret
xchg
je
fstps
repnz
enter
mov
jle
mov
std
mov
add
in
shrl
and
out
loope
fldt
mov
pop
fucomi
aad
scas
cmpsl
mov
pop
int3
lods
xlat
pop
lods
jl
jmp
outsl
fcomp
push
mov
hlt
out
jns
stos
jge
into
xchg
lods
add
stos
je
adc
lret
mov
int3
in
jmp
push
xlat
subl
sub
pop
fbstp
push
lcall
insb
lret
jp
push
cs
lcall
repnz
shl
imul
movsl
mov
sbb
aaa
adc
cmpb
pop
arpl
and
jnp
pop
jl
push
cwtl
pop
cld
je
jbe
jns
sbb
push
and
loop
imul
add
out
mov
imul
lods
loope
fidivs
dec
mov
mov
movsl
je
mov
in
push
scas
or
jg
aaa
sbb
int
cltd
pusha
xchg
shl
and
mov
cmp
pop
inc
mov
aaa
shlb
pop
mov
lock
sub
jp
mov
in
movsl
cmp
sahf
into
imul
lock
sbb
outsl
jp
mov
iret
pop
mov
add
in
jo
or
test
ds
add
sbb
push
push
xchg
mov
mov
dec
nop
js
adc
cld
or
dec
stos
das
cmp
int3
adc
mov
or
adc
mov
icebp
inc
movsl
sub
mov
ljmp
jns
dec
jb
lcall
les
xor
arpl
rclb
add
add
cltd
jmp
fildl
or
repnz
sbb
add
add
add
xor
imul
cli
or
cmp
jmp
inc
xchg
push
push
ljmp
and
mov
xchg
jb
movsb
imul
push
lret
fisttpl
stos
movsl
loopne
add
popa
dec
decl
in
mov
xor
fs
jne
ljmp
lock
pop
xor
jbe
psubsw
push
dec
aam
stos
loopne
jb
gs
dec
lods
xchg
stos
lds
ljmp
test
push
add
lods
ljmp
xor
divb
cs
jb
adc
sar
jle
imul
push
pop
ds
popf
and
or
popa
imul
dec
mov
add
std
iret
xchg
in
push
fldt
cmp
movsb
jb
sar
bound
loope
cs
sub
test
cmp
add
push
jg
dec
xchg
dec
clc
or
lret
add
add
add
mov
mul
or
pushf
push
popa
lds
lds
outsl
icebp
mov
iret
sub
stc
test
int
mov
rclb
inc
xchg
stos
mov
sub
dec
cltd
outsl
cwtl
cmp
rclb
xor
add
pop
dec
dec
ret
je
pusha
sub
out
push
dec
sub
mov
out
pop
pop
jg
xor
popa
mov
push
test
in
faddl
push
lds
orb
add
cmp
arpl
cmp
aad
pushf
mov
sub
pop
adc
mov
xor
add
push
sub
bound
adc
nop
and
mov
adcl
jmp
sub
mov
rclb
test
fwait
nop
outsl
in
sahf
mov
fisttpll
adc
ss
sbb
fdivrp
jns
push
xchg
inc
iret
mov
fucomip
push
insb
xor
sbb
stc
sbb
add
add
add
fistpl
stc
inc
sub
enter
mov
rclb
popa
xchg
inc
or
rcll
je
cwtl
fdivrs
add
pop
dec
push
ja
sub
hlt
or
das
mov
pop
or
cmc
out
or
push
jae
sbbb
gs
xor
lcall
pop
xchg
mov
imul
add
xchg
in
push
sbb
lods
out
into
dec
adcl
test
mov
xchg
sbb
jmp
jge
push
jnp
and
int3
sahf
test
sbb
pop
mov
test
outsb
cmp
or
and
popl
jge
push
sub
mov
xchg
sarb
xor
les
xor
call
lahf
roll
into
cld
mov
push
ret
cmc
lds
mov
mov
sub
jg
adc
adc
add
push
dec
push
imul
dec
out
iret
jmp
aas
in
push
data16
jbe
insl
add
add
add
arpl
pop
fsts
js
and
mov
mov
stos
leave
repnz
sub
out
loop
imul
outsb
dec
push
shrl
xchg
adc
sub
shlb
sub
test
mov
stos
test
ja
imul
into
out
in
dec
movsb
push
incb
negb
jo
mov
fwait
inc
lret
xlat
out
adc
cld
insb
mov
out
sti
inc
dec
pop
rclb
mov
rolb
pop
mov
push
out
xor
stos
adc
sub
dec
sbb
mov
xchg
xor
out
jl
pusha
mov
pop
std
rcl
push
int
ret
pop
pusha
dec
pushf
sbb
rcll
pop
push
mov
fsubrl
sub
out
push
pop
or
push
sub
decl
sahf
mov
sub
and
mov
gs
std
cmp
adc
add
add
std
cmpsb
pop
dec
sub
sub
pushf
outsb
add
add
add
dec
adc
mov
lods
pop
loopne
adc
dec
dec
jo
mov
mov
lahf
or
pinsrw
mov
sub
lds
les
fadds
or
stos
pop
sbb
dec
xor
jl
enter
mull
jne
and
ficoms
lock
enter
pop
aaa
repz
jl
aaa
add
push
add
sbb
das
popf
jecxz
lock
pop
addr16
loopne
data16
xchg
xor
jp
adc
rcrb
cmc
sbb
decl
xchg
sahf
ficomps
pop
inc
xor
add
fs
add
xor
sbb
insb
lret
cmc
cmpsb
enter
cmpl
jnp
rorb
add
push
les
jp
cmpsl
cmp
loope
push
adc
ret
pop
sbb
test
and
and
sub
add
add
neg
std
sub
dec
gs
outsl
add
add
add
push
popa
or
loope
pop
or
mov
and
sti
test
or
xchg
icebp
out
outsb
xorl
mov
xchg
call
mov
jmp
sub
mov
shlb
add
scas
pusha
sahf
add
lcall
sub
call
mov
push
call
lcall
sarl
and
nop
adc
rcll
lods
enter
cmp
repnz
sbb
push
dec
inc
outsl
add
fbstp
ljmp
dec
xor
pusha
sbb
pop
pop
out
and
mov
ds
sbb
fsubrs
pop
and
jmp
stos
iret
jno
popa
cmp
aas
inc
jb
stc
push
loopne
popa
mov
mov
cmp
daa
scas
pop
and
and
aaa
inc
loope
outsb
add
scas
adc
aad
movsl
sbb
jo
adc
push
subb
in
push
mov
into
idivb
data16
add
add
add
jl
inc
aam
or
iret
out
mov
in
cld
xor
mov
dec
xchg
mov
in
das
loope
in
gs
fistps
inc
imul
aam
pop
lock
or
je
outsb
fs
pushf
test
hlt
fbstp
lods
mov
and
pop
pop
ss
ss
push
mov
mov
and
aad
js
and
enter
enter
in
out
lcall
mov
jb
xor
inc
pop
lgs
ret
mov
test
or
sbb
and
cmc
dec
xor
xchg
mov
inc
int
shll
adc
inc
inc
fwait
lock
dec
data16
xchg
cli
or
jecxz
popf
mov
aaa
repz
xchg
loopne
push
add
lea
aas
aad
int3
dec
leave
sub
mov
sahf
lds
xlat
dec
scas
mov
jae
lcall
out
sbb
out
das
addr16
add
add
add
add
xchg
mov
lcall
xlat
xchg
or
addl
inc
jge
notl
les
or
inc
in
cmp
add
out
dec
adc
sub
insb
enter
add
lahf
mov
movsl
enter
sub
dec
mov
cmp
movsl
pop
hlt
pop
shr
fnsave
imul
orb
cmpsb
add
mov
sbb
rol
lret
push
pop
or
mov
cs
push
outsb
insl
sahf
inc
adc
in
decb
add
cmp
xchg
dec
cmp
je
aam
and
dec
jmp
jae
mov
or
and
pop
ljmp
sub
mov
sub
sbb
mov
jns,pn
es
repnz
pusha
pop
xor
add
add
sub
ja
mov
dec
xchg
inc
addr16
add
add
add
dec
jp
and
int3
cmpsl
push
outsb
xchg
mov
fadds
dec
popa
jecxz
push
pushf
dec
jne
mov
fwait
mov
je
pop
pop
rcr
std
inc
mov
and
sbb
xor
inc
cmp
and
or
repz
out
xchg
mov
aaa
aas
sti
add
jp
jae
aad
orb
es
pop
loopne
je
pop
inc
loope
jae
add
and
cmpsl
testb
push
jl
xchg
enter
add
aam
dec
and
call
cli
es
jge
and
mov
arpl
jbe
mov
mov
dec
adc
leave
dec
xchg
push
lds
shl
sub
cmp
inc
mov
aaa
loope
dec
sub
add
sub
lcall
jns
xlat
push
inc
jno
mov
pusha
int
mov
jnp
outsl
cmpsb
loopne
fdivs
addr16
add
add
add
jae
sbb
ret
stos
data16
les
jno
std
movsl
add
pushf
out
addr16
outsb
push
sub
or
call
aas
push
mov
adc
push
dec
les
fsubr
or
or
mov
adc
mov
lock
push
outsb
ficompl
push
pushf
mov
pop
mov
push
je
sub
scas
or
test
sub
jb
xchg
out
xor
mov
ffree
push
jge
repnz
dec
shl
stos
clc
jns
mov
fidivrs
xchg
jns
mov
jl
sbb
fsubr
stos
mov
sahf
ds
daa
xlat
pop
cmp
pop
test
shl
pop
scas
cmp
nop
mov
or
movsl
jecxz
rorb
sbb
push
loopne
inc
xor
rcr
mov
xor
out
dec
pop
and
loopne
xchg
cmp
xchg
gs
sub
jecxz
jl
iret
nop
mov
insl
cs
xchg
push
mov
cli
xchg
jle
push
je
scas
enter
je
add
add
add
mov
lahf
and
rolb
test
cmp
jne
das
sub
add
mov
pop
hlt
push
fstpl
test
or
or
cmp
popf
mov
lret
aam
sbb
daa
and
test
mov
sbb
sahf
push
repz
inc
push
in
ds
lcall
cmp
pop
cld
std
divps
jo
stc
jp
mov
sbb
mov
push
lock
push
ljmp
jp
mov
into
mov
dec
sub
push
ret
ret
jns
sub
add
aas
fldt
test
cmp
push
cltd
adc
icebp
lret
mov
xchg
call
mov
js
or
pop
loopne
xor
leave
xor
fs
mov
or
jmp
xchg
icebp
les
divb
jmp
inc
jge
xor
dec
adc
and
and
add
add
fwait
jnp
aad
sbb
mov
addr16
add
add
add
inc
sbb
sub
loopne
fdivrl
mov
aam
sbb
in
jg
mov
adc
stos
xchg
fsubr
jb
cmp
mov
movsl
in
sub
mov
pop
movsl
push
jo
adc
addr16
in
xor
loopne
or
sbb
mov
pusha
movsb
pop
repz
daa
pop
cmc
loope
xor
dec
movsl
iret
popa
adc
pop
outsb
sub
iret
fcmovnb
inc
cmpsl
mov
sub
or
jno
inc
jb
sbbb
jae,pn
jg
xchg
sub
push
sbb
inc
fstpl
sahf
mov
sti
jns
sub
dec
adcw
inc
js
frstor
insl
mov
add
lahf
pop
fidivrl
pop
lods
xchg
aaa
test
iret
mov
pop
std
push
nop
cmpsl
mov
mov
shlb
pop
cmpl
dec
xchg
outsl
pushf
daa
ret
cmpsb
pushf
pop
rcr
jns
cmc
xor
mov
add
mov
std
mov
sub
mov
add
add
add
pop
mov
aas
xor
add
jl
jb
pop
sbb
xor
js
push
add
or
rcrb
xlat
lret
stc
push
popf
jne
jge
shll
es
dec
test
jmp
aam
out
xor
repnz
jne
lea
into
dec
shl
mov
mov
jne
mov
jb
jne
dec
fwait
and
je
lods
adc
stc
repnz
jnp
icebp
fucomip
and
js
mov
or
sbb
pushf
dec
cs
and
data16
and
xor
lock
aad
xor
mov
rcr
push
aaa
enter
arpl
dec
movsl
pop
xchg
sub
sub
shll
aaa
ror
lret
and
scas
xchg
int
int
adc
or
push
fsts
pop
mov
inc
xor
cmpl
stos
jge
iret
adcl
xchg
fisttps
mov
aas
scas
addr16
add
add
add
push
movsl
pop
lea
xchg
addr16
cmp
cwtl
roll
lods
xor
ret
pop
sarl
pop
mov
jnp
scas
jns
ffree
adc
popa
dec
or
jo
inc
lock
sahf
shlb
js
jnp
lock
int
mov
adc
inc
fsubrl
daa
lret
xlat
dec
xor
negb
stos
scas
mov
xchg
xor
jmp
movsb
and
add
or
xor
cltd
mov
push
fmulp
mov
lods
add
ret
std
aaa
xchg
outsb
push
ret
xor
arpl
pop
icebp
inc
shl
push
dec
pop
outsb
in
in
cmpsl
and
mov
inc
movsb
mov
aad
lahf
fists
fists
adc
xchg
jns
fmuls
dec
lea
stos
nop
fcmovnb
popf
insb
dec
cmp
lds
insb
sti
xchg
sti
add
add
aad
imul
xor
outsb
fwait
cmp
inc
in
mov
mov
out
sub
sbb
js
add
add
add
sub
lods
cli
int3
in
sub
popf
jp
lret
sbb
ret
push
shlb
lea
xchg
dec
insb
jbe
and
pop
jmp
cmp
push
mov
popw
test
add
cmpb
sub
in
insl
fistpll
ret
or
in
mov
xor
add
out
imul
bound
aaa
pop
xor
scas
sub
add
loopne
push
pop
push
test
mov
nop
adc
sbb
cwtl
mov
flds
adc
push
fwait
mov
add
jo
mov
pop
adc
das
cmp
pop
pop
sub
jns
scas
popf
dec
jno
pushf
cmpsb
xor
repnz
pop
fdivl
pop
pushf
and
fidivrs
inc
lret
test
lret
jmp
in
shlb
adc
cmpsl
inc
xchg
mov
out
xchg
inc
loope
add
add
jns
divl
in
sub
addr16
add
add
add
or
in
cmp
outsl
outsl
stc
lock
add
pop
outsb
pop
xlat
scas
push
cmp
sub
mov
insl
subl
push
in
hlt
jp
cmp
mov
or
sbb
pusha
pop
mov
jp
pop
jecxz
or
xchg
aaa
xor
xlat
mov
push
or
pop
les
clc
insb
imul
aaa
aaa
add
loopne
xchg
mov
rcrl
adc
ja
pop
sbbb
into
out
repz
and
pop
mov
adc
adc
xchg
outsl
push
add
sbb
xlat
dec
add
scas
inc
bound
pop
outsb
dec
mov
ficomps
imul
test
add
adc
push
push
lods
and
dec
push
and
and
imul
or
jns
push
mov
push
dec
ret
add
clc
fisubs
mov
mov
adc
add
add
std
ss
movsb
fists
cmpsl
movsb
mulb
add
push
jp
out
lret
push
cs
repz
sub
pop
data16
mov
cmp
rcrb
xchg
xchg
and
add
test
lods
in
push
mov
ljmp
adc
aad
jo
and
clc
and
fildl
mov
add
and
xchg
pop
fidivrl
icebp
jo
or
mov
cmp
enter
xor
add
popa
add
ljmp
add
stc
icebp
cmp
jns
adc
sub
push
mov
jbe
dec
adc
fildll
scas
ret
push
xchg
repz
dec
out
jg
orl
mov
rclb
aaa
add
adc
sbb
test
or
outsl
je
xor
lret
mov
sub
inc
leave
imul
add
add
mov
outsl
jne
ljmp
stos
mov
add
add
add
out
push
and
mov
mov
cmpsl
sub
jl
test
xor
add
and
arpl
int
stc
rcll
pop
cwtl
xchg
in
or
call
fs
fisttpl
test
and
lods
mov
jge
push
mov
popf
movl
push
add
xchg
das
into
add
mov
stos
inc
mov
pop
rol
cmp
mov
cltd
gs
movsb
jno
test
mov
adc
out
mov
cli
adc
push
sbb
loopne
push
repnz
xor
je
push
aaa
test
sbb
hlt
insl
je
test
mov
xchg
movsl
fdivrl
sbb
lea
pop
jecxz
lods
mov
fsts
test
rcl
scas
roll
dec
cmc
lcall
add
orb
ljmp
jl
leave
divb
jl
add
add
add
mov
adc
test
orl
sbb
scas
mov
stos
fs
fs
jae
or
or
and
xchg
mov
shrl
or
stc
and
dec
lret
lret
sub
ja
test
add
stos
lock
inc
flds
cmp
xor
jbe
lret
xor
sub
hlt
rorb
call
mov
ret
cmp
add
sub
call
add
scas
mov
movb
test
inc
push
in
push
addb
mov
aad
add
push
enter
fsubrl
sbb
fildll
add
xchg
mov
inc
nop
inc
xchg
pushf
inc
xor
loopne
pop
push
lret
pop
xor
xchg
cld
jecxz
pop
lods
adcl
scas
rolb
add
xor
jo
ja
std
stos
sbb
ljmp
add
add
add
jge
or
insl
and
cmpsb
and
push
movsb
in
inc
aaa
outsb
mov
mov
xchg
dec
popa
jo
inc
sub
in
cld
scas
fsubl
in
xchg
xchg
addr16
adc
mov
mov
int
inc
mov
sub
or
push
jle
mov
mov
je
mov
loope
aaa
jmp
ficoms
or
cmpsb
dec
bound
xchg
popf
loop
sbb
add
and
adc
faddl
rolb
cmp
arpl
enter
add
xchg
bts
test
outsb
jno
push
stos
rcrb
ror
xor
fcmovne
out
jmp
sub
sub
sbb
int3
repz
sti
cltd
imul
xor
call
lcall
mov
jmp
shrb
xor
and
push
jl
xor
int
mov
inc
pop
or
add
add
cmpsb
push
sbb
pop
out
addr16
add
add
add
loopne
jmp
jns
xchg
dec
mov
mov
jo
dec
dec
push
mov
out
inc
jmp
test
and
hlt
or
cmp
mov
xchg
fwait
pop
mov
rcr
jo
xor
add
es
cmp
cmc
stc
adc
loopne
xchg
mov
ja
test
sub
out
xchg
inc
and
and
test
js
xor
sbb
nop
jle
scas
mov
pop
in
daa
adc
fucomi
movsb
jmp
into
push
lock
in
clc
push
jbe
xchg
scas
jl
pop
add
xor
rcll
testb
int
add
mov
dec
dec
lds
xchg
pop
pop
mov
xchg
or
nop
mov
xchg
cmp
aam
mov
mov
cmc
xor
push
push
insb
push
mov
mov
adc
and
stc
fwait
addr16
add
add
cmp
cli
mov
sarb
addr16
add
add
add
sar
fiaddl
dec
push
push
mov
mov
xchg
mov
adc
and
pop
imulb
add
push
or
int
test
clc
lea
cld
mov
dec
ds
cld
pop
pushf
jmp
jecxz
add
xchg
sbb
push
or
dec
jmp
jmp
cmp
lret
fcmovbe
add
push
pop
je
sub
jle
out
cltd
popf
stos
movsl
ficompl
test
sbb
fistps
and
cmp
sbb
fcoms
jb
sub
sbb
icebp
inc
fistl
pop
je
shlb
cmpsb
xchg
xor
test
pop
into
sub
push
int3
sbb
int3
lret
clc
mov
or
inc
adc
aad
lahf
mov
in
mov
mov
pop
repnz
push
addb
loop
jmp
loop
rcll
adc
push
das
pop
sub
sub
add
test
lcall
dec
sub
addb
add
add
mov
inc
lods
stos
std
pop
mov
or
std
cmp
adc
iret
data16
ret
sbb
cltd
push
add
dec
fldl
lock
outsb
fs
mov
push
mov
iret
and
cs
std
je
add
sub
repnz
push
push
or
daa
sbbb
fisttpll
mov
std
repz
orl
je
and
int3
add
pusha
fisttps
lods
or
pop
sarl
fwait
add
inc
insb
mov
sub
mov
mov
sti
pop
outsb
cmp
dec
fadd
sub
pusha
call
adc
lock
mov
out
iret
xor
add
sub
fwait
pop
aaa
jmp
stos
pop
movsl
cmp
xchg
or
mov
data16
pusha
inc
adc
in
daa
cmp
in
cld
push
xorb
testb
daa
mov
cmp
add
add
add
gs
push
push
insl
add
cmp
jnp
sbb
int3
fs
lcall
ret
out
cmp
pop
test
xchg
mov
sbb
push
xchg
ljmp
mov
cmp
fstl
mov
stos
sub
xor
test
test
out
push
clc
icebp
pop
adc
sub
adc
fs
mov
imul
mov
sbb
rclb
stos
or
fnstsw
cmp
adc
xchg
bound
call
sahf
les
cs
cmp
mov
addr16
arpl
lock
iret
mov
test
aaa
imul
out
inc
mov
and
add
push
shr
gs
clc
xchg
movsl
aad
xchg
push
lahf
inc
and
add
scas
lcall
adc
sbb
cmp
add
add
add
xchg
mov
repnz
hlt
insb
xor
mov
call
iret
sbb
dec
imulb
jne
movsl
sub
das
notl
jecxz
xor
ds
hlt
in
add
pop
sub
sub
lcall
loope
pop
gs
into
and
out
xchg
mov
lods
dec
movsl
hlt
push
pop
and
or
iret
add
mov
sbb
add
xchg
divl
cmp
and
es
add
nop
or
imul
mov
pusha
sub
pop
cmp
push
push
sbb
pop
inc
cmp
mov
dec
movsb
sub
lods
out
add
icebp
cld
mov
adc
pop
xchg
mov
movsl
f2xm1
inc
ss
xchg
lret
xor
lock
dec
mov
pop
loopne
dec
cmp
mov
add
jl
cs
idiv
jne
iret
push
jb
pop
addl
add
add
add
mov
in
into
fmul
in
jo
jno
sahf
mov
sarl
out
jo
xchg
ja
in
mov
js
cltd
push
lds
pop
xchg
add
jp
pop
sub
pop
or
idiv
sub
dec
dec
push
pop
mov
add
pop
int
adc
fwait
jle
les
push
add
or
xchg
pushf
and
inc
adcb
jle
mov
int
int3
push
loope
fdivrl
mov
cmpsb
inc
jle
and
mov
loopne
cmp
xor
sbb
ljmp
adc
add
dec
add
add
xchg
push
rorl
leave
clc
sub
and
add
fimull
pop
jbe
cld
jnp
cmp
xchg
dec
arpl
adc
add
cmp
stc
lea
jg
clc
in
sbb
xchg
pushl
sub
pop
aaa
rclb
add
mov
insl
jnp
hlt
add
outsl
pop
mov
jnp
mov
xor
inc
jecxz
aam
repz
mov
push
test
push
test
lahf
stos
jbe
fisubs
mov
and
sbb
push
inc
sub
pop
fnsave
test
and
xor
loopne
fnstsw
stos
mov
sbb
pop
in
js
or
cmp
push
push
adc
cmc
adc
xchg
mov
out
jecxz
pop
mov
push
js
ror
sbb
stc
push
push
xor
hlt
pop
data16
mov
into
int
je
nop
xor
mov
lds
out
push
shlb
dec
xor
cs
xchg
dec
imul
jbe
fisubrs
cltd
movsb
mov
pop
xlat
sahf
or
pop
pop
sti
bound
sti
dec
frndint
cli
xchg
mov
lock
and
sbb
cli
mov
mov
jge
std
sti
iret
ss
push
jno
xor
sbb
test
add
add
add
lret
stos
xchg
sub
jns
mov
inc
inc
pop
inc
sbb
aaa
rclb
xchg
divb
sub
mov
jge
mov
sbb
imul
scas
cwtl
ja
lret
shlb
inc
fldln2
shrb
ljmp
xor
cmpb
mov
cmpsl
add
out
inc
push
pop
subl
jge
rol
shll
sbb
adc
push
stos
xchg
lods
stos
lods
xchg
push
pushf
scas
lock
jne
add
inc
cmp
in
outsb
adc
and
fidivl
lret
cmp
jne
adc
in
mov
dec
inc
stos
jb
adc
test
jne
fcoml
push
xchg
movsl
cmp
test
decb
test
push
fdivrl
lea
repz
jne
mov
inc
sbb
mov
movsb
jp
pusha
cmp
sbb
je
push
imulb
loopne
xchg
inc
lahf
sti
hlt
out
dec
roll
push
mov
add
add
add
xor
jbe
rcrb
add
cld
pop
data16
jae
lea
pop
push
mov
sbb
les
fsincos
aas
sub
mov
pop
bound
sbb
pop
cmpsl
or
mov
sti
loope
flds
push
jge
mov
push
xor
and
mov
mov
xor
mov
fisttpll
data16
adc
or
xchg
push
gs
mov
mov
rclb
mov
dec
add
in
int
mov
insl
ja
and
sarl
sub
fsubrs
testb
pop
ljmp
adc
aaa
dec
dec
push
ret
sub
xor
dec
cmp
push
sbb
call
mov
popf
enter
xchg
and
xchg
mov
mov
mov
xor
mov
mov
mov
xchg
add
add
add
mov
je
inc
xor
fsubrp
pop
xlat
adc
mov
mov
fcmovnu
cmp
icebp
cmc
adc
das
sub
xor
push
or
sti
int3
sub
fcom
mov
aam
cmp
push
pushf
cwtl
pop
lret
push
dec
lds
cwtl
ficompl
cmp
xor
andl
jle
lcall
and
jg
ret
cmp
jp
in
out
xlat
in
mov
cltd
into
cld
inc
adc
fsubl
cwtl
mov
mov
mov
fidivrl
xchg
dec
sbb
add
sbb
std
cvtps2pi
adc
dec
aad
inc
and
fcos
pop
jne
xchg
fnsave
hlt
sbb
xchg
mov
subl
xor
jg
adc
test
lods
mov
pop
mov
jp
loope
cmp
xchg
and
out
ljmp
lock
xchg
cmp
mov
add
add
add
pop
data16
cli
pushf
mov
into
loope
pop
stc
ret
enter
mov
mov
xchg
inc
mov
and
xchg
cmp
xchg
cld
xor
shrb
dec
pusha
pop
add
mov
jge
fisttpll
push
sbb
jne
sub
mov
push
xor
or
sub
fildl
flds
loopne
jl
push
rcrl
fs
sbb
xor
or
lret
cmp
leave
and
cmp
push
fcompp
icebp
jge
ljmp
mov
daa
fisttpl
jae
and
mov
pop
std
ljmp
mov
out
bound
adc
test
add
shrl
or
or
dec
jle
cmpsl
cmp
mov
pop
inc
insl
jle
push
cli
sub
add
add
arpl
jnp
sbb
push
xor
xchg
mov
add
add
push
and
mov
xor
outsl
stc
mov
sub
xchg
out
mov
sub
nop
mov
clc
mov
mov
testl
sbb
sbb
ror
mov
xchg
cwtl
insl
shr
inc
xchg
movsb
adc
pop
pop
stc
mov
aad
pop
mov
inc
push
popl
cld
jl
push
push
dec
std
loop
dec
mov
adcl
push
mov
in
cli
out
mov
xor
and
pusha
push
inc
lret
xor
test
loopne
jecxz
pop
cs
pop
or
mov
jle
or
push
lods
lcall
negl
test
jnp
xchg
incl
movsl
cs
insb
std
lds
sub
adc
push
stos
xchg
xchg
in
push
push
mov
in
subl
add
ret
and
sub
loope
lea
out
sbb
inc
jge
sub
mov
shrb
add
add
aas
or
mov
inc
cs
add
add
sub
mov
insb
bound
inc
inc
lods
lret
dec
shlb
adc
sarl
push
lea
add
push
cltd
sbb
outsb
jno
pop
mov
in
inc
loopne
mull
cld
or
test
push
xchg
fistpl
aaa
int3
mov
or
push
xlat
sar
cli
or
insb
jne
lret
mov
sub
ss
mov
or
mov
roll
leave
sbb
mov
icebp
xchg
pop
fstps
xor
xchg
aas
mov
test
popa
xchg
iret
ret
xlat
xchg
jle
es
ljmp
xbegin
lea
xchg
or
sbb
lret
xchg
mov
pop
push
and
add
out
sbb
sahf
rcrb
out
xchg
mov
push
sub
shrb
jb
push
sbb
xchg
or
cmp
pop
ss
insb
fidivl
bound
or
mov
add
add
add
cwtl
and
sub
fbstp
mov
cmp
lret
xor
sar
shrb
and
std
and
lcall
adc
pushf
jae
and
push
scas
int3
inc
fsts
lahf
or
mov
jae
sbb
inc
out
mov
jge
mov
lods
inc
inc
pop
sub
jne
sub
dec
push
xor
int
pop
rcll
sbb
jns
mov
dec
jbe
push
cwtl
dec
adc
mov
imul
mov
sbb
movsl
out
cltd
fcom
xchg
push
xor
and
cs
insl
test
pop
fldenv
sub
outsl
rcll
mov
xor
daa
adc
int3
ljmp
inc
loopne
dec
cwtl
cmp
sbb
lret
push
jno
push
cmpsl
sub
mov
arpl
pop
in
out
repnz
cmp
xchg
testl
sub
add
add
mov
jns
sub
mov
add
add
add
xor
dec
inc
loope
enter
nop
xor
fcoms
cli
xor
clc
out
pop
lds
xchg
adc
movsb
mov
pop
jns
mulb
sti
decb
push
scas
dec
push
shll
or
pop
mov
mov
fwait
inc
movsl
pop
mov
xchg
rorb
adcl
ds
out
or
aaa
lods
pop
ret
add
out
fisttpll
loopne
stos
mov
test
call
xchg
aaa
cmp
insl
sbb
icebp
inc
and
mov
movl
aas
cltd
in
jmp
or
push
or
fwait
or
lods
push
or
imul
inc
pop
stc
aas
and
popf
mov
inc
pop
and
xor
daa
pusha
xchg
mov
adc
clc
les
addr16
repz
daa
pop
adc
push
push
les
hlt
xchg
xchg
rolb
add
add
int
fstp
iret
push
cmpsb
fadd
dec
mov
lea
add
add
add
cltd
inc
leave
mov
leave
pop
int3
stc
push
sti
jnp
or
push
leave
adc
dec
and
fisttpll
cmp
ss
add
test
aaa
xor
pop
mov
out
lds
or
cmp
enter
xor
and
rcll
test
jmp
ds
sbb
jne
push
insb
cmovo
ja
out
call
pushf
daa
int
push
pop
cmp
push
es
cwtl
cmpsl
xor
push
mov
dec
xchg
xor
push
aaa
jno
push
mov
fbld
xor
add
push
sahf
popa
cmpsb
xchg
in
repnz
add
mov
and
aas
or
les
mov
sbb
in
in
mov
push
push
sub
adc
jle
in
jne
push
lds
cld
fsts
add
scas
pop
xchg
pusha
pop
scas
mov
jae
rorl
cmp
jle
sbb
fsub
xor
outsb
daa
cmpsb
ficoms
lahf
and
scas
std
out
ljmp
mov
add
add
add
shl
lahf
adc
out
fwait
mov
lock
inc
add
adc
pop
in
in
in
adcl
push
das
sbb
xchg
mov
test
notl
xchg
mov
getsec
cmc
adc
cwtl
cmp
stos
mov
xor
jno
xchg
jg
dec
cmpsl
or
ret
adc
ret
leave
je
scas
loop
push
bound
gs
mov
dec
shlb
sub
movsb
cmp
mov
or
xchg
inc
cmp
mov
sub
cmp
sbb
in
in
lods
mov
or
lds
je
repnz
xchg
adc
popf
scas
out
insb
xorb
and
insl
mov
daa
add
std
adc
cltd
test
les
test
or
data16
sbb
push
and
add
mov
icebp
imul
jo
popl
add
add
add
fidivrs
push
js
je
adc
movsl
js
dec
inc
push
mov
addb
imul
jle
mov
cli
sbb
add
jl
adc
jno
pop
sahf
add
sarb
add
mov
cld
div
insb
jmp
push
xor
dec
js
imul
xor
stos
cmp
cmp
jmp
xlat
test
mov
out
ret
and
popf
repz
inc
out
leave
scas
cltd
dec
cld
imul
mov
dec
cli
xor
mov
xor
ds
stc
inc
std
mov
xchg
push
je
es
clc
xchg
rcll
insl
cmp
xor
stos
push
cmp
mov
jb
mov
es
push
jbe
pop
ljmp
sbb
xchg
adc
mov
pop
in
js
lods
cmp
add
xchg
dec
aad
mov
das
inc
or
test
fcomps
add
nop
add
add
add
and
lcall
mov
jns
sbb
arpl
dec
ja
mov
xchg
rorb
sti
dec
sub
scas
mov
xor
adc
mov
or
xchg
jp
je
es
in
ret
out
scas
ja
sub
les
mov
add
xor
pop
mov
adc
cmp
shlb
inc
push
and
leave
push
mov
cmpsl
lahf
xor
les
ss
pop
jbe
icebp
movsb
clc
gs
lret
mov
int
jmp
das
mov
mov
xchg
divb
ss
clc
xchg
add
pop
ss
outsl
std
sbb
dec
addr16
mov
mov
sbb
inc
mov
aaa
jb
mov
push
sbb
sub
dec
cmp
fwait
lret
mov
mov
or
push
inc
faddl
aas
hlt
or
ljmp
dec
mov
fldcw
xchg
add
add
add
cli
dec
mov
in
mov
addb
ds
xchg
in
pop
or
pop
dec
bound
mov
sbb
mov
adc
or
lods
xor
data16
leave
int3
addr16
and
xchg
rcrl
lret
push
cmpsl
cmpsl
push
outsb
shrl
leave
sti
push
mov
sti
push
jmp
shlb
mov
scas
xchg
iret
shlb
push
loop
jg
in
or
xchg
gs
add
popa
push
mov
fnstcw
mov
rcrl
cli
movsl
push
mov
aas
dec
outsl
das
add
stos
rorb
mov
hlt
shlb
iret
push
mov
test
adc
mov
jae
lea
inc
dec
dec
outsl
cmp
cmp
or
in
movsl
cli
add
inc
iret
jno
inc
xlat
stc
mov
mov
testl
lods
aaa
shlb
cmc
div
testl
aas
addr16
add
add
add
mov
push
pop
jge
dec
xchg
lods
jmp
xorb
decl
insl
test
jecxz
xor
mov
pop
rcrb
add
clc
imul
ljmp
pop
lret
jae
mov
sbb
in
orb
jns
aad
aas
mov
lods
push
jns
stc
cwtl
das
scas
stos
lods
cmp
inc
rclb
push
sbb
neg
nop
inc
adc
pop
sub
add
and
and
jecxz
fwait
in
sarl
imul
loopne
pop
outsl
inc
cmp
sbb
mov
outsb
cmpsl
mov
test
xchg
mov
push
add
jmp
xor
xchg
xchg
vucomiss
fcom
push
cmpsb
sbb
ret
push
cwtl
ja
jp
bound
cmp
dec
fiadds
lret
xor
mov
xorb
js
add
add
push
sahf
rcr
pop
adcb
bound
pop
addr16
add
add
add
push
pop
call
jnp
mov
add
cmp
aad
in
add
mov
lcall
aad
sub
xlat
das
int
or
dec
jmp
mov
pop
dec
sub
jg
xchg
cmpsb
test
rorb
gs
mov
inc
cmp
or
mov
lods
cmc
icebp
loope
ljmp
dec
mov
mov
inc
pop
addr16
mov
cmc
popa
dec
hlt
xchg
xor
add
leavew
inc
fisttpll
sbb
ret
stc
imul
ficomps
pop
dec
insb
jnp
jne
pushf
int3
popf
push
push
dec
das
adc
sbbb
push
pop
jl
stos
jp
lret
push
pop
jecxz
aad
sbb
in
dec
test
push
xor
gs
jo
aad
cmp
fsubl
jnp
in
das
xor
inc
pop
add
enter
xorb
jno
cmp
add
add
arpl
cmpsb
jcxz
fimull
addr16
add
add
add
fsub
js
imul
cmp
rcll
scas
jle
sub
pop
aaa
push
sbb
rep
cmp
jmp
test
or
mov
ret
jge
dec
cwtl
stc
adc
out
rcrl
or
jne
mov
andl
jg
inc
mov
daa
xorl
imul
mov
sub
decl
lds
inc
dec
inc
ficompl
lret
mov
stc
orb
lret
jbe
lea
addl
bound
jg
inc
xor
arpl
pop
sbb
or
out
or
ja
or
lea
sahf
cltd
xchg
mov
mov
cmp
movsl
and
imul
mov
push
ja
adc
dec
pop
pusha
add
lods
dec
cmpsb
shll
cmpsb
xchg
dec
push
inc
fs
add
je
cmp
std
or
rclb
push
clc
jnp
jg
in
cli
enter
loope
or
addr16
add
add
add
add
lds
sahf
aaa
movsl
stos
add
pop
pop
ds
imul
cwtl
jnp
fcomps
lods
lcall
hlt
and
outsb
inc
xchg
jne
mov
enter
imul
and
fdivl
jg
jno
lahf
loope
add
sub
cmovns
and
popa
xchg
idivb
xchg
xlat
dec
stos
add
dec
shll
inc
cli
in
aad
cmc
fnstcw
es
or
cmc
out
dec
nop
and
xor
mov
shll
cwtl
pop
adc
aad
jne
cmp
mov
imul
das
push
mov
inc
mov
push
and
das
adc
inc
mov
rcrb
sbb
xor
ljmp
mov
out
loopne
test
out
sub
adc
and
insb
shr
mov
inc
push
mov
xchg
mov
xor
add
lods
faddl
fbstp
cld
gs
mov
addr16
add
add
add
dec
push
cli
adc
mov
cmp
in
mov
hlt
adc
ss
xchg
fwait
or
mov
inc
pop
pop
ficomps
pop
jmp
fsubrp
ret
pop
outsb
clc
fidivs
iret
inc
jb
stos
fnstcw
mov
iret
push
or
jns
dec
inc
adc
dec
push
aas
push
jnp
cmp
jae
sub
fs
dec
mov
jle
mov
ljmp
sti
jae
int
rcll
lcall
mov
dec
imul
cmp
fldl
mov
int3
pop
repnz
jne
or
pop
pusha
push
adc
insl
cmp
pushf
push
pop
mov
sarb
inc
dec
cmp
fsubl
mov
scas
test
ret
rcr
pop
mov
fstpt
cmp
in
and
dec
stos
leave
ljmp
push
lahf
jbe
test
jl
sar
std
jle
pop
popf
scas
xchg
sbb
add
add
add
loope
dec
inc
stos
dec
sub
push
push
loope
das
shll
mov
fldcw
rcr
jno
test
xchg
mov
mov
inc
fidivl
xor
adcb
lahf
jae
mov
insl
dec
lods
pop
mov
xchg
cmp
pusha
sarl
dec
jmp
mov
push
jle
mov
xor
out
mov
add
cmp
xchg
rclb
xlat
mov
push
dec
in
push
pop
dec
repnz
out
or
shlb
pop
in
test
xchg
push
inc
cmp
mov
insb
sbb
mov
repz
mov
gs
adc
cld
orb
dec
or
repnz
movsb
and
imul
lret
iret
and
cld
adc
loope
sub
sub
rolb
jne
mov
xor
xchg
xchg
incb
add
add
cwtl
or
stos
xchg
cmp
in
icebp
pop
inc
dec
addr16
add
add
add
sub
cli
mov
pop
push
mov
js
mov
mov
sbb
into
xchg
in
cmp
or
andl
xchg
jno
mov
xor
dec
add
or
jge
arpl
pop
cs
sahf
pop
daa
mov
mov
hlt
stc
rcll
add
mov
push
push
mov
sti
mov
xchg
in
movsl
mov
loopne
xor
das
push
pop
add
ss
add
pop
pop
mov
repz
add
adc
cmp
sbb
shl
xchg
jl
gs
jnp
icebp
scas
and
js
inc
xor
outsl
movsl
dec
into
adc
mov
iret
ret
std
cmp
cmpsl
js
xor
movsl
daa
out
outsl
std
aad
xorb
leave
mov
call
mov
jle
xchg
add
enter
or
mov
fwait
and
popa
mov
xorl
addr16
add
add
add
xor
shlb
mov
jp
out
jmp
sbb
adc
pop
movsb
mov
dec
sub
adc
xchg
nop
ds
call
rcl
sbb
sub
or
fst
shrb
push
inc
sub
or
and
or
dec
je
push
push
xor
fwait
pop
mov
mov
jb
push
xlat
les
in
movsl
or
nop
mov
xor
adc
adc
cmc
push
gs
push
lods
jno
and
mull
loopne
xchg
test
push
movsl
xor
fldenv
lea
iret
push
test
pop
insb
iret
lret
mov
popf
fisubl
fdivr
mov
vmovaps
ret
xchg
mov
cwtl
lcall
test
mov
dec
ljmp
push
push
cmp
and
push
and
xlat
aas
dec
sbb
or
addr16
mov
loop
inc
push
xor
mov
ret
push
imul
jae
fists
enter
push
or
fwait
mov
cmp
ss
fcompl
add
lods
clc
out
push
inc
mov
cmc
sbb
rcll
inc
sahf
jo
add
out
adc
call
add
pop
mov
icebp
sbb
or
aaa
pop
mov
lock
jo
adc
popl
adc
filds
ret
stos
aas
sti
mov
mov
lods
inc
fsub
inc
pop
mov
and
jb
xchg
cmp
loopne
lods
mov
stos
sub
mov
std
fists
dec
adc
jmp
bound
xor
jbe
mov
cmpsb
add
push
test
fnstenv
mov
fwait
mov
andb
xchg
add
add
add
mov
mov
jmp
test
fwait
add
add
add
mov
jae
hlt
mov
push
loop
pop
mov
jecxz
adc
je
pop
pop
aad
push
adc
mov
inc
cli
pop
mov
fistpll
sbb
jbe
pushf
out
pop
subl
scas
xor
dec
mov
dec
inc
aas
pop
cli
cmp
in
xor
sbb
sbb
mov
mov
push
stc
mov
add
adc
or
push
out
test
popa
xchg
repz
fdivrp
negl
lods
fcmovb
rcrl
push
outsb
inc
cmp
cmp
sti
sbb
jno
insl
test
xchg
adc
mov
fsubr
popf
mov
cmpsl
hlt
cs
mov
or
push
call
fstpt
add
push
call
add
or
repnz
mov
or
cltd
scas
and
add
fisubs
add
jns
test
adc
sbbl
popl
inc
pop
addr16
add
add
add
sub
repz
in
cmpsl
nopl
jne
push
push
mov
cmp
imul
lds
xor
mov
out
lds
ss
nop
pop
scas
xchg
pop
jmp
add
mov
popf
add
ljmp
data16
mov
or
call
push
push
cmp
cwtl
dec
jmp
imul
mov
dec
lock
int
mov
inc
inc
push
idivl
arpl
mov
fcompl
xchg
sub
push
aas
es
fiaddl
jns
outsl
cmp
loop
lds
pop
cmp
leave
stos
insl
addr16
jmp
xor
dec
fldt
enter
cs
mov
xor
out
push
add
popa
mov
repz
es
aad
fiadds
loop
pop
fucomp
cmpsb
cmp
popf
jg
clc
mov
out
push
dec
pop
sub
lret
gs
add
imul
movsb
and
sub
popf
add
add
add
leave
add
sub
push
pushf
pop
hlt
add
clc
scas
mov
dec
dec
pushf
or
fisubs
iret
xchg
adc
fldt
jbe
or
lcall
mov
xchg
sub
fucomp
imul
cli
scas
adc
loop
xchg
pop
mov
xor
dec
or
cmc
mov
dec
fisttpll
push
jb
pop
mov
pop
add
fdivl
add
adc
sahf
xchg
inc
xor
push
cmpl
adc
jno
inc
mov
lods
repnz
push
cmc
aas
paddb
push
mov
insl
mov
out
ret
add
or
jmp
les
xchg
loope
push
xorl
dec
js
and
lds
mov
je
cwtl
lods
subl
mov
mov
push
fbld
mov
sub
ja
fmuls
add
mov
sub
lahf
mov
cmp
add
add
add
es
mov
test
cld
mov
arpl
das
lock
add
xchg
rolb
xchg
jl
pop
dec
cmp
xchg
ljmp
adc
lods
mov
add
hlt
add
js
or
cli
lret
stos
lea
adc
add
jle
call
mov
repz
shlb
xlat
inc
stos
adc
dec
xchg
xor
push
test
bnd
pcmpeqb
adc
adc
cmp
mov
jle
js,pt
or
lock
adc
bnd
ret
daa
cmpsb
jo
stc
shrl
and
ljmp
cmp
fsts
jmp
dec
pop
insb
sahf
testb
jbe
das
cwtl
repnz
push
clc
inc
add
push
test
mov
lds
cltd
sub
out
inc
sub
or
mov
add
add
add
out
add
and
sub
cld
hlt
and
jns
sbb
sub
cwtl
xor
add
cmp
sbb
sarb
push
pop
xor
fimuls
inc
repz
sub
in
test
pop
push
arpl
jle
lcall
lret
pop
mull
or
sbb
test
movsl
loop
bound
test
out
xor
push
xchg
mov
fnstenv
std
rolb
push
jne
std
cmp
xor
daa
xchg
jp
jne
fiaddl
mov
mov
push
ret
imul
jg
sbb
aam
xor
xor
add
add
mov
jle
arpl
push
push
aas
int3
mov
mov
jl
sub
cltd
rolb
adc
sbb
inc
dec
sub
mov
sub
mov
xor
add
add
pusha
test
mov
cld
mov
addr16
add
add
pop
pop
hlt
insb
mov
dec
pop
popa
adc
xchg
pop
fdiv
lcall
mov
int3
mov
xlat
jae
pop
lods
xor
push
hlt
jge
add
mov
xor
and
and
inc
in
mov
cltd
cmp
jmp
lea
lods
test
and
sub
push
inc
sub
xchg
stos
dec
movsb
loop
icebp
outsl
add
inc
sar
mov
stos
stc
fwait
test
or
cmc
outsb
cmp
jecxz
push
fs
pop
xchg
jmp
sarl
mov
push
insl
fidivl
cld
pop
cmp
lcall
mov
rclb
nop
in
push
or
xor
movsl
or
cmpsb
xor
imul
push
stos
mov
xchg
jnp
mov
dec
or
imul
int
pop
je
daa
mov
out
and
and
jnp
dec
push
pop
cs
add
or
lcall
cmpsl
jle
addr16
add
add
in
and
mov
out
and
push
nop
cmpsb
nop
pop
push
test
hlt
out
sbb
fdivrp
jae
add
sbb
mov
xor
pushf
push
iret
mov
mov
movsb
jl
subps
adc
jg
push
pop
or
xchg
mov
inc
adc
mov
sub
push
mov
dec
push
push
mov
push
jo
sti
clc
pop
dec
adc
stc
push
jg
addr16
cltd
in
jp
dec
in
mov
pop
sub
inc
mov
or
sti
add
incb
pop
sbbl
inc
mov
push
xchg
xor
xchg
notb
xor
or
mov
jns
inc
loopne
lock
sbb
movsb
imul
fdivrp
cs
dec
mov
scas
add
call
pop
pop
xchg
fcompl
outsl
loopne
lret
xor
insl
insl
fs
in
test
pop
test
dec
in
and
add
add
add
mov
inc
inc
add
mov
add
jb
adc
push
inc
stos
cwtl
lock
fstl
hlt
std
inc
adc
fists
xor
test
iret
pop
add
clc
leave
cmp
fld
dec
inc
or
xchg
fsts
sbb
loopne
daa
jle
into
adc
xor
fst
jns
roll
dec
add
xchg
dec
out
aas
sub
lahf
xor
stos
cwtl
lea
push
mov
es
xorl
xchg
adc
or
xchg
stos
ror
mov
std
jmp
xchg
aad
lahf
pop
or
pop
pop
movsb
stc
popa
mov
sbb
sub
gs
cmpsb
ljmp
mov
mov
mov
pop
aaa
sub
xchg
cmp
nop
call
incb
cmpsl
lea
mov
mov
xor
cwtl
mov
and
test
xlat
or
jecxz
inc
pushf
in
nop
inc
ja
and
je
dec
or
sbb
inc
mov
xchg
scas
addr16
add
add
icebp
xor
popa
imul
and
mov
fidivs
stc
jmp
jae
ret
dec
test
xor
and
aad
inc
sbb
out
jecxz
push
xlat
jle
clc
mov
jl
jl
lea
inc
fisubs
and
sub
xlat
sbb
pusha
orl
adc
pusha
jno
or
jb
fisttpl
lret
cmpsl
sub
incl
ss
push
jle
and
fistl
mov
aad
iret
fnstenv
mov
and
mov
inc
push
mov
sbb
and
add
hlt
add
ljmp
test
push
loop
out
aad
bnd
cmp
imul
pop
add
push
repnz
jb
nop
fwait
ja
stos
in
sub
fwait
sbb
addps
add
incl
ret
jnp
jge
xchg
cmp
cmp
orb
ret
mov
faddl
add
add
inc
fdivl
push
dec
mov
movsb
add
add
add
popa
pop
insb
out
mov
mov
cmp
lods
ss
dec
iret
cwtl
shrb
hlt
sbb
xchg
or
in
int
sub
mov
sahf
push
cmpsl
in
cmp
xchg
cs
pmaxub
scas
subl
jb
leave
insb
pop
jge
cmc
clc
rclb
pop
mov
pop
aad
mov
imul
cmp
cwtl
movsb
ficomps
arpl
xor
sbb
jl
jnp
jb
daa
andl
sbb
fcmove
lret
lahf
jb
mov
inc
lods
cmp
or
mov
push
mov
aas
ds
lds
es
sub
or
dec
sarb
sub
dec
test
push
mov
or
xor
mov
dec
hlt
jecxz
sbb
mov
jns
fisubrl
jbe
add
add
sbb
mov
sbb
movsl
add
add
add
pushf
mov
cmp
call
push
jle
or
movsb
ret
adc
or
outsb
push
xor
sbb
mov
mov
pop
fsubs
mov
jns
test
jg
lods
setbe
sbb
and
or
int3
std
bnd
enter
dec
jp
outsb
cmp
rolb
or
and
sub
fwait
and
dec
mov
shl
and
xchg
cwtl
and
test
bsr
mov
adc
shlb
xchg
mov
sub
cmpsb
add
sub
fwait
out
mov
push
loope
inc
stos
lret
push
sub
add
fstps
mov
cltd
and
push
mov
out
inc
xchg
mov
mov
jl
push
jecxz
cmovs
sbb
ss
jle
cltd
mov
jns
and
xchg
mov
add
add
stos
hlt
jmp
cmp
jbe
dec
mov
sbb
add
add
add
dec
push
cmp
xor
inc
outsl
mov
lret
add
imul
mov
mov
or
imul
push
or
jno
sub
repnz
sbb
daa
out
cs
or
loope
or
or
add
test
mov
movsb
sub
test
xchg
test
jge
into
mov
es
dec
mov
dec
and
sbb
fdiv
rorb
cmp
outsl
aam
int
add
or
push
mov
push
mov
mov
mov
jmp
clc
or
repnz
rcrb
in
test
cli
pop
jo
cmc
nop
push
gs
lcall
pusha
add
ret
aas
adc
jmp
cld
pop
in
dec
pop
jmp
push
sub
pop
fwait
cmc
xor
and
mov
xchg
xor
jg
pop
mov
mov
insl
adc
add
add
push
nop
out
xlat
out
jg
in
xor
fnstenv
push
mov
add
add
adc
or
lcall
add
cli
shlb
dec
xor
add
cltd
mov
jmp
sbb
xor
testb
push
add
int3
jbe
out
pop
lock
mov
stc
jbe
and
mov
pop
mov
sbb
jns
sbb
repnz
sbb
fwait
int3
jne
jp
out
adc
xor
xchg
aaa
sarl
inc
das
stos
lret
in
push
mov
orl
sbb
dec
test
sub
js
or
xor
pop
addr16
push
fistl
ret
mov
lahf
jp
fdivrl
sbb
or
pop
loopne
cmp
loop
xchg
inc
cmc
and
out
lea
enter
cmp
push
rolb
fadd
sahf
fldcw
xchg
jns
bswap
pushl
lods
rcll
sbb
pop
fbstp
fldl2e
push
push
lret
stc
addr16
add
add
add
xchg
repnz
adc
in
jl
frstor
jae
fisttpl
adc
pop
sti
mov
jecxz
xchg
mov
shl
sub
inc
inc
and
inc
je
fstl
dec
cmpsl
sbb
mov
push
mov
sub
xchg
jg
gs
clc
add
aas
jo
mov
pushf
aam
push
xor
push
mov
sub
fists
mov
icebp
imul
dec
jnp
pop
test
sarl
lock
dec
xchg
jb
sub
pop
mov
decl
mov
lods
out
mov
jae
add
pop
jle
stos
dec
sbb
cmpsl
jl
jge
or
add
imul
testb
mov
jle
sbb
cmp
fs
pop
cmpsl
es
add
mov
sub
xchg
pop
mov
mov
add
add
mov
fadds
addr16
add
jb
test
xor
nop
cli
jno
mov
insb
daa
ret
push
add
leave
xchg
out
bnd
mov
loop
daa
incl
or
push
hlt
dec
stc
inc
or
sub
ss
mov
aam
and
shl
ljmp
push
sbb
mov
or
dec
mov
cs
daa
push
pusha
jl
mov
cs
outsb
or
enter
mov
aad
cmp
dec
cmp
jnp
cmp
xor
pushf
aad
xchg
call
fdivp
xor
out
in
adc
aam
cmp
stc
add
mov
push
fldl
fwait
into
icebp
adc
pop
xchg
cmp
cld
xchg
sub
push
les
pusha
loopne
ss
sub
pop
iret
pop
adc
add
push
mov
pause
inc
loop
add
add
mov
push
sti
jmp
push
mov
idivb
stos
add
add
add
xor
std
push
xchg
jmp
imul
add
js
icebp
imul
jecxz
sub
adc
sbb
shlb
ror
push
outsl
in
stos
or
leave
inc
mov
and
clc
movsl
lcall
cli
xchg
sbb
iret
ret
in
mov
in
iret
dec
testl
push
dec
lahf
shlb
cwtl
xchg
jns
dec
pop
mov
xor
mov
mov
push
adc
test
lcall
jae,pn
jl
pop
adc
mov
fidivrs
pop
dec
cs
cmpsl
jl
enter
mov
ret
in
add
and
pushf
cmpsb
add
imul
loopne
sub
insb
dec
mov
arpl
test
inc
jp
mov
mov
fstl
sti
lea
jp
js
pop
xlat
inc
cmp
mov
jecxz
lock
subl
loop
cmp
cmpsb
dec
aas
nop
cmp
enter
or
leave
xchg
loop
adc
js
lcall
dec
int3
sbbb
mov
cmp
pushf
push
pop
loope
cwtl
cmp
ss
loopne
pop
fnsave
xor
scas
mov
mov
in
call
je
aaa
sub
shrl
lcall
lcall
add
repz
or
dec
shrl
lock
lods
xchg
pop
jne
or
adc
iret
gs
xchg
jecxz
rol
sti
aaa
mov
jne
fldenv
lret
add
mov
mov
aam
add
int3
jg
dec
pop
dec
enter
push
adc
movsb
inc
pop
or
ljmp
cmp
pop
cli
pop
add
or
negb
pusha
data16
mov
cld
mov
leave
in
leave
aaa
lods
add
add
add
lods
and
test
sbb
add
mov
test
iret
pop
inc
jo
add
inc
popa
jbe
dec
dec
iret
xchg
cli
iret
sbb
xchg
inc
dec
mov
fnstcw
ss
sarl
xchg
pop
fsubs
xchg
mov
xchg
lea
imul
xchg
dec
mov
sub
sub
mov
inc
cmc
into
inc
cmp
leave
inc
ficomps
es
xor
push
jg
sub
jmp
insb
jge
push
test
dec
lea
mov
inc
mov
dec
fdivp
or
sub
add
in
and
add
push
xor
sub
ss
dec
pop
data16
repnz
inc
les
mov
mov
mov
lret
push
scas
dec
mov
sahf
xchg
jb
enter
sub
ret
cmp
or
add
mov
dec
das
pop
out
cmc
mov
pop
cld
or
add
add
add
xlat
test
scas
or
push
inc
jbe
push
jmp
out
xchg
push
cmp
pop
push
cmpsl
add
pop
inc
inc
xchg
popa
cltd
mov
jae
ret
daa
mov
ja
out
rol
dec
jmp
negl
enter
inc
nop
sub
jle
sbbb
loope
repnz
sti
xor
addr16
mov
bound
frstor
mov
les
push
jbe
adc
cli
push
pop
mov
int3
arpl
dec
ficoml
in
mov
inc
mov
mov
fiadds
push
inc
cmp
mov
les
movsl
icebp
mov
add
inc
mov
in
adc
ret
mov
mov
in
aas
test
sbb
cld
icebp
sahf
xchg
lahf
xor
push
test
int3
jnp
pop
dec
pop
aam
dec
cwtl
mov
jle
mov
add
fucomip
std
dec
std
pop
lcall
xchg
pop
push
push
inc
test
add
add
add
enter
fidivl
or
mov
pop
scas
cmp
jmp
mov
adc
cmpsb
addr16
mov
outsb
xchg
rcr
and
sub
inc
push
adc
cmp
in
add
cltd
hlt
scas
sub
pop
xchg
lret
push
int3
adcl
ds
push
arpl
iret
or
cltd
inc
in
imul
icebp
add
mov
mov
mov
addr16
or
jo
ljmp
inc
inc
cmc
cmovb
jmp
xor
mov
loopne
loopne
lret
pusha
mov
pop
push
test
pop
rcl
jns
mov
dec
dec
mov
push
pop
dec
add
fidivrs
aaa
xor
setns
adc
aad
push
lcall
mov
pop
adc
adc
pop
xlat
out
mov
jne
aas
sub
pusha
xchg
add
call
sub
ja
add
add
fidivs
loop
ljmp
cmp
add
add
add
cmp
scas
cmp
cwtl
imul
inc
push
adc
popa
add
popa
xor
and
dec
fwait
imul
lock
sahf
pop
iret
fildl
das
dec
cmp
push
js
dec
sbb
fnstsw
pop
adc
andb
sbb
add
mov
loopne
insb
inc
cmp
and
ret
pop
adc
in
ljmp
jbe
loopne
ror
fildll
xor
icebp
fs
xchg
mov
leave
sub
inc
fdivl
mov
sub
pushl
in
out
sub
pusha
lds
mov
jl
bts
lret
xchg
enter
mov
xchg
fistps
popf
decb
jo
sub
xor
push
scas
mov
cmp
sub
rcrb
fcompl
bound
sti
call
cmp
or
inc
clc
mov
xor
mov
add
add
xchg
jg
jmp
std
mov
shll
addr16
add
add
add
adc
inc
jns
mov
adcl
mov
sub
or
push
mov
adc
mov
push
mov
and
xchg
clc
fidivrl
jbe
lea
cmp
adc
call
lret
ret
ss
mov
inc
shrb
or
rcll
or
xchg
and
bswap
mov
pushl
inc
scas
fistpll
cli
push
mov
mov
sar
out
or
pop
iret
jge
cltd
pop
shl
fcomps
cli
int3
aad
jmp
cs
adcb
outsl
add
xor
push
xchg
inc
in
loop
sub
xlat
inc
out
fdivl
inc
in
inc
xchg
xchg
scas
fstpt
insl
ja
and
rcrl
call
mov
ljmp
xchg
inc
sbb
or
mov
push
divb
inc
mov
sbb
mov
add
add
add
pusha
jmp
and
mov
mov
adc
stos
xor
in
rolb
xchg
faddl
pusha
fabs
xchg
daa
lock
cmpsl
sbb
xchg
popa
dec
cmpsb
mov
paddusw
jne
cld
fisubs
inc
xchg
or
iret
push
in
push
bound
cmpsl
fiadds
pop
add
ds
xor
mov
mov
mov
cs
std
sbbl
inc
repnz
and
add
int3
inc
out
nop
scas
cmp
xor
inc
dec
into
mov
ffreep
outsl
not
inc
mov
cs
mov
jmp
push
ljmp
push
aad
dec
mov
inc
inc
jmp
ljmp
mov
and
add
cmpsb
jns
repz
jnp
repnz
dec
xchg
inc
and
es
aas
fiadds
je
dec
js
jbe
mov
jnp
loop
cld
or
mov
pop
push
pop
xor
cmp
inc
call
andl
add
sbb
mov
into
shlb
fstp
add
fists
push
push
mov
aam
repnz
cli
bound
outsb
cmpb
cli
fwait
or
mov
push
testb
pop
int
pop
pop
mov
lods
ja
or
xchg
and
mov
jns
and
mov
popf
movl
inc
mov
and
test
jmp
mov
cld
repnz
mov
cld
loope
ret
pop
fsubs
inc
outsb
cld
daa
mov
mov
fstp
dec
inc
jno
movsb
jno
adc
out
jo
ret
pop
hlt
mov
cld
into
mov
or
dec
adc
mov
rcrb
insb
dec
cmc
mov
jne
std
cmp
call
js
scas
in
mov
pushf
mov
lret
pop
and
icebp
push
scas
out
ljmp
add
add
jp
les
mov
arpl
ret
mov
add
add
add
xor
mov
add
cltd
dec
lods
inc
add
mov
mov
fs
scas
sarl
ljmp
daa
lds
out
lret
js
je
arpl
inc
sbbl
mov
xchg
dec
iret
fiaddl
lea
inc
xor
bswap
xchg
mov
test
adc
and
data16
push
xor
aaa
mov
stos
ja
ret
lret
cwtl
dec
sub
fstps
cld
in
adc
sti
inc
nop
addr16
imul
enter
out
orb
imul
fsubp
adc
push
add
sub
lods
pop
pop
sub
test
or
dec
push
lahf
lods
mov
cmp
inc
jbe
mov
int
int
push
adc
xor
rorb
xchg
xlat
repz
in
mov
push
test
pushf
mov
mov
add
add
clc
pop
stc
out
push
pop
bound
xchg
addr16
add
add
add
push
into
mov
js
daa
sub
das
pop
inc
push
xchg
pop
xchg
cmpsb
push
out
add
and
sahf
cltd
jns
int
xorl
int
xchg
pop
out
adc
rorl
mov
sbb
xchg
popa
jmp
das
pop
daa
lock
cwtl
movsb
push
loope
adc
test
dec
and
inc
cmp
adc
imul
xchg
ret
mov
push
mov
shlb
fsts
shlb
lcall
popf
mov
cmpl
or
add
outsb
inc
xor
cmpl
sub
lds
fs
scas
lods
pop
cmpsl
sub
lea
lret
movsb
push
loop
add
xor
mov
pop
xor
fadd
cli
mov
cmovb
push
mov
call
test
jecxz
jl
pop
mov
fistpll
inc
lcall
cwtl
lds
cli
lcall
push
addr16
add
add
add
cmp
enter
in
push
mov
enter
xor
push
mov
cmp
loope
cli
dec
loope
push
mov
loope
imul
fldenv
xor
mov
xor
mull
jle
ret
gs
fistl
cmp
or
mov
addr16
sbb
push
add
mov
cmp
sbb
pop
and
hlt
lret
jmp
adc
add
std
cmp
lea
mov
pop
je
add
and
fmull
dec
or
aad
pop
stos
inc
inc
shrl
mov
and
mov
out
aas
or
xor
sub
or
mov
mov
xor
pop
ret
and
push
test
inc
mov
push
pop
repz
cmp
cmp
sub
xchg
inc
jno
arpl
jne
xorl
insb
lret
fistps
mov
add
add
add
xor
and
test
adc
sbb
rorl
pop
sbb
pop
loop,pt
fcomps
xchg
aas
cs
xor
fwait
stos
mov
or
adc
push
add
or
sub
xlat
push
adc
adc
jae
jmp
or
sbb
jbe
shlb
insb
mov
pop
daa
and
adc
repz
aam
xor
push
sub
std
das
lret
mov
mov
mov
sti
cmpsl
xchg
sub
and
repz
cmpsb
pushf
cmp
enter
jl
adc
in
xor
sbb
add
lcall
pop
fwait
jmp
dec
loope
or
jae
cmp
sub
xor
je
jmp
addps
sub
add
add
pop
sbbl
fstp
rorl
cmp
addr16
add
add
add
sbb
or
cmc
int3
sub
push
adc
or
out
aaa
adc
popa
fs
add
mov
ret
mov
and
fsubrs
sarl
rorl
pop
and
cmp
mov
scas
fildll
mov
sub
sbb
or
sbb
add
iret
test
adc
sahf
pushf
rcll
mov
lahf
cmp
jmp
push
gs
sahf
rcl
mov
pop
xor
xor
popa
lret
loop
cmp
inc
mov
mov
sbb
movsl
ds
cld
cli
into
and
out
push
mov
ret
sub
ds
movsb
sbb
loopne
daa
mov
aas
jns
jne
push
out
mov
jbe
inc
mov
scas
xchg
xor
xchg
xlat
push
loopne
hlt
jecxz
mov
add
add
in
mov
jecxz
out
mov
dec
mov
addr16
add
sbb
decb
cmp
adc
inc
les
scas
xor
negl
call
jae
xor
mov
add
cmp
dec
enter
and
dec
sub
lahf
gs
inc
or
dec
or
lods
mov
dec
inc
testb
mov
out
aad
shl
mov
push
mov
gs
or
mov
sub
xchg
mov
insb
stos
imul
out
mov
mov
pop
add
mov
sub
cmp
sets
aad
mov
scas
int3
push
dec
adc
insl
cmp
in
mov
mov
or
bound
mov
adc
sarb
andl
xlat
push
and
sti
push
nop
xor
lahf
mov
xchg
sbb
sub
pop
inc
push
xchg
test
jg
into
lret
orl
add
add
pop
xchg
jnp
jl
arpl
mov
outsb
push
dec
push
loope
sahf
popa
mov
pop
cmp
jnp
push
leave
pop
or
aam
dec
add
jl
fisubrs
loop
jecxz
out
ja
les
pop
inc
or
adcb
or
or
push
das
popa
aaa
lcall
aas
xchg
push
ret
fisubrl
mov
cmpsl
dec
jle
mov
pop
sub
rolb
sub
sbb
gs
jno
repz
enter
adc
leave
mov
test
rclb
or
jno
insl
or
mov
cmp
movsb
popa
mov
jp
adc
mov
xchg
aas
sbb
sub
cld
adc
dec
sub
jns
add
pop
enter
cmp
push
gs
lahf
lret
incb
mov
jne
test
lock
in
lcall
jae
dec
mov
stc
pusha
addr16
add
cmp
sub
scas
sbb
dec
movsb
mov
fwait
jnp
icebp
cmp
roll
and
lret
jnp
mov
jmp
jp
outsb
sub
mov
aad
mov
inc
in
or
adc
dec
sti
in
xor
jg
sub
ret
push
inc
push
insl
fisttpl
inc
in
repz
sub
or
mov
fcmovb
shrb
adc
sbb
and
mov
shll
dec
std
dec
mov
cmp
addr16
jg
lods
push
int3
mov
jae
jmp
pop
sbb
imul
inc
pop
add
das
lods
sub
in
push
xorl
fistl
cmp
sub
pushf
mov
sahf
orb
aas
test
fsubs
paddd
dec
add
daa
cmp
add
dec
or
jg
dec
arpl
fs
add
subl
xchg
lods
cwtl
add
shll
sub
inc
and
dec
fwait
cmp
pop
daa
sarl
add
daa
push
fwait
mov
mov
aam
adc
jnp
push
repz
test
or
mov
daa
sub
loopne
jo
mov
cwtl
mov
add
test
or
fstps
sarl
decb
repnz
sub
inc
loop
cwtl
std
jnp
aam
data16
rorb
into
xor
jg
pop
or
les
jge
sarl
dec
adc
arpl
xor
arpl
loope
cli
mov
clc
jle
adc
arpl
dec
mov
xchg
cli
jp
dec
xchg
testb
xor
sbb
imul
sub
mov
dec
add
pop
and
cwtl
or
insl
sbb
outsl
mov
push
lcall
add
add
icebp
mov
into
ja
call
sub
push
jno
push
dec
xor
mov
xchg
add
inc
xor
fisubrl
lahf
jne
cli
jge
test
mov
sbb
inc
divb
adc
jl
cmpsb
ret
jb
jp
cmpb
stos
mov
cld
roll
aas
adc
les
inc
cmc
fs
sub
add
movsl
ss
test
mov
xchg
test
fcoml
in
mov
cmp
jecxz
sub
hlt
adc
pop
mov
jg
lret
iret
ds
adc
push
shl
outsl
or
lret
repnz
iret
lret
cmp
adc
arpl
mov
data16
cmp
sub
pop
add
dec
js
cmp
inc
mov
cwtl
inc
inc
aas
sbb
mov
pop
sub
call
cmp
out
call
cld
inc
aam
mov
pop
cmp
push
cmpsl
je
xor
mov
pop
repnz
mov
add
add
ds
movsb
mov
inc
shl
mov
mov
pushf
mov
mov
adc
sub
mov
loope
push
lods
jbe
dec
mov
jns
sub
mov
ret
out
roll
scas
add
rclb
add
mov
scas
mov
inc
std
call
subl
cmp
xor
rclb
out
push
cli
inc
outsb
rcl
xchg
insl
push
arpl
push
sbb
pushl
pop
js
loope
aaa
jmp
fmuls
push
jp
add
push
cli
xchg
inc
xchg
sub
mov
pop
addr16
inc
fsubr
adc
pushf
jl
lcall
push
int
cltd
scas
adc
push
cmp
push
sbb
mov
out
xlat
fnstcw
andl
mov
pop
das
push
push
call
push
sub
loop
mov
add
push
in
xchg
test
push
or
jp
jae
or
movsl
cld
test
outsl
or
daa
sub
das
jbe
bound
ret
pmulhuw
movsl
jo
push
jecxz
pop
inc
stos
sbb
stos
dec
cmp
outsb
jae
stos
stos
xchg
jo
into
dec
xor
int3
cwtl
mov
jne
push
xchg
or
sub
outsl
and
jp
leave
fstpl
xor
pop
imull
lcall
push
mov
in
test
and
push
ljmp
nop
stos
xor
or
add
pop
sbb
mov
sub
pop
or
pop
lea
xor
mov
add
icebp
push
enter
stos
in
jbe
les
xor
xlat
mov
mov
cwtl
fwait
icebp
jnp
cli
leave
push
mov
jns
add
add
into
std
sti
leave
sti
iret
jmp
lock
addr16
add
xor
in
roll
sub
xor
pop
std
mov
js
lods
ja
or
mov
dec
ss
pop
push
pop
insb
cld
orl
xchg
sbb
add
in
mov
loop
sbb
mov
inc
push
in
xchg
inc
inc
mov
sbb
ds
or
xchg
repnz
adc
shrl
and
stos
in
data16
cmc
repnz
add
lods
scas
mov
sbb
sbb
lods
sub
adc
ljmp
icebp
push
xchg
call
lds
xchg
lahf
mov
sbb
pushf
mov
test
pop
jo
rcrl
mov
push
xor
imul
cmp
divl
cmp
cmp
addb
and
aaa
popf
push
dec
inc
fsubrp
js
and
add
add
mov
xor
hlt
adc
rolb
add
add
push
pop
shl
movsb
push
out
xchg
cld
fs
xor
lea
jp
sti
jbe
adc
mov
push
mov
xchg
push
jmp
jb
insb
pop
lods
push
repnz
mov
js
mov
into
inc
mov
fdivr
shl
incl
jge
stc
inc
mov
push
addr16
and
ucomiss
push
push
add
int
push
fisttpll
lret
xchg
push
sbb
mov
mov
dec
fisttpl
fadds
sbb
inc
jne
scas
xor
lods
adcl
sub
or
mov
dec
pop
in
mov
das
ret
lods
mov
adc
std
data16
sbb
ret
rorb
repz
imul
stos
hlt
das
mov
push
mov
pop
pop
cli
pop
inc
out
enter
adc
sub
scas
shl
fidivs
xor
daa
ds
lea
fwait
mov
or
jg
mov
sahf
loop
dec
popf
and
add
add
add
sahf
gs
ret
ficoml
or
test
mov
add
arpl
mov
mov
movaps
xor
jle
add
or
mov
test
sub
sub
cmp
mov
xor
loope
and
xorb
shlb
stos
cltd
scas
xor
sarb
xor
mov
xor
addr16
cltd
out
pop
shll
shll
fdivrs
xor
pop
dec
and
aad
dec
jae
inc
push
stc
ss
inc
push
dec
mov
push
mov
cwtl
aad
out
sti
mov
inc
jno
xchg
mov
pusha
adc
mov
xchg
xchg
xchg
mov
dec
xor
push
shrb
inc
and
xchg
xor
cmpsb
and
mov
arpl
out
fmul
js
or
push
jnp
xor
push
cld
pushl
cld
sbb
addr16
add
add
or
mov
out
popf
mov
testl
or
jne
mov
aad
sarl
mov
rcll
inc
cmpl
xchg
cmp
hlt
out
lret
xchg
fs
faddl
aad
mov
pop
xor
hlt
sbb
dec
repz
aas
aad
pop
sbb
shr
in
xchg
push
push
cmc
jmp
enter
inc
jmp
mov
adc
cli
lock
sbb
xor
sub
add
pop
push
mov
sbbb
adc
in
cs
sarl
fldt
inc
sbb
mov
mov
xchg
fsubrp
jecxz
inc
call
stc
call
inc
repnz
cs
mov
fmul
lcall
xor
sbb
push
movhps
jb
mov
jnp
push
xlat
pushf
shrb
lcall
or
ret
add
add
add
test
adc
cmp
jmp
sub
sahf
cmpsl
pop
arpl
jle
or
inc
aad
dec
dec
push
loop
nop
js
test
rorb
aas
andl
mov
ja
cmp
xor
adc
pop
fld
stos
add
mov
push
and
push
andb
push
int3
leave
pop
les
repnz
cmc
jmp
push
andl
ds
xor
scas
shll
push
insl
xlat
push
test
outsl
and
stos
mov
adc
lcall
out
insl
pushf
cmp
pop
inc
push
cmp
test
xor
leave
adc
or
mov
pusha
adc
outsb
mov
or
shrb
arpl
mov
insl
je
jg
inc
or
repnz
imul
sbb
imul
iret
insl
jmp
add
add
test
mov
aas
scas
fldcw
mov
les
add
add
add
in
aad
adc
and
leave
fmulp
mov
aad
out
in
iret
mov
push
aam
sbb
inc
xchg
sarl
xchg
hlt
push
sub
mov
rorb
repnz
xchg
mov
aas
dec
push
xor
mov
push
inc
in
dec
jl
pop
mov
and
jne
negb
js
addb
fwait
xor
rolb
mov
fdivl
mov
jns
xor
ds
les
rorl
into
rep
push
push
jmp
ret
sub
cmpb
sbb
jmp
jae
jns
mov
add
into
adcl
data16
pop
hlt
mov
adc
mov
test
in
decb
or
mov
xchg
test
cmpl
je
or
mov
stos
out
inc
sbb
cmp
insl
repnz
add
movsb
sbb
add
add
jne
jne
jg
loop
mov
shlb
add
add
add
mov
push
cwtl
push
push
sti
dec
imul
fstpl
pop
mov
imul
scas
sbb
xchg
fmull
idiv
xchg
jb
push
outsb
xchg
fistps
or
cmp
adcl
jb
cmp
icebp
xor
fmull
mov
int
xchg
shrl
mov
sti
stos
loope
pop
lea
ja
add
out
dec
mov
popa
and
or
or
loop
sarb
shl
int3
outsb
add
popf
jecxz
xor
mov
or
in
dec
cmp
repz
ret
imul
xchg
push
bound
aas
jmp
push
and
fiadds
inc
into
xor
pop
cmp
adc
les
push
mov
sbb
fwait
stc
or
push
or
cld
rcll
outsb
push
int
mov
loopne
andb
fcmovu
pop
add
xor
adc
add
add
dec
pop
mov
cmc
mov
lahf
movb
add
add
mov
movsb
jns
mov
sub
roll
sahf
insl
xchg
mov
add
insl
cmc
dec
mov
xchg
or
fisubrl
scas
sarl
loopne
js
pop
cmc
lds
addr16
jecxz
jno
aam
cmp
jle
out
cmpsl
mov
adc
or
mov
inc
rcrl
fsts
lock
cmpsb
mov
in
mov
clc
adc
out
loope
into
call
movsb
hlt
dec
mov
xchg
test
or
imul
xor
cmpsl
cmp
stos
push
test
les
jnp
fs
cmc
add
imul
adc
andb
bnd
and
mov
aam
cs
push
mov
imul
cmpsl
clc
and
mov
push
or
mov
jl
pop
ror
jb
push
mov
push
dec
loopne
je
mov
jg
loop
or
and
outsb
jle
lods
testl
movl
add
pop
test
outsl
outsl
leave
test
inc
rcll
pop
push
or
push
pop
mov
cmp
addr16
sub
sahf
inc
test
cwtl
xchg
mov
mov
or
or
outsb
push
sub
outsl
adc
in
adc
mov
test
fninit
lods
mov
mov
jl
sbb
mov
xchg
repz
add
int
sarb
enter
aas
cmpl
add
ret
dec
mov
leave
enter
aaa
inc
sbb
add
adc
inc
mov
daa
and
mov
cmpsb
data16
cmp
jg
les
lret
imul
fmul
icebp
xchg
mov
mov
ret
out
pop
and
push
aaa
scas
imul
xchg
and
sahf
xor
dec
and
out
lds
clc
out
aam
lret
add
and
outsl
gs
mov
mov
add
adc
add
add
adc
mov
sbb
sbb
test
pop
dec
dec
lahf
repnz
cmp
mov
mov
pop
push
out
or
ret
repz
jno
mov
mov
fnstcw
data16
push
inc
or
xchg
inc
lret
lods
or
and
cmpsl
std
aaa
shl
out
and
cld
xchg
arpl
mov
sbb
mov
mov
jb
les
lods
mov
dec
cmpsl
ret
xor
and
popa
jge
aaa
popa
lock
cltd
mov
mov
pop
dec
cld
mov
sub
mov
xchg
jno
pop
test
and
shlb
out
je
dec
lea
xor
mov
jp
mov
popf
xor
scas
adc
push
ja
jmp
add
mov
push
xchg
repnz
jo
nop
sub
sbb
addr16
jb
sti
test
sbb
xlat
in
aad
fwait
pusha
push
fsubs
add
add
add
ljmp
das
xor
jnp
faddp
jb
pop
test
jmp
mov
les
add
mov
aam
daa
mov
arpl
adcl
xchg
lcall
out
cmp
int3
call
aaa
cmpsw
inc
ljmp
mov
push
adc
inc
mov
or
and
iret
leave
aad
sub
xor
adc
sbb
adc
jecxz
int
aad
bswap
and
sub
dec
mov
mov
lods
sub
leave
mov
fdivrl
push
push
cmp
xchg
clc
add
mov
ficoml
mov
in
loopne
rorl
xor
sub
lahf
adc
in
dec
or
in
icebp
cld
int3
popf
and
dec
xacquire
cmpsl
mov
int
inc
jg
add
add
push
sub
cmp
jg
and
mov
cmp
lret
add
add
lret
jecxz
call
push
test
icebp
xor
out
mov
push
push
je
int
pusha
movsl
add
je
sbb
jecxz
xchg
lahf
iret
js
mov
push
rcrl
push
loopne
xchg
rorl
dec
add
jo
ret
jbe
roll
rol
add
subl
xchg
push
xchg
jae
inc
mov
cmp
in
daa
pushf
je
dec
dec
lahf
hlt
loopne
and
mov
jmp
lret
test
mov
in
push
int
rclb
jge
sbb
mov
cwtl
test
xchg
in
icebp
iret
cmp
mov
enter
outsb
push
stos
xchg
gs
gs
inc
call
dec
ds
cs
pusha
adc
mov
inc
sub
lret
cmp
sub
push
nop
flds
outsl
push
jb
jnp
fdivr
cld
loope
sahf
lahf
or
les
pusha
sbb
sti
fisubs
jmp
ds
repz
fcoms
lock
loopne
lret
add
add
add
mov
inc
stc
and
push
cwtl
xchg
lock
add
subl
dec
inc
xor
mov
add
das
int3
jle
mov
pop
movsb
pusha
mov
mov
mov
adcb
rcl
jecxz
cwtl
xlat
testb
xchg
pop
mov
mov
push
imul
sbb
dec
xor
cmpl
mov
test
icebp
mov
ror
shl
cmp
jns
inc
les
push
arpl
call
cwtl
jns
xor
inc
in
xor
mov
push
dec
jb
jbe
push
loope
jl
repz
xor
pop
push
xlat
dec
lret
mov
sbb
data16
adc
shl
mov
fldcw
cmp
and
push
adc
xchg
add
gs
daa
imulb
outsl
mov
fildl
add
add
mov
mov
iret
and
add
add
add
mov
in
dec
mov
fisubl
or
inc
push
push
mov
adc
inc
and
int
jnp
sub
fisttpll
jle
mov
shll
stc
loop
data16
rorl
push
jl
idivl
push
ret
add
sahf
dec
push
or
cmpsb
and
out
xor
sti
cmp
mov
push
cmp
xor
test
fsubs
fldcw
rorl
dec
dec
repnz
cwtl
and
mov
mov
mov
cmp
and
sub
ret
scas
xchg
test
lods
in
or
fs
add
fwait
jno
shll
mov
rcrl
sub
adcl
loopne
stos
ja
test
outsb
mov
ss
rorb
push
aaa
mov
or
outsb
mov
mov
jmp
mov
mov
je
rcrl
jne
lret
cmp
in
stc
enter
in
sbb
push
inc
and
add
add
add
xor
push
adc
jg
rcrl
mov
xor
les
stc
mov
jne
test
fcomps
hlt
imulb
xlat
and
cmc
sbb
xor
or
sbb
sbb
xchg
into
jg
mov
adc
add
aaa
dec
and
es
shr
add
aad
out
mov
inc
aaa
jp
lds
lds
inc
mov
int3
cmp
lds
dec
sbb
jno
xchg
jnp
lret
cmpb
inc
rcrb
out
cmp
ret
pop
insb
lea
mov
sbb
mov
jecxz
xor
popa
divl
sbb
and
popa
mov
add
sub
pop
xlat
popa
jl
mov
fidivl
xchg
push
xor
jno
jo
ja
pop
gs
and
xchg
pop
inc
daa
dec
jns
bound
and
mov
jne
imul
cmc
call
inc
push
popa
xchg
pop
mov
addr16
add
add
add
nop
jmp
push
mov
xlat
mov
lds
xlat
mov
mov
test
fs
pushf
imul
mov
stc
add
int3
sbb
sub
inc
push
mov
idivl
inc
dec
stos
mov
arpl
mov
jnp
outsb
xchg
jmp
push
push
mov
cwtl
adc
cltd
pop
test
mov
in
mov
add
xchg
aad
sub
cmp
jge
nop
add
mov
push
inc
dec
fisubrl
push
inc
mov
aas
pop
pop
dec
jmp
lcall
in
insl
cmpsl
pop
es
sbb
das
inc
out
fcomp
mov
out
test
adc
push
mov
inc
in
lret
mov
dec
sbb
mov
outsl
push
inc
xchg
aad
mov
mov
fdivrl
out
lods
mov
add
add
ja
iret
sub
push
sahf
mov
iret
add
add
add
cmp
imul
mov
push
adc
or
mov
popa
cmp
out
mov
push
mov
cld
ljmp
mov
pop
pop
xchg
dec
mov
push
push
push
adc
lods
dec
das
mov
push
dec
or
enter
test
scas
cs
jne
mov
mov
das
sarl
stc
sti
shll
lret
lea
jmp
fwait
push
mov
sbb
push
sbb
cmp
jmp
sbb
add
cli
lret
in
insb
repnz
push
inc
inc
lcall
pusha
lea
push
inc
xor
aaa
mov
loop
ljmp
add
adc
dec
mov
cmp
leave
xchg
fstl
push
sbb
inc
xor
jmp
mov
pop
mov
loopne
dec
call
inc
fists
dec
fs
mov
add
add
out
into
gs
cld
test
fsub
rolb
add
add
add
test
sbbb
pop
xchg
stc
sub
push
insl
int
shl
push
cmp
lret
dec
sub
xor
subb
mov
out
out
in
aad
je
jns
clc
repz
push
adc
cmp
decl
jge
sub
sbb
orl
push
push
sbb
rorb
xlat
shl
jbe
sub
push
sbb
dec
xchg
loope
mov
mov
jns
sbb
in
test
mov
jb
insb
ret
test
xchg
xor
jbe
dec
aas
jnp
dec
ds
xchg
xchg
inc
cmpsl
jge
je
xor
repnz
fucomip
fnstcw
cmp
int3
leave
xchg
mov
jmp
add
sbb
je
stos
sub
sub
aad
outsl
popa
popf
setne
test
daa
stos
dec
jo
and
sub
ja
pop
mov
lret
loopne
and
je
out
mov
inc
sbb
roll
add
add
add
cmp
outsl
lcall
scas
int3
pop
cld
das
xor
in
je
push
inc
push
iret
filds
mov
imul
and
test
push
xchg
sar
cld
inc
mov
pop
dec
out
scas
mov
and
sbb
xor
lret
xchg
in
sub
sub
movsb
push
sub
aam
test
lock
movsl
stc
and
pop
sub
adc
xchg
ret
lea
mov
push
xchg
imull
push
mov
xchg
test
call
aam
test
jp
cmp
or
mov
int3
mov
ds
aad
dec
fidivs
and
repz
push
into
cld
add
vfmaddsd
sub
push
jmp
jge
sarl
mov
fcmovne
outsl
ss
sub
jl
dec
cwtl
hlt
sub
add
push
lods
jne
dec
inc
dec
daa
dec
das
outsb
imul
push
xchg
fdivrl
hlt
int3
rolb
add
add
add
loope
xor
mov
or
xorl
es
xchg
push
shll
pop
jge
flds
loopne
jnp
pop
pop
or
ret
imull
jbe
pushf
inc
dec
fisubrl
mov
call
mov
pusha
icebp
add
stos
ret
or
mov
mov
outsb
movl
hlt
cmpsl
or
jne
or
mov
add
sar
loop
insl
cmp
mov
xchg
jns
mov
mov
sub
sub
int3
sbb
sbb
pop
push
lds
insl
jno
sub
fsubs
stos
imul
mov
outsb
ja
mov
cmp
pop
insl
icebp
insb
add
push
mov
pop
jo
xor
push
mov
in
into
xlat
int
stc
mov
fxch
scas
adc
fmul
xchg
div
push
inc
aas
xchg
xor
dec
aas
cmp
lock
mov
call
out
lahf
ret
or
adc
roll
add
add
add
pop
ret
pop
xchg
pop
xor
aam
or
pop
test
mov
push
mov
mov
stc
sub
ss
and
dec
das
push
rclb
cmp
out
jns
push
inc
sub
popa
cmpl
nop
adc
mov
stos
dec
xor
std
mov
fsubl
js
and
mov
int3
movhlps
or
and
addr16
mov
xlat
decb
lret
fcomps
jo
pop
mov
xor
xor
adc
sub
mov
aaa
sub
std
push
incl
inc
int
orl
in
mov
xchg
pop
jmp
int3
cmc
cmpsb
leave
stos
or
cmpl
pop
jnp
test
fdivp
push
and
mov
cmp
notl
aaa
jmp
mov
and
adc
jns
add
add
neg
outsl
push
xchg
or
enter
add
add
add
or
inc
bound
negb
insl
mov
rcr
pop
ljmp
or
jle
pop
dec
sub
mov
movsl
cli
jno
mov
mov
jge
or
adc
daa
mov
inc
push
vdivps
xchg
mov
mov
sti
mull
or
xor
xor
jbe
jecxz
cmp
and
xchg
adc
jle
fs
filds
or
je
xchg
stos
popa
push
js
push
jnp
scas
pop
xchg
and
cld
inc
pop
mov
xchg
cmpsb
cwtl
push
bound
sahf
mov
sbb
icebp
fucomi
xchg
cmp
add
inc
add
adc
xor
inc
and
addl
pop
sarb
jmp
test
jge
insb
add
outsb
cmp
add
sub
mov
js
addr16
fimuls
mov
mov
xor
add
sbb
sub
dec
mov
xor
addr16
add
add
add
mov
add
mov
or
rcll
lret
xchg
js
outsb
xchg
mov
xor
push
and
lods
rcr
inc
jle
daa
nop
inc
or
movsb
cmc
notl
ljmp
and
sub
gs
in
mov
lret
fs
arpl
lcall
mov
sub
push
xchg
inc
pop
dec
fs
loope
pop
push
push
fcoml
loop,pn
dec
mov
hlt
scas
mov
or
imul
add
stos
ret
repz
cmp
mov
iret
fwait
js
into
sbb
mov
out
outsb
inc
mov
icebp
shrb
cmpsb
jl
or
pop
roll
inc
das
sarl
jge
andl
out
jl
xchg
add
clc
loope
negl
mov
lock
out
cld
jbe
and
jmp
imul
push
mov
pushf
adc
ds
jae
out
frstor
add
add
add
and
cs
jmp
popf
or
jle
mov
or
call
adc
fldenv
in
xchg
lret
insb
hlt
pop
dec
xor
lods
cmpsl
push
je
adc
imul
sahf
jl
push
movsb
dec
sbb
sub
add
aam
movb
aad
testb
add
xchg
mov
addr16
dec
add
inc
or
sarb
mov
jmp
popl
cwtl
and
fisubrs
pop
adc
imul
mov
repz
push
mov
test
xor
push
inc
ret
repz
icebp
adc
data16
negb
lock
outsb
cmp
mov
pushf
dec
cltd
pop
push
and
sahf
xchg
subl
cmc
adc
mov
jae
addr16
jecxz
mov
andb
sub
or
add
add
lcall
jnp
lods
ret
adc
xlat
add
add
add
jg
stos
and
jne
and
push
pop
leave
mov
out
mov
daa
pop
cmp
push
test
pop
pop
aas
lcall
cmp
adc
into
ja
jno
push
cwtl
mov
stos
sub
popa
imul
jns
add
daa
jp
movsb
jb
cmp
and
sub
aam
cwtl
push
cmp
and
fcom
or
ret
lock
lret
xor
loope
and
cltd
jo
fcmovnb
add
jne
inc
push
sub
jnp
jmp
cltd
inc
mov
addr16
cmpsb
add
cmp
sub
ljmp
pop
sbb
xor
bound
cld
xchg
sbb
aas
inc
bnd
and
test
sub
add
xchg
pop
xchg
adc
enter
adc
fsqrt
jae
sub
fcomps
dec
pop
push
std
ret
pop
lcall
pop
add
fistps
inc
cmc
std
cmp
jg
leave
or
push
fcmovnu
sub
add
add
add
aaa
mov
mov
inc
repnz
cmp
out
cmpsb
xor
cmpsb
push
or
xor
mov
sub
iret
outsl
sub
sbb
xchg
lret
neg
dec
jbe
pop
in
shlb
loop
subl
cmc
lret
lret
inc
icebp
mov
andl
sub
lahf
fwait
inc
lods
les
jmp
add
btc
nop
mov
push
stc
xorb
push
add
jmp
dec
nop
adc
jge
hlt
jl
scas
push
push
ret
movsl
loop
icebp
lret
sbb
fisubl
and
or
sub
testb
aas
cmp
addr16
xchg
andl
push
pop
jge
xchg
ljmp
out
imul
or
jno
push
fnstenv
push
xchg
or
sahf
test
add
add
int
out
out
imul
nop
xchg
movsb
cmp
add
add
add
add
xchg
fwait
test
rolb
lods
lahf
hlt
insl
adc
nop
mov
jae
add
mov
divl
clc
mov
cld
dec
orb
fstps
decb
mov
mov
ja
mov
cltd
shlb
aas
int3
ss
adc
pushf
fldcw
xchg
bound
or
iret
out
cmpsl
push
push
adc
lods
inc
mov
in
aad
xchg
mov
les
aam
xor
sbb
stos
ror
dec
sub
pop
lea
jnp
in
cmp
mov
insl
add
push
add
add
xchg
mov
imul
jmp
sub
lock
lcall
xchg
mov
add
daa
fwait
dec
pshufw
pop
test
jbe
adc
pusha
repnz
xor
adc
add
add
psubusw
push
in
sub
int
fiaddl
add
add
add
mov
repz
das
adc
jns
les
test
clc
shlb
inc
cmp
test
or
and
pop
gs
frstor
incb
mov
cmp
push
out
ret
push
and
pop
xlat
xor
mov
fsubl
jbe
idiv
mov
loope
cmpsl
dec
in
in
test
faddl
enter
sbb
cmp
fisubs
pop
std
pusha
ret
jne
add
push
lahf
push
xor
je
mov
push
xchg
ss
pop
daa
xor
sbb
sub
xor
push
mov
shrl
popf
sti
pop
movsl
sar
leave
or
jne
dec
pop
stos
ds
pop
movsl
jecxz
lock
mov
fdivl
jge
mov
push
mov
hlt
enter
mov
imulb
jmp
test
pop
cmpxchg
in
sbb
sahf
cmc
fsubrp
jnp
sti
enter
popa
movsb
fildl
add
add
add
push
and
sbb
mov
push
xorb
xchg
xor
insl
xlat
scas
sub
sub
out
out
mov
sub
fwait
xchg
out
mov
idiv
sbb
mov
dec
adc
shrb
hlt
pop
pop
shrl
adc
std
xchg
dec
mov
gs
fcoml
sub
adc
mov
jl
add
pop
push
pusha
sahf
xchg
push
xor
push
sbb
loop
or
mov
icebp
arpl
cmpsl
stos
and
push
or
mov
push
cmpsl
ja
sahf
out
repz
aad
lret
frstor
out
neg
add
cmpl
add
shlb
xchg
push
roll
daa
fists
stos
and
cs
or
inc
push
mov
adc
jno
loopne
sub
stc
mov
mov
pusha
cld
sti
into
cld
sarl
sub
stos
mov
rcr
push
pop
dec
jle
jg
std
fstpt
inc
popf
stc
faddl
add
add
add
out
shlb
repnz
jnp
adc
je
mov
mov
jno
pushf
xlat
addr16
scas
push
jnp
shlb
ret
or
jbe
inc
and
or
add
push
pop
int
lret
dec
push
test
insl
stos
movsb
jno
push
popf
cmp
lea
out
jp
push
adc
push
xchg
cwtl
in
popa
cmpsb
adc
popf
mov
jnp
les
movsb
das
stc
jg
pop
push
sub
sub
stos
arpl
pop
repnz
outsl
test
dec
stos
add
loope
daa
cld
in
jmp
stos
push
and
mov
movsb
fsubp
out
stc
jnp
daa
sbbl
scas
les
vpcmpgtd
lret
mov
insb
enter
inc
pop
xchg
lods
mov
pop
mov
xor
mov
js
xchg
cs
gs
cmp
test
add
addr16
and
jns
add
add
mov
sti
idiv
lods
pop
sbb
cmc
aas
fldl
add
add
add
pop
jge
jo
sbb
cmp
lret
sbb
xor
sbb
xchg
mov
or
pusha
ds
clc
popf
in
inc
and
jmp
mov
icebp
xlat
ret
push
mov
jecxz
bound
add
stos
test
push
dec
ret
xor
imul
js
jo
and
xchg
adc
push
data16
aas
nop
adc
push
scas
loope
pop
in
sub
sub
sti
mov
dec
jmp
bound
and
lret
fistpll
repnz
repnz
aas
jmp
or
cmpsl
sbbl
daa
aas
fldt
outsl
cmp
mov
mov
push
mov
xchg
insb
adc
bts
mov
sub
aad
inc
in
popa
popa
out
lea
inc
stc
jle
mov
scas
imull
rcr
pop
push
lret
push
in
in
fistpll
xchg
xchg
add
mov
add
add
sbb
jmp
scas
inc
call
fiadds
add
add
add
incl
punpcklwd
push
divb
fdivl
lds
push
sub
adc
mov
cmpl
push
int3
adc
lock
leave
sub
out
loope
xor
mov
xchg
xor
jg
bound
push
daa
mov
pop
fcmove
mov
push
add
cmpsb
in
cmpsl
mov
push
push
scas
jo
pop
or
sbb
jecxz
sarl
ljmp
movsb
repnz
into
aad
enter
into
popf
jl
push
gs
and
sub
xchg
into
mov
loop
mov
or
and
add
cmp
mov
nop
push
outsl
lea
lods
add
mov
sub
mov
pushf
inc
push
jne
sub
pop
mov
mov
mov
sub
sub
cli
inc
adc
xchg
cmpsl
fimull
faddl
in
filds
add
add
add
dec
bound
lret
or
popa
lahf
mov
lock
pop
xor
sub
sub
outsb
jae
xchg
push
std
xorl
mov
add
in
or
fadds
mov
not
jmp
sbb
fsts
daa
dec
sub
mov
jo
mov
xor
mov
adc
movl
dec
fisubl
ljmp
sbb
push
fnstenv
xlat
or
repz
daa
sbb
aam
repz
fstpl
aad
push
sti
rclb
mov
fcoml
stos
mov
imul
dec
lock
push
add
jle
mov
shl
lock
scas
scas
repz
push
lahf
jge
push
lods
push
repnz
hlt
fildl
mov
sbb
iret
xor
pop
pop
decl
in
sub
add
mov
clc
sbb
xchg
cmp
sub
lock
add
add
mov
lcall
fisttps
or
loopnew
add
add
add
outsl
loopne
stc
push
loop
adc
sbb
adc
data16
scas
xor
sbb
push
pop
sbb
push
lahf
leave
aaa
loopne
nop
js
insb
sbb
dec
lret
dec
jmp
aam
mov
xchg
mov
add
xor
jge
or
fbstp
fdivrl
das
in
adc
jne
or
mov
adc
dec
psllq
aaa
jno
pop
xchg
lods
cld
sub
inc
loopne
loopne
ret
adc
mov
in
pop
xor
insb
int
push
push
jne
test
sbb
pop
sub
adc
mov
xchg
lods
addr16
inc
test
xor
pop
lock
jg
iret
mov
lret
and
sahf
in
adc
or
loopne
mov
divb
adc
cmp
inc
xor
mov
cs
pop
add
sbb
jns
xchg
xchg
mov
mov
mov
add
add
add
lds
mov
sub
loopne
fs
push
xchg
int
lcall
jecxz
pop
sub
shr
sbb
in
dec
cmp
adc
add
xchg
fisttpll
sbb
dec
out
mov
inc
xor
addb
xor
jmp
sbb
jmp
scas
xchg
xchg
sub
inc
dec
movb
sub
ret
das
pop
data16
pop
lahf
inc
pop
sbb
ds
cmpb
dec
imul
leave
test
popa
shrl
call
repnz
insl
clc
inc
pop
xor
fnstsw
adc
in
std
jo
pushf
inc
lea
popa
add
in
testb
repnz
sbb
sbb
mov
xchg
clc
fsubrl
cmc
mov
dec
stc
in
ret
mov
push
stc
lds
push
ret
jae
fadd
fsubp
jnp
or
cld
les
fisttps
add
add
jp
xchg
jae
inc
loope
shll
or
fmul
dec
mov
and
sbb
outsl
mov
enter
or
jnp
jecxz
enter
jmp
outsb
stos
cmpsb
adc
push
cmc
mov
dec
aas
mov
push
testb
das
inc
and
sub
xchg
sbb
jne
icebp
mov
sarb
clc
mov
xor
mov
mov
adc
out
clc
and
stos
inc
jns
and
dec
cmp
and
popf
inc
dec
dec
xchg
adc
out
sbb
sub
mov
lods
imul
ljmp
inc
popf
adc
pop
pop
xchg
cmpsb
pop
sbb
jns
cmp
jmp
pop
jl
xchg
aad
mov
aas
sub
fs
hlt
and
push
pop
fwait
in
push
jg
mov
in
pop
and
add
cli
pop
stc
cmp
add
sub
cld
cli
jle
dec
nop
xor
jecxz
add
add
add
fildl
fidivs
sbb
mov
sbb
in
xor
daa
dec
dec
xchg
cli
push
push
call
mov
adc
mov
pop
push
jno
out
sbb
dec
and
xchg
testl
dec
ror
inc
adc
jbe
dec
aam
loopne
stc
xor
outsl
test
pop
xor
push
cmp
ret
push
sbb
outsb
insl
adc
pop
dec
leave
test
loope
daa
push
inc
cld
test
push
adc
xor
enter
sub
push
test
lods
add
jne
sub
mov
hlt
jno
lods
adc
imul
dec
or
lods
dec
dec
mov
inc
ja
into
cltd
fucomi
xlat
icebp
xchg
adc
jno
test
ljmp
ret
stc
popa
inc
cmc
rolb
inc
in
popa
mov
pop
jmp
jecxz
in
lahf
repz
negb
mov
sbb
mov
dec
aad
pop
jbe
lea
pop
jbe
ja
sti
aaa
out
ja
andb
add
add
inc
jle
into
divl
sub
rcrl
testb
cmp
mov
ret
sbb
adc
out
pop
or
push
pop
jmp
dec
ffreep
add
loopne
cmp
add
ficoms
push
call
dec
dec
push
mov
ret
clc
pop
mov
jbe
fldt
mov
movsl
xor
je
js
sbb
test
adc
sub
push
pushl
repnz
call
lea
mov
jp
fcomps
mov
cmpsl
mov
or
mov
push
push
xchg
repnz
pop
dec
fcoml
rcrb
inc
sub
imul
push
shr
cs
mov
not
sbb
jmp
fidivrl
sub
and
out
xchg
sub
and
aam
sarb
into
jne
xchg
xor
or
add
cmpl
out
pop
int3
cmp
stos
jns
ljmp
add
add
into
arpl
pop
xchg
aaa
pushf
push
in
add
add
add
pop
popa
ret
outsb
popf
clc
sub
xchg
in
dec
add
jae
jge
xor
lods
insl
mov
push
sub
ja
mov
rcrl
adc
xchg
pop
cmc
rol
jmp
xor
lea
nop
incl
rolb
jle
out
fisubrl
rcr
in
add
or
ljmp
ret
popa
or
push
popf
imul
inc
or
loop,pn
add
adc
shlb
mov
mov
pop
and
xor
jne
inc
out
lret
rcr
je
sub
shrb
or
gs
lea
push
or
sub
cld
out
jecxz
and
test
cmp
sti
imul
outsb
cmc
shlb
dec
mov
mov
sbb
scas
and
imul
js
push
jne
das
push
jnp
popf
cltd
cmc
adcb
fcos
pop
mov
push
add
add
dec
jmp
push
mov
out
outsl
dec
ja
jle
mov
shrl
fst
fisttps
mov
or
add
lret
jp
add
jp
cmp
in
cwtl
sbb
pop
sub
push
mov
divb
fdivrl
jns
jne
xchg
shlb
movsl
push
jbe
test
popa
add
adc
dec
inc
in
push
dec
repnz
and
addr16
pop
dec
inc
andl
lret
sub
in
jns
stos
idivb
mov
push
outsb
mov
aas
sub
mov
jnp
clc
bound
sub
jae
xchg
jbe
inc
scas
lret
repnz
dec
or
imul
xchg
xlat
push
cld
imul
je
iret
mov
enter
in
fs
and
fidivl
nop
cmp
loop
push
adc
fs
lock
pop
sti
repz
lock
jg
in
and
pop
daa
jne
out
add
add
add
pop
movsl
stc
jno
pop
sbbl
lret
adc
push
push
cmp
xor
cmp
loop
sbb
cmp
pushf
mov
add
in
mov
mov
xchg
aam
fmull
push
ljmp
pusha
adcw
push
loop
mov
xlat
int
cmp
ja
clc
ja
dec
xchg
adc
data16
cmp
popf
mov
mov
mov
fbld
add
je
mov
test
push
loopne
sbb
pusha
xchg
subl
cli
in
pushf
sahf
mov
push
loop
scas
mov
and
test
cmpsl
add
iret
or
adc
rcll
test
cmp
bound
ds
lods
and
dec
and
fmull
test
imul
mov
jae
pop
cmp
in
inc
addr16
push
cs
push
xchg
xchg
fwait
cwtl
pop
popf
pop
xlat
fistpl
rcrb
addr16
add
test
std
mov
nop
add
jns
insb
cmp
inc
stos
cld
out
sahf
mov
jmp
mov
lret
in
out
fstl
je
sub
inc
bound
dec
js
out
movl
dec
pop
jo
dec
popf
fisubl
int
ret
out
push
dec
cmpl
cmp
mov
xchg
mov
or
pop
jne
jb
clc
cmp
ja
orb
outsb
mov
sub
cmp
sbb
jg
mov
es
mov
mov
into
sub
xchg
jns
test
test
xor
in
out
ja
testl
inc
and
add
cmp
sbb
test
add
inc
cmp
shlb
dec
rcrl
lock
fcomps
repz
push
dec
cs
mov
shrl
jmp
cmc
xchg
push
cltd
jo
adc
ja
mov
stc
mov
dec
js
stc
mov
dec
int
fimuls
add
add
add
dec
aas
aad
rcl
xor
pop
mov
bound
xchg
shlb
or
shr
lock
fsubl
aaa
push
loopnew
pushl
add
mov
sub
test
cmp
mov
pop
add
push
iret
dec
enter
cmp
mov
ja
aaa
push
sbb
pushf
lahf
add
push
mov
jns
mov
push
xor
xchg
adc
aad
mov
js
test
dec
lods
arpl
int
sahf
add
pop
dec
aad
mov
addl
cmp
pop
stos
popa
arpl
cmpsl
sub
shl
sbb
popa
fidivl
xor
dec
test
fnsave
inc
mov
roll
xchg
mov
cli
xorb
mov
jno
lea
shrl
xchg
push
arpl
adc
js
xlat
call
fildll
add
add
insl
repz
fwait
jns
jns
inc
mov
add
add
add
sbb
lods
mov
sbb
xlat
xor
add
push
pop
cmp
fdivrp
fwait
and
ja
adc
mov
data16
aaa
in
lea
xchg
sbb
fdivl
mov
imulb
adc
repnz
shll
mov
sbb
sub
pop
cmp
pop
inc
ljmp
bound
cmp
mov
into
ror
xor
push
mov
mov
jne
repnz
mov
cmp
fsubr
pop
fnstcw
sub
push
leave
int
cmp
jbe
cmp
cmc
loope
mov
sub
test
sti
cmp
orb
push
das
dec
pushf
inc
aad
adc
daa
adc
lret
push
sbb
sub
loopne
xor
aam
aad
xor
xchg
roll
mov
jo
movsl
out
inc
daa
adc
push
arpl
add
add
mov
pxor
jnp
adc
jne
ja
mov
addr16
add
add
add
inc
int3
adc
sbb
sub
mov
pop
dec
mov
mov
fs
in
out
pusha
jnp
inc
sti
leave
cmp
ja
push
and
call
sub
pop
out
popl
and
xchg
mov
mov
cmpsl
and
xchg
dec
pop
jecxz
aam
or
popf
jns
stc
inc
imulb
mov
push
rcrb
sub
aaa
sub
lods
lods
stos
mov
push
jno
mov
add
out
into
cmp
xor
pop
inc
sub
sub
pop
dec
icebp
divb
fucomi
fcmovne
lret
lahf
dec
push
jo
mov
cmp
ja
mov
loop
loopne
aam
mov
jg
stos
iret
aas
inc
ljmp
pop
push
fwait
int
push
dec
inc
sub
loopne
enter
xor
nop
sbb
sbb
scas
dec
int3
pop
inc
popf
movsl
xchg
out
lods
xor
aas
xlat
fistl
das
cli
in
pop
addr16
add
add
add
adc
iret
inc
add
jo
arpl
call
fbld
jb
out
stc
or
js
test
loop
push
insb
jmp
jb
cmpsb
jnp
mov
int3
inc
sub
sbb
sub
outsb
jno
arpl
mov
sub
pop
dec
dec
call
mulps
mov
cli
pop
xor
xor
mov
pop
or
sbb
push
push
popl
xchg
sbbb
and
les
lods
mov
ret
sub
xchg
jmp
insb
insl
mov
sub
shll
jg
sub
dec
xlat
out
push
and
je
sbb
pop
fcomip
scas
add
mov
testl
sub
sbbl
out
cmc
lock
rcr
or
rcrl
mov
mov
jbe
or
fdivl
in
or
add
add
jb
scas
decb
fisttps
sbb
dec
addr16
add
add
add
repz
mov
push
pop
sti
insl
pop
rol
fs
decl
push
and
icebp
mov
lds
es
xor
sbb
in
and
les
popa
fstp
push
enter
adc
jp
pandn
cmpsl
pop
aam
scas
nop
cli
inc
inc
inc
fst
jmp
movsl
mov
stc
mov
adc
cld
ficomps
vmovdqu
jmp
mov
adc
adc
das
inc
jg
cmp
push
stos
push
jae
or
fildl
mov
xor
test
jb
jae
repnz
push
je
cmpsb
jbe
stos
mov
ret
into
shlb
cmp
pop
leave
lcall
out
leave
int
addl
icebp
mov
jge
cmc
push
imul
lahf
pop
fbld
and
sub
lods
lods
not
fs
sbb
add
aas
mov
push
xchg
add
add
xlat
mov
xchg
outsb
out
push
out
add
add
add
cmpsb
pop
ja
mov
enter
pushf
cltd
iret
push
aas
repz
stos
and
sub
sahf
ret
mov
and
call
shlb
mov
jecxz
out
adc
jae
pop
push
lds
out
jne
push
mov
mov
sbb
popl
inc
push
jg
es
cmc
dec
mov
clc
aad
adc
test
ret
mov
pop
lret
test
fadds
mov
dec
dec
push
mov
dec
adc
mov
adc
ss
scas
scas
into
test
push
popa
and
or
adc
and
jmp
inc
or
xchg
pop
and
mov
cwtl
movsl
testb
push
ss
sahf
loop
and
es
jl
fs
scas
jmp
dec
je
mov
movsl
mov
add
mov
aas
mov
pop
push
addr16
add
add
add
xchg
sbb
sarb
and
scas
mov
fisttpl
xchg
and
popf
xchg
and
push
iret
pop
mov
je
xorb
cmpsl
adc
mov
jg
push
pop
inc
mov
movsb
andl
in
sbb
jae
mov
mov
adc
push
jbe
mov
mov
push
out
dec
cmp
out
xchg
xchg
jae
xor
cmp
push
sbbb
repz
arpl
cmp
xchg
add
or
outsb
and
pop
fs
fmull
or
test
mov
stos
adc
repnz
push
push
cwtl
sbb
loop
pop
jno
mov
inc
stos
add
movsl
mov
or
mov
je
movsl
add
mov
test
add
mov
or
pop
sahf
std
rolb
test
add
add
mov
sti
mov
arpl
add
add
add
movsb
sbb
mov
jne
push
test
lret
rolb
or
push
push
pop
sub
mov
pop
sub
sub
test
adc
cmp
data16
loope
push
and
inc
ret
loop
js
cwtl
push
jnp
mov
repz
cmc
jo
mov
incl
loop
lret
cmpxchg
xor
stos
ret
mov
movsl
das
push
push
sub
daa
dec
hlt
sbb
repnz
mov
pop
mov
mov
sub
xchg
sub
mov
push
sbb
mov
jb
lret
sbb
ds
push
dec
mov
sub
cs
xchg
icebp
addr16
aam
cmc
ret
push
daa
and
jns
stc
pop
jle
add
cmpb
cmp
es
mov
pshufw
add
enter
jge
jns
scas
mov
rol
cli
inc
jle
cmp
push
sahf
cmp
add
add
into
adc
neg
jge
xchg
jns
sub
icebp
add
add
add
test
push
dec
xchg
test
ret
xadd
in
pop
pusha
jp
js
xorb
imul
sbb
or
movl
inc
cmp
sbb
test
sti
out
jle
bnd
call
inc
lods
inc
xor
ret
std
inc
cltd
adc
sti
jo
add
shll
dec
or
and
leave
pusha
push
dec
int
es
daa
or
sub
in
and
cmp
xor
test
incb
lret
and
and
pop
jo
jmp
insb
scas
nop
repnz
sti
in
mov
and
add
jnp
cltd
sub
das
ja
scas
or
jge
sub
cmp
aaa
adc
popa
or
push
std
cli
push
mov
lock
jbe
xchg
iret
push
dec
pop
cmp
outsl
jg
jg
sub
ficoml
repnz
add
add
enter
shll
leave
add
add
adc
mov
push
or
mov
dec
push
push
mov
add
xchg
arpl
aam
mov
add
ret
out
cmc
call
cmp
and
lret
or
or
xchg
sti
jecxz
repnz
outsb
mov
mov
je
je
icebp
fidivl
ret
adc
cli
test
cmp
sbb
mov
subl
inc
pushf
mov
cld
sub
add
inc
in
ds
jl
push
jns
aas
dec
ds
fwait
xor
cld
mov
xchg
in
lods
mov
cmpsb
pop
push
pushl
pop
in
pop
lahf
outsl
loopne
push
mov
aas
clc
int
lret
sbb
jmp
mov
jb
shlb
fcompl
pop
mov
xlat
enter
adc
ret
ja
and
aaa
divl
ret
repz
add
add
and
idivl
xchg
pusha
hlt
gs
inc
lds
lds
jbe
push
cs
or
into
movsl
cmp
cmp
add
popf
sbb
xlat
adc
in
or
xchg
das
sbb
or
mov
jge
mov
xor
mov
jno
xchg
cmp
jp
xor
loop
mov
xor
mov
and
cmp
lock
fs
mov
sti
je
push
sbb
mov
jmp
xor
pop
sbb
fdivl
adc
cs
push
popf
outsl
rcrl
jle
mov
mul
cwtl
imull
sub
jp
push
mov
mov
xchg
movsb
pop
rorl
fdivl
sub
lods
hlt
push
xor
add
mov
mov
xchg
xchg
inc
push
inc
jmp
sub
test
inc
xorb
sti
inc
dec
push
jo
outsb
mov
in
xchg
jecxz
jmp
mov
insb
lahf
jne
addr16
add
add
add
push
ss
cmp
add
iret
mov
and
cwtl
inc
push
jmp
mov
pop
es
fs
xor
pop
sub
push
scas
sub
adc
mov
fidivs
adc
push
or
inc
pop
lret
test
mov
xor
jns
push
add
xchg
sbb
in
lods
pop
sbb
pushf
or
add
inc
cltd
int
lcall
cld
mov
jge
jb
repnz
xor
aam
xchg
dec
shrb
mov
mov
and
bound
push
mov
adc
pop
add
xchg
cmpsb
fwait
push
repz
orb
out
rcrl
xchg
push
fmull
andb
stc
push
cmp
pusha
pushf
lcall
mov
ljmp
sti
sub
pusha
stos
stos
xchg
jns
in
mov
fisttpl
dec
das
jle
jne
pusha
popf
pop
sbbl
cmc
add
add
add
cmp
mov
ret
ret
push
movsb
outsl
mov
std
ja
imul
pop
popa
mov
test
pushf
mov
outsb
loop
stc
mov
cmp
mov
dec
and
fistps
mov
dec
ret
xor
fidivs
mov
jl
jmp
ljmp
scas
xor
ja
sub
or
mov
aaa
bound
int
mov
cmp
pop
jge
outsl
cli
mov
push
sub
lods
mov
inc
sti
sbb
jne
fsubs
icebp
mov
add
jb
stc
push
loope
test
mov
pop
pop
in
clc
leave
xchg
out
shrb
mov
int
iret
fidivrl
ret
jg
mov
push
rcll
movsb
or
movsl
mov
adc
fxch
fisttps
in
push
clc
out
sbb
add
imulb
mul
xor
loopne
testb
add
add
out
scas
bound
mov
scas
mov
cwtl
inc
xchg
fiadds
es
push
cmp
loop
mov
iret
out
push
xor
sti
ret
xorl
mov
push
xchg
pop
mov
decb
fs
hlt
idivl
cli
inc
mov
add
xlat
pop
xchg
cmp
repz
cwtl
data16
sub
shrl
popf
fstpt
rclb
add
mov
fidivs
lock
nop
ret
dec
xor
cli
loop
jmp
test
stc
xchg
int3
adc
jns
add
pop
sub
mov
mov
push
hlt
jmp
daa
vunpcklps
dec
rorb
sahf
mov
shll
mov
sbb
cmpsb
or
inc
ret
lods
xor
and
add
lret
push
movsb
movsl
jmp
cmp
mov
mov
out
std
ret
sbb
lds
add
add
add
xor
jb
jae
bound
and
add
add
add
ret
ficoms
insb
fs
outsl
jne
nop
or
rcrb
xor
jo
pop
mov
adc
xor
push
xchg
ljmp
inc
lock
mov
lahf
sbb
cmpsl
and
inc
test
dec
push
inc
cmpsl
insb
pop
inc
ss
test
push
lret
cli
ja
imul
add
push
mov
icebp
scas
out
lret
lds
mul
jo
xor
cmp
lods
inc
repnz
shll
out
fldl
dec
mov
jmp
push
ret
ja
mov
sbbl
pop
mov
pop
sub
insb
rcrl
jmp
push
push
mov
jb
aaa
adc
adc
mov
sbb
inc
lea
rcll
insb
mov
loope
fisubrs
fnstenv
xchg
repnz
mov
add
adc
int
in
idivl
js
mov
sbb
das
loopne
clc
add
add
add
mov
addr16
das
jecxz
cmp
sub
jg
xchg
mov
mov
pop
gs
jb
mov
adc
fwait
mov
cmp
xchg
js
cmpsl
sbbl
mov
mov
fwait
sbb
adc
adcb
fs
aad
add
sti
sub
add
and
sti
daa
stc
addb
pop
inc
xor
sbb
dec
sub
or
xchg
out
es
inc
or
jnp
inc
test
sub
fistpl
pop
cli
pop
xchg
sbb
lcall
mov
pop
div
adc
in
lcall
push
testb
fwait
popf
ljmp
loope
dec
mov
sbb
rolb
jo
rolb
cltd
jb
and
inc
pop
outsl
incl
dec
in
cmp
test
lea
cmp
mov
mov
cld
stos
add
idivb
lock
aaa
dec
cltd
and
pop
es
inc
cli
aas
into
lret
jne
jno
addr16
add
add
add
push
test
mov
inc
scas
out
cltd
cmp
jae
jge
sub
les
cmp
push
scas
in
adc
xchg
sysret
shl
pop
icebp
test
sub
fisubrs
lock
xchg
pop
in
cmp
rcrb
jecxz
xchg
loopne
and
push
xor
dec
shl
in
pop
divb
nop
cvtps2pd
sbb
mov
int3
or
jge
xchg
subb
iret
dec
lods
insb
les
lds
and
gs
add
mov
stc
xchg
add
push
test
fs
or
aam
add
outsl
out
cmc
inc
and
mov
pop
mov
cld
xchg
pop
jnp
shrb
pushf
aam
int3
outsb
xchg
mov
cmp
iret
addr16
lods
push
mov
add
je
push
xchg
xchg
addl
xchg
jne
ds
test
or
sub
jno
pop
mov
movsb
cmp
or
sbb
dec
jo
jns
mov
dec
or
inc
jp
add
add
lcall
xorl
add
dec
popf
sbb
jp
mov
add
in
gs
stos
jns
mov
in
cwtl
inc
xor
or
stos
adc
outsb
xor
jmp
or
fdivrl
xchg
cmp
popa
mov
fiadds
in
loopne
mov
stos
fnsave
or
mov
jbe
dec
and
mov
aas
out
pop
or
dec
mov
add
xor
lret
aam
test
test
cmp
and
out
fisubrs
fnsave
xchg
push
in
pop
pop
movsb
or
jl
inc
mul
addl
sarl
xchg
inc
jle
mov
ja
mov
add
pop
cmp
push
push
and
or
add
mov
ss
mov
push
cmpsl
push
inc
pop
add
jns
push
dec
fwait
mov
add
das
cwtl
xorl
jge
cmp
add
add
jae
cltd
dec
mov
jno
adc
add
add
add
in
ja
xorb
out
repnz
cmpsl
mov
mov
adc
pop
out
push
push
inc
xor
add
bound
mov
adcl
out
fadds
adc
xlat
lock
adc
cli
lcall
cld
cmp
call
lahf
pushl
cmpsl
push
push
jle
cltd
inc
ret
insl
sub
into
jbe
jp
mov
xchg
js
data16
repnz
lret
rorb
jnp
outsl
orb
int
lcall
outsb
add
fs
mov
push
pop
fnstsw
sub
xor
mov
adc
or
jbe
xor
out
cltd
cli
fsubl
inc
jns
cmp
loope
mov
cmp
cmpsb
lock
out
test
pop
xor
jb
pop
push
pop
mov
in
push
add
pop
adc
push
clc
or
add
push
into
nop
out
cwtl
jle
push
sub
dec
mov
cld
add
add
add
sbbb
inc
xchg
dec
xchg
xor
cmc
into
pusha
int3
add
dec
fisttpll
mov
iret
mov
scas
ret
scas
jbe
adc
int
add
fwait
aad
pop
mov
jmp
lcall
xor
and
loope
lock
xlat
aas
pop
stos
lahf
pop
jnp,pn
jl
je
out
pop
clc
cs
in
mov
mov
out
nop
sub
push
int
fs
cld
fs
nop
mov
fmuls
jg
or
sarb
mov
jnp
mov
scas
imulb
mov
jno,pn
add
daa
add
cld
dec
jo
in
inc
loopne
mov
inc
inc
xlat
popa
out
aam
orb
and
or
add
cltd
es
shlb
push
fstp
xlat
fistps
pop
sub
dec
sbb
jbe
inc
pop
cmpsb
inc
xchg
xor
add
add
test
jg
push
pop
push
mov
addr16
add
add
add
insb
push
xor
inc
push
push
cs
loope
or
jge
insb
mov
jl
idiv
imul
repz
and
and
push
mov
popa
inc
imul
inc
shll
push
inc
jno
xchg
jnp
lds
sbbb
mov
popa
lods
inc
inc
sub
jle
jae
xor
cmpsl
sbb
mov
xchg
in
out
add
fstpt
push
mov
cltd
and
jg
int
ja
mov
xor
pop
xor
in
inc
mov
iret
leave
stos
insl
rcll
adc
jns
out
xchg
nop
dec
push
xorb
push
and
cli
dec
push
cld
push
test
jl
sahf
or
sub
rorl
rol
shll
inc
into
mov
mov
mov
setg
daa
inc
mov
data16
jmp
adc
movsb
push
in
cmc
jne
sbb
js
mov
hlt
incb
add
add
add
xchg
push
dec
pop
sbb
cmp
dec
mov
out
stc
xor
inc
push
cmp
jns
sarl
filds
out
xchg
mov
dec
es
and
pop
push
inc
call
mov
add
pop
push
mov
xlat
ljmp
inc
test
push
mov
inc
add
stc
xchg
enter
and
push
xorb
xorb
incl
aaa
test
arpl
stos
lods
and
rcll
in
xchg
add
add
mov
jno
mov
adc
lock
test
call
add
and
ror
xor
push
and
sbb
sbb
test
inc
lret
jb
mov
incb
int3
ljmp
test
cmpsl
pop
dec
fs
adc
test
hlt
das
mov
sbb
shlb
aas
out
int3
mov
test
stos
mov
incl
add
add
add
sti
sbb
adc
jp
inc
push
int3
in
mov
adc
gs
mov
add
sub
xchg
pop
movsl
fistps
or
fnstcw
xor
decb
aaa
ret
jbe
add
pop
inc
lret
sbb
enter
jg
pop
xor
fidivrs
mov
cmc
inc
fcoml
adc
mov
mov
or
cmp
subb
icebp
imull
adc
call
mov
ljmp
stc
inc
sbb
outsl
outsl
rorl
lret
loope
xchg
mov
aam
fs
push
add
mov
inc
gs
jnp
imul
push
dec
mov
aad
jge
das
inc
movsb
xor
cmc
fldenv
adc
xchg
xchg
push
pop
insl
int
orb
pop
scas
push
nop
push
mov
daa
or
mov
and
add
add
add
add
cmpsl
inc
ds
outsb
dec
mov
xor
pop
ljmp
inc
xchg
inc
mov
mov
test
iret
in
inc
lretw
or
cwtl
daa
leave
mov
filds
push
push
int
dec
fwait
fwait
scas
and
gs
jp
xchg
dec
jbe
dec
add
popl
sbb
out
pop
xor
shr
add
lods
cmp
pop
add
fsubl
pusha
adc
add
sub
cmp
dec
subb
push
mov
out
lea
jbe
ja
xor
cli
mov
mov
lret
cmp
mov
mov
std
lret
bswap
cmp
aas
inc
bnd
jge
xchg
mov
js
jno
xor
insl
jle
shlb
test
fs
and
ljmp
mov
aas
dec
stos
add
add
ret
bnd
cmc
inc
stos
repz
notb
add
add
add
add
mov
xchg
push
out
ret
movsb
push
dec
push
add
push
adc
pop
adc
xor
aam
xor
inc
push
cmp
mov
inc
inc
xor
outsb
mov
push
and
mov
pop
sub
add
pusha
push
xchg
das
int3
adc
es
divl
xchg
mov
scas
shr
lock
scas
pop
into
out
pusha
in
inc
rorl
add
cltd
xchg
push
push
xor
loop
les
cli
cs
cmp
pop
push
cmp
stc
aaa
fsubrs
fs
rorb
sti
arpl
mov
outsl
jp
lahf
xchg
inc
dec
in
cmp
int3
push
cli
lea
xorb
xlat
mov
or
imul
inc
push
pop
xchg
inc
ror
pop
inc
lahf
inc
add
pop
xchg
mov
inc
in
push
aas
sbb
rcrb
int3
mov
add
std
aaa
mov
shll
fisubl
add
test
xchg
cltd
unpckhps
shrb
je
movsl
int3
pop
js
and
aad
push
cmp
popf
jb
add
dec
or
xorl
sbb
mov
popa
out
mov
cs
cmp
lock
lods
sbb
shrb
insl
sub
cld
ret
cld
inc
fwait
and
not
sub
xor
add
xchg
xor
filds
fcoms
xchg
ljmp
fs
pop
popa
fwait
mov
out
or
dec
cmpb
adc
pop
cltd
test
cmp
andb
push
rorb
add
add
mov
mov
or
dec
add
add
add
movl
xor
test
enter
mov
hlt
test
pushf
enter
movl
inc
mov
dec
mov
call
mov
call
pop
ljmp
fwait
mov
xor
add
mov
mov
xor
lret
ret
add
enter
dec
sbb
add
decl
test
dec
incl
inc
enter
ljmp
cld
decl
push
mov
and
pop
inc
mov
push
pop
movsb
dec
add
jne
lea
fs
decl
mov
test
add
xor
add
mov
or
inc
mov
bound
inc
cmp
lea
and
incl
mov
cld
add
xchg
sar
inc
incl
mov
xor
add
nop
inc
add
mov
add
add
incl
sbb
jne
mov
mov
movl
incl
fisttpll
test
inc
aas
inc
lea
inc
mov
mov
cld
loop
inc
out
fisttps
jecxz
in
incl
out
aas
call
add
add
test
wrmsr
ja
add
mov
add
add
mov
addl
mov
mov
dec
nop
mov
fadds
add
inc
push
call
mov
mov
cld
mov
add
cmp
mov
mov
push
nop
incl
cld
add
mov
cld
push
nop
inc
add
add
ljmp
movntq
movl
test
jmp
int
sub
add
filds
cmp
je
movl
jne
mov
cld
jle
dec
mov
mov
add
mov
test
add
add
add
xor
inc
add
mov
add
fmuls
cld
call
decl
add
push
es
inc
mov
decl
mov
call
sarb
sub
add
mov
inc
push
mov
shrb
ret
add
mov
cld
test
inc
xor
push
mov
inc
enter
mov
or
add
add
add
incl
cld
mov
mov
xor
and
sub
mov
test
add
xor
add
cmp
jne
mov
pushf
add
add
or
fwait
jne
xor
incl
add
orb
add
orl
gs
je
mov
cld
sarb
pcmpeqw
xor
lea
add
cmp
mov
test
clc
pushl
lea
int3
inc
call
jne
xor
jmp
mov
mov
incl
pushl
inc
mov
jmp
mov
mov
cld
clc
ret
test
pop
xchg
add
inc
decl
sub
add
push
jbe
mov
or
inc
enter
inc
mov
int3
add
xor
rorb
inc
add
fadd
rolb
inc
fmull
inc
test
fwait
clc
xor
inc
xor
pushf
mov
test
clc
dec
inc
mov
xchg
inc
inc
aas
mov
test
clc
pushf
inc
decl
push
movb
add
mov
mov
les
adc
dec
add
mov
lock
clc
inc
add
jge
xor
cmp
paddb
mov
test
dec
test
pop
xor
add
add
psraw
sub
mov
lock
shl
rolb
movl
jmp
pushf
inc
mov
xor
add
mov
enter
xor
add
sub
cmp
rorl
test
test
cmp
pushf
xor
add
inc
dec
mov
test
cmp
fdivl
dec
xor
add
add
dec
test
out
rolb
add
dec
mov
mov
ret
xor
add
add
dec
inc
mov
ror
add
scas
mov
xor
xor
add
mov
clc
rol
mov
mov
dec
jbe
mov
call
rdpmc
roll
add
inc
rorb
jmp
inc
inc
mov
clc
test
clc
lret
inc
into
mov
clc
enter
sub
ret
mov
addr16
clc
add
loopne
dec
into
mov
or
inc
push
mov
in
cmp
ja
mov
inc
fwait
mov
clc
mov
xlat
lret
inc
into
mov
in
scas
lret
mov
mov
sub
mov
mov
clc
loopne
push
lret
mov
adc
jb
add
in
sub
cmp
mov
mov
add
mov
in
into
dec
xor
roll
xor
sub
add
mov
inc
xor
add
inc
xor
sub
test
clc
enter
incl
jmp
mov
inc
mov
fwait
lret
xor
mov
lea
xor
add
inc
dec
mov
gs
inc
sub
inc
xor
push
mov
add
inc
decl
add
inc
mov
fwait
add
add
pushl
int3
xor
add
mov
call
mov
add
mov
in
ret
iret
enter
in
or
adc
push
dec
inc
mov
jb
mov
cld
scas
orb
movb
push
push
xor
mov
call
mov
in
jge
mov
int3
add
xor
dec
pushf
xor
add
mov
test
fwait
add
jmp
mov
add
mov
jmp
mov
rolb
add
xor
rorl
jb
add
clc
inc
jb
mov
xor
shrb
clc
add
xor
inc
adc
inc
test
mov
cld
orl
jbe
mov
dec
mov
mov
mov
or
dec
int3
xor
add
mov
xor
add
adcb
add
inc
mov
xor
dec
mov
hlt
add
push
inc
dec
call
in
lret
mov
adc
inc
and
cmpl
cmpb
mov
cmp
jne
mov
mov
rcrb
or
dec
inc
add
or
test
addb
mov
cmp
je
incl
mov
into
decl
push
lret
inc
into
decl
push
into
call
lret
add
add
mov
clc
inc
inc
mov
push
push
add
mov
cld
mov
into
rorb
xor
jne
call
mov
mov
call
add
rolb
add
add
inc
push
cmp
pushf
movl
test
addb
jmp
in
or
xor
hlt
mov
xor
add
inc
adc
pushf
inc
add
movsl
test
clc
incl
cmp
pushf
inc
push
movsb
jne
push
clc
test
lcall
test
cmp
pushf
add
add
inc
add
enter
add
add
out
sbb
dec
mov
sub
mov
add
cmp
or
incl
mov
mov
lret
inc
into
mov
int3
scas
push
mov
call
sub
mov
mov
xor
pushf
mov
faddl
test
mov
in
ret
add
add
mov
in
ret
mov
in
inc
rol
sar
or
add
add
test
clc
lret
inc
into
cmp
mov
inc
cmp
ja
mov
mov
clc
mov
mov
in
lret
ret
into
mov
scas
cmp
add
jmp
mov
mov
inc
enter
xor
add
cmp
shufps
add
dec
sub
cmp
ja
mov
lods
mov
inc
dec
mov
lret
rol
or
inc
scas
xor
add
add
inc
mov
inc
lret
mov
clc
lret
scas
ret
mov
hlt
push
scas
sub
mov
add
mov
movsb
inc
dec
xor
pushf
xor
rdmsr
rcrl
sar
rolb
xor
jmp
mov
xor
mov
rolb
test
fwait
shll
mov
xor
add
mov
add
inc
xor
rdpmc
roll
loopne
push
in
mov
adc
jb
add
jmp
mov
test
dec
dec
xor
add
dec
mov
dec
in
xor
xor
add
jbe
mov
test
dec
mov
loopne
inc
add
rol
scas
mov
mov
hlt
dec
inc
mov
loopne
lret
test
clc
scas
inc
mov
fdiv
roll
fwait
xor
pushf
cmp
inc
mov
inc
dec
xor
add
loopne
dec
rorl
add
lock
ret
xor
mov
rolb
xor
call
enter
mov
fmul
push
dec
xor
ret
xor
dec
jne
mov
cld
loopne
push
add
incl
incl
mov
lock
lret
add
xor
inc
scas
mov
shl
inc
decl
call
ud0
adc
inc
xor
lock
add
ud0
sbb
xor
sub
push
add
mov
cld
inc
jmp
mov
mov
mov
clc
scas
icebp
mov
lret
or
dec
pop
or
jb
add
inc
mov
fadd
ret
add
int
sub
add
inc
inc
mov
cld
scas
loopne
mov
mov
clc
push
pushl
movb
int3
or
lea
insb
incl
push
movb
leave
les
in
call
inc
cld
mov
cld
xor
pop
mov
clc
test
je
mov
cld
add
add
fiaddl
movb
push
push
mov
pop
lea
ret
mov
xchg
mov
push
clc
jne
mov
push
or
cmp
pop
or
inc
leave
ljmp
leave
in
incl
fimull
inc
nop
loopne
ret
mov
add
push
pushl
mov
or
pushl
cmp
pop
ret
or
inc
push
jle
inc
inc
int
inc
sub
add
lret
adc
xchg
push
mov
rcll
jne
mov
roll
divl
cmp
pop
decb
in
inc
sub
inc
push
add
push
add
leave
adcl
add
inc
rorl
add
add
jmp
jne
mov
or
inc
stc
in
ss
aas
out
inc
mov
lock
and
add
aad
add
clts
call
hlt
iret
jge
roll
jmp
out
mov
pop
push
cmp
sar
incl
inc
loopne
push
push
push
add
add
push
add
sub
jne
lods
mov
dec
out
into
push
loopne
shrb
andl
roll
mov
cmpl
mov
push
push
push
sub
push
adc
insl
mov
add
rorb
add
add
roll
pop
or
cli
add
lea
mov
dec
inc
shrb
and
jne
pop
mov
call
and
push
add
dec
mov
jmp
mov
call
shrl
lock
adc
out
cmp
pop
or
push
cld
mov
and
xorb
add
mov
psubsw
add
rcr
mov
and
add
call
add
mov
aam
or
jne
mov
aam
dec
jne
cmp
jb
jmp
mov
int3
dec
orl
mov
cmp
jb
pop
push
cli
pop
mov
jb
addl
mov
int3
add
jmp
mov
call
add
pop
or
pop
inc
xor
push
mov
call
int3
sbb
inc
add
call
or
cmp
mov
jb
mov
push
add
add
add
int3
jne
movsbl
add
add
mov
add
add
mov
sub
jb
add
jge
add
addl
jne
je
mov
rorb
orl
mov
mov
fadds
inc
pop
lea
push
out
add
add
mov
jb
add
push
call
add
jae
icebp
inc
mov
int3
out
loopne
sub
push
pop
push
jl
add
xor
mov
rcrb
rorl
inc
shr
orl
push
pop
add
jmp
mov
fdivrl
push
pop
call
mov
in
rolb
call
pop
enter
repz
xorl
je
or
jne
jmp
pushl
push
pop
cmpl
jge
mov
sub
pop
inc
mov
sub
lods
add
enter
repz
stc
jge
jnp
call
fadd
dec
insb
stc
cmp
push
mov
jne
mov
mov
add
sub
and
cmp
sbb
pop
call
fsubr
sti
add
add
add
roll
mov
clc
jne
mov
loopne
loopne
lods
int3
inc
mov
add
sub
shrb
add
call
add
dec
insl
in
lea
inc
inc
sub
orl
and
rorl
or
mov
stos
adc
inc
add
jne
mov
cmp
sub
sar
ljmp
sub
mov
mov
and
jne
sub
sbb
dec
push
add
ret
mov
leave
sub
ret
pop
push
rolb
addl
jb
ret
in
jecxz
push
xchg
jne
cmp
jne
mov
rorl
mov
pop
nop
mov
les
add
inc
mov
mov
cmp
or
inc
inc
xor
cld
add
add
add
sbb
dec
je
mov
add
and
jae
mov
incl
push
shr
in
push
add
add
inc
mov
add
jmp
pushf
dec
mov
fsts
movb
sub
inc
add
mov
insb
movl
dec
jmp
inc
fnstcw
testb
rolb
lea
sbb
inc
add
add
mov
fdivl
mov
add
add
or
mov
add
add
push
movb
or
dec
lea
xor
movsl
repz
add
prefetcht0
xor
mov
pop
mov
or
cmpb
movb
add
mov
xorl
mov
sbb
inc
xrelease
clc
xor
lea
mov
fadd
dec
lds
out
inc
lea
enter
push
leave
xor
add
mov
mov
psubusw
add
addb
add
in
inc
inc
mov
addb
mov
sub
insl
inc
add
testb
movl
dec
pop
add
mov
in
incl
out
inc
mov
push
jmp
add
out
insb
inc
jmp
addl
mov
outsb
inc
mov
mov
fcos
mov
in
jb
decl
mov
fdivr
out
rclb
mov
std
cmp
jne
mov
in
outsb
pushf
add
incl
incl
jae
add
incl
mov
jl
add
cld
dec
addb
data16
mov
mov
inc
mov
incw
data16
inc
jge
add
lea
add
ljmpw
pushl
lea
shlb
test
incl
test
inc
push
xor
add
ret
mov
push
movl
add
pushl
incl
mov
or
jne
addl
mov
add
mov
orl
push
mov
ret
adcb
add
mov
ret
or
lea
loop
xchg
aam
out
mov
inc
dec
pop
mov
repnz
orb
repnz
mov
jmp
incl
addl
mov
cmpsb
pop
inc
data16
inc
xor
dec
push
inc
jge
mov
mov
add
add
test
incw
mov
call
mov
clc
ret
rol
mov
mov
pushf
pop
ljmp
add
inc
test
push
mov
mov
push
add
decl
add
cmp
decl
jmp
push
hlt
data16
dec
ret
mov
lea
jne
decl
decb
mov
push
jmp
inc
sbb
movsb
inc
test
inc
decl
test
mov
lods
push
inc
jne
decl
mov
sbb
mov
mov
movswl
xor
add
xor
xor
decb
mov
pushf
inc
decl
sar
decl
incl
addl
xlat
dec
add
mov
lea
call
inc
rdpmc
add
push
lea
js
add
push
lea
fmuls
jmp
dec
mov
mov
call
dec
inc
mov
push
into
test
call
lea
jmp
inc
jnp
add
incw
mov
inc
add
mov
decl
add
data16
inc
dec
test
cmp
add
mov
incl
mov
ljmp
push
incl
call
decl
mov
inc
mov
mov
add
inc
mov
mov
pop
test
clc
lea
cmp
push
lea
mov
hlt
lahf
push
mov
xor
add
mov
mov
rolb
mov
nop
push
add
mov
in
jge
test
jne
sbb
push
inc
call
add
mov
cmp
ud0
test
dec
incl
decl
dec
cld
test
icebp
add
test
incb
jne
mov
cld
xor
push
xor
add
add
add
add
or
jmp
nop
test
xor
mov
mov
add
decl
add
decl
movsl
add
add
rdpmc
addb
mov
add
decl
decl
push
jne
mov
cld
add
push
incl
add
add
mov
sbb
leave
test
jne
call
xor
mov
enter
mov
mov
cld
add
inc
dec
mov
inc
decl
add
xchg
ret
add
add
mov
lea
add
mov
inc
rdpmc
jne
add
inc
clc
add
mov
mov
in
add
test
incb
add
cmp
pushl
add
test
je
mov
sbb
test
js
add
sub
mov
add
dec
push
mov
mov
mov
sbb
or
dec
incl
push
add
mov
orl
add
push
cmp
inc
mov
in
add
xor
add
ljmp
decl
call
mov
lock
mov
mov
mov
mov
addl
mov
inc
push
ljmp
mov
clc
cmp
jne
mov
add
int3
inc
cmp
add
adc
add
mov
cmp
jmp
mov
inc
or
decl
jne
mov
mov
in
xchg
jmp
adc
inc
mov
push
sub
push
test
inc
dec
mov
movl
add
add
mov
push
roll
bound
xor
add
mov
test
call
loop
jnp
mov
cmp
cld
shr
add
push
lea
mov
cwtl
cli
add
or
inc
dec
incl
add
call
add
push
adc
mov
mov
addl
incl
inc
stos
mov
add
mov
cmp
movsb
mov
cld
jae
add
clc
add
mov
clc
pop
inc
xor
pushl
mov
jae
mov
sub
add
mov
mov
ret
mov
ret
mov
add
mov
add
incl
lea
hlt
sar
test
inc
add
testb
push
add
add
add
add
add
mov
mov
cld
fidivl
mov
xorb
add
sbb
jne
mov
sbb
mov
add
ret
dec
or
dec
cld
cmovne
add
seto
inc
adc
mov
cmp
xor
gs
je
push
sarb
mov
push
cmp
add
dec
mov
in
adc
pop
inc
leave
or
gs
add
into
in
enter
push
xorl
or
jnp
test
add
mov
ltr
decl
clc
out
add
cmp
jge
jb
je
pop
push
mov
in
roll
orl
cmpl
hlt
mov
push
jns
lock
ror
test
dec
rcpps
mov
inc
test
je
mov
adcl
and
jp
rcpps
add
sbb
add
je
cmp
js
add
jns
vmread
add
adc
jge
mov
add
or
push
push
mov
add
pop
add
mov
inc
pop
xorl
add
push
clc
mov
jp
add
divl
test
je
mov
or
decb
jbe
mov
add
cmp
add
je
mov
mov
hlt
orb
jb
jmp
xor
pop
pop
pop
ret
ret
mov
xorl
pushf
xor
rdmsr
test
dec
ret
mov
pop
dec
jne
xor
inc
dec
jbe
inc
pop
add
push
dec
push
mov
and
jo
mov
sbb
mov
nop
or
jne
cmp
cld
xor
add
cmp
js
jae
xor
jmp
mov
fdecstp
test
add
add
mov
cmp
adc
jge
mov
jl
clc
dec
jge
mov
jb
mov
mov
xor
add
mov
inc
pop
jge
cmp
mov
imul
fimuls
fists
in
jne
mov
imul
fdivrp
filds
test
inc
mov
mov
adc
rcll
mov
fiadds
mov
mov
xor
mov
xlat
into
ffreep
lret
iret
dec
inc
mov
fmull
dec
jnp
add
mov
inc
dec
lea
add
jb
add
inc
imul
cld
clc
mov
incl
or
sbb
lret
add
dec
add
enter
inc
pop
decl
add
add
mov
xor
or
pop
cltd
push
clc
mov
xor
add
cmp
hlt
cmp
or
mov
loopne
mov
cld
pushf
pop
fwait
mov
lock
adc
orb
xor
dec
mov
iret
inc
jne
mov
cmp
je
add
or
dec
inc
mov
cld
add
cmp
mov
or
mov
test
inc
xor
mov
jne
mov
fcomps
add
incl
cld
add
mov
cld
inc
fidivrs
fbstp
mov
adc
fadd
add
mov
inc
mov
loopne
sbb
sbb
pushf
add
mov
cwtl
inc
inc
jne
mov
clc
add
mov
or
inc
lea
add
inc
rorl
add
shufps
jmp
xor
hlt
mov
fadds
xor
add
cmp
pmuludq
jmp
mov
or
inc
mov
jne
mov
clc
add
xor
jne
pushl
add
mov
cld
add
xor
mov
adc
sub
lea
add
jb
add
inc
add
inc
mov
or
mov
in
scas
inc
mov
in
add
mov
dec
mov
mov
cld
push
dec
add
mov
in
cmp
mov
mov
mov
xor
cmpl
xor
jmp
add
xor
add
cmp
mov
mov
adc
jmp
mov
cld
mov
push
jne
dec
or
push
inc
in
add
or
dec
cld
mov
xorl
pushf
decl
mov
mov
xor
mov
inc
mov
mov
call
add
mov
or
jo
push
xor
pmulhuw
test
mov
mov
xor
xor
xor
add
inc
mov
movl
sub
lock
mov
mov
or
ja
mov
cld
cli
mov
cmp
bswap
mov
mov
clc
repnz
push
xor
cmp
pushf
pop
jmp
mov
xor
lea
xor
pushf
out
neg
insl
test
clc
pop
inc
or
xor
add
jne
mov
in
push
xor
add
cmp
add
mov
mov
add
mov
mov
fwait
pushf
xor
jne
mov
icebp
icebp
shl
mov
push
jne
mov
in
jmp
add
mov
or
inc
jne
mov
ret
or
jge
sub
xor
add
mov
clc
negl
xor
cmp
repz
xor
add
mov
mov
cld
lock
test
clc
add
fdivrp
test
jnp
add
jae
sub
shll
leave
call
in
in
add
mov
in
test
mov
xor
pushf
jnp
xor
loopne
jne
mov
add
xor
mov
cld
jb
add
jne
mov
jge
mov
lock
xor
mov
lock
jge
xor
dec
mov
loopne
jge
add
icebp
add
dec
hlt
xor
mov
in
jge
mov
dec
push
xor
inc
hlt
xor
mov
repnz
cmp
test
fistps
inc
mov
add
inc
test
add
add
ret
jnp
inc
inc
xor
fdivl
test
push
add
cmp
setnp
mov
call
or
inc
mov
and
lock
movl
mov
clc
xor
mov
inc
mov
mov
mov
mov
hlt
inc
rorl
mov
push
mov
in
jne
mov
addl
clc
mov
add
rolw
mov
jne
incl
inc
push
test
sub
add
and
add
mov
and
cmp
add
inc
push
add
push
enterw
mov
add
add
str
lea
sbb
dec
cmp
inc
push
mov
push
add
mov
inc
add
add
mov
loopne
dec
mov
cld
push
xchg
add
add
or
dec
loopne
xchg
push
add
dec
jmp
mov
sbb
inc
xor
add
push
divl
and
add
jno
incl
inc
push
push
mov
mov
push
inc
enter
push
call
pop
push
mov
mov
push
jo
incl
or
call
fmull
mov
mov
adc
dec
xor
mov
mov
mov
push
lret
movb
inc
movntps
lret
into
dec
lret
mov
mov
fdivl
mov
push
mov
sbb
dec
sarl
push
jne
mov
lea
call
sbb
add
push
mov
push
mov
test
xadd
pop
add
mov
or
push
add
add
and
call
add
mov
add
xor
add
inc
je
push
decb
add
or
inc
add
data16
subl
add
add
enter
int3
loopne
rolb
lea
data16
add
sbb
inc
cmp
add
xor
sub
mov
or
ror
dec
inc
cmp
cld
or
ret
lret
dec
mov
loopne
cmp
inc
daa
loopne
in
add
add
push
inc
xor
add
push
push
inc
in
push
inc
sbb
rorb
addb
ljmp
xor
mov
fmuls
add
lea
add
popl
add
push
incw
mov
add
xor
test
inc
mov
add
or
or
inc
mov
jne
mov
add
add
adc
adc
push
mov
mov
inc
mov
or
push
jne
call
inc
sarb
in
add
add
and
fs
incl
jle
leave
scas
inc
add
orb
call
shr
xchg
add
add
dec
and
push
decl
mov
mov
lea
mov
add
mov
push
shlb
inc
in
jno
push
mov
mov
je
mov
sbb
popl
add
add
adc
jmp
sub
jne
mov
in
popl
push
incl
adc
add
call
and
and
inc
test
sldt
xor
pushf
jmp
mov
or
inc
call
mov
loopne
inc
add
mov
add
add
cmp
test
sbbl
jne
call
leave
rcrb
add
add
add
inc
mov
fcom
add
lea
pushl
call
mov
fstps
push
pop
mov
addl
mov
xor
xor
pop
or
inc
push
in
or
movsl
xbegin
clc
adc
divb
or
test
add
add
adc
xchg
test
clc
data16
orl
rolb
mov
mov
push
add
jge
add
jne
mov
jmp
xor
pop
cvtdq2ps
ret
mov
xor
add
push
rdpmc
out
add
mov
ret
sbb
cmp
or
or
pop
inc
add
add
invd
jge
mov
cli
xor
mov
ret
mov
sub
inc
xor
pushf
inc
mov
hlt
test
mov
xor
dec
or
jne
mov
call
inc
mov
add
add
inc
mov
addl
inc
mov
lock
jge
mov
cli
xor
add
test
add
cmp
xadd
test
mov
xor
add
pop
loopne
inc
clc
xor
add
data16
mov
hlt
xor
add
data16
cmp
add
psubq
ltr
add
add
data16
mov
jge
data16
data16
mov
fdivl
data16
mov
mov
pop
or
clc
mov
lock
jge
invd
pop
add
cmp
data16
mov
pop
fbstp
test
add
add
jge
data16
pop
stc
bsf
mov
in
test
mov
call
cmp
add
mov
call
add
mov
jnp
mov
mov
call
mov
data16
xorl
fisttps
cld
jne
xor
mov
sti
repnz
data16
push
xor
mov
fwait
data16
mov
mov
fisttps
or
mov
hlt
mov
add
dec
or
mov
or
mov
fdivrl
xor
pop
lock
lea
icebp
jb
add
jge
mov
fsubr
pop
mov
in
rcrl
jb
add
jge
mov
in
pop
data16
cmp
mov
fdivrl
cmp
mov
mov
lock
mov
or
clc
cmp
je
push
loopne
dec
mov
int
mov
pcmpgtd
add
jmp
mov
lock
rorl
or
jb
add
loopne
jne
data16
mov
data16
add
add
retw
ret
lret
enterw
pop
jne
mov
call
xor
lea
repnz
add
xor
in
xor
movl
clc
add
pop
pushf
pop
call
mov
push
pop
mov
push
inc
add
popa
data16
into
gs
add
ret
add
add
add
cmp
add
into
ret
pop
adc
mov
mov
jne
lea
mov
sarl
test
mov
push
xorb
mov
xor
ss
fs
mov
je
xor
mov
ss
pop
cmp
jne
mov
cld
push
pop
inc
stc
xor
test
clc
test
cmp
fs
or
add
lret
xor
pushf
mov
ret
pop
dec
mov
push
add
xor
cmp
je
mov
lea
push
cmp
mov
add
sub
add
mov
jne
mov
xor
mov
push
cmp
jne
sbbl
clc
inc
pop
sti
add
cld
xor
mov
roll
mov
inc
in
add
mov
mov
push
mov
test
xor
pushf
sub
inc
sub
mov
inc
add
or
cmp
mov
cmp
je
push
dec
str
cmp
int
mov
mov
cld
add
data16
push
add
jne
movl
clc
xlat
inc
mov
push
pushf
in
add
add
add
cmp
add
lret
lock
clc
inc
lret
cmp
xor
pushf
test
je
xor
rorb
push
add
jb
add
dec
mov
push
push
adcl
xor
mov
scas
ret
jns
mov
dec
or
ret
lock
mov
or
mov
xorl
mov
adc
iret
inc
movl
incb
ret
adc
clc
dec
fisttps
add
ret
lea
add
xor
pushf
add
add
inc
test
xor
push
fwait
push
xor
inc
cmp
jbe
mov
or
inc
test
xor
in
hlt
push
push
push
push
mov
fwait
fwait
xor
mov
or
mov
clc
jb
add
orl
addl
mov
or
inc
dec
mov
orw
xor
mov
mov
mov
mov
inc
dec
add
add
mov
clc
or
mov
clc
popf
incl
ret
adc
mov
hlt
test
clc
or
xor
pushf
jb
add
inc
daa
inc
inc
xor
dec
fwait
add
clc
cmp
or
add
xor
or
lea
add
mov
cld
dec
push
sub
add
or
add
or
add
mov
inc
mov
cmp
xbegin
clc
or
xor
adc
lea
add
inc
add
add
je
push
or
dec
std
mov
mov
mov
or
inc
clc
mov
hlt
call
push
or
push
xor
mov
xor
pushf
inc
mov
or
add
inc
mov
or
inc
push
jmp
mov
mov
jne
jmp
mov
clc
lret
push
mov
mov
sub
decl
or
pop
ds
pushl
mov
mov
jmp
leave
jne
call
in
dec
add
add
inc
cmp
je
mov
or
add
or
adc
enter
rolb
mov
or
rorb
jmp
push
mov
cld
inc
inc
orl
push
push
mov
add
test
add
mov
mov
lock
fcoms
mov
push
enter
cmp
add
mov
call
cmp
jmp
push
call
mov
cld
or
call
add
xor
jne
cmp
jne
mov
or
pop
into
je
mov
or
mov
mov
mov
or
sar
xor
xor
pop
adc
ret
cld
inc
mov
cld
mov
push
pop
or
xorps
test
add
adc
addl
jmp
ror
inc
leave
xor
and
add
xor
xorl
mov
pcmpgtw
add
leave
mov
push
dec
mov
lea
xor
sysret
dec
rorb
pushw
jne
ud0
mov
lods
add
data16
iret
and
cli
inc
cmp
add
inc
pop
lea
mov
add
mov
mov
add
inc
data16
clc
int3
cmp
je
push
pop
xchg
data16
lea
jb
jmp
call
clc
xchg
mov
or
lea
push
inc
jge
mov
fdivs
incl
xor
xchg
ret
xor
cmp
data16
rolb
add
dec
xchg
push
jmp
push
add
add
mov
clc
dec
xchg
cmp
jne
xor
jmp
add
jne
call
clc
xchg
sti
add
add
xor
pop
mov
jmp
mov
cmp
cmp
lea
jle
jae
mov
lcall
inc
push
lea
mov
int3
push
xchg
add
add
inc
add
cld
mov
aam
xchg
mov
testb
mov
hlt
add
mov
decl
incl
mov
call
je
js
lock
mov
mov
sbb
clc
add
mov
rorb
dec
xchg
mov
in
jge
cmp
clc
pop
fistl
clc
add
mov
mov
mov
adc
add
adc
pop
sbbl
ret
cmp
mov
cld
add
add
add
sub
or
add
mov
push
push
clc
addl
out
add
jmp
cmp
jmp
je
mov
inc
add
add
add
pop
pop
push
inc
in
pop
in
cmp
xor
add
push
mov
in
dec
push
test
add
leave
inc
test
add
add
dec
push
mov
hlt
push
dec
leave
mov
clc
cmovge
mov
clc
popl
push
add
push
xor
cld
add
xor
add
add
int
mov
add
cmp
jne
xor
jmp
add
mov
or
mov
mov
mov
or
shl
icebp
addb
or
or
stc
shll
xor
inc
xchg
add
add
mov
test
sub
jmp
mov
lock
lea
mov
or
leave
add
dec
dec
test
paddb
add
dec
mov
mov
or
dec
xor
mov
adc
mov
call
mov
push
clc
or
push
lret
mov
mov
xor
cmp
lsl
call
or
dec
or
inc
xor
in
add
inc
pop
xor
testl
dec
sub
add
push
sub
mov
or
mov
xor
pushf
push
movl
dec
inc
cmpb
pushf
gs
shl
dec
xchg
shr
xlat
rol
mov
or
mov
or
push
mov
dec
enter
lret
ret
mov
or
into
add
add
bswap
ror
dec
add
mov
hlt
inc
inc
ret
mov
or
dec
xor
jne
inc
inc
mov
clc
pop
ret
mov
call
dec
add
adc
push
ret
in
call
push
add
xor
jmp
xor
add
shr
mov
mov
in
pushf
ret
fcomps
inc
in
xor
mov
cld
fmul
sbb
ljmp
jbe
mov
clc
add
mov
lea
mov
call
hlt
xor
mov
xor
mov
hlt
into
inc
scas
mov
cld
add
add
inc
shrl
xor
mov
clc
dec
inc
decl
ret
movb
scas
inc
jmp
mov
pop
xor
mov
clc
test
mov
cld
call
xor
add
fdivl
lret
in
inc
or
into
mov
call
cld
mov
xor
lea
mov
add
inc
mov
dec
mov
cld
xor
sub
int
sub
add
mov
call
incl
mov
cld
jne
mov
aam
dec
or
jb
add
rorl
xor
xor
sub
mov
xchg
inc
xor
clc
mov
nop
faddl
xchg
jmp
mov
fadds
inc
or
dec
add
dec
mov
inc
push
mov
xor
rolb
ret
inc
inc
mov
xor
add
mov
cmp
dec
inc
xor
inc
mov
clc
lea
add
xor
mov
push
enter
mov
mov
loopne
ret
push
enter
inc
cld
mov
clc
ret
ret
mov
cld
pop
mov
mov
dec
xor
pushf
add
fcoms
mov
adc
inc
mov
adc
cmp
inc
add
mov
nop
add
inc
mov
add
cmp
mov
clc
inc
inc
add
mov
in
jne
mov
clc
add
mov
in
mov
xor
cmp
fmuls
lea
clc
mov
cmp
test
inc
mov
ret
inc
decl
push
dec
test
dec
mov
mov
mov
fadds
dec
inc
sub
inc
xor
faddl
inc
or
dec
add
mov
mov
mov
mov
lock
inc
add
fsubr
test
clc
push
cmp
pushf
inc
push
fsubs
clc
mov
mov
mov
clc
mov
xor
mov
in
les
mov
or
dec
mov
in
dec
decl
fmuls
inc
mov
faddl
dec
push
xor
push
mov
push
mov
lock
inc
test
add
add
jne
lea
div
incl
xor
jb
add
mov
xor
mov
adc
mov
ret
push
push
lea
sti
add
or
mov
xor
mov
add
jne
lea
mov
call
shll
pushf
add
mov
xor
test
clc
dec
inc
xor
pushf
rorb
lea
int3
add
lea
lea
mov
xor
bswap
rorb
roll
add
xor
pushf
inc
jnp
mov
lock
lret
xor
mov
fmul
test
xor
mov
mov
mov
ret
add
dec
adc
add
inc
rcll
mov
xor
jb
add
mov
cld
mov
or
cmp
jne
mov
mov
xor
mov
mov
mov
xor
jb
add
add
mov
xor
mov
or
xor
mov
mov
xor
jb
add
enter
add
add
inc
mov
mov
add
dec
mov
add
cmp
add
mov
loopne
add
dec
or
in
or
mov
xor
add
enter
inc
mov
or
or
mov
cmp
add
roll
mov
or
xor
mov
mov
xor
mov
xor
mov
faddl
call
dec
dec
xor
or
loopne
or
iret
ret
mov
mov
call
fwait
add
mov
fmull
test
dec
add
cmp
dec
mov
xor
mov
in
or
dec
xor
lea
or
ja
sbb
cmp
jne
mov
faddl
mov
fadds
mov
in
or
iret
add
xor
sbb
decl
mov
in
mov
dec
mov
fmull
jne
or
add
cmp
jne
lea
inc
mov
mov
jne
mov
test
inc
mov
loop
pushl
mov
add
mov
lods
dec
inc
mov
lret
mov
adc
std
ret
ljmp
hlt
rol
ret
cld
enter
inc
pop
mov
ret
test
jmp
push
call
in
addb
add
add
icebp
mov
cld
pop
dec
shll
add
cmp
je
mov
inc
or
ljmp
sti
cwtl
call
or
push
sub
push
inc
mov
mov
test
inc
push
push
xor
add
dec
add
inc
add
push
decl
add
or
call
mov
mov
inc
dec
add
push
call
incl
mov
mov
or
cmp
cmovne
adc
adc
inc
adc
jne
call
dec
inc
mov
add
mov
push
or
dec
xorl
cmp
mov
pop
adc
ret
mov
clc
mov
pop
mov
mov
push
push
lock
mov
adc
or
ret
xor
add
or
jge
mov
and
cmp
mov
xchg
dec
add
mov
add
dec
into
mov
mov
das
add
add
mov
and
mov
and
xor
lea
xor
add
xor
orl
cmp
pushf
mov
or
jne
call
adc
mov
adc
movl
pop
and
call
and
call
addl
clc
pushf
decl
jmp
and
and
or
decl
and
pop
cli
in
ret
add
mov
or
jl
adc
dec
push
and
xor
mov
add
or
cmp
sbb
or
xor
or
test
dec
adc
adc
add
jae
add
pop
adc
fidivl
add
movups
popf
push
adc
insl
or
add
inc
add
ss
add
ss
add
ss
add
ss
add
ss
add
ss
add
ss
add
ss
add
ss
add
ss
add
cmp
add
adc
sub
adc
push
adc
mov
adc
adc
cmp
adc
addr16
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
pop
adc
jle
adc
cld
dec
adc
add
adc
push
insl
adc
fs
add
jge
add
ss
add
ss
add
ss
add
ss
add
aas
adc
jne
adc
fldenv
adc
xchg
push
add
pop
adc
in
adc
leave
sbb
add
ss
add
ss
add
ss
add
ss
add
ss
add
ss
add
ss
add
aaa
inc
add
adc
add
adc
dec
insl
adc
mov
adc
mov
adc
rorl
adc
pop
inc
adc
daa
aaa
inc
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
inc
add
push
pop
ss
ss
xor
add
pop
dec
dec
dec
xor
pop
xor
add
push
xor
dec
inc
dec
cmp
pop
inc
add
dec
pop
push
push
inc
xor
push
add
push
pop
dec
dec
dec
dec
dec
add
cmp
aaa
dec
cmp
push
inc
add
inc
pop
dec
xor
xor
push
xor
push
xor
dec
push
inc
xor
cmp
add
dec
xor
xor
xor
xor
inc
add
xor
dec
push
xor
dec
xor
dec
xor
dec
inc
push
pop
inc
xor
add
pop
add
add
push
add
dec
add
add
dec
add
xor
pop
add
dec
add
cmp
pop
add
cmp
add
push
add
push
add
dec
add
dec
add
inc
add
dec
add
add
add
push
add
pop
add
add
push
add
add
dec
add
pop
add
push
add
xor
xor
pop
add
add
add
add
add
pop
add
dec
add
dec
add
add
push
push
inc
push
rol
xor
jnp
or
pop
add
add
add
pop
js
insl
arpl
addr16
pop
inc
inc
dec
bound
popa
push
bound
popa
bound
jo,pn
bound
