add
add
call
add
add
add
add
add
add
add
add
mov
mov
or
dec
add
add
add
movl
cmp
test
enter
mov
hlt
test
pushf
enter
movl
inc
inc
cld
xor
or
mov
call
pop
mov
dec
mov
pushl
or
ljmp
dec
loopne
rorb
add
mov
hlt
add
enter
dec
add
mov
orl
xor
lret
enter
mov
lea
push
mov
fs
decl
push
and
pop
inc
mov
push
pop
cld
dec
lea
mov
add
movl
decl
xor
cld
dec
jne
lea
push
mov
or
add
sub
add
rolb
inc
add
add
mov
incl
lea
call
add
jne
decl
dec
add
xchg
loopne
inc
incl
mov
xor
add
enter
mov
hlt
add
mov
add
add
incl
sbb
jne
mov
mov
movl
incl
fisttpll
test
inc
aas
inc
lea
pushl
mov
mov
cld
ljmp
mov
add
incl
xlat
lea
inc
ljmp
incl
aaa
add
test
pandn
aas
add
mov
incl
or
mov
xchg
roll
mov
cmp
dec
rorl
lea
push
add
mov
mov
add
mov
cld
push
decl
push
mov
call
mov
add
test
ljmp
mov
fcom
add
mov
add
add
addr16
add
push
inc
push
fisttps
test
add
jecxz
roll
inc
jle
test
jmp
incl
in
add
jne
mov
cld
incl
mov
mov
add
call
enter
incl
in
xor
mov
cld
jle
mov
add
mov
decl
add
inc
das
mov
cld
push
mov
add
mov
mov
inc
sub
add
rolb
jne
xor
incl
call
mov
call
xor
push
adc
loopne
ret
loopne
xorl
cmp
bswap
rolb
jmp
mov
add
cld
jne
xor
lds
add
push
cs
add
mov
test
add
incl
jmp
faddl
jge
adc
mov
lahf
mov
lea
xor
call
call
jne
xor
add
pushl
call
int3
incl
mov
xor
add
xchg
in
add
add
inc
ret
mov
mov
or
inc
test
je
mov
xor
push
or
inc
in
mov
mov
fmul
add
mov
cld
loopne
inc
push
cmp
movaps
cld
fadds
jne
push
in
jne
lea
xor
jmp
mov
xor
adcl
rclb
inc
lock
inc
xchg
ud0
incl
jp
add
mov
inc
lret
inc
iret
jb
mov
enter
cmp
pushf
mov
xor
dec
add
inc
mov
xor
add
mov
fmuls
xor
mov
fadds
xor
mov
clc
enter
mov
test
clc
incl
aas
mov
test
clc
pushf
inc
pushl
cld
pushf
inc
mov
insl
push
add
mov
sarb
adc
dec
adc
add
jmp
jb
add
xor
xor
add
clc
enter
pop
mov
push
push
xor
xor
add
add
lret
repnz
cli
fdivr
test
dec
inc
xor
add
mov
mov
clc
jne
mov
into
into
scas
dec
mov
sub
cmp
mov
mov
mov
add
cmp
xor
lret
mov
inc
add
mov
lods
test
xor
mov
lock
bswap
lret
test
jmp
add
push
mov
test
push
clc
xor
xor
add
add
push
dec
mov
stc
roll
scas
mov
xor
xor
add
mov
clc
lret
into
mov
mov
mov
int3
add
xor
xor
add
mov
lock
stc
mov
or
jmp
dec
dec
mov
clc
test
clc
rorl
mov
call
les
lret
ja
mov
dec
xor
mov
clc
push
lret
mov
adc
jb
add
call
cmp
movsb
lahf
inc
xor
mov
clc
dec
lret
mov
call
scas
mov
lahf
sub
cmp
lods
xor
add
mov
mov
cmp
jb
add
dec
scas
mov
shrl
into
cmp
mov
dec
dec
mov
lret
xor
add
imul
mov
xor
mov
add
mov
inc
pushf
jge
xor
sub
cmp
jb
add
rorl
xor
add
jmp
mov
dec
into
mov
lahf
shll
lret
or
add
in
push
mov
popa
add
dec
sub
dec
xor
jge
mov
add
dec
decl
adcb
add
jge
push
push
shlb
xor
xor
inc
add
dec
or
jbe
mov
ror
enter
decl
push
lret
push
mov
mov
cld
subb
sti
add
push
lcall
mov
int3
pop
inc
decl
push
xor
movl
aas
push
inc
xor
add
mov
jmp
mov
rol
mov
mov
mov
cmp
mov
add
xor
lahf
lret
cmp
call
inc
inc
mov
mov
enter
add
add
clc
enter
push
pushf
mov
int3
or
test
clc
gs
add
push
xor
sub
dec
add
mov
or
cmp
dec
out
xor
mov
dec
add
push
push
add
sbb
mov
xor
dec
inc
xor
add
push
dec
mov
lret
into
sub
dec
adc
inc
push
test
unpcklps
jmp
add
movl
cmp
rolb
clc
popa
jb
mov
xor
sub
mov
add
sub
mov
mov
clc
addl
lcall
inc
decl
test
decl
push
add
dec
or
rorb
into
add
mov
sar
adc
clc
fadds
mov
push
adcb
add
lret
mov
cld
mov
into
add
jne
incl
rclb
push
mov
mov
sar
or
push
add
pushf
cmp
pushf
mov
test
clc
inc
inc
mov
sub
mov
dec
popa
xor
mov
popa
xor
orl
fsubs
int3
lea
push
cmp
pop
lods
incl
mov
rcrb
test
inc
inc
add
push
in
inc
push
mov
cld
add
adc
add
jmp
add
mov
dec
push
cmp
unpcklps
jne
decl
mov
shlb
inc
add
lret
decl
stc
in
or
dec
clc
xor
mov
rolb
inc
add
clc
inc
lret
mov
in
lret
into
into
scas
dec
mov
sub
cmp
mov
int3
test
cmp
xor
lret
mov
inc
add
mov
xor
mov
call
lret
test
jmp
add
push
mov
mov
lret
xor
add
add
push
dec
mov
stc
roll
scas
mov
xor
xor
add
mov
clc
lret
into
mov
test
push
jbe
mov
mov
push
add
rdpmc
lret
add
dec
stc
mov
or
jmp
dec
dec
mov
clc
test
clc
rorl
mov
lock
inc
mov
hlt
pushf
jge
sub
cmp
ja
mov
dec
xor
mov
clc
push
lret
mov
adc
jb
add
lock
sub
mov
mov
mov
mov
lock
ror
push
scas
mov
lahf
sub
cmp
movsb
xor
add
mov
mov
cmp
jb
add
dec
scas
mov
shrl
into
cmp
mov
dec
dec
mov
lret
xor
add
imul
mov
xor
mov
add
rolb
pushf
jge
xor
sub
cmp
dec
xchg
incl
jmp
mov
dec
into
mov
lahf
shll
lret
or
add
in
push
mov
popa
add
dec
sub
dec
xor
jge
mov
add
dec
decl
inc
push
decl
lea
push
mov
push
mov
les
add
incl
mov
cld
lret
add
jne
in
ror
pop
into
add
not
adc
inc
push
mov
push
mov
fdivr
sti
sbb
pop
xchg
leave
lahf
add
push
cmp
sqrtps
decl
push
cld
xor
lret
clc
xor
add
hlt
or
mov
hlt
dec
add
leave
mov
push
roll
mov
mov
lar
push
lret
jne
mov
or
mov
cld
inc
mov
add
in
test
sar
ret
cld
mov
clc
xor
mov
loopne
mov
mov
clc
jne
call
adc
je
mov
cld
or
push
add
add
inc
push
mov
pop
mov
ret
push
mov
clc
lock
jne
jne
mov
rolb
jne
cmp
pop
mov
push
inc
lea
inc
inc
int
inc
cld
jle
inc
xchg
mov
mov
or
inc
inc
mov
cld
loop
mov
mov
rclb
iret
inc
leave
decl
mov
mov
mov
push
nop
incl
push
leave
iret
add
push
loope
push
push
incl
mov
in
push
sbb
add
mov
cmp
jne
push
pop
push
mov
or
add
sub
ret
add
sbb
mov
lea
push
enter
testl
enter
negl
or
inc
jmp
inc
jmp
push
push
imul
adcl
add
lea
mov
cmp
jne
mov
in
add
xlat
ss
aas
loope
ret
lock
and
mov
call
push
add
ud0
hlt
add
cmp
flds
out
call
cmp
shr
pop
fisttpll
push
add
add
push
add
sub
jne
lods
mov
dec
out
into
push
loopne
shrb
xorl
roll
mov
cmpl
mov
push
push
push
sub
push
adc
insl
mov
add
inc
mov
pop
addl
add
add
roll
cli
push
pop
lret
add
decb
sub
and
dec
inc
shll
add
pop
add
pop
dec
jmp
and
push
out
jmp
jmp
mov
decb
add
pop
icebp
mov
insb
adc
mov
or
mov
cld
jge
aas
and
adc
mov
and
dec
add
add
fadds
stc
enter
sbb
sbb
in
in
add
jne
cmp
jb
jmp
mov
add
add
jb
pop
faddl
or
inc
or
xlat
dec
push
add
leave
roll
add
mov
int3
jmp
mov
jne
mov
call
pop
add
pop
or
push
mov
int3
add
jae
int
enter
add
mov
push
pop
add
push
lea
mov
jb
mov
push
add
add
add
int3
jne
movsbl
add
add
mov
add
add
mov
sub
jb
add
jge
add
addl
jne
je
mov
rorb
orl
mov
mov
fadds
inc
pop
lea
push
out
add
add
mov
jb
add
push
call
add
jae
icebp
inc
mov
int3
out
loopne
sub
push
pop
push
jl
add
xor
mov
rcrb
rorl
inc
shr
orl
push
pop
add
jmp
mov
fdivrl
push
pop
call
mov
in
rolb
call
pop
enter
repz
xorl
je
or
jne
jmp
pushl
push
pop
cmpl
jge
mov
sub
pop
inc
mov
sub
lods
add
enter
repz
stc
jge
jnp
call
fadd
dec
insb
stc
cmp
push
mov
jne
mov
mov
add
sub
and
cmp
sbb
pop
call
fsubr
sti
add
add
add
roll
mov
clc
jne
mov
loopne
loopne
lods
int3
inc
mov
add
sub
shrb
add
call
add
dec
insl
in
lea
inc
inc
sub
orl
and
rorl
or
mov
stos
adc
inc
add
jne
mov
cmp
sub
sar
ljmp
sub
mov
mov
and
jne
sub
sbb
dec
push
add
ret
mov
leave
sub
ret
pop
push
rolb
addl
jb
ret
in
jecxz
push
xchg
jne
cmp
jne
mov
rorl
mov
pop
nop
mov
les
add
inc
mov
mov
cmp
or
inc
inc
cmp
cld
add
add
add
sbb
dec
je
mov
add
and
jae
mov
incl
push
shr
in
push
andl
lret
mov
add
lret
pushf
and
pop
rcr
test
clc
add
cmp
pushf
add
add
inc
push
rcrl
inc
fsts
mov
nop
rolb
mov
add
pop
add
or
mov
add
call
add
add
push
inc
orb
leave
dec
dec
add
call
clc
inc
inc
mov
enter
mov
xor
xor
or
sbbb
int3
test
clc
inc
mov
fmuls
sub
add
leave
cmp
pushf
mov
jl
add
add
or
test
clc
or
cmp
sbb
mov
xchg
pop
add
mov
add
mov
mov
mov
xor
add
inc
jge
mov
xor
add
push
jne
mov
decl
add
cmp
push
inc
inc
add
add
mov
mov
mov
sbb
inc
add
push
clc
add
mov
jne
mov
add
add
lea
lea
xor
ret
mov
add
push
inc
inc
add
test
jne
mov
mov
push
pop
inc
decl
rclb
xor
addl
mov
push
jbe
mov
ret
dec
inc
jmp
mov
cld
push
mov
add
push
push
inc
jmp
add
add
inc
ret
mov
mov
sub
mov
mov
rolb
inc
add
inc
add
clc
inc
ljmp
xor
add
mov
mov
inc
fdivs
loop
add
add
ljmp
add
add
add
mov
dec
incl
test
sbb
add
mov
add
and
dec
mov
dec
call
inc
add
cmp
inc
add
jb
mov
cmp
lret
mov
test
andnps
decl
inc
add
mov
inc
hlt
mov
xchg
add
xor
add
mov
mov
mov
push
push
inc
mov
call
inc
adc
decl
aam
push
add
xor
lcall
cmp
test
clc
inc
and
mov
cmp
je
mov
add
sbb
dec
dec
mov
mov
add
add
jne
mov
cmp
jb
mov
mov
mov
inc
je
push
add
push
mov
in
shlb
test
call
inc
inc
rorb
jmp
mov
mov
loopne
sbb
inc
inc
push
lea
lea
or
js
mov
incl
call
inc
add
decl
test
mov
add
add
incl
data16
push
rorb
incl
inc
add
decl
mov
add
add
xor
cmp
jbe
lea
mov
jae
mov
decl
add
call
add
mov
jb
incl
mov
sbb
push
je
incl
data16
test
lea
cmpsl
movw
mov
lea
js
incl
mov
pop
jmp
add
out
pusha
out
call
jmp
inc
add
in
mov
addl
mov
data16
addl
push
in
dec
inc
add
mov
in
incl
sub
incl
jle
leave
add
test
push
addl
outsl
in
add
test
ljmp
data16
inc
inc
xlat
cmp
jle
leave
icebp
inc
add
mov
fdivp
mov
in
test
inc
inc
mov
cld
inc
out
rclb
inc
mov
mov
sub
jne
movl
int3
inc
add
lea
xor
add
inc
adc
test
add
movb
jl
add
mov
mov
sbb
add
loopne
adc
or
inc
loop
xor
or
jle
inc
add
adc
repnz
xorb
adc
dec
repnz
mov
adc
call
adc
inc
push
flds
mov
fcmovnb
xor
sbb
addl
inc
mov
sbb
xorb
add
decl
add
incl
mov
lret
enter
inc
jne
mov
mov
mov
mov
ud2
xchg
xor
dec
mov
sbb
cmp
push
pop
adc
andb
mov
push
mov
adc
loope
inc
inc
fildll
mov
inc
subb
ljmp
lea
xor
mov
stos
mov
push
test
mov
push
ret
mov
sbb
rcl
inc
inc
int3
mov
cwtl
movl
ljmp
jmp
inc
or
rol
dec
adc
incl
add
push
push
add
test
or
jmp
pushl
add
push
loope
jae
jmp
andl
mov
sbb
addb
mov
incl
push
pop
clc
mov
orb
mov
lea
inc
ljmp
pop
inc
mov
mov
rclb
incw
lea
stos
add
mov
adc
pushl
decl
dec
push
loop
adc
call
mov
sbb
loopne
cmp
dec
mov
sub
inc
mov
xor
test
decl
add
push
add
mov
jbe
test
inc
push
addl
pop
add
ret
decl
mov
mov
cwtl
mov
test
rorb
lea
mov
push
decl
pushl
call
lea
mov
mov
mov
inc
dec
mov
xor
decl
call
lea
incw
cmp
decl
jmp
inc
jmp
dec
lea
jge
mov
lock
mov
mov
roll
push
str
xor
add
add
inc
rdpmc
mov
dec
inc
add
mov
data16
jne
push
adc
jne
ljmp
call
or
mov
mov
addl
mov
add
push
xor
dec
mov
mov
jl
push
mov
rcl
mov
mov
push
ret
push
pop
leavew
inc
sbb
in
xchg
push
shl
addl
mov
cwtl
or
setl
inc
add
test
xor
add
xor
mov
test
movb
adc
add
roll
mov
incl
ljmp
adc
jne
call
mov
push
sbb
inc
test
dec
add
dec
inc
mov
add
add
adc
and
jp
sysret
pop
add
cmp
sub
dec
mov
ret
clc
mov
addl
jnp
pop
add
xorl
adc
jge
mov
cld
test
add
add
negb
add
pop
add
add
inc
test
mov
fisttpl
mov
push
add
test
add
add
mov
add
add
mov
call
or
dec
or
inc
dec
addl
scas
dec
add
lock
mov
call
rclb
xor
adc
mov
mov
nop
rolb
mov
push
or
xor
sti
cmp
dec
test
or
ret
or
pop
add
xor
inc
mov
push
inc
mov
or
sti
dec
sub
cld
mov
mov
add
jne
cmp
jns
pop
jge
cmp
cld
inc
iret
or
jae
xor
jmp
mov
lea
mov
in
testb
jge
add
mov
cmp
hlt
adc
jl
clc
js
pushl
mov
clc
add
mov
call
inc
popa
jge
cmp
xor
rcrb
push
or
push
sub
in
add
fistl
sbb
test
inc
mov
cld
je
cmp
rorb
adc
mov
sbb
push
inc
mov
add
or
cld
mov
jge
xor
mov
hlt
iret
pop
inc
jbe
cmp
adc
push
add
dec
divl
sbb
mov
test
je
mov
or
cmp
jbe
mov
or
jg
add
dec
add
je
mov
mov
mov
adc
jmp
xor
pop
rcrb
ret
cmp
push
cmp
cld
xor
cmp
pushf
or
add
pop
mov
push
add
push
adc
push
xor
mov
in
dec
add
nop
iret
add
push
dec
lahf
mov
add
add
cmp
je
add
mov
pop
mov
lahf
fbstp
add
pop
pushf
mov
xor
ud0
add
add
or
dec
inc
mov
xor
mov
mov
fdivs
push
or
inc
imul
loopne
sbb
jg
inc
jne
mov
adc
fiadds
jne
mov
clc
test
xor
xor
mov
cld
jb
add
adc
rcr
add
add
pmaxub
dec
decl
xor
add
cmp
hlt
mov
faddl
xor
add
cmp
clts
jp
decl
xor
add
jne
mov
xor
lea
jb
add
add
add
add
adc
pop
mov
hlt
add
jmp
incl
xor
in
push
inc
mov
hlt
add
orl
mov
fcompl
enter
add
mov
in
and
mov
mov
cld
pushf
dec
lahf
xor
add
mov
cld
add
xor
pop
mov
cld
sbb
dec
mov
jne
mov
fadds
mov
push
fdivs
decl
lcall
inc
inc
xor
add
cmp
mov
fadds
mov
test
lahf
push
xor
out
mov
or
in
sbb
add
jne
mov
mov
cld
test
lahf
fbstp
ret
call
xor
add
mov
cld
dec
mov
cltd
inc
inc
mov
cld
lea
xor
add
inc
je
mov
cwtl
movb
add
sub
lock
mov
aam
ljmp
mov
in
inc
mov
cld
jmp
rorl
mov
fadds
add
xor
add
pop
hlt
pop
push
ret
mov
mov
cmp
fadd
test
jne
decl
mov
xor
add
clc
jne
add
xor
lea
add
jb
add
inc
jne
add
or
inc
scas
aas
mov
jne
mov
or
icebp
lahf
shll
mov
lsl
cmp
cltd
mov
add
mov
call
jge
sub
xor
jge
xor
add
mov
xor
add
jne
xor
jmp
mov
cld
mov
clc
leave
xchg
or
push
mov
cld
in
icebp
jnp
add
jae
sub
inc
call
pop
call
xor
add
ret
xor
inc
loopne
jne
mov
push
jge
xor
in
test
add
mov
xor
xor
add
cmp
mov
xor
add
cmp
mov
add
add
or
ja
mov
cld
pop
stc
mov
in
jge
mov
or
icebp
add
jae
add
push
jne
mov
repnz
cmp
xor
clc
pop
repnz
out
pop
testl
pop
add
pop
jge
xor
add
cmp
fdiv
test
clc
mov
rcll
stc
or
mov
in
lahf
jne
mov
or
lahf
xor
add
mov
mov
lock
push
inc
jne
mov
in
mov
clc
repnz
decb
mov
cmpl
clc
call
hlt
add
clc
inc
jne
mov
clc
test
xor
mov
in
xchg
roll
sbb
cld
clc
pop
add
add
mov
mov
or
add
test
add
mov
sbb
rclb
add
add
mov
and
cmp
pushf
or
rcrl
xor
mov
add
inc
inc
mov
add
cmp
inc
push
mov
mov
lock
xor
mov
cmp
cmp
clc
ret
dec
inc
xor
inc
add
add
dec
mov
cld
mov
cmp
pushf
dec
mov
xor
mov
cmp
push
mov
add
incl
mov
in
inc
or
rclb
add
push
inc
call
leave
push
add
mov
or
jo
cmp
add
add
mov
or
mov
cmp
roll
mov
dec
dec
sbb
cld
mov
test
cmovne
test
add
into
xor
add
mov
faddl
mov
nop
into
add
mov
mov
invd
mov
mov
mov
push
push
cmp
fmuls
call
rcl
rcl
call
inc
jne
jmp
sbb
dec
or
mov
sbb
dec
and
push
add
cmp
je
push
and
add
or
inc
adc
inc
and
push
push
sub
push
mov
sbb
dec
mov
add
jge
add
mov
mov
cmovne
xor
xor
or
roll
dec
add
dec
jbe
mov
cld
mov
bswap
push
lret
xor
mov
and
or
daa
xchg
push
push
adcl
push
xor
add
decl
sbb
rolb
and
mov
enter
mov
push
add
add
addl
mov
rorl
mov
inc
dec
mov
inc
mov
call
or
mov
inc
push
mov
into
mov
mov
lea
mov
push
xor
mov
sub
mov
loopne
lret
push
dec
mov
lods
xor
add
mov
xlat
dec
sarb
jne
mov
fsub
add
xor
in
mov
hlt
mov
mov
in
jb
push
inc
push
jle
leave
cmove
lods
add
mov
or
xor
mov
orl
into
in
lret
xchg
gs
add
mov
fsubs
inc
lea
push
lea
fadds
mov
inc
add
mov
fmul
rorb
add
inc
inc
je
mov
sbb
add
add
jmpw
or
lret
jne
mov
in
add
lret
mov
sbb
inc
call
and
and
inc
test
add
rorb
data16
call
ret
test
inc
orb
sub
stc
test
mov
lea
call
pop
add
xchg
add
add
push
cmp
fdivs
add
lea
test
je
mov
decl
push
add
inc
sbb
push
or
mov
cmp
mov
inc
pop
add
add
push
decl
or
adcl
push
jno
add
push
clc
sar
xchg
add
jne
mov
mov
sub
rolb
loopne
dec
mov
mov
call
add
add
add
add
jmp
xor
pop
lcall
ret
mov
mov
add
push
and
adc
add
dec
or
sbb
cmp
pop
push
add
mov
and
xchg
add
add
cli
loope
shlb
dec
ret
sub
pushf
inc
mov
or
test
clc
incl
cmp
pushf
jb
add
add
mov
hlt
inc
data16
mov
jmp
mov
or
inc
add
mov
mov
mov
add
sbb
jne
sub
lahf
mov
and
add
lock
test
add
push
inc
in
mov
ret
push
test
add
inc
shlb
pop
add
loopne
inc
pop
xor
mov
fdivrp
pop
mov
hlt
addl
cmp
lock
add
add
push
or
add
data16
lock
jge
mov
test
data16
add
andl
mov
jne
mov
inc
or
lock
mov
mov
in
or
mov
call
sbb
push
mov
lock
pop
jne
mov
retw
minpd
str
jne
xor
mov
cld
add
add
sar
mov
mov
lock
es
mov
clc
jne
jge
mov
or
add
push
xor
add
add
mov
or
mov
add
mov
mov
or
fisttps
clc
ja
mov
or
lahf
sti
add
add
fbld
pop
mov
or
mov
hlt
add
mov
or
mov
or
mov
mov
adc
stc
mov
mov
or
mov
or
add
cmp
mov
xor
mov
add
jge
mov
pop
clc
cmp
data16
mov
xor
pop
jge
mov
lock
jge
ltr
add
hsubpd
data16
jge
mov
dec
xor
minpd
data16
jmp
mov
sarw
mov
jb
add
pop
mov
clc
jne
data16
jnp
pop
inc
add
data16
data16
add
pop
icebp
sbb
jne
mov
call
mov
in
data16
repnz
xor
inc
mov
call
add
ret
jge
mov
mov
add
data16
mov
add
mov
add
data16
pop
test
pushf
add
into
fistps
push
mov
mov
mov
push
repnz
lock
jne
mov
cld
mov
xor
mov
mov
push
sub
mov
mov
add
dec
cmp
jne
mov
mov
stc
jge
data16
xor
data16
lock
inc
data16
pop
add
rorb
inc
mov
in
sarl
pop
or
push
mov
mov
or
cmp
je
mov
mov
add
push
mov
mov
pushf
sub
add
xor
dec
str
cmp
int
mov
xor
mov
xor
lret
push
add
push
add
cmp
sti
mov
mov
cld
add
data16
roll
mov
lret
in
add
pop
lret
ret
enter
pop
movl
pushf
call
add
in
add
mov
clc
xor
mov
cmp
je
push
pop
sysenter
leave
dec
popa
jle
popa
mov
int
mov
lret
add
jne
lea
add
ret
inc
xlat
add
add
or
ret
add
jne
lea
add
lret
mov
add
mov
cmp
repz
xorb
inc
inc
add
cmp
pushf
push
je
xor
mov
andl
add
in
push
mov
add
mov
clc
mov
or
ret
or
or
lret
add
mov
adc
iret
mov
add
dec
push
mov
add
rcrb
add
ret
jne
mov
xor
mov
test
clc
fs
mov
pop
sub
add
xor
xor
add
cmp
jne
cmp
clc
pushf
pop
mov
push
xor
mov
psubsb
icebp
lea
testb
sarl
xor
mov
adcl
add
inc
sub
mov
addl
orl
cmp
mov
decl
dec
mov
mov
mov
xor
mov
push
leave
mov
push
test
lahf
in
xor
mov
clc
test
cmp
pushf
dec
mov
in
mov
push
icebp
add
roll
add
roll
cmp
pushf
dec
movl
clc
or
xor
pop
dec
dec
lea
add
dec
inc
sub
orl
cld
adc
scas
or
pop
xadd
jb
add
inc
sub
mov
lock
icebp
add
clc
pop
mov
data16
add
xor
add
lea
add
add
inc
adc
dec
mov
mov
mov
lea
add
inc
in
incl
leave
add
push
roll
sbbl
sarb
jbe
mov
or
push
mov
mov
jne
jmp
mov
push
pop
mov
add
xor
sub
mov
inc
inc
mov
dec
lahf
xorl
orl
leave
jbe
mov
in
inc
in
mov
or
dec
inc
data16
pushf
mov
mov
cld
test
push
inc
mov
lahf
pop
xor
mov
inc
or
sar
dec
lea
in
decl
mov
cld
inc
inc
inc
mov
jmp
mov
mov
push
lahf
xor
add
inc
cmp
pushf
std
xor
inc
fadds
inc
mov
inc
lahf
xorl
cmp
mov
clc
sub
inc
call
pop
inc
lahf
pushl
adc
std
dec
decl
inc
push
call
add
xor
add
add
inc
cld
add
mov
orl
test
clc
inc
inc
mov
mov
inc
or
shlb
jne
xor
pop
add
ret
je
push
mov
mov
mov
in
inc
orl
pop
test
xor
mov
add
add
mov
or
add
xor
inc
inc
add
xor
add
mov
sub
lret
mov
jae
lea
xor
jne
or
or
pushw
jne
cmpxchg8b
mov
add
data16
call
cmovge
xor
add
sub
or
add
inc
cmp
mov
subl
enterw
shlb
pop
or
mov
dec
inc
data16
push
jb
jmp
incl
mov
or
jo
test
jmp
incl
mov
pop
lock
push
dec
mov
dec
ror
rolb
dec
lock
pop
in
cmp
clc
xchg
cmp
jne
xor
jmp
mov
jne
call
mov
add
inc
jne
mov
mov
mov
add
stos
add
mov
les
xchg
iret
add
inc
jle
out
cld
add
xchg
add
push
pop
add
paddq
xchg
add
adc
test
incl
incl
rorb
decl
inc
inc
incl
data16
rclb
mov
lock
jle
mov
mov
jge
mov
adc
enter
dec
or
mov
lods
ja
mov
pop
lea
inc
clc
inc
outsb
lea
push
inc
mov
pop
mov
jae
cmp
adc
pop
inc
sbb
mov
or
cmp
mov
cld
xchg
add
add
lea
adc
or
faddl
push
add
push
inc
add
push
adc
mov
fdivr
cli
dec
add
add
add
xor
cmp
mov
lock
rcl
pop
add
pop
dec
cmp
mov
add
push
dec
in
mov
push
pop
mov
add
add
add
inc
mov
hlt
push
decl
push
add
pop
or
jns
ret
jmp
mov
in
jge
sysexit
cmp
cmp
sbb
pop
add
jae
mov
lcall
mov
mov
fdivs
xor
movl
add
push
ret
mov
jne
mov
faddl
xor
push
or
icebp
incl
rolb
inc
stc
mov
lock
add
dec
add
mov
call
sbb
mov
pop
jge
lea
add
or
leave
fadds
dec
add
xchg
add
mov
mov
or
dec
pop
mov
ljmp
add
inc
or
dec
add
test
push
ret
lea
pushl
mov
sub
add
clc
mov
add
dec
push
xor
xor
in
add
inc
jmp
xor
mov
adc
xor
jne
mov
mov
hlt
pop
add
in
push
in
dec
push
xor
pop
pushf
dec
mov
mov
in
dec
addb
add
mov
test
dec
push
mov
mov
clc
into
dec
lret
lock
test
push
jge
push
enter
dec
cld
jmp
pushf
inc
mov
sub
int
mov
mov
adc
enter
jmp
xor
mov
or
call
ds
or
rorb
push
inc
in
mov
or
lock
test
clc
rolb
cmp
add
mov
xor
xor
sub
jmp
mov
lock
mov
push
icebp
xor
mov
enter
add
cld
scas
add
dec
mov
xor
xor
add
add
test
mov
adc
je
xor
xor
add
add
rorl
enter
icebp
or
lock
enter
lret
or
mov
cld
bswap
pop
mov
in
hlt
pop
jne
xor
xor
jbe
mov
clc
pop
mov
mov
clc
mov
adcl
inc
in
cmp
add
inc
cld
cmp
hlt
inc
test
clc
hlt
inc
test
clc
pushf
push
push
inc
inc
fdivrs
xlat
pushf
mov
mov
xor
mov
xor
add
pavgb
test
dec
inc
mov
cld
xlat
enter
lret
add
leave
jne
mov
enter
lret
scas
out
jmp
mov
cld
add
xor
jmp
xor
add
rorl
dec
mov
cld
lea
mov
mov
xor
enter
stc
add
call
pop
xor
sub
enter
inc
in
xor
clc
cmp
cmp
pushf
call
mov
loopne
inc
test
clc
add
push
mov
push
inc
push
mov
mov
mov
xor
mov
sbb
ljmp
mov
mov
xor
xor
mov
hlt
bswap
roll
xor
mov
xor
call
enter
mov
lock
inc
mov
inc
inc
enter
inc
mov
mov
roll
add
push
into
in
movb
dec
or
xorb
add
add
in
push
inc
mov
adc
push
xchg
popa
iret
dec
lahf
mov
clc
add
cmp
jne
addl
or
or
push
dec
jnp
dec
xlat
mov
call
lsl
cld
sti
lahf
mov
mov
clc
iret
dec
lret
xor
lea
dec
inc
mov
mov
int
sub
lock
mov
in
cmp
xor
jne
mov
in
dec
mov
nop
add
pop
mov
mov
ret
mov
mov
mov
dec
add
jo
push
inc
jne
mov
push
pop
ret
push
inc
xor
add
jnp
jg
ljmp
inc
mov
push
cmp
dec
xor
cmp
jne
orl
jmp
mov
push
add
add
add
cmp
mov
sbb
mov
xor
mov
cmp
cmp
adc
test
cmp
pushf
sbb
add
add
dec
jnp
mov
rolb
iret
or
cmp
xor
or
xor
add
mov
inc
inc
mov
mov
mov
cmp
dec
decl
inc
mov
or
sbb
inc
inc
mov
or
dec
push
dec
inc
rclb
push
inc
decl
rolb
inc
inc
mov
sbb
inc
push
xor
lea
cmc
xor
add
mov
inc
inc
mov
ret
inc
add
adc
test
clc
inc
inc
mov
push
adc
test
mov
sbb
dec
ret
sub
add
xor
lea
lods
jb
add
sar
cmp
pushf
add
add
mov
test
clc
inc
inc
cmp
mov
or
bound
clc
lea
xor
lea
mov
or
dec
imul
incl
inc
add
pavgb
movl
clc
iret
inc
lock
lret
fmull
mov
test
mov
loopne
inc
loopne
inc
loopne
xbegin
adc
jb
mov
inc
inc
push
mov
incl
mov
loopne
rol
test
dec
push
decl
push
mov
add
cmp
add
call
clc
test
cmp
pushf
mov
or
iret
test
mov
in
pop
dec
add
add
dec
mov
in
dec
or
iret
add
testl
test
add
add
mov
or
add
cmp
add
mov
mov
lock
dec
test
dec
add
cmp
or
mov
dec
push
lea
lods
mov
clc
cli
or
iret
inc
mov
or
or
xor
cmp
je
mov
mov
xor
mov
mov
xor
bswap
rorb
add
mov
xor
or
mov
xor
bswap
rorb
add
add
xor
mov
add
dec
dec
xor
mov
clc
rorb
iret
rorl
inc
mov
iret
add
xor
mov
or
dec
shll
cmp
in
add
add
mov
in
mov
or
dec
enter
add
mov
xor
or
mov
mov
xor
mov
cmp
jne
lea
cli
or
cmp
je
mov
ret
or
lock
add
mov
add
cmp
mov
xor
mov
add
roll
cmp
lock
rorl
jb
add
ja
sbb
xchg
enter
inc
decl
loopne
jb
add
dec
adc
add
inc
rcll
mov
xor
jb
add
jne
decl
add
repnz
inc
mov
mov
shll
mov
movsb
add
push
adc
inc
pushl
mov
add
mov
test
inc
mov
lret
mov
sbb
inc
mov
xor
enter
inc
add
cld
test
lahf
jne
mov
fsubrs
decl
hlt
xor
sbb
call
pop
or
dec
adc
push
add
cmp
je
mov
or
pushf
ret
mov
lea
clc
or
push
inc
or
pop
call
test
jne
mov
movsb
xlat
inc
push
push
or
push
decl
dec
adc
roll
sbb
dec
je
push
call
test
inc
iret
add
clc
jmp
mov
test
or
add
inc
mov
mov
and
push
mov
rolb
iret
orl
push
clc
jmp
add
mov
jmp
addl
pop
inc
pop
sbb
inc
add
clc
and
mov
and
mov
and
mov
and
xor
pop
mov
xor
mov
mov
mov
push
add
mov
cmp
mov
dec
add
push
adc
push
cmp
and
mov
and
xor
jb
add
inc
and
lea
and
push
jmp
cli
and
clc
and
call
jmp
dec
ds
cmp
bswap
mov
add
and
mov
mov
or
inc
jmp
addl
push
inc
sbb
dec
test
movb
aas
add
aas
add
jne
incl
clc
add
inc
jne
call
fadds
mov
add
add
add
incl
push
and
roll
inc
adcl
inc
adc
inc
lcall
je
sbb
lea
je
sub
je
and
mov
clc
and
and
add
and
add
cmp
or
pop
push
mov
sub
xor
mov
mov
mov
orl
mov
movl
mov
and
movl
mov
xorl
push
push
andl
push
mov
xor
addl
mov
orl
add
mov
movzwl
and
movl
dec
movl
movl
add
jmp
xlat
mov
and
mov
sbb
fidivrl
jle
cmp
fxch
ja
or
add
bswap
adc
sbb
mov
or
rol
or
dec
add
push
in
outsl
add
pushf
jo
dec
mov
cmp
xorb
jbe
fisttpl
jecxz
and
xchg
dec
incl
mov
sub
jae
lret
lcall
mov
loop
cmp
fs
sub
or
sbb
and
add
fisttpll
popl
shll
movb
pop
rcll
jns
mov
daa
add
fstpt
dec
loopne
xchg
hlt
or
lds
arpl
sbb
test
pop
xor
ret
jle
push
stos
cmp
inc
popf
mov
mov
add
push
push
fdivr
insb
fbld
out
jmp
jle
mov
jbe
aaa
add
push
mov
and
or
outsb
xor
stos
mov
stc
mov
hlt
ret
test
sub
lock
leave
enter
cmp
xlat
data16
adcb
pop
dec
sbb
adc
xchg
inc
hlt
sbb
popl
outsb
aaa
push
stc
ret
out
fs
les
adc
in
outsl
push
jl
pop
push
movl
mov
sbbl
xor
subl
jmp
fstl
cltd
loope
jns
and
scas
pop
jl
fidivrl
jle
jg
jle
dec
mov
jmp
loopne
outsb
int3
mov
ret
movsl
cli
pop
adc
xor
pop
and
jp
pop
xchg
scas
xor
aad
ss
rolb
inc
mov
mov
add
xor
push
pop
or
icebp
out
lahf
mulb
xchg
cltd
pop
cmc
push
sahf
sub
jmp
shlb
sub
lds
test
push
inc
sti
rol
pop
bound
or
pushf
push
cmp
pop
jnp
dec
push
sub
loope
xor
shl
faddl
mov
inc
mov
jp
fistl
sarb
fidivl
inc
mov
outsb
mov
mov
pop
jae
mov
mull
outsl
mov
cmp
cwtl
insl
cmp
add
mov
sub
int3
sub
imul
mov
imul
addl
pop
sub
xor
int
push
adc
in
jle
adc
jp
xchg
sahf
lret
out
gs
adc
push
cwtl
repnz
cltd
xchg
mov
es
or
jmp
nop
and
mov
aaa
or
jecxz
pop
aad
into
out
sarb
adc
mov
testb
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
subl
movl
movb
sub
mov
xor
andl
add
mov
mov
xor
adcl
add
andl
push
dec
mov
xor
andl
add
xorl
push
andl
mov
jmp
push
mov
xchg
push
mov
or
fisubs
jg
jle
jl
ja
xchg
cmp
push
sbb
push
xchg
sbb
int3
or
and
inc
pusha
fs
mov
testb
push
pop
fcomps
inc
adc
mov
push
pop
xor
pop
xchg
repz
mov
add
nop
data16
dec
xchg
cmp
and
jno
xchg
pop
xchg
loopne
mov
fsubrs
orl
pop
xor
and
iret
mov
cmp
push
add
xor
fstpl
cli
repnz
push
sub
xchg
dec
sbb
ficoms
fadds
mov
pop
jb
add
or
add
pushf
popa
push
or
jmp
cmc
cmpsb
or
cmp
push
aas
in
fstps
cmc
inc
fwait
pop
std
daa
mov
inc
sbb
sbb
lahf
int3
cli
push
xor
pop
aas
test
pushl
aaa
lret
nop
movsb
lds
jne
int
dec
push
lcall
mov
in
sbb
dec
icebp
std
lods
cs
mov
and
loop
es
mov
sbb
xchg
inc
frstor
rcll
push
push
xor
daa
lock
divb
sub
arpl
lret
dec
xor
popa
popf
rclb
sbb
add
xorl
push
lea
push
movl
pushl
subl
pushl
subl
call
incl
test
movl
je
subl
lea
negl
push
add
mov
andl
xor
add
andl
push
mov
add
push
andl
mov
subl
mov
pushl
addl
call
movl
mov
movl
cmpl
notl
lea
mov
je
lea
jmp
ja
je
je
test
push
outsl
jne
adc
addb
jle
fidivrl
jle
shll
or
dec
or
bound
mov
bound
xchg
jae
insl
mov
lock
mov
jne
sqrtps
dec
jnp
mov
xor
daa
dec
imul
cmc
xchg
sub
je
jb
mov
xchg
cmc
dec
in
fcmovu
stos
std
cmc
adc
push
add
mov
es
stos
fildl
int3
or
push
insb
jno
shlb
rorb
loopne
fisubrl
or
mov
jp
and
xchg
mov
aam
jbe
out
or
jae,pn
or
jo
mov
inc
movsl
mov
pop
fidivs
lds
mov
hlt
pusha
xor
pop
es
mov
xor
test
dec
hlt
int
jmp
sbb
int3
inc
addr16
test
cmc
sbbl
lahf
adcb
xor
loope
sbb
cmpsb
jmp
mov
lea
xor
mov
loopne
test
inc
xchg
fisubrs
jle
xor
push
add
not
push
les
inc
xchg
into
pop
inc
addr16
add
loope
ja
cmc
popa
and
clc
xor
mov
fisubl
mov
mov
jo
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
call
jmp
inc
mov
adcl
xor
add
andl
jmp
adc
imull
mov
and
out
jae
jle
jg
jle
jle
push
lock
mov
lret
aam
mov
aam
aaa
push
daa
test
pusha
add
test
insl
adc
xchg
pushf
xchg
stos
dec
mov
push
xor
xchg
and
lods
shll
std
push
jae
push
adc
pop
outsl
pop
outsb
bound
adcl
cmc
std
ljmp
iret
mov
dec
jle
ds
imul
lods
out
xchg
or
hlt
inc
stos
gs
pushf
jg
jge
xor
xchg
push
xchg
jno
dec
add
cmp
sub
clc
dec
gs
pop
xchg
adc
mov
mov
iret
data16
sbb
pop
pop
cmp
das
inc
jbe
jmp
mov
scas
sbb
adc
enter
mov
dec
mov
lods
and
imul
dec
pop
sbb
inc
jnp
pop
repnz
scas
mulb
jge
pushf
pop
repz
cld
int
xchg
add
test
jecxz
int
dec
push
mov
test
test
jmp
bound
push
in
add
out
add
xor
out
pop
adc
inc
jne
mov
lock
ja
add
popf
pop
ja
sahf
int3
icebp
cmp
inc
pop
pop
xchg
iret
iret
push
and
in
movl
cmpl
je
cmpl
jne
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
xor
add
jmp
sbb
clc
and
fldcw
arpl
lret
jle
fidivrl
jle
test
sbb
push
fidivs
mov
pop
ret
das
xchg
mov
sbb
mov
outsb
ds
repnz
mov
aad
jb
stos
or
into
ss
mov
int
jns
loope
ret
xchg
mov
in
jne
jmp
lahf
dec
insl
add
nop
mov
std
adc
push
mov
data16
icebp
insb
sti
stos
mov
mov
xchg
push
cli
ret
jge
mov
jp
loope
mov
clc
addr16
and
data16
fsubrl
mov
jmp
movb
dec
push
adc
aad
cmp
ret
sti
fwait
aad
fmull
das
mulb
icebp
adc
dec
arpl
mov
out
add
push
dec
dec
in
inc
stc
pop
lods
insl
pop
jno
jg
and
and
dec
jnp
je
dec
lods
loop
aad
jmp
ret
dec
push
dec
push
into
test
mov
mov
cmpsl
mov
mov
pop
mov
gs
xor
push
leave
ror
xchg
push
cmp
mov
mov
push
sub
xchg
fimull
mov
jecxz
clc
stc
ret
decb
add
shll
pushl
lea
push
pushl
pushl
jmp
loop
cli
cs
cli
cli
ret
cmpsb
push
pop
and
jle
jg
jle
lods
popf
jbe
loopne
pop
and
sar
jge
pop
cmpsb
inc
pusha
arpl
add
cmpsl
daa
shl
and
arpl
jle
icebp
stos
packssdw
rcl
mov
jge
jecxz
cmp
aaa
test
pushf
push
sbb
lea
xor
arpl
jno
aas
inc
out
popf
aas
popf
xor
or
cli
in
jb
cmc
in
push
pop
jno
jle
mov
jnp
pop
iret
insb
push
xchg
pop
mov
out
sub
and
insb
repz
jecxz
dec
xchg
jb
push
shrb
jp
roll
popa
adc
sahf
dec
mov
push
movsl
xor
mov
ja
mov
repnz
test
aas
add
push
incb
cmp
mov
fsubl
sbb
and
test
out
stc
xchg
mov
scas
test
pusha
stos
clc
cmp
ds
sub
insl
mov
into
mov
pop
repz
add
mov
push
sti
outsb
xor
cmp
jecxz
dec
jg
in
and
mov
add
mov
cmp
inc
dec
or
stc
mov
leave
in
dec
scas
cltd
xchg
add
mov
fwait
adc
mov
lcall
dec
inc
add
test
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
xor
mov
sub
sub
mov
add
mov
jmp
lahf
icebp
shll
icebp
addl
lock
ja
jle
jg
jle
mov
pop
mov
lcall
fistps
sub
mov
addr16
sahf
shl
mov
cmp
pop
insl
cmp
bound
es
push
stc
cwtl
dec
mov
loop
and
push
jb
cmp
xor
in
in
cltd
and
imul
fidivs
adc
inc
mov
adc
gs
jg
lds
mov
add
in
sbb
fnstcw
cs
xor
or
jl
iret
fldt
jne
test
out
out
xor
jg
dec
pop
aaa
aad
ljmp
lods
dec
xor
mov
jno
sbb
pop
call
mov
fwait
mov
inc
mov
arpl
pop
push
out
and
jge
xor
mov
pop
adc
or
mov
fdivrl
mov
movb
sub
fwait
out
arpl
mov
movsb
ds
scas
inc
mov
xchg
xchg
pop
in
dec
pop
inc
cs
out
daa
sbb
fsubs
or
jb
out
add
mov
aas
xlat
sbb
push
jae
fcoms
iret
sub
dec
push
mov
stc
lds
dec
add
clc
xor
sub
mov
lea
incb
inc
push
pop
dec
xchg
jmp
mov
in
stc
andb
cmp
add
cmp
jle
fidivrl
jle
cmpsb
jae
loopne
mov
add
test
ret
sub
test
cmc
inc
cmp
sbb
lgs
fcmovb
cmc
ret
add
leave
push
mov
mov
movsl
les
adc
dec
ja
out
jae
or
xor
pop
sub
mov
lcall
mov
lret
push
les
stos
rcrb
leave
out
xor
sbb
xor
int
jbe
and
cmp
jge
mov
lea
daa
leave
xor
nop
cmc
xchg
cmp
mov
fisubs
in
nop
xor
xor
bound
push
cmp
call
call
mov
push
data16
sub
mov
int3
pop
fsubrl
cmp
jecxz
daa
adc
xchg
mov
and
pop
inc
lods
xchg
insb
shl
mov
xor
inc
dec
imul
mov
inc
bound
cs
adc
mov
sub
adc
sti
outsb
movsl
aam
popf
enter
and
push
negb
jp
xchg
test
adc
inc
sbb
jbe
xor
jp
push
insl
lret
pushl
mov
mov
pushl
lea
pushl
lea
pushl
lea
pushl
lea
pushl
xchg
inc
inc
sub
push
pop
call
mov
jmp
mov
fidivl
or
dec
iret
scas
out
or
fidivrl
jle
movsl
dec
int
pop
enter
xor
jmp
mov
ret
jo
lods
inc
mov
and
and
push
loope
add
jns
push
stos
and
fnstsw
jle
cmp
out
bound
ret
dec
push
inc
xchg
mov
negb
in
push
mov
mov
xchg
push
leave
adc
push
dec
adc
inc
adcl
test
stos
inc
cmpsl
cmp
push
or
push
pop
mov
in
or
inc
aad
mov
cs
jne
inc
pop
xchg
xor
jae
ljmp
mov
cmpsl
jno
fists
mov
repz
xor
orb
mov
cltd
iret
jg
scas
push
repnz
jnp
jp
aaa
ja
sub
lret
inc
or
lock
dec
stos
cmp
inc
cmpsb
in
imul
andl
lahf
xchg
xor
out
outsl
dec
push
xchg
das
mov
pop
jo
cmp
xor
in
mov
cmp
dec
movsb
cmpsb
push
stos
cltd
jnp
sub
xchg
xor
or
popa
out
pop
sbbl
repz
clc
jle
in
cmpsb
xor
add
or
pop
leave
ret
push
mov
sub
push
sub
mov
or
mov
movl
cmpl
je
cmpl
jne
pushl
pushl
push
push
push
push
pushl
call
cmpl
jne
xor
or
dec
mov
mov
dec
mov
jmp
mov
orl
movl
xor
add
and
movl
mov
mov
mov
xor
adc
mov
movzwl
sbb
add
addl
mov
jmp
mov
cmp
pop
daa
sbb
or
and
jle
mov
mov
shll
pop
add
inc
lock
sub
orl
fcompl
xor
pop
insb
mov
push
das
loope
std
mov
popf
decb
pop
mov
sbb
inc
pop
outsb
jle
popf
aad
int
cmp
pop
js
addr16
adc
cmp
inc
test
push
mov
sbbb
jge
mov
ljmp
out
dec
imul
popf
add
repnz
fs
xchg
push
dec
push
adc
mov
inc
movsl
sbb
leave
out
pop
cld
testb
imul
add
xor
xlat
in
and
or
sub
insb
add
sub
push
ret
mov
add
mov
mov
mov
mov
in
out
jb
gs
sahf
mov
repnz
mov
mov
mov
scas
cmpsl
xor
sbb
cmp
xor
jns,pt
inc
insl
lcall
loopne
stc
xchg
mov
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
pushl
call
jmp
xor
xor
add
jmp
xchg
lcall
pop
jb
mov
fidivl
and
jle
push
and
push
in
inc
pop
or
pop
popa
shlb
add
movsl
mov
cld
mov
inc
mov
jp
push
cld
test
inc
cmpsb
or
out
cmpsl
test
aaa
icebp
add
or
fs
daa
cwtl
int3
scas
mov
dec
fsub
pop
mov
jp
lock
xlat
mov
lods
push
das
cmc
pop
sahf
dec
add
andnps
jbe
xchg
ljmp
mov
lock
insb
out
aad
sub
xchg
xchg
push
gs
xchg
and
stc
xchg
test
jl
inc
lahf
lock
pop
sub
fcomps
push
sub
and
add
pop
out
mov
fidivrl
and
push
mov
mov
dec
lds
xchg
iret
mov
cmp
int
push
inc
bound
jne
dec
and
inc
jno
jne
cli
aad
xor
adc
lahf
push
cwtl
xorb
cmpsl
aas
xchg
mov
xchg
mov
add
push
xor
repz
fsts
mov
adc
xor
dec
cs
add
hlt
push
push
sti
mov
aaa
stc
mov
insb
clc
lcall
add
add
mov
or
pop
in
mov
jl
jle
and
jle
push
push
in
stc
mov
repz
clc
fistl
mov
xorl
push
ficomps
jmp
es
push
adc
lds
push
jge
or
out
xor
es
negb
ss
rcl
stos
pop
ds
sbb
mov
xchg
or
xor
cmpsl
dec
sbb
jbe
ja
cwtl
stos
addr16
orl
cmc
rcrl
xor
pop
loopne
jo
mov
out
pop
gs
push
sub
dec
jge
add
lods
sbb
cmpb
cltd
xor
push
mov
push
sub
dec
mov
shrb
mov
jle
scas
or
jmp
mov
pop
les
scas
cmp
pop
dec
lea
jp
rcrl
mov
nop
stc
shrl
cmpsb
data16
and
inc
inc
jge
or
cmpsl
pop
les
ss
mov
fdivr
adc
xor
inc
ja
adc
lods
xchg
dec
adc
jmp
lea
dec
mov
stc
fcoms
sbb
inc
cld
fadds
xor
adc
mov
movl
movl
adc
movl
or
movl
movl
cmpl
je
cmpl
jne
push
push
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
xor
movl
andl
movl
orl
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
sub
xor
mov
add
cmp
movl
je
movl
jmp
lock
jns
mov
pop
push
shlb
jle
and
jle
je
in
cmp
mov
mov
push
xor
adc
jno
int3
xor
or
xor
dec
dec
mov
lods
xchg
dec
and
push
inc
lret
sbb
out
es
xchg
jae
and
test
sub
sahf
fwait
xorl
adc
les
push
sub
pusha
cmp
nop
dec
xor
aas
mov
pop
push
push
rorb
mov
jns
sar
push
test
xchg
cmp
cli
loope
xchg
mov
ret
xchg
aad
mov
sbb
lret
leave
pop
mov
test
jl
cmp
mov
push
popa
push
lods
aad
lret
mov
cmpsl
fnstenv
and
cmp
mov
nop
xchg
xchg
fwait
adc
jge
cltd
push
xor
and
enter
je
push
frstor
leave
dec
jg
mov
or
and
outsb
mov
jno
fbstp
add
dec
test
and
fwait
push
cmpsl
cmpsb
xor
lods
lcall
lds
add
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
push
call
jmp
adc
mov
movl
cmpl
je
cmpl
jne
push
pushl
push
pushl
call
mov
dec
mov
jmp
mov
orl
sub
adc
mov
adcl
xor
sbbl
add
movl
cmp
movl
jb
mov
sbb
mov
mov
or
xor
xor
movl
add
dec
add
dec
imul
sbbl
mov
movl
cmpl
je
cmpl
jne
pushl
pushl
call
mov
dec
mov
jmp
sbb
mov
incl
sub
movl
cmp
movl
ja
mov
movl
xor
addl
add
movl
jmp
mov
sbbl
mov
and
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
call
jmp
jmp
add
mov
inc
popf
imul
ljmp
jle
sarb
lret
sub
lock
xchg
aam
push
cwtl
add
cmp
xor
cmp
rolb
stos
cmp
adc
cli
repnz
ret
lods
cld
cli
std
roll
jae
add
sarl
pop
arpl
mov
sub
inc
push
adc
movsl
ret
out
push
dec
push
adc
iret
pop
loope
inc
push
sub
cli
sbb
fcomi
inc
add
cmpsb
cmpsb
or
mov
shl
adc
adc
movsb
and
call
daa
or
push
roll
test
pop
mov
dec
rolb
lret
pop
mov
cld
fwait
movsb
arpl
sar
push
mov
xchg
aaa
je
pop
dec
add
stos
or
out
pop
adcb
jnp
rorl
xor
mov
xor
push
in
call
and
leave
dec
mov
cli
or
or
inc
popa
inc
push
xchg
ret
adc
lcall
fcompl
fcmovne
jmp
ficoml
js
outsb
out
xor
add
add
imul
mov
jmp
jbe
xchg
call
adc
int3
scas
lahf
or
jle
xchg
flds
andl
cmpsl
mov
ja
dec
push
mov
or
or
push
insb
pop
test
xor
testl
pop
es
in
adc
pop
and
and
mov
pop
out
dec
sti
decb
loopne
push
mov
lods
sahf
loopne
iret
aad
test
mov
mov
and
das
cli
gs
inc
dec
jle
mov
inc
xchg
popf
mov
repnz
shll
pop
pop
out
outsb
into
call
pop
inc
xchg
inc
pop
push
rcrl
dec
cmc
and
pop
call
clc
xor
adc
mov
popa
ret
sub
or
jb
push
mov
fnstenv
mov
cmpb
adcb
mov
popa
xchg
pop
xor
inc
mov
jg
outsl
out
pop
xor
or
arpl
push
dec
pop
test
into
sub
xor
int
cwtl
fsubrl
push
cmpsb
pusha
jp
mov
ljmp
xlat
inc
daa
mov
jne
aas
aas
stos
mov
sbb
lock
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
mov
jbe
mov
mov
xor
xor
add
add
imul
mov
mov
mov
mov
jmp
lock
xchg
mov
and
es
adc
add
and
jle
lret
in
jno
dec
adc
in
in
cmp
lret
jne
add
jbe
mov
push
push
add
in
push
loopne
mov
cmp
push
test
or
cld
stc
sbb
or
jno
push
out
and
dec
cmpsl
leave
repz
inc
mov
pop
xor
cmp
mov
or
loop
aam
sbb
aaa
sbb
mov
aaa
and
jle
xor
mov
movb
jnp
lret
mov
fildll
sbb
cmpsb
mov
or
fs
rcll
sbb
shll
pop
sub
dec
icebp
addr16
sub
mov
sub
addr16
jno
gs
inc
mov
rorb
mov
fdivrs
push
cmp
mov
ss
lcall
cmpsl
shll
shrl
sub
rcrb
repnz
pusha
xchg
inc
mov
pop
sub
cld
into
or
or
add
aam
popf
subl
push
push
mov
stos
add
into
jmp
fnstsw
jmp
js
add
movl
mov
movl
movl
mov
jmp
daa
mov
in
dec
push
push
cmp
test
jl
add
and
jle
inc
ds
push
xor
lds
cmpl
or
test
fcomps
dec
fwait
push
or
rcll
sbb
movsb
cs
add
pop
jle
daa
mov
mov
mov
sbb
mov
jecxz
dec
add
lock
mov
push
and
cs
ret
jle
sahf
dec
clc
in
cmpsb
pop
and
xchg
mov
imul
sti
or
mov
pop
arpl
loopne
sub
sbb
fwait
push
push
fwait
push
xor
mov
jns
aaa
lea
out
sahf
les
shr
xor
jb
in
out
or
pop
mov
rolb
lock
mov
mov
dec
adc
xchg
sbb
fwait
std
and
das
cs
adc
imul
loopne
pop
sbb
adc
mov
ja
fistl
ficoms
aaa
push
out
jne
loop
pop
sarb
repnz
fsub
xchg
lea
lds
xchg
adc
add
add
sbb
lret
xor
jmp
int
mov
stc
repnz
push
ret
jle
and
jle
loop
adc
or
gs
decl
mov
sub
lds
lea
lret
sub
roll
sub
and
mov
push
cs
popf
mov
movl
loop
pop
jecxz
mov
xor
add
pop
ss
or
loope
mov
addl
adc
fmuls
dec
lods
out
xlat
inc
rcrb
inc
dec
daa
fst
cmp
mov
out
jne
inc
push
jge
int3
movsb
pusha
shll
shll
and
insl
iret
aaa
or
fdiv
mov
test
jle
push
hlt
mov
rolb
lock
push
sub
adc
sbb
popf
dec
ret
jecxz
sub
repnz
out
and
mov
call
pop
test
mov
mov
pushf
fdivrl
cmp
xlat
popa
imul
mov
pop
enter
inc
push
ja
shlb
clc
pop
dec
adc
inc
dec
addr16
fimuls
and
mov
rcr
fidivrs
shr
pop
add
add
add
mov
mov
mov
mov
xor
add
jmp
mov
scas
pop
popa
cmp
xor
jecxz
jle
and
jle
jg
or
int3
cmp
fs
adc
sub
movsl
aas
xor
bound
loop
imul
push
shlb
es
push
mov
cmp
xchg
movsb
and
cltd
mov
std
mov
shl
aam
and
and
out
ds
xchg
lcall
adc
int3
push
mov
loope
inc
inc
mov
fmul
push
and
dec
stc
out
jmp
jae
lock
sub
subl
dec
xor
cmp
xchg
enter
jo
aam
stos
mov
or
mov
add
std
fmull
aam
pop
ret
jno
jge
push
xchg
pop
push
test
jne
insl
and
pop
enter
mov
dec
push
enter
mov
outsb
inc
cld
das
cmp
cmp
ja
fwait
inc
ss
lahf
jecxz
cmp
xchg
cli
push
sbb
aad
xor
pop
jb
repz
adc
sub
popf
cs
add
fucomp
cmc
push
jae
inc
jbe
mov
shr
jo
xor
movsb
xor
pop
or
out
aam
popa
mov
mov
mov
mov
mov
xor
add
mov
jmp
stos
out
pop
sbb
test
leave
rorb
xchg
pop
jle
and
jle
add
jns
dec
mov
cmpsb
pushf
mov
cmp
jg
ljmp
in
push
ss
scas
mov
loopne
push
shlb
and
mov
mov
push
es
sahf
sbb
jl
push
add
xchg
aam
and
rep
mov
in
xor
push
jno
sbb
int
cmpl
cmpsl
dec
and
jbe
out
push
mov
sbb
mov
cltd
lret
mov
in
sub
push
mov
aaa
les
mov
or
xchg
jbe
popf
push
in
andl
scas
inc
pop
push
aam
rclb
jp
inc
pop
jnp
pop
enter
neg
clc
cwtl
mov
fwait
and
orb
xor
les
imul
sti
mov
sbb
add
mov
inc
push
push
cmp
ficoml
dec
cmp
negl
adc
adc
mov
mov
mov
xorl
es
into
mov
dec
imul
es
sbb
stos
popf
in
sbb
push
cmc
mov
and
fs
jb
add
dec
add
add
mov
dec
js
movsl
mov
lods
gs
and
jle
adc
jg
ds
nop
add
bound
and
mov
std
or
cld
repz
addr16
int
mull
mov
movsb
rcr
push
insb
mov
mov
int
les
in
jno
add
and
pop
je
je
sbbb
js
push
adc
add
rcr
add
gs
pop
sub
or
out
lret
fs
xchg
imul
fxch
push
scas
sub
push
sbb
sub
sti
xchg
fcmovbe
xor
jb
cli
mov
cwtl
lds
imul
imul
scas
add
js
or
add
scas
xchg
inc
or
pop
lock
sbb
test
aam
inc
rcll
mov
insb
inc
fdivr
lock
mov
inc
push
adc
insb
movsb
or
imul
mov
sbb
test
scas
or
sub
cltd
inc
loope
push
push
inc
popa
sbb
cmc
clc
dec
decb
call
in
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
xor
add
imul
mov
xor
sub
mov
mov
xor
add
imul
mov
xor
sub
lea
cmp
jbe
mov
mov
xor
add
imul
mov
xor
jmp
hlt
jae
pop
mov
pushf
sbb
push
mov
add
jle
and
jle
leave
inc
or
adc
les
xchg
sub
push
and
xor
and
jge
sub
pop
dec
enter
push
into
in
push
out
lahf
in
out
sub
dec
stos
roll
and
shll
sbb
cmp
fisubl
es
loop
mov
aam
or
and
js
mov
stos
pop
in
xor
xor
and
out
out
ret
popf
fsubrs
adc
cmp
out
push
mov
lods
adc
enter
pop
scas
loopne
xor
pusha
in
inc
les
jle
mov
cmc
and
xlat
jne
cmp
fidivs
or
cmp
xlat
mov
mov
jecxz
test
test
call
sub
rcrl
or
jp
add
idiv
leave
mov
inc
adc
mov
outsl
push
loopne
adc
stc
int3
inc
loopne
les
mov
sbb
inc
push
jno
adc
jmp
loopne
test
add
lods
lcall
test
aam
lcall
clc
lea
mov
mov
xor
mov
sub
add
jmp
sub
jmp
sub
gs
aaa
sbb
and
jle
jmp
mov
push
mov
mov
arpl
mov
lret
outsl
xchg
pop
nop
jnp
outsb
hlt
xchg
add
mov
add
insb
bound
out
push
lods
pop
test
cwtl
lock
adc
jb
jl
sbb
cwtl
mov
rolb
mov
lods
mov
pushf
pusha
or
test
adc
cmp
fidivs
push
out
insl
jp
xor
mov
sub
js
gs
jecxz
xchg
add
dec
mov
push
adc
icebp
in
scas
push
jb
xor
fcoml
push
mov
icebp
movsb
aam
ret
adc
mov
call
addr16
int3
mov
pop
xor
orl
or
insl
push
gs
jp
js
push
mov
outsl
negb
out
mov
cltd
int3
pusha
xor
das
pop
sti
mov
jbe
imul
pop
xor
add
cli
push
leave
mov
lods
cmp
pushf
les
and
pusha
inc
jo
sbb
clc
xor
add
imul
cmp
jbe
pop
jmp
push
cld
dec
or
jp
adc
in
cmpsl
clc
sbb
and
jle
or
adc
ja
pop
pusha
sbb
nop
inc
lods
push
mov
pop
jno
sbb
addb
push
clc
mov
add
xchg
sub
mov
adc
jb
mov
outsl
loopne
in
fbstp
adc
aam
mov
js
loopne
jmp
enter
adc
pop
push
xor
cmp
mov
xchg
pop
inc
pop
pop
mov
mov
and
cmp
mov
scas
pushf
or
fidivl
add
xchg
mov
jb
inc
sub
cmp
xchg
inc
and
mov
push
out
in
shlb
inc
xchg
dec
mov
add
jle
lock
out
cmpsb
iret
dec
jle
mov
pop
clc
sbb
jl
leave
cmp
xlat
mov
das
and
pop
lret
fbstp
sbbb
imul
fsubs
mov
mov
sub
adc
or
cmp
mov
pop
xor
push
jbe
mov
idivl
inc
push
test
mov
adc
dec
lret
sbb
sub
ret
push
mov
jmp
jb
test
adc
in
or
jmp
add
test
jg
pusha
scas
pop
add
and
sbb
push
mov
dec
pop
enter
test
cmp
test
push
in
push
mov
cmp
stos
cmc
repnz
lahf
repz
xor
fnstsw
push
rorb
dec
xlat
jo
jmp
sub
popf
push
sub
jecxz
sub
fsubl
fcoml
hlt
out
hlt
jl
cmp
jg
divb
jmp
sub
mov
push
cltd
jae
xchg
out
das
pop
mov
sub
jg
dec
mov
or
sbb
jae
sub
mull
push
mov
mov
cmpsb
jge
out
mov
push
ret
in
mov
push
mov
push
dec
inc
ret
ja
lock
inc
mov
dec
rcl
cmp
in
and
aam
jl
iret
dec
mov
out
adc
lret
sbb
and
les
out
jo
fsubl
std
dec
pop
jo
inc
std
movsl
out
imul
sub
push
sbb
mov
and
sbb
icebp
cmp
into
and
jno
bound
ficoms
add
fdivs
inc
mov
lods
mov
movsb
push
or
mov
xchg
sub
xchg
lahf
outsb
nop
cmp
and
add
add
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
pushl
push
call
jmp
xorl
mov
sub
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
call
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
xor
add
inc
mov
jmp
movl
mov
push
adc
mov
xor
mov
push
mov
add
cmp
jmp
iret
in
push
adc
jns
int
les
xchg
inc
ja
pop
jle
jmp
add
fsubl
inc
insb
add
lock
aaa
mov
andl
mov
gs
sbb
scas
in
mov
inc
sub
clc
jno
push
add
cmpsl
dec
adc
cmpsb
xor
jo
or
jne
loope
andl
xor
pop
stos
xchg
int
insb
add
mov
add
push
es
mov
xchg
andb
xorb
xchg
add
sbb
pop
inc
popf
xchg
ds
out
add
pop
lahf
inc
or
pop
popf
sub
cmp
lods
outsl
sbb
fdivl
mov
xchg
loopne
out
jno
xor
mov
dec
push
rclb
inc
jb
inc
jmp
and
xor
mov
dec
rcll
or
cmp
lock
mov
int
push
in
bound
mov
lods
in
xchg
mov
xchg
pop
iret
subb
lret
or
inc
fcmovu
or
in
mov
dec
int3
jae
mov
or
pop
je
and
inc
fcmovu
stc
mov
sbb
pop
and
or
sbb
es
je
pushf
dec
mov
and
dec
popf
sub
ja
jmp
hlt
icebp
or
test
xchg
add
in
pop
jg
cmpsl
insl
in
imul
sbb
jle
jg
jle
cmpsl
sbb
cmpsl
jo
inc
xor
mov
loopne
iret
gs
int3
ja
push
sbb
dec
lods
push
inc
ja
test
aas
dec
push
call
lea
push
fisttpll
pusha
mov
in
xchg
mov
pop
mov
addr16
mov
cmp
pushf
pusha
fs
cmp
jl
aam
cli
pop
pop
push
mov
adc
ret
xor
repz
jne
in
cmp
fdivl
mov
mov
and
mov
mov
xlat
pop
ficompl
pop
outsl
andl
adc
mov
adc
mov
stos
popa
enter
mov
push
imul
xchg
mov
or
aam
jg
jnp
popf
daa
push
xchg
cmp
sub
int3
push
dec
fidivl
sub
arpl
xchg
pop
sub
faddl
shlb
pusha
sub
jmp
and
pop
sbb
daa
cwtl
sub
inc
lret
add
cmp
xchg
mov
int
flds
sahf
ljmp
push
dec
out
pop
insb
mov
mov
mov
jns
mov
xchg
inc
cmp
pop
jae
pop
add
fnstcw
push
pop
lea
sti
test
decb
aad
jne
aam
out
pop
pop
cltd
ds
mov
pop
stos
mov
mov
xor
mov
sub
jmp
les
add
gs
dec
hlt
sbbb
mov
jle
jg
jle
test
jb
lahf
rorl
inc
lea
cmpsl
adc
xlat
les
insb
sub
mov
mov
jle
sub
dec
loop
lea
into
adcl
fwait
inc
mov
out
ret
mov
icebp
in
sub
mov
xchg
outsl
add
xchg
enter
pop
cmp
mov
pop
push
dec
xchg
adc
adc
mov
jmp
fwait
jmp
jecxz
stc
and
rclb
js
adc
and
aas
incl
mov
jge
pop
xor
sbb
dec
fs
mov
iret
mov
jl
or
pusha
mov
push
inc
inc
sub
xchg
dec
les
clc
mov
fimull
cmp
xorb
jl
xchg
loop
cmp
shrl
scas
xchg
loop
jle
cmp
cltd
dec
divb
cmp
pop
lret
or
out
mov
out
les
out
push
mov
nop
ja,pt
push
jmp
mov
sub
in
cli
dec
enter
testb
mov
sbb
pop
push
push
adc
xchg
xchg
js
es
mov
loope
dec
cmpsl
pop
sub
mov
mov
mov
or
mov
ja
sahf
mov
imul
push
in
ds
stc
push
sti
icebp
rorl
sbb
or
mov
jge
xor
add
cmp
ja
push
jmp
mov
mov
mov
xor
add
mov
imul
mov
xor
add
mov
mov
mov
xor
lea
mov
xor
mov
sub
add
cmp
jbe
pop
mov
pop
pop
leave
ret
push
mov
mov
movl
cmpl
je
cmpl
jne
pushl
call
mov
dec
mov
jmp
mov
sub
mov
andl
push
andl
pushl
pop
inc
mov
cmpl
jne
push
push
push
call
cmpl
jb
xor
mov
xor
jmp
xchg
bound
pusha
ljmp
add
adc
fdivrl
jle
adc
xchg
xor
xchg
and
mov
test
adc
jnp
push
mov
outsl
lea
jg
lahf
mov
pop
les
repz
pop
xchg
xchg
fcompl
pop
jb
leave
jne
push
sbb
and
add
lret
or
test
mov
jl
jg
mov
lds
shlb
cmpsl
adc
mov
jb
in
call
push
pop
aaa
jb
loopne
dec
jmp
sub
jae
adc
sub
fcomps
fsts
xchg
or
ss
out
mov
out
insb
pop
pop
sub
imul
aam
cs
sahf
in
mov
jecxz
sbb
test
sti
sub
jno
incl
test
pop
cs
add
xor
and
insb
mov
test
sbb
aad
enter
cmp
movsb
outsl
pop
popa
inc
loop
pop
ds
or
loop
and
sub
xchg
int
cltd
int3
out
ss
pop
add
and
xor
shlb
mov
lahf
push
mov
gs
add
inc
and
jno
mov
pop
shr
mov
pop
push
or
mov
out
dec
gs
push
and
ret
push
sub
loop
inc
add
inc
add
je
mov
mov
sub
xor
cmp
jne
mov
add
jmp
mov
jmp
icebp
mov
mov
cmp
mov
jle
fdivrl
jle
shl
fs
mov
sbb
mov
push
sbb
jge
in
call
int3
fisubrs
daa
out
stos
sub
xchg
fs
lea
shll
dec
cmp
xchg
sub
sbb
pop
xlat
push
shrl
scas
lock
push
hlt
lods
imul
jo
fsubr
cs
lcall
rcrb
and
stos
push
cmpsl
inc
push
gs
cmp
lcall
movsl
or
cmp
rcr
iret
cmc
pop
clc
loope
orb
adc
jle
pushf
inc
cli
or
sub
insb
adc
mov
jb
js
jns
pushf
cmc
jecxz
sub
or
inc
int
or
sub
push
popa
shrl
clc
in
xor
lcall
sbb
into
or
jae
adc
outsl
adc
into
sti
lcallw
jmp
in
jb
enter
jae
in
push
leave
jle
mov
ret
push
inc
cmpsl
sar
lods
push
enter
or
mov
mov
adc
dec
out
add
aam
fcomps
shll
add
and
sub
sub
sub
addr16
lcall
mov
roll
mov
mov
jmp
and
pop
xchg
adc
arpl
aam
sahf
insl
sub
jg
jle
sub
adcl
mov
cmp
mov
xchg
cs
mov
fiadds
test
xchg
jg
rcl
dec
jle
rcrl
test
idivl
sbb
sahf
rcr
jns
pop
aas
insl
addr16
cmp
imul
dec
xchg
stos
not
test
incl
aas
sbb
push
pop
fiadds
push
jle
data16
push
sbb
addb
push
cmp
pop
push
and
xchg
mov
je
xor
add
neg
loop
push
cwtl
mov
popa
in
add
js
out
insl
fcomip
test
filds
mov
pop
addb
push
out
xchg
notl
stos
addps
mov
decb
push
cmp
inc
mov
or
sbb
stos
out
outsb
xor
fldl
push
cmp
mov
push
push
pop
and
dec
xlat
clc
jmp
pop
push
loope
push
ds
xchg
pop
jle
push
push
adc
out
sbb
stc
sbb
pop
mov
dec
mov
fstpl
inc
dec
xor
pop
dec
ja
orl
cmp
or
inc
or
push
or
mov
out
mov
xchg
xor
add
mov
jmp
mov
jmp
push
gs
movsb
es
mov
jle
fdivrl
jle
lcall
xchg
out
mov
sti
sbbl
mov
aad
pop
mov
mov
pop
fs
pop
or
mov
inc
popf
push
scas
fimuls
nop
cltd
dec
fidivl
mov
and
lret
sbb
sbb
pop
pusha
mov
xor
pop
bound
push
dec
int
inc
int3
push
dec
fs
out
pop
dec
fs
sbb
jmp
adc
test
push
xor
dec
sbb
into
fbstp
shr
rclb
setnp
ficoml
leave
test
data16
push
or
loope
lcall
outsb
or
mov
jno
pop
loop
xor
jae
cli
pop
aas
fcoml
repnz
mov
and
inc
lcall
pop
ss
mov
push
call
ljmp
gs
jecxz
mov
pmaxsw
or
mov
sub
adc
xor
mov
out
ret
dec
push
xchg
test
pop
out
repnz
push
ja
std
inc
jno
leave
mov
xchg
adc
sbb
jnp
or
cmp
push
stos
stos
aad
stos
mov
mov
mov
mov
add
pop
pop
ret
push
mov
sub
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
incl
mov
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
pushl
call
jmp
sub
mov
subl
jmp
dec
pushf
push
in
imul
mov
adc
jle
jg
jle
rolb
fs
pop
cmp
xor
stos
push
cmp
fdivrs
movsb
jp
or
add
cld
or
mov
sahf
lds
inc
jns
xor
or
mov
jge
or
sub
sub
subl
aad
mov
aas
pop
mov
sub
push
adc
and
aas
xchg
test
stos
ja
in
sbb
mov
sti
retw
iret
pop
pushf
ficompl
aaa
daa
fsubr
pop
and
mov
mov
js
test
xor
out
fcmove
xor
mov
arpl
insb
pop
and
xchg
push
in
test
push
jg
mov
mov
in
ret
jbe
in
or
mov
xor
out
push
jnp
lret
or
int3
inc
mov
hlt
cld
inc
leave
or
and
ljmp
stos
fwait
jns
jp
xor
mov
notl
add
mov
or
mov
jmp
sub
xchg
jns
jns
or
inc
push
sarb
jle
or
jle
bnd
ljmp
push
icebp
shrl
cli
cmp
in
adcb
in
scas
cmp
or
mov
inc
xor
outsl
scas
popf
mov
fimull
mov
and
xchg
repnz
push
rclb
stos
push
and
mov
loopne
movsl
ficomps
daa
add
pop
mov
imul
sub
out
and
in
call
push
outsl
lds
scas
inc
sub
lahf
xchg
mov
jae
jbe
dec
cmp
xchg
loope
sbb
mov
mov
cld
popa
cmp
cli
popf
inc
cltd
jle
dec
sbb
dec
mov
iretw
pop
loopne
inc
aaa
flds
nop
ficompl
out
mov
out
push
fidivl
fisubs
andl
mov
push
negb
dec
add
push
stos
scas
sbb
pop
lods
dec
in
movzwl
add
mov
movb
lea
and
mov
movl
cmpl
je
cmpl
jne
pushl
call
mov
dec
mov
jmp
mov
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
neg
mov
xor
orl
sub
mov
xor
jmp
adc
fs
jmp
ficompl
stc
mov
sub
or
jle
and
clc
add
sub
jb
push
adc
xlat
ficoml
sbb
cmp
clc
pop
mov
push
rcll
test
stos
enter
das
lock
inc
push
pop
stos
fst
aaa
inc
ficoms
or
mov
shl
das
testb
jno
mov
push
pop
ds
fisubrl
ds
repnz
out
jbe
pop
sbb
ljmp
push
xor
aaa
out
fbld
jnp
mov
mov
andl
mov
cmp
mov
dec
leave
test
mov
mov
fbld
mov
xchg
mov
jae
in
enter
sbb
or
sti
xor
popf
aaa
mov
std
fsts
ljmp
xor
mov
sub
ret
jbe
lods
sub
dec
movl
gs
add
mov
mov
addb
pop
iret
cwtl
roll
leave
test
mov
movl
adcl
movl
mov
xor
add
sbb
mov
addl
push
andl
mov
inc
mov
cmpl
jne
push
pushl
pushl
push
push
push
push
pushl
push
pushl
pushl
pushl
pushl
pushl
call
cmpl
jne
xor
add
inc
mov
cmpl
jb
xor
mov
add
jmp
mov
mov
inc
cmp
jb
mov
mov
jmp
sub
fwait
and
xchg
sub
or
jle
jmp
or
add
inc
cmovnp
xor
aad
mov
in
in
fcomps
roll
sbb
or
int3
lds
loope
or
mov
push
inc
sbb
test
cmp
push
mov
dec
and
jnp
fisttpll
repz
repz
add
cmpsb
fnstcw
push
jnp
mov
xor
sbb
cmp
xchg
xor
adc
add
xchg
aam
inc
test
insb
mov
xor
iret
idivb
jp
or
pop
lods
dec
push
fdivl
stc
mov
fsubr
mov
popf
clc
add
jmp
and
mov
xchg
ljmp
push
push
pop
mov
mov
das
jb
je
loopne
imulb
fwait
imul
mov
sub
xor
daa
jns
gs
adc
xor
add
cmp
je
jmp
xor
cltd
js
popa
cmp
js
xor
sub
or
jle
outsl
sahf
cmp
mov
cmp
pushf
aaa
pusha
sub
add
int3
in
ljmp
imul
jnp
push
and
push
sub
loop
fnstenv
gs
jg
loopne
stos
mov
int
les
in
push
xchg
jae
mov
sub
sub
jle
cmp
cltd
add
popf
call
aas
and
imul
into
push
xchg
in
sti
and
shr
xor
scas
add
inc
outsl
aaa
sub
lcall
cmc
repnz
mov
test
inc
popa
stos
and
adc
scas
nop
push
fcompl
jge
repz
mov
out
gs
bound
mov
pop
sub
adc
out
xor
mov
adc
lcall
xchg
not
cmc
add
mov
arpl
xchg
pop
repz
cmpsl
leave
aas
cmpsb
jp
cmp
inc
mov
mov
lcall
jge
mov
xor
mov
add
movzwl
mov
mov
jmp
fcoms
sub
clc
fcomps
scas
or
jg
jle
push
push
pop
push
jno
inc
int3
lret
fmuls
xchg
repz
adc
xchg
ja
cmp
xchg
out
jl
outsl
adc
inc
sub
aaa
mov
xorb
or
mov
pop
ja
dec
xor
outsb
pop
xor
jno
sub
dec
push
push
movsl
xor
or
arpl
xor
push
insl
add
cs
xchg
adc
dec
pop
lret
sbb
xor
jbe
or
dec
or
rolb
insl
add
xchg
stos
add
jecxz
jb
in
call
and
push
pop
test
cmp
cltd
jg
mov
mov
push
push
jg
inc
add
rol
dec
mov
addr16
shrl
stos
sahf
cmp
in
jns
rcrl
imul
jl
inc
scas
sbb
pop
mov
jnp
shll
or
cmpsb
cmpsb
lock
jecxz
push
arpl
ret
aas
sbb
dec
jns
in
mov
nop
xor
add
mov
mov
mov
inc
cmp
jne
pop
pop
mov
mov
xor
jmp
inc
jno
icebp
stc
js
xchg
insb
lret
xlat
jecxz
cmp
jle
or
jle
in
xorl
in
sub
daa
adc
pop
and
sbb
cmp
hlt
mov
dec
icebp
mov
lret
es
xor
or
dec
jle
int3
gs
cld
mov
push
lock
repnz
sub
adc
cmp
jp
inc
aas
lret
mov
xor
mov
popa
and
xchg
xchg
jb
xor
pop
xor
mov
push
pop
dec
icebp
mov
fstl
call
mov
xchg
mov
test
in
pop
out
cltd
psrlq
out
popa
ja
mov
shll
iret
cwtl
jns
pop
adc
push
jg
sub
push
xchg
or
popa
pop
lock
test
sub
mov
repz
push
sahf
jnp
jbe
xor
jno
das
cli
leave
mov
inc
jge
das
pop
or
cld
add
add
and
add
dec
sub
lock
add
or
jle
jge
es
leave
sbb
dec
mov
jp
ss
jg
clc
insb
test
xor
adc
add
add
mov
rorb
addl
sarb
pop
mov
xor
push
aam
dec
push
lea
mov
xchg
rcll
sbb
push
xor
fldenv
push
pop
adc
jae
xchg
mov
cwtl
sahf
cs
fwait
dec
adc
mov
cmp
cwtl
xlat
jbe
mov
popa
sub
and
jno
cli
cmp
mov
repz
xchg
xchg
popa
js
clc
push
inc
mov
pop
sti
cmpsl
scas
and
or
shll
inc
lock
bound
mov
mov
push
arpl
push
rolb
movsb
push
push
outsb
dec
cltd
fnsave
pop
push
mov
push
rcrb
xchg
into
add
inc
mov
or
int
outsl
dec
rorl
add
mov
mov
mov
mov
cmp
je
mov
mov
mov
cmp
jne
mov
mov
jmp
jmp
loopne
mov
jmp
jmp
jle
jg
jle
mov
les
clc
les
inc
mov
outsb
std
push
sub
dec
adc
int3
fcmovu
xchg
sarl
not
push
popf
lods
sbb
insb
arpl
lahf
jnp
and
sub
mov
mov
mov
inc
pusha
imul
loope
test
cmp
aaa
jmp
or
loop
jo
clc
cmpsl
pop
pop
rol
repz
loope
ror
idivb
and
shl
shlb
scas
enter
push
icebp
push
push
leave
xor
ja
scas
daa
jno
dec
xor
or
ds
xor
pop
inc
mov
pushf
jb
aaa
and
xchg
fnsave
outsl
pop
xchg
or
subl
lret
mov
or
mov
ljmp
sub
hlt
and
icebp
xchg
lahf
push
push
add
imul
fsubl
movsbl
xor
add
cmp
je
movl
lea
mov
mov
addl
mov
jmp
lods
lock
sbb
daa
js
pusha
frstor
jle
or
jle
and
loopne
dec
sbb
cmp
push
popf
popa
dec
push
dec
inc
jl
or
and
push
mov
sbb
inc
faddp
push
xor
push
jmp
xchg
mov
rolb
jmp
bound
jp
jns
gs
mov
xor
jge
xchg
cmp
pop
stos
inc
and
sub
or
fdivrs
jecxz
pop
xor
cmp
out
cli
fwait
mov
insl
test
push
enter
jno
or
ret
xor
xor
repnz
mov
jbe
jmp
mov
adcb
fisubrl
xchg
dec
sti
mov
loopne
adc
xor
insb
ret
bound
hlt
shlb
cld
fidivs
inc
add
push
jle
rcl
add
shrb
mov
jne
les
mov
xor
lea
mov
incl
jmp
mov
xor
jmp
or
stc
movsl
mov
jle
jg
jle
dec
mov
lahf
add
cmp
std
shlb
xor
inc
out
iret
sbb
inc
sub
mov
xor
and
arpl
push
xor
mov
pop
dec
and
mov
pusha
mov
add
or
mov
mov
sahf
push
in
mov
insb
xor
lods
int
test
subl
or
jno
fsubl
cmpsl
dec
mov
int3
push
imul
mov
and
push
sbb
out
sub
stc
push
dec
scas
sbb
test
xor
dec
adc
sbb
outsb
sbbb
je
loop
cmp
cmpsl
mov
xchg
push
inc
xor
cltd
mov
pop
jmp
insl
mov
push
dec
iret
pop
sbb
pop
decb
lods
stc
mov
add
jnp
data16
gs
pop
fbstp
add
scas
outsb
push
dec
xchg
cmpl
jb
arpl
aas
mov
add
mov
pop
leave
ret
push
mov
push
not
movl
mov
mov
add
mov
adcl
xor
add
andl
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
call
jmp
sub
xor
adc
push
add
mov
mov
add
xorl
mov
mov
mov
sub
xor
mov
mov
mov
movl
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
mov
mov
mov
mov
jmp
andb
xchg
xchg
mov
xchg
xor
in
jle
cmpb
jle
movsl
stos
rol
cld
loop
lock
mov
sbbl
pushf
popa
mov
test
xor
sbb
cltd
stos
jo
decb
add
lret
movlps
or
in
outsb
jp
jno
cwtl
jp
call
imul
mov
ds
imull
dec
adc
and
into
cld
fisubrs
dec
ret
mov
push
pop
adc
mov
xchg
aaa
pop
adc
jb
adc
pop
outsl
fsubl
cmp
stc
ljmp
mov
mov
mov
mov
jmp
es
mov
les
xor
into
and
and
cmpb
sbb
loop
and
mov
pop
xchg
dec
ja
xchg
vmulpd
xchg
cmp
cpuid
and
mov
mov
xorb
insl
pushf
aad
sbb
outsl
fstpl
fisttps
jge
inc
sbb
inc
notb
cmp
inc
nop
and
arpl
lods
mov
adc
lock
push
aam
loop
mov
xor
sti
sub
lahf
in
shrb
scas
cmp
ds
xor
add
pop
leave
ret
push
mov
mov
xor
mov
div
mov
and
or
mov
pop
ret
push
mov
jmp
test
pusha
test
cmp
das
sahf
popf
and
push
jg
jle
mov
and
inc
rcrl
in
rcl
add
ret
repz
js
and
sbb
xor
add
xor
mov
pusha
pop
mov
into
sub
sti
jg
int
cwtl
lea
mov
mov
shrb
pop
in
push
or
pop
dec
mov
xchg
mov
sbb
pop
outsb
jecxz
add
stos
inc
or
test
pushf
leave
push
and
loop
test
shrl
push
into
pop
adc
pushf
sub
mov
inc
lods
and
movsl
leave
cmpsb
xchg
mov
addr16
add
xlat
fwait
cwtl
or
mov
ds
lds
rolb
jae
movl
push
and
sysenter
into
mov
jbe
ret
outsb
aaa
dec
daa
add
push
addr16
les
jecxz
xchg
pop
bound
fucomi
mov
test
ss
push
dec
add
stc
jne
add
jb
scas
icebp
jge
dec
jno
inc
out
rcll
rol
inc
cld
cmp
pushf
clc
or
mov
orl
mov
movzwl
adc
mov
subl
xor
adcl
add
movl
mov
xor
jmp
push
xlat
lcall
jl
inc
push
cmc
inc
mov
jle
push
jg
jle
int
xchg
lea
insb
pop
je
sahf
loop
inc
push
rcr
fwait
ret
hlt
subl
dec
cmc
std
sarl
push
mov
xchg
lahf
mov
call
mov
in
adc
adc
adc
stos
mov
adc
mov
mov
scas
imul
outsb
aad
notl
lahf
jle
mov
push
imull
imul
inc
sub
or
pop
push
popa
aam
data16
loopne
sbb
xchg
lcall
inc
std
mov
mov
push
inc
insb
xor
xchg
fimull
mov
jne
jbe
sub
pop
and
mov
cltd
pop
rcr
mov
adc
mov
push
add
addl
lea
jl
push
aad
in
test
pop
push
xor
xchg
aad
sbb
call
lock
pop
pop
sbb
mov
outsl
in
inc
iret
testb
push
mov
stos
cmp
jmp
daa
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
mov
mov
mov
jmp
add
cmp
jns
gs
movsb
or
jno
daa
jle
push
jg
jle
es
xor
cmp
loope
popa
mov
cwtl
test
mov
sbb
xor
ret
sbb
sub
sbb
add
es
int3
aaa
mov
test
lret
mov
fwait
shlb
push
inc
mov
mov
push
adc
pop
fsts
stos
arpl
xor
fstl
sbb
loope
jle
pop
add
out
or
pop
pop
jne
in
mov
cmp
cmpsb
inc
stos
jg
dec
adc
daa
mov
test
inc
imul
jns
test
jno
xor
pushf
fs
xor
inc
mov
inc
enter
call
mov
mov
push
outsl
test
add
clc
xchg
mov
imul
sti
mov
xor
lret
mov
adc
mov
mov
or
inc
icebp
jo
popa
pushl
xchg
stos
lods
xchg
jp
clc
in
cwtl
nop
xorl
or
adc
and
adc
test
mov
jne
mov
xor
add
leave
ret
push
mov
sub
orl
push
incl
push
mov
subl
push
push
xor
adcl
push
adcl
mov
xorl
call
cmp
je
xor
jmp
push
mov
mov
push
adcl
push
andl
push
andl
lea
mov
andl
push
negl
call
adcl
mov
mov
test
movl
je
notl
pushl
adcl
call
addl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
push
call
jmp
xor
shll
and
inc
mov
imul
movl
cmpl
je
cmpl
jne
push
push
push
call
mov
dec
mov
jmp
mov
add
or
mov
movl
mov
cmp
movl
jne
movl
inc
movl
cmp
jb
andl
push
subl
call
movl
cmpl
je
cmpl
jne
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
xor
shll
movl
cmpl
je
cmpl
jne
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
and
and
mov
inc
imul
mov
mov
xor
mov
or
movl
mov
mov
mov
cmp
jne
inc
movl
cmp
jb
xor
sbb
shll
and
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
push
push
push
call
cmpl
jne
xor
or
inc
mov
cmpl
jb
mov
mov
xor
imul
mov
sub
mov
and
or
mov
mov
movl
cmp
jne
movl
inc
cmp
movl
jb
xor
andl
xor
add
inc
mov
cmpl
jne
pushl
call
cmpl
jb
addl
shll
and
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
push
push
pushl
push
push
push
push
call
jmp
mov
imul
mov
or
mov
mov
movl
cmp
movl
jne
inc
cmp
movl
jb
movl
cmpl
je
cmpl
jne
pushl
push
pushl
push
push
push
call
mov
dec
mov
jmp
mov
mov
sub
imul
xor
shll
and
or
mov
xor
imul
movl
cmpl
je
cmpl
jne
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
adcl
mov
or
or
mov
mov
mov
movl
cmp
jne
movl
inc
movl
cmp
jb
xor
orl
shll
and
and
mov
adcl
imul
adc
mov
xor
or
xor
or
mov
mov
movl
cmp
jne
movl
inc
movl
cmp
movl
jb
sbb
xor
movl
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
shll
movl
cmpl
je
cmpl
jne
push
pushl
push
push
pushl
call
cmpl
jne
mov
dec
mov
xor
add
dec
mov
jmp
neg
and
mov
neg
imul
xor
mov
adc
or
mov
mov
mov
movl
cmp
movl
jne
inc
cmp
movl
jb
xor
shll
and
mov
imul
mov
or
mov
mov
cmp
jne
inc
cmp
jb
inc
cmp
jb
mov
mov
movl
lea
mov
lea
mov
mov
mov
mov
mov
mov
xor
mov
add
mov
mov
cmp
mov
je
mov
xor
add
imul
mov
jmp
xor
jmp
xor
add
mov
mov
xor
add
mov
mov
mov
xor
add
cmp
jne
push
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movl
mov
mov
mov
xor
xor
add
mov
xor
xor
add
lea
cmp
ja
mov
xor
lea
push
mov
xor
lea
push
mov
pushl
call
mov
xor
lea
mov
mov
xor
xor
add
mov
xor
lea
cmp
jbe
mov
mov
mov
mov
mov
mov
mov
sub
xor
mov
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
pushl
mov
pushl
add
mov
mov
pushl
call
mov
mov
mov
jmp
mov
mov
xor
add
cmp
jne
mov
xor
add
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
mov
movl
mov
xor
add
mov
mov
mov
mov
mov
mov
push
pop
sub
add
movl
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
lea
mov
mov
xor
add
mov
lea
push
mov
xor
add
push
mov
push
pushl
call
xor
mov
sub
push
mov
add
push
call
inc
cmp
jb
mov
call
lea
mov
mov
mov
pushl
lea
push
call
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
leave
ret
push
mov
push
or
movl
add
mov
mov
addl
add
sbbl
xor
cmp
movl
jne
mov
mov
add
mov
andl
mov
inc
mov
cmpl
jne
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
mov
xor
push
mov
mov
add
cmp
pop
je
mov
jmp
mov
xor
add
jmp
mov
xor
add
leave
ret
push
mov
push
movl
cmpl
je
cmpl
jne
push
push
push
pushl
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
sub
push
sub
movl
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
pushl
call
jmp
sub
movl
jmp
jmp
aam
push
pop
jnp
fwait
jne
mov
jle
lds
jle
push
and
cmpsb
jge
sub
das
test
add
mov
cmp
and
testl
fdivrs
je
mov
sar
push
mov
jle
loop
ljmp
cmpb
sub
call
stc
adc
xchg
cmp
pop
and
pop
xlat
or
cmp
mov
aam
adc
push
sub
xorb
imul
jmp
dec
mov
mov
sti
insb
adc
mov
cs
out
dec
movsb
es
mov
dec
daa
cltd
cs
movsb
pop
or
dec
xor
xor
inc
mov
pusha
jns
ss
frstpm(287
sbb
loope
lock
addl
add
in
ss
pop
jno,pn
jge
mull
js
mov
xlat
inc
int3
gs
adc
mov
jae
shll
cmpsb
pop
imul
dec
aam
not
stc
arpl
adc
rcr
xor
pop
jo
pop
mov
pop
sub
insl
subl
jle
outsb
movsb
mov
sub
adc
jnp
cs
add
pop
insb
add
fdivrs
dec
adcl
xchg
clc
xor
push
stc
cmp
out
js
sbbl
or
mov
andl
mov
inc
mov
cmpl
jne
pushl
pushl
push
push
call
cmpl
jb
mov
xor
xor
mov
add
add
imul
mov
cmp
jne
mov
mov
jmp
addr16
mov
jl
arpl
adc
fsubp
cmp
lds
jle
and
ja
in
fstl
xor
or
testb
jg
sub
out
loope
add
add
roll
adcl
addl
out
movsl
inc
adc
in
sbb
xor
mov
clc
inc
popf
jbe
xchg
add
mov
xor
mov
dec
rolb
and
dec
lea
inc
or
xor
in
movsl
fidivs
mov
fisttpl
xchg
test
loope
dec
ja
stos
lret
outsb
movsl
clc
ret
lea
inc
cs
fstps
jle
iret
mov
pusha
mov
push
sbb
fldz
mov
je
adc
loop
int
xchg
jo
movsl
mov
outsl
addl
or
pop
int3
sbbb
lret
add
shrl
mov
call
jne
lcall
push
sbb
mov
jle
lock
aam
lret
cmpsl
dec
out
pop
iret
mov
jmp
stos
cmpsl
mov
ret
pushf
push
cmpsl
mov
sbb
fildl
cltd
mov
jle
dec
fbld
mov
sar
push
mov
dec
push
loope
in
mov
inc
lahf
dec
shll
ret
add
jmp
jg
add
jns
cmp
outsb
pop
dec
cmp
lds
jle
mov
test
sub
nop
addr16
rolb
sahf
and
sbbl
add
lcall
fwait
lds
add
addr16
leave
jbe
adc
scas
aad
and
mov
ret
xchg
jb
cmpsb
push
or
pop
sbb
xchg
pop
sbb
jns
pushf
push
insl
jnp
cmpsl
ja
aad
out
adc
bnd
roll
arpl
dec
xchg
in
shl
push
mov
imul
inc
push
pop
test
in
notl
jl
int3
out
loope
test
lock
insb
bound
mov
in
in
xor
mov
xchg
pop
lcallw
shrb
mov
aaa
in
std
inc
mov
xchg
loope
xlat
jne
sbb
aas
shlb
mov
nop
pop
cwtl
xchg
pop
roll
adc
xchg
xchg
jo
pop
out
cmc
cmp
aam
add
std
cmp
xlat
stos
push
sub
std
aaa
pushf
shl
notl
loopne
adcb
test
das
jns
jne
mov
xor
inc
cmp
loope
out
filds
scas
pop
ror
ljmp
push
adc
dec
cmp
jns
inc
adc
popf
and
mov
jmp
mov
mov
mov
mov
mov
xor
xor
add
jmp
push
mov
sub
cmc
sub
mov
sub
jle
lds
jle
adc
xchg
lret
inc
mov
fcoml
xchg
cmp
pop
jmp
pop
inc
cmovne
out
lcall
and
xlat
xchg
or
nop
iret
sub
shrb
popf
lods
pop
lds
cmp
inc
insl
lahf
jne
mov
xchg
into
mov
inc
jl
mov
std
divl
stos
arpl
pop
inc
or
jno
aad
mov
xchg
imul
outsl
lds
inc
lock
iret
dec
scas
test
lahf
out
mov
dec
and
push
stos
xchg
dec
test
mov
push
push
mov
ficompl
shrb
push
dec
mov
pusha
mov
xor
or
clc
out
mov
aad
mov
xchg
cmp
jae
xchg
cmp
inc
subl
or
add
aas
enter
cltd
ret
jle
adc
loopne
movsb
sub
dec
aad
andb
xor
dec
ret
fstpl
addr16
or
sub
stos
mov
fstl
repz
mov
movsb
and
sub
pop
aam
sahf
pop
xchg
cltd
fsts
aaa
idivb
bound
push
loop
dec
test
icebp
imul
mov
cmp
mov
je
xor
add
mov
imul
add
mov
mov
pop
leave
ret
push
mov
sub
addl
movl
movl
decl
mov
push
mov
xor
xor
jmp
je
jg
addr16
test
mov
dec
icebp
jle,pt
mov
jle
imul
push
adcl
xchg
and
xchg
inc
push
lods
aas
repz
pusha
cld
or
in
xchg
adc
cmc
xchg
jb
cwtl
adc
ljmp
stos
pop
fidivrl
in
rolb
inc
or
test
int
xor
and
cmp
enter
in
mov
push
adc
dec
inc
scas
nop
fsubrs
pop
lret
dec
repnz
imull
and
xor
mov
sti
add
testl
jae
and
mov
fwait
stos
push
scas
xor
mov
jne
mov
and
push
test
add
jb
add
lret
andl
mov
movl
mov
addl
push
push
orl
test
je
mov
mov
mov
movzbl
and
imul
sub
mov
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jb
add
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jne
push
push
call
jmp
or
mov
mov
movl
xchg
mov
mov
or
sub
and
xor
adc
mov
mov
add
mov
and
jmp
scas
mov
imul
pop
pusha
fisttps
sbb
jle
jle
jle
inc
mov
push
andl
mov
pop
sbb
cld
push
inc
mov
or
shrl
movsb
sub
xchg
data16
sbb
hlt
aas
pop
sub
xlat
pop
jns
xor
and
xchg
xchg
xchg
das
cmpsb
xchg
imul
xor
ret
test
lret
xchg
sub
cmp
ja
sbb
ret
jae
jno
scas
les
mov
ret
rorl
mov
cltd
stos
fidivl
xor
out
inc
ja
fwait
add
xor
in
outsl
mov
lret
add
lahf
mov
or
xor
add
xlat
repnz
fwait
pop
push
das
das
mov
mov
scas
jbe
jne
movzbl
and
jmp
mov
stos
popa
jns
in
mov
sti
es
cmp
jle
jle
jle
fwait
pusha
dec
cmp
jp
rorb
push
movsb
push
mov
adc
push
pop
sub
jae
mov
jl
xchg
ret
and
xor
xor
add
loopne
pop
bound
mov
and
mov
imul
dec
pop
shlb
scas
sahf
int3
sarl
rcrl
jecxz
jecxz
lret
xchg
cmpsb
hlt
lock
int
in
add
in
and
jbe
outsl
xchg
push
jle
iret
lret
jl
in
xor
and
test
stos
fs
inc
hlt
push
inc
inc
cmp
pop
dec
nop
push
lods
lahf
in
adc
mov
insb
xchg
les
popa
stc
addr16
mov
subl
xor
xor
or
add
not
mov
mov
je
mov
xor
mov
xor
andl
add
movl
cmp
jmp
push
pop
popf
aam
fs
test
pop
je
pop
cmp
jle
jle
jle
leave
inc
shr
push
mov
aaa
rolb
loop
shrb
mov
mov
fbstp
popa
test
mov
inc
je
enter
ja
mov
pop
leave
das
dec
pop
insl
push
jae
aaa
in
lock
add
push
movsb
mov
scas
xor
hlt
or
bound
mov
andl
sbb
sarl
cmp
inc
mov
fcmovu
pop
and
xchg
repnz
divl
shrl
nop
cltd
and
vmovlpd
and
xor
sbb
pop
xchg
ss
lahf
iret
daa
ja
daa
add
lret
add
loop
les
movsb
push
adc
outsb
popf
jecxz
cmp
xchg
test
jne
movl
call
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jne
pushl
call
jmp
movl
cmpl
je
cmpl
jne
pushl
call
mov
dec
mov
jmp
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
call
cmpl
jne
xor
or
inc
mov
cmpl
jb
movl
cmpl
je
cmpl
jne
pushl
pushl
pushl
pushl
pushl
pushl
push
pushl
call
xor
or
dec
mov
jmp
sbb
mov
mov
not
mov
xor
subl
add
cmp
jmp
add
or
in
loope
js
dec
inc
nop
dec
dec
add
jle
jle
jo
add
popa
push
xor
mov
mov
in
or
xchg
push
test
push
mov
or
cltd
lcall
sub
fdivp
mov
xchg
push
in
les
inc
add
push
and
lea
ret
cltd
ljmp
icebp
pop
xchg
pop
nop
inc
add
outsl
fcomps
mov
sarb
loopne
loopne
xchg
das
jno
or
add
pushf
jle
lds
lcall
scas
dec
mov
mov
and
out
pop
xchg
pop
push
cmp
lods
das
test
sub
add
mov
jp
pop
inc
imul
or
jns
mov
test
add
sbbl
pushl
jmp
sti
loopne
lock
cltd
sti
jns
cmpsb
pop
out
inc
mov
jle
jle
jle
dec
adc
add
mov
arpl
cmp
sbb
adc
sbb
fcoml
xor
repnz
stos
rclb
daa
data16
dec
daa
xor
cwtl
or
addr16
jnp
lods
insl
sub
xorl
pop
fsub
sahf
cmp
mov
jg
push
into
fnop
fistpll
ja
sbb
mov
push
adc
sbb
lods
int3
xchg
shlb
sbbl
cwtl
pusha
sub
pushf
mov
je
jmp
mov
jns
dec
mov
ret
insl
test
insl
fs
mov
mov
dec
popa
test
xchg
pushf
fcmovnu
sub
loopne
jle
jae
xor
icebp
aam
xchg
out
xchg
sti
inc
xchg
sub
shll
pushl
call
or
mov
mov
adc
mov
adcl
xor
add
movl
cmp
movl
je
andl
mov
inc
mov
cmpl
jne
push
push
pushl
push
pushl
push
push
push
call
cmpl
jb
mov
mov
movzbl
sbb
mov
xor
or
xor
xor
sub
sub
mov
subl
mov
addl
add
mov
movl
cmpl
je
cmpl
jne
pushl
pushl
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
mov
add
jmp
mov
or
pop
pop
aas
mov
test
and
jle
mov
jle
jp
fists
arpl
xchg
or
nop
loope
fadds
xchg
dec
adc
add
call
orl
xor
movsl
dec
xor
ret
mov
lock
or
dec
es
popf
sub
cmp
add
hlt
bt
sub
fcomps
pushl
out
popf
fstpt
in
sub
cmpsb
stc
push
push
cmp
dec
repnz
xorl
mov
xchg
adc
dec
sub
lock
fisubl
mov
fisubrl
mov
mov
xchg
jg
cmp
ja
pop
movsb
jae
pop
sahf
aas
mov
enter
push
pop
addb
imul
add
mov
mov
mov
add
xor
mov
mov
mov
add
jmp
pop
pusha
pop
movsb
jns
out
cmpsb
push
jg
in
cmp
jle
jle
jle
lret
inc
pop
push
ja
enter
es
pop
cmp
les
aad
jae
adc
ficoml
sbb
xor
dec
push
mov
dec
sub
adc
jbe
adcb
movsl
mov
dec
or
inc
bound
or
icebp
pop
hlt
in
add
push
and
jecxz
dec
jge,pn
subb
xchg
cmpb
push
inc
pop
pop
xchg
les
push
cli
movl
in
dec
push
cld
repz
stos
int
lahf
out
push
cltd
inc
inc
cmpsl
jle
pop
popf
mov
enter
inc
mov
jae
sub
outsl
inc
cmp
insl
in
loopne
jle
inc
clc
mov
push
pushl
pushl
call
mov
mov
xor
add
cmp
jne
mov
jmp
test
scas
pop
cmpsb
jns
and
lock
xor
mov
jle
cld
cs
negl
lcall
inc
mov
ja
jb
dec
aaa
pmuludq
lods
std
in
add
xchg
in
push
jo
int3
shll
fs
cmp
dec
fcmovne
not
subb
popa
sub
mov
jno
insb
stos
add
insl
mov
stos
push
lahf
fwait
cld
mov
jge
xchg
sbb
jno
mov
push
enter
ficoml
cmpsl
nop
xchg
outsb
dec
dec
mov
out
mov
nop
pop
sub
jbe
mov
xchg
xchg
mov
js
cmpsb
xor
dec
xor
add
dec
mov
push
iret
sub
push
mov
push
xchg
xor
jg
or
dec
daa
int
into
and
inc
adc
lcall
jb
jmp
mov
xor
add
jmp
mov
movzwl
mov
mov
mov
mov
mov
xor
add
cmp
jne
mov
xor
jmp
mov
add
mov
mov
test
je
mov
push
pop
push
dec
jmp
pop
imul
mov
jnp
push
pop
and
and
dec
mov
jle
mov
jle
cmpsl
lahf
sbb
movsb
cltd
jno
cmc
push
pop
push
pop
push
cwtl
cld
mov
mov
mov
or
lret
movsb
popa
cmp
call
add
jmp
mov
nop
or
pop
or
add
dec
mov
popa
inc
mov
test
pop
mov
cwtl
out
mov
sub
popa
sbb
cwtl
push
dec
popa
dec
dec
push
add
sbb
jg
mov
fisttps
imul
mov
rcll
sbb
jg
lods
out
xchg
cli
cld
rcr
xchg
aam
aaa
mov
mov
lds
clc
add
adc
in
pop
inc
icebp
mov
sti
addr16
pushf
test
lret
sub
xchg
dec
mov
imul
sub
mov
mov
mov
jmp
xchg
adcl
mov
insl
out
iret
mov
shll
jle
jle
jle
mov
jne
push
or
fisttps
cmpsb
push
push
push
test
inc
cmpsl
cmpl
pushf
push
rcr
hlt
sti
xor
outsl
call
shrl
sarb
or
mov
test
loop
or
pop
fcoms
jmp
jl
xor
mov
pop
or
roll
or
clc
dec
test
sub
aam
iret
mov
dec
add
xchg
cmp
xchg
mov
pop
add
aas
test
lods
xlat
xchg
cwtl
add
popf
aad
pop
cmp
xor
fmuls
push
xchg
add
rcpps
out
or
mov
cmp
sarl
ret
or
add
mov
jmp
decl
xchg
js,pn
adc
mov
jle
or
xor
test
or
in
adc
dec
mov
pop
test
jl
mov
clc
add
or
aaa
push
popa
daa
jno
enter
add
pushf
aaa
mov
pop
jmp
xchg
mov
outsl
mov
in
xor
xchg
inc
and
icebp
push
adc
add
nop
mov
jno
fisubs
xor
pop
stc
xchg
lret
outsb
hlt
xchg
fs
xchg
pop
dec
aad
and
stc
sub
sub
push
fistps
or
xchg
sbb
repnz
int
fisubrl
dec
andb
dec
nop
das
sub
pusha
and
xchg
call
loop
add
push
add
add
loopne
add
inc
loop
xchg
imul
adcl
jle
mov
jle
mov
fdiv
movsb
je
nop
mov
ret
inc
or
scas
lods
mov
jmp
mov
push
sub
je
loopne
add
push
lock
jne
inc
jg
in
cltd
jne
adc
ret
imul
data16
sub
jg,pt
addr16
sub
imul
pushl
sub
adc
in
repnz
push
into
inc
mov
jo
push
mov
jno
pop
mov
pop
or
lret
fildl
pop
testb
scas
popf
cmp
mov
mov
mov
sbb
stos
and
push
lahf
fildll
rol
test
cltd
out
xchg
out
xor
mov
xchg
mov
sub
dec
in
sub
push
cld
xor
mov
lea
cmp
je
mov
mov
mov
mov
jmp
pop
sub
sub
jne
stos
in
push
fisubrl
jle
jle
push
nop
test
ss
scas
enter
xchg
jmp
sbb
imul
sahf
imul
lods
and
inc
ret
mov
mov
lret
std
jns
inc
sbb
cltd
mov
aad
mov
xor
dec
je
mov
add
mov
cmpsl
out
gs
loopne
adcb
jb
or
rorb
imul
addb
add
xor
sub
mov
pop
out
aas
push
sbb
ljmp
mov
rcll
push
scas
iret
pop
jo
push
dec
cmp
movsb
jmp
pop
repnz
xor
lds
inc
bound
mov
gs
or
adc
xor
xor
mov
add
div
mov
xor
lea
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
imul
mov
xor
mov
jmp
mov
pop
mov
xchg
aad
lods
test
xor
jle
addl
loope
loopne
and
cs
test
out
adc
addr16
pop
lcall
repz
and
scas
ds
sar
sbb
cmp
push
movsb
cmp
pop
bound
cli
cmp
xchg
mov
xchg
mov
jg
xchg
sub
sahf
xchg
or
jge
sub
mov
mov
cwtl
push
ja
xchg
iret
pop
stos
cmpl
jmp
js
adc
inc
ss
clc
popl
mov
jbe
cmp
das
fcmovb
push
add
sahf
mov
les
and
in
mov
dec
inc
cmp
les
clc
je
lret
xor
ljmp
mov
mov
lahf
jb
add
enter
std
decl
add
mov
jmp
mov
or
leave
jns
or
cmp
jle
mov
jle
and
mov
outsl
sub
scas
outsl
sub
sbb
mov
pusha
cmp
movsl
andl
rorb
pop
dec
and
push
jle
fadds
lds
add
jno
enter
lcall
out
push
sahf
ret
stos
sbb
hlt
dec
mov
jg
mov
mov
mov
enter
add
dec
xchg
cltd
cli
lahf
lods
daa
js
in
mov
jnp
push
sbb
movsb
push
mov
jnp
sbb
ss
arpl
pusha
xlat
int
mov
adc
popf
push
jmp
push
or
loopne
inc
jle
es
adc
xchg
shlb
cmp
xor
add
mov
xor
lea
add
jmp
sbb
cmp
pop
inc
and
gs
jmp
fbstp
jno
jle
mov
jle
fs
mov
out
cwtl
pusha
pusha
out
mov
data16
xor
adc
dec
mov
jb
mov
fisubrl
loopne
daa
imul
xor
negb
dec
and
rorl
or
pop
notb
push
or
addr16
cmp
ljmp
dec
fs
mov
sbb
add
fs
or
in
add
jne
mov
aad
cmpsl
test
mov
adc
ret
jmp
gs
xor
test
xchg
outsb
cltd
push
push
add
lds
call
xor
jmp
popa
jno
jnp
jnp
or
sub
jle
mov
jle
add
fsubp
stos
leave
jns
and
clc
xchg
inc
movsb
xchg
movsl
sub
mov
cld
or
call
mov
jmp
xchg
jp
xchg
sbb
daa
push
sub
xchg
repz
call
push
inc
fildl
xor
xchg
xchg
popa
mov
mov
icebp
sbb
aad
insb
mov
out
cwtl
add
push
ret
cmp
iret
mov
lods
call
gs
cld
sbb
inc
xchg
loop
and
out
mov
shlb
xchg
mov
in
sbb
test
pusha
cmp
out
movsl
xchg
in
cwtl
push
aam
stos
mov
add
add
cmp
jmp
test
xchg
push
stos
push
push
gs
fxch
or
mov
jle
xchg
push
inc
sti
push
outsl
lret
test
and
xlat
fnsave
dec
mov
scas
push
and
lret
insl
jp
mov
in
jmp
aad
fs
mov
sub
sbb
rorb
mov
push
enter
sti
js
mov
pop
cmpsb
xor
cmp
rcll
push
lods
and
lahf
das
and
jae
mov
xor
sbb
ror
pop
push
lock
aas
cmp
sub
dec
das
xor
movsl
lds
mov
pop
inc
ljmp
movsl
cld
fwait
inc
popf
mov
add
dec
xor
sub
inc
cmp
imul
cmp
add
je
xchg
push
pop
push
pop
inc
xchg
sub
xchg
jmp
xchg
out
jnp
jns
add
call
fxch
jle
mov
jle
mov
daa
repz
jbe
xchg
fs
ret
shrb
ficompl
mov
aaa
mov
inc
and
or
and
mov
mov
mov
test
sbb
test
shrl
sub
jle
insb
out
jl
fcomip
aas
jecxz
xchg
jns
jge
pop
adc
sub
inc
jbe
outsl
cmpsl
push
ret
std
or
push
dec
xchg
imulb
fwait
insw
cmp
pop
stos
aam
pop
clc
mov
or
icebp
mov
xor
test
cmp
mov
fdiv
xchg
jbe
mov
jo
push
jp
aam
jge
sbb
jbe
insl
cmp
xor
sub
ljmp
scas
roll
xchg
push
xor
mov
dec
inc
add
dec
xor
add
pop
mov
pop
pop
pop
leave
ret
