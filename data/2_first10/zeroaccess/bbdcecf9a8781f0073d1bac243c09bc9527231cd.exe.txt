mov
mov
ret
mov
mov
ret
cmp
movl
jmp
xor
sbb
fsubrs
nopl
jmp
mov
xlat
les
das
sub
in
data16
ljmp
push
aas
inc
adc
rolb
dec
ret
clc
loopne
jmp
jbe
cwtl
lds
and
out
mov
mov
jge
mov
loop
stos
xor
int
popf
inc
idiv
sbbl
out
stos
xchg
pop
cmpsl
cmp
or
sub
jae
adc
dec
ss
mov
jne
lret
push
outsb
aam
jle
mov
cwtl
pop
idivl
addr16
mov
xchg
xchg
cmc
pop
cld
mov
adc
adc
mov
nop
or
in
or
rcrl
out
sbb
out
repnz
fildl
pop
iret
jns
mov
add
jge
xor
adc
adc
sbb
cmpl
add
rcrl
fdivrs
insl
push
scas
cmp
mov
scas
inc
stc
bound
adc
push
into
leave
pop
xchg
cli
fidivrl
lret
rcll
lods
inc
cmpsl
xchg
pop
jmp
mov
lock
mov
add
bound
aam
mov
xchg
fwait
xor
inc
incb
push
pop
addr16
xchg
xchg
aad
mov
jb
fdivl
cmp
cwtl
gs
mov
cmp
dec
cmp
xor
pop
out
jmp
bound
xchg
push
insb
sub
xlat
sbb
dec
aam
dec
or
fwait
jle
inc
sarb
inc
movsl
fsts
sub
mov
cmp
pop
push
ret
scas
daa
jo
outsb
xor
loop
and
pop
stc
and
mov
cmp
sub
clc
jbe
in
cs
jo
loopne,pt
jl
jae
imul
inc
add
addr16
mov
cmp
inc
mov
xorb
call
pop
sub
les
cmpsl
fsubs
pop
push
xor
mov
outsb
mov
out
sub
or
cli
addb
sub
daa
rclb
test
pop
bound
andl
int
popf
sbb
imul
aas
ja
inc
xlat
aaa
xor
add
roll
adc
add
xor
imul
out
mov
stos
int
xor
popf
xchg
in
repnz
rorb
or
call
in
or
aas
in
cmp
into
cs
and
mov
mov
fisubl
cld
mov
ds
pushf
cmp
adc
push
jo
scas
push
out
iret
rol
dec
push
leave
jbe
jnp
inc
pop
jmp
xchg
pop
jbe
jl
push
sbb
sbb
push
test
lods
dec
lret
and
jae
push
sbb
pushf
lock
inc
push
dec
mov
inc
lds
shll
dec
adc
dec
or
test
addl
sbb
mov
jl
inc
test
out
push
and
fildll
inc
jae
pop
sbb
xlat
cltd
test
lret
outsb
xchg
scas
fst
cmpsl
popa
add
leave
or
lods
lock
cmp
pusha
xchg
cmc
pop
test
sbb
push
dec
dec
mov
sbb
sbbb
mov
xor
add
xchg
and
ss
and
lcall
outsb
or
mov
pop
test
add
arpl
lea
push
push
pop
in
lock
cmp
pop
lret
stc
cmp
out
js
add
popf
adc
sbb
mov
pop
pusha
sub
and
jno
rorl
pop
dec
getsec
cmc
pop
test
adc
and
pop
and
mov
lea
add
adc
pop
test
lcall
mov
hlt
xor
inc
movsb
cmc
dec
es
inc
std
fdiv
sbb
mov
inc
lret
cmp
push
and
fimull
lds
bound
cmp
jnp
mov
cmp
xor
shlb
push
xor
mov
cwtl
adc
cmpsl
inc
mov
movsl
int3
daa
ds
iret
jmp
xchg
scas
adc
icebp
test
or
sbb
insl
scas
push
xchg
inc
xchg
pop
popf
sub
pop
add
pop
shl
addb
loope
add
mov
add
sbb
scas
imul
jmp
int
ljmp
orl
ss
rolb
mov
push
dec
pop
out
push
imul
xor
cmp
or
cld
push
add
idivl
imul
mov
cs
fdiv
out
stos
xchg
hlt
xor
inc
lcall
sub
push
adc
jmp
and
clc
xor
dec
xchg
dec
mov
push
lea
or
mov
std
jle
dec
hlt
add
js
mov
mov
gs
popa
inc
movsl
rol
push
jne
pop
loope
dec
gs
ljmp
sub
push
jno
rcl
fadd
dec
jbe
loop
mov
repz
lock
xchg
and
add
mov
call
insl
push
push
add
adc
fisubl
sbb
inc
xor
sahf
pop
fs
mov
add
gs
add
mov
jle
push
add
sub
jne
sub
fwait
dec
xor
xchg
cmp
scas
or
imul
sahf
xor
cmpsl
es
cmp
mov
mov
push
jle
rclb
xor
nop
mov
xchg
add
dec
adc
fildl
sub
data16
add
sbb
jge
in
jae
inc
xor
mov
adc
adc
insb
lret
push
jl
inc
sub
push
stos
std
or
sub
das
pop
mov
xchg
lahf
push
push
mov
xchg
ljmp
mov
or
fistpll
push
rorl
std
or
mov
sarl
call
es
arpl
loope
add
aam
xor
int3
loopne
xor
out
das
bound
stos
pop
and
mov
clc
fisubrl
push
aad
fisttpll
sub
dec
mov
adc
mov
pop
jae
sub
jg
pop
cmp
jb
pop
lds
sub
ja
adc
mov
and
xorb
push
sar
je
sti
movsl
shlb
inc
mov
jg
das
and
push
xchg
insl
inc
push
loopne
mov
popa
xchg
pushf
push
rcr
rcll
out
or
sbb
lods
and
test
loopne
movsb
movsb
sub
lods
sbb
push
cmp
cmpl
add
movl
cmp
movl
jae
adcl
shrd
shr
ret
inc
mov
xor
and
shr
ret
xor
xor
ret
mov
mov
ret
mov
mov
ret
mov
mov
ret
mov
mov
ret
mov
mov
ret
mov
mov
ret
mov
mov
ret
mov
mov
ret
mov
mov
ret
push
mov
sub
movl
movl
movl
movl
movl
jmp
cld
xor
test
mov
mov
push
add
bndldx
jo
popa
push
sbb
ljmp
inc
popf
adcb
pop
mov
jl
lods
xchg
pop
jbe
test
xor
jl
into
lods
adc
sarb
or
jae
and
inc
icebp
inc
add
sbb
sti
lret
iret
aam
jmp
or
andl
xchg
sbbb
mov
pop
es
popf
aaa
ljmp
cmp
and
xchg
shlb
jae
arpl
cmp
je
lock
jp
fs
icebp
jmp
or
pusha
cs
mov
cld
pop
dec
jmp
js
xchg
loopne
test
ret
push
shll
test
rclb
ficoml
addr16
insl
mov
andb
fnstenv
xor
push
jg
add
adc
in
pop
mov
jnp
in
movb
sub
pop
aas
fs
imul
std
fsubrp
in
inc
dec
scas
test
adc
mov
jl
mov
test
ret
cmpb
inc
cmp
mov
or
icebp
shlb
jae
flds
fwait
jae
loope
fcompl
arpl
fs
or
xor
sub
fcompl
add
push
lock
popa
cmpsl
pop
test
xor
sar
hlt
mov
cli
mov
test
repnz
jmp
pop
inc
arpl
hlt
mov
push
test
je
lea
jnp
jb
out
lods
icebp
repnz
pop
addps
xchg
and
mov
cmp
mov
xchg
loope
movsb
sub
cmp
addr16
test
lea
cmp
mov
enter
cmpsb
fnstsw
add
sub
sbb
adc
mov
fstl
dec
jle
xor
mov
sbb
cmp
out
leave
lahf
pop
sub
push
sbb
push
pop
aam
cmp
xor
idivl
xchg
je
test
mov
jge
add
sbb
je
cwtl
and
inc
mov
add
push
push
push
test
shrd
add
mov
push
cmp
or
popa
negb
cmp
add
shll
lret
pop
push
mov
sub
insl
xor
loop
sbb
pop
loopne
fcoml
lods
mov
add
nop
test
xor
or
xorb
aaa
fs
inc
xchg
jge
push
dec
idivl
std
pop
ds
mov
idivb
push
sbb
dec
jnp
mov
loopne
xchg
lret
mov
or
cmpsb
in
cld
data16
cmp
xor
pop
outsb
push
pop
popa
xor
adc
cli
inc
inc
jge
push
push
xchg
inc
mov
add
cltd
xor
ljmp
andb
inc
fiadds
cwtl
insb
or
rclb
loope
js
cmp
mov
dec
cmp
popa
adc
out
int3
xlat
xchg
fsubrs
dec
insb
or
fimuls
pop
mov
dec
jbe
mov
push
push
imul
mov
mov
test
mov
scas
imul
jae
fmuls
push
iret
mov
psraw
fnstenv
lret
inc
add
push
jmp
pop
mov
iret
xor
inc
push
dec
xchg
jae
fs
cmp
cwtl
aas
ficoml
cld
insb
arpl
xor
sub
pop
pop
inc
xor
adc
cmp
outsl
pushf
mov
push
in
paddw
dec
pop
xchg
outsl
xorl
mov
loopne
xchg
push
inc
inc
mov
test
scas
jae
jp
fs
loop
js
into
iret
inc
or
mov
adc
sub
cmp
add
fisttpl
fisubrs
xor
dec
or
in
pop
cmp
out
mov
pop
ret
ljmp
test
dec
push
push
lret
icebp
or
mov
ljmp
pop
push
or
movsb
inc
popa
sub
aam
or
mov
imul
jmp
shlb
sub
fcmovu
dec
or
into
adc
or
cmp
icebp
xchg
fsubrp
lahf
aam
aam
sub
mov
iret
shlb
xlat
sub
xlat
dec
mov
push
loope
adc
ret
into
jge
lret
popf
notl
and
adc
out
movsb
push
mov
sbb
mov
cmpsb
add
mov
iret
and
aam
mov
popf
dec
adc
cmp
push
adc
pop
cmc
addb
xor
push
ficomps
inc
pop
sub
in
jne
sub
jg,pt
push
push
push
push
cmp
adc
jecxz
mov
cwtl
adc
xchg
shll
dec
push
stos
xchg
pop
gs
repz
iret
cmpsb
sub
and
jae
inc
push
lods
cmp
xor
imull
push
enter
mov
shrl
sbb
xor
sbb
push
cli
inc
adc
repnz
subb
lret
adc
pop
or
xchg
sbb
inc
pop
adc
cmp
call
inc
aas
and
mov
jg
xchg
and
pop
rcrb
pop
dec
or
adc
jo
adc
dec
daa
repz
mov
data16
mov
mov
pop
cmpsb
fdivrp
loopne
dec
and
jg
or
fsubl
cmc
dec
out
dec
shr
out
adc
xchg
xor
mov
jbe
lahf
aaa
nop
sarb
jp
movl
movl
movl
movl
jmp
lds
mov
inc
xchg
inc
inc
das
ljmp
loope
pinsrw
bswap
jne
lea
aaa
push
inc
adcb
lret
xchg
sbb
xchg
shl
add
aas
sarb
movsb
hlt
or
je
es
add
int3
outsl
or
jo
test
scas
mov
inc
or
dec
popf
mov
loop
push
je
and
sub
mov
outsl
in
and
fiaddl
xchg
ret
mov
dec
loope
dec
inc
lea
add
inc
mov
ja
enter
pusha
aas
outsl
loopne
popf
cmp
sti
sub
int
loop
in
in
adc
push
ds
fsts
cwtl
push
mov
pop
push
outsb
shrl
xlat
clc
mov
ja
cld
fcomi
jecxz
sbb
jmp
jns
mov
rol
mov
add
pop
decl
and
sub
jmp
rcl
mov
xchg
xor
movsb
mov
fst
cld
adc
xor
inc
out
inc
in
jg
adc
daa
cmp
daa
ds
add
cmp
out
hlt
subl
mov
cltd
add
mov
mov
lods
dec
outsl
gs
cmp
call
cwtl
cmc
xor
adc
adc
imul
dec
lret
dec
xchg
int3
imul
adc
inc
cs
sub
lret
mov
dec
sbb
test
or
sbbb
fistpll
arpl
or
cmp
fs
bound
ss
test
xchg
xor
xor
sbb
pop
dec
pop
xchg
xchg
bound
rorb
mov
into
or
fimull
rolb
idivl
cwtl
mov
xchg
sbb
test
xchg
sub
repnz
stos
sbb
repnz
mov
jae
lcall
pop
pushf
and
gs
arpl
cvtps2pd
xchg
cwtl
jnp
or
xor
daa
add
movsl
dec
in
sub
stos
imul
mov
aam
xor
add
add
cs
pop
adc
repz
mov
xor
mov
ret
sub
push
and
xor
out
gs
sahf
insl
roll
test
enter
fucomi
test
xchg
mov
jmp
insb
cs
sbb
inc
pop
mov
mov
pop
xorl
into
movsl
jnp
adc
inc
jbe
cld
sahf
iret
jnp
enter
sarl
pop
ds
aad
add
jl
sub
jg
cmpsl
insb
jp
lahf
xlat
rclb
stos
jecxz
in
push
fs
es
sar
mov
daa
insb
mov
ja
add
add
pop
adc
dec
mov
es
dec
movsl
movsb
pop
mov
pop
sbbl
mov
data16
cs
cmpsl
push
or
push
jno
inc
jmp
jl
pop
shrb
lret
mov
or
add
cmp
rcrb
stos
aad
adc
xor
mov
or
stos
push
arpl
inc
data16
addr16
hlt
mov
ret
sub
pop
dec
cmp
push
ja
pop
xchg
mov
in
and
hlt
shrl
mov
xor
inc
cld
ret
ficoml
jle
add
lcall
pop
add
popf
pop
mov
daa
xlat
inc
and
pop
fdiv
in
movsb
dec
fwait
aas
ret
jbe
dec
ficoml
sbb
inc
daa
pop
ror
imul
daa
dec
inc
loop
cltd
pavgw
daa
pop
rdseed
or
clc
cmp
jns
mov
xchg
lret
lret
ss
add
push
outsb
adc
xchg
mov
outsl
repz
xchg
mov
mov
cmp
hlt
pop
sbb
xchg
out
and
dec
and
sahf
pop
push
add
sub
lods
imul
icebp
call
inc
ljmp
jnp
sti
movsb
jmp
pop
fsubrs
add
xor
xchg
xchg
lods
push
subl
jecxz
push
imul
mov
fimuls
or
out
in
jl
add
mov
adc
leave
sbb
adc
jbe
lcall
push
stc
pusha
movsl
fistl
pop
sbb
mov
dec
clc
sub
fstpt
lock
mov
cli
jg
or
mov
jnp
mov
push
xchg
pop
out
pop
and
and
pop
mov
sub
adc
or
shll
imul
out
loope
jmp
sbb
bound
push
jns
ret
je
xchg
rcrb
lcall
roll
mov
add
bound
std
mov
add
divps
cmpsl
inc
xor
test
fnsave
xor
inc
dec
repz
mov
popa
pop
xor
outsb
xchg
pop
pop
ljmp
leave
add
int3
xchg
xchg
pushf
push
jle
ret
es
imul
mov
jge
cs
inc
mov
stos
dec
mov
add
add
in
xchg
mov
imul
ja
push
or
das
cmp
lcall
sbb
xchg
cmp
sub
sub
mov
jo
add
and
test
adc
lret
add
rcr
mov
nop
ja
test
xchg
int3
js
mov
and
add
mov
dec
cmp
cmp
xor
and
dec
lock
je
fdiv
add
lock
test
adc
xchg
sub
int3
ret
xchg
add
adc
jge
jb
out
mov
mov
outsb
aad
or
call
xchg
int
movl
movl
mov
mov
jmp
pop
inc
sti
and
jbe
pop
js
fisubrl
pinsrw
psubusb
push
inc
inc
ds
stos
sub
cmp
sbb
xor
xor
jp
test
add
out
xchg
fmull
push
add
dec
sbb
loope
roll
bound
and
mov
mov
sbb
shrb
mov
andl
push
ret
dec
cmp
inc
sarb
pop
int3
pop
fwait
push
inc
pop
inc
rcr
jmp
repz
fisubrl
fimuls
sub
pushf
or
and
daa
inc
adc
stc
gs
shlb
test
flds
dec
popf
jmp
jl
xchg
ret
xchg
pop
inc
add
or
adc
lcall
lea
jb
in
dec
lcall
mov
push
test
cmp
cmp
xorb
push
ret
mov
sti
lods
jp
loopne
repz
push
cmp
inc
loopne
sub
adc
xchg
sbb
stc
inc
jne
xlat
fcomip
cmp
out
mov
test
stos
and
js
fsubrs
pop
sbb
xor
jae
dec
pusha
pop
pop
loop
sub
shrl
xor
pop
sub
push
inc
aam
xchg
cmp
daa
rol
push
xorb
dec
push
dec
mov
rcrb
lock
ss
and
adc
cli
scas
adc
lods
mov
mov
or
sbb
lret
inc
push
and
inc
hlt
lahf
xor
and
mov
out
xchg
and
cmc
clc
jle
xorb
ljmp
mull
outsl
inc
mov
pushf
outsb
push
enter
mov
xchg
and
dec
shlb
dec
das
lcall
enter
dec
push
lods
mov
or
jmp
fs
in
cmp
call
xchg
popf
loopne
or
adc
or
mov
loopne
adc
lahf
stos
leave
cmp
xrelease
setne
ficoml
pop
mov
mov
data16
push
mov
notl
les
movsl
jmp
pop
add
or
jae
movsb
push
divb
repnz
out
pop
mov
das
adc
adc
lcall
stos
out
sub
out
push
push
cmp
adc
or
cmp
mov
or
out
xchg
sbb
or
pop
cmp
lods
jbe
inc
pop
cmpsb
les
mov
loope
sbb
nop
sbb
sbb
pop
add
inc
ds
gs
xchg
pushf
into
hlt
pop
insl
jg
pop
aas
adc
sub
xchg
xchg
test
add
lret
fs
mov
fdiv
addl
xor
hlt
stc
sti
push
mov
mov
push
in
and
loopne
repnz
iret
iret
mov
add
aas
mov
idivb
mov
hlt
xor
addb
pop
in
inc
leave
xor
ja
ret
sbb
xchg
adc
in
sbb
gs
push
lret
sarl
and
cld
sub
push
or
or
pop
xor
in
inc
pop
shll
xchg
sarl
insl
jmp
ss
and
out
mov
js
cmp
dec
push
js
xor
rcll
sub
mov
cltd
lds
xor
jmp
xchg
nop
hlt
adc
sbb
or
daa
inc
push
mov
cmpsb
and
xchg
cmp
xchg
mov
fistpl
loop
xcrypt-cbc
cmpsl
roll
ret
repz
ljmp
or
cwtl
rcll
inc
add
add
popa
inc
sbb
repnz
mov
test
adc
cmp
loop
xchg
sub
push
adc
test
push
int3
push
ror
out
lcall
jbe
cmc
hlt
pushf
adc
or
inc
dec
jle
rcrb
mov
into
into
pushl
ljmp
add
aam
mov
adc
seto
dec
into
addr16
stos
add
sub
adc
cmpb
addr16
inc
xchg
jl
inc
adc
cli
test
pusha
mov
xchg
jns
mov
adc
cmpsb
ficomps
cs
xlat
cmc
mov
adcb
xchg
lcall
sub
dec
test
stos
je
push
sbb
jle
pop
xor
push
shll
mull
inc
lock
enter
xchg
add
mov
int3
sub
add
cli
xchg
mov
jle
movntps
aas
pop
jns
xor
in
mov
shll
xchg
push
push
scas
cmp
outsb
aad
push
inc
lcall
jb
cmp
xchg
pusha
jmp
leave
dec
clc
es
les
in
mov
mov
xchg
fmul
adc
mov
clc
jbe
call
and
mov
imul
and
fdivrs
mov
cmpb
lods
gs
pop
enter
or
and
iret
pop
daa
stc
inc
and
rorl
fcoml
icebp
outsl
mov
icebp
push
out
sti
cmp
lods
cs
jp
push
out
repnz
xchg
sub
xchg
inc
or
sbb
cmp
insl
icebp
cltd
xchg
dec
cmp
xor
leave
dec
and
aad
mov
xchg
arpl
ret
dec
aad
cmp
es
or
add
dec
add
mov
test
push
mov
adc
mov
jns
pop
fldcw
ljmp
dec
push
sub
mov
and
xor
imul
mov
push
sub
push
movl
jmp
ljmp
stos
lea
jbe
xchg
xchg
adc
les
cmpxchg
xchg
mov
push
ret
xchg
iret
fdivl
pop
cmp
test
jp
mov
shll
icebp
xchg
and
outsb
jb
in
xor
sub
gs
addl
imul
mov
or
repnz
bsf
jg
lcall
push
or
xor
pop
xorl
jno
imul
pop
xor
imul
or
aaa
sub
xor
popa
inc
mov
push
dec
cmp
mov
mov
stos
inc
sub
push
in
xor
les
je
mov
lcall
pop
pop
inc
mov
out
cmp
pop
jge
fbld
and
pop
xchg
insw
testb
jecxz
out
hlt
jo
push
mov
mov
sbb
pushf
add
sub
dec
rcrb
mov
out
cmp
nop
push
adc
aad
sti
mov
and
sbb
or
sbbl
push
push
insl
push
daa
mov
jno
int3
cmp
stos
inc
scas
mov
mov
pop
arpl
mov
push
hlt
scas
ret
idivl
sahf
pusha
sub
rorl
ja
cmp
js
test
loopne
xlat
xchg
pop
mov
push
cwtl
icebp
sahf
xchg
inc
ss
imul
pop
loop
add
cmpsl
fdivl
scas
pop
les
adc
bound
inc
sub
aad
push
sti
insl
jbe
ljmp
hlt
xchg
aam
push
ret
xor
nop
add
sub
jecxz
pop
add
dec
push
fcomps
insl
mov
nop
and
xorb
add
jne
and
adc
jle
scas
add
mov
xlat
aad
and
repz
mov
daa
loop
mov
pop
lock
mov
xchg
ljmp
or
jl
mov
cwtl
stos
rcl
sarb
insb
int
inc
push
inc
les
fsts
pop
fmulp
lds
push
lods
push
repnz
sti
add
test
and
iret
test
inc
inc
lcall
nop
stos
cld
data16
fildll
sarl
lret
sti
sbb
leave
std
das
mov
xchg
lea
fildll
lods
sahf
addr16
xor
sti
imull
std
xchg
sub
rolb
and
popf
push
fnstcw
lret
adc
mov
fistps
fwait
icebp
add
dec
pusha
insl
pop
dec
pop
stos
ja
hlt
cmp
rcl
repz
sahf
mov
xchg
dec
or
pop
or
dec
xor
and
fimull
push
xchg
inc
jbe
mov
pushf
sbb
inc
xor
mov
fists
insl
lds
pop
test
sbb
sub
jbe
mov
mov
pop
lea
xor
ljmp
int
mov
push
and
in
into
adc
cmpsb
jo
mov
xchg
aad
mov
dec
pop
inc
test
jl
lock
and
cs
inc
outsb
rcll
shlb
inc
fucompp
pop
clc
nop
movsl
nop
or
mov
push
cmpsb
sar
inc
cld
push
scas
mov
xchg
jae
ljmp
shll
mov
pop
dec
inc
loopne
push
movsb
mov
jno
lods
jae
cs
jbe
sub
xor
int3
sub
inc
push
test
jp
sub
mov
push
dec
cmc
sub
and
push
mov
rcll
push
hlt
and
iret
insb
sbb
mov
mov
sbb
mov
mov
fcmovnb
xor
xlat
mov
aad
dec
lret
cmp
inc
aas
jge
fsubrs
adc
out
jmp
xor
and
js
xchg
inc
mov
or
sub
pop
sbb
inc
jge
jne
xor
jno
popf
into
xorl
dec
mov
xchg
test
mov
sbb
hlt
stc
aas
stc
sub
js
setb
dec
mov
jnp
ja
jbe
and
mov
cmpsb
sub
aaa
in
sbb
adc
lods
fs
dec
in
push
cmp
or
pop
xor
dec
mov
stc
fildll
popa
mov
sub
sub
dec
lret
xchg
pop
sub
fs
pop
jl
ficomps
ss
insb
lea
les
xchg
pop
test
pop
inc
les
pop
addb
dec
xor
dec
lods
pushf
jno
dec
pop
sbb
mov
fwait
lods
xchg
push
mov
mov
xchg
or
push
mov
dec
insl
or
push
lret
and
bnd
jmp
pop
fisubl
fcom
fbld
insb
ret
sbb
hlt
mov
clc
and
mov
decb
mov
adc
cmp
inc
xchg
addr16
pusha
and
push
xchg
dec
sbb
std
gs
shr
sub
shll
enter
mov
mov
cmp
in
mov
repz
xchg
pop
repnz
fiadds
arpl
stos
push
and
leave
fstpl
inc
or
xrelease
int
or
cmp
and
les
jns
orl
and
divb
mov
outsb
xchg
aam
xchg
mov
pop
sbb
stc
repnz
pop
pop
jge
popa
add
scas
add
or
pop
mov
sbb
shl
fwait
adc
aas
out
movl
movl
movl
movl
mov
xor
add
mov
or
sub
mov
mov
and
or
mov
or
mov
mov
sub
mov
mov
mov
mov
mov
xor
jmp
xchg
mov
imul
push
xchg
rorb
pinsrw
psubusw
lret
inc
es
nop
cmpsb
in
call
ret
daa
push
add
mov
cmpsb
nop
mov
xchg
arpl
xchg
imul
pop
fiadds
mov
push
mov
emms
pop
and
sub
add
pop
loopne
mov
jge
andl
xchg
sbb
xchg
pop
push
sbb
inc
lods
xor
arpl
insb
ret
std
enter
adc
je
and
pop
daa
mov
flds
std
hlt
cld
mov
pop
adc
outsl
outsb
xor
pop
jmp
jbe
mov
pop
lods
xor
push
mov
data16
sbb
les
cmp
and
test
das
jnp
dec
pop
xor
push
push
loopne
mov
dec
mov
mov
hlt
icebp
mov
data16
movsl
inc
ja
pop
mov
icebp
fcmovne
jo
or
push
mov
sub
xchg
mov
inc
sbbb
dec
repnz
test
lock
cs
mov
or
aad
shlb
gs
sbb
popa
mov
cmp
adc
movsb
stos
enter
hlt
mov
aas
shl
add
js
int
out
jb
sbb
add
pop
jle,pn
sbb
scas
pop
jno
lret
hlt
shrl
xchg
lahf
cs
div
ret
lds
or
iret
sbbl
stos
jne
leave
pop
in
inc
ljmp
in
icebp
sbb
test
test
movsb
sbb
push
cmc
sti
dec
jb
cmp
out
imul
push
xchg
ficomps
ret
jecxz
pop
jno
flds
mov
cmc
inc
mov
inc
xor
inc
mov
mov
rorl
int
sub
shrb
cmpsb
mov
pop
inc
mov
fcom
push
xor
jno
jle
outsb
jle
in
adc
push
dec
cli
inc
fcomps
mov
fidivrl
and
sbb
cmp
xchg
cmp
and
pop
ss
push
inc
mov
dec
mov
jecxz
stos
xchg
jae
aaa
jle
push
pop
ds
mov
jno
test
in
test
repnz
adc
ficoml
shrl
sti
mov
mov
nop
sub
adcl
jae
and
lret
and
mov
data16
lahf
test
mov
movsl
dec
hlt
inc
testl
sbb
sub
or
std
ss
adc
dec
andb
dec
daa
inc
mov
sbb
shll
pop
inc
in
rcll
pop
mov
sub
into
push
sahf
loop
aam
cmp
faddl
push
cmp
cmp
xlat
add
movsb
xchg
test
dec
push
shr
out
mov
loope
jae
inc
test
out
xor
sbbb
mov
call
xchg
fcomps
adc
shrl
jae
add
fsubr
shrl
pop
ficompl
mov
orb
or
loopne
inc
and
jmp
xchg
and
test
orb
dec
pop
movsb
sarb
xchg
dec
cmp
enter
daa
cld
xchg
int3
pushf
or
pop
sub
cs
sub
mov
inc
cli
sbb
mov
shrl
lea
int3
scas
fwait
jecxz
inc
stc
cmp
inc
rclb
test
and
and
mov
push
mov
scas
sbb
lret
sub
dec
rolb
inc
add
jg
mov
bnd
fs
popf
xchg
ret
mov
jne
scas
fs
mov
outsl
mov
jns
jl
sub
xchg
fbstp
mov
les
hlt
sbb
push
mov
pop
push
pop
push
call
pop
cmp
hlt
orb
jge
jno
pop
add
rorl
test
repnz
andl
lcall
xchg
and
aaa
movsb
dec
pop
inc
mov
sub
fcompl
mov
aas
test
and
cmp
nop
push
and
mov
pop
dec
mov
stos
sahf
dec
and
std
add
mov
xor
xchg
pcmpeqb
xacquire
icebp
cmp
xlat
xor
push
sub
mov
cmpsb
mov
lret
cmp
pop
test
pop
xchg
fwait
js
repz
jecxz
push
arpl
inc
loope
or
mov
mov
sbbb
cmp
loopne
cli
xchg
push
xor
xchg
push
pop
popl
repnz
dec
push
adc
jle
dec
xchg
mov
mov
dec
pop
movsl
adc
xchg
push
pop
loope
mov
push
fadd
adc
mov
hlt
cwtl
add
pop
outsb
xor
into
push
or
cmp
lods
ds
cltd
xor
out
addr16
sti
pop
scas
pop
les
rorl
aad
xchg
insl
leave
out
lret
popa
inc
mov
inc
jne
inc
jl,pt
cmp
mov
popa
lock
call
rorb
add
mov
xor
nop
mov
xor
jnp
jnp
out
roll
arpl
test
out
sub
mov
rcll
pop
lods
push
icebp
int3
sahf
xor
in
test
xor
inc
cltd
es
pop
adc
stc
in
pop
xchg
inc
and
lea
pop
arpl
notb
int3
jl
xor
push
mov
push
or
jno
gs
jnp
adc
test
cmp
loope
add
xor
mov
imul
lea
mov
mov
imul
mov
mov
or
xor
div
mov
jmp
push
fadds
sub
push
and
cmp
dec
fiaddl
pinsrw
mov
pushf
push
jge
dec
mov
inc
pop
xor
and
push
cld
jne
sarl
cld
cld
push
or
hlt
adc
mov
imul
inc
sub
jmp
jmp
pop
xor
xor
pop
jl
lds
push
add
outsb
jnp
mov
fucomi
xchg
dec
test
fs
pop
pop
xor
push
adc
jle
xlat
lahf
into
and
js
mov
push
mov
mov
adc
popf
stos
jnp
jl
adc
movsb
mov
decl
fs
lret
adc
push
gs
jge
pop
push
shrb
adc
popf
rorb
inc
jne
dec
add
pop
addr16
pushf
insb
mov
loope
add
stos
mov
mov
cs
xchg
fcmovnu
fidivs
insb
in
xor
sub
call
push
loop
cmp
or
dec
cwtl
sarb
cs
sbb
add
sub
mov
dec
std
jl
stos
push
rorb
jbe
pop
mov
inc
leave
or
pop
test
ds
popaw
pusha
sarl
pop
jae
xlat
and
push
mov
movsb
cs
pop
scas
out
addr16
ret
es
sbb
pushfw
and
jmp
es
inc
pop
jne
sub
imul
call
lret
xlat
mov
enter
mov
test
sahf
cmp
or
lock
and
pop
dec
jg
inc
inc
mov
fwait
dec
cmp
jl
push
push
dec
sbb
rol
sub
inc
mov
dec
jl
fdivl
sbb
fwait
jb
jmp
int
mov
mov
ljmp
lret
das
ljmp
pop
nop
pushaw
fdivrs
or
xchg
cld
popa
shl
andl
fidivrl
xchg
test
loope
shl
or
jns
in
clc
out
mov
mov
add
scas
aad
mov
fistpll
or
divl
cmp
xor
in
cli
daa
in
pop
leave
lock
ss
movl
mov
xor
or
xchg
jne
and
sahf
add
jo
jo
add
add
inc
cmp
in
in
xchg
cmp
cmp
stc
rcl
dec
and
cmpsb
mov
fcmove
dec
and
add
rorl
shrb
adc
gs
test
jae
mov
mov
das
lds
divb
xor
stc
mov
mov
cmp
cld
sub
sbb
push
pop
test
and
mov
inc
mov
push
cmp
mov
insl
jbe
insl
inc
arpl
outsl
add
fildll
or
pop
mov
gs
mov
adc
cmp
dec
scas
push
mov
cmp
das
mov
addr16
ss
ret
out
aaa
jo
sub
int
rcll
lahf
stos
stc
sub
jb
xlat
push
es
add
lret
in
hlt
in
jbe
fbld
jne
dec
bound
mov
jecxz
add
fiadds
jno
xchg
pusha
cmp
inc
roll
jp
mov
adc
dec
jmp
xor
shll
mov
stos
xchg
pop
fisubs
push
popf
orl
xchg
out
xchg
ds
mov
test
testl
stos
add
cmc
mov
loop
and
mov
mov
inc
aad
cmp
faddl
les
xchg
daa
or
nop
mov
icebp
lret
mov
pop
fisttpll
mov
cltd
nop
gs
jnp
sar
imul
xor
jg
js
shlb
sbb
xor
fstpt
sbb
jecxz
pop
inc
sbb
mov
mov
out
or
jmp
dec
call
je
mov
repz
adc
test
pop
and
aaa
pop
xchg
dec
pop
int
jecxz
or
sub
dec
sub
xor
jno
ss
cmp
outsb
xlat
int3
or
mov
jl
pop
js
cmp
in
mov
arpl
xor
pusha
movsl
sbb
xchg
or
sbb
cmp
jno
adc
push
jno
hlt
fldcw
adc
cwtl
adc
popa
cmp
aaa
and
jno
popf
jl
scas
fstpl
adc
movsb
sbb
mov
push
test
inc
in
jb
shlb
int3
xchg
xchg
mov
es
xchg
int
subb
mov
int
mov
pop
enter
add
push
std
dec
pop
cmpsl
jecxz
cli
mov
dec
lret
sbb
inc
or
or
push
lods
adc
call
mov
js
insb
mov
adc
sbb
movsl
incl
mov
mov
cmp
addr16
xor
pop
testb
aam
cmp
dec
jl
out
mov
in
mov
repz
xchg
fistps
pop
xchg
call
sbb
sub
out
fs
les
xchg
movsb
lods
cmp
enter
cwtl
adc
mov
in
jb
mov
mov
imul
push
jne
jge
cld
dec
mov
hlt
dec
jne
push
leave
xor
add
and
jb
adc
xchg
sbb
push
inc
outsb
repz
xor
test
iret
arpl
mov
into
cld
mov
lea
out
flds
dec
jmp
adc
jecxz
imul
test
jbe
cmp
push
arpl
mov
test
and
add
cmp
jb
movl
movl
movl
movl
jmp
xorb
ret
xor
xor
and
nop
push
data16
pinsrw
cmpxchg
xor
jno
mov
inc
sub
mov
nop
or
jge
add
pusha
cmpsb
cmc
scas
icebp
xor
js
adc
ret
push
mov
pop
jmp
or
inc
xor
dec
or
mov
es
xchg
ss
pop
loope
gs
ret
jmp
xchg
inc
dec
arpl
stc
pop
inc
in
fcompl
pop
xor
ljmp
pop
dec
subb
mov
jle
or
bound
xchg
ds
dec
push
mov
std
bound
and
out
adc
outsb
mov
call
loope
adc
addr16
lret
movsl
int
cmp
adc
insl
push
fcoms
push
mov
aaa
es
cmp
ds
clc
adc
popf
es
andb
pop
adc
sub
loope
pop
mov
repnz
mov
movsl
aam
or
dec
inc
inc
std
lret
pop
ljmp
inc
cmp
add
dec
mov
add
scas
imul
outsl
lds
xchg
sub
addl
aad
lods
aaa
sub
cmp
or
jbe
sub
inc
std
or
sub
xor
jg
push
adcl
mov
cs
inc
jo
mov
cmp
xchg
fwait
jp
out
inc
movsl
xor
roll
cs
mov
jnp
add
mov
movsl
cmc
and
mov
and
inc
pusha
push
aad
lods
ficoms
push
adc
int3
cmp
sub
ja
std
pop
and
jge
dec
mov
repz
out
mov
mov
rcl
ret
cmc
mov
jge
pushf
dec
adc
call
sub
sar
adcb
lahf
cmp
sub
int
lret
sub
dec
add
push
cmc
jl
in
out
push
pop
movsl
icebp
push
jp
pop
inc
jns
sbbl
aad
dec
stc
cmp
pusha
in
iret
stos
loope
test
xorl
outsl
mov
pop
pusha
and
aaa
jl
cld
cmpsl
mov
push
push
mov
jg
movsl
iret
add
fcomi
xchg
aaa
ja
scas
pop
scas
or
fidivrl
call
cmp
pop
js
xor
pusha
mov
inc
mov
out
push
jo
mov
daa
subl
inc
out
jle
aas
inc
xor
aas
std
jl
mov
gs
or
cmp
int
arpl
sub
xor
pushf
cmpsb
aad
cmc
pushf
mov
adc
rolb
jnp
xchg
sbb
or
imul
fcomp
jge
fidivrs
sbb
test
stc
mov
das
loope
inc
jne
add
fcmove
mov
xchg
cmp
mov
and
or
fimuls
inc
mov
adc
push
mov
jmp
mov
cli
cli
stos
jl,pt
hlt
cmp
sarl
pop
movsb
jg
push
cmpsl
lea
dec
cli
dec
cwtl
mov
jno
nop
jecxz
mov
in
mov
int
test
mov
ds
mov
jbe
cmp
or
mov
and
cmp
mov
orb
lods
fs
mov
adc
add
mov
aas
lock
mov
xlat
daa
mov
and
push
mov
or
dec
mov
sub
push
pushf
loopne
mov
cltd
inc
popa
cld
add
out
lcall
mov
jnp
dec
adc
push
clc
mov
push
out
and
ds
xor
xor
lods
sbb
sbb
int3
and
xchg
mov
in
cltd
xchg
fabs
cmp
inc
scas
nop
adc
mov
or
ret
sbb
xchg
mov
in
aam
mov
mov
cmp
xchg
pop
fdivrs
push
mov
ss
dec
and
mov
adc
dec
es
adc
out
dec
por
xchg
addr16
dec
cli
mov
std
jge
popa
stos
cmpsb
dec
jg
mov
sub
inc
fnsave
imul
dec
mov
and
ret
mulb
push
cmpsb
ret
jne
mov
popf
jo
cmpsb
shll
mov
andb
fadd
dec
adc
loopne
mov
pop
sub
sub
push
add
sbb
lds
insl
mov
and
jb
aaa
jns
cmp
ljmp
pop
pushl
fdivs
lret
outsb
das
xchg
and
jp
popf
push
cmp
push
inc
ljmp
aam
outsl
fcmovnbe
add
negb
pop
jnp
popf
sub
adc
or
cmp
xor
enter
jbe
jnp
scas
or
push
loop
jnp
insb
xchg
sub
cli
cmp
sub
push
push
mov
dec
lret
inc
and
mov
push
test
xchg
cmp
call
rol
xchg
cmpsb
daa
popf
prefetch
mov
popa
ljmp
xchg
lods
cltd
dec
adc
jns
or
into
cld
add
cwtl
mov
push
cltd
push
push
xchg
xor
dec
out
xchg
xor
dec
push
xor
mov
sbb
xlat
dec
add
rorl
ljmp
popa
leave
sbb
je
cmc
std
arpl
dec
enter
inc
inc
cmpsl
jle,pt
fwait
lea
shll
adc
push
adc
test
push
lea
mov
imul
je
lods
pop
sbb
les
divl
sub
cmpsl
inc
xchg
arpl
adc
lcall
pop
mov
inc
hlt
rcll
add
inc
lock
inc
in
sbb
add
movl
movl
movl
mov
mov
or
lea
add
movl
jmp
add
inc
sti
daa
push
cs
cmpl
psubb
movsl
mov
insl
adc
imul
sbb
xchg
jnp
adc
mov
in
mov
in
je
inc
jmp
rorl
ljmp
fisubrs
pop
cltd
out
dec
pop
and
daa
xchg
mov
fistpl
adc
mov
or
cmc
push
jb
fstps
mov
jne
cmp
sub
mov
test
jg
cmp
pop
cmp
push
mov
in
sbb
out
pop
hlt
push
pop
jecxz
sbb
jp
mov
aaa
popf
stos
xor
mov
mov
mov
dec
cmp
lret
shlb
lahf
lret
addr16
dec
and
mov
cs
das
cmp
or
fwait
xor
ljmp
pop
xchg
push
aad
pushf
dec
inc
andb
sbb
pop
mov
imul
xor
mov
cmp
inc
in
xor
sti
inc
aad
add
incb
out
mov
fistpll
stos
mov
scas
mov
mul
mov
xchg
pop
or
push
test
mov
sarb
cli
ja
ret
jmp
cld
cld
and
dec
inc
outsb
aam
int
lds
iret
sarb
addr16
cld
xchg
ja
aad
aaa
scas
icebp
cmpsb
or
pop
and
push
mov
push
push
or
jno
xor
ror
cwtl
aas
in
test
jbe
stos
pop
sub
push
pop
inc
nop
dec
test
jnp
xchg
scas
js
inc
pop
fstl
out
movsb
in
or
jl
xor
scas
cli
scas
ja
push
xor
add
outsl
lods
adc
loop
inc
lret
jb
and
mov
jno
adc
cli
repz
lret
push
bound
xchg
mov
jge
pop
jne
fists
hlt
jae
jns
cmp
mov
ljmp
lods
inc
inc
sub
mov
xchg
aam
sub
fisttps
ret
addr16
mov
dec
mov
scas
inc
icebp
into
pop
jle
mov
pop
imul
mov
dec
sub
or
loop
pusha
dec
fsubr
imul
mov
jge
shld
push
fs
mov
leave
sbbl
cmpsb
and
icebp
ret
and
clc
cs
lahf
push
mov
xchg
mov
fsubl
sub
stc
int3
dec
adc
mov
out
xor
dec
mov
mov
cmp
xor
push
pop
jmp
push
push
cmpsl
add
stos
and
xchg
sbb
and
push
sti
sub
and
mov
mov
mov
or
mov
scas
fistpl
and
popf
div
mov
or
dec
ret
inc
mov
and
xchg
mov
push
inc
mov
inc
and
push
imull
enter
enter
das
wrmsr
pop
loopne
in
adc
out
inc
out
mov
xor
lcall
mov
dec
jnp
cs
int
mov
push
adc
sbb
xchg
cli
push
data16
push
bound
adc
xchg
and
mov
popf
sub
jmp
jge
xchg
xchg
rorb
mov
xor
xchg
adc
cmp
xorl
mov
mov
adc
fldl2t
jno
pop
sub
cmpsb
inc
mov
cli
bound
xchg
imul
push
and
cmpsl
enter
pop
or
scas
add
lret
das
sub
xlat
xor
enter
sub
cmc
adc
inc
dec
lret
popf
cs
cli
movsl
fisubrs
les
jb
mov
sub
pop
movsl
test
pop
mov
cli
mul
sbb
fcompl
jp
adc
mov
mov
cs
into
stos
xor
mov
movsl
popa
divb
sbb
mov
mov
ljmp
mov
jns
mov
sti
lds
jae
rorb
mov
sbb
repz
adc
push
pop
outsl
into
lahf
sub
xor
mov
pop
inc
and
addr16
cmp
xor
test
adcb
out
mov
adc
in
int
sbb
sub
xlat
or
dec
cmp
jecxz
test
leave
test
repz
inc
xchg
bound
xlat
jnp,pn
pop
mov
adc
cmp
xor
and
xor
fnstenv
repnz
mov
fimull
fwait
cmpsb
mov
mov
or
es
pop
cmpsb
ja
lea
xor
pop
add
sbb
rcrl
pop
pushf
sbb
sub
mov
ret
lret
cmp
mov
out
outsb
cmp
ljmp
ds
rcl
mov
sarb
ljmp
stos
inc
xchg
sub
clc
std
push
out
rcrl
dec
lock
mov
push
mov
jg
push
test
push
stc
mov
je
xchg
ss
xchg
inc
inc
mov
mov
ret
cmp
or
jbe
inc
jl
in
rolb
daa
addr16
push
cmp
jns
scas
cld
and
out
cmp
pusha
jae
sub
repnz
mov
mov
adc
loop
repnz
das
push
fs
mov
add
notl
xor
xchg
sbb
in
pop
mov
add
movl
movl
movl
movl
movl
mov
mov
sub
add
mov
imul
mov
mov
jmp
aad
sub
ss
adc
xchg
fistl
push
xchg
add
paddusw
mov
xchg
sti
jp
add
jecxz
and
pop
sti
js
jb
out
pusha
push
sar
bound
or
test
xchg
lretw
out
pop
scas
insl
ret
cld
dec
mov
cmpsb
push
fisubs
jbe
jnp
call
inc
dec
inc
or
lret
inc
push
jne
in
xor
in
jne
lods
addl
dec
and
xor
push
pusha
sahf
cmp
scas
or
jno
mov
or
pushf
insl
out
lea
push
xor
aaa
loope
repz
call
inc
mov
push
add
mov
mov
xor
fwait
and
jp
mov
xorl
cs
popf
fstps
ss
mov
mov
or
xor
mov
jle
aaa
sbb
in
sbb
std
add
push
mov
push
jle
vmwrite
out
sti
xchg
fnstcw
pop
inc
outsl
call
sti
xchg
shrl
xlat
test
pop
or
in
pop
rcll
xchg
add
mov
out
mov
cwtl
loop
or
sahf
jge
pop
push
lods
cli
sbb
icebp
mov
out
fcomps
imul
dec
scas
cwtl
js
and
push
sub
daa
sbb
mov
and
popf
adc
cmpsl
xchg
inc
orl
clc
test
imul
jecxz
gs
insb
imulb
jl
xor
ja
push
or
fucom
or
setns
adcl
mov
sub
dec
xchg
jae
fisttpl
test
mov
xchg
and
xchg
jl
ja
leave
out
xor
push
movsb
fyl2x
stos
fwait
cs
lea
sub
fbstp
sub
or
jmp
incb
data16
or
das
das
sub
insb
mov
popa
mov
dec
es
int
adc
stos
cmpsb
jne
fnsave
mov
mov
gs
nop
fiaddl
sbb
xchg
sbb
mov
and
sahf
pop
push
stos
jge
sarb
sub
xor
sbb
jb
dec
pushf
outsl
push
cmp
adcl
stc
pushf
inc
or
cmpsl
lods
imul
data16
in
imul
push
add
inc
mov
pop
lret
shll
test
push
add
inc
and
nop
mov
testl
jle
mov
pushf
out
and
sub
push
rorb
jp
fcomps
mov
ds
test
fistpll
sub
add
aad
loopne
cmp
push
add
out
or
adc
xor
andl
in
in
aas
mov
and
fwait
and
jno
jecxz
movsb
adc
outsb
sbb
jp
inc
aad
out
lret
ss
fsub
stos
pop
push
adc
stc
dec
mov
aas
mov
cltd
and
mov
lea
repz
ret
paddsb
adc
cli
adc
test
xor
jmp
shll
pop
in
sub
xchg
or
xor
xor
sbb
jno
or
out
dec
cmpsl
xchg
cmp
push
out
cmp
movsb
loopne,pt
push
imul
into
scas
test
sub
out
add
jp
inc
mov
and
jle
mov
adc
dec
mov
sub
lret
es
cmp
es
rorb
add
sahf
mov
std
popa
dec
adc
pop
movq
jae
xchg
xchg
jne
lret
testl
push
testb
test
or
stos
leave
pop
ds
pop
mov
addb
fidivl
lahf
mov
inc
mov
popl
mov
xchg
xchg
fimull
dec
cmpb
jb
push
sti
clc
dec
loope
cmp
add
bound
data16
dec
mov
mov
out
mov
mov
add
mov
test
outsb
inc
cmp
or
loopne
and
iret
and
xchg
xor
ss
ljmp
xchg
push
push
insl
xchg
mov
not
pop
cmpsb
sbb
cmp
js
data16
push
iret
hlt
add
and
rcrb
push
movsb
cwtl
jno
cmpb
pop
das
loope
and
push
add
mov
mov
add
push
jge
push
out
aad
mov
std
int
pop
dec
cltd
js
je
cmp
test
mov
int3
jle
xor
adc
mov
ljmp
xchg
mov
mov
test
mov
push
xchg
mov
inc
add
adc
jle
and
jns
les
loope
jp
lock
push
movsl
and
divl
inc
cs
outsl
roll
outsb
xlat
test
int
xorb
adc
sub
int
jnp
insb
popf
aam
push
int3
jb
in
ds
ret
or
faddp
aam
or
jmp
mov
cltd
jmp
data16
lds
lret
mov
lret
mov
sub
icebp
stos
movsb
aad
inc
cmp
mov
aas
cwtl
mov
xchg
jo
stos
xchg
and
pop
add
dec
test
fistl
shlb
sub
loope
test
bound
push
mov
lods
dec
jl
adc
stos
gs
jae
mov
inc
ljmp
movsb
jo
mov
aad
lret
adc
mov
adc
push
push
or
jl
popa
inc
mov
jbe
cmp
div
xor
mov
xor
mov
mov
add
xor
sub
mov
mov
mov
mov
mov
sub
mov
imul
mov
or
sub
mov
jmp
out
aad
aad
aad
adc
aas
into
xchg
add
sub
xor
or
inc
mov
xor
ja
test
test
pop
sbb
cmp
andl
clc
pop
loope
nop
xchg
dec
cmp
inc
dec
inc
pushf
and
push
roll
mov
gs
aas
adc
dec
inc
mov
scas
ret
insb
fistl
mov
mov
cli
stos
pop
jge
dec
enter
scas
push
enter
inc
js
push
scas
cmp
lahf
jae
mov
dec
test
loopne
icebp
adc
in
jne
xor
dec
inc
cltd
cld
faddl
sbb
sub
rcr
sub
mov
push
popa
cli
jae
sub
repz
ret
sbb
aaa
lret
mov
lcall
hlt
bound
sub
ud1
and
movsl
inc
cmp
orb
cwtl
dec
out
pop
dec
sbb
add
pop
imul
imul
pop
dec
sbb
inc
add
sar
addr16
jmp
sbb
mov
pop
sbb
or
lret
xchg
sahf
fs
push
ret
xor
pop
mov
add
and
inc
call
fs
adc
pop
dec
fwait
sti
xchg
insl
aad
mov
xchg
jnp
xchg
shlb
xchg
test
inc
lea
adc
xchg
pusha
imul
lods
sub
in
cmpsb
scas
imul
nop
iret
mov
stc
add
adc
adc
xor
pusha
and
fcmovne
subps
call
frstor
pushaw
pop
fnstcw
bound
dec
loop
dec
lea
fadd
push
mov
cmpxchg
mov
popf
pop
faddl
and
ficompl
test
dec
dec
sbb
sbb
clc
add
mov
sahf
sbb
out
scas
loopne
stos
in
cmp
iret
fldt
xchg
jns
in
sahf
jae
lahf
xor
inc
test
cld
sbb
cmp
iret
xor
mov
cltd
pushf
xor
pop
lea
ret
int3
cmp
dec
inc
lret
cltd
sbbl
lea
jmp
arpl
imul
mov
jle
mov
sbb
fwait
pop
imul
andl
xchg
rorl
cmp
or
jp
hlt
rcll
cli
adc
loopne
sbb
push
inc
fisubrl
pusha
negl
jge
outsl
scas
lret
movsl
enter
aam
jge
xor
clc
shrb
or
jge
bnd
aas
fstp
insb
iret
xchg
cmc
adcb
out
imul
cmp
iret
and
pop
sar
add
mov
xor
cmp
iret
xor
jno
pop
lret
xchg
cmp
or
rcrb
repz
stos
xlat
pop
jl
push
or
out
cmp
aad
and
pop
mov
ds
rolb
sub
ljmp
push
aad
dec
mov
popf
xor
testb
fwait
dec
aad
std
je
popl
add
cmp
mov
inc
push
popa
add
dec
test
and
mov
call
adc
sahf
push
cmp
notl
dec
pop
idivl
cmovns
fimull
add
pop
cs
cmc
inc
je
ss
loop
or
sub
ja
pop
sbb
je
insl
xchg
daa
adc
jbe
aam
movsl
sbb
push
out
mov
adc
rol
test
movsl
pushf
xor
into
clc
es
fidivs
pop
cwtl
dec
mov
mov
outsb
pop
in
orl
repz
xchg
jl
clc
inc
aaa
inc
pop
gs
pop
mov
pop
or
cmp
addr16
jbe
loopne
cmc
sbb
test
ljmp
lods
pop
adc
or
cmp
cmp
insl
adc
inc
dec
add
adc
movsb
enter
pop
lds
dec
lret
mov
jmp
stos
iret
and
movsl
mov
mov
xor
jns
pop
repnz
lcall
pop
xchg
cmp
push
in
pop
jmp
divb
imul
pop
fidivrl
jle
fcoms
and
mov
js
loopne
es
loope
repnz
mov
adc
dec
lret
inc
enter
xor
xchg
and
mov
sbb
jae
mov
aam
jb
adc
fldenv
test
out
movsb
jns
cmp
and
rclb
fidivs
cli
xchg
xchg
jno
push
mov
inc
xlat
add
or
mov
movsl
outsb
gs
cmp
je
lods
inc
fisubs
jo
rolb
and
or
jge
in
pop
fidivrl
imul
frstor
adc
xor
mov
bound
xor
testl
std
xchg
ret
mov
popf
je
fsubs
imul
popf
cmpsb
xchg
cmp
gs
mov
test
mov
aaa
dec
sub
and
push
xchg
inc
push
into
and
pop
pop
shlb
pop
leave
out
nop
cmpsl
aam
out
mov
push
stc
testl
push
imul
cmp
jecxz
inc
std
mov
clc
test
and
dec
mov
push
mov
out
imul
jg
jnp
cli
jbe
pop
jbe
adc
cmp
xchg
cld
std
lahf
dec
fdivs
daa
lcall
add
mov
xor
mov
sub
add
cmp
jbe
xor
inc
mov
mov
movl
movl
movl
movl
movl
movl
mov
mov
add
xor
xor
div
mov
xor
mov
mov
div
mov
xor
div
mov
sub
mov
and
imul
and
xor
cmp
je
push
movl
movl
movl
movl
movl
mov
mov
imul
xor
add
mov
and
sub
mov
mov
add
xor
mov
mov
and
sub
mov
mov
mov
mov
mov
xor
or
imul
or
mov
imul
xor
mov
div
add
mov
and
imul
and
xor
cmp
jne
pop
pop
pop
leave
ret
mov
mov
ret
mov
mov
ret
mov
mov
ret
push
mov
sub
push
push
push
movl
movl
jmp
imull
xchg
xchg
aam
xchg
scas
xchg
xor
add
lds
sbb
xlat
inc
out
pop
cmpb
pop
jne
clc
cld
mov
push
ret
push
xchg
sub
adcb
sub
fadd
sub
xchg
inc
in
clc
ja
iret
push
xchg
js
iret
jle
jle
mov
dec
jg
jne
mov
scas
data16
dec
push
ret
inc
mov
imul
bnd
xor
mov
dec
addl
ljmp
in
inc
clc
out
mov
andnps
lahf
xchg
sbb
in
in
out
cli
mov
jb
mov
and
pop
out
xor
cmc
loop
std
shll
jo
dec
pop
mov
sbb
in
mov
adc
imul
icebp
sarb
pop
outsb
icebp
and
add
aas
mov
pop
and
divl
ret
cmp
icebp
scas
in
mov
rcll
test
add
aad
clc
aad
out
or
pop
pushf
jmp
pop
sub
mov
nop
lea
daa
mov
in
cmp
xor
lock
inc
mov
aas
sub
sbb
xchg
push
add
cmpsl
lods
jne
lret
jb
push
mov
jle
xchg
add
add
je
clc
loop
loopne
repnz
dec
adc
pop
ret
aaa
inc
xchg
ret
paddusw
or
cmp
mov
pop
outsb
and
mov
les
pushf
jle
outsb
cmpsl
add
mov
lret
add
incl
fcoml
loope
sarl
popf
jp
movsl
xor
ja
cli
inc
scas
test
push
fstp
aaa
insb
sahf
xchg
rep
mov
sbb
adc
xor
lcall
jecxz
push
out
xor
adc
ret
jle
es
hlt
data16
mov
loop
jno
push
int3
and
clc
stc
std
dec
in
sbb
lods
xor
xor
and
pop
stc
into
sbb
lea
cli
push
jnp
jb
or
inc
int
sbb
sbb
ret
jmp
into
stc
insb
stc
je
fs
repz
cmp
in
push
mov
aaa
data16
push
xchg
nop
bound
imul
fisttps
and
and
std
mov
or
xorl
outsb
jge
inc
dec
das
inc
pop
sub
loope
addr16
bound
mov
jae
int3
mov
cmp
push
mov
scas
sbb
add
mov
or
pop
or
or
push
push
push
or
xor
js
sub
xchg
pushf
pop
out
test
es
pop
sbb
pop
add
jmp
test
enter
sbb
mov
mov
mov
movsb
ljmp
ror
jmp
hlt
lods
test
sbb
lds
ds
inc
push
pushw
pushl
hlt
adc
sbb
cmc
iret
and
push
pushf
stos
pop
hlt
mov
cltd
or
cltd
mov
xchg
icebp
xchg
ficomps
nop
out
mov
loopne
fldt
movsl
nop
popf
sbb
or
clc
sbb
mov
dec
push
and
cs
inc
cmp
hlt
daa
push
jl
int3
or
insb
lret
test
outsb
or
daa
mov
mov
xor
push
sti
iret
cmp
loopne
pop
pushf
jle
ljmp
js
dec
add
xor
xchg
sub
insb
mov
mov
dec
jmpw
pop
mov
test
mull
in
sbb
cli
data16
shl
sub
inc
lcall
jo
lahf
ja
sbb
sbbb
pop
lea
cmp
and
ss
mov
xchg
inc
mov
mov
cmpsb
xchg
inc
loop
xchg
xchg
stc
cld
jne
or
pusha
pop
outsb
arpl
xchg
rcll
jae
dec
jl
mov
inc
das
cwtl
lcall
cltd
push
xchg
adc
sbb
or
push
icebp
inc
inc
mov
fistps
cltd
lods
stos
xchg
pop
lahf
mov
mov
pop
fnsave
cmp
push
adc
fldcw
cwtl
inc
lds
test
test
fcmovbe
fwait
dec
push
push
push
sbb
movsl
test
cld
pop
jbe
fcoms
pop
xor
dec
in
adc
outsb
push
adc
or
push
lods
lret
pop
cwtl
mov
inc
sbbl
les
insl
pop
bound
pop
pop
pop
mov
stc
dec
pushf
jmp
iret
jmp
fbstp
cmpsb
jge
mov
cld
mov
or
adc
js
add
lahf
xor
out
test
sbb
lods
or
inc
sbb
sub
xor
jno
iret
or
sub
xchg
inc
not
addr16
das
pop
push
mov
add
mov
fsubr
rcr
mulb
inc
xorb
test
loopne
sti
pop
add
fmul
movsl
ss
bound
cmp
and
mov
pop
xorl
test
into
pop
xor
dec
xor
push
jl
call
xchg
xchg
jge
cmp
xor
lcall
mov
adc
ror
cmp
gs
popf
loop
lret
add
push
xchg
sbb
push
cmp
cmpsb
sub
stos
dec
data16
cmp
push
push
aaa
mov
push
test
frstor
adc
mov
divl
jmp
cmp
or
push
icebp
mov
nop
xor
mov
jno
mov
ror
mov
push
stos
jno
push
mov
out
imul
in
xlat
fwait
mov
shr
dec
lock
jle
push
or
cmc
iret
add
outsb
sbb
jge
test
xor
dec
dec
push
mov
insl
mov
mov
xchg
and
xlat
add
mov
jmp
sub
test
mov
pop
aad
sarb
pop
cmpsb
push
loop
inc
push
push
aaa
and
jl
dec
sbb
adc
and
pop
icebp
iret
push
inc
inc
push
push
jne
mov
test
sti
rcrb
and
push
les
pop
add
sub
xchg
test
cltd
nop
icebp
out
push
mov
sub
mov
scas
jb
sub
mov
jno
add
popf
add
iret
movsb
das
jp
mov
imul
in
inc
xor
test
cmp
xchg
roll
mov
inc
outsl
jle
dec
pop
shr
xchg
xchg
add
inc
mov
pusha
add
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
jmp
pop
fdivl
jo
push
push
mov
test
dec
repz
rsm
filds
xchg
je
push
jno
xor
setl
mov
xchg
mov
or
sahf
pop
sbb
cmpl
insl
pop
fidivrs
jp
fstl
and
fmuls
cmp
inc
mov
mov
arpl
and
push
mov
pop
adc
mov
jno
inc
out
or
push
xor
mov
pop
inc
mov
pop
mov
and
cld
sbb
repz
sbb
ljmp
ss
fcompl
xchg
stos
mov
cmp
fcos
sarl
int
cld
cltd
outsb
rorb
je
jns
lmsw
mov
pop
mov
cmpsb
and
scas
pusha
and
data16
adc
or
lods
cmp
lret
das
ds
xor
xchg
xor
lock
pop
cmp
scas
jns
cmp
dec
mov
out
outsl
cmp
dec
es
jns
test
mov
sub
cld
lods
jmp
faddl
lods
jbe
int3
fsubl
sub
insb
mov
stc
jae
imul
pop
addb
sub
mov
sbb
mov
orl
shrl
jmp
push
or
mov
scas
insl
mov
mov
mov
mov
push
iret
inc
pop
jbe
pop
push
and
gs
imul
cmp
rcr
push
cmp
sbb
fstps
and
mov
xor
dec
loop
sbb
jo
push
cmp
mov
das
mov
aam
jb
lret
pop
shl
pop
add
adc
es
dec
insb
jb
insl
loop
push
outsl
mov
scas
cmp
out
insb
push
aas
mov
cmc
arpl
sub
mov
das
inc
push
push
push
mov
test
sub
imul
mov
cmc
mov
mov
je
rcrb
outsb
add
inc
xchg
js
xor
call
or
push
sbb
insb
push
sbb
int3
push
or
fildll
and
testb
aas
add
movsl
inc
mov
add
mov
xor
int3
fmul
stos
outsl
cwtl
cmp
mov
mov
push
xor
lods
js
shrl
xchg
sbb
xchg
xchg
dec
jo
in
adc
mov
leave
mull
xchg
scas
add
je
pusha
scas
cltd
mov
pop
callw
shll
jmp
mov
push
mov
lret
leave
and
test
add
sub
lock
dec
scas
pop
and
lds
addr16
dec
sarl
jns
xchg
lahf
nop
add
test
pop
jbe
adc
lock
xchg
mov
cmpsb
aam
adc
pop
iret
sbb
ja
aaa
clc
xor
out
cwtl
pop
mov
lods
arpl
test
sbb
popa
in
xchg
cmc
sub
hlt
inc
and
cli
sarb
pop
fdivrs
dec
imul
sub
xchg
popf
cmpsb
stos
sub
sub
xchg
push
call
mov
aam
jbe
clc
pop
sbb
mov
aad
push
inc
orb
sbb
sbb
inc
pop
and
int
sub
std
or
ja
dec
lcall
and
leave
sub
jno
nop
mov
mov
shrb
push
nop
scas
push
out
inc
mov
shrb
mov
xlat
leave
or
mov
adcl
push
ror
sub
lods
add
cmp
roll
sub
pop
push
and
insl
mov
inc
andb
mov
jp
or
mov
orb
and
inc
push
mov
cmp
insb
aam
pop
in
in
popf
mov
adc
or
jne
mov
cmp
movsb
xchg
mov
fisubl
inc
jbe
and
or
dec
xchg
mov
lods
mov
popf
imul
mov
jae
add
jbe
pop
ret
in
idivb
in
or
imul
nop
xor
rclb
movsl
fimull
cmp
es
clc
sbb
xor
dec
add
adc
mov
mov
fwait
xor
jbe
mov
idivl
sbbb
mov
cmp
push
xchg
xchg
mov
adc
jo
ret
xor
jp
aam
fmuls
cmc
dec
or
mov
scas
cmp
adc
fdivs
cmp
mov
lret
mov
mov
movsl
sbb
out
fbld
sarl
cmpsb
dec
sahf
test
adc
in
call
int
outsb
pop
jo
add
neg
sub
pop
popa
shr
cmp
ds
sbb
fcmovnb
fimuls
sub
and
and
aad
mov
or
leave
adc
sub
cmp
sbb
mov
jp
ds
es
or
push
mov
out
rolb
cmp
pushf
cmp
cmp
and
roll
data16
adc
mov
scas
sti
test
add
sbb
mov
dec
inc
aad
xchg
divl
cmp
out
add
fdivs
into
pushf
pop
or
imul
mov
xchg
push
mov
shlb
dec
aaa
or
xchg
pop
sbb
scas
dec
das
in
cld
push
testl
inc
xchg
aam
mov
loopne
out
mov
hlt
mov
and
push
inc
xchg
adc
jb
jae
adc
fstl
jae
adcb
add
in
cmpsb
inc
jb
lods
adc
outsl
push
leave
loop
leave
xlat
add
jae
jge,pt
popf
sub
adc
rorl
pop
dec
outsl
inc
add
sbb
in
jg
sub
and
inc
adc
iret
pop
hlt
shrl
sub
stc
test
arpl
jb
xchg
fwait
push
inc
ljmp
and
icebp
push
sub
arpl
js
mov
rcrb
inc
enter
ftst
leave
add
movb
outsl
test
out
mov
arpl
icebp
or
pop
dec
pop
aas
test
mov
mov
divb
or
cmp
and
dec
inc
jae
sub
xor
addl
pop
pop
fmulp
push
adc
push
fildll
cmp
mov
inc
cli
movl
mov
mov
mov
mov
push
add
push
adc
jmp
lcall
xor
push
pushf
mov
stos
pop
add
mull
test
jo
test
xor
mov
daa
dec
test
xchg
ds
xchg
add
inc
or
in
mov
pop
jg
jno
push
mov
jle
pop
call
adc
jmp
es
xchg
dec
push
sti
pop
inc
mov
imul
dec
stos
js
inc
in
loop
and
sub
cld
mov
jae
daa
push
adc
jno
popa
and
rcrb
test
imul
dec
xchg
xor
rorl
dec
nop
lahf
jle
cwtl
push
ljmp
xchg
add
je
and
pop
sbb
ret
scas
inc
cmpb
mov
loopne
iret
push
int3
in
xchg
xor
iret
fcoms
sbb
inc
xchg
out
or
scas
xchg
cmp
outsb
lods
gs
js
outsb
push
addb
incb
or
mov
cs
arpl
enter
mov
pop
adc
jmp
lret
adc
add
inc
cs
repz
xchg
shrl
sarb
adc
xor
cs
sub
push
ljmp
mov
or
add
les
dec
dec
out
leave
inc
into
xchg
dec
scas
dec
push
fisttpl
mov
sub
sub
mov
dec
into
pop
sti
pushf
and
jb
dec
daa
addr16
mov
pusha
mov
addps
mov
fidivrs
xchg
lret
in
outsl
test
lcall
and
add
sbb
inc
hlt
adc
pop
mov
repz
std
mov
pop
and
popa
inc
movsl
mov
mov
push
push
call
xchg
mov
sub
movsb
bound
out
cli
cmpsb
or
push
sub
lss
pop
repz
mov
xor
jno
jns
cmc
xor
jbe
mov
mov
xlat
loop
pop
pop
sub
xor
dec
cli
cmp
cwtl
popa
addr16
xor
jb
sub
outsb
repz
mov
mov
or
pop
mov
sub
insb
imul
sbb
das
fdiv
decl
fbstp
int
add
mov
roll
or
or
xchg
pop
rclb
enter
loopne
mov
xchg
xchg
mov
decb
in
ljmp
loop
int
cmpsb
je
mov
mov
test
or
test
or
mov
add
test
repnz
sbb
xor
mov
addr16
push
pushf
sub
roll
xor
push
bound
pop
mov
or
inc
push
mov
testl
xchg
and
xor
fsubrs
fwait
mov
or
fbstp
addr16
xchg
ja
roll
lock
ret
push
shlb
ja
pop
enter
mov
push
sub
mov
jmp
pop
pop
cli
or
mov
aad
rcrl
mov
mov
sahf
inc
or
out
movsl
inc
jg
inc
adc
js
loope
sti
arpl
sbb
je
sub
loopne
jge
pop
lahf
inc
sub
jns
add
mov
dec
adc
aam
or
andb
fcoml
test
pop
icebp
mov
and
ficompl
push
xor
push
mov
and
pop
or
scas
pusha
cmp
xor
pusha
or
adc
sbb
xchg
mov
and
insl
cld
movsl
jg
mov
int3
cli
or
or
sbb
movsb
dec
xchg
addr16
dec
sub
fwait
dec
lock
or
outsl
sbb
repz
hlt
fistps
jmp
jmp
xchg
adc
jg
stos
mov
test
fisubs
and
jne
sub
jecxz
icebp
flds
movsb
push
sarl
and
and
sbb
add
repz
orl
mov
les
div
ja
aad
imul
pop
jns
xchg
les
mov
mov
or
popa
jbe
mov
jmp
fwait
je
jno
shll
int3
jnp
int3
inc
mov
add
lods
or
in
rcll
fs
mov
insb
pusha
cli
cmpsl
and
add
xchg
jbe
inc
adc
cwtl
push
imul
shlb
mov
icebp
pop
mov
sub
push
pop
pop
movsl
shl
shr
inc
mov
xorb
and
shlb
adcl
mov
dec
cmpsb
sahf
and
pop
fdivrs
lcall
xchg
mov
add
inc
orl
adc
es
movsl
jbe
stos
test
popa
jns
xor
xlat
bound
sbb
movsl
lcall
int
faddl
xor
xor
jnp
das
mov
push
jb
in
dec
push
sub
shl
and
test
dec
xor
aad
daa
enter
out
out
pop
jne
ficoms
pop
sub
cli
fidivs
data16
fcomps
loope
dec
jno
arpl
push
lret
adc
push
mov
dec
outsb
stos
mov
std
rolb
xchg
scas
iret
loope
mov
sbb
incb
jmp
push
cltd
adc
push
inc
subb
and
shll
loope
out
jnp
mov
fmul
xor
lds
fisubs
lock
inc
and
cmp
mov
movsb
jp
push
pop
lea
ljmp
add
mov
leave
jo
pop
and
dec
sub
sti
pop
mov
add
dec
iret
call
push
add
dec
repz
adc
mov
sbb
sahf
xor
int
dec
roll
icebp
ret
jnp
jecxz
sub
lods
pusha
insb
ss
out
or
inc
daa
test
daa
xor
or
mov
or
jg
shlb
sub
dec
jecxz
jge
loope
movsb
xor
popa
mov
daa
scas
mov
xchg
loope
xchg
xchg
cmp
das
fimuls
scas
jl
stos
pop
pushf
sub
sbb
clc
fwait
inc
push
mov
les
xor
sahf
aas
in
sbb
mov
xchg
add
mov
mov
sub
mov
jmp
mov
and
cwtl
sub
inc
jmp
push
xchg
add
mov
jne
loop
daa
cmp
js
adc
jle
loopne
ret
inc
adcl
push
hlt
cmc
or
iret
daa
fistl
mov
push
addr16
test
pop
xor
popa
stc
or
mov
aam
ficoml
popf
xchg
jns
and
jae
ret
or
in
hlt
in
icebp
faddl
aas
shl
xlat
shrl
rcr
stos
lods
pushl
mov
scas
cmc
xchg
mov
jo
out
cltd
movl
mov
add
cmp
add
or
add
mov
test
mov
xor
cld
xor
repnz
cmp
faddl
fsubs
fsubl
out
mov
adc
dec
js
jmp
sbb
push
lods
and
sbb
adc
xchg
jp
jge
fwait
add
xchg
jl
mov
out
bndstx
mov
test
cli
or
mov
or
imul
pusha
mov
clc
and
jbe
and
and
gs
mov
or
dec
xchg
add
dec
mov
ret
das
outsl
sub
xor
mov
scas
or
adc
lahf
call
pushf
js
inc
mov
sti
sub
cmp
add
shrb
sbb
xor
in
popf
xor
and
xchg
insb
fldcw
inc
fucomi
popf
or
popf
aam
mov
iret
lock
push
sbb
inc
fists
movsl
xchg
jne
test
mov
mov
mov
mov
cwtl
push
push
or
mov
shl
fmuls
sub
movsl
in
adc
cmp
mov
cmova
rol
popf
mov
inc
lcall
outsb
sar
sbb
inc
adc
adc
lods
adc
jg
imul
push
adc
push
lahf
insl
xchg
mov
movb
sbb
cmp
xor
ja
orl
out
sbb
push
cmp
xchg
out
repnz
repz
adc
jg
les
gs
imul
idivb
aaa
sbb
fildl
sahf
aam
cmp
std
adcl
xchg
in
test
jb
hlt
ljmp
das
pop
mov
sbb
cmp
mov
mov
cmpl
cmc
or
addr16
xchg
and
out
in
jb
mov
loope
push
and
push
fdivrs
and
rcl
dec
xchg
out
mov
mov
fadds
sbb
fsubrl
push
rcll
sbb
cmpsb
push
jmp
dec
enter
ret
fwait
cltd
inc
sbb
dec
ds
jb
mov
push
mov
popa
xorl
sub
imul
sbb
lock
shlb
gs
pop
cmpsb
mov
cmc
std
out
add
pop
jle
jmp
xchg
fistpll
sbb
xchg
ss
adc
mov
popa
outsl
inc
decb
ret
addr16
mov
loopne
andb
push
stos
insb
push
lret
insb
xlat
sub
sbb
jge
jae
clc
xor
mov
in
jmp
sub
mov
aad
inc
sbb
ret
inc
mov
in
adcl
pop
cmpsb
xor
das
and
stc
jl
divb
xchg
popf
cmp
push
icebp
popa
cld
insb
dec
jmp
repnz
stc
add
xchg
push
dec
xchg
push
mov
jno
nop
or
in
ret
nop
jp
int3
push
mov
add
pop
test
leave
rol
inc
push
cs
and
out
lgs
mov
sub
push
and
or
mov
xor
in
cs
ficoms
stos
stc
cwtl
add
test
sub
dec
and
and
sub
test
xchg
pop
pop
mov
or
inc
push
inc
out
nop
pop
mov
aas
insb
fiaddl
jecxz
in
sub
rcll
jecxz
sahf
lret
pop
icebp
jg
jns
cltd
imul
cmpsb
ds
in
sbb
xor
pop
fs
jp
mov
cwtl
sbb
daa
stos
lea
jmp
fs
aaa
jnp
cmp
insb
fdivs
imul
add
adc
je
push
lahf
sub
loop
jecxz
pop
or
adc
out
fs
pusha
jle
xchg
nop
fwait
inc
fiadds
rcll
mov
inc
fiaddl
push
sbb
sti
fs
lods
outsb
cmp
mov
in
subl
loop
imul
test
sub
clc
xor
cltd
adc
mov
mov
dec
insl
int3
imul
test
movsb
insb
mov
fs
xchg
scas
mov
adc
cmp
fcomps
sahf
jnp
ljmp
outsb
ret
mov
mov
lahf
in
idiv
mov
sbb
aam
mov
add
pushf
push
nop
sarl
rcrl
or
dec
sbb
cld
add
test
push
aaa
push
dec
cltd
stc
roll
pop
jae
cmp
cli
call
ficoml
jg
inc
adcb
fidivrs
idivb
dec
push
push
mov
jbe
lret
pop
outsb
push
or
inc
adc
data16
add
cs
cmpsb
jg
sti
push
sahf
xor
xlat
adc
std
cmpb
cmp
in
adc
sahf
pop
xor
stos
or
cmpsb
add
in
mov
add
jb
mov
outsl
mov
sbb
outsl
adc
lods
jp
in
mov
push
std
sahf
mov
xchg
jle
xor
call
inc
aad
lcall
adc
fsubp
push
pop
pop
sbb
jle
jl
fistpl
mov
xchg
imul
ficoms
pushf
xchg
in
mull
cmp
out
push
fadd
pop
js
imulb
inc
mov
stos
pop
stos
repz
push
idivb
jg
cmp
add
popf
inc
inc
or
add
and
adc
jno
lret
sbb
pop
adc
arpl
mulb
aad
es
adc
pop
sub
mov
push
ds
mov
and
and
dec
and
lods
mov
lods
ljmp
adc
mov
push
push
push
push
call
add
adc
shld
shl
mov
mov
mov
mov
mov
mov
push
add
push
adc
push
push
call
mov
mov
sub
mov
sbb
mov
push
jmp
lcall
or
fisttpl
mov
push
add
dec
inc
xor
mov
cmp
loopne
xchg
sbb
in
and
push
adc
ficoms
nop
inc
xor
xchg
mov
jmp
out
mov
mov
lret
dec
dec
enter
add
icebp
test
mov
pusha
fs
xor
stos
jg
popa
sub
int3
ret
fbld
dec
sbb
mov
cmp
xchg
out
popa
stos
fs
xchg
adc
arpl
sub
add
and
adc
leave
jmp
jecxz
mov
jmp
sti
call
mov
sbb
or
mov
test
rcrl
mov
inc
dec
inc
loopne
orb
cmpsl
sti
or
lret
sub
lock
xor
jae
or
std
or
push
iret
insb
mov
iret
rcl
pop
mov
imul
fimull
pop
mov
pop
add
push
inc
jbe
inc
subl
push
outsl
jecxz
xor
xchg
das
mov
and
inc
and
push
je
adc
insl
mov
ret
lahf
push
mov
add
xor
push
add
fimull
xchg
mov
mov
mov
jge
cwtl
or
dec
sub
rol
inc
sub
add
out
outsl
jbe
mov
repnz
mov
sarl
pop
sub
sub
pop
xchg
icebp
push
cmpsb
cmp
add
pop
jecxz
adc
cli
into
sbb
jo
inc
adc
push
xorl
outsb
lahf
test
das
mov
stos
addr16
inc
mov
insb
inc
loopne
insl
jmp
aaa
rorl
add
insl
push
stc
test
pop
add
sub
jg
int
lods
test
add
lret
std
inc
inc
sub
jg
subb
cli
push
nop
or
sub
fisubs
or
mov
rcrb
adc
inc
cmp
push
mov
pop
push
and
or
fsubr
shlb
out
pop
cmp
push
xor
leave
test
cmp
test
xor
ja
int
pop
sub
mov
mov
imul
push
out
sbb
xlat
fidivrs
mov
outsw
div
add
or
pop
or
lahf
add
push
outsb
xchg
lock
cmp
xchg
add
cmp
add
clc
cli
mov
pop
bound
pop
ljmp
dec
pop
pushf
nop
pop
arpl
adc
jl
xor
addl
xor
outsl
jbe
rorb
and
ss
fidivrl
stc
cmp
repnz
outsl
movsl
push
xlat
xchg
push
mov
icebp
push
int3
push
idiv
push
adc
mov
mov
arpl
add
fdivs
mov
outsb
out
xchg
aas
std
mov
lret
push
mov
inc
mov
sub
test
fyl2xp1
push
pop
jecxz
ret
pop
cmpb
or
lock
rorb
mov
aam
in
pusha
ja
pop
adc
jl
popf
add
fistps
and
rcrb
int3
jno
dec
push
leave
push
pop
pop
mov
sub
je
cmc
addr16
sahf
mov
xchg
sbb
lret
xchg
outsl
test
das
mulb
add
insl
stc
in
xor
ss
sbb
adc
or
dec
inc
sbb
or
loope
push
loopne
into
push
ja
call
adc
dec
adc
mov
mov
pusha
lea
adc
jle
cmp
dec
push
jns
negl
cmovle
jnp
popf
mov
loop
or
pop
jmp
push
push
push
dec
addr16
nop
popf
inc
push
call
movsl
pop
xor
hlt
incl
rcr
decb
jg
test
fwait
jmp
push
pop
movsl
push
cmp
pop
sbb
repz
lss
add
inc
inc
out
and
adc
mov
ljmp
pop
nop
ljmp
pop
jns
pushl
loope
xchg
mov
cmpsb
adc
mov
outsl
loope
outsb
and
xor
data16
in
aas
movsb
sub
xchg
push
pop
jnp
xor
ret
out
push
or
jae
mov
push
inc
xchg
out
test
mov
lods
shr
fisttps
into
xchg
sub
xchg
stos
ljmp
dec
test
inc
cmp
sub
mov
mov
mov
mov
mov
and
sbbb
sbb
sub
and
shrl
add
jmp
aad
jmp
push
arpl
pop
rolb
mov
mov
imul
add
test
cs
ss
les
mov
xlat
xchg
fwait
jmp
mov
jmp
repz
cltd
push
sahf
mov
adc
dec
mov
pop
out
dec
jb
xchg
fidivl
call
aad
js
adc
dec
add
subb
cmpsb
pop
jl
push
mov
sahf
mov
ret
jmp
dec
in
ljmp
xlat
jle
add
mov
out
add
dec
adc
jne
pop
fidivl
scas
lcall
push
inc
notl
push
and
test
sub
push
mov
sub
fists
xor
repz
jns
lea
mov
pop
stc
dec
add
sub
inc
push
insl
fimull
test
test
sbb
adcl
sarl
lods
mov
xchg
cmp
outsb
cmp
mov
sti
and
fwait
or
adc
into
pop
stc
push
xlat
xor
out
cmpl
mov
lret
int
jmp
mov
jno
xacquire
int3
cmpsb
loop
fsubr
xor
jbe
push
inc
fcmovb
mulb
pop
cmpsb
lahf
pop
mov
or
fnstsw
bound
mov
call
mull
sub
clc
in
pop
adc
or
cs
adc
push
fstl
or
dec
les
pop
adc
icebp
mov
jbe
or
imul
bound
in
lahf
es
shlb
mov
xchg
push
pusha
add
mov
lret
inc
mov
dec
mov
xor
ljmp
and
push
pop
repnz
addr16
jnp
push
mov
mov
pop
add
sbb
add
adc
out
lcall
add
add
adc
shr
xor
or
or
xor
mov
push
xor
mov
mov
mov
jmp
mov
sbb
popf
or
mov
add
faddl
jnp
icebp
xchg
adc
mov
rclb
call
mov
sar
pop
mov
ss
xchg
les
fidivrl
fisubrl
mov
lods
gs
outsb
fcmovu
and
int
adc
shrl
pop
xchg
xchg
and
pop
ret
xor
aaa
call
call
xor
iret
outsb
pop
aam
test
int3
or
clc
js
call
movb
or
lock
sub
insl
pop
or
call
fsubrs
xor
xchg
sbb
add
outsl
iret
cmp
and
rorb
movsb
enter
cmp
xor
fsub
xor
pusha
sahf
cmpsl
pop
xchg
ret
idiv
bound
mov
push
pop
push
subl
push
mov
ljmp
push
dec
xor
adc
jle
sub
mov
fldenv
xor
scas
ljmp
xchg
push
jmp
ret
jb
mov
dec
mov
jae
mov
loope
push
idivl
sub
push
and
pop
mov
inc
add
out
cmp
adc
and
jp
push
pushf
js
fnstenv
xchg
lret
and
shlb
mov
in
lea
je
in
xor
lock
out
pop
cmp
dec
dec
fists
jae
mov
mov
out
inc
or
dec
ja
mov
in
push
or
pop
mov
ljmp
insl
in
lcall
push
mov
cltd
je
ljmp
dec
popa
add
call
cld
stc
xor
inc
pop
sub
popf
dec
mov
call
ret
jl
sub
mov
inc
ja
jge
rcl
test
pop
sbb
xor
pop
inc
and
mov
adc
jp
mov
mov
push
outsl
test
inc
mov
pop
jle
adc
fwait
movsl
cld
pop
xorb
std
dec
cld
adc
and
fcoms
int
neg
sarb
or
mov
clc
shll
ret
arpl
mov
icebp
xor
test
xchg
shl
rorl
xchg
push
fnsave
sub
or
imul
fildll
std
and
rcll
fsubrp
in
cmp
rorl
mov
mov
jp
xchg
cli
ffree
jp
mov
jo
xchg
out
popa
ret
push
ficoms
push
addr16
in
push
pop
jne
fisubrl
enter
outsl
xadd
rorb
or
les
aas
movsl
ljmp
addb
cmc
xorb
xchg
arpl
outsb
mov
jo
jmp
and
sub
leave
ret
cwtl
jp
and
xor
enter
sbb
pop
xor
mov
lock
sbb
jmp
daa
xchg
ret
in
aaa
mov
xchg
adc
inc
imul
and
arpl
push
push
lds
jmp
out
int3
scas
add
jno
gs
mov
in
jo
push
xor
addb
jg
pop
or
inc
test
out
cltd
and
pop
pop
push
sbbl
fisubrs
mov
bound
sbb
sub
jno
jno
movsb
leave
jns
jae
mov
dec
xchg
cmp
test
push
ret
sbb
pop
ljmp
inc
mov
or
inc
add
inc
mov
mov
addr16
and
cmp
movsl
add
mov
mov
jbe
mov
hlt
movb
jo
iret
push
scas
sbbb
xchg
sbb
pusha
adc
pop
mov
mov
out
lcall
lret
daa
or
mov
cmc
sub
mov
jbe
cld
les
and
std
stos
mov
jb
and
push
jle
outsb
sahf
adc
test
xor
and
out
mov
pop
push
dec
inc
jle
jl
sbb
cmp
inc
or
xchg
jp
jmp
test
cmp
aam
fwait
jle
sarb
std
inc
enter
pop
jecxz
leave
mov
push
dec
inc
imul
clc
pop
pop
lahf
xor
cs
push
aad
or
lds
rcll
js
out
gs
les
mov
call
insb
loopne
test
ja
mov
lret
fbld
in
lcall
jecxz
insb
sbb
or
dec
es
xorl
les
push
pop
out
js
and
loop
in
fwait
pop
fmuls
xchg
and
aad
mov
push
jp
test
jg
xchg
pop
mov
xchg
xor
and
test
or
and
mov
mov
cld
add
mov
nop
gs
xchg
jbe
iret
lock
cmp
jae
int
jle
jge
inc
ss
jle
xchg
or
in
into
cmc
xor
jno
fimuls
or
popa
xchg
jmp
xor
pop
adc
addr16
jp
sub
dec
in
pop
push
jecxz
je
out
insb
ja
data16
mov
push
leave
pop
add
je
stos
xchg
cmp
push
jo
movsl
and
lret
and
sub
imul
or
test
cli
mov
mov
lea
int3
cmpsb
adc
add
mov
imul
pop
decb
or
sbb
in
and
int3
adc
push
cltd
insl
dec
subl
addr16
add
outsl
or
inc
testl
aam
push
xchg
xchg
pop
xor
jo
fcmovnb
flds
dec
ficomps
aam
or
push
mov
jns
jge
movsl
lret
mov
push
bound
push
cltd
iret
cmp
lods
mov
cmpsl
dec
xlat
mov
sbbb
cmc
jae,pn
loope
cld
xor
pop
fdivl
sub
outsb
mov
sub
pop
inc
dec
outsl
loopne
adc
add
pop
sbb
add
gs
pop
cmp
rcrb
and
mov
rcrb
push
repz
xchg
lods
add
test
xchg
fwait
dec
mov
adc
pop
sub
jo
xor
cmpsl
mov
pop
ficompl
add
lret
push
sbb
lahf
pop
inc
mov
addb
mov
jne
or
ds
inc
outsl
push
inc
mov
mov
and
adc
call
mov
mov
mov
add
mov
adc
mov
and
and
add
mov
adc
add
mov
adc
jmp
mov
xchg
adc
mov
ss
add
iret
je
push
fld
xchg
and
sub
pop
mov
push
mov
cmp
call
leave
ds
leave
cs
cmp
xchg
xchg
iret
mov
xchg
sbb
adc
iret
pop
fcmovb
pop
test
dec
test
cmp
mov
sti
pop
in
shlb
loop
cltd
dec
pop
pop
imul
aad
fldt
push
sahf
xchg
sbb
cmp
fsubl
inc
jnp
dec
mov
fistpl
insl
dec
xchg
jecxz
push
jno
test
gs
sarb
dec
dec
in
sti
orb
pop
xor
or
push
push
or
sub
cmp
sbb
pop
cmpsl
aaa
in
fmuls
mov
addl
push
adc
and
push
fnstcw
out
jmp
cmp
std
adc
jnp
cmpsb
sbb
jl
nop
push
jo
jl
leave
stc
out
hlt
inc
movsb
fisubrs
cltd
popa
in
arpl
in
lret
outsb
leave
ljmp
rcl
outsb
ljmp
in
push
hlt
push
sbb
rcll
adc
xchg
inc
out
adc
data16
mov
xor
mov
adcb
mov
sbb
push
mov
push
mov
mov
mov
gs
cmp
pop
out
mov
inc
jne
clc
sub
clc
outsl
stos
pop
sbb
cwtl
lock
pop
test
xlat
std
or
jecxz
mov
fldl
inc
faddl
addl
into
fadd
xchg
mov
xor
movb
les
cmp
fisttps
mov
sahf
push
push
mov
mov
cld
loop
adc
addr16
xor
test
and
push
and
in
fldcw
in
into
push
adc
push
in
mov
dec
sub
rcrl
cmpsl
mov
in
loope
insl
push
jmp
stc
imul
adc
repz
int3
pushf
mov
sub
xchg
out
mov
ljmp
jnp
lock
fistpl
loope
sti
fwait
push
add
push
pop
xchg
cmc
orb
faddl
lcall
mov
stos
andl
sbb
cmpsl
push
int3
hlt
and
mov
pop
push
test
or
adc
add
mov
jb
je
cmpl
xchg
push
mov
jne
adc
sub
fwait
pop
mov
lea
or
pop
jo
pop
mov
pop
mov
test
mov
jmp
push
cmp
lret
mov
js
xchg
push
mov
outsb
sub
adc
test
and
inc
push
jns
jbe
pop
mov
mulb
cmpsl
sahf
lahf
dec
lcall
cmp
dec
je
adc
push
and
cmpb
daa
pop
mov
jge,pt
out
dec
stos
stos
mov
aam
mov
lock
fs
xchg
xchg
jbe
sbb
inc
sbb
orb
loopne
push
int3
xlat
mov
rcrl
pop
mov
lock
or
ds
push
xor
jge
mov
jae
mov
mov
or
in
mulb
popf
les
mov
ror
push
incl
inc
mov
fidivs
in
dec
pop
dec
add
mov
movsl
test
xor
mov
int
mov
xlat
mov
mov
fdivr
push
loop
dec
js
iret
int
sub
lahf
dec
insb
mov
sbb
push
icebp
or
jno
push
int
sarb
movsb
or
lds
jne
push
mov
sbb
mov
popa
bound
lcall
or
xchg
mov
xor
outsb
add
xchg
mov
pusha
subb
mov
into
mov
dec
add
jnp
inc
add
gs
push
es
inc
sub
int3
sub
outsl
aas
outsb
push
mov
outsb
enter
push
jmp
insb
mov
loop
ror
or
sbb
in
insb
jge
ds
xchg
cmp
fwait
cmp
out
mov
mov
jbe
lods
or
ret
xor
int3
in
cmp
jb
xor
ds
sbb
adc
cmc
jp
test
sbb
ret
add
in
adc
lcall
fs
cmp
xchg
push
jmp
pop
mov
in
imul
cmp
loope
pop
cmp
stc
push
pusha
aaa
in
in
push
or
repnz
test
sbb
mov
xchg
setg
xor
ficoml
das
in
mov
aam
push
pop
insl
jnp
arpl
pop
sub
cmpsb
jle
mov
je
repnz
test
shrl
xchg
addr16
shr
dec
outsb
fstpl
xchg
cmp
scas
mov
pop
popa
fcoms
jns
pop
xchg
dec
fadds
dec
add
sub
aad
xchg
test
aad
lods
shll
jo
aad
xlat
lret
xor
test
and
shr
ss
lea
inc
cmp
xchg
jae
add
ficomps
xchg
sarb
fwait
pop
xlat
imul
test
mov
mov
movsb
jl
mov
push
pop
mov
faddl
mov
pop
push
sbb
mov
jle
nop
jns
sti
adc
fsubl
mov
jecxz
xchg
out
jbe
in
cmp
adc
outsb
or
sbb
ret
enter
enter
inc
bswap
inc
push
ret
sub
mov
insb
popf
sbb
hlt
mov
xchg
add
bound
cli
in
mov
push
inc
jge
lret
mov
arpl
mov
push
pop
arpl
inc
and
lea
fs
stc
mov
loope
test
lahf
mov
pusha
fsubrs
jbe
or
shrl
push
sbb
and
pop
sub
in
test
and
dec
jmp
je
or
int
pop
aaa
addb
lcall
insl
popa
lret
aad
dec
jo
add
stos
out
popa
icebp
aad
stos
sbb
xchg
lods
and
and
mov
std
cwtl
je
xchg
add
xchg
in
xchg
mov
into
jmp
push
mov
mov
mov
push
push
push
jmp
dec
js
gs
push
pop
cmp
xchg
add
xor
fisubrs
sbb
sahf
mov
jl
fsubrl
das
movsb
jle
push
nop
xchg
push
test
sti
xor
lock
mov
inc
leave
les
and
loope
pop
or
ret
push
push
popf
imul
cli
popa
int3
rcrl
push
test
popa
es
call
loope
stos
xchg
inc
jns
cmp
push
lods
or
push
jbe
leave
jecxz
movsb
jo
aaa
icebp
add
rcll
jmp
or
test
inc
aad
daa
jl
lcall
dec
fiaddl
nop
loopne
jge
pushf
cld
lods
mov
add
enter
jae
addb
cli
add
and
add
push
sbb
mov
fsub
in
call
imul
mov
sbb
repz
aad
ret
xchg
sub
push
divb
inc
mov
hlt
pop
adc
adc
imul
test
rolb
rorb
cmp
cld
imul
fdivl
in
cmpb
mov
shl
inc
jno
jmp
xorl
idivl
mov
jae
movsl
xchg
test
push
je
or
rcll
shll
cld
xchg
sub
mov
pop
and
scas
out
jbe
lods
xchg
cwtl
dec
pop
arpl
push
adc
or
paddw
mov
ret
ja
or
cmp
mov
das
sub
mov
fiadds
and
int
jbe
or
fs
xchg
repnz
mov
data16
fucom
jle
lcall
loop
push
sub
lock
pop
mov
mov
mov
mov
mov
adc
sub
mov
je
cmpl
pop
int3
data16
push
imul
enter
data16
xor
rcll
pop
nop
and
scas
test
ds
pop
dec
xchg
fisttpl
mov
test
insb
sbb
mov
repnz
bound
clc
fsubl
clc
xchg
fisttps
mov
test
mov
cmp
xchg
jns
mov
and
mulb
enter
cmpsb
add
jns
lret
mov
jmp
mov
sbb
es
js
inc
inc
xchg
or
pop
fistl
insb
mov
pop
cwtl
pop
adc
sub
mov
dec
cwtl
fdivs
inc
bound
mov
fisttpll
mov
jmp
xchg
add
and
decl
add
push
pop
inc
sbb
or
test
shlb
and
je
cmpsb
ror
cmp
clc
clc
dec
movsb
inc
inc
cmc
lret
or
popa
js
add
mov
jnp
pop
mov
adc
adc
in
loopne
push
sub
mov
xchg
fcoml
fcmovne
xor
arpl
popa
shrl
cmp
inc
xor
sub
cmp
mov
xchg
les
pop
sub
jnp
aad
int
lods
cmpsb
ja
jne
fdivrl
andb
imul
mov
xor
cld
je
push
xchg
jge
pop
pop
shlb
mov
sti
push
lods
xchg
data16
jmp
dec
xor
roll
sub
mov
fstps
sbb
sbb
idivl
in
arpl
dec
into
jp
ss
ss
xchg
lret
mov
ja
sub
out
aad
sub
pop
mov
mov
jmp
cmp
scas
jle
daa
cmpsb
out
push
mov
xchg
sub
adc
mov
sbb
xchg
clc
rcr
or
mov
insb
popf
dec
test
jae
arpl
leave
aam
jbe
adc
xchg
daa
push
testl
sbb
cmp
and
adc
xchg
pop
and
pop
dec
ret
mov
int
mov
mov
adc
push
test
mov
mov
jns
cld
mov
dec
jnp
push
icebp
or
clc
inc
mov
mov
gs
inc
cli
subl
cmp
cmp
nop
cmp
dec
adcb
movups
popa
add
fistpll
enter
mov
out
popf
sbb
dec
pop
or
xchg
mov
je
loope
push
cmpsl
mov
sub
sub
fs
pop
inc
xchg
lock
hlt
shll
lea
inc
dec
xchg
adc
sbb
sbb
rorb
adc
aam
xor
iret
and
lds
and
xchg
add
imulb
jge
imul
mov
in
or
addr16
or
jecxz
bound
fwait
jne
insb
lcall
mov
mov
jecxz
mov
lods
jmp
xorb
mov
ret
inc
sti
loopne
psrld
sub
xor
mov
push
in
add
jge
pushf
push
dec
ja
sti
movsb
pop
addr16
lret
pop
lahf
cmp
xchg
enter
nop
mov
or
pop
push
js
inc
pop
int3
cld
fldt
dec
je
or
es
adc
mov
push
lods
push
xor
test
mov
rol
jge
inc
xchg
mov
mov
xor
ja
notb
movsl
xchg
inc
lret
jecxz
push
adc
cltd
int3
dec
bound
inc
or
fcompl
mov
adc
push
test
cmp
imul
push
xchg
into
lea
push
sbb
aam
sub
repz
loop
jbe
mov
fiaddl
lods
mov
inc
push
sbb
in
dec
js
fistpl
hlt
shlb
mov
pushf
out
mov
mov
das
jp
jo
gs
test
jle
fs
pop
pop
fcomps
xor
mov
xchg
sub
add
mov
in
sbb
sahf
pop
inc
dec
pop
lods
or
sbb
aaa
ficoms
xor
inc
xchg
mov
push
push
cli
add
xor
jnp
fisttps
loopne
and
cmp
ret
flds
mov
imul
notb
imull
pop
js
sbb
ret
adc
scas
or
xor
push
clc
and
int
movsl
mov
aad
jnp
leave
xchg
and
adc
test
or
inc
xchg
ret
and
dec
icebp
sub
cmp
add
pop
add
push
push
push
call
mov
mov
mov
or
mov
mov
shl
mov
or
mov
xor
xor
call
add
mov
mov
push
jmp
fnstenv
inc
mov
mul
push
mov
add
pop
jae
sbb
pop
adc
aas
pop
outsl
lods
push
xor
mov
adc
gs
movsl
push
imul
push
jmp
test
or
bswap
pop
ret
and
mov
push
repz
or
scas
cmp
jb
std
fs
pusha
outsl
and
push
or
lret
data16
cmp
sbb
inc
mov
in
mov
test
mov
cli
sub
insb
mov
xchg
dec
xor
outsb
push
in
inc
pop
mov
mov
jnp
xchg
lret
mov
out
xor
inc
adcb
ret
movsb
in
jge
lods
xor
lahf
insl
hlt
iret
iret
mov
aam
jae
int3
leave
mov
sarl
pusha
std
pop
inc
or
mov
addr16
mov
inc
dec
enter
xchg
popa
pop
ret
sbb
sub
test
lds
test
std
div
pop
mov
xor
lea
cmpsl
std
insb
cmpsb
pushf
iret
jbe
imull
pop
dec
std
popa
fcomip
cmp
xchg
sub
xchg
fs
dec
jb
ret
inc
js
dec
loop
dec
push
sbb
das
mov
mov
xorb
into
add
sub
cmp
in
arpl
in
in
dec
ret
aas
ss
dec
and
sbb
jae
mov
jl
fisttpl
sub
das
frstor
out
sub
sar
mov
sbb
std
mov
xchg
cs
iret
insl
les
sbb
pushf
mov
jmp
pushf
xchg
mov
sub
cld
dec
mov
pop
mov
xchg
fs
sbb
and
adc
dec
cli
out
imul
pop
push
lds
mov
in
popf
or
xchg
bound
jae
test
xlat
bound
or
jle
mov
lods
stc
inc
sbb
and
inc
add
pop
cvtpi2ps
cld
push
xor
and
or
int
push
jo
xor
sub
fadds
popa
push
pop
xchg
nop
cmpsl
sti
sub
test
mov
jns
std
push
mov
add
lret
cmp
inc
or
xlat
xor
sbb
adc
jb
icebp
mov
mov
mov
call
add
adc
adc
in
add
dec
fwait
mov
or
or
pop
jmp
push
push
scas
lods
bound
xchg
push
lea
subl
add
mov
pop
fcomps
lock
loope
js
inc
test
mov
sub
and
imul
mov
pop
push
sub
fisttpll
ljmp
sbb
fwait
jno
cmpsl
xchg
data16
xor
pop
aam
sub
iret
fildll
adc
add
xchg
dec
hlt
lods
lahf
and
adc
fldcw
sub
js
cmpsb
cmpsb
fs
out
mov
pop
loopne
scas
cmp
mov
push
decl
ret
cmp
mov
cmp
mov
out
adc
adc
mov
pop
cmc
mov
movsl
add
pop
sbb
sbb
inc
adc
inc
inc
pusha
mov
jle
and
mov
pop
pop
daa
addb
mov
mov
mov
lret
aas
jae
arpl
in
dec
scas
es
jne
xchg
push
ljmp
insb
es
popf
es
shll
xchg
imul
out
mov
jg
cmp
cmpb
xor
dec
lds
pop
dec
push
pushf
pusha
sbb
aaa
mov
inc
shr
cltd
cmp
mull
xchg
ljmp
adc
aam
add
jmp
cwtl
stc
cli
adc
dec
or
jecxz
out
push
test
dec
adc
dec
cmp
sti
pop
mov
pop
mov
xchg
int3
push
jo
cltd
pop
es
lea
inc
shll
adc
adc
cltd
idivb
popf
and
pushf
inc
jp
test
xchg
xchg
out
jg
mov
and
cld
cltd
xor
leave
add
or
jle
xor
in
cmp
out
in
or
dec
lsl
inc
mov
mov
cmp
insb
jne
push
pop
iret
dec
and
xlat
enter
cmp
es
repnz
and
dec
sub
add
xchg
jp
xchg
mov
out
fsubp
jo
int3
mov
jb
int
mov
xor
push
cmp
cmp
sub
testb
leave
inc
jae
leave
cmp
ficoms
jmp
xchg
jle
lcall
or
push
mov
imul
adc
xor
ficomps
inc
mov
and
outsb
xchg
mov
jbe
sahf
xor
outsb
add
dec
std
adc
adc
leave
int3
rorb
imul
lahf
jl
loope
mov
cs
stos
arpl
lea
mov
cmpsb
leave
sub
shr
add
lods
mov
cmp
repz
cmp
pop
fucomi
add
aad
pop
add
loope
je
insb
or
pop
pop
mov
sbb
mulb
fcmovnbe
push
iret
cmpsl
stc
lcall
sub
or
push
push
mov
pop
add
push
fcmovb
pop
aad
xlat
data16
rcrb
es
sub
cli
sahf
out
lea
in
ss
mov
pop
fistpl
insl
xor
or
dec
mov
repz
out
fsts
test
orl
cmpsl
dec
movsl
arpl
out
fldenv
pop
icebp
push
imul
or
jns
sbb
mov
jno
or
movl
iret
jle
dec
shld
mov
daa
dec
push
aam
sbb
and
cli
inc
push
jnp
ss
lret
ficomps
shll
pop
dec
ficoms
push
pop
fists
loopne
pop
push
adc
arpl
jno
ja
test
mov
shr
jno
cmp
in
cmp
sub
cmp
popf
cmp
std
adc
jmp
xchg
adc
cmc
jge
es
sbb
or
daa
ret
idiv
or
xor
sar
cmpsb
mov
or
in
stos
rorb
aam
lods
lods
sahf
ret
in
or
push
or
jecxz
push
pop
add
adc
push
push
xor
xor
call
push
push
push
push
call
mov
mov
mov
or
mov
or
or
or
xor
xor
add
adc
xor
xor
shrd
or
mov
shr
or
mov
mov
mov
mov
mov
or
jmp
out
fisubl
push
jne
lret
sti
xchg
ret
inc
add
add
inc
push
push
jnp
sbb
into
inc
lcall
insb
adc
sbb
mov
inc
and
dec
sbb
xor
out
fmulp
ljmp
or
xchg
adc
jo
testb
jae
mov
lods
aas
cmpsb
insb
sub
jnp
popl
fdivl
inc
push
mov
insl
inc
sar
in
and
push
testl
test
and
cwtl
and
movsb
loope
push
xor
rcll
lret
fdivs
sbb
cs
outsb
or
leave
subl
xor
sub
inc
aam
test
cmpsl
movsl
and
mov
jnp
jno
fistps
jne
xor
pop
inc
pusha
push
xor
pop
out
sarb
sbb
xchg
ret
push
bnd
xrelease
push
pop
mov
addb
imul
and
sbb
xchg
mov
push
mov
sub
add
mov
mov
das
or
jo
das
lods
shll
xchg
or
xchg
mov
jb
aad
daa
lods
mov
outsb
sub
lret
xchg
in
int3
movl
stos
loop
aas
lea
mov
and
in
popa
cmp
jnp
mov
and
jecxz
out
insl
xchg
leave
mov
xchg
fistps
dec
mov
adc
adc
pushf
aad
push
cmp
lret
cmc
fdivl
jae
and
push
xor
jne
in
adc
pop
fimull
ret
lahf
into
and
test
aam
xorl
stos
inc
push
xchg
or
lods
stos
mov
mov
scas
inc
aam
aaa
stos
xchg
shrl
jl
jecxz
dec
jle
pop
mov
fdivrs
jno
mov
in
jmp
mov
data16
lret
add
repnz
das
stos
test
xor
mov
aad
mov
adc
jl
cmp
ja
test
cmp
in
and
sub
jns
bnd
adc
dec
insb
inc
cmp
ficomps
pop
repz
xchg
daa
or
setno
jae
push
or
into
mov
and
hlt
or
sbb
push
pop
pop
int
push
imulb
popf
inc
mov
faddp
nop
sub
ja
and
inc
jno
stc
jo
lcall
inc
xchg
jb
jbe
jb
sbb
xor
mov
push
pop
push
inc
push
mov
jbe
out
jg
inc
push
out
popf
loopne
sbb
clc
sbb
and
jbe
mov
insl
jae
call
out
cmpsb
pop
idiv
int3
sub
int
insl
mov
lcall
or
int
repnz
xchg
push
aas
cmpsl
popf
dec
xor
mov
shl
ja
xor
and
dec
in
inc
cmp
rorl
mov
adc
jge
cmp
sti
in
cmp
jge
aas
mov
cmpsb
dec
xchg
sarl
ljmp
loopne
sbb
xchg
rcr
pop
loope
mov
test
movsb
adcb
inc
mov
popf
adc
data16
push
mov
jmp
inc
xchg
cltd
pop
cmp
add
aas
cld
sbb
jb
xlat
popf
mov
add
or
xchg
mov
in
sti
push
add
rcll
cwtl
inc
stos
aas
cmp
mov
iret
mov
or
js
dec
adc
cmp
or
push
mov
cwtl
cli
push
fldl
clc
pop
std
les
xchg
dec
loop
mov
jmp
in
mov
imul
xchg
stc
xor
not
inc
cmpsl
mov
fdivrl
scas
jbe
inc
mov
pop
xor
shrd
gs
das
xchg
add
adc
pop
push
outsb
les
mov
faddl
dec
aas
loope
into
cmc
mov
inc
out
push
mov
mov
jmp
inc
iret
daa
push
mov
inc
cmc
clc
lcall
call
sub
mulb
lds
sbbl
and
ja
int
pop
dec
leave
mov
mov
add
int3
popaw
cltd
sub
ret
popl
cmp
xchg
sbb
jmp
lods
shrl
cmp
jl
mov
mov
fdivrs
sbb
stos
sbb
les
rcrb
push
faddp
adc
sahf
pop
dec
cmp
push
jbe
mov
pop
push
stc
loope
sub
pop
pop
jecxz
out
in
rcl
call
sbb
bound
dec
mov
fucomi
sub
into
in
cwtl
xlat
jp
lret
push
and
fiadds
xlat
sub
test
push
sbb
mov
call
addr16
ds
xchg
push
js
jecxz
adc
dec
jg
inc
sbb
hlt
dec
inc
sbb
insb
es
or
sub
mov
xchg
mov
push
cmpsb
push
push
divl
cmp
fstpl
pop
aas
add
insl
stos
test
popa
in
add
hlt
dec
xor
adc
or
int
jnp
cli
les
aam
mov
call
and
lods
ss
jne
sahf
rol
inc
jl
push
xchg
fstpl
aam
out
sub
movsb
imull
and
push
mov
mov
int3
sbb
push
scas
scas
pushf
lea
std
xchg
push
inc
pop
push
insb
ret
lock
sub
cmp
add
mov
add
push
loop
in
stos
inc
dec
add
cmp
jo
xor
mov
imul
gs
add
andb
jge
inc
or
pop
pop
and
cmp
cmc
inc
mov
pop
cli
push
mov
aam
dec
or
test
cwtl
cmpsb
mov
jecxz
mov
into
dec
dec
lahf
lret
push
fcomip
push
inc
cltd
sbb
jl
pop
push
bound
ja
sbb
mov
es
push
and
cld
ljmp
aam
test
imul
ljmpw
add
push
jecxz
pusha
mov
fisubrl
cmc
jnp
test
cmp
lret
cmp
and
jg
outsl
mov
add
aam
leave
ret
loope
aam
inc
pusha
stos
out
test
cmpsl
shrd
add
pop
shrl
mov
and
pop
outsl
push
out
and
mov
xor
dec
fsubs
mov
inc
mov
incl
add
ret
test
into
mov
push
push
push
push
call
push
push
jmp
add
lds
dec
arpl
mov
add
cmp
adc
imul
dec
jae
push
xor
jmp
dec
xchg
test
popf
xor
jg
sub
sub
sahf
xchg
fs
mov
mov
xchg
add
mov
xor
aam
dec
in
pusha
jbe
test
ret
test
xorl
loopne
ss
add
add
xor
repnz
dec
std
or
xchg
dec
dec
sti
inc
popa
notl
call
mov
rorl
lea
sbb
out
cwtl
ss
jmp
std
or
mov
call
loop
xchg
popl
cmpsb
gs
pop
inc
add
xor
xor
lea
lods
in
push
repnz
fcoml
pop
lahf
and
test
add
mov
pusha
loopne
or
hlt
popf
imul
or
dec
dec
repz
aaa
sbb
repnz
arpl
mov
jmp
dec
in
adc
mov
adc
mov
loopne
cmp
push
int
shl
fxch
pop
insl
sub
movsl
cmp
and
cmc
testb
dec
pop
ds
into
push
or
xchg
in
ret
pusha
cmp
inc
mulb
mov
fistpl
sahf
inc
nop
js
pusha
push
cmp
daa
or
push
lods
jnp
outsl
sub
mov
decl
insl
shl
ljmp
ja
pop
push
xor
fs
notl
out
in
fstp
scas
fs
shlb
and
push
dec
and
sub
in
shll
icebp
loopne
push
sbb
in
jae
and
mov
inc
pop
mov
sbb
jbe
add
lret
das
xor
sahf
out
and
jp
out
push
movsb
xor
rol
hlt
xchg
int3
cmp
xchg
or
enter
frstor
dec
pushf
xor
xchg
dec
mov
sbb
add
pop
fistps
push
mov
inc
addr16
cmpsl
int3
pop
aam
inc
or
lcall
and
mov
je
inc
arpl
push
or
and
fwait
fwait
inc
int3
js
sbb
or
das
clc
dec
movsb
ss
dec
xor
lcall
ljmp
mov
mov
inc
inc
xchg
mov
js
popa
or
xchg
add
arpl
vmovupd
mov
xchg
pop
sbb
or
mov
fwait
gs
inc
outsb
jecxz
ljmp
sub
cmpsb
aaa
add
repnz
repz
sahf
sbb
xchg
adc
inc
movsl
adc
in
and
cld
fwait
icebp
aas
fwait
push
ret
mov
xchg
add
push
ret
lahf
cmp
aam
pop
mov
mov
inc
sbb
mov
mov
dec
sub
stc
inc
jnp
cmc
mov
jl
inc
sub
call
inc
lock
leave
mov
push
and
jns
jne
lea
or
push
jne
mov
test
push
or
bound
test
loope
addr16
xor
sub
mov
dec
psrlw
adcl
adc
aas
imul
jg
lcall
or
cmc
scas
mov
dec
ljmp
xchg
scas
test
ss
or
inc
mov
iret
jo
sarb
ret
fs
gs
mov
pop
lcall
sub
es
icebp
loopne
cmp
sub
lea
xlat
rol
cmc
jnp
js
bound
int3
sbb
je
xchg
arpl
rcrb
sub
inc
dec
sarl
and
adc
repz
shl
mov
imul
ss
mov
jp
sahf
stc
pusha
adc
push
lods
push
sbb
rorl
out
push
mov
and
and
add
js
xor
loopne
repz
jl
mov
xor
lcall
mov
fs
cltd
test
push
stos
jmp
dec
popf
test
mov
divl
or
aad
push
inc
pop
sub
add
ja
mov
pop
sarl
push
jl
adc
mov
cmp
imul
add
in
jl
cwtl
xchg
popa
xchg
xchg
sub
sub
add
push
or
arpl
sub
xchg
mov
adc
mov
add
xor
icebp
shl
mov
xchg
sub
cmpxchg
mov
mov
push
and
pop
cmc
stos
jno
stos
mov
jecxz
sub
jle
loop
xor
xor
xor
and
and
mov
jb
adc
pop
cmc
test
testl
inc
sbb
imul
stc
push
cmp
les
popf
add
cltd
out
out
inc
or
dec
dec
mov
fmulp
xchg
cmpsb
adc
add
outsb
or
cltd
notl
mov
jl
cwtl
pushf
add
aad
cmp
ljmp
xchg
push
leave
mov
or
les
arpl
int3
sub
fildl
adc
xor
jo
addr16
cmp
decb
and
in
adc
or
fisttpl
scas
inc
int
mov
sub
dec
xchg
insb
stos
leave
push
insb
adc
mov
jg
clc
sub
push
ficoml
fistpl
out
dec
jb
sub
dec
scas
add
and
stc
ret
lea
std
xchg
inc
icebp
jl
and
inc
mov
out
push
stos
mov
fwait
dec
sahf
lods
or
adc
pop
popa
pusha
sbb
jne
cmp
mov
mov
popa
sahf
aad
mov
out
movsl
xchg
inc
adc
pop
ret
and
add
cmc
data16
add
cmc
and
dec
pop
or
pop
xor
jb
enter
lret
sbb
lods
stos
loop
push
adcb
mov
jp
out
incl
rcrb
aaa
cmp
adcb
arpl
in
inc
aaa
cmp
inc
shlb
push
cmp
loope
lods
clc
aad
push
iret
ficoml
sub
sub
std
cli
flds
xor
cmp
andl
out
mov
stos
and
adc
hlt
jle
sbb
inc
cld
and
cmp
inc
xor
cld
dec
jnp
loope
xchg
push
push
call
mov
mov
mov
add
mov
adc
add
pop
adc
pop
mov
mov
pop
leave
ret
push
mov
sub
adc
movl
mov
sub
mov
xorl
mov
addl
movl
orl
jmp
sti
out
out
jo
jo
pop
inc
push
push
mov
js
invd
add
jns
into
mov
neg
dec
pop
mov
pop
or
push
jecxz
cli
mov
push
pop
fcomi
and
out
jne
adc
push
les
mov
leave
xor
lods
call
loopne
cwtl
test
push
inc
xchg
into
imul
xorl
aad
inc
pop
mov
lods
jbe
idivb
push
mov
mov
cmpsl
out
mov
mov
sti
mov
xchg
cmc
sub
add
cli
push
sti
shll
lock
lret
lods
mov
hlt
pop
loopne
jl
mov
add
xor
mov
xchg
js
bnd
imul
sub
fnstsw
and
sti
in
mov
mov
icebp
sahf
add
pop
sub
roll
and
pop
in
inc
cwtl
push
enter
mov
in
cmp
lret
cmpb
and
mov
sahf
xor
and
mov
stos
inc
mov
sbb
dec
out
xchg
lods
xchg
outsl
pop
rol
add
outsb
into
jb
xchg
mov
pop
or
jno
fcomps
orps
mov
xchg
jo
movsb
inc
out
jmp
fbstp
loope
test
inc
scas
add
push
fcompl
orb
clc
pop
or
mov
xchg
pop
test
jo
push
push
int3
dec
push
sahf
imul
xor
xchg
popa
jo
cmpsb
push
call
push
pusha
xor
cmp
aam
loopne
sbb
sbb
mov
or
scas
lret
lock
movsl
dec
outsb
sub
outsb
shrl
xor
sub
rcrb
cmpsl
iret
and
mov
fmulp
cmp
arpl
jle
xor
xor
in
ja
enter
dec
in
mov
or
cmp
popa
js
fisttps
ja
sbb
mov
jae
loope
adc
jb
push
lods
fldt
jle
xchg
and
pusha
fsub
or
cld
mov
sbbl
push
jno
sbb
lcall
mov
bound
popa
adc
test
stc
scas
mov
dec
mov
mov
push
xchg
jmp
scas
fwait
inc
add
pushf
pusha
pop
sub
imul
mov
mov
loop
dec
xor
add
push
cmp
scas
scas
out
add
sbb
sbb
jns
mov
insl
addl
int
cmpsb
enter
dec
cmpsl
pushf
movsb
sub
jg
mov
lret
jmp
sar
and
out
mov
sbb
sbb
fidivrs
popf
idivb
icebp
subl
cmp
in
decb
lds
hlt
xor
les
mov
mov
inc
sbb
and
je
adc
xor
jae
outsl
add
mov
xlat
out
into
lds
xchg
gs
sbb
stc
add
dec
mov
xchg
add
pop
mov
fcomps
fldt
cs
xor
jo,pt
lock
xchg
jmp
call
or
xchg
int3
icebp
mov
xor
loop
adc
stos
outsl
push
push
loopne
ja
call
pop
adc
mov
sub
in
mov
sbb
add
jg
outsb
inc
les
lret
pop
jmp
arpl
push
jp
or
push
das
sbb
mov
sub
daa
in
jne
test
adc
and
cmc
adc
mov
shll
clc
outsb
call
adc
test
mov
imul
lahf
sarl
jg
lret
xchg
insl
xchg
sbb
xchg
or
adc
fiadds
sub
shlb
sub
scas
inc
cmpsl
cld
int
scas
dec
bnd
cmp
or
repnz
mov
jns
repz
notb
fadd
pop
inc
enter
xchg
lds
push
test
pop
faddl
cmp
mov
out
cld
push
pop
repnz
movsb
inc
fdivr
and
sar
xor
jne
stc
or
xor
sbb
into
mov
shrl
mov
pop
mov
add
out
std
push
xchg
jg
inc
ret
push
push
mov
jge
lea
mov
aam
sbb
call
push
std
sub
sbb
orb
jns
shlb
xchg
call
icebp
in
into
aad
fldcw
cmpsl
xchg
repnz
fmulp
inc
lods
loop
mov
fs
call
inc
adc
fcoml
push
cs
mov
cmpsl
nop
loopne
add
xchg
inc
scas
int3
insl
lret
lea
roll
js
dec
or
xor
daa
mov
jo
xchg
fisttpl
fwait
fwait
inc
pop
push
into
and
or
sub
outsb
and
lea
push
test
xchg
sti
aaa
out
mov
mov
mov
jo
sbb
ljmp
pusha
hlt
testl
pop
mov
leave
xchg
and
add
bsr
stos
pusha
hlt
mov
in
cmc
test
int
scas
cmpsb
cmp
sub
stos
sbb
enter
pop
add
xor
push
lret
xor
sti
push
xchg
cltd
inc
stc
mov
push
mov
sub
sub
fistpll
hlt
push
cmp
je
ljmp
add
imul
add
inc
lods
int3
in
xor
rorl
fstpt
or
cmp
insb
add
repnz
adc
and
mov
xchg
xor
xchg
push
das
into
movsb
repz
xchg
mov
adc
sub
jae
adc
scas
sbb
pop
stos
clc
sub
into
pop
mov
enter
lahf
lahf
cmp
dec
sbb
sarb
in
mov
mov
movb
movb
cmpl
jbe
andl
adc
jmp
pushl
call
movb
movzbl
mov
sub
imul
mov
or
movzbl
push
orl
and
mov
movb
movl
movb
subl
movb
movb
orl
mov
orl
mov
subl
add
adcl
jmp
ret
sub
shlb
mov
xor
mov
and
mov
loope
invd
add
setl
pop
mov
dec
mov
jmp
shrb
xor
pushf
ds
cmpsb
push
pop
xchg
aam
fstpt
test
lods
popf
xor
add
fimuls
loopne
xor
or
icebp
mov
das
push
jmp
pop
xor
sbb
in
inc
lods
prefetcht2
cmp
push
movsl
sbb
inc
adc
push
sbb
sbb
sbb
or
ror
cmpsl
pushf
sbb
cltd
fmul
sub
jo
mov
xor
jecxz
push
push
addr16
xchg
fiaddl
inc
dec
insl
loop
mov
sub
cmp
or
mov
imul
ljmp
mov
add
jbe
ficompl
loope
enter
jbe
icebp
inc
cmp
adc
jl
stos
xor
repnz
lock
sub
not
shld
std
stos
shlb
push
lods
or
cli
shlb
mov
mov
les
test
cmp
int3
shll
dec
and
mov
cmp
adc
pusha
movsl
insb
mov
xchg
mov
add
fsts
mov
gs
loope
ds
or
mov
popa
pop
adc
rcl
sub
les
mov
add
int
shr
neg
pushf
inc
or
push
inc
imul
pop
sbb
pop
test
orl
inc
mov
push
movsb
loop
pop
bnd
push
jae
mov
cmp
add
mov
push
push
sub
push
out
push
sbb
lods
cmp
movsb
out
jg
push
jl
dec
dec
std
mov
and
cld
dec
sub
cmp
mov
pop
enter
add
cmp
lahf
mov
dec
and
dec
dec
aad
jo
movsl
push
test
cwtl
pop
test
orl
push
popa
add
mov
outsb
ret
xor
mov
xor
add
add
sub
aam
mov
sarl
dec
sahf
pop
cmp
scas
mov
add
lds
mov
push
in
inc
mov
fsubrs
pop
leave
stos
std
dec
sahf
mov
adc
mov
pop
sahf
fisttps
push
cs
xchg
cmp
icebp
sti
in
jo
add
ret
rcr
movsb
and
pop
mov
out
xor
mov
push
pushf
adc
sarb
push
bound
dec
jmp
mov
gs
stc
sub
inc
dec
xchg
lods
mov
mov
call
cs
mov
iret
xchg
fisubrs
in
mov
jnp
pop
ds
pop
es
sbb
jecxz
xchg
test
lahf
lret
lahf
mov
mov
pop
je
fs
imul
sub
xorb
iret
fcompl
faddl
xchg
lret
lret
decl
js
loop
mov
int
retw
add
xchg
leave
pop
cmpsl
ds
insl
orb
jge
andl
inc
scas
rcr
stos
mov
sti
fs
aad
or
fbstp
cmc
lret
pushf
and
xchg
dec
jmp
pop
ret
aam
xor
jne
xor
addr16
adc
cmp
sub
enter
jno
inc
push
inc
adc
jb
int
xchg
mov
es
mov
stos
push
imul
jmp
xchg
pop
ret
jnp
adc
mov
fidivs
mov
int
shl
sahf
cmc
pop
lahf
mov
push
lret
xor
daa
ret
push
scas
cmpsl
fs
pop
add
insb
sub
data16
mov
pushf
cmp
test
aam
cmc
pop
int3
jns
inc
xor
loop
dec
xor
mov
xor
xchg
sbb
jmp
shlb
sbb
pop
and
jno
xor
shll
das
inc
adc
in
and
jo
hlt
jge
push
ret
icebp
mov
sbb
push
inc
mov
and
adc
fwait
out
mov
add
ret
fcmove
mov
add
or
lahf
mov
xchg
or
jecxz
push
xchg
js
std
cmp
add
sbb
cs
xchg
mov
stc
add
insb
fstpt
push
divb
xchg
in
jb
pushl
add
pushf
int
pop
aam
dec
sub
xlat
xchg
sbb
out
mov
clc
xchg
or
sub
aam
add
sbb
and
cli
in
stc
insb
repz
lock
jb
xchg
jbe
jnp
dec
dec
in
cmp
imul
add
sahf
xchg
sub
fcoml
inc
sub
repz
or
jb
jnp
insb
mov
jmp
cmp
stos
insb
sbbb
in
js
sub
js
bnd
cmp
add
mov
fisttpl
add
push
pop
inc
jbe
inc
jge
les
mov
inc
mov
sub
and
mov
lahf
sbb
mov
out
repz
inc
adc
mov
mov
mov
iret
lods
push
cs
shrl
jno
dec
sub
fistps
shrl
sahf
lcall
jmp
adc
and
ja
xchg
pop
mov
mov
add
push
sub
out
fists
or
mov
dec
lods
dec
orb
dec
push
sub
cmpsl
movsl
enter
mov
fs
shll
fsubrl
jl
inc
dec
xor
repz
icebp
shrl
push
test
inc
pop
pop
jg
sbb
push
rclb
or
mov
sub
inc
push
rcrl
std
mov
lret
xchg
jmp
es
mov
add
insb
xchg
sti
adc
gs
das
or
sub
jb
mov
or
ret
daa
nop
mov
inc
sbb
push
push
ja
push
repnz
jmp
or
jmp
add
aaa
inc
inc
add
roll
movsb
pop
add
mov
subl
and
movl
jmp
mov
hlt
add
sbb
int3
xchg
add
cmovp
jle
xlat
add
xor
ljmp
std
popa
add
cmp
xor
mov
or
jg
inc
fsubrp
mov
int3
mov
add
in
pop
add
pop
imul
inc
imul
test
mov
mov
sub
and
cli
cld
jecxz
clc
push
lcall
dec
incb
insl
popa
add
xor
cmp
cli
cwtl
lret
daa
and
mov
xchg
stos
xor
push
enter
push
push
jge
push
sbb
sub
push
loopne
stc
enter
sbb
push
jmp
fiaddl
inc
mov
sti
push
push
jecxz
adcl
push
in
mov
add
push
jl
cmp
jbe
cmp
mov
retw
cmp
cmp
dec
or
ss
loop
cmp
dec
fidivrs
xchg
adc
arpl
test
or
cmp
call
cmp
imul
pusha
xchg
inc
mov
and
int3
sarl
cmc
mov
movsb
nop
xlat
inc
xchg
or
xchg
push
push
cltd
and
cmp
or
scas
popa
je
fisttpl
pop
ficompl
fldl
lods
jne
sti
mov
rclb
and
xor
movsb
je
inc
push
xor
push
dec
add
sbb
dec
cmp
sub
ror
es
aaa
outsb
sbb
sub
jge
nop
mov
xchg
leave
cld
mov
in
aas
lcall
cmpsb
push
sub
or
cmpsl
or
imull
rcl
dec
mov
out
stos
test
rcpps
cld
mov
cmp
fbld
lret
xchg
xlat
pop
cmp
or
mov
imul
adc
outsb
clc
add
in
inc
cmpsl
mov
mov
dec
adc
outsb
mov
xchg
fdivrs
pop
out
inc
addr16
mov
gs
insb
mov
sbb
xor
pop
subb
jp
imul
into
bound
inc
xor
pop
mov
and
or
mov
cmpl
clc
fldenv
out
cmp
push
mov
xor
pop
inc
cmp
cmpsl
or
cmp
cmpsb
movsl
and
adc
lea
mov
adc
hlt
dec
rcrb
lahf
push
mov
dec
fcomi
jmp
jge
ficoms
add
jecxz
xchg
mov
in
ret
inc
cltd
sbb
dec
sub
jecxz
jno
cmp
jge
xchg
in
mov
loope
push
in
jae
or
and
mov
loopne
mov
lret
sti
lds
dec
idivb
mov
pusha
aas
add
lcall
and
pop
repz
lahf
inc
and
incb
test
rcll
ja
push
sbbl
into
cmp
gs
mov
fcompp
int
fs
jb
cwtl
and
pop
int
jle
lret
pushf
and
pop
or
insl
sub
sbb
fimuls
dec
jb
in
scas
push
call
adc
ljmp
stos
std
aam
mov
jae
das
jns
jnp
jne
rcrl
faddl
mov
mov
cmpb
insl
cmp
imul
hlt
jns
insb
or
int3
cwtl
sbb
inc
js
daa
push
imull
push
pop
push
lods
sub
adc
imul
xchg
leave
test
pop
jg
cwtl
or
ds
xor
ljmp
lods
mov
mov
mov
or
xor
xlat
popa
fnstenv
test
js
inc
push
mov
stos
lods
imul
mov
sbb
mov
inc
sub
cltd
gs
sbb
jae
add
cmpsl
int
mov
fwait
leave
dec
ret
outsl
mov
inc
push
cmp
in
or
stos
loope
cld
push
jae
stc
inc
in
aas
inc
fsubrl
or
je
stos
pop
ds
fisubs
imul
call
cmpsl
push
xchg
aaa
ds
jl
fs
pop
stos
jae
notl
stc
mov
inc
dec
pop
pop
xchg
stc
loopne
fwait
std
pop
pushf
inc
enter
icebp
add
sbb
in
mov
test
pushf
sbb
pop
ds
adc
ret
fdivr
dec
popf
pushf
adcl
pop
sahf
cmpl
ljmp
mov
sub
mov
mov
ret
movsl
test
mov
call
fisubs
push
sub
cs
sub
push
jnp
out
call
push
sbb
fistpl
xor
pusha
aad
inc
dec
js
test
inc
std
out
in
ljmp
mov
fsubs
dec
xchg
jmp
repnz
fsts
adc
pop
dec
std
ja
push
mov
jo
xchg
mov
out
inc
into
in
or
loop
int3
inc
xchg
lret
std
pop
sti
inc
call
sbb
pop
sti
sbb
mov
xchg
movsl
sbb
xchg
stos
pop
dec
pop
mov
in
lock
dec
mov
jo
adc
mov
add
imul
scas
fldcw
cmp
inc
cmp
in
jnp
push
xchg
mov
cmpl
out
cmpsb
pop
or
gs
frndint
bound
test
push
stos
movsl
cmp
pushf
stc
inc
out
mov
jae
push
mov
shlb
sub
insl
mov
lds
out
pop
ret
fwait
jns
movsb
shlb
dec
insb
aam
and
cmc
cwtl
cs
mov
in
adc
jbe
aaa
adc
adc
int
les
add
sahf
movsl
insl
orb
xor
adc
mov
enter
iret
aad
mov
adc
int3
inc
sbb
dec
out
cmp
ja
mov
mov
sub
mov
cmpl
jl
andl
mov
and
jmp
push
push
push
call
mov
mov
movzwl
movzwl
shr
addl
or
sub
movl
mov
orl
movb
movb
sbbl
mov
mov
xorl
xor
addl
add
xorl
movzbl
movzbl
sub
cltd
mov
adc
mov
jmp
mov
pop
push
and
sub
mov
mov
lahf
ret
invd
add
xadd
lret
movsb
imul
icebp
sbb
mov
out
sahf
xlat
cmp
xchg
add
jl
imul
subl
movsb
adc
das
pop
jecxz
mov
sbb
ss
cmp
mov
inc
jo
pop
shld
dec
dec
dec
jae
cmpsb
ss
mov
adc
movsl
repz
cmp
cmpsl
out
add
jne
out
sti
enter
cmp
jecxz
or
xchg
enter
jo
jp
dec
stc
push
mov
jl
xlat
dec
test
loop
push
xchg
jge
add
movsb
mov
xor
int
push
push
inc
sarb
fimuls
pop
daa
jno
and
or
mov
sub
lods
outsb
mov
pusha
scas
mov
sarb
lret
in
outsb
hlt
mov
xchg
push
mov
push
stos
jo
inc
notb
clc
mov
jbe
sub
or
popf
stos
xor
icebp
xor
movsl
push
mov
cmp
add
rorb
push
dec
or
pop
inc
xchg
xchg
cli
into
aaa
fsubr
push
stos
pop
add
orl
adcb
test
mov
gs
xchg
mov
cwtl
sbb
imul
loop
xchg
mov
xor
pop
push
and
jae
cltd
xchg
cli
or
pop
pusha
push
fs
cmp
push
mov
push
imul
mov
mov
push
or
add
jp
add
les
les
mov
or
inc
dec
mov
test
sarl
sbb
stos
mov
dec
arpl
cmp
push
sahf
or
mov
mov
push
lret
aad
icebp
scas
push
adc
loope
mov
aad
fwait
int
xor
shrl
mov
adc
cmp
aaa
fcomip
mov
jle
int
lock
out
and
lock
mov
cmp
jmp
out
hlt
sub
push
mov
pop
jg
cwtl
inc
adc
xchg
inc
repnz
and
inc
das
mov
aad
jne
bound
pop
or
stc
test
dec
iret
inc
push
pop
push
xchg
dec
sbb
push
stc
jbe
pop
scas
xchg
push
fdivp
sub
cmp
repnz
out
and
push
lea
frstor
test
addr16
add
mov
in
or
ss
jnp
lret
test
pop
ss
xor
popf
in
mov
mov
mov
sbb
mov
in
push
sub
inc
mov
jl
or
push
lret
dec
mov
jno
adcb
adc
in
ja
jo
gs
imul
fcom
inc
jle
jl
pop
add
sarb
xor
xor
jbe
sbb
push
and
jne
sbb
cld
mov
lds
mov
das
test
sbb
ret
insb
jle
js
jo
add
add
out
addr16
cmp
mov
es
dec
or
cmp
inc
jb
mov
sbb
cmp
pop
ficomps
out
stc
bound
push
std
mov
sub
scas
dec
pop
outsl
pop
add
lds
popl
loopne
sbb
repz
mov
lret
mov
les
push
mov
in
pusha
xor
es
sbb
pop
iret
mov
scas
pop
xchg
or
xchg
ljmp
push
rcrl
out
mov
sbb
loope
inc
cmc
cmpsb
popa
fcomp
pop
pop
test
out
rclb
jbe
fbld
or
iret
test
fdivs
int3
leave
stos
pop
jbe
xchg
cmp
nop
cmpsl
out
or
jbe
fsubrl
push
or
jno
dec
cltd
mov
clc
xor
adc
mov
inc
xchg
sbb
ret
cmp
mov
or
loopne
vpsubd
dec
xor
out
arpl
and
add
pop
mov
dec
imul
sub
jo
imul
sub
lret
lods
imul
mov
pop
stc
jae
out
fimull
lret
mov
dec
adc
hlt
mov
rorl
inc
pop
les
push
stos
jae
fsubrl
dec
xorl
pop
jmp
jg
je
ret
xchg
pop
mov
sbb
adcb
mov
cmc
aaa
sub
inc
in
pop
pop
xchg
pop
xchg
je
add
push
sbb
loopne
mov
push
iret
mov
adc
in
push
adc
outsl
pop
mov
imul
fldl2e
push
incl
adc
mulb
stos
mov
cmp
dec
adc
call
decb
imul
and
inc
out
ficoms
xor
lret
sbb
inc
stos
imulb
mov
sahf
insl
xchg
mov
add
jno
sahf
jo
add
gs
outsb
dec
sti
cmp
xchg
pushf
test
pop
push
movsl
sar
dec
fbstp
jecxz
xchg
add
ret
sbb
adc
ret
out
movsb
or
or
sub
inc
mov
sbb
es
in
jne
popf
mov
cli
xchg
or
sti
ror
dec
ss
xchg
dec
sbb
test
sub
adc
dec
mov
adc
and
into
xchg
stos
cli
xchg
shl
repnz
mov
push
out
repz
adc
mov
daa
sbb
xor
jo
inc
sub
aas
sub
dec
inc
mov
repnz
divb
cmp
cld
ret
mov
cmp
imul
psraw
movsb
mov
cmp
inc
xchg
pop
lds
scas
out
inc
cmc
inc
add
cmpl
jl
and
jmp
push
call
jmp
sub
push
xchg
jne
jle
sahf
ffree
mov
or
pfrsqit1
les
mov
repnz
mov
inc
dec
sub
xor
mov
adcb
or
repnz
inc
jb
subl
xchg
inc
es
ret
sub
add
jo
jns
xchg
aam
addb
daa
hlt
ja
fisubl
ror
scas
jb
fdivl
cli
ja
je
daa
loope
sbb
sbb
cmp
aaa
xchg
adc
xchg
cmp
call
xchg
lds
cmp
mov
mov
fldt
or
setg
fxch
xor
jo
mov
stc
inc
ljmp
sbb
inc
in
fisubs
aaa
std
adc
jecxz
sub
gs
and
sub
aaa
xor
dec
daa
aaa
or
addr16
sub
test
cltd
xchg
dec
mov
test
sbb
push
or
out
test
mov
push
lret
hlt
std
or
shrb
daa
das
in
cs
xchg
xor
pop
push
not
sahf
mov
mov
lock
cs
jno
jae
mov
ljmp
mov
jmp
rcrb
and
or
cld
fcoml
shrl
insb
sbb
sub
xchg
stos
in
xor
and
dec
scas
dec
int3
jg
or
inc
and
repz
push
sub
jbe
cmp
cmpsl
sub
adc
dec
leave
mov
rclb
xchg
sarl
jbe
pop
js
cmp
push
mov
jmp
data16
xor
cmpsl
cmp
mov
ds
dec
push
mov
push
jg
dec
sub
pop
test
cld
js
mov
test
dec
idivl
xchg
mov
repnz
mov
sbb
push
nop
cwtl
mov
repnz
pop
xchg
xchg
xchg
scas
inc
lds
push
push
push
insl
pop
out
mov
aaa
adc
or
outsb
jle
mov
jg
add
ljmp
movsb
mov
add
shrl
or
adc
mov
mov
shl
xchg
nop
push
add
xchg
and
cmpb
jp
insb
mov
test
cmp
scas
push
cmp
test
js
push
nop
fwait
scas
push
sub
dec
push
cmpsl
inc
fwait
ror
xrelease
dec
and
mov
pop
mov
imul
sub
push
push
cmpsb
ljmp
xlat
xor
jno
clc
fwait
add
xchg
fists
adc
sahf
push
out
mov
or
int
sub
test
dec
dec
push
fwait
js
inc
or
cli
jle
gs
lock
cmp
lds
pop
pop
shrl
xor
push
rcrb
outsl
adc
cwtl
sbb
clc
inc
pop
mov
aaa
clc
mov
xor
and
out
add
inc
clc
and
stc
popa
popa
add
shl
clc
out
sub
movsb
ss
fildll
cmp
aas
mov
and
clc
loope
pop
mov
cmpsl
mov
pusha
lods
xchg
pop
mov
popl
add
ja
cmp
mov
jmp
sbb
insl
add
rcrl
inc
jl
scas
xorb
movsb
insb
xchg
inc
je
jne
or
xchg
stc
shrl
or
test
xchg
xlat
add
js
jnp
js
fwait
outsl
jno
arpl
jp
push
dec
push
mov
sub
pop
addr16
pop
and
insb
sahf
out
popa
pushf
test
hlt
cmc
pop
mov
and
xchg
push
add
jbe
push
test
and
rclb
in
add
push
mov
imull
out
test
jle
or
fucomip
cmp
add
stos
inc
cmc
inc
fmuls
popa
scas
ss
out
mov
or
call
cmp
out
fsub
mov
les
and
inc
jmp
jmp
clc
rclb
lret
outsl
aaa
push
out
inc
add
fistl
push
jl
xor
cmp
test
jb
cmp
in
jne
loope
movsb
mov
jmp
or
je
out
cmp
ss
or
mov
xchg
cmpsb
xchg
inc
sub
adc
gs
insl
cmp
in
cmp
push
push
mov
test
mov
xchg
push
pusha
ss
fsubs
mov
repz
or
and
test
aam
scas
notl
mov
sbb
bsf
cmp
push
loop
pop
cmpsb
popf
adc
sub
movsl
test
xor
insb
cwtl
test
pushf
testb
imul
sub
lock
push
push
ss
push
mov
cmc
mov
jbe
cwtl
iret
cmpsb
mov
popa
mov
out
cmp
sub
into
add
nop
jae
repnz
pushf
xchg
push
loopne
fisttps
icebp
daa
inc
add
orb
or
xor
sbb
jmp
movsl
imul
dec
inc
fimull
sub
mov
cltd
and
imul
fidivrs
test
loopne
push
mov
les
inc
es
imul
add
sub
outsl
loope
mov
adc
fs
jo
mov
cmp
imul
out
xchg
jbe
mov
test
push
jo
and
xchg
aad
fwait
ss
mov
xchg
xor
data16
dec
xchg
cwtl
sahf
jmp
jle
out
sarl
lds
xchg
cmpsl
sbb
cld
cmp
movsl
sub
adc
sahf
sub
push
lret
adcl
sub
and
cltd
das
xchg
cmp
frstor
outsl
push
andb
lcall
mov
imul
mov
pop
pop
loopne
call
icebp
loop
mov
push
xchg
inc
or
loop
mov
andl
adc
fstpl
stc
jmp
mov
xchg
mov
and
push
scas
popf
invd
add
push
inc
icebp
stos
add
outsb
dec
add
jl
mov
fs
sbb
pop
mov
hlt
daa
ds
dec
and
ret
mov
fwait
jge
pop
call
jmp
fisubl
or
xchg
ja
sti
dec
adc
inc
les
in
ss
mov
or
mov
jecxz
dec
pop
jmp
xchg
push
mov
divps
pop
xor
pop
out
ss
in
sbbl
popf
imul
add
insl
pop
maxps
sbb
dec
xchg
mov
faddl
xor
or
les
nop
jmp
incb
or
stc
repnz
icebp
inc
cmpsb
mov
nop
sbb
pop
ljmp
movsl
dec
inc
popf
movsb
mov
out
mov
jp
pop
lret
shlb
gs
in
imul
push
mov
fisttpll
shll
sub
cltd
pushf
mov
jmp
shlb
out
outsl
jo
mov
cmp
insl
movsl
dec
mov
sub
rolb
push
sub
loop
repnz
jmp
daa
arpl
xor
mov
mov
add
dec
call
xchg
icebp
inc
inc
dec
mov
and
dec
rcll
sbb
sbb
pop
sbbl
xchg
cmp
push
dec
push
xchg
pop
loop
adc
stos
in
iret
mov
xor
mov
mov
imul
and
xchg
daa
icebp
jo
adc
sub
push
ficomps
cmp
das
push
mov
pop
outsb
pop
rcrl
loop
lea
adc
xor
mov
sub
dec
xchg
mov
mov
xchg
cmp
call
or
mov
sub
mov
pop
dec
in
and
or
mov
cs
push
movsb
ljmp
stos
faddl
pop
xchg
xchg
push
mov
cs
jecxz
or
bound
lret
add
insl
arpl
popf
notl
int
popf
sahf
sbb
andl
xor
mov
cmp
mov
jle
shll
pop
ss
sub
test
cmp
ljmp
jmp
lfs
cmp
xlat
lods
call
rcll
mov
int
lret
and
pop
out
jg
adc
push
push
pop
add
and
jae
and
cmp
jg
sub
mov
push
xchg
xor
and
repnz
daa
adc
pop
jno
hlt
xchg
jge
cmpsl
shll
dec
fwait
dec
adc
push
test
std
icebp
imul
leave
dec
imul
xchg
aad
jbe
inc
fisubrs
mov
arpl
sub
push
ja
or
xor
jle
pop
js
or
cmp
pop
pop
cld
lahf
xchg
dec
mov
jge
scas
jmp
je
das
sbbl
sub
and
inc
cs
arpl
sbb
shrl
ja
pop
popa
add
push
cmp
mov
cmp
mov
lods
xorb
ss
mov
nop
pop
or
fistpl
bound
imul
je
pushf
sti
or
adc
test
sub
out
rcrl
arpl
clc
shll
push
push
in
mov
xlat
movsb
ljmp
pop
adc
insb
pop
in
aam
aas
and
pop
int
daa
push
das
mov
in
loopne
int
hlt
inc
add
jbe
pop
or
sub
test
adc
rolb
sub
mov
addb
ror
into
and
sbb
mov
xlat
mov
jge
or
pop
xor
loopne
mov
out
push
jecxz
outsb
adc
fwait
test
adc
loope
dec
sub
or
and
data16
ret
fdiv
mov
pop
cwtl
add
pop
jle
and
pop
repnz
jo
stos
mov
in
pop
popl
mov
jecxz
rcll
add
jle
and
lods
in
imul
int3
addl
loope
daa
js
fs
cld
mov
jne
js
ret
andb
inc
shlb
pop
in
mov
mov
imul
into
inc
sub
lret
add
and
jmp
repz
mov
addr16
and
cmpsb
dec
add
lods
mov
push
jae
movsb
mul
mov
jmp
mov
jmp
xchg
cltd
scas
push
jno
lahf
shr
jmp
imull
mov
out
incb
or
inc
cmp
daa
sub
pushf
ja
cmpb
cwtl
ret
scas
and
dec
xlat
stos
xlat
outsb
push
fcom
pop
mov
fs
xor
push
out
insw
pop
inc
test
and
stos
or
stc
pop
xor
jo
jge
dec
xlat
mov
mov
push
mov
mov
test
dec
mov
mov
cmp
in
push
mov
fsubp
stos
mov
and
mov
outsb
adc
pop
mov
test
repz
xchg
mov
push
paddq
inc
and
leave
addr16
ja
sahf
mov
adc
dec
in
in
dec
add
jp
pop
shll
jns
mov
clc
or
sbb
dec
pop
add
outsl
push
ret
cmp
bound
addr16
repz
sub
ficoml
mov
mov
daa
mov
inc
mov
repz
inc
sarl
adc
cmc
adc
xor
sbb
insl
in
inc
ror
loopne
dec
sub
push
and
sbb
imul
pop
pop
and
and
push
std
les
mov
jnp
dec
fildl
inc
ret
push
cmp
push
xor
imul
mov
movb
movb
mov
andl
jmp
dec
mov
aaa
es
mov
dec
test
invd
add
movlps
movsl
inc
inc
lret
sti
ds
xor
mov
sbb
and
jl
cltd
jns
ljmp
pop
dec
xchg
or
scas
loope
movsl
bswap
gs
out
movsl
or
inc
xchg
inc
shlb
imul
mov
enter
dec
dec
xlat
mov
mov
pop
shll
cmp
sub
cmp
dec
jns
push
xchg
push
and
cltd
stc
jg
jo
xchg
cltd
jns
imul
aaa
cmp
jno
shl
in
xchg
cmp
push
xchg
push
dec
pop
push
xchg
xor
aaa
stos
es
inc
rorb
mov
jecxz
mov
xchg
xlat
fstpl
pop
jno
pop
or
mov
add
data16
insb
mov
ss
and
js
sbb
adc
pop
or
call
fisubrs
xchg
xchg
sbb
mov
int3
and
pop
lds
repnz
mull
xor
xor
jp
insb
mov
mov
jp
inc
or
mov
loopne
jge
or
xor
cltd
dec
cld
lds
xchg
mov
popa
adc
insl
rolb
decl
outsb
rcrb
mov
fnstsw
rolb
out
mov
sub
and
mulb
arpl
mov
das
addr16
jne
icebp
jle
imul
mov
mov
push
push
fidivrl
jmp
or
fmulp
mov
add
xchg
test
sub
add
es
xor
in
cmp
pop
xchg
out
rep
ja
sbb
ret
sub
popf
cmp
mov
adc
sti
outsb
jge
inc
jae
int3
add
sub
arpl
mov
rol
out
scas
pop
xacquire
inc
cmpsb
inc
push
pop
pusha
adc
adc
push
cs
repnz
sub
mov
int3
loope
out
sbb
enter
sti
loop
pop
orl
lock
js
or
shll
xor
lret
data16
fnsave
sti
into
push
movsl
mov
imul
mov
scas
call
mov
adc
mov
push
jecxz
in
cmp
pop
bound
push
fldl
jecxz
insb
cwtl
inc
orb
mov
sbb
jge
mov
adc
lods
jns
mov
pop
stos
or
imul
imul
addr16
mov
xor
bound
cld
cmp
mov
fdivrl
sub
mov
daa
in
dec
add
push
pminub
add
sub
xor
xlat
call
les
pop
jo
lahf
sbb
out
adc
sbb
lock
sbb
int
mov
fstl
mov
cmp
shlb
cs
push
cmp
sub
pop
mov
jo
dec
sbb
mov
mov
pop
or
push
xchg
pop
adc
mov
cld
aam
ret
mov
xorb
mov
mov
aad
fidivs
jae
cmpsl
push
dec
cld
sub
filds
repnz
sub
outsb
add
lods
xchg
sub
or
xchg
and
push
data16
push
cli
cmpsl
int3
fwait
jae
sbb
lock
sbb
jne
sub
mov
popf
xchg
add
pop
mov
mov
or
and
gs
push
mov
lods
pop
add
loope
scas
cwtl
sti
sbb
jle
dec
idiv
xor
out
iret
nop
mov
mov
push
out
xor
push
call
sub
ja
adc
aaa
mov
push
pop
xchg
out
sbb
cli
dec
lahf
push
sti
pop
jb
push
sub
xchg
xchg
xor
loop
loop
pop
mov
mov
or
mov
inc
mov
xor
jnp
in
dec
and
xor
push
adc
leave
mov
adc
xchg
push
sbb
xlat
mov
sub
or
or
mov
cmp
dec
inc
out
jmp
and
out
lea
enter
mov
cmpsb
popf
ss
mov
mov
jle
adc
movsl
call
les
icebp
std
inc
mov
xchg
movsl
cmp
push
and
notl
jge
mov
mov
mov
in
pop
fistps
mov
xchg
icebp
daa
divb
cmpsb
jns
sarb
inc
test
jp
jge
sbb
mov
repnz
das
xchg
fcoms
or
push
mov
adc
mov
jo
pop
movsl
insl
dec
adc
movsb
jne
into
lcall
add
mov
in
xor
and
adc
movsb
imul
dec
inc
in
add
xchg
push
or
sub
jnp
pushf
inc
fcoms
cli
and
ljmp
loop
cmpsb
adc
sbb
rolb
repz
sbb
cmpsb
outsb
push
fucomp
dec
or
sbb
out
aad
repnz
enter
mov
and
test
dec
iret
and
jnp
jge
and
push
lahf
cwtl
bt
popa
dec
fstp
cli
scas
icebp
pop
ror
out
rolb
aaa
dec
push
aas
mov
data16
subb
jle
or
in
sbb
stos
adc
mov
sti
xor
gs
cmp
mov
lret
gs
fisubl
mov
popl
push
push
cmc
and
jg
js
ficoml
and
mov
jnp
sahf
jae
je
frstor
add
jge
xchg
arpl
cmp
push
out
rcrl
movsl
nop
jns
mov
fwait
loopne
add
bound
adc
mov
mov
testl
inc
inc
add
xor
mov
orl
jmp
insb
lods
push
repz
je
xor
or
in
js
invd
add
cmovns
adc
jmp
push
lods
pop
mov
in
icebp
shl
leave
or
jge
cmpsl
dec
and
mov
add
xor
sub
xchg
or
repz
adc
inc
enter
dec
loopne
loop
and
add
jp
add
aas
xchg
push
lret
cmp
and
pop
rcrl
xor
fwait
mov
pop
fsts
in
repz
and
fs
add
das
xchg
and
jbe
pop
loopne
test
mov
and
inc
gs
pop
es
les
jmp
pop
inc
mov
pop
adc
or
cmp
cld
xor
cli
sahf
out
pop
lock
mov
xlat
mov
jge
xchg
sbb
loopne
inc
test
add
adc
jge
test
insb
cmp
xor
mov
mov
js
lea
push
mull
sbb
dec
loop
pop
addr16
push
arpl
dec
sbb
fwait
add
pop
daa
test
sahf
sub
push
dec
cmpsl
push
dec
xor
test
push
outsb
mov
jl
mov
xchg
bound
scas
inc
je
sti
add
addr16
repnz
rorb
daa
sbb
and
dec
mov
pusha
es
sub
and
inc
popf
mov
pop
mov
popf
scas
shlb
out
iret
mov
mov
lret
jl
dec
mov
cmpsl
nop
addr16
sub
cmp
hlt
cmc
dec
aas
enter
mov
loop
insb
scas
daa
sbb
call
loopne
enter
aad
or
sub
mov
ret
pop
lock
cmp
test
xchg
and
outsl
das
cmp
inc
loop
fpatan
jns
cmp
fs
adc
fwait
sbb
adc
sbb
lret
pop
movsl
fcoms
pop
imul
cmpsb
mov
mov
xor
fcmovne
push
in
mov
fdivs
jnp
push
ret
fisttpl
push
jmp
and
repnz
pop
sub
cltd
fsubrs
jl
xor
or
sarl
jmp
and
lods
or
cmp
xor
int
pop
pop
cmp
addr16
je
ret
pop
sub
mov
ret
cli
lcall
loopne
pusha
push
mov
cli
out
adc
aad
cmc
aam
pop
sub
dec
cld
inc
repnz
stos
xchg
cmp
mov
mov
insl
pop
js
cwtl
ffreep
add
mov
daa
gs
lcall
cmp
insb
xor
push
jg
mov
push
leave
fcoml
mov
xor
aaa
cmpsb
or
out
cmp
out
jo
add
hlt
test
pop
sub
mov
cwtl
push
push
cmp
pusha
int
stos
sub
mov
mov
cmc
addl
int
outsl
push
into
mov
inc
adcl
call
icebp
cmp
out
mov
push
aas
dec
test
das
or
pop
mov
and
fildll
ret
add
fbstp
out
and
mul
rcrl
nop
cmc
sbb
lods
and
mov
mov
sbb
cmp
pop
lret
cmpsb
rorb
and
sar
out
cmp
mov
popf
mov
ja
jne
fldl2t
lret
es
pop
jno
mov
scas
mov
lret
xchg
dec
mov
and
xor
aas
and
movsb
mov
mov
out
test
vunpcklps
fisttpl
inc
ss
dec
sar
xchg
xchg
imul
imul
jae
mov
adc
xchg
inc
cmpsl
movsb
cmc
bound
cld
mov
test
sbb
mov
in
frstor
imul
outsl
js
fstpl
addr16
rcrb
push
int
test
push
aam
es
xchg
mov
and
sbb
xor
push
mov
mov
push
sbb
pop
sub
nop
push
aas
sub
loope
or
fidivl
push
scas
pushf
add
cmp
sbb
nop
mov
enter
and
and
and
adc
sub
jge,pn
push
call
add
push
iret
mov
and
adc
and
add
push
jns
pop
test
loope
clc
nop
scas
mov
movsl
jmp
mov
jbe,pn
pop
jge
fisubrl
ds
pop
dec
dec
pop
test
pop
data16
push
adc
pushf
cld
push
sbb
adc
subb
insl
and
lret
or
add
push
add
adc
adc
icebp
dec
enter
aam
mov
clc
mov
cmp
cmp
xchg
pop
cmpsb
pusha
fdivl
arpl
aaa
sub
xor
xor
push
stos
ret
fimuls
mov
pop
imulb
filds
popf
clc
fldenv
lret
xchg
jge
cmp
daa
xor
push
lds
mov
bound
mov
movsb
adc
mov
or
push
into
lea
jg
js
in
jnp
mov
leave
in
mov
sar
mov
stos
push
sbb
movsb
push
in
das
push
cmc
xlat
ret
shrb
mov
pop
loop
mov
add
mov
aas
shrb
jmp
fxch
sbb
sbb
or
stos
gs
sub
mov
cltd
push
scas
in
cmpb
lock
orl
inc
sbb
rcl
aad
ret
jae
dec
or
xor
test
ljmp
arpl
and
testb
xor
mov
push
pop
pop
lods
mov
out
and
arpl
dec
mov
or
push
mov
inc
push
mov
add
clc
pop
cmc
out
push
fcomip
rclb
in
ss
mov
popa
out
loop
outsb
hlt
or
lea
nop
enter
aas
lret
lret
movsb
push
mov
in
xchg
inc
aad
xorl
idiv
movl
mov
movl
cmp
movl
jmp
fidivl
push
or
fmuls
notb
mov
add
packsswb
inc
imul
push
xchg
imul
dec
addr16
and
push
sti
imul
dec
outsb
inc
add
cmc
es
pop
gs
lcall
push
lcall
push
mov
mov
push
push
es
mov
cmpsb
add
movl
mov
mov
mov
fadd
in
mov
pop
cmp
inc
jne
push
mov
xor
out
test
mov
ret
jle
roll
ret
mov
dec
add
cmp
xchg
fs
testl
pushl
fs
negl
ss
hlt
pop
pop
out
dec
lahf
test
lret
mov
jo
jno
cli
jae
aam
pop
or
pop
fadd
jno
jbe
lcall
shl
fwait
push
hlt
add
or
test
mov
dec
orb
cltd
and
or
lcall
jmp
cmpsb
cmpl
jecxz
pop
or
push
ljmp
push
xchg
dec
testl
add
cs
les
pusha
mov
or
hlt
jae
inc
xchg
push
push
fdivl
idivb
mov
roll
pop
or
test
adc
iret
insl
clc
sbb
jp
push
dec
int
icebp
sub
push
aam
sub
popa
xchg
mov
jecxz
in
dec
xchg
sbb
rcll
adc
and
mov
test
add
ss
sahf
rcrl
jmp
mov
push
fisubs
test
repz
cmpsb
jb
jle
rcl
lods
cmc
pop
jnp
sti
fs
lock
mov
pop
xor
ss
ljmp
pop
pop
stos
out
cmpsb
jb
jecxz
iret
shrb
xor
insb
hlt
cs
dec
fistpll
mov
out
lea
cld
sbb
pop
inc
mov
dec
pop
adc
and
pop
dec
lods
and
in
dec
addr16
jb
mov
push
xlat
mov
adc
xor
bound
icebp
loope
xlat
movsb
hlt
pop
orb
loopne
lcall
leave
test
shll
jae
dec
lods
sub
aam
aam
add
dec
leave
cmp
mov
pop
sarb
or
dec
gs
inc
jb
mov
xor
dec
jbe
jne
mov
pop
enter
sbb
sub
xchg
pop
ss
xchg
jne
mov
stc
mov
pusha
adc
or
fisubrs
xor
push
das
or
or
scas
int
daa
loopne
jae
jne
pop
mov
sub
loopne
dec
addr16
outsl
addb
leave
jns
and
mov
mov
clc
pop
sbb
cmp
rclb
jge
or
fs
mov
mov
jb
lret
sub
out
ss
inc
psubb
sub
pop
jb
or
pop
lret
push
icebp
rorb
xchg
int3
xchg
pop
mov
ss
lods
rclb
cmp
adc
mov
sub
aas
fildll
shr
pop
insb
xchg
movsb
jnp
and
xchg
adc
sub
lds
int
adc
aas
push
popf
lods
dec
jmp
enter
cld
or
loope
jno
and
daa
sbb
movsb
xorl
adc
out
xor
inc
aas
daa
xchg
xlat
or
sbb
lahf
xor
out
shlb
cmp
mov
pop
testl
dec
dec
cmp
loop
shll
xor
and
mov
and
push
pop
and
jge
scas
sti
ljmp
mov
push
mov
sbb
jnp
js
cmc
xchg
nop
fdivp
push
adc
adc
fcoms
fildl
pop
fstpl
popa
daa
push
fs
inc
mov
sub
sub
test
scas
mov
aad
addr16
cwtl
and
and
nop
in
xor
jnp
mov
out
loop
faddl
lcall
cltd
inc
sbb
jae
imul
call
push
clts
dec
pushf
sbb
cmp
mov
inc
push
xchg
inc
or
mov
sar
test
cmp
xor
inc
xchg
jge
in
insb
lea
fdivp
jmp
pop
rcll
push
cwtl
push
jns
mov
add
mov
out
mov
sub
dec
fcmovnu
inc
add
int3
insl
sbb
fwait
xchg
cmp
bound
addr16
je
mov
push
xchg
xor
mov
sbb
scas
pushf
fcomp
cwtl
xchg
outsl
aam
aam
cmp
and
and
rcl
mov
add
ficompl
iret
adc
and
mov
imul
fistps
and
lret
sbb
out
mov
movsb
and
pop
dec
mov
jl
xor
add
loope
pop
cwtl
imul
fcompl
mov
mov
or
add
add
sbb
and
push
dec
mov
sub
icebp
mov
cmp
cmp
imul
imull
jmp
xor
cmp
or
in
add
movsb
push
in
or
mov
dec
xchg
adc
lock
gs
push
imul
mov
nop
rcrb
ret
nop
cmpsl
subl
adc
pop
add
xlat
cs
pop
cmpsl
jecxz
dec
addr16
mov
add
aaa
fiadds
psraw
arpl
jp
pusha
jnp
out
xor
xchg
cmpsb
xor
mov
mov
jg
or
lds
pop
cli
negb
stc
sahf
loope
mov
aad
pop
jge
mov
pop
sub
imul
pop
dec
xor
adc
mov
add
xor
movl
cmpl
jb
mov
sbb
jmp
push
call
movl
mov
mov
push
push
adcl
push
push
andl
call
xor
xorl
xor
orl
or
or
movl
mov
mov
mov
cmp
jne
mov
mov
jmp
mov
dec
and
xchg
sub
push
mov
iret
imul
movq
outsb
xchg
std
popl
sbb
inc
mov
lock
fst
and
mov
add
mov
and
pop
jns
or
push
cmpps
pushf
outsl
lods
pushf
addr16
cmp
lcall
cmpsb
jae
mov
jae
mov
inc
push
add
xchg
stos
mov
cmp
jae
fsubrl
cmc
inc
adc
push
xor
mov
orl
pop
mov
aam
ja
fistpl
mov
inc
repz
int3
clc
les
fwait
addr16
cmpsl
xor
rcl
mov
mov
push
xchg
xor
inc
dec
cmc
dec
dec
clc
fcmovbe
and
jne
das
lea
pop
or
jmp
xchg
lock
repnz
push
lahf
or
test
jmp
clc
mov
jecxz
dec
xchg
bound
mov
jmp
sbb
adcl
gs
pop
sbb
mov
mov
cmp
fidivl
adc
pop
lahf
dec
fistl
xorb
cmp
aad
push
dec
insl
rcrl
adc
or
in
cmp
mov
cmpb
pop
ret
pop
mov
js
mov
adc
scas
fmuls
vphaddudq
lds
add
or
mov
pop
mov
orb
jb
mov
clc
mov
dec
mov
sbb
aaa
jmp
sbb
into
ret
addr16
call
or
pop
lods
xchg
repz
adc
sbb
repz
cld
xor
shlb
sub
ja
subl
inc
es
aas
sub
cmpsl
xchg
outsl
add
sti
mov
rcll
repnz
and
dec
mov
or
adc
or
or
in
inc
movsb
mov
or
push
mov
pop
mov
lcall
notb
in
sbb
out
cli
stc
stc
or
xchg
pop
ret
mov
inc
sub
xor
and
aaa
fbstp
movq
mov
jno
data16
dec
pop
pushf
daa
add
and
out
ds
jns
mov
xlat
fs
mov
push
or
push
pop
xor
imul
stc
dec
dec
cmp
aaa
pop
and
push
adc
movsl
out
cwtl
pop
lds
xchg
data16
ja
mov
xor
decb
pop
arpl
leave
repnz
negl
cwtl
mov
push
out
xor
mov
mov
pop
jae
shrb
test
fcmovnb
push
dec
cmp
test
xchg
add
push
dec
fwait
leave
aas
aam
push
jbe
std
scas
addl
jl
imul
sbb
push
adc
test
sahf
push
sub
movsl
and
pop
jne
mov
out
xor
xor
pop
mov
aaa
dec
je
or
sbbl
xor
mov
inc
xor
popa
xchg
gs
mov
sub
mov
fmuls
pop
mov
or
sbb
or
in
add
mov
mov
jmp
mov
orl
or
testl
mov
mov
jno
sub
out
pop
pop
push
jbe
test
dec
incb
adc
jp
mov
mov
imul
sarb
sbb
xor
outsb
adc
cmp
enter
fwait
enter
cmp
sbb
test
pop
xor
mov
cmp
enter
and
or
sub
jnp
popa
mov
mov
fcompl
lcall
arpl
in
test
mov
add
popf
sbb
jle
mov
add
push
adc
xor
outsb
xor
stos
jge
add
sti
jl
inc
sbb
test
pop
lahf
stc
outsl
or
jno
xchg
sub
fmul
mov
lret
sbb
in
mov
adc
ss
out
dec
mov
jne
fucom
xrelease
push
sub
dec
cmpsl
shr
hlt
das
xor
lret
xor
mov
inc
aaa
ja,pt
or
push
ss
out
sub
sub
adc
push
cltd
push
sub
dec
bound
mov
inc
xchg
mov
jo
orl
jle
add
push
mov
daa
push
enter
cmp
or
jp
dec
and
iret
loopne
lcall
aaa
lods
fldt
xchg
insl
movb
imul
stc
gs
push
jbe
sar
pushf
xchg
push
add
push
pop
sub
push
outsb
mov
inc
xor
jge,pt
jl
lock
clc
and
jae
notb
ret
push
xchg
add
adc
jmp
pop
push
sub
das
int3
mov
lods
push
jle
fcomip
les
rol
jns
cmp
testl
cmp
adc
lahf
ljmp
mov
cmp
push
shll
shl
adc
cmp
or
repz
lcall
jne
cmc
das
cltd
pop
lods
in
outsb
mov
clc
lods
sub
jo
aad
adc
test
mov
mov
or
into
pop
jmp
repnz
cmpsb
dec
scas
or
out
test
pop
mov
mov
adc
adc
out
xor
cmp
lahf
inc
outsl
dec
dec
xchg
imul
les
mov
mov
test
push
push
fadds
imul
ljmp
mov
jno
sbb
xchg
jbe
ficompl
negl
mov
or
pop
testb
lock
fidivl
nop
movsb
sahf
ror
inc
or
sbb
repz
aaa
xor
andl
testl
push
loopne
jne
shrd
shl
mov
mov
shr
xor
mov
xor
or
mov
mov
mov
shrd
xor
shr
mov
mov
xor
or
mov
shl
push
pop
mov
mov
mov
mov
mov
sub
movzwl
mov
movzwl
cltd
jmp
jb
ffreep
push
aad
push
dec
mov
sub
xchg
or
xadd
push
fistpl
enter
cli
loopne
push
jbe
or
push
push
or
sub
jl
mov
cmp
fwait
xor
stc
mov
mov
pop
jno
mov
scas
mov
pop
aaa
mov
lods
and
sbb
fbstp
fucomp
pop
push
add
jmp
jno
movsl
test
xchg
xchg
bound
or
call
jecxz
fldcw
add
xchg
testl
aam
dec
popa
bound
popa
jle
adc
and
jo
jns
in
mov
test
repz
ss
cmp
ds
mov
mov
roll
pop
sub
ret
inc
int
sti
rorl
and
inc
xchg
lret
xchg
and
sub
cmpsl
movsb
cmpsl
mov
push
adcb
and
insl
in
fcmove
fisttpll
call
pop
fcmovnbe
add
mov
jnp
mov
xchg
test
cmpl
push
inc
pop
mov
sub
push
xlat
cli
call
and
mov
mov
das
pop
inc
xchg
sbb
mov
push
pusha
shr
fsubl
adc
test
shr
cld
mov
push
jge
xor
dec
inc
rcr
ss
movsl
sub
and
into
xchg
sub
adc
mov
aam
xlat
movsb
mov
mov
or
js
mov
mov
rcll
fwait
sbb
mov
lds
add
cmp
rcrl
cltd
popa
movsl
rcr
mov
test
out
int3
pop
lds
icebp
out
mov
jecxz
dec
xchg
and
out
aaa
pop
dec
xorl
xor
and
fcmovbe
pop
sub
fdivp
ret
mov
push
adc
ret
in
mov
pop
or
insb
in
add
repz
inc
lds
mov
cli
xor
enter
shlb
pop
clc
ret
push
loopne
or
std
xor
sahf
lahf
add
lcall
push
orl
cwtl
cmp
ficoml
push
cli
jmp
or
ljmp
sub
cmp
and
jp
dec
adc
leave
and
dec
or
fidivl
sahf
push
sub
dec
push
xor
fisttpll
and
jno,pn
shrl
mov
dec
mov
and
lret
lds
js
mov
sbb
imull
fwait
adc
mov
lahf
mov
cli
xor
std
popf
jmp
push
pop
iret
pushf
xchg
jns
les
mov
call
add
dec
mov
ljmp
mov
xchg
fnstcw
add
xor
test
push
pop
xor
arpl
mov
test
imul
pop
dec
and
outsl
push
inc
inc
sbb
pop
adc
icebp
iret
mov
sub
clc
inc
xor
nop
xchg
and
mov
xchg
mov
ja
adc
inc
les
or
rolb
ret
xchg
inc
std
dec
fcoml
addl
aam
adc
xor
push
or
scas
mov
mov
pop
nop
jp
adc
loopne
push
push
lods
rcrl
enter
or
pop
popa
jmp
cli
lret
adc
daa
inc
inc
jns
mov
mov
mov
sbb
ret
jns
push
dec
push
and
cmp
mov
xchg
xchg
sub
or
add
mov
ljmp
popf
je
sub
sahf
js
daa
nop
fiaddl
inc
shl
cmp
in
loope
inc
add
shlb
stos
testl
and
mov
repz
jns
sbb
ffreep
jmp
imul
jp
dec
jge
je
mov
jo
inc
push
dec
mov
push
aas
xchg
inc
xor
add
dec
imul
mov
aam
pop
or
out
xorl
or
mov
cmpsb
in
push
jmp
and
jg
mov
mov
das
addr16
aaa
outsb
pop
pop
inc
sbb
fcmovbe
pop
ja
sti
push
jb
pop
push
fbld
in
inc
adc
or
adc
dec
pushf
test
mov
fwait
ucomiss
das
out
int
push
add
mov
add
repnz
add
ljmp
in
cmp
aaa
in
test
repz
imul
aaa
pop
mov
mov
pusha
jge
mov
arpl
jmp
out
inc
dec
scas
int
xchg
loope
push
push
jns
add
or
xor
shrb
cld
adc
jmp
dec
lret
stc
out
rclb
loop
jge
out
mov
or
into
xor
add
rorb
bound
dec
shll
jl
roll
scas
in
orb
imul
push
cmp
cmove
daa
pop
or
ret
lods
cmp
xor
mov
jnp
pop
in
and
dec
jo
cli
fldt
popa
shlb
and
inc
xchg
jle
jno
xchg
insl
mov
mov
aam
gs
pop
mov
mov
popa
push
fs
xor
dec
movsb
dec
cltd
popa
repnz
lds
fisubl
mov
dec
xor
sub
pusha
call
insl
mov
xchg
add
scas
or
cmp
cmp
cmp
push
cmp
xor
lret
or
jo
inc
xor
mov
jbe
xor
fimull
push
cmp
and
mov
push
arpl
push
mov
inc
dec
sub
scas
fdivl
repz
out
stc
stos
mov
xchg
mov
movsl
xlat
fdivl
clc
xlat
sbb
cmp
push
jbe
push
adc
dec
adc
sub
iret
mov
jmp
pusha
lahf
aas
sti
aas
pop
or
ss
or
push
fisttps
invd
add
sahf
adc
call
ret
fs
lock
add
dec
push
add
ss
jle
lret
cmp
dec
pop
imulb
pop
xor
sub
or
das
and
je
daa
or
cmp
in
fucomip
ficoml
test
mov
shr
mov
arpl
lds
es
scas
scas
popf
cli
les
scas
repnz
popa
mov
jp
xor
sbb
shl
mov
jl
enter
outsb
mov
push
lock
mov
lret
mov
in
xchg
sbb
mov
movsb
loope
pop
fndisi(8087
cltd
call
fnstenv
daa
sbb
insb
inc
xchg
out
add
inc
and
adc
imul
jb
xor
or
sbb
les
cltd
xchg
inc
insl
sub
xchg
negl
push
dec
cs
rcrb
repz
pop
in
xor
mov
clc
daa
pop
cli
inc
addr16
shl
adcl
cmp
dec
cmpsb
movsl
inc
push
sub
and
test
mov
sbb
push
and
cltd
loop
sub
fildll
jl
push
ficomps
lods
das
mov
dec
shrb
ja
cmp
or
testb
cmp
push
inc
nop
mov
icebp
movsl
mov
cmp
xchg
dec
fistpl
or
lcall
fbstp
aad
int3
cmpsl
push
jl
add
out
xchg
adc
bound
jo
jbe
xchg
shll
fldl
repz
test
xor
pop
push
and
or
sub
cmp
mov
inc
mov
pushf
decb
test
popf
add
stos
sub
and
dec
adc
aad
pusha
adc
ss
nop
cmp
cmpsb
imulb
movsl
out
in
shl
pusha
xchg
ja
hlt
pop
rcl
insl
sub
push
andb
dec
mov
decl
mov
lea
fnstsw
xchg
sub
pop
adc
dec
rcrl
mov
stos
sub
xlat
test
sti
dec
sbb
mov
sub
pop
insl
or
ret
push
or
inc
test
dec
stos
cmp
aam
xor
mov
cli
dec
dec
aad
lahf
sbb
popf
jns
cwtl
pop
out
mov
jle
and
add
xchg
or
adc
rcrb
popa
lret
scas
hlt
and
int3
icebp
xorb
jnp
jecxz
and
mov
or
outsl
add
sbb
adcb
sahf
push
mov
jae
lds
lahf
mov
push
or
sbb
cmpl
outsb
std
fucom
jo
popf
mov
jge
sub
sub
or
adc
sar
sub
ja
leave
mov
pop
jno
popf
lret
lods
dec
int
adc
pop
mov
addl
scas
loopne
rclb
mov
lret
sub
jbe
movsb
push
dec
fcompl
adc
push
sbb
push
data16
shlb
stos
fwait
push
dec
sbb
test
dec
xchg
icebp
mov
or
pop
out
xchg
inc
fidivrs
xchg
lret
fmuls
cli
dec
rcll
shrb
xor
mov
ja
addr16
sbb
mov
ds
iret
fadds
fisubs
inc
mov
ret
loop
jne
icebp
xchg
or
ret
adc
clc
lock
mov
insl
jg
mov
in
and
jecxz
out
mov
icebp
subb
mov
xchg
pushl
in
outsl
inc
add
pusha
ja
adc
ds
outsb
lcall
je
adc
js
ret
push
mov
push
mov
int3
mov
push
divb
mov
es
les
dec
cmp
jp
outsl
pop
es
test
subl
jno
xchg
sub
mov
cmpsb
pop
dec
push
sbb
dec
mov
jnp
pop
fcoml
test
mov
push
mov
pop
popa
out
imul
pop
repnz
adc
jl
and
jl
fs
aas
stc
stos
fcmovne
ret
and
inc
aam
out
jae
or
push
add
inc
in
jne
mov
cmpsl
jne
mov
inc
xchg
into
imul
jae
dec
push
outsb
cld
jge
xchg
mov
outsb
push
xchg
hlt
cmpsl
dec
xchg
or
ror
call
subl
sahf
xchg
jg
lret
pop
mov
and
iret
adc
test
pushl
push
enter
or
fwait
dec
out
sbb
and
insl
jne
fnstenv
add
lcall
mov
in
leave
test
roll
fcomps
adc
mov
pop
sbb
es
stos
dec
das
or
mov
push
cmc
xor
scas
lcall
cmpsb
pusha
sbb
mov
adc
roll
mov
jno
inc
dec
outsb
sub
sbb
xchg
cmpsb
pusha
fildl
imul
data16
pop
cmpb
stos
clc
loopne
out
pop
rcll
add
mov
jb
adc
fstps
push
jl
xchg
scas
repnz
push
adc
rclb
xor
sub
out
scas
push
cli
scas
adc
test
shrl
dec
push
and
mov
mov
mov
push
rorl
xor
pusha
sahf
cmp
pop
fldenv
popf
stos
or
addr16
imul
push
push
repnz
repz
je
es
loop
lock
cmp
pop
outsb
pop
mov
lds
outsl
in
mov
fdivl
xor
lods
or
mov
cmpsl
fcmove
inc
jae
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
and
mov
imul
mov
sub
mov
add
mov
cmp
jbe
mov
mov
shrd
xor
mov
shr
jmp
xor
xor
or
fcoms
invd
add
bsf
imul
mov
mov
pop
jmp
fcompl
pop
jge
push
loope
cmpl
loop
jo
jns
into
aad
adc
pop
lods
shrb
jnp
shr
ljmp
or
popa
add
data16
pop
sbb
mov
xchg
xchg
in
dec
out
xor
ds
clc
add
jbe
dec
shlb
adc
mov
jg
mov
jmp
aaa
pop
es
das
jo
inc
mov
mov
mov
fs
xor
xchg
rol
imul
inc
movsb
inc
sbb
jae
ljmp
test
sub
sub
or
lcall
mov
pop
and
xor
mov
mov
or
rcrl
xchg
ret
outsb
fnstenv
ret
dec
mov
test
rorl
pusha
mov
sbb
sahf
mov
xchg
add
ljmp
fidivrl
lods
cmpsb
fidivl
sarb
and
jb
ret
fs
xchg
cmp
mov
lock
in
xor
clc
sub
ljmp
int3
xor
add
cmp
inc
pop
into
push
xchg
mov
mov
outsb
int
jge
outsl
fstpl
ss
iret
jg
sub
push
test
data16
inc
mov
add
cld
dec
sub
fisubl
cmc
sub
imul
pusha
and
jns
mov
xor
fscale
add
icebp
inc
mov
test
mov
add
fnstcw
mov
dec
or
ret
xchg
test
sbb
dec
and
mov
imul
imul
loopw
sahf
push
push
es
cmp
mov
fdivs
rcll
ret
arpl
pop
xor
bound
push
xor
fwait
scas
adc
xchg
dec
sahf
adc
stos
aas
ss
inc
sub
insl
test
fidivs
out
adc
sub
dec
cltd
div
lret
gs
cltd
cmp
inc
dec
xchg
aad
dec
adc
shl
adc
aas
mov
push
cmp
cmpsb
daa
call
test
or
lret
test
fisubl
xchg
mov
pop
xchg
jl
or
sarl
arpl
mov
loopne
jp
notb
ret
rcll
std
pop
pop
aaa
fsubl
or
sbb
ds
jo
stos
mov
dec
xlat
insb
out
sti
sahf
sbb
fs
adc
inc
sbb
or
mov
repz
cmp
push
or
inc
and
roll
clc
mov
jnp
xchg
in
mov
push
pusha
enter
mov
cld
sub
lcall
fsin
xor
testl
stc
jno
aas
push
js
push
dec
scas
fsubl
mov
fstpl
mov
mov
jecxz
mov
sub
xchg
mov
popf
jmp
and
xor
cmp
xor
xchg
mov
ss
pop
push
xor
out
adc
fsubs
mov
jl
pop
mov
xor
mov
insb
jle
push
loope
xchg
jo
aad
or
mov
or
xchg
fildll
and
aas
ficoms
cwtl
xor
jge
add
pushf
jge
je
cmp
xor
movsb
push
adc
mulb
leave
mov
or
dec
and
jne
outsb
call
icebp
in
jns
sub
adc
rol
imul
dec
cmovnp
mov
stc
push
xchg
repnz
push
sub
adc
or
adc
push
adc
insl
pop
fdivrs
imull
rcll
jbe
and
sub
repnz
stc
sbb
lahf
je
pop
cmp
sub
fistl
aas
and
mov
ror
pop
or
mov
stc
scas
mov
scas
pop
jno
or
cli
fstl
nop
add
xchg
and
cmpsl
mov
sbb
or
nop
mov
cmp
fsubrl
popa
cmpsb
cmp
jno
aas
gs
jae
cmpsb
adc
xor
xor
pushf
pop
sbb
leave
ja
fstpt
negl
mov
pusha
cwtl
pop
inc
mov
popa
sub
divl
inc
push
add
mov
das
lods
and
aam
inc
loopne
aam
in
or
enter
in
and
and
cwtl
mov
sub
nop
scas
out
xchg
fdivrl
mov
mov
out
lods
ja
cmc
movsb
jns
es
cs
shll
sub
data16
mov
push
aas
jo
jge
cmp
loopne
cmpsl
jg
mov
cmp
dec
addr16
xchg
push
cmc
test
lods
or
lret
mov
std
mov
mov
mov
icebp
shl
data16
mov
push
data16
pushf
test
pop
push
pop
imul
sub
push
fld
mov
scas
imul
dec
jae
shr
push
mov
or
sbbl
pusha
mov
pop
push
or
rclb
std
push
outsl
lret
repnz
sbb
cwtl
mov
rcr
out
xchg
mov
fdivr
andb
sbbl
ret
repnz
dec
loope
mov
sub
dec
mov
in
cld
push
pop
cmp
mov
fiadds
insb
pop
adc
pop
out
cld
pushf
xchg
out
pop
adc
leave
pop
xchg
clc
out
pop
add
rcrl
jns
jp
push
adc
mov
xor
sbbb
jae
inc
mov
jns
imul
repz
test
xor
shl
jmp
push
mov
cli
sbb
fnstenv
dec
xor
mov
lock
invd
add
nop
xchg
fdivrl
stos
jg
stc
out
jns
sub
daa
mov
inc
divl
mov
jno
in
sub
shr
das
mov
lcall
mov
cmp
das
jno
xchg
bound
fisttps
inc
push
movsl
xor
jnp
ret
es
adc
jnp
pop
push
sub
pusha
mov
fildl
jle
jle
je
push
adc
mov
push
push
xor
rolb
ret
add
iret
sub
loop
repnz
iret
sub
loop
std
scas
add
das
aaa
aad
lods
jge
pop
ljmp
and
lret
lods
pop
and
ror
testb
aam
movsb
and
add
cli
sti
push
mov
aaa
or
inc
push
dec
add
loop
jg
or
sahf
dec
push
cmc
and
mov
nop
dec
pop
jge
loopne
inc
mov
jg
lret
inc
push
inc
pop
mov
rcrl
jecxz
jns
pop
pop
test
outsl
push
out
push
jbe
cmp
pop
mov
stos
in
outsb
lea
mov
xchg
sub
cli
ja
scas
rol
pop
lret
pop
push
lods
sbb
push
bound
push
dec
mov
push
push
out
xchg
inc
outsb
mov
fcmovnbe
mov
pushf
mov
pop
cmc
sbb
dec
testl
idiv
movsl
das
ret
fs
mov
cmp
arpl
subb
jle
cmp
or
jg
fsub
jne
insl
lret
pop
xor
mov
and
jge
mov
test
mov
xor
aas
mov
or
pop
push
ret
repnz
leave
mov
sahf
dec
test
lret
jle
xchg
push
in
in
jnp
xchg
sbb
imul
add
xchg
adc
sbb
mov
mov
and
ret
dec
jmp
stos
pop
ljmp
test
push
add
mov
mov
std
verr
shll
adc
scas
pop
mov
fwait
jl
dec
dec
mov
push
inc
push
push
shrl
inc
loope
out
jecxz
int
jecxz
je
inc
fcoml
jge
daa
push
lret
ret
paddsw
push
mov
sbbl
gs
xchg
sti
mov
out
inc
pop
jp
and
pop
movsb
in
pop
scas
pop
push
js
mov
fsubrl
xchg
pop
push
dec
mov
jmp
stos
lahf
mov
push
aaa
aaa
and
pop
pop
mov
and
imull
inc
data16
fadd
das
dec
cmpsl
in
pop
inc
cs
sti
mov
lods
popa
dec
pop
and
stos
loope
cmp
adc
sbb
out
movsl
add
or
daa
cmpsl
fwait
pop
sarl
out
sbb
aaa
or
ds
inc
cli
add
xchg
mov
ljmp
inc
jne
jl
mov
adc
push
scas
arpl
insl
ret
mov
aad
jo
pop
jne
sarl
push
lods
sarl
inc
shrb
stos
pop
out
dec
test
ret
push
xor
in
sbb
fstpt
xor
mov
mov
mov
popf
jns
and
fnstenv
adc
xor
pop
shrl
xor
cltd
lods
cmp
dec
xor
inc
sbb
inc
adc
cmpb
sarl
subb
pusha
xor
mov
ret
push
leave
mov
out
lods
mov
xchg
gs
xor
nop
jle
fdivs
push
fs
add
fwait
push
mov
enter
movsbl
pop
leave
test
cmp
cli
inc
popa
or
sbb
xor
movsl
and
test
add
insb
pop
fmul
jbe
or
add
fwait
add
adcl
xor
mov
insl
data16
mov
inc
loope
mov
pop
ror
test
pop
adc
neg
sbb
ret
pop
in
mov
adc
or
idiv
pop
jne
popa
push
int
pop
or
sub
pop
mov
xor
sahf
cs
jge
mov
xorb
and
pop
mov
cmpsl
dec
adc
je
pop
test
aam
ljmp
mov
sub
mov
jno
or
fbld
pushf
inc
test
cli
fistl
mov
testl
inc
nop
xor
mov
pop
insl
into
scas
mov
jo
mov
clc
mov
mov
jno
jg
jmp
mov
jno
or
je
cmp
out
in
mov
sbb
add
cltd
imul
lods
leave
ja
jo
add
push
pushf
sahf
stc
add
pop
sbb
dec
les
fwait
movsl
lret
dec
scas
ja
jno
dec
aam
iret
mov
out
or
jnp
repz
cmc
mov
mov
and
repnz
lods
insl
cmp
adc
push
inc
sub
call
imul
dec
xchg
jnp
xchg
lret
mov
sub
fwait
aas
and
sarb
push
pop
sbb
pop
adc
lahf
lret
repz
sbb
mov
and
adc
into
jns
inc
pop
jmp
clc
add
push
or
xchg
and
sahf
shlb
lcall
cmpsb
fsubs
jge
push
das
xor
mov
jmp
lock
mov
cmp
aas
mov
pop
cmp
xchg
aas
data16
xchg
pop
mov
push
lds
out
fstl
jle
adc
lock
add
popf
adc
cmp
fwait
xor
orb
mov
lret
jae
mov
sub
mov
shrb
xchg
mov
mulb
mov
dec
stos
ja
jmp
and
lds
inc
inc
add
ret
mov
mov
ret
push
mov
sub
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
jmp
inc
mov
or
mov
mov
test
out
mov
nop/reserved
mov
push
dec
jbe
push
mov
popa
mov
add
imul
xchg
idiv
cmp
or
ljmp
push
adc
push
std
into
packssdw
push
jns,pt
js
insb
bound
pusha
inc
cltd
fs
dec
mov
mov
dec
adc
pop
xrelease
dec
fstp
ljmp
or
inc
or
lods
lcall
lahf
mov
xchg
sahf
sarb
insb
ficomps
jnp
cli
push
data16
cs
pop
stos
lods
adc
xchg
fnstenv
clc
push
xchg
jns
imull
es
inc
and
clc
int
mov
stc
inc
xchg
and
out
mov
dec
mov
mov
aaa
pop
incb
movsb
decl
sub
inc
sbbb
pop
insb
rcr
sbb
cs
testl
cmp
cwtl
cwtl
jnp
lds
pop
sub
negl
mov
sbb
js
sbb
and
fs
lahf
fcomps
pop
mov
cli
xor
jge
cmp
fisttpl
xchg
cmc
mov
add
and
scas
imul
ret
push
pop
fs
mov
stos
inc
sub
xchg
lret
popa
repnz
mov
and
in
push
mov
mov
push
testb
jb
pop
cmp
jnp
pop
cmp
push
pop
cmp
adc
data16
fs
jbe
sti
inc
or
dec
xor
xor
fs
add
xor
mov
leave
ss
xchg
jno
mov
into
movsb
mov
aam
sub
push
outsb
add
sbb
es
lods
mov
sbb
mov
mov
mov
push
call
mov
cwtl
in
jo
xchg
xor
jo
arpl
cli
sub
add
scas
daa
iret
andl
pop
into
fdivrl
les
wbinvd
fimull
movsb
jp
call
xchg
addr16
sti
inc
mov
mov
jne
inc
mov
outsl
jno
cmp
movsl
outsl
add
xchg
cmp
call
je
mov
xchg
mov
test
mov
nop
ljmpw
xor
pop
push
out
icebp
bound
and
popf
test
inc
int
rcr
pusha
fimull
sbb
gs
stos
test
sub
or
push
inc
and
xchg
adc
dec
lret
rcl
mov
inc
adc
ds
xchg
pop
push
jb
and
jge
popa
jns
cmp
push
lret
fcompl
adc
flds
lcall
fidivrl
fmuls
push
xchg
xor
rcll
cmp
lahf
stos
pop
aam
dec
jb
and
xor
es
mov
scas
je
pusha
ret
lret
ficoml
mov
sub
inc
loop
sti
adc
lea
dec
andl
mov
sub
inc
mov
pop
ja
das
popl
call
outsl
add
adc
xchg
push
pop
jg
jg
mov
dec
mul
sub
lahf
jle
addr16
test
lods
pop
jge
adc
inc
out
jnp
pop
in
jnp
stos
fildll
lahf
js
jle
xchg
push
cmp
clc
pushf
loope
fsubs
nop
xchg
cmp
mov
sahf
cltd
push
stos
lods
mov
ret
inc
pop
mov
jp
pop
jecxz
xlat
ficompl
pop
scas
push
pop
out
into
int3
jg
push
mov
popf
cmp
sbb
test
cmp
arpl
and
cmc
call
lcall
insb
outsb
les
push
in
addr16
ret
movb
cmpsb
adc
pop
nop
out
sbb
mov
xchg
pop
fmuls
mov
mov
jp
aam
imul
xchg
les
and
push
mov
sbb
and
adcl
in
adc
inc
push
or
movsb
adc
mov
das
jne
movb
jl
xchg
lds
aad
xor
or
out
jecxz
pop
add
out
sub
addr16
pmaddwd
xor
lea
leave
lods
or
mov
cmp
pop
in
mov
lds
jnp
jmp
dec
xchg
inc
inc
xchg
repnz
jbe
jae
cmc
leave
mov
pushf
or
fdivrs
testl
mov
iret
test
scas
xchg
or
icebp
or
lret
inc
repnz
call
adc
or
adc
mov
inc
mov
sub
pushf
lcall
es
xor
adc
cmpsl
dec
jmp
inc
push
pushf
cltd
xchg
int3
push
push
inc
idivb
xor
lar
push
stos
mov
shll
js
dec
pop
jmp
inc
pop
sbb
sbb
es
repnz
lret
adc
pusha
out
push
aad
ret
test
addr16
or
iret
lret
xchg
imul
push
dec
mov
call
fisubl
lods
cmp
xor
fmull
inc
cmp
addl
test
cmp
mov
icebp
adc
out
es
mov
ja
cmp
sti
dec
sbb
pushf
fmul
js
mov
mov
mov
stos
pop
lret
lock
add
xor
stos
mov
dec
xor
mov
ret
xchg
sub
adc
sub
push
in
gs
push
pushl
or
into
sub
aam
and
outsb
sti
iret
pop
xchg
in
fsts
add
ror
mov
fisubrs
dec
mov
mov
dec
sbb
push
fidivl
xor
sbb
jg
adc
lcall
dec
fstpl
test
dec
pusha
fcompl
jnp
cmpsb
push
jecxz
push
xchg
repnz
dec
mov
stc
xchg
enter
outsb
sub
jmp
fstpt
stos
and
cmc
sub
jle
add
in
repz
ret
pop
jp
cmp
sub
ss
or
jns
bound
push
sbb
test
xchg
xor
dec
andb
in
jle
es
jne
lahf
das
lds
cmc
sub
xchg
movsb
cld
cmc
ds
fucom
add
aaa
enter
ja
imul
iret
add
mov
jnp
jb
repz
int
negl
sub
xchg
sti
lods
and
push
cmpsl
idivl
into
pop
xchg
pusha
stos
push
jae
mov
lds
fldl
and
clc
scas
mov
inc
in
jno
imul
js
mov
hlt
mov
xchg
jno
in
and
mov
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
jmp
mov
ret
mov
adc
cmpsb
js
cmp
xchg
sbb
mov
pswapd
cli
movsb
out
fidivs
ja
or
sarl
cmc
shl
out
repz
sub
lock
push
push
mov
rorl
dec
bound
xor
push
mov
shlb
rorl
dec
and
out
add
fldenv
sbb
or
or
jae
push
push
cmpsl
mov
jne
in
pop
out
rcrb
rolb
nop
inc
stos
jae
xor
call
lea
popf
loop
data16
int
inc
jl
filds
sbb
jnp
pop
inc
xor
inc
repz
out
lods
fisttpl
pop
cli
and
pop
cmp
scas
push
loopne
add
rcll
int
mov
in
sub
mov
add
in
idivl
xor
pop
nop
sub
mov
sbb
int3
fs
movsl
cmp
mov
movsl
add
xchg
jbe
xchg
fucomip
dec
mov
pop
dec
mov
in
cltd
lcall
push
xchg
aaa
scas
cmp
mov
inc
aad
gs
or
int
ret
dec
sahf
or
mov
dec
push
jae
mov
cmp
cmpsb
daa
inc
aam
repnz
inc
inc
movsb
jle
sub
repz
xor
xor
xorb
rcrb
xor
test
sbb
sub
sub
cmpsl
sub
lahf
sub
bound
sub
cs
gs
test
adc
js
pop
test
cli
inc
outsl
xor
pop
add
mov
lret
jae
and
out
add
mov
outsb
cmp
sub
sub
and
cwtl
jae
je
dec
mov
xorb
lods
xchg
cmp
xor
sahf
scas
sti
sbb
sarb
fists
rcr
or
sti
jg
jg
push
cmp
fcoms
lods
repnz
jbe
cs
icebp
daa
or
inc
adc
sub
pop
incl
fistl
pop
loopne
mov
ds
and
insl
lods
je
sub
hlt
and
push
shr
pop
in
inc
jno
loopne
jo
pushf
lods
pop
and
fisubrl
test
xchg
fs
aam
sbb
pop
mov
pop
cmp
ja
je
fimuls
in
ljmp
push
cmp
mov
sbb
ljmp
dec
cltd
int3
lods
inc
jnp
and
push
sub
mov
mov
shrb
and
mov
and
int
jmp
xor
cwtl
jecxz
test
push
and
sti
jns
mov
movsb
xor
or
rcrl
pop
and
pop
sub
mov
fdivp
scas
les
in
popf
ljmp
ret
imulb
and
movsl
and
leave
arpl
xor
icebp
je
cmp
push
lcall
sub
mov
std
or
xchg
pop
ret
sub
xor
mov
lret
adc
mov
inc
push
or
inc
std
das
xor
loopne
pusha
mov
mov
movsl
jl
scas
daa
add
pushf
sti
xchg
loope
push
mov
xchg
adc
rcrl
sbb
repz
xchg
and
or
fwait
es
cs
pop
or
inc
mov
add
iret
shll
xchg
jb
sti
mov
dec
mov
jb
inc
mov
inc
rcl
andb
jb
mov
repnz
xor
nop
jnp
pop
sub
dec
pop
sub
add
inc
push
pop
stc
cmp
xchg
out
push
add
push
mov
call
inc
jno
insl
out
psubw
push
mov
fidivl
neg
adc
mov
push
pop
and
adc
dec
cmp
test
in
jl
sahf
mov
cmpsb
sub
mov
lea
push
sub
cmp
dec
sub
sbb
stos
sub
sbb
jbe
mov
jne
cli
cmpb
movsb
lock
mov
xor
pop
fiadds
fisubrs
sbb
gs
into
xchg
xchg
xchg
and
push
int
lods
mov
sti
fldl
push
or
xor
out
or
stos
xchg
ss
or
lock
jg
xchg
sahf
stc
jb,pn
cmpb
or
scas
nop
fcoms
cwtl
dec
adc
and
nop
shr
sub
cmp
out
cmpsb
xor
aam
test
sbb
sahf
imul
cwtl
pop
negl
jbe
cmp
mov
mov
cmpsl
mov
dec
sti
dec
or
and
cmp
fisubrl
mov
push
pusha
cmp
hlt
xchg
sbb
cmp
xchg
jae
adc
or
out
xor
adc
je
push
sub
ljmp
rorb
mov
ds
fstl
push
mov
nop
xchg
mov
push
lds
add
inc
mov
scas
xchg
popa
ds
les
lds
rclb
sub
int
mov
ja
shlb
imul
rorb
test
pushf
pop
sub
ficoml
lock
jmp
mov
adc
rorb
sahf
sub
in
mov
jmp
lods
xor
mov
dec
sbb
insl
and
mov
js
xor
repz
sub
lret
andb
mov
push
mov
cwtl
subl
jb
in
cwtl
push
daa
pop
test
cmpb
pop
js
dec
sbb
add
mov
decl
xchg
jl
xchg
mov
stc
push
dec
hlt
mov
mov
outsl
fildll
add
push
sbb
outsb
cmp
enter
and
add
lods
je
xorb
scas
loopne
inc
in
push
in
in
loope
or
and
xchg
loopne
icebp
inc
pop
fcoms
or
out
mov
jo
xlat
pop
adc
lret
mov
sub
cmpsb
dec
rolb
xor
add
xor
lock
int
cmp
fmuls
lds
test
imul
mov
mov
xchg
push
cli
cwtl
js
lret
adcb
jmp
inc
mov
imul
pop
jge
cmpsl
pop
jno
fildll
int3
test
popf
pushf
cld
insb
mov
gs
test
pop
xor
out
testl
notb
push
jecxz
or
lds
iret
gs
mov
pushf
mov
jne
xor
ja
pop
inc
add
addr16
dec
movsl
loope
pop
push
jbe
inc
ror
cmp
add
inc
aam
add
add
inc
fsubs
add
int3
mov
mov
add
jmp
pop
sbb
dec
mov
or
push
loop
pop
pop
mov
movhlps
test
pop
mov
lret
fsubr
inc
dec
test
lods
mov
jecxz
jno
int
jge
inc
mov
ljmp
add
mov
outsb
mov
mov
cmp
je
aad
loopne
ror
aad
outsl
adc
xor
lods
push
clc
shlb
push
pop
loope
mov
lret
add
in
fldenv
imul
leave
dec
mov
ret
jge
movl
sub
in
dec
mov
or
mov
lds
cbtw
lret
out
ljmp
sub
out
pop
pop
movsl
cmpsb
pop
and
std
mov
jno
mov
pop
hlt
and
cmp
cmpsb
pushf
cmp
out
pop
ret
rcl
aas
fldt
jmp
push
or
adc
das
icebp
ljmp
jle
sbb
or
dec
enter
iret
xor
outsl
rorb
decl
or
cmc
push
and
out
cwtl
pop
xor
in
adc
testb
iret
ds
and
iret
adc
mov
pop
inc
insb
cmp
pop
push
insl
push
insb
daa
mov
mov
pushf
and
inc
in
fdivrs
mov
stc
stos
movsl
cltd
mov
mov
insb
sti
bound
sub
outsb
xchg
cld
aaa
mov
nop
cmp
add
add
push
push
loop
dec
pop
jp
mov
mov
cld
popf
mov
and
adc
inc
dec
dec
clc
leave
inc
xchg
mov
addr16
lahf
cmp
fyl2x
inc
push
cld
xor
mov
jle
pusha
mov
cli
mov
pop
sub
fdivs
mov
dec
dec
je
mov
inc
stos
and
pop
add
ret
and
mov
loop
mov
mov
mov
jnp
mov
push
fucomi
fstl
stos
dec
addr16
out
cmp
insb
roll
mov
cmp
pop
xlat
or
fs
ds
hlt
scas
enter
or
adc
sbb
je
dec
adc
ds
xchg
add
das
test
cltd
ss
or
jns
adc
test
dec
mov
pushf
add
sbb
and
fisttpl
cmp
sbb
inc
data16
lea
mov
lret
pop
push
mov
stc
les
cmp
enter
jg
adc
mov
mov
mov
cltd
jno
jns
jg
scas
mov
ret
addr16
scas
rorb
movb
out
mov
loopne
shrl
xor
ljmp
fwait
cmovne
pop
ss
ss
cmp
fcomip
jmp
nop
loope
cld
xorb
stos
stc
in
xchg
jae
push
std
sub
in
mov
xlat
repnz
std
mov
add
movsb
jg
std
push
cmp
mov
mov
jecxz
repz
and
pop
int
in
inc
frstor
movsb
shl
sbb
stc
int
lret
xorl
outsl
pop
push
xlat
out
test
add
aaa
out
cmpsb
and
jb
addb
arpl
add
leave
fnstcw
and
or
pop
mov
jo
adc
lods
push
dec
push
std
cltd
faddl
fisubrs
rcll
mov
pop
cmp
sbb
outsl
xchg
pop
mov
mov
adc
mov
arpl
jno
fistps
insl
mov
repz
mov
pop
sbb
mov
loop
push
jp
sbb
cs
mov
repnz
cmp
loope
xor
lret
sti
push
rcrl
add
cwtl
mov
push
pop
iret
cmp
inc
in
xlat
loop
xchg
push
and
mov
sbb
and
and
clc
mov
sbb
jnp
js
mov
jb
push
inc
aaa
mov
mov
outsb
pop
jae
imul
std
mov
jle
mov
add
xchg
imul
and
out
loope
orl
lcall
mov
lods
addr16
xchg
mov
fldl
clc
stos
or
cwtl
pop
xor
jnp
pop
jns
jne
in
mov
out
pop
push
cmp
lods
lock
cld
pop
lods
mov
xchg
out
ja
push
jg
adc
dec
cmp
xchg
fcompl
push
add
push
sub
fdiv
or
push
or
jnp
cmp
loopne
jge
pop
push
dec
pop
jmp
mov
mov
cs
das
sbb
fistpl
arpl
mov
mov
sub
add
dec
adc
and
lcall
stos
out
jo
adcl
scas
leave
sti
jecxz
or
pop
pop
sbb
dec
frstor
add
add
scas
lods
movsb
pop
dec
lret
xlat
xchg
cmp
jge,pt
cmp
adcb
add
dec
loop
dec
jmp
adc
enter
xor
test
fsubr
push
cmp
pop
and
fsubs
pop
mov
imul
lret
rclb
testl
mov
mov
lret
insl
or
les
add
cmp
cltd
hlt
cld
mov
mov
arpl
divb
insb
cs
dec
xchg
out
outsb
push
xor
in
mov
std
add
std
pop
pop
sbb
fdiv
push
rolb
subl
jo
es
pop
push
and
push
adc
fcoml
imull
test
out
cmp
vrsqrt14ps
xchg
dec
push
popa
int
shr
lret
arpl
mov
mov
xor
outsl
outsb
mov
stos
testl
scas
shlb
aam
cmova
mov
cmp
sahf
jecxz
ljmp
popf
mov
pop
sbb
mov
hlt
stc
mov
xchg
mov
outsb
hlt
dec
imul
inc
adc
xor
ss
lret
sbb
fisttpl
dec
vaesdec
mov
imul
rolb
sbbl
mov
cwtl
call
pop
mov
xor
test
sub
dec
in
scas
jno
frstor
sbb
and
cld
js
xor
push
das
cld
add
sub
xor
xchg
cmp
sti
xor
cs
sbb
push
adc
ja
pop
leave
pop
fbld
aaa
or
lods
in
mov
lea
out
in
xor
inc
mov
cmpl
lea
in
lds
insl
movsb
sbb
mov
mov
push
fdivl
popl
jmp
into
add
or
dec
xchg
notl
mov
xsavec
hlt
dec
jmp
imul
rcll
jo
icebp
rcrb
and
in
aad
movsl
ror
stc
adc
mov
dec
outsb
inc
sub
call
out
addr16
out
fidivl
jb
sbb
in
scas
mov
push
and
aad
loopne
inc
aaa
mov
aam
add
imul
mov
sbb
cmpsb
or
mov
jmp
lock
cmpsl
sbb
imul
push
mov
movsl
dec
xlat
aam
sub
add
lahf
mov
add
mov
adc
mov
lods
stos
insb
mov
lods
sahf
lds
icebp
xchg
push
push
sahf
pop
sub
xchg
xor
adc
push
sti
testb
idiv
repnz
mov
les
dec
adc
or
gs
add
sub
xchg
cmp
stc
rcll
data16
lret
adc
sub
test
cwtl
jp
push
popa
mov
bound
daa
mov
repnz
pushf
pusha
sarl
daa
and
adc
jmp
mov
inc
sarl
shll
jecxz
iret
testb
xchg
aas
data16
pop
jb
or
sbb
cvttps2pi
loope
test
cmp
jne
scas
or
sbb
hlt
mov
sbb
mov
cmc
fnstenv
sub
mov
hlt
cmp
data16
stos
xchg
int3
das
or
or
fdivrl
jns
call
out
jge
testb
cmp
stos
andb
mov
lahf
push
lock
cmp
lock
sub
popl
fwait
or
arpl
push
cltd
dec
loopne
xor
add
mov
jae
mov
test
adc
jecxz
mov
push
jbe
adc
inc
push
push
ret
cmp
daa
orl
aaa
mov
jmp
pop
in
xor
repnz
or
add
stc
iret
clc
mov
push
xlat
jge
jo
push
or
lods
xchg
or
sub
sbb
cmpsb
loop
push
js
fidivrs
clc
cmp
or
sub
out
push
push
ror
jp
xchg
sarb
push
mov
cmpsb
insl
pop
test
pushf
out
clc
stos
push
jbe
ret
adcl
shrb
lock
add
xchg
in
or
test
les
inc
stos
xchg
push
lret
decb
arpl
out
add
loope
call
cmp
jnp
sbbb
and
jge
add
adc
mov
cmp
andl
stos
mov
addr16
inc
rolb
je
mov
add
or
adc
cmp
xchg
fcoms
mov
lods
arpl
test
aam
mov
shrb
xlat
cmpsb
insl
scas
mov
test
add
push
add
mov
rcll
data16
sbb
fidivrl
xor
mov
jbe
mov
xor
or
and
pop
insb
rcrb
sub
pop
mov
jecxz
rol
inc
mov
inc
or
add
daa
out
les
adc
xchg
xchg
lahf
and
outsb
mov
jnp
sub
lret
and
pop
mov
cwtl
jge
wbinvd
lods
out
push
xchg
lock
rolb
cwtl
mov
adc
xchg
and
insb
sub
outsl
sbb
mov
paddsw
sub
aaa
mov
sbbb
lret
test
sti
divb
jbe
adc
lods
iret
mov
popf
xor
push
or
lret
mov
std
sub
fcmovb
push
in
test
or
fwait
mov
scas
add
pop
out
insl
insb
ss
and
ror
sub
in
mov
mov
sub
mov
cwtl
mov
aaa
inc
and
aaa
int
push
inc
dec
lods
pop
dec
loop
andb
aad
pop
cwtl
cmp
testb
push
xchg
add
ficoml
push
or
in
jns
push
sub
sbb
lods
subl
pop
mov
mov
push
cwtl
cmp
jecxz
mov
insl
inc
mov
imul
hlt
lods
out
and
ret
lret
jecxz
popf
outsb
push
mov
pop
rolb
dec
mov
or
dec
fstl
aad
lahf
and
xor
add
fsubrl
negl
push
les
cmpb
loop
xor
out
and
aam
sub
lcall
sbb
xor
sbb
ret
lcall
mov
cmp
out
cmc
push
pop
scas
insl
cltd
aad
push
pop
jg
out
adc
sub
xorb
in
fcom
push
movsl
sbb
out
ja
mov
push
or
xchg
inc
mov
jmp
adc
pop
pop
jg
mov
push
test
lock
aam
mov
pop
mov
mov
jo
sarb
ret
or
mov
add
dec
loop
lahf
mov
jp
ror
add
je
hlt
ljmp
mov
fimuls
inc
xchg
xor
into
jle
xchg
xchg
nop
ljmp
push
or
addl
xor
scas
xlat
mov
sub
cmp
pop
push
jge
test
icebp
std
mov
xor
mov
dec
or
in
fs
and
jecxz
int3
lcall
dec
add
pop
push
mov
shll
sub
mov
rorb
out
inc
jecxz
out
and
jns
je
lret
push
les
cs
outsb
outsl
dec
add
pop
jle
pop
push
nop
div
ret
ficomps
outsb
push
ds
mov
pop
xchg
decb
loop
cmp
ret
fiadds
cltd
js
jmp
push
imul
sub
lock
lcall
cmp
imul
push
push
push
sbb
mov
mov
add
sbb
stos
push
mov
bound
jle
outsl
inc
lret
jmp
mov
sub
adc
mov
jb
rolb
lods
cmp
push
jns
out
popa
fstp
lods
xor
xchg
repnz
xor
das
cmp
or
or
and
cmp
cli
add
dec
jnp
and
in
push
add
lcall
mov
stos
mov
add
mov
push
dec
inc
push
test
jnp
movsb
adc
mov
sub
pop
pop
and
or
jecxz
call
pusha
sbb
out
adc
jo
sub
dec
mov
push
stos
insb
sub
mov
in
fwait
jne
cs
jl
sbb
xlat
std
stc
mov
outsb
into
xor
shlb
pushf
int
clc
shll
mov
shl
nop
dec
repz
add
sbb
in
jg
iret
jno
mov
int
jecxz
scas
cmp
les
add
add
enter
sbb
mov
add
adc
or
mov
mov
mov
or
add
cltd
adc
cmp
jne
cmp
je
mov
mov
mov
mov
add
adc
or
or
add
adc
xor
xor
mov
sub
mov
sbb
mov
mov
mov
xor
cmp
jne
cmp
jmp
pop
cli
pop
sub
or
dec
pop
nop
push
xchg
lret
jbe
daa
in
adc
and
add
lret
sbb
popf
addl
push
push
xor
pop
mov
mov
call
sbb
add
inc
mov
mov
adc
add
push
or
lret
ja
xchg
cmp
adc
flds
push
nop
ja
icebp
xchg
inc
lods
aad
js
dec
inc
cmp
insb
cmp
mov
xchg
add
pusha
stos
shll
inc
cmp
shll
ss
shll
pop
mov
les
inc
mov
ds
cmpsl
mov
adc
das
rolb
nop
repz
sub
int3
stos
divb
iret
push
jns
adc
insb
xor
lret
mov
mov
or
aaa
inc
ror
fcom
shrb
push
insw
lea
xor
test
nop
icebp
fnstcw
fbld
or
mov
mov
xchg
xlat
xorl
outsl
sbb
lret
bound
jmp
js
cwtl
adc
mov
sar
fidivs
loop
push
and
jno
sarb
leave
out
push
sub
stc
fisubl
cs
rolb
es
adc
loop
xchg
loope
and
adc
popf
dec
orb
arpl
add
mov
pop
and
out
pushf
jp
pop
orl
mov
icebp
movsl
fs
ds
push
xchg
sbb
jns
lods
cli
stc
insl
pushf
xchg
mov
stos
mov
in
fildll
dec
fucomp
add
adc
lds
pusha
sahf
or
sahf
push
cld
pusha
fadd
xor
mov
inc
iret
imul
jg
push
jns
mov
jmp
dec
outsb
dec
push
inc
or
div
out
ljmp
sbb
fwait
mov
jmp
subl
add
test
add
lret
dec
testb
loop
movsb
fs
cmp
lcall
les
jmp
cmc
dec
jle
in
mov
pop
mov
push
shlb
push
sub
repnz
add
mov
mov
test
dec
xorl
mov
aad
push
cli
sub
nop
test
jb
add
cli
mov
dec
ret
cmp
aam
jo
movsl
sub
jnp
scas
xchg
push
pop
fdivrs
and
xchg
dec
jns
mov
ds
dec
push
sub
mov
repnz
xor
filds
sbb
adc
cmp
ret
fstpt
mov
mov
rcl
call
xchg
jnp
push
loope
daa
hlt
adc
test
mov
inc
pushf
xlat
pop
inc
stos
inc
pop
jb
xchg
std
ljmp
sub
add
lock
sub
xchg
and
das
or
and
push
jne
dec
xchg
cmpsl
adc
mov
aas
mov
inc
popa
in
test
cld
imul
push
test
mov
aas
push
rclb
add
and
pop
push
in
mov
mov
sbb
mov
xor
cli
hlt
cwtl
ret
xor
cmp
addps
cltd
cmp
enter
in
fsubp
aam
mov
sub
mov
arpl
mov
jns
insb
loope
adc
inc
mov
je
pop
mov
andl
popa
adc
stos
mov
or
les
push
imul
add
arpl
push
insb
and
and
pop
push
mov
into
push
out
inc
sub
nop
cmp
sbb
mov
js
bound
scas
cmp
mov
data16
pop
sbb
loop
xchg
fcmove
clc
or
xlat
clc
addr16
xchg
sbb
aam
push
pop
int3
adc
aaa
push
call
pop
outsb
fstpt
adc
scas
sbb
imul
lcall
cmp
scas
daa
ds
sahf
xor
dec
leave
popa
loop
adc
out
fs
repnz
dec
dec
sub
call
daa
mov
mov
dec
aad
or
cmp
cmp
lret
mov
jmp
push
push
xchg
xchg
sub
pop
insb
jb
test
int
jecxz
divl
dec
test
das
mov
pop
out
sbb
bound
ja
mov
dec
or
ds
mov
inc
out
dec
dec
nop
jae
mov
sti
inc
shr
nop
mov
enter
popl
jle
lahf
movsl
repz
cltd
inc
dec
mov
inc
dec
lret
lret
cmp
mov
repnz
shrb
push
out
in
push
stos
mov
mov
pop
test
ret
cli
loop
cmp
add
mov
adc
dec
xlat
push
cmc
popa
xlat
or
add
test
and
xor
adc
push
ja
adc
adc
jg
ja
pop
or
test
mov
or
push
outsb
xor
shl
push
insl
cmp
cltd
mov
fs
repz
add
jne
sbb
jle
cmpsb
sub
pop
add
je
jp
repnz
cmp
sbb
movsb
jb
xchg
out
sti
sbb
int3
pop
inc
lret
scas
lods
cltd
pop
cwtl
jnp
jne
add
jne
roll
lods
test
push
inc
and
std
ret
add
das
mov
pop
arpl
les
test
pushf
pop
mov
sbb
scas
mov
mov
and
mov
bound
cmp
add
xlat
out
lods
push
xor
push
and
lret
shlb
hlt
in
adc
and
add
movl
mov
cmpb
test
dec
mov
xchg
add
lods
iret
fisubrl
or
repz
out
outsb
push
mov
xor
scas
outsl
call
inc
jge
jbe
adc
dec
jle
in
mov
jle
jle
xchg
sub
scas
cmpsb
gs
ljmp
test
mov
int3
test
repz
and
push
mov
ret
popa
jl
xchg
and
xchg
cltd
into
shrl
mov
and
cmp
jne
aaa
mov
mov
andb
push
push
jge
inc
ds
push
cmpsb
ja
jecxz
addr16
dec
and
loope
ret
xchg
cmp
pop
add
mov
pop
leave
lahf
shll
stos
xor
xchg
xchg
push
dec
xor
ss
aam
sub
jne
mov
add
imul
xor
mov
div
jmp
lret
pop
cmp
adc
in
push
xchg
ficoms
mov
sysexit
scas
sbb
dec
mov
inc
mov
fdivl
xchg
push
xorl
pop
outsl
xor
push
movsl
pop
ss
std
pop
je
repz
lods
xor
xor
mov
sbb
pusha
test
sbb
aas
lret
xor
andb
in
cmpsb
movsb
pop
je
mov
in
lods
dec
lret
ret
xchg
bound
repz
or
cli
mov
mov
jp
mov
add
sub
and
lret
mov
or
insb
js
xor
mov
mov
dec
cli
xchg
pop
pop
dec
jmp
xchg
push
adc
clc
mov
arpl
pusha
ds
rcll
mov
fs
insb
in
mov
loope
test
xor
mov
mov
fsubr
mov
or
fistl
ficoms
ljmp
ds
pop
ljmp
mov
test
mov
or
lcall
incb
jbe
mov
aas
pushf
sti
xchg
mov
repnz
pop
in
push
push
and
nop
faddp
iret
imull
pop
mov
outsb
xlat
repnz
xlat
sbb
into
in
pop
cmp
pop
cli
movsb
jle
pop
decb
jo
sub
ficomps
jmp
sahf
mov
insb
fnstenv
adc
inc
cwtl
lods
mov
inc
cmp
push
mov
add
subb
or
mov
mov
sub
add
cmp
cmpb
les
or
jge
dec
fcomi
out
int
out
clc
sub
ret
xchg
cmpsl
test
mov
cmpsl
add
fiaddl
es
mov
cmp
les
insl
push
test
pop
insb
sbb
push
pop
test
xchg
sub
in
jl
pop
mov
push
mov
xor
cltd
dec
add
test
pop
mov
shlb
scas
ja
iret
pop
dec
sub
es
cmc
test
mov
loop
in
mov
push
mov
mov
popa
cmpsl
in
into
add
push
repnz
and
addr16
loopw
xchg
xchg
clc
jne
cmp
inc
xchg
and
inc
push
aas
dec
mov
out
push
mov
loope
mov
fsts
or
cmpsb
insl
lea
fstpt
clc
rcl
movsl
pop
push
pop
popa
push
mov
cmp
mov
cmp
insb
testb
aaa
jns
ja
in
into
loopew
nop
andb
pop
in
daa
xor
cmpl
add
sbb
icebp
ret
ja
push
sbb
shl
and
mov
jmp
js
negl
lret
mov
sub
or
jo
int3
sub
incl
nop
sub
scas
popa
clc
xor
mov
call
sub
or
push
push
es
add
scas
and
out
ja
fstpt
mov
dec
popf
or
dec
ja
inc
ror
movsb
pop
push
and
mov
cltd
jmp
or
lock
and
fsubrl
xlat
mov
mov
xor
movsl
ja
and
mov
sub
fidivl
mov
jns
into
test
lods
rcr
scas
fsts
or
inc
fsubrs
push
sub
jl
stc
sub
scas
add
and
mov
xacquire
cmp
mov
cli
outsl
hlt
xchg
inc
adc
cmp
push
cmp
pop
mov
popa
imul
mov
mov
mov
xorl
or
mov
mov
dec
rcr
scas
pushf
cmc
daa
or
sbb
sub
in
shlb
stc
or
movsb
push
mov
xor
sbbb
push
inc
cwtl
xchg
subl
fisubrl
negb
enter
sbb
loopne
fadds
scas
push
fs
push
ror
dec
push
es
out
or
loopne
incl
lock
daa
mov
mov
cltd
push
xchg
and
stos
mov
inc
stc
ljmp
out
stos
push
repz
lods
pushf
shlb
add
or
dec
repz
mov
test
xor
xor
andl
sub
mov
imul
add
mov
mov
push
fcoml
fildl
adc
test
sbb
in
jae
scas
dec
bound
xor
es
pop
jp
loopne
arpl
testl
imul
out
or
std
cmpsb
cmp
out
ss
mov
stos
jg
arpl
sub
je
pop
and
sahf
sbb
cmpsl
and
or
push
xchg
jb
sub
enter
pop
and
jp
loopne
mov
and
add
aad
jl
push
xchg
or
mov
mov
movsl
cmpsb
cmpsb
negl
test
daa
mov
inc
push
add
jno
out
mov
aam
or
lods
aam
jmp
lret
push
jno
cmc
insb
add
push
xor
lahf
xchg
mov
out
jno
repz
ljmp
mov
mov
push
subl
fwait
addr16
add
push
daa
call
arpl
inc
xchg
mov
cli
adc
jg
flds
rolb
or
push
cld
mov
ja
and
mov
addr16
test
and
or
mov
stc
sbb
add
dec
dec
out
pop
dec
add
test
fildll
xchg
movsl
das
inc
sbb
sbb
mulb
mov
aas
mov
cld
nop
jp
cmp
or
inc
add
cltd
push
jecxz
pop
outsl
lods
or
js
pop
inc
push
in
jecxz
arpl
fldl
outsl
cmc
outsl
mul
call
or
xchg
andb
stos
fucomi
sbb
aaa
arpl
stos
cmp
div
out
movsl
adc
int3
ds
mov
pop
movsb
pop
xor
jb
cmpsl
imul
and
adc
lock
cmp
je
xlat
cmp
lcall
repnz
cs
mov
pop
dec
ret
inc
mov
fs
daa
mov
flds
mov
lcall
bound
jns
ljmp
dec
out
out
inc
in
shlb
cmp
and
sub
mov
cmpsb
bound
sbbl
mov
mov
fnstsw
adc
jp
cwtl
push
into
jg
xor
adc
or
nop
dec
lods
pop
das
int3
dec
sbb
sub
shlb
jle
push
test
mov
lock
rorl
inc
add
or
jmp
cmc
xchg
cmp
push
mov
adc
xchg
mov
and
fs
nop
push
fcompl
roll
xchg
int3
add
push
jae
out
jp
xor
dec
insb
mov
adc
add
push
push
and
or
inc
movsl
mov
js
push
push
ljmp
push
push
arpl
push
into
add
sbb
fcomps
scas
push
dec
mov
xchg
and
xchg
fst
mov
imul
fisttpl
and
aaa
js
ret
inc
push
push
mov
add
dec
aaa
ds
pop
lea
or
sub
fdivs
out
push
push
mov
pmaxsw
jno,pn
sub
ljmp
cltd
stc
imul
lods
dec
jmp
push
arpl
dec
nop
pusha
adc
into
shl
push
fstl
mov
sbb
jg
stc
mov
mov
jbe
das
ja
pop
adc
arpl
xchg
xlat
aaa
push
test
add
insb
mov
xor
jmp
js
outsb
inc
sbb
movsb
push
aad
inc
ja
cli
add
cmc
xor
jmp
cmp
or
xlat
movsl
mov
xor
add
lahf
jae
popf
scas
clts
push
mov
leave
leave
es
push
lock
push
adcl
leave
and
repnz
dec
cli
into
idivl
outsb
push
push
jns
push
ficomps
jl
push
std
dec
lret
mov
push
fimuls
and
xchg
xorb
test
add
add
xchg
add
popf
inc
mov
pop
sbb
pop
push
mov
xchg
pshufw
and
cmp
addr16
pusha
ljmp
mov
fnstcw
test
cmp
cmovae
lret
or
adc
test
hlt
jnp
cmc
jb
and
and
into
sbb
sbb
xor
sub
adcb
pop
call
mov
testl
aam
clc
fcomps
lret
in
mov
addr16
cltd
fildll
jae
xchg
cmp
aaa
enter
test
test
stc
lcall
cmp
push
repnz
xor
mov
fldenv
mov
xlat
cmp
fstl
and
jmp
or
jo
mov
jne
pop
call
and
fdivl
ficompl
mov
xor
mov
xor
jg
pop
dec
hlt
inc
mov
out
std
mov
sub
sbb
cmp
mov
aaa
cmc
xor
jns
jo
cmp
cmp
sbb
cmp
addr16
arpl
pop
leave
xchg
fsubrl
cld
jbe
or
imul
aam
mov
mov
sub
setl
adc
mov
push
sub
or
fimull
andb
adc
cmp
mov
shrl
or
inc
inc
lods
shll
daa
test
pop
jns
cltd
loope
int3
nop
bound
jno
or
adc
xor
into
jae
mov
mov
testl
fisubrs
mov
mov
cli
pop
cli
lock
inc
mov
jle
xchg
dec
jl
ljmp
fwait
mov
mov
jp
xor
jmp
pop
data16
lcall
sub
cmp
inc
sub
xchg
mov
shrb
mull
das
lods
and
call
out
sbb
lods
jo
add
mov
sbb
imul
sbb
int
stos
pop
ret
cmc
push
mov
xchg
add
dec
add
jbe
pop
and
mov
xchg
xor
and
xor
mov
mov
or
jge
fs
in
in
jb
in
out
into
or
xchg
pop
add
mov
out
cmpsb
xchg
mov
dec
lea
xchg
subl
dec
frstor
mov
dec
lret
cmp
jnp
ret
pop
or
jns
jle
dec
jb
mov
mov
mov
xchg
and
decb
bound
daa
cmp
xchg
lahf
imul
mov
lret
leave
lea
xor
std
adc
mov
out
cld
inc
push
imul
dec
es
jnp
pop
lds
incb
mov
adc
xor
adc
jae
inc
or
cmpsl
int
jo
mov
lret
mov
shlb
sub
je
xchg
mov
ficomps
mov
mov
jp
je
popa
xchg
insl
mov
mov
in
cli
mov
scas
mov
add
fcmovnbe
pop
jmp
clc
loope
or
loopne
je
sub
insb
cs
out
fucomp
loopne
mov
into
ja
movsb
mov
mov
mov
jbe
lea
cmc
testb
enter
jle
mov
fldl
xlat
and
lahf
sub
xchg
mov
addr16
xchg
movsb
add
sbb
outsb
mov
add
int
nop
mov
fisubl
xchg
fidivrl
sub
sbb
lret
call
bound
scas
add
jb
ljmp
xchg
out
cmpsl
out
pusha
in
sar
sbb
lret
ja
push
xor
and
jno
test
cmp
divl
nop
push
hlt
xchg
mov
pop
ret
out
push
es
sub
inc
ret
int
ljmp
stos
sbb
sbb
out
jg
mov
pushf
leave
xor
jnp
jnp
jae
jbe
fsubl
sbb
aaa
xor
jns
or
add
ds
dec
xchg
pop
sub
sub
lea
pop
incb
push
mov
gs
mov
out
xchg
lcall
ss
mov
cmp
insb
int
pop
xchg
jne
xchg
lcall
jno
test
call
daa
mov
aad
dec
jno
push
sbb
push
daa
sahf
lods
sub
pop
iret
shrl
cmp
insl
repnz
add
int3
aad
stc
fistl
sbb
pop
ljmp
mov
ror
add
or
push
fcoml
outsb
jno
xchg
cli
push
divl
loop
pop
insl
dec
sub
cli
jecxz
or
jl
fimull
out
out
call
jl
movsb
and
dec
aam
inc
ficoml
sarl
jmp
outsb
mov
xor
push
push
xor
add
xor
mov
mov
sub
mov
and
div
mov
mov
and
sub
imul
add
jmp
scas
fldl
movsl
jl
stc
mov
cmp
and
jbe
inc
in
mov
out
xchg
test
and
dec
pop
pop
pop
pop
mov
jb
repz
push
aam
lret
push
push
loop
mov
push
or
cmp
xchg
jns
sub
xchg
cld
outsl
arpl
push
test
mov
movsb
dec
mov
jg
cmp
push
sbb
test
add
andb
mov
subb
dec
push
std
in
sbb
loopne
iret
imul
movsl
dec
and
fs
dec
cmpsb
inc
and
cli
das
fnsave
imul
call
std
jno
and
pop
test
cli
out
aaa
out
inc
lret
sbb
mov
add
sub
lods
xchg
inc
arpl
popa
mov
into
sub
add
xchg
test
adc
pushf
inc
sbb
xor
add
sbb
stc
ret
aam
sbb
sbb
pop
pushf
xor
jne
push
and
push
adc
hlt
movsb
cmc
xchg
jmp
xchg
xchg
jnp
inc
pusha
add
stos
adc
xor
sahf
leave
mov
push
pop
or
icebp
stos
out
rol
jmp
jbe
sub
data16
xor
out
hlt
popa
push
arpl
cmp
and
xchg
xchg
orb
arpl
xor
dec
rorl
testl
push
jno
aas
xor
push
fisubrs
ja
pop
or
or
mov
xchg
add
cmp
pop
or
in
mov
data16
mov
or
lcall
xor
sub
add
jne
les
pop
dec
jbe
inc
scas
pop
icebp
lock
cmc
add
cmp
mov
lahf
mov
inc
cmpsb
cmp
int
mov
int3
and
popf
xor
hlt
scas
dec
outsl
sbb
pop
dec
dec
out
addr16
cmp
xchg
cmpsb
cli
push
jne
scas
dec
sub
setg
cmp
dec
mov
pop
push
cmp
adc
push
dec
rolb
mov
ret
inc
sub
sub
dec
xchg
and
or
into
stc
les
adc
out
xlat
out
ret
add
mov
cmpsl
mov
xor
add
hlt
rep
jo
xorl
push
cli
loop
dec
xchg
cli
or
mov
pop
pushf
jmp
pusha
loope
sahf
mov
loopne
in
sub
stos
js
or
adc
shr
and
cmc
fistps
push
ljmp
stc
js
xor
cmp
sub
lret
rorb
test
sti
xor
dec
movsb
loope
jo
hlt
dec
jg
push
data16
mov
leave
fistps
ja
jno
mov
out
in
jecxz
out
pushf
xchg
add
adc
jmp
add
test
sbb
mov
movsl
pusha
shlb
lods
imul
test
jmp
hlt
popa
rclb
cltd
cltd
cmc
cmpb
lcall
sar
sub
and
lods
push
fidivl
push
mov
fwait
sbb
and
cltd
std
cmp
push
and
mov
shll
aaa
mov
mov
and
cmp
mov
cmpsl
inc
cmp
movsb
dec
les
ret
out
cmp
mov
xchg
mov
bnd
add
adc
jl
int
inc
cmp
fidivs
cmp
aad
xchg
insb
dec
and
inc
mov
xchg
jbe
jb
mov
aad
mov
cmp
ljmp
xor
jle
cs
aaa
dec
mov
movsl
mov
test
jl
xchg
fcomps
sahf
pop
pop
jno
mov
dec
stos
movsb
sti
mov
jnp
loopne
into
cs
lods
mov
shrl
out
and
movsb
mov
cmpsl
or
cli
add
push
imulb
insl
aas
jge
lods
ja
sbb
adc
shlb
push
sbb
lret
fsub
pop
sub
xchg
cmp
sbb
iret
in
mov
mov
mov
out
jmp
rorb
fsubs
inc
gs
add
ja
sub
xchg
ljmp
scas
or
dec
pop
stos
xor
stos
outsb
out
jecxz
adc
insl
mov
popa
rorb
pusha
das
insl
sbb
ret
cwtl
cmp
mov
sbb
push
sub
jns
sbb
jbe
ljmp
scas
jle
aas
jns
outsl
push
add
sbb
iret
inc
xor
mov
pop
ror
or
call
xchg
xchg
sub
mov
imull
fisubrs
test
jno
mov
push
mov
insl
sahf
cwtl
sti
inc
xor
bound
adc
cmp
rcrb
out
mov
dec
dec
mov
inc
das
aam
inc
imul
int3
cmp
or
push
loopne
sub
jbe
shll
xchg
cmp
inc
push
mov
sub
xor
cmp
pop
mov
mov
xchg
ja
pop
adc
cld
dec
dec
mov
aaa
add
push
pop
mov
jg
push
hlt
dec
mov
nop
sub
lea
or
xorl
cmp
xchg
dec
adc
mov
pop
adc
out
mov
shll
in
or
mov
lds
inc
push
aas
xor
loop
inc
xor
sahf
stos
sub
cmpsb
pop
jne
mov
subb
fldcw
popf
enter
stos
das
sub
arpl
out
cmp
inc
xlat
or
leave
sub
idivl
jno
push
insb
lahf
pop
jp
out
dec
inc
shll
fsubrs
sahf
scas
je
cmp
ret
mov
jp
xor
jecxz
dec
sub
adc
int
lret
test
adc
mov
inc
in
call
push
clc
xor
push
pushf
pop
cmp
adc
mov
arpl
cmpxchg
pop
adc
pushl
mov
xchg
int
jmp
xchg
jae
mov
dec
xor
xchg
cmp
adc
in
cmp
dec
ret
and
sbb
lea
jae
adc
enter
pusha
and
cwtl
jbe
push
out
cld
mov
pusha
rclb
jne
aaa
push
divl
push
mov
lds
fwait
stos
inc
insb
jne
insl
addr16
mov
imul
jp
bnd
subl
mov
int
movq
mov
dec
mov
jge
cltd
sub
ret
mov
dec
test
pop
nop
dec
sub
rorb
mov
cmp
lods
loopne
neg
lahf
dec
mov
mov
lret
adc
push
out
xor
and
jmp
jne
add
subl
xchg
sub
adc
and
jne
dec
mov
pop
jl
repz
jno
sub
mov
or
push
push
sbb
add
cld
dec
rcrl
lods
jl
mov
adc
les
cmc
imul
fs
add
loopne
decl
out
in
movups
frstor
in
xchg
pop
pop
std
rcrl
mov
add
lcall
shll
fldl
js
in
push
addr16
inc
int
imul
icebp
lahf
or
movsb
lret
icebp
push
jnp
add
jg
adc
pusha
ljmp
fwait
dec
ss
cmp
jne
rorb
mov
cld
or
sbb
inc
xor
xchg
jno
arpl
jnp
sbbl
movsb
cmp
xor
clc
ret
shll
out
fucomi
lods
push
rolb
mov
mov
fcoml
std
add
js
xchg
push
das
imul
pushf
sub
mov
ss
cld
cmp
adc
jb
push
movsb
xor
and
or
cli
xor
push
test
cltd
ljmp
add
mov
in
insb
andl
add
xchg
testb
push
xchg
xor
loope
pop
jmp
out
xor
ret
fdivs
cmp
add
dec
adc
sbb
mov
sbb
cmpsb
repz
imul
mov
mov
hlt
mov
sub
push
movb
sbb
xorb
ss
jb
xor
mov
gs
cltd
stc
ror
sbb
icebp
jnp
mov
arpl
test
cmp
lcall
adc
jl
pop
jae
ds
cmc
mov
and
and
hlt
mov
ss
cwtl
leave
ja
push
inc
pop
fcoml
add
adc
push
mov
pushf
mov
inc
jae
outsb
add
add
cli
lock
je
cli
ret
sub
aas
jge
xlat
fsubl
mov
sti
imul
mov
test
js
push
xor
sub
inc
inc
push
cmpsl
fisubs
pusha
popa
outsb
adc
and
dec
call
adc
sub
lret
mov
and
mov
pop
jns,pn
xor
sbb
je
mov
es
or
mov
aaa
sarl
outsl
pop
jmp
jmp
ljmp
mov
mov
and
jbe
fcoms
ds
xchg
mov
mov
and
sarl
enter
ss
inc
push
int
cmp
test
push
insl
testl
pop
mov
pusha
jmp
cmp
leave
data16
mov
jne
scas
add
in
mov
icebp
mov
data16
sub
scas
arpl
jg
xchg
sub
mov
and
std
shr
insb
pop
xor
cmp
mov
push
mov
rorl
mov
push
or
punpckhdq
call
loope
lahf
adc
sbb
pop
cmp
dec
cmpsl
test
test
ffreep
fsubrl
arpl
jae
xchg
push
popa
or
lcall
les
inc
pop
dec
jbe
add
out
idivl
mov
inc
add
xor
aad
cmpsl
sub
test
mov
aam
fsubp
fsts
mov
aam
mov
pop
jno,pn
jns
mov
xor
test
push
test
loop
cmc
orl
idivb
push
loope
sub
mov
mov
pop
push
add
adc
sbb
pop
adc
sub
cmpsb
mov
xchg
outsl
jo
mov
mov
dec
add
inc
add
adc
pop
xor
push
ja
xchg
jmp
adc
jmp
outsb
ja
inc
inc
adc
add
jmp
and
loop
push
jbe
lea
push
inc
pop
xchg
mov
inc
sub
mov
mov
push
hlt
in
cld
xchg
int3
sub
mov
nop
mov
mov
jno
dec
jae
xchg
mov
in
pop
xchg
pop
ret
movsb
inc
or
js
call
mov
inc
lods
fmulp
in
rorb
test
sub
mov
ja
push
arpl
or
jnp
jnp
inc
xchg
and
or
dec
jne
xor
in
inc
in
cmpsl
jmp
jg
imul
and
or
or
sbb
fsubrs
mov
pop
and
or
loope
mov
lds
shlb
jns
push
jb
xchg
mov
icebp
lock
cmpsb
xchg
rol
pop
push
je
cli
ret
pop
adc
mov
add
scas
xchg
or
xchg
stc
push
scas
iret
mov
and
add
jno
mov
inc
imulb
movsb
mov
or
in
cltd
sbb
xor
fmuls
xor
shrl
cmc
jmp
mov
out
xor
fldenv
dec
insb
jp
lock
aaa
xchg
cmp
jne
push
stos
aas
in
scas
jp
inc
push
and
mov
nop
push
lods
scas
jl
loopne
test
enter
sbb
adc
mov
repz
test
test
push
outsb
dec
push
mov
hlt
fwait
ja
xor
dec
notl
xor
std
or
push
test
jl
out
fisubrs
mov
loop
xor
sti
idivb
xchg
les
imul
xchg
lock
sub
into
addl
loopne
cmpsl
rcll
dec
mov
outsl
xchg
mov
mov
in
jns
mov
es
cld
outsl
pop
inc
mov
push
mov
addl
mov
xchg
mov
out
push
pop
jno
jno
jg
pusha
pop
mov
sti
mov
inc
push
loope,pt
mov
and
loop
mov
mov
out
inc
sub
xchg
sbb
mov
or
and
add
clc
mov
ja
in
push
adc
out
lcall
aas
iret
gs
insl
push
and
and
call
xor
hlt
hlt
pop
ror
lods
dec
jo
cmp
nop
daa
and
push
mov
pop
sub
or
fildl
xor
repnz
out
xchg
push
sahf
xchg
mov
push
mov
jmp
mov
sub
and
out
leave
arpl
cwtl
fdivrs
push
cmp
adc
movsl
negl
mov
cmp
fidivrs
lret
fisubrs
pop
dec
cld
add
imul
push
add
pop
or
fdivrl
or
incl
enter
add
jmp
nop
shrb
sub
addr16
sub
fsubrs
mov
paddw
mov
arpl
jbe
adc
scas
sbb
je
mov
cmp
push
lahf
cmp
cmc
xor
mov
inc
sti
sub
repz
gs
xchg
aas
pop
mov
add
cmc
push
aam
pushf
mov
cmp
pop
sarb
cltd
gs
fdivs
cmpsb
insl
lahf
jecxz
jp
sbb
lret
jb
loope
cmp
push
scas
stos
mov
mov
pop
gs
push
mov
fwait
cmpsb
jo
cmp
push
sbb
sti
ljmp
std
inc
push
jge
push
call
fisubrl
sbb
scas
pop
xor
cmp
aam
add
in
xorl
xor
lcall
test
mov
xchg
loopne
je
loope
xlat
mov
in
out
adc
retw
mov
jo
je
out
fsubr
push
leave
add
call
fidivs
dec
dec
in
jne
xor
cmp
pop
xor
mov
shrb
sub
outsl
mov
cmp
ret
push
movsb
jae
gs
adc
les
push
leave
pop
adc
aas
sbb
cmp
sub
mov
out
es
mov
add
pop
in
sub
inc
push
push
push
sahf
dec
xchg
jmp
pushf
adc
scas
mov
or
es
mov
mov
pusha
out
dec
push
lods
aam
push
push
cmp
nop
pop
fucomip
mov
dec
add
mov
stc
pop
popa
jns
inc
jmp
add
imul
mov
sbb
dec
mov
and
dec
movsl
mov
repz
mov
stos
mov
call
pop
xchg
jp
out
into
adcb
andl
pop
call
loope
xchg
push
cmp
push
repz
pop
shlb
popa
jns
dec
cli
fs
cli
add
jb
ja
arpl
mov
jmp
jo
and
dec
repnz
inc
in
push
lea
testb
dec
mov
sbb
imul
pop
xor
lods
sbb
jmp
cmpsl
cmp
outsb
out
ss
mov
cmp
xor
out
sub
dec
mov
addr16
pop
lret
fiadds
cmp
sbb
dec
aam
cmpsl
bsf
inc
cmp
dec
jnp
sbb
repnz
mov
loopne
adc
test
lret
cltd
fisubrs
out
pop
stos
mov
pop
inc
insl
cltd
xchg
jns
orb
or
ja
bound
out
pop
sub
lds
cli
push
dec
lock
push
pop
pop
and
test
dec
addr16
into
loope
cmp
mov
pop
in
cmp
jne
test
aas
lcall
mull
cmp
add
add
ret
cltd
fcompl
xor
xor
jb
dec
fwait
shrd
and
pop
mov
sbb
in
add
pop
ss
sub
pushl
cmpsb
push
xlat
cmp
lcall
xor
outsb
flds
pop
mov
int3
test
xchg
mov
cmp
movsl
out
imul
pop
push
jns
xchg
addr16
movsl
mov
cltd
pop
repnz
imul
push
mov
jg
out
in
lock
add
popf
mov
gs
imul
jg
xchg
into
loop
aaa
and
cmpsl
xchg
cld
cld
sub
or
test
int3
mov
sbb
fld1
out
in
and
iret
js
fisubrl
pop
std
cmpsb
cmp
je
mov
add
and
sub
pushf
lds
rcr
pop
repnz
test
jb
or
lods
lds
add
mov
cmp
scas
sub
and
mov
loope
or
jnp
lcall
fdivs
lea
in
test
aaa
jp
fistpll
pop
xchg
push
dec
pop
xchg
cltd
enter
iret
negl
adc
jle,pn
adc
mov
shr
imul
movsl
in
popa
and
cmp
out
dec
push
push
xchg
popa
and
mov
enter
into
rcrl
mov
pop
clc
cmp
and
subl
movsl
jmp
ret
out
xorl
lock
imul
xchg
inc
push
pop
in
fists
inc
test
mov
lret
lock
xor
cmp
add
cltd
mov
pop
lods
mov
imulb
cwtl
sub
mov
test
pop
xchg
lahf
inc
jbe
sbb
rcr
hlt
movl
inc
cld
mov
dec
sti
adc
inc
and
out
xchg
pop
daa
pushf
jo
sbb
aaa
sub
aas
mov
xor
xchg
cwtl
aas
fdiv
fldenv
xor
ljmp
leave
test
int3
cli
mov
pop
cltd
inc
pushf
and
mov
gs
mov
mov
add
adc
cld
cmp
sbb
pop
fadd
ljmp
sub
and
jl
add
mov
aaa
xorb
cmp
and
pop
rcrb
and
cli
lods
xchg
sub
add
push
fldenv
rcr
scas
push
or
fsqrt
fsts
jmp
jnp
jno
shll
sub
sbb
andb
insb
sub
xchg
mov
enterw
jmp
pop
insb
cmpsl
jge
push
fcompl
add
sub
fs
jp
ja
xchg
inc
popf
ret
mov
xor
lret
mov
xchg
xchg
sbb
imul
sbb
push
ljmp
xchg
push
xchg
add
shrb
or
scas
aam
in
jo
mov
mov
bound
sub
push
aas
mov
or
je
popa
shr
mov
fwait
push
xchg
mov
and
fs
aas
or
out
push
and
sub
pop
adc
push
mov
lret
fcompl
sub
inc
bound
cmpsl
fs
jne
adc
sbb
xchg
jmp
iret
je
push
push
xchg
xchg
inc
fs
inc
aad
cltd
sub
cmpsb
jge
mov
lods
outsl
in
cmp
ljmp
fwait
test
rorl
mov
repnz
movsb
jp
ljmp
sahf
cmpb
addr16
ror
mov
in
mov
sysret
or
loopne
push
xchg
add
shrl
iret
jp
jne
jge
rorb
or
xor
add
mov
add
mov
mov
mov
mov
xor
xor
add
adc
jmp
push
gs
pop
out
dec
push
push
add
mov
loop
xchg
mov
dec
int
shl
ljmp
ja
inc
pop
sub
cmpsb
test
sbb
xchg
mov
mov
pop
xchg
mov
mov
stos
loopne
ret
jb
push
sti
je
adc
xor
xchg
daa
fnstenv
push
ret
add
push
jle
push
in
rcrl
or
rclb
pop
mov
dec
xchg
push
ret
push
pop
test
sub
sbb
fiadds
cmpsb
pop
lret
and
sub
dec
andl
cmc
xchg
xchg
fists
les
int
lcall
das
inc
add
mov
mov
insl
xchg
test
push
or
push
add
mov
jno
cmp
cli
loope
mov
xor
fcomps
test
dec
ret
in
outsl
mov
jo
pop
dec
add
adc
enter
sti
dec
mov
add
cwtl
or
mov
cmp
imul
push
pop
loop
lods
push
mov
dec
scas
inc
stc
loopne
bound
xchg
sbb
add
xchg
cmp
pusha
xchg
popl
mov
push
ret
jnp
sub
inc
jge
cli
mov
repnz
gs
cmp
cmpsb
xor
mov
cmc
sub
lea
cmc
orl
subl
ljmp
fcmovbe
sbb
jmp
pop
xor
sub
adc
sbb
nop
dec
enter
add
adc
stos
sub
int
mov
push
mov
jg
dec
or
outsl
in
aas
lock
scas
mov
ret
scas
jecxz
stc
mov
adc
or
imulb
mov
loopne
aam
sub
and
js
jg
fcoms
das
test
mov
test
dec
inc
xor
xchg
adc
or
mov
mov
inc
aad
mov
mov
sarl
mov
lods
pop
cltd
pop
fcomps
imul
push
in
out
mov
or
mov
sbb
movsl
jp
mov
call
push
pusha
je
divb
jge
mov
jmp
test
add
add
mov
bound
mov
mov
movsl
cs
outsb
push
push
xor
jnp
lds
push
pop
adc
outsb
sbb
rol
jnp
int3
sub
pop
iret
pushf
mov
les
icebp
mov
and
roll
jns
or
sbb
xchg
push
testl
jp
mov
pop
repz
push
js
mov
shl
dec
insb
dec
xchg
fldt
sarb
dec
cs
popf
in
push
ja
and
and
add
mov
insl
outsl
mov
sbb
jle
outsl
xor
test
jmp
daa
or
shlb
cmp
pop
push
pushf
scas
dec
lock
es
test
stos
dec
ds
ret
jno
pop
adc
push
dec
std
insl
push
add
push
xorb
bound
dec
in
push
dec
in
and
in
lods
lret
enter
mov
outsb
shrb
lret
ds
push
insl
dec
jno
mov
inc
lret
stos
xor
cli
add
lcall
sbb
testb
cmp
scas
mov
adc
xor
les
outsb
enter
std
rorl
cmpsl
fisubl
adc
fwait
sub
jge
ret
in
mov
mov
mov
or
xchg
imul
outsb
push
sub
es
xor
scas
lahf
popa
jb
xor
and
arpl
in
and
inc
imul
pop
mov
xchg
xor
mov
and
cmc
in
sti
inc
aas
xchg
and
sarl
inc
pop
push
push
fistpll
cmp
dec
stos
insl
mov
mov
pop
inc
add
in
call
out
call
fbld
pop
into
lretw
sbb
test
pop
jge
addr16
in
vpaddsw
cmpb
ss
cmp
pushf
jb
js
xor
iret
and
jg
icebp
mov
push
lock
mov
cltd
jno
stos
pop
iret
inc
sub
mov
loope
test
pop
iret
pop
pop
mov
sbb
xlat
or
repnz
daa
mov
mulb
es
dec
cltd
iret
testb
jge
lret
cmp
or
cmp
push
iret
jl
add
sbb
insb
sub
fiadds
imul
sub
or
mov
add
dec
fidivrs
cmp
lret
lret
ja
push
jbe
inc
sub
dec
icebp
iret
stc
add
fwait
inc
push
cmp
pop
mov
jp
inc
outsl
ljmp
cmp
test
push
jo
or
mov
sub
jmp
sbb
add
push
pop
test
or
or
or
das
jb
sbb
xlat
sbb
test
fstpl
push
orl
or
xor
or
fcmovb
push
mov
shll
or
xor
jns
lahf
push
popa
inc
adc
sub
rclb
mov
incl
ficoml
aad
or
cli
push
mov
fistpll
call
test
mov
mov
mov
xlat
testl
aaa
jl
pop
fsub
push
test
add
daa
push
and
std
and
in
std
fsts
or
or
je
jbe
mov
bnd
dec
and
mov
jnp
mov
sti
imul
mov
in
dec
mov
mov
push
mov
rcrb
cli
ljmp
sti
mov
ja
ds
mov
pop
and
jge
mov
or
adc
insb
cmp
fisttpll
mov
pop
push
jo
mov
sub
cmp
cmp
or
cmp
jp
sti
add
repnz
pusha
pop
ret
mulb
push
jecxz
pop
outsl
ljmp
hlt
and
mov
cwtl
inc
xor
test
inc
mov
mov
les
inc
sbb
mov
loop
jbe
aas
sub
lods
adc
adc
out
and
cltd
add
in
jne
cli
push
push
in
jecxz
in
orl
shll
adc
xor
arpl
inc
sub
fstpl
mov
loop
mov
mov
fxch
int
js
fisubrl
ja
jg
aaa
cmpsb
xlat
nop
mov
pop
or
repz
andb
adc
cli
int3
cmp
fidivrs
ret
mov
enter
nop
pop
add
sbb
push
adc
xchg
int3
xchg
outsb
xchg
cwtl
nop
adc
and
mov
imul
dec
xchg
les
pop
mov
push
fisubl
in
aad
addr16
insl
dec
ficomps
repnz
xor
test
push
addr16
pop
fldt
data16
mov
xchg
rcll
mov
icebp
out
xchg
pop
lods
jp
xor
dec
enter
push
adc
mov
cmpsl
adc
push
mov
imul
test
gs
xor
call
jl
lds
je
add
push
repnz
mov
mov
std
sub
dec
cmp
sahf
pop
dec
sbb
imul
inc
out
clc
push
out
int3
fisubrl
aad
dec
mov
in
xchg
or
sti
adc
xchg
lret
and
mov
dec
jns
sub
addr16
sub
xor
test
stos
xlat
mov
adc
lret
xchg
cmpsb
mov
mov
jno
adc
subl
push
or
xor
adc
dec
sarb
cmc
sub
pop
push
jns
in
mov
rolb
fistpl
lods
out
popa
pop
dec
cmpsl
pop
je
icebp
cs
fucom
mov
inc
xchg
jns
out
iret
jl
daa
mov
inc
adc
loope
xor
mov
sbb
adcb
in
dec
test
fnsave
xor
cld
out
loope
adc
int
dec
stc
or
ja
lock
in
mov
sarl
out
cmp
push
mov
inc
smsw
push
mov
sbb
pop
out
ljmp
inc
xlat
fdivr
inc
repz
in
or
cmp
and
out
adc
scas
mov
es
lds
jns
dec
cmp
int
xchg
aad
xor
in
pusha
sbb
js
pop
repz
rcl
test
push
pop
fmuls
push
sbb
ss
fs
jl
iret
pusha
push
push
cwtl
pop
push
and
inc
into
xor
xchg
popf
shll
outsl
cs
sub
inc
inc
das
dec
or
inc
sub
push
ljmp
and
pop
push
pop
dec
es
aam
sub
fstl
fists
nop
xchg
or
dec
pop
and
adc
mov
fdivs
adc
test
mov
lock
dec
pop
sub
push
clc
stc
xchg
movsl
in
repnz
xchg
stos
inc
dec
xchg
jmp
ljmp
sbb
xchg
icebp
xor
mov
jg
dec
or
addr16
push
vsqrtss
pop
test
sbb
inc
adc
out
shrb
imul
mov
pop
movsl
xor
jbe
fildl
dec
sbb
es
or
xchg
cmp
movsb
inc
mov
dec
or
outsb
cmp
lret
subl
push
fucom
jb
outsl
mull
jbe
inc
pop
adc
sbb
adc
aad
fldenv
rclb
dec
cs
popa
xchg
pushf
dec
repnz
dec
jg
rcrl
adc
fdivl
pop
loop
dec
sub
pop
cmc
mull
in
push
js
mov
xchg
lret
mov
lcall
mov
paddusb
or
out
outsl
adcb
mov
push
test
push
add
cmp
ret
inc
dec
stos
inc
cmp
dec
mov
imul
mov
add
mov
popa
popa
push
mov
dec
int3
cmp
js
popf
xchg
and
cmp
out
in
icebp
or
sub
lods
mov
in
out
cmc
mov
dec
mov
mov
add
int3
pop
adc
sbbl
das
jle
cmp
sbb
cmp
fadd
jle
xchg
dec
xchg
loopne
in
cld
mov
jb
cld
xchg
lcall
or
pop
mov
xor
sub
clc
daa
addb
cmp
mov
lcall
and
stos
mov
nop
sti
jg
jmp
mov
pop
mov
pop
in
pop
adc
in
fists
cmp
retw
pop
scas
out
inc
xchg
out
ret
jle
and
xor
testl
cmp
stos
lahf
mov
pushf
pop
cld
pushf
imul
push
lahf
mov
dec
sub
and
pop
sub
mov
cli
stos
sbb
cld
sub
mov
outsl
dec
jmp
popl
pushf
inc
sahf
scas
cmp
jo
jnp
inc
xor
aas
adc
mov
mov
or
lods
aaa
in
repnz
sub
or
sub
push
mov
cmp
ret
lahf
and
sub
adc
push
call
popf
or
jns
jo
mov
fdivl
push
jb
ret
cmp
or
mov
into
mov
sub
mov
jne
outsb
gs
push
movsl
mov
dec
and
jp
jg
pop
xor
xor
shlb
pop
mov
mov
je
mov
or
popf
jae
ja
adc
dec
pop
mov
pop
call
scas
dec
push
cld
das
push
adc
data16
mov
cmp
push
adc
pop
ss
pop
mov
test
arpl
test
jmp
or
ljmp
cmp
or
inc
movd
faddl
fcmovb
mov
out
fcom
add
push
ficompl
outsb
movsl
mov
les
mov
test
xchg
inc
xor
out
ss
xchg
loope
sbb
cmpsb
das
jbe
pushf
jmp
enter
cltd
and
test
das
stos
mov
icebp
or
sub
lods
out
mov
pop
jnp
sbb
sahf
lock
lods
xor
mov
lock
sbbl
repnz
jno
int3
and
add
mov
dec
icebp
cwtl
sbb
mov
insb
mov
roll
enter
xor
sub
jg
movsb
std
push
push
push
test
xchg
mov
jnp
mov
cmp
jno
cmp
xor
stos
pop
xchg
push
push
jp
mov
sahf
and
icebp
repz
push
ds
push
imul
dec
clc
cmp
mov
mov
add
xchg
adc
pop
jmp
bound
fdivl
stos
inc
add
insb
leave
push
push
xor
arpl
mov
or
fwait
pop
loopne
push
setae
test
and
or
inc
sbb
jecxz
push
jb
jne
fwait
mov
bound
jae
mov
jge
xchg
sar
icebp
sub
adc
add
xor
add
push
sub
pop
out
sbb
ffree
xor
jg
scas
repz
adc
xchg
fcoml
hlt
mov
popf
add
push
push
push
push
call
mov
add
adc
xor
cmp
jne
cmp
jne
mov
mov
imul
mov
or
sub
mov
lea
mov
pop
leave
ret
push
mov
sub
cmpl
jg
mov
add
jmp
pushl
call
push
jmp
addb
add
inc
ficoms
cmpsl
xchg
jno
push
je
imul
mov
loop
cmp
jle
rcrl
and
daa
pop
xchg
or
test
dec
aas
test
fisttpl
out
mov
pop
jmp
pop
jl
adc
jae
jae
mov
lcall
sar
jne
and
pop
insl
inc
das
repnz
rcr
xor
inc
push
and
mov
or
shll
push
ror
mov
mov
sub
lock
cld
jge
mov
xor
stc
imul
int
mov
sbb
stos
add
notl
xor
push
outsl
and
stc
fisttpll
stos
mov
pop
mov
pop
out
in
fcomp
pop
aad
int
mov
jne
in
fwait
sti
sub
inc
or
pop
mov
mov
out
rorb
ljmp
mov
add
enter
ficomps
push
call
fs
dec
out
shrb
jle
fs
adc
dec
mov
or
das
pop
add
xor
sub
jae
loopne
mov
mov
lahf
repz
iret
out
lret
mov
push
cmc
mov
ret
and
jae
jmp
insb
sbb
mov
sbbb
aam
cmpb
aaa
bound
popf
xchg
ja
mov
sarb
dec
insl
or
inc
mov
and
in
inc
push
pop
orl
pop
add
ljmp
add
mov
fcomi
dec
push
mov
mov
mov
mov
hlt
js
sub
mov
mov
pop
pop
pop
shl
xor
adc
lret
or
or
lds
out
int
and
jno
icebp
ja
inc
scas
mov
xchg
jae
insb
movsb
xor
push
mov
lock
xchg
ret
mov
push
pop
mov
pop
sti
lcall
lret
fcompp
dec
xchg
dec
adc
cmpsl
mov
mov
shll
imul
imul
jnp
popf
js
xor
pop
pop
mov
enter
popf
jl
mov
stc
clc
clc
icebp
mov
sub
xchg
inc
out
cli
mov
adcb
mov
iret
adc
sbb
xchg
std
imul
into
add
jb
xor
int3
inc
adc
sub
xchg
pushf
jle
movsl
cwtl
sbb
xchg
stos
mov
ror
jne
push
mov
roll
in
cltd
ss
mov
or
sub
xchg
mov
or
sbb
and
xchg
push
and
ja
inc
enter
jbe
dec
mov
cmp
mov
sbbb
mov
or
stc
hlt
xor
ds
loopne
mov
xor
clc
stos
imul
add
fwait
jo
xchg
jae
xlat
inc
mov
and
cmp
adc
fldt
out
cmp
mov
aaa
add
mov
addb
xor
mov
mov
aam
bound
std
mov
or
add
jle
ljmp
insl
roll
xor
iret
mov
sub
push
and
loopne
xor
jne
insl
xchg
imul
mov
incb
lret
push
mov
je
jae
aad
push
insl
out
xor
je
xchg
inc
and
into
popf
in
enter
call
rcrl
ret
lock
add
bound
sbb
jle
cmc
push
and
aam
xor
jno
push
mov
and
fwait
xor
lods
xor
in
insb
pop
mov
cmpsb
imul
ret
mov
mov
add
push
testl
mov
cmp
jecxz
xor
jl
out
push
or
stos
imulb
outsl
lea
or
jae
cmp
out
xorb
push
std
pop
js
insb
dec
lods
sub
adc
stc
dec
leave
callw
add
iret
inc
popa
xor
push
jo
jp
out
sbb
out
fimuls
jecxz
ss
nop
mov
xor
shrl
xor
mov
call
jp
sarb
sub
add
sbb
fdiv
add
stos
das
cmp
out
addb
sbb
dec
or
cmp
test
xchg
add
nop
rorb
sbb
pop
les
idivb
cld
cmp
call
mov
shlb
mov
jnp
es
fsubrs
push
aaa
add
dec
cmp
xor
cmpsl
repz
pop
xor
dec
in
outsb
fistpll
lahf
stc
push
push
ds
addr16
and
jecxz
push
in
cmp
nop
adcl
ja
push
les
pushf
adc
sbb
pop
mov
jnp
mov
sbb
insl
loopne
ret
icebp
sbb
int3
ret
testb
pop
push
rcll
lds
dec
mov
push
dec
fstl
mov
push
mov
push
fcomps
adc
ss
jnp
testl
dec
and
mov
xchg
inc
pusha
push
xor
adc
cmpsl
push
push
push
push
icebp
xor
shl
ja
test
out
cltd
mov
negb
mov
cwtl
jne
mov
dec
push
fcompl
or
jp
mov
and
aad
dec
and
mov
inc
in
jbe
mov
ret
movsl
lock
rorl
test
jle
xchg
sub
and
pop
dec
cmp
pop
pop
rcll
adc
in
push
and
add
jecxz
add
stos
lea
jle
cwtl
imul
xlat
lcall
mov
fdivl
rcrl
push
rorb
push
jo
fiaddl
push
pop
jne
fimuls
scas
push
jp
addl
out
cwtl
sahf
les
fs
xchg
stos
mov
ret
outsl
inc
js
mov
jo
aad
jg,pt
sbb
rcrb
add
push
xor
add
cmp
lret
stos
adc
adc
adc
shrl
cmp
popf
sbb
mov
cmpsb
xor
add
push
sbb
xchg
dec
pushf
xchg
and
adc
inc
sbb
sub
sbb
inc
jle
add
xchg
nop
push
cmp
ja
popf
pop
decb
sbb
cltd
xlat
ss
push
movsl
iret
lods
clc
and
push
mov
addr16
or
xchg
mov
out
and
hlt
stos
jae
dec
dec
jno
inc
mov
push
cmpl
sub
jnp
gs
cs
negb
fwait
pop
or
into
pop
pusha
test
mov
adc
mov
xchg
push
mov
test
and
fnsave
or
shlb
fimuls
add
lret
movsb
sub
outsl
int3
stos
push
jle
nop
push
push
sbbl
mov
push
push
mov
mov
cmpl
jge
movzbl
add
adc
jmp
push
push
push
pushl
call
shrd
jmp
outsb
fwait
push
movsl
or
movsb
js
pop
jbe
addl
mov
test
cmpsb
in
jnp
push
rcl
push
push
andb
adc
fcoml
mov
pop
pop
inc
or
or
and
popa
gs
mov
xor
insl
xchg
out
sub
iret
mov
shll
mov
push
jno
call
sub
xchg
clc
lahf
jecxz
clc
nop
out
push
repz
fildll
stc
ret
push
pop
adc
and
mov
fcompl
jp
aas
xor
cmp
adc
cmc
push
or
sub
mov
shl
mov
mov
inc
xchg
out
jns
cmp
outsb
cltd
adc
dec
sub
sbb
rorl
adc
xchg
fisttpl
aas
mov
adc
jb
sahf
push
cmpsb
xor
hlt
mov
aaa
ret
xchg
aam
push
andb
or
icebp
pop
push
jo
in
lods
jge
fs
and
loopne
jne
in
stos
std
xchg
cmp
scas
xor
dec
inc
int3
xchg
in
cmc
xchg
xor
js
pop
pop
mov
mov
jnp
jo
mov
in
orb
jae
repnz
xchg
and
fsubr
xlat
aas
mov
mov
aaa
imul
int3
frstor
or
push
aad
test
ja
ret
lods
xor
popa
push
ss
in
jl
loop
js
fcomps
mov
push
sbb
data16
jecxz
push
jmp
je
push
adc
in
loop
inc
fiadds
daa
dec
aas
cli
adc
jbe
fisttpll
repnz
out
pushf
iret
aaa
mov
push
aas
lock
ficoms
xchg
nop
dec
mov
enter
rclb
mov
test
xchg
push
jmp
out
fsubrp
and
pop
stos
lds
cli
stos
bound
push
xor
repnz
les
mov
and
addb
in
mov
lods
add
and
xchg
pop
popf
es
sub
aad
mov
cs
dec
adc
pop
loop
cli
fildll
fidivs
fbld
push
mov
enter
xchg
sbb
mov
xstore-rng
cmpsl
andb
xlat
popa
movsb
jb
mov
out
mov
adc
xor
xor
fldcw
dec
xchg
pop
cltd
xchg
xchg
fs
push
movsl
adcb
push
fisttps
data16
jg
mov
cmp
sub
call
cmpsb
stos
and
rol
adcl
jg
dec
adc
adc
and
lds
gs
pop
nop
dec
add
add
push
mov
sbb
rol
cmp
sbb
mov
mov
bound
scas
adc
inc
inc
push
insl
data16
mov
lock
mov
stos
push
sahf
mov
cli
inc
add
add
nopl
pop
out
mov
sbb
cltd
loope
cmp
and
subl
orl
push
mov
shl
rcl
push
fildll
std
cmpsl
inc
aaa
cs
pop
xchg
adc
push
aas
sub
jo
inc
sub
addps
daa
incb
insl
mov
sbb
inc
jno
or
cmpsb
into
clc
in
ret
es
push
aam
dec
push
mov
mov
fldcw
push
fyl2xp1
xchg
dec
in
and
mov
or
mov
xchg
fbld
testb
sbb
or
pop
xor
mov
jo
jnp
mov
imul
pushf
mov
cltd
dec
jnp
fwait
mov
pop
dec
add
aaa
icebp
add
fdivs
adc
lret
mov
testb
mov
pusha
ljmp
xor
pop
mov
lock
nop
mov
add
cwtl
mov
icebp
mov
out
cltd
outsl
dec
pop
dec
push
lds
aam
xor
mov
mov
mov
xor
add
dec
dec
add
fists
aaa
fisubrl
jle
xchg
fldt
xlat
in
mov
dec
sub
aaa
in
mov
inc
repnz
ds
adc
dec
mov
lods
ss
loop
mov
test
jb
dec
push
or
fldt
adc
cmpb
sahf
sub
mov
cmp
sub
dec
popf
mov
add
loope
and
sbb
imul
jo
inc
cmpsl
adc
pop
lcall
and
mov
mov
stos
js
cmc
cmc
mov
jb
clc
idiv
or
push
in
aam
roll
adc
xchg
pop
loop
push
jecxz
inc
mov
and
fsubs
mov
fwait
xor
add
jecxz
cmp
sti
pop
fcmovnbe
mov
mov
mov
jno
push
add
add
in
testb
sbb
movsl
outsl
rcrl
sub
jnp
orl
ficoml
shll
dec
outsb
xor
ficompl
movsl
je
xchg
loop
lcall
pop
insb
test
mov
test
jne
dec
sahf
add
add
daa
dec
ja
scas
and
cmp
add
fs
sub
inc
cmp
mov
call
arpl
inc
fstpl
push
or
xlat
or
mov
mov
cs
and
pop
aad
in
leave
int
sti
in
data16
dec
jae
add
push
in
inc
sbb
fptan
cmpsb
mov
mov
lret
jns
add
push
movsb
mov
inc
mov
sbb
stos
insb
xlat
sahf
lret
mov
xor
sbb
sbb
add
and
push
push
mov
and
push
dec
jecxz
cmp
loop
jge
icebp
pop
imul
popf
movb
es
sbb
cmp
jbe
out
subb
lock
ljmp
test
dec
inc
cmp
cwtl
dec
test
pop
mov
inc
aad
mov
cmpsl
arpl
mov
fwait
add
mov
or
loope
jmp
sub
push
movsl
add
xchg
dec
sub
lahf
push
fsubrs
shl
jns
cltd
jg
scas
pop
popa
int3
bound
lcall
sbb
andb
push
fdivr
pop
stc
push
icebp
adc
roll
or
aaa
adcb
push
push
cmp
mov
fisttpl
pop
int3
std
jno
mov
lret
jl
xchg
and
adc
pop
fistpl
pop
sahf
sarb
push
ficoml
lds
adc
addb
bound
and
xor
out
or
adc
insb
mov
arpl
dec
xchg
pop
xor
push
mov
mov
std
stc
aaa
cmc
arpl
push
mov
test
and
sbb
dec
fstpt
lock
add
insb
cmp
mov
sbb
mov
mov
and
popf
push
lds
and
cwtl
sti
sbb
sbb
outsb
movsb
xchg
mov
or
cmp
mov
pop
in
push
fnsave
les
mov
jg
cmp
jmp
mov
adc
xor
and
mov
sbb
xor
sbbl
or
mov
sub
mov
mov
subl
shl
mov
and
mov
mov
shrd
movl
xor
addl
shr
mov
mov
sbb
mov
mov
mov
mov
sub
sub
xor
decl
or
orl
jmp
cli
int
lahf
push
or
inc
cmpsb
ss
sub
push
mov
addl
out
add
lret
inc
out
int3
lahf
shl
mov
xor
xchg
push
andb
insl
inc
inc
setnp
dec
sbb
mov
cltd
xor
stos
mov
xchg
sub
pop
lods
or
mov
xchg
in
push
sub
iret
push
mov
sti
cmc
cltd
jb
cltd
add
ja
ret
pop
fdivr
xchg
leave
mov
loope
add
out
and
lret
aas
stc
inc
sub
dec
xchg
mov
and
inc
dec
dec
pop
push
cwtl
stos
inc
xor
push
push
xchg
xchg
jge
cmp
jmp
sub
in
subl
decl
leave
mov
add
loop
pop
in
mov
fdivr
xor
inc
arpl
fadds
jns
and
test
fiaddl
ja
ret
ds
mov
inc
mov
lcall
mov
daa
int
adc
in
sub
cmpsb
mov
adc
sbb
add
pusha
ljmp
xchg
sahf
push
test
or
inc
xchg
lods
sbb
fnsave
mov
orb
xor
nop
js
out
jns
sbb
ret
rolb
les
inc
nop
ret
loopne
aas
rclb
inc
pop
mov
stc
dec
pusha
lret
push
and
hlt
dec
jl
fmul
jns
xchg
lcall
jno
xlat
arpl
popf
outsl
rcrb
push
xchg
negb
scas
std
push
or
jae
inc
nop
dec
pop
popa
push
icebp
js
cmp
fistps
and
and
mov
jb
jp
sahf
out
mov
fisttps
add
mov
test
rcrb
test
inc
sti
xorb
cs
mov
cltd
sbb
mov
sbb
out
adc
pop
fwait
jno
jg
jne
out
push
fst
pop
or
notb
xchg
stos
xor
fadd
cmovo
sbb
cld
xchg
lock
std
insb
fstl
or
sub
cmpsb
push
xor
popf
or
ja
jl
lea
mov
cwtl
dec
pop
in
andb
xchg
push
dec
add
imul
mov
sub
notl
jns
dec
sbb
mov
adc
dec
pop
pop
inc
jns
push
pop
fisubs
sub
jmp
int
ret
mov
pop
mov
in
mov
test
jmp
lock
stc
or
in
sub
jne
leave
adc
imul
fadds
mov
jle
add
inc
pusha
lcall
mov
pushf
hlt
sar
jae
mov
orb
lds
pcmpgtb
pusha
lret
mov
daa
sub
stc
shll
dec
das
pop
push
fildl
jae
lcall
inc
cmp
sbb
test
pop
adc
and
stos
jmp
cmp
nop
fistps
movsl
mov
xchg
out
xchg
dec
inc
idiv
dec
pusha
outsb
fdivrs
mov
shlb
add
mov
test
sub
mov
imul
movsl
jae
pop
mov
gs
ds
push
sahf
out
ljmp
mov
imul
orb
pop
push
mov
fs
jge
xchg
dec
in
stc
and
inc
or
std
and
repz
in
lods
hlt
mov
push
push
outsl
sub
test
popf
mov
mov
pusha
std
push
xor
xchg
decb
test
test
cwtl
ss
xor
out
mov
stos
lahf
lds
pop
xchg
cli
adc
add
cmp
xchg
cmc
jae
pop
xor
mov
push
lcall
fisubrl
loope
fdivs
lds
mov
xlat
push
lods
jl
sbb
sbb
ds
iret
lock
jp
ljmp
add
dec
mov
imul
subb
aas
cltd
mov
rcpps
int3
scas
or
jmp
inc
sub
xchg
push
ds
sbb
fdivp
cmpsl
xor
mov
jne
inc
test
loope
mov
out
cli
push
xchg
cmpsl
cmp
movsb
cld
mov
stos
or
mov
sbb
mov
ret
fsubrp
cmp
xor
mov
add
sbb
sub
int
mov
adc
popf
jecxz
test
pop
xchg
sbbb
rcrb
mov
fidivrs
pop
jno
ror
test
imull
outsb
mov
pop
pop
inc
lret
inc
int
cmp
xor
jecxz
sti
adc
lret
repnz
jl
pop
in
das
or
mov
jae
mov
push
movsb
ds
dec
stos
nop
aad
mov
inc
mov
xor
cmc
lret
adc
and
jp
and
push
mov
mov
ret
shlb
jp
std
cmp
pop
mov
daa
pusha
jno
sbb
xchg
push
lret
jnp
sbb
mov
or
adc
jecxz
les
out
test
xchg
dec
cmp
inc
mov
push
inc
cmp
inc
add
cmpsb
mov
loopne
lcall
jns
mov
push
stc
cld
loop
sub
decl
addr16
pop
jle
aaa
leave
nop
mov
jge
cwtl
into
int
shll
cmp
sbb
insl
sub
sbb
lea
test
aad
mov
xchg
int3
in
outsb
test
xchg
out
mov
pop
leave
out
and
add
add
repnz
rolb
pop
inc
cmpsb
divb
dec
aaa
fdivl
js
mov
pop
dec
out
dec
repz
test
scas
pop
mov
test
inc
lret
push
mov
jp
mov
pop
repz
ficoms
jae
stos
inc
sub
inc
or
mov
mov
push
pop
out
inc
mov
dec
mov
push
fldl
or
jmp
das
aad
incb
repz
or
inc
divb
scas
lods
xchg
out
xor
jg
pop
mov
outsl
sahf
push
arpl
aaa
add
and
pusha
and
sti
or
sub
roll
mov
xlat
ret
xorb
movsl
cs
insb
xchg
pop
das
outsb
cli
clc
je
insb
shlb
sbb
lods
jne
sti
lret
repnz
inc
jmp
outsl
jb
iret
imul
xor
leave
mov
cmp
sbb
imul
cwtl
inc
jnp
fstpl
loop
mov
xchg
adc
sbb
xchg
dec
mov
cmp
push
and
sub
lods
xorb
iret
push
xor
pop
divl
shll
adc
xlat
jmp
jne
movsl
adc
pop
pop
mov
cmp
mov
sti
cmp
aam
mov
fsts
adc
testb
cmc
test
test
data16
jns
inc
cmp
sub
packssdw
jae
jg
mov
add
mov
xor
or
mov
adc
mov
jmp
movsb
dec
dec
jo
gs
adc
push
int3
xchg
adc
addl
arpl
pop
ja
mov
sbb
jle
push
lds
cmpsl
add
sub
in
pop
lahf
out
cmp
mov
lock
mov
mov
sbb
mov
rol
idivb
inc
lds
pushf
jge
jg
mov
les
lods
in
xchg
ret
jmp
dec
test
and
shl
fwait
ret
jns
mov
mov
cmpsb
xchg
xchg
test
pop
test
mov
cmpsb
add
ret
push
cmp
mov
mov
test
push
pop
and
and
js
push
cmp
add
add
repnz
and
sub
roll
xor
dec
bound
dec
int3
inc
pop
jns
subl
inc
xchg
push
xchg
push
addl
iret
loop
out
sub
jge
test
xchg
jae
loopne
insb
rcrl
sbb
push
dec
push
inc
cmc
or
js
pcmpeqw
addr16
fimull
xchg
js
js
daa
xor
add
mov
shrl
jns
push
outsl
mov
jl
bound
repz
inc
scas
fs
or
push
insb
mov
aam
cmp
mul
lahf
mov
push
out
sti
insb
mov
pop
xchg
ret
or
mov
jle
cld
aad
and
insb
rorb
addr16
mov
imull
addb
ss
sbb
inc
push
in
or
test
mov
sbb
and
jae
test
push
adcb
mov
cmc
or
add
mov
call
test
jns
jb
lock
fiadds
lcall
xor
outsl
test
push
into
jno
jns
repz
loop
jns
leave
fs
inc
mov
lds
xchg
shll
imul
aaa
mov
xor
rcrl
loopne
rcr
iret
xchg
inc
pop
mov
sub
xor
hlt
pusha
push
sbb
sahf
mov
sbb
cwtl
inc
sub
pop
xlat
neg
mov
ja
scas
push
stc
fidivl
sarb
and
pop
insb
loope
add
mov
dec
mov
push
xchg
les
cltd
dec
inc
jnp
lret
test
es
mov
mov
jl
or
jne
cli
adc
push
imul
cwtl
cmp
sbb
iret
add
ror
das
dec
lock
mov
or
adc
into
dec
mov
in
addr16
ret
aad
cmp
pushf
and
ss
mov
push
inc
sahf
ret
dec
loope
lret
push
fldcw
or
shlb
sub
in
adc
hlt
xor
test
cli
push
outsb
and
clc
lcall
cmpl
jmp
sti
sub
pop
aad
dec
int
inc
cmpl
cld
adc
lret
sub
pop
cmp
pushl
ljmp
lock
xor
mov
mov
push
sbb
lods
xchg
fwait
ret
cwtl
add
mov
mov
repnz
lret
adc
adcl
mov
add
mov
sub
movsl
or
cmp
mov
cli
sub
aam
movsb
testl
mov
xor
data16
fsubp
int
fildl
aam
jne
xor
out
push
mov
inc
stc
sbbl
jnp
cmp
movsl
movsb
jbe
imul
sti
xlat
clc
lahf
xlat
ret
jle
roll
pop
jo
lahf
sub
jmp
mov
xor
push
stos
push
and
push
testb
inc
outsl
xor
loopne
aaa
sti
or
mov
sbb
divb
mov
out
pop
xchg
inc
xor
in
fs
adc
int
mov
out
cld
jne
lret
subl
mov
popw
cltd
fldl2e
jnp
pop
sub
ret
and
mov
mov
repz
mov
inc
push
dec
and
scas
add
daa
push
jmp
fisubrs
add
sub
jmp
dec
insb
js
in
call
out
mov
dec
sub
imull
lds
sub
je
rolb
sub
add
and
lods
or
negl
cli
aam
iret
jo
mov
adc
je
dec
adc
out
adc
xchg
imul
stos
test
adc
or
adc
fisttpll
gs
xorl
jo
iret
inc
or
imul
mov
push
xchg
scas
addr16
sarb
mov
xchg
movl
mov
out
shlb
mov
popf
jne
arpl
pop
sub
aaa
add
mov
inc
mul
cmp
pushf
movsl
xchg
jne
xchg
pop
adc
in
sbb
cwtl
jae
jns
in
mov
sub
or
fcomps
pushf
xchg
adcb
push
inc
ss
test
fidivl
xor
inc
shrl
adc
cmp
sbb
add
xor
jae
xchg
xchg
sbb
enter
in
jo
in
lea
mov
call
mov
in
dec
dec
jae
or
je
icebp
pop
mov
push
out
adc
cmp
lret
jecxz
cmp
fdivr
mov
mov
mov
sti
cmpsb
dec
mov
out
jge
cmpsl
cmp
jnp
push
push
pop
arpl
push
adc
adc
add
xchg
fs
pop
add
mov
sub
mov
jmp
cmpsb
sbb
jae
push
mov
fwait
mov
xchg
test
inc
call
jb
into
push
cmc
mov
cli
call
cs
lahf
jmp
push
inc
xor
test
dec
sbb
pop
mov
mov
ds
and
fs
in
mov
bound
dec
push
lock
inc
jns
in
gs
sbb
jle
or
or
push
fmuls
ss
ss
mov
dec
jp
mov
rcll
icebp
or
dec
daa
cmp
and
dec
or
dec
sub
xor
imul
mov
inc
fdivrl
jns
mov
mov
or
cmpsb
add
sub
lcall
push
rcrl
mov
or
and
sbb
fs
iret
stc
out
xchg
test
and
jae
imul
xor
inc
movsl
dec
inc
xchg
rcrl
lret
jae
out
xchg
sub
cmp
incb
out
xor
push
push
cmc
mov
lds
jle
scas
dec
push
mov
xor
push
aaa
push
das
movsl
xor
mov
int
xor
push
mov
popa
fcmovb
xchg
nop
leave
xchg
dec
adc
mov
or
inc
adc
xchg
sahf
mov
inc
enter
clc
inc
inc
add
add
jl
subl
jmp
pushl
pushl
call
mov
mov
mov
mov
mov
mov
shl
xor
shld
cmpl
jg
dec
jmp
pushl
call
shl
mov
xor
xor
movl
movl
movl
cmp
movl
jne
movl
cmp
je
subl
mov
mov
cmpl
jg
add
jmp
pushl
push
pushl
push
push
push
push
pushl
call
mov
mov
xor
shld
shl
xor
addl
xor
movl
cmp
movl
jne
cmp
je
mov
mov
shl
mov
xor
movl
shr
or
sbb
mov
cmpl
ja
and
jmp
push
push
pushl
call
mov
mov
mov
mov
mov
jmp
bound
clc
xchg
xor
xchg
outsl
inc
adc
addl
mov
in
xchg
lret
shll
sbbb
cmp
repnz
and
mov
cmp
stos
stos
mov
sbbl
sub
xchg
xchg
inc
imul
pusha
xchg
mov
adc
inc
in
sbb
movsb
sub
mov
aaa
pop
popa
or
rcll
les
add
stc
repz
add
dec
adc
xchg
and
or
lods
or
stos
mov
push
mov
addr16
push
add
stos
cmp
in
mov
bound
fcomps
push
outsl
movsl
push
xchg
sub
push
pop
mov
adc
mov
jl
mov
fisubrs
lret
and
sbb
insb
inc
leave
shl
mov
jno
push
jnp
shr
xchg
imulb
ret
out
push
inc
mov
rclb
pushl
jge
or
shrb
sub
mov
shlb
lock
pop
sbbl
ja
pop
mov
addl
adc
push
xchg
dec
push
in
lods
mov
sti
inc
xchg
adc
push
in
rorb
int
sbb
sub
mov
fnsave
jmp
cmp
mov
jle
repnz
or
movsb
add
aad
lods
cmp
es
aas
jle
jae
imul
push
push
fiadds
stos
or
inc
pop
adc
nop
jge,pn
xchg
cltd
mov
enter
push
pushf
mov
outsl
sbb
cmp
sbb
pop
xchg
into
dec
js
adc
dec
fdivrs
insl
jmp
test
push
pop
imul
mov
jecxz
aad
jp
scas
cwtl
lret
inc
mov
inc
test
mov
outsb
ja
xchg
xlat
sbb
mov
mov
inc
xlat
andb
clc
pop
lahf
dec
inc
xchg
sbb
outsl
adc
adcl
pop
sbb
mov
push
add
and
xor
or
icebp
out
xor
lods
push
das
pop
fs
push
adc
mov
add
jnp
xchg
out
das
bnd
push
testb
scas
roll
mov
in
push
lods
jle
insl
pop
dec
sub
mov
pop
adc
imul
nop
inc
adc
bound
sbb
out
mov
and
mov
imul
hlt
pop
sahf
mov
xchg
fildl
xor
xchg
fsubp
test
icebp
fs
xchg
int3
mov
into
sti
xor
jno
jg
lea
ds
sub
cmpsl
adc
cmpsb
dec
mov
lret
fadd
stc
and
call
cmpsb
xlat
xchg
push
adc
cmpsb
out
xor
rorb
fbld
dec
cmp
pop
imul
or
inc
loopne
les
jb
cli
dec
mov
add
mov
outsl
in
sbb
loopne
mov
sbb
call
mov
cmpsl
jmp
std
setbe
pusha
pushf
in
push
push
jo
repnz
xor
ljmp
fbld
add
add
adc
inc
leave
jecxz
ret
jnp
lahf
lods
popf
pusha
and
dec
test
xor
jge
leave
sbb
lods
fwait
xor
in
xchg
idivb
movsb
xlat
fwait
cmpl
lock
iret
sbbl
cmp
xor
jo
inc
sbb
in
ss
or
aam
inc
adc
pop
aaa
mov
add
iret
or
int
lock
js
dec
loop
and
mov
inc
sti
mov
mov
das
ret
iret
mov
lods
sub
lea
jb
hlt
pop
shr
xchg
int
icebp
adc
fwait
ljmp
xchg
sub
xor
mov
pop
push
mov
aam
hlt
test
xchg
clc
js
ja
dec
xchg
mov
cmc
out
loopne
mov
mov
fisubs
and
je
lods
dec
into
jne
cmpsl
mov
scas
adc
add
xchg
rcll
or
cmp
xor
or
pop
sbb
push
dec
out
mov
scas
and
lds
jb
in
add
pop
xlat
xor
jl
mov
push
inc
cmpsb
fmulp
mov
jne
mov
mov
push
mov
stos
and
mov
shrl
pop
dec
or
mov
mov
sub
ret
cmp
inc
out
loop
je
xchg
push
jno
mov
mov
out
mov
dec
int
cmpsl
cmp
sub
push
push
mov
jno
sub
int
xor
imul
push
push
mov
pop
repz
mov
xchg
mov
pop
cltd
in
sub
xor
pop
idivb
or
addl
sub
mov
add
test
xor
sbb
xchg
add
mov
mov
or
adc
jbe
dec
push
mov
adcb
sahf
pop
and
push
aas
lods
subb
push
fcmovb
std
shll
adc
cwtl
sub
lods
xor
cmp
fisttpll
xchg
dec
mov
lret
lahf
push
jns
xor
in
cmp
ja
jnp
add
lock
pusha
mov
imul
dec
pop
fdiv
add
in
add
mov
pusha
jg
xchg
xchg
add
stos
fnsave
xchg
andb
cmpsl
shlb
cmc
and
dec
dec
pop
addr16
mov
aad
ljmp
enter
rcll
add
dec
xor
out
movsl
cmp
push
push
xor
lea
aam
and
or
sbb
rep
jge
rolb
dec
fsub
xor
xor
and
add
push
mov
mov
test
jle
daa
jno
xor
mov
adcb
movl
cmp
mov
sub
mov
rcrb
or
xorl
and
push
ret
sbb
les
fldlg2
inc
fnsave
mov
pop
and
mov
jae
adc
sti
scas
ss
test
pop
test
imul
std
dec
inc
mov
jnp
cltd
mov
push
movsl
xchg
sub
jnp,pn
loop
cld
dec
frstor
pop
popa
xor
inc
sub
ret
add
pop
mov
pop
jno
adc
push
insb
aaa
orl
add
hlt
sti
jg
jb
sub
lret
ret
loop
mov
int3
and
es
out
nop
xor
out
xor
rcr
push
rorb
test
sub
es
pop
and
lahf
cmp
jnp
outsb
aam
andl
inc
push
sbb
ret
cmc
test
add
fcomi
pop
pushf
push
inc
xor
sub
cmp
sub
and
cmpsb
test
cli
pop
inc
cltd
scas
inc
loope
sub
sbb
pop
xorl
sub
mov
add
mov
lea
mov
xor
mov
mov
mov
adc
jmp
fbld
and
add
inc
mov
xor
jno
sub
sub
addr16
lret
jge
out
out
jnp
data16
shrb
jg
push
loopne
dec
jb
inc
cmpl
cld
push
in
pop
xchg
mov
sbb
xchg
nop
jae
pusha
mov
adc
add
out
fwait
lods
fidivs
xorl
adc
jecxz
js
stc
fimull
jnp
xchg
insl
cmp
add
adc
xchg
int3
xchg
call
inc
out
lods
and
fwait
xor
adc
push
test
inc
mov
push
pop
sbb
sub
adc
mov
test
ret
mov
pop
mull
loop
push
xor
jmp
leave
add
ret
pop
aam
and
cltd
not
push
inc
out
jecxz
cmc
xor
push
and
shll
testb
sahf
xchg
jnp
cs
in
and
ficoml
push
adc
lods
bound
outsb
jnp
sbb
dec
adc
sub
aad
mov
je
lds
outsl
sbb
mov
cmpsl
repnz
add
daa
lock
pop
sub
push
scas
fists
pop
movsb
cwtl
and
cli
cli
or
push
insb
sar
int3
push
pop
push
lods
dec
mov
sarb
das
jae
cs
pusha
fsubrl
mov
out
outsb
inc
rorb
call
cld
mov
inc
mov
sahf
ficoml
scas
popa
insl
mov
jb
adc
ja
inc
ret
movsl
cmp
into
sbb
rcrb
aam
xor
es
fs
movsb
into
adc
dec
mov
shlb
subl
ds
aad
xor
jno
mov
lahf
pop
sahf
fcmovb
lret
sub
jne
mov
adc
ljmp
sbb
add
je
adc
mov
pop
xor
les
ja
shr
icebp
test
std
loop
cwtl
cmc
lcall
dec
sbb
dec
ret
ret
cli
jle
pushf
cli
fldt
jmp
inc
lret
scas
ud2
dec
pop
lahf
insb
fbstp
sbb
jb
cwtl
sbb
cmpsl
shll
jne
mov
dec
push
sub
sub
ficoms
pop
out
mov
pushf
lahf
jmp
out
movsl
inc
mov
sar
addr16
data16
jo
mov
jmp
xchg
cmpsl
cs
je
icebp
add
pop
insw
pop
test
jo
fldenv
pushf
and
es
cmp
insb
mov
rcll
jp
sub
ja
sar
cwtl
mov
test
sbbl
xor
pop
rorl
dec
xchg
cmp
fcoml
pop
push
push
mov
xor
mov
xchg
iret
push
inc
and
jno
in
push
dec
lods
dec
push
add
add
das
test
inc
mov
sar
jg
or
mov
mull
jmp
fcmovnb
xchg
push
xchg
ret
fwait
inc
std
cltd
jecxz
xchg
pop
add
xchg
lods
dec
clc
mov
lods
enter
loop
dec
xor
sbb
fnsave
ror
jno
fldlg2
ljmp
add
fwait
test
jo
out
add
dec
mov
loop
pushf
dec
xor
add
dec
out
in
jp
rcl
push
adc
stos
xchg
data16
dec
shll
mov
and
cmp
in
daa
xchg
imul
mov
mov
mov
adc
dec
mov
add
adc
mov
sub
mov
stos
mov
and
imul
sahf
gs
mov
mov
mov
mov
aas
jg
imul
fidivs
scas
js
or
fbld
jecxz
fmull
cmp
push
bound
or
mov
test
jns
or
xor
pop
leave
adc
rol
sbb
stc
mov
sahf
pop
cmp
subb
sti
test
repz
in
adc
pop
and
stos
mov
mov
push
jp
clc
mov
push
xchg
pop
and
xor
stos
add
into
sbb
std
scas
and
xor
push
mov
jne
loop
push
pop
rorb
dec
jge
popf
imul
iret
xor
and
cmpsb
int3
es
jns
mov
fwait
mov
mov
in
arpl
scas
rcrb
pop
mov
out
fwait
cltd
xchg
or
xor
orl
mov
outsl
inc
xor
mov
sub
inc
pop
xor
nop
mov
jo
int
push
or
fistl
add
out
jb
jle
icebp
dec
sbb
aad
xor
adc
aad
sbb
clc
mov
xchg
sub
mov
dec
cmp
dec
insl
std
cmp
pushf
in
push
lahf
pop
aaa
mov
jo
mov
inc
sub
cmp
pop
es
jp,pt
inc
lahf
mov
add
std
icebp
sbb
loope
cld
icebp
testl
fwait
loope
add
jno
adc
dec
popa
test
xchg
cmpb
adc
gs
xchg
sub
and
lods
mov
icebp
xor
push
test
jo
inc
scas
arpl
jo
mov
adc
lock
fistpll
cmpb
lock
mov
xchg
aaa
ja
and
or
ds
iret
jp
repz
or
push
repz
rolb
js
xchg
xor
insb
push
xchg
xchg
and
ljmp
jae
loop
push
scas
and
sbb
push
stos
jno
outsb
add
ja
inc
movsb
xor
or
movsb
pop
and
jnp
cmpsb
test
loope
add
in
adc
xor
pop
into
mov
add
lds
mov
movsl
fldcw
rcrl
pop
std
jmp
outsl
mov
cld
cltd
sbb
call
push
xchg
mov
ja
adc
xor
push
test
int3
aas
loopne
imul
stos
stos
mov
mov
test
fstps
push
sbb
imull
jb
orl
push
sbb
jno
stos
out
js
popf
jg
ds
sahf
jg
into
mov
lret
push
insb
fsubrl
jbe
pusha
cmpsw
dec
mov
xchg
sub
xchg
mov
adc
mov
sbb
mov
ja
in
or
bound
cmpsb
inc
or
inc
sub
push
lret
cli
xchg
lret
pop
pop
repnz
clc
ret
rcl
mov
mov
sub
stos
std
icebp
push
aad
jl
adc
into
dec
fwait
movsl
mov
aam
xchg
ljmp
jle
mov
xorl
cmp
fldt
xor
call
push
bound
cmp
cld
dec
add
push
aad
je
mov
xchg
lret
xchg
imul
insl
loopne
and
shrl
dec
sbb
xor
movsb
dec
mov
orl
xor
orl
shr
xorl
shl
adcl
or
movzbl
sbb
mov
mov
mov
and
movl
sub
mov
neg
mov
xor
shr
negl
shl
or
subl
push
lea
sbbl
push
lea
orl
push
call
and
mov
cmpl
jb
jmp
push
push
pushl
pushl
call
mov
xor
shr
shl
or
push
lea
push
mov
sub
mov
shrd
shr
cmpl
jg
xor
add
mov
sub
imul
jmp
push
push
push
call
mov
mov
movl
xor
addl
xor
or
andl
lea
push
shl
movl
call
mov
sbb
mov
sub
xor
shl
adc
shr
or
mov
sub
push
sub
lea
push
orl
mov
inc
mov
incl
shrd
shr
or
mov
mov
sbbl
xor
shl
xor
movl
or
adcl
lea
push
call
and
mov
or
mov
cmpl
jl
mov
and
xorl
jmp
pushl
call
xor
shl
shr
or
addl
jmp
xchg
adc
inc
adc
xchg
popa
aaa
repnz
cmp
adc
addl
pusha
je
out
inc
shr
fmull
mov
inc
cmp
addr16
xor
inc
stc
dec
dec
cmp
lret
pusha
inc
push
sbb
jle
jae
clc
lods
daa
cmp
dec
mov
outsl
fs
dec
sub
jecxz
negl
xchg
sbb
mov
xor
cmpsb
into
scas
and
into
es
mov
jb
inc
lock
iret
cs
add
xchg
in
mov
or
lcall
pop
or
jmp
test
ficoms
adc
std
dec
sub
xchg
das
adcl
xchg
pop
cmpsl
adc
xor
cmp
insl
fwait
xchg
mov
lcall
loope
sbb
inc
inc
in
shll
loope
add
mov
pushf
adc
aas
shll
cmp
icebp
nop
push
clc
mov
les
ja
les
jno
sub
xor
mov
repz
aad
pop
jp
push
lret
adc
aas
sarl
jns
adc
xchg
dec
mov
loop
jl
pusha
cs
test
nop
push
sbb
lahf
repnz
cli
push
lods
mov
ljmp
jbe
jmp
and
sub
xchg
out
xchg
pusha
lret
push
outsb
mov
orb
jno
mov
inc
and
fdivrl
pop
sbb
mov
mov
ljmp
dec
sub
push
in
add
jo
inc
pop
cmpsb
pop
cmp
cmpsl
jecxz
insb
pop
adc
out
sbb
xor
cmp
mov
pop
mov
add
push
or
pusha
sub
fcoms
imul
out
ret
mov
adc
lret
lods
push
add
outsl
push
inc
scas
mov
mov
or
cwtl
movsl
fimull
or
inc
sti
test
xlat
mull
and
adc
aas
dec
xchg
movsb
mov
inc
ss
daa
inc
sbb
adc
mov
in
pusha
fwait
pusha
leave
pushf
and
movsl
daa
mov
jg
aam
insl
cmc
icebp
jo
addr16
dec
mov
jg
jae
mov
les
mov
je
jmp
cmp
mov
xlat
roll
push
ja
push
imul
inc
insl
or
repz
xlat
cmpb
or
inc
pop
adc
pop
mov
mov
loopne
inc
in
lods
xor
ja
out
jge
push
xchg
mov
stos
dec
ret
sbb
test
xchg
std
xlat
hlt
push
loop
or
lret
pop
mov
adc
jno
and
xor
ljmp
add
cmp
push
pop
lcall
ds
inc
dec
push
adc
sahf
iret
add
rcpps
test
cmpsb
aam
int3
lods
push
cs
or
cmp
mov
mov
decb
movsb
sub
repnz
mov
lock
mov
outsb
cmpsl
mov
inc
fistps
cmp
cltd
mov
mov
jecxz
pop
xchg
sbb
adc
mov
jns
sti
jne
adc
arpl
jbe
scas
ja
jl
mov
xor
jge
or
jbe
and
push
sub
or
cmp
nop
lahf
xor
sub
push
outsl
and
mov
xor
inc
aas
faddl
inc
test
mov
std
sbb
jno
out
fmuls
aad
ret
inc
cmp
jo
push
jne
ss
loop
mov
or
mov
cld
shlb
loope
lods
xchg
inc
repz
ret
push
dec
inc
mov
push
test
repnz
mov
stc
cmp
pop
sub
sbb
clc
mov
in
insb
mov
push
lea
xchg
fs
subl
out
cmp
cli
loopne
dec
mov
ss
loopne
xor
test
or
cmp
fdivl
push
pop
dec
xchg
push
bound
push
cld
xor
lret
pop
mov
sahf
jnp
stos
scas
or
mov
fistl
into
stos
jo
xchg
or
inc
aam
jnp
into
in
cmp
scas
push
adc
movsb
mov
test
ds
sbb
fldl
ss
sbb
repz
dec
cld
jl,pn
mov
push
mov
xchg
call
mov
xchg
mov
ss
pop
lods
cmp
sarl
ds
mov
mov
fdivrl
fdiv
movsl
add
addl
mov
iret
popa
test
mov
cmp
xchg
scas
mov
jp
pop
aad
shlb
adc
mov
stos
cwtl
push
sbb
sub
js
sbb
rcl
sub
mov
sub
pop
dec
ss
inc
loope
inc
mov
int
xchg
movsl
mov
incb
inc
dec
mov
xor
outsl
stos
stc
das
sbb
rcll
xchg
insb
adcb
jp
or
cmp
mov
add
xchg
lahf
mov
jns
xor
push
push
jp
pop
pop
nop
repz
test
je
popa
sub
test
dec
push
sahf
dec
cltd
sub
lods
sub
cmp
ficoms
mov
xchg
sbb
outsb
test
stos
and
in
add
out
add
cmp
xchg
cmpsb
mov
jne
cltd
pop
fadd
enter
cltd
pop
add
inc
mov
and
popf
sbb
sub
cmp
mov
mov
inc
addr16
push
aam
add
stos
mov
stos
movsl
cmp
movsl
scas
push
sbb
in
or
scas
mov
mov
cmp
dec
test
cld
dec
movsl
aam
cs
sub
sbb
pop
leave
stos
test
adc
mov
cwtl
adc
pop
and
xchg
push
mov
sub
add
and
sub
pop
xor
rep
mov
rcll
push
in
mov
outsb
xlat
cmpsl
lcall
xor
data16
pop
das
call
cltd
or
in
out
pop
and
cmp
insl
dec
adc
or
mov
or
pop
cmp
inc
pop
pop
pop
imul
mov
aam
adc
jge
stos
jae
pop
test
mov
roll
stos
icebp
xor
nop
imul
leave
test
mov
cmp
xor
xchg
gs
dec
cmpsl
repz
popa
jno
rclb
sub
rcll
fsubrs
pushf
gs
in
mov
negb
test
dec
and
idivb
jo
in
hlt
or
ja
lcall
into
lock
or
sahf
xchg
sbb
push
lret
sub
xlat
lahf
xchg
xor
test
loop
cmc
push
fldl
pop
and
pushf
inc
loop
in
in
ret
add
jb
in
dec
mull
loope
sub
pop
lods
pop
dec
pushf
out
sbb
shrl
test
dec
div
inc
pop
inc
sbb
inc
mov
fcomi
pop
push
data16
add
cmp
loop
jo
loopew
sbbl
mov
mov
jns
cmp
inc
pushf
sbb
push
adcl
mov
sub
mov
shrd
and
shr
mov
mov
adc
xor
xor
subl
or
shl
mov
sub
mov
movl
shrd
shr
adcl
mov
mov
xor
jmp
adc
sahf
dec
push
rcrl
adc
push
scas
adc
jno
push
cmp
nop
sbb
jne
daa
mov
cmpsl
cs
daa
cmp
in
fists
aas
fstps
test
lret
add
cmc
scas
aaa
mov
mulb
jmp
ret
fimull
loopne
push
pop
mov
imul
clc
push
cmp
fs
add
cli
push
fwait
test
add
fsts
fists
scas
movsl
test
cmova
fimull
adc
hlt
adc
cmp
fmuls
imul
test
push
push
aad
dec
dec
dec
mov
scas
out
imul
push
adc
add
or
dec
mov
push
sti
adc
push
pop
add
nop
ja
dec
pop
dec
push
push
pop
dec
lods
call
jns
cmp
out
fwait
sahf
sub
je
jo
add
shll
je
lds
jecxz
fildll
mov
addr16
test
fwait
daa
rcrb
bound
sbb
js
jp
xor
pop
dec
jbe
cmp
rorb
mov
mov
sbb
xchg
or
xchg
imul
pushf
adcb
add
sti
movsl
sbb
and
xchg
mov
shlb
xlat
push
lret
xor
mov
loop
loopne
shr
mov
jl
add
in
movsb
mov
lock
div
adcb
pop
or
pusha
out
or
movsl
jo
jb
arpl
aas
push
sub
aam
mov
int3
call
test
and
adc
xchg
in
jge
sbb
adc
jp
pop
rcl
pop
stos
mov
mov
imul
in
int
xchg
cmp
fidivl
cmpb
outsb
movsl
sub
pusha
sub
pop
shlb
inc
clc
xchg
xor
stos
dec
pop
dec
xchg
sub
push
out
arpl
popf
stos
addr16
testb
xchg
adc
js
jns
jnp
xchg
cmp
xchg
xchg
stos
and
jecxz
mov
inc
xor
jns
bound
mov
ljmp
push
into
rcrl
cmc
inc
rclb
clc
addr16
sub
cmc
xchg
addb
cmp
xchg
ljmp
push
mov
fstpt
mov
and
stc
leave
or
negb
scas
jnp
lods
nop
jp
repnz
jle
sub
mov
lods
inc
pop
and
sub
push
jle,pn
push
push
pop
aas
pop
es
adc
or
btc
push
insl
add
insl
cltd
mov
shrb
loopne
in
addr16
cmp
jo
push
mov
dec
sub
dec
rorl
jecxz
cmc
pop
pusha
push
rorl
xor
ret
push
shll
rorl
leave
dec
dec
pop
or
cmpsl
inc
lods
ror
scas
inc
cltd
add
in
in
lret
inc
mov
enter
push
nop
lock
sti
rcrl
aad
dec
outsb
adc
add
cli
shrl
mov
mov
mov
add
dec
jnp
add
jo
aas
stos
and
fs
cmp
cmp
jl
jo
mov
push
shr
pop
mov
sbb
push
stos
pop
jae
cltd
xchg
ds
loop
cwtl
outsb
mulb
xor
adc
inc
sub
push
pop
dec
popa
sub
into
mov
dec
imul
icebp
push
pop
push
lret
bound
fwait
push
push
sti
cwtl
xor
xchg
shll
sub
notb
imul
dec
stos
sbb
ljmp
xchg
pop
cmp
sub
movsl
adc
imul
mov
sub
or
pop
sbb
mov
jb
cld
gs
stos
or
dec
nop
xor
add
lock
push
inc
cmpsb
sbb
enter
ljmp
repz
ret
jg
xchg
dec
mov
xchg
mov
pop
push
insb
jne
jnp
jge
loope
shrb
jns
lods
or
orb
addr16
movsb
sahf
test
mov
push
dec
push
mov
out
adc
push
js
mov
push
cmpsb
cli
xor
inc
daa
mov
shll
jg
repnz
or
and
xorb
fistpll
lea
xchg
scas
outsb
movsl
xor
cmpsl
dec
mov
sbb
push
ret
shl
fnstcw
or
ficomps
cmp
ja
scas
gs
mov
andl
dec
pop
xor
iret
test
hlt
sti
inc
push
push
push
dec
or
iret
mov
adc
loop
lret
xor
adc
jo
mov
movsb
lcall
or
outsl
lock
aas
dec
jne
scas
pop
sbb
jp
or
mov
add
mov
jne
jge
ret
pusha
out
cmp
lods
and
daa
inc
mov
ljmp
das
xor
in
and
cltd
into
or
adc
out
sar
jmp
adc
cmp
mov
push
sub
cmp
aam
or
mov
or
insb
inc
and
inc
adcl
enter
ss
add
pusha
cs
pop
inc
jl
sar
mov
clc
jle
test
js
mov
mov
ss
aaa
pusha
sbb
or
cmpsl
push
dec
repz
hlt
lcall
sub
xor
loope
aam
lea
inc
cmc
cmp
sub
inc
sahf
sub
push
push
adc
cmp
push
ss
jg
pop
stos
jmp
xor
fisttpll
das
add
mov
pop
lods
ds
pop
iret
out
jb
hlt
nop
sbb
or
jle
cmp
lods
or
mov
idiv
inc
pop
xlat
or
stos
inc
jno
or
in
ljmp
imul
aaa
dec
cli
rclb
fsubr
ret
pop
jb
sub
sub
xor
stos
cmp
imul
xorl
xor
pop
xchg
mov
push
jb
in
rcl
call
and
loopne
xor
cli
xchg
out
icebp
xor
mov
out
dec
mov
test
pop
dec
or
dec
jae
cltd
jp
adc
lcall
insb
ljmp
addl
lret
sub
cli
lret
jl
xor
cmp
clc
lret
int
dec
xchg
add
dec
mov
xor
and
stos
mov
dec
xchg
hlt
push
ljmp
mov
mov
imul
fldt
jmp
jbe
push
push
lock
loopne
adc
pop
imul
int3
aam
lcall
bound
mov
les
insb
mov
in
shrb
shll
push
les
fildl
add
inc
inc
add
lret
add
lea
adcl
push
xorl
shl
call
mov
cmpl
jg
sub
and
jmp
pushl
push
call
mov
shl
xor
shr
or
push
lea
sub
push
cmpl
jg
xorl
jmp
push
pushl
pushl
push
push
push
call
mov
mov
shrd
shr
mov
mov
sub
xor
mov
adc
shl
mov
mov
mov
sbb
xor
or
mov
and
shrd
adcl
shr
adc
mov
mov
orl
xor
xor
andl
or
cmpl
jg
jmp
call
add
mov
shl
mov
shrd
shr
mov
adcl
mov
xor
xor
sbbl
or
notl
add
lea
push
shl
xorl
call
mov
xorl
mov
cmpl
jg
jmp
push
pushl
call
xor
shr
jmp
notl
notb
sub
xor
packuswb
pmaddwd
rorb
jnp
das
nop
xor
sub
xchg
test
mov
cltd
in
ja
int3
push
andl
mov
push
jp
imul
divl
rcrb
adc
cmpsl
jg
mov
dec
adc
lds
aam
xchg
mov
jl
mov
cmp
nop
sahf
shlb
mov
mov
loopne
adc
sbb
jb
add
sub
fldt
je
adc
loop
sbb
rcl
addr16
test
lcall
mov
into
mov
clc
cltd
gs
out
sbb
jae
push
jno
pop
jbe
push
add
stos
fidivs
mov
cmp
xchg
leave
es
addr16
or
mov
test
add
ss
sbb
loopne
sbb
mov
movl
aad
dec
roll
mov
push
add
dec
dec
push
inc
hlt
fs
das
stos
andl
adc
imul
cld
outsb
out
cmp
dec
call
lea
outsl
mov
popa
and
cmpsl
dec
sbb
popa
out
clc
das
fs
mov
sbb
mov
or
pop
push
lret
jbe
frstor
dec
add
and
mov
dec
sub
enter
cmp
cmp
pop
adc
pop
xchg
or
cmp
dec
sbb
sbb
lret
inc
jge
into
and
movsb
mov
pop
pop
fwait
and
sbb
jp
int
jl
ficompl
dec
mov
loope
or
mov
lea
push
cmpl
ja
and
jmp
push
push
push
pushl
call
mov
mov
shrd
shr
mov
mov
addl
xor
neg
xor
or
push
sbb
mov
movzbl
and
mov
mov
push
orl
pushl
subl
shl
call
lea
xor
add
add
push
add
mov
mov
cmpl
jbe
adc
or
jmp
push
push
push
call
shrd
shr
mov
mov
xor
xor
or
addl
push
adc
mov
push
adcl
pushl
subl
shl
call
cmpl
jge
sbb
jmp
pushl
pushl
push
push
pushl
pushl
call
mov
mov
mov
mov
mov
mov
sbbl
mov
rol
mov
adcl
xor
movl
mov
movl
cmp
movl
je
or
movl
mov
movl
mov
mov
mov
mov
mov
mov
add
mov
mov
xor
shld
shl
xor
mov
xor
inc
xor
mov
mov
mov
movzwl
mov
cltd
idiv
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
imul
mov
and
mov
and
mov
imul
mov
sub
mov
cmp
ja
mov
mov
mov
shrd
shr
mov
xor
shl
mov
xor
or
mov
mov
mov
xor
xor
shrd
mov
shll
xorl
xor
or
mov
shr
or
xor
cmp
ja
jae
mov
mov
movb
movb
movb
movb
mov
movzbl
mov
xor
mov
imul
movzbl
xor
and
add
mov
movb
movb
mov
mov
and
or
imul
mov
cmp
ja
movb
movb
movb
mov
mov
and
or
add
mov
movzbl
cltd
movzbl
idiv
mov
movb
movb
movb
mov
mov
xor
sub
mov
movzbl
movzbl
cltd
idiv
mov
cmp
jb
mov
mov
shrd
shr
mov
mov
xor
xor
or
sub
shl
mov
mov
shrd
shr
mov
mov
xor
xor
shl
mov
or
ror
jmp
mov
mov
mov
mov
mov
shrd
shr
mov
mov
xor
xor
or
shl
add
mov
mov
mov
mov
xor
xor
shrd
mov
shll
xorl
xor
or
mov
shr
or
xor
cmp
jb
ja
cmp
jb
mov
decl
jne
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
add
push
lea
push
shl
call
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
push
push
mov
shl
mov
shrd
shr
mov
mov
xor
xor
or
add
push
shl
call
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
push
shl
call
mov
mov
shrd
shr
mov
mov
pop
xor
xor
pop
shl
or
pop
leave
ret
push
mov
sub
not
mov
cmpl
jb
jmp
push
call
mov
mov
sub
push
mov
mov
sbb
mov
adc
orl
orl
add
mov
mov
add
mov
cmpl
ja
sbb
inc
jmp
pushl
pushl
push
pushl
push
pushl
call
mov
sub
mov
sbb
mov
cmpl
ja
or
jmp
push
push
push
call
orl
orl
lea
mov
mov
mov
not
mov
sbbl
add
neg
mov
mov
adcl
mov
mov
neg
shrd
cmpl
ja
or
jmp
push
push
push
pushl
push
call
shr
mov
mov
xor
xor
or
cmpl
jb
jmp
pushl
push
push
pushl
pushl
call
mov
movl
movl
movl
movl
movl
movl
xor
movl
movl
mov
add
movl
movl
cmpl
jge
adcl
adcl
jmp
pushl
push
push
call
movl
movl
movl
movl
movl
dec
movl
sbbl
movl
movl
movl
cmpl
ja
xor
add
sub
mov
jmp
push
push
push
call
movl
movl
movl
mov
shl
mov
andl
push
addl
push
push
push
andl
call
xorl
mov
xorl
mov
mov
mov
add
xor
add
mov
mov
sub
sub
mov
sbb
lea
and
mov
cmpl
jg
jmp
pushl
pushl
push
call
mov
or
and
mov
or
xor
cmp
movl
jne
not
mov
mov
shrd
cmpl
jbe
adc
jmp
push
pushl
push
pushl
pushl
call
shr
mov
mov
shl
xor
xor
subl
or
mov
mov
cmp
movl
jne
mov
add
mov
neg
xor
xor
or
sbb
mov
cmpl
jbe
jmp
pushl
call
mov
mov
shrd
mov
mov
xor
shr
cmpl
jbe
xor
jmp
push
push
call
mov
xor
or
shl
sub
mov
andl
mov
mov
add
adc
mov
and
mov
adc
mov
shrd
negl
shr
sub
mov
mov
cmpl
jg
add
jmp
pushl
pushl
pushl
pushl
pushl
call
xor
shl
xor
or
mov
mov
subl
shrd
shr
neg
mov
cmpl
jbe
adcl
jmp
pushl
pushl
pushl
call
mov
mov
xor
xor
or
shl
incl
lea
mov
cmpl
jl
dec
jmp
pushl
call
mov
shrd
shr
mov
mov
mov
adc
xor
cmpl
jbe
and
jmp
call
mov
xor
or
shl
imul
mov
dec
mov
sbbl
shrd
mov
or
mov
xorl
xor
orl
shr
mov
mov
addl
xor
subl
or
shl
sub
mov
movl
cmp
mov
mov
jg
sbb
mov
cmpl
jb
jmp
pushl
push
call
mov
shrd
mov
mov
xor
shl
xor
or
shr
subl
mov
sub
mov
mov
adcl
mov
subl
shrd
adcl
shr
add
mov
cmpl
jg
sbb
jmp
pushl
push
call
mov
mov
xor
xor
or
shl
orl
imul
addl
sub
jmp
mov
or
mov
mov
cmpl
jl
or
jmp
push
pushl
call
mov
shrd
mov
mov
xor
shl
addl
xor
adcl
or
andl
shr
cmpl
jg
jmp
pushl
push
push
push
call
mov
mov
mov
mov
shrd
shr
mov
cmpl
jg
mov
adc
or
jmp
push
pushl
pushl
pushl
pushl
push
call
mov
mov
xor
xor
or
shl
mov
mov
adc
add
add
xor
xor
adc
mov
mov
xor
add
adc
shrd
or
shr
movzbl
adc
mov
mov
xor
sbbl
shl
xor
movzbl
adc
or
neg
mov
add
movl
mov
mov
sub
imul
mov
cmpl
ja
or
jmp
push
pushl
pushl
pushl
call
mov
movl
mov
movl
mov
movl
adc
mov
xor
mov
cmpl
jbe
jmp
push
push
push
pushl
call
mov
shrd
shr
mov
mov
xor
shl
adcl
xor
or
movzwl
sbb
mov
lea
cmpl
jbe
and
jmp
pushl
push
pushl
pushl
call
mov
mov
mov
shrd
shr
mov
adcl
mov
subl
shl
adc
mov
xor
xor
sbbl
or
sbb
mov
or
mov
xor
cmpl
jl
jmp
push
push
push
call
mov
mov
shrd
shr
mov
mov
xor
shl
xor
adc
or
adcl
lea
mov
or
mov
cmpl
ja
add
jmp
pushl
pushl
push
call
mov
mov
shrd
shr
mov
mov
subl
shl
and
mov
xor
adcl
xor
xorl
or
cmpl
jle
inc
decl
jmp
push
call
mov
mov
or
mov
mov
shrd
notl
shr
mov
sub
mov
xor
addl
shl
addl
xor
sbb
or
lea
mov
mov
addl
mov
shrd
shr
xor
add
mov
sub
xor
mov
mov
addl
xor
shl
adc
mov
xor
addl
or
mov
sbb
mov
or
add
cmpl
jle
sub
negl
jmp
push
push
call
mov
mov
shrd
shr
mov
cmpl
jge
neg
jmp
pushl
push
push
call
mov
xor
xor
or
lea
mov
cmpl
jge
jmp
push
push
push
pushl
push
push
push
pushl
push
pushl
push
push
push
pushl
call
mov
shl
mov
shrd
shr
mov
mov
addl
xor
orl
xor
subl
or
xor
mov
shl
incl
mov
adcl
mov
orl
mov
addl
or
xor
mov
mov
andl
shrd
shl
sbbl
shr
mov
mov
or
xor
mov
xor
orl
or
mov
dec
orl
not
xorl
and
xor
or
xor
mov
xor
and
mov
cmpl
ja
sub
jmp
push
push
push
call
mov
xor
or
mov
mov
shrd
shr
mov
sbb
mov
mov
adc
mov
mov
xor
xor
xor
adc
mov
addl
xor
andl
shl
subl
mov
addl
or
mov
mov
cmp
je
xorl
mov
xor
add
mov
sub
and
sub
cmpl
ja
add
jmp
pushl
push
pushl
push
push
push
call
mov
mov
mov
shl
xor
mov
mov
mov
subl
xor
adcl
xor
sbbl
shrd
shr
xorl
or
xor
or
mov
mov
mov
mov
xor
shl
xor
mov
mov
mov
mov
xor
xor
shrd
or
shr
mov
mov
or
mov
cmp
jne
cmp
je
jmp
mov
mov
mov
shl
xor
mov
mov
mov
xor
xor
shrd
xor
or
mov
mov
mov
mov
xor
shr
or
mov
mov
shl
xor
mov
mov
xor
mov
mov
xor
shrd
or
shr
mov
mov
or
mov
mov
mov
cmp
jne
mov
cmp
je
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
shrd
mov
mov
xor
shr
mov
xor
shl
or
mov
mov
mov
xor
shld
xor
mov
mov
shl
mov
mov
xor
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
mov
mov
xor
shl
mov
mov
xor
mov
mov
xor
xor
shrd
or
shr
mov
mov
or
mov
mov
push
pushl
push
push
call
mov
mov
shrd
shr
shr
xor
push
xor
mov
mov
mov
push
push
push
call
shld
mov
xor
or
mov
mov
shl
or
xor
xor
xor
xor
mov
mov
jmp
mov
add
mov
mov
mov
mov
mov
mov
movzwl
cltd
shld
xor
mov
mov
shl
mov
mov
xor
mov
cmp
jne
mov
cmp
jne
movl
mov
movl
mov
movl
mov
movl
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
add
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
xor
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
add
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
or
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
shl
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
add
mov
mov
shrd
xor
shr
mov
mov
shl
mov
xor
or
mov
add
shrd
xor
shr
mov
mov
xor
or
mov
or
mov
mov
shl
shl
mov
mov
xor
xor
mov
mov
xor
shrd
shr
or
xor
or
mov
mov
mov
mov
xor
shl
xor
mov
mov
mov
mov
xor
xor
shrd
or
shr
mov
mov
or
mov
cmp
jne
cmp
jne
jmp
mov
mov
mov
mov
mov
xor
shl
mov
mov
xor
mov
mov
xor
xor
shrd
or
shr
mov
mov
or
mov
mov
push
pushl
push
push
call
mov
mov
shrd
shr
shr
xor
push
xor
mov
mov
mov
push
push
push
call
shld
shl
mov
or
xor
or
xor
xor
mov
mov
mov
mov
mov
mov
shl
xor
mov
mov
mov
xor
xor
shrd
shr
or
xor
or
mov
mov
mov
mov
xor
shl
mov
mov
xor
mov
mov
xor
xor
mov
shrd
or
shr
or
cmp
jne
cmp
je
pushl
pushl
pushl
push
push
call
pop
leave
ret
push
mov
sub
push
movl
movl
movl
push
movl
mov
mov
push
push
push
call
mov
mov
or
or
add
adc
push
push
push
push
call
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
imul
mov
mov
xor
mov
mov
xor
mov
mov
and
xor
mov
sub
mov
sub
mov
imul
sub
mov
movl
movl
mov
mov
or
mov
imul
mov
movl
movl
movl
mov
mov
or
xor
div
mov
mov
sub
mov
xor
div
mov
xor
pop
mov
movl
movl
movl
mov
mov
sub
mov
div
mov
or
mov
sub
mov
mov
movl
movl
mov
mov
xor
lea
xor
leave
ret
push
mov
sub
push
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
xor
mov
div
mov
mov
mov
xor
mov
xor
mov
mov
or
lea
mov
xor
mov
and
xor
mov
div
mov
xor
sub
mov
sub
add
mov
mov
and
xor
div
mov
mov
imul
sub
add
cmp
ja
push
movl
movl
movl
mov
mov
add
xor
div
mov
mov
imul
imul
lea
mov
mov
mov
mov
mov
mov
mov
mov
xor
imul
lea
mov
mov
or
lea
mov
xor
mov
and
xor
mov
div
mov
mov
sub
mov
sub
add
mov
mov
and
xor
div
mov
imul
sub
add
cmp
jbe
pop
pop
pop
leave
ret
push
mov
sub
push
xor
xor
mov
sub
xor
push
push
movl
movl
mov
and
movl
movl
mov
mov
and
sbbl
mov
xor
inc
and
and
add
cmpl
jle
xor
sub
jmp
pushl
call
xor
mov
movl
movl
mov
cmpl
jb
xor
jmp
pushl
call
xor
sub
mov
imul
xor
mov
movzbl
sub
mov
div
mov
xor
or
sub
xor
sub
mov
cmpl
jl
sbb
jmp
push
pushl
pushl
call
movl
movl
movl
movl
movl
movl
sbbl
mov
xor
or
adc
mov
sub
imul
xor
add
mov
sub
or
add
or
and
cmpl
jge
xor
xor
mov
and
and
jmp
push
call
sub
mov
sub
add
mov
mov
orl
sub
or
add
cmpl
jg
mov
sbb
mov
adc
jmp
pushl
call
mov
xor
div
xor
mov
xorl
sub
mov
andl
add
sbbl
mov
movl
movl
not
movl
or
mov
sbb
xor
and
add
add
mov
xorl
xor
subl
div
and
mov
or
sub
cmpl
jl
jmp
push
push
push
push
call
mov
movl
movl
movl
movl
mov
mov
orl
xor
cmpl
ja
jmp
pushl
pushl
push
pushl
push
pushl
call
xor
push
pop
div
mov
xor
div
mov
or
cmpl
jle
or
jmp
pushl
push
push
push
push
call
sub
mov
movl
mov
mov
xor
sbbl
div
cmpl
jg
jmp
push
push
call
imul
xor
xor
imul
xor
mov
movl
movl
movl
mov
and
mov
orl
xor
adcl
div
mov
imul
add
xor
and
mov
sbbl
sub
mov
sbbl
movl
mov
mov
sbb
and
xor
and
sub
or
cmpl
ja
jmp
push
pushl
call
xor
mov
movl
movl
movl
mov
and
or
add
xor
add
or
andl
or
dec
sub
cmpl
jg
inc
mov
sub
jmp
pushl
call
mov
movl
movl
movl
and
mov
shr
sub
cmpl
ja
mov
and
jmp
push
push
call
xor
mov
lea
push
call
mov
or
or
mov
add
or
add
and
lea
adc
mov
and
movl
movl
movzwl
adc
movl
sub
movl
mov
sbb
mov
movl
subl
movl
movl
mov
mov
sub
imul
movl
mov
orl
mov
and
sub
mov
lea
adc
mov
mov
cmpl
jbe
sub
adc
jmp
push
push
pushl
pushl
call
mov
mov
imul
and
imul
or
mov
lea
mov
movzbl
xor
movl
movl
movl
and
movl
or
mov
mov
mov
sub
or
mov
mov
andl
xor
xorl
xor
adcl
mov
subl
call
xor
or
or
mov
mov
mov
mov
cmpl
jle
xorl
jmp
pushl
pushl
push
call
mov
xor
xor
mov
call
or
cmpl
jle
jmp
push
push
pushl
call
or
mov
mov
xor
xor
mov
call
or
mov
cmpl
jb
jmp
push
call
mov
mov
mov
xor
xor
mov
mov
addl
mov
mov
mov
andl
call
mov
adcl
or
mov
or
subl
push
adcl
push
andl
push
addl
push
addl
call
mov
mov
cmp
movl
jne
mov
mov
xor
xor
mov
call
xor
mov
mov
sub
mov
adc
mov
addl
xor
xor
andl
mov
call
or
movl
or
add
mov
adc
mov
xorl
xor
xor
mov
adcl
call
sub
mov
mov
xor
mov
mov
mov
sbb
mov
mov
xor
subl
xor
mov
mov
xorl
mov
decl
call
adcl
or
movl
mov
andl
or
push
subl
push
push
addl
push
xorl
call
mov
movl
jmp
jmp
cmpl
jg
add
jmp
push
call
lea
mov
mov
movl
mov
xor
cmpl
ja
jmp
push
call
shr
mov
xor
shl
or
mov
mov
mov
mov
mov
mov
movl
xor
xor
mov
sbbl
call
neg
mov
mov
adcl
mov
xorl
mov
andl
xor
adcl
xor
mov
movl
call
or
and
or
cmpl
jge
orl
movzbl
xor
jmp
push
push
push
call
mov
mov
xor
xor
movl
mov
subl
call
sbb
mov
sub
mov
xorl
mov
mov
subl
xor
subl
xor
mov
mov
mov
mov
incl
mov
call
sbb
mov
addl
or
sub
mov
or
push
subl
push
addl
push
push
sbbl
call
mov
cmp
movl
je
cmpl
jbe
jmp
push
push
call
mov
mov
xor
xor
mov
call
mov
mov
cmpl
ja
jmp
push
pushl
push
call
mov
mov
xor
xor
mov
call
or
or
sbbl
mov
imul
cmpl
jle
not
decl
jmp
push
pushl
push
pushl
push
pushl
call
add
mov
mov
mov
jmp
movl
jmp
cmpl
jb
xorl
jmp
push
call
mov
mov
xor
xor
mov
call
mov
xor
mov
mov
mov
xorl
xor
addl
xor
adcl
mov
call
subl
or
or
adc
mov
mov
xor
adcl
xor
mov
call
adc
mov
cmpl
jb
jmp
pushl
call
mov
mov
mov
xor
xor
mov
mov
mov
orl
call
or
or
mov
or
push
push
negl
push
push
subl
call
movl
mov
jmp
movzbl
adc
mov
mov
and
mov
xor
andl
xor
movl
mov
addl
call
add
mov
mov
mov
mov
sub
mov
cmpl
ja
movl
jmp
pushl
push
call
mov
xor
xor
mov
call
or
or
mov
movl
jmp
mov
cmpl
jl
jmp
pushl
push
push
call
mov
xor
xor
mov
call
mov
mov
sub
mov
xor
or
or
mov
xor
xor
subl
mov
call
xor
or
xorl
or
xor
mov
mov
add
mov
xorl
xor
sbb
mov
sub
sub
sbb
mov
xor
xor
or
xor
movzwl
and
add
cmpl
jge
jmp
push
call
mov
movl
movl
movl
movl
movl
movl
and
movl
xor
movl
cmpl
jl
mov
mov
and
adc
jmp
pushl
pushl
pushl
push
pushl
pushl
push
push
call
mov
add
mov
sub
cmpl
jbe
jmp
push
push
push
push
call
xor
push
pop
div
mov
xor
add
mov
xor
mov
xor
div
dec
or
sbb
mov
cmpl
jg
orl
jmp
pushl
pushl
call
xor
mov
sub
mov
mov
sub
cmpl
jle
xor
jmp
push
push
pushl
call
mov
xor
mov
div
mov
xor
sbbl
div
orl
mov
sub
mov
mov
add
lea
mov
movl
movl
movl
movl
movl
movl
movl
mov
or
mov
xor
div
mov
xor
div
mov
lea
mov
mov
sub
mov
xor
mov
div
mov
imul
add
xor
mov
add
mov
and
xor
mov
mov
add
add
mov
movl
movl
movl
movl
movl
movl
movl
mov
mov
imul
imul
mov
imul
mov
sub
add
mov
and
mov
sub
imul
mov
mov
or
sub
xor
mov
div
xor
mov
mov
add
add
mov
andl
jmp
mov
inc
mov
mov
mov
cmp
je
mov
mov
mov
add
mov
mov
mov
mov
mov
movl
movl
movl
movl
lea
mov
mov
movzwl
xor
movzwl
sar
mov
movzwl
xor
movzwl
shl
or
movzwl
mov
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movzbl
push
lea
push
call
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
add
mov
mov
cmp
je
mov
mov
movzwl
xor
movzwl
sar
mov
mov
movzwl
xor
movzwl
shl
or
movzwl
mov
mov
mov
movzwl
xor
movzwl
sar
mov
mov
movzwl
xor
movzwl
shl
or
mov
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
or
je
lea
mov
mov
xor
mov
call
mov
mov
mov
xor
mov
call
or
or
xor
xor
mov
mov
mov
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movsbl
cmp
je
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
movsbl
cmp
je
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movsbl
cmp
jne
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
add
mov
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
cmpl
je
mov
mov
movzwl
mov
mov
mov
jmp
jmp
cmpl
jne
xor
jmp
mov
add
mov
movl
cmpl
je
cmpl
je
mov
shl
mov
movl
sub
mov
movl
mov
cmp
je
mov
mov
mov
mov
mov
mov
mov
inc
mov
jmp
movl
push
jmp
push
mov
sub
push
movl
movl
movl
mov
mov
add
xor
mov
lea
mov
add
mov
movl
movl
mov
mov
add
xor
div
mov
xor
push
sub
imul
xor
lea
mov
movl
movl
movl
mov
mov
shr
sub
mov
imul
div
xor
or
xor
mov
movl
movl
movl
mov
mov
or
sub
or
mov
lea
mov
movl
movl
mov
mov
add
imul
xor
and
mov
movl
movl
mov
mov
and
sub
add
mov
movl
movl
mov
add
pop
div
mov
sub
add
imul
mov
movl
movl
movl
movl
movl
movl
mov
mov
mov
sub
mov
sbb
mov
mov
add
mov
adc
mov
or
or
add
mov
adc
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
or
mov
sub
mov
imul
mov
sub
imul
xor
add
xor
push
mov
add
imul
mov
div
mov
lea
push
mov
mov
mov
mov
push
push
push
push
call
mov
mov
xor
sub
and
xor
mov
mov
lea
push
mov
push
pop
xor
div
mov
sub
add
and
lea
call
mov
mov
imul
mov
sub
add
mov
xor
sub
cmp
jne
mov
mov
sub
mov
sub
add
xor
xor
lea
mov
push
mov
and
xor
imul
mov
div
push
mov
add
push
mov
mov
imul
and
mov
imul
mov
xor
pushl
call
mov
mov
lea
mov
incl
mov
mov
xor
shld
shl
mov
mov
xor
xor
cmp
jne
cmp
jne
mov
mov
jmp
lea
mov
mov
mov
mov
mov
sub
mov
mov
mov
sub
mov
movl
movl
mov
mov
mov
mov
pushl
pushl
pushl
pushl
pushl
push
push
pushl
mov
call
mov
mov
pushl
call
mov
push
add
push
push
call
mov
jmp
mov
mov
pop
leave
ret
push
mov
and
sub
push
push
lea
mov
mov
mov
mov
sub
sbb
mov
orl
orl
lea
push
lea
push
call
mov
mov
pushl
mov
pushl
mov
pushl
pushl
pushl
pushl
pushl
call
pop
pop
mov
pop
ret
push
mov
and
sub
push
push
push
mov
pushl
pushl
call
test
je
movl
movl
movl
push
movl
adc
mov
andl
mov
andl
push
addl
push
push
adcl
call
push
subl
push
xorl
and
sbbl
and
push
push
orl
call
xor
xor
and
mov
cmpl
jbe
and
jmp
call
mov
xor
or
mov
xor
or
notl
mov
xorl
movl
movzbl
and
mov
movl
add
movl
movl
sub
movl
adc
movl
cmpl
jb
adcl
jmp
pushl
push
push
push
call
mov
mov
mov
mov
or
mov
or
mov
mov
sbb
mov
adcl
sub
mov
movl
sbb
mov
xor
xor
subl
and
sbbl
and
cmp
movl
jne
movl
cmp
movl
jne
sub
movl
sbbl
movl
adc
movl
cmpl
jl
sbbl
xor
jmp
push
push
pushl
pushl
push
pushl
call
movl
movl
mov
mov
sub
adc
mov
subl
imul
adcl
and
negl
imul
mov
addl
pushl
imul
incl
xor
mov
adc
mov
sbbl
div
xor
mov
adcl
xor
sbb
mov
sub
or
xor
sbbl
pushl
addl
pushl
call
andl
pushl
call
andl
movl
movzbl
sub
movl
cmpl
jge
negl
jmp
pushl
push
push
push
call
movl
movl
movl
movl
mov
mov
sub
mov
mov
add
mov
adc
cmpl
jge
and
jmp
pushl
push
pushl
push
pushl
push
call
mov
add
adc
and
mov
and
orl
mov
movl
decl
movl
addl
movl
xorl
movl
subl
dec
cmp
jne
movzwl
or
movl
mov
xorl
mov
movl
addl
mov
call
xor
lea
mov
mov
sub
sub
mov
lea
adc
mov
mov
cmpl
jbe
jmp
pushl
push
push
call
mov
mov
mov
xor
shl
shr
or
xor
mov
add
mov
or
mov
and
mov
xor
or
xor
or
sub
sub
mov
cmpl
ja
andl
jmp
push
pushl
pushl
call
mov
mov
shrd
shr
mov
mov
subl
xor
sbbl
xor
xorl
or
cmpl
ja
subl
jmp
push
push
pushl
push
pushl
pushl
call
mov
push
pushl
lea
push
shl
call
adcl
lea
subl
push
mov
mov
andl
lea
andl
push
adcl
mov
subl
lea
notl
mov
mov
orl
mov
push
xorl
call
xorl
push
addl
push
pushl
addl
call
mov
cmpl
ja
mov
xor
jmp
push
pushl
push
push
push
push
call
mov
mov
mov
shr
shl
or
mov
mov
sub
sub
mov
xor
xor
mov
or
xor
mov
lea
mov
cmpl
jle
adc
jmp
pushl
push
push
call
lea
mov
mov
sub
lea
xor
sbb
movl
movl
mov
sub
movl
movl
orl
mov
adcl
mov
sub
add
mov
mov
movl
adc
xor
cmpl
jb
and
jmp
push
push
push
call
xor
and
mov
and
mov
movl
movl
movl
movl
sbb
movl
add
movl
andl
mov
sub
mov
adc
mov
cmpl
jl
and
jmp
push
call
mov
push
push
or
or
push
addl
push
xorl
call
mov
negl
mov
sub
mov
movl
sbb
mov
mov
cmp
jne
cmp
je
and
movl
movl
movl
xor
add
mov
sub
xor
movl
mov
mov
sub
xor
mov
mov
mov
cmpl
jb
jmp
pushl
pushl
pushl
push
pushl
call
mov
add
adc
xor
xor
and
mov
and
mov
movl
movl
movl
and
movl
sub
movl
cmpl
jl
add
jmp
pushl
call
movl
movl
movl
mov
mov
push
push
xor
adcl
xor
push
push
call
addl
mov
andl
mov
push
push
push
sbbl
push
call
cmpl
jl
subl
jmp
call
mov
mov
push
push
push
push
andl
call
mov
sbb
mov
mov
mov
andl
add
movl
mov
adc
mov
cmp
movl
jne
movl
cmp
movl
je
xor
mov
xor
mov
addl
xor
adcl
shld
mov
and
shl
mov
mov
sbb
mov
sbbl
xor
subl
xor
mov
movl
cmp
movl
jne
movl
cmp
je
mov
mov
cmp
je
cmpl
jl
sub
jmp
pushl
call
mov
mov
mov
shl
xor
mov
mov
cmpl
jle
and
jmp
pushl
push
push
call
mov
xor
xor
shrd
xor
shr
or
or
mov
movl
mov
movl
cltd
movl
cmp
movl
jne
cmp
movl
jne
movzwl
add
movl
cmpl
jge
mov
add
jmp
push
push
call
movl
mov
mov
mov
xor
orl
shld
adcl
shl
movl
mov
mov
xor
sbbl
xor
mov
cmp
jne
movl
cmp
movl
jne
movl
mov
mov
shrd
shr
mov
mov
mov
mov
mov
shl
mov
xor
xor
or
cmp
jne
mov
mov
mov
mov
mov
mov
movzwl
mov
and
mov
or
mov
add
or
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
or
mov
or
mov
sub
mov
sub
mov
cmp
jbe
mov
mov
mov
mov
movzwl
mov
or
mov
sub
mov
or
imul
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
xor
mov
imul
mov
and
mov
and
mov
cmp
ja
mov
mov
shrd
xor
mov
shr
mov
xor
or
push
push
shl
push
lea
push
lea
push
call
pushl
pushl
pushl
pushl
call
mov
mov
mov
mov
shrd
shr
shl
xor
mov
xor
or
mov
mov
mov
mov
shrd
xor
mov
shl
shr
mov
xor
or
mov
mov
mov
mov
mov
cmp
jne
mov
mov
mov
cmp
jne
movb
movb
movb
movb
mov
mov
or
sub
mov
sub
movzbl
movzbl
cltd
idiv
movzbl
or
mov
movb
movb
movb
movb
movb
mov
mov
or
and
mov
imul
mov
movzbl
movzbl
and
mov
movzbl
cltd
idiv
mov
cmp
je
lea
push
lea
call
cmp
jne
cmp
jne
xor
jmp
xor
inc
jmp
mov
mov
mov
mov
add
adc
mov
mov
jmp
mov
push
push
lea
push
call
mov
push
pushl
lea
push
call
mov
mov
mov
mov
mov
mov
mov
lea
mov
add
movl
movl
mov
and
add
and
sub
and
mov
movl
mov
mov
or
add
cmp
je
mov
mov
mov
xor
shld
shl
xor
xor
cmp
jne
cmp
je
mov
mov
mov
mov
xor
shr
shl
or
xor
shld
shl
xor
xor
cmp
jne
cmp
je
mov
cltd
mov
mov
cltd
shld
shr
xor
shl
or
or
mov
mov
xor
xor
mov
cmp
jne
cmp
je
pushl
pushl
mov
mov
pushl
mov
call
mov
mov
mov
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
mov
pop
ret
movl
cmp
movl
jae
movl
cmp
jae
shld
movl
shl
ret
mov
addl
xor
and
shl
ret
xor
xor
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
and
and
or
mov
sub
mov
mov
sub
add
add
mov
xor
cmp
jne
mov
mov
xor
div
push
push
push
xor
mov
mov
mov
mov
mov
imul
mov
div
mov
sub
xor
shl
imul
sub
xor
mov
mov
add
mov
add
mov
mov
mov
xor
and
mov
imul
mov
sub
or
mov
pop
xor
pop
pop
cmp
je
mov
jmp
mov
mov
sub
or
imul
add
jmp
movl
movl
movl
mov
mov
add
imul
mov
or
xor
mov
div
xor
leave
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
xor
sub
and
sub
push
movl
movl
movl
movl
mov
mov
imul
mov
imul
xor
div
mov
mov
push
shr
and
xor
mov
sub
mov
mov
mov
and
imul
mov
imul
add
mov
sub
mov
mov
add
xor
pop
div
mov
push
and
sub
xor
add
mov
mov
and
imul
mov
imul
or
xor
pop
sub
mov
mov
or
mov
or
mov
add
or
mov
or
lea
cmp
jbe
pop
leave
ret
negl
subl
movl
cmpl
movl
je
cmpl
jbe
xor
jmp
push
pushl
pushl
pushl
push
push
push
pushl
push
push
push
push
pushl
push
call
add
mov
mov
pop
pop
pop
leave
ret
mov
mov
ret
orl
mov
mov
notl
or
mov
movl
jne
mov
sbbl
mul
ret
xorl
push
mul
and
mov
add
mov
mull
add
mov
mul
add
pop
ret
incl
push
mov
sbb
push
mov
andl
or
movl
jne
mov
mov
sub
imul
mov
mov
xor
div
andl
mov
and
mov
movl
div
not
mov
jmp
and
mov
andl
mov
movzbl
xor
mov
cmpl
jge
jmp
pushl
pushl
call
mov
shr
rcr
shr
rcr
or
jne
div
mov
mull
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
xor
mov
pop
pop
ret
