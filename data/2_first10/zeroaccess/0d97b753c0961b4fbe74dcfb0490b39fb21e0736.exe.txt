push
mov
sub
xor
mov
xor
mov
adc
mov
sub
push
mov
mov
mov
mov
jmp
mov
or
inc
pop
jp
hlt
adc
adc
push
clc
adc
xor
fimull
mov
fsubl
int3
or
adc
jo
movsb
xchg
jle
dec
mov
mov
xchg
mov
daa
and
push
sbb
sbb
pushf
dec
out
sbbb
add
sbbb
inc
ret
mov
movsb
in
jne
loopne
jno
aas
xchg
in
rolb
pop
or
sbb
notl
add
pop
fidivs
cli
xchg
cmp
or
pop
or
cmp
inc
cld
mov
leave
push
jbe
push
fsubrs
or
and
ficoms
dec
mov
sbb
std
andl
add
dec
jb
push
push
iret
lods
mov
shll
loope
enter
mov
das
jecxz
jle
into
lahf
outsl
mov
xor
daa
pop
xor
mov
daa
cld
imul
cmpsb
dec
jle
mov
and
or
xchg
inc
inc
jnp
cmp
push
xor
or
cmc
mov
scas
adc
mov
mov
stos
int3
ffreep
mov
test
or
pop
loope
test
jge
neg
mov
icebp
loope
sbb
aad
pop
insb
xorl
cmp
das
push
pop
pusha
xchg
xor
imul
add
sbb
movsb
fidivs
shl
movb
xchg
sub
aam
pop
mov
mov
rorl
sub
std
dec
or
out
js
daa
sbb
shll
jge
jae
jle
add
into
jge
stos
mov
sahf
and
inc
mov
lahf
daa
daa
dec
leave
jp
dec
pop
les
push
loope
lods
inc
inc
mov
mov
mov
or
mov
fs
addr16
mov
jmp
enter
into
das
xchg
xor
mov
jbe
mov
mov
push
out
lret
or
sbb
pop
and
movsl
adc
pop
icebp
repz
cmp
push
dec
add
mov
shrb
and
out
out
pop
mov
mov
pop
movsl
jae
es
pop
mov
leave
bound
xchg
dec
pop
xor
stc
jnp
pushl
adc
cwtl
mov
sub
lods
mov
pop
shl
cmp
std
mov
jae
or
mov
mov
xchg
lret
loop
add
sub
imul
xchg
in
sbb
sub
push
fsubr
out
outsb
popf
adc
test
mov
pop
out
out
adc
sbb
popa
adc
push
add
lcall
jle
pusha
rol
ret
xchg
sahf
xchg
mov
xor
adc
cmpsb
sbb
sbb
jmp
lret
sub
mov
sbb
mov
push
jb
mov
push
cmc
mov
cs
nop
out
jns
sbb
jl
inc
mov
incl
mov
in
xlat
call
mov
pop
dec
nop
inc
xchg
mov
mov
mov
out
stos
mov
stc
jecxz
inc
leave
inc
sbb
mov
push
cmp
cmp
in
ja
lret
jns
pop
loop
pop
sub
jb
sbb
int3
mov
mov
and
stos
movsl
mov
sbbb
add
mov
pop
push
xchg
stos
jg
xchg
cli
fldenv
or
mov
subb
jle
enter
xchg
pop
xor
mov
xchg
loop
in
xor
je
lret
in
repz
push
mov
cmp
inc
loope
fisubl
and
lock
dec
mov
or
je
sarb
shrl
popf
lahf
clc
xchg
mov
or
shlb
adc
lahf
out
push
movsl
in
nop
jmp
imul
dec
adc
dec
sub
mov
mov
xor
or
xchg
pop
adc
mov
cwtl
movsl
mov
test
out
ds
mov
cmc
imul
fcoml
loopne
out
xorb
cmp
sahf
mov
out
push
pop
jae
cld
inc
adc
ja
lret
dec
or
sub
adc
call
cltd
lret
dec
pop
xchg
and
cmp
jp
xchg
cmpsl
ljmp
stos
sbb
mov
jl
pop
pop
lods
pop
inc
iret
sub
pop
roll
xchg
and
sbb
adc
xor
pop
sub
push
pushf
sub
jb
mov
loopne
xchg
pop
shlb
mov
stos
jecxz
mov
addl
ret
xor
pushl
add
and
lock
stc
add
fisubl
or
rcll
mov
stos
xchg
mov
pop
mov
adc
push
mov
stos
jno
shrb
test
je
sbb
adc
stos
ja
cmp
sub
xchg
repz
add
jle
jo
push
cs
mov
add
sti
bound
sub
inc
lret
ret
test
sub
xchg
push
bound
xchg
or
icebp
push
adc
fcomps
pop
mov
push
test
mov
push
repz
cmp
gs
xchg
lock
outsb
push
mov
imul
stc
mov
jnp
xchg
rorb
insb
out
jno
or
lea
push
push
lods
iret
cmpsb
mov
pop
call
pop
xor
sbb
adc
insl
out
bound
mov
sub
dec
mov
lds
adc
push
mov
data16
xlat
inc
rorb
aas
sub
mov
mov
shlb
addr16
push
jb
jmp
cld
cmp
js
aad
addr16
mov
cmpsb
pop
xor
popa
fisubrl
sbb
and
push
in
pop
xlat
cmp
push
adc
popf
jne
outsb
pop
test
pop
in
subb
lcall
pushf
dec
mov
shrl
scas
loop
js
insb
xor
mov
push
push
mov
subb
insb
enter
mov
shl
adc
addr16
pop
mov
cmpb
inc
test
ljmp
mov
push
add
dec
push
pop
clc
lret
adc
or
stos
fnstsw
fs
das
and
lahf
pop
sbb
mov
orl
orl
orl
mov
cmpl
movl
movl
jmp
movl
jne
push
push
push
call
xor
adcl
sbb
mov
and
sbbl
xor
adc
mov
sbb
mov
inc
mov
sub
mov
sbb
cmpl
mov
not
mov
jmp
movl
jg
pushl
call
sbb
or
adc
xor
or
or
sbbl
mov
orl
sub
orl
cmpl
mov
mov
movl
jmp
movl
jbe
pushl
push
pushl
call
and
and
xor
add
and
movzbl
add
mov
add
mov
sub
movl
lea
cmpl
mov
movl
jmp
movl
jg
push
call
movl
xor
add
sbb
or
and
xor
mov
addl
mov
and
mov
or
mov
mov
add
mov
add
orl
mov
mov
mov
or
mov
movzbl
or
shrd
cmpl
mov
mov
mov
mov
jmp
mov
jl
push
pushl
push
push
push
call
and
or
adc
mov
sub
shr
andl
mov
cmpl
not
notl
jmp
mov
movl
jne
push
call
movzbl
adc
and
movl
sbb
xor
add
adc
mov
mov
xor
orl
xor
or
mov
movl
sbb
jmp
push
test
pusha
stos
xchg
nop
hlt
jnp
adc
push
clc
adc
push
clc
adc
in
dec
std
mov
pusha
sti
cmp
outsb
xchg
mov
in
outsl
shlb
in
insl
add
lds
hlt
out
fcmovbe
xchg
out
mov
xchg
sbb
cmp
mov
mov
or
test
into
sbb
stos
in
jnp
jp
mov
lds
jno
jl
xchg
pop
dec
and
xchg
shrb
icebp
testb
rorl
xor
sbb
sarb
mov
xchg
bound
mov
nop
add
out
jg
jge
mov
cli
sbb
push
cs
into
jbe
into
add
add
ret
jmp
sub
jae
sub
jo
jns
out
dec
ficoms
mov
mov
push
icebp
pop
add
mov
fmull
scas
lea
push
or
test
push
rcr
jmp
and
das
inc
and
mov
loopne
out
adc
outsb
test
cmp
mov
fstpt
ljmp
xchg
lods
and
jbe
pop
mov
dec
into
aam
pop
adc
lods
push
minps
insl
xchg
cmp
les
cs
imul
mov
xor
in
sti
inc
fnstenv
test
and
popa
stc
sub
xchg
test
dec
pop
jno
into
imul
fmuls
mov
push
mov
cld
lahf
xchg
lock
or
mov
std
insl
jo
adc
sarl
mov
int
dec
fdivs
pusha
push
addl
insl
les
jmp
jo
push
cli
mov
inc
adc
out
add
scas
cmp
or
mov
xchg
xor
out
add
or
inc
cmpsb
dec
movsl
adc
ret
gs
subb
mov
mov
mov
mov
lds
xchg
cmc
cmp
xor
cmc
mov
jecxz
and
pop
inc
or
into
jo
scas
pop
fidivrl
cmp
das
sub
int3
or
imul
inc
cmpsl
pushf
or
loop
xchg
push
fadd
dec
nop
sbb
or
flds
daa
cmpsb
enter
pop
push
pop
jnp
cmp
xor
btr
pop
mov
pslld
cmp
cmp
rclb
mov
bnd
push
insl
les
aam
cs
std
out
pop
adc
jg
mov
test
insl
fsubrl
mov
push
cmpsl
or
bnd
sarb
or
lods
mov
inc
sarb
scas
jl
jle
in
add
test
mov
dec
xchg
es
mov
cmp
cli
pop
xchg
push
and
xor
cmc
jp
mov
fs
mov
dec
xchg
mov
not
jp
inc
mov
mov
dec
push
int
aam
in
sti
pop
lret
pop
cmc
out
in
jg
push
rcll
xor
cli
push
gs
xchg
imul
xchg
mov
or
and
pushf
mov
jl
pushf
sbb
jae
int3
mov
or
callw
mov
fcompl
popa
rcll
stos
imul
mov
pop
outsl
fidivrl
inc
pop
jl
mov
mov
rol
lods
sub
xor
sub
out
sbb
mov
mov
in
out
xor
into
adc
xchg
jae
pushf
jmp
mov
mov
movsl
inc
enter
cmp
lcall
std
mov
hlt
sbb
push
inc
aas
clc
cmp
adc
dec
mov
inc
jae
mov
inc
into
std
cmpsb
inc
add
les
pop
sbb
dec
inc
push
insb
jbe
xchg
in
push
xor
das
cmp
cltd
sbb
lods
rcrb
nop
cmp
cld
andl
cmpsb
outsb
cmp
push
inc
inc
lea
movsb
fnstsw
mov
outsb
das
fsubrs
pop
mov
sti
js
ror
in
out
pushf
cld
mov
test
add
jb
loop
lea
sbb
addr16
repz
cmp
mov
sub
fs
xor
cmp
lods
cld
push
jecxz
idiv
lods
movb
je
pop
fcmovne
cmp
add
or
push
lds
jl
out
ret
jg
sahf
mov
push
sub
sbb
out
pop
test
dec
ja
pand
ljmp
into
adc
insb
pop
stc
in
leave
adc
ljmp
mov
int
ret
sub
aas
inc
sahf
or
sbb
cld
xor
and
push
pop
ljmp
jns
roll
dec
and
sbb
cmpsb
fmul
adc
jecxz
push
cwtl
cmc
push
lds
push
mov
dec
mov
add
aad
mov
notl
dec
jle
jmp
sbb
sbb
adc
cli
mov
into
dec
daa
jp
inc
push
cmp
sahf
xchg
pop
mov
cld
xor
xor
out
push
cli
out
mov
mov
xchg
cmpb
adc
and
data16
in
fsub
mov
and
sbb
in
xorb
cmp
inc
in
xlat
repnz
sub
into
test
inc
imul
push
in
cmp
xor
or
cmc
dec
pop
imul
nop
add
xchg
pop
lret
pop
movsb
or
sub
mov
pop
fiaddl
les
adc
clc
fcompl
xor
lock
stos
xor
int
or
mov
or
iret
pop
cmc
movsl
dec
mov
mov
mov
out
imul
jnp
in
push
cwtl
ja
clc
clc
hlt
frstor
jp
rorl
or
xchg
dec
int3
and
inc
push
int3
out
push
dec
cmpsl
mov
sub
inc
adc
test
jle
xor
std
and
inc
xchg
outsl
inc
add
negl
movl
neg
movl
neg
movl
movl
add
movl
or
movl
mov
adc
movl
cmpl
movl
mov
jmp
not
mov
jle
pushl
call
sub
orl
movl
andl
movl
and
adcl
and
movl
movl
jmp
push
sbb
sbb
sbb
sbb
hlt
aam
xchg
ljmp
and
jp
cmp
inc
lret
mov
add
jp
add
mov
dec
lds
outsb
mov
adc
mov
loope
add
sub
xor
fdivrl
cmp
icebp
cli
call
add
mov
mov
or
or
scas
ret
push
push
jle
cmc
or
push
scas
sti
call
cmp
andb
mov
sbb
insb
jge
inc
mov
mov
inc
icebp
add
int3
dec
sbb
inc
jno
sub
xor
andb
jmp
jge
pop
out
ret
aas
and
fnstsw
dec
dec
popw
rorl
inc
mov
mov
aam
subb
pop
xchg
nop
ss
sar
orb
inc
jmp
repz
add
pop
popa
mov
push
and
in
aam
pop
stos
pop
push
out
fwait
mov
sub
movsl
test
jne
call
sbb
inc
mov
inc
repnz
filds
ret
call
dec
mov
dec
mov
xchg
hlt
jle
mov
mov
in
inc
stos
cmpsb
lods
int3
xor
adc
iret
cltd
insb
movsl
push
sub
and
loopne
sbb
es
out
cli
mov
insb
icebp
mov
ret
mov
lret
repz
add
aad
and
sbb
mov
inc
shr
test
sub
stc
push
cmp
call
stos
dec
arpl
cltd
dec
stos
jne
sub
movsb
pop
mov
icebp
icebp
jl
xchg
cmp
out
pop
out
add
or
cmp
sbb
and
mov
call
incb
jge
sbb
or
outsl
mov
push
addb
jnp
jnp
mov
fsubrl
jp
es
into
xor
jno
inc
sbbl
push
and
outsl
push
cmp
xor
bound
pop
and
aas
movlps
into
repz
xor
sub
outsb
cmpsb
iret
mov
xchg
adc
pop
inc
rolb
scas
andb
cmp
push
jno
and
clc
lea
jb
stos
ret
dec
sub
jno
sbb
sub
sbb
and
lock
sahf
lret
or
cmp
arpl
call
jae
or
mov
in
ja
sub
loope
imul
or
mov
pop
adc
in
movsb
add
dec
push
adc
sbb
movsl
and
or
insl
inc
fcomps
test
or
pop
bound
das
or
inc
sbb
scas
pop
pop
sbb
pop
scas
jg
mov
notb
lcall
into
and
cmpsl
int3
sbb
mov
lea
outsl
es
out
in
or
test
and
in
pop
test
mov
mov
scas
into
or
leave
je
cmc
mov
inc
xchg
out
pushl
stos
jo
xor
mov
adcl
push
xor
or
mov
lahf
sbb
jb
jbe
lret
pop
add
inc
pop
cs
leave
adc
scas
pushf
out
mov
aaa
inc
add
popf
imul
mov
inc
cmp
iret
stc
or
mov
gs
add
sbb
push
pop
pop
imul
inc
popf
stc
add
push
push
out
int3
out
cld
mov
mov
mov
mov
add
push
sbb
cld
or
daa
hlt
test
xchg
out
hlt
icebp
lea
popf
cmpl
or
scas
mov
push
sub
mov
xchg
pop
test
add
push
mov
je
push
je
jle
pop
xchg
mov
and
adc
lods
push
push
push
mov
mov
data16
fmull
mov
xchg
dec
subb
push
sahf
pop
in
mov
inc
mov
lret
xchg
sub
sbb
lods
inc
inc
fisttpll
out
es
aam
ficompl
xor
jp
movsl
pop
mov
cmc
ja
fists
out
xor
imul
ja
fildll
fdivrl
jp
jns
out
mov
cwtl
daa
cltd
fwait
jecxz
bound
xor
aad
fistpl
push
xor
sbb
mov
cmpsl
stos
jbe
imul
lahf
mov
and
out
xor
mov
xor
mov
pop
std
aam
lods
rdtsc
ror
mov
jle
add
mov
add
aad
pop
loope
ficomps
pop
jb
mov
add
pop
movsl
lods
jmp
inc
js
clc
call
inc
stos
in
fs
sarb
jl
sbb
lret
scas
mov
test
jmp
push
jp
jb
nop
in
enter
lea
cmpsl
mov
lds
pop
xor
movsl
das
cmp
mov
std
add
aad
xlat
and
out
cmp
in
mov
dec
inc
nop
imulb
pop
and
mov
jbe
out
xchg
repnz
sbb
cmp
in
das
mov
xor
movsb
sti
cmpsb
test
lock
xlat
dec
repnz
insb
loope
jo
mov
lock
mov
fisubrl
icebp
pop
nop
inc
mov
aas
jp
out
lret
shlb
sub
or
call
hlt
pusha
cmp
shlb
addl
sti
inc
mov
sahf
js
dec
sbb
loope
jo
or
xchg
dec
aaa
dec
jp
std
jno
jp
ret
roll
icebp
dec
inc
pop
fisttpll
addr16
and
in
je
rclb
push
ljmp
mov
or
mov
lock
call
std
test
scas
jmp
xor
mov
in
ret
sbb
repnz
imul
stos
sahf
mov
sbb
stc
pop
xchg
mov
dec
sbb
inc
and
mov
negl
iret
movsb
fs
movsw
ja
mov
into
adc
sbb
and
fcoml
and
lods
mov
push
pop
mov
push
add
pop
out
pop
arpl
loopne
out
cld
rorb
repnz
mov
sarb
inc
xchg
mov
inc
cwtl
inc
sbb
add
inc
pushf
jge
add
not
movl
cmpl
movl
movl
jmp
movl
not
je
push
push
push
push
pushl
push
push
pushl
call
sbb
negl
orl
subl
subl
orl
movl
movl
movl
sub
movl
jmp
loop
in
gs
ljmp
aam
adc
push
clc
adc
or
add
push
xchg
jnp
out
popf
iret
push
adc
or
pushf
jle
mov
cmp
sbb
int
adc
imul
pushf
push
xor
aam
xchg
adc
push
pop
loop
cmp
cld
stos
mov
fnstcw
iret
cwtl
sahf
jge
outsl
retw
or
or
xchg
ja
xlat
jg
pusha
sbb
jnp
out
and
pop
pop
imul
sahf
popa
neg
xor
cld
pushf
in
jnp
xor
sbb
or
aam
rorb
or
int3
mov
and
cmpsb
mov
xchg
mov
mov
ret
fistl
clc
fdivrl
inc
push
adc
leave
push
mov
jns
leave
xor
out
mov
xlat
adcl
repz
mov
and
mov
adc
test
fisubl
dec
dec
xor
and
cli
sti
pop
cli
xchg
mov
mov
adc
jmp
or
gs
xchg
enter
lods
scas
pop
adc
push
cmp
mov
inc
lret
iret
pop
mov
and
xor
and
jns
mov
add
xchg
lret
jge
fdivs
fs
rcrl
and
dec
ficompl
stc
add
adcb
cltd
pop
push
mov
stc
or
aam
xchg
popf
push
mov
into
pop
rcl
jmp
inc
sbb
fsubrs
das
adc
cmpsb
mov
in
pop
xchg
sub
outsb
jle
inc
mov
jecxz
mov
mov
fldl
cld
mov
lods
inc
dec
push
call
call
cwtl
xchg
adc
fbstp
mov
sti
pushf
jle
sub
outsl
xor
push
sbb
add
push
int3
aam
xor
push
aad
cmp
add
cs
pop
adc
xchg
leave
pop
lcall
sub
jae
ljmp
or
in
sub
mov
dec
jns
lcall
mov
addr16
cmp
sub
fmulp
sbb
xor
jmp
fisttps
jg
adcl
cli
int
xchg
scas
out
call
es
adc
in
test
fdivrp
mov
pcmpgtw
lods
mov
dec
clc
out
or
pop
xlat
sub
mov
xchg
mov
rcrl
fnstsw
leave
cmpsl
jne
fnstenv
jg
ss
fcmovne
cmc
jae
data16
rcl
dec
add
ret
adc
and
or
mov
sbb
into
adc
adc
mov
icebp
dec
enter
cltd
testb
xor
test
stos
add
clc
mov
mov
movsb
xor
cmp
mov
into
mov
in
bound
xor
xor
xor
mov
pop
and
mov
scas
rorb
xchg
je
pop
push
mov
lods
cwtl
pop
and
push
sbb
cs
or
and
pmulhuw
fisubl
add
mov
mov
clc
mov
or
push
cmpl
dec
cmp
pop
stos
push
cmp
dec
popa
or
cld
sub
or
and
and
inc
sub
xchg
out
dec
mov
mov
mov
aaa
popf
jmp
jmp
xor
aad
pop
inc
add
testl
jnp
xchg
add
and
mov
inc
fdiv
dec
mov
xchg
dec
int3
dec
ret
outsb
jp
nop
lea
rcrl
add
sub
movsl
es
adc
mov
insb
xor
popf
mov
pusha
sub
stos
dec
lds
rolb
ficomps
icebp
clc
sbb
in
push
dec
and
testl
stc
icebp
test
ja
out
cli
jns
cs
lods
xor
xchg
popl
jge
enter
lcall
lahf
pop
add
dec
cld
imul
pop
inc
icebp
xchg
insl
jle
sub
sub
jecxz
mov
outsb
out
fcomps
mov
int3
in
roll
cmp
fldl
fisttpll
mov
push
jbe
mov
sti
sub
or
pusha
push
mov
ds
push
xchg
add
sahf
test
fwait
xchg
push
mov
test
cmp
mov
pusha
arpl
mov
xchg
xor
lock
out
push
pushf
mov
cmpsb
adc
push
jns
stc
fs
adc
fstpl
stc
xchg
jns
fnstsw
xchg
mov
xor
and
mov
jno
cmp
adc
jb
xchg
inc
inc
repnz
arpl
mov
fsin
jge
mov
iret
fimuls
bound
xlat
das
fisubl
mov
jp
rcll
xor
pop
popf
sbb
inc
adc
xchg
je
pop
in
mov
push
mov
mov
and
cmpsb
mov
call
jl
xlat
sub
mov
lahf
iret
sbb
lds
rorb
js
loope
into
fnstenv
repz
cld
mov
imul
and
xor
pop
scas
mov
push
pop
dec
xchg
jno
iret
pop
outsb
jae
mov
xchg
mov
pusha
and
movsl
mov
jns
sbb
int3
jne
xchg
cmp
fs
pop
iret
fdiv
ja
mov
pusha
outsl
sub
pop
movsl
outsb
lods
and
mov
or
outsb
add
cmpsl
push
sbb
cld
add
pop
ret
cmpsb
mov
inc
call
cmp
jp
cmpsl
bound
shl
or
jb
mov
jbe
fistl
enter
mov
or
je
in
imul
pop
jecxz
jo
adc
leave
insl
pusha
lods
and
lds
cmpsl
je
shlb
cmp
movsb
jne
mov
mov
push
add
inc
sub
pop
sub
inc
mov
movl
movl
mov
adcl
shl
xor
or
and
mov
push
xorl
push
sbbl
push
push
call
mov
mov
xor
mov
and
mov
orl
xor
mov
cmpl
mov
not
movl
not
jmp
movl
movl
jb
pushl
push
push
call
sub
and
subl
xor
andl
add
orl
xor
or
mov
adc
mov
cmpl
mov
movl
movl
jmp
movl
jg
push
push
pushl
call
or
sbbl
and
xor
not
subl
cmpl
movl
movl
mov
jmp
movzbl
jge
push
pushl
push
push
call
xorl
sbb
sbb
movzwl
xor
xor
xor
and
sub
not
mov
lea
cmpl
mov
mov
jmp
movl
ja
push
push
pushl
call
sub
mov
or
sbb
or
adc
or
cmpl
mov
movzbl
jmp
mov
jl
pushl
call
xorl
mov
mov
xor
add
xorl
mov
mov
orl
or
andl
and
cmpl
mov
movl
movl
mov
jmp
movl
movl
jne
pushl
pushl
call
adc
movzwl
sbb
add
mov
sbb
mov
or
or
xor
or
or
mov
or
xor
cmp
jne
mov
and
mov
or
shrd
shr
mov
sbb
mov
shl
orl
xor
subl
xor
or
mov
cmp
jmp
pop
fdivrs
sbb
cltd
filds
iret
adc
push
clc
adc
repz
shrb
jmp
jp
add
jae
gs
call
mov
mov
int
mov
xor
cs
out
mov
icebp
lret
xor
cmpsb
inc
or
xor
sbb
xor
or
sahf
or
jbe
cmp
hlt
pop
mov
test
cmp
hlt
out
xor
adc
fcoml
loop
shrb
and
arpl
cmpsb
daa
fucom
lds
or
xchg
roll
pushf
aam
dec
dec
insl
cmc
fs
pop
stc
sbb
push
pop
addr16
xchg
call
add
inc
adc
xchg
mov
lods
out
aas
icebp
shll
ss
jge
cmc
jnp
inc
xchg
addl
jnp
aad
aas
enter
mov
add
inc
xchg
je
cmp
shll
pushf
shrb
jb
xor
xchg
mov
inc
insb
mov
pop
pop
add
or
imul
jp
out
movsb
inc
pusha
push
fcmovb
xchg
out
and
dec
repz
fdivr
lret
cmc
in
inc
sub
pop
and
xchg
jnp
enter
fldcw
in
ficompl
cld
sub
std
jge
xchg
lcall
fdivr
fadd
jmp
js
inc
cs
inc
icebp
stc
mov
nop
pop
adc
pop
and
inc
rep
push
loop
loop
pushl
mov
mov
bound
xchg
sbb
dec
dec
mov
std
pop
sub
test
and
jle
lds
push
sbb
cwtl
in
mov
aad
enter
jnp
inc
loop
fsub
cmp
sub
loopne
mov
jne
test
or
dec
call
cltd
push
adcb
sahf
mov
pusha
cmpsl
mov
pop
sub
or
dec
push
movl
xchg
mov
xor
inc
xor
pop
lahf
test
cmc
cltd
and
xor
scas
fistpll
mov
mov
jbe
jmp
mov
jbe
push
inc
add
arpl
xadd
pop
and
arpl
jbe
sub
addb
inc
xor
insb
jne
mov
push
push
clc
sub
loopne
inc
xor
je
push
pop
ljmp
add
sbb
jmp
or
outsb
int
icebp
data16
jmp
fidivl
ljmp
aam
cmp
loop
push
jmp
test
mov
cmp
sub
xchg
jle
mov
and
pop
sub
in
mulb
popf
mov
stos
mov
sahf
push
test
test
add
imul
xor
into
jle
or
scas
mov
jg
add
je
mov
test
cltd
cmpb
js
divb
stos
fwait
inc
cmpsl
fistps
jns
sub
and
inc
sarb
fistl
push
in
dec
jbe
cld
xor
loop
dec
mov
mulb
in
sub
jae
cwtl
add
xchg
mov
cwtl
test
xor
mov
mov
popf
out
dec
or
testl
mov
gs
cli
aas
mov
jnp
cmp
aad
fchs
es
lods
inc
insl
adcl
ss
mov
lahf
mov
xchg
mov
xor
mov
shrl
push
aad
and
pop
andb
push
ljmp
push
jmp
divl
inc
sub
inc
push
xor
stos
mov
aad
lahf
aaa
movsl
imul
pop
xor
mov
push
lret
add
push
sahf
xchg
orl
les
or
ljmp
push
mov
dec
test
inc
jle
xor
add
xchg
imul
dec
in
mov
cmp
xor
lcall
cld
sub
and
stos
push
dec
pop
icebp
push
sub
jo
shlb
pop
fcmovne
mov
lcall
xchg
push
sub
dec
insb
data16
loope
jbe
lds
xchg
nop
lahf
jnp
push
adc
mov
stos
push
movsb
xchg
negb
adc
call
insl
xchg
cmp
inc
push
js
mov
and
inc
out
mov
xchg
xchg
test
or
popf
push
cmc
xchg
les
or
jae
jmp
lcall
xor
and
jecxz
movsb
movsl
dec
adcb
mov
ficoml
cltd
mov
xor
addr16
lcall
in
xchg
inc
inc
iret
cld
nop
lahf
int3
repnz
movsl
dec
jp
out
cltd
sub
push
and
loopne
mov
dec
out
aam
jns
push
jl
and
lds
sarl
sbb
mov
dec
sub
mov
sbb
insb
cmp
out
int3
je
add
inc
xorl
arpl
pop
outsl
xchg
xchg
aaa
icebp
and
popa
mov
adc
adc
sahf
mov
lods
cmc
add
out
mov
andl
in
repz
dec
xchg
loopne
pop
mov
mov
jae
dec
cmp
lcall
jg
pop
push
add
add
push
cld
shll
out
xchg
xlat
push
in
in
add
vpcmpgtw
aad
xchg
rolb
mov
stos
pop
add
jl
inc
fdivrs
jae
mov
or
mov
dec
add
or
sbb
jae
mov
cmp
mov
or
loope
imul
rorl
push
int
cltd
lret
add
ficompl
movsb
xchg
sarl
cmp
in
push
das
jne
stc
scas
sbb
nop
test
dec
loop
jns
ljmp
mov
divl
push
lea
out
jecxz
xor
fsub
imul
add
cmp
add
inc
orl
popf
cmp
pop
or
pop
lock
pop
fs
push
sub
lock
das
xchg
int
pop
xchg
adc
movsl
mov
mov
push
jae
pop
notb
rorl
scas
jne
cmpl
movl
mov
mov
jmp
movl
jae
push
push
call
inc
addl
sbb
mov
xor
mov
negl
sbbl
mov
cmpl
movzwl
mov
mov
jmp
movl
mov
jle
push
push
push
push
push
push
call
subl
xor
add
sbb
mov
xor
addl
mov
jmp
std
fnstsw
pop
sbb
cmpsb
pop
decb
lret
rcll
push
clc
adc
cli
xchg
aam
mov
inc
adc
push
loopne
jnp
sbb
in
stc
add
testl
aam
dec
inc
cmc
ret
lahf
add
loope
cld
cmpsl
addl
sbb
lock
dec
nop
insb
adc
jecxz
push
mov
pop
fwait
or
ja
cmp
adc
mov
push
jp
xadd
mov
or
leave
xchg
roll
push
loop
lods
jl
mov
icebp
mov
pop
or
jbe
pop
ljmp
inc
mov
add
inc
iret
adc
jo
test
movsb
inc
arpl
aad
data16
inc
sarl
roll
gs
pop
js
in
cwtl
pop
aam
mov
lods
movsb
dec
clc
loope
es
cmc
cmpsb
cmpsl
xchg
daa
ret
mov
sub
mov
push
mov
dec
movsb
fnstsw
in
incl
mov
adc
cli
cltd
ja
jp
shlb
pop
jns
ja
cmp
leave
sbb
mov
adc
sub
ficompl
xchg
cmp
xchg
and
fbld
mov
fdivrs
inc
pop
insb
lret
inc
dec
mov
add
les
sbb
cmpsl
movsb
hlt
jo
xchg
lret
call
aad
or
fsub
add
pop
cmc
movsl
mov
mov
mov
pop
outsb
mov
or
or
cmp
and
hlt
fldl
adc
mov
push
movsb
xchg
loope
cmpsb
push
lods
daa
adc
lea
aas
xchg
jmp
xchg
in
aam
lds
test
mov
push
mov
xchg
and
fidivrs
mov
push
dec
cmp
xchg
cmp
repz
inc
add
adc
in
aas
add
mov
arpl
mov
loopne
mov
rcll
andl
dec
jb
adc
inc
cltd
adc
sbb
scas
cmc
jae
je
and
test
pop
iret
lds
sbb
and
fnstsw
fcomp
popf
es
mov
xor
cwtl
fldt
push
adc
push
cwtl
sti
in
aad
sbb
sbb
mov
and
and
and
mov
push
xchg
xchg
js
int3
inc
cmp
pop
lods
adc
xchg
pushf
xor
mov
sub
stc
inc
fs
cmp
aad
jg
pop
adc
sbb
fldenv
lea
fsubrs
xor
nop
push
dec
xor
jge
mov
gs
lods
push
pop
push
shll
mov
push
and
data16
rorl
mov
pop
or
xlat
mov
clc
pop
pop
icebp
xor
movd
scas
and
pop
add
movsl
lock
add
mov
xchg
sar
xlat
mov
gs
call
in
call
cmp
dec
pop
and
inc
pop
dec
movsb
sahf
cld
outsb
inc
pop
mov
and
push
mov
sub
pop
adc
or
fwait
jmp
add
lret
mov
dec
shrb
lock
and
push
cmpsl
inc
push
inc
pop
pop
xor
mov
aaa
mov
mov
mov
push
fs
lret
cmpsl
push
shll
jmp
repnz
aaa
out
lods
add
sbb
adc
mov
sahf
mov
ret
fimuls
lods
inc
test
sub
push
mov
orb
sub
push
daa
hlt
ret
test
stos
ret
adc
in
mov
xchg
xchg
cld
es
cmp
cltd
leave
sub
mov
lea
xchg
movsb
movb
mov
insl
popa
mov
faddl
xor
push
stc
mov
ljmp
mov
cli
cmp
pop
mov
lret
inc
dec
iret
adc
inc
daa
mov
pop
popf
aam
mov
cld
dec
inc
dec
imul
pop
test
movsl
add
adc
dec
xor
aad
mov
ret
dec
xchg
sub
cmp
sbbl
in
int
in
jmp
fs
and
lret
push
sbb
mov
pop
test
cmc
cmp
shll
inc
adcb
jb
gs
pop
mov
icebp
xor
sub
cmpsb
nop
lret
scas
cvtps2pi
fisttpll
adc
mov
xchg
jbe
shlb
bound
testb
rorb
out
arpl
add
adc
mov
es
popa
cmp
inc
xchg
nop
cltd
jmp
popf
imul
dec
or
jbe
stos
test
cmpsb
out
mov
sbb
add
addr16
sub
icebp
insb
jae
insb
ret
or
das
push
inc
test
xor
test
int3
xor
mov
xchg
cmp
pop
mov
cmpsl
lock
xchg
xchg
push
jl
and
insb
inc
je
adc
push
stos
sbb
xor
lods
insl
jne
cld
mov
jecxz
push
in
sahf
mov
and
ret
dec
or
mov
cmc
out
push
mov
lods
jbe
or
or
pop
and
cmp
ret
cmp
subb
jbe
inc
cmp
out
in
pop
leave
jb
xchg
aad
movsl
pushf
cli
mov
icebp
push
dec
xchg
pop
and
and
arpl
fisttpl
pop
dec
mov
mov
rorb
out
ficoms
lock
inc
and
xchg
xchg
faddp
aam
mov
push
lods
roll
mov
inc
mov
push
lock
push
popf
xor
mov
xchg
inc
jno
mov
pop
repz
xor
add
push
sbb
mov
fcompp
sub
ret
dec
lods
jo
enter
add
dec
test
test
and
repnz
out
in
add
mov
popf
push
pushw
jno
mov
or
push
pop
mov
stc
xor
sarb
fsts
jge
in
movsb
negb
aaa
insl
insl
lock
outsl
jg
dec
jbe
dec
sbb
shlb
adc
add
mov
shrd
incl
mov
cmpl
movl
mov
mov
not
jmp
movl
movl
jne
pushl
call
sbb
neg
or
add
or
mov
adcl
xor
shr
mov
xor
or
shl
sub
mov
mov
mov
orl
add
mov
sbb
mov
sub
mov
shrd
or
jmp
je
stos
cmc
sub
inc
lock
fists
clc
adc
jl
inc
sub
add
dec
cld
stc
dec
and
pop
xlat
imul
arpl
in
mov
cld
lock
data16
dec
jbe
push
jb
push
inc
es
or
push
inc
ret
sub
dec
ret
xchg
add
push
push
je
sbb
gs
mov
cmpsl
lods
dec
push
lcall
aam
aaa
and
out
dec
popf
mov
shrb
mov
sub
ja
icebp
ds
lahf
mov
and
lods
stc
dec
nop
mov
push
cmp
cmp
push
push
sbb
in
shufps
xchg
in
popf
imul
dec
test
mov
arpl
sbb
sbb
ret
movsb
or
pop
into
fsubr
fldl
xchg
shlb
jno
lcall
xchg
mov
pop
inc
lods
mov
pop
xchg
push
mov
iret
idivl
pop
mov
test
subb
add
mov
out
shl
sbb
mov
stos
nop
insb
sbb
dec
and
cmp
adc
mov
jnp
xchg
cbtw
sbb
addb
add
mov
push
inc
sub
and
mov
cld
cmpsl
repz
dec
test
and
mov
or
arpl
ficoms
jno
adcl
pop
aaa
das
pop
aaa
fwait
andb
outsl
ja
mov
repz
push
ror
mov
js
sbb
inc
jmp
sub
into
fwait
call
pushf
ja
jge
push
fidivs
or
shlb
dec
fdiv
mov
or
in
sub
aaa
push
js
popa
fs
mov
xchg
int
pop
sub
nop
push
and
out
xor
jno
jbe
shrl
es
xor
jl
pop
mov
xor
test
lret
fs
stc
jge
pushf
and
inc
pop
mov
sub
sbb
fisubl
pop
fcompl
pop
push
lahf
sbb
outsl
loopne
mov
fstpl
inc
lods
xchg
std
out
jns
aas
popl
dec
sbbb
fwait
cli
loop
dec
sub
xor
mov
clc
mov
paddsw
sbbl
mov
pop
hlt
ja
mov
xor
xchg
std
xor
rclb
xchg
xor
es
push
iret
imul
aas
cltd
xor
in
xor
jns
movsl
iret
imul
cli
or
stos
dec
dec
jns
rcll
les
inc
mov
pop
fiaddl
dec
lods
xor
or
xor
out
xchg
sbb
dec
lret
fs
push
je
lahf
cli
jbe
push
icebp
imul
in
andl
inc
mov
mov
jns
inc
ror
mov
cmp
divb
cld
sub
stos
clc
xchg
and
adc
mov
xchg
fisubrl
adc
and
icebp
fidivl
cli
cli
rorb
inc
push
jo
adc
notl
nop
xchg
sub
pop
out
and
shrl
in
add
pop
mov
shl
test
jns
xchg
aam
test
int3
adc
push
jp
movsl
lea
jmp
add
repz
lock
xchg
pushf
fimuls
dec
cs
fwait
inc
jbe
and
jp
lods
sub
or
pop
mov
in
cli
data16
fldcw
push
mov
and
rol
lea
pusha
aam
mov
dec
out
and
inc
and
adc
inc
jg
adcl
stos
cs
dec
test
incl
fiaddl
fwait
push
ds
sbb
dec
cltd
es
and
dec
inc
mov
mov
mov
out
and
jl
repz
rclb
in
cmp
rolb
push
enter
mov
xchg
in
ret
xlat
fs
sbb
outsl
and
stc
cwtl
jno
ja
andl
dec
outsl
jg
inc
xor
inc
mov
pop
mov
fdiv
dec
pop
add
push
sub
adc
mov
loop
pop
fcompl
cltd
ljmp
mov
sbb
jne
and
jo
lods
cmpsl
adc
xchg
data16
xchg
imul
insb
nop
push
test
inc
adc
push
ljmp
int3
push
lods
adc
and
in
popa
in
or
outsb
and
outsl
cmpsl
sub
es
sti
cmpsl
int3
out
sub
fwait
xor
je
sbb
cmpsb
adc
add
call
or
incb
into
subb
cmp
out
int3
pop
clc
mov
mov
out
mov
cmc
adc
adc
cwtl
fimuls
mov
in
lahf
adc
popa
pop
cwtl
inc
fnstcw
movsb
shlb
xchg
arpl
imul
call
nop
mov
sub
fwait
pop
inc
push
or
sub
movsl
xor
mov
lea
mov
inc
inc
or
pop
popf
push
jb
neg
pop
xchg
push
sahf
ss
ja
lea
push
xchg
subb
pushf
mov
test
sub
cmpsl
mov
adc
push
push
cli
cmp
loopne
mov
add
dec
imul
fsubs
fsubp
rclb
negb
mov
mov
enter
sub
popa
outsb
or
js
xchg
cs
insl
ss
pushf
ljmp
add
sbb
or
push
lods
in
and
gs
sbb
in
data16
les
out
or
ss
popa
imul
mov
xchg
pop
or
ss
sbb
hlt
ret
pop
loopne
dec
std
leave
adc
push
sbb
xor
cwtl
fisttps
pop
dec
sub
pop
loopew
jno
repz
and
in
mov
jmp
add
loopne
jnp
cmp
push
sti
flds
xchg
jle
dec
cmp
insb
aam
cld
je
cld
test
jecxz
cld
stos
loopne
rcl
cmpsb
test
push
mov
lret
addr16
inc
mov
xchg
inc
adcl
jne
pop
pop
jae
es
cmpl
movl
movl
mov
jmp
movl
movl
jb
push
pushl
pushl
push
pushl
push
pushl
call
incl
mov
and
mov
xor
xorl
sbb
movzbl
sbb
mov
mov
sub
sub
mov
cmpl
movl
mov
jmp
mov
mov
jb
pushl
pushl
push
push
call
movzwl
xor
adc
add
inc
mov
mov
adc
mov
xor
notl
shl
cmpl
not
mov
mov
jmp
movl
jl
pushl
call
or
xorl
xor
sbb
adcl
movzbl
sub
xor
sbb
or
cmpl
movzbl
mov
mov
jmp
movl
not
jae
pushl
pushl
push
call
mov
sub
orl
adc
neg
mov
or
mov
mov
or
mov
and
mov
notl
shrd
xorl
shr
mov
cmpl
mov
mov
mov
jmp
movl
mov
jl
pushl
pushl
push
pushl
pushl
call
mov
mov
adc
xor
or
sub
addl
addl
mov
cmpl
movl
not
jmp
movl
jle
push
pushl
call
adc
xorl
or
subl
movl
or
add
add
mov
orl
xor
xorl
xor
or
shl
negl
jmp
test
out
pop
mov
mov
popa
popf
sti
pop
aad
adc
push
clc
adc
cmp
sub
and
aad
mov
inc
ja
adc
dec
xor
mov
ficoml
xchg
cltd
js
pop
ror
dec
mov
lret
xor
pop
les
mov
fwait
std
mov
pop
outsb
pop
cld
cmp
test
repnz
inc
pop
fistl
mov
fs
fiaddl
xchg
lea
cmp
outsl
inc
fsubrs
push
inc
inc
rolb
inc
mov
add
adc
adcb
scas
fs
fs
pop
pop
popf
rclb
mov
pop
call
aaa
cmp
aas
imul
adc
fstpl
fs
fwait
imul
xor
sub
mov
clc
push
push
mov
les
imul
ja
cmc
shll
out
sbb
enter
dec
aad
inc
pop
mov
xchg
sub
mov
push
daa
adc
lods
outsl
shrl
fdivrs
mov
pop
sub
inc
lds
fidivrl
xor
jbe
mov
jno
in
xor
cmp
adc
push
iret
xchg
sub
cli
xor
and
mov
es
xor
sar
lea
shrb
xlat
popa
pop
js
cltd
xchg
push
rol
sbb
je
xchg
in
or
cmp
or
pop
hlt
cmc
stos
mov
jae
or
inc
jo
jbe
pop
mov
push
mov
popf
dec
call
and
in
stc
pop
scas
hlt
lods
lods
jg
popl
scas
inc
xor
dec
test
mov
dec
pop
repz
add
orl
imul
mov
lret
jb
pushf
lret
mov
pop
xor
and
sub
xchg
jg
icebp
mov
std
xchg
pop
cmp
mov
cmp
push
push
js
dec
xorb
in
sub
in
or
sub
sbb
int
or
push
fiaddl
jb
inc
icebp
pop
lods
outsb
js
and
mov
outsb
and
pushl
xlat
push
add
sub
clc
xor
adc
in
in
push
lea
pusha
je
bound
aam
enter
or
mov
inc
or
adc
ja
dec
jae
cld
or
pop
or
popf
ss
and
sub
mov
mov
pop
ret
or
jbe
push
jns
insb
fdivl
ss
mov
xchg
stos
pop
pop
mov
data16
adcb
cmpsb
in
ffree
mov
repz
fwait
push
mov
shl
push
into
hlt
xor
jle
add
enter
pop
icebp
loope
pop
pushf
cmp
xchg
mov
pusha
inc
jmp
fs
lea
sub
mov
inc
cmp
add
lock
cmpsb
cmp
cmp
out
jb
sub
inc
pop
pop
pop
sub
iret
adc
push
pop
xlat
sub
aad
ljmp
fiaddl
add
push
push
jle
pop
push
in
sub
inc
loopne
jmp
mov
aas
fs
cmpsb
cmp
jl
test
imul
mov
push
mov
xor
sbb
jg
jle
imul
jb
push
sub
mov
leave
lcall
jp
ret
dec
or
adcl
lcall
repnz
cmp
mov
xchg
cmpsb
mov
lds
enter
nop
lret
int3
test
pop
mov
sbb
xorl
fcompl
decb
xchg
std
out
out
loop
call
sbb
pop
mov
leave
cmp
lods
mov
xor
leave
mov
ret
lahf
arpl
shrl
orb
call
aad
xor
push
push
test
pop
lods
cmc
loope
inc
mov
lret
cmpsl
inc
loop
mov
fcompl
push
adc
mov
jmp
int3
arpl
xor
mov
jl
mov
or
sahf
sbb
push
or
adc
cs
jle
outsb
fadd
jbe
dec
jb
popa
mov
insb
push
cltd
mov
fimull
lret
push
push
daa
rorl
inc
out
pop
fcompl
sub
stos
push
scas
cmp
push
xchg
cmp
push
repz
mov
cmp
sbb
fsub
repnz
push
inc
cmp
mov
xchg
mov
cmpsb
push
xor
xchg
pop
cs
mov
dec
popa
or
push
xor
stos
xor
push
jnp
outsb
sub
das
ja
ret
or
mov
mov
xchg
and
jno
je
mov
cwtl
popf
inc
adc
xchg
lret
and
push
cwtl
call
xor
sub
negl
ja
xchg
les
bound
cwtl
mov
and
sub
test
je
daa
add
add
mov
sub
ret
push
adc
jns
add
push
inc
xchg
dec
loope
xor
mov
push
jmp
mov
test
sub
nop
mov
sub
sub
fs
push
push
dec
push
insb
pop
sbb
iret
push
fadd
jmp
sar
push
sub
in
xor
mov
pop
inc
fmul
dec
icebp
scas
cmp
and
jno
pop
push
inc
and
xchg
fldt
lods
jmp
xor
mov
pushf
pop
cs
lock
dec
xor
dec
shlb
sti
add
out
scas
fimull
test
scas
mov
push
push
jno
testb
out
dec
xor
dec
mov
push
mov
mov
daa
ficoms
mov
jo
pop
test
cmp
sbb
test
inc
mov
push
push
lahf
cltd
test
lods
dec
pusha
inc
into
cmp
pop
les
mov
cmp
loope
push
adcb
movsb
jae
adc
xchg
testl
aas
popf
lds
dec
xor
sbb
sbb
jle
cmp
loope
sub
call
fldl
push
in
mov
sbb
pop
shl
jl
imul
sbb
mov
cmp
jle
and
lea
or
mov
xor
or
sub
mov
subl
shrd
shr
mov
cmpl
mov
movzbl
jmp
movl
jb
push
push
call
mov
xor
sbb
sbb
andl
sbb
sbb
mov
mov
cmpl
mov
mov
notl
jmp
movl
mov
jne
pushl
push
push
push
call
add
mov
or
addl
xor
mov
add
mov
adc
adc
xor
mov
andl
xor
adcl
or
shl
or
imul
mov
mov
addl
shrd
xorl
mov
incl
mov
andl
xor
shr
incl
mov
cmpl
movzbl
movl
mov
mov
jmp
movl
jg
pushl
push
push
call
adc
mov
or
mov
dec
andl
adc
adc
sbbl
mov
xor
or
subl
shl
sub
jmp
jl
mov
xor
fsubp
push
inc
adc
adc
push
clc
adc
xchg
inc
loope
loope
add
sbb
sbb
cmp
sub
mov
cld
aam
lea
loop
mov
test
add
push
cmp
rcrb
sub
cmp
shll
popf
sarl
lea
cmp
testl
dec
xchg
jbe
xor
xlat
iret
aaa
adc
sub
mov
cs
jno
lock
pop
add
mov
pop
xchg
mov
int
fmuls
mov
fwait
add
imul
loope
xor
cmp
inc
stc
sarb
cld
imul
ret
aam
mov
gs
dec
push
or
push
cld
push
mov
and
rcl
cmp
ss
adc
adc
and
xchg
push
xchg
cmpsl
pop
sub
divl
lods
fstl
mov
pop
xchg
loope
mov
sbb
movsl
cmp
adc
mov
xor
adc
and
shl
pop
cmp
mov
ljmp
lods
jmp
lock
and
xor
add
cmp
stos
aas
ret
push
jl
or
jp
cwtl
mov
testb
jb
sub
and
sub
dec
xchg
in
enter
adc
mov
sub
jae
outsl
sub
mov
xor
fcomps
xor
insb
shll
xor
sbb
bound
mov
dec
fidivl
mov
adc
daa
jmp
in
mov
cwtl
mov
mov
cmp
mov
mov
pop
mov
xor
xchg
shlb
ds
mov
mov
insb
push
add
mov
add
pop
adc
sub
stc
addr16
imul
sbb
sbb
add
or
jge
mov
ja
adc
scas
cwtl
mov
lds
nop
dec
les
mov
je
sbb
sbb
call
pop
mov
loope
aad
cmp
pusha
lods
mov
pop
das
cwtl
movsb
pop
enter
push
sti
arpl
and
in
cwtl
mov
fidivl
jl
inc
pop
hlt
sbb
movb
fwait
les
sub
repnz
adc
jb
idivb
xor
insb
add
inc
bound
cld
inc
pop
sbb
sbb
mov
negl
in
mov
xor
movsb
cli
mov
xchg
test
mov
pop
mov
inc
insl
mov
std
das
pop
mov
fsubrs
push
push
mov
stos
adc
fdivp
addr16
xchg
in
in
jbe
in
cmp
sub
daa
ret
rclb
ja
scas
mov
and
mov
add
lcall
and
mov
pop
int
pop
scas
mov
mov
pop
test
ljmp
xchg
data16
dec
mov
sbb
push
xchg
std
scas
scas
adc
add
outsb
mov
adc
ja
cmp
out
lea
sbb
sub
out
ja
dec
inc
or
aad
sub
xchg
popf
pop
dec
sbb
icebp
adc
movsb
push
push
inc
aam
adc
xlat
or
sbb
adc
xor
int
popf
adc
out
pop
inc
mov
xchg
or
and
repz
mov
push
sub
jp
leave
imul
movsl
mov
jns
and
sbb
outsl
cli
push
cmp
mov
mov
hlt
es
lock
xor
roll
mov
xor
in
int3
lds
cmp
sti
es
aaa
lods
insb
mov
cmc
jmp
cmpl
add
adcl
pop
mov
cmp
push
repnz
je
push
mov
sub
inc
pop
inc
and
add
rcrl
jbe
in
test
lea
fidivs
es
adc
adc
sub
xor
test
xchg
rolb
xchg
dec
or
inc
faddp
stos
out
pop
mov
aas
data16
fwait
push
adc
cmp
pop
outsl
jae
sbb
rcll
mov
jecxz
lds
jmp
lds
pop
jbe
subl
ret
xchg
pop
mov
sub
push
out
jo
pop
shlb
movsb
mov
dec
ss
add
inc
mov
iret
xor
imul
fstpl
sbb
cmpsb
out
loop
lret
aas
mov
js
inc
in
clc
lret
push
in
xor
test
xchg
cmp
cmp
sub
int3
loop
cmp
mov
xor
xchg
movsb
and
jnp
mov
xorl
add
push
rclb
mov
lods
jb
popf
repnz
sbb
cmp
pop
and
adc
frstor
pop
imul
add
sub
ret
fnstenv
inc
inc
fsubp
cltd
cli
jno
js
push
xchg
data16
jnp
sub
inc
mov
add
cmp
loope
lds
imul
pop
sbb
jns
stc
push
jns
xchg
pop
push
pushf
push
in
push
push
cltd
jecxz
xchg
xchg
adc
push
fistpl
jge
inc
mov
les
xor
sarl
jne
jle
fcom
rcl
lds
aad
mov
cld
pop
lods
stc
jno
push
scas
mov
fiaddl
or
push
sbbl
shlb
enter
gs
cmpb
insb
fstps
mov
mov
lds
loope
iret
xor
jmp
or
pop
push
sbb
shll
cmc
sub
mov
insl
test
int3
lds
xor
lock
push
ret
push
lahf
cmp
push
clc
stos
shll
adcl
out
sbbl
repnz
push
cwtl
frstpm(287
mov
mov
lret
sub
ret
push
rcrl
inc
pop
add
mov
std
cmp
lods
sbb
adc
dec
jbe
sbb
inc
notl
leave
add
xor
int
mov
movl
cmp
mov
movl
jg
or
mov
orl
mov
shrd
xorl
mov
mov
subl
xor
shl
addl
xor
subl
or
addl
shr
mov
mov
sbb
mov
and
mov
shrd
shr
mov
and
mov
mov
xor
subl
xor
andl
jmp
pop
leave
sti
subl
xlat
or
mov
adc
clc
adc
cmc
or
sbb
scas
sub
xchg
clc
scas
lock
movsb
mov
int
pop
mov
cwtl
sub
mov
out
mov
hlt
push
out
arpl
mov
inc
dec
mov
xchg
loopne
outsb
mov
or
xor
sarl
sbb
xchg
and
bound
mov
cmp
mov
adc
in
sub
daa
xchg
cmp
and
int3
test
aaa
dec
pop
xor
dec
cmp
ljmp
mov
call
imul
push
into
filds
pop
sub
sub
sbb
mov
subl
or
repnz
out
scas
fadd
push
jae
shrb
xchg
int
ljmp
arpl
cwtl
add
push
out
push
xchg
idiv
xchg
in
inc
iret
jns
mov
rcrl
cmp
gs
mov
inc
scas
sbb
push
insl
lret
bound
rclb
mov
imul
popf
ret
pop
xor
jmp
dec
add
testl
shl
out
ficompl
adc
push
pop
rolb
sbbb
dec
test
cmp
pusha
outsl
sbb
mov
shlb
jmp
sub
mov
in
push
aad
push
dec
aaa
into
mov
lods
mov
add
fdiv
sbb
test
sahf
pusha
cs
xor
sahf
and
xchg
out
push
scas
ljmp
add
jae
jp
and
decb
xchg
inc
and
jge
adc
cmp
lods
scas
adc
mov
mov
call
test
jp
cmp
fdivrs
pop
adc
xor
aad
loope
loop
js
sbb
dec
nop
js
mov
dec
lock
jb
movb
mov
imul
mov
scas
cwtl
loopne
js
mov
and
mov
outsb
divb
aad
shl
push
xchg
arpl
mov
xor
xchg
jnp
movsb
rcrb
inc
in
fdivrl
cmp
fs
xor
jae
push
gs
adc
jp
jmp
push
mov
lahf
popa
mov
inc
nop
pop
gs
push
repnz
ja,pt
sbbb
mov
and
cwtl
xor
jno
pop
jge
inc
fst
dec
out
fs
js
push
or
or
cmp
mov
leave
xor
or
dec
jp
fistps
inc
test
addr16
push
pushf
hlt
loopne
fwait
or
push
test
cmp
icebp
dec
xchg
stc
int
jmp
pop
pop
icebp
pop
xlat
jl
fsubrl
sbb
jbe
aad
sahf
nop
xor
push
call
fisttpll
pop
pusha
ds
adc
sbb
in
andl
jno
ja
jns
pusha
ds
ss
hlt
pop
stc
mov
cmc
dec
cmp
mov
stos
push
imul
cmpsl
int
lea
mov
mov
jg
mov
fmulp
mov
pop
push
mov
loopne
pop
push
xchg
out
outsl
js
shll
frstor
fidivs
fwait
scas
mov
lahf
and
push
clc
iret
imul
and
les
xchg
lret
pop
mov
pop
scas
test
push
xchg
lret
aad
out
js
or
sbb
std
jge
adc
pop
or
mov
push
andl
and
cwtd
push
pushf
mov
je
ljmp
pop
xchg
jle
enter
dec
push
call
popf
sbb
jns
adc
cwtl
jae
push
cmp
insl
xchg
pop
dec
test
into
sahf
dec
xor
push
mov
rorb
daa
leave
outsl
mov
inc
jae
pop
idiv
add
repz
rcll
outsl
inc
testb
jmp
adc
pop
adc
les
imul
inc
test
ret
cltd
loope
popf
in
cmpsb
mov
leave
inc
inc
fisubrl
lahf
call
xor
mov
sub
test
andl
out
pop
push
fst
aad
enter
nop
sub
adcb
jbe
xchg
xlat
aad
mov
mov
fs
out
cmp
je
inc
outsl
outsb
mov
enter
pop
sarl
inc
popf
test
mov
push
jbe
mov
adc
bound
cwtl
bound
in
push
sub
sbb
ja
mov
sbb
test
lahf
cmc
out
leave
xor
xchg
mov
inc
mov
mov
hlt
inc
inc
xchg
push
pop
fistpl
sbb
pop
stc
sub
xlat
push
pushf
mov
test
xor
hlt
arpl
stos
xor
xor
cmp
pusha
aad
pop
adc
sbb
sbb
push
arpl
mov
push
jg
dec
push
xor
test
push
jae
mov
mov
les
and
scas
mov
add
fldl
leave
xchg
jp
dec
ret
fs
in
or
fisubs
xor
xor
push
xorl
pop
cltd
add
cmpsl
mov
dec
lods
inc
das
movb
push
cmp
mov
ficoms
cmp
jns
pop
adc
push
shll
pop
jne,pt
in
jnp
adc
mov
push
ss
scas
sbb
scas
sbb
sub
fcompl
imul
std
mov
dec
inc
int
rep
mov
int3
pushf
bswap
push
mov
icebp
ret
fsubl
sbb
inc
imul
fisttpll
jo
test
xor
sub
mov
insb
push
out
rcll
xchg
outsl
sarb
add
jg
sti
sarl
or
adc
sub
std
xor
xor
sub
das
testl
pop
jmp
ds
popf
mov
into
cmpsb
sbb
cmp
add
iret
and
mov
outsl
out
lahf
add
push
andl
sub
mov
mov
outsb
mov
jl
movsb
xchg
mov
lea
pop
pop
aad
loopne
ljmp
andl
imul
jmp
mov
or
push
and
ljmp
inc
xchg
jge
adc
clc
adc
rorl
adc
cwtl
icebp
test
push
inc
or
and
xchg
xchg
pop
call
pop
sbb
subl
decl
mov
enter
inc
mov
sub
lock
jo
sbb
mov
cmp
insb
aaa
pop
mov
sbb
sarl
aaa
out
lods
adc
mov
ds
arpl
xchg
lret
mov
mov
add
inc
xchg
insb
in
mov
shrb
arpl
in
bound
or
adc
mov
pop
mov
mov
sub
fdivr
cmp
cmc
in
push
ja
mov
fstps
std
ret
sbb
jg
add
std
push
lock
lods
push
popa
repz
stos
mov
mov
push
mov
shrl
clc
jmp
fsts
mov
and
jmp
sti
pushf
movsl
and
setl
sbb
xlat
lds
mov
hlt
sbb
push
jo
lods
sub
shlb
pop
jbe
aas
repnz
mov
mov
and
loope
mov
mov
pop
imul
xorb
shlb
int3
test
push
xchg
lret
xchg
sbb
mov
jno
xchg
mov
xchg
inc
and
add
inc
xchg
mov
arpl
sub
dec
sub
mov
push
cmpl
mov
jmp
mov
pop
cmp
pop
jnp
in
aas
or
and
push
or
pop
and
in
inc
xchg
std
rcrb
lret
es
shll
adc
nop
rcrl
xchg
jg
pop
inc
jns
daa
int
pop
fcmovbe
mov
add
and
pop
out
cmp
int
push
jl
lret
loopne
sub
inc
dec
jge
push
mov
mov
jge
int3
ds
fs
add
dec
adc
pop
push
jne
stos
cmpsl
mov
addr16
ljmp
cmp
pop
cmp
hlt
std
jp
shlb
adc
adc
sti
and
dec
out
and
xchg
ljmp
fisttpll
mov
mov
inc
jl
mov
pop
int
and
shrl
in
fstpl
divb
stos
add
mov
leave
repnz
int3
sub
popf
jne
aam
push
into
or
lcall
std
mov
push
outsl
mov
mov
insb
sub
test
shrl
inc
in
xchg
mov
std
adc
out
xchg
ljmp
loop
in
daa
mov
adc
pop
loope
cmpsb
stos
adc
pop
fistps
xor
ret
test
lcall
mov
mov
jne
test
lock
pop
ja
mov
or
sub
mov
fadds
inc
cld
and
jbe
fidivrl
outsl
or
mov
divl
popa
call
das
dec
or
sbb
addr16
sbb
nop
insb
dec
popf
loopne,pt
cwtl
sarl
call
xchg
dec
pusha
add
xchg
push
add
sbb
jg
mov
lcall
lcall
rcll
or
add
cwtl
ret
es
add
pusha
in
sahf
orb
ror
loope
add
pop
movsb
jle
not
jg
repz
insb
xlat
pop
fcoml
shll
lods
fs
mov
and
mov
je
push
sub
xor
add
aad
pop
push
sbb
mov
stos
bound
or
nop
insb
popa
mov
mov
out
and
fwait
imul
pop
out
gs
xlat
insb
fmuls
mov
mov
int
inc
rorb
hlt
and
inc
jnp
inc
pop
sbb
and
fildll
cld
iret
in
mov
or
jno
mov
and
or
or
and
cmp
adc
push
xchg
push
jge
jne
mov
add
test
inc
pop
jg
mov
xchg
xor
fcoms
movsb
in
xlat
mov
mov
sbb
and
xlat
adc
mov
or
mov
add
sub
mov
flds
jb
pop
pusha
pop
push
add
pop
lds
lods
iret
push
pop
cmpsl
xchg
fiadds
push
ja
sub
rcl
mov
std
fmull
dec
lret
iret
mov
sbb
lcall
dec
add
or
out
aad
adc
lahf
pop
mov
push
loope
test
icebp
sbb
xchg
mov
push
test
dec
ja
or
jns
or
outsb
xchg
pop
dec
daa
sub
jns
sti
das
outsb
push
push
icebp
jmp
pop
dec
sbb
les
fwait
add
jmp
and
pop
sub
ljmp
out
push
sar
mov
xlat
sub
mov
ret
and
cmp
out
mov
cld
dec
pop
sub
sbb
xor
jnp
cmp
adc
repz
in
add
push
push
sub
hlt
xor
je
and
rcr
lahf
or
fimuls
lcall
xchg
vpmaxsw
xor
cmp
rcrl
sbb
je
jle
adc
push
ret
sbb
sub
je
cmpsb
int3
repz
cs
lock
rep
adc
mov
arpl
int3
mov
xchg
fwait
inc
xchg
ret
adc
mov
adc
out
pop
sbb
and
shr
add
mov
xchg
mov
fiaddl
fiadds
cmp
lret
inc
add
or
pop
jp
cli
xor
cmp
cld
or
sbb
cmp
pop
pushf
shl
cmc
js
lock
test
and
ja
push
xchg
pop
les
mul
jnp
pop
or
call
and
sahf
adc
dec
ds
mov
xchg
lahf
inc
movsl
nop
pop
call
pusha
cltd
rorl
mov
xor
xor
push
cltd
jno
dec
scas
mov
insb
mov
jmp
sub
jmp
mov
xorl
mov
orl
shrd
mov
orl
jmp
or
dec
addr16
adc
push
shl
aam
adc
push
clc
adc
sub
dec
push
cmp
imul
xchg
out
and
xor
and
mov
sarb
stos
push
inc
pop
xchg
sbb
or
rol
enter
nop
in
pop
sbb
pop
in
pop
cltd
ds
shll
pop
mov
les
outsl
roll
or
adc
out
ficompl
imulb
iret
imul
or
jp
push
sbb
xor
jg
nop
leave
mov
add
add
movsl
orb
in
dec
loopne
in
inc
or
sbb
jmp
sub
pop
out
jnp
stc
std
mov
xchg
cmp
jnp
jb
jge
xchg
out
repnz
jno
psllw
lret
jne
js
ljmp
mov
test
mov
dec
sti
call
add
cs
ffreep
popa
lods
xor
call
and
ret
jmp
out
mov
xlat
sbb
or
sub
daa
cmp
cmp
fldt
cmp
ljmp
pop
in
sub
lds
cmpsb
fistpll
xlat
stc
jno
cs
aad
sbb
adc
add
jl
push
int3
outsb
add
mov
shlb
call
push
add
sbb
jns
loopne
add
sbb
inc
push
rcrb
into
sbb
cmp
push
jl
dec
inc
sbb
jp
nop
mov
mov
adc
lods
shll
call
jl
sub
fldenv
loope
dec
in
rolb
push
or
out
iret
movb
adc
rorb
sbb
imul
dec
fyl2xp1
xchg
or
push
and
xchg
js
ss
jae
mov
in
mov
cmp
jb
lods
mov
rorl
data16
mov
cmp
xchg
cmp
xchg
pop
ja
mov
push
in
cmp
in
or
insb
das
daa
push
xchg
pop
inc
rcrl
or
mov
push
sbbl
mov
mov
mov
add
mov
sti
mov
add
testl
add
fidivrs
subl
in
sbb
sti
mov
in
in
or
pop
lea
iret
dec
ja
push
cltd
push
aaa
cs
bound
test
lret
sbb
or
push
cmp
jne
jae
movsl
xchg
mov
testb
mov
pushf
scas
xchg
sarb
push
sbb
and
es
pop
popa
mov
lods
xchg
adc
lock
pushf
mov
jg
int
notl
into
push
cmpsb
js
or
outsb
test
xor
xchg
push
add
mov
cltd
or
jne
addl
mov
lret
cmpsl
loopne
cmp
add
mov
mov
scas
call
mov
daa
pop
add
mov
cmp
out
mov
repz
out
mov
mov
lods
and
fisubl
test
insl
mov
pop
jbe
mov
cmc
stos
stos
roll
lret
clc
fld
mov
push
jg
lods
mov
cmp
pop
test
fdiv
imul
mov
adc
fdivrl
shrb
inc
xchg
es
hlt
movsb
lods
adc
mov
andl
int3
or
imul
inc
es
imul
int3
sub
add
cmp
adc
mov
outsb
cld
adc
gs
rcr
testl
adc
fisubl
lea
stc
shl
xchg
mov
push
pop
ficoml
mov
xor
and
push
imul
divl
sbb
pop
lret
clc
imul
out
imul
popf
nop
push
push
stc
ret
push
mov
mov
pop
pushf
movsl
fwait
mov
xorb
pop
sti
pop
clc
js
push
dec
xchg
rorl
push
sub
push
xor
lock
test
shl
scas
aam
add
pop
xor
enter
je
mov
inc
xor
addr16
iret
sti
mov
mov
adc
pop
aam
mov
leave
mov
das
or
pop
shlb
cld
das
popf
rol
fistl
repnz
int3
ds
xchg
lcall
aas
or
inc
push
and
js
add
popfw
scas
cld
pop
pop
and
pop
xorl
daa
xor
mov
pop
lahf
bound
pusha
out
pop
mov
push
aad
xchg
mov
out
mov
dec
pop
push
mov
cli
mov
cltd
add
jns
jge
cmpsl
jl
shld
test
xchg
jecxz
inc
dec
sti
shll
pop
pop
push
mov
sub
mov
jns
xchg
dec
ja
mov
xlat
scas
mov
leave
stos
aas
nop
and
mov
loope
pop
dec
leave
push
call
shld
mov
das
pusha
fnstcw
fiadds
adc
aas
je
cmc
mov
fiadds
dec
adc
xchg
ret
pop
cld
aas
cmpsb
jp
mov
add
fnstsw
notl
mov
push
test
mov
push
loope
cmp
inc
add
icebp
inc
clc
ds
pop
pop
or
mov
sbb
cld
leave
fs
cmpsb
jnp
sub
movsl
and
jnp
dec
fadds
mov
add
ret
push
scas
jb
push
clc
test
xchg
adc
lods
cmc
inc
fidivrl
xchg
sbb
mov
inc
or
jle
dec
mov
adc
sub
xchg
xchg
adc
inc
pop
dec
je
sbb
mov
mov
xchg
insb
mov
cmp
jbe
sbb
jne
and
cmp
mov
xlat
and
pop
loopne
and
rcll
imul
mov
sahf
sub
cltd
nop
jne
jge
or
lea
mov
cmp
or
add
pop
and
mov
dec
or
add
mov
lds
xor
inc
mov
sub
repnz
scas
out
cmc
mov
enter
and
and
imul
jns
xchg
inc
inc
xchg
mov
push
addl
xor
orl
shl
xor
orl
or
shr
xorl
mov
sub
mov
mov
mov
shrd
shr
jmp
ljmp
sub
pushf
addr16
fists
clc
adc
dec
je
sub
test
sub
out
inc
mov
mov
popa
arpl
rorb
fwait
and
ret
scas
cmp
cwtl
add
dec
push
push
inc
neg
andb
stos
xor
mov
outsb
aaa
out
adc
fists
add
iret
imul
outsl
jecxz
mov
push
sub
das
sahf
mov
mov
mov
and
iret
mov
jle
loope
jbe
lods
out
xor
movsl
cmp
adc
stc
scas
xchg
jnp
push
inc
and
xchg
jl
lea
sbb
lcall
imul
mov
add
sub
xchg
daa
lahf
mov
or
cmp
fistpl
xor
pop
mull
add
xlat
mov
pop
shrl
in
hlt
jmp
jne
adc
frstor
sbb
hlt
mov
js
pop
sarb
inc
fsub
iret
add
dec
cmc
pop
stc
adc
ret
bound
clc
inc
sub
mov
xor
int3
add
sbb
inc
das
in
pop
push
lret
mov
rorb
xchg
mov
sub
in
pop
test
mov
ja
pop
cld
cmp
adc
push
pop
stos
divb
sbb
sub
and
lcall
dec
scas
jno
jnp
incl
inc
addb
push
cltd
and
in
push
cmp
push
test
jecxz
pop
imul
jbe
dec
inc
mov
arpl
jecxz
es
mov
jle
adcb
xchg
dec
dec
jmp
push
ss
cmc
and
insb
and
mov
jl
repz
jmp
aam
and
out
gs
in
rorl
pop
add
mov
and
or
and
scas
scas
loope
push
popa
push
xchg
xor
je
xchg
cmp
aam
aaa
bound
push
sbb
add
ror
int3
sbb
fbld
lahf
lahf
jae
add
movsb
ret
push
mov
out
ja
nop/reserved
testb
jnp
mov
sub
dec
addr16
dec
repz
sub
mov
outsb
dec
lcall
jae
cmc
add
mov
sub
lret
ds
jb
cltd
addl
xchg
notb
pop
cmp
in
xchg
fimuls
cs
xlat
push
lahf
int
sub
dec
ss
adc
sub
pop
cmpsl
movsl
out
popa
ds
pop
dec
mov
dec
mov
add
ds
rclb
add
stc
add
out
push
pop
xlat
cmp
addr16
xlat
in
hlt
jns
movsl
testb
pop
cmpsb
pop
movsl
xchg
adc
mov
outsl
xlat
sub
inc
and
fcoml
jbe
sar
jns
or
lds
in
push
lret
mov
imul
jae
dec
push
cmpsl
dec
testb
cmc
lret
mov
adc
xor
inc
xchg
push
mov
fcos
mov
cmp
xchg
lds
loop
addr16
icebp
cmp
test
jnp
repnz
mov
imull
pop
stos
push
jecxz
lcall
jae
and
movsb
loop
inc
ret
sub
fwait
insl
adc
pushf
add
or
dec
jno
xchg
mov
add
stos
pop
lds
stos
out
jmp
mov
xchg
mov
mov
add
ss
pop
add
jb
add
fcompl
jp
sub
sbb
mov
jle
inc
imul
xchg
mov
jle
mov
mov
add
imul
jle
add
lods
xor
mov
iret
movsl
xor
movsb
mov
jmp
mov
inc
pop
xor
or
xchg
and
jne
xor
cwtl
scas
xlat
mov
inc
mov
sub
jns
nop
and
or
jne
xchg
mov
dec
jle
scas
adc
sub
in
mov
jno
pushf
or
mov
xor
lods
hlt
push
add
mov
inc
out
imul
leave
negb
inc
mov
pushf
ret
outsb
inc
insl
outsl
movsb
dec
and
stos
xor
cli
test
lcall
push
outsl
fildl
dec
movsl
xchg
leave
js
out
mov
pusha
jbe
xchg
cs
sub
aam
imul
outsl
ljmp
lret
pop
jmp
and
adc
mov
xchg
jb
xor
ljmp
cltd
sub
loopne
xor
lods
mov
cmc
test
push
insw
cmpsl
mov
in
mov
push
dec
int
cmp
push
push
dec
inc
pop
outsb
pop
sub
test
imul
stc
sbbl
pop
out
mov
push
and
mov
fs
pop
mov
jno
cltd
inc
mov
lds
inc
cld
adc
es
and
int3
pop
loopne
cmpb
out
int
mov
sbb
bnd
add
xor
sub
cmp
jl
adc
and
call
push
sub
loop
inc
cmp
shrb
jge
mov
push
push
mov
xor
pop
xchg
in
or
push
out
add
cmp
pop
std
push
sti
out
dec
jg
xchg
mov
cmp
mov
lret
in
fcom
pop
pop
ss
mov
hlt
movsb
cmp
and
dec
adc
push
mov
in
out
add
adc
jmp
mov
mov
push
mov
xorl
cs
lcall
or
lret
jl
mov
push
xchg
cld
ds
dec
adc
mov
xor
aad
loop
push
adcb
ret
add
adc
outsl
add
mov
inc
jg
lock
iret
inc
sti
in
dec
sub
fnstenv
xor
inc
or
mov
mov
aas
jmp
into
test
sub
inc
sbb
fisttpl
fcompl
sbb
fistpll
dec
js
dec
in
adc
mov
xor
add
sub
mov
mov
xor
xor
or
shl
add
add
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
movl
mov
mov
movl
mov
movl
mov
movl
mov
mov
mov
shrd
shr
mov
mov
jmp
out
add
and
xlat
es
test
inc
ss
arpl
push
clc
adc
mov
shrb
ja
in
aaa
test
push
inc
sbb
push
sbb
adc
daa
inc
in
std
mov
and
lret
inc
cmp
stos
xchg
add
add
cmp
jl
data16
cli
lahf
lret
sahf
push
mov
xchg
inc
stos
mov
iret
dec
dec
out
pop
fdivs
movb
call
sarb
inc
out
aad
xor
mov
ret
mov
mov
mov
pop
mov
into
xor
out
xchg
push
xchg
popa
gs
mov
add
cmc
insl
mov
lcall
and
shll
stc
mov
push
jae
iret
push
divl
loopne
push
pop
xor
out
int
lahf
xchg
or
mov
xchg
jp
xor
pop
jle
and
mov
pop
loope
pop
aad
inc
push
jl
xor
adc
jmp
xchg
sbb
fbld
pop
adcb
cwtl
insb
shlb
or
sbb
add
sti
sub
popa
push
call
out
data16
pop
test
push
rcll
les
xchg
insb
mov
rclb
mov
test
ds
insb
jge
sub
and
mov
push
aas
lock
push
pop
stc
in
and
enter
xorb
cwtl
aam
xchg
adc
xor
imul
pop
in
ja
cmp
in
loope
push
sbb
int
outsl
push
movsl
pop
fdivs
pusha
xchg
xor
inc
mov
cmp
out
push
in
sbb
or
adc
testb
repz
bound
je
mov
xchg
mov
repnz
add
pop
cmpsl
les
in
jne
sub
out
sub
lock
sti
stos
jns
adc
lahf
mov
push
cmp
mov
push
fwait
es
les
push
dec
je
add
cmp
mov
push
xor
out
cmc
inc
and
mov
inc
divb
lcall
fistps
mull
das
scas
inc
in
sub
sbb
subl
pusha
cmp
push
loop
std
mov
sahf
daa
xchg
xchg
sub
pushf
call
rcl
fidivrl
dec
orl
lret
cmp
sahf
mov
add
scas
shlb
test
sbb
pop
cli
lea
jb
out
scas
xor
lret
jbe
shll
sti
dec
repnz
cmp
in
lods
xor
out
mov
mov
lods
inc
or
fwait
lcall
nop
pop
pushf
int
sti
pop
outsb
fwait
jg
subb
push
adc
xsha256
cmpsb
xchg
aas
mov
jecxz
jmp
test
mov
sbb
jb
pop
fsubs
stos
popa
xchg
outsb
sub
or
cmpsl
push
pop
dec
mov
jl
mov
push
jbe
and
jns
inc
cmpsl
jb
outsb
mov
out
lcall
dec
bnd
fld
sarl
xchg
push
sbb
daa
cmp
popa
ror
jl
bound
or
subb
negb
mov
fists
lret
ds
mov
divb
dec
mov
mov
hlt
stos
xor
rcll
xchg
sub
icebp
cmp
cmpsb
repnz
scas
imul
call
push
sub
and
sbb
sti
scas
lods
ds
popa
dec
adc
push
mov
adc
mov
ret
cmp
dec
lret
add
xor
inc
add
mov
inc
fists
mov
and
push
dec
lahf
test
push
xchg
add
and
mov
popa
mov
mov
cmp
loopne
pop
repnz
mov
mov
in
lret
repz
push
xor
int
dec
dec
loop
gs
fistps
pop
push
lret
sbb
enter
rol
testb
mov
leave
cmp
jnp
adc
rorl
dec
add
jno
loop
mov
mov
and
insb
sahf
pushf
scas
or
scas
pop
xorb
adc
fwait
cmc
stos
or
push
movlps
aam
dec
leave
into
and
cmpsl
adc
fadds
xchg
cs
out
loop
jle
les
shll
inc
out
mov
scas
xor
inc
inc
jg
lods
test
mov
int
push
push
cmpsl
mov
mov
out
jne
mov
outsl
pop
in
mov
mov
jo
dec
xchg
xor
adc
and
mov
add
and
pop
cmpsl
or
repnz
jle
gs
xor
push
iret
pop
push
push
mov
push
cli
mov
pop
mov
pop
xchg
add
shl
enter
icebp
movsl
cld
dec
sub
js
push
mov
in
jb
cmp
mov
pop
mov
mov
ja
sbb
jnp
cmpsb
push
or
mov
negb
aas
sbb
push
imul
and
ja
adc
mov
push
sbb
mov
or
xchg
arpl
mov
sbb
gs
movsb
nop
pop
mov
sub
pop
pop
push
enter
mov
mov
outsb
cmp
fistpl
mov
mov
xlat
and
push
mov
push
fwait
pop
mov
jge
mull
xor
xchg
imul
jne
out
xchg
cmp
imul
insb
xchg
or
jecxz
cmp
je
and
mov
dec
xchg
repz
pusha
imul
push
scas
push
mov
into
lcall
pop
push
sub
push
sub
aad
mov
std
cmp
jle
inc
fldl
das
test
inc
int3
pop
in
out
mov
pop
cmp
dec
xchg
push
xchg
pop
sub
dec
lock
arpl
in
pop
jle
js
lret
inc
mov
stos
and
cmp
fdivrp
mov
cs
scas
xor
aas
inc
mov
ss
inc
adc
out
and
push
fbld
xor
adc
pop
mov
cltd
inc
pop
or
lock
pop
cmp
stos
popf
inc
ja
stos
addr16
xchg
mov
mov
sti
out
out
idivl
add
loope
xor
or
lea
mov
mov
mov
shrd
shr
mov
mov
shl
mov
xor
jmp
inc
mov
mov
push
incl
xchg
push
adc
push
clc
adc
mov
xor
jmp
push
es
jge
cmp
jbe
sub
ljmp
scas
sti
ss
cmpsb
mov
enter
outsb
ret
xchg
inc
pop
ja
jne
in
mov
sbb
or
or
mov
in
ja,pn
in
pop
icebp
ret
leave
and
adc
adcl
mov
push
mov
hlt
ss
mov
movsb
sub
hlt
cmpsb
pop
iret
jns
mov
dec
es
outsl
push
cs
xchg
test
orl
clc
push
sbb
push
pushf
mov
sbb
add
in
nop
and
rcrl
adc
mov
mov
cltd
popw
push
mov
push
dec
pop
lods
stos
push
add
js
xor
out
iret
push
cmc
mov
stc
pop
bound
mov
inc
push
xlat
test
cmp
dec
mov
cmpsb
fcoml
jg
decl
data16
test
aad
in
ds
add
mov
roll
add
jbe
aam
mov
sub
sbbb
sub
adc
mov
jno
xchg
daa
push
popa
out
push
push
xchg
xchg
or
aas
fcmovu
cmpsb
pop
aam
mov
fadd
inc
or
mov
mov
rclb
add
idivb
cmp
xlat
xor
mov
inc
scas
mov
in
lods
int3
mov
je,pn
je
out
adc
mov
sub
popa
inc
adc
cmp
sbb
psadbw
fdivp
sub
std
xbegin
xor
leave
stos
mov
rorb
js
mov
rorb
mov
cmpsb
inc
xor
mov
into
dec
notb
and
test
and
push
mov
test
and
pop
jo
and
cltd
dec
cmpsb
inc
mov
mov
mov
ljmp
lea
cwtl
add
pop
mov
aam
loope
shlb
mov
xchg
inc
pushf
int3
xlat
iret
cltd
insl
cmp
fildl
ljmp
lahf
xorl
test
pop
sbb
dec
xchg
xchg
ret
adc
cs
into
fadd
xchg
sub
mov
addr16
xor
mov
es
mov
roll
mov
pop
sub
jae
das
mov
ljmp
jle
sub
sahf
faddl
bound
cmpsb
sbb
xor
sbb
pop
xchg
popa
out
iret
xor
and
mov
inc
stc
repnz
ret
jb
adc
or
test
mov
sbb
xchg
xchg
pop
std
jge
and
dec
pop
sbb
icebp
fdivp
and
int3
das
mov
das
and
fiadds
sbb
add
mov
sbb
adc
push
sbb
and
push
jae
mov
mov
mov
inc
push
andb
pop
ljmp
loope
xchg
fsubs
jg
pop
dec
or
sub
fsubr
push
fwait
add
inc
and
fstl
inc
xchg
inc
pop
pusha
iret
push
sbbl
inc
push
ds
sbbl
pop
in
std
sub
repnz
xchg
cmpl
xor
xchg
dec
loopne
mov
push
push
scas
push
outsb
sahf
repnz
insl
cmpsl
aaa
adc
int
imul
adc
mov
scas
pop
pop
jno
test
pusha
repnz
mov
cmp
scas
bound
cmp
xor
loopne
es
cmp
sub
scas
jecxz
or
jg
pushf
ds
mov
or
aam
adc
inc
or
xchg
jp
jmp
out
cld
mov
imul
xchg
sahf
inc
mov
jmp
xchg
cmp
bnd
pushf
mov
mov
lea
insl
jge
sahf
lahf
jl
pop
popf
dec
xorb
imul
cmpsb
ss
dec
pushf
dec
dec
lock
mov
sti
mov
adc
push
orl
movsl
xchg
shlb
loope
loope
mov
mov
mov
fcomip
xor
ret
and
push
test
push
mov
fistl
mov
jge
fldt
in
loop
mull
ficompl
icebp
int
std
inc
pusha
cmp
xor
adc
adc
and
mov
ret
mov
push
xchg
ja
lock
ret
jp
fdivrs
adc
leave
sub
xchg
adc
mov
mov
scas
cs
bound
hlt
cld
and
ja
jge
ds
sub
and
jo
std
jae
xor
fimull
lcall
fs
shr
add
or
call
sbb
sarb
nop
adc
dec
push
mov
mov
jle
push
adc
pop
cwtl
jo
bnd
sub
fisubrl
ret
or
push
add
popa
adc
movups
or
fdivrs
aad
and
lea
xchg
imul
dec
or
adc
or
and
notl
mov
add
sub
add
jecxz
xchg
lahf
sub
jo
notb
dec
jle
int3
push
lcall
inc
ret
ficomps
inc
mov
jle
dec
mov
or
ss
xchg
fstpt
inc
jecxz
mov
setl
adc
popf
aam
sar
ss
adc
cmp
movsb
cmp
js
dec
xor
loop
add
decb
jbe
into
or
sbb
iret
repz
add
int
jmp
sbb
inc
and
push
jae
out
jo
in
xchg
out
lahf
pop
xor
adc
inc
jnp
pop
jne
inc
loop
push
xorb
stos
test
mov
mov
or
sbb
inc
mov
jmp
std
pop
jb
cmpsb
scas
dec
into
aas
cwtl
iret
shl
jnp
lret
sbb
mov
push
dec
fcoml
xlat
imul
js
mov
mov
pop
iret
cmpsl
cwtl
sti
outsb
xchg
loopne
inc
fmull
je
push
shl
lret
jbe
es
popf
shll
mov
dec
lods
aaa
pop
mov
aam
rolb
pop
adcl
in
popf
inc
sarl
mov
pushf
xor
or
mov
jmp
add
mov
sbb
dec
ss
add
inc
adc
push
clc
adc
insb
and
scas
adc
jg
jo
daa
sbbb
pop
push
pop
outsb
fcoms
adc
mov
js
mov
pop
sub
adc
lock
sub
adc
push
std
cld
fstl
mov
int
les
add
out
xor
mov
jg
pop
add
jle
ret
cmc
pushf
or
xor
pushf
lock
mov
sbb
sbb
fnstcw
push
jl
mull
push
sub
and
shlb
in
jns
xor
out
in
dec
mov
dec
lods
or
sub
aam
lock
scas
sub
xor
imul
adc
adc
or
shrl
cmp
cmp
out
add
std
pop
fistps
pop
add
sahf
in
leave
cmp
fcoms
xor
pop
mov
inc
ljmp
loop
rol
adcl
mov
insl
das
les
stc
and
mov
ret
pop
push
cmp
adc
fld
sbb
cmp
adc
sub
sahf
sahf
mov
xchg
cmp
dec
sarb
sbbb
inc
sbb
shll
fsubl
hlt
sti
in
jne
mov
cmp
imul
test
push
xchg
cmp
and
xor
sub
cmpsb
ficoms
fcompl
mov
jp
pop
ret
pop
adc
or
int3
mov
popf
push
hlt
pop
shr
loope
push
mov
loope
aaa
mov
hlt
pop
fdivs
pop
mov
mov
sbb
stos
add
jp
inc
xor
pop
xor
insb
or
fmul
sbb
lret
imul
jge
inc
dec
lahf
ficoms
sub
mov
or
lahf
mov
sbb
xor
inc
inc
mov
push
xlat
cwtl
push
or
test
std
sub
adc
mov
mov
out
and
mov
sub
andl
frstor
pop
or
mov
pop
smsw
les
insb
add
lock
push
fadds
mov
inc
push
pop
gs
shr
push
push
aas
mov
mov
nop
dec
stos
sub
movsl
out
sbb
push
and
aam
les
mov
in
lods
mov
jae
js
cmp
push
out
and
sbb
mov
mov
mov
dec
jo
movsl
ret
mov
insl
das
and
scas
cmc
int3
cli
sub
pop
dec
push
pop
mov
in
imul
fldenv
push
xlat
mov
and
out
stc
sbb
xchg
jbe
jp
fwait
rcrb
int
xorb
fwait
and
push
ljmp
mov
mov
mov
jg
cld
jle
or
cmpl
xchg
cwtl
mov
pop
loop
leave
lea
enter
stc
lods
mov
stos
jmp
sub
add
jecxz
jl
popa
push
adc
cmp
adc
cwtl
push
rolb
adc
iret
cmp
sbb
in
je
xlat
idivl
stos
test
push
scas
in
inc
or
xchg
sbb
pusha
in
cs
mov
das
lcall
inc
cmpsb
adc
mov
jb
outsb
scas
ret
sbb
pushf
inc
pop
jae
cmp
popf
jecxz
and
lret
dec
enter
pop
jle,pt
insb
jo
push
xchg
enter
sbbl
test
or
mov
insb
out
xchg
jbe
frstor
sub
lret
pop
mov
sub
jns
nop
adc
cmpsb
in
fdivrl
mov
je
cmpsl
sarb
cmpsl
lret
xor
pop
nop
jae
ds
push
mov
push
rol
cmpsl
pop
add
popf
repz
hlt
pop
sub
sbb
push
sub
call
repnz
popa
and
jns
sbb
pop
ss
repnz
ret
mov
in
add
and
mov
add
fldpi
lock
sub
ljmp
loope
mov
js
es
andb
ljmp
dec
out
pop
sbb
adc
mov
movsl
jmp
or
lds
mov
cmpsl
loop
jecxz
push
push
xor
outsb
dec
lahf
cmp
imul
sbb
bound
filds
shlb
jae
ja
test
jmp
mov
es
cld
mov
push
jmp
inc
lock
outsb
mov
xchg
lahf
cmp
add
aas
add
ja
xchg
mov
xchg
fidivrl
out
adc
dec
pop
xchg
sbb
pop
xchg
fs
into
xor
out
subb
jp
ret
stc
int3
jae
adc
push
or
add
mov
addr16
inc
mov
scas
rclb
sbb
jmp
loopne
add
ficomps
not
push
sahf
popa
int
mov
setl
gs
rorb
pop
insl
xchg
fcmovu
dec
ret
mov
or
add
rorl
rdmsr
sub
xor
and
nop
fmuls
pop
pop
jge
and
fistl
adc
addl
nop
ss
jl
aad
dec
addr16
sub
mov
fildll
cld
cmp
jae
sub
cmp
sbb
mov
imulb
jecxz
xchg
inc
cmp
nop
dec
dec
fldt
enter
js
sti
cmp
roll
int
rcr
fcompl
fcomip
jae
sub
test
pop
push
pop
mov
test
cwtl
insl
push
add
repnz
push
sti
adc
cmp
pusha
scas
movsl
pop
icebp
mov
adc
in
xchg
mov
mov
lods
mov
sbb
adc
dec
data16
inc
sbb
xor
add
and
bound
pop
cmpsl
pop
data16
dec
mov
mov
push
std
pusha
inc
jno
mov
cmp
movsl
or
test
sbb
push
notb
or
sub
lahf
std
std
stos
pop
out
sti
mov
sbbl
sub
xchg
xlat
cmc
sbb
xchg
dec
enter
sub
cwtl
fnstsw
sub
or
in
lods
enter
add
in
mov
or
lea
mov
mov
jmp
fs
xor
push
fs
fisubrs
adc
adc
push
clc
adc
pop
scas
cmpsl
sti
inc
insb
sahf
popf
add
movsl
das
pop
popa
aad
enter
hlt
or
cmp
imul
sub
pushl
fs
or
xor
pop
sahf
push
pop
out
jle
or
or
dec
push
push
pop
cmp
mov
paddb
xor
xor
subb
lret
xchg
je
arpl
call
shl
mov
inc
jne
inc
inc
out
xchg
xor
xchg
loop
rolb
in
call
or
mov
push
lcall
inc
xlat
mov
loop
shrl
dec
inc
jl
out
mov
jo
mov
call
notl
xlat
and
pop
push
jns
sub
sub
call
push
repnz
aas
cwtl
or
adc
jo
leave
dec
mov
or
cmp
in
jae
mov
repnz
push
sbb
ret
adc
push
or
pop
into
fs
sbb
testb
lods
sbb
outsl
xchg
lods
push
cmc
xor
pmulhrsw
sub
jns
test
test
adc
pop
cmp
or
jnp
test
mov
mov
ret
pop
pop
push
push
mov
into
pop
movsl
push
cmp
rcll
rol
pop
jbe
mov
cmpsb
sti
in
repz
nop
sahf
cmp
outsl
js
rorb
and
add
sub
nop
mov
mov
scas
cmp
imulb
pop
push
gs
pop
pop
pusha
imul
cmpsl
jns
xorb
sarl
inc
fcmovu
sbb
mov
mov
rclb
insl
test
imulb
xchg
jl
push
cmp
rcrl
iret
in
hlt
jg
fstps
lret
sub
outsl
jle
and
xor
sub
test
mov
test
fisubs
imul
pop
shl
ja
in
aas
data16
aam
inc
movsl
popf
xchg
mov
loopne
pop
sub
outsb
pusha
shll
negb
lret
mov
mov
leave
push
ja
js
xchg
es
insb
sbb
xchg
mov
fwait
popa
inc
jle
cli
cwtl
inc
push
test
sub
add
xor
fmulp
mov
dec
xchg
daa
mul
or
insl
sahf
rcl
dec
push
or
jge
push
cmpl
pop
jns
cmpsl
jo
addr16
pop
push
fstpt
shlb
adc
mov
mov
jae
mov
mov
push
fcoms
pushaw
xor
and
mov
cs
push
mov
xchg
popa
jae
test
push
xchg
jle
push
jp
push
aas
bound
sbb
rcll
add
fsubrp
scas
shll
jecxz
xchg
mov
push
inc
and
ja
cld
inc
push
push
scas
push
lahf
xchg
repnz
sub
sub
insb
or
xchg
rclb
push
testl
mov
sbb
cmpsl
aaa
jmp
leave
cs
daa
add
cwtl
popa
sbb
clc
xchg
mov
mov
pusha
sbb
inc
popf
cli
add
push
xchg
insl
ja
mov
jo
xchg
dec
xor
add
push
mov
pop
dec
lods
or
and
jae
lcall
dec
sub
xor
cmp
dec
imul
inc
clc
lcall
dec
inc
loope
dec
daa
pop
cltd
adc
lahf
les
lods
ljmp
dec
push
dec
insb
inc
push
or
int
sbb
inc
loopne
pusha
rclb
es
fisttpl
xor
das
clc
mov
cmp
pop
add
add
push
out
fidivrl
pushf
cmp
push
adc
pop
daa
imul
cmp
sbb
push
das
bound
push
sbb
mov
jno
ss
mov
scas
and
aad
in
sub
inc
push
movups
dec
popf
and
push
mov
pop
jo
jb
dec
in
mov
add
jb
dec
xlat
mov
xor
mov
popa
mov
fistpl
mov
stos
clc
subl
xchg
popa
nop
arpl
nop
mov
shlb
ficomps
and
js
das
popa
pop
xor
lds
inc
xchg
cmpsb
dec
push
dec
aaa
insl
or
xchg
pop
into
lock
mov
xchg
cmp
dec
out
or
pop
push
pop
ljmp
out
push
sub
sti
lods
lret
hlt
dec
int3
movsb
cmpsb
aad
je
jmp
sarl
sub
scas
rorl
push
adc
jb
mov
xchg
loop
lods
lock
mov
and
loopne
fcmovne
adc
push
mov
dec
add
popf
call
bnd
pop
test
int
xlat
data16
js
or
fsubrs
and
dec
loop
lret
rcl
stos
jl
lcall
test
dec
hlt
pop
imul
push
dec
mov
cmp
ds
push
cld
stc
mov
pushf
cmp
pop
add
ret
lret
and
jg
negl
test
cmc
inc
cmp
out
ss
inc
or
cli
clc
xorb
dec
sti
inc
faddp
fwait
cmpsb
pop
cmp
insl
arpl
in
aam
jno
and
mov
jle
xchg
sub
mov
push
sbb
pop
push
enter
test
add
push
dec
add
dec
mov
pushf
mov
lcall
pop
push
push
out
nop
adc
pop
sub
lea
fcoml
mov
add
rolb
xlat
lret
je
pusha
sub
dec
fmul
mov
adc
sbb
xchg
cltd
repz
push
sbb
ret
je
gs
enter
scas
imul
push
in
inc
lods
push
dec
push
stos
pushf
inc
rcr
ja
or
sub
das
add
aad
xchg
pop
dec
notl
sahf
fldcw
cli
jmp
or
xchg
loope
rclb
dec
dec
push
jl
jne
repz
pop
mov
shrd
shr
mov
mov
shl
mov
xor
xor
or
mov
mov
or
mov
jmp
rcr
out
xchg
xchg
push
inc
es
nop
hlt
mov
sbb
adc
cmp
in
das
and
dec
pop
push
aaa
mov
cmp
jne
dec
lock
jg
mov
mov
push
cltd
xor
fdivr
push
push
iret
orl
ficomps
inc
sbb
xchg
adc
sbbb
test
xchg
cmp
xchg
arpl
xor
and
mov
mov
and
mov
loopne
xchg
in
adc
push
inc
inc
daa
ljmp
loop
ds
popf
test
cmp
mov
call
clc
lock
pop
sbb
movsl
and
bound
sub
inc
icebp
xchg
pop
mov
lods
ret
test
xchg
cli
in
push
int
lods
int3
sub
int
or
sub
mov
dec
pop
xor
sub
insl
lahf
arpl
fcoms
aam
fs
adc
push
jecxz
in
rorb
or
xor
jmp
scas
lock
jg
mov
and
push
std
mov
rorb
mov
dec
adcb
nop
test
cwtl
xchg
cld
roll
jnp
push
test
jae
imul
jecxz
push
data16
nop
mov
push
inc
cltd
gs
jae
mov
out
dec
push
cmp
dec
out
mov
lods
int3
sbb
dec
mov
pop
movsb
push
lods
xor
in
add
leave
mov
in
jl
sub
aam
pop
mov
adc
push
mulb
mov
out
arpl
icebp
pushf
dec
jg
ja
jno
sub
stc
add
jecxz
xchg
and
mov
adc
cmpsb
nop
xor
loop
sbb
xchg
test
xor
jg
mov
lret
mov
jmp
lock
push
sub
lock
mov
adc
or
sub
cwtl
nop
aam
dec
jb
mov
jle
popa
push
dec
sbb
xchg
roll
push
stos
inc
jecxz
stc
movsb
sti
or
jg
movsb
or
mov
jno
inc
call
push
mov
mov
and
test
push
sub
jb
lods
adc
xor
mov
mov
out
xor
jmp
jns
in
mov
shll
iret
es
mov
adc
inc
clc
gs
lods
loope
dec
inc
faddl
and
jbe
aam
shll
cmp
or
icebp
inc
xchg
insl
sub
mov
push
iret
or
and
mov
cs
in
sub
divb
mov
js
sti
inc
dec
call
clc
fcmove
pop
adc
fadd
or
adc
push
scas
test
lret
and
inc
jl
mov
inc
xchg
mov
pop
sub
and
outsl
ljmp
daa
cmp
xchg
mov
or
pop
pop
imul
nop
pop
aas
xor
jecxz
dec
ja
test
adc
sti
adc
gs
cs
pop
mov
stos
pop
mov
adcl
pop
and
fiaddl
cmp
ja
shrl
ret
pop
xchg
mov
cmp
jno
add
push
je
mov
sub
ficompl
pop
out
mov
lahf
inc
lds
aas
cmp
inc
xchg
in
dec
mov
fisubs
xchg
js
es
mov
leave
aad
pop
add
sub
imul
sbb
xchg
cli
adc
mov
in
jns
std
imul
mov
mov
push
adc
test
ss
daa
jns
fistl
pushf
data16
push
mov
dec
or
sbb
test
adc
les
subl
dec
mov
nop
or
mov
mov
jecxz
mov
jg
cld
imul
add
clc
or
cmc
in
push
lret
mov
ficomps
jnp
loop
xchg
xlat
mov
mov
es
shll
add
or
jne
loop
mov
shl
movsl
lret
out
xorl
cmpsl
frstor
push
pop
sar
std
jle
int
cmp
shll
outsb
or
jl
dec
adc
cmp
rcrb
movsl
push
loop
mov
mov
aam
ja
out
in
sub
shufps
and
rclb
push
or
popf
push
add
xchg
mov
stos
test
nop
fldcw
xor
aaa
int
dec
inc
adc
arpl
and
jge
jnp
push
dec
or
push
adc
ffree
cld
push
xor
cmp
shl
jp
loop
cmp
pop
fstps
std
sti
out
mov
lea
int
insl
fcompl
dec
in
loopne
push
jg
das
fs
enter
cmp
dec
push
lods
rcl
and
mov
fsubl
cmpsb
outsl
lods
mov
mov
mov
mov
inc
xchg
es
repnz
pop
imul
loopne
mov
test
in
sub
mov
es
ret
xchg
and
movb
inc
stos
shl
test
mov
add
fstps
cmp
decb
sbb
pop
aad
mov
rolb
push
or
or
ja
je
sub
mov
pop
dec
in
imul
stos
cmp
test
xchg
mov
push
or
jmp
or
add
shll
jne
sbb
push
and
mov
inc
xlat
and
sub
repz
sub
sbb
rep
das
in
add
mov
les
rcrb
data16
add
fsts
mov
xor
xor
out
sbb
mov
repz
xchg
es
jecxz
add
jnp
pop
sub
aad
jl
rcrl
sub
pop
mov
xlat
dec
mov
xchg
outsl
jg
inc
mov
das
dec
mov
dec
mov
jl
jne
inc
push
cmp
nop
popa
cmc
sbb
out
push
mov
jnp
test
cwtl
fistl
and
pop
outsl
sub
lods
clc
inc
xchg
mov
test
sarl
enter
sub
pop
sub
sahf
push
inc
or
inc
repz
lds
fists
dec
pushf
cmc
pop
popf
mov
mov
add
pop
sub
pop
fistl
hlt
shrd
shr
mov
mov
xor
shl
jmp
add
xchg
rorb
add
unpcklps
clc
adc
mov
mov
arpl
xchg
ds
nop
lods
loope
adc
xchg
lret
pop
jo
or
out
push
loopne
pop
sub
inc
test
fwait
outsb
jne
insl
jnp
subl
cmp
aaa
mov
cmp
adc
or
or
out
mov
xchg
in
arpl
rcr
lcall
mov
dec
ret
repz
jg
xor
test
xchg
ja
sub
addb
mov
test
jae
fcmovu
add
xor
xchg
add
jnp,pn
mov
bound
cmpl
adc
mov
mov
sbb
push
adc
frstor
cld
or
js
jmp
test
push
sbb
loope
pop
mov
mov
xchg
jno
les
mov
cmpsl
mov
xchg
lea
lods
and
loop
dec
jg
cmp
pusha
out
cmc
stc
jnp
xchg
mov
ret
xor
mov
and
sbb
je
mov
inc
add
sar
push
sbb
dec
push
xchg
or
push
testl
in
push
push
inc
jge
lods
mov
sti
dec
or
fdivrs
pop
stos
rolb
cmp
pop
bound
dec
sub
or
sbb
push
shrl
ret
push
test
jb
dec
jns
or
mov
clc
xchg
fidivrs
inc
lret
lds
popf
stos
inc
jne
inc
std
outsl
std
or
lcall
pop
mov
pop
dec
or
ret
cmp
lret
jne
test
nop
psubq
pop
cmpl
and
subb
dec
sarb
sbb
out
add
cwtl
out
jmp
stos
insb
pop
xchg
shrb
insl
cmp
hlt
or
mov
mov
dec
icebp
mov
dec
inc
inc
ja
or
arpl
mov
push
or
bound
xchg
mov
pop
lods
xlat
test
cwtl
repnz
push
outsb
mov
push
out
cs
mov
cmp
int
mov
mov
nop
cmp
push
jnp
dec
rcrb
imul
ret
out
dec
fldl
xor
insb
std
pop
mov
pop
xor
inc
or
leave
adc
sahf
jno
ret
push
pop
fbld
xchg
mov
pop
dec
pop
aaa
into
pusha
mov
fs
jns
gs
vmovhpd
xor
loope
lcall
es
cmp
ds
lods
and
jne
aam
pushf
jb
sub
pop
call
sbb
cmp
mov
imul
in
mov
sbb
sbb
data16
jbe
or
jmp
pop
addr16
adc
cs
mov
enter
sar
dec
add
xor
outsb
subb
lods
mov
cs
rolb
aas
pop
fildl
mov
sbb
jle
mov
jbe
cmp
fwait
pop
mov
negl
xchg
cmp
dec
out
sbb
pop
iret
loope
xor
lods
cmp
mov
fs
lret
fisttps
add
imul
add
cmp
scas
cmp
loop
pop
iret
and
loope
fiaddl
jecxz
ss
mov
inc
add
popa
in
and
sbb
loop,pt
lock
test
imul
mov
bound
incb
test
flds
sti
nop
add
pop
push
mov
inc
sbb
sbb
and
mov
jp
in
push
sbb
push
pop
enter
int
sbb
mov
dec
xchg
mov
xchg
fisubrs
mov
cltd
mov
js
push
repnz
pop
cmp
xchg
sbb
fldcw
pop
dec
cld
mov
mov
test
popf
mov
mov
mov
cmp
mov
mov
out
push
push
andb
loop
sbb
js
inc
pop
icebp
outsb
repnz
movsb
jbe
mov
cmp
xor
mov
scas
xchg
jl
dec
add
movsb
jp
pop
pop
add
cmp
ficoms
jne
xor
in
mov
cld
lea
jp
daa
cli
xchg
cmpsl
shl
mov
movsb
aas
clc
and
push
out
or
mov
add
mov
jecxz
incb
mov
xchg
sub
fistpll
imul
hlt
jne
dec
jne
jmp
and
scas
repnz
push
ss
in
adc
orb
jo,pt
xor
inc
lea
push
cmp
cmp
movl
and
lcall
and
push
adc
jmp
rolb
aam
sub
dec
ljmp
xchg
std
out
sahf
dec
jmp
adc
mov
or
push
pop
shrl
dec
stos
sbb
cli
inc
sar
jne
cmpl
add
xor
jle
fidivl
cmpsl
out
aaa
test
or
outsl
add
jmp
xor
in
pop
loop
cmp
lcall
movsl
adc
lret
dec
mov
test
lds
cmp
icebp
mov
dec
jae
cli
sbb
je
mov
xor
xor
popf
or
std
xchg
mov
jo
adc
int
outsb
mov
xchg
dec
xchg
dec
popa
adc
out
cwtl
loop
popf
mov
inc
pop
dec
cli
shll
xor
sbb
repz
sbbb
mov
xor
jmp
add
sub
xor
mov
mov
and
push
iret
sahf
dec
mov
sub
ret
mov
dec
iret
xchg
lret
je
inc
lret
sarb
push
lods
and
inc
xchg
and
in
je
dec
sub
mov
clc
test
cld
cmp
rolb
jo
bound
sbb
xchg
test
push
dec
mov
test
test
mov
stos
add
mov
mov
hlt
cmp
add
jne
in
lods
mov
and
adc
loop
jle
mov
loopne
je
pushf
sub
dec
inc
add
vpavgw
outsb
ss
test
test
xchg
mov
jns
xor
or
lea
mov
mov
mov
shrd
jmp
aaa
aas
lods
and
andb
pop
aam
adc
push
clc
adc
repnz
sbb
arpl
out
nop
dec
cmpsl
pop
lcall
insl
cmp
fcom
xchg
push
js
rclb
mov
mov
loop
and
pushf
mov
push
gs
loopne
sbb
xchg
adc
mov
mov
and
aas
push
pop
gs
insl
xchg
stos
subb
sahf
cli
xchg
mov
xchg
or
adcl
int
xor
add
lea
in
jge
cmp
jae
sbb
and
das
in
push
dec
sbb
adc
aad
fsub
inc
ret
mov
sbb
sahf
xor
jne
cmp
and
aad
dec
and
pop
pop
out
shr
iret
pop
mov
movsl
pop
in
and
push
or
les
pop
mov
inc
sub
sbb
add
jge
add
stos
xchg
adcl
pop
inc
mov
push
cmp
adc
sub
ret
jbe
repnz
test
and
pop
jmp
push
pop
inc
jae
mov
out
icebp
test
cmpsb
or
push
jne
jg
mov
and
out
arpl
dec
scas
out
mov
cmpsb
pop
movsb
scas
mov
or
mov
xchg
iret
and
pop
jl
add
gs
inc
sbb
mov
bound
sub
inc
fldt
push
mov
repz
push
mov
mov
lret
insl
jae
lahf
and
mov
xchg
mov
jge
xorb
shll
or
pop
or
mov
pop
loopne
jl
jmp
push
fcoml
loope
cli
popf
inc
pop
pop
lcall
sbb
fwait
in
sub
imul
add
mov
mov
mov
mov
cmp
cwtl
cmp
mov
xchg
cli
xor
hlt
mov
lret
cs
loop
fmuls
mov
xchg
pop
jmp
or
stc
xor
call
mov
xchg
pop
mov
sarb
out
jae
pop
add
mov
scas
xor
xchg
rcr
js
int
sbb
jb
sahf
mov
xchg
int3
mov
pop
lret
push
pop
iret
mov
js
xchg
mov
lcall
pop
dec
xor
jp
mov
in
dec
xlat
bound
push
and
inc
stc
pop
addr16
and
mov
daa
ljmp
imul
push
lcall
daa
addr16
inc
jb
sub
xchg
mov
test
call
xchg
scas
pop
repnz
xor
out
add
jg
jmp
stos
mov
mov
int
in
aaa
jb
rclb
inc
or
xchg
sub
add
ret
ja
fdivl
push
repnz
xchg
xchg
fs
insl
lcall
xchg
loop
xor
fs
push
jecxz
mov
cmp
sbb
and
ret
jne
das
mov
adc
dec
xor
js
xor
fisubl
fldenv
mov
mov
and
cld
fisttpl
sbb
push
and
int3
fisttps
push
stc
js
and
test
xor
test
das
push
ficoms
mov
sarl
cmp
ret
popl
push
jp
pop
push
add
mov
push
fidivrs
sub
jns
inc
call
push
or
cmp
ret
xchg
cmpsb
in
xchg
or
mov
pop
mov
xchg
fsubr
shll
cmp
aas
pop
dec
test
push
mov
in
mov
and
mov
and
rclb
into
cmp
cmp
push
push
mov
cwtl
and
lea
and
inc
pop
pop
out
cmp
ret
pop
xchg
add
jne
sub
cmpsb
adc
pop
cmpsb
lds
pop
rcrl
add
inc
push
xchg
int
sar
mov
mov
adc
sbb
call
xorl
xor
inc
dec
sti
lods
pop
jbe
xor
mov
jns
jp
xchg
test
sar
fdivs
loop
and
rcrl
fdivrl
mov
insb
out
sub
call
xchg
cs
xchg
sub
inc
dec
in
xor
bound
mov
pop
repnz
push
dec
inc
loopne
xchg
cmp
inc
adc
and
jno
loope
mov
push
fiadds
fs
add
adc
mov
sbb
jno
ja
repnz
mov
pop
or
cltd
cltd
push
aad
add
dec
out
adc
aam
js
push
mov
stc
inc
loope
mov
stos
dec
adc
gs
inc
pop
in
mov
int
xchg
pop
scas
in
push
aas
rep
xchg
out
into
add
pop
stos
emms
push
mov
loopne
push
dec
inc
test
clc
xor
popf
or
cld
xor
mov
jo
nop
inc
das
xlat
shlb
insb
jae
iret
push
pushf
xor
mov
jns
into
and
outsb
pop
add
dec
pop
dec
mov
js
das
decl
lcall
or
mov
fisttps
dec
xchg
dec
lret
fldlg2
sub
bound
mov
out
dec
jl
jo
adc
mov
outsb
push
movsb
fucom
push
inc
pop
jns
jns
push
nop
and
loop
jbe
xor
pop
pop
xlat
addb
mov
fildll
aaa
add
test
sub
sub
lock
call
pop
jbe
test
loop
add
inc
pusha
or
jae
sub
rol
test
pop
dec
stos
out
addl
adc
test
dec
dec
cmc
lock
and
inc
lods
pop
subb
cmp
xor
dec
cmpsl
push
sbb
pop
and
push
icebp
outsb
cmpsb
dec
arpl
rcll
loopne
pop
xor
imul
jb
sti
nop
pop
cli
rcr
adc
cwtl
ljmp
mov
mov
popf
inc
or
jb
fs
sub
or
xchg
mov
imul
jmp
mov
xor
shl
mov
xor
or
mov
mov
add
mov
mov
shrd
shr
mov
mov
xor
xor
or
lea
mov
jmp
dec
jmp
dec
xchg
and
mov
push
jp
xor
push
clc
adc
cli
loop
push
insb
push
idiv
mov
sbb
sbb
cmc
adc
mov
mov
sbb
and
test
clc
iret
mov
cmp
inc
cmp
ljmp
lcall
fisubl
test
sub
add
adcl
pusha
lock
loopne
lds
mov
pop
aas
cmp
and
test
add
sbb
jmp
test
divl
mov
xchg
fdivrl
push
dec
jmp
xor
and
in
add
out
or
test
jb
in
insb
jmp
sbbb
jne
inc
pop
mov
shl
jo
jp
mov
loop
push
push
into
add
push
dec
sbb
orl
or
lds
call
stc
test
in
loopne
mov
loope
sub
lret
xor
mov
add
xchg
cmc
movsl
or
imul
mov
xor
jns
adc
adc
cltd
in
mov
cli
or
mov
and
shll
loope
xor
push
repnz
jle
shlb
icebp
lcall
ljmp
push
fs
iret
xchg
cwtl
xor
xchg
loopne
loopne
dec
cmp
pop
fs
arpl
jl
movsb
xchg
sti
daa
mov
jg
in
fcmovnbe
pushf
scas
push
in
dec
enter
push
mov
add
push
mov
mov
xchg
jmp
ret
cmc
jmp
and
mov
mov
inc
rorb
sysenter
test
cmp
into
xchg
sub
inc
xchg
jns
add
nop
add
ds
mov
loopne
imulb
adc
gs
sbb
emms
std
fstpt
test
mov
outsl
stos
cld
xchg
js
mov
pop
in
xchg
cmpsb
fcompl
or
push
test
aaa
push
repz
dec
shrl
ret
push
fucomip
loope
nop
aas
cmp
mov
test
por
mov
clc
std
vpcomq
jnp
xchg
pop
mov
pop
xchg
imul
sub
idivb
out
xor
popa
xchg
and
jbe
push
mov
fst
pop
iret
addr16
cmpsb
icebp
out
pop
and
dec
fisttpl
scas
dec
rolb
cltd
jecxz
push
pop
xchg
pop
int3
mov
fsubrl
pop
add
mov
hlt
movsb
cwtl
adc
stc
fmuls
or
sbb
ja
xor
xchg
test
inc
add
xor
rclb
dec
out
push
enter
dec
movsl
rorb
rcl
les
pop
push
xlat
dec
aas
daa
in
inc
mov
cmp
push
jae
xchg
push
push
mov
loop
out
clc
mov
xor
jp
xor
stc
movsb
jge
cmpsb
outsl
and
out
cmpsb
rcl
imul
mov
test
xlat
mov
sbb
lds
cli
in
mov
lahf
cwtl
push
or
xchg
mov
mov
lret
jle
and
pxor
jbe
xlat
call
mov
cmc
scas
imul
mov
add
adc
mov
adcl
stos
mov
xor
adc
dec
out
push
sar
pop
jnp
aam
xchg
jg
push
push
push
lods
aas
nop
pop
adc
out
push
adc
push
cmp
or
jns
cmp
insl
lahf
xchg
movsb
sbb
psrad
inc
sahf
sbb
lods
mov
pop
leave
push
mov
sti
or
aad
nop
xlat
sub
inc
rcrl
or
fucomip
popa
lds
jne
outsl
ja
nop
inc
sbb
dec
loope
jp
sub
push
je
div
fs
adc
shrb
fs
jae
repz
addb
sar
faddp
insl
lods
sarb
push
and
mov
out
push
popf
stos
sub
sub
and
insl
mov
jl
fcompl
dec
cmp
jbe
cmovno
scas
ljmp
push
mov
jo
shr
dec
xchg
or
push
mov
cmp
cmp
xchg
push
and
pop
fs
pop
stos
pop
aad
cltd
inc
aam
cmp
mov
mov
push
dec
cmp
fucomip
jecxz
out
vpshaq
cs
sub
sarl
sbb
jmp
into
push
pop
pushf
outsl
shll
cmp
jge
scas
jle
cmpb
and
pop
jle
mov
or
mov
bound
xor
imul
mov
lea
rcrb
or
mov
les
dec
call
mov
xchg
fistl
frstor
lcall
dec
mov
in
sbb
jmp
cli
inc
cmc
inc
sub
inc
sub
inc
lods
fisubl
cmp
cwtl
pop
pop
aam
fcomps
cmp
into
or
pop
mov
and
in
cmp
cmp
testl
and
lret
cld
jge
mov
adc
sti
lcall
push
imul
out
test
scas
sbb
lods
add
lcall
jno
sbb
add
ret
lcall
xlat
add
stos
push
lcall
sbb
inc
mov
and
xchg
sub
shlb
mov
loop
or
lods
lea
cltd
adc
inc
or
dec
pop
fstps
xor
fnstsw
adc
push
adc
daa
or
testl
sbbl
pop
jbe
fucomip
add
mov
gs
lods
lds
and
jo
ljmp
push
mov
in
or
fdivl
pop
loope
sarl
sti
in
adc
jl
pop
repnz
lcall
xor
movsb
xor
sub
xchg
xchg
pushf
hlt
or
icebp
cmc
add
xor
mov
sub
lcall
les
js
mov
fsubrl
pop
fmull
push
mov
shrd
shr
mov
mov
jmp
pop
inc
inc
mov
aas
push
sbb
mov
fists
adc
push
clc
adc
push
inc
inc
sub
xchg
push
cmp
in
xor
scas
mov
ret
popl
fsubl
mov
rcrl
xchg
lret
mov
pop
clc
xor
sbb
push
jne
pop
dec
lret
add
or
test
mov
mov
sbb
mov
stos
xchg
xchg
addr16
cmp
mov
jmp
lods
add
add
sub
cmp
mov
lods
stos
push
outsl
pop
or
sbb
pop
scas
xor
sti
add
pop
pop
pop
lret
test
xchg
sti
cs
mov
cmpsl
std
push
sub
divb
ret
cmpsl
inc
sarb
pop
ficompl
cmp
xor
add
ret
xlat
xchg
es
mov
cld
popa
mov
cltd
loopne
fildll
test
sbb
ljmp
shlb
push
cmp
ja
and
daa
adc
js
fsubrl
insl
xlat
lock
pushf
push
xor
lret
mov
mov
jmp
mov
sti
adc
nop
cli
cli
sbb
popa
push
mov
mov
inc
jo
jecxz
mov
fildl
jne
sub
mov
in
bound
cmp
pop
jmp
xchg
jno
jecxz
cmpsb
cmpsb
pop
sub
outsl
sbb
mov
scas
jbe
mov
int3
fdivrp
pop
ds
jmp
mov
adc
outsb
daa
lret
jp
fwait
test
mov
outsl
inc
stos
or
mov
pop
xchg
pop
pop
loopne
mov
icebp
push
subl
arpl
xchg
fs
aad
dec
pop
test
push
je
iret
lret
push
packssdw
mov
jle
stos
pusha
pusha
xchg
jo
pop
scas
pop
fsubrl
pop
es
adc
adc
and
or
lock
add
scas
iret
gs
insl
sti
sub
jmp
int3
push
and
insb
pop
lret
pop
in
pop
mov
scas
lds
fmuls
fcmovnbe
push
or
jb
mov
aas
orl
stos
int3
aad
lahf
adc
ret
jmp
jge
ja
movsb
cmp
popf
outsb
xchg
js
push
dec
out
xchg
and
sub
xchg
and
sbb
cltd
fidivl
or
pop
lods
cs
pop
imull
fwait
cmpb
mov
sbb
sub
pop
scas
sub
sub
out
or
call
shll
aaa
dec
sbbb
jb
pop
lods
shr
xor
jp
shrb
pop
cltd
xorb
xor
popf
pop
jb
mov
lods
lock
imul
fldl2e
adc
add
xor
and
mov
loop
pop
pop
imul
leave
int
daa
xchg
lods
mov
and
mov
jnp
push
inc
scas
or
rorl
cmp
and
xchg
outsb
push
adc
jp
or
xchg
movsl
fimull
adc
cmpsl
mov
stos
rolb
lahf
sub
mov
adc
push
aam
stos
pop
lcall
insb
popf
lods
push
jb
xchg
cli
mov
cmp
add
mov
ja
pop
or
xor
adc
sbb
ret
jle
mov
sub
pop
cwtl
ss
in
shlb
xor
push
outsb
xor
push
fsubs
inc
xchg
data16
pop
mov
imul
cs
sbb
mov
xchg
shr
cmp
mov
push
pop
rcl
jp
xchg
iret
pop
into
cmp
in
inc
cltd
es
xor
or
cmp
add
push
and
push
loopne
dec
sub
daa
adc
cmp
test
pop
outsl
mov
rolb
out
add
out
ds
jg
jle
outsl
lds
pop
int3
leave
divl
xlat
push
loopne
push
pushf
push
xchg
pushf
frndint
jl
pop
add
add
mov
out
shr
roll
add
shrb
movl
xorl
cmp
lods
int
push
jmp
jno
stc
inc
mov
enter
mull
out
hlt
out
pusha
and
xor
adc
pop
sbb
fildl
mov
adc
cmp
test
test
inc
or
mov
in
jns
jns
movsb
aad
xchg
and
lcall
mov
sub
lahf
push
mov
or
aas
out
lea
mov
out
cli
cmp
mov
inc
jnp
test
test
jp
lcall
out
lret
cmpsb
lahf
test
loopne
iret
idivb
or
aaa
push
sub
or
mov
push
xor
sbb
add
jp
out
pop
dec
out
lcall
xor
test
lret
adc
arpl
pop
dec
adc
imulb
sub
lahf
ja
sbb
pop
sub
jns
dec
jns
pop
ljmp
and
jae
cmp
test
sub
cmp
aam
cld
mov
mov
add
mov
fimull
and
outsl
sbb
pop
fidivs
gs
adc
inc
fistps
mov
adc
mov
loopne
imul
xchg
dec
adc
filds
repz
inc
inc
dec
aaa
inc
or
lret
mov
lds
mov
push
lahf
add
sbb
sub
cmp
xchg
adcb
mov
aaa
jno
sarl
pop
xor
push
xor
loope
jmp
inc
fistl
daa
fisubl
lods
icebp
mov
xchg
push
inc
lahf
iret
jne
sub
add
das
mov
aaa
xchg
lea
inc
dec
jb
jp
fstpl
dec
outsb
mov
dec
cmp
fdivs
fdiv
loop
mov
inc
jp
pop
xchg
call
in
sub
mov
xchg
test
xchg
and
ss
ja
lret
adc
push
push
adc
dec
test
insl
test
test
or
cli
push
push
mov
sbbl
popa
inc
popl
stos
loope
add
dec
pop
mov
mov
fwait
mov
test
cmp
loope
mov
loope
stos
lret
xchg
pop
mov
and
sub
xchg
mov
sbb
call
or
xchg
lods
out
cld
mov
push
mov
mov
xlat
lahf
pushl
xor
or
mov
shl
jmp
push
xchg
push
pop
push
es
inc
shlb
inc
xchg
out
adc
clc
adc
mov
clc
cwtl
decb
push
lds
imul
xor
cld
lcall
jo
push
pop
xlat
xor
hlt
cmp
dec
fdivl
dec
and
cmp
outsl
push
les
out
dec
pop
add
jmp
xlat
mov
es
xchg
dec
jmp
jmp
mov
cmp
sbb
push
loope
mov
and
out
imulb
push
in
std
orb
addr16
add
repnz
mov
adc
popf
lret
sbb
push
stc
mov
out
or
jp
inc
dec
jb
ja
or
dec
pushl
iret
xlat
outsb
adc
sbb
jmp
incb
idivl
jp
fst
xor
inc
mov
mov
inc
xchg
cmp
adc
xorl
hlt
lret
pusha
jbe
iret
pop
test
and
fldenv
or
int
int
rolb
jmp
mov
jmp
pop
out
mov
pushf
and
cmc
pop
add
je
cmp
lods
sub
jl
popa
cltd
es
mov
pop
test
aad
popa
xlat
adc
lret
test
cli
out
dec
andb
lock
mov
cmp
push
cwtl
shll
or
lret
and
dec
insl
jmp
leave
fst
xchg
xor
test
stos
enter
pop
xchg
int
js
dec
dec
mov
sbb
mov
repnz
leave
ljmp
loopne
jo
xchg
fwait
xchg
testl
test
push
mov
mov
cltd
sbb
adc
mov
xchg
adc
stos
mov
or
add
push
loope
into
push
mov
adc
mov
mov
xor
sarl
cmp
loopne
push
sub
mov
jnp
mov
push
jge
aam
imul
or
in
xchg
hlt
test
aaa
and
mov
les
hlt
iret
or
sti
ljmp
insl
xor
aam
loope
fwait
mov
sub
xor
sahf
pop
gs
out
add
cli
andl
clc
loop
adc
in
xchg
fsubs
hlt
outsl
out
ficoml
imul
in
add
push
bound
xchg
ljmp
dec
jno
js
lahf
lret
clc
jnp
in
jp
sbb
mov
imul
inc
cld
pop
mov
popa
pop
int
mov
in
mov
xchg
mov
jb
addr16
subb
adc
lock
out
dec
loopne
cltd
xorb
dec
in
cmp
dec
sbb
filds
xor
js
iret
mov
push
movsb
int3
ja
clc
insb
mov
sbb
xor
imul
pop
add
add
fnsave
push
add
push
pop
xor
xchg
insb
fsubrl
fidivl
outsl
imul
jl
fsubrs
test
call
pushf
daa
rclb
pop
inc
daa
in
out
push
mov
outsb
daa
dec
out
pop
mov
push
lahf
cmpsb
roll
pop
rsqrtps
inc
push
xor
xor
ljmp
ret
in
btc
or
jne
cmpsb
pushf
pop
mov
pop
add
lea
dec
stos
test
add
ljmp
daa
sti
std
jb
lock
loop
push
mov
push
fmuls
push
inc
out
out
xchg
out
fstl
pop
jae
dec
and
jle
mov
pop
push
sub
ljmp
mov
and
mov
push
mov
xchg
mov
rcr
pusha
mov
inc
push
push
int3
ret
dec
lahf
fwait
fwait
repz
orl
fs
and
cmp
enter
or
lcall
add
push
icebp
dec
lret
aas
loope
mov
gs
xor
add
ja
pop
cmp
xchg
enter
incb
xchg
push
movsl
out
repnz
popf
lahf
add
int
in
out
add
bound
sbb
call
inc
or
icebp
jg
loop
push
xorb
cmp
out
and
faddp
sbb
cld
ljmp
popa
scas
pop
dec
gs
xchg
xor
aaa
pop
sbbl
addb
mov
xchg
sub
mov
sbbl
lods
dec
sbb
sti
nop
andb
inc
jbe
push
xor
push
and
push
gs
cmp
iret
dec
popf
adc
mov
mov
mov
lret
cmp
test
push
std
int3
xchg
test
or
xchg
adc
subl
outsl
mov
push
mov
nop
enter
rclb
rolb
mov
movsb
jmp
sti
xor
xchg
add
addr16
inc
lahf
sub
adcl
inc
jle
mov
es
push
addr16
sub
frstor
sbb
lahf
cltd
or
je
xchg
mov
inc
pop
xchg
in
ss
iret
fdiv
mov
sub
arpl
xlat
int
adc
inc
cmc
mov
ja
mov
ja
aam
ret
inc
cli
adc
cmp
and
out
loopne
sub
mov
out
push
lretw
pop
rol
leave
icebp
cmp
cs
hlt
mov
mov
cmp
iret
push
mov
test
cmp
lods
insl
push
cmp
arpl
js
loope
and
test
mov
cmpsl
fcoml
lds
out
aaa
jbe
outsl
mov
ljmp
fildll
call
mov
add
pop
nop
test
mov
js
or
jns
adc
mov
outsb
adc
aad
jecxz
sbb
cmp
out
xchg
jl
pop
sahf
lret
mov
mov
push
inc
mov
inc
stos
test
dec
sbb
and
nop
dec
ficoms
push
daa
or
lahf
jae
sub
in
mov
xlat
mov
lds
pop
fwait
jl
or
test
adc
cmc
out
iret
jne
dec
testl
push
inc
mov
aam
jnp
push
in
mov
and
push
aad
cwtl
aaa
sbb
movsl
pop
mov
push
push
popf
mov
adc
lahf
or
dec
in
mov
mov
or
mov
mov
shrd
shl
shr
mov
mov
xor
mov
xor
or
mov
jmp
pop
mov
push
xchg
enter
int3
mov
adc
push
clc
adc
or
test
xor
xlat
shlb
sbb
dec
cmp
mov
mov
xchg
gs
mov
popf
test
scas
lea
or
cmp
push
pusha
pop
xchg
sub
in
sahf
sub
addr16
nop
add
aam
xchg
mov
outsb
adc
dec
and
rcrl
test
fnsave
int
mov
std
push
sub
adc
xor
push
imul
sbb
inc
mov
cwtl
lret
mov
xlat
out
aas
cs
movsb
xchg
sti
cmpsl
push
pop
orb
push
lds
jge
mov
imul
dec
ss
mov
xor
cmp
inc
and
cmp
and
push
push
push
hlt
pop
jae
out
push
mov
jb
xchg
adc
add
jmp
adc
sarl
sub
int
xchg
dec
stc
dec
sub
lock
or
fs
and
mov
add
add
push
xchg
fnstenv
jl
lret
pushf
repz
rcll
jp
xchg
push
cmpb
jne
movsl
loopne
shll
dec
repz
outsb
aas
pop
push
pop
testb
movsb
xor
leave
push
imul
aad
lahf
mov
jl
jmp
sub
cmp
fisubrl
xchg
js
test
nop
clc
push
psrlw
ficoml
testb
cmpb
xchg
inc
ja
cmp
rcll
sub
or
daa
xlat
cmp
mov
aam
mov
dec
inc
xchg
sub
leave
push
xchg
mov
lods
mov
cld
xchg
push
mov
xchg
push
mov
in
imul
enter
add
out
pop
cld
mov
repz
subb
das
btl
xchg
jns
adc
addr16
lret
lret
aam
push
cmpsl
outsb
in
daa
call
jns
pop
push
and
mov
jo
jb
xor
scas
push
movsb
inc
add
xchg
and
jae
insb
aam
sub
or
push
test
hlt
cmp
nop
sub
xchg
sbb
in
ja
pop
cwtl
dec
pop
shl
test
mov
cmp
mov
gs
mov
and
je
fsubl
jmp
xadd
pop
cs
hlt
notl
icebp
and
xchg
cld
push
dec
dec
lds
repz
xchg
fwait
fwait
mov
push
mov
sbbb
sub
imul
push
ficomps
out
imul
push
mov
push
xchg
cs
dec
jecxz
hlt
push
stos
call
fstp
nop
js
mov
sar
sub
cltd
push
call
mov
sub
les
xchg
mov
jbe
push
mov
testl
inc
push
mov
xor
push
and
sbb
mov
adc
outsb
jbe
jecxz
loope
mov
lcall
test
lods
test
jmp
out
lods
pop
outsb
js
cmc
ds
adc
push
popa
fs
or
mov
cmp
inc
gs
sbb
and
mov
push
mov
lods
je
dec
pop
mov
lcall
jp
sub
addr16
pop
sub
xchg
aad
adc
jae
mov
mov
xchg
or
dec
jno
insl
dec
in
negl
sub
mov
inc
xchg
xchg
repz
lahf
adc
sub
xor
outsb
pop
icebp
jb
loope
cmpsb
and
push
daa
dec
cmp
xchg
dec
sub
pop
aam
insl
scas
ss
in
mov
je
stos
in
std
aad
pop
push
adcl
jle
push
mov
hlt
cld
mov
or
xor
stos
fidivrl
mov
sbb
sbb
inc
popa
neg
sbb
scas
std
xor
sbb
mov
data16
call
mov
movsl
enter
addl
lock
sub
add
cmp
or
jle
add
nop
divps
data16
jae
xor
in
inc
jg
aaa
fdivrs
jnp
mov
cltd
out
js
ds
jae
push
pushf
or
lahf
sbb
xlat
loop
fs
sub
mov
sub
or
movsl
and
cmp
clc
jbe
xchg
adc
test
mov
lcall
clc
pop
xchg
push
xchg
idivl
inc
add
scas
or
mov
xchg
ss
fldenv
sub
mov
add
add
xor
mov
adc
repz
jnp
lock
push
jmp
lock
imulb
sahf
sbb
add
mov
rcr
sub
fadds
neg
inc
push
adc
adc
pop
pop
repz
es
in
mov
movsl
xchg
push
shlb
pop
add
shl
and
dec
ja
imul
jge
push
mov
leave
cltd
cmpsb
dec
stc
or
cs
int3
cmp
fidivrl
xlat
adc
movsb
js
sarl
shl
adc
mov
shrl
and
dec
ret
or
or
rolb
adcl
mov
mov
mov
repz
sub
xchg
mov
push
sub
rep
inc
sbb
pop
push
mov
jne
test
aad
jmp
repz
or
xor
sub
mov
popf
xor
xchg
divl
pop
in
ds
mov
mov
dec
push
cmp
movd
es
mov
js
lret
and
out
and
push
sbb
in
pop
pop
out
jb
in
inc
push
repnz
in
ss
movsl
inc
rorl
push
in
stos
sub
imul
cmp
fmul
fidivrl
lahf
aad
mov
sub
js
mov
rcr
xchg
and
or
jmp
sbb
mov
fs
or
faddl
pop
cld
adc
inc
inc
mov
movsb
xor
mov
in
or
push
leave
invd
ret
pop
sbb
stos
xor
push
add
sub
cmp
add
adc
orl
and
xor
mov
mov
xor
or
mov
mov
jmp
lds
jno
push
push
or
inc
outsl
fbld
adc
clc
adc
aam
mov
push
xor
jle
pop
lea
or
orb
inc
xchg
cmp
pop
aaa
pop
push
movsl
inc
icebp
dec
add
and
push
outsb
mov
mov
or
mov
jns
mov
pusha
or
loope
xchg
adc
popa
inc
movsb
clc
ffree
out
inc
and
inc
fsubrl
out
in
sahf
pushf
sbb
and
sub
fnsave
pop
push
ss
popa
mov
jnp
fidivrs
leave
aam
mov
enter
incb
mov
xor
pop
aas
mov
add
add
fnstsw
pop
or
fiaddl
leave
fbstp
inc
cmp
cmp
adc
cmpsb
jecxz
pop
and
dec
pop
shll
cmp
fsubr
lret
cli
mov
xchg
outsb
push
pop
mov
xchg
std
fdivrl
push
mov
push
pop
loop
jnp
and
jmp
inc
loopne
pop
sub
dec
pop
out
mov
gs
lds
xchg
mov
stos
rcr
popf
mov
pop
scas
cmp
dec
mov
adc
hlt
sub
adc
and
push
xchg
out
lcall
add
ja
jno
mov
lret
into
mov
inc
test
mov
addl
roll
les
xor
scas
jmpw
dec
arpl
scas
xchg
mov
jp
push
xchg
mov
enter
mov
add
ret
ds
call
ret
lret
jg
enter
xchg
mov
shl
movsl
mov
or
push
dec
fisttpl
in
testl
sub
insl
pop
test
sahf
out
inc
sarb
sub
jnp
add
fisttpll
dec
lods
ja
xchg
ljmp
fisttpl
in
cmp
xor
or
xchg
jns
mov
or
cmp
mov
lds
push
pop
fwait
scas
f2xm1
cli
push
aaa
out
fstpl
pop
jge
adc
xchg
push
dec
arpl
jg
mov
xorb
sti
pusha
sbb
enter
test
into
ror
or
aam
dec
ja
jge
and
testb
xchg
jnp
cmp
pop
data16
and
xchg
and
inc
daa
mov
mov
jb
inc
jb
test
xchg
dec
repz
fsubs
and
cld
mov
xchg
push
sbb
test
add
addr16
imul
sub
xchg
or
in
push
jge
xchg
mov
dec
hlt
shrb
xlat
inc
js
pop
sbb
pop
xchg
lock
add
dec
push
fsubr
dec
dec
cltd
jns
fs
icebp
sub
push
popa
add
addr16
mov
insl
fs
add
push
xchg
in
mov
test
imul
pop
pop
stos
ret
or
repnz
or
clc
mov
and
mov
pop
shll
stos
inc
inc
dec
jno
int3
movd
loopne
mov
cmp
leave
push
cmpsl
cmc
pop
and
mov
cmpsl
outsl
lods
fs
mov
iret
movsl
xlat
and
ss
mov
mov
rorb
xchg
in
lea
lds
arpl
enter
cmp
mov
sub
lcall
inc
fwait
add
or
jne
mov
sbb
cltd
fsub
sub
fwait
push
lret
sbb
ret
push
push
mov
popf
lahf
or
jg
push
mov
xor
lcall
enter
insb
popl
call
insl
add
cmc
ud0
sbb
pop
outsb
pusha
cmp
fsubrl
and
mov
pop
test
iret
lods
push
outsl
mov
pusha
ret
clc
mov
sbb
fwait
xor
push
inc
repnz
and
and
aam
cmp
mov
or
dec
lods
negl
les
cltd
sbb
cmp
incb
movsl
cltd
mov
jge
mov
stos
adcl
jle
and
mov
test
mov
insb
mov
daa
push
push
mov
jb
push
iret
cmpsb
push
sbb
xor
inc
std
fcompl
xor
add
in
or
cs
mulb
pop
mov
sbbl
outsb
jmp
addl
int3
into
popf
pop
loop
xlat
pop
inc
and
loopne
repz
inc
xchg
aas
inc
lret
mov
cld
xchg
jmp
imul
data16
lcall
jge
inc
mov
cli
or
add
sub
movsb
lret
ret
mov
imul
inc
inc
aad
faddl
xchg
xchg
inc
lcall
imul
lock
cmp
mov
push
mov
mov
iret
into
jecxz
adc
mov
in
mov
xchg
push
loop
mov
ja
cmp
in
jmp
or
lret
cmc
ja
mov
mov
xchg
add
dec
imul
mov
inc
inc
mov
or
rorb
mov
pop
mov
loope
test
pop
and
sub
jp
stc
mov
inc
mov
sarl
inc
and
pop
lcall
xchg
jge
xor
pop
std
es
push
inc
cmp
dec
push
sti
sbb
out
mov
outsl
xchg
addb
sahf
and
jb
loopne
ja
dec
cli
imul
xor
leave
dec
out
push
roll
es
lods
pop
aas
xor
adc
rcll
js
xor
rorb
jbe
sbb
mov
jnp
out
dec
hlt
orb
int3
jmp
std
std
mov
addr16
mov
add
jge
sub
xlat
add
jmp
pusha
push
mov
xchg
lods
cmpl
sbb
or
add
fimuls
jns
mov
ficompl
sahf
roll
out
sbb
stos
mov
idiv
nop
stos
test
sbb
jnp
loopne
addr16
or
mov
jno
loopne
fisubrs
xor
cli
xlat
inc
js
sbb
stos
lea
lods
enter
add
enter
mov
xor
mov
xor
shl
mov
or
mov
cmp
je
mov
sub
mov
mov
mov
shl
xor
mov
mov
mov
xor
xor
shrd
shr
or
xor
or
mov
mov
mov
mov
xor
shl
xor
mov
mov
mov
mov
xor
xor
shrd
or
shr
mov
mov
or
mov
cmp
jne
cmp
je
jmp
jmp
inc
jle
add
add
add
fistl
adc
clc
adc
or
jo
ss
sub
push
in
sbb
das
xchg
xchg
jns
add
and
scas
adc
into
mov
pop
pop
dec
or
xchg
pop
repnz
pop
imul
xor
arpl
lret
repz
push
mov
push
push
jge
mov
pop
mov
sbb
aam
dec
aas
lock
push
mov
mov
add
cltd
mov
xchg
adc
hlt
xchg
or
dec
pop
xchg
mov
mov
sub
add
int
inc
mov
sub
pop
mov
ja
mov
xor
dec
adc
sbb
mov
jae
fldenv
in
insb
add
fistpl
mov
jmp
jmp
imul
lret
fbld
mov
sbb
dec
xor
mov
cmp
fstl
in
cmpsl
filds
cld
ljmp
cmp
mov
insl
push
inc
xlat
gs
sub
shlb
add
pusha
mov
lock
test
pushf
out
xchg
dec
jp
push
fs
jmp
mov
cmp
jae
or
gs
les
ret
and
iret
jmp
xchg
mov
imul
inc
sahf
loope,pn
test
daa
adc
and
jp
dec
js
mov
stos
lret
pop
movsl
xlat
sub
mov
pop
and
mov
fiaddl
inc
inc
emms
dec
repnz
mov
clc
or
stos
dec
adc
xchg
xor
xor
movsb
cmp
pop
adc
lock
cmpsb
fs
mov
pop
or
repz
xor
adc
dec
loop
mov
and
sub
pop
shlb
in
adc
ja
lret
aam
fwait
and
cs
inc
xor
adcb
pop
cltd
mov
cld
ss
sti
jbe
pop
leave
mov
or
movsl
mov
sbb
cltd
test
xlat
orl
int3
push
jno
push
add
and
inc
mov
aas
sbb
mov
ljmp
pop
ja
jns
cld
mov
fsubrs
ret
inc
nop
shll
pushf
mov
mov
push
sub
outsb
repnz
cli
sub
ss
xor
cmp
andb
mov
ret
or
lret
xor
jnp
jmp
xlat
mov
mov
fcoml
ljmp
mov
or
mov
dec
mov
test
jno
cmp
sbb
out
aad
int3
int
lcall
dec
xchg
mov
enter
ljmp
adc
push
mov
sub
std
cwtl
dec
sub
mov
imul
test
arpl
mov
pop
xchg
lods
mov
cltd
in
cmpsb
mov
sbb
pop
or
insb
test
jge
fbld
xchg
mov
sbb
dec
imul
pusha
mov
lock
inc
popf
jo
sub
scas
push
xacquire
sahf
mov
fmull
push
aad
mulb
mov
sbb
lea
ret
xor
and
imul
or
pop
scas
sub
arpl
add
mov
stos
rcrb
fldln2
movsl
sbb
dec
push
rolb
mov
pop
sub
popa
xchg
cmp
fisubrl
imul
cwtl
sub
and
push
idiv
xor
xor
popa
sub
hlt
adc
mov
int
in
fwait
daa
pop
test
jne
lret
xor
cmpsl
push
enter
loope
data16
imul
rclb
add
in
les
cmpsl
fwait
xor
sub
adc
stos
lret
dec
xor
jg
xor
stos
mov
and
dec
lahf
cmpsb
outsb
add
and
mov
pop
out
insl
cmp
cmp
dec
sub
cltd
inc
shlb
or
push
outsb
scas
sbb
and
jbe
sar
fisubrs
fsts
push
pop
adc
pop
xchg
xchg
pop
call
jno
rcl
testb
notb
xor
cmp
call
mov
jnp
fcmovu
sahf
xchg
push
nopl
mov
testb
dec
es
stc
pop
and
cmp
outsl
mov
mov
int
test
xchg
imul
orb
fisttps
outsb
mov
mov
leave
into
mov
fists
fs
push
or
cmp
or
idiv
push
dec
gs
add
adc
ret
mov
xchg
dec
ds
sub
jae
clc
cli
enter
daa
jle
int3
and
dec
daa
in
or
fildll
cmpsl
cmp
jg
icebp
add
or
fistpl
arpl
push
pop
clc
outsb
mov
popf
nop
jp
shrl
outsb
imul
push
sahf
or
mov
mov
das
jecxz
cltd
jae
or
das
inc
cmpsb
loop
aaa
cmp
xor
xor
mov
iret
aam
imul
decb
cs
sub
cs
cld
dec
xorl
cmpsb
mov
data16
push
pop
sub
rcl
divb
dec
int
repz
lret
incb
in
dec
sub
jg
push
pop
test
mov
mov
bnd
mov
test
push
push
pop
js
insb
int3
fimuls
dec
enter
insl
ret
mov
sbb
mov
imul
pushw
arpl
jne
mov
or
int3
mov
fnstenv
push
inc
sbb
ljmp
lods
xor
or
inc
in
imul
scas
mov
xchg
jo
repnz
loope
lret
push
aam
loopne
inc
adc
dec
push
pop
push
iret
sub
rcll
push
rolb
hlt
pop
shrl
lock
ljmp
into
es
sub
out
jg
fstpl
add
hlt
jle
xor
jmp
add
test
mov
data16
lds
gs
adc
enter
jmp
jo
jne
jo
orl
int
nop
mov
test
mov
mov
mov
shl
xor
mov
mov
mov
xor
xor
shrd
xor
or
jmp
test
and
push
mov
repz
pop
imul
push
clc
adc
dec
lcall
rcll
sub
pusha
jg
repz
or
and
sti
push
test
das
int3
faddp
jl
push
push
imul
mov
inc
je
loopne
insl
ljmp
in
xchg
push
repz
jg
sbb
testl
call
test
lret
and
daa
loop
pop
ljmp
ljmp
movsl
sarl
loop
jno
lock
decb
jle
xor
hlt
outsl
jle
inc
cmp
jg
imul
sub
xchg
cmpsl
fs
mov
sbb
push
sahf
or
mov
xor
jb
fcoms
push
test
xor
jp
add
push
shrb
dec
mov
pop
mov
mov
lods
cmpsb
cld
fiaddl
and
sbb
jbe
aaa
pusha
arpl
out
cwtl
inc
fldcw
and
movb
xchg
push
rorl
push
cltd
icebp
jo
lret
mov
pop
xorl
test
push
enter
es
sbb
mov
daa
adc
scas
lods
add
jo
or
les
adc
jmp
lahf
or
cs
mov
and
or
xor
lret
jne
or
inc
add
pop
sub
mul
iret
or
mov
aaa
pop
pop
sbb
mov
sbb
or
xor
xchg
int3
pop
cmp
mov
inc
out
cmc
push
sahf
ljmp
addr16
inc
mov
repz
and
or
add
sub
sbb
mov
xchg
hlt
ljmp
add
jae
push
loopne
aam
pop
iret
divl
adc
lock
xor
push
dec
data16
movb
sub
add
call
push
cmp
push
in
jns
movlps
and
or
mov
jmp
out
or
lret
loopne
sbb
out
push
push
jae
adc
sbb
xlat
inc
ret
push
inc
shrl
shlb
mov
stos
std
and
scas
cmp
or
inc
inc
repz
hlt
pop
lea
xchg
sub
mov
sub
mov
adc
mov
xchg
jp
mov
pop
mov
and
add
xor
mov
dec
mov
std
mov
cwtl
lcall
ja
sub
push
sbb
inc
shll
sahf
in
pusha
iret
mov
add
fidivl
add
adc
mov
dec
notl
testl
test
mov
push
rcll
push
faddl
inc
mov
jbe
popf
insb
dec
movb
mov
es
dec
dec
dec
mov
mov
pop
enter
xchg
and
bound
push
mov
pop
xor
test
push
push
fdivl
repnz
jae
sbb
pop
mov
and
fidivs
scas
mov
ds
mov
pusha
cmp
test
loopne
sub
stos
xor
loop
jb
sub
movsb
mov
fisubrs
push
pop
mov
xchg
pop
data16
lret
mov
cmpsl
dec
sub
into
out
jo
dec
or
and
clc
outsb
pop
int3
add
push
push
and
gs
call
jmp
cmc
jo
pop
gs
dec
xchg
ss
lret
arpl
cmp
cltd
jnp
or
sti
jbe
cmp
adc
dec
repnz
mov
ljmp
mov
cld
add
mov
ss
mov
enter
int3
mov
les
loopne
repnz
jl
jae
sti
cmp
sti
jnp
jns
in
ret
daa
adc
cs
in
push
xchg
mov
cmp
in
mov
inc
adc
ffreep
jmp
jo
loopne
adc
dec
add
outsb
lods
inc
pop
shrl
testb
aad
cld
pusha
mov
jbe
xchg
das
addl
mov
jecxz
push
mov
bndldx
sbb
ss
pop
pop
stc
dec
rorb
faddl
pop
repz
int
jae
popa
out
sbb
cmovbe
jmp
push
push
jp
cmp
sbb
andl
fldt
push
insb
push
or
pop
fcmovbe
fcomps
jle
je
adc
ss
xchg
and
mov
cmp
lods
jne
jge
cmp
int3
addr16
int3
lahf
stos
push
cltd
lret
jno
mov
or
das
test
sbb
pop
sbb
sbb
divb
cmp
loope
je
subb
lds
vpsraw
arpl
pop
jecxz
or
jnp
in
imulb
pop
pop
mov
mov
outsl
adc
mov
test
jns
xchg
not
cmp
pop
ss
mov
and
xchg
subl
sbb
and
cmp
add
mov
mov
lock
jecxz
adc
mov
call
insb
mov
jg
test
leave
insl
mov
mov
cwtl
shll
push
ds
adc
loop
aas
add
sarb
aaa
loop
push
mov
mov
pop
fnstsw
andb
movsb
daa
call
mov
mov
lcall
out
or
pusha
rolb
or
aas
addl
rolb
push
stos
sbb
cmpsl
sub
arpl
leave
push
data16
in
cld
lcall
lock
jle
decb
dec
and
mov
movaps
bound
and
jge
or
push
fsubl
jge
fwait
jnp
or
mov
mov
and
repnz
out
and
jns
clc
sub
inc
lcall
mov
pop
clc
ret
inc
sbb
add
in
aas
push
mov
cmc
mov
and
or
cmpsl
cmpsb
ljmp
mov
mov
mov
mov
xor
shr
or
mov
mov
shl
xor
mov
mov
xor
mov
mov
xor
shrd
or
shr
mov
mov
or
mov
mov
mov
jmp
movsl
mov
mov
inc
repz
xchg
into
nop
hlt
aam
adc
push
clc
adc
in
ds
push
jge
dec
ss
cmpsb
shlb
imul
dec
inc
testb
nop
jp
pop
push
call
mov
jl
shll
movsl
or
daa
ret
adc
dec
mov
sub
je
popf
repnz
jl
imul
sarb
das
ret
lret
hlt
sub
push
fldl
cmp
inc
inc
push
fimuls
mov
mov
lods
jo
fdivs
rcrb
frstor
mov
dec
aam
mov
jo
dec
sub
adc
dec
lret
stos
sbb
mov
adc
cmp
bound
hlt
loopne
sub
add
into
sbbb
iret
or
xchg
sbb
int
or
mov
andl
fcmovnb
mov
sti
mov
in
pop
pusha
xchg
notb
mov
jle
or
iret
jbe
mov
pop
and
rorb
or
inc
xor
mov
pop
and
ss
inc
or
clc
push
inc
jno
jno
adcl
mov
and
push
mov
mov
mov
test
add
sbbb
loopne
sub
and
xchg
cmp
push
mov
mov
mov
rolb
push
mov
dec
repz
add
dec
pop
rcrb
orb
iret
and
popf
out
sub
or
imul
test
imulb
js
jns
fs
sbb
testl
dec
mov
loopne
loopne
rcrl
in
sarb
adc
ja
or
outsl
sbb
dec
sub
mov
stc
mov
dec
jle
xor
and
adc
add
sub
leave
sbb
rcr
enter
pop
sub
test
in
popa
or
enter
nop
mov
sub
jp
or
xchg
mov
sbb
out
out
daa
adc
mov
les
sub
cld
adc
jns
cs
sub
inc
movl
or
lds
xor
xchg
inc
add
insb
out
and
xchg
xor
or
jg
in
icebp
jecxz
jle
loope
out
aam
pop
xor
fnstcw
inc
xchg
movl
pushf
inc
xchg
cmova
out
or
sbb
adcb
adc
movsl
push
and
cmc
xor
sub
or
int3
dec
fnsave
jmp
mov
inc
inc
jmp
xchg
sub
and
loope
mov
xchg
or
rorb
bound
ja
cmp
in
lret
pop
rorb
push
jbe
dec
lea
aam
fsubp
pop
ljmp
jae
fs
inc
imul
movsb
imul
add
add
sub
mov
arpl
filds
push
sbb
inc
enter
adc
mov
jbe
insl
outsb
enter
jl
fs
xchg
std
mov
scas
dec
movsb
insb
movsl
and
inc
aam
sbb
cmp
jg
leave
mov
imul
mov
lds
ss
mov
popf
xor
aam
loop
rolb
dec
es
jmp
sbb
cmpsl
sub
dec
outsb
clc
ss
imul
roll
xchg
lds
cld
aad
test
mov
cli
pop
cmp
xorl
imul
lret
mov
arpl
and
cmp
mov
push
scas
jb
ja
add
jne
pusha
mov
cmp
adc
add
adc
mov
andb
xchg
mov
pop
adc
and
mov
in
jo
pop
dec
sub
inc
popf
cmp
add
cs
rolb
lds
or
lret
insb
loop
jb
rcrl
jg
pop
mov
fdivs
xor
and
mov
add
jmp
cmp
jmp
stos
mov
mov
xlat
nop
iret
frstor
push
cmp
cli
add
pop
cwtl
pop
lcall
mov
jmp
xchg
lcall
gs
loopne
mov
xor
dec
sbb
imulb
arpl
inc
insb
adc
mov
jns
mov
ljmp
fldcw
cmp
jmp
stos
xlat
add
shll
inc
andl
test
clc
or
or
mov
push
stc
repz
lea
aam
xor
je
ret
sti
fwait
int
push
add
push
cld
test
enter
push
xor
movsl
popf
or
test
andb
ljmp
inc
das
stc
cmp
push
ljmp
das
stos
lret
out
xchg
aam
pop
mov
lds
pop
test
in
mov
lods
xchg
mov
dec
or
lods
fwait
jo
outsl
nop
rcrb
pop
cli
pusha
adc
loopne
inc
mov
testb
inc
fidivl
adc
sub
sarb
std
fsubs
inc
scas
mov
dec
sbb
push
mov
test
jae
mov
pop
ss
inc
rcr
out
mov
lods
dec
fnstenv
push
sbb
push
hlt
lahf
fwait
push
lcall
idivb
call
sub
insl
mov
mov
movsb
pop
sub
imul
xor
xchg
movsb
pop
std
xchg
in
dec
hlt
dec
cmc
lds
mov
mov
cltd
mov
mov
outsb
int
fstps
push
fs
xor
dec
adc
addr16
psubd
movsl
aad
ror
hlt
mov
or
dec
dec
and
dec
cs
lds
test
js
mov
mov
pop
jg
cmpsl
sub
rolb
push
sbb
cmp
popf
mov
fcomps
mov
mov
aas
cmp
inc
insb
lahf
xor
inc
mov
add
push
daa
jnp
adc
sbb
mov
lret
les
call
xor
lock
jmp
cmp
mov
sbb
xor
fisubrl
jnp
or
sbb
cltd
ss
jns
or
std
das
es
lock
loopne
inc
cwtl
jne
mov
cmp
je
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
shrd
mov
mov
xor
shr
mov
xor
shl
or
mov
mov
jmp
xchg
inc
aad
les
push
fmuls
add
and
xor
push
clc
adc
cmp
fistl
cmp
or
dec
insl
sub
neg
fwait
and
test
xor
xorb
mov
xor
mov
pop
insb
cld
pop
out
mov
cmp
test
sbb
xor
add
pop
lahf
pop
xor
out
cmp
repz
fadd
bound
idivb
imul
xor
xor
stos
popl
loopne
or
aas
dec
test
call
jne
jae
sbb
xchg
loopne
fs
jg
std
dec
fdivrs
popa
add
fildll
test
popa
lods
mov
sbb
out
insb
iret
mov
movsb
sbb
jbe
or
mov
insl
out
mov
ljmp
pop
pop
and
dec
out
hlt
adc
shr
clc
adc
clc
movsl
popa
add
gs
dec
mov
nop
push
cmp
mov
and
mov
clc
dec
imul
push
mov
add
inc
jge
push
lds
cmpsl
dec
scas
mov
movsb
xchg
lcall
adc
daa
cmp
inc
xchg
push
stos
testl
push
or
inc
dec
in
inc
js
dec
icebp
add
push
fnstsw
sub
ss
mov
push
dec
xlat
jmp
sbb
int3
daa
in
and
lcall
sub
jmp
out
xchg
aad
popf
xchg
call
lret
js
scas
divl
or
or
mov
mov
stos
mov
lcall
sti
fs
lock
push
sbb
fucom
daa
movsl
dec
fisttpl
sahf
push
sub
enter
mov
mov
dec
xor
rorb
fs
test
movsl
pop
and
enter
ljmp
test
add
out
and
pop
jns
clc
mull
xor
pop
mov
pop
call
int
inc
cmc
push
paddsw
jmp
popf
testb
jge
stos
test
sub
add
jge
neg
lret
cmpsl
mov
fnstcw
leave
mov
jmp
adc
cli
in
mov
mov
outsb
add
jmp
pusha
push
mov
test
add
lea
xchg
lret
push
ds
mov
or
into
or
sub
pop
jp
aam
pushf
mov
mov
inc
iret
scas
shlb
addr16
push
xor
outsl
cwtl
ret
lcall
cmpl
mov
lods
mov
rol
dec
and
test
dec
fwait
dec
arpl
fimuls
repz
lret
xor
sub
jne
leave
outsl
cmp
sar
mov
cs
jbe
sbb
icebp
ja
cld
popa
negb
mov
lock
rcrl
jge
sub
push
mov
ja
pop
push
xor
aad
jns
fisttpl
and
mov
xor
xchg
dec
mov
cs
jmp
jle
popf
icebp
inc
jae
insb
mov
fsub
or
xchg
xchg
xchg
mov
mov
mov
dec
push
pop
mov
and
imul
inc
pop
rorb
inc
pop
mov
sub
xchg
test
push
outsl
fcmovnu
sbb
cmp
mov
inc
ja
adc
inc
hlt
outsb
movsl
push
dec
sbb
in
mov
push
aaa
mov
xchg
ljmp
jl
pushf
insl
mov
xchg
call
add
aad
cld
jp
lods
cmp
mov
lds
pushf
cmp
xor
mov
jo
pusha
cmp
in
shll
mov
xchg
push
mov
pop
repnz
sub
ds
inc
cmp
int
sbb
mov
jbe
jns
or
push
and
fsubrs
inc
daa
jmp
mov
es
lret
cmc
and
pop
push
stos
popa
in
xchg
mov
lret
les
mov
adc
arpl
cli
mov
and
mov
mov
or
sub
stc
push
mov
add
cmp
and
out
push
in
xor
dec
sahf
jo
fucomp
pop
mov
or
pop
fbstp
cltd
inc
rcrb
pushf
xchg
int3
sub
addr16
pop
aaa
dec
jmp
in
inc
and
and
clc
jnp
pop
bound
arpl
dec
clc
adc
inc
inc
fwait
sub
sar
lea
sbb
pop
jg
movsl
fldt
repnz
xchg
sarb
sbb
adc
gs
sub
out
pop
int3
cs
pop
fldcw
mov
aas
add
xchg
mov
out
lock
add
arpl
call
bound
loopne
cwtl
xor
mov
sti
faddl
insb
jle
dec
fimuls
cmp
jl
cmpsb
or
cli
repnz
inc
aam
xor
jbe
filds
push
xor
push
movsl
or
dec
cmp
add
cs
in
pusha
in
xchg
and
xchg
cmp
jbe
shlb
jp
ret
int3
sbbl
inc
enter
out
push
hlt
ljmp
cld
cltd
cmp
cmp
ret
mov
outsb
fs
add
es
sbb
inc
cltd
testl
jecxz
mov
cmpsl
dec
movsl
call
mov
xor
shrb
icebp
sbb
fidivrs
stc
or
or
cmp
xchg
ds
push
ss
test
cmp
out
lahf
cmp
sbb
outsb
ret
leave
xor
into
mov
aam
mov
sbb
iret
mov
xorb
daa
push
lret
pop
xor
mov
jns
cmpsb
push
repz
ret
negl
iret
js
jne
sbb
jl
divb
loope,pt
insl
jecxz
arpl
cmp
mov
imul
add
cmp
add
pop
cltd
or
adc
or
int3
inc
scas
push
scas
sub
mov
lahf
mov
add
mov
xchg
ds
int
mov
add
xor
add
mov
push
mov
loope
mov
pop
ret
dec
ljmp
movsb
ret
rorl
shl
jmp
lret
xchg
cli
icebp
mov
fiadds
fists
pop
push
xchg
push
clc
adc
jnp
shrl
xchg
xor
aas
les
fcompl
sbb
xchg
mov
jl
dec
and
call
mov
bound
int
sbb
aam
scas
or
bound
cltd
or
add
xchg
lock
rcl
add
inc
stc
mov
mov
shl
data16
mov
sbb
pop
or
mov
bswap
aaa
das
mov
mov
mov
ds
dec
out
popa
fcmovu
jmp
loopne
aam
push
mov
xchg
dec
call
fndisi(8087
mov
push
ds
mov
aad
inc
decl
pop
fwait
adc
mov
cmpsb
dec
mov
mov
decb
mov
xor
push
pushf
cli
popf
jo
mov
and
lock
addr16
test
imul
mov
and
push
mov
mul
pop
mov
mov
mov
loop
fdivrl
outsb
decb
je
repnz
andb
fwait
aad
add
and
aaa
cmp
pop
std
mov
jge
test
cmpl
pop
or
jle
jnp
cmc
xor
jno
sub
mov
enter
xlat
test
cmp
dec
pop
cltd
aas
jle
push
dec
sub
imul
xchg
mov
movntps
divb
jb
rorb
js
mov
add
mov
cmp
loope
jl
rorl
jnp
and
cli
inc
xchg
push
popl
jae
xor
testl
mov
cmpsl
dec
addr16
inc
cmp
jp
cwtl
jge
dec
shl
repz
movsb
jae
dec
and
addr16
stos
aam
push
mov
test
fwait
into
gs
lods
int3
pop
loope
in
inc
cld
xor
mov
insb
inc
push
cmpsb
inc
mov
test
shlb
mov
in
or
cmp
mov
lret
repnz
sub
lea
aas
daa
fists
pushf
jmp
or
pop
xchg
xchg
mov
cmp
or
sbb
or
into
shll
sbb
nop
jnp
ja
cwtl
inc
mov
mov
jbe
stc
fcompl
or
cltd
pop
mov
rcl
push
jmp
testl
imulb
lods
scas
mov
xor
push
popf
mov
rorb
ds
or
sbb
fdivl
test
in
js
cmp
adc
repz
scas
add
cmpsb
cli
ss
push
aam
xchg
and
add
pop
fcompl
cmp
jl
mov
dec
int3
or
pop
inc
sub
xor
pop
pop
xor
dec
sahf
jne
hlt
jo
daa
dec
cmp
mov
dec
inc
mov
push
jbe
mov
jmp
faddl
icebp
les
or
dec
mov
dec
dec
dec
es
dec
stc
mov
jle
jge
adc
xor
cmc
xchg
mov
xchg
pop
rolb
rol
ljmp
out
das
or
add
inc
cmc
stos
inc
or
std
fsts
testl
dec
xlat
sub
movsb
lea
cmp
sub
cmp
pop
icebp
cs
pusha
mov
inc
subb
nop
out
xor
daa
dec
dec
shlb
in
call
cmpsl
movsl
repz
and
sbb
and
repnz
push
adc
imul
dec
cltd
add
adc
stc
aas
sub
cmp
aaa
jecxz
cmp
in
push
cltd
adc
scas
scas
cld
pop
in
test
mov
std
popa
ret
jbe
or
orb
test
sbb
fimull
sub
xor
cmpsl
pop
mov
repz
sub
aam
testl
out
jno
in
cmpsl
out
push
and
or
test
ret
lahf
cmp
add
mov
jg
mov
lahf
out
dec
repnz
mov
and
fdivrl
js
loop
or
mov
mov
push
dec
loopne
dec
lret
movsb
orb
and
cld
xor
mov
jnp
inc
not
aad
mov
stos
sbb
mov
mov
inc
lods
xchg
xchg
out
mov
cli
push
fsubs
sahf
sub
sbb
mov
aas
push
mov
shll
jb
push
jne
sbb
fs
cltd
xchg
mov
into
call
neg
jne
jns
and
sbb
or
xchg
test
push
shlb
ljmp
add
lock
xchg
dec
out
mov
fldcw
xor
and
shrb
mov
aas
shll
cmove
pop
rcll
or
test
jno
sub
icebp
dec
test
or
jnp
xchg
and
sub
pop
js
add
mov
mov
mov
mov
cs
insl
addr16
xchg
xor
insb
es
fwait
mov
rolb
mov
rolb
or
int3
nop
sub
pop
shll
sbbb
insb
notl
mov
mov
fldenv
les
inc
mov
adc
in
andb
das
jecxz
mov
lds
cmp
loop
bswap
aaa
cltd
ret
fidivs
call
fs
add
xchg
cmp
push
mov
inc
scas
dec
mov
orl
xchg
in
jnp
fstl
cmp
xchg
xchg
rcl
xor
push
iret
sub
test
loop
sti
jp
mov
mov
cld
cmp
pop
stos
inc
and
xorb
cmp
lock
jmp
xor
cmp
sbb
pop
out
mov
ficoml
data16
fwait
mov
or
fsubl
into
add
pop
mov
cmp
fisttpl
sub
inc
repnz
insb
orl
and
mov
repz
outsb
mov
mov
xlat
int3
andl
push
out
mov
mov
jp
sub
xorw
sub
into
orb
cmpl
mov
xor
mov
cmp
jne
mov
jmp
mov
imul
push
scas
xor
push
clc
adc
pop
push
push
std
imul
add
or
xor
adc
sbb
shll
add
loop
xchg
ss
push
movsl
adc
fldcw
cmpl
sub
push
dec
inc
dec
sub
iret
xlat
into
leave
add
mov
mov
pop
sbb
sub
pop
mov
mov
icebp
inc
int3
dec
lret
xchg
jge
mov
push
adc
dec
ljmp
aaa
dec
push
mov
mov
aas
in
jecxz
adc
push
fbstp
or
inc
lock
jmp
and
mov
push
sbb
mov
push
cmp
jmp
sbb
mov
repz
scas
and
sub
repnz
or
incl
push
sbb
hlt
mov
arpl
es
rolb
mov
into
mov
stc
sub
wrmsr
popf
insl
and
adc
mov
int
and
xor
mov
test
push
bound
jle
cli
cwtl
push
mov
sub
aas
adc
loope
xchg
xchg
test
mov
fcoms
decb
nop
out
sbb
loope
xchg
es
pushf
lds
add
mov
inc
push
out
inc
mov
sbb
sub
nop
mov
and
pop
sbb
lods
das
xchg
imul
sub
push
jns
sub
std
mov
push
cld
push
test
adc
dec
add
pop
ret
imul
stos
xchg
movsb
push
scas
loope
cltd
out
xchg
inc
pop
popa
fisubrl
pop
popa
aam
dec
mov
sbb
adc
adc
xchg
fwait
xor
mov
sahf
xor
dec
add
mov
das
or
enter
fwait
cmc
cmp
adc
xor
inc
push
movsb
mov
and
pop
notb
and
fdivr
pusha
inc
jmp
insl
mov
jmp
cltd
mov
test
pop
xchg
cmp
jno
js
and
repz
sub
das
sub
sbb
sub
scas
inc
push
mov
jo
loopne
das
jg
insl
mov
xor
or
push
popa
push
sub
ret
sbb
ja
rcrl
or
and
sbb
dec
loopne
cmc
xchg
xchg
dec
iret
xlat
mov
sub
stos
sub
inc
sbb
xor
sbb
out
loopne
xchg
cld
xor
hlt
mov
out
xor
sub
push
outsb
push
pushf
stc
es
mov
push
call
push
jp
mov
aas
adc
cmpsb
das
push
adc
js
adc
jne
loopne
daa
outsb
aam
mov
out
popf
add
push
jge
hlt
pop
int
inc
mov
mov
stos
jnp
push
sarb
push
divl
cmp
cltd
into
sub
mov
push
pop
and
adc
mov
test
fcmovnb
scas
nop
lcall
pop
shlb
mov
adc
push
sub
xor
mov
fisttpl
lea
stc
daa
mov
out
cmpsl
xlat
std
and
mov
test
shlb
in
shlb
rclb
lahf
adc
out
orb
push
pop
xor
cltd
pop
xor
mov
notb
cmp
stos
xor
ja
pop
filds
and
cltd
push
fucompp
fcomi
fs
pop
adc
cmpsb
aad
pop
cmpsl
lods
pusha
adc
mov
pop
repnz
xor
divb
imulb
insl
mov
xchg
cmp
jb
push
cmp
call
jnp
aam
mov
xor
jp
cwtl
movsb
in
push
push
mov
pop
add
add
inc
mov
fistl
and
inc
enter
and
or
sbb
pop
sbb
push
pop
in
flds
pop
icebp
rol
xchg
sub
out
xchg
mov
iret
cmc
xchg
movb
add
shl
cmp
ljmp
in
sbb
fsubrl
sbb
js
cmc
push
pop
pop
outsl
push
or
sbb
mov
push
jecxz
ljmp
in
adc
movsb
iret
sbb
lret
push
movsl
inc
or
sti
outsl
add
ret
popa
xchg
sub
dec
idivb
repnz
inc
rcrl
stos
add
test
jmp
inc
push
and
fcoml
rcrl
and
std
imul
and
mov
leave
cmp
ds
pushf
cmp
push
push
adc
popf
iret
aad
push
out
jge
cmp
or
in
pop
cmp
outsb
test
fld
cmpsb
adc
out
xchg
inc
insb
nop
xor
mov
in
push
jne
jle
mov
fisubrl
fnstcw
jne
dec
sbb
shll
test
mov
repz
aam
sbb
arpl
sbb
add
mov
cmpsl
pop
je
int3
test
shll
movsl
inc
mov
jae
dec
fs
lods
add
and
mov
inc
push
sarb
rol
cmp
test
push
icebp
fisubs
sbbb
loop
jecxz
ds
das
lea
les
sub
das
cmc
pop
dec
das
cwtl
sbb
lret
sar
sub
xor
test
fcmovne
mov
add
push
aam
ja
jl
arpl
mov
xor
outsl
adc
pop
dec
lock
fstp
xchg
xchg
jno
add
dec
pop
jge
repnz
add
ljmp
or
cmp
jmp
pop
fstpl
movsl
xor
lret
sub
lock
je,pt
adc
shll
mov
mov
scas
xchg
cmp
jne
inc
xor
aad
mov
inc
cmpsb
clc
pop
stos
sbb
push
mov
mov
and
fsubrl
ss
insl
test
xchg
mov
cmc
lret
lods
int3
add
mov
add
jl
jnp
insl
test
ret
or
xchg
inc
repz
inc
push
dec
ja
testl
sbbl
cmp
adc
or
fisubs
and
push
ja
sub
or
mov
pop
cs
idivb
arpl
out
inc
or
test
push
mov
mov
mov
mov
xor
shl
mov
mov
xor
jmp
dec
lds
stc
or
loopne
daa
ss
aad
adc
push
clc
adc
jne
jae
and
dec
push
sub
daa
lods
jmp
push
rcrb
pop
cmp
xchg
in
fdivrl
and
push
mov
mov
sbb
int3
loop
xchg
in
out
mov
xchg
neg
and
test
dec
stos
into
scas
inc
aas
xor
jecxz
ror
pop
lods
shrb
sbbl
cli
jg
mov
mov
enter
decb
lds
stos
scas
mov
sbb
jg
adc
fcmovbe
mov
repnz
or
movsl
frstor
pop
cmc
cld
outsb
lds
imulb
inc
ss
incl
adc
enter
pop
scas
movsl
int
mov
mov
sbb
and
lods
add
xor
xlat
fisubl
sub
dec
das
add
imul
orl
mov
fdivrs
fdivrs
jns
sbb
insb
adc
adc
cmp
mov
cmp
shrb
stos
pusha
sub
jg
add
mov
push
lods
cmpsb
popa
stc
push
in
pop
mov
sub
dec
sub
ret
push
outsb
mov
jl
insb
dec
imul
add
je
repz
mov
icebp
fstps
xchg
rorb
or
rol
mov
loop
out
add
ret
xor
dec
inc
mov
int3
pop
je
imul
dec
jg
add
cmp
mov
nop
out
add
xchg
and
negl
pop
mov
sub
pop
push
mov
cwtl
mov
inc
clflush
and
xor
dec
push
aas
xor
insb
pop
in
in
and
mov
nopl
jmp
std
movsb
inc
xor
adc
in
loop
arpl
adc
add
fwait
sahf
cli
pop
push
push
cmp
push
gs
pop
jl
ret
dec
inc
rcrb
dec
adc
popf
in
mov
insb
fs
push
xchg
cmp
push
sbb
cmpsb
loope
push
mov
push
mov
outsb
mov
testl
lahf
mov
fchs
jne
push
das
mov
cld
cmp
inc
es
inc
sub
lods
pop
out
inc
lcall
sbb
add
sub
out
bound
jae
dec
notl
outsl
adc
pop
movsb
mov
pushf
or
sbb
test
add
and
hlt
ja
movsl
clc
jmp
add
mov
cmp
cmpsb
push
pop
out
push
xchg
fdivrl
insl
pop
pushf
jmp
stos
or
rcr
mov
mov
lret
adc
iret
xor
xchg
adc
xor
cmpb
jnp
inc
inc
daa
out
xchg
or
std
push
shlb
call
in
sub
cmp
adc
enter
pop
and
jg
fmul
and
pop
xchg
pop
push
inc
into
pop
fsubrs
mov
jns
bound
aad
cmp
lret
into
push
arpl
cmpsb
les
out
cs
sti
push
mov
test
ficomps
in
sbb
hlt
les
ljmp
enter
push
and
push
dec
mov
jne
popf
mov
mov
hlt
imul
stos
sub
mov
dec
mov
cmp
stos
push
icebp
lcall
cld
fsub
mov
or
gs
mov
push
or
pop
mov
enter
cmp
push
lock
cmpsl
cmp
xchg
mov
sbb
sbb
or
aam
lcall
or
xchg
add
scas
mov
lret
inc
dec
out
rolb
sarb
pop
cld
mov
sarb
mov
int
popf
dec
mov
cmp
fimull
sbb
cmp
out
out
pop
xor
repnz
cltd
add
xchg
xchg
inc
push
sti
mov
sbb
fidivrs
push
xchg
je
and
push
sub
lcall
mov
inc
sub
test
imull
ljmp
push
jg
inc
dec
inc
sbb
add
ljmp
popl
sub
into
fldt
loopew
daa
push
add
dec
insl
cmp
mov
jb
fmul
loopne
into
push
out
inc
lods
mov
pmaxsw
shll
jbe
adc
or
cwtl
adc
jo
jge
xor
addl
aad
lcall
dec
in
xor
rcll
bound
add
add
adc
jecxz
cs
add
adc
sub
xchg
mov
movsl
xchg
std
fcmovnb
push
lahf
mov
scas
test
faddl
ret
popa
jno
aad
push
xlat
dec
outsl
push
mov
in
js
cs
sbb
clc
jo
or
or
in
sub
into
cld
lret
mov
lret
mov
and
inc
in
dec
inc
daa
jp
ljmp
ss
sbb
sub
ret
fisttps
xchg
fisubs
pop
jecxz
push
mov
in
push
repz
in
ja
inc
arpl
and
aaa
sub
gs
mov
out
jne
fs
in
inc
fadds
mov
insb
sub
dec
negb
pop
jnp
cs
mov
repnz
xchg
and
fincstp
xchg
sub
dec
sub
and
jmp
in
xchg
sbb
cltd
dec
add
or
ss
dec
xchg
pop
int3
inc
dec
mov
test
addr16
lods
stos
jp
xor
add
fcompp
push
adc
add
mov
imul
add
mov
rorl
adc
out
daa
dec
lret
dec
cli
sub
xchg
push
mov
das
inc
icebp
cmp
iret
sbb
shl
popw
ret
test
mov
test
lahf
clc
test
leave
outsb
push
xlat
or
hlt
fsubr
outsl
cwtl
popa
inc
dec
cmp
fs
push
pushf
shlb
mov
fisubl
lcall
lods
fwait
stc
lods
lea
mov
mov
jmp
cmpsl
sbb
jbe
es
sbb
cmp
adc
adc
push
clc
adc
mov
jnp
jmp
xchg
sub
je
mov
ds
sbb
xor
jb
dec
cmpsl
jp
outsb
mov
aaa
inc
test
jbe
and
add
in
xor
lahf
cmp
les
push
data16
stc
lret
fwait
push
dec
adc
or
mov
mov
sub
ljmp
mov
or
fimuls
adc
push
jo
notb
and
es
loop
sub
movsl
adc
leave
cltd
aas
push
loopne
jb
aaa
stc
mov
push
fadds
ljmp
fisttps
cld
in
inc
push
ds
ljmp
or
scas
jno
daa
add
jae
jmp
lahf
jns
lret
push
mov
mov
sahf
and
and
xor
movsl
jae
mov
sub
jns
in
lret
lods
bound
sub
push
lea
mov
lds
ljmp
mov
and
idivb
xchg
ljmp
scas
sbb
cmp
inc
ss
ret
mov
rcr
imull
cltd
mov
jle
ret
icebp
xchg
xchg
xchg
sbb
out
jno
push
sbbb
call
mov
rcrb
inc
inc
or
fs
mov
cmp
out
xchg
lret
clc
std
lods
mov
jae
movsb
inc
es
std
dec
js
into
nop
dec
inc
scas
push
loope
faddl
mov
ss
push
mov
push
xor
mov
cmp
stc
push
jl
bound
inc
orb
and
movsl
cmp
pop
fs
ret
ds
icebp
jns
lods
fisttps
in
in
and
frstor
mov
push
lcall
fwait
lret
jg
lea
inc
push
dec
pushl
xchg
pop
xor
push
push
out
adc
or
int3
fcoml
es
adc
sbb
xchg
mov
inc
arpl
and
push
fs
repnz
lcall
mov
jne
popa
jnp
ja
cmp
push
sub
inc
lea
stos
mov
or
xchg
daa
inc
jbe
mov
xchg
cmpsb
jp
xchg
nop
inc
aad
xor
mov
jae
pop
cmpsl
mov
pop
cli
data16
mov
xor
and
imul
add
testb
scas
jg
sahf
pop
rolb
fdivrl
mov
js
mov
mov
adc
out
push
mov
inc
leave
pushf
in
mov
aad
jno
xchg
loop
pop
inc
cwtl
and
out
clc
out
int
sbb
lods
loop
into
icebp
std
push
scas
jge
fidivrl
scas
dec
loope
iret
inc
roll
cld
out
push
fisttpll
sub
rcrl
inc
cmp
push
repz
mov
fbld
jge
call
mov
jns
pop
js
iret
cmp
lods
leave
in
jle
and
sub
inc
dec
push
pushf
jno
shlb
data16
imul
shlb
test
mov
mov
push
ret
mov
test
sub
scas
jno
push
mov
pop
push
mov
cmp
aam
xchg
sub
test
push
sub
lds
sti
sub
js
shl
dec
lods
cli
in
dec
scas
pop
push
testb
mov
xchg
cs
test
dec
aam
mov
sbb
lret
mov
xor
repnz
sahf
repz
sub
jge
mov
popf
dec
xchg
sbb
xor
adc
shrl
shrb
xor
or
adc
xor
ret
jmp
mov
cmpl
cmp
adc
ret
clc
out
fidivs
sbb
test
jns
jo
repz
fistpl
sub
ss
pop
pop
stos
bound
repz
xor
rcr
into
sbb
pop
mov
jnp
push
outsl
das
mov
sub
sub
or
lods
sub
adc
mov
or
jb
mov
push
test
add
push
popf
ja
adc
jb
sbb
fmuls
fwait
sub
dec
test
clc
call
out
ja
mul
fdivrl
movsb
adc
adc
in
outsb
jns
nop
xor
popf
outsl
loop
dec
mov
adc
in
dec
in
shll
ljmp
out
sub
arpl
mov
inc
mov
push
push
mov
adc
ja
pop
add
jecxz
mov
ret
push
psubsw
sbb
ret
mov
sbb
fwait
adc
bnd
mov
xchg
andl
loope
mov
ficompl
lcall
or
scas
repnz
push
sub
pop
outsb
jno
cmp
pop
mov
adc
out
ret
sbb
cmp
sti
movsb
fs
outsl
cli
hlt
iret
pop
xlat
push
pushf
dec
fisttps
or
test
dec
mov
pop
movsl
xor
pop
or
jae
sub
and
iret
aas
push
push
popa
rorl
stc
and
xor
in
addr16
fwait
test
mov
movsl
insb
pushf
es
daa
mov
out
jmp
enter
sbb
sub
mov
mov
in
push
in
cwtl
lcall
clc
outsb
push
mov
mov
mov
xor
dec
jne
or
hlt
or
lds
cwtl
iret
pop
ss
adc
enter
inc
mov
mov
inc
insl
dec
cmp
jp
inc
add
add
fnsave
clc
sti
enter
lcall
fsubr
push
test
inc
nop
jle
cmp
inc
inc
sub
dec
shlb
inc
ljmp
shll
fnstenv
xor
dec
in
aaa
jns
mov
nop
pushf
pop
hlt
mov
dec
sub
vucomisd
pusha
dec
pop
ret
stos
and
jne
adc
push
mov
jge
outsb
out
cmp
and
jecxz
fldcw
mov
cmpsl
push
dec
lock
ret
in
jge
pop
pushf
jl
cs
xchg
or
push
call
cli
push
push
shll
in
inc
jbe
bound
insl
inc
idivb
ret
mov
push
mov
add
jle
push
test
xchg
addr16
enter
adc
jmp
mov
or
mov
mov
push
jmp
adc
outsb
mov
mov
ja
inc
push
push
adc
push
clc
adc
fidivl
push
inc
mov
adc
xchg
stos
jae
test
mov
call
jmp
dec
mov
mov
mov
ds
lds
es
iret
jp
jb
dec
loopne
stc
xor
mov
pop
push
mov
mov
popf
xchg
inc
xchg
hlt
inc
outsl
xor
popf
jae
nop
aas
enter
pop
and
adc
sbb
pop
jp
sub
dec
cmp
andb
mov
aam
push
and
pop
mov
rorl
pop
pop
loope
mov
shr
iret
lret
loop
and
pushf
pop
movsb
dec
cmc
push
test
and
div
lcall
out
pop
xor
mov
sub
nop
push
lock
push
xchg
sbb
pop
jle
jb
mov
mov
pop
xor
leave
pop
loop
jmp
mov
ds
jmp
jb
dec
and
xchg
push
push
outsb
cli
test
or
cmp
outsl
push
and
push
pop
and
cmpsb
xor
pop
aam
xor
sbb
adc
loope
cmc
push
divb
fcoml
fcomp
div
jno
sbb
bound
lret
jl
icebp
stos
push
cmp
xchg
mov
add
inc
lahf
xchg
sahf
mov
dec
sub
pop
pop
mov
ja
in
iret
jge
into
test
insb
mov
adc
ret
lods
fs
sbb
fld
clc
sub
out
leave
sbb
int3
xchg
mov
lret
jle
sub
mov
andb
push
mov
lds
repnz
dec
cmp
lret
lea
movsl
cmpsb
mov
jg
lret
mov
adc
jmp
push
add
stos
xchg
xchg
movsl
xlat
dec
adc
ljmp
xor
adc
sti
mov
call
hlt
movups
and
movsl
clc
ljmp
push
test
pusha
push
pop
jo
jmp
aam
arpl
sahf
mov
cmp
mov
push
inc
or
and
adc
lret
mov
shll
clc
push
cwtl
in
mov
mov
jle
xchg
add
cmp
in
push
push
jl
cmp
rcr
mov
mov
mov
xchg
pushl
in
fldenv
adc
jbe
pop
in
sbb
dec
adc
mov
cs
adc
int
ss
add
pusha
in
shlb
or
test
int3
pop
lahf
or
fs
dec
jne
cmpsb
cli
movsb
adc
pop
je
ss
das
shlb
jle
push
mov
sub
pushf
lock
dec
addl
and
out
xor
popa
adcb
and
xchg
sub
stos
xchg
leave
test
data16
into
mov
jle
inc
ja
lods
mov
mov
jecxz
ret
cmp
popf
clc
jmp
mov
ljmp
push
mov
mov
push
pop
pop
add
or
int3
lcall
daa
repnz
pop
data16
movsb
mov
cmp
rcll
mov
mov
ds
repz
mov
xor
lds
push
dec
stc
test
mov
imul
in
mov
add
sub
testl
mov
loop
subb
push
call
cmp
push
mov
andl
data16
push
jmp
mov
cmp
test
daa
das
aaa
cltd
push
add
lahf
xchg
loopne
fucom
insb
call
add
mov
sub
clc
aam
xor
adcl
or
pop
jae
xchg
mov
dec
sbb
leave
test
in
adc
cltd
ja
pop
and
ror
std
or
and
adc
call
insl
stc
cltd
aaa
pop
test
sub
xchg
xchg
addl
push
dec
lahf
dec
dec
vphsubwd
hlt
stos
in
stos
sub
add
mov
push
push
jl
nop
mov
sbb
shll
inc
sub
add
add
test
and
add
cmp
enter
arpl
pop
lret
mov
gs
int
daa
in
pop
idivl
adc
add
mov
jbe
push
nop
in
mov
mov
das
inc
pop
xchg
in
sub
iret
push
nop
xor
and
movsb
scas
xor
push
imul
mov
push
jne
cmp
add
inc
jge
loopne,pt
nop
and
pop
sbbl
popf
xor
std
lret
enter
stc
dec
arpl
stc
enter
incb
lcall
mov
push
fcmovu
xchg
fdiv
rcrb
push
mov
push
ljmp
mov
daa
adc
rol
aas
popa
pop
pop
imull
dec
lea
xchg
ljmp
hlt
inc
lcall
sbb
adc
sbb
dec
pop
stos
js
mov
shll
sbb
adc
pop
aaa
popf
xchg
filds
push
fbld
mov
pop
addb
movsb
xchg
sbb
outsb
scas
jns
mov
pop
das
subl
inc
stos
mov
sarb
stos
enter
pop
mov
push
cs
cli
dec
xchg
data16
nop
test
stos
std
xchg
fmull
xchg
stc
xchg
lcall
inc
cmp
inc
push
ret
stos
gs
xchg
cs
xchg
mov
insl
xchg
pusha
jl
arpl
repnz
or
dec
pop
icebp
hlt
push
and
mov
add
shll
ds
out
ljmp
mov
xchg
inc
push
popa
dec
lea
in
rcrb
add
xchg
sarb
push
xchg
sbb
sbb
mov
mov
mov
pop
lret
pop
and
scas
bound
mov
xor
mov
adc
sbbl
adc
jo
xchg
push
cmp
jae
pushl
jmp
add
mov
inc
insl
inc
pop
push
cmc
aam
xchg
inc
adc
push
clc
adc
xor
pop
push
inc
dec
cmc
sbb
pop
repnz
push
add
or
filds
pushf
adc
arpl
or
je
mov
es
pop
les
xchg
jg
cmp
mov
stc
mov
pop
loopne
pop
pop
xchg
into
add
jae
jge
inc
pop
xor
lret
and
fdivrs
fucomp
popf
cmp
call
dec
lods
inc
aam
inc
pop
sarb
xchg
or
pop
test
xor
jmp
mov
imul
cmpsb
adc
xchg
stc
mov
pop
insl
xor
mov
imul
inc
and
iret
inc
insl
aaa
shrl
or
movsl
out
or
popa
jmp
aas
scas
sub
inc
cli
stc
lds
and
ja
mov
sub
mov
movsl
insb
xchg
aad
mov
lcall
sbb
imul
jo
out
mov
enter
adc
push
enter
jmp
enter
inc
jbe
aaa
cmpb
jg
fldcw
in
movsb
mov
outsb
ret
push
xchg
add
inc
bound
sub
dec
test
mov
jb
loop
mov
nop
cltd
adc
pop
mov
jmp
adc
movsl
adc
mov
shl
mov
pop
push
movsl
jnp
mov
mov
jmp
or
incl
lret
bound
push
pop
sub
in
mov
add
lods
adc
adc
jne
xchg
jns
out
and
adc
sahf
push
xchg
jae
mov
negl
push
xlat
pushf
push
cwtl
cmp
and
popf
cmpsb
popa
dec
dec
inc
push
xor
sbb
pop
sub
mov
jp
aaa
cmp
xchg
ret
cmp
mov
cmp
scas
gs
dec
repnz
xchg
push
fnstsw
fsubr
sbb
sahf
out
pop
or
mov
push
cmpsb
jne
inc
daa
sub
inc
lret
lods
jg
push
in
adc
daa
ss
insb
ret
test
cld
hlt
sub
fadd
cmp
mov
stos
mov
mov
stos
xor
rcrb
mov
enter
mov
inc
or
sarl
sub
call
lds
enter
in
call
xchg
les
mov
enter
scas
sub
cmpb
or
adc
lock
mov
lods
mov
cmpsl
nop
sub
mov
pop
jge
imul
mov
add
jle
wbinvd
fdivl
movsl
test
push
bound
lcall
mov
mov
push
or
push
dec
jo
decl
filds
lock
lock
mov
ret
xor
mov
shlb
push
dec
xor
aas
cmp
negl
adc
dec
sbb
fnstcw
ficoml
xor
les
and
jb
dec
das
mov
fwait
test
push
xor
std
test
xchg
dec
cmp
fistps
pop
and
and
xchg
adc
push
xor
gs
scas
imul
fdivl
sub
cmp
jecxz
in
insb
sti
jge
dec
lret
dec
lods
mov
pushf
mov
sti
mov
es
jg
daa
dec
jge
popf
mov
jmp
pop
js
outsl
fbld
push
lret
inc
add
inc
inc
adc
pop
mov
mov
push
add
sbbl
mov
pop
dec
push
stos
fcompl
ret
sti
or
lea
inc
xor
sti
imul
lods
mov
std
xchg
sub
cmpsl
add
add
lret
inc
jo
or
cmpsb
cmpsl
xchg
jmp
mov
shll
testl
pusha
mov
pop
cmc
push
inc
xorb
mov
rorl
push
adc
arpl
mov
vpminub
cmp
push
cld
xchg
jp
aam
inc
int3
popf
xchg
xor
icebp
pop
inc
inc
stc
push
push
add
sub
sahf
out
fidivs
mov
dec
dec
sub
mov
adcl
lods
push
insl
arpl
sub
xchg
or
popa
mov
or
mov
jb
mov
icebp
xchg
pop
pop
cmp
ss
mov
ret
sub
shlb
jg
sbb
add
or
and
mul
sbb
jmp
mov
pop
dec
xchg
es
movb
or
and
ljmp
mov
and
imul
shrb
push
adc
cs
inc
shl
je
repnz
mov
shlb
sahf
mov
add
push
xchg
out
daa
call
jb
cmc
jbe
adc
std
rcll
test
cmpsb
loope
jae
and
add
jle
adc
add
cmp
cli
xor
loope
sbb
jns
push
adc
mov
sub
out
in
in
lea
mov
les
pop
inc
mov
bound
lret
jmp
pop
lcall
xchg
and
adc
sub
mov
sub
push
xor
pop
dec
mov
cmpsl
dec
popf
jbe
or
or
repnz
lret
inc
mov
sbb
dec
inc
inc
mov
fdiv
inc
lods
adc
dec
mov
test
dec
lret
lods
fs
sub
dec
cltd
push
mov
es
push
xchg
inc
gs
adc
test
mov
sti
sub
aaa
sti
scas
or
mov
mov
loop
jo
jbe
fnsave
and
mov
aad
jp
ret
cwtl
jge
iret
std
setno
xor
fs
int3
mov
lcall
jp
ds
andl
clc
xchg
test
pop
mov
jg
cmpsl
scas
hlt
mov
jle
push
call
mov
mov
shrd
shr
shr
xor
push
xor
mov
mov
mov
push
push
push
call
shld
mov
xor
or
mov
mov
shl
or
xor
xor
xor
xor
mov
mov
jmp
mov
add
mov
mov
mov
mov
mov
mov
movzwl
cltd
shld
xor
mov
mov
shl
mov
mov
xor
mov
cmp
jne
mov
cmp
jne
movl
mov
movl
mov
movl
mov
movl
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
add
mov
mov
jmp
jae
jmp
dec
movsb
xchg
hlt
add
adc
clc
adc
mov
ljmp
mov
mov
sub
or
es
add
or
sbb
iret
and
xor
outsl
adc
das
insl
jge
xchg
lea
jnp
sbb
jo
sahf
jb
dec
lods
movsl
mov
pop
push
jle
xor
pop
nop
pop
mov
adc
lds
aam
mov
fcomip
mov
add
sti
adc
mov
mov
jno
xor
inc
adc
jnp
cmp
imul
ret
cld
pop
cmc
imul
cmp
mov
cli
data16
sbb
mov
out
outsl
lcall
dec
dec
jb
ret
add
adc
jb
out
mov
in
add
mov
push
xchg
add
xchg
xor
shlb
mov
jecxz
jg
rcrb
pushf
add
stos
sbb
cwtl
cmpsl
mov
jae
bound
sub
mov
jl
sub
or
push
push
pop
dec
push
mov
orl
lods
sahf
call
add
out
cmp
dec
lret
mov
fcoms
add
mov
in
adc
and
adc
rep
xor
add
andl
test
in
pop
cmp
jl
out
data16
mov
rcrl
mov
popa
ret
cwtl
lcall
aas
push
push
ret
xchg
stc
adc
sbbl
rclb
add
lods
stos
fucomip
movsl
inc
mov
add
inc
les
add
cmpsb
adc
mov
inc
mov
iret
mov
lods
jns
loope
cwtl
xchg
sbb
xor
stos
das
mov
cmp
lret
stos
ss
aad
push
mov
jg
xor
jbe
fs
or
rcr
inc
idivl
push
test
in
and
pop
push
inc
scas
ret
out
add
mov
ja
pop
push
mov
xchg
inc
pop
dec
fldcw
clc
xchg
cmpsb
in
cltd
sub
add
stc
into
sbb
nop
sub
call
int
mov
and
pop
cmp
pop
mov
push
stos
hlt
push
xor
insb
jge
jo
faddl
mov
sbb
and
xor
loop
clc
add
fcoms
ret
cli
mov
test
das
ljmp
cmp
jle
push
shrl
lahf
inc
fxch
jge
dec
fnstsw
fidivrl
push
mov
sub
in
dec
add
mov
gs
and
mov
push
jae
and
in
loopne
pop
loop
pop
add
cwtl
shlb
dec
dec
mov
icebp
dec
je
fnsave
mov
push
mov
pop
in
imul
xchg
xor
push
inc
stos
clc
sar
bound
dec
jg
movsl
push
push
testl
fldl
std
test
je
mov
push
push
sbb
cmp
pop
push
xlat
cltd
inc
xchg
ljmp
inc
in
sahf
rcrb
iret
mov
jmp
lret
push
rcr
ret
es
mov
int
icebp
jp
inc
gs
push
pop
push
imul
js
mov
repz
mov
test
shrb
and
sub
shr
shlb
push
fwait
imul
pop
lret
lock
xor
mov
add
scas
mov
loopne
push
xor
sahf
push
pop
jae
cs
mov
sahf
ds
sbb
cld
jle
inc
shrb
outsl
sarb
pop
pop
mov
or
dec
mov
fwait
or
frstor
jo
dec
push
scas
repz
push
add
mov
jle
leave
aaa
pop
or
testl
rorl
xor
push
xchg
pushf
mov
mov
sub
arpl
pop
test
add
cltd
inc
xor
pop
loopne
icebp
out
xor
setne
mov
addr16
pop
orb
lea
rsqrtps
in
cmpb
das
push
and
inc
and
mov
adcb
fs
push
mov
mov
inc
jae
es
cmp
push
popf
out
stos
sahf
inc
loop
jge
pop
push
in
daa
xchg
hlt
testl
cmp
cs
in
xor
xchg
mov
out
inc
inc
mov
lods
cmc
rcrl
aas
xchg
xor
jae
sub
add
mov
pop
or
xor
iret
add
inc
pusha
stos
out
lcall
rol
jne
lret
sub
jns
xor
inc
addb
shlb
push
xchg
inc
sbb
cld
inc
ds
lds
push
lcall
dec
pop
stos
add
cmpsb
or
push
push
into
inc
push
scas
decl
add
cwtl
lahf
cmc
aam
push
add
inc
cmp
cmc
xor
mov
andl
or
cmp
push
fwait
pushf
icebp
pop
rorb
iret
loopne
xor
sbb
sets
aaa
adc
or
mov
push
ljmp
sahf
push
stos
jne
or
jno
push
jns
cmpsl
xor
daa
out
aam
rolb
mov
lret
push
rorb
pop
mov
iret
dec
sub
ret
pop
dec
out
loop
xlat
xchg
mov
insb
cmp
popa
jno
cmpsl
push
addr16
sti
push
jo
push
push
mov
in
adc
pop
mov
scas
xlat
ss
pop
adc
rcr
mov
ljmp
scas
pop
jecxz
add
daa
dec
nop
mov
nop
sarl
insb
or
lds
sub
mov
mov
cmpb
mov
jge
add
inc
mov
enter
cmc
fldt
stc
bound
mov
arpl
add
cmpsb
or
add
xor
add
test
lods
lock
mov
sahf
call
nop
xchg
jmp
jmp
adc
arpl
push
and
lds
jg
subl
outsl
fimuls
inc
stc
xor
push
lods
enter
add
or
mov
push
add
lods
jmp
nop
cmp
push
add
mov
adc
push
clc
adc
add
sub
dec
les
or
ret
pop
inc
sbb
jp
test
lods
rorl
dec
lods
imul
jecxz
out
xor
dec
ret
mov
loop
int
lcall
movsb
icebp
in
int
mov
sahf
sub
pop
push
mov
aad
icebp
push
add
addr16
pop
or
inc
in
dec
sub
or
outsb
dec
jb
pop
mov
add
ljmp
lds
xor
fistpll
mov
fidivrl
inc
lret
fmuls
stc
pop
xchg
mov
ljmp
jns
add
or
xchg
adc
xor
sub
mov
test
add
sbbw
pop
xchg
je
jl
mov
jbe
sub
enter
in
es
cli
das
mov
aaa
call
in
push
addb
cmc
fdivl
fwait
pop
das
pop
dec
xor
mov
ficoms
cmc
push
xor
mov
jmp
and
mov
int3
mov
xchg
xchg
loope
aad
mov
and
movsl
inc
bound
push
push
lods
sbb
push
push
sub
jo
jnp
aas
or
push
fwait
dec
or
test
jns
ffree
out
jge
fldcw
rclb
dec
faddp
cs
fwait
sub
adc
push
in
inc
mov
test
cmc
mov
dec
xorl
xor
fdivs
into
lahf
mov
jp
mov
inc
mov
adc
fdivs
insl
sbb
mov
adc
pop
add
adc
cli
sub
lds
mov
loop
test
adc
mov
mov
xor
mov
rol
lea
push
mov
sbb
in
std
jnp
ret
out
mov
insb
sbb
sub
pop
push
cmp
xor
xchg
leave
and
sub
lds
incb
mov
xor
inc
or
push
xorb
test
mov
mov
lret
adcb
fs
aam
arpl
jle
data16
jae
sub
xchg
shlb
imul
or
push
fstpt
mov
and
sub
push
jecxz
icebp
inc
and
sub
les
push
dec
test
adc
or
push
mov
outsl
das
loop
cmp
pop
add
cs
fisttps
push
popa
cmp
mov
lret
jnp
in
stos
cmp
mov
sti
cmp
cwtl
enter
fwait
or
pop
fldenv
cld
pslld
cmp
jbe
notl
pop
jecxz
mov
cli
mov
lods
pusha
xlat
push
sahf
out
movsl
scas
outsl
stos
lret
or
push
mov
pop
cli
or
in
lods
push
or
out
cmp
icebp
lret
inc
aaa
jnp
sbb
dec
mov
or
and
pop
arpl
hlt
xchg
mov
arpl
rorb
mov
xor
pop
pop
adc
push
data16
mov
sub
and
repnz
data16
mov
es
push
repz
dec
xor
test
jp
data16
jno
sub
sahf
push
and
pop
add
jecxz
xlat
sbbl
dec
push
jle
xchg
jns
cmp
and
decb
inc
fwait
mov
push
mov
xchg
push
popf
pop
addl
jecxz
inc
and
push
in
mov
inc
icebp
out
pop
cld
jmp
insb
leave
pusha
lea
jl
push
test
test
ss
loop
insl
outsl
jmp
mov
call
cwtl
les
xchg
or
jo
pop
aam
xor
and
aam
out
jge
loopne
adc
xor
push
dec
jns
dec
mov
jnp
fwait
dec
mov
nop
lds
cwtl
dec
daa
aam
repz
scas
push
outsl
daa
shlb
leave
lret
cs
xor
in
into
test
push
jge
pop
addr16
cmpsb
mov
jp
sub
lcall
mov
or
repnz
bound
sahf
rcrb
adc
mov
lods
jl
outsl
mov
jbe
cmp
and
mov
mov
stos
stos
scas
insb
jo
adc
jae
mov
arpl
jno
decb
pushf
inc
je
mov
movb
pop
rolb
outsl
push
popa
xchg
sbb
jb
cmp
jnp
mov
lods
and
mov
add
jo
sub
rcll
mov
cmp
xor
mov
jge
imul
bnd
popf
xchg
cmpsl
sub
dec
scas
fwait
mov
clc
jle
sub
loope
aaa
inc
iret
jl
popa
xor
mov
das
leave
mov
ljmp
push
jg
jb
jp
and
roll
data16
add
sbb
ljmp
xchg
and
jecxz
adc
inc
sahf
mov
inc
dec
sti
push
dec
xchg
mov
xor
test
int
frstor
push
fcmove
rolb
adc
mov
cmp
addl
int
fstpl
je
mov
mov
popa
mov
mov
subb
aad
mov
adc
lods
aas
repz
xchg
xlat
pop
ret
repz
call
push
xchg
dec
cmp
jge
rorl
jle
fwait
shll
outsb
push
push
pop
imul
repnz
enter
ror
outsb
dec
lret
pushl
lea
sahf
and
fsub
dec
cld
mov
jo
lea
and
shll
cmp
out
stc
movsb
js
loop
enter
jb
out
cli
icebp
sbb
cmp
and
jnp
jb
jl
mov
push
sbb
test
cmp
push
push
jae
cmpsl
adc
loope
inc
ret
cmpsl
adc
in
and
inc
jg
mov
das
push
rolb
cmpsb
iret
mov
pushf
test
sub
push
sbb
fdivs
das
or
test
call
xor
or
mov
mov
xor
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
add
jmp
mov
push
pop
or
incl
push
or
push
clc
adc
in
push
dec
std
ljmp
sti
int
ss
push
push
cltd
das
out
lcall
int3
dec
and
dec
pop
sub
xor
pop
bound
cltd
push
inc
rcrb
jo
stos
jae
xchg
enter
shr
icebp
pop
or
mov
and
lock
inc
push
bound
xor
enter
xchg
push
dec
lcall
push
sub
leave
xchg
sahf
div
jno
jmp
xchg
in
inc
in
mov
out
inc
cmpsb
xor
push
jecxz
mov
in
call
clc
push
sbb
data16
xor
lahf
mov
pop
loope
fisttpll
add
and
fcom
adcl
sbb
push
lods
neg
xor
add
pop
loop
insb
fildl
insb
lds
fcoms
jp
jp
ds
fistl
popa
add
mov
shll
insb
mov
and
jnp
outsl
subb
sbb
aas
aam
mov
sub
inc
mov
add
xor
test
inc
push
sub
repnz
test
jne
mov
icebp
ss
lret
dec
arpl
adc
mov
cld
std
shlb
in
loop
mov
push
fst
xlat
std
mov
or
stos
or
add
adc
jl
stos
nop
gs
push
lcall
test
leave
fwait
dec
into
mov
mov
push
mov
loope
inc
mov
pop
ficomps
aas
pop
inc
lea
xor
push
jl
push
ret
loopne
test
cmp
je
test
mov
int
mov
stc
xchg
pop
aaa
inc
cld
mov
test
xchg
pop
jno
xchg
xor
or
dec
xchg
rol
movsb
xchg
popf
push
in
jno
jns
add
ret
mov
pop
push
cmp
sti
pop
mov
dec
in
ljmp
fidivs
popf
push
aas
or
out
or
pop
cli
mov
mov
rol
shlb
mov
dec
scas
rolb
popf
in
mov
sub
rcl
sub
xchg
repz
rclb
xchg
ret
xor
lods
cwtl
xchg
nop
mov
cmp
dec
rorb
add
mov
fs
mov
sbb
or
shl
loopne
imul
push
je
idivl
adc
notl
push
nop
iret
mov
pop
hlt
xor
enter
pop
int3
loopw
push
cmp
outsb
xchg
insb
sub
pop
sub
lea
or
inc
sub
cmp
mov
push
sbb
push
push
arpl
iret
bound
repz
xlat
in
xor
por
add
ja
stc
loop
int3
push
mov
out
sub
aad
cwtl
pop
dec
pop
xor
lock
lahf
sub
ljmp
arpl
icebp
mov
inc
notb
clc
loopne
movsb
hlt
sahf
pop
dec
push
pop
flds
movsb
sahf
mov
ret
push
aam
mov
xor
movlps
js
xchg
mov
sti
xchg
sbb
cmp
pop
cs
add
or
mov
out
fadd
int
data16
pushf
jmp
je
ds
mov
lret
lret
daa
in
and
dec
fldt
int3
dec
dec
mov
loope
addr16
cmp
sti
cmp
scas
mov
rol
mov
scas
enter
mov
adc
cs
enter
test
jnp
negl
xchg
fwait
mov
imul
sbb
ss
fisttpll
in
imul
cmp
je
push
adc
dec
xchg
pushl
sbb
loop
into
out
in
mov
and
pop
icebp
das
xor
cmp
stos
lds
loopne
sarl
ret
pop
outsl
jb
add
jae
cld
cs
add
and
push
cwtl
rclb
inc
stos
fmull
xor
roll
sahf
or
ret
cltd
dec
add
or
mov
sub
repz
dec
addr16
and
mov
xor
imul
int3
sub
mov
insl
inc
js
imul
dec
cmp
xchg
mov
pusha
icebp
inc
mov
dec
fisubrl
inc
or
pop
lea
pop
pop
or
lret
ljmp
mov
inc
lret
loopne
inc
scas
inc
or
or
data16
jb
fnstenv
fmuls
mov
inc
push
inc
loop
add
jp
push
xchg
addr16
xor
push
cmp
jge
gs
mov
jo
cmp
pushf
stos
add
cmp
add
enter
inc
out
push
pop
out
xor
movb
and
mov
inc
stos
adc
out
xchg
jno
popl
dec
arpl
lods
pop
das
es
fnstsw
call
loop
addl
jns
nop
xor
out
or
and
mov
enter
stos
sbb
sbb
mov
mov
ljmp
sbb
mov
pop
jle
adc
adc
or
push
add
repz
pop
mov
cmpsb
sbb
mov
leave
jno
sub
dec
dec
xchg
jmp
aas
iret
or
xor
test
in
nop
pop
imul
push
scas
aas
loopne
or
cmpsl
lock
ret
addr16
insb
cmpsb
bnd
jle
sbb
lock
push
test
or
mov
add
fisubrl
aas
inc
push
mov
or
stos
adc
jge
call
daa
xchg
xlat
xor
push
arpl
push
push
mov
fwait
jge
mov
es
and
loop
xchg
lcall
add
mov
inc
dec
aam
inc
push
loopne
mov
ljmp
enter
push
inc
push
iret
or
outsb
xchg
mov
sub
push
pop
shrl
sbbb
shll
ja
add
xor
mov
mov
xchg
lods
sbb
mov
mov
ja
movsl
fisubrs
mov
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
jmp
loopne
rcl
mov
mov
sub
fcmovu
xchg
cli
adc
clc
adc
movsl
ficoml
sub
pop
test
bswap
push
jns
test
dec
fcoms
mov
sub
xor
fwait
lahf
outsb
loope
jae
sbb
mov
pop
pop
test
lcall
xchg
test
xchg
mov
and
mov
insb
fstpl
jns
ljmp
mov
and
push
mov
repnz
push
in
adc
xchg
xor
das
mov
loopne
cmc
int
xor
cmpsl
dec
cmp
lcall
daa
outsb
nop
popf
add
rorb
dec
sbb
jp
mov
pop
mov
aad
sbb
mov
xchg
int3
ficoml
xor
cltd
cmp
pop
and
xorl
xchg
xchg
test
test
dec
pop
and
xchg
sub
or
sti
xchg
dec
stos
adc
push
mov
push
fs
out
adc
and
push
insb
sub
subl
les
outsb
stc
cmp
mov
pop
test
negl
add
inc
mov
lret
mov
or
cmp
divl
orps
mov
or
stos
xchg
fisttpl
mov
out
dec
outsb
cmpsl
int3
push
cli
mov
xlat
cwtl
xchg
mov
inc
mov
xor
jl
mov
push
dec
ret
add
xor
in
inc
jae
pusha
push
fldt
adc
lods
mov
xchg
pop
xchg
cmp
push
xor
jl
lds
mov
insl
pop
fidivrs
imul
push
inc
hlt
mov
movsb
repz
stos
cmp
ror
mov
add
cmp
int
push
inc
dec
jo
data16
aas
jns
xchg
imul
sub
call
mov
jge
inc
xchg
sub
jae
aaa
sub
push
je
mov
xlat
add
sub
or
push
adc
inc
xor
push
sub
sub
std
or
loopne
cvtps2pd
jmp
outsl
cmpb
xor
sub
jo
ret
das
insl
push
inc
dec
push
jg
sbb
inc
repnz
sbb
shll
popa
or
dec
cmp
sti
xor
stc
sbb
mov
xor
or
sar
xchg
add
cld
cmp
jmp
addb
dec
mov
lcall
imul
jne
divl
mov
pop
push
pop
mov
add
and
or
arpl
ljmp
fstpt
mov
ret
clc
repnz
cmp
popa
or
movsb
adc
push
inc
fwait
lcall
push
stos
sbb
fwait
sub
sub
in
inc
cmp
cmpsb
or
jge
punpckldq
movsb
jmp
mov
clc
jo
push
rcrb
mov
js
mov
fcoml
popf
jl
dec
inc
inc
push
int
inc
or
and
sbb
mov
imul
jmp
adc
test
cs
or
les
int
inc
inc
mov
pushf
js
aas
push
adc
hlt
xor
mov
xchg
xchg
bt
scas
pop
mov
out
jnp
mov
jle
jecxz
cs
outsb
out
and
in
outsl
outsl
add
addr16
add
inc
adcb
sub
adc
pop
dec
and
imul
mov
cmp
movsl
jns
in
cmpsl
iret
fildll
mov
pop
sub
lods
in
mov
pop
out
mov
cmp
mov
fnsave
xorl
adc
fcmovnu
dec
jge
dec
and
pop
and
lods
outsl
jge
mov
xor
mov
mov
jge
andl
push
pop
sbb
push
inc
add
pop
mov
test
fadd
pop
ja
pushf
frstor
bound
xchg
dec
adc
fmull
or
xchg
stc
sub
inc
insb
sbb
enter
mov
loopne
lahf
sub
mov
add
in
sahf
pusha
iret
mov
push
mov
push
sbb
mov
lcall
mov
push
mov
test
stos
xorb
adc
fmul
inc
dec
cmp
mov
je
enter
jbe
ds
sub
sub
aad
fsubr
cmp
mov
or
pop
or
arpl
fs
sbb
scas
fwait
aaa
into
and
adc
les
mov
out
iret
pushf
xchg
imul
test
adc
push
push
sbb
xor
jns
iret
aad
mov
adc
mov
mov
dec
fcoms
and
sub
aas
add
cli
push
jne
fbld
scas
jno
and
ss
jbe
frstor
xchg
rcrb
lock
cmp
sbb
cmc
pop
jl
aad
mov
or
xor
push
jb
mov
dec
pop
insb
iret
lods
in
inc
lcall
test
scas
mov
xchg
sub
lret
pop
imul
push
and
lcall
clc
pop
test
jle
subb
inc
in
mov
jp
mov
xchg
ljmp
int
xor
cmp
jp
movsl
xchg
ret
push
test
lds
mov
or
loope
scas
ss
xchg
les
mov
in
ja
fs
mov
mov
pop
ror
pop
sbbl
sbb
sbb
das
mov
mov
pop
add
addr16
sbb
jp
fmul
inc
or
pop
hlt
shll
cwtl
cltd
sub
push
dec
test
test
mov
sahf
lea
mov
in
clc
push
mov
push
push
insb
test
push
xchg
repnz
pop
ud1
mov
test
jecxz
stos
jo
mov
addb
cwtl
sbb
in
jns
push
arpl
movsl
inc
and
movsb
orb
repz
into
cld
pop
scas
jno
push
inc
mov
mov
loop
in
add
aaa
lds
scas
mov
or
mov
mov
shrd
shr
mov
mov
xor
xor
jmp
xchg
hlt
rol
xor
mov
add
in
adc
clc
adc
mov
in
add
pop
subl
add
shlb
sub
sub
mov
imul
inc
dec
pop
mov
xchg
stos
rolb
mov
inc
pop
js
push
stos
aaa
je
mov
nop
adc
add
scas
push
in
enter
test
dec
lcall
xor
hlt
push
repnz
sbb
push
std
mov
and
ror
cwtl
xchg
jecxz
daa
outsl
push
out
in
es
push
out
pop
mov
ret
dec
xchg
mov
mov
mov
aaa
hlt
clc
mov
cwtl
mov
aaa
ds
adc
pop
adc
pop
aam
cmp
rcl
sub
push
dec
mov
arpl
mov
cmpsb
jb
out
xchg
xchg
and
stc
adc
jecxz
push
sub
testb
or
ret
sub
repz
fwait
mov
mov
in
es
add
ds
les
lock
daa
mov
push
outsl
test
dec
jl
jecxz
call
data16
gs
ffreep
lods
jae
xchg
sahf
fistl
xor
lds
xchg
xlat
mov
cmp
jecxz
ss
lahf
mov
fsubs
aam
adc
xchg
ficoms
pushf
stc
xor
fisubl
std
repnz
hlt
mov
gs
in
les
and
mov
mov
push
fcompl
sbb
xchg
fmull
mov
inc
out
dec
pop
daa
idiv
mov
aam
jmp
dec
jmp
js
jno
adc
or
sub
mov
pop
push
clc
xchg
mov
mov
jge
loopne
jmp
mov
es
stc
xorb
aad
jne
cmpsl
decb
out
sub
popf
test
jnp
cmp
push
push
jno
je
sbb
icebp
dec
push
out
orb
push
stos
int
repz
mov
adc
sub
movb
dec
movb
mov
lea
or
jnp
imul
fwait
out
shl
adc
aas
add
lods
arpl
mov
pop
addr16
xor
pop
mov
in
cmp
xor
aaa
sub
jge
or
pop
inc
xor
add
jge
rcrl
mov
ret
mov
mov
shll
add
xor
inc
setp
sub
shll
fchs
es
mov
push
clc
mov
push
cltd
popf
pop
stos
movsl
add
int
mov
repnz
or
jecxz
cmc
repz
lock
les
jns
cmpsl
adc
imul
sbb
aam
jb
cwtd
and
hlt
cmc
dec
and
shrl
inc
pop
lock
xchg
inc
dec
frstor
arpl
dec
and
adc
pop
js
mov
popa
je
int
int
testl
dec
rcrl
or
push
fbld
dec
mov
lock
fmull
inc
jb
xchg
data16
data16
cmc
mov
pop
cmp
jecxz
daa
mov
out
adc
fistpll
adc
adcl
adc
in
push
add
mov
arpl
idiv
jbe
dec
incb
xchg
and
fistl
inc
imul
pop
cmpl
pushl
jg
inc
mov
out
sbbl
xor
mov
aad
ss
xor
out
add
push
ret
dec
and
cmp
add
and
dec
jle
push
xchg
mov
adc
gs
mov
adc
mov
call
sub
arpl
push
sub
jne
daa
movsb
movl
aaa
cmpsb
hlt
or
repnz
stc
or
cmp
xor
or
sub
pop
in
mov
mov
repnz
sub
adc
in
jno
mov
dec
aad
push
push
shrl
mov
push
sti
loope
les
outsl
iret
cmp
and
inc
cmp
mov
or
cld
jmp
mov
lds
pushf
stos
and
or
aad
adc
int
push
out
es
jmp
xchg
add
arpl
sbb
add
pop
jecxz
leave
movsb
push
mov
mov
lret
cmc
xor
pop
add
stc
mov
rcrb
dec
lods
xor
mov
jmp
add
ss
xchg
pop
push
popf
xchg
aam
loope
repnz
sub
xorb
mov
lods
jns
cmp
das
ficompl
or
fs
sub
dec
push
dec
pop
adc
data16
cmp
inc
bound
xchg
push
pop
pop
push
test
push
pop
and
int3
or
xor
pushf
xchg
add
push
cmp
or
jno
bound
xor
rcrl
lahf
sub
rolb
adc
add
jle
lds
mov
nop
sahf
jge
cmp
std
idivl
arpl
icebp
add
cmp
out
inc
lds
or
xor
add
xchg
fstpt
mov
es
pop
push
imul
mov
and
es
cmp
add
popa
out
jo
mov
fimull
cmpsb
mov
shll
pop
dec
jb
iret
and
add
popa
movsb
loop
scas
jp
dec
and
sub
xlat
and
das
mov
sub
and
inc
lods
shll
jo
cmpsl
jns
or
scas
aas
movsb
in
data16
mov
push
push
mov
xor
shll
mov
mov
fidivs
sub
push
sahf
push
mov
sub
xchg
mov
scas
pop
xchg
fstpl
in
in
aaa
pusha
aaa
mov
adc
and
popa
jge
lods
addl
adc
push
sahf
xor
sbb
inc
test
push
mov
test
out
shlb
iret
push
in
xchg
in
and
fildl
xor
ljmp
and
shl
mov
mov
mov
shrd
shr
mov
mov
jmp
jecxz
fstl
inc
xor
mov
fists
adc
clc
adc
fcmovu
roll
and
mov
outsl
mov
or
stc
lods
cmpsl
mov
push
xchg
push
jecxz
or
dec
push
cmpsl
divl
sbb
stc
pop
dec
int
mov
hlt
popf
rcll
mov
sarb
loopne
pop
and
int
arpl
stos
pusha
test
int3
xchg
cmpsb
xorb
movsb
cmp
and
lcall
push
mov
je
jnp
pop
icebp
aam
pushf
mov
ficoml
cs
ja
neg
ret
fmul
mov
cld
push
dec
mov
push
sbb
dec
add
dec
jge
addr16
lret
jg
sub
xchg
and
push
ljmp
test
dec
dec
jns
adc
xchg
call
mov
jbe
loop
movsb
aas
outsl
pop
incb
aas
aas
movsb
xor
sub
xchg
dec
sub
jo
sub
mov
push
add
inc
xor
xchg
mov
and
out
pop
shlb
out
pop
cmp
lods
cmc
rcr
sbb
xor
jecxz
mov
push
fucomp
rolb
mov
or
lcall
dec
std
add
or
and
mov
divl
shl
sbb
fiadds
dec
xlat
imull
cltd
xor
xchg
repnz
repz
ror
pop
mov
adc
movsb
cli
jbe
sub
mov
out
sbb
rolb
dec
sbb
or
rclb
or
ja
pop
fisubrl
dec
jp
ja
pushf
cmc
mov
or
enter
jmp
sbb
push
push
push
inc
sbb
jne
add
arpl
or
iret
or
pop
add
in
add
std
mov
mov
mov
aad
aad
inc
mov
ja
or
testb
mov
dec
call
clc
xor
loopne
aad
and
movsb
pop
pop
jg
popl
stc
cld
les
stos
out
mov
mov
out
sub
add
push
xchg
dec
imul
add
mov
inc
in
pop
xchg
pcmpeqb
or
fcompl
cmp
scas
push
xor
inc
shl
mov
shr
jg
dec
or
mov
les
std
mov
pop
imulb
sbb
xchg
cmpsl
xor
int
adc
jns
add
aam
into
das
cmpsb
push
dec
push
int3
push
fisttpl
fisubrl
add
das
out
cwtl
push
mov
xchg
sahf
jmp
pop
mov
push
aad
call
mov
in
icebp
not
xchg
sub
loope
ret
cmpsb
push
push
das
push
cmp
sbb
das
jb
mov
dec
xchg
daa
movsl
mov
mov
mov
in
lods
hlt
xchg
sub
test
outsb
cld
push
pop
stos
nop
cmp
fnstenv
push
pop
lds
ret
push
sahf
pop
out
loop
jno
pushf
sbb
pop
imul
cmp
lcall
fxch
sub
inc
cli
scas
gs
sub
cmp
clc
addr16
mov
adc
xchg
xchg
push
push
xchg
sbb
in
stos
inc
jno
div
fildl
mov
mov
jp
inc
sbb
out
cmc
in
sub
sahf
mov
sub
jns
rol
sbb
aad
lds
push
sbb
push
cmpsl
inc
rclb
gs
cmpl
daa
jge
jge
testl
jno
std
insb
mov
mov
mov
push
and
jle
mov
cmp
dec
push
push
ljmp
mov
inc
mov
pop
sbb
addl
out
mov
push
push
cmp
cmp
or
jne
outsb
mov
outsb
and
sub
xor
ficoml
cmp
push
or
outsl
xlat
xor
sbb
mov
sbb
mull
mov
xor
jno
mov
and
sub
cwtl
jae
mov
mov
addr16
cmpb
ret
loop
adc
push
or
vandpd
enter
stos
push
pop
fs
stc
mov
pop
aad
fdivrs
xor
test
out
jns
pop
xchg
lds
pop
sub
mov
xchg
jg
jne
mov
testb
and
pop
je
out
sub
out
mov
pop
xchg
dec
add
std
pop
pop
xchg
sbb
shll
push
xor
add
adc
pop
popa
cmp
in
dec
stc
sti
and
negb
loop
inc
jmp
add
dec
lods
arpl
mov
out
mov
and
fdivrs
das
ds
push
and
jns
fsubs
popf
cmp
out
push
adcb
idivl
or
outsl
icebp
mov
and
movsb
xor
and
ss
ljmp
jb
addb
and
popf
sysret
inc
or
test
mov
sub
and
shrb
fistpl
sub
enter
push
popa
icebp
mov
shlb
aad
and
inc
mov
insb
mov
add
lds
lret
cli
test
int3
lret
sbb
cmp
movsb
pop
fsubs
cli
push
or
sub
insl
push
ljmp
jae
sbb
pop
js
and
and
paddsw
testl
stos
ja
repnz
jns
dec
aas
lret
rorl
mov
xor
jbe
dec
into
mov
rcr
std
cmpl
orl
lods
lods
in
adc
fdivrs
ds
adc
ljmp
or
dec
dec
lahf
and
retw
vpsubb
inc
mov
js
ret
testl
aam
insb
leave
sbb
orb
cmc
adc
mov
call
pushf
cwtl
icebp
sub
xchg
repz
inc
inc
mov
add
fsubrs
xchg
pop
pop
lods
shlb
fsubrs
sub
add
mov
pop
imul
sti
sub
and
xor
and
sbb
xor
shl
xor
or
mov
mov
add
mov
mov
shrd
xor
shr
mov
mov
shl
jmp
pop
mov
push
or
pop
in
fistpll
jecxz
adc
clc
adc
fistl
dec
sub
imul
aam
add
ss
pop
or
lods
jl
mov
xchg
pop
and
add
cmp
popa
mov
lret
out
outsl
out
inc
xchg
jbe
or
popl
aad
decl
inc
cmp
lret
jo
mull
inc
js,pn
sbb
mov
push
pop
jo
sbb
mov
xor
popf
dec
sbb
inc
lds
rcrl
push
scas
repnz
or
es
test
xor
adc
adc
in
sub
or
xlat
add
scas
or
xchg
xchg
ds
das
push
fiadds
movsb
or
imulb
ljmp
mov
lret
sbb
sub
test
aam
dec
xchg
mov
jne
imul
adc
inc
mov
jae
adc
popf
mov
fsts
cltd
imul
insl
pop
fidivs
ljmp
outsl
mov
sbb
lock
test
stos
jo
dec
fisttpll
cs
sub
sub
or
cli
mov
fwait
dec
jns
push
lret
inc
loope
push
add
mov
lahf
in
cmc
xchg
mov
push
popf
sbb
xchg
pop
push
mov
das
popa
and
cwtl
xchg
insb
adc
push
mov
cld
stos
data16
mov
iret
movsb
cmc
or
pop
inc
xchg
outsl
or
or
out
loope
outsl
lock
iret
mov
dec
fbld
jne
mov
push
push
jecxz
jg
fwait
jnp
je
dec
test
xor
insl
mov
inc
or
add
sbbl
mov
addb
cmpsl
or
push
sti
cmp
sti
push
movsl
inc
dec
push
fildll
ljmp
imul
add
jne
shl
and
sub
dec
jl
std
push
mov
sbb
test
push
repz
dec
and
pop
and
pop
movsl
push
jmp
mov
out
lret
ret
imul
xor
mov
das
add
add
sbb
or
fcmovnb
sub
sbb
popf
xor
push
xor
adc
roll
pop
cwtl
lea
sti
stc
pop
push
enter
test
addl
xchg
sbb
mov
aaa
leave
leave
and
call
test
push
and
cmp
fdivs
rcl
shr
ret
mov
cmp
je
or
xchg
jno
hlt
ret
or
push
fildl
orl
js
fstpt
sub
dec
sbb
aas
jle
mov
daa
test
popf
jae
pop
cli
and
fsubrl
inc
xor
sub
jb
in
fadd
mov
shll
jmp
inc
movsl
lea
push
pushl
push
adc
xlat
sti
shrb
xor
mov
mov
ljmp
es
in
sbb
jecxz
mov
adc
xchg
add
xlat
xchg
pop
negb
ret
test
push
pop
or
stos
mov
gs
and
jno
loop
mov
test
rorl
mov
insb
xor
jne,pt
ret
pop
xlat
jmp
cmp
pop
lret
test
xor
xor
jne
movsb
stc
das
sbb
stos
inc
aad
sbb
imul
dec
mov
hlt
loop
xor
jle
jle
pop
mov
mov
mov
xchg
sub
jmp
push
movsl
and
adc
loop
ficomps
cmp
ds
push
inc
nop
push
jp
and
adc
pop
or
mov
cmpsb
push
mov
xchg
xor
add
or
cmp
pop
cmpsl
mov
lock
mov
test
add
and
lods
inc
int
lret
jo
jl
aas
mov
inc
xchg
cli
mov
jge
fsubrl
cld
jnp
jns
push
pop
popf
jo
cmpsb
pop
inc
lods
sti
push
xchg
push
sbb
mov
and
mov
andb
xor
pop
out
cs
fisubl
add
add
inc
ja
cmpsb
xlat
icebp
lret
repnz
in
pop
inc
jge
cld
cmc
push
jbe
fdivp
adc
mov
sbb
jmp
insl
mov
pop
clc
je
scas
lods
or
mov
in
fistpll
ret
fwait
mov
rclb
sbb
fs
or
testl
mov
sbb
or
loop
cld
mov
bound
addb
add
dec
xor
sbb
jle
test
xchg
out
loope
push
inc
fstl
rorl
or
push
lea
sti
dec
inc
pop
rorl
fisttpl
dec
mov
sarb
bound
pop
mov
stos
cmp
add
sub
in
cmp
add
jbe
xchg
xchg
pop
aad
push
out
inc
mov
ss
sti
jmp
fwait
notb
mov
aam
stc
mov
das
push
lret
lds
inc
xchg
mov
and
in
sub
xor
fisubl
mov
cmp
int
and
inc
add
sbb
pop
addb
rcrb
jno
dec
imul
cmpl
mov
adc
fstpl
jno
jbe
movsb
xchg
push
aam
repnz
sub
dec
sbbl
movsb
pop
inc
mov
push
add
ss
and
cwtl
add
mov
pop
into
jns
lods
cmp
mov
lea
mov
test
rcll
cmp
in
mov
adc
stc
mov
sbb
and
pusha
mov
or
mov
dec
repnz
lods
notl
sbb
xchg
lds
mov
icebp
insb
inc
into
in
sarb
xchg
call
add
sbb
negb
fdivrs
xorl
mov
cmpsb
pop
jne
scas
adc
cmc
ljmp
push
test
xor
push
sbb
sbb
jns
add
movsl
inc
add
in
imul
enter
ret
int3
add
shrd
xor
shr
mov
mov
xor
or
mov
jmp
xor
mov
push
and
mov
jnp
cs
xchg
aad
adc
clc
adc
loop
and
test
sub
stc
xor
inc
jg
idivb
jae
adc
mov
mov
sti
dec
jbe
inc
inc
fwait
dec
ljmp
adc
pop
ss
clc
out
sub
ds
adc
and
stc
jle
loope
pop
fstpt
pop
mov
add
mov
lahf
jo
test
jae
jno
scas
addr16
psubsb
jne
adc
push
shrl
and
seta
sub
sti
dec
mov
ret
sub
sub
fdivr
pop
movsl
cmpsb
jbe,pt
xchg
jecxz
pushl
dec
lret
pop
xchg
xchg
testl
and
push
inc
cld
ficomps
dec
mov
repz
mov
lods
in
ljmp
pop
sbb
shrl
lcall
decl
jae
fsubrp
pushf
ret
mov
nop
lock
push
xchg
mov
cmp
lods
push
add
jmp
mov
sub
or
fbld
aad
xchg
lods
pop
jae
xor
xchg
hlt
jg
adc
mov
adc
mov
rolb
mov
mov
in
cs
test
add
jb
lcall
pop
ret
adc
mov
inc
rcl
stc
outsl
mov
sbb
jl
pop
adc
outsb
pop
movsl
push
add
jbe
pusha
lret
jge
cmpsb
fists
mov
pop
cli
sub
scas
jns
inc
dec
jge
pop
sarb
stos
clc
mov
shll
pop
mov
clc
jnp
xchg
movsb
mov
rcr
ja
lock
scas
push
test
out
sub
scas
xchg
push
scas
mov
xor
lds
lods
ret
popa
hlt
sbb
push
or
cmp
xor
add
dec
pop
and
ds
mul
or
iret
jg
shlb
dec
test
inc
inc
pop
inc
pop
movsl
mov
and
ss
jns
test
jl
cmp
fsubrl
or
or
pop
dec
push
xor
pop
cwtl
js
lods
outsb
mov
aaa
out
ss
add
mov
or
cmc
lds
or
mov
cmpsb
add
call
push
pop
scas
jb
test
mov
xor
in
push
sbb
gs
ret
gs
popa
pop
mov
inc
xchg
mov
enter
stos
movsb
cld
test
ret
pop
xor
dec
and
imul
mov
pop
lods
mov
xchg
xor
xchg
cmp
testl
lock
or
mov
shrb
or
insb
aam
jl
out
xor
xor
inc
push
mov
push
rsm
arpl
shr
ss
push
sti
mov
cmc
mov
mov
inc
add
loopne
pusha
mov
adc
lret
fwait
xchg
pushf
ljmp
cmp
add
inc
jnp
jo
xchg
cmc
or
hlt
mov
insb
mov
lret
cmp
lret
xor
xor
imul
bswap
movsb
in
leave
push
es
test
and
int
cltd
das
and
test
aas
push
xchg
push
mov
xchg
icebp
fists
cmp
lock
leave
xchg
fistpll
adc
mov
mov
cwtl
cmp
imul
cmpl
fidivs
popf
or
mov
xor
out
rcrb
stos
and
cli
lods
arpl
mov
scas
inc
insb
jbe
fisttps
in
jp
stos
jns
insb
pop
mov
mov
push
xchg
cmp
mov
rcr
cmp
aas
outsb
scas
push
mov
jg
dec
imul
cmc
inc
pushf
adc
adc
into
fsubp
outsb
pop
stc
in
add
inc
imul
clc
into
xchg
cmp
pop
fxch
mov
jno
push
jmp
and
fistpl
jg
scas
xchg
dec
and
or
jns
adc
jmp
jecxz
xor
ds
xorb
xor
jge
adc
out
lods
push
pop
divb
iret
sahf
jo
incb
push
in
cmp
xor
popf
xor
int
jle
pop
dec
xchg
popa
push
adc
icebp
bound
daa
int3
rorl
mov
fcomps
les
cmpsb
push
sub
mov
out
or
pop
mov
pop
cmpsb
inc
add
ss
and
sub
sbb
mov
lock
out
mov
add
mov
jp
push
pushf
repnz
add
stc
inc
mov
lods
ficomps
add
xchg
push
cmp
lds
cmpl
xchg
mov
jne
imul
lea
lret
mov
xor
jae
dec
mov
loop
inc
addr16
push
dec
inc
in
sub
dec
lods
mov
lcall
stos
or
loop
or
mov
mov
push
pop
push
lock
cli
mov
or
lds
jne
pop
and
neg
es
sub
adcb
cld
ret
sub
shll
pop
movsb
mov
pop
les
mov
data16
outsl
adc
pop
jge
test
sti
decb
hlt
out
cwtl
cmp
ljmp
mov
sub
rolb
mov
lods
mov
sub
jne,pn
subl
jbe
add
insb
out
xacquire
or
pop
adc
popf
sub
out
ror
adc
add
aaa
repz
push
out
mov
push
loope
fwait
sub
fmuls
ds
mov
mov
dec
xchg
lret
push
cmp
loop
imul
fisubl
inc
cmpb
push
hlt
fisubl
rorl
fsubrl
push
jp
bound
or
cmp
inc
call
std
imul
sbb
mov
pop
and
mov
cmp
repnz
add
shrl
je
dec
leave
pop
push
repz
jne
mov
fadds
stc
xchg
push
mov
in
inc
jb
fldl
rcll
loopne
fdivrs
mov
mov
shl
shl
mov
mov
xor
xor
mov
mov
jmp
popf
scas
add
mov
aaa
shlb
adc
clc
adc
loop
mov
xorl
mov
mov
cmp
rclb
cmp
negl
cwtl
adc
cltd
dec
aad
mov
lods
mov
icebp
pop
inc
push
loop
inc
ljmp
gs
jp
ljmp
movsb
push
inc
lock
data16
and
xchg
test
cmpb
stos
jns
arpl
or
adc
imulb
mov
cmp
insl
adc
inc
mov
nop
jno
jbe
push
xlat
stos
in
shll
or
push
sub
mov
cwtl
mov
test
mov
or
mov
xlat
lcall
fcoml
mov
inc
cltd
lods
int3
call
lods
movsl
and
mov
shrb
je
bound
push
mov
addps
mov
dec
rcrb
push
inc
jno
fcoml
xor
adc
sar
lds
lods
js
inc
sub
sti
cmpb
add
push
scas
cs
xchg
mov
jae
xor
pop
mov
rol
adc
je
sub
jo
cmpsl
xor
jnp
dec
or
insl
mov
dec
scas
out
pushw
data16
scas
jecxz
xor
fst
loop
gs
xor
sahf
pop
mov
dec
inc
dec
add
jnp
sbb
std
cwtl
cmp
mov
and
faddl
jle
and
out
cmp
in
das
addr16
mov
ja
or
arpl
shrl
int3
test
repnz
cmp
es
inc
cmp
es
push
lret
mov
pop
cmp
fdivrl
xorb
adc
rol
les
push
or
inc
jg
shlb
out
lea
ret
xchg
push
insb
sbb
mov
mov
rcrb
insl
xor
outsb
mov
add
int
push
je
mov
mov
mov
dec
jg
iret
hlt
shrb
insb
stos
sub
push
dec
mov
fucomip
add
dec
rcll
fstpt
loop
jb
jns
sbb
pop
adc
mov
and
and
inc
aas
mov
je
sub
insl
loopne
fsubs
jae
push
pop
andb
psllq
add
test
pop
fists
dec
lds
test
jbe
sbb
xor
sub
in
js
aam
and
sti
mov
pop
sbb
mov
xchg
std
xchg
add
or
out
shr
sarl
loope
mov
fisttpl
aam
aad
out
xchg
and
cltd
mov
inc
jbe
ja
cmp
inc
mov
xlat
addr16
mov
jno
adc
mov
sar
xor
adc
aam
data16
loop
xchg
add
adc
cltd
ja
inc
pop
aaa
sbb
test
ljmp
ja
cmp
call
fstpl
shll
and
stos
push
test
or
dec
rorb
xlat
xchg
xor
clc
adc
xchg
mov
and
movsl
push
repz
pop
mov
pop
sbb
shlb
je
or
xchg
fcmovnu
jp
pop
std
stos
add
mov
mov
je
push
dec
pop
xchg
scas
sahf
xchg
push
leave
add
dec
pop
std
repz
fcoml
push
daa
pop
pop
mov
jg
pop
cli
jns
repnz
push
shlb
arpl
sar
repz
pop
and
inc
arpl
daa
sub
jo
or
flds
sub
stc
pop
ja
xor
or
push
xor
push
shl
mov
shrb
clc
inc
aas
push
add
mov
dec
cmc
push
jp
sbb
movsl
les
lds
rcll
add
popf
xchg
cmp
shll
pop
or
aam
inc
fldenv
inc
rcrl
negl
add
leave
data16
or
xlat
inc
insb
daa
popl
cmpsb
add
mov
cmp
das
adc
mov
or
push
xchg
cmpsl
les
mov
cli
push
xor
sbb
nop
push
pushf
call
mov
mov
inc
loopne
fildll
pop
je
test
fcomip
ret
sbb
xchg
adc
sbb
cmp
push
cltd
sbb
xchg
pop
jmp
insl
int3
rcrb
sbb
xchg
std
aas
andb
iret
push
sbb
mov
mov
fsubp
stos
and
sti
aaa
repz
lahf
inc
xor
jl
lods
movsl
adc
fisttpll
popa
int3
ss
icebp
jecxz
jae
cmp
mov
out
mov
pusha
push
pusha
cwtl
push
inc
sub
cmpsl
imul
arpl
sbb
leave
sahf
pop
in
cltd
daa
mov
sub
les
push
inc
imul
fsts
pusha
pushl
aaa
xchg
imul
negb
add
adcb
sub
mov
outsl
ret
xchg
outsb
call
dec
movsl
lret
das
arpl
adc
adc
and
or
out
push
mov
mov
sahf
pop
lahf
pusha
das
in
aad
jg
bound
xor
roll
push
jl
int3
cs
dec
pop
and
xor
adc
int
enter
lret
push
xor
aaa
aam
mov
lret
adc
mov
insb
xchg
je
inc
negl
subl
inc
jbe
xchg
les
mov
test
orb
hlt
mov
xchg
jno
in
repz
or
add
or
xchg
inc
sbb
pop
adc
xchg
es
fldenv
mov
call
leave
pop
dec
push
daa
into
sub
mov
imul
gs
pop
push
andl
ret
mov
aas
or
push
inc
xor
mov
je
jbe
enter
pop
mov
push
fwait
mov
lods
enter
fs
fdivrp
push
push
sbb
fs
mov
aaa
scas
lods
xchg
outsb
fidivs
jns
movsl
sub
pop
cmp
inc
inc
xlat
xor
shrd
shr
or
xor
or
jmp
lea
cwtl
sbb
sbb
cmp
adc
clc
adc
jecxz
jg
jg
pop
aad
jle
cli
mov
add
jp
cmp
mov
test
in
jnp
xchg
push
dec
jne
aas
std
test
cmp
inc
scas
adc
pop
fnsave
lods
dec
int
dec
pop
icebp
rcrb
xchg
testl
mov
push
inc
mov
jne
mov
gs
and
push
mov
dec
iret
les
jns
cmc
sbb
xchg
daa
ret
subl
push
or
movsl
lret
sub
push
fwait
loope
sahf
mov
and
movsl
sahf
mov
jg
cmc
mov
insl
xchg
jns
and
add
or
dec
add
sub
pop
lods
test
xor
negl
mov
add
sbb
rcrl
jnp
mov
sub
jnp
nop
xlat
lret
jnp
push
and
cli
mov
es
jae
jns
add
ds
andl
push
xor
sahf
pop
or
mov
ret
lea
repnz
add
sub
addl
mov
sub
pop
dec
pusha
roll
fcomi
test
push
mov
lret
push
jmp
pop
mov
mov
mov
xlat
popa
xor
lahf
push
or
scas
fucomp
and
ret
dec
and
pop
lahf
lea
mov
or
dec
or
mov
xor
ljmp
sub
jno
shll
push
call
cli
xchg
adc
movsl
dec
lahf
fcmovnbe
cmp
repz
leave
sbb
jns
push
mov
out
scas
nop
and
xor
pop
and
jmp
in
cmp
sub
dec
repnz
pop
sub
mov
jns
dec
lds
sbb
inc
insl
out
xlat
dec
push
cmp
lock
cmp
push
mov
outsl
adc
add
push
sbb
cmp
cmc
push
mov
in
test
cmp
xor
and
mov
mov
mov
mov
pop
fadd
mov
dec
xchg
lock
jbe
inc
push
enter
cmp
add
and
inc
pop
imul
loope
rcrl
mov
mov
daa
jno
repnz
inc
jge
rcl
dec
sbb
dec
fstl
jp
mov
imul
and
repz
outsb
mov
adc
repz
test
xchg
iret
adc
fsubp
adc
mov
rcrl
jle
fisttpll
clc
mov
dec
dec
mov
and
xchg
lcall
or
fildll
pop
scas
js
test
fstpl
fcoms
lret
movl
in
cmpl
stc
scas
dec
call
pushf
xchg
cltd
or
test
lea
mov
sbb
mov
cmc
insl
or
out
and
and
dec
xchg
and
mov
sbb
push
mov
nop
lahf
std
adc
mov
jnp
sub
inc
je
mov
pop
int
add
push
lret
insb
mov
sbb
push
cwtl
add
mov
mov
lods
mov
push
mov
mov
cmp
mov
icebp
imul
jl
inc
jno
test
lret
insl
das
jbe
out
xor
or
sbb
ljmp
cmp
fisubl
jns
daa
add
and
cmp
adcl
rorl
add
xor
fistps
jge
lret
push
xchg
arpl
xchg
pop
or
test
jl
daa
fdivs
lds
dec
int3
shl
cmpsl
test
jle
dec
push
mov
lods
sti
hlt
adc
addl
mov
and
icebp
and
or
jnp
divl
call
add
fldenv
push
mov
pop
lret
loop
das
jne
sbb
das
mov
dec
nop
sub
mov
pop
in
movb
add
inc
mov
inc
or
ja
sarb
adc
xchg
fnsave
pop
xor
xor
addb
pop
ss
xor
add
jle
xorl
push
mov
shll
je
push
shlb
add
movl
mov
leave
add
add
scas
pop
idivb
ficoml
pop
pop
sti
in
out
jne
xchg
je
xor
mov
xor
mov
cmp
bound
sarb
jnp
xchg
aad
lret
rclb
dec
mov
xor
jle
cwtl
add
jo
rcl
ret
ja
cmp
mov
es
jno
sbb
mov
inc
mov
add
adc
sbb
or
shll
fbld
mov
rolb
movsl
xor
adcl
rorl
mov
pop
sbb
xorb
mov
jnp
inc
adc
and
in
add
jmp
mov
cmp
push
xchg
add
pop
das
jnp
sbbl
arpl
inc
lret
push
xchg
fcomi
inc
aaa
or
inc
mov
and
test
push
out
and
pop
pop
ja
cmpsl
movsb
xor
fistpll
fisubrs
pop
dec
aad
insb
pop
fwait
mov
adc
bound
and
pushf
insb
movsb
loopne
inc
push
out
pop
cmp
xor
dec
adc
aas
aaa
cld
ds
fsubrs
out
push
push
mov
xor
fiadds
and
mov
pop
and
sbb
movsb
jno,pn
stos
imul
adc
popf
and
inc
fwait
mov
adc
pop
adc
es
add
xor
mov
js
adc
lods
sub
fcomps
push
repnz
cmp
popf
ja
inc
scas
xchg
gs
lcall
int
inc
push
cwtl
je
push
lret
jmp
test
bound
cli
cmc
lret
or
adc
nop
mov
out
sub
movsl
xor
mov
outsl
sub
sti
pusha
mov
sbb
jns
mov
sti
mov
push
mov
mov
mov
xor
shl
xor
jmp
dec
fisubs
dec
dec
push
out
xchg
repz
add
fwait
adc
clc
adc
lods
mov
push
or
jns
in
jbe
cmc
jns
lock
pop
jmp
dec
inc
sbb
addl
rcrl
jns
mov
pop
xor
in
dec
sahf
xchg
clc
mov
or
fdivl
add
sbb
jmp
xor
push
pop
or
or
push
mov
mov
insl
daa
mov
cmp
cmp
sbb
xchg
outsl
jnp
push
xchg
out
mov
rorb
stc
push
aad
xchg
in
cmpsl
popf
das
adc
ffreep
fiaddl
js
pop
pusha
jns
ljmp
movsl
pop
std
fnop
adc
inc
cmp
loop
insl
idivb
rcl
pop
fstpl
jecxz
cmpsb
cmp
repz
xor
mov
pop
inc
pop
pop
add
gs
xchg
pop
push
fisttpl
das
outsl
rcrb
das
mov
push
lock
add
mull
fimuls
cmc
shlw
mov
shll
push
insb
iret
mov
scas
mov
add
sub
push
mov
out
dec
cmpsb
mov
leave
jbe
push
jge
repz
imul
jnp
add
mov
sub
stc
lret
mov
nop
xor
popa
mov
cld
mov
pop
cmpsb
pop
mov
xlat
sub
xor
sub
aas
aas
in
bound
movsl
sti
pop
mov
jne
xchg
movsl
xchg
adc
push
cmpsl
test
mov
sub
cmp
inc
xchg
adc
sub
add
lret
jne
mov
sbb
push
inc
dec
mov
push
imul
flds
xchg
dec
fmul
mov
jne
inc
pop
cs
sti
push
test
xchg
popa
sbb
sub
push
xchg
and
jp
jl
mov
nop
daa
lods
in
lahf
in
shlb
out
or
dec
jne
cs
mov
dec
icebp
mov
sub
jg
fistpl
mov
out
or
stc
out
ret
test
push
mov
cmpsl
cmp
xor
cli
jl
mov
shrb
xor
or
pusha
dec
mov
divb
and
int
lods
imul
and
mov
mov
shll
jnp
xchg
call
aas
and
dec
xchg
cltd
and
lods
inc
sar
daa
ljmp
daa
std
xor
jno
add
pushl
adc
push
jle
sub
xchg
jecxz
bnd
sbb
imul
add
pop
mov
jmp
movsl
sbb
out
lcall
popa
cmc
scas
fstl
in
imul
cmpsb
repz
xchg
outsl
mov
xchg
inc
jno
sbb
inc
xchg
and
out
jns
push
xchg
shrl
test
cs
inc
mov
std
loope
lds
sbb
xor
data16
mov
mov
pop
push
mov
sbb
xchg
push
adc
cmp
adc
or
pusha
inc
ss
scas
popf
sub
mov
mov
add
xor
jl
shll
xor
jns
int
or
mov
mov
cmpb
lods
loope
inc
filds
cmpsb
push
or
pop
sbb
xor
or
jae
ss
repnz
icebp
xor
or
shr
iret
inc
push
mov
enter
lret
mov
js
inc
lret
bound
push
mov
push
xor
pushf
fisttpll
clc
cmpsl
jmp
or
and
and
jge
out
inc
cli
int
popa
mov
enter
xchg
sub
jns
shll
mov
lods
inc
insb
xchg
sbb
fcompl
or
inc
cli
shl
xchg
or
push
popa
jne
subl
clc
cmp
test
fs
mov
xchg
gs
shrl
fidivrs
pop
popf
leave
arpl
in
adc
sbb
fldl
pop
outsl
es
jo
loopne
outsl
mov
inc
push
and
jbe
cmp
xchg
pop
es
lcall
dec
call
jo
or
bound
insl
inc
hlt
sub
lcall
dec
mov
adc
cmp
or
movsb
jne
leave
imul
jnp
mov
jno
jle
mov
popa
daa
mov
inc
push
and
addr16
repz
out
cmpsb
mov
lea
mov
arpl
cmp
fwait
popf
das
js
mov
call
jo
cmp
out
mov
in
jle
push
das
mov
in
insl
ss
xchg
lahf
cs
adc
testl
adc
mov
jg
jl
repnz
outsb
xchg
mov
in
test
jne
ss
xor
insl
jnp
test
adc
push
mov
xor
and
cmp
xchg
xor
mov
jmp
push
addr16
sub
sbb
mov
mulb
sbb
sub
add
fldt
psllq
mov
test
dec
pop
daa
pop
hlt
pop
fs
pop
enter
xor
imul
cli
scas
sti
pop
jge
addr16
loop
mov
in
xor
mov
out
pop
aam
adc
icebp
ja
arpl
xchg
mov
imul
test
push
rcll
in
aam
xor
jb
jne
push
mov
push
aam
mov
aad
fbstp
dec
mov
sbb
das
adc
divb
push
pop
frstor
fsubr
aaa
fnstsw
fyl2x
imul
push
dec
cltd
cmp
pop
xlat
dec
in
sub
push
mov
cmp
sub
iret
in
cmp
xor
xchg
sbb
das
imul
mov
sbb
fs
fimuls
outsb
mov
or
and
pop
mov
pop
cmp
adc
cmpsl
lcall
inc
adc
pop
je
outsl
sub
roll
ja
lds
jnp
insl
pop
iret
push
xchg
or
div
ljmp
divl
in
dec
fs
ret
mov
cmp
inc
sub
pop
xchg
les
push
cwtl
in
sahf
rorb
and
or
sbb
xchg
shll
xchg
aaa
hlt
fidivrs
imul
sub
mov
mov
mov
xor
xor
shrd
or
shr
mov
mov
or
mov
cmp
jne
cmp
jne
jmp
mov
mov
mov
mov
mov
xor
shl
mov
mov
xor
mov
mov
xor
xor
jmp
cmp
sub
jae
pop
or
inc
xchg
lea
adc
clc
adc
xchg
or
cld
ret
out
cmp
lahf
das
jle
lds
or
push
ljmp
repnz
sti
jmp
mov
aas
jnp
push
fistpl
loope
mov
push
and
sub
cmp
sub
push
xchg
in
daa
xchg
mov
aaa
cld
ret
imul
out
pop
inc
frstor
js
cmp
imul
pop
xor
xchg
int
xchg
jnp
adc
push
cs
subl
dec
pop
cmpsl
pop
lcall
cmp
stos
cli
test
test
lcall
test
stos
mov
or
mov
and
ja
pop
cmpsb
push
std
or
xchg
mov
orb
movsb
sbb
ja
sub
push
or
jno
add
mov
jg
cmp
xchg
testl
mov
pop
push
mov
pop
imul
lret
add
cmc
jo
not
enter
sub
arpl
rcrb
cld
jnp
xlat
add
mov
sub
mov
adc
leave
mov
int
std
pop
stos
lret
test
rcrl
popa
mov
push
cmp
cmp
dec
and
rcll
es
sub
push
sbb
test
cmp
in
test
add
mov
push
push
xchg
and
movsl
scas
out
fbld
sbb
cwtl
push
mov
jecxz
orb
std
out
xchg
pop
scas
or
stos
xchg
je
xor
cmp
rcll
in
jae
mov
and
jne
push
arpl
cmpsb
ljmp
sarl
mov
test
iret
rorl
jecxz
insb
test
mov
enter
rclb
pop
fmulp
xor
stc
mov
enter
pop
push
movsb
stos
xchg
cmpsb
fisubrs
inc
lods
mov
push
xchg
sbb
fcmovu
push
aas
push
push
cmpsl
in
fstpl
arpl
ja
mov
dec
scas
bnd
mov
rclb
add
call
or
push
push
sub
stos
das
xor
xchg
jmp
rclb
xchg
pop
push
mov
sbb
jp
loop
mov
out
xchg
adc
xor
lret
add
sbb
mov
jae
add
dec
and
sahf
dec
jne
out
dec
cmpsb
outsl
rcrb
aaa
xchg
outsl
mov
insb
sbb
adc
cmc
popf
xor
adc
test
insl
dec
sbb
cmpsb
mov
dec
and
xor
mov
pop
xor
fucom
xor
mov
out
push
add
sahf
jb
mov
imul
mov
or
loope
insb
mov
fwait
pop
mov
stc
popf
mov
idivb
in
icebp
sbb
fcomp
sub
sbb
push
int3
enter
outsb
jl
push
jp
stos
fnstsw
mov
int3
les
mov
fcmovnu
sub
sbb
sub
fcoms
mul
outsb
ljmp
inc
inc
pusha
dec
or
mov
aas
es
decb
hlt
pushf
or
daa
bound
idivl
xchg
popf
int3
fadds
icebp
xorl
jbe
sbb
sub
pop
sbb
je
rorb
xchg
fsubs
push
push
inc
ja
movsl
pop
adc
mov
dec
and
and
and
cltd
fcoml
rcll
shrl
in
and
call
out
icebp
fwait
dec
je
xchg
inc
push
aaa
test
push
sbb
push
mov
push
push
mov
lods
sub
cmc
cli
or
mov
ja
je
in
xlat
adc
inc
jns
iret
mov
jl
cmpb
aad
pop
dec
mov
cmp
rcrb
and
pushf
xor
pop
cli
jne
jno
adc
jbe
stc
enter
sahf
orl
in
rcr
out
jg
les
cmp
lds
fwait
jecxz
jno
sbb
and
xchg
xchg
daa
ret
movsl
adc
sub
aad
mov
nop
mov
testl
pop
cld
push
sub
xchg
movaps
mov
xchg
dec
xor
fwait
mov
sbb
cmc
into
insb
into
mov
aas
push
xchg
add
jbe
pop
cmpsl
ficomps
xor
lcall
push
stc
mov
xchg
adc
or
push
cmp
ds
into
mov
fdivrs
sbb
push
add
mov
mov
lods
xor
ret
scas
and
push
xor
arpl
adcb
mov
ljmp
or
mov
jno
aaa
xchg
fwait
sub
push
dec
jle
jp
add
inc
xchg
dec
aas
or
sbb
or
push
xchg
and
jge
js
or
pop
xor
call
dec
arpl
mov
jns
add
sub
adc
imul
jl
sub
pop
add
jl
mov
into
dec
cltd
decl
es
daa
mov
mov
movmskps
dec
fs
push
pop
pop
sbb
fmuls
or
xor
sarb
or
inc
add
and
inc
aam
sbb
pop
add
xor
movsl
in
pop
jl
jg
dec
mov
mov
mov
pop
mov
ljmp
rcl
pop
jmp
or
dec
xor
outsl
push
ret
lahf
fisttpl
imul
je
and
repnz
stc
mov
add
ret
jge
nop
adc
mov
enter
pop
mov
and
rclb
imulb
movsl
jo
leave
push
aad
jp
sbb
psrad
testl
cli
lock
or
inc
add
leave
leave
mov
xchg
add
repnz
cmc
fwait
loope
sbb
arpl
addr16
mov
xor
jl
jp
dec
call
push
jmp
adc
xchg
add
push
popa
jno
rcll
cmc
lret
jns
stos
inc
out
dec
cmp
mov
loopne,pn
mov
mov
push
dec
mov
movsl
cmp
in
add
mov
into
sbb
dec
dec
sti
dec
xchg
lock
sbb
or
shr
mov
mov
or
mov
mov
push
pushl
push
jmp
jmp
or
aam
mov
add
jg
adc
clc
adc
or
rcrl
sub
pop
out
popa
jmp
fildll
add
js
mov
jns
lahf
or
pop
and
sar
add
popf
push
and
or
jp
roll
sub
jno
cmp
popa
jmp
or
or
sub
adc
pop
mov
sub
dec
pop
nop
mov
or
fcomi
pop
std
xor
cmp
jecxz
aam
dec
incb
push
pop
jo
test
inc
lods
call
mov
lea
mov
add
push
insl
out
xchg
outsl
lock
sbb
add
movsl
or
xor
mov
mov
sbb
mov
movsb
movsl
dec
mov
and
pushf
pop
out
or
push
sbbb
imull
dec
inc
inc
or
mov
rcll
add
sbb
lds
stos
pop
mov
push
daa
lock
fisubs
mov
std
jnp
movsb
call
mov
lahf
mov
adc
shr
cmp
jae
add
inc
jns
inc
shrl
cmpsb
xor
scas
sbbb
adc
cmp
rcll
jl
push
push
add
out
es
xchg
mov
pop
fstp
or
sub
sub
xorl
dec
cmpsl
hlt
push
dec
sbb
xor
and
jmp
mov
test
aad
fisttpll
xor
shlb
jmp
fldl
movsb
mov
out
rclb
mov
add
mov
aaa
test
jo
dec
call
test
shlb
add
cltd
sbb
mov
sub
lcall
xor
icebp
mov
add
jns
fs
fwait
movsl
mov
jnp
fst
out
fnstsw
test
aas
andl
scas
inc
jp
mov
mov
negb
pop
or
mov
lods
mov
mov
inc
inc
repz
out
jne
out
nop
fistpll
lods
test
jge
lret
scas
fistpl
jecxz
sub
mov
out
pop
adcl
or
cmc
dec
lahf
int3
ret
xchg
movsb
xchg
mov
push
sub
pushf
xchg
dec
push
inc
adc
add
insb
les
sbb
or
movl
sub
push
xor
lds
push
push
lahf
sub
cmc
dec
xor
stos
out
test
pop
sub
xor
cmpsb
xor
sub
jle
daa
xchg
gs
les
mov
jmp
xor
adc
dec
pop
pop
inc
mov
dec
into
mov
inc
testl
daa
jne
dec
jp
xor
cmp
dec
mov
test
or
inc
cs
mov
xor
pop
loopne
mov
pop
cmpsb
fs
fwait
gs
mov
test
cmpsb
inc
sbb
mov
dec
xlat
pop
dec
mov
and
mov
cli
sub
rcrb
push
jg
pop
pop
mov
or
cs
sbb
loop
add
sub
sub
xchg
xchg
fwait
dec
fs
add
pop
xchg
pushl
jmp
pop
push
sti
dec
jmp
out
pop
push
push
fwait
sbb
aas
test
rcrl
xchg
out
mov
rcrl
mov
push
ficoml
pop
jl
nop
sbb
or
xchg
inc
push
mov
test
jno
movsl
dec
test
dec
pop
and
xchg
cmp
in
leave
mov
add
mov
call
cltd
xchg
mov
xor
js
lods
adc
mov
inc
jp
xor
jmp
test
test
loop
popf
ret
jmp
and
mov
repnz
push
loopne
mov
lods
stc
dec
insb
jge
mov
jns
pusha
in
xor
test
lds
cld
xchg
jnp
mulb
out
and
add
out
xchg
inc
jmp
shll
dec
in
xlat
data16
push
xor
andb
or
mov
inc
inc
dec
mov
dec
mov
mov
jp
sbb
mov
or
lods
ja
sahf
ja
std
cmp
es
jg
in
sbb
mov
jo
fmul
add
dec
pop
insb
test
stc
lock
dec
movsb
jmp
or
rorb
test
mov
repz
or
or
sbb
in
push
pxor
xor
mov
sbb
dec
arpl
mov
mov
mov
mov
aad
pop
scas
test
push
add
xchg
xchg
cmp
and
ret
adc
mov
xor
sub
pop
and
fwait
mov
pop
pop
mov
push
int3
adc
jbe
in
aaa
xchg
lret
subb
inc
test
push
sahf
push
lret
and
mov
outsl
xchg
or
lock
xchg
test
arpl
cmp
sub
jp
mov
data16
in
mov
ljmp
outsl
mov
mov
push
aam
in
repnz
stos
es
push
imulb
pop
jecxz
mov
mov
sub
jle
test
and
test
mov
test
pusha
mov
inc
xchg
jae
sub
insb
sbb
or
ret
adc
mov
addl
push
outsb
pop
cmp
jbe
in
icebp
movsl
push
iret
out
cmpsb
sub
subl
lret
cmp
ja
adc
or
inc
aas
bound
jecxz
dec
or
in
xor
repnz
mov
cwtl
outsb
arpl
add
sbb
xor
ret
or
dec
or
mov
inc
scas
dec
lahf
xor
hlt
popf
and
mov
push
gs
int
xchg
fs
push
pop
rcl
shl
leave
ljmp
cli
push
or
or
push
cmp
push
jge
push
mov
mov
mov
stos
xchg
xor
mov
hlt
pop
cmp
lea
adc
push
and
adc
or
or
aaa
fstp
pop
xchg
xor
sti
ret
scas
sub
not
mov
data16
mov
imul
push
add
or
in
enter
imul
inc
adc
adc
clc
adc
inc
xchg
adc
in
aad
xchg
jnp
mov
movsb
and
cmp
mov
and
aam
push
cmp
mov
lret
addb
sub
push
loopne
shl
mov
fdivs
rorl
decl
shl
in
test
scas
adc
inc
fcoml
push
or
push
test
sahf
cmp
js
cmc
add
sub
shrb
jg
cmp
shll
sarl
cmp
add
lds
or
test
mov
dec
cmp
mov
imul
dec
daa
int3
aas
fwait
ds
aaa
fcoml
cltd
sbb
into
aad
dec
pop
lock
jns
xchg
jbe
dec
xor
mov
ss
movsb
xor
popf
das
adc
notb
xchg
sub
arpl
sahf
pop
mov
push
stos
and
out
insl
jno
xlat
xor
push
rolb
jge
jb
push
loop
lcall
test
xchg
dec
push
shll
dec
or
and
cmp
jae,pt
push
jne
mov
jp
fs
fistl
cmp
pusha
enter
fldpi
xchg
or
test
mov
gs
or
sbb
icebp
fimuls
adcb
push
or
out
aam
cmp
or
ss
pop
roll
mov
jne
jns
fstpt
add
add
mov
jne
out
mov
bound
mov
pop
xchg
lcall
mov
rcll
inc
shll
fildl
or
mov
xor
mov
lcall
pop
mov
loopne
jae
xor
enter
jg
cmp
pop
push
mov
ret
cmp
lahf
inc
jle
repnz
jbe
outsl
push
loop
mov
dec
sub
jne
int
cld
mov
aad
jg
adc
and
dec
inc
inc
leave
jg
popa
mov
test
jp
orb
jb
dec
xor
xchg
cmp
xor
add
xchg
pop
out
mov
cmp
mov
movsb
pusha
arpl
fsubrl
mov
dec
push
xor
xor
fidivrl
scas
mov
cmp
aaa
sbb
sub
and
mov
jp
outsl
dec
pusha
js
daa
in
ds
scas
ret
xchg
sarb
aad
mov
dec
xchg
dec
bound
pop
inc
cmc
adc
shll
movsb
xchg
hlt
leave
cmp
xor
insb
add
cmc
mov
js
lea
mov
fsts
lcall
pop
and
cwtl
and
jno
mov
les
scas
clc
sbb
xor
les
in
in
ja
mov
sub
add
mov
clc
or
push
cmp
aaa
cltd
pop
sahf
sub
es
stos
mov
cld
xchg
jg
sti
jg
mov
pushf
mov
jb
dec
or
ret
jb
ret
push
cmp
lret
cmp
insl
cs
add
jmp
xchg
mov
fidivrl
hlt
dec
lcall
stos
ljmp
aad
lret
jecxz
dec
sbb
or
adc
push
into
push
adc
cs
pop
mov
in
orl
jne
push
jp
mov
popa
mov
popa
push
and
and
jp
cld
sub
js
add
inc
cmp
stos
jo
and
jge
or
mov
dec
movsl
addr16
bound
faddl
pop
push
cmc
dec
nop
rolb
inc
popf
mov
add
mov
scas
popa
sub
push
add
rcrl
inc
fdivl
cmpsb
enter
push
test
out
shl
jb
mov
xchg
sti
adc
and
pop
jl
fidivs
or
jno
adc
outsl
int3
ds
mov
int3
jg
or
mov
sahf
xor
ljmp
dec
cmp
sarl
dec
in
jle
fs
scas
xor
in
mov
das
cmp
clc
mov
mov
stc
fwait
sub
enter
fs
aas
repnz
jl
fs
lods
dec
mov
gs
push
insl
pop
andb
xchg
inc
inc
aad
push
lea
mov
or
xchg
pop
fs
xor
mov
aad
and
and
adc
mov
fcomp
sub
shlb
push
std
pop
fmull
jne
das
mov
repz
cmp
out
mov
ss
aaa
pusha
cmpsl
push
xchg
dec
cmpps
mov
ds
lret
ja
lods
dec
lea
lahf
mov
pop
lods
mov
dec
arpl
xor
mov
sbb
and
scas
lock
jge
dec
add
mov
inc
rorb
mov
and
mov
push
jns
dec
mov
sbb
stos
int3
test
push
iret
lds
xor
pop
stos
mov
push
push
sub
adc
sub
scas
fs
push
in
shlb
dec
cwtl
pop
sub
mov
mov
sub
mov
add
mov
imul
add
repz
adc
or
loop
push
test
in
imul
mov
das
inc
test
repnz
cli
inc
lods
and
fstpt
mov
ret
dec
or
jle
insl
sbb
pop
iret
xlat
jbe
adc
test
pop
inc
mov
fcoml
jp
jl
xlat
sub
test
subl
inc
jle
jecxz
or
das
pop
add
lock
add
adc
fcmovnbe
cli
jno
cmp
sub
mov
sbb
cltd
jb
xchg
inc
cmp
inc
outsl
xchg
jmp
sub
adc
xor
push
mov
pusha
mull
and
js
fwait
addr16
hlt
xor
loopne
lret
roll
adcl
mov
aad
les
pop
in
mov
sub
inc
push
out
enter
test
ljmp
inc
cmp
call
jmp
in
cmc
dec
stos
dec
sub
add
into
add
adc
clc
adc
popf
push
movsb
std
mov
cmpsb
fsubs
fsubrs
xlat
mov
pop
adc
push
jnp
xchg
mov
xchg
xchg
andl
push
pop
or
js
or
testb
cli
icebp
lahf
add
test
inc
dec
pop
cli
cltd
or
pusha
sub
loopne
loop
or
push
cli
ds
mov
std
popf
inc
adc
push
adc
jp
jg
xchg
popa
jl
aam
testl
lahf
jne
scas
mov
cli
inc
clc
pop
insl
aaa
mov
mov
push
mov
ficomps
inc
pop
ret
ret
push
cltd
shr
pop
jp
lea
lds
jne
testl
add
adc
inc
or
and
jb
addb
push
adc
add
lds
adcb
jp
out
into
popa
mov
data16
aam
leave
sub
sbb
dec
mov
in
imul
jns
sub
divb
adc
out
xchg
cwtl
pop
les
adc
cmp
mov
and
jp
mov
test
mov
mov
dec
addb
push
xchg
and
fwait
hlt
mov
push
mov
in
or
cltd
aam
ret
pop
adc
lret
mov
es
adcl
lahf
jmp
repnz
or
loop
aad
ds
add
cmp
rcl
mov
pop
repz
loop
repnz
cmpb
lret
pop
jns
xor
and
push
cmp
aaa
fs
pop
lret
mov
clc
stc
jae
pop
int
lahf
adc
scas
lock
xor
fstps
les
and
fs
dec
pop
mov
push
rclb
cltd
repnz
xor
mov
push
sbb
jp
ret
add
mov
mov
cmp
stos
mov
mov
dec
pop
fsubrl
std
les
or
push
or
mov
or
enter
push
inc
fcoml
in
mov
imul
inc
jg
mov
ljmp
out
cmp
in
addr16
nop
outsb
mov
adc
and
cmpl
and
pop
ja
dec
mov
dec
repnz
adc
jae
lahf
into
sub
ss
lcall
pop
shrl
mov
push
rcrb
lods
popa
inc
or
push
xchg
scas
push
push
test
mov
daa
jnp
lock
xor
lods
inc
push
inc
insb
xchg
inc
rcl
lds
inc
gs
cmpl
jge
popf
jle
push
test
ljmp
and
fwait
push
lret
cld
sbbb
imul
push
sti
add
push
ret
orb
pop
sarl
or
add
mov
fsub
or
outsb
dec
lods
test
pop
mov
dec
hlt
xchg
jmp
inc
cmp
das
lcall
pop
lods
loop
test
adcb
pusha
nop
pop
or
out
dec
insl
mov
jnp
sbb
je
xchg
jecxz
insb
decb
mov
fldenv
pop
inc
ja
cmp
cmpsb
test
aam
mov
stos
fcom
jb
sub
ds
inc
mov
daa
jmp
rorb
pop
sbb
or
cmp
xor
adc
mov
sub
or
jmpw
ret
dec
mov
pop
xchg
xor
movsl
aam
cmova
imul
gs
and
gs
push
add
mov
out
push
gs
sbb
mov
push
call
add
add
fisttpl
mov
popf
gs
jle
cwtl
cmpsl
js
movsb
sub
mov
adc
mov
int3
movsb
addb
loop
pushl
fcomps
mov
insl
ret
lcall
insb
pop
cmc
mov
hlt
test
add
rcrb
mov
xchg
test
adc
addr16
pop
push
pop
out
adc
or
mov
sbbl
sbb
mov
enter
pop
and
adc
test
adc
cmp
aad
push
lcall
imull
push
cmp
xchg
and
aas
jl
mov
lret
push
clc
insb
jb
add
outsb
shr
and
rcrb
mov
cli
push
inc
into
rclb
sarb
dec
pop
xor
inc
pop
std
push
fbld
fdivl
fbstp
popa
imulb
out
or
cltd
loope
push
xchg
or
push
mov
daa
sub
inc
scas
and
int3
repz
fadds
pop
ret
sbb
xchg
lret
das
pop
jnp
xor
mov
adc
push
jl
add
fldl
std
adc
pop
and
jo
inc
add
fidivrl
jl
inc
xchg
adc
and
lods
mov
sub
pop
pop
dec
cmp
inc
cmp
xchg
fcoml
lahf
cli
pop
sti
fbstp
mov
cmp
dec
xor
shrb
test
inc
fidivrl
fisubrl
sbb
cli
pop
xor
sbb
or
pop
push
jmp
adc
xchg
pop
insb
push
outsl
je
loope
mov
mov
ds
xchg
adc
bound
dec
bnd
fmuls
cmp
jb
push
cltd
stos
and
lods
add
add
add
mov
dec
aam
fnstsw
adc
add
test
xchg
pop
jne
es
repnz
xchg
xor
aad
cmpsb
ja
or
repnz
inc
test
addl
cwtl
jae
add
xlat
mov
xchg
sbbl
into
popf
fistps
adc
mov
fbld
push
repnz
int
cmpsl
int3
pop
push
aas
loop
cmp
aaa
pop
push
pop
jmp
int
xchg
stos
or
je
xchg
fwait
sbb
ja
ja
jle
leave
adc
and
xchg
movsl
cmp
adc
in
bound
sbb
cwtl
mov
pop
lahf
mov
cmp
pop
lods
mov
imul
add
nop
inc
fimull
xchg
fmul
push
cld
push
dec
in
repnz
xorb
add
lods
enter
push
add
sbbb
pop
mov
pusha
push
push
out
cmp
mov
into
add
adc
jge
mov
cmp
ja
pop
aas
nop
fs
shll
add
mov
movsb
push
sbb
adc
sbb
inc
xlat
or
cmp
push
mov
repnz
ja
lahf
and
loope
mov
pop
dec
sub
shrl
or
movsl
addr16
or
shrb
xor
stc
dec
bound
adc
xchg
mov
movsl
pop
subl
mov
int
shl
push
jge
loop
popf
shll
cmpb
jbe
dec
pop
test
xchg
mov
add
push
shll
push
dec
mov
or
push
or
scas
xor
mov
sbb
and
loop
imul
adc
push
roll
lcall
mov
mov
inc
add
cwtl
mov
cmp
out
lea
mov
sub
stos
push
outsl
std
jp
and
mov
dec
lock
xor
mov
inc
sbb
fisubrl
shl
rclb
ret
adc
xor
nop
scas
fisttps
fwait
push
xchg
xlat
or
xchg
flds
jb
cwtl
and
push
cmp
mov
xchg
js
xchg
cltd
enter
das
inc
pusha
pop
movsb
mov
enter
xchg
daa
and
fucom
rcr
mov
xchg
dec
nop
sbb
bound
rolb
mov
dec
or
mov
int
xchg
and
cwtl
sbb
test
ret
bound
adc
mov
jl
popa
mov
rorl
and
sbb
ret
jecxz
cmp
xchg
push
xor
inc
sar
pop
push
sahf
lahf
add
loope,pn
xchg
adc
jae
ret
or
push
xor
pop
sub
jnp
sub
or
mov
xor
adc
test
je
test
xor
stos
aad
adc
xchg
push
cmp
pop
xchg
mov
cmp
xor
rclb
imul
and
dec
rorb
xor
arpl
stos
sub
inc
xchg
add
jecxz
xchg
and
push
rcll
leave
aas
mov
incb
and
xor
test
pop
mov
mov
hlt
jb
scas
pop
cmp
orb
jns
lods
pusha
xlat
cld
negl
cmp
bound
and
dec
inc
dec
sub
and
jmp
movsl
push
js
pop
arpl
popf
mov
pop
pop
xchg
stos
mov
rcll
sub
repz
in
or
test
cmc
rcrl
mov
sbb
shrb
add
rclb
and
push
imul
lock
xor
mov
push
rol
mov
push
ret
mov
add
adc
into
call
dec
fdivrl
les
lea
mov
arpl
faddl
mov
xchg
or
push
dec
pushf
xor
fsubr
jl
arpl
pop
jl
fildll
push
mov
ret
fldl
inc
xchg
mov
cmpsb
or
xor
xchg
fnsave
or
inc
push
xor
loop
in
xchg
sti
in
mov
call
bound
pop
sub
int3
mov
sub
divb
scas
or
leave
jp
mov
out
cmpsb
rcrl
stc
imul
jo
jbe
add
movsl
mov
es
ficomps
call
xchg
or
sbb
fimull
jns
shrl
adc
clc
ret
xor
outsb
xchg
loop
lock
push
jo
mov
xor
cld
stos
pop
rcl
orb
add
push
orl
popl
jecxz
push
ret
daa
dec
mov
push
fwait
ja
adc
or
ss
pusha
ss
ss
stc
mov
arpl
cmp
fdivs
mov
cmp
aam
and
mov
mov
in
movsb
and
push
pop
stos
out
cmp
jg
popa
pop
inc
cmp
fstpl
movsb
dec
cmpsb
popf
pop
in
ret
jae
xchg
out
andl
mov
ror
fsubl
loope
loope
outsl
sahf
movntps
in
sub
mov
mov
test
popf
xorl
sahf
pusha
dec
fcomps
xor
out
lcall
sbb
push
mov
into
dec
into
mov
mov
mov
filds
push
js
dec
push
outsl
repz
out
fnstenv
sub
mov
mov
push
push
fstps
or
sbb
lods
cmc
int3
and
xchg
movsl
mov
mov
inc
mov
sbbb
or
jecxz
xor
int
mov
xchg
jge
push
into
int3
mov
inc
pop
mov
dec
jmp
fs
inc
imul
fists
xchg
dec
cmp
inc
push
cmpsb
sbb
jmp
sub
stos
int
dec
cmp
btr
jl
mov
cmp
push
dec
xor
lahf
push
xlat
pop
ret
aas
cld
cmpsl
inc
add
mov
or
cwtl
inc
adc
xchg
repz
les
sbbb
push
dec
std
xchg
fmul
popf
adc
inc
xor
cmpsb
insl
into
scas
and
fs
fists
into
sbb
leave
xor
test
push
dec
in
pushf
push
test
aas
ds
test
dec
into
das
ljmp
repz
mov
cmp
lods
iret
ffreep
cld
into
inc
outsl
xor
loop
fcomps
fs
pop
mov
mov
andb
fs
mov
cmc
push
arpl
lret
out
fnstcw
mov
jb
push
add
in
es
mov
mov
rclb
sti
lods
mov
cs
inc
mov
xchg
das
insb
ds
call
sub
cltd
xlat
dec
push
sbb
xchg
adc
clc
push
jns
movsb
shr
shr
xor
push
xor
jmp
mov
push
push
push
mov
insb
mov
aam
adc
clc
adc
in
inc
add
jno
fidivrs
sub
inc
mov
int3
in
add
sub
inc
idivb
das
in
mov
in
mov
and
mov
inc
mov
lods
cmp
jae
mov
cwtl
and
cmc
dec
ja
lret
js
push
xchg
jg
fidivl
or
nop
inc
into
pop
inc
push
in
mov
adc
inc
jnp
gs
loope
or
pop
in
jg
clc
out
clc
pop
insb
mov
mov
in
test
lahf
into
dec
aad
scas
push
xlat
mov
nop
xchg
sub
cmpsl
cmc
ss
jae
jno
ficompl
imul
popf
mov
sub
hlt
lcall
adc
push
pusha
in
insb
mov
or
stc
push
push
lret
sbb
and
outsl
in
sub
fsubrs
outsl
pop
stc
es
mov
push
push
jnp
mov
mov
inc
sbb
fidivrs
mov
test
jmp
xchg
imul
ljmp
sub
cmpsb
add
fwait
jle
add
lret
push
in
mov
vpsllw
sub
cmpsb
jbe
sub
pushf
aad
pop
jns
sahf
bound
inc
sbb
cmp
cli
add
cmc
in
leave
lret
ss
jecxz
push
adc
pop
cwtl
push
jl
ret
dec
pop
add
mov
push
sahf
adc
stos
mov
adc
add
and
jmp
xchg
jnp
aaa
cmp
dec
data16
mov
and
fwait
pop
push
pop
or
jecxz
aas
mov
test
in
adc
int3
sti
sbb
cld
and
insb
fidivrs
dec
insl
fidivrl
pop
xchg
movsb
stos
scas
jo
in
pop
jg
cld
outsl
int
leave
scas
lock
je,pn
add
sub
jle
pop
jmp
fcomip
imul
xor
inc
iret
xchg
and
loop
in
das
jno
movsl
ljmp
mov
out
sahf
mov
lcall
adc
ja
jmp
fsubs
inc
mov
rorb
mov
pop
fwait
or
addb
shll
dec
sarb
xor
lds
push
adc
popf
outsb
pop
stc
jecxz,pt
ret
or
in
mov
push
inc
pop
std
ret
xor
xchg
sbb
pop
flds
cmp
in
adc
jne
xchg
or
xor
sbb
mov
loop
and
cmpsb
pushfw
add
mov
mov
and
adc
or
lcall
scas
mov
xorb
mov
es
sti
or
shlb
out
aas
xchg
jns
adc
pop
inc
cmp
add
pop
xchg
lahf
daa
jle
add
les
gs
pop
int
xor
xlat
ss
jg
push
mov
mov
sub
dec
xchg
shrb
fcmovnb
stos
popf
divb
daa
mov
inc
mov
xchg
shld
lea
lock
cli
push
push
fdivr
sub
fs
cltd
leave
sbb
fs
pop
and
or
out
or
in
insl
lods
jae
sarb
int3
add
decl
insl
cmp
jns
lock
popa
ret
and
sub
adc
mov
cltd
mov
or
outsl
jmp
roll
inc
aad
cmpsb
or
sub
insl
inc
inc
and
repz
and
cltd
sbb
ljmp
inc
add
dec
and
add
rol
pushf
or
out
mov
daa
pop
inc
push
lcall
xchg
cmc
fisttpl
and
pop
mov
shll
sub
jg
pinsrw
sbb
out
pop
test
pop
addb
das
repz
sub
lret
adc
mov
js
add
cli
fimull
sbb
pusha
cmp
xchg
push
fnsave
inc
add
xchg
push
loope
das
inc
pusha
cmp
fisubrs
pushf
sub
call
xor
or
int3
cmp
cmp
in
stos
push
cmp
dec
sbb
inc
popa
and
test
lret
ja
gs
dec
cmp
je
daa
aad
je
fxch
inc
nop
mov
shlb
xor
inc
pop
test
dec
mov
lock
in
cmp
mov
loop
mov
mov
into
test
and
xlat
scas
das
pushf
push
mov
sbb
cmp
xchg
rorb
or
into
add
xor
stc
jne
sub
aad
mov
outsb
pop
test
mov
cmpsl
xor
jge
cli
subb
cmpl
inc
test
adc
in
cli
icebp
sbb
fchs
pop
popa
cmp
pop
adc
xor
dec
shll
dec
mov
sbb
xor
fistpll
cwtl
lahf
fmul
xchg
lea
ffreep
ja
int
mov
rorl
push
bound
mov
dec
or
cs
push
inc
inc
movsl
dec
jg
out
cs
adc
mov
rcrb
dec
xor
js
and
xor
cmp
fildll
mov
shll
push
mov
cmp
dec
inc
inc
and
mov
jle
arpl
fs
sub
lret
insl
incb
pop
add
xor
adc
sub
mov
jo
mov
dec
push
jecxz
jbe
xchg
inc
xlat
or
jle
push
mov
mov
cmp
adc
out
in
push
push
and
push
lret
shll
lods
mov
outsb
jb
inc
fstpl
cmp
xchg
push
es
pushf
iret
push
xchg
jmp
and
add
enter
mov
nop
mov
add
mov
fimull
xlat
push
mov
sbb
ds
or
jp
pop
xchg
hlt
jno
movsl
loopne
mov
mov
in
push
jge
mov
and
enter
inc
rcrl
call
xchg
sbb
add
or
enter
xor
cwtl
mov
jae
divb
xor
adc
mov
mov
mov
push
push
push
call
shld
shl
mov
jmp
push
hlt
jmp
push
or
movb
hlt
cld
and
pop
adc
clc
adc
lret
sub
or
inc
adc
cmpsl
gs
pop
test
xchg
aad
repnz
mov
cmp
insl
push
popf
icebp
rcrl
rcll
jb
mov
int
das
push
or
lret
outsl
mov
je
dec
sub
fadd
or
add
stos
add
ss
mov
fsts
inc
mov
and
pop
je
xchg
js
ljmp
fwait
std
sub
mov
jge
push
cmpsl
insl
mov
aas
in
sub
mov
repz
xlat
aaa
pop
movl
sbb
add
push
test
pop
pop
inc
and
cmp
mov
hlt
sub
scas
cmp
mov
out
xor
mov
cmp
inc
adc
lcall
ss
test
outsl
test
aad
xor
loope
xor
xchg
mov
fimuls
cmpl
test
push
and
inc
and
inc
leave
setge
xchg
cmp
adc
sub
cmp
jnp
ffree
mov
lods
lods
lret
mov
jb
inc
das
adc
jl
jle
mov
pushf
xchg
and
sbb
jge
fwait
dec
repnz
cmp
push
mov
mov
scas
push
lret
fwait
fs
sbb
idivl
sub
sbb
mov
add
incb
stos
outsb
shll
sahf
jno
dec
inc
cs
mov
out
stos
pop
out
into
out
add
daa
or
pop
jb
push
push
xchg
jg
insl
sbb
idivb
int3
rcrb
imul
arpl
in
orb
imul
addl
push
shlb
sbb
pop
sbb
inc
repnz
cmp
sub
lods
inc
dec
mov
movsl
adc
jmp
jnp
jl
negb
sarl
mov
cmp
imul
aam
mov
loopne
js
scas
xchg
sub
lods
mulb
inc
out
dec
xorb
ror
subb
shrl
mov
push
inc
lods
dec
pop
shrl
int
xor
inc
ret
shlb
push
fdivrs
ljmp
std
pop
rolb
mov
push
pushf
iret
xor
std
lcall
hlt
pop
andl
adc
outsb
dec
dec
cwtl
imul
mov
xchg
fadd
ret
jnp
ss
push
inc
cmpsl
or
adc
or
jg
lea
in
in
pop
out
fistpl
sbb
jle
popf
lret
mov
jecxz
jg
xor
pop
jae
sub
cmp
xlat
js
and
neg
and
pop
dec
cmpl
cwtl
es
lods
xor
pushf
imul
push
mov
sbb
push
lea
loop
outsb
sub
xor
stos
add
ljmp
lds
xchg
mov
xor
or
xchg
sbb
stos
ljmp
pop
adc
inc
sub
lret
add
sti
sbb
push
mov
and
xor
xor
push
inc
or
xlat
sub
int3
das
lret
push
mov
jo
mov
arpl
bnd
and
dec
insl
stos
je
mov
sbb
imul
stos
scas
mov
iret
movsl
xchg
sbb
pushl
cmp
adc
dec
dec
push
shlb
rcl
clc
cli
push
clc
lds
mov
dec
and
in
das
sbb
fmull
xor
sbb
sbb
aam
jnp
ja
addr16
cwtl
lods
rolb
mov
cli
dec
aas
inc
fs
cs
xchg
fildl
cltd
leave
inc
fs
add
mov
shl
jb
mulb
xor
mov
lea
push
in
enter
cmpsb
pop
xchg
rolb
test
lock
lahf
outsl
sbb
push
pushf
nop
cmp
sahf
dec
aam
enter
cmpsb
or
cmp
mov
add
and
es
ds
imul
jns
and
insb
adc
and
push
jae
mov
xor
jmp
inc
xor
mov
jbe
shlb
jp
push
push
stc
lods
sub
mov
mov
jns
mov
xorb
xchg
lock
test
add
test
add
push
pushf
nop
and
and
bound
push
sub
andl
push
mov
imul
pusha
sbb
and
xorl
jb
dec
cmp
mov
jmp
fdivs
insb
into
inc
mov
fildl
xor
or
push
in
xchg
mov
int
mov
out
js
into
adc
cwtl
sbb
jae
scas
jno
lret
sahf
bound
orl
leave
sub
mov
lock
sti
test
les
fwait
add
xchg
je
pop
adc
push
sub
iret
sbb
cmp
mov
xor
popf
repz
dec
xchg
push
adc
pop
out
xor
fdivs
adcb
jo
and
pop
mov
xorb
sbb
mov
shr
cmp
scas
arpl
and
push
rcll
insl
push
xchg
pcmpeqd
pop
lock
stos
add
sub
cmc
lea
rcr
xchg
add
sbb
int
sahf
mov
jae
out
out
inc
push
mov
xchg
int3
gs
loopne
sbb
lcall
aam
mov
fdivl
mov
icebp
dec
cmc
and
adc
lret
mov
or
push
adc
push
or
sub
ds
sub
xchg
jp
jmp
mov
gs
inc
push
daa
test
mov
jmp
inc
adc
cmp
cld
lods
fstl
shll
inc
lock
fwait
lret
jp
pop
fdivs
clc
add
and
mov
outsb
push
mov
push
push
push
cmpsl
sub
jne
sub
cmp
dec
jl
mov
add
hlt
out
rolb
sub
adcl
outsb
pop
aas
rolb
xor
arpl
xor
jbe
in
fnstsw
scas
push
lods
xchg
imul
adc
push
cmp
push
jbe
xor
sbb
adc
rorb
xor
xor
mov
mov
mov
mov
mov
mov
shl
xor
mov
mov
mov
xor
xor
shrd
shr
or
jmp
inc
mov
cs
jmp
mov
adc
clc
adc
in
fnstcw
cmp
and
daa
nop
outsl
or
jns
shll
into
jg
fs
or
mov
repnz
xchg
ljmp
je
mov
iret
sbb
jmp
mov
lock
cld
xor
or
shlb
jb
scas
add
or
cmc
out
adc
dec
int3
lret
or
push
xchg
or
in
fwait
inc
cmpl
rcl
aam
mov
mov
xchg
imul
dec
fdivrl
adc
testb
outsl
or
add
iret
in
popa
arpl
and
push
sbb
add
lods
cmc
fnstenv
push
jns
inc
jmp
inc
pop
xchg
mov
or
scas
rcrb
pop
lahf
jl
test
cmc
xchg
sub
jo
and
pop
fcoml
xchg
mov
arpl
pushf
xlat
cmpsb
pop
ret
pop
mov
xchg
push
cltd
stos
adc
insl
xchg
mov
and
push
adc
lahf
shrb
jge
xor
cmc
adc
lret
and
mov
lcall
inc
loopne
clc
dec
pop
repnz
push
jle
xchg
in
add
jge
sbb
lea
add
outsl
out
insb
lock
adc
mov
mov
cld
insb
mov
xchg
inc
add
add
cmc
lret
jne
pop
pop
mov
push
adc
xchg
adc
imul
icebp
cmp
ds
push
scas
jns
pusha
and
imul
pop
sub
mov
dec
cmpsl
lds
ljmp
popa
pop
push
adc
pop
repz
icebp
mov
scas
out
xchg
inc
in
int
pop
sbb
dec
mov
rclb
push
xchg
jl
setne
loop
call
mov
aad
adc
inc
cs
out
mov
lock
cs
xchg
mov
fs
dec
aam
stos
in
sub
iret
cmp
mov
lock
sub
dec
sub
daa
push
ffreep
push
subb
hlt
in
int3
inc
fdivl
or
jp
test
sub
inc
add
mov
xor
xchg
shrl
push
popa
cmc
jg
mov
cmp
sub
fildll
inc
cmp
push
jmp
cwtl
mov
xchg
movl
leave
leave
cmpl
mov
inc
arpl
cld
loope
jns
lock
xchg
aam
adc
adc
imul
xchg
fdivs
jbe
cmpsl
pop
addb
sar
cmp
stos
cmp
push
mov
push
rorb
cmp
mov
xchg
push
fistpll
mov
out
popf
mov
adc
inc
add
test
adc
inc
stos
enter
push
loope
cmp
xor
mov
sub
pop
xor
mov
inc
mov
cs
pop
andb
mov
jp
mov
sbb
inc
aad
test
cmp
push
popf
pop
cmc
xchg
or
iret
hlt
jbe
sub
das
push
sub
mov
pusha
xor
call
fists
sub
outsl
push
in
popa
push
fnstenv
jl,pn
enter
andb
cmp
dec
pop
mov
xchg
xlat
sbb
jae
adc
test
xor
xchg
fwait
imul
jl,pt
popf
adc
mov
ss
sahf
push
cmpsb
sbb
cmc
int
jmp
movl
cs
sti
xchg
lea
lods
gs
pop
inc
push
push
jbe
scas
jo
push
testl
inc
push
std
fwait
popa
mov
or
gs
sub
sub
dec
int
dec
pusha
adc
mov
cltd
ja
push
pop
xor
fidivrl
and
ja
es
lahf
xchg
movsb
adcl
cmpsb
jp
inc
add
aam
xor
xchg
adc
xlat
mov
dec
mov
loop
lods
int3
in
jl
sub
je
ljmp
mov
loop
and
repz
lcall
push
xchg
out
cmpl
mov
call
mov
or
add
int
pop
xor
push
outsl
fists
dec
mov
or
cmp
out
cmp
jecxz
xor
pop
shr
inc
adc
add
mov
daa
test
insb
filds
idivl
xor
pop
sub
imul
push
test
das
jns
mov
fsubrl
mov
imul
lods
xor
push
cmp
jle
adc
cltd
enter
into
sub
xorl
pop
sub
rcrl
outsb
push
cmp
in
sti
pop
jg
std
sbb
xchg
mov
test
xor
movsl
fiaddl
or
pop
ja
movsl
mov
hlt
es
cwtl
sti
sub
das
and
stc
movsl
idivb
dec
push
pop
addr16
jle
jae
std
mov
cmpsb
call
mov
aas
dec
pop
and
pandn
ja
cs
ret
jns
mov
stos
mov
add
inc
movsb
jl
add
cmp
cwtl
mov
mov
das
shrb
inc
stc
dec
in
push
xchg
pop
or
scas
mov
loop
or
xchg
pop
shrb
dec
lock
das
mov
dec
lret
lret
lret
mov
sarb
test
lret
repz
ss
jbe
jmp
push
push
xor
jns
test
test
lcall
sub
push
mov
push
test
mov
pop
mov
inc
mov
dec
jo
fstpt
pusha
push
scas
add
out
je
xchg
or
adc
jns
movsb
mov
loopne
jbe
idivb
lock
popf
lock
ror
jnp
cmp
lods
outsl
jne
fisttpl
stos
lea
dec
jge
mulps
xchg
mov
out
stc
out
out
out
mov
movsb
add
scas
cmp
out
inc
mov
adc
fdivrs
je
aaa
adc
mov
stos
pop
stc
imul
push
mov
mov
mov
xor
shl
mov
mov
xor
mov
mov
xor
xor
mov
shrd
or
shr
or
cmp
jne
cmp
je
pushl
pushl
pushl
push
jmp
jmp
dec
int
xchg
jle
or
add
clc
adc
lods
fdivrp
add
jmp
sbb
aad
sub
pusha
stos
jl
mov
fnstsw
fimull
cmp
adc
xchg
push
mov
cmp
xchg
push
out
les
iret
jns
popf
pusha
lods
sub
pop
lcall
enter
fstl
repnz
out
adc
and
jecxz
pop
lret
push
jg
sub
ja
jge
jo
loope
mov
pop
xor
dec
xchg
xor
sub
mov
jle
mov
sti
outsl
out
sbb
jg
dec
mov
mov
ds
out
aas
lods
icebp
sub
inc
push
bound
pop
and
mov
jge
and
fldenv
sbb
addr16
xchg
ja
in
or
pop
push
pop
mov
ud2
mov
push
add
stos
adcb
hlt
or
adc
jecxz
mov
or
jl
mov
adcb
and
xor
push
rcr
mov
pop
jns
jno
inc
fwait
sub
ficoml
pop
inc
icebp
mov
jne
xchg
and
adc
pop
jmp
mov
nop
cmp
or
jbe
or
mov
in
xchg
stos
push
mov
adc
lds
dec
pop
test
bound
pop
add
and
popa
mov
jp
aas
loop
or
pusha
sbb
pop
xchg
or
test
jecxz
pusha
pop
sub
push
idivl
mov
push
stc
jbe
subb
aam
es
out
in
add
pop
push
xor
ss
repz
rcrl
shll
mov
and
and
rcrb
or
mov
cld
in
outsb
xor
fdivs
cmp
add
or
push
ljmp
mov
mov
ret
insb
test
add
fnstsw
push
test
inc
add
aad
jge
dec
data16
movsb
rol
orl
inc
pop
scas
mov
cmpsl
dec
iret
jnp
and
inc
xor
aas
es
adc
pop
insl
jecxz
inc
pop
leave
repnz
ds
int
adc
filds
mov
push
leave
dec
push
mov
lcall
xchg
inc
leave
pop
and
cmpsb
xchg
mov
mov
andl
movsl
adc
jb
and
inc
push
jnp
jne
xchg
jne
jne
inc
sbb
data16
pop
cmc
dec
stos
inc
xor
jge
lea
push
and
fsubrp
xchg
les
into
pop
cmp
repz
out
mov
insl
jnp
adc
repz
or
aam
fsubrs
adc
push
fistpl
pop
sbb
stc
ror
mov
inc
mov
push
ljmp
cmpsl
daa
cmp
dec
jge
or
ret
mov
ljmp
mov
sbb
sahf
sbb
cld
xchg
outsl
cmp
xchg
mov
das
push
outsl
xchg
jmp
pop
shlb
out
jnp
xchg
repnz
mov
int3
mov
xor
ss
sub
sbb
mov
cld
push
ja
cmp
pop
mov
push
movsl
inc
or
jo
mov
push
cs
cmc
ja
pop
or
addr16
adc
divl
xchg
cmp
sub
mov
out
inc
dec
inc
popf
dec
into
jl
push
icebp
ret
imul
add
and
jns
mov
add
add
push
xor
ficoml
out
mov
xchg
inc
xchg
shlb
jecxz
sbbl
pusha
sbb
sub
xchg
fwait
pop
xchg
xchg
push
dec
ror
cmp
adc
test
test
adc
ret
sbb
leave
push
inc
jle
fistpll
adc
and
loop
dec
sbb
bound
lahf
scas
pop
push
loopew
cmpb
inc
xchg
out
inc
test
or
sub
mov
sbb
and
xchg
add
ret
jae
dec
adc
mov
and
pop
aas
mov
repz
jg
xchg
fidivrs
ss
mov
sub
pop
adc
mov
fbstp
push
lret
popa
fwait
iret
rorl
pushf
rcrl
jns
in
movsb
push
mov
ss
inc
test
loopne
out
lret
mov
daa
filds
dec
push
loope
jbe
mov
cmc
mov
lret
xchg
test
int3
imul
mov
repz
add
mov
mov
cmp
fnstcw
jle
popf
xchg
pop
fwait
mov
sbb
jne
xor
cmpsb
adcb
sub
and
imul
adc
xchg
xchg
scas
sbb
mov
sub
pop
mov
insl
and
rcrl
adc
inc
adc
add
loopne
jle
shlb
ds
insb
pop
int
mov
mov
inc
in
adc
lret
xor
mov
inc
gs
pushf
cltd
and
dec
mov
shl
push
adc
or
cwtl
out
lcall
push
das
jecxz
jle
int3
int3
or
dec
or
cmp
and
mov
dec
jp
gs
sbb
int
aaa
mov
stos
movsl
in
mov
mov
por
xchg
sub
sub
pop
mov
faddl
mov
or
dec
add
xchg
xor
or
cltd
lfs
ret
insl
sbb
insb
adc
or
ret
ja
es
or
out
in
enter
adc
xorl
loopne
xor
sub
xor
cmp
mov
rorl
add
push
lret
push
int
jmp
shll
int3
sub
outsl
lcall
fmull
es
mov
mov
sti
test
push
sub
lcall
insl
pop
mov
mov
lods
jb
into
mov
add
outsl
in
sbb
push
sub
divb
hlt
mov
addl
jg
and
stc
into
push
pusha
mov
mov
lods
ljmp
cmp
daa
and
adc
lret
lret
mov
push
inc
inc
fstpl
mov
dec
inc
ja
mov
fsubrl
fcomps
out
paddusw
lret
cwtl
mov
test
xor
cs
add
ret
movl
cmp
movl
jae
movl
cmp
jmp
ret
icebp
imul
scas
sbb
das
xchg
and
adc
push
adc
adc
outsb
add
pop
fsubl
push
pop
aaa
pop
insl
data16
mov
or
in
jmp
inc
shll
pop
test
std
movsl
pop
shll
enter
test
jns
aad
movsb
pop
inc
adc
int
adc
adc
cmp
sbb
xchg
mov
movsl
fmul
jb
jno
pop
in
dec
xor
ja
mov
xchg
jmp
and
mov
mov
dec
repnz
mov
push
jle
inc
fwait
pop
sub
loope
mov
sti
cli
jno
outsb
push
stos
out
xor
xor
inc
xor
push
aam
sbb
push
stc
aam
fldcw
inc
aad
xchg
pop
push
and
stos
cmp
pop
outsl
test
icebp
add
es
fisubl
dec
cmp
add
jne
xor
pop
imul
fiadds
pop
cld
repnz
inc
fiadds
mov
dec
divb
inc
push
loope
mov
xor
movl
xchg
stos
inc
leave
loopne
mov
fisubrl
addl
sahf
adc
outsb
mov
pusha
sahf
adc
sbb
xor
std
mov
sbb
inc
inc
dec
mov
sbb
enter
adc
xchg
jno
pop
rorl
and
out
dec
push
aad
push
lock
pop
jns
add
inc
scas
lea
in
lret
mov
ret
jae
adc
pop
and
mov
pop
scas
push
jp
out
cs
sarb
pop
push
or
lock
movsl
je
and
pop
add
or
es
mov
adc
xor
mov
pushf
mov
int
nop
push
testb
xor
jle
sub
enter
cltd
cs
cli
lcall
dec
jecxz
adc
pop
push
imul
addr16
push
scas
sub
fcomps
mov
mov
sbb
xor
xor
xor
push
ljmp
push
add
int3
cwtl
jl
mov
test
and
cmp
ret
add
pop
inc
jnp
test
and
cs
hlt
addr16
stc
xor
xchg
pop
mov
xchg
jmp
aas
add
stos
repnz
mov
movb
nop
push
ficompl
sub
lods
push
mov
mov
flds
aad
xor
add
insl
pop
push
jmp
push
imul
xor
mov
add
nopl
pop
sub
repz
and
jb
es
cmovbe
stc
jecxz
mov
int
cmp
je
add
ficomps
daa
ja
aaa
dec
mov
pop
add
cmc
js
cld
adc
add
clc
cmp
bnd
dec
inc
push
or
inc
pop
into
std
cwtl
jo
adc
cltd
aaa
xchg
aas
add
jb
popf
sub
or
popf
js
adc
xchg
sarb
cmp
jle
and
inc
add
out
xlat
cli
adc
jnp
xor
fdivrs
pop
sbb
dec
dec
outsl
push
or
and
pop
imul
nop
inc
mov
aam
inc
adc
fidivrl
mov
sub
lods
sbb
je
sub
push
cmp
stos
xchg
imul
push
cld
sub
or
push
cmp
cwtl
int3
je
cmp
outsb
shlb
ds
sbb
sub
lcall
xchg
add
lds
push
push
lea
cwtl
push
adc
outsl
fsubrs
or
movsl
adc
inc
mov
fldcw
mov
loopne
and
into
jne
pop
cmp
mov
cmp
daa
dec
mov
adc
jmp
cwtl
std
jle
out
push
mov
idiv
or
dec
movsl
or
pop
clc
cmp
xchg
mov
and
in
call
xor
dec
pop
cmp
int3
in
push
int
or
jno
stos
fistl
dec
insb
or
scas
mov
jl
cmpsl
cmpb
pop
subl
mov
mov
xchg
inc
arpl
and
dec
lret
lret
jne
lods
stos
pop
pop
insb
mov
int3
lcall
in
sub
aas
xchg
testb
fiaddl
mov
and
jae
pop
mov
dec
dec
xchg
push
inc
xchg
adc
mov
inc
pop
dec
mov
adc
cmp
sbb
mov
push
sbb
pop
es
fcmovnb
add
pushf
mov
cmp
or
hlt
jno
scas
adc
sub
xor
fistl
insb
dec
inc
push
test
icebp
out
call
xchg
repz
repz
cmp
mov
mov
push
cmp
xor
pop
cs
push
int
fdivrs
adc
repz
mov
aas
into
stos
xchg
or
in
add
mov
mov
fstl
rclb
stos
sbb
je
pop
rol
add
pop
int3
je
mov
adc
push
pop
add
mov
test
pop
push
dec
push
loop
insb
aam
and
jmp
imul
mov
int3
data16
xor
loope
mov
shll
std
mov
dec
ja
cmp
xchg
test
call
dec
iret
mov
pop
adc
stc
fimull
mov
mov
inc
inc
sub
fwait
xchg
adcl
jo
leave
push
xchg
decb
test
xchg
xor
cs
rcrb
mov
mov
mov
xor
loope
adc
fldl
fisttps
in
xor
mov
shll
shrl
push
add
lock
scas
mov
inc
sbb
pushf
xor
push
push
fsubr
dec
pop
lahf
enter
pop
lock
std
sub
jno
inc
in
test
shlb
repz
cmc
scas
adc
inc
mov
out
pop
loope
mov
cmp
cmp
imul
rcr
outsb
lock
pop
push
pop
cmp
out
sti
loope
imul
int3
mov
push
mov
data16
or
dec
mov
xchg
loop
or
insb
int
pop
push
lods
sub
pop
mov
lds
dec
aad
mov
jmp
aam
sub
dec
jge
adc
sbb
mov
repnz
dec
test
lock
enter
pop
pop
cli
jno
adc
xor
out
xchg
loop
xor
mov
clc
push
sbbl
add
sbbl
shrd
movl
shr
ret
mov
xor
orl
and
jmp
add
ss
ss
cs
mov
cmc
inc
jle
cmp
or
clc
adc
adc
sub
cmp
lods
hlt
pop
rorb
pop
pusha
dec
add
mov
aad
dec
lret
sub
test
shll
aas
jecxz
fneni(8087
adc
outsb
outsl
rclb
jl
or
mov
shlb
ror
leave
roll
mov
notb
push
jp
fcompl
test
cmpsb
jns
rcll
mov
rcl
rcr
or
pop
xor
adc
repnz
jl
push
data16
push
inc
pop
xchg
cmp
xchg
mov
and
mov
dec
jns
xor
subb
push
jbe
insl
out
xchg
mov
or
loop
loop
push
adc
and
repnz
xchg
cli
xor
push
push
cmp
stos
mov
loope
filds
sahf
lret
adc
das
xchg
jg
jl
sarb
inc
mov
ja
jae
pop
xor
icebp
or
in
or
push
test
rcrb
shl
lret
addr16
jo
jno
or
popf
mov
sbbl
sarb
aaa
out
sbb
pusha
out
adc
mov
mov
push
lds
daa
jno
leave
popf
adc
jl
and
cmp
xchg
jae
and
pop
or
fdiv
loope
mov
out
cmp
mov
cld
scas
jecxz
push
loope
mov
push
jnp
cwtl
fwait
out
cmp
mov
psrlq
mov
stos
push
lahf
adc
pop
cltd
sahf
stos
lock
inc
movsb
push
rcr
daa
fidivrl
jecxz
mov
add
fadds
adcb
fcoml
cmp
fldl
sub
pop
rolb
xorb
or
fistl
lret
es
add
enter
jge
aaa
sbb
ja
add
or
int
and
fidivrs
and
xor
push
push
cmp
out
cmpsb
test
add
sarb
lea
mov
mov
in
sbb
and
cmp
cmp
add
inc
jns
pop
cmpsb
adcl
mov
inc
add
aam
xchg
outsb
mov
or
iret
out
rorl
stos
mov
sbb
xor
lahf
push
lea
hlt
arpl
xchg
js
gs
into
add
push
xor
jae
adc
ljmp
fsubrp
xchg
cli
aad
push
xchg
rclb
in
sub
lcall
rolb
idivb
xor
cmp
mov
cli
gs
mov
mov
dec
xchg
imul
test
mov
and
inc
repz
pop
mov
stos
push
rclb
or
jecxz
out
aaa
les
cmp
incl
loope
aaa
imul
test
das
cmpsb
in
pop
dec
pop
pop
fwait
and
mov
push
adc
imul
loopne
and
inc
clc
jl
rcrb
sub
jmp
mov
insb
enter
mov
mov
icebp
stos
testl
adc
and
into
sub
pop
ja
xor
sbb
movsl
pop
in
mov
xchg
test
mov
fsubrl
aas
adc
jle
cmp
jecxz
aad
mov
add
fadd
movsl
mov
loope
add
pop
js
lds
cmpsl
mov
pop
mov
sub
or
dec
jo
adc
jb
loopne
or
cld
ret
test
mov
push
pop
leave
inc
ja
fs
out
ret
or
ljmp
fdivrl
int3
stos
dec
dec
mov
push
jmp
loop
cmp
push
jge
ja
add
cmp
sub
test
lcall
mov
ss
daa
imull
ret
mov
jno
mov
les
pop
stc
out
mov
sbb
xchg
out
fs
cmpsl
sub
inc
mov
mov
aaa
es
cmp
scas
jns
jl
xor
and
jge
fisubrl
dec
push
sub
sub
js
out
mov
ljmp
into
jnp
imul
lods
jno
lahf
dec
ds
js
mov
out
cmp
jg
adc
out
mov
repz
iret
add
pop
hlt
jno
mov
xchg
inc
test
in
daa
rcl
in
xor
lods
out
cmp
movsl
sbb
shll
std
or
js
ret
cld
jp
and
sbb
sbb
lahf
das
push
lret
jg
cld
cli
leave
and
push
clc
sbb
popf
mov
ljmp
int
ljmp
ret
inc
lcall
loopne
xor
dec
cwtl
mov
js
xchg
mov
sbbl
es
mov
sub
cmp
addr16
push
sarl
das
scas
add
imulb
and
sub
dec
repz
outsb
fildll
xchg
jno
mov
das
mov
sbb
mulb
scas
imulb
jb
pusha
in
popa
jae
fmull
outsl
in
pop
lods
sahf
imulb
fucom
or
cmp
push
insb
or
test
sbb
lcall
add
xchg
jmp
jbe
dec
pop
sti
mov
movsb
aam
bound
es
sub
je
jo
pop
xchg
cmp
sbb
push
sti
jg
and
jns
sbb
or
mov
jo
inc
mov
lret
or
cmpsl
out
aad
push
jns
cmpl
xchg
fs
negb
fstl
daa
cli
imull
ljmp
sub
and
incl
into
stos
jo
ja
rcl
call
rol
push
mov
sub
cmpl
movl
movl
jmp
movl
jbe
pushl
pushl
call
adcl
subl
sbbl
add
xorl
incl
movl
xor
xor
add
mov
mov
movl
andl
mov
movb
cmpl
movl
movl
movl
movl
jmp
mov
mov
ja
push
pushl
push
call
incl
subl
xor
xorl
orl
orl
or
orl
or
movb
subl
movb
movzbl
mov
addl
sub
addl
imul
cmpl
mov
mov
jmp
mov
jne
pushl
pushl
push
pushl
pushl
pushl
call
movzbl
xor
sbb
orl
andl
subl
orl
movzbl
subl
push
adcl
and
mov
movb
orl
movb
andl
movb
sbbl
movb
andl
mov
mov
add
adcl
imul
mov
or
mov
subl
and
mov
movl
cmp
movl
ja
mov
and
mov
sub
mov
cmpl
not
mov
jmp
mov
ja
push
push
push
pushl
pushl
push
pushl
pushl
push
push
push
pushl
push
call
movzbl
and
sbb
xor
xor
or
adc
mov
sub
mov
not
mov
mov
movzwl
movl
movzwl
shr
andl
or
xorl
sub
andl
mov
movb
xorl
movb
mov
mov
xor
add
movzbl
cltd
push
pop
idiv
mov
movb
movb
mov
mov
add
movzbl
movzbl
cltd
idiv
mov
cmp
jae
movl
movl
mov
mov
push
push
push
push
call
xor
xor
or
or
mov
mov
mov
cmp
jne
mov
mov
mov
mov
shrd
shl
mov
mov
shr
xor
mov
xor
or
mov
mov
mov
shrd
xor
shr
mov
mov
xor
or
mov
shl
push
pop
mov
mov
mov
mov
mov
sub
movzwl
mov
movzwl
cltd
idiv
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
and
mov
imul
mov
sub
mov
add
mov
cmp
jbe
mov
mov
shrd
xor
mov
shr
mov
xor
shl
or
mov
pop
leave
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
sub
mov
and
xor
imul
mov
push
sub
push
movl
movl
movl
movl
movl
mov
xor
add
mov
or
sub
mov
mov
and
or
mov
or
mov
mov
sub
mov
mov
mov
mov
mov
xor
or
xor
mov
imul
lea
mov
mov
imul
mov
mov
or
xor
div
mov
and
add
cmp
jb
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
or
lea
add
movl
movl
movl
movl
movl
movl
mov
mov
sub
add
mov
imul
mov
mov
xor
mov
xor
mov
mov
add
xor
sub
mov
mov
mov
mov
mov
sub
mov
imul
mov
or
sub
mov
xor
add
mov
xor
mov
sub
add
cmp
jbe
xor
inc
mov
mov
movl
movl
movl
movl
movl
movl
mov
mov
add
xor
xor
div
mov
xor
mov
mov
div
mov
xor
div
mov
sub
mov
and
imul
and
xor
cmp
je
push
movl
movl
movl
movl
movl
mov
mov
imul
xor
add
mov
and
sub
mov
mov
add
xor
mov
mov
and
sub
mov
mov
mov
mov
mov
xor
or
imul
or
mov
imul
xor
mov
div
add
mov
and
imul
and
xor
cmp
jne
pop
pop
pop
leave
ret
push
mov
sub
push
movl
movl
movl
mov
mov
add
xor
mov
lea
mov
add
mov
movl
movl
mov
mov
add
xor
div
mov
xor
push
sub
imul
xor
lea
mov
movl
movl
movl
mov
mov
shr
sub
mov
imul
div
xor
or
xor
mov
movl
movl
movl
mov
mov
or
sub
or
mov
lea
mov
movl
movl
mov
mov
add
imul
xor
and
mov
movl
movl
mov
mov
and
sub
add
mov
movl
movl
mov
add
pop
div
mov
sub
add
imul
mov
movl
movl
movl
movl
movl
movl
mov
mov
mov
sub
mov
sbb
mov
mov
add
mov
adc
mov
or
or
add
mov
adc
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
or
mov
sub
mov
imul
mov
sub
imul
xor
add
xor
push
mov
add
imul
mov
div
mov
lea
push
mov
mov
mov
mov
push
push
push
push
call
mov
mov
xor
sub
and
xor
mov
mov
lea
push
mov
push
pop
xor
div
mov
sub
add
and
lea
call
mov
mov
imul
mov
sub
add
mov
xor
sub
cmp
jne
mov
mov
sub
mov
sub
add
xor
xor
lea
mov
push
mov
and
xor
imul
mov
div
push
mov
add
push
mov
mov
imul
and
mov
imul
mov
xor
pushl
call
mov
mov
lea
mov
incl
mov
mov
xor
shld
shl
mov
mov
xor
xor
cmp
jne
cmp
jne
mov
mov
jmp
lea
mov
mov
mov
mov
mov
sub
mov
mov
mov
sub
mov
movl
movl
mov
mov
mov
mov
pushl
pushl
pushl
pushl
pushl
push
push
pushl
mov
call
mov
mov
pushl
call
mov
push
add
push
push
call
mov
jmp
mov
mov
pop
leave
ret
push
mov
sub
push
movl
movl
movl
push
movl
mov
mov
push
push
push
call
mov
mov
or
or
add
adc
push
push
push
push
call
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
imul
mov
mov
xor
mov
mov
xor
mov
mov
and
xor
mov
sub
mov
sub
mov
imul
sub
mov
movl
movl
mov
mov
or
mov
imul
mov
movl
movl
movl
mov
mov
or
xor
div
mov
mov
sub
mov
xor
div
mov
xor
pop
mov
movl
movl
movl
mov
mov
sub
mov
div
mov
or
mov
sub
mov
mov
movl
movl
mov
mov
xor
lea
xor
leave
ret
push
mov
sub
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
add
adc
and
and
sub
mov
sbb
mov
add
adc
or
mov
mov
mov
or
add
cltd
adc
cmp
jne
cmp
je
mov
mov
mov
mov
add
adc
or
or
add
adc
xor
xor
mov
sub
mov
sbb
mov
mov
mov
xor
cmp
jne
cmp
jne
mov
add
imul
xor
mov
div
mov
xor
push
push
xor
add
xor
mov
mov
sub
mov
and
div
mov
mov
and
sub
imul
add
xor
and
mov
add
mov
add
mov
xor
or
xor
add
mov
add
mov
mov
mov
mov
xor
xor
add
adc
push
push
call
push
push
push
push
call
mov
add
adc
xor
cmp
jne
cmp
jne
mov
mov
imul
mov
or
sub
mov
lea
mov
pop
leave
ret
push
mov
sub
push
push
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
add
push
adc
push
push
call
mov
mov
sub
mov
sbb
mov
push
push
push
push
call
add
adc
shld
shl
mov
mov
mov
mov
mov
mov
push
add
push
adc
push
push
call
mov
mov
sub
mov
sbb
mov
push
push
push
push
call
add
adc
shr
xor
or
or
xor
mov
push
xor
mov
mov
mov
push
push
push
call
mov
mov
mov
add
mov
adc
mov
and
and
add
mov
adc
add
mov
adc
push
mov
mov
mov
push
push
push
call
push
mov
push
push
push
call
mov
mov
mov
or
mov
mov
shl
or
mov
xor
xor
call
add
mov
mov
push
push
adc
push
push
xor
xor
call
push
push
push
push
call
mov
mov
mov
or
mov
or
or
or
xor
xor
add
adc
xor
xor
shrd
or
mov
shr
or
mov
mov
mov
mov
mov
or
or
xor
mov
xor
mov
push
push
push
push
call
push
push
push
push
call
mov
mov
mov
add
mov
adc
add
pop
adc
pop
mov
mov
pop
leave
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
and
and
or
mov
sub
mov
mov
sub
add
add
mov
xor
cmp
jne
mov
mov
xor
div
push
push
push
xor
mov
mov
mov
mov
mov
imul
mov
div
mov
sub
xor
shl
imul
sub
xor
mov
mov
add
mov
add
mov
mov
mov
xor
and
mov
imul
mov
sub
or
mov
pop
xor
pop
pop
cmp
je
mov
jmp
mov
mov
sub
or
imul
add
jmp
movl
movl
movl
mov
mov
add
imul
mov
or
xor
mov
div
xor
leave
ret
push
mov
and
sub
push
push
lea
mov
mov
mov
mov
sub
sbb
mov
orl
orl
lea
push
lea
push
call
mov
mov
pushl
mov
pushl
mov
pushl
pushl
pushl
pushl
pushl
call
pop
pop
mov
pop
ret
push
mov
sub
push
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
xor
mov
div
mov
mov
mov
xor
mov
xor
mov
mov
or
lea
mov
xor
mov
and
xor
mov
div
mov
xor
sub
mov
sub
add
mov
mov
and
xor
div
mov
mov
imul
sub
add
cmp
ja
push
movl
movl
movl
mov
mov
add
xor
div
mov
mov
imul
imul
lea
mov
mov
mov
mov
mov
mov
mov
mov
xor
imul
lea
mov
mov
or
lea
mov
xor
mov
and
xor
mov
div
mov
mov
sub
mov
sub
add
mov
mov
and
xor
div
mov
imul
sub
add
cmp
jbe
pop
pop
pop
leave
ret
push
mov
sub
push
orl
push
add
push
xorl
mov
dec
mov
shrd
cmpl
mov
movl
jmp
movl
jg
push
push
pushl
pushl
call
or
xor
or
mov
sub
xor
adc
sub
xor
xor
adcl
neg
shr
xor
mov
not
mov
cmpl
mov
mov
mov
mov
jmp
mov
mov
ja
push
push
push
pushl
push
call
addl
movzbl
sbb
sub
xor
xor
mov
xor
or
mov
notl
mov
shl
subl
mov
xorl
shrd
add
xor
movl
shr
adc
mov
mov
xor
mov
sbb
or
mov
or
mov
sbb
mov
mov
mov
mov
add
mov
cmpl
movzwl
movl
jmp
mov
notl
jae
call
adc
sub
and
xor
sub
adc
movl
mov
mov
add
mov
addl
mov
cmpl
movl
mov
movl
jmp
movl
jne
push
call
neg
xorl
or
xor
xor
or
or
add
incl
inc
mov
add
shl
xor
shld
movzwl
or
mov
shl
mov
xor
xor
movl
movl
movl
movl
cmp
jne
cmp
movl
je
mov
and
mov
mov
cmpl
mov
mov
not
jmp
movl
je
pushl
call
adc
or
incl
subl
sub
mov
movl
xor
shld
orl
shl
sbbl
xor
decl
xor
movl
cmp
jne
cmp
movl
je
mov
mov
sub
and
mov
mov
add
mov
addl
shl
mov
addl
xor
andl
shr
addl
or
mov
cmpl
mov
movl
movl
jmp
not
jl
push
pushl
call
add
and
or
adc
and
adc
adc
sub
mov
orl
mov
adc
mov
xor
add
mov
add
mov
sub
mov
orl
push
adc
pop
orl
sub
mov
add
notl
mov
cmpl
mov
mov
movl
movl
jmp
movl
jb
push
push
push
pushl
pushl
call
orl
or
mov
adc
dec
sub
sbbl
lea
cmpl
mov
mov
mov
jmp
movl
je
pushl
push
pushl
pushl
pushl
call
movzwl
and
xor
adc
neg
subl
xor
mov
movzwl
add
mov
mov
orl
xor
adcl
shr
addl
shl
or
mov
adc
movl
cmpl
mov
movl
not
mov
jmp
not
movzbl
je
push
call
sbb
xor
or
add
and
mov
mov
movl
xor
shr
addl
shl
andl
or
push
lea
push
lea
xorl
push
adcl
call
cmpl
movl
mov
mov
jmp
mov
movl
jge
pushl
push
push
push
pushl
push
call
sub
adcl
movzwl
adc
or
movzbl
sub
mov
mov
xor
or
sub
and
mov
add
mov
xor
cmpl
mov
mov
mov
jmp
movl
jbe
pushl
call
adc
mov
mov
or
adc
and
adc
orl
notl
shr
cmpl
mov
movl
movl
jmp
movl
movl
je
pushl
pushl
pushl
call
subl
or
sub
neg
notl
adc
shl
cmpl
movl
movl
mov
jmp
notl
mov
ja
push
pushl
pushl
call
movzwl
sbb
xor
and
sub
sbbl
adc
or
push
lea
adcl
push
or
mov
mov
or
shrd
xorl
shr
sbb
mov
mov
adcl
xor
adcl
xor
xorl
or
subl
lea
adcl
push
shl
orl
call
dec
mov
and
mov
xorl
xor
mov
sbb
mov
shl
shr
movzwl
sbb
or
or
push
lea
xor
xor
sub
push
add
mov
neg
mov
and
shrd
cmpl
movl
not
mov
jmp
movl
movzbl
jge
push
push
pushl
push
pushl
pushl
call
mov
mov
or
sub
movl
movzbl
sbb
mov
or
mov
xorl
xor
xor
sbb
shr
mov
or
mov
xor
andl
shl
sbbl
xor
addl
or
xorl
lea
push
call
inc
mov
adc
mov
movzwl
or
xor
xor
shl
shr
cmpl
movl
movl
jmp
mov
mov
jg
pushl
pushl
push
pushl
pushl
pushl
call
movzwl
xor
inc
or
inc
mov
xor
add
sub
or
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
shl
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
lea
push
shl
call
mov
mov
shl
xor
shr
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
shl
mov
xor
or
mov
shrd
shr
mov
mov
xor
xor
or
add
mov
shl
mov
shrd
shr
mov
mov
xor
xor
or
add
lea
push
shl
call
mov
mov
xor
shr
shl
or
mov
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
mov
mov
push
pushl
shl
call
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
mov
push
pushl
shl
call
mov
mov
mov
mov
mov
mov
mov
rol
mov
xor
mov
cmp
je
movl
mov
movl
mov
mov
mov
mov
mov
mov
add
mov
mov
xor
shld
shl
xor
mov
xor
inc
xor
mov
mov
mov
movzwl
mov
cltd
idiv
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
imul
mov
and
mov
and
mov
imul
mov
sub
mov
cmp
ja
mov
mov
mov
shrd
shr
mov
xor
shl
mov
xor
or
mov
xor
xor
shrd
shr
mov
mov
mov
mov
xor
shl
or
mov
xor
or
xor
cmp
ja
jae
mov
mov
movb
movb
movb
movb
mov
movzbl
mov
xor
mov
imul
movzbl
xor
and
add
mov
movb
movb
mov
mov
and
or
imul
mov
cmp
ja
movb
movb
movb
mov
mov
and
or
add
mov
movzbl
cltd
movzbl
idiv
mov
movb
movb
movb
mov
mov
xor
sub
mov
movzbl
movzbl
cltd
idiv
mov
cmp
jb
mov
mov
shrd
shr
mov
mov
xor
xor
or
sub
shl
mov
mov
shrd
shr
mov
mov
xor
xor
shl
mov
or
ror
jmp
mov
mov
mov
mov
mov
shrd
shr
mov
mov
xor
xor
or
shl
add
mov
mov
xor
xor
shrd
shr
mov
mov
mov
mov
xor
shl
or
mov
xor
or
xor
cmp
jb
ja
cmp
jb
mov
decl
jne
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
add
push
lea
push
shl
call
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
push
push
mov
shl
mov
shrd
shr
mov
mov
xor
xor
or
add
push
shl
call
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
push
shl
call
mov
mov
shrd
shr
mov
mov
pop
xor
xor
pop
shl
or
pop
leave
ret
mov
mov
andl
or
mov
movl
jne
cmpl
movl
movl
jmp
movl
not
jl
pushl
call
and
adcl
subl
andl
movl
subl
mov
mul
ret
push
mul
mov
mov
mull
add
mov
mul
add
pop
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
xor
sub
and
sub
push
movl
movl
movl
movl
mov
mov
imul
mov
imul
xor
div
mov
mov
push
shr
and
xor
mov
sub
mov
mov
mov
and
imul
mov
imul
add
mov
sub
mov
mov
add
xor
pop
div
mov
push
and
sub
xor
add
mov
mov
and
imul
mov
imul
or
xor
pop
sub
mov
mov
or
mov
or
mov
add
or
mov
or
lea
cmp
jbe
pop
leave
ret
push
mov
and
sub
push
push
push
mov
push
call
pushl
call
test
jg
movl
movl
movl
mov
adc
mov
sbbl
imul
orl
or
and
mov
xor
mov
movl
movl
mov
or
mov
subl
mov
push
subl
add
movl
push
movl
adc
orl
push
push
andl
call
add
mov
adc
mov
movl
or
movl
cmpl
mov
mov
jmp
mov
movl
jle
push
call
adc
movzwl
sub
adc
subl
adc
mov
mov
sub
mov
and
and
movl
xor
movl
cmpl
notl
movl
movl
jmp
movl
jae
pushl
pushl
push
push
call
movzwl
adc
mov
sub
andl
xor
xor
and
cmpl
mov
movl
jmp
mov
mov
jbe
push
pushl
call
addl
xorl
adc
sbb
add
add
movl
movl
and
mov
cmpl
mov
mov
movzwl
jmp
mov
mov
jne
pushl
push
call
sub
mov
adc
mov
adc
xor
add
xor
mov
xor
mov
mov
mov
movl
and
cmpl
movl
mov
movl
movl
jmp
movl
movl
ja
push
call
subl
sub
andl
adc
sub
xor
or
sbb
cmpl
movl
movl
movl
jmp
movl
jne
pushl
push
call
mov
add
neg
sbbl
or
subl
sbb
cmpl
mov
mov
mov
jmp
movl
je
pushl
call
adc
add
inc
or
and
add
mov
and
mov
movl
or
andl
or
add
adc
and
and
subl
xor
mov
orl
xor
movl
cmp
movl
ja
movl
jb
cmp
ja
cmpl
mov
mov
jmp
movl
ja
push
push
call
xor
sub
subl
xor
or
sub
add
movl
or
movl
movl
add
movl
cmpl
movl
mov
mov
jmp
notl
movl
jg
pushl
push
push
call
not
sbb
or
or
xorl
add
movzwl
sbb
mov
xor
or
mov
sub
or
movl
cmpl
movl
mov
jmp
mov
movl
jne
push
push
pushl
push
push
call
xor
movzbl
or
xorl
mov
add
or
and
adc
movl
movl
sbb
mov
mov
subl
sub
incl
and
and
or
mov
sub
adc
pushl
cmpl
movl
mov
movl
jmp
movl
not
jl
pushl
push
call
sbb
xor
sbb
or
adc
mov
and
mov
cmpl
mov
not
movzbl
jmp
movl
jae
pushl
call
xor
sbbl
mov
mov
sbb
or
mov
xorl
lea
sub
push
pop
subl
xor
div
add
mov
sub
xor
pushl
mov
movzwl
or
pushl
cmpl
mov
mov
movzbl
jmp
movl
mov
je
pushl
pushl
push
call
xor
or
add
xor
adcl
xor
or
addl
adcl
mov
sbbl
pushl
and
or
pushl
mov
addl
pushl
addl
xor
xor
pushl
adc
mov
sub
pushl
orl
call
movl
add
movl
mov
or
movl
xor
movl
mov
mov
or
mov
mov
subl
sub
xor
mov
and
mov
orl
xor
shr
imul
pushl
call
xorl
dec
cmp
jne
cmpl
movl
mov
mov
jmp
mov
jl
push
call
movzwl
sbb
movl
xor
xor
and
xor
add
add
xor
adc
neg
movl
cmpl
movzwl
movl
jmp
movl
movl
jbe
call
negl
xor
add
xor
neg
xor
adcl
cmpl
mov
mov
mov
jmp
movl
movl
jae
push
call
xorl
xor
adc
add
and
movl
adc
or
mov
movl
mov
andl
movl
mov
sbbl
call
cmpl
movl
not
movl
jmp
not
not
ja
pushl
push
push
push
call
mov
mov
sub
and
neg
adc
sub
or
add
sbb
lea
cmpl
not
mov
jmp
mov
jae
push
pushl
call
adc
mov
mov
sbb
andl
adc
adc
adc
mov
addl
lea
cmpl
mov
movl
mov
jmp
mov
movl
jge
push
pushl
push
pushl
push
call
xor
and
movzbl
and
mov
and
addl
mov
mov
sbb
mov
and
mov
sbb
mov
and
xor
cmpl
mov
movl
jmp
movl
jge
pushl
push
push
push
pushl
call
orl
addl
xor
add
xor
xor
sub
add
mov
mov
sub
or
sub
xor
cmpl
movzbl
movl
movl
mov
jmp
movl
movl
jne
push
push
push
call
or
sub
xorl
xor
or
mov
mov
or
sub
shl
cmpl
movl
movl
mov
jmp
mov
movl
jg
pushl
pushl
call
mov
xor
xor
sub
imul
mov
mov
sub
and
sub
add
not
shr
dec
or
mov
xorl
mov
sub
mov
mov
xor
add
or
mov
mov
mov
sub
shrd
shr
cmpl
mov
mov
jmp
movl
jg
push
call
adc
xor
add
adc
adc
or
adc
xor
and
mov
mov
xor
xor
or
mov
push
pushl
lea
push
shl
call
lea
push
mov
mov
lea
push
mov
lea
mov
mov
mov
push
call
push
push
pushl
call
mov
mov
mov
mov
shr
shl
or
mov
xor
mov
lea
mov
lea
mov
mov
sub
lea
xor
movl
movl
movl
movl
mov
mov
add
mov
mov
adc
xor
xor
and
mov
and
mov
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
push
or
or
push
push
call
mov
mov
sub
mov
sbb
mov
cmp
jne
cmp
je
movl
movl
movl
movl
mov
mov
mov
mov
add
adc
xor
xor
and
mov
and
mov
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
push
push
xor
xor
push
push
call
mov
mov
push
push
push
push
call
mov
mov
push
push
push
push
call
mov
mov
add
mov
adc
mov
cmp
jne
cmp
je
mov
mov
xor
shld
shl
mov
mov
mov
xor
xor
mov
cmp
jne
cmp
je
mov
cmp
je
mov
mov
xor
xor
shrd
shr
mov
mov
mov
shl
xor
or
xor
mov
mov
or
cltd
cmp
jne
cmp
jne
movl
movl
mov
mov
mov
xor
shld
shl
mov
mov
xor
xor
mov
cmp
jne
cmp
jne
movl
mov
mov
shrd
shr
mov
mov
mov
mov
mov
shl
mov
xor
xor
or
cmp
jne
mov
mov
mov
mov
mov
mov
movzwl
mov
and
mov
or
mov
add
or
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
or
mov
or
mov
sub
mov
sub
mov
cmp
jbe
mov
mov
mov
mov
movzwl
mov
or
mov
sub
mov
or
imul
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
xor
mov
imul
mov
and
mov
and
mov
cmp
ja
mov
mov
shrd
xor
mov
shr
mov
xor
or
push
push
shl
push
lea
push
lea
push
call
pushl
pushl
pushl
pushl
call
mov
mov
mov
mov
shrd
shr
shl
xor
mov
xor
or
mov
mov
mov
mov
shrd
xor
mov
shl
shr
mov
xor
or
mov
mov
mov
mov
mov
cmp
jne
mov
mov
mov
cmp
jne
movb
movb
movb
movb
mov
mov
or
sub
mov
sub
movzbl
movzbl
cltd
idiv
movzbl
or
mov
movb
movb
movb
movb
movb
mov
mov
or
and
mov
imul
mov
movzbl
movzbl
and
mov
movzbl
cltd
idiv
mov
cmp
je
lea
push
lea
call
cmp
jne
cmp
jne
xor
jmp
xor
inc
jmp
mov
mov
mov
mov
add
adc
mov
mov
jmp
mov
push
push
lea
push
call
mov
push
pushl
lea
push
call
mov
mov
mov
mov
mov
mov
mov
lea
mov
add
movl
movl
mov
and
add
and
sub
and
mov
movl
mov
mov
or
add
cmp
je
mov
mov
mov
xor
shld
shl
xor
xor
cmp
jne
cmp
je
mov
mov
mov
mov
xor
shr
shl
or
xor
shld
shl
xor
xor
cmp
jne
cmp
je
mov
cltd
mov
mov
cltd
shld
shr
xor
shl
or
or
mov
mov
xor
xor
mov
cmp
jne
cmp
je
pushl
pushl
mov
mov
pushl
mov
call
mov
mov
mov
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
adc
push
push
sbb
push
movzbl
sbb
movl
movl
or
movl
movl
neg
mov
mov
mov
mov
xor
and
subl
mov
cmpl
mov
mov
jmp
movl
movl
jb
pushl
call
and
adcl
mov
and
add
dec
xor
and
subl
add
mov
xor
xor
movzwl
xor
mov
orl
movl
neg
movl
adcl
mov
xor
cmpl
movl
movl
mov
jmp
movl
mov
jne
push
pushl
push
push
call
sub
add
sub
mov
mov
or
mov
mov
sub
sub
cmpl
mov
movl
movzwl
mov
jmp
movl
movl
jge
pushl
push
push
call
add
inc
movzwl
and
adc
and
sub
subl
mov
add
imul
not
xor
or
mov
div
adc
sub
mov
mov
sub
and
mov
or
movl
movl
mov
mov
and
movl
movl
add
movl
sub
movl
movl
mov
mov
imul
add
or
and
sub
sbbl
mov
sub
andl
mov
sub
mov
sub
andl
add
sub
mov
andl
xor
subl
div
mov
adcl
sub
mov
add
movzwl
sub
mov
sub
movl
xor
movl
mov
mov
sub
and
movl
add
mov
xor
cmpl
mov
mov
mov
jmp
mov
je
push
call
and
or
sbbl
mov
adc
addl
movl
adc
add
mov
xor
div
cmpl
mov
movl
mov
mov
jmp
movl
movl
jb
push
call
or
mov
sub
xor
or
adc
andl
dec
sbb
and
cmpl
movl
mov
jmp
movl
movl
jl
pushl
push
pushl
push
push
push
pushl
call
sbbl
sub
sbbl
mov
sub
mov
and
mov
or
and
sub
sub
mov
movl
and
movl
mov
mov
xor
movl
sub
movl
mov
cmpl
mov
movl
movzbl
jmp
movl
ja
pushl
push
pushl
call
mov
sub
movzbl
add
mov
orl
xor
mov
xor
mov
and
mov
xor
adc
xor
adc
push
xor
pop
movl
div
cmpl
mov
mov
movl
jmp
movl
movl
je
push
push
push
pushl
call
inc
inc
xor
sbbl
mov
xorl
xor
orl
div
movl
mov
movl
or
sub
sub
cmpl
mov
mov
movl
movl
jmp
movl
movl
jb
push
pushl
push
pushl
pushl
pushl
push
push
call
negl
xor
mov
and
mov
adcl
mov
adcl
movl
mov
cmpl
movl
movl
movl
jmp
movl
mov
jle
push
push
push
call
andl
addl
andl
sbbl
sbb
sbb
mov
andl
xor
orl
div
andl
imul
cmpl
mov
movl
mov
jmp
movl
mov
jg
pushl
push
call
or
and
adc
or
neg
xor
orl
xor
sbb
imul
add
xor
mov
sub
mov
mov
subl
movl
movl
subl
movl
sbb
mov
cmpl
movl
mov
jmp
movl
jge
pushl
call
adc
subl
xor
xor
mov
sbb
adcl
or
cmpl
mov
movl
movl
jmp
notl
movl
jg
pushl
push
pushl
call
orl
sub
sbb
xor
xor
adc
andl
add
orl
or
and
or
mov
addl
xor
sbbl
div
sub
mov
sbbl
imul
or
add
xor
mov
incl
sub
cmpl
movl
movl
movl
movl
jmp
movl
je
push
pushl
call
addl
movl
subl
or
xor
andl
mov
cmpl
mov
mov
mov
movl
jmp
mov
mov
je
pushl
pushl
pushl
push
pushl
call
xor
add
sbb
or
adcl
mov
mov
adc
sub
xor
movl
mov
and
and
cmpl
movl
mov
jmp
mov
movl
jge
push
push
pushl
push
pushl
push
call
orl
xor
xor
adc
mov
xor
add
xor
mov
not
movzwl
sbb
sbb
add
cmpl
movl
notl
mov
notl
jmp
movl
jb
push
pushl
push
push
push
call
adc
movzwl
sub
adc
add
adc
andl
mov
sbb
or
xor
cmpl
mov
mov
jmp
movl
je
pushl
call
movzbl
or
mov
andl
mov
adc
addl
mov
sub
mov
movzbl
adc
adcl
sub
mov
mov
xor
add
sub
imul
movl
cmpl
mov
movl
jmp
notl
movl
ja
push
call
sbbl
mov
sbb
sub
sub
add
xorl
movl
xorl
movl
neg
mov
adc
and
mov
adc
add
adcl
add
add
or
cmpl
not
movl
jmp
mov
mov
jl
push
push
call
mov
adc
movzbl
adc
sub
notl
sbb
add
or
xorl
sub
mov
movl
xor
movl
adc
movl
cmpl
mov
mov
jmp
mov
mov
jg
pushl
push
pushl
call
andl
orl
not
add
add
mov
shr
sub
xor
xor
mov
lea
movl
push
orl
call
mov
cmpl
not
mov
jmp
movl
movl
jbe
push
push
push
push
call
or
neg
add
sub
xorl
xor
add
cmpl
mov
mov
mov
jmp
not
jl
push
pushl
push
call
mov
xor
xor
or
xor
xor
sub
or
or
xor
or
mov
sub
and
or
mov
mov
sbb
or
xor
add
sbb
and
lea
mov
mov
mov
sub
or
movl
sbb
movl
cmpl
movl
mov
mov
jmp
mov
movzbl
ja
push
push
pushl
push
call
mov
mov
sub
imul
mov
mov
and
sbb
subl
xor
movl
movl
movzbl
adc
mov
movl
movl
movzwl
sub
movl
movl
subl
mov
add
mov
and
dec
sub
mov
sub
lea
mov
orl
mov
mov
sub
mov
imul
sbb
and
cmpl
mov
not
movl
movl
jmp
movl
movl
ja
pushl
push
push
call
add
orl
adcl
negl
andl
subl
movzwl
and
not
imul
cmpl
mov
not
jmp
movl
jl
pushl
pushl
call
adc
add
adcl
sbb
subl
mov
or
mov
lea
mov
cmpl
movl
mov
movl
jmp
mov
jbe
push
call
sbbl
and
movzwl
adc
sub
mov
mov
sbb
xor
or
and
mov
cmpl
mov
movl
not
jmp
movl
mov
jge
pushl
push
push
push
pushl
push
call
add
orl
sbb
add
neg
addl
sub
movl
adc
movl
movl
cmpl
mov
mov
mov
movl
jmp
movl
jg
pushl
push
push
call
sbb
xor
sbb
mov
sub
mov
sbb
adc
movl
cmpl
mov
movl
mov
jmp
mov
ja
pushl
push
call
mov
mov
sub
or
inc
add
sbb
or
and
add
mov
mov
mov
xor
xor
xorl
mov
addl
call
adcl
mov
orl
mov
orl
mov
cmpl
movl
mov
mov
jmp
movzwl
mov
jl
pushl
push
pushl
pushl
push
call
add
movzbl
adc
mov
xor
add
add
mov
sub
add
mov
xor
xor
mov
call
or
or
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
mov
call
mov
or
mov
or
push
push
push
push
call
mov
cmp
jne
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
mov
mov
call
or
mov
or
push
push
push
push
call
mov
jmp
jmp
lea
mov
mov
movl
mov
xor
shr
mov
xor
shl
or
mov
mov
mov
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
mov
call
mov
or
mov
or
push
push
push
push
call
mov
cmp
je
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
imul
add
mov
mov
mov
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
mov
mov
call
or
mov
or
push
push
push
push
call
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
xor
mov
sub
mov
xor
xor
add
mov
movl
movl
movl
movl
movl
movl
movl
movl
mov
add
mov
sub
xor
push
pop
div
mov
xor
add
mov
xor
mov
xor
div
or
mov
xor
mov
sub
mov
mov
sub
mov
xor
mov
div
mov
xor
div
mov
sub
mov
mov
add
lea
mov
movl
movl
movl
movl
movl
movl
movl
mov
or
mov
xor
div
mov
xor
div
mov
lea
mov
mov
sub
mov
xor
mov
div
mov
imul
add
xor
mov
add
mov
and
xor
mov
mov
add
add
mov
movl
movl
movl
movl
movl
movl
movl
mov
mov
imul
imul
mov
imul
mov
sub
add
mov
and
mov
sub
imul
mov
mov
or
sub
xor
mov
div
xor
mov
mov
add
add
mov
andl
jmp
mov
inc
mov
mov
mov
cmp
je
mov
mov
mov
add
mov
mov
mov
mov
mov
movl
movl
movl
movl
lea
mov
mov
movzwl
xor
movzwl
sar
mov
movzwl
xor
movzwl
shl
or
movzwl
mov
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movzbl
push
lea
push
call
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
add
mov
mov
cmp
je
mov
mov
movzwl
xor
movzwl
sar
mov
mov
movzwl
xor
movzwl
shl
or
movzwl
mov
mov
mov
movzwl
xor
movzwl
sar
mov
mov
movzwl
xor
movzwl
shl
or
mov
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
or
je
lea
mov
mov
xor
mov
call
mov
mov
mov
xor
mov
call
or
or
xor
xor
mov
mov
mov
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movsbl
cmp
je
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
movsbl
cmp
je
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movsbl
cmp
jne
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
add
mov
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
cmpl
je
mov
mov
movzwl
mov
mov
mov
jmp
jmp
cmpl
jne
xor
jmp
mov
add
mov
movl
cmpl
je
cmpl
je
mov
shl
mov
movl
sub
mov
movl
mov
cmp
je
mov
mov
mov
mov
mov
mov
mov
inc
mov
jmp
movl
push
jmp
mov
mov
ret
not
push
push
cmpl
mov
movl
movl
movl
jmp
mov
mov
jge
push
pushl
pushl
push
push
pushl
call
xor
add
subl
adcl
add
sbb
mov
sbb
mov
xorl
or
movl
jne
xor
xor
mov
sub
or
mov
mov
cmpl
movl
mov
movl
jmp
movl
je
push
push
pushl
push
pushl
push
push
push
push
pushl
push
push
push
call
or
decl
andl
adc
sbbl
xor
div
mov
mov
div
mov
jmp
mov
mov
mov
mov
shr
rcr
shr
rcr
or
jne
div
mov
mull
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
xor
mov
pop
pop
ret
andl
subl
cmpl
movl
je
and
add
mov
mov
mov
pop
pop
pop
leave
ret
movl
cmp
jae
cmp
movl
jae
shld
notl
shl
ret
mov
xor
mov
decl
xor
and
shl
ret
xor
xor
ret
