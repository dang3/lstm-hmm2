push
mov
sub
mov
mov
jmp
adcb
shrl
or
jle
outsl
jge
jle
xlat
cmp
rol
pop
add
add
rdpmc
xadd
adc
mov
push
out
mov
es
lods
fiadds
data16
outsl
or
pushf
js
inc
stos
push
sub
mov
stos
push
roll
jmp
mov
dec
out
inc
call
mov
and
jnp
ret
xchg
and
jmp
ret
lock
and
add
adc
xor
or
fisttpll
ds
or
fst
or
pop
fstps
jno
inc
dec
aaa
adc
sarl
dec
call
dec
adc
lods
mov
add
mov
scas
es
dec
movsl
aad
jl
mov
xchg
inc
fwait
push
pop
shrl
push
jmp
leave
mov
ljmp
test
scas
mov
adc
arpl
sti
or
insl
lods
movsb
mov
inc
in
or
cmp
loop
push
fs
cmp
pop
pop
xlat
adc
dec
fmuls
xchg
in
pushf
lds
mov
pop
push
mov
cmp
xchg
mov
inc
stos
ror
rcl
sbb
lds
outsl
sub
scas
or
pop
out
or
mov
push
lret
push
mov
xchg
mov
test
int3
neg
icebp
frstor
popa
xchg
sbb
pop
pop
mov
or
mov
or
jle
or
pop
mov
jo
in
or
iret
mov
cmp
fcmovnb
jp
ja
jno
lods
mov
mov
data16
push
inc
in
cltd
sbb
inc
test
pusha
jne
movsl
mov
in
adc
xor
out
imul
fsub
xor
aas
jmp
stos
sti
push
out
cmpsb
inc
mov
sbb
xlat
arpl
mov
or
mov
out
jnp
push
jge
mov
cld
repz
repnz
jp
movsl
sbb
push
jns
inc
mov
insb
xchg
shr
scas
shl
adc
mov
cmp
push
cmc
xchg
dec
inc
jne
sub
mov
iret
aad
loopne
lret
pop
sbb
test
fsubrl
fstpl
inc
mov
in
cmp
fiadds
cli
xchg
mov
lret
cmp
fdivs
adcb
int
push
test
call
pop
pop
je
pop
les
jle
xchg
mov
pop
mov
mov
dec
dec
in
mov
aaa
push
aad
or
aad
adc
out
xchg
fwait
xor
scas
lret
scas
xlat
push
rclb
insb
mov
out
cwtl
movsl
cltd
lods
lahf
dec
and
xchg
mov
lret
push
outsb
hlt
rclb
and
rcl
jne
sarl
idivb
movsb
mov
les
les
jmp
jecxz
insb
mov
lret
xor
sbb
mov
push
pop
test
jb
icebp
mov
jb
in
test
xlat
sub
mov
jbe
push
std
and
push
scas
ret
inc
lcall
aam
adc
or
cltd
in
mov
js
and
sahf
mov
cmp
in
jmp
mov
fnsave
sahf
repnz
pop
gs
cmp
mov
gs
enter
xchg
int
and
ret
push
shl
iret
test
mov
xor
lcall
xorb
xchg
sti
push
xchg
jge
sbbl
xchg
sbb
pop
xchg
adc
push
push
xlat
mov
pop
xor
sub
out
cmp
add
lock
pusha
add
movl
adc
mov
mov
mov
or
push
push
sbb
mov
movzbl
sbb
xor
and
push
movl
cmpl
je
cmpl
jne
pushl
call
mov
dec
mov
jmp
mov
jmp
xchg
mov
push
mov
push
out
xor
jge
jle
jge
jle
sbb
add
orl
mov
and
xchg
mov
inc
out
cmp
rcr
mov
jecxz
dec
jnp
iret
mov
jle
xor
sub
jno
and
fstps
pop
push
pop
lahf
scas
or
jno
pop
cmp
fildl
scas
sub
ljmp
loopne
mov
push
jecxz
jnp
push
xor
jno
pop
lock
pop
mov
loope
push
push
fwait
ret
imul
das
mov
add
jnp
cmpsl
movsl
fs
dec
lret
dec
xor
in
adc
push
mov
push
sarb
loope
push
dec
mov
popa
pop
movsl
test
pusha
mov
scas
sbb
or
mov
int
inc
lock
aad
xchg
pusha
jp
out
sub
and
arpl
adc
jo
std
popa
sub
xchg
sub
mov
lds
jp
xor
and
add
mov
add
push
jl
add
cli
xchg
xchg
xchg
push
pop
jns
es
add
movsl
sub
xchg
inc
mov
inc
jecxz
mov
or
push
jp
lea
hlt
insb
lds
sub
push
aad
insl
ret
adc
mov
fldcw
aam
lret
xor
rcl
imul
xchg
cmpsb
cmc
jmp
sbb
ja
fs
pop
js
and
push
enter
jno
lret
sub
int
dec
lods
test
mov
jno
xorl
inc
push
push
pop
fwait
addr16
sarb
push
jnp
in
cmp
fdivl
cmp
mov
cld
xchg
xor
add
lret
pop
enter
imul
push
pop
sbb
call
add
stc
push
sub
cmp
mov
decb
lods
or
into
or
inc
aam
cmp
loopne
decl
cmp
movsb
bound
push
inc
sub
outsb
sub
and
andl
jl
push
push
popa
stos
sbb
loope
xchg
popw
xor
data16
movsl
dec
mov
xor
push
cs
hlt
mov
add
jbe
aaa
push
rcl
sub
mov
jo
xchg
out
mov
sbb
repnz
adc
mov
leave
lcall
xchg
mov
dec
loop
adc
mov
and
popa
ljmp
mov
inc
enter
and
aas
cmp
fucom
insl
xor
call
xor
fidivl
or
lcall
adc
xor
dec
sub
lahf
enter
arpl
lock
test
icebp
sbb
movsb
xchg
aad
insb
add
notb
insl
rcrl
addl
adc
inc
pop
xor
inc
pushl
jmp
dec
cmp
stos
mov
sbb
cmpsb
dec
add
adc
out
or
mov
xor
push
lods
lret
icebp
das
fs
aaa
cmp
jo
cmp
es
sbb
inc
andb
sub
push
lcall
nop
and
xorl
mov
ss
sarl
xchg
cmp
or
adc
leave
lods
xlat
push
fistpll
xor
push
aam
jne
pop
sub
xchg
dec
imul
je
clc
pop
pop
push
xor
ja
in
inc
mov
dec
inc
ret
loop
jne
pushf
aad
inc
push
cmpsl
insb
roll
jae
cs
or
or
movl
add
or
sbb
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
movl
mov
movl
movl
or
movl
add
movl
xor
mov
xor
xor
add
mov
movl
sbb
movb
subl
mov
xor
add
sbbl
mov
mov
xor
xorl
add
mov
mov
movl
cmpl
je
cmpl
jne
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
andl
xor
add
not
mov
sub
mov
add
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
xor
xor
inc
mov
jmp
movl
cmpl
je
cmpl
jne
push
call
cmpl
jne
xor
xor
dec
mov
mov
dec
mov
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
xor
jmp
mov
mull
cmp
sbb
or
jle
jge
jle
dec
mov
fcmovbe
std
mov
test
push
mov
fwait
lret
xchg
and
ret
mov
daa
xor
mov
push
mov
inc
cwtl
dec
data16
cmp
in
aaa
repnz
add
bound
lret
sub
outsl
mov
inc
out
pop
mov
jb
add
int
and
dec
aam
loope
add
xchg
xchg
dec
sbb
pushf
insl
js
stos
scas
lahf
cmp
mov
mov
ret
les
int3
rcrb
dec
cltd
lock
ret
aam
mov
sub
mov
jo
and
fabs
fistps
mov
test
jp
arpl
mov
sbb
xchg
cltd
negl
int3
mov
ljmp
movsl
cmpsl
or
or
push
push
cld
aam
sub
lret
xor
adc
outsb
mov
lock
mov
incl
jge
xchg
push
ret
mov
jns
dec
pushf
mov
add
lcall
or
sub
dec
test
push
cmp
aad
push
ret
sub
mov
aam
arpl
ljmp
jns
repz
imul
pop
les
fwait
add
dec
push
jae
lock
gs
fincstp
and
int
nop
pop
cmp
jg
xor
xchg
jb
adc
dec
inc
and
mov
cmp
in
adc
xchg
subl
shll
mov
adc
sbb
jge
adc
aam
jnp
jns
andl
sbb
or
adc
testl
adc
mov
mov
daa
xchg
cmpsl
mov
cmpsl
shl
add
data16
or
adc
sbb
xchg
mov
or
mov
in
sbb
call
xorl
rcll
scas
add
add
and
decb
aas
mov
rorl
mov
cwtl
outsb
lcall
sarb
das
mov
cld
add
dec
test
aam
sti
cmovns
mov
lcall
inc
notb
mov
fnstcw
jle
sub
sbb
push
push
sub
and
ret
stc
sub
mov
xor
pop
lret
mov
dec
inc
subb
mov
test
ja
ljmp
shl
rorl
push
rolb
xchg
xchg
icebp
jge
jo
mov
lods
cmp
pop
xor
rolb
addb
xchg
push
add
push
ja
xor
cwtl
xor
es
test
out
sbb
enter
imul
and
js
push
adc
mov
pop
dec
mov
jnp
mov
aam
xor
fmuls
fisubrl
mov
push
xchg
inc
or
movsb
push
mov
sub
negb
adc
jne
int
push
loop
rolb
dec
sbb
sarl
sbb
outsl
cltd
mov
lret
daa
cwtl
cld
push
dec
and
pop
jg
cltd
inc
mov
xorb
mov
and
xchg
outsl
add
mov
pmaddwd
stos
icebp
notb
mov
or
lahf
mov
lods
mov
lods
xchg
scas
sub
imul
cltd
push
icebp
fstpl
mov
xorl
addr16
fsub
pop
inc
or
mov
clc
hlt
sub
lock
mov
or
iret
sbb
roll
mov
mov
sub
add
mov
mov
mov
xor
jmp
lahf
in
leave
decl
imul
and
popa
mov
jle
outsl
jge
jle
test
xor
push
mov
aam
cmp
adc
ficoml
enter
int3
xchg
insb
xchg
out
jns
sarl
mov
add
inc
xor
jge
in
cmpsb
out
call
dec
fldcw
jmp
or
ret
out
out
outsl
mov
sarl
mov
push
imul
push
lock
mov
call
mov
stc
xor
push
popa
lahf
push
sub
pop
xchg
sub
out
and
jge
mov
aad
int3
aas
mov
lret
inc
and
push
push
lret
push
leave
mov
outsb
mov
cmp
lock
xor
sbb
in
adc
dec
mov
loope
adc
outsb
jg
lahf
mov
lret
out
out
mov
sbb
shr
mov
and
add
fstpl
int
xor
add
mov
sub
cmpsb
pop
dec
xor
sahf
cmp
push
insl
outsb
shll
cmp
xor
loop
push
nop
int
mov
push
aad
stos
test
ret
and
imul
rolb
ss
les
test
push
xor
mov
mov
imul
push
shll
shlb
xchg
ss
stos
imul
sub
inc
das
push
mov
sbb
and
xchg
or
sbb
imul
push
adc
or
adc
xchg
inc
pusha
dec
push
mov
lahf
cwtl
in
data16
lret
mov
jns
in
addr16
ja
mov
sbbb
ja
inc
test
cmp
sbb
fmulp
shlb
pop
xor
divl
dec
jnp
add
outsl
pop
jl
sbb
outsl
out
pop
mov
or
call
shlb
les
push
mov
pop
pop
dec
call
test
or
sub
mov
aaa
sahf
jae
push
add
xor
std
ljmp
cltd
test
repz
mov
cmp
aam
adc
dec
test
adc
outsb
popl
push
add
hlt
jge
aad
data16
and
ret
in
adc
inc
sahf
sbb
mov
mov
mov
adc
sub
mov
inc
lret
add
and
sbbb
fabs
mov
jmp
enter
or
sti
movsb
and
loope
insl
loop
dec
adc
add
or
dec
clc
xlat
jmp
into
or
or
rcl
pushf
stos
and
out
bound
pop
mov
les
call
lods
fistpl
mov
inc
push
sub
sbbl
mov
cmp
shll
lods
or
mov
mov
aad
push
mov
sub
sub
xchg
inc
addr16
leave
aas
enter
fcompl
scas
les
nop
mov
int3
lea
lret
scas
xchg
fisttps
stc
mov
popa
xor
pop
gs
imul
imull
loope
fidivrl
jb
add
jnp
push
ljmp
inc
je
icebp
xchg
xor
clc
xorl
cltd
ret
sbb
cmpsb
mov
lods
jmp
pop
xchg
pop
push
sbb
mov
enter
pop
jns
and
mov
pusha
dec
je
scas
jge
shl
movsl
les
add
incl
inc
clc
mov
xor
mov
not
mov
or
mov
and
mov
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
movzwl
or
mov
xor
add
orl
mov
mov
andl
mov
inc
mov
cmpl
jne
pushl
pushl
pushl
pushl
push
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
xor
add
mov
mov
mov
jmp
rorb
dec
inc
push
push
push
sbb
push
icebp
mov
jge
jle
in
jnp
cmp
lods
in
lret
rorb
mov
push
mov
inc
shrl
clc
adc
cs
aaa
sub
mov
clc
out
shl
mov
cmc
push
jge
movsl
push
jmp
rol
inc
andl
mov
sti
iret
lret
enter
dec
mov
mulb
fidivs
es
add
mov
cmp
dec
scas
add
lret
bound
into
or
loope
cmp
inc
jge
lret
and
data16
sub
jle
aaa
xchg
push
add
ss
pusha
and
dec
mov
stc
mov
das
push
push
inc
add
imul
mov
xor
cmpsl
cmc
cld
adc
out
js
adc
fwait
popa
addr16
jnp
aaa
add
mov
cltd
flds
cli
add
xchg
cmp
aad
xorb
dec
push
sahf
les
sub
sbb
and
je
ficomps
iret
in
mov
cmpsl
dec
push
mov
xor
out
insb
dec
inc
cmp
loopne
lret
popa
jl
or
xchg
or
popf
xchg
mov
add
mov
cmp
ficompl
sahf
nop
xor
je
jmp
and
clc
add
sub
pop
std
xchg
sub
xchg
loop
mov
sbb
lret
fisttps
jmp
sbb
sbb
inc
sbb
gs
popf
rorb
push
sub
loop
inc
lea
mov
mov
hlt
fsubs
aas
jecxz
ds
aam
pop
fsts
rcll
adc
les
mov
lods
filds
clc
stos
mov
add
stos
mov
ja
test
adc
sahf
xor
adc
xchg
lahf
jae
daa
loope
lods
lret
dec
cmp
mov
xchg
lret
sti
mov
cmp
data16
xchg
in
and
lret
fisubl
inc
and
in
xchg
sub
push
mov
ret
dec
int
pop
mov
jne
jmp
push
add
sbb
and
or
dec
xchg
loopne
push
push
pop
jbe
std
fsubrp
std
xor
mov
cmpsl
inc
pop
adc
cmpl
pop
mov
cmp
daa
fimull
add
or
push
jecxz
mov
mov
ret
daa
dec
inc
mov
mov
addr16
add
inc
inc
cli
cmp
subb
cmp
es
sbb
pushf
fwait
mov
inc
lods
movsb
pop
add
arpl
pop
jecxz
cmp
adc
pop
xchg
test
orps
outsb
popf
enter
call
lret
mov
mov
dec
insb
sar
lcall
imul
sub
xchg
das
sbb
bound
xor
push
push
das
ret
fsubs
dec
push
cmp
sub
mov
andl
mov
cmp
hlt
shll
adc
rcrb
push
lods
mov
mov
mov
sbb
repnz
pop
fidivl
mov
mov
jns
iret
adc
ret
ds
mov
sar
push
add
mov
sub
test
cmp
add
loope
mov
loopne
shll
incl
lods
cmc
scas
in
push
shlb
push
les
jnp
lcall
ffreep
pop
jns
cmp
fildl
or
jle
std
fwait
insl
inc
jge
repnz
mov
fisttpl
xchg
xchg
sub
adc
insl
jbe
push
xchg
cmpsb
push
loope
rolb
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
je
lea
push
mov
xor
add
push
mov
jmp
xor
mov
mov
mov
sbb
adc
stos
or
jle
scas
dec
dec
daa
out
rorb
das
je
daa
jno
add
insl
adc
ffree
xorl
or
jg
call
xor
or
mov
dec
pop
into
fisttpl
mov
adc
inc
lods
push
aas
jno
cmp
cmpsb
fnstenv
fcmovnb
pushf
cmpb
and
xchg
lcall
sarl
imul
cwtl
and
loopne
mov
mov
mov
sub
cli
into
add
and
shrb
ds
roll
mov
dec
std
arpl
xchg
call
iret
outsb
cltd
cmp
jns
orl
js
pop
shl
cli
cmp
jnp
jl
cmc
xor
mov
xor
xchg
cmp
cmc
bound
icebp
in
nop
lods
je
pushf
rcll
sub
loop
int
push
lret
enter
push
ret
divb
mov
pop
jge
loop
cmc
fnstenv
fistpll
xchg
jbe
icebp
in
out
imul
sti
les
or
or
fldt
hlt
in
pusha
mov
cmp
push
xor
icebp
xor
test
sar
out
mov
imul
clc
jmp
test
test
data16
or
test
aas
out
orb
std
rolb
out
movsb
ficomps
jb
stos
data16
sub
aam
and
adc
mov
or
xor
rcrl
fs
and
ficomps
sub
lahf
sbb
jbe
pop
repz
push
mov
iret
and
and
icebp
inc
dec
stos
adc
mov
sbb
mov
xor
roll
jmp
pop
and
mov
lods
mov
sbbb
std
cmp
in
and
jbe
dec
jne
sub
mov
dec
mov
and
pop
andl
push
ficompl
add
add
inc
push
insb
xor
pop
sbb
jne
sub
push
lahf
gs
mov
out
aam
loopne
dec
loopne
cltd
outsl
or
adc
sahf
xchg
gs
xchg
mov
pushf
mov
pop
dec
fwait
in
out
clc
jge
mov
cwtl
jmp
fs
dec
lods
and
faddl
in
iret
lds
sub
pop
nop
sub
mov
sbb
cmpsb
loopne
sub
push
jne
pop
bound
jecxz
popa
in
imul
popf
adc
jp
dec
js
sub
popf
mov
xchg
leave
fnstcw
mov
stos
rorb
rorb
mov
or
xchg
std
xor
mov
pop
cli
ja
das
das
loop
push
jecxz
sub
movsl
inc
aad
adc
fwait
pushf
mov
add
pop
sbb
jg
dec
jne
jp
add
sub
dec
push
lods
add
nop
les
fisubrs
mov
jb
push
fsub
adc
xor
insb
std
dec
xchg
sub
leave
bound
into
stc
push
out
inc
loopne
loopne
fs
pop
and
mov
xchg
sub
cmp
mov
lret
mov
xor
xchg
aam
mov
jmp
mov
sub
jne
inc
dec
cmp
xor
push
aad
repz
mov
loope
lock
imul
arpl
out
and
push
sahf
pop
pop
in
cmpsb
xchg
jmp
jnp
push
pushf
aas
push
cmp
call
mov
mov
call
pop
xchg
out
arpl
xor
shlb
or
xchg
ret
aas
cmpsb
outsb
sub
add
push
mov
mov
pushl
call
mov
cmpl
lea
mov
je
lea
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
jmp
stos
addr16
in
loope
jno
jo
ficoms
loopne
or
outsl
jge
jle
daa
jmp
stc
std
jl
aaa
dec
and
movsl
mov
test
mov
dec
clc
adc
lea
aad
ret
mov
push
xchg
ds
xchg
rorb
xor
dec
loope
push
xchg
jmp
mov
lea
fists
aaa
das
imul
lds
stc
xor
push
sbb
jb
cmp
mov
testl
dec
cmp
inc
insl
sbb
stos
subb
push
jl
xor
pop
dec
incl
aas
sub
nop
push
pop
rol
xor
fisubrl
jle
inc
push
lcall
aas
xchg
add
pop
jmp
push
xchg
mov
add
and
cmpb
scas
lcall
lock
in
pop
dec
cld
push
cmp
or
sbb
sub
cmp
bound
int3
push
inc
xchg
inc
sub
mov
inc
add
data16
fildl
test
mov
or
clc
repz
pop
cmp
mov
sbb
hlt
mov
xor
or
out
scas
out
and
es
out
sar
xchg
mov
jae
mov
push
ss
add
loopne
jge
mov
jno
xchg
push
and
std
inc
cmp
in
out
sahf
jbe
xorl
stc
shrl
pop
cmpsl
jb
out
dec
inc
pop
enter
pusha
orl
sub
jbe
and
xor
sub
mov
pushf
sbbb
adc
jae
addr16
negl
jp
jne
and
roll
insb
ss
pop
finit
inc
mov
inc
ljmp
sbb
in
ljmp
popl
fs
idiv
clc
in
jge
fstps
popa
fs
icebp
push
notl
adc
fdivr
cmpsb
mov
fsubrp
clc
dec
movb
sub
iret
jno
fbld
in
push
adc
stos
push
pop
cmpb
sbb
cmc
mov
lcall
test
add
xor
repnz
mov
inc
ljmp
fldcw
shrl
mov
mov
push
out
jb
push
test
iret
cmpsb
fiaddl
repnz
out
and
ret
xchg
xor
lea
or
xor
sbb
xchg
inc
mov
push
in
inc
sbb
fimuls
stos
outsb
sub
or
js
pop
les
pusha
arpl
pop
lea
push
cmp
scas
xor
add
push
inc
sar
shr
add
in
je
push
into
pop
ret
jmp
pop
scas
gs
addb
sbb
repz
es
or
leave
sbb
ret
push
mov
pushf
arpl
or
mov
dec
in
jg
pop
xor
ja
inc
mov
adc
popa
mov
les
jnp
ds
int
mov
xchg
mov
push
cltd
jbe
in
loopne
sbb
xchg
rcrl
jnp
adc
mov
inc
jnp
inc
xchg
jmp
insl
int3
mov
or
mov
push
lds
push
cmpl
dec
push
aaa
xchg
ret
fsubrs
imul
adc
lods
dec
add
cld
sbb
xchg
add
sub
push
test
dec
xchg
adc
push
jno
dec
ds
hlt
or
jb
dec
push
dec
sub
xchg
sub
into
cmp
clc
out
add
and
imul
adc
je
pop
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
mov
jmp
jno
mov
cs
mov
cmp
out
adc
jle
fidivrs
mov
cmp
sub
xor
xchg
mov
adc
cli
std
mov
ljmp
hlt
push
jns
fldt
adc
adc
stc
add
mov
gs
scas
lds
das
lret
dec
gs
jb
testl
add
addr16
ljmp
dec
rorl
rolb
xor
sub
add
mov
cmp
imul
mov
mov
sub
cltd
fucomi
sbb
repnz
cmp
mov
inc
dec
mov
mov
data16
aas
mov
out
push
push
out
and
sti
mov
imul
adc
dec
lds
nop
cmpsb
test
inc
xchg
xchg
inc
dec
into
nop
xchg
adc
mov
mov
int
aas
jb
in
and
xchg
mov
roll
out
xchg
cwtl
inc
push
dec
and
add
jb
xor
aas
adc
xchg
leave
rorl
dec
cmp
cmp
or
add
shlb
dec
push
icebp
dec
mov
and
mov
lods
or
adc
push
jg
jmp
sub
loopne
push
ljmp
imul
cld
push
leave
xchg
or
xchg
mov
xor
mov
cmp
jne
icebp
jbe
out
ret
lret
cmp
aam
ljmp
adc
ficompl
add
jnp
sbb
ret
je
xchg
popa
in
push
lods
popf
idivb
out
les
mov
subb
pushf
aaa
jle
bound
jns
or
dec
push
pusha
cs
jp
adc
fwait
cs
js
sub
imul
pushf
and
outsl
pop
cmpsb
cld
scas
testl
xor
push
xor
jbe
sub
mov
movsb
in
nop
sub
lods
das
std
or
mov
dec
add
aam
xlat
arpl
cmp
fsubs
sub
movsl
sahf
push
mov
sbb
cmpsl
mov
lret
pop
or
mov
dec
push
mov
rol
pop
cmp
into
je
scas
mov
das
push
mov
in
or
sbb
mov
filds
push
test
mov
add
cwtl
add
mov
mov
sub
ljmp
lret
mov
pop
xchg
loop
in
xchg
mov
inc
imull
cmp
cld
cs
sahf
push
mov
scas
mov
shlb
lret
fs
stc
subl
inc
je
popa
fmuls
mov
inc
xor
xor
fbstp
lods
sub
mov
cmp
dec
in
das
in
int3
rclb
fdivrp
ljmp
cmpsl
das
jmp
shl
sub
in
xchg
sub
shll
jne
mov
pop
dec
fwait
adc
cwtl
inc
rol
pop
push
dec
sbb
loope
jne
pop
push
lea
nop
dec
pop
in
sbb
lret
xlat
repnz
fs
daa
dec
xor
mov
cwtl
in
mov
jne
mov
push
inc
outsb
and
push
xor
adc
je
mov
add
out
into
cmp
jne
or
pop
xchg
xor
and
inc
movsl
sub
lret
fimuls
out
inc
mov
ljmp
mov
in
stos
sbb
xchg
out
movsl
arpl
cmp
divl
lcall
shrb
incb
mov
mov
cmp
pop
xchg
scas
out
subb
clc
mov
mov
mov
test
mov
jne
mov
xor
add
jmp
in
adc
ret
icebp
xor
xchg
sbb
repz
jle
outsl
jge
jle
mov
mov
jle
idiv
or
push
imul
adc
xlat
dec
sarl
add
mov
enter
push
jnp
jae
cmp
aad
add
mov
or
lds
inc
cmp
das
xor
dec
lret
popf
cmp
cs
dec
sub
push
adc
lea
lock
cmpb
adc
inc
loopne
ja
mov
push
iret
pop
mov
add
jmp
xchg
mov
clc
es
stos
pmaddwd
xor
jns
mov
inc
mov
xchg
sbb
repnz
xor
mov
push
sub
xchg
mov
pop
add
call
add
mov
xor
call
xor
fcoms
xchg
jmp
les
mov
add
adc
faddl
aaa
addr16
je
loop
and
imul
adc
push
outsl
mov
push
stos
adc
or
inc
hlt
inc
repz
lahf
faddl
addb
cmc
xchg
sti
dec
xor
imul
xchg
fldt
push
xor
mov
or
fcomp
adc
jmp
adc
jae
and
sub
dec
lret
jb
imul
mov
push
cmpsl
jbe
cmc
inc
and
inc
mov
shlb
mov
cmp
xchg
xchg
daa
pop
add
test
push
push
sub
lcall
mov
adcb
outsl
fcoml
es
fdivrs
dec
lahf
jno
adc
sub
aaa
lods
mov
ds
dec
push
in
inc
or
enter
adc
add
pop
dec
in
js
push
cwtl
adcb
dec
ja
xor
fistpll
sub
jge
adc
jnp
mov
fiaddl
jnp
push
sbb
out
fisttpl
or
or
sbb
out
add
jae
xor
shrl
pop
xchg
push
fcmove
sbb
loope
pushf
jle
enter
xchg
xchg
jp
outsb
push
cmpsb
push
xchg
inc
push
mov
adc
lahf
sti
pop
pop
xor
inc
into
mov
or
xchg
sub
js
push
addr16
clc
push
inc
jge
fiaddl
fildl
add
cmpsb
insl
mov
adc
add
add
mov
push
cwtl
pop
jecxz
pop
into
add
rclb
mov
stc
repnz
sarl
xchg
add
xor
clc
mov
xchg
andl
lahf
movsl
or
outsl
ret
pop
dec
pop
lcall
and
mov
add
sti
add
imul
shrl
push
xor
add
das
mov
divl
inc
and
dec
movsb
repnz
jbe
mov
dec
and
data16
lret
out
mov
or
push
adc
das
leave
nop
add
adc
jno
jae
mov
das
test
cmp
push
mov
push
cmpsb
cmpb
mov
mov
mov
push
pusha
adc
in
xchg
adc
cmpsb
lcall
pop
rcrb
leave
cmpsl
jbe
pushf
das
fwait
mov
xchg
inc
jmp
lods
mov
fildl
popa
inc
mov
imul
bound
in
sbb
inc
lret
inc
outsl
das
xor
fldt
out
stos
jno
mov
dec
add
sub
aaa
popf
imul
filds
out
fbld
out
testb
rorb
ss
add
call
inc
in
movb
push
mov
add
push
mov
mov
pushl
jmp
push
js
repnz
jno
call
cltd
int3
and
sbb
jle
rcll
out
cld
scas
jl
cmp
insb
mov
push
xor
fwait
inc
xor
inc
mov
lret
dec
xchg
aad
rcll
sbb
jecxz
stos
ljmp
pop
xor
cmp
xchg
adc
xor
das
mov
and
leave
xchg
jecxz
push
test
push
divb
imul
loope
jne
arpl
and
xchg
adc
inc
in
cmp
xchg
fldcw
dec
je
mov
out
loopne
mov
add
cmp
mov
push
push
jo
and
leave
je
test
cmpsl
sbb
and
mov
movsl
jo
adc
jp
ret
jae
pop
js
in
mov
and
pushf
jle
pop
enter
cmp
push
jno
lods
sub
jo
jne
push
mov
cmc
or
jo
add
jne
movsb
lea
into
jb
outsl
out
leave
cli
push
movsbl
fidivrs
iret
pop
mov
mov
pop
cmp
xchg
pop
insb
jg
scas
xor
mov
mov
cmp
je
inc
inc
xor
imul
sub
sbb
into
bound
mov
adc
mov
jno
daa
fwait
and
lods
mov
xchg
pop
xor
popa
outsl
out
out
mov
ljmp
rcr
stc
sub
call
inc
enter
or
cmp
dec
cmp
ret
xchg
mov
scas
sbb
jnp
lret
aam
mov
jle
stos
ljmp
sub
or
gs
cmpsb
mov
xor
stos
xchg
xor
out
out
rcrb
push
xor
cmpsl
mov
movsb
dec
sub
in
aaa
sub
insb
imulb
mov
push
or
cmp
dec
push
std
dec
adc
push
lahf
jmp
xchg
sub
mov
lds
mov
test
adc
in
ret
fstps
testb
in
test
pxor
test
daa
inc
pop
mov
lret
jnp
jo
jp
jg
mov
daa
mov
jae
test
hlt
fstpt
push
cld
jg
into
sti
mov
mov
mov
clc
push
lods
mov
es
inc
insl
fs
fs
into
loopne
mov
sbb
ds
ss
adc
lods
cmp
notl
mov
add
cmp
or
cmpsl
addr16
scas
out
and
mov
test
lret
ss
inc
mov
mov
or
mov
xchg
inc
loop
inc
div
rorl
repnz
leave
movsb
inc
shl
dec
sub
inc
push
out
adc
sub
negl
pop
int
enter
std
or
fsubp
lret
cmpsb
jmp
and
jns
pop
test
xchg
scas
lret
fidivs
mov
loop
insb
into
or
add
sub
dec
and
js
test
xor
jl
mov
fs
xchg
popa
jp
push
and
cmp
push
adc
add
ss
fldcw
dec
adc
test
repnz
fcmovne
mov
clc
inc
fidivl
enter
bound
xchg
mov
and
mov
testl
cltd
sahf
adc
cmpl
int3
out
add
xor
push
dec
push
pop
xchg
jnp
test
pop
scas
mov
scas
mov
lret
push
out
stos
sub
outsl
add
xchg
lods
scas
call
inc
mul
nop
fisubrl
mov
cmp
lahf
mov
adc
dec
ss
mov
xor
mov
sub
sub
mov
add
mov
mov
mov
mov
xor
sub
mov
lea
incb
inc
push
pop
dec
jmp
dec
repz
insb
jno
in
sbb
sbb
outsl
jge
jle
rclb
ret
pop
xchg
shl
fisubrs
and
ficoml
stos
xor
sarl
in
jae
mov
xor
jns
or
cmp
xchg
jo
jae
in
lods
daa
cmpb
pop
hlt
jmp
xchg
std
and
xchg
stos
loop
and
push
add
xchg
xchg
aad
stos
xor
das
imul
in
jo
je
lahf
dec
loopne
adc
hlt
adc
xor
aad
mov
test
fnstcw
cmc
fcomip
cmp
xorb
ret
pop
shlb
inc
je
pop
loop
jge
jl
les
add
aad
fldcw
stc
loope
jmp
pusha
jmp
cli
lods
cmp
sub
inc
and
lock
hlt
pop
jmp
inc
int3
or
and
bnd
mov
pop
movsl
test
pop
cmp
xchg
loopne
pushw
pop
mov
jo
cmp
test
sub
xor
mov
mov
adc
je
lods
sub
push
fdivr
sub
stc
insl
imul
dec
fsubr
fs
mov
adc
xor
xchg
outsb
jmp
ret
insb
loop
out
imul
jnp
jns
xchg
lret
imul
outsl
inc
rcrb
push
jnp
sub
lods
ret
das
insl
addr16
jge
movsl
fldcw
clc
leave
pop
jnp
cltd
cltd
add
push
adc
rcll
sub
pop
js
inc
push
and
stc
cli
add
fwait
jno
sub
sarb
lea
adc
test
push
fadds
pop
stos
mov
dec
jo
mov
bnd
dec
lret
push
xorb
gs
movsl
xchg
rcll
sub
add
jns
jne
cmpsb
or
sahf
mov
leave
arpl
xchg
and
xchg
pop
lock
and
pusha
mov
iret
insb
pop
imul
sub
fcmovb
add
aaa
test
add
cmp
bound
adc
int3
lods
jb
xchg
inc
jl
ds
in
clc
cmc
dec
fistpll
sti
nop
cmp
or
xor
or
les
std
mov
adc
rcrl
bnd
hlt
sbb
arpl
mov
rcl
fadd
dec
and
movsl
adc
stc
loope
mov
ljmp
setae
arpl
xchg
aam
jo
iret
mov
add
sbb
push
je
xor
rcrl
repz
or
xchg
fisubl
cmpsl
xor
mov
cld
loope
imul
clc
mov
pop
sbb
pop
push
ds
cltd
frstor
cmpsl
xor
xchg
fcmove
in
cmp
lahf
pop
inc
mov
xor
sbb
mov
inc
xlat
pop
cwtl
bound
lods
mov
lahf
jle
cmp
push
cmpsl
mov
xchg
popf
mov
arpl
mov
xchg
adc
out
repnz
jg
or
rolb
mov
sbb
lds
cwtl
out
jo
or
jne
lods
push
test
das
push
ret
push
jns
sbb
cwtl
loope
inc
inc
popf
lds
fadd
in
lock
sbb
adc
prefetch
addr16
lret
mov
xchg
repnz
loop
xchg
mov
or
hlt
add
in
rclb
divb
je
push
aad
mov
inc
stos
sbb
pop
inc
scas
mov
xchg
int3
jp
mov
mov
push
inc
outsl
leave
cli
shlb
fbld
push
jne
cld
scas
call
popa
in
mov
sar
or
jne
mov
mov
pushl
lea
pushl
lea
pushl
lea
jmp
out
sahf
mov
addr16
push
subl
xor
aad
jle
outsl
jge
jle
mov
push
jnp
ja
xchg
inc
cltd
outsb
inc
pop
sbb
push
mov
inc
cmp
jnp
xchg
std
int
in
and
adc
rorl
xor
hlt
mov
push
rcll
xchg
popf
outsl
fistpl
in
mov
cmp
ss
pop
stos
mov
ja
lret
insb
jno
subb
or
inc
dec
negb
dec
nop
test
insl
stos
out
scas
mov
lods
mov
jbe
mov
jge
inc
fdivrs
sti
sbb
cmp
pop
jle
adc
jbe
jmp
pop
xchg
gs
adc
loopne
jecxz
call
add
sahf
sub
xor
nop
or
roll
xchg
pop
add
cli
iret
sti
std
pop
push
pop
lods
shl
adcb
jmp
push
xchg
daa
lcall
cli
cmp
mov
lret
leave
scas
push
push
dec
add
inc
fadds
in
inc
loope
clc
insl
sbb
enter
jne
sbb
call
addr16
dec
inc
dec
rorb
push
mov
pop
fs
pop
out
aad
cmp
bound
movsb
fidivs
push
push
rclb
cmc
cmpsb
jno
jne
mov
add
cli
es
or
repz
cmpsb
dec
sahf
movsb
pusha
scas
jo
test
enter
outsb
jne
push
cs
xchg
xlat
xor
push
fucomp
xchg
mov
jl
xor
ret
test
jnp
sbb
lret
jmp
adc
je
and
sbb
inc
and
imul
add
aas
ss
ja
push
icebp
dec
mov
mov
aaa
aaa
xchg
mov
ret
movsb
loop
into
test
adc
push
sub
sbb
inc
inc
fmulp
cmp
into
jmp
pop
fidivs
lcall
xchg
sub
sahf
aad
ljmp
cmp
lret
jmp
sub
cwtl
inc
adc
inc
call
inc
daa
into
rcl
mov
frstor
sub
push
idivb
icebp
cmp
hlt
mov
inc
jp
inc
jnp
add
stos
fwait
mov
cmp
sti
or
sbb
dec
add
inc
int
push
ss
adc
aad
addb
cmp
in
jg
mov
pushf
imulb
das
xchg
xor
xor
lock
xchg
dec
adc
out
jb
pop
nop
jo
out
fdivs
add
xor
test
lea
jmp
jns
xchg
add
sbbl
jb
int
or
imul
es
repz
neg
test
adc
sbb
push
mov
inc
inc
mov
loope
adc
pop
dec
mov
jbe
jno
sub
xchg
mov
sahf
call
imul
cltd
rcrb
divb
jno
push
pop
psubsw
sub
inc
das
out
in
mov
sub
cmp
inc
pusha
push
mov
ja
loope
xchg
addw
fcomps
fistl
mov
cmp
pop
cmp
sbb
jno
outsl
nop
mul
jecxz
mov
mov
push
mov
pusha
aaa
cmp
in
jne
mov
imul
pop
pushf
xchg
bound
mov
jae
pop
mov
imul
into
bound
sub
sub
lahf
dec
imul
or
mov
sub
ret
out
divb
jge
add
xor
add
xor
pop
call
mov
mov
add
jmp
xor
mov
jne
xor
bnd
jle
jge
jle
int3
imul
ret
or
cli
xchg
push
mov
pop
scas
sub
cwtl
push
xchg
loope
sub
pop
fwait
repnz
ret
mov
mov
lock
scas
mov
enter
xchg
xchg
sar
push
sub
mov
dec
add
xor
fs
js
enter
fdivrl
andb
mov
xchg
pop
or
gs
dec
jmp
adc
pop
jp
pop
lcall
loop
int
ficoms
pushl
jb
orb
and
sub
mov
lret
ds
and
fisttpl
andb
sub
incl
mov
mov
cld
sbb
rcrl
sbb
test
mov
xor
in
xchg
cmp
dec
cltd
push
xorl
in
mov
leave
push
out
and
mov
imul
out
xchg
jmp
fists
mov
rdtsc
sub
inc
pop
mov
cmp
push
mov
int
pop
mov
mov
cmp
xorl
je
out
jg
jp
mov
push
icebp
aad
add
mov
fwait
aas
jnp
enter
add
push
jo
pop
ljmp
test
sahf
mov
fsts
dec
iret
std
adc
ja
outsb
or
add
sub
lret
dec
movsl
xchg
insl
xor
mov
jnp
mov
xor
lock
rclb
stos
lods
cmpb
dec
jo
xchg
aas
cs
and
jno
cli
adc
pop
sub
dec
dec
cmc
jg
sbb
icebp
xor
ja
push
sar
xor
in
mov
adc
and
lretw
push
cmp
pop
jp
jae
mov
imul
fcoms
adc
inc
faddl
push
pop
jo
inc
push
or
mov
and
fwait
xorl
pop
jns
or
pop
aaa
and
arpl
fnstenv
jo
mov
or
jno
ds
cmpsl
ja
popa
idivl
popf
test
xor
and
arpl
lds
xor
xchg
test
scas
insb
int3
test
sub
imul
ret
stos
add
cli
xchg
ret
dec
out
cmpb
and
popf
mov
je
ret
imul
sbb
in
fs
lret
lea
or
mov
ret
fnstsw
sbb
je
pop
dec
push
fnstenv
aam
sbb
mov
mov
leave
loopne
out
cli
clc
jecxz
addr16
jmp
out
lret
jns
sub
imul
or
pop
rorw
outsb
sub
cmp
and
lret
loop
add
mov
jecxz
or
lods
aam
in
mov
mov
or
add
mov
cmp
std
jecxz
cmp
mov
shl
sbbl
stos
inc
and
aam
xor
mov
xlat
loopne
fimull
push
push
out
or
pop
jge
xlat
push
mov
mov
jmp
cmp
or
addr16
and
mov
and
push
inc
loope
cwtl
pop
or
hlt
mov
jb
cmp
lock
lds
outsb
cmp
cmp
and
push
push
cld
jo
mov
push
or
test
push
jbe
mov
outsb
in
loope
jmp
xor
mov
jle
std
mov
dec
jbe
cmpsb
sar
iretw
lret
in
add
lahf
sbb
out
sub
pop
pop
pop
leave
ret
push
mov
sub
leave
ret
push
mov
sub
adc
push
mov
mov
and
mov
adcl
mov
xor
movl
movl
movl
andl
mov
inc
mov
cmpl
jne
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
jmp
push
mov
jno
insl
inc
filds
xor
jle
femms
frstor
sub
sub
call
mov
adc
scas
xchg
cld
push
push
or
loopw
cmp
sub
pop
jecxz
jmp
fdivl
in
cmp
jno
xchg
daa
pusha
fmull
add
aad
xchg
cld
imul
in
xchg
daa
mov
mov
push
add
push
or
mov
outsb
dec
daa
and
dec
fwait
mov
sub
xchg
jae
addl
jle
mov
jl
stos
mov
lock
dec
fcom
mov
hlt
xchg
cmp
test
andl
or
enter
orl
or
xchg
clc
push
mov
mov
insb
pop
dec
arpl
mov
std
xchg
gs
mov
xchg
sub
roll
push
cld
or
in
lea
js
and
movsl
clc
shll
mov
orb
mov
daa
jmp
mov
mov
sarb
mov
pop
dec
movl
inc
adc
in
cmpb
outsb
popf
jl
dec
out
xchg
pop
lahf
xor
addr16
out
in
jp
jo
mov
loopne
jbe
out
jg
xchg
mov
pop
fstps
lock
seta
pop
and
into
lret
mov
sbb
or
sbb
or
inc
lret
dec
or
ds
pop
das
adc
lock
push
enter
mov
out
pop
fs
fdivrs
fnstenv
pusha
inc
aad
aaa
push
pop
scas
and
mov
jge
into
xchg
out
arpl
idiv
dec
in
je
pop
les
int
adc
mov
or
fcoms
lods
or
out
cmpsb
adc
jnp
push
lock
or
cmpsl
and
cmpsl
jno
cmp
and
jl
cmp
std
insl
jnp
jge
out
push
popa
ret
jge
lds
mov
rcrb
repz
leave
pop
cli
pusha
pop
lods
xor
xor
cmpsb
fildll
int
inc
ret
cli
ds
lahf
inc
adc
fsubrs
cmp
or
rclb
nop
jne
shll
cmpsb
push
fimull
lea
jg
sahf
or
pop
push
jbe
mov
icebp
sbb
into
movsl
lea
sub
repz
arpl
mov
add
insl
sbb
mov
adc
or
mov
jmp
loopne
mov
push
mov
dec
and
mov
or
mov
pop
cmpsb
clc
pop
add
add
aaa
gs
popf
leave
xor
cmp
adc
aas
lret
pusha
sbb
mov
xor
and
fisubrl
mov
lret
xchg
inc
clc
iret
scas
insl
add
or
shlb
mov
iret
rclb
mov
cmp
cli
adc
daa
xchg
dec
jge
mov
lcall
fisttpl
mov
stos
cmpsb
mov
adc
mov
mov
xor
adcl
mov
mov
adc
add
neg
mov
movl
cmpl
je
cmpl
jne
push
push
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
and
mov
sbb
xor
sbb
add
andl
xor
add
inc
mov
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
movl
movl
xor
movl
movl
sbb
movl
adc
movl
movzwl
and
movl
dec
movl
mov
add
xor
add
mov
add
cmp
movl
je
movl
push
movl
jmp
mov
andl
mov
inc
mov
cmpl
jne
pushl
pushl
pushl
pushl
push
call
cmpl
jne
xor
xor
inc
mov
cmpl
jb
xor
add
add
mov
sub
mov
xor
add
movl
cmp
movl
jb
mov
mov
xor
incl
xor
notl
add
add
adc
imul
mov
mov
sbbl
sub
movl
cmp
movl
ja
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jne
push
push
call
jmp
mov
sbbl
xor
xorl
jmp
cltd
jp
pushf
insl
imul
das
cs
xor
jle
xor
jle
jp
sahf
jl
aad
add
ljmp
adc
pop
adc
adc
sub
mov
push
adcl
imul
sbb
rcll
xor
cltd
movl
sub
mov
fldt
daa
out
pop
adc
cmc
jp
add
adc
mov
scas
pop
es
mov
jns
jp
mov
lds
lock
stc
push
or
sub
inc
in
scas
pop
dec
das
enter
dec
jge
push
xlat
iret
int3
xchg
push
jne
lods
dec
into
add
mov
mov
clc
cmp
add
out
push
push
andl
jmp
and
xlat
mov
pop
mov
jecxz
jmp
clc
daa
inc
pusha
sub
dec
cwtl
push
decb
das
pop
push
fmuls
js
jb
push
jmp
or
shll
mov
xor
sbb
incl
shlb
mov
adc
xchg
repnz
push
fcmovnu
sbb
push
call
jmp
pushf
rcrb
jo
mov
xchg
pop
loop
add
and
dec
mov
sub
cmp
dec
add
stos
out
subl
adc
push
sarb
and
fsub
mov
sbb
lds
faddl
pop
ret
imul
enter
xlat
mov
pop
xchg
ljmp
mov
xor
test
xchg
mov
mov
lods
sbb
push
ss
roll
push
das
leave
lahf
and
lret
push
push
sbb
mov
pop
fldt
xchg
add
add
push
xor
cld
jno
lods
orl
clc
in
jecxz
inc
ja
sbb
pop
push
aaa
xchg
orl
xchg
sub
int
cmpl
jno
fadds
sub
stos
and
adc
pop
xor
jge
daa
dec
sarb
imul
cs
jae
js
aas
fstpt
push
push
insb
rcll
int3
adc
sub
int3
aam
and
fcmovbe
and
dec
add
cmpsl
mov
and
aas
sbb
popa
loopne
dec
add
enter
fdivrp
xchg
fxch
sbb
add
adc
or
push
sbb
xchg
push
pop
xchg
jb
push
push
mov
adc
jmp
add
aad
inc
ss
push
mov
dec
jo
and
roll
cmpsl
mov
sbb
jl
mov
adc
fsubr
pop
push
mov
pop
sti
adc
xchg
push
ret
notl
sub
lcall
sahf
fisubrl
aaa
std
addr16
mov
lahf
dec
push
lea
aaa
xor
and
lock
sub
lea
nop
mov
jnp
jne
js
in
outsb
jb
inc
pop
xchg
hlt
mov
arpl
push
rorl
push
sldt
mov
mov
xor
movzbl
or
xor
andl
xor
add
inc
mov
cmpl
jne
push
push
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
movl
add
add
imul
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
push
pushl
pushl
pushl
push
push
call
cmpl
jb
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
jmp
pop
jne
loope
clc
cmpsb
dec
push
test
jge
jle
or
jp
push
fsubl
lods
lret
shrb
shll
sti
xchg
jmp
xor
addb
pop
mov
jge
mov
lods
scas
adc
lods
and
adc
stos
je
sub
dec
inc
mov
es
sbbb
ds
movsb
or
inc
sbb
or
mov
mov
cmp
jnp
sbb
jl
jns
mov
pop
cmp
inc
dec
cmp
fidivrl
enter
shlb
inc
fmuls
pop
out
dec
jecxz
xchg
mov
adc
and
js
mov
inc
jns
pop
sarb
xchg
xchg
xchg
pop
aad
xchg
cmc
daa
fwait
jnp
and
popf
sub
pushf
mov
fcoml
cwtl
lret
push
cmpsl
lods
jne
and
scas
scas
dec
and
cmp
pop
test
ret
imul
push
jle
xchg
inc
pop
movsl
add
imull
ss
pop
and
sub
sbb
mov
or
sahf
aas
ret
test
gs
cli
divl
mov
adc
fstpt
or
test
rcrb
sahf
aas
sub
fs
cmc
scas
xor
data16
addl
ljmp
insl
lahf
stos
andb
xchg
loopne
mov
jmp
je
add
ljmp
in
aam
mov
xchg
mov
jge
insb
sbb
cwtl
fmull
outsb
cmp
insb
mov
xor
lret
repz
outsl
flds
in
dec
mov
sbb
lret
push
jl
xor
stc
cltd
movl
stos
mov
sbb
push
shr
fsincos
pop
lods
es
std
jb
or
mov
cmove
mov
adc
sbb
rclb
cli
sbb
sub
cmc
sub
jo
das
inc
loopne
push
cmpb
dec
adcl
pop
fsubrl
or
xchg
jb
inc
pop
movsl
lret
xchg
call
insl
lds
inc
es
cmp
sahf
dec
js
or
idiv
scas
or
xchg
add
repz
push
fwait
arpl
sub
fdivrs
aaa
out
loope
lahf
scas
stc
xor
pop
iret
loopne
hlt
or
aam
loopne
lea
int3
push
mov
testb
icebp
or
or
mov
loop
lahf
cwtl
dec
mov
aad
mov
and
cmpsb
int
mov
insb
rcl
gs
aam
dec
fwait
mov
cld
dec
dec
jb
jmp
xor
pop
sbbb
out
adc
xor
push
inc
pusha
pop
push
das
hlt
mov
cs
or
stos
push
in
out
mov
cmpsb
pop
jae
mov
xor
call
mov
pop
call
adc
mov
insb
hlt
jmp
mov
pop
or
add
cld
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
jmp
push
outsb
adc
pusha
cli
sarb
or
stos
push
jle
xor
jle
xor
cmp
xchg
addr16
add
cwtl
jns
push
iret
ret
lods
cmp
dec
insb
lcall
inc
pusha
inc
mov
loopne
aas
mov
sbb
fldt
jle
loop
mov
popa
out
push
iret
aaa
in
in
test
subb
jl
ljmp
xchg
bound
mov
xlat
cltd
push
push
jl
in
xchg
mov
sbb
stc
lret
sarl
xchg
push
add
fs
cltd
sbb
fcoms
xchg
lods
sub
add
jmp
dec
test
jne
push
xlat
xor
mov
sub
and
rcl
jl
adc
mov
fsubs
inc
ss
sahf
cmp
lock
dec
push
inc
cmp
repz
iret
std
sub
inc
aaa
test
out
repnz
out
sub
mov
lcall
es
jl
fdivl
and
xchg
pop
divl
or
mov
dec
aam
xchg
pop
inc
pop
mov
aam
xor
stos
push
fstl
out
cmpsb
mov
scas
fcomip
lret
fcompl
push
les
test
cmc
mov
push
cmp
xor
push
popa
in
push
leave
out
sub
push
cmp
xor
add
in
pop
out
mov
les
mov
movb
aas
xchg
int
mov
sub
ljmp
mov
adc
sbbb
enter
mov
leave
out
mov
pop
add
dec
out
inc
cmc
sub
lock
dec
dec
jnp
and
pop
inc
sti
xor
out
push
mov
scas
jle
dec
mov
and
sub
js
movsb
mov
test
xchg
je
das
inc
mov
enter
adc
js
out
add
push
mov
clc
sbb
pop
push
or
pop
mov
data16
cld
inc
out
inc
cld
aam
adc
jmp
call
inc
stos
in
aam
inc
andb
jp
pop
jns
lods
xchg
sar
mov
rclb
dec
push
inc
adc
adc
add
call
cmc
xchg
xchg
rolb
add
bound
ss
hlt
movsl
iret
mov
sar
aad
cmp
inc
push
pop
xchg
or
inc
add
xor
or
add
stos
nop
adc
cltd
mov
push
shrb
loop
add
pushf
pop
mov
int
rclb
push
std
jne
insb
mov
mov
hlt
push
add
jl
hlt
xchg
repz
and
icebp
dec
sti
shll
lods
outsb
cmp
pop
jmp
es
pop
or
pop
jns
sbb
testb
push
push
and
das
aad
mov
inc
mov
lds
sbb
loopne
pop
int3
loope
add
imul
stos
sub
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
jmp
jmp
xor
les
xchg
jne
push
das
jle,pt
xor
jle
test
inc
je
loopne
in
mov
add
push
in
mov
pop
das
lret
push
sar
inc
jmp
xor
fs
add
mov
outsl
xchg
test
ret
pushf
push
push
mov
push
fcomip
or
mov
adc
pushf
rcrb
sarl
push
or
xorb
push
jg
mov
nop
push
dec
divl
cmp
add
or
lcall
sub
sbb
mov
mov
cmp
arpl
shl
jae
xchg
sbb
ja
xchg
dec
stos
aad
xor
add
or
insl
repz
outsl
push
call
outsl
stos
and
sbb
lods
add
mov
add
dec
adc
adc
clc
mov
and
add
loope
popa
int
in
and
pop
add
aam
pop
mov
test
pop
jmp
adc
pop
adc
pop
ficoms
mov
sahf
ds
insl
repnz
ljmp
incl
mov
mov
pop
jg
dec
xchg
pop
jg
inc
mov
int
sub
sbb
outsb
gs
pop
inc
or
aad
sub
pop
nop
orl
scas
pop
in
mov
popa
cld
rcl
mov
daa
or
mov
sub
cwtl
das
sti
push
aas
incl
in
xlat
mov
xchg
jno
pop
pop
call
test
testb
adc
aad
filds
pop
fwait
nop
imul
xchg
add
and
ds
outsb
cmp
rclw
inc
xchg
inc
mov
pop
shl
loopne
loop
stos
push
dec
loopne
imul
stos
aas
hlt
das
filds
hlt
mov
faddl
cmpsl
mov
insb
dec
push
dec
inc
pop
and
mov
out
jl
stc
cmc
xchg
shrl
fstl
daa
adc
stc
xor
movsb
dec
aas
mov
mov
lods
mov
adc
adc
sti
add
jns
add
or
dec
and
insl
roll
sub
movsl
rclb
clc
movsb
jbe
bound
std
sub
aas
or
lahf
fdivr
cmp
and
cli
out
cld
push
push
mov
mov
add
cltd
clc
and
adc
sbb
int3
push
gs
ror
je
and
ret
or
mov
dec
jl
sbbl
dec
lret
imul
pop
add
movsl
inc
adc
popl
dec
add
test
xchg
fdivrl
insb
sbb
int
add
cmp
sub
xchg
cwtl
scas
popa
stos
push
sub
xor
and
scas
or
jle
jmp
push
pop
sbb
adc
sub
movsl
test
aas
ljmp
cmpsb
xchg
js
adc
add
in
inc
jo
or
sub
and
fimull
add
add
jno
ja
shrb
out
shl
jle
xor
jle
mov
inc
call
mov
add
int
pushf
pushf
sbb
xor
outsl
mov
lahf
sub
sbb
jb
xchg
sbb
movsl
cmp
jecxz
push
int3
xchg
pop
sbb
cli
mov
sar
xchg
popa
flds
and
andl
pop
test
enter
imul
lea
sbb
push
stc
insb
dec
jecxz
scas
dec
jo
and
mov
jle
psrld
dec
push
cli
fiadds
mov
xor
fidivrl
mov
xor
pop
jne
ficoml
adc
jp
mov
imul
repz
xchg
adc
sub
daa
jge
mov
cmp
mov
mov
jae
cmp
and
xor
std
test
sahf
je
mov
pop
jbe
scas
push
mov
adcb
jb
stos
orl
test
cmp
mov
sbb
cmp
xchg
mov
jnp
loopne
xor
push
scas
repz
ficompl
sbb
mov
addr16
jo
daa
and
push
mov
std
imul
pop
outsl
jns
lds
out
ljmp
sub
inc
mov
enter
pop
push
mov
and
pop
dec
sbb
lret
xchg
add
push
jmp
sbbb
ss
lods
popa
add
add
mov
cmc
jge
push
xchg
pushf
and
pusha
cld
pop
jmp
adc
int
orb
aam
ds
xor
cmp
inc
mov
lcall
loopne
mov
test
fildl
jae
pusha
xorl
dec
lcall
ss
cld
fsts
xabort
test
ss
push
sbb
xor
or
aad
sub
sbb
test
xor
jl
mov
popf
or
cmc
or
xor
dec
cmp
shrb
mov
xchg
dec
jecxz
aad
mov
jae
nop
mov
cmp
rclb
sbb
insl
test
shrl
movsb
jmp
pusha
sub
fcomps
xlat
and
mov
push
addb
pop
rclb
cltd
ret
in
inc
fs
in
and
add
mov
ret
or
sti
dec
mov
iret
mov
sbb
sub
add
jae
stc
sbb
push
jne
pop
and
mov
dec
in
int3
cmp
test
sti
or
or
xchg
fnstenv
mov
mov
ljmp
mulb
mov
int
jmp
mov
cmp
lret
enter
nop
pop
and
es
pop
adc
mov
cltd
cld
jno
add
stc
pusha
xor
and
push
ficoms
mov
daa
in
insb
orl
push
scas
jbe
mov
mov
xor
xor
add
add
imul
mov
mov
mov
mov
add
movl
mov
movl
movl
mov
xor
add
jmp
mov
xor
add
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
jmp
pop
xlat
pop
jmp
jae
push
jmp
cmc
pop
mov
cmp
xor
jle
cmpsb
repz
xor
xchg
ret
test
out
stc
lea
adc
mov
cmpsb
int
xchg
lock
add
or
fs
jl
xchg
mov
movsb
clc
cwtl
push
inc
or
push
orl
jle
sub
mov
rclb
dec
sub
repnz
xor
lock
aam
mov
cmp
movsl
lcall
test
clc
jge
enter
jmp
shrl
dec
push
jmp
dec
mov
sbb
inc
lahf
negl
adcl
and
jl
call
cmp
outsb
out
repz
clc
xchg
dec
es
sub
ljmp
rorl
rolb
ja
xor
mov
mov
test
jg
repnz
jns
xor
ficoms
xchg
int
sbb
test
adc
rcrl
rorb
and
rcll
mov
daa
outsw
adc
shlb
scas
in
cmc
push
add
in
xor
sub
orb
or
jecxz
sub
xor
sub
or
ljmp
add
addr16
sub
sub
pusha
clc
or
in
cmp
jns
hlt
pop
sbb
loope
stos
jb,pt
test
ud1
or
jle
xorb
aaa
stos
mov
mov
and
fmuls
push
stos
aaa
clc
mov
xlat
adc
add
enter
ds
maxps
into
test
jecxz
xchg
inc
scas
lods
push
outsb
and
mov
lds
push
fidivl
inc
inc
jmp
pop
fucomi
cmp
test
push
insb
xchg
scas
daa
mov
ret
jle
lods
push
ds
cmp
mov
sub
roll
add
sbb
cmp
jbe
cwtl
jl
into
add
jnp
push
cmp
outsb
out
cmpb
mov
sbb
pop
mov
mov
in
popa
inc
movsl
fcom
popf
fmulp
cmp
ss
push
and
leave
cmp
add
cltd
mov
and
lahf
inc
sub
push
cli
xchg
xchg
mov
pop
jmp
xorl
push
loope
bound
inc
js
sbb
ljmp
imul
mov
mov
fs
cmpl
ja
test
call
jo
shlb
fs
xor
inc
mov
outsb
push
out
outsl
mov
sub
arpl
mov
rcr
aam
mov
pop
xor
cmp
xchg
xchg
out
shrl
push
pop
idivl
jecxz
push
push
push
or
gs
repz
scas
cltd
ss
ljmp
sbb
mov
sub
orl
data16
int
dec
sbb
and
jl
data16
mov
xor
add
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
xor
add
imul
mov
xor
sub
mov
mov
xor
add
imul
mov
xor
sub
lea
cmp
jbe
mov
mov
xor
add
imul
mov
xor
add
mov
lea
mov
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
pop
pop
leave
ret
push
mov
push
mov
mov
sub
xor
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
push
call
cmpl
jne
mov
inc
mov
jmp
mov
sbbl
xor
andl
add
movl
mov
movl
mov
movl
mov
push
movl
movl
mov
mov
movl
cmp
movl
je
andl
mov
xor
subl
xor
lea
xor
cmp
jne
jmp
add
mov
xor
add
mov
mov
xor
xor
mov
mov
mov
mov
add
mov
mov
mov
pop
test
jmp
gs
jns
dec
jno
xor
imul
jle
jl
jle
jne
dec
jmp
jecxz
shlb
jbe
push
jbe
cmovp
out
mov
les
loopne
test
mov
push
xor
ss
cmpsl
je
adc
jg
psllw
pop
cld
cmpsl
cmpl
movsb
and
shr
push
cmp
in
pop
mov
scas
les
mov
adc
sub
pop
sub
inc
lods
insl
fsubs
or
bound
jne
mov
or
and
jle
jne
inc
pusha
enter
pop
hlt
jne
mov
adc
dec
sub
push
mov
andl
in
rorb
fstpl
clc
push
mov
shll
add
mov
or
out
leave
lock
mov
cmpsb
iret
in
cmpsb
jge
rorl
push
leave
pop
mov
dec
adc
das
orl
f2xm1
mov
inc
push
jns
test
push
cmc
fdivs
addl
xchg
adc
mov
pop
adc
mov
inc
aad
mov
fs
movsl
divl
or
pop
loopne
dec
mov
cli
iret
dec
dec
mov
mov
cmp
fdivrl
or
cwtl
test
dec
jmp
mov
jmp
pop
mov
sbb
adc
push
xchg
sbb
aas
test
xor
shll
lds
inc
cwtl
notl
cmp
std
pop
adc
popa
mov
push
clc
jae
sub
jo
jbe
rol
jg
inc
and
mov
adc
push
push
mov
mov
sahf
dec
mull
push
inc
aaa
pop
jp
push
cmpb
xchg
mov
out
xchg
and
shrl
arpl
sub
xor
jecxz
iret
push
add
pop
iret
mov
addr16
sbb
xchg
fiaddl
adc
xlat
jecxz
xchg
idivb
mov
add
adc
and
pop
push
mov
push
ljmp
dec
je
movsl
leave
xchg
fmul
or
loop
mov
mov
mov
push
inc
inc
icebp
int3
mov
fwait
dec
xor
mov
sub
frstor
test
mov
inc
add
xor
mov
pushl
mov
call
jmp
jmp
push
jo
es
mov
jo
mov
jle
dec
addr16
dec
mov
andl
fldl
sbb
ret
mov
mov
ffreep
cld
push
sub
cmpsl
inc
scas
dec
aam
push
dec
inc
push
mov
inc
das
mov
jle
or
outsb
decb
mov
inc
gs
lds
add
jmp
lret
pop
adc
mov
mov
mov
mov
pop
pop
dec
dec
xor
test
leave
mov
xchg
sbb
dec
in
scas
ja
dec
pop
cmp
pop
or
repz
mov
jge
jne
mov
dec
mov
jg
ss
push
in
xlat
enter
jecxz
jp
jle
pop
je
jl
add
pop
out
dec
test
xchg
and
jbe
jg
mov
outsb
std
cld
stc
fdivs
lahf
cwtl
cs
aad
and
xor
in
mov
lods
andb
mov
ss
stos
aas
push
test
pop
cs
stos
cli
jmp
push
test
stos
push
dec
jecxz
mov
jo
clc
arpl
mov
add
decl
mov
xor
mov
jmp
adc
pop
cmpb
pop
ret
rolb
inc
fs
adc
sahf
add
ss
daa
mov
push
daa
push
faddp
into
ljmp
mov
lcall
outsb
addr16
jge
cmpb
pop
and
lret
movsl
push
into
repnz
dec
add
fdivrs
cmp
inc
adc
mov
loopne
and
in
add
xor
rolb
add
dec
fists
sub
adcl
xchg
loop
repz
inc
movsb
and
in
mov
das
jle
cmp
repz
sbb
iret
int
insb
aas
sub
pop
ret
popa
and
sub
dec
call
test
sahf
je
cmp
dec
sub
pop
pop
or
addr16
push
mov
imul
dec
jb
in
inc
fdivs
out
hlt
jge
out
jo
fwait
mov
xor
lahf
jecxz
hlt
jge
imul
sub
cmpl
mov
test
sarb
mov
leave
ret
push
mov
sub
movl
push
call
cmpb
movl
je
andl
xor
jmp
push
addl
call
movl
cmp
movl
jl
add
movl
movl
cmpl
je
cmpl
jne
push
push
call
cmpl
jne
mov
dec
mov
xor
add
dec
mov
jmp
adcl
movl
movl
cmpl
je
cmpl
jne
push
push
push
call
cmpl
jne
xor
or
dec
mov
mov
dec
mov
jmp
sbb
lea
movl
cmpl
je
cmpl
jne
pushl
push
pushl
call
mov
dec
mov
jmp
xor
mov
lea
mov
adc
mov
mov
mov
xor
mov
orl
mov
sub
mov
addl
push
push
sub
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
push
call
cmpl
jne
xor
xor
inc
mov
cmpl
jb
and
xor
sub
push
xor
mov
movl
cmpl
je
cmpl
jne
push
pushl
call
mov
dec
mov
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
andl
mov
inc
mov
cmpl
jne
pushl
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
adc
add
movl
mov
movl
mov
mov
cmp
mov
mov
je
mov
xor
add
imul
mov
jmp
xor
add
mov
mov
xor
add
mov
mov
mov
xor
add
cmp
jne
push
pushl
pushl
call
mov
mov
mov
mov
mov
mov
mov
movl
mov
movl
mov
xor
add
jmp
mov
xor
lea
push
mov
xor
lea
push
mov
pushl
call
mov
xor
lea
mov
mov
xor
xor
add
mov
xor
lea
cmp
jbe
mov
mov
mov
mov
mov
mov
pushl
sub
pushl
xor
mov
pushl
call
sub
xor
mov
mov
mov
xor
add
xor
div
mov
cmp
jne
call
lea
mov
mov
push
add
push
lea
push
call
mov
mov
mov
mov
mov
mov
sub
xor
cmp
je
mov
mov
sub
xor
cmp
jne
mov
add
jmp
mov
xor
add
mov
mov
xor
add
mov
jmp
mov
mov
mov
mov
add
mov
mov
pop
pop
pop
leave
ret
push
mov
push
push
mov
mov
movzwl
mov
jmp
shll
sbb
inc
out
jle
inc
nop
push
sbb
and
jle
push
fistps
adc
aam
or
xchg
ss
lcall
jo
and
rolb
movsb
sbb
push
aas
ljmp
cmc
pop
inc
jae
mov
pop
pop
hlt
in
ja
movsl
mov
rolb
sub
imul
cmp
jae
cmpsb
fcoms
test
mov
lret
push
test
pusha
and
push
in
push
cs
inc
stos
ljmp
xorl
call
sub
or
push
pop
push
pop
fistl
cmp
jmp
adc
push
pop
lret
aaa
les
rorb
push
pop
mov
pop
pop
jb
ss
pop
je
stos
or
imul
or
mov
mov
cwtl
and
mov
jmp
push
decb
sbb
in
add
cmp
mov
ret
loopne
out
cmpsl
jbe
push
cmp
das
cmp
or
and
xor
roll
sub
push
jo
inc
mov
fcmovbe
scas
xchg
sahf
push
inc
push
shrl
test
add
mov
jecxz
inc
popa
or
mov
adcl
shlb
add
ljmp
push
lds
and
adcl
add
push
outsb
ljmp
es
mov
sbb
cmp
popa
or
out
ds
je
inc
pop
jae
lods
adc
jb
test
xlat
outsb
fcmovne
outsl
mov
outsl
xchg
dec
popa
pop
add
inc
mov
xchg
push
popa
sbb
jl
adc
gs
add
inc
and
movl
xlat
mov
divb
ss
push
dec
jle
andl
gs
jns
icebp
xchg
ja
ds
iret
add
imul
xchg
mov
push
add
gs
subl
mov
push
sbb
pop
xor
xchg
cmc
adc
cli
filds
push
lods
loopne
xor
mov
xor
ret
inc
mov
xchg
add
inc
clc
jge
lret
rclb
mov
hlt
mov
out
fstp
push
nop
push
idiv
lea
std
cwtl
sbb
cmp
repz
or
push
iret
mov
or
mov
mov
ss
sub
and
pop
sub
mov
adc
mov
lahf
testb
je
ds
mulb
cs
dec
subb
fisubs
pop
sahf
fdivl
adc
aad
mov
add
bound
lea
lret
xor
and
pop
mov
sub
in
arpl
xor
sub
fnstsw
sti
cmovne
sub
icebp
mov
push
mov
mov
sub
add
insl
rorw
daa
cmp
gs
add
movl
jmp
out
psubd
push
cmc
mov
loop
movsb
sub
jle
and
jle
cltd
pop
adc
pop
push
sbb
pop
flds
add
loop
mov
jb
mov
adc
and
mov
pusha
mov
shll
cmpsl
fidivs
mull
jecxz
inc
sub
add
aas
and
jp
je
test
lret
dec
or
adc
aad
xchg
or
dec
lods
repz
adc
push
or
xchg
inc
adc
add
inc
inc
int3
mov
pushf
cmp
dec
pop
outsb
enter
incl
jl
sti
clc
xchg
sbb
pop
cmpsl
or
xchg
scas
jle
cmpsb
in
es
jno
add
cld
es
jle
out
cmp
or
push
jb
mov
stc
add
loope
pushw
or
and
nop
xor
mov
dec
xor
pop
pop
pop
push
ja
jecxz
push
or
pop
and
inc
mov
hlt
enter
sbb
mov
test
cmp
xor
jb
insl
sbb
pop
test
or
sbb
cmp
incb
jae
push
fucomip
out
out
fimull
jne
pushf
ljmp
pop
in
lahf
jne
cltd
mov
rcl
mov
mov
sub
cmp
addr16
push
cwtl
arpl
dec
roll
out
fdivrp
push
in
mov
dec
xchg
mov
out
mov
inc
inc
outsb
mov
rcr
pop
inc
mov
popl
xor
jmp
mov
sbb
sub
add
scas
add
test
loope
and
dec
xlat
sbb
cmp
arpl
mov
sarl
jecxz
sbbb
xchg
xchg
or
dec
inc
dec
es
xchg
adc
fisubs
inc
stc
pusha
or
jno
mov
sub
sti
in
shl
push
rorl
fisttps
imul
into
xor
int3
cmp
lods
cmp
add
dec
cmp
aad
incl
push
in
mov
imul
aas
or
ficomps
in
scas
cmpsb
cmpsb
mov
mov
stos
hlt
adc
imul
mov
mov
add
in
inc
pusha
fcoms
insb
dec
mov
das
lea
fsubrs
cmp
push
aad
cmp
sub
out
stos
iret
ja
sarb
ljmpw
movsl
popa
xchg
je
test
sbb
aam
into
xchg
arpl
cmove
pusha
mov
pusha
dec
xor
movsl
in
and
fucomip
pop
insb
inc
dec
sahf
pop
pop
xor
lcall
push
mov
fcom
outsb
push
mov
out
mov
fcomps
mov
push
pop
push
mov
cmpsb
vmovsldup
pop
outsb
mov
mov
or
cmc
sbb
push
add
xor
cmp
jne
mov
xor
mov
subl
xor
mov
subl
add
mov
movzwl
andl
not
and
movl
mov
movl
mov
jmp
jmp
dec
sbb
jno
push
cwtl
mov
shr
js
jle
and
jle
jmp
pop
cmp
jl
fiadds
pop
insb
in
sbb
fs
mov
or
push
pop
xor
bound
inc
jae
mov
push
push
xlat
mov
jnp
pop
out
pusha
ret
mov
mov
xor
and
loop
mov
jne
inc
xchg
dec
movsb
loopne
and
fwait
movntq
out
push
rcrl
lock
jno
arpl
push
data16
pop
sbb
leave
or
and
jecxz
push
mov
lret
inc
sbb
push
or
push
mov
cmc
cltd
sub
xor
daa
mov
aam
jecxz
insl
push
adc
in
out
stos
push
in
arpl
pop
xchg
xor
push
xchg
cmp
mov
scas
add
lahf
mov
stos
fdivrs
inc
mov
das
das
dec
imul
inc
pop
add
cmp
movsl
int
addr16
jp
xchg
inc
and
adc
cmp
cmp
push
dec
sahf
inc
inc
or
mov
xor
sub
fnstenv
lods
popf
jl
xchg
adc
cmp
dec
add
das
jne,pn
out
pop
inc
std
sarl
outsb
push
out
xor
mov
test
jmp
das
add
jge
insb
add
inc
mov
inc
nop
pop
sbb
les
jb
out
shrl
in
out
and
adcb
jg
and
shlb
mov
dec
mov
mov
xchg
sub
mulb
xchg
xchg
jbe
adc
xor
cltd
xor
ljmp
adc
cmpsb
outsl
push
enter
and
mov
cmp
add
out
xor
mov
jge
jns
jns
mov
xchg
fistps
repnz
pop
test
in
cmp
xchg
mov
push
fadd
xchg
sub
sbb
sbb
in
and
movsb
mov
imul
les
enter
and
loopnew
inc
ret
mov
mov
mov
mov
jns
cmpsb
mov
pushf
xchg
inc
negb
xor
jmp
sti
add
insl
xchg
adc
outsb
es
in
push
outsl
jg
js
xchg
xor
rcl
hlt
inc
and
mov
xor
dec
lea
lods
outsl
jae
in
cmp
sub
jge
jge
int3
xor
dec
lock
push
popa
and
fildll
stc
inc
movsl
movsl
sbb
xor
aas
stos
pushf
dec
cmpsb
rclb
mov
or
std
xchg
jp
popf
daa
adc
loop
test
jns
pop
cli
add
adc
inc
dec
std
mov
cmp
leave
rol
clc
idivb
push
imul
out
xchg
inc
jae
pop
test
cmpsl
xor
jae
repnz
mov
xorl
mov
pushl
call
test
je
leave
ret
push
mov
sub
or
jmp
outsl
cmpsb
insb
inc
jne
jne
push
push
mov
xor
ret
jle
in
jle
popf
out
std
inc
xchg
or
js
and
cltd
sbb
xchg
int3
fisubrl
cmp
rcll
pushf
or
and
jmp
imul
stc
cmp
mov
adc
jo
push
movsl
daa
xchg
mov
test
mov
lods
inc
push
and
mov
mov
cmp
lret
sub
lods
push
push
mov
and
jge
inc
sbb
outsl
or
and
mov
bound
cmp
mov
movsb
faddl
lods
push
jmp
test
ja
xlat
cmp
lcall
push
scas
data16
daa
out
fiadds
dec
mov
in
arpl
pop
mov
in
icebp
xlat
dec
divb
cld
pop
stc
pop
adc
push
lret
lcall
fiadds
mov
adc
cmp
pop
jg
rcl
xor
add
adc
loopne
loope
adc
push
and
test
inc
push
xor
mov
stos
lgs
repz
push
jp
das
push
mov
sbb
inc
jmp
test
fsubs
sbb
lcall
xor
fbstp
mull
mov
jne
movl
inc
movl
mov
mov
xor
mov
incl
lea
mov
sbb
mov
mov
push
movzwl
add
mov
lea
mov
mov
and
push
or
push
add
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
mov
movl
jmp
xor
inc
arpl
jae
aas
or
nop
nop
xlat
jle
in
jle
sub
xor
addr16
in
jp
xor
repnz
aaa
jbe
movntps
jp
in
int3
cmp
ss
mov
sbb
dec
sti
push
pop
cmp
out
out
stc
jmp
enter
fldl
pusha
mov
jl
ret
add
out
xorb
pop
jmp
push
les
lcall
and
hlt
pop
mov
daa
stc
jle
dec
mov
push
stos
dec
scas
dec
aad
fildl
aad
in
in
push
out
hlt
loope
xchg
gs
div
cmp
movsl
daa
loop
fistpll
out
jo
inc
sbb
aad
jnp
int
xchg
mov
sbb
mov
xchg
fnstsw
jecxz
movb
insl
pop
xchg
dec
and
push
pusha
int
fstl
jmp
push
and
and
mov
inc
lds
in
pop
call
rolb
mov
sub
inc
cld
lea
popf
jbe
cwtl
es
mov
stos
jp
fimuls
hlt
sahf
cwtl
or
jg
push
sub
mov
lock
add
inc
adc
cmp
in
pop
sbb
jbe
mov
and
xor
push
xor
out
or
xchg
jae
das
xchg
test
das
xor
test
xor
andl
mov
addl
xor
xorl
xor
addl
add
add
div
movl
mov
movl
movl
movl
cmp
movl
jmp
or
add
aam
lret
imul
mov
push
aad
jle
jg
jle
in
inc
or
jne
loope
push
push
jmp
ss
arpl
xchg
daa
out
or
loop
enter
jge
sub
addl
in
cmp
adc
mov
leave
mov
fisubl
inc
lods
pop
jo
push
and
in
add
stos
xchg
dec
adc
cmpsl
cmpsb
pop
daa
mov
popf
pusha
and
lcall
pop
cmpsl
out
in
adc
out
pminsw
cltd
pop
ret
adc
sbb
dec
out
pop
and
fwait
sub
cmp
fnstenv
dec
mov
aad
iret
ds
cmp
cs
push
rcl
push
fidivs
cmp
and
sbb
cmp
inc
pushf
in
out
add
push
jb
push
gs
or
int3
dec
fsubrl
inc
ss
xchg
mov
cmp
mov
insb
adc
xchg
es
cmpsl
and
inc
xchg
into
jl
jecxz
sbb
or
inc
test
out
rcl
cwtl
insb
push
ss
xor
push
xlat
jbe
stos
ja
mov
roll
jecxz
mov
dec
aas
adc
add
test
add
neg
movl
lea
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
mov
and
mov
inc
mov
imul
mov
mov
movl
cmp
je
sub
mov
sbb
orl
andl
mov
inc
mov
cmpl
jne
pushl
push
pushl
call
cmpl
jb
jmp
xor
xor
outsb
fucomi
mov
add
sarb
in
jle
push
rcrl
fistpll
adc
sub
xchg
inc
push
shrl
cltd
mov
jae
push
into
push
fisttps
into
cmpsb
adc
ds
jg
xor
xchg
shll
xor
xchg
test
inc
mov
lock
mov
repz
or
popa
icebp
push
xchg
ja
jp
pop
lahf
test
popa
adc
movsb
push
ss
test
add
sub
inc
mov
pop
shll
inc
out
bound
xorl
out
or
adc
sub
cld
pop
pop
adc
jmp
adc
adc
pop
pop
sarb
fisttpll
xlat
xchg
sub
mov
aam
xchg
rcrb
loopne
push
cmp
sbb
leave
cli
lahf
sahf
test
xchg
ret
movsl
nop
aas
in
stos
sbb
test
in
addr16
inc
xlat
mov
movsl
cltd
xlat
aad
lret
stos
cmp
pusha
leave
dec
imul
mov
js
lds
or
push
xor
fldl
and
dec
add
sub
mov
pop
adc
sbbb
jle
pop
and
add
cmc
pusha
add
cs
lock
les
xor
push
test
mov
inc
test
out
insl
testb
js
dec
in
xchg
xlat
inc
mov
xor
add
jmp
adc
test
or
cmp
sarl
in
jle
mov
fmul
cmp
addr16
movsl
inc
mov
scas
mov
pop
adc
push
adc
pop
loopne
popf
xor
sbb
dec
mov
and
mov
sti
cmpsb
andb
subl
faddl
adc
mov
lahf
dec
scas
lahf
inc
cmp
jns
rorb
test
push
aaa
lcall
and
test
adc
mov
and
and
xor
xchg
adc
cli
pop
xor
add
inc
jge
adc
sbb
cmpsb
mov
mov
sbb
mov
ret
mov
jae
add
jmp
out
rolb
push
or
jmp
test
aam
stc
fildll
adc
or
fistpl
jno
or
push
xor
loopne
cmp
out
mov
icebp
cmpsl
push
mov
mov
popa
jecxz
jg
pop
dec
push
rorb
push
mov
jbe
addr16
and
lock
cmpsl
push
ljmp
dec
adc
xchg
mov
lock
and
cwtl
xor
cs
int
xlat
pop
push
cmc
fimull
inc
add
insb
cli
pop
jle
mov
sub
fwait
mov
shr
ret
push
sbbl
leave
ret
mov
add
cmp
je
mov
andl
jmp
mov
mov
or
cmp
je
mov
xorl
jmp
mov
jmp
test
loope
jno
jmp
lods
jecxz
sarl
in
jle
ret
sub
scas
push
adc
jo
cli
add
xchg
jle
sbb
out
dec
sti
out
adcl
insb
mov
stos
xchg
dec
xchg
in
ret
jmp
add
mov
flds
and
or
mov
adc
cwtl
aaa
fnstsw
jp
in
inc
mov
fidivs
dec
cmc
sbb
enter
jbe
push
neg
jl
jecxz
test
aad
inc
or
and
popa
dec
xor
or
or
mov
ret
in
lods
mov
pop
outsb
fwait
jo
push
stc
sti
pop
sbbl
xchg
adc
and
lahf
lcallw
sub
out
dec
lods
mov
xlat
mov
xchg
pop
sarb
inc
mov
push
cs
loop
fs
test
sub
jb
adc
lret
inc
sbb
fidivl
stc
sub
and
dec
xchg
dec
cwtl
mov
outsb
fsubrl
cmp
sub
xchg
in
ljmp
clc
repnz
cli
shll
and
out
dec
clc
fcom
cmp
fmull
movsl
ret
or
popa
mov
in
mov
inc
into
stos
and
mov
jmp
sub
aam
pushl
shlb
mov
mov
mov
xor
mov
add
cmp
je
mov
xor
add
mov
mov
mov
mov
xor
add
movzwl
mov
xor
lea
add
mov
mov
mov
xor
jmp
push
adcb
sub
jmp
enter
scas
fidivrs
in
jle
mov
cmpsl
and
sbb
aaa
outsl
xorb
sbb
xlat
scas
shlb
pop
xor
and
mov
ret
xchg
xchg
movsl
mov
sahf
mov
lea
fiaddl
test
push
ja
cmp
lcall
xor
into
movsl
mov
sarl
adc
push
nop
fisubrs
mov
mov
push
inc
das
sbb
ret
xor
xor
lock
clc
clc
enter
fwait
aam
cmp
add
push
or
mov
mov
sahf
cmpsl
and
cwtl
into
mov
ret
sbb
dec
scas
lret
push
in
call
jbe
xchg
insb
inc
or
cltd
aaa
jl
sbb
xor
sbb
rcl
push
pushf
xchg
xor
adc
fcomip
dec
and
or
xchg
adc
dec
mov
mov
push
sub
ljmp
pop
inc
sbb
inc
cld
loope
aaa
cld
ljmp
add
xlat
loope
or
loope
les
add
int3
mov
incl
xchg
mov
sbb
mov
jno
mov
xchg
or
adc
lea
call
js
lretw
dec
or
pushf
arpl
ret
mov
mov
scas
xlat
sub
mov
jmp
mov
mov
jmp
test
stc
test
sbb
or
jle
in
jle
dec
mov
mov
xor
xor
dec
adc
enter
fisttpll
pushf
nop
ss
insb
inc
jmp
or
imul
or
xor
push
mov
mov
and
mov
jb
adcb
add
push
out
push
inc
lea
xchg
xorb
mov
adc
clc
sahf
popf
or
sbb
jno
push
inc
add
xor
std
dec
out
jle
or
pop
fldcw
into
xor
scas
iret
das
pop
in
jb
xchg
push
sub
jno
mov
xchg
xchg
add
sti
in
adcb
jge
cmp
push
mov
leave
pop
pop
into
shl
je
scas
enter
jnp
inc
into
jecxz
cmc
scas
testl
pop
stos
js
mov
sbb
jp
mov
pushf
std
dec
push
jge
add
jne
and
xchg
xchg
fildll
imul
mov
adc
mov
cmp
aad
cwtl
pop
push
ror
out
adc
push
fbld
jns
mov
xor
test
mov
cli
in
loop
mov
clc
xor
cmp
ret
sbb
mov
push
shll
pop
in
stc
mov
ds
sti
ficoml
and
mov
xor
cmp
je
mov
addl
jmp
mov
jmp
xor
xchg
xor
jmp
cli
fnstsw
in
jle
sbb
fcompl
in
cmpl
mov
sub
paddb
pand
scas
arpl
jno
mov
pop
lods
lea
add
subl
sbb
repnz
sahf
pop
rcrb
adc
xchg
push
movsl
jae
push
mov
movsb
clc
ficoml
add
notb
stos
cmpsl
push
in
fucom
add
mov
jb
sub
ja
and
insb
in
xor
xchg
jg
outsl
insl
clc
test
adc
cwtl
int3
fisubs
sbb
xlat
push
jge
sar
out
int
cli
cmp
movsl
mov
sbb
div
rclb
jns
cmpsb
dec
rolb
lret
into
loop
cmp
jecxz
scas
iret
mov
scas
or
stc
fisttps
sub
push
adc
and
mov
xchg
and
lock
sub
push
and
mov
cs
arpl
aad
stos
mov
outsb
mov
divl
pop
jbe
inc
test
pop
mov
stos
pop
jno
movsb
sbb
cmp
aas
sub
bnd
jmp
lahf
inc
fucomip
push
pop
les
dec
mov
pusha
or
xlat
mov
xlat
into
loop
popl
rolb
stc
mov
sub
sub
cmp
test
lcall
call
in
sub
sub
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
call
jmp
mov
mov
andl
mov
inc
mov
cmpl
jne
push
push
push
pushl
call
cmpl
jb
mov
and
mov
sbbl
push
xorl
push
mov
mov
sub
or
mov
xor
adcl
push
mov
and
add
mov
or
lea
mov
mov
mov
xor
sbb
add
movl
cmpl
je
cmpl
jne
push
push
pushl
call
mov
dec
mov
jmp
mov
negl
jmp
add
jmp
mov
pusha
les
pusha
fidivrl
jp
jle
lret
sub
xchg
rcll
sub
addr16
lcall
sbb
adc
xor
pop
int3
jle
mov
into
dec
jp
mov
jmp
sbb
push
cmp
jmp
mov
xorb
enter
mov
cmp
insb
imul
sub
lods
orb
sub
aam
loope
jb
leave
out
enter
mov
mov
xchg
subl
lret
fldenv
and
js
push
adc
loope
jae
stos
pop
sub
stos
aas
stc
insb
xchg
out
xchg
data16
pop
aas
lea
xchg
outsl
bound
repnz
cmpsb
mov
insb
es
xchg
jp
mov
jae
dec
ficoms
mov
cmc
cmpsb
adc
sub
cmpl
mov
hlt
lods
sbb
xor
and
or
xchg
test
pop
pop
pop
lds
push
int
inc
and
pop
cltd
and
idiv
dec
shll
inc
stos
xor
xchg
and
push
aas
nop
xor
lcall
sub
sbb
repz
jecxz
jno
imul
pushf
mov
test
push
roll
jb
mov
sub
scas
cld
fcompl
ret
std
jae
sub
cmc
cmpsb
sbb
mov
in
inc
scas
xor
hlt
cmc
jg
sbb
inc
pop
stos
or
ss
xchg
xor
int
bound
xor
push
or
inc
pop
pop
jle
sahf
ret
mov
add
or
adc
or
xchg
arpl
movsl
jecxz
xor
mov
mov
adc
dec
les
daa
fidivrl
inc
inc
out
sub
stos
dec
loope
mov
fwait
insb
xchg
sahf
sti
fmul
fsts
es
jge
js
mov
cwtl
mov
xchg
stos
jno
fistps
es
ss
orl
imul
or
and
rcrl
adc
sahf
add
mov
mov
shlb
push
mov
rclb
imul
add
pushaw
jo
mov
insb
pop
arpl
xor
es
popa
lea
push
cs
pop
mov
jne
cltd
decb
push
inc
fiadds
mov
sbb
jns
jmp
pop
fnstcw
cltd
add
mov
or
pop
lret
gs
addb
in
add
jne
and
inc
ja
add
jg
imul
sbb
int3
inc
insb
inc
in
jmp
sbb
mov
sbb
ret
add
cltd
mov
and
sub
sbb
push
addl
out
daa
clc
push
jg
inc
fwait
das
cwtl
test
cmp
inc
in
xor
stos
cmp
add
add
xor
add
inc
mov
cmpl
jne
push
pushl
pushl
push
pushl
push
call
cmpl
jb
sub
lea
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
sbb
mov
xor
and
add
sub
mov
or
mov
mov
mov
xorl
mov
andl
mov
jmp
jge
mov
mov
ds
cli
insb
fnstcw
jp
jle
and
xlat
push
call
cld
adc
nop
movb
xchg
pusha
stos
sub
mov
loop
adc
dec
xor
push
cmp
mov
andb
xor
fsubs
pop
aas
js
aaa
mov
or
or
mov
jno
arpl
pop
xor
xchg
repz
leave
ret
out
mov
sti
push
pop
in
dec
dec
jae
std
xlat
jmp
jae
scas
jmp
lods
data16
lret
push
jne
popa
pusha
jle
movsl
xchg
xchg
or
int3
scas
xchg
add
arpl
cli
add
in
lret
xchg
int
dec
aam
dec
inc
in
push
inc
sub
cli
lods
movsb
cmp
fcmovbe
fs
mov
ret
sahf
imul
sti
mov
fldt
xor
ljmp
nop
mov
fildll
add
push
inc
lahf
xor
out
repz
mov
nop
icebp
addr16
or
inc
insl
sbb
mov
mov
leave
add
xchg
out
out
sbb
mov
and
xchg
mov
test
repz
arpl
jge
sahf
cld
enter
sub
aaa
inc
fs
cmpsb
aaa
push
testb
mov
pop
pop
notb
fbld
adc
or
mov
push
inc
arpl
repnz
int
pop
test
pop
in
test
shll
ret
cmp
pop
test
mov
fidivl
out
push
mov
mov
mov
xchg
sbb
hlt
xor
mov
lock
cmp
orb
jmp
lret
std
gs
aas
out
imul
cmp
lods
sbbb
fdivrl
idivl
sarl
lahf
ret
xchg
js
aad
cmp
shl
das
popf
cmovl
inc
cltd
test
out
dec
or
in
xor
push
imul
mov
mov
aaa
inc
adc
fstpl
push
mov
mov
adc
push
aam
push
and
ds
adc
cmpsl
daa
call
dec
lret
loop
mov
lcall
out
or
cs
push
xorb
sub
pushf
ret
mov
lock
adc
cmp
pusha
dec
mov
xchg
inc
jbe
das
int
sub
dec
into
push
cmp
dec
and
mov
jne
jl
test
mov
jecxz
aad
sub
bound
call
dec
icebp
test
loop
shll
das
xor
lds
jge
imul
iret
sbb
std
dec
decl
jo
daa
pop
mov
dec
fwait
jl
dec
mov
dec
inc
sub
and
xchg
ret
out
adc
xchg
test
sbb
and
add
or
sbb
mov
and
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
call
cmpl
jb
movl
cmpl
je
cmpl
jne
push
pushl
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
xor
add
cmp
jmp
cmovbe
je
dec
cmc
fnstsw
aaa
popa
push
jge
jle
imul
pop
call
cmc
ljmp
sub
sub
lea
andl
pop
mov
or
pop
imul
sti
mov
mov
xchg
or
xor
cwtl
test
push
jg
clc
jb
dec
pop
push
ret
or
dec
cmp
sahf
sub
fstl
cltd
xchg
out
sbb
inc
movq
je
shll
mov
fwait
or
ds
push
mov
and
xchg
rorb
lcall
xor
pop
push
sbb
sbb
inc
arpl
add
xorl
sub
pusha
add
data16
xchg
xor
movsl
clc
cli
xchg
mov
and
aaa
data16
add
mov
pushf
popa
push
cld
xchg
mov
mov
aas
sarb
push
sarl
mov
pop
mov
jg
or
rol
and
outsb
lods
sbb
cmpsb
jle
pop
popa
jecxz
pop
int3
inc
in
pop
and
jge
inc
mov
scas
inc
mov
pop
clc
repnz
sub
ss
push
scas
jns
or
fisttpl
lods
fimull
arpl
jmp
lret
data16
jno
into
lret
xchg
bound
push
outsb
xor
jne
mov
popf
jno
xchg
cmp
mov
mov
jl
jbe
es
je
ret
movaps
sub
js
push
push
cmp
jecxz
gs
popa
lahf
adc
xchg
testl
loope
gs
cmc
fcompl
push
xor
xchg
lret
mov
mov
mov
push
mov
jg
pop
lods
into
pop
ss
mov
xor
stc
push
adc
jmp
dec
stos
ret
addr16
insl
and
out
fsubl
inc
push
push
aam
sbb
xor
nop
sarl
cmp
adc
or
add
jl
jle
test
gs
lret
int
mov
outsl
test
stos
mov
or
push
push
negb
add
inc
mov
fwait
mov
aas
cwtl
ds
sub
xor
jmp
inc
jb
inc
and
adc
push
sbb
mov
or
shrl
push
sbb
daa
inc
mov
dec
and
clc
pushf
data16
inc
and
lds
lea
jno
hlt
dec
or
cmova
xlat
jl
mov
pop
cld
lcall
push
daa
mov
addb
pop
push
xchg
cs
jns
imulb
mov
jnp
mov
bound
xor
xchg
ds
mov
loope
lods
xchg
pop
push
cmp
out
add
push
test
adc
jne
mov
mov
xor
add
cmp
jne
mov
jmp
inc
aad
shlb
push
out
push
stc
aam
imul
jp
jle
sub
dec
lahf
or
mov
gs
mov
push
push
xchg
xchg
jnp
xor
xor
cmp
dec
mov
das
icebp
jo
push
sub
mov
pop
jno
lcall
imul
push
fidivl
bound
and
add
mov
addr16
fisubs
mov
jp
out
pop
adc
movsb
popa
scas
jnp
push
cmp
mov
loop
mov
push
jb
leave
push
mov
dec
mov
adc
es
icebp
jns
int
cmp
and
mov
jmp
add
cwtl
decl
int
mov
push
xchg
jp
or
jmp
pop
mov
mov
iret
pop
in
cmp
or
push
in
leave
jge
roll
dec
cmp
jb
add
test
sbb
inc
jns
repz
ds
jne
or
cmp
mov
fisubl
sbb
icebp
movsb
and
xchg
sti
les
xchg
mov
pop
je
in
sub
pop
test
gs
sub
subl
pop
jns
jne
mov
add
clc
push
fiadds
lea
and
cmpsl
jmp
mov
dec
xorl
sbbl
mov
adcl
call
inc
jae
scas
mov
movsl
pop
in
lock
imul
sbb
and
mov
mov
test
mov
lcall
ljmp
dec
mov
lods
dec
inc
das
cli
sarb
push
loop
divl
mov
shr
inc
or
add
xor
mov
lcall
imul
add
ss
mov
pop
push
mov
iret
xlat
mov
jge
enter
pop
jo
gs
mov
jge
mov
pop
push
or
mov
popf
xchg
cmp
fcomps
inc
das
shlb
outsl
je
in
sbb
shl
sub
sub
movsl
pop
les
scas
pop
and
aad
scas
movsb
mov
rcr
jp
cmp
imul
mov
pop
movsl
dec
and
sti
pop
ja
adc
daa
mov
test
sbb
je
or
xor
sbb
xor
es
outsb
icebp
lret
stc
int
sbb
jmp
xchg
xchg
cmpb
xor
idiv
dec
or
mov
sbb
fldenv
das
stc
add
scas
and
mov
int
sub
repz
mov
and
sub
loop
xor
insl
popf
dec
mov
cmp
cmpsl
pop
mov
out
insl
dec
aam
jmp
jns
pusha
ret
or
movsl
sbb
hlt
xchg
dec
sti
mov
std
clc
xor
scas
adc
mov
movb
mov
mov
mov
jmp
enter
enter
sbb
mull
test
jo
jle
jp
jle
nop
mov
insb
mov
xchg
xorl
imul
pop
shufps
mov
outsl
xchg
adcb
insl
jno
dec
xchg
push
lcall
mov
leave
jbe
test
fnstsw
push
cwtl
push
fimuls
mov
mov
mov
fsub
add
dec
push
pop
rcll
daa
xchg
fwait
adc
ljmp
and
xor
and
and
mov
inc
and
pop
pop
sub
add
icebp
cmp
jp
dec
adc
jo
jne
push
out
jbe
push
in
lods
int3
xchg
adc
adc
push
jbe
inc
lret
xchg
mov
das
and
or
lds
cs
and
incb
pop
out
jge
leave
jae
mov
fldl
pop
or
cwtl
xchg
and
cli
clc
inc
xor
aam
and
clc
test
insb
inc
inc
iret
cli
mov
aas
lods
lret
xchg
shlb
mov
ja
mov
addr16
js
xchg
movsl
enter
jbe
ror
js
cmp
inc
add
inc
xor
pop
cmp
popf
mov
outsb
jecxz
imul
xor
sbb
loopne
and
pop
or
xchg
pop
repnz
mov
mov
jge
jl
outsb
push
les
add
mov
into
jecxz
push
and
test
cmpsl
int
add
pop
sbb
mov
sti
xchg
sarl
xchg
cs
cmp
and
cmp
sbb
cli
ret
pusha
xlat
mov
jns
xchg
popf
add
mov
add
sub
lock
loop
add
cwtl
repnz
inc
sbb
popf
sbb
mov
imul
mov
pop
lods
add
pop
lret
or
jl
dec
cmp
push
daa
xchg
adc
xchg
cmp
push
pushf
gs
cmp
ffreep
lods
popl
and
jg
in
sbb
mov
pop
mov
test
js
pop
inc
std
aaa
idiv
hlt
add
mov
mov
test
popa
jg
jg
mov
inc
ds
mov
or
mov
and
mov
cmpsl
xchg
adc
xor
in
repz
push
or
cli
xorb
es
outsl
lret
mov
pop
js
and
dec
jb
xor
cmp
adc
scas
xlat
jo
push
pop
mov
scas
dec
pop
sub
fsubr
dec
cmp
mov
scas
jne
int
push
mov
aaa
out
mull
adc
test
out
clc
inc
mov
sarb
inc
sub
cmc
jge
adc
leave
mov
push
mov
mov
inc
and
cmp
mov
in
movq
jge
cs
xchg
adc
mov
xor
mov
sub
add
mov
mov
mov
movzwl
add
mov
mov
mov
xor
add
xor
sub
mov
movzwl
sub
cmp
mov
movzwl
jg
xor
sub
sub
mov
jmp
xor
lea
mov
mov
cmp
je
mov
movl
jmp
mov
mov
xor
jmp
lret
out
icebp
jmp
inc
popf
shll
pop
xor
jle
jge
jle
outsb
or
sbb
test
icebp
sti
push
pusha
aam
xor
or
mov
out
jmp
mov
roll
sub
ljmp
imul
push
push
sbb
lods
or
xadd
lods
xchg
or
push
popf
mov
int3
push
and
add
into
xchg
sub
jp
out
imul
inc
add
mov
cmpsl
jp
lods
push
xor
icebp
orb
xor
test
int
int
loope
imul
jmp
repz
mov
stos
sbb
repz
inc
into
insl
pushf
dec
in
in
sahf
das
shll
and
pop
mov
popf
adc
sub
pop
lods
pop
popa
fiaddl
loopne
aam
xchg
cltd
lret
sub
daa
lods
icebp
fldt
aam
jns
dec
adc
arpl
hlt
cmp
push
inc
ljmp
push
bound
into
inc
shlb
pop
cmpsb
xor
test
xor
push
icebp
out
sub
lcall
push
and
jns
jo
cmc
xchg
push
mov
push
mov
mov
imul
mov
cmpsl
arpl
int
roll
out
mov
inc
mov
jne
mov
sbb
addb
jle
sbb
cld
dec
shrl
loopne
sbb
push
sbb
pushf
push
inc
imul
push
xorl
xor
dec
cmc
mov
push
jg
in
stc
movsb
or
aam
push
mov
dec
inc
lret
jmp
jmp
adc
mov
lcall
mov
ja
popa
jge
mov
jo
or
sub
out
ss
adc
add
enter
cmp
test
push
mov
push
inc
dec
mov
push
add
dec
pusha
xor
mov
imul
outsb
dec
test
and
imul
push
cwtl
lahf
enter
fsubrs
push
sbb
test
mov
cli
jp
insb
cmp
inc
jnp
sub
lds
mov
insl
push
adc
stc
adc
xlat
push
push
or
mov
aam
add
fmull
js
dec
jecxz
mov
dec
pop
dec
sbb
into
inc
mov
in
pop
inc
sbb
shl
aad
int3
lret
mov
lea
mov
imul
sbb
scas
repz
aaa
mov
pop
rclb
mov
inc
push
lea
or
or
movsl
ss
out
cmc
add
sub
pop
jb
sub
aad
lret
mov
mov
sahf
dec
dec
mov
inc
mov
pop
daa
fucom
in
and
test
lahf
fsts
addr16
test
add
jmp
in
notb
sub
int3
push
sarb
jle
jge
jle
jecxz
loopne
lds
shlb
adcb
adc
int
fstpt
mov
adc
cmp
and
xchg
pop
dec
mov
and
mov
sbb
xor
test
and
mov
fs
ret
xchg
clc
lods
adc
int
bound
cmp
ss
mov
mov
and
fdivrl
mov
hlt
push
mov
insb
push
cmc
jbe
ret
xchg
pop
inc
daa
inc
shr
cmp
lahf
add
fwait
in
mov
mov
pop
decl
inc
cmp
ljmp
add
xchg
insl
and
xchg
mov
mov
jp
fucom
aas
mov
xor
and
mov
movsl
in
mov
dec
movb
cwtl
and
mov
vpunpckhwd
gs
les
mov
add
mov
jge
rorb
or
mov
and
sbb
xlat
nop
testl
pop
push
jmp
mov
mov
mov
es
mov
add
fsts
rclb
cmp
mov
mov
xlat
imul
pop
cmc
jmp
sub
mov
aaa
mov
mov
mov
sbbl
or
sbb
jg
push
or
call
outsl
inc
adc
sar
inc
call
jns
mov
cltd
cmp
test
push
fxch
movsl
das
jl
mov
in
hlt
ds
jnp
xchg
xchg
scas
xchg
cmpsl
and
lea
loopne
dec
mov
and
dec
call
xor
int3
imul
lret
pop
icebp
jmp
xor
mov
mov
imul
enter
sub
add
scas
in
push
in
mov
adc
fldl
jae
xchg
or
mov
lods
in
lods
orl
mov
repz
jge
leave
jns
call
sbbb
xor
inc
sub
sarb
cli
mov
dec
cmpsb
out
pop
das
jecxz
cltd
inc
xchg
outsb
stos
lahf
or
lock
arpl
loope
lds
mov
or
adcl
xor
fs
aas
and
imul
inc
pop
in
outsl
mul
mov
inc
and
daa
push
faddl
mov
imull
sbb
and
push
dec
add
mov
cli
fs
or
and
pushf
fs
vminsd
loop
cld
mov
pop
mov
fsubrs
popf
cld
sbb
add
jne
add
shlb
jae
jge
rorb
pop
push
pop
jo
lods
ror
sub
mov
arpl
or
add
test
adc
add
clc
mov
mov
lea
jmp
dec
mov
pop
jno
nop
lret
add
jle
jp
jle
add
push
test
jmp
xlat
jbe
cmpsb
adc
add
push
cld
mov
aad
xchg
adc
sbb
scas
jnp
xor
mov
pop
xchg
fs
dec
bound
pop
push
fnstenv
push
pop
pop
add
jne
pop
sbb
es
testb
ja
inc
xchg
loop
jae
dec
and
lcall
xchg
aaa
mov
jp
in
or
mov
jnp
add
or
dec
sti
mov
xor
scas
fstps
neg
xor
int
repnz
sub
jb
pusha
mov
cmp
fdivrs
pushl
mov
inc
insb
cmp
or
inc
fnsave
mov
xor
jecxz
push
mov
in
pop
pop
mov
add
ljmp
mov
es
lods
cmp
cld
dec
pop
stos
mov
xor
rclb
mov
push
xor
xor
inc
pop
enter
cltd
push
ret
outsb
js
mov
outsb
rorl
icebp
add
imul
adc
jmp
daa
push
mov
aas
xchg
and
test
gs
mov
sbb
inc
or
inc
pop
test
pop
sub
sub
mov
jp
sahf
push
mov
jp
push
je
inc
pusha
daa
stos
and
andb
arpl
call
std
jge
fldenv
add
lock
lahf
das
push
sbb
inc
ljmp
jg
out
xchg
xlat
clc
js
jne
testb
add
addr16
and
mov
add
in
int3
push
cmovae
pop
adc
stos
pop
nop
add
inc
adc
in
cltd
movsb
mov
outsl
xchg
cmc
xchg
cmpsb
test
in
mov
xchg
mov
in
out
jne
pop
lods
xchg
sub
in
outsb
stos
mov
inc
inc
ret
cmp
push
sarb
inc
sbb
out
ror
ficoms
adc
cmc
popa
mov
jne
and
subb
mov
xchg
in
mov
in
dec
xchg
arpl
das
sbb
pop
outsb
or
jnp
shlb
jmp
inc
cmpsb
fsubrp
fsubs
dec
fnstsw
pop
int3
or
pop
inc
adc
cmp
loopne
cmp
inc
es
pop
sub
stc
pop
pop
adc
jae
aam
or
xor
repz
and
je
push
mov
xor
ljmp
out
out
dec
js
cmp
cmc
cwtl
and
pushf
mov
push
cwtl
in
cs
inc
stos
sbb
xor
fnstsw
movl
aaa
je
lods
xchg
cltd
rol
rorl
xor
sahf
add
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
xor
add
cmp
je
mov
mov
add
mov
jmp
adc
inc
sahf
popa
scas
icebp
jno
ficomps
push
jp
jle
adc
bound
test
push
jo
popf
add
push
add
repnz
int3
sbb
out
add
lods
or
stos
or
pushf
mov
jae
dec
jno
adc
js
mov
mov
cmc
pop
dec
mov
add
int
xchg
shrd
mov
adc
jbe
inc
scas
mov
mov
enter
faddp
mov
pop
cmp
test
in
stos
es
fistpll
jecxz
push
cmp
orl
cmp
mov
add
adc
pushf
inc
mov
fsubl
mov
nop
outsb
or
addb
ret
inc
inc
ja
leave
ds
ficoms
adc
xchg
fwait
xchg
or
mov
cmp
mov
insb
out
and
sbb
sbb
xor
lahf
in
inc
mov
jecxz
in
adc
xchg
bound
pop
nop
jg
ret
out
outsb
xchg
pop
lods
ljmp
loopne
insb
jnp
mov
inc
test
pop
loopne
movsb
pop
xchg
sbb
mov
dec
call
mov
je
cmp
cmp
sbb
xchg
out
mov
or
pop
xchg
jne
das
mov
std
jno
ret
mov
push
push
movsb
mov
leave
out
sub
notb
fisubl
push
mov
push
ljmp
inc
je
in
xlat
in
mov
ja
cld
add
jo
jecxz
mov
mov
lret
rcrl
cmp
cmp
cmp
rcl
adc
jp
inc
fnsave
mov
fwait
loope
cs
jbe
dec
or
les
int3
cmp
pop
popf
fists
inc
enter
pushf
xchg
nop
mov
mov
push
dec
arpl
inc
das
fbld
adc
repz
or
sub
movsb
mov
jnp
mov
and
lret
pop
cmp
in
loop
add
sub
addl
fists
mov
leave
fucomp
mov
mov
xor
push
push
dec
mov
mov
sbb
lret
xor
jmp
mov
add
jg
sub
imul
mov
js
or
int3
jmp
loopne
inc
hlt
push
push
std
aad
rolb
add
jo
sbb
cmp
es
or
push
imul
jmp
shlb
fdiv
pop
sarl
mov
aaa
mov
sub
sbb
pop
ja
cmp
inc
loopne
dec
clc
mov
mov
mov
add
xor
cmp
je
jmp
sarl
mov
mov
shrl
fsubrs
sahf
dec
mov
jle
jge
jle
jle
insl
sbb
push
push
or
sbbl
sbb
ret
lahf
inc
mov
cli
lods
push
in
lea
xor
mov
xchg
add
lods
outsb
sarb
scas
sub
mov
sbb
enter
mov
ftst
out
lcall
jb
js
cmpsl
push
jg
arpl
sub
mov
addb
xchg
sti
std
mov
test
stos
cmp
aam
inc
data16
mov
adc
sbb
jb
pop
adc
stos
jl
xor
lret
mov
jl
mov
push
add
cmpsl
adc
add
in
mov
pop
pusha
int3
dec
and
push
xor
scas
pushf
scas
js
insl
pop
mov
test
dec
mov
cmp
mov
in
or
push
fmull
xchg
in
sbb
call
xchg
adc
lods
mov
popf
fmull
imul
push
mov
dec
movhps
sti
mov
or
pop
or
cmpsl
lods
in
js
sbb
inc
aaa
xchg
das
lahf
mov
dec
mov
loopne
xchg
and
lcall
mov
mov
xor
stos
shlb
push
sub
pop
call
cmpsb
loop
jle
nop
mov
stos
xchg
inc
fnstenv
loop
lods
pop
ljmp
lea
add
les
jae
xor
out
jp
push
or
sub
jmp
popf
xor
mov
ret
xor
and
les
outsl
or
or
jle
in
aad
xor
movsl
jmp
orl
pushf
stos
cltd
adc
jno
cmpsb
in
fldl
jle
jecxz
adc
loop
flds
ja
in
push
and
xor
arpl
pushf
mov
xorb
subb
loope
jne
pop
mov
testl
jp
add
adc
clc
jno
xchg
cld
xchg
inc
rorb
xchg
mov
test
xlat
fnsave
pushf
aam
add
in
negl
push
icebp
pop
mov
clc
xchg
leave
or
lret
jle
sub
dec
inc
fldl
push
mov
adc
call
push
nop
mov
sub
xchg
mov
addb
in
mov
jae
pop
ficomps
mov
in
sub
mov
xchg
xchg
scas
int3
fcom
loop
xor
aam
xacquire
fwait
loopne
sub
sub
pushf
jecxz
push
jnp
mov
push
push
mov
fiaddl
jge
sbb
ljmp
add
lea
insl
push
xor
mov
int
lock
dec
jo
jns
mov
aad
adc
test
ds
mov
dec
clc
xor
add
jmp
and
jno
pop
xchg
sar
cmp
or
jle
jp
jle
sbb
push
dec
and
fcmovbe
xchg
push
stos
mov
push
shll
jno
sets
mov
lret
ds
xchg
sub
es
aam
fsubrs
sarl
xchg
sub
es
xchg
stos
or
push
mov
xchg
outsb
popf
push
clc
adc
scas
int3
mov
mov
gs
lods
jne
cmpsb
dec
xchg
dec
push
adc
push
dec
and
dec
popf
roll
dec
fidivrs
cmp
fwait
clc
jae
dec
sarb
mov
pop
jbe
lahf
dec
imul
push
rcrl
lret
cmpb
movsl
dec
mov
sbb
and
out
js
insb
sub
roll
jns
inc
pop
mov
mov
sbb
jecxz
jnp
inc
insb
push
fwait
outsb
inc
sbb
aad
adc
push
add
sub
cmpsl
lock
stc
push
popa
in
test
xlat
cs
adc
and
pushl
jae
mov
adc
aam
push
rcrl
enter
mov
pop
stos
push
test
pop
in
xchg
push
adc
cwtl
sti
add
in
clc
sub
add
cmc
pop
mov
sbb
clc
aam
mov
imul
and
jne
mov
pop
jns
pop
jae
mov
je
outsl
dec
xor
pusha
jp
xor
movsl
jae
dec
mov
data16
adc
out
and
out
adc
pop
and
sbbl
mov
adc
sub
lods
fidivrl
push
jecxz
mov
addr16
xchg
xchg
test
cmpsb
stc
mov
repz
jmp
test
pop
adc
or
cmp
leave
pusha
inc
pop
ja
xchg
bound
out
xchg
out
rclb
and
sbb
ret
andl
lcall
jle
es
jns
inc
jmp
mov
mov
sahf
push
insl
rcl
cwtl
fcoms
andl
imul
mov
je
jnp
xor
fwait
dec
je
mov
cltd
jno
inc
lea
xor
loop
lds
xor
test
xchg
mov
popa
leave
cmc
in
arpl
xchg
or
lret
iret
pop
test
add
out
stos
fiaddl
sti
jns
sub
insl
xor
jbe
push
or
pop
je
pop
jl
loope
cmp
lcall
call
add
dec
stos
xor
fs
dec
sbb
xorb
pop
scas
rcrb
xchg
fdivrp
out
push
shrl
xor
xor
push
and
lods
cmp
rolb
xchg
call
push
mov
je
sbb
inc
mov
mov
mov
mov
jmp
xorl
jmp
jmp
and
jnp
cmp
and
jp
push
mov
das
adc
jle
jp
jle
jo
jecxz
insb
cwtl
sub
shll
stc
ret
fsubl
cmp
mov
xor
push
jno
push
mov
sbbb
sub
mov
mov
xor
out
out
mov
in
add
mov
add
push
enter
addr16
and
stos
lods
xor
sub
in
shlb
mov
out
scas
lahf
mov
je
data16
rcl
xchg
and
sub
cwtd
sbb
rorb
adc
or
outsl
jmp
movsb
popa
sarb
mov
sahf
add
repz
daa
dec
mul
sub
iret
in
inc
inc
sub
call
cmp
push
inc
adc
sbb
and
mov
fsubrs
fldlg2
call
in
bound
push
loopne
xchg
gs
dec
cmp
clc
xchg
or
aam
mov
je
js
loop
repnz
aaa
lds
mov
mov
mov
dec
and
cs
pushl
jbe
jmp
imul
mov
jns
push
jne
jnp
lret
mov
xchg
fcmovnb
fcmovu
xchg
sbb
xchg
mov
in
movsl
xlat
sahf
sarl
rcl
hlt
paddw
sbb
ss
scas
out
test
repz
lret
mov
ds
mov
jecxz
cli
bound
lds
add
in
lods
leave
adc
dec
ret
das
lahf
jbe
test
jge
inc
mov
sub
sbb
or
add
out
std
pop
mov
sbbb
test
out
subb
data16
in
fsubrp
sbb
shll
in
cmp
sbb
sbb
push
cmp
insl
xor
dec
cmpsb
shr
push
ss
sahf
lret
scas
in
ds
ss
sti
lcall
adc
jecxz
dec
popf
jecxz
pop
jmp
xchg
in
mov
icebp
and
lret
add
fimull
and
or
sub
mov
ficoml
jns
jnp
pop
and
pop
ljmp
pop
add
or
mov
push
popl
rorl
sarb
push
lcall
xor
cmpsb
scas
pop
popl
and
cmpl
pop
dec
and
aad
repz
jns
addl
in
xor
sarl
add
jl
xor
cs
insb
jb
enter
js
jns
jnp
mov
test
hlt
loope
sbb
aam
and
push
xchg
xor
imul
pop
nop
sub
cmpl
cmpsb
in
cld
xor
xor
shrb
mov
mov
jmp
xchg
jge
hlt
push
jne
pop
cld
into
inc
cmp
xchg
jp
jle
rorb
fldenv
sbb
out
bound
jae
ds
cmp
clc
push
imul
fistpll
sbb
mov
and
aaa
stos
or
jns
loopne
sub
push
inc
ficoml
outsb
pop
ret
jp
cmp
stos
pop
insb
cmc
or
add
inc
hlt
jmp
mov
ret
mov
mov
aas
adc
stc
push
inc
mov
hlt
ret
clc
mov
cmp
lock
jg
aam
lea
push
inc
sti
push
inc
and
out
in
int3
add
pop
xor
push
pop
ja
rcrb
clc
cmp
push
add
jg
gs
das
jg
adc
sub
inc
pop
add
sub
cmp
mov
scas
jno
out
mov
cltd
cmp
out
shlb
dec
sahf
sbb
pop
cmp
aas
xor
mov
mov
insl
arpl
xor
loopne
cmpsb
dec
mov
cmpsl
adc
mov
mov
sbb
fcoms
sarl
push
mov
mov
cmp
das
sbb
and
jbe
aad
sub
cmp
lock
mov
stos
and
sub
lods
shl
in
xchg
inc
xchg
bnd
pop
push
test
cmp
mov
in
xchg
lock
movsb
mov
cmc
push
push
stos
pusha
js
addb
adc
pop
sub
xchg
sub
sbb
or
pop
dec
dec
jp
aas
dec
or
in
jne
pop
scas
insl
push
pushl
int3
add
outsl
lock
outsb
push
and
jmp
clc
fisubrs
and
dec
stos
in
pop
inc
test
scas
or
aaa
cmp
fisubrl
sub
iret
and
cmpsl
mov
jnp
das
jae
mov
mov
sbb
jl
popa
divb
or
repnz
gs
jle
pop
scas
arpl
fldl2t
sub
mov
jne
sbb
icebp
xchg
jge
les
cmpb
cmp
lret
rcl
scas
jmp
shrb
jmp
iret
dec
mov
js
and
bound
lret
dec
mov
xor
sub
in
mov
jecxz
sub
test
jle
and
lret
fs
insl
jp
adc
push
mov
mov
pop
xor
fmul
arpl
push
adc
push
add
jae
mull
push
xchg
sub
jbe
push
iret
add
sbb
in
shlb
mov
test
adc
out
push
in
inc
gs
adc
in
add
add
mov
mov
jmp
out
xor
mov
loop
into
xor
xchg
cs
fbstp
cmpb
jge
jle
pop
int3
out
cmp
push
in
addr16
ret
insb
add
fisubrl
scas
dec
jnp
push
sbb
sub
dec
dec
test
xchg
lret
sub
add
mov
push
mov
imull
pop
sbb
mov
sti
cmp
xor
or
rolb
xchg
and
ss
mov
fnstenv
mov
add
addb
rclb
sti
add
push
and
push
call
cmp
push
or
into
out
adc
mov
xchg
lahf
cltd
jmp
aaa
fimuls
xchg
adc
mov
cmp
daa
xchg
pop
sbb
jnp
xchg
mov
test
adc
xor
push
gs
test
and
test
jl
push
std
cmp
mov
mov
inc
ja
xchg
sbb
mov
fmul
les
or
dec
fs
inc
pushf
sbb
mov
xor
ficoms
test
ja
scas
ficomps
and
das
fdivrs
add
or
mov
aam
pop
jno
cli
cmp
jg
out
xchg
mov
loope
imul
mov
inc
lods
mov
xor
xchg
stos
pop
jbe
std
in
mov
mov
insl
in
jne
inc
popf
sub
popf
bound
inc
cli
fwait
in
lea
xchg
jb
stos
les
mov
jnp
fistpll
push
aad
push
daa
inc
mov
fdivl
xor
out
out
bound
jp
fidivs
cmp
add
imul
add
rorb
mov
jge
jne
imul
in
pop
hlt
fiaddl
andb
dec
mov
cwtl
dec
adc
lcall
mov
ret
lret
pop
subl
xlat
popf
pop
test
cs
out
push
stos
jl
scas
inc
jle
jecxz
and
jge
jge
push
cltd
push
loop
push
push
int
lds
enter
ret
cltd
add
lret
repz
out
fwait
mov
ficompl
call
setae
inc
repz
stos
xchg
ficompl
xchg
push
add
push
movsb
js
lock
out
cmp
pop
fwait
cltd
iret
cwtl
adcb
jecxz
adc
orl
outsl
ret
push
decb
lea
pusha
sbb
jge
movsl
loope
inc
push
jo
dec
and
test
pop
mov
movsb
ja
dec
push
jmp
push
and
lea
test
xchg
adc
lahf
pusha
ret
cmc
rolb
xchg
pop
mov
mov
movsl
dec
xor
cli
add
push
rorb
jge
repnz
leave
or
mov
mov
pushl
call
mov
cmp
je
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
adc
movl
xor
or
and
movl
mov
movl
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
push
movl
cmpl
je
cmpl
jne
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
movl
cmpl
je
cmpl
jne
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
adc
xor
mov
add
mov
movzbl
xor
mov
orl
push
push
test
movl
je
mov
movl
cmpl
je
cmpl
jne
pushl
pushl
pushl
call
xor
or
dec
mov
jmp
movl
cmpl
je
cmpl
jne
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
and
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
pushl
call
jmp
sbb
mov
mov
adc
imul
mov
xor
or
sub
or
mov
mov
mov
sub
add
mov
and
mov
sbbl
xchg
andl
xor
add
inc
mov
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
neg
sub
adc
xor
addl
mov
xor
mov
or
mov
mov
mov
addl
xor
andl
xor
xor
add
movl
mov
mov
mov
je
sbbl
mov
adcl
xor
sbbl
add
cmp
movl
jne
pushl
call
mov
adc
mov
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jne
pushl
call
cmpl
jne
xor
xor
inc
mov
jmp
mov
xor
or
and
mov
mov
subl
xor
xorl
add
movl
cmp
je
andl
pushl
pushl
subl
call
sub
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
add
mov
mov
mov
add
mov
jmp
mov
fs
mov
repz
jle
xor
pushf
ds
jo
insl
xlat
test
mov
adc
lea
popa
cmc
xchg
cmp
addb
dec
out
lret
xor
add
pop
insb
lahf
rcrl
push
popa
out
sahf
jge
cmp
push
add
enter
xor
push
mov
stc
pop
sub
push
xor
fmulp
repz
push
pop
loope
xchg
push
pop
fs
inc
fistps
push
dec
es
lret
cmc
cmpb
orl
out
mov
test
push
mov
pop
xor
sub
pushf
dec
jle
jne
enter
aaa
negl
out
pop
cmp
cmp
mul
dec
mov
push
xchg
push
and
xchg
or
sbb
mov
push
fstpl
sahf
or
and
ficoms
xchg
adc
sub
cmp
ficompl
xor
rcrl
movsl
mov
idivl
jle
mov
dec
mov
jle
icebp
mov
mov
ret
inc
out
mov
bound
test
push
inc
stos
shlb
mov
adc
cmp
push
out
dec
push
pop
push
xor
fimull
in
std
adc
sub
out
out
jmp
dec
cmp
or
dec
popa
mov
dec
xchg
imul
mov
cmp
mov
popa
shrb
add
pop
aas
popa
out
adcb
out
ror
cli
xchg
or
dec
and
setbe
loop
pop
imul
and
xchg
lahf
sub
clc
mov
cltd
sub
mov
pmulhw
lock
sahf
pop
popa
xor
or
mov
mov
pop
dec
sbb
and
mov
push
shll
lcall
leave
or
sbb
push
fcomip
test
shlb
das
mov
jne
aas
fsubrs
cltd
fwait
push
leave
adc
dec
and
test
push
cmp
fwait
loop
dec
idiv
pop
rorl
les
dec
mov
push
rolb
lods
or
xchg
pop
add
mov
out
mov
insb
or
inc
aas
ret
xchg
push
jmp
adc
push
nop
cwtl
neg
jb
test
int
or
fwait
inc
jecxz
ficomps
pop
inc
jmp
pop
or
mov
mov
or
or
xor
add
scas
ret
mov
inc
es
adc
sub
jo
adc
xchg
rcrb
xchg
shll
in
mov
pop
scas
mov
fbstp
jg
fdivr
or
and
mov
xchg
adc
in
mov
add
xor
mov
mov
mov
add
lea
mov
jmp
push
adc
shrl
cs
repz
bound
jge
jle
xchg
cmp
ss
jmp
jne
ror
jns
stos
sbb
repnz
popa
add
mov
aam
sub
sub
push
lret
shlb
in
sbb
push
sbb
movsl
pushf
jno
inc
cmc
or
inc
jne
add
jp
orb
out
or
or
mov
in
aaa
dec
xlat
nop
jle
jmp
enter
iret
sub
frstpm(287
rclb
popa
xlat
pop
push
lods
lock
es
adc
add
sbb
loop
dec
addb
lcall
adc
jmp
sbb
stc
nop
add
cmpl
mov
sub
jge
add
bound
inc
cltd
mov
jle
sub
push
pop
leave
push
and
adcb
jo
clc
pushf
dec
jnp
xchg
popa
jmp
inc
movsl
clc
mov
pushl
in
push
mov
scas
icebp
pusha
adcb
clc
test
movsl
movsb
adc
fisttps
cmp
pop
cltd
pop
in
test
inc
aas
push
jg
in
cltd
sub
cmp
inc
and
test
cwtl
dec
outsb
loopne
inc
jbe
mov
pusha
das
inc
dec
test
insb
pop
js
xchg
out
sti
js
pop
out
es
stc
jae
jg
les
inc
ret
frstor
add
enter
les
sbb
pcmpgtd
test
in
push
pop
iret
or
out
xchg
pop
pop
adc
pushf
and
push
mull
ret
dec
sub
cmpsl
ja
jnp
test
jbe
push
jo
rcll
lock
mov
dec
std
or
pushf
push
jbe
xchg
in
jo
jae
out
mov
xor
cmp
adc
push
cmp
lret
mov
ja
add
adc
es
ljmp
mov
loopne
lds
into
jmp
mov
xor
dec
scas
lret
cwtl
loope
xor
adc
sub
loope
xchg
fldcw
into
cmpsb
mov
gs
mov
pushf
insb
lahf
dec
pop
sub
lock
test
xchg
cmp
insl
dec
add
jl
or
mov
hlt
sub
jl
loopne
mov
adc
and
insb
mov
pushf
fs
mov
mov
enter
cwtl
fimuls
push
hlt
das
and
add
or
insl
fistpll
pop
pop
cmp
and
test
sub
bound
cmc
test
xchg
cmp
rorb
adc
mov
jle
and
push
dec
ss
dec
cmp
dec
pop
lahf
fistpl
push
pushl
pushl
call
mov
mov
xor
add
cmp
jne
mov
inc
cmp
jb
jmp
mov
xor
add
jmp
mov
movzwl
mov
mov
mov
mov
mov
xor
add
cmp
jne
mov
xor
jmp
jmp
xchg
adcl
and
jle
cmp
inc
xor
mov
sbb
jecxz
mov
sbb
push
loop
adc
inc
inc
loop
xchg
mov
int
scas
lock
and
repnz
daa
arpl
jmp
jge
xor
or
adcl
inc
sbb
push
outsb
jl
inc
sub
and
push
sbb
out
jb
or
scas
sub
mov
stc
push
dec
sahf
fsts
sbb
in
push
and
mov
lods
sti
dec
scas
mov
cltd
hlt
scas
adc
inc
rorb
adc
outsl
pop
popf
mov
inc
mov
xor
push
arpl
inc
outsl
adc
in
xor
sbb
dec
and
push
loope
addr16
insb
pop
mov
data16
push
dec
pop
popa
mov
pand
insb
js
icebp
cltd
mov
hlt
push
pop
paddusw
xor
or
outsl
stos
add
in
aas
inc
jmp
add
xchg
fidivs
add
loopne
int
adc
ret
jge
jg
nop
mov
dec
sub
and
aad
dec
inc
mov
xchg
xchg
addl
sbb
gs
mov
cmc
add
add
dec
jmp
test
adc
pop
ss
or
jge
jecxz
mov
jns
inc
sar
testb
scas
jno
push
dec
stos
xorb
nop
jae
mov
lea
rcrb
outsb
cmp
out
adc
int
out
push
mov
rol
cltd
ficoms
pop
incl
sahf
stos
sti
mov
inc
mov
xchg
sysenter
cmp
push
mov
ja
inc
pop
add
cmc
cmpsl
sub
cli
and
fildll
adc
test
mov
in
mov
pop
daa
out
jl
add
js
nop
int
loopne
in
in
dec
push
loopne
call
inc
lcall
add
sbb
push
sub
sub
xchg
cwtl
arpl
or
jne
addr16
stos
fcmovnbe
jecxz
out
lcall
push
shrl
leave
or
pop
jo
mov
outsl
int3
xor
es
addr16
push
iret
cmp
imul
js
sbb
out
test
adc
stc
xchg
sub
lock
movsl
mov
fidivl
push
pop
dec
imul
pop
lds
cltd
incl
sub
cltd
mov
ja
jle
or
cmpb
cs
cmovge
pop
adc
inc
push
clc
rcrl
dec
push
fsubrs
addr16
xchg
mov
cmpl
jo
hlt
pop
mov
jmp
sbb
sahf
fistl
xchg
sti
dec
hlt
mov
add
mov
mov
test
je
mov
push
pop
push
dec
jmp
test
jnp
mov
xchg
rcr
adc
jnp
xchg
jle
jge
jle
test
shl
outsb
or
mov
pop
jb
ja
and
cmp
add
ret
pop
test
dec
mov
cmp
roll
test
lods
jns
out
mov
and
push
sbb
mov
rcrl
mov
xorl
scas
dec
dec
sub
cmp
in
adc
lret
cli
push
sbb
and
testb
sahf
mov
cmp
jge
inc
mov
pop
mov
inc
mov
rorl
cmpsl
insb
hlt
push
punpcklbw
into
pop
js
clc
and
rolb
cli
adc
add
cs
mov
lods
jecxz
pop
in
inc
mov
mov
adc
int
out
jbe
out
xorl
icebp
dec
out
and
xor
cwtl
xchg
mov
mov
lea
aaa
jmp
mov
or
pop
sub
mov
mov
je
ds
pop
sub
xor
cmp
lds
jp
or
cwtl
xchg
fs
dec
xchg
loop
push
xchg
repnz
mov
or
sbb
test
in
into
mov
sub
cs
fnstcw
mov
mov
ret
or
or
push
adc
xor
xchg
es
sub
mov
out
fs
jbe
xor
pop
aas
movsb
fwait
cmpsb
mov
or
into
lods
das
cli
mov
std
pop
xchg
ljmp
inc
cmp
out
push
mov
adc
loopne
pop
outsl
and
in
cmp
push
vpsubsb
mov
adc
adc
notl
mov
push
call
cmp
cli
ret
fildll
mov
adc
imul
js
in
dec
incb
decb
cmp
rcr
lods
ret
push
movsl
sarl
xor
xlat
inc
xchg
aad
mov
mov
shr
das
dec
repnz
out
sub
fbstp
ljmp
out
mov
xor
pop
mov
popa
and
sbb
out
jp
push
xlat
ja
mov
xor
adc
repnz
aaa
out
and
popf
or
pop
jecxz
aaa
dec
and
xor
imul
int3
imul
aas
jo
cmp
js
in
push
fnstenv
inc
int
je
jg
daa
sbb
pop
jp
mov
gs
xchg
inc
jne,pn
clc
dec
xchg
dec
adcl
in
outsb
adc
jmp
movsl
cmp
mov
mov
lds
fildll
pop
jle
adc
or
leave
das
mov
pop
xchg
sub
xchg
dec
mov
imul
sub
mov
mov
mov
xor
mov
add
mov
mov
xor
add
mov
jmp
xor
xor
xor
pop
mov
xchg
jle
jge
jle
test
sbb
dec
pusha
mov
int3
push
cld
pushf
inc
movsb
pop
push
push
mov
mov
mov
sub
loope
or
xchg
jmp
aad
inc
stos
in
jge
jmp
jp
inc
cmp
fistpll
sti
int3
inc
arpl
xlat
pop
out
inc
sub
les
enter
xor
cmp
andl
dec
or
lea
ret
test
cmpsb
les
xchg
outsb
push
pop
add
dec
fdivs
push
fsincos
fnstenv
movsb
mov
sub
mov
insb
xchg
decl
ss
mov
pusha
test
dec
aam
add
jae
pop
daa
sbb
leave
shl
cmp
and
std
add
push
jne
iret
sarl
mov
and
jmp
xchg
das
lret
sub
das
inc
mov
xchg
cltd
je
xchg
inc
or
xchg
mov
pop
sub
mov
xchg
sbb
xchg
jl
dec
pushf
fstpl
notb
mov
sbb
roll
xchg
loopne
sbb
ss
inc
test
or
in
insb
add
mov
cmp
cmp
adc
sbb
mov
add
jbe
lret
sbb
lods
xor
and
sahf
popf
insl
sub
xchg
adc
ss
icebp
pop
popf
decl
cmp
into
jns
jl
out
jno
add
mov
pop
inc
les
dec
pop
int3
lods
mov
pop
mov
out
fstp
int3
into
bound
sbb
dec
pop
xor
sub
xlat
mov
faddp
push
sahf
lock
in
sarl
addr16
js
in
repnz
es
xchg
inc
stc
or
mov
sbb
xchg
add
insb
or
xchg
jne
pop
insl
cwtl
dec
jmp
aam
icebp
mov
pop
adc
and
imul
rolb
dec
jmp
and
xchg
cli
cmp
repnz
pop
jl
rcrb
xchg
and
xchg
fdivl
sub
mov
sbb
fucomi
mov
and
mov
sti
inc
fsubr
popf
xchg
add
mov
mov
adc
dec
inc
pop
dec
cmp
xchg
movsb
mov
push
fsubs
xchg
sahf
stos
dec
mov
pop
mov
sub
test
lea
pop
fmuls
add
jbe
sub
or
aad
das
test
pusha
inc
sbb
sti
cmp
dec
or
xor
mov
mov
fiadds
sbb
sub
cmp
cmpsb
pushf
push
xchg
das
imul
dec
xor
test
pop
cmp
filds
add
scas
add
mov
lea
cmp
je
mov
mov
mov
mov
mov
xor
xor
mov
add
div
mov
jmp
inc
stos
push
jmp
jae
mov
jo
jecxz
outsl
pop
sub
jle
dec
inc
mov
push
outsl
adc
and
cli
or
mov
push
test
push
push
hlt
sub
cmp
jmp
xor
rcrb
xlat
cmp
inc
mov
jbe
out
inc
push
test
sbb
out
icebp
call
insb
xchg
lds
in
sbb
stos
imul
xor
leave
jge
in
jae
pop
jl
je
push
es
mov
jmp
or
xor
pop
repz
shll
xchg
shl
es
jae
cmp
outsl
mov
pop
mov
jno
insl
xchg
icebp
inc
aam
or
in
arpl
daa
push
sbb
push
cmp
inc
lds
rep
push
sti
sub
inc
dec
cmp
cmp
inc
or
ljmp
fs
add
jnp
mov
and
jg
dec
xor
or
xchg
iret
leave
adc
and
inc
and
les
pop
xchg
nop
sbb
in
push
cmc
scas
cmp
cmpsb
hlt
add
xlat
fisttpl
pop
adc
xchg
rcrl
add
jl
jmp
pop
push
mov
add
mov
int
arpl
loop
std
dec
cli
aad
fidivs
cmp
and
jb
push
cld
enter
mov
xor
lods
sub
lret
cmpsl
sub
add
xor
imul
imul
shl
ljmp
stos
add
mov
jp
rcr
xor
adc
pop
loope
ja
or
lcall
aas
pusha
leave
movsl
in
dec
dec
mov
mov
popf
stc
shrb
idivl
add
push
gs
inc
and
inc
mov
sub
addr16
stos
sbb
lret
lea
sub
or
fstpt
and
pop
push
aas
mov
int
popf
xor
ljmp
out
sub
outsl
adc
push
mov
iret
ds
dec
test
out
setns
loope
xor
movsl
sub
mov
mov
dec
or
sub
mul
and
roll
faddl
ss
mov
popa
ret
add
ret
aad
movsl
jge
lods
add
out
in
mov
repnz
push
jno
sarb
and
test
or
xchg
les
enter
xchg
int3
cmp
xchg
cwtl
jge
jp
mov
shll
pop
push
adc
cmp
lcall
cmp
ljmp
xor
loopne
push
shrb
lcall
fidivrl
push
add
aaa
loop
leave
push
outsl
stc
scas
pop
cmpsl
cmp
mov
xchg
mov
mov
and
insb
outsl
xor
push
les
dec
jge
mov
add
sbb
add
das
subb
mov
xor
pop
stc
xorl
lahf
jle
jge
jle
insl
daa
outsb
mov
lods
jo
mov
adc
adc
pop
push
test
adc
stos
stc
sahf
test
mov
les
and
cmp
mov
xchg
out
fs
cmp
fildll
fidivrs
jo
movsl
rorl
add
push
sub
and
dec
aas
inc
add
cmp
push
inc
xchg
push
movsl
sbb
dec
jge
and
push
popa
cld
adc
pop
xchg
pmaxub
fnstsw
lods
xchg
mov
in
addr16
xchg
mov
xor
ljmp
mov
cli
call
aam
aad
and
outsb
mov
push
lock
cmpsb
sub
mov
sub
shrb
loop
sub
aaa
ja
cli
js
js
mov
nop
lods
insl
add
dec
mov
stos
adc
mov
out
test
adc
ror
lret
inc
sub
cmpsl
mov
xchg
std
xchg
xchg
jl
insb
or
out
popa
sub
das
push
mov
mov
pusha
pushf
mov
jp
jns
orl
les
mov
inc
xchg
sub
mov
push
jmp
xchg
imulb
and
mov
push
xchg
rorl
xchg
mov
loope
pushf
pop
xorl
mov
xchg
sbb
mov
repnz
push
pop
ret
or
lods
out
aad
cmc
out
fcompl
or
sub
jbe
inc
mov
cmpsl
cmpsl
fdivrl
cmp
mov
scas
jg
pushf
mov
popf
push
or
lods
inc
dec
testl
mov
adc
imul
lea
adc
jl
add
mov
inc
dec
dec
call
adc
lods
stos
out
pusha
out
inc
or
fidivs
mov
in
adc
xor
mov
ret
jno
xchg
negl
jb
push
insb
add
inc
and
insl
ffreep
dec
inc
gs
in
cmp
and
or
orl
mov
aam
callw
leave
jno
mov
inc
iret
mov
add
mov
shr
fisttpll
mov
aaa
hlt
cmc
addr16
hlt
aas
inc
xchg
sub
mov
add
inc
movsl
xchg
sar
cmp
imul
iret
and
iret
popa
add
sub
xor
dec
leave
cmc
and
push
dec
jns
jae
push
sub
out
pop
sub
insl
aad
mov
sbb
mov
add
lret
push
aas
fidivrs
inc
popa
mov
jnp
ds
js
pop
jae
mov
divl
aas
out
jns
mov
cmp
xchg
adc
out
mov
xchg
popf
sub
xchg
adc
xor
and
mov
mov
jmp
repnz
adc
aad
fcoms
push
test
lcall
bound
enter
lods
sub
test
popa
sti
pop
imul
push
xor
sub
cltd
dec
ljmp
push
xor
repnz
xor
mov
lret
adc
aad
add
pop
movsb
sbb
out
cwtl
clc
inc
scas
dec
adc
rorb
mov
pop
mov
mov
in
movsl
orl
mov
jp
sahf
xchg
sub
test
jo
mov
cld
mov
pop
or
and
xor
js
pop
xlat
push
jnp
jmp
and
inc
es
roll
mov
sub
test
faddl
mov
jle
cld
inc
sub
add
cld
jnp
cmp
leave
rcr
and
inc
jnp
out
and
jae
sbb
push
fwait
rorl
pop
jle
loope
jbe
pop
dec
push
hlt
xor
outsl
bound
aaa
mov
jle
pop
insl
mov
in
mov
pop
leave
sub
fdivrl
xor
mov
inc
pop
mov
push
or
mov
or
push
test
lods
loopne
mov
call
fistl
das
xchg
rorb
psllq
stc
mov
mov
mov
rcr
xchg
cmpsb
jo
push
aad
cwtl
sub
jbe
cmp
xchg
pusha
adc
add
dec
cld
ljmp
shlb
push
mov
pop
sbb
iret
sbb
repz
sub
pop
and
inc
aam
jno
mov
dec
pop
icebp
cli
xlat
nop
dec
imul
mov
push
mov
into
int3
dec
or
jno
inc
lea
imul
adcl
push
mov
lock
or
popl
push
rcrl
jge
roll
mov
cmp
jae
orb
xchg
daa
ss
xchg
add
push
push
jge
sub
mov
or
mov
clc
add
out
pop
sbb
mov
idivl
mov
dec
flds
xor
leave
push
js
test
dec
movsb
mov
mov
push
push
and
xorb
mov
mov
cmp
push
scas
mov
out
cwtl
inc
dec
scas
jno
andl
lahf
fimuls
push
pop
ds
sbb
mov
fldl
xchg
jge
ljmp
dec
push
adc
out
lea
in
out
fildll
clc
sub
cmc
or
fstps
jecxz
inc
mov
jne
pop
lea
cmpsb
or
mov
lret
testl
xor
lea
mov
mov
mov
xor
add
imul
mov
xor
mov
lea
cmp
jne
mov
jmp
mov
mov
xor
add
mov
xor
lea
add
call
xor
inc
cmp
je
xchg
push
pop
push
pop
inc
xchg
sub
xchg
dec
mov
imul
add
xchg
push
xor
mov
dec
inc
add
jmp
lods
and
xchg
jno
jno
add
cs
jb
xor
cltd
jle
jge
jle
cmc
out
cltd
jmp
loop
enter
addr16
fstl
add
in
inc
cmp
insl
jbe
enter
mov
mov
sub
cmp
js
gs
push
pop
sub
add
jns
pop
pop
adc
inc
mov
mov
ret
pop
xor
rcr
push
mov
mov
test
xchg
daa
push
dec
and
xchg
cmp
testl
cwtl
dec
out
fcoms
cli
pop
inc
mov
sbb
fcoml
adc
inc
insl
int3
mov
sub
and
insl
repnz
ds
cmp
pushf
rorb
adc
ljmp
dec
cli
mov
add
mov
pop
clc
dec
call
sbb
cmp
jge
dec
or
sbb
lods
push
xor
inc
icebp
cmp
xor
xchg
mov
push
leave
out
fprem
mov
in
push
es
dec
xlat
lock
xor
xchg
cmp
jns
xchg
mov
add
add
stos
inc
lahf
xchg
mov
hlt
sub
pop
xchg
ja
dec
shrb
and
mov
mov
xor
rolb
rcll
data16
jecxz
iret
scas
dec
xchg
cmpsb
daa
push
pop
lahf
pop
fisttpll
sub
testb
mov
xchg
les
sbb
scas
popa
xchg
loop
mov
inc
mov
divps
ss
jp
xchg
iret
jnp
mov
mov
mov
mov
mov
mov
scas
adc
sub
pop
jnp
pop
dec
add
popf
xor
out
inc
xchg
shlb
or
icebp
xlat
sbb
mov
into
xor
out
cli
sub
pop
jg
add
outsb
xchg
pop
rcll
loope
sub
repnz
mov
shl
cmpsl
loop
push
push
nop
cld
fstpt
in
testl
repnz
mov
mov
popa
jae
lahf
stos
xchg
mov
repnz
xor
out
dec
mov
lds
std
es
jno
push
call
hlt
mov
push
lds
mov
arpl
aad
lock
pop
push
add
jl
pop
add
lahf
into
jne
adc
test
adc
add
js
sbb
mov
test
sti
xor
dec
and
push
std
leave
mov
imul
xor
adc
dec
ljmp
dec
xchg
js
mov
fcomip
push
frstor
sub
es
push
jg
popa
mov
pop
lsl
int
test
daa
dec
xor
add
pop
mov
pop
pop
pop
leave
ret
push
mov
push
movl
push
movl
mov
movl
movl
push
movzwl
mov
mov
movl
push
mov
not
mov
movl
cmp
movl
jmp
jecxz,pn
add
push
popf
decl
in
aas
movsb
jle
push
jg
jle
add
cmp
pop
mov
pop
add
sbb
push
and
dec
test
call
mov
add
mov
ficoms
aad
and
inc
or
pop
cltd
out
or
xchg
push
lods
push
das
pop
mov
push
aas
mov
mov
dec
jl
bound
outsl
inc
stos
sarl
or
dec
in
sahf
call
movsl
cs
loope
loopne
mov
xchg
sbb
cs
mov
fucomi
int3
push
jecxz
popf
ret
push
adc
push
jmp
aad
ret
insb
inc
jmp
adc
leave
mov
adcl
xchg
data16
jge
popa
addl
jmp
and
cmpsb
orl
sub
push
test
xchg
push
shrl
cmp
jecxz
jg
pop
test
inc
in
jl
mov
outsb
sbb
dec
jmp
pop
mov
adc
pushf
adc
mov
insl
or
je
fisubrl
add
addl
mov
mov
xorl
xor
add
cmp
movl
je
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
call
cmpl
jne
mov
inc
mov
jmp
mov
sub
xor
dec
add
push
adcl
pushl
or
pushl
mov
call
mov
mov
mov
mov
jmp
jmp
xor
fs
mov
sti
adc
and
iret
movsl
jle
push
jg
jle
mov
jg
or
aam
dec
lret
jecxz
cmpsb
cmc
pop
lods
push
cmpsl
pop
jle
out
dec
xor
stos
jmp
pushf
xor
cli
cltd
movsb
stc
xchg
dec
adc
andl
xchg
sbb
out
ss
push
sti
push
xchg
insb
notl
pusha
sbb
fs
arpl
cmp
jno
cwtl
shll
add
lahf
inc
adc
jle
cmpsl
xor
cli
aam
ds
cltd
jne
repz
mov
push
mov
fidivrs
hlt
pop
mov
adc
add
adc
xor
in
jge
stos
rcl
lret
call
daa
loope
pusha
sub
in
test
pop
adc
push
pop
lcall
xor
in
adc
js
pop
int3
jle
cmp
push
and
insl
pop
mov
mov
or
and
lret
ljmp
rolb
rorl
xor
add
cmp
jne
mov
xor
add
jmp
xor
xor
mov
adc
fbld
jle
mov
icebp
je
fisubl
add
xchg
je
mov
cmp
jo
mov
jae
clc
es
push
xchg
rclb
fcmovne
push
nop
movsl
daa
dec
int3
xchg
shl
jbe
xor
mov
daa
pop
pop
fucomp
and
jmp
addl
xchg
out
jmp
mov
xor
cli
fidivs
add
lock
xor
cmpsl
sub
mov
fucomi
cmc
mov
das
scas
das
iret
fs
leave
adc
in
aad
mov
inc
out
jo
mov
leave
adc
movswl
fxtract
xor
je
push
enter
jmp
jl
mov
push
push
ror
mov
mov
ss
fists
xor
pop
and
mov
clc
jmp
adc
rcrl
cmp
aas
je
sub
enter
mov
in
adc
mov
mov
xor
add
mov
pushl
pushl
call
mov
xor
pop
add
pop
leave
ret
push
mov
sub
mov
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
call
jmp
subl
push
andl
mov
inc
mov
cmpl
jne
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
movl
cmpl
je
cmpl
jne
push
pushl
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
dec
mov
xor
mov
add
andl
push
negl
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
call
cmpl
jb
sbb
mov
xor
andl
movl
adcl
movl
subl
add
movl
jmp
cmp
jne
movzbl
mov
jmp
xchg
inc
jae
push
aaa
mov
sub
jle
push
jl
jle
push
cmp
outsb
mov
in
ret
fst
push
inc
add
inc
out
and
rclb
add
cmp
jmp
ljmp
stos
xchg
test
add
fs
mov
notl
push
test
and
mov
imul
dec
loop
jmp
adc
pop
nop
mov
xchg
jle
mov
inc
and
xor
iret
jg
mov
xchg
push
dec
lods
jnp
in
xor
inc
rcr
sbb
hlt
lds
lret
xor
mov
leave
stc
outsl
test
into
adc
out
sub
jp
jae
xor
dec
int3
jbe
fwait
enter
jo
inc
inc
sbb
lods
popa
xlat
xchg
mov
repz
fs
inc
ja
je
mov
cmc
sub
cmp
js
adc
and
mov
jg
leave
push
push
xchg
lock
insb
jae
sbb
jg
and
cltd
push
jae
lahf
mov
lret
bound
sbb
pop
scas
pop
cmp
cmp
inc
pop
shll
in
pop
rcl
out
and
sub
test
dec
filds
subl
sub
cmc
xchg
add
xchg
push
cmp
les
pop
imul
jl
inc
mov
mov
sbbb
lret
pop
inc
sti
stos
pushl
jno
cmpsb
sub
mov
aas
lods
enter
push
pop
repnz
or
cmp
out
xor
push
fistl
and
push
aaa
mov
or
jg
stc
adc
sar
mov
jno
dec
mov
stos
hlt
fwait
add
inc
testb
data16
ljmp
lea
add
in
stos
iret
out
and
push
gs
aas
mov
jle
mov
jg
mov
sbb
stos
cmpsb
insl
mov
mov
movl
mov
movl
mov
movl
mov
movl
mov
movl
jmp
cmp
jne
andl
mov
sub
push
mov
add
push
jmp
es
gs
test
mov
jle
push
pop
dec
test
inc
mov
es
inc
fidivs
loop
inc
je
pop
ret
pop
xor
les
or
push
loopne
mov
sub
or
mov
in
push
xor
xchg
mov
pop
mov
fwait
sbb
mov
jne
test
or
dec
frstor
sarb
leave
jb
jp
or
cmc
xchg
cmc
or
xchg
loop
in
dec
xchg
repz
fxam
cwtl
repz
jae
fsts
jns
jg
dec
dec
mov
fdiv
outsb
mov
push
iret
imul
leave
aas
push
or
cmp
jp
mov
lea
hlt
jge
fbstp
fmuls
js
icebp
jmp
cmc
pop
mov
fwait
les
loop
sbb
cs
sti
pop
jne
pop
xchg
stc
mov
callw
popa
jge
enter
gs
pop
aas
cmp
int3
sbb
and
mov
fwait
sub
or
xor
je
mov
ficompl
mov
ljmp
mov
mov
aaa
popf
orb
pushf
mov
int3
loopne
cmc
push
pop
cwtl
ret
inc
fmull
movsb
in
fimull
mov
mov
pusha
fsub
push
inc
xor
das
orb
add
cmp
arpl
call
mov
shrl
xchg
cs
pop
or
mov
dec
xchg
xlat
mov
mov
and
or
and
mov
push
js
push
in
test
pop
push
cmp
std
jp
cmp
push
add
mov
xor
in
sbb
jne
scas
and
xchg
lds
sbb
and
dec
cli
sbb
cmc
mov
dec
jmp
mov
xor
mov
scas
xor
dec
adc
push
in
popf
pop
incl
cmpl
jb
jmp
jmp
lds
imul
scas
jle
push
jl
jle
dec
popa
into
xchg
test
push
int3
nop
xchg
jb
cld
mov
outsl
andb
aas
xorl
fs
aad
shll
popa
cmp
sti
clc
mov
lahf
adc
aam
inc
inc
or
cltd
xchg
sub
loope
out
movsb
js
in
mov
cmp
aad
xor
jo
xchg
jbe
and
push
push
jecxz
xorl
lret
roll
and
xchg
daa
sub
xchg
pop
pop
out
imul
psllq
add
leave
jle
cld
fldl
out
pop
ja
lock
repz
insl
push
test
mov
add
inc
mov
add
imull
out
push
out
movsb
mov
xchg
pushf
mov
sub
mov
mov
ss
orl
fimull
popw
mov
inc
add
rolb
mov
in
push
sub
xchg
shlb
popa
xlat
ljmp
es
jns
cmpsb
mov
lret
adc
xor
lods
xchg
sub
cs
fwait
sbb
jmp
mov
jge
and
cmp
jle
outsl
pop
std
addr16
jl,pn
pushf
cmp
test
xor
xchg
mov
cmp
push
mov
lock
scas
mov
cwtl
stos
sub
mov
sti
mov
xor
in
push
dec
sbb
mov
pop
scas
or
mov
adc
je
xchg
sub
push
pop
mov
cmp
sbb
outsb
lods
push
cs
out
lock
daa
shl
pop
fsub
out
lock
insl
ret
mov
fwait
jp
push
enter
xor
leave
aaa
ret
stos
ljmp
outsl
dec
pop
int
mov
adc
outsl
cwtl
pop
mov
ja
jp
mov
mov
inc
pop
scas
lea
inc
fldenv
out
aad
mov
in
mov
add
enter
std
mov
add
jne
movl
mov
mov
mov
mov
mov
xor
add
mov
lea
mov
mov
xor
add
mov
lea
push
mov
xor
add
push
mov
push
pushl
call
jmp
cmp
jne
mov
xor
add
mov
mov
mov
mov
mov
mov
push
pop
sub
add
mov
mov
xor
lea
cmp
jne
mov
pop
xor
jmp
push
mov
jno
scas
out
lds
lahf
lods
jle
push
jl
jle
adc
cmp
enter
cs
js
cltd
loop
sbb
xor
mov
bound
popa
popf
jae
or
lret
ds
fsubs
pop
dec
bound
mov
cmc
jbe
and
xor
fs
inc
inc
cltd
out
jmp
adc
enter
jge
nop
xor
sbb
leave
scas
sub
push
sbb
pop
jge
stos
xchg
push
sbb
inc
rcrb
jg
repz
jge
scas
mov
arpl
adc
mov
and
mov
lods
push
bound
into
fs
fiaddl
fcmovb
jns
sbb
mov
cmp
sbb
hlt
push
jl
and
cmp
sbb
int
push
pop
jns
faddl
mov
sub
shll
shlb
filds
negl
lret
adc
dec
fldt
or
es
sbb
cmpsl
adc
inc
add
or
in
hlt
fldl
scas
adc
jb
retw
enter
sub
push
shrl
and
mov
and
and
in
jo
xor
lods
dec
jne
ljmp
out
sub
jnp
pop
xchg
outsl
dec
mov
test
daa
fnstsw
bound
cmp
jp
pop
in
bound
adc
or
mov
jae
and
cmp
add
sub
imul
shlb
xchg
jecxz
hlt
xlat
xchg
inc
mov
xor
out
and
pop
insl
addr16
fstps
or
sbb
inc
insl
scas
adc
das
cmp
jae
jmp
mov
inc
jmp
dec
pusha
int3
jecxz
lock
adc
in
cmp
dec
or
fcompl
pop
ret
cmp
lret
cmp
pop
push
pop
leave
ret
push
mov
push
movl
push
xor
movl
jmp
lcall
push
inc
push
dec
movsb
ds
test
scas
stos
jle
lods
jl
jle
pop
jne
gs
rolb
jg
inc
push
leave
movsb
adc
rcrl
inc
mov
test
xchg
bound
adc
xchg
inc
rcll
xchg
adc
pop
in
loopne
stc
pop
cmp
jbe
shlb
xor
xchg
test
dec
and
sub
push
dec
aaa
dec
pop
mov
xchg
rorl
pop
dec
sbb
out
inc
pop
inc
into
das
add
fisubl
xchg
cmpsl
xchg
sahf
jae
fidivrs
mov
addr16
jns
sbb
outsb
mov
lods
rcrb
sub
out
negl
xchg
sbb
test
or
jl
pop
xlat
daa
fadds
inc
dec
leave
or
pop
jns
orl
sub
stc
lcall
ds
fwait
mov
dec
dec
jge
pop
or
or
les
add
mov
inc
pushf
rcrl
scas
out
movb
adc
and
dec
or
ja
pop
cld
mov
sub
xor
fildll
movsl
xchg
inc
sub
cmc
loop
addl
xchg
sbb
add
in
xchg
mov
lds
pop
lcall
lahf
repnz
mov
push
es
nop
xor
mov
xor
fdivrp
cltd
and
fiadds
ljmp
ret
push
pop
in
adc
dec
dec
jle
mov
loopne
ss
sub
mov
xlat
hlt
sub
insl
lahf
lods
sbb
push
enter
loopne
test
subl
xchg
jnp
movsl
mov
sbb
in
inc
or
sbb
fsubl
aam
ss
insb
loopne
out
sbb
or
jo
or
ret
inc
xor
sbb
mov
stos
adc
dec
xchg
notl
jnp
push
subl
adc
pop
pop
in
fidivrl
add
jle,pt
adc
xchg
push
sbb
or
cld
cmc
dec
je
fdiv
adc
mov
out
cmp
sub
cwtl
enter
mov
mov
push
push
pop
int3
das
imul
ficoms
imul
test
push
fisubl
aad
jge
pop
xor
out
hlt
push
lahf
adc
insl
xlat
scas
mov
adc
es
sbb
movsb
rol
mov
mov
or
xor
jae
rep
dec
sub
es
ret
lds
push
int3
add
rcl
arpl
fnstcw
xor
test
inc
add
add
mov
addl
jmp
insb
xchg
xchg
in
or
sarl
out
mov
jle
jl
jle
test
shlb
jle
das
test
fidivrs
fldl
add
pop
nop
test
fmull
scas
xchg
cmpsb
adc
leave
not
cmp
push
mov
jle
mov
xlat
divb
dec
sbb
ror
out
sub
mov
aas
loope
cmp
imul
cld
push
and
fmuls
adc
into
push
mov
mov
and
dec
negl
mov
ret
mov
jne
les
es
and
inc
push
and
dec
pop
jmp
push
or
add
and
lcall
fwait
jbe
rcl
adc
jge
add
fcomi
aas
lret
xchg
cmpsb
add
push
out
xor
fists
movsl
mov
dec
cmp
int
lds
jbe
mov
mov
ds
sub
neg
ret
jp
es
mov
mov
mov
sbb
lock
into
mov
rorl
ljmp
pop
sub
push
mov
xchg
mov
lock
movsb
dec
sti
fstps
and
fcompl
js
xor
ror
lock
jno
out
pop
test
clc
jo
fwait
cld
aam
jge
neg
test
xor
icebp
jae
jno
dec
inc
xlat
cwtl
push
arpl
lods
xor
pop
cltd
sbb
lret
fwait
rcrl
inc
bound
jno
bound
inc
dec
sti
leave
mov
outsb
push
pop
fidivs
pusha
mov
icebp
ljmp
ja
data16
test
stos
inc
imul
jge
jbe
fldcw
inc
mulb
pusha
cs
das
test
jno
sub
pushf
jne
lock
inc
das
push
or
push
mov
pushf
xor
lods
adc
mov
cmpsl
add
cwtl
imul
push
scas
insb
push
lods
neg
sub
aad
aad
mov
das
hlt
jno
subl
add
xchg
cli
mov
out
mov
pop
sbb
lds
xchg
mov
inc
popl
sbb
sub
jmp
arpl
cwtl
loop
adc
cli
adc
enter
push
mov
mull
ret
mov
fwait
jmp
and
xchg
pushf
out
mov
je
and
inc
xor
rcl
and
mov
imul
dec
inc
mov
sub
rcl
in
mov
pop
pop
sbb
push
adc
mov
movzbl
adc
mov
xor
xor
xor
mov
jmp
mov
jno
jb
inc
pop
outsl
aad
mov
or
jle
adc
xchg
lcall
fdivrs
push
fcomp
fs
sbb
pop
jno
roll
les
xchg
jbe
push
mov
mov
int3
fistpll
or
or
adc
sbb
lret
mov
pusha
cmpb
cmp
out
frstor
dec
popa
jp
cmp
popf
test
test
sbb
xor
jne
or
xchg
rclb
enter
filds
enter
mov
and
or
pop
add
cmp
aas
ds
push
rcr
pusha
cmp
cmpsl
pop
sbb
mov
int
xchg
movsb
out
das
cmp
enter
lock
enter
into
or
and
inc
xchg
ljmp
sub
cmp
mov
popa
rorl
mov
mov
jg
jg
mov
das
jae
pinsrw
dec
popl
dec
loopne
negl
cs
daa
out
and
and
cmp
sarb
dec
sarl
jle
data16
aas
mov
mov
scas
lcall
jg
mov
xor
fmull
or
and
push
jnp
mov
ja
ljmp
add
mov
sbb
or
sbb
jge
js
sbb
fs
or
aaa
out
dec
shl
fstpt
push
or
inc
das
pop
sbb
loopne
sub
add
sbb
pop
xor
insb
cmp
inc
test
aad
pushf
cmp
lods
stos
adcb
bound
lods
adc
imul
movsb
in
jne
lea
popf
sahf
pop
jb
gs
cltd
push
fs
xchg
sahf
dec
cmp
dec
imul
lock
jp
pop
pop
xchg
mov
ret
push
inc
cmpsl
sbbb
push
xor
push
int
add
lods
sub
or
sub
jnp
xchg
out
jno
inc
aaa
dec
hlt
stc
jge
dec
out
inc
outsl
sbb
das
mov
push
xor
cmp
cmp
xor
push
push
xchg
cli
pop
imul
or
mov
fstpt
push
repz
xchg
add
fisttpl
mov
sub
andb
loopne
or
sub
xor
and
mov
push
push
ja
adc
xchg
adc
int
dec
add
xchg
cmp
mov
dec
std
xchg
lret
push
pop
aas
int3
data16
push
popf
add
add
jmp
lock
arpl
sub
scas
ret
shl
iret
xchg
mov
jl
jle
out
bound
mov
jo
outsb
or
test
add
roll
inc
xlat
rcl
or
arpl
dec
inc
shl
in
cmp
fs
sub
mov
stc
or
pop
cmp
dec
test
jnp
repz
xchg
jle
cmp
mov
addr16
sbb
sbb
pop
scas
dec
xor
and
cmp
repnz
push
out
sbb
icebp
mov
and
xlat
push
arpl
call
mov
xchg
cli
mov
xchg
icebp
mov
xorb
aam
add
push
mov
cmc
mov
shlb
cmp
mov
das
stc
mov
push
adc
in
loope
cmp
loope
stos
cmpsb
xchg
loopne
mov
jle
pusha
lods
into
cs
clc
mov
sbb
std
pop
cmp
xchg
or
and
clc
mov
jns
adc
xor
lea
pop
fcompl
out
movsb
adc
xor
dec
xor
arpl
mov
pop
adc
cmp
mov
loopne
jmp
xlat
add
in
mov
push
mov
mov
in
xor
dec
test
xchg
cmp
repz
loope
inc
sbb
add
adc
mov
scas
outsb
xchg
cwtl
push
push
ficoms
out
inc
jmp
dec
pop
test
dec
jmp
push
sub
sub
cmp
sub
lret
xchg
scas
xchg
hlt
xor
inc
jmp
jle
mov
aad
mov
inc
sub
scas
inc
lahf
dec
std
dec
pushf
sti
jno
sub
mov
mov
cwtl
je
mov
fidivrl
andb
push
jmp
mov
adc
lahf
fptan
dec
das
jae
sub
stos
cmp
push
cmp
cmp
in
stc
mov
dec
and
or
nop
jo
jae
mov
sbb
dec
lcall
push
insb
push
mov
jecxz
inc
outsl
mov
push
pop
fucomip
or
and
btc
int3
cld
test
imul
mov
imul
pushf
sub
cmpsb
jo
mov
cld
push
pop
shll
jo
rorl
or
sbb
jecxz
adc
xor
xor
addr16
mov
add
out
jb
mov
and
xchg
test
fld
sbbb
inc
ret
imul
mov
movl
cmp
jne
mov
sbbl
jmp
inc
sbb
test
add
mov
jle
jl
jle
jne
adc
jle
insl
xchg
call
mov
push
adcl
movsb
mov
shll
and
mov
mov
xchg
xor
xchg
sub
push
out
pop
inc
xchg
jmp
mov
push
testl
dec
aas
mov
sbb
or
xor
xorb
jl
dec
xor
xchg
xchg
lods
pop
enter
pop
aad
jp
mov
imul
mov
imul
stc
add
dec
xlat
cmpsb
inc
je,pt
lds
xchg
repnz
lods
je
push
mov
out
les
pop
push
mov
out
in
movsl
and
ficomps
mov
sbb
mov
insl
test
push
pop
popa
pop
idiv
in
or
js
or
and
sarb
jbe
and
movsb
jg
or
je
imul
add
pop
jae
adc
mov
aaa
mov
jno
jle
mov
mov
push
divl
push
cli
mov
outsl
and
sti
pop
push
xor
mov
jns
ja
xor
inc
jge
or
into
insb
push
fidivrs
jl
jp
and
pop
je
cld
push
push
pusha
mov
ss
stos
push
mov
fisubs
movsb
les
push
fs
adc
in
ficomps
adc
das
push
inc
adc
jg
ljmp
loop
fwait
test
cld
adc
mov
shrl
fwait
daa
lahf
int
xchg
mov
fstps
xchg
ja
jmp
push
mov
and
push
dec
js
sbb
jne
test
xor
repnz
mov
inc
inc
push
pop
sub
dec
out
cmp
mov
repnz
xchg
int3
scas
push
dec
xor
or
lea
stc
ja
mov
sbb
mul
dec
testb
loopne
lock
jnp
mov
cmp
pop
xchg
add
stos
iret
or
pop
sub
ret
hlt
push
dec
inc
inc
outsb
gs
test
add
stc
mov
push
xlat
jge
mov
rcr
cli
shrb
push
push
xor
jns
adc
mov
pushf
dec
sub
ret
mov
jns
add
xor
inc
xchg
push
xchg
hlt
test
in
out
jne
movl
xor
xor
add
subl
add
imul
jmp
movl
cmpl
je
cmpl
jne
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
mov
mov
mov
mov
xor
xor
add
add
imul
mov
cmp
mov
je
xor
add
mov
imul
add
mov
mov
pop
leave
ret
push
mov
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
call
cmpl
jne
mov
inc
mov
jmp
xor
push
addl
mov
or
mov
jmp
jne
dec
cs
xchg
or
and
jl
jle
call
or
enter
inc
xlat
aad
or
out
inc
sub
fildll
adc
cmp
sbb
inc
or
mov
mov
hlt
lea
mov
mov
mov
mov
pop
stc
mov
dec
cmpsl
dec
sbb
into
xchg
pop
jp
sub
mov
dec
push
sbb
mov
mov
push
cli
clc
inc
adc
push
cmpsl
jmp
jne
mov
into
call
dec
xor
sub
sbb
iret
fs
mov
aas
les
rolb
and
push
cld
pusha
data16
cmp
stc
out
pop
xchg
mov
je
lods
sbb
inc
xchg
add
adc
mov
push
mov
mov
push
lcall
mov
push
lret
cltd
push
push
push
scas
outsl
lods
fwait
inc
fidivl
push
into
mov
pop
pop
adc
int3
test
das
jbe
add
orb
mov
jne
dec
idivl
mov
jae
imul
arpl
add
push
cmp
push
lods
mov
sbb
jo
adcb
out
jo
lods
adcl
mov
xchg
fldt
icebp
jg
pop
xor
enter
sbb
lahf
stos
and
ljmp
cli
jecxz
xchg
push
ss
call
add
loop
or
icebp
lods
not
shrl
jb
add
jnp
ja
mov
mov
mov
mov
clc
xchg
dec
sbb
xchg
addb
push
and
jmp
out
xchg
mov
xchg
outsb
lahf
xor
pop
mov
sahf
cli
lahf
stc
jecxz
jno
add
repz
xor
xchg
cmp
mov
or
sbb
out
add
call
xchg
xchg
fcoms
and
sahf
cmp
push
xchg
xor
pop
loopne
pop
rcr
and
or
xchg
push
sbbl
jmp
shlb
pop
mull
enter
in
mov
pop
sarb
mov
idiv
or
fists
jbe
stos
movl
andl
mov
inc
mov
cmpl
jne
pushl
call
cmpl
jb
xor
or
sbb
mov
mov
movl
cmpl
je
cmpl
jne
push
pushl
pushl
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
movl
push
xor
mov
sbb
xor
mov
adcl
push
mov
add
cmp
je
mov
mov
xor
mov
sub
add
xor
add
cmp
ja
push
jmp
mov
mov
mov
xor
add
mov
imul
mov
xor
add
mov
mov
mov
xor
lea
mov
xor
mov
sub
add
cmp
jbe
pop
jmp
out
adc
adc
ja
orl
icebp
cmc
xchg
mov
xchg
mov
jle
dec
xor
les
negb
nop
test
call
ret
je
movsb
push
adcl
push
test
xchg
stc
pop
fcmovu
daa
fmull
out
mov
fidivrl
shll
inc
sbb
xchg
add
mov
outsl
ret
xor
inc
ljmp
mov
adc
jl
pop
xchg
sbb
cmp
sbb
xor
inc
out
sbb
out
and
jge
jl
rclb
setb
push
lea
in
push
rol
sub
ljmp
in
cmpsl
push
mov
aam
adc
xor
push
or
xorl
insb
rorb
mov
daa
xchg
lds
cmp
fcompp
xchg
loop
xchg
aas
fadds
mov
hlt
mov
stc
outsl
aam
ret
jae
data16
push
leave
pop
dec
pushl
lahf
inc
stc
jecxz
push
imulb
scas
sti
xchg
mov
test
dec
cmp
lcall
inc
sub
or
mov
xchg
adc
adc
dec
jl
or
rolb
pop
pop
xchg
xchg
cwtl
sub
int
mov
mov
mov
cmp
enter
addr16
out
enter
test
sub
popa
nop
movsl
dec
dec
mov
adc
sahf
loope
cwtl
xchg
iret
shrl
xchg
add
sbb
sbb
push
fbld
jp
repnz
insb
mov
cwtl
mov
sbb
and
rorl
push
inc
jl
cmp
mull
sub
jmp
in
rcrb
add
fs
sbb
cwtl
mov
popf
xor
inc
or
inc
aad
ljmp
loop
inc
xchg
fwait
outsb
xchg
outsl
mov
jae
imull
int3
cld
js
mov
in
mov
mov
mov
lods
adc
ljmp
sub
push
lea
nop
js
dec
push
scas
cmp
mov
push
xor
daa
sti
fimull
lea
aad
scas
mov
insl
fincstp
fdivr
cs
in
addr16
cwtl
fildll
or
cmc
daa
dec
cmp
fs
sbbb
xor
leave
ret
push
mov
mov
xor
mov
div
mov
and
or
mov
pop
ret
push
mov
sub
xor
mov
movzwl
sbb
mov
mov
xor
andl
mov
add
andl
movzwl
xorl
mov
movb
adc
lea
mov
adc
mov
mov
xor
sub
adcl
mov
xor
xor
sbb
jmp
add
mov
cmpsl
push
pop
mov
icebp
jg
jle
mov
mov
call
mov
sbbb
shrb
and
push
pop
mov
cmp
mov
scas
mov
sub
fwait
mov
scas
loop
adc
cmp
inc
dec
movsl
or
mov
les
imul
imul
jge
lahf
inc
xor
daa
filds
cmp
addl
ds
xor
stc
std
in
cmc
popf
pop
sbbb
shll
and
ja
adc
xchg
cs
jge
inc
dec
dec
push
pop
cs
jne
adc
mov
and
and
cs
repz
popf
jb
movsl
mov
pop
lds
sbb
mov
popa
sahf
testb
in
in
xor
test
lcall
fsub
aas
aas
mov
stos
sbb
sub
adc
test
pop
lods
mov
push
adc
dec
sbb
mov
cli
stos
lods
mov
jl
mov
cmpsb
out
lds
dec
adc
inc
inc
inc
lret
cmp
aaa
sub
add
fistpll
or
dec
sbb
aam
push
loopne
cmp
fisttpl
pop
dec
push
rclb
je
inc
insl
cmp
out
lds
jbe
lock
mov
filds
inc
clc
xor
movl
mov
orl
mov
movl
push
xor
or
mov
add
jmp
mov
mov
movl
inc
movl
cmp
movl
jb
mov
add
mov
mov
movl
cmpl
je
cmpl
jne
pushl
pushl
pushl
pushl
push
call
cmpl
jne
xor
xor
dec
mov
mov
dec
mov
jmp
mov
addl
xor
sbbl
add
movl
cmp
jmp
adc
in
in
jno
aad
dec
add
hlt
rorb
jle
or
ret
inc
push
js
xor
cli
iret
aas
xor
aas
pop
jecxz
loopne
inc
xor
push
push
in
mov
mov
cmp
rorb
popf
aad
mov
out
push
lds
jmp
mov
gs
pop
add
inc
and
mov
imul
sub
lcall
sarb
sub
lret
fisttpl
mov
pusha
adc
incb
sub
mov
xor
popa
adc
pop
aam
call
scas
out
jmp
push
push
mov
and
out
mov
rclb
lahf
gs
call
sbb
dec
adc
add
mov
pop
sbb
repz
sti
mov
add
cmp
sub
sbb
mov
out
push
sub
xchg
pop
bound
xchg
xor
cmp
xor
fcmovnb
cwtl
pop
jo
dec
sarb
in
sbb
addb
adc
mov
nop
xchg
pop
mov
sub
or
sbb
ss
popa
fs
jp
test
ret
mov
xor
adc
data16
inc
int3
aas
inc
mov
pop
mov
mov
mov
push
mov
cld
pop
sub
mov
jl
ljmp
jl
mov
repz
je
xor
add
sub
push
sub
push
movl
cmpl
je
cmpl
jne
push
pushl
pushl
push
call
cmpl
jne
mov
dec
mov
xor
or
dec
mov
jmp
mov
mov
xor
jmp
mov
ja
jne
mov
insl
push
push
push
mov
inc
jle
icebp
jg
jle
cld
inc
repz
adc
insb
jg
repnz
jmp
or
lods
clc
inc
cli
mov
fs
leave
leave
dec
pop
pop
sti
add
add
dec
arpl
inc
nop
dec
sahf
aaa
inc
push
mov
and
aam
orb
sar
adc
dec
fstpt
hlt
rcll
sar
cmp
xchg
mov
ror
sub
pop
pusha
stos
sahf
dec
out
das
dec
mov
cwtl
or
rcll
push
sbb
loope
xlat
jecxz
into
lret
lds
add
xor
add
outsl
mov
cmp
ja
push
push
scas
push
dec
pusha
imul
and
xor
jnp
jmp
rcr
ja
in
pop
pop
enter
inc
mov
scas
mov
clc
imull
es
pushf
sub
inc
cmp
clc
lea
js
lahf
adc
xchg
push
inc
jbe
push
pop
inc
dec
ret
xchg
dec
je
push
dec
loopne
lods
push
pop
push
jae
push
jb
bound
dec
popf
or
xlat
sub
ficoms
jo
test
sub
outsl
inc
xor
insl
insb
xor
mov
sub
dec
dec
xor
ja
and
lods
out
pop
negl
int3
pop
hlt
stos
pop
movsl
inc
mov
jo
outsl
add
outsb
insb
shll
push
xor
cmpl
add
movzwl
mov
mov
movzwl
xor
add
mov
mov
mov
inc
cmp
jne
pop
pop
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
mov
cmp
je
mov
jmp
mov
adc
adc
imul
scas
es
jg
jle
in
stos
pop
push
stos
repnz
out
fcmovbe
inc
lock
and
xchg
mov
add
icebp
push
pop
and
das
imul
fidivl
mov
call
inc
adc
fisubrl
in
lea
mov
pop
adc
pop
inc
dec
stos
les
jae
sbb
test
outsl
imul
stos
jae
js
jl
jl
dec
cmpsl
sub
in
je
loopne
push
push
faddl
sub
fdivp
jl
push
fidivs
popa
test
sub
mov
dec
or
in
movsb
ret
add
dec
aaa
sub
dec
inc
mov
cmpsb
scas
or
cmpsb
and
cwtl
mov
sbb
pop
les
jo
lret
mov
sbb
lds
das
and
arpl
push
outsb
aam
cmpl
ss
jp
push
test
sbbb
jmp
dec
dec
aam
xor
mov
mov
mov
out
shlb
or
xchg
or
repnz
test
jmp
cli
xchg
cmc
mov
mov
lcall
cmpsl
xchg
movsb
or
out
mov
xchg
scas
jp
clc
ret
inc
pop
adc
mov
rclb
and
aas
lret
enter
add
cmp
jne
mov
mov
movsbl
xor
add
cmp
je
movl
lea
mov
mov
addl
mov
mov
xor
lea
mov
jmp
sub
sub
test
pop
cld
add
mov
inc
jle
icebp
jg
jle
aad
inc
add
xor
xchg
mov
test
stos
jbe
test
mov
pop
in
mov
adc
ret
int
lods
movsb
jb
mov
xchg
jle
and
and
arpl
movswl
nop
adc
push
ljmp
mov
push
stos
inc
mov
mov
push
pop
push
add
outsl
mov
pushf
push
enter
or
fistpl
aaa
stos
rolb
cld
lahf
sbb
adc
jg
sub
mov
mov
js
cmpsl
push
rcll
stos
pand
jp
dec
adc
cmp
mov
test
lret
push
into
jmp
add
push
loop
dec
cmp
hlt
jl
lcall
int3
cmp
lret
add
jae
fsubs
jge
arpl
fnstcw
leave
add
pop
fcmovnb
mov
fs
scas
mov
jb
pop
ja
imul
aad
sbb
jno
pop
cli
shl
ret
test
arpl
out
sbb
jne
sbb
je
subl
fisttpll
pop
lea
cmp
pop
add
das
mov
mov
pop
lock
adc
lret
xlat
adc
jns
mov
or
push
or
scas
add
stc
xchg
test
iret
mov
incl
jmp
mov
xor
jmp
ljmp
jo
fidivs
or
jae
addb
icebp
jg
jle
xlat
jae
aas
into
jmp
push
pusha
insb
add
add
cmpsb
adc
imul
lea
lret
mov
stos
mov
idiv
push
jnp
test
in
mov
out
les
dec
out
xlat
inc
xchg
mov
push
int3
mov
jl
mov
push
fsubrs
fisttpl
cwtl
jb
ss
or
xor
xchg
add
push
test
mov
out
test
roll
sub
loopne
pop
xchg
pop
outsl
pop
into
cmp
push
mov
outsb
lods
das
dec
ljmp
inc
movsl
repz
or
jecxz
js
in
adc
loop
leave
mov
imull
jp
fistpl
addr16
cld
cld
leave
ret
push
gs
pop
xchg
in
push
inc
lea
xor
sti
hlt
repz
mov
mov
mov
push
sub
sbb
xchg
in
int
and
xor
es
push
jecxz
push
xchg
jno
pop
jb
rcll
out
sbbl
std
jne
xchg
dec
jb
add
lcall
dec
pop
lahf
inc
mov
ds
mulb
cmpsb
jg
imul
fwait
jb
fcmovnb
pop
sbb
mov
push
mov
loope
or
enter
ljmp
mov
add
mov
pop
leave
ret
push
mov
push
neg
movl
mov
adcl
mov
sbbl
add
xor
cmp
movl
jne
and
mov
xorl
mov
add
jmp
jo
sbbl
roll
push
sbb
add
jle
jl
jle
mov
adc
mov
pop
and
pop
in
mov
mov
cmp
inc
lcall
call
pop
push
into
je
ljmp
das
scas
push
lret
fbstp
cwtl
addl
out
adc
push
add
in
subb
push
xchg
je
stc
je
outsl
loope
dec
cmpsb
push
outsb
dec
and
adcl
xchg
inc
push
pop
pop
and
out
jne
cmp
jns
sub
mov
add
cld
add
aaa
pusha
push
dec
iret
loope
loop
scas
xchg
call
inc
test
fld
ja
and
jmp
roll
and
sbb
xor
pop
imul
cmpsb
lea
xor
mov
fcompl
iret
and
jl
pop
cmp
in
daa
mov
sub
adc
push
push
adc
cmp
icebp
in
lock
in
xchg
stos
das
sbb
outsb
clc
and
bound
adc
xchg
stos
data16
xchg
addr16
cmpsb
xchg
cmp
call
or
out
insl
mov
stos
or
mov
push
mov
ret
out
lds
fistpl
mov
cld
popf
sbb
lods
mov
mov
mov
enter
jg
repnz
sbb
mov
push
or
add
adc
mov
pushf
xor
fidivl
fnsave
std
mov
fldl
push
notb
inc
mov
inc
push
bound
adcl
pop
pop
sub
arpl
imul
repz
inc
popa
sti
inc
lcall
adc
and
addb
aad
popf
stos
and
ficoms
inc
repz
add
cld
sub
sahf
lods
jne
mov
push
pop
das
jbe
addr16
add
repnz
dec
pop
jmp
push
loopne
push
add
or
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
call
jmp
mov
jmp
pop
pop
dec
pop
dec
xor
outsl
aam
dec
inc
dec
and
jl
jle
cs
rcll
sub
test
lock
xchg
xchg
xlat
pop
xchg
test
dec
mov
dec
movsl
clc
cmc
jle
dec
sub
xor
mov
jl
in
rol
shrl
out
int3
jnp
out
lds
enter
negl
jns
leave
sub
adc
cld
movsb
pop
mov
insb
and
cmp
into
packsswb
mov
dec
int3
cmc
push
repnz
adcl
mov
test
adc
in
lea
mov
in
xorl
aad
dec
test
pop
cmp
or
jl
or
mov
cmp
popa
inc
lahf
std
imul
pushf
sub
adc
xlat
test
pop
dec
fadd
sti
test
int
insl
test
pop
cmpsl
sahf
adc
add
cmp
lret
or
lods
xor
lods
and
xor
das
lock
mov
and
lret
cmp
jle
out
pop
cmpsb
mov
repz
mov
outsb
test
jne
inc
pop
mov
addb
insl
mov
fldcw
das
pop
lahf
mov
lods
jns
mull
imul
lret
js
pop
sti
cltd
mov
push
xor
fdivs
sahf
aaa
and
adc
sbb
mov
lret
and
push
cli
lods
out
movsl
out
jge
dec
xchg
scas
or
pop
inc
je
pop
cmpsl
fldcw
cld
dec
ret
jnp
mov
fucomip
lock
insb
cwtl
lcall
pushf
mov
pop
fcoms
push
sub
sbb
insb
insl
xchg
out
cmc
icebp
xchg
stc
jl
mov
loop
repz
fimuls
mov
je
shlb
hlt
jl
sbb
aam
pusha
lret
fdivrp
and
jb
gs
pop
xchg
test
int3
mov
lea
add
mov
sub
loopne
xor
push
mov
mov
add
jmp
mov
imul
pop
pop
lcall
jle
insb
out
cmpsb
jle
xor
push
xor
fisubs
sbb
and
pop
subl
testb
dec
jp
repz
daa
and
and
cmp
fdivr
xlat
sti
adc
xor
pop
sub
sub
das
insl
js
cmp
repnz
jge
pop
addb
outsl
lock
pusha
sub
ret
iret
pop
cmp
loopne
mov
dec
or
pop
or
setp
inc
xchg
pop
and
inc
leave
jg
dec
add
push
mov
xchg
adc
ds
enter
or
push
mov
inc
pusha
mov
mov
xor
clc
loope
fidivrl
jo
xchg
sbb
outsl
fidivrs
fsubp
sub
into
xchg
adc
lds
and
push
mov
jnp
push
sub
cmp
or
sahf
fsubrp
out
xchg
adc
test
adc
into
xor
shll
xchg
mov
repnz
inc
fwait
jge
lret
iret
push
je
jl
xchg
push
movsb
ljmp
es
lods
pop
negl
mov
test
mov
sub
fs
aad
out
frstor
popa
pop
scas
jp
rorl
fs
loopne
lock
mov
sub
outsb
dec
inc
lret
cli
cmp
and
and
into
xchg
push
sti
xchg
jne
add
fsubs
pop
xor
push
mov
push
shl
jnp
push
int3
xchg
adc
mov
inc
mov
lods
pop
cmp
mov
xchg
xor
outsl
fwait
xchg
insb
test
push
pop
cmp
movsl
scas
push
lahf
xchg
or
sti
test
mov
inc
scas
sbb
push
pop
mov
aam
jb
flds
cmpsl
mov
mov
pop
mov
call
outsb
mov
mov
push
hlt
mov
fsts
in
inc
dec
loop
mov
mov
arpl
and
xchg
dec
cmp
pop
je
mov
jmp
mov
xor
add
jmp
mov
xor
add
leave
ret
subb
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
add
and
add
sub
add
add
pop
sub
add
add
js
add
mov
add
sahf
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
add
inc
sub
add
add
sub
add
add
test
add
mov
add
sahf
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
add
cmp
add
add
pop
sub
add
add
jl
add
mov
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
es
add
dec
sub
add
push
add
je
add
test
add
sahf
sub
add
mov
sub
add
out
sub
add
or
add
push
add
xor
add
dec
add
pop
add
je
add
xchg
add
lcall
add
add
fisubrl
add
out
add
cli
add
push
das
add
push
das
add
cs
add
inc
das
add
pop
das
add
outsb
das
add
jle
add
lcall
add
das
add
aam
add
in
add
cli
das
add
or
add
push
xor
add
xor
add
xor
add
add
add
jb
add
jle
add
mov
add
mov
xor
add
add
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
dec
xor
add
add
xor
add
add
xchg
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
xor
add
add
push
xor
add
add
js
add
mov
add
lcall
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
cmp
add
push
xor
add
add
add
cwtl
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
dec
xor
add
add
add
add
je
add
xorb
xchg
xor
add
add
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
push
xor
add
sub
add
ss
add
dec
xor
add
pop
xor
add
je
add
jle
add
mov
add
mov
xor
add
mov
xor
add
fidivs
add
clc
xor
add
or
add
push
add
and
add
sub
add
xor
add
cmp
add
inc
add
push
add
pop
add
fs
outsb
add
xorb
add
add
add
add
fdivs
add
hlt
add
or
add
and
add
add
add
inc
aaa
add
pop
aaa
add
jo
add
jle
add
mov
add
cwtl
aaa
add
movsb
aaa
add
mov
add
les
add
into
aaa
add
fidivl
add
repnz
add
push
cmp
add
cmp
add
cmp
add
add
dec
cmp
add
add
add
add
stos
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
add
sub
add
cmp
add
inc
cmp
add
add
cmp
add
add
add
xchg
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
add
add
add
ljmp
add
add
add
add
add
cmp
add
add
ljmp
add
add
add
add
add
add
add
add
jo
add
je
add
js
add
je
add
mov
add
add
push
aaa
inc
inc
js
fs
data16
jo
aas
inc
outsb
gs
je
push
je
je
inc
inc
pop
inc
push
inc
dec
push
inc
inc
dec
dec
push
inc
inc
cmp
add
pop
and
add
add
add
enter
add
add
adc
add
pop
xor
add
daa
add
mov
and
add
daa
add
pushf
add
pushf
and
add
add
add
add
add
aaa
add
push
and
add
sub
add
cmp
add
add
add
cmp
add
and
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
add
and
add
sub
add
add
pop
sub
add
add
js
add
mov
add
sahf
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
add
inc
sub
add
add
sub
add
add
test
add
mov
add
sahf
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
add
cmp
add
add
pop
sub
add
add
jl
add
mov
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
es
add
dec
sub
add
push
add
je
add
test
add
sahf
sub
add
mov
sub
add
out
sub
add
or
add
push
add
xor
add
dec
add
pop
add
je
add
xchg
add
lcall
add
add
fisubrl
add
out
add
cli
add
push
das
add
push
das
add
cs
add
inc
das
add
pop
das
add
outsb
das
add
jle
add
lcall
add
das
add
aam
add
in
add
cli
das
add
or
add
push
xor
add
xor
add
xor
add
add
add
jb
add
jle
add
mov
add
mov
xor
add
add
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
dec
xor
add
add
xor
add
add
xchg
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
xor
add
add
push
xor
add
add
js
add
mov
add
lcall
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
cmp
add
push
xor
add
add
add
cwtl
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
dec
xor
add
add
add
add
je
add
xorb
xchg
xor
add
add
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
push
xor
add
sub
add
ss
add
dec
xor
add
pop
xor
add
je
add
jle
add
mov
add
mov
xor
add
mov
xor
add
fidivs
add
clc
xor
add
or
add
push
add
and
add
sub
add
xor
add
cmp
add
inc
add
push
add
pop
add
fs
outsb
add
xorb
add
add
add
add
fdivs
add
hlt
add
or
add
and
add
add
add
inc
aaa
add
pop
aaa
add
jo
add
jle
add
mov
add
cwtl
aaa
add
movsb
aaa
add
mov
add
les
add
into
aaa
add
fidivl
add
repnz
add
push
cmp
add
cmp
add
cmp
add
add
dec
cmp
add
add
add
add
stos
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
add
sub
add
cmp
add
inc
cmp
add
add
cmp
add
add
add
xchg
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
add
add
add
add
add
add
imul
popa
jae
push
add
push
add
je
arpl
insb
insb
push
outsl
jae
add
fs
imul
add
imul
jb
add
push
gs
outsb
jne
gs
jne
je
je
insl
add
pop
add
je
jns
inc
outsl
insb
outsl
jb
add
mov
imul
jae
bound
push
push
imul
add
push
imul
popa
bound
add
add
outsb
dec
arpl
add
stos
add
fs
jne
jae
jb
add
jae
popa
je
inc
arpl
insb
gs
je
jb
add
inc
jb
popa
je
push
outsl
jo
jo
outsb
jne
add
popa
jb
jo
gs
add
mov
imul
imul
add
je
gs
popa
addr16
js
jb
dec
outsb
outsw
add
inc
insb
outsl
jae
inc
gs
je
jo
add
add
outsb
dec
outsb
jo
je
gs
je
jo
add
je
insl
push
popa
jb
insl
gs
jb
dec
outsb
outsw
inc
add
push
gs
outsb
jne
je
insl
dec
outsb
outsw
push
add
adc
gs
jae
inc
inc
add
popa
insb
imul
je
add
arpl
outsl
push
push
outsb
outsl
ja
add
insb
push
imul
imul
fs
gs
outsb
je
cmp
arpl
popa
imul
outsb
add
sahf
add
push
arpl
jo
jns
mov
dec
jae
push
jo
popa
dec
jne
gs
arpl
mov
inc
jb
ja
outsb
jne
popa
jb
mov
push
popa
bound
fs
gs
dec
jne
push
add
or
inc
gs
inc
inc
js
jno
push
gs
imul
outsb
add
xchg
add
je
outsl
jns
arpl
insb
gs
je
jb
popa
bound
push
add
je
jb
jo
add
sti
add
dec
outsb
push
arpl
push
push
jae
jb
bound
arpl
outsw
jb
popa
je
outsl
outsb
push
add
add
imul
jae
addr16
add
xor
jb
outsl
dec
gs
push
add
addb
outsb
data16
popa
je
push
arpl
add
ja
arpl
add
mov
inc
jb
ja
jb
insl
gs
outsl
outsb
je
outsl
insb
add
inc
add
je
gs
inc
insb
addr16
jb
jne
dec
je
insl
add
fs
outsb
jo
je
mov
inc
gs
jb
insl
gs
jb
arpl
mov
inc
gs
imul
outsl
arpl
add
outsl
addr16
outsl
js
popa
jb
insl
inc
add
add
imul
popa
jae
inc
add
dec
add
jo
inc
arpl
insb
gs
je
jb
popa
bound
add
inc
gs
jns
je
insl
dec
outsb
jne
mov
ja
je
je
push
add
loope
inc
imul
outsl
ja
add
inc
jb
popa
je
push
imul
inc
add
add
popa
bound
imul
cmp
inc
push
jo
jb
add
or
push
imul
je
gs
add
add
push
jae
push
imul
arpl
add
aad
dec
gs
popa
addr16
outsl
js
add
add
jae
popa
addr16
outsl
js
js
add
inc
gs
outsl
jo
imul
dec
add
je
outsb
jne
loop
inc
imul
outsl
ja
js
add
fs
outsb
jne
add
add
jae
popa
addr16
outsl
js
add
add
jne
insb
push
arpl
add
outsb
imul
add
inc
gs
imul
js
dec
outsb
addr16
push
add
mov
push
imul
ja
add
add
je
insb
imul
jb
les
dec
popa
jo
imul
arpl
add
fs
je
imul
dec
imul
jne
je
insl
add
xor
inc
gs
outsb
jne
je
insl
inc
outsl
jne
je
add
add
imul
arpl
dec
fs
jb
insl
inc
imul
jns
mov
dec
outsb
je
jb
arpl
arpl
add
je
outsl
jne
insb
gs
insb
imul
add
daa
add
je
gs
outsl
popa
jb
push
jns
gs
add
je
jae
outsb
arpl
jns
je
je
add
sub
inc
push
ja
jb
jne
push
add
popf
add
insb
outsl
addr16
outsl
js
popa
jb
insl
push
add
add
popa
jb
outsl
ja
jb
add
and
inc
push
dec
outsb
jne
add
imul
outsl
ja
jo
popa
je
add
mov
imul
movl
imul
gs
js
add
pop
add
je
arpl
jo
jns
add
add
je
insb
popa
jae
dec
outsl
outsb
addr16
add
add
jo
imul
imul
push
jb
outsb
jae
popa
je
inc
arpl
insb
gs
je
jb
add
inc
push
outsb
jne
popa
imul
add
push
gs
arpl
insb
insb
dec
outsb
outsw
add
outsl
ja
gs
outsl
jb
addr16
jne
fs
imul
lahf
add
jo
je
push
popa
addr16
add
sub
jb
gs
push
add
add
popa
insl
gs
arpl
add
data16
je
arpl
mov
dec
outsb
jbe
insb
imul
add
push
gs
outsl
jb
addr16
jne
fs
imul
add
je
arpl
gs
imul
add
inc
push
fwait
add
insb
outsl
popa
fs
gs
outsl
popa
jb
dec
popa
jns
jne
add
pushf
add
dec
arpl
imul
gs
outsb
jne
je
imul
add
fs
outsb
jne
add
add
imul
outsb
outsl
ja
gs
popa
addr16
add
cmp
push
gs
jne
jae
jb
add
je
gs
popa
addr16
add
inc
outsl
jb
addr16
jne
fs
imul
add
gs
je
inc
imul
jb
insl
push
add
stc
add
je
insb
popa
jae
dec
outsl
outsb
addr16
add
inc
push
xor
cs
insb
add
mov
push
gs
outsl
jbe
inc
imul
jns
add
add
dec
gs
jbe
inc
jb
je
arpl
push
arpl
outsb
add
pop
add
gs
imul
bound
gs
add
xchg
imul
jne
jb
add
mov
jo
jb
popa
je
add
or
gs
jne
jb
outsb
je
imul
jns
add
cmp
dec
jo
outsb
inc
jbe
outsb
je
add
dec
add
insb
outsb
inc
add
add
je
push
dec
outsl
arpl
add
push
outsb
push
gs
js
gs
imul
gs
add
je
popa
insb
inc
jb
add
inc
outsl
insl
jo
je
jb
popa
insl
gs
add
int
inc
jb
popa
je
inc
jbe
outsb
je
add
movsb
add
outsb
arpl
dec
outsl
add
outsl
add
outsb
insl
popa
jo
imul
insb
add
push
insb
gs
sti
add
je
popa
jae
inc
jb
outsl
jb
add
add
je
jb
arpl
fs
jae
add
addb
jb
gs
imul
rolb
inc
gs
popa
je
inc
outsl
jb
popa
je
add
outsl
add
je
imul
popa
je
add
jge
push
gs
data16
gs
imul
push
add
xchg
add
outsl
bound
push
gs
insb
insb
outsl
arpl
fildl
inc
jb
popa
je
dec
popa
imul
in
push
gs
outsl
insl
insl
push
imul
add
gs
jns
je
insl
push
imul
gs
jns
je
insl
inc
imul
jns
add
add
inc
popa
fs
gs
fs
je
add
mov
jo
insb
insb
outsl
arpl
and
inc
outsb
jne
push
gs
jne
arpl
jns
gs
add
push
add
fs
imul
js
add
mov
inc
outsl
insl
jo
jb
push
je
imul
add
gs
jb
outsl
jb
outsl
fs
out
inc
jb
popa
je
push
gs
outsl
je
push
push
add
popl
inc
insb
outsl
bound
inc
insb
popa
addr16
mov
popa
imul
insb
gs
bound
arpl
add
je
jne
bound
inc
outsl
jb
popa
je
add
xchg
add
imul
outsl
dec
jne
je
inc
jns
add
inc
gs
jns
je
insl
inc
gs
jne
je
dec
dec
popa
outsb
addr16
add
test
inc
gs
imul
imul
jns
add
jl
inc
fs
je
insl
inc
add
stos
add
gs
jb
outsl
insl
insl
inc
jb
outsl
jb
add
add
jae
jb
insl
jo
inc
add
add
gs
push
inc
outsl
outsb
je
js
add
repnz
gs
je
push
popa
imul
insl
gs
add
movb
je
arpl
imul
gs
je
inc
imul
imul
jae
jne
arpl
add
add
fs
imul
add
mov
inc
gs
inc
push
add
pop
add
imul
add
dec
inc
push
dec
inc
dec
xor
cs
insb
add
add
inc
push
inc
outsl
outsb
je
add
add
imul
add
add
je
jo
outsb
inc
imul
add
or
inc
imul
push
add
insl
fs
xor
cs
insb
add
cmc
add
outsl
outsb
je
outsl
insb
data16
add
gs
popa
jo
pop
je
jo
add
mov
pop
pop
insw
outsl
fs
insl
add
gs
add
pop
pop
arpl
insl
outsl
fs
mov
insl
bound
outsl
ja
jae
add
add
insl
jae
pop
gs
je
add
imul
add
outsb
imul
add
arpl
outsl
imul
xchg
add
popa
insb
outsb
jne
add
add
imul
ja
jae
popa
je
add
add
jb
jo
add
out
jae
jb
outsl
insb
insb
add
add
arpl
outsl
insl
bound
add
arpl
jb
jb
add
ljmp
jo
add
add
jb
push
add
ja
arpl
data16
insl
bound
gs
add
int3
add
outsl
jb
add
add
outsl
ja
outsl
ja
jb
add
insb
outsl
arpl
add
add
jns
je
insl
add
sub
ja
jae
bound
add
add
jae
jo
imul
pop
pop
arpl
inc
imul
jbe
jo
imul
add
jne
arpl
mov
insb
outsl
arpl
je
insl
add
data16
jne
push
ja
jae
push
add
js
je
pop
add
insb
insb
outsl
arpl
add
add
je
bound
add
jb
outsb
je
or
gs
add
cmp
arpl
outsl
jne
add
add
gs
je
add
bound
popa
jb
push
pop
jae
je
jae
jb
popa
je
gs
add
jb
pop
pop
addr16
popa
imul
enter
je
push
push
push
inc
push
push
cs
insb
add
push
add
imul
inc
outsl
outsb
je
outsl
insb
jae
js
add
dec
insl
popa
addr16
imul
fs
insl
popa
addr16
add
adc
inc
jb
popa
je
push
jb
jo
jb
jns
push
popa
addr16
add
dec
add
popa
addr16
imul
insb
popa
arpl
arpl
add
add
popa
addr16
imul
dec
arpl
push
imul
insl
popa
addr16
imul
dec
arpl
add
dec
inc
push
dec
xor
cs
insb
add
les
inc
outsb
jne
inc
outsl
outsb
je
popa
insl
imul
add
add
je
dec
inc
inc
outsl
insb
outsl
jb
popa
bound
add
add
je
gs
dec
jne
push
add
popa
je
dec
inc
push
add
bound
gs
outsb
add
mov
inc
gs
gs
inc
inc
add
inc
add
je
gs
arpl
popa
jo
add
add
je
imul
jae
movl
inc
inc
add
jne
inc
imul
addl
gs
gs
inc
js
outsb
je
outsl
imul
stos
add
gs
je
push
outsl
insb
jns
outsl
outsb
push
outsb
add
xchg
add
gs
je
inc
dec
inc
imul
add
gs
dec
bound
arpl
outsb
add
je
imul
add
gs
je
inc
jb
jae
dec
outsb
imul
add
je
gs
dec
gs
imul
inc
jb
popa
je
inc
imul
add
je
imul
outsb
jae
outsl
outsb
inc
js
add
popa
je
inc
outsl
outsb
je
outsb
imul
iret
add
insb
arpl
insb
gs
gs
add
jne
fs
arpl
add
gs
je
push
outsl
insb
imul
add
add
je
jne
jb
outsb
je
bound
arpl
stos
add
gs
je
push
arpl
outsb
add
add
je
bound
je
jb
arpl
add
add
insb
arpl
imul
add
gs
je
inc
outsl
outsb
je
add
add
jne
inc
outsl
outsb
je
push
add
dec
add
je
outsl
outsb
je
popa
je
add
gs
outsl
inc
js
add
gs
popa
insb
gs
gs
outsb
je
imul
gs
dec
jne
push
add
rolb
push
gs
imul
jae
movsb
add
je
insb
je
add
jae
je
imul
dec
jb
inc
js
xlat
add
insb
insb
push
outsb
add
popa
je
inc
insb
insb
imul
outsb
dec
outsb
imul
add
je
gs
inc
js
outsb
je
outsl
imul
push
gs
jp
push
popa
insb
gs
gs
add
je
jb
jae
dec
jb
inc
js
mov
jae
je
outsb
add
add
je
jne
inc
add
mov
insb
imul
je
add
inc
inc
dec
xor
cs
insb
add
push
popa
je
inc
imul
outsb
jae
outsl
outsb
inc
add
push
dec
dec
push
inc
push
dec
cs
insb
add
popa
jns
pop
je
push
imul
lcall
add
or
dec
ja
cmp
dec
jp
cmp
dec
ss
add
dec
ret
dec
push
push
pop
push
cmp
dec
ret
dec
cmp
dec
jp
cmp
dec
ss
imul
dec
push
bound
arpl
dec
jns
ret
dec
cmp
dec
dec
dec
xor
ret
dec
push
jb
jae
orl
js
jns
aas
dec
jbe
ret
dec
ds
dec
dec
cmp
dec
xor
dec
push
sbbb
setae
nop
js
jns
aas
dec
jbe
ret
dec
ds
dec
dec
cmp
dec
xor
dec
push
xchg
pop
xchg
bt
mov
aas
dec
push
dec
cmp
dec
push
dec
xor
ret
dec
push
mov
or
aas
dec
push
dec
cmp
dec
pop
dec
cmp
dec
xor
mov
ret
or
js
jns
aas
dec
push
dec
cmp
dec
dec
dec
xor
ret
dec
push
ret
psrlq
sarb
jns
aas
dec
push
dec
cmp
dec
dec
dec
xor
ret
dec
push
rcrb
rorl
jecxz
loopne
lock
aas
dec
insl
dec
ret
dec
cmp
dec
ret
dec
push
loop
jecxz
repz
js
jns
js
jns
ds
jg
ret
dec
cmp
jb
ds
dec
dec
cmp
dec
xor
add
adc
adc
jns
aas
dec
add
data16
pop
cmp
add
inc
add
ds
add
cmp
add
inc
add
cmp
add
mov
inc
add
cmp
inc
add
cmp
inc
add
cmp
mov
inc
add
ds
add
test
push
inc
add
or
inc
add
fisttpll
push
jne
in
incb
mov
cmp
add
xchg
pushf
clc
xor
pushf
clc
cmp
pushf
clc
cmp
xchg
pushf
clc
aas
xchg
pushf
clc
cmp
pushf
clc
cmp
pushf
clc
in
stc
add
cmp
push
add
pop
dec
imul
pushf
clc
sahf
jmp
add
push
cmp
pushf
or
jecxz
inc
add
inc
add
add
add
add
outsl
add
dec
add
add
add
inc
add
imul
add
dec
add
add
imul
jo
outsl
add
insl
add
add
insb
add
data16
imul
add
imul
outsl
add
add
push
add
add
add
add
inc
dec
dec
imul
inc
dec
dec
inc
dec
jne
dec
dec
push
imul
imul
inc
imul
insb
imul
dec
push
inc
outsl
imul
dec
dec
inc
dec
dec
sub
inc
inc
add
add
fs
addr16
add
dec
pop
dec
dec
dec
push
dec
pop
dec
push
dec
or
dec
add
pop
dec
pop
dec
pop
dec
or
dec
dec
dec
dec
dec
pop
dec
dec
dec
or
dec
add
dec
dec
pop
dec
push
dec
dec
dec
arpl
dec
pop
dec
ret
add
add
add
add
outsb
lea
outsb
lods
outsb
mov
outsb
in
outsb
std
outsb
or
outsb
cmp
outsb
jb
jae
jo
jno
jbe
ja
je
jne
mov
outsb
mov
outsb
mov
pop
jge
jge
jge
jns
mov
bound
add
mov
aaa
dec
jle
jno
mov
imul
inc
xlat
rcll
rcr
leave
xchg
fs
push
rcrl
shll
mov
inc
add
shll
and
inc
push
outsl
push
dec
cmp
add
in
adc
inc
inc
jae
inc
jae
popa
push
pop
pop
outsb
jbe
jns
push
imul
jns
inc
jo
data16
jp
insb
je
jns
popa
push
push
push
popa
push
push
push
dec
je
push
bound
push
arpl
inc
jne
push
outsl
push
inc
inc
push
imul
push
jb
add
js
popa
inc
push
insb
pop
ja
je
add
insb
jb
inc
push
push
inc
insb
add
jbe
push
push
dec
imul
add
in
jnp
jnp
cmc
lcall
and
push
lods
fiadds
incl
add
or
fsubs
les
push
mov
test
fcmove
pushf
pop
xor
insw
inc
andb
inc
es
call
dec
jmp
test
pop
stc
test
cmpl
movsl
adc
dec
push
dec
adc
out
lret
mov
pusha
arpl
and
leave
xchg
cs
push
mov
inc
mov
arpl
xlat
les
andb
cmc
and
loopne
lea
mov
leave
jp
or
jl
push
pop
je
sbb
scas
sub
dec
adc
pop
mulb
inc
fdivrl
ficoml
or
or
xchg
sbb
inc
inc
mov
xor
shlb
sbb
xchg
pop
dec
nop
lea
pushf
push
lea
and
popf
arpl
jns
loope
fisubrs
pop
jl
inc
rcrb
xchg
adc
add
stos
flds
pop
ficoml
in
jle
lcall
dec
data16
add
add
add
cmp
mov
dec
fwait
sub
jae
mov
push
mov
mov
and
push
scas
push
xchg
or
xchg
icebp
shlb
mov
outsb
or
das
fwait
inc
jl
aaa
lahf
push
loop
gs
shl
sub
dec
push
cmp
iret
test
imul
addl
scas
push
pop
jmp
shrb
sbb
xor
push
sbb
cs
sub
xchg
cmc
gs
incb
xchg
adc
sbb
ss
sbbb
mov
nop
out
xchg
loope
push
or
imul
or
pop
add
dec
push
xchg
inc
in
aas
lcall
dec
mov
insl
in
xchg
inc
lahf
call
mov
mov
loope
sub
scas
mov
mov
add
adc
mov
mov
push
mov
flds
add
add
add
dec
ja
insb
xchg
sbb
sarb
cmp
sub
test
push
mov
decb
out
mov
popa
dec
push
mov
sbb
jbe
outsb
adc
int
ljmp
add
mov
push
push
psubd
daa
fildl
inc
repz
cmp
and
pop
leave
fimull
insl
sub
ret
mov
mov
rcll
mov
rclb
jne
lea
cwtl
pusha
cmp
subl
mov
mov
pushf
push
mov
sub
or
xchg
dec
mov
xor
test
push
jecxz
pusha
mov
push
fsubrl
cli
fisubrs
jl
jae
sbb
inc
cmp
add
cld
push
push
push
and
call
outsl
mov
sbb
and
push
insb
cmp
or
mov
sbbl
add
subl
roll
sub
fiaddl
add
add
add
mov
add
bound
ret
dec
inc
dec
add
adc
shrb
scas
in
pop
mov
in
add
and
mov
testl
dec
jae
pop
aad
mov
push
mov
xchg
mov
leave
and
into
clc
mov
ljmp
addr16
loopne
xor
sub
loopne
scas
adc
xchg
pop
in
aaa
jg
xor
push
gs
mov
dec
sub
test
ds
imul
xchg
or
pop
pop
push
cmpsl
jp
stos
repz
dec
sbb
insl
push
adc
xor
orb
xor
cmp
pop
cs
inc
daa
mov
sub
es
lahf
and
inc
mov
or
addb
mov
mov
sbb
movsb
dec
xor
push
push
and
or
pop
jae
or
pop
dec
or
in
mov
fildl
add
add
add
jnp
cltd
ljmp
das
ret
xchg
and
sbb
inc
imulb
int3
or
ret
je
xchg
hlt
lret
insb
add
clc
movsl
adc
inc
mov
inc
xor
std
xor
shlb
imul
xor
and
xchg
cmp
adc
inc
dec
pop
popf
test
dec
or
fsub
in
dec
mov
mov
gs
test
jmp
imul
aaa
enter
pushf
inc
mov
cmp
out
or
into
je
sbb
mov
sub
cltd
fadd
jl
xor
les
insb
and
arpl
or
dec
mov
addr16
imul
cmpsb
mov
xchg
hlt
mov
and
sbb
cmpsl
mov
push
sti
jno
and
cmp
jle
mov
inc
pop
mov
sub
dec
add
add
add
add
cmc
insl
cmc
out
lcall
enter
cmp
add
incl
add
je
xchg
out
push
push
int3
leave
sub
popf
rcl
jne
cwtl
mov
movsb
into
std
inc
cwtl
jno
sbb
test
dec
jge
ds
jne
add
shlb
mov
rcrl
insl
or
dec
in
shl
and
mov
pop
push
lret
push
stc
lret
push
sar
popa
lret
ljmp
js
pop
sub
iret
mov
in
push
and
mov
cwtl
dec
test
lret
jl
or
sarl
dec
dec
xor
rcl
in
fmull
adc
test
call
out
adc
es
ljmp
lcall
pushf
iret
sub
and
or
xchg
arpl
mov
incb
addr16
enter
sub
lea
in
cmp
jl
cmp
cmp
subb
add
add
outsl
jle
aas
mov
cmp
popa
fldl
add
add
add
ss
add
out
lock
enter
and
into
lret
jp
lret
ja
daa
cltd
ds
or
sub
inc
sub
cmp
pushf
addb
clc
push
add
loope
lock
loopne
mov
jns
lahf
jns
jmp
add
nop
iret
push
cld
and
and
lret
rol
ret
lock
dec
mov
push
es
aam
jo
ret
gs
pop
test
loop
pop
mov
mov
push
jnp
imul
shrl
lods
test
or
xchg
inc
xchg
enter
jp
xor
sbb
lcall
loope
test
test
mov
repz
mov
adc
jl
movsb
repz
fcoms
sub
mov
lret
aam
pop
adc
hlt
fs
mov
int3
addr16
ljmp
iret
fwait
xchg
pop
mov
lds
or
and
scas
sti
jle
pop
push
pop
sub
fiadds
add
add
add
mov
pop
cmp
push
data16
ret
mov
test
ret
mov
lods
lcall
inc
int
pop
dec
lret
test
pop
cli
mov
fmull
cmpsb
bound
daa
imul
test
xorb
push
push
scas
sub
inc
jg
cmp
jbe
das
dec
inc
xor
lods
ss
cwtl
xchg
sbb
adc
mov
in
fstl
sbb
fsubrs
push
movsl
lods
mov
jg
mov
sti
dec
mov
lret
testl
filds
fs
insl
push
out
push
lcall
fcmovb
mov
aad
or
jmp
cmp
cmp
push
repz
pop
and
push
leave
push
xchg
mul
push
sbb
cld
inc
cmpsl
cmp
mov
sbb
sub
je
movsl
int
adc
lahf
fnstcw
ss
lahf
stc
bound
add
add
add
add
sub
dec
mov
xor
cs
sub
adc
std
inc
or
test
jg
cmc
shrl
adc
fidivrl
loop
roll
sbb
lahf
loope
pop
out
call
xor
and
mov
push
sbb
inc
loopne
lcall
pop
and
and
rcrb
mov
sbb
xor
dec
insb
mov
psubd
nop
pop
testb
xchg
pop
xor
pop
push
jae
ljmp
xchg
or
jne
cltd
mov
push
and
pop
pop
flds
int3
ret
pause
sub
jae
adc
jle
mov
shl
mov
inc
das
ss
lea
movsb
push
mov
and
push
mov
pop
jmp
stos
or
dec
add
push
jl
jle
insb
out
adc
loopne
add
add
add
dec
jns
xchg
pop
mov
push
and
decl
sbb
adc
mov
xchg
xchg
movsl
incb
jle
add
adc
cltd
lret
lcall
dec
jae
xchg
push
test
enter
movzbl
or
in
push
jmp
push
xchg
adc
sub
out
test
xchg
mov
and
push
mov
and
mov
imul
inc
sub
lds
mov
push
rolb
pop
inc
mov
ljmp
push
stos
arpl
std
fsts
xor
jae
fstps
mov
inc
lock
fisubrs
cmp
jo
mov
lods
adc
stos
push
sahf
sbb
sbb
outsl
xor
jl
add
addb
add
mov
adc
in
xor
adc
pop
loope
add
add
add
icebp
inc
adc
mov
xchg
and
mov
test
mov
pop
or
nop
pusha
add
outsl
jne
cmp
sub
test
scas
mov
mov
xlat
xchg
subb
jo
xor
push
xor
sbb
inc
pusha
or
sub
mov
repz
out
and
or
stos
jl
lds
pop
pop
cmp
xor
or
js
cwtl
jae
push
cmc
std
push
orl
imul
xor
mov
scas
pop
pop
shr
aad
push
out
js
ret
push
enter
sub
lahf
push
push
cmpsb
aas
and
dec
out
xor
inc
cmp
nop
push
cmp
or
adc
scas
jge
xor
xchg
xchg
cmpb
or
push
ds
sahf
test
add
add
data16
jne
mov
lcall
add
incl
add
out
pusha
roll
into
leave
dec
test
push
jb
add
pop
sub
ja
xlat
push
push
shll
fwait
mov
movsb
jmp
and
jle
xor
jno
push
sub
icebp
sub
jo
lret
push
popa
out
add
push
dec
pop
lret
scas
pop
fsubrl
fcmovnu
adc
push
dec
cs
push
xchg
in
adc
cwtl
mov
sub
out
fwait
jmp
les
cld
cmc
aas
loop
sub
cmp
ljmp
adc
out
out
mov
out
sub
mov
inc
cmp
push
lods
add
xchg
cmp
xor
loopne
mov
pusha
mov
push
enter
adc
jmp
sub
mov
adc
xlat
cld
je
repnz
in
out
pop
adc
rcrb
fdivrs
jnp
push
xchg
add
add
jnp
sti
xchg
lahf
mov
mov
add
add
add
mov
push
sar
aaa
lods
daa
lods
xrelease
xchg
pusha
bswap
xchg
sbb
mov
inc
push
insb
mov
jne
or
nop
sbb
movsl
popa
enter
lret
sub
hlt
lea
mov
mov
jge
call
lods
decb
dec
repz
pop
mov
and
addr16
mov
jl
xor
dec
adc
cmp
js
xchg
xchg
jmp
movl
dec
inc
sub
and
test
mov
sub
in
aam
mov
ret
fdivs
lock
clc
cmp
popa
inc
pop
inc
adc
xchg
loopne
js
in
movsb
inc
push
adc
orb
and
in
adc
inc
fdivs
or
jbe
mov
ret
mov
push
rcrb
iret
in
fiadds
mov
mov
add
pop
sarl
mov
xchg
pop
in
add
add
add
bound
cltd
push
popf
fdivrp
int
sub
jae
inc
and
arpl
adc
pop
sub
mov
imul
and
movb
jmp
lods
mov
mov
addr16
rcrl
cmp
mov
mov
loop
pushl
mov
xchg
ret
idivb
shr
fsubrl
jae
ljmp
shll
les
pop
sbb
imull
subb
popa
push
ja
jl
cs
mov
add
lods
mov
jns
mov
xlat
mov
lret
mov
out
xor
xchg
ds
in
je
int
popa
xchg
sbb
mov
cmpsl
repnz
xchg
adc
popf
sbb
mov
inc
add
cltd
cmp
pop
out
and
test
notb
icebp
pop
inc
jnp
lods
adc
jg
out
inc
pusha
add
repz
std
repz
mov
in
in
add
add
add
add
cmp
pop
js
adc
mov
mov
insb
out
sbb
and
and
cltd
add
xor
mov
cld
sbb
cmp
fmuls
cmpsb
cwtl
and
repz
mov
stc
jg
fldt
mov
push
or
sahf
in
xchg
dec
int3
out
fistpl
pop
insb
and
jns
mov
jae
out
ret
dec
es
paddw
cmp
inc
stos
push
adc
jge
jecxz
jns
sub
inc
jge
inc
xlat
and
jnp
push
and
dec
push
sub
jmp
jns
lods
add
xchg
in
shl
fstpt
xchg
loope
out
mov
lds
idivl
jns
pushf
lods
shl
stc
shrb
mov
or
aam
cmp
je
insb
lret
pop
adc
xor
sbbb
xor
ja
add
lock
cmp
arpl
je
out
jge
out
add
add
add
push
and
push
fstpl
out
and
stos
cltd
push
adc
push
inc
push
jae
imul
mov
lret
add
inc
aam
cmp
aas
pop
test
cltd
xor
das
adc
lret
xchg
shll
mov
adc
out
push
or
lods
and
pop
leave
cmc
sub
push
lock
push
jbe,pn
jb
sbb
add
add
lret
and
rorb
sbb
add
shrl
icebp
push
out
jne
fistps
xchg
and
dec
inc
cltd
or
loope
mov
push
enter
leave
push
inc
mov
scas
jae
cs
jb
mull
or
mov
jp
mov
lret
dec
int
rorl
cli
popf
sti
ret
push
cwtl
js
mov
stos
mov
push
adc
xchg
daa
add
in
dec
sub
insl
lcall
mov
inc
sub
dec
ss
out
add
add
add
andb
sbb
mov
loop
xor
lds
push
fldcw
or
inc
cmp
push
imul
sub
cmp
sbb
jne
rorl
pop
push
gs
ljmp
imul
test
pop
out
cmp
shlb
inc
jns
cmp
dec
loopw
mov
xchg
xchg
fmull
xor
add
push
lods
jbe
mov
xorb
sbb
mov
mov
mov
sbb
xor
mov
fxtract
and
adcl
sub
mov
sub
sbb
std
xchg
in
adc
icebp
sbb
insl
add
mov
mov
lods
add
mov
dec
mov
sti
int3
imull
mov
scas
jg,pt
nop
push
roll
add
dec
inc
or
add
xchg
in
mov
incl
rcrl
call
add
ror
xor
cmpb
cwtl
pop
push
mul
and
gs
rolb
add
inc
adc
and
jg
scas
mov
xorb
loope
jp
mov
scas
fs
pop
popa
stos
arpl
inc
lcall
sbb
movl
mov
mov
xor
cltd
gs
outsl
fcoml
dec
popa
and
lret
std
xchg
js
rcr
shl
pop
jno
xor
lods
in
cwtl
lahf
fdivrp
mov
test
pushf
stc
sbb
test
sbb
cwtl
xchg
xor
leave
or
push
inc
lcall
sub
jle
aam
xchg
mov
leave
aam
push
add
inc
jmp
rcl
mov
daa
je
loop
xor
sbb
mov
push
xchg
loopne
jmp
push
xchg
or
jo
icebp
sbb
xor
fwait
dec
idiv
inc
push
pop
add
sub
in
negl
sub
movsb
push
inc
mov
add
add
add
xlat
and
push
outsb
xchg
cmpsl
xor
fucomp
jmp
and
pop
inc
inc
les
jecxz
xor
testl
popw
stos
test
mov
xchg
mov
daa
cwtl
in
into
adc
add
dec
xlat
in
or
ja
das
mov
push
aam
jg
push
dec
or
adc
arpl
adc
or
sahf
push
fsubs
sub
repnz
daa
cltd
jmp
mov
dec
and
lret
movsl
mov
adc
scas
or
enter
sbb
cmp
enter
imul
dec
xor
xchg
cld
add
sub
test
in
fisttps
repnz
daa
mov
js
fsub
mov
subb
cmpsl
in
jae
ja
pop
repnz
xchg
in
xor
add
add
mov
stc
dec
push
fcompl
ljmp
pushw
add
insb
sbb
jge
aad
lock
loope
push
mov
sub
sub
adc
ljmp
mov
mov
and
movsb
pushf
cli
mov
cld
pop
sahf
jl
aad
les
popf
in
jg
jns
stos
hlt
xlat
add
in
mov
xor
jp
inc
add
add
jb
das
testb
in
les
inc
push
iret
sub
divl
mov
pop
mov
or
jns
sub
cld
push
nop
mov
mov
dec
or
out
popa
andl
jge
push
or
mov
push
sbb
icebp
pushf
push
push
dec
ja
cmpsl
xchg
hlt
sbb
ror
out
ret
mov
fwait
ds
arpl
fldl
das
pop
sub
je
adc
loop
ret
sub
cwtl
xchg
push
pop
and
loopne
cmp
mov
push
push
push
mov
loope
jmp
add
add
add
push
jle
mul
notb
lahf
jge
xchg
scas
or
cmc
mov
and
cmp
jecxz
lret
cmp
int3
fstl
cmc
mov
roll
ja
sub
or
adcb
insb
jno
mov
push
mov
mov
rcll
mov
mov
popf
jne
js
lock
xchg
test
outsb
stc
cs
aaa
mov
mov
cmp
mov
popa
jb
fwait
sbb
cs
mov
fistpll
hlt
adc
loopne
and
mov
stc
jbe
pop
mov
push
rep
test
xchg
mov
icebp
mov
insb
mov
loop
xchg
push
mov
sub
inc
lea
xchg
fildll
les
filds
jecxz
dec
ret
add
xchg
lea
out
lret
mov
add
add
repnz
add
pop
lcall
les
sub
rcll
add
add
add
jae
rolb
repz
inc
xor
loope
movb
jo
aam
mov
mov
jl
scas
add
es
jg
xchg
mov
daa
adc
xorb
addr16
dec
inc
out
mov
mov
cmp
jmp
sub
xchg
in
sub
out
cwtl
cmp
sbb
cmp
shl
std
in
jge
adc
add
jo
div
sub
mov
sbb
cltd
cvtdq2ps
xor
ja
popf
xor
cmp
and
add
jmp
jnp
adc
popf
pushf
cltd
iret
test
inc
mov
jns
cmp
pop
inc
lods
adc
repz
jg
push
mov
xor
xchg
jns
scas
fisubrs
mov
push
mov
jne
shrl
sub
pop
mov
push
decl
xchg
adc
pop
push
in
add
incl
add
xor
mov
mov
mov
rcrl
or
add
jae
pop
xchg
gs
push
in
sub
and
push
enter
push
wrmsr
rcrl
notb
xchg
inc
sti
cmpsb
outsb
xor
jne
and
mov
dec
dec
lods
dec
lods
push
aas
adc
dec
pushf
mov
adc
enter
ljmp
ret
dec
push
popa
push
outsl
add
aad
les
sub
push
std
push
pop
add
xor
push
xchg
fldt
mov
sti
mov
loope
jmp
popf
pop
or
rclb
adc
mov
push
sub
js
repnz
xor
jae
jb
cmpb
mov
jl
nop
aam
sub
lret
push
adc
inc
ljmp
push
dec
adc
push
lods
and
mov
push
test
mov
jmp
pop
cltd
fadds
and
cmp
sti
fsubp
inc
push
sub
push
push
out
add
incl
add
cmc
jae
pop
in
adc
stos
and
push
rclb
movsl
xchg
test
mov
pop
jg
hlt
sub
loop
jne
push
xchg
pusha
mov
jg
mov
fs
push
pop
ret
cmp
or
sub
fldl
sub
mov
jo
dec
xor
imul
sti
jmp
sub
xchg
push
mov
lds
data16
mov
cltd
push
pop
jb
cltd
mov
imul
cmp
insl
lahf
neg
mov
cmp
test
mov
fimull
dec
xchg
je
sahf
jmp
pop
add
push
mov
push
mov
leave
aaa
inc
popa
cwtl
pop
std
std
pop
or
mov
inc
sbb
push
pop
lahf
jno
jns
outsb
push
arpl
jge
pusha
lods
mov
outsl
lahf
jae
xchg
fisttpll
test
mov
jle
add
outsb
xor
mov
lcall
out
add
incl
add
pop
divb
jl
cmpb
das
mov
hlt
mov
sub
push
loopne
jae
js
lcall
mov
call
push
in
int
jecxz
mov
stos
mov
lds
jg
jne
push
fldcw
pushf
jmp
insl
into
sub
lds
and
in
scas
mov
mov
cwtl
insl
in
shrl
insl
insl
fildll
xchg
xchg
sbb
movsw
sbb
push
leave
xlat
mov
dec
mov
xor
push
stos
and
decb
cmp
pushf
les
cmp
mov
adc
mov
sub
or
mov
add
dec
mov
leave
dec
push
gs
nop
loope
mov
ljmp
cmp
ret
xor
movb
movsl
sbb
into
psubb
out
mov
rcr
lea
xchg
lcall
out
add
inc
ror
lock
jnp
xor
xchg
mov
and
dec
lock
incl
add
fdivrs
repnz
arpl
cmp
mov
mov
inc
inc
fisttpl
out
sbb
ljmp
push
leave
adc
mov
pop
add
jmp
mov
xchg
lds
cmp
adc
in
dec
pop
popf
cmpsl
ja
arpl
shll
in
push
cmp
inc
and
push
and
add
mov
xchg
shlb
and
dec
movsl
icebp
repz
pop
jl
lcall
clc
xor
mov
jle
inc
pop
out
in
fsub
repz
pinsrw
pop
insb
fs
jne
jmp
pop
fistps
bound
push
jb
into
lods
pop
fiaddl
pop
or
imul
sbb
in
cli
push
cmp
jnp
mov
les
loopne
stos
inc
push
push
xchg
pop
lds
repnz
mov
or
xor
paddusb
xchg
imul
cmp
repnz
sahf
add
repz
fisubs
inc
jle
dec
icebp
add
incl
add
cmpl
mov
lock
repz
sub
and
mov
cs
jmp
push
push
outsl
dec
js
cmp
sub
mov
sub
das
daa
cmp
dec
rcrb
adc
repz
pushf
popa
bndstx
pop
fwait
mov
xchg
jno
cwtl
push
lods
inc
mov
inc
sbb
pop
lods
fwait
out
xchg
pop
idiv
dec
std
xor
mov
mov
add
mov
mov
mov
outsl
pop
adc
mov
aam
jl
xor
jo
pop
jb
mov
cmpb
ss
dec
pop
cmpsl
lds
mov
movsl
aam
xchg
popa
ret
xor
add
push
rorl
sub
mov
xchg
mov
repnz
incb
add
mov
push
jbe
xchg
sbb
out
popa
sbb
cltd
lahf
pop
xchg
jae
fnsave
mov
add
out
sbb
mov
mov
dec
repnz
incl
add
insb
stos
sbb
sub
pop
lret
inc
push
inc
and
adc
movsb
mov
push
test
jmp
sbb
jb
jle
fnstenv
dec
lds
xchg
mov
lcall
rcl
outsl
cmp
cmp
mov
rcrl
adc
insl
push
mov
test
jne
cld
xchg
jecxz
filds
push
adc
xor
cmp
inc
push
and
mov
ss
outsl
xchg
xchg
mov
out
mov
or
stos
jmp
in
cwtl
xchg
jg
sbb
dec
out
push
jno
subb
ljmp
inc
mov
and
mov
dec
sub
jl
cmp
nop
xchg
mov
scas
adc
fsubs
fldt
cmpl
adcb
inc
iret
and
scas
or
in
and
ds
aad
push
dec
aad
repz
test
add
scas
push
repz
cmc
scas
sub
mov
dec
repz
incl
add
adc
mov
lea
cmp
inc
jo
jb
adc
add
sbb
cmpsl
aam
decl
mov
xchg
dec
add
sbb
xchg
jge
mov
pop
in
mov
fucomi
imul
add
cli
cmpsb
lock
sar
repz
es
adc
push
icebp
mov
ja
jnp
jmp
fwait
stos
jns
fsubrs
cmp
int3
lock
ds
sti
cmp
xchg
push
sti
dec
lret
aas
jno
pop
mov
stos
mov
jle
cmpb
jnp
adc
sub
lock
fucompp
jno
inc
cld
ja
ss
push
loop
mov
insl
lods
mov
mov
in
mov
lea
lahf
insl
pushf
cli
movsl
sub
inc
loopne
xchg
sbb
ficompl
inc
gs
insb
dec
push
stc
dec
jae
fsts
lea
xchg
cmc
iret
xor
jnp
fs
mov
lret
pusha
rorb
cmpsb
mov
lods
popf
dec
hlt
add
incl
add
adc
scas
scas
mov
jo
imul
push
scas
fistpl
and
pop
fistpl
test
xchg
scas
icebp
mov
cmp
es
scas
iret
add
jmp
mov
or
pop
clc
pushf
jg
add
pop
lock
shrb
fiaddl
or
mov
sub
andl
inc
dec
jg
outsl
mov
fs
mov
je
or
imul
sub
je
popa
cmovno
bound
pop
jl
fisubl
mov
inc
mov
imul
iret
hlt
out
add
fwait
divl
out
xchg
addl
push
jecxz
adc
xlat
dec
jns
inc
inc
fisubrl
sti
loope
sarb
out
and
lock
dec
pushf
push
xchg
mov
repnz
add
imul
sub
adc
adc
jecxz
push
testl
out
daa
stc
dec
cmc
add
incl
add
aad
mov
add
cmpsb
adc
ss
pushf
inc
js
gs
and
push
outsl
fistl
movsb
fsubrl
dec
pusha
ret
and
dec
jb
mov
jnp
jne
xchg
jno
cmp
or
jmp
ss
insl
std
or
flds
add
mov
leavew
call
cmpsb
outsl
fistpl
and
add
xor
mov
sahf
int
inc
jg
push
insl
fwait
cltd
and
add
sub
test
sbb
sahf
xor
xchg
jo
sub
sbb
pop
dec
fisubrs
add
push
loop
in
out
inc
cld
rorb
enter
mov
jmp
xchg
mov
and
cltd
iret
outsl
inc
mov
repz
and
sti
lea
sub
scas
scas
push
xchg
xchg
loop
cmp
fldenv
sahf
jb
mov
push
xlat
sbb
popa
pop
mov
inc
stos
pushf
fldl
into
dec
arpl
add
add
xchg
mov
mov
pop
das
in
mov
add
add
add
pop
lret
arpl
dec
adcl
jle
stos
and
iret
jl
dec
sahf
jmp
fdivs
jno
je
test
mov
push
jl
iret
inc
outsb
push
xor
adc
sbb
mov
std
pop
fwait
andb
ss
aaa
adcb
flds
cmc
pop
loopne
ffree
imul
fwait
mov
lret
ljmp
mov
sub
test
cmp
pop
mov
std
loope
mov
or
jle
inc
in
stc
mov
xlat
dec
enter
mov
xchg
xchg
mov
leave
out
sub
imul
jno
jb
arpl
jnp
add
sarl
mov
pop
subl
mov
mov
stos
dec
add
pop
in
xchg
pop
mov
ja
jp
outsb
out
test
jns
mov
push
inc
push
leave
stc
popa
push
xchg
outsl
add
fucomi
xor
and
testl
add
std
inc
and
mov
jne
or
sti
out
or
xchg
inc
xor
adc
jp
mov
test
adc
sub
in
xor
jl
aam
sbb
lods
testb
jnp
or
lret
xor
mulb
jne
push
movsb
jb
pop
rcll
scas
loopne
aaa
clc
int
xor
dec
imul
jo
cmp
outsl
cmpb
push
les
jg
add
sub
mov
shl
jnp
in
cmp
js
inc
mov
jp
jg
mov
add
sbb
cmp
ficompl
rolb
lods
sub
cs
call
lcall
and
sub
sti
popa
xlat
cmpsl
fldl2t
mov
fucomip
scas
pop
xor
jle
sub
enter
stc
jmp
dec
stos
popf
or
mov
mov
daa
lahf
loop
jl
dec
push
sbb
das
clc
dec
mov
add
push
inc
pop
jns
aas
loopne
sub
sti
dec
mov
clc
add
incl
add
lods
pop
psadbw
and
fnstcw
jg
lods
shrl
gs
add
dec
mov
mov
push
les
ss
stos
xchg
jmp
or
mov
arpl
leave
sbb
pop
push
add
ret
mov
fists
out
ljmp
lcallw
cmp
dec
cs
adc
test
and
pushf
inc
rcr
shll
cmpsb
add
test
sbb
cmp
xor
sbb
pushf
call
jge
popw
loop
jle
push
call
insb
and
pop
repz
inc
mov
insb
xorb
jns
rol
in
daa
clc
inc
pusha
popa
push
add
cmp
adc
mov
stc
addr16
fldenv
rcrb
jo
out
lret
push
lcall
jle
sti
inc
lods
pop
jnp
int3
adc
mov
add
jnp
mov
inc
cld
xlat
imul
add
push
inc
call
icebp
inc
push
pop
or
push
dec
pop
inc
inc
push
shrb
or
inc
pusha
js
in
js
movsl
fcomp
mov
out
in
in
mov
xchg
mov
pop
mov
lods
and
adc
aam
and
pop
or
sti
dec
cli
add
aad
fsubrs
popa
push
cmpsb
cmpsb
std
sti
cmp
and
out
dec
push
icebp
or
das
mov
shll
shll
jae
cwtl
call
jnp
test
pop
and
les
insb
cmpsl
or
and
jge
mov
loop
outsl
or
mov
lahf
ds
or
repnz
cmp
in
cmp
lret
adc
es
inc
mov
fwait
loop
test
mov
pop
ret
arpl
ja
add
sarb
xchg
hlt
test
jae
mov
popa
adc
xchg
add
xlat
pop
xlat
jg
mov
jl
in
inc
cli
add
incl
add
scas
fnstsw
xlat
aam
out
mov
lock
icebp
push
dec
shll
mov
cmp
push
dec
test
enter
inc
xor
sbb
dec
push
dec
dec
inc
ja
jae
movsb
sbb
mov
outsb
int3
jne
lahf
ficomps
jl
jae
xor
jo
in
clc
call
xchg
lods
jge
inc
dec
xchg
push
in
push
mov
mov
imul
push
dec
mov
inc
jl
mov
pop
cs
fprem1
mov
push
aaa
mov
jns
xchg
mov
xchg
pushf
out
mov
loopne
cmp
shlb
mov
test
mov
fwait
loopne
jno
cwtl
mov
dec
into
std
push
and
and
xor
jne
mov
sub
adc
into
mov
les
bound
int
add
hlt
cmp
pop
repz
es
mov
add
add
fdiv
mov
push
mov
movsb
inc
sti
add
incl
add
dec
xchg
push
pop
decb
idiv
aaa
dec
in
popa
mov
adc
data16
mov
cmp
loope
xor
test
sub
daa
adc
xchg
jg
jle
aaa
jmp
xorb
and
out
or
in
div
xchg
shll
bound
cld
dec
gs
jb
adc
or
es
xchg
negl
in
jg
jge
push
ja
es
daa
inc
sbb
fcoms
pop
mov
cmp
in
xchg
int3
scas
std
out
cli
mov
ret
ret
lret
std
cmp
ljmp
adc
mov
pop
push
or
add
filds
dec
adc
ficomps
hlt
mov
je
pop
sbb
movsb
ja
jb
outsb
in
or
out
inc
fs
outsl
push
xchg
movsb
lret
ret
xchg
sarb
add
mov
fiaddl
shll
add
add
add
movsl
and
scas
fs
sarl
adc
jecxz
lcall
cmpb
insl
sbb
jne
inc
repz
cmp
in
push
das
lods
jae
jecxz
call
sti
pop
cli
xchg
test
add
jnp
sub
cli
movsl
pop
fwait
xchg
add
sbb
and
sbb
push
push
aas
andb
and
outsl
test
loop
outsl
sbb
daa
cmc
push
popf
inc
and
pusha
in
inc
xor
test
fucompp
pop
or
cmp
lret
sub
dec
es
in
mov
in
xchg
xchg
movsb
jbe
cld
adc
mov
cmp
aas
jno
das
mov
push
cmc
and
push
xchg
aaa
adc
sti
mov
add
sahf
pop
or
scas
jbe
mov
pop
push
jb
pop
mov
repz
gs
in
cld
aaa
add
push
pop
push
jmp
shlb
and
inc
std
add
incl
add
dec
pushf
or
adc
lea
jo
xorb
imul
call
xchg
test
dec
sbb
int3
mov
fisubrl
out
test
mov
pop
cmc
push
pop
inc
or
mov
shrl
addb
outsl
in
cwtl
loopne
dec
insb
lcall
push
sbb
fldenv
pop
std
jnp
fcom
nop
jb
sub
arpl
stos
inc
jmp
mov
movups
fstpl
jns
mov
push
loop
mov
out
arpl
lock
iret
test
inc
adc
add
jne
jbe
push
push
scas
cmpsb
mov
es
mov
jg
enter
inc
loop
or
jne
outsl
sub
inc
loope
xchg
call
icebp
sbb
call
add
xchg
xlat
hlt
iret
subl
aam
out
shl
and
pop
inc
pop
lods
pop
cli
cmc
cmpsb
lret
pushf
push
inc
incb
add
add
add
imul
xor
rolb
pop
mov
xlat
pop
ja
loope
clc
ja
dec
jmp
and
dec
pop
les
pop
sahf
mov
mov
sub
test
dec
stc
mov
cltd
fwait
jle
popf
and
in
sub
testl
adc
mov
ljmp
sub
filds
xchg
mov
aad
into
push
adc
jmp
mov
data16
movsb
inc
jnp
mov
inc
push
int
xlat
dec
xor
loope
aad
inc
add
leave
sub
ret
stos
xor
sub
mov
inc
rolb
cmp
cmpsl
aas
test
int3
pop
dec
test
lods
or
sahf
cmp
push
jle
pushf
fsubrs
lock
pop
dec
mov
cmc
adc
pop
push
sbb
sub
xorl
xchg
dec
jnp
scas
fcmovb
add
das
stos
cltd
inc
popf
jae
out
xor
aas
incl
add
add
add
es
ret
xchg
push
int3
xchg
out
jo
dec
mov
push
pusha
sub
and
pop
jmp
jg
xchg
sti
push
mov
das
dec
mov
jae
ja
repz
jle
sub
xchg
inc
daa
shll
cmpsl
mov
mov
jp
sub
adc
cmp
in
jbe
xor
xor
and
aas
outsb
bound
rcr
jl
test
inc
mov
adc
les
repz
test
aam
cmc
jbe
dec
xor
sub
mov
or
xchg
aaa
sub
std
shl
mov
adc
jg
push
loop
outsb
lret
or
inc
js
cs
sbb
fsts
dec
std
inc
ja
dec
mov
ret
xchg
cwtl
jnp
and
pop
pushf
es
xor
in
mov
inc
repz
add
push
nop
repnz
iret
sbb
jae
mov
nop
test
aam
int
aaa
das
aam
push
add
incl
add
shl
insl
and
inc
cmp
incl
aaa
cli
add
or
fidivl
outsl
in
fildl
popa
pop
clc
out
pop
xor
jnp
or
lods
test
xor
andl
in
push
mov
sub
mov
cmp
adcb
sahf
mov
add
test
cmp
dec
pusha
mov
mov
xor
jno
and
int
addr16
hlt
jae
in
daa
cltd
test
xor
adc
mov
and
dec
sbbl
mov
jno
jmp
mov
cwtl
jge
cmp
leave
or
outsl
rcrl
dec
aad
shrl
jp
xor
js
mov
mov
fists
push
jp
push
cwtl
add
cmp
pushf
adc
xor
nop
insl
pop
sbb
imulb
pop
ret
fmul
mov
dec
sub
inc
add
arpl
addr16
sub
shl
shlb
add
add
add
add
addb
sbb
and
or
mov
mov
push
cmp
dec
mov
mov
movsb
mov
mov
fsubrl
xchg
jl
aam
shll
mov
or
mov
std
into
shrl
mov
pop
bound
sub
push
addb
out
pop
pusha
add
push
in
jns
in
out
push
pusha
inc
push
push
ds
hlt
out
and
cwtl
divl
cmp
add
cmpsb
roll
add
jmp
sarl
fucomi
sbb
mov
fdivr
or
mov
pop
sbb
outsl
xor
test
mov
jge
pop
test
movsl
push
push
and
popf
popf
push
add
out
or
fldcw
xchg
lods
lock
fildl
add
mov
in
mov
cmc
pop
push
jg
cli
mov
xor
les
out
cmp
cmp
pushl
xchg
xor
push
xor
add
add
add
mov
fidivrl
stos
xor
imull
sub
out
testb
gs
sbb
ja
lods
xlat
ror
dec
inc
outsb
mov
daa
xchg
inc
push
push
dec
jl
and
aam
mov
fildl
inc
jl
lock
sahf
mov
call
dec
add
popa
push
sbbb
scas
fnstcw
xchg
aaa
push
imulb
movsl
xchg
pop
push
inc
pop
and
jp
adc
push
jle
rorl
and
inc
mov
arpl
xchg
cmpsb
test
das
pop
xchg
adc
xlat
inc
dec
add
xor
add
cmp
shl
loope
ret
push
test
andb
scas
test
xchg
pop
mov
nopl
shrb
mov
leave
sbb
push
ficoms
out
into
mov
xchg
movsl
cmp
dec
test
ja
adcl
push
xchg
xor
jo
add
push
scas
mov
addb
incl
add
dec
push
cmc
jmp
xchg
mov
jbe
dec
les
mov
mov
mov
or
xchg
mov
xlat
out
jb
lds
cmp
lock
repz
and
pop
call
int
popa
in
push
fcomps
sbb
sbb
fstps
pop
mov
data16
lahf
push
push
lcall
mov
or
cmp
sub
jns
daa
stos
xor
in
shll
dec
push
push
icebp
sbb
dec
ret
lods
cmp
push
cwtl
in
stc
sbb
mov
dec
pusha
xlat
mov
dec
jge
jns
movsb
daa
ja
push
xchg
cmpb
xchg
in
stos
mov
repnz
add
push
cwtl
push
mov
adc
aam
xor
cmp
movsl
sbb
or
aaa
xchg
and
movsl
mov
mov
mov
and
incl
add
push
jge
xchg
out
mov
mov
sub
and
push
mov
mov
repz
mov
divb
sub
cmp
out
sbbl
mov
or
push
mov
push
mov
int
lahf
xchg
mov
sbb
or
sub
xor
inc
outsb
out
pop
and
pop
insb
sub
or
jae
das
adc
xor
push
adc
orl
data16
cmpsl
dec
dec
lret
jnp
mov
aaa
inc
inc
out
jecxz
cmp
mov
mov
xchg
aas
push
sub
pop
repz
enter
xlat
inc
xchg
jb
pop
cld
push
mov
jge
and
mov
loope
mov
pop
test
xchg
les
add
ret
push
js
stos
fwait
je
sub
jnp
sub
mov
sub
lahf
das
adc
add
dec
les
fdivl
mov
mov
add
add
test
mov
lret
cmc
jp
mov
adc
xlat
mov
nop
and
aaa
mov
cmpsl
mov
sbb
and
dec
iret
and
adc
iret
xor
mov
ret
shrb
pushf
push
pminsw
xor
and
popf
mov
cltd
sub
stc
pop
jmp
xchg
mov
bound
xor
adc
jg
adc
stos
add
lahf
jp
ljmp
cmp
test
inc
cltd
jg
fcoms
out
rol
test
orl
xchg
pop
adc
mov
addr16
in
xlat
out
mov
xor
arpl
icebp
mov
lods
shl
mov
scas
sub
shrl
rep
push
f2xm1
dec
jecxz
cmp
repnz
cmp
inc
cld
shrl
pusha
sub
xchg
out
fwait
inc
jl
add
mov
mov
lods
imul
pop
cltd
das
xor
push
add
incl
add
out
pusha
add
pop
dec
xchg
or
out
es
mov
cli
ret
push
dec
inc
sarl
lahf
leave
in
or
sub
xor
xor
aas
test
lods
push
gs
fwait
out
xchg
inc
mov
and
sub
sbb
adc
dec
sub
sub
inc
xor
cmp
lods
jp
adc
xchg
arpl
addb
loop
push
aaa
lahf
movb
testb
jae
fiadds
lods
outsb
lods
out
adc
cmp
or
in
fs
mov
mov
sub
arpl
push
data16
xchg
push
subl
mov
xor
adc
or
and
mov
mov
and
sbb
jl
sub
adc
das
push
jae
in
insb
inc
mov
outsb
mov
dec
cmp
scas
pop
stos
mov
xchg
sub
scas
or
cmp
sarb
out
aaa
aaa
pop
add
incl
add
inc
xchg
adc
xor
fisubrs
sub
insb
jmp
jnp
sahf
addr16
mov
lcall
xor
and
in
inc
sbbb
imul
add
jo
add
push
leave
testl
adc
cmpsb
mov
mov
pop
adc
pop
test
inc
sub
push
mov
dec
insb
sub
mov
data16
out
stos
cmp
dec
inc
sarl
push
lfs
xchg
fucomp
sub
dec
xchg
xor
into
pop
xchg
ret
frstor
fdivl
and
repnz
es
pop
mov
push
dec
sub
and
jnp
enter
pop
pop
mov
add
mov
add
adc
sbb
add
dec
lcall
and
jecxz
scas
xlat
movsb
mov
cmp
dec
mov
icebp
add
hlt
fbld
pop
loope
or
add
add
add
clc
loop
sbb
lret
lret
adc
sbb
and
int3
xchg
xor
and
pop
or
or
mov
movsb
inc
ret
cmp
dec
mov
aad
mov
add
push
daa
mov
jb
pop
jle
xchg
mov
stos
push
add
cwtl
xchg
lret
dec
popf
fsubrs
xchg
mov
push
pusha
gs
add
xchg
add
cs
cmpsb
pop
nop
sti
iret
sbb
loop
jns
and
dec
mov
mov
ret
lods
push
popf
adc
jl
and
enter
test
popa
mov
shl
mov
push
inc
sub
fidivrl
adc
jbe
inc
push
test
fwait
out
lods
addr16
aad
and
inc
pop
test
js
loope
adc
cmp
imul
call
mov
mov
popa
pop
stos
jae
mov
mov
into
fwait
add
mov
xorb
add
popa
sbb
fisubrl
cs
orb
add
mov
in
and
insl
dec
sti
jle
xchg
lret
cs
jo
adc
xor
mov
or
out
es
fcomps
ret
cmp
testb
mov
or
out
aad
mov
dec
cmp
inc
jbe
inc
pop
ljmp
sbb
loope
lret
jmp
mov
clc
jnp
sbb
js
xor
dec
and
cmp
jns
sbb
lcall
cmpb
jle
aaa
fidivs
pop
sbb
imul
ja
sahf
cld
nop
cli
movsl
ret
movsl
push
push
xor
sti
test
jmp
mov
std
xchg
std
out
jg
popf
sub
fstl
out
add
sub
loope
ds
pop
push
repnz
add
add
xor
mov
pop
sarb
in
inc
adc
add
add
add
scas
test
xor
ljmp
enter
xchg
scas
pushf
xor
jge
stc
pop
in
daa
ds
in
nop
and
out
mov
jae
stc
xchg
sub
lret
aas
stc
pushf
repz
in
add
ss
mov
mulb
pop
mov
jne
sub
pop
inc
rorl
nop
fimuls
mov
sbbl
jno
jp
es
stc
mov
xor
in
and
sub
mov
cli
mov
loopne
xor
inc
test
cld
and
lds
fldcw
fcomip
ret
mov
leave
jp
push
fdiv
jp
lods
mov
insb
data16
out
pop
and
inc
or
fucomi
sub
aam
das
aas
xor
es
inc
push
iret
jae
mov
cli
sub
shll
inc
xchg
add
inc
out
aas
mov
rol
push
movsb
arpl
or
add
add
add
test
pop
cwtl
pushf
testb
insb
stos
adc
mov
mov
in
add
popw
add
dec
mov
jle
jns
stos
mov
mov
cld
das
xor
loopne
ret
dec
rcll
ficomps
das
push
xchg
cld
aas
or
xchg
fwait
shlb
into
add
xor
inc
push
ret
aad
mov
mov
sti
xchg
aad
mov
enter
mov
inc
ret
fldt
sbb
push
fidivs
xorb
mov
push
sahf
adc
std
xchg
stos
ds
jg
or
int
cmpsb
loopne
push
sahf
push
inc
les
lret
add
imulb
lret
iret
xchg
or
dec
test
int
scas
mov
mov
flds
xor
inc
fs
fnstenv
subl
ja
push
addr16
addr16
mov
loope
in
xchg
mov
add
bnd
dec
leave
and
arpl
xor
add
add
add
add
and
and
fistpll
mov
push
rcrb
and
je
or
push
out
mov
shrb
orl
adc
jmp
dec
xchg
std
push
test
or
test
ds
mov
add
lcall
idiv
jb
cmp
bound
pop
pop
aam
push
repz
into
mov
inc
jg
xlat
in
sahf
cmc
mov
iret
push
fistpl
fwait
cmpsb
push
cwtl
mov
mov
cld
mov
jmp
mov
cmpsl
push
les
fndisi(8087
ret
add
inc
mov
roll
inc
adc
mov
push
jno
xchg
stos
lds
sbb
mov
sub
cmp
add
jb
fisubrl
rcr
loope
mov
xchg
call
loope
into
testb
add
sbb
in
out
ja
filds
and
xor
add
xchg
lods
fildll
sub
ret
or
loopne
mov
std
ret
addr16
xor
pushw
pushf
adc
mov
mov
rcll
outsb
jno
hlt
loop
and
sub
jo
lea
push
bound
mov
mov
test
or
jg
cmp
mov
mov
push
pop
rcl
sub
pop
xor
xchg
imul
sahf
insb
dec
adc
jp
sahf
lcall
inc
ret
fcmovbe
mov
repnz
xor
cli
cli
notl
adc
dec
mov
ljmp
pop
cmp
or
iret
mov
push
inc
mov
ljmp
rol
into
enter
xor
sbb
and
cmc
dec
fimuls
mov
push
adc
cmp
daa
test
out
int
imul
add
add
pop
in
inc
push
or
popa
xchg
xor
add
incl
add
stc
out
lea
addr16
lods
enter
imul
sbbl
mov
incb
test
and
push
inc
lret
pop
imul
dec
adc
mov
test
lea
inc
outsb
cwtl
sub
mov
mov
add
inc
inc
and
pushf
add
cmp
outsl
xor
ja
jl
jo
mov
test
pop
mov
push
mov
icebp
jne
xorl
data16
mov
mov
and
inc
pop
cltd
bound
and
fs
mov
neg
xor
fimull
jmp
cmpb
inc
dec
dec
and
mov
pop
jo
xor
nop
sbb
stos
shlb
mov
xchg
call
jns
mov
dec
rcrb
shll
adc
adc
rep
sub
add
add
jg
neg
pop
daa
inc
cli
xchg
dec
aaa
das
sgdtl
incl
add
mov
jg
mov
xor
cmp
push
fsts
iret
enter
xor
dec
mov
rcll
fs
pop
mov
pop
xor
adc
jecxz
sbb
jl
xlat
sub
add
ret
cltd
xchg
sub
es
add
inc
add
adc
mov
adc
push
icebp
aas
lahf
lret
jp
pop
lock
mov
arpl
inc
lcall
mov
lods
xor
leave
out
lret
ljmp
cmpsl
sti
or
sarl
sbb
adc
sub
mov
dec
dec
mov
daa
fsub
jp
pushf
jns
push
xor
pop
mov
dec
enter
stc
popa
into
in
in
and
sub
rcrb
jae
outsb
jnp
jecxz
jecxz
or
mov
fsubs
int
or
test
push
ja
cmp
sti
jg
cmp
je
add
scas
xchg
adc
add
add
add
dec
and
cmp
push
stos
out
push
cmpsb
xor
mov
cmp
xchg
cmp
push
aad
mov
sbb
int3
movups
xchg
mov
in
push
inc
and
inc
test
aam
std
cltd
pop
loope
rcrb
ret
and
jge
hlt
addb
push
aas
icebp
sub
pop
stos
aad
cmp
int3
adc
jne
push
aas
xchg
mov
daa
sbb
add
ja
je
outsl
mov
sub
push
xchg
loope
decb
test
and
sub
shl
ljmp
push
push
mov
pop
jnp
and
cli
mov
adc
mov
push
sub
test
add
fsqrt
mov
fucomip
mov
dec
mov
mov
pusha
jnp
das
bound
xchg
jo
hlt
xchg
mov
lcall
pop
andb
sub
lcall
scas
aam
jnp
fstp
fcompl
outsb
ds
shrb
add
add
jno
je
sbb
shlb
fcmovnu
aam
mov
fisubrl
xorb
mov
lahf
imul
mov
movsb
and
lret
adc
cmp
xchg
aas
sub
lret
pop
pop
pop
adc
cmpsl
dec
push
pop
sub
dec
inc
js
pushf
mov
mov
adc
add
xchg
cld
daa
sti
pop
push
xlat
call
add
scas
or
out
pushf
icebp
pop
leave
cwtl
mov
lods
jne
fiadds
test
and
lods
aaa
add
mov
repnz
out
sub
xchg
jg
cmpsl
sub
clc
movl
lods
inc
mov
lock
mov
mov
mov
insl
inc
mov
and
and
pop
ss
loop
inc
movsb
sub
aas
xor
mov
jno
std
outsl
mov
add
jno
out
adc
add
add
add
adc
ss
fcoms
xorl
loop
sahf
dec
hlt
lds
daa
ret
inc
jmp
jmp
xor
adc
xor
jb
fabs
cmp
pop
dec
sub
les
lcall
shrb
out
or
fildll
xchg
int
sbb
out
mov
add
and
fistpll
mov
imul
dec
xchg
insb
stos
add
jae
xor
rorb
sbb
stc
mov
add
sbb
pop
je
lcall
jmp
flds
mov
and
add
nop
lret
jecxz
mov
sahf
pop
pop
jbe
movsb
and
inc
sti
adc
push
fcmovu
ljmp
xchg
fwait
jp
dec
and
or
adc
inc
cli
ret
mov
insl
xchg
jmp
loope
out
fistpl
push
jns
mov
cltd
jbe
aaa
fldl
sbbb
loope
jmp
fnstsw
test
adc
add
add
add
movsl
or
pop
adc
adc
mov
imull
or
mov
sahf
icebp
nop
repz
das
pop
dec
lret
push
cwtl
push
lret
pop
cmp
mov
int
sub
arpl
sbb
stos
pop
inc
fsubr
movsb
mov
lods
lcall
sbbb
cli
mov
mov
sub
mov
scas
iret
pop
push
aaa
add
icebp
and
scas
lods
rol
xor
das
sub
lods
out
cs
popa
or
dec
outsl
cmp
add
ss
mov
xchg
cltd
pop
mov
loop
jle
cli
pusha
xchg
and
enter
add
xor
rcll
into
mov
loopne
xlat
sub
xor
insl
aas
das
jo
mov
jno
mov
or
and
shlb
add
add
xor
test
sub
add
add
mov
xor
mov
in
mov
call
mov
xchg
pop
xchg
int
pop
mov
popw
ret
gs
cli
ret
jl
sbb
dec
cmpl
adc
pop
hlt
test
inc
test
push
cwtl
les
imul
stc
pop
pop
xchg
fistl
aam
dec
push
mov
xor
mov
stc
xor
mov
repz
xchg
test
repnz
loop
add
int3
and
adc
inc
in
xlat
test
add
jge
and
mov
inc
pop
mov
jns
and
scas
cmp
outsl
pop
fnstcw
nop
and
cmp
in
jo
lods
out
mov
push
imul
out
jecxz
dec
test
or
xchg
inc
xlat
jmp
push
mov
movsb
cmp
lds
push
jmp
repnz
add
dec
cli
inc
jg
int
xchg
lods
or
outsb
dec
ja
adc
add
xchg
dec
or
or
call
popf
push
mov
sub
imul
iret
test
aas
std
inc
push
inc
fsubl
sub
fwait
test
jnp
mov
data16
fiaddl
push
sbb
subps
ret
push
js
cltd
std
test
jnp
cmpsb
gs
pushf
idivl
xorb
mov
push
cmp
add
ja
int3
jp
mov
mov
and
mov
in
mov
sti
dec
stc
cld
jge
popa
and
mov
sbb
dec
rorl
jge
test
call
add
inc
sbb
fwait
mov
xlat
testl
cs
jp
ret
ret
jae
sub
lds
adc
andl
xchg
mov
jle
pop
movl
inc
xchg
mov
or
pop
dec
fwait
sub
and
xor
xchg
sub
lock
std
cmp
jle
fistpll
fisubl
je
sub
add
incl
add
push
mov
adc
jg
inc
inc
mov
dec
jmp
scas
pushf
mov
sub
xchg
hlt
jb
mov
sbb
sub
ret
jecxz
arpl
and
pop
jnp
out
jle
lret
dec
rolb
xlat
xor
or
mov
sub
mov
stc
rclb
js
lods
pop
lret
in
sbbb
add
in
outsb
dec
xchg
fstps
and
les
int
gs
mov
addr16
rclb
ljmp
adc
xor
in
lds
adc
outsb
push
dec
xchg
sub
pop
fidivrs
int
cmp
aas
inc
mov
daa
xor
into
push
adc
and
jbe
std
sti
xchg
loope
sbb
mov
xor
inc
iret
fsubrl
mov
lods
inc
in
fldl
cmp
xadd
add
dec
lods
dec
jnp
sbb
mov
add
iret
xlat
ficompl
inc
add
pop
add
incl
add
inc
push
pop
xor
incl
push
cmp
int
add
jo
notb
mov
xchg
bnd
xlat
jecxz
lods
out
cmp
imul
lahf
lods
cli
dec
in
mov
clc
xchg
sub
cmp
adc
dec
add
mov
xor
loop
adc
add
pop
add
jmp
dec
xchg
xor
lds
jp
sub
lods
popf
das
cmpsb
scas
pop
xor
mov
jmp
mov
clc
pop
int3
addr16
fmull
jecxz
xchg
pop
fucomp
mov
push
mov
sbb
and
les
jmp
and
mov
sub
ret
mov
push
mov
mov
loopne
out
repz
into
sbb
leave
jmp
in
mov
mov
popf
psllq
inc
push
push
pop
push
iret
push
and
jns
sti
sbb
in
ret
outsb
loop
jne
xchg
add
sub
iret
outsb
jmp
push
test
add
dec
sbb
add
add
add
cld
movsb
jbe
xlat
dec
es
push
loop
test
dec
sbb
stos
cltd
sub
pushf
imul
cmp
rolb
outsb
jecxz
lret
mov
xor
loop
in
jge
lahf
push
rorb
mov
sub
fnsave
subl
repnz
xor
pop
push
stc
jg
fidivl
pop
jb
call
push
xchg
pop
pop
and
pop
into
loop
or
mov
xchg
test
std
xor
jns
xchg
lcall
pop
mov
or
repz
insl
in
or
adc
rclb
dec
pop
push
xchg
lds
mov
mov
ret
push
or
xchg
xchg
cwtl
loope
push
cmp
mov
and
mov
enter
imul
call
or
dec
imul
fadds
sbb
std
sbb
stc
cld
or
mov
sbb
add
add
add
outsb
ja
loope
jp
mov
ja
sahf
out
inc
jl
jae
xlat
push
xchg
mov
sti
dec
sbb
cltd
jbe
pop
sbb
roll
insl
mov
add
out
add
stos
test
fisttps
sbb
push
imull
mov
sbb
scas
jb
inc
hlt
gs
test
cld
lods
fidivrl
or
out
in
ja
pop
or
and
gs
fimull
out
mov
jg
shll
mov
fcomps
sbb
out
push
sub
lret
mov
mov
call
repz
dec
and
mov
fldl
jnp
cmc
mov
shlb
dec
arpl
cmp
jg
add
ret
xchg
cmp
jno
popa
push
movsl
cltd
add
lret
and
fisubs
cmp
dec
add
adc
and
or
mov
mov
add
rolb
add
add
pop
test
scas
repz
cld
adc
sbb
and
add
incl
add
decb
lods
sbb
cld
aam
test
popa
push
or
dec
mov
cli
out
add
inc
cmp
loope
clc
test
scas
xchg
or
scas
mov
add
push
pop
aas
cmpsb
inc
or
daa
mov
jne
and
push
fidivrs
shlb
arpl
inc
or
xchg
xchg
mov
pop
sbb
test
cmp
cld
movsl
icebp
inc
loopne
dec
or
dec
push
dec
or
repz
and
or
in
mov
cmp
lock
or
into
or
insb
addr16
out
and
mov
mov
xchg
movsl
daa
xor
popf
sub
adc
adc
int
add
out
mov
scas
mov
sbb
daa
pushf
popf
mov
shlb
bound
dec
dec
fadd
sbb
aam
stos
ret
and
ljmp
or
stos
add
dec
pushl
in
xchg
inc
and
add
incl
add
outsl
pop
roll
push
adcb
push
sarb
icebp
inc
inc
fsubs
lret
mov
fwait
mull
adc
pop
out
cmp
test
das
loopne
cli
xchg
mov
inc
icebp
and
jae
testl
sti
xchg
add
mov
and
iret
push
push
inc
lahf
scas
lahf
call
pop
push
mov
xchg
fnstcw
es
enter
cmp
shll
pop
sub
js
sub
pop
in
jp
sbb
sbb
sbb
and
outsl
out
push
mov
mov
mov
mov
inc
push
mov
xchg
xor
add
fidivrs
lods
ljmp
adc
mov
ljmp
pop
dec
lret
push
ficoms
gs
pushf
xor
mov
push
loopne
addl
or
mov
inc
mov
pop
sub
inc
ja
pop
aas
dec
push
pop
mov
add
incl
add
dec
push
nop
pop
into
outsl
or
mov
dec
lcall
inc
test
pop
pop
out
sbb
adc
enter
add
loope
adc
cmc
fidivs
mov
and
inc
jp
add
adc
mov
insb
sub
hlt
pusha
imulb
inc
cmp
jb
lods
in
dec
pushf
pop
jne
in
out
jecxz
fists
mov
rcrl
orb
mov
sub
idiv
mov
cli
movsl
pop
mov
mov
fwait
xchg
or
outsl
inc
adc
fcoms
test
lahf
rolb
icebp
pop
mov
js
dec
aaa
mov
sub
imul
inc
adc
imul
xor
ret
mov
lret
adc
sub
mov
pop
inc
push
xchg
ss
repz
popf
mov
push
rcrl
test
js
xchg
dec
jl
sub
add
xchg
jae
ja
div
mov
mov
add
incl
add
cmc
and
jecxz
jl
mov
std
out
or
es
fxch
stos
in
mull
inc
lcall
jecxz
test
sbb
add
fbld
dec
inc
mul
stos
jmp
inc
sbb
popa
stos
rol
push
outsl
pop
idivl
gs
mov
imul
push
adc
mov
jge
sub
xor
sub
out
cmp
push
xchg
dec
addl
sub
fs
ja
clc
push
fcompl
mov
jno
or
cmp
ja
hlt
and
fcoms
addr16
sub
push
mov
cmp
mov
rcrb
jno
mov
fcomi
aaa
pop
sbb
jge
in
dec
cwtl
shrb
ja
jnp
mov
and
aaa
loopne
mov
std
mov
lock
mov
mov
add
cli
std
jg
push
pushf
dec
add
add
incl
add
jb
push
imul
outsb
mov
mov
in
dec
jl
xor
push
and
mov
xor
xchg
std
ficomps
scas
cmp
push
lock
push
fistps
out
daa
dec
and
sub
aas
xchg
fiaddl
dec
xchg
in
jns
or
sbb
xor
push
mov
es
mov
sbb
add
fisubl
inc
sbb
xor
pop
mov
jns
ss
mov
xchg
stos
insb
push
mov
fidivl
mov
js
mov
inc
fs
xor
in
xchg
movsb
call
jmp
ror
into
add
sbb
mov
in
sbb
sbb
mov
lea
push
lods
test
pop
mov
sbb
inc
mov
ja
add
add
mov
std
incl
sbb
ljmp
add
add
add
and
daa
fstps
inc
or
jmp
aas
pop
fs
icebp
jns
xchg
filds
iret
clc
pusha
fwait
jnp
xchg
sbbb
xor
outsb
loopne
add
fstpt
bound
cmc
mov
fidivrl
mov
and
clc
imulb
mov
lods
inc
push
and
addr16
xchg
test
iret
notl
repnz
add
decb
cmp
sahf
mov
xor
mov
add
jg
inc
shr
dec
inc
sbb
repnz
adc
sbb
pop
adc
out
sbb
adcb
and
mov
cmp
pop
mov
dec
sbb
push
lock
inc
adc
xchg
cmpsb
dec
mov
dec
insl
xor
push
sahf
jns
insl
adc
stc
scas
repnz
xchg
ja
mov
movsl
fldl
add
icebp
cwtl
insl
aam
lret
pop
jns
hlt
or
mov
rcrb
add
es
jg
pop
or
xor
adc
and
add
add
add
cmpsl
sub
sub
push
xor
jecxz
lea
adc
les
bound
mov
fcompl
div
test
mov
popa
xchg
adc
and
loope
dec
jbe
lcall
clc
or
ret
mov
adc
es
daa
insl
push
and
mov
sub
repz
push
jae
aam
pop
rol
xor
in
mov
pushf
outsl
sub
dec
fiadds
pop
push
jo
movsl
cmpsl
mov
add
and
movsb
mov
and
popf
aaa
popf
clc
sbb
adc
push
lods
leave
mov
push
sti
sti
insl
adc
inc
lods
insl
push
movl
sbb
add
mov
mov
lods
xchg
adc
mov
push
inc
pop
test
les
adc
dec
push
xchg
pop
sbb
and
mov
push
clc
or
dec
push
cmp
and
add
add
add
shlb
rorl
pop
add
lock
lods
xlat
jg
adc
test
lret
cmp
pop
rclb
and
mov
rcll
stos
fs
in
mov
cmp
or
or
cwtl
cwtl
int3
js
lock
and
stc
jnp
pop
out
es
jg
sub
testl
adc
dec
jno
lods
out
scas
lods
jae
mov
dec
or
clc
sar
and
lods
mov
gs
gs
mov
ljmp
push
jg
dec
mov
and
loopne
mov
sbb
xchg
data16
jmp
pop
inc
lea
movsb
aad
mov
and
mov
cmp
andl
dec
xchg
cmpsl
mov
add
or
in
add
rcll
cmp
pop
mov
mov
cmpsb
or
int
stos
inc
out
fadds
mov
push
add
xchg
bnd
add
stc
lods
xor
mov
jge
sbb
add
incl
add
lahf
jl
or
sub
inc
mov
pop
ds
stc
jb
hlt
ljmp
pusha
sub
push
imul
and
cmpl
xor
inc
sbb
fxch
imul
mov
hlt
cli
cwtl
inc
add
xchg
jae
dec
xchg
stc
shl
rclb
ja
mov
shlb
dec
adc
xchg
jmp
pop
stos
sbbl
es
or
adc
lds
add
nop
repz
adc
lahf
retw
ss
shr
test
lds
pop
sub
jns,pn
repnz
jns
or
cmpsl
and
sbb
xlat
sub
xchg
ret
shr
push
in
jle
je
icebp
jecxz
imul
cmp
test
mov
loopne
cmpsl
pop
mov
mov
inc
cmp
xchg
movsb
mov
cmp
or
sbb
jo
mov
ja
frstor
and
add
ficoms
stos
sbb
call
mov
sbb
add
incl
add
ds
rcrl
ja
ret
lock
in
xchg
sarb
outsb
insb
ret
jmp
pushf
push
push
or
outsb
ret
shll
mov
pusha
fbstp
into
mov
fcoml
fcom
aaa
add
push
cld
push
and
pop
mov
out
push
addr16
out
adcb
sub
jne
sbb
sbb
push
jge
adc
and
pop
int3
in
or
inc
or
or
mov
sub
aam
mov
jns
sub
fnstcw
es
in
cmp
push
or
arpl
push
cmp
test
and
out
jp
hlt
cltd
adc
mov
es
subl
jmp
mov
dec
test
mov
mov
dec
mov
cmp
jno
add
in
out
stos
jge
or
and
add
add
add
ftst
sti
lcall
mov
push
out
bound
add
xchg
fisubs
inc
hlt
rcrl
jbe
daa
dec
aas
sub
fisubrl
les
lods
loope
or
mov
rcr
pusha
dec
in
cmp
fisubl
je
cmp
push
pop
sbb
jne
cwtl
js
rcrb
test
or
xlat
dec
jmp
fiaddl
int3
pop
fstpt
cwtl
and
xlat
mov
fs
dec
inc
jp
push
and
test
dec
sbb
xor
clc
xchg
js
test
push
jp
fiaddl
push
pop
or
mov
andps
xlat
inc
sarl
mulb
jle
daa
js
xor
lcall
mov
jle
int3
cltd
jmp
test
les
xchg
orl
movsb
das
mov
stos
lods
dec
cli
mov
mov
je
dec
or
out
xchg
iret
push
aas
test
sahf
mov
incl
add
mov
jle
js
jae
in
or
add
fsubrl
lret
int3
pusha
ljmp
lea
jno
imul
add
push
fld
push
sub
mov
mov
lods
push
and
add
pop
xchg
dec
mov
iret
adc
xchg
xor
sbb
out
clc
clc
fnstsw
call
in
test
cmpsl
adc
pop
push
xchg
sub
mov
in
js
lods
mov
mov
or
addr16
loope
mov
or
push
mov
xor
jg
inc
jb
rol
imul
lods
test
xor
popf
pop
push
movsl
call
aad
push
mov
out
fwait
cmp
sahf
out
inc
cli
shl
adc
jae
add
lods
ret
shrl
aas
in
roll
into
outsb
fcomps
push
xchg
aam
leave
roll
aam
add
cmp
out
loope
jns
jecxz
aas
sbb
add
incl
add
inc
jp
out
pop
pop
mov
iret
jg
or
mov
mov
iret
sarl
pop
shrl
aaa
and
xchg
rcl
push
jns
add
xor
aad
mov
movsb
jns
data16
sahf
jecxz
jmp
mov
xchg
or
cld
mov
adc
inc
adc
ds
adc
scas
inc
pusha
push
lea
push
inc
movsb
sub
mov
xchg
outsb
push
cmc
pop
ret
and
push
sub
fwait
aaa
sub
ss
call
push
cmp
cmpsl
mov
ds
push
push
fnstenv
cmp
and
xor
dec
sub
mov
loopne
fdivs
lahf
lahf
mov
ljmp
stc
xchg
dec
out
aad
mov
push
repnz
in
cmc
pop
add
lcall
lea
lret
or
in
dec
insl
mov
adc
mov
dec
daa
and
add
lods
jg
push
mov
leave
lahf
in
adcb
add
incl
add
mov
pushf
or
and
and
ja
aam
ret
pop
js
and
add
jmp
into
out
adc
shll
xchg
cmpsb
sbb
adc
xchg
in
outsl
pop
xchg
orl
stc
aas
fld
pop
cmp
icebp
jno
xor
movsb
incb
pop
lret
cmp
mov
and
loop
mov
mov
push
cmp
or
push
repnz
add
fdivs
xchg
sbb
mov
jg
cmp
and
xchg
inc
imul
cmp
jg
clc
cs
jecxz
push
push
cmp
lret
lcall
lods
add
mov
inc
xchg
test
add
stos
add
in
cmp
shrl
xor
push
cld
outsl
dec
das
mov
pop
mov
ja
pop
jl
mov
lds
or
add
mov
dec
idivl
cld
ret
add
lcall
incl
add
mov
push
add
fdivrl
sbb
xchg
aas
dec
insb
bound
rsqrtps
mov
lcall
sbb
xor
ret
leave
nop
xchg
mov
or
idivl
imul
dec
mov
imul
inc
fwait
scas
and
icebp
int
in
insl
push
test
cmp
cmp
aaa
inc
mov
stos
xchg
enter
dec
in
jo
push
out
and
pop
push
mov
pop
inc
inc
dec
xlat
sbb
insl
xchg
setge
push
fwait
sbbb
rcl
stos
fwait
and
mov
lcall
imul
fs
out
cmp
mov
leave
dec
xchg
jge
mov
inc
in
or
pushf
arpl
jbe
inc
sbb
pop
cmpsb
pop
fstpl
test
jnp
sub
pop
add
mov
iret
mov
xchg
repnz
adc
add
add
arpl
es
in
dec
dec
sub
mov
jl
or
mov
int
ror
xor
push
xchg
xchg
mov
push
rorb
push
daa
mov
mov
xchg
push
or
or
bound
int
repnz
cmpsb
xchg
daa
aaa
adc
and
jae
jg
pop
push
clc
aam
mov
xor
std
mov
inc
outsb
inc
pop
arpl
cmp
jns
mov
and
ficoml
cmp
mov
pop
les
sub
aad
gs
xchg
out
imul
or
stos
push
jp
pop
inc
jns
loop
ret
pop
jnp
fsubrs
stos
add
int
cmpsl
jns
outsl
dec
in
adc
cmpsl
cmpsb
xor
jecxz
in
cltd
adc
out
cli
and
leave
and
dec
std
or
out
outsl
add
mov
jg
arpl
hlt
stos
or
add
incl
add
push
insb
popa
outsb
adc
dec
pushf
mov
dec
pushf
xchg
outsb
mov
cltd
cmp
loope
out
adc
leave
addr16
inc
out
popa
inc
or
iret
fs
int3
fwait
rorl
sub
nop
adc
xor
xor
xchg
dec
andb
lahf
mov
pop
fs
dec
push
or
inc
dec
fs
xchg
test
out
adc
push
cmpsb
push
mov
or
fs
jne
sar
mov
sarb
sbb
lret
in
jg
stos
jne
out
jmp
out
repz
out
pusha
idiv
in
fidivrl
jae
das
ficomps
ffree
jp
cmpsl
sbb
das
jg
daa
sahf
cmp
sahf
pop
push
negb
outsb
jns
jbe
mov
and
in
dec
sahf
inc
jg
lcall
cld
xlat
popa
cmp
cmp
xchg
in
popa
and
loopne
insb
push
je
pop
inc
ret
je
loope
add
add
xor
clc
cli
clc
sarb
sti
mov
shrl
sub
add
add
add
cmp
sbb
mov
xchg
in
xor
xor
inc
dec
mov
or
sbb
and
dec
jmp
jmp
sub
jbe
xlat
popa
jae
push
stos
jmp
pop
test
lods
scas
dec
divl
adc
imul
mov
dec
out
lds
sbb
cmp
daa
nop
popf
mov
dec
nop
test
fs
or
into
lods
idivb
cmp
imul
pop
add
xchg
movsb
xchg
cmpsb
jo
xor
and
mov
lock
xor
movsb
popl
jbe
bound
movsb
or
sub
xchg
cmp
mov
lea
int3
arpl
jo
mov
ljmp
or
push
pop
inc
xor
xchg
lahf
stc
fdivl
lods
cmc
push
subl
imul
add
add
jnp
out
mov
cmpsb
lods
adc
add
add
add
loope
mov
mov
cmp
mov
outsl
stos
push
mov
shrl
test
aaa
lea
xchg
pop
dec
or
pushf
or
xchg
daa
mov
cld
or
out
and
roll
icebp
test
pop
iret
les
jne
adc
outsb
inc
imul
mov
dec
inc
push
scas
xor
cmp
jno
cmp
push
xchg
fstpl
push
aas
scas
and
aas
pop
fmuls
movsb
push
adc
lret
mov
or
and
aas
dec
cmp
aaa
sbb
cltd
adc
addr16
xor
gs
das
inc
push
movsl
push
lea
xchg
mov
stos
or
adc
inc
ds
xchg
sar
fidivs
xchg
cmp
adc
shrb
jb
dec
lds
arpl
add
es
data16
insb
daa
mov
nop
sbb
incl
add
inc
xchg
lds
or
and
cmc
outsb
scas
inc
pop
fiadds
push
scas
add
cmc
inc
es
xchg
push
js
js
jle
jno
xor
mov
insl
data16
mov
aaa
push
sub
adc
in
movsb
in
xor
sub
mov
sbb
data16
jmp
test
pushf
insl
mov
pop
cmp
es
imul
cmc
ret
cld
testl
bound
sub
push
clc
mov
add
aaa
xchg
popf
inc
lahf
stos
cmpsl
not
dec
sub
lds
cmp
sbb
arpl
push
jno
pusha
les
mov
aaa
mov
aas
lea
adc
jge
jo
iret
jp
ds
add
dec
or
sub
std
and
adc
inc
xor
mull
add
pop
add
fwait
lods
negb
fs
adc
add
dec
mov
imul
loopne
adc
add
incl
add
lret
cmp
and
mov
mov
push
arpl
add
test
dec
dec
call
insl
sub
fdivrs
jge
std
movsl
push
stos
cltd
mov
hlt
mov
in
mov
xor
fildl
loop
pop
arpl
cmpl
pop
bound
mov
in
fdivrl
out
push
push
pop
arpl
xor
mov
hlt
xchg
loop
addr16
mov
and
xlat
repz
mov
sbb
inc
je
sbb
cmp
insl
add
cmp
insb
xchg
sbb
es
dec
call
ja
jns
push
jp
mov
xor
sbb
pop
dec
insb
jbe
dec
cld
sbb
xorb
clc
pop
or
std
aas
push
and
mov
fcmovbe
cmc
jae
aam
shll
mov
add
and
push
sti
cmpsl
enter
push
rclb
comiss
add
add
add
sti
popa
cmc
pop
adc
and
addb
call
outsl
fisubrs
push
jecxz
adc
sub
enter
andb
pop
lods
test
inc
pop
jmp
stc
lea
push
jle
cmp
fcomps
scas
or
imul
jo
mov
fcompl
or
iret
fdivl
inc
in
dec
xlat
jge
aam
mov
js
sbb
or
movsl
outsb
test
cld
xchg
push
mov
cltd
fwait
and
outsl
mov
cmc
sbb
repnz
add
sbb
push
pusha
dec
jecxz
out
pop
push
sub
hlt
shll
sarb
js
adc
mov
xchg
rolb
pushf
jl
sub
push
fimuls
sbb
dec
popf
out
push
shrb
xor
or
out
call
popf
or
xchg
lcall
fisubl
add
cmp
add
mov
std
mov
dec
push
sbb
dec
sbb
xor
add
add
add
fcoms
repnz
addr16
jle
ficomps
pop
jl
dec
sub
jno
lods
sub
mov
hlt
add
push
out
sbb
xor
push
dec
jnp
push
adc
imul
push
repz
mov
xor
lods
movsl
and
and
arpl
mov
andb
mov
xchg
xlat
out
iret
test
dec
js
aam
sti
std
fs
lods
js
and
test
cmpb
pushf
sub
xchg
lcall
cmp
adc
daa
ret
inc
sbbb
outsb
aam
xor
lea
inc
jge
xchg
xor
xchg
rcll
xor
in
xchg
out
stos
mov
jg
js
add
dec
mov
cld
adc
das
das
je
pop
shlb
lret
jns
fsts
aaa
xchg
pop
fsubr
inc
jl
jle
pop
test
cli
outsl
push
call
add
and
jecxz
and
lcall
add
incl
add
xchg
addr16
xor
jnp
dec
xor
dec
pop
fidivrs
fs
aas
repz
xor
add
or
jmp
ret
jle
pop
adc
cmp
roll
mov
mov
fbstp
andb
jecxz
pop
mov
cmc
nop
jl
daa
lea
mov
popa
iret
ja
rclb
rclb
mov
addb
repz
jge
sahf
cmc
inc
in
cmp
push
movsl
mov
push
push
loop
pop
jbe
and
fdivs
addr16
loopne
movsl
ret
cmp
sbb
or
mov
xchg
push
daa
pop
jae
shrl
mov
ror
jle
adc
adc
in
inc
pop
scas
neg
xor
insb
ficoml
adc
cmc
clc
lock
dec
loope
pushaw
jl
pop
cmc
shrl
push
in
mov
dec
es
pop
add
add
xchg
ficomps
cmp
lahf
and
xor
add
add
add
add
mov
and
std
mov
lcall
cwtl
jl
or
adc
sahf
or
lahf
lret
mov
xor
jo
mov
clc
pop
loopne
data16
xchg
cmp
mov
ret
mov
stc
addb
fstps
in
scas
mov
shll
pop
jecxz
mov
outsl
addr16
xchg
xorl
arpl
mov
test
push
cld
inc
popf
adc
jo
push
xor
mov
pop
into
mov
add
xor
or
popa
pop
jnp
cld
pop
jmp
cld
stos
dec
pushl
xchg
push
leave
popa
arpl
data16
push
push
push
or
adc
mov
ljmp
leave
or
inc
fcoml
xor
add
aad
push
sar
sub
testb
add
add
lods
xor
mov
cmp
dec
pop
pop
or
add
incl
add
dec
pop
pop
shl
aas
inc
mov
mov
or
xchg
jae
mov
lea
push
and
inc
mov
out
mov
in
fcomip
leave
mov
aad
das
xor
cmp
out
icebp
leave
push
jae
push
lds
cwtl
pop
roll
or
pop
addb
cmpl
insl
mov
movsl
ja
or
ret
xor
es
cmp
shrl
mov
aam
mov
cli
xchg
sti
add
stos
xor
adc
jne
mov
jge
cmpsb
movsl
test
roll
dec
fistpl
fs
test
push
aad
sbb
xchg
and
or
inc
cmpsb
scas
pop
in
bound
int
push
xchg
test
sti
dec
and
stos
ds
gs
mov
ror
movl
xor
ja
jecxz
shl
inc
test
cmpsb
mov
aaa
dec
out
mov
cli
xor
push
add
lret
mov
or
and
sbb
or
add
add
add
and
fstl
les
inc
pop
pop
pop
inc
popa
add
aaa
std
loope
and
loop
inc
bound
mov
leave
fst
push
stos
adc
sub
out
xchg
mov
inc
push
xchg
stos
sar
pop
mov
sbb
stos
or
lret
ljmp
out
cmc
sub
mov
lret
xor
les
xchg
mov
cmp
stos
push
and
jne
xlat
pusha
mov
sarb
cmpl
sbb
push
int
fildll
int3
push
xchg
dec
sub
loopne
push
inc
xorl
cmp
push
mov
mov
and
pop
jo
and
rorb
repz
push
test
inc
fwait
and
xchg
jns
mov
fiaddl
lcall
divl
and
mov
cwtl
xor
idivb
aas
cmpsl
popf
inc
ret
js
add
sti
pop
jge
neg
hlt
add
adc
xor
add
cli
orl
sbb
out
leave
push
pop
into
bound
sub
mov
loopne
add
test
scas
sbb
and
dec
mov
out
push
mov
ret
test
mov
mov
in
cltd
lods
pop
xor
loope
cld
and
sbb
test
push
mov
stos
addr16
ja
imul
outsl
lcall
nop
test
cli
jno
jns
sbb
push
cwtl
test
dec
mov
inc
cli
rorl
xchg
sub
aam
pop
insl
orb
or
rorl
xor
in
sub
xorl
inc
addr16
jbe
in
xchg
mov
xor
idivb
mov
push
int
inc
adc
shll
add
adc
bound
lcall
cmp
push
shlb
in
sub
cmp
jge
push
lds
pusha
cltd
fsub
std
in
popf
in
stc
jmp
mov
push
sahf
or
add
incl
add
mov
imul
jns
or
adc
test
mov
loopne
sub
insl
push
testl
pushf
mov
cmp
js
gs
xchg
mov
pop
test
out
sahf
testl
repz
out
fdivp
fistpll
cli
ja
dec
scas
and
sbb
loop
xchg
fsincos
push
out
roll
mov
push
mov
cmp
data16
dec
mov
and
and
int
arpl
int
jmp
mov
sahf
mov
int
xchg
and
lret
push
arpl
in
xchg
movsb
or
arpl
in
mov
jo
int
sbb
sbb
mov
test
mov
mov
inc
sbb
icebp
cs
cmpsb
shlb
push
repz
jecxz
inc
leave
and
arpl
and
orl
adc
dec
daa
lock
add
jp
jnp
sti
xchg
jle
jp
lods
xchg
lods
sub
incl
add
xchg
std
rclb
stos
test
jbe
xor
jge
pop
in
ds
popf
jge
ss
popa
mov
enter
adc
adc
or
stos
movsb
cmp
sub
adc
push
cmp
xor
test
push
push
les
sub
mov
aam
pushf
inc
mov
js
mov
js
ffree
and
jo
push
mull
jo
xor
mov
mov
out
pop
inc
sub
repz
notb
in
add
pop
test
cld
imul
jl
aad
cmpsb
xor
pop
or
int
push
hlt
add
cmp
fstps
inc
pop
xchg
ja
and
sub
jno
or
xor
cmovo
clc
cmc
push
inc
fs
dec
inc
ret
daa
inc
add
loopne
and
mov
pop
sbb
negl
mov
push
sti
decb
mov
loopne
cmp
add
add
add
and
loope
xlat
call
or
lods
dec
xchg
xchg
in
jb
mov
jge
cld
mov
test
stos
loopne
aaa
jo
scas
fcmovnu
clc
repnz
dec
lret
ljmp
mov
cmp
out
fstps
in
test
adc
push
sahf
fwait
cmpsb
sbb
inc
mov
add
push
fwait
sbb
int
loopne
push
mov
sbb
stos
mov
or
mov
xlat
mov
jo
and
nop
icebp
dec
arpl
sub
sub
inc
mov
sub
push
bound
jg
mov
dec
mov
insl
fdivp
dec
jbe
or
in
das
jg
inc
fwait
test
mov
cmpsl
cmp
adc
jmp
loope
repnz
inc
sti
and
dec
ja
push
ret
cmp
xor
hlt
in
pop
sbb
add
add
out
mov
push
fbstp
mov
sbb
mov
sbb
mov
or
pop
outsb
and
push
xor
sub
jne
pop
sbbl
xor
movsl
or
clc
shl
lret
lea
daa
push
xchg
imulb
inc
mov
call
pop
stc
push
cmp
sbb
paddq
mov
sub
mov
mov
sub
push
cmp
xlat
ja
outsl
cwtl
ja
ja
roll
nop
sbb
pop
test
xchg
cmp
insl
xor
jle
test
stos
orb
lods
xchg
jbe
jg
mov
int3
cltd
fwait
mov
fdivl
mov
mov
xor
js
pop
sbb
sahf
pushf
in
cmpsl
sub
inc
mov
rcr
dec
movsb
fsubrp
test
es
mov
incb
ljmp
ds
aas
mov
incl
add
test
sub
lock
into
das
aaa
popa
lret
sahf
mov
inc
es
sarb
pop
add
cmpsb
mov
popa
cwtl
xchg
cmp
dec
stos
rcr
rol
aam
prefetch
pusha
icebp
insb
xchg
out
mov
pop
push
ja
test
loope
pop
popa
sahf
or
mov
bound
push
idivb
push
mov
add
mov
cmp
jnp
and
aas
enter
xchg
xor
loope
dec
pop
in
lret
hlt
rcl
aad
movsb
ret
loope
add
pop
jle
mov
mov
or
mov
outsb
arpl
js
cltd
aas
lret
int
xchg
mov
test
out
xchg
mov
scas
mov
cmp
fsubs
pop
leave
push
popa
mov
push
add
insl
cld
insb
sub
les
mov
scas
cmp
sbb
sbb
ror
xchg
mov
add
rclb
nop
lcall
cmp
add
add
add
push
dec
mov
inc
xchg
or
inc
js
daa
movsb
sbb
dec
sbb
xchg
das
fmull
les
arpl
xor
clc
imul
in
iret
popf
adc
xor
mov
sbb
sub
jb
mov
mov
mov
les
leave
adc
repz
lock
shl
clc
xchg
and
jmp
add
stos
fs
xor
rcrb
ljmp
jae
jb
shlb
cmp
push
xor
mov
aad
lock
sbbl
xor
andl
pop
in
jnp
xchg
jmp
lods
sub
mov
and
inc
sub
pop
push
ds
cmp
sbb
ret
push
aaa
mov
idivb
pop
dec
jnp
push
out
in
dec
and
pushl
inc
adc
add
jbe
idivl
or
std
pop
mov
incl
add
int
mov
push
imul
imul
inc
pop
outsl
add
adc
jg
push
xchg
xchg
test
xchg
push
mov
pop
or
jnp
xchg
dec
mov
lock
ja
mov
xchg
mov
add
lret
xor
aas
mov
push
ja
dec
out
inc
xor
mov
cmp
test
pop
in
adc
adc
imulb
inc
cmpsb
loopne
add
sub
and
cli
push
xchg
test
sbb
cmpsb
cli
hlt
lahf
xor
cmp
arpl
push
fisubrl
stc
mov
push
fidivrl
in
cwtl
mov
push
or
mov
jg
push
xor
leave
int
cmp
push
fimuls
xor
adc
inc
fs
xor
push
lret
fstl
xchg
xchg
test
mov
pusha
cmp
or
and
test
mov
loope
rol
out
and
add
outsb
sub
stos
fs
jmp
leave
aas
xor
inc
push
add
add
push
stc
cmp
ljmp
jno
enter
int3
cmpb
mov
cs
ljmp
mov
xchg
fnstenv
mov
mov
mov
cmp
inc
lahf
in
cwtl
or
xor
shr
pusha
gs
and
mov
into
and
ficompl
rorl
inc
inc
inc
jmp
or
adc
pop
js
mov
mov
cli
movsl
fisubrl
testb
ret
inc
shr
fdivrl
xor
lock
pop
fists
sub
mov
and
lret
adc
das
int
stos
lret
push
sub
sahf
and
lods
mov
push
pop
adc
xor
xor
xor
sbb
scas
add
icebp
cmpsl
insb
ds
jnp
scas
sub
lock
mov
and
jmp
mov
jno
jns
cltd
sub
or
sahf
sbb
dec
jb
insb
xor
push
add
add
add
insb
pop
pushf
scas
fistpll
outsl
outsl
add
add
incl
add
pop
fcoml
sbb
push
pop
and
int3
ss
popa
adc
lods
add
insl
mov
enter
jle
cwtl
push
adc
outsb
jp
mov
mov
ja
rcll
push
mov
inc
cmpsb
les
cmp
les
loop
loopne
enter
or
sbb
aam
add
sbb
lods
mov
push
inc
inc
mov
sarl
shrl
in
jle
cmpl
mov
push
rorl
dec
sbb
pop
outsl
mov
or
sub
aas
dec
xorl
loope
and
call
xchg
sub
mov
fdivs
mov
ret
dec
inc
xorl
lea
add
dec
jle
dec
cld
adc
dec
mov
pop
jp
add
mov
push
sbb
dec
bswap
in
nop
sbb
push
in
sbb
add
cmp
movsb
push
sbb
mov
add
incl
add
cmp
leave
fwait
sub
pop
inc
push
testb
stc
fs
lcall
movsb
inc
pusha
sbb
xchg
rcrb
les
or
stos
push
in
and
aam
sbbl
outsl
push
stc
inc
inc
mov
lret
insl
pushf
test
dec
inc
into
or
push
ljmp
jae
jl
hlt
xchg
xchg
sbb
or
cmp
pop
xchg
xchg
cmp
pop
test
iret
inc
lahf
pop
fildll
push
dec
add
cmp
inc
pop
sub
pop
jae
in
cmp
lods
cmp
or
je
push
cmp
fldl
arpl
add
inc
xlat
js
dec
pushf
xor
repnz
shlb
ljmp
sub
cmp
aad
nop
mov
sarb
inc
mov
add
and
mov
mov
mov
nop
add
test
outsl
lret
mov
out
jmp
cmp
aas
add
incl
add
fidivl
lods
out
mov
in
shr
std
adc
test
mov
daa
icebp
or
cmpl
loop
mov
aaa
inc
hlt
pop
inc
mov
repnz
cmp
or
std
nop
xchg
std
mov
inc
xchg
inc
sub
jae
sbb
pop
pushf
jb
shl
mov
dec
or
and
xor
sub
fisttps
push
packssdw
jne
movsb
mov
das
adc
int3
rolb
loopne
ror
cltd
pop
aaa
bound
cmpsl
scas
and
bound
cmpb
ret
aad
pop
imul
add
mov
out
push
sub
add
imul
int3
mov
fwait
int3
mov
jne
mov
xchg
arpl
add
ret
xchg
repnz
aam
shrb
xchg
leave
mov
sub
adc
xchg
xor
xlat
jge
jno
popf
add
repz
cmp
lods
repz
mov
sub
ficompl
std
inc
add
incl
add
or
gs
cli
dec
mov
out
bound
fistl
mov
fcom
cmp
imul
imul
mov
add
cltd
dec
cwtl
mov
or
pop
or
add
push
sarb
or
rcll
dec
sar
jno
movsl
sub
xchg
gs
js
pop
cmpsl
daa
push
dec
xchg
in
clc
aad
ret
fcompl
mov
xor
lds
inc
xchg
mov
xchg
cltd
arpl
pop
lods
push
mov
jne
arpl
fldt
push
mov
scas
mov
into
mov
mov
dec
xchg
test
cmp
mov
clc
sbb
icebp
js
roll
sbb
xchg
xchg
mov
fcmovnu
cli
test
mov
scas
sub
dec
sub
jbe
adc
jne
adc
ds
das
cmp
fistl
mov
cmp
add
daa
push
cld
push
std
jmp
dec
push
mov
cld
inc
add
incl
add
add
call
divl
lds
xchg
mov
pop
adc
inc
cmp
adc
subl
frstor
mov
dec
dec
fs
and
push
mov
jnp
popa
xor
subb
pushf
xchg
add
in
push
jno
mov
std
mov
adc
ss
out
pop
inc
shrl
fists
rolb
lret
out
xor
mov
and
ret
movsb
int3
or
mov
shll
in
lds
fmull
inc
and
scas
fs
pop
mov
jl
sbb
pop
cmpsl
ljmp
ds
popa
and
ss
jge
not
push
stos
aad
push
xchg
inc
aaa
mov
sub
popa
lcall
testb
sti
js
orl
movsl
jae
jmp
inc
fnstcw
outsb
jecxz
add
add
sbb
dec
push
out
aad
out
xor
inc
add
incl
add
inc
sbb
nop
lcall
cli
inc
cld
std
xor
jo
cmp
push
push
push
xor
insl
leave
push
addl
hlt
inc
push
inc
or
add
ficoml
test
sahf
pop
fwait
push
cmp
test
into
adc
fmul
leave
sub
push
dec
jno
adc
lods
rolb
and
enter
vmovntpd
dec
xchg
adc
loope
lea
sub
lcall
dec
vxorps
jmp
jmp
jge
dec
and
dec
aas
mov
into
ret
fmuls
je
pusha
add
data16
sub
cltd
pop
sub
in
jae
cmc
pop
mov
push
dec
repz
shll
xlat
fdivs
movsl
adc
xchg
daa
das
inc
mov
cmc
in
sti
test
in
out
lret
aam
aas
cltd
inc
js
cmp
mov
sub
clc
adc
cwtl
dec
int
sbb
das
in
stos
add
push
mov
or
hlt
and
cli
inc
add
incl
add
out
inc
inc
filds
int
jns
insl
dec
xor
insl
data16
mov
inc
pushf
mov
sub
xchg
aad
pop
stos
pxor
sub
sub
xor
pop
std
aam
mov
fnstenv
in
test
inc
xchg
imul
inc
push
adc
mov
push
jae
outsb
lahf
lcall
mov
insb
xchg
lret
in
mul
sub
aam
cld
hlt
int3
add
lods
xor
mov
sbb
scas
jmp
ljmp
xchg
inc
mov
stos
jae
insb
mov
push
in
stos
scas
inc
mov
push
outsb
adc
sub
imul
xor
movsl
inc
mov
or
inc
jl
iret
or
sub
outsl
or
fcoml
jo
fists
xor
sub
stc
outsb
iret
mov
testb
stos
add
jg
xchg
orl
pusha
stc
inc
add
incl
add
bound
push
adc
dec
je
pop
jbe
rorb
faddl
or
ret
adc
mov
std
sbb
jne
sub
mov
mov
ret
xor
xor
push
cmc
jle,pn
enter
fisttpll
mov
rorl
jle
subb
and
aaa
pop
ss
clc
sub
icebp
in
imull
leave
push
cltd
daa
inc
xor
mov
inc
mov
jle
xor
rep
mov
sub
lret
iret
inc
mov
test
xor
repz
ret
icebp
adc
sbb
jmp
adc
sbb
adc
addr16
sbb
mov
dec
in
mov
mov
jl
in
mov
movsl
sbb
pusha
pop
in
push
mov
imul
out
add
cli
pop
push
jb
fsts
pop
dec
test
pop
sub
mov
push
add
push
dec
lret
jmp
imul
aaa
je
ds
stos
clc
inc
add
incl
add
je
idivb
shrl
mov
dec
lods
cmpb
les
iret
fwait
rorb
dec
leave
cli
inc
and
ja
push
mov
jae
je
pusha
movsl
fs
mov
mov
popf
or
mov
sub
push
sub
adc
shlb
stos
stos
push
mov
arpl
cwtl
repz
and
push
out
in
popa
into
test
add
outsl
pusha
xor
outsb
frstor
les
push
xor
sub
scas
pop
lret
icebp
cmp
sbb
lret
lds
mov
pop
jl
adc
subb
mov
or
sbb
insl
icebp
cmp
hlt
nop
fdivrp
shlb
push
scas
ret
lds
ret
cli
push
stos
cmp
push
push
aam
mov
ret
cld
jl
stc
mov
and
in
mov
das
cmpsl
movsl
pop
addl
call
add
cwtl
loope
std
jge
cwtl
xchg
push
sub
dec
add
add
add
cwtl
lcall
out
mov
mov
mov
pop
push
and
adc
loopne
jge
out
pop
rorl
mov
jbe
movsl
cmp
jb
inc
xor
xchg
inc
adc
inc
mov
or
jmp
aad
push
loopne
inc
jecxz
mov
add
inc
or
test
push
dec
xor
mov
push
or
hlt
push
fucomip
pop
in
repz
ret
pop
xorl
xor
pop
jge
ficompl
jg
mov
pop
pushf
or
cltd
mov
out
jg
outsl
rclb
adc
mov
aaa
mov
jg
sbb
inc
mov
xchg
in
leave
inc
fistps
mov
pop
push
cli
and
push
and
mov
shll
mov
movsl
push
inc
stos
jge
ret
mov
mov
incb
sub
jns
xor
jg
enter
inc
add
incl
add
mov
dec
pop
xlat
dec
mov
push
in
je
adc
je
sub
incw
sbb
repz
inc
mov
sub
sub
stc
jo
call
mov
test
pop
sbb
fistps
jl
call
inc
cmp
mov
cmpsl
jnp
or
rorl
icebp
push
loop
stos
dec
rcrb
cmp
jp
and
jecxz
mov
adc
bnd
and
mov
inc
fdivr
addr16
sbb
stos
xchg
nop
pop
xchg
and
fdivp
flds
mov
pop
jle
popa
push
sbb
ss
pop
pop
mov
cmp
inc
jno
dec
sbb
pop
cs
bound
push
out
lahf
dec
daa
imul
fidivrl
sub
mov
add
add
call
pop
xlat
jo
call
mov
xchg
add
add
add
ret
jg
decl
rol
jecxz
lods
dec
cmc
dec
add
incl
add
push
xor
xor
push
jae
sub
pusha
imul
dec
sbb
xor
and
mov
push
mov
out
adc
repnz
sub
outsl
test
push
pop
popa
or
sbb
xchg
fwait
loope
das
mov
push
pushf
outsl
adc
sbbl
mov
pop
jae
scas
mov
inc
js
mov
addr16
inc
add
cmp
mov
arpl
fcompl
pop
mov
gs
sbb
jl
mov
rcrb
push
repz
out
xor
mov
add
scas
sahf
pushf
and
cmp
and
fstpt
pop
in
sbb
adc
mov
sarb
push
fnstenv
adc
test
sbb
pop
mov
push
push
add
push
dec
popl
scas
xchg
les
dec
pop
or
jmp
adc
mov
out
aad
sub
add
incl
add
jmp
add
cmpsl
mov
add
cld
push
ret
scas
aad
inc
jns
inc
inc
call
push
ja
push
cmp
subb
xor
push
sti
imul
aaa
cmpsb
jl
out
sub
or
mov
push
push
sbbb
or
jmp
mov
inc
mov
dec
shrb
sbb
and
pop
scas
ret
pop
mov
je
rclb
test
xor
pushf
jp
or
and
std
inc
xchg
mul
cmp
or
cmp
icebp
xchg
cmp
adc
ja
jl
inc
hlt
adc
bound
xor
jecxz
xchg
or
mov
mov
test
enter
cmp
jecxz
stos
movsb
outsl
push
cld
mov
inc
mov
bound
push
xlat
cmp
outsl
lcall
out
add
mov
mov
popl
cmp
jp
mov
adc
sbb
inc
icebp
hlt
gs
dec
adc
loope
dec
add
incl
add
mov
push
xchg
pushf
or
fsub
and
and
or
sbb
je
inc
pusha
xorb
outsb
inc
inc
movsb
adc
pop
push
mov
mov
add
int
pop
xlat
mov
mov
dec
jb
adc
push
sub
imul
jo
sub
mov
xchg
xor
pop
test
daa
or
aas
outsb
xchg
mul
dec
or
fmuls
fistpll
sbb
dec
lock
sbb
pop
loop
jne
mov
push
pop
or
in
xchg
add
sub
lock
cmpsl
hlt
pop
mov
lret
stc
shl
lea
in
addl
leave
fdivrs
xchg
call
popl
fistpll
jle
hlt
in
negb
loop
mov
sbb
sbb
insb
ljmp
mov
mov
add
aas
gs
pop
repnz
dec
add
incl
add
mov
mov
gs
adc
mov
pushf
or
cmp
inc
daa
enter
sub
adc
das
lock
sti
mov
xlat
pusha
ljmp
cmpb
push
inc
push
mov
nop
xor
or
ret
andb
fidivrl
popf
dec
mov
push
push
xor
push
sbb
repnz
xchg
adc
mov
mov
lahf
icebp
out
stos
sbb
stos
in
mov
xlat
scas
jl
mov
push
leave
adc
movsb
data16
cltd
outsb
pop
dec
ss
arpl
and
lret
aas
js
shrb
mov
push
mov
repz
es
and
mov
loopne
insb
or
push
daa
mov
ficoml
push
pop
sub
inc
push
sar
fisttpll
cmpsl
mov
inc
xlat
dec
ret
stc
outsb
loop
fcmovu
aam
cmp
sbb
das
mov
stos
divb
add
mov
out
fisttpll
lock
je
icebp
dec
add
incl
add
jnp
mov
fidivs
mov
cwtl
out
cmp
outsb
fbld
sub
mov
fwait
or
push
pop
mov
mov
pop
icebp
inc
jle
pop
cs
xorb
xchg
xchg
stc
imul
cmp
int
cs
xor
push
js
dec
and
outsl
mov
leave
push
xchg
pop
loope
push
inc
andl
mov
cmp
outsl
or
daa
loope
adc
sub
mov
ds
fcmovne
cmc
int
lods
and
jmp
repnz
or
divl
lret
push
cld
pushf
pop
adc
mov
and
mov
mov
aad
pop
andl
roll
aas
xchg
out
int
xor
aam
pop
in
mov
lods
xor
pop
call
stos
dec
cmp
xchg
fildll
mov
ljmp
add
incl
add
sub
jmp
sbb
scas
loop
es
ret
dec
repz
ss
test
dec
sbb
sti
loopne
xor
int3
xor
add
inc
push
ds
mov
call
iret
lock
inc
cmp
or
jns
ds
add
lahf
mov
leave
test
mov
stos
xchg
mov
addl
faddl
jmp
movsb
mov
repz
adc
xlat
fsubl
bound
mov
jae
add
jmp
inc
sub
mov
aas
adc
or
or
mov
push
fistl
cmp
cmp
cmp
push
inc
sahf
push
xchg
mov
jmp
push
sbb
in
pop
xchg
into
xchg
inc
cwtl
fmull
or
sti
bound
lret
icebp
imul
loope
loop
rcrb
out
push
das
dec
add
jmp
out
aas
jo
sahf
jb
je
insb
out
dec
add
incl
add
sbb
mov
iret
in
out
je
mov
xchg
scas
fwait
pop
cmp
cmpsl
pop
sub
push
or
mov
mov
loopne
daa
cmpsl
inc
test
sub
rorl
dec
fisttpl
fs
pop
jle
inc
xchg
inc
dec
stc
xor
orb
inc
das
bound
pop
xchg
test
andb
sbb
pop
inc
cli
cld
jmp
mov
rcl
adc
jl
in
mov
mov
pushf
pop
or
sbb
pushf
test
dec
fidivrs
ret
sub
inc
insb
inc
outsl
mov
jge
outsb
mov
adc
sbb
ficomps
adc
rcrb
je
add
cmp
xchg
out
iret
std
int3
ds
push
mov
cmp
jl
sub
out
mov
fcomip
xor
lcall
aad
loop
and
fdivs
cmp
imul
out
mov
mov
scas
pop
hlt
out
dec
add
incl
add
push
inc
jne
cmc
mov
test
sub
inc
pushf
dec
test
mov
pop
mov
call
xchg
aad
imul
add
push
js
stos
push
dec
int3
data16
pop
rcll
cli
pop
cmp
push
fs
xchg
cs
out
sub
pop
adc
pop
int
lods
orb
inc
ljmp
xchg
push
cmc
jle
xor
inc
mov
rolb
jno
push
inc
fwait
inc
mull
out
cmp
cmpsb
cltd
pop
pop
mov
dec
std
dec
lret
cs
or
jle
pop
test
imul
cmp
xor
js
xor
cmpsl
je
jne
gs
in
push
dec
fwait
or
rorb
cmp
int3
pop
cmpsl
adc
pop
lock
mov
scas
and
les
mov
mov
adc
add
or
xor
pop
add
add
dec
stc
mov
ljmp
in
push
add
incl
add
leave
inc
add
sti
xor
out
test
lea
dec
neg
enter
xchg
ret
sbb
mov
fldcw
divb
adc
inc
or
mov
in
add
lret
hlt
jne
xchg
fistps
mov
xchg
js
fdivr
inc
pop
aad
test
xor
inc
rclb
cli
push
insb
xor
xchg
in
pop
xor
punpcklwd
xor
cld
lret
sahf
sbb
push
pop
cmp
pop
jecxz
mov
daa
hlt
insl
push
push
or
jg
outsb
push
outsl
pop
fdivs
adc
lret
popa
popf
or
sbb
mov
sbb
cmp
and
pusha
out
mov
add
fmulp
cld
cs
loopne
inc
js
xlat
dec
adc
fdivrl
nop
jle
xchg
hlt
or
imul
aaa
clc
dec
mov
arpl
jle
jmp
jo
popf
inc
cmc
mov
xchg
cmp
jle
jg
cld
lcall
xchg
in
push
add
incl
add
inc
jmp
ret
push
xor
jno
sbb
sarl
add
jno
gs
das
push
adc
mov
lock
cmp
adc
pop
pop
xchg
cmp
ss
in
clc
dec
inc
pop
cli
push
pop
pushf
out
stc
inc
in
xchg
push
xchg
jae
fs
imul
xchg
push
mov
pop
jecxz
mov
stc
jo
pop
xor
movl
ss
lods
sbb
xchg
insl
mov
pop
out
test
jecxz
in
add
es
jmp
pushl
dec
push
dec
pop
push
ja
shrb
adc
arpl
jp
loope
pop
cmp
enter
scas
cmc
mul
ficompl
inc
arpl
cmp
jb
scas
nop
in
dec
mov
adc
sbb
or
push
cwtl
out
sbb
scas
xchg
mov
flds
xchg
cmpsb
add
xchg
mov
pop
mov
push
add
incl
add
inc
test
outsl
dec
data16
sub
std
cld
adc
repz
mov
stc
jmp
push
popa
mov
stos
fucomip
add
nop
mov
lock
lods
push
fsubl
jae
jno
xor
shl
mov
repnz
mov
jbe
insb
popf
rcl
inc
mov
ds
mov
loope
out
or
and
adc
int3
icebp
imul
test
repnz
sbb
es
pop
scas
xchg
pusha
pop
pop
xchg
add
and
in
ret
mov
and
and
dec
call
mov
fsubrs
inc
xor
sbb
mov
outsb
and
mov
adc
xchg
jle
ud2
mov
sbb
shll
cwtl
jg
js
lea
iret
push
popf
dec
xchg
rorl
sahf
jae
cwtl
in
pushf
fs
out
cld
cmpsb
je
add
inc
mov
push
push
jmp
push
mov
js
push
add
incl
add
and
cld
in
lahf
popf
dec
push
xor
xor
push
rol
cmpsl
aam
mov
inc
andb
push
imul
in
xlat
jne
sub
add
or
insb
inc
in
cmp
push
mov
arpl
mov
ds
ja
repnz
cmpsl
dec
xchg
xor
jg
push
cltd
mov
push
push
imul
mov
pop
lods
add
mov
pop
ret
add
call
mov
daa
repnz
sarl
cmp
mov
mov
lds
mov
clc
lea
movsl
shrl
fisubrs
sti
pop
scas
js
movsb
push
stos
enter
js
rcrb
mov
push
stos
jae
jnp
cld
imul
sub
xchg
stos
jg
lds
aam
sbb
push
or
mull
scas
sbb
int
rcr
jle
mov
mov
push
imul
add
fsubrl
mov
out
cmp
ret
or
jl
imul
push
add
incl
add
in
cli
dec
mov
cwtl
jnp
pop
xchg
out
xor
ds
mov
sahf
lret
and
lock
shl
fdivs
pusha
fcmovb
test
dec
xlat
int3
movsl
out
adc
iret
mov
sbb
pop
xlat
mov
call
jns
dec
fbld
jg
enter
ss
loopnew
and
ret
dec
fwait
sti
ja
sub
jns
outsl
xchg
jp
mov
sub
pop
js,pt
mov
inc
pop
xor
rcrb
adc
and
pushf
jmp
out
lret
ret
mov
sub
mov
loope
rcr
aaa
or
adc
mov
mov
ljmp
clc
ret
mov
cmp
pop
orl
pop
cld
pop
and
cmp
xor
mov
dec
jnp
lret
pop
xlat
xor
aaa
mov
xchg
pop
imul
lods
mov
add
push
shll
out
pop
pop
pushf
push
and
loopne
call
add
add
jp
es
jp
int
cmp
xlat
sbbb
push
xor
out
lret
stc
adc
and
fiadds
lods
lcall
jns
ljmp
dec
lods
test
dec
jp
sbb
inc
push
test
pushf
mulb
data16
pusha
test
xorb
or
jne
and
loopne
cli
movsl
jns
dec
shl
movsl
push
fcmovb
shll
jecxz
sbb
test
je
jle
cmpsl
jl
stos
dec
test
mov
cli
scas
testl
inc
xor
mov
dec
adc
sub
add
jg
add
adc
xor
int
mov
jae
push
jge
pop
daa
es
add
or
adc
cld
aas
cwtl
fisttpl
mov
enter
push
fwait
shr
aad
jmp
push
dec
ret
sub
add
stos
push
lcall
hlt
mov
push
xlat
push
out
add
incl
add
cmp
add
mov
push
xlat
mov
jo
jae
test
lret
adc
pop
fdivp
sahf
push
pop
pop
mov
mov
push
or
cmpsb
movsl
mov
xchg
fidivrs
cmp
xor
repnz
mov
int
add
das
out
iret
sub
in
push
add
jb
dec
loope
popa
jmp
xchg
fdivs
sbbl
xchg
jae
pusha
add
je
jmp
ds
mov
cli
rol
mov
xchg
or
cmc
cmp
mov
dec
lret
shll
imul
push
adc
cmpsl
das
push
mov
pusha
lods
repnz
pop
pop
shl
cs
push
test
xor
mov
dec
das
test
and
adc
hlt
stos
popa
stc
clc
sbb
out
imul
sub
push
add
inc
pop
popa
or
roll
bound
imul
and
add
add
add
adc
subl
popf
es
and
cmp
push
clc
xor
movb
pop
fiaddl
lods
sub
sub
sub
xor
or
xchg
pop
mov
mov
leave
movsb
les
in
push
or
insl
psubusb
xchg
cltd
mov
sbb
add
pop
jns
icebp
jno
sub
jo
mov
xor
pop
insb
sbb
psubusb
lods
outsb
jg
jp
pop
or
or
and
sarl
cmc
cmp
mov
jne
sbb
mov
sub
cmp
cmp
or
mov
sub
pop
push
push
fstpl
in
or
sbb
cli
xor
scas
aam
cwtl
or
stc
sbbb
xchg
jns
das
popf
cld
sbb
imul
fcomip
les
lahf
pop
sub
jbe
mov
fnstsw
add
fwait
cmp
stos
sarb
in
add
incl
add
pop
push
jg
dec
add
fldl
mov
or
lea
jmp
mov
das
lds
add
insl
push
dec
popf
scas
test
fmul
pop
int
imul
loopne
ffree
out
mov
insl
push
xchg
nop
push
jo
pop
xchg
ficoms
xchg
adc
cmp
inc
xchg
ficompl
cwtl
fistl
mov
lods
insb
imul
fnstenv
outsb
jg
and
insl
push
inc
mov
xchg
mov
sub
or
push
dec
xorl
sahf
insl
fdivs
mov
jnp
jge
or
sub
divb
pop
adc
add
push
inc
jp
cmp
aas
scas
inc
in
insb
dec
jmp
mov
insl
adc
mov
and
mov
aas
in
adc
push
std
out
and
dec
mov
push
pop
xchg
or
jl
add
clc
mov
and
hlt
inc
xor
add
incl
add
out
sub
ljmp
out
inc
push
mov
sbb
lods
test
xchg
jp
adc
ljmp
or
dec
mov
pop
hlt
out
push
sub
jno
pop
push
dec
mov
sub
fsts
inc
push
cwtl
nop
lods
ja
adc
pop
lds
pop
sub
and
mov
popf
out
aaa
cli
fstl
lods
add
pop
lcall
fucom
gs
cmpsl
lods
in
imul
subl
mov
jno
xchg
adc
cmpsb
mov
and
lods
xor
and
jb
add
out
in
jl
add
mov
adc
mov
mov
pop
ss
iret
adc
cltd
sbb
mov
push
push
fsubrp
int
inc
mov
inc
mov
sahf
inc
test
dec
cmpsl
xchg
mov
cli
xor
inc
mov
xor
fadds
scas
xchg
push
adc
out
mov
fsubl
js
jecxz
add
incl
add
lret
repz
loopne
or
inc
rcrb
adc
sub
dec
insb
dec
roll
lea
jbe
or
test
sbb
sub
lods
dec
pop
fistpl
jnp
lret
push
cld
pop
jo
gs
fistl
lcall
xchg
dec
or
and
aas
call
mov
cmpsb
loop
clc
xor
fnstsw
mov
aaa
and
push
fbld
jmp
ja
add
ja
stos
lcall
pusha
hlt
push
rcrl
arpl
testl
mov
lds
jb
icebp
mov
call
call
add
cltd
mov
inc
mov
int
mov
mov
pop
nop/reserved
and
dec
push
push
icebp
cli
xor
test
out
jecxz
mov
mov
test
add
mov
lds
aad
add
mul
pop
add
incl
add
ret
and
ret
popf
pushf
mov
or
mov
out
cli
cmpsl
adc
mov
adc
fxch
nop
ds
xor
mov
aad
ficoml
add
pop
dec
mov
xor
jge
mull
mov
adc
push
xor
rclb
cli
push
pop
xchg
mov
jle
ds
and
gs
icebp
xor
mov
mov
out
cmp
xchg
das
lea
shl
lock
jnp
stos
mov
imul
dec
cli
dec
clc
add
rcrb
adc
mov
test
mov
push
pop
xchg
xchg
into
cli
adc
aas
mov
clc
mov
aad
repnz
stc
pop
ss
or
push
lods
in
js
push
lea
sbb
jecxz
fidivrl
mov
jb
test
in
std
aaa
pop
in
mov
and
mov
lret
jbe
mov
and
das
cmp
pusha
addb
add
add
add
sub
adc
insl
dec
or
cltd
testl
pop
imul
scas
push
add
mov
fdivl
shlb
scas
pcmpgtd
rclb
adc
sahf
mov
mov
data16
jmp
roll
pop
sti
sub
mov
adc
iret
push
mov
orl
repz
movsl
jb,pn
cld
mov
ret
call
jmp
fistpll
sahf
xchg
mov
lahf
push
aaa
fsts
scas
pop
ret
mov
fbld
push
pop
xorb
jnp
add
pop
insl
mov
mov
sbb
lahf
arpl
ljmp
popa
lds
in
xor
or
xor
mov
sbb
pop
jecxz
and
jg
cwtl
fucomp
dec
mov
shll
mov
imul
cmpsb
cmc
test
fsubl
mov
ja
mov
idivl
hlt
loopne
add
incl
add
sar
inc
es
mov
sahf
sub
ljmp
jno
pushf
int
enter
jp
in
daa
inc
jge
push
andl
addr16
pop
mov
xlat
shrl
sbb
xor
nop
sub
xchg
mov
or
jns
notl
or
jne
or
jo
cmp
leave
cs
mov
imul
xchg
ljmp
cmp
clc
jbe
add
movsb
jne
jb
pop
sbb
or
sbb
mov
mov
cld
stos
xchg
pcmpgtd
and
rclb
icebp
adc
mov
jg
fisttps
push
dec
dec
je
cltd
xchg
push
cmpsl
xchg
jmp
test
lret
fcmovnu
pop
rclb
pop
and
jp
or
sub
pusha
mov
adc
add
xor
xlat
out
cld
std
push
ficomps
fistps
add
add
add
lds
pop
fidivs
insb
popf
adc
lods
dec
data16
loop
into
shlb
dec
jmp
addb
imul
ret
or
adc
cmp
scas
pop
pop
mov
scas
shrb
adc
mov
add
insl
push
inc
aad
pop
pop
cmp
scas
enter
mov
pusha
dec
dec
jmp
mov
dec
ja
loopew
add
jbe
xchg
cmpl
mov
push
and
insb
jns
pop
aas
pop
cmp
sbb
or
movsb
or
dec
mov
js
adc
fimuls
fildl
and
mov
mov
std
mov
outsl
mov
lret
xor
scas
mov
enter
test
cmc
mov
js
push
data16
pop
sub
test
das
je
jge
sub
fiaddl
movl
add
mov
add
lret
xor
add
incl
add
repnz
sbb
inc
adcl
adc
xchg
out
aad
push
xchg
sahf
sbb
aam
mov
xor
pop
das
mov
mov
xchg
or
pop
mov
add
cmc
dec
sbb
push
lds
cmc
jae
inc
repnz
pop
xchg
xchg
mov
push
add
push
inc
inc
push
sbb
adc
ljmp
jbe
cmp
jo
mov
jno
stos
test
xlat
adc
xchg
dec
out
imul
push
test
adc
in
mov
unpckhps
cmp
pushf
and
sbb
test
xor
std
dec
iret
or
cmpsl
jge
outsl
push
in
mov
cmpsb
cmp
jge
lahf
sbb
loope
mov
gs
rolb
das
mov
xor
in
sbbb
mov
cld
xor
xchg
mov
jae
add
push
into
push
push
inc
lahf
mov
frstor
add
add
add
and
aam
inc
ret
fnstenv
jl
xchg
push
mov
mov
lock
fcoms
cmp
mov
dec
lahf
sub
dec
or
loope
stc
or
lods
out
out
pop
lahf
xrstor
add
push
lods
cmp
rorb
mov
add
push
lcall
cmp
addr16
call
push
or
les
xor
or
loope
addr16
lea
ss
xchg
iret
inc
stos
lea
pop
popa
sbb
shr
and
insb
dec
lret
and
xor
rep
mov
jb
mov
xor
and
pop
sbb
inc
icebp
pop
in
xorb
jg
xchg
cmpsb
pop
fwait
mov
xchg
jge
div
and
je
mov
xchg
xor
dec
add
mov
aaa
xor
sub
mov
fs
push
insb
es
aas
add
xchg
inc
shl
xlat
mov
jg
or
fsubl
add
add
add
jae
sbb
lcall
mov
add
mul
mov
outsb
addl
mov
lods
vcvtps2pd
mov
frstor
aam
dec
jae
mov
push
outsl
xchg
mov
cmp
inc
adc
cmp
add
mov
lret
pop
orl
pop
insl
iret
rcrb
jle
add
mov
pop
pushf
mov
test
ljmp
fistps
incb
jb
and
notb
and
push
aam
pop
sbb
int3
mov
pusha
test
or
imul
repnz
pop
out
int3
int3
pop
aam
and
push
mov
or
inc
cld
es
jl
sarl
adc
imul
mov
and
xchg
fistl
adc
lods
addr16
mov
in
ja
dec
push
add
lahf
pop
cmpsl
jne
mov
bound
add
add
add
cli
bound
inc
add
js
pop
pushf
mov
lds
dec
xor
mov
cmp
arpl
add
jmp
shrl
das
pop
stc
sbb
ret
mov
xor
mov
mov
xchg
xor
shl
js
iret
lock
lcall
or
lcall
dec
pushf
das
icebp
xor
imul
jg
lock
xor
hlt
and
pop
or
fistpl
stos
into
and
xchg
push
arpl
adc
mov
mov
inc
inc
push
lds
ret
bound
or
aas
ds
xchg
mov
xchg
call
dec
mov
push
adc
jge
lds
out
cmpb
fdivl
dec
sub
loop
out
mov
sub
js
data16
sub
inc
and
or
push
enter
jne
jne
leave
xchg
add
add
idiv
jg
sub
enter
add
add
add
test
aam
jns
sbb
jno
outsl
sbb
mov
dec
and
ljmp
push
js
ror
ficoml
sub
adc
inc
add
lcall
push
cli
fs
mov
inc
push
pop
pop
or
or
lods
iret
addl
pop
test
insb
mov
mov
or
sub
test
mov
jno
sub
fwait
sub
xchg
jmp
rclb
mov
addl
cmpsb
xor
pop
cmc
stc
test
dec
sub
mov
and
dec
pop
xchg
jb
test
lods
xchg
or
call
pop
inc
enter
sub
add
push
jo
addb
into
out
mov
push
movsl
jge
jge
pop
pop
loopne
int
test
inc
lahf
add
pop
mov
fstps
push
iret
fldenv
incl
add
mov
xor
insl
mov
iret
inc
incb
aad
mov
je
sbb
inc
inc
inc
xchg
loop
pop
xor
push
fdivrl
jb
push
mov
insl
pop
inc
ficompl
push
push
repz
dec
mov
push
fsubrp
ja
sub
cmpb
cmp
aam
fs
add
arpl
push
popf
adc
pop
sbb
sarl
lret
xor
adc
sarl
mov
hlt
xchg
mov
pop
mov
pop
imul
rol
xor
into
out
sbb
jae
ljmp
dec
push
mov
filds
dec
push
xchg
mov
mov
sub
cwtl
jmp
xchg
xchg
mov
pop
xchg
pop
sbb
sbb
outsb
and
cmp
aaa
xchg
scas
lods
push
test
aam
das
orb
and
push
jne
add
repnz
movsb
jle
arpl
movsl
fsubs
add
add
add
es
loop
fnsave
lret
addr16
iret
mov
jo
push
ss
push
mov
mov
lret
push
jmp
loope
enter
in
adcb
mov
jp
fsubrl
pushl
std
in
cmp
lahf
fnstsw
bound
call
test
add
xchg
sub
in
mov
mov
xor
lret
xchg
sub
add
call
jg
pop
out
sub
insl
jb,pt
repz
mov
mov
adc
lods
mov
inc
or
mov
push
cmpsl
dec
cmp
and
data16
jmp
mov
cwtl
orl
cmp
pop
mov
lahf
push
jb
shrb
push
aam
sub
jnp,pt
mov
add
push
push
sub
repnz
jle
push
add
stos
sub
stos
out
jmp
sub
xorb
incl
add
cmp
xchg
aaa
scas
cs
push
iret
mov
mov
sub
mov
cs
icebp
enter
test
dec
pop
enter
mov
idivb
xor
jb
out
mov
imul
lds
jne
ljmp
imul
pop
inc
xchg
inc
inc
xchg
mov
pushf
out
dec
mov
push
sub
movsl
ds
jno
mov
pop
adc
out
lods
inc
pop
call
or
xor
and
xor
lcall
shrl
stos
xchg
iret
dec
push
jbe
add
add
dec
imul
in
addr16
insl
out
sbb
test
adc
mov
cmpb
int3
jle
adc
jbe
or
call
scas
aad
and
mov
jmp
push
xchg
sub
inc
push
mov
mov
shll
fnstenv
daa
fsubrl
outsl
add
incl
add
adc
cld
insb
push
mov
cmp
sahf
mov
mov
xchg
pushl
notb
or
cmp
test
data16
push
add
sub
jns
adc
fiadds
push
dec
bound
dec
mov
int3
nop
push
cmp
jg
mov
outsb
add
jo
add
addr16
sbb
mov
cmp
lret
xor
dec
out
repnz
scas
imul
adc
cmc
pushf
pop
fnstenv
xchg
mov
dec
cmp
inc
rcl
daa
sub
out
lods
cmp
repnz
mov
fstl
fstpt
mov
jne
int
xor
addr16
std
xor
push
js
cmp
adc
std
and
mov
jecxz
loopne
enter
and
jle
pop
xor
js
addb
cmc
cltd
pop
jo
lea
repnz
stos
loope
cld
je
jbe
jns
sbb
rcr
xor
aad
add
incl
add
jae
loope
insl
std
subl
lds
mov
xor
and
cmp
sbb
jbe
scas
lods
dec
gs
movsb
in
sub
xlat
cmpsb
stos
insl
repz
enter
sbb
lock
xchg
std
pusha
mov
fistpl
dec
lret
push
jle
test
sub
dec
jns
jge
mov
icebp
dec
out
cmp
gs
das
jge
dec
xchg
int3
out
fwait
sbb
push
frstor
std
dec
jmp
jbe
mov
syscall
lahf
iret
sub
pop
les
fistl
push
mov
cwtl
pop
mov
xor
outsl
or
push
sub
arpl
pushf
sarl
mov
sahf
mov
xchg
stos
mov
lahf
sbb
aaa
fwait
addb
test
mov
push
mov
xor
dec
xor
aas
xor
ss
repnz
cmpsb
sbb
xor
lods
lcall
add
push
cltd
jmp
fildl
or
imul
add
inc
shlb
xchg
push
adc
fsubs
cwtl
pushf
pop
jae
in
inc
cwtl
loopne
ret
adc
shll
pop
sub
lods
lret
mov
pop
push
adc
test
or
mov
fwait
pop
es
int3
inc
jnp
mov
inc
lret
pop
shr
imul
and
stc
bound
std
mov
cmpsl
leave
adc
repnz
sub
mov
xlat
push
mov
mov
sbb
jl
pushf
fsubrs
cli
fs
adc
fidivrs
cmp
arpl
iret
fsts
xchg
sbb
stc
scas
lahf
out
pop
popf
lret
and
lret
adc
add
xor
push
enter
cltd
sub
jne
dec
adc
popf
jb
iret
aad
jl
and
dec
add
push
or
movsb
mov
xchg
add
lods
or
pop
mov
mov
mov
push
jg
dec
xchg
dec
mov
daa
mov
push
add
add
add
sti
pop
pop
aas
or
xor
dec
cmpsb
push
pop
mov
cmp
jle
cmp
js
lahf
ss
inc
cmc
movsb
jne
and
int
jb
push
jbe
movsb
adc
sub
push
sub
fdivr
add
dec
add
cld
xor
xchg
xchg
cmc
dec
scas
push
cmp
out
inc
push
repz
jno
mov
jp
sbb
cmc
inc
jmp
movsb
jb
adc
cmc
jae
rorl
dec
mov
pop
shl
aam
adc
dec
lods
lock
pop
dec
adc
xorps
add
jo
mov
mov
sub
mov
inc
jns
sbb
jg
mov
das
inc
push
inc
insb
daa
jb
adc
jb
pop
push
add
sbb
xor
pop
mov
orl
les
add
mov
fucomip
push
insb
xor
in
in
lcall
add
xlat
test
inc
enter
xchg
and
daa
fwait
pop
out
lds
sub
in
jne
cmp
or
mov
xchg
push
dec
and
mov
pop
scas
lds
orb
mov
and
fdivs
sahf
in
inc
dec
in
mov
pop
cmp
inc
shlb
add
fists
adc
adc
cmp
cmpsl
mov
inc
pop
dec
jge
imul
push
outsb
fsts
pusha
adc
mov
mov
movsl
addr16
push
rol
mov
pop
mov
jl
mov
lods
inc
adc
cmp
cmp
fimull
negl
push
sub
fsts
ja
sbb
cmpsb
jg
add
mov
je
pop
mov
lock
test
pusha
mov
xor
mov
aam
shl
xlat
into
cld
jmp
add
add
dec
out
iret
jmp
aas
in
push
data16
and
add
add
add
inc
xor
mov
xor
lahf
fnstcw
push
movsb
sahf
mov
inc
mov
cmp
outsl
cwtl
xchg
mov
jl
jne
int3
jmp
ss
mov
daa
push
aaa
cld
xchg
test
fcoms
lahf
pop
pop
pop
insl
dec
dec
testb
xlat
xchg
add
lret
sbb
imul
cmpsl
jg
or
es
jbe
imul
xlat
dec
in
lret
ja
lods
stos
iret
and
jae
or
lds
add
mov
xor
mov
loop
or
adc
sahf
inc
dec
mov
mov
adc
add
in
push
dec
and
mov
fwait
ss
add
cmp
pop
lea
mov
inc
daa
test
mov
push
mov
int
xor
jecxz
repnz
shlb
xor
push
inc
rep
bound
ljmp
add
std
cmpsb
pop
dec
sub
sub
and
shrb
add
add
add
andl
mov
and
dec
lock
addr16
push
les
push
lds
push
xor
imul
mov
fistl
rcrb
lods
fistl
jecxz
inc
cwtl
mov
outsl
push
xor
push
xchg
dec
xor
push
jecxz
data16
mov
jno
fildl
popf
xor
imul
inc
mov
pop
fwait
pop
hlt
je
insb
stc
test
arpl
xorl
rcl
xlat
sbb
sbb
cli
mov
mov
rorl
sbb
push
andl
mov
and
nop
xchg
push
xor
sub
sbbl
in
jl
into
cli
jo
mov
pop
or
jns
in
mov
pop
ss
sbb
dec
dec
popf
mov
sbb
xchg
into
xchg
loope
ss
ret
mov
xor
clc
or
and
add
in
lods
imul
neg
std
sub
dec
fldl
add
incl
add
in
cltd
adc
nop
cmp
clc
test
stc
sbb
cmp
jno
push
ljmp
mov
push
mov
sahf
sub
fnsave
xchg
arpl
lods
imul
push
xchg
pcmpeqw
pop
pop
arpl
inc
or
ret
add
pop
rcl
cmp
push
cs
lock
push
or
mov
mov
sbb
jnp
ret
mov
mov
in
mov
cmp
scas
mov
mov
out
ja
adc
dec
outsl
cltd
andb
cltd
cmp
xchg
aam
popw
arpl
sub
popf
mov
xchg
push
mov
je
fst
push
bound
mov
mov
jg
mov
stos
pushf
das
jo
dec
adcl
cmp
sub
out
pop
fists
ret
mov
push
adc
pushf
dec
inc
test
loopne
daa
int3
leave
xlat
cmc
fsub
outsb
in
add
add
cs
xor
cltd
mov
outsl
add
incl
add
lret
imul
or
pop
lret
in
nop
and
push
xor
fistps
cmp
sbb
insb
push
or
lock
cltd
add
pop
mov
ds
mov
adc
mov
aad
xchg
inc
xchg
mul
and
inc
ss
add
ret
cmpsl
or
call
cli
rolb
add
push
mov
push
movsb
jbe
subb
scas
dec
add
adc
jo
das
pop
fists
out
lods
rclb
xchg
jecxz
outsl
inc
enter
imulb
sub
cld
movsb
sub
shl
add
push
int3
aas
roll
in
sbbl
fldenv
xchg
je
mov
popa
mov
std
push
lods
arpl
pusha
mov
xor
lcall
fcompl
pop
ret
rorb
addr16
test
mov
xchg
dec
adc
adc
fucomi
jns
add
ja
out
sbb
xchg
jg
jo
add
add
add
bswap
les
dec
and
cmp
call
setnp
dec
adc
add
mov
jle
shl
jne
ljmp
push
sbb
jg
outsl
and
mov
nop
imul
cmp
fwait
pop
jmp
out
jle
mov
ss
adc
ficoms
adc
push
sbb
push
lds
sub
adc
mov
jno
xchg
out
lods
add
sbb
into
jmp
push
push
and
inc
xlat
mov
mov
mov
rclb
sti
lret
int
cmp
cltd
xor
fwait
jmp
adc
pop
es
inc
dec
scas
mov
sbb
cwtl
les
xor
outsl
sub
xchg
mov
xchg
negb
jbe
in
add
bound
sbb
mov
xchg
add
cmpsl
cmp
mov
add
sub
ja
mov
in
fistps
int3
jno
add
add
add
sbb
loopne
inc
add
test
xchg
fwait
add
adc
push
data16
cmc
or
cmp
loopne
push
push
xchg
pop
mov
stos
test
ret
mov
lret
dec
mov
sbb
nop
lods
add
leave
mov
insb
inc
adc
cmp
or
jns
sbb
arpl
rcl
shll
cmp
loopne
divps
je
mov
stos
mov
movsl
call
in
mov
das
cmp
jo
lock
inc
aam
cld
call
shll
out
inc
out
xor
out
test
mov
push
push
inc
and
jmp
nop
pop
mov
aam
sti
xchg
pop
sbb
in
mov
div
in
xor
out
adcb
nop
test
xor
cli
xchg
movsb
mov
shlb
ret
loop
imul
int
mov
jnp
outsl
cmpsb
loopne
test
loope
jb
add
add
add
jbe
movsl
push
mov
outsl
xlat
stc
leave
sbb
mov
add
jmp
mov
add
hlt
shrl
das
pop
push
addl
insb
test
js
xchg
jns
inc
adc
cmp
andb
imul
pop
cld
inc
sbb
loope
mov
sbb
dec
aaa
mov
jne
stos
in
es
push
pop
js
sbb
xchg
inc
ret
add
sbb
lock
das
stos
arpl
cmp
jecxz
mov
cmp
xchg
jl
adc
mov
mov
pop
push
lahf
lods
in
test
mov
pop
gs
adc
fildll
adc
imul
sbb
or
cmp
test
or
leave
adc
cmp
nop
pushf
addr16
ds
addr16
push
aam
and
lahf
mov
movsb
sar
jecxz
xchg
push
mov
cli
xchg
jle
push
je
aaa
inc
sub
jae
add
add
add
pop
test
sbb
sti
pop
sti
aad
addb
dec
test
push
sub
data16
repnz
data16
insb
or
lret
gs
add
jns
lods
lcall
loope
mov
dec
dec
je
xchg
jns
ds
fwait
jnp
inc
mov
cltd
mov
cmp
mov
les
jl
rcr
adc
das
cmc
shrb
push
or
pop
lods
pop
push
movsb
adc
add
movsb
daa
push
rol
pop
fwait
and
daa
cmp
jge
push
mov
add
outsl
iret
mov
cmp
loop
inc
clc
testb
popa
sti
sbb
inc
push
push
pop
leave
mov
rcrl
cmp
jae
insb
adc
ret
lock
and
pop
jle,pn
pop
mov
ja
pop
pop
dec
cld
adc
test
push
add
fwait
jnp
aad
sbb
lods
ljmp
add
cwtl
mov
imul
push
clc
pop
in
or
test
fs
out
stos
rcll
jl
xchg
and
dec
fs
imul
pop
mov
wbinvd
divb
lret
dec
dec
and
pop
out
push
cli
jbe
mov
les
inc
adc
fiaddl
or
pushf
loop
out
mov
mov
lahf
repnz
cmp
imul
inc
and
dec
clc
movsl
add
mov
xchg
aas
mov
sub
xor
out
push
in
and
rol
xchg
cmp
mov
mov
outsl
xorb
mov
fcompl
imul
fsubr
mov
add
mov
fidivrs
push
fcmovb
dec
jmp
or
xchg
movsl
mov
aad
ret
aas
or
js
xchg
cs
cmpsb
lahf
inc
stos
insb
cmpps
faddl
pop
jno
and
add
mov
std
mov
sub
test
add
add
add
ret
jne
in
xor
nop
lock
shlb
inc
in
jno
push
pusha
mov
push
gs
mov
mov
xor
repnz
in
jecxz
xchg
mov
xor
pop
and
mov
cmp
mov
popf
pop
cwtl
fstps
push
mov
jno
pop
adcl
add
ficoml
out
pop
xor
mov
push
jno
out
pop
sub
add
inc
sarb
adc
jne
movsl
pop
pop
cld
and
or
cmc
sahf
into
aas
pminsw
add
movsb
jbe
pop
mov
fsubs
push
push
xchg
sti
sub
testl
imul
fstpt
repz
sub
mov
leave
lret
int
add
sub
xor
sbb
sbb
inc
pop
inc
push
cmp
adcl
xchg
fisttps
mov
push
push
jbe
add
add
add
cwtl
stos
in
mov
pushf
sub
je
movl
insb
xchg
movsb
mov
leave
mov
test
push
gs
mov
roll
out
xorl
or
lods
adc
cmpsl
ja
sub
mov
dec
into
movsl
or
push
mull
mov
pusha
xor
int
and
clc
rcll
rol
xchg
into
imul
int3
jne
cmp
pop
push
or
outsb
out
or
xchg
sub
adc
xchg
in
jo
movsl
jbe
mov
xchg
sbb
shlb
js
pop
pop
mov
insb
jge
cmpsl
in
rol
and
mov
gs
out
sbb
or
cmp
mov
inc
xchg
cltd
sbb
fisubs
imul
pop
inc
fdivp
enter
sbb
lret
std
add
bound
sub
sbb
ja
add
add
add
insl
daa
xor
leave
scas
push
out
outsb
movsl
xor
push
adc
sbb
mov
cmp
insl
outsl
add
xchg
jl
and
aam
outsl
lcall
out
rclb
inc
sub
test
sub
cmp
sti
mov
mov
aaa
test
mov
out
push
mov
jnp
and
ror
adc
cwtl
cmpb
inc
lret
je
jp
ds
test
fmull
inc
push
add
and
in
dec
push
pop
mov
mov
push
stos
enter
loopne
sbb
add
push
mov
pop
aad
mov
xchg
int3
or
int3
pop
lret
int
add
xchg
add
push
cmp
fidivs
push
sarl
sti
or
push
sbb
and
insb
mov
hlt
inc
sub
leave
roll
pop
pop
mov
add
jns
divl
in
sub
lds
add
add
add
cmp
inc
in
stos
xor
xchg
mov
mov
pop
in
and
stos
aaa
mov
out
add
enter
sub
das
stos
pop
xor
push
andb
movsb
pusha
cmp
hlt
stos
push
enter
cmp
pop
addr16
jge
sub
push
sub
in
cld
fcoml
enter
xor
rcrl
lds
iret
outsl
dec
ficoms
sbb
pop
add
and
lds
sbb
mov
mov
and
out
test
test
cmp
insl
loope
test
cmp
jo
inc
dec
sub
sarl
push
shr
nop
test
adc
adc
movsl
fldl
mov
stc
stc
adc
fs
push
fwait
dec
outsl
dec
and
mov
lock
xchg
cmp
add
fisubs
mov
mov
inc
aam
jns
add
add
add
dec
push
ja
sbb
mov
cmp
push
add
dec
icebp
icebp
inc
sbb
out
scas
push
stc
stos
dec
xchg
push
jbe
not
pusha
sbb
std
fldl
dec
xorl
cld
std
jno
dec
movsb
sub
dec
enter
scas
jg
adc
xor
pop
xor
arpl
nop
mov
adc
dec
sbb
fwait
mov
sti
sub
ljmp
sti
int3
xchg
imul
dec
mov
sub
mov
cmp
dec
pop
data16
in
jnp
cmp
out
adc
jle
pusha
push
pop
cmpsb
fstpl
in
outsb
clc
jae
mov
xor
push
push
sub
clc
jo
mov
lds
call
int3
pop
ljmp
add
sbb
jge
add
or
in
idivb
shlb
in
xchg
cmc
fcmovbe
add
mov
outsl
jne
ljmp
add
add
add
add
lea
mov
sahf
xor
and
aaa
inc
mov
or
xor
pop
jne
movsb
push
arpl
rclb
fcoms
mov
inc
jo
cmp
push
ret
stc
outsb
out
cld
int
rcl
adc
inc
and
cmpb
sub
push
or
cmpsb
faddl
out
xor
jmp
das
push
and
cmc
jns
repz
stos
adc
enter
pushf
pusha
cmpsl
mov
in
cld
or
or
aaa
sbb
test
leave
leave
mov
ret
jmp
adc
jns
pop
jno
push
ret
cmp
out
cmp
pop
pushf
popf
ja
in
dec
and
dec
dec
jne
sub
mov
push
gs
push
fs
in
mov
imull
adc
xlat
pop
scas
jmp
mov
push
rclb
xchg
xor
lret
in
add
testl
xor
jnp
add
add
add
lcall
ja
jb
xor
xchg
sub
jno
and
lea
clc
int3
lcall
movsb
push
sub
bound
ret
jmp
aam
out
sbb
mov
hlt
add
lods
inc
cwtl
js
and
les
adcl
in
roll
aad
popw
lods
sbb
sbbl
iret
or
push
dec
sub
cli
cmp
lret
mov
jb
nop
mov
cmpsl
pop
sbbl
or
psignw
mov
pop
sub
ficompl
and
iret
jecxz
stos
xor
pop
xchg
cmp
fwait
jb
xor
addr16
xchg
les
ffreep
mov
jne
pop
mov
pop
ljmp
jge
add
or
cli
sbb
pop
sbb
in
or
iret
mov
pop
fiadds
xor
jo
ja
std
stos
sbb
ljmp
add
incl
add
pop
xor
adc
adc
jns
or
jb
ret
movsl
rcrl
movsl
ror
sbb
adc
hlt
das
sbb
dec
pusha
aaa
add
pushf
mov
or
mov
sbbl
push
aas
bound
xchg
unpcklps
test
movsb
das
xor
mov
mov
xchg
lods
sub
aaa
movsb
insb
ficomps
xor
and
cmpl
push
mov
cld
pushf
jb
lret
jmp
test
jb
inc
test
or
push
mov
jl
push
pop
inc
or
cmp
and
push
lods
jg
sub
mov
fwait
dec
movsl
subb
dec
xchg
jl
pop
mov
or
in
int
push
sbb
sbb
dec
mov
xchg
movsl
in
ljmp
mov
cmpsb
push
sbb
adc
incl
add
in
cmpsb
rcrb
dec
std
call
dec
and
pushf
insl
pop
movsb
mov
outsl
mov
mov
fsub
iret
add
sub
mov
in
repz
jmp
add
push
sbb
call
xchg
dec
and
pop
fldt
xor
popf
push
sbb
mov
movsl
mov
incl
add
aaa
adc
xchg
sbb
mov
mov
pop
addr16
repz
cld
adc
arpl
xchg
adc
stos
or
test
icebp
imul
mov
inc
mov
inc
ret
pop
aad
icebp
add
xchg
xor
push
pop
add
loop
xor
cld
mov
lahf
mov
mov
mov
stc
mov
jl
jae
inc
mov
sub
pop
mov
movsb
mov
mov
xor
cli
mov
hlt
std
fcomps
jle
add
add
add
sbb
sti
sbb
sbbl
inc
mov
add
mov
test
test
imul
mov
sbb
pop
lods
jae
sarl
imul
mov
je
dec
mov
cmpsb
stos
imul
inc
jae
inc
cld
jmp
xor
push
sbb
iret
repz
mov
sarl
cmp
adcl
sub
and
xchg
insl
pop
sub
sub
rorl
add
xor
leave
in
pop
cmp
pop
das
test
stos
jmp
adc
xor
js
push
or
or
mov
push
leave
lds
rclb
or
cmp
xchg
jl
les
xchg
xchg
push
mov
dec
xchg
adc
test
fistps
aam
lds
mov
movsl
xchg
inc
and
mov
mov
mov
add
std
test
lcall
mov
call
incl
add
dec
add
push
lock
lcall
pusha
and
pop
fidivrs
rcr
cmpl
mov
ret
in
insl
dec
mov
nop
jecxz
or
ss
aad
shl
sahf
cmpsl
ret
bound
subl
xlat
data16
sbb
sub
xor
outsl
jbe
mov
cs
sbbl
mov
pop
xchg
imul
stos
xor
mov
push
push
xchg
push
ret
pop
scas
daa
mov
cmc
out
jecxz
ret
xchg
lock
out
loope
mov
out
mov
pop
add
in
add
dec
sub
dec
xor
push
push
jo
stos
pop
adc
lmsw
cltd
aad
inc
dec
in
jmp
in
xchg
test
mulb
sbb
or
add
ret
nop
xor
mov
in
sub
ret
add
inc
loop
cmp
xor
pop
lods
jecxz
testb
daa
mov
xor
incl
add
test
flds
outsl
leave
movsl
cmp
popa
iret
imulb
push
lret
ret
ffree
ja
shlb
lods
inc
lods
je
push
std
xor
dec
jecxz
mov
lret
fwait
mov
shlb
shlb
loope
jb
add
xchg
stc
insl
push
jbe
mov
lret
in
sub
xor
aaa
rorl
hlt
jnp
aas
xor
xchg
aam
xchg
cmp
out
shlb
test
jbe,pt
pop
ret
mov
clc
adc
xchg
inc
xchg
scas
mov
sub
es
mov
roll
std
dec
lea
pop
loopne
insl
aad
je
fiaddl
jg
or
or
mov
push
and
xor
cltd
jg
mov
fmull
jmp
pop
adc
into
mov
jno
xor
repz
add
lcall
push
addl
add
fnstcw
repnz
ja
inc
add
aaa
bound
mov
xor
sub
pop
xchg
pop
mov
cs
sahf
xchg
fstpl
jb
inc
inc
mov
pop
push
inc
movsl
lods
xor
pusha
cmp
loop
sub
pop
ss
add
cmp
test
repnz
mov
add
test
mov
adc
sbb
les
cmc
jns
repnz
fidivrl
add
jl
push
sbb
jle
loope
mov
jb
xchg
push
cwtl
and
mov
jnp
xchg
in
add
jle
or
jbe
cmc
adc
mov
loop
or
loopne
out
cltd
push
test
fucomp
lret
into
sbb
xchg
lock
adc
or
inc
fwait
sti
movsl
xchg
lahf
inc
and
xchg
xchg
add
pop
ds
mov
adc
add
mov
idiv
jne
iret
data16
add
add
add
cmp
dec
ja
dec
dec
dec
mov
push
xchg
scas
test
mov
pushf
dec
xchg
insb
mov
test
push
mov
mov
sub
addr16
inc
jnp,pn
ret
xchg
inc
ret
pop
in
nop
push
sub
mov
add
repnz
fs
mov
out
mov
push
mov
aaa
mov
xor
sub
sub
rcrb
xorb
in
inc
test
pop
hlt
pop
xchg
ja
jnp
mov
mov
inc
xor
mov
scas
mov
roll
dec
sbb
mov
pop
in
stc
dec
shrl
out
push
daa
push
insb
iret
jecxz
orb
sub
out
mov
cwtl
sti
sahf
jle
cmp
push
dec
icebp
mov
addr16
mov
mov
fldl
jne
sbb
push
xchg
or
iret
jne
xchg
enter
cmp
pushf
add
pushl
sub
ds
mov
incl
add
jnp
dec
jmp
fdivrp
push
sbb
sub
jns
cmp
xchg
push
stos
lret
xchg
dec
push
jne
xchg
xchg
xchg
hlt
std
scas
ds
mov
and
lods
incb
and
cmp
ds
mov
xchg
pop
mov
adc
push
adc
cmpsl
mov
mov
aas
faddp
cmpsl
lret
ret
sahf
pop
rorl
jnp
or
imul
xchg
pop
popa
incb
lea
add
mov
jae
scas
lods
xchg
pop
mov
andl
add
out
imul
dec
push
fsubs
mov
insb
push
xchg
xor
mov
aam
xchg
insl
dec
jb
test
in
test
adc
add
or
sbb
pop
jno
xor
lock
adcb
addr16
das
mov
mov
shl
call
test
and
mov
jge
std
sti
iret
ss
push
jno
test
cld
mov
add
add
adc
pusha
aam
jp
repnz
jg
pusha
lahf
pop
negb
fstpt
les
inc
roll
std
fsubl
insb
jo
jge
fcoml
test
enter
push
faddp
int
or
stc
xlat
pop
mov
out
mov
js
pop
sbb
jb
sub
cmp
xor
sub
push
cmp
push
and
mov
jnp
mov
lahf
stc
cmpsl
jns
loopne
dec
rclb
mov
pop
xchg
mov
repz
push
aam
add
out
out
mov
cwtl
insl
mov
rcrl
add
dec
leave
mov
leave
cmp
dec
mov
fcomps
in
in
daa
xor
je
xlat
push
cmpl
jo
jl
mov
add
push
das
jo
jl
xor
loope
fildll
xor
jecxz
mov
mov
mov
jo
jp
add
outsl
xchg
inc
lahf
sti
hlt
out
dec
roll
fwait
mov
mov
add
add
mov
and
andl
push
lock
test
adc
test
test
call
inc
aaa
insb
test
mov
aad
xlat
roll
imul
lods
pop
shlb
xchg
or
mov
pop
sbb
cmp
push
movsl
xor
and
dec
jmp
sub
movsl
inc
push
in
aaa
mov
insb
inc
lret
sahf
notl
push
icebp
movb
inc
fimull
xchg
enter
insl
popa
cmp
bound
aas
jnp
push
jnp
pop
lahf
mov
cmc
sarb
jmp
lahf
push
jns
sub
les
in
sarb
jp
push
out
xchg
addr16
outsb
dec
mov
popf
mov
loope
test
xorl
scas
cmpsb
cmpsb
pop
cmp
pop
leave
insb
pop
rclb
cmp
mov
add
add
mov
mov
xchg
add
add
add
inc
cmpsl
and
pop
rcl
mov
and
int
data16
stos
aas
xchg
mov
daa
jb
testb
jae,pn
adc
sub
push
lret
mov
mov
sbb
pop
mov
sbb
or
xlat
push
ds
sbb
fstpl
mov
popl
fwait
xchg
sub
push
fwait
nop
lods
ret
jo
mov
xor
and
inc
outsb
cmpsb
frstor
or
adc
clc
push
mov
or
scas
jecxz
adc
lcall
aaa
push
jle
sub
sbb
stos
adc
in
pop
leave
push
cld
test
adc
mov
add
mov
cmp
xor
in
dec
lret
in
rcrb
or
fistpll
notb
cmp
call
jns
popa
sub
or
xchg
pusha
cmp
push
pusha
sub
and
out
ljmp
lock
xchg
dec
and
add
incl
add
insl
and
popa
not
pop
xor
rcr
mov
incl
fmuls
lods
test
mov
js
std
cmp
rclb
sub
sbb
scas
pushw
into
push
daa
adc
pop
clc
mov
sbb
and
aas
mov
cli
daa
je
xor
fldcw
dec
test
jmp
loop
push
cmpsl
popa
dec
jle
fidivrl
loop
rol
jne
push
xor
mov
adc
popf
push
arpl
out
jns
mov
rolb
push
leave
sarb
dec
and
sbb
push
leave
and
cmp
xor
jle
adc
orl
adc
dec
addb
mov
test
leave
nop
loop
pop
test
movsl
gs
iret
in
mov
mov
jbe
jge
lods
lds
imul
push
jnp
sbb
push
xor
out
movsb
sub
add
add
mov
adc
and
aad
xor
jno
lahf
repz
jecxz
mov
lods
mov
and
fldenv
mov
rcl
stos
cli
mov
pusha
cmp
jne
push
das
mov
and
mov
mov
in
dec
mov
jb
aad
mov
xchg
jnp
in
sarb
mov
mov
data16
std
rol
push
lret
sub
popf
mov
xchg
dec
sub
lret
popf
shrb
lods
roll
push
movsb
adc
rorl
pop
mov
sub
cld
xchg
flds
and
pop
lahf
jno
inc
outsb
mov
or
popf
sbb
lret
and
sub
pop
mov
popf
stos
insb
lds
cltd
lahf
repz
sahf
ds
push
adc
xchg
cwtl
gs
xor
cmp
lock
mov
mov
inc
xchg
mov
add
aas
or
mov
inc
mov
add
incl
add
cmpsl
in
test
add
cmp
sub
notl
dec
pushl
mov
in
mov
add
scas
mov
rorl
pop
iret
lods
xor
pop
sub
mov
andl
inc
adc
popa
mov
push
dec
ss
xchg
aas
push
cltd
dec
sbb
sub
std
cmp
sub
dec
ret
fisubl
dec
les
iret
mov
xchg
add
jecxz
repz
lock
cli
jmp
jecxz
inc
sub
xor
add
jge
cmc
fstpt
mov
dec
testl
inc
rcrl
ljmp
imul
dec
and
outsb
inc
imul
les
popa
adcl
jecxz
xchg
jle
or
inc
xchg
pop
lret
cmc
pop
pop
and
jle
popa
lds
or
mov
mov
add
insb
fidivl
bound
call
add
add
add
jecxz
mov
jmp
pop
ficoml
fwait
mov
in
mov
adc
and
sub
out
into
shrb
pusha
fildll
xchg
clc
out
or
jno
inc
ss
sub
mov
cld
imul
xor
into
test
les
sub
push
lea
sbb
jl
inc
pop
xor
incb
ss
inc
mov
std
cmp
mov
mov
cmpsl
insl
pop
xorl
or
shl
xor
shrb
push
cltd
jne
rcl
outsl
mov
outsl
mov
mov
xchg
mov
in
xchg
outsb
aam
adc
outsl
lock
push
lds
and
lcall
and
lods
xor
xchg
mov
xor
stc
sub
punpckhwd
test
dec
inc
and
cmp
mov
jns
out
mov
add
add
add
cmp
lahf
sti
jbe
mov
es
int3
and
push
dec
lods
fldenv
les
aam
pop
loop
cmp
int3
cli
adc
insb
mov
outsb
lea
pop
aam
cmp
fsubl
xor
arpl
movsl
nop
pop
xlat
pop
out
mov
imulb
xchg
loope
fisttpll
push
pop
adc
not
fldcw
nop
addr16
xchg
rclb
jmp
mov
mov
push
xlat
inc
adc
push
sbb
lods
jl
mov
cmpps
cltd
inc
mov
insl
vsubpd
imul
cmp
loopne
pusha
cwtl
mov
and
adc
fisttpll
add
xor
push
mov
imul
es
fs
data16
cmc
cld
lcall
dec
xchg
mov
jns,pn
cmp
inc
bound
dec
push
int
fstp
iret
push
cmpsb
fadd
dec
mov
add
add
add
test
sbb
xchg
imul
xchg
jg
pop
xor
mov
and
or
jne
mov
adc
movsb
call
or
or
addb
call
mov
adc
packssdw
outsl
out
out
mov
nop
push
and
in
adc
mov
movsb
add
inc
push
daa
adc
pop
sbb
int3
fs
add
shrb
cs
cltd
stos
sub
loope
retw
pushf
jae
outsb
ret
adc
ds
mov
arpl
mov
ffreep
pop
pop
testl
rclb
xchg
inc
push
xor
mov
mov
es
stc
pop
cs
iret
popa
push
cmp
lret
push
repnz
ret
inc
daa
fcompl
xchg
jb
adc
inc
inc
jae
imul
sbb
add
adc
std
out
ljmp
mov
add
incl
add
test
cmp
add
cs
stos
cmp
dec
inc
and
mov
push
adc
scas
xor
insl
scas
adc
mov
sbb
ret
imul
pop
mov
dec
cmp
or
push
in
cmpsb
jp
lret
sti
sub
fisttps
scas
mov
lcall
sub
cmp
add
data16
mov
mov
mov
pop
push
sbb
add
lock
js
dec
lret
lcall
sub
or
pop
loope
test
fdivrl
jne
dec
es
clc
push
daa
mov
movsb
cmp
cs
cmpb
adc
mov
scas
cmp
scas
out
aaa
repz
das
mov
rorl
xor
data16
xchg
xchg
jns
rolb
pushl
sbb
int3
fimuls
lods
les
jnp
mov
icebp
jns
pop
scas
mov
add
add
add
or
mov
mov
cmpsl
int3
call
jge
mov
imul
jns
ja
push
push
xor
jnp
popa
jl
cmp
xor
pop
add
or
pop
idivl
lods
into
mov
mov
mov
fmull
add
mov
xor
jae
aam
int
mov
sbb
ret
pop
cmp
push
je
ljmp
mov
movsl
imull
pop
fisttps
dec
mov
mov
fistps
sub
shll
or
or
data16
pop
in
insl
or
add
cmp
ljmp
xchg
push
testb
sub
cmpsl
sbb
push
or
jl
mov
and
fldenv
push
movsb
push
inc
or
test
fcomps
add
jmp
xchg
scas
popl
add
add
add
mov
sahf
inc
mov
adcl
push
sub
pop
dec
fldl
rcr
aam
ret
aas
std
jmp
cmpl
pop
sub
and
add
ss
jle
pop
jo
mov
cmp
mov
pop
out
cmp
outsl
mov
ss
pushf
xor
mov
ljmp
inc
enter
bound
mov
in
sub
cmpsl
addr16
adc
add
aad
jmp
sbb
movsb
jo
dec
mov
movd
mov
imul
es
addr16
adc
es
mov
orb
test
and
mov
arpl
rcr
mov
adc
mov
xor
jge
mov
das
fwait
sbb
sub
addb
lcall
mov
ljmp
dec
mov
and
lods
nop
add
incl
add
aam
cwtl
push
dec
or
add
out
mov
lret
jecxz
test
testl
stc
jg
jp
ret
iret
cli
dec
jp
lcall
sub
or
and
mov
push
push
idivb
mov
fcmovnu
ljmp
negb
std
add
mov
cltd
icebp
or
movsl
iret
test
xor
cmp
sbb
mov
ljmp
mov
or
sub
mov
nop
cwtl
jle
cmp
leave
cmp
sbb
test
out
mov
xor
sub
sub
push
add
insb
stos
into
jge
out
test
sub
nop
sahf
add
aas
in
dec
in
fidivrl
sub
orb
cltd
cmpsb
aaa
leave
fdivl
push
xchg
inc
adc
mulb
add
lahf
repz
adc
mov
das
cmp
xchg
into
add
aaa
shlb
cmc
div
testl
call
incl
add
jle
jg
mov
dec
jge
mov
repnz
scas
cmpsb
jle
pop
clc
imul
rorb
movsb
mov
loope
xor
das
out
loopne
inc
hlt
shll
cmp
movsb
pop
mov
mov
mov
test
cmp
and
je
rol
inc
push
not
inc
push
data16
movsl
loop
mov
out
test
sub
mov
nop
loop
xchg
popf
scas
jne
cltd
aam
push
fs
sbb
mov
lahf
mov
fucom
movsl
push
das
xchg
inc
sarb
pop
lock
in
sbb
push
pop
call
dec
pop
push
inc
and
jns
jmp
dec
sbb
fistpl
jg
xlat
mov
push
cmp
pop
hlt
in
and
scas
shll
pop
insb
inc
lods
in
inc
push
adc
in
add
mov
inc
insl
push
inc
arpl
loop
loope
lcall
mov
bound
cmpsb
fwait
lock
add
push
sahf
rcr
pop
adcb
in
mov
add
incl
add
xlat
push
outsl
es
enter
jno
inc
dec
pop
cmpsb
cmp
ret
ficompl
pmullw
lret
cmc
pop
adc
out
xor
out
scas
js
push
jno
sub
jmp
inc
cmp
cltd
cmp
xchg
ret
icebp
fcmovb
xchg
test
scas
fsubs
icebp
inc
pop
in
dec
cmp
andb
xchg
or
mov
push
jecxz
stos
sub
ss
in
stc
aad
or
cld
test
or
std
mov
ret
push
and
push
jb
icebp
add
fldl
icebp
mov
pop
out
test
mov
dec
lcall
push
or
dec
repnz
mov
xorl
sbbl
xor
loop
sbb
daa
fnsave
out
lods
psrlw
stos
and
mov
pop
in
pusha
dec
dec
xlat
or
out
fmul
fs
int
or
loope
jmp
insb
pop
add
arpl
cmpsb
jcxz
fimull
stos
xchg
add
incl
add
cltd
enterw
cmc
lret
enter
push
loope
aad
scas
repnz
popa
xchg
lock
aad
repnz
cmp
pushl
pop
push
sti
dec
es
cwtl
decb
aaa
jmp
push
ret
shll
or
repnz
pop
push
jno
imul
cmpsl
testl
jl
addr16
jl
cmp
and
inc
loop
orb
addl
popf
lds
adcb
subl
pop
inc
sub
pusha
xchg
imul
out
mov
mov
andl
cmp
mov
add
dec
inc
rclb
mov
jo
fidivs
dec
cs
jge
fcom
cmp
inc
cli
mov
in
fidivrs
repz
aaa
sbb
fwait
push
mov
mov
cmpsb
insl
jbe
dec
insb
shr
or
ss
sbb
mov
jno
movsl
xchg
int
pop
bound
sub
pop
mov
add
clc
jnp
jg
in
cli
enter
std
gs
sub
add
add
sbb
add
aas
sti
xor
aaa
cmp
gs
sti
xchg
lock
int
in
push
rcrl
repnz
popa
or
outsb
xor
xor
in
insl
inc
pushf
and
ret
mov
and
nop
push
lods
xchg
test
or
bound
mov
mov
jmp
daa
push
adc
pushf
enter
sub
pop
out
pop
cmp
and
push
imul
pop
enter
fstl
stos
scas
rorb
cmp
mov
in
fwait
dec
imull
inc
sub
rcrl
jl
mov
std
add
cmp
or
stos
loopne
mov
inc
std
jp
add
fbstp
mov
jl
dec
lret
int
das
and
das
icebp
int
ja
scas
cmpsl
pushf
loop
inc
lcall
dec
sbb
inc
sub
xor
in
out
out
je
das
pop
ret
mov
ljmp
cld
gs
mov
test
add
incl
add
inc
xor
outsl
test
pushf
push
xor
xor
imul
test
fbld
sbb
in
dec
mov
ja
push
rol
inc
repz
in
lahf
dec
dec
push
push
into
nop
sub
stc
out
pop
inc
outsb
xbegin
popl
gs
sbb
daa
mov
ficoml
inc
sub
aaa
rorb
push
ljmp
fstl
lock
jg
hlt
shlb
out
mov
les
lds
and
fwait
adc
in
pushl
jg
mov
jmp
loope
and
jb
mov
sahf
cmp
pop
mov
pop
sbb
lds
adcl
pop
sub
out
cmpsl
mov
xor
daa
mov
sbb
pop
jbe
shl
sti
sti
push
fldt
sbb
jnp
mov
cmpsb
imull
pusha
add
jl
sar
std
jle
pop
popf
scas
cmp
sbb
incl
add
fwait
mov
pop
push
icebp
test
cmp
or
xchg
pop
addb
sahf
dec
in
or
sarb
nop
push
shlb
mov
ds
jno
mov
adc
das
add
popw
push
pop
ljmp
loop
mov
mov
sti
lock
ret
hlt
mov
or
in
and
inc
mov
rcr
stos
dec
lahf
adc
outsl
loop
lock
xor
mov
cmp
dec
sub
sbb
mov
lds
or
cmp
les
out
fst
xchg
inc
mov
adc
pop
jle
popa
or
xchg
fstpl
cmpl
inc
fcomp
data16
and
mov
inc
push
in
js
cmc
inc
cli
es
aaa
out
lods
push
adc
jle
in
sub
mov
pop
pop
xchg
xchg
cmpsl
mov
cmp
testl
sti
dec
mov
add
cmp
cmp
in
cltd
adc
add
add
add
inc
nop
out
imul
fsts
pop
adc
pop
jbe
push
daa
lahf
jno
push
test
sbb
mov
stc
jns
out
push
cmp
subl
das
mov
mov
js
mov
dec
sbbb
inc
xchg
loope
jmp
leave
pop
sbb
aad
lods
xlat
ljmp
jne
and
adc
jle
and
cmp
pop
cmpb
sub
pop
stc
adc
adcl
mov
add
filds
pushf
decb
mov
arpl
leave
push
je
jae
in
dec
cmp
dec
jo
xor
loope
pop
rcll
ret
pop
call
jae
fiadds
pop
js
add
add
xchg
int3
xchg
aaa
test
test
insl
mov
xchg
sbb
daa
xchg
adc
pop
jb
std
sti
ret
push
popf
and
fstps
inc
jns
sub
add
outsl
sti
mov
mov
out
outsb
movsl
cwtl
add
incl
add
jne
inc
adc
pusha
push
jecxz
inc
xchg
loop
pop
insl
mov
xchg
shll
sbb
rcrl
jl
mov
orb
lahf
cmc
inc
test
out
push
mov
sbb
jg
and
in
ljmp
je
sbb
xchg
or
icebp
jae
iret
mov
hlt
nop
and
jns
dec
addr16
pop
sub
xor
lea
xchg
test
or
mov
jbe
fadds
dec
xchg
cmp
cmc
jb,pn
adc
mov
out
xor
adc
add
int
adc
insl
pop
jl
ss
lock
jmp
dec
rolb
stc
decb
sbb
imul
or
inc
je
sarl
xor
mov
imull
or
jmp
add
xchg
sub
xor
outsb
movsb
xor
add
push
and
xlat
aas
dec
sbb
or
movsb
cltd
add
incl
add
mov
ret
mov
mov
pushf
mov
xor
mov
jnp
ljmp
loope
popl
enter
pop
jp
in
enter
ljmp
adc
repz
lret
outsl
repz
sbb
imul
sbb
sbb
pop
imul
mov
mov
stos
movb
jno
pop
jno
repz
loop
mov
data16
dec
push
add
jge
je
jl
or
mov
mov
mov
dec
add
pop
jmp
jnp
mov
hlt
icebp
or
cmp
repnz
shrb
into
les
add
cmp
rcl
mov
sub
test
cmp
outsl
add
sbb
or
das
inc
inc
repnz
push
adc
jnp
ret
cmp
mov
in
mov
addr16
loopne
rorb
imul
xchg
mov
addb
add
add
mov
mov
jmp
test
lcall
daa
lret
lret
inc
lahf
std
ss
or
sbb
adcl
lret
daa
mov
movaps
sti
aaa
cltd
popa
mov
jl
pop
test
je
stos
neg
add
sahf
cmp
sbb
jge
in
loop
adc
scas
notb
sarb
xchg
pop
xchg
aam
aas
jne
dec
mov
mul
lds
mov
js
pop
in
sub
cwtl
jne
sti
mov
dec
dec
mov
mov
mov
jae
jnp
in
rcll
bound
sbb
in
or
cli
xor
in
mov
repz
mov
ja
adc
faddl
cmp
push
sub
arpl
adc
adc
add
add
sub
pushf
push
or
aaa
or
decb
pop
xlat
mov
stos
push
adc
fmulp
insb
cmpl
pop
psrlw
xchg
inc
cli
push
jp
add
adc
sbbl
popl
push
icebp
mov
add
add
ror
pop
stos
or
imul
jne
sub
xor
cmp
lcall
cmp
test
mov
into
aad
mov
popf
push
clc
add
xchg
lds
bound
inc
lret
mov
push
repz
iret
mov
lods
adc
jo
gs
jnp
insl
leave
repnz
adc
or
or
mov
inc
and
mov
mov
jecxz
pop
pushf
add
dec
data16
dec
imull
add
sarb
cmp
jl
dec
pop
out
inc
sti
cmpsb
out
clc
jns
inc
lret
sbb
mov
lret
jbe
or
cmpsl
in
enter
cmp
add
int3
jge
jp
daa
arpl
mov
adc
nop
in
xor
mov
std
xor
xlat
cmpps
shrb
nop
add
enter
mov
mov
imul
movsb
and
arpl
fnstsw
incl
add
sbb
xchg
adc
xorl
mov
rol
lock
imul
lcall
lret
or
mov
popf
mov
lock
orl
hlt
lock
inc
cmp
add
fadds
lods
mov
arpl
stc
push
add
or
push
jns
clts
enter
xchg
inc
es
xor
cli
lds
out
arpl
mov
sbb
pop
and
dec
mov
lea
sub
jnp
cwtl
jae
cmp
sti
xor
add
push
mov
sub
fisttpll
pop
dec
or
pop
shll
insl
fwait
add
pop
mov
fs
pop
lea
cmp
stos
add
adc
roll
sub
pop
mov
jb
ret
inc
in
xlat
stc
xchg
lods
cmpsb
mov
push
mov
jge
jg
ljmp
in
lahf
mov
iret
lret
clc
mov
add
add
mov
stos
ss
pop
rcll
in
in
mov
adc
or
data16
inc
fdivrs
pop
pusha
pop
jns
popf
pushf
pop
ret
fbld
int
xchg
and
cmpsl
je
fstps
push
test
dec
adc
dec
xchg
dec
or
fisubrl
bound
add
sub
in
and
xchg
sbb
dec
lret
lret
cmp
rep
mov
pop
add
cltd
ds
add
cmc
xorl
xor
pushl
pop
ds
mov
movsl
jle
cmp
dec
cwtl
pop
or
mov
stos
xor
push
adc
jmp
dec
out
inc
mov
xchg
push
inc
rcll
into
cmpl
pop
add
into
push
iret
test
xor
jle
sbb
cltd
sub
out
inc
sub
or
scas
push
push
lahf
sahf
add
incl
add
cltd
inc
or
nop
inc
decl
xchg
dec
rorb
xor
sub
cmp
insb
out
push
in
sarb
int3
xor
add
fs
push
sahf
dec
imul
add
or
or
repz
dec
jge
repnz
mov
pop
fsubs
rorl
stos
pop
mov
pushf
fistpl
jb
in
out
dec
nop
vmovq
addr16
dec
cwtl
inc
stos
xchg
shll
xorb
ficoms
mov
arpl
pop
add
lock
lret
dec
shll
inc
push
xchg
xor
mov
pop
mov
lret
jge
fnstcw
bound
fwait
cmp
sbb
adc
adc
mov
jmp
mov
jbe
daa
std
add
mov
test
mov
and
andb
push
jnp
sbb
push
or
cltd
jmp
cwtl
add
pusha
test
mov
cld
mov
sahf
lahf
add
incl
add
adc
jmp
mov
add
jnp
fcoms
sub
mov
add
pop
lcall
cmp
xchg
or
inc
lahf
xor
insb
and
cmp
pop
mov
call
sbb
jne
xchg
ret
push
jnp
jle
nop
loope,pt
lret
sbb
ret
clc
scas
icebp
mov
test
push
rolb
sbb
dec
js
jp
lret
xor
adc
mov
dec
push
leave
dec
push
xchg
mov
stos
bound
jno
xor
in
pop
lock
or
test
mov
cmp
adc
fucomip
inc
xchg
mov
aam
adc
mov
imul
clc
or
fwait
xchg
ficompl
push
pop
andl
xlat
inc
lds
mov
mov
aad
in
mov
or
lcall
sbbl
add
add
add
dec
mov
cmp
mov
jl
xlat
xchg
std
cmp
jmp
pop
rorb
ja
rcrb
iret
popa
movsb
mov
jnp
lret
inc
pop
in
or
fwait
xchg
pushf
ret
or
mov
pop
adc
ljmp
pop
inc
add
mov
adc
mov
dec
push
xchg
mov
popa
repnz
fisubrs
jo
inc
popf
mov
mov
xchg
test
cmp
rcll
push
sbb
gs
andb
add
ret
pop
mov
push
les
jae
and
ret
addr16
fnstenv
rcr
pop
jg
nop
pop
bound
mov
pop
dec
adc
xor
sahf
frstor
push
mov
push
addl
push
or
pop
pop
int
xor
stos
pop
pop
xchg
dec
mov
cltd
dec
call
repnz
cs
pop
jecxz
pusha
ds
add
add
mov
inc
inc
add
mov
add
sub
es
push
jne
mov
addr16
xor
icebp
fidivrl
jne
mov
jmp
push
pop
sbb
fdivs
je
lret
add
add
fwait
repz
push
shlb
mov
shll
bound
je
test
jne
inc
dec
cmpsl
out
sbb
enter
mov
xchg
mov
mov
pusha
mov
xchg
adc
push
xor
popa
add
lock
lds
push
data16
hlt
into
dec
shl
push
jl
mov
inc
ret
sar
lock
pop
dec
adc
ret
cltd
sbb
sub
xlat
xchg
lret
and
or
sbb
leave
xor
adc
popf
pop
insb
ret
bound
mov
and
cmp
push
or
push
std
pop
or
bound
mov
sub
add
std
inc
mov
pop
fwait
mov
add
movl
lods
lret
data16
inc
cmp
push
adc
dec
dec
lea
js
mov
mov
xchg
xchg
dec
pop
ja
pusha
sbb
ss
jmp
ret
pop
fsubr
imul
push
xorb
cmp
cmp
push
fdivrl
sti
mov
jae
mov
js
and
sahf
fistps
stos
mov
xor
pushf
out
push
arpl
or
xlat
mov
fdivrl
pop
and
mov
mov
inc
mov
jne
stos
add
xchg
addr16
imul
mov
clc
xchg
sbb
cmp
cld
data16
bound
push
jecxz
xchg
inc
xorb
sti
loop
lods
mov
xor
arpl
sub
inc
adc
out
add
inc
fdivl
push
dec
mov
lcall
add
push
loope
int
jns
addb
je
pushw
or
fbstp
loope
lret
test
jg
push
fs
addl
add
loop
dec
popf
sarb
xor
adc
adc
dec
jl
push
lahf
repnz
jno
fadds
mov
jmp
sub
outsb
push
pop
pop
popf
mov
lock
jbe
and
divb
iret
xor
mov
test
mov
nop
sbb
test
inc
dec
jo
cs
add
fs
or
test
jno
sbb
in
cli
xor
push
add
dec
pop
and
dec
cmp
add
lret
sti
ret
fsts
dec
in
and
lea
loop
add
dec
repz
jp
push
sbb
sub
dec
ljmp
aaa
movsb
daa
ja
mov
pushf
jle
std
loopne,pn
and
push
mov
xchg
sub
gs
add
inc
inc
dec
in
add
sbb
mov
sbb
add
incl
add
movsl
bsr
add
push
jge
call
call
mov
and
subb
pop
push
mov
stos
loop
mov
add
scas
pusha
xchg
jae
jae
cmpsl
ds
lcall
jmp
fcomip
les
jg
xor
dec
sub
stos
xor
sbb
jns
roll
xchg
mov
les
dec
and
sub
ror
rcrb
xchg
repz
inc
ret
mov
pop
xor
in
adcl
jno
fimull
inc
and
rcl
fimuls
xor
dec
or
pop
out
mov
pop
or
pushf
lret
sarl
repnz
push
add
mull
das
lock
enter
sub
lret
xchg
xor
mov
inc
xchg
cmpsl
add
stos
hlt
jmp
cmp
jbe
inc
mov
add
add
add
adc
rcrl
push
pop
pop
rolb
adc
push
jg
leave
jae
adc
rcll
mov
mov
dec
pop
pop
aaa
jbe
push
dec
mov
imul
cwtl
data16
outsb
cmpsb
pop
jge
inc
stos
dec
or
sub
movsl
dec
js
je
xchg
scas
insl
movsb
pushf
inc
mov
leave
jmp
fwait
movsb
pop
mov
pop
or
mov
jnp
pop
push
dec
mov
push
jmp
jp
mov
mov
push
push
sar
cltd
jnp
fisubrs
test
les
nop
arpl
xor
fbld
adc
repnz
sbb
push
je
lret
fcmovbe
std
ret
mov
testl
cs
gs
ss
mov
sahf
ret
int3
out
cmp
xlat
mov
lods
mov
push
cmpsb
inc
aas
cmp
add
out
xlat
out
jg
in
xor
fnstcw
aad
stc
xchg
cmpsb
add
incl
add
push
fwait
xor
cmp
and
dec
push
lock
lcall
xchg
cmp
sbb
or
jecxz
xchg
scas
test
xor
xchg
popf
sbb
ds
inc
rcrb
fsubl
push
push
pop
bound
in
addr16
pop
xchg
jmp
mov
sbb
sbb
pop
je
mov
inc
lahf
sub
push
or
sbb
xchg
decl
sarb
lahf
cmpsb
stc
push
test
out
jae
es
in
scas
dec
push
popa
xor
movsb
adc
xchg
test
adc
jg
mulb
movsb
ficompl
mov
or
lahf
mov
aas
scas
sbb
or
add
enter
fildl
or
mov
lock
pop
mov
push
add
mov
cmp
daa
jl
mov
imul
sbb
pop
fbstp
fldl2e
ljmp
add
add
add
out
call
sub
pop
outsb
pop
dec
rolb
scas
push
mov
aaa
xor
das
ret
push
add
stos
test
xchg
push
pop
test
xchg
sub
ret
mov
and
jmp
pop
push
into
mov
fdivrl
xchg
loopne
xchg
cs
jbe
or
and
add
push
fwait
out
data16
popf
clc
aas
arpl
adc
cmp
push
inc
out
leave
add
lods
cltd
pop
mov
cmp
xchg
push
movsb
fs
out
push
add
pop
insl
mov
div
cmp
fwait
sbb
loop
pop
and
jle
movsb
dec
push
or
clc
out
sub
cmp
mov
mov
call
es
std
mov
pop
in
lods
add
test
pushf
int
inc
xchg
mov
xchg
push
and
xor
add
mov
fadds
xchg
test
add
add
add
int3
cli
jnp
pushf
clc
ds
pop
dec
jge
aaa
scas
mov
cmc
push
mov
cmc
fsubl
pop
pop
xor
xchg
jg
outsb
dec
outsl
jnp
scas
mov
aad
cmp
pop
cli
lea
push
dec
xchg
push
adc
pop
icebp
add
push
rcl
lds
adc
neg
test
adc
ficoms
test
ficoms
out
inc
jb
adc
xlat
xlat
push
push
cld
test
scas
les
std
or
mov
xor
mov
sahf
push
fidivrs
xor
call
psadbw
jno
xor
bound
sub
pop
test
in
test
fsts
xchg
mov
insb
fidivrs
test
jb
rolb
enter
out
lds
je
cmp
movsb
sbb
push
jp
sub
xchg
cmp
add
mov
push
sti
jmp
push
mov
divb
arpl
add
add
add
icebp
fdivs
pop
test
addr16
sub
dec
xor
jno
lock
imul
ret
pop
insb
or
aad
gs
mov
mov
in
data16
das
or
fs
jmp
ljmp
cld
aaa
test
in
les
sbb
jecxz
ljmp
and
cmc
outsl
shrb
xlat
imul
mov
pop
xor
mov
insl
pop
movsl
loop
cmc
jno
cmp
fsubrs
fldenv
movsl
out
mov
adc
add
mov
out
lods
shll
mov
push
xor
nop
shll
outsb
sti
fcomp
add
icebp
lods
call
movsl
mov
jecxz
add
fdivl
jmp
hlt
dec
jp
loopne
bound
dec
add
dec
jecxz
sub
inc
sub
push
mov
fldl
mov
jecxz
lock
pop
cmp
add
add
sub
leave
pop
repnz
pop
dec
pop
cld
xor
inc
xchg
add
xor
dec
loop
leave
clc
add
std
and
cmpsb
cmp
std
icebp
ja
cli
inc
bound
or
xchg
adc
mov
sbb
out
dec
fst
rcl
and
xchg
inc
mov
test
cmp
mov
fisubs
hlt
xchg
inc
into
lock
cmpsb
lea
ficomps
sub
popa
ljmp
mov
pop
adc
rcrl
push
lret
popf
mov
mov
inc
outsb
push
test
inc
lcall
aaa
add
sbb
sbb
jo
mov
gs
dec
negl
sahf
aad
mov
and
stos
sub
dec
sti
cld
mov
or
dec
ret
adc
int3
repnz
jno
adc
push
pop
rcl
es
insb
test
adc
mov
cld
mov
leave
arpl
mov
xchg
stos
add
incl
add
outsl
cmpsl
and
jbe
pusha
and
call
testl
ror
in
sub
lock
aam
mov
dec
jne
mov
out
cmc
jl
xchg
adc
inc
add
dec
xor
mov
add
das
int
lea
mov
xchg
adc
jnp
push
dec
mov
jbe
es
fldl
rorl
in
dec
sub
out
push
loope
in
mov
xor
cltd
sub
jbe
sarb
jae
jl
aad
fmull
inc
outsb
shrl
outsb
cmc
dec
iret
or
adc
and
push
cmp
sub
pop
jnp
roll
adc
orb
dec
push
ja
sbb
sbb
mov
stos
sub
dec
xchg
test
pop
xor
mov
test
add
add
out
cmc
mov
pop
jae
cld
xchg
lods
add
incl
add
adc
xchg
mov
das
stos
jge
xchg
in
test
dec
sub
sbb
pop
dec
imul
sti
jecxz
cld
sub
hlt
fnstcw
add
lods
fsubs
hlt
xlat
jmp
adc
xchg
jp
dec
jg
push
mov
adc
mov
push
mov
mov
lret
xor
stos
mov
aam
fisttps
xchg
repz
fildl
jmp
add
std
pop
xlat
jbe
rorl
mov
lea
enter
movsl
and
mov
js
sbb
or
insb
mov
xchg
add
xor
cmp
scas
jnp
scas
sqrtps
cmp
daa
movb
lods
sbb
push
push
cwtl
mov
push
xor
cltd
jno
push
jl
into
jmp
insb
fs
inc
sub
mov
mov
xchg
lret
enter
xchg
inc
cmovb
jl
inc
fwait
test
ret
pop
push
sar
jmp
inc
add
out
std
dec
std
pop
lcall
xchg
pop
push
rcll
insl
push
nop
lods
add
incl
add
pop
jb
pop
leave
adc
push
mov
cmp
mov
testl
out
stos
jecxz
push
mov
mov
cld
pop
push
daa
and
ret
mov
inc
xor
xchg
int
dec
push
outsb
add
roll
mov
clc
adc
aad
aaa
inc
jle
pop
and
xchg
mov
jns
inc
adc
mov
int3
or
fs
aad
xchg
imul
int3
pop
fwait
xchg
and
sub
inc
fcoms
sti
jne
insb
jmp
mov
and
imul
fs
fmul
loopne
insb
outsl
test
pop
stos
sbb
lods
bound
rcl
fsubrs
push
sbbb
cmpsw
hlt
mov
xchg
add
out
cmp
fisttps
xchg
xor
pop
mov
cmpsl
and
push
lahf
scas
jle
jo
inc
cs
dec
lods
jns
add
fidivs
loop
ljmp
inc
inc
or
scas
add
incl
add
dec
push
sbb
push
out
stos
and
test
imul
notb
pop
mov
bound
lods
lock
push
push
and
icebp
icebp
pop
cwtl
fwait
pop
test
sub
and
sti
je
lcall
call
push
cld
fists
inc
pop
stos
popa
data16
std
cli
adc
scas
daa
aas
pop
sub
add
mov
stos
in
xchg
imul
jo
adc
sbb
jle
xchg
jo
gs
imul
call
dec
ret
pop
pop
push
inc
push
ja
out
adc
dec
cmc
repz
mov
ds
shl
and
mov
add
test
repz
or
sub
dec
adc
mov
mov
mov
xchg
lods
popa
daa
inc
mov
jmp
ljmp
jge
dec
add
xchg
jg
jmp
std
mov
insb
jl
mov
add
std
pop
daa
fs
sti
cld
and
push
bound
in
xlat
push
test
jns
dec
mov
fimuls
sbb
cmp
mov
xchg
cmc
xor
pop
outsl
pop
lods
rcl
xchg
add
inc
sbb
adc
lcall
mov
stos
mov
cmp
repnz
mov
test
push
mov
mov
or
fnsave
pop
mov
lret
lret
inc
lcall
test
mov
imul
mov
out
push
pop
pop
jno
xchg
movsl
enter
sub
pushl
out
push
push
pop
loope
pusha
inc
mov
jge
mul
cltd
cmpsl
fisubrl
and
xchg
dec
mov
call
js
xor
push
das
pop
xor
pop
loopne
cmc
dec
cmp
aaa
adc
mov
sbb
sub
mov
es
adc
lods
inc
push
in
push
incl
das
movl
inc
inc
add
xor
inc
mov
in
lea
add
push
mov
fbld
pop
push
jo
rcll
xchg
mov
aad
ds
cmp
xor
xor
cmp
xor
aaa
pop
sub
push
aas
out
movsl
dec
xchg
fistl
hlt
sbb
test
movsl
sahf
xchg
cmp
mov
repnz
mov
popa
ss
add
test
jle
outsl
clc
lods
xchg
dec
cmpsl
clc
cmp
mov
call
movsl
cs
mulb
sbb
aaa
mov
mov
add
aas
or
jmp
adc
or
push
sbb
fcompl
jns
inc
xchg
mov
leave
inc
sub
outsl
xor
or
xchg
mov
cwtl
jns
lods
dec
push
les
push
test
cmc
push
xchg
outsb
sbb
loopne
iret
aam
jg
inc
sub
out
shlb
cld
fcmovu
push
jle
or
cmpsb
push
add
xor
cmp
inc
call
sbb
add
gs
mov
jb
push
ds
out
nop
das
outsb
aas
in
lock
inc
push
sub
cwtl
add
mov
push
and
call
cwtl
es
inc
ds
inc
mov
jge
cltd
out
dec
ljmp
arpl
out
mov
loopne
in
mov
nop
popf
xor
mov
lcall
cmp
ljmp
outsl
cli
push
sarb
dec
jge
fildll
outsb
pop
push
daa
jmp
mov
lahf
sbb
mov
rolb
jl
stc
and
xchg
das
cmp
in
pop
fwait
test
mov
in
rcrb
push
stc
icebp
add
lret
xchg
call
shrl
incl
mov
push
mull
sbb
addr16
and
imul
add
add
add
jp
les
mov
arpl
sub
mov
add
add
add
and
clc
cmp
pop
cmp
jle
jle
stos
es
mov
ss
pop
jns
sub
lahf
pop
sbb
push
mov
sub
and
adc
mov
ljmp
adc
sbb
jl
jnp
shl
imul
stc
mov
imul
jl
not
fadds
push
lahf
xchg
mov
mov
cmp
or
fidivl
lods
ret
mov
mov
scas
and
sbb
or
jl
faddp
pop
js
in
sbb
push
dec
jp
and
hlt
and
insb
data16
dec
aas
icebp
sub
aad
xor
dec
sbb
out
inc
and
bnd
xchg
loopne
es
and
repz
je
adc
push
notb
mov
pusha
sub
jb
dec
push
cwtl
imul
pusha
pusha
cmpsl
cmp
fwait
ja
out
mov
imull
add
dec
or
pop
stc
out
push
pop
bound
mov
incl
add
or
jbe,pt
jge
stos
inc
xlat
xor
scas
push
mov
in
and
in
pop
mov
push
xchg
pushf
fimuls
movsl
in
popa
lock
inc
cwtl
push
pop
addr16
loope
mov
sbb
cltd
mov
xchg
dec
jle
subl
or
lods
inc
and
out
or
testb
cmp
mov
add
mov
test
test
outsl
sbb
mov
or
mov
pop
mov
pushf
and
push
xor
mov
dec
adc
sti
dec
pop
test
dec
mov
lret
add
fsubs
sub
lret
test
mov
inc
sub
lahf
dec
inc
add
ret
fwait
jb
push
imul
mov
add
sbb
hlt
adc
and
dec
mov
scas
cltd
inc
loopne
cmpsl
inc
and
lds
cli
lcall
push
mov
add
shll
jp
repnz
dec
mov
and
add
nop
xchg
sbbl
les
les
sub
je
lahf
fstpt
mov
scas
jns
test
into
dec
jns
push
scas
movsb
jle
xlat
mov
push
dec
mov
and
into
add
pop
jb
call
insl
lods
leave
push
pop
cmp
ret
pop
jp
xor
mov
pushf
sub
adc
xchg
push
xor
decl
in
sub
std
loop
mov
push
xor
mov
jmp
push
outsb
jl
rorl
pusha
pop
cmp
mov
pushf
lret
jns
add
sbb
sbb
jnp
loopne
shrl
dec
fisttpl
inc
inc
es
jg
ret
mov
lods
popa
xor
fsubs
jge
dec
adc
int
cmp
xor
add
xorl
insb
lret
int3
das
mov
add
push
mov
rcll
mov
and
inc
xlat
mov
popf
or
push
mov
insl
imul
or
pushf
shrb
add
ja
nop
jae
into
sub
scas
push
mov
sbb
add
mov
jge
mov
enter
mov
popf
clc
in
imul
jne
lahf
scas
mov
mov
jg
sub
jge
lahf
jl
call
xor
faddl
sahf
fsts
pop
add
or
dec
dec
mov
aad
clc
adc
sub
cs
jecxz
xchg
jl
jl
mov
int
pop
out
push
pop
jne
lahf
xchg
fidivs
insb
mov
fnstenv
test
out
sub
jp
out
stc
jae
cmpsl
and
xchg
add
pop
sbbl
fstp
rorl
push
in
rolb
add
mov
pop
insl
rcr
mov
sbb
adcl
cli
addl
je
icebp
lret
mov
std
push
lods
lret
sbb
popa
dec
int3
mov
jnp
mov
je
mov
jle
es
negl
inc
jmp
jp
sub
jne
inc
iret
push
mov
fisttpl
mov
shll
sbb
xor
shll
mov
mov
cmp
sub
out
sbb
fs
adc
xchg
sbb
adc
and
les
mov
push
stc
movsl
repz
test
shlb
xchg
mov
loopne
mov
jnp
enter
fs
rcrl
mov
jns
cmp
dec
js
icebp
fucom
jae
inc
repnz
sub
cmpsb
push
test
mov
jecxz
shlb
and
inc
sub
mov
fidivl
aaa
add
in
mov
jecxz
out
mov
jno
mov
mov
add
add
add
cmpsl
call
pushf
faddp
mov
and
dec
dec
mov
xor
out
orl
push
pop
jmp
push
pop
fwait
insl
lahf
adc
loop
mov
jo
mov
lock
and
jmp
int
insb
add
mov
mov
in
push
lcall
xor
fisttpl
outsb
fbld
dec
repnz
push
jae
popf
popf
push
in
test
mov
sbb
jns
adc
jo
jle
insb
fisubs
mov
inc
or
pop
aad
scas
loopne
mov
clc
push
and
dec
imulb
pop
and
rclb
push
clc
cmpsb
into
adc
cmovne
jo
popl
cmp
fcmovu
out
and
les
sbb
mov
call
jbe
mov
sbb
out
jp
push
xchg
test
jg
into
lret
orl
add
add
pop
mov
test
test
or
mov
pop
mulb
lods
or
mov
adc
or
xchg
cwtl
mov
inc
mov
ja
mov
push
je
movsl
stos
pop
adc
unpckhps
ds
dec
lock
dec
sti
outsb
dec
sbb
in
or
addr16
cltd
sahf
xchg
xchg
repz
mov
xchg
popa
stos
xchg
xor
out
dec
and
cmp
mov
sbb
jbe
notl
ret
ret
rorl
addr16
shlb
xchg
scas
test
xchg
xorl
fs
inc
mov
or
jg
gs
mov
frstor
cld
pop
mov
adc
int
scas
stc
dec
fsubs
dec
jp
cmc
xchg
push
aad
ret
gs
shlb
sub
xor
pop
in
in
std
pusha
clc
jbe
dec
negb
subb
and
cmp
lahf
leave
xchg
iret
hlt
ds
mov
lods
add
adc
in
lcall
jae
dec
mov
lret
test
add
insl
push
outsl
cmp
ss
sbb
add
loopne
loop
sbb
sbb
sub
lcall
filds
sub
ljmp
lret
inc
cltd
sbb
sub
idiv
and
and
nop
inc
into
fistpl
jb
jae
stc
stc
inc
out
xchg
pop
flds
pop
and
or
jg
mov
cmp
scas
sbb
mov
bound
cmp
cs
lock
add
adc
pop
in
clc
or
xchg
add
xchg
pop
and
jge
test
xchg
ret
mov
xchg
cmp
imul
es
cmp
xchg
add
cmp
int3
lds
xor
xor
inc
shlb
rcr
xor
jg
dec
jae
jle
jmp
into
les
xor
addl
insb
es
push
nop
into
jbe
add
sub
jg,pt
dec
arpl
imul
jle
or
and
jae
ss
push
dec
or
push
adc
ret
lahf
dec
or
xorb
movsb
sti
xchg
fdivrl
shlb
js
rol
mov
push
call
popa
lret
test
and
repz
mov
popa
push
dec
outsb
in
ja
cltd
mov
sub
nop
mov
insb
jbe
jmp
stos
int3
test
sub
test
shr
scas
xlat
lret
mov
sub
data16
loop
arpl
in
test
jmp
outsb
sub
gs
js
sub
push
out
xchg
jo
loope
add
xor
ja
xor
push
inc
push
outsl
shll
pop
push
mov
push
icebp
mov
jbe
notl
or
lcall
rolb
or
loope
out
lahf
cltd
cwtl
fildll
mull
push
jae
insl
sbb
outsl
mov
nop
dec
sub
incl
add
je
aas
push
clc
dec
gs
clc
outsl
out
loopne
add
pop
push
adcb
pop
push
fs
mov
or
mov
lahf
gs
sub
mov
cli
ficoms
sahf
xlat
push
js
pusha
push
xchg
sbb
adc
jb
and
xor
iret
adc
add
mov
add
popf
pop
in
xchg
imul
jecxz
fisubrl
fisubl
pop
mov
pop
xor
stos
mov
lds
xchg
pop
cmp
pop
test
lahf
add
mov
shrb
add
mov
es
push
push
sub
mov
daa
mov
divl
xchg
ja
out
rdtsc
dec
das
aad
xchg
faddl
cmp
add
out
cmc
mov
cmpsb
jb
add
mov
mov
mov
jno
test
jb
jecxz
mov
pop
jbe
repz
add
add
inc
fbld
mov
pop
fs
inc
sbb
add
add
imul
loopne
nop
dec
push
add
out
fists
daa
sbb
fsubr
sbb
sahf
dec
jmp
or
mov
ljmp
jp
sahf
mov
push
or
sbb
jl
fdivrs
sti
pop
test
fucom
bound
lds
sub
cmpsb
jne
mov
aam
loop
xor
pop
ds
xor
cwtl
call
nop
or
jno
aam
push
arpl
xor
pop
mov
fiadds
aaa
jne
out
sti
cmp
repz
outsb
adc
mov
das
fucom
sub
adc
add
mov
inc
pushf
mov
enter
lock
sbb
mov
mov
or
jp
call
jmp
cmp
lahf
rcl
pop
push
and
mov
jb
pop
mov
divl
jl
push
popl
xchg
addr16
insb
jecxz
push
filds
push
push
call
in
gs
incl
add
test
mov
adc
push
sub
in
or
js
dec
dec
or
loopne
add
jle
xor
jmp
ss
fistps
scas
mov
jl
push
dec
inc
cwtl
add
inc
mov
add
xchg
jbe
mov
jae
movsl
push
cmpsb
jae
gs
mov
xor
outsb
push
push
xor
mov
xor
jnp
out
stos
xlat
sbb
sbb
inc
sbb
in
dec
out
mov
or
and
cltd
push
add
pop
sti
pop
test
sub
cmp
or
adc
jne
jno
andl
pop
sub
fisttpll
pushf
xor
jae
mov
leave
xchg
popf
sti
or
jns
lds
push
pop
stc
sub
in
sbb
test
sub
add
lds
aas
add
std
sti
leave
sti
iret
jmp
fcompl
mov
add
xchg
mov
mov
xor
add
xor
call
ss
das
leave
mov
jg
or
divb
mov
clc
lock
aam
jl
pusha
and
sub
negl
mov
in
test
jg
dec
mov
jl
jno
push
inc
mov
xchg
movsb
push
jb
xor
adc
xchg
inc
mov
repnz
cwtl
bound
int
sti
scas
gs
mov
pusha
iret
push
dec
repnz
xor
mov
jmp
in
mov
insb
mov
out
dec
pop
jp
mov
xchg
icebp
sub
jmp
sbb
in
icebp
rorb
mov
or
es
jmp
pop
and
sahf
lods
jle
push
push
outsb
xchg
rcll
test
push
rolb
hlt
cmp
jmp
insb
shlb
mov
mov
adc
add
mov
xor
leave
pop
jle
add
incl
add
cmp
lret
pop
sbbl
jns
xchg
stos
leave
or
xchg
ret
arpl
and
xchg
dec
out
std
gs
cmp
in
sbb
cmpsl
in
std
negl
adc
cmp
jle
push
xchg
add
cld
test
dec
aam
add
movsl
push
xchg
lea
sub
testl
cs
xchg
fwait
pusha
jnp
out
pop
ss
or
jnp
stos
adcl
dec
push
sub
xchg
inc
jnp
inc
sub
xor
data16
sub
xorl
enter
mov
cltd
dec
mov
or
ja
outsl
call
lret
or
jne
ret
jns
push
hlt
cmpl
add
mov
mov
loopne
testl
inc
push
out
add
add
jg
mov
sahf
loop
dec
int3
adc
incl
add
inc
aam
lcall
jo
jmp
jl
and
lock
adc
or
bound
dec
push
mov
mov
in
fisubl
dec
rcll
push
add
mov
mov
pop
nop
xchg
jmp
call
mov
jno
insl
lea
dec
repnz
lar
mov
loopne
fnstenv
fsubrs
pop
dec
and
nop
icebp
inc
int3
repnz
bound
shlb
jbe
divl
bound
pop
inc
mov
stos
or
data16
fnstcw
ljmp
dec
sub
cmp
pushf
inc
or
test
inc
jb
inc
loop
jnp
sbbb
cmpsl
stos
test
arpl
inc
ds
je
dec
cmc
dec
mov
push
pop
pop
mov
pushf
cmp
mov
mov
xchg
sub
add
cmc
jecxz
addr16
sbb
bound
pop
cmp
add
inc
enter
pushl
cld
sbb
jl
add
incl
add
pop
add
or
and
xchg
stos
mov
mov
xor
scas
adc
pslld
shlb
pop
les
fdivrl
shll
arpl
push
imul
je
movsb
mov
inc
sbb
pop
sub
fs
lods
mov
mov
mov
orb
outsb
notb
sub
and
cmp
jae
xor
or
pop
fsubl
popa
sub
add
sub
xor
and
cltd
mov
in
sahf
stos
sbb
cwtl
ss
pop
dec
call
add
fidivl
fs
xchg
in
pop
ljmp
sub
movsl
mov
pop
mov
dec
mov
jae
xchg
subb
inc
jbe
jbe
or
pop
dec
pop
mov
ljmp
adc
and
push
mov
and
js
fs
aaa
sub
outsb
jbe
xlat
pushf
shrb
lcall
xor
and
add
add
mov
inc
add
push
mov
shlb
fwait
out
sub
ja
jmp
shll
mov
and
outsb
pusha
and
sub
xchg
pop
mov
mov
xchg
pop
sbb
mov
lret
jb
or
cmpsb
pop
mov
movsb
cld
mov
ds
jae
fisubrs
out
lods
inc
mov
and
icebp
rcrl
mov
dec
xchg
pop
jne
call
dec
imul
push
dec
add
add
jp
inc
aam
aam
and
out
fnsave
das
cmp
jl
mov
xchg
add
cwtl
mov
mov
jae
addr16
mov
outsl
push
bound
addr16
jle
mov
icebp
sbb
cmp
push
inc
cmp
mov
rorb
out
lret
cmp
insb
add
test
mov
aas
scas
fnstenv
jp
add
incl
add
push
xor
into
pop
push
mov
mov
js
ret
jnp
int
cmp
pop
xor
cwtl
idivb
pop
popa
or
mov
sub
dec
sub
lahf
xchg
loope
sub
mov
filds
xor
enter
stc
iret
movaps
scas
jecxz
dec
iret
xor
in
stos
mov
mov
pop
popf
pcmpgtw
fstps
pusha
cmp
lock
in
stos
js
scas
push
icebp
enter
xor
push
inc
or
popa
lret
fstpl
fdivl
xchg
xchg
es
sub
scas
xchg
fld
sahf
int
subl
dec
scas
in
and
fisttpl
pop
popf
pop
mov
or
push
in
dec
rcll
inc
push
je
push
jg
int
or
cld
xor
aas
stos
jne
aas
adc
mov
in
pop
or
aaa
aas
xchg
push
scas
mov
stos
lods
xchg
flds
jg
jne
jne
jg
loop
mov
aas
jns
add
incl
add
loop
push
outsb
es
sub
ljmp
mov
cmp
aaa
icebp
shll
stc
and
loop
aas
test
mov
cmpsb
movsl
push
sub
inc
pop
sti
aaa
sub
add
stos
sbb
shll
xor
insl
jo
and
jnp
loopne
inc
cwtl
pusha
into
or
xchg
or
adc
lcall
mov
xchg
adc
push
rcll
sbb
dec
shr
push
push
out
imul
sub
jno
xchg
sbb
sub
fisttps
sbb
push
mov
je
cmpb
leave
arpl
mov
shlb
xchg
push
pop
mov
fs
sub
pop
les
jb
sub
in
cmp
imul
pop
pusha
lret
mov
dec
insb
repz
push
mull
add
dec
pop
mov
cmc
mov
xchg
js
add
incl
add
push
or
cltd
push
xchg
pop
inc
fs
clc
fidivrl
add
sub
jae
arpl
inc
inc
fidivrs
inc
xor
fistpl
mov
push
call
daa
jae
add
ret
sbb
xchg
sbb
lods
xor
into
xor
sub
pop
push
and
xchg
js
push
ljmp
pushf
push
add
pusha
adc
cmp
xchg
mov
dec
scas
xor
ja
add
push
movsb
jne
out
cmp
add
mov
jno
inc
clc
xchg
lock
iret
lock
pop
incl
lret
mov
int3
and
jle
sub
test
outsb
popf
outsb
movsl
shll
jo
out
or
jns
mov
ret
je
shrl
dec
lea
cmp
aam
fidivrl
jl
pop
xchg
je
mov
clc
push
dec
push
cmp
add
outsb
jle
lods
testl
movb
incl
add
and
shr
shrb
mov
fs
sbb
arpl
xchg
cmp
fsubr
sbb
cmp
inc
mov
cmc
fisubrs
sarb
cmc
mov
jg
arpl
into
insl
dec
dec
fneni(8087
xchg
and
ss
fcmovu
dec
cltd
push
and
xchg
ss
adc
sti
loope
aaa
push
ljmp
dec
jne
sbb
xor
push
xchg
pop
mov
sbb
push
sub
out
jmp
aaa
push
xchg
push
and
cmp
jae
arpl
pop
pop
shlb
call
icebp
xchg
push
jbe
pop
leave
push
push
shll
out
mov
xor
hlt
mov
out
sti
dec
test
cmp
pop
fwait
xor
adc
push
repnz
pop
jns
int3
in
fcomi
lea
into
imul
push
mov
hlt
inc
sub
mov
jb
es
cwtl
add
mov
xchg
insb
and
outsb
jbe
add
incl
add
sbb
push
pop
mov
sbb
mov
push
mov
jle
and
add
out
mov
mov
mov
sbb
in
fwait
mov
xchg
and
movsb
push
pop
jb
or
pop
add
xchg
notb
cmp
push
filds
push
cmp
out
or
leave
jl
scas
adc
clc
cmp
dec
fldl
in
rolb
cmp
shlb
sub
sbb
push
xlat
sbb
inc
andnps
sub
inc
push
xor
bnd
or
adc
mov
fisubrl
int
out
testl
ret
mov
cs
out
pop
sub
mov
outsl
les
sub
inc
lea
pushf
inc
ret
fdivp
lods
cmpsb
jecxz
test
shrl
xor
repnz
jle
xor
add
add
out
sti
xlat
in
aad
add
push
jne
add
incl
add
rcrb
in
std
hlt
out
in
mov
push
mov
aas
shlb
mov
popa
mov
repnz
jge
sbb
pop
lea
aam
sub
cmp
inc
arpl
std
sbb
add
repz
cld
arpl
jnp
adc
inc
push
pop
das
enter
adc
pop
int3
mov
add
stos
lds
scas
rcr
add
clc
sub
es
ret
out
out
xchg
cmp
test
push
test
mov
aas
sub
filds
sbb
popf
inc
ret
inc
add
and
ss
sarl
dec
imul
rorb
and
fstps
pusha
and
sbb
pop
js
add
sbb
xchg
out
inc
enter
push
das
pop
xlat
test
mov
ds
dec
out
push
ret
push
sbb
jp
je
dec
cld
xor
cmp
add
push
sub
cmp
jg
and
mov
pop
pop
fs
je
add
incl
add
insl
push
mov
jl
sub
mov
jb
sarl
pop
mov
and
gs
fs
out
mov
comiss
add
lods
decl
xchg
in
add
inc
movsl
divb
aas
aam
mov
call
jg
jg
add
dec
xor
fiaddl
adc
pop
repz
cmp
aas
out
and
fildl
and
inc
cltd
pop
imul
xor
xchg
mov
adc
shl
mull
dec
mov
lock
xchg
enter
arpl
cmp
les
jl
outsl
test
mov
dec
or
mov
or
sbb
dec
aam
lods
pusha
pop
fcmovnbe
fwait
imull
fldt
scas
in
movsb
jae
xor
test
or
inc
add
mov
jmp
ds
repz
fcoms
add
pop
add
add
incl
add
ret
jg
sahf
sti
test
int3
mov
xor
aaa
push
inc
stc
mov
push
pop
pop
roll
sbbb
arpl
ret
pop
gs
jmp
icebp
mov
jge
push
pop
jecxz
add
out
inc
adc
cld
std
divb
sbb
inc
mov
roll
push
in
sub
cmpb
outsl
xchg
in
inc
adc
mov
sub
mov
add
push
pop
pop
xchg
xor
mov
push
add
ss
mov
fistpl
nop
out
mov
dec
addb
pop
mov
fstpl
jbe
mov
sbb
dec
out
xchg
jge
xrelease
lcall
je
ficompl
outsl
fwait
add
xor
fldl
pop
xchg
mov
pop
mov
stos
fcmovnu
nopl
push
sub
shlb
repz
dec
lret
add
mov
mov
cltd
xchg
sub
jb
add
incl
add
mov
fiadds
jecxz
add
call
xor
mov
adc
cmovno
repz
iret
sbb
adcb
repnz
add
mov
pop
dec
pop
sub
push
ss
lahf
stc
xchg
and
xlat
jbe
test
and
pop
call
sti
xchg
dec
xchg
xchg
or
add
sub
jecxz
lea
inc
and
dec
pop
out
cmpsb
dec
insb
outsb
lock
xor
aaa
xor
js
cmpsb
mov
int
dec
hlt
mov
sbb
mov
push
fstpt
data16
dec
int
and
pop
mov
nop
sbb
jle
mov
sbb
aas
lods
gs
pop
jbe
mov
add
sahf
xor
out
push
cmp
imul
vpunpcklwd
sbb
xor
mov
add
add
enter
in
sbb
push
inc
rcr
push
jb
int3
add
incl
add
aas
xchg
mov
popa
pop
fdiv
cltd
ret
je
mov
gs
fwait
jne
stc
jns
js
mov
sub
mov
cmp
mov
dec
cltd
repnz
jne
imul
mov
mov
cs
insl
dec
mov
or
lret
lret
mov
add
and
inc
xchg
sub
jg
jle
mov
idivb
xchg
inc
jp
xchg
mov
lds
sub
xor
jl
mov
ret
out
or
test
mov
loope
lods
add
inc
inc
mov
cli
cmpsl
leave
in
push
push
hlt
or
pop
js
fcom
nop
lods
jmp
clc
mov
push
in
xchg
icebp
inc
test
or
loopne
mov
movsb
jecxz
sub
inc
test
mov
mov
xchg
sahf
out
sub
mov
in
cmpsl
mov
sbb
add
jne
imul
cmc
call
inc
push
popa
mov
pusha
jnp
int
add
add
add
call
inc
mov
pop
gs
ljmp
addr16
js
dec
mov
insb
xor
mov
filds
xor
clc
in
push
or
pop
adc
stos
push
mov
pop
jnp
outsl
out
push
jl
push
nop
or
mov
jp
jecxz
aaa
push
sub
pop
pop
je
and
add
divl
xchg
inc
adc
adc
stos
push
test
and
fwait
dec
sub
sub
cli
fs
shlb
mov
jb
cli
mov
call
ss
adc
repz
mov
mov
test
pusha
inc
loopne
call
push
ds
hlt
pop
cmpsl
fnstcw
in
lret
mov
mov
dec
pop
icebp
dec
xchg
aam
test
out
in
mov
test
inc
in
cwtl
push
sbbb
push
xor
mov
jmp
add
movsl
mov
iret
sub
jl
out
outsl
into
add
incl
add
dec
mov
nop
loopne
xchg
jmp
lcall
shrl
add
pop
movsb
aas
cmp
xchg
roll
mov
daa
into
test
leave
std
or
mov
stos
cmp
or
ret
mov
out
xor
cltd
jmp
cmp
arpl
pop
insl
cmpsb
jb
mov
mov
lahf
xchg
mov
xor
mov
ficoms
or
jnp
push
arpl
lea
inc
repz
mov
mov
dec
add
push
mov
ljmp
push
pop
push
sbb
pushf
popa
fcoms
nop
es
lock
ret
push
pop
cmp
push
add
cmpb
mov
in
imul
cmpsb
insb
fbld
jmp
xor
mov
jo
add
rclb
aad
mov
incl
sub
cmp
jecxz
mov
add
add
out
into
gs
cld
test
adc
movsb
outsb
iret
add
incl
add
xor
mov
push
xor
push
inc
sahf
ljmp
adc
leave
into
push
sbb
inc
or
fldl
lock
and
dec
or
fimuls
mov
inc
mov
insb
mov
sbb
sub
pop
fiaddl
xchg
inc
xchg
mov
mov
jg
outsb
mov
dec
mov
and
push
orl
push
add
aad
sbb
nop
sbb
lods
outsb
cmp
fcoms
ret
je
mov
cwtl
bound
mov
fildll
fst
xor
mov
lahf
xor
in
movsl
loope
addr16
out
cmp
inc
mov
je
jb
clc
cmp
test
add
jecxz
stos
dec
sub
in
in
test
gs
mov
mov
decl
cltd
mov
push
xchg
xor
data16
add
add
xchg
and
je
out
mov
je
pxor
add
incl
add
mov
xor
pop
dec
mov
jge
pop
xor
adc
and
pop
xor
sub
push
jl
xchg
mov
mov
sub
adc
test
dec
or
sub
cmp
adc
xor
cmp
outsl
addl
cmp
jg
negb
push
ffree
jmp
arpl
and
repz
jle
shrl
addr16
or
or
shl
mov
icebp
cwtl
testb
rclb
sub
jnp
mov
popf
into
out
sahf
dec
gs
jmp
repz
mov
ret
sub
stc
out
xchg
push
rclb
inc
mov
jle
sub
and
rolb
dec
cltd
adc
cmp
inc
push
or
mov
stos
nop
jecxz
mov
mov
xor
lds
test
adc
cmpsb
jns
aaa
push
add
dec
daa
dec
das
outsb
imul
push
xchg
imulb
and
insb
roll
add
add
add
call
jns
xor
adc
cmp
aaa
push
dec
inc
pop
jecxz
mov
sub
stc
out
jb
xorl
clc
pusha
test
call
sub
jno
cmpsb
pop
push
ds
fmuls
xor
mov
cs
pop
sub
jmp
and
mov
push
ljmp
add
lret
aad
icebp
movsb
daa
lcall
mov
jae
sbb
push
mov
jp
data16
add
stc
xchg
cltd
popa
or
in
insl
call
aaa
cmpsl
lods
fwait
mov
mov
sarb
add
jne
mov
add
andl
data16
mov
and
push
lea
lods
lret
arpl
insl
lods
mov
push
adc
push
mov
sbb
mov
rdtsc
pusha
sbb
es
push
mov
std
jb
mov
cmp
subl
add
add
popf
mov
lahf
ret
or
sbb
imul
add
add
add
push
xor
pusha
mov
xor
sbb
or
push
mov
mov
inc
lret
dec
mov
lods
sti
lds
xor
adc
mov
mov
sub
imul
jmp
cld
add
rcll
les
scas
xchg
lods
or
xchg
mov
rcrb
or
loop
ret
cmp
xor
pop
imul
ljmp
andb
addr16
and
pop
inc
aas
or
inc
cs
pusha
adc
lret
orb
cwtl
cmp
pop
cmp
movsb
xor
mov
insl
ja
loop
jo
lock
test
outsb
and
je
test
loop
cmp
jns
xchg
add
rol
adcb
popa
cmp
adc
or
add
neg
outsl
push
xchg
or
roll
add
add
add
xor
cs
mov
sahf
arpl
inc
mov
and
xchg
pop
mov
pop
adc
dec
mov
jb
ds
ljmp
mov
out
inc
jmp
or
jmp
fdivs
mov
mov
inc
negl
push
ss
and
cmpsb
bound
ds
repz
movsb
aad
mov
and
add
adc
xchg
aaa
testl
pop
cwtl
insb
mov
pop
or
xor
aam
pushf
push
adc
add
cs
lret
push
rcrl
orl
sub
sahf
mov
call
jbe
cmp
sub
sarl
sub
ds
mov
insb
pushf
ret
roll
mov
or
push
xor
call
pop
add
pop
js
push
pop
add
add
sbb
sub
dec
out
sbb
imul
add
sub
xchg
aam
inc
dec
xchg
pushf
mov
mov
insb
pop
sbb
pop
lea
push
and
insb
ret
mov
pop
outsb
add
or
mov
loope
ret
mov
dec
jmp
or
lea
movsb
or
or
mov
push
pop
jno
lcall
xchg
pop
fdivl
cmp
pop
ds
into
jne
clc
test
and
and
in
cmp
jge
outsb
and
in
jp
xchg
ss
pop
movsb
lahf
sti
mov
mov
in
pop
inc
bnd
xor
lahf
mov
stc
js
sbb
int
data16
jne
push
jg
mov
jp
push
and
jmp
lret
shrl
js
jg
je
fimuls
icebp
mov
cmpsl
imul
mov
stc
pop
pusha
mov
sub
jb
arpl
add
ds
jae
ljmp
inc
push
add
add
add
fisttpl
mov
std
mov
mov
sar
repnz
sbb
xchg
and
cmp
sti
je
xchg
negb
xor
insl
push
jg,pn
sub
into
cli
pop
jle
jae
sub
push
adc
or
xor
fmuls
jle
negb
xchg
jo
mov
adc
sbb
out
int3
cmp
mov
fildl
int3
addr16
movzbl
nop
jp
enter
jge
mov
inc
cmc
dec
imul
aaa
test
insl
mov
mov
loope
cmp
out
outsb
push
adc
js
dec
test
js
sub
cmc
fldcw
hlt
out
inc
sub
sub
loope
rolb
mov
or
mov
lock
js
sahf
jno,pn
out
cltd
and
daa
test
xchg
jl
and
sub
xchg
and
idiv
lahf
insl
mov
cmp
xchg
addr16
add
incl
add
clc
rcll
pop
aaa
mov
xor
push
fs
rorb
in
and
ficoml
mov
and
mov
pop
mov
jo
mov
cmpsl
movsl
xchg
or
arpl
pop
cmpsl
sbb
jbe
pushf
mov
int
repz
inc
mov
mov
push
pop
mov
popf
stos
ret
and
inc
cmp
adc
mov
bound
loope
inc
cmp
out
push
ficoms
lcall
push
push
cmp
mov
scas
mov
mov
add
int
sbb
cs
xchg
les
ret
xchg
xchg
stos
ror
inc
hlt
pop
push
in
adc
jg
stos
xchg
mov
push
ret
xlat
dec
pop
cld
jecxz
fwait
les
sbbb
mov
mov
add
sbb
sbb
adc
movsb
out
cmp
jg
leave
or
test
xlat
add
incl
add
mov
push
pop
insl
pop
lods
fwait
loope
push
pop
out
lahf
fdivrl
cmpl
push
push
insl
js
jp
sub
add
sub
jg
stos
mov
aad
imul
or
jno
push
jp
inc
rep
dec
lods
sbb
pusha
sub
sbb
repz
inc
xchg
ss
xlat
fsave
mov
push
ret
pop
sbb
int3
fadds
mov
sub
fimull
mov
fwait
cmp
cs
sub
inc
into
dec
outsl
or
adc
loope
rol
aaa
es
mov
inc
test
pushf
iret
cmp
push
and
das
xchg
shlb
mov
push
jb
and
outsl
icebp
mov
dec
es
inc
sub
ret
repnz
cmp
lds
movsb
fsts
enter
xor
iret
add
pop
mov
fcomip
mov
xor
inc
mov
add
add
int
out
out
imul
nop
xchg
movsb
loopne
sti
mov
incl
add
push
dec
mov
mov
sbb
movsl
add
fdivp
inc
stc
cwtl
dec
arpl
iret
dec
outsl
mov
pop
gs
out
andb
sub
lods
sub
mov
lods
adc
xchg
xchg
jl
pop
inc
dec
pop
in
rcrb
sub
inc
fdivl
pushf
in
push
data16
rcll
push
xchg
inc
sahf
inc
das
mov
xlat
cmpl
popa
arpl
outsl
fwait
mov
icebp
sub
mov
std
push
popf
inc
int
push
int
xchg
shrb
dec
pop
orl
push
rclb
les
and
jge
dec
aad
aaa
mov
jg
jb
daa
jg
cmp
and
aaa
push
dec
or
push
pop
mov
xor
stos
xchg
jle
popf
mov
mov
mov
push
inc
stos
dec
fs
jmp
pushf
xlat
add
pop
xchg
xchg
add
psubusw
push
in
sub
movsl
flds
add
add
add
jp
sahf
in
xchg
cmp
jg
int
ret
scas
adc
jl
pop
jns
cmpsl
xchg
ficoms
dec
push
gs
imul
outsl
sub
jecxz
es
pmulhuw
lahf
int
test
adc
enter
rol
adc
pop
adc
jno
add
popa
inc
leave
xchg
xor
xor
xchg
pop
aam
cltd
mov
pop
movsl
mov
fnstcw
mov
insl
xor
popf
int
repnz
inc
push
dec
pop
test
shll
addl
arpl
nop
or
daa
xlat
negb
scas
xor
loopew
pop
flds
aaa
ja
fs
test
lea
dec
push
jle
push
xchg
rcrb
push
dec
roll
and
add
lock
pop
out
int
aad
clc
bound
pop
mov
push
aaa
jae
adc
and
push
mov
push
mov
add
sbb
sahf
cmc
fsubrp
jnp
sti
enter
idiv
arpl
add
incl
add
push
or
or
mov
jl
into
adc
pop
decl
dec
test
push
clc
push
fadds
mov
push
pop
jo
and
xchg
mov
insl
cmp
icebp
hlt
jns
js
fwait
jno
jb
push
nop
mov
test
lea
mov
sub
or
cmp
mov
cmp
adc
les
nop
fnstenv
pop
jg
cmp
test
enter
sbb
int
bnd
jecxz
push
jl
push
pop
addr16
dec
pop
mov
mov
pop
stc
add
xchg
mov
mov
push
adcl
jo
adc
out
orl
aam
jmp
sbb
xchg
cwtl
jge
inc
fildl
push
ret
mov
adc
out
lock
ret
out
out
cmpsl
dec
sahf
loopne
je
in
imul
add
add
jle
jg
std
fstpt
mov
push
fildl
add
add
add
adc
jp
or
push
or
int3
add
call
sub
mov
pop
pop
insb
jmp
imul
cmp
xchg
jmp
lock
rcrb
test
push
cli
jmp
fcmovnu
sbb
jns
sahf
sbb
jecxz
les
fwait
daa
aam
int
cmp
jl
push
or
div
push
pop
fmuls
mov
pop
stos
push
push
rclb
out
sahf
jecxz
adc
into
ja
or
popf
adc
jl
jg
sbb
add
adc
dec
inc
push
hlt
mov
push
lcall
imulb
add
aam
test
aas
scas
adc
cmp
pop
mov
movsl
jge
leave
mov
bound
cli
fmull
idiv
int
int3
call
inc
pop
pop
mov
jl
hlt
cmc
int3
aaa
sbb
add
jno
push
shrl
add
mov
sti
idiv
lods
pop
sbb
pop
call
incl
add
enter
add
js
lret
pop
imul
jnp
mov
adc
sub
mov
xchg
aas
gs
cmpb
test
daa
aad
cwtl
inc
ja
in
leave
and
je
xchg
push
mov
arpl
repnz
sub
repnz
and
mov
mov
dec
dec
or
lahf
imul
outsb
fists
push
insb
jae
lock
rorb
dec
xchg
daa
ds
push
in
popa
sbb
push
or
js
fcomp
aaa
or
pusha
ret
pop
and
cs
cmp
mov
push
cmp
lahf
mov
jecxz
xor
xchg
repz
lods
xchg
addr16
dec
jbe
imul
xor
je
cli
lcall
cmpsb
push
out
xor
jae
cmp
cmp
add
add
sbb
jmp
scas
inc
call
pusha
fldl
add
add
add
pop
mov
jne
and
xchg
pusha
add
jge
mov
mov
pop
sbb
xor
sub
clc
sub
and
xchg
sub
cmpsl
pop
push
cmp
mov
mov
iret
inc
add
hlt
jge
pushf
jge
or
dec
repnz
add
push
pop
cltd
adc
jg
xchg
int3
inc
or
in
mov
clc
inc
jmp
inc
jo
mov
popl
and
aad
xlat
mov
nop
or
lahf
icebp
psubb
lods
call
or
xchg
pop
xchg
and
lods
addl
lret
lea
or
ret
lds
pop
push
clc
xchg
test
push
popl
loop
rol
jle
xor
std
cltd
and
mov
dec
cld
xchg
cmp
jae
push
cmp
pop
leave
mov
popf
pusha
push
sub
pop
mov
pop
inc
cmp
cmpsl
fimull
faddl
cmp
add
add
add
cltd
ret
daa
xor
lahf
sbbl
imul
cwtl
test
fisttpl
jmp
stos
xchg
stos
lret
sbb
add
or
sub
and
cmp
xor
movsl
dec
ss
mov
xlat
dec
jne
pusha
xchg
mov
mov
xor
mov
xchg
pop
movsb
xor
loop
dec
arpl
jnp
adcl
jo
stos
daa
and
fisubs
ret
inc
add
je
loop
nop
stos
add
fadd
jl
sbb
imul
lock
mov
inc
gs
mov
inc
sub
js
lods
orl
and
lcall
pop
cmpsl
inc
and
lods
mov
je
inc
pop
xor
inc
pop
inc
lret
lahf
aam
lds
out
ret
jne
pusha
xchg
outsb
loop
ds
adc
clc
idiv
outsb
shrl
mov
in
cmp
cmp
jg
mov
lcall
fisttps
or
pop
filds
add
add
add
cs
pop
rcll
cld
xchg
pop
cld
push
add
jbe
jmp
add
cltd
stos
sbb
aad
ret
sub
jb
or
in
out
cltd
jnp
nop
mov
aaa
in
cmp
mov
jo
mov
inc
jp
or
inc
fisttpll
scas
push
mov
mov
filds
pop
add
dec
fwait
fs
imul
js
push
pop
test
in
movsl
or
in
push
addl
cmp
daa
incb
dec
stos
scas
add
lret
xor
mov
imul
outsl
mov
rcrl
pop
dec
int3
xor
jl
add
pop
inc
push
testl
sarb
cmpsb
dec
mov
or
sarl
mov
test
fcomip
lods
test
out
jbe
mov
sbb
jns
xchg
xchg
mov
xchg
jle
pop
loopne
add
add
add
inc
jns
sub
fwait
push
popf
cmp
jae
test
inc
sub
sbb
lcall
ds
pop
xchg
cmp
adcb
inc
repnz
xchg
xchg
inc
jle
jnp
and
jp
mov
adc
lcall
mov
aam
scas
mov
ret
std
cmp
add
and
jns
lods
xlat
sbb
jno
sahf
sub
push
scas
lods
and
movsb
push
out
das
mov
xchg
xchg
lock
lds
mov
insl
in
icebp
test
rcrb
ss
aad
jns
psubusb
fwait
fcompl
mov
dec
pop
dec
jno
xchg
cld
sbb
test
jg
fimull
xchg
repz
scas
ja
pushf
inc
fstpt
add
ret
loopne
push
or
stc
stos
sub
mov
adc
mov
jle
adc
ljmp
push
jb
mov
cmp
add
fadd
fsubp
jnp
or
cld
les
wbinvd
or
loope
add
add
add
shlb
fsts
pushf
mov
sub
mov
xchg
btc
or
adc
mov
sub
es
pop
add
das
push
std
add
jp
mov
xor
movsb
les
pusha
sub
cmc
dec
fists
cmc
iret
jne
mov
mov
clc
call
lock
jl
out
outsl
jns
sub
ljmp
sbb
pop
pop
and
xor
adc
fwait
stc
push
scas
mov
sbb
outsb
jb
mov
push
pop
leave
lock
outsl
enter
mov
sbb
repnz
inc
imul
or
jge
jno
or
cmc
inc
popf
sub
adc
push
int
mov
pop
mov
mov
xor
jo
addl
xchg
cmpb
outsb
jae
movb
add
add
sub
cld
cli
jle
dec
nop
xor
add
incl
add
or
outsb
push
repnz
shrb
adc
insl
test
or
or
shlb
xchg
addb
imulb
insb
ljmp
fxch
in
xchg
std
loope
test
repnz
sbb
ficomps
dec
and
scas
clc
xchg
add
incl
sub
fwait
rolb
jg
test
mov
rol
ret
sub
xchg
sahf
xchg
fisttps
xchg
push
rorb
test
and
decl
push
add
mov
xchg
mov
jg
fiaddl
repnz
js
arpl
lea
mov
pop
mov
push
ret
addl
lea
sbb
xorb
inc
mov
je
insl
push
dec
mov
cmp
scas
push
icebp
in
sahf
push
int
es
rolb
inc
cmp
lea
pop
jbe
ja
sti
aaa
out
ja
das
icebp
repz
jecxz
add
add
add
shlb
jl
mov
ret
mov
and
fmuls
cltd
test
rclb
rcrb
cmp
inc
in
dec
pop
mov
smsw
inc
pop
mov
sub
sbb
cli
sub
cmp
insb
pop
push
pop
sahf
jae
enter
or
mov
jne
or
mov
or
in
sbb
xchg
outsl
xor
push
clc
test
rcll
xor
sbb
and
fmul
dec
cmc
jbe
cmp
std
jl
jp
cmpsl
rolb
adc
lret
jle
fisubl
add
jmp
in
xchg
testl
and
jp
push
push
outsb
pop
push
ds
imul
pop
and
mov
lods
sarl
dec
cmp
xchg
mov
sub
dec
add
add
into
arpl
pop
xchg
aaa
pushf
mov
rcr
pop
in
add
add
add
ja
and
in
ret
or
out
mov
stos
sub
lods
rcr
aaa
xor
lds
mov
addb
dec
dec
adc
lock
cmp
clc
in
jmp
inc
out
mov
cld
repz
fs
add
jbe
sbb
adc
loopne
testb
xorb
into
and
mov
imul
movsb
pop
mov
test
sub
mov
in
add
cmp
xchg
pusha
mov
sti
in
div
int3
lods
out
int
push
sbb
fwait
js
aad
push
test
cmpsl
fldcw
cmp
push
or
push
push
mov
inc
push
fwait
pop
test
fildl
push
icebp
daa
std
sub
cmp
popf
add
dec
jbe
push
sub
add
ja
lcall
mov
sbb
add
incl
add
test
push
repz
mov
shr
cld
scas
hlt
ljmp
loope
in
imul
xlat
mov
pop
xor
bound
jmp
rep
jecxz
jno
and
push
jmp
sbb
jne
incl
std
push
pop
outsb
inc
mov
push
cmpsl
fwait
shl
cs
jmp
adc
rclb
mov
int3
or
cmp
fdivrl
xorl
jne
mov
inc
jbe
jmp
scas
scas
mov
std
pop
cs
sub
inc
dec
rclb
aam
outsl
jle
lcall
outsl
add
fisttps
ds
aad
fsubr
nop
jo
outsb
in
test
insl
inc
cld
jg
lcall
rorl
ror
arpl
pop
pop
dec
pop
call
mov
inc
add
sti
sbb
xor
mov
lock
aam
stc
inc
enter
add
add
lock
jg
in
and
mov
push
out
add
add
add
ljmp
sub
dec
or
cmp
leave
xchg
lea
xchg
sub
xchg
je
inc
and
sbb
jecxz
popf
pop
xchg
in
hlt
pop
mov
data16
dec
mov
addps
xor
xchg
lahf
aas
pop
adc
gs
push
dec
xor
and
mov
push
arpl
mov
cmpsb
sub
xchg
jnp
mov
xchg
cwtl
imul
in
test
test
filds
out
jns
jl
xor
fidivrl
outsl
xchg
ss
mov
jecxz
push
add
hlt
pushf
mov
push
dec
ret
ja
cmp
aas
sbbb
cltd
aaa
lods
popa
cltd
das
cmp
std
xchg
xor
es
or
sbb
jecxz
dec
sbb
scas
or
xor
xor
pop
jb
lods
test
scas
sbb
add
xchg
adc
push
add
pop
xlat
fistpl
jecxz
push
push
out
add
add
add
push
mov
lahf
ss
or
dec
jno
in
imull
mulb
jp
push
jecxz
mov
out
mov
out
cmp
shll
and
and
mov
cmp
call
stos
scas
mov
pop
inc
testb
test
ljmp
fldl
xchg
stos
cmp
push
push
jecxz
ds
pushf
loop
push
popf
incb
aad
pop
lret
lret
or
mov
insl
out
repnz
cltd
cmp
addr16
jge
movsb
jno
rcll
inc
test
lods
shlb
dec
cmc
mov
pusha
pusha
add
into
push
in
sub
out
dec
mov
shrb
add
leave
or
fwait
or
mov
mov
and
jae
xchg
mov
cmp
sbb
push
lds
outsb
lea
jnp
add
mov
dec
js
stc
mov
dec
int
pop
mov
add
incl
add
in
xchg
adc
cmp
push
adc
aaa
mov
ret
sti
inc
ljmp
inc
pop
adc
mov
mov
dec
lcall
mov
inc
aam
mov
insb
cmpsb
fs
mov
mov
xchg
call
pop
sbb
sub
dec
sub
out
dec
cmp
lret
lock
adc
and
cmpsl
and
mov
fcomp
dec
fwait
pop
insb
movsl
push
adcl
pop
sbb
sbb
js
cs
outsb
xchg
leave
test
sub
jmp
pop
imul
ficompl
aam
xchg
mov
pop
ret
fisubrs
enter
popf
shrl
jge
int3
mov
sub
jp
scas
mov
test
sbb
mov
jae
mov
pop
insb
fildll
fwait
jns
jns
and
arpl
add
add
add
mov
jecxz
cmc
and
mov
cmp
icebp
mov
out
mov
data16
mov
test
out
out
fiadds
andl
les
dec
enter
mov
movsl
xchg
mov
dec
adcb
call
dec
bound
lret
adc
and
fwait
loop
adcl
ret
das
loopne
push
jae
xor
and
xchg
dec
sub
imul
ljmp
pop
adc
test
mov
inc
iret
mov
xor
pop
jb
add
inc
loopne
adc
movsl
mov
jmp
loop
fidivrs
xchg
xlat
mov
dec
aaa
jb
arpl
push
cs
dec
add
out
mov
imul
inc
fimuls
xor
add
add
mov
pxor
jnp
adc
jne
jo
xchg
cld
push
ljmp
mov
xchg
test
loope
xlat
mov
loopne
push
arpl
jmp
cmp
mov
stos
push
sarl
lock
sub
inc
or
push
mov
shll
clc
xor
call
movsl
fimull
inc
jne
clc
mov
sub
les
and
mov
sbb
push
mov
adc
fdivs
cmp
jle
jns
jmp
xor
or
out
or
popf
inc
fwait
stos
addr16
dec
popf
add
mov
add
fidivrs
cmp
lods
repz
and
out
scas
mov
mov
adc
fsubrs
cmp
and
aaa
divl
outsl
or
dec
sbb
push
cmp
cmp
scas
repz
inc
jg
int3
inc
lods
aam
adc
sahf
cmpsb
int
ret
hlt
sbb
clc
xchg
std
push
scas
sahf
add
subb
fistl
das
jne
hlt
fstl
add
incl
add
sbb
pusha
cmp
sub
sub
add
shl
adc
inc
add
mov
mov
add
or
in
daa
mov
jmp
test
test
cwtl
mov
or
popf
and
loope
xor
test
imul
add
add
outsb
aas
jle
and
add
pop
roll
xorb
mov
stos
adc
test
aad
pop
lahf
mov
jge
iret
fidivl
out
mov
xchg
cmp
add
and
stos
pop
mov
lahf
xchg
mov
xor
push
rolb
daa
arpl
mov
push
pop
dec
lock
imul
inc
cltd
adc
paddsb
fadd
lds
iret
in
test
pushf
ja
hlt
add
xor
rcrb
repnz
popa
lahf
jle
add
add
add
jb
scas
decb
fisttps
push
xorl
add
add
dec
push
sub
fsubl
cs
pop
xchg
pop
es
imul
sub
hlt
or
loopne
xchg
in
push
inc
pop
cmp
pop
inc
in
mov
movsb
movsl
es
leave
rcl
popf
and
push
in
adc
insb
popa
jmp
stc
sbb
test
jnp
out
sar
cs
pusha
subl
or
or
and
push
aam
sti
cmpsb
cs
lods
call
sbb
add
les
aad
jae
cmp
sahf
out
mov
cmc
lea
push
stos
xchg
pop
sbb
mov
fsts
lock
pop
pop
mov
xchg
clc
call
rcrl
pop
repnz
mov
dec
lret
pop
mov
jg
mov
lods
inc
inc
dec
fbld
sti
mov
dec
je
stos
jmp
pop
repz
adc
cltd
jp
add
xlat
mov
xchg
mov
nop
jge
in
add
incl
add
lods
cmpsl
fabs
cli
test
repz
push
or
dec
fsubrl
addr16
clc
sbb
das
adc
fsts
mov
lock
sarl
xchg
test
out
sbb
push
pop
iret
cmp
add
add
xchg
sub
mov
in
dec
nop
shrb
or
ss
out
pop
mov
xor
sbb
popl
mov
cmpsb
push
mov
ret
rclb
mov
inc
add
push
or
insb
mov
mov
test
pop
and
imul
jle
sub
test
outsl
test
dec
cmc
std
jno
ret
mov
shrb
outsl
lahf
lahf
sahf
pop
pop
fisttpl
mov
push
jmp
and
jne
jnp
movsl
mov
sub
stc
js
push
or
pop
lcall
lods
cmp
lods
aas
mov
adc
dec
out
add
incl
add
push
in
fcmovnu
addr16
out
cmpl
cld
xor
fwait
mov
popa
test
pop
xor
push
loope
adc
rcrl
jg
cmc
int3
sbb
mov
pop
fdivr
movsb
and
sbb
call
enter
mov
add
jle
jnp
imul
sub
outsl
aad
mov
mov
repnz
ret
ret
xchg
add
in
pop
dec
notl
mov
movl
decb
sbb
in
rcrl
and
jecxz
les
rclb
cmp
ja
pop
jecxz
cmp
push
sbb
adc
adc
mov
bound
incl
push
mov
test
fists
fdivrp
dec
test
mov
ss
shlb
cmpsl
fisubrl
xchg
pop
pop
repnz
pop
and
je
mov
ds
sub
add
mov
sti
mov
sub
mov
add
add
add
pop
cs
ffree
or
mov
aas
and
das
jg
test
lods
ret
mov
in
jb
test
pop
fsubl
lods
add
cmpsb
js
jl
ss
loopne
loop
popa
bound
pop
cmp
mov
and
loop
shrb
dec
pop
out
int3
das
pop
mov
inc
dec
and
out
mov
pop
jbe
add
pop
lcall
cmp
mov
mov
dec
pop
inc
mov
mov
cli
fmulp
call
mov
xchg
xchg
ss
insl
jl
sub
into
leave
cmp
aaa
enter
jge
lret
adcb
jl
dec
jecxz
mov
out
jns
std
pop
adc
push
outsl
and
xor
push
xchg
add
cmpsl
stc
inc
filds
push
mov
jns
dec
dec
pop
dec
rcr
pop
daa
les
add
addr16
dec
xorl
daa
add
into
adc
neg
jge
xchg
jns
lahf
leave
adc
incl
add
lcall
loopne
or
nop
mov
lds
pushf
movsb
dec
mov
xor
dec
xor
je
leave
int3
dec
nop
fs
and
loope
movsb
pop
xchg
jp
add
xchg
push
popf
cmpsw
fnstsw
and
jne
lcall
mov
outsl
inc
xor
jmp
cmp
test
shr
je
and
adc
into
out
xor
dec
repz
cltd
xchg
sbb
sub
imul
inc
jb
ss
sub
movsl
push
sbb
mov
adc
imul
pushf
adc
out
hlt
das
mov
add
shll
daa
mov
call
out
psrlq
aas
test
sub
mov
mov
jno
sti
imul
adcb
jno
sub
sub
icebp
push
cmp
adc
pop
cmp
outsl
jg
jg
sub
ficoml
jno
test
incl
add
mov
xor
dec
imul
cld
cmp
jnp
mov
insb
imul
dec
sbb
jnp
jmp
into
inc
mov
fwait
lcall
mov
mov
jno
push
fwait
cmp
js
shlb
dec
jge
jne
add
dec
enter
jle
cmp
inc
pop
leave
push
xor
rcr
fisubrl
jmp
cmpsl
shrl
pop
cmpsl
xor
adc
in
adc
frstor
adc
mov
jl
lahf
mov
mulb
adc
mov
test
dec
fmull
loopne
push
imul
adc
test
or
je
lcall
mov
addb
test
fimuls
sbb
stos
loop
scas
mov
fisubs
push
jb
mov
nop
lods
add
out
sbb
data16
ret
ja
and
aaa
divl
or
dec
repnz
incl
add
add
push
mov
mov
or
and
pop
lcall
icebp
ljmp
imul
adc
xor
push
mov
fdivrl
push
mov
mov
inc
movsb
sbb
pop
inc
ja
out
adc
add
or
jnp
js
les
lea
sbb
lods
test
popf
mov
mov
jno
mov
adc
shll
cmp
mull
lea
push
cli
aas
jl
cmp
xchg
xor
fimuls
and
addr16
jne
jp
mov
pop
sub
pop
push
popf
sub
sub
push
and
stc
in
ret
xor
pushf
dec
dec
clts
fwait
and
dec
into
push
mov
daa
jno
mov
sub
ja
repz
dec
xchg
mov
mov
push
and
std
jns
jg
call
push
xor
lret
add
add
mov
cmc
mov
cmp
adc
repz
incl
add
filds
lahf
mov
fdivl
je
inc
pop
mov
mov
lahf
lahf
fcompp
or
cltd
mov
or
call
popl
mov
test
fmull
dec
jnp
xlat
inc
pop
icebp
stos
jl
rol
rcll
and
jg
pusha
xchg
shl
jae
jns
mov
ljmp
aaa
es
fs
jnp
sbb
cld
mov
cmp
lcall
lods
out
pop
or
mov
or
or
in
and
fwait
icebp
lock
leave
push
out
xchg
dec
or
je
movsl
dec
test
jbe
xchg
loop
test
jno
into
inc
shr
loop
out
loope
mov
jecxz
stc
xchg
mov
lea
mov
into
clc
sub
ja
lret
scas
js
das
push
add
jne
pusha
popf
pop
sub
hlt
add
incl
add
hlt
or
jp
js
ljmp
sbb
fisttpll
xchg
inc
add
push
sysret
mov
cmpsl
pop
sahf
test
les
push
aaa
loope
pop
inc
mov
and
or
cmpl
cmp
fildll
cmp
push
and
mov
push
ja
enter
jno
jo
jp
push
cltd
movsl
push
dec
imul
ja
mov
pop
ret
hlt
adc
inc
dec
mov
imul
jae
mov
cmp
icebp
inc
mov
push
data16
mov
push
fwait
xchg
and
popa
jo
mov
dec
leave
test
js
adcl
popa
pusha
js
and
fldenv
lods
shrb
cmp
mov
sub
adc
ja
adc
ret
pop
faddl
mov
sti
mov
scas
dec
sti
push
hlt
jecxz
insl
packssdw
mov
sub
scas
fdivr
fnstcw
jecxz
test
dec
cmc
add
incl
add
sbb
inc
in
push
cmc
pop
inc
fnsave
int3
jg
cwtl
lret
dec
cmp
sub
xchg
insb
in
jecxz
in
stos
xchg
mov
out
aam
xchg
push
adc
add
xor
ds
dec
pushf
pop
pop
ret
movsl
inc
lret
data16
jb
pop
sbb
pusha
fs
rorb
fyl2x
cmpsb
testl
mov
add
inc
jnp
push
adc
shll
ss
and
ljmp
jecxz
loope
sub
je
cmp
mov
fmuls
sti
cmc
lock
movsb
movsb
push
push
outsb
mov
stos
push
dec
in
xchg
in
cli
mov
incl
mov
insl
lret
into
push
stos
xor
push
jae
aad
fptan
cwtl
test
arpl
imul
adc
or
add
push
enter
pop
das
imull
outsb
sub
jle
aam
or
add
add
xor
jb
jae
std
fmull
add
add
add
leave
mov
sbb
jmp
in
xchg
stc
lahf
mov
lahf
bound
out
adc
add
fs
xor
pop
shrl
sbb
int
dec
pop
das
clc
mov
mov
mov
outsb
imull
pop
inc
xor
rcrl
test
ds
and
in
ret
sti
in
adc
dec
popa
out
pop
xor
add
call
addr16
test
jmp
mov
insl
jnp
test
mov
lahf
je
sbb
sub
mov
jo
shlb
jg
rcll
loop
test
rcr
add
fwait
pop
lods
lea
adc
jb
and
inc
jg
inc
push
or
and
mov
clc
and
mulb
scas
jg
sti
push
pop
ljmp
leave
jne
mov
test
mov
scas
mov
leave
xchg
cli
add
push
jmp
add
adc
int
in
idivl
js
mov
cld
dec
loopne
inc
testl
add
mov
nop
ljmp
push
inc
xchg
mov
test
aaa
seto
pop
pop
pop
mov
add
cltd
lods
dec
inc
adc
in
push
add
and
rcl
aas
adc
outsl
fsqrt
rcll
xchg
std
cmp
mov
pop
lret
dec
sbb
mov
mov
mov
jl
cli
out
xchg
mov
data16
dec
cmp
xor
cld
shlb
popf
xor
xlat
daa
cltd
sti
or
test
shlb
imul
add
jp
stos
stc
pop
testb
xchg
test
repz
ret
push
inc
push
inc
mov
xchg
and
dec
cmp
andb
loopne
scas
mov
sub
sti
xchg
adc
jno
xchg
imul
addr16
mov
into
movsl
rclb
and
jp
fwait
pop
loope
popf
xor
xchg
out
mov
push
and
out
pop
xchg
sarb
add
add
jecxz
inc
cli
aas
into
lret
in
in
inc
clc
add
incl
add
jg
or
adc
movsb
testl
nop
orl
push
leave
push
push
into
xchg
in
loope
mov
add
jbe
xchg
cmpsl
mov
subb
in
pop
loope
jnp
fmuls
movsl
jecxz
sub
add
jmp
enter
or
mov
lods
pop
adc
cli
jecxz
xchg
ja
rorl
sub
pop
fs
jle
xchg
es
movsl
insb
scas
gs
xor
imul
arpl
pop
mov
adc
testl
mov
loopne
ss
or
lahf
jno
mov
arpl
mov
xchg
adc
lds
sub
scas
mov
pop
xchg
arpl
mov
add
xchg
aam
es
pop
pusha
add
mov
addl
or
clc
and
lret
pop
testl
sahf
stc
pop
mov
push
cmpsb
scas
sbb
ja
mov
lcall
xlat
insl
cmp
incl
add
sbbl
adc
jle
and
mov
adc
mov
jg
dec
push
mov
aas
cmp
xchg
xchg
in
mov
sub
push
es
bound
jnp
test
rcrl
out
xor
cmpsb
adc
scas
jnp
imul
mov
add
loop
repnz
int3
rorl
or
xchg
mov
int3
les
in
cmp
aad
outsl
shrb
clc
inc
fst
push
sbb
and
mov
loopne
fs
rorl
scas
sub
pop
lcall
fcomi
cli
xchg
or
dec
les
and
push
cltd
icebp
mov
mov
mov
mov
mov
scas
fadds
jo
jmp
lods
pop
je
jb
fdivl
jae
and
jp
daa
cmpsl
icebp
imul
mov
add
jae
cltd
dec
mov
jno
push
xchg
push
inc
cli
add
incl
add
ss
mov
cld
jle
and
out
lock
mov
bswap
push
in
loopne
mov
add
dec
lahf
std
fdivl
lods
add
icebp
loope
lock
jmp
sub
fs
lcall
iret
in
adc
and
ret
call
mov
ja
std
push
ja
mov
dec
fcomps
sahf
lods
xchg
out
out
or
adc
sub
sub
pop
fiadds
mov
or
shlb
cs
insl
xlat
or
scas
pop
inc
mov
cltd
add
cs
enter
mov
add
aam
add
sub
aaa
or
jo
adc
fbstp
mov
push
daa
scas
cwtl
fimull
adc
nop
or
inc
hlt
into
adc
mov
es
xorl
pop
ret
add
ds
into
nop
out
cwtl
jle
push
sub
dec
pop
ficoms
inc
sti
add
incl
add
in
mov
loop
xchg
sbb
popa
jmp
dec
shl
hlt
jo
jae
imul
into
int
out
movsb
into
sbb
add
pop
in
ds
imul
push
data16
or
lea
nop
ror
outsl
cltd
xchg
enter
push
loopne
shrb
xor
std
push
std
fisubl
dec
cmp
repnz
jmp
cmpsl
test
jno
daa
dec
les
mov
xor
loopne
push
stc
arpl
xor
cmp
loop
call
xor
fdivrl
daa
in
insl
mov
cmp
and
jg
dec
mov
inc
sub
lds
out
add
test
push
test
mov
aad
push
mov
in
stos
dec
int
add
xchg
jb
es
adc
orb
popf
and
lret
sbb
lret
add
test
jg
push
pop
push
mov
inc
cld
add
incl
add
js
or
inc
add
mov
xchg
jmp
lds
mov
in
imul
in
xor
mov
roll
dec
out
push
xchg
incl
in
fiaddl
mov
sti
or
in
xor
jns
in
scas
scas
pop
in
inc
rorb
dec
je
xchg
fucom
jnp
inc
daa
xlat
aaa
cmpsl
push
adcb
test
lcall
push
scas
jmp
repnz
mov
or
imul
push
stos
push
mov
call
xchg
into
jns
fistl
add
push
mov
hlt
lds
loop,pn
mov
cld
cmpsb
popf
popa
enter
loope
iret
mov
mov
fdivs
ficoms
mov
mov
sub
loopne
ret
lahf
shlb
xor
add
adc
movsb
push
in
cmc
jne
sbb
js
or
inc
std
add
incl
add
xlat
wbinvd
insl
sti
xchg
nop
mov
stos
xchg
push
movl
mov
xor
in
ret
cmp
pop
dec
cmp
inc
sub
sti
mov
xchg
sbb
out
xor
jns
xor
sub
mov
test
push
mov
pop
mov
xchg
sbb
cmpsb
dec
inc
popf
dec
gs
stc
ja
push
aad
int
movsb
adc
cs
lret
xchg
int
xchg
pop
test
dec
jns
hlt
add
pop
adc
xchg
out
into
jne
inc
xlat
cs
xorl
xchg
inc
inc
dec
jno
inc
aam
and
arpl
shl
stos
jmp
repnz
aad
shr
jg
aam
or
jae
xor
add
jns
scas
nop
mov
repz
and
hlt
lret
mov
mov
xor
xchg
sbb
std
cmpl
ss
dec
pop
add
out
shlb
aas
out
int3
mov
andb
aas
incb
add
add
add
xchg
xlat
xor
pop
test
fldl
cmc
and
add
gs
sbb
inc
mov
push
imul
out
cmp
mov
inc
popf
xor
loopne
out
mov
and
jle
cmc
pop
jo
xchg
aaa
je,pt
dec
push
jle
xchg
in
leave
or
or
test
fwait
jge
push
cmpsb
out
shrl
imul
inc
int3
loopne
mov
mov
lret
push
aaa
and
dec
stos
mov
sub
jno
mov
sub
cmp
repnz
adc
push
mov
out
imull
js
test
ja
push
jbe
fucompp
out
and
xor
xor
jg
filds
sbb
cli
sub
sbbb
aam
cmpsb
inc
divb
lock
mov
mov
add
add
mov
lcall
nop
fdivrs
incl
add
add
add
popf
cmp
pop
sbb
sti
int
inc
cmpsb
cli
call
adc
andl
dec
push
fisubrs
inc
cmp
xchg
and
adc
pop
mov
imul
orb
sbb
mov
insb
adc
push
testb
xchg
push
and
inc
and
inc
out
stos
cmp
inc
je
or
xor
enter
xlat
cwtl
aad
pusha
inc
daa
movsl
push
push
lods
sbb
jno
cmp
inc
mov
dec
mov
dec
in
mov
adc
subl
repnz
test
mov
leave
repz
mov
cs
loopne
cmp
push
das
test
fstpt
pop
test
sahf
jecxz
popf
adc
xchg
jae
sti
enter
xor
or
mov
leave
aas
xor
add
ret
bnd
cmc
inc
stos
repz
sbb
add
add
aas
xlat
sub
mov
in
sahf
inc
neg
or
mov
cld
in
lea
in
mov
ljmp
aam
repz
xchg
dec
add
mull
sti
lock
in
and
mov
xchg
in
insb
std
mov
sbb
roll
mov
or
loopne
push
jp
cwtl
leave
hlt
jne
mov
pop
test
ljmp
stc
imul
xor
iret
inc
daa
leave
adc
dec
and
mov
icebp
xor
std
popa
and
adc
out
xor
lods
fldcw
jnp
popf
pop
pop
mov
adcb
cwtl
icebp
sbb
lock
adc
adc
sarl
pop
jnp
inc
push
mov
push
mov
adc
adc
stc
movl
push
sub
dec
hlt
adc
out
pop
add
std
aaa
mov
shll
nop
cmp
add
incl
add
int3
arpl
mov
push
nop
push
fsubs
add
and
dec
lret
imul
mov
mov
pop
movsb
adc
jecxz
shl
mov
call
mov
adc
or
fs
or
gs
cmp
cltd
fimuls
data16
outsl
sub
jno
inc
stos
mov
inc
and
jge
dec
mov
xchg
inc
jmp
jns
stos
jbe
jge
dec
in
inc
xchg
inc
test
push
or
jp
push
xor
sub
cmc
and
movsl
rorl
push
push
mov
mov
rsm
mov
dec
dec
pop
outsb
pop
leave
and
push
in
add
data16
mov
lock
mov
leave
cmp
aaa
jno
push
test
mov
mov
stos
sub
mov
cmp
arpl
bound
add
insl
aam
mov
scas
add
dec
dec
sbb
add
add
sub
jno
pusha
mov
jne
adcb
jp
sbbb
test
test
sub
or
addb
pushf
mov
scas
xchg
je
loopne
xchg
or
cmp
jl
inc
adc
sub
adc
insb
fdivp
push
ror
lock
lret
gs
push
pop
lret
and
js
jns
addr16
test
jnp
mov
xchg
add
jns
mov
and
mov
lret
inc
in
and
add
mov
mov
or
dec
add
add
add
movl
xor
test
enter
mov
hlt
test
pushf
enter
movl
inc
mov
dec
mov
call
mov
call
pop
ljmp
fwait
mov
xor
add
mov
mov
xor
lret
ret
add
enter
dec
sbb
add
decl
test
dec
incl
inc
enter
ljmp
cld
decl
push
mov
and
pop
inc
mov
push
pop
movsb
dec
add
jne
lea
fs
decl
mov
test
add
xor
add
mov
or
inc
mov
bound
inc
cmp
lea
and
incl
mov
cld
add
xchg
sar
inc
incl
mov
xor
add
nop
inc
add
mov
add
add
incl
sbb
jne
mov
mov
movl
incl
fisttpll
test
inc
aas
inc
lea
inc
mov
mov
cld
loop
inc
out
fisttps
jecxz
in
incl
out
aas
call
add
add
test
wrmsr
ja
add
mov
add
add
mov
addl
mov
mov
dec
nop
mov
fadds
add
inc
push
call
mov
mov
cld
mov
add
cmp
mov
mov
push
nop
incl
cld
add
mov
cld
push
nop
inc
add
add
ljmp
movntq
movl
test
jmp
int
sub
add
filds
cmp
je
movl
jne
mov
cld
jle
dec
mov
mov
add
mov
test
add
add
add
xor
inc
add
mov
add
fmuls
cld
call
decl
add
push
es
inc
mov
decl
mov
call
sarb
sub
add
mov
inc
push
mov
shrb
ret
add
mov
cld
test
inc
xor
push
mov
inc
enter
mov
or
add
add
add
incl
cld
mov
mov
xor
and
sub
mov
test
add
xor
add
cmp
jne
mov
pushf
add
add
or
fwait
jne
xor
incl
add
orb
add
orl
gs
je
mov
cld
sarb
pcmpeqw
xor
lea
add
cmp
mov
test
clc
pushl
lea
int3
inc
call
jne
xor
jmp
mov
mov
incl
pushl
inc
mov
jmp
mov
mov
cld
clc
ret
test
pop
xchg
add
inc
decl
sub
add
push
jbe
mov
or
inc
enter
inc
mov
int3
add
xor
rorb
inc
add
fadd
rolb
inc
fmull
inc
test
fwait
clc
xor
inc
xor
pushf
mov
test
clc
dec
inc
mov
xchg
inc
inc
aas
mov
test
clc
pushf
inc
decl
push
movb
add
mov
mov
les
adc
dec
add
mov
lock
clc
inc
add
jge
xor
cmp
paddb
mov
test
dec
test
pop
xor
add
add
psraw
sub
mov
lock
shl
rolb
movl
jmp
pushf
inc
mov
xor
add
mov
enter
xor
add
sub
cmp
rorl
test
test
cmp
pushf
xor
add
inc
dec
mov
test
cmp
fdivl
dec
xor
add
add
dec
test
out
rolb
add
dec
mov
mov
ret
xor
add
add
dec
inc
mov
ror
add
scas
mov
xor
xor
add
mov
clc
rol
mov
mov
dec
jbe
mov
call
rdpmc
roll
add
inc
rorb
jmp
inc
inc
mov
clc
test
clc
lret
inc
into
mov
clc
enter
sub
ret
mov
addr16
clc
add
loopne
dec
into
mov
or
inc
push
mov
in
cmp
ja
mov
inc
fwait
mov
clc
mov
xlat
lret
inc
into
mov
in
scas
lret
mov
mov
sub
mov
mov
clc
loopne
push
lret
mov
adc
jb
add
in
sub
cmp
mov
mov
add
mov
in
into
dec
xor
roll
xor
sub
add
mov
inc
xor
add
inc
xor
sub
test
clc
enter
incl
jmp
mov
inc
mov
fwait
lret
xor
mov
lea
xor
add
inc
dec
mov
gs
inc
sub
inc
xor
push
mov
add
inc
decl
add
inc
mov
fwait
add
add
pushl
int3
xor
add
mov
call
mov
add
mov
in
ret
iret
enter
in
or
adc
push
dec
inc
mov
jb
mov
cld
scas
orb
movb
push
push
xor
mov
call
mov
in
jge
mov
int3
add
xor
dec
pushf
xor
add
mov
test
fwait
add
jmp
mov
add
mov
jmp
mov
rolb
add
xor
rorl
jb
add
clc
inc
jb
mov
xor
shrb
clc
add
xor
inc
adc
inc
test
mov
cld
orl
jbe
mov
dec
mov
mov
mov
or
dec
int3
xor
add
mov
xor
add
adcb
add
inc
mov
xor
dec
mov
hlt
add
push
inc
dec
call
in
lret
mov
adc
inc
and
cmpl
cmpb
mov
cmp
jne
mov
mov
rcrb
or
dec
inc
add
or
test
addb
mov
cmp
je
incl
mov
into
decl
push
lret
inc
into
decl
push
into
call
lret
add
add
mov
clc
inc
inc
mov
push
push
add
mov
cld
mov
into
rorb
xor
jne
call
mov
mov
call
add
rolb
add
add
inc
push
cmp
pushf
movl
test
addb
jmp
in
or
xor
hlt
mov
xor
add
inc
adc
pushf
inc
add
movsl
test
clc
incl
cmp
pushf
inc
push
movsb
jne
push
clc
test
lcall
test
cmp
pushf
add
add
inc
add
enter
add
add
out
sbb
dec
mov
sub
mov
add
cmp
or
incl
mov
mov
lret
inc
into
mov
int3
scas
push
mov
call
sub
mov
mov
xor
pushf
mov
faddl
test
mov
in
ret
add
add
mov
in
ret
mov
in
inc
rol
sar
or
add
add
test
clc
lret
inc
into
cmp
mov
inc
cmp
ja
mov
mov
clc
mov
mov
in
lret
ret
into
mov
scas
cmp
add
jmp
mov
mov
inc
enter
xor
add
cmp
shufps
add
dec
sub
cmp
ja
mov
lods
mov
inc
dec
mov
lret
rol
or
inc
scas
xor
add
add
inc
mov
inc
lret
mov
clc
lret
scas
ret
mov
hlt
push
scas
sub
mov
add
mov
movsb
inc
dec
xor
pushf
xor
rdmsr
rcrl
sar
rolb
xor
jmp
mov
xor
mov
rolb
test
fwait
shll
mov
xor
add
mov
add
inc
xor
rdpmc
roll
loopne
push
in
mov
adc
jb
add
jmp
mov
test
dec
dec
xor
add
dec
mov
dec
in
xor
xor
add
jbe
mov
test
dec
mov
loopne
inc
add
rol
scas
mov
mov
hlt
dec
inc
mov
loopne
lret
test
clc
scas
inc
mov
fdiv
roll
fwait
xor
pushf
cmp
inc
mov
inc
dec
xor
add
loopne
dec
rorl
add
lock
ret
xor
mov
rolb
xor
call
enter
mov
fmul
push
dec
xor
ret
xor
dec
jne
mov
cld
loopne
push
add
incl
incl
mov
lock
lret
add
xor
inc
scas
mov
shl
inc
decl
call
ud0
adc
inc
xor
lock
add
ud0
sbb
xor
sub
push
add
mov
cld
inc
jmp
mov
mov
mov
clc
scas
icebp
mov
lret
or
dec
pop
or
jb
add
inc
mov
fadd
ret
add
int
sub
add
inc
inc
mov
cld
scas
loopne
mov
mov
clc
push
pushl
movb
int3
or
lea
insb
incl
push
movb
leave
les
in
call
inc
cld
mov
cld
xor
pop
mov
clc
test
je
mov
cld
add
add
fiaddl
movb
push
push
mov
pop
lea
ret
mov
xchg
mov
push
clc
jne
mov
push
or
cmp
pop
or
inc
leave
ljmp
leave
in
incl
fimull
inc
nop
loopne
ret
mov
add
push
pushl
mov
or
pushl
cmp
pop
ret
or
inc
push
jle
inc
inc
int
inc
sub
add
lret
adc
xchg
push
mov
rcll
jne
mov
roll
divl
cmp
pop
decb
in
inc
sub
inc
push
add
push
add
leave
adcl
add
inc
rorl
add
add
jmp
jne
mov
or
inc
stc
in
ss
aas
out
inc
mov
lock
and
add
aad
add
clts
call
hlt
iret
jge
roll
jmp
out
mov
pop
push
cmp
sar
incl
inc
loopne
push
push
push
add
add
push
add
sub
jne
lods
mov
dec
out
into
push
loopne
shrb
andl
roll
mov
cmpl
mov
push
push
push
sub
push
adc
insl
mov
add
rorb
add
add
roll
pop
or
cli
add
lea
mov
dec
inc
shrb
and
jne
pop
mov
call
and
push
add
dec
mov
jmp
mov
call
shrl
lock
adc
out
cmp
pop
or
push
cld
mov
and
xorb
add
mov
psubsw
add
rcr
mov
and
add
call
add
mov
aam
or
jne
mov
aam
dec
jne
cmp
jb
jmp
mov
int3
dec
orl
mov
cmp
jb
pop
push
cli
pop
mov
jb
addl
mov
int3
add
jmp
mov
call
add
pop
or
pop
inc
xor
push
mov
call
int3
sbb
inc
add
call
or
cmp
mov
jb
mov
push
add
add
add
int3
jne
movsbl
add
add
mov
add
add
mov
sub
jb
add
jge
add
addl
jne
je
mov
rorb
orl
mov
mov
fadds
inc
pop
lea
push
out
add
add
mov
jb
add
push
call
add
jae
icebp
inc
mov
int3
out
loopne
sub
push
pop
push
jl
add
xor
mov
rcrb
rorl
inc
shr
orl
push
pop
add
jmp
mov
fdivrl
push
pop
call
mov
in
rolb
call
pop
enter
repz
xorl
je
or
jne
jmp
pushl
push
pop
cmpl
jge
mov
sub
pop
inc
mov
sub
lods
add
enter
repz
stc
jge
jnp
call
fadd
dec
insb
stc
cmp
push
mov
jne
mov
mov
add
sub
and
cmp
sbb
pop
call
fsubr
sti
add
add
add
roll
mov
clc
jne
mov
loopne
loopne
lods
int3
inc
mov
add
sub
shrb
add
call
add
dec
insl
in
lea
inc
inc
sub
orl
and
rorl
or
mov
stos
adc
inc
add
jne
mov
cmp
sub
sar
ljmp
sub
mov
mov
and
jne
sub
sbb
dec
push
add
ret
mov
leave
sub
ret
pop
push
rolb
addl
jb
ret
in
jecxz
push
xchg
jne
cmp
jne
mov
rorl
mov
pop
nop
mov
les
add
inc
mov
mov
cmp
or
inc
inc
xor
cld
add
add
add
sbb
dec
je
mov
add
and
jae
mov
incl
push
shr
in
push
add
add
inc
mov
add
jmp
pushf
dec
mov
fsts
movb
sub
inc
add
mov
insb
movl
dec
jmp
inc
fnstcw
testb
rolb
lea
sbb
inc
add
add
mov
fdivl
mov
add
add
or
mov
add
add
push
movb
or
dec
lea
xor
movsl
repz
add
prefetcht0
xor
mov
pop
mov
or
cmpb
movb
add
mov
xorl
mov
sbb
inc
xrelease
clc
xor
lea
mov
fadd
dec
lds
out
inc
lea
enter
push
leave
xor
add
mov
mov
psubusw
add
addb
add
in
inc
inc
mov
addb
mov
sub
insl
inc
add
testb
movl
dec
pop
add
mov
in
incl
out
inc
mov
push
jmp
add
out
insb
inc
jmp
addl
mov
outsb
inc
mov
mov
fcos
mov
in
jb
decl
mov
fdivr
out
rclb
mov
std
cmp
jne
mov
in
outsb
pushf
add
incl
incl
jae
add
incl
mov
jl
add
cld
dec
addb
data16
mov
mov
inc
mov
incw
data16
inc
jge
add
lea
add
ljmpw
pushl
lea
shlb
test
incl
test
inc
push
xor
add
ret
mov
push
movl
add
pushl
incl
mov
or
jne
addl
mov
add
mov
orl
push
mov
ret
adcb
add
mov
ret
or
lea
loop
xchg
aam
out
mov
inc
dec
pop
mov
repnz
orb
repnz
mov
jmp
incl
addl
mov
cmpsb
pop
inc
data16
inc
xor
dec
push
inc
jge
mov
mov
add
add
test
incw
mov
call
mov
clc
ret
rol
mov
mov
pushf
pop
ljmp
add
inc
test
push
mov
mov
push
add
decl
add
cmp
decl
jmp
push
hlt
data16
dec
ret
mov
lea
jne
decl
decb
mov
push
jmp
inc
sbb
movsb
inc
test
inc
decl
test
mov
lods
push
inc
jne
decl
mov
sbb
mov
mov
movswl
xor
add
xor
xor
decb
mov
pushf
inc
decl
sar
decl
incl
addl
xlat
dec
add
mov
lea
call
inc
rdpmc
add
push
lea
js
add
push
lea
fmuls
jmp
dec
mov
mov
call
dec
inc
mov
push
into
test
call
lea
jmp
inc
jnp
add
incw
mov
inc
add
mov
decl
add
data16
inc
dec
test
cmp
add
mov
incl
mov
ljmp
push
incl
call
decl
mov
inc
mov
mov
add
inc
mov
mov
pop
test
clc
lea
cmp
push
lea
mov
hlt
lahf
push
mov
xor
add
mov
mov
rolb
mov
nop
push
add
mov
in
jge
test
jne
sbb
push
inc
call
add
mov
cmp
ud0
test
dec
incl
decl
dec
cld
test
icebp
add
test
incb
jne
mov
cld
xor
push
xor
add
add
add
add
or
jmp
nop
test
xor
mov
mov
add
decl
add
decl
movsl
add
add
rdpmc
addb
mov
add
decl
decl
push
jne
mov
cld
add
push
incl
add
add
mov
sbb
leave
test
jne
call
xor
mov
enter
mov
mov
cld
add
inc
dec
mov
inc
decl
add
xchg
ret
add
add
mov
lea
add
mov
inc
rdpmc
jne
add
inc
clc
add
mov
mov
in
add
test
incb
add
cmp
pushl
add
test
je
mov
sbb
test
js
add
sub
mov
add
dec
push
mov
mov
mov
sbb
or
dec
incl
push
add
mov
orl
add
push
cmp
inc
mov
in
add
xor
add
ljmp
decl
call
mov
lock
mov
mov
mov
mov
addl
mov
inc
push
ljmp
mov
clc
cmp
jne
mov
add
int3
inc
cmp
add
adc
add
mov
cmp
jmp
mov
inc
or
decl
jne
mov
mov
in
xchg
jmp
adc
inc
mov
push
sub
push
test
inc
dec
mov
movl
add
add
mov
push
roll
bound
xor
add
mov
test
call
loop
jnp
mov
cmp
cld
shr
add
push
lea
mov
cwtl
cli
add
or
inc
dec
incl
add
call
add
push
adc
mov
mov
addl
incl
inc
stos
mov
add
mov
cmp
movsb
mov
cld
jae
add
clc
add
mov
clc
pop
inc
xor
pushl
mov
jae
mov
sub
add
mov
mov
ret
mov
ret
mov
add
mov
add
incl
lea
hlt
sar
test
inc
add
testb
push
add
add
add
add
add
mov
mov
cld
fidivl
mov
xorb
add
sbb
jne
mov
sbb
mov
add
ret
dec
or
dec
cld
cmovne
add
seto
inc
adc
mov
cmp
xor
gs
je
push
sarb
mov
push
cmp
add
dec
mov
in
adc
pop
inc
leave
or
gs
add
into
in
enter
push
xorl
or
jnp
test
add
mov
ltr
decl
clc
out
add
cmp
jge
jb
je
pop
push
mov
in
roll
orl
cmpl
hlt
mov
push
jns
lock
ror
test
dec
rcpps
mov
inc
test
je
mov
adcl
and
jp
rcpps
add
sbb
add
je
cmp
js
add
jns
vmread
add
adc
jge
mov
add
or
push
push
mov
add
pop
add
mov
inc
pop
xorl
add
push
clc
mov
jp
add
divl
test
je
mov
or
decb
jbe
mov
add
cmp
add
je
mov
mov
hlt
orb
jb
jmp
xor
pop
pop
pop
ret
ret
mov
xorl
pushf
xor
rdmsr
test
dec
ret
mov
pop
dec
jne
xor
inc
dec
jbe
inc
pop
add
push
dec
push
mov
and
jo
mov
sbb
mov
nop
or
jne
cmp
cld
xor
add
cmp
js
jae
xor
jmp
mov
fdecstp
test
add
add
mov
cmp
adc
jge
mov
jl
clc
dec
jge
mov
jb
mov
mov
xor
add
mov
inc
pop
jge
cmp
mov
imul
fimuls
fists
in
jne
mov
imul
fdivrp
filds
test
inc
mov
mov
adc
rcll
mov
fiadds
mov
mov
xor
mov
xlat
into
ffreep
lret
iret
dec
inc
mov
fmull
dec
jnp
add
mov
inc
dec
lea
add
jb
add
inc
imul
cld
clc
mov
incl
or
sbb
lret
add
dec
add
enter
inc
pop
decl
add
add
mov
xor
or
pop
cltd
push
clc
mov
xor
add
cmp
hlt
cmp
or
mov
loopne
mov
cld
pushf
pop
fwait
mov
lock
adc
orb
xor
dec
mov
iret
inc
jne
mov
cmp
je
add
or
dec
inc
mov
cld
add
cmp
mov
or
mov
test
inc
xor
mov
jne
mov
fcomps
add
incl
cld
add
mov
cld
inc
fidivrs
fbstp
mov
adc
fadd
add
mov
inc
mov
loopne
sbb
sbb
pushf
add
mov
cwtl
inc
inc
jne
mov
clc
add
mov
or
inc
lea
add
inc
rorl
add
shufps
jmp
xor
hlt
mov
fadds
xor
add
cmp
pmuludq
jmp
mov
or
inc
mov
jne
mov
clc
add
xor
jne
pushl
add
mov
cld
add
xor
mov
adc
sub
lea
add
jb
add
inc
add
inc
mov
or
mov
in
scas
inc
mov
in
add
mov
dec
mov
mov
cld
push
dec
add
mov
in
cmp
mov
mov
mov
xor
cmpl
xor
jmp
add
xor
add
cmp
mov
mov
adc
jmp
mov
cld
mov
push
jne
dec
or
push
inc
in
add
or
dec
cld
mov
xorl
pushf
decl
mov
mov
xor
mov
inc
mov
mov
call
add
mov
or
jo
push
xor
pmulhuw
test
mov
mov
xor
xor
xor
add
inc
mov
movl
sub
lock
mov
mov
or
ja
mov
cld
cli
mov
cmp
bswap
mov
mov
clc
repnz
push
xor
cmp
pushf
pop
jmp
mov
xor
lea
xor
pushf
out
neg
insl
test
clc
pop
inc
or
xor
add
jne
mov
in
push
xor
add
cmp
add
mov
mov
add
mov
mov
fwait
pushf
xor
jne
mov
icebp
icebp
shl
mov
push
jne
mov
in
jmp
add
mov
or
inc
jne
mov
ret
or
jge
sub
xor
add
mov
clc
negl
xor
cmp
repz
xor
add
mov
mov
cld
lock
test
clc
add
fdivrp
test
jnp
add
jae
sub
shll
leave
call
in
in
add
mov
in
test
mov
xor
pushf
jnp
xor
loopne
jne
mov
add
xor
mov
cld
jb
add
jne
mov
jge
mov
lock
xor
mov
lock
jge
xor
dec
mov
loopne
jge
add
icebp
add
dec
hlt
xor
mov
in
jge
mov
dec
push
xor
inc
hlt
xor
mov
repnz
cmp
test
fistps
inc
mov
add
inc
test
add
add
ret
jnp
inc
inc
xor
fdivl
test
push
add
cmp
setnp
mov
call
or
inc
mov
and
lock
movl
mov
clc
xor
mov
inc
mov
mov
mov
mov
hlt
inc
rorl
mov
push
mov
in
jne
mov
addl
clc
mov
add
rolw
mov
jne
incl
inc
push
test
sub
add
and
add
mov
and
cmp
add
inc
push
add
push
enterw
mov
add
add
str
lea
sbb
dec
cmp
inc
push
mov
push
add
mov
inc
add
add
mov
loopne
dec
mov
cld
push
xchg
add
add
or
dec
loopne
xchg
push
add
dec
jmp
mov
sbb
inc
xor
add
push
divl
and
add
jno
incl
inc
push
push
mov
mov
push
inc
enter
push
call
pop
push
mov
mov
push
jo
incl
or
call
fmull
mov
mov
adc
dec
xor
mov
mov
mov
push
lret
movb
inc
movntps
lret
into
dec
lret
mov
mov
fdivl
mov
push
mov
sbb
dec
sarl
push
jne
mov
lea
call
sbb
add
push
mov
push
mov
test
xadd
pop
add
mov
or
push
add
add
and
call
add
mov
add
xor
add
inc
je
push
decb
add
or
inc
add
data16
subl
add
add
enter
int3
loopne
rolb
lea
data16
add
sbb
inc
cmp
add
xor
sub
mov
or
ror
dec
inc
cmp
cld
or
ret
lret
dec
mov
loopne
cmp
inc
daa
loopne
in
add
add
push
inc
xor
add
push
push
inc
in
push
inc
sbb
rorb
addb
ljmp
xor
mov
fmuls
add
lea
add
popl
add
push
incw
mov
add
xor
test
inc
mov
add
or
or
inc
mov
jne
mov
add
add
adc
adc
push
mov
mov
inc
mov
or
push
jne
call
inc
sarb
in
add
add
and
fs
incl
jle
leave
scas
inc
add
orb
call
shr
xchg
add
add
dec
and
push
decl
mov
mov
lea
mov
add
mov
push
shlb
inc
in
jno
push
mov
mov
je
mov
sbb
popl
add
add
adc
jmp
sub
jne
mov
in
popl
push
incl
adc
add
call
and
and
inc
test
sldt
xor
pushf
jmp
mov
or
inc
call
mov
loopne
inc
add
mov
add
add
cmp
test
sbbl
jne
call
leave
rcrb
add
add
add
inc
mov
fcom
add
lea
pushl
call
mov
fstps
push
pop
mov
addl
mov
xor
xor
pop
or
inc
push
in
or
movsl
xbegin
clc
adc
divb
or
test
add
add
adc
xchg
test
clc
data16
orl
rolb
mov
mov
push
add
jge
add
jne
mov
jmp
xor
pop
cvtdq2ps
ret
mov
xor
add
push
rdpmc
out
add
mov
ret
sbb
cmp
or
or
pop
inc
add
add
invd
jge
mov
cli
xor
mov
ret
mov
sub
inc
xor
pushf
inc
mov
hlt
test
mov
xor
dec
or
jne
mov
call
inc
mov
add
add
inc
mov
addl
inc
mov
lock
jge
mov
cli
xor
add
test
add
cmp
xadd
test
mov
xor
add
pop
loopne
inc
clc
xor
add
data16
mov
hlt
xor
add
data16
cmp
add
psubq
ltr
add
add
data16
mov
jge
data16
data16
mov
fdivl
data16
mov
mov
pop
or
clc
mov
lock
jge
invd
pop
add
cmp
data16
mov
pop
fbstp
test
add
add
jge
data16
pop
stc
bsf
mov
in
test
mov
call
cmp
add
mov
call
add
mov
jnp
mov
mov
call
mov
data16
xorl
fisttps
cld
jne
xor
mov
sti
repnz
data16
push
xor
mov
fwait
data16
mov
mov
fisttps
or
mov
hlt
mov
add
dec
or
mov
or
mov
fdivrl
xor
pop
lock
lea
icebp
jb
add
jge
mov
fsubr
pop
mov
in
rcrl
jb
add
jge
mov
in
pop
data16
cmp
mov
fdivrl
cmp
mov
mov
lock
mov
or
clc
cmp
je
push
loopne
dec
mov
int
mov
pcmpgtd
add
jmp
mov
lock
rorl
or
jb
add
loopne
jne
data16
mov
data16
add
add
retw
ret
lret
enterw
pop
jne
mov
call
xor
lea
repnz
add
xor
in
xor
movl
clc
add
pop
pushf
pop
call
mov
push
pop
mov
push
inc
add
popa
data16
into
gs
add
ret
add
add
add
cmp
add
into
ret
pop
adc
mov
mov
jne
lea
mov
sarl
test
mov
push
xorb
mov
xor
ss
fs
mov
je
xor
mov
ss
pop
cmp
jne
mov
cld
push
pop
inc
stc
xor
test
clc
test
cmp
fs
or
add
lret
xor
pushf
mov
ret
pop
dec
mov
push
add
xor
cmp
je
mov
lea
push
cmp
mov
add
sub
add
mov
jne
mov
xor
mov
push
cmp
jne
sbbl
clc
inc
pop
sti
add
cld
xor
mov
roll
mov
inc
in
add
mov
mov
push
mov
test
xor
pushf
sub
inc
sub
mov
inc
add
or
cmp
mov
cmp
je
push
dec
str
cmp
int
mov
mov
cld
add
data16
push
add
jne
movl
clc
xlat
inc
mov
push
pushf
in
add
add
add
cmp
add
lret
lock
clc
inc
lret
cmp
xor
pushf
test
je
xor
rorb
push
add
jb
add
dec
mov
push
push
adcl
xor
mov
scas
ret
jns
mov
dec
or
ret
lock
mov
or
mov
xorl
mov
adc
iret
inc
movl
incb
ret
adc
clc
dec
fisttps
add
ret
lea
add
xor
pushf
add
add
inc
test
xor
push
fwait
push
xor
inc
cmp
jbe
mov
or
inc
test
xor
in
hlt
push
push
push
push
mov
fwait
fwait
xor
mov
or
mov
clc
jb
add
orl
addl
mov
or
inc
dec
mov
orw
xor
mov
mov
mov
mov
inc
dec
add
add
mov
clc
or
mov
clc
popf
incl
ret
adc
mov
hlt
test
clc
or
xor
pushf
jb
add
inc
daa
inc
inc
xor
dec
fwait
add
clc
cmp
or
add
xor
or
lea
add
mov
cld
dec
push
sub
add
or
add
or
add
mov
inc
mov
cmp
xbegin
clc
or
xor
adc
lea
add
inc
add
add
je
push
or
dec
std
mov
mov
mov
or
inc
clc
mov
hlt
call
push
or
push
xor
mov
xor
pushf
inc
mov
or
add
inc
mov
or
inc
push
jmp
mov
mov
jne
jmp
mov
clc
lret
push
mov
mov
sub
decl
or
pop
ds
pushl
mov
mov
jmp
leave
jne
call
in
dec
add
add
inc
cmp
je
mov
or
add
or
adc
enter
rolb
mov
or
rorb
jmp
push
mov
cld
inc
inc
orl
push
push
mov
add
test
add
mov
mov
lock
fcoms
mov
push
enter
cmp
add
mov
call
cmp
jmp
push
call
mov
cld
or
call
add
xor
jne
cmp
jne
mov
or
pop
into
je
mov
or
mov
mov
mov
or
sar
xor
xor
pop
adc
ret
cld
inc
mov
cld
mov
push
pop
or
xorps
test
add
adc
addl
jmp
ror
inc
leave
xor
and
add
xor
xorl
mov
pcmpgtw
add
leave
mov
push
dec
mov
lea
xor
sysret
dec
rorb
pushw
jne
ud0
mov
lods
add
data16
iret
and
cli
inc
cmp
add
inc
pop
lea
mov
add
mov
mov
add
inc
data16
clc
int3
cmp
je
push
pop
xchg
data16
lea
jb
jmp
call
clc
xchg
mov
or
lea
push
inc
jge
mov
fdivs
incl
xor
xchg
ret
xor
cmp
data16
rolb
add
dec
xchg
push
jmp
push
add
add
mov
clc
dec
xchg
cmp
jne
xor
jmp
add
jne
call
clc
xchg
sti
add
add
xor
pop
mov
jmp
mov
cmp
cmp
lea
jle
jae
mov
lcall
inc
push
lea
mov
int3
push
xchg
add
add
inc
add
cld
mov
aam
xchg
mov
testb
mov
hlt
add
mov
decl
incl
mov
call
je
js
lock
mov
mov
sbb
clc
add
mov
rorb
dec
xchg
mov
in
jge
cmp
clc
pop
fistl
clc
add
mov
mov
mov
adc
add
adc
pop
sbbl
ret
cmp
mov
cld
add
add
add
sub
or
add
mov
push
push
clc
addl
out
add
jmp
cmp
jmp
je
mov
inc
add
add
add
pop
pop
push
inc
in
pop
in
cmp
xor
add
push
mov
in
dec
push
test
add
leave
inc
test
add
add
dec
push
mov
hlt
push
dec
leave
mov
clc
cmovge
mov
clc
popl
push
add
push
xor
cld
add
xor
add
add
int
mov
add
cmp
jne
xor
jmp
add
mov
or
mov
mov
mov
or
shl
icebp
addb
or
or
stc
shll
xor
inc
xchg
add
add
mov
test
sub
jmp
mov
lock
lea
mov
or
leave
add
dec
dec
test
paddb
add
dec
mov
mov
or
dec
xor
mov
adc
mov
call
mov
push
clc
or
push
lret
mov
mov
xor
cmp
lsl
call
or
dec
or
inc
xor
in
add
inc
pop
xor
testl
dec
sub
add
push
sub
mov
or
mov
xor
pushf
push
movl
dec
inc
cmpb
pushf
gs
shl
dec
xchg
shr
xlat
rol
mov
or
mov
or
push
mov
dec
enter
lret
ret
mov
or
into
add
add
bswap
ror
dec
add
mov
hlt
inc
inc
ret
mov
or
dec
xor
jne
inc
inc
mov
clc
pop
ret
mov
call
dec
add
adc
push
ret
in
call
push
add
xor
jmp
xor
add
shr
mov
mov
in
pushf
ret
fcomps
inc
in
xor
mov
cld
fmul
sbb
ljmp
jbe
mov
clc
add
mov
lea
mov
call
hlt
xor
mov
xor
mov
hlt
into
inc
scas
mov
cld
add
add
inc
shrl
xor
mov
clc
dec
inc
decl
ret
movb
scas
inc
jmp
mov
pop
xor
mov
clc
test
mov
cld
call
xor
add
fdivl
lret
in
inc
or
into
mov
call
cld
mov
xor
lea
mov
add
inc
mov
dec
mov
cld
xor
sub
int
sub
add
mov
call
incl
mov
cld
jne
mov
aam
dec
or
jb
add
rorl
xor
xor
sub
mov
xchg
inc
xor
clc
mov
nop
faddl
xchg
jmp
mov
fadds
inc
or
dec
add
dec
mov
inc
push
mov
xor
rolb
ret
inc
inc
mov
xor
add
mov
cmp
dec
inc
xor
inc
mov
clc
lea
add
xor
mov
push
enter
mov
mov
loopne
ret
push
enter
inc
cld
mov
clc
ret
ret
mov
cld
pop
mov
mov
dec
xor
pushf
add
fcoms
mov
adc
inc
mov
adc
cmp
inc
add
mov
nop
add
inc
mov
add
cmp
mov
clc
inc
inc
add
mov
in
jne
mov
clc
add
mov
in
mov
xor
cmp
fmuls
lea
clc
mov
cmp
test
inc
mov
ret
inc
decl
push
dec
test
dec
mov
mov
mov
fadds
dec
inc
sub
inc
xor
faddl
inc
or
dec
add
mov
mov
mov
mov
lock
inc
add
fsubr
test
clc
push
cmp
pushf
inc
push
fsubs
clc
mov
mov
mov
clc
mov
xor
mov
in
les
mov
or
dec
mov
in
dec
decl
fmuls
inc
mov
faddl
dec
push
xor
push
mov
push
mov
lock
inc
test
add
add
jne
lea
div
incl
xor
jb
add
mov
xor
mov
adc
mov
ret
push
push
lea
sti
add
or
mov
xor
mov
add
jne
lea
mov
call
shll
pushf
add
mov
xor
test
clc
dec
inc
xor
pushf
rorb
lea
int3
add
lea
lea
mov
xor
bswap
rorb
roll
add
xor
pushf
inc
jnp
mov
lock
lret
xor
mov
fmul
test
xor
mov
mov
mov
ret
add
dec
adc
add
inc
rcll
mov
xor
jb
add
mov
cld
mov
or
cmp
jne
mov
mov
xor
mov
mov
mov
xor
jb
add
add
mov
xor
mov
or
xor
mov
mov
xor
jb
add
enter
add
add
inc
mov
mov
add
dec
mov
add
cmp
add
mov
loopne
add
dec
or
in
or
mov
xor
add
enter
inc
mov
or
or
mov
cmp
add
roll
mov
or
xor
mov
mov
xor
mov
xor
mov
faddl
call
dec
dec
xor
or
loopne
or
iret
ret
mov
mov
call
fwait
add
mov
fmull
test
dec
add
cmp
dec
mov
xor
mov
in
or
dec
xor
lea
or
ja
sbb
cmp
jne
mov
faddl
mov
fadds
mov
in
or
iret
add
xor
sbb
decl
mov
in
mov
dec
mov
fmull
jne
or
add
cmp
jne
lea
inc
mov
mov
jne
mov
test
inc
mov
loop
pushl
mov
add
mov
lods
dec
inc
mov
lret
mov
adc
std
ret
ljmp
hlt
rol
ret
cld
enter
inc
pop
mov
ret
test
jmp
push
call
in
addb
add
add
icebp
mov
cld
pop
dec
shll
add
cmp
je
mov
inc
or
ljmp
sti
cwtl
call
or
push
sub
push
inc
mov
mov
test
inc
push
push
xor
add
dec
add
inc
add
push
decl
add
or
call
mov
mov
inc
dec
add
push
call
incl
mov
mov
or
cmp
cmovne
adc
adc
inc
adc
jne
call
dec
inc
mov
add
mov
push
or
dec
xorl
cmp
mov
pop
adc
ret
mov
clc
mov
pop
mov
mov
push
push
lock
mov
adc
or
ret
xor
add
or
jge
mov
and
cmp
mov
xchg
dec
add
mov
add
dec
into
mov
mov
das
add
add
mov
and
mov
and
xor
lea
xor
add
xor
orl
cmp
pushf
mov
or
jne
call
adc
mov
adc
movl
pop
and
call
and
call
addl
clc
pushf
decl
jmp
and
and
or
decl
and
pop
cli
in
ret
add
mov
or
jl
adc
dec
push
and
xor
mov
add
or
cmp
sbb
or
xor
or
test
dec
adc
adc
add
jae
add
pop
adc
fidivl
add
movups
popf
push
adc
insl
or
add
inc
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
cmp
add
adc
sub
adc
push
adc
mov
adc
adc
cmp
adc
out
inc
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
cmp
fcompl
jle
adc
cld
dec
adc
add
adc
push
insl
adc
fs
add
jge
add
cmp
sub
inc
add
cmp
xor
inc
add
cmp
cmp
inc
add
cmp
inc
cmp
cmpsl
cmp
add
aas
adc
jne
adc
fldenv
adc
xchg
push
add
pop
adc
in
adc
leave
sbb
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
bound
add
push
adc
dec
insl
adc
mov
adc
mov
adc
rorl
adc
pop
inc
adc
cmpsl
cmp
stos
cmp
scas
cmp
mov
inc
add
cmp
mov
cmp
dec
ss
pop
ss
ss
xor
add
pop
dec
dec
dec
xor
pop
xor
add
push
xor
dec
inc
dec
cmp
pop
inc
add
dec
pop
push
push
inc
xor
push
add
push
pop
dec
dec
dec
dec
dec
add
cmp
aaa
dec
cmp
push
inc
add
inc
pop
dec
xor
xor
push
xor
push
xor
dec
push
inc
xor
cmp
add
dec
xor
xor
xor
xor
inc
add
xor
dec
push
xor
dec
xor
dec
xor
dec
inc
push
pop
inc
xor
add
pop
add
add
push
add
dec
add
add
dec
add
xor
pop
add
dec
add
cmp
pop
add
cmp
add
push
add
push
add
dec
add
dec
add
inc
add
dec
add
add
add
push
add
pop
add
add
push
add
add
dec
add
pop
add
push
add
xor
xor
pop
add
add
add
add
add
pop
add
dec
add
dec
add
add
push
push
inc
push
enter
cwtl
push
dec
lods
xchg
mov
add
add
pop
js
insl
arpl
addr16
pop
inc
inc
dec
bound
popa
push
bound
popa
bound
jo,pn
bound
