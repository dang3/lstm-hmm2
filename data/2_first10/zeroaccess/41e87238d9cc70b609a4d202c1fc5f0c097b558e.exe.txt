push
mov
sub
movl
cmpl
je
cmpl
jne
push
pushl
push
call
cmpl
jne
xor
xor
dec
mov
mov
dec
mov
jmp
or
mov
mov
subl
mov
sub
mov
xor
movl
add
movl
sbb
mov
push
movzbl
sbb
mov
push
mov
xor
push
or
mov
add
andl
mov
movl
cmpl
je
cmpl
jne
pushl
call
cmpl
jne
mov
dec
mov
xor
add
dec
mov
jmp
mov
mov
sub
add
movl
movl
movl
orl
movl
mov
subl
xor
add
mov
sbbl
movl
movb
mov
xorl
xor
add
jmp
jb
fsubs
lock
push
in
or
jle
jle
jg
jle
xlat
cmp
rol
pop
add
add
rdpmc
xadd
adc
mov
push
out
mov
es
lods
fiadds
data16
outsl
or
pushf
js
inc
stos
push
sub
mov
stos
push
roll
jmp
mov
dec
out
inc
call
mov
and
jnp
ret
xchg
and
jmp
ret
lock
and
add
adc
xor
or
fisttpll
ds
or
fst
or
pop
fstps
jno
inc
dec
aaa
adc
sarl
dec
call
add
fidivrs
add
push
mov
sub
push
aam
outsl
cmc
inc
mov
js
int3
cmp
lods
daa
xor
push
xchg
fstl
in
pop
sbb
xchg
or
add
sbb
pushw
inc
scas
stos
push
cld
icebp
mov
push
cmc
lcall
pop
mov
mov
mov
push
adc
daa
cmp
or
xchg
mov
jno
call
jecxz
and
adc
mov
push
sbb
inc
pop
stc
and
jno
pop
xchg
xchg
clc
mov
insb
je
sti
mov
sub
cs
pusha
addb
push
mov
xlat
or
dec
cld
movl
push
movsb
mov
inc
hlt
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
pushl
call
jmp
orl
jmp
dec
push
push
push
fs
into
mov
cli
jg
jle
iret
jb
xor
xchg
js
pop
cld
inc
and
inc
movsl
sub
and
sbb
jle
push
lret
pop
repz
cmp
or
and
popf
insl
insb
fcomp
push
xchg
addl
iret
repz
aas
scas
sbbl
arpl
outsl
cmpsb
movsb
lcall
adc
mov
mov
sti
gs
hlt
xor
fwait
sub
data16
xchg
mov
call
mov
das
dec
mov
mov
pop
add
xorb
cs
or
fbld
jae
cwtl
pop
xchg
push
das
and
adc
arpl
sub
ja
push
mov
test
fmul
push
inc
lds
outsl
outsl
and
push
in
adc
mov
push
bound
mov
lods
stos
xorl
or
ja
xor
mov
push
hlt
push
aas
jle
jnp
sub
pmulhuw
dec
gs
arpl
out
dec
cli
into
mov
fwait
cwtl
test
mov
or
std
xor
or
bound
in
js
dec
xor
and
add
mov
fwait
jg
lea
loop
inc
shlb
testb
cld
add
test
jecxz
movsb
roll
jle
out
inc
xchg
sbb
jno
lea
mov
xor
xor
neg
jmp
cli
fcompl
jno
cmp
incl
jge
jle
jg
jle
sarl
push
dec
and
sahf
ret
xchg
imul
xchg
jbe
cld
and
sub
jns
in
fdivrs
gs
push
gs
cmp
je
xor
shll
and
dec
xchg
insl
cmp
or
addl
push
cmpsl
pop
stc
leave
lret
lret
leave
cs
fstp
jecxz
dec
dec
je
std
pop
push
and
and
mov
sub
mov
xchg
pop
push
mov
cmp
sbb
or
cmpb
sub
hlt
xchg
imul
nop
xchg
call
jge
lret
cmp
push
push
ret
xor
ljmp
aad
icebp
rorb
dec
outsl
aas
divl
mov
xchg
mov
xor
jb
lods
pushf
icebp
pop
sbb
mov
jle
xlat
popa
imul
outsb
in
jb
mov
mov
inc
adc
mov
into
loope
sub
pop
and
cs
push
mov
pusha
sub
sar
adc
daa
scas
xor
push
push
leave
stc
outsb
loope
mov
loope
xchg
dec
leave
add
loop
movsb
mov
loop,pn
loopne
cwtl
sub
fsts
or
mov
xchg
and
adc
inc
fsubs
jno
repnz
daa
nop
cmp
mov
mov
xor
sbb
add
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
cmpl
jne
xor
xor
inc
mov
jmp
xor
sbbl
add
decl
mov
lea
mov
movzwl
and
mov
mov
mov
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
pushl
push
push
call
cmpl
jne
mov
inc
mov
jmp
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jb
mov
xor
mov
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jne
push
pushl
pushl
push
push
push
call
cmpl
jne
mov
inc
mov
jmp
mov
jmp
or
out
jecxz
icebp
int
add
xchg
lcall
jle
pop
in
jno
repnz
aas
pop
pop
scas
xchg
pushf
std
dec
or
lret
call
jecxz
mov
add
pop
push
das
rcrl
pusha
lods
xchg
add
arpl
adc
adc
scas
inc
cs
dec
rolb
out
or
adc
sub
ret
jg
fidivs
ret
mov
mov
mov
xor
cli
cmp
shll
int
add
js
xor
outsl
pop
adc
jns
mov
popf
sbb
test
push
push
sbb
push
sbb
jg
roll
lret
xchg
fidivrs
pop
mov
pop
mov
sbb
lahf
addl
add
outsb
loop
add
movsb
cmpsb
pop
push
ljmpw
hlt
pushf
insl
xor
wbinvd
mov
or
aam
in
mov
sub
mov
or
cs
xor
in
loope
mov
dec
cwtl
adc
ret
adc
test
push
pop
pop
sti
shll
dec
push
pop
mov
imul
push
lret
or
pop
mov
lret
pop
in
mov
enter
in
popa
xor
xor
sub
ret
dec
std
push
pop
jl
mov
mov
xor
sbb
lea
sbb
dec
xor
xor
mov
lea
jmp
xchg
mov
push
jo
adc
dec
xchg
shll
jle
cli
jg
jle
in
mov
ret
enter
cmp
test
iret
dec
mov
cwtl
or
adc
mov
mov
test
inc
push
pop
mov
in
enter
shr
sub
jbe
jbe
ljmp
dec
inc
mov
enter
insb
pushw
inc
mov
inc
cltd
sbb
xor
lods
imul
jnp
iret
jnp
push
insl
out
inc
mov
fsts
sub
inc
imulb
hlt
lcall
pop
mov
stos
push
mov
pop
push
cmpsl
out
push
mov
cld
loope
dec
inc
aam
jecxz
and
inc
jle
inc
les
lods
ljmp
xor
mov
sbb
cli
fwait
add
cmpsb
hlt
popf
sub
data16
daa
dec
icebp
out
in
pop
sub
shrb
sub
mov
jmp
cmp
enter
mov
xchg
scas
push
addb
aas
lret
fs
bound
lds
pop
clc
cltd
cmp
in
fbld
lret
mov
stos
ds
repz
sub
test
fstl
aam
in
or
fdivr
mov
adc
incl
add
pop
ss
add
jne
lds
jp
push
rcrl
dec
or
jmp
shll
cwtl
push
xor
pop
pop
jmp
mov
xor
add
mov
mov
mov
xor
jmp
pop
xor
mov
mov
mov
lahf
cmc
xchg
mov
dec
pop
mov
jle
jg
jle
push
sbb
adc
daa
je
lahf
or
int
mov
and
lahf
shrl
xchg
out
movsb
int
xchg
stc
fstpl
cmc
push
mov
aam
shlb
stos
xor
pop
fstps
jns
or
sub
stos
xlat
sub
mov
pop
stos
out
pop
adc
mov
test
jecxz
imul
es
les
lret
inc
mov
pop
ficompl
movsb
jae
xchg
in
jecxz
inc
lea
repnz
fstpl
cmp
cmp
xchg
add
jbe
cmp
ds
clc
mov
lods
icebp
push
mov
add
addr16
fmuls
inc
clc
jmp
xor
fisttps
in
jp
mov
mov
dec
cmpsb
jnp
mov
ret
sub
inc
sub
popa
sarl
int3
lcall
mov
out
int
stc
pushf
jge
les
add
mov
fwait
adc
sbb
and
lods
jbe
pop
out
inc
mov
roll
jp
cmp
xchg
jnp
stos
sub
cli
dec
flds
test
sub
lods
out
adc
jne
sub
lahf
cmp
in
cld
cmc
pushf
cmp
jae
xlat
cmp
lea
pop
mov
jne
shlb
daa
cmpsl
fcmovnb
test
mov
sbb
aaa
repz
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
jmp
mov
les
loopne
mov
xor
mov
pop
jle
cli
jg
jle
rorb
fsubrl
in
adc
sbb
out
cltd
scas
iret
inc
jle
jnp
mov
cs
xor
lret
sub
pushf
out
into
into
adc
sub
add
xchg
pushf
stos
cmp
jns
imul
js
or
hlt
ss
into
imul
pop
inc
sti
mov
shll
jbe
and
xchg
mov
int
or
inc
nop
out
out
ficomps
sti
sub
mov
mov
scas
pop
lahf
mov
aad
add
cmp
cmpsb
jae
adc
stos
inc
subb
push
into
call
call
ja
fs
lea
add
cmpl
dec
dec
mov
mov
pop
sbb
sbb
mov
dec
stos
sar
out
push
fwait
test
or
adc
scas
pop
inc
xor
xchg
push
jmp
or
inc
std
inc
mov
sub
inc
pop
xor
aam
loop
xchg
xchg
push
mov
pop
add
jmp
loop
imul
pop
sub
and
push
pop
dec
sbb
xor
adcb
jo
add
mov
lcall
fld
jns
ss
dec
jnp
mov
fistpll
mov
sahf
push
xchg
daa
nop
mull
xor
jno
jmp
inc
sti
add
pop
sub
sub
mov
stc
rorb
test
add
lea
push
mov
xor
add
jmp
pop
and
aas
jno
imul
xchg
add
jle
jg
jle
mov
dec
js
in
sub
in
das
add
repnz
sbbl
fimull
jl
pop
hlt
jmp
mov
std
inc
pop
xchg
leave
fwait
pop
sahf
mov
lret
mul
icebp
xchg
shl
repz
jge
fmuls
xor
scas
lock
test
lret
sub
jnp
enter
or
test
je
lcall
pop
and
clc
push
cld
lcall
mov
xchg
adc
push
insl
sbb
push
fiaddl
mov
inc
test
fimuls
test
mov
jnp
dec
jbe,pn
sub
sti
add
fwait
add
dec
iret
enter
mull
dec
pop
sub
shr
int
add
pop
shlb
dec
int
and
pop
jae
inc
jge
or
dec
jne
lret
bound
addr16
xchg
jae
cmp
push
in
jg
or
js
lods
stos
imul
dec
fisubrl
imul
stos
rclb
insb
pop
adc
mov
dec
jnp
int3
xchg
jne
imul
inc
jp
and
sbb
jnp
test
movsb
imul
sahf
adc
jns
sbb
mov
movsb
enter
push
outsb
push
jge
mov
inc
insb
xor
je
inc
stc
push
mov
add
jmp
cmc
dec
and
jno
push
mov
sbb
jle
jg
jle
adc
imul
std
js
xor
push
movsl
pop
mov
or
das
xor
sbb
movsb
shr
pop
loop
push
mov
in
rorb
adc
add
hlt
or
lock
lret
das
nop
fdivr
fistl
or
insb
lea
es
test
push
lcall
cld
cld
add
hlt
inc
adc
addb
movhps
sub
or
int3
mov
loopne
dec
roll
cmc
mov
add
es
insl
jne
push
aaa
mov
jp
roll
fldcw
fcoms
frstor
xlat
lcall
aam
in
scas
sahf
pop
cmpsb
shlb
sub
ss
mov
cmp
popf
or
les
lods
inc
cmp
test
or
orl
pop
iret
xchg
xchg
mov
dec
lds
shrl
mov
imul
enter
cltd
dec
jg
dec
xlat
xchg
mov
sbb
mov
cmp
neg
fildll
je
out
aas
stos
imul
arpl
add
inc
mov
clc
rorb
rcr
xchg
pop
push
push
aaa
mov
jae
movsl
lea
aaa
lds
push
pop
jo
push
push
and
mov
dec
fidivs
hlt
lss
jle
pop
add
rolb
sbb
test
cmc
add
xorb
dec
push
jmp
mov
mov
pushl
call
mov
cmpl
lea
mov
je
lea
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
lea
mov
jmp
mov
bound
fadds
mov
add
cli
jg
jle
orl
outsb
push
mov
loope
pop
test
push
insb
inc
sbb
push
hlt
scas
imul
fmulp
or
movsb
mov
sub
push
fxtract
mov
insl
mov
mov
mov
into
adc
xchg
dec
cmpsb
add
inc
mov
sbb
es
out
dec
xchg
push
or
rcpps
fcomp
cli
inc
decl
fcomps
sbb
pushf
faddp
rorl
inc
mov
jmp
das
xchg
mov
shlb
xor
ljmp
arpl
add
jecxz
adc
das
mov
in
dec
mov
or
loop
push
rcrl
xor
cmp
mov
inc
sbb
xchg
inc
scas
out
cmp
jns
pop
nop
imul
pop
clc
cmpsl
pop
das
test
aam
lahf
sbb
js
subl
movsl
loop
outsb
jmp
addb
popa
cmp
push
sbb
data16
roll
inc
cwtl
and
jb
in
es
jle
push
test
mov
inc
push
add
inc
dec
add
lret
xorb
mov
repz
test
pop
mov
fs
nop
sahf
ret
in
sti
adc
jb
cmp
fwait
insl
mov
fwait
insl
outsl
push
or
movsb
cmp
insb
push
sub
inc
add
stos
xor
mov
mov
mov
mov
mov
mov
jmp
push
shlb
push
stos
rol
shlb
jle
cli
jg
jle
rcr
inc
adc
jb
and
add
push
lods
xor
mov
clc
sub
fiaddl
sub
cwtl
and
movsb
fs
mov
mov
cmp
mov
loop
pop
mov
das
sub
out
add
hlt
mov
sbb
mov
pop
cmpsl
jg
mov
data16
daa
fnsave
mov
dec
and
icebp
pop
fs
loop
inc
dec
fs
push
jne
scas
leave
xor
rol
push
xlat
push
addl
sub
mov
xchg
or
aaa
mov
dec
xchg
sbb
divl
xchg
stos
fnsave
xorl
xchg
mov
cmpb
fisubrl
dec
andl
inc
mov
mov
add
movsl
sub
jnp
cmp
pop
jle
jmp
add
es
lock
mov
ss
push
mov
mov
cltd
stos
outsl
roll
xlat
scas
idivl
jno
popf
test
fs
popf
xchg
pushf
fistpl
pop
lods
cmp
lods
and
mov
jns
bound
out
mov
inc
fucomp
nop
insb
xor
xchg
jle
out
add
mov
dec
mov
cmp
out
scas
sbb
inc
and
insl
sub
jl
push
or
shlb
sbb
cmpsl
out
pushl
sub
fwait
jb
add
mov
mov
mov
mov
mov
mov
mov
mov
jmp
les
rorl
mov
mulb
push
jle
cli
jg
jle
inc
sbb
mov
inc
sarb
test
jecxz
adcb
sarb
in
xchg
mov
ja
sbb
mov
lds
sub
adc
add
mov
xor
xlat
mov
enter
clc
out
test
fld1
repnz
cmpsl
jle
mov
lods
xor
jne
mov
lock
rclb
mov
cmp
xchg
xchg
repnz
fsubr
in
loope
fisttps
negl
shr
inc
imul
inc
das
cmp
sbb
mov
andb
stos
mov
rcr
inc
stos
mov
imul
test
mov
in
xor
mov
push
jo
cmp
ds
ret
adc
or
adc
or
sbb
dec
jno
mov
add
xor
jb
clc
and
cmp
xor
call
lret
jle
or
jne
pushf
sub
adc
les
imul
rol
popf
clc
add
add
pop
pop
loope
in
cmp
or
loopne
out
mov
dec
adc
jp
pushf
in
push
mov
ror
sbb
pop
repnz
sbb
pushf
push
dec
sub
cmpsb
rcl
lds
xor
xchg
test
ficomps
lods
inc
clc
sbb
daa
test
rorb
adc
test
jmp
inc
push
jnp
or
push
adc
nop
dec
lret
stos
icebp
push
cs
jle
jg
jle
dec
loop
sti
ficoml
subb
mov
mov
lahf
mov
pushf
xchg
loopne
adc
push
fsts
xorb
pop
mov
rcrb
mov
sbb
cmp
insb
dec
xor
inc
pusha
ss
pop
cmp
or
stos
mov
enter
sbb
jbe
lret
dec
pop
ror
mov
sub
push
mov
inc
mov
push
sub
sub
mov
mov
fcomps
sbb
leave
arpl
fiadds
jb
es
leave
sub
pop
imul
idivb
jmp
jo
out
jns
icebp
in
jae
sahf
orl
js
sbb
push
test
xor
aaa
shlb
in
test
mov
cmp
mov
push
lds
je
or
aas
sbb
push
xor
inc
ds
iret
sub
sbb
sbb
std
xchg
or
jne
bound
cmp
or
cwtl
ficompl
inc
mov
in
in
into
sbb
and
or
call
sub
cld
xchg
mov
and
or
cld
pusha
push
mov
ret
es
out
pop
and
rcl
rolb
pop
aad
addr16
or
push
jle
les
dec
dec
jbe
jge
test
inc
aam
test
add
add
add
jmp
or
lret
jecxz
jecxz
icebp
loop
mov
jb
xor
stos
or
jle
das
nop
sbb
jge
mov
pop
adc
divb
mov
repnz
push
mov
popa
sub
push
mov
test
xchg
mov
imul
dec
push
ret
rcrb
mov
fdivs
mov
mov
test
popf
popf
or
adc
loopne
pushf
popa
pusha
into
cmpsb
or
clc
mov
movl
jmp
lds
xchg
push
into
andl
sbb
out
aam
outsb
sub
inc
pop
add
aas
icebp
jle
pop
call
cmc
xor
and
sbb
imul
arpl
pop
cmp
jp
xor
or
fnstsw
lods
mov
or
fistpl
imul
cmp
inc
and
xor
push
pushf
lret
cmp
ljmp
dec
xor
xchg
fdivs
adc
orw
decl
dec
add
push
ss
mov
and
stos
adc
mov
dec
iret
pop
pop
cvtps2pi
aam
adc
cld
mov
outsl
rcrb
repnz
jle
loope
xchg
pop
popf
js
dec
push
jle
and
or
addr16
test
mov
mov
leave
dec
das
adcl
adc
pusha
aam
jbe
leave
jne
stc
jmp
lea
repnz
aas
xchg
cwtl
dec
cmp
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
xor
mov
sub
jmp
add
inc
dec
aas
cmp
out
shlb
sbbl
jle
cli
jg
jle
or
push
adc
mov
xor
mov
jmp
arpl
lods
push
or
stos
shl
fwait
or
sub
test
pop
enter
outsb
repz
bound
inc
mov
sbb
nop
and
or
test
fwait
stos
jnp
xchg
or
lods
sti
frstor
lock
cmc
testl
pop
sbb
mov
lods
push
jb
ss
sbb
adc
mov
mov
inc
gs
jns
into
cmpsl
and
cld
test
inc
andl
add
push
and
pop
pop
jno
std
shlb
aad
clc
cmp
mov
mov
sub
pop
cwtl
xchg
fs
sbb
or
xchg
mov
xchg
cmp
shr
pop
clc
adcb
push
xor
imul
sub
xchg
jnp
in
sbbl
stc
fs
pushf
mov
imul
int
xor
out
aaa
lds
xchg
jmp
dec
pop
mov
pop
dec
int3
subb
jbe
loop
fcomps
pop
adc
xchg
lds
mov
mov
sub
stos
adc
add
mov
adc
fcompl
jmp
hlt
test
xchg
dec
mov
sbb
xchg
jae
mov
jecxz
mov
sub
mov
add
mov
mov
mov
mov
xor
sub
mov
lea
incb
inc
push
pop
dec
xchg
decb
pushl
mov
mov
pushl
jmp
jmp
xchg
push
arpl
nop
push
rorb
jb
mov
jle
cli
jg
jle
push
cs
mov
loop
test
lds
fdivrl
int3
or
push
mov
imul
pop
imull
sub
sub
lret
lock
pushl
addr16
pop
pop
push
mull
lret
js
inc
mov
push
sub
clc
mov
das
dec
push
lret
xor
push
adc
mov
mov
jne
jae
add
xchg
and
loope
pop
decb
imul
insl
sub
adc
ljmp
xchg
data16
xor
imul
fdivrl
pop
mov
les
jne
or
das
xor
xchg
and
mov
cli
fistl
out
xor
mov
addb
pop
mov
addb
cld
stos
sbb
in
ret
nop
stos
adc
in
dec
mov
push
pop
imul
mov
aas
les
mov
popa
fildl
jne
and
loopne
and
lret
push
pop
xor
mov
xor
mov
mov
sub
xor
outsl
and
test
xor
inc
or
das
not
jp
das
xor
and
add
call
fisubrs
movsb
rcrl
pop
dec
lea
pushl
lea
pushl
lea
pushl
lea
pushl
xchg
inc
inc
push
pop
jmp
cmc
mov
icebp
insl
sbb
gs
push
jle
cli
jg
jle
adc
rorb
clc
xor
les
dec
repnz
xlat
loop
cwtl
jbe
xchg
rolb
mov
std
xchg
in
cld
push
sbb
cmp
mov
int3
lret
mov
shl
sub
push
xchg
jb
pop
test
enter
fisttps
lock
std
xchg
mov
minps
gs
jne
repnz
adc
pop
cltd
lret
dec
pop
mov
xor
cltd
daa
xor
mov
arpl
mov
fmul
lret
cld
adc
or
lea
xchg
std
mov
jmp
xchg
fidivs
sbb
add
adc
inc
xchg
mov
mov
mov
pop
or
sub
rcll
movsb
jp
mov
imul
mov
rcrl
inc
push
mov
pop
cs
pusha
test
sahf
in
or
mov
cmp
rcll
push
dec
mov
or
insl
jmp
sub
pushw
mov
sub
mov
mov
lahf
and
stos
sbb
or
test
pop
sahf
xchg
cmp
xchg
inc
es
mov
shlb
and
xchg
or
jno
inc
fiadds
push
jne
ret
cmp
push
decb
mov
inc
add
or
pushf
add
add
adc
mov
xchg
pop
rcrl
pushf
mov
jg
jle
shrl
dec
mov
in
xchg
jecxz
mov
lahf
mov
movsb
lret
into
sub
push
push
adc
pop
ljmp
sub
cld
xor
bound
scas
push
cmpsb
out
cmp
in
jmp
js
orl
fcomps
lea
loop
inc
adc
fldl
es
bound
add
mov
imul
sub
das
arpl
scas
scas
mov
gs
stos
push
cmp
jecxz
jge
mov
cmp
push
and
push
and
lods
lret
sub
fs
jae
adc
gs
js
mov
hlt
je
inc
mov
movsb
and
fistl
add
push
xor
in
sbb
aas
mov
aad
pop
adc
scas
pop
lret
rorb
into
adc
clc
jns
sbb
daa
clc
pop
jl
mov
bound
mov
xchg
out
out
test
and
jle
inc
pop
sub
xor
loope
shl
push
sub
push
dec
pop
push
sub
mov
addr16
ljmp
faddl
daa
cmp
cmp
adc
cs
insb
mov
sbb
cwtl
cmp
sti
add
stos
mov
ja
jne
mov
sbb
or
add
xchg
ss
in
fs
orl
leave
ret
push
mov
sub
leave
ret
push
mov
sub
push
mov
andl
xor
add
inc
mov
cmpl
jne
push
call
cmpl
jb
not
mov
xorl
mov
sbbl
movl
mov
add
movl
xor
mov
movl
cmpl
je
cmpl
jne
pushl
call
cmpl
jne
mov
dec
mov
xor
add
dec
mov
jmp
mov
decl
mov
xor
mov
mov
sub
imul
mov
add
movl
cmpl
je
cmpl
jne
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
mov
and
mov
mov
sbbl
xor
add
not
mov
not
movl
movl
mov
adc
movl
adc
movl
movl
movl
cmpl
je
cmpl
jne
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
movl
and
jmp
sbb
add
lock
icebp
mov
and
adc
jle
sahf
or
cld
sbb
xchg
push
push
or
pop
xor
mov
and
pop
mov
or
push
mov
lret
lods
and
movsb
lock
lods
mov
sbb
clc
das
ds
mov
mov
ja
mov
inc
mov
dec
dec
fadds
adc
imull
push
lret
adcl
jge
inc
testl
cld
push
fmul
cmc
das
push
adcl
jmp
cmpsb
push
lds
into
aas
daa
int3
sub
in
mov
enter
cltd
sub
mov
xchg
pushf
xor
jle
cmp
mov
fisttpll
push
push
out
pop
cmp
cmp
aaa
mov
xchg
mov
enter
push
xchg
fdivr
sbb
stos
mov
sub
mov
fnstenv
jae
clc
push
add
jb
inc
jle
cwtl
xlat
fistpl
add
loope
sbb
lahf
sbb
adc
js
gs
push
test
cmpsb
mov
lret
jae
inc
out
mov
shrl
lcall
mov
or
popf
in
aaa
add
push
jmp
div
cmp
fisubs
fists
in
iret
insb
ret
push
mov
or
inc
sub
js
push
mov
fs
dec
in
test
jo
add
push
xchg
jbe
mov
xor
or
rcll
sub
mov
aad
jo
or
push
push
rcl
sbb
test
xor
imul
fcom
insb
add
mov
std
test
sub
xor
insb
ret
movsl
xor
or
pop
out
mov
sub
cmp
sarl
outsl
mov
mov
sbb
call
cmpsl
fsubl
xor
mov
cmc
sub
jge
adc
cld
jns,pn
adcl
cmp
push
mov
inc
in
nop
popa
sbb
test
in
jne
test
popa
mov
jmp
xchg
xchg
mov
ja
out
notl
pop
iret
orl
pop
mov
inc
xchg
cltd
mov
mov
fnstcw
imul
int3
mov
cmp
xchg
pusha
decb
fwait
cmpsl
addr16
pop
or
mov
xchg
std
jae
jo
dec
inc
call
push
in
or
push
ficoml
lds
sbb
mov
cs
xchg
loope
xchg
inc
les
test
inc
add
stos
aaa
inc
add
rolb
add
add
add
incl
cmp
inc
mov
cmpl
jne
push
push
push
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
or
mov
subl
add
movl
cmp
movl
je
movl
push
jmp
xorl
mov
sub
mov
sub
xor
mov
xorl
xor
movl
add
cmp
jb
movl
cmpl
je
cmpl
jne
pushl
pushl
push
push
pushl
pushl
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
xor
mov
mov
sub
mov
mov
xor
movl
cmpl
je
cmpl
jne
pushl
call
xor
xor
dec
mov
jmp
negl
xor
andl
xor
or
inc
mov
cmpl
jne
push
call
cmpl
jb
add
add
movl
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
imul
mov
and
mov
sub
cmp
ja
mov
xor
add
jmp
mov
mov
xor
xor
add
add
imul
mov
jmp
pop
cli
mov
jno
gs
or
scas
loopne
push
sbb
adc
pop
jl
jle
mov
sub
adc
fstpl
cltd
sub
mov
xlat
out
jp
push
add
cmc
jge
cmp
sub
xchg
pushl
xchg
dec
adc
scas
loope
inc
scas
pop
sub
cmp
popa
popl
lea
push
cmpsl
pop
aaa
je
aad
inc
insl
mov
les
fstpl
and
sub
xchg
or
mov
xchg
shll
insl
cmp
adcl
fsubrl
pop
push
jmp
fdivs
or
push
xlat
sbb
rcrb
xor
sbb
aaa
test
scas
jp
jae
aaa
push
add
scas
sbb
adc
shlb
pop
pop
je
fcmovnu
xor
mov
cmp
les
mov
add
stc
mov
pop
xchg
pop
inc
das
fdiv
aas
pop
in
push
push
sub
dec
cmp
inc
aaa
cmp
addr16
push
and
notl
pop
mov
out
movsb
out
xchg
mov
xor
xchg
loope
inc
addb
sti
or
fsubl
leave
inc
dec
pusha
ret
xor
add
cmp
sti
push
sub
dec
aam
or
inc
mov
inc
mov
add
sahf
iret
into
shrl
lahf
cmp
sub
test
jp
sarl
or
cmp
ss
push
xor
inc
xchg
aaa
xlat
pusha
ret
sub
leave
cmp
pop
insb
ja
jg
jne
cmp
mov
mov
outsb
and
ja
xchg
cmp
out
out
mov
adc
pushf
dec
inc
sub
add
mov
mov
stos
iret
jecxz
cmpsb
lock
aad
sub
fldl
daa
push
leave
adc
inc
stos
ror
add
pop
mov
in
ficomps
shr
sub
in
mov
femms
inc
mov
in
xor
pusha
xor
sub
scas
dec
adc
loop
lahf
aas
cmp
ss
int
fbld
mov
inc
shl
js
rol
mov
imul
mov
push
fnstsw
sbb
hlt
xchg
pop
jmp
out
lret
rclb
xlat
push
aas
divl
add
fildll
pop
cltd
sbb
sbbb
or
bound
and
xchg
adc
aad
flds
push
repnz
cmpsl
repz
inc
lds
jmp
adc
and
or
cmp
daa
add
push
mov
jbe
xchg
fmuls
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
jmp
mov
xchg
xorb
jno
cs
pop
lahf
decl
pop
jle
pop
jl
jle
dec
sub
cld
sub
dec
mov
inc
ret
add
mov
adcl
pusha
xchg
lahf
or
clc
add
push
dec
test
cmpsl
cmp
ss
es
add
inc
mov
out
rolb
or
lahf
mov
jb
jnp
and
imul
ljmp
xchg
cmp
mov
jne
mov
pop
push
push
push
or
mov
xor
cmp
mov
imul
enter
scas
mov
mov
andb
aaa
sbbl
xchg
sub
sbb
sub
jp
cmp
pop
jl
xor
jne
mov
mov
and
jo
jle
add
insb
push
mov
mov
or
stos
sar
add
jno
repz
mov
add
push
insl
cmc
mov
xchg
fildll
push
mov
pop
inc
das
gs
push
dec
fsubrl
outsl
aad
mov
mov
leave
aad
std
iret
sbb
dec
adc
repnz
and
lret
mov
aas
push
push
jo
pop
jno
or
sbb
or
pop
sbb
int
and
in
add
xlat
xchg
bound
stos
scas
imul
jge
adc
lea
inc
mov
push
cmp
xchg
arpl
push
lods
dec
xor
add
repnz
bound
sub
mov
pop
les
and
repnz
test
insb
lds
mov
adc
mov
pop
ljmp
mov
inc
test
jbe
rcrb
xchg
or
dec
rorl
sub
xor
arpl
mov
ss
pop
pop
lret
push
xor
js
adc
pushf
mov
pusha
negb
scas
cmp
pop
clc
aad
push
pop
lods
add
adc
cmpsl
add
pop
lds
movsb
mov
ret
sub
sub
pop
pop
repnz
mov
jecxz
aaa
out
popf
cwtl
lds
rcrl
adcb
rcr
repz
andl
outsb
cwtl
mov
ljmp
nop
lret
aad
out
ret
test
cmpsl
sbb
repz
insl
mov
inc
ficoml
cmp
gs
aam
sahf
mov
stc
imulb
jg
negl
sbb
sbb
mov
xchg
sub
mov
and
mov
cmpsb
mov
mov
sbb
jmpw
nop
mov
shrb
cmp
mov
jbe
mov
mov
jmp
mov
aaa
or
mov
subl
xor
shlb
pop
jl
jle
cmpb
pop
jmp
loopne
mov
pop
jae
imull
xchg
jecxz
dec
loop
inc
sub
mov
iret
adc
pushf
dec
dec
clc
jnp
mov
dec
pop
mov
jl
loope
add
cmp
jne
scas
int3
pop
sub
mov
nop
or
add
mov
and
jmp
adc
dec
cmp
lods
aaa
mov
out
shlb
cmp
and
or
inc
push
les
cmp
add
cmp
in
aas
dec
push
mov
push
cmpl
leave
cmp
pop
adc
out
sub
fwait
push
pusha
scas
shlb
and
sti
mov
xchg
ffree
xchg
pop
dec
icebp
ret
and
inc
mov
sub
in
sbb
jne
mov
nop
mov
fsubl
xor
aas
or
cmp
mov
sti
cmp
sbb
imul
xchg
push
dec
and
pop
ljmp
and
push
sub
rorb
mov
fisttpll
pop
fst
and
jge
mov
sbb
and
add
fld
inc
dec
mov
pop
adc
int3
inc
je
adc
rcr
push
aad
cmp
mov
mov
faddl
pop
xor
movsl
add
jg
orb
adc
xchg
push
fdivs
out
out
dec
out
jg
inc
sub
push
add
jns
push
fimull
push
pop
fists
jge
shlb
cmp
add
cmp
lcall
leave
pusha
repnz
push
or
insl
sbb
int
cmp
sub
sbb
lock
xchg
push
jae
jmp
cli
jae
movlps
fcompp
cmp
hlt
test
xlat
inc
xor
adc
std
div
or
ret
stos
imul
mov
pop
negl
hlt
sbb
rcl
mov
cmp
or
rol
test
ds
xchg
mov
add
add
ja
aam
pop
and
hlt
fsubrl
inc
mov
test
testb
fcoms
sbb
xor
pop
lahf
test
or
sbb
and
push
insl
pop
inc
or
sti
pop
dec
or
imul
sub
cmp
mov
out
mov
out
jb
pushf
jp
dec
dec
sbb
mov
into
icebp
adc
and
jp
dec
arpl
iret
into
jb
out
mov
les
repz
mov
xlat
fnclex
aaa
xchg
and
xor
shrl
push
push
pusha
cmp
mov
mov
add
add
pop
inc
dec
popa
jno
jne
xor
jle
push
mov
jle
jl
jle
add
jnp
mov
xor
xchg
xor
jne
jecxz
mov
mov
inc
fisubs
cmpsb
roll
jle
and
mov
and
mov
inc
arpl
push
pop
and
cli
cld
daa
cli
je
testb
popl
mov
clc
out
inc
cmpsb
jp
mov
in
dec
xchg
sti
mov
insb
divl
fistl
dec
mov
and
dec
push
mov
repnz
push
mov
jno
inc
mov
adc
add
xor
into
jg
sub
rorb
cltd
adc
cmp
inc
add
imul
or
push
mov
and
data16
adc
or
scas
mov
cli
cmpsl
lret
pop
xchg
jo
push
mov
mov
jge
and
dec
stos
jno
cmp
ss
shll
mov
out
fisttpl
and
jmp
mov
cmpl
negl
jmp
push
add
cwtl
cs
sbb
bound
arpl
dec
lcall
stc
test
loope
add
js
mov
popa
mov
cli
jnp
aas
ror
lahf
sub
push
push
push
inc
add
jmp
ret
mov
je
adc
mov
lret
lds
fmull
sbb
stos
inc
sbb
jno
jb
xor
lea
sub
das
push
jp
adc
scas
mov
xor
imul
movsl
sbb
mov
xor
test
mov
jo
in
jnp
inc
xchg
repnz
rorl
daa
inc
fnstsw
dec
pop
cmp
dec
push
dec
push
test
xchg
addr16
out
hlt
rcrb
sub
inc
lock
cmpsb
frstpm(287
push
push
jle
roll
mov
fisttpl
ja
cmp
dec
leave
cmpsb
movsl
xor
in
mov
mov
and
mov
adc
and
fwait
mov
mov
and
jae
decl
js
outsb
adc
cmc
ret
mov
fisttpl
outsb
or
inc
sti
and
and
add
push
pusha
pop
scas
pop
popa
insl
sbb
cmp
sbb
adcl
push
mov
xlat
cmp
xor
scas
pop
sarl
scas
adc
sub
jnp
dec
jbe
shrb
jge
sti
add
push
scas
jbe
repnz
push
in
pop
cli
mov
loop
clc
inc
insb
pop
xchg
loop
dec
jmp
mov
lods
adc
into
sub
cmp
mov
stc
add
imul
mov
mov
mov
mov
add
movl
mov
jmp
sub
test
push
roll
mov
jl
jle
xchg
push
xor
pop
cmp
mov
idivl
inc
cltd
and
rorb
adc
and
out
stos
jb
out
daa
subl
xchg
xchg
xchg
or
lods
jns
fwait
gs
mov
stos
pop
out
or
hlt
add
or
or
clc
jae
inc
cmp
cld
dec
inc
xor
shll
repz
xor
popf
xchg
sbb
push
cmc
mov
mov
jae
or
jmp
mov
fwait
cli
sub
mov
lea
jno
insl
mov
push
test
cld
dec
mov
jae
sbb
xor
jnp
jle
jl
popa
sub
inc
jae
sub
lahf
lock
les
mov
lcall
sbb
incb
cmp
mov
push
outsl
out
sub
das
mov
jp
lock
add
pushf
lret
inc
inc
jae
stc
xorb
aam
mov
fsave
inc
js
insl
pop
ds
mov
lahf
stos
pop
aam
sub
mov
push
mov
dec
dec
xchg
aad
enter
fs
or
lds
and
mov
aam
push
call
adc
xchg
mov
sahf
mov
fcmovnu
pop
jl
js
xor
sahf
jmp
mov
and
test
xor
mov
xchg
mov
icebp
addr16
loope
jmp
mov
int3
dec
shrl
imulb
dec
ds
iret
cwtl
add
popl
lret
rol
cmp
sbb
inc
xchg
jecxz
xor
notl
rcll
xchg
sub
rcll
jnp
stos
fwait
jp
sub
call
mov
jae
push
push
sahf
mov
iret
mov
cmp
ss
add
ds
int3
xchg
rcrl
jge
stos
dec
mov
inc
jns
out
xchg
add
jmp
into
ret
fwait
xchg
adc
push
outsb
mov
repz
data16
roll
mov
sarb
pop
ja
in
jne
pushf
cmp
sub
insl
xchg
je
data16
inc
xchg
movsb
clc
out
int
jecxz
jge
sub
xlat
ds
outsl
fcoms
mov
fidivrl
pop
push
xchg
fmulp
pop
loope
mov
push
sbb
cli
sub
adc
dec
inc
lea
test
sub
test
and
jne
mov
xor
sti
loop
iret
mov
in
ret
ret
scas
in
int
ret
mov
dec
xchg
sbb
in
je
mov
sbb
mov
in
stos
mov
repnz
jns
mov
movl
movl
mov
xor
add
jmp
mov
xor
add
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
xor
xor
add
jmp
xor
adc
shl
icebp
repz
cs
jle
jl
jle
stos
test
push
push
dec
mov
int3
jmp
mov
ret
movsb
pop
movsl
sub
clc
ds
stos
xchg
jp
sbb
lods
push
outsl
adc
test
pop
in
std
inc
cmp
jns
cmp
std
or
popf
out
mov
sahf
jecxz
es
cmp
mov
push
popa
aam
out
leave
pop
jge
insb
sbbb
insb
aas
pop
jae
and
sbb
sub
xor
jg
popf
cmpsl
xchg
out
lret
cmp
sarb
add
adc
add
or
pop
call
jne
pop
jge
jg
cmc
aad
stc
loop
rol
add
and
lods
jmp
mov
jne
movsb
das
jmp
and
xchg
insb
fadds
xchg
sub
xchg
push
aam
xor
mov
sub
stc
popf
xor
sbb
ds
mov
sbb
popa
cmp
aas
out
test
mov
aas
sub
xor
cmc
xchg
jecxz
adc
cs
lods
sarl
dec
ret
xor
rorb
sbb
jmp
cltd
push
lods
sbb
icebp
push
inc
xchg
les
stc
jle
js
xchg
js
loopne
fistl
fisubrs
adcb
add
popa
into
or
popa
jecxz
adc
icebp
mov
sbb
xor
sub
jg
dec
xchg
icebp
xchg
scas
push
ljmp
sbb
dec
lods
addl
out
jl
sub
je
insl
ds
insl
cs
leave
xor
lods
or
sub
mov
int
fsub
mov
fistps
jne
out
sub
push
shrl
ds
mov
adc
pushf
mov
hlt
dec
mov
inc
out
fxch
in
inc
cmp
xor
movsb
ret
insb
mov
jp
sub
dec
es
xchg
test
mov
sub
push
in
mov
and
add
pop
lahf
inc
rol
xchg
push
fimull
in
mov
jge
cmp
sbb
iret
je
mov
repz
cltd
lret
sarb
jp
stc
sti
lds
xchg
and
loopne
shll
dec
out
pushl
mov
jnp
cmp
jp
mov
out
mov
leave
inc
or
fnstenv
add
cwtl
iret
mov
cs
jp
xchg
xor
dec
test
pop
shl
jnp
sub
mov
add
ds
pop
add
add
ljmp
pop
rolb
in
jo
gs
jmp
sbb
stos
add
imul
add
mov
mov
mov
xor
add
imul
mov
xor
sub
mov
mov
xor
add
jmp
xlat
pop
mov
jno
stc
hlt
jb
mov
jle
jl
jle
cltd
sub
jb
sbb
js
push
push
adc
pop
mov
sahf
adc
in
mov
lods
mov
cli
and
push
jg
mov
and
idivl
mov
xchg
cltd
xchg
mov
push
mov
sub
lcall
lcall
cmc
pop
pop
inc
inc
popf
adc
lods
push
loopne
or
orl
mov
jg
and
imul
adcl
hlt
pushf
std
push
inc
mov
out
es
es
inc
adc
arpl
cmc
xor
mov
shl
xchg
adc
cmp
popf
shll
mov
int3
lret
in
jg
sub
test
nop
dec
add
and
mov
adc
add
repz
xchg
xchg
fisubrs
je
test
sbb
xor
enter
mov
stos
push
nop
dec
repz
outsl
out
repz
fldcw
cli
pop
ss
sti
cmp
and
aaa
mov
pop
or
loope
xchg
mov
aam
dec
xchg
pop
in
sbb
rorl
inc
lahf
sarl
fldcw
lods
adc
int3
seto
push
loope
bnd
or
decb
xor
test
dec
je
cmp
sbb
xlat
xchg
jae
fimuls
xor
sub
lret
mov
shl
add
xchg
leave
mov
gs
int3
adc
push
xchg
push
in
fidivrl
fstpt
inc
mov
ja
lret
mov
pop
add
xor
outsb
pop
mov
je
hlt
shlb
stos
xchg
xor
enter
push
lcall
pop
idivl
xchg
imul
push
jno
outsb
cwtl
push
jbe
out
dec
pop
dec
and
pop
mov
loopne
xchg
sub
cmc
adc
adcl
imul
or
push
stos
imul
jge
jbe
call
push
mov
mov
shlb
in
push
add
lds
pop
test
int
arpl
ret
cmc
add
cmp
adc
test
xchg
lds
push
jns
inc
sahf
push
xchg
lds
xchg
lahf
cmpsb
hlt
js
push
push
lock
pop
or
jo
insb
sub
push
hlt
add
add
aaa
aad
add
lcall
int
in
movsl
fcoml
or
mov
aaa
outsl
ss
add
hlt
inc
data16
adc
jecxz
adc
cld
cltd
and
jle
rclb
test
out
in
inc
mov
pop
call
lea
jmp
pusha
das
sti
pop
push
push
out
loopne
mov
imulb
jle
jl
jle
repnz
mov
mov
inc
sbb
push
add
jg
dec
out
inc
add
pop
jp
out
jae
and
lds
cmp
push
adcl
sbb
rol
mov
stos
xchg
fwait
mov
js
jbe
push
addb
mov
xchg
pop
and
and
ljmp
insb
mov
xlat
cmp
and
mov
sub
cs
repz
pop
ss
out
aas
push
aas
push
xor
adc
cmp
dec
jae
pop
data16
pop
cmpsb
xor
loope
or
sbb
imul
inc
push
decb
out
add
mov
pop
push
popa
xor
repz
mov
or
cld
test
jbe
inc
xchg
adc
fildll
xchg
mov
jmp
lcall
fists
sar
adc
cmp
push
cmpb
vmovupd
sbb
pop
andl
cmp
xchg
jbe
adc
ja
sbb
xlat
call
xchg
push
ljmp
jo
mov
ja
loope
sbb
scas
add
into
mov
data16
aaa
addl
fisubrs
mov
fcomps
repz
cmp
iret
mov
fs
jge
repnz
in
dec
popf
pushf
xor
in
gs
pop
and
enter
push
push
clc
test
ss
xchg
dec
pop
rep
aas
loopne
popf
scas
jp
nop
je
icebp
jg
push
sub
lahf
mov
mov
ljmp
icebp
inc
pop
ljmp
inc
xchg
jmp
jae
jle
adc
icebp
dec
pushf
push
pop
xorl
data16
addr16
scas
mov
mov
pop
scas
mov
hlt
test
cmp
xchg
aad
cwtl
popa
lahf
and
stc
xlat
add
mov
int3
xor
loop
jnp
mov
lea
mov
cmp
push
cmpsl
push
sbb
pop
fcmovu
out
cmp
push
dec
or
or
call
mov
add
cmc
adc
pop
xor
fldt
cmpsb
lcall
pop
outsl
or
mov
mull
into
xchg
shll
pushf
jmp
inc
fs
movsb
pop
cmpsl
and
sbb
and
rol
cmc
inc
das
mov
das
cmpsb
push
push
xchg
pushf
pop
or
or
mov
pop
into
push
scas
pop
aaa
xor
popa
push
stc
bts
xor
lock
pop
ret
cmpl
jmp
jp
es
xchg
cmp
cli
jbe
mov
mov
jmp
outsl
fisttpll
pop
fmull
out
shrb
jle
pop
jl
jle
sahf
adc
adc
or
lds
jbe
cltd
sub
imul
dec
lcall
or
push
sti
add
stos
in
dec
or
scas
inc
out
sbb
inc
hlt
stos
in
fwait
sarl
jae
xchg
xchg
add
mov
mov
adc
xchg
mov
stc
mov
leave
pushf
cmc
test
test
inc
pop
iret
mov
pop
stos
mov
or
cmp
adc
mov
add
add
add
dec
js
adc
insb
mov
testb
mov
int3
push
mov
and
fsubrl
cli
test
andb
in
inc
out
pop
xchg
lcall
int3
mov
jo
popa
pop
stos
cmp
jbe
mov
out
mov
pop
into
jmp
arpl
jmp
fbstp
mov
jns
rcl
scas
mov
jo
out
jle
pop
mov
push
insl
ja
adc
xchg
arpl
je
adc
xchg
jo
cmp
xchg
or
sbb
iret
or
pop
cld
pop
jge
int3
out
inc
jb
mov
lcall
push
pop
scas
ja
pusha
roll
movups
sbb
lods
cmp
jae
jp
jle
mov
sub
pop
cld
mov
int
fcomps
sbb
inc
xchg
adcl
or
pop
jnp
mov
incb
jae
arpl
test
inc
jecxz
fmulp
lods
or
loope
fbstp
pushf
stc
out
xor
mov
inc
ss
shr
call
mov
add
xchg
movsl
cwtl
xorl
sub
icebp
push
mulps
sbb
adc
xchg
aam
ljmp
push
push
pusha
std
sahf
mov
icebp
or
or
mov
popa
push
sub
add
xor
cwtl
cltd
and
out
mov
fiaddl
pop
sarl
sar
pop
cltd
sbb
and
or
mov
les
push
sbb
mov
cmp
xchg
xchg
xchg
dec
jp
call
loope
test
fs
push
pop
jnp
filds
and
inc
stc
xor
in
shl
push
inc
imul
sbb
sbb
outsb
jnp
adc
push
lahf
scas
inc
jo
repnz
xlat
test
in
push
repz
inc
xor
nop
jb
xor
push
mov
dec
imul
mov
and
fwait
jno
jecxz
jae
daa
push
ret
jp
fildll
xor
mov
fadd
idivl
pusha
call
lahf
push
loopne
pop
test
js
inc
inc
xor
add
imul
mov
xor
add
mov
lea
mov
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
pop
pop
leave
ret
push
mov
push
mov
and
mov
xorl
xor
notl
add
jmp
scas
incb
jne
lods
jbe
loopne
mov
inc
lcallw
sub
jle
repz
sbb
daa
test
clc
sahf
add
mov
lods
das
lret
sbb
inc
data16
jecxz
dec
xchg
pop
sub
lods
adc
movl
mov
data16
pushf
dec
inc
ficomps
das
push
or
in
xor
rclb
aam
test
ficoms
rcrb
mov
hlt
and
xor
sub
push
pop
loop
push
sarb
test
mov
mov
jo
mov
js
sbb
cld
ret
fcompl
es
aam
inc
lahf
test
mov
dec
ss
mov
push
lods
data16
ja
test
dec
or
loop
enter
fcmovu
xor
rcll
inc
dec
sub
sbb
test
test
xchg
pop
mov
add
cmpsl
sbbl
sub
fdivrl
pop
xchg
mov
xchg
dec
sbb
push
mov
arpl
outsl
or
sub
push
inc
mov
repz
shll
fldl
push
xor
jp
mov
adc
sub
into
pop
int3
dec
in
cmp
xchg
mov
xlat
arpl
xor
or
inc
jo
push
ficompl
out
pop
sub
scas
stc
icebp
test
ljmp
mov
cwtl
push
mov
popf
sbb
dec
pop
out
daa
cltd
jle
push
loop
ret
dec
in
mov
mov
fwait
dec
add
sbb
push
inc
cmp
jl
les
aad
pop
sub
or
sbb
sub
or
es
sbb
in
jne
add
push
out
mov
ror
stos
sbb
testb
pop
adc
addr16
dec
mov
xor
test
jle
decl
outsb
xor
inc
iret
adc
add
or
jmp
in
loop
adc
mov
mov
mov
test
fnstcw
leave
call
sbb
push
enter
out
jmp
cwtl
stc
in
mov
repnz
aas
mov
cs
sub
dec
rcll
out
clc
sbb
cld
sbb
sbb
inc
cmpsl
adc
fdecstp
ds
or
icebp
sub
imul
mov
xchg
pop
cmp
cmpsb
dec
mov
inc
mov
xchg
mov
or
mov
dec
aad
sub
cmpsl
mov
iret
ret
lods
int
sbb
int3
ficoms
dec
pushf
iret
leave
adc
add
sahf
mov
out
dec
pop
jge
mov
add
test
xchg
mov
or
inc
and
dec
push
repnz
or
pop
mov
inc
imul
loop
xchg
xchg
lods
rcll
inc
invd
je
or
lahf
sub
adc
movsb
cld
test
out
inc
outsb
jae
aaa
popf
or
insl
mov
addr16
pop
jo
sub
test
sub
push
mov
mov
movl
movl
mov
push
mov
movl
mov
cmp
je
mov
xor
xorl
xor
lea
xor
cmp
jne
movl
jmp
add
mov
xor
add
movl
mov
mov
movl
jmp
jmp
fldcw
les
adc
call
jge
jle
mov
push
sub
jle
mov
or
shl
xor
and
cli
shll
rcl
data16
or
leave
cmp
jl
imul
icebp
mov
pop
stos
dec
loop
and
ljmp
add
sbb
repz
dec
jmp
mov
jmp
in
filds
or
outsl
and
push
test
icebp
sbb
aad
sarl
inc
fdivrl
movsl
dec
sbb
mov
jl
mov
lea
out
ret
xchg
mov
aam
lods
aam
xchg
jp
xor
push
lcall
cs
xchg
ret
mov
popf
leave
and
pop
cmp
and
es
dec
mov
imul
and
and
cld
xchg
cli
test
out
jne
mov
xchg
adc
insb
or
divl
shrb
into
dec
jmp
lret
lods
mov
clc
pop
jle
ficomps
add
xor
and
xor
pop
pushf
jle
ror
mov
mov
arpl
sbb
pop
pop
call
jne
add
adc
std
xchg
mov
xchg
add
pop
lods
test
rcr
pop
mov
push
dec
sahf
movsb
adc
adc
lret
outsl
aas
mov
int3
insb
aad
mov
cmpsb
cltd
mov
repnz
inc
fcompl
in
cmpsl
mov
xchg
add
jmp
push
pusha
outsb
fisttpll
or
jg
mov
lock
jno
in
push
jne
outsl
dec
mov
test
lret
mov
adcl
sub
or
rclb
orl
push
aad
dec
pop
clc
faddl
stc
leave
mov
aad
or
andl
dec
daa
in
int
jo
jb
ficompl
fwait
popa
test
and
lea
out
mov
pop
mov
mov
enter
inc
fcmovne
lcall
push
mov
inc
aad
mov
icebp
sbb
ds
loop
rorl
xor
jo
movsb
lcall
mov
dec
mov
call
xchg
dec
repz
fldenv
test
std
cmp
xor
pop
jecxz
cltd
lret
imul
sahf
mov
push
aam
jne,pn
mov
add
lret
fsts
pusha
das
pop
xor
adc
rorb
int
jmp
sub
scas
xor
std
or
in
mov
pusha
pusha
xor
mov
pop
lods
pop
dec
pop
dec
lods
sub
adc
push
push
mov
cltd
cs
mov
inc
push
nop
fistps
pop
inc
cmp
sbb
xchg
cmp
pop
inc
push
sub
sar
dec
hlt
push
mov
test
add
ret
push
push
mov
lds
sbb
enter
pop
divl
idivb
pop
cmpb
js
vsubpd
and
enter
cmpb
or
mov
js
jno
xor
neg
jmp
jne
sub
test
test
mov
xor
sub
jle
rorb
fldl
inc
test
out
sarb
jb
imul
rolb
mov
loope
gs
xor
sbb
cmp
leave
cld
cmp
cmp
fucomi
mov
dec
ss
push
sbb
jne
jle
arpl
lretw
fdecstp
mov
push
mov
addr16
or
lret
imul
ja
xlat
add
out
scas
push
jecxz
mov
bound
shrb
cli
dec
dec
loope
scas
pusha
jne
adc
js
pushf
scas
adc
mov
imul
pop
sub
movsl
jae
iret
pop
jecxz
aam
daa
mov
cmp
loop
js
pop
inc
jbe
sbb
outsl
dec
pop
lods
test
jne
and
addr16
cmp
das
adc
lret
cld
jl
push
xchg
fistps
push
call
jne
mov
add
fsubs
mov
sbb
daa
jae
loop
inc
push
shl
in
mov
jge
mov
xchg
das
sbb
xor
cmp
adc
bound
jnp
cltd
pop
pop
movsl
fidivs
pusha
je
inc
popf
ret
testb
mov
scas
arpl
adc
jmp
or
fimuls
cmp
and
or
adc
sub
loop
mov
ficoml
out
fimull
xor
daa
adcl
sbb
dec
fcmovu
xchg
cld
mov
into
mov
sub
cli
loope
movsb
pop
aam
mov
lret
xchg
xchg
pop
jnp
out
pop
mov
repnz
xor
out
pop
lds
fwait
pop
adc
or
rcll
je
call
imul
mov
pop
out
adc
jecxz
cmp
stos
ja
dec
or
xchg
enter
push
sbb
cmp
and
adc
pop
leave
inc
cmp
imul
icebp
mov
pusha
xchg
loope
arpl
loop
cmp
jne
loope
nop
xchg
add
call
cmpsb
push
cmp
add
fldenv
negl
insb
hlt
dec
sub
inc
and
cmp
lods
add
adc
scas
jle
stc
ficoml
test
xchg
push
mov
and
add
lahf
icebp
pop
push
fisubrl
test
cltd
dec
popf
out
testb
xor
mov
lods
lock
fistpll
xor
push
orl
inc
test
push
test
adc
mov
and
hlt
mov
movsl
sti
repnz
data16
mov
inc
mov
jge
and
mov
and
pop
cwtl
lcall
jmp
pop
add
or
dec
outsl
mov
jae
out
insb
jno
cld
or
pop
pop
mov
loopne
rcrb
push
pop
mov
dec
int
dec
loop
clc
mov
imul
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
mov
mov
add
mov
mov
mov
pop
test
je
pushl
pushl
mov
pushl
mov
jmp
lahf
cmp
push
pop
fcomps
cmc
repz
pop
pop
push
aas
jle
sub
jle
inc
nop
lods
frstor
push
xorl
or
mov
ficompl
push
xchg
daa
jl
into
test
icebp
adc
in
and
test
gs
dec
leave
or
mov
xchg
rorb
arpl
mov
adc
or
leave
pop
fistpll
movsb
jle
jae
sbb
and
ret
sub
inc
pushf
fstpl
dec
loop
push
cmp
test
and
push
in
push
outsb
shlb
scas
out
xor
loopne
stos
int
fisttpll
pop
or
int
mov
lret
subl
jne
mov
xchg
ror
or
cmpsb
sbb
mov
js
shll
ljmp
lret
scas
xchg
mov
aas
iret
mov
adc
xchg
andl
cmpsl
adc
push
loop
adc
sbbl
cmp
and
fninit
push
bound
ja
jno
out
inc
add
aas
xchg
or
ret
cmp
push
jge
dec
lahf
lods
xor
negb
mov
out
unpckhps
pop
add
cwtl
and
pop
imul
popf
popa
lock
mov
sbb
or
aas
cmp
jnp
aad
insl
xchg
movsl
sti
mov
mov
sahf
jecxz
ret
xor
mov
dec
lahf
jo
and
and
imul
pop
mov
cmp
mov
out
and
sub
popa
popa
jo
rclb
aad
jl
cmp
add
xor
jno
xchg
movsb
dec
daa
or
dec
or
fstl
sbb
mov
and
and
mov
out
aam
hlt
int3
sub
pop
iret
mov
and
mov
or
cmpsl
push
and
lahf
xorb
jp
popa
out
and
fbld
aad
add
sub
nop
pop
subl
pop
cltd
rcrl
imul
jle
push
jp
test
push
dec
jg
pop
lahf
inc
mov
or
jmp
cmc
pop
in
decb
jmp
stos
xor
in
xchg
mov
add
cmp
or
inc
repnz
daa
cmp
adc
rorb
es
mov
popa
cmp
scas
mov
ret
scas
cs
notl
pop
pop
cmpsl
pusha
js
adc
sub
mov
shrl
xor
sbb
xor
jnp
fbstp
addb
lock
xor
rorb
je
push
popa
ja
repnz
nop
rcl
addl
mov
pop
fsubs
inc
lock
pop
xchg
aaa
in
mov
iret
jmp
mov
shl
in
cs
xor
mov
xor
adc
enter
shlb
jne
nop
mov
dec
aad
push
and
nop
callw
jmp
mov
leave
ret
push
mov
sub
push
call
movl
cmpw
jne
push
call
movl
cmpb
movl
jne
movl
movl
lea
mov
lea
andl
mov
inc
mov
cmpl
jne
push
pushl
push
call
cmpl
jne
xor
or
inc
mov
cmpl
jb
movzwl
and
mov
mov
adc
mov
sbb
mov
mov
sub
mov
push
xor
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
call
jmp
mov
subl
xor
adcl
push
mov
add
mov
mov
mov
cmp
mov
mov
je
or
mov
sbbl
xor
add
sbbl
imul
mov
movl
jmp
or
xor
and
add
xor
add
and
mov
mov
or
mov
addl
xor
and
add
mov
sub
mov
sbb
mov
and
mov
sbbl
xor
adcl
add
cmp
movl
jne
subl
push
orl
pushl
pushl
call
mov
mov
andl
mov
mov
mov
orl
mov
subl
mov
subl
movl
andl
mov
decl
movl
mov
adcl
xor
add
jmp
notl
mov
xor
lea
push
mov
xor
lea
push
adcl
mov
xorl
pushl
call
mov
add
xor
andl
mov
inc
mov
cmpl
jne
call
cmpl
jb
mov
adc
mov
lea
mov
mov
xor
xor
add
mov
xor
lea
cmp
jbe
mov
mov
mov
mov
mov
mov
pushl
sub
pushl
xor
mov
pushl
call
sub
xor
mov
mov
mov
xor
add
xor
div
mov
cmp
jne
call
lea
mov
mov
push
add
push
lea
push
call
mov
mov
mov
mov
mov
mov
sub
xor
cmp
je
mov
mov
sub
xor
cmp
jne
mov
add
jmp
mov
xor
add
mov
mov
xor
add
mov
jmp
mov
mov
mov
mov
add
mov
mov
pop
pop
pop
jmp
push
call
xor
leave
ret
push
mov
push
movl
push
mov
mov
mov
mov
movl
movl
movl
cmp
jne
or
mov
sbb
mov
movl
jmp
cwtl
sahf
inc
mov
ja
mov
movl
cmp
cmp
mov
loopne
cmp
movsl
jns
pop
xchg
test
out
sarl
push
lret
push
js,pt
jne
push
xchg
inc
mov
in
push
jno
mov
add
add
lcall
daa
rcr
mov
and
ret
sbb
pop
or
sub
imul
fxam
mov
inc
lret
jle
mov
jne
sbb
push
add
mov
je
sbb
cmp
jbe
cmp
insl
ror
push
xchg
inc
jae
mov
inc
pusha
sbb
stc
add
data16
mov
mov
mov
es
ret
sbb
mov
cmp
mov
rorl
jbe
cmp
xor
loopne
imul
pop
sub
mov
ja
fcomp
adc
lock
imul
scas
test
pop
stos
clc
push
addr16
push
in
aaa
cmp
mov
les
jnp
or
or
push
stos
mov
adc
aas
call
xchg
sar
lret
negb
push
push
cs
ret
arpl
popf
shlb
enter
add
sbb
lods
call
imul
repz
sbb
aaa
sahf
mov
and
sbb
or
std
fisubs
pop
repnz
or
js
xchg
mov
mov
icebp
add
mov
sbb
sub
xor
inc
mov
xor
and
jno
or
xchg
fdivrl
adc
mov
movsl
pop
jle
cli
mov
jae
inc
out
std
in
dec
cmp
sbb
xor
mov
sbbl
add
addl
mov
movzwl
sbbl
jmp
cmp
es
repz
movsl
pop
xor
xchg
push
clc
inc
cmp
mov
testl
repnz
or
out
mov
add
addl
and
mov
mov
and
add
hlt
dec
xor
push
sbb
hlt
sbb
test
and
mov
xchg
sbb
sbb
jne
xchg
cmp
test
inc
out
sbb
push
xchg
cwtl
testl
dec
das
std
sub
or
cmp
gs
out
dec
lock
mov
int3
xor
subl
fisubs
ljmp
fsubrs
in
pop
int3
in
xlat
int
add
ret
enter
aam
mov
jp
xchg
mov
mov
lret
rorb
ja
out
xor
es
rorl
pop
out
lea
mov
push
int3
mov
mov
mov
mov
icebp
sub
adc
jno
sbb
xor
jae
xchg
fs
mov
frstor
test
push
rcll
ret
andl
leave
sahf
sub
cwtl
jecxz
sub
or
dec
push
cld
sahf
mov
mov
push
dec
add
push
sub
mov
xchg
dec
leave
sti
push
popl
dec
adc
movsl
jl
std
roll
fsts
pop
or
fs
hlt
in
sub
xlat
sub
rol
divl
lcall
mov
aad
aas
mov
sti
and
repz
je
scas
add
fwait
cmc
enter
jecxz
pop
mov
not
andl
and
mov
mov
jmp
xorl
mov
jmp
dec
rcrb
mov
push
loope
sahf
adc
mov
jle
mov
aaa
mov
jp
sub
mov
push
sti
xor
jge
push
adc
std
icebp
pop
push
xlat
fs
adc
mov
cmp
xchg
sbb
xchg
mov
mov
testb
or
fcomi
push
imul
or
fcmovu
dec
out
iret
mov
aam
loopne
lcall
adc
rolb
mov
jnp
xor
hlt
sub
xlat
push
cmp
addl
aas
jne
sahf
xchg
fwait
clc
adc
aas
pop
fcompl
sub
loopne
mov
dec
out
add
pushf
dec
dec
dec
jb
popf
in
and
cli
das
mov
cmp
pop
dec
pop
mov
inc
mull
xlat
xchg
add
xor
das
insl
pop
sbb
in
inc
pop
cld
sub
xchg
inc
jl
pop
ret
popa
jl
jne
fcoms
ret
pop
xor
pushf
fcmovu
pop
sub
add
mov
dec
inc
out
aas
push
cmpsb
or
subl
dec
mov
incl
ljmp
xchg
test
out
jb
xor
mov
dec
mov
aad
pop
js
or
mov
mov
mov
stos
sahf
fdivs
psraw
enter
xorl
icebp
or
xor
es
xor
bound
scas
fs
test
inc
leave
ret
lret
jmp
mov
and
int3
sbb
movsb
sbb
mov
filds
jmp
jecxz
div
add
dec
inc
out
xor
jne
call
test
jmp
and
in
popa
push
lret
xchg
iret
adc
jle
jg
jle
lock
aam
adc
sub
sar
sar
popa
lock
call
cmc
push
or
push
iret
dec
jbe
cmp
mov
nop
or
repnz
sub
lret
scas
cmp
cmp
jmp
pop
ficomps
xlat
xchg
fs
mov
sbb
rcrb
lcall
aas
or
in
iret
cs
adc
xchg
mov
pop
adc
ljmp
enter
insb
push
insb
pushf
and
scas
inc
jge
sub
add
xchg
gs
sbb
mov
cmp
adc
inc
pop
movsb
arpl
aam
jno
fucomip
jp
jge
sub
sub
add
mov
mov
les
mov
ss
flds
cmp
push
pop
mov
ja
ds
jae
popf
lds
test
xchg
repnz
popa
sbb
xor
loopne
lea
mov
fstpt
push
mov
imul
pop
mov
sti
lea
jno
push
inc
or
mov
add
cltd
sub
stos
icebp
jge
movsl
cmp
cmp
sbb
add
pop
mov
pop
xor
or
sub
and
mov
sbb
jp
negl
bound
push
sbb
call
mov
xchg
sahf
ud2
ss
out
leave
xor
sbb
adc
iret
pop
fcoms
adc
loope
inc
hlt
jb
cmp
add
loopne
sbb
jmp
dec
mov
cmp
insb
ljmp
daa
cld
dec
ret
push
mov
sub
andl
movl
mov
or
jmp
pop
cmp
inc
pop
arpl
js
push
loope
jno
lods
or
jle
add
inc
fwait
xor
and
mov
cli
lret
popf
or
in
fiadds
xchg
insl
jl
test
adc
in
fldt
push
das
rcr
jb
loope
lods
xchg
addr16
lcall
test
push
stos
call
bound
xor
repnz
sti
aam
nop
push
or
dec
out
or
xor
xor
adc
jmp
in
xor
jle
orb
inc
out
dec
lods
sbbb
push
iret
leave
scas
orb
xorb
sahf
into
cmp
dec
hlt
fsubrl
xor
cmp
sbb
pop
lea
sub
dec
or
xor
pop
mov
cltd
mov
arpl
sbb
leave
jl
out
testb
adc
popf
add
out
daa
cli
add
jo
xor
movsl
fwait
call
jne
mov
loope
shl
les
cs
pusha
movsb
jns
cmp
ficoml
outsb
bound
or
xor
mov
adcl
xor
call
adc
mov
imul
add
es
mov
or
jnp
jp
add
mov
addl
cmp
adc
mov
popf
mov
sub
xor
sub
pop
cmc
iret
lret
push
push
add
mov
sahf
lods
jno
js
pop
mov
push
jbe
pop
add
repz
js
imul
loopne
xchg
mov
cmpb
test
adc
pop
jae
mov
aaa
sbb
mov
loop
sbb
mov
dec
add
ds
push
lea
in
pop
inc
pushf
jg
and
mov
shlb
jg
push
adc
mov
adcb
xchg
push
push
rep
and
xor
sti
mov
jmp
jg
or
iret
push
in
lahf
mov
inc
in
xor
add
xchg
add
mov
sub
mov
and
lea
sub
mov
mov
andl
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
pushl
push
pushl
call
jmp
xor
push
lea
mov
mov
jmp
aad
shlb
dec
js
js
jbe
ja
adc
jle
add
test
xchg
ss
testl
mov
roll
jp
inc
push
mov
mov
mov
mov
lret
addr16
mov
addr16
mov
sahf
int
int
das
rolb
push
sti
push
rcrb
push
mov
and
sbb
out
cli
lock
push
lods
pop
fidivs
jg
popa
mov
mov
mov
pop
sub
mov
shll
jnp
insb
das
test
push
movsl
add
inc
or
aam
imul
push
push
mov
cmpsb
sub
xor
sub
js
arpl
ret
daa
dec
pop
push
dec
add
mov
cmpsb
daa
cmp
bnd
clc
mov
fiaddl
cmp
pop
mov
jo
pop
das
sbb
inc
add
add
outsl
movsl
lret
inc
and
std
dec
mov
and
mov
xor
mov
adc
mov
inc
xor
and
adc
das
fisubrl
mov
into
mov
mov
mov
sbb
jae
mov
ds
gs
xchg
jb
je
mov
ret
cli
test
xor
xor
sbb
lds
mov
dec
xchg
ja
add
cmp
roll
sti
push
xchg
push
inc
lods
cld
ss
es
popa
fdiv
xor
xchg
sarb
stc
push
and
jl
push
inc
lea
addr16
js
and
decb
shrb
cmpsl
shrl
sbb
jmp
adc
inc
test
add
test
jecxz
jo
pushl
enter
xor
mov
je
cmp
jnp
sub
push
mov
xorl
mov
movl
cmpl
je
cmpl
jne
pushl
pushl
call
mov
dec
mov
jmp
mov
mov
andl
xor
xor
inc
mov
cmpl
jne
pushl
call
cmpl
jb
xor
mov
neg
jmp
loopne
test
cmp
pop
out
adc
and
jle
add
inc
or
jmp
clc
dec
insl
jp
push
rcrb
push
aas
loop
aam
cmpl
xor
sbb
cmpsb
mov
lahf
push
popa
into
arpl
dec
mov
pop
push
pusha
pop
rcr
test
sub
xchg
sarb
and
or
and
pop
or
aad
sti
pop
mov
repz
xchg
iret
sahf
sbb
mov
or
ljmp
ret
mov
roll
jmp
jns
aas
in
xchg
rcll
fdivs
pop
cli
dec
mov
loope
mov
inc
sbb
jmp
sub
xor
mov
test
movsl
cltd
pop
pusha
jo
rolb
pop
adc
je
jne
push
push
sbb
f2xm1
dec
cltd
mov
pop
and
insl
popa
or
sub
pop
jmp
inc
pop
aad
fidivs
mov
adc
movsb
jmp
fsubrs
mov
jge
fidivl
loop
lahf
shll
or
add
loopne
dec
js
cs
mov
aaa
ror
or
iret
mov
xor
roll
arpl
adc
rcrb
cmp
in
test
repnz
add
scas
jl
jbe
dec
xchg
xchg
sahf
dec
fwait
ss
lods
fisttpll
in
aad
test
mov
arpl
in
fnstenv
repnz
ljmp
pushf
xchg
cwtl
and
cmp
sbb
int3
imul
subl
or
mov
rorb
or
lahf
pop
push
sar
daa
icebp
and
push
test
aam
mov
pop
pop
inc
inc
pop
pop
stos
repnz
cltd
hlt
shrb
std
loop
clc
pop
and
stc
inc
pusha
divb
roll
outsb
sbb
add
movl
xor
addl
xor
andl
add
negl
add
incl
div
mov
movl
movl
movl
cmp
je
movl
movl
andl
lea
xor
mov
and
mov
movl
cmpl
je
cmpl
jne
push
push
call
cmpl
jne
xor
add
dec
mov
mov
dec
mov
jmp
mov
imul
jmp
and
out
je
inc
adc
sbb
pop
cltd
lret
stos
sub
jle
add
cmp
sbb
mov
scas
scas
dec
mov
jns
popf
repz
fcmove
mov
sbb
enter
sub
cmp
inc
lods
repz
dec
repnz
dec
stc
sub
inc
dec
xor
adc
addr16
arpl
jno
sub
into
and
mov
or
mov
and
repnz
push
mov
push
pop
ficoml
xor
test
ret
dec
cmp
adc
xchg
lea
jl
adc
shrb
jno
movsl
sahf
std
xchg
ds
pop
inc
mov
push
lret
cmp
pop
imul
add
cmp
sti
test
xchg
nop
and
push
mov
cmpsl
jbe
inc
lods
jl
cmp
aam
push
push
adc
mov
out
rorb
jb
adc
cwtl
fsubrs
or
loopne
xchg
pusha
mov
jg
pop
xchg
push
mov
lea
sub
movsl
push
outsl
inc
lcall
push
xlat
jo
js
mov
outsl
out
push
pop
add
gs
add
sub
dec
ret
xchg
mov
test
mov
insb
cmp
mov
jo
add
sar
lcall
mov
ljmp
fisubrl
sbb
jo
jnp
mov
push
add
mov
fstl
sahf
sbb
ljmp
or
es
shlb
and
mov
xor
loop
outsb
mov
cmp
mov
ret
sbb
mov
sbb
movl
or
or
xchg
or
cmp
xorb
cmpsb
xor
push
dec
mov
adc
jno
xor
scas
test
addr16
adc
mov
cmp
cltd
pop
mov
adc
out
mov
pop
pop
les
xor
inc
mov
mov
cmp
je
mov
orl
mov
xor
add
pop
pop
pop
leave
ret
mov
add
cmp
je
mov
andl
jmp
mov
mov
or
cmp
je
mov
xorl
jmp
mov
mov
mov
mov
xor
mov
add
cmp
je
mov
xor
add
mov
mov
mov
mov
xor
add
movzwl
mov
xor
lea
add
mov
mov
mov
xor
add
imul
sub
mov
jmp
mov
mov
xor
cmp
je
mov
addl
jmp
mov
cmp
je
mov
jmp
push
mov
sub
adc
mov
mov
movzbl
or
mov
orl
mov
mov
orl
push
xor
xor
sub
push
mov
sub
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
push
neg
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
sub
add
mov
addl
lea
not
mov
mov
mov
and
mov
andl
xor
add
mov
andl
xor
or
inc
mov
cmpl
jne
pushl
push
pushl
call
cmpl
jne
xor
add
inc
mov
cmpl
jb
movl
movl
cmpl
je
cmpl
jne
pushl
push
push
pushl
call
mov
dec
mov
jmp
lea
jmp
ss
lods
jmp
push
mov
dec
ds
and
jle
fdivrs
push
and
pop
mull
and
in
xchg
xchg
imul
or
int
jb
pop
movsb
gs
dec
push
scas
dec
inc
mov
sahf
push
cmp
lea
mov
addr16
mov
inc
in
add
mov
jno
mov
dec
sbb
jp
pop
sbb
push
push
pop
pop
push
jecxz
adc
jne
jg
xor
or
sti
adc
addr16
addr16
inc
dec
mov
repz
mov
fsubrl
lret
lods
sbb
xchg
mov
scas
sbb
add
push
sbb
push
insb
cmp
push
mov
aaa
sbb
push
mov
pop
mov
mov
pop
pop
xor
push
xor
fidivl
mov
pusha
xor
test
jo
aad
jecxz
stc
cmp
add
ljmp
inc
and
repnz
adc
scas
cmp
add
cmp
in
lret
pop
push
fucomi
ja
cmp
and
ret
pushf
and
mov
adc
mov
insl
and
inc
lret
cs
pushf
adc
in
push
mov
xor
dec
aas
bound
je
lret
push
sub
mov
sbb
inc
cmp
lret
cld
pop
lock
pop
imul
cmp
mov
gs
mov
xchg
jmp
sbb
pop
inc
inc
mov
inc
xchg
cmc
int3
les
xchg
inc
xlat
lahf
sahf
shrb
xlat
test
arpl
push
sbb
inc
sub
push
or
addr16
inc
pop
cld
and
add
sub
lds
out
jbe
je
cmp
arpl
or
jno
mov
and
fisubrs
aam
in
fst
xor
cmp
mov
add
adc
cmc
cmp
sbb
jb
cmp
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
call
cmpl
jne
xor
or
inc
mov
cmpl
jb
inc
mov
orl
mov
xor
xor
add
add
xor
mov
mov
adc
jmp
xchg
inc
in
mov
das
mov
enter
jl
jle
sahf
inc
cmovge
sahf
mov
sbb
push
addr16
dec
aaa
mov
inc
push
int
dec
jg
xchg
mov
aas
inc
aad
jmp
mov
jg
lahf
movsb
and
js
stos
jle
inc
pop
daa
sbb
idivb
mov
adcb
inc
insb
aas
arpl
es
xchg
neg
icebp
push
in
mov
or
or
pushf
jns
mov
repz
dec
outsl
insl
or
sub
sbb
jge
mov
xchg
lods
sbb
pop
dec
inc
inc
dec
sbb
and
es
jecxz
xchg
pop
mov
push
sti
mov
xor
leave
pop
lea
mov
fldenv
sarb
dec
test
sub
rcrb
daa
and
xchg
out
adc
jb
bound
sbb
push
pusha
push
inc
dec
call
jne
push
mov
loopne
clc
jp
in
cmp
lahf
xchg
sub
stos
out
mov
jle
xor
loopne
and
ja
inc
clc
pop
cwtl
pop
sub
or
loope
mov
xor
out
and
aaa
bound
inc
aam
pop
or
mov
or
test
std
and
sub
inc
gs
push
sbb
aas
mov
sbb
jne
push
cmp
dec
js
jl
insb
cld
sbb
ret
fcoml
xor
and
pop
sbb
xor
out
mov
sub
push
or
fcompl
loopne
or
iret
mov
mov
add
mov
xchg
dec
mov
fs
out
mov
clc
mov
lods
mov
test
ljmp
add
dec
aam
dec
jbe
rorl
push
mov
je
xlat
rorl
mov
sub
fildl
arpl
adc
inc
add
ss
add
out
aaa
inc
add
cmp
jmp
pop
push
jg
xor
add
jle
jl
jle
jle
dec
incl
cmp
std
xor
xchg
aas
test
fcompl
cmp
jns
sbb
or
fdivrl
mov
lds
xor
dec
and
aam
movsl
aam
xor
test
hlt
iret
mov
inc
xor
jo
out
ficompl
test
or
test
orb
rcrl
push
sahf
mov
cmp
imulb
mov
cld
or
mov
pop
mov
xchg
scas
in
jmp
dec
push
sbb
fldl
sub
lcall
leave
jbe
xchg
adc
dec
stos
dec
xchg
pop
sbb
sbb
shlb
int3
outsb
xchg
push
mov
and
jne
push
add
mov
bnd
mov
es
cmp
fsts
xor
lods
sar
sub
ja
pushf
inc
fcmovnb
cmp
and
mov
test
imul
shrb
mov
sub
mulb
js
shlb
add
fwait
xlat
in
aas
adc
cmp
outsb
test
sub
push
mov
mov
leave
xchg
inc
mov
scas
ss
pop
aam
lcall
scas
push
mov
adc
aas
pushf
lods
std
sbb
or
adc
aas
jmp
mov
out
sbb
and
aad
js
and
scas
pusha
or
dec
push
shrd
sub
lds
or
push
pusha
xor
shlb
lods
mov
adc
mov
dec
xchg
nop
mov
ret
pop
inc
dec
jb,pt
sbb
pop
add
fidivs
mov
stc
outsl
sbb
jbe
les
dec
adc
add
sub
mov
and
pop
cmp
inc
cmp
mov
push
mov
sbb
mov
mov
mov
xorl
mov
adcl
movzwl
xorl
add
notl
mov
mov
or
mov
xor
add
cmp
jne
dec
mov
mov
xor
add
cmp
jmp
stos
adc
inc
jno
stos
icebp
jl
and
mov
and
jle
mov
daa
pop
repnz
inc
push
das
pushf
stc
mov
mov
sub
push
pop
dec
or
imul
popa
insb
les
jns
pop
cmp
aas
dec
push
and
int3
fdivr
out
jge
sbb
sbb
push
mov
sub
pusha
add
xor
push
jo
inc
in
cmc
mov
push
pop
lods
or
push
popa
mov
pop
faddl
dec
stos
cmp
cli
mov
xor
cmp
fcmovnbe
mov
frstor
dec
lahf
dec
popf
rol
mov
cmp
sub
mov
sbb
mov
adc
es
daa
pop
ficoms
mov
inc
and
xchg
mov
xchg
push
fcmovnu
fcmovnb
jbe
cmp
sub
imul
xorl
pop
test
and
xor
popa
jle
xlat
jge
ja
mov
or
sub
stos
inc
icebp
push
lcall
cwtl
test
jg
xor
mov
fcompl
add
loopne
into
mov
in
int3
aas
jno
jb
loop
nop
xchg
cmp
pop
mov
cmp
sub
cmc
cmp
arpl
in
lret
fucomip
xchg
push
shl
push
jp
mov
ret
fcomps
aaa
sbb
jno
xchg
lcall
xor
dec
xchg
pop
stc
cmp
jo
sbb
std
out
mov
mov
xchg
ficomps
leave
add
data16
popa
fsts
les
lds
xor
sti
push
repz
aam
push
lock
xor
ss
in
rorb
insb
jno
inc
mov
cli
push
mov
aaa
ds
repz
ja
inc
or
shrb
dec
jo
xor
in
lahf
dec
add
aas
push
pop
icebp
daa
jno
xchg
in
in
mov
sbb
stos
cmp
lods
xchg
mov
inc
cmp
fistpll
push
fnstsw
loop
jne
mov
mov
xor
add
mov
mov
mov
xor
mov
sub
add
mov
mov
mov
movzwl
add
mov
mov
mov
xor
add
xor
sub
jmp
xchg
or
jmp
clc
adc
xchg
data16
and
jle
sbb
lcall
lods
sub
pop
imul
imul
push
and
lods
stos
rcr
lret
add
in
loope
cmp
cltd
aam
sub
mov
add
es
jno
bound
out
push
jns
gs
out
lahf
and
mov
mov
push
pop
xchg
dec
aaa
mov
mov
dec
imul
and
lock
sahf
aad
cmpsb
cmp
inc
repz
pop
loopne
out
ret
fldenv
movsl
in
arpl
in
subb
int3
xchg
adc
mull
ss
or
adc
dec
rcl
adc
dec
sahf
shll
push
nop
and
sub
jecxz
cmc
popa
push
pushf
mov
fildll
xchg
loope
pusha
sbb
jle
xor
inc
dec
mov
cmpsb
adc
es
repnz
push
loop
pop
lds
out
adc
mov
fists
test
gs
rcrl
and
dec
push
jnp
das
dec
mov
rcrb
dec
out
shll
mov
cmpsl
adc
je
fwait
pop
or
daa
or
div
adc
aam
fld
gs
fildl
fs
sub
jae
mov
inc
out
push
mov
pop
shll
dec
loop
aaa
mov
sbb
je
mov
and
daa
add
aad
outsb
add
js
sub
xchg
stos
scas
add
push
outsb
leave
mov
cltd
pop
rolb
in
xorl
lods
add
insl
popf
cmc
int3
and
roll
or
xor
test
jmp
pop
inc
fadd
outsl
mov
aam
in
mov
fsubl
adc
icebp
das
mov
push
cs
out
fs
push
rcll
sbb
dec
cli
aas
movsb
mov
cmp
scas
sub
xchg
sbb
out
mov
movzwl
sub
cmp
mov
movzwl
jg
xor
sub
sub
mov
jmp
xor
lea
mov
mov
cmp
je
mov
movl
jmp
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
lea
add
mov
mov
mov
mov
mov
jmp
sbb
aam
je
and
adc
or
jle
and
jle
dec
push
or
repz
lret
in
in
push
inc
out
pop
dec
out
jecxz
adc
das
add
xorb
outsl
jae
hlt
jg
pop
adc
call
jge
adcb
movsb
es
rclb
dec
fldcw
jnp
dec
wrmsr
sub
jae
not
sbb
cmp
hlt
add
push
push
jo
xchg
out
mov
push
adc
push
mov
pushf
jl
fbstp
mov
addr16
jae
dec
mov
xchg
inc
mov
lods
in
js
inc
sbb
jmp
adc
call
aad
imul
mov
movsl
into
lcall
jbe
jg
inc
pop
insb
das
push
scas
lret
lock
cld
test
lret
inc
xor
bound
inc
push
mov
dec
dec
jbe
pop
js
cmpsl
test
inc
int3
js
icebp
and
cli
ds
sub
ds
push
leave
nop
mov
filds
inc
mov
sbb
add
test
xchg
clc
enter
adc
std
mov
shlb
jnp
std
jb
ss
jbe
arpl
in
jmp
xor
mov
scas
in
mov
sbb
lods
and
mov
mov
add
jg
pop
jns
pop
xchg
xor
mov
inc
inc
jp
pop
adc
sub
inc
push
xchg
pusha
sbb
in
imul
push
fwait
push
imul
mov
test
mov
dec
mov
pusha
pop
jle
mov
movsb
es
add
mov
test
push
pop
mov
scas
lods
cmp
fcomp
fsubs
xor
or
pop
and
or
or
push
add
stc
cmp
mov
aaa
jnp
and
jns
mov
stc
in
xchg
out
and
sbb
dec
cmp
arpl
pop
mov
sub
adc
xchg
movb
mov
mov
mov
xor
add
cmp
je
mov
mov
add
mov
mov
mov
mov
mov
mov
add
xor
cmp
je
mov
mov
xor
add
mov
jmp
xorl
jmp
mov
mov
mov
jmp
sbb
outsl
jno
out
jne
mov
and
and
jle
sbb
jae
pop
xor
jbe
and
out
sub
and
rcrb
mov
jp
je
out
xchg
nop
test
jmp
fstpt
test
and
aas
or
jle
sub
cmp
pusha
in
and
in
fisubrl
lret
rolb
push
das
pop
scas
dec
dec
notl
dec
lods
fstpl
jbe
xchg
mov
not
lods
mov
lea
mov
scas
std
mov
cmp
insl
jmp
imul
pop
out
dec
decl
sub
test
clc
popf
pop
jmp
push
into
hlt
pop
xor
dec
xor
and
pop
sar
sub
inc
ficoms
sbb
je
add
push
or
xchg
xor
add
mov
xor
jb
lds
cltd
cs
enter
nop
inc
and
mov
and
pop
mov
xor
pop
fcomps
in
nop
arpl
shl
lret
cmp
hlt
andl
dec
imul
pop
sbb
xlat
add
fisubrl
loope
cld
dec
aaa
and
cmp
fiadds
inc
popf
cmp
sub
push
outsb
loopne
mov
add
stos
cmc
adc
fimuls
test
imul
cmp
ja
test
rol
push
jmp
stos
das
sbb
clc
int3
mov
rol
in
cmpsl
lcall
data16
adc
mov
clc
sahf
pusha
loopne
xor
push
push
rcr
mov
mov
pop
add
je
sub
add
sub
push
push
sbb
pusha
aas
or
rol
and
out
test
dec
xchg
cs
or
pop
mov
cmp
sbb
jne
and
xchg
sub
test
addr16
iret
mov
inc
jmp
cmc
xor
mov
mov
mov
pushl
jmp
lods
mov
outsb
xorl
pop
iret
xor
and
and
jle
pop
or
dec
pop
and
mulb
cmp
pop
xor
inc
mov
xor
or
pushf
out
sub
sub
es
repnz
jo
mov
cmp
pop
movsb
mov
jno
stc
imul
mov
jp
fstpt
inc
das
jp
jb
sbb
xor
hlt
dec
adc
clc
xchg
cmc
adc
jns
sub
std
jg
mov
pop
cld
cmc
push
daa
pop
mov
leave
mov
stos
push
sbb
repnz
outsl
outsb
cs
push
and
push
in
jno
orb
stos
in
cmp
movsl
mov
lods
lcall
pop
jbe
sbb
xlat
jo
sahf
insl
mov
or
push
mov
rcll
dec
and
dec
xlat
xchg
push
pop
push
inc
fmuls
mov
data16
push
fidivs
mov
mov
aad
mov
push
call
lret
push
mov
xchg
jle
in
mov
in
lods
xchg
cmp
jae
or
int
pop
inc
cltd
xor
shrl
push
cmp
lret
fcompl
sub
daa
jl
cs
leave
mov
ss
xor
imul
or
jnp
mov
mov
dec
shl
mov
or
into
adc
cmpsb
push
inc
les
arpl
inc
mov
add
mov
adc
ljmp
push
cmc
call
add
and
adc
test
xchg
jno
loopne
shrb
outsb
jne
cmpsl
inc
jnp
xchg
cmp
ss
js
sub
cmp
jbe
jp
and
addr16
sub
out
or
repnz
repz
xorl
add
jne
or
and
mov
cltd
jmp
xor
mov
sub
lock
mov
test
and
jmp
loope
ljmp
clc
ljmp
fstpt
and
jle
pextrw
inc
mov
addb
and
mov
add
lea
loop
fisubs
ret
loopne
push
insl
push
sbb
pop
mov
adc
loopne
out
aas
cmp
add
push
xchg
inc
stc
mov
adc
jp
or
popf
jne
loope
rorl
sub
add
imul
ss
sub
and
orl
hlt
jle
add
insb
js
push
inc
int3
pop
sub
gs
hlt
scas
pop
inc
jl
inc
cmp
out
sub
sub
test
fwait
add
pop
inc
ds
push
adc
push
repz
sbb
sub
leave
rcr
xchg
jp
adc
dec
test
and
cmp
mov
out
data16
xchg
cmpsl
fnstsw
add
outsb
jp
cmp
cld
test
cltd
inc
pop
imul
and
aaa
int3
rcrl
les
xchg
xor
insb
out
xchg
add
stos
jmp
and
inc
lods
cmpsb
sarl
dec
fwait
cmp
add
rolb
and
push
sbb
adc
jo
add
push
xchg
mov
sub
nop
out
push
repnz
pandn
mov
and
movsl
dec
inc
sarl
test
adc
loope
mov
bound
push
lods
cmp
stos
add
inc
lock
mov
in
sub
mov
lods
subb
jmp
sub
cltd
pushf
inc
xchg
dec
fwait
push
cmp
inc
add
outsl
je
sarl
into
mov
pop
mov
sub
lret
inc
rcr
sbbl
sbb
xchg
sbb
bound
jle
push
shll
and
stos
add
mov
outsb
loope
fistpll
mov
sbb
inc
cld
decl
leave
pop
and
mov
or
fs
xlat
insb
lret
out
std
loope
inc
xor
add
push
loop
xor
cs
mov
lock
cmp
je
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
movl
add
movl
xor
xor
xor
mov
push
sub
mov
addl
xor
mov
add
orl
mov
mov
sub
mov
jmp
shrl
stos
fadd
cwtl
pushf
or
aad
mov
jle
cmp
jmp
mov
push
lcall
and
cmp
mov
sub
loopne
mov
jge
mov
ss
xor
hlt
adc
sbb
int
sub
andb
cmc
xchg
js
hlt
testl
mov
popl
insl
cld
rclb
xor
adc
and
ljmp
pop
push
fadds
filds
pop
test
stc
and
int3
out
cmpb
cmp
cmp
test
std
js
icebp
into
xchg
inc
xor
inc
hlt
ret
pop
movsl
dec
pop
push
push
mov
add
mov
push
mov
das
cmpb
jg
mov
fisttpll
jge
add
test
inc
sub
mov
nop
adc
out
cmp
rorl
das
cmpb
mov
pop
mov
add
push
xchg
jo
push
lcall
xchg
sub
mov
test
leave
add
jno
push
mov
je
add
js,pn
inc
push
sets
iret
lret
pop
shlb
xor
push
add
insb
scas
das
xorl
add
dec
lea
push
lods
movsb
std
jns
inc
repnz
mov
cmp
xorl
sub
mov
out
mov
inc
inc
mov
andl
mov
rcpps
cmpsl
fprem
xchg
out
mov
ret
sub
push
cld
push
clc
pop
adc
add
mov
sub
push
jno
popf
mov
pusha
testb
addr16
fsub
push
push
cmp
lcall
inc
dec
int
dec
mov
movsb
dec
outsb
cmp
add
sbb
cmp
int
mov
sahf
ss
sub
push
xchg
in
jl
in
iret
mov
fsub
pop
mov
test
test
ret
sbb
pop
cmp
jo
pop
mov
dec
stc
lcall
and
mov
sbbl
jmp
lds
popa
mov
fisttpll
xchg
jle
cmp
and
inc
shrl
mov
xor
xchg
into
or
mov
popa
hlt
ss
int
jmp
loop
in
mov
aas
sub
leave
in
inc
inc
stos
and
ja
nop
mov
sbb
cmc
dec
push
fmuls
in
es
xor
xlat
ret
insb
rolb
int
adc
mov
lods
inc
jb
insl
cli
repz
mov
mov
jmp
xchg
add
xor
les
loope
flds
sbb
mov
xchg
cmp
mov
push
sub
mov
mov
stos
xchg
data16
hlt
xor
dec
pop
cmp
je
cs
out
sbb
sub
cmp
je
inc
mov
pusha
std
leave
filds
stc
jbe
or
jae
jp
cmp
jp
dec
and
xchg
mov
or
adc
mov
sti
mov
inc
mov
mov
roll
mov
mov
sbb
xchg
jecxz
in
cmp
xor
les
add
mov
mull
mov
insb
sahf
dec
mov
hlt
xchg
mov
bswap
out
shr
push
inc
mov
lahf
aam
lds
stos
aad
add
sbb
push
into
dec
lea
mov
fcomps
push
popf
mov
sub
mov
inc
cs
out
cmp
fidivrs
xor
push
cmc
or
inc
leave
scas
xchg
lods
pop
and
test
shl
mov
cwtl
ret
loop
sub
daa
sub
or
mov
mov
clc
bound
jno
dec
push
pop
sbb
sti
sti
xchg
repz
fwait
inc
xchg
sbb
je
bound
das
jl
sbb
rolb
push
icebp
jmp
mov
or
mov
push
int
nop
and
add
mov
or
pop
jns
test
in
adc
addr16
mov
and
or
stc
test
pop
aaa
inc
add
xor
add
test
add
mov
mov
sub
mov
mov
or
jmp
push
lcall
cmpsl
or
inc
pop
and
loop
jle
jl
jle
ret
lahf
xor
movl
cmpsl
in
fs
fcomi
inc
fcmovnu
icebp
inc
inc
aaa
sbb
fmulp
insl
xchg
notb
fsubrl
inc
ljmp
jecxz
pop
nop
pcmpeqb
nop
push
icebp
jno
xchg
adc
or
push
jmp
icebp
es
xor
add
dec
sbb
sbb
add
popa
and
jmp
imul
clc
inc
les
dec
xchg
rolb
push
mov
imulb
mov
popf
jg
fistpll
jnp
int
xchg
ffree
and
sbb
arpl
and
cltd
cmp
idiv
popa
pop
lods
jne
xor
test
bound
and
jecxz
aam
andb
test
jno
cmp
sub
lret
pop
fs
add
shll
loope
push
ss
shrb
and
data16
jge
aaa
cltd
mov
dec
cltd
dec
dec
xchg
fistpl
leave
mov
xchg
xor
nop
and
out
fistl
aaa
sbb
pop
jmp
fs
and
pop
mov
ror
sbb
xchg
xchg
jb
mov
mov
add
cmp
dec
out
imul
dec
mov
enter
icebp
sub
movzwl
sbb
cmp
push
cltd
stc
xchg
jb
cmp
lock
repnz
fwait
xor
xor
lods
cs
in
lds
xchg
pusha
pop
sub
repnz
mov
fists
dec
test
stos
jle
fs
mov
mov
outsl
mov
lcall
mov
mov
xchg
clc
xor
add
les
cld
out
rclb
sbb
sti
and
pop
mov
mov
xchg
push
xchg
sbb
mov
mov
jmp
jg
jl
test
mov
cmp
sub
add
pop
adc
or
sbb
nop
enter
mov
or
aad
ja
out
inc
out
data16
xchg
jnp
cld
or
add
sarb
mov
sbb
add
mov
mov
xchg
adc
sub
and
xor
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jb
mov
movl
cmpl
je
cmpl
jne
pushl
push
pushl
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
adc
mov
mov
sub
mov
mov
orl
mov
jmp
mov
data16
gs
jmp
push
add
jle
jl
jle
aas
mov
push
add
scas
mov
lcall
out
popa
xor
sub
sub
or
sbb
dec
xlat
stos
push
mov
fists
outsb
add
lods
sub
add
pop
loope
and
xor
js
xchg
sub
lcall
sahf
jg
xchg
iret
mov
cmp
mov
adc
jno
pushf
jo
arpl
js
pop
enter
cmpl
cmp
xchg
movsl
ret
push
inc
shl
push
and
adcl
xchg
pop
pop
mov
mov
mov
dec
int
int3
movsb
mov
push
add
cs
mov
mov
inc
push
cmp
scas
aas
pop
mov
fstl
ds
movsl
xchg
jbe
push
mov
pop
cmpsb
xor
out
dec
mov
stos
and
push
cmp
or
std
gs
sbb
sub
xchg
loop
fs
test
into
pop
inc
push
or
mov
pop
loopne
imul
adcb
push
mov
shll
gs
mov
jmp
dec
clc
dec
mov
and
push
xor
pop
inc
rcll
or
xor
pop
mov
cltd
insb
lahf
mov
xchg
aad
push
out
nop
sbb
sbb
je
out
lds
dec
and
xor
lcall
in
test
fistpll
pop
push
je
pop
cwtl
aas
shll
mov
and
cltd
xchg
push
pop
imul
inc
cs
insb
es
xlat
xor
pop
stos
iret
insb
sbb
or
push
xor
outsl
cmp
js
cmp
sahf
je
add
scas
mov
call
data16
out
jmp
lret
jno
mov
or
arpl
mov
int
lods
cmp
jnp
push
inc
xor
std
lods
adc
xchg
push
outsb
sbb
sbb
mov
int3
mov
and
imul
sub
add
imul
cmp
sbb
scas
insl
pop
cmpsb
es
lret
sub
mov
dec
call
sti
ss
add
add
add
push
add
add
shlb
sti
ss
add
sti
ss
add
add
jae
cmpl
jne
pushl
push
pushl
push
push
pushl
push
push
call
jmp
xor
movl
cmpl
je
cmpl
jne
pushl
push
pushl
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
or
add
movl
mov
mov
mov
je
mov
xor
sbbl
add
movl
jmp
imul
jno
dec
test
pusha
mov
pop
pushf
dec
out
jle
cmp
or
lret
out
ljmp
mov
push
xchg
inc
aas
daa
push
clc
xor
jecxz
icebp
shlb
jb
jns
repz
mov
insb
xor
and
gs
jge
ret
fdivl
outsb
ret
out
adc
cmp
mov
daa
adc
jmp
pusha
mov
jne
and
cmp
and
pop
jp
mov
out
inc
push
push
inc
jge
adc
or
fimuls
add
and
jmp
add
mov
or
push
lock
cmp
mov
inc
push
pop
mov
lods
mov
dec
mov
cs
mov
xchg
je
inc
pop
pop
push
jl
xor
adc
fists
cltd
and
loopne
stc
stos
sbb
mov
xor
mov
xchg
add
or
push
in
lcall
pop
inc
enter
cmp
das
inc
jl
jae
lret
xor
sub
push
xchg
cmp
push
test
sbb
cmc
ror
jl
pushl
jle
mov
dec
mov
xchg
mov
dec
pop
enter
pop
jge
cmc
fidivrl
mov
rolb
fstpl
pop
cmp
shll
cmpsb
dec
imul
sbb
cmp
out
leave
xchg
aas
jbe
mov
in
cmpsl
inc
lds
fildl
rorb
mov
out
insb
aam
jne
into
fsubp
scas
add
cld
or
or
or
cmpsb
and
sbb
push
push
sbb
cmp
push
sbb
hlt
cmpsb
inc
ja
icebp
enter
sbb
pop
xchg
mov
lock
maxps
mov
mov
mov
and
data16
push
or
test
dec
test
pop
addl
mov
jecxz
cmpsl
daa
xorb
int3
shll
lret
add
stos
call
loope
mov
adc
movl
jne
adcl
pushl
addl
call
sbb
mov
mov
xor
xor
or
mov
mov
xor
addl
add
movl
cmp
movl
je
addl
pushl
xorl
pushl
decl
call
movzwl
sub
jmp
or
and
loopne
shl
sti
and
dec
insb
push
in
jle
cmp
fs
jge
es
xchg
sub
adcb
mov
lret
sub
pop
sbb
arpl
insl
ljmp
repz
adc
imul
inc
mov
cmp
mov
sub
pusha
sub
pop
ret
pop
push
add
in
pushf
pusha
into
cltd
jae
leave
pop
sub
xor
lods
fcomi
mov
push
and
enter
fstpt
pop
ret
test
xor
dec
mov
lret
add
fstpt
ret
xchg
lock
pop
mov
repnz
push
adc
mov
mov
lcall
into
adc
test
mov
jno
jmp
xchg
inc
imull
add
push
lods
cmp
and
ss
push
dec
scas
push
push
or
sub
cmp
daa
adc
imul
xorb
and
jecxz
add
xchg
jb
lret
mov
xchg
xchg
dec
clc
subb
xor
pop
in
fucom
daa
leave
push
push
and
xor
or
out
loop
inc
and
call
inc
dec
popa
ljmp
pop
aaa
sub
movsl
and
xor
mov
pop
stos
push
sub
mov
into
xchg
mov
loop
insl
xchg
scas
notl
pop
lret
add
adc
add
insb
iret
aaa
test
dec
xor
out
ret
shl
add
mov
scas
popf
pop
imul
ss
mov
mov
rorl
add
adc
mov
push
or
incl
rcl
movsb
pop
adc
cmp
lds
xchg
popa
add
in
mov
xor
push
lret
sbb
insl
cmp
or
test
fiadds
mov
pusha
pop
inc
iret
sbb
scas
popa
pop
cmpsb
fistps
movsb
shlb
imul
or
fcmovu
mov
add
ljmp
in
mov
xor
mov
xor
adcl
add
movl
jmp
dec
ret
xchg
push
nop
push
dec
ret
mov
push
aam
shr
jle
cmp
xchg
pop
adc
out
add
sub
add
add
testb
dec
pop
lcall
mov
addr16
in
cmp
cli
lret
xor
lods
add
es
jo
dec
sbb
xchg
out
pop
insb
lea
and
rcl
fists
jle
fsubrl
jns
mov
fs
mov
fimuls
sahf
filds
leave
das
mov
xlat
and
out
xchg
dec
clc
xchg
das
adc
fisttpll
mov
imul
cmp
mov
loopne
inc
mov
xchg
xchg
jnp
dec
push
cmp
adc
cmp
add
ljmp
add
int
popf
push
add
test
push
or
outsl
dec
pop
mov
mov
cs
inc
cmp
and
mov
mov
jmp
sarl
cmp
jae
aad
std
jo
arpl
pop
mov
add
sub
jne
std
cmpsl
adc
jl
loop
and
adc
add
mov
into
add
sbb
repnz
and
adc
push
mov
sbb
das
lret
cmp
outsl
cmp
sahf
imul
push
mov
out
mov
fcomp
shrl
add
add
test
dec
sbb
mov
shlb
sar
sub
mov
xchg
scas
fdivr
enter
push
jecxz
sbb
cld
test
fwait
mov
cmp
js
adc
xchg
stos
pop
in
lods
imull
pop
and
and
cs
inc
push
adc
rcl
movsb
imul
mov
cmp
inc
jmp
sbbl
sub
stos
push
or
daa
cmp
movsb
rol
lret
push
push
jb
xchg
repnz
fdivrs
add
rorl
outsb
std
loope
pop
push
lcall
cmp
push
daa
mov
xlat
jmp
imul
xchg
push
cmp
je
sbbl
mov
andl
xor
or
inc
mov
cmpl
jne
push
push
push
push
call
cmpl
jne
xor
or
inc
mov
cmpl
jb
adcl
jmp
stos
adc
imul
adc
lcall
jle
push
mov
or
dec
sbb
xor
outsl
push
push
insb
xor
insb
lahf
xchg
sbb
in
lods
mov
and
inc
addl
mov
mov
sbb
or
aad
and
in
int
movsl
mov
movsb
jmp
dec
insb
dec
xorb
ret
loop
mov
mov
or
ret
and
pop
iret
int3
aas
imul
enter
inc
or
enter
pop
xchg
xor
ss
inc
out
push
icebp
cmpsb
xchg
push
push
jmp
xchg
nop
or
inc
jl
mov
ret
insb
mov
jae
mov
cs
dec
loop
push
arpl
cmp
inc
loop
imul
mov
jno
adc
jecxz
pop
in
xor
cmp
sub
std
into
or
arpl
shlb
int3
mov
add
pop
filds
lret
inc
dec
sbb
lret
out
xchg
fdivr
push
dec
add
stos
aam
dec
push
xchg
lea
and
add
movsb
sti
pslld
xchg
out
mov
mov
mov
and
jae
lahf
sbb
shrl
into
out
pop
movsl
push
cmp
mov
jp
cwtl
mov
cltd
lock
adc
mov
mov
loop
push
mov
and
inc
pop
repz
in
lret
jbe
cmp
adc
cmp
inc
mov
aad
insl
xor
inc
cs
add
stos
fdivrs
jo
vpcmpeqd
clc
xchg
mov
es
ljmp
mov
xor
lcall
hlt
inc
aas
cmp
push
insb
mov
pop
rcll
sbb
bound
lea
cmpsb
test
and
jecxz
repnz
dec
pop
in
test
fidivrl
or
mov
nop
nop
aaa
cmp
orb
popf
sub
loope
pusha
and
cmp
inc
loopne
inc
jmp
lods
xchg
fnstsw
fsubl
lods
adc
sbb
add
in
mov
notl
add
movzbl
sub
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
xorl
jmp
push
fsubrs
push
pop
stc
mov
idivl
cmp
push
jmp
cmp
jnp
or
stos
loope
int
insb
test
cmpl
pop
hlt
and
mov
jb
push
in
stos
aad
cld
mov
sarl
push
pop
fxch
jno
push
in
cmp
mov
xor
iret
mov
test
cmp
pop
inc
mov
sahf
sub
xchg
or
sbbb
js
stos
cltd
ljmp
in
movsl
pushf
aam
sbb
js
adc
scas
jo
sub
fs
xchg
lahf
sahf
sbb
mov
mov
dec
pop
sti
push
push
incl
xchg
test
jbe
mov
sti
or
lds
pop
add
push
mov
lock
xchg
cmp
je
repnz
xor
ja
ds
cwtl
cwtl
push
jo
dec
or
sbb
insb
mov
cs
cmpsb
gs
int
enter
mov
push
add
sbb
mov
jbe
mov
mov
mov
icebp
adc
mov
enter
and
rorb
notl
jae
popf
cmc
test
in
ret
mov
pushf
jecxz
insb
add
aas
push
sbb
mov
cltd
and
stos
shlb
xor
sbb
mov
orl
xchg
jl
ja
or
pop
fisubrs
in
xor
loop
movhps
jmp
mov
cltd
xchg
pushf
sub
cmp
test
mov
dec
jmp
data16
mov
jg
jno
cld
cmp
aad
xchg
sbb
aas
stos
es
xchg
push
or
jmp
divb
xchg
lcall
ss
iret
cmpsb
gs
dec
xchg
sar
adc
mov
mov
stos
scas
jb
lods
popa
fisttpl
xlat
xchg
imul
fstl
dec
adc
clc
popa
out
cmpsl
mov
inc
sub
inc
lds
ja
pop
stc
xchg
adc
test
arpl
aam
xchg
sub
test
cmp
or
dec
and
pop
add
add
push
clc
jno
jno
pop
repz
push
mov
lcall
jl
jle
dec
roll
inc
add
mov
in
jnp
pushf
lret
add
dec
xor
loope
insl
or
cwtl
cmp
push
in
insb
arpl
jmp
sbb
mov
stos
add
dec
fistps
sti
adc
sbb
inc
sbbl
pusha
and
jb
clc
inc
pop
jle
push
ds
push
in
sbb
jmp
lds
cmpsb
shll
ret
fistpll
jbe
mov
loop
cli
inc
repz
xchg
or
mov
jg
shrb
add
mov
mov
pop
xcrypt-ecb
cmpsl
or
arpl
mov
stos
xchg
jmp
pop
or
test
cmpsb
push
ds
dec
enter
repz
gs
pop
push
mov
sub
lahf
stos
inc
sub
rcl
fmull
mov
jnp
inc
jb
lahf
imul
out
es
jmp
dec
int
xchg
ss
outsl
dec
sbb
pop
sarl
push
inc
and
lea
dec
decl
adc
xor
push
out
and
fdivrl
cmovs
pop
push
and
outsb
clc
push
pop
into
clc
sbb
add
mov
push
mov
xchg
jb
xlat
or
sub
mov
fcoml
dec
out
push
movsb
jl
sarb
xlat
dec
inc
dec
add
and
les
push
inc
push
cli
dec
fs
pop
jo
xchg
lret
adcl
jb
sub
gs
pop
adc
xor
lds
sar
push
xchg
push
or
ss
pusha
aad
mov
popa
add
nop
clc
mov
push
cltd
out
xchg
sub
call
and
lea
popf
lret
imul
adc
stos
push
bound
into
into
mov
jae
cmp
jmp
mov
mov
and
push
test
das
shr
mov
xor
daa
aam
mov
inc
lcall
push
push
jle
cli
mov
mov
mov
add
xor
mov
mov
mov
add
lea
mov
push
jmp
pop
pop
sub
imul
jmp
les
lock
cmp
cmp
cli
push
mov
adc
jne
mov
pop
cld
and
les
pop
xor
sbb
out
adc
test
fldl
or
dec
out
std
and
xor
enter
loope
xchg
mov
adc
ss
dec
ret
mov
insl
shll
out
inc
daa
mov
loope
dec
jl
sbb
adc
push
cmp
sti
repz
cmp
fdivr
das
jnp
push
outsl
in
add
mov
push
dec
sbb
push
jne
xor
cmp
jb
add
cwtl
inc
aas
sub
or
xor
sub
cmpsl
fildll
jp
jecxz
sti
frstor
jno
lds
leave
out
inc
cmpsb
ja,pn
xchg
test
mov
xchg
xor
xor
cmp
inc
sbb
and
loop
shlb
pop
fs
sub
jp
leave
pop
adc
xor
mov
pop
inc
add
sub
cmp
push
outsl
fidivrs
clc
xchg
movl
icebp
fnstenv
lock
or
and
push
adcb
push
imul
pop
jl
cwtl
lea
or
xor
enter
negl
mov
out
inc
pop
jmp
dec
inc
int
shlb
inc
or
in
arpl
repz
sbb
adc
in
cmc
adc
leave
mov
dec
add
lods
jmp
add
inc
les
clc
cld
out
sub
ret
ret
jmp
push
das
outsl
icebp
xor
jl
cmpsb
xchg
mov
repz
xor
mov
leave
and
mov
lods
jbe
stc
push
cmpsl
mov
adc
mov
call
test
subb
call
mov
pop
push
inc
sbb
in
hlt
das
adc
test
cmp
inc
clc
shrb
stc
loope
ret
jp
mov
pop
inc
scas
dec
push
adc
rcl
xchg
mov
jne
pushl
call
mov
mov
xor
add
cmp
jne
jmp
mov
jo
das
pushf
dec
je
push
sub
jle
cmp
mov
push
ds
mov
sarl
loopne,pt
mov
cmp
js
jp
lea
cmp
mov
cltd
repz
push
test
jmp
sub
push
push
outsl
xchg
sbb
addr16
lods
pop
stc
pop
fcmove
or
repnz
orb
xor
enter
push
inc
jle
dec
xlat
sbb
cltd
pop
aad
dec
rcl
aas
dec
mov
cmp
xchg
sub
jno
push
pop
pop
insl
movsb
imul
stos
dec
push
mov
call
aaa
jle
sti
in
test
mov
inc
sbb
jbe
fwait
mov
xchg
iret
in
or
pushf
xor
sti
or
and
sub
push
push
ss
xchg
mov
sub
cltd
stos
popa
int
or
fs
repnz
out
jecxz
xchg
cwtl
lcall
je
mov
jmp
mov
jbe
in
roll
pop
sti
mov
pop
fsubrs
push
iret
shll
loopne
push
idivl
test
bound
cmp
subl
xchg
sub
dec
and
rcr
pusha
xchg
fcoml
jae
shll
xchg
jns
jnp
jns
push
sub
pop
sbb
in
adc
test
cwtl
mov
arpl
out
fnstenv
inc
sub
sub
pop
cmp
popa
xchg
dec
sub
fiadds
out
cld
shr
shl
jg
add
cmp
jg
push
push
call
jecxz
cmp
ficomps
or
leave
inc
jp
inc
movsl
out
in
or
xor
in
orl
into
and
sarl
dec
fildl
movsb
pop
dec
mov
and
jb
xor
or
shl
adc
dec
test
dec
push
cmp
lods
imul
iret
or
jp
dec
mov
mov
push
xchg
je
mov
sahf
out
scas
jbe
test
inc
cmp
jb
jmp
mov
xor
add
jmp
mov
jmp
test
popa
lahf
jno
inc
xor
jo
jl
jle
cmp
std
mov
jno
pop
not
cmp
adc
ja
inc
push
leave
and
mov
int3
in
jnp
lcall
and
adcb
popa
dec
push
mov
mov
push
jmp
pop
das
das
cmpsl
mov
popf
mov
aam
in
cmpb
sub
es
ss
mov
js
jns
inc
lods
or
movsb
cmp
js
imul
mov
stc
or
sahf
push
fisubrl
je
xor
cmp
pop
jle
adc
movsl
lahf
imul
rcrl
addl
repnz
mov
mov
pop
insl
dec
or
jae
add
outsl
mov
sbb
outsb
pop
pop
mov
and
and
jae
arpl
in
sub
sub
xor
jge
std
leave
cmpsl
fsubr
loop
stos
push
imul
stc
leave
fistl
outsl
cltd
add
mov
mov
rcrb
ljmp
and
jle
dec
inc
es
outsb
into
sbb
cmp
imul
lods
mov
lcall
xor
into
stos
pop
pop
jp
ret
mull
and
push
test
sub
mov
daa
or
push
aas
adc
fdivl
cltd
dec
mov
andb
out
imull
testl
icebp
adc
sub
fnstcw
fistps
pop
clc
div
mov
jne
push
push
mov
fwait
jno
sbb
out
push
or
and
sbbb
jmp
nop
push
jbe
sub
sbb
fldl
in
jb
cltd
mov
jle
sub
xchg
in
int
jno
mov
test
pop
loope
xor
clc
xor
pop
mov
popf
sar
xor
mov
adc
daa
dec
out
xchg
adc
adc
in
fbstp
lahf
dec
stc
mov
lcall
pop
lahf
movsb
test
inc
cli
sahf
daa
jo
notl
mov
fidivrl
sub
lods
in
pop
dec
push
xchg
push
jle
movzwl
mov
mov
mov
mov
mov
xor
add
cmp
jne
mov
jmp
into
mov
shlb
stos
mov
popa
je
jo
sti
jle
cmp
jns
push
je
push
push
mov
bound
inc
bound
js
sahf
ret
add
cmp
xor
aad
adc
scas
dec
stos
sbb
imul
lahf
sub
push
roll
cmp
xchg
mov
in
xchg
test
cmpl
push
negl
dec
jno
jge
adc
mov
add
lcall
dec
adc
mov
xchg
and
shlb
repnz
mov
and
mov
out
lret
or
not
js
mov
cwtl
jae
js
arpl
push
mov
jg
stc
fisttps
imul
ja
shlb
add
inc
add
lods
movsl
xchg
pop
int3
fwait
mov
ja
jmp
leave
iret
push
jno
xor
cmp
and
popa
idivl
fdivl
andb
sub
mov
call
sbb
cs
test
clc
sahf
jp
add
cmp
xor
sub
cmpsb
pushf
cmpsl
mov
xor
jg
or
std
imul
xchg
adc
lret
jns
out
and
nop
sub
mov
mov
popa
sti
add
rcr
add
cmpl
cltd
jp
rep
add
dec
push
sbb
sarb
mov
mov
push
sbb
inc
fld
dec
pop
jp
aaa
pop
mov
sahf
mov
xchg
xchg
mov
call
mov
inc
lods
dec
pop
inc
sbb
fdivrs
lods
les
push
push
fsubl
mov
movsb
enter
out
inc
sub
pop
sub
xchg
out
ret
mov
inc
loopne
push
ficoms
mov
add
jns
cmp
stc
adc
xor
lea
push
test
inc
inc
adc
repnz
cmp
faddl
fwait
mov
aaa
push
les
test
repz
clc
shll
lcall
push
or
jmp
mov
add
mov
mov
test
je
mov
push
pop
push
dec
pop
xchg
sub
jmp
pop
jbe
push
scas
or
inc
cmp
jle
jl
jle
push
adc
ss
mov
pop
push
xor
mov
aas
cmp
es
jecxz
out
rol
shll
insb
loop
xor
inc
mov
pop
lahf
sub
or
jecxz
wrmsr
test
jge
jp
dec
xchg
int
gs
ret
scas
sbb
xchg
xor
fists
jge
xor
xor
out
lods
mov
std
pop
push
je
sbb
xor
ret
push
mov
sbb
mov
and
test
cltd
dec
les
mov
push
cmc
andb
pop
popa
mov
dec
mov
mov
out
js
jno
pop
faddp
add
lods
xchg
int
inc
sahf
pop
dec
ljmp
hlt
jmp
sub
lea
loope
dec
pop
sbb
sub
sti
lock
loop
jnp
sahf
mov
xchg
enter
jnp
mov
call
cli
roll
sbb
mov
jg
add
push
aas
mov
shr
mov
mov
insb
mov
subl
data16
faddp
jle
dec
rcrb
inc
pop
shlb
or
mov
jno
xor
and
rcll
push
push
sbb
jb
cs
xchg
adc
jecxz
dec
mov
loope
sub
xor
in
mov
sub
movaps
sub
pop
dec
mov
mov
push
stos
sub
outsl
sbb
jmp
push
ljmp
stos
mov
dec
fisubs
pop
adc
in
repz
rcrb
sbb
dec
aam
aaa
ffreep
push
fidivs
inc
rorb
cmp
aam
push
psrlw
mov
js
and
lret
mov
call
idiv
lds
sub
and
sub
loope
jno
js
mov
imul
nop
jnp
out
repnz
mov
sti
ds
xchg
cs
mov
mov
clts
push
out
mov
push
mov
pop
xchg
dec
mov
imul
sub
mov
jmp
dec
loop
lds
push
jo
mov
sub
or
loopne
xchg
cmp
pop
or
pop
cmpsb
mov
lea
jo
sbb
subb
jle
test
in
xlat
movsl
loop
divl
dec
jl
scas
mov
jg
push
scas
arpl
xchg
sti
jb
sub
mov
add
aam
sub
mov
loopne
and
inc
mov
dec
fisubs
cs
cwtl
sbb
pop
pusha
ljmp
jno
call
out
data16
out
adc
pop
pop
adc
or
fsubr
push
adc
or
jbe
adc
cmp
in
out
push
xor
loop
sbb
push
fcoms
or
cmp
push
lds
lar
sarb
mov
dec
mov
sbb
pop
and
jae
sub
outsl
dec
jg
push
push
push
arpl
sub
in
or
lcall
outsl
testb
scas
mov
sbb
leave
lret
jne
loope
pop
loopne
mov
movsl
xlat
sbb
test
pop
xchg
sbb
les
mov
rclb
fcmovnu
xorl
jnp
cs
ffree
in
popa
in
xchg
in
lods
aam
fwait
aam
iret
sub
pop
mov
jg
js
stos
inc
push
adcb
lods
sbb
xor
push
mov
imul
xlat
xchg
enter
jne
fnstcw
xorb
lret
movsb
xchg
sahf
data16
enter
pop
mov
mov
sbb
add
push
ficomps
jbe
mov
movsb
rorb
add
and
mov
bound
in
out
jg
push
scas
mov
add
loop
push
xor
mov
mov
dec
lret
les
test
nop
push
xchg
into
std
xor
adc
lret
cmpsb
mov
push
je
mov
lods
pop
inc
and
int3
jmp
fwait
cmpsl
mov
cmpsl
add
js
cmpsl
pop
dec
loop
orl
inc
push
mov
fdiv
dec
dec
scas
mov
outsl
stc
mov
jne
mov
cmc
mov
or
xor
mov
add
mov
mov
xor
add
mov
imul
mov
xor
mov
lea
cmp
je
mov
mov
mov
mov
mov
xor
xor
jmp
dec
scas
push
pop
cmc
arpl
pop
clc
push
shr
sbbb
jle
cmp
sbbb
mov
shr
xor
hlt
fsubs
mov
repz
inc
dec
aam
mov
test
fs
jmp
xor
hlt
xchg
cmp
ret
leave
mov
xlat
jns
jns
xchg
xchg
sub
in
sub
inc
mov
dec
pop
push
inc
sbb
insl
rclb
sbb
test
sbb
fmul
daa
ret
cli
roll
enter
dec
xorl
and
cmpsl
push
add
pop
adcb
cld
inc
adc
ds
insb
sbb
shl
mov
sub
gs
xlat
pop
mov
gs
jp
xchg
in
subb
mov
stos
outsb
test
xor
pushf
outsl
fcmovnb
add
xchg
xchg
fldcw
sarb
add
lret
cmpsb
mov
jp
sub
add
and
shl
add
push
push
movsl
adc
std
or
xchg
daa
into
jne
popa
dec
mov
test
fdivl
insl
xor
roll
clc
cli
cmp
or
arpl
inc
xchg
and
inc
or
mov
xorb
cmc
pop
inc
ret
ret
mov
test
cmp
mov
dec
jbe
iret
jb
add
jl
adc
cmc
or
cmp
xor
dec
pop
sub
insl
pop
jnp
push
or
call
loopne
in
aam
xchg
pop
push
fistpl
mov
and
mov
inc
cmpsl
cwtl
mov
pop
xchg
divb
std
pop
repnz
mov
xchg
sbb
xchg
dec
mov
out
mov
mov
ret
pusha
fldt
mov
adc
cmp
xchg
sar
ret
mov
mov
test
fisubrs
iret
push
jb
decb
aad
aam
jecxz
int
lcall
call
fldcw
dec
pop
incl
pop
dec
push
lcall
test
mov
ljmp
xor
push
mov
add
div
mov
xor
lea
mov
mov
mov
mov
mov
xor
lea
mov
mov
jmp
leave
adc
cmp
xor
rcrl
cmp
push
lret
push
xchg
sahf
and
adc
xor
pusha
xchg
fnstcw
dec
aad
movl
cwtl
icebp
push
and
cmp
rorb
add
sbb
cmp
add
mov
pop
adc
dec
fisttpl
mov
cld
add
std
or
mov
cmpsb
xchg
lds
mov
xchg
dec
mov
jecxz
mov
outsb
add
clc
adc
les
iret
jnp
test
xchg
adc
pusha
xor
and
push
outsb
shlb
addr16
sub
xchg
cmp
cmc
rolb
scas
inc
add
out
stc
fildl
stos
jg
icebp
test
push
jno
adc
and
adc
pop
in
push
hlt
jl
shrb
push
out
jb
int3
ficoml
clc
push
xor
sbb
loop
sub
mov
adc
mov
jb
out
jmp
mov
sub
shll
loopne
xchg
int3
xchg
jl
in
add
stos
loope
stos
sub
ljmp
xchg
inc
or
pop
mov
or
sub
push
pusha
insl
sub
es
push
mov
inc
and
imul
xchg
dec
aas
push
ret
enter
cmpl
repz
xchg
test
pop
or
in
test
cmp
dec
mov
mov
popf
or
push
inc
push
fldt
cmp
aam
dec
fs
xor
pushf
nop
mov
cs
rcl
sub
movsl
je
divl
mov
jmp
and
dec
dec
frstor
mov
arpl
in
jp
cs
or
mov
xor
sub
cmpsl
mov
vmread
sub
je
in
add
mov
xchg
stos
out
xlat
or
dec
mov
mov
jle
popa
push
faddl
adc
dec
ss
xchg
or
cmovbe
pop
in
xor
push
cmpsb
push
xchg
push
adc
shr
add
add
mov
cwtl
mov
mov
cmp
gs
cwtl
mov
cmp
sarl
inc
cmpsl
sbb
dec
lock
or
jno
retw
pop
jb
sub
inc
ds
and
in
push
push
lods
test
mov
cmp
pop
xor
jo
out
sub
nop
imul
or
sbb
arpl
inc
dec
in
jecxz
mov
cmc
dec
cmp
lahf
mov
dec
sub
push
loop
jp
aas
scas
jg
sbb
adc
imul
jnp
stos
es
pop
xchg
pop
cmc
mov
lahf
or
adc
cmpsb
insb
add
cmc
push
repnz
sbb
sbb
jle
jae,pt
into
or
fimull
ljmp
scas
mov
repz
sbb
mov
push
ss
js
push
jmp
dec
mov
mov
mov
mov
loopne
fs
fldl
push
fisubs
cltd
enter
movsb
jmp
sarl
jg
icebp
sub
inc
testb
mov
lcall
jmp
fisubl
imul
lret
mov
shll
mov
movsl
xor
fwait
shl
int3
jg
push
xchg
rcl
xchg
xor
repz
loopne
rorb
sahf
mov
mov
jae
and
jecxz
cmpsb
sbb
clc
outsb
jmp
imul
cli
mov
sarb
dec
pop
lods
mov
leave
insw
dec
outsl
xor
mov
bound
jl
sub
fs
sbb
lahf
mov
xor
mov
dec
sbb
or
test
mov
pop
test
fisubs
call
sbb
mov
ficoms
sub
int3
pop
and
cmp
pop
insb
lods
mov
adc
cmp
jp
and
lret
rcrl
lods
int3
insb
xchg
in
and
je
xchg
pop
jecxz
inc
jle
sub
js
xor
push
or
insb
jg
jae
leave
sub
sti
shl
insb
cwtl
mov
mov
scas
add
mov
lea
cmp
jne
mov
jmp
mov
mov
xor
add
mov
xor
lea
add
call
xor
inc
cmp
je
xchg
push
pop
push
pop
inc
xchg
jmp
imul
push
int3
xor
add
adc
cmp
xchg
mov
or
aaa
dec
mov
xchg
sub
imul
inc
and
int3
sahf
inc
popa
sahf
xor
xchg
sahf
iret
and
shrb
movsl
mov
ja
fstl
iret
rcrl
ljmp
repnz
pop
mov
mov
jmp
enter
enter
sti
dec
sub
dec
mov
mov
xor
mov
and
mov
out
and
repnz
mov
lret
shll
lcall
repnz
icebp
lahf
xor
addr16
add
lods
es
ret
test
xchg
xor
push
jl
popf
fisubrs
js
loope
stc
push
insl
div
xor
inc
pop
inc
adc
mov
shrb
sbb
aam
movsb
aad
jl
je
je
data16
adc
fisubl
mov
out
xor
jnp
push
cmpsb
or
mov
push
sbb
shr
xchg
pop
in
xchg
cld
lahf
pop
sbb
sub
pop
xor
add
pop
shr
shlb
push
xchg
fsubrl
or
lret
cwtl
gs
mov
movsl
jno
inc
ss
ljmp
add
add
mov
adcb
push
clc
cmp
das
in
adc
insl
iret
sahf
lret
lcall
pop
scas
xchg
push
shll
add
repnz
movsl
mov
sbb
jne
or
pop
leave
xor
repz
loop
push
std
jge
jbe
adc
test
daa
dec
inc
jecxz
mov
sbb
data16
int
js
xor
out
pusha
jo
repz
cmp
es
dec
jecxz
sti
fs
imull
pusha
repnz
add
jmp
ret
es
sti
decl
pop
mov
outsb
jb
fdivl
enter
loope
popa
mov
clc
jo
lahf
adc
imul
pusha
push
mov
xor
sti
jle
dec
inc
xchg
push
mov
loopne
xorl
jmp
push
std
dec
sahf
push
push
add
sub
push
sub
jle
cmp
lods
and
pop
mov
xor
and
adcb
mov
adc
popf
sub
jne
outsb
mov
sub
aam
jae
pop
daa
sub
insb
pop
int
and
das
inc
push
rorb
sbb
cld
bound
cmpsb
daa
or
cmp
lea
xchg
pop
mov
add
push
xor
je
add
addr16
mov
add
jmp
jnp
rclb
mov
es
push
mov
mov
fistpl
dec
and
sbb
cli
aad
add
movsb
push
or
fs
mov
rep
jbe
in
es
je
inc
push
dec
sub
pusha
idivl
dec
sub
jecxz
gs
shl
arpl
inc
stc
ss
je
xorl
cmp
pushf
hlt
data16
mov
xor
jg
or
xchg
data16
iret
push
xchg
mov
rcrb
or
es
mov
iret
pop
repnz
negl
insl
xchg
or
xlat
jo
xor
adc
sub
mov
push
lock
xchg
mov
jnp
movsl
lods
imul
jnp,pt
adc
cwtl
mov
test
loop
jl
dec
add
repz
adc
add
cmpsl
dec
repnz
dec
movsl
negb
aad
push
call
adc
mov
in
xor
adc
xor
test
sub
mov
inc
mov
cmp
nop
xor
mov
sbb
xor
push
ds
lock
repz
mov
mov
adc
push
add
rcr
and
push
cmpb
push
movb
xchg
ret
mov
mov
repnz
rclb
leave
into
lock
xlat
dec
test
dec
insb
cs
inc
and
out
inc
cmc
fsub
es
in
sbb
adc
loop
cmc
cld
hlt
xor
sti
mov
jle
in
and
lret
add
es
dec
mov
imul
add
xchg
jmp
sahf
testb
push
repz
jae
ficoms
add
pop
testb
jle
repnz
pop
xor
mov
in
shll
push
or
mov
push
rcrl
pop
popf
hlt
int
scas
lock
stos
mov
xlat
sar
repz
cwtl
cmp
mov
sbb
mov
in
bound
cmp
aas
leave
cltd
or
bound
out
sub
and
mov
loopne
imull
and
push
call
sbb
pusha
fsubl
cld
in
out
xchg
or
vpsubq
mov
out
mov
inc
cli
push
das
sbb
icebp
mov
mov
scas
mov
call
dec
and
arpl
js
ret
int3
fwait
adc
xchg
jnp
imul
xor
dec
shr
mov
adc
xor
js
push
stc
test
int3
inc
xchg
pushf
sub
push
fiaddl
xor
push
aam
xor
loop
test
push
lret
daa
cmpsb
ljmp
adcb
dec
mov
inc
jmp
dec
lods
cmp
push
push
ss
push
sarb
shll
jbe
xor
shlb
popa
or
movsb
and
jmp
push
ds
rorl
or
les
push
fildl
add
pop
sub
and
fdivs
inc
adc
mov
mov
push
cli
in
imul
mov
jecxz
sbb
inc
pushf
lret
jge
sbb
movsb
mov
test
enter
push
push
ja
outsb
inc
insl
cmp
mov
inc
pushf
sbb
sbb
iret
mov
in
jl
fsubl
add
in
mov
mov
mov
dec
jl
and
dec
test
stos
leave
imul
push
add
add
nop
mov
pop
cmove
mov
mov
in
test
add
pop
pop
dec
jmp
fistl
jnp
inc
and
lods
insb
mov
jne
push
mov
cli
xchg
enter
fwait
sbb
ljmp
dec
xlat
scas
stc
inc
ljmp
aam
jmp
fwait
push
mov
mov
mov
pop
mov
lret
mov
jle
cmp
push
das
out
mov
dec
cmp
xchg
das
leave
jnp
ret
mov
mov
aam
imul
jnp
out
out
push
cmp
inc
imul
je
call
push
fs
cltd
test
into
loopne
jecxz
cld
loop
push
jo
dec
imul
mov
push
movsl
and
fcmovbe
test
or
sub
fsubr
std
insl
pop
fldl
clc
fimull
cmpsl
push
mov
mov
out
nop
jl
inc
adc
pop
cmp
sarb
fmulp
and
mov
out
pop
cld
fld
dec
movsb
push
add
dec
jb
xchg
pusha
sar
cs
aaa
jmp
pop
xor
test
adc
jb
lret
test
add
gs
sbb
inc
scas
insb
inc
inc
push
scas
push
push
mov
iret
stos
dec
pop
test
mov
push
xor
jecxz
out
add
arpl
cmp
out
mov
or
outsl
mov
push
sti
pop
int3
lea
inc
mov
in
mov
sub
sti
xor
jp
pop
pop
dec
sub
and
jmp
hlt
push
lds
call
hlt
xchg
cmpsl
mov
pop
push
in
stos
pop
and
mov
ret
lea
pusha
mov
push
push
in
out
and
adc
stos
lret
add
sub
in
filds
mov
xchg
xor
cld
adc
mov
nop
sbb
scas
xor
lret
pop
mov
sahf
cmpsl
dec
loope
test
rcrb
push
or
inc
xchg
imul
int
loope
cltd
movsb
mov
call
sub
divb
adc
ffreep
stos
orl
les
or
sarb
jns
lods
push
add
xchg
leavew
sbb
push
and
movsb
pop
xlat
push
out
cmp
jns
mov
movsl
aad
and
aaa
lock
inc
add
dec
xor
add
pop
mov
pop
pop
pop
leave
ret
push
mov
push
not
push
mov
mov
movl
mov
push
movl
mov
movl
mov
push
not
mov
notl
mov
movl
cmp
movl
je
mov
mov
subl
xor
add
movl
cmp
movl
je
andl
mov
inc
mov
cmpl
jne
pushl
call
cmpl
jb
andl
xor
add
inc
mov
cmpl
jne
push
call
cmpl
jb
movzbl
add
mov
mov
xor
add
push
pushl
pushl
mov
call
mov
mov
jmp
mov
jo
adc
sbb
cmc
jp
jle
jl,pt
jle
mov
ja
loope
and
sbbb
cld
clc
loope
adc
push
xchg
mov
jmp
mov
jecxz
mov
repnz
bound
test
insl
add
cmp
adc
pop
adc
sahf
ret
movsb
mov
rorb
sbb
sub
cltd
inc
jle
lock
sbb
inc
push
mov
aam
fistpll
std
push
jno
cmp
aam
fwait
neg
fistpl
jbe
mov
stos
pop
andl
shlb
scas
add
repz
push
mov
jmp
call
fistl
iret
sahf
xor
shl
mov
neg
mov
add
sbb
cs
dec
scas
repz
push
ja
cs
aad
lahf
dec
jnp
sbb
mov
jb
les
stos
jns
mov
inc
sahf
mov
and
sbb
sbb
push
dec
and
xchg
movsl
jmp
sar
push
adc
xor
mov
sbb
mov
scas
hlt
mov
pop
xor
push
add
sahf
add
push
cmc
or
cmc
or
call
pop
insl
cmp
mov
lock
lds
jo
xchg
pop
out
test
fistl
aaa
mov
test
dec
jp
out
jne
int
cmp
jbe
fidivl
dec
jge
push
rolb
ret
popf
popa
and
lea
jmp
in
cmp
cwtl
add
sbb
out
mov
cmpsb
adc
mov
mov
cmp
mov
scas
test
inc
xchg
test
imul
dec
add
adc
ret
cmpsb
xor
inc
lds
or
jge
inc
clc
sub
xor
addr16
cwtl
or
insl
lcall
inc
dec
pop
jb
cmp
pop
or
stos
mov
sbbb
imul
sub
push
cltd
mov
xor
sbbl
loopne
jp
mov
mov
jmp
mov
mov
xor
add
jmp
orl
imul
ret
cmp
jle
pop
push
xchg
inc
dec
sub
dec
in
pop
add
mov
popf
inc
out
ret
adc
sahf
stos
movsl
sbb
push
ljmp
fsubl
ficoms
rol
cmp
dec
iret
dec
std
add
call
outsl
fs
sub
in
dec
jg
cmp
jecxz
out
sahf
cwtl
fxam
jecxz
lcall
repz
mov
xchg
pop
dec
cli
adc
xor
mov
mov
sub
mov
or
push
negb
addl
mov
push
les
push
mov
push
test
pop
lret
repz
cmc
ss
andb
push
mov
test
mov
test
and
or
jnp
adcl
pop
mov
inc
lahf
dec
hlt
scas
adc
add
inc
pop
sbb
faddl
mov
push
mov
dec
test
daa
lea
dec
shrb
adc
das
mov
movsb
aaa
pop
push
in
lods
mov
cmpsl
std
jle
jl
inc
movsl
mov
int
das
data16
jecxz
sti
add
test
mov
xor
sub
sub
dec
adc
mov
cmpsl
and
fcom
pushf
movsl
loop
test
mov
mov
jmp
xchg
fcoms
dec
mov
jp
rolb
dec
mov
clc
popf
push
enter
push
idivb
imul
js
xorl
roll
mov
dec
fmulp
jecxz
fwait
push
mov
and
ss
movb
mov
cmp
sub
cwtl
pop
mov
gs
adc
fwait
insb
dec
push
pop
push
adc
jp
sub
sub
push
outsb
xor
add
xor
or
stc
add
add
xor
inc
push
mov
loop
jg
cwtl
push
call
or
std
and
nop
and
xchg
insl
adc
push
pop
je
push
shrb
scas
fistpll
rorl
addb
add
jmp
mov
loopne
adcl
sahf
jle
jl,pt
jle
inc
sar
dec
out
xor
mov
fildl
jmp
adc
test
xchg
cmp
sbb
lahf
adc
imulb
xchg
add
sahf
add
testb
aas
mov
push
add
add
xor
xchg
aad
stos
aas
jno
mov
mov
push
mov
xchg
jg
mov
inc
mov
xor
loop
cmpb
orb
dec
outsl
xchg
mulb
imull
pop
pop
fwait
mov
dec
rolb
dec
sbb
scas
dec
mov
int3
sub
mov
or
cmpsl
daa
jae
push
xchg
push
adc
mov
xchg
mov
popf
mov
mov
xchg
dec
dec
inc
loop
jge
cmp
cmp
sarb
jo
ja
pop
xor
imul
sub
xchg
in
movsl
fidivl
ficoml
scas
mov
out
stos
filds
cmpsb
xchg
push
xchg
sbb
add
cmpb
mov
dec
popf
mov
sbb
and
xor
mov
dec
aaa
mov
test
das
cmp
scas
test
es
sbb
cmp
xor
lds
dec
xlat
cltd
shll
dec
mov
push
add
ljmp
xorl
mov
lret
popl
and
xor
mov
mov
imul
test
inc
inc
hlt
out
dec
xchg
fwait
enter
sub
ljmp
push
mov
int3
push
sbb
add
pop
or
out
jnp
fidivrs
fucomip
xor
jecxz
mov
testb
or
cld
jo
sbb
out
lods
xlat
fcmovu
dec
xchg
movsb
sub
xor
sahf
jge
in
add
cltd
xlat
cltd
mov
pushl
push
pop
sub
sbb
cmp
in
mov
jge
cmp
test
sti
fcomp
lahf
jb
lcall
xchg
lock
sarb
mov
cmp
mov
xor
add
mov
pushl
pushl
call
mov
xor
pop
add
pop
leave
ret
push
mov
sub
andl
mov
inc
mov
cmpl
jne
pushl
pushl
call
cmpl
jb
xorl
jmp
push
inc
jb
jb
icebp
fisubrs
into
divl
pushf
jle
adc
jle
decb
imul
lock
mov
mov
pop
cmp
sub
jg
pop
in
es
jp
dec
add
out
mov
mov
add
testl
mov
pop
fadds
ss
out
pop
fdivs
adc
fcomps
pop
push
inc
iret
add
out
xorb
lea
movsb
jne
mov
sub
popf
mov
push
inc
call
xchg
xor
test
mov
xor
cmp
and
leave
out
sub
aam
pop
jp
repnz
xchg
shll
xchg
mov
xchg
addr16
aaa
mov
xchg
mov
fnstcw
sti
aaa
int3
pop
jne
arpl
sahf
xor
mov
in
mov
pop
dec
lods
pop
lock
inc
jns
cmp
lahf
jle
xor
mov
or
sub
push
popa
sbbb
add
cltd
test
mov
jl
daa
xlat
sbb
mov
subl
push
subl
push
or
mov
jmp
cmp
shll
xor
stos
mov
popf
jle
adc
jle
or
outsb
mov
daa
jl
cli
pop
jecxz
lcall
ret
es
xchg
add
roll
pusha
and
fisubs
hlt
jp
in
cwtl
mov
sub
cmpl
or
or
inc
dec
mov
and
push
test
out
stos
imul
add
pop
in
imul
outsb
mov
cmp
and
or
inc
scas
xchg
out
mov
aam
lahf
sub
cli
int3
icebp
nop
lods
leave
inc
sti
fstps
pop
jno
negb
or
xorb
fistpll
lret
bound
mov
movsl
cli
mov
imul
pusha
insb
dec
movsl
mov
pop
clc
adc
pop
mov
addb
jg
sbb
lock
ret
pop
pop
add
and
enter
fsts
and
push
push
jle
repz
pop
fs
out
pop
mov
xchg
movsl
pop
out
dec
xlat
xor
adcl
mov
xorl
add
push
jmp
pop
jecxz
call
and
out
andb
jle
jg
jle
xlat
push
jb
mov
fimull
aaa
ret
pusha
ret
mov
and
jne
aas
jge
mov
adc
push
pop
cwtl
test
sub
adc
mov
shlb
adc
arpl
std
scas
movsb
popf
pop
dec
mov
fld
int
out
adc
sbb
imul
bound
mov
fwait
xchg
add
pop
inc
out
mov
sbbb
xchg
xor
test
sub
mov
pop
je
cmpsb
dec
push
mov
sub
or
xlat
jbe
cmc
mov
adc
sbb
push
das
mov
add
outsb
jb
fcomip
test
movsl
jno
or
fstpl
lret
cmpsb
xchg
mov
rcrl
and
outsl
cltd
imul
xchg
inc
outsl
orb
adc
out
out
xchg
or
pop
mull
pop
adc
jg
sbb
mov
in
xorl
jge
incl
xor
addl
movl
movl
decl
add
movl
jmp
cmp
jne
movzbl
mov
mov
movl
mov
movl
mov
movl
mov
movl
mov
movl
jmp
movl
cmp
movl
jne
xorl
andl
mov
addl
sub
xorl
push
sbbl
mov
movl
add
push
call
movl
incl
cmpl
movl
jb
movl
jmp
movl
cmp
movl
jne
movzbl
and
movl
addl
mov
mov
mov
mov
and
jmp
test
test
mov
jo
stc
ret
outsb
or
push
cwtl
jle
adc
jle
jne
or
out
lock
addr16
add
lcall
or
out
mov
cli
rolb
scas
es
xor
push
cmc
addr16
pushf
or
pop
xor
adc
mov
cmpsl
fsub
test
adc
enter
std
jle
mov
sub
lods
es
dec
mov
and
testl
xchg
mov
mov
mov
jl
std
nop
fildl
mov
nop
cmp
lock
ret
add
in
inc
cwtl
inc
mov
outsb
in
xchg
sbb
js
outsb
lret
imul
icebp
in
test
pop
insl
sti
mov
pop
test
les
inc
adc
or
jmp
pop
dec
sti
adc
lock
sub
fnsave
loop
das
mov
jecxz
cli
push
or
xchg
jecxz
push
jmp
int
mov
add
push
movzwl
bound
or
or
cmp
or
jmp
inc
add
movb
sbbl
mov
lea
mov
mov
xor
add
mov
lea
push
mov
xor
add
push
mov
push
pushl
call
jmp
cmp
jne
mov
xor
add
mov
jmp
shlb
sub
adc
mov
adc
jle
jno
xlat
dec
xchg
inc
call
pop
mov
cmp
mov
rorb
inc
cmpsl
ret
ret
xlat
push
fnstcw
dec
xchg
lock
inc
enter
ret
dec
das
inc
jmp
mov
mov
fwait
xchg
sti
inc
jp
or
aam
scas
push
test
divl
mov
sbb
call
shlb
fisubs
fwait
or
add
mov
mov
outsl
xchg
popl
mov
sbb
pushf
or
das
int
stos
xchg
imul
std
sbb
jp
jmp
nop
or
inc
sbb
pop
adc
mov
push
cmp
jecxz
adc
into
out
and
orl
mov
cltd
add
pop
dec
andb
rorb
push
daa
scas
shrl
bound
popa
jae
stc
pop
mov
mov
je
sub
lock
cmp
xchg
iret
aad
mov
shlw
test
divl
cmp
mov
mov
jmp
jb
lods
ljmp
mov
into
cmpsb
jle
adc
jle
xchg
movsl
imul
insb
inc
shrb
ss
lea
jl
mov
mov
dec
ljmp
incb
sahf
pop
sbb
pop
sarb
movsb
jns
adc
push
jae
cltd
xor
push
sbb
fistps
dec
cmp
loope
ljmp
cwtl
add
pop
daa
xor
je
cmp
out
push
mov
mov
icebp
mov
repnz
cs
dec
mov
loop
decl
fldl
xchg
aas
in
pop
data16
fwait
aaa
push
jb
lods
fistpll
mov
add
psubsb
push
imul
cmc
in
xchg
stos
sub
pop
aam
xchg
stos
test
xchg
sbb
cwtl
pop
cmpsl
xchg
movsb
mov
cmp
push
nop
nop
push
fldt
inc
add
push
clc
lret
mov
dec
xchg
mov
dec
outsl
pop
jmp
insl
cs
add
addl
cmp
mov
adc
sub
mov
mov
push
pop
sub
add
mov
mov
xor
lea
cmp
jmp
xor
xchg
das
push
jne
loope
jecxz
loope
inc
jg
loop
jle
adc
jle
cmovb
rorl
push
jo
xchg
cmpb
stos
mov
rcrb
xor
mov
mov
cmp
ds
mov
outsb
adc
push
add
clc
dec
sub
or
repz
mov
cmp
push
or
jg
out
adc
xchg
fimuls
gs
leave
inc
push
dec
cli
loop
pop
inc
fdivrs
addb
loop
movsl
imul
xchg
jo
in
repnz
xor
cmpsl
add
jmp
pop
cwtl
js
repz
and
je
in
and
lcall
call
push
push
ficompl
jbe
les
mov
cld
aas
imul
lahf
ret
std
aas
jo
shl
xchg
arpl
pop
push
mov
bound
fs
jle
mov
pop
mov
stos
inc
sub
incb
push
push
lahf
cli
and
push
xchg
lods
jecxz
cli
cmp
sub
sbb
loopne
test
stc
decl
pop
jmp
movsl
sbb
loope
icebp
mov
jns
add
mov
movsb
jle
adc
jle
add
mov
push
out
scas
or
adc
mov
inc
mov
insb
insb
add
mov
les
xchg
adc
jo
cmp
in
scas
jnp
xchg
lods
je
and
or
sub
push
sub
cmp
cmpsb
icebp
add
pop
outsb
aas
adc
lahf
aaa
sbb
adc
jle
aas
xchg
in
cmp
pop
in
xchg
xlat
in
lcall
jle
mov
sbb
jne
mov
cmpsl
xchg
fsubrs
jno
push
into
je,pt
or
test
mov
adc
inc
cli
or
mov
dec
lret
cmpl
lcall
dec
lfs
mov
push
push
fbstp
sti
andb
dec
push
fcompl
imul
pusha
inc
fisttpll
cld
stc
shlb
and
pop
leave
push
popa
inc
xor
lods
pop
pop
iret
xor
cmp
and
jb
add
cld
insl
loope
popa
sbb
mov
fisttpl
mov
scas
ss
jne
xchg
cmp
arpl
ret
pop
leave
ret
push
mov
push
movl
cmpl
je
cmpl
jne
push
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
movl
cmpl
je
cmpl
jne
pushl
pushl
push
call
mov
dec
mov
jmp
movl
push
movl
sbb
movl
mov
push
add
mov
adc
mov
jmp
imul
mov
jecxz
sbb
jmp
out
movsl
jle
push
jg
jle
push
ret
lret
cmp
gs
mov
add
mov
clc
cli
mov
mov
sub
mov
divl
divl
pop
sbb
jne
mov
push
pusha
ds
mov
mov
js
lahf
movsl
out
out
dec
in
das
pop
in
imul
sbb
and
inc
mov
insl
jo
movsl
inc
fildll
xor
jnp
push
addr16
mov
stc
xchg
int
pop
sahf
insl
push
and
sub
jne
cmpsb
std
inc
mov
mov
pop
push
adc
mov
fmuls
data16
movsl
daa
lcall
dec
xor
and
arpl
sarl
movsl
inc
das
sbb
jecxz
leave
out
aaa
pop
mov
aaa
xchg
sahf
sahf
mov
sub
subb
sar
cmp
or
jae
jmp
sub
mov
gs
inc
mov
mov
inc
popf
aam
clc
cmp
jb
repnz
out
push
fnstenv
out
mov
or
fadd
xchg
hlt
jge
push
int3
jle
cli
sub
sahf
jmp
stc
sbb
jecxz
mov
jle
sbb
mov
cmp
repz
mov
sbb
addl
mov
push
sub
mov
adcl
mov
jne
ror
bound
xchg
dec
sub
mov
outsb
fimuls
addb
in
jo
testb
adc
cmpsb
cmp
push
dec
out
enter
movsl
add
xor
jmp
jmp
ljmp
xchg
shll
fldt
ret
push
aaa
inc
add
repnz
cmpl
je
cmpl
jne
pushl
pushl
push
push
push
call
mov
dec
mov
jmp
mov
add
add
imul
mov
cmp
jne
mov
mov
xor
xor
add
add
imul
jmp
mov
mov
mov
mov
mov
xor
xor
add
add
imul
mov
cmp
mov
je
xor
add
mov
imul
add
mov
jmp
mov
push
jno
mov
ja
sbb
lock
jle
fists
jle
mov
mov
mov
adc
stos
lods
push
loop
enter
cmpsb
push
lahf
jecxz
lahf
sbb
jns
mov
mov
scas
shl
test
cmp
das
dec
dec
shr
push
sti
movsb
cmpsb
lahf
or
aaa
mov
dec
mov
xchg
enter
mov
xchg
sbb
xor
iret
test
stc
aas
xchg
jle
faddl
pop
enter
int3
inc
adc
xlat
pop
les
cli
cmp
fdivr
push
push
push
lcall
fldt
mov
insb
sbb
icebp
fidivs
jne
pop
sub
test
sbb
jmp
add
shlb
mov
jmp
les
push
inc
push
or
xchg
lods
shlb
push
push
mov
aas
icebp
inc
sbb
ficompl
mov
loopne
call
push
jne
dec
pusha
test
testl
lret
les
test
shrl
push
scas
pop
int3
xor
das
aam
adc
rcrl
cmp
pop
lock
jne
cmp
mov
xlat
and
mov
push
lock
lods
test
inc
mov
cwtl
shlb
or
dec
dec
xchg
fnstenv
jecxz
pop
scas
into
mov
push
jg
arpl
cltd
add
jb
jecxz
xchg
mov
gs
cmp
addr16
pop
les
sub
out
jnp
pop
xor
lea
dec
push
ds
pop
lock
inc
test
jnp
jp
dec
cmc
push
data16
inc
jns
mov
insb
out
fisttpll
imul
sub
jge
inc
or
leave
ret
push
mov
push
push
incl
jmp
inc
iret
scas
mov
jno
sub
outsl
ret
jle
jl
jle
sarl
xchg
xchg
mov
scas
movsb
push
jno
mov
jl
mov
enter
push
lea
mov
cmc
cs
aas
adc
fstpl
in
dec
stos
mov
and
inc
mov
dec
xor
xchg
fsubp
xor
jnp
or
idivl
jge
push
lods
cmp
movsl
scas
fdivl
mov
or
jbe
mov
mov
sub
push
pop
sbb
stos
fists
int
loope
inc
loopne
mov
shll
dec
cmpsl
mov
sub
cli
int3
xchg
push
js
jmp
mov
sub
jne
or
adc
in
repnz
adcl
sub
and
sar
fisubl
leave
jne
mov
inc
cmc
inc
push
int3
aad
sbb
sub
lret
cld
leave
and
shll
cli
and
data16
imul
xlat
fsts
insl
pop
inc
add
test
dec
popa
dec
loop
jo
ret
jae,pn
push
fwait
hlt
fwait
xor
leave
push
adc
addr16
stos
cmp
cmpsl
shr
rep
pop
push
cmp
add
pop
popa
xchg
mov
repnz
dec
nopl
adc
test
pop
pop
shll
lods
fucomi
push
xor
shrl
js
mov
jmp
mov
push
shll
push
lds
int3
out
push
adc
mov
xchg
sbb
ficoms
test
lret
or
bound
scas
scas
sti
add
mov
fld1
loopne
adcl
aas
fldt
xchg
push
loopne
adc
mov
push
pop
fwait
insb
insl
cmpsb
fisttps
jge
ret
imul
stos
in
inc
cmc
inc
lea
xor
cmpsb
decb
pop
mov
add
lret
mov
inc
std
data16
mov
data16
jg
aam
sbb
loopne
sub
fildll
je
mov
fsubl
push
dec
ret
jbe
lds
mov
mov
and
test
jge
add
pop
aam
dec
jno
mov
push
push
fcmovnu
xor
shlb
stc
adc
das
lahf
aas
lods
sbb
and
xor
data16
dec
mov
and
addr16
lods
mov
jmp
aaa
mov
and
int3
dec
gs
mov
jo
jecxz
push
mov
xchg
adc
sbb
lds
fstps
push
pop
out
stos
push
push
gs
and
cmp
mov
cmp
sub
lret
filds
cmp
inc
xchg
xor
daa
cmp
add
add
xor
xor
inc
mov
cmpl
jne
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
mov
sub
sub
mov
movl
cmpl
je
cmpl
jne
call
mov
dec
mov
jmp
andl
mov
inc
mov
cmpl
jne
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
andl
mov
inc
mov
cmpl
jne
push
push
push
push
call
cmpl
jb
mov
adc
movl
mov
push
mov
xor
mov
push
mov
add
cmp
je
mov
mov
xor
mov
sub
add
xor
add
cmp
ja
push
jmp
mov
mov
mov
jmp
and
sbb
push
jo
dec
add
ljmp
jle
xor
cmp
sub
test
aad
stos
and
call
mov
ret
mov
test
mov
in
cmp
dec
movsl
inc
cmc
mov
inc
add
ret
cld
loop
cmp
xchg
outsl
ficomps
xchg
aam
mov
mov
inc
sub
and
lcall
ret
insl
lods
mov
sbb
pushf
sti
rcl
sbb
cmp
xacquire
dec
sub
iret
xchg
jbe
push
or
jle
sbb
xor
add
pushf
test
lret
mov
scas
xchg
pop
mov
leave
mov
push
lods
mov
popl
jecxz
cld
inc
pop
fcmovnbe
hlt
ret
xor
mov
aaa
sti
int3
jbe
mov
cwtl
insb
jb
stos
push
sbb
mov
in
add
mov
and
xchg
fdivrl
sti
xor
adc
mov
jne
mov
or
cmp
out
push
push
adc
mov
out
xor
sahf
push
out
aas
test
add
scas
inc
cmp
sbb
pop
add
cwtl
sub
sbb
xchg
shll
cmp
cltd
adc
xlat
pop
or
mov
test
int
sub
in
cli
push
sbb
sub
cli
mov
jnp
cmp
pop
rcrl
shll
or
arpl
mov
leave
call
dec
or
int
out
push
mov
or
xchg
cmp
cld
dec
popf
pop
xchg
sub
push
imul
xchg
leave
je
inc
lahf
mov
sarl
mov
cmp
lret
dec
out
cltd
inc
and
fisttps
sub
cmp
dec
xchg
add
xor
fadd
je
hlt
and
fadds
cltd
jno
add
sub
cmp
sub
push
daa
es
push
std
lock
addr16
fdivr
mov
and
testb
sbb
push
std
cmp
ja
cwtl
mov
pusha
mov
aad
inc
jno
push
aad
pop
sbb
sub
push
xchg
push
out
es
jle
int
push
sti
jb
ja
inc
jb
cmp
notl
xor
xorb
dec
mov
sub
mov
xchg
mov
sbb
push
mov
aam
inc
push
sti
sub
aaa
dec
sbb
xorl
mov
jecxz
ss
xor
loopne
xor
xchg
cs
xchg
sub
adc
mov
fdivl
mov
sub
ror
fidivrs
mov
jnp
push
jle
mov
sbb
add
test
push
mov
std
sahf
dec
and
inc
or
fmull
mov
and
int
or
cmc
jno
inc
fnstenv
decb
cli
mov
xor
add
mov
mov
mov
xor
lea
mov
xor
mov
sub
add
cmp
jmp
andb
in
loope
arpl
adc
scas
shrb
jle
push
sbb
lea
mov
adc
imul
xor
out
cmpsb
jl
add
test
push
out
push
xor
andb
ja
test
xchg
mov
int3
jne
xchg
dec
popa
push
push
mov
popa
sub
pop
stos
call
or
enter
or
jnp
or
adc
decl
mov
adc
and
iret
lods
arpl
fiaddl
mov
push
add
adcl
out
cld
xor
lods
push
repz
stos
dec
insb
fwait
lret
adc
shlb
adc
jl
hlt
push
or
pop
pop
jnp
pop
cld
outsl
sub
mov
pop
test
pop
inc
xchg
test
xchg
mov
and
push
add
jge
mov
dec
pusha
and
sti
mov
les
call
stos
dec
xchg
jmp
pop
std
js
mov
jl
ss
push
xlat
dec
pop
dec
pusha
repz
push
cmp
loopne
out
or
and
in
add
sub
arpl
test
cmp
pop
mov
fisubl
and
lods
cmpsl
sub
insl
jle
dec
imul
fsubrl
sub
cmc
dec
adc
xchg
push
outsb
pop
xchg
testl
xor
cmp
lahf
inc
mov
and
mov
inc
mov
mov
je
cmp
bnd
sub
js
arpl
into
push
jg
mov
imul
dec
scas
gs
push
syscall
sub
xchg
lea
push
sahf
or
add
push
cmp
imul
sub
push
mov
mov
outsb
or
xchg
push
orl
mov
inc
push
addr16
arpl
outsl
cmp
call
mov
rcll
jg
cli
inc
testl
adc
test
popa
pop
dec
lret
jns
nop
imul
lea
sbbl
out
dec
aad
xchg
jae
push
xchg
aas
dec
xor
hlt
xchg
outsl
lds
mov
and
ret
sub
jecxz
dec
sbb
jg
mov
push
in
add
push
push
insb
movsl
vmaxss
rolb
into
lahf
cmp
pushf
sub
jmp
jns
insb
lret
repz
rol
mov
aad
push
mov
mov
pop
mov
fiadds
cltd
lea
imul
jae
ja
push
lcall
adcl
pop
vpshaw
cmc
push
sahf
mov
test
lret
and
cmp
pop
aad
and
adc
mov
shrl
jbe
int3
push
stos
mov
xlat
insb
jae
in
test
xchg
inc
inc
sub
add
adc
test
push
inc
orb
jns
lcall
xor
leave
ret
push
mov
jmp
shll
jno
aad
xor
out
sahf
cmpsl
shlb
jle
imul
adc
ret
shlb
sbb
push
fsubl
aaa
mov
sbb
lods
pop
sti
mov
in
hlt
inc
mov
int
adc
inc
pop
cmp
hlt
flds
mov
xchg
movsl
push
jnp
push
sbb
jecxz
ficompl
add
movsl
cwtl
arpl
mov
push
out
repz
dec
mov
call
sbb
lods
rclb
sub
popa
or
shll
fmul
push
adc
clc
out
pop
std
in
mov
jecxz
cwtl
call
aas
mov
in
pop
sub
cmp
and
dec
and
cmpsb
in
mov
call
and
xor
jbe
stc
test
mov
xor
aad
pop
and
sub
and
jmp
sbb
cmpsb
mov
outsl
mov
ljmp
pop
mov
les
mov
push
and
aad
xor
and
or
xor
xchg
push
add
fildll
call
rorl
adc
fucomip
cs
leave
sub
or
push
dec
sahf
or
mulb
aam
mov
adc
pushf
mov
pandn
dec
mov
xchg
jmp
add
ss
test
jmp
mov
gs
xchg
roll
addr16
ljmp
fld
stos
pop
pop
rcrl
rolb
sub
cs
jg
dec
adc
xchg
dec
lea
sahf
loopne
xchg
daa
push
cmp
pop
in
xor
xor
insl
mov
sub
sbb
lea
xchg
xchg
xchg
dec
sbb
fiaddl
dec
mov
dec
prefetch
or
cmp
push
inc
outsb
cld
cwtl
scas
cmpsl
xchg
push
cmc
fisubs
inc
mov
mov
add
xchg
add
adc
jno
mov
std
insb
jecxz
mov
lcall
negl
aaa
jp
stos
push
mov
clc
push
shr
dec
mov
into
js
mov
sub
xor
cmp
sub
daa
fmull
lcall
les
pop
out
mov
mov
sub
pop
imul
int3
adc
xor
jl
cwtl
mov
ljmp
xor
inc
mov
lret
mov
pop
lahf
mov
arpl
lret
cltd
in
sbb
mov
mov
xchg
push
add
and
pop
jg
push
enter
sub
add
adc
pop
js
or
dec
outsb
xor
xchg
mov
mov
xor
lods
dec
ds
mov
loope
loopne
mov
inc
mov
xor
mov
jmp
or
pop
jno
xchg
add
std
mov
jl
jle
lods
mov
mov
xchg
pop
ja
sub
xchg
movsb
leave
outsb
mov
mov
jle
push
in
fdiv
stos
int3
out
xor
lods
ss
cmp
dec
cwtl
sti
insb
inc
jae
xchg
shr
sbbb
or
loopne
cwtl
lcall
enter
je
and
call
test
xchg
popa
add
sub
sbb
mov
rorb
mov
mov
add
aad
xchg
out
pop
testl
mov
subb
mov
adcb
sbb
jge
fs
mov
cltd
lods
and
mov
inc
mov
scas
es
or
and
add
lods
mov
mov
mov
lods
jns
icebp
or
or
lcall
lret
add
lea
inc
popf
loopne
cmp
jecxz
cld
rclb
jl
or
jbe
mov
stos
movsl
mov
in
ficompl
adc
mov
in
fsubrs
lods
mov
xor
lret
add
pop
sub
mov
sarb
cmpsl
cld
jns
mov
mov
ljmp
mov
fisttpl
movsb
out
sub
xchg
jecxz
or
insb
lds
jg
mov
pop
sub
add
outsb
xchg
data16
sbb
push
into
pop
xchg
cmpb
mov
mov
lods
cltd
je
xor
cmp
cmc
xchg
out
test
jge
mov
rolb
mov
xchg
loope
shrl
popa
xchg
pop
push
inc
xor
push
mov
cli
push
xlat
push
mov
pop
cmc
jmp
sub
adc
xchg
pop
dec
jae
test
into
pop
arpl
jb
outsb
lea
clc
sbb
int3
aas
adc
mov
stos
pop
pop
adcl
and
push
pop
icebp
cmp
daa
mov
and
and
and
insl
call
test
xchg
jg
pop
adc
jmp
add
cmc
mov
mov
mov
inc
push
push
dec
lret
jne
sub
pop
xchg
xor
stos
sub
lods
lahf
pop
xor
mov
mov
push
dec
cmpsl
mov
fwait
cmpsl
jp
adc
push
or
adc
in
cmp
xchg
mov
or
xchg
or
es
cltd
inc
mov
inc
shl
out
mov
jmp
cmc
sti
stos
dec
fistpll
xor
mov
jge
clc
xor
inc
stos
cltd
inc
inc
mov
loop,pn
or
cs
mov
and
or
mov
pop
ret
push
mov
sub
mov
adc
mov
and
mov
xor
sub
mov
orl
add
xorl
movzwl
and
mov
xor
xor
or
movb
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
push
push
pushl
call
cmpl
jne
xor
add
inc
mov
jmp
sbb
lea
mov
mov
mov
subl
xor
xorl
sub
mov
movzwl
sub
movl
movl
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jb
adc
mov
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jne
xor
xor
inc
mov
cmpl
jb
sub
mov
push
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jne
pushl
call
jmp
xor
mov
add
jmp
mov
mov
inc
cmp
jb
mov
mov
xor
add
cmp
je
push
push
mov
mov
xor
mov
add
movzwl
mov
mov
movzwl
xor
add
mov
mov
jmp
cltd
outsb
mov
outsl
or
push
out
sub
das
fdivl
jle
stc
push
js
jge
jbe
mov
inc
mov
pop
imul
mov
aaa
outsl
cltd
jnp
xlat
iret
push
les
xorl
adc
test
inc
and
dec
jg
outsl
sub
iret
sub
cmp
iret
test
mov
mov
ja
fcmovb
sti
scas
nop
pop
neg
ljmp
sarb
xor
fcomps
pop
push
dec
decl
testb
je
outsl
cs
sub
sbb
or
loope
jae
mov
inc
mov
push
int3
xor
push
ret
rcrb
rorl
faddl
out
adc
in
adc
xor
cmc
xchg
lods
fsubrs
iret
jo
shrb
mov
mov
in
sbbb
in
jne
sbb
ja
mov
int3
mov
add
popf
fidivrs
faddp
sub
dec
stos
ret
cmp
outsb
push
pusha
aaa
lods
ja
push
clc
pshufw
in
shlb
xchg
jb
mov
test
into
xor
push
push
and
sbb
and
aad
jbe
lcall
out
stos
mov
aas
push
jecxz
jle
sbb
loopnew
mov
js
sub
rorl
mov
mov
and
sti
xor
cmpsl
xor
repnz
repnz
mov
jae
dec
int3
jg
jl
bound
cmp
dec
sti
xchg
adc
sbb
add
fidivrl
test
int3
out
and
sbb
add
inc
test
jecxz
lret
clc
cmp
xchg
cmp
xchg
mov
mov
add
push
repz
sbb
cmp
andl
in
test
adc
into
push
cmp
jno
or
xor
add
mulb
push
mov
int
mov
jae
lcall
jmp
sbb
inc
je
movsb
dec
enter
xor
jl
imul
dec
jmp
outsl
es
add
and
fstl
dec
mov
sub
dec
mov
pop
sahf
inc
imulb
add
aam
sub
jne
cld
add
call
push
sbb
or
ss
addl
aaa
scas
mov
mov
inc
cmp
jne
pop
pop
mov
mov
xor
jmp
mov
icebp
mov
and
or
jl
jle
push
add
jle
iret
jb
pop
mov
leave
insb
xchg
outsb
iret
mov
adc
pop
or
lret
xchg
jns
aam
mov
mov
sbb
mov
jo
imul
cmpsb
mov
sub
sti
dec
popf
cmpsl
mov
xchg
sbb
dec
and
mov
mov
xor
ret
fnsave
decl
xchg
imulb
out
stc
mov
cli
les
movsb
fs
adc
lgs
mov
cmp
js
scas
nop
insl
stos
mov
in
lcall
add
fisubrl
movsb
mov
sbbl
mov
pop
push
sub
xor
xchg
loopne
add
push
inc
jp
pop
divl
pushf
dec
test
dec
xchg
pop
in
loop
scas
in
inc
dec
push
adc
mov
insb
jo
cld
adc
in
repz
cmpsl
int3
aam
dec
add
clc
xlat
inc
cs
mov
add
mov
push
sbb
xchg
xchg
repz
sbb
out
jmp
xchg
pop
add
adc
pushf
inc
dec
add
ss
sub
fisttpll
in
mov
lds
cmp
pop
adc
jmp
mov
jecxz
les
lea
mov
jp
cmp
adc
and
lahf
jecxz
test
test
inc
aam
jmp
xor
jnp
in
inc
repz
xor
scas
inc
rolb
cmc
filds
jge,pt
orl
xchg
scas
dec
mov
das
or
cmp
mov
mov
lcall
xlat
mov
mov
mov
out
iret
lahf
dec
lds
push
and
adc
int3
or
add
dec
fs
and
fsubrs
push
in
hlt
std
les
add
movsl
jae
test
adc
ficomps
testl
mov
xor
pop
push
inc
fwait
enter
fnstsw
add
mov
out
imulb
pop
xchg
stos
adc
pop
into
cmp
repnz
call
sahf
lods
push
fs
lods
lods
shrb
popa
nop
aas
sub
xor
dec
lock
xor
imul
pop
inc
mov
dec
push
cwtl
das
xlat
push
push
adcl
sub
push
jp
dec
insl
sti
adc
mov
mov
aad
sub
popf
xchg
sub
jmp
add
fdivl
lock
xchg
pop
repz
jl
mov
jle
dec
push
xchg
xchg
lods
push
dec
push
mov
aad
stc
dec
sub
scas
shrl
test
test
adc
ds
inc
xor
and
or
out
inc
fidivrs
dec
inc
addb
xor
call
cmpb
mov
pop
popa
lahf
mov
mov
daa
jnp
push
jp
dec
orl
xorb
dec
outsb
adc
adc
lcall
xchg
fistps
add
fs
pop
dec
push
lcall
sti
cmpsl
cmp
mov
xchg
or
flds
mov
jo
mov
out
bound
incl
addb
cltd
or
mov
cli
fstl
adc
aad
add
xor
out
out
jnp
sbb
pop
lods
mov
fs
or
out
shrl
add
dec
lret
ret
add
aam
out
add
push
and
pop
mov
pop
xchg
push
adc
sahf
mov
mov
push
inc
xchg
ljmp
outsb
sub
mov
hlt
inc
repz
and
xchg
mov
sub
addr16
pop
mov
mov
jnp
mov
mov
test
dec
insb
inc
cld
xor
xlat
pop
fiadds
ficoml
movsl
sti
popf
mov
leave
stc
jae
pop
imulb
jbe
lret
aas
dec
push
scas
adc
ret
inc
mov
std
loop
sti
cltd
popa
imulb
stos
fcomps
insl
ja
sub
mov
cwtl
push
leave
cmp
pop
lods
mov
mov
mov
lea
jno
mov
sahf
jb
lea
ljmp
xchg
add
push
jecxz
data16
inc
push
mov
jl
out
jmp
shll
mov
fwait
pop
out
sub
push
adc
sbb
out
dec
pop
jl
cmpsb
mov
mov
pop
xlat
insb
dec
inc
dec
scas
or
leave
and
pop
mov
mov
adc
xchg
pop
mov
xchg
test
invd
cltd
push
push
inc
mov
loop
fwait
mov
adc
aas
jb
xchg
inc
lock
sub
fisttps
lret
cmc
call
jb
sub
out
inc
imul
mull
xor
cmpsb
cmp
inc
mov
mov
aad
cmp
push
or
lret
or
outsb
out
pop
call
mov
inc
vpsraw
sti
lds
jne
aaa
jmp
mov
mov
jmp
je
push
push
lock
outsb
dec
mov
mov
scas
jl
jle
into
xchg
sbb
dec
xor
mov
mov
xchg
mov
in
mov
fstpt
push
jp
enter
cltd
stos
sbb
fs
ljmp
lret
sub
add
sahf
icebp
mov
xor
push
pop
shll
lret
inc
mov
and
mov
shlb
stos
jae
std
cwtl
lret
mov
ds
out
jo
jnp
xchg
clc
loop
aam
cmpsl
fmuls
ds
lea
dec
je
and
add
push
idiv
je
mov
movl
adc
cs
inc
sarb
ja
xchg
mov
pop
nop
sbb
arpl
insl
sbb
xor
aas
mov
mov
adc
jl
mov
movsb
test
aaa
pop
mov
sahf
notb
insl
pop
mov
daa
mov
and
lret
shr
adc
add
filds
xor
push
call
inc
add
ja
sub
outsl
lret
out
fbld
mov
jmp
push
and
xor
in
jo
stc
repz
add
dec
or
adcl
loopne
ljmp
dec
dec
call
jmp
pop
lds
fdivrl
or
les
mov
sahf
pop
push
pop
iret
cmp
stos
call
rorl
outsl
dec
xchg
aas
adc
and
mov
and
lret
cmp
mov
pop
push
add
cmpsb
jle
cli
cs
insl
pushf
dec
mov
sbb
mov
aam
sub
pop
imull
add
jb
push
ficoms
mov
js
xor
xchg
mov
mov
fs
scas
dec
ret
jne
rolb
repnz
nop
xor
inc
jbe
push
jbe
pop
out
imul
mov
js
push
ror
out
outsl
xor
lcall
icebp
add
push
repz
and
dec
int
sbb
fcomps
outsb
mov
pushf
jns
sbb
or
pop
push
dec
jne
jb
out
sbbb
out
je
not
scas
imul
test
xor
xchg
dec
xchg
rolb
stc
call
ss
xchg
pop
mov
ficoml
testl
pmaddwd
pop
mov
loope
and
test
or
mov
or
stos
xchg
les
lcall
roll
mov
mov
mov
mov
cmp
je
mov
mov
mov
cmp
jne
mov
mov
movsbl
xor
add
cmp
jmp
jmp
push
dec
push
imul
and
loope
aas
stos
mov
inc
jle
scas
jl
jle
xor
fs
cld
std
jmp
rcrb
repnz
lcall
inc
jmp
cltd
sbb
outsb
cmp
push
xchg
fldt
or
pop
and
ficomps
fistps
mov
jno
dec
jmp
xchg
adc
pop
push
mov
lret
in
es
and
inc
cli
insl
aas
inc
rclb
inc
xchg
adc
or
inc
imul
mov
jns
xor
daa
sub
or
out
int
mov
xchg
xchg
insb
jne
cmp
xchg
imul
mov
out
sub
pop
les
add
cli
ljmp
insb
adc
add
xchg
adc
fs
clc
push
dec
sti
inc
mov
sahf
bound
daa
insb
scas
adc
jecxz
push
jp
sub
sbbb
fs
and
sbb
fidivrs
xor
hlt
xchg
push
fmull
daa
mov
jg
mov
scas
iret
icebp
jmp
imul
inc
mov
mov
out
movsb
mov
pop
out
xlat
adc
jp
sub
xor
inc
arpl
or
dec
enter
hlt
daa
jo
jns
cmc
and
jbe
lret
pop
std
add
xchg
or
stos
outsb
orb
cmp
jns
hlt
addr16
inc
rcll
mov
hlt
frstor
lret
cltd
sbb
push
fisttps
dec
das
jns
xchg
pop
dec
js
clc
popa
ficoml
xlat
and
sub
dec
push
adc
push
scas
xor
aas
out
mov
jg
mov
add
mov
stos
inc
mov
mov
mov
icebp
add
cmp
adc
ds
shlb
ret
push
scas
jb
push
test
mov
in
in
loopne
cltd
sti
cmpsb
dec
jmp
iret
out
adc
ljmp
jle
xchg
push
cmpsl
js
push
xor
shr
les
popf
andb
cltd
inc
add
aad
adc
stc
dec
int3
or
aas
dec
ljmp
or
sbb
in
pop
fmul
xor
sub
xchg
push
in
jae
lret
aas
adc
adc
data16
rclb
sbb
xor
cmpsl
xor
inc
insl
mov
cmp
repz
aaa
adc
mov
or
pop
imul
pushf
inc
and
push
adc
in
push
sub
and
test
idivb
divl
fisttpll
into
je
movl
lea
mov
mov
addl
mov
jmp
sub
or
lock
inc
mov
call
jle
scas
jl
jle
xchg
xor
sar
jb
add
loope
insl
pusha
popa
sub
repnz
and
mov
sbb
test
aas
xor
fsts
push
arpl
ds
mov
sub
mov
adc
pop
mov
add
push
hlt
mov
adc
dec
out
ror
mov
lahf
sbb
imul
fsubs
xor
fisubl
cmpsb
jae
cmp
mov
sbb
jmp
and
jp
enter
rcrb
sahf
mov
clc
or
in
dec
cld
sbb
stos
in
adc
and
or
daa
sbb
clc
lea
js
adc
mov
pop
lahf
std
ds
lret
add
stos
jp
add
add
shl
dec
mov
xchg
jge
push
mov
ljmp
cmp
pop
mov
pop
leave
adc
xlat
mov
popl
dec
daa
push
xor
mov
cld
pop
dec
push
jno
bound
pop
into
xor
jns
shrb
and
insl
mov
in
jg
mov
sbb
xchg
sub
and
pop
aaa
bound
push
jge
roll
cmpsl
rcll
cwtl
mov
in
lock
loopne
inc
aam
mov
adc
outsl
les
subps
cld
pop
push
jl
movsb
xor
dec
adc
inc
pop
mov
jno
sahf
out
mov
shll
ds
int3
jmp
imul
cmp
or
ja
cmp
inc
dec
sub
sub
loope
xchg
pop
pusha
lods
ds
dec
idivl
andb
aam
pop
mul
sbb
ljmp
je,pt
addr16
dec
xorl
xor
fisttpl
jmp
jl
fisttpl
xchg
mov
pop
and
push
adc
pusha
rcll
dec
push
outsb
nop
movsl
sub
or
in
ret
sti
cld
and
mov
jg
pop
push
icebp
stc
in
cmpsl
jno
dec
mov
mov
lcall
lods
mov
mov
bound
adc
push
gs
jbe
outsb
sub
jae
push
and
repz
mov
add
jb
pop
push
pop
mov
adc
jp
jl
pop
xor
repz
mov
xor
lea
mov
incl
jmp
mov
xor
mov
add
mov
pop
leave
ret
push
mov
push
movl
jmp
mov
xor
in
leave
outsl
adc
jns
inc
jle
movsb
jg
jle
loope
roll
test
mov
cld
xchg
mov
pop
mov
xlat
lea
sub
mov
testb
loopew
sbb
inc
lret
pushf
adc
shr
cmp
out
cmpsb
inc
add
mov
cmpsl
sub
push
or
jae
leave
testl
pop
xor
cmp
mov
jmp
cwtl
rorl
mov
jbe
and
outsb
pop
sbb
jbe
jbe
mov
cltd
dec
mov
mov
outsl
or
cltd
in
and
dec
adc
aaa
das
jno
mov
xchg
adc
je
in
push
rcr
fs
dec
enter
mov
mov
cmp
aam
inc
loop
js
jg
sub
hlt
push
xchg
dec
lods
outsb
jp
icebp
sub
mov
aaa
lcall
movsl
popf
jne
std
mov
cmp
push
in
mov
scas
mov
into
cld
roll
push
jle
imul
dec
cmpsb
dec
movsl
mov
and
dec
rorl
xchg
push
fcoms
pop
popa
sbb
adc
div
cmp
mov
or
loop
push
mov
shll
sbb
cwtl
push
rorb
xlat
jecxz
loop
dec
bound
out
push
mov
push
jmp
stc
enter
mov
test
push
js
xchg
lret
testb
mov
adc
fiaddl
mov
push
js
add
popa
fmull
mov
inc
add
mov
subl
add
xorl
xor
movl
cmp
jne
and
mov
mov
add
andl
mov
andl
mov
inc
mov
cmpl
jne
push
push
push
push
push
pushl
pushl
pushl
push
pushl
pushl
pushl
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
mov
xor
push
mov
mov
add
cmp
pop
je
mov
jmp
mov
xor
jmp
mov
gs
stos
push
rcrb
jle
jg
jle
mov
dec
xor
lods
inc
mov
sbb
sti
inc
jl
mov
xchg
mov
xchg
rclb
adc
std
lret
sbb
ja
mov
or
jno
xchg
add
lods
sub
mov
out
push
bound
ja
xor
mov
fwait
mov
cltd
jle
into
cmp
pusha
push
ret
bound
insl
test
bound
test
hlt
js
test
xchg
mov
cmp
testl
out
sahf
imul
bound
sbb
scas
and
movb
ret
xor
mov
cmp
xchg
mov
jae
mov
or
fstps
push
stos
cmp
mov
lcall
out
mov
lahf
ljmp
adc
rcll
popf
mull
lret
mov
pop
mov
lods
sub
push
or
add
test
and
sbb
xchg
xchg
push
cs
push
int3
lea
pop
dec
leave
std
fidivrs
jle
xchg
sarl
sub
dec
push
push
pop
xchg
mov
imul
test
lods
mov
mov
imul
js
dec
mov
pop
pop
jne
push
repnz
jb
or
xor
aad
movsb
xchg
scas
inc
lods
xchg
aad
gs
mov
pop
cmpsl
xor
pop
cmp
jae
and
jg
sub
mov
add
jmp
mov
xor
add
leave
ret
sub
add
sub
add
add
dec
sub
add
add
bound
add
insb
sub
add
add
mov
add
xchg
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
add
sub
add
add
dec
sub
add
add
sub
add
add
js
add
xchg
add
nop
sub
add
sub
add
add
shrb
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
add
add
sub
add
add
inc
sub
add
add
sub
add
add
nop
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
add
inc
sub
add
add
bound
add
add
test
add
sub
add
add
sub
add
sub
add
sub
add
sub
add
sub
add
dec
sub
add
je
add
subb
add
sub
add
shrb
add
imulb
add
adc
add
and
add
sub
add
ds
dec
add
pop
add
jo
add
jle
add
mov
add
lcall
add
add
aam
add
fisubrs
add
in
add
add
or
add
and
add
ss
add
dec
das
add
push
das
add
fs
add
js
add
mov
add
pushf
das
add
test
add
mov
das
add
fisubrs
add
repnz
add
das
add
or
add
push
xor
add
xor
add
xor
add
add
bound
add
outsb
xor
add
xor
add
add
mov
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
cmp
add
dec
xor
add
add
push
add
js
add
xchg
xor
add
add
shlb
add
in
add
cld
xor
add
xor
add
add
add
add
inc
xor
add
add
outsb
xor
add
xor
add
add
add
add
out
add
cli
xor
add
xor
add
xor
add
xor
add
add
add
pop
xor
add
add
je
add
xorb
add
add
ret
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
inc
xor
add
add
pop
xor
add
add
xchg
add
add
mov
add
enter
fidivl
add
xor
add
xor
add
add
push
xor
add
dec
xor
add
xor
je
add
mov
add
add
add
mov
xor
add
in
xor
add
adc
add
sub
add
ds
dec
add
pusha
add
insb
add
xorb
add
add
lret
add
add
out
add
add
adc
add
and
add
xor
add
inc
aaa
add
push
aaa
add
pusha
aaa
add
outsb
aaa
add
js
add
mov
add
xchg
aaa
add
test
add
mov
aaa
add
ljmp
add
cmp
add
cmp
add
add
dec
cmp
add
add
jo
add
jle
add
xchg
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
add
add
add
add
popf
dec
dec
add
add
add
add
inc
add
add
add
add
add
add
add
add
add
add
add
add
add
pop
and
add
add
add
lock
add
add
add
outsb
push
popa
addr16
push
js
outsl
ss
je
jo
aas
inc
outsb
gs
je
push
gs
push
inc
inc
pop
inc
push
inc
dec
pop
dec
cmp
add
add
sbb
add
adc
add
add
add
shlb
add
add
add
and
add
mov
add
test
add
scas
xor
add
add
mov
add
add
add
add
and
add
add
add
cmp
add
and
add
mov
add
add
add
sub
add
sub
add
add
dec
sub
add
add
bound
add
insb
sub
add
add
mov
add
xchg
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
add
sub
add
add
dec
sub
add
add
sub
add
add
js
add
xchg
add
nop
sub
add
sub
add
add
shrb
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
add
add
sub
add
add
inc
sub
add
add
sub
add
add
nop
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
add
inc
sub
add
add
bound
add
add
test
add
sub
add
add
sub
add
sub
add
sub
add
sub
add
sub
add
dec
sub
add
je
add
subb
add
sub
add
shrb
add
imulb
add
adc
add
and
add
sub
add
ds
dec
add
pop
add
jo
add
jle
add
mov
add
lcall
add
add
aam
add
fisubrs
add
in
add
add
or
add
and
add
ss
add
dec
das
add
push
das
add
fs
add
js
add
mov
add
pushf
das
add
test
add
mov
das
add
fisubrs
add
repnz
add
das
add
or
add
push
xor
add
xor
add
xor
add
add
bound
add
outsb
xor
add
xor
add
add
mov
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
cmp
add
dec
xor
add
add
push
add
js
add
xchg
xor
add
add
shlb
add
in
add
cld
xor
add
xor
add
add
add
add
inc
xor
add
add
outsb
xor
add
xor
add
add
add
add
out
add
cli
xor
add
xor
add
xor
add
xor
add
add
add
pop
xor
add
add
je
add
xorb
add
add
ret
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
inc
xor
add
add
pop
xor
add
add
xchg
add
add
mov
add
enter
fidivl
add
xor
add
xor
add
add
push
xor
add
dec
xor
add
xor
je
add
mov
add
add
add
mov
xor
add
in
xor
add
adc
add
sub
add
ds
dec
add
pusha
add
insb
add
xorb
add
add
lret
add
add
out
add
add
adc
add
and
add
xor
add
inc
aaa
add
push
aaa
add
pusha
aaa
add
outsb
aaa
add
js
add
mov
add
xchg
aaa
add
test
add
mov
aaa
add
ljmp
add
cmp
add
cmp
add
add
dec
cmp
add
add
jo
add
jle
add
xchg
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
add
add
add
add
add
add
xchg
add
imul
ja
jae
insl
jo
add
add
outsl
outsb
je
outsl
insb
data16
add
outsb
jbe
add
jb
push
jae
jb
arpl
add
add
jb
jo
add
mov
pop
pop
jae
je
popa
jo
pop
je
jo
add
lds
jo
imul
add
outsl
jb
add
data16
outsl
outsl
jb
lods
add
js
imul
add
jo
pop
insw
outsl
fs
xor
je
insb
add
or
je
ja
jo
gs
add
add
jb
arpl
add
pop
pop
arpl
insl
outsl
fs
push
add
imul
addr16
add
xor
arpl
outsl
imul
test
jae
popa
arpl
add
js
imul
pop
popa
insl
jae
pop
gs
je
add
add
arpl
jo
add
xchg
pop
imul
insl
add
outsb
jne
add
add
jb
bound
add
insl
bound
gs
add
sbb
jae
jo
imul
data16
add
pop
pop
arpl
inc
imul
ja
jae
arpl
add
add
js
je
imul
jae
add
call
js
je
add
add
je
add
fadds
jae
je
outsl
arpl
add
gs
jae
jb
popa
je
gs
add
mov
data16
imul
gs
outsl
jb
add
popa
je
insb
add
jb
pop
pop
addr16
popa
imul
sub
arpl
arpl
add
add
insl
outsl
jbe
add
dec
push
push
inc
push
push
cs
insb
add
mov
imul
outsl
ja
jo
popa
je
add
nop
add
arpl
outsl
jo
jo
outsb
jne
add
add
je
jne
jae
jb
mov
imul
popa
bound
add
outsb
fs
gs
popa
addr16
js
xchg
add
je
outsl
jns
arpl
insb
gs
je
jb
popa
bound
adc
inc
gs
outsl
jne
insb
gs
insb
imul
add
mov
imul
jae
bound
mov
dec
outsl
popa
fs
arpl
push
add
bound
jbe
outsb
je
test
fs
imul
add
je
arpl
add
outsb
fs
imul
inc
add
add
je
insb
popa
jae
dec
outsl
outsb
addr16
add
fs
outsb
jo
je
cltd
add
insb
outsl
addr16
outsl
js
outsb
imul
jb
insl
inc
add
jb
outsb
je
inc
add
imul
je
insb
popa
jae
dec
outsl
outsb
addr16
add
outsl
outsb
imul
gs
gs
inc
insb
addr16
jb
jne
dec
je
insl
add
ja
arpl
add
jmp
outsb
dec
outsb
jo
je
gs
je
jo
add
add
je
insb
imul
jb
movsb
add
pop
outsl
outsl
insl
gs
roll
outsb
popa
bound
imul
sub
inc
push
ja
jb
jne
push
add
inc
add
imul
arpl
outsb
add
add
inc
fs
jae
push
imul
arpl
add
icebp
add
jae
dec
gs
popa
addr16
add
out
add
imul
jae
addr16
add
dec
add
je
jb
jo
add
inc
add
outsl
jae
inc
gs
je
jo
add
add
jo
imul
imul
push
imul
popa
jae
inc
add
mov
dec
jae
push
jo
popa
dec
jne
gs
arpl
mov
dec
outsl
popa
fs
insl
popa
addr16
add
sahf
add
push
arpl
jo
jns
mov
push
outsl
push
outsb
imul
add
add
je
gs
popa
addr16
js
jb
dec
outsb
outsw
add
inc
gs
popa
jb
outsb
je
bound
inc
jb
popa
je
push
imul
inc
add
popa
insb
imul
je
add
push
gs
imul
outsb
addr16
add
adc
gs
jae
inc
inc
add
inc
push
dec
outsb
jne
add
add
arpl
outsb
jne
je
insl
add
add
outsb
dec
arpl
add
mov
imul
imul
add
jae
popa
addr16
outsl
js
add
ja
outsb
jne
popa
jb
inc
add
je
outsl
jb
addr16
jne
fs
imul
add
jae
jb
outsb
je
push
add
mov
imul
push
add
je
arpl
insb
insb
push
outsl
jae
add
add
je
jae
outsb
arpl
jns
je
je
add
or
inc
imul
jae
push
outsb
imul
jo
popa
je
push
imul
or
inc
gs
inc
inc
js
stos
add
fs
jne
jae
jb
add
gs
arpl
insb
insb
push
popa
outsb
add
cmp
inc
push
jo
jb
add
fwait
add
insb
outsl
popa
fs
gs
outsl
popa
jb
dec
popa
jns
jne
add
push
add
je
arpl
insb
insb
push
popa
outsb
add
insl
add
je
imul
outsb
addr16
add
addb
outsb
data16
popa
je
push
arpl
add
insl
outsl
jbe
dec
outsb
jne
add
ja
outsb
imul
arpl
das
add
je
arpl
gs
imul
add
insb
outsl
addr16
outsl
js
popa
jb
insl
inc
add
add
popa
insl
gs
arpl
add
inc
imul
jae
popa
addr16
add
xor
inc
push
gs
add
inc
outsl
jb
addr16
jne
fs
imul
add
imul
jne
dec
fs
add
push
add
je
jb
jo
add
dec
add
je
outsb
jne
scas
add
fs
jne
jae
jb
add
push
gs
jns
inc
outsl
insb
outsl
jb
add
xchg
add
outsb
jae
popa
je
inc
arpl
insb
gs
je
jb
add
push
imul
outsl
arpl
add
inc
jb
popa
je
push
outsl
jo
jo
outsb
jne
push
add
je
popa
jb
outsb
je
popf
add
insb
outsl
addr16
outsl
js
popa
jb
insl
push
add
gs
imul
sub
inc
push
ja
jb
add
out
add
imul
jae
addr16
add
jne
inc
gs
imul
js
inc
add
add
je
gs
popa
addr16
add
jb
gs
push
add
push
je
imul
push
push
outsb
outsl
ja
jae
outsb
arpl
add
popa
jb
jo
gs
add
sti
add
dec
outsb
push
arpl
sbb
inc
popa
insb
insb
push
imul
outsl
arpl
lahf
add
jo
je
push
popa
addr16
add
mov
push
popa
bound
fs
gs
dec
jne
push
add
sub
push
outsb
fs
gs
popa
addr16
add
add
je
jo
popa
je
push
outsb
add
mov
ja
je
je
push
add
sub
dec
outsb
jne
push
popa
jb
inc
imul
outsb
jae
add
fs
je
imul
push
gs
arpl
jo
jns
add
inc
jb
popa
je
inc
imul
imul
jb
insl
push
add
cmp
inc
push
jo
jb
jne
push
add
ja
inc
gs
imul
js
dec
outsb
addr16
push
add
xor
jb
outsl
dec
gs
push
add
dec
add
je
outsb
jne
gs
jne
je
je
insl
add
push
push
inc
push
xor
cs
insb
add
push
add
popa
addr16
imul
dec
arpl
push
imul
insl
popa
addr16
imul
je
add
dec
insl
popa
addr16
imul
insb
popa
arpl
arpl
add
add
popa
addr16
imul
ja
add
add
gs
je
push
jb
jo
jb
jns
push
popa
addr16
add
pop
add
outsl
jo
jb
jns
push
add
inc
dec
dec
inc
push
dec
xor
cs
insb
add
mov
inc
jb
popa
je
inc
outsl
insl
jo
je
bound
imul
add
gs
je
push
popa
insb
gs
add
gs
arpl
imul
into
add
insb
arpl
push
arpl
jp
inc
gs
jns
je
insl
push
popa
insb
gs
gs
jae
add
popa
je
inc
jb
jae
dec
outsb
imul
add
je
popa
jo
outsl
fs
pop
add
je
popa
jns
jne
add
add
je
imul
add
jbe
inc
inc
add
pop
add
je
popa
jo
outsl
fs
mov
popa
je
dec
inc
push
add
popa
je
inc
insb
insb
imul
outsb
dec
outsb
imul
add
gs
je
inc
outsl
outsb
je
add
outsb
jae
popa
je
inc
push
je
outsb
outsw
add
out
add
je
popa
insb
gs
gs
outsb
je
imul
gs
imul
outsb
jae
outsl
outsb
inc
js
add
add
jb
je
push
add
je
inc
imul
bound
imul
inc
gs
dec
inc
inc
outsl
insb
outsl
jb
popa
bound
add
gs
outsl
add
clc
add
je
gs
inc
insb
imul
push
popa
je
insb
je
add
inc
imul
test
inc
jb
popa
je
push
outsb
dec
outsb
imul
add
je
gs
inc
js
outsb
je
outsl
imul
aam
push
gs
imul
outsl
jb
add
add
je
dec
push
xor
stos
add
gs
je
push
outsl
insb
jns
outsl
outsb
push
outsb
add
xchg
inc
gs
gs
inc
js
outsb
je
outsl
imul
push
gs
imul
addr16
js
add
popa
je
push
outsb
add
push
imul
dec
jb
inc
js
add
add
arpl
add
mov
push
outsl
insb
jns
outsl
outsb
add
popa
je
push
arpl
outsb
add
gs
inc
js
outsb
je
outsl
imul
jo
inc
fs
outsl
outsb
je
gs
jne
arpl
add
inc
add
je
gs
arpl
popa
jo
add
inc
gs
imul
add
je
gs
dec
jne
push
add
popa
je
push
popa
je
gs
inc
jb
jae
add
into
add
arpl
gs
insb
imul
lds
inc
outsb
jne
inc
outsl
outsb
je
popa
insl
imul
inc
dec
xor
cs
insb
add
inc
outsl
insl
jo
je
jb
popa
insl
gs
add
sbb
dec
popa
outsb
fs
gs
outsl
jne
je
add
add
outsb
inc
imul
jb
popa
je
push
popa
imul
insl
gs
add
and
dec
popa
jo
imul
insb
add
push
gs
push
push
jb
outsl
jb
je
add
bound
inc
gs
je
insl
dec
popa
insl
gs
add
lret
add
inc
popa
fs
gs
fs
je
add
or
inc
gs
arpl
outsl
inc
outsl
outsb
je
outsl
insb
add
inc
imul
add
add
je
outsl
fs
gs
popa
outsb
fs
gs
add
inc
add
outsb
fs
gs
inc
push
dec
outsl
je
imul
outsl
outsb
add
xor
push
push
inc
data16
dec
popa
jae
add
add
je
jb
outsl
jb
je
inc
insb
popa
jae
add
sti
add
je
popa
jae
inc
jb
outsl
jb
add
add
imul
add
lret
add
je
jne
jb
outsb
je
imul
jns
add
mov
inc
jb
inc
imul
dec
push
dec
add
dec
popa
imul
outsw
add
add
gs
je
inc
jbe
outsb
je
add
outsb
add
outsb
fs
gs
jne
arpl
js
add
push
gs
fs
imul
gs
gs
jo
popa
je
inc
add
mov
inc
insb
outsl
bound
inc
insb
insb
outsl
arpl
xchg
add
imul
bound
inc
gs
gs
jo
popa
je
push
add
rolb
inc
jb
popa
je
inc
imul
gs
push
dec
outsl
arpl
add
add
jne
push
gs
jne
arpl
popa
insl
gs
add
repz
je
jne
insb
push
popa
je
dec
popa
insl
gs
add
push
add
insb
gs
imul
jae
gs
push
imul
inc
jb
popa
je
push
gs
outsl
je
push
push
add
jns
inc
gs
gs
imul
inc
gs
gs
inc
jb
je
arpl
push
arpl
outsb
add
add
je
outsl
fs
gs
imul
add
dec
add
jne
jo
outsb
fs
push
add
add
jae
jb
jo
outsb
push
add
add
je
popa
outsb
fs
gs
outsb
outsw
jb
popa
je
outsl
outsb
add
or
dec
outsl
arpl
inc
insb
insb
outsl
arpl
add
inc
gs
push
inc
outsl
outsb
je
js
add
ret
add
insb
push
outsb
ja
outsb
add
je
insl
dec
popa
insl
gs
add
ljmp
insb
gs
je
jb
bound
gs
js
add
inc
add
je
push
popa
je
dec
popa
insl
gs
add
add
popa
jb
push
inc
add
push
gs
imul
jne
push
imul
add
insl
outsl
jbe
inc
imul
jns
add
ret
add
jae
jb
insl
jo
add
dec
add
insb
gs
imul
arpl
inc
imul
cmpsb
add
outsb
arpl
push
popa
imul
insl
gs
dec
inc
push
dec
inc
dec
xor
cs
insb
add
inc
add
je
inc
imul
outsb
jae
outsl
outsb
inc
add
inc
add
je
inc
imul
outsb
jae
outsl
outsb
push
add
push
dec
dec
push
inc
push
dec
cs
insb
add
addr16
pop
dec
popa
jns
push
imul
je
inc
push
insb
pop
add
add
or
inc
add
inc
add
cmp
call
dec
ret
dec
cmp
dec
jp
cmp
dec
ss
add
dec
ret
dec
push
push
pop
push
cmp
dec
ret
dec
cmp
dec
jp
cmp
dec
ss
imul
dec
push
bound
arpl
dec
jns
ret
dec
cmp
dec
dec
dec
xor
ret
dec
push
jb
jae
orl
js
jns
aas
dec
jbe
ret
dec
ds
dec
dec
cmp
dec
xor
dec
push
sbbb
setae
nop
js
jns
aas
dec
jbe
ret
dec
ds
dec
dec
cmp
dec
xor
dec
push
xchg
pop
xchg
bt
mov
aas
dec
push
dec
cmp
dec
push
dec
xor
ret
dec
push
mov
or
aas
dec
push
dec
cmp
dec
pop
dec
cmp
dec
xor
mov
ret
or
js
jns
aas
dec
push
dec
cmp
dec
dec
dec
xor
ret
dec
push
ret
psrlq
sarb
jns
aas
dec
push
dec
cmp
dec
dec
dec
xor
ret
dec
push
rcrb
rorl
jecxz
loopne
lock
aas
dec
insl
dec
ret
dec
cmp
dec
ret
dec
push
loop
jecxz
repz
js
jns
js
jns
ds
jg
ret
dec
cmp
jb
ds
dec
dec
cmp
dec
xor
add
adc
adc
jns
aas
dec
add
mov
cmp
mov
ds
add
add
ds
add
cmp
add
inc
add
cmp
add
mov
inc
add
cmp
inc
add
inc
add
inc
add
cmp
mov
cmp
add
cmp
sbb
inc
add
test
sarb
add
or
inc
add
ss
add
inc
inc
cli
jne
in
incb
mov
cmp
xor
pushf
clc
xor
pushf
clc
cmp
xchg
pushf
clc
aas
xchg
pushf
clc
cmp
pushf
clc
cmp
pushf
clc
in
stc
add
cmp
je
inc
add
imul
pushf
clc
sahf
jmp
add
lods
cmp
pushf
or
addr16
add
adc
add
add
inc
add
imul
dec
add
add
add
inc
add
imul
add
dec
add
add
imul
jo
outsl
add
insl
add
add
insb
add
data16
imul
add
imul
outsl
add
add
push
add
add
add
add
inc
add
dec
add
imul
add
dec
add
add
insb
add
insb
add
add
dec
add
inc
add
imul
push
add
imul
add
add
imul
add
imul
add
add
dec
inc
dec
dec
push
fs
dec
dec
imul
push
inc
outsl
imul
data16
push
imul
add
add
add
add
inc
add
pop
dec
dec
dec
push
dec
pop
dec
push
dec
or
dec
add
pop
dec
pop
dec
pop
dec
or
dec
dec
dec
dec
dec
pop
dec
dec
dec
or
dec
add
dec
dec
pop
dec
push
dec
dec
dec
arpl
dec
pop
dec
ret
add
add
outsb
lea
outsb
lods
outsb
mov
outsb
in
outsb
std
outsb
or
outsb
cmp
outsb
jb
jae
jo
jno
jbe
ja
je
jne
mov
outsb
mov
outsb
mov
pop
jge
jge
jge
jns
mov
bound
add
mov
aaa
dec
jle
jno
mov
imul
inc
xlat
rcll
rcr
leave
xchg
fs
push
rcrl
shll
add
add
or
add
shll
and
inc
push
outsl
push
mov
cmp
add
add
add
popa
push
push
push
dec
je
push
jne
popa
jns
pop
je
push
jp
jp
js
imul
push
dec
dec
outsb
push
pop
dec
dec
dec
dec
je
add
add
insl
push
dec
jne
outsb
imul
pop
outsb
jbe
jns
dec
je
bound
push
arpl
push
imul
add
inc
jne
push
outsl
push
inc
inc
push
imul
push
jb
add
insb
jb
inc
push
push
inc
insb
inc
inc
jae
dec
inc
jo
data16
jp
insb
je
jns
popa
push
push
push
dec
imul
inc
jp
pop
inc
jae
dec
dec
gs
jne
add
cmc
jnp
jnp
cmc
lcall
and
test
repnz
add
mov
je
pop
addr16
dec
xor
sub
arpl
imul
pop
sub
loope
leave
daa
mov
xor
jns
hlt
mov
xchg
lret
stos
push
movsb
push
testb
mov
xchg
dec
mov
lods
inc
sub
stc
addr16
enter
jb
jl
adc
mov
lret
xchg
adc
scas
xchg
cltd
into
leave
test
push
mov
addb
mov
add
mov
jl
mov
mov
in
jge
xlat
out
and
dec
lcall
sbbb
mov
idivb
popa
push
mov
fdivl
rcll
sub
out
sbb
cmp
add
pop
mov
sub
add
xor
dec
in
jnp,pn
cltd
pop
pushf
test
xor
and
inc
lcall
xchg
push
xchg
negl
bound
sbb
add
pop
ficoml
in
jle
lcall
and
add
and
add
loop
rolb
imul
cwtl
jg
sub
out
frstor
push
mov
inc
xchg
xor
imul
pop
xor
enter
lds
push
xor
je
inc
mov
imul
or
test
sub
rcl
push
leave
push
out
lret
mov
inc
rcrl
fsubrs
dec
mov
mov
jnp
and
xor
adc
sarl
les
cmp
bound
sub
scas
mov
movsb
into
adc
sub
sbbl
pop
xor
or
mov
xchg
pop
jl
xchg
ja
sub
adc
movsb
scas
add
mov
lock
fdivrl
out
arpl
xchg
fbstp
int3
fdivp
mov
mov
jle
enter
mov
dec
add
add
adc
mov
mov
push
mov
roll
add
sbb
dec
in
adc
mov
push
aas
imul
cwtl
aad
sbb
in
jg
stos
inc
xor
insb
aam
je
testl
fidivs
xchg
pop
add
mov
out
mov
push
ret
hlt
insb
fidivrs
xor
imul
pop
jg
add
cmp
in
inc
xor
add
js
lea
in
pop
jnp
add
jl
sub
pushf
aam
and
pop
mov
pop
sbb
out
lret
push
repnz
stos
cmpsl
jl
hlt
in
andl
mov
xor
frstor
dec
xchg
inc
cmp
call
cs
xchg
flds
jp
xchg
mov
fidivrs
push
mov
xchg
sbb
mov
stc
push
clc
xchg
xchg
cmp
push
ret
jge
dec
outsb
and
pop
and
sbb
jo
or
add
subl
roll
inc
push
and
jmp
add
add
mov
sbb
push
cmp
or
stos
cmpsb
mov
in
dec
sbb
jg
lahf
add
int
cmp
das
fistpl
inc
lret
pop
sar
enter
xchg
ret
push
cmp
sbb
sarb
jns
push
and
popa
lods
or
dec
scas
cmp
push
add
xchg
sti
out
lret
sub
cs
cmp
pop
push
shlb
jp
mov
or
xchg
lret
ljmp
jne
and
rcll
popa
notb
mov
std
pushf
shrb
movsb
addr16
inc
mov
movsb
jp
dec
rcrl
jmp
repz
popf
xor
jns
stos
jbe
mov
lret
cmp
xor
nop
jg
mov
push
adc
mov
insb
aas
in
les
call
insl
or
sbb
cmp
xor
add
stos
rcr
cld
and
in
add
add
inc
or
pop
dec
or
jb
aas
lock
add
ret
fpatan
fdivrl
sub
loop
dec
cmp
pop
xor
daa
flds
and
jmp
sbb
cmpsb
mov
ficompl
popa
scas
add
fisubl
out
mov
enter
stc
inc
out
inc
inc
jae
inc
pusha
scas
data16
push
fildl
fsubrp
dec
daa
into
loop
stc
repnz
out
dec
fistps
cmpsl
xchg
dec
int3
jae
or
push
xor
clc
adc
sub
push
inc
add
testl
pop
mov
dec
out
outsb
ret
inc
lods
pushf
jp
lock
dec
dec
and
sub
push
dec
pusha
adc
repnz
push
sub
ret
add
pop
ja
aad
fwait
cli
loopne
repz
lods
inc
ljmp
aam
mov
jne
ficomps
sbb
shlb
and
daa
dec
or
xor
imul
add
jg
cmc
insl
cmc
out
lcall
enter
mulb
cmc
add
add
movsl
sub
pop
jne
push
sub
mov
push
ds
mov
in
dec
or
cmp
sbb
pusha
push
sti
out
dec
aad
pop
cmpsl
mov
mov
daa
pusha
sub
sahf
xor
inc
push
les
mov
testl
inc
xchg
mov
xchg
clc
test
lret
xchg
sub
sbb
pop
aas
imul
pop
sti
mov
outsl
or
xchg
jl
pop
xchg
adc
xorl
movsb
test
scas
jge
or
jle
add
ss
shll
addr16
outsl
or
xor
movsb
mov
aam
rep
ret
cs
scas
xchg
jnp
inc
mov
push
and
sub
addr16
fcompl
and
cwtl
outsb
pop
xchg
iret
xchg
sarb
xchg
and
gs
inc
lods
inc
inc
cmp
test
adcl
sub
inc
mov
jne
dec
lcall
add
add
outsl
jle
aas
mov
cmp
cli
xlat
add
add
int
ja
xor
stos
es
fucomi
mov
xchg
push
push
arpl
iret
xor
xchg
pop
dec
adc
scas
pushf
mov
std
and
or
sti
sub
xor
cmp
fs
imul
repnz
not
xchg
std
cli
xchg
pop
jne
fsubrs
sbb
jge
int
fstp
jae
mov
push
push
push
shll
cmp
stos
ds
ret
inc
xchg
pushf
adc
mov
mov
sbb
call
pop
pop
test
cld
pop
fidivrs
jp
pop
scas
movsl
pop
test
cmp
mov
roll
mov
dec
fidivrl
and
insl
daa
clc
bound
inc
repnz
shl
xor
sbb
mov
mov
pusha
ljmp
shl
lret
out
insb
leave
cmp
es
xor
cli
leave
insb
add
add
jle
and
scas
sti
jle
pop
push
pop
or
fadds
add
rcrl
repnz
sub
inc
or
and
neg
xchg
inc
mov
cmp
or
sti
mov
jge
in
rorb
dec
xor
mov
repz
xor
push
xchg
cmp
xor
fimull
inc
inc
xchg
imul
imul
cmc
mov
fdivrl
xorb
jecxz
call
mov
leave
out
push
addr16
jo
dec
sub
scas
cmp
decb
dec
cltd
lcall
cmpsl
sahf
add
and
pop
cmp
jp
cwtl
mov
rorb
clc
mov
inc
dec
cmpsl
pop
loope
fcomps
sahf
movsl
jmp
sbb
mov
sbb
dec
jle
fisubrl
fmull
dec
jmp
ror
and
decl
imul
and
and
add
adc
pop
and
jbe
lods
fstpt
ret
sbb
out
xor
inc
push
adc
add
lahf
fnstcw
ss
lahf
stc
bound
mov
add
add
add
aad
inc
lods
pusha
rol
dec
add
jne
jge
pop
mov
fnstsw
mov
js
push
lock
ret
lock
fstpl
push
sub
cmp
clc
test
push
lahf
daa
imul
pop
cmpsl
push
das
fwait
pop
mov
add
loope
aas
cwtl
aam
outsl
mov
sbb
test
pop
into
sbb
mov
and
lods
dec
sbb
xor
jno
movl
sub
push
jp
jle
xchg
xchg
mov
into
jmp
push
or
es
add
lea
xlat
bound
bnd
jle
ds
in
das
popa
pop
cmp
test
flds
push
popa
test
dec
push
xchg
ja
inc
stos
in
xor
xchg
popf
loopne
cli
lcall
inc
and
xor
inc
into
push
icebp
or
xor
pop
mov
stos
push
xchg
add
xor
push
jl
jle
insb
out
adc
sbb
add
in
or
cltd
aaa
lods
daa
mov
in
jnp
dec
roll
roll
mov
xchg
or
addl
dec
mov
jae
pop
mov
mov
popa
xor
sbb
lods
in
test
adc
clc
repnz
cwtl
cmp
scas
sbb
mov
mov
lret
outsb
xlat
shrb
sbb
dec
dec
scas
test
sbb
popa
fsubl
cmp
push
inc
jge
cmp
dec
inc
and
scas
jns
xchg
inc
add
mov
sbb
stos
jbe
enter
mov
inc
cmp
mov
imul
xchg
dec
dec
mov
jno
sub
in
fstpl
add
lcall
xor
jns
push
arpl
jmp
jle
push
test
and
stc
xchg
adc
xchg
sahf
xchg
and
push
inc
cmpsb
mov
div
add
add
fwait
mov
in
xor
adc
push
faddl
add
scas
push
mulb
mov
test
icebp
testl
enter
and
lods
mov
xchg
inc
scas
fs
rolb
push
mov
pop
push
fisttps
jns
repz
fiadds
fdivrl
cmp
mov
mov
rcrl
xchg
sbb
mov
insb
jb
add
int
add
xor
mov
repnz
popf
pusha
je
mov
add
outsl
pusha
jle
rcrb
imul
stc
insl
imul
cmp
add
cli
fisttpl
jp
sahf
xchg
das
ds
mov
push
and
lock
sub
clc
mov
inc
das
in
or
pop
and
pop
mov
je
add
jg
mov
in
nop
fidivrs
add
imul
jmp
pusha
repz
ret
push
hlt
ror
dec
test
outsl
ds
cmp
add
add
data16
jne
mov
lcall
add
add
push
pop
inc
ja
popf
mov
ret
add
inc
xor
in
out
push
cmp
std
aas
mov
out
cmpl
xchg
mulb
push
adc
sbb
push
in
in
loope
push
mov
or
aad
sti
push
pop
xor
dec
out
mov
pushf
xor
popa
sbb
sbb
popa
jmp
xchg
or
sub
push
out
mov
outsl
and
cmpsl
mov
mov
popf
daa
pop
movsl
out
addr16
xchg
sarb
and
inc
pop
out
loope
or
cs
cmp
inc
rolb
imul
dec
call
in
pop
sbb
jle
sub
inc
lret
aas
aaa
test
push
adc
adc
out
and
pop
bound
sub
sub
nop
std
dec
xor
mov
add
lods
jno
adc
jnp
or
push
sub
add
jnp
add
jnp
sti
xchg
lahf
mov
sub
sbb
add
add
jecxz
or
clc
stc
or
mov
in
rol
mov
xchg
int
out
repnz
or
xor
insl
mov
xorl
enter
mov
int3
jge
pop
ss
test
sbb
idivb
inc
in
gs
in
lret
push
cmp
test
xchg
stos
push
int
orl
mov
ja
pushf
sbb
inc
mov
push
xchg
arpl
sub
mov
push
fistps
sbb
ret
iret
stos
stos
out
out
out
test
pushf
out
dec
lret
xor
neg
iret
cwtl
dec
sub
add
jo
xchg
mov
in
das
adc
shrb
mov
sub
mov
test
seta
jb
into
sarl
sub
push
arpl
mov
and
fisttps
jne
scas
mov
and
add
sub
pop
sarl
mov
xor
filds
add
mov
loopne
int
movsb
pop
inc
sub
andb
hlt
and
aaa
mov
or
cli
arpl
aam
xchg
push
pop
arpl
xor
pop
arpl
add
imul
sbb
mov
pusha
aas
pop
sarl
or
or
mov
andl
xor
popa
mov
lds
sbb
add
sbb
inc
and
cmpsb
cmp
es
sub
test
loope
aaa
inc
push
xchg
inc
push
sti
mov
lds
cmp
mov
jmp
xlat
inc
popf
xchg
mov
je
push
in
stos
scas
cmp
dec
mov
mov
and
or
adc
scas
out
adc
addb
jle
or
out
push
jo
ret
cmpsl
xor
add
lret
data16
adc
loope
insl
add
add
repz
std
repz
loopne
pop
and
add
add
int
sub
sti
pop
in
sub
add
xchg
xchg
push
pushf
rcrl
jns
pop
stc
and
jns
cmp
lret
je
inc
icebp
lods
inc
fiadds
adc
pop
mov
or
sbb
repz
jne
cmp
popl
rcrl
test
mov
fnstsw
mov
loop
and
flds
xor
push
jecxz
sbb
sub
cmc
test
into
jmp
loopne,pt
ss
sbb
rcrb
cmpsb
bound
pop
outsl
jp
jb
imul
xor
xlat
rcll
fidivrl
divb
or
sub
xor
aaa
inc
subb
iret
into
repnz
mov
lods
mov
jnp
jg
pop
pop
push
int3
lods
sbb
xor
ret
aaa
inc
test
adc
das
fiaddl
scas
xchg
loop
cmp
mov
nop
cmpsb
dec
mov
add
lock
cmp
arpl
je
mulps
add
fwait
add
mov
jb
mov
add
adc
pop
dec
dec
fisubl
pop
out
hlt
orl
je
lock
jmp
cmp
fs
movsb
mov
cvtps2pi
or
sub
into
subl
sahf
sbb
int
mov
das
mov
or
mov
cwtl
mov
aaa
inc
jb
add
outsl
fwait
in
xchg
and
xchg
popa
jns
cmp
push
ds
inc
daa
add
dec
hlt
push
adc
adc
mov
lea
push
lcall
sub
push
mov
test
mov
jmp
inc
xchg
loope
or
jp
inc
icebp
int
shrl
cmc
adc
das
std
mov
xor
dec
jns
inc
pop
jb
out
xchg
jmp
xchg
mov
mov
and
shll
add
add
mov
mov
sti
xchg
mov
sub
add
add
lret
bound
mov
loop
mov
xor
ljmp
lods
dec
sbb
sbb
test
mov
ret
pop
ja
ss
mov
in
mov
pop
xor
push
xchg
jne
sub
fld
test
xor
dec
jo
mov
adc
stc
aad
sbb
adc
mov
mov
ljmp
bound
jmp
add
ljmp
hlt
xchg
jne
adc
gs
jnp
adc
jecxz
daa
stc
les
mov
mov
cmp
daa
ret
cmc
and
outsb
cmpsl
fisubrs
and
mov
lea
aam
add
mov
test
jge
mov
fldcw
xchg
cs
popa
adc
icebp
pop
dec
movsb
mov
aad
mov
mov
add
lret
xchg
in
mov
incl
rcl
or
xor
add
add
stc
pushf
inc
jo
mov
inc
add
sbb
enter
sbb
pop
and
pop
lret
and
xchg
cmp
aaa
or
and
bound
fidivrs
push
adc
in
fwait
test
mov
xor
or
das
mov
mov
mov
push
sti
sub
jnp
push
adc
mov
jbe
enter
sbb
add
dec
and
outsl
pop
xchg
in
ror
or
movsb
sub
mov
int3
addr16
xor
inc
clc
jl
mov
jb
enter
add
add
cmp
aas
mov
xchg
cmp
pop
adc
add
ds
lcall
add
bound
push
add
push
ds
pop
mov
push
mov
leave
std
mov
add
ja
call
push
add
add
sub
in
negl
sub
movsb
inc
sbb
insb
ss
add
pusha
sub
mov
pop
xchg
push
test
ret
pop
scas
test
rorb
int3
je
inc
fxch
mov
sub
mov
ja
jb
shll
popf
mov
sub
aad
adc
fs
or
lea
and
mov
pop
add
out
vandps
lret
cltd
mov
xchg
addb
mov
inc
test
call
loope
mov
inc
xor
mov
clc
sbb
jo
xor
sub
rcl
stc
cmp
and
andb
pop
out
push
mov
push
jbe
push
mov
scas
sub
pop
cmc
sar
dec
loopne
xchg
in
push
shl
lds
incb
jge
pop
mov
loopne
dec
pop
dec
sbbl
ljmp
or
pop
sahf
mov
cmp
popf
push
push
ja
mov
bound
call
mov
inc
add
add
mov
stc
dec
push
fmull
arpl
in
add
testb
bnd
lds
rorb
lar
les
in
stos
in
mov
nop
jmp
push
add
mov
sar
das
addr16
inc
vorps
push
mov
lock
xlat
mov
int3
in
cld
jb
lret
sbb
or
sub
mov
jecxz
dec
cmp
outsl
jecxz
stc
test
adc
mov
adcl
nop
pop
insl
rcr
xchg
arpl
xor
sbb
cld
mov
adc
std
dec
loope
dec
cmp
inc
jnp
inc
xchg
mov
pusha
jnp
movsb
mov
xlat
jg
imul
push
pop
pop
jo
fucomi
or
scas
push
or
lods
lods
jne
cld
jge
in
xor
mov
mov
rcrl
xor
dec
cmc
jecxz
aam
xor
xor
xchg
cli
push
dec
ficomps
add
add
adc
push
push
push
mov
inc
inc
out
add
insb
lds
lods
push
mov
dec
xor
and
jl
lea
enter
clc
je
orl
mov
lea
cmpsb
popf
aad
fdivs
xchg
stos
jg
dec
inc
arpl
cmp
cli
and
lea
pop
data16
jno
and
adc
sbb
fbld
pop
mov
xchg
je
stos
dec
aas
push
pop
fcomp
sbb
imul
mov
test
loop
add
jle
and
shll
sbb
test
jmp
jmp
clc
mov
pusha
add
push
das
jmp
mov
xchg
mov
dec
adcl
rcr
xchg
push
lods
jg
cmpsb
ljmp
stos
sbb
and
scas
scas
xchg
js
mov
fcmovbe
mov
xor
iret
hlt
loopne
xlat
rcl
outsl
sti
ret
mov
pop
add
sbb
add
out
repnz
add
pop
lcall
les
xchg
in
xor
out
add
das
mov
arpl
pop
inc
movsl
cmpsb
push
fbstp
dec
hlt
enter
mov
cmp
push
addb
leave
cmp
dec
test
mov
fwait
ljmp
data16
mov
push
sti
xchg
jmp
test
fst
mov
sbb
outsb
inc
add
cmp
outsl
subb
bswap
inc
les
into
push
push
mov
or
cmp
push
call
hlt
push
and
push
pop
dec
aad
adc
aam
scas
pop
cwtl
loopne
bound
lcall
xchg
sti
in
mov
cmp
imul
xchg
out
inc
adc
int
cmp
aas
daa
or
mov
les
mov
je
fwait
dec
xchg
add
add
xchg
outsb
fisubl
outsl
test
push
xor
sub
jae
cmp
jae
les
add
mov
push
decl
jg
into
cmovp
add
add
jg
loopne
dec
lock
xchg
in
insb
push
fwait
and
aam
int3
and
daa
adc
push
cmpsl
in
inc
fdiv
scas
cwtl
inc
sbb
jb
jae
or
lret
pop
add
xchg
mov
add
jmp
cmp
inc
xchg
mov
aaa
jle
incb
xlat
aas
movsb
out
movzwl
jo
jg
mov
mov
ss
inc
adc
cmp
bound
add
cwtl
mov
push
sub
mov
ds
jmp
mov
push
xor
dec
aam
mov
inc
sbb
xchg
jle
push
fadd
dec
push
mov
mov
mov
data16
push
add
daa
push
iret
pushf
test
test
shrb
mov
jmp
mov
test
xchg
adc
testl
inc
push
dec
sub
insl
pop
pop
add
aas
cmp
mov
mov
popf
arpl
add
and
cmp
sti
fsubp
inc
push
sub
dec
dec
jmp
add
mov
out
jl
ljmp
xchg
jnp
cltd
sub
jb
push
sub
stos
aaa
cmp
test
xchg
mov
xchg
sub
movzwl
adc
loop
sbb
lods
arpl
dec
incl
in
loope
fisttps
mov
test
xlat
pop
arpl
mov
xchg
or
mov
popa
loop
xchg
xchg
xchg
in
sbbb
dec
ja
xchg
sub
int
dec
inc
xchg
mov
mov
call
icebp
pop
rol
ja
cmc
and
inc
in
aad
rcrb
mov
pop
dec
lahf
lcall
adc
cmpsb
mov
pop
movsl
divl
inc
cmp
scas
hlt
jno
scas
int3
shr
xchg
sbb
loop
push
scas
xchg
push
repnz
adc
xchg
lea
adc
fdivrl
mov
pusha
fisttpl
loop
jno
cs
clc
sub
mov
push
idivl
adc
add
and
and
mov
lcall
ljmp
icebp
and
pop
xor
and
cwtl
cwtl
xor
or
enter
popf
and
cltd
pop
sub
sub
adc
xchg
mov
lds
fcompl
add
shlb
pop
pop
cld
leave
rol
pusha
jecxz
cmp
dec
push
or
push
loop
adc
into
ljmp
jae
insl
cld
dec
dec
dec
pop
fstl
cmpb
icebp
mov
scas
sbb
test
xor
pusha
call
int
cmpsl
sub
xchg
jge
push
loope
ljmp
test
sbb
jmp
in
cmc
add
das
mov
push
add
adc
sub
xchg
int
add
jbe
fucomip
add
xlat
mov
and
out
push
sbb
add
xchg
lahf
cmp
shlb
or
stos
xlat
or
fistps
inc
and
mov
mov
fldenv
sbb
add
add
inc
ror
lock
jnp
xor
xchg
inc
vmovaps
add
add
vorpd
push
xchg
addr16
push
mov
js
ret
xchg
pop
sub
dec
jo
pushf
int3
scas
mov
add
iret
rclb
push
lret
jae
jb
mov
es
dec
jo
ljmp
add
mov
shl
out
test
ds
adc
loope
or
xchg
add
push
out
ret
add
dec
pop
loope
sbb
aas
testl
out
adcl
loopne
pusha
dec
shrl
sub
enter
fidivrs
inc
ret
loop
xor
aam
cmp
sbb
sub
and
add
aad
add
lds
idivl
lea
aas
in
push
dec
pop
or
ds
daa
add
cmp
in
fildl
mov
in
sbb
stos
divl
mov
add
add
repz
fisubs
push
push
rcrl
add
add
call
cmp
push
cmp
xor
add
mov
inc
arpl
mov
sub
sarb
lea
xchg
dec
icebp
in
pop
xor
add
dec
mov
in
or
fidivrs
cmp
ljmp
leave
jo
xchg
sarl
xor
dec
mov
xchg
stos
es
nop
jo
sbb
sbb
and
aaa
je
push
pop
ret
mov
cmc
sahf
divb
mov
lret
mov
mov
mov
loope
pop
repz
dec
ret
scas
mulb
jae
psrad
mov
jns
xchg
xchg
mov
mov
add
lahf
insb
repnz
add
repz
popf
jns
pop
dec
mov
pop
imul
jnp
outsb
imul
mov
inc
xchg
movsl
frstor
das
mov
scas
addr16
sti
or
mov
std
int3
shll
mov
add
out
sbb
mov
in
add
add
add
mov
lods
cltd
lock
push
mov
fs
lods
xor
scas
sub
push
xchg
fisttpll
leave
stos
loope
jne
mov
cltd
loope
sahf
dec
push
in
outsl
mov
xchg
hlt
pop
jmp
push
shl
movsl
xchg
cmp
ret
mov
cmp
das
movsb
insb
in
pop
fimull
and
adc
jmp
push
jmp
jmp
dec
mov
adc
add
lcall
lock
and
xchg
ret
pop
adc
xor
mov
push
pop
enter
imul
int
pop
sahf
sub
je
lods
cmc
call
daa
pop
test
mov
push
sbb
movsl
leave
jp
popf
in
push
adc
jno
outsl
push
testb
pop
rcrb
lahf
dec
push
or
and
sbb
push
mov
adc
mov
jle
add
add
scas
push
repz
cmc
scas
sub
mov
push
add
add
sbb
les
out
pop
dec
mov
or
das
push
adc
mov
scas
out
pop
cmp
dec
gs
dec
adc
pop
sbbl
jnp
xor
cmp
adc
mov
mov
pop
xor
rcrb
xor
inc
fistpl
sub
mov
flds
push
jbe
or
scas
push
push
iret
cld
add
cmpsb
adc
mov
sbb
jne
ljmp
inc
test
pop
cmp
add
stos
mov
mov
mov
loopne
push
mov
inc
shlb
push
bound
andb
lods
jmp
call
jnp
cmp
mov
cmpsb
dec
js
out
sub
cmp
data16
dec
aaa
cmp
fucomp
inc
outsl
cli
xchg
dec
or
dec
adc
rdpmc
push
jp
inc
jmp
mov
add
pusha
rorb
cmpsb
mov
xchg
add
add
imulb
aad
sub
mov
mov
sbbb
jno
push
subl
pop
loopne
stos
call
add
aad
mov
push
popa
pop
cmp
movsl
or
fwait
in
popa
xor
leave
das
or
add
mov
sbb
out
mov
outsb
test
mov
xchg
jno
je
push
jbe
xchg
leave
sub
fdivrs
jae
sub
pop
sub
cmp
mov
jb
and
mov
push
and
mov
mov
xchg
stc
enter
imulb
and
xor
cwtl
jmp
clc
lds
fdivrl
xchg
das
inc
mov
fisubs
mov
movsl
cld
adc
lods
sub
mov
movsb
add
mov
add
push
shll
add
and
pop
lahf
les
add
jecxz
push
testl
push
outsb
mov
lock
add
add
jbe
iret
cli
lods
fs
popf
lret
fists
sahf
push
push
enter
dec
pop
xor
inc
inc
mov
cltd
daa
mov
sbb
inc
cltd
and
and
mov
cmp
cmp
push
mov
repnz
imul
mov
out
inc
mov
in
arpl
adc
jo
sbb
or
sub
or
loop
mov
pop
dec
inc
out
movsl
dec
mov
movsl
and
sub
mov
xchg
sarl
adc
dec
push
jmp
fnclex
mov
out
dec
push
imul
fsubl
out
xchg
xlat
cmp
int
mov
or
xchg
lahf
or
insl
dec
aas
mov
pop
popf
xchg
push
nop
and
ds
imul
enter
leave
fistl
roll
push
aad
or
repz
gs
stos
jl
fadds
pop
mov
mov
add
add
xchg
mov
mov
pop
das
loop
pop
inc
ja
add
add
mov
adc
test
mov
hlt
push
add
mov
adc
into
mov
add
push
xor
sub
sbb
scas
push
test
and
ja
inc
xorl
lcall
sub
into
and
mov
cltd
sbb
aaa
pop
in
push
fldt
pusha
mov
imul
testl
jb
adc
in
pop
js
push
fisubl
jno
fs
mov
je
movl
mov
sbb
cmp
or
les
addr16
or
into
js
in
sbb
dec
bound
es
loope
and
adc
push
iret
cmp
push
and
jnp
xor
ds
movsb
lret
stos
ret
lds
subb
add
mov
sbb
add
xchg
dec
insl
pop
or
iret
add
add
fucomi
xor
iret
in
repnz
add
push
mov
xor
sbb
push
push
jmp
jmp
and
xorb
into
xchg
in
xchg
dec
out
push
mov
icebp
cwtl
test
pop
jno
adc
adc
aas
xchg
cmpsl
mov
lret
rcr
aam
je
cld
fcomps
outsl
cli
xorl
loope
and
stc
cli
fs
cmpl
rep
jge
mov
out
mov
xor
mov
push
faddl
or
pop
sub
out
push
or
ret
xor
mov
das
js
cli
sarl
sub
iret
lods
sub
adc
bound
arpl
add
add
fcmovu
mov
pop
repnz
push
cmpb
xchg
mov
jo
movsl
push
add
mov
lret
insl
shl
mov
hlt
ja
jno
add
push
daa
nop
sub
add
add
push
inc
pop
jns
aas
loopne
sub
repz
add
repnz
fsub
mov
jo
push
imul
mov
loop
dec
sub
mov
add
xor
arpl
aam
ja
inc
fstpt
pop
loop
pop
lcall
jno
dec
mov
jmp
movsl
inc
cmp
inc
inc
add
xchg
xor
push
dec
xchg
imul
push
inc
xchg
cmpsl
mov
leave
test
lahf
out
sahf
imul
stos
jmp
repz
pop
inc
inc
sbb
ss
arpl
fisttpll
and
clc
or
mov
push
inc
mov
jge
lods
loopne
fdivrl
lods
cmpsb
gs
mov
inc
movsb
mov
fadds
sbb
sbb
jae
out
lock
shrb
add
fldl2e
daa
cs
adc
popf
jb
orb
pop
dec
movsb
jae
mull
xchg
jge
add
cmpsb
sbb
jnp
mov
shrb
xchg
add
add
in
sbb
inc
cli
lods
test
outsb
lods
aas
jnp
nop
aaa
aad
incb
dec
adc
mov
push
adc
xchg
xor
pop
jecxz
repz
push
push
mov
fcoml
lods
insb
lret
or
fnstcw
inc
in
mov
cs
mov
push
pop
inc
enter
shrb
sub
iret
jecxz
js
mov
cmp
movsb
inc
das
inc
add
inc
add
lds
nop
pop
mov
sub
xchg
out
nop
push
cmp
jl
xchg
mul
adc
hlt
fdivs
inc
or
xchg
out
nop
pushl
lds
sbb
adc
out
test
inc
mov
test
adc
sbbl
mov
push
in
cmp
mov
pop
outsb
je,pt
notl
inc
dec
fisubrl
mov
add
mov
sub
pushf
ds
aas
fildl
inc
xor
fcomip
adc
add
imul
gs
lock
loop
cmc
add
add
loope
inc
adcb
dec
fiadds
cmp
mov
adc
mov
jecxz
push
inc
into
mov
jo
ljmp
fdivrl
push
push
mov
aas
hlt
leave
in
inc
loopne
dec
push
call
adc
xchg
cmp
loopne
outsl
sub
dec
pop
push
sub
jp
lret
xchg
gs
movsl
pop
jb
movsl
jne
aas
clc
sub
dec
sti
jb
jbe
shlb
addb
mov
mov
std
in
lods
fwait
movsl
and
jnp
xchg
cli
jmp
push
add
inc
ficomps
test
jo
sub
xchg
lret
sub
add
xchg
stos
lcall
mov
xchg
loopne
sbb
clc
push
mov
mov
xchg
mov
mov
rcll
into
arpl
sbbl
cmp
cld
pop
xor
mov
mov
dec
inc
bound
cli
hlt
scas
pop
lods
stc
add
add
fdiv
mov
popf
pusha
int3
and
add
add
ret
mov
out
stos
mov
in
out
fcmove
and
cmp
fnstsw
push
sub
cli
adc
push
gs
outsb
lods
testb
dec
xchg
sbb
aaa
sti
das
adc
mov
popf
ret
xor
jae
jle
insb
arpl
xchg
lea
mov
in
aaa
cs
scas
dec
inc
sbb
in
int
dec
out
push
jb
dec
test
shrl
or
adc
mov
sub
jo
call
daa
jmp
loopne
jnp
jle
mov
jmp
ds
sub
pop
daa
test
mov
mov
cmc
xor
fsubrl
or
jb
jl
std
mov
test
push
cli
sub
dec
divb
jno
clc
popl
mov
add
movb
push
idiv
pop
subb
pop
adc
jo
lret
mov
adc
mov
insl
pop
outsl
mov
mov
xor
pop
mov
add
add
mov
fiaddl
arpl
adc
add
add
xor
mov
mov
push
mov
mov
es
lahf
xchg
cmp
xchg
jg
jns
jo
btc
dec
push
dec
bound
lret
add
iret
and
xchg
test
lcall
aam
inc
xchg
sub
cli
sbb
nop
xlat
aas
aam
inc
int3
sbb
pusha
or
jne
pop
dec
imul
fsubrs
aas
xchg
test
cltd
or
in
dec
xlat
leave
vunpcklps
add
push
or
adc
pop
mov
mov
xlat
jb
imul
incl
imulb
mov
sub
leave
mov
arpl
pop
insl
call
daa
and
movsl
out
xchg
fistps
jne
loope
mov
cmpsb
loope
lret
inc
jle
pop
dec
sti
push
xor
orb
xchg
loop
xor
xchg
das
add
jg
test
fiaddl
loopne
pop
add
add
push
pop
push
jmp
rorb
clc
add
add
dec
shr
insl
dec
inc
xchg
fnstenv
ret
daa
mov
sbbl
inc
fnstsw
mov
jbe
dec
add
mov
pop
xor
mov
popw
fwait
addl
nop
mov
or
push
mov
jbe
scas
push
or
sub
aaa
inc
sub
fldcw
lret
xchg
xor
sub
addr16
jb
inc
xchg
cmp
subb
rolb
movsb
jecxz
outsb
aas
mov
out
sub
cld
insb
or
das
test
mov
jb
sbb
push
fnstsw
dec
imul
pop
hlt
imul
and
out
adc
cmpsl
cld
repnz
adc
fsubl
lahf
add
gs
push
mov
jno
leave
adc
sbb
clc
pop
movsb
lods
dec
movsl
dec
push
mov
xor
sub
jns
sbb
incl
add
pop
inc
pop
lods
pop
cli
cmc
cmpsb
lret
pop
aam
jne
stc
add
add
mov
sti
pop
hlt
xor
mov
xchg
jmp
cmp
loopne
clc
les
push
imul
in
jmp
cwtl
xchg
and
mov
push
or
mov
cmp
sbbl
repnz
pop
sub
push
sub
mov
cmp
cld
jns
out
push
mov
push
sbb
pop
test
cmpsb
add
imul
int3
subl
shl
pop
jnp
into
add
cmpsl
and
xchg
mov
sub
int3
sub
cltd
sbb
add
mov
mov
outsl
test
inc
or
or
cmc
mov
ret
sbb
mov
in
mov
xor
xchg
loopne
mov
mov
xchg
push
mov
les
jns
mov
adc
jne
call
insb
es
stc
jne
movsl
dec
or
jmp
xor
cmp
loop
rcrl
daa
add
add
stos
cltd
inc
popf
jae
out
xor
movsb
cli
add
add
add
loope
mov
cmp
pop
adc
lret
call
adc
enter
loop
dec
dec
sub
or
push
icebp
lret
dec
imul
insl
sbb
cmp
xorl
lods
es
pop
mov
lock
dec
add
out
shrl
int3
and
cmp
sbb
daa
push
jg
jle
enter
pop
pushf
xchg
fistpl
mov
push
sbb
pop
push
pop
push
das
pop
pop
cli
mov
into
mov
scas
mov
jl
jno
ja
pop
jns
cmp
or
sub
sub
ret
loope
loope
repz
push
jbe
jo
or
xchg
ja
jae
pop
les
fxch
sahf
mov
popf
add
ret
pop
stos
movsb
ret
bound
add
mov
add
mov
pop
ss
mov
fcompp
add
add
aam
int
aaa
das
aam
ret
test
add
add
adc
sbb
jmp
add
shlb
inc
pop
or
inc
inc
sbb
sub
std
mov
inc
push
sbb
test
fidivl
sub
dec
xlat
daa
inc
cmpsb
in
test
dec
out
in
mov
fwait
addr16
dec
outsb
loope
mov
fwait
jle
in
pop
lret
fs
lahf
mov
adc
addr16
sbb
mov
mov
ljmp
mov
add
sub
jae
and
test
cmp
out
js
in
jo
test
add
jnp
daa
pushf
es
fldt
inc
fstpl
fisttps
repnz
cmc
jmp
in
les
or
daa
loop
lds
mov
sub
mov
int3
fidivs
inc
cli
jle
sbb
jecxz
iret
push
pusha
es
mov
sub
flds
into
insb
movsb
leave
pop
daa
add
add
arpl
addr16
sub
call
mov
add
lret
out
or
push
out
push
mov
test
ja
aas
nop
or
icebp
xchg
xchg
push
jmp
pop
cmp
mov
mov
sbb
dec
cmp
adc
cmp
inc
sqrtps
jnp
mov
pop
ljmp
jbe
jmp
and
lods
pop
decb
outsl
rcr
adc
js
jns
fwait
vphaddbq
in
sub
es
mov
nop
scas
add
fs
cmp
push
sbb
cmc
mov
lret
xchg
or
lods
orb
push
fisubs
ret
push
rorl
in
negl
mov
adc
add
adcb
cmp
and
icebp
and
cwtl
incl
mov
leave
cs
push
push
sub
mov
mov
sbb
adc
add
add
out
out
pushl
xchg
xor
cmp
mov
mov
add
add
xor
stc
or
dec
pushf
bound
inc
xchg
sbb
cwtl
add
or
adc
fst
xor
sub
pusha
addr16
test
sub
test
outsl
inc
xchg
sbb
aad
dec
mov
jg
stos
cmpsb
jle
mov
call
lods
sbb
cmpsl
jle
div
lods
into
mov
sub
lods
sbb
adc
jbe
adc
pop
jne
das
imul
jb
add
cmp
adc
cmp
popa
int3
test
add
lods
push
pop
push
rorb
adc
cmpsl
xor
repnz
int
sbb
cwtl
icebp
test
cmp
ficoml
xchg
push
enter
add
scas
int
test
out
mov
or
rcrb
lods
inc
ret
dec
mov
stos
aam
and
pop
dec
push
or
push
xchg
jmp
test
ret
iret
dec
test
adc
dec
pushf
jl
mov
mov
out
add
add
push
scas
mov
cmpl
incb
add
iret
add
add
into
repz
into
xchg
add
push
inc
ret
jp
push
out
sti
cld
loop
jns
sub
mov
inc
push
int
push
jge
lret
sub
cmp
testb
jae
pushf
outsb
out
mov
pop
sub
or
pcmpgtw
subl
shrb
mov
js
mov
xor
jno
cmp
add
imull
frstor
pop
mov
fisttpll
mov
sub
push
add
bound
iret
dec
dec
jmp
push
rolb
bound
int
push
fwait
loop
push
cltd
sahf
rcll
in
mov
inc
xchg
aaa
lods
data16
cmp
xchg
dec
mov
inc
gs
xor
rcrb
pop
shr
push
std
dec
lret
icebp
lods
and
cmp
inc
aaa
push
xor
add
xchg
and
movsl
mov
mov
mov
into
sarb
add
add
clc
movsb
adc
mov
jmp
jmp
and
shl
dec
inc
mov
int3
mov
mov
ds
cmpsl
mull
lock
push
mov
sbb
fists
lcall
mov
push
mov
mov
jle
es
jno
mov
aas
jl
fstpl
dec
sub
insb
mov
popa
add
stos
mov
int3
xchg
lret
mov
lret
sub
jmp
jbe
mov
decb
sub
jno
mov
mov
mov
jb
xor
shll
dec
xor
xchg
xor
pop
aam
dec
mov
out
rcl
test
pop
dec
js
lret
cmp
dec
into
fwait
in
fsub
out
fs
adc
sbb
std
dec
mov
push
xor
nop
push
xor
aas
fwait
sti
adc
fdivrs
clc
jne
enter
add
add
mov
push
jg
mov
or
cmp
ret
add
mov
jno
and
inc
test
jecxz
scas
shlb
push
inc
add
jmp
negl
jo
jne
cmpsb
push
popa
push
push
fnstsw
sub
stc
fmuls
xchg
cmp
xchg
shl
add
dec
in
inc
mov
outsl
adc
in
sub
add
fnstcw
mov
fwait
stc
inc
aad
and
pop
or
je
pushf
xor
mov
cmpsb
jae
fwait
add
add
mov
lahf
push
mov
add
popa
add
mov
cmp
insl
sbb
clc
inc
lds
inc
mov
mov
jle
xchg
dec
rorl
mov
push
inc
sub
inc
xchg
in
xchg
cmp
outsl
fists
mov
int
push
pop
out
stos
pushf
and
cmp
xchg
cwtl
pop
dec
fs
je
inc
ja
fcompl
sbb
subl
sbb
add
aad
insb
call
add
jbe
add
add
mov
mov
lods
imul
je
and
add
dec
cli
adc
sub
pushf
out
adc
rcrb
loope
xchg
inc
shll
outsb
pop
mov
aaa
mov
adc
hlt
xorl
imul
fwait
leave
pushf
loopne
mov
xlat
popf
lahf
lcall
mov
or
stos
jmp
cmp
jl
fincstp
dec
dec
cmc
sbb
mov
dec
mov
test
add
push
ficoml
pop
cmp
ljmp
das
sbb
aaa
repz
mov
into
ja
out
xchg
shrl
push
cmp
test
or
push
or
in
xor
xchg
adc
xorb
out
push
xchg
ljmp
jno
ja
jno
jmp
push
ror
pop
push
in
cld
push
and
pop
pop
mov
icebp
jmp
jl
in
inc
sahf
lea
in
ret
sbb
lahf
push
xor
add
add
mov
cmp
push
nop
dec
dec
int3
add
add
mov
jle
push
outsb
jns
adc
js
aam
int3
scas
dec
xor
adc
stos
jmp
mov
jge
repz
or
mov
imul
ljmp
lret
xor
mov
jg
daa
cld
mov
iret
jnp
mov
jo
dec
jns
fcoms
imul
addr16
or
in
in
fcomip
inc
out
push
sub
push
adc
jb
xchg
cmc
into
mov
stc
mov
call
mov
adc
hlt
fs
jae
in
xchg
dec
pop
ret
out
push
or
clc
out
int
and
int
mov
dec
mov
push
adc
test
jp
inc
inc
push
shrb
vfrczpd
rcrb
mov
mov
pop
adc
mov
and
xor
pop
xchg
mov
cmp
add
xchg
enter
push
fbld
jg
dec
roll
add
add
popf
xor
stos
and
mov
jmp
divb
insb
vmread
jp
cwtl
outsl
bound
and
xchg
inc
jb
pop
loopne
ja
mov
sti
lods
daa
fistpll
fnstsw
lods
xchg
mov
xor
test
jne
aad
mov
addb
dec
mov
loope
push
jno
je
sbb
hlt
dec
bound
xchg
or
pop
sub
ja
or
imul
add
add
loop
xlat
dec
jno
jb
stc
jl
mov
test
rcll
jecxz
loopne
in
imul
sbb
lods
jns
shrl
sbb
lock
pop
in
inc
pop
ss
fists
ret
xchg
xchg
pushf
cmp
pop
adc
movsl
push
and
jno
int
xchg
out
rcrl
bnd
cwtl
rcrb
dec
mov
hlt
dec
xchg
fs
cmp
jo
ret
pop
xchg
mov
ret
sub
add
mov
into
fwait
add
mov
lahf
add
add
push
loopne
mov
cmc
cmc
xor
push
fmulp
mov
inc
je
mov
xor
ljmp
sarl
inc
scas
jmp
pusha
sbb
mov
andb
jbe
push
jg
out
test
clc
iret
cmpb
lds
jo
sbb
jg
imul
in
adc
jecxz
xchg
adc
aaa
cmp
rolb
xchg
pop
mov
push
bound
sub
lcall
sbb
stos
mov
jae
push
xor
lock
and
adc
adc
mov
adc
xchg
mov
in
into
dec
sub
jge
imul
sub
dec
dec
call
sub
jnp
ret
mov
mov
rorb
das
cmpsb
out
nop
cmp
addl
test
mov
mov
pop
add
movsb
int
cmp
in
push
add
xor
mov
pop
sarb
in
and
ret
add
add
mov
or
jmp
mov
daa
cli
push
fidivs
fdivrp
jbe
adc
std
icebp
rorb
test
cmpb
add
lahf
je
inc
mov
popf
mov
and
aam
fldl
clc
fisttps
mov
mov
stos
push
xchg
mov
shll
jnp
lret
stos
dec
dec
sub
sahf
xchg
mov
and
loopne
lds
les
lock
cs
adc
lahf
dec
or
mulb
cmp
and
subb
cli
adc
mov
idivb
jbe
hlt
loope
sarl
and
int
dec
out
xchg
gs
mov
loop
popf
data16
int
mov
cltd
cltd
fwait
lea
mov
xor
or
mov
cld
iret
xchg
xor
pop
pop
scas
sub
xor
retw
rcr
scas
adc
lods
push
add
loopne
jle
pop
add
add
inc
out
aas
mov
rcrb
push
add
add
cli
sub
sub
jmp
sub
jnp
push
pop
fwait
ds
inc
dec
wrmsr
jecxz
dec
push
mov
shl
inc
stc
rcll
or
xchg
xor
jp
adc
std
mov
test
sbb
mov
mov
xchg
inc
and
lret
pop
xlat
jmp
stc
aam
pop
fcmovnbe
stos
mov
mov
add
pop
xchg
das
das
pop
rcl
cmp
arpl
inc
xchg
add
cmp
lods
and
lock
loopne
mov
lods
test
sub
aad
xor
movsb
add
sub
xchg
mov
mov
insb
mov
scas
test
lret
xchg
clc
orb
lcall
aaa
and
jns
dec
iret
iret
inc
jp
xor
mov
jb
cmp
popf
out
cltd
lahf
fidivrs
out
cmp
rorl
or
shlb
aam
add
push
bnd
dec
leave
and
gs
pop
in
add
add
adcb
lret
add
pop
inc
insb
xor
adc
pop
testb
add
out
adc
fistpl
in
push
pop
lcall
inc
imul
sbb
mov
inc
orb
fnstcw
xchg
mov
aaa
dec
in
cltd
jae
pusha
imul
mov
es
fsts
pusha
lcall
and
arpl
xor
mov
jp
in
daa
out
sub
dec
data16
mov
push
imul
cmpsl
mov
jbe
insb
aad
cmpsb
mov
out
xor
push
cltd
sti
push
inc
out
add
stos
mov
sub
dec
or
sub
mov
cmp
cmc
sbb
inc
in
dec
mov
jecxz
xor
lods
mov
dec
jns
sub
std
cmp
jle
xchg
add
xchg
jno
call
jg
mov
add
add
in
out
ja
filds
inc
mov
add
enter
rcll
out
inc
and
jb
or
jmp
sbb
mov
pushf
push
fstpt
sbb
pushf
xlat
lods
sbb
shlb
cmpsb
inc
out
lea
sub
fisttpll
or
ss
xchg
jbe
les
aaa
cmp
lods
pop
out
push
push
pop
inc
mov
fiadds
jle
xchg
mov
enter
push
sub
fldcw
clc
mov
inc
out
in
jg
push
fwait
xor
dec
icebp
fmull
cmpsb
sbb
sbb
addr16
xor
popf
nop
outsb
aaa
in
addr16
cmpsb
dec
bound
xchg
clc
lret
in
sub
push
cmp
mov
or
sbb
jp
xchg
xchg
arpl
cmpsl
scas
cmp
or
mov
mov
push
or
jge
push
icebp
jp
dec
ljmp
push
adc
cmp
and
add
add
pop
in
inc
push
or
or
add
enter
call
int3
movsb
pop
lahf
rolb
push
fwait
fs
dec
shr
addr16
pop
dec
pop
out
sbb
push
adc
stos
adc
das
int3
cmc
ljmp
roll
outsb
jmp
and
mov
or
int3
or
mov
push
xor
addr16
test
and
and
mov
fisubrs
movsl
and
inc
icebp
or
sets
push
inc
fists
and
ds
adc
xchg
dec
shlb
xor
xor
fidivrl
fisubs
pop
repz
sbb
mov
jecxz
mov
sti
inc
mov
dec
xchg
add
jne
mov
push
xor
adc
ret
sub
sub
cmp
jecxz
icebp
jl
jmp
insb
push
push
and
jecxz
adc
and
add
mov
jg
neg
pop
daa
inc
adc
add
add
lock
cmpsl
add
loop
pop
inc
insl
inc
inc
mov
sbb
jae
cld
inc
stc
into
stos
cltd
jl
arpl
push
fs
cmp
test
or
divl
imul
add
adc
int3
fldenv
mov
inc
or
nop
fldcw
faddp
ret
push
add
jae
mov
mov
cmpsb
push
loopne
add
repnz
jmp
std
test
sarb
push
add
nop
push
add
aaa
stos
movsl
mov
xchg
adcb
dec
mov
in
inc
pop
in
add
mov
fsts
lret
shrd
andl
jp
fdivrs
jno
xor
imul
imul
and
mov
mov
in
and
jbe
int3
ret
and
sub
repz
fsubr
lret
ljmp
mov
inc
cmpsl
fwait
test
daa
nop
add
add
sti
jg
cmp
je
xchg
add
add
xchg
xchg
test
jne
mov
pop
cmc
inc
aas
stc
enter
mov
add
icebp
aad
mov
pop
hlt
jne
xchg
mov
push
lock
mov
inc
adc
cmp
test
mov
mov
dec
cmpb
ds
repnz
pop
decl
lret
push
jle
rcrl
cmp
dec
es
sbb
lods
xchg
mov
xchg
and
sub
inc
int3
and
in
dec
test
and
sub
scas
sti
cmp
call
std
adc
test
xor
jo
mov
in
insb
cmp
xchg
mov
cmovne
mov
dec
add
cld
pop
mov
mov
push
cmp
daa
aam
in
or
fcmovbe
mov
inc
xchg
cmc
test
mov
add
or
or
sti
jo
mov
imul
inc
inc
jae
icebp
or
loope
push
ds
add
scas
aam
jnp
fstp
fcompl
jns
testl
add
add
popf
mov
dec
dec
scas
dec
fldcw
push
rorl
dec
push
out
imul
inc
mov
mov
jle
mov
bound
xlat
cmp
or
mov
out
mov
mov
and
pop
mov
xchg
cmp
pop
sbb
in
je
std
xchg
lret
mov
inc
push
mov
jns
pop
mov
imul
repz
mov
dec
sbb
sbb
dec
push
xchg
fimuls
and
lock
sti
inc
xor
inc
pusha
jne
stc
filds
subl
icebp
test
out
mov
mov
notb
cmp
add
mov
sbbl
out
movsl
loopne
cwtl
fwait
pop
adc
sub
xor
into
push
sub
mov
fidivl
pop
mov
insb
jbe
push
test
or
add
add
outsl
mov
add
and
out
push
add
add
xchg
mov
jmp
and
mulb
jns
add
mov
stc
ret
cs
scas
xchg
mov
adc
or
sbbb
jp
push
mov
das
push
push
pop
push
pop
hlt
cmpsl
dec
adc
iret
xchg
sub
leave
adc
pop
out
das
push
mov
jae
pop
pop
pop
cs
jae
clc
add
or
cmp
loopne
ds
aaa
jle
test
loop
fwait
in
or
jle
mov
adc
pop
addb
jnp
xchg
push
jb
add
faddl
mov
inc
mov
fwait
add
jl
or
adc
or
jns
push
and
js
inc
cwtl
pop
xor
shl
movsb
push
aas
dec
add
test
add
dec
call
rcll
fisttpl
cmp
shll
add
jb
or
mov
sbb
pop
dec
cs
test
sub
leave
movlps
outsb
add
add
jmp
fisttpll
sgdtl
add
insl
xor
sub
bound
jg
cltd
cmp
xchg
push
add
inc
xor
mov
cltd
push
mov
or
xchg
mov
stc
sub
mov
stos
xor
cmp
ss
jne
ret
pop
fs
lret
mov
pop
pop
cld
sub
stos
push
inc
mov
push
testb
mov
aam
ret
popf
dec
out
fbld
push
insb
jns
scas
pop
imul
andb
into
fimuls
hlt
and
push
inc
arpl
in
clc
mov
xchg
test
mov
out
mov
pop
test
pop
adc
sub
push
test
xchg
lret
xor
ds
mov
jne
pushf
sub
andb
cwtl
stos
inc
outsl
adc
xor
inc
stc
mov
push
cmpsb
mov
push
xor
sub
add
xor
xchg
lds
rcll
cmpsb
or
add
add
or
mov
or
sbb
ds
fcmovbe
add
mov
fs
in
ds
movsb
leave
inc
fnstcw
xchg
mov
jne
dec
insb
jl
dec
pop
dec
lcall
movsb
fmul
mov
popf
lidtl
xor
rcrb
sub
loopne
jns
and
adc
addb
shll
dec
lods
testb
nop
cvttps2pi
mov
imul
lret
hlt
push
lods
mov
fidivrs
xor
dec
fdivrp
sahf
mov
mov
aam
xchg
int3
sbb
imul
mov
or
inc
xchg
gs
jae
xchg
mov
xorb
pop
imul
pop
test
sbb
cmp
and
repz
push
lcall
jno
sub
push
cld
pop
hlt
xor
in
outsl
sbb
ja
aad
mov
mov
ret
in
add
add
cli
inc
jg
int
xchg
lods
or
mov
add
add
jno
and
movsb
push
mov
push
test
shlb
fucomi
rcrb
sti
cwtl
xlat
sub
lods
xchg
add
jnp
das
nop
out
xchg
movsl
outsb
xchg
push
mov
add
test
pop
dec
dec
shl
sbb
pop
cli
jnp
js
pop
xor
lds
pop
mov
push
jp
aam
ss
jle
or
loop
mov
sub
or
inc
mov
or
dec
je
paddusb
adc
mov
dec
lret
add
mov
pop
ljmp
hlt
mov
mov
push
xor
jp
leave
fsubp
out
lock
fcmovnu
insl
loopne
jns
mov
mov
pop
add
push
pusha
adc
xchg
jo
and
add
and
sub
loop
adc
xchg
test
shrb
add
add
xchg
std
cmp
jle
fistpll
fimull
adc
add
jmp
imul
and
icebp
or
loope
jb,pt
cwtl
jle
mov
or
sbb
add
cmp
add
pop
arpl
in
fsts
or
pushl
sub
pop
jg
dec
mov
or
mov
and
fimuls
xchg
aam
push
sub
mov
adc
add
mov
mov
dec
xor
push
xchg
mov
fucom
das
or
push
cld
mov
xchg
mov
and
sbb
sbbb
sbb
xor
test
loop
push
jne
cld
push
rcrb
jmp
repz
clc
mov
aad
movsb
push
mov
pop
or
call
add
popf
imul
insl
lcall
ficoml
into
sbb
int
movsb
sub
mov
addl
push
dec
adc
add
iret
xlat
ficompl
inc
stos
test
sbb
add
add
leave
push
inc
sbb
das
ret
outsl
or
into
push
fcmovu
mov
push
mov
popf
int3
push
jo
andl
jo
pop
repz
pop
mov
xchg
or
pop
and
jbe
mov
pxor
push
mov
imul
mov
or
dec
push
push
mov
xchg
jo
xlat
sub
cmp
jno
xchg
jb
rcrl
movsb
test
xchg
rcrb
jno
jp
cmpsl
lahf
mov
inc
adc
nop
decl
cpuid
push
and
aad
repz
cld
ds
mov
call
cmp
fnstcw
and
pop
sbb
push
int3
and
mov
lea
sti
push
outsb
mov
outsl
sub
iret
les
and
pop
rclb
jnp
clc
sar
push
mov
es
cmp
dec
lods
lahf
sub
insl
rorb
add
sub
iret
outsb
jmp
push
test
adc
add
add
pop
adc
loope
nop
pop
testb
ds
cmp
add
loopne
in
pop
out
in
dec
ds
push
xor
push
lcall
and
xchg
pushf
inc
mov
fucomp
lea
xchg
mov
imul
mov
and
add
mov
sbb
pop
xchg
lcall
pop
insl
push
adc
sbbb
xor
xchg
aam
cs
xlat
xor
xchg
xchg
pop
ljmp
stos
aaa
mov
xor
lret
mov
out
inc
dec
ret
pop
dec
lcall
gs
sbb
aad
dec
fnstenv
xchg
lea
mov
or
sahf
dec
jno
pop
lret
inc
cs
fisttpll
push
cmpsl
cmpsl
pop
fwait
mull
sbb
jns
add
and
cmc
sub
out
repnz
or
shl
xchg
aad
cmpsl
jbe
cwtl
inc
call
js
cmpb
loopne
ror
orl
add
sbb
std
sbb
stc
cld
or
pop
daa
mov
add
add
adc
decb
das
les
pop
adc
movl
add
mul
daa
js
jae
xor
mov
mov
divl
jno
cmp
insl
jne
mov
insl
jbe
and
bound
divl
mov
jns
adc
lea
xor
loope
ljmp
call
mov
push
or
xchg
imul
sbb
leave
sub
add
sti
mov
sub
rol
out
cmpsb
stos
sbb
jno
or
fdiv
jp
lds
insb
pop
dec
push
insb
or
pop
push
movsl
stc
lods
inc
adc
add
sahf
in
lods
popf
fmull
mov
fs
mov
adc
loope
add
cmp
xchg
fwait
dec
dec
sub
cmpsl
inc
mov
data16
std
cs
sub
ret
mov
out
push
xor
or
add
negl
adc
pop
xchg
cmpsb
fistpl
add
add
mov
or
pop
jl
test
cmp
xor
dec
jno
pop
in
xor
jmp
or
sbb
sar
dec
aad
push
bound
mov
mov
mov
sar
into
aaa
imul
mov
mov
mov
ja
mov
push
pop
pushf
mov
ss
mov
xchg
pop
xchg
fs
pavgw
push
imul
dec
sbb
push
mov
loope
adc
inc
mov
mov
jp
stc
loopne
je
lret
sub
sub
subb
int3
ss
pusha
jmp
cs
movsb
jmp
test
outsl
fldenv
dec
leave
mov
shl
sub
popa
fs
pop
sbb
xor
cli
dec
or
jge
int3
push
jns
mov
in
inc
icebp
inc
enter
enter
mov
pushf
jle
aaa
mov
popa
push
add
jae
or
mov
dec
pushl
scas
pop
mov
xor
add
add
inc
dec
jb
mov
and
jl
adc
mov
lods
or
bound
mov
jae
enter
inc
arpl
xor
fadds
mov
negl
icebp
jp
test
negb
insb
adc
rdmsr
adc
stos
adc
ss
inc
ds
insb
inc
jnp
xor
lcall
ret
mov
push
pusha
dec
icebp
nop
xlat
push
mov
lahf
xchg
mov
scas
sub
xchg
pop
xchg
push
xchg
pop
insl
add
and
jle
cwtl
adcb
repnz
arpl
stos
mov
mov
test
shll
dec
push
xchg
push
ds
jp
test
xlat
fisttpll
cli
testb
pushf
push
js
scas
rcll
xor
push
pop
xchg
and
lret
loopne
fs
jl
xchg
add
mov
mov
jle
push
aas
inc
fcomps
add
inc
ja
pop
aas
dec
push
aaa
cmp
add
add
xchg
lcall
sub
addl
imul
xlat
daa
mov
or
xchg
ljmp
sti
js
cmp
sbb
fstl
ja
hlt
or
and
dec
in
mulb
pop
push
int
imul
daa
js
pop
sbb
repz
xor
fisubrs
cs
jne
in
call
mov
or
sbbl
addr16
pcmpeqb
dec
or
fpatan
add
ret
sub
shlb
xor
ss
dec
mov
or
xchg
or
stos
pop
and
lcall
push
pop
xor
jbe
cmpsl
pop
jmp
pushf
fmuls
xchg
dec
lods
jle
loopne
loop
das
jns
lret
adc
inc
mov
push
repz
out
cmpsl
xchg
lret
add
lahf
mov
ficomps
lret
out
aas
int3
sub
lcall
add
add
xchg
jae
ja
div
mov
in
loop
sbb
add
xor
or
popf
adc
sbb
jae
int3
mov
lcall
loope
mov
mov
fsubl
push
mov
imul
adc
pusha
jno
orl
push
and
jle
int3
pop
mov
shll
bound
ret
mov
sub
adc
cmp
jb
lea
push
sub
pop
fcmovnu
dec
xchg
push
sbb
pop
jae
in
std
xor
cmp
mov
and
aad
test
repz
cmpsb
sbb
dec
out
xchg
mov
cli
lds
pop
shl
stc
adc
pop
cmp
sub
mov
pop
leave
imul
mov
std
ss
push
xchg
sahf
xor
out
xor
pop
push
pusha
arpl
cmpsb
dec
in
add
out
enter
push
out
sub
fimuls
add
mov
in
add
add
cli
std
jg
push
pushf
dec
push
mov
add
add
cmpsb
stos
loopne
ja
iret
fadd
fnstenv
popf
bound
insb
lret
shrw
inc
xor
movsb
push
std
inc
mov
rcrl
es
in
inc
sbb
wrmsr
lahf
mov
std
sti
aad
mov
cmpb
add
sbb
pop
mov
cmp
xchg
add
aam
es
sbb
ds
xor
jne
add
das
jle
xor
imul
mov
xlat
bound
stc
pop
lret
mov
push
adc
in
test
pop
ficoms
and
rolb
add
test
pop
adc
jbe
pop
in
outsl
add
xor
loope
fs
jg
or
sub
pop
xchg
or
pop
sbb
sub
mov
ret
cs
out
pop
mov
push
or
scas
mov
loope
pushf
test
leave
insl
mov
push
add
add
add
mov
std
incl
sbb
aam
xchg
inc
sbb
add
inc
int
pop
inc
add
push
in
not
cltd
inc
or
cltd
dec
add
in
or
or
stc
adc
mov
or
inc
mov
mov
and
xchg
es
add
push
cmp
push
arpl
push
mov
imul
push
inc
popf
xor
insl
or
es
sbb
pop
andb
ljmp
cmp
push
out
iret
cmp
cmp
in
es
fptan
dec
gs
iret
xchg
mull
sahf
or
adc
mov
adc
mov
scas
cmp
lahf
or
das
and
rclb
pop
mov
sub
jge
jo
hlt
and
jecxz
out
add
enter
lds
icebp
xor
sahf
mov
js
data16
das
sub
xchg
pop
xchg
gs
xchg
inc
inc
jb
cwtl
out
cmpsb
cmc
xor
or
repz
imul
sub
add
push
es
jg
pop
or
xor
cmc
rorb
add
add
mov
xor
nop
sbb
lcall
jb
shl
mov
push
jae
cmp
cld
aad
ds
add
enter
cmp
mov
xchg
adc
subl
imul
inc
pop
mov
or
imul
adc
divb
test
mov
loope,pn
pop
push
mov
repnz
adc
sub
decl
mov
loope
fmull
es
jnp
daa
or
mov
jae
das
inc
pop
lds
lret
jg
hlt
divb
icebp
sahf
cwtl
pop
shlb
out
repz
xor
adc
push
xchg
stos
pop
sarl
jne
sbbb
lcall
rclb
inc
jmp
push
lock
adc
sti
adc
xchg
call
xorb
add
or
dec
push
cmp
sbb
add
fimuls
movsb
rcr
and
pop
and
mov
inc
jo
ret
fs
dec
scas
cmpsl
pop
mov
mov
pop
inc
stos
mov
cmp
push
jae
stc
dec
stos
mov
aad
ljmp
icebp
roll
repz
mov
adc
xor
cmp
and
jg
dec
inc
sub
es
sub
das
lahf
mov
dec
pop
loope
push
in
jno
add
call
push
cmp
sbb
sub
mov
jbe
test
lret
pop
out
cltd
stc
mov
mov
lret
aas
cmp
push
jns
sub
das
mov
mov
pop
outsb
sarb
xor
sbb
cmpl
fwait
mov
and
push
push
mov
andl
in
xrelease
jmp
jge
xlat
gs
sbb
test
in
cwtl
lds
adc
insb
add
add
stc
lods
xor
mov
lods
in
push
push
add
add
fwait
add
addr16
popf
fsubrs
leave
imul
lods
test
in
sbb
clc
stos
into
cmpsb
jge
mov
mov
and
aas
imul
sub
test
lock
mull
cmp
test
mov
mov
call
sbb
pop
cmp
leave
push
cltd
pop
in
push
hlt
adc
pop
or
std
mov
jecxz
shr
and
movb
or
inc
rcl
push
sahf
sub
into
icebp
cmc
out
xor
jg
inc
aad
adc
pusha
movsb
jmp
pop
iret
add
xchg
daa
push
or
xchg
add
scas
dec
push
rcr
addr16
jmp
mov
pusha
xchg
pop
shr
and
or
in
xor
ret
cli
aad
xchg
popa
jmp
push
pop
sbb
fidivrl
pop
push
jnp
mov
loope
dec
into
push
fimuls
xor
dec
loope
cmp
dec
or
add
ficoms
stos
sbb
call
mov
pop
pop
add
add
repnz
std
add
push
into
in
cmp
icebp
sti
cmp
incb
imul
js
rcrl
rorb
push
fldt
fsubs
push
pop
pop
out
test
adc
pop
shll
mov
sub
addr16
add
jno
sahf
es
cwtl
in
in
mov
pusha
push
pop
in
or
mov
mov
adc
out
push
das
xchg
push
ss
sarl
je
jbe
arpl
es
fnsave
icebp
loop
andb
lods
cltd
add
ja
dec
fbld
mov
iret
xor
mov
add
jg
jg
ss
xlat
aam
popa
fisttps
or
inc
repnz
stos
jge
imul
insb
add
shrb
adc
push
scas
fxch
jmp
pop
mov
add
adc
ret
notl
mov
iret
ds
mov
out
cwtl
ja
add
add
add
in
out
stos
jge
or
data16
lret
add
add
jae
subb
enter
xchg
and
and
pushf
imul
scas
push
sarl
cmp
fs
inc
stos
dec
xlat
lods
inc
lahf
jbe
or
call
test
push
cwtl
sub
xlat
nop
sbb
repz
add
mov
or
jbe
or
ficoml
sub
mov
sbb
sub
in
or
loop
bnd
lods
insl
outsl
js
or
mov
aam
cwtl
inc
sbb
mov
int
cltd
call
xchg
inc
dec
sbb
pop
std
les
std
jo
fstl
hlt
dec
mov
ret
sub
lahf
idivl
push
dec
and
xchg
repnz
inc
dec
push
adc
xchg
ds
pop
out
adc
add
inc
dec
repz
sbb
movlps
or
mov
inc
sti
out
pop
cs
inc
leave
sti
testl
add
dec
or
out
xchg
iret
push
aas
ja,pt
in
and
add
fistps
sbbl
dec
adc
jnp
dec
daa
adc
xor
les
push
rol
or
int
out
push
shrb
or
test
lcall
mov
js
jae
sub
xchg
cltd
mov
sbbl
xchg
mov
adc
xchg
dec
es
xlat
mov
mov
insl
dec
and
sahf
jmp
cltd
inc
xchg
xor
ror
jge
fmul
popf
std
cs
scas
ss
inc
adc
pop
cld
les
add
xlat
stos
pop
mov
cld
pop
into
cli
cmp
loop
enter
sbbl
mov
sbb
ret
xchg
mov
es
ret
push
in
and
scas
movsl
pop
mov
xor
pop
mov
cmp
call
cmp
sbb
out
sbbb
rcr
aas
xor
add
add
in
add
cmp
out
loope
jns
ja
mov
and
add
sub
sti
dec
jo
jecxz
jno
sub
adc
jp
sbb
arpl
cltd
in
imul
stos
shrl
fcmovnu
xor
pusha
cli
push
enter
xor
lcall
lcall
jnp
ljmp
xchg
cmc
sub
mov
subl
popf
jmp
push
sbb
fnstenv
faddl
jl
test
cli
mov
nop
inc
js
lods
mov
les
sub
dec
aam
mov
ds
or
or
lret
jmp
mov
out
popf
jle
sbb
test
fldenv
fs
das
pop
fildll
pop
inc
test
jns
lds
aam
rorb
std
pop
inc
lods
mov
mov
out
cli
xlat
inc
mov
sbb
sbb
arpl
nop
idivb
idivl
ja
add
add
lods
jg
push
mov
jle
pop
cld
insb
and
add
in
notrack
mov
push
cld
xchg
aad
mov
movups
mov
mov
fdivp
or
dec
jecxz
cmp
cld
rorl
fidivl
das
mov
and
sub
negl
and
xchg
outsl
fists
insb
sahf
enter
lret
push
pop
xlat
aad
pop
push
addb
jl
mov
sub
add
gs
shlb
dec
mov
xchg
sahf
fldt
test
daa
sub
pop
push
lds
or
pop
dec
out
lcall
xchg
fsubrp
fildll
cld
lds
xor
xor
mov
xchg
daa
ffree
into
mov
cmp
dec
jmp
rolb
sbb
xchg
inc
ficompl
and
jnp
dec
mov
int
pop
jg
loope
adc
call
in
xchg
cmc
mov
iret
mov
cmp
in
add
mov
dec
idivl
cld
ret
add
in
jno
add
add
mov
sub
test
cmc
jl
ljmp
xchg
fnstenv
fsubl
xor
rcrl
in
inc
xor
jge
xchg
in
int
fisubrl
lret
mov
fs
enter
jmp
aad
sub
and
mov
pushf
mov
pop
in
mov
push
das
xlat
mov
or
xchg
cmp
cmp
orb
pop
mov
push
dec
ja
pushf
xor
enter
xor
out
and
scas
test
inc
loop
outsl
mov
sub
cs
gs
addr16
mov
pop
jle
test
fwait
stos
xchg
daa
cmp
lea
cmp
pop
cmp
or
xlat
ja
js
loope
rorb
icebp
call
inc
mov
cli
add
cmp
aaa
inc
pusha
push
int3
pop
adc
std
rcr
pop
fs
sti
xor
inc
mov
add
add
mov
iret
mov
xchg
xchg
jbe
add
add
clc
and
push
xchg
out
into
scas
into
push
vpunpcklwd
mov
clc
and
fwait
xchg
adc
in
pop
outsb
out
shrl
iret
dec
inc
pop
addr16
aaa
insl
stos
push
mov
pop
and
jg
xor
push
sbb
mov
xchg
mov
sarl
pop
cli
scas
call
repnz
lea
inc
or
test
or
sbb
pop
iret
sbb
jno
shrl
mov
popa
nop
pop
int
loopne
add
add
aaa
pop
outsl
pop
mov
loope
pop
pop
test
test
mov
and
push
jecxz
xchg
outsb
jge
xchg
pop
dec
enter
dec
inc
inc
jl
cmp
pop
mov
sbbl
out
mov
int3
sub
xor
mov
or
je
cmpsl
jnp
sahf
jl
cmpsl
and
inc
out
sbb
stc
dec
xor
jno
adc
xchg
sbb
add
add
mov
jg
arpl
mov
add
add
inc
mov
das
mov
shll
and
mov
jbe
iret
outsb
daa
fisttps
cld
mov
cmc
ja
das
jp
daa
inc
test
pop
jae
and
repz
adc
js
les
ja
add
lods
xorl
xchg
sbb
push
or
jle
imul
xchg
inc
add
cmp
ficomps
jle
pop
in
jecxz
aad
xchg
mov
movsb
rcrl
mov
xor
cmpb
add
out
pop
push
sub
mov
les
and
mov
mov
and
jae
rcrb
outsl
and
push
lahf
outsb
aam
je
das
sub
jg
adc
data16
or
push
push
scas
frstor
xchg
mov
jnp
je
push
inc
adc
mov
out
jp
or
xor
rcrl
aam
sub
paddd
xor
add
shlb
cli
clc
cli
clc
sarb
sti
mov
or
andb
add
sub
outsl
data16
clc
dec
jmp
adc
pop
roll
adc
cmp
out
jle
adc
lds
stos
xor
or
mov
into
fstpl
sub
mov
dec
or
cmp
popf
call
and
xor
mov
mov
cwtl
xlat
stos
jno
sub
jo
inc
jle
add
icebp
bound
lods
jg
mov
jo
outsb
push
aam
push
scas
inc
mov
push
std
mov
jp
mov
or
in
xlat
loopne
std
xchg
xchg
adc
dec
add
add
in
jnp
aad
hlt
fs
scas
lods
ss
jecxz
cmp
call
mov
and
rcll
es
mov
push
dec
cltd
or
sub
ss
test
repz
and
add
sub
mov
add
add
jnp
out
mov
adc
sub
add
shll
jmp
mov
pop
cs
push
stos
rcrl
mov
push
imul
out
pop
lret
mov
and
and
xchg
popa
or
pop
ss
stc
mov
xchg
cmp
jg
pop
popf
sbb
mov
lcall
push
mov
iret
call
push
jo
fdivs
fidivl
clc
jp
test
mov
and
jo
mov
in
imul
aam
and
dec
xchg
add
cli
stos
cmp
xlat
add
loope
push
mov
pop
push
fwait
and
into
xchg
inc
jl
push
sub
sub
mov
jae
rorb
push
mov
cmpsl
or
popf
mov
and
imul
or
cmp
add
es
data16
insb
daa
mov
scas
les
add
adc
gs
xchg
mov
add
shll
pusha
adc
das
lret
rolb
fnstsw
cs
call
xchg
out
pop
clc
pop
das
inc
aaa
and
cmp
push
loopne
imul
push
add
test
or
push
inc
cld
sbb
adc
cmp
adc
xlat
ljmp
jbe
fwait
fwait
icebp
out
xor
adc
pop
jecxz
sub
cwtl
mov
imul
mov
xchg
jmp
test
xchg
jno
scas
jns
ret
cli
adcb
cmp
imul
push
mov
into
mov
sbb
testl
test
cmovp
mov
sbb
sarb
or
pop
cmc
fidivrl
or
xchg
aaa
ljmp
loopne
pop
das
bound
add
sbb
add
clc
mov
fldcw
add
cld
add
in
mov
mov
negl
mov
mov
add
jl
cwtl
fwait
mov
mov
int
jno
mov
sub
pop
les
cmp
cltd
jge
faddl
aad
outsl
mov
mov
push
and
and
mov
insl
mov
movsb
mov
cmpsl
pushf
orl
adc
cmp
or
or
aam
loop
out
pop
ja
arpl
pop
lods
mov
and
add
add
jge
icebp
stc
sbbl
outsb
bound
subl
out
out
push
out
fs
jmp
insl
lret
adc
sbb
scas
sbb
inc
shlb
outsb
and
mov
mov
fxch
mov
or
out
sub
and
adc
xor
jnp
cmp
xorb
or
add
repz
push
sti
cmpsl
enter
mov
and
add
and
jnp
lea
jns
cld
outsl
and
xchg
adc
mov
mov
out
cli
jno
inc
scas
ret
dec
push
push
xlat
pop
fidivl
bound
jp
pop
mov
fucomip
movsb
pop
push
mov
pop
cmp
add
xchg
ss
jle
xor
mov
inc
sub
add
jle
nop
das
in
add
mov
mov
es
ds
mov
xchg
sbb
or
push
ficomps
adc
out
inc
in
jp
pop
xchg
xchg
icebp
jne
jecxz
xor
in
adc
ljmp
outsb
pushf
mov
dec
in
pop
xor
pushf
cmp
lea
lds
jbe
insb
imul
notl
push
cwtl
pushf
mov
arpl
xor
and
sub
add
pop
inc
and
or
shr
sub
adc
call
imul
add
add
mov
std
mov
dec
push
cli
dec
push
rcrb
add
lods
mov
adc
out
cmpb
xchg
sub
mov
fs
rolb
sbb
incl
inc
lods
movsl
shll
dec
mov
push
outsb
xor
insb
or
hlt
mov
aas
inc
psadbw
out
xor
imul
icebp
dec
pop
jno
cmp
rcrb
add
das
xchg
in
daa
std
xchg
pop
sbb
pop
xacquire
sbb
mov
jg
push
mov
xchg
mov
dec
pop
push
or
jbe
iret
xor
mov
lret
pop
sub
pop
pop
jne
lock
cltd
mov
lock
in
mov
ds
in
push
test
sbb
mov
push
das
or
jmp
cmpsl
out
enter
or
test
push
popa
test
lock
loop
mov
sti
iret
jp
mov
and
addl
lds
xchg
and
inc
and
lcall
add
add
iret
xchg
test
cmpsl
add
jns
mov
fists
xchg
test
aad
sbb
je
mov
lret
movsb
sbb
cmp
jmp
sub
dec
les
xor
loop
xor
test
adc
mov
mov
aad
int3
movsb
pop
outsb
popf
xchg
imul
mov
fwait
xor
jb
jmp
lea
mov
cld
mov
jne
scas
mov
outsb
cmp
add
insl
inc
mov
push
lods
shlb
inc
xchg
fisubrs
cmp
mov
ret
outsb
pop
inc
lret
push
pop
cwtl
sbb
jne
adc
fwait
shll
imulb
fldenv
push
movsb
mov
inc
cmc
dec
inc
inc
aaa
data16
pop
xor
test
cmp
mov
push
lods
jecxz
xor
rcrl
mov
orl
das
leave
ljmp
fiaddl
ret
ficomps
cmp
lahf
aaa
mov
sti
mov
add
add
inc
mov
mov
out
rolb
mov
mov
xchg
dec
mov
out
clc
arpl
shr
or
and
aaa
add
imul
push
fsubrs
or
adc
push
subl
stos
nop
or
jmp
test
push
mov
mov
mov
sbb
push
aam
jmp
cmp
jbe
sbb
call
das
adcl
mov
mov
cld
inc
xchg
js
jg
les
fs
leave
push
jg
push
movsl
jg
fisttpl
icebp
xchg
stos
pop
add
mov
sbb
pop
into
mov
repz
mov
insb
test
lahf
push
adc
fwait
pop
sub
sbb
pop
cmpb
lret
sub
imul
add
add
lods
xor
mov
cmp
pop
inc
xor
test
add
add
insl
inc
ljmp
jnp
or
daa
mov
ja
xchg
sub
repz
mov
movsb
stos
mov
add
lock
mov
mov
shlb
cmp
xor
add
inc
pop
repz
fcmovbe
popf
cmp
shr
and
cmp
inc
popa
in
cmp
call
mov
fs
loopne
lret
sub
shll
arpl
xlat
lahf
or
test
out
jno
add
mov
or
mov
pop
fsubs
add
sbb
movsl
fmull
push
test
jp
fmulp
lret
lcall
adc
mov
mov
ror
xchg
lock
xchg
xchg
cld
dec
ss
ss
imul
cmp
lea
push
inc
lcall
or
pavgb
movsb
fcomip
imul
into
in
cmp
mov
add
add
lret
mov
or
jmp
aas
out
xor
add
xchg
mov
add
cld
pop
rclb
test
adc
fsubrp
push
fst
cmpb
leave
iret
pop
rorl
dec
in
mov
mov
and
adc
sbbl
inc
jl
sub
push
in
add
sbb
fs
xor
ret
jmp
mov
sarb
loopne
int
lock
test
dec
cmp
clc
pop
push
mov
jp
aam
push
xadd
fs
bswap
and
xor
cs
sti
xlat
cmp
jl
es
movsb
dec
adc
jb
movl
std
sub
mov
adc
bound
jg
mov
or
adc
ja
dec
fnstenv
mov
je
shlb
or
sbb
imul
bound
and
jl
and
fs
push
test
sbb
mov
daa
sahf
add
add
sti
pop
jge
neg
hlt
add
popf
mov
add
add
inc
mov
sbb
dec
push
leave
jbe
stos
or
pop
retw
push
pop
adc
in
xchg
in
add
int
jno
xor
repnz
js,pn
dec
mov
adc
out
imul
mov
adc
xchg
dec
lock
sbb
or
mov
mov
test
orb
mov
jns
popa
rcrb
xchg
ds
mov
adc
outsb
xchg
add
sub
out
movsl
pop
xor
cltd
clc
jo
xchg
cmp
cmp
into
jmp
mov
mulps
mov
test
or
push
pushf
add
xor
shrl
mov
call
lret
mov
adc
cld
imul
incb
in
add
pop
or
push
mov
data16
xchg
aam
cmp
push
cltd
add
imul
jmp
mov
push
stc
rep
or
push
add
add
fsub
std
in
popf
in
stc
jmp
loop
mov
mov
add
add
inc
test
ret
lret
ficoms
or
inc
sti
pop
jno
out
inc
jecxz
bound
add
adc
cmpsl
and
mov
sbb
xchg
mov
sub
fprem
mov
lret
jnp
mov
jecxz
insl
mov
insl
xor
xchg
cld
jb
out
lock
stc
dec
jae
and
in
and
leave
mov
xor
sbb
insl
and
rorl
mov
mov
push
ss
xchg
add
push
mov
popa
xor
mov
xor
outsl
cwtl
and
aas
lret
pop
incb
and
fsubl
lret
pop
shrb
cmp
mov
or
inc
outsl
mov
inc
jo
ret
dec
loope
mov
add
mov
movsl
mull
xor
jae
je
scas
mov
or
lcall
mov
or
std
in
leave
arpl
xor
add
add
jp
jnp
sti
xchg
jle
jp
lods
push
mov
mov
add
add
cmp
or
cmpsb
lahf
sbb
inc
andl
cmp
pop
dec
xchg
fbstp
and
cmp
cmp
out
fs
jmp
pop
xor
dec
cmp
sub
xchg
sub
inc
fisubrs
pop
int3
aam
inc
xor
cmp
push
test
std
sbb
adc
jp
cmp
into
lret
call
pop
arpl
jnp
movsb
dec
sub
es
hlt
cmpsl
cltd
ds
push
cltd
mov
std
mov
inc
lret
iret
jle
mulb
loop
aaa
jnp
daa
out
xchg
sbb
sub
fdivs
sbb
sbbb
sub
push
xchg
loop
mov
xor
shl
sbb
clc
iret
pop
out
sbb
add
std
fsubr
inc
adc
sbbl
pusha
and
push
jge
imul
shrb
add
push
sti
decb
mov
sub
xor
add
test
lock
mov
mov
insb
push
jp
push
bound
es
lods
add
test
jl
push
daa
mov
push
out
mov
aaa
shr
clc
ja
mov
stc
dec
mov
sbb
mov
push
jmp
call
or
xor
jb
inc
pushf
dec
or
ja
mov
aaa
aad
xchg
shl
sbb
jge
lret
popa
sbb
adc
fldl
in
insb
test
and
push
sub
pop
mov
lods
nop
push
pop
dec
dec
push
inc
leave
sub
clc
fidivl
orb
std
fs
nop
insl
sub
sar
xchg
cmp
scas
xchg
xor
mov
cmpsb
mov
notb
rolb
stos
mov
jbe
inc
cmp
fs
bnd
lcall
cmovle
dec
dec
test
enter
loop
loop
mov
jmp
sub
das
jg
cwtl
movl
add
push
ret
cmp
xor
hlt
mov
add
add
and
out
cmc
dec
dec
sbb
mov
sbb
pushf
xchg
ja
shll
cmp
mov
mov
push
arpl
jo
sub
into
jl
fstpl
stos
cmp
in
xchg
push
loope
push
mov
dec
cwtl
shrl
push
cs
mov
add
mov
iret
jl
inc
dec
addr16
inc
hlt
popa
adc
jle
repz
xor
subb
adc
xchg
stos
push
out
push
repnz
hlt
sub
dec
mov
sub
in
ljmp
xor
das
subb
xchg
xor
pop
cld
fstpt
jecxz
stc
jmpw
ja
hlt
dec
jle
xor
mov
addr16
das
imul
dec
daa
sbb
cmp
js
aaa
fs
ds
gs
jle
adc
andl
push
packuswb
jb
out
add
add
cmp
jge
stos
lea
shrb
sbb
add
add
pop
fwait
jle
fsubl
in
sbb
fsubrl
scas
sbb
push
pop
inc
fdivrs
stos
in
nop
mov
gs
pushf
dec
into
in
fmull
inc
outsb
xor
imul
sbb
add
hlt
adc
ficoml
and
and
pop
stc
cs
outsl
cmpsb
mov
jns
mov
push
jp
xchg
rolb
fs
cmp
mov
loop
mov
rcr
lcall
push
pop
mov
mov
lock
sub
mov
push
sbb
ss
ja
cltd
rclb
jmp
and
leave
xchg
pop
mov
and
push
mov
inc
push
je
xchg
and
arpl
fsts
dec
lock
je
cs
mov
mov
out
movsb
and
gs
imul
push
ljmp
dec
shrb
loope
adc
int
sbb
push
jle
add
divb
rclb
nop
lcall
aaa
add
add
pushf
xor
fcmovnbe
aaa
add
lds
hlt
pop
inc
les
pop
push
out
sahf
cli
shrl
mov
testb
clc
sub
aas
or
je
dec
push
push
sbb
in
ficoml
inc
notb
xchg
nopl
rcll
and
imul
xchg
mov
dec
jl
sub
xor
inc
in
les
stc
outsb
sbb
or
shlb
sbb
ljmp
dec
or
jmp
add
test
add
mov
push
mov
cmpsb
aas
sub
test
pop
jp
mov
movsb
dec
mov
push
pop
imul
dec
adc
jecxz
paddusw
jge
aad
insl
jp
and
jae
out
inc
adc
int3
or
jecxz
mov
ret
lret
pushf
jmp
movsb
lods
lret
mov
in
je
std
or
xor
roll
add
jl
dec
jbe
idivl
or
incl
aad
add
add
push
adc
cmp
pop
xor
cltd
mov
insb
dec
adc
out
mov
outsb
pop
add
jno
mov
iret
clc
ja
in
adc
mov
cwtl
or
lods
popa
push
outsl
rcrl
sti
mov
sbb
sub
je
inc
movsl
xor
outsl
or
fwait
add
xchg
daa
dec
dec
cli
testb
mov
hlt
xchg
insl
data16
mov
loope
xor
inc
jne
jns
dec
xchg
mov
leave
cmc
and
cmpsb
pinsrw
das
loope
inc
in
retw
cmp
push
mov
or
dec
mov
hlt
call
fstpt
adc
in
pop
movsl
notb
insl
stc
ljmp
repnz
call
in
aad
outsl
cmp
fcmovb
push
jbe
cmc
and
int
xchg
lds
shll
or
rolb
scas
lods
out
test
push
dec
outsl
arpl
or
cmpsb
jg
adc
cmpsl
add
add
outsb
sub
stos
fs
jmp
leave
aas
idivb
inc
fidivrl
add
add
into
push
dec
push
xchg
outsb
int3
xor
fnstsw
fdivrs
rcrb
push
push
fs
pop
cmp
aas
jmp
frstor
fistpl
call
push
cwtl
shlb
icebp
push
pop
rcr
clc
imul
call
xor
inc
ficoml
int
sub
fiadds
aaa
insb
jns
jl
lahf
out
pop
mov
push
ret
cmp
hlt
inc
test
dec
mov
xchg
fsubrs
mov
sub
mov
cmp
inc
cwtl
jmp
lret
aad
cltd
pop
xor
scas
xchg
inc
lret
jle
mov
cli
and
xor
movsl
mov
test
cmpsb
xor
idivb
lods
cmp
push
lahf
rcl
add
pop
mov
sub
cmpsl
imul
mov
roll
repnz
pop
jne
cmp
outsl
xchg
jle
inc
cltd
pushf
and
pushf
pusha
repz
nop
mov
jp
cld
inc
popa
mov
in
add
add
insb
pop
pushf
scas
fistpll
outsl
mov
cmp
add
daa
jns
std
lods
pop
or
stc
sbb
fisubl
add
pop
add
cmp
aas
xchg
movsb
mov
sub
or
jl
cmp
jge
adc
adc
rcrb
xor
jle
inc
xchg
dec
clc
xchg
mov
test
jb
movsb
fadds
leave
xchg
dec
call
add
andb
shll
inc
cmp
push
sub
xor
jg
fistpl
inc
sub
add
iret
stos
adc
push
jp
cmp
jg
pop
xchg
rcrb
mov
sub
rcll
and
dec
xchg
out
loopne
movsl
xor
xor
cld
rorb
cmpsb
xorl
repz
dec
fs
mov
pushf
xchg
sbb
mov
outsb
jp
mov
pop
lods
inc
inc
fdivr
test
add
cmp
movsb
push
sbb
cmp
add
add
xchg
adc
dec
push
fs
mov
inc
inc
pop
pusha
mov
daa
jnp
dec
dec
in
fdivrl
inc
xlat
and
mov
mov
cmpsb
lret
sbb
sub
imul
mov
push
out
sub
scas
cmp
cmp
arpl
xor
mov
pop
adc
jmp
lcall
loopne
add
pop
mov
or
jecxz
add
std
and
xchg
push
sahf
loopne
inc
sub
or
mov
push
mov
jp
mov
out
test
xor
jecxz
xchg
outsl
jp
or
loopne
sbb
shrb
movaps
inc
daa
mov
mov
lea
fwait
push
in
cmp
aas
sti
out
xorl
mov
orb
fstpl
xor
imul
adc
push
stos
lods
jb
inc
push
add
add
adc
jmp
jo
ds
add
add
adc
mov
icebp
cld
insl
clc
sub
mov
sbb
pop
imul
mov
mov
test
in
test
fstl
in
test
shll
ja
push
add
lea
jge
push
lret
mov
sbb
and
xchg
pusha
aas
cmp
jmp
xlat
mov
ror
sarl
mov
push
sub
mov
pushf
dec
adcb
mov
popa
mov
mov
sbb
lods
in
or
mov
adc
cmpsb
mov
faddl
int
cltd
mov
mov
lods
add
cmp
cmp
lahf
pop
push
mull
xchg
cwtl
ljmp
test
mov
arpl
xor
pop
add
aas
sbb
mov
and
and
jo
ret
aaa
inc
and
sbb
test
jbe
add
add
repz
cmp
lods
repz
mov
int3
imul
out
cmp
add
insl
cmp
mov
jns
xor
cmp
cmc
xor
scas
jg,pt
inc
and
icebp
lret
add
or
fcomip
shrl
jge
mov
fmull
jg
xor
push
jne
jmp
bound
shrb
push
mov
dec
sbb
and
cs
int3
and
dec
ret
cli
dec
add
test
mov
cmc
ja
or
pop
and
int3
js
adc
xchg
leave
dec
add
push
dec
insl
xor
sbb
loopne
loop
push
pop
push
lcall
cmp
lret
adc
lods
rol
jne
xchg
lds
dec
or
mov
mov
cmp
jg
jno
call
dec
scas
pop
mov
xchg
push
sbb
pop
push
aad
inc
testl
mov
lock
add
pop
iret
add
add
daa
push
cld
push
std
jmp
dec
push
jle
repz
add
xchg
push
shrl
xchg
xchg
shlb
push
xchg
jp
xor
mov
fstpl
adc
mov
push
pushf
lret
popa
sub
arpl
mov
mov
test
mov
fimull
lret
add
loopne
and
scas
es
bound
daa
std
jl
subb
jg
lcall
jp
insl
in
leave
enter
loopne
stos
outsl
js
jbe
hlt
mov
stos
fsubrl
cltd
xchg
adc
jl,pt
mov
dec
test
jge
pop
fcmovnb
mov
int3
nop
das
in
ds
movsl
push
adc
outsb
cmp
lods
out
pop
cmp
xchg
inc
stos
hlt
xor
cmpsb
dec
mov
sbb
adc
aad
sub
jb
inc
incb
mov
rcr
push
popa
mov
xor
mov
incb
add
dec
push
add
sbb
dec
push
out
aad
add
or
add
fists
or
jbe
subb
pusha
out
rcr
jmp
data16
cmpl
pop
mov
xor
ss
jae,pt
add
mov
push
jge
ret
xor
xor
ds
cli
jp
pop
dec
call
int
pop
sbb
cmpsb
pop
addb
cmc
adc
jmp
test
push
jecxz
dec
mov
ja
cmp
mov
std
dec
fstps
xchg
inc
mov
jmp
psubusb
inc
aas
ficomps
mov
xchg
mov
dec
test
or
push
and
mov
jb
inc
pop
sbb
jmp
mov
test
data16
dec
dec
mov
sbbl
mov
psubusb
add
or
mov
cmp
and
out
das
std
loopne
scas
sub
cmp
jbe
inc
and
xchg
testl
test
push
add
add
idivl
or
xchg
out
mov
inc
add
add
idivb
mov
outsb
push
push
mov
ljmp
or
mov
jge
lcall
pop
lds
adc
ficompl
push
xchg
cli
add
push
in
adc
sub
push
lret
jo
sbb
mov
jecxz
js
repnz
sub
lcall
inc
das
iret
mov
andl
stos
mov
mov
inc
jmp
pop
push
cmpsb
dec
and
cmp
ja
or
imul
stos
jno
hlt
test
jg
pusha
mov
cltd
stos
add
mov
jge
adc
inc
ja
jmp
xchg
popf
xor
out
fmull
movsl
jmp
cs
xlat
pop
sub
sub
addr16
pop
mov
mov
cmc
or
pop
pop
insl
mov
cmp
mov
inc
mov
jp
add
add
jg
xchg
orl
cmp
inc
add
add
in
add
insl
and
outsb
sbb
ds
mov
jle
nop
and
or
popf
mov
mov
pusha
xchg
es
pushf
cmp
sub
lcall
pop
mov
outsb
mov
mov
andb
cmp
loop
jg
dec
push
cmp
call
jp
push
cmp
pop
mov
jle
loop
xchg
std
xor
push
push
imul
add
outsb
stos
xchg
mov
push
cld
pushaw
ficoms
dec
dec
sbb
shll
mov
fs
in
sub
cmc
mulb
dec
lock
pop
sahf
jp
add
cld
jle
fimuls
divl
icebp
adc
cltd
out
or
xchg
xchg
push
mov
stc
loope
shrl
cld
cmpsl
inc
rcrb
push
ret
pop
dec
dec
lahf
lds
pop
xchg
mov
daa
aad
das
push
clc
xor
addr16
push
add
add
push
dec
lret
jmp
imul
aaa
je
xchg
cli
cld
pop
inc
add
add
in
ds
adc
push
or
sarl
scas
mov
push
xor
and
daa
roll
test
push
addb
xchg
or
aaa
pop
inc
pop
pop
lods
sub
fsubp
bound
rorl
arpl
stc
in
bound
jle
xchg
jecxz
sub
push
mov
jle
jl
cmpl
pop
push
sub
and
outsl
add
pop
imul
call
mov
push
cld
pushf
mov
mov
daa
ja
pushf
push
cmpsl
loop
push
mov
je
mov
push
or
je
into
jmp
xchg
adc
xchg
aam
add
fstpt
sub
pop
outsl
es
stos
test
mov
jae
test
pushf
out
out
ja
jns
mov
mov
cmpsb
pop
sbb
add
icebp
mov
call
sbb
sbb
filds
jne
cmp
xchg
add
add
cwtl
loope
std
jge
cwtl
xchg
push
sub
xor
or
add
add
out
loop
movsb
pop
pushf
cmpsb
fcoml
or
dec
mov
jg
popa
push
fists
out
inc
fucom
shlb
push
cmpsl
mov
or
enter
pop
aad
push
jne
mov
pop
adc
mov
cmp
aas
push
mov
pop
mov
leave
mov
and
das
and
jne
cmp
test
jb
inc
jae
cmp
mov
repz
rcl
aam
jecxz
jmp
cld
addr16
lcall
add
xor
inc
fdivrl
mov
sbb
dec
and
cmpsl
jno
les
pop
mov
and
jl
rorb
or
jmp
fistpll
jg
jp
int
mov
push
xchg
cltd
mov
mov
jle
pop
cmpsl
sub
dec
daa
insb
enter
cmc
xchg
inc
test
sub
outsb
dec
loop
aaa
cltd
push
inc
int
pushf
add
add
jns
xor
jg
push
sub
adc
add
inc
insb
imul
fbld
and
mov
cli
stos
or
test
mov
bound
push
cmp
add
popf
outsb
ljmp
cmc
mov
gs
lods
add
mov
cwtl
inc
adc
xchg
inc
aas
fcoml
jne
mov
in
cmp
sbb
mov
scas
jge
out
jne
and
int3
and
insb
mov
in
push
and
or
pop
dec
out
not
xlat
pop
fbstp
icebp
adc
rcl
push
cmp
xor
lret
into
aad
lods
cmp
mov
mov
orb
sub
sub
sub
inc
into
test
shll
enter
add
push
aad
fsubl
jecxz
sbb
cmovns
jns
ret
loopne
scas
test
push
pop
cli
sbb
rolb
xor
add
ret
jg
decl
rol
std
add
cmp
inc
add
add
xor
inc
inc
sbb
adc
out
jge
ss
rcrl
into
mov
add
xchg
fidivl
std
ss
adc
mov
pushf
and
add
dec
sub
stos
idivb
in
andb
and
sbb
jl
and
orl
outsl
or
in
cmp
lret
idivb
jns
mov
arpl
out
sbb
adc
dec
icebp
push
mov
mov
cmp
dec
mov
scas
or
adc
or
adc
js
pop
cltd
cmp
shl
pop
dec
notl
stc
inc
mov
jge
and
into
mov
add
cld
test
push
bound
gs
ret
loopne
fdivl
cltd
dec
adc
lret
xor
lcall
outsb
outsl
outsl
lds
xchg
mov
gs
mov
addr16
cmc
loopne
xchg
push
shll
and
lods
fsubrs
cld
aas
loopne
add
add
das
mov
out
aad
xor
sbb
add
sbbb
sbb
scas
mov
cmp
jo
insb
pminub
outsb
pop
xchg
subb
cmp
cld
dec
cli
cmp
loope
cltd
cmp
popa
xlat
and
leave
lcall
int3
movsl
inc
sahf
stos
and
movsb
push
aaa
out
mov
and
xor
sahf
test
pop
jecxz
in
push
pop
mov
lret
je
push
popl
push
xchg
aam
lods
nop
insb
aam
pop
cmpsl
pop
in
fisttpll
mov
pop
and
movsl
mov
add
mov
cmp
xor
or
inc
das
jecxz
out
adc
cmp
or
orb
sub
xor
mov
daa
add
xchg
ret
lock
cmp
xchg
icebp
inc
pop
jno
jmp
movsb
cmpsl
push
inc
cmp
cmp
fnstenv
stc
jo
pushf
xchg
xchg
mov
push
call
inc
mov
add
add
hlt
gs
dec
adc
stos
adc
dec
add
add
push
sbb
adc
push
jge
push
das
xchg
pop
mov
dec
pop
in
in
lock
je
aas
jb
xor
xchg
xchg
jecxz
jno
cmp
je
cli
dec
movsb
das
pop
nop
adc
cmpsl
into
push
repnz
mov
inc
pushf
shl
cltd
pop
mov
pop
inc
clc
shlb
iret
mov
pop
jo
sub
jl
test
lahf
sbb
in
and
insl
ljmp
ficoms
mov
mov
adc
jns
in
aas
xor
int3
ljmp
dec
lods
lds
shlb
js
mov
or
mov
movsb
test
xchg
jg
hlt
roll
push
aas
test
aam
adc
jmp
sahf
dec
dec
js
or
xchg
jnp
adc
sahf
ljmp
add
pop
cli
rol
add
push
sub
fidivrs
test
call
jl
iret
inc
cwtl
pop
add
add
aas
gs
pop
repnz
dec
add
add
das
bound
fildl
sbb
into
mov
push
pop
xor
xbegin
stc
ljmp
mov
mov
adc
pop
ljmp
lcall
mov
inc
add
fnsave
jge
dec
mov
push
cmc
jns
in
imul
push
ljmp
mov
lret
outsl
lods
imul
les
insb
xor
push
stc
cs
fstl
int3
testl
insb
inc
ror
jb
xchg
repnz
ss
and
aas
xchg
mov
mov
jno
mov
mov
fcompl
mov
in
scas
fwait
and
sub
pop
imul
sub
aas
lcall
ljmp
dec
in
mov
xchg
shr
outsl
jmp
cld
xor
imul
sub
and
add
mov
out
fisttpll
lock
aam
dec
add
add
sarl
xor
or
pop
popa
mov
or
pop
mov
subb
jle
out
leave
fnstcw
cld
push
pop
xor
fists
mov
mov
leave
dec
cmpb
sahf
test
leave
es
jmp
flds
rolb
sbb
push
dec
jne
jo
jnp
mov
mov
shrb
or
mov
mov
fstps
fucomi
mov
xchg
mov
aam
ret
xchg
mov
lds
adc
cmp
xchg
dec
pop
mov
xchg
or
out
fnsave
and
jp
pop
inc
push
sahf
xor
mov
enter
lcall
xor
ljmp
dec
mov
sarl
icebp
ss
sbb
jns
add
loopne
mov
xchg
in
jno
aam
adc
int3
inc
inc
sti
add
ja
or
cmp
push
testb
add
mov
ljmp
add
add
add
mov
hlt
movsb
rcr
repz
test
repnz
pop
movsl
add
mov
loope
dec
mov
xchg
cmp
push
sbb
xor
jo
add
imul
ljmp
fbld
mov
dec
xor
mov
aam
jle
ljmp
xchg
pop
cld
inc
into
enter
insb
in
test
sbb
sbb
lea
mov
jecxz
movsb
sahf
lea
hlt
stos
or
pop
or
int
jae
add
mov
push
repnz
mov
mov
cmp
dec
imul
rcll
sahf
sub
cmp
and
cmp
inc
addr16
jg
push
popa
out
and
outsl
or
dec
cmp
mov
ret
mov
mov
jb
sub
out
je
js
fdivrs
mov
loopne
cmpsl
scas
stos
inc
stos
mov
fistpll
mov
and
hlt
push
add
add
jmp
out
aas
jo
sahf
jb
and
xchg
xor
add
add
sbb
cwtl
fwait
pop
loopne
inc
cmc
notl
add
data16
xchg
adc
xor
les
xor
mov
fimull
bound
dec
jne
popf
add
loope
push
mov
out
test
lea
xchg
cs
cmp
push
sub
sbb
xchg
jnp
leave
into
add
xchg
push
mov
mov
push
mov
push
mov
test
jbe
jo
lods
sub
adc
test
xchg
sti
lea
inc
aam
and
hlt
ficoms
inc
rcrb
notl
insb
stc
daa
add
xchg
xchg
inc
mov
jle
jl
imul
shr
cmp
pusha
add
repnz
loop
int3
ret
nop
pop
xchg
mov
aas
js
and
add
xchg
sub
mov
add
pop
push
mov
pop
add
push
add
add
imul
out
mov
mov
repnz
cmp
add
jnp
fcoms
and
bound
xchg
ds
xor
and
cld
inc
sbb
xchg
xchg
fbstp
les
repnz
jne
addr16
sub
and
adc
cmp
in
xor
cmpsb
jle
test
fwait
loopne
xor
sbb
jp
add
sbb
and
bound
push
out
loope
add
or
push
mov
das
les
cwtl
push
xor
fstl
jo
pop
inc
fldt
mov
iret
push
sub
ret
mov
arpl
adc
xchg
daa
xor
mull
movsb
and
mov
arpl
lret
pop
cmp
xor
sahf
js
pop
mov
mov
addr16
pop
xchg
and
inc
cmp
xchg
dec
xorl
loop
add
dec
mov
xchg
xchg
mov
dec
dec
adc
push
rolb
lock
jae
cmp
stos
jp
add
add
add
dec
stc
mov
ljmp
ds
add
add
shll
xchg
mov
and
cwtl
adcl
add
adc
loop
jp
loopne
pop
stos
repz
add
jecxz
lcall
mov
jge
xchg
dec
test
aas
stos
jle
or
lds
subl
push
ja
or
jge
sbb
or
lock
les
clc
or
jge
push
popf
sub
xor
mov
mov
dec
or
lods
rolb
hlt
pop
cwtl
movsb
push
lock
pop
imul
aas
mov
cmp
mov
loope
fisubrl
fcoml
inc
rol
ret
andl
gs
aas
test
mov
inc
stos
aaa
loope
dec
jmp
arpl
sbb
push
adcl
out
fdivrp
xor
or
in
enter
mov
fcmove
scas
sbb
ja
lahf
xchg
repnz
add
add
jg
cld
lcall
dec
inc
dec
add
add
cltd
sbb
lds
sub
mov
mov
adc
in
inc
rolb
jo
js
sahf
mov
cmpsb
sbb
sbb
mov
cmp
pop
mov
add
adc
xchg
jae
ret
lods
lock
lahf
daa
mov
ss
orb
pop
repnz
leave
aaa
jmp
fs
pop
std
mov
lods
jne
jg
mov
pusha
jae
jo
dec
pop
jecxz
fldenv
or
and
inc
or
inc
and
dec
orl
in
adc
jle
cld
push
jbe
inc
push
rolb
sbb
pop
xor
shrl
xchg
in
daa
rcrl
lock
iret
add
fnstenv
inc
pushf
scas
dec
xlat
scas
jbe
xor
pop
fidivrl
js
add
loopne
ret
sub
add
mov
xchg
mov
pop
fdivrl
add
add
jmp
test
jbe
inc
cmc
enter
loopne
sbb
add
sbb
jo
jle
or
dec
xchg
sahf
bound
movsl
or
jle
mov
mov
jo
scas
and
roll
out
out
iret
jl
addr16
inc
mov
adc
mov
xchg
or
inc
pop
addr16
rol
xchg
pop
in
push
xchg
mov
cmp
icebp
add
shlb
nop
push
cmp
cwtl
in
mov
int3
pop
add
fidivrs
shlb
jp
dec
lods
andl
popa
jmp
cmp
clc
mov
jg
mov
cmp
aaa
add
and
add
and
dec
xchg
cmc
shl
cwtl
ss
jb
push
cmp
aad
add
popa
mov
fsubrl
pop
dec
add
inc
cmp
mov
iret
clc
aas
lret
fs
pop
pop
test
add
inc
mov
push
push
jmp
push
mov
mov
add
cmp
adc
ret
sub
nop
cmp
pop
mov
daa
or
sbb
cmpsb
repnz
test
xchg
push
lock
xchg
mov
popa
mov
imul
lret
or
imul
jl
add
adc
pop
mov
enter
movsb
je
xchg
lods
fisubrs
sbb
fisttps
mov
stc
push
pop
into
sub
icebp
inc
mov
or
lods
or
push
jb
fildll
adc
mov
pop
bound
fsubrl
sub
mov
mov
test
xor
mov
fwait
pop
cmc
addr16
out
dec
hlt
add
and
and
sub
adc
in
pushf
jge
mov
bound
mov
or
inc
inc
or
mov
mov
cmp
add
fsubrl
mov
out
cmp
ret
or
call
push
add
add
mov
jns
aam
jecxz
xchg
lret
add
push
test
pop
pushf
pop
cmp
mov
sahf
and
fnstsw
mov
test
arpl
xchg
push
imul
xchg
mov
mov
aam
mov
dec
rclb
jae
lds
mov
dec
dec
pop
pop
aad
pushl
cwtl
lahf
push
push
and
mov
loope
mov
inc
pop
cwtl
push
insl
adc
and
test
dec
mov
sarl
int3
push
xor
push
jmp
mov
out
cld
adc
int
add
scas
xchg
shll
ds
cli
jle
filds
aad
inc
add
pop
movsb
dec
inc
test
xor
jne
push
in
out
mov
jns
inc
xor
mov
inc
mov
jmp
fs
and
mov
jge
jno
addb
add
push
shll
out
pop
pop
pushf
push
cltd
push
stos
jp
push
add
add
imul
mov
cmp
push
adcl
fstp
fs
adc
mov
inc
test
sub
lret
cmc
sbb
mov
ret
loop
cmp
cltd
into
mov
insl
pop
lods
pop
xchg
mov
jl
ljmp
xor
js
push
outsb
aas
js
adcb
ffreep
adc
test
sbb
mov
lea
jae
scas
xor
shlb
test
inc
outsb
xor
cmc
enter
inc
mov
push
ds
pop
xchg
mov
ljmp
fcmovnb
fs
push
push
sub
push
mulb
push
sbb
icebp
aam
stos
in
inc
add
add
or
adc
push
jbe
fidivrs
mov
xchg
ffreep
dec
xchg
xchg
fbstp
push
sub
shlb
cli
in
iret
add
divl
in
pop
cmp
inc
imul
or
add
stos
push
lcall
hlt
mov
scas
xor
pop
push
add
add
or
mov
stos
fnstsw
int
push
rorb
mov
bound
rcrb
mov
fmuls
push
or
sbb
das
cs
add
dec
adc
in
sbb
out
or
jnp
push
jl
js
lods
in
sub
pop
add
sub
jne
cltd
mov
shlb
insb
clc
xchg
jl
mov
mull
fs
lret
inc
aam
mov
pushf
jo
push
cmp
or
rcrb
adc
negb
push
add
mov
jp
dec
imul
xchg
xor
xorl
xor
cwtl
call
outsl
repz
sub
loopne
dec
pop
cmp
js
aam
mov
pop
pushf
fcomps
mov
fs
add
jae
inc
test
leave
jl
rol
dec
mov
lcall
add
jbe
idiv
imul
mov
jns
push
add
add
pusha
cmp
mov
mov
push
or
aam
mov
xchg
sbb
das
adc
dec
or
lret
int3
insl
pushf
xor
xor
jge
pop
push
pop
jg
pop
int
push
icebp
sub
cltd
arpl
lock
leave
pop
js
lds
daa
fiaddl
and
add
jge
repz
fimuls
inc
or
dec
lock
int
lods
pop
push
and
mov
movsl
xor
mulb
mov
add
and
scas
out
push
out
loope
je
ret
sub
mov
mov
push
bound
dec
jnp
bound
cmp
lcall
sub
daa
mov
verw
imul
pop
xchg
xchg
mov
fimull
and
mov
jae
sub
ficomps
rorb
add
jae
fwait
cmp
stos
sarb
push
add
add
mov
sbb
pop
jp
outsb
nop
push
repnz
adc
pop
imul
sub
xor
and
jne
out
dec
or
lds
cmpsl
xacquire
negl
push
sub
and
push
fwait
sahf
push
or
hlt
adc
jle
pop
dec
cmp
jle
je
xchg
jle
dec
imul
pop
jecxz
dec
scas
in
xchg
and
jmp
cmp
out
das
lds
jp
xchg
mov
ds
and
sub
and
mov
xchg
je
mov
pop
dec
push
and
push
xor
mov
and
popa
arpl
fildl
pushl
cltd
mov
int
pextrw
cmp
dec
sbb
jbe
mov
xchg
loop
adc
test
adc
out
cltd
std
mov
fs
sbb
in
ljmp
add
add
clc
mov
and
hlt
xor
dec
imul
add
icebp
mov
xchg
sarb
cmp
push
ret
add
ss
js
test
xchg
shll
dec
mov
aaa
and
jne
push
cmpsb
xor
xchg
cli
mov
dec
jo
xchg
add
pop
ds
lret
pop
sbb
pop
fldl
icebp
mov
and
xorb
mov
jp
push
pop
leave
hlt
cld
cmp
adc
sub
cmp
movsl
xor
pop
popa
mov
inc
lock
enter
mov
popa
popl
sbb
repnz
or
sbb
stc
jnp
cmpsb
inc
aas
js
lcall
das
jo
arpl
or
jae
sub
dec
popa
inc
lods
std
cmpsl
gs
out
mov
or
sahf
icebp
lcall
inc
lds
aas
and
add
ljmp
iret
xchg
xor
add
shr
mov
fucompp
mov
add
loope
frstor
sub
adc
cmp
xchg
mov
mov
sbb
pop
outsb
dec
out
int3
cmp
jae
sub
push
dec
inc
aas
ljmp
dec
xchg
andb
add
ds
jge
ja
mov
lods
js
rcrb
mov
and
aas
sub
mov
mov
mov
out
jle
pop
xchg
test
ret
pop
test
jle
sbb
sbb
inc
jl
inc
mov
test
pusha
dec
loope
cmp
bound
fmull
add
dec
outsb
cmp
enter
outsb
sub
pop
push
adc
shlb
das
pop
jecxz
and
or
sbb
pop
xchg
pop
fstp
shrb
dec
inc
popf
adc
xorb
in
ss
insb
mov
lret
stos
lret
lret
bnd
xchg
shr
xchg
and
fidivrs
add
add
mov
lds
aad
cli
xchg
add
xor
in
push
addr16
mov
mov
sub
mov
dec
insb
pop
jb
popa
mov
in
cld
push
cmp
shll
jge
and
xor
in
loopne
jge
mov
jmp
scas
and
xchg
cmp
outsb
imul
or
pop
fmul
push
push
mov
push
pusha
sbb
iret
xor
jno
lock
xchg
into
scas
mov
jnp
xchg
mov
cmp
in
or
mov
push
test
mov
mov
xor
dec
mov
mov
mov
movsb
or
cs
aas
loope
push
sub
test
ror
leave
push
imul
fadds
fimull
pop
jb
cmp
jl
xor
lcall
sbb
xchg
jg
push
mov
dec
or
fisttpll
add
mov
and
das
cmp
pusha
or
pop
pop
jp
add
add
jg
in
push
sbb
mov
pop
fimuls
sub
insl
inc
xchg
repnz
fsubr
int
jge
bound
pop
insb
jne
xor
aas
insl
mov
jmp
and
frstor
mov
mov
xor
fsubl
mov
fsubl
add
movsl
fcoml
shr
inc
jle
cmp
inc
lcall
in
cmp
fbld
movsb
jnp
shll
ja
sbb
insl
xchg
cs
filds
sub
pop
lcall
in
fstpl
push
cmpsb
sbb
shrl
sbb
pushf
or
gs
loope,pn
lret
sbb
xchg
pop
je
lea
scas
xchg
sub
jno
js
jo
imul
mov
sahf
pop
mov
pop
mov
jge
xorl
add
movsb
jae
jnp
mov
ja
mov
mov
add
add
push
pop
xor
mov
lret
sbb
out
add
cmpsb
sub
int3
push
cwtl
or
fstl
cmpsl
jmp
mov
or
popa
aaa
dec
js,pt
cwtl
add
popf
outsl
mov
and
mov
xor
aaa
popa
mov
push
movl
or
stos
outsb
pop
mov
mov
ds
test
das
fidivl
sbb
inc
dec
cli
arpl
lods
push
orb
mov
repz
movsl
aam
xor
inc
fdivrl
aaa
leave
mov
cmp
and
and
in
dec
sbb
int3
scas
lret
sub
mov
sbb
push
mov
js
xchg
push
mov
mov
inc
loop
nop
sti
xor
out
int
cltd
inc
xchg
fcomps
scas
inc
jns
inc
cmp
lret
filds
and
add
xor
xlat
out
cld
mov
dec
testb
add
icebp
icebp
jnp
adc
and
push
push
push
out
xor
xchg
cli
cmp
sahf
stc
mov
incb
cmp
xchg
repz
movsb
in
sub
enter
ficoml
in
pushf
sbb
xchg
inc
pushf
xchg
cmp
packssdw
sbb
lds
popf
pop
ja
repz
in
hlt
sbb
and
sub
pop
add
or
pop
add
or
inc
jge
mov
and
imul
cmp
es
roll
sbb
fwait
aam
fs
outsb
or
cmp
fwait
mov
ror
fistl
or
xor
inc
inc
repnz
mov
mov
mov
xchg
xchg
pop
shlb
pusha
jg
popa
dec
scas
xchg
insb
mov
add
mov
push
jno
ja
cli
std
mov
push
clc
adc
xlat
add
add
mov
add
push
add
add
cmp
mov
push
outsb
xchg
jne
int3
cmp
jp
and
sti
dec
faddl
into
ljmp
lcall
loop
ret
in
add
dec
pop
aaa
dec
pop
shlb
inc
outsl
fwait
mov
mov
sub
negl
icebp
inc
imul
shlb
lret
fsqrt
xor
icebp
pop
scas
ret
js
add
dec
dec
mov
pusha
dec
push
jno
leave
mov
flds
fwait
pushf
test
pop
cmp
xor
in
jge
sbb
or
xchg
add
call
adc
mov
lea
sbb
sahf
cwtl
arpl
xor
cwtd
gs
into
adc
add
and
xor
out
fmuls
cltd
or
add
loope
xchg
sub
rorb
push
cmp
sbb
cmpsb
in
lret
jmp
mov
aad
jge
cmpsl
cmp
add
out
into
push
push
inc
lahf
mov
mov
add
mov
insb
add
xchg
fdivl
jge
aam
dec
inc
and
inc
fwait
shll
xchg
jge
xor
xchg
fisubrs
mov
jno
inc
jne
stc
pop
push
adcl
lods
popl
fistpl
xchg
shrl
vmread
lret
repz
dec
and
gs
jecxz
mov
adc
mov
cmpsl
loopne
jno
push
xor
out
pop
decl
hlt
loope
dec
inc
loope
pop
insl
mov
jnp
stos
push
sbb
jbe
ljmp
dec
es
push
dec
cmp
sahf
pop
sub
mov
aas
lock
and
movsb
sahf
into
data16
jg
inc
push
cli
lods
sbb
lds
or
dec
jnp
in
movl
mov
jecxz
pop
sub
pushf
xorl
jp
jmp
add
add
xchg
inc
shl
xlat
mov
jg
or
xchg
pop
add
add
adc
adc
out
jnp
lods
mov
and
ss
add
sahf
lds
orl
sar
cmp
sub
movsl
sbbl
sub
sbb
std
jnp
pushf
fdivs
cmp
lcall
fcmovu
fdivrs
imul
idivl
mov
repnz
or
filds
mov
jbe
frstor
shlb
add
xchg
cwtl
iret
cmpsb
cwtl
xchg
popf
xor
push
pop
and
dec
adc
sbb
xchg
lret
stos
lods
jl
insl
jle
and
mov
and
pop
aad
xorl
fmul
call
push
test
out
push
xchg
sub
xor
xor
inc
fsubrl
push
jb
jns
push
in
aaa
pop
mov
or
pop
and
sub
lret
xchg
or
pop
cmpsb
add
add
lahf
pop
cmpsl
jne
mov
xor
pusha
add
add
inc
xchg
sub
fdivl
insl
loop
andb
imul
rcrb
jno
push
push
sub
add
xlat
lahf
mov
xor
fisubs
xchg
mov
inc
cmpsl
xchg
pop
lock
fwait
call
shll
pop
jbe
inc
scas
adc
insl
les
fwait
loopne
in
aad
fwait
xrelease
fldl
scas
ret
pop
imul
fcmove
imull
cmp
stc
xor
cmp
rcrb
xchg
shl
fisttps
mov
and
out
xchg
dec
cmpsl
dec
lcall
or
pop
fiadds
jle
pop
mov
call
jp
mov
pop
and
jno
outsl
mov
bound
loope
lods
sub
sub
push
jo
jp
cmp
testl
adcb
push
and
stos
test
and
jg
test
add
sahf
pop
testl
adc
add
add
cmc
aas
lret
les
lea
pop
aam
and
punpckhdq
cwtl
push
pushf
in
pop
leave
idivl
mov
loopne
pusha
xchg
aam
pop
lret
sub
imul
out
mov
loopne
adc
dec
sub
push
popf
test
jns
loopne
mov
stc
les
cmpsb
js
scas
mov
inc
outsb
aaa
mov
sbb
add
and
mov
or
popa
cmp
add
shll
fistpl
sbb
ret
hlt
test
mov
imul
imul
sbb
gs
cld
lret
jg
iret
notb
sub
shrb
aam
or
jb
gs
in
push
outsb
add
fbld
mov
cld
lahf
cli
addr16
movsl
notb
dec
repz
lea
mov
inc
mov
dec
sub
loop
sbb
sbb
dec
hlt
add
add
pop
mov
fstps
mov
mov
add
add
jnp
mov
xor
outsb
push
imul
fnstsw
push
aad
loopne
ficoms
ljmp
enter
cmp
add
inc
daa
mov
and
inc
mov
push
test
sbb
push
push
or
int
stos
inc
inc
mov
dec
test
das
fwait
dec
shl
mov
dec
lea
push
sbb
orl
cltd
lret
pop
xchg
and
push
repnz
add
cli
nop
ficoms
nop
data16
mov
das
or
xor
jbe
imul
cmp
mov
jne
sub
aaa
cmc
cmp
dec
mov
sbb
or
int
lods
sub
fldcw
push
addr16
gs
xchg
mov
or
and
sbb
and
jb
shrb
cwtl
adc
or
mov
add
push
mov
push
imul
repnz
movsb
jle
arpl
das
sbb
add
add
mov
inc
lahf
arpl
clc
xor
lea
loope
call
adc
es
jp
pop
mov
pop
inc
aaa
push
jo
test
lock
insl
xor
clc
ja
stc
xchg
repz
mov
mov
daa
sbb
leave
xchg
out
mov
push
mov
loop
adc
ljmp
mov
insl
sbb
in
or
xor
fdiv
sbb
jmp
inc
pop
cmpsl
insb
repz
shll
mov
cli
push
pop
mov
sahf
mov
mov
adc
pslld
add
movsb
push
push
or
in
fbstp
jp
cmp
fmuls
pusha
std
pop
cmpsb
and
rcrl
ljmp
loop
jb
mov
sub
mov
dec
lods
mov
jl
loope
js
in
add
stos
sub
stos
out
jmp
sub
or
movsb
aam
add
add
out
push
rcrb
imul
xor
push
push
cmp
xchg
loopne
test
and
pop
outsl
popf
sarb
and
jne
push
mov
addl
add
fcoml
dec
mov
cs
add
mov
push
pop
dec
outsl
gs
jle
jno
mov
jge
inc
jno
pop
aad
push
nop
dec
aam
lock
data16
xor
addb
dec
cmp
mov
jp
mov
ret
out
dec
add
push
or
in
and
outsl
fcom
and
dec
push
jecxz
faddl
gs
push
pushf
loope
or
jecxz
jb
ret
fnstcw
mov
add
xchg
add
and
test
in
pusha
fistpl
add
mov
jecxz
and
out
vsubsd
out
les
cli
std
int3
xor
rcll
add
add
mov
fnstenv
xor
mov
add
outsl
xchg
cmpsl
pop
imul
jl
into
and
pop
inc
pop
jmp
mov
sarl
push
jne
pushf
in
push
xor
sub
stos
adc
add
popa
dec
addb
cmpsl
insb
es
cmpsb
lods
xchg
mov
xor
inc
jb
cltd
mov
mov
outsl
push
mov
and
mov
xchg
daa
lahf
and
xchg
xor
mov
ret
lret
cmp
and
mov
shll
insl
mov
adcb
bound
jne
push
in
aaa
and
sbb
loope
ficoml
aam
adc
daa
in
aas
mov
mov
notb
out
dec
dec
ret
push
xor
push
or
lret
aas
add
xchg
loopne
lock
xlat
lock
xchg
test
sbb
aaa
loope
test
les
popf
test
std
add
mov
or
fisttpll
pop
add
add
cld
je
jbe
jns
sbb
sbb
pop
and
add
add
rcrb
mov
dec
rorb
out
jl
ss
ss
adc
lret
xor
out
gs
sbb
call
pushf
loopne
sbb
xor
lds
mov
aam
cmp
in
sbb
jae
mov
cmp
mov
mov
cwtl
rcl
jne
jmp
inc
outsl
cmc
lods
lds
hlt
repz
add
and
jne
pop
ljmp
fs
adc
out
popa
mov
xor
add
xor
bound
push
andl
insb
push
jb
jo
mov
jnp
and
jp
lcall
cmp
cmp
adc
inc
ds
or
mov
jne
jnp
and
mov
and
mov
and
cmp
sahf
push
mov
in
and
add
add
cltd
jmp
fildl
or
daa
icebp
pusha
mov
add
add
jne
inc
mov
jno
seta
lods
mov
jne
ret
sbb
mov
js
pop
jge
dec
jns
ljmp
or
bound
xor
iret
andb
jno
popf
lods
adc
imul
add
imul
es
out
into
sub
ret
dec
gs
push
insb
or
jo
outsb
scas
cli
bound
pusha
rcrb
test
ffreep
cmp
fdivs
andl
add
mov
or
fcompl
jae
bound
lea
fisubrl
lea
push
jno
sbb
push
sub
cmp
push
test
jns
push
movl
jl
xlat
je
lock
cmp
pop
rorb
data16
jo
mov
sarl
xchg
push
movsb
mov
mov
cmp
mov
add
mov
mov
push
jg
dec
xchg
dec
clc
inc
cmpsl
xor
push
add
divl
sbb
dec
call
or
sarb
pushw
ljmp
fwait
mov
lea
xchg
rcrl
movsl
ss
stos
repz
jo
popl
stc
or
inc
sarl
std
and
inc
fldt
mov
leave
xchg
jge
into
lds
mov
mov
xchg
mov
test
mov
repnz
cmpsl
mov
rol
mul
es
push
cmc
push
hlt
ss
cmp
jge
aad
rcr
lcall
cltd
lock
pop
mov
fdivl
sub
sbb
push
hlt
ret
leave
shl
mov
add
mov
xor
push
sub
addr16
and
bound
mov
add
ljmp
inc
lods
cmpsl
test
ret
inc
in
jg
movl
mov
decb
jno
lds
jne
inc
addb
add
mov
fucomip
push
insb
xor
test
jle
lds
add
push
scas
xchg
push
sub
jne
les
ficompl
std
daa
cmp
inc
fisubl
jp
lcall
push
clc
scas
mov
xor
pushw
pop
dec
add
adc
out
lahf
cmpsb
jg
shrl
andb
jle
ret
push
or
ds
sub
xor
sub
mov
inc
insb
sub
jno
test
jge
dec
cmovb
test
sub
fs
lods
adc
fimuls
rorl
sbb
dec
in
xchg
sahf
scas
jae
jg
inc
add
sub
jg
js
jne
push
adc
aas
mov
cs
rorb
out
xchg
faddl
and
inc
push
xchg
arpl
or
enter
xor
lock
shlb
pushf
and
jge
xor
hlt
pushf
cli
add
add
dec
out
iret
jmp
aas
in
push
mov
sub
add
je
jae
int
mov
outsb
pop
xchg
adc
frstor
jge
inc
sub
or
inc
stos
and
mov
mov
lret
hlt
or
sahf
sub
sbb
les
test
scas
pop
in
or
or
movsl
dec
pushl
or
daa
sbbl
scas
or
mov
outsb
add
xchg
push
xorb
push
sti
ss
and
mov
jo
loop
inc
arpl
fs
inc
call
pop
or
inc
out
in
mov
popf
and
movsl
outsb
testl
cli
mov
insb
mov
inc
mov
xchg
shlb
push
ja
les
sbb
shlb
lock
push
repnz
mov
js
imul
mov
cmp
and
or
cli
orb
and
and
pop
popf
add
add
std
cmpsb
pop
dec
sub
sub
xchg
mov
add
jg
int
iret
test
xor
mov
pop
mov
enter
xchg
jbe
dec
dec
addb
xor
xor
lods
jnp
test
lock
pop
sbb
lea
sahf
xor
or
cmp
sub
repnz
inc
jg
or
pop
sbbl
clc
or
mov
sub
mov
das
fs
inc
lds
dec
mov
push
xor
or
mov
int
push
call
insb
es
mov
call
ja
sub
test
push
inc
xacquire
fsubs
loope
pop
test
out
xlat
xor
inc
adc
leave
cmp
jle
mov
bound
mov
inc
pushf
cs
xor
pop
dec
data16
outsb
int3
in
xor
mov
jecxz
in
push
notl
or
add
add
neg
std
sub
dec
add
mov
aam
add
add
ljmp
loopne
ret
sub
inc
adc
das
xor
mov
and
jle
xor
scas
ja
mov
pop
int
jae
mov
fabs
pop
out
jge
pop
push
xchg
mov
out
adc
addr16
pop
int3
frstor
pop
push
pusha
inc
pop
xor
addr16
scas
movsl
jns
insb
test
nop
push
adc
out
add
decl
jle
sub
mov
jge
inc
negl
dec
inc
mov
dec
sub
pop
stc
int
nop
in
mov
lret
inc
mov
loopne
ret
push
gs
idivb
jbe
icebp
push
dec
add
cmp
fldenv
inc
in
pop
mov
ljmp
fstpl
jnp
xchg
jge
mov
mov
test
bound
add
inc
xchg
jo
lock
pop
and
pop
outsb
add
loop
dec
sub
cld
pop
dec
div
pxor
add
push
subb
in
push
mov
out
int3
and
add
xchg
jae
add
in
push
movsb
pop
pop
add
jbe
into
mov
sub
shl
xor
mov
loopne
sbb
mov
mov
pop
jp
push
bound
fwait
test
jb
xchg
sbb
lahf
xorb
push
std
push
hlt
xlat
inc
jmp
xor
pop
stc
adc
xor
adc
xchg
out
lods
popf
outsl
push
in
cmc
xchg
or
push
icebp
imul
testl
inc
movsb
movsb
stos
shlb
xor
dec
xor
mov
mov
mov
int3
or
popl
xor
pop
paddusb
test
lcall
in
fwait
negb
fisubrs
add
inc
xchg
xchg
add
out
inc
addl
xchg
add
or
and
mov
loop
cwtl
sub
dec
add
add
ja
out
sbb
jg
fisubrs
add
and
sub
sub
sahf
ret
mov
xchg
sbb
xchg
int
sbb
sbb
dec
and
lock
adc
lret
or
scas
and
gs
inc
cmpsl
sbb
arpl
add
mov
roll
sub
mov
or
push
mov
xor
cld
xchg
aad
inc
stos
std
jo
mov
cmp
xor
ret
outsb
mov
into
xlat
stos
dec
dec
adc
xchg
mov
push
out
repz
mov
lahf
jnp
xchg
out
in
mov
popa
cmc
or
roll
popf
inc
addb
movlps
mov
mov
inc
sbb
leave
mov
push
pop
jg
mov
jecxz
sti
pop
cmp
pop
add
movsb
push
xchg
popf
sbb
adc
and
dec
xchg
push
mov
and
repz
add
cmp
add
mov
add
daa
sub
ja
mov
mov
add
add
xor
dec
jmp
sub
fcompl
iret
jae
bound
jge
push
aam
jle
out
addl
adc
sbb
cmpsl
ja
rorl
mov
xor
pop
push
leave
popa
xor
out
xchg
push
sub
rcll
fmull
inc
sbb
push
dec
dec
cmp
ja
pushf
mul
xlat
mov
sub
testb
cmp
mov
mov
or
mov
dec
test
in
xor
in
mov
sub
jnp
rcr
xchg
scas
sub
mov
mov
sarb
in
pop
push
out
insb
mov
iret
xor
mov
mov
sub
push
mov
mov
fisttpl
jo
stos
pop
mov
popa
lcall
jne
incb
xchg
pop
out
xor
sbb
sub
pop
mov
pop
and
add
int
add
add
cmp
jnp
outsl
cmpsb
loopne
ret
push
mov
add
and
adc
push
pop
fcmovne
clc
pop
arpl
xchg
mov
arpl
mov
hlt
mov
arpl
mov
cli
add
js
mov
mov
js
cli
xor
push
inc
jecxz
jl
arpl
std
filds
inc
mov
in
fildll
jecxz
mov
popf
mov
xor
cmpsb
mov
repnz
mov
and
arpl
data16
mov
push
ret
aam
xchg
lahf
mov
pop
pop
iret
out
sub
test
pusha
bt
divb
aam
jecxz
dec
lret
div
movsl
bnd
fwait
orb
nop
repnz
fs
pusha
pop
xchg
fadd
pop
lds
fucom
sub
outsl
add
pop
popf
andb
int3
mov
into
daa
adc
cli
icebp
push
addr16
mov
xor
add
xchg
push
mov
cli
xchg
jle
push
je
cwtl
jp
sbb
add
out
stc
xchg
aaa
bound
scas
in
shr
xchg
std
cwtl
outsl
push
test
xchg
cmpsb
shl
faddp
loope
shrl
clc
cmp
sbb
in
jns
jmp
add
sbb
fwait
jg
repz
mov
cmp
push
sub
or
loopne
push
mov
push
loopne
icebp
in
outsb
push
pop
hlt
mov
xchg
adc
movsl
xchg
jecxz
lods
pop
or
or
rorl
add
or
aas
jno
pop
mov
inc
rorb
pop
or
push
sbbl
cmpsb
or
fisttpl
lret
cmpsb
sub
sub
push
or
adc
nop
mov
cmp
jl
jb
ds
jle
lret
push
hlt
pop
loop
imul
jg
xchg
dec
sub
sub
test
fidivrl
test
das
ds
mov
cltd
ja
mov
add
inc
aaa
dec
fwait
jnp
aad
sbb
cmp
jb
add
mov
mov
movsl
rcrb
xor
and
xor
sbb
mov
test
mov
mov
inc
add
mov
xor
test
dec
rclb
pop
fsub
sti
outsl
cmp
ja
lret
adc
testl
inc
mov
dec
xor
adc
and
repnz
enter
mov
jae
pop
mov
mov
push
pushf
enter
sbb
push
xchg
test
into
lahf
jle
sbb
push
mov
aaa
andl
dec
xor
or
stc
pop
cs
jne
pop
sahf
cs
sbb
popa
lret
aaa
cs
inc
repz
jno
std
xchg
mov
leave
dec
cli
sub
icebp
jge
inc
xor
into
pop
test
cmp
push
inc
cli
and
lret
pop
ja
mov
mov
mov
outsb
adc
cmpsb
jbe
add
pushf
and
cltd
push
fimuls
add
add
std
mov
sub
add
add
popa
sub
sub
idivl
sahf
inc
mov
hlt
push
insb
push
adc
notb
mov
stos
mov
rolb
fwait
leave
sti
cmp
mov
xor
add
out
pop
jle
nop
ljmp
pop
sbb
xchg
jmp
inc
mov
adc
push
adc
mov
xor
arpl
cmp
in
aas
pop
mov
fwait
rol
pop
mov
test
lds
stc
xchg
outsl
jecxz
in
or
inc
cmpsb
cmp
pop
inc
mov
in
or
cmp
inc
or
jne
cmp
test
sub
sahf
fimuls
cmp
ficoml
mov
jmp
lcall
movsb
sub
xor
rorb
sahf
push
fwait
das
adc
maskmovq
cmc
adc
inc
or
mov
push
loopne
pop
js
lahf
lcall
sbb
add
adcl
xchg
fisttps
mov
dec
push
cld
je
add
mov
lahf
aam
in
sbb
adc
lahf
jecxz
nop
jb
popa
iret
aas
jb
cmp
repz
mov
div
cmc
mov
movsl
push
dec
xchg
jp
mov
inc
mov
pusha
and
arpl
mov
cmpsb
mov
cmc
push
aam
pop
lock
xchg
lahf
repnz
xchg
pop
jae
sub
inc
sub
ret
div
push
mov
xchg
cwtl
leave
idivb
or
mov
lock
adc
fs
xchg
outsl
das
test
or
pop
inc
xchg
mov
xor
in
adc
xchg
xorb
inc
mov
lds
ljmp
dec
dec
add
xchg
mov
aam
icebp
xor
xor
lock
lods
stos
jne
out
adc
mov
ret
xorl
jmp
xchg
jmp
push
dec
imul
adc
pop
mov
mov
mov
enter
or
xor
std
add
add
bound
sub
sbb
jbe
add
mov
shl
outsl
mov
cmp
pop
into
xchg
ret
stc
sahf
or
or
gs
ret
mov
insb
pop
imul
dec
sbb
movsl
repnz
lahf
daa
or
xor
cmp
cmpsl
stos
ror
popa
or
adc
addr16
sub
aam
lret
gs
jle
cltd
xor
xchg
mov
in
cmpb
jae
stos
gs
scas
push
movsl
add
imul
jae
cmpb
dec
xlat
xlat
mov
jb
dec
sub
add
jno
addr16
mov
pop
or
jl
fisubrs
ss
or
lds
pop
push
xor
jge
mov
inc
arpl
ja
iret
pop
clc
lea
decb
or
filds
cltd
mov
fidivrs
jns
xchg
cmp
enter
ret
mov
or
imul
xchg
xchg
sbb
add
divl
in
sub
push
ja
add
mov
pop
inc
or
leave
add
iret
in
pop
cmp
cli
setnp
ss
mov
add
sub
mov
xchg
xchg
mov
rcrb
inc
inc
sub
aad
mov
lock
inc
fisubrl
sarl
jno
out
ss
xchg
mov
imul
enter
data16
in
mov
pushf
ja
push
xor
imul
decl
mov
test
das
adc
js
shlb
mov
push
push
outsl
lock
jbe
xor
inc
sub
repnz
in
push
jg
adc
xor
mov
xor
inc
pop
or
aam
push
sbb
fs
xchg
sub
pop
xchg
or
stc
ret
pop
inc
mov
icebp
rep
pop
push
fdivs
pop
shlb
das
ja
shr
and
add
icebp
stos
rorb
add
add
fisubs
mov
mov
sahf
jns
js
add
xor
or
xor
es
outsb
xchg
int3
fsubrl
fmull
rep
test
movsb
fdivl
add
jbe
xchg
fnstcw
mov
idivl
test
sbb
call
sbb
cs
insl
or
in
sbb
mov
add
and
call
pop
sbb
xchg
test
jge
sarb
cltd
lret
imul
xor
push
test
imulb
mov
pop
jae
ss
popf
mov
cs
loop
xchg
pop
jg
dec
xor
imul
and
and
data16
ret
jge
insb
repnz
cld
jg
mov
mov
popf
lret
test
call
mov
pop
dec
test
push
pop
les
and
shrl
push
mov
add
and
sbb
mov
push
loop
add
shlb
mov
or
loopne
jns
add
jg
subl
sbb
pop
stos
jle
xchg
mov
jo
das
push
loopne
xchg
xchg
sub
popa
mov
cmp
test
jbe
out
js
mov
mov
sub
inc
mov
lret
push
lcall
leave
jbe
mov
add
addr16
lcall
scas
movsl
rcl
stos
adc
loop
mov
and
cmc
mov
fsubs
fwait
push
xor
pop
test
and
sahf
cld
insb
ds
data16
and
ftst
testl
inc
sub
dec
ss
jae
daa
stc
or
lea
aad
in
sub
push
xor
sub
xor
into
push
mov
jp
pop
sub
aas
jb
lods
icebp
fbld
sti
dec
in
and
jecxz
xchg
cmp
push
mov
cwtl
movsb
out
xchg
sbb
xchg
dec
push
orb
ljmp
jl
out
ret
jp
add
push
in
fistpl
sbb
ret
or
adc
cwtl
add
out
cmpsb
mov
shlb
push
push
daa
push
jmp
inc
popa
shrl
sub
pop
ljmp
sbb
mov
fmuls
cmc
aaa
inc
in
xchg
adc
insl
jbe
pop
add
movsb
or
nop
or
jns
mov
xchg
test
cld
dec
add
fsubl
ret
int3
gs
sbbl
gs
mov
rol
jg
sbb
sub
or
and
outsb
into
xor
jnp
bound
mov
push
test
call
dec
popa
movsl
pop
pushw
mov
imul
sub
adc
lock
jg
repnz
mov
fsubr
in
cmp
rolb
into
rorl
mov
cmp
das
sub
fwait
aam
and
rclb
lcall
add
xor
jo
ja
std
stos
sbb
ljmp
add
add
lahf
mov
jae
rcl
lahf
inc
inc
dec
loope
sarl
loopne
std
xchg
das
push
pop
push
push
sbb
enter
push
jno
insl
jo
jbe
leave
mov
and
mov
xchg
jge
les
rol
mov
jp
inc
xor
mov
adc
mov
leave
xlat
push
aaa
filds
adc
lcall
sarb
inc
dec
dec
jge
pop
pop
arpl
xor
lods
mov
add
mov
mov
out
push
xchg
int3
pop
mov
push
enter
lods
pusha
ljmp
xchg
mov
ljmp
pop
push
xchg
mov
ljmp
and
and
push
test
mov
int
out
sti
lds
jo
push
cltd
push
or
ja
dec
dec
int3
sub
aaa
dec
popa
mov
add
add
cmpsb
push
sbb
pop
jl
add
push
cwtl
jmp
ret
jne
aaa
push
add
push
call
mov
outsl
std
xchg
xchg
sbb
or
loopne
jo
xor
xchg
shlb
adcb
and
je
stos
hlt
sbb
jnp
pop
mov
sti
ja
jl
and
jle
imul
dec
lret
mov
dec
xchg
test
mov
add
and
pop
mov
add
stos
pop
add
and
cmp
or
test
mov
adc
inc
sbb
xor
cmp
imul
mov
cmp
cmc
das
mov
out
stos
imul
lods
fsubrs
bound
xor
out
outsl
hlt
in
cmp
inc
jmp
cmpb
cmp
xor
cmp
add
xor
lods
or
clc
push
add
add
cmp
cli
mov
or
add
add
pop
sub
repnz
pop
out
or
mov
mulb
xchg
mov
fsub
cld
rorl
ficoms
fnsave
mov
push
cmp
lret
add
push
sub
bound
inc
test
jle
xchg
mov
out
sbb
fbld
insb
mov
movsl
jl
loopne
ret
int
test
mov
mov
rorl
pop
sbb
xchg
inc
test
fadds
mov
pop
jg
mov
cmc
cld
outsl
aas
leave
icebp
in
pop
pop
fwait
loopne
and
icebp
xchg
or
pop
enter
test
inc
sub
fs
fcmovb
mov
sarb
test
jmp
inc
sqrtps
leave
add
and
mov
push
push
imul
insl
into
aad
ljmp
fistpll
outsb
pop
std
cwtl
inc
inc
mov
cmp
mov
xor
mov
divb
out
ja
add
std
test
lcall
xchg
sbb
add
inc
cs
jmp
outsl
in
scas
movsb
cld
mov
es
mov
inc
xor
adc
fstpl
cmpb
and
jne
ret
test
sbb
in
and
mov
addr16
lret
out
mov
outsl
orb
ljmp
in
andb
mov
test
les
lcall
push
in
lods
pop
pop
xchg
in
rcrb
add
pop
hlt
inc
adc
insb
mov
inc
lock
pop
xor
sbb
sbb
insl
lahf
push
shlb
ljmp
subl
scas
jmp
pop
sbb
mov
mov
add
or
dec
xor
xchg
shrb
xchg
dec
dec
adcb
scas
movsl
cmc
out
ss
aas
inc
and
jecxz
test
data16
push
xor
movl
add
add
xchg
xchg
jns
jmp
mov
hlt
jg,pn
add
ds
lea
jg
or
jge
or
mov
aaa
out
or
sbb
mov
push
xchg
divb
xor
dec
mov
inc
test
jecxz
mov
call
hlt
mov
sub
les
sarl
or
fs
push
cmp
jge
mov
cmp
jg
jmp
push
icebp
jg
mov
jmp
insb
shlb
ror
or
jmp
adc
imull
push
mov
les
push
add
sbb
inc
and
mov
cmp
lock
mov
mov
repnz
clc
cmp
xchg
or
jae
call
shr
cmpsb
sub
xchg
sti
cmc
rcl
add
out
imul
jno
cltd
add
mov
in
lods
mov
shll
mov
add
lcall
and
add
add
add
icebp
sub
push
jle
or
cltd
das
inc
push
daa
inc
or
push
in
xor
stos
sarl
dec
test
dec
mov
outsb
pusha
and
sbb
push
ja
ret
sarl
push
adc
push
les
aas
add
jae
dec
inc
xchg
sub
cwtl
lret
out
subb
cmp
imul
mov
mov
xchg
add
xchg
and
push
push
jl
out
jo
mov
rcrl
fnstenv
fnstenv
cmp
add
sub
out
sbb
inc
int3
ret
aam
arpl
int3
cmpsb
test
popa
cmc
pop
sbb
and
pop
fmulp
mov
xchg
xchg
fwait
xor
lret
sub
mov
mov
pop
cmpl
shrl
rcll
push
or
jno
mov
ja
xchg
dec
inc
pop
push
push
mov
or
dec
scas
and
in
in
fcmove
add
add
mov
idiv
jne
iret
mov
and
add
push
fwait
push
sub
pop
or
andl
push
data16
and
mov
bnd
mov
jle
rorb
push
cs
cmp
lret
mov
jo
imul
mov
push
scas
icebp
mov
adc
mov
subb
xchg
pop
cwtl
imul
ja
nop
add
inc
in
add
scas
cmc
pop
cld
jle
adc
or
test
nop
dec
or
xor
testl
jb
sub
shrb
lret
test
aam
push
enter
aaa
clc
lea
ja
pop
jne
lcall
dec
pop
mov
pop
ss
inc
xchg
bswap
adc
insb
clc
ljmp
push
out
mov
repz
add
movsb
pop
push
jb
mov
jno
mov
adc
shll
xchg
pushl
sub
aas
jl
jmp
add
decl
mov
push
aaa
mov
pop
insb
cmp
adc
in
ret
push
mov
jb
push
ss
jae
xchg
add
enter
push
je
in
xorl
fnstcw
sub
adc
pop
add
sbb
movsb
scas
bound
mov
sub
aad
jp
cli
push
pop
xor
out
lods
jge
add
fmuls
fmuls
imul
cmpsb
insb
add
out
orl
fcmovnbe
sbb
sub
daa
std
push
rcll
ljmp
or
enter
repz
xor
sbb
add
sbb
js
inc
popf
jecxz
jb
test
loopne
stos
dec
loope
xor
fisubl
pop
out
mov
jae
push
popf
or
mov
sub
and
int3
mov
insl
push
or
aad
arpl
inc
push
push
pop
jnp
cmp
xchg
or
nop
xor
loope
mov
add
add
sti
iret
ss
push
jno
dec
repz
inc
addl
add
dec
pop
mov
fnstenv
fsubl
and
fisubrs
jne
leave
push
inc
jno
rcll
jns
addr16
jmp
test
pop
xchg
cmpsb
ucomiss
or
ds
test
arpl
enter
sbb
and
push
daa
out
idivb
ret
adcl
sub
sub
call
fs
cmc
insb
cmpsl
jp
xchg
lods
sbb
lods
add
sub
add
mov
sub
sbb
dec
and
dec
xchg
movsb
xlat
in
and
or
pop
pop
xchg
xchg
cmp
sub
clc
cmp
lret
es
cmpsb
mov
int
in
pop
sub
das
adc
xchg
iret
pop
mulb
sub
pop
and
mov
cwtl
gs
jns
inc
sub
scas
push
mov
and
aad
add
loopne
xchg
inc
lahf
sti
hlt
out
dec
roll
push
leave
adc
add
add
cmc
test
loop
mov
dec
mov
loope
test
in
js
mov
bound
int3
xchg
mov
repz
fstps
sbb
cwtl
xchg
xchg
cmp
ds
aad
pop
andl
mov
cli
ret
jp
sub
sbb
cmpsb
jnp
enter
shll
or
ja
mov
push
scas
adc
lods
inc
xchg
stos
stos
mov
inc
cmp
out
int
sub
shr
neg
xchg
pop
insl
push
cmp
pop
push
loope
adc
lods
mov
aaa
sete
jne
int3
cmpsl
repnz
adc
scas
mov
adc
cmpsb
pop
in
jmp
ret
push
lock
mov
loopne
sub
shrl
imul
rcl
add
sub
in
xchg
gs
mov
aas
push
xchg
sub
subb
mov
gs
mov
add
add
mov
mov
pcmpeqw
dec
test
add
je
push
pop
gs
adc
or
loopne
outsb
mov
cmp
mov
popf
ret
insb
out
jnp
in
ds
push
mov
fiaddl
or
or
ss
popa
in
dec
jns
ds
fdiv
pusha
std
call
xchg
out
xchg
adc
pop
out
and
pop
xor
clc
xchg
mov
xor
push
test
lds
into
sbb
sub
inc
jo
mov
inc
push
pop
xor
cli
lods
cltd
lock
pop
popf
lahf
adc
lods
aam
push
mov
mov
lea
and
mov
mov
mov
mov
dec
dec
push
or
cmp
lret
stc
fisttpll
add
cmpsb
mov
insl
mov
repz
das
ltr
sub
imul
cmp
out
cwtl
sti
add
dec
repnz
xlat
add
add
pop
test
ljmp
lock
xchg
outsb
adc
add
add
mov
xor
test
in
push
mov
mov
lods
test
mov
out
mov
and
dec
mov
jbe
cs
mov
js
insl
sub
rcpps
pop
mov
xor
adc
ret
stos
cwtl
adcl
and
mov
aas
enter
divl
scas
inc
push
ljmp
aaa
mov
rcrb
or
std
jl
movsb
fmuls
cmpsb
ja
ret
addl
xchg
das
inc
jbe
movsl
mov
aam
hlt
popl
xchg
stos
mov
scas
xor
in
add
cmpsb
enter
dec
adc
test
inc
push
lret
push
std
sarb
in
or
fwait
stos
div
fnclex
sub
add
cld
pusha
mov
dec
mov
mov
add
imul
push
jnp
sbb
push
xor
pop
mov
add
shll
int3
adc
pop
popf
out
and
int
addr16
int3
out
inc
xchg
and
sti
pushf
sahf
sub
lods
sub
jp
lcall
out
push
mov
pop
mov
pop
add
and
negl
stos
sub
sub
jmp
ret
or
mov
in
lret
and
ret
pop
jns
fcomps
dec
in
xchg
shl
mov
jl
fiaddl
and
enter
es
rcrb
dec
dec
mov
push
mov
and
dec
mov
jle
mov
test
xchg
fstl
cmp
scas
stos
push
xor
jae
mov
aas
les
add
inc
jmp
mov
push
mov
mov
test
mov
jne
inc
xchg
sahf
cmp
adc
insl
shll
jb
sub
arpl
ss
fdivrp
sbb
rcrl
sub
add
push
aas
or
mov
push
jp
lods
pop
mov
add
or
insb
mov
and
jo
adc
ja
fs
repnz
add
cmc
testl
dec
ss
nop
add
stos
xchg
push
push
push
rclb
and
imul
pop
call
cmp
movsl
xor
clc
cmp
adc
add
loop
dec
shrb
lea
shrb
shrl
sub
ret
loopne
push
mull
lahf
push
inc
fcomps
cmp
mov
icebp
outsb
mov
ret
mov
test
mov
aad
dec
out
fstpl
sbb
lahf
cmp
das
je
add
out
cmp
bound
push
ds
mov
call
add
mov
test
inc
dec
scas
lods
test
xchg
test
mov
test
pop
jns
mov
adc
out
movsb
sahf
shlb
lret
or
es
dec
flds
imulb
add
push
outsb
fisubs
test
int3
in
sti
dec
pusha
mov
add
mov
push
or
pop
lods
cmpsb
and
stos
xor
pop
stos
mov
xchg
pop
pushf
out
popf
adc
in
xor
jbe
lods
inc
insl
xchg
xor
dec
addr16
xchg
lds
sahf
fwait
aad
icebp
test
push
jnp
push
xchg
mov
adc
sbb
jo
pop
jo
aaa
sub
das
daa
dec
fiadds
push
jp
xor
xchg
shlb
sahf
fucomi
xor
add
hlt
lds
mov
jp
jp
imulb
repz
in
add
cmp
inc
imul
mov
int
dec
icebp
dec
fdivs
movsl
adc
sub
mov
test
pushf
mov
test
arpl
mov
mov
xchg
mov
sahf
insb
loop
aaa
inc
mov
push
imul
mov
cmp
hlt
inc
xchg
mov
cmp
fs
adc
mov
js
add
add
mov
jns
sub
stos
mov
add
ja
lahf
cmp
je
loopne
in
imul
in
leave
mov
and
dec
add
ficompl
jle
rcrb
lock
outsl
scas
fs
test
movswl
push
inc
fldt
inc
mov
mov
shlb
imul
mov
dec
xchg
xor
test
cs
das
or
push
ss
and
cmc
xchg
loope
sahf
inc
dec
inc
pop
xchg
int3
adc
push
mov
or
movl
dec
jecxz
pusha
and
adc
mov
mov
adc
hlt
imul
fldl
loope
cmp
leave
xor
push
mov
jmp
push
pushf
jbe
lret
jae
jge
and
sbb
addl
jg
mov
dec
sub
cmpsl
stc
adc
sub
popf
pop
out
aam
shll
add
add
int
fstp
iret
push
cmpsb
fadd
dec
adc
adc
mov
add
dec
mov
insl
xor
fmull
fcoms
jb
jmp
outsb
ss
lods
mov
cmp
pop
xor
cmpsb
pop
sub
aaa
prefetch
mov
sub
jbe
movsb
or
mov
add
add
add
sbb
lock
std
mov
sub
cli
int3
push
and
hlt
mov
insb
mov
inc
dec
push
das
mov
adc
out
insb
cs
subl
jo
mov
sahf
sbb
jg
cmp
mov
sbb
lods
imull
mov
fsts
sbb
jp
push
arpl
pusha
sbb
clc
add
jmp
mov
jmp
sub
mov
movsb
sahf
arpl
inc
ja
sbb
pop
mull
mov
mov
sbb
jg
test
pop
aas
pop
push
adc
in
and
push
mov
jecxz
jnp
mov
pop
cmp
push
push
mov
mov
cmp
lea
add
ficoms
lahf
and
scas
std
out
ljmp
outsl
mov
add
push
sarl
pop
fwait
aas
adc
popf
cmp
notb
std
and
ret
push
or
add
add
mov
pop
imul
cmp
ds
insb
or
mov
push
mov
push
xchg
and
xchg
push
les
orb
add
mov
push
je
xor
and
sarl
ss
aas
dec
or
movsb
dec
into
aam
inc
fbstp
cmp
pusha
shl
and
adcl
xor
sbb
sbb
xchg
add
or
xchg
pop
xor
in
sbb
xchg
in
mov
repz
shlb
xor
push
mov
mov
mov
xchg
cmp
repnz
fwait
clc
and
and
cld
xchg
loopne
add
mov
mov
pop
xchg
pop
push
cwtl
bound
out
sub
lahf
test
or
sub
inc
xchg
and
cmp
add
add
mov
icebp
jp
fstl
lea
add
scas
sub
push
arpl
jmp
cmp
jno
jge
stc
mov
ss
jne
out
leave
mov
pop
and
sub
movsb
push
or
and
inc
rolb
test
cmpsb
mov
mov
lret
push
sbb
scas
int3
imul
jb
out
jmp
pushf
xorps
mov
pusha
outsl
icebp
std
and
xlat
iret
dec
pop
jg
sbb
notl
clc
aam
jp
lock
add
adc
addb
adc
scas
cli
popf
inc
repz
hlt
push
das
pushf
bound
mov
aad
pop
sub
mov
movsl
ret
fidivl
popa
insb
dec
and
add
shrl
and
and
loop
dec
into
or
outsl
int3
inc
pushl
mov
inc
jb
dec
push
sbb
dec
call
arpl
outsl
adc
inc
cwtl
xchg
dec
add
add
les
fcomps
add
lret
jns
add
add
sub
insl
push
rcrb
mov
movsl
aam
xchg
lcall
lods
call
push
push
push
lea
mov
push
adc
fnsetpm(287
je
sbb
inc
push
out
cltd
mov
xor
xor
sub
adc
sub
cmp
cmp
cmpsl
daa
or
jecxz
addr16
test
push
out
divb
sub
pop
lods
adc
mov
rcr
lret
test
sub
mov
cwtl
outsb
imul
out
imul
daa
rolb
xor
push
shl
out
mov
push
mov
pop
sbb
pop
stos
mov
lcall
jbe
popl
imul
dec
pushf
add
and
pop
shll
jge
adc
shl
jmp
and
stos
inc
out
dec
mov
push
push
sub
add
ljmp
dec
mov
mov
jle
add
add
mov
push
push
bound
adc
outsl
mov
faddl
std
cmp
cltd
pop
std
sbb
movsl
xchg
adc
mov
mov
mov
stos
loop
push
pop
cmp
adc
rcll
or
and
mov
out
sbb
or
push
loop
cmp
mov
jnp
fldt
xor
jo
test
insl
xor
cmp
imul
sbb
ficoms
and
adc
and
push
push
fldenv
mov
loope
data16
dec
xchg
dec
dec
mov
cmpsl
xchg
insl
in
fcoms
mov
int3
adc
imul
mov
push
and
xchg
imul
xchg
imul
jp
popf
push
lcall
sahf
sub
jg
insl
xorb
and
loop
enter
cwtl
mov
mov
sub
add
add
aaa
shlb
cmc
div
testl
cmp
add
add
inc
icebp
fwait
jnp
mov
pop
and
verw
arpl
dec
add
test
inc
cli
mov
sub
jl
cmpsb
mov
mov
dec
in
add
insb
repz
adc
push
fisttpll
and
and
dec
pushf
pop
test
stos
fisubrs
int3
mov
push
xchg
xor
adc
fistpl
mov
lcall
dec
sub
sub
cmp
jno
xor
pop
ret
pop
aaa
movsb
adc
stos
push
add
or
and
mov
stc
test
addl
or
add
jge
mov
mov
adc
add
mov
push
jns
xor
and
xor
cmpl
std
adc
out
in
cmp
inc
data16
pushf
mov
imul
mov
push
jmp
xchg
adc
mulb
mov
pop
add
add
push
sahf
rcr
pop
adcb
ficoms
inc
loop
xchg
add
add
sub
scas
subl
ljmp
xlat
jge
adc
es
cmp
jle
add
mov
cmp
sbb
add
sahf
sub
cld
pushf
xor
xchg
in
icebp
aam
notb
pop
and
mov
cmp
lahf
daa
into
jb
das
adc
add
cld
pop
push
clc
je
mov
and
fldl
into
mov
pop
cmp
testb
inc
lretw
aad
sbb
lods
dec
aam
cld
jmp
setno
fmuls
sti
int3
mov
lret
pop
jp
repz
and
insl
out
mov
sbb
push
dec
in
pushf
dec
fmull
popa
lods
outsl
adc
enter
gs
mov
and
pop
jg
xor
cwtl
xchg
xor
mov
mov
popa
push
pop
arpl
xor
ss
testb
add
arpl
cmpsb
jcxz
fimull
lea
add
xor
xchg
xchg
jae
dec
aaa
adc
rolb
adc
and
dec
das
xlat
xchg
jno
add
rcrl
rcll
mov
mov
lds
mov
mov
aad
repz
addr16
test
add
inc
pop
ficompl
jno
gs
dec
ret
aas
xchg
rclb
sti
sbb
nop
inc
out
mov
inc
mov
cs
mov
mov
pop
fs
test
cmp
xchg
sbb
das
pop
cmp
cmp
iret
xchg
clc
add
sahf
sub
inc
rolb
sbb
flds
xchg
loop
xchg
jmp
jle
or
dec
add
testl
ss
jnp
pop
inc
repz
dec
jmp
xchg
jge
pop
or
push
cmpsl
add
xor
cmc
ret
data16
jbe
mov
add
add
clc
jnp
jg
in
cli
enter
lret
xlat
xchg
xchg
add
add
popl
inc
cld
sbbl
inc
or
adcl
xchg
mov
test
adc
inc
pop
pop
popl
rol
xchg
jmp
pop
cli
insl
test
pop
adc
pusha
repnz
jb
out
pop
mov
and
mov
aam
adc
or
xor
es
es
pop
les
int
sbb
mov
mov
fistps
xchg
or
xor
gs
and
sub
cmp
ljmp
pop
add
or
xorl
mov
lcall
pop
cli
out
mov
inc
inc
jge
xchg
pop
mov
inc
cmc
addr16
inc
int3
dec
pop
push
xchg
inc
movl
stos
add
mov
int3
ficoms
stos
aam
mov
cmp
add
lods
faddl
fbstp
cld
gs
mov
xchg
xchg
add
add
adcb
xchg
repnz
inc
scas
or
mov
cwtl
add
aaa
stos
mov
cld
xchg
nop
mov
daa
and
pop
sbb
cmp
aas
pop
xchg
aaa
ljmp
jo
sub
xchg
push
xchg
subl
or
movsb
fs
lret
js
adc
popa
test
xor
and
testl
repz
rolb
xlat
mov
lea
add
sbb
movsb
mov
insl
mov
jecxz
in
push
inc
in
push
mov
lret
sub
pusha
lods
fwait
or
cltd
sbb
mov
clc
push
lods
sub
adc
adc
cwtl
imul
leave
lcall
cld
dec
addr16
int3
dec
xor
in
jbe
or
jl
call
stos
mov
inc
or
fisubrl
or
push
aad
mov
add
jl
sar
std
jle
pop
popf
scas
les
add
jb
bound
xchg
inc
pop
pop
adc
or
cltd
enter
and
jo
in
ret
mov
dec
loopne
mov
adc
mov
fistpll
xor
in
dec
inc
loop
mov
and
aam
jne
cmp
pushf
jo
mov
dec
pop
xor
dec
mov
test
jnp
mov
out
incb
cltd
scas
jno
xchg
adc
jl
gs
in
push
mov
mov
fisubrs
shll
and
adc
push
push
pop
push
xchg
lahf
lods
sub
dec
ret
ja
shrb
cmp
or
fidivrs
xor
imul
ret
or
xor
int
sub
sbb
mov
xor
inc
les
sbbb
push
sbb
pop
xchg
xor
xchg
cmpsb
clc
mov
and
js
data16
dec
stc
das
add
add
cwtl
or
stos
xchg
cmp
in
sub
add
add
cmp
hlt
iret
out
push
in
dec
xor
jnp
pusha
sub
push
sub
subb
mov
dec
push
cmp
sbb
cmc
rcr
repz
scas
scas
decb
pusha
ret
pop
add
jbe
sub
movsl
jo
adc
mov
ja
loopne
gs
pusha
mov
outsb
jl
sbb
fs
inc
sub
cmp
xor
aad
adc
pop
push
push
push
mov
insb
aam
adc
mov
cmp
add
mov
mov
es
add
mov
cld
imul
in
pop
pop
lock
mov
fucom
sbb
push
jo
aam
lahf
push
adc
repnz
mov
push
and
lret
mov
popf
call
and
insl
fldt
lock
xor
push
pop
leave
add
jmp
sbb
sbb
jo
push
inc
ja
mov
mov
andb
add
fwait
and
popa
mov
xorl
cmpsb
xchg
add
add
jae
stos
gs
dec
adc
push
mov
jg
pop
andb
and
or
and
imul
mov
ficomps
sbb
cmp
cmovnp
mov
push
dec
mov
divl
hlt
mov
or
aad
mov
repnz
es
xor
xor
ret
fistpl
jnp
mov
and
orl
jno
out
flds
stos
xor
test
stos
jbe
loop
sarb
pop
xor
mov
testl
xchg
ret
in
cmp
push
sbb
stos
in
stos
sub
xor
fldcw
orw
or
mov
ficomps
icebp
sbb
push
in
idivb
pop
mov
ret
mov
outsl
movsb
pop
mov
add
dec
std
out
xlat
aas
dec
sbb
or
stos
cwtl
add
add
nop
xor
rclb
xlat
into
add
cmp
and
inc
lret
push
lret
sbb
clc
mov
mov
fcomps
add
and
lods
lds
cmp
fmuls
pop
or
fildl
mov
push
subl
sub
shl
repnz
test
int3
cs
andb
cmpsl
das
adc
or
ds
lret
jecxz
dec
imul
test
out
ljmp
cli
adc
inc
sub
mov
sub
outsl
jg
xchg
ret
xor
xlat
out
xchg
pop
push
mov
testb
mov
xor
adc
cmc
lea
dec
xchg
cld
mov
jns
cmpsl
mov
push
sbb
sub
enter
stos
sub
icebp
push
xchg
mov
pop
sub
mov
in
or
stos
lcall
int3
insb
fisttpll
pop
scas
jmp
rcl
fisttpl
mov
add
mov
mov
jmp
test
cltd
add
add
sub
repz
lret
sbb
cmpsb
or
push
add
andl
test
xor
imul
xor
lahf
jecxz
in
fstps
jge
comiss
mov
roll
xchg
es
jns
mov
jnp
fmull
mov
scas
movsl
xor
in
ds
inc
imul
shll
jns
xor
xor
inc
nop
jp
push
jae
mov
cltd
sbb
fidivs
sub
dec
dec
jae
fmul
xor
dec
leave
cmc
mov
ljmp
stos
adc
xor
cmp
add
xchg
js
xchg
inc
mov
cmp
repnz
and
cmp
lahf
push
jo
xchg
jmp
jbe
int
bound
pushl
jnp
jge
cmp
pusha
mov
ljmp
cli
faddl
rclb
data16
loopne
add
add
lret
sbbl
popl
cmpsb
mov
add
add
loopne
lahf
adc
imul
es
fmull
push
sti
sahf
mov
push
mov
pop
bnd
lea
clc
mov
jae
mov
push
adc
fisubrs
fucomp
push
fidivrs
pop
and
std
loopne
sbb
cli
mov
mov
pop
add
fs
insl
orl
test
cmpsl
addr16
ja
xor
in
push
arpl
lahf
aad
out
int3
sub
adc
push
inc
imul
and
int
lods
jae
ds
and
add
or
or
cmp
add
or
cmp
fsubs
nop
in
sbb
in
push
pop
mov
or
xor
fdiv
jbe
push
lret
mov
xchg
lret
xorb
mov
adc
aam
and
arpl
sub
mov
add
add
imul
movsb
and
insl
inc
ja
mov
add
add
xchg
or
xor
mov
in
push
xchg
cwtl
gs
and
es
jmp
cli
and
test
fisubs
pushw
jno
dec
lea
fisttps
mov
nop
rcl
pop
data16
fs
dec
test
xor
stc
ffree
sahf
daa
pop
lods
sub
les
jae
cmp
jg
adc
imul
jno
fmull
cmp
sbb
das
sbb
out
into
test
nop
and
out
icebp
push
shl
arpl
test
cmpsl
iret
fwait
loopne
lods
cmp
test
xchg
fisttpll
lea
mov
xlat
and
pop
pusha
scas
stc
mov
iret
adc
push
adc
iret
addr16
mov
xor
xor
add
imul
bound
jl
arpl
sbb
scas
insb
add
add
mov
sub
lahf
mov
jmp
add
nop
inc
ficoml
mov
cli
xor
pop
ja
jp
mov
push
imull
jo
jno
mov
and
push
mov
call
cli
dec
sbb
stos
test
pop
xor
stos
dec
sahf
cmp
jp
push
mov
sub
or
jno
repz
jge
jno
mov
xor
cli
shlb
jp
mov
pushf
jae
adc
mov
lods
loopne
sbb
dec
or
iret
fwait
cld
je
push
out
in
cmp
lret
pop
cmpsb
enter
lods
insb
sbb
insl
push
or
and
xorl
cld
test
test
inc
jge
xchg
jmp
call
and
inc
jg
pop
bound
data16
mov
xchg
ljmp
jle
es
sahf
pop
aad
xor
and
xor
dec
mov
lret
push
push
push
mov
outsb
mov
inc
in
ss
aas
inc
sbb
add
cltd
sub
out
inc
sub
or
pop
lret
adc
popf
add
add
push
sub
or
mov
ds
mov
mov
mov
adc
jbe
cmpsl
jo
int3
mov
and
mov
mov
cmpsb
cmp
je
inc
and
mov
push
test
pop
rorl
sub
adc
cmc
ret
cmp
or
stos
or
push
pushf
add
and
and
mov
sbb
cmp
scas
push
push
sub
sub
into
jecxz
push
dec
pop
mov
ds
mov
popf
push
push
lock
adc
loop
add
iret
imul
mov
faddl
es
and
daa
sub
adc
xchg
rol
xchg
pusha
js
add
mov
inc
xchg
jp
xchg
lret
test
fisubrl
pop
dec
lds
xchg
cmp
sti
sarb
sub
push
jecxz
cwtl
inc
add
add
add
pusha
test
mov
cld
mov
leave
sahf
add
add
xchg
popf
push
pop
fildll
add
ja
sub
cmpsb
jae
xchg
jle
cmpsb
mov
fldcw
xchg
add
lea
sub
pop
jo
jle
mov
push
cmc
xlat
push
ja
cmp
cmp
neg
lods
inc
cmp
mov
mov
xor
cmp
jnp
sbb
mov
dec
push
sti
pop
mov
in
mov
adc
sbb
and
aam
rol
lcall
sti
mov
push
xor
jg
sbbl
imul
push
repz
adc
and
and
out
arpl
xchg
jmp
fcmovnu
fs
xor
out
sahf
shrb
aam
push
mov
adc
jmp
pop
add
mov
stc
fcomip
ret
jns
jnp
mov
mov
shrb
add
add
mov
repz
repz
pop
pop
push
add
cmpsl
shl
jae
push
pusha
es
sub
sub
out
sub
scas
push
push
ljmp
push
fwait
or
xor
inc
jl
lret
inc
add
nop
nop
adc
mov
rol
push
decl
mov
xor
fidivl
mov
insb
mov
pop
pop
sub
negl
mov
rcrl
mov
inc
jmp
sub
push
push
push
xchg
jp
divl
in
mov
outsl
dec
clc
ja
xor
cmove
mov
in
mov
xor
add
adc
ja
aaa
sbb
and
push
jnp
negb
stos
jne
stos
gs
add
divb
push
in
divb
adc
jp
mov
mov
dec
jo
insb
sbb
movsb
test
lock
mov
shll
test
data16
insl
addb
add
mov
inc
inc
add
mov
add
mov
mov
inc
loopne
cmp
cmc
mov
jp
xchg
sub
lcall
adc
inc
imull
ror
mov
cmpsl
mov
aaa
test
repnz
int3
pop
pop
xchg
sbb
pop
sbb
cmpsl
xor
pop
out
in
negb
or
pop
imul
fyl2x
inc
inc
xchg
cmp
mov
in
ds
jmp
inc
push
mov
xlat
xlat
hlt
outsb
arpl
or
mov
mov
xchg
loope
imul
test
add
mov
inc
push
jnp
and
out
outsb
pop
mov
cs
jle,pt
push
sub
xor
mov
mov
into
test
out
jp
adcl
mov
inc
adc
call
or
nop
jb
out
sarl
fnstsw
add
inc
aad
cmpsl
nop
inc
add
fnstenv
mov
add
add
add
std
inc
mov
push
and
mov
add
mov
inc
loop
loop
pop
add
push
out
jno
or
and
shrb
add
mov
pop
or
repnz
mov
bound
mov
fnstcw
dec
xchg
std
push
dec
mov
mov
ljmp
mov
out
pop
cli
insl
rcrb
mov
gs
cmp
scas
in
stos
test
in
mov
cwtl
rclb
shrl
lahf
dec
push
mov
cmp
pop
cmpsl
xchg
mov
cltd
mov
adc
jge
inc
pop
leave
mov
jns
mov
fidivs
test
int
xor
add
hlt
fisubl
mov
jno
push
iret
cwtl
imul
jge
shll
mov
mov
int
insb
cmp
ss
repz
shlb
mov
and
scas
sub
adc
jns
or
add
add
inc
fdivl
push
dec
mov
frstor
add
test
inc
xchg
fcomi
imul
dec
vmwrite
fnstenv
fwait
pop
mov
bound
and
inc
cmc
loop
icebp
adc
dec
lods
addb
dec
pop
add
stc
roll
mov
dec
fwait
ds
jle
push
cmp
clc
push
add
sub
jmp
mov
jmp
rclb
adc
push
popa
rolb
call
add
test
movsl
pop
lods
dec
cltd
sahf
sub
xor
pop
jmp
inc
dec
fcom
out
pop
and
xchg
dec
loop
inc
push
pop
daa
loop
jg
sub
gs
pop
xchg
imull
stos
scas
je
sub
gs
cmp
adc
in
and
jecxz
xchg
das
inc
xor
mov
inc
popf
push
in
test
sub
lcall
fadds
gs
jno
push
cmp
lret
add
adc
mov
sbb
rcrl
mov
add
mov
inc
mov
pop
add
iret
push
cmp
xor
mov
and
fstl
add
inc
addr16
imul
mov
ljmp
into
int3
cmc
cmp
andb
loope
dec
imul
fcom
mov
cs
out
mov
aad
push
add
add
sub
or
fmuls
cmp
sbb
fwait
repz
ljmp
scas
xchg
inc
dec
mov
dec
inc
adc
call
mov
mov
inc
pop
push
aas
push
inc
fisubrl
cmp
xchg
mov
out
pop
rcrb
dec
je
xor
sbb
cs
xchg
bound
mov
and
mov
data16
mov
dec
xchg
lcall
outsb
test
push
out
pop
and
and
adc
cs
jmpw
lods
hlt
fdivp
test
movsl
sbb
add
lahf
inc
stos
add
add
stos
hlt
jmp
cmp
jbe
int
inc
out
add
add
cld
add
inc
pop
and
in
shll
push
and
subb
dec
push
xor
cmp
pop
push
and
out
aaa
insb
and
or
pop
xor
cmpsb
or
pop
pushf
pop
sbb
dec
enter
and
iret
daa
xor
lahf
jae
movsl
xorl
cmpsb
ret
mov
rcrb
xchg
dec
and
jl
push
gs
aam
rclb
mov
push
mulb
adc
push
jmp
inc
insl
cmp
xor
add
inc
mov
xchg
stc
push
test
xchg
mov
ja
xchg
xchg
cmpsl
shl
push
outsb
cmp
push
rorb
lock
out
cmp
pop
jae
andl
mov
rclb
dec
add
cmp
add
mov
mov
outsl
adc
cmc
pop
jmp
xchg
ss
or
cltd
rorb
mov
lahf
mov
cld
sub
fbstp
arpl
test
mov
add
push
nop
out
xlat
out
jg
in
xor
fnstenv
movsl
add
add
and
push
test
lea
addb
adc
or
jg
cmp
pop
and
sbb
testb
popa
mov
mov
mov
cmp
lahf
adc
out
push
scas
xlat
cmp
aaa
in
rorb
lahf
push
test
lret
xchg
push
mov
pop
mov
fwait
or
fwait
sub
inc
shrb
add
jb
lret
lret
jg
xchg
clc
imul
sub
test
loopne
andl
jg
test
enter
leave
adc
mov
mov
mov
in
lods
ss
out
dec
cmc
mov
add
nop
jno
dec
add
aam
cmc
mov
pop
sub
rorb
xchg
xchg
mov
test
pop
leave
popf
lcall
sub
push
out
test
sub
imul
scas
xor
dec
fcom
adc
sbb
pop
fbstp
fldl2e
or
jb
icebp
cmpsb
add
add
xor
sbbb
jmp
or
fs
fimull
push
xchg
mov
pop
loope
shrb
xchg
sbb
mov
call
pop
rclb
adc
or
pop
mov
xchg
mull
xor
das
xor
mov
cmc
pop
cmp
xchg
stos
sbb
mov
dec
xchg
xchg
inc
xchg
sub
ret
mov
jmp
int
cmpl
movsb
aaa
dec
jae
sarl
popa
mov
push
pop
fisubl
rol
mov
bound
xchg
xchg
or
int
lret
loop
pop
and
mov
fld
sub
loope
inc
sbb
cwtl
stos
bound
and
and
aad
mov
xor
pop
fldcw
dec
or
popf
mov
add
out
mov
inc
cmp
sub
ljmp
or
add
add
mov
fadds
mulb
add
jne
test
sti
out
mov
push
aas
dec
lahf
sub
and
pop
in
push
int3
loope
xor
call
nop
lock
cs
sbb
xchg
xchg
mov
cmpsl
fistl
pushf
adc
fcoms
pop
adc
xor
je
pop
lock
in
imul
mov
ds
inc
cmpsl
jo
push
repz
out
icebp
out
xor
mov
cmc
xchg
in
in
mov
das
imulb
xchg
pop
mov
inc
xchg
sbb
fs
int
ror
call
mov
sahf
ret
mov
scas
jle
push
faddl
xchg
outsl
test
cwtl
inc
and
xor
repz
iret
push
or
data16
out
and
shll
popa
jl
add
dec
shlb
es
sahf
cmp
adc
adc
outsb
lock
xchg
fsubl
adc
popa
sti
ret
ljmp
imul
add
lret
jnp
sti
jmp
push
mov
negb
mov
add
std
add
sub
xchg
pop
iret
aaa
jne
xlat
ror
push
lahf
push
cmp
cmp
sub
adc
jge
pushf
mov
cltd
dec
sarb
inc
cmp
icebp
popf
fstpl
push
inc
add
lahf
sbb
add
ficoms
mov
loope
js
idivl
push
jmp
push
fisttps
in
ficoml
std
or
xchg
jg
arpl
jg
dec
lret
push
inc
lret
das
dec
push
sbb
scas
add
test
dec
xchg
adc
xchg
test
repnz
xchg
or
jl
adc
jns
xor
fnstcw
fmull
pop
cli
dec
or
ss
ret
or
insb
shll
rcr
out
lea
fisttps
sbb
ret
pushf
sbb
mov
inc
fldenv
ss
int3
pop
loope
add
cmpsb
shll
aad
and
lret
in
fsubl
inc
dec
push
repz
adc
pop
adc
lods
sbb
mov
cld
mov
add
mov
jecxz
lock
out
add
add
push
mov
xchg
ret
out
mov
pop
pop
push
mov
test
jbe
cmp
shrl
fsubrs
rcrl
pop
sysenter
push
mov
cmpsb
xor
cmp
mov
mov
mov
and
mov
in
nop
inc
scas
xchg
dec
inc
adc
pop
inc
out
cmp
sbb
mov
xchg
pop
push
push
out
and
rol
outsl
clc
lahf
dec
mov
mov
cmp
xlat
test
outsl
or
xchg
mov
in
aam
mov
mov
xor
adc
xor
cmp
cmpsl
dec
rcr
add
cld
or
xchg
adc
mov
stos
in
mov
jns
ficomps
and
mov
stc
into
fisttps
push
data16
push
push
push
stos
ljmp
sub
pop
adc
mov
out
in
data16
sbb
add
cld
mov
leave
rol
cmp
add
sbb
addr16
and
xchg
call
xchg
pop
lds
out
sbb
xchg
mov
sahf
cmc
push
imul
push
fsubl
mov
mov
and
repz
mov
rol
fcoml
xor
mov
in
push
dec
dec
jae
mov
ret
das
lea
fldt
mov
jb
jmp
inc
insb
in
jnp
iret
out
loop
rorb
xor
ficomps
ja
dec
sahf
xor
arpl
pop
mov
push
cld
mov
ljmp
ss
inc
sarl
add
jl
andl
dec
or
call
clc
repz
mov
jbe
lcall
jl
les
shll
mov
add
add
out
cmc
mov
xor
add
add
mov
adc
sub
out
jl
lret
js
pop
cmpsb
subb
mov
sub
jns
dec
or
pop
push
lea
je
cmpsl
pop
and
cmpsl
sub
pushf
imul
mov
in
xor
mov
pop
push
mov
xchg
out
jo
sub
adc
pop
jl
je
add
arpl
clc
add
int
lret
repnz
push
pop
cli
int3
cli
xchg
sub
lret
ja
cmpsl
loop
test
sar
cld
xor
adc
sbb
jnp
test
dec
mov
and
jmp
push
popa
ret
das
and
dec
dec
jle
pop
outsl
pop
mov
aam
cmp
bswap
pop
cmpsb
xor
cmc
fisttpll
pop
mov
fimull
je
or
sub
das
push
jns
test
mov
xchg
adc
lea
fnstenv
ret
cs
mov
clc
mov
push
jnp
lea
add
fucomip
std
dec
std
pop
lcall
xchg
pop
push
test
add
add
arpl
rclb
xorl
in
test
adcl
cli
sarl
or
add
push
sbb
jno
push
in
and
lea
sub
inc
and
mov
mov
shrb
push
jb
outsl
aam
inc
sub
cmpsb
mul
out
das
xchg
std
in
push
and
add
mov
xchg
cmpsl
add
cmp
in
mov
sahf
push
cltd
mov
sub
lret
pushf
add
cwtl
cld
or
or
bound
aaa
imul
scas
mov
ja
adc
mov
and
or
cltd
cmc
ret
sti
aaa
test
inc
sub
sbb
sub
xor
ja
fbstp
cmp
fsubs
jno
xchg
in
mov
jno
cs
out
inc
sub
mov
repnz
xchg
in
ja
pop
mov
ret
mov
jae
add
dec
fadds
fidivs
loop
ljmp
xchg
dec
sub
add
add
mov
outsb
mov
jge
andl
or
mov
mov
outsl
sub
mov
sub
dec
pop
lods
fs
je
imul
push
mov
jo
fwait
xchg
aam
lcall
test
pop
ror
pop
scas
lcall
ds
int
leave
lea
dec
test
sub
mov
or
cmp
in
xchg
sahf
xor
sub
insl
xchg
mov
pop
fs
lods
mov
and
mov
jnp
jmp
testb
adc
pop
into
out
shlb
mov
add
jl
pop
movsb
add
scas
xchg
test
adc
nop
cmpsb
xchg
lds
and
mov
cli
dec
stos
repnz
aaa
test
add
push
cmp
hlt
and
sub
mov
add
loope
push
test
xchg
mov
cwtl
dec
sub
xor
mov
add
add
xchg
jg
jmp
std
mov
mov
add
add
pop
out
push
aam
test
xor
cs
mov
inc
adc
out
adc
adc
ss
jae
dec
cmp
mov
mov
xchg
push
adc
mov
ja
sub
push
dec
scas
add
mov
incl
jle
fbld
test
ss
cmp
xchg
pop
inc
inc
out
mov
test
adc
out
out
xchg
cltd
shrl
stc
xor
cli
repz
mov
jo
and
mov
pop
mov
ss
dec
and
mov
sub
addr16
cbtw
jge
into
pop
inc
inc
mov
pop
loopne
int3
lahf
xchg
in
cmp
mov
out
cmpsb
stc
fwait
ret
out
cmp
lock
jmp
cmp
mov
dec
jl
dec
mov
inc
in
xchg
out
sub
cmp
mov
push
mov
xchg
sbb
mov
rolb
or
ljmp
dec
xor
inc
add
add
xor
inc
mov
inc
push
push
mov
add
sbb
ror
iret
repnz
clc
and
stc
mov
push
nop
loop
xor
pushf
push
scas
mov
push
add
inc
xor
test
js
mov
mov
aam
push
stc
lahf
es
add
fsubl
rcrb
pop
incb
mov
mov
jg
pop
sahf
lds
clc
lahf
mov
jp
rcll
fldt
dec
clc
and
or
iret
push
cltd
or
test
pop
fildll
push
sub
lods
out
inc
sbb
mov
mov
mov
jae
and
js
inc
test
xchg
call
shll
enter
test
cli
inc
not
adc
lret
xlat
scas
je
mov
mov
xor
mov
out
les
and
test
push
push
test
and
mov
call
addb
push
add
add
xor
cmp
inc
call
adc
mov
add
test
mov
cltd
dec
jbe
in
jno
sbb
jbe
cmp
cmpl
movsb
mov
cmp
push
aaa
mov
scas
jmp
push
int
dec
mov
out
mov
ja
into
mov
xor
into
mov
xchg
jae
pop
stos
push
adc
ret
mov
adc
cmp
or
mov
jp
sbb
ja
push
lahf
sub
jae
in
mov
daa
lods
or
jo
pop
xchg
mov
ljmp
test
scas
cs
ds
sahf
stc
mov
mov
cmp
out
iret
rclb
xor
jecxz
std
inc
je
xor
lahf
jbe
or
cwtl
orl
or
pop
and
ss
cld
mov
pusha
inc
mov
out
lcall
outsb
cmp
rclb
or
test
mov
jg
and
add
es
les
mov
arpl
pop
dec
sub
add
pop
jnp
jb
push
add
mov
push
jns
in
cmp
or
sbb
xchg
dec
aam
pop
sub
jns
pop
aas
inc
enter
jne
and
icebp
out
push
cmpsb
pop
int3
jae
mov
lret
imul
and
xchg
cltd
mov
test
xchg
scas
adc
mov
inc
icebp
adc
and
test
clc
daa
adc
lock
mov
arpl
adc
insl
lcall
outsl
dec
fwait
jge
imul
inc
sub
rclb
add
cwtl
push
lods
cmp
fcomi
dec
push
xor
push
mov
and
out
add
out
or
jle
push
je
mov
mov
out
pop
cli
movsb
mov
lea
daa
int3
push
pop
fisubrs
fisubrs
daa
dec
dec
lcall
add
shlb
add
jnp
mov
add
add
clc
pop
stc
out
push
pop
bound
mov
mov
add
mov
inc
ret
cmpsb
push
test
pusha
lahf
lahf
out
inc
test
cmp
push
xchg
jnp
xor
insl
stos
daa
scas
and
inc
and
xor
sbb
inc
mov
out
lds
pop
pop
and
cld
sbb
lahf
inc
cmp
mov
xchg
int
mov
scas
jg
cmpb
push
push
pop
mov
pop
dec
aaa
adc
jecxz
xchg
rclb
daa
xlat
outsb
scas
mov
sub
int3
rcrl
xor
faddp
push
lret
xchg
xorl
pop
sub
pop
ret
cmp
xchg
push
ljmp
shl
and
out
pop
sbb
jecxz
mov
or
inc
iret
adc
not
push
sbb
xchg
fwait
mov
xor
dec
repnz
push
dec
mov
stos
and
addr16
add
add
push
mov
lcall
push
xor
add
cmp
sub
xchg
rorb
cmp
xchg
and
xchg
mov
icebp
pop
nop
add
test
das
dec
jae
xchg
mov
xchg
jge
xor
fcomi
add
mov
sub
scas
out
xchg
imul
dec
insl
adc
ficoml
jge
ret
aad
mov
lds
adc
aad
fwait
sbb
fmul
dec
add
mov
mov
pop
popa
sbb
in
push
push
sub
enter
outsb
jbe
jns
jo
push
sub
adc
jecxz
ret
or
xlat
int3
and
cmp
push
pop
fstpt
or
test
push
fst
cmc
and
cmp
imul
fildl
notb
xchg
mov
push
int3
and
aas
sub
fs
add
and
std
push
cmpsb
repnz
movsl
inc
add
mov
sub
mov
shrl
add
jne
mov
int3
insb
lret
adc
mov
add
push
ret
sub
mov
icebp
cltd
xchg
aaa
adc
xor
repnz
sarl
jp
les
mov
xchg
les
loop
subb
jmp
cmpsb
mov
or
mov
jle
xlat
repz
mov
push
addr16
shrb
ds
faddl
movsb
pop
xor
cmc
mov
dec
cmp
inc
imul
daa
xor
mov
shll
xchg
addr16
popf
cmpsb
sbb
add
mov
sub
mov
in
test
push
xchg
rorl
pop
les
xchg
adc
xchg
jb
clc
or
aad
cmp
jmp
dec
mov
imul
add
cmc
test
xchg
movsl
xor
out
insl
andb
and
nop
mov
inc
sarb
test
int
add
add
pop
sbbl
fstp
rorl
and
aam
mov
add
xor
mov
inc
push
nop
inc
fdivrp
pop
jae
testb
in
mov
add
push
pop
hlt
mov
pushf
push
lcall
je
ret
sbbl
pop
inc
xor
out
mov
jp
push
fwait
ja
ds
sahf
test
leave
inc
pop
shrl
aas
frstor
or
dec
sub
jnp
mov
cmpsl
mov
int
and
add
cmp
mov
jge
rorl
rclb
pushf
lcall
dec
out
sti
push
pusha
cltd
xorb
push
int
popf
add
or
and
and
cmp
push
push
icebp
cwtl
in
jmp
lock
push
sub
dec
les
aam
jns
mov
mov
xchg
inc
pop
popa
xchg
imul
imul
push
inc
les
cmp
out
pop
ljmp
cli
sub
cmp
add
loope
mov
jecxz
out
mov
adcl
mov
add
jbe
jne
mov
js
and
incl
xorl
sets
insl
testb
aas
test
xchg
pop
sub
lret
lods
ret
mov
xchg
jne
lret
push
push
test
int3
and
or
fwait
mov
loope
and
xchg
rcll
cmc
push
dec
and
loope
add
mov
adc
fstpl
mov
adc
in
jns
andb
push
in
stc
sbb
add
pop
push
loope
sahf
lds
add
pop
je
imul
jae
add
push
shl
in
pop
jb
sti
mov
int3
aas
shlb
fwait
push
or
shll
rolb
hlt
jbe
cmpsl
fnsave
in
cli
addr16
out
pop
cmp
cmp
std
add
mov
push
mov
clc
adc
popa
and
fcomi
cli
fiaddl
add
push
xchg
test
jg
into
lret
orl
add
add
xor
ret
pop
mov
daa
clc
sti
jo
add
xor
mov
in
push
js
mov
push
lret
imul
lret
push
pop
push
adc
loope
jg
pop
jl
sahf
in
sti
popa
les
xchg
sahf
popa
out
pop
or
pushf
idivl
ja
rcrl
sahf
iret
xor
cmp
cmp
jae
inc
ffreep
fadd
movsb
lea
lcall
or
push
dec
das
in
std
push
dec
in
add
scas
fwait
push
fstps
out
jp
sarb
xchg
jnp
pop
lods
mov
inc
cmp
loop
es
jnp
movsl
sbb
mov
and
jne
xchg
xor
mov
mov
call
push
sbb
cli
sub
mov
icebp
or
nop
ret
xchg
mov
mov
sub
fidivrs
push
mov
mov
add
add
adc
in
lcall
jae
dec
mov
cmpsl
cmp
add
add
push
pop
push
ja
fnstenv
lods
pop
cltd
mov
icebp
xchg
sbb
pop
loope
and
pop
sub
and
and
xchg
addr16
mov
aas
dec
hlt
sub
jne
push
ficoms
fistpll
fsubrl
push
loope
inc
or
inc
roll
mov
jp
cmp
shr
jge
icebp
out
cmp
loop
mov
mov
clc
mov
cmp
cmp
pop
cmp
ffreep
test
movsl
dec
xchg
leave
fcoml
fdivl
cli
push
jae
stc
add
inc
xor
sbb
inc
dec
in
pop
cmp
cmp
pop
lea
test
pop
mov
xlat
mov
negb
lret
int
mov
ljmp
sarl
add
and
cwtl
sbbb
jo
sti
hlt
inc
pushf
shll
aam
fsubs
jae
outsb
push
addl
ja
inc
popf
pop
and
push
lret
test
adcb
or
add
dec
or
jg
dec
arpl
sbb
add
or
out
push
mov
filds
pop
cmc
lock
fld
mov
cmp
mov
lds
pop
and
adc
dec
pusha
addr16
leave
addr16
mov
adcb
inc
and
or
enter
fidivrs
in
jge
sti
push
cmpsb
xchg
xlat
and
dec
cmp
outsb
shll
xor
subb
vmwrite
cmp
fimuls
les
cmp
fdivrl
cmpsb
cld
xor
sub
mov
mov
jmp
add
fld
test
inc
mov
lahf
sbb
pop
mov
xor
xchg
dec
data16
inc
sub
xchg
lcall
jns
cwtl
out
dec
stc
cli
loopne
loop
cli
arpl
and
jns
jl
insl
xor
aaa
sbb
aad
out
jecxz
dec
dec
jbe
dec
out
mov
sbb
cmp
test
mov
add
add
out
idiv
outsl
mov
nop
in
adc
push
mov
add
outsb
mov
stos
jnp
loop
cli
movsl
jle
imul
add
xor
pop
adc
add
pop
mov
mov
push
pop
sub
andb
inc
stos
mov
mov
cwtl
mov
add
clc
inc
xor
lods
daa
movsl
aam
cltd
lods
sbb
popa
outsb
sahf
daa
push
push
jnp
xchg
pop
test
inc
lock
inc
pop
cmpsb
in
dec
pusha
data16
lock
xchg
mov
pop
out
push
xlat
or
pop
xchg
lret
push
push
dec
push
jno
inc
dec
pusha
jge
push
aad
lods
iret
rclb
nop
mov
movsl
test
cs
leave
sahf
sbb
out
rclb
add
jmp
or
dec
jg
cmp
xchg
adc
sbb
lret
outsb
mov
adc
mov
int3
xchg
movsl
xchg
iret
adc
push
cmp
mov
cld
add
jbe
pop
movb
pop
lret
imul
stos
iret
sub
sti
sbb
add
xor
mov
pop
jo
mov
add
add
sbb
sub
out
outsl
push
mov
sti
sub
cmp
ss
shll
push
mov
repnz
add
sub
inc
mov
add
xchg
jb
test
es
mov
jb
imul
sub
dec
divb
xor
mov
push
xchg
cltd
cmp
scas
insb
cmpsl
sahf
mov
sbb
jae
mov
pushf
fistl
dec
jo
ret
repnz
mov
add
or
jbe
add
cmp
dec
dec
sahf
xchg
push
adc
lret
jnp
fldln2
pop
sub
out
xchg
iret
xlat
and
push
cmp
in
roll
sub
sbbl
bnd
sbb
adc
jns
adc
mov
sti
enter
or
lods
cmp
mov
mov
mov
xchg
xchg
test
outsl
add
add
fistpll
call
ja
into
and
add
add
jecxz
test
jle
test
cs
fdivrl
fimull
mov
pop
sbb
mov
ljmp
call
sbb
shl
cmpsb
xchg
xchg
xor
fcmovnbe
int3
lock
sub
lret
jge
or
jl
imul
ss
les
cltd
mov
adc
scas
sub
rorl
or
pop
mov
pop
and
add
mov
lods
and
pop
stos
addr16
in
sub
rorl
ss
popf
out
fyl2x
out
out
mov
push
hlt
lods
popa
in
arpl
imul
arpl
mov
jmp
imul
popf
cmp
inc
pushf
pop
stc
xchg
sbb
inc
in
call
push
xchg
sbb
sub
dec
add
js
jge
sub
add
stos
aaa
test
outsl
pop
jl
or
cmp
add
into
std
sti
leave
sti
iret
jmp
cmp
add
out
or
out
inc
repz
loop
xchg
stos
cmp
imul
in
rcll
mov
ret
mov
xor
add
xchg
dec
decl
push
xchg
stos
fidivrs
cltd
jl
jmp
mov
cld
leave
enter
jmp
subb
mov
sbb
xchg
mov
jns
xchg
and
or
in
or
fisubrl
cmpsl
hlt
jns
shl
das
dec
jbe
imul
xor
push
arpl
aaa
test
or
ret
cmpsb
fcmove
dec
push
add
sbb
add
lret
cmp
cmp
mov
sbb
cltd
std
sub
outsl
mov
mov
add
pop
xchg
test
cmp
stc
or
push
testl
sbb
jl
in
xchg
or
jmp
enter
adc
lcall
add
mov
xor
pop
lahf
imul
dec
scas
lret
mov
movsb
pop
xchg
jl
and
mov
push
test
pop
xchg
dec
dec
cld
mov
mov
or
stc
cmpsl
or
mov
shll
ret
and
mov
or
sub
lock
mov
inc
fidivrs
das
jmp
jmp
fidivrl
mov
adc
stos
xchg
pop
pop
mov
mov
push
rcrb
je
stc
push
push
cmp
add
divl
push
scas
std
into
pop
and
and
jmp
leave
xor
aaa
outsl
cmpsl
cs
cld
xor
out
jp
and
fs
in
ja
xor
inc
and
and
mov
iret
fcmovne
aaa
pop
mov
fistpl
movsl
pop
dec
add
mov
sarl
jo
xchg
sub
inc
xor
dec
ret
xlat
mov
push
cmp
add
add
jg
mov
sahf
loop
xchg
mov
add
add
jmp
push
or
xor
dec
imul
push
out
xchg
xchg
sub
push
call
pop
sub
pop
xchg
pop
adc
rcrb
es
and
jle
movsl
jmp
dec
ret
adc
rcrl
lret
push
inc
cwtl
push
adc
fisttps
cmpb
addr16
xor
xchg
push
sbb
and
outsb
jmp
mov
mov
addr16
gs
outsb
push
leave
leave
push
inc
mov
adc
and
xor
sub
mov
out
xchg
or
cmpsl
lret
bound
out
cmp
lahf
sub
imul
jo
mov
mov
lahf
cmpsb
dec
pushf
filds
sysexit
popf
icebp
outsb
sti
xorl
dec
cmpsb
rorl
mov
mov
sub
jl
lods
add
jns
out
push
imul
inc
inc
fsubrs
icebp
movsb
andl
stos
add
pop
cmc
mov
add
add
inc
enter
pushl
cld
sbb
jae
add
add
xchg
mov
jecxz
aas
jne
rorl
inc
xor
fwait
xchg
mov
lods
adc
gs
repnz
loop
inc
gs
sub
or
sub
inc
lahf
rcrb
mov
clc
jo
push
outsb
les
movsl
cmpsb
mov
jns
inc
stos
cmc
fldt
add
vpand
adc
xor
mov
dec
mov
xchg
adc
jnp
xor
ret
add
cmp
xchg
pop
and
jb
add
sub
loop
inc
xchg
push
sarb
dec
out
jp
push
or
xchg
xchg
lock
jge
cmc
out
jge
sbb
xchg
mov
sub
lds
dec
addr16
pop
hlt
ss
scas
sub
mov
sub
or
cltd
ret
inc
aam
adc
lcall
fcompl
xchg
stc
pop
subb
jecxz
in
add
add
pushf
shrb
lcall
jnp
in
js
add
add
jno
pop
pop
dec
scas
out
lret
cmp
movsl
xlat
cld
jo
adc
lock
ss
sarb
iret
push
iret
mov
mov
pop
xchg
adc
in
aas
cmp
sub
xlat
mov
push
movsl
lcall
xchg
pushf
sbb
imul
sbb
pop
roll
shrl
stc
mov
push
out
jbe
decl
dec
add
adc
jp
ffreep
sbb
or
mov
sub
repnz
hlt
ljmp
sub
ljmp
dec
or
divb
test
imul
lods
add
pop
scas
aad
inc
cltd
and
xchg
xor
cmpsb
push
mov
cltd
add
sub
pusha
leave
test
cmc
ds
sbb
pop
sti
inc
xchg
mov
negb
inc
xchg
ja
inc
daa
rcrl
in
inc
sbb
cmp
xchg
roll
mov
push
ljmp
sub
scas
mov
aas
scas
fsincos
shll
add
cmp
push
hlt
xchg
adc
aam
lret
pop
adc
outsl
cmc
bound
roll
pop
jno,pt
dec
cpuid
in
jbe
in
mov
push
int3
push
pop
loop
sub
xchg
dec
mov
pop
fidivl
lahf
scas
or
pop
jmp
ljmp
ljmp
mov
ja
lods
push
dec
fld
jns
popa
pop
xor
mov
cwtl
je
sub
mov
lods
int3
fstl
inc
fwait
xor
popa
ds
mov
rorl
push
mov
fdiv
mov
push
les
push
orb
outsl
das
out
cmp
scas
hlt
mov
arpl
pop
bound
repz
xlat
enter
mov
xor
pop
inc
rorl
cmpsl
or
adc
shrb
cmpsb
insb
fidivl
push
xlat
les
fwait
sub
call
std
cmp
add
testl
jle
and
add
jg
jne
jne
jg
loop
mov
fiaddl
add
add
jbe
test
rcll
int3
adc
imul
mov
bound
popf
popf
movsb
sbb
mov
dec
adc
dec
adc
jge
sub
cmp
mov
and
adc
pushl
xchg
add
xchg
iret
or
std
leave
jecxz
sbb
jecxz
mov
jmp
adc
add
add
sbb
xchg
in
mov
adc
push
mov
mov
cwtl
dec
sub
sbb
insb
dec
sub
xor
mov
ds
frstor
push
fdivs
cltd
cmp
cmc
lods
jno
insb
in
shll
bound
pusha
lods
hlt
sub
imul
pop
cmpsb
or
inc
scas
aas
aad
and
cmc
mov
mov
push
fistps
out
int3
mov
cld
cli
idivl
sbb
add
add
dec
pop
mov
cmc
mov
cmpsb
xchg
add
add
jnp
dec
adc
cld
xor
ds
or
mov
mov
data16
fisttpll
push
outsl
ror
mov
mov
mov
sub
jge
mov
sarl
sub
cmpsl
out
xchg
adc
fidivrs
mov
sbbl
aam
js
mov
xchg
aam
pop
mov
scas
and
inc
jecxz
andb
stos
push
pop
pop
aas
pop
pop
jle
ljmp
cmp
adc
ret
mov
add
dec
push
aam
mov
out
xchg
mov
push
mov
movsb
sbb
pop
pop
cmp
jnp
xchg
xchg
mov
cwtl
mov
outsb
add
mov
push
dec
call
inc
fcmovne
mov
ficoml
cmc
mov
inc
outsl
pop
add
push
rcll
push
loop
and
jmp
or
out
out
inc
jns
jbe
stos
jecxz
add
add
outsb
jle
lods
testl
movb
add
lahf
sub
mov
pop
in
jnp
aam
nop
add
lret
es
mov
dec
scas
xor
mov
test
mov
pop
fcomip
inc
adc
jne
test
lret
imul
lret
mov
or
jg
int
xchg
rorl
mov
add
push
js
dec
cmp
inc
cs
inc
ds
sbb
cmp
push
mov
stos
pop
inc
ret
stos
xor
icebp
sti
xor
mov
lock
dec
xor
shrb
cmc
push
loop
and
jle
xor
lods
cwtl
push
addr16
xor
lret
mov
mov
stc
xchg
and
pop
push
cmpsb
adc
test
jge
in
cmpsl
xlat
int
scas
fsts
adc
lahf
and
mov
imul
lret
push
adc
dec
mov
repz
hlt
xchg
es
pop
jno
daa
fnstcw
jo
inc
add
xchg
fisttpl
push
inc
sti
out
add
add
mov
xchg
insb
test
movl
add
and
mov
ret
repz
jp
aaa
sbbb
fdiv
push
mov
fcoml
test
dec
dec
hlt
in
rcrl
mov
mov
in
lahf
jle
mov
loopne
inc
or
sub
pushf
popa
pop
movsb
dec
or
fnstenv
mov
xchg
adc
fcompl
jo
adc
mov
adc
shll
pop
bound
jl
in
rcr
xor
cmpsl
arpl
fbstp
mov
push
gs
fistpll
jb
pop
add
push
jnp
movsl
inc
adc
mov
test
bound
fists
cmp
setbe
and
aaa
clc
or
mov
or
fdivp
fwait
sbb
sbb
push
pop
adc
shlb
add
leave
in
out
movsb
test
cmp
lcall
sbb
lahf
and
call
mov
mov
or
add
add
out
sti
xlat
in
aad
ret
inc
xchg
enter
add
add
mov
test
mov
inc
xor
movsb
in
bound
xchg
sbb
adc
mov
jp
shlb
push
mov
jnp
popa
xchg
jbe
fdivl
lds
jae
inc
inc
jecxz
and
popf
mov
push
mov
xchg
xchg
xchg
rolb
mov
or
out
mov
sbb
lret
pop
pop
push
inc
movsb
or
test
aas
and
pop
sar
add
mov
mov
in
repnz
incb
lods
fistpll
in
lret
lock
aam
xor
ret
dec
push
stos
int3
push
jmp
cmpsl
pop
popf
iret
sub
movsl
push
repnz
mov
not
cld
push
or
add
push
ljmp
lods
or
mov
push
insb
or
addb
add
jmp
pop
test
jbe
lahf
cmpsb
mov
or
cwtl
roll
lods
cli
sub
dec
mov
inc
add
add
push
sub
cmp
jg
and
mov
lret
and
jg
leave
add
add
movl
data16
xor
std
fildl
test
loope
xchg
adc
addr16
jp
push
pop
push
push
pop
dec
jne
into
pusha
jns
dec
xchg
xchg
cmp
out
add
sub
jp
dec
leave
pop
out
cmp
shll
in
mov
rcll
cmp
sbbb
aas
enter
lds
aaa
jp
jecxz
mov
out
les
es
mov
cmp
adc
mov
int3
cltd
xchg
in
xor
scas
mov
vprotq
cmp
and
jo
jae
push
pusha
dec
lahf
repz
insb
pop
xchg
pop
mov
sbb
xchg
jb
fwait
push
mov
push
mov
or
sahf
je
push
or
pop
adc
pop
push
mov
rcrb
mov
push
push
jbe
push
cmp
outsb
cmp
notl
mov
ficoms
in
add
dec
out
add
add
xor
fistpll
out
repz
fcoms
cmc
cmp
add
add
out
clc
mov
pop
or
mov
mov
push
xor
xchg
mov
lcall
sub
cmc
pop
in
sub
push
das
daa
push
test
mov
bound
and
scas
aam
pop
xlat
pop
dec
jns
mov
xor
fistps
dec
cs
shr
lods
sbb
fcmovnu
sbb
pop
out
sbb
and
js
arpl
or
mov
stos
push
push
jae
stc
xchg
adc
rorb
sbb
dec
in
inc
popf
push
lahf
sbb
xor
lret
jbe
xacquire
movsl
inc
fsubrs
pop
add
adc
pop
aas
jbe
pop
push
push
imul
and
sbb
addr16
dec
pop
int
insb
or
arpl
cli
inc
in
sbb
nop
adc
stc
jecxz
cmp
aam
cmp
push
pusha
dec
push
fwait
stos
test
mov
icebp
xchg
fidivl
add
add
mov
mov
scas
dec
mov
add
jnp
aad
xor
cmpsl
insb
and
icebp
sbb
imulb
jmp
or
pop
ss
push
inc
push
or
mov
jmp
leave
mov
xor
cmp
jo
icebp
imul
fsubs
xchg
mov
cmp
xchg
sub
mov
outsl
sbb
les
cltd
sub
jns
jecxz
or
lds
push
pop
push
mov
dec
ljmp
outsl
push
push
loop
adc
adc
ret
jmp
aas
ds
ret
pop
push
adc
cmc
movsl
pavgb
nopl
int3
pop
mov
jno
ret
push
jns
and
mov
xorb
ret
imul
leave
fs
xor
adc
sbb
movsl
mov
mov
jns
mov
scas
xchg
sbb
gs
mov
scas
in
test
add
add
stc
enter
in
sbb
push
inc
hlt
mov
stos
int3
add
add
int
xor
push
loop
pop
dec
nop
inc
sbb
cwtl
push
push
inc
cmp
xor
pop
paddd
mov
pushf
inc
and
add
sub
or
fcmovu
mov
repz
fnsave
xchg
daa
or
sub
les
pop
lret
or
mov
cmpsl
and
sub
add
mov
xor
sub
pop
adc
ficomps
cs
dec
je
xor
dec
xlat
mov
notl
xchg
popf
shll
cmp
sbb
addr16
cmp
insb
adc
or
mov
addb
and
lods
push
xor
ror
sbb
arpl
out
inc
xchg
sbb
inc
push
ret
out
je
push
clc
mov
insl
xor
and
cmp
into
cmp
jmp
pusha
outsb
iret
or
ljmp
leave
mov
jnp
sbb
jle
stos
cld
sahf
fsub
push
insl
add
add
imul
cmc
call
inc
push
popa
lods
push
add
add
popa
mov
adc
sub
fstpl
imul
mov
fcmovnu
cmp
cli
pop
dec
jne
movsl
sbb
lahf
sub
test
jg
dec
and
pusha
movsb
fisubs
or
dec
sub
xchg
movsl
mov
jp
aas
add
xor
mov
mov
jno
lahf
cmp
shrl
jg
fldt
data16
mov
cmp
je
shrl
jle
lds
ss
pop
loop
scas
test
mov
decb
pop
std
sbb
pop
loopne
sti
mov
adcb
push
nop
lods
imul
xor
add
and
xchg
iret
cld
push
inc
fistpl
int
xchg
cmp
and
add
adc
cmp
movsb
push
notl
mov
mov
mov
push
xor
into
cmpsb
add
add
ja
iret
sub
or
mov
add
add
mov
dec
xchg
ds
mov
daa
hlt
jmp
iret
lods
ss
lds
push
push
call
cmp
pop
push
loop
ds
popf
cs
mov
sbb
jns
pop
fimuls
out
xor
xlat
bound
lret
lcall
orb
inc
pop
rcl
dec
or
bound
xor
aam
out
inc
or
adc
xor
lock
jno
xorl
and
jne
dec
jbe
mov
movsb
jecxz
mov
add
lock
lahf
arpl
push
mov
movsl
pop
sbb
sub
mov
inc
mov
loope
xor
push
lcall
and
inc
data16
xchg
ljmp
in
pusha
mov
decb
pop
pop
lock
in
jbe
cmp
inc
sbb
cmc
mov
divl
inc
or
repz
xchg
or
mov
mov
out
out
out
into
gs
cld
test
iret
add
add
dec
lret
inc
fwait
ss
cmp
xor
mov
pop
sub
out
xor
cmpsl
xor
in
dec
dec
xor
mov
jmp
cld
test
xor
inc
mov
pop
or
mov
fs
xor
adc
notl
or
cmp
xor
lcall
cwtl
jae
inc
loop
mov
imul
nop
stc
or
lods
loope
pusha
push
adc
xchg
cmp
or
scas
hlt
int
adc
inc
adc
inc
nop
pop
dec
jle
es
add
and
stc
lea
daa
xchg
inc
sub
aas
fisubl
repz
mov
xchg
into
sub
pop
jge
lea
enter
icebp
mov
das
lock
das
inc
adc
adc
call
mov
rolb
pop
sarb
fwait
stos
xchg
add
loopne
and
je
out
mov
push
push
daa
cmp
add
add
jae
sbb
fwait
std
push
pop
mov
inc
inc
ljmp
shrl
xchg
mov
loop
mov
inc
clc
push
inc
push
lahf
mov
out
jne
sbb
shll
cmpsl
popa
int
add
or
inc
ret
or
adc
mov
add
mov
les
adc
mull
lods
mov
cli
push
pop
sbb
js
jmp
or
test
iret
adc
stc
pop
fwait
cld
ret
jns
mov
fstps
loope
cltd
les
xchg
jl
jnp
movsl
push
clc
inc
and
sbb
jb
mov
mov
es
sub
in
mov
xchg
push
cld
dec
jmp
out
xor
pop
call
xchg
pxor
push
icebp
mov
insb
mov
or
negb
nop
and
push
add
cld
pop
or
icebp
xchg
or
dec
add
add
dec
inc
dec
daa
dec
das
outsb
imul
push
xchg
add
add
add
cmc
mov
sub
lcall
dec
mov
std
cmp
dec
das
in
jp
cmp
imul
fidivrs
push
mov
pusha
jne
jbe
push
fstp
loop
fsts
adc
xor
push
add
jae
adc
adc
adc
ljmp
mov
adc
inc
stos
inc
daa
aas
sub
ret
and
js
sub
bound
xor
testb
push
jb
gs
xchg
sub
xor
rol
mov
sbb
scas
lock
out
mov
mov
cmp
mov
lret
mov
cmp
seto
popa
aaa
cmc
bound
xchg
in
test
mov
daa
iret
inc
les
xchg
andb
imul
sarl
lret
hlt
cwtl
sbb
cmpsl
and
xchg
inc
sub
scas
icebp
add
add
popf
mov
lahf
ret
or
loopne
enter
add
jmp
lods
mov
dec
loop
aam
pop
and
xor
push
cmp
js
or
xchg
xor
mov
cmp
mov
mov
aas
mov
lahf
mov
push
mov
shl
cmp
mov
das
xchg
dec
stc
arpl
mov
pusha
add
scas
scas
cs
clc
stc
jg
jp
mov
adc
mov
xor
lock
and
xchg
add
leave
aas
inc
fcoml
cmp
sub
cmpsb
xchg
popa
dec
outsb
or
imul
sahf
lds
add
pop
fld
aad
xchg
pop
ret
fmull
cmc
mov
shrb
fsubrl
inc
pop
dec
inc
jne
int3
inc
or
adc
push
push
pushf
xor
jns
gs
out
lods
mov
stos
mov
sahf
pop
add
insl
sub
jns
inc
test
ret
add
mov
mov
mov
pop
xchg
or
push
mov
int
add
add
push
cmp
js
popf
jo
and
stc
xor
add
pop
je
lea
cmpsl
jge
fcom
aam
mov
pop
pop
iret
sub
icebp
mov
dec
inc
push
out
dec
dec
jecxz
mov
xorb
int
jne
js
addr16
jo
cmp
iret
mov
sbb
push
pushf
pop
jbe
jbe
negl
and
jmp
int3
sti
mov
dec
push
push
bound
rcll
add
div
adc
xchg
mov
imul
mov
mov
dec
push
out
inc
jns
mov
cmp
test
jb
rorb
imul
mov
mov
push
mov
add
movb
mov
xlat
mov
push
and
xchg
push
stc
arpl
daa
js
inc
in
scas
inc
das
xchg
clc
fwait
xchg
mov
inc
mov
imul
sbbl
jae
adc
add
out
sbb
mov
add
add
add
sbb
sub
dec
das
jmp
add
add
mov
jne
cmp
sbb
loop
movsl
dec
mov
je
xor
add
mov
xchg
xchg
sahf
mov
jno
jb
enter
jae
cli
lret
sbb
xchg
fcmovbe
mov
fcom
adcb
jge
repnz
lds
cmpsl
inc
cmp
jle
incb
mov
enter
jle
pop
es
xor
mov
add
adc
hlt
adc
andb
fdivl
pop
sub
or
mov
rcrl
or
rorl
push
stc
dec
mov
sbb
xchg
in
andl
stc
out
mov
in
dec
pop
movsb
lods
outsb
sub
cmp
mov
push
pop
jmp
sub
clc
mov
push
push
mov
pop
lea
push
ss
xchg
sti
dec
outsl
dec
int3
sbb
adc
xchg
jmp
add
ss
mov
mov
add
add
ds
jae
jne
dec
xlat
aad
add
pop
fidivrs
sub
sbb
mov
add
xor
xchg
shll
cmp
test
adc
je
push
enter
int3
fisttpl
inc
cli
roll
sub
out
call
es
sbb
sub
inc
adc
stos
jne
jmp
pop
out
jecxz
negl
insl
mov
cli
sarl
adc
lods
dec
jne
in
sub
test
mov
and
mov
push
and
or
or
xor
push
inc
xorb
into
mov
mov
test
mov
fistps
std
pop
iret
inc
add
jp
mov
arpl
outsl
jnp
jecxz
std
or
sub
add
pop
loop
loope
popf
or
stc
in
jnp
cmp
push
or
sbb
iret
in
cmp
fmull
imul
sbb
pop
inc
in
dec
inc
int3
scas
jg
jnp
xchg
sub
mov
inc
adc
add
xchg
and
idiv
lahf
insl
mov
cmp
mov
add
aas
cmp
add
in
sbbb
fstpl
sahf
nop
decl
loope
sbb
xlat
aaa
jo
jmp
shr
adc
lcall
pusha
mov
lods
in
cmp
cmp
inc
sub
add
out
rorl
jo
xor
ret
cmp
inc
aaa
ss
push
jle
xor
nop
addr16
shll
jne
in
add
push
add
pushf
sub
rcrl
jae
in
inc
hlt
imul
fwait
jecxz
sub
pop
cmpsl
sub
adc
out
push
add
fmull
out
push
sbb
xor
push
stos
mov
stc
adc
enter
icebp
or
in
ret
sub
pusha
fsubrs
scas
pusha
stc
cli
sub
cltd
fists
int3
arpl
sub
out
arpl
ret
rcrl
out
and
jb
mov
xlat
ficompl
aaa
addr16
add
add
xchg
ja
push
jg
leave
or
lods
ds
nop
loope
add
add
cld
outsl
ljmp
inc
pop
popf
rcll
cmp
popa
test
inc
cli
in
or
sbb
sub
stos
cmp
insl
fnstcw
jg
mov
pop
xor
fcoms
xchg
stc
aas
dec
test
hlt
or
je
iret
in
insb
jp
in
fisubrl
push
push
fstl
fs
jmp
clc
push
mov
push
or
sub
lock
and
outsl
js
sbb
pop
push
in
mov
in
sbb
scas
mov
sub
jne
xchg
je
push
clc
add
xor
pop
loope
jnp
jo
mov
sub
xchg
push
and
cmp
sub
lret
xchg
xor
mov
addl
test
daa
and
daa
cwtl
mov
popa
jno
mov
and
cwtl
lret
js
loopne
cmpsl
add
xchg
mov
inc
and
std
or
add
add
int
out
out
imul
nop
xchg
movsb
jecxz
jne
out
add
add
sub
adc
mov
and
xlat
xor
jae
shll
mov
pushf
mov
inc
in
adc
lcall
cmp
ret
inc
xchg
sub
dec
scas
sarl
adc
mov
aam
movsb
sub
mov
jns
or
mov
jns
cmpsb
pop
sub
test
inc
idivl
pop
push
fstps
sub
sub
mov
sub
adc
icebp
lcall
leave
outsb
test
xchg
sti
jne
in
mov
fmuls
lds
mov
hlt
aaa
and
xchg
xor
loopne
adc
jecxz
sub
js
xchg
lret
sahf
add
ja
out
dec
adc
in
imul
cli
lds
out
jnp
stos
outsb
cmpsb
cmp
fldl
lret
sub
pop
ret
les
jbe
push
add
add
psubusw
push
in
sub
mov
flds
add
pop
sbb
bound
mov
sub
cmp
mov
rcr
or
and
test
jbe
and
sbb
xchg
sbb
fcmovnbe
mov
cmp
jbe
imul
cmp
shl
loop
bound
or
xor
sub
pop
sub
mov
and
test
daa
sub
and
inc
adc
aaa
out
test
push
and
lods
scas
test
jle
lds
lret
push
fsubs
shrb
pop
cmp
iret
or
jmp
pusha
cmc
aam
cwtl
fmuls
es
stc
dec
ficoml
pusha
mov
dec
xchg
mov
push
jb
hlt
pop
sub
stc
jmp
dec
xchg
xor
aad
arpl
sub
xchg
pusha
pop
adcb
xchg
in
sbb
add
inc
and
enter
into
lods
add
add
sbb
sahf
cmc
fsubrp
jnp
sti
enter
jmp
add
inc
jp
mov
les
in
inc
pushf
pop
mov
shl
cwtl
jbe
loopne
pop
push
fwait
jnp
mov
stos
push
dec
jle
sbb
dec
jmp
push
cld
outsb
out
mov
jg
bound
aam
out
mov
nop
and
pop
sahf
push
imul
sbb
sarl
loope
xchg
mov
out
inc
repnz
dec
and
dec
in
in
mov
je
sub
pop
xchg
mov
iret
pop
je
cwtl
arpl
xor
js
mov
negl
in
out
pop
ds
div
mov
xor
and
arpl
mov
fwait
adc
clc
adc
sub
lea
add
sub
cltd
cli
mov
lods
xchg
dec
xchg
cld
sarb
pop
xchg
ja
cmc
jle
sbb
dec
xor
cli
mov
pop
lret
sbb
add
pop
dec
jle
jg
std
fstpt
test
add
add
movsb
ja
fcomps
push
addb
aas
fcoms
or
push
ror
push
dec
in
rolb
or
jg
push
and
sbb
clc
and
sub
jae
or
push
xor
pop
pop
nop
xchg
pop
xchg
xor
xchg
push
inc
mov
jge
rorb
pop
add
dec
ror
test
cmpsl
add
aas
cmp
dec
sar
mov
xor
or
lea
sub
mov
shrl
or
and
ret
and
orl
dec
mov
mov
inc
scas
sbb
or
cmp
add
rcrb
jl
xor
adc
sub
aaa
rcl
pop
push
xor
add
fdiv
pusha
xor
in
and
stos
lret
xor
push
cmp
pop
or
mov
jno
decb
inc
lods
cmp
add
add
mov
sti
idiv
lods
pop
sbb
or
cli
faddl
add
mov
sbb
mov
sub
in
rcrb
shlb
xchg
psubq
dec
fisttpll
jp
xor
orl
pop
inc
cmp
fiaddl
popl
mov
xchg
outsl
xchg
dec
jnp
fcmovnu
inc
rcl
push
pop
pop
mov
lcall
mov
jo
and
sarl
sti
pushf
fld
pop
cmp
inc
sub
leave
fdivs
xchg
lds
je
pop
enter
xor
iret
xchg
or
enter
mov
cmp
or
daa
mov
jne
popa
in
rcll
inc
sbbl
fdivs
jb
imul
loopne
sbb
push
add
int3
dec
cmpsb
jp
cmp
add
sub
push
mov
das
inc
mov
mov
jg
sub
les
pop
sub
ficoml
sbb
nop
add
add
sbb
jmp
scas
inc
call
fldl
add
adc
enter
sahf
fdivr
push
dec
jae
imul
or
mov
subl
adc
or
fsts
cmp
jb
cmp
lcall
push
outsb
push
sbb
in
mov
movsb
je
in
je
xchg
push
mov
sub
fisubrl
cmp
and
sub
push
jecxz
stos
fwait
test
cli
or
push
test
or
mov
jle
pop
adc
adc
ror
aaa
cltd
enter
aas
jne
cltd
incb
lret
or
mov
mov
scas
scas
stos
and
add
cmpsb
outsb
into
push
inc
mov
sbb
orb
sub
rcll
sbb
mov
push
fdivr
dec
mov
and
dec
stos
popf
mov
pop
push
sbb
into
fs
jns
in
ja
imul
sub
test
mov
imul
or
ret
addb
mov
sub
add
push
out
faddl
inc
aam
filds
add
or
aaa
lods
fsubl
aas
mov
ret
ds
xchg
loope
sub
shrl
pushf
ja
and
or
aas
dec
in
mov
dec
loopne
les
jecxz
xchg
mov
sbb
mov
mov
xchg
mov
lea
add
pusha
xchg
aam
pop
cmpsl
lcall
mov
xor
aas
test
in
fs
negb
daa
gs
push
pop
and
lock
icebp
inc
push
loopne
push
sub
les
and
into
cmp
enter
mov
or
dec
pop
notb
insl
lret
pop
bound
popa
mov
ds
mov
cmc
fwait
adc
xor
out
pop
aad
cmpl
ret
mov
aam
fdivs
dec
shlb
mov
xor
and
es
rol
lret
leave
xor
ljmp
in
mov
add
add
mov
lcall
fisttps
or
or
add
add
divl
adc
cli
lahf
faddl
sbb
mov
fldenv
and
lret
addr16
loope
cmp
std
jns,pt
dec
loopne
in
jl
push
cmp
push
pop
cmc
mov
cmpsl
lods
es
rcll
jl
outsb
xchg
andb
xchg
ss
fwait
add
xor
xchg
nop
or
dec
int3
into
adc
cmp
dec
push
jae
rcll
sub
cs
ret
fs
mov
and
clc
nop
xchg
in
jo
decb
xor
push
cvttps2pi
inc
rorb
inc
add
ja
push
shll
adc
inc
sub
inc
jl
fxch
pop
sub
fs
fmull
xchg
loop
lret
out
ret
mov
push
int
xor
jne
pop
adc
adc
ret
adc
lock
in
xor
dec
cmpl
es
out
je
lret
test
add
sbb
jns
xchg
xchg
mov
push
imul
mov
jns
mov
ljmp
mov
dec
rcr
mov
inc
inc
pop
addl
xchg
lret
or
cld
xor
das
jo
push
int
call
bound
lods
into
test
lods
je
xorb
ret
adc
pop
jmp
and
or
mov
lea
mov
lcall
js
and
or
movsb
dec
add
xor
xor
imul
xchg
pop
into
mov
das
pushl
rcrb
and
dec
mov
xchg
mov
dec
adc
push
push
and
sub
stos
dec
pop
and
dec
xchg
rorl
fistpll
push
or
sbb
cmpsl
iret
cltd
test
add
outsl
mov
movsl
sbbb
int
adc
scas
mov
or
adc
adc
add
push
xchg
or
repnz
add
fadd
fsubp
jnp
or
cld
jmp
imul
add
add
or
pop
mov
das
in
je
add
daa
cs
and
std
sbb
pop
jbe
adc
sar
xor
mov
push
shrb
lret
lock
shrb
sbbb
sbb
out
add
mov
xchg
sbb
inc
loope
loop
dec
sti
push
sahf
mov
faddp
mov
xchg
mov
stc
cmpsb
xor
inc
dec
dec
lods
and
mov
push
ror
in
jns
sar
rclb
rclb
inc
mov
push
pop
call
sbb
adc
sbb
popf
dec
stos
les
cmpsl
push
loope
jne
xor
movsl
inc
pop
stos
mov
push
dec
sbb
jl
jg,pn
mov
mov
icebp
lock
push
dec
into
icebp
and
js
adc
inc
lods
mov
out
inc
testb
add
sub
cld
cli
jle
dec
nop
xor
nop
jo
sbb
add
add
enter
imul
aad
and
mov
sub
roll
cmpsb
in
outsb
popa
and
out
jle
mov
out
in
fucomp
cmp
or
mov
cltd
add
xor
mulb
adc
dec
ds
hlt
notl
out
mov
ficomps
inc
cmpsb
jae
sub
mov
pop
clc
sbb
and
mov
pop
push
cmpsl
mov
outsb
push
movsb
push
gs
int
add
dec
cmp
sub
shrb
inc
pop
test
mov
mov
lahf
shlb
fdivl
in
and
popf
mov
pop
repz
sub
imul
adc
jo
stos
sahf
adc
mov
push
mov
mov
aaa
imul
outsl
mov
outsb
out
xchg
arpl
sbb
or
rolb
icebp
add
stos
add
add
ja
sti
aaa
out
ja
jl
test
add
add
lret
pop
push
pop
call
daa
inc
mov
push
add
push
std
sub
or
arpl
inc
xor
stos
push
or
into
jne
bound
clc
sti
mov
enter
adc
mov
inc
ret
aaa
adc
push
js
xchg
and
stos
jo
sub
cmpsl
sti
stos
xor
adc
pop
ficoms
jecxz
out
pushl
test
pop
lahf
out
les
daa
in
sbbl
in
push
jns
xchg
outsl
mov
or
test
and
cmc
fisttpll
pop
daa
xor
js
mulb
mov
pop
xchg
cwtl
sub
dec
aaa
or
inc
fwait
push
out
out
sarl
pushl
psubw
arpl
mov
mov
les
std
push
push
jno
lods
out
adc
jb
xor
loopne
pop
add
sbb
add
ror
cltd
outsl
mov
aaa
pushf
ret
and
in
add
or
cmp
cmpsl
or
mov
ja
ja
sub
push
in
loop
sahf
add
push
xlat
insl
stos
mov
inc
mov
stc
xchg
out
jno
push
fs
cltd
ror
lock
leave
scas
andl
or
shr
jmp
int
mov
outsl
mov
mov
repz
les
push
ljmp
ret
adc
pop
popf
mov
mov
repz
adc
adc
pop
mov
out
mulb
dec
dec
cli
sbb
mov
pusha
notl
pop
xor
or
inc
push
lahf
jmp
jmp
jbe
aas
rol
pop
aam
pop
mov
mov
xchg
xchg
cld
jg
mov
adc
pop
out
mov
push
mov
jne
in
mov
push
sub
jp
std
xchg
addr16
dec
jp
sub
cli
sti
sti
dec
aam
lods
insb
subb
loop
repz
add
ja
lcall
mov
jb
out
add
addb
jne
or
sbb
inc
pop
push
mov
loopne
aam
fiadds
subl
or
test
les
and
jnp
sub
mov
inc
push
add
pusha
sti
sbb
test
orb
movsl
insl
push
cmc
cmc
das
jb
and
xlat
test
les
mov
sub
adc
push
jecxz
inc
sub
sub
xchg
fnstcw
iret
mov
add
out
ljmp
jae
sahf
sub
stc
shll
push
into
es
cmpsb
cmp
or
call
jno
je
xchg
cli
testl
lock
xor
mov
xor
movsl
sti
loope
jae
sbb
out
cmp
ret
cltd
dec
push
add
push
cmp
pop
mov
pop
add
lret
and
mov
or
ja
fsts
dec
mov
add
repz
lock
jg
in
and
cltd
cs
sub
add
add
jge
adc
loop
int3
mov
push
mov
fwait
xchg
dec
jbe
stos
pop
xchg
inc
dec
in
mov
stc
jle
push
jb
xchg
xor
jo
sbb
push
adc
push
pop
fwait
cmpsl
xchg
in
movsb
add
fists
test
pushf
popf
sub
in
inc
dec
insl
call
sub
outsl
outsl
or
hlt
insb
gs
sub
icebp
mov
mov
fcoms
hlt
xchg
push
sbb
mov
ret
rolb
add
lret
cli
sub
popa
mov
jp
xor
pop
or
ficoms
stos
lret
mov
or
cwtl
test
adc
ja
loope
push
sub
das
push
cmpsb
xor
push
push
mov
js
xchg
cld
fisubl
dec
lds
and
mov
test
mov
lahf
xchg
and
add
pop
xlat
fistpl
add
add
add
lods
idivl
shlb
mov
clc
movsb
mov
out
mov
mov
or
jne
pop
mov
and
xchg
jmp
push
pop
out
sarl
sbb
lods
mov
push
jge
sahf
xchg
out
pop
adc
leave
xor
dec
insb
movups
and
test
aas
sub
push
jle
andl
sub
shrl
pop
fwait
push
sub
jmp
aaa
inc
pop
cmp
mov
inc
push
jp
xor
aas
pusha
jmp
mov
loopne
test
adc
xchg
ss
fisubs
sbb
mov
pop
outsl
ret
pop
and
push
rcll
mov
fcompl
icebp
dec
sti
in
insb
xor
jmp
imul
test
mov
cmp
jmp
sbb
fldl
dec
inc
rorl
push
out
add
scas
xchg
loope
leave
push
sbb
test
add
stc
mov
dec
js
stc
mov
dec
int
stc
pusha
sbb
add
test
lahf
movsl
cmpsb
adc
push
inc
orb
std
xor
xchg
mov
sub
mov
orl
push
mov
jb
jno
arpl
movsb
push
bnd
pushl
push
dec
clc
ljmp
sarb
sub
xlat
popa
and
jecxz
push
mov
fdivs
mov
mov
pop
push
mov
mov
mov
sub
call
mov
jg
jb
push
bound
pop
dec
imul
add
xlat
push
mov
hlt
aam
fsts
orb
sub
les
mov
mov
mov
cmp
in
repnz
jle
cwtl
jne
or
and
xchg
mov
add
sahf
jnp
lcall
mov
mov
or
fldl
add
mov
pop
insb
fildll
fwait
jns
jns
cmpsb
mov
ljmp
mov
leave
jno
decl
xchg
fwait
cmc
inc
or
into
mov
test
push
popf
push
cmp
movsl
add
mov
mov
adc
dec
sbb
adc
add
imul
inc
in
bound
push
pop
mov
in
jge
cmp
iret
pop
mov
xor
movsl
xorl
pop
mov
pushf
hlt
and
mov
dec
popl
out
jne
aad
nop
and
ss
loope
mov
sub
mov
into
xchg
jne
or
mov
add
cmp
dec
mov
gs
sub
pushf
xchg
push
stc
leave
pop
pop
adc
ret
movsl
insb
loopne
shl
push
vmovsldup
xchg
sti
test
sbbb
in
mov
add
jge
jge
enter
add
jge
cmpsl
fmuls
mov
shll
jo
cmp
cmpsl
in
fldl
or
pop
push
jns
add
cmp
jnp
adc
jne
xchg
sub
ret
add
add
lret
arpl
pop
jg
je
pop
push
cltd
mov
push
les
mov
nop
jp
and
std
adc
dec
push
adc
orl
add
add
mov
jge
sub
gs
jmp
xchg
and
push
jg
push
cmc
test
sarl
xor
arpl
pop
call
sti
push
test
in
push
and
xor
int3
pop
mov
pop
xor
dec
add
dec
fistpl
dec
hlt
sub
mov
aad
leave
and
xor
mov
in
test
loope
xchg
sub
dec
stos
xchg
in
leave
cwtl
sub
mov
push
sti
lahf
fisubs
xchg
out
imull
push
jmp
test
jp
mov
add
pop
frstor
andb
stos
sbb
mov
pop
imul
dec
push
jns
ljmp
in
sbb
push
add
out
lods
xor
aas
xlat
fistl
das
push
jge
cld
inc
in
add
add
cltd
cmp
xchg
out
mov
push
push
mov
fadds
jns
sti
jl
pop
insb
push
inc
adc
jecxz
and
mov
push
fnsave
outsl
and
jge
ja
fnsave
push
pop
mov
pop
cmc
ret
and
xchg
out
mov
stc
cmc
lds
cli
repnz
lods
roll
sbb
and
dec
cs
inc
enter
add
add
inc
punpcklbw
fildll
test
inc
mov
push
ja
jmp
bound
fidivl
insl
jno
push
sbb
mov
scas
js
pop
inc
aas
sub
cmp
cli
adc
xor
push
lea
mov
fisubrl
jmp
and
std
dec
mov
or
and
es
jnp
addb
movsl
daa
cs
addr16
stos
test
dec
mov
dec
scas
nop
or
div
enter
outsl
imull
inc
xchg
jecxz
ss
inc
or
add
jb
scas
decb
fisttps
lods
loopne
dec
in
add
add
loopne
int
dec
or
mov
inc
mov
fistpll
xor
pop
insb
sahf
pop
xchg
mov
adc
fwait
imul
or
and
mov
jl
test
std
scas
icebp
mov
out
mov
idivb
imul
jbe
scas
sbb
insb
hlt
adc
arpl
aaa
out
loopne
mov
xchg
jmp
lods
pop
test
jg
sbb
loopne
lods
mov
cltd
xorl
daa
jno
jg
mov
jg
jae
adc
in
dec
xchg
and
mov
fs
sahf
lds
mov
enter
jno
cmp
jo
gs
orb
repnz
pushl
sbbb
sbb
dec
add
push
add
mov
pushl
cwtl
push
mov
pop
ljmp
aas
call
insl
mov
push
ja
mov
or
pop
pop
xor
bnd
or
and
rolb
cld
add
push
add
add
xlat
mov
xchg
cwtl
repnz
add
and
aad
mov
lcall
jmp
mov
fchs
jg
lea
fistpl
les
jne
inc
mov
cmpsb
popf
ljmp
shll
cmp
add
sahf
pop
scas
mov
dec
loope
bound
scas
push
push
lds
mov
jle
stos
scas
push
push
rolb
adc
pop
jle
push
dec
iret
int3
test
fabs
push
xor
lds
jp
mov
adc
ja
sbb
daa
lea
mov
mov
jnp
nop
xor
or
jne
imul
and
fwait
daa
cmp
or
out
xor
stos
xchg
mov
jp
pop
and
sbb
cld
shr
enter
sbb
pop
cli
pop
inc
imul
movsw
scas
jg
in
mov
jne
popf
pop
push
popf
xchg
sar
sti
xchg
or
popa
dec
test
xchg
and
add
mov
aas
mov
ficoms
out
add
add
add
filds
aad
jbe
pop
ficomps
fadds
sub
mov
add
pop
shrb
pop
addr16
adc
mov
outsl
aam
xor
cmpb
inc
and
pop
cld
push
stos
sbb
xchg
mov
insb
jl
mov
adc
outsb
mov
push
cltd
mov
sbb
xor
mov
inc
lods
add
ljmp
pop
or
mov
cmpsb
pop
sbb
int
add
cmp
js
jge
stos
cli
movsb
push
andl
push
orb
pop
xlat
into
dec
stos
scas
sub
push
mov
ljmp
loop
ror
jecxz
enter
pop
jae
stos
icebp
jbe
daa
popa
rcll
cmc
xor
or
jbe
js
pop
xchg
cmp
rclb
push
inc
in
movsb
ja
jae
cwtl
sub
shrl
in
lahf
adcb
push
xor
xor
add
add
mov
sti
mov
idivl
add
add
movsb
mov
das
xchg
push
jg
inc
test
adc
pop
jbe
rorb
mov
or
push
loope
xor
sbb
dec
push
cmc
cld
pop
jmp
enter
testb
dec
mov
sbb
loopne
xchg
sbb
mov
subl
bsr
jl
jg
aaa
outsb
mov
int3
dec
imul
nop
ds
pop
pop
pop
inc
and
fmull
test
and
add
push
jns
push
imul
xor
mov
icebp
sti
jnp
shrl
add
dec
cli
adc
popa
lods
call
out
loopne
cwtl
test
mov
fdivs
sbb
sub
fistpl
adc
mov
mov
xchg
sub
mov
xor
les
inc
pusha
and
push
outsb
sbb
addps
stos
and
add
push
cmp
adc
neg
jge
xchg
jns
lock
add
add
pop
inc
mov
mov
mulb
add
adc
data16
int3
into
cmpsl
and
xchg
popa
sub
outsb
dec
enter
call
add
shlb
rcr
add
lods
insl
sub
inc
cmpl
aaa
push
call
mov
mov
inc
int3
xchg
daa
cld
std
pop
mov
mov
adc
mov
das
push
loop
lahf
outsb
bound
push
mov
or
jns
cmp
scas
fsubrl
cmp
mov
add
fwait
rolb
inc
dec
adc
mov
cmp
xchg
ds
and
aaa
cmp
jmp
mov
fdivrs
sub
mov
data16
fiadds
fnstsw
leave
aaa
gs
xor
cmp
dec
xchg
dec
ret
push
add
out
and
pusha
inc
inc
daa
mov
dec
out
cld
call
sbb
add
add
dec
sub
sub
fiaddl
in
xor
add
push
mov
test
push
divl
loopne
dec
fs
fldl
or
fwait
mov
push
add
push
and
jg
iret
ja
xchg
push
adc
hlt
inc
arpl
mov
pop
adc
fs
ficoml
dec
and
push
pushf
adc
lods
jp
cmp
or
xchg
mov
adc
sti
lahf
jle
aad
lock
ja
fincstp
mov
mov
je
arpl
cmp
loope
roll
call
push
jg
lahf
outsl
push
lock
adc
enter
dec
stos
and
pop
test
pop
stos
out
insl
xchg
jnp
insl
mov
lea
in
shrb
mov
dec
aad
pushf
or
inc
pusha
sub
out
adc
adc
ljmp
subl
lds
adcb
pop
xchg
icebp
add
lahf
loopne
xchg
cwtl
gs
aas
push
or
popf
adc
add
ret
ja
and
aaa
divl
pop
adc
repz
add
mov
jecxz
mov
jmp
movsb
mov
addr16
push
repz
or
sti
and
inc
rcll
in
inc
jae
mov
cld
loopne
ds
cmp
dec
mov
pop
jge
jnp
or
jle
or
pop
ja
fisubs
je
mov
inc
sub
outsb
mov
push
xor
lds
ret
xchg
cmp
mov
pop
jg
pop
inc
pop
je
push
pop
push
jp
fcos
sub
in
cmpsb
cmpsl
mov
adc
js
push
and
jp
aas
or
add
mov
lock
fisubrl
dec
das
daa
cli
call
and
arpl
mov
es
and
mov
fs
lea
jl
in
nop
andl
or
cmpsb
sbb
imul
dec
gs
imull
addb
and
add
xchg
cmpsl
sbb
dec
xor
lahf
lods
fisttps
cmp
test
pop
or
add
add
mov
cmc
mov
out
xchg
adc
insl
hlt
add
add
mov
fsubp
lds
adc
pop
jnp
push
test
sbb
out
pop
js
cmpsb
and
lea
xchg
out
das
cmp
pop
sub
popf
dec
cli
xchg
cld
popf
daa
xor
xor
sbb
sbb
jae
int
loop
jmp
pop
out
mov
jbe
mov
inc
ret
lds
std
cli
pop
mov
push
pop
js
mov
out
jle
cmp
xchg
jne
push
push
imul
mov
jle
mov
fcmovb
xchg
jns
sub
xchg
out
ds
jp
leave
xor
enter
adc
fadd
lods
outsl
mov
hlt
mov
fdivrp
mov
bound
lret
mov
call
je
inc
sub
xchg
popf
pusha
push
or
loop
push
or
jge
jmp
pop
lret
mov
dec
xlat
ja
sahf
inc
mov
add
add
jne
pusha
popf
pop
sub
cmc
add
add
icebp
jge
dec
std
mov
xor
ljmp
pop
ss
xor
push
mov
cmp
out
fistps
cmp
lret
aam
jae
mov
je
xor
loope
mov
imul
pop
mov
nop
daa
mov
cmpb
loopne
ds
sbb
pop
add
sbb
lret
pop
xchg
xchg
aaa
ret
cltd
repz
cltd
rcll
call
mov
and
and
outsl
jecxz
fstl
push
push
loope
mov
push
push
pushf
add
jp
lods
aaa
pop
dec
pop
lea
fsubrl
mov
aas
in
call
pop
adc
hlt
xchg
sbb
fcmovnbe
pop
fcomps
cli
imul
or
mov
add
jge
sub
mov
shlb
or
mov
lahf
sti
cmp
leave
mov
daa
lret
dec
pop
shlb
jp
sub
sub
scas
fdivr
fnstcw
jecxz
test
ja
add
add
push
cmc
aad
push
xor
movsl
mov
js,pn
mov
les
push
sbb
outsl
xchg
daa
and
push
cmp
mov
cld
out
or
or
lds
and
pop
jb
negb
addr16
or
cwtl
sbb
pop
pop
test
pop
inc
push
cpuid
into
test
shlb
jecxz
xor
push
ds
push
xchg
adc
adc
lret
mov
cltd
scas
lods
out
mov
xchg
loop
xchg
cmp
inc
out
adc
movsl
bound
or
cmp
mov
jns
inc
push
ret
and
lahf
fsub
xchg
cltd
ja
insb
add
sub
icebp
jnp
cmpsb
jne
sarb
jns
cmpsl
inc
mov
add
dec
inc
lcall
or
xchg
adc
mov
mov
icebp
inc
add
xor
in
jle
add
ret
add
xor
jb
jae
std
adc
sub
add
mov
call
test
shl
inc
test
addr16
jbe
xor
xor
jne
jmp
pop
pop
adc
test
fs
std
cmp
xor
int3
sbb
jbe
lea
jo
cs
inc
imul
cmp
aad
iret
outsl
jno
btr
sub
push
jecxz
mov
push
xor
push
pop
xchg
sub
mov
movsb
mov
or
fwait
cmc
inc
in
sbb
mov
outsb
pop
xchg
insl
icebp
push
frstor
and
repnz
imul
cmp
ljmp
lock
mov
repz
cmpsl
jno
fisttpll
mov
fstpt
dec
adc
inc
push
xor
xchg
xorb
mov
or
and
mov
push
inc
xchg
sbb
lcall
mov
add
ds
in
idivl
js
mov
pop
lahf
aam
cmp
add
mov
pop
xchg
or
mov
pop
cmc
mov
daa
int
mov
std
stos
inc
imul
int
ds
fimull
add
push
daa
jge
dec
push
repnz
push
sub
sbb
fcmovu
fwait
ja
testl
adc
repz
es
int
imul
in
pop
pop
stos
aas
pusha
xor
mov
jp
cwtl
xchg
xchg
adc
mov
lds
xor
nop
cmp
sub
cmp
sub
push
cmp
adc
sbb
pop
out
sub
pop
mov
cmp
push
sub
gs
jmp
les
call
xor
bound
daa
rorl
bound
mov
mov
sbb
test
inc
scas
push
fisubl
in
mov
imul
xor
cs
cli
xchg
jnp
das
xchg
push
sahf
shrl
cli
pop
ret
or
add
add
jecxz
inc
cli
aas
into
lret
xchg
mov
xchg
xchg
add
add
rol
roll
std
or
lock
sub
mov
xchg
stos
push
sbb
sbb
popl
jmp
imul
adc
repz
jo
inc
push
cmpsl
dec
outsl
pop
lods
fdivrp
mov
insl
push
addr16
stos
in
inc
and
lea
xlat
xchg
sbb
and
xchg
inc
cmc
int
dec
filds
ljmp
dec
xchg
jmp
ja
jne
sub
lea
lret
mov
mov
stos
outsl
das
lods
and
jecxz
int
jg
push
inc
loopne
lods
xchg
pop
test
inc
ja
aaa
mov
adc
xchg
jne
in
sub
cmpb
jmp
jle
imul
xor
ret
add
outsl
add
test
adc
mov
adc
jnp
add
inc
sbb
mov
or
fmuls
pop
dec
sbb
jne
add
mov
lcall
fisttpl
add
add
sbb
stos
pushf
adc
mov
sub
or
insl
aad
mov
pop
xchg
mov
mov
cwtl
pop
sbb
xchg
lock
test
imul
cmpsl
and
pop
jbe
pusha
subb
add
xlat
dec
cmpsl
jmp
lea
ja
push
loope
xor
pop
aad
jg
push
cmc
movsl
test
jmp
rol
pop
int3
mov
push
add
xor
add
test
pop
bound
fnsave
xchg
sub
dec
pop
stos
hlt
jne
shrl
test
sysenter
push
xchg
and
adc
fnsave
outsl
test
aam
jg
insl
inc
xchg
aas
outsl
aad
mov
inc
cmc
dec
push
add
push
nop
and
jbe
inc
adc
sbb
scas
push
rclb
or
mov
fdivrp
call
add
add
jae
cltd
dec
mov
jno
loop
sarb
sti
add
add
pusha
push
mov
push
mov
bnd
push
mov
mov
test
mov
inc
mov
add
test
cmpsb
xor
stos
in
inc
notl
xlat
lcall
fisubrl
mov
cmp
push
xchg
movsl
hlt
fnsave
or
lret
lea
and
stos
fldln2
adc
adc
stos
and
mov
fsubrs
adc
sahf
int3
mov
push
adc
fisubrl
loopne
nop
add
mov
xor
xchg
pop
pushf
das
insl
es
imul
pop
mov
cmp
or
addl
push
mov
rcrb
int
add
test
ja
and
aaa
outsl
push
aad
or
negb
mov
ljmp
mov
jbe
adc
fsts
lods
adc
pop
inc
adc
xor
sbb
add
cltd
xor
add
ds
into
nop
out
cwtl
jle
push
sub
dec
imul
add
sbb
sbb
add
cmp
cmp
cwtl
jle
mov
loopne
ds
rclb
dec
push
lahf
mov
mov
inc
push
or
mov
mov
adc
das
gs
ss
and
fcoml
in
popa
pop
pop
jecxz
jle
mov
mov
mov
dec
or
push
sahf
nop
loope
ret
push
and
add
dec
movsl
sbb
jno
rolb
jl
enter
add
and
mov
jbe
sbb
jmp
and
push
fildl
imul
les
negl
jecxz
xor
jbe
out
dec
pop
inc
ljmp
dec
lcall
mov
jbe
xchg
into
sub
pop
pop
adcb
adc
inc
stos
loopne
push
jmp
jl
mov
lret
out
das
dec
pop
loop
loop
dec
shll
xchg
inc
adc
add
add
test
jg
push
pop
push
mov
lcall
add
imul
cld
sub
fisubl
aas
repnz
iret
fbld
adc
test
cmp
dec
nop
addr16
and
hlt
fwait
dec
lods
fsubrl
mov
ljmp
mov
push
arpl
sub
jnp
dec
pop
cltd
aas
push
dec
pop
adc
fsubrp
mov
adc
sbb
mov
jecxz
sti
cltd
pop
aam
jmp
pop
lret
nop
dec
test
mov
lods
inc
test
xor
repz
movsb
dec
pop
jno
pop
push
or
gs
mov
sbb
lahf
sahf
and
pop
mov
insb
les
loopne
xor
fwait
cmp
in
push
sub
inc
xor
inc
bound
sub
sub
mov
mov
xchg
bound
xchg
jg
pop
mov
xchg
clc
fistpl
jns
inc
into
in
adc
add
adc
movsb
push
in
cmc
jne
sbb
js
fimull
add
cwtl
imul
stos
imul
sbb
inc
push
xchg
cmpsl
ror
or
mov
lods
push
outsl
mov
test
and
cmpsb
testb
div
js
mov
xor
xchg
xorl
call
into
cmp
cmpsb
pop
int3
ret
mov
imul
test
mov
fwait
sbb
dec
movsb
fsubrl
mov
cli
mov
andb
xor
fsubrl
push
mov
test
pop
in
std
lcall
push
hlt
sti
cmpsl
jb
fdivrs
xchg
push
out
sub
xorb
or
and
sub
pop
push
xchg
in
fiadds
xchg
xchg
sbb
repnz
roll
outsl
mov
dec
sbb
scas
out
mov
jmp
mov
pop
add
jecxz
dec
outsb
and
cmp
mov
stos
sti
inc
iret
xor
pop
pop
icebp
xchg
xor
iret
lahf
lret
add
add
out
shlb
aas
out
int3
mov
xchg
xchg
ja
movsb
incl
add
push
sti
sub
jo
pop
or
push
push
setp
std
pop
testl
sbbb
aaa
xchg
push
add
not
notl
cmc
mov
or
test
xchg
mov
in
je
ficomps
mov
jp
dec
sub
outsb
and
add
aaa
mov
jp
repnz
sub
jge
gs
jb
xor
fldt
push
mov
jnp
and
test
mov
ja
cmpsb
in
into
sbb
jne
outsl
and
xchg
out
divb
inc
xchg
fwait
dec
xor
jl
fiadds
or
icebp
inc
lret
push
sti
and
std
dec
jmp
fcomps
mov
mov
loope
xlat
imul
stc
xchg
pop
ficoml
mov
loop
loop
mov
movsb
dec
cltd
adc
lock
out
aas
pop
cmp
hlt
or
or
mov
and
mov
add
test
iret
jb
or
test
scas
dec
out
or
mov
and
mov
push
xchg
sbb
out
arpl
ds
lock
mov
adcl
lret
sbb
ret
out
fwait
jecxz
lea
xor
outsl
int
sub
mov
mov
add
je
into
or
pop
mov
out
aad
mov
fdivl
mov
dec
jge
jg
iret
push
adc
test
int
sti
clc
sub
xchg
mov
xchg
jp
loopne
pop
pushf
shrb
filds
enter
aam
add
and
loop
mov
mov
mov
mov
nop
or
push
xor
sub
jae
push
add
loopne
test
loope
and
jg
jecxz
fdivr
xchg
aas
lods
dec
inc
ljmp
or
jns
flds
out
scas
add
add
ret
bnd
cmc
inc
stos
repz
out
in
scas
add
add
rcrb
ret
push
adc
jb
push
mov
dec
mov
mov
js
lock
jbe
test
pop
cmp
inc
dec
pop
sub
sbb
mov
es
xchg
out
out
decb
xchg
mov
mov
aas
jbe
shll
je
xchg
jmp
mov
xor
xor
jae
out
std
jne
adc
pop
nop
fwait
mov
dec
loopne
sbb
je
pop
push
and
sbb
out
cmp
adc
lret
and
push
mov
loope
adc
je
or
pop
ret
shrl
and
pop
gs
and
adc
xchg
or
out
movsl
xchg
int3
dec
push
push
and
mov
mov
push
dec
xchg
aas
int
and
fsubrl
lret
xchg
lret
mov
jne
lods
add
insl
cltd
jmp
cmpsl
and
mov
sbb
adc
inc
test
sub
aaa
decb
add
add
std
aaa
mov
shll
cmp
add
cmc
iret
les
repz
mov
dec
test
loope
mov
cli
setl
inc
dec
stos
push
mov
rolb
mov
aaa
movsl
push
fldt
mov
sub
or
fldenv
cmc
aam
jae
inc
outsb
or
xor
fnsave
jge
jp
mov
xchg
int3
adc
shlb
dec
xchg
bound
adc
jmp
dec
lods
pop
fs
icebp
xor
or
cmp
cmp
pop
ljmp
sbb
pop
sub
lcall
lea
sti
add
mov
and
je
jge
in
movsb
sbb
mov
push
movsb
daa
mov
pop
sbb
mov
lods
out
push
add
or
enter
sub
jns
into
jecxz
xchg
sub
push
mov
push
pushw
jae
imul
sub
lock
add
add
insl
aam
mov
scas
add
dec
mov
add
add
stos
push
stc
mov
test
arpl
jb
test
mov
jns
int3
sub
out
lcall
aam
imul
cwtl
repnz
or
add
add
mov
mov
or
dec
add
add
add
movl
xor
test
enter
mov
hlt
test
pushf
enter
movl
inc
mov
dec
mov
call
mov
call
pop
ljmp
fwait
mov
xor
add
mov
mov
xor
lret
lret
add
enter
dec
sbb
add
decl
test
dec
incl
inc
enter
call
cld
decl
push
mov
and
pop
inc
mov
push
pop
movsb
dec
add
jne
lea
push
decl
mov
test
add
xor
add
mov
or
inc
mov
arpl
sub
incl
lea
or
incl
mov
cld
add
xchg
fdivr
inc
incl
mov
xor
add
enter
mov
hlt
add
mov
add
add
incl
sbb
jne
mov
mov
movl
incl
fisttpll
test
inc
aas
inc
lea
inc
mov
mov
cld
loop
inc
out
fisttps
jecxz
in
incl
out
aas
inc
ljmp
incl
movl
insb
test
pandn
aas
add
mov
incl
or
mov
xchg
fildl
mov
cmp
dec
leave
mov
fsubrs
add
lea
push
add
mov
mov
add
mov
add
push
decl
push
mov
call
mov
cld
add
test
loop
ljmp
fsub
add
mov
add
add
adc
add
push
inc
push
fisttps
test
out
shlb
jmp
fildl
inc
jle
test
call
out
test
in
mov
mov
add
call
rorb
add
add
xor
mov
cld
jle
add
add
inc
inc
mov
decl
add
inc
fmull
inc
add
mov
mov
inc
sub
add
rolb
jne
xor
incl
call
mov
call
xor
push
adc
fsub
ret
loopne
xorl
cmp
bswap
rolb
jmp
mov
add
cld
jne
xor
jb
add
push
fildl
mov
inc
add
or
inc
call
jge
adc
mov
fwait
mov
lea
xor
call
call
jne
xor
add
pushl
call
enter
mov
xor
add
xchg
call
mov
add
mov
mov
or
inc
test
je
mov
xor
push
or
inc
loopne
sub
int
sub
inc
push
cmp
movaps
cld
faddl
jne
push
loopne
inc
lea
xor
jmp
mov
xor
adcl
rclb
inc
lock
inc
xchg
ud0
incl
daa
jbe
mov
push
pop
mov
inc
lret
inc
iret
jb
mov
int3
inc
inc
add
add
xor
pushf
lea
add
inc
mov
xor
add
mov
fmull
xor
mov
roll
xor
mov
clc
enter
mov
test
clc
incl
mov
test
clc
pushf
inc
cmp
pushf
inc
mov
add
xor
cmovge
add
jmp
jb
add
xor
xor
add
clc
int3
add
push
xor
xor
add
add
lret
repnz
cli
fdivr
test
dec
inc
xor
add
mov
mov
clc
jne
mov
into
into
scas
dec
mov
sub
cmp
mov
mov
mov
add
xor
xor
lret
mov
inc
add
mov
lods
test
xor
mov
lock
bswap
lret
test
jmp
add
push
mov
test
push
clc
xor
xor
add
add
push
dec
mov
stc
roll
scas
mov
xor
xor
add
mov
clc
lret
into
mov
mov
mov
enter
xor
xor
add
mov
lock
stc
mov
or
jmp
dec
dec
mov
clc
test
clc
rorl
mov
in
scas
inc
mov
les
lret
ja
mov
dec
xor
mov
clc
push
lret
mov
adc
jb
add
in
jge
sub
mov
mov
mov
mov
in
ror
push
scas
mov
fwait
sub
cmp
lods
xor
add
mov
mov
cmp
jb
add
dec
scas
mov
shrl
into
cmp
mov
dec
dec
mov
lret
xor
add
imul
mov
xor
mov
add
mov
inc
rdtsc
xlat
pushf
jge
xor
sub
cmp
jb
add
rorl
xor
add
jmp
mov
dec
into
mov
fwait
shll
lret
or
add
call
fcoms
lret
jb
add
dec
sub
dec
xor
jge
mov
add
dec
decl
adcb
add
jge
push
push
shlb
xor
xor
inc
add
dec
or
jbe
mov
ror
enter
decl
push
lret
push
mov
mov
cld
subb
sti
add
push
lcall
mov
enter
mov
xor
movl
aas
push
inc
xor
add
mov
jmp
mov
rol
mov
mov
mov
cmp
mov
add
xor
fwait
lret
cmp
call
inc
inc
mov
mov
int3
pushf
add
add
add
clc
int3
inc
add
push
pushf
mov
enter
aas
clc
gs
add
push
xor
sub
dec
add
mov
or
cmp
dec
out
xor
mov
dec
add
push
push
add
sbb
mov
xor
dec
inc
xor
add
push
dec
mov
lret
into
sub
dec
adc
inc
push
test
unpcklps
jmp
add
movl
xor
rolb
clc
gs
mov
xor
sub
mov
add
sub
mov
mov
clc
addl
lcall
inc
decl
test
decl
push
add
dec
or
rorb
into
add
mov
sar
adc
clc
fadds
mov
push
adcb
add
lret
mov
cld
mov
into
add
jne
incl
rclb
push
mov
mov
sar
or
push
add
pushf
xor
pushf
mov
test
clc
inc
inc
mov
sub
mov
dec
xor
mov
xor
orl
shll
enter
clc
incl
cmp
pushf
pop
lods
incl
mov
rcrb
test
sbb
add
push
loopne
push
mov
cld
add
adc
add
jmp
add
mov
dec
push
cmp
unpcklps
jne
decl
mov
shlb
inc
add
lret
decl
stc
loopne
test
xor
mov
rolb
inc
add
clc
inc
lret
mov
loopne
lret
into
into
scas
dec
mov
sub
cmp
mov
enter
add
xor
xor
lret
mov
inc
add
mov
xor
mov
in
add
bswap
lret
test
jmp
add
push
mov
mov
lret
xor
add
add
push
dec
mov
stc
roll
scas
mov
xor
xor
add
mov
clc
lret
into
mov
test
push
jbe
mov
mov
push
add
rdpmc
lret
add
dec
stc
mov
or
jmp
dec
dec
mov
clc
test
clc
rorl
mov
lock
inc
mov
hlt
pushf
jge
sub
cmp
ja
mov
dec
xor
mov
clc
push
lret
mov
adc
jb
add
lock
sub
mov
mov
mov
mov
lock
ror
push
scas
mov
fwait
sub
cmp
movsb
xor
add
mov
mov
cmp
jb
add
dec
scas
mov
shrl
into
cmp
mov
dec
dec
mov
lret
xor
add
imul
mov
xor
mov
add
rolb
rdtsc
xlat
pushf
jge
xor
sub
cmp
dec
xchg
incl
jmp
mov
dec
into
mov
fwait
shll
lret
or
add
call
fcoml
lret
jb
add
dec
sub
dec
xor
jge
mov
add
dec
decl
inc
push
decl
lea
push
mov
push
mov
les
add
incl
mov
cld
lret
add
jne
jmp
ror
or
add
not
adc
inc
push
mov
push
mov
in
sti
sbb
pop
xchg
leave
fwait
add
push
cmp
sqrtps
decl
push
cld
xor
add
push
clc
xor
add
hlt
or
mov
hlt
dec
add
mov
add
leave
push
push
mov
fcoml
inc
xor
iret
cld
lret
loopne
mov
mov
mov
cld
jne
movb
add
test
inc
incl
mov
cld
add
leave
xor
in
mov
inc
add
int3
cld
jne
call
mov
test
je
mov
cld
add
add
fiaddl
movb
push
push
mov
pop
lea
ret
mov
xchg
mov
push
clc
jne
mov
push
or
cmp
pop
or
inc
leave
ljmp
leave
in
incl
fimull
inc
nop
loopne
ret
mov
add
push
pushl
mov
or
pushl
cmp
pop
ret
or
inc
push
jle
inc
inc
int
inc
sub
add
lret
adc
xchg
push
mov
rcll
jne
mov
roll
divl
cmp
pop
decb
in
inc
sub
inc
push
add
push
add
leave
adcl
add
inc
rorl
add
add
jmp
jne
mov
or
inc
stc
in
ss
aas
out
inc
mov
lock
and
add
aad
add
clts
call
hlt
iret
jge
roll
jmp
out
mov
pop
push
cmp
sar
incl
inc
loopne
push
push
push
add
add
push
add
sub
jne
lods
mov
dec
out
into
push
loopne
shrb
andl
roll
mov
cmpl
mov
push
push
push
sub
push
adc
insl
mov
add
rorb
add
add
roll
pop
or
cli
add
lea
mov
dec
inc
shrb
and
jne
pop
mov
call
and
push
add
dec
mov
jmp
mov
call
shrl
lock
adc
out
cmp
pop
or
push
cld
mov
and
xorb
add
mov
psubsw
add
rcr
mov
and
add
call
add
mov
aam
or
jne
mov
aam
dec
jne
cmp
jb
jmp
mov
int3
dec
orl
mov
cmp
jb
pop
push
cli
pop
mov
jb
addl
mov
int3
add
jmp
mov
call
add
pop
or
pop
inc
xor
push
mov
call
int3
sbb
inc
add
call
or
cmp
mov
jb
mov
push
add
add
add
int3
jne
movsbl
add
add
mov
add
add
mov
sub
jb
add
jge
add
addl
jne
je
mov
rorb
orl
mov
mov
fadds
inc
pop
lea
push
out
add
add
mov
jb
add
push
call
add
jae
icebp
inc
mov
int3
out
loopne
sub
push
pop
push
jl
add
xor
mov
rcrb
rorl
inc
shr
orl
push
pop
add
jmp
mov
fdivrl
push
pop
call
mov
in
rolb
call
pop
enter
repz
xorl
je
or
jne
jmp
pushl
push
pop
cmpl
jge
mov
sub
pop
inc
mov
sub
lods
add
enter
repz
stc
jge
jnp
call
fadd
dec
insb
stc
cmp
push
mov
jne
mov
mov
add
sub
and
cmp
sbb
pop
call
fsubr
sti
add
add
add
roll
mov
clc
jne
mov
loopne
loopne
lods
int3
inc
mov
add
sub
shrb
add
call
add
dec
insl
in
lea
inc
inc
sub
orl
and
rorl
or
mov
stos
adc
inc
add
jne
mov
cmp
sub
sar
ljmp
sub
mov
mov
and
jne
sub
sbb
dec
push
add
ret
mov
leave
sub
ret
pop
push
rolb
addl
jb
ret
in
jecxz
push
xchg
jne
cmp
jne
mov
rorl
mov
pop
nop
mov
les
add
inc
mov
mov
cmp
or
inc
inc
xor
cld
add
add
add
sbb
dec
je
mov
add
and
jae
mov
incl
push
shr
in
push
add
add
inc
mov
add
jmp
pushf
dec
mov
fsts
movb
sub
inc
add
mov
insb
movl
dec
jmp
inc
fnstcw
testb
rolb
lea
sbb
inc
add
add
mov
fdivl
mov
add
add
or
mov
add
add
push
movb
or
dec
lea
xor
movsl
repz
add
prefetcht0
xor
mov
pop
mov
or
cmpb
movb
add
mov
xorl
mov
sbb
inc
xrelease
clc
xor
lea
mov
fadd
dec
lds
out
inc
lea
enter
push
leave
xor
add
mov
mov
psubusw
add
addb
add
in
inc
inc
mov
addb
mov
sub
insl
inc
add
testb
movl
dec
pop
add
mov
in
incl
out
inc
mov
push
jmp
add
out
insb
inc
jmp
addl
mov
outsb
inc
mov
mov
fcos
mov
in
jb
decl
mov
fdivr
out
rclb
mov
std
cmp
jne
mov
in
outsb
pushf
add
incl
incl
jae
add
incl
mov
jl
add
cld
dec
addb
data16
mov
mov
inc
mov
incw
data16
inc
jge
add
lea
add
ljmpw
pushl
lea
shlb
test
incl
test
inc
push
xor
add
ret
mov
push
movl
add
pushl
incl
mov
or
jne
addl
mov
add
mov
orl
push
mov
ret
adcb
add
mov
ret
or
lea
loop
xchg
aam
out
mov
inc
dec
pop
mov
repnz
orb
repnz
mov
jmp
incl
addl
mov
cmpsb
pop
inc
data16
inc
xor
dec
push
inc
jge
mov
mov
add
add
test
incw
mov
call
mov
clc
ret
rol
mov
mov
pushf
pop
ljmp
add
inc
test
push
mov
mov
push
add
decl
add
cmp
decl
jmp
push
hlt
data16
dec
ret
mov
lea
jne
decl
decb
mov
push
jmp
inc
sbb
movsb
inc
test
inc
decl
test
mov
lods
push
inc
jne
decl
mov
sbb
mov
mov
movswl
xor
add
xor
xor
decb
mov
pushf
inc
decl
sar
decl
incl
addl
xlat
dec
add
mov
lea
call
inc
rdpmc
add
push
lea
js
add
push
lea
fmuls
jmp
dec
mov
mov
call
dec
inc
mov
push
into
test
call
lea
jmp
inc
jnp
add
incw
mov
inc
add
mov
decl
add
data16
inc
dec
test
cmp
add
mov
incl
mov
ljmp
push
incl
call
decl
mov
inc
mov
mov
add
inc
mov
mov
pop
test
clc
lea
cmp
push
lea
mov
hlt
lahf
push
mov
xor
add
mov
mov
rolb
mov
nop
push
add
mov
in
jge
test
jne
sbb
push
inc
call
add
mov
cmp
ud0
test
dec
incl
decl
dec
cld
test
icebp
add
test
incb
jne
mov
cld
xor
push
xor
add
add
add
add
or
jmp
nop
test
xor
mov
mov
add
decl
add
decl
movsl
add
add
rdpmc
addb
mov
add
decl
decl
push
jne
mov
cld
add
push
incl
add
add
mov
sbb
leave
test
jne
call
xor
mov
enter
mov
mov
cld
add
inc
dec
mov
inc
decl
add
xchg
ret
add
add
mov
lea
add
mov
inc
rdpmc
jne
add
inc
clc
add
mov
mov
in
add
test
incb
add
cmp
pushl
add
test
je
mov
sbb
test
js
add
sub
mov
add
dec
push
mov
mov
mov
sbb
or
dec
incl
push
add
mov
orl
add
push
cmp
inc
mov
in
add
xor
add
ljmp
decl
call
mov
lock
mov
mov
mov
mov
addl
mov
inc
push
ljmp
mov
clc
cmp
jne
mov
add
int3
inc
cmp
add
adc
add
mov
cmp
jmp
mov
inc
or
decl
jne
mov
mov
in
xchg
jmp
adc
inc
mov
push
sub
push
test
inc
dec
mov
movl
add
add
mov
push
roll
bound
xor
add
mov
test
call
loop
jnp
mov
cmp
cld
shr
add
push
lea
mov
cwtl
cli
add
or
inc
dec
incl
add
call
add
push
adc
mov
mov
addl
incl
inc
stos
mov
add
mov
cmp
movsb
mov
cld
jae
add
clc
add
mov
clc
pop
inc
xor
pushl
mov
jae
mov
sub
add
mov
mov
ret
mov
ret
mov
add
mov
add
incl
lea
hlt
sar
test
inc
add
testb
push
add
add
add
add
add
mov
mov
cld
fidivl
mov
xorb
add
sbb
jne
mov
sbb
mov
add
ret
dec
or
dec
cld
cmovne
add
seto
inc
adc
mov
cmp
xor
gs
je
push
sarb
mov
push
cmp
add
dec
mov
in
adc
pop
inc
leave
or
gs
add
into
in
enter
push
xorl
or
jnp
test
add
mov
ltr
decl
clc
out
add
cmp
jge
jb
je
pop
push
mov
in
roll
orl
cmpl
hlt
mov
push
jns
lock
ror
test
dec
rcpps
mov
inc
test
je
mov
adcl
and
jp
rcpps
add
sbb
add
je
cmp
js
add
jns
vmread
add
adc
jge
mov
add
or
push
push
mov
add
pop
add
mov
inc
pop
xorl
add
push
clc
mov
jp
add
divl
test
je
mov
or
decb
jbe
mov
add
cmp
add
je
mov
mov
hlt
orb
jb
jmp
xor
pop
pop
pop
ret
ret
mov
xorl
pushf
xor
rdmsr
test
dec
ret
mov
pop
dec
jne
xor
inc
dec
jbe
inc
pop
add
push
dec
push
mov
and
jo
mov
sbb
mov
nop
or
jne
cmp
cld
xor
add
cmp
js
jae
xor
jmp
mov
fdecstp
test
add
add
mov
cmp
adc
jge
mov
jl
clc
dec
jge
mov
jb
mov
mov
xor
add
mov
inc
pop
jge
cmp
mov
imul
fimuls
fists
in
jne
mov
imul
fdivrp
filds
test
inc
mov
mov
adc
rcll
mov
fiadds
mov
mov
xor
mov
xlat
into
ffreep
lret
iret
dec
inc
mov
fmull
dec
jnp
add
mov
inc
dec
lea
add
jb
add
inc
imul
cld
clc
mov
incl
or
sbb
lret
add
dec
add
enter
inc
pop
decl
add
add
mov
xor
or
pop
cltd
push
clc
mov
xor
add
cmp
hlt
cmp
or
mov
loopne
mov
cld
pushf
pop
fwait
mov
lock
adc
orb
xor
dec
mov
iret
inc
jne
mov
cmp
je
add
or
dec
inc
mov
cld
add
cmp
mov
or
mov
test
inc
xor
mov
jne
mov
fcomps
add
incl
cld
add
mov
cld
inc
fidivrs
fbstp
mov
adc
fadd
add
mov
inc
mov
loopne
sbb
sbb
pushf
add
mov
cwtl
inc
inc
jne
mov
clc
add
mov
or
inc
lea
add
inc
rorl
add
shufps
jmp
xor
hlt
mov
fadds
xor
add
cmp
pmuludq
jmp
mov
or
inc
mov
jne
mov
clc
add
xor
jne
pushl
add
mov
cld
add
xor
mov
adc
sub
lea
add
jb
add
inc
add
inc
mov
or
mov
in
scas
inc
mov
in
add
mov
dec
mov
mov
cld
push
dec
add
mov
in
cmp
mov
mov
mov
xor
cmpl
xor
jmp
add
xor
add
cmp
mov
mov
adc
jmp
mov
cld
mov
push
jne
dec
or
push
inc
in
add
or
dec
cld
mov
xorl
pushf
decl
mov
mov
xor
mov
inc
mov
mov
call
add
mov
or
jo
push
xor
pmulhuw
test
mov
mov
xor
xor
xor
add
inc
mov
movl
sub
lock
mov
mov
or
ja
mov
cld
cli
mov
cmp
bswap
mov
mov
clc
repnz
push
xor
cmp
pushf
pop
jmp
mov
xor
lea
xor
pushf
out
neg
insl
test
clc
pop
inc
or
xor
add
jne
mov
in
push
xor
add
cmp
add
mov
mov
add
mov
mov
fwait
pushf
xor
jne
mov
icebp
icebp
shl
mov
push
jne
mov
in
jmp
add
mov
or
inc
jne
mov
ret
or
jge
sub
xor
add
mov
clc
negl
xor
cmp
repz
xor
add
mov
mov
cld
lock
test
clc
add
fdivrp
test
jnp
add
jae
sub
shll
leave
call
in
in
add
mov
in
test
mov
xor
pushf
jnp
xor
loopne
jne
mov
add
xor
mov
cld
jb
add
jne
mov
jge
mov
lock
xor
mov
lock
jge
xor
dec
mov
loopne
jge
add
icebp
add
dec
hlt
xor
mov
in
jge
mov
dec
push
xor
inc
hlt
xor
mov
repnz
cmp
test
fistps
inc
mov
add
inc
test
add
add
ret
jnp
inc
inc
xor
fdivl
test
push
add
cmp
setnp
mov
call
or
inc
mov
and
lock
movl
mov
clc
xor
mov
inc
mov
mov
mov
mov
hlt
inc
rorl
mov
push
mov
in
jne
mov
addl
clc
mov
add
rolw
mov
jne
incl
inc
push
test
sub
add
and
add
mov
and
cmp
add
inc
push
add
push
enterw
mov
add
add
str
lea
sbb
dec
cmp
inc
push
mov
push
add
mov
inc
add
add
mov
loopne
dec
mov
cld
push
xchg
add
add
or
dec
loopne
xchg
push
add
dec
jmp
mov
sbb
inc
xor
add
push
divl
and
add
jno
incl
inc
push
push
mov
mov
push
inc
enter
push
call
pop
push
mov
mov
push
jo
incl
or
call
fmull
mov
mov
adc
dec
xor
mov
mov
mov
push
lret
movb
inc
movntps
lret
into
dec
lret
mov
mov
fdivl
mov
push
mov
sbb
dec
sarl
push
jne
mov
lea
call
sbb
add
push
mov
push
mov
test
xadd
pop
add
mov
or
push
add
add
and
call
add
mov
add
xor
add
inc
je
push
decb
add
or
inc
add
data16
subl
add
add
enter
int3
loopne
rolb
lea
data16
add
sbb
inc
cmp
add
xor
sub
mov
or
ror
dec
inc
cmp
cld
or
ret
lret
dec
mov
loopne
cmp
inc
daa
loopne
in
add
add
push
inc
xor
add
push
push
inc
in
push
inc
sbb
rorb
addb
ljmp
xor
mov
fmuls
add
lea
add
popl
add
push
incw
mov
add
xor
test
inc
mov
add
or
or
inc
mov
jne
mov
add
add
adc
adc
push
mov
mov
inc
mov
or
push
jne
call
inc
sarb
in
add
add
and
fs
incl
jle
leave
scas
inc
add
orb
call
shr
xchg
add
add
dec
and
push
decl
mov
mov
lea
mov
add
mov
push
shlb
inc
in
jno
push
mov
mov
je
mov
sbb
popl
add
add
adc
jmp
sub
jne
mov
in
popl
push
incl
adc
add
call
and
and
inc
test
sldt
xor
pushf
jmp
mov
or
inc
call
mov
loopne
inc
add
mov
add
add
cmp
test
sbbl
jne
call
leave
rcrb
add
add
add
inc
mov
fcom
add
lea
pushl
call
mov
fstps
push
pop
mov
addl
mov
xor
xor
pop
or
inc
push
in
or
movsl
xbegin
clc
adc
divb
or
test
add
add
adc
xchg
test
clc
data16
orl
rolb
mov
mov
push
add
jge
add
jne
mov
jmp
xor
pop
cvtdq2ps
ret
mov
xor
add
push
rdpmc
out
add
mov
ret
sbb
cmp
or
or
pop
inc
add
add
invd
jge
mov
cli
xor
mov
ret
mov
sub
inc
xor
pushf
inc
mov
hlt
test
mov
xor
dec
or
jne
mov
call
inc
mov
add
add
inc
mov
addl
inc
mov
lock
jge
mov
cli
xor
add
test
add
cmp
xadd
test
mov
xor
add
pop
loopne
inc
clc
xor
add
data16
mov
hlt
xor
add
data16
cmp
add
psubq
ltr
add
add
data16
mov
jge
data16
data16
mov
fdivl
data16
mov
mov
pop
or
clc
mov
lock
jge
invd
pop
add
cmp
data16
mov
pop
fbstp
test
add
add
jge
data16
pop
stc
bsf
mov
in
test
mov
call
cmp
add
mov
call
add
mov
jnp
mov
mov
call
mov
data16
xorl
fisttps
cld
jne
xor
mov
sti
repnz
data16
push
xor
mov
fwait
data16
mov
mov
fisttps
or
mov
hlt
mov
add
dec
or
mov
or
mov
fdivrl
xor
pop
lock
lea
icebp
jb
add
jge
mov
fsubr
pop
mov
in
rcrl
jb
add
jge
mov
in
pop
data16
cmp
mov
fdivrl
cmp
mov
mov
lock
mov
or
clc
cmp
je
push
loopne
dec
mov
int
mov
pcmpgtd
add
jmp
mov
lock
rorl
or
jb
add
loopne
jne
data16
mov
data16
add
add
retw
ret
lret
enterw
pop
jne
mov
call
xor
lea
repnz
add
xor
in
xor
movl
clc
add
pop
pushf
pop
call
mov
push
pop
mov
push
inc
add
popa
data16
into
gs
add
ret
add
add
add
cmp
add
into
ret
pop
adc
mov
mov
jne
lea
mov
sarl
test
mov
push
xorb
mov
xor
ss
fs
mov
je
xor
mov
ss
pop
cmp
jne
mov
cld
push
pop
inc
stc
xor
test
clc
test
cmp
fs
or
add
lret
xor
pushf
mov
ret
pop
dec
mov
push
add
xor
cmp
je
mov
lea
push
cmp
mov
add
sub
add
mov
jne
mov
xor
mov
push
cmp
jne
sbbl
clc
inc
pop
sti
add
cld
xor
mov
roll
mov
inc
in
add
mov
mov
push
mov
test
xor
pushf
sub
inc
sub
mov
inc
add
or
cmp
mov
cmp
je
push
dec
str
cmp
int
mov
mov
cld
add
data16
push
add
jne
movl
clc
xlat
inc
mov
push
pushf
in
add
add
add
cmp
add
lret
lock
clc
inc
lret
cmp
xor
pushf
test
je
xor
rorb
push
add
jb
add
dec
mov
push
push
adcl
xor
mov
scas
ret
jns
mov
dec
or
ret
lock
mov
or
mov
xorl
mov
adc
iret
inc
movl
incb
ret
adc
clc
dec
fisttps
add
ret
lea
add
xor
pushf
add
add
inc
test
xor
push
fwait
push
xor
inc
cmp
jbe
mov
or
inc
test
xor
in
hlt
push
push
push
push
mov
fwait
fwait
xor
mov
or
mov
clc
jb
add
orl
addl
mov
or
inc
dec
mov
orw
xor
mov
mov
mov
mov
inc
dec
add
add
mov
clc
or
mov
clc
popf
incl
ret
adc
mov
hlt
test
clc
or
xor
pushf
jb
add
inc
daa
inc
inc
xor
dec
fwait
add
clc
cmp
or
add
xor
or
lea
add
mov
cld
dec
push
sub
add
or
add
or
add
mov
inc
mov
cmp
xbegin
clc
or
xor
adc
lea
add
inc
add
add
je
push
or
dec
std
mov
mov
mov
or
inc
clc
mov
hlt
call
push
or
push
xor
mov
xor
pushf
inc
mov
or
add
inc
mov
or
inc
push
jmp
mov
mov
jne
jmp
mov
clc
lret
push
mov
mov
sub
decl
or
pop
ds
pushl
mov
mov
jmp
leave
jne
call
in
dec
add
add
inc
cmp
je
mov
or
add
or
adc
enter
rolb
mov
or
rorb
jmp
push
mov
cld
inc
inc
orl
push
push
mov
add
test
add
mov
mov
lock
fcoms
mov
push
enter
cmp
add
mov
call
cmp
jmp
push
call
mov
cld
or
call
add
xor
jne
cmp
jne
mov
or
pop
into
je
mov
or
mov
mov
mov
or
sar
xor
xor
pop
adc
ret
cld
inc
mov
cld
mov
push
pop
or
xorps
test
add
adc
addl
jmp
ror
inc
leave
xor
and
add
xor
xorl
mov
pcmpgtw
add
leave
mov
push
dec
mov
lea
xor
sysret
dec
rorb
pushw
jne
ud0
mov
lods
add
data16
iret
and
cli
inc
cmp
add
inc
pop
lea
mov
add
mov
mov
add
inc
data16
clc
int3
cmp
je
push
pop
xchg
data16
lea
jb
jmp
call
clc
xchg
mov
or
lea
push
inc
jge
mov
fdivs
incl
xor
xchg
ret
xor
cmp
data16
rolb
add
dec
xchg
push
jmp
push
add
add
mov
clc
dec
xchg
cmp
jne
xor
jmp
add
jne
call
clc
xchg
sti
add
add
xor
pop
mov
jmp
mov
cmp
cmp
lea
jle
jae
mov
lcall
inc
push
lea
mov
int3
push
xchg
add
add
inc
add
cld
mov
aam
xchg
mov
testb
mov
hlt
add
mov
decl
incl
mov
call
je
js
lock
mov
mov
sbb
clc
add
mov
rorb
dec
xchg
mov
in
jge
cmp
clc
pop
fistl
clc
add
mov
mov
mov
adc
add
adc
pop
sbbl
ret
cmp
mov
cld
add
add
add
sub
or
add
mov
push
push
clc
addl
out
add
jmp
cmp
jmp
je
mov
inc
add
add
add
pop
pop
push
inc
in
pop
in
cmp
xor
add
push
mov
in
dec
push
test
add
leave
inc
test
add
add
dec
push
mov
hlt
push
dec
leave
mov
clc
cmovge
mov
clc
popl
push
add
push
xor
cld
add
xor
add
add
int
mov
add
cmp
jne
xor
jmp
add
mov
or
mov
mov
mov
or
shl
icebp
addb
or
or
stc
shll
xor
inc
xchg
add
add
mov
test
sub
jmp
mov
lock
lea
mov
or
leave
add
dec
dec
test
paddb
add
dec
mov
mov
or
dec
xor
mov
adc
mov
call
mov
push
clc
or
push
lret
mov
mov
xor
cmp
lsl
call
or
dec
or
inc
xor
in
add
inc
pop
xor
testl
dec
sub
add
push
sub
mov
or
mov
xor
pushf
push
movl
dec
inc
cmpb
pushf
gs
shl
dec
xchg
shr
xlat
rol
mov
or
mov
or
push
mov
dec
enter
lret
ret
mov
or
into
add
add
bswap
ror
dec
add
mov
hlt
inc
inc
ret
mov
or
dec
xor
jne
inc
inc
mov
clc
pop
ret
mov
call
dec
add
adc
push
ret
in
call
push
add
xor
jmp
xor
add
shr
mov
mov
in
pushf
ret
fcomps
inc
in
xor
mov
cld
fmul
sbb
ljmp
jbe
mov
clc
add
mov
lea
mov
call
hlt
xor
mov
xor
mov
hlt
into
inc
scas
mov
cld
add
add
inc
shrl
xor
mov
clc
dec
inc
decl
ret
movb
scas
inc
jmp
mov
pop
xor
mov
clc
test
mov
cld
call
xor
add
fdivl
lret
in
inc
or
into
mov
call
cld
mov
xor
lea
mov
add
inc
mov
dec
mov
cld
xor
sub
int
sub
add
mov
call
incl
mov
cld
jne
mov
aam
dec
or
jb
add
rorl
xor
xor
sub
mov
xchg
inc
xor
clc
mov
nop
faddl
xchg
jmp
mov
fadds
inc
or
dec
add
dec
mov
inc
push
mov
xor
rolb
ret
inc
inc
mov
xor
add
mov
cmp
dec
inc
xor
inc
mov
clc
lea
add
xor
mov
push
enter
mov
mov
loopne
ret
push
enter
inc
cld
mov
clc
ret
ret
mov
cld
pop
mov
mov
dec
xor
pushf
add
fcoms
mov
adc
inc
mov
adc
cmp
inc
add
mov
nop
add
inc
mov
add
cmp
mov
clc
inc
inc
add
mov
in
jne
mov
clc
add
mov
in
mov
xor
cmp
fmuls
lea
clc
mov
cmp
test
inc
mov
ret
inc
decl
push
dec
test
dec
mov
mov
mov
fadds
dec
inc
sub
inc
xor
faddl
inc
or
dec
add
mov
mov
mov
mov
lock
inc
add
fsubr
test
clc
push
cmp
pushf
inc
push
fsubs
clc
mov
mov
mov
clc
mov
xor
mov
in
les
mov
or
dec
mov
in
dec
decl
fmuls
inc
mov
faddl
dec
push
xor
push
mov
push
mov
lock
inc
test
add
add
jne
lea
div
incl
xor
jb
add
mov
xor
mov
adc
mov
ret
push
push
lea
sti
add
or
mov
xor
mov
add
jne
lea
mov
call
shll
pushf
add
mov
xor
test
clc
dec
inc
xor
pushf
rorb
lea
int3
add
lea
lea
mov
xor
bswap
rorb
roll
add
xor
pushf
inc
jnp
mov
lock
lret
xor
mov
fmul
test
xor
mov
mov
mov
ret
add
dec
adc
add
inc
rcll
mov
xor
jb
add
mov
cld
mov
or
cmp
jne
mov
mov
xor
mov
mov
mov
xor
jb
add
add
mov
xor
mov
or
xor
mov
mov
xor
jb
add
enter
add
add
inc
mov
mov
add
dec
mov
add
cmp
add
mov
loopne
add
dec
or
in
or
mov
xor
add
enter
inc
mov
or
or
mov
cmp
add
roll
mov
or
xor
mov
mov
xor
mov
xor
mov
faddl
call
dec
dec
xor
or
loopne
or
iret
ret
mov
mov
call
fwait
add
mov
fmull
test
dec
add
cmp
dec
mov
xor
mov
in
or
dec
xor
lea
or
ja
sbb
cmp
jne
mov
faddl
mov
fadds
mov
in
or
iret
add
xor
sbb
decl
mov
in
mov
dec
mov
fmull
jne
or
add
cmp
jne
lea
inc
mov
mov
jne
mov
test
inc
mov
loop
pushl
mov
add
mov
lods
dec
inc
mov
lret
mov
adc
std
ret
ljmp
hlt
rol
ret
cld
enter
inc
pop
mov
ret
test
jmp
push
call
in
addb
add
add
icebp
mov
cld
pop
dec
shll
add
cmp
je
mov
inc
or
ljmp
sti
cwtl
call
or
push
sub
push
inc
mov
mov
test
inc
push
push
xor
add
dec
add
inc
add
push
decl
add
or
call
mov
mov
inc
dec
add
push
call
incl
mov
mov
or
cmp
cmovne
adc
adc
inc
adc
jne
call
dec
inc
mov
add
mov
push
or
dec
xorl
cmp
mov
pop
adc
ret
mov
clc
mov
pop
mov
mov
push
push
lock
mov
adc
or
ret
xor
add
or
jge
mov
and
cmp
mov
xchg
dec
add
mov
add
dec
into
mov
mov
das
add
add
mov
and
mov
and
xor
lea
xor
add
xor
orl
cmp
pushf
mov
or
jne
call
adc
mov
adc
movl
pop
and
and
call
in
jmp
je
call
and
call
and
push
or
pop
mov
and
mov
and
mov
jne
test
decl
sbb
jl
adc
dec
mov
mov
and
xor
or
add
clc
jmp
adc
inc
je
and
je
mov
decl
sbb
add
add
adc
mov
adc
add
add
adc
sub
add
imul
add
ss
add
ss
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
jo
add
pop
adc
push
adc
add
insb
adc
jb
adc
push
aaa
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
jge
add
or
add
sub
add
insb
adc
addr16
add
adc
lds
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
adc
clc
cmp
add
pop
adc
mov
adc
add
adc
cmp
shll
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
adc
fwait
pop
adc
jnp
adc
pop
adc
popf
jno
add
inc
adc
sbb
add
cmp
pop
cmp
sbb
inc
add
cmp
and
inc
add
cmp
sub
inc
add
cmp
push
xor
aaa
pop
inc
dec
xor
push
add
xor
pop
inc
push
pop
dec
xor
push
add
cmp
xor
xor
pop
inc
add
dec
cmp
xor
pop
pop
xor
inc
add
inc
pop
cmp
push
inc
xor
xor
inc
inc
inc
cmp
dec
inc
add
push
xor
push
aaa
dec
pop
xor
dec
add
inc
xor
push
pop
push
inc
add
xor
cmp
push
push
push
pop
inc
push
push
add
inc
pop
pop
push
inc
pop
inc
add
cmp
inc
xor
pop
pop
cmp
inc
xor
dec
add
pop
cmp
xor
cmp
dec
dec
cmp
pop
dec
xor
xor
pop
inc
push
inc
inc
add
cmp
push
inc
xor
pop
dec
dec
ss
pop
push
cmp
pop
push
dec
add
inc
cmp
dec
xor
inc
xor
xor
push
add
xor
push
cmp
ss
pop
push
inc
xor
dec
inc
xor
dec
pop
push
add
inc
add
pop
add
add
add
xor
add
add
push
add
xor
add
inc
add
xor
pop
add
add
xor
add
xor
add
push
add
dec
add
push
add
push
add
pop
add
dec
add
push
add
pop
add
add
dec
add
cmp
pop
add
add
add
add
add
push
add
cmp
add
add
push
add
add
add
inc
add
inc
add
push
add
dec
add
add
dec
add
inc
add
dec
add
add
add
push
add
add
push
add
add
pop
add
add
inc
add
add
push
add
add
push
add
dec
add
add
aaa
add
add
pop
add
inc
add
xor
push
add
push
add
add
push
add
add
add
inc
push
push
mov
mov
loope
sub
sbb
add
push
cmp
addr16
bound
outsb
pop
je
ja
imul
js
jp
jns
jp
je
jp
jo,pn
bound
