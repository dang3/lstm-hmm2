push
mov
sub
cmpl
mov
movl
not
jmp
mov
jae
push
call
sub
sub
mov
xor
add
sub
and
or
mov
mov
mov
orl
sub
push
mov
mov
mov
mov
sbb
movzwl
add
mov
mov
sbbl
orl
orl
cmpl
not
mov
jmp
mov
mov
jle
push
pushl
push
push
push
pushl
push
call
andl
subl
and
orl
and
adc
adc
mov
mov
mov
mov
sbbl
sub
mov
mov
sbb
mov
orl
orl
lea
sbb
mov
cmpl
movzwl
mov
notl
mov
jmp
mov
mov
jae
push
push
pushl
call
xor
or
adc
sbb
mov
adc
mov
addl
add
mov
jmp
hlt
loop
sbb
and
mov
mov
je
push
push
push
sub
push
push
jp
add
mov
push
popf
loope
dec
stc
cmp
rolb
push
mov
testl
movsl
dec
sbb
xor
pop
cmp
dec
rcl
inc
inc
push
jl
pop
mov
dec
dec
dec
rorb
or
mov
daa
bound
scas
test
mov
pop
push
inc
fdivs
imul
mov
jecxz
add
cmpsb
inc
fucomp
loopne
mov
hlt
push
rcll
out
jmp
rol
lret
mov
xor
push
and
inc
fiaddl
fdivl
ds
scas
test
pushl
add
js
pop
inc
xor
mov
jb
xchg
sahf
popf
pop
mov
or
cld
pop
stc
inc
inc
sub
aaa
imul
scas
ret
lods
adc
add
loop
out
packssdw
and
adc
sub
jne
xlat
ss
cmp
movsl
or
sbb
pop
scas
pop
adc
add
pop
cs
mov
int
mov
jae
sub
xor
inc
add
imul
test
adc
sub
sbb
cmc
ret
cli
cmp
fmuls
cmp
fisttpll
mov
jno
pusha
inc
xor
cmp
sbb
fdivrs
jp
mov
cmp
addr16
sbb
insl
into
hlt
scas
in
adc
pop
lea
push
int
jns
xor
cmp
inc
mov
leave
mov
xor
inc
popa
cld
addr16
das
mov
xor
push
fdivrs
fwait
cmp
xor
rcll
dec
out
cmc
mov
imul
pop
jns
mov
jg
nop
sub
jp
push
jle
push
adc
out
push
lahf
xor
mov
lea
push
fwait
xorl
js
mov
repz
test
pop
add
stc
lret
inc
mov
jne
pop
push
je
or
lock
dec
fwait
push
mov
movsl
subb
out
and
fdivrs
lds
inc
jne
stos
imul
insb
and
rclb
pushf
jb
and
enter
mov
clc
leave
loopne
fistpll
cmc
lods
aas
dec
loop
cmp
enter
call
out
xchg
jecxz
pop
outsl
and
iret
or
push
loope
mov
test
dec
sbb
outsb
dec
xor
add
jle
lea
push
ss
decl
add
and
std
cld
fiaddl
loop
outsl
test
mov
out
fsts
mov
or
xchg
xchg
mov
xor
movsb
xor
sub
int3
sub
push
repnz
mov
mov
fs
mov
fdivs
ja
jns
mov
clc
flds
inc
adc
subb
push
jo
pusha
leave
push
dec
enter
movsb
out
xor
pusha
pop
orb
dec
repnz
lcall
xchg
ret
cld
cmp
pop
stos
sarb
in
push
cld
jl
mov
mov
and
aad
jmp
mov
inc
or
loope
jp
xor
xchg
add
inc
sub
in
adc
sbb
mov
add
lods
jle
xor
sub
xchg
jns
popa
fwait
rep
and
ja
dec
push
pop
je
jmp
ret
push
jecxz
sahf
add
hlt
add
cli
mov
pop
xor
in
push
paddsb
pop
inc
in
inc
dec
mov
xchg
cmp
arpl
add
icebp
lds
push
cltd
scas
mov
inc
fdivrl
bound
and
roll
pop
movsl
jnp
into
inc
clc
mov
fs
adc
hlt
mov
xor
js
leave
inc
and
roll
ret
addr16
pop
xor
popl
cltd
std
mov
mov
pop
sbb
cmp
mov
je
xchg
pcmpgtd
mov
out
jne
jns
and
xchg
lahf
sbb
mov
jns
mov
xlat
jb
insl
icebp
es
adc
imul
rcl
int
es
xor
dec
add
filds
mov
inc
in
decl
out
jmp
sbb
enter
sbb
jbe
sbb
adc
mov
mov
inc
xor
dec
dec
push
or
jl
decl
dec
fiadds
xor
inc
repz
aam
inc
js
into
lea
lds
add
inc
cmp
push
shlb
cmp
adc
or
sub
mov
mov
push
shl
mov
mov
xchg
sub
pusha
mov
lods
jl
cmpsl
cmpsl
inc
jae
dec
mov
je
cmpsb
pop
rolw
xchg
fisubl
mov
push
adc
ret
jae
jo
decl
pop
push
sbb
call
adc
cmp
call
cmpb
loopne
mov
inc
or
xchg
dec
sbb
icebp
rcr
xchg
lret
xchg
cmc
xor
mov
xchg
cmp
push
cmp
ljmp
push
mov
sahf
hlt
xor
ficoml
outsb
cmp
cwtl
inc
sti
testl
das
mov
into
rorl
int
sarb
xor
jle
das
popa
cmp
xchg
out
sarl
lret
push
and
loop
out
mov
pop
jnp
lds
mov
iret
mov
setne
sbb
das
pop
stos
lods
mov
fmull
pop
jmp
add
sub
push
adcl
dec
dec
cwtl
adc
ljmp
nop
ret
xor
aad
jbe
pushl
stos
rcl
sar
lds
push
cmp
xor
mov
xchg
push
fnstcw
dec
scas
adc
pop
inc
or
rcrl
outsl
sti
ja
insl
and
nop
inc
jecxz
mov
aad
lret
out
push
jmp
cmc
mov
or
sub
pop
jno
dec
fstpt
sub
mov
pop
test
mov
sbb
pushf
into
mov
jg
cmp
movq
jb
mov
dec
inc
ss
push
popf
popa
rcrl
call
repz
sub
sbb
pop
and
mov
dec
adc
ret
cmp
mov
pushf
cwtl
mov
ljmp
cmp
xor
mov
jno
pop
stos
jbe
out
fisttpl
stos
dec
jnp
cmc
imul
shl
loope
jmp
mov
push
mov
out
mov
or
cld
insl
dec
lahf
leave
lret
mov
lods
int
push
iret
dec
sahf
mov
lahf
jl
aam
test
pmulhuw
push
xorl
pop
lea
mov
sbb
fildll
mov
jns
push
mov
aad
inc
jmp
pop
mov
ret
cmp
ljmp
pushf
add
mov
ret
inc
es
and
in
sbb
sub
jmp
cmp
icebp
mov
mov
push
jmp
in
jg
mov
leave
mov
push
cmpsb
push
jno
mov
jbe
push
inc
xchg
insb
pushl
xor
movsb
pop
fmul
fimull
mov
loopne
ficompl
xchg
inc
mov
sti
daa
hlt
fadd
or
dec
test
mov
cmpsl
adcb
pop
pusha
scas
daa
adc
bound
stc
pop
or
and
ja
jp
mov
push
pop
dec
out
cmp
cmp
xchg
lcall
xor
vrsqrtps
add
roll
in
cmp
lods
and
jae
xchg
mov
decb
adc
outsb
lcall
adc
add
sbb
lock
mov
sub
sbbl
or
add
xor
adc
repz
mov
sub
sub
ficoms
xchg
lcall
out
scas
jae
jo
mov
daa
stos
cmp
call
sbb
outsb
out
pop
adc
cmpsb
mov
ljmp
in
adc
sbb
into
rorb
lock
dec
mov
xor
inc
sub
ja
push
mov
gs
call
add
push
movsb
bound
jmp
loope
or
sub
xchg
enter
pop
pop
xchg
jp
mov
fs
or
or
mov
dec
mov
pop
inc
scas
and
cmp
lds
jo
lea
or
repnz
popa
int
and
mov
scas
arpl
lods
mov
and
adc
into
jg
int
fsubrp
or
ja
loopne
and
imul
mov
lea
and
and
jns
pusha
es
hlt
jns
jp
push
out
ds
int3
xor
fstpl
lock
js
and
gs
cmp
dec
mov
mov
add
fdivr
xchg
cmpsb
mov
sti
push
xor
sbb
out
mov
mov
mov
xchg
mov
cld
mov
leave
pop
fsubrl
fistps
sub
pop
jns
adc
roll
pusha
lret
ss
lcall
icebp
test
cld
push
sti
lds
cmpsb
cmpsl
mov
fmul
int
lahf
adc
push
pop
test
lods
sub
pop
outsb
and
decb
sub
xlat
sarb
imul
push
sbb
cmpsl
dec
test
xor
cs
jno
pop
std
or
inc
mov
out
out
and
jnp
cwtl
inc
sub
adc
fiaddl
or
mov
out
popf
data16
imul
ljmp
jmp
mov
jle
push
fiaddl
jns
push
pop
cmp
pop
fnstsw
add
dec
jmp
lds
cmp
popf
test
stos
pop
pop
sub
arpl
sub
mov
scas
cmp
inc
dec
cmp
xorl
mov
je
add
aad
xchg
push
das
outsl
or
jle
sub
jge
dec
sti
xchg
xchg
jge
jns
mov
outsb
adc
les
sbbl
lods
mov
pop
cmp
inc
pusha
cltd
pop
cmp
push
jg
jle
sbb
leave
xor
out
mov
and
addb
sbb
mov
lds
jg
pusha
imul
pop
imul
jno
pop
push
lahf
in
lea
sub
popf
fsubr
sub
sub
negb
int
cmpsl
xchg
pusha
ret
push
pushf
inc
cli
push
iret
fcmovne
mov
jge
adcl
mov
repz
nop
js
pop
ja
mov
inc
jp
ds
push
stos
pop
and
jmp
fdivrl
cltd
xchg
push
cmpsl
jnp
cmp
roll
in
mov
test
mov
inc
lret
ret
imul
sub
pusha
xchg
das
adc
mov
push
dec
imul
push
push
and
inc
or
repnz
sub
aas
push
push
test
lcall
xchg
inc
sbbw
jno
imull
nop
imul
xchg
push
rolb
popf
lock
repnz
pop
stc
outsb
rcr
mov
push
mov
call
adc
xchg
sbb
mov
frstor
cmp
inc
or
daa
pushf
push
out
mov
out
mov
aad
test
enter
pushf
mov
cmp
arpl
in
add
inc
icebp
imul
push
divb
pop
mov
push
xchg
testl
dec
shll
mov
cmpsl
je
out
rcrl
xor
adcl
push
test
inc
pop
jbe
and
push
lods
idivl
imul
dec
hlt
xor
loope
ficoms
lock
ficoml
lsl
cwtl
ja
fmull
stc
popf
int3
mov
or
test
js
in
push
mov
lock
stc
mov
xlat
sub
sub
mov
xchg
mov
pushf
push
mov
or
jo
push
jg
mov
pop
test
into
mov
bound
in
shrb
adc
xchg
adc
leave
jb
mov
cmp
mov
adc
scas
lret
mov
les
sahf
aaa
inc
mov
xchg
test
sub
mov
sub
ja
cs
adc
and
push
sub
sbb
aad
arpl
pop
data16
cwtl
outsb
lock
ljmp
dec
lret
dec
ljmp
pop
loop
bound
xor
repz
aad
mov
aaa
cld
out
rcl
adc
adc
lahf
sub
sub
les
fistps
cmp
push
imul
std
scas
sahf
cmp
sbb
pop
adc
sub
sub
xchg
test
js
pop
imul
xor
iret
add
xor
test
out
pop
mov
scas
add
lock
jb
jae
test
out
jbe
leave
inc
jmp
int
icebp
aam
adc
jle
cli
dec
mov
jb
xchg
jle
stos
xchg
outsl
shr
and
mov
pop
lcall
int3
inc
andb
jno
daa
stos
insl
addr16
cmp
push
adc
push
daa
icebp
bound
ret
or
push
push
mov
push
mov
xchg
call
adc
push
add
ret
and
mov
jp
mov
aaa
xchg
pushf
dec
adc
jns
or
scas
dec
push
test
and
cmpsb
icebp
jg
xchg
in
adc
out
or
push
and
mov
xchg
mov
or
scas
aaa
inc
jb
and
adc
insb
loopne
push
orb
inc
mov
les
orb
nop
ds
xchg
fbstp
cmp
lea
jge
cmp
or
incb
out
lods
sbb
je
dec
xchg
inc
outsl
fcoms
push
sbb
iret
mov
xchg
movsb
xchg
add
jle
push
lret
scas
mov
xor
mov
inc
test
test
mov
clc
aam
mov
movsl
insl
xchg
dec
ret
mov
inc
or
lods
cmpsb
inc
rcl
repz
leave
lcall
adc
int3
arpl
mov
pop
jl
shlb
mov
std
xchg
pop
push
push
xchg
mov
mov
mov
stos
pop
cmpsb
movsb
add
testb
mov
aam
push
rorb
aas
ffree
jbe
xor
lea
sub
outsl
sbb
mov
outsl
test
and
out
ja
stos
pop
or
cmp
sahf
add
mov
scas
push
gs
data16
stc
cli
dec
fisubrl
mov
lret
out
in
sub
mov
out
and
in
adc
and
ss
xchg
je
push
jecxz
add
inc
int
xlat
ficoml
mov
xor
lcall
fucom
push
and
push
push
repz
mov
call
xchg
push
fidivs
lock
fisubl
adc
push
test
jecxz
jl
inc
jb
sub
adc
and
push
sbb
push
dec
sarl
jno
adc
jp
test
mov
sub
repz
sbb
or
xchg
hlt
add
inc
ja
mov
bound
or
xor
movsl
xorl
push
mov
popa
lahf
push
sub
mov
inc
rcl
lahf
outsl
das
push
mov
sbb
mov
add
push
push
mov
popf
jnp
lock
dec
dec
sti
mov
jbe
mov
in
das
lods
stos
pop
out
cmpsl
dec
jle
movsb
jl
xor
sar
in
clc
fldenv
outsl
scas
sub
cltd
and
mov
xchg
outsl
jbe
loop
push
xor
mov
add
int
ret
push
jne
push
gs
test
adc
mov
aas
adc
dec
pop
sub
xor
xchg
fstl
je
cmp
call
push
fsubrs
repnz
mov
rcll
sub
sub
mov
xchg
push
hlt
int3
inc
sub
pop
cmp
xlat
xchg
aas
add
dec
cmp
addb
and
cli
add
sbb
lods
in
dec
data16
sti
sub
mov
insl
push
jae
mov
or
adc
dec
pop
mov
push
push
sbb
jns
xchg
hlt
test
mov
mov
inc
push
and
or
repnz
movsl
repz
arpl
ja
aam
lea
xchg
shlb
stos
imul
xchg
fisttps
adc
outsl
ficomps
lods
imul
adc
jo
out
pushf
cltd
fs
pusha
cmp
clc
pop
pop
push
aam
push
imul
lcall
mov
xchg
dec
dec
aaa
repz
dec
in
adc
ret
add
push
je
adc
hlt
xchg
pushf
xlat
test
insl
sti
adc
out
sub
sbb
jbe
outsb
test
sbb
fwait
aaa
mov
jle
mov
dec
mov
pop
and
std
loope
mov
call
ja
jp
fcmovbe
rcl
mov
adc
sbb
ljmp
mov
cmpsb
fwait
rcrl
and
or
sbb
rcrl
cmp
adc
jle
movsb
sub
clc
aam
add
and
adc
fistl
xor
xor
or
rclb
daa
cmpsb
adc
ret
insl
dec
jl
jne
aaa
inc
daa
pop
stc
jl
adc
cmpsb
aaa
scas
stc
icebp
movsb
in
xchg
das
jg
cwtl
out
add
pop
loop
jns
addb
jno
js
sub
sbb
xchg
imull
mov
push
xchg
int3
or
pop
mov
int
jb
or
daa
sbb
imulb
mov
and
xchg
mov
pop
mov
fwait
loope
jmp
insb
nop
dec
lahf
push
jp
sub
xchg
cwtl
add
mov
daa
xor
jnp
xchg
adc
negl
dec
cmpsb
addr16
dec
xor
aad
jmp
pop
test
sti
insl
subb
cltd
das
and
or
push
out
dec
test
inc
pop
into
leave
ss
fwait
inc
lods
mov
sets
and
jle
flds
dec
sbb
idivl
insb
xchg
and
dec
jne
jae
pop
mov
push
mov
in
xor
pop
sbb
out
adc
push
pop
das
outsb
fs
add
into
or
pop
loopne
cmp
js
dec
add
leave
ljmp
loop
sbb
leave
add
in
inc
faddl
jg
and
xor
mov
push
loopne
xor
push
pushf
je
imul
add
mov
xchg
out
mov
outsb
jecxz
outsb
leave
or
xchg
testb
jns
clc
or
pop
push
xor
insl
and
ror
adc
jle
mov
call
push
sbb
xlat
jg
imul
mov
lods
in
mov
mov
dec
inc
jl
out
xchg
pop
leave
imul
icebp
fnstcw
adc
idiv
adc
xor
mov
mov
mov
pop
mov
xor
push
jns
dec
das
add
subl
adc
xchg
and
xchg
cwtl
scas
dec
push
nop
jns
mov
in
mov
mov
into
jge
pop
aas
sub
pop
stos
push
mov
mov
test
dec
fcmovne
aad
jno
sub
inc
pushf
lcall
das
adc
imul
xchg
stos
jle
sahf
xchg
imul
jecxz
jno
out
jp
repnz
test
pop
imul
jne
sbb
jae
stos
xchg
mov
push
lods
pop
ss
test
dec
out
mov
jp
or
aaa
inc
sbb
push
and
fucom
divb
test
ljmp
lea
stos
xchg
mov
xchg
cwtl
mov
out
aam
xchg
andl
inc
fidivl
icebp
sub
inc
jecxz
cmp
scas
hlt
je
das
aam
arpl
push
test
mov
pop
dec
xor
stc
aam
dec
mov
js
mov
jmp
cmp
xchg
mov
jecxz
pusha
pop
loopne
xor
leave
fstpl
push
mov
inc
mov
hlt
lea
jg
pop
repnz
inc
ficoms
jle
xchg
xchg
cltd
frstor
into
xchg
mov
cwtl
test
test
xor
int
insl
push
test
dec
lret
loop
jne
int
add
rcl
repnz
mov
add
jmp
sub
ret
mov
mov
cmp
or
in
sub
sbb
aam
popa
lock
fldcw
xor
ja
out
cmp
xor
mov
cmpsl
mov
or
dec
dec
sub
add
fwait
cmp
jnp
mov
or
add
or
ffreep
pop
jae
mov
cmp
outsl
daa
pop
int
orl
mov
inc
mov
bound
xchg
shl
popa
xor
lds
mov
sub
or
xchg
sbb
push
pop
jb
stos
sbb
repz
ret
enter
inc
mov
and
les
jl
movsl
lea
mov
imul
push
sub
cmpsb
pop
mov
mov
test
cltd
test
cs
push
ret
int
push
dec
idivb
cmpsl
xor
lds
dec
pop
fcmovb
jp
add
cmpsb
das
fwait
mov
leave
adc
mov
inc
sub
fcmovb
mov
adc
aam
in
loop
pop
push
mov
cmp
repz
cmp
adc
test
mov
leave
aas
gs
push
push
push
insl
int3
push
dec
dec
dec
sbb
insb
and
sbb
enter
push
fucomip
sub
daa
inc
sbbl
repnz
mov
call
sbb
xchg
mov
inc
push
mov
mov
adc
lret
stc
call
dec
jp
inc
cwtl
xchg
testl
icebp
lods
mov
imul
leave
mov
sti
mov
into
or
sbb
mov
mov
mov
andb
lods
jae
jp
dec
xchg
out
sub
nop
movsl
xchg
lcall
push
movsl
inc
insb
adc
icebp
jle
rcl
pop
mov
ret
xor
sbb
pop
loope
call
int3
sub
fistps
jecxz
jo
xorb
stc
inc
lret
pop
data16
pop
scas
push
adc
fidivrl
ja
and
sub
inc
sti
push
dec
adc
pop
shrb
pop
es
push
xchg
push
imul
cmp
cwtl
pop
xchg
aas
shrl
movl
lcall
fwait
int
lahf
and
lret
fdivs
lea
inc
jne
fsubrl
into
or
or
push
xchg
sti
mov
dec
add
pushl
inc
or
pop
xor
data16
inc
dec
cmp
aaa
xchg
mov
mov
test
ret
xor
into
xchg
push
ret
xor
icebp
pop
mov
pop
sub
in
xor
jle
hlt
loopne
in
cmp
jbe
data16
aaa
aaa
jl
pop
lcall
jno
das
cmpsl
movsbl
pusha
sti
push
push
fsubl
push
insb
mov
jo
pop
mov
cwtl
and
jb
push
addr16
daa
mov
fisttpl
inc
fisttps
fwait
xor
mov
lods
stc
and
adc
push
cmp
dec
std
popf
movlhps
inc
lods
mov
inc
js
insb
pushf
aaa
adc
mov
jo
jo
xchg
sbb
mov
xor
subb
dec
out
push
jg
cltd
ret
jb
fbld
jno
fwait
rorl
movsl
pop
mov
lret
pop
dec
sti
stc
xor
inc
imul
nop
xor
scas
aam
dec
shl
iret
imul
push
bound
pop
mov
xor
imul
xor
repz
outsl
adc
movsl
and
out
orb
sub
inc
shl
mov
incb
xchg
lods
push
cmpsl
mov
push
pop
sbb
dec
out
push
hlt
sahf
outsb
add
mov
inc
push
int
cmp
push
sub
mov
insl
pusha
mov
dec
adc
stos
mov
sbb
sbb
cmpsb
movsb
fwait
outsl
aas
sbb
repnz
pop
push
in
sub
mov
mov
jb
shll
xor
inc
and
adc
mov
mov
gs
mov
repnz
jmp
mov
hlt
stos
mov
pop
data16
pop
jg
in
clc
sbb
add
flds
push
and
fstl
in
lea
add
mov
int
or
movsb
fs
adc
dec
test
fldt
xchg
mov
dec
jmp
pop
pushf
icebp
mov
mov
xchg
dec
cmpsb
pushf
scas
push
jmp
dec
xor
in
mov
fcmovne
inc
inc
rcrl
addr16
xor
ret
add
and
es
and
ja
fnstcw
xchg
inc
hlt
pop
jae
aam
in
mov
int
aad
pop
lcall
push
mov
std
or
add
xor
sub
stc
push
or
jns
pop
sbbl
fcoml
pushl
mov
mov
out
movsb
add
test
dec
mov
loop
mov
cmp
xchg
aas
js
aam
mov
add
add
iretw
out
insb
cmpb
mov
test
jmp
sbb
push
out
and
pop
ret
std
cmp
xorb
test
push
mov
gs
inc
dec
repnz
stos
mov
fsubr
push
jns
lds
mov
jb
out
cmpsb
jo
ret
xchg
mov
push
rcrl
icebp
data16
lret
test
arpl
pop
xchg
inc
mov
leave
fnstenv
aas
push
cmpsb
adc
pop
xchg
push
mov
lods
sbb
inc
adc
jge
loop
mov
outsl
aaa
pop
or
sbb
xor
jmp
push
inc
sub
push
rolb
aaa
add
sbb
mov
mov
leave
mov
call
jae
js
xchg
cli
hlt
popa
jae
mov
mov
pop
and
mov
xchg
es
mov
push
sahf
cmp
lahf
repnz
push
cmp
cmpsb
popf
add
add
jne
or
in
in
sbb
rclb
sbb
insb
mov
pop
pushf
outsl
movsb
roll
push
lods
jp
mov
insl
push
lret
xchg
insl
fidivrs
int3
jmp
ret
mov
cmpsb
outsb
inc
pop
push
or
cmp
cmp
xlat
adc
sbbb
hlt
mov
mov
daa
ficoms
inc
adc
aad
cwtl
outsl
lods
and
sub
test
adc
adcb
mov
jo
sbb
stos
mov
adc
bound
rorl
cmp
mov
dec
lret
ret
adc
xchg
popf
cmp
push
mov
add
sbb
jnp
or
pop
fisttpl
je
jmp
repz
jne
ret
sbb
and
sub
nop
jnp
or
enter
sub
jnp
aam
pop
sbbl
popa
pop
lahf
imul
popf
jns
pop
imul
dec
or
inc
insl
popa
fnsave
mov
ljmp
repz
jbe
ds
pop
mov
jg
stos
add
xchg
and
ret
adc
and
popa
inc
push
cmp
sub
pop
adc
jae
test
or
roll
sarl
jno
dec
ret
es
imul
jecxz
mov
xor
lods
pusha
jo
enter
insb
loope
mov
int
outsb
pop
or
fs
rorl
cmp
pop
in
movsl
out
push
lods
pop
shlb
jge
dec
loop
mov
xor
or
int3
in
jle
cli
jge
inc
in
ds
sub
jmp
pop
push
pop
xlat
stc
fdivrl
mov
push
cmp
sti
jb
pop
sub
jl
dec
ja
bound
mov
lret
xchg
lods
xchg
sbb
out
pop
fadd
jle
int3
jg
push
push
ret
bound
movsb
pop
lds
imul
jo,pt
ja
push
pop
lock
xor
add
add
popf
mov
jbe
pop
out
stos
loopne
and
std
rclb
inc
lret
pop
ljmp
pop
inc
sub
je
or
jns
cmp
push
jl
and
jo
xor
push
sbb
jmp
fcoml
pop
aam
xor
sub
push
mov
sbb
xchg
stos
sbb
push
cwtl
enter
inc
stc
decl
push
out
icebp
mov
xchg
loopne
dec
popa
cmp
cmovg
scas
or
sbb
jo
jno
xchg
loopne
jnp
sub
imul
push
and
and
cmpl
movl
movl
mov
jmp
movl
movl
jge
push
push
push
call
or
sbbl
mov
add
or
orl
sbb
mov
xor
or
sub
and
add
mov
cmpl
movl
movzbl
movzbl
jmp
mov
jge
pushl
push
push
pushl
pushl
call
mov
mov
sub
not
adc
incl
sbb
xor
mov
mov
add
mov
adc
shrd
adcl
shr
mov
mov
negl
xor
xor
or
mov
sbbl
movl
xor
movl
cmpl
movl
mov
jmp
mov
movl
jl
push
call
adcl
addl
orl
xor
movl
movl
movl
andl
movl
incl
movl
movl
cmpl
movl
movl
mov
jmp
movl
jge
pushl
push
push
call
sbbl
subl
andl
sbbl
decl
movl
movl
cmpl
movl
movl
movl
jmp
mov
je
push
pushl
call
subl
add
addl
sub
andl
adcl
add
cmpl
movl
movl
jmp
movl
jbe
pushl
call
adcl
adcl
xor
sbbl
subl
xor
xorl
movl
movl
not
movl
cmpl
movl
movl
movl
movl
jmp
movl
jle
pushl
pushl
pushl
pushl
pushl
call
orl
sub
xorl
andl
decl
addl
sub
movl
movl
or
movl
movl
mov
and
mov
movl
jmp
out
adc
adc
sbb
mov
icebp
mov
xlat
push
push
sub
push
push
roll
arpl
sub
mul
insb
mov
inc
jge
aas
dec
jmp
push
sbb
push
push
out
ja
sbb
jo
pop
push
jno
sbb
fs
cmp
mov
add
mov
fs
mov
xor
data16
setle
sbb
mov
inc
daa
push
dec
lods
fs
mov
inc
mov
and
mov
ficompl
or
mov
and
jo
jae
push
orl
fadd
mov
outsb
mov
mov
out
cmc
jle
movsb
and
jno
mov
jo
cmp
jp
lods
inc
mov
mov
dec
cltd
test
ret
or
out
inc
jns
adc
inc
cmc
aas
sub
push
pop
mov
sahf
call
cmp
lods
mov
jne
pushf
loopne
cli
mov
push
or
sbb
or
in
arpl
es
fbstp
or
mov
stos
inc
daa
fisttps
fsubr
jecxz
cmp
movsb
scas
pop
js
sbb
mov
mov
inc
dec
mov
jnp
rcrl
pop
data16
scas
or
in
jl
mov
ja
roll
pop
inc
jg
ss
ds
pop
or
fistpl
das
jae
nop
and
sbb
jno
stos
jecxz,pt
dec
or
les
repz
ds
sub
popa
iret
mov
mov
pusha
sub
lea
or
xchg
pop
fstpt
pop
test
push
in
int
jbe
imul
lret
push
imul
inc
xor
jns
xor
jns
lods
out
test
das
mov
adcl
dec
pop
xchg
out
loopne
sbb
and
mov
mov
jae
mov
mov
push
adc
add
daa
push
fistl
xor
aam
mov
inc
mov
out
fwait
push
jg
ss
cmp
daa
sbb
ds
cmpsb
sarl
mov
sub
shll
sub
mov
or
pusha
pop
into
and
add
jecxz
stos
out
out
insl
pop
repnz
dec
adc
outsl
stos
cmp
sbb
fistpll
sub
sbb
movsl
cmpl
rol
or
insl
addr16
loop
or
inc
push
out
jne
push
mov
or
mov
popa
mov
adc
out
cmp
mov
jno
mov
test
pop
aas
cmpsb
test
sbb
mov
pop
jnp
dec
adc
pop
xor
mov
out
fsubrl
dec
dec
sub
das
test
pushw
cmp
adc
mov
loope
in
mov
xor
inc
cmc
lcall
stc
cmpsb
cmp
outsl
jecxz
cmpl
jo
call
adc
out
fisubrs
sub
pushf
jecxz
pop
test
pop
cmp
clc
mov
xor
in
xor
or
cld
pushf
nop
or
cmp
bound
adcw
cs
sub
sarb
cs
or
push
loope
data16
push
xor
jns
insb
push
xchg
jo
mov
push
rolb
mov
sub
movsl
push
repz
mov
xchg
dec
xchg
das
lds
pop
ljmp
xchg
sti
xchg
pop
dec
dec
cmpsl
enter
jae
add
test
pop
cltd
fadds
ljmp
cmp
dec
mov
or
lret
popf
cmp
push
fwait
mov
cmpl
mov
loopne
pop
jmp
ss
sub
testb
push
outsl
lds
dec
mov
xor
push
inc
decl
cld
mov
lock
fcoms
decb
imul
push
and
cli
mov
jno
ret
and
cltd
adc
push
bound
xchg
int
pushw
and
repnz
sub
sarl
lock
jnp
xchg
ss
and
jmp
xor
xor
shl
out
cmpsb
mov
pusha
lret
sbb
push
jo
stc
pop
les
imul
dec
mov
jecxz,pn
je
xorb
push
loop
in
je
and
jle
lods
shlb
push
sub
lret
pushf
je
pop
pop
test
stos
xchg
push
mov
rcrb
leave
push
fs
push
in
cmp
movl
cltd
or
mov
test
aam
jae
mov
iret
js
mov
add
cmp
pusha
fcompl
scas
daa
lods
mov
repnz
mov
or
sub
xor
repnz
in
pop
fs
adc
cli
sbb
fwait
cmp
push
and
imull
roll
push
or
add
leave
xor
filds
iret
and
and
ss
aaa
addr16
push
rol
or
test
mov
cmp
das
lret
add
add
or
jp
pop
inc
in
pop
test
xchg
jo
iret
das
sbb
and
adc
cmpsb
lods
std
or
fimuls
lcall
mov
in
sub
lock
xchg
imul
enter
mov
adc
rclb
cs
pop
ja
cld
dec
stc
aam
xchg
pop
cmpsl
mov
sub
cld
xor
add
decb
icebp
xor
mov
aam
dec
mov
pop
adcb
xchg
mov
mov
mov
ficoml
push
cwtl
subb
mov
push
lods
xchg
adc
scas
nop
push
mov
mov
movsb
std
fcomip
xchg
mov
lret
mov
mov
pop
cld
aad
fldl
sub
sarl
movsb
les
bnd
repnz
adc
imul
in
shl
insl
dec
rclb
sub
mov
inc
scas
xor
jae
test
cmc
stc
leave
pop
ret
cmpsl
adc
sbb
push
inc
xor
cltd
lret
jno
movsl
or
int3
lock
sub
out
cmp
icebp
call
dec
fwait
cmp
aam
mov
mov
frstor
out
inc
scas
mov
imul
jb
xchg
pop
ret
or
lret
lods
test
loopne
mov
clc
cmc
xchg
or
imul
xor
mov
add
mov
data16
xor
out
call
push
push
in
sbb
sbb
sbb
ja
push
sub
xchg
push
xlat
scas
pop
ficomps
mull
addb
cmpl
into
loope,pt
andb
mov
icebp
mov
rcrl
aas
subl
sbb
aaa
jns
mov
sti
testl
pop
fildll
dec
scas
shlb
add
mov
rclb
xchg
ficoml
in
and
sbb
mov
es
xor
cmp
pop
push
xchg
jg
inc
scas
cmp
jb
rolb
in
fnstenv
jge
aas
adc
add
in
les
mov
mov
imul
adc
cli
xor
or
adc
or
jne
lods
mov
and
lret
pushf
or
push
mov
aam
ljmp
xor
jl
mov
jne
xchg
add
xchg
jmp
out
int3
sarb
js
fstpl
jne
fmull
popa
jge
test
jl
mov
and
loope
cmc
int
shrl
lret
fdiv
mov
xor
mov
iret
rolb
or
in
shll
mov
inc
jns
ficoms
cmp
and
mov
mov
cli
into
jl
fwait
xor
mov
scas
adcl
adc
int
add
stc
cmp
leave
in
je
jge
mov
xchg
cmp
imul
psrad
pop
dec
cltd
outsb
insl
add
push
lea
cmp
push
mov
fidivrl
mov
cmc
jne
mov
outsb
adcb
jae
push
insl
das
orl
xchg
stos
int
sbb
sub
dec
scas
in
or
adc
insb
es
xlat
mov
push
adc
cmp
imul
notl
jne
sbb
sarb
mov
cmp
ss
xchg
sarl
dec
or
dec
push
adc
je
xchg
xchg
push
sahf
jbe
icebp
fldt
sbb
adc
cmp
and
rcll
int3
arpl
cld
mov
push
mov
xabort
sub
pop
sbb
int3
out
hlt
add
adc
loop
les
sti
push
dec
mov
pusha
mov
and
dec
cmp
cltd
test
sbb
cmp
stc
pusha
xchg
popf
outsl
imul
mov
stos
mov
pop
les
test
xor
frstor
xchg
dec
mov
test
ja
dec
outsl
int3
lret
loop
sarb
insb
cltd
mov
enter
lea
imul
pusha
inc
cltd
dec
sbb
movsb
fdivrl
fsubrs
jg
xlat
or
add
lods
xchg
loop
and
mov
sbbb
js
insl
cmp
ror
out
cmc
mov
xchg
cmp
xchg
lds
pop
outsb
sub
cmp
test
jae
dec
xchg
adc
add
inc
inc
roll
mov
mov
in
mov
mov
cmp
mul
je
dec
insl
mov
adc
cli
xor
gs
mov
loopne
mov
cli
mov
sbb
aas
push
mov
mov
inc
xchg
das
pop
sbb
rolb
and
jno,pt
in
ds
loope
mov
jae
jp
out
imul
aaa
ss
pop
imul
dec
mov
out
cmp
push
cmp
into
cli
mov
inc
sbbb
mov
jns
xchg
sub
xor
stos
sahf
sbb
dec
cltd
and
repnz
pop
adc
and
mov
push
nop
xchg
sbb
lcall
xchg
dec
cmp
adc
je
ret
cs
xor
xchg
mov
lcall
pop
idivl
shr
jo
je
sub
mov
cltd
into
cmp
shlb
outsl
pop
subb
push
mov
ljmp
or
mov
loop
imul
lret
push
mov
fldenv
out
inc
icebp
xor
je
mov
out
lret
sub
jb
dec
xchg
jnp
xor
cmp
xchg
lods
xchg
bound
xchg
enter
cmc
pop
repnz
push
mov
pop
xlat
pop
aam
sarb
cmc
xchg
mov
inc
pop
mov
scas
aas
xchg
js
in
add
adc
dec
rcrl
jg
push
cmpsl
cmpl
mov
lods
jg
cmp
xchg
fldl
cmp
mov
js
push
xchg
sahf
push
adc
std
lret
divb
adc
and
sbbb
adc
idiv
and
push
xchg
inc
lret
jg
mov
xor
jns
mov
adc
fiadds
sbb
cmp
in
cmp
cmc
xchg
jne
inc
add
aad
popf
fsubr
fildl
push
out
mov
das
mov
inc
mov
cmp
and
gs
iret
fcomps
cmp
jae
cmc
push
aad
sahf
icebp
xorb
sti
lds
enter
jp
imul
jb
mov
jbe
in
push
loopne
scas
or
and
hlt
push
and
sbb
imul
mov
mov
mov
and
fiadds
or
loope
dec
push
jne
sar
stc
es
sbb
push
mov
mov
popf
adc
enter
jmp
sbbb
xor
es
pop
leave
movsl
in
mov
pop
cwtl
push
les
imul
stc
outsl
in
mov
add
xchg
mov
inc
test
dec
pop
cmp
scas
mov
stos
jecxz
loop
pop
push
and
and
loop,pt
push
insl
mov
pop
jg
sub
push
xchg
push
or
mov
pop
cmc
jae
dec
push
dec
xchg
pop
xchg
sbb
xchg
and
jno
sbb
xchg
pop
int
dec
cli
imul
cmp
push
mov
lcall
add
pop
mov
mov
loopne
dec
xor
jno
add
daa
xlat
jge
std
sub
pop
movsb
loopne
mov
lods
fadds
testl
sbb
sbb
pop
pop
mov
movsb
fiaddl
inc
mov
xchg
ret
popa
adc
inc
cmpsb
sbb
jge
jb
adc
add
aas
cs
rclb
sbb
insl
dec
jmp
xchg
jo
cmpsb
ss
adcb
faddl
fdivrp
sbb
xchg
je
les
stos
out
dec
es
sub
pushf
xchg
aad
notb
arpl
leave
and
ja
mov
mov
push
decb
dec
push
mov
mov
ror
shlb
rol
lea
adc
movsb
pop
lret
rcrl
mov
dec
jno
loop
neg
or
int
xchg
push
outsl
fimull
in
fbld
ja
or
and
mov
inc
sbb
ja
cmpsb
dec
mov
dec
push
nop
ds
ljmp
lret
cld
addb
imul
icebp
jp
mov
rcrl
push
mov
dec
jge
mov
std
push
push
xor
pop
mov
xchg
dec
push
in
mov
call
pop
rorl
rcll
jns
or
xchg
mov
push
cmp
push
add
pop
ljmp
subb
push
fwait
or
popa
pop
cmp
pop
stos
xor
mov
push
in
inc
es
jge
ds
repnz
clc
pop
fcom
mov
jle
pop
jbe
sbb
xchg
push
lret
push
addl
jb
xchg
mov
xor
mov
xchg
sbb
in
adcb
pop
insl
incl
push
icebp
into
xchg
or
cltd
mov
outsb
dec
std
inc
mov
outsl
adc
sahf
repnz
lea
lods
xchg
aam
leave
out
xor
jp
push
jbe
mull
add
lret
push
test
popa
es
icebp
jmp
dec
pop
jg
push
scas
enter
lcall
mov
rorl
dec
cmpsl
in
out
push
cmc
pop
jnp
shlb
mov
aam
adc
pop
sbb
sub
lods
cmc
and
aam
fistl
pop
xchg
movsl
and
into
mov
ds
inc
fwait
mov
cmp
cmpsl
dec
jmp
imul
fwait
inc
xchg
out
nop
lea
test
lods
adc
or
insl
mov
cld
push
push
push
mov
sbb
arpl
test
in
jp
imul
arpl
aas
lret
sub
dec
fcomi
jmp
pusha
push
jno
dec
xchg
movsb
ljmp
xchg
push
orb
jmp
dec
cmp
adc
das
push
cmp
xor
or
call
popf
adc
xchg
fwait
dec
je
pop
mov
or
sub
inc
mov
frstor
int
out
bound
and
leave
sub
or
push
xor
mov
inc
mov
scas
jnp
add
mov
rclb
insl
imul
fcmovne
fcom
negb
shll
lret
dec
aam
lods
and
xor
je
lds
iret
push
out
rorb
xor
outsl
hlt
cmp
outsb
xor
popf
mov
lcall
sub
imul
notb
lods
cmpl
pusha
sti
jp
std
xchg
lret
aaa
jge
je
js
sbb
mov
out
notl
out
imul
push
inc
movsb
insl
mov
xchg
daa
repz
jecxz
dec
xor
pop
ffreep
adc
in
inc
ja
clc
out
int
mov
or
adc
stos
data16
clc
fiaddl
ljmp
mov
repz
mov
lcall
ret
mov
lahf
movsb
xchg
sahf
cmp
in
or
cmp
mov
xor
push
xchg
or
test
js
xor
int3
fmull
xchg
adc
je
fbstp
jg
pop
sub
mov
insb
fisubl
xchg
push
cmp
ds
xchg
leave
cmpsb
mov
inc
fcmovnbe
ss
hlt
bound
test
roll
push
jae
pop
push
mov
sbb
testb
das
xor
loopne
mov
sub
movsl
aad
stos
jp
mov
sarb
imul
cmp
cmp
xlat
imul
push
sub
ja
inc
mov
mov
pop
add
aaa
or
cmp
fwait
sbb
call
adc
mov
add
sbb
xor
ret
cmc
jns
lret
pusha
ja
loope
sbb
pop
test
js
fiaddl
mov
mov
push
fnstenv
sbb
repnz
hlt
sti
out
adc
leave
xor
call
fwait
inc
popa
cmpsb
cmp
incb
clc
sbb
scas
push
cltd
adc
jnp
test
in
in
in
mov
jno
gs
or
in
add
js
sbb
arpl
into
mov
xor
cwtl
push
popf
movl
cmp
sub
or
cmp
loope
sub
in
adc
sub
add
mov
das
sub
or
stc
pop
pop
xchg
mov
out
outsb
xlat
fnstcw
movsl
sub
mov
inc
lcall
clc
xor
sub
jmp
rcrl
pop
push
cmp
fs
cmp
daa
pop
in
test
cmp
push
cmp
movsb
imul
fcompl
push
push
shlb
add
sbb
adc
jmp
jl
decb
mov
jbe
shr
jge
fsubrl
push
cwtl
jae
sarb
push
test
or
dec
push
and
cmpsl
cmovg
nop
and
repnz
je
imul
movsb
popa
scas
or
mov
insl
xchg
xchg
cmp
adc
sbb
cli
cmc
cmc
cmp
fsubs
cs
push
mov
mov
jno
pop
xchg
jo
mov
ljmp
pop
sahf
lock
aad
sub
idiv
int
and
xchg
adc
xor
addl
cmpl
out
jb
das
js
in
call
sbb
pushf
repz
icebp
cltd
mov
fwait
aam
ds
sbb
movsb
or
jecxz
call
pop
jge
sub
push
and
int3
cmpsb
adc
mov
sahf
out
ret
inc
xor
and
aas
add
daa
repz
ja
push
and
stos
movsl
shlb
sub
mov
in
xchg
movsl
jl
cs
xchg
or
mov
jo
call
push
pop
pop
and
xchg
outsb
sbb
adc
into
cmp
push
fdivr
inc
mov
push
push
movsl
mov
fistl
sub
push
jmp
inc
inc
inc
pop
sub
cwtl
inc
fldcw
ss
jp
sub
jb
sub
push
push
call
leave
cld
jne
adc
xor
stos
mov
insb
pop
push
cli
movl
dec
mov
jns
inc
and
imul
cs
and
outsb
andb
cmp
push
dec
lret
lret
test
push
test
sbb
dec
lock
clc
mov
xchg
das
insl
cltd
xchg
dec
mov
mov
arpl
out
mov
jg
xchg
mov
inc
sbb
es
loop
bound
int
push
mov
icebp
xchg
insb
mov
bound
pop
mov
jne
xchg
jl
push
cmp
mul
or
inc
push
and
jge
xchg
lods
inc
dec
adc
sub
cmp
divl
add
mov
cwtl
xchg
ja
xchg
jle
push
mov
js
scas
mov
out
loope
dec
push
out
out
fstpt
in
sahf
fisttps
cmp
pop
cs
mov
cmpsb
iret
data16
fisttpl
test
sahf
repz
int
rorb
xchg
pusha
clc
out
aas
sbb
mov
ret
sub
lret
mov
adc
add
inc
and
or
jns
mov
sti
jl
jg
add
dec
push
in
sub
push
dec
mov
push
mov
arpl
xchg
loopne
out
and
mov
sub
dec
push
sti
pop
not
int3
ficompl
loop
fnstenv
jmp
push
inc
imul
xor
xor
je
sbb
mov
cmp
inc
shrl
insl
dec
push
adc
inc
clc
xchg
pop
enter
sahf
push
sbbb
xor
cmp
leave
std
pop
xor
lea
mov
mov
inc
mov
xor
test
out
fdivrl
call
xchg
adc
loop
push
jnp
shl
lahf
mov
push
pop
push
fdivrs
dec
adc
mov
mov
mov
loop
in
or
dec
dec
stos
repz
push
pop
lods
inc
cmpsl
cltd
mov
mov
inc
icebp
stos
dec
or
popf
popa
mov
sahf
mov
mull
data16
sahf
ss
pop
pop
hlt
enter
or
dec
jge
cli
and
dec
rorl
jae
jp
push
jle
mov
push
pop
push
js
hlt
jp
inc
js
popa
sti
pushl
in
xchg
add
push
hlt
in
inc
lahf
mov
add
mov
mov
and
jmp
or
imul
mov
iret
faddl
lds
xor
ret
leave
in
int
das
dec
and
dec
cmp
mov
and
inc
fidivl
mov
jns
cmp
mov
arpl
mov
fwait
sub
mov
pop
xor
enter
pop
sub
enter
inc
jl
push
sbb
fdivl
xchg
xchg
andl
push
or
bound
fs
or
test
sti
dec
xor
mov
sahf
insl
scas
xor
xchg
jge
test
shll
lea
pop
add
xor
adc
decl
sbb
xchg
mov
xchg
mov
jle
loopne
repz
fwait
aad
shlb
call
aas
lcall
mov
fidivs
in
lock
shlb
js
mov
test
jae
fsubrl
gs
add
subb
faddl
pop
jo
test
inc
and
popa
mov
mov
call
xchg
fwait
hlt
pop
adc
das
lock
cmp
sbb
inc
setnp
inc
int3
mov
notl
lock
pop
jecxz
int
cmpsb
inc
pop
sub
in
mov
lods
sub
pop
mov
mov
je
out
mov
aas
adc
or
inc
xlat
add
iret
pop
mov
pop
push
push
loop
inc
xor
lods
ss
mov
push
out
adc
cmpb
movsb
xchg
into
lahf
int
adc
daa
cmc
push
leave
shlb
movl
icebp
test
lret
in
fdivrp
sbb
sbb
sub
lea
mov
movsl
xchg
jl
lcall
lahf
sbb
fisubrl
ljmp
cmpsl
and
gs
fidivrs
outsb
adc
dec
pop
adc
lock
mov
inc
add
cltd
shrb
or
adc
mov
inc
dec
push
push
js
iret
and
popf
fwait
push
jge
sahf
loop
in
jb
xchg
jbe
nop
lds
ret
push
lcall
inc
lcall
dec
sub
pushf
mov
jmp
fmull
cmp
imul
sbb
cmp
jb
jae
data16
cmpsl
cmp
jo
lret
xchg
pop
ljmp
push
out
or
jb
cwtl
pusha
ja
jo
mov
xchg
xchg
sub
shlb
mov
js
je
sti
mov
dec
cs
pop
sub
fmuls
mov
sub
movsb
inc
movsl
pop
pop
xor
cmp
sbb
lahf
nop
adc
mov
inc
rorb
mov
mov
and
adc
nop
jnp
stos
jge
or
lock
jge
cld
movsb
adc
mov
inc
mov
jo
je
cmpsl
jnp
adc
stos
xchg
inc
iret
jecxz
fildl
outsb
clc
add
outsb
jbe
fldenv
or
mov
notl
jae
fbstp
mov
arpl
movsl
rorb
sub
int3
imul
jge
mov
lock
movsl
int3
and
jecxz
cmp
in
mov
cmp
clc
inc
inc
xor
call
pop
pushf
mov
scas
fnsave
mov
repz
lahf
jle
mov
xchg
push
hlt
sbb
ljmp
inc
shrd
and
cmp
fidivrs
jle
sub
jmp
inc
xor
xchg
sbbl
add
xor
inc
out
data16
mov
push
stos
pop
mov
je
aad
or
jno
pop
pop
xor
loopne
sarl
loop
mov
insl
pushf
cmc
ss
or
out
test
test
xor
imulb
movsb
outsb
or
mov
adc
rcll
inc
sti
push
nop
mov
das
add
aad
cwtl
jp
and
lcall
jb
jmp
sbbl
cmp
mov
push
rolb
fdivp
test
popf
scas
pop
cmc
xchg
cmpsb
sbb
lahf
stos
pop
mov
jbe
sbb
push
test
clc
mov
arpl
xchg
push
shll
stos
into
call
fs
adc
lock
mov
mov
push
fsts
lods
pop
arpl
mov
out
fbld
pop
push
xlat
sub
lahf
pop
daa
add
jmp
iret
push
lods
xor
shrb
push
mov
sub
je
ds
scas
add
ljmp
ja
std
adc
pop
insb
xor
add
cmc
sti
mov
mov
push
cmpb
rcll
fsubrs
lock
pop
mov
ljmp
cmp
sub
sub
xchg
ds
imul
repz
pop
shr
leave
sahf
mov
dec
data16
sbb
fsts
jg
pushf
sahf
das
or
cmp
outsb
loope
mov
js
mov
int3
imul
in
inc
ja
adc
sub
or
and
dec
add
mov
pushf
or
pop
imul
inc
pop
jo
lea
insl
sbb
fmul
xlat
push
lret
and
and
sbb
jg
lock
clc
or
jmp
outsb
jp
jecxz
cmpsl
pop
push
enter
pop
ss
mov
add
es
add
adc
push
test
pop
insb
jmp
hlt
cmp
mov
and
loope
jne
test
add
mov
lods
das
xlat
inc
cmp
push
clc
dec
fwait
push
jg
shlb
mov
subl
mov
add
dec
loopne
int3
add
mov
inc
mov
mov
adc
cmp
and
adc
adc
fdivrs
pop
stos
testb
nop
lcall
in
add
fmul
mov
shrl
dec
add
xorb
ficoml
and
mov
jns
xchg
inc
sbb
sub
sbb
mov
mov
push
inc
push
andb
sub
jae
sub
cmp
ss
mov
in
mov
subl
test
jge
scas
stos
in
fsubrl
sub
push
inc
andb
mov
pop
pop
in
xorl
loopne
or
int3
dec
scas
lds
jnp
stos
iret
lret
gs
aad
cli
fs
pop
mov
mov
jo
or
scas
outsb
punpckhwd
cli
clc
or
and
lods
jecxz
or
push
idivb
sbb
cmp
nop
cmp
cmp
imul
mov
scas
mov
repnz
add
imul
or
push
pushf
cmp
push
int3
jl
push
arpl
test
mov
pop
out
iret
add
lahf
shrb
in
orb
mov
cltd
adc
push
imul
arpl
dec
sbbl
sbb
test
in
aam
inc
je
popf
je
hlt
jmp
jne
adc
or
div
adc
inc
mov
in
or
add
add
movl
movl
movl
movl
jmp
movl
mov
jg
pushl
pushl
call
subl
xorl
subl
andl
cmpl
movl
movl
movl
jmp
movl
jbe
push
push
call
adcl
subl
xor
xorl
xor
add
orl
movl
xor
movl
movl
mov
shl
subl
mov
subl
push
andl
push
push
adcl
push
xorl
call
andl
mov
cmpl
movl
movl
jmp
movl
movl
je
push
call
add
mov
xor
xor
addl
sbb
sub
mov
mov
xor
xor
cmpl
not
movl
movzbl
jmp
movl
movl
jbe
push
call
andl
adcl
sbb
xor
add
sbb
mov
negl
sbbl
mov
mov
add
mov
or
mov
adc
sub
cmpl
movl
not
movl
jmp
mov
movl
jae
push
call
adc
dec
andl
adcl
and
add
mov
lea
xorl
mov
xorl
mov
orl
or
negl
and
mov
adcl
or
xor
cmp
jne
mov
mov
sub
shrd
orl
shr
sbb
mov
sub
mov
orl
shl
xor
xor
addl
or
movl
mov
movl
cmp
movl
jne
add
mov
add
mov
xor
xor
cmpl
mov
mov
notl
jmp
mov
notl
jae
push
push
pushl
pushl
call
xor
add
mov
and
and
and
add
sbb
mov
and
mov
cmpl
movl
movl
jmp
mov
jb
push
push
push
pushl
pushl
push
push
push
push
call
movzbl
add
mov
mov
add
mov
sbb
xor
or
mov
xor
and
sbbl
not
not
mov
shrd
sbbl
mov
cmpl
mov
mov
not
movzbl
jmp
mov
jge
push
pushl
push
push
push
call
add
sbbl
adc
movzbl
sbb
movzwl
or
andl
movl
mov
xor
shr
cmpl
mov
mov
movzwl
jmp
movl
movl
jae
pushl
push
pushl
push
push
push
call
or
adc
adc
mov
add
add
mov
add
mov
subl
xor
incl
or
orl
shl
sub
cmpl
mov
mov
jmp
movl
je
push
pushl
push
push
push
call
and
sbb
movzbl
sub
mov
adc
mov
mov
sub
xor
sub
jmp
out
cmp
cmpsl
adc
adc
xor
push
push
sub
subl
adc
leave
dec
pop
xchg
mov
shlb
push
stos
pop
adc
aas
addb
sti
cmp
in
jecxz
add
mov
cltd
repnz
fisttpll
into
pop
mov
fcompl
push
push
dec
insb
or
cli
repz
lret
push
xchg
iret
sub
sbb
dec
xor
je
cmpsl
aas
add
jb
xor
inc
jecxz
sbb
lahf
push
es
mov
jmp
and
rcr
out
sbb
xchg
daa
jb
imul
dec
add
stc
int3
or
xor
pop
mov
test
dec
inc
pop
dec
daa
mov
shrl
lret
ljmp
mov
popf
lahf
mov
popa
mov
jbe
mov
cmpsb
or
and
test
cmp
stos
inc
dec
adc
xchg
loopne
rcrb
jnp
cmp
ds
call
aam
mov
dec
sbb
jne
scas
hlt
sbb
inc
arpl
lods
pop
ss
push
mov
jae
pop
imul
stos
mov
sbb
imul
cli
pop
and
sub
popa
xor
mov
and
inc
hlt
xor
jae
xor
fninit
push
jb
xorl
cmpsb
inc
xor
push
out
out
push
add
inc
jle
add
test
adc
in
ficoml
in
xor
mov
adc
xor
pusha
add
popa
fsts
adc
jl
pushf
xchg
in
jnp
mov
lods
cmp
sub
lcall
scas
mov
js
rcrb
fs
inc
mov
jnp
cmp
dec
out
repz
iret
mov
xabort
adc
insl
repz
in
mov
push
jl
and
aaa
call
mov
inc
sbb
mov
inc
pop
ds
adc
push
mov
inc
ret
fucomip
call
fsubrs
xlat
movsb
int
xchg
sub
test
mov
fnop
nop
rcrb
ffreep
cmp
test
aad
pop
mov
pusha
xchg
scas
bound
jae
lret
aaa
add
inc
and
adc
out
pop
pop
popf
in
in
fdiv
mov
mov
push
imul
out
sbb
sub
fsub
sbb
lock
fs
sbb
fiadds
in
enter
add
in
js
dec
gs
les
shll
leave
repz
or
das
stos
inc
xor
mov
sarl
ret
xor
das
cwtl
dec
enter
pop
sub
imul
nop
test
sbbl
pop
dec
and
cmpsl
mov
stos
adc
sub
not
cmp
mov
imul
stos
sbbl
add
leave
mov
mov
addr16
mov
addl
ja
jge
insl
xchg
inc
pop
stc
or
adc
cmp
lods
inc
jb
ficompl
rcr
gs
inc
dec
xor
jbe
jbe
jb
mov
push
imul
icebp
or
inc
filds
push
popa
mov
xchg
adc
arpl
mov
inc
incl
test
adc
mov
adc
jl
in
dec
dec
mov
adc
lcall
testl
xor
mov
clc
pop
repz
cmp
mov
int3
xchg
jb
repnz
ds
and
lcall
mov
xor
or
pop
push
dec
mov
rcl
xor
and
imul
push
in
or
xor
jne
adc
and
xor
mov
out
pop
adc
xchg
jo
mov
cmpsl
mov
inc
hlt
sbb
cmp
mov
cltd
pop
sarb
pusha
sub
outsb
dec
xor
in
test
pop
sahf
imull
jno
lds
jno
xor
std
lcall
xor
insl
push
jl
test
and
inc
xchg
fdivl
inc
push
js
ljmp
jno
pop
mov
or
or
lret
inc
out
mov
arpl
out
repnz
mov
subb
push
js
jnp
addr16
roll
mov
inc
ret
xor
adc
sub
movb
mov
sub
and
cmp
icebp
mov
in
xchg
sbb
sbb
xchg
dec
push
or
mov
adc
dec
jg
mov
xor
mov
sbb
and
xor
xchg
mov
fyl2xp1
sub
xor
xchg
sub
mov
inc
push
inc
push
rorl
jnp
les
pop
out
add
sti
xchg
cmp
mov
sbb
imul
hlt
stc
test
mov
mulb
lea
lea
dec
add
inc
cmp
pop
mov
or
je
imul
pusha
imul
mov
out
and
lods
imul
push
xchg
mov
call
setnp
jp
xchg
pop
or
add
loop
push
rolb
xchg
xor
and
sub
shrb
fadd
lcall
push
mov
xchg
xor
stos
dec
cmp
pop
stos
cmp
loope
or
sbb
xlat
mul
xchg
xor
fwait
xor
push
mov
stos
adc
fistl
cmp
cmpsl
adc
xchg
push
mov
xchg
subb
xor
unpckhps
test
fs
iret
or
push
popf
stos
inc
popa
push
mov
or
cmp
lock
cld
cli
in
ret
jbe
push
mov
jns
sbb
xor
cmc
or
xlat
xchg
mov
mov
and
sub
xchg
out
call
push
lods
pop
int3
pop
adc
mov
shl
jl
push
mov
mov
popa
mov
dec
adc
cmp
sbb
inc
enter
out
dec
jmp
stos
ret
addl
jmp
add
pinsrw
push
xchg
in
in
or
pop
inc
cmp
mov
insb
loopne
xchg
iret
sbb
loopne
movsl
mov
mov
mov
jecxz
jne
sbb
enter
mov
or
andb
mov
push
push
mov
andb
mov
cmpsb
and
movsb
xchg
rcrb
xchg
cmp
cmpsl
push
cmp
mov
mov
outsl
or
popf
push
sti
jp
inc
cmp
mov
clc
ds
mov
xor
arpl
scas
sub
add
ret
loopne
out
cwtl
shll
fsts
xchg
in
inc
shrl
into
mov
pop
scas
test
repz
test
nop
notl
and
dec
mov
movb
mov
subl
stos
adc
sbb
in
or
pop
in
cwtl
nopl
pop
scas
or
xor
ds
xchg
sti
or
je
shll
dec
subb
pop
dec
add
mov
pushf
sbb
xchg
sbb
stos
ss
inc
push
out
dec
xor
sub
mov
addr16
movsl
push
movl
lahf
pusha
dec
repnz
push
push
stc
add
call
fwait
add
outsl
push
push
push
or
xor
dec
rcrb
imul
test
and
adc
xchg
jecxz
data16
subl
rcrl
jns
in
mov
cli
es
mov
adc
or
pop
xchg
xchg
adc
insl
cmpsl
lods
jne
cmp
mov
mov
add
es
push
lret
adc
sbb
fnstsw
jle
adc
xchg
push
dec
fsubrs
les
and
int3
out
xorb
rcl
cmpsl
xor
adc
xchg
imul
loop
in
fs
sbb
repz
dec
cmpxchg8b
dec
add
mov
mov
adc
aam
inc
sbbl
movswl
fidivrs
popa
push
idivl
ret
xor
push
mov
lahf
faddl
adc
sahf
loop
lea
lods
lret
cmp
insl
jg
cmp
lret
rcrb
icebp
inc
push
rorb
or
loop
jle
pop
icebp
pop
arpl
sbb
icebp
inc
out
frstor
loope
fadds
pop
jo
inc
add
sub
movsl
mov
stos
mov
pop
mov
addr16
or
push
test
dec
pushf
sbb
gs
sbb
push
lods
insb
addb
inc
in
mov
mov
mov
repnz
insl
mov
movsl
and
ljmp
pop
ret
add
int3
xor
inc
mov
les
aam
xchg
inc
push
or
fisttpll
jb
and
mov
notb
sub
push
mov
rcrb
outsl
adc
dec
xor
xchg
clc
sub
dec
loop
insl
pop
xlat
mov
shrb
movb
pusha
add
mov
mov
repnz
mov
xor
adc
jge
dec
fisubrl
mov
lret
es
test
pop
lods
cmp
inc
out
push
js
mov
push
subb
jae
mov
dec
xor
or
iret
sahf
nop
dec
mov
lods
mov
inc
pop
dec
filds
or
jo
mov
test
repz
fildl
xchg
lret
sub
sub
jle
ja
push
cmp
mov
cmpb
xor
mov
push
xlat
ret
pusha
fnsave
orb
cmp
lret
push
insl
fcmovnb
clc
dec
clc
lods
in
test
das
mov
sbb
movsb
mov
xor
mov
pop
mov
aas
fdivr
lcall
adc
jg
jne
cwtl
xchg
pop
or
push
fs
imul
add
jmp
mov
cs
sub
pop
stos
jg
cmp
fcmovu
inc
pop
mov
aam
adc
mov
pop
dec
sbb
aas
stos
or
and
fs
mov
fnstcw
js
fldcw
ret
ret
rcrl
arpl
cmp
lock
pop
mov
out
sahf
xchg
or
push
push
mov
xor
dec
addps
push
fisttpll
push
jl
insl
addr16
fidivrl
es
aad
inc
js
pop
jae
ja
mov
push
pop
popa
es
pop
add
sbb
mov
mov
mov
jmp
mov
sub
and
mov
jge
shll
sbb
jne
repnz
dec
data16
inc
inc
and
pop
or
adc
xlat
out
jno
int3
pop
lods
jl
lret
and
ret
jns
inc
pop
sbb
push
mov
out
cmp
or
in
cmp
sbb
jmp
movsb
mov
mov
and
xchg
fisubs
jmp
sbb
int
ds
mov
mov
jno
jge
hlt
ds
gs
fdivrs
lahf
fisubrl
lea
dec
xor
aaa
push
in
repnz
ds
add
in
stos
cli
pop
insl
mov
inc
mov
mov
cmp
test
lcall
cmp
pop
push
mov
ds
push
in
repz
mov
add
dec
xchg
sbb
adc
pop
jnp
pop
fmull
and
mov
cmpsl
popf
decb
fs
hlt
mov
adc
xor
pop
in
scas
fs
cmc
addr16
out
bound
xchg
out
sub
das
sub
icebp
push
es
pop
cs
push
or
xchg
cmpsl
nop
sub
arpl
sbb
in
jmp
insb
js
and
and
mulb
adc
nopl
cmp
cwtl
mov
cmpsb
and
in
mov
dec
adc
cs
jb
daa
stos
aaa
aas
push
aas
cmp
mulb
lea
mov
repz
ror
jns
xchg
les
mov
movsl
scas
insl
cmp
sarb
push
ja
push
mov
scas
cld
in
scas
outsl
jmp
pop
pop
jle
inc
cmc
pop
pusha
outsb
gs
mov
mov
int3
into
cmp
fs
es
lahf
adc
xor
cmp
shl
add
dec
fnstenv
jbe
add
insb
mov
add
mov
inc
arpl
pop
enter
inc
add
int3
cmp
inc
jmp
cmpps
popf
pop
lahf
mov
xchg
daa
adc
in
pop
sti
xorb
push
in
leave
stos
in
in
repnz
or
dec
test
mov
dec
inc
or
into
sbb
cwtl
jo
dec
clts
lds
and
pushf
outsb
or
xchg
add
hlt
mov
cmp
xchg
out
cli
sbb
mov
xchg
sbb
pop
lods
dec
fs
mov
jge
and
int
in
jae
lea
stos
mov
int3
ss
rorl
stos
loop
cmp
pop
dec
add
lret
xor
out
dec
jp
add
cmp
dec
adc
cld
les
xor
test
dec
dec
sarb
pusha
or
push
popa
loope
push
pop
mov
push
inc
fwait
movsl
das
jge
ret
outsb
rorl
add
cmp
add
pop
fs
pop
and
xor
sub
or
mov
inc
ficomps
inc
ds
xor
dec
ja
pop
daa
push
test
shl
dec
dec
into
das
cmp
dec
sub
pushf
ljmp
cwtl
movsl
push
xlat
iret
add
dec
call
adc
sarb
adc
xchg
int
fstpt
data16
out
mov
and
divl
cmp
insl
mov
movsb
out
xchg
repz
jmp
scas
ret
fiadds
in
cli
add
mov
mov
mov
xor
movsb
xor
ficoms
pop
rolb
jecxz
test
push
inc
or
aas
mov
pop
pop
xchg
cmp
icebp
dec
test
or
xchg
mov
xor
pop
fs
ret
xor
scas
jl
sub
or
or
mov
push
enter
push
mov
inc
paddb
test
xor
xchg
ret
out
cmp
repz
mov
pop
iret
nop
and
and
sub
push
pop
and
lods
loopne
inc
xlat
shl
hlt
cli
add
testb
xchg
sub
enter
rorb
decb
push
mov
shlb
into
xchg
inc
aaa
out
fxtract
outsb
ja
jb
addr16
stc
pusha
in
fcmove
push
add
arpl
rclb
inc
push
fucom
add
mov
cmpsl
push
lea
push
or
mov
inc
aas
ss
mov
sub
jp
inc
xor
push
and
das
lods
pop
add
dec
dec
enter
in
jnp
mov
cld
add
cmpsl
sahf
loope
and
stc
lfs
ljmp
xchg
mov
mull
pushf
div
mov
es
lods
sbb
add
test
out
loope
mov
ljmp
sbb
addl
dec
dec
aam
mov
adc
and
xlat
ljmp
or
add
adc
fcomi
and
jl
mov
lea
jp
js
repnz
fs
sub
out
out
sub
and
bound
jbe
dec
sti
push
mov
xor
xchg
jno
shll
iret
mov
orl
xor
add
lret
mov
xor
jno
jecxz
imul
adc
cmp
cmp
cmpsb
shll
cld
test
and
dec
andb
int3
insb
pop
nop
or
push
in
add
inc
aaa
adc
int
xor
adc
or
sub
and
adc
out
sahf
sub
fnstsw
mov
jae
out
xchg
push
mov
int3
xchg
add
mov
movups
pop
repnz
popa
add
lods
and
arpl
and
mov
sbb
dec
shll
sub
mov
loopne
adc
js
add
mov
push
add
push
xchg
push
sub
adc
adc
rolb
fistl
mov
ret
ficoml
stc
loopne
lcall
orb
pop
bound
pop
xor
rclb
add
shufps
out
cld
xor
outsl
adc
pop
or
mov
xlat
push
sbb
les
inc
inc
stos
xor
bound
jl
scas
jp
push
cs
ret
inc
lret
sbb
push
xor
xchg
cltd
fmul
mov
pop
and
sub
movhps
xchg
inc
iret
jne
loope
fstl
clc
push
sbb
mov
movsl
aas
push
jl
fs
add
push
mov
sarb
jnp
adc
xchg
rorl
cmpsb
or
ds
mov
cmpsl
aam
xchg
fdivrl
or
xchg
sbb
sbb
mov
pop
dec
sub
push
dec
repz
cmp
mov
mov
repnz
addr16
add
repnz
sbb
sbb
add
cli
ret
mov
sbb
add
ds
push
jo
call
je
push
add
fdivrs
lahf
icebp
mov
stc
sahf
jp
push
in
gs
push
je
xor
cmpsb
int3
inc
cwtl
add
ficompl
iret
xor
arpl
js
or
inc
faddl
pop
adc
xchg
sbbl
popa
jno
cmp
out
jge
inc
and
push
adc
jb
addr16
les
and
in
add
pop
sub
push
cltd
dec
dec
jl
dec
lods
cmc
sub
sbb
push
add
subb
or
push
dec
mov
mov
or
ja
pop
lods
sbb
mov
scas
sbb
les
lds
stc
insl
ljmp
cmp
int3
fs
add
fiaddl
clc
adc
mov
out
addb
stos
pop
mov
and
test
aaa
cltd
xor
in
ret
push
pop
push
pop
cli
add
sbb
sbb
pushf
mov
loopne
add
inc
aaa
pop
ljmp
outsl
xchg
cmpsb
push
out
jo
sbb
jmp
pop
lahf
sub
mov
jge
insb
out
cwtl
dec
mov
fiadds
add
cmp
sub
hlt
aam
jecxz
test
or
cs
pop
icebp
cmp
pop
sub
fcompl
pop
mov
ds
loop
adc
xchg
add
mov
sub
out
lods
pop
jo
outsb
and
out
adc
add
cmpl
es
mov
mov
out
roll
inc
mov
insb
and
icebp
push
xor
mov
scas
imul
aam
cmp
loopne
mov
push
adc
les
pop
fs
mov
hlt
in
enter
sub
sbb
dec
adc
mov
insb
sbb
test
es
in
and
jno
push
xor
sub
in
es
popf
stos
lcall
arpl
repz
pop
gs
pop
mov
aad
lds
cli
xlat
sbb
testl
adc
jb
jmp
xchg
dec
add
pop
hlt
aaa
xor
add
into
pop
jmp
mov
popf
jbe
pop
xchg
insb
inc
add
pop
and
xchg
sbb
mov
or
xchg
imul
ss
sub
in
pop
sbb
xchg
call
xlat
pop
out
inc
cmpsb
mov
adc
pop
loop
xchg
xchg
pushl
push
mov
push
cmp
mov
inc
mov
push
cli
in
xor
sbb
scas
dec
daa
test
cltd
int3
add
mov
nop
in
mov
ds
jnp
lods
mov
frstor
push
jo
scas
xlat
testl
jl
push
cmp
arpl
icebp
push
mov
flds
mov
xor
or
in
inc
sti
loope
imul
add
test
clc
cmc
sub
xchg
je
pop
pop
inc
mov
scas
dec
or
push
inc
mov
or
mov
and
ja
into
scas
jno
cmp
xchg
pop
jmp
dec
lods
ss
push
aas
jl
scas
inc
jnp
xchg
rcrl
or
mov
sbb
sbb
jmp
push
scas
jge
sub
sub
sbb
push
jae
or
mov
jb
call
repz
nop
push
jl
outsl
arpl
mov
jne
ja
mov
dec
fisttpll
fcoms
push
pop
outsl
jo
int
in
inc
iret
sbb
dec
mov
xchg
clc
out
testl
mov
mov
loop
into
addr16
cmp
jl
sbb
cmp
test
xchg
mov
test
adc
dec
test
mov
fldcw
pop
rcl
pop
sbb
mov
lock
push
out
stos
xorl
cs
dec
int3
mov
xchg
pop
mov
jg
in
xchg
fisubl
add
std
push
adc
or
push
mov
push
ds
lods
pushf
adc
sbb
loope
call
leave
pushf
subb
xor
rorl
enter
xchg
aas
jno
hlt
fisttpl
fists
mov
ud2
pop
pop
jmp
pop
shlb
inc
inc
pop
sbb
divb
jns
insl
cltd
std
inc
mov
add
cmp
aad
mov
aaa
cmp
adc
push
add
dec
jnp
in
or
mov
mov
cmpsl
cmp
lock
jno
repnz
sub
pop
adc
push
lretw
lcall
adc
push
lods
push
jae
lahf
sahf
mov
mov
cmc
fwait
pop
adc
jbe
cmp
cmp
addr16
mov
sbb
cmp
es
fisttpll
enter
shrb
sahf
sbb
xchg
jmp
mov
mov
mov
jno
or
jne
inc
js
int
jmp
pushf
xchg
out
sub
scas
loopne
gs
cwtl
push
cmpsb
xchg
fsubrl
jae
out
mov
or
pop
in
add
out
jmp
sbb
or
test
adc
jp
jg
and
or
add
mov
lds
dec
cmp
lea
data16
ljmp
mov
mov
cmp
jbe
pop
sahf
mov
insb
aas
out
je
cmp
lcall
sbbb
shl
fstps
pmaddwd
test
imul
add
pop
xchg
outsl
xlat
lods
pop
leave
imul
stos
fs
cmpsb
sub
pop
inc
jp
mov
push
xchg
xchg
lea
pop
daa
lea
into
push
in
mov
jns
sbb
std
xchg
sub
lcall
lds
inc
xchg
mov
inc
sub
adc
push
fisttpll
fstp
movsl
stos
jg
mov
popf
or
inc
dec
les
sub
push
rcrl
or
pop
adc
pop
sahf
ficoms
leave
adc
dec
inc
xchg
dec
outsb
mov
aad
mov
jge
fisubrs
call
jb
xor
xor
pusha
orb
sbb
xlat
insl
fistpll
ja
les
sbb
movb
cwtl
fists
lahf
daa
jg
lea
filds
ds
ljmp
add
push
fdivrl
mov
in
addb
or
xchg
sti
stc
test
or
jae
ss
bound
repnz
inc
movsb
push
push
iret
jb
jge
imul
push
jg
outsl
sbb
sub
sbbb
cmovbe
add
js
imul
gs
std
xchg
mov
repz
push
jp
cli
and
sbb
outsb
scas
lock
sar
sti
dec
xor
mov
xor
mov
mov
jmp
inc
sub
xchg
in
in
mov
sahf
enter
decl
dec
jmp
std
icebp
xor
sub
jo
mov
mov
mov
cmpsb
sub
xor
loop
or
and
lahf
cmp
cmp
dec
mov
fs
fcmovbe
dec
loopne
pusha
leave
xlat
jecxz
push
xlat
sub
in
mov
clc
xor
outsb
pop
cmpsl
popf
iret
or
bound
sbbb
mov
rorb
aas
mov
test
in
and
or
xlat
mov
pop
fwait
loop
mov
sahf
repnz
mov
xorl
push
add
es
mov
subl
int
insb
jno
and
pop
mov
pop
adc
ret
pop
adc
shrb
and
mov
push
les
aad
sub
add
mov
in
mov
test
jle
and
lahf
mov
scas
out
xchg
aam
and
pop
shrl
or
jecxz
stos
jle
jle
and
lcall
loop
loopne
mov
das
rcr
ret
mov
xchg
cmp
gs
dec
inc
pop
cmp
shl
cmp
js
dec
mov
imulb
fldenv
pinsrw
mov
imul
cmc
lahf
lds
push
push
sbb
adc
sbb
pushf
sub
int
gs
xor
and
mov
xchg
repnz
ret
and
clc
cmpsb
pop
mov
sbb
addl
jo
test
fisubl
pop
mov
cmpsb
sub
cmpb
rcll
data16
lret
arpl
repz
ret
addb
shr
push
flds
inc
lock
aad
jno
adc
enter
scas
push
inc
std
and
rcl
mov
jge
loopne
ficomps
sbb
pop
and
fcmovne
pop
mov
test
mov
mov
leave
mov
inc
lcall
lods
lock
rcll
and
or
inc
out
aad
out
pushf
pop
leave
sahf
sbb
mov
add
fs
out
lret
rcrb
test
clc
sbb
jecxz
xor
arpl
cltd
orb
dec
dec
fstpt
inc
jns
push
rcll
shrl
push
jge
jmp
inc
inc
jp
inc
or
jbe
fnstcw
push
stc
adc
pop
sub
ss
rorl
adc
dec
cmp
mov
lret
ljmp
imul
and
and
bound
jns
bound
ljmp
ss
ds
xchg
mov
out
ficompl
or
sub
jae
adc
xor
add
push
shl
sbb
rclb
dec
das
pushf
gs
or
or
test
orb
out
pop
mov
in
jbe
inc
ss
jmp
xchg
mov
stos
pushf
pop
lret
pusha
fimuls
jbe
pop
and
sub
push
in
push
add
pop
nop
dec
std
xorb
test
shl
push
mov
jmp
in
mov
aad
push
adc
mov
mov
jecxz
sbb
push
jl
cmp
in
in
mov
jnp
dec
pop
mov
mov
daa
xchg
cltd
or
pushf
inc
push
mov
dec
push
pop
das
call
pop
mov
out
adcb
push
push
pushf
lret
adc
xorb
mov
xchg
cld
and
xchg
cs
lock
push
enter
xor
daa
loopne
add
hlt
adc
imul
pop
stos
outsl
sar
jo
inc
lahf
jecxz
jno
mov
orl
movsb
pop
sti
mov
rcll
mov
ret
xchg
jb
dec
test
test
jle
inc
ret
cltd
push
jbe
insb
xchg
or
cmp
ret
push
fucomi
mov
testb
iret
pop
popf
lock
dec
mov
jo
mov
aad
nop
lock
insl
xlat
repz
and
cmpsl
push
stos
add
lds
cmpsb
and
inc
sbb
adc
scas
and
add
mov
lret
and
or
sahf
aad
sub
pop
mov
jbe
testl
test
add
test
jbe
mov
xor
adcl
push
cmp
mov
js
sub
andl
jbe
dec
lds
cmp
movsl
jmp
jp
ret
fs
enter
iret
mov
jp
mov
inc
or
fsubl
out
jb
sbb
push
inc
or
push
sbb
push
rolb
push
sti
mov
leave
mov
nop
cs
lock
insl
push
cli
pop
xchg
mov
mov
mov
cmpl
not
mov
jmp
mov
jne
pushl
push
pushl
pushl
pushl
call
sbb
xorl
add
addl
movzbl
or
mov
sub
adc
mov
addl
mov
cmpl
mov
movl
movl
jmp
movl
not
jbe
push
push
push
push
push
call
movzbl
sbb
adcl
mov
and
xor
xor
xor
mov
and
add
cmpl
mov
mov
movl
not
jmp
movl
jbe
pushl
push
pushl
call
xor
add
sub
inc
adc
orl
adcl
mov
mov
mov
add
shrd
incl
shr
adc
mov
cmpl
movl
mov
mov
jmp
movl
movl
jle
pushl
pushl
push
push
call
xor
and
xor
movzwl
sbb
subl
xor
or
mov
sbb
mov
and
mov
sub
xor
sbb
shl
sub
xor
orl
or
mov
cmpl
mov
mov
mov
mov
jmp
mov
jb
pushl
call
subl
movzbl
and
mov
add
orl
sbb
sbb
sub
mov
shrd
addl
shr
mov
mov
adc
mov
addl
xor
xor
adcl
or
shl
lea
mov
subl
mov
shrd
shr
xor
mov
sbb
mov
inc
mov
movzwl
sbb
xor
mov
and
mov
xor
andl
or
adcl
shl
cmpl
mov
mov
mov
movl
jmp
movl
jbe
push
push
push
pushl
call
sbb
addl
mov
sbb
mov
xor
sbbl
neg
imul
xor
jmp
fistpl
sbb
jmp
push
test
pop
icebp
mov
dec
push
push
sub
push
push
add
jle
stos
cli
lahf
fdivrs
shl
in
in
mov
push
rcrl
mov
daa
xchg
xor
dec
in
sbbb
mov
clc
mov
fdivrs
dec
jae
push
inc
inc
cmp
cmpsb
mov
add
test
mov
fcompl
cmp
stos
or
dec
or
lahf
mov
add
fldt
add
xchg
mov
int
pop
sub
pop
cmp
mov
leave
negl
test
cmp
rorb
scas
add
xor
mov
push
int3
jnp
sbb
adc
push
insb
lahf
sbb
inc
push
fs
aaa
jl
pop
jbe
jg
jge
pusha
and
dec
lods
cmp
jmp
lret
sub
push
rcll
xchg
aad
movb
ficomps
inc
push
outsl
push
test
scas
adc
repz
fldenv
mov
std
enter
jmp
fstpt
sbb
inc
movsl
mov
loop
cld
sti
mov
cmp
mov
or
test
fstp
aam
and
clc
mov
cwtl
sub
pop
and
mov
push
fildll
pop
adc
ss
dec
inc
andb
add
mov
dec
loopne
loope
ret
jae
jne
mov
pop
sbb
aaa
sbb
cwtl
cltd
add
ljmp
push
sarl
mov
popf
mov
aaa
lahf
adc
xor
and
out
in
xchg
lods
aaa
das
xchg
das
push
push
or
lods
js
or
mov
out
dec
outsl
imul
fildl
mov
in
sub
cmp
cmp
or
loopne
jno
loopne
je
push
and
ss
jecxz
inc
sarl
lret
popa
xchg
mov
xlat
paddd
lret
and
adc
das
cwtl
pop
enter
push
in
sub
fdiv
fdivl
or
jnp
in
out
sbb
imul
inc
adc
cmp
xor
movsl
imul
mov
aad
pop
pop
int3
mov
negl
cmp
push
or
adc
jns,pn
pop
pushf
test
negl
sub
dec
insb
mov
sbb
ret
pop
jnp
js
and
or
jae
popa
repnz
shlb
das
sub
mov
call
push
out
or
xchg
lds
lods
outsl
rcrb
scas
jno
push
lds
addr16
jle
out
gs
jl
fmul
cmpb
xchg
out
adc
int3
popa
jmp
and
xchg
ja
flds
mov
mov
add
cwtl
into
pop
andl
inc
cmp
jb
in
mov
popa
insl
mov
sub
and
jnp
loop
sub
stos
mov
addr16
cmp
gs
push
pushf
fisubl
inc
lcall
push
pop
shr
lahf
sub
insb
dec
lea
mov
cmpl
inc
jns
scas
push
lcall
cmpsl
jbe
mov
out
adc
sbb
cmp
mov
in
je
rcrl
pusha
inc
aam
cwtl
inc
xor
dec
mov
hlt
xor
pop
or
aad
cltd
mov
loope
add
pop
imul
or
mov
xchg
rol
jns
aaa
aaa
clc
test
sbb
push
add
cld
lahf
mov
sub
leave
repz
xchg
or
dec
mov
lea
ja
mov
cmp
adc
fwait
cmp
add
sti
pop
or
xor
out
cwtl
jle
sub
daa
mov
jnp
pop
xchg
dec
pop
mov
loop
rcr
adc
jle
sub
ror
mov
adc
pop
repz
adc
push
pusha
andl
rclb
dec
mov
fadds
jb
movsb
in
mov
testb
lods
pop
adc
push
lock
inc
std
jl
in
xchg
setne
pop
jecxz
scas
add
sbb
orl
push
leave
jp
push
dec
or
pop
int3
leave
mov
add
fucomip
pop
mov
pop
out
add
enter
aad
push
lret
addr16
test
dec
jecxz
xchg
sbb
mov
xor
xor
fisttps
lock
int
xor
in
scas
xchg
mov
cld
cmpsl
sbb
leave
cltd
cmpl
mov
inc
sahf
or
icebp
int3
xchg
std
mov
mov
pop
test
nop
sbb
rclb
mov
fcom
or
sbb
fsubrs
jnp
add
cmpsb
aam
pop
sub
lret
int
xchg
out
or
cmp
add
test
movsl
dec
ret
sti
mov
mov
bound
nop
pop
push
xor
das
in
dec
adc
arpl
icebp
add
mov
movsb
mov
in
adc
and
aad
sbb
arpl
popa
inc
cmpsb
sbb
mov
push
jl
iret
lret
adc
xor
adc
adc
mov
enter
imul
aas
jno
push
cmpsl
ss
std
inc
dec
in
mov
shl
addr16
mov
dec
add
test
jae
lock
fwait
shll
shrl
cmp
cld
mov
neg
xor
aas
iret
loope
sahf
mov
out
add
add
lods
in
cmc
sbbl
xchg
or
and
ror
jne
nop
inc
loopne
cs
test
mov
cltd
idivl
negl
xor
test
out
sub
mov
ficoms
lret
push
or
cmp
sub
dec
mov
cmp
out
adc
sub
adc
mov
add
mov
lahf
fistpl
scas
insl
into
inc
in
lret
fld
js
adc
jle
or
mov
mov
pop
or
add
in
repnz
lea
push
add
mov
lahf
mov
sub
idivl
cmpb
jecxz
and
adc
call
mov
cmpsb
mul
jg
test
add
push
xchg
inc
lret
sbb
ret
mov
sbb
out
lcall
add
call
jno
or
subl
sub
add
shlb
nop
out
out
sub
loopne
test
lea
pop
sbbb
adc
stos
sub
add
andl
xchg
adc
test
sti
push
and
xor
sub
std
inc
xchg
arpl
mov
pop
pop
repnz
mov
push
cmp
mov
adc
xchg
jecxz
jb
ja
dec
xchg
int3
push
clc
pop
nop
xor
mov
aam
dec
mov
unpcklps
mov
sub
in
outsb
inc
jl
jle
lcall
pop
dec
mov
inc
fs
ljmp
or
outsl
and
xchg
jmp
push
sti
mov
mov
cs
ficompl
lcall
pushl
scas
fsubrp
int3
movsl
cs
bound
pop
scas
pop
dec
mov
imul
or
imul
inc
cli
and
out
ret
shlb
lahf
cmp
and
add
cmpsb
xor
pop
add
xchg
jp
jge
test
inc
nop
lcall
jb
fdivrs
aad
fwait
cmc
inc
cmpsl
insl
negb
pop
shlb
xlat
mov
stc
clc
in
push
in
out
scas
dec
adc
sub
xor
xchg
sub
and
pop
xor
jne
ja
cmc
pop
jge
das
mov
mov
inc
ja
pop
push
jno
push
cmp
insl
loopne
lea
cwtl
jg
add
xchg
je
lods
xlat
add
xor
insl
fsubrl
es
jo
in
lea
out
mov
adc
push
add
pop
sti
xchg
and
inc
int
stos
call
xchg
adcb
fucom
cmp
movsb
aad
mov
mov
sahf
mov
idiv
push
cwtl
lods
out
ljmp
push
lds
scas
cmp
add
cmp
mov
inc
sub
and
aad
lret
and
pushf
push
adc
test
cmp
mov
sub
iret
cmp
lret
jo
jecxz
daa
or
in
xor
test
inc
jo
sub
cmc
mov
fldcw
dec
dec
xchg
addr16
rcll
int
adc
loopne,pt
jno
lods
repnz
jno
cmc
movl
mov
or
int
dec
ret
jp
cli
das
pop
jmp
push
cmp
cmp
fdivrl
adc
imul
xchg
inc
jl
or
jp
or
push
push
push
sub
stc
mov
pop
es
inc
nop
jle
lds
repnz
inc
outsl
ljmp
inc
imul
je
push
scas
jle
stc
lock
clc
xor
mov
cld
add
cmc
divb
jno
ret
stc
in
adc
lds
mov
cmpsb
xor
jae
sbb
cs
dec
jae
es
outsl
in
pop
push
loopne
push
lea
xchg
cli
jmp
mov
int
cltd
xor
cmp
clc
loop
cmp
mov
jns
push
cmp
aas
scas
pop
ret
mov
call
fsubl
out
les
mov
mov
jmp
sub
mov
dec
iret
mov
icebp
cli
mov
and
cli
lea
loope
gs
sub
mov
pop
xchg
mov
clc
rcl
leave
movsl
ds
mov
inc
fnstenv
pop
frstor
pop
test
mov
inc
lret
adc
test
lret
mov
and
sti
shlb
xchg
aam
loop
sbb
mov
data16
mov
mov
aaa
push
mov
int3
xchg
mov
mov
inc
dec
inc
adc
xchg
mov
aad
mov
out
inc
sub
lret
xchg
shll
push
rorl
dec
les
xchg
and
shrb
pop
xor
and
inc
xor
sub
sub
inc
add
push
cltd
sbbb
cmp
lds
xor
fsts
jb
fldlg2
push
mov
cltd
les
call
jg
add
mov
xchg
mov
add
lea
jp
sub
popa
adc
daa
jmp
jb
addr16
sbbb
aad
imul
nop
setns
and
pop
cmp
sar
fistl
xchg
add
pop
sbb
cld
lods
cs
lock
movsl
adc
jl
jge
sub
sarl
loop
add
cmpsb
lods
je
and
inc
sarb
cmpsb
add
cmp
into
cld
out
mov
movsl
sub
lods
inc
mov
fsubs
mov
lret
dec
inc
or
xchg
xor
dec
mov
test
inc
mov
aas
pop
push
inc
nop
popf
push
adc
sub
pop
xchg
mov
adc
clc
out
int
xchg
push
fsubs
inc
in
scas
test
mov
cmp
leave
or
dec
dec
or
imul
cmp
mov
cmpsl
xchg
cli
xor
mov
jno
add
sbbb
mov
adc
push
imul
push
sti
and
lret
fcom
lahf
lods
mov
push
jbe
mov
and
push
mov
aas
out
aad
dec
jns
push
nop
imul
movsb
ss
ds
icebp
adc
ljmp
xor
scas
xchg
pop
enter
adc
xor
xlat
dec
js
sti
loopne
fldt
int3
pop
into
aas
lahf
adc
sbb
push
sub
sbb
mov
adc
jmp
cmp
mov
test
pop
sub
movsb
lcall
inc
xchg
inc
cmpsl
cli
adc
push
push
imul
inc
stc
stc
out
mov
jp
adcl
pop
pushl
inc
lcall
mov
mov
adc
js
in
repnz
out
fisubs
xchg
jnp
cltd
fistpll
lods
push
cld
or
inc
aas
popa
addr16
cmp
mov
out
inc
in
shll
mov
adc
push
aas
mov
xor
dec
ljmp
jbe
fstps
inc
cli
in
mov
lahf
das
jle
out
xor
sbb
jmp
or
notl
mov
push
cmp
int3
push
sub
dec
shlb
xchg
je
lahf
imul
cmp
out
mov
mov
adc
and
stos
mov
bound
jmp
and
mov
mov
fwait
scas
into
lods
fstps
call
cltd
aam
or
stos
jo
js
jg
enter
mov
hlt
aam
or
or
sub
jno
int3
xor
jp
aam
mov
mov
ror
xchg
popa
js
adc
js
inc
ljmp
jb
subb
sub
adc
mov
mov
ss
mov
push
xchg
out
out
adc
xor
fsubrl
test
jl
ret
ds
push
jnp
iret
xor
xchg
jmp
cli
test
xchg
pop
stos
js
into
test
arpl
mov
push
cli
pop
jae
jmp
cmpsb
mov
sub
dec
fwait
mov
push
ret
adc
stos
sbb
xor
and
shlb
inc
dec
cmc
push
sub
insl
pop
popf
xchg
shl
lahf
and
sub
dec
cmp
test
repnz
mov
js
and
es
pop
adcl
sbb
adc
fsubrl
loop
shrb
addr16
add
fistpl
cmp
xchg
test
xchg
and
add
mov
mov
stc
out
push
sub
jne
cmp
add
push
xor
push
adc
lods
xor
push
fs
out
outsl
pop
jns
dec
and
or
xchg
sub
jae
sbb
mov
dec
ret
or
bound
push
cld
sub
std
jnp
or
pop
shl
out
mov
or
pop
je
sbb
xlat
jge
jp
mov
hlt
aas
movsl
xchg
or
movsb
pusha
xor
mov
sub
arpl
jge
sbb
popf
das
lods
imul
clc
adc
and
mov
push
mov
mov
jmp
insb
inc
adc
aad
fisttps
cmpb
lods
dec
movsl
sbb
jmp
mov
jmp
cli
jno
sahf
lods
add
jp
mov
adc
dec
fcoms
jne
push
imul
mov
insl
repnz
and
scas
mov
fwait
stos
imul
in
lret
out
fwait
sbb
movsl
sbb
daa
pop
xchg
dec
scas
inc
mov
dec
mov
leave
xlat
les
inc
scas
mov
sbb
xchg
pop
or
pop
cltd
push
loopne
cli
int3
pop
mov
into
mov
fwait
cmp
sti
les
repnz
xchg
out
mov
scas
mov
pop
incb
repz
sbb
xor
dec
and
clc
or
in
addb
test
out
mov
hlt
push
fldcw
lods
pop
clc
xchg
pop
in
shlb
and
imul
ljmp
lahf
push
stc
ja
adc
cmp
pop
ffreep
xchg
inc
pusha
fcoms
mov
add
sarl
and
shrl
sahf
popa
stos
cwtl
xorl
push
loop
mov
imul
sbb
arpl
sub
subb
fs
jg
sbb
add
ret
mov
sbb
sbb
clc
inc
xchg
add
push
je
jg
mov
cs
out
dec
leave
jge
or
loopne
mov
lret
pop
sub
popf
sarl
inc
gs
cmp
lock
mov
cmc
mov
pop
jnp
mov
fdivr
iret
cmp
jmp
mov
pop
xchg
push
fsts
mov
ud2
jno
sbb
push
outsl
dec
ss
cmp
sbb
imull
das
out
mov
add
insb
adc
ja
and
lds
mov
arpl
cmp
test
rcrb
in
or
bnd
mov
subb
jmp
pop
pop
sub
inc
xor
loopne
repz
test
daa
sub
shrb
fdivrs
push
cltd
cmp
jmp
sbb
add
xchg
inc
testb
jbe
jb
sbb
jmp
and
inc
orb
hlt
mov
pop
mov
bound
jns
and
daa
jmp
test
cwtl
mov
shrb
cmp
dec
test
mov
sub
inc
push
in
mov
stos
out
arpl
inc
jno
jl
mov
jp
sub
pop
cmp
fs
testb
into
mov
out
cld
or
adc
lcall
cmpsl
mov
lret
add
test
outsl
orl
rep
xlat
outsl
int3
ljmp
dec
adc
mov
es
imul
pop
jo
lods
lods
dec
lret
in
ja
mov
loop
jecxz
or
test
xor
in
lock
cmpsb
mov
addr16
and
jnp
repnz
cwtl
adc
inc
in
lret
lret
jo
inc
push
xchg
aas
cmc
mov
xor
fs
or
push
pop
jbe
je
test
je
into
mov
jmp
sub
xor
pop
test
callw
pop
ja
xor
dec
jne
cltd
jg
sub
lcall
lret
mov
filds
add
and
out
iret
xor
push
adc
jecxz
ja
daa
in
adc
jmp
push
push
stc
outsb
sub
dec
ds
cmp
and
pop
arpl
fwait
sarb
aas
pop
xor
test
pop
xchg
jo
lods
lret
xor
dec
inc
jge
push
or
mov
adcb
adc
xlat
das
fstps
test
rcrb
push
adcb
call
add
sti
sahf
out
mov
xorl
xchg
pushf
clc
orl
push
xchg
mov
mov
insb
cmpsl
fs
xchg
adc
cmp
cwtl
shlb
mov
mov
cs
pop
lret
roll
rolb
mov
push
sub
pop
outsb
push
arpl
into
mov
sbb
add
lcall
mov
add
inc
add
fsubrs
subb
subb
mov
dec
pop
arpl
cmpsl
das
mov
sti
pop
cmp
push
or
adc
mov
addl
mov
jg,pn
or
cld
lds
pop
cmp
pusha
rsqrtps
mov
popa
cmc
insb
movsb
jnp
imul
scas
cwtl
add
dec
mov
repnz
jo
cmp
adc
dec
jno
jne
je
or
pushl
add
xchg
pop
notb
sub
xor
mov
xchg
jns
mov
and
xchg
xchg
into
xchg
mov
push
icebp
xchg
ds
cltd
add
fsubs
movsl
sub
test
cmp
out
add
jg
inc
ror
sub
movsl
fs
cmp
push
inc
stc
in
push
cmp
mov
fldenv
mov
outsl
mov
pop
gs
sbbb
xlat
call
leave
push
fsub
movsl
jg
jg
dec
jecxz
pusha
das
mov
outsb
add
jg
out
mov
jp
add
sub
inc
ja
adc
les
pushl
imul
pop
mov
popf
fcoml
inc
sub
push
test
mov
sahf
jb
xor
loopne
adc
add
jg
push
clc
cmp
cmpl
dec
mov
rcrl
mov
mov
pop
addb
jne
push
inc
mov
adc
insb
push
ds
sbb
push
xchg
mov
aad
lret
rclb
cmp
stc
test
data16
das
inc
push
stos
jp
ss
enter
xor
inc
loope
hlt
das
adc
sti
sbb
mov
or
xor
sub
xchg
xor
mov
enter
jbe
cmpsl
imulb
scas
push
add
mov
jg
loopne
call
movsl
mov
jle
add
dec
inc
cli
fsubl
jp
test
ret
adc
jbe
xchg
je
jnp
fistps
sbb
push
icebp
das
hlt
jecxz
pop
iret
fnstenv
add
jmp
ds
mov
insl
stc
leave
jge
fmulp
rclb
fwait
jo
les
mov
fidivs
inc
sbb
xlat
test
leave
xor
mov
repnz
shll
mov
ljmp
cmp
sbb
fildl
cmp
and
push
into
es
int
push
testl
sub
scas
iret
andnps
iret
lds
or
rcrb
mov
shrl
lahf
lods
std
cmp
movsb
cmpsb
xchg
or
popa
lods
into
pushf
out
jmp
dec
fmulp
cld
rcr
dec
push
xor
int
loop
aad
push
inc
aad
ljmp
dec
insl
cmp
test
stc
cwtl
jl
inc
mov
idivl
inc
xor
mov
or
cmp
scas
xchg
and
push
jne
ljmp
push
and
aad
fistpll
mov
xchg
aas
mov
fmuls
push
and
and
loope
stc
sbb
mov
orl
mov
mov
sbb
fdivrp
cmp
and
mov
and
lret
jno
or
xor
xchg
and
test
fwait
iret
or
xchg
and
lds
lods
ljmp
xchg
jbe
call
scas
mov
xor
xchg
push
outsb
shll
stc
stos
stos
and
adc
dec
cmp
sub
or
sbbb
pushf
inc
push
sbb
loopne
mov
jns
out
push
mov
xor
call
cmpb
mov
sbb
sbb
pusha
mov
stc
jno
loope
cli
cwtl
je
in
rcrb
fidivs
adc
xchg
xchg
sub
or
sti
jne
sub
lea
cld
in
sbb
mov
scas
push
add
std
inc
stos
and
popa
mov
or
pop
aad
sbb
xchg
popa
in
adc
lds
push
mov
jno
insl
xlat
ret
xlat
repz
fdiv
mov
loop
inc
cmp
adc
cmp
sbb
imul
mov
push
push
dec
in
push
push
cli
xchg
imul
mov
ret
mov
fisubrs
imul
lcall
jbe
xchg
lods
int
daa
inc
negb
cmpsb
cmp
les
ret
push
jne
or
add
jp
test
pop
adc
sbb
daa
xchg
lret
ja
cmp
inc
or
dec
sub
fisttpl
aaa
sub
addl
out
mov
leave
dec
xchg
nop
or
mov
cmp
sub
fisttpl
insl
js
stos
call
cltd
lods
inc
jns
sub
jnp
jg
adc
xchg
push
clc
sub
mov
lahf
sbb
scas
ret
sbb
pop
loop
dec
jg
sbb
mov
dec
lcall
into
js
fadd
ds
addr16
sub
fimuls
es
fbld
sub
fistpll
push
push
xchg
nop
xor
mov
mov
push
sbb
movl
hlt
into
in
loop
add
and
out
sbb
test
pop
loopne
sbb
addb
jae
ljmp
add
cmpb
rcrb
std
pop
cmpb
xchg
jne
cwtl
inc
cmp
cli
lods
mov
imul
push
push
mov
sub
popa
mov
in
ffreep
mov
mov
iret
incb
add
xlat
pop
cmp
cmp
inc
les
dec
xchg
daa
push
pop
lret
xchg
pop
adc
rorl
pop
insb
or
add
mov
sbb
xchg
mov
sub
loop
jle
inc
lcall
or
xchg
inc
push
or
cmp
test
xchg
addr16
mov
fildl
sti
hlt
push
loopne
lahf
mov
and
mov
das
mov
jb
pop
mov
add
stc
cmpsb
lock
shrb
add
decb
and
fcmovnb
dec
ret
arpl
sti
push
sbb
or
inc
mov
pop
push
bound
add
adc
xchg
xor
lock
add
popf
cld
push
movsb
push
and
mov
push
lock
es
sbb
add
mov
pop
in
aad
lahf
pop
andb
iret
pop
das
sbb
mov
pop
loope
test
imul
add
jle
ret
sub
and
call
jg
push
add
dec
sbb
out
or
lds
jbe
aas
outsb
dec
sub
rorb
bound
jnp
push
adc
mov
mov
sbb
pop
adc
push
and
sbb
cwtl
or
inc
pop
add
nop
stos
ljmp
in
bound
xchg
popf
push
push
or
adc
popf
jo
mov
sub
xor
mov
mov
sbb
ss
xchg
xor
add
pop
sbb
test
mov
pop
mov
lds
arpl
dec
fwait
rolb
mov
pop
adc
stos
stos
sbb
or
mov
adcb
leave
mov
movsw
or
icebp
out
inc
jb
jg
adc
jg
mov
jns
xor
mov
mov
addr16
stos
ret
mov
inc
mov
mov
in
fistl
aam
mov
mov
test
ss
xor
inc
es
test
mov
pushf
dec
cli
push
cs
dec
jns
lock
or
jbe
insl
push
xchg
mov
addr16
cmp
inc
es
mov
outsb
fistps
aas
or
enter
out
sub
or
sub
insb
sub
adc
mov
cwtl
mov
out
es
add
das
lods
push
mov
jl
mov
pop
fndisi(8087
call
test
sbb
cmp
sub
dec
jb
jmp
out
cmc
icebp
cwtl
and
mov
movsb
inc
mov
mulps
xchg
in
insb
push
rcr
mov
mov
or
jmp
xor
mov
xchg
hlt
insb
loope
inc
sbb
mov
mov
jbe
and
lods
lods
imul
push
fstpl
adc
repnz
addr16
gs
gs
loop
add
sbb
and
sub
es
adc
cmp
lea
and
inc
cmp
lahf
inc
lahf
adc
loope
pop
pop
jns
cmp
pop
cltd
adc
jl
aam
fiadds
inc
sub
subb
push
lcall
add
mov
mov
dec
jb
paddusb
ljmp
test
rcrb
cs
incb
mov
out
cmp
cmp
mov
push
imul
and
aam
shr
daa
std
jb
lock
lds
sub
pop
jmp
add
mov
or
pop
popf
sahf
mov
kxnorw
mov
adc
mov
xchg
dec
sub
dec
push
adc
or
ficompl
btr
jo
cmp
hlt
ret
add
ljmp
negl
pop
jge
das
push
mov
repnz
in
sti
lods
dec
loop
jbe
addl
cmpsb
sbb
ror
ficomps
pop
ret
stos
pop
cmp
mov
sub
jp
dec
or
incl
cmp
push
or
ljmp
loop
rclb
addl
pop
xor
stc
add
dec
sbb
shl
bnd
mov
addr16
aaa
loope
movsb
out
xorl
cmpsb
and
inc
mov
jecxz
rcl
in
lahf
push
dec
packsswb
pop
add
adc
push
xchg
fistps
jno
mov
jno
pop
add
inc
pop
mov
adc
or
mov
adcl
shrd
addl
mov
mov
xor
xorl
shr
sbb
mov
mov
xor
or
addl
shl
sub
mov
mov
cmp
mov
movl
jg
sub
mov
and
mov
subl
shrd
addl
mov
movzwl
xor
mov
mov
xor
xorl
shl
xor
or
xorl
shr
xor
mov
mov
mov
addl
mov
xorl
shrd
shr
cmpl
mov
mov
jmp
mov
jge
push
push
call
mov
adc
movl
and
and
mov
mov
mov
sub
imul
mov
mov
xor
xor
or
shl
imul
sub
jmp
mov
mov
shrd
mov
mov
xor
shl
xor
or
shr
mov
mov
mov
mov
shrd
shr
mov
mov
mov
xor
xor
or
shl
add
add
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
movl
mov
mov
movl
mov
movl
mov
movl
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
lea
mov
mov
mov
shrd
shr
mov
mov
shl
mov
xor
xor
or
mov
mov
xor
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
lea
mov
mov
mov
shrd
shr
mov
mov
shl
mov
xor
xor
or
mov
mov
or
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
lea
mov
mov
mov
shrd
shr
mov
mov
xor
shl
mov
xor
or
mov
mov
add
jmp
lock
cmp
mov
jae
test
lret
pop
or
push
push
jns
pop
fisttpll
sahf
pusha
lds
dec
test
sub
aas
xor
stos
inc
cmp
arpl
scas
shrl
aam
dec
xchg
or
jge
in
int
xor
add
push
gs
ficoml
dec
push
ret
sub
pop
into
inc
fidivrl
stos
mov
lock
int
pop
pop
xor
pushf
outsl
pop
out
das
in
jne
lcall
int3
sub
mov
mov
lods
mov
stos
es
mov
xchg
stos
ljmp
fsubrs
and
lret
mov
xchg
pushf
je
es
mov
inc
push
push
scas
push
xchg
lret
pop
push
popa
scas
lret
xchg
mov
leave
ss
insb
xchg
and
xor
mov
in
xchg
xchg
mov
push
and
sbb
in
cli
dec
dec
arpl
mov
bound
pop
add
xchg
lock
test
inc
pop
dec
push
xor
in
inc
add
movsl
push
dec
data16
or
jp
or
aas
stos
add
mov
xchg
gs
cmp
movsl
clc
mov
or
dec
loope
aam
pop
sub
dec
popa
out
mov
fwait
push
call
jmp
xchg
inc
shr
lea
enter
jl
and
iret
es
scas
icebp
loopne
mov
icebp
loop
dec
in
rcr
imul
and
gs
imul
xchg
lods
rcrl
lds
lock
mov
iret
pop
sbbl
clc
in
test
cmpsb
pushw
stc
or
mov
dec
inc
imul
xchg
sub
dec
mov
mov
jnp
or
les
inc
insb
cs
inc
dec
push
fisttpl
push
pop
pusha
xchg
cmp
out
gs
jb
aas
push
es
xor
mov
pop
mov
adc
les
insb
lret
pop
fisubrs
push
adc
test
jp
push
lret
inc
fsub
jle
std
gs
mov
pop
xchg
cmp
loopne
push
shll
cmp
mov
push
pop
adc
data16
jmp
decl
scas
mov
ror
lret
xchg
sub
push
push
fxch
stc
fsubr
aad
sbb
in
mov
aad
lret
cmp
out
imul
sarl
hlt
or
in
sbb
stos
xchg
mov
or
cmp
sub
cmp
test
outsb
lret
xchg
mov
mov
pop
push
into
and
mov
xchg
ljmp
mov
or
in
test
sbb
es
dec
jle
nop
in
aad
mov
xchg
insb
rolb
jg
dec
cmpsb
into
inc
das
inc
or
mov
pop
repnz
scas
mov
xor
int
idivb
insl
cs
adc
add
outsb
or
mov
fs
sbb
insl
jns
sbb
test
rorb
jl
pop
cmp
add
pop
adc
xor
addr16
lods
in
hlt
and
mov
das
sti
insl
or
mov
lcall
int3
mov
mov
aaa
test
std
dec
enter
sub
dec
outsb
imul
add
mov
xchg
arpl
iret
movsl
rolb
or
mov
lret
loope
push
int
xchg
imul
and
dec
das
push
inc
xor
lds
fdivr
push
jge
or
jmp
pop
and
je
mov
mov
cmp
ss
mov
jae
call
pop
add
outsb
frstor
adc
sarl
cwtl
ret
add
mov
aas
leave
inc
and
outsb
mov
lds
arpl
cltd
jb
outsb
call
xchg
mov
rcr
xchg
push
daa
sbb
popa
stos
or
mov
cmpsb
mov
sbb
jle
je
xlat
mov
mov
pop
sar
xor
jbe
mov
and
jl
or
jl
cltd
or
sbb
lea
mov
add
fidivrs
setle
dec
mov
gs
dec
dec
idivl
jo
sub
lods
or
push
shlb
je
daa
mov
jmp
std
test
xor
std
and
xchg
sub
mov
xchg
out
fisubrl
and
test
shll
out
popa
cli
popf
call
gs
add
aas
mov
cmp
mov
imul
push
mov
mov
pop
or
cmpps
dec
or
imul
in
jae
push
adc
leave
fst
iret
scas
int
adc
aaa
jecxz
mov
or
nop
ljmp
loope
jno
lock
ljmp
pop
std
lahf
xor
imul
movsb
cmp
scas
push
add
daa
sub
loopne
outsl
pop
jmp
xchg
mov
and
push
je
xor
pop
aas
ds
insb
std
aaa
inc
mov
aas
xor
pop
mov
sub
pop
es
leave
sub
mov
jbe
ret
and
out
sbb
clc
sti
mov
and
or
mov
jb
mov
test
std
and
int
popa
sahf
mov
and
push
pop
sub
rolb
fimull
xchg
jl
jb
fnstcw
hlt
arpl
popf
jnp
push
xorl
and
xor
adc
dec
add
adc
sub
es
xlat
mov
jl
add
sub
shl
ret
outsl
cmp
push
sbb
arpl
pusha
adc
call
je
xor
or
divl
sub
inc
jle
cmp
xchg
sti
or
cmpsl
arpl
cli
loopne
mov
out
fsubp
mov
cli
add
cwtl
cltd
jno
pop
insl
jbe
xchg
mov
lea
mov
dec
negl
repz
xor
add
arpl
push
testb
mov
dec
jecxz
or
cmp
xor
shrb
sbb
xchg
imul
popf
inc
lea
scas
ffreep
and
xlat
aas
add
scas
lea
shrb
fstpl
mov
sbb
stos
cmp
int3
jae,pt
leave
in
inc
mov
cmpsb
cltd
or
jp
sbb
mov
rolb
inc
cli
inc
pop
icebp
idiv
out
imul
mov
lods
xchg
mov
ljmp
sahf
push
cmc
cmpsb
mov
cltd
adc
mov
jg
dec
sbb
or
daa
sub
jl
cld
xchg
sbb
jp
add
jl
add
cmp
insl
fld
jae
fistl
ljmp
sbb
aad
ljmp
mov
mov
xlat
outsb
mov
shrb
adc
out
nop
push
rorl
lcall
in
aam
dec
aaa
lods
sub
xchg
push
jae
mov
psrad
aam
insl
jno
leave
pop
and
loop
or
repnz
mov
push
jle
cmp
iret
aas
lea
xor
adc
sub
jge
dec
out
je
ja
cmp
enter
push
dec
add
aaa
cltd
adc
xchg
fnstsw
dec
xor
ljmp
xchg
aas
mov
inc
dec
and
pop
cmpsb
mov
aas
sbb
cmpsb
inc
inc
jge
int
pop
lea
mov
xchg
sbb
xorb
sbb
cld
sbb
jecxz
add
into
insb
in
dec
shlb
xchg
xor
imul
mov
test
adc
jge
push
add
enter
std
std
jl
and
mov
dec
push
outsb
xlat
mov
test
or
jno
mov
sub
mov
cli
sbb
dec
inc
rorl
cmp
add
sti
sbb
fnsave
test
cmpsb
daa
mov
test
movsb
ret
out
data16
cmp
cwtl
in
xchg
shll
dec
les
repz
mov
dec
movsb
out
mov
adc
mov
outsl
rcll
or
mov
js
push
shl
mov
xchg
pop
push
xchg
add
in
jb
xchg
inc
adc
or
jnp
and
clc
cmp
cld
xor
inc
mov
fmull
and
sbb
out
aad
dec
and
stc
xchg
mov
and
adc
insb
push
loop
sbbl
je
lods
fwait
xor
xor
add
out
add
cwtl
mov
or
enter
sub
xchg
xchg
loopne
mov
inc
push
aam
push
jecxz
out
pusha
hlt
rorb
movsl
dec
sub
hlt
mov
dec
in
jbe
shr
cmpsb
addr16
out
popf
adc
jnp
daa
bound
jle
add
insb
push
inc
sbb
push
inc
pop
cmc
xchg
pop
ret
out
test
aas
mov
int
and
pop
int3
fdivr
popf
cmpb
loopne
popf
arpl
pop
mov
mov
xchg
push
jo
pop
xorl
or
jecxz
xor
xor
dec
mov
fsubl
arpl
insl
mov
sahf
or
push
xchg
cmp
jns
mov
scas
fdiv
jns
mov
jb
pop
mov
xlat
daa
adc
adc
pop
je
nop
mov
sahf
mov
inc
add
fdivs
lds
add
jmp
rcl
inc
or
xchg
lahf
jmp
mov
mov
clc
shlb
sub
roll
xchg
xor
push
loop
mov
lret
out
repnz
mov
call
shlb
jle
cld
jbe
test
sbb
mov
fdivrs
jo
repz
addr16
cltd
mov
dec
xor
in
neg
es
fiadds
xor
imul
mov
pushf
mov
lcall
std
xchg
or
mov
insl
mov
in
inc
sbb
or
mov
lock
inc
pusha
push
jmp
push
mov
sbb
jnp
in
jge
mov
shlb
jb
push
fs
nopl
movsb
push
mov
adc
test
loope
lea
lds
mov
add
icebp
cmc
push
dec
add
inc
inc
cwtl
stos
jg
ret
aaa
mov
mov
mov
hlt
fdivrl
popf
rolb
lods
sub
mov
pop
mov
push
fnstcw
pushf
in
lret
jno
cmp
push
add
xchg
lcall
leave
mov
jo
sub
lea
jge
dec
in
mov
mov
pop
sub
xor
jae
jbe
in
adc
xchg
es
jo
inc
icebp
cwtl
mov
inc
int3
flds
mov
xchg
ds
add
cwtl
popf
in
icebp
pushf
incb
inc
ret
fisubl
pop
mov
cmp
push
pop
pop
push
jp
icebp
pop
mov
test
sub
sub
sbb
sub
daa
cmpsb
ret
add
sbb
ja
jle
push
sub
stos
add
mov
or
cwtl
in
addb
insb
hlt
sbbb
jnp
push
mov
sub
scas
ds
nop
data16
dec
js
fisubrl
aas
push
ret
je
mov
sub
push
or
push
jo
sub
sbb
and
and
fdivp
nopl
inc
aad
cmp
push
sbb
push
dec
xchg
popf
dec
mul
sbb
xchg
out
adc
fwait
cmpsb
aad
pop
sub
mov
and
or
push
lock
inc
enter
lock
push
inc
inc
stos
adc
clc
xchg
or
cli
ja
into
add
enter
pop
repnz
add
add
idivl
push
dec
fisttpl
mov
fsubs
add
mov
adc
pop
stos
test
loopne
mov
cwtl
inc
mov
push
out
sbb
mov
stos
pop
loop
shll
xchg
cmp
test
add
es
popf
lock
dec
imul
push
mov
outsb
dec
cmp
or
and
xor
bound
nop
mov
imul
outsb
dec
jne
in
mov
sub
inc
mov
xor
hlt
xchg
dec
and
leave
dec
mov
out
in
jae
dec
and
mov
push
push
mov
cwtl
mov
jge
daa
into
push
xchg
xorl
insb
mov
stc
bound
sbb
lret
ss
push
out
lock
mov
lds
inc
mov
and
adc
mov
out
outsl
loopne
push
jl
test
mov
lds
mov
pop
sbb
inc
lcall
cld
pusha
je
inc
inc
ljmp
sbbb
mov
aad
and
jl
ds
stos
mov
mov
jp
cmpsl
or
or
cmp
repnz
pop
aam
jg
mov
jl
lcall
leave
add
enter
inc
xchg
mov
aaa
aaa
jbe
dec
inc
rolb
fisttpl
fsts
xchg
dec
dec
sub
mov
pushf
out
and
mov
pushf
inc
jns
movsl
repz
aad
repz
pop
clc
bound
ss
adc
pop
cmp
jle
sahf
pop
pop
sbb
jmp
mov
stc
adc
sbb
xor
add
pop
add
lcall
pop
sbb
fistpll
scas
dec
mov
imul
aas
fbstp
shl
sub
mov
add
into
mov
inc
cmp
mov
xor
int
out
addr16
into
and
pop
adc
mov
jns
xor
pop
repnz
sbb
mov
adc
push
imul
mov
add
mov
stc
push
imul
stos
jno
sbb
clc
fnstenv
dec
or
mov
rcrb
test
inc
fnstsw
in
je
jp
adc
push
and
cmc
xchg
daa
aas
lock
xor
dec
push
cwtl
ret
inc
mov
sbb
add
mov
pop
dec
and
push
imul
jecxz
fisttps
dec
dec
stos
andb
mov
fs
outsb
decb
push
aad
xchg
mov
inc
aam
insl
inc
jnp
test
mov
mov
out
adcl
stos
jmp
mov
mov
mov
lahf
jmp
fidivrs
es
sarl
mov
mov
pop
fcomp
ret
imulb
jmp
repnz
pop
insl
lds
sbb
jle
pop
into
fidivrs
add
mov
push
adc
jg
pop
pop
leave
xchg
mov
push
int3
imul
pop
dec
dec
mov
adc
jge
pop
aad
adcb
push
push
pop
jl
mov
insb
cmp
sbb
inc
test
divb
xor
fwait
in
wrmsr
push
ficompl
jl
pop
adc
ret
sub
jl
cmp
lcall
rcll
mov
push
ret
adc
ljmp
adc
loop
xchg
mov
mov
std
adc
dec
mov
test
sub
pop
mov
insl
movsl
pop
js
scas
add
loope
lods
push
cltd
mov
xor
sbb
xchg
pop
scas
jg
sub
ds
lods
sub
bound
test
bound
mov
imul
inc
test
fmulp
xchg
fisttpl
int
test
xor
ljmp
cld
rolb
pop
sub
mov
pop
lock
and
loopne
andl
scas
js
xchg
mov
sbb
call
sbb
jecxz
testb
push
jl
or
inc
push
mov
pop
jbe
lds
out
loope
insb
data16
lcall
outsb
js
inc
bound
and
sub
jo
shll
pusha
mov
lahf
bound
mov
jb
sub
addr16
out
aaa
rclb
lods
sbb
into
ret
jle
mov
or
sbb
push
cmpsl
push
fs
xor
test
and
push
mov
mov
stos
int
cmp
cmpsb
or
sbb
pushl
and
xchg
shll
push
mov
push
xlat
out
cmp
add
push
imul
fidivrl
hlt
loope
jns
pop
inc
mov
and
sub
mov
cmp
lock
arpl
pusha
dec
idivl
push
test
inc
push
inc
jno,pn
mov
jbe
pop
sub
jae
xor
gs
cmp
popa
stos
pop
stos
mov
mov
mov
add
xchg
mov
aam
das
mov
push
popf
outsb
cwtl
stos
loopne
mov
loop
iret
cmpsb
push
js
out
mov
xchg
sub
pop
jnp
cmp
lahf
faddl
call
popf
and
ret
xchg
out
lods
push
adc
xchg
xor
dec
mov
xchg
scas
insb
inc
sub
and
xchg
push
arpl
sub
push
loop
lods
jge
sub
out
fsubrs
mov
mov
pop
inc
sbb
mov
add
cmpsb
cwtl
dec
add
clc
jae
jl
jne
or
mov
aas
cmc
out
bound
pop
push
mov
add
repz
xor
dec
fwait
bound
out
add
dec
int3
rorl
cmc
dec
push
loopne
lods
xchg
sbb
pop
in
or
xor
lods
or
push
and
pop
stc
mov
or
into
cmp
in
push
sarb
inc
mov
sbb
dec
dec
test
cmp
jmp
dec
scas
sti
divb
and
lock
pop
mov
push
push
pcmpeqw
mov
fcmovnu
in
movsb
pop
test
jne
xchg
cmp
mov
sbb
push
loop
leave
repnz
rcrl
mov
mov
mulb
adc
rclb
cmp
adc
sbb
jecxz
loop
pushf
mov
mov
xlat
xchg
es
sbb
sti
aam
ficomps
push
sbb
test
jecxz
xorl
and
test
xchg
dec
jbe
shrl
aas
add
jle
pop
push
js
cli
jecxz
in
int
dec
jg
scas
inc
test
push
dec
cmc
and
mov
mov
mov
jmp
mov
push
jb
inc
cltd
inc
push
mov
add
pop
adc
mov
cmp
sarb
inc
xchg
xchg
cmp
daa
adc
jb
xchg
cs
mov
jnp
push
dec
mov
sub
in
jbe
clc
repz
clc
out
xor
and
divb
add
in
sbb
dec
pop
mov
popf
and
out
cmp
cmc
test
xchg
je
push
lret
jbe
loope
jnp
pop
jge
mov
or
stos
jns
jns
in
cmp
jo
mov
loopne
es
mov
loopne
sbbl
adc
pop
pop
xchg
push
cmp
shrl
jge
and
pop
xchg
mov
gs
mov
mov
loop
push
ljmp
sbb
mov
fcmovu
dec
loope
mov
dec
add
sbb
mulb
lfs
or
aaa
cwtl
mov
jo
push
sub
icebp
and
bound
and
push
xchg
push
lcall
mov
clc
icebp
cmpsb
push
push
out
xchg
iret
push
cwtl
dec
aaa
pop
in
popa
cmc
adc
lods
mov
rol
pop
jne
scas
fisttpll
popf
sbb
mov
push
cmc
and
into
ljmp
imul
das
stc
outsl
mov
add
sub
pop
push
add
xor
mov
andl
mov
dec
adc
push
outsl
xchg
in
je
fsubp
popa
lock
cmpsb
inc
cltd
lea
ficoms
ret
dec
test
push
imul
cmpsb
push
xor
addr16
or
lcall
fidivrl
sbb
imul
pushf
push
pop
lods
add
and
lret
mov
mov
xchg
aam
out
jmp
orl
sarl
or
dec
adc
loop
dec
adc
mov
inc
shll
int
fwait
xchg
jp
jno
pop
xchg
cmp
ja
pop
pop
out
movsb
dec
popf
or
pop
sbb
mov
add
mov
imull
jmp
or
movq
les
and
adc
loope
add
mov
cmp
lcall
movb
jbe
rorb
scas
jmp
gs
cmc
and
subl
mov
lods
rcrl
push
in
dec
mov
mov
popa
sub
add
lret
sahf
add
nop
cmp
push
or
sbb
sub
stc
loop
adc
jo
push
test
mov
loop
xchg
mov
cwtl
in
stos
jge
int
xchg
dec
jle
scas
in
cmp
xchg
adc
cmp
inc
aaa
inc
out
mov
gs
jg
jge
fnstenvs
push
mov
dec
push
push
sahf
daa
in
push
nop
mov
loope
ljmp
daa
repz
jg
and
sbb
jg
xchg
hlt
mov
in
test
in
sub
mov
pop
push
push
mov
inc
mov
xchg
movsb
jne
cmpsl
rorl
fst
adc
popf
add
xchg
xor
aam
cmp
cmp
cmc
ret
ret
pop
test
std
mov
pop
pop
bnd
mov
dec
mov
test
xor
and
dec
outsl
mov
dec
mov
push
jae
rcrl
pop
call
sahf
pusha
ljmp
in
cmp
ret
imul
jmp
lret
mov
ret
ja
ljmp
pop
repnz
lods
xor
inc
dec
and
jbe
pop
mov
inc
fcmovnbe
inc
cmp
scas
out
movsb
into
jg
les
rorb
stc
out
inc
sub
sbb
mov
das
cmp
add
sbb
mov
iret
dec
enter
outsb
mov
in
stos
or
jmp
shlb
scas
in
out
mov
push
adc
xor
and
in
pop
or
or
push
iret
push
push
in
stos
int
fildl
in
call
lods
sub
adc
jl
cld
sub
xlat
int
xor
or
scas
sbb
negl
insl
mov
xor
in
es
fstpl
pushf
cltd
lahf
arpl
mov
aaa
test
xchg
pop
aaa
push
sub
test
addl
pop
xchg
or
popf
mov
test
xchg
add
lret
lahf
insb
mov
or
popf
and
scas
lock
in
adc
das
pop
cwtl
out
add
mov
popa
sub
mov
sarl
mov
mov
inc
sub
rcll
pop
fidivs
insl
insl
fwait
xchg
das
jg
xchg
fldenv
mov
dec
gs
ss
daa
mov
rclb
sbb
ljmp
stos
xchg
push
movsb
jp
dec
out
stos
leave
cld
mov
mov
cmove
ret
repnz
xchg
and
scas
mov
mov
sbb
xchg
movb
inc
pop
mov
mov
xor
and
popf
pop
xchg
mov
mov
loopne
faddl
std
out
pushf
insb
jne
add
xchg
push
xchg
loope
and
or
or
mov
push
cmp
mov
mov
sub
xchg
test
jns
shll
push
and
push
cmc
inc
cld
or
push
je
out
movsb
daa
mov
adc
sbb
xchg
in
loop
or
sbb
add
fwait
nop
mov
imulb
jge
movsl
in
or
pop
push
cld
jne
mov
sbb
pushl
shrl
dec
mov
mov
insl
cmc
xor
cmp
xchg
cmpsl
cmp
jl
lea
lcall
and
cmp
icebp
jge
loop
cmpsl
cwtl
mov
mov
ret
insb
mov
jo
jns
mov
in
mov
jno
in
xlat
jb
mov
push
lcall
dec
sbb
shll
cwtl
cmpsb
test
xor
enter
push
enter
outsb
xor
movsb
mov
mov
test
test
hlt
arpl
ljmp
lea
adc
and
sti
cmp
sahf
cmp
ss
clc
pop
arpl
cli
cmp
clc
js
xchg
push
ljmp
lret
sub
ds
push
pusha
aas
jb
je
pop
mov
sub
xchg
mov
psubd
cld
add
lcall
iret
dec
mov
lcall
push
mov
bt
sbb
neg
nop
cwtl
jecxz
cmpsb
pop
stos
push
cmc
push
lods
fldcw
fcompl
repz
add
out
stos
fwait
scas
push
es
jp
adc
xchg
push
stos
mov
inc
dec
aam
xchg
fs
or
adcl
aad
sub
sbb
int3
adc
jae
rcrl
aam
inc
shll
xor
mov
cltd
and
pusha
sub
cmpsl
sbb
adc
xlat
out
and
insl
pop
jae
into
mov
popf
jbe
push
mov
daa
xchg
hlt
or
addr16
or
arpl
call
sbb
jns
jne
push
cli
fwait
push
lret
inc
in
cmpsb
mov
aas
add
jecxz
icebp
outsb
jae
jb
jo
sbb
adc
imul
push
mov
sub
jl
xchg
adc
adc
je
out
jno
out
cmp
dec
lcall
clc
lret
xchg
adc
bound
or
mov
jge
mov
shll
sbb
inc
xlat
divps
loopne,pt
nop
loopne
jmp
jmp
xor
insb
cltd
lods
mov
lret
jnp
fimuls
std
push
jmp
push
out
sahf
lods
sbb
lea
dec
inc
mov
cmp
sti
and
jb
mov
xchg
jmp
fimull
lods
dec
in
shll
and
in
and
in
cmp
add
pop
jge
cmp
jge
addl
xor
loopne
fst
in
lret
or
add
mov
fisubs
sahf
test
stos
loope
jno
cs
lret
aam
jmp
or
int3
cmp
cmp
pop
jo
mov
sbb
mov
pushf
dec
rclb
push
repnz
push
orb
jmp
sarl
inc
in
mov
or
pushf
icebp
or
sahf
push
mov
xor
pop
hlt
xchg
pop
dec
push
outsb
test
or
cmc
xchg
mov
shll
addr16
shll
stos
aam
pop
dec
pop
imul
or
insl
inc
and
inc
call
jae
jmp
shr
push
icebp
bnd
push
mov
mov
xchg
push
loope
pop
jge
sbb
lods
int
daa
mov
rcll
mov
mov
pusha
jbe
pop
pop
repnz
repz
pop
cmova
in
std
mov
xchg
lret
cmpsb
inc
inc
ret
xchg
sbb
arpl
call
xchg
mov
gs
aas
and
inc
mov
mov
fisttps
cld
incl
adc
mov
icebp
bound
test
das
push
mov
mov
loop
mov
mov
cmp
adc
pop
adc
add
sub
mov
pop
pop
in
mov
enter
mov
adc
cmp
das
or
insl
mov
mov
mov
add
out
mov
add
sub
dec
shr
cvttps2pi
mov
fidivs
ret
cmp
stos
imul
sahf
add
icebp
add
cmpsb
psllq
dec
loopne
fs
xlat
stc
inc
xorb
sbb
push
xor
pop
xchg
loop
xchg
fldcw
pop
push
inc
dec
and
adc
push
push
cmp
pop
cltd
repz
sbb
jns
or
inc
mov
shll
les
cltd
push
scas
enter
mov
cmc
pop
adcb
pushf
jb
gs
mov
pop
add
lret
mov
addl
stos
mov
aam
sub
mov
xor
mov
mov
shrd
shr
mov
mov
xor
xor
or
lea
mov
mov
shl
mov
shrd
shr
mov
mov
xor
xor
or
mov
shl
mov
mov
mov
or
jmp
push
cli
imul
inc
iret
adc
insl
xorb
xlat
push
push
pop
mov
pop
addr16
dec
addr16
aam
xor
and
inc
or
cld
es
insl
mov
or
stc
cs
xor
mov
and
scas
push
push
dec
push
fmul
or
js
fisubrl
mov
lea
cmp
in
inc
loope
fs
arpl
cmp
fsubrs
test
cmp
sbb
cmp
mov
das
jns
and
lcall
popf
adc
sbb
xlat
gs
pop
cmp
outsb
dec
xchg
lock
lods
aam
jo
and
test
mov
sarb
xchg
test
and
xor
out
ret
ss
cs
and
sbb
mov
mov
and
ja
lods
fcmovbe
jecxz
insb
popa
sbb
jns
adcb
je
sbb
xchg
sub
or
jns
sbb
hlt
or
cmp
xchg
call
dec
push
pop
repnz
inc
lea
or
daa
cmc
sarl
dec
ja
sbb
sbb
pop
mov
out
cld
imul
loop
ret
push
mov
cmc
pop
imul
test
sti
outsl
dec
sub
xchg
fdivrs
add
pop
jmp
in
repz
or
pop
dec
icebp
push
in
cld
fisttps
sbb
mov
loope
dec
ss
add
push
cmp
cwtl
rcrl
std
aas
ja
add
mov
in
movsl
and
rolb
mov
popf
imul
mov
mov
pop
aam
loop
dec
pop
lret
pushf
sar
cmc
or
push
jg
popa
push
roll
xor
daa
fwait
and
mov
jbe
cmpl
dec
dec
fwait
push
and
outsl
mov
jmp
jle
int3
fbld
dec
sub
and
and
mov
jb
adc
cmp
sbb
cli
enter
aam
sub
sbb
lea
leave
fwait
dec
xor
cld
add
das
or
jbe
cwtl
mov
movsl
cmpsb
xchg
add
stos
aas
sbb
dec
mov
ljmp
and
ds
jae
xor
and
cli
stos
mov
mov
into
sbb
cmp
lds
sub
sub
adc
lret
dec
mov
lea
ret
and
jne
neg
cmp
loope
enter
xchg
bound
lock
rcl
and
lret
and
cmp
mov
jne
fsubs
sbbl
int
lcall
xlat
cli
or
jle
mov
push
mov
je
aad
daa
cwtl
push
iret
aas
mov
jnp
aam
cltd
adc
fstl
jle
cmp
aad
cmpsb
das
mov
movsb
push
outsb
cltd
test
je
sarl
js
push
inc
test
jecxz
xchg
movsl
or
stos
fidivrs
rcr
mov
push
and
addr16
push
out
xor
sbb
cmp
repnz
sub
lret
pop
pop
fsubl
lods
inc
inc
dec
jmp
cmc
mov
dec
and
jge
sbb
pop
lret
sub
adc
imul
and
jg
call
test
out
pop
push
es
jl
imul
jne
fisubrs
adcl
nop
xchg
arpl
adc
add
in
divl
ret
cmp
pop
loope
push
jl
lea
add
mov
ja
inc
pop
insl
push
int3
pop
sbb
mov
aam
and
scas
jb
push
mov
icebp
out
popa
aad
iret
jb
in
loopne
dec
xlat
lods
jp
jecxz
cltd
aaa
mov
pop
insb
push
add
pop
mov
imul
cs
and
pop
pop
mov
cwtl
xchg
fdiv
shll
repnz
aas
imul
add
sbb
scas
ja
stos
xor
sbb
rclb
push
adc
and
add
sbb
add
lea
ds
das
jl
xchg
cmp
shll
xchg
mov
push
gs
addr16
lahf
cmpsl
add
xchg
fsubs
and
mov
nop
imul
xchg
jo
dec
fwait
ja
xchg
pop
mov
cmp
mov
insb
xchg
push
cmpsl
ljmp
jg
leave
out
pushl
loope
loopne
subl
add
mov
pop
ficoms
inc
leave
and
hlt
into
inc
push
adc
dec
aas
and
jno
orb
hlt
movl
nop
das
adc
mov
ret
pusha
dec
jno
sub
insb
call
cwtl
xor
and
ds
sub
or
enter
cmp
or
cmp
popf
or
mov
adc
pop
mov
enter
hlt
mov
pop
jl
test
lcall
cli
mov
orl
imul
in
or
roll
push
sbb
movsb
push
jge
scas
nop
dec
andb
add
push
sbb
fldt
jmp
jns
pop
mov
mov
add
dec
scas
pop
cmp
mov
shlb
xor
repnz
repnz
jae
enter
jl
adc
fsubr
sub
lock
test
and
stos
jo
cltd
xchg
push
hlt
test
insb
ds
ret
ds
ds
pop
mov
icebp
dec
bound
nop
push
dec
data16
pop
adc
and
adc
inc
adc
sarl
enter
lcall
inc
push
or
gs
mov
jae
iret
mov
ljmp
popf
mov
test
stc
loop
in
and
iret
or
outsl
cli
insb
scas
xchg
xor
mov
lds
jns
mov
incl
outsl
leave
les
dec
xor
xor
push
mov
int
ljmp
mov
aam
movsl
cmovl
adc
lea
jb
icebp
push
fmuls
adc
pop
sub
add
dec
lea
jae
adcb
push
inc
mov
xchg
cmc
pop
add
lret
movsl
adc
lahf
jg
bound
test
xor
ds
xlat
inc
mov
push
je
dec
sbb
mov
push
movsl
adc
imul
pop
in
jecxz
nop
xor
xor
or
pushf
sti
dec
push
gs
pop
cmovb
and
dec
in
jne
cmp
xorb
es
or
int
jg
push
mov
mov
data16
iret
xchg
rcrb
stos
mov
dec
shrl
jle
icebp
pushf
cltd
cmpsb
outsb
pusha
movsl
add
cltd
adc
push
cs
jp
jo
shll
lcall
lods
adc
or
loope
push
std
or
aam
pop
je
mov
and
loope
hlt
mov
add
and
xchg
sar
icebp
push
outsb
jb
rcl
popf
movsl
and
je
xchg
mov
clc
pop
out
out
inc
pushf
inc
add
pop
cmp
add
mov
addr16
pop
out
testl
cwtl
call
int
add
aas
aaa
jecxz
pop
pop
fs
lea
xchg
add
les
addr16
js
xorb
push
sub
sbbb
andb
xchg
mov
movsl
ds
sbb
in
mov
pop
push
repnz
jp
ficoml
mov
xchg
inc
nop
bnd
movsl
icebp
mov
fdivs
xor
jnp
call
push
call
sti
bound
es
lea
xor
sub
lea
mov
dec
pop
add
dec
lods
push
cmp
scas
sbb
mov
divl
pusha
daa
pop
jae
ffreep
or
push
shlb
jle
mov
mov
push
fmull
icebp
es
inc
ror
das
cmp
mov
mov
jg
inc
push
lcall
int3
les
mov
xchg
shl
out
mov
xor
add
mov
repz
pop
cmp
sub
imul
shlb
pop
sbb
nop
hlt
jnp
xchg
movsb
test
je
add
out
scas
add
and
push
dec
mov
ljmp
aaa
dec
push
mov
imul
cmc
sti
inc
mov
xchg
jno
and
xchg
jo
std
or
adc
add
insb
sub
and
in
adc
cwtl
repnz
addr16
and
dec
or
dec
inc
insb
in
sarb
enter
sbb
in
adc
and
mov
jecxz
repz
cmp
adc
and
fcomip
xor
sbb
sbb
arpl
add
mov
gs
and
fcmovnu
ja
push
add
lcall
dec
sbb
lcall
and
ret
leave
add
cmp
cmpb
bound
adc
std
lods
orb
jmp
aas
fwait
jg
pop
pop
push
mov
aad
lcall
jne
andb
xor
cli
pop
push
dec
mov
xchg
std
cs
mov
in
aam
xchg
call
fistpll
test
push
push
lahf
mov
xchg
sbb
lcall
push
fisubrs
lret
lods
scas
inc
subb
lret
push
insl
scas
push
xchg
push
jnp
fsubs
or
xor
movsl
arpl
leave
mov
adc
ret
sub
ficompl
fstp
out
push
xchg
fsubs
push
aam
repz
sbb
das
rcrl
popa
je
enter
roll
mov
in
fdivr
cmp
dec
and
repz
shlb
mov
sbb
cmp
pop
pusha
in
fldcw
jp
mov
or
mov
mull
and
sub
mov
rorb
ret
inc
push
pop
dec
adc
add
test
in
call
sub
sbb
lret
cmp
cmp
sub
mov
adc
aas
jbe
ljmp
lahf
lods
pusha
cli
stos
xor
movsl
bnd
mov
xor
dec
sbb
in
fneni(8087
mov
mov
cmpsb
inc
dec
push
adc
rolb
into
out
nop
pop
outsb
stos
out
popf
pop
and
imull
test
les
mov
mov
into
std
push
or
rcrb
dec
int
lahf
jne
std
sub
jecxz
das
nop
test
jmp
push
or
and
fbld
nop
int3
lds
js
shll
imul
push
mov
mov
rcll
cltd
or
in
repz
mull
mov
mov
lahf
jg
jmp
push
mov
mov
clc
fcoml
ljmp
push
clc
jbe
mov
add
pop
add
das
push
jle
mov
inc
sub
mov
mov
or
testb
cmc
xor
ljmp
push
or
add
aas
pop
bound
cmp
lret
mov
sub
xchg
outsl
push
add
xchg
xchg
add
jl
pushf
xor
fs
xchg
xchg
data16
fs
sub
or
cmp
call
aam
xor
xor
sub
gs
data16
push
pusha
bound
xchg
push
push
xchg
and
mov
fildl
jmp
out
lock
addr16
push
divl
mov
dec
xchg
jae
out
xchg
loop
jno
ret
repz
jne
pop
cmp
or
pop
xchg
or
sbb
add
sbb
scas
cmc
in
push
jl
jne
push
addb
fwait
gs
divb
das
mov
push
push
leave
testb
adc
sbb
jb
mov
and
sbb
or
sbb
jb
orl
cltd
js
das
repz
mov
pop
cmpsb
int3
cmp
pusha
and
xorb
or
dec
mov
fsubr
shlb
mov
fsubs
mov
ljmp
lods
addr16
push
out
jmp
pop
adc
cmp
xor
rorl
sarb
mov
jb
or
mov
loopne
daa
aaa
call
frstor
aad
push
je
int
mov
mov
js
xor
fdivl
inc
lock
dec
xchg
je
fidivs
ret
xor
int3
cld
xchg
adc
sbb
and
xor
pop
sbb
je
daa
push
lea
xlat
cmp
pop
or
cmpl
ja
pop
dec
or
ror
es
lock
sub
jnp
lods
mov
sub
sub
mov
mov
xor
jge
std
lcall
adc
std
push
sbb
scas
mov
fstpt
ds
cwtl
dec
sarl
and
cld
lock
xchg
arpl
in
clc
push
nop
lods
jne
add
mov
fwait
iret
sahf
xchg
lret
lret
leave
sub
push
ret
pop
sarl
mov
jge
data16
dec
movsl
popa
cmp
pop
sbb
push
std
xlat
cltd
dec
push
shll
or
mov
fucom
mov
jg
xor
lret
sub
lret
push
subl
mov
xchg
dec
stos
out
adc
rolb
stos
outsb
mov
aaa
ret
mov
mov
or
pushf
int3
call
mov
add
lret
stos
mov
mov
stc
dec
sbb
ror
sbb
js
mov
sub
sub
mov
inc
into
adc
add
rolb
dec
xchg
aad
sbb
jne
outsl
iret
in
push
ja
les
inc
sarl
cmp
je
jecxz
out
mov
fwait
movsl
bound
mov
jns
nop
mov
push
in
pop
cwtl
jge
xchg
aam
fsubl
mov
ss
adc
and
dec
dec
ljmp
sub
dec
fisttpl
sbb
push
or
mov
inc
mov
push
repnz
cmp
sub
fidivl
jmp
mov
lret
push
enter
mov
loope
xor
push
push
lock
adc
pop
pushf
sub
dec
cmp
pop
stos
and
ret
pop
stos
gs
dec
add
filds
dec
aam
xor
adc
or
ja
mov
sbb
imul
call
fidivrs
push
scas
jl
sbb
dec
in
jp
aaa
aam
cmc
inc
add
cmp
add
pop
push
sti
push
pop
xchg
lcall
arpl
or
ret
lods
dec
iret
inc
jae
dec
imul
jg
adc
or
mov
aaa
cltd
mov
loop
mov
cwtl
imulb
js
fmull
jo
daa
pop
ja
mov
jno
inc
sbb
fcmovnu
test
sahf
xchg
loop
data16
sbb
push
cld
add
xchg
popf
movsl
push
aam
cmp
and
pusha
dec
mov
jmp
push
add
dec
into
fsubr
in
hlt
jle
mov
dec
mov
jecxz
push
fs
mov
add
push
fidivl
scas
les
into
dec
inc
test
mov
mov
cmpsl
dec
in
enter
mov
xchg
fwait
loop
orl
cmc
xchg
jns
mov
push
dec
cmpsl
mov
xlat
cmp
loope
repnz
sbb
inc
cmp
and
dec
fists
cld
dec
jmp
or
mov
mov
repnz
xchg
mov
int
hlt
pop
lods
push
addl
dec
cmp
pop
push
sub
stos
bound
xchg
push
cmp
pop
stos
test
adcl
mov
push
mov
test
lahf
jnp
ficoml
and
and
testb
cmp
push
dec
in
lods
inc
mov
sub
stos
add
subl
xlat
scas
and
in
adc
das
test
and
dec
shl
pushf
cmpsl
add
mov
popa
addr16
shrl
jnp
scas
enter
jne
xor
ficompl
sbb
inc
pop
jnp
jg
in
std
pop
in
cld
pop
jne
out
int3
jo
cwtl
pushf
movsb
lds
in
sub
adcb
rclb
mov
popf
mov
cs
xor
cmpsb
mov
adc
pop
cmp
mov
sahf
jl
push
sbb
xlat
add
mov
negl
iret
and
mov
push
mov
xor
or
cld
jle
outsl
shll
push
dec
fbld
popa
push
push
add
das
push
arpl
push
notb
outsb
pop
stos
sub
push
fmull
shrb
pop
adc
insl
insb
adc
shll
dec
cltd
push
push
call
daa
xchg
arpl
adc
jne
xchg
dec
cmp
push
in
ss
jne
cli
sub
aad
mov
into
cmp
jle
mov
mov
out
inc
js
xor
movsb
mov
sarb
adc
daa
lahf
dec
roll
mov
push
pop
sahf
mov
lcall
xor
jp
pop
sbb
lcall
jmp
cmp
into
mov
mov
ja
jns
jns
inc
lods
sbb
fdivl
mov
outsl
sub
rcll
xor
popf
mov
les
sti
je
and
lcall
cmc
jl
stos
xlat
xor
push
push
mov
xchg
xor
fdivrs
sub
add
test
cmp
mov
aas
xchg
dec
mov
sbb
fsubr
ret
stos
push
lahf
imul
lret
push
push
fsubrs
adc
dec
test
inc
aaa
stos
int
xchg
in
cld
jmp
sarb
mov
lock
out
jbe
or
pop
stos
mov
adc
adc
iret
mov
adc
or
scas
mov
sub
loop
cld
mov
es
inc
arpl
loopne
jb
push
call
std
and
outsb
lds
jmp
pushf
or
mov
repz
and
ret
aas
sub
roll
pop
shlb
pop
aad
mov
call
sub
jecxz
imul
ret
cmpl
dec
aas
fucomi
ret
and
call
fsubrl
rol
aad
frstor
into
stc
and
icebp
es
ret
fs
jno
hlt
pop
jne
insb
inc
sub
push
out
dec
rclb
sub
in
test
push
xor
sub
lds
jb
mov
mov
xor
pushf
mov
lea
cmpsb
faddl
cwtl
push
iret
fs
jmp
jmp
sbbl
cmpsb
xor
ja
sub
cli
pop
cmpsb
imul
mov
and
xor
daa
jns
sbb
jle
loop
inc
mov
mov
mov
mov
aam
in
mov
pop
aam
fcoms
and
pusha
sarb
dec
mov
jnp
mov
mov
push
cli
inc
add
test
sub
fisubrs
lcall
pop
std
xchg
pop
int3
push
mov
jp
popf
insl
or
mov
pop
mov
sbb
dec
adcl
lods
in
out
ficoml
xchg
int3
or
jbe
cmp
push
loop
or
mov
inc
insb
mov
mov
mov
mov
out
lret
roll
xor
lcall
xor
sbb
push
jo
shlb
test
jge
mov
xchg
loop
lods
sti
sub
in
shlb
jl
jns
push
sub
fwait
lret
test
dec
loopne
ljmp
fstpl
pop
dec
call
outsl
push
jns
jecxz
pop
push
ret
mul
jmp
loop
test
pop
sbb
scas
cmp
mov
shll
add
lahf
push
mov
sub
xor
mov
jae
repz
rol
mov
pop
lret
mov
movl
cmc
or
stos
into
pop
mov
lods
clc
and
incl
cmp
mov
inc
jle
pop
aad
js
cmp
sbb
mov
sub
mov
test
jg
mov
xor
sbb
adc
scas
test
inc
xchg
fldcw
loopne
pop
and
cmp
mov
lret
inc
adc
mov
cmp
mov
or
popa
in
loopne
xor
or
xor
cmpsb
add
add
push
adc
cmpsl
lods
imulb
lret
push
push
bound
mov
fs
movsb
adc
jne
and
mov
test
inc
push
or
mov
xchg
xchg
cld
push
push
aad
adc
sarb
cmpsl
sub
adc
sbb
fcoms
inc
sbb
andb
dec
pop
cltd
mov
xor
lea
fs
out
pop
xor
fs
sub
adc
push
outsl
dec
int3
mov
in
push
sbb
adc
ret
sub
frstor
mov
cli
subb
mov
ss
adc
lcall
loope
xor
cld
jmp
rcrb
flds
lods
roll
sub
mov
stos
jle
fcompl
call
aaa
xor
mov
icebp
test
cmc
xchg
inc
enter
dec
mov
adcl
pop
lret
pop
sbb
mov
sbb
mov
andb
mov
jo
xchg
adc
push
xor
add
inc
and
inc
dec
mov
sbb
call
lret
mov
inc
sub
daa
fidivs
xor
jo
push
cs
jae
mov
lahf
shll
lcall
mov
add
shrb
sub
test
fnstenv
fwait
out
fcomi
mov
stos
adc
aaa
mov
cmp
dec
aas
mov
mov
cli
lods
push
and
aaa
cld
ljmp
inc
es
sub
xchg
pop
testl
push
xor
pushf
mov
lcall
adc
sub
or
outsl
jo
lret
scas
mov
inc
mov
jo
jbe
add
in
jbe
movsl
outsb
in
ret
popa
ss
xchg
inc
in
jne
popf
imul
inc
les
std
in
sub
push
stc
es
ljmp
les
mov
dec
enter
jns
push
loope
pop
stos
pushf
dec
push
cli
shrl
xor
jmp
clc
push
pusha
cmp
lret
idivl
add
repz
loope
cmp
std
movsw
mov
pushl
aad
sti
push
cmpsb
pop
repz
arpl
lods
inc
mov
cmpsb
es
push
jbe
inc
cmp
aas
xchg
xor
sbb
xchg
jnp
jns
unpckhps
inc
mov
movsb
cmp
sbb
sub
jmp
movsb
div
mov
xchg
jae
add
mov
xchg
loop
push
test
ficompl
mov
or
mov
gs
adc
lods
mov
mov
jle
jo
stc
add
rcll
sub
cwtl
lret
inc
ljmp
add
xor
aaa
stc
and
aas
or
out
inc
mov
lds
push
xchg
jl
sub
jle
xchg
jo
jb
outsl
clc
add
or
in
hlt
int
add
addr16
lods
mov
mov
fcom
jecxz
cmpsb
insb
js
fadd
mov
push
cmp
push
pushf
cmp
lods
aam
rorb
add
jge
popa
in
ret
ds
stos
jecxz
xchg
fisubrl
mov
xchg
mov
inc
jle
rcll
add
inc
fs
insb
sbb
pop
pop
dec
xchg
jo
ljmp
lods
and
jle
pop
xchg
addr16
jp
movsl
ljmp
push
xor
nop
mov
xchg
ljmp
fildll
rol
imull
inc
lock
mov
aad
jp
or
fistps
mov
dec
mov
repz
test
push
dec
pop
int3
adc
and
or
mov
loopne
push
mov
fstpl
mov
les
mov
inc
fisttps
push
shr
mov
in
adc
or
jmp
xor
inc
out
mov
pop
push
mov
jmp
stos
inc
movsb
xor
sbb
mov
xchg
dec
leave
xchg
jnp
xchg
arpl
xchg
das
xchg
push
sahf
add
jl
xlat
mov
gs
sub
pop
lret
mov
call
and
xor
mov
pop
or
xor
ror
cmp
hlt
mov
mov
jae
add
sbb
dec
mov
iret
mov
push
aam
jmp
lds
fs
ja
outsb
dec
imul
or
out
sbb
lock
rsqrtps
clc
xchg
js
fistl
subl
sti
out
push
in
xchg
nop
loopne
pop
ja
cmp
add
dec
orl
mov
nop
dec
dec
adc
mov
dec
fwait
int3
jecxz
pop
sbb
jne
cmp
mov
jnp
and
sbb
dec
jle
stos
add
dec
or
rcrb
xchg
in
xlat
cmpb
inc
nop
inc
push
ss
sbb
mov
jle
mov
sbb
negb
test
push
jle
iret
dec
sbb
push
pop
jne
push
jnp
xchg
cmpsb
mov
xor
xchg
shr
es
in
push
rorb
adc
or
sub
push
jp
aam
roll
add
imul
movsb
jnp
inc
es
push
ds
ljmp
stc
adc
shrb
mov
mov
sahf
mov
insl
inc
sub
mov
jge
je
mov
xchg
sbb
add
pop
inc
pop
or
add
sbb
shll
mov
sbb
adc
sub
aam
mov
hlt
data16
xor
js
pop
xor
test
enter
mov
inc
push
sbb
and
jnp
cmpsl
push
outsb
test
inc
jnp
jl
jecxz
inc
add
lds
pushf
inc
xor
fsubp
paddusb
push
jp
push
push
adc
orb
xor
jecxz
mov
in
jl
lahf
das
xchg
ds
int
out
mov
push
imul
fwait
mov
xor
jmp
xchg
shrb
enter
jl
repz
faddl
adc
fmuls
dec
popf
push
test
pop
outsl
push
lret
lahf
scas
nop
add
subb
xchg
repz
mov
into
fs
adc
mov
pop
xor
test
lcall
shr
pop
push
pop
mov
jg
cmp
and
pop
subb
sahf
daa
xchg
adc
sbb
out
inc
jbe
push
aam
jp
fildll
jno
adc
sub
outsb
pop
and
sbb
cltd
jge
nop
popa
mov
cmp
inc
cmpsl
and
test
sbb
fstpl
xchg
push
out
aaa
jge
out
dec
mov
stos
out
jl
mov
or
clc
cmpsl
xchg
fimuls
je,pt
sbb
mov
sub
aam
test
push
loop
mov
dec
or
sub
cmp
dec
flds
xchg
arpl
bound
jmp
ret
insb
lret
adc
scas
stos
mov
add
fidivl
sub
fdivrl
xchg
sbb
ret
sbbl
and
mov
popf
fwait
inc
jp
xor
imul
pop
mov
addr16
jno
push
push
clc
xchg
cltd
push
out
popf
xchg
push
mov
testl
jo
loopne
ret
mov
cmp
sar
cli
stos
movsl
and
cs
mov
fwait
cmp
and
cmc
loopne
jecxz
and
jno
aad
fcmovnu
cmp
dec
push
divl
fidivrs
mov
mov
xchg
sub
leave
xchg
or
movsb
or
imul
mov
cwtl
jae
imul
jne
xlat
xor
cmp
add
push
loop
daa
lods
test
dec
jnp
add
cltd
mov
rclb
in
add
pop
dec
lods
and
inc
push
jle
ret
nop
mov
jno
std
std
push
xor
or
cmp
iret
cmp
aad
xchg
dec
mov
mov
shrd
shl
shr
mov
mov
xor
mov
xor
or
mov
dec
not
and
xor
mov
mov
xor
or
mov
mov
shrd
shr
mov
mov
mov
xor
mov
xor
shl
mov
or
mov
cmp
je
mov
sub
mov
mov
mov
shl
xor
mov
mov
mov
xor
xor
shrd
shr
or
xor
or
mov
mov
mov
mov
xor
shl
xor
mov
mov
mov
mov
xor
xor
shrd
or
shr
mov
mov
or
mov
cmp
jne
cmp
je
jmp
mov
mov
mov
shl
xor
mov
mov
mov
xor
xor
shrd
xor
or
mov
mov
mov
mov
xor
shr
or
mov
mov
shl
xor
mov
mov
xor
mov
mov
xor
shrd
or
shr
mov
mov
or
mov
mov
mov
cmp
jne
mov
cmp
je
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
shrd
mov
mov
xor
shr
mov
xor
shl
or
mov
mov
mov
xor
shld
xor
mov
mov
shl
mov
mov
xor
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
mov
mov
xor
shl
mov
mov
xor
mov
mov
xor
xor
shrd
jmp
cs
lods
pushf
ds
enter
mov
scas
jp
push
push
sub
push
push
adc
jns
cmp
mov
sub
stc
outsb
ds
aam
into
jne
inc
jne
inc
pop
mov
in
movsl
clc
clc
dec
sbb
or
aad
pop
jns
mov
pop
push
cmp
cld
imul
addb
ficoml
jge
mov
shll
movsb
repnz
call
dec
cmp
scas
popa
and
and
sbb
push
mov
inc
cmpsb
jne
pop
inc
je
push
sub
pop
xlat
cmp
movsl
mov
adc
je
sbb
imul
sub
xchg
outsb
adc
stc
in
cmp
or
dec
jo
idivb
mov
cmpl
adc
daa
xlat
pop
scas
mov
xor
test
or
inc
stos
rcrl
ret
gs
or
mov
arpl
rcl
xlat
loopne
push
inc
jge
outsb
add
pop
int3
dec
mov
sahf
scas
sub
jmp
push
jbe
imul
and
or
shlb
imul
sub
mov
jge
push
adc
mov
xchg
test
xchg
outsb
test
lret
pop
jecxz
pop
aad
push
hlt
sub
cmp
data16
sbb
lods
mov
jle
jp
jp
rcll
loopne
push
and
aad
outsb
xchg
xchg
rcrl
shll
pusha
jb
pop
stc
sub
dec
pop
divl
rolb
fwait
outsb
add
mov
or
dec
into
inc
sar
movsl
cs
cmp
int3
push
movsb
out
ljmp
aad
add
les
mov
test
js
or
jp
rol
push
push
cwtl
mov
jno
adc
mov
das
scas
cmp
cmpsb
or
sub
mov
mov
jno
mov
jb
outsl
and
int
fwait
icebp
push
test
and
mov
or
mulb
xchg
or
mov
xchg
mov
ret
mov
mov
loope
lcall
mov
inc
std
scas
int
stos
loop
jp
jge
sub
sub
aas
and
add
inc
mov
xor
xor
xchg
jne
push
xchg
xchg
rolb
mov
push
xchg
fidivrl
cmpsl
bound
push
arpl
fisubrs
inc
movsb
push
add
and
fidivrl
shrb
scas
adc
pop
loope,pn
mov
fldln2
xchg
ffreep
xlat
pop
pop
dec
sbb
push
scas
mov
mov
filds
cmp
push
or
pop
stc
push
xor
fidivs
jp
in
inc
add
lret
jne
movsb
add
inc
push
rcr
into
mov
je
ja
or
dec
and
rol
pop
js
sahf
movsb
lret
jae
cmp
roll
mov
cmpsl
push
mov
daa
jg
mov
es
hlt
push
ja
push
rol
push
clc
inc
sbb
fisttpll
mov
popa
imul
or
xor
inc
rcrl
push
or
in
movsb
fs
stos
pop
loope
jmp
and
leave
mulb
hlt
pop
push
cwtl
inc
popa
inc
repz
aam
lods
jns
xchg
sahf
cmp
insl
push
aam
inc
test
sbb
jae
scas
adc
imul
sub
test
daa
pop
sbb
pop
inc
or
sub
mov
in
push
or
in
jno
and
xchg
scas
test
fisttps
pusha
lods
in
insl
stos
icebp
lcall
or
loopne
mov
mov
jo
nop
cmp
jmp
cld
mov
int3
xor
lret
pop
add
outsb
sarl
mov
mov
loop
jecxz
mov
sub
lds
adc
cmp
mov
mov
pop
ficomps
mov
pop
in
int3
out
jecxz
cmp
stos
int
dec
cmpsb
xchg
adc
dec
dec
cmp
clc
or
jl
out
or
sbb
ja
daa
cmp
sub
mov
xchg
mov
and
mov
mov
adc
sub
lods
testl
sbb
xchg
or
sahf
jge
xor
sbb
jae
rcrb
lods
in
in
push
dec
push
call
jle
add
mov
jle
adc
pop
sbb
pop
in
adc
movsl
dec
pop
sbb
dec
aas
xchg
xor
mov
test
jae
mov
dec
dec
mov
stos
mov
into
mov
add
dec
sub
inc
into
out
xor
xchg
mov
movsb
fidivrs
or
sbbb
jmp
mov
in
inc
int
and
test
cmc
mov
dec
idivl
xlat
inc
adcl
jl
outsl
push
xchg
dec
mov
arpl
xchg
mov
xchg
mov
sbb
mov
or
notb
nop
push
mov
sub
pop
inc
xor
jecxz
inc
pushf
pop
test
mov
push
in
jbe
lods
ds
push
pop
sar
stos
xor
xor
pop
dec
mov
xor
and
mov
fstpt
stos
int
dec
sbb
pop
loopne
outsl
gs
mov
ret
les
into
loopne
xchg
je
xlat
and
inc
or
xor
sahf
adc
pop
mov
inc
xchg
mov
sbb
push
aas
addl
push
std
pop
jne
sub
rcrl
pop
pop
popa
dec
cmp
add
jo
fwait
xchg
clc
xchg
lods
gs
aas
adc
es
sub
ret
sub
pop
mov
mov
imul
and
xlat
adc
stos
pop
out
fdivs
dec
ret
das
pop
testl
scas
fisttpll
insl
lcall
xchg
jle
repnz
lsl
sub
mov
popa
xchg
jge
jb
pop
xlat
in
sti
movsb
jno
xchg
fisubrl
test
mov
std
imul
cwtl
inc
xchg
lret
sahf
pusha
test
mov
xchg
rol
xchg
mov
push
and
shrl
xor
sbb
hlt
xchg
mov
xor
insb
add
dec
mov
add
js
push
jmp
mov
mov
outsb
cwtl
pop
scas
mov
leave
fbstp
and
adc
setb
dec
adc
xchg
pop
in
inc
xchg
in
mov
aaa
dec
dec
stc
mov
aas
loope
stos
adc
fsubl
in
mov
testl
ud2
outsl
data16
xchg
mov
dec
push
sahf
fsubrp
shlb
pop
lcall
movzwl
jns
mov
dec
or
cmpsb
ret
and
ds
dec
xor
test
mov
stos
mov
adc
stos
push
pop
pop
sbb
call
jne
fwait
xor
repnz
pop
ret
mov
dec
push
dec
jmp
sahf
dec
inc
xor
pop
cmp
and
loopne
pop
popf
and
cwtl
push
jmp
sub
inc
push
lcall
out
out
cmp
test
jp
sar
ds
mov
push
loopne
cltd
inc
cmp
pop
jle
sbb
loopne
push
shlb
lods
popf
shll
fwait
into
push
addl
pop
outsb
scas
push
lods
or
popf
ja
aad
fcoml
imul
add
xor
jle
mov
fcmove
out
shll
daa
mov
andb
inc
rolb
mov
mov
in
stos
loopne
loop
mov
jns
lcall
pop
aaa
fwait
iret
movb
jns
fwait
and
cmc
lret
pop
xor
lock
inc
sbb
stos
and
pusha
mov
dec
ds
lock
call
or
ficompl
inc
mov
jmp
dec
fwait
and
dec
add
popa
and
dec
lds
test
loopne
lahf
mov
adc
pop
xchg
xor
negl
xor
daa
push
xchg
loopne
push
cmp
mov
fidivrl
adc
cwtl
pop
mov
movsb
mov
jne
mov
mulb
test
hlt
cmp
dec
sbb
ss
daa
mov
xorb
xor
out
push
sub
mov
hlt
cmp
mov
mov
fadds
stc
sub
fnsetpm(287
out
sub
sub
fcompl
lds
sbb
ficoms
push
sub
and
lock
jle
sbbl
pushf
push
pop
mov
dec
ret
xchg
shlb
out
mov
and
push
add
call
sbb
sub
jle
or
les
mov
stos
jg
ds
jnp
fildl
jecxz
jecxz
inc
sahf
lahf
negb
jmp
push
mov
dec
lret
pop
add
mov
call
lret
mov
std
jg
insb
adc
lret
jecxz
xchg
in
jmp
sahf
push
popa
cld
pop
jge
arpl
scas
inc
and
rorb
cmp
mov
mov
ret
and
stos
push
mov
in
pop
push
cmc
xor
mov
mov
mov
outsl
adc
hlt
push
inc
jg
xchg
pusha
mov
xchg
repz
inc
mov
sub
xorl
lahf
insl
aas
cmp
add
subb
je
or
test
sbb
sbb
cwtl
jnp
sahf
aam
sti
outsl
pop
inc
push
cmp
sub
mov
add
out
or
jbe
ret
and
xchg
xor
popa
push
clc
pop
or
cltd
out
pop
stc
cmp
cmpsb
dec
cmp
pop
out
test
push
lcall
addl
sahf
pop
loopne
cmp
dec
aad
cmc
dec
add
cmovl
loope
repnz
repnz
lcall
sarl
lock
sahf
jb
sub
xchg
fcmove
shrb
add
sub
test
cld
sti
dec
out
hlt
dec
es
bswap
ja
loopne
addr16
pop
imul
xor
lret
ds
faddl
data16
aam
xor
pop
inc
xchg
push
xchg
push
ja
xlat
ss
das
xor
mov
ljmp
sbb
or
jbe
cmpsl
sbb
mov
imulb
stos
fstl
and
and
test
in
push
je
jo
xlat
sub
jne
and
test
adc
daa
ljmp
movsb
insl
ror
mov
and
stc
ret
adc
jbe
pushf
movsb
mov
ss
pop
inc
sbb
push
xchg
xor
mov
lcall
jmp
cltd
pop
bound
adc
jle
stos
jns
les
in
arpl
xor
and
xlat
xchg
sub
or
jbe
add
and
addr16
imul
xchg
scas
add
rcll
iret
cmp
add
inc
sbb
sbb
xchg
cmp
bound
dec
pop
sub
in
sbb
push
lea
sub
adc
dec
stos
sbb
dec
xor
pop
xchg
sub
sti
xchg
cmp
cs
jbe
mov
arpl
push
jp
test
mov
gs
in
cmpsl
inc
add
insl
in
and
ljmp
sbb
cmp
xchg
and
sarl
mov
and
mov
int3
xor
lock
fidivl
fwait
inc
xor
jnp,pn
iret
lret
xor
xor
pop
mov
sqrtps
pop
outsl
add
arpl
or
push
rcl
sbb
adc
dec
decb
sbb
adc
scas
cmp
popa
pusha
fcomi
sub
mov
lahf
xor
or
ja
sub
cld
outsb
pop
or
jle
sub
push
shl
jo
mov
xor
xchg
xchg
sar
mov
in
cltd
into
lock
xor
push
push
repnz
xchg
or
mov
cmpb
or
lods
fisttpl
mov
cmpsb
mov
jmp
arpl
inc
fwait
lret
xor
cmp
hlt
mov
push
cs
notb
sbb
sub
push
push
mov
sub
scas
and
loop
adc
mov
addr16
sub
into
das
xor
pminub
jb
and
gs
lods
lahf
push
dec
movsl
push
test
into
cmp
js
loop
cltd
movsb
lds
les
mov
ljmp
adc
aad
test
repnz
push
fistpl
lret
imul
lret
faddp
cli
mov
les
add
lahf
stos
out
jns
fstl
data16
add
mov
xchg
and
inc
popf
mov
ss
out
enter
fcmovb
add
rorl
les
dec
stc
lret
int
insb
in
and
inc
jl
mov
mov
push
xchg
mov
ret
mov
add
jle
adc
sbb
popf
sarl
mov
jae
pop
aaa
jne
test
or
cmp
movsl
mov
fwait
in
roll
mov
mov
repnz
add
jl
aam
jbe
mov
inc
cmp
clc
inc
inc
stc
sbb
inc
adc
mov
mov
bnd
in
jle
dec
pop
outsl
add
xlat
pop
aaa
mov
xchg
and
arpl
inc
xchg
cs
insb
cmp
imul
out
sbb
lahf
arpl
and
inc
rol
lods
adc
add
pop
dec
add
mov
lock
repz
test
jg
inc
mov
rcl
orl
lahf
iret
andb
out
add
jp
dec
xor
cmp
push
ret
push
adcb
int3
dec
xor
shll
loope
push
stc
lds
and
dec
fidivrs
xchg
aam
jne
push
lahf
imul
lret
test
adc
sarb
in
iret
test
mov
xor
fldt
rcl
popf
out
popf
loope
sbb
mov
push
fsubrs
mov
jecxz,pn
pushf
push
int3
pop
cld
dec
in
pop
pop
je
loope
add
popa
lcall
orb
or
testl
push
jmp
outsl
jne
inc
daa
push
arpl
xor
setae
jae
add
cltd
or
fstl
dec
cmp
pop
out
ret
rclb
cmc
push
xlat
daa
push
adc
mov
cli
out
cltd
cmp
xchg
lea
stc
add
out
aaa
fdiv
subps
or
inc
xchg
dec
popa
pop
add
mov
bound
xor
mov
xor
pop
lock
js
sub
test
scas
adc
mov
pop
inc
fsubrs
pop
aad
fistl
mov
inc
xchg
outsb
inc
pop
cmp
repz
icebp
popa
xlat
add
arpl
ss
sbb
pop
jo
inc
pusha
je
mov
cwtl
pop
in
clc
cmp
mov
fisubs
or
or
jae
xor
xor
sub
push
xchg
aam
pop
ljmp
push
sarb
or
lcall
xchg
mov
fmull
push
cltd
aaa
test
pop
mov
int3
test
adc
inc
mov
dec
add
xchg
fcmovb
xor
ficompl
ret
xlat
in
mov
insb
or
push
cmpsb
or
imul
inc
std
pop
aas
xor
xchg
fiadds
xor
ja
scas
inc
imul
pop
xchg
jbe
jecxz
and
aam
mov
mov
sbb
jmp
sbb
test
xor
sbb
xchg
test
jo
jae
push
mov
cmpsl
sub
mov
lods
fsubl
scas
pop
jge
iret
push
xchg
cs
mov
and
xchg
adc
push
sahf
pop
enter
lea
push
and
stos
mov
xchg
add
xchg
movsb
push
push
cmp
je
mov
mov
out
outsb
xchg
fldl
in
daa
insl
loopne
and
sub
xchg
shl
jb
fistpl
jnp
jns
pop
aad
and
inc
mov
lret
pop
mov
dec
sub
sub
ljmp
push
fmul
jne
mull
mov
fwait
sub
dec
nop
mov
or
int
xor
inc
test
pop
ficompl
insb
fldt
das
jbe
into
mov
rol
stc
xchg
xor
insl
icebp
in
add
push
iret
sbb
sarb
xor
in
jne
ret
jmp
sbb
gs
push
and
sub
repnz
pop
mov
sarb
and
xchg
cmc
fwait
repz
push
dec
outsl
lcall
cwtl
push
adc
mov
or
rcll
jae
mov
mov
stc
cmpsl
ljmp
rclb
mov
xchg
adc
jbe
test
hlt
sbb
lods
out
andl
scas
mull
and
popf
ja
or
mov
jl
data16
into
or
xor
in
push
mov
sbb
ss
stc
inc
xchg
jno
jne
hlt
mov
mov
sti
mov
jg
call
fisubl
mov
enter
rcll
mov
mov
cmc
frstor
push
int
adc
std
add
pop
push
cmpsb
and
or
dec
outsl
jl
sub
cmp
pop
push
cli
or
sub
adc
sub
outsl
loop
xchg
adc
pop
enter
insl
sub
dec
adc
pusha
cmpsb
jmp
pop
cmpsb
lcall
mov
or
add
nop
dec
repz
inc
sub
mov
jle
repnz
jle
mov
test
in
nop
cmp
divl
xchg
dec
loope
mov
mov
or
iret
xchg
popa
or
mov
sub
adc
lods
dec
cs
cmp
dec
testl
or
rorl
arpl
inc
repnz
adc
pop
outsb
push
inc
hlt
add
test
push
pop
fsubp
insb
loope
mov
aam
add
ret
add
pop
pop
jmp
add
xchg
xor
test
push
popa
ret
sbb
or
cmp
cmp
and
or
sbb
imul
mov
mov
daa
mov
xchg
movsb
es
inc
pop
cmp
mov
scas
pop
sub
pop
cmp
dec
out
addl
cmp
loope
sub
pop
xchg
and
out
jg
aas
add
in
push
inc
adc
xchg
fwait
add
cld
pop
flds
push
add
loopne
frstor
fistl
iret
sbb
cwtl
rcrb
mov
addl
push
inc
inc
lcall
or
sub
pop
jbe
sbb
dec
dec
cmpsl
mov
movsl
lds
add
jne
dec
add
fsubr
xor
mov
test
push
jmp
insb
sbb
push
add
pop
cmpsl
dec
cltd
sub
ja
adc
ret
arpl
movsl
cltd
shrl
and
fcoml
leave
addr16
stos
ja
pop
push
lods
or
popf
outsl
data16
movups
shl
mov
mov
dec
dec
icebp
notl
movsb
cmpsl
nop
out
bound
xor
jge
push
aad
cmpsl
add
or
int3
sahf
data16
enter
dec
mov
lds
ficompl
fs
lods
add
push
cmpsb
std
and
clc
sub
fwait
pop
leave
shl
jb
mov
bound
hlt
pop
mov
jno
in
lret
fwait
add
icebp
ds
xchg
test
mov
inc
cmc
adc
fidivrs
dec
dec
cmc
mov
nop
push
daa
cltd
rolb
arpl
adc
push
xor
pop
fdivl
test
testl
sbb
and
je
int3
pop
movsb
xchg
ss
adc
push
xor
and
insb
loopne
ljmp
mov
inc
xor
addb
imul
and
xor
sub
cmpsb
xlat
mov
push
fsts
or
outsb
idivb
mov
pop
inc
aad
push
negb
and
push
negl
fxch
mov
mov
mov
mov
inc
mov
mov
sub
outsl
out
xor
sub
pop
xor
sbb
lods
xchg
dec
movsb
cmp
mov
adc
xlat
add
xor
movsl
jle
bound
in
pop
xchg
leave
sub
or
out
es
insb
push
ja
cs
lea
push
jno
xchg
and
lds
mov
cmp
sub
or
out
sbbl
pop
sub
pop
imulb
leave
add
adc
mov
mov
or
int
push
pop
rcl
sub
cmp
out
jb
loop
jne
cmp
cwtl
sbb
inc
jno
and
adc
fbld
inc
push
push
jle
mov
or
cmpsb
cmpsl
in
lcall
or
mov
jo
jns
mov
or
dec
push
test
outsl
insl
pop
or
lock
data16
xchg
jmp
loope
gs
mov
ret
adc
sub
gs
push
iret
test
sbb
mov
inc
shll
inc
in
add
xchg
mov
lods
sub
dec
xchg
inc
loope
or
pop
cmc
cld
clc
inc
jnp
inc
and
cmpsl
push
nop
push
xchg
mov
sarb
xchg
test
pop
out
push
pushf
cmp
xchg
mov
movsl
and
adc
cmpsw
in
push
inc
mov
inc
lahf
xor
mov
xchg
mov
sub
mov
int3
mov
dec
out
lods
pusha
dec
mov
cmp
mov
xchg
sbb
pop
or
lds
nop
mov
insb
cs
rcll
add
sub
xchg
mov
mov
jge
add
daa
inc
mov
cmp
push
or
movsb
xor
push
and
mov
mov
lods
ret
mov
out
inc
test
or
test
lock
jno
out
ljmp
nop
cmc
data16
addl
xor
jae
lret
adc
mov
and
insb
or
aam
clc
fistl
xchg
hlt
mov
push
sub
and
or
pop
mov
pop
lcall
or
scas
dec
or
inc
sbb
fisttpll
icebp
jecxz
inc
shr
xchg
push
and
mov
pushf
xor
movsl
gs
mov
jno
movsb
insl
xchg
ja
fidivl
adc
push
push
rolb
push
sub
mov
out
lret
scas
in
pop
loopne
pop
cli
out
in
divl
les
xchg
loopne
repz
push
into
mov
add
into
sub
push
push
mov
xchg
pop
pop
xchg
ss
in
fwait
mov
or
xchg
pop
cmc
push
cmpsl
add
sub
ja
in
add
arpl
jae
inc
gs
testl
jne
push
in
out
sbb
sbb
mull
xchg
push
scas
xchg
js
imul
mov
cld
push
test
xor
andb
inc
int3
cmc
shr
stos
sbb
pop
aaa
pop
leave
dec
cli
cmp
rclb
push
and
cwtl
iret
loop
jo
std
fcomps
mov
ficoml
inc
pop
das
cmp
push
inc
cmpsb
mov
cltd
es
loop
loop
pinsrw
xchg
mov
or
xchg
xchg
ds
cmp
in
adc
sub
xor
sbb
mov
ds
shlb
rcl
push
dec
inc
sbb
aad
mov
or
mov
xchg
inc
or
pop
out
xchg
ret
xchg
push
or
sbbl
stos
xchg
jmp
jmp
movl
mov
xchg
inc
dec
das
ljmp
nop
or
pop
mov
push
push
loopne
jns
cld
jo
pop
push
mov
mov
xchg
xchg
push
int3
popa
jae
pop
and
notl
xor
js
aad
addr16
cmp
rorl
adc
add
scas
ror
mov
mov
jo
int3
nop
cmpsb
inc
xchg
xchg
jl
mov
ret
sub
xor
jl
stos
add
icebp
xor
add
repz
out
jb
addl
inc
fsubp
adc
scas
inc
ds
arpl
mov
leave
hlt
inc
daa
sti
dec
and
imul
dec
test
mov
adc
cmp
int
xor
out
cmpsb
mov
xor
lock
mov
cmp
data16
das
dec
negl
in
repz
scas
push
xor
cli
adc
clc
cmp
push
lea
jno
sub
rclb
mov
lahf
inc
xchg
lahf
test
push
icebp
jbe
nop
mov
push
into
cmp
loop
and
cmpb
mov
mov
add
jge
dec
outsl
insl
sub
push
imul
inc
cmpsb
test
mov
and
push
in
into
ja
adc
dec
mov
mov
adc
inc
pop
mov
pop
mov
dec
mov
fnstsw
mov
mov
jle
sub
bound
iret
jae
rclb
lret
jns
or
aas
push
pop
add
or
je
xor
or
lcall
arpl
dec
je
mov
mov
pusha
iret
and
dec
lods
test
test
adc
cmp
ret
cmp
ficomps
jg
xor
mov
cwtl
or
iret
nop
sbb
and
lahf
dec
mov
cmp
in
mov
xlat
xor
mov
xchg
outsb
fwait
cmpsl
ficompl
mov
or
in
jns
sub
call
and
jne
mov
clc
loope
out
xchg
mov
ss
out
inc
mov
xor
pop
mov
push
je
out
mov
push
pop
mov
les
loopne
int3
stos
mov
popa
xor
add
sbb
aaa
mov
or
or
push
sub
lods
cmp
mov
and
add
dec
dec
repz
nop
sbb
push
mov
and
adc
into
adc
pop
mov
pop
mov
out
jecxz
in
push
dec
mov
xchg
jp
leave
dec
sbb
xchg
testl
clc
sbb
push
dec
fsubrl
clc
popf
and
shl
xchg
adc
repz
mov
cmp
xchg
dec
push
mov
stc
das
imul
mov
addb
loop
in
mov
cmpsb
pop
in
and
test
dec
fabs
popf
pop
repz
jg
push
repnz
mov
dec
pop
mov
xchg
loope
inc
inc
add
fs
jne
cmp
mov
pop
push
lret
das
add
and
pop
pop
xlat
dec
loopne
inc
stos
hlt
mov
xchg
or
xor
xchg
or
push
cmp
dec
sub
add
inc
sub
mov
scas
and
sbbl
xor
lods
mov
dec
inc
push
insb
lcall
les
adc
xchg
xchg
mov
push
push
pusha
add
jae
rolb
inc
push
out
cmp
and
cmpsl
xchg
shlb
and
jo
xor
mov
xchg
xchg
mov
jb
dec
jp
shll
out
jmp
push
cmp
dec
push
mov
or
negb
push
imul
sub
aad
mov
adc
iret
dec
cli
xor
pop
xchg
out
jae
push
xchg
inc
push
xor
push
outsl
push
notb
cwtl
lock
push
inc
xchg
das
scas
sub
and
sub
lods
incl
mov
in
int
arpl
js
add
or
and
dec
scas
mov
jnp
jl
pop
pop
js
test
imul
dec
in
lret
stos
stc
cmpsl
scas
lahf
pop
outsl
insb
nop
stc
call
xchg
sbb
cmpsb
push
lret
and
insb
add
stos
in
imul
divl
fs
ja
mov
std
jge
out
popf
mov
xor
rclb
push
mov
cmpsl
jg
popf
push
ret
jecxz
xchg
es
adc
imul
dec
push
ljmp
pop
test
les
xchg
mov
stos
dec
or
xorl
jb
fsubp
xor
das
fucomp
or
sbb
aaa
jo
fs
cmpsl
push
inc
dec
and
and
jo
sbb
ljmp
mov
dec
lods
jne
scas
ja
mov
rcrl
jmp
sarb
pushf
mov
cmp
cs
pop
ljmp
call
jbe
cmp
idivl
test
es
ret
sub
jl
fnstcw
lea
mov
cs
pop
cmp
mov
or
fidivrs
or
shr
mov
mov
or
jmp
pop
insl
sub
cmp
icebp
or
scas
lea
push
sub
push
push
pop
sbb
sbb
inc
push
rolb
subl
sbbl
out
push
xchg
std
or
xor
ret
fidivl
cmp
in
nop
push
sti
push
jp
pop
jp
adc
mov
adc
or
inc
mov
lods
mov
dec
call
hlt
popl
lock
jl
lret
pushf
fdiv
inc
ret
testb
add
or
lds
movsl
bound
and
out
outsl
xchg
test
jbe
pop
sub
or
popa
movsl
cmpb
push
fwait
sub
mov
cs
lret
xchg
imul
push
in
jl
aad
or
ficomps
popa
mov
or
cmpl
xlat
jle
pop
jno
mov
gs
xchg
cwtl
gs
lea
add
scas
mov
ljmp
mov
fsub
fcmovne
mov
sbb
jmp
cld
loop
and
adc
sbb
ja
stos
push
movlhps
pop
pop
push
lret
cmpsb
in
addb
cmp
cmp
or
sbbb
cmc
push
jp
imul
sbbl
adc
fwait
sbb
cmp
popa
mov
scas
mov
sub
or
dec
test
sub
adc
lret
std
ds
sbbl
cmpsb
push
xor
mov
mov
push
inc
mov
pusha
push
add
push
or
xor
in
and
lea
jecxz
repz
ljmp
xorl
in
sbb
push
and
xchg
mov
cmpsb
mov
ficompl
lret
adc
movsl
cs
sub
aad
and
scas
inc
cmp
insb
sti
fistpl
cli
ds
add
jno
push
test
leave
and
aaa
pop
mov
and
mov
mov
dec
insl
loope
xchg
lret
mull
mov
or
testb
push
xorl
sarb
add
gs
or
add
gs
mov
orb
imul
loopne
das
fdivs
aam
sbb
adcl
loop
inc
fsubrs
scas
cmp
fnsave
xor
jmp
ss
pushf
iret
mov
out
dec
ljmp
pop
ljmp
icebp
repz
scas
cmp
out
gs
pushf
scas
pop
in
jmp
jmp
mov
ljmp
xor
inc
ljmp
ds
fcomps
pop
loopne
ret
test
stos
clc
inc
pop
sub
pop
mov
adc
ljmp
lea
enter
mov
cmpsb
and
sbb
bound
inc
cwtl
je
cmp
mov
outsl
and
and
test
testb
jle
cltd
mov
and
mov
jb
lret
lods
mov
out
pop
jge
cmpb
push
fildll
popa
frstor
rol
push
addr16
adc
mov
ret
notl
and
stos
sub
mov
pop
mov
cmpl
pusha
test
pop
xchg
call
sti
xorl
out
out
pop
call
mov
sub
shlb
pop
push
std
cmp
ret
int3
or
add
icebp
fdivr
mov
dec
push
mov
xchg
ret
jmp
pop
push
test
cltd
mulb
insl
cmp
out
add
sub
in
fstpl
mov
filds
mov
test
xor
pop
or
addr16
sbbb
push
int3
mov
hlt
into
push
imul
push
mov
cmp
and
cmpsl
mov
data16
cld
movsb
jp
inc
inc
and
stos
loop
outsl
lret
pop
mov
clc
popa
lods
in
loope
fists
movsl
mov
cmpl
js
ljmp
mov
mov
cmp
in
sbb
nop
scas
jp
daa
xchg
cmc
jecxz
cmp
jg
repz
lahf
pop
push
sbb
dec
repnz
jno
lock
jge
add
mov
in
push
sub
xchg
lret
push
mov
adc
dec
mov
dec
jmp
lods
loop
shl
xchg
pop
lret
inc
pushf
jle
cmp
dec
fcoms
fdivrl
aas
scas
inc
jl
jno
hlt
push
cmpl
cmc
lea
shlb
jge
mov
inc
das
sbbl
imul
fs
xchg
fs
and
mov
sbb
mov
outsl
out
add
shr
loop
scas
mov
jo
or
mov
mov
ficoms
push
xchg
adc
mov
jecxz
xor
cwtl
mov
mov
adc
fsubrl
fcoml
ret
or
in
pushf
push
ss
pop
or
and
mov
jo
push
outsb
push
add
fstl
cmp
pop
and
das
shrb
clc
jo
push
movsb
arpl
fisubrl
inc
out
fdivrl
mov
jp
cmpsl
gs
loopne
decb
mov
orl
sub
lret
push
int
push
jg
push
jnp
add
mov
adc
mov
pop
ja
inc
in
aad
cmp
outsl
out
jle
add
das
shl
out
xchg
arpl
or
loop
leave
mov
dec
mov
testl
mov
lret
mov
clc
xchg
lods
cld
jl
lret
data16
scas
popa
test
mov
push
ljmp
shrb
lods
jb
mov
ret
or
aad
push
shl
aam
scas
stos
fcmove
bound
lea
inc
mov
les
insl
cmc
mov
xor
sbb
insb
push
mov
jbe
movsl
sub
cmp
int
mov
push
dec
icebp
shlb
inc
add
jno
cmpb
sub
push
jecxz
sub
jne
or
push
jmp
pusha
or
aam
daa
daa
adc
out
push
inc
push
mov
cwtl
pushf
adc
dec
jb
mov
mov
jae
xchg
mov
and
sub
loope
or
mov
leave
pop
sub
mov
xchg
pop
add
lahf
pushf
cmpl
pop
ds
ss
into
arpl
xor
dec
or
int
push
pop
std
fwait
ret
push
pop
inc
adc
mov
aas
sub
pop
jnp
jl
pop
push
aad
mov
popa
out
adcb
mov
push
or
cmpsb
in
push
xchg
add
adc
mov
xchg
add
jmp
jecxz
loopne
cmp
add
pop
mov
adc
xchg
lock
loopne
aaa
push
adc
xchg
xor
dec
push
ljmp
mov
rorb
pop
int3
jns
fs
push
mov
ds
push
jns
leave
fs
mov
pop
ret
pop
pop
idivb
xor
or
push
mov
xchg
push
sub
cmpsl
mov
mov
cmc
ljmp
lds
xchg
and
js
mov
lcall
aam
in
in
xchg
stos
mov
fldenv
ss
jno
xchg
cmpsb
cltd
push
nop
push
rcrl
adc
pop
bound
test
test
dec
pop
in
lods
pop
or
inc
mov
fs
stos
stc
jecxz
pop
push
int
in
and
repz
jae
jo
mov
jae
aas
sbb
xchg
mov
das
jae
out
cld
in
push
dec
cli
test
dec
jg
ret
test
mov
fimull
jg
shll
lock
addl
adc
jae
and
mov
or
xlat
mov
sbb
seta
jge
sbb
inc
dec
sub
inc
out
dec
cs
adc
jo
scas
int
xor
mov
push
cmp
test
mov
jae
or
fcmovnb
addl
ljmp
js
inc
mov
dec
pop
adc
xor
shlb
hlt
jp
mov
pop
fcomps
jg
ljmp
xor
les
fcoms
or
or
stos
xchg
gs
dec
push
pop
decb
mov
sub
imul
fnstcw
stos
or
add
mov
sarl
inc
add
cmp
fs
cmp
dec
gs
xchg
add
mov
cmp
fwait
push
jmp
pusha
ljmp
push
int3
fisubrl
xor
bnd
mov
jecxz
jno
enter
movsb
mov
cmpsb
jmp
mov
imul
mov
mov
dec
mov
sbb
mov
out
gs
pop
jns
outsl
pop
in
movsl
push
dec
dec
scas
ss
sub
sub
xchg
mov
push
rcll
es
call
lds
pop
mov
mov
pop
push
popa
adc
push
xchg
std
mov
rcl
push
sbb
cmp
sub
jo
inc
push
lcall
mov
sbb
rolb
and
mov
enter
mov
test
dec
xor
mov
js
push
push
lcall
jno
and
or
bound
outsb
call
pop
cwtl
adc
ljmp
cmp
xchg
mov
fidivrl
pop
jg
movsl
mov
mov
and
aam
adc
adc
dec
fsts
sub
insb
cmp
and
test
inc
add
pushf
xlat
sub
lret
repz
fdivl
sbb
jmp
loopne
xlat
fstpt
hlt
loopne
mov
xchg
mov
push
or
cltd
outsl
mov
push
rcll
in
inc
dec
popa
sub
punpcklwd
movsb
and
scas
lea
stos
sbb
mov
pop
es
or
xor
loope
sbb
sub
sub
stc
sub
leave
xor
sub
sbb
pop
leave
mov
out
push
pusha
xchg
sahf
mov
insb
inc
xchg
sbb
xor
and
int3
sti
mov
adc
jnp
mov
rolb
cmp
mov
mov
push
pop
pop
jg
sbb
push
mov
rorl
sub
insl
dec
fwait
test
dec
or
repz
jb
xor
fnstsw
jb
outsb
xchg
lods
push
xor
stc
js
pop
sbb
insb
mov
push
mov
repnz
ret
mov
or
jmp
cmp
add
cmp
stc
fwait
cwtl
xchg
push
adc
cwtl
cmc
aad
insl
outsl
sub
gs
bswap
sahf
bound
fildl
lock
lret
je
jbe
pop
xorl
push
sbb
jbe
insl
fldt
testl
fsubr
pop
push
xchg
or
and
xchg
push
sbb
arpl
icebp
cmp
mov
and
fs
and
cmp
int
add
std
xor
xchg
sub
mov
and
std
les
lret
mov
cmp
push
cwtl
cmp
and
insl
imul
adc
js
mov
mov
stos
lahf
cwtl
dec
push
sbbl
insb
sub
xchg
xchg
mov
mov
mov
xchg
inc
pop
and
cmp
in
pop
mov
rol
sbb
jle
int
sbb
les
and
rcl
or
imul
sbb
or
dec
hlt
mov
icebp
sti
push
push
push
mov
int3
fsubs
rclb
orl
daa
jbe
inc
aaa
adc
rcrb
call
xchg
inc
xor
adc
fisttpll
adc
lret
cmp
stc
mov
jnp
push
mov
sbb
xchg
cmc
outsl
loop
add
cmp
in
mov
jne
test
gs
aas
lods
xchg
jbe
arpl
rcr
mov
jb
scas
dec
xchg
add
jae
pop
push
movsl
sub
push
sbb
es
pop
xchg
sub
test
mov
mov
pop
mov
or
fnsave
icebp
jo
sahf
inc
jp
in
xchg
cwtl
aas
mov
lcall
mov
fwait
imul
push
push
xor
jb
and
movsl
int
and
adc
push
xchg
adcl
sub
mov
adc
fiadds
push
in
mov
push
leave
fnstsw
lret
xchg
add
dec
add
pop
pop
push
and
mov
or
or
inc
fidivrl
push
mov
scas
inc
or
mov
xor
push
cs
mov
xchg
cltd
enter
xchg
shll
ficompl
std
lret
daa
fbld
ljmp
inc
out
js
push
or
lret
mov
adcl
fs
repnz
mov
mov
and
add
aaa
rep
push
push
xchg
and
in
mov
lea
pop
stos
in
cmp
dec
fs
sbb
or
or
jp
hlt
pop
repnz
inc
mov
mov
jmp
sub
adc
xchg
adc
or
inc
fisubl
pop
rolb
push
aam
mov
bound
inc
popfw
push
rcll
imul
nop
test
xor
push
sub
jnp
xchg
xchg
push
out
icebp
sbb
int
pop
xchg
das
sbb
cwtl
add
mov
jnp
xchg
mov
pop
inc
sbb
in
pop
repz
test
push
lret
or
cli
imulb
jge
add
cmpsl
or
jle
test
and
adc
cltd
out
jle
int
xchg
inc
orl
repnz
xor
pop
sbb
in
in
adc
shlb
mov
adc
mov
ja
cmp
leave
jmp
xchg
ja
mov
xor
fistl
daa
mov
arpl
cmp
testb
jno
push
xchg
ret
push
xchg
or
and
xor
sbb
jb
out
mov
fucom
sub
enter
out
xchg
popa
leave
sbb
insl
sub
sbb
aad
mov
idivb
mov
dec
pop
in
mov
jne
cli
repz
aas
xor
scas
dec
push
pop
mov
lret
and
rorl
inc
cwtl
test
xchg
mov
imull
sub
cli
js
jae
mov
xchg
cmp
mov
cmpsl
iret
cld
cmp
push
sti
cli
ss
mov
or
xchg
adc
push
lock
loopne
jo
stos
jl
int3
cmpsl
pop
cmp
adcb
inc
jb
xlat
aaa
xchg
xor
inc
adcb
pop
pushf
and
adc
scas
mov
adc
int3
push
stos
ss
clc
xor
mov
xchg
movsl
lea
clc
mov
pop
sbb
out
pop
pusha
dec
scas
pop
mov
xchg
insl
and
sbb
cmc
movsb
insl
xor
xchg
jecxz
inc
jg
outsb
mov
les
outsb
or
sub
mov
xor
andb
aaa
stc
mov
mov
adc
movhps
mov
les
mov
mov
aam
fs
jg
fidivrs
bound
imul
popa
lock
jne
inc
lods
and
push
and
out
adc
fcoml
cmp
and
in
sub
rorb
jae
jmp
cmpsl
rclb
leave
push
mov
and
xor
xchg
into
xchg
stos
imul
xor
xor
clc
inc
mov
movsb
dec
or
iret
icebp
dec
aam
xchg
loopne
test
fadd
imul
mov
dec
ret
lods
lahf
and
ja
outsb
or
daa
in
out
inc
pop
xchg
test
outsb
lea
push
jno
fidivl
scas
das
mov
sarl
mov
fnstsw
and
clc
mov
std
stc
pop
scas
cld
stos
push
xchg
mov
xchg
lds
inc
sahf
cmc
fs
xor
insb
mov
push
or
xchg
cmp
cmp
in
sub
test
cmpl
sti
and
pusha
cwtl
jbe
stos
dec
push
je
int3
bound
stc
lret
sub
lahf
outsl
repz
movsl
sub
add
popa
and
clc
in
mov
dec
inc
xchg
sub
jmp
std
add
aaa
ljmp
test
test
push
orl
dec
sbb
mov
mov
adcl
outsb
adc
push
ret
mov
lret
test
jmp
adc
inc
stc
adc
or
lret
sarl
mov
hlt
pop
std
test
cmp
add
std
xor
popa
in
adcb
jecxz
jge
loope
test
adc
sti
pop
mov
mov
lea
push
add
mov
jne
mov
dec
pop
jo
notl
and
dec
cltd
cmp
test
and
mov
push
movsb
or
loope
sbb
mov
sub
mov
jecxz
ja
test
dec
jb
xor
push
push
mov
push
push
push
pop
and
sub
outsl
das
shll
xchg
clc
fs
lret
mov
xor
xchg
mov
outsb
sbb
pop
outsl
xchg
xchg
out
inc
or
mov
xchg
ja
add
fstps
inc
icebp
es
sbb
out
mov
movsl
leave
sub
popa
mov
mull
addb
in
xor
jg
pop
subl
push
and
pop
jnp
cmp
loop
pop
jns
jns
dec
mov
gs
shrl
out
arpl
idivb
adc
sub
mov
jno
lea
divb
dec
mov
pop
push
and
inc
or
ja
sahf
cmp
aas
inc
mov
mov
dec
imul
sbb
or
adc
fwait
ljmp
lock
push
ret
scas
ss
lock
mov
sbb
adc
fsubrl
outsl
mov
insb
inc
sbb
pop
adc
in
ss
push
incl
add
sub
lock
xor
adcb
lret
ds
test
ret
mov
add
out
rorl
or
lahf
addl
lret
lods
lcall
mov
cli
dec
aaa
mov
jnp
push
inc
or
aad
cltd
jl
sbb
inc
movsb
repz
xchg
sar
adc
mov
xchg
lcall
jl
mov
fstpt
das
xchg
adc
ja
fmuls
pop
xor
sub
jns
push
and
push
push
loope
xchg
cli
insb
and
jne
cmp
ljmp
dec
push
lods
popf
xchg
cmp
shr
gs
push
mov
and
add
and
aaa
push
xchg
mov
or
mov
neg
mov
cs
mov
rcrl
mov
sub
loop
out
fwait
scas
iret
ret
sahf
xchg
inc
push
pop
jl
inc
ficomps
outsl
inc
add
jb
daa
arpl
xchg
imul
addr16
adc
jbe
sbb
mov
movsl
or
dec
fcmove
pop
xchg
insl
or
loopne
dec
rclb
pop
iret
adc
sbb
iret
dec
xchg
or
and
push
push
inc
into
inc
xchg
cmp
lods
test
movsl
cmpl
pop
cmp
xor
adc
hlt
mov
mov
add
out
sub
inc
jo
popf
jp
scas
mov
adc
and
xor
aas
cmpsl
aad
mov
jmp
into
mov
in
xlat
cmpsb
mov
popf
xchg
pop
sbb
outsl
jmp
mov
adc
ret
sub
mov
push
frstor
repnz
push
xchg
and
testl
insb
push
jle
fbstp
xchg
or
mov
jns
adc
or
loope
aad
in
jbe
adc
loop
repnz
negb
push
dec
ret
pop
mov
testb
ret
cmp
sub
jbe
les
cli
mov
imul
sbb
ficompl
jl
icebp
rcrb
lahf
xor
pop
add
mov
xchg
call
cs
bound
or
push
lret
pavgw
cs
pop
lret
and
adc
sub
mov
push
xor
jbe
ficompl
aas
add
add
dec
sbbl
mov
pusha
popf
xchg
jmp
and
add
inc
or
loopne
sub
jb
out
loope
sub
arpl
idiv
loop
ret
ljmp
rcr
mov
push
pushf
inc
mov
sbb
dec
cmpsl
mov
xchg
icebp
sub
cmpsb
js
stos
rorl
icebp
pop
pop
iret
push
add
in
imull
sbb
sahf
outsb
scas
loopne
out
insb
mov
pop
push
sub
pop
xchg
sbb
enter
daa
mov
cmpsl
mov
bound
mov
pop
sub
test
hlt
mov
sbb
dec
sub
pop
push
sbbl
or
adc
xorl
fstl
adc
jbe
fsts
outsl
add
pop
fsub
out
sbb
std
jbe
push
jns
cmp
jb
inc
or
cmp
ret
or
lock
lods
or
popf
dec
shlb
xor
lcall
mov
sub
loope
es
addr16
add
iret
xor
scas
sbb
popf
jbe
les
jno
adc
movsb
jb
inc
ret
jne
jo
js
dec
cwtl
xlat
pop
mov
fsubrs
or
lds
add
jecxz
pop
inc
fwait
icebp
in
xor
and
out
gs
in
mov
rcrb
sbb
and
sti
cmpps
addr16
insb
jns
mov
stc
fsubrp
fnstsw
jp
push
imul
ljmp
sbb
push
cmp
decl
lcall
mov
mov
pop
jbe
mov
mov
insb
sbb
idiv
ffree
inc
inc
push
aas
test
sbb
sbb
sbb
pushf
bound
mov
sbb
cmp
jb
rorb
cmp
roll
push
scas
inc
call
mov
maxps
jge
xor
xchg
rclb
roll
or
lahf
lret
mov
jg
push
rcrb
into
push
int
out
cmp
imul
insb
adc
dec
ret
pop
mov
xor
insl
pop
mov
rcrl
ss
adc
pop
fwait
int3
sbbl
xor
popf
sub
dec
jnp
pop
xor
nop
mov
xor
orb
fistpl
outsb
int
push
xor
lret
or
add
pop
and
cmp
rcrl
inc
inc
mov
outsl
shr
aam
test
arpl
and
inc
and
fst
jecxz
insb
mov
push
std
es
push
pushf
xchg
int
jmp
mov
add
data16
push
lcall
ja
jge
gs
popa
shll
shl
xor
pop
mov
xor
mov
out
sbb
jno
lock
mov
stos
xchg
shll
jecxz
xchg
xchg
dec
push
movsb
cmpsb
sub
and
fs
addb
mov
mov
jmp
or
pop
cmpsl
pop
scas
mov
in
outsl
mov
jmp
fcomps
jg
or
sarl
fdivs
dec
pop
outsl
ja
sub
in
mov
mov
adc
jecxz
jg
lods
lcall
sub
and
ss
mov
xchg
xor
enter
cmpsb
sahf
pop
jbe
popf
ret
xchg
sbb
or
popf
popa
ret
imul
jno
out
fwait
notl
mov
mov
or
xchg
inc
std
ss
push
adc
outsl
jmp
cmc
lds
xor
negb
mov
std
out
xor
iret
inc
and
cmc
adc
test
jmp
sub
sbb
jne
fisubrl
fdivs
jle
pusha
shr
jmp
dec
push
fcoml
fnsave
inc
rcrb
xchg
mov
insb
movsl
mov
sarl
cmp
sti
movb
movsb
int3
push
mov
loope
adc
lret
leave
xlat
fcompl
pop
add
ror
adc
xor
adc
mov
shrb
push
adc
dec
sbb
jge
cmp
popa
xlat
scas
aas
jo
dec
pop
mov
mov
inc
je
push
sub
gs
mov
jecxz
mov
test
add
insl
xor
nop
imul
xor
jp
aaa
movsb
dec
into
test
rcll
scas
mov
inc
inc
jmp
jmp
mov
imull
dec
sub
push
fcoml
push
test
mov
push
xchg
pop
mov
mov
mov
jl
lock
inc
push
pop
mov
mulps
out
test
sbb
enter
bound
and
push
das
mov
adc
cmpsl
fnstcw
fucomp
rcrl
mov
cltd
es
jne
and
push
pop
das
adc
imul
push
mov
xor
cmc
scas
xor
sub
cmc
push
and
sub
xor
cmp
push
jbe
mov
push
jne
adc
stos
loop
inc
xchg
or
lods
ljmp
lock
jmp
push
stc
cwtl
sbb
sbb
outsl
scas
xchg
subl
xor
cmpb
push
rol
add
scas
stos
out
popf
cmp
dec
popa
fists
cmpsb
mov
fsubrp
shr
lock
call
outsl
mov
jno
xor
xor
adc
adc
xchg
das
insb
mov
push
inc
add
loope
or
dec
xor
dec
xchg
push
adc
xor
insl
push
pop
leave
xor
or
addr16
in
loop
and
mov
mov
jge
inc
pop
call
cmc
cld
push
fimuls
cmpsb
cmp
hlt
sti
gs
dec
lcall
mov
dec
pop
test
xor
lret
dec
mov
cmp
and
xorl
adc
nop
dec
pop
cmc
mov
fdivrl
adc
cmpsb
pop
movb
out
sbb
clc
dec
arpl
sarl
mov
sub
fcom
lret
push
je
adc
loope
lret
cmp
leave
push
inc
insl
dec
mov
inc
loop
out
push
adc
les
push
dec
push
stos
das
dec
addr16
pop
jbe
es
jb
movsl
mov
jne
cmp
repz
in
mov
enter
mov
ja
adc
adc
inc
cmp
xchg
ds
sbb
insl
js
jo
xor
mov
mov
xchg
dec
xchg
mov
xorl
leave
stos
dec
jle
out
es
sti
loope
outsl
xor
ds
jge
mov
push
imul
stos
xchg
sub
int3
lods
jo
or
jnp
idivl
mov
inc
jmp
loop
fdivr
fs
add
arpl
sti
stc
setae
cmp
sbb
mov
jo
xchg
addr16
pop
jb
cs
fists
mov
xor
sbb
sub
mov
lods
adc
xor
inc
or
shr
lds
mov
cmp
pop
xor
lods
push
adc
in
cmp
fists
adc
inc
daa
cli
int3
adc
pop
cmc
mov
mov
jne
dec
mov
enter
xlat
hlt
mov
push
roll
sub
idiv
pop
pop
push
jp
ret
das
setae
lds
fidivs
mov
xchg
imul
lds
rcll
mov
into
or
outsb
cmp
cmp
or
out
mov
mov
stos
sub
cmp
scas
pop
sbb
lds
gs
fcmovnb
mov
push
cli
sub
js
ror
sbbl
test
cwtl
jmp
cmpsl
mov
mov
mov
push
pushl
push
push
call
mov
mov
shrd
shr
shr
xor
push
xor
mov
jmp
jl
in
sub
adcb
or
mov
adc
sub
push
push
xor
ret
out
aam
sbb
or
loope
ss
je
xchg
cwtl
pop
call
popf
negl
mov
out
and
ljmp
enter
pop
and
mov
dec
inc
imul
lods
andb
mov
dec
sub
adc
cmpsl
cmpsb
xchg
jmp
cmp
pop
stos
jg
push
stc
ret
dec
jne
pop
int3
loope
popf
and
lcall
sbb
dec
mov
push
dec
lods
sbb
das
pop
mov
loop
shll
add
cltd
fbld
or
xchg
add
outsb
mov
dec
mov
outsl
cmpsb
mov
mov
loop
rcr
fwait
inc
push
imulb
adc
inc
xlat
sub
mov
and
shl
les
gs
or
push
imul
icebp
outsb
xchg
adc
or
pop
cmp
pop
mov
mov
mov
sub
xor
or
andb
jmp
aaa
push
xor
jb
fisubrs
inc
inc
fldt
sub
dec
ljmp
addr16
sub
push
xchg
cmpsl
fimuls
test
jne
addr16
movsb
add
or
mov
pop
dec
mov
mov
cmp
mov
adc
mov
jg
push
popa
xor
enter
jno,pn
into
sti
xor
std
int
dec
sub
lret
je
ret
movhps
ss
imul
or
outsl
fucom
enter
enter
xchg
ret
lock
adc
push
pop
test
fistl
stos
jnp
addr16
xchg
arpl
sub
and
cmp
sahf
repnz
fmuls
into
mov
mov
inc
xchg
ljmp
xor
fisttpl
ret
inc
imulb
sub
std
or
pop
ficoml
and
out
cmc
cmp
je
sbb
inc
push
movsl
aad
pusha
lahf
xchg
loope
mov
sbb
mov
jae
andb
and
jl
pusha
test
imul
pusha
sub
jg
stc
loop
mov
jb
lahf
push
add
mov
sub
sahf
repz
cld
pop
jne
aas
xor
jne
out
mov
lods
imul
sub
enter
mov
into
add
in
bound
out
jg
rol
cmc
fmul
inc
or
or
int
sub
adcl
xor
adc
lea
add
sbb
iret
sub
mull
pop
mov
or
xor
add
shlb
cwtl
fs
ljmp
in
mov
add
jl
dec
xchg
sub
loopne
test
scas
xor
nop
sbb
out
cltd
fmul
ss
and
or
xor
sub
sub
mov
lea
fnstsw
imul
xor
jecxz
ss
sub
dec
sub
adcb
movsb
mov
lock
push
fistpl
adc
jp
ja
and
loop
ffreep
sbb
out
mov
aaa
jae
sti
cmp
imull
fsub
sub
sbb
push
xlat
or
push
and
movsb
mov
bnd
leave
enter
xor
cmp
leave
loopne
loopne
cmp
ret
movsl
sbb
cmp
das
insb
jb
std
xor
xchg
das
jbe
addr16
pop
inc
repz
adc
lcall
ds
std
xchg
in
movb
mov
sbb
dec
adc
adc
sar
clc
push
push
dec
inc
shlb
xor
adc
pop
or
push
mov
cmpsl
idivb
sbb
cmp
and
lods
sub
pop
adc
pusha
add
inc
sbb
std
push
pop
fistps
mov
mov
pop
fisubs
add
pusha
xchg
adc
aad
sub
sub
iret
lcallw
js
stos
in
cmp
mov
fwait
mov
cmp
mov
jns
or
xlat
inc
fsubrs
das
movb
aas
fmulp
pop
sbb
mov
out
out
adc
mov
inc
mov
cwtl
mov
mov
jle
cmpsb
test
cmpsb
loope
xchg
adc
lret
mov
call
fisttpll
icebp
mov
pop
dec
insb
push
cmc
loop
inc
and
sub
jae
sub
cmpb
stc
mov
out
inc
nop
mov
inc
inc
in
outsl
ss
movsb
imull
sti
add
jns
fbld
mov
lods
fisttpll
push
add
xchg
lret
and
addl
mov
cmp
fucomi
inc
addr16
mov
or
adc
push
les
cmp
jecxz
or
push
cmovb
out
aaa
inc
jns
and
mov
and
ret
cmp
in
lret
shlb
pop
leave
or
sub
dec
mov
cmpsb
cmc
fcoml
cmp
aaa
cmc
push
mov
mov
add
int3
lock
je
ret
jo
stos
subl
xor
into
ds
xor
dec
in
inc
add
sahf
lret
out
imul
out
sbb
xor
stc
xchg
aam
fisubrl
ret
xor
pop
push
aam
adc
bound
adc
or
adc
inc
sbb
int
cltd
mov
push
fcoms
xchg
iret
xchg
xor
and
jmp
callw
xor
icebp
cmp
pop
dec
pop
mov
xchg
sarl
push
pop
jb
mov
das
scas
std
repnz
lods
aas
lret
sbb
and
add
xorl
jmp
xchg
xor
bsr
add
mov
ss
dec
in
fdivr
and
pop
pop
jns
pusha
add
out
mov
fldenv
mov
adc
loopne
and
cmpsl
mov
jo
ja
out
mov
test
test
movsl
je
or
adc
outsl
or
mov
popf
sti
dec
add
xor
push
pop
or
sub
xor
ficomps
mov
dec
icebp
inc
mov
dec
cli
insl
sbb
jae
sub
aam
pop
cli
push
leave
jmp
fs
ret
xchg
mov
adc
pop
fsts
cld
cwtl
aad
sbb
cmp
sbb
pop
dec
mov
push
mov
enter
sbb
pop
add
ljmp
pop
push
fidivrs
lcall
mov
push
dec
sbb
sbb
ss
ret
or
mov
ret
pop
shll
and
adcl
push
imul
or
and
adc
cwtl
jae
mov
inc
dec
mov
xchg
int
loopne
dec
pop
jno
nop
push
mov
roll
les
inc
jb
mov
sub
or
out
mov
dec
fsubp
and
shrl
lods
roll
ret
mov
pop
js
mov
test
push
pop
sbb
mov
nop
adc
xchg
scas
leave
xchg
in
sbb
mov
sbb
xchg
cmp
cltd
adc
sub
or
test
movb
lcall
jne
test
repnz
repnz
mov
movsl
rorb
negb
cli
test
add
pop
arpl
mov
jg
mov
andl
imul
push
xchg
scas
movl
fildll
pushf
and
test
aad
push
xchg
or
pop
or
test
stos
ljmp
shlb
lret
push
int
je
push
js
icebp
in
sbb
mov
push
jl
int3
sub
insb
xor
add
repnz
in
mov
rorb
jns
adcl
inc
pop
test
adc
jns
loop
adc
pop
das
cmpsb
pop
push
aam
movsb
inc
dec
popf
jno
sbb
nop
pop
and
jge
repz
sub
ja
mov
arpl
cmp
xor
fldl
aaa
and
int3
int
sub
in
pop
popf
cmp
cmp
loop
aas
scas
idiv
lret
xor
xor
sbb
pusha
mov
fs
adc
push
icebp
lret
add
imul
iret
xor
jo
push
sub
loopne
inc
fs
ja
lret
jnp
adc
addb
sbb
loop
mov
inc
jae
repnz
scas
dec
mov
mov
sti
mov
movsb
lret
lods
pop
cmp
pop
sub
mov
lret
cmp
mov
leave
mov
aas
lock
sub
cld
add
xor
orl
les
jecxz
sub
sti
dec
push
xchg
cmp
jbe
adc
insb
into
jnp
xor
inc
movsb
hlt
js
push
rorl
push
je
das
mov
mov
dec
arpl
ja
mov
xor
call
std
sbb
dec
lock
inc
inc
inc
aaa
cltd
fildl
nop
je
lods
pop
aas
pop
push
xor
cmp
fstpt
push
and
arpl
sub
ret
fistps
xchg
push
push
xor
orb
pop
imul
mov
sbb
push
mov
mulb
xchg
push
sub
sar
movsl
and
lock
test
arpl
shl
jmp
out
xchg
mov
repz
fmull
inc
stc
mov
mov
jmp
popa
adc
into
dec
dec
cli
jle
fdivrs
mov
test
es
lret
jge
jns
pop
add
fnstsw
ljmp
cmp
movsb
or
ja
sbb
insb
out
roll
push
add
jbe
repnz
cltd
xor
fidivs
aas
lods
xor
jle
fldcw
icebp
gs
xor
push
into
mov
xor
xor
lods
aaa
and
stos
add
mov
rorl
mov
push
and
push
push
dec
mov
rsm
in
std
push
dec
repnz
jle
cmpb
mov
les
xlat
out
nop
add
in
lahf
test
mov
mov
add
push
mov
out
movsb
nop
add
xchg
in
jmp
notb
shll
stos
xchg
adc
jmp
test
xlat
jl
insb
cmp
xchg
push
fdivrs
rcl
clc
mov
mov
mov
pusha
into
ret
and
mov
adc
xchg
lahf
ret
mov
lea
int3
pop
pop
push
mov
mov
jno
repnz
outsl
dec
inc
xor
inc
add
in
jnp
push
add
aam
and
hlt
push
jo
repnz
mov
jecxz
outsb
dec
aad
dec
push
jmp
mov
adc
dec
cmp
repnz
sbb
stos
pop
stos
inc
scas
mov
sbb
ret
icebp
repz
test
cs
es
inc
sbb
es
fdivrs
out
inc
std
in
shl
mov
scas
add
jo
es
cwtl
or
daa
xor
cld
dec
daa
push
shll
sub
mov
cs
sbb
out
jbe
jmp
lods
mov
mov
cwtl
cmp
outsl
lret
mov
or
ret
aaa
out
or
cmp
cmp
xor
xor
leave
fcompl
testl
add
add
fwait
jle
cli
fisubrl
cmp
xor
jb
es
sub
mov
sbb
ret
mov
dec
std
movl
stc
mov
cli
cs
cwtl
jns
xchg
mov
sub
imul
ss
and
cwtl
js
iret
or
and
or
pop
dec
inc
xchg
and
es
addr16
inc
test
sbb
sbb
or
movsl
or
and
cli
and
push
xlat
mov
out
repz
dec
mov
adcl
lea
pushf
insb
inc
fidivrl
rorl
fsubrp
inc
adc
xchg
add
or
sbb
push
mov
or
lock
xchg
iret
push
jge
xchg
sub
dec
enter
mov
inc
enter
push
lret
sahf
inc
cltd
lods
nop
je
push
test
insb
loope
fnstsw
xchg
ds
push
ljmp
pop
aam
jne
out
inc
fimull
stc
pushl
fimuls
xchg
lcall
cmp
xor
sti
and
gs
adc
push
mov
fdivr
icebp
mov
jbe
jns
sbb
cmp
xorl
xchg
nop
outsl
inc
xchg
mov
nop
adc
dec
cmp
jmp
fstpl
popa
idivl
insl
scas
adc
inc
mov
mov
adcl
lods
mov
stos
mov
popa
fwait
in
jae
jae
mov
repnz
repnz
or
inc
mov
sbb
cli
fsubrl
mov
push
fs
mov
pop
mov
mov
rolb
inc
mov
repz
outsb
mov
pop
popf
popa
ds
stos
subl
sub
ret
pusha
lret
fiaddl
pop
adc
add
xor
mov
sub
mov
iret
mov
into
lds
mov
cmc
mov
cmp
sub
pop
xchg
js
mov
mov
lods
loop
lea
insb
mov
push
popf
add
push
inc
jl
cmp
fidivs
cmp
adcl
ds
movl
iret
and
inc
cmp
inc
cmpl
js
mov
fbstp
stc
add
push
int3
imul
xor
pop
push
je
cmp
subb
fmull
push
inc
mov
test
fdivrs
cltd
mov
xchg
mov
out
inc
data16
xchg
or
inc
xchg
sets
mov
inc
ret
lahf
push
out
int3
mov
jne
and
or
mov
sub
sub
xchg
push
jns
insl
mov
xchg
in
nop
sbb
or
rclb
les
lea
in
xchg
mov
push
sub
lods
aaa
bound
mov
sbb
push
inc
sub
lcall
outsb
sub
xchg
setnp
test
icebp
pop
sub
data16
xchg
sahf
pop
ror
addr16
std
ljmp
int
ss
mov
push
or
adc
xor
jns
jo
test
add
int
addb
or
push
push
cmp
pop
mov
pop
rolb
jbe
mov
mov
sti
pusha
sub
mov
and
loopne
pop
inc
mov
pop
inc
loopne
stos
shl
pushf
sub
push
cmpsl
xchg
in
xor
mov
cmp
cmp
adc
movsb
add
rclb
mov
pop
lcall
jmp
mov
test
popf
cmpsb
push
outsl
pop
outsb
jg
jl
aad
pop
mov
push
lods
scas
jno
xchg
dec
adc
fdivrp
cmp
push
xor
iret
and
ljmp
incl
loop
dec
pop
or
push
dec
push
mov
adc
cmp
aam
inc
mov
push
roll
adc
mov
addr16
lcall
add
xor
sbb
lret
jmp
stos
jmp
adc
pop
in
ds
aaa
mov
imul
add
add
es
fdivr
jno
pop
in
jnp
sub
cmp
jne
xchg
push
pop
stos
pop
ds
mov
adc
mov
pop
mov
leave
inc
dec
sti
jle
icebp
xlat
gs
jl
mov
xchg
arpl
sub
or
cltd
add
jmp
jno
in
push
pop
jbe
dec
ret
les
and
jbe
hlt
mov
std
dec
repz
jg
hlt
mov
xor
in
push
mov
movsl
add
cwtl
sub
aas
xchg
jl
mov
mov
push
shl
gs
je
sbb
jmp
fwait
std
mov
sbb
push
xor
jecxz
or
add
mov
je
xchg
xchg
insb
loop
mov
xor
cld
ficoms
dec
pusha
in
pop
cmp
loope
ds
mov
cmp
dec
push
inc
fprem
xchg
jge
inc
cmp
adc
xor
and
inc
mov
cmp
dec
fcom
mov
movsb
push
mov
jl
out
fmul
aas
adc
sbb
xchg
ficomps
mov
jl
inc
xor
xlat
jg
cmp
loop
pop
outsb
pusha
pop
pop
pushf
push
pop
jns
add
add
fisttpl
cmpsb
xor
lret
mov
adc
cmp
and
outsb
jne
mov
push
xchg
out
out
fwait
loope
sbb
mov
jo
lret
in
pop
push
ss
sbb
push
movsb
bound
xor
into
aad
jg
sahf
pop
jnp
loopne
ds
jp
rcll
scas
movsl
sbb
lods
int3
xchg
mov
cmp
jb
pop
mov
out
imul
cmp
cmpsb
in
hlt
pop
xor
sahf
cmpsb
mov
sbb
cmp
mov
insb
push
shlb
inc
pop
fistpll
inc
fldcw
pop
cmp
xchg
rclb
jg
xchg
inc
mov
fstp
jmp
sbb
adc
rorb
daa
pop
les
lret
fldenv
inc
xor
jno
out
imul
ja
imul
setno
movb
and
pop
mov
adc
jbe
inc
lock
dec
add
mov
xchg
add
insl
andb
pusha
xchg
out
xchg
cmp
sti
int
daa
xor
insb
sub
pusha
rorb
mov
xchg
ljmp
sbb
dec
adc
rorb
sbb
daa
inc
fucomp
mov
sarl
xchg
sub
je
jns
sub
adc
jge
cmpsl
jge
cmpsb
push
jmp
sahf
jne
ss
pop
in
outsl
push
cli
dec
push
rcrb
and
test
imull
in
inc
hlt
fdivrl
and
mov
inc
xchg
in
into
adc
test
mov
stos
fimull
test
fisttpll
jl
dec
sbb
jle
cmp
rcr
mov
jl
sbb
or
mov
std
add
cs
xchg
push
out
std
outsl
popa
add
cmp
jbe
scas
push
repz
cmp
xor
mov
aaa
es
xchg
fdivl
jno
or
icebp
xchg
sbb
das
icebp
xchg
rorb
pop
push
push
cmp
movd
mov
dec
arpl
xor
xor
outsb
lret
fidivl
fnstenv
in
inc
daa
jl
push
and
cmp
pop
dec
dec
dec
cmpsb
push
add
imul
push
jge
pop
push
pop
orl
jp
mov
repnz
lods
mov
cmp
frstor
roll
popl
sahf
into
aam
xchg
insb
sbb
adc
pop
lret
push
jle
sbb
adc
pop
xchg
stos
adcl
mov
popf
mov
add
mov
imul
jne
add
enter
push
and
pop
in
dec
je
add
and
mov
jo
rcll
lock
push
dec
jno
fistps
dec
xchg
push
sbb
sbb
fnsave
adc
inc
repz
push
andb
repnz
add
pop
push
dec
xchg
xor
fwait
pop
pop
ret
adc
add
inc
sub
pop
fadds
mov
mov
mov
jb
clc
or
fadds
rcrb
fldenv
cmp
sub
icebp
push
insl
jmp
orb
rclb
mov
fcmovnbe
jb
jecxz
ret
ss
cmc
hlt
or
sti
xor
test
iret
jae
xor
insl
fs
popf
popa
scas
sbbb
inc
addl
sbb
inc
divps
inc
scas
fstps
cwtl
or
int3
dec
nop
sbb
ljmp
mov
les
jle
pop
inc
push
in
iret
adc
mov
cmc
orb
mov
lret
jno
mov
inc
dec
sub
sbb
push
sbb
mov
cmc
push
sbb
inc
push
sahf
hlt
and
imul
or
xchg
ss
adcl
push
jg
clc
adc
and
rcrb
test
mov
fbstp
sbb
dec
sbb
fldt
cs
popa
add
mov
adc
lock
jmp
dec
pop
std
dec
cmpsb
addr16
jp
test
repnz
mov
or
mov
mov
icebp
cmpsl
mov
fsubrl
divl
inc
lret
rcrb
repnz
and
out
cwtl
je
test
dec
inc
and
adcl
js
lods
sbbl
js
subl
rcll
pop
or
xchg
xchg
pop
rcr
adc
neg
inc
in
andb
rcrb
dec
push
xlat
xor
inc
sbb
cmc
pop
mov
pop
test
xlat
dec
scas
pop
jp
dec
icebp
jmp
sbb
mov
mov
arpl
das
andb
fwait
cmp
rcrl
push
push
daa
and
stc
inc
mov
push
iret
ss
repnz
xchg
xchg
call
jmp
dec
jae
sbb
mov
pop
mov
mov
rcl
inc
aas
out
inc
sbb
das
xor
lret
mov
xor
out
and
fucomi
mov
sbb
dec
shl
insb
xchg
push
and
xchg
inc
dec
sbb
jbe
or
lock
inc
inc
add
pop
aas
dec
stos
mov
pop
nop
jnp
leave
stos
aad
push
call
cmpb
mov
shrl
xchg
aam
xchg
sub
cmpsl
inc
dec
sbb
mov
push
cmp
mov
cld
rorl
data16
fcomps
das
push
mov
shll
dec
test
andb
je
enter
insl
mov
icebp
xor
popf
add
xchg
sahf
lret
loop
xor
dec
cmp
and
push
xchg
mov
sbb
jno
gs
add
test
sbb
stos
fstpl
or
stos
fists
xchg
cmp
mov
sub
jnp
xchg
fst
nop
jecxz
sti
mov
push
addb
and
dec
add
aaa
lcall
popa
mov
rol
jae
sete
pop
mov
push
imul
paddw
sarb
movsb
hlt
imull
jge
mov
sarl
mov
push
sub
sbb
addr16
or
js
hlt
push
loop
into
push
xchg
mov
and
rclb
adc
cmp
sub
mov
mov
pop
push
sti
pop
adc
mov
mov
jb
push
repnz
cmp
cmp
call
and
xchg
je
xchg
adc
ja
jae
dec
test
gs
outsb
xor
jne
xchg
xchg
and
ret
out
orb
pop
push
outsb
mov
add
sbb
cwtl
dec
sub
sub
push
mov
adc
jnp
add
and
xor
sbb
rcll
lea
insb
cli
fisubs
jne
jae
dec
pop
jno
mov
mov
dec
add
fisubrs
sub
sub
fcom
cmp
std
mov
mov
ret
cld
icebp
adc
push
mov
pop
dec
pop
inc
gs
push
addr16
int3
stos
dec
push
jecxz
clc
in
sbb
fwait
lret
jo
pop
jo
js
xchg
arpl
cmp
add
and
cli
addl
imul
or
sub
xchg
cmp
mov
and
push
sub
fisttps
mov
and
in
adc
jne
mov
mov
and
icebp
pop
orb
in
shr
add
sbb
mov
lock
jns
int3
xchg
mov
lods
and
imul
jbe
ss
insl
jmp
gs
jecxz
out
add
pop
lods
adc
push
out
mov
ss
jge
inc
jmp
mov
fwait
sbb
mov
push
subl
mov
xchg
orl
adc
into
data16
jmp
xor
inc
dec
shlb
pop
es
mov
sub
test
fidivrl
dec
mov
cmp
test
jge
cmp
or
pop
aad
outsl
sub
shr
les
es
shrl
xchg
test
jmp
pop
jmp
adc
inc
cmpsl
fbstp
mov
dec
jnp
adc
cmp
imul
push
addr16
push
popf
andl
out
mov
sti
xor
mov
mov
add
mov
and
decb
pop
mov
int3
inc
frstor
inc
xor
mov
fdivrl
and
add
test
inc
mov
iret
stos
mov
inc
hlt
popf
fisubl
dec
mov
lds
push
jp
sti
xorl
popf
cltd
dec
sub
adcb
inc
sbb
jle
dec
mov
mov
mov
std
dec
stc
iret
decl
dec
inc
int
lock
icebp
repz
out
add
je
popa
sarl
xchg
inc
jmp
std
dec
sbb
and
cmpsb
shl
mov
int3
mov
cmp
push
push
mov
sbbl
mov
lret
sub
or
mov
push
add
add
push
cmpsl
ss
cmp
lcall
test
sti
popf
scas
pusha
add
shrl
add
mov
in
lds
add
mov
mov
add
jge
sbb
dec
shr
xor
cmp
cmp
ret
test
test
jbe
test
inc
fisttps
jno
inc
xchg
sarb
mov
push
mov
pop
fwait
in
push
or
icebp
inc
hlt
sub
pop
jecxz
cmp
push
pusha
popa
cmp
movsb
mov
lds
out
ret
pop
dec
cmpsb
leave
mov
add
push
nop
ljmp
jmp
push
adc
mov
inc
dec
cmp
arpl
push
aaa
adc
das
cli
mov
repnz
rcrb
lock
loop
adc
pop
nop
xchg
mov
jne
adc
and
mov
jp
cmp
add
cli
add
xor
push
rcr
ror
add
cmp
push
push
push
lahf
andl
mov
in
out
aaa
sbb
test
aad
mov
add
jbe
aam
nop
mov
mov
es
pop
or
movsb
mov
xchg
xlat
faddp
cmp
add
adc
adc
dec
sbb
lds
cmc
jmp
xchg
or
push
push
lahf
sbb
daa
lds
xor
lret
outsl
inc
lahf
mov
scas
lret
mov
dec
lea
pop
adc
adc
xchg
push
dec
fbstp
sti
mov
xor
jne
sub
sahf
jbe
xlat
repz
jno
jae
add
add
roll
sub
inc
adc
shl
inc
cmc
lock
rorb
leave
xor
or
lods
xchg
push
shll
out
or
or
jmp
stos
xor
xchg
or
testl
and
cmp
push
mov
fldpi
mov
je
jp
xlat
push
filds
aas
shll
daa
fimull
adc
add
jno
xchg
dec
pop
jb
dec
jbe
add
repnz
mov
xchg
sbb
mov
sub
mov
pop
jmp
add
mov
xor
fucomp
leave
call
cmp
dec
mov
mov
mov
jge
mov
pop
jae
test
ds
mov
pop
mov
fisttps
adc
sub
mov
scas
jne
loop
andl
sub
add
push
je
outsl
aam
mov
popa
pushf
outsl
inc
faddl
jmp
mov
mov
insb
cs
insb
das
ljmp
mov
xchg
sub
pop
mov
ret
repz
sti
loope
in
or
aaa
aas
pop
popf
lods
inc
cwtl
or
inc
pop
xor
adc
lret
and
adc
xchg
mov
push
filds
adc
push
adc
enter
adc
pop
neg
inc
jp
dec
rolb
xchg
inc
stos
mov
fprem
idivb
shrb
inc
xchg
cmpsb
add
testb
fistpll
xchg
pop
test
ret
call
loop
out
and
loop
mov
mov
push
push
push
call
shld
mov
xor
or
mov
mov
shl
or
xor
xor
xor
xor
mov
mov
jmp
mov
add
mov
mov
mov
mov
mov
mov
movzwl
cltd
jmp
dec
inc
aad
push
pop
movsl
sbb
les
mov
xlat
push
push
and
cmp
pop
je
jle
and
movb
inc
cs
cmp
test
addr16
data16
ja
push
xchg
cs
xor
xor
jl
add
rcr
test
push
mov
loope
pop
rcrl
movsl
lea
sahf
popf
and
sbb
sub
push
lea
jle
pop
inc
and
xchg
jne
rcrl
cld
push
orl
divl
hlt
push
dec
pushf
insb
xorl
in
xor
xor
in
hlt
mov
xchg
jmp
xchg
sub
lea
adc
jb
dec
in
in
pop
mov
inc
test
shr
sub
dec
es
fisttpll
jb
ja
inc
mov
add
jne
movsb
pop
in
dec
std
stos
orl
mov
aam
jmp
repnz
movsl
jns
or
aad
xchg
popf
lcall
lods
xor
repz
mov
test
push
dec
clc
sbb
divl
imul
cmpsb
xchg
xchg
pop
fstl
push
mov
jns
repnz
leave
repz
mov
popf
xor
cld
cmp
inc
inc
ljmp
add
and
bound
xor
clc
arpl
push
pop
push
test
sbb
cmp
mov
gs
out
mov
or
add
pusha
ljmp
dec
mov
js
cmpsl
fwait
push
insl
push
xchg
mov
jecxz
lods
cmc
xchg
clc
sahf
push
aas
ret
xchg
stc
roll
xchg
scas
add
mov
cltd
mov
es
aas
pop
adc
je
imul
test
lcall
sub
out
jno
imul
ret
imul
sbb
mov
es
sbb
cmp
fstpl
add
mov
pop
fdivrs
insb
push
shll
add
out
mull
ljmp
in
mov
outsl
lahf
shrl
hlt
cli
dec
ja
in
or
jae
sahf
ret
xchg
inc
es
adc
add
mov
fiaddl
jnp
adc
nop
xchg
in
icebp
mov
repz
mov
mov
push
push
inc
movsl
data16
mov
outsb
sub
rclb
dec
or
daa
cmp
push
mov
inc
lods
jge
loop
hlt
inc
lcall
mov
mov
lods
jg
loop
scas
std
rcl
inc
xor
imul
dec
mov
dec
push
mov
push
push
xchg
in
and
in
fs
add
mov
mov
push
xchg
jns
pcmpeqw
sbb
jecxz
lods
gs
test
inc
sar
out
clc
pop
mov
fldcw
xchg
cmp
loop
cmpsl
hlt
gs
jne
dec
daa
mov
push
cwtl
or
movsb
cmp
xchg
repz
aaa
or
cmp
jno
sti
jecxz
jnp
cmp
int
popf
pop
fwait
lret
sub
xchg
in
pop
jl
dec
jno
xor
mov
sub
inc
mov
xchg
inc
jnp
adc
dec
jg
movsb
adc
mov
mov
out
push
cltd
pop
jmp
mov
or
mov
xor
mov
sub
stos
lock
pop
and
sub
xlat
cld
fcoms
xchg
cmc
insb
jmp
aad
jle
mov
test
icebp
cmp
adc
insl
cli
je
inc
into
mov
cmp
xor
in
call
mov
rclb
movsb
sahf
inc
ffree
idiv
xchg
cmp
jg
rcr
inc
enter
inc
cmpsb
pop
loopne
je
enter
push
mov
mov
cmp
dec
mov
lods
cmp
movsb
cltd
xor
outsb
test
mov
jecxz
push
imul
out
inc
in
mov
adc
jg
jecxz
jge
mov
bound
mov
and
add
imul
cmp
pusha
lahf
xor
push
mov
xlat
jmp
add
movsl
adc
lret
or
inc
iret
xor
cmpsl
popf
jno
cmp
jno
add
sub
adcb
mov
jb
or
hlt
ficoms
fisubs
aam
mov
negl
xor
bound
push
sbb
inc
pop
ja
out
pop
cmp
cli
repz
jo
and
adc
add
push
xchg
decl
jmp
mov
loope
lock
push
adc
out
add
rorl
mov
aad
pusha
cmp
icebp
push
data16
lcall
push
lds
neg
insl
and
jge
fs
les
lret
or
or
mov
cmp
inc
mov
in
sti
ret
mov
leave
test
iret
mov
jg
call
push
pop
icebp
dec
loope
push
divb
cmc
pusha
pushf
or
pop
mov
ror
add
div
cmp
lret
add
adc
js
sub
sahf
xchg
sbb
fiaddl
or
notl
mov
dec
mov
sbb
ss
in
mov
add
mov
mov
pushl
push
jmp
mov
mov
mov
je
scas
scas
mov
cmp
push
pop
sub
xor
xlat
cmpsl
arpl
add
dec
mov
pop
jle
mov
jb
mov
cli
jg
lods
mov
adc
mov
scas
add
inc
or
jl
inc
insl
stos
jae
sub
dec
sbb
mov
jns
sbb
jp
sbb
fistpll
xorb
push
add
or
popf
xor
fsubr
xchg
jmp
jbe
pop
stos
push
sub
test
lahf
dec
sbb
cli
dec
loope
out
das
mov
mov
lock
repz
std
loopne
or
fiaddl
ret
loopne
xchg
xor
mov
arpl
sarb
jae
repz
sti
out
inc
cmc
mov
jae
mov
mov
xchg
mov
pop
cmc
adc
mov
and
and
incl
lret
sub
push
inc
cmpsl
fldt
jae
ja
add
push
std
or
out
lcall
add
scas
pop
pop
inc
jmp
in
scas
je
insl
pop
xor
jl
lret
loope
adc
xchg
mov
push
scas
aam
dec
push
idivl
hlt
jg
sub
and
cltd
mov
out
icebp
scas
push
testl
out
xchg
jae
push
xor
lea
dec
xchg
mov
pusha
jp
cmpsb
mov
out
sub
mov
mov
mov
xchg
test
scas
fs
xchg
mov
into
push
cmp
fisubs
sbb
mov
jge
xor
sahf
int3
xlat
jmp
or
cmp
push
lock
adc
repz
add
add
fsubr
cmp
aad
dec
loopne
scas
mov
jo
scas
push
outsl
push
test
lret
inc
test
push
jg
mov
mov
dec
add
mov
xchg
cmc
test
mov
out
cmp
cli
daa
push
xor
mov
pushf
mov
lahf
iret
inc
jne
cli
pop
mov
mov
xorl
jge
or
mov
daa
andb
clc
rcll
cld
push
xchg
add
lret
aas
dec
jae
sahf
adc
adc
popa
lds
aam
rcll
cs
shl
imul
sbb
orb
fstpl
ja
hlt
in
or
push
mov
test
jbe
jmp
or
cmp
gs
cld
and
test
pop
lcall
loopne
push
mov
stos
mov
mov
sub
add
aaa
bound
js
adc
leave
pushl
int
test
icebp
add
out
lcall
icebp
movsl
jg
sub
pop
lahf
mov
and
jno
cs
in
clc
jb
mov
xchg
je
cmpsl
imul
fwait
xchg
lcall
aad
adc
in
push
add
cmp
pop
jl
cltd
jge
xchg
push
aaa
das
push
mov
arpl
cli
hlt
int3
ds
jp
enter
repnz
jle
daa
cmpsb
cs
jmp
push
push
xor
sub
insb
xor
mov
inc
mov
pop
sti
fiadds
push
xor
movsl
leave
incl
jo
jmp
jbe
je
cltd
hlt
jmp
sti
adc
push
fists
mov
add
inc
movsb
mov
jae
pop
jnp
pop
jmp
fisubl
sti
add
sub
mov
cwtl
xor
xchg
inc
les
addl
shll
mov
jl
lret
adc
test
cmp
inc
adc
push
push
jge
mov
mov
xor
jg
sbb
clc
hlt
and
movsl
or
push
ja
pop
ds
sbb
inc
mov
outsb
adc
mull
incl
mov
add
pop
std
imul
or
push
fucomip
pop
xor
jge
sub
jp
in
aad
shrl
daa
inc
ja
pop
shlb
lds
cmp
adc
cmp
arpl
imul
xor
fildl
jae
iret
icebp
sub
push
inc
xchg
add
pop
rcl
or
mov
sbb
outsl
sbb
popf
cmp
pushf
cs
sbb
push
and
sub
cltd
xlat
test
jns
push
jmp
ss
and
fiaddl
mov
in
adc
das
jo
mov
icebp
push
pusha
dec
stos
jg
adc
mov
and
push
push
mov
jg
dec
sub
xor
popf
ss
cs
and
sub
sbb
movl
insb
mov
test
pop
lahf
je
mov
sbb
xor
pop
test
sub
mov
loop
dec
arpl
aad
enter
inc
cwtl
lods
in
jbe
out
arpl
pusha
sbb
out
push
jno
dec
gs
xor
clc
movsb
push
mov
inc
addr16
adc
add
mov
dec
xchg
dec
sub
pop
push
std
enter
fcoml
mov
cld
arpl
mov
jae
dec
int3
add
add
add
testl
ljmp
add
mov
lcall
in
sbb
or
cltd
subl
sub
jbe
lcall
mov
pop
cmpsl
push
aaa
push
inc
push
scas
lods
fs
movsl
xor
movsl
or
daa
lret
out
push
cli
out
int3
xor
jl
shlb
mov
xchg
mov
popa
sub
and
mov
push
inc
mov
pop
inc
repz
mov
dec
mov
push
cmp
pop
outsl
push
or
jl
xchg
pop
loopne
sbb
lahf
or
cltd
jmp
adc
dec
mov
es
test
xchg
mov
inc
lcall
inc
loopne
jns
in
jbe
dec
or
subb
push
sti
ljmp
jne
push
and
jno
xor
lds
push
pop
pop
fcmovb
enter
jns
mov
cmp
adc
nop
jnp
sbb
repz
cltd
xchg
test
xor
popf
int3
scas
jnp
sbb
mov
and
loopne,pt
pop
jne
pushl
mov
push
xor
sbb
pop
mov
push
roll
pushw
push
data16
mov
movsb
mov
add
cld
fdivs
jne
test
fisubrs
inc
out
cmp
ss
aad
jno
sbb
xchg
mov
add
bound
mov
aaa
popf
dec
insb
insb
jnp
addr16
insl
mov
lea
adc
cmp
idivb
fiadds
mov
lea
pop
and
out
into
push
pop
mov
jecxz
mov
mov
fstps
cmp
cmp
dec
jl
fstpt
sbb
dec
cmpl
inc
add
xchg
mov
loope
cltd
add
ja
mov
mov
sub
xchg
scas
sbb
stc
xchg
hlt
insl
pop
lods
inc
mov
rcrl
stos
or
mov
or
xchg
mov
in
jnp
jmp
psrlw
jmp
pop
mov
mov
jae
pop
call
cltd
mov
mov
in
push
or
push
push
mov
scas
sub
decb
stc
mov
data16
mov
lret
sbb
leave
xor
into
imul
push
jne
filds
add
jl
pop
push
lcall
or
in
dec
dec
int3
fadds
mov
icebp
pop
mov
jp
out
cmpsb
loope
push
lret
and
push
ss
cmp
inc
cmpsb
repnz
mov
shll
xchg
stos
das
jnp
cmpsb
or
inc
inc
cmp
fidivrl
sbb
fldt
in
imulb
rorb
sub
je
movsb
jge
ss
test
cmp
pop
jle
repz
xchg
jno
cmpsb
push
mov
movsl
popa
rorb
xor
out
push
xchg
ret
fists
sbb
ss
push
dec
pushf
fsubrs
lret
cmp
dec
mov
mov
jmp
xor
mov
mov
mov
and
dec
fmuls
out
inc
jp
push
inc
mov
pop
adc
addr16
mov
call
cltd
push
dec
jp
call
sbbl
cmpsb
leave
fst
negl
mov
mov
insb
push
sub
outsb
inc
pushf
inc
pop
push
inc
adc
inc
das
pop
daa
fwait
mov
push
sbb
std
pushl
xor
pop
mov
add
mov
jle
fisubrl
ret
aas
or
xchg
ret
sbbb
jae
add
outsl
call
lock
adc
mov
mov
mov
push
sbb
das
dec
inc
gs
fildl
bt
sub
push
int3
pop
cmc
leave
pop
icebp
mov
push
outsb
pop
push
pop
rorb
lock
loopne
and
adc
aas
popf
push
mov
xor
divl
int3
mov
fucomip
xchg
and
xor
jae
sti
pop
cltd
and
inc
jae
lds
int
cmp
sub
xlat
hlt
cmp
in
mov
cmp
cltd
das
jnp
shrb
push
lock
cmp
xchg
inc
cmp
enter
cmc
hlt
jnp
nop
add
pop
xchg
subb
fistpll
test
cmp
adc
loop
ficoml
int3
jno
sub
dec
sub
and
mov
xchg
and
sub
xlat
xchg
enter
push
stos
or
pop
sbb
mov
mov
dec
xchg
jg
fsubrs
fstpt
mov
sti
leave
dec
cwtl
xchg
and
js
adc
sarl
cmp
rol
xor
neg
ljmp
subb
repnz
or
dec
out
mov
lahf
mov
push
outsb
and
push
adc
inc
and
and
test
ss
fildl
mov
adcb
imul
outsb
outsb
sbb
mov
sub
shlb
inc
push
mov
rcll
movsb
mov
and
out
inc
jmp
mov
test
mov
sbb
inc
out
inc
cmp
ss
repz
add
shrl
xchg
jmp
insl
dec
leave
sub
idiv
jo
movsb
outsb
out
jb
negb
test
inc
cld
push
into
xchg
cmp
and
in
sahf
out
and
xor
cmp
stc
sub
aad
dec
out
lahf
es
stc
je
xor
adc
mov
or
sarl
lcall
dec
rcl
pop
mov
pop
mov
xchg
jns
clc
aaa
ror
es
jmp
dec
bound
mov
add
subl
or
daa
ljmp
imul
sbb
cmp
pop
xor
jg,pt
xlat
cld
aam
and
mov
mov
mov
and
and
out
push
mov
sub
add
pop
inc
pop
pop
push
mov
fwait
imul
xor
std
push
or
jg
test
into
cmp
xchg
sub
iret
mov
clc
cld
xchg
mov
push
insb
int3
adc
cltd
xlat
sti
sahf
mov
jp
cmpb
aad
out
dec
out
mov
sub
out
xor
lods
popf
aas
jg
jbe
sub
fistpll
mov
stos
or
xor
push
xor
push
rol
rclb
outsl
imul
rol
test
mov
out
repnz
dec
cmp
lahf
std
inc
insl
xchg
cltd
lock
cmp
inc
and
push
inc
loope
shrl
mov
rorl
inc
jo
ds
xchg
inc
icebp
mov
ja
jle
pop
test
mov
add
ds
pop
js
arpl
push
ds
loopne
or
mov
les
scas
aas
test
xchg
leave
cmpsb
test
push
xchg
pop
into
pop
dec
xchg
fsubrl
sbb
xor
cmp
dec
xor
gs
and
test
lret
dec
dec
mov
sub
push
fdivrl
js
cmp
cmp
inc
and
mov
xchg
stos
shll
test
xchg
je
mov
dec
mov
jle
push
inc
insl
arpl
or
mov
mov
aas
pop
iret
fcmove
sub
fisubrs
shrl
in
fsubrl
insl
loope
ljmp
sub
out
adc
stos
fs
dec
insb
loopne
inc
stos
test
mov
pop
neg
je
dec
sbb
push
inc
jo
movsl
dec
shrb
sti
fsubrl
mov
xchg
jmp
fldl
aam
cmp
jns
and
cmp
mov
mov
popa
aas
rorl
inc
xchg
push
stc
icebp
jp
fmull
jbe
jmp
jns
pop
xor
pushf
sbb
sub
jnp
xchg
xchg
movsl
xor
mov
daa
sub
aaa
sbb
push
popf
push
in
mov
rorb
xchg
mov
stos
imul
mov
and
inc
xchg
cmp
pop
pushf
sete
add
outsl
mov
sti
dec
push
or
adc
test
gs
sahf
insb
mov
pop
scas
filds
dec
cmp
pop
bound
jle
in
lahf
ret
outsl
pop
add
push
test
imul
in
out
lods
xchg
sbb
lds
mov
adcb
in
mov
aad
je
add
push
jp
xor
adc
mov
pop
frstor
das
leave
es
push
or
xlat
leave
sti
xchg
mov
jbe
mov
shl
pop
mov
mov
movsb
scas
pop
clc
xchg
xor
loope
outsb
dec
fadd
dec
icebp
xchg
mov
push
adc
cmp
cs
xchg
insl
popa
lret
in
popf
les
mov
and
sbbl
in
movb
lds
aad
mov
dec
xor
cltd
xor
fcmovnu
push
test
add
mov
pop
sub
aad
frstor
or
imul
aad
imul
mov
add
add
dec
adc
out
pop
sub
jns
sbb
lock
xor
lcall
lea
scas
in
out
stos
and
cmpsb
into
sub
arpl
and
add
gs
dec
xchg
stc
out
mov
pusha
adc
cmp
in
in
outsb
sbb
aas
iret
movsb
push
xor
test
add
mov
lea
lods
sbb
cmpsl
mov
and
sbb
xchg
enter
andb
popa
xor
outsl
or
inc
add
push
fdivrl
xor
inc
in
or
cmp
mov
jp
jno
insb
jae
xor
mov
js
xchg
sub
aam
inc
mov
sub
mov
dec
push
xchg
xlat
add
test
in
and
xsaves
add
mov
jno
mov
lea
adc
push
xchg
push
daa
mov
add
insl
gs
aam
ror
ljmp
jmp
mov
mov
insl
dec
add
mov
shl
cmpsl
xchg
xchg
movsb
sub
pop
vmread
shl
int
xchg
or
inc
lret
insb
adc
add
jl
push
pop
sub
mov
rorl
cmpsb
xchg
push
xchg
or
push
jne
inc
scas
scas
xchg
stos
ja
sub
call
in
mov
cmp
adc
pop
mov
adc
add
sbb
cmp
test
cmp
je
into
cmpsl
cmpsl
fstpt
jnp
lahf
xor
fmuls
adc
dec
lds
dec
and
dec
xchg
mov
or
xchg
lock
lods
push
inc
pusha
xor
mov
cs
sbb
jg
mov
cmpsb
testl
pushf
gs
loopne
mov
mov
mov
push
jne
add
sbbl
mov
push
mov
fld
sub
jae
rcrl
fadd
mov
xchg
out
mov
mov
jmp
add
movb
mov
ss
jp
lret
lea
outsl
inc
sbb
pop
add
mov
jg
jo
pop
call
mov
push
jge
dec
in
xchg
jle
jecxz
jmp
push
out
fldt
shrb
scas
jno
test
lsl
cwtl
dec
ss
push
mov
mov
pop
or
test
add
xchg
xchg
mov
sbb
pop
stos
and
xchg
lods
rolb
movsb
lods
lcall
jae
jp
pop
pop
mov
test
into
add
mov
leave
insb
outsb
mov
mov
call
jp
lods
mov
icebp
adcl
adc
mov
hlt
xlat
pop
rcll
xchg
bound
jo
or
out
push
repz
clc
mov
xchg
dec
fcom
fidivrl
mov
loop
aad
fwait
movsl
and
mov
xchg
hlt
dec
test
jge
xchg
jl
mov
pop
dec
out
push
subb
inc
fwait
mov
fwait
push
adc
test
in
lds
mov
fildl
ljmp
mov
sub
in
dec
xchg
movsl
add
mov
movsb
xchg
adc
adc
loopne
call
add
dec
jns
test
cwtl
repz
popa
sbb
adc
sbbb
andb
or
enter
fstps
clc
or
call
ss
icebp
and
jmp
dec
imul
push
sub
dec
pop
pusha
popf
pop
scas
xor
xor
mov
leave
cmpsl
aad
sbb
adc
xchg
add
pop
nop
insl
fwait
sbb
inc
and
pop
mov
adc
mov
aam
cmp
push
lahf
push
sti
mov
fxch
xchg
popa
das
int
mov
push
movsb
cmpsb
sub
sub
ret
aas
mov
pop
fiadds
mov
rorl
xabort
pushf
adc
ja
sub
inc
and
fldl
popw
inc
mulb
sub
or
pop
imul
jle
or
cltd
add
adc
xor
fs
iret
lret
mov
mov
adc
insl
jbe
pop
push
fistl
push
inc
jg
loopne
std
sub
stos
inc
add
lea
rorb
pop
and
push
dec
mov
push
or
ja
fldl
roll
cs
jnp
or
sahf
test
test
es
mov
pop
pop
sbb
call
icebp
fistps
push
and
mov
cmp
aas
adc
or
lock
and
or
or
jno
mov
mov
lods
mov
nop
cld
mov
ficoms
dec
pop
test
pushf
iret
add
add
out
jge
in
fmuls
movsl
mov
mov
xorl
cmp
int3
push
ss
or
inc
push
gs
outsb
cltd
je
push
mov
mov
jns
jp
mov
pop
out
test
repz
aam
test
pushf
cmp
push
mov
and
pop
ljmp
cmp
out
mov
xchg
mov
mull
sub
cmp
mov
push
rcrb
test
sub
mov
adc
xchg
mov
fwait
adc
xor
in
add
sub
hlt
add
mov
sub
adc
dec
out
mov
icebp
insb
inc
adc
insl
cmp
adc
outsl
dec
shlb
lahf
and
in
and
jno
mov
cmp
lods
popf
clc
xchg
ss
jp,pn
fwait
xchg
mov
jne
fucom
jl
xchg
fs
pop
popa
loop
les
add
repz
div
jecxz
sub
add
pop
xchg
shrl
insb
bound
movsb
je
negb
xor
cmp
daa
sbb
push
add
add
mov
inc
roll
jb
dec
pop
adc
push
jecxz
sbb
repz
into
jle
cmp
in
and
jno
les
push
jmp
cmp
test
lock
push
push
cmp
jl
sub
add
pop
sub
jmp
adc
lret
mov
fwait
jb
pop
or
rclb
imul
insl
add
lock
push
adc
movsb
lea
xchg
pop
negl
lods
mov
jb
out
stc
popa
leave
test
pop
lret
cmpsb
mov
popa
stos
inc
mov
in
sub
sbb
cmp
or
repnz
mov
leave
sbb
andb
in
in
mov
jno
aad
fsubr
pop
jae
jmp
loop
push
loop
dec
insl
pop
fucomp
cmp
mov
clc
je
pop
scas
test
jmp
insl
scas
in
int3
mov
sub
js
cmp
sbb
pop
xchg
push
ja,pt
jg
pushf
cmpsl
and
inc
mov
cmp
movl
pop
int
push
cltd
mov
movl
imul
je
into
and
dec
xchg
add
or
inc
add
sbb
xchg
hlt
sbb
out
sti
test
enter
ds
xor
dec
xor
dec
sti
fmuls
and
fs
push
xchg
or
jnp
cmpsb
les
arpl
jge
hlt
in
ss
dec
outsl
out
in
sub
add
iret
orl
jge
test
jl
cmp
cli
test
cmpsl
mov
clc
lahf
cmp
jl
ficoml
arpl
out
cmpsl
sbb
roll
pop
push
push
shlb
stc
push
adc
xchg
push
xchg
jno
popa
movsl
popf
mov
xlat
lret
fnstcw
sbb
scas
mov
inc
out
test
xchg
scas
bound
cld
mov
push
sbb
xchg
sti
mov
sub
dec
adc
lea
xchg
sarl
mov
mov
lds
and
sbb
jp
xchg
xor
mov
xor
sub
inc
popf
jle
ds
shl
mov
test
mov
addr16
repnz
stos
movsb
sub
inc
adc
inc
dec
xchg
inc
out
outsb
roll
insb
data16
icebp
or
lock
xor
sub
outsl
dec
xor
sub
sub
movsl
mov
loop
hlt
in
push
movsb
lock
aam
push
cwtl
scas
cmpsb
shrd
out
lret
test
fwait
or
xchg
fs
iret
or
fcoms
xchg
push
or
outsl
pop
out
fst
dec
xor
or
ret
fsubl
scas
fisubl
cld
lret
loope
pop
out
test
mov
rcll
and
aas
jecxz
lahf
mull
movsl
jmp
in
loop
cmp
outsl
xchg
std
jo
out
ret
mov
push
xchg
out
push
scas
jle
push
dec
cmp
fdivrl
pop
push
outsb
das
lods
invd
cmpl
addr16
cmp
xor
cmpsb
inc
mov
es
cmp
stos
ljmp
inc
pushf
cmp
aam
mov
js
popl
jae
and
addl
add
ljmp
cmp
and
lods
mov
push
movsb
mov
xchg
push
ret
xor
pop
mov
mov
dec
sub
lret
sarl
test
mov
push
cltd
je
adc
lock
fs
pop
inc
rcr
call
enter
and
lds
test
xchg
ljmp
ret
rorl
test
loopne
mov
mov
xor
mov
cmp
jne
mov
cmp
jne
movl
mov
movl
mov
movl
mov
movl
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
add
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
xor
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
add
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
or
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
shl
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
add
mov
mov
shrd
shr
mov
mov
xor
shl
mov
xor
or
mov
add
shrd
xor
shr
mov
mov
xor
or
mov
or
shl
mov
mov
shl
mov
xor
mov
mov
mov
xor
xor
shrd
shr
or
xor
or
mov
mov
mov
mov
xor
shl
xor
mov
mov
mov
mov
xor
xor
shrd
or
shr
mov
mov
or
mov
cmp
jne
cmp
jne
jmp
mov
mov
mov
mov
mov
xor
shl
mov
mov
xor
mov
mov
xor
xor
shrd
or
shr
mov
mov
or
mov
mov
push
pushl
push
push
call
mov
mov
shrd
shr
shr
xor
push
xor
mov
mov
mov
push
jmp
cli
shll
mov
xchg
mov
loope
mov
or
sub
push
push
and
out
pop
jge
add
xchg
inc
bound
iret
adc
sbbl
fnsave
mov
adc
int3
inc
cli
and
mov
clc
add
mov
inc
imulb
stos
xorb
mov
lock
push
dec
add
aam
insl
mov
lcall
cmp
jnp
adc
movsb
mov
fsubs
nop
ror
jne
jl
pop
repnz
in
lods
xor
lock
fistpl
mov
js
rol
aaa
cmpsl
out
mov
cmp
mov
dec
mov
fimull
dec
push
cmp
inc
dec
cmpsl
inc
jno
fistpll
sub
imul
push
xchg
pop
jb
sub
negb
bound
and
adc
fidivrs
lods
in
stc
data16
je
mov
pop
lods
das
mov
sbb
jnp
fcoml
aaa
filds
mov
pop
sahf
in
adc
clc
out
std
bound
int3
das
inc
pop
dec
mov
jnp
stc
dec
test
and
jb
adc
cld
adc
ret
test
imul
xchg
add
sbb
pop
cmp
stos
out
mov
push
push
cmpsb
shll
sub
cmp
out
dec
jl
dec
or
or
xchg
fwait
cmp
test
fcoml
ret
loope
pcmpeqw
and
pop
cld
outsb
stc
sbb
adc
lods
dec
cmp
fmull
jae
cmp
stos
fwait
cmpsb
outsb
xchg
push
mov
js
adc
loop
mov
inc
jae
push
push
mov
adc
shlb
sbb
lods
testl
das
add
push
xchg
rcl
pusha
out
sbb
div
pop
call
iret
inc
inc
pushf
sub
out
testl
pop
mov
sahf
mov
push
in
push
add
and
ja
sub
out
xchg
fnsave
es
add
gs
shll
lock
mov
dec
sbb
pop
xchg
mov
add
loopne
sub
movsb
xchg
cld
mov
sbb
sti
lea
or
fstp
fcomps
add
repz
mov
pop
pop
sarb
cs
xchg
addr16
mov
outsb
mov
loop
lods
test
aas
sahf
cli
test
dec
movsb
and
loope
add
gs
mov
aaa
mov
loopne
push
xor
push
and
fdivrs
xchg
pusha
je
mov
cmovno
mov
stc
adc
les
sbb
imul
ja
pop
mov
enter
adc
mov
and
test
mov
push
or
or
xor
pushf
cmpsb
lds
leave
movsb
sub
insl
sub
pop
and
int3
mov
xchg
bound
lcall
sahf
jae
les
mov
scas
shrl
jl
pop
sbb
sub
aas
imul
shlb
xchg
mov
cmp
fdivrp
sub
jae
insl
xchg
out
jge
xor
imul
fnsave
in
outsb
jns,pn
jne
inc
inc
add
pop
and
aad
out
jo
stos
insl
push
jns
lahf
inc
int3
mov
push
stos
loop
repz
inc
scas
les
cmp
pop
and
insb
call
cld
daa
xchg
sahf
dec
stos
and
adc
dec
shrl
push
clc
gs
sub
push
pop
pop
shl
test
imul
aad
mov
cmp
popa
cli
test
pop
jg
in
shll
add
fistps
js
jmp
and
loopne
cmp
mov
jo
imul
out
fcomps
test
iret
push
mov
ljmp
jb
insb
dec
pusha
rcl
inc
repz
push
and
push
pop
push
push
scas
push
pop
dec
in
in
movsl
popa
xchg
inc
dec
lods
aaa
and
shlb
fldenv
xor
sbb
test
push
mov
xchg
aad
xchg
jge,pt
ret
out
ret
adc
push
and
mov
pop
out
xchg
mov
sbb
movsl
cmpsb
xchg
pop
sub
cltd
dec
aad
mov
std
ja
stos
loope
lods
insl
adc
into
negl
pop
test
cmc
inc
clc
jns
int
testl
mov
jmp
dec
pusha
lea
mov
push
ficoml
push
leave
add
jne
out
mov
dec
in
add
sti
jp
lods
inc
ds
or
sbb
js
cltd
xchg
push
add
cmp
adc
cltd
sti
shrb
cs
les
call
pop
xchg
and
sbb
jb
sub
pop
out
les
dec
fbstp
subl
adc
stc
inc
shl
cmpsl
jmp
idivb
inc
popf
push
shlb
test
dec
mov
data16
mov
in
cmpl
mov
xor
cmpsl
sti
lods
pushf
or
mov
cld
xchg
daa
adc
in
lea
out
jg
ret
fisttps
scas
scas
testb
inc
fdivrl
sbb
or
push
mov
sub
inc
push
aad
jmp
call
incb
mov
jge
dec
ficomps
test
mov
or
push
vmovupd
in
mov
rorl
mov
shlb
mov
movsb
lods
pop
inc
adc
adc
add
shlb
mov
cs
inc
mov
jno
fidivs
fisubrl
push
popf
pushf
lahf
jno
jmp
pop
shl
pop
js
jmp
ret
or
iret
xor
rcll
or
mov
call
cmpsb
jg
lahf
adc
dec
stos
sbb
jmp
adc
dec
hlt
pop
cmp
inc
pop
pop
movsb
jl
adc
sub
pop
call
fwait
jge,pn
leave
push
das
pop
mov
fstps
cmp
sbb
xchg
and
mov
fisubl
sub
dec
inc
rol
sub
add
pop
cmc
shr
ljmp
push
mov
in
jne
adc
and
or
shl
int3
ljmp
xor
adc
cmp
sbb
out
jl
or
push
cmc
inc
xchg
fucomip
fs
fsubs
dec
lods
cmp
sub
push
fdivrl
fmull
sbb
imul
inc
icebp
add
sub
adc
stos
xchg
dec
movsb
xchg
inc
mov
bound
xor
sbb
mov
jge
stos
cmc
popf
pop
or
sub
xchg
loope
lods
add
and
in
push
enter
fcmovbe
hlt
into
jp
push
mov
dec
pop
cmp
push
insb
and
xlat
jmp
mov
mov
jl
sub
bound
iret
shlb
dec
aad
pop
scas
cwtl
dec
xchg
test
enter
lods
xlat
aam
daa
pop
bound
test
xchg
mov
cmp
std
or
pop
adc
gs
inc
fsubrs
lods
pushf
sub
jg
sub
mov
mov
pop
stos
out
into
int
mov
mov
push
leave
sar
pop
mov
int
cmp
jno
dec
out
and
inc
lea
popf
mov
aad
sub
andl
xor
pop
cmp
lret
out
lret
mov
adc
imul
mov
aas
andl
stc
repnz
iret
xlat
mov
sub
mov
in
and
xchg
add
insb
in
in
pop
and
test
fiaddl
int
pop
or
pushf
leave
mov
push
mov
dec
or
xchg
inc
push
test
mov
mov
jnp
or
mov
add
insb
push
pop
les
xor
arpl
xor
mov
popa
mov
lea
cmc
push
inc
dec
in
jns
inc
in
cmp
adc
lock
negl
das
jne
xor
and
sarb
jl
jg
xchg
outsb
jp
xlat
iret
adc
mov
and
cltd
push
inc
push
mov
dec
mov
xchg
es
out
xchg
jbe
add
lods
cmc
int
pop
inc
push
xchg
xchg
aaa
mov
mov
pop
mov
sbb
and
pop
repnz
mov
mov
test
adc
imul
fiaddl
pop
aam
lea
sub
testb
adc
into
push
ror
mov
or
cmp
push
sbb
pop
loop
mov
sbb
pop
popf
xchg
fnstsw
xlat
stos
es
sar
push
roll
cwtl
sub
and
ljmp
testb
pusha
mov
movsl
lods
test
dec
mov
lret
cmp
test
mov
inc
call
ja
xchg
out
cwtl
xor
les
pop
test
andps
dec
mov
into
pop
sub
aad
jge
mov
push
les
mov
test
mov
or
popa
std
xor
pushf
sti
rcl
pop
icebp
mov
pop
jg
dec
sbb
lret
or
int
push
notl
fcompl
fsts
xlat
cmp
mov
cli
mov
cld
xchg
subl
je
aaa
mov
mov
in
mov
lods
mov
pop
or
fsubrl
mov
jbe
sub
cltd
fs
lods
test
scas
into
dec
xchg
lea
ljmp
dec
ret
aam
jmp
pop
xor
lahf
mov
mov
jmp
lock
jge
call
iret
and
push
push
sahf
testl
mov
pop
loopne
mov
lock
push
xchg
shl
adc
xor
les
inc
in
pop
xchg
mov
xor
addr16
or
pop
and
cs
fistl
test
push
aam
adc
sub
mov
xor
imulb
or
xor
cmp
out
in
sub
outsb
mov
pop
scas
call
adc
mov
bnd
sahf
fdivrs
mov
loopne
mov
inc
lock
ret
jecxz
mov
dec
mov
in
sub
inc
xchg
cwtl
sar
ret
inc
jl
xchg
sbb
roll
bound
fs
test
mull
add
pop
push
jl
adc
xorl
pop
jns
or
mov
lret
add
jge
pop
pop
jns
sub
ret
pop
sti
push
xchg
pop
sub
testb
inc
xor
push
inc
outsb
in
ret
dec
lahf
aas
xlat
xchg
xchg
cmp
add
inc
sub
mov
fs
push
popl
cmpsl
xor
jmp
dec
dec
rorb
xchg
mov
roll
pop
push
iret
mov
and
in
call
mov
mov
mov
xchg
jo
mov
leave
cli
cmpb
inc
xchg
aaa
outsb
mov
cli
mov
or
mov
es
jmp
shll
xchg
jnp
pop
das
inc
push
rcl
xor
sub
jae
pop
mov
lods
shl
jo
popa
outsl
mov
orb
out
test
ds
enter
in
arpl
xchg
rcll
sbb
popf
addr16
ret
cld
inc
clc
test
nop
jnp
sub
adc
or
jae
imull
mov
dec
pop
push
fisttps
rcl
jg
mov
or
aam
int
fwait
xor
insb
sub
inc
xorps
addr16
lret
out
std
call
sub
cli
dec
mov
test
icebp
fucom
sub
pop
scas
mov
pusha
cmpsl
enter
mov
test
in
jb
insb
outsl
hlt
fldlg2
pop
in
cmpsb
inc
mov
xchg
sbb
xchg
and
cmp
sbb
into
xchg
lcall
sbb
xorb
adc
lahf
mov
sbb
loopne
push
cmpsl
cmp
les
push
jnp
cmpb
mov
arpl
inc
out
mov
jne
sbb
xchg
inc
test
out
mov
add
pop
sarb
dec
jbe
pop
cmc
pop
ss
and
pop
cld
xor
fisubrs
out
ret
push
dec
cld
test
int
lret
push
movsl
xchg
imul
lea
mov
sbb
nop
inc
imul
dec
mov
pop
push
jno
sbb
cmp
imul
cmp
in
dec
fidivl
call
pop
jbe
mov
mov
jb
enter
or
cmp
push
cmp
pop
xchg
aam
and
in
mov
mov
out
and
sub
fnstsw
cs
repz
sbb
and
popf
xchg
inc
lea
sbb
xor
pop
push
jbe
in
test
std
fwait
pop
jns
pop
pop
inc
int3
mov
xor
xchg
ja
jno
or
cltd
fsubl
cmp
xchg
mov
dec
lret
add
jo
sbbb
mov
sub
mov
jae
out
sub
mov
mov
cmpl
xor
outsl
stc
push
bound
bound
sbb
lret
xor
jae
jp
xchg
push
movsl
xchg
xchg
iret
addr16
pop
sbb
jnp
inc
andl
mov
sub
adc
sbb
mov
ret
sub
pushf
adc
repnz
loop
pop
sbb
jp
outsb
xor
fwait
cmpsl
cmpsl
mov
nop
adc
fsubs
cs
cmc
jae
inc
or
xor
stc
add
jbe
push
popf
add
dec
jns
cmp
neg
jle
mov
or
lock
lret
add
fstp
repz
sbb
push
int
xchg
jae
add
sub
xchg
in
es
jmp
mov
in
jle
push
adc
pop
xchg
lret
test
cmp
xlat
sub
xchg
out
jae
int3
lcall
shrl
aam
lcall
je
lods
push
mov
push
out
ljmp
pusha
call
daa
popf
jle
or
sbb
xrelease
pop
inc
or
push
adc
push
push
in
xchg
popa
adcb
lahf
mov
xchg
cmp
jecxz
xchg
std
push
stc
test
xor
and
lcall
jns
stos
repz
xor
dec
test
hlt
sub
js
and
movsl
xchg
add
xor
insb
aas
js
push
sub
cmpb
sbb
pop
scas
test
ljmp
inc
mov
mov
hlt
call
popl
mov
add
ffree
pop
lret
xor
mov
imul
dec
cmc
mov
and
daa
sbb
pop
ret
cld
inc
outsb
popa
stos
addr16
loopne
mov
out
mov
jno
and
in
and
nop
std
or
xor
dec
jp
fs
out
aas
jb
pop
in
inc
ljmp
xchg
mov
cmc
cs
pop
rol
cmpsb
or
dec
jae
leave
loope
mov
cmp
sbb
popa
loope
mov
adc
fstpt
sub
test
jnp
mov
mov
popa
fwait
cwtl
sub
imul
lock
or
movsl
pop
add
sub
pop
mov
xchg
xchg
push
nop
in
adc
or
ret
push
jo
mov
leave
leave
and
add
outsb
or
push
or
sub
cmp
dec
test
sub
xor
and
sub
cmc
sbb
insl
and
rclb
pushf
repnz
idivl
dec
stos
fs
add
jae
add
or
xchg
in
in
repz
sbbb
inc
and
sarl
xchg
in
ljmp
cmp
pop
xor
mov
add
lds
sbb
sbb
jno
mov
sbbl
popf
aad
xchg
lret
inc
add
out
js
or
xchg
stos
out
bound
test
popa
es
mov
out
mov
or
cmp
insl
lods
in
mov
mov
icebp
push
std
ficoml
adc
jns
je
ljmp
fwait
stos
mov
push
sub
sbb
scas
push
and
cmp
cmc
lds
mov
xchg
sbb
push
scas
test
testb
rclb
cmp
mov
idivl
jg
or
scas
lods
cmp
mov
stos
outsb
pop
or
mov
out
dec
jg
fildl
mov
imul
loopne
push
add
data16
clc
and
push
dec
fcompl
mov
xchg
adc
jecxz
push
ds
mov
data16
aad
lods
stos
loop
jge
adc
sbb
je
out
insl
movsl
sub
add
das
xor
mov
pusha
fisubs
dec
sbb
xchg
inc
lea
push
inc
mov
in
mov
or
mov
ljmp
push
iret
xchg
fs
test
add
xor
std
inc
ds
std
out
jl
xor
ret
cmpsl
push
xchg
mov
cmp
dec
push
cmc
add
mov
lds
aam
inc
sbb
jle
imul
push
inc
mov
addr16
inc
mov
test
jmp
mov
scas
or
pop
andl
iret
jmp
mov
sbb
leave
inc
icebp
sbb
outsl
jge
rcrb
push
outsl
jb
popa
pop
pop
jg
jne
arpl
gs
ljmp
mov
mov
jne
inc
inc
aaa
pop
push
mov
rolb
xchg
cmp
sbb
push
dec
insl
add
pop
stc
repz
pop
inc
lea
xchg
adc
inc
push
incb
xor
imul
dec
xor
and
pop
out
fstps
sub
fadd
sub
mov
out
jle
or
sbb
mov
ljmp
jp
xchg
pop
sub
int3
scas
mov
adc
mov
push
mov
adcb
mov
js
nopl
ljmp
jecxz
lods
and
scas
inc
nop
mov
cmp
push
aas
les
fdiv
mov
jge
push
xchg
lret
test
sarb
fcos
les
lods
cmc
and
ja
jmp
jp
popf
cmp
pop
pop
jl
inc
clc
push
shl
jecxz
pop
jb
adc
and
xchg
sbb
xor
dec
lcall
rcll
jo
call
add
adc
cltd
sub
xor
popf
or
cld
pop
ret
test
lock
stos
or
xor
lret
add
inc
pop
sarl
mov
pushl
in
lds
mov
cmpsl
xchg
jl
stos
rorl
jno
mov
lods
popa
add
push
shlb
jmp
cmpsl
xchg
scas
jno
repnz
jmp
out
mov
shlb
jo
aad
ss
aad
mov
xor
ror
mov
or
add
sahf
fsubrp
push
mov
je
cmp
mov
sti
or
ds
cmp
imul
sti
xchg
insl
or
loope
hlt
push
int3
mov
inc
shrl
repnz
adc
stos
subb
pop
stos
les
mov
pop
out
xchg
loopne
mov
jmp
movsb
push
jns
in
mov
xor
sub
and
test
inc
mov
jb
cmp
sub
add
data16
sbb
lcall
mov
pop
imulb
icebp
sub
rcr
movsl
xchg
mov
xor
rolb
xlat
into
scas
mov
test
pop
dec
xchg
cwtl
xor
sbb
orb
add
icebp
test
nop
dec
rcrb
cmpsb
inc
lahf
lcall
icebp
mov
mov
push
pop
outsb
xchg
add
icebp
mov
call
fistpll
add
push
or
fnstcw
mov
xchg
mov
pop
mov
push
bound
xor
mov
xlat
sbb
insl
cmp
jns
xchg
mov
jge
cmpsb
in
sub
scas
loopne
or
popa
cmc
lock
xchg
mov
les
pop
lea
cli
insb
jae
sub
imul
fcmovu
test
sub
loopne
ljmp
mov
dec
xor
inc
pop
jns
in
in
and
dec
mov
push
out
inc
mov
test
push
fists
push
dec
jge
js
iret
jno
int3
es
mov
out
frstor
ror
mov
xchg
lods
dec
add
mov
loopne
fucomp
mov
popf
pop
ret
cld
test
outsl
out
pop
fistps
aas
jno
les
push
jecxz
aam
push
sbb
cltd
cmp
dec
sbb
addb
push
or
lock
fwait
loope
adc
jle
insb
out
mov
pop
stos
iret
sbbb
mov
cmp
pop
dec
in
or
cmp
sbb
add
popa
mov
aam
lods
popa
cmpsb
adcl
repz
in
test
jle
xchg
dec
pop
sub
int
lods
push
xor
sbbb
rep
fildl
pop
addb
add
test
mov
subl
aad
xchg
fs
or
and
daa
ret
fmul
jp
mov
ret
sub
lea
sub
movsb
dec
jl
inc
test
xor
imul
ds
bound
lds
fsubr
sub
xor
pop
incl
pop
js
inc
push
dec
test
push
je
add
inc
testl
dec
jecxz
shl
xor
cltd
jmp
jl
mov
xchg
je
loop
mov
insl
pop
adc
shll
cli
mov
xor
clc
and
loope
xorb
push
icebp
sbb
fwait
xor
rcr
adc
aas
inc
mov
pop
cmpsb
fnclex
rclb
jne
mov
inc
sub
aam
nop
popf
cmp
popf
add
adc
add
xor
xchg
test
test
repz
mov
adc
call
and
sub
sub
jge
cmp
lahf
outsl
xchg
daa
ret
nop
mov
or
shrb
push
fdivs
xchg
pop
dec
sbb
inc
pop
xchg
enter
sub
adc
aad
mov
dec
jecxz
sub
call
pop
push
and
pop
cmp
adc
or
in
andl
and
ja
mov
push
mov
inc
cwtl
mov
out
mov
imul
dec
dec
inc
mov
sbb
and
cld
mov
mov
jbe
loope
sbb
int3
sbb
loope
decl
pop
pop
sti
add
lea
adc
pop
jb
or
xchg
lret
pusha
push
cwtl
cld
mov
mov
ds
cli
cmc
mov
fidivl
mov
fisttpll
lcall
push
shl
pop
test
cmp
xchg
lds
in
xchg
add
ret
mov
xor
lcall
sarl
push
sub
xor
cmp
pop
jg
add
in
out
xchg
hlt
sbb
jno
in
pop
test
jae
pop
insl
lds
xchg
xor
jp
hlt
insl
outsb
sbb
xor
pop
jno
and
xlat
inc
mov
dec
popa
dec
xor
jns
jle
sbb
pop
data16
jns
icebp
cmp
push
xchg
or
or
push
fs
gs
aaa
inc
push
ljmp
sbb
sti
lahf
lea
mov
mov
bound
lods
lods
jmp
call
add
ret
jno
mov
frndint
xchg
popf
mov
adc
loope
xor
pop
aam
in
xchg
stc
rorb
add
cmpsl
sub
iret
lahf
xor
sub
ret
push
ss
punpckhwd
mov
mov
les
bound
adc
and
aam
xchg
or
popf
add
jnp
dec
loop
push
mov
fildl
adc
and
out
mov
scas
mov
add
jne
inc
and
jb
mov
pop
pop
pop
outsb
pushf
jge
movsl
imul
adc
jl
adc
fldt
andl
stc
rorb
mov
add
pop
adc
cmp
dec
inc
das
mulb
iret
lock
xchg
cwtl
inc
scas
pop
fimull
rcrb
mov
pop
inc
jge
cs
xlat
xchg
adc
xor
addr16
pushf
loop
fucom
cltd
lahf
fimull
and
cmpsl
std
mov
xor
mov
push
pop
mov
cli
jae
push
aad
and
mov
sahf
addr16
jmp
mov
pop
imulb
cmovne
mov
sbb
pop
lea
movsl
sbb
out
repnz
lar
data16
mov
add
sbb
or
sub
fsubrs
inc
xlat
mov
mov
lea
jb
push
inc
push
xchg
and
lea
pop
jae
adc
shrb
shr
sbb
mov
outsb
adc
outsb
lock
les
stos
mov
js
mov
and
add
call
push
or
add
xchg
lahf
std
bound
or
jae
dec
ss
dec
cmp
jl
fdivs
leave
outsl
sub
cmp
cmc
push
ficoms
mov
pop
pop
fmuls
popf
xchg
mov
adc
test
xor
ficoml
insl
mov
lds
sti
sub
rorl
mov
ficoml
or
sbb
aam
rolb
inc
sbb
hlt
loope
call
test
sub
dec
jb
inc
hlt
pop
ret
leave
std
pop
aas
mov
arpl
outsb
pop
jp
imul
mov
lahf
stos
cltd
or
cltd
addr16
push
sub
addr16
or
pop
in
mov
cmc
cli
mov
push
ljmp
sbb
sbb
arpl
push
xor
js
out
mov
jg
mov
mov
cld
mov
add
mov
and
dec
sub
pop
push
cltd
cli
pop
push
int3
pop
adc
dec
je
xchg
out
mov
lcall
mov
add
iret
cmpsb
push
ds
xchg
jo
iret
add
nop
add
cmp
cmp
dec
cltd
mov
mov
jl
sahf
in
add
jecxz
out
dec
sbb
adc
inc
inc
fisttpll
dec
sbb
mov
xor
cli
and
mov
adc
outsl
out
xor
or
pop
ja
mov
ror
or
xor
mov
incb
sbb
jmp
pop
out
imul
xor
int3
adc
addl
cmp
fcmovb
mov
dec
cmp
add
pop
push
xchg
out
or
aas
or
nop
push
repz
push
into
shl
dec
in
and
pusha
cld
sbb
aam
sub
push
mov
sub
call
dec
pop
gs
dec
dec
push
push
mov
ss
dec
xor
push
ss
lods
popf
js
jo
je
inc
jecxz
jnp
mov
push
fsubrl
aad
cmp
pushf
mov
dec
and
pop
pop
sub
insb
mov
icebp
pusha
decb
cmp
push
mov
int3
sahf
lahf
movsb
xlat
js
push
jo
pop
outsb
scas
inc
pop
pusha
imul
popa
fmul
or
add
iret
jp
inc
ret
test
sti
fistps
xor
orb
cmp
popl
xchg
adc
adc
imul
ds
movsl
push
stos
add
mov
out
mov
pop
cs
jmp
inc
jle
stc
cwtl
popf
addr16
imul
daa
movl
inc
sbb
loop
mov
je
mov
add
pop
insl
and
push
mov
bound
inc
jg
out
aaa
call
jns
xchg
push
sahf
push
dec
test
gs
arpl
sbb
xlat
mov
incb
cltd
cs
mov
push
sub
pop
and
imul
xor
and
dec
loope
inc
sbb
add
sbb
cmpsb
in
inc
imul
dec
arpl
addr16
push
scas
cwtl
fadds
jecxz
push
imul
dec
dec
pop
out
repz
out
pushf
jae
and
pop
fwait
adc
mov
sbb
xor
inc
xor
xchg
sarb
vpshlb
pop
xlat
ret
outsl
push
shll
repnz
stos
pushf
rcrl
jo
inc
xlat
jg
cltd
inc
jg
lods
icebp
adc
mov
inc
mov
lock
sbb
xchg
inc
mov
cmc
push
jnp
sbb
sbb
dec
push
addr16
and
jne
cmp
sub
popf
outsl
dec
scas
repz
cli
dec
push
icebp
into
xchg
lret
pop
jmp
mov
test
mov
cmp
call
shld
shl
mov
or
xor
or
xor
xor
mov
mov
mov
mov
mov
mov
shl
xor
mov
mov
mov
xor
xor
shrd
shr
or
xor
mov
or
mov
mov
mov
shl
xor
mov
mov
mov
xor
xor
shrd
xor
shr
or
or
cmp
jne
cmp
je
pushl
pushl
pushl
push
push
call
pop
leave
ret
movl
cmp
jae
cmp
jae
shrd
movl
shr
ret
xorl
mov
xor
and
movl
shr
ret
xor
xor
ret
push
mov
sub
movl
cmpl
movzwl
mov
movl
jmp
mov
mov
je
pushl
pushl
pushl
push
push
pushl
call
not
or
and
xor
mov
mov
movl
cmpl
movl
mov
mov
mov
jmp
movl
mov
jg
pushl
call
orl
sbb
sub
sbb
adcl
mov
or
mov
movl
cmpl
mov
mov
mov
jmp
not
jb
pushl
pushl
call
adc
xor
or
xor
add
or
sbb
inc
addl
movl
dec
movl
decl
movl
movl
movzbl
or
movl
cmpl
movl
movl
jmp
mov
movl
jge
push
call
adc
mov
mov
sub
and
sbb
subl
mov
or
mov
mov
sbb
mov
mov
sub
mov
push
mov
movl
sbb
mov
andl
mov
xorl
push
orl
push
xorl
push
subl
push
addl
call
xor
mov
cmpl
mov
mov
mov
movzwl
jmp
movl
movl
jg
push
pushl
push
pushl
pushl
call
or
or
adc
addl
xor
add
adc
sbb
mov
xorl
xor
and
cmpl
mov
movl
jmp
movl
movl
jg
push
push
call
sbb
sbbl
sub
notl
xor
add
sbb
xor
xor
add
and
mov
mov
sub
or
and
or
mov
adcl
and
cmpl
mov
mov
mov
jmp
movl
jl
push
pushl
push
pushl
call
add
sbbl
and
or
mov
sub
sbb
movl
mov
or
movl
movl
movl
movl
mov
addl
mov
mov
mov
add
movl
push
adc
push
subl
and
and
push
andl
push
xorl
call
mov
mov
cmp
movl
ja
jb
cmp
jae
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
add
mov
adc
mov
or
or
add
adc
xor
xor
add
mov
adc
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
jmp
loope
cwtl
cwtl
mov
push
outsb
aad
or
xchg
int
push
mov
fldl
fstps
js,pt
fwait
and
test
sysret
js
imul
fs
lock
inc
dec
or
movsb
lds
cld
scas
fadds
mov
jbe
push
and
add
jmp
push
push
dec
ljmp
fisttpl
outsl
push
insb
add
mov
mov
je
stos
fcomip
fdivrs
adc
sub
filds
pop
sub
negb
int3
ljmp
push
mov
sbb
lahf
jo
stc
lret
fbld
mov
adc
jb
cmp
push
push
jge
lods
in
sbb
cmp
cmpsl
fcoml
cmp
dec
jb
jae
stc
jo
mov
subb
das
fcoml
fists
bound
cmp
jns
mov
roll
jo
sub
lcall
aad
push
pop
push
xchg
les
ljmp
es
scas
push
push
int
xchg
ss
jo
sub
sub
adc
cmc
in
cwtl
sar
inc
je
cmp
dec
test
shrb
cmp
pop
add
leave
add
std
lds
push
adc
into
mov
adc
sarb
xchg
cmp
add
adc
and
in
movsb
icebp
mov
xchg
cld
mov
mov
and
hlt
xchg
push
std
stos
adc
push
in
pop
and
xchg
mov
jp
pop
scas
jle
mov
cmp
mov
push
rclb
jecxz
cmc
in
xchg
sbb
cmp
mov
imul
mov
icebp
adc
ss
dec
dec
shlb
add
dec
clc
and
cmpsb
fistpll
push
std
xor
hlt
call
sarb
lock
lea
cmp
shrl
push
lret
cmpsb
push
inc
sbb
push
inc
inc
jp
mov
push
push
mov
jmp
pop
shr
mov
ds
inc
fidivrl
inc
xchg
fists
das
and
xchg
ds
mov
pop
dec
imull
testb
pop
scas
mov
rol
andb
lods
stc
call
push
push
rcl
adc
push
xchg
jbe
jecxz
xchg
inc
or
enterw
jae
sub
jbe
inc
cld
fistpl
cmp
mov
push
cltd
dec
jmp
add
sbb
push
repz
iret
or
jnp
call
std
inc
stc
call
mov
loopne
ret
icebp
xchg
mov
pusha
jmp
fadds
jne
inc
repz
mov
or
mov
push
inc
inc
mov
js
adc
or
sti
inc
inc
jecxz
mov
ffreep
sub
xor
into
arpl
insl
movb
loop
xchg
mov
lahf
nop
clc
pop
cmpsb
ret
pop
xorb
xchg
rolb
insb
xlat
ja
movsl
lahf
movsl
lods
mov
repz
popf
sbb
push
inc
stos
ret
xchg
lock
mov
je
cmpsb
into
push
aad
addr16
loop
jns
arpl
add
cmpsb
sbb
or
mov
dec
push
inc
inc
popf
mov
jb
or
cs
mov
inc
lds
insl
push
sti
not
sbbl
jae
clc
test
push
cmp
mov
out
or
test
les
mov
shrb
push
jo
mov
or
icebp
xchg
push
push
and
ja
pop
mov
and
add
mov
ss
mov
adc
add
xchg
ja
jne
add
pop
xor
mov
cli
cmc
mov
inc
fs
pop
xor
loope
jb
jo
mov
sbb
ljmp
loopne
push
push
fsubs
pop
dec
inc
jge
mov
add
clc
push
mov
mov
loope
outsb
push
inc
and
outsb
mov
sbb
outsl
mov
cmpsl
push
data16
pop
push
pop
xlat
mov
in
and
aad
sbb
adc
imul
xor
ja
mov
shll
shll
lret
inc
adcb
add
loope
lcall
fs
leave
add
dec
and
pop
dec
aad
add
int3
pusha
and
pop
xchg
push
mov
fldt
xor
addr16
fimuls
arpl
in
lods
sub
dec
jnp
aam
arpl
pop
not
scas
cld
sub
sbb
or
and
push
or
lods
outsb
push
dec
jmp
mov
dec
add
sub
les
test
cmpsl
push
inc
iret
repz
icebp
cmc
leave
les
fdiv
cld
jp
out
jp
lcall
sbb
xchg
dec
add
push
jne
adc
mov
mov
testb
je
js
in
xor
mov
xor
cmp
std
test
jbe
testb
mov
adcl
pop
jo
lods
out
dec
add
es
add
popf
sbb
cmp
add
adc
lcall
test
mov
inc
mov
add
aaa
mov
cmp
mov
lcall
xor
ljmp
and
xor
push
out
aaa
xor
pop
clc
cmp
xchg
dec
mov
mov
sub
es
mov
aad
pop
mov
pop
gs
cli
push
pop
popl
sub
pop
xlat
popf
lock
jle
icebp
rorl
mov
jl
jb
movsb
lret
adc
pop
sub
sub
jg,pn
sub
popa
mov
adc
inc
out
sbb
xchg
fs
lds
jae
mov
add
clc
lea
jg
jmp
shrl
fs
push
mov
mov
sub
sbb
lods
jge
and
lods
int3
cmp
das
xchg
lret
inc
gs
arpl
int3
cwtl
mov
fstp
jmp
lock
sahf
cmpsb
cltd
dec
ret
adc
negl
data16
mov
xchg
sub
sub
jl
shlb
pop
out
scas
sbb
sub
ret
cmc
iret
pop
jp
mov
jnp
and
mov
aam
lret
sbbl
xchg
dec
lahf
loop
mov
sarl
in
or
xchg
testl
xchg
imul
aad
xchg
cmp
xor
aad
mov
das
fstl
lods
cld
mov
fmuls
in
repz
push
repz
in
cltd
shlb
and
mov
fs
xchg
movsb
xor
cli
in
jo
dec
xchg
shr
cmp
mov
fwait
jo
ljmp
pop
nop
pop
outsl
ss
mov
rorb
aas
push
cmc
add
mov
fcmove
dec
push
dec
mov
mov
xchg
iret
outsl
add
xor
mov
adc
loopne
mov
adc
mov
rolb
enter
repnz
sbb
mov
sarb
sub
fwait
icebp
rcl
add
inc
and
notl
sti
adc
xor
mov
outsb
es
dec
inc
jecxz
dec
insl
out
adc
and
xchg
jl
xor
lcall
dec
sbb
mov
jmp
sub
or
loop
cmpsb
push
out
jne
cmp
fwait
adc
jns
sbb
in
sahf
hlt
mov
xchg
sahf
cmc
repz
inc
pusha
sbb
into
mov
mov
data16
popf
add
in
int3
out
xor
jp
adc
lock
aad
lods
cmp
mov
push
sbb
loop
or
outsl
test
ficoms
loop
inc
and
xor
sbb
sarb
xchg
add
sub
jecxz
cmp
fucom
int
mov
popa
inc
jl
test
add
lret
xchg
or
xchg
adc
xchg
mull
fwait
fwait
lret
jecxz
outsb
cs
test
and
in
int
mov
pop
mov
mov
cmpsb
mov
test
call
xlat
adc
ret
sbb
xchg
outsl
xlat
cli
sub
jmp
pop
movsb
cmp
out
aam
icebp
xor
pop
fs
and
mov
cmp
repz
daa
paddd
mov
hlt
sbb
lods
mov
add
cmp
mov
jno
jno
mov
mov
arpl
dec
pop
fisubrs
push
xor
pop
dec
push
jmp
cmp
inc
push
jnp
aad
scas
pop
inc
loope
dec
xchg
fcmovnb
fistpll
cmp
clc
inc
je
add
subb
imul
mov
cwtl
loop
xchg
mov
inc
int3
jb
int
sbb
xchg
sbb
aad
push
imul
pop
pop
sahf
and
jle
stos
sub
pop
gs
adc
movsl
jo
sub
hlt
je
inc
cmp
pop
nop
lea
push
mov
jno
stc
addl
pop
mov
sahf
and
or
fwait
or
stos
inc
ljmp
xlat
std
lret
xchg
inc
sbbl
movsb
mov
rorl
stos
and
inc
out
sub
inc
les
les
jb
jecxz
mov
pop
sbb
js
outsl
add
mov
inc
in
xor
inc
mov
push
push
jne
xor
repz
fisubs
js
mov
jno
data16
shll
mov
das
bound
or
push
jnp
jb
sub
daa
rcr
add
test
mov
mov
arpl
sub
movsl
inc
mov
call
sub
xchg
and
movsb
shlb
sub
xchg
hlt
cmpb
out
push
adc
je
sub
lock
pop
vmwrite
xchg
or
cmp
in
mov
mov
lock
mov
sub
jno
std
ljmp
dec
jnp
mov
cmp
cli
es
stc
stos
push
addl
lcall
jl
jae
jbe
mov
aaa
daa
mov
add
xchg
popf
or
adc
repz
and
nop
int3
add
pop
or
arpl
jmp
fcomps
inc
fwait
push
adc
push
movsl
inc
sbb
jo
fmuls
loop
dec
mov
les
xchg
cs
xchg
xor
in
arpl
cmp
mov
lret
stos
fstpl
xor
jns
test
sub
fdivrs
inc
bound
decl
cmpsb
lcall
adc
mov
lds
adc
fwait
shrb
repz
mov
ret
sbb
push
fcmovb
leave
sti
push
jge
in
scas
sub
sub
or
adc
mov
movsb
sahf
ss
inc
xor
daa
in
cmp
imul
cmp
or
push
mov
arpl
xor
push
and
jge
testl
cmp
fcompl
pushl
jge
mov
push
jbe
mov
xchg
mov
ret
fldlg2
cmc
xor
mov
mov
arpl
cld
lcall
pop
fsubrs
addr16
out
pop
sub
loop
push
mov
scas
idivb
pop
lods
inc
std
mov
sahf
cmp
mov
cmp
test
push
mov
stos
and
fimuls
jle
sub
aam
mov
mov
add
mov
iret
loop
rcll
sbb
arpl
inc
jo
jno
mov
dec
jne
or
sbb
pop
clc
xor
in
cwtl
mov
mov
aas
or
xchg
sub
pop
mov
pushf
test
fidivrl
shl
push
cmp
iret
or
xchg
scas
fiaddl
loopne
andb
lods
push
imul
dec
icebp
xlat
lahf
sub
xor
lret
loopne
daa
std
in
fnstsw
scas
push
add
xor
lcall
sbbl
xlat
inc
sbb
aam
dec
add
xchg
cmp
data16
mov
shlb
inc
lock
xor
imul
nop
aas
lret
push
insl
test
lahf
in
in
lock
sti
sbb
addr16
pop
mov
cmc
or
add
jp
jne
mov
inc
dec
daa
dec
jmp
ja
push
push
or
lds
add
push
mov
mov
out
pop
loop
sar
jp
sbb
cmpsb
push
cltd
add
jmp
xchg
scas
jb
cmp
mov
xchg
cmp
in
stos
arpl
mov
fcom
xchg
sub
out
fiaddl
int3
pusha
jp
push
dec
cli
out
leave
arpl
pop
ret
push
mov
enter
or
je
jo
jmp
mov
pop
jl
mov
dec
jnp
ja
pop
add
inc
subl
xor
pop
xchg
mov
add
jle
pop
cwtl
sahf
xor
mov
fwait
inc
pop
and
mov
lahf
mov
es
adc
loop
push
pop
lret
dec
or
cmpsl
mull
cmpsb
outsb
rorl
add
mov
lcall
pop
mov
int
rol
cmpsb
dec
ss
enter
xor
test
in
ja
add
add
arpl
fcomps
and
loopne
cmp
push
mov
loope
fmul
pop
fistps
in
inc
fs
popa
shlb
scas
push
fstps
mov
test
ja
fimuls
iret
sbb
cwtl
inc
mov
jmp
cmpsb
pusha
shrl
adc
cmp
sub
or
ret
push
inc
inc
inc
outsl
dec
fiadds
imul
sub
sbb
or
hlt
add
mov
mov
mov
imul
movl
lahf
in
pop
mov
ds
imul
testb
dec
rcll
mov
es
lods
xor
jl
ret
pop
sub
inc
pop
fwait
jo
loope
or
sbb
mov
jbe
shl
mov
bnd
add
adc
nop
in
mov
lahf
orb
cwtl
ds
cld
je
test
jne
add
push
cmpsb
push
sub
sar
xlat
icebp
pop
xchg
mov
in
imull
adc
xor
mov
sti
call
dec
dec
xchg
ret
jge
jnp
sub
outsl
loop
jecxz
cmpsb
scas
cs
cmp
fwait
cld
mov
icebp
mov
out
das
sbb
sub
mov
es
fsubl
aaa
testl
jle
movsl
sub
push
mov
pop
mov
sbb
cmp
xchg
push
aad
lcall
dec
mov
out
mov
flds
dec
lret
js
xchg
ja
lods
jae
cmp
lahf
mov
gs
jne
aaa
lcall
adc
sub
push
movsl
lahf
xchg
sub
sbb
xchg
mov
loope
loopne
mov
ss
fiaddl
pop
stc
push
rclb
mov
jecxz
enter
iret
loopne
xchg
push
sub
adc
mov
setno
push
mov
add
push
cmp
and
popa
pop
pop
lds
and
add
push
sub
sub
cld
imul
push
rcll
dec
fmuls
mov
xchg
outsl
repnz
cmp
pop
cmpsl
xor
cmp
lock
shrl
pop
mov
daa
cwtl
adc
rcrl
or
jecxz
js
sub
daa
dec
dec
mov
jl
outsl
mov
jmp
fadd
sbb
adc
inc
sub
add
movsb
sbb
popf
xchg
xchg
xchg
lock
cmp
setnp
scas
pop
push
movsl
mov
addl
mov
pop
or
add
inc
sbb
clc
lds
rorb
outsl
xchg
push
clc
insb
sti
scas
iret
mov
loope
cs
sahf
arpl
subl
lret
imul
lods
in
add
mov
ja
mov
mov
jnp
sbb
add
jmp
xor
adcb
cmc
add
mov
and
std
push
jmp
mov
popf
add
in
cmp
in
testb
lretw
adc
aad
jbe
mov
lret
jmp
xchg
push
daa
fdivl
pop
mov
inc
in
pop
push
in
ficompl
je
out
pop
repnz
mov
jge
adc
jb
pop
pusha
adc
fwait
sbb
push
lcall
cmp
sbb
mov
outsb
data16
mov
sub
fs
dec
jmp
int
mov
stc
test
jns
pop
stos
test
fnstenv
daa
or
sbb
enter
gs
cwtl
xchg
xchg
mov
or
sbb
movsl
iret
rcrl
push
lods
aam
push
fdivrl
xchg
dec
dec
inc
xor
lods
call
cmp
adc
in
sbb
popf
sub
dec
pop
push
xchg
lret
adc
jg
mov
and
das
sbb
adc
sbb
xor
cmp
xchg
fstpl
and
addr16
xchg
dec
mov
into
jb
mov
push
lret
adc
cvtdq2ps
popa
stc
test
les
mov
scas
mov
icebp
scas
jb
std
jb
mov
ret
mov
cmp
loopne
mov
push
pop
aaa
dec
inc
sbb
pop
sahf
rorb
and
pop
popa
test
pop
pop
add
push
stos
xchg
iret
dec
lock
out
xchg
cmpsl
ljmp
add
out
aam
dec
xchg
add
mov
stos
mov
lahf
mov
sbb
into
in
repnz
clc
pop
cmpsl
les
cmpl
in
cmp
cmp
inc
mov
ret
mov
repnz
add
ret
hlt
dec
push
sbb
data16
cmpb
adc
push
pop
lret
jg
adc
jge
stos
adc
cmpsl
aam
inc
fstpt
roll
les
adc
je
stos
pop
cmp
xchg
and
std
ja
lods
repnz
es
jo
mov
movsl
jo
sub
mov
mov
js
mov
jge
inc
push
inc
movsb
cltd
test
int
pop
dec
add
aaa
outsl
xchg
out
dec
and
or
pop
cmc
icebp
mov
mov
inc
loopne
insb
test
aad
shrb
fdivl
lds
adc
or
popl
mov
aad
xchg
push
in
stc
mov
jp
jae
push
push
iret
int3
inc
push
or
cwtl
gs
lea
cwtl
cli
xchg
aad
pushf
dec
sub
daa
popf
mov
xlat
fwait
cmpsl
mov
add
push
test
jne
mov
xor
adc
call
dec
loopne
scas
pushf
std
jnp
movsb
cmp
jne
in
pop
sub
adc
mov
inc
mov
lds
dec
ficoml
test
jb
or
push
xchg
jmp
fldln2
xchg
dec
dec
sbb
pushf
mov
add
imul
movsb
loop
jbe
jnp
and
inc
xchg
call
sub
testl
out
adcb
cmp
mov
nop
popa
and
ret
nop
inc
cs
mov
xchg
loopne
push
out
lods
gs
lret
jno
mov
insb
rorb
push
jmp
jb
outsb
leave
mov
shlb
mov
mov
mov
jne
inc
xchg
testb
clc
hlt
cmp
cmc
mov
mov
jo
jae
mov
iret
dec
sub
or
mov
data16
lods
test
and
push
testb
lret
and
or
xor
dec
mov
mov
bswap
mov
inc
in
sub
sub
int
mov
sbb
inc
inc
push
dec
adc
pop
stos
jecxz
push
stc
inc
jecxz
mov
push
inc
aas
mov
std
movb
adcl
jne
mov
lret
stos
sub
pop
push
jo
or
lahf
in
and
adc
shl
or
call
jp
pop
inc
enter
test
inc
cmp
imul
mov
adc
jbe
sub
int3
loopne
dec
mov
cltd
pop
pop
pop
sub
shlb
pop
std
fnsave
xor
mov
ret
lea
cmp
pop
cmp
or
mov
filds
xor
pop
fcmovbe
jne
icebp
pop
insb
or
push
jno
lret
lahf
arpl
packssdw
sti
xor
int3
int3
jo
rcrb
pushf
fidivl
das
ficompl
std
cwtl
cmc
jmp
lea
cmp
jb
xchg
icebp
xor
stc
scas
mov
repnz
mov
mov
testl
xlat
cltd
jle
xchg
mov
andb
movsb
and
cli
and
cmp
adc
xor
sbb
inc
cs
call
stos
mov
clc
lahf
dec
xor
iret
pop
push
lcall
stos
cmp
ret
xchg
bound
in
add
or
filds
leave
sbb
sbb
jnp
sbb
pusha
cmpsb
inc
jo
pop
jmp
iret
xor
out
aad
data16
pop
and
lea
pop
cltd
jb
push
shrb
mov
scas
or
jae
mov
mov
cmp
xor
shll
mov
dec
xchg
adc
xchg
scas
aam
ds
push
cmpsl
sahf
inc
adc
loopne
sbb
mov
call
mov
xor
lahf
cmpsl
fs
inc
jmp
fs
rorb
bound
sbb
cli
loop
xor
dec
push
bswap
lds
jns
pop
repnz
fldt
push
push
and
outsb
mov
gs
sti
rcr
mov
add
aaa
cmpl
leave
movsl
lea
lods
mov
cmp
lret
fs
dec
pop
test
push
in
cmp
cmpsl
xchg
sbb
mov
mov
dec
scas
mov
imul
aaa
mov
xor
test
adc
les
cwtl
clc
psubd
sub
push
xor
sbb
ljmp
lea
cld
movb
or
add
push
adc
jae
sahf
ret
push
enter
jb
or
xchg
sub
lods
add
and
cmc
arpl
mov
cld
daa
adc
int
out
xor
out
push
mov
or
xchg
add
ret
adc
sub
cmp
bnd
sub
data16
add
inc
xchg
sbb
mov
cmp
repnz
adc
rorl
xchg
pusha
mov
je
xor
int3
push
dec
dec
jno
xor
sub
sbb
pop
shlb
jle
lret
adc
push
lret
gs
xor
push
dec
test
fwait
mov
test
leave
sbb
aas
xchg
xchg
imul
or
into
popf
xor
jns
ljmp
loop
aaa
in
push
mov
push
jae
pop
push
das
repnz
cs
aas
sbb
xchg
repz
enter
lods
bound
hlt
pop
jb
cmp
imul
cmp
dec
addr16
cmp
and
mov
divb
insl
js
xchg
bound
dec
es
sub
aad
cmpsb
into
int3
movsl
inc
loopne
pop
aas
fldl
mov
mov
loop
xchg
sub
loop
adc
inc
xor
cmpsl
push
mov
mov
mov
mov
sar
lret
jb
aaa
pop
cwtl
mov
js
lods
dec
aas
mov
enter
lea
sub
mov
sbb
out
lods
add
xchg
sub
mov
fwait
shl
push
arpl
div
mov
push
inc
mov
popf
insl
xchg
cmp
fcomps
jmp
push
dec
sub
mov
out
xlat
popf
mov
jo
dec
xchg
rcrl
scas
pop
adc
adc
xchg
jo
jl
scas
cmpsb
cmp
jecxz
mov
addr16
dec
pusha
inc
mov
fnstsw
fcomip
cmp
ss
out
push
cmpsb
lods
inc
lret
je
xchg
ljmp
out
jl
popf
mov
mov
hlt
mov
idivb
fildll
pop
mov
mov
outsb
test
les
push
lods
aas
xor
adc
and
test
mov
clc
xchg
sub
enter
and
lahf
dec
push
cli
push
cmp
int3
es
adc
fwait
cmp
cs
mov
xchg
xor
das
mov
push
push
movsb
scas
mov
cmpsl
push
xor
hlt
movsl
pop
or
mov
cmp
out
sub
mov
or
xor
adc
in
push
dec
jns
and
add
shrl
mov
sub
orb
inc
add
inc
push
clc
lret
jecxz
nop
fldl
pushf
xchg
mov
mov
or
xchg
inc
call
dec
sbb
pop
test
mov
dec
dec
mov
xchg
jb
xor
xchg
add
xchg
inc
pop
in
xor
dec
pop
inc
mov
xchg
and
push
scas
out
popa
push
xchg
pop
xchg
aad
outsl
popa
xor
adc
in
add
dec
fnstsw
mov
sub
jmp
xor
mov
sbb
sub
mov
rep
mov
test
push
dec
mov
fstps
adc
adc
stc
xchg
shlb
or
lret
clc
or
in
data16
pop
pop
fs
clc
xchg
dec
pop
repz
dec
mov
fimuls
push
mov
out
in
insl
sbb
xchg
rol
filds
add
push
add
andl
outsl
popf
mov
fwait
int3
in
fidivrs
cmp
pushf
add
test
xor
int3
sub
sbb
sub
out
mov
loope
lret
inc
push
push
and
jo
pop
lcall
aas
jle
jns
add
or
sub
les
int
pop
sub
sete
cmpsb
subb
jno
outsl
cmpsl
rclb
rcll
fidivl
push
mov
out
pop
lcall
and
enter
mov
pop
jp
pop
mov
mov
xlat
stos
mov
jge
fidivl
dec
cmc
call
cwtl
les
aas
pop
enter
xor
jno
std
add
add
adc
aad
outsl
pushf
or
cwtl
inc
divl
mov
or
js
sti
jp
cmp
xor
mov
add
lcall
cmp
push
sahf
push
stc
stc
xchg
and
adc
add
add
jmp
dec
mov
push
cmp
mov
mov
int3
pusha
jo
cli
ljmp
stc
or
gs
xor
rorb
dec
xchg
fdivrl
ja
movb
or
fmul
push
jnp
cmp
jns
adc
mov
scas
xchg
fnstsw
cmp
jne
sahf
mov
mov
dec
dec
dec
fistpl
xor
push
jecxz
mov
in
mov
push
cmp
rcrl
and
outsl
mov
mov
les
dec
in
repz
cmpsl
outsb
lahf
mov
rcr
jmp
or
adc
jge
imul
mov
mov
jle
cmp
push
ds
rclb
mov
push
dec
cli
lock
insl
mov
jle
inc
pop
lret
push
push
out
repz
scas
push
or
mov
je
add
adc
mov
lods
mov
and
and
and
sahf
ja
cmp
jo
mov
cld
jge
out
sub
fwait
nop
daa
push
push
xchg
icebp
imul
fs
lods
lea
mov
pusha
push
testb
out
or
mov
mov
sbb
jb
fdivrl
or
sub
xchg
pop
lds
inc
mov
mov
cmpsl
mov
scas
push
cmpsb
adc
popa
rcl
arpl
xor
mov
repz
fldt
insb
gs
imul
ljmp
out
lret
in
lock
xlat
repz
stos
cli
push
in
push
mov
lret
out
pop
pop
cmp
xchg
add
cmc
sub
movsb
push
movsl
call
repz
popf
out
stc
decl
xchg
and
adc
inc
mov
dec
and
jl
push
popf
lret
gs
test
dec
notb
test
in
jmp
mov
orl
push
jnp
sarl
mov
dec
cmp
xor
lock
jmp
mov
in
and
pop
psrlw
mov
adc
cmp
addr16
push
in
fistpl
dec
shrl
cmp
sahf
fisttpl
stos
mov
aas
sbb
inc
mov
ret
inc
jns
push
dec
loop
je
popf
push
in
fisubs
cwtl
jg
rorl
enter
pusha
lcall
in
cli
fcomi
cmp
jle
mov
mov
pop
or
cmpsl
pop
hlt
cltd
cmp
xchg
and
rcl
ficoms
mov
push
subb
into
mov
nop
addl
cs
enter
push
dec
adc
out
arpl
addr16
stc
add
inc
andl
das
push
push
cltd
ljmp
cmpsl
and
dec
cld
push
sub
dec
mov
sub
mov
mov
and
mov
and
mov
push
push
push
push
call
push
push
jmp
into
cmc
je
xor
mov
jb
fwait
or
movsl
or
push
mov
jmp
mov
and
bound
and
mov
out
add
fsts
sub
dec
dec
push
ds
int
mov
push
push
leave
lahf
mov
jl
std
hlt
inc
sbb
adc
dec
push
dec
inc
fs
jcxz
adc
mov
icebp
cs
push
dec
xchg
addr16
inc
gs
mov
fwait
or
hlt
stc
jle
inc
xchg
inc
mov
subl
mov
pop
fsubrl
in
leave
mov
in
sub
inc
inc
ljmp
mov
mov
stos
ja
mov
xlat
dec
sahf
mov
jmp
lahf
and
lods
inc
mov
xchg
fdivs
inc
scas
inc
jp
push
ret
out
cmp
push
dec
sarl
mov
pushf
inc
or
imul
and
gs
out
outsl
andb
ret
lods
adc
in
jbe
packuswb
mov
cmpsl
sub
daa
or
icebp
inc
xchg
fmul
stos
fucomi
mov
jge
cmp
divb
pop
ljmp
loopne
push
mov
xchg
cmp
mov
loop
push
push
call
mov
mov
add
mov
adc
mov
and
mov
and
mov
cmp
jne
cmp
je
movl
movl
mov
mov
push
push
push
push
call
xor
xor
or
or
mov
mov
mov
cmp
jne
mov
mov
mov
mov
shrd
shl
mov
mov
xor
shr
mov
xor
or
mov
mov
mov
shrd
shr
mov
mov
xor
xor
or
mov
movb
movb
movb
movb
movb
movb
mov
movzbl
mov
movzbl
shl
cltd
idiv
mov
movzbl
movzbl
or
mov
movzbl
cltd
idiv
mov
movzbl
movzbl
cltd
idiv
movzbl
and
mov
movb
movb
mov
mov
add
add
mov
imul
mov
cmp
ja
mov
mov
shrd
xor
mov
shr
mov
xor
shl
or
mov
pop
leave
ret
push
mov
sub
push
push
push
movl
movl
movl
movl
movl
movl
movl
movl
xor
inc
mov
movl
mov
mov
sub
add
add
imul
add
xor
movl
movl
movl
movl
mov
or
add
mov
and
mov
sub
mov
mov
mov
add
or
sub
xor
sub
mov
mov
mov
mov
mov
and
xor
xor
div
lea
mov
add
mov
and
mov
imul
mov
sub
cmp
jbe
push
pop
mov
mov
movl
movl
movl
mov
movl
movl
xor
movl
mov
mov
sub
div
mov
xor
mov
div
mov
xor
div
xor
mov
mov
imul
mov
add
div
mov
mov
sub
sub
xor
div
mov
add
cmp
jae
movl
movl
movl
movl
xor
movl
movl
mov
push
pop
div
mov
mov
mov
sub
mov
mov
imul
mov
xor
sub
add
and
mov
sub
mov
sub
mov
sub
mov
mov
mov
mov
xor
add
xor
and
lea
mov
mov
add
div
mov
mov
sub
xor
div
add
cmp
jb
xor
inc
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
add
and
xor
mov
sub
movl
movl
mov
movl
movl
mov
mov
imul
xor
or
xor
mov
sub
mov
mov
mov
or
sub
xor
div
mov
mov
sub
mov
mov
mov
mov
mov
imul
mov
imul
or
mov
or
xor
lea
mov
and
add
xor
add
cmp
jne
pop
pop
pop
leave
ret
push
mov
sub
push
push
movl
movl
mov
mov
add
or
mov
lea
mov
movl
movl
mov
mov
and
xor
mov
imul
xor
lea
mov
movl
movl
mov
xor
push
pop
div
mov
xor
push
add
and
mov
sub
mov
movl
movl
movl
mov
mov
lea
mov
div
mov
lea
mov
movl
movl
movl
mov
mov
xor
sub
mov
sub
xor
mov
movl
pop
mov
movl
movl
mov
mov
mov
xor
xor
div
mov
and
sub
mov
movl
movl
movl
movl
movl
movl
mov
add
mov
xor
mov
or
mov
or
mov
and
mov
sub
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
add
adc
or
mov
or
or
mov
mov
or
mov
sub
mov
sbb
mov
or
or
add
mov
adc
mov
movl
movl
movl
movl
movl
movl
movl
xor
inc
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
movl
mov
movl
movl
mov
or
add
mov
or
mov
sub
mov
sub
imul
add
mov
push
mov
lea
mov
xor
div
mov
lea
push
mov
mov
push
push
push
push
call
mov
mov
push
push
or
or
push
push
call
mov
mov
xor
mov
mov
mov
and
add
lea
xor
push
lea
call
mov
mov
mov
sub
xor
imul
add
xor
xor
mov
div
cmp
jne
mov
xor
mov
div
mov
mov
xor
sub
mov
xor
sub
or
lea
push
mov
push
pop
div
mov
xor
div
mov
mov
xor
xor
div
imul
sub
push
mov
add
push
mov
sub
mov
pushl
call
mov
mov
lea
mov
incl
mov
mov
xor
shld
shl
mov
mov
xor
xor
cmp
jne
cmp
jne
mov
mov
jmp
lea
mov
mov
mov
mov
mov
sub
mov
mov
mov
sub
mov
movl
movl
mov
mov
mov
mov
pushl
pushl
pushl
pushl
pushl
push
push
pushl
mov
call
mov
mov
pushl
call
mov
push
add
push
push
call
mov
jmp
mov
mov
pop
pop
leave
ret
push
mov
sub
push
push
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
push
push
push
call
mov
mov
add
adc
and
push
and
or
push
or
xor
xor
push
push
call
mov
movl
movl
movl
movl
xor
movl
push
inc
mov
mov
mov
push
push
push
call
mov
mov
or
or
push
add
push
adc
push
push
call
mov
lea
xor
mov
div
mov
sub
mov
movl
mov
movl
mov
mov
sub
mov
xor
div
mov
xor
or
or
mov
mov
movl
movl
movl
mov
add
mov
and
lea
mov
mov
mov
movl
movl
movl
mov
mov
sub
add
xor
add
mov
div
mov
xor
pop
pop
or
mov
movl
movl
movl
mov
mov
and
sub
or
mov
imul
mov
div
leave
ret
push
mov
sub
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
push
movl
mov
mov
push
push
push
call
mov
mov
xor
mov
mov
mov
xor
mov
xor
or
mov
mov
mov
xor
or
add
cltd
adc
cmp
jne
cmp
je
mov
mov
mov
mov
add
adc
or
mov
or
mov
push
push
push
push
call
mov
mov
and
mov
mov
mov
and
xor
xor
xor
cmp
jne
cmp
jne
mov
mov
add
or
mov
or
xor
lea
xor
mov
and
add
mov
xor
xor
div
mov
mov
xor
imul
mov
push
push
xor
mov
lea
mov
mov
lea
mov
mov
or
xor
div
mov
add
xor
add
mov
add
mov
mov
mov
mov
sub
mov
sbb
mov
xor
mov
xor
mov
add
adc
add
adc
push
push
call
mov
sub
push
pop
sbb
mov
xor
cmp
jne
cmp
jne
mov
mov
add
shr
or
mov
xor
xor
add
mov
pop
leave
ret
push
mov
sub
push
push
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
adc
mov
push
push
or
or
push
push
call
mov
mov
and
or
mov
mov
and
or
xor
xor
shld
shl
shr
xor
or
or
mov
xor
mov
mov
xor
mov
mov
mov
mov
mov
push
push
push
push
call
add
adc
push
push
push
push
call
mov
mov
mov
xor
xor
add
mov
adc
mov
mov
mov
mov
mov
sub
mov
mov
sbb
mov
sub
mov
sbb
add
mov
adc
push
xor
mov
pop
sub
mov
sub
xor
mov
mov
add
mov
shrd
xor
shl
shr
or
xor
or
mov
push
mov
mov
mov
push
push
push
call
mov
mov
mov
or
mov
or
mov
add
mov
adc
mov
add
mov
adc
add
pop
adc
pop
mov
mov
pop
leave
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
and
add
mov
and
mov
sub
and
mov
mov
imul
add
add
xor
cmp
jne
mov
mov
mov
sub
add
mov
or
mov
imul
sub
add
mov
or
mov
mov
add
imul
add
mov
add
mov
mov
mov
and
mov
and
mov
imul
mov
or
mov
imul
mov
sub
cmp
je
mov
jmp
mov
sub
xor
add
jmp
movl
movl
mov
mov
imul
add
and
add
or
sub
leave
ret
push
mov
and
sub
push
push
lea
mov
mov
mov
mov
sub
sbb
mov
orl
orl
lea
push
lea
push
call
mov
mov
pushl
mov
pushl
mov
pushl
pushl
pushl
pushl
pushl
call
pop
pop
mov
pop
ret
push
mov
sub
push
push
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
xor
mov
div
mov
mov
mov
mov
imul
mov
imul
xor
or
mov
mov
xor
mov
and
sub
xor
xor
add
div
mov
jmp
movl
mov
movl
movl
mov
mov
or
xor
mov
sub
xor
mov
sub
sub
mov
mov
mov
mov
mov
mov
mov
mov
imul
imul
sub
imul
xor
add
mov
mov
xor
mov
and
sub
xor
xor
mov
div
mov
sub
mov
add
xor
add
mov
xor
sub
cmp
jbe
pop
pop
pop
leave
ret
push
mov
sub
incl
push
orl
push
xor
add
mov
sub
push
adc
mov
cmpl
movzbl
movl
mov
movzbl
jmp
movl
movl
jbe
pushl
pushl
call
xor
add
mov
sub
xor
add
inc
movzwl
or
mov
and
sbb
mov
addl
shrd
cmpl
movl
movzbl
jmp
mov
mov
jbe
pushl
call
add
addl
movzwl
sub
inc
movzwl
sbb
shr
mov
mov
xor
mov
or
mov
mov
cmpl
movl
movl
movl
jmp
movl
ja
pushl
push
push
call
sub
mov
xor
sub
or
and
xor
or
sbbl
mov
mov
xor
mov
shl
mov
subl
shrd
cmpl
mov
mov
mov
mov
jmp
mov
mov
jne
push
push
pushl
call
mov
mov
sub
imul
subl
mov
and
mov
and
mov
adc
xor
shr
mov
mov
cmpl
mov
mov
jmp
mov
mov
jle
push
push
call
mov
sbb
and
or
neg
adc
add
xor
xor
add
or
cmpl
not
mov
mov
jmp
movl
mov
jg
push
call
mov
and
xor
add
orl
subl
and
sbb
mov
sbb
mov
xor
mov
mov
adc
mov
dec
mov
adc
mov
neg
mov
cmpl
mov
not
movl
jmp
mov
mov
jbe
pushl
call
or
sub
xorl
add
adc
dec
movzwl
sbb
mov
and
mov
xor
mov
andl
shl
sbb
xor
add
shld
mov
xor
mov
shl
adcl
mov
neg
xor
cmpl
mov
mov
movl
mov
jmp
movl
jg
pushl
call
and
or
sbbl
inc
subl
mov
xor
sbbl
xor
movl
inc
movl
movl
movl
cmp
movl
jne
movl
cmp
movl
je
mov
mov
sub
and
mov
and
mov
xor
adcl
shld
or
shl
cmpl
mov
mov
movl
jmp
mov
movl
jge
push
push
push
push
push
push
push
call
adcl
movzbl
adc
sbb
and
mov
adc
adcl
xor
mov
xor
or
sbb
mov
mov
xorl
xor
movl
cmp
jne
movl
cmp
je
add
mov
mov
cmpl
mov
movzbl
notl
mov
jmp
mov
ja
push
push
pushl
push
push
push
pushl
call
orl
adc
and
orl
xorl
xor
shl
mov
sbbl
xor
addl
shr
or
adc
mov
mov
sub
mov
mov
mov
sub
xor
mov
subl
mov
mov
xor
or
sub
xor
mov
push
and
pop
orl
sub
cmpl
movl
mov
mov
jmp
movl
jg
push
push
push
push
push
call
adc
sbb
xorl
orl
sub
sub
xor
mov
sub
mov
notl
add
subl
mov
addl
lea
not
mov
mov
mov
xor
xor
shr
shl
or
mov
movl
mov
mov
xor
xor
shr
shl
or
push
lea
push
lea
push
call
mov
mov
xor
xor
shr
shl
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
lea
push
shl
call
mov
mov
xor
xor
shr
shl
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
lea
push
shl
call
mov
mov
xor
xor
shl
shr
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
shl
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
lea
push
shl
call
mov
mov
xor
shl
xor
shr
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
shl
mov
xor
or
mov
shrd
shr
mov
mov
xor
xor
or
shl
add
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
lea
push
shl
call
mov
mov
xor
shr
inc
xor
shl
or
mov
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
mov
mov
push
pushl
shl
call
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
mov
push
pushl
shl
call
mov
mov
mov
mov
mov
mov
rol
mov
xor
cmp
je
movl
mov
xor
mov
test
je
mov
mov
movzbl
sub
mov
rorb
mov
mov
inc
cmp
jb
decl
jne
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
add
push
lea
push
shl
call
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
push
push
mov
shl
mov
shrd
shr
mov
mov
xor
xor
or
add
push
shl
call
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
push
shl
call
mov
mov
shrd
shr
mov
mov
pop
xor
xor
pop
shl
or
pop
leave
ret
or
mov
mov
andl
or
mov
mov
jne
mov
movl
mul
ret
andl
push
cmpl
mov
movl
mov
movl
jmp
movl
movl
jg
push
pushl
pushl
pushl
call
and
sbbl
subl
sbb
andl
sbb
and
mul
mov
mov
mull
add
mov
mul
add
pop
ret
push
mov
sub
push
push
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
imul
add
xor
add
mov
mov
sub
imul
add
xor
div
mov
mov
jmp
movl
movl
movl
movl
mov
mov
or
mov
imul
add
xor
mov
div
mov
mov
xor
sub
mov
mov
mov
xor
sub
mov
sub
mov
add
mov
mov
sub
and
add
xor
mov
div
xor
add
mov
mov
sub
imul
add
div
mov
xor
mov
sub
mov
and
or
sub
xor
mov
sub
cmp
jbe
pop
pop
pop
leave
ret
push
mov
and
sub
push
push
push
xor
push
push
call
mov
movzbl
push
call
test
jne
xor
movl
jmp
cmpl
movl
mov
mov
jmp
mov
jne
pushl
pushl
push
push
pushl
call
xor
and
xor
or
sub
or
sbbl
cmpl
movl
mov
mov
jmp
mov
mov
jg
pushl
pushl
call
andl
xor
and
adc
adcl
xor
xor
xor
or
sub
sub
mov
adcl
movl
movl
xor
movl
cmpl
mov
mov
notl
jmp
mov
jl
pushl
push
call
inc
mov
xor
mov
inc
and
sub
movl
mov
mov
adc
movl
add
movl
mov
add
movl
orl
push
add
movl
cmpl
not
notl
jmp
mov
jl
pushl
call
or
xor
xor
adc
andl
mov
cmpl
movl
not
not
movl
jmp
mov
mov
jg
call
xor
subl
orl
sbb
xor
xor
or
or
mov
push
subl
push
push
sbbl
call
xor
mov
mov
push
adcl
push
xorl
push
xorl
push
call
notl
mov
adcl
mov
addl
add
mov
adc
adc
mov
orl
xor
or
mov
adc
xor
mov
adc
movl
add
movl
or
movl
cmpl
movzwl
movl
jmp
movl
je
push
push
push
call
inc
add
mov
xor
adc
add
xor
movl
xor
or
mov
sub
xor
movl
cmpl
movl
mov
jmp
notl
mov
jg
push
push
call
adc
and
sub
sbb
add
sbb
mov
mov
or
push
movl
mov
add
mov
sbbl
push
adcl
push
push
andl
call
sbbl
mov
mov
push
push
xorl
push
andl
push
sbbl
call
mov
sbb
mov
sbbl
xor
mov
xor
mov
and
mov
movl
xor
xor
cmp
jne
movl
cmp
jne
sbb
movl
cmpl
mov
mov
jmp
notl
jb
push
pushl
pushl
push
call
xor
and
add
add
movzwl
add
mov
cmpl
not
mov
movl
movl
jmp
mov
jae
push
push
pushl
push
call
adc
and
mov
sub
sbb
movzbl
or
or
and
movl
movl
mov
cmpl
movl
mov
mov
movl
jmp
movl
movl
jle
push
push
push
call
incl
adc
and
adcl
xor
imul
and
xor
sbbl
mov
div
sub
pushl
cmpl
mov
movl
mov
jmp
mov
movl
jae
pushl
push
call
sbb
movzwl
and
mov
add
xor
mov
mov
or
sbb
addl
xor
xor
adcl
and
xor
subl
pushl
mov
cmpl
mov
mov
jmp
movl
movl
jg
push
call
sbb
sbb
addl
or
or
xor
adc
push
pop
div
cmpl
mov
movl
mov
jmp
movl
movl
jl
pushl
push
pushl
call
and
and
movzwl
sub
not
mov
or
mov
addl
sub
add
imul
subl
and
adcl
xor
pushl
notl
pushl
pushl
andl
pushl
andl
pushl
subl
call
cmpl
mov
mov
jmp
movl
mov
jne
push
pushl
pushl
call
xorl
sub
mov
mov
adc
orl
sub
sbb
xor
movl
movl
xor
or
mov
sub
or
mov
addl
mov
sub
xor
mov
xorl
xor
xor
movl
div
imul
xor
orl
pushl
pushl
call
decl
movl
adc
mov
movl
movl
sub
mov
cmpl
movl
mov
mov
movl
jmp
movl
movl
jb
push
push
push
pushl
push
push
push
pushl
call
add
adc
add
xor
xor
or
mov
sbb
mov
mov
adc
mov
mov
mov
push
push
xor
xor
adcl
push
xorl
push
call
xorl
add
mov
movl
adc
adcl
mov
movl
movl
movl
movl
dec
movl
jne
sbb
mov
not
mov
subl
mov
addl
mov
movl
movl
mov
call
add
lea
or
mov
lea
mov
sub
mov
mov
sub
mov
mov
mov
mov
addl
xor
xor
xor
shl
and
shr
movzbl
add
or
mov
mov
lea
xor
add
xor
mov
mov
mov
mov
sub
or
mov
or
mov
mov
add
shrd
sub
shr
mov
mov
adc
mov
mov
xor
subl
xor
or
xor
mov
push
pushl
lea
push
adcl
shl
addl
call
orl
lea
subl
push
mov
subl
mov
movl
lea
sbbl
push
xorl
mov
orl
lea
mov
orl
mov
sbbl
mov
addl
push
sbbl
call
push
andl
push
pushl
call
add
mov
mov
mov
sub
or
mov
and
mov
sub
mov
movzwl
sbb
shr
xor
or
sub
shl
or
cmpl
movl
movl
movl
jmp
movzwl
movl
jne
pushl
pushl
pushl
pushl
pushl
push
call
xor
xor
xor
mov
add
addl
mov
xor
mov
adc
lea
cmpl
mov
not
movl
jmp
mov
mov
jb
pushl
push
push
call
sbb
mov
xor
or
sub
or
mov
mov
xor
subl
movzwl
add
mov
lea
mov
mov
sub
lea
xor
movl
movl
movl
movl
mov
mov
mov
mov
add
adc
xor
xor
and
mov
and
mov
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
push
or
or
push
push
call
mov
mov
sub
mov
sbb
mov
cmp
jne
cmp
je
movl
movl
movl
movl
mov
mov
mov
mov
add
adc
xor
xor
and
mov
and
mov
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
push
push
xor
xor
push
push
call
mov
mov
push
push
push
push
call
mov
mov
push
push
push
push
call
mov
mov
add
mov
adc
mov
cmp
jne
cmp
je
mov
mov
mov
xor
shld
shl
xor
xor
cmp
jne
cmp
je
mov
cmp
je
mov
mov
mov
mov
xor
xor
shrd
mov
shr
xor
mov
mov
or
mov
shl
xor
or
mov
mov
cltd
cmp
jne
cmp
jne
movl
movl
mov
mov
mov
mov
xor
shld
shl
xor
xor
cmp
jne
cmp
jne
movl
mov
mov
shrd
shr
mov
mov
shl
mov
xor
xor
or
mov
mov
cmp
jne
mov
mov
mov
mov
mov
mov
movzwl
mov
and
mov
or
mov
add
or
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
or
mov
or
mov
sub
mov
sub
mov
cmp
jbe
mov
mov
mov
mov
movzwl
mov
or
mov
sub
mov
or
imul
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
xor
mov
imul
mov
and
mov
and
mov
cmp
ja
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
push
push
lea
push
lea
push
shl
call
pushl
pushl
pushl
pushl
call
mov
mov
shrd
shr
mov
mov
shl
xor
xor
or
mov
mov
mov
mov
shrd
shr
mov
mov
shl
xor
xor
or
mov
mov
mov
mov
mov
cmp
jne
mov
mov
mov
cmp
jne
movb
movb
movb
movb
mov
mov
or
sub
mov
sub
movzbl
movzbl
cltd
idiv
movzbl
or
mov
movb
movb
movb
movb
movb
mov
mov
or
and
mov
imul
mov
movzbl
movzbl
and
mov
movzbl
cltd
idiv
mov
cmp
je
lea
push
lea
call
cmp
jne
cmp
jne
jmp
mov
mov
mov
mov
add
adc
mov
mov
push
push
lea
push
call
mov
push
pushl
lea
push
call
mov
mov
mov
mov
mov
mov
mov
lea
mov
add
movl
movl
mov
and
add
and
sub
and
mov
movl
mov
mov
or
add
cmp
je
mov
mov
mov
xor
shld
shl
xor
xor
cmp
jne
cmp
je
mov
mov
mov
mov
xor
xor
shr
shl
or
xor
shld
shl
xor
xor
cmp
jne
cmp
je
mov
cltd
mov
mov
cltd
shld
shr
xor
shl
or
or
mov
mov
xor
xor
mov
cmp
jne
cmp
je
pushl
pushl
mov
mov
pushl
mov
call
mov
mov
mov
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
push
push
incl
push
movl
cmpl
movl
mov
mov
jmp
mov
movl
jae
pushl
call
adc
sub
andl
and
mov
and
xor
or
mov
sub
and
movl
adcl
movl
mov
mov
sub
add
mov
cmpl
movl
movl
jmp
mov
mov
jbe
push
call
addl
addl
orl
adcl
mov
xor
subl
div
cmpl
movl
mov
jmp
movl
movl
jle
pushl
push
call
xor
incl
add
and
dec
xorl
sub
cmpl
movl
movzwl
jmp
notl
jbe
push
push
pushl
push
pushl
push
pushl
call
xor
or
adc
sub
mov
mov
sub
mov
sbb
mov
imul
mov
sbbl
xor
and
dec
mov
xor
div
sub
mov
and
mov
movl
movl
movl
movzwl
sbb
mov
mov
xor
or
add
add
xor
xor
orl
imul
mov
adc
mov
mov
and
sub
mov
xor
xor
sub
or
mov
movl
movl
cmpl
mov
mov
mov
jmp
movl
ja
push
pushl
pushl
call
and
mov
add
add
movl
adc
sbb
movl
movl
and
mov
movl
imul
cmpl
mov
not
movl
jmp
mov
jg
call
xor
dec
sbbl
and
and
mov
adc
imul
imul
sbb
mov
andl
and
cmpl
mov
movzbl
mov
movl
jmp
mov
mov
jne
push
push
pushl
push
call
xorl
decl
adcl
adcl
sbbl
or
mov
xor
mov
mov
lea
cmpl
movl
mov
jmp
movl
movl
jg
push
pushl
push
push
pushl
push
call
and
adc
mov
adc
mov
addl
and
and
or
mov
movl
mov
mov
sub
add
movl
movl
mov
movzbl
adc
mov
xor
movzwl
sub
mov
mov
incl
or
cmpl
not
mov
mov
jmp
movl
movl
jle
push
call
xor
or
sbb
mov
xor
inc
orl
addl
negl
mov
or
cmpl
mov
mov
jmp
movl
ja
push
pushl
call
adc
inc
adc
mov
adc
xorl
add
adc
mov
or
cmpl
not
not
mov
movl
jmp
movl
movl
jne
call
mov
xor
sbbl
notl
xor
xor
xor
sbb
subl
add
xor
not
mov
cmpl
not
mov
movl
jmp
movl
jb
push
call
orl
mov
sbb
inc
adcl
movl
sub
movl
movl
mov
add
mov
sub
orl
mov
lea
cmpl
mov
mov
jmp
movl
jne
push
call
inc
mov
sub
orl
movl
adcl
incl
cmpl
mov
mov
notl
jmp
movl
jbe
pushl
push
call
add
xor
add
notl
mov
sub
mov
or
and
sub
mov
mov
adc
mov
movl
movl
not
mov
or
add
imul
mov
imul
notl
xor
cmpl
mov
movl
movzwl
jmp
movl
je
push
pushl
call
and
subl
subl
sub
inc
cmpl
mov
movl
mov
jmp
movzwl
jg
push
push
push
push
call
mov
sub
not
sub
sbb
mov
or
mov
div
cmpl
mov
movl
movl
mov
jmp
movl
jg
pushl
call
xor
mov
or
mov
and
subl
add
and
adc
sub
andl
sub
subl
mov
movl
cmpl
not
mov
mov
jmp
movl
movl
ja
pushl
push
push
call
add
addl
sbbl
adc
not
mov
sbb
mov
sbbl
movl
cmpl
mov
mov
not
jmp
mov
jb
pushl
push
call
xor
addl
xorl
adc
mov
mov
add
xorl
mov
adc
movl
mov
mov
movl
xor
sbbl
div
movl
imul
inc
add
mov
subl
xor
andl
xor
subl
mov
xorl
div
xor
or
adc
xor
mov
movl
subl
movl
addl
movl
xor
add
xor
xor
sub
xor
mov
xor
mov
sub
shr
sub
cmpl
movl
notl
jmp
notl
movl
jl
pushl
push
pushl
call
xorl
andl
subl
orl
movl
xor
xor
and
mov
mov
imul
mov
orl
and
or
mov
orl
sub
xor
or
add
mov
mov
movl
movl
mov
or
mov
or
cmpl
mov
mov
jmp
mov
jl
pushl
call
or
sub
xor
or
subl
sub
xor
mov
cmpl
movzwl
mov
mov
jmp
movl
movl
jne
pushl
pushl
pushl
push
push
call
or
xor
sub
xor
xor
and
mov
sub
and
xorl
movl
movl
cmpl
movl
movl
jmp
mov
jb
push
pushl
pushl
pushl
pushl
pushl
call
and
orl
andl
sbb
or
movl
movl
xor
movl
sub
movl
xor
movl
mov
xor
add
mov
sub
add
mov
imul
mov
sbb
imul
mov
or
mov
adcl
lea
andl
push
call
mov
xor
add
sub
mov
mov
notl
imul
adc
add
cmpl
mov
movl
not
mov
jmp
movzbl
jl
push
call
mov
add
adcl
movzbl
or
xor
or
xor
orl
and
sub
cmpl
movl
mov
jmp
movl
ja
push
pushl
push
pushl
push
push
call
sbb
or
and
movzwl
sub
mov
mov
adc
mov
addl
xor
andl
mov
xorl
div
xor
mov
mov
sub
add
add
mov
movl
movl
movl
movl
cmpl
mov
not
notl
jmp
not
je
push
push
call
adcl
dec
mov
mov
sub
or
adc
xor
cmpl
mov
movl
jmp
movl
jge
pushl
push
call
sbbl
sub
sbb
mov
mov
sub
and
xor
sbb
addl
movl
movl
movl
xor
movl
adc
movl
movl
movl
or
movl
mov
mov
cmpl
mov
movl
movl
jmp
movl
notl
jl
pushl
call
add
adc
and
adc
and
mov
cmpl
mov
not
mov
jmp
movl
jbe
push
push
push
pushl
call
neg
mov
sub
sub
decl
sbbl
and
neg
sub
sub
imul
mov
sub
lea
mov
xor
mov
mov
sub
mov
movzbl
adc
xor
add
cmpl
mov
not
mov
movl
jmp
mov
je
push
push
call
addl
mov
and
mov
sbb
not
sub
incl
mov
lea
mov
or
and
mov
sub
inc
add
xorl
mov
movl
cmpl
mov
mov
mov
not
jmp
mov
movl
jg
pushl
push
call
mov
sub
mov
movzwl
or
subl
xor
add
adc
movl
mov
mov
sub
sub
movl
movl
mov
mov
mov
sub
or
mov
mov
adcl
xor
xor
sbbl
mov
call
mov
mov
mov
and
mov
xor
xor
orl
mov
sbbl
call
xorl
or
cmpl
movl
movl
jmp
movl
mov
jl
push
pushl
pushl
call
subl
adcl
andl
sbbl
addl
xorl
or
mov
movl
mov
xor
xor
addl
mov
call
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
mov
call
mov
or
mov
or
push
push
push
push
call
mov
cmp
jne
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
mov
mov
call
or
mov
or
push
push
push
push
call
mov
jmp
jmp
lea
mov
mov
movl
mov
xor
shr
mov
xor
shl
or
mov
mov
mov
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
mov
call
mov
or
mov
or
push
push
push
push
call
mov
cmp
je
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
imul
add
mov
mov
mov
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
mov
mov
call
or
mov
or
push
push
push
push
call
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
xor
div
mov
and
add
mov
lea
xor
add
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
xor
div
add
mov
and
xor
add
mov
mov
sub
mov
or
mov
and
mov
xor
mov
mov
sub
mov
imul
xor
xor
mov
mov
add
add
mov
movl
movl
movl
movl
movl
movl
mov
xor
mov
imul
mov
lea
mov
and
and
xor
push
pop
div
imul
mov
and
mov
or
add
imul
mov
xor
xor
mov
mov
add
add
mov
movl
movl
movl
movl
movl
movl
mov
xor
push
pop
div
mov
or
mov
xor
div
imul
mov
lea
mov
and
and
sub
xor
mov
xor
mov
and
and
or
mov
mov
add
lea
mov
andl
jmp
mov
inc
mov
mov
mov
cmp
je
mov
mov
mov
add
mov
mov
mov
mov
mov
movl
movl
movl
movl
lea
mov
mov
movzwl
xor
movzwl
sar
mov
movzwl
xor
movzwl
shl
or
movzwl
mov
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movzbl
push
lea
push
call
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
add
mov
mov
cmp
je
mov
mov
movzwl
xor
movzwl
sar
mov
mov
movzwl
xor
movzwl
shl
or
movzwl
mov
mov
mov
movzwl
xor
movzwl
sar
mov
mov
movzwl
xor
movzwl
shl
or
mov
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
or
je
lea
mov
mov
xor
mov
call
mov
mov
mov
xor
mov
call
or
or
xor
xor
mov
mov
mov
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movsbl
cmp
je
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
movsbl
cmp
je
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movsbl
cmp
jne
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
add
mov
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
cmpl
je
mov
mov
movzwl
mov
mov
mov
jmp
jmp
cmpl
jne
xor
jmp
mov
add
mov
movl
cmpl
je
cmpl
je
mov
shl
mov
movl
sub
mov
movl
mov
cmp
je
mov
mov
mov
mov
mov
mov
mov
inc
mov
jmp
movl
push
jmp
mov
mov
ret
push
andl
push
cmpl
movl
movl
movl
movl
jmp
movl
jle
push
push
push
push
pushl
push
call
subl
orl
subl
andl
subl
sbbl
addl
sub
mov
or
jne
mov
cmpl
mov
mov
movl
mov
jmp
mov
movl
jl
push
push
call
xor
adc
adcl
xor
neg
mov
xor
div
mov
mov
div
mov
jmp
mov
mov
mov
mov
shr
rcr
shr
rcr
or
jne
div
mov
mull
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
xor
mov
pop
pop
ret
subl
subl
cmpl
je
mov
xor
add
sub
xor
add
mov
mov
mov
pop
pop
pop
leave
ret
cmp
jae
movl
cmp
jae
adcl
shld
movl
shl
ret
mov
xor
orl
and
shl
ret
xor
xor
ret
