push
mov
sub
mov
mov
jmp
adcb
shrl
cmpsl
jle
jle
outsl
jge
jle
xlat
cmp
rol
pop
add
add
add
xor
rcrb
adc
mov
push
out
mov
es
lods
fiadds
data16
outsl
or
pushf
js
inc
stos
push
sub
mov
stos
push
roll
jmp
mov
dec
out
inc
call
mov
and
jnp
ret
xchg
and
jmp
ret
lock
and
add
adc
xor
or
fisttpll
ds
or
fst
or
pop
fstps
jno
inc
dec
aaa
adc
sarl
dec
call
cmp
add
sbb
aad
dec
xchg
push
mov
outsb
jo
inc
dec
cmp
pop
inc
xchg
ja
xchg
add
sbb
jge
scas
dec
repnz
fisubrl
fwait
mov
mov
xor
cmp
cwtl
call
xlat
icebp
fnsave
cld
leave
jp
insl
sub
push
inc
imul
jp
push
push
rcl
sahf
pop
mulb
push
lds
jmp
subl
cmp
lods
mov
jne
cmp
mov
repz
mov
mov
cmp
sbb
imul
inc
fmuls
and
sahf
xchg
jmp
or
pop
je
mull
cmovb
xor
hlt
and
xor
pop
mov
popf
insb
xor
scas
lea
test
and
add
repnz
or
sub
xchg
ret
in
and
sbb
jp
out
ds
jbe
pop
pop
sti
in
ja
sbb
push
inc
lret
orl
stc
lahf
and
xorb
orl
cwtl
pop
int3
cmc
adcl
xorb
dec
sub
push
ss
ss
pop
sbb
in
shlb
aad
xlat
outsb
inc
sub
ror
aam
lret
xchg
adc
dec
out
and
cmp
enter
jl
or
scas
jns
inc
outsl
push
je
sub
push
cmp
sub
idiv
xchg
ds
jge
add
cltd
loop
mov
js
sbb
push
in
ds
or
out
in
cmp
sub
in
icebp
fcoms
andb
scas
fidivrs
sub
dec
ss
mov
mov
imul
push
dec
push
push
cmc
aam
xor
push
movsl
rcrb
inc
mov
sub
lock
pop
lods
dec
shr
pop
ret
pop
push
mov
adc
jle
and
add
sbb
push
xchg
fsub
mov
loopne
out
inc
outsb
mov
ret
cmp
out
pop
jnp
dec
divps
rorl
test
add
gs
test
add
pop
sub
movups
out
fldcw
scas
test
scas
pop
stc
fmull
xor
insb
dec
sbb
out
mov
aam
into
sub
pop
out
sub
cmc
shl
or
or
fldcw
push
lahf
pop
sahf
fmul
xor
lods
push
mov
das
ja
outsl
icebp
cmpsb
adc
sub
call
or
adc
jge
xchg
mov
inc
aad
cmp
xchg
rorl
jo
jbe
aam
mov
inc
fimuls
cld
pop
dec
jo
lret
lcall
inc
sbb
mov
mov
jno
xor
sub
xor
jecxz
add
jp
or
mov
or
push
hlt
int3
add
sub
add
push
pop
add
sub
shlb
loopne
hlt
js
iret
jp
dec
dec
mov
add
lock
pusha
add
movl
adc
mov
mov
mov
or
push
push
sbb
mov
movzbl
sbb
xor
and
push
movl
cmpl
je
cmpl
jne
pushl
call
mov
dec
mov
jmp
mov
jmp
xchg
mov
push
mov
push
out
xor
in
call
jle
jge
jle
sti
mov
push
cmp
addb
in
xchg
mov
movsb
xor
lods
out
mov
push
ljmp
lods
inc
push
mov
es
mov
cwtl
jmp
or
imul
icebp
mov
add
dec
and
rorl
insb
popa
push
js
ss
push
out
push
jno
aam
dec
add
call
sub
test
fdivrs
cmp
and
enter
pop
or
push
daa
jns
lods
int
xlat
xchg
xchg
icebp
ficoms
mov
fs
addr16
test
pop
mov
mov
scas
cmpsl
push
or
dec
mov
test
or
jecxz
lods
xchg
xor
fs
sub
xor
xchg
push
xchg
dec
pop
xor
lods
mov
xorb
cwtl
fxch
loopne
scas
das
movsl
or
les
jno
call
jp
or
jge
mov
cmp
loop
in
sub
data16
stos
lock
xchg
into
jecxz
adc
stos
std
dec
add
adc
shl
push
ret
test
mov
inc
push
jge
push
imul
roll
push
aaa
js
push
inc
cmp
xor
jg
mov
and
inc
cmpsl
sahf
jecxz
mov
cmp
in
inc
loopne
mov
jns
adc
movsb
orb
int3
movsb
inc
or
setae
xchg
cmp
pop
and
inc
mov
pop
sahf
call
push
cmc
mov
pusha
test
flds
pop
test
incl
popf
jo
in
lret
hlt
sarl
je
dec
push
into
std
ss
dec
and
xchg
movsl
jns
lcall
adc
sub
push
ljmp
push
adc
leave
lret
mov
cmp
mov
or
mov
sub
inc
iret
mov
adc
rorl
mov
fnsave
in
sub
adc
shll
std
inc
jg
adc
andb
sbb
mov
jl
mov
bound
mov
fxch
push
push
cmp
jae
or
mov
sbb
lcall
iret
inc
insl
aad
shll
adcl
bound
aad
sbb
out
bound
imul
push
xlat
push
mov
and
fists
sbb
or
pushf
aam
mov
or
or
hlt
xchg
or
cwtl
or
cltd
cs
lcall
int
xchg
push
jns
loope
scas
inc
rep
adc
sub
in
loop
pop
es
pop
mov
mov
mov
push
popf
popa
and
jb
adc
xor
push
inc
sub
lea
stos
cmp
ret
call
add
push
adc
lret
sti
cmp
scas
xchg
fwait
das
pop
faddl
xchg
xchg
out
leave
mov
popf
xorl
cmp
das
test
inc
ja
call
leave
sar
rcrl
sbb
out
xchg
pop
xor
outsl
jbe
lahf
xchg
sbb
fcmovnu
pop
push
push
in
sbb
rolb
pop
in
lods
and
xchg
inc
mov
rorl
iret
lds
adc
and
cli
shll
in
sub
xchg
mov
dec
movsb
adc
xchg
xchg
aam
xchg
test
or
inc
pop
dec
pop
pop
pop
stos
aam
dec
push
cmp
or
arpl
movsl
jne
ret
mov
push
rolb
ficompl
push
mov
push
stos
div
iret
scas
fcomip
push
xchg
ljmp
add
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
movl
mov
movl
movl
or
movl
add
movl
xor
mov
xor
xor
add
mov
movl
sbb
movb
subl
mov
xor
add
sbbl
mov
mov
xor
xorl
add
mov
mov
movl
cmpl
je
cmpl
jne
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
andl
xor
add
not
mov
sub
mov
add
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
xor
xor
inc
mov
jmp
movl
cmpl
je
cmpl
jne
push
call
cmpl
jne
xor
xor
dec
mov
mov
dec
mov
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
xor
jmp
mov
mull
cmp
mov
jns
jle
jge
jle
in
loopne
clc
pop
es
ficoml
add
mov
adc
or
xchg
dec
inc
cmpb
jmp
pushf
xchg
rolb
push
xchg
loop
shll
xor
aas
je
dec
fisttps
loopne
jecxz
aaa
xchg
into
fiadds
cli
stc
push
sub
xchg
pusha
xor
int
iret
mov
mov
movsl
cmc
jne
pop
rcrl
call
jp
daa
in
push
jb
repnz
dec
int3
dec
xor
pusha
add
andl
mov
stos
sub
xlat
jae
cli
push
jnp
or
mov
popa
dec
lock
xor
lret
inc
int3
into
stc
filds
xor
xor
je
cmpsl
fnstsw
int
mov
inc
lcall
cs
hlt
mov
mov
mov
inc
and
arpl
fnsave
pop
test
repnz
jg
dec
dec
daa
push
rol
pop
jne
mov
sub
imulb
into
scas
jnp
push
push
movl
out
cmp
mov
test
pushl
test
or
js
gs
pushf
setg
push
adc
inc
cmpsl
dec
es
inc
lahf
jbe
jecxz
je
add
push
and
int
pop
xor
jle
ss
mov
dec
stos
push
adc
cmp
push
xchg
loope
ret
cltd
mov
mov
and
push
int
int3
xor
cmpsl
enter
cmp
cwtl
and
adc
jmp
sahf
cmp
adc
daa
pop
or
dec
add
gs
int
or
adc
cmpsb
hlt
and
in
cld
sub
lock
dec
cmp
pop
and
repz
testb
lret
push
pop
pop
push
push
pusha
jno
dec
stos
ja
sub
dec
dec
mov
adc
sub
inc
daa
das
dec
flds
adc
gs
mov
out
cmp
and
xor
pushf
xchg
jo
pop
hlt
inc
inc
std
jbe
push
push
and
fs
roll
roll
cmp
stos
add
push
into
clc
repnz
pop
out
nop
pop
push
jns
in
push
ljmp
inc
dec
mov
sub
lea
enter
sbb
cltd
pop
dec
cmpsb
dec
pop
and
hlt
push
cltd
xchg
mov
adcl
jle
cmp
pop
jge
loopne
loop
push
sbb
adcb
outsb
mov
mov
stos
xchg
enter
jge
leave
int
enter
arpl
lahf
popa
jae
pop
sbb
lahf
inc
cmp
mov
xchg
push
and
je
jl
stos
pop
ret
loopne
popa
rcrl
jecxz
ljmp
pushl
inc
into
loopne
stc
int3
movsl
push
pusha
sub
test
test
push
xchg
mulb
cli
mov
inc
icebp
mov
xchg
subb
mov
enter
and
into
js
and
mov
mov
ljmp
push
xchg
lret
aas
sbb
jbe
insb
out
leave
aaa
test
dec
rclb
xchg
movsl
std
mov
in
shlb
xchg
lcall
rcrb
insl
add
gs
cmp
cltd
popl
or
lahf
adc
jl
push
and
rclb
xchg
mov
xchg
bound
jae
insl
push
ljmp
sar
mov
dec
jle
std
push
popf
in
imul
mov
outsb
add
mov
mov
sub
add
mov
mov
mov
xor
jmp
lahf
in
leave
decl
imul
and
xchg
add
jle
cmpsl
stos
jns
pop
jg
mov
rolb
xor
addr16
addl
inc
gs
les
add
sub
jnp
mul
sbb
rcrl
cmc
pushf
fstp
push
lods
xchg
cmp
mov
aam
jmp
cmp
or
jnp
inc
test
xor
sub
push
adc
es
daa
adc
dec
jmp
test
repnz
es
push
xchg
faddp
iret
ds
stc
lret
sub
xchg
mov
andl
mov
inc
mull
movsb
push
adc
push
icebp
test
ja
sub
and
pop
mov
mov
jl
out
das
mov
xchg
les
dec
fs
fisubs
sub
push
outsl
fs
xor
stos
and
test
aam
and
inc
adc
fildll
xor
iret
push
push
push
add
fcoml
repz
arpl
stc
sahf
jg
mov
xchg
lods
mov
push
sti
sbb
add
xchg
orb
pusha
push
add
scas
and
adc
sbb
mov
or
pushf
in
popf
jno
in
mov
mov
testb
aam
mov
loopne
push
push
adc
movsl
dec
out
int
int
jnp
xchg
stos
mov
add
bt
pop
in
mov
daa
loopne
adc
mov
xchg
pop
or
lret
lods
int
push
cld
cmp
int3
std
sahf
mov
movsb
ret
and
aam
fwait
js
and
pop
inc
xlat
orb
inc
sbb
nop
mov
mov
dec
pop
fisubl
gs
xchg
mov
push
mov
mov
pop
mov
les
lahf
jmp
pop
popf
push
cltd
sub
lds
call
push
pop
les
pop
sahf
or
sbb
ds
or
or
cmp
and
xor
ljmpw
es
out
stos
add
or
out
mov
fcompl
outsl
mov
xchg
push
outsl
mov
or
test
pop
fnstcw
outsl
das
push
jmp
scas
pop
movsl
and
sbb
dec
sub
or
leave
jbe
addr16
out
lock
sub
cmpsl
mov
sbb
xchg
adc
fstpl
jg
sub
dec
fsubs
mov
push
mov
imul
adc
sbb
push
or
sub
xor
mov
stc
sbb
lahf
js
std
xchg
cli
jl
mov
outsb
in
dec
clc
or
pushf
or
xchg
xchg
ljmp
sarb
adcl
inc
jmp
loope
incl
outsb
mov
sub
cmp
cmpb
pop
pop
push
adc
inc
cmp
data16
addr16
sub
sub
insl
ss
sbb
dec
pop
cli
data16
roll
cmp
stc
jae,pn
or
and
adc
cmpsb
aas
test
xlat
mov
jae
dec
mov
notb
dec
pop
rcrb
les
es
clc
pop
rcrb
cmp
jne
push
dec
data16
data16
sbb
je
sbb
repnz
call
jbe
fdivr
movsl
dec
inc
and
push
mov
jmp
mov
cmp
imul
sub
or
dec
shlb
jae
lods
inc
bound
inc
orb
cmp
or
xchg
add
sbb
rcll
pop
pushf
mov
jg
jno
mov
iret
fnstenv
adc
popf
lds
push
rcrl
pop
inc
sti
lea
inc
mov
mov
xor
mov
not
mov
or
mov
and
mov
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
movzwl
or
mov
xor
add
orl
mov
mov
andl
mov
inc
mov
cmpl
jne
pushl
pushl
pushl
pushl
push
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
xor
add
mov
mov
mov
jmp
rorb
dec
inc
push
push
push
sbb
fs
mov
jge
jle
jle
xchg
xchg
int3
call
dec
outsb
mov
fs
push
push
pusha
pop
cld
pop
in
mov
xlat
push
scas
test
dec
ja
mov
xlat
test
arpl
bound
lcall
lret
cltd
shrl
mov
aas
jg
and
addr16
mov
pop
mov
xor
cmc
mov
cltd
stos
loope
insl
xchg
ljmp
dec
dec
std
push
aas
int
sbb
dec
or
dec
hlt
push
xchg
mov
jle
das
pop
lret
jp
test
inc
add
cs
jecxz
and
add
xchg
test
hlt
dec
fidivrl
cmp
scas
mov
das
cmpsl
add
push
cmp
inc
push
pop
enter
xchg
jo
push
mov
mov
xlat
int3
es
clc
mov
cmc
ret
pusha
aaa
out
and
ret
icebp
aad
pop
inc
xchg
jb
sub
xor
pop
repnz
adc
int
movsl
jnp
add
pop
call
aam
add
mov
int3
xlat
add
mov
out
adc
add
mov
test
add
jp
jae
dec
and
inc
xchg
repz
dec
xchg
pop
leave
mov
or
out
lock
xor
cwtl
push
jle
mov
mov
pop
pop
jmp
mov
lods
add
inc
dec
pop
xchg
push
in
push
shrl
shll
xor
mov
out
xor
popf
adc
stc
les
movsl
add
or
jns
mov
in
and
sbb
in
cld
aaa
cli
nop
cwtl
pop
push
or
enter
adc
in
lret
inc
mov
sub
add
and
test
xor
push
les
fisubrl
sbb
data16
jbe
mov
pop
fs
push
mov
mov
ja
xchg
mov
xchg
fiaddl
je
in
fwait
arpl
movsl
cmp
jl
imul
mov
ret
jo
pop
out
mov
stos
shl
cmpsl
adc
cmp
push
sbb
mov
cmpsl
out
sub
jecxz
add
and
adc
call
mov
and
xchg
or
movsl
out
xchg
shlb
out
subl
mov
mov
stos
shrb
mov
mov
and
and
mov
loope
flds
sahf
sbbl
jae
dec
mov
inc
cmp
imul
lahf
mov
cmp
sbb
add
or
push
add
mov
jo
sub
push
mov
mov
ds
mov
pop
cmp
mov
sbb
cmp
popa
adc
gs
push
inc
test
movsb
mov
xchg
xchg
pop
xchg
mov
cld
lret
decb
push
insl
stc
push
pop
sbb
ss
pop
pop
or
jo
cld
outsb
addr16
mov
cmp
push
inc
lods
out
mov
push
lods
bound
push
les
inc
jg
mov
pop
cld
out
xchg
cmpsb
mov
dec
stos
jne
adc
popa
lods
adc
leave
je
or
stos
rcrb
mov
push
into
push
cwtl
std
aaa
cltd
aad
or
lret
aad
leave
pusha
sbb
or
or
add
or
cs
pop
repz
iret
sub
bnd
xor
testl
popf
pop
jecxz
cmc
add
rorb
or
inc
int3
mov
mov
mov
mov
xor
add
je
lea
push
mov
xor
add
push
mov
jmp
xor
mov
mov
mov
sbb
adc
stos
or
jle
mov
nop
sbb
hlt
les
iret
int
push
and
imul
xor
loope
ret
push
xchg
cmpsb
addb
out
inc
cmp
movsl
mov
inc
jb
jecxz
sahf
aas
ljmp
push
mov
in
jle
int
mov
xchg
dec
add
repnz
push
out
mov
icebp
vcvtsd2ss
lods
cmp
mov
jle
cltd
jl
clc
push
cmp
xor
clc
ja
cwtl
mov
icebp
cmp
cs
jmp
mov
and
fstl
repz
inc
xor
cmp
pusha
mov
mov
jb
add
fisttpl
loope
fimuls
test
mov
ret
sti
mov
xor
inc
dec
pop
cmc
aas
jl
pop
sar
dec
jl
and
shlb
mov
outsl
out
mov
int3
lret
push
mov
inc
leave
into
fldenv
fadds
sub
rcr
imul
mov
sar
mov
stos
xor
loopne
and
lock
mov
in
jp
loope
fstpl
cmp
stc
pop
cli
sbb
leave
je
repz
pop
ret
mov
cmp
aaa
jmp
dec
fdivs
test
in
push
lahf
adc
push
push
push
sbb
negl
in
jo
xchg
mov
sub
fcompl
sbb
decl
sbb
fcomps
add
jle
push
jno
pushf
dec
out
push
test
mov
imul
pop
imul
xor
pop
cmpsl
pop
sbb
in
dec
call
int
jg
testl
cmp
adc
imul
jg
bound
cmp
sbb
xchg
or
dec
out
orl
adc
dec
push
and
fdivrl
push
std
pop
or
faddp
push
cmp
divb
dec
icebp
xchg
cmp
insl
add
in
sti
xchg
out
dec
dec
negl
shlb
divl
and
pop
test
fidivl
jl
clc
push
out
push
push
mov
in
setge
lcall
test
sub
cltd
or
cmc
lods
mov
jge
add
jo
add
jno
cwtl
or
sub
bound
xchg
sahf
dec
dec
pop
imul
aad
push
cmp
adcl
xchg
int3
mov
shl
mov
or
cmp
ds
das
dec
lea
lahf
add
mov
aaa
insb
dec
xlat
call
imul
xor
leave
nop
addr16
negb
shlb
int3
lea
mov
xchg
mov
xor
cmpsb
pop
ja
add
mul
cmpsl
mov
ljmp
add
jl
dec
popa
push
lds
adc
lcall
test
and
stos
push
daa
jno
fmul
mov
ljmp
pop
dec
xor
mov
or
push
cmc
iret
mov
leave
ljmp
mov
test
lods
dec
mov
je
cmp
add
mov
movsl
adc
inc
movsl
iret
hlt
jecxz
mov
repnz
sub
idivl
popa
mov
xchg
push
test
in
add
fnstenv
mov
push
mov
fninit
lahf
mov
sub
adc
es
mov
fildll
pop
ja
dec
dec
jne
cmp
cmp
scas
dec
nop
inc
jno
data16
lret
idivl
daa
fiadds
outsl
lret
stos
add
add
inc
call
add
pushl
call
mov
cmpl
lea
mov
je
lea
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
jmp
stos
addr16
in
loope
jno
jo
or
jle
jge
jle
fnsave
shlb
or
or
push
xchg
xor
dec
iret
jno
std
inc
bound
mov
mov
cs
pop
aad
in
inc
cmp
int3
rcrb
psrlw
sahf
movsl
jo
push
sbb
cmp
mov
add
ds
popf
pop
push
hlt
stos
mov
xchg
ret
xor
fs
mov
cmc
dec
adcl
psubusb
adc
lcall
mov
aam
mov
sbb
call
enter
pop
mov
std
mov
jle
mov
xchg
js
jge
hlt
jno
iret
f2xm1
sub
dec
pop
mov
xchg
inc
pushf
push
dec
inc
cmpsl
xlat
or
cmpl
mov
jle
cld
test
sub
daa
fldenv
es
push
inc
mov
movq
bound
insl
sti
adc
int
lods
scas
add
adc
punpckhbw
in
sar
jp
or
xchg
in
dec
fwait
loope
sub
xor
jnp
iret
sti
addr16
ds
ljmp
mov
pop
aas
mov
imul
out
push
adc
push
mov
out
add
pop
shlb
or
xor
lret
dec
add
popf
adc
sub
test
pop
les
inc
es
cmpsb
xchg
inc
jge
jae
loopnew
ficomps
push
push
xor
adc
repnz
mov
push
and
push
popl
in
xor
pop
pop
aad
cmp
fdivrs
out
pop
or
or
cmpsl
fistpll
mov
scas
clc
je
das
adc
out
cmp
icebp
add
dec
repnz
fldt
arpl
pop
ja
jb
sbb
lret
inc
jp
dec
ljmp
jmp
insl
fucomi
enter
std
xor
addr16
fdivs
xchg
stos
xchg
fidivrs
pop
mov
test
imul
and
insb
sbb
rclb
jne
repz
je
add
xchg
fisttps
add
push
pusha
add
mov
das
popa
pop
fcomip
dec
outsb
mov
sub
fldcw
gs
cwtl
cld
out
xor
ss
pop
mov
inc
std
test
pop
sbb
add
push
pop
push
neg
aad
and
mov
lds
aaa
aas
lods
xchg
adc
sbb
int3
pop
popf
comiss
mov
xlat
add
push
insl
dec
fisubl
cmpsl
cmp
sti
or
pop
in
incb
mov
cli
nop
inc
mov
adc
jnp
adc
fadds
addr16
enter
pop
lock
dec
push
mov
jo
scas
or
pop
sub
fidivrl
hlt
push
jns
inc
and
jo
test
xor
popf
daa
cmpsl
sbb
mov
mov
mov
fs
cli
mov
ret
mov
or
rcrb
mov
cmp
pop
loop
cmp
sbb
test
mov
cld
loope
out
mov
in
sub
cwtl
addr16
mov
cltd
insl
cmpsb
cwtl
inc
push
int3
dec
popf
sbb
aas
into
rcl
push
pop
sub
movsl
icebp
add
sbb
out
push
pop
mov
fcoml
ret
lahf
inc
mov
sub
pop
pop
es
inc
imul
push
dec
push
pusha
mov
sub
gs
call
cmp
jns
mov
add
cmp
test
xorb
mov
lret
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
mov
jmp
jno
mov
cs
mov
cmp
out
mov
jle
push
mov
inc
pop
adc
jae
adc
pop
inc
jae
cmc
cs
pop
pop
out
pop
lea
inc
mov
je
jbe
add
pop
jne
loope
sub
jp
inc
push
or
out
adc
mov
lods
and
or
aaa
mov
aad
sbb
lahf
push
or
jmp
roll
push
xlat
pop
jge
sbb
cmp
aam
pop
scas
fsts
sub
popf
push
push
test
cmp
ljmp
push
mov
in
sbb
insb
push
dec
dec
sbb
sub
xor
out
xchg
mov
out
test
inc
or
mov
inc
cld
add
ljmp
jmp
imul
test
ljmp
mov
xor
into
aad
xchg
sub
icebp
repnz
sub
push
lret
inc
jmp
or
jo
cld
inc
nop
cwtl
mov
cmp
hlt
out
jne
jo
pop
jne
call
xchg
mov
xor
arpl
out
loopne
fs
arpl
stc
in
mov
jbe
movsb
jg
mov
addr16
jnp
rorb
je
or
xchg
dec
or
orb
mov
sbb
push
add
sub
inc
push
dec
dec
out
jp
add
mov
scas
fistps
stc
movsb
dec
leave
mov
sub
sub
dec
push
pop
push
adc
mov
stc
in
dec
sub
in
jle
lea
or
mov
and
inc
xor
sti
int3
cs
mov
aaa
cmp
push
jnp
jnp
outsb
scas
dec
push
cmpsb
adc
xchg
jbe
push
xor
bound
loop
add
push
xchg
adc
subl
inc
fmulp
sub
rcrb
push
mov
inc
insb
lds
or
dec
mov
idivl
insb
or
adc
mov
cmpsb
fstl
lahf
xchg
iret
cmp
or
jno
cmpsl
cli
dec
jbe
or
out
xchg
orb
fnstcw
out
sub
or
or
or
xchg
xchg
cld
cmp
xchg
add
cmp
or
into
shlb
sub
xor
sbb
cltd
xrelease
call
dec
and
push
push
cmp
jl
popf
or
mov
dec
pusha
or
mov
lods
or
mov
ds
or
mov
and
ficomps
mov
ds
adc
mov
mov
pop
in
mov
adc
hlt
es
lds
shll
inc
jmp
dec
mov
and
add
push
aaa
mov
stos
mov
mov
lahf
cltd
fistps
iret
mov
cltd
mov
out
dec
xlat
cmp
fbld
stos
ds
into
add
mov
and
sbb
ljmp
jecxz
and
dec
nop
addb
push
or
repz
xor
and
aam
out
sub
and
in
or
imul
decb
xchg
stos
movsl
ljmp
stc
loop
lds
loopne
cmp
les
mov
mov
sub
jge
lds
mov
and
push
cmp
fsubs
int3
fs
addr16
push
sub
outsl
jne
aad
push
stos
ret
jns
pop
mov
adc
inc
cwtl
into
mov
test
adc
adcl
jo
outsl
cmpsl
jl
shlb
pop
movsl
pop
repnz
bnd
jmp
cmpsb
pushf
imul
mov
aam
mov
mov
mov
mov
test
mov
jne
mov
xor
add
jmp
in
adc
ret
icebp
xor
xchg
sbb
mov
cmp
outsl
jge
jle
clc
jne
jge
dec
cli
movsb
push
jbe
or
icebp
fcom
imul
das
enter
mov
jnp
loope
aam
jle
mov
cmp
test
inc
aaa
cmpsl
mov
lods
hlt
xchg
adc
jg
fndisi(8087
aad
lods
lock
das
mov
loopne
mov
pop
add
xchg
adc
cmp
mull
outsl
in
mulb
dec
test
cld
push
mov
insb
pop
out
pusha
int
jbe
adc
cmc
movsb
cmc
imul
push
scas
add
xor
cmovle
mov
xor
mov
inc
outsl
lret
or
sbb
xchg
adc
out
inc
add
testb
jp
cmpsb
std
repz
mov
jmp
ljmp
out
cld
inc
pop
and
outsb
xchg
test
test
addr16
shr
sar
adc
cmp
dec
dec
insl
rorl
dec
loop
lahf
mov
popl
mov
push
bound
loopne
insl
leave
jo
mov
rol
test
out
cwtl
movsl
sbb
std
xchg
sbbb
test
lahf
mov
adc
xchg
sbb
orl
adc
dec
dec
pusha
pop
sbb
mov
test
jne
clc
sbb
sbb
mull
jg
adc
stos
mov
inc
push
int
inc
xor
pop
repnz
mov
push
int
icebp
scas
ja
lahf
push
fsubs
sub
xor
std
ds
out
push
hlt
push
int
jmp
sub
lods
stos
mov
and
shll
insb
ja
mov
orb
push
jl
enter
push
sbb
inc
nop
push
aam
repnz
mov
dec
je
fcomps
push
popf
push
icebp
sbb
dec
mov
sub
mov
mov
cwtl
mov
and
xor
xchg
mov
xor
cltd
insb
sub
or
add
jmp
in
sbb
xchg
das
lret
xchg
mov
es
or
aaa
and
ss
mov
scas
test
xchg
sar
dec
imul
jnp
cmp
loop
loop
loop,pn
jl
lret
int
mov
je
xchg
mov
sbb
sub
push
cli
pop
repnz
aas
mov
adc
mov
xor
cmp
mov
add
xchg
and
sub
fs
sbb
lock
push
hlt
adc
ret
fimuls
inc
sub
lahf
and
iret
movsb
bound
jge
xchg
mov
fcoml
dec
jp
push
mov
pop
loopne
sub
mov
or
je
sahf
repnz
fwait
repnz
scas
cmp
xchg
stos
adc
in
insl
jl
xor
or
xchg
ret
pop
and
xor
out
cmpsb
mov
mov
in
bound
adc
inc
mov
fiaddl
cld
mov
inc
jecxz
xchg
sub
mov
inc
jbe
clc
and
test
cmp
mov
and
js
into
lock
jp
mov
pop
adc
bextr
jl
xor
sub
push
cmpsb
dec
jecxz
fisubrs
sbb
mov
jbe
sub
cltd
sahf
xchg
sub
outsb
adc
stos
ljmp
jo
rolb
loopne
mov
or
inc
scas
sub
ret
aam
test
popf
cmpsl
mov
push
lea
filds
adc
test
add
add
call
inc
in
movb
push
mov
add
push
mov
mov
pushl
jmp
push
js
repnz
jno
call
ret
aaa
negl
jle
sub
in
insb
mov
jne
push
sbb
cmc
addr16
js
sahf
into
cmpsb
adc
sbb
mov
mov
sub
push
and
enter
adc
fcompl
cltd
fdivrs
das
jbe
and
test
xchg
fucompp
stc
adcl
cmpsl
mov
sub
aaa
sbb
lcall
add
gs
cmp
push
mov
jge
push
mov
cmpsl
fwait
mov
pop
push
xor
push
and
sub
aad
out
loopne
and
xorb
mov
pusha
cli
mov
mov
fiadds
mov
push
mov
xor
outsl
fstpl
sub
pop
enter
cltd
or
aaa
or
jnp
mov
out
pop
jae
mov
and
enter
mov
outsl
cmpsb
inc
mov
popf
pop
loope
mov
in
xor
dec
cmp
pop
cld
xorl
lret
and
lea
out
test
aam
xchg
sub
divb
jae
jo
fmulp
lds
pushf
fmull
stos
cmp
add
mov
rcll
cmp
jno
dec
mov
shr
and
dec
popf
pusha
mov
nop
out
pop
dec
icebp
xchg
arpl
shlb
movsl
popa
sbb
xchg
and
adc
call
mov
imul
into
movsb
add
push
jmp
cmc
sub
and
adc
rcrl
out
adc
push
sbb
jmp
leave
inc
aad
dec
aad
push
cmp
out
jno
pop
xor
jbe
stos
sub
pop
xchg
inc
stos
xor
ja
cmp
clc
mov
daa
rorb
jmp
add
nop/reserved
test
cli
push
aaa
pop
and
stc
icebp
nop
stos
leave
pop
and
pop
nop
adc
js
jno
jae
push
xchg
cmp
jecxz
sahf
xchg
mov
outsl
xor
lock
and
pop
jno
enter
adc
repz
mov
or
fsubl
aam
mov
dec
lret
and
roll
adc
mov
inc
inc
in
int3
fisttps
pop
in
dec
in
sbbb
xor
loopne
adc
lods
scas
sub
mov
scas
aas
or
pusha
fisubl
push
dec
xchg
pop
test
arpl
out
arpl
out
movb
cwtl
insb
sub
stos
inc
and
imul
imul
fstp
movsb
in
imul
add
int3
mov
push
adc
jge
fcompl
mov
cmpsl
shrl
fldenv
arpl
mov
add
ja
xchg
cmp
es
add
add
lods
mov
pop
enter
xor
adc
jl
loop
fistl
adc
aas
jne
cmp
pop
push
scas
popa
xchg
inc
sarl
sbb
insb
aas
jb
xchg
fs
nop
lahf
mov
int
faddl
adc
jmp
ljmp
shrl
mov
fdivr
adc
movsb
int3
loopne
arpl
pop
arpl
fcmove
popa
pop
loopne
out
sbb
cmpsb
mov
xor
incb
pusha
nop
inc
pop
loop
fs
popf
sbb
insb
lods
cmp
cmp
bound
mov
fwait
shrl
inc
or
xlat
jle
xchg
icebp
add
mov
adc
imul
push
iret
in
push
int3
cmpsl
mov
mov
movl
gs
int
sub
sub
mov
add
mov
mov
mov
mov
xor
sub
mov
lea
incb
inc
push
pop
dec
jmp
dec
repz
insb
jno
in
sbb
ficomps
jle
jge
jle
jnp
out
xchg
sub
je
cmp
add
imul
mov
sbb
xchg
aas
movsl
ja
out
pushf
push
mov
and
je
and
nop
xor
adc
xchg
inc
out
ret
mov
cmp
in
xchg
inc
repnz
fwait
mov
push
iret
fsts
pop
mov
pop
xchg
icebp
adc
or
push
jae
lds
jmp
mov
gs
fs
cmp
sbb
jp
xor
adc
push
xor
daa
pop
sti
fscale
in
xchg
fwait
mov
add
push
jg
mov
mov
and
lods
popf
sbb
jge
mov
push
mov
sub
es
xchg
push
es
sti
loope
sahf
lahf
push
scas
mov
xor
ja
cmp
pop
xor
inc
es
xchg
cmp
int
jnp
jp
stc
lods
hlt
loope
hlt
fdivrl
add
ds
pop
popa
or
sub
insl
sbb
dec
ss
xor
or
add
ja
adc
pop
in
pop
dec
jmp
pop
nop
or
dec
bound
jns
xor
xchg
idivb
out
movsb
jge
pop
mov
mov
fwait
cmp
adc
addr16
lahf
js
and
bound
push
hlt
xor
popa
or
fidivrs
repz
das
fcomps
popa
push
adc
rcrl
pop
mov
cmp
pop
or
mov
js
pop
mov
in
jnp
and
sub
cmp
lret
xchg
jno
xlat
loop
cmc
ljmp
and
imul
insl
arpl
push
or
mov
fdivrs
mov
mov
ds
repz
ss
jno
mov
int
mov
jno
mov
jmp
xchg
mull
mov
out
sub
push
push
mov
dec
pusha
dec
push
out
push
and
lcall
mov
es
gs
mov
dec
pop
test
cmp
repz
sbb
xcrypt-ecb
cmpsl
mov
dec
lret
cmpsb
daa
push
push
mov
xchg
ret
shlb
pop
gs
inc
push
add
sbb
sub
xor
iret
shrl
push
pop
outsb
inc
subl
xchg
and
mov
mov
push
icebp
jecxz
js
or
rcll
add
pop
jnp
jle
push
add
lcall
add
push
or
xor
in
jmp
jmp
xchg
in
and
mov
addl
les
sbb
jo
cmp
xor
xchg
cmp
xchg
ss
lods
mov
test
xchg
lock
data16
jp
arpl
rcrl
lods
std
lcall
pop
les
xor
int
adc
movsl
mov
outsl
mov
cmc
sub
inc
ds
lods
jne
mov
insl
test
in
xchg
insb
bswap
jp
bound
icebp
mov
cmp
ret
or
mov
int
fs
mov
jne
dec
or
or
add
jno
jae
mov
idivb
fnstcw
mov
sbb
pop
mov
add
jns
mov
loope
stos
leave
inc
cltd
loopne
lret
add
mov
mov
mov
push
mov
lahf
adc
inc
jne
mov
decb
pushl
mov
mov
pushl
lea
pushl
lea
pushl
lea
jmp
out
sahf
mov
addr16
push
subl
add
aad
jle
outsl
jge
jle
jle
int
subb
imul
scas
fcmovbe
loop
or
push
jnp
xchg
cwtl
cmpsb
cmp
cmpsl
popf
lods
or
ret
push
stos
cmp
rcll
cmp
push
shlb
sbb
adc
jnp
cmpsl
xlat
fmull
imul
sti
mov
in
out
pusha
notb
movsl
dec
ljmp
ja
mov
push
clc
stc
jecxz
push
daa
cmp
ret
movb
sbbl
push
mov
stos
ja
fld
cmp
jecxz
mov
imul
adc
int
sub
inc
fwait
mov
and
rorb
cwtl
jne
dec
ljmp
in
fisubrl
leave
pop
push
mov
xorb
imul
nop
lcall
ret
add
dec
push
cmp
mov
dec
stc
std
jle
or
push
push
jo
and
cmp
xchg
mov
inc
ret
in
pop
in
cmp
jecxz
jl
or
js
mov
scas
divb
fcomps
xlat
jl
push
pop
test
adc
and
pop
jae
mov
clc
popa
add
roll
xorl
lock
mov
xor
in
jle
cld
jmp
adc
mov
push
nop
or
into
fisttpl
jae
xchg
loop
inc
std
cmp
inc
xlat
mov
push
lret
loopne
and
xchg
ret
ljmp
mov
bound
mov
clc
xchg
cmpsb
mov
jno
lahf
lcall
xor
cmp
fs
push
dec
test
in
inc
mov
fdivp
or
mov
inc
lods
ret
xlat
in
mov
push
loopne
das
xchg
or
inc
iret
popf
mov
xchg
or
scas
popa
or
cmc
mov
leave
adcl
pop
xchg
lods
xorl
fistl
in
mov
lods
push
rcll
sub
das
mov
or
jno
pop
orb
rol
push
mov
mov
scas
cs
insb
sub
cmp
pop
xchg
mov
lds
push
pusha
mov
push
lret
int
ret
stc
mov
stc
cmp
inc
bound
push
arpl
jl
mov
lret
push
loope
add
cmp
sbb
rcrb
stos
out
mov
xor
lret
into
dec
push
insl
mov
and
jmp
pop
insb
cmc
fsubs
lods
jecxz
inc
inc
scas
lods
mov
adc
leave
mov
xchg
mov
cmp
or
aaa
sub
jge
lea
mov
push
fmull
fidivs
outsb
iret
aad
lret
or
adc
sarb
adcl
mov
push
ljmp
shll
mov
add
dec
pop
jecxz
adc
jge
dec
shrl
popf
pop
movsl
jg
push
mov
sbb
aam
mov
mov
fdivr
fdivrs
mov
jg
push
std
push
push
imul
je
lds
xchg
xor
pop
add
scas
cmp
jnp
in
mov
dec
cmp
repz
xor
aas
cmp
in
imul
mov
insb
dec
cmp
dec
and
sahf
adc
pop
icebp
pop
popf
pusha
lods
sub
ss
sub
xor
ljmp
xor
loopne
xlat
insb
pop
inc
lods
cwtl
lock
add
or
xor
add
xor
pop
call
mov
mov
add
jmp
xor
mov
jne
xor
aaa
ret
jle
jge
jle
lret
aam
xchg
scas
stc
push
xchg
push
je
sub
js
int
rcl
gs
mov
stos
lods
rorl
jnp
shl
add
ret
xor
stc
push
mov
lcall
dec
mov
shll
mov
out
mov
and
fs
ja
xlat
mov
mov
sti
dec
shl
xchg
mov
xor
xor
ds
ret
push
inc
mov
je
jns
jmp
push
in
inc
out
lret
shlb
jne
aad
mov
pop
fstpl
adc
aam
lock
cs
out
icebp
sbb
cli
ss
sarb
ja
cmpsb
adc
inc
or
insw
jmp
jecxz
push
imul
add
xor
dec
bound
lock
sub
movsb
mov
xchg
pop
nop
cmpsl
mov
sbb
insb
jp
div
pop
mov
ljmp
adc
into
nop
mov
xchg
in
lret
push
jbe
xor
scas
popa
into
movsl
inc
sahf
int
mov
jle
loopne
repz
jnp
fneni(8087
stc
push
arpl
aam
dec
std
loopne
inc
add
lret
dec
ja
popf
adc
sti
in
lea
iret
mov
mov
push
stc
sbb
loop
rcll
add
mov
inc
test
arpl
out
mov
xchg
dec
or
outsl
add
sti
loope
or
in
or
push
ror
jmp
xor
mov
mov
mov
dec
test
xchg
push
push
out
rclb
pop
in
mov
pusha
enter
mov
lods
cmpxchg
scas
imul
mov
shlb
pusha
jge
ljmp
loope
cltd
pop
adc
sarb
or
push
enter
inc
aad
scas
ljmp
cmp
or
lahf
jmp
jns
xchg
push
mov
adc
xchg
test
sti
dec
iret
fidivrs
xchg
and
outsl
inc
sbb
leave
or
and
sbb
adc
pop
and
cld
pop
adc
mov
mov
out
xchg
and
jb
mov
mov
jae
cmp
insb
out
lods
mov
xchg
std
ficomps
jle
pop
jns
jmp
jne
movsb
push
shrb
les
cmpsb
aaa
loop
jp
in
dec
and
dec
repz
xchg
and
imul
fwait
jp
ja
repz
push
xchg
movsl
inc
std
sbb
mov
repz
cmp
inc
std
push
jcxz
gs
mov
xchg
dec
mov
sub
mov
mov
inc
pop
ret
fmuls
mov
dec
mov
and
xorb
xor
scas
jns
mov
aam
je
jp
jge
cmpsb
jl
repz
lods
fnstsw
push
int
sbb
xorb
mov
loop
in
mov
aas
flds
cmpsl
sub
in
dec
xor
mov
sub
repz
jae
lods
pop
jle
pushf
arpl
xor
cltd
and
adc
gs
fdivl
stos
nop
cmpsb
xor
xor
stos
push
pop
and
mov
popa
cwtl
aad
sub
icebp
or
dec
dec
xor
sub
pusha
rcr
mov
jb
out
mov
mov
pop
push
jnp
pop
sub
mov
add
inc
fstpl
in
mov
or
stos
push
fadds
mov
dec
xorb
les
xrstor
dec
xorl
cltd
pop
pop
pop
leave
ret
push
mov
sub
leave
ret
push
mov
sub
adc
push
mov
mov
and
mov
adcl
mov
xor
movl
movl
movl
andl
mov
inc
mov
cmpl
jne
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
jmp
push
mov
jno
insl
inc
filds
xor
jle
rcrb
mov
lcall
in
int3
inc
jmp
cmp
push
inc
or
xchg
shll
sub
adc
push
xor
enter
test
jns
ljmp
inc
and
cmp
int3
ss
daa
fs
setne
fadds
hlt
out
aam
call
inc
push
pushf
int
xchg
mov
or
mov
xlat
pop
push
pushf
in
and
test
xorb
sub
inc
rcrb
or
cli
push
fisttps
fbstp
and
clc
lea
pop
fwait
cmp
out
mov
scas
jns
xor
hlt
lock
jne
outsb
push
shrl
test
hlt
mov
mov
les
add
push
arpl
pop
clc
insb
ret
or
subb
jle
rcpps
cmp
jae
push
scas
jl
nop
repnz
push
sub
inc
inc
pop
cs
aad
mov
decl
rep
mov
push
push
inc
sub
sub
xchg
add
stc
fnstcw
clc
mov
sub
dec
cmpsb
xchg
filds
sub
push
pop
pop
pop
cmp
repz
jg
mov
lret
gs
push
dec
xchg
sbb
fisttpll
mov
popf
into
mov
fcoml
dec
in
push
repz
pop
and
adc
pop
mov
loop
nop
stos
cmp
pop
inc
inc
imul
nop
xor
jmp
mov
and
jnp
or
xchg
lock
mov
push
or
or
mov
test
or
sbb
inc
fisubrl
mov
adc
fisubrl
pop
dec
lea
stos
dec
mov
stos
ret
pop
out
xor
cltd
push
cmpsl
pop
je
jle
xchg
push
das
pop
xor
dec
adc
les
negl
mov
das
adc
insl
sub
inc
inc
xchg
jnp
sti
dec
dec
inc
mov
mov
pop
test
scas
imul
test
mov
adc
inc
push
pop
and
and
xchg
mov
in
aad
push
cmp
lock
hlt
mov
inc
adc
test
adc
xor
xchg
scas
pop
xlat
or
cltd
inc
or
mov
test
imul
movsl
sti
test
lock
push
push
sub
arpl
dec
mov
sub
and
inc
hlt
mov
dec
lods
inc
cmp
test
test
adc
bnd
pop
pop
push
mov
lea
popf
push
aam
cmc
inc
test
push
movsb
jb
loopne
adc
scas
das
sub
adc
call
popa
push
sub
mov
mov
arpl
call
sub
xchg
fsubr
ss
cs
in
test
lret
mov
adc
mov
mov
xor
adcl
mov
mov
adc
add
neg
mov
movl
cmpl
je
cmpl
jne
push
push
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
and
mov
sbb
xor
sbb
add
andl
xor
add
inc
mov
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
movl
movl
xor
movl
movl
sbb
movl
adc
movl
movzwl
and
movl
dec
movl
mov
add
xor
add
mov
add
cmp
movl
je
movl
push
movl
jmp
mov
andl
mov
inc
mov
cmpl
jne
pushl
pushl
pushl
pushl
push
call
cmpl
jne
xor
xor
inc
mov
cmpl
jb
xor
add
add
mov
sub
mov
xor
add
movl
cmp
movl
jb
mov
mov
xor
incl
xor
notl
add
add
adc
imul
mov
mov
sbbl
sub
movl
cmp
movl
ja
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jne
push
push
call
jmp
mov
sbbl
xor
xorl
jmp
cltd
jp
pushf
insl
imul
add
inc
in
hlt
sub
xor
jle
xchg
ja
fstpl
jmp
lea
and
mov
pop
pop
popa
nop
jle
push
push
movsb
rorl
imull
jl
js
stc
test
dec
xchg
xchg
fs
sub
je
mov
enter
jmp
sbb
cmc
mov
mov
daa
dec
jns
les
idiv
dec
sbb
and
pop
ret
popf
lods
stos
mov
jge
rolb
sub
sub
aam
sahf
ds
push
in
jmp
inc
pop
lahf
sub
fadds
cwtl
in
mov
pushf
jbe
pop
adc
test
cmp
imul
pop
or
out
int3
lret
sub
gs
sbb
int
das
sbb
add
lea
push
xor
enter
and
stos
adc
icebp
mov
addr16
rorl
mov
and
shrb
xchg
fisubl
movsb
fbstp
or
push
mov
idiv
xor
fldenv
shlb
fildl
inc
xor
in
mov
and
nop
jno
std
pop
ds
into
mov
test
cmpsl
push
repz
cmp
pop
push
dec
mov
shlb
sahf
pop
jno
xchg
inc
dec
push
fldenv
test
mov
fsubrp
push
jb
fmuls
sbb
shlb
rcll
and
pusha
test
inc
jnp
test
loope
fcom
push
outsl
mov
mov
dec
lock
imul
jle
lcall
inc
sarl
xor
pop
in
inc
lods
ljmp
inc
adc
int
aam
lods
adc
push
test
outsb
push
add
mov
xchg
out
inc
sbb
xchg
or
mov
mov
add
mov
js
mov
outsb
fsub
sub
mov
xchg
dec
xchg
push
fadds
inc
push
add
js
adc
xchg
push
js
jne
pushf
jmp
roll
xchg
rcl
fisttpl
aas
jnp
nop
les
cmp
pusha
daa
xor
frstor
sbb
into
ds
mov
add
repz
mov
ja
je
shl
mov
inc
fiadds
fcoml
push
mov
dec
jne
mov
shrb
aam
cmp
pop
sbb
mov
sti
jg
or
sahf
nop
fdiv
ret
push
aas
sbb
bswap
jae
aam
lahf
sub
push
push
lcall
xchg
add
popf
imul
push
mov
inc
adc
xchg
nop
dec
and
lcall
inc
roll
bound
jo
cld
jmp
sbb
addr16
data16
jo
outsb
aad
mov
jecxz
add
inc
cmpsl
mov
sar
iret
out
fidivrl
out
and
push
add
movl
add
mov
mov
xor
movzbl
or
xor
andl
xor
add
inc
mov
cmpl
jne
push
push
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
movl
add
add
imul
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
push
pushl
pushl
pushl
push
push
call
cmpl
jb
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
jmp
pop
jne
loope
clc
cmpsb
dec
push
test
jge
jle
rclb
sub
jno
add
adc
out
fsubr
out
out
jecxz
dec
or
push
std
fwait
add
adc
dec
scas
inc
push
fwait
hlt
push
mov
cmp
es
sbb
pop
ljmp
sub
mov
in
outsb
jg
in
dec
jmp
mov
adc
test
fsubrs
inc
xor
lods
fdivs
nop
dec
divb
add
arpl
loope
iret
adc
int3
push
xchg
jle
ds
inc
aad
push
sbb
add
daa
fs
in
into
jne
cmp
dec
pusha
mov
inc
and
sbb
sbb
inc
sbb
loope
inc
movl
test
push
shl
mov
add
push
leave
bound
sub
lock
inc
movsl
enter
inc
test
jo
fldenv
mov
xchg
call
or
cwtl
ds
inc
sahf
lahf
divl
js
jp
mov
and
pop
dec
dec
repnz
mov
lret
aad
cmp
mov
ja
shlb
mov
push
andl
pop
xchg
nop
std
rclb
pop
lods
dec
into
lods
add
adc
sbb
orl
mov
ja
inc
mov
adc
add
rclb
jno
mov
adc
addb
sbb
dec
es
fstp
cmp
leave
cmp
sahf
mov
pushf
jge
adc
sub
dec
inc
dec
shrb
outsl
sbb
shrl
shll
fidivl
pop
sub
xchg
push
dec
dec
pop
xchg
imul
mov
stc
insb
add
sti
inc
mov
cmpl
mov
jmp
adc
repz
mov
sub
push
cmp
jb
mov
jge
jmp
shrl
mov
hlt
aas
jge
jge
jnp
dec
inc
fwait
lods
xor
jl
outsb
mov
aad
out
mov
sub
mov
xchg
or
ret
stc
or
mov
aad
pusha
dec
sbb
push
jle
fwait
dec
into
movsb
das
pop
lds
retw
int3
mov
in
repz
xor
je
push
data16
les
imul
xlat
movsb
ret
mov
movsb
jle
push
push
xor
sub
mov
sub
xchg
sub
jle
pop
sub
pop
mov
int
rcll
inc
inc
fsts
mov
rcrl
fisttps
add
pop
xchg
sbb
push
pop
jmp
or
movsb
shlb
sti
cmp
adc
xorb
cmp
iret
in
adc
jae
cmp
test
loope
cmc
dec
pop
incl
xchg
jg
lret
mov
mov
push
and
or
add
cld
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
jmp
push
outsb
adc
pusha
cli
sarb
mov
gs
push
jle
xor
jle
adc
clc
push
clc
mov
in
lea
add
push
cmp
daa
adc
movsl
idiv
xchg
adc
nop
out
sub
and
popa
sbb
mov
pop
dec
or
jo
test
sbb
xchg
push
mov
jl
sbb
push
and
shlb
gs
xor
imul
and
pushw
cmp
sbb
jno
pop
mov
cmp
sbb
inc
sbb
and
hlt
add
loope
jae
test
ret
mov
rcrl
pop
aaa
or
push
gs
push
cmc
je
jecxz
sbbb
lahf
loop
in
gs
add
push
cmp
or
sbb
inc
imul
loopne
jmp
pop
rcll
push
xchg
xor
mov
in
enter
sbb
xor
bound
enter
or
mov
notl
bound
jg
sbb
cmpsl
cwtl
mov
push
push
push
inc
test
pop
push
rcrl
xor
lods
stos
xor
fisubs
jecxz
and
jle
push
es
mov
mov
xor
cmp
outsl
mov
ud1
push
loopne
ss
dec
or
mov
movsb
jb
sub
mov
inc
cli
mov
push
add
sub
iret
push
out
sbb
jbe
inc
xchg
cmp
xchg
or
mov
jo
into
jl
inc
dec
xor
or
ds
call
fwait
in
jl
xor
cltd
inc
ja
push
pop
imul
inc
cld
mov
shl
ja
cmp
nop
clc
pop
insl
int
ret
enter
cmpsl
shll
push
or
or
cmp
mov
iret
xchg
in
mov
ja
and
dec
fists
int3
imul
push
xchg
popa
sbb
shlb
lods
scas
repnz
rorb
fidivs
sbb
pop
add
popa
aas
fistpll
repnz
pop
shl
dec
xor
and
jae
iret
jge
daa
ss
test
pminsw
ja,pt
stc
fbld
outsl
mov
pop
cmc
cld
js
loop
sbb
ja
outsl
adc
xor
or
popf
cwtl
mov
aaa
pop
sti
mov
jmp
inc
mov
mov
ds
xor
dec
movsb
inc
cmp
pusha
jno
and
or
fwait
fwait
lods
inc
sbb
mov
mov
push
cmp
fcomip
sub
arpl
cmp
loopne
add
outsb
cmp
inc
adc
lea
cltd
bound
and
mov
xchg
ret
cltd
mov
jne
dec
fcmovne
rorl
lret
push
stos
dec
jbe
lods
inc
and
mov
xchg
jno
add
adc
or
jb
int3
std
test
mov
out
or
hlt
je
sbb
outsl
pop
sbb
push
int3
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
jmp
jmp
xor
les
iret
sub
jle
xor
jle
gs
pop
jnp
aas
add
add
cmp
or
mov
mov
jg
fnstenv
xlat
daa
rcrl
shll
mov
sti
cli
or
cmpsb
and
xchg
test
pop
and
and
scas
dec
xchg
in
push
push
call
out
into
mov
push
jmp
xor
fwait
inc
mov
add
adc
or
or
cwtl
scas
lahf
mov
jg
jb
cli
add
adc
dec
push
sbb
movsl
push
subb
in
sub
roll
sbb
and
pusha
pop
push
push
lods
ljmp
lret
adcb
rol
and
pop
call
sbb
test
pop
ret
andb
and
or
mov
push
push
insl
mov
mov
push
mov
out
lret
aas
jg
fbstp
mov
sbb
cwtl
jmp
outsl
xchg
jmp
loop
in
mov
aam
std
push
mov
or
les
in
insl
xchg
jo
xchg
shll
push
inc
adc
int
lret
js
subb
loopne
push
clc
lods
enter
sbb
popf
test
icebp
sub
or
lret
add
outsb
nop
push
imul
xchg
mov
mov
cli
cwtl
mov
out
leave
fdivp
lret
pusha
mov
fwait
mov
call
imul
imul
in
xor
mov
scas
fnstenv
mov
xchg
jg
xchg
shll
jp
outsb
mov
xlat
inc
popa
pushf
dec
inc
sbbb
xor
in
push
mov
sub
cmpsb
jbe
mov
mov
xchg
inc
mov
fwait
mov
mov
imul
push
gs
fildll
cltd
dec
xor
cmp
xchg
jecxz
divb
cwtl
jp
adc
pushf
aad
aaa
fstl
mov
adc
dec
inc
jno
and
mov
mov
cmp
leave
fdivrp
lret
and
ds
das
out
sub
pop
out
int
xchg
add
push
es
lret
push
inc
or
dec
dec
or
pusha
push
fsubrp
rcr
add
inc
cs
loope
jno
scas
dec
jecxz
push
push
inc
sbb
mov
bound
sarl
cmp
jecxz
or
dec
dec
mov
sti
pop
pop
out
mov
cmpsl
pop
cltd
ret
in
in
and
mov
cmc
cmpsb
insl
mov
cli
xchg
mov
sbb
sub
lcall
dec
sub
inc
cmp
fists
js
adc
out
push
dec
sub
loop
mov
jmp
push
mov
inc
or
repz
fcompl
sub
push
lods
add
jbe
sar
jp
pop
fcmove
jg
jne
push
in
sbb
ss
add
cs
jp
pop
xlat
push
popa
mov
ljmp
fimull
add
add
jno
ja
shrb
jb
pop
loopne
jle
xor
jle
inc
mov
mov
test
ret
cmp
scas
aam
orl
inc
inc
jmp
sub
mov
jle
xor
and
sbb
ja
fnstcw
movsl
push
jge
push
popa
sti
mov
repz
minps
cltd
stc
cmp
xor
push
pop
ror
xchg
aas
add
out
rorb
hlt
xor
push
adc
mov
jmp
in
adc
lods
cmp
xor
sahf
std
loope
mov
cs
push
jo
int
mov
push
scas
dec
decb
orl
jecxz
stc
ret
nop
loop
pushl
cmp
cmpsb
jge
mov
jns
jge
mov
jp
push
int3
mov
jp
hlt
jl
shrl
mov
and
bound
pushf
aas
add
call
mov
pop
push
inc
fwait
xchg
pop
fisubrs
sbb
sub
inc
dec
pop
sbb
pop
or
test
or
mov
and
pop
push
jp
mov
adc
xor
push
into
ja
cltd
aas
inc
cmpsb
icebp
mov
xchg
xor
mov
pop
sub
or
xchg
push
jno
cmp
movsl
outsl
loop
jg
add
jecxz
repz
sahf
sbb
jb
das
test
call
add
add
add
aad
loop
sbb
fcoml
pop
cmpsb
push
fiaddl
mov
fisubrl
xorl
repnz
iret
sub
insb
cmp
xor
les
or
ret
mov
push
inc
incl
mov
xchg
push
ds
fidivs
jbe
fwait
lcall
cmp
scas
xchg
inc
jl
ds
push
pop
push
mov
js
punpckhbw
aad
adc
cli
push
sbb
push
lret
mov
int
fbld
push
mov
cltd
push
jle
dec
and
xchg
adc
add
jl
xchg
jbe
lea
inc
dec
xor
dec
ljmp
xor
or
mov
cmp
cmp
inc
stos
jecxz
les
lods
subb
dec
fwait
pop
jle
mov
test
in
cmp
jmp
mov
lock
out
xchg
leave
leave
adc
ret
fsubrs
add
cmpl
inc
nop
lds
jmp
std
outsb
or
mov
adc
pop
ds
xor
sub
sub
sbb
push
mov
fnstcw
or
pop
incl
adc
lcall
js
sub
cmp
ljmp
dec
push
loope
pop
or
pop
loop
dec
cmpb
or
jmp
lods
jne
lea
mov
adc
mov
fsubrl
sbb
jp
xor
dec
sbb
rclb
add
adc
cltd
cmc
fstl
rolb
jae
jns
add
add
mov
mov
xor
xor
add
add
imul
mov
mov
mov
mov
add
movl
mov
movl
movl
mov
xor
add
jmp
mov
xor
add
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
jmp
pop
xlat
pop
jmp
jae
push
jmp
cmc
pop
dec
cmp
jle
jge
jle
hlt
int
push
cmc
push
scas
mov
cs
nop
adc
js
stos
test
and
out
imul
add
cmpsl
mov
popf
mov
push
lods
loopne
pop
mov
push
btrl
sbb
mov
sbb
push
test
dec
arpl
aaa
ja
packuswb
sub
mov
adc
dec
mov
jle
pop
es
dec
xchg
fwait
fs
jns
dec
lods
repnz
loopne
xor
stos
or
std
push
rol
push
scas
fistps
mov
rolb
sub
movsl
and
xlat
daa
pop
push
push
jg
repnz
mov
test
sub
inc
sub
jmp
mov
cmpsb
inc
mov
cmp
xchg
xor
mov
repz
and
dec
imul
fisttpl
add
mov
pop
ss
imul
push
clc
loopne
mov
and
push
inc
cmp
fiadds
pop
adc
mov
mov
mov
stc
xchg
arpl
mov
enter
sub
imul
les
mov
pop
js
pop
lods
sbb
mov
mov
adc
dec
lcall
xchg
ds
icebp
mov
divb
jmp
xor
cmp
sahf
mov
std
push
insl
roll
loopne
rcrb
roll
push
sti
push
or
mov
push
fsubrs
int3
lods
nop
xor
xchg
push
cmpsl
rol
push
fmuls
pop
pop
andb
push
lcall
test
push
out
lret
xor
pop
loope
fdivrl
cs
inc
add
dec
jg
sub
xor
xchg
push
jecxz
pop
jb
rorb
popa
xor
xor
in
cmc
test
sub
aam
add
clc
adc
lods
add
mov
sbb
inc
ss
mov
loope
fsubrs
mov
xchg
add
pushf
mov
dec
out
pop
aad
add
mov
incb
xor
xchg
adc
js
lock
cltd
and
dec
in
pop
sbb
push
repz
adc
adcb
int3
sub
mov
fwait
xchg
sbb
jmp
push
dec
sarl
cli
lea
mov
fiaddl
mov
push
call
cwtl
out
lods
add
out
sbb
cltd
ja
in
pop
xchg
nop
or
scas
int
insb
movsb
mov
push
mov
mov
out
scas
and
mov
insl
testb
lret
jge,pn
andb
js
icebp
mov
adc
jno
push
push
sbb
mov
loopne
mov
call
mov
lret
sbb
xchg
pop
xor
xor
scas
scas
aad
sti
aad
xchg
clc
add
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
xor
add
imul
mov
xor
sub
mov
mov
xor
add
imul
mov
xor
sub
lea
cmp
jbe
mov
mov
xor
add
imul
mov
xor
add
mov
lea
mov
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
pop
pop
leave
ret
push
mov
push
mov
mov
sub
xor
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
push
call
cmpl
jne
mov
inc
mov
jmp
mov
sbbl
xor
andl
add
movl
mov
movl
mov
movl
mov
push
movl
movl
mov
mov
movl
cmp
movl
je
andl
mov
xor
subl
xor
lea
xor
cmp
jne
jmp
add
mov
xor
add
mov
mov
xor
xor
mov
mov
mov
mov
add
mov
mov
mov
pop
test
jmp
gs
jns
dec
jno
xor
mov
adc
fistpll
push
sbb
jae
nop
and
xchg
lahf
ds
push
xchg
mov
add
push
mov
push
xchg
push
scas
sarl
pop
fcoml
or
add
in
cmp
mov
loope
xchg
stos
sti
in
lods
jmp
xchg
add
or
xchg
jg
add
into
inc
jbe
jl
je
daa
adc
or
test
dec
test
popa
jnp
or
cs
push
fbld
addb
lret
and
cmc
in
jo
push
and
stc
cmp
sbb
sbb
xor
sub
mov
imul
mov
cmp
jle
es
pop
aas
pop
adc
fdecstp
adc
xor
out
mov
inc
iret
dec
shll
pop
mov
in
push
or
fsts
xchg
pop
jmp
pop
mov
shrl
je
pop
pop
cmp
dec
testb
mov
scas
jecxz
adc
xor
sub
bound
aas
je
testb
mov
sub
jb
mov
loopne
shlb
sub
xchg
sbb
out
shlb
test
and
xabort
sbb
xchg
leave
mov
or
or
fsts
pop
cmp
gs
add
push
add
int
incb
xchg
lods
fldcw
cmpsb
jl
mov
mov
in
cmc
mov
cli
pop
cmpsl
mov
push
bound
inc
jnp
mov
filds
nop
mov
dec
jge
xchg
pop
test
lret
or
xchg
ss
lods
mov
lret
bound
ret
add
jno
push
push
daa
es
pop
sbb
test
lods
jle
hlt
ljmp
pop
cmp
scas
mov
xor
xchg
adc
jmp
sbb
add
lcall
xchg
dec
jmp
xor
mov
mov
mov
dec
mov
rcrb
pop
rorb
sbb
sub
xor
lods
insl
pop
and
mulb
data16
mov
add
add
xor
pushl
mov
pushl
mov
call
jmp
jmp
push
jo
es
mov
dec
jle
ret
fistpll
dec
sbb
loopne
xchg
xchg
mov
mov
loop
mov
insl
into
xorl
std
add
xor
sub
adc
mov
mov
push
push
mov
fidivl
mov
daa
loopne
movsl
jle
xchg
lret
and
lahf
popf
ret
pop
adc
sbb
ds
gs
push
aaa
out
sbb
add
sub
daa
mov
dec
inc
push
pusha
sbb
cmp
mov
or
mov
test
jmp
or
data16
push
xchg
or
and
std
arpl
fdiv
pushf
enter
push
int
add
fs
fnsave
arpl
lods
mov
adc
mov
xchg
shll
repz
jl
pop
inc
iret
xor
dec
mov
push
stc
push
bound
je
inc
jge
cli
cmp
mov
test
in
popf
sahf
and
shrl
in
sub
xchg
pop
dec
fmuls
ret
push
stos
push
fidivs
or
mov
arpl
shrl
xchg
cmp
push
loope
push
push
cli
inc
mov
repnz
lcall
cmp
repz
xor
int
cltd
gs
and
in
repnz
mov
subb
cmp
adc
mov
sbb
mov
inc
out
lea
sbb
xchg
popa
mov
lret
add
jl
cs
jns
inc
mov
push
add
pop
push
xlat
int3
out
gs
or
cmp
mov
jle
adc
test
dec
xchg
dec
adc
jecxz
inc
or
and
lcall
cmp
into
push
lret
pop
es
call
inc
pop
lea
cmpsb
scas
or
in
cmp
fld
movsl
daa
stc
ret
imulb
add
push
sub
pop
pushf
ficomps
or
icebp
inc
push
mov
cmpl
sbb
aad
inc
bound
ja
test
loopne
mov
test
adc
sbb
jno
leave
and
add
out
inc
adc
ret
push
mov
sub
movl
push
call
cmpb
movl
je
andl
xor
jmp
push
addl
call
movl
cmp
movl
jl
add
movl
movl
cmpl
je
cmpl
jne
push
push
call
cmpl
jne
mov
dec
mov
xor
add
dec
mov
jmp
adcl
movl
movl
cmpl
je
cmpl
jne
push
push
push
call
cmpl
jne
xor
or
dec
mov
mov
dec
mov
jmp
sbb
lea
movl
cmpl
je
cmpl
jne
pushl
push
pushl
call
mov
dec
mov
jmp
xor
mov
lea
mov
adc
mov
mov
mov
xor
mov
orl
mov
sub
mov
addl
push
push
sub
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
push
call
cmpl
jne
xor
xor
inc
mov
cmpl
jb
and
xor
sub
push
xor
mov
movl
cmpl
je
cmpl
jne
push
pushl
call
mov
dec
mov
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
andl
mov
inc
mov
cmpl
jne
pushl
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
adc
add
movl
mov
movl
mov
mov
cmp
mov
mov
je
mov
xor
add
imul
mov
jmp
xor
add
mov
mov
xor
add
mov
mov
mov
xor
add
cmp
jne
push
pushl
pushl
call
mov
mov
mov
mov
mov
mov
mov
movl
mov
movl
mov
xor
add
jmp
mov
xor
lea
push
mov
xor
lea
push
mov
pushl
call
mov
xor
lea
mov
mov
xor
xor
add
mov
xor
lea
cmp
jbe
mov
mov
mov
mov
mov
mov
pushl
sub
pushl
xor
mov
pushl
call
sub
xor
mov
mov
mov
xor
add
xor
div
mov
cmp
jne
call
lea
mov
mov
push
add
push
lea
push
call
mov
mov
mov
mov
mov
mov
sub
xor
cmp
je
mov
mov
sub
xor
cmp
jne
mov
add
jmp
mov
xor
add
mov
mov
xor
add
mov
jmp
mov
mov
mov
mov
add
mov
mov
pop
pop
pop
leave
ret
push
mov
push
push
mov
mov
movzwl
mov
jmp
shll
sbb
inc
out
jle
inc
adc
frstor
jle
jns
bound
adc
frstor
movsb
dec
stos
rcr
test
inc
add
mov
dec
out
dec
pushl
jbe
or
gs
mov
inc
xchg
sub
push
mov
clc
shl
int
xchg
pushf
cmpsb
adc
cli
pusha
fcomps
adc
jge
outsb
jmp
and
mov
test
icebp
hlt
mov
test
pop
fmull
out
mov
xor
test
pop
das
xchg
mov
fildll
fiaddl
scas
mov
jbe
sbb
xchg
cltd
sbb
movsl
and
or
pusha
stos
imul
rorl
adc
xchg
inc
test
repnz
daa
jb
mov
push
in
mov
mov
add
push
out
add
fwait
lods
xor
push
jb
mov
xchg
adc
push
into
mov
adc
xlat
movsl
stos
mov
xchg
mov
xchg
imul
lea
rcll
imul
mov
mull
mov
sub
fisttps
mov
aam
das
adc
adc
mov
ret
and
fwait
aam
mov
clc
hlt
cmp
arpl
mov
add
and
outsl
rolb
and
test
popf
sbb
cwtl
cmpb
cltd
sar
and
rcrb
enter
jp
aas
jno
push
cmp
xchg
and
popa
or
scas
test
je
insl
and
sbb
in
add
mov
addr16
clc
lds
sbb
lock
dec
inc
data16
pop
mov
adc
sbb
int
add
xlat
aam
aad
loop
enter
out
rcll
jbe
xchg
les
jmp
jmp
mov
fistps
jnp
jno
add
rclb
ret
and
fstpl
loopne
push
loop
or
mov
call
inc
pushf
jp
adc
xchg
pop
mov
sub
add
add
mov
test
mov
adc
int
add
jl
dec
aad
xchg
stc
nop
dec
pushf
adc
fidivrs
sbb
sub
xor
and
lds
aas
and
cltd
int3
movsb
frstor
stos
and
cltd
sti
insb
jne
int3
inc
sub
out
xchg
push
or
das
and
lret
incl
imul
and
mov
mov
add
mov
repnz
in
mov
lret
adc
call
mov
sarb
and
jbe
orb
in
adc
ret
sbb
sub
xor
xchg
inc
cld
repnz
jb
push
sahf
sub
xlat
sub
pop
mov
addl
or
xchg
pop
rcr
sub
out
lods
shll
and
sbb
arpl
mov
movl
movl
jmp
out
psubd
push
cmc
mov
loop
movsb
pop
adc
jle
jge
jle
cltd
testb
outsb
adc
sbb
movsl
pop
dec
outsl
fwait
movsl
jnp
js
and
les
cmp
or
into
cmp
aam
xorb
adc
out
lahf
xchg
or
loope
mov
xlat
daa
popf
pop
dec
sbb
addl
adc
xchg
leave
mov
popa
mov
mov
mov
push
jb
jl
pushf
mov
ss
popf
mov
pushf
repnz
pop
push
scas
divb
pop
mov
inc
call
fnsave
cmc
stc
fdiv
daa
sbb
cmp
inc
xlat
mov
aaa
adc
sub
fnstenv
jmp
test
imul
mov
stc
iret
mov
enter
xor
xchg
nop
mov
jno
push
jle
add
aas
arpl
sbb
xchg
sbb
loop
adc
movsb
mov
dec
mov
inc
add
push
call
cltd
cwtl
or
sub
out
enter
pop
pop
filds
push
inc
sbb
and
mov
inc
xchg
dec
and
pop
xchg
pop
ljmp
cmpsl
shlb
mov
test
insb
xchg
insl
xchg
and
inc
cld
mov
fucomp
mov
bound
addr16
pushf
and
sub
push
mov
and
sub
push
pop
jmp
out
inc
in
cs
fcmovnu
mov
iret
push
dec
adc
and
push
repz
mov
inc
movsb
int
fdivl
mov
jmp
push
out
mov
hlt
ret
mov
mov
push
std
testb
addl
and
hlt
fs
outsl
cmp
jge
add
jno
fwait
mov
test
idivl
call
mov
movsl
pop
test
or
mov
fldl
ret
fsubs
out
jg
lds
xor
int
fucomi
jno
movsb
repnz
int
push
movsl
lods
add
xchg
fidivs
fisttps
and
jecxz
frstor
mov
cmp
es
nop
ja
mov
sahf
xchg
dec
cltd
push
inc
jp
inc
dec
bswap
cmc
das
hlt
and
mov
cmp
in
mov
das
js
cwtl
sbb
je
ds
and
lret
jl
jo
stos
pop
imul
sbb
cmpsl
add
mov
add
mov
clc
pop
lcall
inc
in
ja
mov
add
jl
xor
dec
push
xchg
or
sarb
cmp
mov
or
and
das
faddl
mov
fdivrs
int
and
pop
push
pop
out
xor
xor
aaa
fisubrl
mov
inc
xor
dec
aas
jecxz
arpl
aas
faddp
jo
adc
lods
loopne
incb
cmp
ret
push
movsb
ja
stos
rclb
sub
orl
or
dec
dec
mov
test
add
add
inc
clc
xor
mov
subl
xor
mov
subl
add
mov
movzwl
andl
not
and
movl
mov
movl
mov
jmp
jmp
dec
sbb
jno
push
cwtl
mov
ds
or
jle
and
jle
test
pushf
mov
inc
arpl
adc
cld
fisttps
adc
das
xor
stc
or
gs
adc
mov
add
mov
mov
jg
loope
jns
mov
adc
cmp
enter
mov
inc
lock
in
lea
lret
dec
loope
push
fistpll
mov
movsb
out
sbb
sarl
das
cmp
adc
jecxz
imul
lret
or
xchg
sbb
inc
std
insb
dec
sbb
adc
xor
and
fdiv
inc
je
xchg
adc
flds
mov
mov
mov
inc
adc
and
mov
and
popa
mov
mov
int
push
lret
addb
pop
add
icebp
call
hlt
cmp
xor
jg
push
das
jo
add
aaa
push
mov
cmp
lret
lods
stos
movl
fistps
rclb
cmp
cmp
jp
and
sbbl
xchg
loopne
jns
sub
sti
jo
mov
inc
aad
mov
sti
cmp
cltd
and
adc
push
cld
movsb
rorb
stos
lods
pextrw
fidivs
mov
repnz
jne
aaa
fdivrp
cmpsl
mov
loope
xchg
pop
jno
dec
rorl
bound
adc
pop
ds
mov
cmpsb
xchg
jbe
and
push
icebp
insl
fs
add
cmp
pop
sahf
xchg
xlat
inc
cld
xor
adc
mov
jge
cs
add
loop
lret
push
mov
xchg
pusha
cltd
fnstenv
cmp
sbb
inc
rcll
pop
ljmp
add
adc
cmp
cmp
jg
iret
imul
xor
repz
jp
add
lahf
aas
ja
add
dec
sbb
out
popf
xor
jne
clc
xchg
pop
pop
cmp
pop
ret
outsw
xor
mov
in
pop
les
mov
xchg
call
jp
sub
hlt
fimuls
adc
push
loop
jp
ds
sti
int3
jb
push
and
std
jg
mov
in
push
addr16
jns
mov
out
mov
push
nop
mov
lahf
sub
pusha
rcrb
xor
mov
fnsave
notl
jae
leave
insb
mov
js
adcb
sahf
push
mov
push
xchg
push
scas
dec
pop
lret
and
sarl
rclb
mov
stc
and
cmpb
lret
icebp
xchg
inc
xchg
fimuls
push
cmp
mov
test
shll
cmc
je
scas
outsl
cltd
adc
add
sbb
add
mov
adc
mov
inc
jp
pop
xchg
mov
mov
and
xchg
mov
arpl
neg
mov
inc
mov
and
push
push
cmp
cld
mov
mov
pushl
call
test
je
leave
ret
push
mov
sub
or
jmp
outsl
cmpsb
insb
inc
jne
jne
push
push
mov
xor
jle
in
jle
push
xchg
loop
inc
pop
add
in
xchg
push
lcall
dec
ja
dec
test
vpmovmskb
mov
cmp
mov
pop
xchg
ror
jnp
andl
fmull
shrb
inc
xchg
lods
test
mov
std
jno
shlb
jmp
int
xor
inc
dec
inc
push
mov
js
cmc
test
xchg
adc
jge
xor
data16
iret
add
xchg
jb
negb
mov
inc
xchg
push
jl
pop
ficoms
push
sahf
out
add
mov
ret
stos
inc
popa
cwtl
movsl
xchg
adc
inc
inc
dec
fisubl
dec
mov
mov
mov
cli
xor
xchg
imul
jbe
add
jge
cld
cmp
clc
or
jecxz
mov
or
adc
icebp
shrb
add
push
in
sti
mull
das
add
in
aad
jp
std
inc
sti
mov
add
int
jg
pop
mov
sbb
ret
sub
js
mov
fisttpl
xor
les
pusha
in
fldl
pop
out
stos
mov
cmove
rcl
lock
lds
jg
mov
mov
adc
loopne
adc
movl
inc
movl
mov
mov
xor
mov
incl
lea
mov
sbb
mov
mov
push
movzwl
add
mov
lea
mov
mov
and
push
or
push
add
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
mov
movl
jmp
xor
inc
arpl
jae
aas
or
test
xlat
jle
in
jle
sti
mov
cmp
inc
les
loop
out
pop
jge
jns
or
xchg
pushf
dec
push
inc
sbb
stos
jae
and
push
jge
push
pop
mov
lcall
leave
add
rolb
test
fsubl
sbb
jg
pop
imul
inc
push
rcrb
out
xchg
cld
ja
lret
orb
pop
and
cwtl
push
out
xchg
mov
add
stos
sbb
xchg
inc
mov
mov
or
ljmp
enter
xor
cmp
cli
insb
or
jmp
add
pop
cmpsl
jne
jle
sub
mov
mov
scas
cs
dec
sub
adc
sub
pop
stc
aaa
push
and
cmp
pop
data16
cmp
cmpsb
out
xorl
scas
pop
push
adc
cwtl
xorl
cmpsb
fisubrl
iret
out
int
mov
and
test
decl
roll
sahf
les
push
cmp
leave
aas
jo
sahf
cld
je
lret
add
sbb
mov
mov
loope
mov
loope
push
inc
pop
and
jg
inc
add
add
mov
addl
xor
xorl
xor
addl
add
add
div
movl
mov
movl
movl
movl
cmp
movl
jmp
or
add
aam
lret
imul
mov
push
aad
jle
jg
jle
dec
xchg
xchg
imul
adc
fcmovnbe
pop
out
ret
test
movsl
cmp
inc
jne
xchg
pop
jo
inc
jae
into
jb
es
adc
movsb
sub
scas
cltd
shll
shlb
test
test
cmp
rclb
inc
imul
xchg
pop
cmpsb
dec
push
xor
stc
adc
jl
jge
push
adc
xor
std
adc
hlt
mov
mov
jb
movsl
cmp
out
dec
push
and
out
stos
dec
or
enter
dec
je
jl
negb
ret
call
out
mov
sahf
mov
pop
out
repz
inc
in
sub
push
es
add
or
cmp
sbb
jne
test
aam
sahf
lahf
or
ss
add
lds
xor
loopw
pop
outsl
xchg
fstps
cmpsl
pop
shr
iret
push
and
dec
mov
add
adc
das
aaa
xchg
inc
ljmp
mov
ret
or
add
or
insb
pusha
leave
psubsb
sub
dec
call
lahf
fwait
xorl
dec
fisubs
jle
lds
xchg
mov
es
sbb
adc
out
pop
sti
imul
je
neg
movl
lea
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
mov
and
mov
inc
mov
imul
mov
mov
movl
cmp
je
sub
mov
sbb
orl
andl
mov
inc
mov
cmpl
jne
pushl
push
pushl
call
cmpl
jb
jmp
xor
xor
outsb
fucomi
stc
jb
xor
sarb
in
jle
into
sbb
mov
cld
test
mov
xchg
test
mov
pop
xchg
shll
push
aas
pop
ljmp
or
insb
dec
into
xchg
fdivr
xchg
inc
pop
cmp
loope
fst
jbe
imul
jge
into
sbb
pop
add
dec
test
imul
adc
xchg
mov
mov
dec
mov
outsb
mov
pop
cld
adc
pop
mov
lret
jle
push
arpl
xchg
test
mov
popa
sub
mov
inc
gs
pusha
test
andb
inc
outsb
aas
orb
push
cltd
in
mull
pop
scas
push
jb
fwait
aad
push
add
pop
and
insb
mov
jecxz
fimuls
leave
je
sub
out
cli
inc
mov
pop
cmpsb
mov
dec
cmpsl
push
dec
jg
xchg
jne
fucom
xchg
xchg
sahf
or
pusha
cli
test
aaa
movsl
inc
mov
shl
push
xor
xlat
xor
js
mov
fidivs
pop
sub
aam
aaa
lret
mov
je
roll
sub
mov
popa
adc
mov
lcall
xor
or
ds
sarl
test
or
test
add
jmp
adc
test
or
scas
test
in
jle
push
icebp
movsl
dec
xchg
inc
leave
add
ljmp
adc
sbb
lods
xchg
mov
std
mov
cs
jge
in
insl
mov
and
imul
ss
mov
mov
push
sub
gs
inc
cmp
outsl
dec
test
addl
lea
ss
jb
je
fisttpll
or
cmp
mov
mov
push
pop
std
and
lret
movsb
jns
cs
lcall
inc
mov
pop
sbb
mov
leave
or
xchg
mov
clc
rorb
les
mov
sbb
push
xor
xlat
jnp
loope
cmpl
sbb
sbb
mov
xor
xorb
sti
dec
in
push
outsl
sbb
inc
int
jg
cmc
sbb
test
mov
xor
loop
stos
jecxz
dec
mov
xchg
lock
loope
cli
cmc
shll
loopne
loop
shrl
add
and
ret
cmp
sub
mov
loope
xchg
mov
cli
mov
jne
flds
ds
inc
aas
nop
inc
sbb
push
sbb
add
test
jns
xor
lahf
mov
push
mov
or
int3
inc
pop
pop
pop
leave
ret
mov
add
cmp
je
mov
andl
jmp
mov
mov
or
cmp
je
mov
xorl
jmp
mov
jmp
test
loope
jno
jmp
mov
jle
jg
jle
loopnew
adc
jp
jl
inc
data16
ja
add
and
or
add
xchg
into
repz
lcall
stc
dec
xchg
lret
movsb
in
pop
xchg
xchg
jno
xlat
xlat
into
mov
in
adc
push
mov
outsb
push
ret
push
or
cwtl
js
jb
adc
hlt
inc
jl
jo
movsb
push
sub
mov
mov
push
dec
xor
fdivs
inc
lea
scas
shlb
outsl
imul
cmp
dec
ret
cmpsb
insb
dec
jg
mov
mov
inc
movsl
cmc
mov
dec
bound
fbstp
mov
lods
stc
loope
sbb
leave
inc
jmp
mov
and
icebp
je
fidivrl
mov
xor
push
leave
pop
mov
cmpsb
js
das
mov
nop
jl
xchg
add
mov
lods
xchg
push
sbb
flds
pop
dec
pop
inc
je
fs
push
or
arpl
jbe
jle
jp
lock
and
movsb
insl
push
sub
mov
shr
jb
add
loope
or
pushf
stos
mov
jecxz
mov
jmp
ret
xchg
xlat
nop
or
sbb
incb
lret
test
jge
mov
mov
mov
xor
mov
add
cmp
je
mov
xor
add
mov
mov
mov
mov
xor
add
movzwl
mov
xor
lea
add
mov
mov
mov
xor
jmp
push
adcb
sub
jmp
mov
fidivrs
in
jle
lret
jbe
insl
adc
popf
scas
add
dec
jle
imull
inc
loope
pusha
out
or
fsubs
push
aam
xor
xchg
mov
xlat
lds
jo
push
cmp
dec
xor
fs
xor
mov
lea
hlt
and
sub
int3
pop
scas
jo
cmpsb
and
fcomi
xor
cmpsb
adc
insl
leave
dec
es
xchg
pop
cmp
fwait
sbbb
rcr
pushf
push
test
cmpsl
enter
or
inc
jg
push
stos
in
js
sub
jle
icebp
cwtl
xchg
cli
mov
jg
test
and
mov
mov
movsb
daa
aad
pop
sub
fists
cltd
shrb
enter
push
xor
add
fildl
movsl
iret
cmpsl
jae
pop
ja
loope
and
mov
orl
movsl
loop
or
lret
sbb
in
loope
daa
sti
jecxz
fdiv
xlat
xchg
insl
mov
fnstcw
dec
shll
mov
jp
push
sbb
iret
es
fs
not
out
test
pop
gs
mov
pop
aaa
xchg
xor
mov
pop
pop
shll
dec
push
jmp
lret
jl
aaa
mov
andb
inc
inc
adc
jne
sub
push
adc
xlat
sub
mov
jmp
mov
mov
jmp
test
stc
test
sbb
shll
jle
in
jle
cmp
xchg
cmpsl
jns
cmp
fwait
xchg
insb
ret
cmp
into
loopne
mulb
xor
xor
xor
popa
jp
outsl
jne
insl
jg
jno
scas
lret
mov
inc
sub
xchg
sbb
jl
cld
cmpsl
mov
outsb
or
imul
dec
mov
in
mov
mov
test
int3
jl
push
mov
xor
icebp
dec
std
adc
dec
push
sub
jg
rolb
subb
sbb
jbe
call
xor
orl
mov
mov
mov
mov
inc
popa
data16
and
pop
or
lea
lds
and
sarl
psllq
mov
inc
mov
sbb
xor
xor
dec
inc
adc
cmpsl
repnz
in
pop
pop
fdivs
jo
cmpsl
xchg
stos
xchg
pusha
push
fistps
or
cmp
lcall
int
cmp
or
lahf
cmp
jne
xlat
xor
cmpsl
outsl
pop
mov
push
mov
push
loop
fstl
adc
mov
clc
jns
daa
fildll
pop
and
adc
clc
pop
jne
jp
adc
pusha
bound
jns
adc
aas
mov
js
ja
out
jg
xor
cmp
je
mov
addl
jmp
mov
jmp
xor
xchg
xor
jmp
cli
fnstsw
in
jle
push
loopne
stc
or
sub
nop
repnz
into
or
divl
jns
sbbb
cmpsb
nop
and
mov
shrb
lcall
divl
pusha
push
les
bnd
leave
xchg
and
push
jns
es
jge
mov
mov
rclb
mov
in
shl
cmpsl
sbb
add
push
jg
stos
sub
nop
pusha
push
rolb
mov
daa
jne
inc
pop
movsb
dec
mov
cmpl
fld
pop
cmp
out
jecxz
ds
lock
lea
sti
hlt
pop
adc
jecxz
and
adc
daa
pop
ja
adc
inc
pop
fsubrs
lahf
dec
jbe
lock
test
cmp
mov
movsl
ret
sbb
shll
push
adcl
shlb
aad
pop
cmp
loope
xchg
mov
push
push
ds
cmp
pop
push
cmp
xlat
jo
pusha
mov
ljmp
push
mov
loope
mov
lods
pop
add
cltd
cltd
popa
out
cmpsl
jp
aaa
sti
pop
add
push
cwtl
aam
xchg
xchg
mov
mov
jo
inc
add
dec
fdivp
push
pop
sbb
imul
or
mull
cmp
test
lcall
call
in
sub
sub
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
call
jmp
mov
mov
andl
mov
inc
mov
cmpl
jne
push
push
push
pushl
call
cmpl
jb
mov
and
mov
sbbl
push
xorl
push
mov
mov
sub
or
mov
xor
adcl
push
mov
and
add
mov
or
lea
mov
mov
mov
xor
sbb
add
movl
cmpl
je
cmpl
jne
push
push
pushl
call
mov
dec
mov
jmp
mov
negl
jmp
add
jmp
mov
lods
loopne
mov
jp
jle
cmpsb
push
insl
fidivrl
push
jnp
xor
dec
roll
cmp
filds
mov
inc
dec
pop
jno
cmp
sbb
lea
cli
xchg
sub
ret
xchg
xchg
sub
ficoml
inc
push
cmp
pop
mov
popa
xor
push
or
sbb
pop
fsubs
inc
pop
mov
insb
xchg
inc
imul
pop
and
loopne
pop
insl
mov
push
mov
scas
test
sub
mov
lods
or
mov
in
mov
dec
push
and
out
fidivl
or
mov
xchg
xchg
and
les
les
and
mov
jecxz
mov
dec
cmpsl
push
enter
add
arpl
push
in
loopne
jno
pusha
es
out
mov
jns
or
push
out
push
mov
sub
rcrb
fwait
xchg
xlat
inc
add
scas
push
xchg
stos
cmp
pop
inc
cwtl
xchg
popa
sbb
jmp
test
add
aas
add
mov
xor
aam
cmc
cltd
cmp
jae
and
mov
inc
mov
aad
icebp
xor
xchg
cmp
mov
mov
mov
shlb
mov
int
or
cmp
jp
ljmp
test
scas
push
mov
push
int
or
pusha
jno
ds
fsubrs
adc
stos
pop
cmpsb
dec
shlb
pop
pop
hlt
adc
mov
cmp
iret
mov
aas
sbb
fwait
push
idivl
pop
outsl
popf
cmp
mov
je
xor
popf
push
dec
cmp
mov
xor
mov
rclb
rcrb
fldt
jp
adcb
fcomi
dec
mov
sbb
xchg
jge
adc
sub
jo
daa
and
inc
adc
int3
lds
out
mov
popf
xchg
out
inc
cmp
xor
cmpsl
int
lea
clc
push
push
mov
lcall
loopne
sbb
sbb
pop
mov
fdivs
aam
icebp
sub
xchg
dec
pop
pop
dec
int3
repnz
fcmovb
imul
jmp
fstps
imul
leave
xchg
mov
adc
sub
xor
adc
dec
mov
add
js
fstp
adc
mov
sarb
jl
int3
adcb
dec
push
insl
movsl
sahf
xchg
jae
int3
lret
lds
xchg
stos
sarl
sbb
jmp
int3
aad
adc
jmp
push
mov
sub
mov
fildl
leave
mov
lods
inc
call
imul
mov
out
hlt
add
mov
in
xor
sub
inc
add
add
add
leave
add
inc
mov
cmpl
jne
push
pushl
pushl
push
pushl
push
call
cmpl
jb
sub
lea
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
sbb
mov
xor
and
add
sub
mov
or
mov
mov
mov
xorl
mov
andl
mov
jmp
jge
mov
mov
ds
test
jle
jge
jle
xchg
push
mov
jno
ja
jnp
lods
icebp
push
sub
jp
subl
jmp
pop
push
inc
add
sbb
xor
rorb
pop
rcr
mov
or
sub
mov
pop
and
mov
mov
cmp
xor
jbe
test
mov
xor
imul
cli
add
lret
dec
mov
lea
cs
or
mov
jmp
fs
fstps
jge
loope
mov
inc
push
xor
fldcw
ja
stos
and
into
enter
insl
push
lods
jno
inc
xchg
dec
mov
enter
mov
sub
and
or
push
movsb
adc
sbb
dec
fildll
xlat
leave
rorb
dec
pop
cmc
mov
jmp
pop
mov
stos
orl
test
std
mov
adc
sub
inc
mov
jmp
mov
sbb
mov
or
and
dec
sbb
sbb
mov
jo
mov
dec
lock
stos
test
cmpsb
inc
push
mull
popa
and
pusha
test
test
mov
in
es
or
mov
mov
adc
xor
xchg
mov
dec
mov
and
out
xchg
add
pop
xor
pop
ljmp
iret
out
add
ss
xor
mov
and
xor
dec
je
imul
pop
jmp
pop
cmp
inc
popf
push
jo
es
inc
sbb
pop
mov
rolb
out
iret
out
divl
jp
mov
mov
xchg
out
cmpsb
xchg
flds
rcll
ret
sahf
lret
les
shll
and
stos
cli
cmc
sub
add
ljmp
repnz
adc
mov
lret
ljmp
cmp
jle
lret
imul
or
lods
in
cmp
pop
or
sbb
loope
into
int
out
stos
lods
outsl
or
adc
and
dec
fstl
out
sub
ss
mov
inc
inc
fscale
mov
gs
cmp
pusha
jno
inc
ljmp
or
xor
sbb
mov
outsb
lret
pop
sub
sub
jmp
rclb
jmp
loopne
push
das
fisttps
cli
cwtl
inc
xchg
add
cmpsb
lcall
aaa
dec
pop
mov
add
fs
ljmp
outsb
lcall
push
mov
xor
test
cwtl
inc
dec
push
aad
or
sub
jl
and
xchg
jecxz
jecxz,pt
cmp
mov
aad
mov
movsb
insb
add
es
dec
mov
jecxz
add
fcompl
xchg
movzwl
sbbl
add
adc
mov
and
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
call
cmpl
jb
movl
cmpl
je
cmpl
jne
push
pushl
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
xor
add
cmp
jmp
cmovbe
je
dec
cmc
call
dec
push
jge
jle
dec
out
add
mov
outsb
jb
loope
inc
enter
jae
lock
cld
shlb
outsb
jo
sub
in
jge
les
add
enter
jmp
add
and
in
jge
int3
into
mov
cmp
popa
or
xchg
popf
mov
mov
pushf
inc
add
or
cwtl
jp
scas
lods
adc
pop
add
decl
aaa
leave
lcall
addl
mov
lods
aaa
insb
and
mulb
cmc
xor
jge
add
cmp
lds
mov
jmp
stos
mov
shl
sub
jp
sbb
dec
adc
fdivrl
push
cmp
push
push
sbb
jp
sbb
mov
out
loopne
pop
aam
pop
jmp
xor
out
mov
sti
mov
adcl
ss
hlt
and
or
shll
xchg
and
clc
int3
test
in
fsubs
test
pop
xor
jae
pop
addl
inc
mov
imul
xor
sub
push
inc
movsl
movsl
test
mov
popf
xchg
inc
inc
mov
or
pop
shrb
cmp
pop
sbb
add
adc
nop
int
push
scas
mov
mov
or
inc
mov
mov
loop
xor
mov
in
aaa
popa
push
xchg
sbb
mull
adcl
lods
ss
xchg
loop
mov
rorl
mov
mov
stc
pop
jb
imul
mov
sbb
stos
popa
dec
cltd
jb
dec
pop
and
stos
jg
pop
pop
push
mov
dec
and
inc
sub
mov
xor
arpl
stos
mov
jg
add
adc
sub
lds
test
push
daa
mov
mov
add
xchg
scas
or
fmull
pop
inc
add
sbb
dec
or
notb
sbb
inc
inc
jmp
xchg
mov
aad
add
sbbl
inc
scas
sti
or
sbb
dec
sub
popf
mov
cmpsl
inc
jmp
push
mov
loop
testl
jb
rol
out
inc
cmp
dec
data16
cmp
ss
repz
jmp
or
bnd
mov
jecxz
pop
imul
push
and
subb
jg
nop
sbb
imul
or
or
pop
incl
and
mov
pop
in
movsb
inc
push
lahf
cmp
mov
sbb
roll
mull
sbb
sbb
fmull
mov
jnp
psrld
mulb
stos
mov
fs
movsl
scas
mov
std
xor
jne
mov
mov
xor
add
cmp
jne
mov
jmp
inc
aad
shlb
push
out
push
stc
push
mull
out
je
jle
jp
jle
push
cli
jg
dec
adc
pop
add
inc
scas
outsl
mov
and
call
aam
push
bound
std
xor
enter
or
jne
aaa
bound
cs
dec
cwtl
mov
or
mov
shrl
es
fdivrl
pop
insb
push
data16
sbb
sub
jecxz
push
iret
imul
int
sbb
in
subl
or
xchg
cmc
addr16
mov
dec
inc
mov
or
nop
push
push
mov
mov
clc
gs
fsub
and
sar
xlat
insb
movsb
mov
push
mov
movsb
pushf
fsubr
fbstp
adc
and
push
repnz
stc
je
ret
sbb
cltd
xor
or
in
lcall
pop
fs
ljmp
rolb
shlb
xchg
jmp
xchg
xchg
popf
pop
xor
cmp
or
lretw
mov
dec
sbb
lods
push
enter
in
jns
loop
rorl
jl
or
in
sti
dec
push
pop
adc
mov
mov
das
pop
sahf
mov
in
ds
jae
arpl
outsb
lea
inc
das
testb
outsb
inc
xchg
fistps
push
js
sbb
xchg
jg
cmp
fists
xchg
sub
or
jnp
pusha
imul
inc
jl
push
sbb
sub
jmp
fiaddl
mov
cs
outsb
dec
mov
sub
test
sbb
std
adc
jle
or
enter
loope
enter
bnd
xor
lods
sub
cmc
js
in
pop
mov
jns
xor
adc
sbb
add
mov
call
in
stos
insl
cmpsl
ljmp
xchg
and
aam
xchg
cmpsl
aas
ds
cli
arpl
out
and
sub
call
lock
andl
out
dec
adc
and
lock
adc
or
sbb
das
aam
lds
iret
mov
fs
cwtl
xchg
aaa
adc
or
or
xchg
or
sub
loope
pop
das
xchg
jle
pusha
push
mov
vmovapd
sbb
xor
pop
into
das
mov
sbb
jecxz
push
mov
cld
leave
insb
mov
cmp
xorb
xchg
mov
or
xlat
jg
aaa
and
xchg
jo
pushf
push
subb
mov
xchg
andl
mov
and
imul
je
sbb
cmp
repz
jnp
jns
lock
sub
in
or
sbb
rcrl
adcb
sbb
adcb
stos
and
dec
lock
add
mov
mov
mov
jmp
enter
enter
sbb
mull
in
jo
jle
jp
jle
in
movsl
mov
dec
jno
jo
out
sti
das
jae
adcb
pop
pop
fstpt
cmc
push
incb
loope
lds
and
push
xor
xchg
stos
cli
inc
jecxz
out
push
movsl
sub
nop
jnp
daa
movsb
mov
pop
mov
mov
xchg
leave
push
in
push
lcall
add
sbb
mov
out
xor
mov
rolb
and
xchg
dec
jnp
rorb
rorl
jg
mov
outsl
dec
cmp
bound
ffreep
jmp
pop
jbe
ficoms
fucomi
stc
xlat
fldt
lock
and
daa
mov
rorb
adc
es
ret
mov
fbld
cmp
add
cmpsb
mov
dec
mov
sahf
xorb
out
xchg
andl
add
sub
out
xchg
out
fdivs
dec
in
xchg
mov
fimull
stos
sbb
idiv
sub
aad
lods
sbb
pop
sbb
std
sub
daa
sahf
mov
les
das
xchg
scas
hlt
mov
lock
rcll
push
add
jo
sub
lds
decl
int
jns
cmpsl
icebp
cli
es
mov
mov
js
enter
mov
packuswb
jne
adc
adc
cmp
dec
imul
fs
cmp
dec
inc
daa
and
in
sbb
je
cltd
aaa
xlat
xor
mov
add
mov
out
insl
pop
pop
xor
insl
les
ss
push
dec
sbb
jge
sbb
or
addr16
divb
or
bound
lods
stc
dec
fiadds
cmp
out
xor
mov
imul
mov
dec
push
hlt
hlt
sahf
rcr
inc
and
test
inc
lods
aas
dec
out
mov
hlt
mov
or
imul
fldl
fs
and
or
dec
push
loopne
sub
fmuls
repnz
xchg
push
jns
imul
repz
adc
aaa
and
mov
fwait
sub
and
or
xchg
pop
test
adc
and
and
xchg
pop
xlat
cli
movsl
out
repz
push
pop
setbe
sbb
ret
fs
mov
xor
sbb
test
lea
pop
dec
sbb
mov
lcall
push
loop
xchg
cli
test
scas
in
mov
inc
sub
mov
fnstcw
test
ja
roll
stos
pop
repnz
repnz
sarl
repz
mov
push
ds
je
out
mov
fld
cmpsb
adc
push
ret
pushf
and
cmp
ds
dec
push
mov
js
inc
sub
dec
sub
dec
jnp
xor
mov
mov
sub
add
mov
mov
mov
movzwl
add
mov
mov
mov
xor
add
xor
sub
mov
movzwl
sub
cmp
mov
movzwl
jg
xor
sub
sub
mov
jmp
xor
lea
mov
mov
cmp
je
mov
movl
jmp
mov
mov
xor
jmp
lret
out
icebp
jmp
inc
popf
cmp
out
ret
jl
jle
jp
jle
fcom
clc
push
pop
lretw
nop
std
pop
daa
pop
les
lods
push
loopne,pt
ret
pop
and
js
call
repz
pop
cmp
mov
xor
or
arpl
scas
andl
int3
and
and
in
mov
fistpll
xchg
pushf
cmp
push
mov
inc
out
and
mov
leave
add
je
and
lock
sbb
in
popf
and
stc
repz
adc
mov
cmpsl
out
or
lea
dec
movsl
sub
lret
loopne
jmp
dec
lods
mov
fisttps
cmpl
shll
xchg
mov
pop
les
loope
xor
push
loopne
push
iret
sbb
or
cli
or
pusha
jne
cmp
in
mov
jne
stos
mov
sbb
shlb
xchg
mov
lods
inc
icebp
push
pop
ret
mov
loopne
jge
jge
mov
push
jle
iret
dec
inc
lock
mov
pop
rolb
sbb
lea
fucomp
mov
or
fadds
xchg
pop
sub
xor
ja
inc
lea
fs
ss
lahf
sbb
aam
and
nop
in
adc
push
mov
and
test
pop
stos
fstpl
cltd
or
push
adc
xchg
lcall
iret
lods
lahf
jb
push
daa
icebp
or
lods
arpl
adc
pop
std
add
jle
fwait
pop
clc
mov
jp
dec
testl
adc
mov
stos
cmp
pop
sti
negl
movb
jl
out
adc
push
jno
repnz
cmp
mov
jno
add
dec
ss
mov
je
fldenv
mov
sarb
mov
std
inc
les
popa
mov
subl
pop
cld
int3
pop
inc
or
sbb
out
sti
cmpsl
add
mov
lods
mov
inc
ds
mov
aaa
or
push
adc
call
fmul
insb
mov
in
push
mov
push
mov
lcall
outsl
ljmp
push
lahf
jecxz
mov
mov
sbb
or
sahf
scas
cltd
stc
jg
sti
add
pop
mov
mov
into
stos
addr16
dec
mov
out
fmull
sub
lret
jb
pop
cli
xchg
ds
push
cmp
orb
nop
cli
pop
jl
xchg
repnz
xor
sarb
sub
add
mov
push
std
out
in
arpl
fldcw
ficompl
lret
jno
push
dec
sbb
and
jge
lret
inc
jl
jl
or
popf
out
inc
aad
mov
dec
test
push
pushf
push
cmp
dec
add
jmp
in
notb
sub
add
js
jle
jp
jle
inc
cmc
xchg
cs
stc
dec
scas
lahf
ret
in
jmp
mov
add
sub
rorl
imul
lock
out
aaa
xor
dec
ror
sub
inc
pop
push
pop
in
pop
popa
mov
adc
subl
iret
sbb
ljmp
jno
nop
test
pop
icebp
add
adcl
pop
or
cs
mov
add
mov
mov
push
cmp
xlat
int
enter
scas
push
or
dec
mov
fildll
pop
popf
test
das
ja
call
outsl
pop
pop
jge
lock
push
ret
sbb
xor
out
or
outsl
pop
dec
sbb
mov
sub
lret
fsubrs
jne
jmp
add
pop
sub
adc
adc
rorl
mov
and
cmp
rclb
aas
adcb
rcrl
jo
mov
mov
or
add
fidivrl
test
mov
lods
out
xor
pop
sbb
mov
mov
push
dec
mov
fs
mov
pop
dec
xchg
add
sti
sub
and
ret
mov
adc
pop
insl
adc
mov
int
mov
call
xchg
cmp
ds
push
mov
cmpb
pop
shl
out
jge
aaa
fsubrs
hlt
test
adc
je,pt
aad
aaa
lret
inc
pop
fwait
xchg
pop
cmpsl
fstp
mov
movsl
and
xchg
frstor
xchg
mov
rorl
jbe
inc
adc
push
cmp
sub
add
aad
sub
xor
jne
mov
inc
notl
sub
int3
paddusb
add
pop
dec
pop
loopne
in
add
outsb
fs
popf
test
es
daa
push
and
es
test
in
inc
cmpsb
cmp
and
sbb
mov
ds
add
bound
xchg
push
test
pop
lods
ret
push
call
xchg
adc
jecxz
lods
stos
mov
and
add
jle
sub
pop
orb
push
and
divb
sbb
fdivrl
sbb
test
cmc
pop
stos
cmp
add
dec
rorb
sub
inc
lds
or
decl
aas
outsl
insl
xor
cmc
sbb
dec
lcall
loope
mov
cmp
stos
fadds
cs
mov
ret
addr16
adc
cmp
je
mov
mov
mov
mov
lea
jmp
dec
mov
pop
jno
nop
lret
add
inc
adc
jp
jle
jo
sti
les
sahf
popa
pop
and
push
push
popa
sub
sti
adc
xor
cmp
je
or
dec
jae
add
shrl
and
xchg
mov
adc
pushf
mov
sub
pop
lods
push
insb
push
pop
mov
push
insb
fisubrs
bound
std
ljmp
push
int3
cs
and
repz
jge
xchg
dec
pop
xorl
scas
xor
dec
push
shl
jecxz
sub
les
jecxz
rclb
incb
lds
mov
inc
add
mov
sarl
pop
lods
xchg
imul
leave
dec
push
cwtl
sbb
jbe
jge
mov
jecxz
pushf
push
in
pop
and
jb
xchg
aam
cltd
and
jle
movsl
lods
in
xor
push
stc
xchg
push
jp
roll
inc
mov
ret
mov
sbbl
das
bound
inc
nop
mov
xchg
in
fdivs
out
adc
test
or
mov
lret
inc
xchg
cmp
ret
and
mov
in
xlat
or
hlt
or
mov
sbb
imulb
mov
fistpl
fwait
out
mov
les
mov
xor
jecxz
inc
sbbl
iret
pop
and
or
xchg
ljmp
sbb
sarb
ss
lods
lea
push
mov
add
sbb
fisubrs
xchg
pop
jmp
ret
mov
mov
sar
push
insb
sbb
daa
shlb
jecxz
stos
lea
test
push
fstps
daa
jp
sub
mov
aaa
jp
jp
lret
xor
mov
cwtl
jnp
sbb
xor
mov
test
scas
les
jns
ljmp
call
pop
and
pop
sub
adcl
xchg
mov
shrl
jge
test
bound
scas
les
scas
mov
ret
and
and
outsb
mov
mov
cmp
push
or
pop
xor
xchg
dec
inc
std
mov
xchg
xchg
dec
and
clc
test
bound
pushf
mov
cwtl
test
lahf
repnz
daa
jg
push
outsb
fisttpll
sbb
jp
test
lcall
xor
mov
outsl
adcb
mov
and
xlat
mulb
or
movsb
es
xchg
cmp
and
xorb
mov
dec
adc
jl
and
xor
lret
mov
cld
cmp
leave
fxch
lods
rorb
jl,pn
jl
addr16
xchg
xchg
and
inc
fcmovne
sub
cmpsb
call
pop
sub
add
call
mov
repnz
add
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
xor
add
cmp
je
mov
mov
add
mov
jmp
adc
inc
sahf
popa
scas
icebp
jno
ficomps
dec
add
jle
jp
jle
or
pop
add
outsl
mov
in
out
test
bound
xor
out
outsl
iret
outsl
divl
jl
push
mov
movsl
mov
aas
push
loopne
scas
pop
outsl
je
xor
dec
lret
jo
xchg
loopne
mov
dec
sbb
cmp
ss
lret
imul
mov
fidivrl
clc
lret
mov
daa
add
test
sub
push
notb
lods
stos
mov
data16
fldenv
idivl
xchg
push
and
and
sbb
outsl
xchg
push
sub
push
pop
ljmp
mov
imul
arpl
call
out
fdivrl
inc
mov
pop
pop
rcll
shlb
mov
or
adc
xchg
rcrb
add
scas
lods
outsl
or
sub
in
or
fstps
arpl
enter
mov
push
push
xchg
inc
push
and
cld
in
vpshlb
lea
enter
outsl
push
jns
inc
ss
or
or
sub
stos
insl
in
pop
je
pop
popf
leave
inc
or
out
xlat
imul
jecxz
fistl
xor
mov
dec
xchg
sbb
adc
test
testb
fisubrs
jp
jno
sbb
sahf
jg
popl
sbb
inc
imul
mov
clc
dec
pop
inc
sub
in
pop
cltd
inc
test
loopne
cmp
push
imul
aaa
mov
xchg
shlb
lds
cmp
mov
sub
ret
das
mov
ljmpw
rcr
js
sbb
pop
inc
push
rcrb
dec
adc
sub
mov
ljmp
mov
add
fwait
add
or
mov
iret
push
sar
clc
mov
stc
js
fcoml
cmp
fcoml
int3
sbb
not
jp
pop
mov
aam
stc
xchg
inc
dec
orb
gs
xchg
arpl
aam
adc
sbb
sbb
pop
aad
pop
loope
mov
pop
sbb
xor
mov
int
test
in
sahf
inc
add
pusha
add
or
pop
jge
mov
push
push
inc
cmp
xchg
in
sub
rcll
out
cmp
pop
or
cmp
or
lods
mov
mov
stc
xlat
pop
mov
mov
pusha
inc
lods
bound
dec
lcall
fcompl
xor
cmp
inc
mov
ja
jge
pop
shll
or
fstl
jae
fbld
out
jmp
repz
inc
pop
add
adc
push
mov
mov
mov
mov
mov
add
xor
cmp
je
jmp
sarl
mov
mov
shrl
fsubrs
out
mov
jle
jge
jle
test
mov
ret
fwait
cmp
cs
push
xchg
add
daa
xorb
aaa
inc
insl
push
loope
pop
sub
push
mov
adc
stc
push
aam
cltd
call
jl
lcall
pop
cmc
movaps
adc
mov
or
bound
fdivrs
mul
jns
iret
pop
mov
sbb
sub
jb
jae
neg
ret
cmp
jp
int
nop
adc
cmpsl
pusha
xlat
addb
jle
or
sbb
push
push
stc
inc
inc
sbb
mov
sub
repz
jne
aad
adc
lods
cmp
push
testl
mov
xsha1
cmpsb
push
mov
mov
sbb
aam
out
or
cmp
dec
jno
test
mov
and
aam
cwtl
xchg
or
mov
fwait
fs
inc
mov
push
popf
jbe
pop
inc
call
in
int3
sub
xchg
outsb
test
xor
in
scas
mov
loop
xor
and
pop
rclb
adc
subl
and
jne
mov
mov
dec
jge
pop
dec
pop
jno
xor
mov
mov
outsl
daa
jecxz
inc
sub
jle
xchg
cmpb
jno
mov
cmpsl
aad
sub
jnp
jo
bound
test
add
les
les
decb
out
mov
popf
rorl
call
incl
insb
or
inc
mov
jl
shr
xor
call
pop
addb
sub
pop
movsb
add
fmul
cmp
cmp
lret
adc
clc
mov
sub
pop
test
push
push
loopne
inc
push
xor
cmp
lret
je
jle
icebp
xchg
jle
js
jbe
cwtl
cmc
cmp
int
mov
sbbb
cli
mov
pop
ret
sbb
into
push
mov
roll
in
sub
roll
cmpb
pop
cmpsl
cmp
popf
xlat
fwait
sub
jecxz
xor
dec
pop
dec
xchg
pop
dec
ss
jne
cmc
popl
adc
repnz
and
pop
fldl
xchg
and
mov
dec
or
int
out
xor
cli
out
fsts
test
jge
out
pop
arpl
mov
cmp
pop
std
les
mov
xor
dec
or
pop
lcall
test
xchg
jns
sub
mov
sahf
mov
das
jbe
cmp
pop
dec
cmp
bound
lret
inc
pop
loope
jmp
fcoml
jnp
popl
and
cmc
mov
nop
shll
cli
mov
leave
sbb
ftst
mov
mov
xor
add
jmp
and
jno
pop
xchg
sar
cmp
or
jle
jp
jle
and
sbb
xlat
stos
scas
fistpl
xor
or
cs
sbb
mov
dec
add
test
mov
dec
inc
andb
pop
xchg
mov
and
push
mov
inc
push
fldenv
imul
xchg
pop
pop
mov
imul
jle
aaa
sti
mov
scas
xor
push
js
js
sub
jbe
repz
dec
lock
mov
xchg
jp
mov
rcrb
dec
add
pop
stos
xchg
mov
jge
push
adc
cltd
clc
mov
push
pop
cwtl
fnsave
ja
or
push
adc
sbbb
dec
xlat
ret
dec
lods
mov
push
out
sub
flds
cmp
add
sbb
int3
lds
jle
jecxz
jp
popa
popf
jne
andl
enter
inc
ljmp
pop
sub
push
xor
je
jae
and
mov
xchg
mov
test
divb
test
sbb
int
int
xchg
pop
xor
sub
push
ds
aad
push
call
xorl
sbb
add
sub
shlb
les
sbb
xlat
rcl
fdivs
inc
mov
adc
jmp
out
cld
mov
fsubs
sub
out
ficompl
sbb
stc
and
std
jp
adc
adc
enter
pop
sbb
pop
push
push
add
pop
add
dec
rorl
nop
xor
sbb
loopne
repz
and
aad
sahf
es
mov
dec
xchg
push
loop
xchg
push
jne
jmp
adc
outsb
sahf
insb
orl
xchg
pusha
cli
sahf
repnz
push
stos
sbb
cmpsl
aam
cmc
outsl
in
inc
aaa
pushf
popf
add
mov
frstor
dec
cmp
dec
stos
lret
jno
or
out
aaa
ret
xchg
mov
xor
neg
dec
je
mov
mov
enter
js
mov
adcb
mov
cmpsl
mov
into
sbb
inc
mov
dec
shr
xchg
nop
xor
shlb
lret
jmp
xchg
pop
ret
addr16
fwait
test
and
jmp
shl
or
mov
cmp
int
pop
jg
xchg
mov
rorl
jnp
adc
repnz
xchg
arpl
ljmp
jg
gs
aaa
mov
jl
dec
stos
lds
mov
fisttpll
mov
jae
aas
pop
test
xor
jl
jae
scas
sbb
ja
movsl
sub
cld
fcmovb
xlat
divb
adc
mov
mov
testl
jmp
xorl
jmp
jmp
and
jnp
cmp
and
jp
push
mov
jp
in
adc
jle
jp
jle
iret
adc
sbb
sahf
sub
jo
in
pop
add
cmpsb
jp
xchg
push
clc
shl
sbb
sub
fdivl
cmc
fimuls
repz
stos
adc
mov
sbb
dec
aam
xor
dec
mov
xchg
loope
cmp
xor
jmp
push
loope
cmp
mov
int
imul
in
int3
pop
and
pop
sbb
iret
scas
add
mov
add
sbb
sbb
and
ljmp
mov
es
pop
pop
test
in
seto
mov
mov
sarb
mov
sub
and
stos
js
nop
lahf
loopne
cmpl
add
mov
cmpsb
dec
repnz
push
cli
ss
fisttpl
push
push
lods
pop
repz
and
jns
inc
xchg
or
jns
pop
ljmp
fldenv
sbb
jo
xor
test
fstpt
mov
fisubl
dec
jmp
pop
nop
int
mov
jecxz
sub
fistl
clc
test
ds
ret
popa
js
mov
lods
or
inc
icebp
adc
push
pop
pop
cs
shll
sbb
insb
aaa
js
dec
in
add
loopne
clc
sbb
mov
sti
andb
aad
inc
pop
pop
je
adc
xor
sbbl
test
std
popf
or
loopne
jo
jb
dec
mov
jne
mov
fdivp
mov
ja
fcoms
cli
and
xor
mov
std
lret
push
mov
inc
and
gs
xchg
sti
das
out
clc
cmp
sahf
cmp
outsl
icebp
lods
cmp
sbb
ds
xor
mov
pop
mov
aam
push
movsl
fcoml
loopne
sbb
cmp
sub
mov
arpl
aad
and
add
lods
and
push
or
mov
add
pop
jbe
xor
mov
xchg
leave
ficoml
mov
roll
mov
lds
je
push
cli
jmp
les
fnstcw
jno
neg
roll
adc
imul
movsb
inc
mov
out
out
xor
test
sub
mov
dec
mov
movsl
inc
rcll
push
into
jb
pop
mov
cmp
scas
adc
cmpsl
sbb
aad
scas
or
test
dec
test
mov
out
rolb
sbb
pop
pop
or
dec
outsl
mov
in
mov
inc
pop
pop
sbb
inc
cmp
cmpsb
cmpsb
push
js
mov
lods
dec
jp
fmulp
mov
push
testb
gs
in
shr
in
leave
sbb
or
imul
aas
mov
clc
nop
daa
inc
arpl
stos
mov
or
clc
mov
jmp
xchg
jge
hlt
push
jne
pop
cld
into
inc
cmp
popa
add
xchg
jp
jle
jnp
fnstcw
arpl
lods
jno
sbb
hlt
test
test
jns
mov
outsl
jo
pop
mov
rclb
fcompl
xchg
mov
enter
push
repnz
ljmp
xlat
lods
stos
in
mov
jae
jae
inc
xchg
jle
pop
cmpsl
push
mov
push
stc
iret
sbb
jae
inc
lds
orb
dec
mov
jecxz
out
aam
jle
xchg
mov
loopne
out
or
ss
push
or
jle
loop
scas
repz
nop
add
and
jne
sahf
pop
mov
pop
testl
jp
insb
imul
popf
fcomi
in
leave
mov
lcall
clc
inc
sub
repnz
mov
and
scas
dec
stos
addr16
jo
sub
es
lcall
mov
push
add
sub
push
inc
out
push
xchg
adcl
ret
mov
out
lods
mov
repnz
push
cmp
xchg
dec
push
adc
dec
xchg
out
cmpl
leave
xchg
and
xchg
pusha
sub
push
xchg
cmp
int3
cmp
ljmp
scas
xchg
push
aas
int3
jge
push
mov
pop
into
adc
in
aam
int3
sub
imul
dec
jecxz
push
stos
stc
xchg
inc
xchg
and
ret
sub
fs
mov
mov
inc
xchg
repz
push
cmpsl
pop
das
cmp
add
inc
jg
push
fstps
jg
mov
outsl
mov
sbb
imul
iret
shlb
lcall
aam
cmp
pusha
mov
into
dec
js
std
std
xchg
daa
xchg
ja
sub
aad
add
cmp
mov
outsb
dec
push
adc
outsb
jl
xor
insl
scas
mov
or
fsts
out
mov
xchg
jecxz
movsl
adcb
roll
xor
cwtl
decb
aam
push
das
add
popf
mov
adc
pop
call
pop
cmpsb
jne
push
or
lods
xchg
imul
mov
lods
test
jl
scas
mov
add
inc
xchg
aaa
gs
fldpi
inc
xchg
and
inc
sbb
adc
pop
outsb
mov
icebp
cmp
jns
test
andb
mov
sbb
jle
mov
test
push
icebp
jns
push
add
and
leave
lods
js
leave
xchg
cmp
aam
mov
cmp
sub
outsl
in
add
xlat
lods
ret
mov
pop
mov
xchg
shlb
mov
dec
or
mov
lods
fisubl
call
roll
xor
xchg
dec
testb
stos
mov
cmp
sti
fstps
subb
in
jb
xchg
dec
cmp
pop
mov
adc
add
mov
mov
jmp
out
xor
mov
loop
into
xor
xchg
loope
mov
sbb
jle
jp
jle
push
xor
rcrl
loope
cmpsl
xchg
sarl
outsb
adc
lock
and
mov
or
cs
dec
shl
pop
out
push
decl
jl
xchg
inc
jge
movsb
sbb
xchg
mov
jnp
jmp
popf
mov
and
movsb
in
add
sub
clc
outsb
pop
adc
xor
mov
loop
cmp
fistpll
mov
lahf
cmp
js
jae
aam
mov
into
in
xchg
int
xchg
jmp
dec
icebp
xchg
inc
mov
lods
pop
mov
mov
adc
push
ret
xchg
push
pop
sub
and
dec
xchg
cmpsb
sub
lahf
xchg
mov
add
xchg
sarb
mov
js
or
or
popa
sub
sahf
cmp
shlb
and
call
nop
sub
adc
mov
sarb
loop
sbb
push
orb
push
jl
adc
ss
test
inc
fisubrs
mov
shlb
dec
and
mov
sti
test
inc
popf
and
adc
paddusb
xchg
lods
test
cmp
and
jmp
or
sti
add
xor
testb
aas
movsl
jbe
xchg
push
add
lcall
lret
pop
in
repnz
out
jp
fsubs
test
out
inc
inc
add
push
jecxz
lods
xorb
and
loope
or
xchg
or
iret
jmp
add
out
cmp
push
pop
rorl
push
repz
js
xchg
repnz
sub
mov
push
and
xor
rclb
jb
xlat
jecxz
xor
pop
xchg
rcll
xlat
xchg
gs
and
fstps
sub
xchg
mov
cmpsb
mov
or
sub
add
addr16
rcl
cli
inc
dec
std
jno
test
jecxz
mov
push
pop
pop
xor
adc
cmp
sbb
pop
mov
inc
push
and
pop
repnz
outsb
pop
pop
dec
js
dec
mov
sti
mov
testb
or
leave
add
ret
cltd
rol
adcl
pop
jp
daa
ficomps
fisubrs
shll
inc
sub
xchg
mov
fisubrs
pop
cmc
mov
lret
mov
cli
movsb
push
insb
push
and
lods
pop
adc
lret
xchg
std
xlat
mov
in
sbbb
mov
ja
test
jbe
jle
scas
les
ret
imul
aas
xchg
cmpb
sub
fimuls
push
mov
mov
pushl
call
mov
cmp
je
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
adc
movl
xor
or
and
movl
mov
movl
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
push
movl
cmpl
je
cmpl
jne
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
movl
cmpl
je
cmpl
jne
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
adc
xor
mov
add
mov
movzbl
xor
mov
orl
push
push
test
movl
je
mov
movl
cmpl
je
cmpl
jne
pushl
pushl
pushl
call
xor
or
dec
mov
jmp
movl
cmpl
je
cmpl
jne
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
and
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
pushl
call
jmp
sbb
mov
mov
adc
imul
mov
xor
or
sub
or
mov
mov
mov
sub
add
mov
and
mov
sbbl
xchg
andl
xor
add
inc
mov
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
neg
sub
adc
xor
addl
mov
xor
mov
or
mov
mov
mov
addl
xor
andl
xor
xor
add
movl
mov
mov
mov
je
sbbl
mov
adcl
xor
sbbl
add
cmp
movl
jne
pushl
call
mov
adc
mov
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jne
pushl
call
cmpl
jne
xor
xor
inc
mov
jmp
mov
xor
or
and
mov
mov
subl
xor
xorl
add
movl
cmp
je
andl
pushl
pushl
subl
call
sub
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
add
mov
mov
mov
add
mov
jmp
mov
fs
mov
jecxz
sbb
jle
shl
xor
sub
sbb
out
das
adc
sti
pop
mov
lock
fisubs
jecxz
mov
mov
xchg
and
cwtl
mov
shlb
mov
adc
imulb
xor
jmp
inc
aam
push
test
clc
ss
nop
decb
push
rorb
pop
popf
fistpl
lcall
jle
inc
push
js
das
and
pop
outsb
outsb
icebp
fstpl
out
sbbl
fstpl
sarl
fninit
jo
divb
dec
sbb
addl
lea
or
mov
in
push
repnz
test
ds
xor
jbe
lcall
add
add
sarb
xchg
inc
lds
cmp
lret
xlat
lods
lret
push
fsubrs
sub
jle
orb
or
mov
or
out
mov
mov
stos
sub
sub
adc
insl
and
in
push
and
jge
or
or
add
and
xorl
sbb
call
popa
dec
cmpsb
shl
std
and
jl
cltd
cmp
dec
mov
scas
jne
lcall
jg
dec
cmpsb
sub
mov
cmp
inc
adc
and
push
mov
add
xor
lret
ss
xchg
in
pop
xchg
es
push
push
repz
mov
in
loopne
pushf
sbb
hlt
dec
push
dec
clc
adc
push
shl
adc
cld
daa
xor
insb
ljmp
jl
mov
ljmp
ds
cwtl
wbinvd
mov
sub
jmp
add
dec
mov
xchg
xchg
cmp
dec
jo
negb
mov
sbb
loope
mov
ljmp
mov
sub
pop
dec
daa
jecxz
hlt
jecxz
sti
or
ss
movsb
adc
mov
lret
lret
push
out
pop
iret
fimull
dec
mov
fistpl
push
aaa
xor
mov
shl
mov
inc
jae
sub
in
dec
mov
pop
ret
sub
adc
sub
push
cmp
jbe
int3
imul
jnp
scas
jl
sbb
pop
pop
jge
xchg
and
adc
into
cmc
in
xchg
sub
std
lret
jmp
jne
into
sub
lcall
pushf
inc
or
mov
inc
dec
dec
sub
jl
mul
shlb
mov
in
dec
out
sar
dec
jmp
int
cmp
jbe
sbb
mov
add
fnstsw
test
push
aas
or
adc
lret
mov
pop
xor
in
mov
add
xor
mov
mov
mov
add
lea
mov
jmp
push
adc
shrl
cs
loopne
or
jle
jge
jle
testb
xor
dec
pop
add
mov
lods
repz
fcoml
dec
mov
jbe
pusha
xor
mov
mov
roll
fld
imul
sbbl
jmp
ror
xchg
or
test
push
sub
stos
loope
inc
imulb
mov
or
jge
cmp
pop
jp
pavgb
dec
mov
es
roll
push
xchg
mov
mov
mov
pusha
into
cs
filds
std
push
addr16
aad
inc
lea
fistpl
roll
jb
inc
imul
outsl
call
mov
xchg
push
repz
mov
push
das
jge
push
cmp
ret
sbb
mov
mov
imulb
push
sub
imul
sti
push
mov
xorps
pop
push
cmp
pusha
outsl
sbb
dec
push
fstpl
test
add
sbb
pop
dec
cli
popa
notb
or
rcpps
sub
xor
mov
sarb
ja
mov
inc
pop
movsb
sar
mov
xlat
or
push
or
mov
and
lahf
cmp
sbb
in
fsubl
lahf
dec
and
test
mov
repnz
sbb
dec
pop
jl
pop
or
inc
and
jne
sub
fsubrs
test
sub
and
inc
inc
cltd
lock
cmp
fisubs
push
dec
push
push
lods
jecxz
sbb
int
push
inc
or
add
pop
cmp
popa
dec
adc
rcrb
fists
sub
addr16
loop
jmp
add
jb
fiadds
cld
mov
mov
fcomps
push
push
add
and
cmp
in
dec
jne
inc
or
cmpsb
cmp
popf
roll
cld
push
lret
ret
pop
lcall
sub
pop
sub
mov
test
dec
push
dec
jae
ret
cmp
mov
mov
fdivrl
ror
stc
fstl
sub
xchg
lods
or
xchg
and
leave
xchg
jbe
fidivrl
data16
fldl
call
push
adc
cmp
aad
adc
push
aam
das
lret
mov
mov
sub
add
rcrl
aas
adc
imul
dec
mov
sbb
lcall
mov
rcrb
lock
mov
stos
insl
add
arpl
in
cltd
adc
std
cmc
sub
addr16
cltd
push
jnp
pop
pop
or
into
cmp
scas
mov
les
pushl
call
mov
mov
xor
add
cmp
jne
mov
inc
cmp
jb
jmp
mov
xor
add
jmp
mov
movzwl
mov
mov
mov
mov
mov
xor
add
cmp
jne
mov
xor
jmp
jmp
xchg
adcl
and
jle
in
iret
cld
or
mov
mov
mov
xlat
lahf
mov
push
and
dec
push
or
jecxz
testb
pop
insb
bound
cmpsb
in
inc
call
out
jmp
mov
sbb
stc
filds
testl
into
addr16
lods
mov
mov
out
icebp
mov
pop
sbb
movsl
add
push
jae
or
push
test
repz
dec
xchg
xor
cmc
and
pop
bound
pop
sbb
mov
fidivl
or
sub
inc
stc
inc
dec
and
pop
mov
outsb
xlat
and
pop
push
inc
sub
cmp
das
adc
and
jle
xlat
sbb
popa
daa
inc
pushf
xlat
ja
rorb
std
cmp
sti
sti
fnstsw
lock
sbb
xchg
dec
js
test
outsl
sbb
xchg
inc
mov
add
and
jecxz
test
test
inc
cmpsl
lock
icebp
xorb
dec
sub
cmc
sub
mov
pop
test
dec
lods
pop
cs
sti
sbb
subl
fstpt
add
push
mov
pop
clc
mov
leave
jecxz
xchg
sbb
pop
shrb
pop
ss
sarb
push
data16
xchg
or
scas
ds
daa
imul
pop
insl
or
mov
sub
mov
pop
and
and
movsl
and
add
ljmp
das
inc
out
stos
shll
loopne
stos
lahf
sub
xchg
fwait
mov
dec
mov
push
push
xchg
xor
and
jge
jmp
in
out
pop
add
jne
js
xchg
lods
fimuls
lods
into
add
int
cmpsl
jg
les
mov
arpl
inc
sahf
xchg
mov
push
add
xor
call
movd
bound
out
mov
adc
pusha
jo
adc
xlat
dec
jns
add
pop
addr16
js
outsb
dec
and
decl
add
and
in
add
fadds
jge
aad
cwtl
mov
sbb
jecxz
or
jae
jge
fmulp
push
pop
addl
sub
mov
std
push
jmp
jmp
xchg
rcrb
dec
dec
mov
fcompl
pushf
movsl
lret
inc
push
sahf
int
cmc
jge
inc
and
dec
ljmp
or
inc
enter
daa
js
pmaxsw
pushf
ja
sbb
mov
mov
into
jae
ds
test
pop
dec
ret
enter
bound
test
cwtl
mov
mov
sbb
pop
xor
bound
push
xchg
sub
or
in
rorb
push
add
mov
push
pop
push
dec
jmp
test
jnp
mov
xchg
rcr
sbb
jle
jge
jle
mov
fdivrs
pop
insb
sub
in
iret
ja
arpl
call
int
sub
cmpl
in
and
addr16
or
ljmp
dec
test
arpl
push
pop
mov
pushf
mov
out
xchg
push
push
or
mov
dec
std
jo
inc
pop
addb
jbe
dec
ret
cmpb
push
jge
cld
xor
sbb
pop
jmp
adc
in
push
push
mov
mov
dec
dec
add
dec
insb
add
sbb
hlt
stos
pop
cmc
push
mov
repnz
mov
sti
adcb
fsubs
mov
mov
fistpll
call
es
sbb
out
pop
jno
movsb
int3
xor
push
mov
out
scas
and
pop
fidivrl
jg
scas
std
push
xchg
xchg
ret
stos
test
imul
xchg
pcmpeqd
jns
or
or
addb
js
mov
dec
imul
ret
jne
fnstsw
push
xchg
inc
xchg
push
movb
leave
dec
or
lret
xor
imul
sbb
pop
test
mov
stc
dec
dec
sbb
insb
out
in
je
rcrl
push
and
push
test
push
push
and
lods
mov
mov
or
dec
aad
insb
add
jmp
in
jle
outsl
sahf
mov
out
cmp
imul
mov
loope
mov
dec
sub
leave
mov
sub
add
icebp
sub
xor
inc
js
les
lock
imul
aad
sub
push
test
xchg
mov
mov
pop
xor
addr16
adc
dec
cmp
and
push
cld
xchg
xor
loop
mov
cmp
push
in
sub
xchg
and
xchg
call
push
loop
loop
jmp
test
imul
mov
lret
sbb
iret
ficoml
shlb
fwait
mov
sub
es
iret
push
or
mov
lods
lods
movsl
xor
cli
fmuls
clc
and
bound
les
mov
dec
cltd
scas
movsb
ss
lock
sbb
shll
inc
jge
arpl
mov
fisttpl
daa
adc
popf
inc
jmp
adc
lcall
mov
sbb
scas
lock
ljmp
fistps
adc
mov
jns
int3
pop
xor
and
xor
dec
add
push
test
push
lret
aaa
jno
cmp
cmpsb
popa
xor
sbb
mov
test
jno,pt
and
add
or
sub
xchg
dec
mov
imul
sub
mov
mov
mov
xor
mov
add
mov
mov
xor
add
mov
jmp
xor
xor
xor
pop
pop
int
jge
xchg
jle
jge
jle
out
aaa
test
xchg
pop
idiv
pop
jb
cwtl
mov
ficoml
sub
das
rcl
jbe
sub
push
mov
jne
arpl
stc
pusha
jecxz
nop
or
inc
jbe
push
push
fs
ja
mov
data16
adc
push
xlat
push
and
jb
out
cmp
mov
bound
inc
mov
jp
pop
adc
mov
fs
movsb
mov
lahf
pop
iret
or
ror
mov
int3
stos
pop
xchg
mov
pop
aaa
mov
pop
xlat
aaa
adc
aad
imul
repz
ficompl
mov
fwait
pop
xlat
pop
je
mov
shlb
jmp
cli
in
jl
add
hlt
jge
xchg
push
ds
ficompl
fcoml
outsb
ja
lock
or
xchg
adc
outsb
aam
add
pop
lods
push
idiv
sub
shl
add
mov
pop
adc
lea
gs
sbb
mov
pop
xor
orl
std
push
and
mov
in
push
fcompl
add
cmp
sub
pop
enter
daa
jecxz
loopew
mov
fs
out
mov
movb
mov
sub
test
rol
enter
stos
cmp
ds
xlat
cmp
push
arpl
inc
dec
and
lods
add
addr16
mov
les
jge
inc
imul
leave
or
dec
rorl
pop
sbb
mov
lret
mov
sbb
mov
and
pop
jne
ljmp
push
aas
cmp
outsl
mov
cmp
pop
nop
out
xor
pop
xor
aam
stos
test
jbe
fbstp
jg
mov
mov
pusha
sub
or
or
xchg
out
mov
inc
pop
add
out
mov
sbb
cmpsl
cltd
outsl
pop
loope
in
dec
push
enter
aad
and
xor
leave
mov
cwtl
xor
push
cmc
mov
jno
test
add
hlt
mov
xor
jnp
inc
push
mov
stos
xor
call
xor
sub
inc
lahf
roll
scas
or
dec
lret
sbb
cli
fs
fwait
ljmp
cwtl
pop
push
and
hlt
inc
mov
fcmovnb
or
mov
imul
dec
jne
or
jg
mov
movsl
stos
stc
enter
cltd
test
jmp
pop
adc
imul
pop
xor
xchg
sub
dec
dec
lea
and
pop
jae
cmp
in
or
enter
pop
aad
jmp
xor
inc
rorl
scas
add
mov
lea
cmp
je
mov
mov
mov
mov
mov
xor
xor
mov
add
div
mov
jmp
inc
stos
push
jmp
jae
mov
jo
jecxz
dec
or
jle
jge
jle
cltd
lods
add
push
in
lds
insb
jge
add
adc
mov
clc
xchg
out
mov
notl
js
cltd
jne
notl
addb
add
andl
push
pushf
subb
pop
sarl
jmp
into
dec
adc
lret
push
loopne
mov
arpl
or
push
jmp
jge
pushf
mov
mov
outsl
insl
mov
inc
pop
movsl
sub
xchg
hlt
pop
inc
dec
mov
sub
int3
xchg
in
js
mov
xor
stos
fmull
cmp
xor
mov
mov
sbb
aam
stc
cmc
xchg
push
movsb
stos
stos
xor
mov
imul
sub
mov
sub
jae
sbb
inc
and
out
shl
mov
adc
cmpsb
jmp
ja
leave
mov
pop
or
cltd
or
inc
dec
push
aas
frstor
push
arpl
xchg
and
mov
out
into
adc
loop
ret
jno
adc
sub
lret
aas
add
stc
orb
mov
adc
xor
gs
lods
das
lods
jnp
pop
push
enter
leave
mov
loopne
cmp
add
sub
and
jo
mov
nop
jno
or
insb
xor
aam
inc
dec
sub
out
std
or
or
jmp
mov
push
popf
fwait
call
pop
or
mov
sarb
push
das
inc
mov
ffreep
lret
fidivrl
jecxz
jno
cmpsl
in
leave
xchg
fwait
inc
jns
add
cld
sahf
mov
lds
jae
push
fwait
push
push
fisubl
out
ljmp
out
ret
and
cli
sub
cmp
repnz
pop
out
sub
loopne
shr
sbb
scas
fs
jno
lret
pop
adcb
or
sarl
or
and
scas
popf
jnp
test
sub
push
pop
dec
cmp
fcom
pop
imul
mov
sub
cmp
int
push
dec
sub
bound
push
nop
xchg
mov
data16
lods
inc
cmp
movsb
push
sub
notb
lods
in
cltd
pop
ficomps
lahf
push
jg
cmp
mov
dec
mov
rcl
pop
lods
dec
aad
mov
pop
filds
or
test
cmpsl
std
divb
ret
std
fs
arpl
or
mulb
pop
sbb
out
mov
jle
mov
xor
push
adc
xchg
pop
lcall
push
aad
fidivs
mov
push
nop
inc
movsl
push
sub
cmp
cmc
jns
lods
pop
fxch
out
sbb
mov
rcll
ja
sahf
or
xor
lea
jmp
das
subb
mov
xor
and
or
jle
jge
jle
mov
xor
in
mov
and
cmp
xor
fwait
mov
pop
xchg
je
decl
test
rorb
cld
mov
jl
fstl
stos
mov
mov
push
popf
lcall
sub
adc
aas
fcomp
mov
jmp
aaa
outsb
rcrb
push
mov
es
fnstsw
fmull
or
ret
jnp
add
jne
mov
das
mov
mov
aas
push
outsl
mov
add
and
pop
mov
pop
mov
into
dec
push
paddq
int
shlb
inc
mov
inc
and
xor
leave
into
in
sbb
sbb
adc
scas
mov
mov
cmpsl
xchg
push
mov
jmp
fidivrs
aam
les
push
adc
mov
push
mov
jmp
mov
out
out
movsb
pop
mov
mov
je
sbb
push
inc
mov
jne
cvtps2pi
pop
xchg
cltd
int
add
data16
sbb
test
pop
mov
roll
mov
loop
or
cwtl
xchg
in
xchg
push
repz
jmp
sbbb
ret
inc
cli
in
mov
xchg
push
fwait
rcrb
push
inc
inc
test
sub
es
ret
pop
pop
lods
movsb
loop
movsl
push
lret
mov
loope
xchg
fstpt
adc
rcrb
rolb
cwtl
loope
pop
xchg
cmp
dec
test
iret
iret
jb
dec
cli
ljmp
popa
shr
loop
mov
dec
in
movb
pushf
vmovlps
mov
scas
lret
add
mov
sub
orl
and
inc
popf
js
and
dec
xlat
vpunpckhbw
or
jno
pop
fidivrs
add
jbe
push
mov
adc
out
mov
mov
daa
pop
nop
and
out
mov
push
in
es
inc
call
sub
mov
fidivrl
sahf
xchg
test
in
push
or
fcompl
mov
inc
mov
and
in
stos
dec
inc
add
push
cmp
jp
mov
push
ljmp
leave
lahf
fnstsw
cmp
xor
push
dec
xchg
icebp
mov
xor
jb
push
scas
inc
cld
mov
sbb
pop
cwtl
lret
add
into
jo
mov
adc
lcall
sbb
out
adc
ret
jbe
and
xor
clc
mov
test
lods
pop
jl
nop
add
mov
std
mov
push
dec
mov
jg
frstor
jae
loope
push
in
xor
cld
inc
in
sub
incb
xor
call
scas
jae
jmp
pushf
mov
or
insb
mov
in
mov
mov
jmp
repnz
adc
aad
fcoms
or
jge
jle
and
sub
and
mov
inc
or
aam
xchg
or
jnp
mov
test
icebp
loope
push
jae
addb
sub
cmpsl
jb
loopne
test
push
fs
xlat
pop
lcall
sub
ss
stc
sub
arpl
mov
in
cmc
je
loopne
stos
fwait
rcll
aaa
mov
xor
push
out
incl
pop
or
cmpsl
aaa
jo
addr16
je
cwtl
mov
mov
rcr
add
dec
daa
rcll
daa
or
adc
dec
xchg
mov
or
lahf
sbb
sbb
cltd
shrb
dec
rcl
sbb
mov
sub
xchg
es
sti
fadds
mov
leave
jp
ret
int3
stos
sub
insl
je
rcrb
cmc
jmp
lods
mov
or
add
es
jbe
pop
nop
movsl
jae
inc
mov
in
fidivrs
xchg
sbb
icebp
or
cmp
and
or
mov
clc
movsb
pop
inc
mov
sahf
ljmp
loop
outsl
fisttpll
cmpsl
xchg
hlt
ret
fcoms
ja
fsubl
add
jg
dec
sub
imul
push
mov
dec
loopne
lods
ret
shll
dec
ljmp
hlt
aad
cmp
je
sbb
sahf
xor
push
les
or
push
outsb
pop
fbld
push
cltd
lea
repnz
cmp
imull
mov
clc
push
push
mov
mov
insl
cmp
jns
cltd
cmp
js
dec
sarb
jg
pop
xor
mov
xchg
out
frstor
mov
test
jp
mov
jne
lock
sbb
cmp
inc
test
add
pusha
rclb
roll
mov
ret
inc
sbb
cli
cmp
adc
or
pushf
stos
jno
out
adc
sbb
lret
sbb
ds
inc
pop
cmpsb
stc
push
xchg
sbb
in
pop
inc
xor
popw
lods
adc
pop
sarl
mov
add
jb
mov
jnp
jle
enter
or
fsubrl
adc
or
aad
inc
jecxz
sti
addr16
cs
stc
jno
in
rcll
sarb
incl
sub
push
xchg
add
rep
loopne
rcrb
out
sub
jge
call
pop
ds
clc
negl
adc
leave
psllw
shl
and
out
fcmovnb
sbb
xor
aam
stos
cmp
pop
pop
jmp
les
cltd
repnz
fwait
pop
add
push
loopne
and
aad
add
mov
mov
xor
lea
mov
mov
mov
xor
add
imul
mov
xor
mov
lea
cmp
jne
mov
jmp
mov
mov
xor
add
mov
xor
lea
add
call
xor
inc
cmp
je
xchg
push
pop
push
pop
inc
xchg
sub
xchg
dec
mov
imul
add
xchg
push
xor
mov
dec
inc
add
jmp
lods
and
xchg
jno
jno
add
comiss
jle
jge
jle
cmp
sub
inc
rcll
out
sbb
dec
call
jmp
cmp
or
pop
add
lds
loopne
shlb
mov
jnp
inc
mov
jle
enter
mov
inc
inc
fcoml
dec
xor
int3
xor
adc
cmpb
adc
push
repnz
cmp
push
enter
inc
sub
mov
pusha
test
xor
ret
mov
loop
mov
out
test
lds
mov
repnz
repz
idivl
lret
iret
sub
aas
sub
lds
andl
sub
cmp
jl
xor
mov
xchg
dec
hlt
pop
pop
cmp
cld
aaa
and
mov
icebp
popf
add
sahf
adcl
xor
mov
add
pop
sub
icebp
push
sbb
lahf
jg
jns
jo
paddd
sti
out
jmp
and
out
fidivrs
imul
rolb
cwtl
arpl
jno
test
and
dec
mov
fdivrl
ret
dec
mov
sti
sti
cmp
push
aas
nop
xchg
sub
inc
dec
repz
js
jle
in
sbb
mov
ror
push
inc
stc
mov
shlb
sbb
bound
or
cs
jle
insl
mov
sub
test
xor
aam
dec
dec
push
inc
add
sbb
sbb
mov
cmp
or
mov
sbb
push
push
xor
lret
pop
insl
inc
pop
cmp
add
scas
mov
pop
paddusw
xor
mov
xchg
into
inc
sbbl
jle
bound
stc
push
dec
mov
cltd
dec
push
dec
das
in
jae
dec
aas
inc
push
add
icebp
cmp
mov
and
std
pop
cwtl
jl
arpl
lret
adc
sbb
xlat
or
cmpl
and
fcoml
push
shl
add
aas
cltd
mov
jae
mov
hlt
pop
add
sub
pop
pop
fisubl
adc
xchg
mov
dec
arpl
out
ljmp
dec
test
jp
mov
lcall
add
jae
in
fwait
mov
and
push
enter
inc
mov
push
pop
mov
pop
stos
cmp
loop
mov
pushf
mull
icebp
dec
insl
xchg
xchg
cmpsl
orl
mov
push
and
cld
int3
or
sub
test
cltd
cmc
ficompl
into
xchg
mov
icebp
hlt
call
js
das
xchg
mov
lods
iret
jp
jmp
pusha
push
lret
das
add
xchg
stc
cmp
mov
insb
dec
fdivr
dec
xor
add
pop
mov
pop
pop
pop
leave
ret
push
mov
push
movl
push
movl
mov
movl
movl
push
movzwl
mov
mov
movl
push
mov
not
mov
movl
cmp
movl
jmp
jecxz,pn
add
push
popf
pushl
pop
enter
jle
jg
jle
mov
addl
enter
and
sarb
dec
inc
arpl
sub
lahf
cmp
push
inc
dec
adc
jmp
hlt
xchg
pop
fnsave
pop
or
sbb
dec
ljmp
sub
mov
loope
mov
jp
popa
outsl
mov
pop
mov
push
jbe
mov
out
dec
sub
rcrb
sbbb
dec
sbb
xchg
rcll
jbe
pop
bound
pushf
shr
movsb
and
sub
jno
adc
cmpsl
pop
and
jmp
xor
es
dec
and
test
movl
shll
decl
jae
xor
leave
int3
jl
or
push
test
inc
sahf
push
divb
ret
loopne
out
lods
cmc
cmp
mov
cs
inc
test
adc
aad
shrb
int3
add
cmpsl
jp
popf
movsb
arpl
stos
add
cmp
push
test
inc
sbbl
xor
inc
add
inc
cld
mov
xorl
xor
add
cmp
movl
je
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
call
cmpl
jne
mov
inc
mov
jmp
mov
sub
xor
dec
add
push
adcl
pushl
or
pushl
mov
call
mov
mov
mov
mov
jmp
jmp
xor
fs
mov
sti
adc
cmpsb
int
movsl
jle
push
jg
jle
mov
int3
and
xchg
pushf
mov
aas
sbb
jp
cmp
cmp
lret
add
pop
sbb
mov
mov
rorb
jle
gs
mov
rclb
cmp
mov
int3
dec
mov
inc
sahf
out
adc
mov
pop
inc
and
mov
lea
lret
cltd
jle
mov
popa
and
sub
xor
sar
cmp
test
pop
shl
and
xor
or
jmp
cli
mov
mov
sbb
ret
subl
call
pushf
sbb
mov
adc
stc
loopne
in
leave
add
jne
sbb
jae
movsl
add
fnstenv
addb
cmp
lcall
into
movsb
gs
aas
sbb
add
stc
leave
xor
mov
dec
cli
in
xlat
in
rorb
int3
lret
fiadds
roll
inc
cld
mov
xor
add
cmp
jne
mov
xor
add
jmp
xor
xor
mov
aad
fbld
jle
xorb
push
jg
fistpl
inc
push
adc
lcall
mov
out
xlat
xor
imul
scas
fiadds
sub
dec
xor
in
and
test
bound
outsl
jmp
sahf
ret
xlat
stc
cld
cld
pop
ds
aam
dec
jmp
fildl
push
hlt
ror
add
jns
or
fildl
push
adc
adc
pop
add
cltd
sarb
or
stc
into
push
rorl
rcrl
pop
cwtl
int3
xor
scas
std
mov
movsl
sbb
xchg
fmull
dec
stos
jno
cmp
xor
jns
scas
das
or
mov
dec
iret
aaa
mov
pop
gs
bswap
in
ss
and
lahf
ljmp
leave
cmp
das
cmp
pop
pop
inc
shrl
mov
push
jnp
mov
jmp
jnp
pop
repnz
fwait
pusha
add
xchg
addr16
mov
mov
xor
add
mov
pushl
pushl
call
mov
xor
pop
add
pop
leave
ret
push
mov
sub
mov
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
call
jmp
subl
push
andl
mov
inc
mov
cmpl
jne
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
movl
cmpl
je
cmpl
jne
push
pushl
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
dec
mov
xor
mov
add
andl
push
negl
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
call
cmpl
jb
sbb
mov
xor
andl
movl
adcl
movl
subl
add
movl
jmp
cmp
jne
movzbl
mov
jmp
xchg
inc
jae
push
aaa
mov
xor
push
jl
jle
xor
daa
push
lahf
dec
subl
loop
ljmp
int
dec
sbb
dec
out
paddw
xchg
add
test
divl
jns
jp
mov
xchg
or
outsb
adc
adc
loope
mov
cmpsl
repnz
jg
dec
cmp
addr16
inc
inc
stc
repnz
push
loope
std
mov
jbe
mov
imul
xchg
scas
stos
sub
jmp
jg
mov
std
pop
fwait
add
dec
stos
push
jmp
jle
inc
xchg
xor
mov
dec
sub
mov
rcrl
push
ss
push
ds
popf
lret
xlat
cld
fisubs
hlt
inc
into
adc
adc
incb
enter
rol
popf
or
dec
mov
fwait
jp
scas
add
mov
fldenv
mov
and
cmpsl
lret
sti
xor
imul
lea
ljmp
pusha
pop
mov
insb
ljmp
adc
mov
nop
or
bound
or
or
cltd
repnz
cli
xchg
pop
jmp
add
or
fsubl
push
dec
out
jo
dec
push
negb
xchg
outsl
mov
inc
fimull
fs
push
jb
mov
mov
xor
fucom
scas
movsl
mov
sar
jp
mov
mov
mov
pop
fldenv
push
imul
aaa
scas
insb
add
cwtl
lea
outsl
jnp
mov
jge
imull
sub
dec
loopne
in
jmp
jae
mov
inc
cs
xlat
imul
or
repnz
sti
out
movsb
jns
nop
dec
sbb
cmp
mov
out
negl
ja
rorb
lcall
adc
jno
stos
imul
idivl
push
fdivr
push
add
add
xchg
aas
add
mov
movl
mov
movl
mov
movl
mov
movl
jmp
cmp
jne
andl
mov
sub
push
mov
add
push
jmp
es
gs
test
mov
jle
xor
cmp
push
jnp
ss
or
lock
xchg
or
inc
ret
push
push
div
xor
pop
inc
gs
in
cwtl
leave
inc
add
or
sbb
add
push
push
fcmovne
mov
fisubl
jo
xor
jmp
mov
push
dec
sub
call
imul
sub
iret
popf
jnp
enter
and
lret
ja
ret
lods
scas
cli
mov
in
mov
and
mov
mov
push
imul
and
sti
aad
cmpsl
mov
xchg
adc
or
mov
adc
and
xchg
sub
mov
test
lret
cmp
jecxz
or
add
pushf
push
adc
push
data16
or
mov
sbb
sub
fsubrp
and
sub
out
repz
dec
pop
mov
adc
out
lret
adc
push
jae
jbe
xchg
sub
mov
xchg
and
cmp
shl
das
push
and
xlat
cmp
in
push
cmpsl
mov
popf
fisubrs
sub
or
or
inc
or
mov
int3
mov
mov
icebp
les
dec
fimull
push
stos
cmp
mov
sbb
push
and
push
cli
sub
sub
in
and
cli
mov
arpl
or
stos
jle
sahf
sub
mov
aaa
mov
cmp
xor
jno
mov
xchg
pop
test
out
lods
and
arpl
insb
out
fimull
push
pop
adc
sbb
fwait
inc
test
mov
mov
pop
and
push
push
mov
pop
incl
cmpl
jb
jmp
jmp
lds
imul
scas
jle
push
jl
jle
jmp
dec
xchg
in
cld
clc
mov
lods
sti
push
xchg
jae
jo
enter
jmp
push
inc
jae
jge
cmp
cld
and
inc
sbb
jp
lcall
dec
or
mov
adc
add
les
pop
lds
mov
arpl
imul
fnstsw
bnd
push
scas
push
in
cmp
mov
test
lds
pop
sbb
inc
enter
xchg
imul
jp
ret
cmpsl
xchg
xchg
out
inc
pop
icebp
jb
ficoml
loopne
js
pop
icebp
adc
add
sub
xchg
jo
sahf
mulb
hlt
aas
sbb
jb
mov
mov
inc
les
dec
xchg
cmp
fildll
jbe
in
push
call
xchg
push
pop
cmpl
sub
mov
sbb
inc
mov
in
sti
xor
mov
jb
jb
xor
xchg
test
fimuls
arpl
xchg
jecxz
lods
out
mov
testb
rolb
push
xchg
daa
pop
push
push
jne
mov
pop
pop
dec
inc
push
jle
cmp
ja
aam
fnstcw
sbb
inc
repz
scas
xorb
ja
xchg
cltd
ss
jecxz
inc
adc
fwait
aaa
adc
add
cmc
mov
nop
scas
mov
dec
push
outsl
or
adc
jecxz
int
pop
adc
push
mov
pusha
mov
lahf
xlat
ret
lods
in
insl
cmp
add
mov
push
dec
or
inc
adc
push
mov
je
out
dec
sarb
leave
je
iret
mov
cmpl
sbb
add
mov
push
out
sahf
mov
aam
pop
mov
shl
sbb
pop
mov
mov
jp
inc
adc
mov
add
jne
movl
mov
mov
mov
mov
mov
xor
add
mov
lea
mov
mov
xor
add
mov
lea
push
mov
xor
add
push
mov
push
pushl
call
jmp
cmp
jne
mov
xor
add
mov
mov
mov
mov
mov
mov
push
pop
sub
add
mov
mov
xor
lea
cmp
jne
mov
pop
xor
jmp
push
mov
jno
scas
out
lds
lahf
lods
jle
push
jl
jle
jl
js
push
push
push
push
dec
lock
in
and
fsub
sbb
scas
leave
jmp
mov
push
repz
scas
out
jns
inc
add
mov
push
pop
sbb
aaa
pop
dec
pop
inc
add
std
div
and
sub
xchg
dec
cs
decl
pop
sti
pop
lds
sbb
aas
ret
jp
or
jecxz
mov
xchg
xchg
test
mov
cmp
push
fmuls
subl
lods
mov
jle
push
jge
pop
and
out
ret
mov
add
add
cmp
jecxz
fidivrl
inc
inc
mov
aam
or
xor
dec
mov
nop
inc
adc
in
les
sub
push
push
mov
jno
push
imul
inc
jb
adc
outsl
jne
dec
mov
and
cltd
movsb
sbb
arpl
push
lods
adc
cmp
ljmp
imul
lods
xchg
pop
orb
ljmp
jno
stc
push
xchg
sub
cmpsb
mov
stos
out
and
into
and
mov
ljmp
add
negl
pop
jg
sbb
or
fcmovnu
adc
cmc
movsl
mov
out
aaa
jecxz
push
add
jp
mov
add
outsb
std
mov
enter
jl
add
testb
push
dec
push
sbb
loope
hlt
adc
add
in
jnp
cmp
or
mov
pop
shrb
in
mov
xor
andb
push
mov
cmp
jp
test
insb
cmpsl
mov
in
outsb
xor
hlt
fcomi
es
add
pop
leave
ret
push
mov
push
movl
push
xor
movl
jmp
lcall
push
inc
push
dec
movsb
mov
stos
jle
lods
jl
jle
push
mov
repz
push
lcall
int3
xchg
std
test
leave
dec
lret
push
mov
sbb
aaa
and
cmp
shrb
nop
jne,pt
clc
icebp
outsb
inc
cld
sahf
mov
popa
adc
xor
jle
push
pushf
aam
adc
shlb
roll
mov
push
call
inc
repnz
lea
aad
lods
or
outsb
xlat
into
xchg
dec
js
popf
ljmp
mov
je
jb
xor
loop
testb
jle
scas
movsb
cld
push
adc
into
inc
sub
int3
mov
dec
sbb
lods
ljmp
mov
xor
or
fiaddl
pushf
icebp
adc
mov
add
fcomps
inc
std
scas
orl
in
jmp
mov
jg
in
xlat
mov
sar
rol
pop
prefetch
jnp
cmpsb
in
ja
push
mov
mov
dec
scas
xlat
xchg
add
push
fcoms
fimuls
xchg
fcomip
jb
or
sahf
mov
sbb
xchg
adc
ret
mov
hlt
pop
sbb
jmp
inc
push
fcompl
repnz
iret
add
xor
sub
dec
fimull
xchg
scas
or
sub
jg
adc
add
cltd
addr16
mov
xchg
notl
daa
sbb
xchg
push
and
sbbb
aad
insb
mov
aam
test
fisttps
cmp
jno
mov
inc
mov
add
dec
and
fldt
divb
loop
xchg
out
int3
ss
outsl
mov
mov
int
and
mov
fstpt
mov
in
aas
pop
pop
push
inc
lods
fcomp
adc
push
test
outsb
dec
loope
xchg
loopne
hlt
stc
int
dec
dec
or
mov
and
or
xchg
test
inc
adc
cmp
sbb
mov
ss
xchg
or
fcmovne
outsl
xchg
pop
vrsqrtss
xchg
push
ds
add
mov
lds
push
test
fisttps
cmp
pop
sbb
mov
test
adc
mov
jnp
xchg
imul
std
adc
sbb
mov
or
aas
jl
andb
cmp
loopne
stc
jns
dec
dec
mov
dec
aam
call
pop
rclb
sbb
test
inc
add
add
mov
addl
jmp
insb
xchg
xchg
in
or
int
sti
lret
jle
lods
jl
jle
push
jo
xchg
int3
jp
sub
push
adc
sub
dec
xor
insb
jnp
mov
sbb
xor
inc
cmp
jge
js
lds
in
js
xadd
aad
or
aas
mov
pop
cmc
dec
cmc
aam
sub
fwait
cmp
repz
mov
lock
in
mov
popa
pop
iret
pop
out
or
in
sub
xchg
icebp
js
or
sti
and
aam
imul
fildl
mov
push
enter
jle
loopne
xor
jge,pt
and
mov
scas
dec
xchg
aam
int
std
inc
popa
xchg
sbb
stos
adc
and
pop
mov
mov
aaa
test
lahf
push
push
mov
xchg
add
adc
nop
cwtl
jno
mov
dec
add
sub
testl
stos
adc
add
push
sti
hlt
pop
inc
or
popf
pop
add
pop
das
movsb
gs
mov
loope
cli
in
cmp
inc
push
mov
ret
mov
mov
jno
mov
mov
adc
into
or
push
mov
sbb
mov
push
mov
inc
mov
pop
jae
mov
fsubrs
scas
add
dec
ficompl
cmpb
sbb
add
push
or
add
push
fstps
add
into
xlat
dec
mov
inc
and
movsb
insb
fwait
mov
aaa
inc
addr16
push
or
insb
ds
into
fidivs
negb
xlat
pop
pushf
inc
stc
mov
sarb
fmulp
jo
rclb
nop
pushf
xlat
mov
adc
mov
adc
adc
lret
loope
sub
in
mov
pop
xor
pop
pop
jmp
inc
xor
or
dec
rcrl
dec
jp
mov
movsl
sarb
mov
lret
int
mov
xor
pop
mov
pop
cmp
test
cltd
or
push
and
pop
js
pop
out
imul
jo
sub
inc
pop
insl
push
lea
aam
js
mov
fistps
ret
je
imul
push
xchg
ds
sub
xchg
out
jg
mov
add
cmp
dec
aas
ss
std
repnz
cli
stos
inc
icebp
in
outsl
mov
jno
jg
pop
add
fldenv
movsb
sbb
and
rcrb
pusha
jl
dec
push
popf
jns
mov
cld
cld
jle
scas
cld
stos
and
push
adc
mov
movzbl
adc
mov
xor
xor
xor
mov
jmp
mov
jno
jb
inc
pop
outsl
popf
and
jle
lods
jl
jle
xchg
dec
add
lret
popa
xor
xchg
ja
jae
les
push
imul
sub
in
nop
mov
loop
adc
cltd
js
cld
sub
addr16
jmp
or
mov
jle
mov
stc
push
sbb
ror
mov
inc
movsl
mov
mov
pop
and
jns
jno
cmp
xor
or
in
popf
fcmovu
sbb
popf
push
stos
dec
mov
pop
lods
iret
cli
xchg
out
jne
jmp
jl
dec
lcall
into
cmpsb
cmpsl
xor
mov
repz
ja
jo
shl
shlb
add
jnp
bound
add
mov
add
adc
rorl
lods
aaa
in
mov
ds
inc
jp
nop
jmp
outsl
push
lock
outsb
rolb
iret
mov
mov
movsl
jle
std
mov
cmpsb
ret
dec
nop
and
pop
add
push
in
jns
cli
or
sub
test
xor
sbb
out
dec
mov
insb
push
add
lret
cmp
mov
ljmp
jb
ljmp
in
notl
ja
jne
fistpl
push
sti
test
loop
and
mov
cmp
hlt
es
pop
fadds
fwait
adcb
add
std
dec
cmc
imul
sbb
aam
scas
adc
cmpsb
mov
loope
movl
sbb
cld
and
std
push
and
or
pusha
or
mov
mov
loopne
popf
scas
sarl
lods
sub
push
subb
sub
cmpsb
adc
hlt
jae
cmp
iret
dec
sub
movsl
cs
pop
adc
clc
cltd
test
pop
jecxz
lahf
xchg
incl
cli
cmp
stos
cmp
test
hlt
shlb
push
and
shll
cmp
push
call
sub
std
shl
mov
or
lods
pushf
loop
pop
pop
jne
je
aad
or
les
popf
mov
dec
inc
cmp
jg
mov
mov
daa
lods
mov
out
flds
xor
rcll
pop
call
pop
push
hlt
std
scas
inc
add
mov
jno
loopne
addr16
inc
cwtl
stos
aas
push
cmp
and
mov
sbb
fs
jno
clc
pop
adc
pop
lret
ss
enter
pop
ret
call
cwtl
std
cmc
jnp,pn
pushf
pop
inc
add
add
jmp
lock
arpl
sub
scas
ret
sarl
jmp
mov
jl
jle
xchg
xlat
cmc
in
cmp
cmpsl
dec
mov
mov
test
sbb
mov
pop
mov
mov
pop
scas
aam
addl
cmp
jns
adc
pop
shl
out
mov
pop
lret
out
mov
popf
int3
mov
dec
mov
pop
adc
es
mov
mull
pop
mov
inc
inc
push
iret
jns
nop
jge
shll
mov
neg
push
mov
aas
orl
aas
loopne
fsubl
movsb
push
icebp
cmc
call
mov
mov
pushf
shll
inc
pusha
adc
mov
jae
xor
imul
dec
push
test
scas
lret
adc
mov
inc
dec
sbb
inc
jno
and
loop
addr16
jno
mov
mov
cmp
jnp
mov
je
out
test
flds
sbb
mov
xchg
xor
lret
shll
push
inc
dec
jmp
adc
mov
or
mov
mov
mov
or
shr
jmp
push
shlb
es
pop
iret
sub
push
pop
jae
add
mov
dec
insb
hlt
push
mov
lds
fistpl
push
push
mov
push
popf
mov
pop
mov
sub
fs
lds
arpl
jnp
fisubrl
and
inc
addl
jne
fmul
push
aaa
xor
out
aad
ds
xchg
enter
jle
ret
lock
test
popa
ret
push
pop
mov
inc
out
icebp
mov
xchg
fbstp
inc
mov
aas
notb
fbld
in
mov
push
push
jne
pop
xor
cs
movsl
pushf
repnz
enter
shll
cmp
pop
jle
xchg
fnstenv
cvtpi2ps
mov
cmp
popa
and
xchg
mov
fstps
ss
mov
sbb
xor
add
mov
push
cmp
sub
sbb
xchg
mov
mov
movsl
lahf
aam
scas
xchg
pop
in
sahf
cld
mov
lret
fcoml
sahf
addr16
lcall
gs
sub
stc
call
cmp
dec
repnz
mov
inc
out
scas
insl
scas
sbb
cmp
jecxz
scas
daa
rcll
inc
aas
mov
mov
mov
lret
pop
enter
push
sub
jmp
jne
movl
cmp
jne
mov
sbbl
jmp
inc
sbb
test
add
pusha
loope
mov
jle
jno
xchg
sbb
hlt
adcl
js
cmp
inc
pop
mov
push
jns
aam
repz
mov
xor
jle
pop
in
rcrl
jp
inc
jns
inc
imul
push
retw
dec
add
push
imull
xchg
add
inc
jo
xor
jno
fs
out
and
movsb
mov
hlt
fwait
mov
insb
and
pop
mov
jle
out
sbb
test
cwtl
cld
jb
cmpsb
cmp
cmpsl
mov
std
jae
mov
fidivs
dec
std
dec
mov
adcl
in
popa
loop
and
cmp
dec
outsb
nop
inc
and
mov
sbb
jbe
scas
cltd
cmp
jae
jmp
shll
inc
push
inc
mov
js
jae
repz
movsl
loope
inc
adc
xchg
lock
movsl
imul
and
pop
insl
fistps
pop
cs
xlat
jl
add
mov
or
or
adc
add
hlt
adc
and
mov
push
mov
stc
add
adc
movsb
aas
andl
sub
xor
inc
jbe
jle
rcrl
orl
pop
fisttpll
sbb
add
xor
jecxz
les
test
hlt
mov
push
push
sub
sub
hlt
mov
cmp
movsl
push
jns
jbe
sub
sub
aad
pop
loopne
js
mov
dec
xchg
pop
jb
inc
out
cmp
pop
cltd
sub
insl
scas
sub
jno
hlt
or
mov
adc
notb
out
dec
push
dec
adc
cltd
adc
fisubs
add
sbb
jae
and
sahf
dec
mov
xor
es
fistpl
dec
xchg
push
fsubrp
std
sbb
daa
fisubl
xor
outsb
inc
inc
jecxz
sub
mov
push
lock
ret
pause
jns
and
mov
inc
pusha
dec
xor
stos
sbb
out
jp
xor
or
or
adc
push
nop
sbb
mov
xor
lods
sbb
pop
xchg
hlt
xlat
mov
mov
xchg
inc
mov
lea
lret
leave
not
dec
stos
push
or
cs
je
pusha
inc
jne
loope
mov
jbe
rclb
fs
push
xchg
test
dec
push
add
add
mov
add
xor
xor
add
subl
add
imul
jmp
movl
cmpl
je
cmpl
jne
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
mov
mov
mov
mov
xor
xor
add
add
imul
mov
cmp
mov
je
xor
add
mov
imul
add
mov
mov
pop
leave
ret
push
mov
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
call
cmpl
jne
mov
inc
mov
jmp
xor
push
addl
mov
or
mov
jmp
jne
dec
cs
xchg
or
and
jl
jle
push
xchg
pop
pop
sub
lret
push
in
fsubl
push
mov
in
fsubrl
test
mov
xchg
ret
js
data16
into
push
or
jg
mov
jmp
dec
push
xchg
pop
pop
insb
sub
mov
xlat
pop
jne
movl
sub
scas
mov
push
fldt
shlb
repnz
mov
imul
inc
imul
xchg
sub
shll
pop
add
pop
inc
ret
jnp
add
insl
fstps
xchg
pop
or
inc
jp
fdiv
dec
subb
jbe
jne
xor
sti
lods
mov
and
sub
shll
xor
sbb
ficoml
icebp
stos
test
dec
xchg
and
cmp
add
dec
aas
add
add
sbb
mov
mov
out
pushf
xchg
adc
popf
mov
push
jo
aam
rorl
xor
inc
mov
mov
sub
mov
dec
ljmp
insl
adc
xor
adc
xchg
jp
mov
fildl
incb
outsb
jp
and
insl
pop
xchg
loop
add
xchg
jb
in
ss
in
hlt
test
lea
ficompl
dec
jb
es
jecxz
dec
pop
icebp
adc
sahf
pop
add
sbb
rclb
xchg
mov
repz
jg
daa
stos
and
add
clc
jg
out
stc
inc
in
sbb
mov
cmp
mov
in
cld
hlt
xor
in
repnz
fwait
lods
lret
or
push
and
or
imulb
arpl
nop
cmp
in
dec
sub
fisttps
lods
shrl
mov
and
cwtl
add
out
cmp
repnz
ss
ret
push
cmp
cs
sbb
adc
or
std
push
jmp
aad
roll
xchg
and
or
fadds
dec
cmp
nop
push
pop
int3
add
cmp
pop
or
es
jae
std
leave
out
rcr
hlt
out
loop
fdivrl
sub
or
xchg
aad
adc
sarl
or
mov
mov
add
test
cld
xor
adc
inc
add
add
add
add
adc
cmpl
jne
pushl
call
cmpl
jb
xor
or
sbb
mov
mov
movl
cmpl
je
cmpl
jne
push
pushl
pushl
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
movl
push
xor
mov
sbb
xor
mov
adcl
push
mov
add
cmp
je
mov
mov
xor
mov
sub
add
xor
add
cmp
ja
push
jmp
mov
mov
mov
xor
add
mov
imul
mov
xor
add
mov
mov
mov
xor
lea
mov
xor
mov
sub
add
cmp
jbe
pop
jmp
out
adc
adc
ja
orl
icebp
and
stos
cmp
ljmp
jmp
lret
sti
cld
fidivrl
xor
cmp
lock
pop
mov
test
sarl
lcall
jbe
out
in
dec
sarl
mov
jecxz
cmp
push
jns
dec
and
int
dec
int
into
std
jb
jbe
sbb
jns
fstp
insl
push
mov
add
fiaddl
cmp
jmp
push
pop
jp
mov
lret
sub
xorl
inc
jbe
gs
out
fidivrl
mov
mov
and
dec
pop
inc
lret
add
xchg
shll
inc
and
mov
ja
dec
mov
push
cmp
aaa
push
lods
mov
popl
mov
in
mov
lahf
inc
addr16
aas
xchg
push
xor
movsb
xchg
aaa
dec
inc
or
cmp
loope
jl
popf
in
jmp
jp
je
shrl
add
ja
xor
test
ss
icebp
push
adcl
push
adc
repz
cmp
and
sub
shl
test
push
aad
pop
inc
push
lods
test
sahf
adc
dec
out
push
sti
cmp
mov
jg
dec
xor
jo
leave
cmpsb
daa
xchg
mov
pop
sub
push
ror
mov
cmp
push
pop
cmp
cmpl
cmp
xchg
into
or
xchg
sbb
add
decb
sbb
stos
cmp
push
das
push
mov
aad
push
lds
nop
test
pushf
add
pop
nop
daa
out
push
enter
fwait
jo
lret
leave
pusha
mov
xor
or
ss
inc
fistps
mov
lods
ja
mov
iret
adc
jge
mov
jnp
mov
leave
rcpps
push
mov
inc
daa
and
sbb
sahf
scas
add
jne
in
rorb
loope
in
in
ljmp
and
inc
inc
fsubrl
fisttpl
sbb
pop
mov
sbb
mov
es
lock
jl
cmp
icebp
popa
in
mov
lock
xchg
pop
in
mov
repz
fcomi
divl
adc
mov
jg
adc
and
pop
pop
leave
ret
push
mov
mov
xor
mov
div
mov
and
or
mov
pop
ret
push
mov
sub
xor
mov
movzwl
sbb
mov
mov
xor
andl
mov
add
andl
movzwl
xorl
mov
movb
adc
lea
mov
adc
mov
mov
xor
sub
adcl
mov
xor
xor
sbb
jmp
add
mov
cmpsl
sub
test
inc
jle
icebp
jg
jle
cmpsl
popl
add
xchg
push
arpl
fists
psrlq
pop
sbb
adc
sub
and
cmc
or
and
add
inc
mov
adc
mov
rclb
leave
test
cltd
cmp
jmp
scas
bound
pop
jecxz
js
lahf
nop
and
sub
push
sbb
pop
sbb
mull
sub
jle
fcmovnb
ret
lods
cltd
xor
sub
jle
jae
or
lcall
fsubs
jmp
in
fists
cmpsl
add
dec
lcall
stos
out
test
in
ficoml
or
call
mov
inc
xor
add
and
mov
mov
mov
lods
cmpsl
shll
nop
test
sbbl
cltd
out
rorl
mov
mov
rcll
add
ds
and
scas
sbb
cmp
jl
mov
mul
out
sbb
add
hlt
pop
stos
push
xor
popa
push
xor
stos
xchg
push
adc
xchg
test
js
in
sbb
jns
or
mov
dec
stos
or
out
test
sbb
pop
push
imul
pop
or
andb
jno
pop
scas
outsb
fwait
push
gs
jnp
xchg
rol
inc
clc
xor
movl
mov
orl
mov
movl
push
xor
or
mov
add
jmp
mov
mov
movl
inc
movl
cmp
movl
jb
mov
add
mov
mov
movl
cmpl
je
cmpl
jne
pushl
pushl
pushl
pushl
push
call
cmpl
jne
xor
xor
dec
mov
mov
dec
mov
jmp
mov
addl
xor
sbbl
add
movl
cmp
jmp
adc
in
in
jno
aad
dec
add
sbb
mov
jle
jg
jle
mov
push
test
addr16
sub
pop
arpl
dec
mov
and
sbb
sahf
leave
or
mov
ja
dec
fldl
lods
sbb
lret
xor
jecxz
add
pop
inc
mov
fmull
pop
rcll
pop
cmpsl
and
cwtl
dec
xor
sbb
lods
sub
mov
add
cmp
xor
sub
mov
or
jmp
mov
adc
cmp
mov
mov
outsb
cvtps2pi
stc
inc
jo
ds
outsl
pop
dec
sub
sahf
ljmp
pop
int
repz
adc
xchg
mov
fcmovnu
and
shll
scas
movsb
push
test
sahf
adc
lock
xor
fwait
ret
hlt
pushf
mov
test
push
or
mov
xchg
push
icebp
mov
push
push
jle
mov
sub
addb
cmc
ds
popa
adc
aad
stc
xlat
mull
xchg
shlb
mov
pop
push
fstpl
lahf
rolb
mov
sahf
fsubl
xor
dec
push
cmp
inc
mov
cmp
push
aad
add
roll
cwtl
inc
lea
adc
fwait
jnp
rclb
enter
mov
fimull
mov
jns
cs
xchg
jnp
cmp
xor
jns
mov
mov
out
lcall
icebp
call
popa
je
xor
add
sub
push
sub
push
movl
cmpl
je
cmpl
jne
push
pushl
pushl
push
call
cmpl
jne
mov
dec
mov
xor
or
dec
mov
jmp
mov
mov
xor
jmp
mov
ja
jne
mov
insl
push
push
push
sub
inc
jle
icebp
jg
jle
jg
aas
pop
jl
pop
bound
cltd
fsubrs
mov
push
test
inc
pusha
in
popf
ds
hlt
add
adc
movsb
mov
aam
cmpsb
je
sbb
popa
add
movsl
int
ss
push
pop
das
scas
lock
sbb
add
jo
and
dec
addr16
fisubrs
sbb
cmp
sbb
xchg
into
jl
cmp
ljmp
dec
mov
daa
and
inc
adcb
adc
mov
int
mov
xchg
int3
lret
mov
mov
xchg
dec
imul
mov
out
je
outsb
sbb
dec
call
je
pop
cmpsb
adc
sub
jg
xor
or
inc
sub
mov
mov
push
pushf
int
xchg
add
mov
scas
push
aas
push
repz
or
fcoms
out
mov
lock
and
and
xchg
dec
insb
inc
test
adc
loopne
cltd
xchg
pop
aad
jge
in
sarb
push
fcomip
jnp
rol
in
cmp
jl
jae
aaa
push
nop
ja
xchg
jne
rcrl
jmp
das
mov
cmpsl
sti
push
xor
cmp
leave
out
jnp
inc
adc
lds
aas
dec
inc
pop
mov
add
movzwl
mov
mov
movzwl
xor
add
mov
mov
mov
inc
cmp
jne
pop
pop
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
mov
cmp
je
mov
jmp
mov
adc
adc
imul
push
sub
inc
jle
icebp
jg
jle
pusha
push
imul
bound
loope
sbb
xor
shlb
mov
push
cmpsb
jae
je
gs
loope
adc
xor
mov
imul
adc
cmpsl
jno
pushf
pop
cmp
push
jl
repnz
xchg
xchg
adc
leave
mov
pushf
pusha
pop
movsb
mov
and
add
sub
cmp
ss
mov
divb
xor
mov
mov
out
fildl
mov
fcoms
sbb
adc
stc
mov
hlt
jne
mov
mov
sub
add
xor
adc
mov
mov
imul
or
mov
mov
dec
sarl
cmp
clc
push
jb
mov
jmp
mov
out
inc
aaa
and
cmp
inc
cs
cmc
cmp
es
stos
jne
test
sub
cmp
popa
push
push
lds
mov
jnp
inc
jge
jbe
shlb
stc
mov
push
ja
jle
ljmp
ret
inc
pop
test
jl
adc
fistpll
xchg
andps
push
push
mov
push
push
fistps
mov
mov
cmp
jne
mov
mov
movsbl
xor
add
cmp
je
movl
lea
mov
mov
addl
mov
mov
xor
lea
mov
jmp
sub
sub
test
pop
cld
add
mov
icebp
jg
jle
aas
xchg
scas
push
scas
or
and
subb
xchg
test
add
stos
dec
cmp
xchg
bound
mov
das
push
cmc
sbb
xchg
shlb
stos
inc
shll
or
es
shlb
std
loop
pop
imul
popa
aas
push
pop
iret
lock
decl
and
xchg
xchg
cmp
and
into
js
sub
repz
in
rcrl
and
insl
in
push
and
cli
sbb
sbb
mov
imul
sbb
lea
mov
xor
aam
lahf
and
mov
jp
mov
pop
dec
mov
loope
frstor
sbb
xchg
adc
mov
ss
sti
arpl
mov
jae
ljmp
loop
lahf
push
out
xchg
shlb
sub
ds
xor
cmc
in
pop
inc
adcl
mov
pop
inc
push
lods
sti
lcall
scas
les
stos
or
fnsave
jmp
mov
vmptrst
leave
pop
mov
jge
div
mov
sub
pop
and
cmp
jbe
in
and
jp
outsl
push
xchg
fwait
rcrb
xor
xor
sub
push
movsl
pop
int
repnz
xchg
stos
scas
cmp
repnz
leave
add
jge
sahf
mov
and
and
mov
je
xchg
arpl
incl
jmp
mov
xor
jmp
ljmp
jo
fidivs
mov
inc
jle
icebp
jg
jle
jg
xchg
sbb
sbb
pop
xor
out
xchg
inc
xor
jecxz
xchg
mov
push
pop
dec
iret
adc
daa
rolb
cmpsl
pop
inc
or
into
stos
adc
insl
mov
inc
int3
xchg
inc
inc
leave
or
out
cld
inc
xchg
insl
inc
shl
cs
and
pop
lock
movsb
sbb
xchg
fs
cmpl
or
inc
or
maxps
and
pop
ret
mov
fidivs
sub
xchg
push
pop
jno
les
imul
dec
nop
mov
call
imul
mov
adcb
in
fidivrs
sahf
ret
test
cwtl
addb
cli
pop
mov
and
xlat
inc
adc
aaa
fmul
fcompl
mov
cmp
push
test
incb
mov
xchg
sub
and
xor
pop
ret
and
push
popf
cs
sbb
add
cmp
leave
arpl
ljmp
dec
push
in
inc
mov
repnz
test
adc
cmpsl
das
cmp
xlat
cmp
ror
pop
icebp
inc
cmpsl
inc
insb
jae
icebp
lret
dec
and
popa
jae
mov
cwtl
addb
popf
popa
mov
shrl
sahf
inc
xorl
mov
pop
leave
ret
push
mov
push
neg
movl
mov
adcl
mov
sbbl
add
xor
cmp
movl
jne
and
mov
xorl
mov
add
jmp
jo
sbbl
roll
push
sbb
add
jle
jl
jle
xchg
mov
cltd
dec
icebp
pop
std
test
xlat
adc
jo
mov
jb
sbb
xchg
xchg
add
test
xchg
sbbb
adc
jb
cs
inc
pop
out
bound
adc
mov
dec
inc
call
loope
aaa
cmp
mov
and
jbe
out
adc
xchg
loop
mov
adc
int3
out
es
and
mov
push
nop
pop
pop
jp
and
xchg
int3
aas
pop
data16
out
sub
je
in
ficoml
mov
pop
pushl
push
lea
ret
in
dec
and
xchg
test
dec
mov
mov
mov
inc
loop
fnop
outsl
std
hlt
mov
push
je
push
mov
cli
fisttpll
rolb
jl
movnti
sbb
roll
jns
insb
out
pop
rcl
xchg
call
scas
jb
rol
mov
or
lods
jle
mov
add
and
outsl
xchg
int3
ds
push
inc
pop
sub
out
rclb
js
in
aaa
shrb
inc
cmpsl
sbb
popa
jecxz
lods
test
aaa
cmpsl
pushf
mov
mov
stos
push
daa
mov
push
xchg
ret
enter
or
call
lret
popf
mov
dec
and
cmp
imul
pop
inc
lret
pushf
cmp
mov
mov
inc
fs
mov
cmpsb
pop
xchg
fwait
ret
lret
imul
xchg
pop
mov
incb
dec
mov
sub
and
fsubrs
mov
mov
xlat
sarl
xchg
and
xor
jg
subb
inc
addl
xlat
mov
inc
pusha
hlt
leave
mov
rcrl
ljmp
test
sbb
fstps
cmp
fst
push
imul
dec
cmp
sbb
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
call
jmp
mov
jmp
pop
pop
dec
pop
dec
xor
outsl
aam
out
in
and
jl
jle
aas
dec
push
pop
das
popa
add
gs
jbe
adc
fwait
sub
int
pop
js
jmp
mov
mov
nop/reserved
mov
and
into
dec
push
push
in
rclb
test
pop
cmpsl
ja
lods
les
inc
adc
lock
cli
sbb
pop
cmpsb
or
xorl
pop
xchg
sahf
pop
outsb
pop
lea
pop
dec
jae
mov
xchg
add
xchg
sub
adc
cwtl
inc
or
and
xchg
cmovno
inc
push
mov
loopne
addr16
sbb
out
arpl
and
adc
stos
sub
ja
shrb
or
aaa
jmp
or
inc
sbb
or
ret
mov
fwait
pop
cmp
fxch
push
sti
xlat
ja
add
leave
shl
inc
and
fsubrs
outsl
lahf
clc
incl
int
insb
imul
cmp
out
jo
push
orl
dec
scas
les
imul
inc
and
dec
cmpsb
cmp
rclb
jl
fs
fistpl
pushf
mov
mov
sub
push
xor
jg
or
push
push
fdivrl
mov
cmp
cmp
sub
loop
pushf
ret
stos
aaa
cmpl
mov
push
dec
inc
sbb
iret
roll
pop
cmp
scas
sbb
fiadds
mov
ja
rolb
and
hlt
outsb
jae
xor
push
imul
push
or
aad
imul
pop
ss
cmpsb
mov
cmc
pusha
push
mov
pop
xchg
jg
enter
scas
mov
js
cmp
clc
clc
daa
loop
sub
and
cmpsl
mov
and
cs
inc
int
push
add
and
jb
shlb
ret
pushf
pop
ret
jmp
xorb
adc
pop
pop
shrl
movsl
test
xor
jmp
push
fimuls
pop
popa
out
push
mov
test
lret
push
xor
push
mov
mov
add
jmp
mov
imul
fwait
mov
jle
jl
jle
ret
sbb
decb
shr
rorl
dec
popf
lock
xchg
cli
hlt
dec
fdivrs
int3
mov
icebp
or
inc
rcr
in
icebp
cmc
mov
xchg
jp
roll
sub
mov
pop
pop
ja
sti
in
fs
pop
arpl
and
cmp
into
mov
neg
sbb
pop
mov
mov
enter
xchg
mov
xchg
and
icebp
add
pop
xchg
clc
jb
into
push
push
scas
repnz
insl
jl
pusha
pop
lea
add
mov
cmpsl
and
inc
xorb
jo
cmp
mov
mov
push
inc
or
imul
out
cmp
mov
sbb
shrl
aas
push
xchg
mov
pop
or
mov
sahf
jl
not
emms
nop
in
push
and
mov
fsub
rclb
fwait
jo
or
and
daa
mov
mov
insl
mov
mov
fs
imul
fcmovbe
and
jp
sbb
sbb
adc
int3
popf
andb
inc
mov
mov
adc
js
filds
ljmp
loopne
sbb
or
lock
loop
lock
subb
pop
jg
push
outsl
mov
cmp
loop
mov
jne
stos
jg
mov
leave
cmp
jb
aas
leave
mov
mov
sub
in
mov
cmovne
mov
fstps
ss
xchg
rorl
in
add
ret
ret
mov
push
cld
in
shrb
outsl
test
clc
into
scas
push
popf
lods
lret
mov
sti
jno
sub
popa
pop
mov
icebp
cmp
in
mov
fdivrs
pop
test
xchg
dec
sbb
mov
nop
dec
insb
mov
cmpsb
pop
cs
lods
cmp
jb
adc
mov
sub
fstp
aaa
sub
insb
hlt
cmp
pop
je
mov
jmp
mov
xor
add
jmp
mov
xor
add
leave
ret
subb
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
add
and
add
sub
add
add
pop
sub
add
add
js
add
mov
add
sahf
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
add
inc
sub
add
add
sub
add
add
test
add
mov
add
sahf
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
add
cmp
add
add
pop
sub
add
add
jl
add
mov
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
es
add
dec
sub
add
push
add
je
add
test
add
sahf
sub
add
mov
sub
add
out
sub
add
or
add
push
add
xor
add
dec
add
pop
add
je
add
xchg
add
lcall
add
add
fisubrl
add
out
add
cli
add
push
das
add
push
das
add
cs
add
inc
das
add
pop
das
add
outsb
das
add
jle
add
lcall
add
das
add
aam
add
in
add
cli
das
add
or
add
push
xor
add
xor
add
xor
add
add
add
jb
add
jle
add
mov
add
mov
xor
add
add
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
dec
xor
add
add
xor
add
add
xchg
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
xor
add
add
push
xor
add
add
js
add
mov
add
lcall
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
cmp
add
push
xor
add
add
add
cwtl
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
dec
xor
add
add
add
add
je
add
xorb
xchg
xor
add
add
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
push
xor
add
sub
add
ss
add
dec
xor
add
pop
xor
add
je
add
jle
add
mov
add
mov
xor
add
mov
xor
add
fidivs
add
clc
xor
add
or
add
push
add
and
add
sub
add
xor
add
cmp
add
inc
add
push
add
pop
add
fs
outsb
add
xorb
add
add
add
add
fdivs
add
hlt
add
or
add
and
add
add
add
inc
aaa
add
pop
aaa
add
jo
add
jle
add
mov
add
cwtl
aaa
add
movsb
aaa
add
mov
add
les
add
into
aaa
add
fidivl
add
repnz
add
push
cmp
add
cmp
add
cmp
add
add
dec
cmp
add
add
add
add
stos
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
add
sub
add
cmp
add
inc
cmp
add
add
cmp
add
add
add
xchg
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
add
add
add
ljmp
add
add
add
add
add
sub
add
test
add
jp
add
add
add
add
add
add
add
jo
add
je
add
js
add
je
add
mov
add
add
push
aaa
inc
inc
js
fs
data16
jo
aas
inc
outsb
gs
je
push
je
je
inc
inc
pop
inc
push
inc
dec
push
inc
inc
dec
dec
push
inc
inc
cmp
add
pop
and
add
add
add
enter
add
add
adc
add
pop
xor
add
daa
add
mov
and
add
daa
add
pushf
add
pushf
and
add
add
add
add
add
aaa
add
push
and
add
sub
add
cmp
add
add
add
cmp
add
and
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
add
and
add
sub
add
add
pop
sub
add
add
js
add
mov
add
sahf
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
add
inc
sub
add
add
sub
add
add
test
add
mov
add
sahf
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
add
cmp
add
add
pop
sub
add
add
jl
add
mov
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
es
add
dec
sub
add
push
add
je
add
test
add
sahf
sub
add
mov
sub
add
out
sub
add
or
add
push
add
xor
add
dec
add
pop
add
je
add
xchg
add
lcall
add
add
fisubrl
add
out
add
cli
add
push
das
add
push
das
add
cs
add
inc
das
add
pop
das
add
outsb
das
add
jle
add
lcall
add
das
add
aam
add
in
add
cli
das
add
or
add
push
xor
add
xor
add
xor
add
add
add
jb
add
jle
add
mov
add
mov
xor
add
add
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
dec
xor
add
add
xor
add
add
xchg
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
xor
add
add
push
xor
add
add
js
add
mov
add
lcall
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
cmp
add
push
xor
add
add
add
cwtl
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
dec
xor
add
add
add
add
je
add
xorb
xchg
xor
add
add
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
push
xor
add
sub
add
ss
add
dec
xor
add
pop
xor
add
je
add
jle
add
mov
add
mov
xor
add
mov
xor
add
fidivs
add
clc
xor
add
or
add
push
add
and
add
sub
add
xor
add
cmp
add
inc
add
push
add
pop
add
fs
outsb
add
xorb
add
add
add
add
fdivs
add
hlt
add
or
add
and
add
add
add
inc
aaa
add
pop
aaa
add
jo
add
jle
add
mov
add
cwtl
aaa
add
movsb
aaa
add
mov
add
les
add
into
aaa
add
fidivl
add
repnz
add
push
cmp
add
cmp
add
cmp
add
add
dec
cmp
add
add
add
add
stos
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
add
sub
add
cmp
add
inc
cmp
add
add
cmp
add
add
add
xchg
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
add
add
add
add
add
add
imul
popa
jae
push
add
push
add
je
arpl
insb
insb
push
outsl
jae
add
fs
imul
add
imul
jb
add
push
gs
outsb
jne
gs
jne
je
je
insl
add
pop
add
je
jns
inc
outsl
insb
outsl
jb
add
mov
imul
jae
bound
push
push
imul
add
push
imul
popa
bound
add
add
outsb
dec
arpl
add
stos
add
fs
jne
jae
jb
add
jae
popa
je
inc
arpl
insb
gs
je
jb
add
inc
jb
popa
je
push
outsl
jo
jo
outsb
jne
add
popa
jb
jo
gs
add
mov
imul
imul
add
je
gs
popa
addr16
js
jb
dec
outsb
outsw
add
inc
insb
outsl
jae
inc
gs
je
jo
add
add
outsb
dec
outsb
jo
je
gs
je
jo
add
je
insl
push
popa
jb
insl
gs
jb
dec
outsb
outsw
inc
add
push
gs
outsb
jne
je
insl
dec
outsb
outsw
push
add
adc
gs
jae
inc
inc
add
popa
insb
imul
je
add
arpl
outsl
push
push
outsb
outsl
ja
add
insb
push
imul
imul
fs
gs
outsb
je
cmp
arpl
popa
imul
outsb
add
sahf
add
push
arpl
jo
jns
mov
dec
jae
push
jo
popa
dec
jne
gs
arpl
mov
inc
jb
ja
outsb
jne
popa
jb
mov
push
popa
bound
fs
gs
dec
jne
push
add
or
inc
gs
inc
inc
js
jno
push
gs
imul
outsb
add
xchg
add
je
outsl
jns
arpl
insb
gs
je
jb
popa
bound
push
add
je
jb
jo
add
sti
add
dec
outsb
push
arpl
push
push
jae
jb
bound
arpl
outsw
jb
popa
je
outsl
outsb
push
add
add
imul
jae
addr16
add
xor
jb
outsl
dec
gs
push
add
addb
outsb
data16
popa
je
push
arpl
add
ja
arpl
add
mov
inc
jb
ja
jb
insl
gs
outsl
outsb
je
outsl
insb
add
inc
add
je
gs
inc
insb
addr16
jb
jne
dec
je
insl
add
fs
outsb
jo
je
mov
inc
gs
jb
insl
gs
jb
arpl
mov
inc
gs
imul
outsl
arpl
add
outsl
addr16
outsl
js
popa
jb
insl
inc
add
add
imul
popa
jae
inc
add
dec
add
jo
inc
arpl
insb
gs
je
jb
popa
bound
add
inc
gs
jns
je
insl
dec
outsb
jne
mov
ja
je
je
push
add
loope
inc
imul
outsl
ja
add
inc
jb
popa
je
push
imul
inc
add
add
popa
bound
imul
cmp
inc
push
jo
jb
add
or
push
imul
je
gs
add
add
push
jae
push
imul
arpl
add
aad
dec
gs
popa
addr16
outsl
js
add
add
jae
popa
addr16
outsl
js
js
add
inc
gs
outsl
jo
imul
dec
add
je
outsb
jne
loop
inc
imul
outsl
ja
js
add
fs
outsb
jne
add
add
jae
popa
addr16
outsl
js
add
add
jne
insb
push
arpl
add
outsb
imul
add
inc
gs
imul
js
dec
outsb
addr16
push
add
mov
push
imul
ja
add
add
je
insb
imul
jb
les
dec
popa
jo
imul
arpl
add
fs
je
imul
dec
imul
jne
je
insl
add
xor
inc
gs
outsb
jne
je
insl
inc
outsl
jne
je
add
add
imul
arpl
dec
fs
jb
insl
inc
imul
jns
mov
dec
outsb
je
jb
arpl
arpl
add
je
outsl
jne
insb
gs
insb
imul
add
daa
add
je
gs
outsl
popa
jb
push
jns
gs
add
je
jae
outsb
arpl
jns
je
je
add
sub
inc
push
ja
jb
jne
push
add
popf
add
insb
outsl
addr16
outsl
js
popa
jb
insl
push
add
add
popa
jb
outsl
ja
jb
add
and
inc
push
dec
outsb
jne
add
imul
outsl
ja
jo
popa
je
add
mov
imul
movl
imul
gs
js
add
pop
add
je
arpl
jo
jns
add
add
je
insb
popa
jae
dec
outsl
outsb
addr16
add
add
jo
imul
imul
push
jb
outsb
jae
popa
je
inc
arpl
insb
gs
je
jb
add
inc
push
outsb
jne
popa
imul
add
push
gs
arpl
insb
insb
dec
outsb
outsw
add
outsl
ja
gs
outsl
jb
addr16
jne
fs
imul
lahf
add
jo
je
push
popa
addr16
add
sub
jb
gs
push
add
add
popa
insl
gs
arpl
add
data16
je
arpl
mov
dec
outsb
jbe
insb
imul
add
push
gs
outsl
jb
addr16
jne
fs
imul
add
je
arpl
gs
imul
add
inc
push
fwait
add
insb
outsl
popa
fs
gs
outsl
popa
jb
dec
popa
jns
jne
add
pushf
add
dec
arpl
imul
gs
outsb
jne
je
imul
add
fs
outsb
jne
add
add
imul
outsb
outsl
ja
gs
popa
addr16
add
cmp
push
gs
jne
jae
jb
add
je
gs
popa
addr16
add
inc
outsl
jb
addr16
jne
fs
imul
add
gs
je
inc
imul
jb
insl
push
add
stc
add
je
insb
popa
jae
dec
outsl
outsb
addr16
add
inc
push
xor
cs
insb
add
mov
push
gs
outsl
jbe
inc
imul
jns
add
add
dec
gs
jbe
inc
jb
je
arpl
push
arpl
outsb
add
pop
add
gs
imul
bound
gs
add
xchg
imul
jne
jb
add
mov
jo
jb
popa
je
add
or
gs
jne
jb
outsb
je
imul
jns
add
cmp
dec
jo
outsb
inc
jbe
outsb
je
add
dec
add
insb
outsb
inc
add
add
je
push
dec
outsl
arpl
add
push
outsb
push
gs
js
gs
imul
gs
add
je
popa
insb
inc
jb
add
inc
outsl
insl
jo
je
jb
popa
insl
gs
add
int
inc
jb
popa
je
inc
jbe
outsb
je
add
movsb
add
outsb
arpl
dec
outsl
add
outsl
add
outsb
insl
popa
jo
imul
insb
add
push
insb
gs
sti
add
je
popa
jae
inc
jb
outsl
jb
add
add
je
jb
arpl
fs
jae
add
addb
jb
gs
imul
rolb
inc
gs
popa
je
inc
outsl
jb
popa
je
add
outsl
add
je
imul
popa
je
add
jge
push
gs
data16
gs
imul
push
add
xchg
add
outsl
bound
push
gs
insb
insb
outsl
arpl
fildl
inc
jb
popa
je
dec
popa
imul
in
push
gs
outsl
insl
insl
push
imul
add
gs
jns
je
insl
push
imul
gs
jns
je
insl
inc
imul
jns
add
add
inc
popa
fs
gs
fs
je
add
mov
jo
insb
insb
outsl
arpl
and
inc
outsb
jne
push
gs
jne
arpl
jns
gs
add
push
add
fs
imul
js
add
mov
inc
outsl
insl
jo
jb
push
je
imul
add
gs
jb
outsl
jb
outsl
fs
out
inc
jb
popa
je
push
gs
outsl
je
push
push
add
popl
inc
insb
outsl
bound
inc
insb
popa
addr16
mov
popa
imul
insb
gs
bound
arpl
add
je
jne
bound
inc
outsl
jb
popa
je
add
xchg
add
imul
outsl
dec
jne
je
inc
jns
add
inc
gs
jns
je
insl
inc
gs
jne
je
dec
dec
popa
outsb
addr16
add
test
inc
gs
imul
imul
jns
add
jl
inc
fs
je
insl
inc
add
stos
add
gs
jb
outsl
insl
insl
inc
jb
outsl
jb
add
add
jae
jb
insl
jo
inc
add
add
gs
push
inc
outsl
outsb
je
js
add
repnz
gs
je
push
popa
imul
insl
gs
add
movb
je
arpl
imul
gs
je
inc
imul
imul
jae
jne
arpl
add
add
fs
imul
add
mov
inc
gs
inc
push
add
pop
add
imul
add
dec
inc
push
dec
inc
dec
xor
cs
insb
add
add
inc
push
inc
outsl
outsb
je
add
add
imul
add
add
je
jo
outsb
inc
imul
add
or
inc
imul
push
add
insl
fs
xor
cs
insb
add
cmc
add
outsl
outsb
je
outsl
insb
data16
add
gs
popa
jo
pop
je
jo
add
mov
pop
pop
insw
outsl
fs
insl
add
gs
add
pop
pop
arpl
insl
outsl
fs
mov
insl
bound
outsl
ja
jae
add
add
insl
jae
pop
gs
je
add
imul
add
outsb
imul
add
arpl
outsl
imul
xchg
add
popa
insb
outsb
jne
add
add
imul
ja
jae
popa
je
add
add
jb
jo
add
out
jae
jb
outsl
insb
insb
add
add
arpl
outsl
insl
bound
add
arpl
jb
jb
add
ljmp
jo
add
add
jb
push
add
ja
arpl
data16
insl
bound
gs
add
int3
add
outsl
jb
add
add
outsl
ja
outsl
ja
jb
add
insb
outsl
arpl
add
add
jns
je
insl
add
sub
ja
jae
bound
add
add
jae
jo
imul
pop
pop
arpl
inc
imul
jbe
jo
imul
add
jne
arpl
mov
insb
outsl
arpl
je
insl
add
data16
jne
push
ja
jae
push
add
js
je
pop
add
insb
insb
outsl
arpl
add
add
je
bound
add
jb
outsb
je
or
gs
add
cmp
arpl
outsl
jne
add
add
gs
je
add
bound
popa
jb
push
pop
jae
je
jae
jb
popa
je
gs
add
jb
pop
pop
addr16
popa
imul
enter
je
push
push
push
inc
push
push
cs
insb
add
push
add
imul
inc
outsl
outsb
je
outsl
insb
jae
js
add
dec
insl
popa
addr16
imul
fs
insl
popa
addr16
add
adc
inc
jb
popa
je
push
jb
jo
jb
jns
push
popa
addr16
add
dec
add
popa
addr16
imul
insb
popa
arpl
arpl
add
add
popa
addr16
imul
dec
arpl
push
imul
insl
popa
addr16
imul
dec
arpl
add
dec
inc
push
dec
xor
cs
insb
add
les
inc
outsb
jne
inc
outsl
outsb
je
popa
insl
imul
add
add
je
dec
inc
inc
outsl
insb
outsl
jb
popa
bound
add
add
je
gs
dec
jne
push
add
popa
je
dec
inc
push
add
bound
gs
outsb
add
mov
inc
gs
gs
inc
inc
add
inc
add
je
gs
arpl
popa
jo
add
add
je
imul
jae
movl
inc
inc
add
jne
inc
imul
addl
gs
gs
inc
js
outsb
je
outsl
imul
stos
add
gs
je
push
outsl
insb
jns
outsl
outsb
push
outsb
add
xchg
add
gs
je
inc
dec
inc
imul
add
gs
dec
bound
arpl
outsb
add
je
imul
add
gs
je
inc
jb
jae
dec
outsb
imul
add
je
gs
dec
gs
imul
inc
jb
popa
je
inc
imul
add
je
imul
outsb
jae
outsl
outsb
inc
js
add
popa
je
inc
outsl
outsb
je
outsb
imul
iret
add
insb
arpl
insb
gs
gs
add
jne
fs
arpl
add
gs
je
push
outsl
insb
imul
add
add
je
jne
jb
outsb
je
bound
arpl
stos
add
gs
je
push
arpl
outsb
add
add
je
bound
je
jb
arpl
add
add
insb
arpl
imul
add
gs
je
inc
outsl
outsb
je
add
add
jne
inc
outsl
outsb
je
push
add
dec
add
je
outsl
outsb
je
popa
je
add
gs
outsl
inc
js
add
gs
popa
insb
gs
gs
outsb
je
imul
gs
dec
jne
push
add
rolb
push
gs
imul
jae
movsb
add
je
insb
je
add
jae
je
imul
dec
jb
inc
js
xlat
add
insb
insb
push
outsb
add
popa
je
inc
insb
insb
imul
outsb
dec
outsb
imul
add
je
gs
inc
js
outsb
je
outsl
imul
push
gs
jp
push
popa
insb
gs
gs
add
je
jb
jae
dec
jb
inc
js
mov
jae
je
outsb
add
add
je
jne
inc
add
mov
insb
imul
je
add
inc
inc
dec
xor
cs
insb
add
push
popa
je
inc
imul
outsb
jae
outsl
outsb
inc
add
push
dec
dec
push
inc
push
dec
cs
insb
add
popa
jns
pop
je
push
imul
lcall
add
or
dec
ja
cmp
dec
jp
cmp
dec
ss
add
dec
ret
dec
push
push
pop
push
cmp
dec
ret
dec
cmp
dec
jp
cmp
dec
ss
imul
dec
push
bound
arpl
dec
jns
ret
dec
cmp
dec
dec
dec
xor
ret
dec
push
jb
jae
orl
js
jns
aas
dec
jbe
ret
dec
ds
dec
dec
cmp
dec
xor
dec
push
sbbb
setae
nop
js
jns
aas
dec
jbe
ret
dec
ds
dec
dec
cmp
dec
xor
dec
push
xchg
pop
xchg
bt
mov
aas
dec
push
dec
cmp
dec
push
dec
xor
ret
dec
push
mov
or
aas
dec
push
dec
cmp
dec
pop
dec
cmp
dec
xor
mov
ret
or
js
jns
aas
dec
push
dec
cmp
dec
dec
dec
xor
ret
dec
push
ret
psrlq
sarb
jns
aas
dec
push
dec
cmp
dec
dec
dec
xor
ret
dec
push
rcrb
rorl
jecxz
loopne
lock
aas
dec
insl
dec
ret
dec
cmp
dec
ret
dec
push
loop
jecxz
repz
js
jns
js
jns
ds
jg
ret
dec
cmp
jb
ds
dec
dec
cmp
dec
xor
add
adc
adc
jns
aas
dec
add
data16
pop
cmp
add
inc
add
ds
add
cmp
add
inc
add
cmp
add
mov
inc
add
cmp
inc
add
cmp
inc
add
cmp
mov
inc
add
ds
add
test
push
inc
add
or
inc
add
fisttpll
ss
add
inc
inc
cli
jne
in
incb
mov
cmp
add
xchg
pushf
clc
xor
pushf
clc
cmp
pushf
clc
cmp
xchg
pushf
clc
aas
xchg
pushf
clc
cmp
pushf
clc
cmp
pushf
clc
in
stc
add
cmp
add
pop
dec
imul
pushf
clc
sahf
jmp
add
push
cmp
pushf
or
jecxz
inc
add
adc
add
add
inc
add
imul
dec
add
add
add
inc
add
imul
add
dec
add
add
imul
jo
outsl
add
insl
add
add
insb
add
data16
imul
add
imul
outsl
add
add
push
add
add
add
add
inc
dec
dec
imul
inc
dec
dec
inc
dec
jne
dec
dec
push
imul
imul
inc
imul
insb
imul
dec
push
inc
outsl
imul
dec
dec
inc
dec
dec
sub
inc
inc
add
add
fs
addr16
add
dec
pop
dec
dec
dec
push
dec
pop
dec
push
dec
or
dec
add
pop
dec
pop
dec
pop
dec
or
dec
dec
dec
dec
dec
pop
dec
dec
dec
or
dec
add
dec
dec
pop
dec
push
dec
dec
dec
arpl
dec
pop
dec
ret
add
add
add
add
outsb
lea
outsb
lods
outsb
mov
outsb
in
outsb
std
outsb
or
outsb
cmp
outsb
jb
jae
jo
jno
jbe
ja
je
jne
mov
outsb
mov
outsb
mov
pop
jge
jge
jge
jns
mov
bound
add
mov
aaa
dec
jle
jno
mov
imul
inc
xlat
rcll
rcr
leave
xchg
fs
push
rcrl
shll
mov
inc
add
shll
and
inc
push
outsl
push
dec
cmp
add
in
adc
inc
inc
jae
inc
jae
popa
push
pop
pop
outsb
jbe
jns
push
imul
jns
inc
jo
data16
jp
insb
je
jns
popa
push
push
push
popa
push
push
push
dec
je
push
bound
push
arpl
inc
jne
push
outsl
push
inc
inc
push
imul
push
jb
add
js
popa
inc
push
insb
pop
ja
je
add
insb
jb
inc
push
push
inc
insb
add
jbe
push
push
dec
imul
add
in
jnp
jnp
cmc
lcall
and
push
cmp
xlat
add
add
add
mov
nopl
cmc
in
int
xchg
int3
mov
movsb
cmp
ret
sbb
sub
jmp
inc
or
cmp
pop
mov
ffreep
jge
push
js
or
xor
jp
pop
xor
or
xchg
add
push
aam
daa
icebp
sub
int
add
fists
xchg
adc
or
mov
mov
jle
or
les
jmp
jae
in
pop
jmp
pop
sbb
inc
pushf
in
sahf
aas
dec
jp
aas
loope
pop
inc
clc
mov
popa
pop
addr16
std
xchg
mov
nop
in
mov
call
xchg
mov
sbb
and
pushf
fisttpll
pusha
sahf
movsl
cli
sti
cmpsl
shlb
int3
push
loope
rolb
adc
mov
nop
mov
adc
daa
or
sub
scas
mov
lods
mov
lea
xchg
pop
ficoml
in
jle
lcall
sub
add
add
add
mov
ret
sub
xchg
mov
ret
addr16
push
repz
or
pop
lds
sti
test
adc
push
sti
adc
jge
outsl
addl
push
sub
jo
leave
data16
pop
xor
lret
mov
in
mov
pop
xchg
subb
nop
popa
imul
mov
adc
in
and
mov
xchg
dec
and
mov
mov
pushf
int3
and
ja
add
mov
shlb
jecxz
or
popf
out
out
movsb
or
inc
mov
add
xor
movsl
enter
out
out
ljmp
pushfw
lcall
ljmp
clc
les
or
inc
sub
andl
test
popa
addr16
lods
push
icebp
sti
mov
cmp
jne
inc
addr16
mov
add
adc
mov
mov
push
rolb
flds
add
add
add
decl
mov
push
cltd
idiv
sbbb
aaa
sub
xchg
mov
jno
mov
fistps
out
pop
jge
lcall
mov
inc
pop
pop
mov
ss
hlt
icebp
aad
ljmp
nop
rorb
popa
mov
mov
push
sub
ljmp
push
pop
test
or
jne
loop
in
notb
mulb
loopne
sbb
lret
fwait
cld
adc
push
adc
ljmp
mov
jne
out
inc
punpcklbw
cltd
test
sbb
xor
icebp
xor
out
and
push
rcrb
dec
dec
or
add
cmp
in
mov
arpl
dec
sub
popa
notl
dec
ja
cmp
cld
daa
fidivl
scas
cmp
inc
out
add
add
mov
roll
lahf
fisubs
fiaddl
add
add
add
std
push
std
test
mov
iret
xchg
cwtl
in
push
cmpsb
jo
and
das
mov
sub
adc
nop
push
scas
es
pop
clc
fadds
dec
outsl
cmpsl
sub
inc
xchg
add
pop
dec
jne
stos
inc
mov
xchg
sbb
or
xchg
or
push
adc
or
lret
pop
pop
xchg
iret
imul
divb
pop
push
shlb
cmp
aam
inc
cmp
in
push
dec
pop
jae
inc
jge
mov
cli
adc
imul
xor
mov
add
loop
mov
imul
js
fistps
in
jle
inc
rcrl
push
ds
stos
hlt
daa
pushf
ss
adc
jl
subb
mov
cmpsb
shll
jno
sahf
aaa
jecxz
cltd
jp
lcall
push
jp
addr16
movsb
cmpsb
data16
xchg
mov
add
pop
jae
or
pop
dec
or
lods
jg
fildl
add
add
add
xchg
hlt
cmpsb
jnp
mov
cmpsl
pop
pusha
mov
xchg
push
push
fildll
mov
outsb
out
into
rol
cmp
adc
mov
pop
mov
add
mov
dec
cmp
jg
inc
sub
pop
imul
gs
dec
mov
sub
dec
cli
jecxz
aaa
lret
loop
sbb
flds
das
pop
test
jns
ljmp
mov
data16
mov
shr
jp
test
arpl
sar
stos
call
push
inc
lock
pop
mov
int
test
mov
into
ljmp
fsubrl
adc
in
adc
inc
enter
hlt
in
arpl
loop
xchg
enter
mov
int3
jae
mov
mov
push
xor
rorb
lcall
add
add
jg
cmc
insl
cmc
out
lcall
enter
xchg
loope
faddl
add
add
add
cs
inc
lods
pop
lods
add
shll
xchg
ficoms
and
int
push
int
or
ja
std
mov
in
adc
fmull
je
repnz
ror
fcomps
mov
lods
jbe
pop
pop
stos
mov
cmc
cmp
mov
pop
cmc
push
add
or
jne
nop
dec
ljmp
sub
inc
fcomi
push
jne
inc
push
xchg
arpl
jae
test
and
outsl
fisttpll
into
push
roll
xchg
sti
mov
sub
push
fbld
into
rcpps
push
out
push
mov
popf
in
cmp
cmp
int
dec
mov
xchg
push
push
dec
clc
sub
repnz
jmp
daa
and
popa
push
test
cmp
fldl
jae
mov
ljmp
and
and
add
xchg
push
inc
insb
imul
add
add
outsl
jle
aas
mov
cmp
fldl
add
add
add
repz
jl
daa
inc
ss
xor
call
push
enter
es
mov
dec
stos
leave
loope
test
mov
stos
sub
mov
loope
sub
cmp
xchg
cmp
pop
jb
sub
xchg
pop
icebp
and
shlb
cmp
test
cmpsb
insb
xchg
out
addr16
xor
mov
xchg
iret
cwtl
inc
cs
sti
pop
popl
mov
out
ja
testb
scas
push
sbb
pop
int
add
mov
xor
mov
icebp
cmp
shl
popf
fldt
scas
sbb
mov
cld
das
sbb
mov
add
bts
sbb
pop
sbb
dec
fimull
mov
and
mov
jns
or
insb
xor
jle
fildll
inc
mov
js
xor
std
aam
jecxz
xor
in
sbbb
ficoms
out
fadds
or
and
scas
sti
jle
pop
push
pop
cld
xchg
fiadds
add
add
add
bound
push
mov
ja
add
sbb
aas
pop
testb
pop
icebp
test
js
imull
jne
into
rcrb
xor
aam
adc
mov
and
fsub
cli
xchg
jae
test
lcall
sbb
test
adc
pop
lahf
js
pop
push
jl
inc
dec
pop
mov
std
std
jle
mov
xor
mov
daa
rolb
pop
cs
outsb
and
aas
enter
or
fmulp
lret
imul
add
sub
adc
sub
cmp
arpl
loopne
fdivrl
sub
push
cmp
mov
aad
lea
lock
jno
rorb
fldcw
push
mov
xor
push
push
or
and
jecxz
cmova
lods
clc
in
mov
add
add
negl
arpl
icebp
shll
filds
add
add
add
das
bound
jne
ljmp
loopne
movsl
leave
shlb
hlt
xchg
cwtl
out
jl
cld
xchg
sbb
mov
in
dec
sub
fiaddl
add
fwait
sbb
test
loope
mov
out
xchg
xchg
sbb
xchg
add
daa
fwait
movsl
mov
jmp
jo
fnstenv
fdivrl
mov
jb
jg
inc
repnz
lret
mov
addb
mov
lret
adc
fxch
cmp
xchg
loope
ret
pop
mov
lock
inc
mov
leave
insb
data16
pushf
xchg
das
adc
pop
out
stos
test
lods
in
jb
xchg
lods
cmp
incb
adc
movsl
mov
dec
dec
dec
push
nop
aaa
mov
inc
fstl
imul
negb
nop
ja
and
scas
sahf
lods
es
testl
pop
jnp
xor
push
jl
jle
insb
out
cs
test
call
add
add
popa
sbb
cld
cmc
arpl
ret
pop
rep
xchg
xchg
in
mov
fstp
adc
shl
repnz
xor
stos
mull
cmp
pusha
negb
std
cmp
loop
iret
jne
inc
lret
adc
jmp
or
clc
cmp
rcll
popf
dec
movsb
sub
fmulp
inc
outsb
add
lods
adc
roll
jg
pop
add
add
fs
add
gs
push
push
jo
test
dec
ds
lret
orl
int
pop
je
in
and
jo
sbbl
jnp
cmpb
scas
pop
mov
mov
xor
jmp
jo
mov
and
xchg
mov
cmpsb
inc
mov
add
push
mov
pop
cmp
jne
sub
rorl
xor
shrb
add
add
fwait
mov
in
xor
adc
loopew
add
add
add
into
int
sub
adc
push
adc
sub
nop
sub
clc
inc
in
cmp
mov
and
mov
mov
in
in
pop
out
pop
inc
mov
sub
sub
xor
pcmpgtw
adc
fstps
es
push
or
fst
push
out
inc
mov
jno
out
fmuls
iret
inc
jb
sbb
in
test
ja
inc
or
rcll
and
xchg
and
mov
into
jnp
jle
jbe
sub
dec
cltd
movsb
iret
into
fistpll
or
pop
arpl
out
rol
dec
mov
push
jne
sti
cmpsl
in
sub
jecxz
hlt
xor
cltd
sbb
es
dec
push
dec
sti
shl
sbb
ds
jb
outsb
mov
test
or
pop
xchg
in
lret
fsubrl
sbb
xor
sbb
pop
jp
imul
add
add
data16
jne
mov
lcall
add
add
add
xchg
mov
and
enter
mov
inc
int3
push
fists
cld
cmpsb
inc
sub
movsb
mov
loopne
addr16
imul
dec
or
xlat
mov
outsl
cmp
xor
inc
mov
shrb
or
mov
inc
test
xor
loop
fcomp
jo
popa
aam
inc
mov
mov
jnp
adc
sub
dec
xlat
fwait
inc
sub
nop
sub
out
cld
xchg
ret
xchg
andb
aam
adc
xchg
mulb
inc
mov
fsts
jmp
xchg
lea
lret
sbb
out
adc
mov
mov
pusha
lret
push
mov
or
xor
sbb
fdivr
incl
scas
sbb
xor
dec
fdivrs
mov
cmp
filds
push
int3
adc
stc
lret
mov
cmp
iret
push
inc
xchg
filds
sbb
jnp
add
jnp
sti
xchg
lahf
mov
push
js
jecxz
add
add
add
aam
pop
int3
push
add
mov
call
push
loope
cmp
mov
cmp
xor
inc
push
stos
sub
lret
mov
fisttpl
test
pop
inc
loope
add
cmp
push
movsl
cs
les
jecxz
out
fwait
test
sti
inc
adc
push
cmc
in
sub
outsb
xchg
adc
xlat
dec
negb
push
or
or
xchg
out
mov
lret
mov
aam
or
mov
les
jmp
add
push
outsb
mov
xor
enter
cmp
mov
cmp
imul
mov
xchg
jo
xor
jecxz
dec
les
push
sbb
add
call
sub
fcmovu
push
pop
pop
xchg
adc
cwtl
movsl
push
jmp
add
jl
dec
adc
outsl
sub
mov
pop
popf
movsl
jno
inc
data16
add
sub
pop
sarl
mov
sahf
addr16
add
add
add
fadd
in
sub
test
adc
orl
pop
and
mov
cwtl
cmp
push
add
imul
xchg
sub
out
push
mov
jb
jge
icebp
sub
insl
push
adc
xchg
dec
es
les
cmp
aaa
test
cmp
push
imull
xchg
push
pushf
cmp
mov
or
xlat
fwait
xor
cmp
addr16
and
jb
mov
inc
and
push
loope
cmp
iret
cmpsl
arpl
sub
pop
mov
test
inc
loopne
jbe
push
fcoml
push
jecxz
mov
mov
lods
xor
in
dec
xlat
into
push
into
ja
adc
or
lret
aas
pop
pop
dec
dec
jae
mov
pop
test
or
jg
bound
mov
mov
push
xchg
shlb
and
pop
xchg
insl
lock
std
repz
push
inc
addr16
add
add
add
aad
cmp
fwait
or
jecxz
jnp
movsl
pop
push
add
xor
or
aaa
xchg
ss
cmp
add
shll
enter
mov
addr16
popa
lea
cwtl
and
mov
es
ja
cwtl
sub
add
mov
inc
sub
stos
mov
cmp
fs
and
aad
into
inc
repnz
out
in
add
mov
repz
xchg
inc
test
jp
xor
add
icebp
outsb
mov
jns
add
or
ljmp
mov
cmp
cwtl
xchg
cmpsl
rcll
nop
xor
fwait
ror
lock
pop
cli
mov
mov
push
mov
jle
subl
data16
mov
es
in
fcoml
cmp
xlat
jmp
imul
sbb
scas
jbe
sbb
add
add
add
lock
cmp
arpl
je
pushf
ljmp
add
add
jmp
mov
ficomps
leave
mov
cmp
dec
mov
add
fs
sahf
cmp
mov
ffree
or
and
mov
adc
adc
daa
sub
and
push
test
xor
int3
dec
xor
movsb
lcall
xchg
inc
push
aad
jle
push
pop
mov
sub
std
push
pop
fldl
xchg
pop
and
push
movsl
cltd
cltd
jl
inc
xor
jl
lods
cwtl
sbb
xchg
push
pop
jl
jae
inc
nop
jno
cwtl
outsl
outsb
cltd
rorb
inc
pop
add
rclb
sub
pop
inc
xchg
das
orb
cmp
dec
outsb
leave
loope
dec
jmp
pushf
push
inc
jmp
rol
jg
fidivrs
jne
outsb
sbb
pushf
ds
popa
hlt
mov
aas
cmp
in
movsl
jge
adc
inc
mov
jl
adc
or
sbb
add
add
mov
mov
sbb
mov
out
add
add
add
iret
dec
das
sbbl
subb
fwait
or
mov
xchg
aaa
imul
inc
out
mov
push
ja
sbb
pop
int
lret
divb
leave
repz
mov
cmp
inc
scas
movsl
jno
sub
xchg
ds
jg
mov
pop
stos
jnp
adc
aad
inc
pop
sbb
jno
sbb
leave
pop
add
add
cmp
adc
mov
push
in
xor
scas
sbbl
mov
lods
xchg
xchg
add
in
mov
sbb
push
int3
mov
mov
sub
popf
inc
adc
mov
dec
and
nop
stos
mov
shl
sub
jecxz
test
mov
mov
ss
mov
in
into
icebp
icebp
icebp
sub
test
xchg
sub
mov
mov
out
mov
lret
xchg
in
mov
incl
shrl
aas
out
call
add
and
lcall
add
imul
outsb
sbb
loope
add
hlt
push
lods
mov
and
add
mov
insl
out
jno
mov
je
jno
outsl
int3
cld
xchg
add
xlat
inc
sbb
pop
shll
mov
loopne
jb
lret
int
jnp
inc
jns
mov
adc
movsl
adc
lods
add
call
inc
push
jl
adc
mov
lds
xchg
push
dec
sbb
loop
xor
imul
pop
clc
stc
cwtl
sahf
mov
das
jg
dec
nop
in
pop
push
fsub
push
jns
stos
xchg
dec
mulb
lahf
insb
push
fcoml
mov
jne
push
andl
cmp
fidivrl
shlb
mov
movsl
fwait
imul
xor
xchg
out
daa
inc
mov
or
cmpsb
pop
push
mov
add
adc
daa
mov
mov
cmpsb
mov
add
sub
in
negl
sub
movsb
rcr
stos
frstor
add
add
add
sub
or
add
mov
mov
add
insl
std
or
nop
push
xchg
shl
enter
inc
aas
cmpsl
xor
insb
fcmovnbe
scas
push
jb
jne
loope
adcl
push
mov
cs
rcll
add
dec
arpl
negb
icebp
mov
xchg
cmp
and
test
push
scas
insl
push
lret
lret
addb
cmp
mov
outsl
inc
fidivs
imul
lods
dec
mov
cmp
fwait
push
or
insb
dec
pop
leave
addr16
nop
cs
jne
jle
or
inc
jbe
andb
leave
cld
sub
sub
inc
and
inc
pop
add
mov
xchg
test
cmp
mov
pop
pop
pushf
insl
imul
in
cli
lahf
cld
xorl
test
push
ljmp
out
stos
popa
xor
add
add
add
mov
stc
dec
push
fmul
mov
add
add
add
insl
cmc
out
fldenv
pop
shlb
bound
lods
pop
mov
lcall
sahf
popf
jae
loope
jmp
dec
push
jo
or
push
xor
testb
loop
xor
and
movsl
or
ja
popa
add
add
es
sub
jo
dec
jmp
fstp
cmp
popf
and
jno
repz
lock
adc
fisubs
push
adc
lds
dec
ljmp
sti
insl
dec
xchg
pop
cld
cmp
scas
cltd
or
or
hlt
sbb
andb
mov
mov
pop
xor
pop
fsubrp
adc
outsb
mov
daa
fs
or
and
fs
adc
push
cmp
mov
aad
jno
mov
ljmp
cmp
mov
fdivrl
cwtl
out
cs
cmp
mov
push
push
push
mov
and
add
add
add
sbb
sti
pop
out
push
sub
cmpsb
mov
and
adc
xor
mov
neg
mov
mov
daa
add
cmpsb
xchg
xchg
aas
hlt
push
pop
mov
inc
icebp
fcom
roll
or
jmp
xchg
aas
xchg
sbb
in
sbb
mov
lret
mov
push
push
lea
sbb
in
mov
ror
jecxz
orb
mov
cmpsl
repz
adc
jle
or
scas
mov
jle
insl
stos
xchg
ljmp
pop
or
push
fsubl
dec
push
push
bound
dec
and
xor
jne
jo,pn
fistpll
fwait
xchg
xor
fldpi
lods
cmp
test
cmp
pushf
cmpsb
nop
gs
pushf
mov
and
cmp
jbe
add
adc
pop
idivl
push
jge
push
pop
adc
add
add
repnz
add
pop
lcall
les
dec
xchg
addr16
add
add
add
aaa
je
push
and
xor
jne
xchg
jge,pt
pop
sbb
xchg
xorb
push
lock
adc
pop
dec
shl
pop
pop
pop
adc
cwtl
add
sbb
sbb
sahf
adc
and
cmp
sbb
push
cvtpi2ps
test
jmp
xchg
loope
loopne
push
icebp
faddl
js
sar
stos
pop
out
cmp
sub
xor
push
and
or
aas
divb
lods
dec
sbb
stos
pop
popf
mov
xlat
mov
sbb
jbe
iret
aam
mov
scas
lret
cmpsb
push
pop
push
mov
arpl
sub
mov
rclb
xchg
fldenv
cwtl
cmp
ja
push
jbe
out
popf
inc
xor
xchg
mov
and
ficoml
sub
cmp
hlt
add
ss
loopne
mov
add
add
mov
push
decl
pusha
movsb
daa
push
addr16
add
add
add
imul
neg
fsubrl
pop
fmull
icebp
hlt
lret
icebp
in
popa
mov
sahf
out
dec
adc
cmpsb
push
pusha
or
stos
jno
loopne
jg
adc
nop
sahf
sbb
sub
cwtl
int3
inc
hlt
mov
aam
sub
jmp
popa
mov
xchg
jmp
pushf
lret
rolb
sbb
clc
mov
and
xor
xchg
fstpt
gs
movsb
push
and
lods
xor
dec
and
pop
xor
push
cld
fisttpl
outsb
xchg
cltd
and
mov
sti
push
cmc
mov
jae
add
sti
mov
adc
div
scas
sbb
fdivr
and
dec
add
dec
bound
aas
jbe
cwtl
loope
jb
dec
dec
mov
and
pop
pop
daa
ds
cs
bound
andl
into
mov
lret
mov
lods
adc
jmp
and
cmp
sti
fsubp
inc
push
sub
pop
addr16
add
add
add
lock
push
loop
jnp,pn
sub
les
or
xlat
jne
cmp
test
xchg
dec
nop
pop
sti
gs
out
xor
sbb
mov
add
cli
mov
sub
jecxz
or
movsl
mov
ret
or
sub
les
jns
test
not
enter
or
jge
mov
ljmp
sarl
and
test
and
xchg
xor
mov
mov
xchg
imul
mov
xchg
test
inc
and
fldt
push
xchg
xor
fldt
enter
mov
jge
cmpsb
dec
mov
sub
jl
lret
mov
fxch
sbbl
dec
into
pop
pop
xchg
lock
loopne
shlb
lea
jl
movsb
mov
mov
jae
movsl
jbe
out
inc
add
add
add
outsb
xor
mov
lcall
out
add
add
add
push
repnz
xchg
pop
aam
sub
ret
mov
pop
popf
push
jl
scas
mov
imul
pop
jo
arpl
xor
stos
daa
push
or
sub
aad
insl
in
cmp
sbb
imul
gs
and
pop
pop
and
in
adc
sbb
jmp
popf
mov
js
mov
inc
lret
mov
ds
scas
mov
xlat
cmp
jmp
adc
mov
xor
push
adc
inc
ss
dec
insl
scas
push
loop
or
imul
mov
cwtl
add
cmc
sub
and
test
and
movsb
nop
xor
popf
jecxz
mov
xchg
shll
lret
mov
cmpsl
test
lods
ljmp
insb
jge
pop
jb
inc
and
push
add
add
inc
ror
lock
jnp
xor
xchg
sbb
lock
add
add
lea
pop
ret
xor
sub
add
stos
lret
jp
and
in
int
sbb
jge
mov
mov
jle
ds
cmove
sub
enter
mov
movsb
shll
cltd
add
inc
inc
push
mov
mov
int
aad
lret
and
sub
sub
cmp
xchg
inc
or
jg
aas
repz
mov
mov
xor
xorl
xchg
daa
jecxz
insl
sub
lret
insb
jg
aas
and
gs
sti
imul
cmp
leave
rcl
mov
ss
test
push
pusha
push
aam
imul
or
iret
addb
mov
mov
dec
pop
ficomps
mov
ss
fldl
jmp
popa
mov
lds
out
sahf
test
and
repz
fisubs
mov
add
add
add
aaa
lea
repz
add
shlb
add
out
gs
fcoms
lret
mov
sbb
xchg
jb
repz
test
or
mov
adc
cmpsb
lock
cmp
sbb
sub
pcmpeqb
pop
test
mov
xor
jnp
ljmp
rclb
sub
dec
bound
xor
loope
adc
jo
mov
pop
jno
jbe
call
hlt
int3
push
push
roll
mov
xor
lds
and
push
pop
hlt
addr16
mov
sahf
push
negl
popa
dec
inc
ljmp
iret
imulb
orb
sub
pop
push
push
aas
dec
jle
cmpsl
or
or
aaa
leave
jg
adc
das
out
lcall
out
fildll
rol
out
sbb
inc
int3
imul
fs
cltd
push
cwtl
int
mov
dec
jg
xlat
lock
mov
aam
imul
mov
movsl
cmp
in
aas
pop
nop
js
pop
int
dec
push
mov
pop
mov
out
pop
xchg
fcompl
adc
test
mov
call
aaa
lds
iret
out
pop
daa
mov
sahf
mov
imul
jecxz
sbb
nop
cmp
lock
std
sub
outsl
es
add
pusha
push
pop
test
mov
cmp
sbb
ja
cmp
pop
pop
and
xchg
add
mov
or
into
push
push
inc
inc
cmp
and
and
sahf
pop
icebp
and
out
jmp
jecxz
repnz
dec
xchg
xor
and
ja
shrb
dec
pop
fsts
xchg
sbb
mov
loop
add
sbb
fadd
cmp
lcall
shrl
cmc
scas
sub
mov
repz
add
add
jle
xor
mov
sbb
mov
or
dec
rcr
cvttps2pi
bound
jle
cmp
sub
pop
sbb
test
out
mov
loopne
mov
cmp
fbstp
cltd
mov
pop
insl
jo
testb
cmp
or
sbb
jne
dec
popf
jnp
xor
sahf
sbb
and
push
orl
sub
aaa
int3
lock
sbb
out
popa
mov
xlat
fcomi
or
dec
xchg
fnstcw
in
or
lds
cmp
mov
mov
hlt
jmp
cmpb
loopne
push
inc
xor
ds
arpl
lods
leave
cmp
mov
addr16
mov
int3
or
and
push
mov
cli
fstps
mov
fistl
xor
cmpsb
iret
lea
subb
add
add
pusha
rorb
cmpsb
mov
fwait
jb
hlt
add
add
add
xchg
and
movsb
mov
shll
jmp
jb
sahf
mov
leave
pop
andl
les
ret
fisubs
sahf
push
xor
cmc
stc
nop
or
jmp
fcompl
enter
sahf
rcrl
dec
loop
and
insl
xor
mov
cmp
jbe
std
push
push
icebp
mov
xchg
orb
sbb
inc
std
lds
stos
idivb
mov
adcl
ret
test
int
mov
inc
ljmp
ljmp
xor
dec
mov
lret
push
test
arpl
jecxz
jmp
pop
rorb
add
cmpsb
dec
popf
into
les
dec
iret
mov
add
inc
rcrl
stos
sbb
adc
rorb
gs
sub
sub
inc
pop
mov
mov
shll
lods
mov
jecxz
push
testl
mov
fisubl
add
add
add
or
sbb
lcall
adc
les
sub
push
xor
mov
sub
in
xor
repnz
gs
pop
lahf
mull
mov
sbb
mov
or
jmp
xchg
pop
cltd
insb
test
xchg
pop
jmp
add
cmp
repz
jns
sub
test
scas
pusha
scas
sub
in
and
bound
or
push
adc
pop
mov
push
push
cmp
add
test
push
clc
pop
jge
xor
sub
fwait
jle
ja
mov
xlat
aad
inc
mov
stc
xor
loop
mov
xchg
in
mov
aas
outsl
add
mov
icebp
fldcw
mov
sahf
repz
movsb
imul
inc
jle
fldcw
mov
add
add
xchg
mov
mov
pop
das
ja
jbe
testb
add
add
xor
xlat
push
inc
int3
std
outsl
adc
sub
aaa
push
jno
sbb
xor
dec
fstpl
sub
xor
bnd
pop
int3
xchg
mov
addb
push
shlb
jl
sbb
aam
or
mov
lock
stos
out
or
movsl
int3
bnd
repz
mov
fstpl
pop
mov
dec
ficompl
sub
stos
ret
negb
std
aam
add
jg
pop
push
stos
push
mov
into
mov
inc
sub
es
jne
and
jbe
shlb
imul
jae
inc
and
outsl
test
enter
push
add
mov
shrb
sbb
pop
adc
ds
cwtl
les
xor
gs
je
loope
push
pop
xchg
lea
jmp
clc
imul
mov
xchg
jne
aas
jb
inc
cwtl
sub
pop
scas
addr16
add
mov
fucomi
xor
daa
pop
testl
add
inc
fs
adc
arpl
sbb
sbb
cmpb
sub
mov
fwait
cmc
or
inc
call
push
adc
and
addr16
inc
add
pop
lods
cli
and
and
fs
mov
into
and
mov
mov
loopne
ret
and
dec
cmp
fwait
out
stc
pop
fistpl
jbe
aaa
pop
sub
mov
pop
dec
add
notl
cmp
and
xchg
pop
inc
sub
sbb
in
xor
or
and
ja
dec
in
pusha
js
xchg
or
push
mov
sbb
pop
push
cs
and
js
adc
test
mov
ds
xchg
mov
in
pop
es
jge
add
test
filds
sar
or
pop
fdivs
xlat
add
cltd
hlt
sub
nop
fcmovne
cmc
add
jbe
push
inc
pop
jns
aas
loopne
sub
test
addr16
add
add
add
scas
jge
sbb
jle
js
and
push
add
ljmp
and
aad
pop
scas
repnz
sub
ja
mov
and
xchg
add
pop
inc
adc
loope
pusha
mov
xchg
adc
cmp
insb
icebp
icebp
lock
push
lret
sub
sbb
push
lods
mov
push
insb
dec
push
mov
mov
bt
in
cwtl
mov
ss
daa
xchg
inc
or
cld
roll
shl
int3
pop
cmpsb
push
ds
cmpl
mov
out
add
lds
or
sbb
addr16
xor
mov
mov
inc
sbb
fstl
xchg
mov
jnp
pop
iret
add
push
into
sti
insb
jnp
or
clc
insl
lods
ret
and
lret
mov
add
xchg
lret
stos
mov
mov
sti
rcl
jge
add
add
jnp
mov
cmc
jno
mov
add
add
lcall
cltd
inc
mov
cmp
pop
lock
pop
dec
lock
jne
push
jno
jle
scas
sbb
sti
clc
mov
aaa
add
xor
orl
popa
out
ficoml
es
ljmp
jnp
in
pop
inc
and
dec
aad
jmp
add
jnp
xor
mov
jns
or
nop
orl
jl
add
stos
mov
sbb
push
xchg
mov
insl
shrl
mov
arpl
push
pusha
in
sbb
movsl
xchg
ret
mov
inc
jns
cmp
and
xchg
push
loopne
fisubs
pop
int3
andl
mov
sbb
pop
push
mov
pop
jecxz
aad
mov
sbb
dec
lock
sub
sub
movsb
adc
cmp
push
jbe
jg
and
sahf
mov
xor
shlb
or
lret
add
imul
gs
cli
add
add
add
inc
and
cltd
inc
mov
outsl
sub
add
imul
sbb
or
push
xor
or
xor
lret
jae
lods
mov
mov
push
xor
ret
push
rcll
inc
add
inc
out
mov
adc
call
bound
fsubl
push
fst
outsb
pushf
jb
cmp
aas
add
in
ljmp
mov
inc
jmp
jmp
and
insl
cmp
out
test
push
or
xchg
pop
mov
jmp
inc
push
push
ja
ror
daa
loop
or
les
cmp
push
ss
sub
sub
xlat
or
aaa
adc
pop
pusha
lcall
fwait
gs
add
jb
inc
inc
das
mov
cli
cwtl
pushl
ja
fs
sub
cmp
add
add
fdiv
mov
mov
clc
dec
addr16
add
add
add
push
jns
pop
pushf
arpl
call
pop
inc
jle
popa
jge
cwtl
mov
shrl
movsl
in
insb
cmp
ds
dec
cmpsb
xchg
mov
arpl
daa
ret
out
shlb
lods
pop
mov
sbb
ljmp
pop
push
nop
loope
push
ss
addl
lcall
push
inc
cmp
xchg
cmc
imul
imul
cmp
jne
push
push
subb
jp
xor
cmp
mov
mov
push
xlat
enter
xorb
test
loope
adc
jbe
popa
inc
pop
xor
imul
in
cltd
pop
movsl
jle
xchg
jmp
mov
movsl
movsl
lcall
rcl
or
inc
popf
mov
rcrl
lock
pop
gs
daa
cmp
push
cs
hlt
aaa
sbbl
popf
cltd
mov
fwait
adc
xchg
rcrb
cmpsb
fmuls
add
add
mov
fisubrl
cld
add
add
add
pop
push
in
sbb
insb
pop
cmpsb
mov
jle
sarl
or
push
movsl
sub
test
jp
lret
leave
push
xchg
mov
mov
adc
lahf
and
cmp
cmpsl
mov
insb
dec
dec
xlat
jno
subl
mov
xor
push
sbb
cmpsb
pop
pop
dec
xchg
jmp
jne
cltd
or
lds
into
rcl
bound
sti
wbinvd
packsswb
cmp
and
les
test
in
hlt
dec
stc
cmpsb
imul
xor
mov
mov
add
jp
pop
lock
dec
or
sub
aad
and
mov
dec
pop
mov
fs
mov
sbb
xchg
shlb
test
scas
or
fidivrl
outsl
popa
cmp
jge
jnp
notb
xor
cld
punpckldq
adc
jmp
imul
lahf
repnz
sbb
std
add
add
add
repz
cld
rclb
pushf
arpl
test
jp
dec
cmpsb
adc
inc
clc
stos
cmpsl
xchg
vandnpd
fst
sub
pop
push
mov
out
cmc
push
sub
shlb
jno
adc
push
xlat
push
pusha
xchg
jecxz
in
jo
stos
sub
pushf
in
inc
adc
movl
gs
dec
cltd
push
push
mov
xor
addr16
add
int3
repz
imul
ljmp
cmpsb
icebp
or
loope
pop
xlat
mulb
fsubr
dec
mov
mov
or
push
insb
aam
adc
sbb
and
mov
and
xor
aam
ja
or
xor
sti
xor
test
es
imul
iret
dec
lcall
popa
cvtps2pi
pop
sbb
pop
or
and
push
xor
pop
inc
pop
lods
pop
cli
cmc
cmpsb
lret
and
and
incb
add
add
add
scas
inc
les
push
xchg
pmullw
dec
adc
loop
fs
lds
and
cli
js
int3
fs
cmp
repz
lds
and
test
clc
subl
cltd
push
xchg
jae
xchg
pop
sub
fnstcw
pop
cmp
pop
or
fildll
fwait
dec
dec
aad
mov
cltd
xchg
lea
sbb
push
es
mov
pop
mov
push
fstps
jne
dec
push
add
dec
jne
add
jge
jle
repz
jbe
test
xor
sub
dec
ret
mov
jmp
pop
popa
fsubr
scas
xchg
mov
push
or
xor
loopne
sbb
sahf
pusha
stos
or
orl
lahf
ret
lods
mov
mov
in
jmp
es
or
or
mov
dec
cmpl
fcmovbe
sbb
add
add
stos
cltd
inc
popf
jae
out
xor
incl
add
add
add
jbe
adc
dec
push
fldenv
pusha
jmp
aam
int3
and
or
inc
mov
sub
int
pop
fists
mov
test
push
jno
push
lea
shll
ret
inc
je,pt
pop
loope
cmpsl
jge
inc
into
mov
lret
mov
xchg
and
push
stc
or
mov
or
in
pushf
insb
jno
in
xchg
push
pop
inc
jo
jle
xchg
sub
jo
adc
xchg
xlat
push
mov
outsl
outsl
jle
or
int3
sub
pushf
in
xor
dec
out
xor
inc
lea
aaa
push
or
sub
or
add
outsb
push
inc
dec
and
sub
loope
cmpsb
mov
mov
or
adc
sub
int
pop
mov
sub
add
mov
nop
test
aam
int
aaa
das
aam
jge
sub
add
add
add
xchg
ret
jno
popa
in
cwtl
cld
ljmp
or
sbb
mov
lret
dec
ds
es
sbb
mov
rcr
andnps
and
pusha
imul
mov
js
popl
test
leave
repz
stos
xchg
or
or
ret
add
sahf
fists
cmpsb
fcmovbe
das
and
xlat
dec
int3
stc
jbe
xchg
test
push
adc
mov
bound
inc
sbb
pop
mov
mov
push
das
adc
mov
and
jg
out
nop
mov
aam
mov
sub
add
sub
test
cmp
pushf
mov
lods
popa
push
aad
jbe
imul
dec
push
inc
mov
mov
es
adcl
es
pop
sahf
jg
pop
add
out
dec
mov
mov
add
add
arpl
addr16
sub
repnz
ret
add
add
add
add
lock
call
in
sbb
popa
inc
imul
xchg
fcompp
ljmp
mov
inc
scas
mov
add
dec
stos
imul
in
repz
hlt
outsl
jle
daa
aas
scas
push
int3
push
leave
sub
out
aas
xchg
sbb
pop
dec
push
inc
dec
push
loop
sbb
imul
pop
cmp
push
and
xchg
scas
je
mov
push
insb
nop
mov
cmp
sub
inc
jg
xor
xchg
push
cmc
hlt
mov
inc
lcall
inc
hlt
cli
inc
pop
popf
adc
or
vpmaxub
jne
add
inc
ret
dec
es
clc
jo
pop
ret
lods
push
leave
stos
push
daa
sbb
push
add
jge
insb
sub
mov
cmp
cmpsl
cmpsb
mov
mov
sub
out
cmp
cmp
pushl
xchg
xor
pop
inc
daa
mov
add
add
or
or
mov
sub
repz
lea
adc
ds
cltd
mov
lcall
out
sub
jmp
mov
test
sub
add
mov
inc
xchg
scas
pusha
adc
mov
mov
mov
push
pop
lds
test
arpl
shrl
inc
mov
jle
stos
pusha
mov
fmuls
lea
fidivrl
jnp
push
outsb
pop
sub
push
jo
jg
adc
loope
std
and
mov
shrb
jmp
xchg
sbb
dec
jmp
or
or
mov
sub
and
and
push
js
pop
les
xchg
xor
mov
pop
add
repnz
stos
fs
clc
mov
inc
movsb
fistpll
mov
fwait
js
mov
out
mov
test
push
scas
mov
mov
outsb
add
add
add
add
test
jno
js
jno
out
mov
xchg
xor
jo
xchg
bnd
sub
arpl
push
lock
pusha
pop
out
and
inc
lods
jle
mov
dec
adc
pop
sbbb
jp
or
int
xchg
sub
mov
scas
popa
xchg
fmuls
sub
push
xchg
neg
push
mov
stc
xchg
subb
pop
dec
xchg
xor
sbb
jne
movsb
aam
mov
lret
fidivs
aad
xor
mov
pop
les
fadd
mov
and
in
push
mov
or
pop
and
jae
jb
shl
or
push
fdivr
sbb
sub
shrl
pop
pop
loop
mov
jae
mov
cmp
rolb
xor
bound
mov
incl
cmp
shr
les
movsb
mov
adc
dec
scas
or
add
aaa
xchg
and
movsl
mov
mov
mov
outsb
push
addr16
add
add
add
xor
adc
and
lcall
fisubl
sbb
jmp
call
push
push
jmp
mov
jp
adc
sbb
es
sbb
mov
sub
insl
int3
inc
fstps
push
in
mov
push
enter
push
xchg
gs
push
popf
cmp
addb
jg
outsl
cld
leave
push
fsubl
inc
jno
adc
insb
outsl
sahf
cmp
les
inc
orl
stos
jno
scas
repnz
lea
mov
loop
je
mov
adc
sbb
mov
ljmp
xor
push
in
subb
cmp
aad
sub
hlt
inc
add
mov
in
sahf
add
xor
fsubr
add
lds
sbb
or
mov
insb
and
fdivl
mov
enter
addr16
add
push
stc
xchg
lret
aam
inc
lea
imul
mov
pusha
imul
scas
sahf
add
and
fwait
mull
mov
loop
cmpsl
inc
cmpsb
sbb
push
pusha
add
mov
dec
fildll
cmpsl
mov
loopne
inc
pop
mov
sbb
push
shl
loop
cmc
mov
imul
cltd
imul
sub
sbb
outsl
mov
mov
jle
mov
jmp
jl
mov
loope
add
mov
dec
xor
fsub
fcom
stos
xor
movb
ret
sbb
sub
ds
repnz
js
test
xchg
mov
and
insl
add
and
push
pop
lcall
cmp
dec
or
pop
pop
mov
lods
mov
pop
mov
add
add
mov
mov
lods
imul
fdivp
cmp
add
add
add
cld
icebp
xchg
das
imul
insb
out
in
jle
xor
mov
add
cmp
popf
sarb
shll
popf
std
lds
xchg
fwait
cmp
test
jle
cwtl
mov
stos
sbb
push
pop
fcmovnu
jne
in
rol
fimuls
pop
dec
aam
lods
dec
sub
adc
cmpsb
mov
iret
in
jo
mov
mov
sbb
fstpl
pop
je
sbb
bound
lds
imul
lock
push
hlt
push
push
test
mov
insb
movsb
ret
es
ja
cli
and
movsl
push
cmp
loopne
jmp
test
xor
push
dec
adc
jb
fistps
ja
pop
pop
ss
inc
xchg
iret
mov
pusha
cltd
andl
lods
gs
push
aas
movsb
jb
repz
mov
pop
pop
dec
mov
pop
jmp
pushf
pop
es
aam
xor
xchg
mov
in
mov
test
fstl
xchg
or
pop
xchg
sub
scas
or
cmp
gs
stc
addr16
add
add
add
xor
push
repz
imul
dec
daa
andb
mov
cmpsl
jmp
sbb
mov
jno
sbb
nop
mov
push
adc
sub
push
pop
fnstcw
in
je
jae
ja
jo
repz
sub
aas
xor
mov
fstl
std
negb
fsubl
mov
hlt
fnstsw
xchg
push
or
sbb
sbb
add
sub
mov
sbb
mov
adc
inc
insl
test
jns
cwtl
cmpsb
jmp
lret
int
cmpsl
ret
shrl
iret
pop
test
mov
movsl
sbb
mov
adcl
stos
sbb
jae
mov
dec
mov
lahf
add
inc
movsb
xlat
gs
aaa
int3
add
fmull
sahf
mov
notb
fsincos
icebp
lds
das
xor
pop
es
fisttpll
add
hlt
fbld
popf
aad
or
add
add
add
leave
dec
add
outsl
sub
dec
and
xchg
push
sub
js
add
lcall
jns
xor
addr16
popa
pop
mov
dec
push
pushl
dec
cltd
sbb
sahf
sub
aaa
jl
out
pop
test
sub
fnstsw
or
mov
adc
mov
nop
dec
stos
sahf
pop
inc
loop
and
pop
sti
sub
nop
cmp
xchg
je
inc
cmp
stos
pop
inc
arpl
out
cmp
adc
xchg
jae
or
movsl
pop
inc
aaa
pop
arpl
or
jl
push
vmovshdup
push
inc
inc
cmp
leave
dec
test
fstpl
sub
clc
rcrl
roll
ds
push
add
movsl
hlt
cwtl
ljmp
shl
lret
inc
cli
sbb
cmp
jb
xchg
cli
insb
push
xchg
shll
add
mov
into
fwait
add
mov
pop
or
add
add
add
lret
stos
mov
cli
sub
inc
inc
popl
stc
inc
repnz
sbb
rcrl
test
and
cmpsb
mov
fcoml
mov
arpl
cmp
js
scas
mov
rolb
lret
popl
cld
ret
movsl
mov
sbb
pusha
daa
test
subl
into
or
cmp
outsb
mov
into
lahf
stos
repz
xorl
xchg
cs
leave
in
stos
mov
push
lods
or
push
sti
xor
pusha
jns
aam
subl
xor
stos
inc
sub
mov
sti
pop
pop
std
mov
bswap
ret
or
repnz
cmp
and
fcompl
loope
or
pop
dec
fisubrl
push
or
imul
ja
adc
loope
lods
inc
xchg
jg
imul
cmpsl
pusha
int3
bound
leave
jle
sub
mov
out
mulb
add
add
xor
mov
pop
sarb
in
stos
daa
inc
or
add
add
add
xor
push
lret
adc
pop
adc
fisubrs
pop
mov
xlat
fisubs
jnp
add
pop
iret
adc
sbb
dec
out
mov
ret
dec
jb
push
inc
imul
clc
xchg
leave
pop
std
iret
cmp
adc
orb
mov
pop
nop
xchg
xchg
cli
dec
mov
push
jmp
adc
dec
pusha
aaa
xor
cld
fidivrl
sbb
adc
jns
stc
cmpsl
test
pop
and
mov
and
pushf
push
pop
in
mov
lock
int3
stos
cltd
sub
and
jmp
ja
rorl
aaa
orb
sub
aaa
movsb
push
das
inc
ret
jmp
leave
rcll
or
mov
sbb
into
add
lods
pop
add
lods
jo
adc
insl
popf
and
test
outsl
cwtl
aad
inc
insb
mov
fmuls
outsl
dec
out
mov
sbb
stos
sbb
add
add
inc
out
aas
mov
rclb
dec
roll
or
add
add
add
shll
shll
stos
dec
lret
mov
aas
stos
popa
pushf
mov
adc
adc
jne
mov
jl
movb
sbb
mov
jge
int
mov
cmp
aaa
loop
jb
or
xchg
adc
adc
jle
mov
in
push
pop
fimull
shlb
jg
test
lods
daa
shll
or
adc
je
xchg
push
shlb
add
sahf
sarl
or
mov
or
push
aaa
ja
add
mull
mov
cmpb
das
ja
and
dec
cld
fisttps
aam
pop
xchg
mov
and
out
popa
jae
stos
fcmovbe
out
cmp
movsl
ljmp
inc
mov
mov
sbb
lahf
push
loope
jae
cmp
cmc
notl
leave
mov
out
push
aas
xor
nop
imul
add
stc
or
lahf
repnz
jns
push
roll
add
add
bnd
dec
leave
and
fidivl
popf
addr16
add
add
add
inc
adc
into
add
sub
xchg
mov
testl
repz
dec
sarl
xor
std
jne
xchg
out
push
jecxz
loope
xchg
pop
es
movsl
sbb
pop
xchg
ss
push
test
adc
inc
frstor
lods
adc
imul
stc
jmp
mov
mov
les
dec
mov
push
adcb
popf
loopne
adc
rcr
sbb
cmpsb
stos
or
scas
divb
jbe
sbb
dec
popa
loop
repnz
sbb
int
xor
cli
and
fwait
sub
add
in
popf
fbld
push
sahf
push
mov
testb
push
ret
push
jns
mov
sar
cltd
subb
out
jle
or
sub
sub
lea
neg
cmp
xor
dec
aad
ds
das
fwait
dec
cmp
insb
sbb
add
add
in
out
ja
filds
fs
or
add
sbb
mov
pop
lea
out
mov
fwait
not
movsl
cmp
xlat
stc
adc
xchg
xchg
bound
je
cmp
mov
ja
pop
data16
mov
cmp
mov
lahf
aam
jne
xchg
nop
cli
addr16
mov
jae
xor
lcall
mov
or
sub
push
int3
clc
jmp
or
cmp
ja
inc
aam
clc
pop
push
sahf
cmp
pop
sub
adc
push
add
mov
mov
stos
outsb
dec
xor
arpl
aaa
pop
gs
cmpl
push
mov
sbb
mov
mov
stos
out
mov
enter
nop
inc
cli
ljmp
jg
push
or
dec
push
test
jmp
push
xchg
sti
sbb
add
scas
test
in
inc
push
or
push
add
add
add
sar
mov
dec
scas
jae
loope
aas
jge
jns
ja
add
mov
arpl
andb
lret
decl
je
movsb
dec
xchg
dec
std
dec
fs
aaa
jae
aaa
jg
add
andb
fiaddl
out
ljmp
inc
js
jne
pop
jecxz
fstps
cmpl
movsb
repz
push
shrl
lret
cmc
pushf
xchg
das
or
mov
pop
rclb
push
adc
icebp
les
js
das
push
inc
in
pop
hlt
sbb
mov
sbbl
xor
jmp
mov
js
or
push
inc
sub
jle
or
stos
leave
sbb
enter
nop
mov
sbb
mov
std
insb
les
inc
ljmp
jae
and
ja
aad
and
push
add
or
es
ror
sahf
cmp
jmp
mov
jg
neg
pop
daa
inc
nop
mov
pop
sgdtl
add
add
xchg
inc
push
pop
push
xchg
sbbb
mov
lcall
in
inc
inc
push
push
inc
pop
fwait
mov
std
pusha
sub
outsl
test
push
cli
int3
dec
push
dec
cmp
lods
imul
xor
into
lret
sbb
push
jns
mov
ret
test
sbb
or
mov
mov
mov
cmp
sub
adc
push
rol
sbb
in
add
fnstsw
jbe
sbb
push
in
mov
xchg
ljmp
lock
sub
fstpl
adc
mov
call
ja
and
mov
fisubrs
sub
sbb
sbb
aad
mov
mov
js
and
imul
jae
popf
xchg
test
pusha
inc
cs
jns
or
js
loopne
add
add
sti
jg
cmp
je
push
iret
sbb
adc
add
add
add
dec
in
cs
xchg
pop
jne
sbb
mov
in
insb
cmp
dec
pop
mov
jne
jmp
addr16
sub
push
xchg
pop
jge
out
daa
into
bound
adc
mov
sub
subl
inc
gs
inc
cltd
jne
mov
dec
dec
lds
bound
or
ret
push
test
push
nop
cmp
xlat
mov
mov
add
jbe
add
xor
repnz
int
cmp
inc
lods
cmp
loop
xchg
jbe
loope
loopne
daa
ret
rcrl
dec
lock
addr16
sub
or
int
or
ja
ror
dec
jle
loop
jp
and
push
testl
push
inc
mov
mov
sbb
mov
cmp
cmp
push
inc
jb
adc
movsb
ret
je
jne
imul
fidivrs
scas
aam
jnp
fstp
fcompl
into
in
aas
adc
add
add
add
in
testb
imul
int3
mov
and
jo
xor
adc
lret
push
xor
jae
inc
test
rcll
pop
rolb
add
dec
jg
mov
pop
xchg
inc
daa
mov
lods
push
inc
inc
mov
fsts
dec
sub
orb
int3
rclb
pop
test
pop
or
lods
imul
pusha
add
xchg
jnp
sti
js
cmp
inc
jecxz
xchg
sbb
jge
cmpsl
mov
cmc
divb
aam
ficoms
repnz
sub
adc
ret
lahf
inc
jmp
xchg
fnsave
xor
movsb
jnp
int3
xchg
decl
dec
mov
add
or
jnp
js
sbb
dec
cbtw
inc
les
pop
dec
popf
add
aad
xor
xor
in
popf
adc
or
cmp
dec
test
scas
dec
mov
jno
std
outsl
mov
add
leave
rorb
add
add
jp
add
int
insb
xchg
sti
add
or
ds
xorb
and
ss
cld
xor
jb
movsb
mov
push
inc
js
dec
fwait
movl
test
sub
in
das
xor
into
or
mov
xor
faddl
fwait
pop
mov
cmpsb
aas
icebp
cmp
arpl
je
fsubrs
mov
shl
cwtl
aaa
lock
mov
ds
into
aaa
jnp
loop
pop
pop
imul
mov
mov
sti
outsl
cwtl
push
sti
inc
daa
adc
jp
jnp
adc
cmp
mov
cmp
loop
xchg
pusha
popw
push
jae
add
jmp
imul
xchg
cmp
gs
xchg
inc
dec
imul
mov
out
fcmove
rcrl
mov
xchg
inc
int3
sbbb
loope
jmp
frstor
adc
add
add
add
push
in
mov
rsm
mov
test
div
mov
jbe
int
popa
sbb
je
stos
in
dec
jno
mov
fs
in
in
xchg
lret
xor
into
pop
imul
adc
repnz
idivb
filds
adc
inc
jns
pop
or
mov
dec
test
enter
fildl
imul
and
fidivs
sahf
push
out
adc
push
aas
mov
arpl
mov
outsl
insb
cmp
pop
repnz
add
inc
mov
xchg
sub
fidivl
fnstcw
sbb
cltd
arpl
jg
or
push
push
adc
cmp
push
insb
gs
fsts
sub
cmp
pushf
cmpsl
sbb
push
loope
and
std
add
push
push
in
pop
in
outsb
xchg
cmc
sub
and
pop
adc
jge
cld
clc
and
xor
xchg
lds
rcll
out
addr16
add
add
add
dec
mov
scas
jo
ja
bound
bound
push
xor
cmp
xchg
lret
xor
lret
int3
out
repz
out
loopne
outsb
loope
adc
and
ss
push
or
adc
sbbl
les
push
jecxz
in
xchg
clc
sub
push
scas
mov
bound
inc
push
test
xor
and
cmpsl
movsl
cmp
fs
xchg
lock
add
dec
popa
popa
mov
jl
xchg
mov
movb
fisttps
jo
cmp
stos
popf
mov
jo
adc
inc
or
push
js
and
loope
call
nop
pusha
and
shll
cwtl
scas
lods
push
daa
sti
mov
pop
ret
mov
xor
out
pusha
adc
pusha
imul
sub
int3
call
push
sbb
mov
scas
dec
cli
inc
jg
int
xchg
lods
or
cwtl
out
addr16
add
or
das
jle
bound
inc
xchg
shrl
mov
xchg
je
or
pop
dec
sub
fstl
std
gs
jne
fmull
mov
movsb
adc
push
je
daa
sbbl
jbe
fcomps
rorl
adc
sbb
notrack
lock
pmaddwd
stc
mov
lret
jmp
insl
cmp
push
mov
xchg
xchg
out
add
xchg
pop
lock
fwait
jmp
lock
xor
mov
mov
cli
xchg
mov
imul
add
into
out
mov
mov
jae
push
or
jne
mov
cltd
cmc
mov
insl
test
mov
cmp
push
jae
out
pop
es
iret
fmul
inc
pop
pushf
lods
cmpsb
sbb
repnz
sahf
std
xchg
cwtl
cwtd
out
lock
std
cmp
jle
fistpll
fidivl
push
add
add
add
mov
loop
jae
addr16
in
pushf
add
cmpsl
je
jecxz
mov
or
lret
mov
or
mov
in
out
sbb
or
or
pusha
arpl
inc
add
jl
test
sub
sub
lods
add
js
hlt
negb
xchg
fstps
xor
lods
into
sbb
mov
lret
shll
mov
fucomi
movsl
xor
xchg
aam
add
inc
call
push
movl
mov
popa
mov
push
orl
pop
flds
push
aaa
mov
and
sub
into
out
ret
mov
pop
rep
inc
and
shlb
cmp
roll
enter
loop
test
mov
mov
pop
and
arpl
push
pop
cs
dec
jns
in
mov
lods
or
xchg
repz
sbb
lret
jns
jecxz
lea
and
dec
mov
xchg
pop
lds
xlat
ficompl
inc
rcll
in
pop
add
add
add
popf
stos
inc
clc
subb
push
add
ffreep
or
xchg
pop
scas
je
in
test
mov
mov
mov
lea
jmp
stos
mov
leave
movsl
jge
mov
xor
js
xchg
push
cwtl
adc
or
fists
dec
dec
sub
sub
rol
mov
repnz
mov
fistl
xor
mov
or
jg
sbb
jecxz
pop
pusha
pop
xchg
pushf
adc
pop
aaa
mov
rcrb
jg
scas
or
push
xchg
xor
mov
in
cld
addr16
dec
clc
addr16
xlat
es
pop
rolb
sub
cmp
in
and
rcrb
cs
dec
ljmp
fildl
dec
pop
ja
dec
pop
inc
pop
cmp
add
pop
dec
idivl
shll
aam
and
sbb
and
add
add
sub
iret
outsb
jmp
push
test
rcrl
add
add
add
addb
cli
out
sahf
shrb
pop
in
push
sub
mov
pop
outsb
jbe
mov
xor
mov
out
int
hlt
insl
std
add
call
stc
xchg
bound
pop
gs
fstl
lcall
ja
xor
sub
lret
mov
jnp
xchg
add
and
add
adc
sbb
mov
outsb
into
jns
stc
sti
imul
pop
mull
mov
push
xchg
pop
mull
cmp
jmp
jl
loop
add
mov
das
enter
insl
mov
sub
add
in
mov
mov
movsl
faddl
leave
ficomps
inc
rcll
out
out
xor
lods
lret
repz
pop
stos
in
faddl
or
test
mov
enter
sbb
std
sbb
stc
cld
or
loopne
push
sbb
add
add
add
test
mov
cmp
inc
insb
lahf
icebp
test
dec
lods
mov
cmpl
or
mov
out
or
sub
shlb
adc
aad
lods
mov
mov
push
das
out
orl
inc
or
dec
lods
xchg
mov
and
ret
adc
loop
dec
in
iret
or
mov
out
inc
pop
sti
sbb
xlat
mov
jecxz
jp
xchg
jp
mov
mov
jb
loope
adc
and
cmpsb
movsl
hlt
cltd
mov
mov
lret
gs
jmp
fildll
pop
and
jnp,pn
movsb
inc
fildll
pop
xchg
es
pop
xchg
mov
mov
call
or
cmp
dec
rorl
cmpsb
es
mov
out
sub
int
push
pushf
lcall
fiadds
add
add
pop
test
scas
repz
cld
adc
mov
sbb
add
add
add
mov
mov
fucom
push
pop
ficomps
mov
imul
mov
dec
es
cld
sahf
xchg
cmp
lods
add
aam
repnz
out
xor
jmp
cmp
cmp
vucomiss
xorb
inc
popf
mov
in
loop
loopne
loop
nop
hlt
inc
insl
add
pop
pop
scas
sbb
cli
adc
sub
rcrb
nop
test
fnstenv
jnp
mov
mov
mov
popa
jg
xor
or
xchg
mov
popf
mov
dec
sbbb
imul
rcl
push
inc
repz
aad
xchg
mov
scas
or
mov
outsb
test
mov
js
mov
sub
sub
addr16
ja
orl
ret
adcl
movsl
jo
mov
shll
jge
ss
fbstp
mov
dec
pushl
sub
jb
sbb
add
add
add
push
jecxz
cmp
stos
mov
or
inc
mov
lahf
ret
lret
outsl
or
mov
idiv
insb
sub
hlt
cmc
cmp
sahf
or
enter
lods
and
mov
pop
mov
mov
ret
lods
xchg
push
rorb
inc
sbb
inc
inc
adc
repz
sti
sub
pop
loope
scas
inc
shll
mull
mov
mov
scas
decb
lods
jg
lods
xchg
push
jle
push
sbb
sbb
insl
addr16
add
pusha
stos
jl
cmc
xchg
jb
adc
sbb
lret
test
mov
lods
std
dec
xchg
imul
add
push
movsl
jno
sbb
xchg
bound
add
xor
xchg
push
sarb
std
mov
xchg
sub
jns
movsl
mov
inc
bound
test
sbb
pop
mov
push
rcr
jle
pop
sub
inc
ja
pop
aas
dec
push
lods
andl
add
add
add
rcl
inc
shrb
mov
in
aas
jge
inc
or
pop
jnp
imul
fcmovnbe
mull
xchg
nop
je
pusha
lods
xchg
push
and
mov
push
fsubp
sbb
dec
insl
outsl
sub
lock
sub
mov
jge
cld
xchg
out
stos
jge
sub
lock
push
mov
xor
and
cld
sbb
lods
int
xchg
loop
in
call
insb
ja
mov
adcl
nop
xchg
cwtl
cmp
or
cmp
mov
inc
jns
xchg
mov
nop
pop
shrl
xor
mov
rorb
sbb
jns
adc
ds
fistpll
adc
dec
or
sub
jae
scas
push
push
mov
xchg
insl
ret
adc
jnp
cmp
clc
loopne
jecxz
add
stos
dec
adc
push
jnp
mov
daa
push
cmp
fistl
inc
and
daa
dec
test
jae
ljmp
push
repz
jae
ja
div
mov
in
inc
addr16
add
aad
mov
ljmp
mov
fcomip
sub
das
outsb
cs
js
push
popa
das
or
xchg
loopne
fisubs
mov
and
jmp
fxch
pop
push
or
in
jg
cli
cmp
loop
fcoms
scas
adc
mov
mov
xchg
in
sahf
xchg
loope
jnp
ja
int
mov
aam
cmp
div
enter
pop
jbe
xor
roll
push
cmp
push
adc
cltd
xchg
and
ljmp
mov
dec
cmp
in
or
outsb
jb
mov
sbb
fs
lea
call
mov
aam
pop
test
lods
pop
mov
icebp
add
cld
jns
shrl
pop
ss
hlt
test
xchg
movsb
iret
sbb
das
scas
xor
test
clc
jno
shl
sar
out
jle
and
orb
sahf
xchg
bound
add
add
cli
std
jg
push
pushf
dec
dec
push
and
add
add
jecxz
xor
dec
mov
adc
mov
or
into
mov
hlt
cmpsl
out
je
cld
xchg
int3
jns
dec
adc
popa
leave
lock
jne
mov
and
mov
cmp
adc
lods
aam
fs
loop
dec
sub
cmp
mov
push
inc
add
inc
jg
loopne
mov
mov
mov
xchg
mov
inc
mov
vcvtss2sd
daa
inc
mov
jecxz
sbb
cmp
push
mov
shll
xchg
mov
rclb
pushf
mov
jne
and
out
in
dec
test
inc
inc
xchg
sbb
rolb
dec
ret
ror
gs
sbb
xchg
in
hlt
sub
inc
jge
pop
ds
mov
clc
mov
js
jp
push
adc
fidivs
cmpsl
test
sbb
jnp
add
add
add
mov
std
incl
sbb
jg
add
add
add
add
push
mov
addr16
or
icebp
or
mov
push
jg
dec
sbb
fs
xchg
dec
adc
add
aas
xchg
cmpsb
sbb
imul
or
mov
sbb
mov
jecxz
jle
fcmovnbe
fldenv
jnp
mov
cwtl
xor
xchg
test
cmpsb
pushf
dec
cwtl
and
sbbb
std
pop
data16
pop
pop
add
ja
or
ret
imulb
les
mov
push
fs
arpl
pmaddwd
idivb
push
cmpsl
jg
dec
leave
cmp
or
fdivrs
dec
sbb
popf
stc
inc
mov
repz
sbb
aam
mov
and
test
and
cmp
adc
ficoms
sti
add
lock
sbb
push
dec
aas
ret
inc
add
inc
shrl
es
in
xorb
sbb
push
es
jg
pop
or
xor
dec
and
add
add
add
jle
test
xchg
jmp
add
lock
fisubs
mov
pop
or
or
mov
sarl
pop
and
jne
xchg
fistl
popf
jns
out
cmp
pushf
mov
aam
adc
xchg
xor
in
add
push
cli
add
dec
bound
cmp
and
or
inc
cli
mov
jge
add
mov
adc
insb
cmp
aam
daa
repz
cmpsl
rolb
push
cmp
add
lods
xor
jne
loope
out
loope
aam
insl
mov
shrl
cltd
loop
jnp
mov
ss
pop
js
add
rorl
fcom
cmp
scas
ja
test
push
cwtl
mov
ss
pop
adc
lret
add
das
test
inc
inc
mov
loopne
pop
xchg
lds
lret
pop
shr
pop
xchg
into
inc
js
mov
ja
and
push
clc
or
dec
push
cmp
and
add
add
add
addr16
mov
in
je
fisubrs
loope
sbb
pop
adc
daa
jbe
jbe
mov
gs
adc
dec
insb
mov
push
std
add
sbb
xchg
arpl
pop
cmp
push
or
cmp
out
fnstcw
mov
iret
lods
rcll
and
fbstp
mov
in
xchg
mov
dec
xchg
iret
xor
rclb
mov
cmp
shlb
xor
xlat
adc
mov
pop
rcrb
ret
fwait
std
jecxz
adc
cmp
mov
add
je
shrb
pushf
jb
in
scas
bound
sub
jbe
outsb
push
icebp
pop
sbb
adc
je
cs
jnp
and
fst
pop
jl
loopne
cli
mov
loopne
call
lods
lret
pop
rep
or
in
rcrl
adc
insb
je
ret
test
push
add
xor
mov
mov
and
add
add
add
sbb
jecxz
gs
movsb
dec
mov
mov
cmp
xor
inc
lock
pop
out
shr
das
insb
sub
fmul
fldenv
push
insb
mov
rcl
jmp
push
jge
lods
aad
fisttpll
pop
dec
sbb
pop
leave
and
and
pop
ficomps
xor
outsl
adc
sarl
jmp
and
cmp
scas
push
nop
dec
mov
adc
test
pop
sub
inc
scas
sahf
pop
inc
dec
pusha
mov
or
dec
and
lret
adc
jecxz
cltd
add
ret
cltd
jmp
xchg
pop
out
mov
jno
sbb
cwtl
pusha
sar
mov
add
fcompl
fisubrs
rclb
lcall
xchg
inc
ja
xor
cli
push
nop
xchg
mov
repnz
push
mov
fs
mov
in
testl
imul
pop
xor
jae
add
add
ficoms
stos
sbb
call
mov
and
add
add
add
lock
inc
repnz
jecxz
inc
in
pop
movsl
sbb
test
jbe
int
loopne
sub
cwtl
jns
pop
ds
mov
jo
or
in
add
cmp
push
sub
popa
decb
out
xchg
wbinvd
addl
nop
sbb
leave
roll
sub
jns
jp
sti
adcl
loop
mov
pop
xor
xor
mov
movsb
push
mov
ss
pop
stc
sub
xchg
cli
out
pop
sar
mov
sahf
divb
fldl
adc
clc
ret
fwait
or
mov
xorl
enter
cs
icebp
dec
pushf
mov
cmp
mov
xchg
jg
rcrl
jns
sub
movl
push
pushf
enter
in
jnp
pop
jmp
inc
dec
inc
lcall
add
in
out
stos
jge
or
inc
mov
add
add
bound
pop
jecxz
insl
aad
or
roll
xchg
fdivrs
loopne
jo
mov
push
mov
ss
ds
xchg
cmp
call
mov
icebp
mov
xor
addr16
fdivrs
ds
and
inc
cli
mov
ljmp
push
clc
stc
rcrl
xchg
leave
jne
sbb
mov
adc
lock
xorb
notb
or
add
loop
inc
arpl
jae
cmp
inc
cltd
cmpsb
xchg
mov
pop
add
shl
jmp
scas
pop
test
pushl
loope
fildll
daa
dec
cmc
call
sti
inc
sub
and
fs
mov
enter
pop
xchg
xor
mov
and
iret
lahf
lock
cmp
int3
mov
pop
ds
sub
cltd
xlat
fisubl
repz
add
add
sbb
out
xchg
iret
push
aas
adc
and
add
jecxz
les
add
or
pop
dec
mov
add
test
int3
or
into
inc
fistps
testl
xor
add
movsb
push
xchg
mov
cmp
inc
fisubrs
sub
jg
adc
sub
inc
cmc
fdivrl
arpl
pop
shlb
push
aad
pop
movsl
pop
das
jmp
cmp
pushf
inc
addb
sub
push
mov
push
inc
stc
lret
sub
cmp
repz
push
inc
mov
stc
ja
fisubrl
test
in
push
aaa
mov
cmc
int
or
push
push
ret
sti
pop
subl
pshufw
inc
lea
in
jne
jmp
mov
test
sub
cmp
inc
test
repz
stc
fcmovnb
in
pop
mov
std
inc
lret
test
sbb
jmp
aam
add
cmp
out
loope
jns
dec
mov
cwtl
add
add
add
notb
iret
lret
add
nopl
xchg
nop
push
push
jns
rorl
fidivrl
sbb
mov
xor
or
sbb
cmp
xchg
adc
mov
dec
arpl
fdivp
imul
fidivl
jg
inc
mov
rcll
cmp
cmp
mov
mov
or
aaa
mov
pop
dec
dec
xor
mov
stos
sbb
loopne
leave
pop
mulb
enter
jge
mov
mov
imul
daa
xor
stc
enter
cmp
adc
repz
and
pop
icebp
jmp
adc
sub
mov
and
les
sub
mov
xor
pop
inc
iret
ds
leave
iret
push
add
orb
mov
je
push
dec
les
cmc
cwtl
out
addr16
repnz
out
push
dec
lea
test
sbb
sti
push
mov
leave
sti
pop
dec
addr16
add
add
add
push
xor
sub
out
cmp
and
lea
test
cmc
xor
and
lret
data16
cltd
pop
out
mov
xor
jle
ja
adc
jbe
movsb
inc
xor
push
pop
sub
scas
pop
sub
divb
data16
pushf
bound
push
loopne
sub
lret
mov
mov
jnp
fld
push
xchg
aas
rcrb
leave
cmp
in
out
int3
loope
es
sub
mov
adc
fdivl
cli
sarl
fucomi
or
loopne
hlt
sub
int
jge
in
pop
xor
xchg
mov
inc
leave
cmp
xor
xor
das
lret
data16
lcall
xchg
mov
aaa
pop
insb
mov
hlt
imul
mov
testb
sti
mov
and
ss
ret
mov
inc
sbb
ret
inc
push
mov
mov
dec
idivl
cld
ret
add
mov
add
add
add
stc
call
mov
or
cmp
test
insb
stos
cmc
leave
fldcw
cs
lock
leave
popf
bound
push
das
mov
sbbl
dec
xchg
mov
push
fwait
jnp
out
ds
aam
add
cmpsb
mov
adc
mov
mov
jns
std
cwtl
outsl
push
xchg
frstor
dec
cli
push
push
shll
inc
push
call
mov
adc
xlat
pop
sub
add
gs
ds
pop
dec
fidivrs
sbb
test
pop
mov
rol
in
mov
sahf
repz
or
jl
add
push
hlt
mov
inc
lret
out
aaa
cmc
test
pop
les
imul
jge
cmpsb
add
push
mov
ja
subb
adc
in
aam
addr16
jo
dec
mov
add
rcll
push
stos
mov
movsb
shl
push
dec
fwait
sub
ret
mov
iret
mov
out
xchg
add
add
add
cmp
xor
addl
and
or
aad
in
rcrb
adcl
aad
pusha
push
sub
jne
gs
punpckldq
mov
pusha
inc
cmp
xchg
inc
ret
mov
and
fnsave
test
lcall
scas
jg
insb
outsl
pop
mov
clc
std
icebp
mov
push
xchg
das
ss
fwait
addr16
add
and
mov
negl
pop
ljmp
push
mov
jl
xchg
and
add
outsb
xchg
jnp
daa
xchg
scas
les
sbb
test
or
sub
fsts
add
cmp
pop
xchg
mov
ljmp
push
mov
add
repnz
fistpl
add
or
mov
mov
xchg
out
xchg
xchg
push
mov
add
mov
jg
arpl
shrb
pop
sub
add
add
add
ss
daa
dec
adc
and
aam
scas
ljmp
inc
in
xchg
inc
cmp
xor
xchg
cmp
imul
and
sbb
scas
fldenv
or
loop
xor
lret
and
xor
jno
lods
lea
add
fbstp
sub
sub
les
popa
mov
sub
in
adc
add
mov
or
outsl
je
adc
rolb
mov
mov
cmp
sahf
mov
xor
shlb
aas
push
test
cmc
mov
or
ss
sbb
sbb
pop
mov
in
sub
sbb
lods
icebp
and
pop
outsl
pop
add
pop
pop
call
out
test
enter
dec
mov
xchg
stc
adc
fwait
xor
mov
or
add
add
xor
clc
cli
clc
sarb
sti
mov
lret
stc
sub
add
add
add
sbb
xchg
sub
inc
test
icebp
and
ret
lcall
test
sbb
testl
jl
cmp
mov
fs
cmpsb
cld
xchg
and
push
pushf
xlat
cmpsl
ja
fdivs
scas
aad
mov
jb
mov
cmp
scas
std
data16
call
xchg
mov
push
and
add
xchg
dec
sbb
ds
in
cmp
stos
mov
in
mov
sub
mov
into
cwtl
cmpsb
mov
and
add
shlb
jg
xor
js
lods
xchg
and
out
nop
aad
xor
hlt
cs
xchg
outsl
cmp
and
push
lods
out
jge
mov
pop
cmpsb
dec
cmp
imul
aam
jg
ds
leave
add
add
sub
add
add
jnp
out
mov
in
and
add
add
add
sti
adc
adc
out
mov
pop
dec
dec
cmp
into
lea
fidivrs
sbb
and
push
rol
mov
adc
sbb
ficoms
or
cmp
xchg
ljmp
or
dec
jb
lahf
or
mull
aad
int3
xor
mov
stos
mov
jo
xchg
mov
push
daa
leave
ds
mov
sar
ret
mov
mov
scas
int
xor
mov
pop
out
pop
dec
cmp
rorb
mov
loop
mov
in
adc
sub
push
jmp
xor
jecxz
fimuls
popf
jecxz
xchg
js
sbb
dec
adc
add
cmp
adc
insb
repnz
into
jno
pop
cmp
fcmovnb
jmp
mov
imul
xchg
jns
outsl
sbb
inc
sub
add
es
data16
insb
daa
mov
rolb
sbb
sub
add
pusha
add
push
pop
inc
inc
dec
imul
mov
add
cwtl
mov
in
xchg
gs
xor
mov
push
call
xchg
lret
mov
xchg
push
cli
inc
inc
fbld
loope
and
sub
push
int3
fcmovnbe
mov
pop
xor
stc
add
jnp
in
or
int3
mov
sbb
push
sti
es
ss
idiv
jbe
out
clc
cmp
shl
inc
or
outsb
xor
cmpsl
mov
sub
pop
pop
push
mov
mov
adc
inc
cmpl
orl
mov
and
fidivl
icebp
jno
lods
sub
das
push
cmc
test
aam
inc
fdivrs
push
mov
mov
sub
xchg
addr16
sbb
pop
lret
xor
inc
je
cli
push
nop
push
popa
adc
add
clc
mov
fldcw
add
jo
add
add
add
leave
pop
imul
inc
lret
inc
popa
mov
xor
jae
sbb
xor
mov
jl
xlat
aaa
push
movsl
pop
cltd
in
ret
mov
jnp
push
mov
icebp
mov
jne
mov
pushl
pop
sbb
outsb
inc
xchg
pop
popa
shr
sub
pop
cmp
stc
mov
or
pop
push
push
xor
adc
je
adc
into
sub
shlb
sbb
repnz
loope
push
pop
stos
cmp
cld
jmp
jae
shlb
mov
mov
cltd
mov
mov
pop
or
imul
jae
aaa
in
mov
or
push
jmp
cmp
adc
jns
iret
inc
stos
mov
repnz
mov
cli
and
xchg
mov
cmp
divl
rcl
push
sub
mov
mov
cmp
mov
outsl
or
inc
repz
push
sti
cmpsl
enter
or
fwait
push
addr16
add
add
add
sbb
jne
cmp
subb
je
jmp
out
call
push
shr
shll
aam
dec
clc
adc
cmp
inc
stos
sbbl
rol
cmpsb
inc
stc
push
and
insl
sub
sbb
pop
jmp
or
clc
add
dec
lock
sbb
out
lea
into
ljmp
push
mov
popf
xchg
roll
xor
daa
push
adc
scas
aad
fwait
loope
loope
shll
inc
push
iret
into
mov
pop
xchg
jmp
das
jmp
xchg
mov
or
icebp
fisttpll
rcl
cmpsl
pushf
fdivr
and
cmpsb
outsl
sbb
mov
sub
scas
sbb
sbb
xor
push
cmp
outsl
mov
js
adc
push
and
std
mov
dec
push
ret
or
xor
add
add
add
clc
cli
shrb
mov
mov
insb
std
not
cld
push
pop
push
push
mov
ja
push
mov
mull
xchg
aam
push
in
cmp
and
dec
movsl
enter
cs
in
push
push
mov
xchg
pop
inc
pop
mov
shll
and
lods
push
sbb
xor
daa
xchg
inc
fmul
pop
fwait
mov
iret
xor
pop
cmp
sub
cmpsl
mov
dec
call
shrb
add
aas
xchg
pop
sbb
movsb
adc
pushf
fwait
mov
inc
mov
sub
pop
cmp
cmp
xlat
xor
stc
pop
mov
fldenv
ljmp
and
mov
ljmp
arpl
scas
or
pushf
test
inc
and
out
out
xchg
mov
xchg
pop
pop
push
icebp
repz
lahf
lahf
xchg
xor
push
imul
add
and
jecxz
and
lcall
add
add
add
insl
fwait
dec
fwait
mov
inc
push
mov
sahf
push
movsb
in
in
sub
mov
inc
pushl
mov
add
mov
aaa
filds
mov
ret
xchg
in
sbb
imul
sahf
jmp
rcrl
call
and
mov
jmp
mov
dec
lock
xlat
pop
jnp
iret
sbb
jnp
outsl
ss
out
xchg
mov
bound
push
adc
mov
cli
repnz
sti
lds
scas
pop
add
negl
and
fsubrl
nop
bnd
and
popa
ffree
insl
dec
lds
cwtl
aam
mov
or
xor
pop
xor
inc
jmp
icebp
icebp
xchg
test
fldt
mov
ljmp
adc
lods
aas
sti
adc
push
dec
insl
add
fbld
adc
fiaddl
ret
ficomps
cmp
lahf
sub
in
xor
add
add
add
mov
es
aas
or
jmp
add
imul
adc
shll
sti
subb
mov
jns
xor
loopne
xor
stos
pop
imul
pop
xor
pop
xor
out
cmp
and
pop
dec
mov
nop
stc
hlt
sarb
fists
cmpsb
mov
pop
dec
pop
cmp
jae
pop
inc
fcmovbe
dec
rclb
mov
cmp
mov
and
outsb
sbb
xchg
jp
imul
mov
xor
in
jle
sub
aad
dec
mul
int
cmp
rcl
jmp
stos
popa
outsl
cmp
test
inc
jne
int3
dec
iret
sub
les
mov
in
jne
pusha
jbe
stc
push
dec
mov
ljmp
or
test
jge
es
fistps
lods
mov
aaa
ret
hlt
add
add
arpl
ja
sub
add
xor
add
add
add
dec
jno
stos
gs
imul
cmc
cwtl
lret
adc
inc
aad
push
sbb
rorb
mov
push
fsqrt
jg
mov
mov
xlat
xchg
mov
inc
mov
inc
or
adc
mov
mov
icebp
loope
cs
xlat
jns
pop
and
adc
aas
js
dec
and
pop
nop
mov
inc
inc
lret
into
adc
mov
sbb
outsb
subl
mov
movsb
addl
cmp
pop
xor
subb
aas
daa
shl
aaa
in
lret
mov
lahf
cli
test
int
fsubl
mov
shlb
scas
mov
push
jae
pop
clc
or
jae
add
sbb
fdivrp
movsb
test
stc
mov
add
jno
cmp
xor
jg
fmulp
and
or
cwtl
lods
call
movsb
mov
add
fwait
in
sti
mov
or
push
lock
mov
or
lods
or
add
add
add
xchg
jmp
jecxz
pop
dec
push
and
xchg
fsubs
jo
bound
sarb
sub
movl
outsb
das
cltd
sbb
jo
loop
cmp
and
es
mov
cmp
jb
jne
and
or
jp
or
sub
rcrb
jnp
adc
pop
mov
xlat
push
clc
subl
scas
xor
push
mov
cmpsb
fdivrl
lods
pop
mov
and
pusha
pop
or
pop
data16
add
sbb
loop
add
push
sbb
xchg
mov
pop
into
dec
xor
dec
insl
cmp
dec
add
add
sti
lods
pushf
out
xor
dec
daa
push
ss
jbe
sarb
add
cmp
lcall
sbb
jge
clc
lods
dec
adc
xchg
sbb
sbb
add
add
sti
pop
jge
neg
hlt
add
xor
add
add
add
popf
push
pop
std
stos
cs
xor
add
xchg
int
xor
outsb
in
mov
das
fwait
add
insl
xchg
mov
push
bound
xchg
xor
imull
je
xchg
add
xchg
fcompl
sarl
add
sub
xor
repz
inc
lea
push
test
movsl
push
mov
jle
mov
int
outsl
inc
inc
cltd
push
ljmp
in
ret
push
dec
pop
pop
or
jnp
je
ja
dec
inc
je
adc
pop
sub
ja
cld
outsl
rcrl
cli
pop
pop
and
cmpsl
cmpsb
dec
mov
push
daa
dec
and
imul
test
sbb
xchg
cmp
int3
out
push
repz
clc
add
and
xchg
je
repnz
or
jecxz
fs
push
pop
in
and
bound
push
cltd
dec
add
pusha
cltd
fsub
std
in
popf
in
stc
jmp
ror
in
add
add
add
mov
inc
inc
or
int3
int3
in
jae
movsl
idivb
shrb
enter
xchg
lods
shlb
mov
xchg
je
dec
test
insl
adc
jg
push
sub
lea
mov
xlat
add
clc
mov
inc
cmp
add
gs
add
enter
adc
and
andb
shrb
xchg
repz
in
mov
mov
in
icebp
xor
mov
fisttpl
xchg
add
dec
sbb
int
and
xor
pop
popa
shl
xor
iret
xchg
sbb
or
jno
jle
loope
push
test
pop
pop
xor
push
imul
push
cmp
out
jns
in
jecxz
decb
cmpsb
int
mov
cwtl
mov
sti
xlat
xor
fildll
loop
jnp
pop
cs
outsb
mov
or
pop
pop
sub
pop
jp
jnp
sti
xchg
jle
jp
lods
popa
cmp
xchg
add
add
add
ffreep
xchg
testl
sub
xchg
pop
mov
pop
dec
pop
inc
jl
data16
and
sbb
inc
movsb
stos
in
mov
jae
sbb
repz
aaa
dec
fstl
aam
push
inc
imul
xchg
rol
lods
and
sub
add
cs
dec
stos
popa
or
cmp
iret
fstps
test
mov
sbb
xor
cmpsb
fwait
ss
aam
jge
push
xchg
cwtl
dec
xchg
cwtl
mov
add
shr
repnz
mov
add
inc
test
mov
es
lcall
pop
jne
inc
xchg
fsubrl
xor
adc
cmp
jmp
mov
add
push
imul
inc
jo
mov
sbb
sahf
xor
xchg
leave
jp
subl
sbb
adc
mov
xlat
dec
lea
outsl
push
mov
push
sti
decb
mov
cmp
add
add
add
dec
push
je
jg
inc
sbb
jbe
cmp
imul
shl
pop
adcl
imul
stc
jo
into
jne
add
ret
ret
sbb
inc
push
aaa
pop
in
dec
fs
sub
add
out
clc
sbb
and
ljmp
enter
test
and
daa
or
xchg
movsl
jl
je
icebp
lcall
dec
push
out
arpl
popa
movsl
jnp
push
mov
cmp
jge
inc
shll
insl
dec
mov
lret
sub
mov
dec
dec
push
jns
mov
lea
fwait
rcl
in
cs
push
and
dec
movsl
jg
push
adc
sti
ss
repnz
jno
inc
jle
sbb
push
mov
es
push
lods
pop
out
into
fs
cltd
jl
mov
lret
outsb
cltd
lret
dec
cmp
jo
jo
add
add
cmp
xor
hlt
pop
cld
repz
add
add
add
dec
vpunpckhbw
mov
jge
sbb
rorl
lahf
push
jne
push
jae
loope
mov
fbstp
mov
xlat
pop
rorb
or
ret
outsb
mov
arpl
or
sbb
icebp
xchg
sbb
add
sub
xchg
xchg
mov
mov
movsb
inc
je
push
insl
sbb
mov
in
pop
jmp
bsf
and
cmp
call
and
mov
and
inc
sarb
or
sub
or
scas
imul
icebp
jle
bound
mov
shll
pop
and
sub
xchg
mov
dec
test
jnp
mov
repz
data16
nop
jg
call
outsl
jo
ds
cmpsl
push
mov
pop
in
cmp
jb
adcb
sti
dec
mov
mov
push
jns
stos
adc
adc
add
add
cmp
jge
stos
lea
shrb
push
hlt
cmp
add
add
add
int3
xchg
ss
sub
pop
outsl
mov
jmp
in
or
jg
sub
mov
ss
and
mov
sbb
mov
repnz
mov
sbb
xor
xor
pop
xor
or
mov
inc
mov
rcrb
jmp
dec
cmpb
jmp
cmp
test
xchg
arpl
sub
stc
mov
std
andnps
shlb
mov
mov
adc
sbb
push
cmc
cmp
xor
pusha
sbb
out
dec
push
popa
jg
ds
mov
out
or
rorl
call
push
fisubs
pop
jl
js
add
jg
in
cmp
ficomps
mov
movsb
jmp
xchg
ja
mov
xchg
jno
data16
jecxz,pn
je
outsl
xchg
inc
divb
rclb
nop
lcall
cmp
add
add
add
test
xchg
cli
daa
add
popf
cmp
mov
pop
sub
nop
dec
loope
mov
ja
addr16
push
pop
fidivl
cmpsl
cmp
sbb
push
jo
pushf
or
xchg
xchg
push
addr16
add
and
in
or
aas
inc
scas
push
sub
cmc
push
push
and
rorl
hlt
loope
call
dec
cmpsb
pop
sbb
lcall
js
mov
dec
in
outsl
rcrb
std
scas
sub
test
cmpsl
into
sbb
jmp
cmp
in
inc
mul
adc
out
ja
xorb
lret
dec
pusha
or
mov
test
fwait
daa
xlat
mov
adc
and
adcb
inc
mov
in
cwtl
push
jno
outsb
insb
push
add
iret
in
lcall
jp
add
arpl
outsb
insb
xchg
daa
clc
inc
add
jl
dec
jbe
idivl
or
pop
inc
movsb
addr16
add
add
add
fstpt
into
jne
mov
ds
cmp
int3
arpl
sti
push
xchg
out
es
or
mov
jl
push
xor
dec
and
mov
loope
mov
or
sbb
and
lcall
pop
dec
mov
lock
fisubrl
insb
out
pop
mov
in
mov
mov
adc
xor
test
jp
ret
arpl
and
inc
push
pop
jne
arpl
fs
cmpsl
adc
data16
aad
fmull
mov
je
xor
es
stos
fsubl
in
mov
data16
test
jnp
xor
push
jb
sub
sub
push
and
inc
dec
lea
sub
jnp
cmc
pop
and
outsb
sub
stos
fs
jmp
leave
aas
fstpt
add
add
add
ds
mov
lock
mov
icebp
cmp
adc
inc
mov
pop
xchg
repnz
inc
sbb
sub
adc
es
arpl
nop
dec
test
fs
or
out
push
jne
clc
and
jge
mov
les
jb
dec
jmp
and
push
insb
sub
in
jmp
jle
fwait
cli
pusha
jp
lods
scas
inc
int3
shl
repz
mov
es
adc
sbb
repnz
pop
cmp
cmpsb
int
pop
push
lcall
pop
scas
mov
dec
cmp
fisttpll
sti
das
imul
mov
aas
pop
ja
add
mov
push
jl
adc
push
jno
lcall
jae
pop
mov
loop
inc
mov
popf
mov
lds
cmp
stos
dec
ja
mov
ds
adc
es
sldt
add
les
scas
fistpll
outsl
gs
mov
add
add
add
hlt
scas
aam
jbe
push
pop
pop
out
adc
pop
lds
sar
pop
imul
pop
imul
pop
and
inc
pop
loopne
jbe
leave
pop
pusha
jmp
mov
cmpsl
inc
aam
xchg
loop
cmp
sbb
scas
sub
lret
mov
dec
inc
loopne
ja
mov
jo
xchg
adc
push
addr16
add
imul
dec
outsl
bound
sbb
je
mov
flds
mov
aam
or
mov
or
adc
pusha
bound
cltd
je
sarl
or
in
ret
orb
sub
mov
mov
scas
int
or
inc
fidivs
pushf
pop
stos
icebp
cmpsb
and
dec
and
xor
aaa
iret
inc
daa
dec
jmp
pop
sbb
xchg
fs
cmp
inc
movb
sbb
jnp
jnp
cmp
movsb
push
sbb
sbb
add
add
add
pop
gs
inc
fidivs
pop
sbb
sti
inc
and
test
lahf
push
or
pop
sbb
mov
nop
mov
pop
xchg
inc
dec
jnp
cmpsl
pusha
adc
push
push
xchg
add
in
jne
xchg
xchg
in
or
add
mov
shrl
and
sub
fistps
popf
bound
fists
testb
lds
xor
sub
pop
ja
je
adc
adc
test
mov
jae
pop
notb
daa
imul
jo
cmp
jp
add
imulb
inc
lcall
movsl
sub
and
pop
loopne
cli
xor
mov
xchg
lock
gs
clc
xlat
je
mov
insb
insl
out
or
fsubrl
dec
shll
addr16
ljmp
aas
and
and
outsl
lret
mov
out
jmp
stc
jae
addr16
add
add
add
orl
pop
loop
imull
mov
aaa
sti
pop
xchg
in
pushw
and
dec
cmp
pushf
aas
mov
xchg
jl
inc
push
jl
jae
xchg
xor
int3
cld
inc
ljmp
shl
ror
mov
sub
push
imul
call
add
imul
adc
inc
iret
sbbb
dec
add
jo
pop
inc
imul
cwtl
and
mov
cmp
mov
int
loopne
mov
in
imul
repz
gs
sti
mov
jmp
add
jb
mov
sbb
int
pop
mov
add
mov
push
sub
movsb
fsubrs
xlat
bound
aas
sbb
fwait
add
mov
scas
cmp
dec
mov
push
ret
xchg
mov
lret
fs
add
add
and
das
cmp
lods
repz
mov
cmp
adc
addr16
add
add
add
hlt
outsb
ja
pop
movsb
push
mov
inc
in
mov
add
jae
mov
mov
push
daa
push
sub
cmp
mov
xor
es
inc
jno
jmp
jo
sbb
lods
test
je
xchg
loopne
mov
jb
sbb
iret
jo
mov
icebp
ror
adcl
push
lea
lods
mov
ljmp
shrl
pop
xchg
mov
std
outsb
clc
std
xlat
out
inc
jp
iret
or
cmp
out
mov
inc
mov
lret
data16
lds
mov
mov
pop
and
cld
aaa
filds
lea
xchg
mov
cmp
jae
sar
push
addl
in
sbb
cmpsb
orl
push
sub
mov
cmc
mov
or
popa
pop
dec
sbb
add
add
daa
push
cld
push
std
jmp
dec
push
orl
adc
incl
imul
add
mov
sub
jmp
rcl
ja
fstpl
sti
outsb
inc
inc
push
lcall
sub
arpl
adc
pop
fldl
fcompl
in
shlb
leave
in
adc
add
pop
adc
int3
jle
cmp
add
xchg
pusha
pop
adc
jns
ret
fstps
xor
dec
fistl
inc
push
mov
call
inc
ja
ss
xchg
mov
jnp
and
adc
outsb
and
cmp
mov
hlt
dec
shrl
mov
lods
xchg
js
push
sti
in
orb
ljmp
or
out
les
in
lods
inc
icebp
cmp
enter
out
loop
jp
pop
pop
add
mov
jnp
ret
mov
and
lahf
seto
and
mov
scas
pop
cmp
push
aam
test
fsubr
dec
push
add
sbb
dec
push
out
aad
and
add
add
add
leave
into
push
cmp
or
addps
jecxz
and
mov
lock
cmp
xor
adc
fstp
lahf
nop
xor
repz
repz
ds
xchg
aam
inc
jmp
mov
int
add
cmpsb
push
cli
cmc
icebp
cli
xchg
std
cmp
sub
mov
lea
inc
sbb
pop
enter
sti
mov
insl
imul
dec
inc
inc
jno
and
cmp
inc
outsl
in
mov
imull
or
test
cmp
out
sub
jo
repnz
fsts
pop
movsl
push
mov
ret
xchg
sub
xchg
paddsw
adc
mov
pop
adc
ret
scas
in
push
cli
sub
or
cmp
mov
icebp
pop
push
push
or
sbb
dec
mov
xchg
shlb
mov
ficomps
test
stos
add
push
mov
or
leave
jne
addr16
add
add
add
imul
xchg
push
mov
add
stos
xchg
push
lcall
jae
push
push
pop
add
or
in
xchg
lcall
push
or
jecxz
dec
ret
mov
xchg
bound
push
sbb
cmp
jne
iret
out
xchg
lods
leave
in
cmpsb
repz
fistps
lahf
sti
movsl
insb
cltd
inc
aam
and
adc
pop
dec
lret
cld
jno
mov
sbb
gs
and
pop
jg
mov
cmpb
mov
jp
xchg
test
sbb
fidivrs
andb
xchg
push
loope
shlb
add
adc
cmpsb
adc
push
stc
hlt
sub
pop
mov
out
push
int3
pop
mov
sub
addr16
inc
sbb
bound
jne
lock
mov
cs
add
or
lcall
jbe
aad
dec
mov
mov
ja
jg
xchg
orl
js
inc
add
add
add
mov
pop
dec
out
push
jmp
inc
rcrl
mov
lahf
inc
push
and
les
adc
dec
mov
or
ror
xchg
mov
mov
rolb
xchg
leave
inc
std
push
jp
int
mov
xchg
jns
and
sbb
scas
mov
mov
cmp
xor
mov
ss
mov
adc
iret
mov
jg
sar
push
loopne
add
fmul
xchg
subl
add
nop
or
psubd
pushf
mov
pop
xchg
or
xlat
daa
lds
lcall
sbbl
mov
add
xchg
add
stos
xor
ret
mov
mov
jns
mov
mov
and
std
adc
push
insb
mov
dec
cmp
xor
mov
inc
or
xor
aaa
adc
ds
dec
leave
xor
add
add
push
dec
lret
jmp
imul
aaa
je
outsl
out
inc
addr16
add
add
add
push
mov
sbb
mov
clc
and
mov
push
pop
into
lock
divl
out
aas
push
jnp
in
xor
fisubrl
xchg
jnp
std
mov
sbb
and
leave
xchg
popa
aas
shrb
mov
ljmp
adc
nop
inc
stc
ljmp
jb
adc
aam
xchg
outsb
dec
outsb
mov
mov
mov
inc
loop
test
test
ljmp
es
pop
mov
mov
aam
push
cmc
inc
xchg
sarl
lahf
push
enter
xor
xchg
outsb
and
cmpsb
pusha
flds
ret
mov
rorb
jae
and
sbb
lea
dec
hlt
jne
pop
movnti
sbbl
pop
aad
daa
cmp
mov
mov
ret
insb
adc
pop
cld
jle
jge
outsb
push
clc
sub
bound
add
add
cwtl
loope
std
jge
cwtl
xchg
push
sub
adc
addr16
add
add
add
sbb
std
sub
or
cmp
jns
jo
cmp
popa
pop
imul
lods
mov
js
jbe
lock
pusha
std
and
in
jns
sub
cmp
dec
mov
into
dec
lods
aad
imul
lds
pop
repnz
mov
mov
paddd
loop
push
dec
les
call
insl
and
sbb
mov
push
or
call
decl
rdpmc
adc
lods
lods
mov
lea
mov
hlt
andb
outsb
enter
push
dec
add
pop
rcrl
adc
decl
clc
les
or
inc
jmp
leave
ja
in
dec
jb
psllq
loop
xor
xor
sahf
setp
xchg
insl
dec
aad
or
mov
pop
das
push
dec
xchg
icebp
call
sub
jns
xor
jg
les
add
add
add
adc
or
pop
lahf
stos
fnsave
lahf
fwait
lcall
into
nop
ljmp
leave
sbb
xchg
addr16
add
jl
sbb
hlt
dec
cmp
xor
and
push
imul
cli
lods
sub
pushf
pushf
push
into
andl
mov
or
dec
sbb
cld
nop
push
ret
arpl
es
push
dec
cld
sbb
jg
lret
scas
je
out
hlt
mov
stc
lcall
xchg
rcl
cld
pushfw
jbe
pop
cmp
mov
pushf
loop
sbb
stc
jne
sbb
sub
mov
das
mov
xchg
or
pushf
popf
and
leave
sub
mov
mov
or
and
addr16
or
sbb
or
and
mov
sahf
cmpsl
mov
jae
int3
sub
je
stos
dec
or
add
add
ret
jg
decl
rol
bound
add
add
add
jno
jbe
lret
and
sbb
adc
into
arpl
cmpsb
jne
shll
sub
cld
loope
mov
mov
dec
xchg
pop
fimuls
mov
mov
repnz
pop
push
pop
lods
pop
lods
mov
icebp
arpl
mov
lock
push
repz
stos
pop
jnp
sbb
mov
push
push
jne
lea
xor
aam
pusha
dec
cli
jge
fdivs
icebp
jle
and
pop
mov
inc
fiadds
stc
dec
rorl
cli
lods
es
push
mov
add
add
adc
push
aaa
push
or
pop
arpl
or
in
add
and
push
or
sti
bound
ljmp
jns,pn
movsl
pop
mov
data16
push
or
aas
pop
daa
jb,pt
arpl
rcll
arpl
das
into
jne
mov
mov
push
fistpll
push
or
cmp
push
adc
mov
out
aad
xchg
sbb
dec
add
add
add
push
mov
call
enter
das
push
sub
or
xor
out
cmc
in
pop
icebp
out
cmpsb
push
out
rcr
out
mov
cmc
and
add
sbb
mov
cmp
pop
aam
loope
adc
or
fidivrs
jne
aad
cs
add
add
fdivs
cltd
push
push
inc
and
iret
adc
dec
xor
insb
in
jecxz
aaa
mov
push
push
outsl
stc
lods
lods
or
js
cmp
stos
push
hlt
mov
movsl
sub
orb
jle
sub
addr16
sbb
loop
adc
push
fwait
sub
xor
push
popf
pop
lret
push
cmp
xchg
addr16
out
adc
dec
xchg
cmp
out
xor
fcompl
mov
add
and
sti
les
fmull
jl
stos
xchg
push
xchg
xchg
mov
jnp
sub
adc
add
add
hlt
gs
dec
adc
ret
enter
add
add
add
fnstcw
outsl
pop
dec
jl
fimuls
cmpsb
fimuls
jb
cwtl
fsubrl
lret
jmp
inc
push
aaa
and
jnp
out
dec
stos
jae
lss
jmp
xor
mov
inc
mov
push
jae
fdivp
loopne
push
fiadds
das
jnp
stos
out
movsb
sub
ds
pushf
icebp
mov
push
repnz
out
xchg
call
in
rorb
adc
data16
cli
mov
sub
loope
xchg
mov
push
ret
xchg
lret
negb
int
int3
jge
sbb
mov
push
mov
add
out
xchg
xor
lock
xchg
push
es
or
push
xchg
mov
enter
mov
xchg
mov
and
xbegin
subl
add
ja
jne
mov
dec
sbb
leave
stos
sahf
xchg
out
js
jecxz
cs
mov
add
aas
gs
pop
repnz
dec
add
add
add
sbb
inc
mov
jl
gs
jbe
mov
xor
movsb
cwtl
rcrl
jecxz
pop
fbstp
jecxz
pop
fstp
scas
mov
fstl
out
pop
pop
sub
fldl2t
pop
sahf
imul
or
pop
in
push
mov
rcrl
les
ret
push
fldl
jns
les
test
sbbb
cwtl
jmp
add
das
mov
insb
dec
ret
adc
or
jae
add
dec
xor
mov
loopne
mov
xor
or
mov
movl
mov
sub
mov
out
shlb
icebp
arpl
pop
out
cld
dec
repnz
das
pop
or
push
mov
lahf
xor
mov
neg
pop
sbb
and
frstor
in
cmpsb
mov
add
mov
out
fisttpll
lock
inc
movsb
addr16
add
add
add
mov
mov
int
iret
push
orb
shll
pop
sahf
pop
shll
pop
fisttpll
js
jl
mov
push
nop
aad
mov
mov
popf
and
mov
lods
push
push
call
adc
add
cmp
rcr
xchg
pop
mov
inc
pushf
rolb
jno
shrl
sbb
clc
push
fs
shrb
cmp
xor
pop
lcall
push
sbb
sub
add
adc
xchg
pop
loop
xchg
call
call
aaa
or
mov
push
es
jp
movsb
ror
pusha
mov
lods
mov
push
mov
push
popa
mov
ret
pop
push
cmc
xor
add
or
jle
ds
and
dec
das
ret
mov
call
jle
adc
mov
push
lahf
mov
cmp
lea
adc
sarl
ljmp
pusha
xor
or
add
add
mov
ljmp
add
add
add
adc
test
jno
jnp
xchg
sbb
outsl
fisubs
pop
lahf
mov
xchg
cmp
insb
lret
outsb
in
sub
ja
ja
mov
sbb
cmpsb
mov
push
fwait
lds
loope
dec
lret
loopne
mov
or
push
cld
cmp
lret
mov
pop
test
sub
jg
roll
lret
cmp
cmp
arpl
arpl
in
popf
jne
mov
xchg
push
push
imul
jecxz
lea
mov
mov
cli
push
sbb
pop
orl
pop
and
roll
sub
bound
mov
adc
inc
pop
mov
mov
jae
lock
push
push
or
loop
mov
rorb
mov
push
mov
mov
int3
push
sbb
jmpw
fnstcw
jo
sahf
jb
out
leave
addr16
add
add
add
into
mov
sbb
shll
and
add
adc
or
call
clc
lret
test
mov
cmc
sbb
mov
adc
add
fcom
or
outsb
dec
mov
jnp
mov
adc
pop
rorb
loope
mov
data16
fadds
pop
mov
cwtl
call
enter
mov
scas
into
push
dec
adc
pop
and
aaa
stc
lock
inc
xchg
dec
jg
rcl
inc
push
clc
sbb
dec
jg
xchg
sub
fsub
sub
fs
sbb
or
shl
push
shrb
out
inc
or
push
leave
or
mov
jp
push
sub
jecxz
cmp
pop
ret
dec
or
xor
cmpsb
sti
sahf
pushf
mov
jmp
jae
push
aaa
pushf
jle
lea
je
xchg
cmp
imul
out
mov
mov
pop
nop
and
add
add
add
mov
mov
jns
push
mov
lock
xor
out
lret
orb
xor
sub
int
icebp
scas
ja
es
cmp
mov
cmp
int3
cli
pop
mov
lea
int3
push
pop
and
int3
loopne
inc
int3
push
push
mov
out
pusha
add
push
sarb
repnz
popf
outsb
rcr
icebp
cmc
xchg
jmp
int3
pop
adc
inc
daa
push
mov
xchg
flds
mov
add
sbb
cmp
xor
sub
fisubrs
cmp
jle
push
xor
push
hlt
data16
fstps
or
imul
pop
lahf
lods
daa
cmc
mov
lods
xchg
xchg
mov
cwtl
adc
inc
add
lock
jp
not
push
and
shrl
test
push
add
imul
mov
popa
fsubr
mov
out
les
xchg
dec
sbb
js
add
dec
stc
mov
ljmp
addr16
add
add
add
xor
lcall
cmp
idiv
mov
mov
fcoms
xchg
xor
pop
cmp
mov
scas
dec
jmp
sub
and
int
decl
shl
pop
jle
int
popf
pop
les
lods
gs
jmp
lods
or
je
mov
lahf
push
in
clc
jl
adc
daa
mov
rcll
dec
pop
aaa
xchg
dec
fldcw
or
into
repz
icebp
stos
mov
ljmp
lret
lods
sub
pop
xchg
aad
pop
mov
mov
cmp
and
mov
outsl
repnz
pop
jb
in
clc
mov
dec
xor
mov
popa
mov
out
nop
pop
pop
dec
imul
push
shll
jns
mov
shrb
mov
lea
dec
lock
insb
out
cmc
jns
outsb
call
push
pusha
add
add
add
jg
cld
lcall
packuswb
add
add
add
lea
xor
xchg
cs
jns
mov
rclb
pop
sbb
jae
xlat
rorb
in
cmp
insl
pop
mov
xor
jnp
rclb
sub
pop
add
and
stos
xchg
mov
or
pop
mov
push
adc
cmpsl
js
sub
ds
xor
loope
cli
or
mov
insb
jbe
xor
test
push
shlb
jns
int
aaa
and
fnstsw
iret
stos
cmp
sbb
xchg
sub
icebp
lcall
addb
xor
and
pop
fistpl
dec
fcoms
lea
xor
jb
out
pop
lods
jmp
fisubl
test
es
in
popf
push
in
push
leave
jl
in
xchg
sahf
jo
pop
push
data16
sbbl
sar
and
scas
ret
setne
jecxz
cmpsb
add
inc
cmc
pop
inc
fldl
lods
lds
mov
aad
add
add
xchg
mov
pop
int3
call
addr16
add
add
add
cmpl
insl
push
jo
or
adc
loopne
dec
out
sbb
movsb
xor
pop
push
sbb
js
jl
imul
loopne
aad
mov
and
and
xchg
push
addr16
jb
shrl
psubq
dec
fdivrs
sub
mov
scas
outsb
loopne
add
mov
add
lods
xchg
push
repz
pop
xchg
icebp
mov
movsb
cmp
cmp
mov
push
dec
ljmp
adc
loop
adc
jge
mov
and
popa
outsl
adc
adcb
mov
test
popa
into
sbb
inc
cwtl
cld
sbb
mov
dec
mov
aaa
mov
sub
arpl
aad
jp
fisubl
fbstp
test
lods
sti
es
or
addr16
out
mov
add
or
mov
and
adc
addr16
add
add
add
or
mov
jb
pop
outsl
mov
pushf
mov
jp
add
clc
sbbb
jnp
add
sub
sbb
mov
insb
mov
mov
cmc
rcr
dec
jb
movsb
aad
outsb
push
add
in
inc
imul
pop
cmp
mov
pop
fisubrl
and
sbb
cli
jbe
cmp
xchg
lcall
outsl
xchg
mov
ret
sub
push
lods
xchg
test
jl
mov
lea
inc
pop
decl
out
das
jae,pn
addr16
gs
imul
add
sub
xor
mov
mov
inc
mov
and
dec
ficoml
dec
orb
push
pop
adc
and
loop
xlat
mov
jns
out
hlt
loopne
das
cmp
pushf
xchg
xor
imulb
prefetch
rcrb
les
out
push
and
addl
fsubrl
mov
out
cmp
ret
or
sbb
add
add
add
xchg
adc
hlt
in
push
fnsave
xchg
or
lret
dec
inc
les
push
xchg
jo
cmovp
dec
cmp
int
push
std
xchg
addr16
xchg
decl
mov
mov
xchg
mov
xor
bound
mov
mov
int
fstps
pusha
cmpsb
cmpsl
cli
repz
inc
mov
in
in
out
pop
dec
push
add
xorb
sub
mov
test
into
dec
inc
dec
adc
daa
orb
stos
pop
lahf
rep
xchg
int3
fucom
pop
xor
mov
dec
leave
jmp
mov
cmpsl
hlt
adc
mov
ss
lret
mov
xchg
cli
jp
jbe
mov
xchg
imul
into
jecxz
mov
inc
fiaddl
cmp
xchg
ljmp
loop
shrb
ds
stos
enter
jp
inc
jbe
add
lret
stos
imul
xor
fs
mov
out
cwtl
jae
sahf
mov
or
push
shll
out
pop
pop
pushf
push
xlat
dec
loop
addr16
add
add
add
bound
xchg
stc
pop
xor
mov
leave
test
js
test
dec
dec
adc
rep
adc
sbb
lahf
inc
mov
or
mov
pop
add
addr16
pop
es
lds
xchg
cmp
jb
and
push
pop
fidivs
sub
insb
aad
pop
cmp
das
bound
sub
daa
test
test
fs
pop
ljmp
mov
mov
inc
pop
mov
ljmp
repz
dec
jp
ja
aas
adc
mov
lret
pop
insb
jle
inc
mov
ret
jmp
test
push
mov
cmp
inc
rorl
scas
js
subl
push
pop
cli
pop
in
in
fs
clc
fistpll
mov
sub
aad
lods
sahf
adc
push
xlat
xlat
sbb
loopne
and
pop
negb
shlb
lahf
adc
fdivrs
dec
lods
stos
push
lcall
hlt
mov
hlt
insl
aad
push
add
add
add
sub
cltd
cmp
popf
or
push
mov
pop
sbb
cwtl
jecxz
inc
imul
sahf
jae
clc
in
xor
outsb
mov
pop
lret
mov
sbb
call
dec
mov
sub
into
cmc
insl
sub
mov
fbstp
cmpsl
mov
cmp
mov
xor
adcb
in
dec
movsb
pop
in
pop
stos
mov
adc
pop
pop
jmp
mov
and
or
mov
dec
add
cmpsl
cmc
jecxz
push
out
imul
notl
jbe
icebp
xor
mul
dec
sbb
cmp
dec
jg
mov
add
mov
movsl
fcoml
faddl
cltd
mov
or
inc
add
sub
cmp
ja
push
ljmp
xor
loop
pop
imul
or
arpl
add
add
jbe
idiv
imul
dec
sarl
addr16
add
add
add
cmpsl
sbb
pop
xor
testl
xor
fldenv
or
js
inc
outsb
jmp
jnp
cltd
cli
cltd
outsl
xchg
add
std
mov
pop
push
fnstenv
xor
mov
adc
xchg
sbb
or
popf
mov
sbb
aaa
inc
mov
add
aas
jmp
xchg
loop
paddsw
add
pop
int3
cmp
fcoms
pop
ret
fistpll
xchg
stos
in
pop
lds
mov
xlat
add
add
mov
mov
xchg
clc
push
jns
add
lret
nop
ret
adc
arpl
push
rolb
jns
scas
mov
adc
mov
cwtl
mov
insl
ret
pop
mov
adc
test
rcr
lea
nop
inc
mov
push
jae
fwait
cmp
stos
sarb
addr16
add
add
add
dec
js
inc
fildl
add
mov
mov
rcrb
mov
lret
nop
lea
testl
sbb
je
repnz
sub
nop
jge
push
xor
sbb
mov
pop
jg
mov
add
ja
imul
and
fsts
push
or
dec
mov
into
jnp
inc
sub
mov
xchg
jg
mov
pop
pop
sub
xor
in
addl
imul
mov
cs
jl
or
jae
adc
bound
sub
aad
out
jo
add
data16
xor
inc
ret
addl
pop
scas
jp
stos
arpl
push
jne
xchg
je
mov
scas
test
add
fiadds
stos
jb
mov
lods
loopne
add
add
clc
mov
and
hlt
stos
test
dec
addr16
add
add
add
out
or
or
gs
push
mov
fistl
fisubrl
scas
gs
mov
cltd
pop
je
dec
cli
or
pop
xchg
aad
mov
and
sbb
leave
mov
mov
jp
lds
dec
or
and
xor
sbb
inc
pop
int3
lock
sbb
and
jae
enter
idivb
push
add
inc
xchg
push
mov
hlt
and
enter
cmpsb
cmpsb
iret
loop
call
jecxz
cs
cld
pop
adc
jb
cwtl
fdivs
rcr
scas
mov
inc
sbb
jge
mov
pop
inc
or
aam
lea
add
xlat
fcoml
dec
fxch
popa
ftst
or
fisttpll
cltd
xchg
lahf
mov
into
into
mov
push
aas
adc
pop
xchg
inc
shl
mov
push
fcoms
stos
fdivrs
or
outsb
add
push
out
test
pop
xor
add
add
shr
mov
enter
addr16
add
add
add
movsb
lret
cmp
xchg
mov
test
dec
sbb
test
mov
in
insb
inc
cli
sbb
rorb
jnp
xchg
fs
push
sbb
icebp
mov
push
cli
or
insl
jae
inc
mov
popa
repnz
orb
mov
mov
lock
sub
inc
push
adc
mov
cld
es
leave
testl
inc
jg
leave
ds
mov
pusha
hlt
ja
inc
sarb
inc
mov
cmpl
adc
mov
add
cwtl
flds
mov
pmuludq
cmp
leave
fld
adc
add
xchg
cmp
aaa
xchg
sub
cld
rcrb
and
adc
adc
mov
sub
adc
imull
sub
push
xchg
sbb
xor
adc
insl
testb
jmp
test
or
fdivs
mov
add
add
add
sub
inc
dec
xchg
out
clc
jo
pop
fst
sub
outsl
jo
inc
jp
mov
dec
sub
jnp
jle
jl
jge
push
pop
lret
lret
lds
popf
loope
mov
push
in
or
sbb
add
ljmp
mov
dec
xor
scas
inc
addr16
dec
mov
pop
xchg
mov
pop
xor
pusha
mov
das
lds
fmuls
push
cld
iret
dec
add
repnz
mov
xor
hlt
imul
mov
xor
mov
sbb
push
mov
rcrw
lods
xorb
ret
pop
push
out
std
jne
or
pop
push
lods
fisubrs
xchg
cmpb
jno
push
jp
loopne
or
ret
jg
cmp
inc
sbb
shrl
cs
enter
add
add
mov
pusha
mov
insl
mulb
add
add
add
roll
cld
daa
xchg
add
sub
mov
push
inc
jnp
int
enter
out
or
xchg
push
adc
or
ljmp
in
xchg
inc
and
mov
mov
jecxz
or
cmp
and
jns
sub
enter
mov
mov
xor
xchg
push
ficomps
add
or
and
pop
mov
test
dec
in
sub
hlt
mov
sti
sub
je
nop
jmp
sbb
push
mov
sti
outsl
aad
jp
test
flds
lods
loopne
in
test
jmp
and
inc
pop
ror
pop
rorl
xor
add
sub
jnp
or
popf
or
repz
xchg
out
fucomi
xchg
sub
push
jnp
add
add
movsb
jae
jnp
mov
ja
mov
jg
jo
pop
add
add
add
push
pop
addl
adc
sbb
lds
fldcw
mov
xchg
push
cld
call
decb
or
sahf
shlb
inc
or
cmp
cmc
pusha
shlb
jecxz
inc
and
add
mov
and
dec
inc
mov
xor
lods
and
inc
sub
push
cmp
lret
cmpl
ret
ret
xchg
sti
lock
adc
xchg
push
arpl
aas
pop
mov
jg
out
pop
push
xchg
dec
inc
sahf
cwtl
bound
xor
in
imul
inc
inc
jae
dec
sbb
mov
pop
movsl
aam
dec
outsl
xchg
inc
stos
xlat
popa
cli
push
inc
xchg
rol
fiadds
ret
lea
mov
mov
mov
ljmp
add
enter
and
daa
mov
add
xor
xlat
out
cld
jno
fstp
addr16
add
add
add
sbb
push
or
jo
sub
in
jge
imul
add
push
adc
xchg
xchg
or
cmp
imul
inc
ljmp
inc
fdivrl
fs
lods
mov
aam
lcall
jp
lea
out
sbb
test
in
sub
xor
lea
or
jb
jmp
loope
mov
scas
mov
add
pop
jnp
adc
jmp
mov
iret
pusha
insl
testl
adc
movsb
mov
push
push
inc
jno
enter
test
push
test
aam
mov
mov
out
mov
orl
xchg
stos
inc
mov
jno
push
pushf
xchg
ret
and
xchg
test
xchg
jl
fs
sahf
fstl
sbb
in
push
lret
xchg
lods
jae
push
jo
lahf
jmp
lds
hlt
cmpsl
aad
pop
js
and
sbb
add
mov
add
jecxz
sti
push
addr16
add
add
add
mov
cwtl
ljmp
mov
icebp
fnstsw
int
scas
enter
call
ss
fs
pop
add
loope
and
xor
xchg
lods
out
leave
adc
stos
cmp
xorb
popa
lahf
jbe
mul
dec
push
lahf
decb
xchg
ja
js
and
push
scas
lea
stc
fcmovne
push
dec
add
test
cmp
imul
outsl
scas
mov
sahf
adcl
fs
pushl
sbb
xchg
arpl
mov
ficoml
dec
out
and
ret
adc
ret
movb
out
mov
sbb
rcll
jbe
inc
xor
sub
mov
ror
and
shrb
pop
std
jmp
lret
shlb
jmp
lret
mov
mov
scas
iret
lds
pop
and
jl
mov
pusha
jb
adc
js
sbb
adc
add
add
push
into
push
push
inc
lahf
mov
addr16
add
add
add
inc
lds
stos
pop
mov
andb
shl
jecxz
mov
in
xlat
stc
mov
mov
fidivrs
xchg
adc
sbb
push
mov
shll
mov
sub
push
jae
jno
xor
add
jb
idivb
aas
jecxz
push
rcr
pop
push
int
cmp
hlt
into
inc
les
loope
shlb
sbb
fldl2t
dec
pop
jge
hlt
sub
xor
cmpsb
fisubrs
lret
repz
push
or
in
pop
cmpsb
xor
adc
je
ror
push
cld
cs
jge
pop
test
arpl
mov
push
lock
cmp
bound
push
or
enter
pushf
aaa
pop
fsts
loop
mov
in
add
mov
and
pop
push
jge
mov
gs
mov
sarb
loop
daa
stos
popa
dec
iret
push
jbe
ret
add
and
mov
jg
or
bound
add
add
add
leave
or
jno
ja
mov
pop
idivl
jns
inc
push
jno
pop
insb
std
cmc
out
cmp
loopne
mov
adc
mov
xchg
cmc
lods
cld
jb
aas
dec
and
push
dec
lcall
stos
gs
nop
jmp
mov
pop
enter
and
fildl
mov
sub
mov
cmpl
lcall
jbe
imul
loopne
xor
shlb
aam
mov
mov
sbb
mov
pop
pop
cmpsl
pushf
push
js
inc
pop
or
sti
shrl
shll
dec
aas
push
add
mov
clc
mov
mov
jae
inc
jno
test
in
mov
dec
je
mov
push
testb
sarb
fsubs
pushf
inc
inc
pop
xor
je
out
je
xorb
sbb
fdivr
pop
movsb
fstpt
imul
leave
std
cmp
add
lahf
pop
fcmovb
fcmovnb
lahf
pop
cmpsl
jne
mov
orl
add
add
lcall
add
test
jge
aad
xor
fldl
push
in
sub
lea
icebp
hlt
test
sub
pop
mov
pop
or
mov
loop
pop
pop
enter
mov
jmp
scas
pop
sbb
jge
mov
aam
inc
sti
mov
mov
mov
cmp
loop
mov
jno
loopne
inc
lret
mov
pop
inc
daa
jl
scas
into
inc
pop
dec
aam
mov
mov
inc
mov
enter
push
add
inc
mov
pop
mov
andb
jp
stos
xor
stos
inc
pop
imul
mov
test
sub
push
scas
cmp
in
cmpb
mov
inc
dec
push
fimuls
jbe
sbb
fmull
or
mov
cmp
jbe
out
movsl
les
pop
or
cmp
push
out
push
push
into
rclb
leave
sahf
pop
testl
in
js
add
add
add
dec
lret
test
push
dec
fbstp
clc
inc
push
dec
iret
jg
or
dec
fwait
pop
das
push
mov
push
jne
push
cli
arpl
dec
add
mov
lods
imul
ja
cmp
mov
or
int
fbstp
aas
push
js
push
jnp
add
cld
push
dec
out
ss
lcall
dec
pop
push
aas
sahf
pop
addb
add
fistps
add
montmul
cmpsb
add
mov
pop
incb
stos
mov
in
add
imul
in
inc
sbb
add
add
or
jae
test
clc
stos
stos
ret
adc
mov
shrl
leave
and
jp
xor
push
mov
sub
sbb
xchg
fisubrl
pusha
movsl
mov
pop
shlb
or
inc
sub
cld
adc
dec
shrb
rorl
bound
pop
scas
aam
inc
pop
mov
fstps
pop
ljmp
add
jp
cs
imul
xlat
adc
dec
dec
mov
sub
stos
mov
sub
sbb
mov
xchg
js
scas
adc
sbbl
sbb
xchg
dec
pop
sbb
aaa
sbb
mov
push
push
jo
ljmp
cmpsl
cmp
jg
pop
mov
addb
outsl
add
adc
or
out
in
mov
ds
cld
jbe
sub
pop
xchg
jl
pop
sbb
or
sahf
cmp
pop
and
test
dec
mov
xchg
inc
daa
inc
adc
outsl
inc
xor
repnz
jns
dec
icebp
loopne
rclb
add
out
mov
sahf
or
adc
mov
dec
das
stos
pop
pop
or
jo
mov
lahf
data16
mov
nop
xor
in
mov
mov
lret
jmp
and
repnz
movsb
jle
arpl
cmp
add
add
add
lcall
sbb
push
lea
and
sbb
push
js
fldt
ljmp
out
add
sub
pop
test
push
mov
mov
aam
je
repnz
fidivrl
dec
pop
adc
sub
sub
adc
push
or
pop
jbe
push
dec
add
jb
mov
cmp
mov
mov
rcr
in
jnp
out
sti
scas
mov
xor
mov
mov
std
movsb
cwtl
ret
jge
xor
cltd
add
sub
mov
jg
aas
push
mov
mov
fdivrs
imul
dec
mov
mov
divb
movsl
mov
or
add
xor
rorl
sbb
stos
sbb
mov
xor
or
mov
dec
fldt
sbb
fildl
add
add
jmp
sub
or
xlat
addr16
add
add
mov
into
xchg
dec
rcrb
aaa
add
outsl
add
push
add
jo
js
lea
dec
sbb
sbb
jl
push
or
add
cld
out
sub
push
mov
sub
fsubl
push
hlt
scas
push
aam
fxch
xchg
and
nop
mov
dec
pushf
jae
pop
incl
mov
adc
mov
lret
inc
push
add
jmp
lea
xor
mov
test
add
push
rcr
push
out
dec
add
mov
jns
cmp
in
and
push
std
xor
jl
aad
push
adc
and
inc
push
push
sub
loop
add
cmp
sbb
push
in
pushf
mov
iret
jbe
jbe
and
das
fs
sbb
and
or
sti
pop
mov
jns
cmp
xchg
in
push
sarl
shr
fwait
add
jnp
add
add
mov
fnstenv
push
out
lock
add
imul
add
shrl
xor
pop
inc
lret
stos
add
fdivrp
mov
fwait
ret
in
xchg
mov
in
sbb
mov
lea
fisubl
cmp
lcall
mov
pop
iret
xor
xchg
fdivl
mull
cmp
and
adc
cmp
jns
pop
jnp
popa
adcl
ret
adc
push
cmp
idivl
xlat
mov
nop
mov
adc
inc
cmp
inc
out
pop
popa
lea
pop
fisubrs
inc
cmpsl
test
sub
adc
pop
inc
lret
add
dec
adc
or
loop
push
cltd
and
cs
fwait
imul
fmull
sarb
inc
fdivrl
and
stos
xlat
stos
or
arpl
fsubl
mov
fists
movsb
stc
mov
jecxz
sti
iret
mov
adc
fadd
pushf
mov
dec
cmpsb
enter
add
cld
je
jbe
jns
sbb
es
test
add
add
add
adcb
pop
jns
ljmp
sbb
mov
sbbl
orl
xchg
mov
pop
push
pusha
fs
sti
out
jbe
scas
es
push
into
xchg
inc
jl
cmp
xor
mov
cmp
pusha
adc
cmp
je
ret
jecxz
jo
idiv
xlat
cs
and
addr16
test
in
xchg
out
adc
dec
lea
dec
xor
in
push
jns
push
jne
and
repz
iret
mov
pop
cmp
adc
loop
mov
ffree
mov
rorb
mov
int3
and
addl
and
rolb
clc
mov
insb
or
xor
sub
imul
out
adcb
mov
insb
fidivrs
std
push
sub
andb
dec
inc
fbstp
xor
or
test
clc
dec
adc
and
add
add
cltd
jmp
fildl
or
jb
xor
add
add
push
inc
adcl
inc
js
dec
mov
data16
movsb
mov
repnz
jo
pop
push
stc
imul
xchg
pop
cmp
push
inc
cmp
sub
cltd
mov
fcmovbe
imul
jne
xlat
mov
mov
insl
push
cltd
rcrl
cmp
pop
outsb
dec
test
inc
sub
lcall
sbb
xor
cltd
mov
cltd
xlat
frstor
lret
ficomps
mov
inc
jno
mov
fcomp
in
es
mov
aas
jmp
loop
dec
mov
sub
jbe
jecxz
out
inc
mov
inc
sahf
or
stos
fbld
and
cmp
cli
sub
ljmp
out
cltd
repz
mov
into
push
insb
cmpsl
stos
in
adc
mov
mov
fnstsw
fisttpl
xor
jno
test
pop
xchg
push
jne
and
mov
mov
push
jg
dec
xchg
dec
je
lea
imul
add
add
lret
xor
ficompl
cwtl
dec
push
test
fimuls
push
in
pushf
xor
mov
push
jecxz
mov
sub
jbe
or
or
repnz
xchg
mov
sahf
push
fisttpll
fldt
adc
push
inc
and
leave
mov
push
and
xor
or
out
mov
ds
dec
inc
dec
add
vmovd
adcb
and
loopne
imul
sub
scas
dec
and
ds
lock
xorl
rolb
aad
or
mov
into
or
mov
in
popa
push
dec
cli
mov
jae
xchg
dec
mov
out
mov
jb
mov
cmp
push
inc
cmc
push
cmpb
dec
mov
mov
add
iret
mov
fucomip
push
insb
xor
orl
add
add
add
mov
mov
lds
jb
jb
push
cmpsb
mov
push
sar
pop
xchg
or
imul
dec
aad
mov
push
pusha
daa
mov
dec
fistpll
or
or
or
xchg
das
ret
pop
cltd
out
and
mov
cmp
insl
nop
inc
jnp
mov
jecxz
fcmovnu
sbb
push
mov
pop
mov
jmp
xor
stos
jns
repz
jg
mov
push
jg
in
inc
xchg
push
xchg
stos
pop
and
xchg
icebp
fsts
ret
lret
shl
sbbb
or
fcoml
cltd
sbb
push
and
pushf
add
mov
cs
data16
jmp
mov
add
mov
pop
xor
cld
mov
in
mov
push
sub
nop
add
out
xor
roll
add
add
dec
out
iret
jmp
aas
in
push
in
bound
insl
add
add
add
nop
clc
ffreep
imul
add
dec
js
inc
mov
loope
mov
and
add
pushf
xor
dec
add
jno
leave
lea
add
xor
jnp
out
ret
xor
and
fstpt
inc
ret
pop
xchg
ret
shll
fsubr
adc
mov
out
rcrl
mov
xor
aaa
cmpsl
cmp
sbb
push
sbb
stos
mov
mov
xchg
jns
sbb
popa
mov
dec
cmovno
aas
inc
xchg
repnz
inc
insl
xor
add
lea
mull
xchg
push
out
fwait
or
int
or
mov
daa
imul
scas
orb
push
add
fisttpll
push
bound
jno
mov
mov
adc
mov
pusha
pop
dec
xchg
mov
adc
add
pop
cmpsb
push
jnp
std
cmpsb
pop
dec
sub
sub
mov
outsb
add
add
add
mov
dec
pop
movsl
and
cs
jle
pop
fidivrs
mov
jb
cltd
adc
pop
cmp
in
mov
aam
rsm
add
and
nop
inc
add
pusha
cmp
mov
cli
divl
pop
add
mov
push
mov
xchg
mov
jecxz
pop
in
or
jle
cltd
mov
aam
jmp
rcl
icebp
rolb
rcrl
adc
and
pop
mov
pop
mov
lahf
fdivrs
arpl
cli
add
imul
jbe
into
sbb
cmpsb
shl
cli
in
paddsb
sti
test
mov
gs
or
or
xchg
xchg
test
pop
sbb
push
cmp
cmpsl
loope
cli
lods
scas
mov
aas
pusha
stos
add
mov
mov
jnp
loopne
add
js
repnz
es
jle
je
inc
iret
int3
adc
and
lock
or
mov
in
lods
imul
neg
std
sub
dec
or
std
xchg
outsl
add
add
add
jb
mov
dec
out
out
inc
sub
or
push
lds
dec
mov
pop
jo
pop
daa
push
and
adc
xchg
mov
inc
pop
pop
or
add
lcall
sub
punpckhwd
or
lods
xor
ret
and
leave
mov
mulb
leave
in
jns
mov
sbb
pushf
sti
je
adc
loopne
in
int3
shlb
das
xor
fs
daa
jnp
rclb
loope
cli
outsl
insl
mov
add
fdivl
sbb
cmp
sub
jnp
movsl
das
cmpsl
xchg
outsl
in
inc
adc
mov
sub
pop
loopne
xor
lcall
jnp
dec
int3
xchg
icebp
mov
push
dec
and
xchg
or
mov
movsb
mov
dec
xchg
jne
std
arpl
ja
aam
pop
call
pushf
pushf
outsb
daa
pop
daa
xchg
mov
pop
fdivr
pop
dec
ficompl
mov
xor
out
add
add
cs
xor
cltd
ret
test
add
add
add
xor
xchg
or
int3
fwait
dec
pop
pop
sub
mov
adc
inc
xor
push
daa
subb
push
xchg
in
hlt
mov
add
mov
icebp
cmpl
cltd
cmp
lret
mov
jg
mov
or
mov
dec
insl
movsb
inc
das
test
int
dec
sub
cmp
sbbb
add
bound
in
data16
sub
xchg
and
dec
or
adc
shll
repz
dec
repz
sti
jnp
sub
push
cmp
movsb
mov
iret
test
in
filds
push
and
shlb
xor
int3
gs
mov
sub
jmp
mov
mov
mov
movsb
hlt
or
sub
mov
push
pop
div
ret
imul
mov
push
mov
jp
lcall
out
sbb
sbb
addr16
add
add
add
mov
shlb
adc
aaa
push
inc
sub
aaa
xor
popf
cmp
mov
push
cli
dec
icebp
fs
xor
xor
lret
movsl
jno
mov
cmp
or
jbe
cmpsl
sahf
insl
push
mov
repz
xor
xor
mov
jecxz
in
fs
pop
and
push
cmpsl
ficompl
in
mov
pop
xchg
pop
add
mov
testb
cmpsb
ss
aaa
les
sbb
xchg
sbb
outsb
cmp
sahf
add
pop
sub
jb
push
loop
nop
pop
xor
mov
mov
jb
push
popa
hlt
jnp
mov
dec
inc
out
loope
jno
inc
xor
pop
stc
lds
scas
test
out
je
aam
inc
inc
cmp
test
pop
push
lahf
lea
fsubrp
sub
add
and
cli
xor
pop
xchg
arpl
sub
add
add
sub
ja
mov
inc
imul
add
add
mov
fisubl
xchg
sbb
faddl
stos
mov
mov
sbb
xorb
push
out
push
test
adc
mov
jmp
pop
leave
sbb
lret
or
jmp
xor
nop
test
inc
and
ret
sbb
push
add
or
mov
sti
stos
push
test
and
and
push
pop
js
fnclex
call
imul
pusha
and
xor
cs
or
dec
jbe
jle
xchg
push
sbb
popf
mov
ret
and
pop
mov
pop
push
cld
ficoms
xchg
popa
nop
addl
lcall
xlat
push
push
push
add
pop
pusha
sahf
jne
lock
xchg
adc
rcll
pop
sub
sub
xorl
sarl
repnz
mov
cmp
inc
ja
add
loope
add
add
cmp
jnp
outsl
cmpsb
loopne
cmp
add
add
add
push
xor
aaa
fistpl
lds
jo
inc
pop
add
pop
loope
jmp
mov
movsb
sbb
pop
in
popa
push
out
in
and
sahf
jge
xor
and
lcall
pop
cmp
je
cmp
add
pop
movzwl
cli
fnstcw
nop
push
sub
stos
mov
sbb
je
jo
lock
push
icebp
sub
ja
in
sbb
push
adc
add
notb
mov
rcrb
jbe
aad
dec
or
jmp
adc
mov
in
movsl
into
mov
or
pushf
mov
push
mov
mov
cld
xchg
rorl
pusha
push
pop
fcom
mov
cwtl
jae
sub
insb
decb
mull
cmpsl
ja
insb
sbb
cmp
movsb
insl
push
jmp
inc
cmc
mov
arpl
xchg
xchg
data16
and
xor
add
add
cli
xchg
jle
push
je
nop
push
test
add
add
add
sbb
gs
sti
push
pop
in
mov
fnstcw
popf
cmp
fwait
jae
mov
shrl
insl
shr
mov
xor
pop
into
aam
enter
jmp
push
pop
add
push
sahf
andl
sub
not
lret
fistps
cmovge
jo
adc
sbb
sub
aad
js
or
test
repnz
addr16
les
pop
add
pop
test
in
jle
xor
xor
lods
je
mov
xchg
xchg
iret
cmp
push
rcrb
pop
sbb
addb
push
mov
cmp
sub
jg
sub
add
test
mov
cwtl
xor
movsl
jecxz
dec
rclb
jb
or
mov
mov
sub
sahf
sbb
lret
test
pop
test
or
sub
sbb
jp
inc
aaa
dec
fwait
jnp
aad
sbb
aad
addr16
add
add
add
xor
push
mov
push
jo
xor
push
ret
inc
sbb
push
jne
ja
xchg
push
test
push
sub
push
fistpl
xlat
daa
jl
push
outsb
mov
fstl
adc
out
add
jecxz
inc
add
cltd
sbb
or
into
push
jns
mov
lret
ret
inc
arpl
outsb
call
movsb
sub
daa
push
ljmp
inc
mov
rolb
out
adc
inc
mov
jg
loope
and
inc
mov
shlb
mov
out
mov
mov
xor
xor
aam
scas
dec
mov
or
add
ss
imul
inc
xchg
aaa
test
jl
cmp
out
mov
inc
mov
jno
inc
pop
or
out
lds
or
xlat
aam
lret
addr16
out
xchg
test
mov
std
mov
sub
cwtl
mov
jbe
add
add
add
cs
and
and
xor
cmpl
pop
mov
sub
stos
mov
xchg
fisttps
aam
repnz
pop
cltd
sti
jmp
fs
data16
and
jl
inc
jo
add
jne
dec
mov
jbe
aaa
inc
mov
icebp
out
and
mov
scas
cmp
sub
sub
sub
pop
cmpsb
push
or
popa
jne
inc
insb
or
sub
sub
ds
add
mov
cmp
inc
fisubs
jp
loopne
xchg
in
in
int
dec
pop
pop
push
jmp
aas
stos
aaa
sub
pop
imul
fs
icebp
cmc
loop
inc
sbb
out
sbb
fs
clc
insl
inc
mov
sub
stc
fnstenv
pushf
int
lock
mov
loope
ret
sahf
dec
mov
sub
pushf
xor
pop
rorl
incb
outsl
sti
adcl
xchg
fisttps
mov
lds
ja
add
add
add
sub
out
ss
jae
in
adc
sarl
lods
daa
jno
sbb
mov
push
mov
jmp
push
add
test
or
negl
scas
and
xchg
add
imull
and
call
lret
sub
out
mov
jmp
dec
pop
fdivrp
mov
negl
xchg
lret
jae
fiadds
les
je
cmp
mov
push
inc
js
push
sbb
lds
out
aam
into
xchg
outsl
out
adc
sbb
jb
insb
loopne
sahf
mov
out
shrb
and
sbb
sbb
sbb
sub
cmp
lds
pop
movsl
std
mov
cwtl
jo
ret
mov
mov
in
cmp
js
nop
xchg
mov
cmc
pop
xchg
lret
imul
add
inc
in
mov
mov
out
sub
sbb
js
add
add
add
xor
insl
inc
mov
jo
dec
rcrb
bound
pop
rcll
jg
mov
lret
xlat
mov
lret
pop
clc
sub
repnz
test
mov
mov
nop
data16
and
dec
jo
inc
xchg
fbstp
cltd
call
jmp
and
and
add
mov
or
sbb
xchg
cmpsl
push
les
push
hlt
lret
pop
xchg
mov
xor
insb
sub
xor
push
cmp
fstpt
fsubl
dec
inc
int3
repz
mov
cmp
cli
dec
adc
popf
adc
jnp
imull
xchg
cmpsl
loop
test
test
in
push
mov
into
add
call
xchg
sub
add
nop
mov
and
pop
sub
cmp
or
xor
jb
mov
sub
xor
cmp
aam
sti
jno
sub
test
and
add
add
divl
in
sub
addr16
add
add
add
jge
outsl
leave
ja
add
adc
subl
add
adcb
and
push
rcrb
mov
loopne
mov
out
dec
or
divb
sub
and
lea
dec
xchg
cmpsl
lret
cltd
insl
mov
mov
cltd
cwtl
xor
loope
out
daa
rorb
or
mov
push
inc
sub
aaa
leave
sahf
mov
incb
orb
mov
scas
push
int3
mov
push
cs
imul
inc
pop
test
in
cld
or
mov
mov
loopne
mov
dec
and
push
sbb
push
add
leave
adc
addr16
ret
lds
arpl
dec
push
mov
or
dec
mov
cmp
fimuls
mov
lret
je
and
cmp
adc
jl
pop
out
outsl
clc
fisubs
mov
mov
lods
dec
addr16
add
add
add
mov
sub
or
mov
xchg
lock
roll
xor
in
jb
mov
test
fstps
andl
pop
pop
aad
mov
xchg
push
ljmp
add
xchg
stc
or
mov
jbe
fsubr
dec
push
sarl
test
inc
dec
repnz
lahf
int3
push
dec
jns
repnz
add
cwtl
jnp
pop
cmpsl
jl
repz
mov
test
daa
mov
mov
cmp
iret
ret
pop
cmpsb
sbb
and
dec
call
imul
cli
cmp
adc
pop
add
xchg
out
adc
or
stc
stos
bound
xchg
mov
pop
aam
lcall
nop
or
cmp
ja
mov
add
std
inc
scas
pop
dec
ret
add
shlb
mov
lret
frstor
add
add
add
or
inc
mov
adc
lahf
aaa
or
dec
inc
adc
sbb
and
mov
mov
in
jnp
test
pop
call
dec
jg
cmp
mov
add
sbb
pusha
testl
out
js
lods
scas
adc
ja
test
jbe
ja
sbb
iret
fwait
mov
sbb
push
push
sub
int3
sbb
xor
jle
ss
sub
sbbb
jb
mov
jp
out
pop
mov
jne
jg
cmp
lcall
sbbl
and
fwait
and
push
push
and
rolb
lds
cmp
test
xchg
push
jmp
jns
dec
pop
inc
outsl
fdivr
push
notl
sub
mov
in
mov
cmpsb
insl
call
loop
jecxz
dec
shll
dec
pop
add
add
add
testl
mulb
add
add
add
jne
outsb
sbb
shlb
rcl
cmp
sub
xchg
mov
fiadds
imul
int
dec
add
cwtl
xchg
int
dec
jbe
cmpsl
cmp
ss
lods
mov
adc
nop
das
push
cmc
xchg
ja
pop
xchg
pop
pop
jle
movsb
push
dec
fbstp
cltd
jbe
or
sti
xchg
sbb
xor
shll
pop
mov
adc
fiaddl
fisubl
stos
cmp
jne
and
jg
mov
fidivrs
es
fldenv
cs
and
inc
and
cmpsb
inc
cmp
lcall
mov
pop
jge
mov
sub
setb
clc
add
add
mov
cmp
stos
repz
lods
fidivrl
sarl
ja
cwtl
shll
and
cmp
add
add
jo
ja
std
stos
sbb
ljmp
add
add
add
add
mov
sub
into
sbb
mov
in
in
pop
fwait
iret
incl
aaa
dec
xchg
into
push
pop
mov
jle
hlt
and
test
add
sti
mov
out
mov
test
jae
and
mov
loope
inc
pop
jp
fcomps
insl
ds
ljmp
aam
je
lock
pop
icebp
addr16
out
clc
xchg
test
or
dec
jns
int3
les
mov
cs
cmp
xchg
mov
lcall
lods
xchg
pop
pop
inc
cmc
movsb
orl
popa
mov
cmp
xor
cmp
push
pop
adc
cmpsb
in
lret
lods
jne
or
and
jecxz
or
inc
sar
jne
fsubrs
cltd
pop
mov
aad
pop
mov
fldl
mov
mov
sub
jg
push
test
pusha
sub
ret
jno
mov
cmpsb
push
sbb
xor
jle
add
add
add
dec
pop
lock
fisttpll
mov
mov
loope
lahf
mov
cmpsl
jge
repz
inc
cmc
cmp
sub
in
jmp
loop
es
add
adc
pop
aas
popa
mov
enter
xor
stos
cs
cmp
scas
xor
pop
in
push
adc
int3
scas
test
sahf
inc
lods
xor
jmp
loopne
xor
mov
rcr
lods
mov
mov
mov
jecxz
cmpb
test
jns
sbb
lahf
int
fsubr
sub
cmp
subb
popa
test
sbbb
xor
cmpb
push
xorl
cmpsb
out
lds
inc
orb
into
into
push
xchg
or
sahf
scas
mov
or
stos
loopne
jl
mov
sbb
shl
shlb
mov
jmp
stc
jns
xor
cli
mov
jecxz
push
sahf
addr16
add
add
add
mov
push
mov
repz
sub
aaa
or
rcrb
cwtl
push
jno
cs
addr16
jmp
inc
sbb
rcrl
and
inc
scas
pop
ret
add
and
mov
test
ljmp
mov
xchg
divl
int3
jg
aad
xchg
loope
mov
jno
fstpt
aaa
and
jae
cmp
movsb
ds
pop
bound
inc
ret
out
push
inc
xlat
je
pop
test
inc
movsl
int
sbb
mov
sbbb
imul
sub
jle
test
imul
mov
sub
xor
out
sahf
mov
test
jb
pop
xchg
mov
in
jecxz
or
add
xlat
ds
in
jg
lock
fsubr
stc
xchg
into
cltd
or
jo
insl
sub
pop
mov
push
fisubrl
add
test
lcall
adc
add
add
add
push
cmp
sub
jne
jnp
jl
mov
push
hlt
std
inc
sub
xrelease
fisubrs
repnz
fstl
cld
pop
bound
aaa
orl
cmp
xchg
addr16
std
orb
mov
lods
vmwrite
jno
dec
mov
jmp
xor
orl
out
enter
jle
dec
ret
sub
repz
add
ja
mov
xchg
jge
stc
int
inc
rcr
in
dec
inc
scas
fucomip
cmp
and
mov
sbb
int3
ret
push
lods
stc
cwtl
xchg
cmp
or
fistps
outsl
or
aaa
xchg
cwtl
insb
jl
sub
jo
push
clc
dec
add
add
mov
push
lock
xchg
push
xchg
hlt
and
sub
incb
xor
ja
mov
add
in
sahf
push
mov
jb
sub
sbb
push
fsubrs
push
testb
daa
mov
addl
add
sbb
push
loopne
dec
push
push
scas
mov
lods
and
insl
xchg
or
add
pop
push
mov
int3
jge
or
jecxz
and
sub
and
add
push
hlt
xor
xchg
mov
mov
dec
fs
jmp
pop
clc
stc
pop
in
rol
fidivs
mov
cmpsb
push
and
stos
and
pop
sahf
loopne
pop
pop
sbb
pop
mov
cmp
push
rcrb
cmp
pop
push
subb
out
add
xchg
sub
les
pop
dec
adc
fiadds
ljmp
sti
subl
nop
and
ret
sbb
rcrl
cmpsl
ficoml
jae
fdivl
mov
pop
loopne
cltd
mov
nop
lret
mov
stc
mov
cmc
mov
xlat
int3
ret
popa
sub
imul
xchg
insl
inc
loope
push
test
cli
pusha
repz
int3
push
ret
adcb
sbb
les
popf
scas
lcall
adc
sbb
mov
addb
add
add
add
rorb
out
inc
pop
push
jnp
pop
in
add
xchg
push
xchg
stos
and
loope
popa
mov
adc
xchg
and
mov
adc
js
mov
xchg
adc
sbb
loopne
out
xor
or
sbb
push
ficoms
mull
dec
inc
mov
sbb
mov
in
imul
mov
inc
mov
pop
jg
push
popa
stc
add
and
sbb
fs
pop
imul
call
aad
push
sub
fstps
das
mov
adc
scas
sbb
or
mov
hlt
out
mov
lds
add
mov
repz
and
je
sub
pusha
adc
aad
xchg
aad
loop
outsb
xchg
and
xchg
cs
ss
fstpl
das
lea
add
add
mov
idiv
jne
iret
add
addl
add
add
sub
aaa
xchg
jl
mov
sub
mov
es
lahf
mul
shlb
call
ret
sbb
mov
not
fdivrs
jle
and
gs
mov
nop
jl
lahf
mov
xor
add
mov
push
push
lcall
imul
lcall
cld
je
leave
int3
leave
aad
cs
fisubrs
loopne
movsl
cltd
enter
push
push
or
ljmp
adc
ja
outsb
rcrb
sbbb
add
lahf
jmp
or
fdivl
mov
mov
inc
out
je
add
mov
popa
js
xor
lods
adc
push
xor
iret
scas
mov
mov
and
xchg
jns
aad
pop
push
xor
xchg
lea
push
xchg
and
bound
dec
idivb
negl
mov
inc
cltd
push
imul
add
add
pushl
sub
int3
rol
test
add
add
add
jns
inc
stos
vpunpckldq
outsl
jbe
push
sub
data16
xor
lret
cmc
cmp
clc
or
cltd
ljmp
bound
int3
test
xlat
inc
jl
inc
jg
sbb
sbb
and
jnp
shl
stos
mov
cmpsl
cmc
pushf
cmpsb
inc
fcoms
cmpsl
or
xchg
repz
cmp
mov
and
movsl
mov
lret
jno
sub
sarl
sub
das
sahf
lods
pushf
std
inc
jg
aam
outsl
lods
cmp
mov
dec
sti
jns
jl
jno
lret
jae
sub
es
ss
movsl
lods
or
cmpsl
pop
adc
ret
inc
int
test
aad
adc
push
adc
int3
and
ljmp
push
or
jl
negb
inc
lods
shll
mulb
cmp
pop
push
lret
sub
ds
stos
jb
inc
pop
and
cmp
mov
jge
std
sti
iret
ss
push
jno
jle
test
add
add
add
cmp
and
xchg
adc
insb
lods
cmp
frstor
adc
xor
scas
sub
cmp
or
or
and
es
into
cld
or
jmp
pushw
mov
mov
xchg
push
pushf
cmpsb
icebp
adc
jge
leave
ret
dec
cld
bound
cmp
push
ja
popf
int3
lds
add
mov
aad
or
adc
push
lret
bound
pop
sbb
loope
lahf
sbb
push
in
int
cmp
fidivl
mov
outsl
xchg
aas
aas
add
mov
lods
lods
mov
cmp
push
test
sahf
repnz
mov
mov
movsl
mov
inc
int3
cmp
pop
call
pop
add
dec
mov
cmp
pop
jbe
addr16
je
mov
dec
adc
stc
pop
xchg
or
sahf
int
xor
add
out
xchg
pop
jmp
mov
loopne
xchg
inc
lahf
sti
hlt
out
dec
roll
imul
add
add
add
std
mov
jno
sbb
mov
cmp
jg
cmp
sti
sahf
jo
add
add
xchg
mov
xor
push
bound
fidivl
add
mov
sti
test
inc
in
orb
out
fmulp
je
and
mov
jg
push
pop
fbld
loopne
adc
loopne
int
scas
lahf
and
popa
jns
push
mov
inc
lock
into
or
pushf
mov
in
int
mov
aad
lds
mov
adc
fiadds
mov
xchg
lret
pop
xchg
sarb
adc
mov
jae
jnp
in
aaa
rcrb
std
iret
shr
jge
aaa
xchg
dec
lds
add
aad
or
ud1
cmp
jnp
ja
into
sub
and
lods
add
mov
jle
dec
sbb
mov
add
mov
mov
shl
xchg
add
add
add
mov
test
ja
rol
aaa
dec
sub
les
inc
xchg
inc
sbb
mov
jmp
loope
or
sbb
mov
mov
sbb
sbb
fsqrt
adc
jge
loopne
xchg
add
out
pop
cmp
cmp
mov
push
xor
mov
ret
sbb
inc
adc
sar
mov
enter
pop
pop
or
popa
loope
adcl
fisubrl
nop
dec
xchg
xchg
popa
adc
mov
dec
jae
cmpsb
in
xorl
xchg
imulb
les
cmc
ret
and
push
cltd
push
cmp
loopne
adc
je
lods
sbb
pop
sbb
pop
ds
xchg
inc
pop
sub
or
push
mov
call
xchg
or
lock
loop
out
orl
fnstenv
stc
pop
and
out
ljmp
lock
xchg
xor
icebp
mov
mov
add
add
add
mov
dec
xor
xlat
jl
xchg
movsl
pop
ljmp
scas
mov
punpckhdq
mov
sahf
dec
cmc
cs
ja
pop
jle
push
pop
jno
or
mov
aaa
push
mov
rcrb
dec
in
daa
sbb
dec
pusha
lds
add
cmp
push
pop
mov
push
inc
xor
jno
incb
add
repnz
stc
fnstenv
inc
loopne
stc
dec
movsb
dec
dec
add
mov
fnstenv
arpl
inc
dec
mov
pop
and
dec
into
sub
mov
jecxz
sti
ds
push
cli
popf
cmp
cmp
mov
xor
mov
notb
dec
mov
sbb
jno
jge
xchg
popf
filds
stc
popa
lret
jle
and
inc
leave
movsl
cwtl
pop
std
test
loopne
lret
push
jge
push
imul
push
jnp
sbb
push
xor
push
loope
mov
add
add
add
sub
leave
daa
xchg
lods
fsubrl
ss
sbb
hlt
cltd
out
popa
mov
jecxz
dec
xor
rcrb
mov
lahf
js
insl
pop
xor
es
and
data16
adc
repnz
stos
out
lods
neg
cmp
popa
add
and
shrb
popa
mov
push
ljmp
pop
pop
bound
ljmp
movsb
fs
je
dec
jle
push
push
js
sub
push
sahf
or
rolb
ret
cmp
adc
jo
pop
inc
aas
cmp
imull
mov
add
mov
clc
sbb
pushf
lahf
aam
daa
xchg
in
test
inc
cmpsb
call
aas
dec
into
inc
mov
icebp
fs
sbb
push
pushf
outsb
stc
arpl
dec
inc
xchg
mov
inc
sti
jp
sub
mov
or
test
test
and
pop
mov
xchg
jnp
sahf
jnp
add
add
aas
or
mov
xlat
stos
orb
add
add
cld
fisubl
xor
leave
ja
jns
adc
add
repnz
fisubl
and
mov
push
fwait
popa
mov
fcmovb
mov
arpl
lods
jle
and
sub
daa
pop
and
and
xchg
hlt
aaa
mov
adc
rcll
inc
adc
adc
test
add
push
icebp
enter
inc
test
lock
femms
xchg
push
and
icebp
jnp
add
mov
shl
inc
or
bound
out
int
icebp
push
shl
mov
shl
insb
jne
pop
cmp
sub
arpl
mov
and
jo
rcll
movsb
das
cmp
jmp
dec
loopne
ljmp
cmp
mov
out
jnp
adc
push
jne
loop
cmpsb
fistl
mov
mov
mov
pop
dec
and
addr16
jle
add
add
push
outsb
fisubs
test
invd
fildll
mov
add
add
add
add
xor
mov
jbe
pop
scas
jge
out
int3
in
push
push
add
scas
fnstenv
repnz
stc
mov
out
xchg
test
bound
push
in
mov
push
dec
stos
mov
add
xor
add
gs
mov
xchg
nop
mov
mov
adc
leave
jmp
dec
dec
or
adc
push
push
jg
lock
lret
shll
adc
in
mov
js
mov
dec
or
inc
lock
out
in
pop
leave
sarl
mov
arpl
xor
xchg
shlb
add
icebp
stos
repnz
mov
mov
or
cmc
es
pop
jecxz
xor
aad
xlat
cmp
fidivrl
dec
mov
rclb
mov
cmp
stos
dec
dec
ret
cmp
xor
xchg
rolb
cmp
inc
hlt
loope
ds
push
hlt
aad
ret
pop
inc
imul
add
add
mov
jns
lret
pop
test
add
add
insb
les
lods
jg
aad
xchg
pop
mov
mov
insb
mov
pop
out
inc
pushf
add
repz
nop
je
shll
sbb
fstps
cmp
pop
and
inc
stos
pause
inc
arpl
xlat
pop
xor
adc
or
cmp
hlt
leave
xchg
jne
or
outsb
inc
lret
jnp
adc
push
cld
gs
cld
lcall
xchg
lds
sbb
testl
push
inc
out
xchg
repnz
sbb
pop
data16
adc
scas
in
push
sbb
mov
je
and
jecxz
popl
aaa
mov
push
shll
push
mov
aaa
xlat
rclb
xor
jno
pop
das
out
lahf
sbb
mov
lods
mov
push
add
sbb
lret
not
sub
fstl
roll
add
add
int
fstp
iret
push
cmpsb
fadd
dec
sub
push
lea
add
add
add
jnp
jle
icebp
dec
push
mov
mov
sub
pop
hlt
nop
inc
adc
and
fidivs
in
bound
fisttpll
outsb
int
jb
cli
lahf
add
fwait
ds
ljmp
lock
movsl
mov
test
mov
popa
mov
out
out
pop
cmc
stc
and
jecxz
scas
in
rolb
shrl
jne
dec
inc
cld
add
aaa
push
inc
imul
test
lods
pop
test
mov
lods
inc
and
iret
sub
enter
ret
or
sbb
or
fsts
sub
xchg
icebp
cmc
jns
push
fimull
lea
cltd
inc
mov
scas
sub
cmp
inc
push
icebp
mov
xchg
and
or
xor
jb
dec
mov
adc
loope
test
scas
imul
pop
adc
lds
ficoms
lahf
and
scas
std
out
ljmp
mov
add
add
add
imul
mov
lods
aas
addr16
dec
adc
outsl
fmuls
daa
les
sub
mov
inc
aad
xchg
mov
sbb
inc
mov
or
adc
sub
jb
sarb
and
icebp
adc
jg
push
das
test
ret
mov
pushl
or
cmpsl
xchg
ja
mov
sbb
lock
aas
scas
or
mov
pop
jne
lahf
pmulhw
lds
sti
jecxz
gs
xlat
xor
lahf
out
inc
add
push
ss
xchg
dec
data16
dec
outsb
data16
or
xor
jnp
gs
jg
mov
adc
mov
or
mov
sbb
pop
push
in
leave
mov
xchg
call
shlb
out
lahf
mov
fisubs
or
jns
push
and
add
add
mov
icebp
arpl
add
add
add
andl
mov
xor
fs
cmp
dec
lret
inc
into
cwtl
call
int
xlat
push
mov
out
imul
insb
jo
je
sbb
mov
fucom
ffreep
pop
cld
cmp
test
mov
enter
mov
or
jns
mov
mov
xlat
aas
popf
jo
rcrb
push
inc
ss
shrb
push
sbb
cmpsl
loop
out
cmp
mov
imul
add
aaa
rorb
in
mov
mov
cmpsb
inc
pop
adc
xchg
mov
mov
das
shrb
inc
xchg
outsl
das
or
das
shll
fcompl
cmp
push
adc
cwtl
stos
and
xchg
xchg
xchg
test
mov
xlat
out
jno
inc
ds
shrl
mov
stos
mov
mov
xchg
sub
sbb
inc
or
test
fcomps
add
aas
cmp
add
add
add
dec
inc
or
mov
loop
das
dec
insb
pop
sub
push
mov
fadd
push
push
iret
push
pop
sarb
dec
cmp
xchg
loop
aas
ja
outsl
shl
dec
pop
in
pushf
and
cmp
shrd
dec
pop
or
sti
incl
dec
pushl
sbb
mov
nop
xchg
loope
cmpsb
cld
ljmp
out
jbe
fsubrl
push
sahf
sub
push
dec
vmovss
inc
xor
out
xor
insl
xchg
pop
jnp
movsb
nop
mov
pop
mov
mov
mov
jns
xchg
lods
adc
rol
inc
push
fwait
cltd
pop
addl
fistpll
daa
aas
inc
ret
jmp
xchg
push
movsl
pop
jae
fwait
pop
mov
ljmp
mov
mov
lods
push
data16
mov
add
mov
mov
pusha
dec
ss
out
mov
cmc
repnz
xlat
sbb
incb
add
add
ljmp
dec
mov
push
inc
addr16
add
add
add
in
pop
ret
add
xor
sbb
jne
push
scas
pop
sahf
or
mov
pop
push
jecxz
scas
and
mov
adc
je
lea
cld
out
xchg
call
cmpb
test
negb
cld
pop
mov
ljmp
call
jmp
adc
cwtl
xor
adc
sarl
fmul
in
jp
daa
cmp
mov
out
fcmovnb
in
es
cli
leave
or
int3
cltd
push
fistps
sub
xor
ret
adc
mov
pop
cmp
pop
jmp
jge
and
sbb
add
push
jnp
dec
inc
and
gs
ja
sbb
dec
cmp
movsl
jl
popf
or
jae
and
inc
mov
cmpsb
lret
xor
and
xchg
adc
hlt
dec
dec
sub
sbb
je
and
jmp
aaa
shlb
cmc
div
testl
stc
addr16
add
add
add
cltd
int3
sahf
jle
call
stc
jb
lret
adcl
or
push
xor
cmpsb
or
sbb
rcll
js
push
add
push
fists
loope
mov
or
or
pop
cmp
loop
mov
lcall
mov
arpl
push
lret
jg
pop
push
xchg
into
movsl
insb
popf
cs
pop
popa
mov
xor
seto
push
sbb
insb
cmpsl
jbe
dec
test
cmp
xor
ljmp
or
pop
aas
shll
or
outsb
dec
push
in
js
jmp
xchg
push
addl
cli
mov
jo
lea
xchg
dec
hlt
jl
push
mov
xor
mov
test
inc
mov
lcall
nop
les
jge
or
adc
clc
jae
sub
xchg
adc
add
add
push
sahf
rcr
pop
adcb
mov
push
lret
add
add
add
dec
jg
sbb
jl
fsubr
aas
loop
dec
ret
call
imul
sbb
xchg
into
roll
cli
or
or
xor
test
cmp
or
test
arpl
or
test
out
push
cli
add
into
xlat
add
out
push
pop
jae
out
jecxz
and
mov
cmpsb
xchg
inc
aam
hlt
mov
psraw
push
cmp
ja
or
sub
push
push
add
mov
movsb
ret
je
std
cwtl
lret
ds
pop
pop
cmp
pop
in
pushf
jg
jp
and
loopne
in
lret
inc
mov
xor
testl
daa
aad
xor
lods
fists
cwtl
divb
mov
addr16
shlb
and
mov
lret
mov
push
sbb
insl
loope
adc
add
arpl
cmpsb
jcxz
fimull
addr16
add
add
add
outsl
push
cmp
test
inc
sbb
int
stos
jo
and
aaa
push
pop
insl
inc
decl
cwtl
push
dec
mov
fistpl
sbb
outsl
lahf
iret
and
fdivrp
push
outsl
pop
inc
mov
pop
pop
cld
cmp
ja
in
jbe
clc
pop
fcomip
jb
jno
outsb
jns
adc
sub
or
dec
or
aaa
lea
js
sub
mov
ret
fdiv
ja
xchg
mov
mov
cmc
lcall
fmulp
stc
scas
call
aaa
movsb
in
lahf
inc
push
adc
add
aas
sbb
sub
movsb
and
mov
push
mov
xor
iret
fsubl
sub
in
stos
enter
cmp
loopne
adc
repnz
out
je
pop
pop
dec
add
xor
and
or
xchg
or
mulps
loop
mov
mov
lods
mov
clc
jnp
jg
in
cli
enter
cld
pop
lea
xchg
add
add
add
in
lods
out
pop
shrl
addr16
jg
adc
pop
cltd
mov
pop
loope
xor
dec
setne
mov
dec
dec
inc
mov
cmc
fisubrl
cmp
pop
sub
xchg
cld
mov
fiaddl
in
adc
jecxz
jno
int
lahf
xor
bnd
mov
pop
les
cmp
test
sub
mov
jne
out
pop
sbb
add
jne
test
mov
push
adc
pop
add
fstl
xlat
jle
mov
cmp
xchg
stos
dec
and
test
test
pop
and
inc
testb
mov
std
ja
popl
in
out
pushf
mov
outsl
js
adc
mov
adc
ss
xor
or
jg
inc
insl
out
out
mov
xor
scas
movsl
filds
add
add
lods
faddl
fbstp
cld
gs
mov
addr16
add
add
add
pop
push
rolb
pop
push
adc
jge
jle
add
fwait
test
adc
lods
ljmp
cli
jg
xor
rclb
cmpl
test
in
push
orl
or
mov
adc
jecxz
add
or
pop
xchg
jmp
mov
jae
jno
mov
cmp
arpl
lods
hlt
negl
pop
pop
mov
cmpsb
cs
mov
jns
or
push
jmp
stos
inc
mov
inc
mov
into
add
push
dec
loope
add
jmp
out
iret
cld
add
sbb
pop
pop
push
out
xchg
mov
clc
imul
xchg
test
push
mov
mov
outsb
jo
cmp
enter
sub
or
rcr
cmp
insb
pop
push
inc
and
push
push
mov
xchg
in
notl
jb
aad
outsl
mov
add
jl
sar
std
jle
pop
popf
scas
push
stos
stc
outsl
addr16
add
add
add
and
out
inc
insl
cltd
pop
push
out
jb
pop
rorb
sahf
mov
push
xchg
js
in
gs
add
popa
pop
pusha
iret
inc
add
loop
cmp
stc
or
mov
test
mov
xchg
and
or
in
out
push
mov
shlb
loop
ja
push
dec
or
data16
mov
push
call
lcall
mov
xor
push
mov
scas
int
adc
sbb
xor
jne
sub
rcrl
add
rcll
into
adc
dec
xchg
mov
sub
call
out
push
or
in
xlat
mov
into
mov
cltd
das
in
lcall
int
mov
js
test
daa
shl
in
fnstsw
xorb
or
cmp
popf
mov
push
pop
xchg
pop
ret
fcmovne
addr16
cmp
cmp
in
scas
sub
add
add
add
movsb
jno
dec
or
inc
lods
push
loop
inc
sbb
lea
pop
xor
pop
int3
xor
stos
mov
xchg
arpl
mov
adc
jmp
loope
pop
stos
call
inc
add
adc
fs
mov
and
push
leave
iret
ficoms
xchg
rclb
sbb
aas
mov
mov
sbb
daa
imul
out
mov
out
inc
add
dec
into
testb
mulb
insb
outsb
cmpb
cmp
jge
jb
addr16
outsb
push
fmuls
inc
or
loop
fs
or
jns
outsb
or
daa
insb
das
or
xor
push
adc
ret
inc
inc
mov
ss
fdivrs
movl
xchg
int
add
mov
ficomps
fiaddl
out
add
out
fwait
and
popa
mov
xorl
addr16
add
add
add
inc
call
mov
add
imul
daa
cmc
loop
popl
loopne
sbb
xchg
sbb
fucom
jl
xchg
lds
ret
sbb
or
add
out
xchg
lcall
jb
stos
or
adc
decb
and
push
scas
push
pushf
cmpsl
or
subl
and
sub
cmp
push
lcall
mov
mov
sbb
cmpsb
cwtl
jae
int3
incl
jne
and
outsl
jno
sub
adc
arpl
pop
les
jecxz
sbb
daa
dec
jp
shll
sub
xor
jle
mov
shlb
xchg
js
sti
sahf
push
sub
orb
mov
pushl
mov
mov
inc
sbb
pop
lods
pop
sbbl
inc
das
mov
fadds
shlb
das
testb
nop
out
movsb
je
push
and
xlat
aas
dec
sbb
or
addr16
scas
pop
inc
fldcw
inc
repz
int
insl
and
icebp
mov
ja
popa
cmp
cmp
push
dec
xchg
pop
test
je
push
inc
mov
sbb
push
aam
cmp
sub
aad
add
pop
xor
nop
lret
into
pop
enter
cwtl
sub
in
mov
rorl
stos
xchg
cld
jge
push
popa
push
loopne
fdivrl
in
fdivrl
add
ss
xchg
iret
dec
iret
mov
sbb
in
lret
jns
subb
imul
subl
add
push
xor
inc
mov
push
data16
mov
bound
cmpsl
mov
jg
sbb
xor
mov
scas
push
mov
mov
clc
push
mov
fldenv
pop
dec
inc
lret
subb
sub
shlb
mov
mov
sub
add
add
mov
mov
jmp
test
fwait
add
add
add
cmp
push
jg
lahf
mov
ljmp
test
punpckldq
ss
inc
stos
mov
jne
dec
jl
into
jo
push
inc
incl
add
in
int3
rcr
xor
dec
cmp
sub
jns
jl
lock
mov
inc
xor
sbb
or
xor
adc
dec
push
cmp
negb
mov
aad
pop
dec
jns
xchg
mov
movsl
rcr
inc
xor
sub
je
andl
out
and
pop
dec
push
add
stc
call
stc
test
rcll
inc
out
pop
mov
aas
imul
fldcw
dec
dec
xchg
or
shlb
inc
cli
mov
jno
cmc
cmp
mov
adc
xchg
jg
cmp
push
mov
xchg
dec
mov
inc
cli
pusha
ljmp
push
mov
stos
lret
pushf
iret
add
and
popf
adc
sbbl
popl
ficomps
pushf
add
add
add
aad
mov
test
sub
sti
or
lret
pop
fwait
outsb
dec
push
test
enter
das
sbb
or
adc
aaa
mov
xlat
pop
xchg
push
mov
aaa
add
xchg
cld
mov
sbb
push
fwait
sub
rcr
std
or
mov
lret
fwait
sub
xchg
loop
ja
aad
jo
mov
lret
inc
sub
sub
aad
xchg
jmp
mov
mov
pusha
add
or
mov
cmp
fs
add
icebp
cltd
mov
mov
fcomip
dec
stc
mov
ret
fwait
sbb
jnp
push
xor
mov
mov
cmp
or
xor
xor
pusha
mov
jnp
lds
movsl
mov
in
dec
jle
leave
and
mov
lcall
adc
and
fcomip
sub
es
aam
mov
imul
movsb
and
mov
popf
add
add
add
dec
fsubrl
iret
adc
push
clc
adc
aam
outsl
or
in
mov
daa
call
pop
mov
push
or
xchg
test
test
adc
xor
loope
inc
out
jge
ljmp
cltd
jmp
int3
mov
jnp
popa
push
dec
jno
lods
adc
aaa
sub
cmpsb
rcrb
push
push
lock
mov
mov
xchg
pop
adc
pop
test
leave
sub
inc
and
insb
popa
cwtl
stos
add
pop
xlat
das
sub
and
outsl
jnp
jp
inc
add
and
jno
mov
add
or
fdiv
push
mov
xor
cmpsb
out
rcr
jne
testb
test
fwait
jne
inc
lahf
mull
pop
addr16
dec
xor
mov
mov
cmp
mov
xchg
cmp
pop
fdivs
add
mov
jge
jg
ljmp
in
lahf
mov
sahf
add
add
add
push
dec
ficoml
mov
cwtl
ljmp
jb
or
sbb
mov
jge
inc
inc
push
mov
and
fcompl
insl
adc
or
or
fldt
xlat
mov
in
outsl
nop
clc
xchg
lret
roll
push
mov
sbb
mov
in
test
jb
mov
test
mov
repz
mov
mov
xchg
or
shl
push
mov
test
or
js
xchg
and
decb
notb
jecxz
loop
mov
lods
sbb
mov
xchg
andb
pop
rcrw
adc
idivl
negl
jns,pt
xor
cld
fadds
call
xor
push
and
mov
and
out
mov
je
hlt
sti
cltd
sub
out
inc
sub
or
xor
add
add
add
je
cltd
pushf
stos
xchg
adc
lret
mov
sub
aam
rcll
mov
sahf
mov
movsl
jbe
subb
mov
push
cmp
cld
sbb
addr16
and
push
mov
dec
daa
dec
cltd
sahf
xchg
out
push
lea
dec
adc
and
sarb
aam
out
in
pusha
shlb
aam
jg
lret
cmp
xrstor
scas
or
adcb
lods
sbb
testb
or
sbb
lahf
ss
sub
int
fwait
cmp
out
stos
or
adc
pop
sbbl
and
dec
je
mov
stos
andl
pop
sbb
ss
jg
cs
mov
push
mov
out
xchg
mov
into
popf
and
xchg
iret
shrb
jbe
fdivrl
sbb
rcll
add
xor
ja
insl
mov
loop
test
mov
cld
mov
addr16
add
add
mov
push
pusha
hlt
add
xor
aas
jp
and
add
jno
push
mov
mov
or
add
out
stos
xchg
clc
mov
push
orb
in
out
mov
outsb
movsl
xchg
out
xor
xchg
cltd
insl
repz
gs
inc
cmp
rclb
rolb
fstpl
dec
fdivrl
and
repnz
xor
push
and
sbb
or
jns
imulb
or
aam
adc
leave
mov
xlat
mov
mov
lret
mov
jns
xchg
xchg
popa
ds
xchg
xor
les
popf
lret
xor
jbe
adc
lock
lahf
stc
rolb
outsb
dec
pop
lock
in
add
xchg
mov
dec
cmp
lock
ja
or
mov
lcall
out
add
aaa
test
add
mov
repz
repz
inc
mov
add
add
add
mov
mov
cmpsl
pop
mov
imul
push
ret
and
das
adc
jmp
push
dec
fwait
xchg
lock
mov
ljmp
pop
mov
loope
jns
pop
pop
ja
adc
punpcklwd
xor
jb
xchg
fiaddl
or
stos
andl
subl
repnz
lods
pop
mov
subl
nop
dec
inc
mov
cmc
push
mov
iret
outsl
sbb
jmp
aad
sub
inc
enter
inc
out
in
pop
sub
pop
or
jl
movsl
lea
mov
mov
xor
cwtl
dec
adc
mov
je
lock
or
stc
sbb
dec
daa
jns
aam
xor
cli
pop
je
mov
and
push
dec
insl
stc
pop
outsb
stos
cli
jne
xchg
stc
aad
das
xchg
dec
push
ret
lods
dec
cld
dec
push
pop
xchg
movsb
mov
mov
inc
inc
add
mov
add
out
mov
or
mov
mov
push
out
or
adc
addr16
in
jmp
adc
pop
das
sub
adc
sbb
fneni(8087
dec
push
data16
insl
add
inc
xor
movl
cmpsb
or
popf
lock
test
mov
aas
xchg
jge
cmp
stc
pop
cmp
push
inc
and
bound
stc
loope
iret
sbb
daa
js
push
jbe
mov
xchg
loope
and
adc
mov
scas
jle
out
mov
cmp
int3
xchg
jg
add
clc
lahf
jo
out
mov
fidivs
test
pop
sbb
popf
shrb
outsb
pop
or
adc
in
ret
adc
stc
dec
stc
orl
push
ljmp
roll
pop
data16
mov
loope
pop
xchg
bound
imul
bnd
add
std
inc
mov
xlat
mov
add
add
jnp
cmp
scas
jb
xorl
in
push
fidivrl
fstp
clc
dec
adc
mov
dec
lcall
mov
push
incb
aas
cmpsl
out
and
lds
inc
sbb
cs
jge,pn
cmp
jb
lds
cmp
js
arpl
and
sahf
iret
outsb
insb
add
mov
fucomip
cmp
fmull
pop
or
je
dec
cmpsb
adc
jno
gs
pop
testb
pop
add
xchg
cs
or
push
cmp
xor
and
aas
sbb
inc
sarb
pop
lret
pusha
aas
sub
mov
test
insl
jnp
leave
jge
in
push
push
lock
adc
xchg
in
dec
add
mov
mov
cltd
hlt
mov
fmul
mov
out
mov
mov
inc
sub
jbe
frstor
add
add
inc
fdivl
push
dec
mov
movsb
add
add
add
rcrl
or
sbb
sarb
xchg
fnstcw
pop
jmp
fmull
push
outsl
ljmp
insb
jbe
in
adc
shr
data16
fdivrl
lret
jge
dec
push
or
fadds
mov
push
sub
movsb
jle
xor
mov
cmp
stos
mov
rolb
filds
in
push
shrb
insb
mov
jle
add
sub
cmp
push
rol
loope
dec
aad
push
or
sbbl
ret
xor
jne
jmp
mov
jmp
mov
call
cli
push
insl
mov
mov
inc
js
mov
movsb
dec
jne
push
and
popf
pushf
mov
nop
jl
push
mov
into
test
rcr
faddp
mov
ficompl
add
and
lcall
mov
adc
mov
sbb
lods
lret
movsl
add
add
add
dec
push
call
fbstp
pop
div
mov
scas
mov
test
mov
inc
pushf
inc
les
jmp
leave
ret
inc
add
leave
pop
sub
adc
mov
adc
push
icebp
xchg
pop
fisttpl
test
xchg
pop
popa
in
insl
adc
mov
push
jmp
sbb
shlb
out
mov
jle
adc
out
jne
inc
andb
lods
mov
cmpsl
mov
xlat
push
test
ret
fstpt
cwtl
daa
idiv
sub
aam
mov
xchg
xchg
push
call
jo
fsubr
xchg
mov
inc
mov
hlt
enter
mov
sub
adc
ret
and
mov
stos
out
loopne
aam
add
fimull
bound
ficoml
jecxz
jne
add
add
stos
hlt
jmp
cmp
jbe
jmp
lcall
add
add
cmp
cld
mov
inc
pusha
ljmp
out
shrl
ljmp
nop
push
push
int3
test
xor
mov
aad
rolb
cmp
cs
roll
adc
dec
iret
mov
dec
inc
xor
mov
mov
sahf
divb
pop
xchg
outsb
leave
xchg
subl
add
pushf
loope
in
stc
pop
jns
push
inc
cmp
push
cli
adc
int
inc
jno
jge
sbb
mov
shll
xchg
mov
xchg
push
loop
pop
add
sbb
mov
dec
ret
in
push
push
or
xchg
mov
mov
out
std
xor
iret
pop
cmp
cmp
mov
imul
jb
pop
aad
repz
dec
add
inc
pop
add
inc
pop
roll
xchg
clc
iret
ret
push
inc
add
out
xlat
out
jg
in
xor
fnstcw
or
cmpsl
add
add
add
mov
mov
jge
dec
jge
leave
call
pop
mov
pop
lds
sbb
rcl
push
add
xchg
enter
mov
or
repnz
jp
pop
sti
sbbb
jg
add
or
pop
inc
std
cmp
or
addr16
mov
jns
mov
or
mov
das
rep
adc
dec
add
std
push
out
cli
sbb
jne
mov
ja
ljmp
movsb
fidivl
clc
jg
dec
or
mov
test
notl
lahf
insl
or
add
ljmp
jmp
push
cmc
sahf
mov
ret
push
mov
mov
in
testb
jb
ja
adc
jl
pushf
test
ljmp
ficoml
int
std
mov
inc
lods
xor
pop
les
xchg
mov
sbb
pop
fbstp
fldl2e
test
dec
dec
addr16
add
add
add
push
ret
xchg
ds
ret
mov
inc
push
outsl
sbb
rcrb
in
in
xor
mov
frstor
cli
test
pushl
cli
sbb
xor
jle
xor
lds
mov
mov
mov
and
aaa
imul
adc
movsb
rolb
movsl
rolb
push
jbe
loop
or
fisubl
xor
sub
inc
cmp
dec
mov
xchg
mov
jo
jle
xor
push
cmp
mov
pop
js
add
jl
mov
stc
pop
or
std
lods
popa
mov
pop
push
fcoms
sbb
in
shlb
add
sub
call
xchg
in
daa
leave
xchg
push
rolb
xchg
xchg
xchg
mov
add
adc
sarl
ret
sbb
lods
subl
cmp
dec
pop
adc
add
add
mov
fadds
addr16
add
incl
jns
xchg
out
jmp
xor
imul
iret
jg
pop
jecxz
mov
loop
aad
addb
in
addr16
mov
ljmp
mov
aad
test
inc
mov
sti
inc
mov
cmpsb
mov
mov
push
lock
sbb
fs
ret
push
jmp
sarl
sub
or
jns
pop
push
inc
xchg
push
divb
add
pop
popa
hlt
jno
frstor
loop
aaa
in
push
xor
rcrl
fdivs
lds
push
cmpsl
repz
mov
push
add
inc
es
jmp
pop
inc
push
xor
pop
mov
cs
jae
lret
sub
incl
mov
insb
daa
dec
nop
dec
jbe
mov
insl
or
dec
cmp
jb
jmp
test
dec
jge
orb
push
mov
in
pop
cmpsb
pop
jle
xchg
lret
jnp
sti
jmp
push
mov
notb
sub
stos
add
add
add
adcl
jae
and
cwtl
ret
xchg
pop
jp
inc
jno
sub
push
cmp
add
pop
out
jno
pop
cmpl
cmpsb
sbb
pop
ret
pop
popf
dec
fwait
cmp
ret
inc
lahf
fmuls
shl
ficomps
xor
scas
jl
mov
sarl
stos
mov
mov
pop
sarb
xchg
adc
mov
pop
lahf
ficompl
sbb
out
mov
aaa
mov
or
mov
xchg
pop
jge
xchg
clc
xlat
roll
jecxz
cmp
ficompl
popf
or
lcall
adc
mov
addr16
scas
mov
mov
cmp
pop
iret
mov
stc
cmp
mov
aaa
push
mov
mov
fs
dec
into
repz
rcr
add
add
jecxz
lock
es
stos
add
add
add
and
mov
and
out
inc
cmp
mov
rcl
iret
mov
icebp
scas
les
ja
int
xor
sbb
aaa
xor
arpl
inc
aam
adc
aam
mov
mov
pop
into
ret
call
adc
icebp
xor
dec
adc
mov
nop
lret
out
or
cld
popa
ret
xchg
ss
hlt
push
sub
ret
inc
cmp
pop
jp
dec
addr16
push
dec
iret
push
ja
outsb
mov
sub
data16
pop
ja
sbb
sbb
pushf
shll
mov
dec
cs
jge
shlb
sub
aad
xor
in
jb
mov
dec
and
in
mov
jp
imul
push
popf
xor
scas
adc
loop
pop
xlat
adc
fidivrl
ror
sbb
mov
mov
add
cld
mov
leave
aam
andl
add
push
push
hlt
sysexit
lahf
mov
imul
jmp
stos
jge
cmpsl
adc
inc
out
loope
mov
dec
mov
in
out
test
fcom
jl
xchg
fwait
jmp
stc
xor
jge,pt
push
jae
inc
sub
add
and
xchg
aaa
jb
mov
fldl
jp
bound
ljmp
push
out
imul
add
adc
fwait
out
jge
mov
adc
out
and
dec
cmp
cmc
inc
jb
push
lods
inc
inc
fsts
imul
stos
cli
push
out
pop
xchg
pushf
push
stos
cmpsl
cmp
jmp
pop
xor
xchg
mov
sub
popf
mov
in
leave
xor
cli
sub
pop
push
cli
xchg
sbb
cmp
sti
xchg
add
jno
cmp
movl
pushf
mov
dec
mov
lret
and
mov
dec
das
pop
out
cmc
mov
gs
lods
add
add
add
push
cltd
shrb
push
cltd
xchg
dec
mov
cmpb
add
sbb
ljmp
ret
pop
dec
jge
inc
adc
sub
xor
cld
xor
enter
fisubrl
mov
out
jo
arpl
push
outsb
das
cmovg
xchg
cmpsl
lods
pop
std
mov
cmp
cmp
cmp
out
dec
clc
psubd
cmp
imul
les
adc
sub
nop
and
leave
jbe
jno
jno
in
mov
xchg
mov
movsl
cwtl
test
mov
cli
sbbb
lret
imul
and
and
xchg
std
pushf
fimuls
outsl
sahf
inc
dec
test
sub
mov
bound
lahf
iret
pop
imul
mov
lcall
outsb
orl
jge
shll
insb
in
test
push
sbb
in
insb
mov
sub
mov
fucomip
std
dec
std
pop
lcall
xchg
pop
push
fwait
or
call
add
add
sbb
cld
icebp
sbb
pop
or
stos
iret
cwtl
scas
int3
xor
scas
adc
cmc
stos
sbb
mov
xor
pop
cs
pushf
inc
sti
cmp
enter
sub
xlat
jno
pop
or
out
pop
cld
sub
je
xchg
lock
imul
dec
mov
mov
and
xor
pushf
std
in
ss
scas
mov
mov
mov
fucomp
fs
scas
mov
and
pushf
addr16
iret
inc
mov
pop
scas
jl
mov
std
push
or
lret
ret
popf
sbb
add
push
add
rcll
jle
mov
ljmp
pop
pop
pop
xor
push
rorb
movsl
fwait
jo
adc
sahf
inc
xchg
das
push
mov
loope
jnp
jg,pt
adc
divb
sbb
idivl
add
add
fidivs
loop
ljmp
sbb
addr16
scas
add
add
add
rcll
dec
inc
outsb
cmp
jne
pushf
gs
xor
ja
fstl
mov
jl
mull
rcrl
add
pushf
ja
stos
sarl
and
lcall
mov
xor
and
das
mov
ret
aam
xor
in
lcall
push
in
pop
pop
loop
pop
rolb
shll
cmp
cmp
repnz
es
mov
test
sbb
push
test
push
fsubl
leave
add
aad
ret
aad
lock
lods
sub
xor
popa
enter
adc
cmp
xchg
dec
push
iret
push
loop
push
xor
sub
cli
mov
icebp
shll
shll
or
jle
inc
jp
test
mov
lds
sbb
push
jp
pop
stos
jecxz
pop
sub
push
xchg
jg
jmp
std
mov
repnz
addr16
add
add
add
ja
rolb
cmp
dec
and
ljmp
aad
cmp
cmp
stos
nop
addr16
mov
pop
or
js
dec
lock
mov
xchg
insb
mov
les
push
pop
icebp
or
cli
insb
inc
push
fisttpl
inc
dec
lret
repz
mov
xorl
adc
xor
dec
aam
mov
icebp
mov
enter
mov
jecxz
fldenv
adc
loope
aaa
mov
es
mov
xor
adc
push
jp
add
jae
pop
inc
lods
lods
xor
jl
jb
cmp
adc
mov
pop
pop
rcrb
mov
push
pop
loope
adc
pop
jo
imul
mov
test
pop
xchg
xor
mov
sub
aas
aad
es
cmp
mov
dec
sbb
jns
mov
shlb
loope
and
push
pop
dec
xor
iret
jo
sbb
push
divb
inc
mov
xor
addr16
add
add
add
inc
ljmp
ret
push
jne
mov
rcl
mov
mov
add
leave
or
dec
push
and
and
lcall
fldenv
sti
mov
inc
loopne
mov
xor
mov
sbbb
mov
cmc
mov
mov
lds
sbb
push
lods
xchg
jp
rcl
leave
popf
push
dec
rcrb
rcll
jl
inc
mov
jmp
adc
jo,pt
fisubs
inc
pop
movsb
loop
push
xor
frstor
loopne
xor
stos
lahf
hlt
xchg
ret
cmpsb
outsb
sub
push
int
loope
cvtpi2ps
add
sbb
xchg
jmp
arpl
insl
pop
xlat
sub
pop
add
or
movhps
or
gs
aad
cmpsb
or
bound
out
add
lret
mov
fwait
movsl
push
push
mov
fstl
pop
aas
sub
and
lcall
add
push
pop
xor
cmp
inc
call
xchg
addr16
add
add
add
movsb
cli
in
out
fiaddl
mov
add
or
mov
outsl
xor
pop
dec
mov
movsl
inc
in
or
push
shlb
inc
fs
push
pop
jb
or
adc
adc
sub
cmpsb
or
mov
push
movsl
inc
inc
add
je
cli
fs
push
jb
jo
fnstsw
xchg
test
popf
sbb
fstpl
sub
jb
sbb
shr
mov
sub
shll
pcmpgtw
arpl
imul
movsb
pop
adc
pop
mov
pop
out
and
add
pop
leave
cmp
sbb
push
sti
mov
push
mov
in
mov
pusha
aad
fmull
adc
xchg
test
cmp
push
lret
mov
in
xchg
xchg
jnp
daa
incb
jo
inc
xchg
xchg
pop
hlt
push
jns
xchg
mov
jae
movsl
stc
sbb
mov
jp
es
les
mov
arpl
push
addr16
add
add
add
push
sbb
mov
fcoml
lods
lock
dec
ret
adc
lods
dec
adc
push
pop
roll
mov
and
scas
test
outsl
lds
fcomi
movsl
cmp
lahf
push
fucom
push
dec
scas
roll
pop
negb
dec
outsb
insb
out
and
mov
mov
pop
test
dec
inc
inc
sti
xor
jne
imul
enter
loope
cmc
in
dec
lea
test
ja
and
fldl
mov
jb
push
sub
inc
and
xor
test
nop
push
mov
mov
inc
add
cltd
push
add
mov
pop
xor
push
sarb
idivl
push
jmp
mov
mov
pop
icebp
mov
addr16
adc
int
mov
clc
inc
insb
cltd
outsl
data16
jae
adc
dec
or
pop
stc
out
push
pop
bound
or
add
add
pop
cltd
and
dec
jne
fnstsw
call
ss
sbb
mov
sbb
mul
jb
xlat
mov
jnp
or
ret
call
jecxz
rcll
push
add
icebp
dec
or
mov
stos
mov
cmpsb
adc
ja
imul
jle
notb
loopne
mov
or
fisubl
shll
pop
notb
movsb
fs
aas
mov
mov
pop
stos
rorb
and
pop
stc
subl
xchg
pushf
mov
xlat
xor
in
add
and
mov
daa
test
cli
mov
arpl
add
adc
push
out
push
jmp
mov
sbb
or
pop
jbe
lret
xor
lods
jge
xchg
idiv
je
rorb
adc
dec
inc
dec
jp
inc
lds
cli
lcall
push
addr16
add
add
add
aas
or
mov
popa
out
fnsave
ret
push
sbb
in
xlat
aas
mulb
lret
arpl
sbb
les
repz
sub
or
fwait
adc
mov
out
adc
stc
xor
pushf
rcll
test
ljmp
stc
pop
scas
pop
cmp
inc
sbb
mov
imul
jg
mov
hlt
ja
hlt
sbb
mov
push
mov
icebp
test
jge
rcl
mov
and
ss
sub
pop
call
shll
movsl
rolb
out
pop
mov
add
pop
cwtl
mov
shrb
lock
lock
and
cmpsb
and
pop
or
sbb
mov
test
mov
mov
js
movsb
ret
jp
xorl
insb
lret
jo
addr16
add
add
add
sub
loop
fwait
adc
mov
repz
mov
mov
fwait
xlat
test
mov
mov
cmp
xchg
pop
das
dec
ret
sub
push
sbb
test
ljmp
or
iret
xor
test
dec
xchg
add
cmp
je
adc
lahf
jecxz
and
ja
sub
add
popf
mov
insl
scas
outsb
push
xchg
or
and
fildl
sti
mov
push
mov
fiadds
fisubrl
and
dec
and
xor
or
mov
adc
stos
gs
rclb
mov
xchg
mov
xor
mov
fs
inc
out
push
std
xchg
int3
addl
dec
xchg
dec
adc
sub
xor
leave
enter
out
test
ljmp
jnp
mov
sbb
pushf
test
mov
dec
pop
pop
sbbl
fstp
rorl
or
movsb
addr16
add
add
add
dec
jnp
stos
cmp
fisttpl
push
jg
fsts
bound
dec
pop
faddl
inc
rorl
lods
mov
sub
fisttpll
repnz
ljmp
fucomp
add
add
insb
sub
pop
mov
rorl
sbb
sub
sbb
add
mov
jbe
or
lcall
lret
push
test
push
adc
and
loop
jecxz
push
add
cmc
inc
pop
daa
out
insb
xchg
inc
mov
daa
fwait
mov
int
inc
sbb
mov
push
les
ret
fs
ja
adc
gs
mov
imul
jmp
mov
outsb
outsl
sbb
jo
push
out
arpl
and
jb
insl
popa
jecxz
push
jl
cmpl
mov
mov
cmpb
mov
mov
cmpsl
mov
inc
mov
loope
mov
jecxz
out
mov
xchg
add
add
add
add
mov
ljmp
mov
aam
pop
ret
cmp
fiadds
pop
pop
lods
test
sub
movsb
pop
mov
out
ljmp
mov
aaa
nop
push
dec
push
ret
stos
jne
add
pop
mov
dec
outsb
mov
in
jp
int3
pushf
mov
sar
jbe
add
dec
lcall
jp
loop
lret
inc
sub
aad
xor
cltd
fs
cltd
xor
scas
insl
negb
xchg
enter
jns
mov
xor
adc
fidivs
int3
adc
xchg
push
sub
mov
icebp
jne
push
fdivrs
fcoml
out
pop
enter
sbb
shlb
test
inc
cltd
sbb
icebp
daa
xorb
loopne
push
outsl
mov
pop
pop
out
int
mov
popl
mov
in
adc
push
mov
dec
jnp
push
xchg
test
jg
into
lret
orl
add
add
in
adc
movsb
ret
pop
mov
sarl
fbld
push
fcmovne
or
sbb
xor
int3
hlt
jecxz
js
jns
cmp
adc
es
mov
rcll
arpl
cmp
pushf
pop
sub
fs
mov
jecxz
pop
mov
rcll
in
mov
pop
xchg
add
cltd
dec
inc
pop
les
xchg
repz
push
test
dec
xlat
cmpsl
into
jo
dec
sub
aaa
aam
sub
mov
test
movsl
cmpsl
pop
out
and
shrl
cmp
cs
mov
jg
lahf
out
ljmp
sarl
dec
cs
xchg
push
fldenv
inc
add
std
inc
outsl
jno
and
sub
mov
bnd
cmp
sub
movsb
dec
stos
popf
call
mov
inc
add
sbb
mov
mov
mov
dec
test
jge
jg
mov
mov
lock
in
lcall
jae
dec
mov
and
or
add
add
add
jnp
pop
mov
jle
mov
cwtl
jg
adc
cli
mov
jnp
cmp
dec
pop
push
and
dec
incb
faddp
rcrb
in
shll
or
leave
pop
loopne
push
mov
stos
dec
inc
inc
push
sbb
dec
inc
cmp
fadds
insl
scas
addr16
inc
pop
lods
adc
adc
jecxz
rcrb
pusha
popa
push
out
cmpsb
repz
push
sbb
mov
jecxz
test
insl
xchg
cs
inc
xor
push
bound
shl
mov
add
jnp
mov
jecxz
sub
sub
and
int3
sub
jno
inc
aam
ss
notl
add
jno
sbb
xorl
mov
adc
sarb
and
mov
sarl
decb
adc
mov
inc
xchg
xorb
dec
or
jg
dec
arpl
pop
addr16
add
dec
ja
cmpsb
push
leave
cmpsl
dec
jg
push
ret
adc
in
lcall
and
pusha
ss
jl
sub
and
or
mov
cld
or
pusha
gs
fiadds
sub
lods
mov
push
je
ss
sub
sbbl
push
xor
stos
loopne
js
pop
inc
stc
ret
dec
out
sti
imul
leave
and
movsl
fnstsw
pop
inc
in
mov
enter
loop
push
fstpt
dec
iret
sbb
jmp
push
int3
xor
sub
inc
sub
cwtl
lret
fsubrs
mov
mov
dec
clc
mov
sbb
cmpsb
inc
xchg
push
cltd
shl
loopne
pop
mov
mov
lcall
adc
add
add
sub
mov
dec
or
pop
into
out
xchg
fdivp
mov
bound
sbb
pop
pop
or
add
insl
sbb
outsl
mov
cmp
adc
add
add
add
cmpl
fmuls
or
jne
ret
fdivs
jne
in
dec
fbstp
rclb
mov
sbb
cs
lds
std
jbe
cmpl
and
cmc
sti
loopne
jg
dec
test
pop
mov
cmp
jmp
in
push
lcall
push
lret
adc
ret
mov
pop
push
mov
mov
jp
out
lock
inc
or
andl
movb
or
test
pop
xchg
pop
mov
mov
les
pop
push
popf
lahf
adc
cld
stc
sbb
repnz
movswl
stos
xchg
int3
loopne
jecxz
jb
xor
lods
push
les
jne
add
test
mov
dec
cmpsl
les
jecxz
loope
mov
dec
iret
sbb
leave
cmpsl
xor
pop
jge
pop
xor
mov
pop
mov
insb
mov
mov
add
stos
xor
cld
sti
lcall
inc
dec
sub
outsl
stos
push
mov
addl
mov
sbb
lock
xchg
fisttpll
ret
push
xchg
jl
cmp
mov
mov
cmc
in
push
je
enter
dec
insl
std
std
jno
loope
sbb
add
and
pop
or
cmpsb
out
sahf
out
jne
in
arpl
xor
mov
jnp,pn
jmp
je
sub
test
daa
loope
add
aam
or
push
mov
pushf
push
in
aam
jmp
sub
loopne
adc
jne
xor
ljmp
add
int3
or
adc
push
cltd
xchg
mov
stos
aas
sahf
cmpsb
out
lock
ror
mov
sub
inc
dec
repnz
loop
int3
push
std
bound
xchg
fchs
lea
sub
cmp
mov
push
push
call
mov
mov
add
out
call
cwtl
popf
pop
cltd
into
into
adc
or
int
and
mov
push
mov
insl
mov
mov
add
or
jp
xor
mov
ja
mov
and
js
je
and
push
stos
aad
push
inc
stc
lret
in
out
jnp
ds
popa
jl
ret
push
xor
addr16
xchg
rorb
or
mov
fcoms
mov
adc
lcall
dec
dec
cmp
cmp
push
cwtl
aad
mov
pusha
repz
mov
and
cltd
xor
dec
pop
test
imul
cmovle
xchg
jns
lcall
push
ljmp
ja
into
add
int3
dec
sub
mov
and
mov
pop
jg
jae
ret
imul
mov
push
push
call
sub
out
insl
cli
mov
add
into
std
sti
leave
sti
iret
jmp
adc
addr16
add
sbb
jmp
in
push
xor
push
xchg
mov
lods
mov
mov
pop
call
bound
add
movsb
arpl
in
filds
ja
stos
fbstp
data16
cld
imul
popf
mov
lods
xchg
add
pop
outsl
and
mov
push
aam
test
sub
add
in
xchg
push
jo
cli
int3
xchg
nop
or
cmpsb
pop
or
and
or
test
cmp
or
dec
gs
push
mov
pop
xchg
insb
push
fdivs
push
mov
inc
xchg
dec
push
push
xchg
lods
adcl
ljmp
pop
lahf
inc
inc
jl
pop
cltd
push
shrb
std
in
pushf
push
mov
and
dec
push
mov
pop
idiv
or
stc
repnz
cmc
dec
insl
sub
mov
add
mov
sub
xchg
xchg
in
mov
add
mov
xor
fiadds
rolb
add
add
xchg
push
les
call
inc
push
ss
shrl
mov
popf
xor
mov
ret
mov
push
mov
mov
lcall
in
int3
mov
mov
lods
int
sahf
xchg
movsl
adc
leave
mov
cmp
insb
xchg
addb
inc
aam
fwait
stos
dec
test
mov
pop
subps
sbb
mov
or
push
ret
leave
jl
mov
mov
adc
stc
fmull
xlat
stc
cwtl
add
movsl
mov
int
addr16
pop
movsl
or
xchg
lcall
sub
mov
and
mov
mov
pop
insb
test
add
mov
jo
mov
jnp
es
xchg
int3
adc
add
push
push
movsb
sbbl
cmc
ret
lahf
jg
icebp
fs
sbb
leave
rcrb
pushf
ror
pop
outsl
mov
xor
mov
add
add
jg
mov
sahf
loop
lahf
imul
add
add
add
cmp
popf
rol
adc
repz
push
in
shlb
jmp
dec
outsb
mov
cli
mov
fnstcw
pop
sbb
enter
adc
popf
out
loopne
ret
mov
mov
push
and
mov
mov
scas
xchg
fs
int3
add
and
mov
stos
pushf
int3
loopne
fidivrl
data16
pop
inc
data16
mov
mov
aas
std
inc
lods
mov
or
jge
adc
test
xlat
push
jns
push
popa
jle
add
sub
jmp
dec
add
int3
push
mov
sbbl
das
jno
aas
and
cmp
test
mov
pop
outsl
jl
jecxz
rorl
cmpsb
fwait
inc
dec
xchg
repnz
sbb
cmc
stos
dec
sbb
jmp
adc
mov
add
stos
cmp
ret
or
lea
add
add
inc
enter
pushl
cld
sbb
addr16
add
add
cld
enter
jmp
jno
sbb
ja
mov
cmpsl
dec
push
cmc
mov
and
enter
xlat
dec
call
or
outsl
dec
les
incb
add
and
les
or
movsb
mov
ljmp
imull
lahf
xor
cmp
xor
les
insb
pop
jmp
loopne
mov
cmp
pop
scas
xchg
fstpl
xor
imul
inc
xchg
rorl
mov
lcall
mov
xlat
sbb
jge
into
add
ljmp
cmovg
mov
dec
bound
cmpb
push
push
pop
mov
in
xor
fs
into
shl
adc
inc
sar
rorl
mov
cmp
push
imul
xor
shlb
xlat
pushf
shrb
lcall
cmp
ret
add
add
add
aas
and
inc
xor
jne
fisubrl
into
and
lock
mov
negb
and
mov
ffreep
and
repnz
or
jp
sub
loopne
jo
les
xchg
xlat
or
sub
add
and
nop
mov
imul
push
pop
mov
jl
ficoms
sbb
jg
jae
call
std
mov
or
inc
in
js
ds
cli
fists
stos
loop
mov
xchg
out
jecxz
insb
cmpsb
jno
pop
cli
gs
dec
lods
data16
and
jb
xchg
or
divb
aad
fdivp
pusha
add
mov
fdivs
push
xor
andb
loop
popa
das
jno
mov
jns
mov
frstor
xor
mov
dec
cmp
jp
push
pop
ret
mov
hlt
shl
xor
add
sub
scas
mov
aas
scas
addb
add
add
add
cmpsb
sbb
add
mov
jl
push
dec
flds
add
jno
cs
xor
mov
repz
gs
adc
out
jbe
out
arpl
sti
jnp
inc
insb
pop
jne
push
scas
jg
scas
pushf
scas
popf
movsb
dec
jno
fadds
add
inc
push
cmp
ja
call
xor
pop
push
or
mov
pop
xor
outsb
rclb
push
aad
in
jmp
das
or
lcall
push
pop
cld
pop
scas
stos
daa
jl
mov
in
popa
aas
sti
testb
push
push
call
ficoms
jp
pop
sub
mov
adc
adc
mov
out
mov
dec
dec
ss
cmp
mov
xor
lret
xchg
and
mov
mov
clc
repz
add
jg
jne
jne
jg
loop
mov
lds
add
add
add
ljmp
and
test
pop
cmpsb
adc
int3
rclb
jg
dec
mov
jne
inc
push
pop
rcll
push
daa
and
xor
mov
jae
ret
dec
enter
and
ror
or
pop
jbe
sub
sbbb
divl
push
add
adc
out
repz
das
aas
add
jnp
xchg
arpl
push
xor
cwtl
fildll
pop
mov
rcr
xor
pop
outsl
xchg
mov
loope
mov
dec
call
sahf
jno
stc
push
inc
ret
popa
xchg
push
call
xchg
mov
push
addr16
xor
es
jmp
int3
mov
sbb
jo
jne
push
or
dec
dec
paddq
push
cltd
incb
dec
movsb
out
inc
pop
dec
or
cmc
inc
lret
jecxz
in
aad
push
movsl
cmp
mov
add
dec
pop
mov
cmc
mov
jmp
add
add
mov
fwait
or
push
add
push
rcll
movsl
jno
mov
imul
aam
fcompl
mov
adc
pop
shlb
rcll
xor
and
xlat
lods
mov
cli
jne
inc
fxch
xchg
add
jno
inc
mov
cmp
or
pop
mov
lcall
cmp
int
je
test
jo
push
cs
dec
ret
lea
mov
adc
jno
xchg
push
das
mov
xchg
sbb
and
dec
xor
jmp
mov
xchg
imul
jp
fld
inc
mov
pop
mov
aam
xchg
dec
mov
ja
and
ja
add
inc
jge
xor
push
repnz
and
push
std
movsl
es
jmp
xlat
inc
xor
push
jmp
lcall
add
add
outsb
jle
lods
testl
movl
add
inc
xor
shl
ljmp
and
add
or
xchg
mov
mov
mov
lret
pop
adc
dec
cmp
pop
stc
lret
fists
sub
push
mov
and
insl
jno
outsb
int
les
and
xlat
fmull
add
sub
pop
enter
add
inc
inc
pop
fadds
mov
out
sarl
sbb
jb
jg
lahf
mov
je
cmp
or
shl
mov
push
adcb
int3
mov
mov
jns
add
mov
cmp
jle
nop
pop
push
popa
pushl
add
sub
ss
jno
data16
movsb
mov
popf
and
les
inc
sbb
xchg
mov
lea
mov
mov
add
in
addr16
add
add
lds
mov
shrb
pop
inc
loopne
cmpsb
or
movsl
daa
jp
outsb
xchg
and
repnz
xor
rcl
loope
imul
push
repnz
scas
push
jno
adc
nop
sahf
je
mov
xchg
mov
inc
jo
cmp
or
xor
mov
xchg
cmp
pusha
movsl
ss
outsl
iret
les
inc
negl
jg
leave
xor
sub
lock
push
mov
js
out
cmp
sbb
adc
sub
mov
pop
adc
jg
shr
into
jle
lods
or
sub
adc
lods
outsb
data16
add
cli
jae
lret
clc
add
xor
stos
ds
aad
movsl
cmp
dec
test
and
sbb
and
test
mov
dec
push
jmp
aam
xchg
test
sbb
xlat
in
aad
int
jle
addr16
add
add
add
fildl
cmp
sbb
and
xlat
cltd
mov
sahf
je
insb
or
dec
inc
stos
xchg
je
adc
ljmp
cmp
xchg
sahf
cmp
xor
idivl
mov
pop
imul
movsl
xchg
sub
inc
pop
sub
jne
mov
jmp
icebp
mov
mov
cli
mov
dec
test
jno
rcrl
and
jns
and
mov
shlb
incb
mov
test
aad
push
repnz
sub
test
ljmp
fdivrl
nop
lar
push
sbb
mov
cs
aad
imul
cmp
test
lea
out
mov
dec
fsubrp
stos
xchg
or
dec
in
lcall
jecxz
icebp
dec
lds
icebp
mov
adc
ds
sub
cmp
jg
and
mov
and
out
addr16
add
add
sub
adc
js
loop
sub
pop
cmpsl
arpl
mov
cld
or
orb
fstl
xor
iret
and
int3
ljmp
mov
div
xchg
jl
or
push
xchg
inc
or
inc
push
xor
sub
add
jp
mov
add
push
xchg
imul
das
mov
shll
negb
pop
mov
mov
jno
dec
mov
ljmp
mov
adc
xchg
outsl
leave
pushf
jge
cmp
int3
push
mov
inc
ror
xchg
lods
addr16
in
inc
cmp
mov
add
and
push
nop
cmp
loop
jge
imulb
inc
push
cmc
xchg
jl
jge
das
mov
in
insl
jo
les
dec
xchg
jbe
push
cs
dec
sahf
repz
jmp
ds
repz
fcoms
cmp
and
addr16
add
add
add
mov
pushf
ret
push
test
repnz
arpl
dec
lock
pushf
cmp
fists
adc
pop
das
cwtl
fucomp
cltd
mov
xchg
cmp
xchg
pop
add
je
sub
movsl
xchg
testl
into
push
add
push
mov
loope
mov
xchg
pop
inc
mov
fwait
pop
cltd
repnz
ja
mov
push
adc
cli
clc
ret
push
cld
and
clc
pop
negb
add
repnz
icebp
cmpsl
mov
xchg
and
and
jecxz
mov
iret
arpl
or
add
ss
into
pop
ljmp
and
jmp
pop
lea
into
cld
xchg
arpl
mov
int3
les
stos
mov
filds
test
jmp
cmp
push
xor
add
mov
pop
or
sbb
mov
mov
mov
cwtl
notb
add
add
add
dec
into
push
cmpsb
xchg
mov
xor
mov
daa
int3
and
jp
and
enter
loope
lock
mov
jb
pushf
xlat
xchg
lret
sub
js
xchg
shrb
xchg
aas
loopne
push
sbb
jnp
add
xor
mov
xchg
dec
cli
add
stc
push
sbb
add
and
mov
loopne
dec
aas
push
movsb
or
test
lahf
push
and
xchg
xchg
ljmp
mov
xor
test
loope
inc
xor
sahf
dec
inc
jge
outsl
mov
cmc
cmp
fistl
mov
lds
pop
repz
int3
roll
rorl
arpl
loopne
cmp
jle
adc
jg
leave
addb
aad
popf
lds
in
jnp
push
loope
aam
jb
hlt
cwtl
lea
fnstenv
and
add
add
enter
in
sbb
push
inc
int3
mov
add
add
add
mov
pop
cwtl
daa
fs
mov
jl
inc
sbb
cmovno
sub
in
pop
lret
out
inc
mov
inc
lds
loope
xchg
into
add
lret
push
fs
jns
test
sub
xlat
arpl
push
sub
movsb
sbb
dec
adc
pusha
inc
dec
adc
adc
push
ficomps
cmc
cltd
dec
mov
jle
lock
sbb
int3
sbb
add
lock
inc
and
pop
adc
mov
fstpl
sub
sub
add
outsb
test
mov
and
fistpll
sub
gs
pop
lds
push
or
or
sbb
add
sbb
adc
mov
cmp
mov
or
xor
gs
mov
fs
adc
push
sub
out
jne
imul
cmc
call
inc
push
popa
mov
xchg
insl
addr16
add
add
add
adc
arpl
jle
push
jge
pop
stc
adc
xchg
hlt
add
outsl
imul
xor
fwait
inc
inc
or
shr
dec
out
mov
pop
or
push
int
in
xchg
and
cli
lods
mov
xor
adc
ds
leave
testl
mov
jns
popa
stc
sbb
xchg
push
insl
mov
fwait
std
arpl
ja
pop
mov
and
mov
adc
das
jge
fmulp
jo
mov
xchg
lock
mov
mov
sbb
sbb
fwait
mov
es
insb
sub
add
cmpsl
cmp
std
sbb
jl
cmpsl
stos
imul
sbb
inc
jno
xor
sbbl
or
and
cmpb
or
nop
sub
aad
inc
imul
xor
enter
push
add
add
ja
iret
sub
nop
cmp
addr16
add
add
add
clc
out
pop
xchg
sbb
jl
xchg
icebp
sahf
mov
notb
jmp
inc
inc
cwtl
out
arpl
mov
dec
add
les
pop
sbb
test
mov
aam
cmp
in
insl
adc
or
fistl
gs
icebp
mov
push
jae
test
push
dec
insb
or
imul
pop
aaa
nop
lret
hlt
mov
adc
jne
lock
negb
iret
or
or
ljmp
sbb
out
dec
inc
mov
adc
sub
or
ffree
sub
pusha
mov
jbe
push
orb
out
adc
test
ficoml
cltd
mov
mov
jnp
sub
inc
in
pop
sub
pop
inc
adc
rcr
and
sbb
ss
in
mov
cmp
mull
sti
lahf
push
loop
jge
addl
push
mov
out
out
out
into
gs
cld
test
in
in
rolb
add
add
add
push
sbb
xor
call
push
or
and
push
sbbl
rcr
call
sbb
mov
sbb
jo
xchg
ret
cli
daa
fiadds
cmp
adc
dec
int3
xchg
cmp
in
mov
out
mov
cmovl
int
mov
adc
add
jecxz
cmp
or
xchg
mov
xchg
cmp
mull
pop
inc
icebp
cmp
insb
mov
fldl2t
lock
add
and
in
fcoms
xchg
in
gs
jp
aad
sbb
adc
push
adc
or
dec
mov
pushf
xlat
and
dec
jmp
in
xchg
sub
lahf
mov
ret
and
adc
xchg
fdivl
aad
adc
sbb
jns
xor
pop
jp
outsl
mov
add
les
ficomps
ljmp
push
push
sub
or
add
add
xchg
and
je
out
mov
bound
add
add
add
cmpsl
cltd
dec
lea
dec
scas
cmpb
mov
movsl
sarl
int3
movsb
inc
out
inc
mov
les
or
popf
or
fsubs
xor
jbe
pop
xchg
push
cli
test
mov
inc
fistpl
jae
lock
push
lret
add
xorl
xchg
lea
stc
mul
xchg
adc
les
jle
arpl
stos
or
add
dec
loop
or
inc
in
adc
pop
daa
mov
jle
cmp
movsb
add
or
add
pop
xor
rcrl
jle
into
es
scas
lcall
mov
jns
adc
rclb
xchg
cmp
push
pop
mov
inc
lods
and
out
pop
mov
push
gs
xchg
xchg
cmc
imulb
add
dec
daa
dec
das
outsb
imul
push
xchg
and
iret
andl
add
add
add
lea
int
mov
jns
mov
cmp
rorl
ss
scas
mov
jae
imul
jno
adc
jo
daa
scas
loope
stos
je
sbbb
push
xchg
inc
les
jg
ljmp
aas
ds
fisubrs
mov
enter
pop
scas
mov
adc
mov
imul
icebp
fdivr
inc
mov
or
pusha
jg
inc
out
cmp
pop
pop
and
clc
bound
test
jmp
adc
flds
xlat
sbb
nop
adc
jno
pop
xchg
mov
sarl
pmaddwd
icebp
dec
mov
test
outsl
xchg
call
insl
push
dec
in
int3
adc
cmp
das
in
lahf
pop
std
mov
and
call
out
lahf
ret
or
int3
inc
arpl
add
add
add
adc
orb
sbb
out
test
clc
pop
das
repnz
stc
adc
xchg
repz
dec
pop
dec
mov
jo
lret
insl
cs
sar
sub
jae
sbb
test
pop
cmp
je
test
dec
addr16
test
or
shl
fwait
sahf
cs
mov
rcr
dec
push
inc
pushf
add
lock
lahf
ds
popa
into
lret
sarb
repz
out
cmp
sbb
in
mov
jo
fs
adc
xor
neg
mov
or
adc
cmp
divl
adc
adc
out
clc
jecxz
in
int3
mov
stos
data16
mov
stos
or
data16
pop
mov
loope
daa
dec
and
fisubs
and
ja
dec
ret
movsb
mov
dec
add
mov
sbb
aaa
adc
lock
aaa
loopne
hlt
add
ret
out
stc
dec
das
lret
pop
mov
mov
mov
pop
xchg
or
add
add
add
xchg
lcall
mov
into
dec
dec
jge
pushf
lret
idivl
fists
js
xor
fidivrs
inc
stos
xorl
ss
sub
mov
pop
xor
sti
hlt
adc
sbb
mov
into
lds
pusha
adc
mov
push
and
pop
jp
cmp
jns
call
mov
ljmp
loope
sub
scas
xchg
adc
or
xchg
mov
sub
jb
xchg
out
cmp
pop
adc
adc
lods
test
fwait
adc
lcall
repnz
sarl
in
fs
scas
test
jp
mov
and
cmpsb
scas
jg
iret
daa
dec
xchg
nop
sub
scas
adc
pop
dec
xor
push
test
inc
inc
loopne
outsl
stos
mov
addb
push
or
icebp
mov
or
add
add
add
sbb
sub
dec
in
hlt
addr16
add
add
add
rolb
inc
scas
les
push
clc
cmc
test
lock
and
push
cli
rcll
iret
push
xchg
inc
or
push
cmc
fs
mov
mov
lods
xchg
aaa
inc
fisttpl
aad
repz
cmc
out
push
mov
sbb
or
jae
mov
leave
cmp
dec
push
aam
cmp
fildll
sub
fwait
sub
les
out
dec
mov
cmpsl
add
cmp
mov
imul
adc
stos
dec
xchg
sub
out
sbb
cmpl
sub
mov
arpl
loope
iret
sti
lahf
lods
rclb
test
arpl
jne
imul
bound
push
mov
imul
dec
xchg
jns
ja
enter
loopne
or
in
push
sub
cli
dec
inc
fisttpl
inc
js
sub
mov
pushf
adc
ds
jae
pop
mov
add
add
dec
xchg
add
scas
fwait
mov
test
adcb
scas
push
fiadds
gs
lods
mov
add
les
push
dec
push
rorb
mov
push
mov
push
std
push
mov
dec
xor
pop
mov
dec
outsb
xchg
sub
test
xchg
push
add
add
repnz
xchg
cmpb
and
cli
mov
add
movsb
mov
mov
outsb
loopne
aad
add
mov
xchg
cmpsl
mov
sub
gs
cli
add
mov
sbb
into
push
rol
in
iret
xchg
jne
roll
ss
pop
imull
dec
rolb
mov
dec
movl
dec
xlat
jae
add
fdivs
movsl
mov
cmpsb
mov
xchg
xor
les
jae
pop
ret
push
and
dec
or
mov
add
xchg
and
idiv
lahf
insl
mov
xchg
sub
xlat
add
add
add
das
push
adcl
scas
dec
xchg
fildll
fnstcw
out
test
push
scas
xchg
inc
cmp
ret
sub
sub
repnz
push
fisubrs
sti
pop
mov
notl
dec
add
mov
out
es
jo
jo
sbb
cmpsb
notl
addl
mov
dec
rolb
repz
mov
sub
cwtl
pop
mov
outsl
insb
sbb
sub
or
adc
int3
mov
jp
movsl
into
icebp
stc
mov
and
pop
jg
aaa
hlt
or
inc
mov
and
push
loop
arpl
sbb
xchg
call
lods
sub
test
fistpl
lock
sub
xchg
in
sbb
push
outsl
or
add
fwait
xchg
popa
cmp
int
inc
das
mov
push
int3
jp
and
loopne
mov
inc
inc
jge
push
cmp
jg
leave
or
mov
les
add
add
xchg
je
fsin
xor
sub
lea
popa
xlat
scas
fwait
mov
mov
jle
ds
repnz
fildl
adc
subb
inc
int3
inc
pop
sub
sbb
shll
xor
cmp
xor
sbb
mov
xchg
xchg
scas
mov
mov
repnz
and
push
pop
push
int3
sub
dec
ds
cmp
aas
lcall
sahf
sbb
clc
lods
insl
neg
inc
dec
jle
lock
cli
push
mov
std
imul
mov
xchg
or
lcall
ds
rcrl
inc
inc
mov
loopne
xor
jl
leave
dec
divl
nop
fdivr
sbb
stos
enter
dec
out
adc
adc
xchg
adc
inc
lcall
or
lock
mov
dec
ja
jae
sbb
lds
int
imul
xchg
movsb
pop
mov
or
add
add
add
jb
lcall
lret
fcoms
jp
xchg
pusha
sarl
push
adc
and
adc
or
dec
insl
in
sti
dec
fmuls
das
push
dec
test
ja
mov
mov
push
inc
fnsave
mov
mov
xchg
jle
or
nop
xor
push
fimull
mov
push
addr16
scas
or
sub
push
in
inc
dec
jmp
mov
dec
xorl
xchg
sub
sub
and
frstor
into
ljmp
adcl
fstl
ror
mov
sub
fs
pop
inc
mov
sub
push
and
mov
popf
jmp
xor
cmp
fstps
test
or
mov
sbb
sbb
in
push
jbe
sti
fdivrs
fstl
lret
adc
adc
loopne
enter
add
out
fldcw
push
in
sub
outsl
fiaddl
add
add
add
imul
ja
insb
and
jo
xchg
adc
fstl
xor
or
adc
jg
dec
in
sbb
sbb
sbb
pop
xchg
rcrb
in
ja
inc
test
lret
cmp
daa
bound
clc
jae
js
in
mov
or
sub
cmp
dec
sar
rcr
jp
fisttpl
out
hlt
scas
or
sub
repz
xchg
mov
ja
ret
cmp
aam
scas
inc
mov
das
dec
dec
cwtl
fldcw
push
and
lods
bound
adc
aam
cmp
xchg
test
imul
std
pushf
pushf
xor
rorb
xor
ja
mov
cmp
leave
divb
mov
dec
imul
lock
xor
cmp
subl
in
sbb
sahf
cmc
fsubrp
jnp
sti
enter
into
icebp
fildl
add
add
add
into
mov
cld
pusha
fcmovu
mov
push
jo
mov
repnz
imul
cmp
dec
xchg
adc
dec
dec
aas
andl
push
cli
out
push
mov
sub
lret
xchg
aam
ljmp
add
mov
cmp
insb
data16
pop
addr16
test
jbe
sarb
rcr
cmp
sub
push
jg
sbbl
jo
cmc
push
rcl
xor
ja
pop
fwait
cmpsl
movsl
pop
push
fists
aam
aas
add
mov
pop
xchg
pmaxub
movsb
mov
lods
push
pop
xchg
ja
jecxz
or
pop
inc
jmp
jmp
dec
movsb
fisttpll
jne
jno
mov
inc
test
push
and
stos
in
jb
jge
mov
hlt
pop
add
xchg
xchg
sub
adc
stos
pop
aas
inc
pop
xor
rcrb
out
mov
xor
pop
dec
jle
jg
std
fstpt
and
add
add
add
push
xor
out
cmp
stc
pop
es
xchg
xchg
push
pushf
inc
inc
int
adc
incb
int3
popf
fnstcw
loop
mov
cmp
out
loope
jns
bound
imul
js
in
shll
mov
add
mov
add
mov
cmp
mov
sub
dec
or
out
and
jnp
sbb
test
fucomi
inc
test
idivb
int
fcompl
movb
mov
push
pushl
stos
movsl
and
ljmp
xchg
xchg
loop
dec
rcrb
inc
cltd
push
out
je
inc
sub
xchg
out
fsubrs
daa
lret
imul
dec
cmp
hlt
mov
movsb
test
jne
sti
add
movb
out
cmp
jb
adc
mov
and
add
add
mov
sti
idiv
lods
pop
sbb
mov
fldl
add
add
add
cmpsb
loop
in
jl
jae
int
sub
mov
or
dec
push
adc
push
pop
sub
or
add
lds
loop
lods
dec
andl
fildll
xchg
negl
mov
notb
call
arpl
fistpll
cmp
xchg
test
cs
sub
ss
arpl
pop
aas
popf
xchg
aad
repz
daa
push
bound
repnz
xor
jb
xor
pop
push
jl
stos
jae
add
fcmovnu
cmp
jle
mov
daa
or
sub
out
repnz
xchg
mov
mov
fmull
bound
adc
pop
jmp
shlb
push
inc
movsb
push
mov
insl
pop
out
fldt
jmp
mov
lret
cmc
inc
jmp
orl
adcl
scas
mov
inc
imul
mov
arpl
data16
loopne
dec
fsubrs
xor
dec
leave
adc
leave
jmp
scas
inc
call
fiadds
add
add
add
in
xor
xorl
in
ds
mov
aaa
rclb
add
sbb
xchg
ret
jnp
insl
sbb
js
insb
xchg
sub
gs
add
fistpl
xchg
negb
psrlq
xchg
aad
cmp
pop
cmp
outsl
xor
xor
cmp
in
mov
or
mov
mov
cli
or
sbb
jg
adc
je
sbb
inc
cmp
ret
or
and
nop
fdivrs
xchg
push
add
je
dec
pop
test
out
add
retw
das
sbb
stos
mov
mov
jmp
adc
sub
mov
adc
js
clc
sbb
sub
out
pop
xor
outsb
cmpb
ficompl
repz
dec
jb
xor
adc
dec
sbb
inc
imul
cmpsl
fimull
faddl
filds
add
add
add
and
mov
or
dec
mov
mov
daa
lock
push
sbb
mov
inc
xchg
stos
mov
imul
mov
sub
mov
lock
int3
sub
mov
and
dec
inc
fisttpll
jecxz
test
push
aaa
sbb
pop
dec
add
inc
inc
addr16
xchg
popa
push
cmpsl
outsl
add
pop
shlb
movsl
loopnew
es
int
mov
fwait
adc
cmpsb
mov
adc
test
dec
lahf
lods
pcmpgtb
and
pop
in
out
jb
cs
in
pop
scas
int3
sbb
in
aad
jle
fs
lods
int3
clc
mov
pushf
pop
int
scas
push
orl
push
rclb
mov
scas
inc
out
cli
lods
jne
jo
xlat
out
mov
xor
pop
or
out
cmpsb
fisubl
mov
je
lods
add
add
jg
mov
lcall
fisttps
or
loopnew
add
add
add
mull
cli
addr16
ljmp
adc
fwait
rolb
ret
cmp
push
cli
xlat
cmp
add
jp
or
lret
mov
mov
xchg
xchg
or
lods
xchg
outsl
insl
test
mov
inc
sub
outsl
xchg
sbbb
lret
repnz
out
scas
add
repz
fsubs
int3
inc
jne
mov
hlt
mov
sub
add
jno
xor
inc
pop
icebp
mov
hlt
or
lret
scas
inc
mov
jecxz
push
cmp
cs
bound
popa
aad
dec
add
fistpll
stc
cmp
shll
into
adc
aam
arpl
lock
pop
mov
dec
inc
xchg
bt
stc
push
jecxz
popa
sub
aaa
push
outsl
loop
test
test
xchg
loopne
ret
dec
cmc
pusha
jp
fyl2x
in
cld
fs
add
add
mov
jns
xchg
xchg
mov
fisttpll
add
add
add
popa
push
mov
rcr
and
in
in
pop
push
add
imul
sbb
mov
sbb
mov
sbb
mov
push
loopne
add
push
add
push
ljmp
xchg
out
push
xor
fstp
stos
mov
sbb
test
add
push
out
out
in
incb
je
lcall
cmpsb
add
lods
pop
push
jne
loope
sti
jmp
push
mov
out
fldenv
enter
fsubrl
into
iret
outsl
hlt
movsl
cmp
stos
arpl
pop
imul
fimuls
adc
lcall
cli
push
or
mov
das
push
xor
mov
loope
pop
mov
mov
icebp
xor
or
insl
adc
fwait
ret
add
rorb
sub
push
pop
ja
add
cmpsl
ss
pushf
js
mov
mov
jp
mov
add
fadd
fsubp
jnp
or
cld
les
loop
add
add
add
mov
or
adc
adc
mov
mov
xor
out
cmpsb
or
aad
bound
sbb
rcll
cmpsb
jnp
rclb
es
xlat
and
out
dec
and
popf
sbb
clc
fisubrl
aaa
scas
test
and
pushf
das
push
or
stos
pop
xor
in
les
lret
js
enter
fwait
aaa
shlb
fcompl
test
dec
jg
mov
repz
pop
dec
mov
jnp
pop
dec
ljmp
ror
cltd
pop
or
xor
xchg
fsubp
enter
sbb
push
mov
sahf
dec
test
loop
leave
add
iret
jl
xchg
xchg
jno
ja
fcompl
push
and
addr16
adc
sbb
je
popf
adc
lret
cwtl
inc
pop
mov
leave
ret
outsb
fisubrl
push
cmp
sub
cld
cli
jle
dec
nop
xor
add
jcxz
add
add
add
or
jnp
hlt
in
sbb
data16
test
cmc
out
mov
add
jnp
push
fstl
in
push
jns
adc
insb
clc
push
movsw
and
mov
flds
jb
mov
mov
pop
fdivl
push
popa
push
iret
adc
rcll
hlt
outsb
cs
sub
les
addb
and
ds
fdivrs
sahf
sub
mov
jae
xor
popa
je
push
cwtl
pushf
xchg
jp
les
xor
lcall
lds
mov
push
dec
test
paddb
pop
lahf
sub
sbb
add
dec
and
outsb
add
push
test
add
or
xchg
xchg
loope
pop
int3
mov
push
pop
in
adcb
jns
and
in
sbb
xchg
dec
lds
movsb
push
mov
fcmovnu
lea
pop
jbe
ja
sti
aaa
out
ja
or
mov
add
add
sahf
jg
aam
add
and
xor
iret
jnp
outsb
and
int3
dec
repnz
or
js,pt
xchg
mov
insl
fstpt
pop
inc
xchg
popf
mov
std
icebp
sub
xchg
ficoms
pop
aam
xor
xchg
pop
jb
push
sbb
mov
dec
inc
or
es
das
in
lds
shrb
xchg
cltd
dec
sarb
lahf
lea
ret
push
add
fwait
mov
in
cmpsb
push
jl
xor
add
inc
cmpsb
lret
jge
subl
int3
jae
add
mov
mov
add
dec
aas
and
out
add
fnstcw
inc
pop
in
mov
xor
pop
mov
cmp
cmp
mov
mov
scas
pop
aas
lea
test
loope
sbb
test
push
sub
mov
cmp
insl
fs
mov
mov
jne
cmp
je
ror
cltd
outsl
mov
aaa
pushf
cld
push
cmp
add
add
xchg
ret
sub
cmp
adc
pop
push
movsb
aas
inc
mov
mov
pop
jge
inc
xor
mov
inc
fcmovnu
sub
lds
lret
lret
pop
xchg
push
or
jb
nop
mov
inc
xchg
shl
jl
add
out
push
std
cmp
movsb
ljmp
mov
dec
xlat
lock
rcr
push
out
clc
adc
adc
push
repnz
ja
or
inc
fsubrs
fcmovb
push
xor
shlb
leave
or
aaa
cld
inc
test
fisttps
mov
inc
dec
mov
push
xor
jmp
xor
or
dec
stc
fnstenv
test
imulb
xchg
pop
jge
xchg
mov
rclb
cmpsl
push
int3
cmp
mov
dec
popa
cmp
push
popf
dec
call
jo
mov
movsb
cltd
cmc
adcb
fcos
pop
mov
sahf
addr16
add
add
add
sbb
xchg
or
jmp
in
popa
xor
repz
jecxz,pt
pop
sbb
negl
out
das
loopne
mov
inc
mov
iret
mov
gs
sahf
stc
lret
out
dec
bound
mov
lahf
out
xlat
adcl
cmpsl
cmpl
loope
cmc
push
adc
jle
lea
dec
sub
sahf
test
test
xor
scas
mov
fdivl
fstps
stos
mov
arpl
ja
cmpsl
cmp
int3
out
jle
xor
dec
lods
movsb
out
push
cltd
dec
or
shlb
pop
cmp
rcll
orb
ret
adc
jmp
out
sub
dec
and
orb
cmpsl
ja
cmp
xor
lahf
inc
xchg
daa
dec
popa
cld
bound
push
movsw
mov
xchg
adc
inc
mov
sbb
add
or
repz
lock
jg
in
and
mov
addr16
add
add
add
negb
or
pop
jl
inc
clc
int
pusha
inc
shr
jmp
js
fwait
inc
pop
inc
fsubrl
cmp
fcom
outsb
pop
add
inc
push
xor
or
xor
dec
xor
inc
outsb
push
shll
les
data16
pusha
fdivs
cli
dec
out
inc
repz
fisubrl
hlt
enter
push
dec
movsb
lcall
les
sub
out
xor
lret
imul
adc
and
jle
sub
test
pushf
notl
mov
pop
sub
nop
insl
push
je
cltd
push
xchg
test
jns
lock
paddd
outsl
mov
xlat
fdivr
repz
mov
mov
inc
push
push
mov
je
dec
fisttpll
dec
outsb
dec
out
mov
jae
jl
add
adc
in
int3
add
dec
mov
xlat
sub
loope
dec
loopne
test
xchg
lds
xorb
xchg
fwait
cwtl
pop
popf
pop
xlat
fistpl
add
add
add
add
jb
xchg
call
inc
movsb
and
les
lret
pop
movsl
xchg
data16
in
leave
adc
icebp
mov
push
test
cmpsb
or
incb
push
cmp
scas
cmp
jbe
inc
fisubl
inc
cmp
sub
pusha
das
mov
in
jnp
enter
jp
test
int
les
adc
adc
mov
pop
imul
pushf
add
xchg
push
adc
pop
into
adc
mov
sub
push
insl
push
xor
pop
add
addr16
push
pop
mov
fidivl
nop
inc
ds
add
sbb
jns
scas
lods
js
aam
rol
lock
lcall
add
shr
out
fidivl
sbb
nop
or
or
sbb
cmp
ja
adc
mov
mov
gs
sahf
push
shll
mov
or
add
add
mov
dec
js
stc
mov
dec
int
repz
jmp
add
fsubl
mov
jno
xor
xchg
push
addl
pushf
lods
or
std
cmc
shrl
jae
sub
enter
fucomip
jl
mov
ss
std
movsb
xor
dec
sbb
sbb
cmp
inc
push
into
mov
call
addr16
sbb
mov
mov
xor
andl
das
es
negl
shrl
push
inc
gs
aas
das
dec
mov
jl
ret
xchg
sbb
aam
jmp
sarl
sti
cmpsl
xor
xor
inc
das
cmp
test
mov
and
xchg
sbb
and
pop
pop
cltd
add
mov
fdivl
jns
inc
mov
aad
shl
dec
mov
aad
pop
or
scas
and
aas
adc
std
lret
push
mov
pop
insb
fildll
fwait
jns
jns
cwtl
mov
add
add
add
notl
dec
xchg
rol
dec
fistps
add
add
push
test
or
jns
sbb
xchg
pop
ja
in
push
xchg
std
test
and
int3
pop
cmpb
jns
int
sub
call
mov
mov
std
ss
hlt
inc
test
pop
fdiv
adcb
hlt
imul
jl
mov
mov
inc
mov
in
jl
inc
sarb
stos
dec
movsb
push
jb
mov
lods
aas
aad
inc
cmp
and
inc
cmp
stos
push
insl
push
pop
sbb
cmpl
and
lods
loop
pop
jbe
in
lcall
mov
jle
pop
mov
mov
enter
mov
pop
cmp
adcl
jge
outsb
test
je
mov
outsb
mov
out
inc
mov
cmp
icebp
bound
inc
aam
dec
push
pop
and
jmp
add
add
mov
pxor
jnp
adc
jne
sbb
xchg
lret
add
add
add
and
mov
js
inc
pop
jl
xchg
jo
jb
add
dec
and
shll
shrl
scas
jae
push
sub
and
arpl
lock
adcb
and
add
mov
cmc
jmp
ljmp
pop
scas
xor
mulb
adc
pop
popf
sbb
gs
push
sahf
xor
or
add
or
clc
xor
loopne
inc
mov
sub
lock
sbb
add
adc
out
mov
pop
xchg
cmp
cmp
add
cmpsl
adc
xor
adc
aad
pop
adc
test
hlt
scas
push
jg
mov
iret
aad
and
imul
movsl
mov
mov
loopne
icebp
insl
jb
inc
ficompl
jmp
adc
loop
int
sbb
sub
jmp
mov
sti
pusha
out
lods
xor
aas
xlat
fistl
das
fstl
addr16
add
add
add
mov
xor
ficompl
jecxz
inc
out
inc
jg
jns
fmulp
sub
iret
call
and
xchg
sbb
mov
stos
ret
str
out
daa
mov
pop
inc
inc
mov
or
sarl
sbb
mov
enter
cmp
jae
jp
and
shr
xor
cmp
jo
and
frstor
xorb
sub
aad
lahf
add
mov
push
mov
pop
cmp
pop
ds
int
test
adc
scas
mov
jl
push
or
sub
add
iret
iret
inc
xchg
add
nop
cld
and
mov
notl
xchg
lret
cmp
in
int3
popf
int
out
xchg
cmp
stc
mov
int
mov
push
outsl
mov
and
aaa
jecxz
or
loopne
push
data16
gs
lea
add
jb
scas
decb
fisttps
xchg
bound
in
add
add
add
and
or
cmovae
lods
pusha
mov
enter
mov
mov
mov
imul
cmpsb
mov
fcmovu
xor
xorl
or
sub
pop
int3
insl
or
mov
mov
pop
jbe
mov
imul
cltd
and
jne
add
push
movsl
pop
or
rcrb
dec
cmp
out
xchg
std
push
lds
mov
js
pushf
xor
popa
icebp
je
xchg
mov
cld
adc
dec
jns
push
xor
sbb
jnp
addr16
mov
lods
dec
js
pop
add
jmp
sti
cmc
push
lret
or
xchg
out
cmp
scas
dec
or
lods
testl
and
cmp
cmpsb
pop
xor
push
add
dec
xchg
test
fsubrl
decb
shrb
cmpsb
mov
inc
push
lahf
mov
pop
jp
pop
add
xlat
mov
xchg
pop
es
addr16
add
add
add
fstps
imul
fmuls
gs
sub
lret
jecxz
push
arpl
push
or
cmc
sub
dec
shl
das
shlb
or
pop
stos
pushf
push
mov
adc
adc
test
inc
jmp
hlt
and
into
loop
fldcw
jb
xor
or
mov
out
adc
aas
call
fidivl
ds
sub
sbb
xchg
dec
outsl
xlat
jp
pop
jbe
adc
inc
and
mov
adc
in
lods
xchg
sahf
push
fs
dec
je
push
cmpsl
dec
pop
sti
insl
add
push
loope
push
push
inc
mov
pop
cmp
mov
adc
cmp
iret
ds
outsb
or
mov
sub
int
outsb
adc
add
mov
inc
jnp
stos
or
fnstsw
lods
cmp
lods
aas
mov
or
push
add
add
mov
jae
ffreep
xchg
dec
sahf
out
fwait
and
fdivl
cmpsl
xor
dec
pusha
movsl
inc
sarb
popl
push
push
jge
jo
std
fs
sbb
into
xchg
lods
lea
jl
jp
lds
mov
dec
hlt
sbb
and
dec
out
out
scas
pop
scas
outsl
stos
jecxz
scas
cmp
inc
iret
mov
sbb
mov
dec
cmc
or
and
xchg
jp
lcall
lcall
inc
jb
mov
push
iret
push
pop
insl
gs
cltd
pop
std
pop
aam
insl
aaa
xchg
xchg
call
lods
mov
sbb
adc
int3
mov
sbb
lret
sbb
push
outsl
mov
imull
adc
lods
and
cmp
pushf
cmpsb
imulb
arpl
cmp
je
jbe
or
and
mov
mov
ds
xchg
jno
lret
mov
mov
or
mov
add
loop
fadd
sti
mov
pop
adc
add
add
add
ljmp
pushf
add
pop
inc
cmp
les
sbb
dec
and
push
aas
cmp
int
lcall
cmp
dec
adc
xor
lods
pop
stc
pop
bound
mov
lret
aam
aas
sbb
cmp
incb
icebp
stos
cmp
pushf
retw
push
xor
sbb
enter
in
jg
xchg
push
out
push
push
pop
pop
cmpsb
mov
sarl
mov
pusha
xchg
iret
aas
mov
insl
std
int
dec
adcl
dec
in
sbb
rcrb
decb
cmpsl
test
ret
out
imul
lcall
sub
inc
mov
or
int
out
fldenv
or
lds
cmp
or
mov
mov
inc
fcom
add
ret
sarl
sub
mov
stc
repz
in
insl
roll
add
push
cmp
adc
neg
jge
xchg
jns
and
add
add
add
pop
dec
dec
xor
pop
xchg
and
lea
scas
dec
cmpsl
hlt
mov
es
xchg
insb
es
add
inc
lret
jne
push
sarb
jge
or
and
les
push
cmp
and
shrb
dec
sub
jmp
sub
xchg
and
cmpsl
movsb
adc
arpl
sti
push
sbb
gs
sbb
test
cmp
add
insl
aad
leave
cmp
pop
sub
pop
xchg
fildl
cmp
cmovg
in
movsl
xor
shll
add
xchg
cmp
andl
mov
sahf
pop
inc
inc
ret
fwait
add
out
iret
fsts
cmp
addb
out
cmc
or
cmpsb
addb
push
pusha
xchg
outsl
shll
dec
sar
jp
add
add
sub
cmp
setbe
lret
sub
ljmp
add
add
dec
sub
sub
xchg
sub
add
add
add
cmpsl
jbe
aaa
adc
fld
inc
pop
cli
dec
stos
xchg
les
iret
movsb
fsubl
or
push
mov
js
jl
insb
insl
jo
cmp
mov
sub
sub
mov
shll
addl
pop
inc
sub
les
xchg
sahf
inc
jnp
inc
pop
test
out
push
or
pop
add
xchg
ret
jl
test
pusha
fucom
mov
jne
ljmp
or
pop
rclb
pop
xchg
pop
daa
mov
iret
xchg
out
dec
insl
data16
mov
je,pn
sbb
movsl
test
mov
and
stos
lret
or
mov
stos
sbb
and
inc
add
insl
in
mov
xlat
and
popa
std
sub
adc
pcmpeqw
ret
gs
rolb
jg
dec
test
adc
movsb
jne
icebp
aad
sbb
ret
ja
and
aaa
divl
into
push
shlb
add
add
add
das
icebp
sahf
or
xchg
lods
cmp
mov
xor
fimuls
dec
incb
sbb
fstpt
push
rclb
pop
loopne
mov
aad
lock
inc
or
aaa
test
repz
add
jl
incb
aad
sbb
or
pop
lock
in
std
loope
inc
jb
shll
icebp
and
fdivrl
sti
push
mov
and
cmp
or
fnstsw
ret
test
cmc
scas
hlt
add
pop
mov
xlat
mov
outsl
and
xchg
push
out
push
imul
cmp
daa
sub
jp
jnp
jb
dec
iret
inc
pop
fsubrl
add
test
mov
mov
jmp
pop
rcrb
cmpsl
xor
add
dec
enter
mov
mov
mov
rcll
lods
lahf
andb
loop,pt
in
xchg
jecxz
jmp
mov
filds
data16
add
add
add
scas
xchg
arpl
sub
inc
insb
sub
lahf
inc
cmp
insl
cmpsb
mov
das
aad
lock
push
out
hlt
mov
shrl
xlat
fsub
out
clc
push
rcl
mov
dec
outsb
ds
leave
leave
cld
xchg
outsb
pop
dec
imul
mov
in
enter
aad
jmp
adc
int3
lock
popf
repz
inc
pop
repz
mov
mov
jbe
jnp
jp
test
push
xlat
shll
or
add
subb
pop
dec
xchg
dec
xor
jmp
enter
iret
subb
imul
push
js
push
cld
dec
je
xchg
jae
jmp
lods
loopne
pop
fimuls
jmp
or
aaa
and
pop
loope
testb
stc
stc
mov
ja
pop
into
jp
and
in
inc
or
jo
cltd
rcrb
mov
mov
or
sub
mov
add
add
jne
pusha
popf
pop
subl
add
add
add
mov
jno
mov
pop
loope
push
stos
xchg
adc
xchg
sbb
daa
add
jne
cmpsl
or
jp
jmp
mov
mov
xlat
ss
xchg
mov
in
idivl
js
stos
neg
mov
adc
jns
hlt
out
fucomi
loop
mov
fucomp
push
add
dec
pop
jmp
mov
test
out
inc
cwtl
clc
xchg
and
xchg
dec
mov
add
cmc
add
enter
scas
filds
nop
repz
or
out
mov
addb
stos
sbb
std
xor
mov
int3
dec
lods
mov
dec
and
loope
fsubl
push
mov
ljmp
adc
inc
and
inc
adc
push
xchg
and
cwtl
dec
divl
jmp
repz
mov
popa
lfs
in
sub
scas
fdivr
fnstcw
jecxz
test
testb
add
add
cmp
xor
movsl
imul
mov
adc
loop
js
jge
dec
outsb
repz
pop
adc
mov
jle
fidivl
mov
ficompl
out
cwtl
iret
push
and
jae
loope
dec
add
adc
or
mov
jbe
pop
mov
xor
dec
mov
hlt
lock
adc
fcoml
cltd
in
mov
lcall
push
mov
dec
orl
pop
xor
push
jg
pop
pop
enter
dec
sub
cmp
cmp
aas
xor
rclb
xor
gs
js
decb
push
push
aas
push
mov
jne
lcall
fstpt
cs
and
mov
dec
lahf
fstp
xor
es
test
sbb
ret
add
xor
jb
jae
mov
testl
add
subl
ror
mov
mov
xor
arpl
jb
push
dec
addr16
in
in
xchg
addl
push
rorl
movsb
jl
push
sbb
xor
into
inc
repnz
rcrl
aas
mov
decb
lods
xorb
loopne
dec
test
aad
out
dec
les
sub
out
xlat
or
test
cmpsb
dec
fisubs
hlt
arpl
scas
pop
popf
repnz
pop
inc
mov
in
mov
shll
mov
inc
push
mov
xchg
nop
push
cltd
les
mov
ret
lea
xor
pop
adc
into
repz
mov
stc
pop
adc
cmp
mov
push
mov
jbe
pop
or
fdivs
insl
sub
mov
inc
gs
mov
add
add
ds
in
idivl
js
mov
xchg
popa
mov
addr16
add
add
add
cs
pusha
xorb
xlat
popa
add
pop
mov
adc
fildl
in
stos
jno
sub
jnp
fcoms
jbe
lock
xchg
push
mov
mov
fs
cmp
dec
push
inc
mov
shl
enter
mov
test
stos
mov
jmp
jmp
pop
mov
sub
dec
in
cmp
fs
lret
pop
cmc
jnp
mov
std
dec
movsl
add
xor
js
jo
or
jecxz
mov
das
jne
or
mov
fwait
pop
rcl
dec
sti
enter
mov
notl
pop
and
mov
mov
int3
mov
mov
ficoms
mov
in
inc
lea
sbb
movb
es
jo
mov
jb
mov
ds
xchg
lret
mov
in
and
pushf
mov
data16
add
pop
es
inc
cli
aas
into
lret
dec
lock
stc
add
add
add
mov
inc
push
mov
sub
rcpps
nop
mov
xor
jecxz
cmp
fdiv
jl
sub
rcrl
adc
xor
dec
ret
std
push
xor
xor
mov
leave
mov
inc
in
cmp
mov
push
js
sbb
xor
popf
not
mov
or
push
mov
xor
lcall
sahf
sbb
jp
sahf
mov
into
inc
mov
pushf
mov
ds
jo
dec
lock
jg
lcall
or
cmc
push
cltd
push
std
pop
imul
inc
fld
push
jne
mov
cld
test
or
in
pop
aam
inc
push
loop
or
icebp
pop
testb
outsb
and
jno
andb
movsb
ficomps
sbb
push
negl
lods
mov
vmread
stos
xchg
rdtsc
pop
pop
or
inc
movsl
insb
cltd
mov
lcall
xchg
daa
pop
mov
cli
add
add
add
test
cs
add
sub
dec
stc
test
add
enter
mov
or
adc
dec
pop
repz
push
push
repnz
xchg
les
lahf
cmp
and
neg
mov
sub
in
mov
bound
lods
insb
mov
out
push
inc
and
sub
push
xor
inc
enter
add
fdiv
jle
push
cmp
xchg
dec
jns
lea
jp
add
jnp
out
js
push
sub
mov
cli
xchg
aam
lret
push
or
mov
adc
popf
dec
jge
lock
or
mov
mov
in
push
xchg
push
dec
fimull
fsts
scas
mov
and
lock
test
aas
adc
shll
scas
lret
mov
gs
xlat
pop
and
xor
pop
dec
mov
mov
lret
ret
aas
out
and
rolb
in
sub
mov
mov
cmp
aaa
jae
cltd
dec
mov
jno
inc
aas
mov
addr16
add
add
add
sbbl
adc
cmp
mov
add
movsl
push
mov
ljmp
add
or
xlat
mov
popa
pusha
or
repz
sbb
xchg
jmp
mov
loopne
dec
mov
stc
jb
jmp
mov
movsl
lahf
repz
fisttpll
pop
out
xor
test
sbb
loopne
mov
enter
inc
pop
int3
lcall
jmp
dec
adc
adc
xchg
inc
leave
rorl
hlt
jno
das
jne
cmp
mov
ret
xor
pop
or
rcll
push
das
sub
loopne
pop
dec
sahf
pop
imul
sbb
sar
mov
rcrl
mov
leave
incl
cmp
mov
js
popf
lds
jo
aas
mov
mov
cwtl
arpl
mov
lods
cs
and
add
mov
movsb
inc
mov
add
add
push
into
nop
out
cwtl
jle
push
sub
dec
lret
xchg
ret
cld
add
add
add
clc
negb
mov
and
test
add
ret
aad
clc
fldcw
push
test
cmpb
cmp
pop
mov
test
addb
mov
mov
dec
add
into
add
rorl
jo
int
repnz
mov
cwtl
movsl
push
rclb
cli
xchg
outsb
xchg
mov
add
scas
and
add
xchg
xor
and
xchg
addb
mov
ljmp
lret
mov
xchg
call
jge
pop
in
repz
pop
xchg
mov
push
outsl
popa
out
adc
cmp
dec
mov
cmp
cmp
push
push
pop
inc
clc
les
jns
loop
ss
cmpsl
mov
jnp
pop
fistpl
cmp
scas
bound
popf
mov
adc
sub
xchg
push
add
sub
test
jno
test
jg
push
pop
push
mov
addr16
add
add
add
mov
xor
pop
mov
out
sahf
bound
cmp
sub
aaa
test
int
lcall
or
mov
xor
iret
jne
fsubrs
jl
jl
dec
sbb
sub
sahf
cli
and
cmp
in
or
cli
ret
negb
and
or
cmp
and
aas
push
subb
insl
pop
es
ss
rolb
ret
push
push
mov
cwtl
sti
sub
xchg
ljmp
pop
inc
in
gs
in
add
mov
inc
cmp
mov
mov
jl
xchg
or
je
lea
stos
sbb
jle
stos
and
sbb
xchg
jmp
or
dec
clc
mov
cmp
mov
ret
push
mov
mov
pop
jbe
rcrl
ja
cwtl
addr16
outsl
movb
add
adc
movsb
push
in
cmc
jne
sbb
js
push
dec
fbld
add
add
add
dec
xor
mov
dec
or
dec
ljmp
aad
lods
stos
dec
adc
sub
add
cmp
pop
mov
dec
cmpsl
mov
je
insb
subb
js
jbe
push
cmc
pop
push
lock
sub
cmp
xor
lret
fwait
imul
or
xchg
popa
and
cmp
fwait
rorb
xor
jecxz
in
test
adc
sbb
sbb
rorl
xchg
rol
lds
jae
jg
ljmp
outsl
cmpsl
adc
and
sbb
call
jmp
cmp
out
or
sub
xchg
aaa
mov
push
push
mov
fadds
xchg
sub
add
es
dec
jp
out
jecxz
pusha
cld
add
lods
mov
mov
sub
xchg
sub
test
pushw
add
add
out
shlb
aas
out
int3
mov
clc
nop
sub
add
add
add
inc
addl
cwtl
cld
mov
stos
pop
fnstcw
movsb
push
inc
pop
cmc
mov
cli
aam
cmpsl
rolb
xchg
int3
jecxz
mov
mov
in
aam
out
shlb
sbb
xor
in
mov
mov
imul
jge
fld
cmp
and
rcrl
popa
outsl
dec
arpl
leave
dec
pop
dec
sub
sub
and
and
sub
mov
repz
lahf
xor
mov
xchg
mov
mov
dec
fs
xchg
mov
fldcw
mov
sub
adc
mov
and
push
pop
je
sub
or
lret
add
v4fnmaddss
rcrb
stos
sbb
pop
fisttps
loop
in
cmpl
jmp
jmp
out
fidivs
add
movsb
pop
lea
es
xor
test
add
mov
lcall
or
add
add
rcr
jmp
jl
popf
inc
xchg
xchg
lcall
adc
xor
pop
call
pop
test
lret
adc
pcmpgtb
call
push
jo
fbld
push
push
dec
add
lock
mov
pop
addb
shr
sbb
inc
cmpsl
dec
fwait
xor
xchg
sbb
ds
mulb
and
ss
xor
adc
rcll
in
fisubrs
pop
fwait
sbbb
or
xchg
pop
mov
shl
sbb
mov
xor
imul
jno
loope
inc
in
jb
cmp
das
fiadds
stc
mov
inc
sti
dec
jecxz
or
pop
les
stos
and
in
clc
cmc
into
pop
cmp
fstl
mov
sbb
sysexit
xor
scas
daa
dec
dec
sub
dec
outsb
fidivs
cmpsb
dec
rol
lret
clc
cmc
inc
stos
repz
cmp
add
add
divb
imul
fimuls
aam
fists
and
js
mov
dec
jo
ret
jg
pushf
jb
xchg
pushf
lods
mov
pop
cmc
fcoms
mov
xchg
cmc
ds
pop
mov
popf
or
out
popf
xchg
mov
dec
inc
and
arpl
mov
mov
in
fwait
mull
shll
test
sbb
pushf
mov
inc
mov
outsl
out
xchg
or
xchg
sub
enter
push
push
mov
jne
stc
inc
nop
cld
mov
test
mov
or
clc
mov
jl
or
cltd
out
or
in
xor
sbb
repz
fcomps
notl
adcl
lret
in
ja
mov
call
push
and
lret
mov
sub
jbe
test
mov
aaa
inc
mov
sub
mov
add
add
std
aaa
mov
shll
outsl
add
add
add
add
imul
xor
jbe
shlb
mov
movl
push
jecxz
xor
fmulp
add
adc
fdivrl
dec
push
jb
cmp
or
es
mov
adc
fistl
dec
fstp
mov
gs
lcall
lds
icebp
cmpb
scas
or
imul
icebp
lods
jbe
xor
mov
je
cmpsb
imul
pop
iret
loope
into
inc
outsb
xchg
push
mov
jb
jle
fbld
mov
fidivrs
aas
cmp
stos
outsl
or
dec
and
mov
push
ret
xor
in
mov
dec
or
dec
andl
push
xchg
out
add
orb
add
dec
push
mov
mov
or
dec
add
add
add
movl
xor
test
enter
mov
hlt
test
pushf
enter
movl
inc
mov
dec
mov
call
mov
call
pop
ljmp
fwait
mov
xor
add
mov
mov
xor
lret
ret
add
enter
dec
sbb
add
decl
test
dec
incl
inc
enter
ljmp
cld
decl
push
mov
and
pop
inc
mov
push
pop
movsb
dec
add
jne
lea
fs
decl
mov
test
add
xor
add
mov
or
inc
mov
bound
inc
cmp
lea
and
incl
mov
cld
add
xchg
sar
inc
incl
mov
xor
add
nop
inc
add
mov
add
add
incl
sbb
jne
mov
mov
movl
incl
fisttpll
test
inc
aas
inc
lea
inc
mov
mov
cld
loop
inc
out
fisttps
jecxz
in
incl
out
aas
call
add
add
test
wrmsr
ja
add
mov
add
add
mov
addl
mov
mov
dec
nop
mov
fadds
add
inc
push
call
mov
mov
cld
mov
add
cmp
mov
mov
push
nop
incl
cld
add
mov
cld
push
nop
inc
add
add
ljmp
movntq
movl
test
jmp
int
sub
add
filds
cmp
je
movl
jne
mov
cld
jle
dec
mov
mov
add
mov
test
add
add
add
xor
inc
add
mov
add
fmuls
cld
call
decl
add
push
es
inc
mov
decl
mov
call
sarb
sub
add
mov
inc
push
mov
shrb
ret
add
mov
cld
test
inc
xor
push
mov
inc
enter
mov
or
add
add
add
incl
cld
mov
mov
xor
and
sub
mov
test
add
xor
add
cmp
jne
mov
pushf
add
add
or
fwait
jne
xor
incl
add
orb
add
orl
gs
je
mov
cld
sarb
pcmpeqw
xor
lea
add
cmp
mov
test
clc
pushl
lea
int3
inc
call
jne
xor
jmp
mov
mov
incl
pushl
inc
mov
jmp
mov
mov
cld
clc
ret
test
pop
xchg
add
inc
decl
sub
add
push
jbe
mov
or
inc
enter
inc
mov
int3
add
xor
rorb
inc
add
fadd
rolb
inc
fmull
inc
test
fwait
clc
xor
inc
xor
pushf
mov
test
clc
dec
inc
mov
xchg
inc
inc
aas
mov
test
clc
pushf
inc
decl
push
movb
add
mov
mov
les
adc
dec
add
mov
lock
clc
inc
add
jge
xor
cmp
paddb
mov
test
dec
test
pop
xor
add
add
psraw
sub
mov
lock
shl
rolb
movl
jmp
pushf
inc
mov
xor
add
mov
enter
xor
add
sub
cmp
rorl
test
test
cmp
pushf
xor
add
inc
dec
mov
test
cmp
fdivl
dec
xor
add
add
dec
test
out
rolb
add
dec
mov
mov
ret
xor
add
add
dec
inc
mov
ror
add
scas
mov
xor
xor
add
mov
clc
rol
mov
mov
dec
jbe
mov
call
rdpmc
roll
add
inc
rorb
jmp
inc
inc
mov
clc
test
clc
lret
inc
into
mov
clc
enter
sub
ret
mov
addr16
clc
add
loopne
dec
into
mov
or
inc
push
mov
in
cmp
ja
mov
inc
fwait
mov
clc
mov
xlat
lret
inc
into
mov
in
scas
lret
mov
mov
sub
mov
mov
clc
loopne
push
lret
mov
adc
jb
add
in
sub
cmp
mov
mov
add
mov
in
into
dec
xor
roll
xor
sub
add
mov
inc
xor
add
inc
xor
sub
test
clc
enter
incl
jmp
mov
inc
mov
fwait
lret
xor
mov
lea
xor
add
inc
dec
mov
gs
inc
sub
inc
xor
push
mov
add
inc
decl
add
inc
mov
fwait
add
add
pushl
int3
xor
add
mov
call
mov
add
mov
in
ret
iret
enter
in
or
adc
push
dec
inc
mov
jb
mov
cld
scas
orb
movb
push
push
xor
mov
call
mov
in
jge
mov
int3
add
xor
dec
pushf
xor
add
mov
test
fwait
add
jmp
mov
add
mov
jmp
mov
rolb
add
xor
rorl
jb
add
clc
inc
jb
mov
xor
shrb
clc
add
xor
inc
adc
inc
test
mov
cld
orl
jbe
mov
dec
mov
mov
mov
or
dec
int3
xor
add
mov
xor
add
adcb
add
inc
mov
xor
dec
mov
hlt
add
push
inc
dec
call
in
lret
mov
adc
inc
and
cmpl
cmpb
mov
cmp
jne
mov
mov
rcrb
or
dec
inc
add
or
test
addb
mov
cmp
je
incl
mov
into
decl
push
lret
inc
into
decl
push
into
call
lret
add
add
mov
clc
inc
inc
mov
push
push
add
mov
cld
mov
into
rorb
xor
jne
call
mov
mov
call
add
rolb
add
add
inc
push
cmp
pushf
movl
test
addb
jmp
in
or
xor
hlt
mov
xor
add
inc
adc
pushf
inc
add
movsl
test
clc
incl
cmp
pushf
inc
push
movsb
jne
push
clc
test
lcall
test
cmp
pushf
add
add
inc
add
enter
add
add
out
sbb
dec
mov
sub
mov
add
cmp
or
incl
mov
mov
lret
inc
into
mov
int3
scas
push
mov
call
sub
mov
mov
xor
pushf
mov
faddl
test
mov
in
ret
add
add
mov
in
ret
mov
in
inc
rol
sar
or
add
add
test
clc
lret
inc
into
cmp
mov
inc
cmp
ja
mov
mov
clc
mov
mov
in
lret
ret
into
mov
scas
cmp
add
jmp
mov
mov
inc
enter
xor
add
cmp
shufps
add
dec
sub
cmp
ja
mov
lods
mov
inc
dec
mov
lret
rol
or
inc
scas
xor
add
add
inc
mov
inc
lret
mov
clc
lret
scas
ret
mov
hlt
push
scas
sub
mov
add
mov
movsb
inc
dec
xor
pushf
xor
rdmsr
rcrl
sar
rolb
xor
jmp
mov
xor
mov
rolb
test
fwait
shll
mov
xor
add
mov
add
inc
xor
rdpmc
roll
loopne
push
in
mov
adc
jb
add
jmp
mov
test
dec
dec
xor
add
dec
mov
dec
in
xor
xor
add
jbe
mov
test
dec
mov
loopne
inc
add
rol
scas
mov
mov
hlt
dec
inc
mov
loopne
lret
test
clc
scas
inc
mov
fdiv
roll
fwait
xor
pushf
cmp
inc
mov
inc
dec
xor
add
loopne
dec
rorl
add
lock
ret
xor
mov
rolb
xor
call
enter
mov
fmul
push
dec
xor
ret
xor
dec
jne
mov
cld
loopne
push
add
incl
incl
mov
lock
lret
add
xor
inc
scas
mov
shl
inc
decl
call
ud0
adc
inc
xor
lock
add
ud0
sbb
xor
sub
push
add
mov
cld
inc
jmp
mov
mov
mov
clc
scas
icebp
mov
lret
or
dec
pop
or
jb
add
inc
mov
fadd
ret
add
int
sub
add
inc
inc
mov
cld
scas
loopne
mov
mov
clc
push
pushl
movb
int3
or
lea
insb
incl
push
movb
leave
les
in
call
inc
cld
mov
cld
xor
pop
mov
clc
test
je
mov
cld
add
add
fiaddl
movb
push
push
mov
pop
lea
ret
mov
xchg
mov
push
clc
jne
mov
push
or
cmp
pop
or
inc
leave
ljmp
leave
in
incl
fimull
inc
nop
loopne
ret
mov
add
push
pushl
mov
or
pushl
cmp
pop
ret
or
inc
push
jle
inc
inc
int
inc
sub
add
lret
adc
xchg
push
mov
rcll
jne
mov
roll
divl
cmp
pop
decb
in
inc
sub
inc
push
add
push
add
leave
adcl
add
inc
rorl
add
add
jmp
jne
mov
or
inc
stc
in
ss
aas
out
inc
mov
lock
and
add
aad
add
clts
call
hlt
iret
jge
roll
jmp
out
mov
pop
push
cmp
sar
incl
inc
loopne
push
push
push
add
add
push
add
sub
jne
lods
mov
dec
out
into
push
loopne
shrb
andl
roll
mov
cmpl
mov
push
push
push
sub
push
adc
insl
mov
add
rorb
add
add
roll
pop
or
cli
add
lea
mov
dec
inc
shrb
and
jne
pop
mov
call
and
push
add
dec
mov
jmp
mov
call
shrl
lock
adc
out
cmp
pop
or
push
cld
mov
and
xorb
add
mov
psubsw
add
rcr
mov
and
add
call
add
mov
aam
or
jne
mov
aam
dec
jne
cmp
jb
jmp
mov
int3
dec
orl
mov
cmp
jb
pop
push
cli
pop
mov
jb
addl
mov
int3
add
jmp
mov
call
add
pop
or
pop
inc
xor
push
mov
call
int3
sbb
inc
add
call
or
cmp
mov
jb
mov
push
add
add
add
int3
jne
movsbl
add
add
mov
add
add
mov
sub
jb
add
jge
add
addl
jne
je
mov
rorb
orl
mov
mov
fadds
inc
pop
lea
push
out
add
add
mov
jb
add
push
call
add
jae
icebp
inc
mov
int3
out
loopne
sub
push
pop
push
jl
add
xor
mov
rcrb
rorl
inc
shr
orl
push
pop
add
jmp
mov
fdivrl
push
pop
call
mov
in
rolb
call
pop
enter
repz
xorl
je
or
jne
jmp
pushl
push
pop
cmpl
jge
mov
sub
pop
inc
mov
sub
lods
add
enter
repz
stc
jge
jnp
call
fadd
dec
insb
stc
cmp
push
mov
jne
mov
mov
add
sub
and
cmp
sbb
pop
call
fsubr
sti
add
add
add
roll
mov
clc
jne
mov
loopne
loopne
lods
int3
inc
mov
add
sub
shrb
add
call
add
dec
insl
in
lea
inc
inc
sub
orl
and
rorl
or
mov
stos
adc
inc
add
jne
mov
cmp
sub
sar
ljmp
sub
mov
mov
and
jne
sub
sbb
dec
push
add
ret
mov
leave
sub
ret
pop
push
rolb
addl
jb
ret
in
jecxz
push
xchg
jne
cmp
jne
mov
rorl
mov
pop
nop
mov
les
add
inc
mov
mov
cmp
or
inc
inc
xor
cld
add
add
add
sbb
dec
je
mov
add
and
jae
mov
incl
push
shr
in
push
add
add
inc
mov
add
jmp
pushf
dec
mov
fsts
movb
sub
inc
add
mov
insb
movl
dec
jmp
inc
fnstcw
testb
rolb
lea
sbb
inc
add
add
mov
fdivl
mov
add
add
or
mov
add
add
push
movb
or
dec
lea
xor
movsl
repz
add
prefetcht0
xor
mov
pop
mov
or
cmpb
movb
add
mov
xorl
mov
sbb
inc
xrelease
clc
xor
lea
mov
fadd
dec
lds
out
inc
lea
enter
push
leave
xor
add
mov
mov
psubusw
add
addb
add
in
inc
inc
mov
addb
mov
sub
insl
inc
add
testb
movl
dec
pop
add
mov
in
incl
out
inc
mov
push
jmp
add
out
insb
inc
jmp
addl
mov
outsb
inc
mov
mov
fcos
mov
in
jb
decl
mov
fdivr
out
rclb
mov
std
cmp
jne
mov
in
outsb
pushf
add
incl
incl
jae
add
incl
mov
jl
add
cld
dec
addb
data16
mov
mov
inc
mov
incw
data16
inc
jge
add
lea
add
ljmpw
pushl
lea
shlb
test
incl
test
inc
push
xor
add
ret
mov
push
movl
add
pushl
incl
mov
or
jne
addl
mov
add
mov
orl
push
mov
ret
adcb
add
mov
ret
or
lea
loop
xchg
aam
out
mov
inc
dec
pop
mov
repnz
orb
repnz
mov
jmp
incl
addl
mov
cmpsb
pop
inc
data16
inc
xor
dec
push
inc
jge
mov
mov
add
add
test
incw
mov
call
mov
clc
ret
rol
mov
mov
pushf
pop
ljmp
add
inc
test
push
mov
mov
push
add
decl
add
cmp
decl
jmp
push
hlt
data16
dec
ret
mov
lea
jne
decl
decb
mov
push
jmp
inc
sbb
movsb
inc
test
inc
decl
test
mov
lods
push
inc
jne
decl
mov
sbb
mov
mov
movswl
xor
add
xor
xor
decb
mov
pushf
inc
decl
sar
decl
incl
addl
xlat
dec
add
mov
lea
call
inc
rdpmc
add
push
lea
js
add
push
lea
fmuls
jmp
dec
mov
mov
call
dec
inc
mov
push
into
test
call
lea
jmp
inc
jnp
add
incw
mov
inc
add
mov
decl
add
data16
inc
dec
test
cmp
add
mov
incl
mov
ljmp
push
incl
call
decl
mov
inc
mov
mov
add
inc
mov
mov
pop
test
clc
lea
cmp
push
lea
mov
hlt
lahf
push
mov
xor
add
mov
mov
rolb
mov
nop
push
add
mov
in
jge
test
jne
sbb
push
inc
call
add
mov
cmp
ud0
test
dec
incl
decl
dec
cld
test
icebp
add
test
incb
jne
mov
cld
xor
push
xor
add
add
add
add
or
jmp
nop
test
xor
mov
mov
add
decl
add
decl
movsl
add
add
rdpmc
addb
mov
add
decl
decl
push
jne
mov
cld
add
push
incl
add
add
mov
sbb
leave
test
jne
call
xor
mov
enter
mov
mov
cld
add
inc
dec
mov
inc
decl
add
xchg
ret
add
add
mov
lea
add
mov
inc
rdpmc
jne
add
inc
clc
add
mov
mov
in
add
test
incb
add
cmp
pushl
add
test
je
mov
sbb
test
js
add
sub
mov
add
dec
push
mov
mov
mov
sbb
or
dec
incl
push
add
mov
orl
add
push
cmp
inc
mov
in
add
xor
add
ljmp
decl
call
mov
lock
mov
mov
mov
mov
addl
mov
inc
push
ljmp
mov
clc
cmp
jne
mov
add
int3
inc
cmp
add
adc
add
mov
cmp
jmp
mov
inc
or
decl
jne
mov
mov
in
xchg
jmp
adc
inc
mov
push
sub
push
test
inc
dec
mov
movl
add
add
mov
push
roll
bound
xor
add
mov
test
call
loop
jnp
mov
cmp
cld
shr
add
push
lea
mov
cwtl
cli
add
or
inc
dec
incl
add
call
add
push
adc
mov
mov
addl
incl
inc
stos
mov
add
mov
cmp
movsb
mov
cld
jae
add
clc
add
mov
clc
pop
inc
xor
pushl
mov
jae
mov
sub
add
mov
mov
ret
mov
ret
mov
add
mov
add
incl
lea
hlt
sar
test
inc
add
testb
push
add
add
add
add
add
mov
mov
cld
fidivl
mov
xorb
add
sbb
jne
mov
sbb
mov
add
ret
dec
or
dec
cld
cmovne
add
seto
inc
adc
mov
cmp
xor
gs
je
push
sarb
mov
push
cmp
add
dec
mov
in
adc
pop
inc
leave
or
gs
add
into
in
enter
push
xorl
or
jnp
test
add
mov
ltr
decl
clc
out
add
cmp
jge
jb
je
pop
push
mov
in
roll
orl
cmpl
hlt
mov
push
jns
lock
ror
test
dec
rcpps
mov
inc
test
je
mov
adcl
and
jp
rcpps
add
sbb
add
je
cmp
js
add
jns
vmread
add
adc
jge
mov
add
or
push
push
mov
add
pop
add
mov
inc
pop
xorl
add
push
clc
mov
jp
add
divl
test
je
mov
or
decb
jbe
mov
add
cmp
add
je
mov
mov
hlt
orb
jb
jmp
xor
pop
pop
pop
ret
ret
mov
xorl
pushf
xor
rdmsr
test
dec
ret
mov
pop
dec
jne
xor
inc
dec
jbe
inc
pop
add
push
dec
push
mov
and
jo
mov
sbb
mov
nop
or
jne
cmp
cld
xor
add
cmp
js
jae
xor
jmp
mov
fdecstp
test
add
add
mov
cmp
adc
jge
mov
jl
clc
dec
jge
mov
jb
mov
mov
xor
add
mov
inc
pop
jge
cmp
mov
imul
fimuls
fists
in
jne
mov
imul
fdivrp
filds
test
inc
mov
mov
adc
rcll
mov
fiadds
mov
mov
xor
mov
xlat
into
ffreep
lret
iret
dec
inc
mov
fmull
dec
jnp
add
mov
inc
dec
lea
add
jb
add
inc
imul
cld
clc
mov
incl
or
sbb
lret
add
dec
add
enter
inc
pop
decl
add
add
mov
xor
or
pop
cltd
push
clc
mov
xor
add
cmp
hlt
cmp
or
mov
loopne
mov
cld
pushf
pop
fwait
mov
lock
adc
orb
xor
dec
mov
iret
inc
jne
mov
cmp
je
add
or
dec
inc
mov
cld
add
cmp
mov
or
mov
test
inc
xor
mov
jne
mov
fcomps
add
incl
cld
add
mov
cld
inc
fidivrs
fbstp
mov
adc
fadd
add
mov
inc
mov
loopne
sbb
sbb
pushf
add
mov
cwtl
inc
inc
jne
mov
clc
add
mov
or
inc
lea
add
inc
rorl
add
shufps
jmp
xor
hlt
mov
fadds
xor
add
cmp
pmuludq
jmp
mov
or
inc
mov
jne
mov
clc
add
xor
jne
pushl
add
mov
cld
add
xor
mov
adc
sub
lea
add
jb
add
inc
add
inc
mov
or
mov
in
scas
inc
mov
in
add
mov
dec
mov
mov
cld
push
dec
add
mov
in
cmp
mov
mov
mov
xor
cmpl
xor
jmp
add
xor
add
cmp
mov
mov
adc
jmp
mov
cld
mov
push
jne
dec
or
push
inc
in
add
or
dec
cld
mov
xorl
pushf
decl
mov
mov
xor
mov
inc
mov
mov
call
add
mov
or
jo
push
xor
pmulhuw
test
mov
mov
xor
xor
xor
add
inc
mov
movl
sub
lock
mov
mov
or
ja
mov
cld
cli
mov
cmp
bswap
mov
mov
clc
repnz
push
xor
cmp
pushf
pop
jmp
mov
xor
lea
xor
pushf
out
neg
insl
test
clc
pop
inc
or
xor
add
jne
mov
in
push
xor
add
cmp
add
mov
mov
add
mov
mov
fwait
pushf
xor
jne
mov
icebp
icebp
shl
mov
push
jne
mov
in
jmp
add
mov
or
inc
jne
mov
ret
or
jge
sub
xor
add
mov
clc
negl
xor
cmp
repz
xor
add
mov
mov
cld
lock
test
clc
add
fdivrp
test
jnp
add
jae
sub
shll
leave
call
in
in
add
mov
in
test
mov
xor
pushf
jnp
xor
loopne
jne
mov
add
xor
mov
cld
jb
add
jne
mov
jge
mov
lock
xor
mov
lock
jge
xor
dec
mov
loopne
jge
add
icebp
add
dec
hlt
xor
mov
in
jge
mov
dec
push
xor
inc
hlt
xor
mov
repnz
cmp
test
fistps
inc
mov
add
inc
test
add
add
ret
jnp
inc
inc
xor
fdivl
test
push
add
cmp
setnp
mov
call
or
inc
mov
and
lock
movl
mov
clc
xor
mov
inc
mov
mov
mov
mov
hlt
inc
rorl
mov
push
mov
in
jne
mov
addl
clc
mov
add
rolw
mov
jne
incl
inc
push
test
sub
add
and
add
mov
and
cmp
add
inc
push
add
push
enterw
mov
add
add
str
lea
sbb
dec
cmp
inc
push
mov
push
add
mov
inc
add
add
mov
loopne
dec
mov
cld
push
xchg
add
add
or
dec
loopne
xchg
push
add
dec
jmp
mov
sbb
inc
xor
add
push
divl
and
add
jno
incl
inc
push
push
mov
mov
push
inc
enter
push
call
pop
push
mov
mov
push
jo
incl
or
call
fmull
mov
mov
adc
dec
xor
mov
mov
mov
push
lret
movb
inc
movntps
lret
into
dec
lret
mov
mov
fdivl
mov
push
mov
sbb
dec
sarl
push
jne
mov
lea
call
sbb
add
push
mov
push
mov
test
xadd
pop
add
mov
or
push
add
add
and
call
add
mov
add
xor
add
inc
je
push
decb
add
or
inc
add
data16
subl
add
add
enter
int3
loopne
rolb
lea
data16
add
sbb
inc
cmp
add
xor
sub
mov
or
ror
dec
inc
cmp
cld
or
ret
lret
dec
mov
loopne
cmp
inc
daa
loopne
in
add
add
push
inc
xor
add
push
push
inc
in
push
inc
sbb
rorb
addb
ljmp
xor
mov
fmuls
add
lea
add
popl
add
push
incw
mov
add
xor
test
inc
mov
add
or
or
inc
mov
jne
mov
add
add
adc
adc
push
mov
mov
inc
mov
or
push
jne
call
inc
sarb
in
add
add
and
fs
incl
jle
leave
scas
inc
add
orb
call
shr
xchg
add
add
dec
and
push
decl
mov
mov
lea
mov
add
mov
push
shlb
inc
in
jno
push
mov
mov
je
mov
sbb
popl
add
add
adc
jmp
sub
jne
mov
in
popl
push
incl
adc
add
call
and
and
inc
test
sldt
xor
pushf
jmp
mov
or
inc
call
mov
loopne
inc
add
mov
add
add
cmp
test
sbbl
jne
call
leave
rcrb
add
add
add
inc
mov
fcom
add
lea
pushl
call
mov
fstps
push
pop
mov
addl
mov
xor
xor
pop
or
inc
push
in
or
movsl
xbegin
clc
adc
divb
or
test
add
add
adc
xchg
test
clc
data16
orl
rolb
mov
mov
push
add
jge
add
jne
mov
jmp
xor
pop
cvtdq2ps
ret
mov
xor
add
push
rdpmc
out
add
mov
ret
sbb
cmp
or
or
pop
inc
add
add
invd
jge
mov
cli
xor
mov
ret
mov
sub
inc
xor
pushf
inc
mov
hlt
test
mov
xor
dec
or
jne
mov
call
inc
mov
add
add
inc
mov
addl
inc
mov
lock
jge
mov
cli
xor
add
test
add
cmp
xadd
test
mov
xor
add
pop
loopne
inc
clc
xor
add
data16
mov
hlt
xor
add
data16
cmp
add
psubq
ltr
add
add
data16
mov
jge
data16
data16
mov
fdivl
data16
mov
mov
pop
or
clc
mov
lock
jge
invd
pop
add
cmp
data16
mov
pop
fbstp
test
add
add
jge
data16
pop
stc
bsf
mov
in
test
mov
call
cmp
add
mov
call
add
mov
jnp
mov
mov
call
mov
data16
xorl
fisttps
cld
jne
xor
mov
sti
repnz
data16
push
xor
mov
fwait
data16
mov
mov
fisttps
or
mov
hlt
mov
add
dec
or
mov
or
mov
fdivrl
xor
pop
lock
lea
icebp
jb
add
jge
mov
fsubr
pop
mov
in
rcrl
jb
add
jge
mov
in
pop
data16
cmp
mov
fdivrl
cmp
mov
mov
lock
mov
or
clc
cmp
je
push
loopne
dec
mov
int
mov
pcmpgtd
add
jmp
mov
lock
rorl
or
jb
add
loopne
jne
data16
mov
data16
add
add
retw
ret
lret
enterw
pop
jne
mov
call
xor
lea
repnz
add
xor
in
xor
movl
clc
add
pop
pushf
pop
call
mov
push
pop
mov
push
inc
add
popa
data16
into
gs
add
ret
add
add
add
cmp
add
into
ret
pop
adc
mov
mov
jne
lea
mov
sarl
test
mov
push
xorb
mov
xor
ss
fs
mov
je
xor
mov
ss
pop
cmp
jne
mov
cld
push
pop
inc
stc
xor
test
clc
test
cmp
fs
or
add
lret
xor
pushf
mov
ret
pop
dec
mov
push
add
xor
cmp
je
mov
lea
push
cmp
mov
add
sub
add
mov
jne
mov
xor
mov
push
cmp
jne
sbbl
clc
inc
pop
sti
add
cld
xor
mov
roll
mov
inc
in
add
mov
mov
push
mov
test
xor
pushf
sub
inc
sub
mov
inc
add
or
cmp
mov
cmp
je
push
dec
str
cmp
int
mov
mov
cld
add
data16
push
add
jne
movl
clc
xlat
inc
mov
push
pushf
in
add
add
add
cmp
add
lret
lock
clc
inc
lret
cmp
xor
pushf
test
je
xor
rorb
push
add
jb
add
dec
mov
push
push
adcl
xor
mov
scas
ret
jns
mov
dec
or
ret
lock
mov
or
mov
xorl
mov
adc
iret
inc
movl
incb
ret
adc
clc
dec
fisttps
add
ret
lea
add
xor
pushf
add
add
inc
test
xor
push
fwait
push
xor
inc
cmp
jbe
mov
or
inc
test
xor
in
hlt
push
push
push
push
mov
fwait
fwait
xor
mov
or
mov
clc
jb
add
orl
addl
mov
or
inc
dec
mov
orw
xor
mov
mov
mov
mov
inc
dec
add
add
mov
clc
or
mov
clc
popf
incl
ret
adc
mov
hlt
test
clc
or
xor
pushf
jb
add
inc
daa
inc
inc
xor
dec
fwait
add
clc
cmp
or
add
xor
or
lea
add
mov
cld
dec
push
sub
add
or
add
or
add
mov
inc
mov
cmp
xbegin
clc
or
xor
adc
lea
add
inc
add
add
je
push
or
dec
std
mov
mov
mov
or
inc
clc
mov
hlt
call
push
or
push
xor
mov
xor
pushf
inc
mov
or
add
inc
mov
or
inc
push
jmp
mov
mov
jne
jmp
mov
clc
lret
push
mov
mov
sub
decl
or
pop
ds
pushl
mov
mov
jmp
leave
jne
call
in
dec
add
add
inc
cmp
je
mov
or
add
or
adc
enter
rolb
mov
or
rorb
jmp
push
mov
cld
inc
inc
orl
push
push
mov
add
test
add
mov
mov
lock
fcoms
mov
push
enter
cmp
add
mov
call
cmp
jmp
push
call
mov
cld
or
call
add
xor
jne
cmp
jne
mov
or
pop
into
je
mov
or
mov
mov
mov
or
sar
xor
xor
pop
adc
ret
cld
inc
mov
cld
mov
push
pop
or
xorps
test
add
adc
addl
jmp
ror
inc
leave
xor
and
add
xor
xorl
mov
pcmpgtw
add
leave
mov
push
dec
mov
lea
xor
sysret
dec
rorb
pushw
jne
ud0
mov
lods
add
data16
iret
and
cli
inc
cmp
add
inc
pop
lea
mov
add
mov
mov
add
inc
data16
clc
int3
cmp
je
push
pop
xchg
data16
lea
jb
jmp
call
clc
xchg
mov
or
lea
push
inc
jge
mov
fdivs
incl
xor
xchg
ret
xor
cmp
data16
rolb
add
dec
xchg
push
jmp
push
add
add
mov
clc
dec
xchg
cmp
jne
xor
jmp
add
jne
call
clc
xchg
sti
add
add
xor
pop
mov
jmp
mov
cmp
cmp
lea
jle
jae
mov
lcall
inc
push
lea
mov
int3
push
xchg
add
add
inc
add
cld
mov
aam
xchg
mov
testb
mov
hlt
add
mov
decl
incl
mov
call
je
js
lock
mov
mov
sbb
clc
add
mov
rorb
dec
xchg
mov
in
jge
cmp
clc
pop
fistl
clc
add
mov
mov
mov
adc
add
adc
pop
sbbl
ret
cmp
mov
cld
add
add
add
sub
or
add
mov
push
push
clc
addl
out
add
jmp
cmp
jmp
je
mov
inc
add
add
add
pop
pop
push
inc
in
pop
in
cmp
xor
add
push
mov
in
dec
push
test
add
leave
inc
test
add
add
dec
push
mov
hlt
push
dec
leave
mov
clc
cmovge
mov
clc
popl
push
add
push
xor
cld
add
xor
add
add
int
mov
add
cmp
jne
xor
jmp
add
mov
or
mov
mov
mov
or
shl
icebp
addb
or
or
stc
shll
xor
inc
xchg
add
add
mov
test
sub
jmp
mov
lock
lea
mov
or
leave
add
dec
dec
test
paddb
add
dec
mov
mov
or
dec
xor
mov
adc
mov
call
mov
push
clc
or
push
lret
mov
mov
xor
cmp
lsl
call
or
dec
or
inc
xor
in
add
inc
pop
xor
testl
dec
sub
add
push
sub
mov
or
mov
xor
pushf
push
movl
dec
inc
cmpb
pushf
gs
shl
dec
xchg
shr
xlat
rol
mov
or
mov
or
push
mov
dec
enter
lret
ret
mov
or
into
add
add
bswap
ror
dec
add
mov
hlt
inc
inc
ret
mov
or
dec
xor
jne
inc
inc
mov
clc
pop
ret
mov
call
dec
add
adc
push
ret
in
call
push
add
xor
jmp
xor
add
shr
mov
mov
in
pushf
ret
fcomps
inc
in
xor
mov
cld
fmul
sbb
ljmp
jbe
mov
clc
add
mov
lea
mov
call
hlt
xor
mov
xor
mov
hlt
into
inc
scas
mov
cld
add
add
inc
shrl
xor
mov
clc
dec
inc
decl
ret
movb
scas
inc
jmp
mov
pop
xor
mov
clc
test
mov
cld
call
xor
add
fdivl
lret
in
inc
or
into
mov
call
cld
mov
xor
lea
mov
add
inc
mov
dec
mov
cld
xor
sub
int
sub
add
mov
call
incl
mov
cld
jne
mov
aam
dec
or
jb
add
rorl
xor
xor
sub
mov
xchg
inc
xor
clc
mov
nop
faddl
xchg
jmp
mov
fadds
inc
or
dec
add
dec
mov
inc
push
mov
xor
rolb
ret
inc
inc
mov
xor
add
mov
cmp
dec
inc
xor
inc
mov
clc
lea
add
xor
mov
push
enter
mov
mov
loopne
ret
push
enter
inc
cld
mov
clc
ret
ret
mov
cld
pop
mov
mov
dec
xor
pushf
add
fcoms
mov
adc
inc
mov
adc
cmp
inc
add
mov
nop
add
inc
mov
add
cmp
mov
clc
inc
inc
add
mov
in
jne
mov
clc
add
mov
in
mov
xor
cmp
fmuls
lea
clc
mov
cmp
test
inc
mov
ret
inc
decl
push
dec
test
dec
mov
mov
mov
fadds
dec
inc
sub
inc
xor
faddl
inc
or
dec
add
mov
mov
mov
mov
lock
inc
add
fsubr
test
clc
push
cmp
pushf
inc
push
fsubs
clc
mov
mov
mov
clc
mov
xor
mov
in
les
mov
or
dec
mov
in
dec
decl
fmuls
inc
mov
faddl
dec
push
xor
push
mov
push
mov
lock
inc
test
add
add
jne
lea
div
incl
xor
jb
add
mov
xor
mov
adc
mov
ret
push
push
lea
sti
add
or
mov
xor
mov
add
jne
lea
mov
call
shll
pushf
add
mov
xor
test
clc
dec
inc
xor
pushf
rorb
lea
int3
add
lea
lea
mov
xor
bswap
rorb
roll
add
xor
pushf
inc
jnp
mov
lock
lret
xor
mov
fmul
test
xor
mov
mov
mov
ret
add
dec
adc
add
inc
rcll
mov
xor
jb
add
mov
cld
mov
or
cmp
jne
mov
mov
xor
mov
mov
mov
xor
jb
add
add
mov
xor
mov
or
xor
mov
mov
xor
jb
add
enter
add
add
inc
mov
mov
add
dec
mov
add
cmp
add
mov
loopne
add
dec
or
in
or
mov
xor
add
enter
inc
mov
or
or
mov
cmp
add
roll
mov
or
xor
mov
mov
xor
mov
xor
mov
faddl
call
dec
dec
xor
or
loopne
or
iret
ret
mov
mov
call
fwait
add
mov
fmull
test
dec
add
cmp
dec
mov
xor
mov
in
or
dec
xor
lea
or
ja
sbb
cmp
jne
mov
faddl
mov
fadds
mov
in
or
iret
add
xor
sbb
decl
mov
in
mov
dec
mov
fmull
jne
or
add
cmp
jne
lea
inc
mov
mov
jne
mov
test
inc
mov
loop
pushl
mov
add
mov
lods
dec
inc
mov
lret
mov
adc
std
ret
ljmp
hlt
rol
ret
cld
enter
inc
pop
mov
ret
test
jmp
push
call
in
addb
add
add
icebp
mov
cld
pop
dec
shll
add
cmp
je
mov
inc
or
ljmp
sti
cwtl
call
or
push
sub
push
inc
mov
mov
test
inc
push
push
xor
add
dec
add
inc
add
push
decl
add
or
call
mov
mov
inc
dec
add
push
call
incl
mov
mov
or
cmp
cmovne
adc
adc
inc
adc
jne
call
dec
inc
mov
add
mov
push
or
dec
xorl
cmp
mov
pop
adc
ret
mov
clc
mov
pop
mov
mov
push
push
lock
mov
adc
or
ret
xor
add
or
jge
mov
and
cmp
mov
xchg
dec
add
mov
add
dec
into
mov
mov
das
add
add
mov
and
mov
and
xor
lea
xor
add
xor
orl
cmp
pushf
mov
or
jne
call
adc
mov
adc
movl
pop
and
call
and
call
addl
clc
pushf
decl
jmp
and
and
or
decl
and
pop
cli
in
ret
add
mov
or
jl
adc
dec
push
and
xor
mov
add
or
cmp
sbb
or
xor
or
test
dec
adc
adc
add
jae
add
pop
adc
fidivl
add
movups
popf
push
adc
insl
or
add
inc
add
ss
add
ss
add
ss
add
ss
add
ss
add
ss
add
ss
add
ss
add
ss
add
ss
add
cmp
add
adc
sub
adc
push
adc
mov
adc
adc
cmp
adc
addr16
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
pop
adc
jle
adc
cld
dec
adc
add
adc
push
insl
adc
fs
add
jge
add
ss
add
ss
add
ss
add
ss
add
aas
adc
jne
adc
fldenv
adc
xchg
push
add
pop
adc
in
adc
leave
sbb
add
ss
add
ss
add
ss
add
ss
add
ss
add
ss
add
ss
add
aaa
inc
add
adc
add
adc
dec
insl
adc
mov
adc
mov
adc
rorl
adc
pop
inc
adc
daa
aaa
inc
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
inc
add
push
pop
ss
ss
xor
add
pop
dec
dec
dec
xor
pop
xor
add
push
xor
dec
inc
dec
cmp
pop
inc
add
dec
pop
push
push
inc
xor
push
add
push
pop
dec
dec
dec
dec
dec
add
cmp
aaa
dec
cmp
push
inc
add
inc
pop
dec
xor
xor
push
xor
push
xor
dec
push
inc
xor
cmp
add
dec
xor
xor
xor
xor
inc
add
xor
dec
push
xor
dec
xor
dec
xor
dec
inc
push
pop
inc
xor
add
pop
add
add
push
add
dec
add
add
dec
add
xor
pop
add
dec
add
cmp
pop
add
cmp
add
push
add
push
add
dec
add
dec
add
inc
add
dec
add
add
add
push
add
pop
add
add
push
add
add
dec
add
pop
add
push
add
xor
xor
pop
add
add
add
add
add
pop
add
dec
add
dec
add
add
push
push
inc
push
scas
push
sbb
movsb
push
inc
mov
jns
mov
add
add
pop
js
insl
arpl
addr16
pop
inc
inc
dec
bound
popa
push
bound
popa
bound
jo,pn
bound
