push
mov
sub
push
orl
push
xor
addl
inc
adcl
push
decl
push
notl
call
test
je
lea
push
adcl
call
movl
jmp
orl
push
orl
mov
subl
push
addl
push
subl
call
test
je
subl
lea
subl
push
sbbl
call
movl
jmp
push
mov
or
mov
mov
addl
push
orl
push
adcl
push
call
andl
test
jne
sbbl
push
movl
push
call
incl
test
movl
jne
subl
push
addl
push
call
andl
test
movl
jne
orl
push
push
sbbl
call
xorl
test
movl
jne
movl
push
push
push
adcl
call
test
movl
je
lea
subl
push
adcl
call
movl
jmp
subl
push
push
andl
push
orl
call
test
movl
je
xorl
push
xorl
push
andl
call
test
movl
jne
movl
push
push
call
test
jne
push
push
call
orl
test
movl
jne
addl
push
push
push
xorl
call
subl
test
movl
jne
push
andl
push
orl
push
subl
call
xorl
test
movl
jne
orl
push
push
call
test
jne
movl
push
push
andl
call
test
movl
jne
push
push
call
test
jne
orl
push
sbbl
push
andl
push
addl
call
movl
test
movl
jne
orl
push
addl
push
adcl
push
call
test
movl
jne
addl
push
push
movl
call
sbbl
test
jne
adcl
push
sbbl
push
orl
call
xorl
test
movl
jne
push
push
addl
call
test
jne
push
push
orl
push
call
test
movl
jne
orl
push
subl
push
xorl
push
andl
call
test
movl
jne
push
adcl
push
movl
call
xorl
test
movl
jne
push
adcl
push
orl
call
addl
test
movl
jne
subl
push
sbbl
push
adcl
call
movl
test
movl
jne
adcl
push
push
push
call
adcl
test
jne
sbbl
push
orl
push
movl
push
addl
call
adcl
test
movl
jne
addl
push
push
call
test
jne
push
subl
push
xorl
call
subl
test
movl
jne
adcl
push
negl
push
call
xorl
test
jne
subl
push
notl
push
orl
push
call
test
movl
jne
sbbl
push
push
negl
push
sbbl
call
xor
jmp
mov
mov
sub
xor
movl
mov
mov
mov
neg
mov
mov
sub
mov
movl
xor
add
xor
add
sub
and
lea
andl
mov
movl
cmpl
je
cmpl
jne
pushl
push
push
pushl
call
mov
dec
mov
jmp
mov
xor
xor
sub
add
lea
mov
mov
mov
sub
imul
mov
movzbl
and
mov
mov
mov
xor
mov
mov
and
mov
or
xor
andl
mov
inc
mov
cmpl
jne
pushl
pushl
push
push
call
cmpl
jb
mov
add
movl
mov
movl
mov
movl
cmp
jne
mov
sub
mov
mov
mov
adc
mov
xor
xor
sbbl
add
or
mov
mov
andl
mov
inc
mov
cmpl
jne
call
cmpl
jb
xor
add
add
mov
mov
andl
mov
orl
mov
sbb
mov
sbb
mov
neg
mov
andl
mov
inc
mov
cmpl
jne
call
cmpl
jne
mov
inc
mov
cmpl
jb
movzwl
and
mov
mov
sub
mov
mov
mov
decl
movl
mov
adc
mov
addl
xor
add
movl
jmp
and
mov
mov
sbbl
xor
orl
lea
orl
push
mov
movl
xor
adcl
lea
orl
push
sbb
mov
pushl
andl
call
mov
or
mov
neg
xor
movzbl
add
lea
mov
sbbl
mov
sbbl
xor
xorl
xor
add
mov
xor
lea
movl
mov
cmp
jbe
mov
adc
mov
mov
mov
or
mov
mov
or
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
movl
mov
adcl
mov
movl
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
neg
mov
sub
xor
mov
mov
movl
cmp
jne
lea
mov
lea
orl
mov
xor
mov
test
movl
je
mov
mov
sbb
mov
or
mov
xor
mov
subl
mov
movl
cmpl
je
cmpl
jne
call
cmpl
jne
xor
add
dec
mov
xor
xor
dec
mov
jmp
mov
mov
movl
cmpl
je
cmpl
jne
pushl
push
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
cltd
inc
mov
mov
adc
mov
mov
and
add
movl
adc
andl
orl
xor
mov
adc
mov
sbb
mov
mov
add
xor
add
mov
mov
adcl
xor
mov
or
mov
xorl
xor
mov
movl
cmp
movl
jne
movl
mov
cmp
movl
je
mov
andl
mov
addl
mov
xor
adcl
add
movl
adc
andl
xor
andl
xor
movl
cmp
movl
jne
cmp
jne
mov
add
mov
andl
mov
adcl
xor
sub
mov
sbbl
mov
mov
addl
add
jmp
mov
movl
cmp
je
movzbl
sub
mov
mov
add
mov
xorl
xor
subl
add
cmp
movl
je
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jb
adc
mov
or
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
call
jmp
mov
notl
pushl
mov
orl
pushl
orl
add
sub
mov
mov
sbbl
pushl
xorl
call
mov
mov
mov
mov
movl
jmp
addl
mov
mov
xor
add
cmp
jne
mov
mov
mov
xor
add
cmp
jne
mov
push
xor
add
push
push
pushl
pushl
call
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
mov
movl
mov
xor
add
mov
mov
mov
mov
mov
mov
push
pop
sub
add
movl
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
lea
mov
mov
xor
add
mov
lea
push
mov
xor
add
push
mov
push
pushl
call
mov
mov
mov
mov
xor
mov
add
jmp
lea
mov
mov
sub
mov
mov
mov
mov
movl
mov
movl
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
ja
mov
mov
mov
sub
xor
xor
add
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
mov
mov
movl
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
jmp
mov
mov
xor
lea
lea
xor
cmp
jne
mov
mov
mov
xor
mov
xor
mov
xor
mov
mov
xor
mov
mov
mov
xor
add
mov
mov
xor
add
mov
lea
mov
lea
mov
mov
test
je
movl
movl
movl
movl
call
mov
mov
mov
mov
mov
mov
mov
mov
cltd
mov
mov
add
adc
andl
xor
mov
mov
mov
mov
xor
add
mov
adcl
xor
mov
mov
xor
mov
cmp
jne
mov
cmp
je
mov
mov
mov
xor
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
xor
mov
mov
mov
add
mov
mov
mov
xor
mov
add
xor
add
adc
xor
xor
xor
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
leave
ret
xor
sbbl
inc
ret
push
mov
sub
mov
andl
mov
inc
mov
cmpl
jne
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
movl
movzbl
add
mov
notl
push
and
mov
movzbl
sbb
xor
xor
mov
push
or
mov
negl
add
movl
cmp
je
mov
orl
mov
andl
xor
xor
add
orl
add
adc
xor
mov
mov
mov
xor
push
movl
cmpl
je
cmpl
jne
pushl
pushl
call
cmpl
jne
xor
xor
dec
mov
mov
dec
mov
jmp
xor
xor
mov
add
adc
xor
xor
cmp
jne
cmp
je
jmp
mov
mov
mov
xor
add
mov
imul
mov
xor
add
mov
mov
mov
mov
xor
xor
add
adc
lea
xor
xor
xor
mov
add
adc
xor
xor
cmp
jne
cmp
jne
mov
pop
pop
pop
leave
ret
push
mov
push
movl
movl
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
or
mov
adc
movsbl
and
mov
andl
sub
movl
cmpl
je
cmpl
jne
push
push
pushl
pushl
pushl
push
push
pushl
push
push
push
pushl
push
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
xor
cmp
jne
mov
push
mov
add
mov
mov
mov
xor
add
cmp
pop
je
mov
jmp
mov
xor
add
leave
ret
push
mov
sub
xor
xor
xor
movl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
push
call
cmpl
jne
xor
add
inc
mov
jmp
not
push
movl
mov
addl
push
mov
xorl
xor
sbbl
push
movl
cmpl
je
cmpl
jne
push
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
orl
add
adcl
mov
movzbl
xor
mov
mov
test
jmp
lret
int
outsl
cmp
jae
test
xchg
into
jl
jl
xor
jl
adc
and
popa
pusha
xor
insl
xor
fdivrp
push
arpl
stos
jp
push
iret
pop
dec
cmp
dec
jg
mov
jmp
cld
imul
xor
mov
andl
push
mov
fldl
or
and
inc
push
and
mov
sub
mov
jbe
ret
sbb
jb
jnp
xchg
pop
cmpl
cwtl
je,pt
add
sub
push
sti
iret
mov
or
out
push
dec
push
cmp
xor
lods
inc
int3
cmpsl
dec
fiaddl
push
std
push
push
movsl
icebp
bound
rol
test
test
sub
mov
push
int3
cmp
xchg
push
fisubrl
pop
sub
inc
cmp
inc
rclb
testl
pop
pop
outsl
stos
mov
addl
jno
in
mov
fwait
and
icebp
enter
or
inc
sbb
into
inc
sub
xchg
push
xor
cli
cmpsl
xchg
cmp
lcall
orl
enter
add
loop
pushf
pushl
sbb
cmc
push
cmp
dec
lcall
sbb
push
icebp
fchs
and
xor
int
je
adc
imul
or
and
pop
repz
gs
outsb
fnop
aad
imul
push
iret
or
mov
pop
shr
test
pop
and
xor
push
stc
sub
movl
movsb
cmp
cli
mov
call
cmp
xchg
fcom
aad
jo
and
inc
pop
xchg
movsl
popa
clc
inc
inc
and
sbb
push
lds
add
sbb
push
rorb
push
push
rol
push
jnp
stos
xchg
cmpsl
scas
setge
pop
pop
pop
lea
add
pop
mov
xorl
pop
sbb
sub
add
cmp
insb
lret
ja
loop
adc
add
mov
add
cld
lahf
lret
add
ljmp
mov
xchg
mov
cmp
jae
push
arpl
xchg
add
aaa
lea
pop
aad
cmp
popa
loop
std
dec
scas
sbb
jae
jne
movsb
cmpsl
mov
mov
sub
sub
pop
lahf
pusha
repnz
inc
out
aaa
or
pop
dec
test
mov
cmp
jnp
clc
clc
xchg
cmc
pop
ja
cmc
dec
mov
cmp
mov
mov
push
andb
stos
inc
inc
push
movsl
push
push
mov
fdivrp
push
test
nop
int
imul
jns
and
aas
pop
adc
adc
packsswb
push
js
mov
sub
inc
pop
mov
lahf
xchg
add
inc
test
mov
imul
lds
push
and
mov
or
xchg
jne
mov
sbb
dec
jae
fs
or
xchg
dec
cmp
inc
ret
sub
hlt
movsl
xor
mov
mov
xor
movsb
jl
dec
add
mov
xor
push
push
fcompl
mov
push
sbb
mov
std
mov
pop
addb
jb
subb
je
int3
ss
cwtl
je
dec
jae
popa
and
data16
xor
hlt
out
je
mov
daa
imul
sub
xchg
xor
lret
adc
lahf
or
push
push
out
rclb
jecxz
shrl
mov
dec
repz
scas
aaa
fprem
adc
sbb
ret
ret
mov
test
cmpsl
rol
jo
arpl
pop
adc
push
sbb
push
ret
repnz
inc
test
or
mov
outsb
pop
mov
adc
push
sub
sbb
dec
adc
sbb
loope
testb
add
icebp
aas
in
jo
leave
push
pop
mov
aam
jbe
repz
repnz
adcb
jnp
iret
pop
jo
popf
hlt
notl
push
cli
inc
dec
mov
xchg
or
aaa
jge
cmp
pop
cmp
mov
push
stos
xor
out
push
addb
or
sub
mov
xorl
inc
int
mov
fisubl
push
stos
jge
xchg
pop
inc
je
inc
lods
add
jae
fs
xorps
cmpsl
lock
gs
int3
xchg
lcall
or
push
pushf
jmp
aas
and
insb
and
lods
sbb
or
cmp
pop
push
xchg
testl
mov
adc
sub
cmp
sbb
lea
adc
fnstcw
cli
add
sub
stc
sbb
in
fcmovnbe
pop
outsb
or
je
and
fbstp
test
jmp
inc
xchg
mov
xlat
push
mov
fwait
pop
lahf
and
aas
xor
pop
inc
and
add
into
arpl
je
cli
cmp
in
clc
aad
mov
lods
dec
dec
leave
sbb
lahf
lcall
cmpsl
notl
xchg
jae
jl
inc
rclb
sti
jg
mov
adc
jns
mov
jb
jno
pop
sar
cmpsb
rorl
push
dec
mov
inc
jbe
inc
mov
in
aad
pop
test
cmpsb
push
iret
sbb
jb
nop
push
scas
add
aad
or
pop
shr
push
adc
es
cmp
in
movsl
jge
fldl
pop
cmpsl
and
mov
aad
push
mov
mov
call
pop
fcomps
xchg
rol
ss
mov
lds
cwtl
dec
pop
fwait
andl
pop
inc
cmp
pop
lds
aaa
pop
jbe
cld
lcall
pop
jg
test
xor
fcmovbe
movsl
arpl
add
push
mov
cmp
mov
sbb
insb
popa
xchg
repz
dec
pusha
sub
fldcw
pop
or
es
notb
cmpsl
dec
push
pusha
inc
scas
fisubs
testb
mov
jae
jns
pop
in
cmp
out
call
and
adc
cmpb
sarl
sbb
inc
shll
call
dec
mov
xchg
lea
ret
ljmp
outsb
pop
nop
cli
cmp
cmp
sbbb
in
mov
adc
jmp
mov
adc
push
iret
test
inc
leave
mov
mov
sbb
ret
pushl
sbb
imul
cmp
aam
stc
cwtl
jnp
ds
fnstenv
scas
fnstenv
fwait
lea
scas
sti
cmp
push
push
sub
rcrb
jle
cltd
divl
repnz
xchg
pop
lret
insb
shll
insl
out
nop
fs
lods
jmp
add
xor
fisubl
jge
aas
test
jns
outsb
and
mov
inc
xchg
movsb
adc
push
push
das
and
lods
mov
sub
mov
xchg
push
aam
repz
icebp
imul
xchg
fwait
xchg
in
xchg
bound
sub
repz
cwtl
les
aad
mov
pushf
sub
scas
loopne
and
xchg
fmuls
jns
orb
cmpsl
add
pop
jae
fdivs
or
lcall
into
mov
or
xchg
int
sti
cld
jge
dec
lret
push
dec
push
sbb
mov
push
scas
addl
push
pop
xor
ja
push
es
mov
mov
mov
xchg
ja
loop
negl
sub
and
insl
scas
outsl
xchg
adc
rcpps
lods
filds
clc
leave
adc
jmp
lods
dec
mov
ljmp
notl
jmp
rcrb
pushf
mov
xchg
ficompl
insl
jae
cmp
mov
rorb
ss
jb
lods
inc
mov
dec
loopw
lcall
in
orb
xor
and
rclb
lahf
inc
jge
mov
adc
mov
or
out
imull
jmp
xchg
arpl
xchg
xchg
xchg
xor
jne
lcall
or
jb
lock
pop
loopne
cmpsl
insb
jmp
xchg
fs
mov
pushf
or
aas
imul
push
inc
icebp
xor
inc
orb
pop
add
cmp
ret
inc
test
mov
in
call
es
lahf
mov
ret
testb
addr16
push
and
int
xchg
shll
mov
neg
cmp
sbb
and
mov
out
jb
fucom
lods
adc
hlt
icebp
inc
jns
jl
bound
nop
fs
sub
jns
out
xlat
sub
hlt
add
inc
aam
jb
addb
mov
les
clc
pop
inc
or
js
cmp
push
and
lcall
xor
inc
lcall
mov
cwtl
pop
mov
xchg
jp
cmpsb
push
lret
add
sahf
adc
inc
lds
testb
fisubs
cld
jmp
pop
ss
lods
xlat
psubsb
stc
dec
popf
out
xor
sahf
roll
or
xlat
jae
or
test
clc
adc
repnz
xor
pop
mov
jecxz
push
rclb
adc
sti
inc
push
or
push
sub
cmp
repnz
jge
std
les
imul
inc
xchg
iret
and
sub
clc
fisubs
pop
sub
lret
mov
popl
fcmovnb
cmp
leave
xor
or
mov
shlb
inc
lods
cmp
int
add
mov
mov
add
cs
pushf
mov
xchg
rorb
xor
pop
test
std
jns
in
cmpl
or
pop
jecxz
dec
push
test
cli
sbb
push
dec
adc
mov
add
adc
and
push
shl
jns
test
adc
fld
jmp
jecxz
and
xor
fldcw
add
dec
and
jle
or
lods
cs
mov
pxor
sbb
test
popa
pop
jno
fstpl
adc
shrl
mov
add
popa
scas
cltd
mov
push
and
std
pop
jae
mov
dec
fimuls
cmp
outsl
dec
cvtdq2ps
fnstcw
mov
lods
sub
outsl
dec
das
or
test
sub
mov
retw
rclb
rcrl
xlat
cmp
out
inc
stos
sbb
and
lock
test
cmp
dec
rcr
data16
push
jle
jl
mov
orb
cmp
repz
inc
mov
push
and
add
aad
lods
sbb
push
or
loopne
lret
and
adcb
push
xor
stos
pop
jno
pusha
cwtl
mov
dec
addr16
cwtl
dec
je
repnz
sub
out
sub
pop
cmpsl
pop
mov
push
bound
scas
push
sub
cwtl
mov
or
xor
nop
rcrb
pop
in
add
sbb
adc
inc
arpl
xor
xorl
xchg
inc
lds
mov
cli
test
sub
cmp
jmp
and
pop
mov
imul
inc
or
stc
push
and
xchg
outsb
cld
hlt
popf
lea
pop
aaa
or
push
cmp
std
pop
out
push
inc
mov
inc
in
xchg
adc
jno
gs
in
iret
jbe
inc
dec
dec
xor
bound
popa
jge
inc
fimull
pusha
and
or
mov
fadds
movsb
insb
cmp
cld
into
add
cmp
loop
int
filds
fs
mov
pop
fnstenv
adc
xlat
scas
fidivrl
and
dec
dec
cmp
mov
arpl
rcr
enter
add
xchg
mov
jmp
mov
mov
mov
clc
or
hlt
lods
adcb
mov
ja
jp
pop
imul
add
movsb
sbb
ljmp
pop
adc
mov
nop
out
or
sbb
outsb
xchg
std
dec
jno
push
sub
sbb
out
mov
mov
pop
xchg
and
arpl
and
pop
or
int
xor
out
jnp
inc
sbb
lahf
cmp
or
ja
jl
out
out
inc
inc
mov
arpl
mov
insl
mov
loope
dec
mov
and
loope
shll
jecxz
adc
sub
xchg
nop
rorl
or
jns
fcompl
pop
push
xchg
xchg
jl
loope
xor
pop
mov
mov
lea
mov
and
addl
leave
bound
xchg
pushf
pop
jns
pop
fwait
mov
test
rclb
int3
movl
and
fisttpl
gs
jmp
pop
lcall
nop
inc
inc
mov
and
or
mov
adc
pusha
mov
push
pusha
jmp
xorl
es
fmuls
cs
loopne
ss
or
pop
jbe
or
adc
imul
mov
add
xchg
or
icebp
imul
adc
dec
xor
mov
scas
xchg
cs
out
outsl
hlt
or
test
iret
dec
outsl
xchg
inc
lods
pop
xor
loope
ljmp
fcmovu
mov
cmp
pusha
inc
adc
dec
loopne
mov
mov
adc
adc
xchg
in
xor
mov
xchg
sbb
jns
jnp
popf
mov
fimull
add
push
imul
hlt
fiaddl
fdivs
xor
inc
push
std
arpl
ds
test
je
mov
or
sbb
clc
rclb
lret
int3
cmp
lcall
xchg
dec
pop
fstps
and
dec
add
inc
sub
inc
mov
sbb
filds
mov
xorl
push
loope
jno
pfcmpge
push
pop
scas
data16
sub
push
mov
mov
insl
or
cwtl
or
jp
stos
je
xor
out
or
ja
pop
add
scas
mov
comiss
and
repz
cmc
popa
sub
hlt
pop
out
pop
outsb
xchg
daa
lods
andb
cltd
cmp
mov
out
inc
movsb
dec
movsl
ss
add
cmp
cwtl
dec
sub
xchg
cld
imul
ss
cmpsl
mov
pop
xchg
push
xchg
push
out
incb
jo
flds
adc
orb
ficompl
daa
out
xor
cmpsl
mov
pop
and
mov
xlat
mov
jno
leave
out
xor
lea
push
iret
inc
mov
test
mov
push
test
mov
mov
cmpsb
dec
jecxz
mov
push
sub
sub
xchg
aaa
mov
jne
and
jne
mov
imul
xchg
xchg
inc
test
xlat
movl
repz
outsb
xchg
ret
mov
movsl
aaa
mov
dec
inc
cmpsl
jns
faddp
push
leave
mov
in
add
rcr
bound
xor
mov
fsub
dec
int3
in
pmullw
sbb
inc
hlt
stos
mov
jbe
push
arpl
das
add
or
ljmp
stos
test
and
iret
fadd
sub
mov
pop
jns
jg
push
pop
xchg
out
dec
iret
icebp
rorb
cmp
mov
jge
and
popl
inc
mov
adc
int
mov
xchg
push
ret
stc
xor
dec
out
cli
inc
dec
stos
mov
cmp
out
sbb
push
rcrb
pop
fildll
pop
cmp
outsl
rcrb
call
sbb
inc
mov
mov
sbb
xor
jmp
pop
out
arpl
cwtl
cmp
lea
dec
cltd
dec
pusha
stos
sahf
into
cmpsl
cmp
std
out
daa
les
jecxz
sbb
cli
pop
mov
faddl
fsubrs
jmp
or
pop
dec
push
js
outsb
inc
mov
fsubs
in
push
inc
mov
xchg
push
adc
int
pop
stc
mov
fcomp
lds
shrl
sti
sbb
pop
lds
add
lret
jo
inc
adc
xor
outsb
out
lds
push
lea
jg
xor
out
xchg
add
add
cli
mov
loop
and
sahf
xlat
outsb
push
pop
fs
je
jmp
xchg
jno
stos
push
loop
adc
clc
fcompl
movsl
xchg
js
arpl
mov
push
or
dec
push
mov
addr16
cmp
inc
dec
xor
push
sub
xchg
lds
cmc
test
stc
lods
pusha
xor
test
mov
adcl
xor
mov
lods
pop
sub
ja
mov
xor
sub
mov
xor
cmova
mov
bswap
or
push
xchg
ss
out
mov
mov
in
shll
lds
bound
add
mov
rolb
sub
xor
pop
xor
shl
arpl
ret
cmp
jb
mov
jmp
ja
es
scas
dec
mov
inc
cli
mov
xchg
cs
pusha
in
xchg
sub
loop
pop
les
adc
pop
or
je
mov
repnz
incb
sbb
xchg
sub
lahf
sarb
call
sbb
cmpb
aaa
cltd
test
xchg
rolb
dec
fwait
inc
push
jbe
pop
mov
out
stos
ljmp
mov
adc
dec
and
add
popa
pop
cli
mov
mov
cmp
idivl
xchg
xor
out
sbb
out
push
push
inc
or
jno
dec
or
daa
push
ret
loopne
fdivl
add
mov
sarl
dec
fnsave
lret
mov
xchg
sub
addr16
inc
cmp
inc
into
decb
popa
jo
outsb
stc
in
inc
jmp
dec
mov
out
and
dec
adc
dec
aad
dec
js
es
mov
or
shrl
mov
add
ret
sub
imul
add
gs
xor
adc
js
pop
clc
rcll
fmull
pusha
xor
push
inc
jo
leave
inc
pusha
movb
jbe
and
and
push
xor
dec
rcrl
shrl
enter
sbb
jnp
adc
loop
cmpsl
dec
fwait
int
or
call
adc
mov
ret
push
cmp
sbb
and
push
jg
jmp
lea
pop
pminsw
sarb
mov
fsubl
ljmp
push
mov
jge
lret
std
push
push
pop
push
jg
push
inc
popa
repz
pop
inc
loope
push
and
sub
shlb
cmovl
stos
cmp
add
push
and
fs
stos
dec
popa
inc
sbb
or
test
gs
add
dec
jp
dec
dec
mov
mov
pop
mov
dec
pop
xchg
xchg
cmp
popf
cmp
aad
dec
es
cmp
aam
or
lods
jl
mov
mov
ret
jae
add
push
int
mov
fimull
or
xchg
cli
adc
sub
cmc
push
pop
adc
cld
xlat
int3
sbb
dec
push
cs
push
cmpsl
dec
imul
sahf
mov
fmulp
jge
pop
xchg
pushf
frstor
rorb
in
jae
fst
mov
popf
sub
mov
inc
cmp
int
cmp
push
in
mov
lahf
cmp
adcl
dec
mov
adc
inc
lahf
sub
cmp
aas
xchg
mov
or
jg
or
js
cmc
mov
fldenv
int
dec
push
push
mov
sahf
movsl
scas
aas
mov
dec
in
aad
adc
loope
lods
add
outsl
pushf
daa
xor
insb
xchg
pop
js
nop
aam
sub
int3
test
sub
mov
mov
mov
push
and
lods
inc
pop
push
xchg
psubsb
pushf
fldl
ficompl
add
repz
or
push
mov
ds
push
dec
xchg
cmp
out
jecxz
ljmp
arpl
inc
cld
push
paddsb
jecxz
test
dec
cmp
in
das
xchg
aaa
sbb
pusha
xchg
iret
xchg
xchg
push
stc
mov
imul
fwait
clc
insl
push
and
push
push
rorb
cmp
lret
leave
test
mov
and
push
mov
cmp
notb
add
and
add
mov
sbb
xor
lods
or
mov
mov
jmp
ljmp
mov
icebp
inc
cmp
mov
call
sahf
push
repz
push
fiadds
scas
fnsave
addb
mov
mov
mov
fisttpll
mov
stos
or
loope
pop
dec
dec
xchg
stc
jnp
fs
cmp
push
in
out
jp
xorb
cmp
sbbb
into
mov
jmp
mov
push
add
bound
push
mov
jl
sub
movsl
pop
fwait
mov
mov
adc
xchg
mov
xchg
in
mov
jg
lret
mov
in
pop
or
scas
loopne
xor
inc
mov
mov
fists
bound
mov
add
sarl
sub
cs
inc
jns
imul
sbb
adc
push
fnstenv
lds
sahf
and
xchg
push
out
int
rep
shll
nop
dec
repnz
int3
cmp
imul
adc
out
or
pop
mov
or
je
sub
fsubp
inc
mov
out
aas
pop
out
xor
push
sub
fucom
xor
adcb
cwtl
pop
push
mov
jmp
jp
dec
les
xchg
push
orl
mov
xchg
imul
dec
dec
push
pushf
and
and
outsb
jnp
add
dec
std
dec
ret
or
in
iret
mov
out
push
faddl
sub
inc
xor
cmp
sbb
rorb
shlb
mov
lods
cmp
push
pusha
push
fmull
ret
jo
mov
and
cli
xchg
mov
sbb
pop
hlt
mov
lret
cmp
sarl
stc
ds
and
push
ret
repz
aaa
mov
xchg
and
ficomps
push
ss
push
and
int3
push
sub
pop
int3
pop
ljmp
cltd
lock
push
mov
and
flds
int
cmpsl
xchg
sbb
add
stc
lods
lods
jge
aad
pushf
roll
fxch
lret
sbb
pop
adc
add
in
imull
in
jo
push
jns
xchg
fxch
mov
lods
data16
es
jecxz
fsubrs
mov
xchg
shl
adc
test
aaa
flds
jb
mov
lds
lret
mov
mov
jns
fs
dec
sbb
in
mov
and
mov
in
das
aam
cmpsl
or
push
push
mov
lahf
push
push
stos
call
popf
out
cld
iret
fmuls
in
pop
scas
pop
leave
sub
jno
push
adc
imul
lods
stos
pop
xor
clc
fdivrs
aas
test
cmp
cmp
xor
jbe
fs
sbb
sub
int3
or
icebp
mov
fsubrs
jp
fbstp
fistps
xor
push
sbb
je
push
loope
bound
shll
mov
sarl
sbb
hlt
mov
fldcw
gs
pop
arpl
cmp
jnp
leave
mov
sub
and
les
icebp
outsl
add
add
cwtl
xor
out
test
clc
xchg
sbb
push
push
xchg
dec
enter
jbe
sarl
jns
mov
jne
pop
mov
push
jb
xchg
movsb
adc
dec
test
fwait
daa
sub
jo
jns
cmp
lcall
fwait
je
lock
xchg
add
loopne
jmp
mov
stc
icebp
adc
cwtl
cwtl
mov
jb,pt
inc
mov
push
fnsave
ret
pop
sbb
std
scas
je
xor
pop
mov
xor
jle
dec
fcompl
call
or
cwtl
mov
imul
out
or
fwait
mov
movl
inc
push
jo
loope
mov
xchg
or
cmpsl
dec
add
fmull
es
fists
push
or
bound
push
pop
fildl
ds
sbb
cmc
inc
out
jmp
or
mov
dec
out
out
sbb
das
sbb
push
lret
or
inc
cs
insb
push
sbb
push
jns
cmc
push
lds
cli
mulb
jl
xor
sbbb
push
xor
push
movsl
lds
xchg
jno
push
gs
in
les
scas
in
imul
xchg
cmpsb
mov
popf
inc
call
dec
repnz
and
push
jle
lods
movswl
cli
int
daa
iret
pop
enter
ret
clc
ljmp
movsb
sbb
repz
pop
and
inc
sbb
sub
sub
jb
or
test
roll
ljmp
bound
in
cwtl
sbb
sahf
or
addl
lahf
mov
xchg
insl
aam
daa
lock
arpl
cld
ljmp
jns
adcb
les
les
scas
loop
movsb
clc
cmp
lods
out
shl
xor
sti
repz
shl
lods
ljmp
cli
mov
ret
cli
or
adc
test
leave
pop
in
stos
leavew
fcoml
add
mov
hlt
xorl
dec
xor
inc
cmp
aad
aam
xchg
fucomi
fldt
sub
clc
pop
or
mov
aam
movsb
push
mov
cmp
addb
push
add
out
sub
je
mov
rorl
stc
or
scas
jg
into
fsts
scas
daa
adc
out
dec
mov
out
movb
repnz
call
adc
or
cmp
and
add
sbb
fbstp
outsb
inc
lahf
mov
fidivs
mov
xor
sub
inc
cltd
inc
scas
subb
nop
add
dec
movsl
out
gs
add
mov
xchg
xchg
out
mov
int
scas
in
xchg
hlt
sub
sub
pusha
pushl
push
jbe
inc
inc
add
in
sti
std
adc
test
syscall
decb
sub
out
push
inc
adc
cs
ret
test
jns
jo
repz
lret
xor
repz
cmpsb
sub
std
mov
gs
sub
inc
sbb
out
sti
test
ret
sub
movl
pushf
inc
lcall
mov
or
jnp
cmp
addl
xor
out
fiaddl
lock
cmp
xor
lcall
mov
fistps
out
lcall
sub
dec
mov
adc
pop
push
sub
cmp
push
inc
and
andb
out
add
pop
cmp
mov
add
lock
stc
pop
icebp
sub
imul
adc
in
mov
mov
xor
push
mov
push
or
daa
add
rcll
mov
xor
lds
mov
daa
jle
iret
cmp
insl
pop
inc
cmp
icebp
ret
adc
or
push
jge
pop
mull
nop
lods
sti
jne
orb
dec
mov
insl
cmp
xlat
jnp
mov
adc
outsb
mov
aaa
xor
mov
popf
xacquire
sbb
sets
flds
sar
fsts
lods
mov
xor
aad
add
enter
xchg
jae
inc
adc
or
data16
cmpsb
cmp
call
xchg
inc
fisubs
sbb
clc
ret
loop
je
fs
ret
shll
out
or
in
inc
iret
fidivrs
sbb
lea
ficoms
les
hlt
jl
or
cmpl
jl,pt
data16
pusha
xor
insb
push
or
xor
stc
outsb
test
xchg
inc
out
lret
xchg
or
adc
sub
adc
xorb
and
and
mov
sub
dec
add
and
nop
sbb
jno
cmc
adc
sbb
jmp
xchg
xchg
insb
jne,pt
sbb
lods
out
leave
sbb
aas
jmp
lods
nop
test
jmp
jnp
jne
jb
lret
xchg
dec
loope
and
sbb
cmp
jmp
xchg
sti
aam
out
cltd
inc
out
push
addl
sbb
pop
iret
and
mov
mov
and
xchg
dec
ret
or
or
fldl
gs
int3
insl
push
xchg
inc
pop
add
aad
dec
inc
xchg
xor
out
mov
mov
add
cmpsl
rcl
test
xor
lds
int
jl
cwtl
idiv
cmp
mov
mov
cmp
addr16
dec
iret
rorl
inc
addr16
cwtl
hlt
push
sub
mov
mov
jne
repz
aas
adc
dec
arpl
sub
or
adc
jle
adc
nop
inc
sub
push
adc
lret
mov
ss
add
push
std
mov
btr
push
jnp
cmp
adc
mov
testl
push
insl
mov
dec
movsl
lds
clc
cmc
or
imul
jmp
push
shr
fisttpll
xor
enter
mov
lods
or
mull
push
mov
push
and
xchg
fwait
push
mov
sbb
mov
pusha
test
loopne
es
pop
test
lods
shll
mov
stos
jbe
xor
test
or
movb
lods
or
dec
mov
or
das
push
inc
mov
pop
dec
fnstcw
xor
pop
push
dec
jae
aad
enter
int
xchg
mov
xor
std
push
outsb
sub
xchg
int3
or
negb
mov
and
movsl
jno
dec
add
leave
cmp
jae
popa
and
push
out
dec
sbbb
push
out
sbb
bound
push
jmp
pop
call
out
inc
dec
jl
aaa
and
sbb
push
jbe
ficoml
cmp
or
dec
icebp
dec
sub
mov
xor
test
mov
cmp
xor
test
ds
sub
pop
or
lahf
mov
jno
lahf
inc
xor
sbb
push
mov
ret
jmp
arpl
pop
mov
adc
movsb
lret
or
or
loopne
jecxz
test
mov
mov
or
jb
fsub
xchg
pop
ret
lret
inc
ljmp
dec
test
cmpl
lahf
cmp
mov
sbbl
sarl
mov
push
cmp
dec
dec
out
in
and
mov
pop
out
int3
cli
mov
lret
xlat
in
jmp
imul
ja
std
cmpsb
arpl
mov
add
add
add
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
push
push
call
jmp
mov
sub
mov
mov
andl
mov
inc
mov
cmpl
jne
call
cmpl
jne
xor
or
inc
mov
cmpl
jb
xor
or
add
mov
mov
mov
mov
sub
or
mov
movl
cmpl
je
cmpl
jne
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
xor
add
add
mov
and
mov
sbb
xor
add
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jb
mov
mov
xor
add
mov
mov
mov
mov
xor
xor
add
movl
cmpl
je
cmpl
jne
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
movl
cmpl
je
cmpl
jne
call
mov
dec
mov
jmp
movl
cmpl
je
cmpl
jne
push
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
movl
cmpl
je
cmpl
jne
pushl
push
pushl
pushl
call
mov
dec
mov
jmp
andl
mov
sub
lea
andl
xor
subl
xor
cmp
movl
je
mov
addl
xor
add
movl
cmp
movl
jne
orl
pushl
sbbl
call
movl
cmpl
je
cmpl
jne
push
pushl
pushl
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
mov
mov
xor
add
cmp
je
pushl
pushl
call
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
add
mov
mov
mov
add
mov
mov
mov
add
mov
jmp
mov
mov
add
mov
mov
mov
xor
add
cmp
je
jmp
mov
mov
xor
add
cmp
mov
je
mov
xor
add
cmp
je
lea
push
pushl
pushl
call
mov
mov
xor
add
cmp
je
mov
movzwl
mov
mov
mov
jmp
mov
xor
lea
jmp
mov
xor
add
jmp
mov
add
mov
mov
test
je
movl
push
xor
pop
add
push
pop
push
dec
pop
dec
xchg
sub
xchg
dec
mov
imul
sub
mov
mov
xor
add
jmp
mov
mov
mov
mov
xor
add
xor
div
mov
xor
lea
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jne
mov
xor
add
mov
mov
add
xchg
xor
push
mov
pop
mov
add
lea
add
add
push
inc
pop
dec
xchg
dec
xchg
dec
xchg
dec
push
mov
pop
dec
call
cmp
je
xchg
push
pop
push
pop
inc
xchg
sub
xchg
dec
dec
mov
imul
add
xchg
push
xor
mov
dec
inc
add
dec
xor
add
pop
mov
pop
pop
pop
leave
ret
push
mov
sub
movl
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
adc
push
sub
push
mov
mov
sub
add
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
pushl
push
call
cmpl
jne
xor
or
inc
mov
jmp
dec
mov
sbb
mov
mov
movl
cmpl
je
cmpl
jne
push
call
cmpl
jne
xor
xor
dec
mov
mov
dec
mov
jmp
andl
mov
mov
adc
movl
add
movl
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
push
call
jmp
and
sub
adc
mov
xorl
sbb
mov
mov
or
sub
mov
orl
add
mov
xor
xor
mov
sub
imul
mov
movl
cmpl
je
cmpl
jne
pushl
push
push
call
cmpl
jne
xor
or
dec
mov
mov
dec
mov
jmp
sub
mov
orl
mov
mov
sub
mov
orl
mov
mov
sub
mov
mov
mov
mov
xor
mov
add
or
mov
mov
mov
sub
mov
orl
mov
xor
add
push
mov
xor
add
push
mov
xor
add
push
lea
push
pushl
pushl
call
test
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
lea
mov
mov
test
je
lea
mov
mov
mov
mov
mov
sub
mov
mov
xor
mov
sub
add
mov
mov
mov
mov
pushl
movb
mov
pushl
pushl
pushl
pushl
pushl
pushl
pushl
mov
call
mov
mov
add
pop
pop
leave
ret
push
mov
sub
movl
cmpl
je
cmpl
jne
pushl
pushl
pushl
pushl
call
cmpl
jne
xor
xor
dec
mov
mov
dec
mov
jmp
mov
mov
sub
and
movl
subl
lea
mov
movzwl
sbb
push
mov
mov
and
mov
sbbl
lea
addl
mov
neg
mov
sbb
mov
mov
sbbl
xor
andl
add
mov
adc
mov
adc
mov
mov
xorl
add
push
and
mov
movzwl
sub
mov
xorl
jmp
mov
mov
jno
push
cmpsl
xor
pop
jl
dec
pop
jl
cmp
outsl
sub
ss
mov
mov
psrld
call
insl
scas
loope
orl
mov
loopne
aaa
iret
jno
daa
call
mov
jp
int3
sbb
adc
mov
cmp
bound
xor
popa
imul
xor
inc
cmp
inc
in
ror
and
jp
int3
jno
mov
inc
int3
adc
pop
mov
and
sbb
xchg
push
jno
sbb
movsl
call
ja
mov
cmp
sbb
push
test
repnz
mov
pop
ss
sbb
setnp
and
or
fucom
imul
lods
dec
loope
in
cmp
or
cmp
addl
cmp
repnz
dec
pop
dec
inc
cmp
popf
push
iret
repz
and
dec
jp
repz
cmp
push
xchg
test
mull
gs
in
mov
sbb
jns
xchg
jmp
pop
into
stos
mov
inc
jae
pop
push
pop
push
inc
insl
adc
les
mov
sub
or
adc
mov
ficoms
jmp
pop
insb
dec
jmp
mov
nop
movl
dec
sub
lret
jmp
sbb
arpl
ljmp
jge
or
jge
ljmp
cli
mov
mov
xchg
push
mov
loop
dec
and
mov
xlat
sbb
mov
mov
add
aas
adc
rolb
outsl
jo
inc
jo
ja
shlb
mov
add
data16
scas
mov
cmpb
mov
xchg
mov
xor
add
sti
shrb
pop
xor
push
out
std
jmp
sbb
fildl
and
inc
adc
cmp
pop
xor
add
call
cmpsb
or
mov
sbb
loopne
scas
push
lcall
inc
jnp
pop
bound
jnp
test
lods
xor
and
lds
adc
pop
js
push
and
shlb
and
and
mov
movsb
sbb
mov
push
sub
fisttps
add
test
xor
push
and
xor
or
push
clc
jne
in
push
leave
scas
mov
loop
scas
cmp
rclb
adc
dec
mov
arpl
lcall
stc
rcl
mov
dec
cmp
cmp
mov
jnp
es
adc
dec
out
mov
sbb
cmpb
shrl
fldt
add
or
mov
fcoms
mov
lods
sub
jmp
mov
imul
and
xor
test
dec
test
adc
push
and
jbe
pop
or
jmp
fdivrs
adc
jne
roll
ja
cmc
mov
aad
pop
les
mov
push
xor
push
sbb
cmp
mov
fwait
je
inc
cmp
sbb
in
xchg
jmp
or
daa
cmp
stc
jp
ret
mov
imul
adc
cld
gs
imul
jmp
sbb
jl
xchg
out
je
push
ss
imul
std
adc
pop
sbbb
ja
es
rcll
hlt
addr16
sti
je
insb
and
cmpsb
cmc
stos
add
outsl
fildll
mov
xor
or
or
adc
jno
or
clc
test
dec
sub
popa
jnp
popf
dec
or
imull
cwtl
nop
test
mov
loope
xchg
push
push
addb
outsl
stc
add
pushf
mov
push
popf
mov
lret
insb
push
stc
lods
jbe
pusha
imul
stc
push
sub
int
mov
add
add
jl
mov
mov
inc
lods
daa
push
leave
xor
enter
lret
dec
push
cmp
jecxz
mov
xorl
push
push
mov
xchg
shlb
jmp
or
mov
shrl
test
pop
ret
lret
sub
pop
mov
aas
jp
dec
inc
lods
mov
pop
xlat
arpl
jl
insb
push
cmp
xchg
pop
push
or
fucomp
in
dec
dec
adc
imul
call
mov
jmp
lock
push
push
dec
clc
push
popf
mov
jecxz
cltd
faddl
nop
pop
aad
xlat
inc
or
rclb
push
scas
dec
mov
and
sub
inc
aad
in
mov
mov
mov
cmp
xchg
dec
mov
add
incl
int3
clc
fcmovbe
rclb
subl
shll
jmp
cmp
fsubp
jo
adc
jo
rorl
das
or
cmp
push
cmc
repnz
xchg
repz
imul
or
dec
pop
mull
fstpt
mov
mov
jae
stos
ss
xchg
divb
adcl
dec
xchg
jl
and
inc
shr
inc
and
jbe
push
mov
mov
mov
xchg
enter
push
lods
dec
sbb
jl
int3
jne
lock
in
bswap
pushf
loop
popf
sbb
inc
inc
inc
sbb
fiadds
dec
outsl
lods
mov
jns
ret
out
cwtl
xor
in
cltd
sub
adc
pop
shlb
xchg
pushf
pop
dec
push
cmpsl
push
lret
daa
cmp
mov
mov
movq
add
insl
fwait
push
in
sbb
xor
bnd
sbb
sbb
xchg
xchg
mov
pushf
adc
mov
int
aad
inc
rcrb
mov
call
sub
mov
in
mov
mov
sbbb
lcall
mov
aas
icebp
and
loop
xchg
or
leave
out
stc
adc
movsl
xor
mov
pop
sahf
nop
jns
push
mov
push
mov
cmp
aad
cmp
shlb
fcoms
add
pop
sbbb
and
je
mov
sub
push
pop
jno,pt
inc
mov
bound
lcall
cmpsl
test
or
arpl
movsl
movsb
jle
sbb
push
add
das
test
mov
inc
xor
fdivrl
rorb
lret
pop
sub
loopne
inc
add
lea
inc
sbb
and
repnz
jnp
push
fists
xchg
fisubrl
das
pop
jb
mov
test
rol
lds
xchg
xor
aas
pop
pop
loopne
xor
test
outsb
pop
call
insb
les
sub
fs
mov
jle
sbb
mov
xchg
jnp
jp
out
gs
out
push
xchg
pop
repz
adc
cmp
fwait
test
in
or
sbb
add
lods
push
adc
mov
cmp
out
jb
imul
fldenv
je
push
cmp
sbb
jns
loope
add
or
fst
mov
mov
xchg
or
cmpsb
cld
xchg
test
dec
gs
lret
add
adc
test
dec
dec
stos
int
insl
shlb
jnp
and
inc
rorb
shlb
mov
sbb
cltd
enter
xchg
fnstsw
cmp
xchg
mov
cmp
mov
mov
mov
and
shll
stos
insb
jg
pop
and
push
fcompl
xchg
and
mov
fnstsw
xchg
jge
sbb
fldcw
xchg
ds
cmp
out
and
mov
jno
hlt
jo
cltd
or
and
cwtl
enter
add
jb
xchg
jmp
mov
mov
add
into
lods
push
insl
in
cld
mov
mov
dec
scas
pop
stc
sub
scas
popf
cmp
sbb
fdivrs
lods
data16
cmp
les
sbbl
push
hlt
lods
rorl
dec
cmp
rolb
mov
pop
fistpll
or
push
into
xorl
scas
and
or
sbb
int
jns
int
push
jmp
pop
pop
add
jbe
adc
ja
mov
xchg
aam
loope
adc
xchg
pop
imul
cli
dec
sub
int3
push
mov
dec
test
imul
jle
dec
xchg
xor
rcrl
push
sbb
cld
cmp
jo
call
or
and
mov
sub
pop
ljmp
cmp
hlt
mov
bound
cld
decl
lahf
and
mov
pop
int
inc
inc
mov
sarb
mov
xchg
mov
xor
dec
decl
adc
imul
loope
push
call
inc
cmp
mov
cmpsl
cs
ret
outsb
mov
movsl
or
fwait
cs
clc
sub
xor
andl
fcom
mov
pusha
lcall
sar
inc
hlt
sub
push
sbb
in
xor
xchg
mov
jnp
xchg
inc
xor
cltd
call
sti
fldl
jg
mov
inc
jae
stc
fcomp
pcmpeqw
sbb
jl
xchg
add
xor
adc
pop
testb
lahf
sbbl
or
xor
sti
jnp
inc
pusha
dec
mov
mov
cwtl
daa
cli
mov
inc
push
mov
adc
repz
pushl
ds
hlt
addl
mov
or
xchg
push
and
in
sbb
sub
gs
std
mov
inc
es
mov
gs
xchg
jae
mov
inc
sub
lcall
insb
xchg
add
cmp
pop
adcb
gs
pop
movsb
aam
mov
cli
iret
mov
pop
sub
pop
cmp
sbb
mov
mov
movl
add
push
gs
mov
lds
inc
xlat
xchg
add
into
inc
addr16
dec
out
sub
rcll
test
jnp
push
adc
les
ja
push
pop
mov
cmc
dec
jae
or
mov
lcall
cmpsl
arpl
or
mov
sbb
mov
sub
xlat
ret
loope
popa
jecxz
ljmp
jb
jbe
xchg
cmp
jg
cmp
add
mov
jg
icebp
rclb
and
or
xchg
pushf
ljmp
fimull
movsl
mov
pop
movsb
jmp
sarl
dec
mov
or
mov
enter
adc
repz
dec
or
xchg
mov
popa
dec
inc
mov
pop
imul
cwtl
aam
pop
and
shr
cmpsb
les
fidivs
push
push
add
and
push
push
xchg
movsb
sbb
mov
fwait
jo
jle
jne
add
push
sti
sti
clc
xor
repz
xchg
mov
sbb
pop
pop
loope
je
push
xchg
loopne
out
jecxz
mov
mov
add
pop
lods
xchg
aaa
rcrb
mov
orb
int
ret
xchg
fnstsw
insb
sub
pop
aad
int3
and
lret
sub
rcr
repz
push
mov
add
xor
test
lock
fisttpl
imul
add
pushf
push
sbb
fsubrl
js
adc
push
dec
adc
mov
shrl
mov
pop
loope
dec
jmp
pop
lret
or
fs
mov
int3
mov
xchg
sahf
repnz
addl
dec
adc
fiadds
leave
add
in
ror
add
cltd
add
mov
mov
push
jge
sub
xchg
scas
test
outsb
into
push
mov
dec
cmc
es
mov
mov
jge
aaa
aam
test
push
jbe
mov
cld
jnp
repz
and
mov
lock
sub
xchg
movsb
mov
divl
cwtl
es
jnp
mov
rclb
and
sbb
pusha
jg
arpl
jp
push
int3
rorl
xchg
mov
rcr
ds
scas
add
inc
fnsave
or
test
cmpsl
or
ret
inc
push
inc
out
popf
imul
pop
cmpsl
xor
test
aad
push
push
push
test
push
mov
std
xchg
test
adc
faddl
pop
pop
xor
lret
aam
scas
add
sub
imul
and
mov
out
pop
cli
mov
daa
das
dec
jnp
and
shlb
pushf
cmp
push
rcrb
dec
clc
jg
insl
pop
push
mov
jp
aam
iret
add
std
cmpsb
stos
xchg
addr16
ror
push
in
rclb
pop
ud2
inc
cmpsl
in
add
adc
scas
inc
lcall
dec
mov
pushf
or
add
xor
jmp
aad
mov
jo
inc
call
xchg
js
lret
sub
imul
mov
mov
cmp
mov
test
pop
mov
ja
lret
addb
xor
mov
rorb
jno
ja
pop
xlat
mov
lahf
fsub
add
jle
sub
pop
sub
adc
dec
cmp
aad
stc
dec
push
xor
jo
pop
je
scas
push
int
lret
int
mov
shlb
aad
out
mov
divl
insb
outsl
stos
sub
in
and
mov
out
dec
push
ficomps
mov
push
fs
dec
imul
mov
lea
inc
adc
ds
adc
test
sti
fidivrl
leave
or
cmp
mov
jne
and
xor
rcrl
lret
sbb
cmpsb
sahf
mov
mov
xchg
lcall
jecxz
fidivl
fiaddl
dec
sub
jmp
push
mov
enter
test
out
jle
loope
jno
mov
pop
adc
nop
addr16
xor
xchg
movsl
add
divps
pop
jns
loop
jae
sub
sub
sub
sub
jge
icebp
sbbl
not
mov
and
lret
xor
fiaddl
cmp
mov
cmp
cmpsb
mov
adc
stc
push
dec
lahf
repnz
dec
mov
mov
std
in
in
leave
es
jge
jae
dec
inc
add
std
or
or
test
sar
and
int3
lcall
xchg
lcall
in
dec
test
fisttpl
scas
xchg
fwait
cmc
fldt
add
outsl
xlat
inc
rorl
leave
mov
ficomps
ljmp
or
shll
fucomip
test
cmp
adc
fstp
nop
mov
sbb
call
cld
popl
rorl
mov
aas
faddl
fisubl
aas
lahf
pop
mov
mov
xchg
ljmp
mov
and
or
mov
mov
aad
jns
adc
jbe
loop
ret
clc
cmpsb
jno
pop
dec
insb
dec
mov
jmp
subb
andb
minps
jmp
ss
pushf
shl
std
movsl
loopne
add
aam
jb
lds
cs
push
loope
idivl
xor
xor
mov
adc
mov
insl
ja
mov
jl
iret
das
fmuls
data16
and
pop
or
push
add
les
subl
movsl
mov
jne
push
cmpsb
push
je
movsb
adc
mov
mov
xchg
sahf
out
xchg
int3
in
rorl
lock
mov
outsl
mov
mov
xchg
out
inc
xchg
mov
je
loope
xor
fldcw
fcomip
cmp
push
std
pop
test
movsl
movsb
fldt
sub
fimuls
and
and
dec
xchg
das
lds
inc
jne
inc
xchg
pop
push
lret
hlt
or
adc
lret
pop
arpl
stos
enter
adc
push
movsb
lret
push
mov
xchg
xchg
jg
sbb
fistps
pop
mov
xchg
outsl
push
psubw
fcompl
adc
dec
lret
cmp
dec
lock
xor
cs
push
das
daa
divl
mov
sub
outsb
xchg
test
sub
mov
shll
lret
dec
frstor
mov
pushf
in
pop
xlat
scas
enter
sahf
sub
pop
xchg
lods
cli
cld
pusha
inc
inc
es
leave
aam
lahf
jmp
in
adc
movsb
adc
clc
push
push
cmpsl
jp
push
push
test
enter
in
lret
inc
push
xor
xchg
mov
mov
mov
and
rcrb
push
inc
add
icebp
stc
mov
adc
pop
cmp
add
not
aad
and
fwait
mov
lahf
subb
sub
mov
imul
das
cmp
ret
fnsave
lods
sahf
lret
cld
or
popa
and
lret
aam
leave
mov
movsb
adc
jb
or
dec
push
inc
xchg
jo
and
xchg
fimull
movsb
pop
add
xor
stc
adc
lcall
les
pop
cld
in
out
jne
imul
clc
push
test
movsl
jmp
mov
sub
fcompl
add
fidivrs
addr16
push
movsl
fadd
out
jbe
push
repz
and
sbb
push
pop
daa
adc
xchg
adc
orb
jmp
popa
push
lcall
das
dec
sub
ret
cmp
sub
lret
xor
pop
jecxz
push
out
cld
ror
and
shr
add
mov
inc
mov
jns
call
scas
cmpb
adc
fiaddl
mov
push
adc
mov
call
int
adc
push
mov
ja
dec
addr16
icebp
test
imul
shrl
sti
movsl
in
sub
mov
mov
hlt
arpl
pop
push
cmp
movsb
adc
xchg
daa
shll
enter
mov
enter
adc
add
popa
jae
in
imul
divb
mov
in
lahf
call
sub
mov
mov
stc
mov
push
adc
sub
push
mov
adc
scas
lock
or
xor
enter
das
and
lds
or
je
xlat
jp
mov
pushf
push
jp
dec
popf
hlt
daa
orl
neg
xor
and
js
enter
push
xor
repz
rcrl
add
adc
sahf
pushf
aas
push
mov
cmp
pop
lds
mov
stos
jno
dec
sbb
cld
fwait
jp
cwtl
rcrl
mov
pop
sbb
xor
mov
pop
fld
pop
or
sbb
pop
mov
roll
aam
jge
decl
mov
inc
jle
lock
shr
mov
movsl
outsl
push
scas
sbb
adcb
mov
mov
cli
mov
jnp
arpl
jmp
cmp
inc
dec
ret
ss
cmpsb
scas
pop
test
inc
sub
es
dec
jae
jge
sbb
sub
mov
xor
xchg
je
pop
lock
cmp
jo
aam
fcoml
jno
cltd
mov
jae
pop
push
or
out
jbe
filds
mov
lahf
xor
xchg
mov
mov
inc
les
mov
lock
mov
cmp
bound
out
xor
jae
out
pop
xchg
xchg
fsubr
jbe
jb
jmp
fs
int3
mov
lock
mov
mov
xor
adc
call
pop
push
lcall
sbb
std
xor
and
aas
pusha
xor
pop
ja
push
leave
cld
mov
aaa
mov
add
lods
ds
sub
imul
push
push
das
data16
movsb
lret
xor
jg
mov
mov
lods
or
pop
pop
jg
xchg
jl
jno
or
sub
inc
int
sub
inc
cmp
into
mov
mov
mov
fadd
or
ds
push
cmpsl
gs
mov
ret
mov
stos
or
out
das
adc
in
popa
repz
outsl
mov
pop
gs
pop
cs
test
inc
decb
push
fcomi
std
ret
push
sub
ja
cmp
pop
pop
stos
xchg
push
jecxz
sub
sub
in
sahf
push
cmpsl
dec
shrb
std
mov
lcall
and
mov
xor
fwait
mov
aaa
dec
dec
repnz
mov
jecxz
push
mov
shlb
jp
adcl
adc
lahf
faddp
cmpsl
jmp
fisubl
dec
inc
decb
sub
lock
rorb
xlat
sub
rcl
push
mov
mov
roll
inc
in
sbb
adc
push
cli
dec
faddp
xchg
add
or
pmullw
popa
lods
adc
mov
push
jg
mov
lds
inc
int3
lea
pop
dec
repz
aam
jns
out
aas
push
nop
mov
jmp
stos
cmp
dec
adc
cmp
xlat
hlt
fiaddl
xor
icebp
xchg
das
push
cltd
push
cmp
pop
shll
jp
in
and
aad
jg
out
inc
push
or
push
sub
cs
jmp
int
popa
and
imul
aaa
iret
add
arpl
test
test
cmp
outsl
cs
popa
lret
fldt
mov
or
lret
xchg
loop
mov
imul
push
sub
rcll
or
cld
cld
push
pop
dec
leave
sbb
out
in
mov
push
push
sbb
ret
in
and
push
add
cmp
xchg
fists
push
pop
add
mov
cmp
aas
sub
cmc
mov
rcl
pop
push
mov
mov
testb
es
jge
stc
mov
xchg
jp
cmp
sbb
jmp
mov
ds
cmp
mov
mov
jne
ret
mov
testl
insl
pop
dec
lock
jns
ds
cmp
scas
cmp
push
es
mov
cmp
outsb
cs
incb
sti
fucom
xor
pop
das
decl
cmp
sbb
scas
cmp
fstl
or
mov
insl
shrb
sbb
rorl
sahf
sti
sbb
idivb
ss
bound
stos
movsl
mov
loopne
out
scas
inc
or
jb
fsubs
int
pop
bound
pop
dec
mov
xchg
out
stc
out
jmp
arpl
les
dec
cmpsb
xchg
sub
push
movsb
loopne
sub
mov
cmc
cmp
mov
hlt
in
xchg
cmp
cmp
jnp
hlt
stc
popl
or
out
js
pop
fiaddl
mov
pop
ds
and
xchg
mov
outsb
orl
hlt
mov
or
iret
or
iret
in
inc
aaa
scas
popf
push
jle
icebp
es
jno
dec
xor
lods
lret
popa
xor
adcl
or
cmp
inc
rorb
pop
mov
add
add
push
shll
jae
inc
sbb
ficoml
push
popa
mov
fnstenv
sbb
sub
in
inc
jne
mov
rorl
cwtl
loope
jecxz
nop
cmp
sti
add
stc
or
sub
fbstp
repnz
or
pop
cmp
jle
cmp
push
push
test
mov
add
sbb
xchg
shrb
add
xchg
outsl
and
js
dec
push
popf
and
push
leave
sbb
inc
sub
mov
inc
pop
cmp
and
push
xchg
dec
push
lahf
hlt
popf
pushf
or
push
dec
xchg
inc
and
push
jmp
cmp
push
jne
pop
je
add
jl
popa
lcall
cld
into
repnz
fimuls
xchg
inc
mov
call
bound
test
cwtl
push
mov
mov
xchg
pop
jnp
dec
addr16
ret
filds
cwtl
jle
imul
jg
xchg
jne
repnz
mov
inc
adc
bound
into
xor
cmp
loope
insb
pushf
into
incb
rcll
stos
mov
mov
mov
shl
stc
hlt
mov
mov
shll
xchg
cmpb
sub
xchg
mov
rolb
lcall
inc
inc
mov
xor
outsb
rolb
leave
cmp
dec
xchg
xchg
out
add
pop
ret
dec
mov
ret
push
fucomi
dec
lods
fsubrl
ret
push
cmp
xchg
hlt
pcmpgtb
call
inc
and
mov
loope
inc
lcall
int3
jnp
and
jns
mov
test
xor
sub
insb
push
ret
sub
lahf
es
js
out
mov
subl
adc
pusha
cwtl
movsl
sbb
mov
cmpsb
scas
cli
inc
scas
jp
cltd
insl
stos
dec
in
jg
addr16
sbb
repz
outsl
mov
imul
fnsave
or
sub
sarl
mov
mov
nop
stos
inc
jle
mov
iret
or
mov
push
stos
mov
cld
into
cmpsl
jmp
test
arpl
or
mov
in
mov
sti
sbb
insl
or
jb
pop
in
xchg
movsb
inc
stos
push
loope
int
push
xchg
add
outsb
adc
pusha
pminub
adc
pusha
mov
jle
sahf
pop
jmp
mov
cld
mov
ret
pusha
xchg
dec
jae
dec
loopne
sub
sub
jg
sbb
lods
daa
push
inc
repnz
and
mov
cmp
fwait
std
dec
dec
sarl
xor
cmc
insl
mov
pop
pop
repnz
cmp
fwait
mov
cmp
sub
push
out
out
lods
ss
dec
fidivl
add
adc
out
test
fistpl
add
cmp
ss
add
into
sbb
pop
dec
cmp
pop
jmp
pop
cwtl
fistpl
jl
int
xchg
je
push
in
repnz
mov
in
and
roll
dec
pop
stos
repnz
lahf
fs
push
rcl
out
aam
scas
imul
scas
shrl
mov
adc
dec
xor
xchg
test
repnz
mov
dec
or
insb
inc
inc
adc
bound
repz
xor
jp
test
cmp
popa
push
push
call
subb
jp
adc
pop
mov
inc
popf
and
icebp
out
xlat
std
xchg
js
jl
mov
insl
inc
int
insb
xor
push
and
test
test
lock
push
push
sbb
push
add
mov
or
mov
shr
lods
fs
outsb
adc
pop
push
mov
inc
int
das
aaa
jle
fcomip
pop
icebp
xorb
mov
ret
or
addr16
jbe
mov
sub
lret
std
loop
or
psubq
addr16
pop
test
sbb
imul
adc
add
xlat
jo
in
addr16
fisubs
je
xor
xchg
adc
inc
fnstenv
cltd
cmp
outsl
sub
xor
cmp
mov
cli
shll
inc
lods
popa
ss
sub
inc
mov
rolb
adc
jae
sti
sub
add
mov
repz
dec
imul
xor
xchg
cvtps2pi
sub
adc
mov
stos
stos
dec
mov
jl
push
adc
push
cld
jmp
jge
jle
add
dec
xchg
add
dec
fisttpll
iret
pop
and
pop
adc
out
imul
andl
fcmovnbe
mov
mov
jmp
cmp
repz
cmpsl
jno
clc
mov
sti
xor
jb
out
mov
sub
or
cmp
inc
cmp
sub
fstps
jmp
or
mov
les
cmp
mov
inc
int
ljmp
rol
mov
in
sbb
les
push
and
fcoml
or
mov
notl
add
adc
aaa
pop
es
cmp
imul
mov
movsb
mov
mov
and
outsl
ljmp
addl
xor
bound
push
jg
and
xchg
js
sub
push
add
cmpsb
sub
or
jb
xchg
ret
popa
iret
dec
push
lods
stos
enter
pcmpgtd
aam
push
add
adc
pusha
add
pop
aam
fimuls
mov
xor
xchg
les
adc
mov
lods
lret
sarl
pop
shll
xlat
or
test
mov
add
inc
push
stc
imul
rcr
cmp
dec
xorl
pop
xor
ret
mov
xchg
inc
xchg
leave
dec
in
pop
xchg
jno
sub
mov
mov
test
mov
jecxz
mov
push
fwait
and
mov
inc
hlt
pop
cmp
ja
sbb
mov
movsb
push
pop
mov
jge
dec
sti
les
pop
adc
std
add
inc
mov
and
fnstcw
mov
xor
mov
cmc
adc
push
fwait
mov
dec
mov
jmp
mov
inc
mov
xlat
pop
outsl
add
xchg
cmp
sbb
outsb
add
push
push
inc
aad
movsb
push
setno
test
lahf
xchg
movb
and
loop
jbe
popf
in
add
pop
in
xchg
cmp
xor
dec
rsm
jl
inc
out
add
out
fdivl
push
ret
xchg
in
xlat
mov
stos
dec
mov
es
mov
aas
notb
loopne
das
push
xchg
fs
push
mov
ret
cs
cmp
mov
add
imul
push
pop
imul
leave
mov
divb
sub
adc
push
fwait
test
das
mov
fisttpll
outsb
popf
inc
inc
pop
mov
movsb
lds
push
add
pushf
adcb
cmp
pop
mov
lods
mov
cmpsl
mov
adc
xchg
leave
pusha
add
jb
aaa
inc
sbb
push
adc
pop
les
lahf
jmp
sbb
xchg
roll
xchg
mov
hlt
jge
lret
add
pop
push
jb
xor
rcr
cmp
fdivrl
pop
push
mov
sub
jae
ds
scas
xor
adc
sbb
jne
imul
sub
cmp
and
nop
pop
loopne
cli
bound
xlat
aaa
les
push
dec
mov
or
jmp
mov
in
push
jnp
rorl
lret
add
xchg
sbb
sub
jp
jbe
loope
stos
jne
mov
andl
sahf
xchg
pop
bound
xor
pop
pushf
push
jl
and
adc
fsubrl
loop
sbb
pop
cmp
aam
sbb
int
mov
iret
xlat
fnsave
cmp
rclb
dec
rcrl
rol
and
inc
inc
call
jo
push
inc
add
mov
dec
sub
and
dec
cmp
andb
pop
mov
or
add
jno
test
es
loope
mov
push
mov
stos
mov
scas
sbb
mov
movsl
dec
lods
aad
jmp
leave
daa
cmp
adc
mov
dec
xchg
sbb
push
jb
dec
mov
add
xchg
cld
and
movsl
aas
arpl
inc
add
dec
and
add
mov
sbb
xchg
push
cmp
pop
jl
or
dec
movsl
notb
adc
inc
xchg
out
cmp
fstl
sti
adc
mov
clc
mov
push
arpl
dec
inc
or
jne
inc
fists
mov
mov
lea
xlat
inc
mov
xchg
push
outsb
mov
xor
outsb
hlt
lret
test
xlat
jb
dec
adcb
mov
cmp
mov
adc
xlat
in
imul
icebp
jecxz
jg
je
mov
jae
add
lds
or
add
cmc
or
pop
pushf
xchg
pop
mov
xor
cmpsl
popf
fucomi
push
push
ror
xchg
sbb
jle
dec
fsubrs
leave
nop
cmp
int
or
pop
out
iret
cwtl
add
adc
and
jno
iret
sub
jo
sub
ret
loop
jmp
mov
xor
out
push
aad
das
sbb
mov
xchg
adc
mov
repz
xlat
clc
test
adcl
call
mov
aas
or
inc
ss
cmp
addr16
stc
sahf
cmp
xor
jl
push
sbbb
js
sbb
shll
shll
dec
push
add
sbb
xchg
jl
lsl
pop
mov
cs
stc
cwtl
pop
push
subb
mov
push
and
test
rcrl
jnp
mov
mov
shll
insb
fwait
jno
fwait
push
add
add
shr
adc
icebp
mov
stc
xchg
mov
and
adc
cmp
rcrl
push
mov
push
movsl
pop
dec
pop
inc
push
lods
jne
iret
cmp
mov
pop
sbb
movsb
sarl
dec
decl
xchg
bound
imul
mov
cmp
aas
push
je
jle
inc
fisttps
sbb
call
and
dec
popf
sahf
mov
insl
int
movsl
and
mov
dec
or
cltd
xor
cld
mov
jle
sbb
lea
push
aad
xchg
pop
or
std
xor
push
ss
sbb
repnz
aas
fildll
sbb
mov
repnz
scas
out
or
scas
fidivl
aaa
shrl
imul
pop
in
mov
shlb
lods
fcmovnbe
addr16
xor
adc
loopne
lret
clc
pop
icebp
lock
iret
popl
int3
lcall
pop
lcall
add
push
push
push
addb
add
push
jmp
inc
rorl
add
in
in
and
enter
dec
and
enter
jecxz
cmpsl
and
push
test
ja
in
mov
push
aas
or
cmc
xor
or
icebp
push
xchg
xor
push
cs
shrl
hlt
fdivs
adc
adcb
jne
adc
mov
jnp
cmc
jbe
je
jo
aad
cwtl
sub
adc
hlt
cld
lret
dec
mov
push
sarb
sub
add
pop
fwait
orb
out
xchg
xor
xchg
pop
add
pop
cmp
bound
out
js
jno
push
cmp
inc
mov
dec
and
add
jns
mov
movsl
mov
test
fsubs
lods
rorl
pop
adc
jmp
hlt
outsl
sub
out
xchg
dec
or
call
inc
sbb
aas
or
in
inc
in
dec
mov
aaa
dec
sbb
xorb
sbb
addr16
pop
jmp
rol
mov
mov
pavgb
daa
add
xchg
rcll
cmp
fwait
add
jae
pushf
stc
test
sub
add
out
aam
mov
in
das
out
or
fnstsw
push
or
mov
ret
leave
push
sub
iret
mov
inc
fisubs
cli
aad
pop
popf
inc
mov
push
js
mov
aad
lock
arpl
je
jle
andl
out
mov
hlt
pusha
sub
and
imul
jmp
or
push
jl
mov
or
in
inc
dec
ss
push
lret
sbb
mov
in
fdivrl
sbb
xchg
hlt
cmp
pop
mov
data16
lret
lds
cmpsb
mov
lods
adc
loopne
xor
aad
push
xchg
idiv
or
std
fcmovu
pop
jo
xchg
es
xchg
mov
popf
push
int
push
iret
ss
scas
sub
push
sbb
inc
daa
lock
xchg
or
fs
in
or
push
daa
jno
inc
stc
sbb
xchg
dec
jo
lock
out
call
push
mov
or
cmp
sub
fildll
or
push
pop
dec
cli
dec
stc
ror
jmp
les
jb
sbb
push
hlt
rorb
jle
jg
incb
lods
ja
and
ljmp
push
jb
push
jg
aaa
cmc
cmp
jmp
insb
xor
imul
fwait
mov
fistpll
xchg
sbb
add
icebp
shrl
loopne
outsl
das
fwait
push
dec
pop
imulb
hlt
push
push
adc
icebp
test
inc
hlt
mov
aad
mov
sbb
dec
fmuls
and
and
mov
shrb
jns
iret
mov
or
cmp
mov
jns
and
push
stc
mov
push
mov
sbb
push
xor
dec
test
jmp
push
sbb
mov
test
cltd
lahf
adc
xchg
jo
mov
xchg
or
dec
mov
sbb
sub
dec
imul
call
inc
into
into
in
outsl
and
ltr
iret
mov
lahf
fmul
leave
outsl
and
bound
sbb
lock
adc
sub
test
icebp
js
sti
bts
cmpsl
sbb
push
mov
repnz
cmp
sub
adc
xor
ret
cmp
adc
cmp
test
sbb
add
in
scas
add
mov
out
mov
das
sbb
rorl
pushf
fsubs
daa
mov
pop
adc
mov
iret
sar
pop
jp
xchg
fcmovb
push
test
pop
in
jns
lock
in
mov
push
ret
jl
test
mov
dec
xchg
push
testb
cmp
negl
push
pop
jge
repz
sub
xor
xchg
inc
mov
repz
mov
outsb
fwait
and
lea
mov
xchg
mov
mov
scas
pop
jns
fstps
mov
or
and
and
jne
stos
adcl
cwtl
cmp
xchg
lahf
cmp
aaa
adc
int
adc
sub
pop
jl
ja
or
iret
adc
cltd
sub
stos
sti
mov
dec
cmp
insl
je
pushf
adc
loopne
int3
pop
mov
out
in
xchg
outsl
lcall
push
jg
xchg
int
aaa
pop
fs
mov
xor
pop
cmpsl
out
xor
mov
xor
lds
rep
mov
xchg
push
cmc
jb
cld
data16
sub
jecxz
adc
fdivl
xchg
pop
xor
out
push
jo
xchg
push
ja
sbb
scas
fwait
sub
mov
aam
lcall
push
jb
mov
sub
mov
call
sahf
in
out
push
and
xorl
pop
add
or
cmpxchg
dec
mov
or
iret
fisubrl
xchg
shl
dec
push
dec
popa
inc
loopne
sarb
ja
mov
pop
or
mov
xchg
clc
or
sub
cmp
mov
push
loope
insb
dec
mov
sbb
cmp
xor
out
out
test
lret
loopne
dec
mov
pop
and
sti
repnz
jecxz
fcompl
inc
shrb
into
inc
pushf
ja
aaa
cmp
push
push
pop
add
repnz
mov
cwtl
mov
test
cs
inc
sbb
mov
icebp
inc
sbb
ficompl
mov
pop
sti
inc
xchg
shlb
and
xchg
push
pop
loopne
repnz
add
fisttpl
jne
jecxz
xchg
push
add
push
sahf
dec
mov
ud1
inc
loop
xchg
cmp
and
test
cwtl
aas
xchg
mov
out
xchg
ficoms
mov
inc
jae
jge
movsl
xor
shlb
idiv
icebp
popf
popf
inc
push
dec
inc
test
repnz
mov
lahf
lock
in
dec
scas
inc
xchg
ljmp
in
mov
push
ja
in
and
push
clc
cmc
cmp
and
imull
sub
and
in
add
mov
mov
sti
nop
aad
cmp
iret
jae
xor
jns
xchg
shlb
cmp
and
rol
mov
adc
or
arpl
lods
mov
fmuls
iret
xor
ds
mov
xchg
mov
in
mov
test
jo
and
daa
lock
das
push
inc
cmpsl
cmc
das
pop
dec
int
jmp
cmp
nop
rcrl
jmp
fldlg2
leave
mov
or
pop
outsl
pop
outsb
sbb
out
stc
ficoms
mov
mull
sahf
cld
mov
xchg
test
xchg
into
jle
push
int3
test
jmp
popf
adc
jae
mov
jbe
jnp
cwtl
jo
push
js
push
iret
stos
fnstsw
sub
lods
pop
and
xor
mov
push
jbe
xchg
dec
movsb
icebp
out
sub
adc
add
jne
lock
rcrl
and
in
rcr
clc
stos
mov
leave
xchg
outsb
push
aad
mov
pop
movsb
iret
test
dec
xchg
or
lret
sarl
inc
hlt
in
dec
and
push
pop
and
pop
xchg
jns
out
mov
sahf
push
outsb
jnp
add
xchg
sbb
outsb
aas
cmpsl
test
mov
mov
fnstcw
stc
and
mov
mov
aam
jo
inc
or
xor
pop
dec
mov
stos
ja
adc
push
hlt
adc
jp
sbb
mov
rcrb
divl
xor
sub
adc
or
jp
xor
pop
sub
adc
loope
gs
pusha
pop
jp
or
aaa
insl
daa
jp
sbb
or
inc
xor
cmp
sub
cmp
lods
shlb
xchg
xor
repz
imul
push
pop
cs
std
loopne
cmp
sub
and
fcoms
xchg
or
push
dec
jp
cmc
mov
cli
cmpsl
mov
cmpsl
sbb
inc
js
cmp
push
pop
adc
add
imul
in
bound
lods
das
sahf
pusha
es
insl
test
leave
push
stos
mov
cwtl
push
in
lret
subl
fwait
gs
fildll
ss
xor
in
jmp
jno
or
pop
movsl
and
les
dec
dec
add
sti
inc
stos
fisubrl
sub
mov
sbb
pop
cmp
sub
fcmove
js
dec
cwtl
clc
sub
adc
jnp
add
lret
inc
imul
mov
out
jno
arpl
int
mov
cs
dec
pop
fcmovnu
pop
mov
insb
leave
stos
pop
push
insb
pop
bound
adc
adc
loope
adcl
in
add
mov
ja
xchg
daa
mov
call
inc
fincstp
inc
out
cmp
cmp
outsb
xor
pop
adc
sbb
mov
or
mov
xchg
pop
imulb
in
sub
cmp
add
in
in
stc
mov
mov
mov
lock
nop
cmp
mov
insb
iret
idiv
push
lock
icebp
pop
push
loop
mov
pop
mov
fwait
pop
jne
mov
cld
popa
clc
shl
rclb
out
add
and
or
insb
push
movb
and
les
push
fs
cmp
mov
pusha
imulb
das
imul
cmp
sbb
out
cmp
in
cmpsb
adc
adc
mov
dec
aas
cmp
test
repz
mov
cmpb
pop
mov
mov
jge
xchg
sub
add
mov
addr16
pop
push
imul
icebp
cmp
jae
fcmovbe
repnz
lea
in
cwtl
sub
sahf
stc
iret
xlat
add
test
lret
movsl
sarb
leave
ret
mov
pop
jmp
sub
xor
popa
dec
lds
in
std
mov
xchg
loopne
pop
ficoms
cmp
or
mov
mov
add
add
jae
lea
push
mov
cmp
mov
cmp
mov
fidivs
mov
lret
pop
test
ret
aad
mov
mov
mov
jl
sbb
fs
jecxz
push
mov
lods
sbb
sub
push
cmp
or
mov
rol
push
shll
and
xchg
dec
push
fs
enter
rolb
add
nop
xor
fimull
pop
jl
sbb
cmp
pop
add
mov
fstl
sbb
mov
mov
out
inc
aaa
jge
les
das
jae
fisubl
mov
jl
mov
lock
sarl
inc
jno
add
pop
and
fwait
ja
fstl
push
ror
out
jno
adc
sub
dec
pop
mov
ljmp
jbe
sahf
rcr
push
lock
clc
movsl
or
mov
outsb
loope
add
jnp
lcall
pop
pusha
xchg
bound
in
and
sbb
jnp
sbbl
sbb
mov
xchg
lahf
jle
and
mov
jns
cmp
insl
frstor
xor
in
scas
pop
sahf
inc
cmp
nop
sbb
mov
pop
inc
cmp
cmc
sub
xchg
push
add
mov
aam
js
sub
pop
inc
sti
cmp
cld
out
out
dec
out
adc
or
cmpsl
popa
pop
xchg
dec
mov
ret
mov
inc
xchg
mov
adc
fndisi(8087
xchg
mov
mov
pop
in
lods
xchg
test
fcmovbe
call
mov
andl
ret
mov
mov
pop
pusha
leave
scas
push
cmpsb
dec
mov
aaa
xor
frstor
pop
pop
arpl
cmp
and
das
fdivrs
mov
pusha
fisubrs
or
leave
mov
or
jmp
and
or
cmpsl
cmpb
inc
imul
mov
cmp
add
xor
pushf
mov
jbe
mov
mov
in
cmp
pop
mov
or
mov
add
mov
rcr
cmp
xchg
dec
pop
mov
je
sub
aaa
aam
mov
inc
lds
lds
mov
rcl
lcall
cmc
or
add
xchg
dec
or
and
cmp
stos
and
push
pop
mov
aas
or
test
int
pop
addl
mov
sub
sbb
xchg
mov
data16
cmpsl
test
mov
sub
jp
jle
enter
out
xchg
or
mov
pop
insb
pop
mov
xchg
sub
shlb
mov
andl
popf
sarl
outsl
mov
mov
push
pop
mov
xor
mov
mov
loop
in
jmp
cmp
iret
adc
adc
int3
fwait
sbb
movsl
ret
hlt
adc
int
mov
movsb
rclb
push
scas
xor
sbb
sbb
imul
mov
adc
add
clc
push
xchg
aad
add
int3
lret
repnz
fucom
ss
add
pop
les
jmp
jmp
mov
mov
shlb
jno
xor
jno
adc
setns
aaa
sub
lret
sub
inc
daa
xor
in
jge
pmulhuw
pop
inc
xor
pop
in
sbb
notl
pop
jp
rcrl
xchg
xchg
adc
mov
std
xchg
fisubrs
inc
adc
cwtl
push
jmp
sub
ljmp
sub
pop
arpl
inc
lods
shll
and
and
inc
loop
ss
lds
adc
aaa
int3
push
dec
imul
mov
nop
xchg
inc
jl
insl
jl
loop
clc
xchg
pop
dec
mov
mov
add
popa
ret
mov
xchg
push
mov
jge
add
push
fwait
lods
push
push
xchg
and
mov
test
sahf
aad
sbb
push
ds
push
xor
ljmp
jae
sar
imul
in
fs
jge
repz
mov
mov
cmpl
sti
dec
pop
jecxz
xor
int
xlat
cli
fidivs
out
pop
cmp
rorl
je
mov
scas
mov
test
scas
adc
frstor
mov
std
sbbl
aam
mov
mov
aas
xor
imul
repz
or
int3
mov
pusha
xchg
mov
inc
in
mov
outsl
push
test
mov
call
xor
xchg
add
pop
int3
push
mov
pop
cltd
sysret
fdivrs
sub
shll
sub
sbb
fstps
pop
and
inc
icebp
and
mov
loopne
negb
stos
out
sbb
out
push
lods
xor
jl
xchg
mov
icebp
add
out
pop
xor
scas
insl
sbb
out
outsl
adc
lahf
dec
lcall
push
jns
inc
lahf
andb
pop
je
pop
clc
mov
and
fldcw
cmp
sub
xchg
cs
rclb
xlat
loope
lods
sarb
ds
cmp
xchg
out
cmp
movlps
lret
aam
and
call
stos
cwtl
mov
lahf
dec
loopne
inc
jnp
loop
into
pop
inc
aaa
test
pushf
adc
jne
jge
xchg
shll
add
dec
hlt
ja
pop
pop
pcmpeqw
shll
jo
loop
or
sbb
cmp
jae
or
dec
je
mov
cmp
cmp
mov
pop
and
aad
cmp
ljmp
out
push
int3
mov
push
xchg
dec
pusha
aam
cwtl
lret
inc
jb
push
movsb
sub
jg
xor
adcl
cmpsb
fistps
gs
sub
std
dec
adc
add
fidivrs
hlt
repz
jnp
jb
jg
lods
lahf
nop
lea
idiv
inc
cmp
xor
dec
sarb
jmp
mov
and
scas
inc
loope
fxtract
es
dec
xchg
xchg
in
sub
dec
js
push
movsl
ljmp
mov
pop
int
push
or
rcl
aad
loop
bound
mov
and
shlb
or
ds
or
adc
clc
lods
xchg
or
test
adc
in
mov
les
arpl
lock
adc
lock
push
das
push
in
in
pop
imulw
xchg
xchg
scas
xchg
repnz
adc
loopne
adc
fidivl
loopne
adc
dec
ret
dec
sbb
dec
cmc
xor
fwait
popa
daa
pop
aam
sahf
sbb
pop
xchg
mov
int
and
inc
mov
pop
xlat
push
mov
mov
stc
fwait
xor
fidivrl
aam
cltd
lahf
jmp
jne
out
mov
subl
call
inc
sahf
jae
xchg
das
xchg
xor
mov
cmpl
adc
sub
push
repnz
lahf
movsb
push
mov
stos
cmp
mov
jmp
adc
shrl
inc
jnp
jno
out
fadds
add
sarb
dec
test
ret
adc
lock
push
jp
pop
xchg
test
arpl
or
inc
jns
xchg
sbb
add
jg
xchg
and
xchg
pop
movsl
push
addr16
scas
push
sbbl
sahf
mov
cmp
jmp
push
pop
dec
adc
jae
xor
adc
mov
mov
xor
jp
mov
je
adc
call
sahf
jle
popf
sub
loop
inc
scas
add
push
xor
cwtl
adc
cwtl
les
push
sub
int
and
pushf
or
inc
sbb
mov
out
sub
mov
and
into
insb
mov
lods
and
gs
push
xor
js
test
jg
int
adc
je
dec
or
aad
inc
dec
stos
mov
adc
popa
jle
leave
ja
jo
test
lods
roll
or
add
or
lock
cs
ss
xor
pop
adc
or
cmpsl
add
aaa
fwait
xchg
or
popf
pop
jle
mov
lret
dec
or
inc
incl
sub
inc
sub
cmp
xchg
cltd
inc
jle,pt
xchg
mov
cwtl
xchg
pop
adcl
and
popf
xlat
xchg
sar
addr16
fiadds
push
push
aaa
xlat
pop
dec
cmp
and
xchg
cmp
mov
inc
cltd
subb
fcomi
cmp
mov
mov
xchg
and
jbe
mov
lahf
and
into
sbb
sti
repz
pop
bnd
adc
fimuls
pusha
jbe
fldenv
push
xlat
cs
pop
aas
and
mov
inc
mov
mov
mov
sub
shll
and
mov
dec
push
pop
mov
movsb
dec
rcrl
outsb
std
fsubr
jae
repnz
std
pop
enter
mulb
sub
ljmp
sub
in
js
clc
clc
adc
movsl
add
and
jp
inc
cvttps2pi
stc
sti
jb
cmp
clts
xchg
scas
lret
mov
mov
loope
dec
cmova
dec
sub
mov
leave
add
cmpsb
jl
fwait
pop
fcomp
sbb
call
lock
pop
xchg
icebp
flds
and
insb
lahf
or
push
push
or
stos
out
and
test
addr16
les
add
cmp
add
stos
inc
cwtl
inc
jbe
scas
pop
pop
lea
movsl
add
addr16
cld
daa
xchg
mov
and
push
adc
ss
sub
mov
repz
lds
sub
push
imul
in
jl
jl
icebp
dec
arpl
push
inc
out
mov
xchg
mov
pop
lock
data16
addr16
vpand
mov
mov
jmp
jnp
out
mov
aam
mov
sbb
mov
adc
mov
mov
outsb
js
adc
clc
nop
aam
and
sub
and
gs
add
push
pusha
push
iret
popf
mov
test
shll
inc
sbb
loopne
cld
jp
dec
jg
jecxz
or
outsb
add
out
mov
jnp
sbb
jmp
arpl
popa
mov
rcl
outsl
inc
cwtl
lret
ret
mov
dec
icebp
movsl
loop
test
insl
mov
lret
incl
out
jb
add
xor
clc
lcall
inc
or
ljmp
sbb
clc
and
clc
fpatan
sub
dec
call
enter
jbe
pop
test
loop
dec
pushf
push
mov
fdivrs
out
outsl
icebp
cmc
fidivl
cli
mov
clc
ljmp
xchg
push
inc
fscale
inc
je
imul
mov
and
jmp
loop
enter
js
mov
pop
push
loope
jbe
fwait
mov
sahf
das
cmpsb
cmc
addr16
jae
shlb
mov
push
mov
pop
dec
fidivrs
adc
and
mov
insl
cmp
push
push
mov
movsl
push
mov
icebp
xorl
mulb
inc
xchg
lods
fnstenv
in
lret
imul
sbb
lea
sub
sub
fisubrs
es
and
jle
mov
mov
jp
push
xor
cmc
imul
leave
or
inc
cmp
add
lcall
in
lds
test
inc
pop
xchg
cld
jae
cmp
sub
in
ss
lds
pop
mov
xor
mov
adc
inc
pop
sbb
sbb
xor
pop
in
jb
fwait
stc
jns
pusha
mov
cmp
lretw
cmpsl
out
lret
bound
mov
cld
sub
rcll
mov
jge
or
mov
jge
xor
shlb
das
je,pt
mov
push
loopne
inc
push
sbb
aas
and
dec
xor
cmc
lret
cmc
cmpl
nop
stos
jns
into
mov
ret
sub
notb
and
sub
push
dec
xchg
sub
push
test
and
lds
xchg
add
pushf
mov
xchg
mov
out
mov
and
xchg
xchg
fsub
mov
xor
mov
in
or
nop
pop
inc
dec
mov
push
lds
mov
push
and
aas
dec
int
mov
dec
cwtl
add
pop
hlt
inc
outsl
cmp
jg
xor
jmp
adc
cmp
inc
daa
outsl
fistpl
mov
test
add
aas
lret
repnz
push
outsb
pop
popa
xor
leave
test
icebp
mov
popf
mov
mov
pop
cld
mov
xchg
lods
arpl
sbb
outsl
push
mov
lret
jns
dec
and
stc
sbb
jmp
lahf
stc
pop
out
sbb
ja
mov
sbb
repz
mov
jge
pusha
cli
mov
test
mov
sbb
icebp
sarl
cwtl
add
mov
push
test
test
shrb
push
imul
jp
jg
xor
jg
jmp
dec
and
aas
adc
cmpsl
pop
out
adc
inc
jo
outsl
mov
ja
je
popf
pop
sub
test
or
mov
sti
stc
adc
in
mov
pop
mov
movsb
ljmp
es
aaa
loop
mov
in
enter
push
mov
inc
je
dec
mov
cmpsl
pop
and
jecxz
ja
rcll
dec
xor
cmp
mov
or
fsub
int3
in
xchg
xchg
mov
or
and
imul
lea
push
int3
sbb
imul
or
addb
jb
and
xchg
sti
xchg
xlat
add
add
push
cmpsl
in
pop
lods
pop
imul
cmpsl
push
jl
fsubrs
mov
jl
mov
adc
sarb
mov
pop
lods
xor
addl
xchg
pushf
pop
add
dec
arpl
das
pop
xor
cmp
negl
jno
push
outsb
fadd
lret
lahf
xchg
cmp
cmp
mov
cwtl
add
cmp
sbb
sbb
push
push
push
pushl
popa
and
roll
pop
inc
add
std
mov
or
pop
loop
jo
fildll
fwait
or
aaa
mov
sbb
push
pop
jmp
out
movsl
mov
mov
xchg
sub
decb
stc
ret
or
xor
jmp
inc
xchg
incl
cmpsb
mov
adc
inc
pushf
mov
mov
les
in
jbe
push
jp
jbe
imul
in
jecxz
cmp
push
stos
out
mov
cli
add
rorb
mov
adc
inc
xchg
inc
mov
fldt
mov
divl
or
pop
sub
scas
sub
or
mov
cmp
int3
dec
adc
pop
xlat
mov
pop
mov
jo
sub
mov
inc
dec
insb
sbb
cmc
mov
sub
in
adc
xor
stos
jl
xchg
pop
fidivrl
mov
xchg
popa
int
mull
jmp
das
in
daa
retw
jmp
in
sti
sub
mov
adc
mov
or
or
negl
out
in
fs
fcompl
lahf
dec
inc
dec
fadds
ret
xchg
sub
pop
mov
push
hlt
jmp
xchg
outsb
mov
mov
addl
fstps
mov
xlat
cmp
pop
dec
mov
dec
cwtl
lock
pop
jecxz
sahf
push
sarl
inc
insb
fnsave
dec
or
push
mov
sub
push
fcoms
xor
add
xchg
xchg
pop
and
xchg
mov
add
dec
popa
lock
cld
arpl
sbb
mov
call
xchg
jb
test
and
je
adc
mov
xchg
sbb
out
cwtl
sbb
int3
gs
cmp
pop
mov
cmpsl
inc
cmp
xor
adc
lods
popl
mov
add
push
movsb
movsl
inc
fcoml
adc
push
in
push
fdivr
roll
pop
cmp
pop
cld
cmpsb
leave
jmp
cld
lods
pushf
cmpsb
xchg
xor
div
int3
xor
mov
mov
les
dec
cmpsl
icebp
push
stos
fisttpll
test
jbe
jno
push
mov
lahf
addb
add
xchg
aam
lock
cld
sbb
aad
nop
inc
in
and
sbb
dec
jecxz
jg
xchg
add
or
jg
mov
call
dec
pop
mov
int
aam
scas
dec
hlt
insl
addr16
cmp
jbe
ds
adc
push
xchg
mov
gs
mov
sub
ffreep
mov
inc
aad
inc
aas
ret
gs
and
cmp
cmp
cltd
imul
aaa
mov
xchg
sub
lret
outsl
lods
adcl
add
pushf
sub
push
and
les
out
mov
xor
fiadds
loop
pusha
cs
int3
pop
int
sub
cmp
js
sbb
cwtl
dec
std
jp
inc
push
cmpsl
outsl
loopne
sbb
sti
mov
fwait
cmp
mov
jo
shl
les
pop
testl
cli
sbb
rcl
mov
mov
push
jnp
cmp
arpl
in
aas
cli
add
stc
mov
sub
jns
xor
xchg
lds
jns
call
fcmovu
movsl
sahf
lea
xchg
sbb
ss
inc
xlat
or
mov
and
js
les
and
stc
cli
scas
jle
jl
sbb
loope
stos
or
ret
test
fdivrp
pop
in
repz
mov
dec
ret
xchg
sub
imul
mov
sar
add
cwtd
mov
ss
and
or
or
or
dec
popa
sbb
int
adc
ror
mov
xor
addb
mov
repz
inc
lret
dec
sub
mov
inc
test
and
mov
ljmp
xor
pop
lcall
or
cmp
ja
push
sbb
aam
repnz
add
cld
pop
aas
arpl
dec
sbb
push
mov
pop
xchg
push
sbb
rorb
psubw
les
jge
in
lds
test
mov
mov
ljmp
pop
scas
xor
ss
fldt
in
shll
xchg
movsb
addb
adc
loope
imul
mov
andl
xor
add
inc
mov
cmpl
jne
pushl
pushl
push
push
push
push
pushl
push
pushl
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
xor
add
mov
movl
add
cmp
movl
je
mov
movl
jmp
mov
mov
cmp
movl
jne
movl
push
jmp
mov
mov
cmp
movl
jne
sbb
mov
andl
mov
inc
mov
cmpl
jne
push
pushl
push
pushl
push
call
cmpl
jb
movl
cmpl
je
cmpl
jne
call
xor
xor
dec
mov
jmp
mov
or
xor
and
add
andl
xor
add
inc
mov
cmpl
jne
push
pushl
call
cmpl
jne
xor
xor
inc
mov
cmpl
jb
xor
xor
or
mov
mov
mov
mov
xor
add
movl
imul
andl
mov
inc
mov
cmpl
jne
pushl
call
cmpl
jb
mov
xor
add
cmp
mov
push
je
mov
add
mov
mov
xor
add
imul
mov
jmp
mov
xor
mov
mov
xor
mov
mov
sub
add
mov
mov
jmp
pusha
sub
repz
xchg
cli
adc
je
outsl
and
add
jl
mov
add
mov
push
out
fwait
jno
mov
xor
push
cmp
lods
pop
out
sub
mov
ltr
dec
insb
cwtl
inc
pop
lret
les
or
pop
jecxz
sbb
push
lahf
xor
fnstcw
mov
repz
cmpxchg
sbb
ret
mov
mov
dec
adc
adc
std
mov
mov
xor
add
lahf
movsb
push
dec
cmpsl
das
mov
or
out
push
or
arpl
sub
lea
push
adc
fdivrl
and
sbb
adc
inc
stc
push
push
gs
adc
cmp
inc
add
loopne
clc
mov
dec
aam
aas
in
rcrb
loope
dec
fsubrs
push
jge
mov
daa
aaa
insb
stos
pushf
jge
mov
pop
stc
pushf
mov
sub
insl
shrl
popa
movsl
inc
dec
sbb
call
es
mov
pop
adc
mov
jmp
int3
dec
imul
inc
xchg
or
adc
inc
out
cmc
orb
mov
xlat
sbb
and
mov
inc
push
ret
or
sub
mov
or
cmp
sub
mov
orl
adc
iret
mov
mov
mov
mov
ret
pop
cmpsb
testl
cmp
push
ljmp
cli
call
fists
stc
pop
xchg
jnp
jcxz
cmp
rolb
clc
test
je
gs
or
loope
es
inc
mov
scas
sbb
int
mov
sbb
jge
cld
orb
mov
nop
pop
pop
stos
push
xchg
add
mov
inc
stos
fadds
push
aaa
jge
mov
ljmp
popf
leave
xchg
pop
push
xchg
fimuls
xorb
mov
sbb
setnp
outsb
mov
jp
sbbb
adc
or
divb
mov
mov
imul
and
adc
xchg
sub
mov
jb
insl
mov
imul
popf
mov
call
push
and
mov
pop
mov
pop
bound
shl
test
jl
pop
in
testl
lret
arpl
inc
jnp
mov
pinsrw
xor
rorb
lcall
and
adc
adc
add
shrl
xchg
push
scas
xlat
add
add
or
out
data16
fcomi
idiv
sbb
push
add
icebp
ret
pusha
imul
xchg
pusha
cmp
xor
out
sbb
leave
lret
push
fldenv
push
stos
pop
pop
push
inc
in
into
sahf
mov
jo
push
ds
icebp
lret
add
test
cmp
imul
shl
jle
xor
mull
push
inc
push
lahf
loop
ret
fdiv
push
or
mov
mov
aad
rcrb
jg
mov
lret
cmp
add
jae
mov
insb
dec
push
cmp
add
jl
cmpsb
sbb
push
aaa
shrd
xchg
loop
sti
mov
adc
mov
mov
pop
sub
jnp
ss
addl
in
pop
jnp
adc
mov
adc
lock
call
in
sbb
fsubs
cmpsl
sub
fidivrl
ficompl
sahf
int
rcl
jp
push
nop
je
aad
cmp
mov
fsub
fwait
mov
insl
add
xchg
cmpsl
mov
pop
mov
xlat
arpl
jno
add
sti
in
in
pop
add
pop
insb
push
mov
insb
adc
in
clc
popf
cmp
inc
jbe
movsb
and
insb
cltd
inc
push
adc
add
test
dec
push
fmulp
xor
sbb
pop
pop
repnz
mov
ds
mov
loop
pop
add
sub
xchg
mov
mov
sub
xchg
stos
sub
popl
bound
sbb
leave
jp
mov
mov
lahf
pop
cmp
lcall
xchg
pop
cmc
mov
push
gs
rcll
jae
scas
push
xchg
pop
dec
adc
or
leave
xchg
xchg
jnp
push
fimuls
xlat
dec
xchg
cmp
enter
sub
cmp
cmc
push
jbe
adc
loop
fsts
jae
test
shlb
inc
lcall
jp
adc
loopne
fbld
sbb
fistps
test
jne
outsl
or
sbb
shrb
push
inc
push
int
pop
out
jno
insb
std
ljmp
mov
adc
or
mov
les
aas
pop
stos
mov
jnp
ljmp
jecxz
sahf
iret
int
test
icebp
dec
fisttpl
mov
cmpsl
ret
test
movsl
ds
out
std
sar
subb
ret
ret
push
xchg
rorl
and
out
subb
cmp
int3
ljmp
imul
and
loop
sbb
pop
cmp
xchg
cmp
mov
push
dec
movsl
jp
gs
cmp
popf
loopne
mov
mov
decl
imul
hlt
sub
mov
dec
cmp
inc
push
dec
es
jns
jo
push
mov
mov
data16
xchg
enter
lahf
or
mov
rep
xor
daa
or
fs
push
fcomps
and
and
cltd
xor
sbb
jge
test
mov
aad
sbb
ljmp
mulb
lea
cmpsb
cmp
push
out
mov
xchg
in
sahf
paddq
cmpsl
pushf
mov
fstpl
lock
in
in
dec
push
mov
push
shr
sbb
test
ds
test
inc
and
js
add
stos
mov
cmp
and
ffree
pop
aad
cmp
mov
lahf
jns
jns
add
aad
daa
subl
sub
sbb
xor
hlt
ljmp
push
inc
gs
fbld
sar
fs
out
rclb
and
int
jo
in
pop
pop
addr16
lahf
dec
dec
cmp
jno
clc
xchg
cmp
jo
lods
clc
add
sbb
pop
mov
rcrl
jecxz
and
add
jl
aas
mov
or
sbb
fdivs
jbe
cltd
popf
test
aad
dec
rorl
subl
movsl
out
mov
pop
sbb
pop
fdivl
arpl
add
cmpsb
add
mov
sbb
out
insb
jae
pop
dec
js
out
mov
or
push
lcall
pop
lods
sbb
sbb
sub
insb
adc
push
pop
sti
add
and
std
pop
cmpsb
lret
sbb
xchg
xlat
lret
aad
xor
jnp
cmp
cwtl
or
mov
pop
lahf
inc
inc
bound
inc
push
adc
insb
test
outsb
lods
adc
repz
outsl
repz
jecxz
dec
xchg
arpl
mov
jl
dec
int3
jecxz
jo
in
xchg
and
ret
in
rcll
arpl
lods
sbb
fistps
dec
xchg
out
mov
sbb
cmp
test
xchg
lret
xor
mov
and
inc
sbb
pop
sub
ret
sbb
add
inc
ret
subl
mov
aam
xchg
call
repz
popf
fimull
sbb
jp
mov
and
jl
ds
gs
or
xchg
jg
sub
dec
xchg
xlat
xchg
sbb
sbb
sbb
jb
pop
test
out
in
cmp
lahf
out
cmp
imul
dec
loopne
and
loopne
iret
pop
and
pop
mov
jns
mov
xchg
pop
jecxz
call
lock
push
and
lcall
push
jle
fs
lcall
imul
loope
xchg
xchg
jns
aas
xor
ds
jge
inc
std
jp
rcll
xchg
xor
inc
test
andb
jnp
add
loope
imul
xor
mov
add
gs
lret
dec
xor
dec
xor
mov
jo
jle
fistpl
int
mov
test
fsubrs
inc
dec
insb
mov
xchg
or
test
jno
decl
lret
jne
mov
shrb
push
xchg
mov
or
test
clc
popa
mov
aad
mov
pop
mov
or
pushf
sbb
repnz
sub
xchg
mov
and
push
daa
and
and
mov
inc
or
dec
mov
inc
repnz
push
jbe
xchg
sub
daa
arpl
cmp
jne
lea
mov
mov
xchg
mov
adc
jo
test
push
adc
xchg
out
out
mov
dec
push
in
lods
cwtl
das
jns
lods
sbb
jl
mov
cli
add
adc
clc
clc
ja
inc
mov
lods
fwait
shrl
test
sbbb
inc
enter
adc
into
mov
push
jo
jp
imul
in
jmp
jne
or
dec
jae
or
xchg
in
lds
xor
inc
test
xor
int
sbb
jno
cmp
push
pop
aas
cmp
xor
ret
jbe
sbbb
insl
fildll
cmp
mov
mov
cmp
insl
out
sahf
jnp
mov
cmp
popf
sbb
addr16
sbb
out
imul
aas
pusha
mov
xchg
sub
mov
adc
fists
idivb
imul
mov
adc
and
and
cmpsl
je
out
xor
cmp
fnstcw
xchg
xor
jge
loopne
xchg
pop
scas
pop
ret
mov
icebp
jl
test
test
daa
adc
jae
jnp
adc
dec
mov
jne
sub
and
aaa
pusha
popf
sbb
clc
jle,pt
push
pop
inc
pushf
addb
or
mov
sub
jg
add
mov
sbb
adc
sahf
mov
repnz
loope
add
xchg
jle
pop
inc
jecxz
dec
sar
popa
mov
push
push
inc
test
fwait
dec
dec
pop
loop
push
mov
jle
lahf
dec
jmp
iretw
loop
mov
icebp
pop
push
pop
loopne
adc
arpl
jmp
sti
insl
xor
jmp
dec
mov
ja
xorl
jno
dec
jnp
or
adc
mov
inc
mov
ds
push
rcr
and
mov
lods
call
cmp
xlat
or
insb
or
pop
cmc
insl
mov
adc
stc
outsl
clc
lcall
clc
outsl
push
dec
sub
lods
ljmp
mov
dec
jb
xchg
mov
aaa
sbb
ret
or
push
lods
xor
xor
jnp
pushf
dec
mov
mov
cmc
inc
jno
cmc
leave
arpl
cmp
mov
cmp
test
sbb
lods
jae
inc
and
fsubr
jno
inc
int3
popf
lea
jo
cmp
fldl
stos
shl
pop
cmp
call
and
push
and
fidivrs
mov
jnp
sti
cmp
out
ret
inc
mov
jns
or
in
ja
fs
pop
dec
xor
add
sub
fwait
xor
std
les
push
sub
imul
push
ds
test
mov
mov
mov
ret
inc
js
push
pop
and
lods
xchg
mov
or
cs
aad
xor
lds
or
rcrb
cmp
pusha
inc
loop
ret
fs
leave
cmp
fsubrs
push
ds
jmp
insb
clc
mov
dec
pop
mov
lods
and
imul
insb
mov
inc
pop
dec
push
inc
xor
test
popf
sub
cmp
mov
shlb
arpl
jns
mov
jg
xor
sub
pop
xor
imul
into
or
sarl
mov
shrb
iret
cmp
mov
lret
pushl
scas
sub
enter
xchg
add
jns
pop
call
sub
cli
cmp
cmpb
mov
pop
ret
loope
aad
aaa
int3
pop
lcall
movsl
and
cmp
cli
inc
pop
jp
ret
jmp
and
xchg
jp
mov
push
daa
aaa
xchg
lcall
ffree
int
mov
aas
xchg
in
xchg
add
mov
xor
jb
and
out
xor
xor
dec
pop
in
inc
flds
stos
sub
adc
aas
out
jnp
xchg
jle
adc
push
jbe
sarb
mov
invd
cli
and
outsb
cmp
dec
jns
pushf
mov
push
cmpsl
scas
les
out
mov
adc
dec
dec
cltd
repz
rorl
push
std
hlt
jmp
push
je
jb
jns
mov
pop
mov
fnstsw
sarb
sbb
cmp
and
imul
lods
mov
or
cs
jo
jp
shll
data16
xchg
mov
mov
popf
popf
ret
jb
pusha
mov
iret
pop
cmp
out
jns
mov
inc
repnz
mov
test
mov
ret
sub
ret
loope
or
dec
mov
sbb
cwtl
jle
sbb
gs
mov
mov
loopne
cltd
cwtl
hlt
mov
ljmp
loop
loop
ljmp
sub
cmpsb
xchg
mov
mov
mov
stos
push
lret
fmuls
popa
cmc
sbb
lods
sbb
mov
pop
or
fiadds
pop
push
xlat
ss
test
mov
std
out
je
fistpl
push
movl
add
stos
lcall
inc
cli
es
adc
cli
in
mov
add
outsb
repz
xor
push
stos
or
into
popf
stos
jnp
push
movsb
xchg
dec
cmp
pop
andb
loope
sub
leave
dec
enter
insl
mov
gs
xlat
insb
xchg
in
mov
in
jns
mov
mov
iret
test
sub
shlb
cmc
adc
das
movl
imul
jecxz
aaa
fisubrs
xchg
push
cmp
or
hlt
fdivr
rcl
xchg
push
aad
cs
lea
adc
stos
fxch
inc
push
push
repnz
xor
stc
rol
adc
cmp
xchg
lock
mov
push
sub
fwait
xchg
lea
insb
insb
cltd
push
orb
test
out
mov
cld
pop
es
lret
push
push
shlb
mov
lods
faddl
out
faddl
mov
dec
jo
fistps
jp
ja
cltd
jne
or
pop
push
test
adc
sub
mov
icebp
add
mov
xchg
into
leave
ret
inc
ds
mov
into
xchg
cmp
add
mov
pop
xchg
push
jl
jg
movsl
out
add
pop
divl
shlb
aas
fadds
fwait
cmp
mov
and
imul
cmp
and
jbe
in
cld
sbb
xor
jns
pop
enter
mov
adc
xor
lods
std
call
and
and
push
imull
sbb
int3
fldl
adc
sub
xchg
sub
mov
xor
mov
and
je
inc
repnz
xlat
imul
out
xchg
push
xor
adc
clc
nop
nop
scas
bound
adc
dec
sub
out
ss
xor
ss
push
sarl
cs
mov
adc
pop
aaa
and
mov
popf
jns
insb
in
inc
ss
dec
xchg
ret
fsts
mov
lods
mull
jl
test
enterw
hlt
repnz
xchg
jnp
xchg
add
sbb
xchg
imul
mov
loop
in
hlt
mov
push
cmp
arpl
imul
xchg
xor
xchg
sub
inc
daa
leave
int3
and
enter
loop
cmp
jo
push
outsb
cli
movsl
xchg
divb
jle
xchg
dec
stos
lds
mov
sub
sbb
or
iret
lock
adc
out
mov
xor
es
rclb
fsubrs
add
hlt
ds
int
rolb
shll
and
aaa
iret
or
dec
jne
mov
in
out
sbb
jge
stos
stos
icebp
les
add
dec
stos
sub
sbb
out
push
in
mov
push
aam
mov
movsl
or
outsb
cmp
imul
loopne
popa
inc
shrl
xor
and
xchg
fsts
dec
aas
bound
data16
jp
fldt
nop
adc
aaa
cli
sbb
cmp
push
adc
das
add
fld
out
xor
scas
roll
aas
or
add
lods
nop
push
push
dec
cmpsb
xchg
sbb
mov
push
cmp
sbb
fwait
iret
lea
push
stos
fcomip
repz
fisubl
lret
and
push
rorl
mov
mov
pop
push
jmp
inc
scas
dec
cmp
adc
pop
jno
inc
addr16
shlb
push
sbbl
add
mov
mov
jo
xchg
mov
out
sub
fs
cmp
cmp
repnz
gs
sub
fisubs
cltd
inc
add
push
push
imul
scas
jo
dec
movsl
hlt
pop
add
rol
lahf
aas
in
sbbl
insl
mov
push
aas
fnsave
leave
test
mov
popa
pop
mov
insl
hlt
lds
inc
gs
aad
jge
pop
daa
pop
pop
xchg
xchg
mov
dec
xlat
cli
loop
mov
add
xor
xchg
movsb
fimull
inc
add
ret
lods
push
testl
jmp
out
lock
mov
mov
scas
sbbb
mov
xor
popa
ds
sub
cld
xchg
mov
sub
jne
sub
daa
inc
xchg
jnp
jl
fists
sub
push
aad
ljmp
xchg
cli
aam
mov
mov
adc
xor
xchg
pop
rolb
dec
ds
pop
adcb
leave
xchg
jp
push
or
ja
repnz
fsubrl
dec
jb
jmp
or
ljmp
mov
xchg
cmp
data16
ljmp
stc
cld
enter
cmp
inc
push
rcrl
lock
ljmp
ja
fiaddl
test
mov
in
mov
mov
xchg
jle
sbb
pop
ret
inc
outsb
rcrb
add
daa
testl
gs
push
rclb
lock
adc
ds
loope
or
xchg
sbb
inc
sub
adc
fcompl
test
nop
cmp
mov
scas
out
add
dec
sub
sbb
clc
test
jge
dec
add
cld
insl
adc
jecxz
xor
sbb
push
xlat
xchg
push
insb
xchg
insb
leave
cmp
scas
popa
icebp
sahf
negl
dec
ficompl
dec
fsub
adc
adc
inc
mov
mov
or
icebp
add
sti
int
jg
ret
je
inc
les
popf
imulb
xor
jns
mov
cmp
pop
arpl
rcll
test
or
jp
clc
xor
mov
fisttpll
jne
cmp
mov
lret
push
sbb
sbb
ds
mov
cmp
jns
xor
cltd
xchg
or
mov
rcrb
sti
out
inc
pop
fiadds
mov
std
in
mov
aam
xchg
jg
xchg
scas
leave
pop
lods
pop
das
fmull
add
jae
push
dec
fcompl
lret
sub
popa
hlt
shlb
push
mov
lods
dec
pop
xor
xchg
inc
push
andb
xchg
je
push
fidivs
sbb
mov
imul
cmp
ds
sub
aam
jb
jne
mov
mov
test
xchg
mov
cli
pop
or
mov
stos
mov
in
int
xor
sub
out
insl
adc
dec
xor
mov
imul
adc
xor
xor
cltd
cmpps
test
and
sbb
jnp
sub
leave
xor
mov
lret
add
and
xchg
jecxz
insl
out
xor
test
fldcw
sub
sbb
fwait
and
outsb
stos
push
stos
jmp
inc
sbb
inc
dec
or
jl
lahf
lods
dec
les
in
insb
out
test
and
sarl
outsl
dec
aas
movsl
pop
mov
push
cmpsb
pop
mov
mov
in
repnz
xor
scas
xor
cli
jae
inc
push
dec
into
adc
sbb
and
dec
loopne
inc
push
ja
xor
push
mov
mov
fcomps
mov
sti
ds
mov
lock
adc
or
rclb
addr16
hlt
cmpsl
adc
cltd
dec
dec
xchg
fsubp
jecxz
inc
mov
xchg
mov
push
ret
jp
xlat
add
jl
rcrb
je
filds
outsb
es
pop
fdivl
and
mov
int3
pop
inc
int
int3
mov
mov
mov
bound
adc
add
lahf
das
pop
clc
lods
jno
or
inc
movsl
sub
xor
jnp
mov
lds
popf
out
jae
dec
add
addl
inc
xchg
outsb
pop
cwtl
mov
mov
push
sbb
adc
pop
dec
popa
daa
lret
sbbb
mov
add
jb
mov
loope
std
jne
xor
das
mov
negl
fldcw
mov
pop
sahf
int
in
dec
shlb
jo
mov
sbb
jle
inc
or
js
lahf
mov
into
sub
push
mov
xor
cs
mov
xor
pusha
mov
movsb
push
dec
xchg
dec
mov
popa
jns
aaa
inc
out
mov
xchg
cmp
scas
jo
cmp
aad
cmp
mov
sub
test
jmp
or
xchg
shr
mov
add
stc
repz
xor
xchg
or
loope
pop
insb
jo
mov
loopne
inc
push
fimuls
dec
imul
or
mov
mov
int
push
aas
fwait
cmpsl
arpl
sub
mov
repnz
orb
dec
mov
sbb
icebp
stos
lret
icebp
jecxz
or
mov
and
adc
addl
cmp
push
pop
std
pop
popa
mov
outsl
aas
sub
jp
lods
mov
es
add
pop
fistpl
leave
mov
cmp
inc
je
ss
mov
sbb
and
mov
dec
push
cld
je
dec
jmp
pop
push
lcall
lds
mov
jg
push
sub
xchg
jb
xchg
xor
fmuls
fucom
sbb
or
push
push
mov
ljmp
insl
xchg
sbb
xchg
pop
sbb
jecxz
pop
dec
int3
push
xchg
lea
movsl
insb
xor
int
hlt
sbb
jecxz
mov
xor
mov
add
mov
aam
and
pop
sub
in
jbe
mov
jmp
sub
or
inc
outsl
out
fs
sub
adc
aaa
mov
dec
out
mov
pop
js
push
jo
pusha
mov
push
pop
out
imul
stos
xor
addr16
in
and
xor
loop
or
mov
clc
pushw
xor
int3
sbb
mov
add
add
cmpsb
lock
popf
out
bndstx
xchg
mov
sub
movsl
jp
jbe
ja
ret
lods
lock
fisttpl
mov
xor
ljmp
mov
mov
aaa
cmp
sbb
lahf
sub
cltd
xchg
gs
push
push
cmova
movsb
lret
mov
mov
cmp
adc
jl
test
pop
push
mov
mov
jl
pop
cmp
adc
in
mov
push
ret
stc
inc
ret
les
inc
xor
pop
pop
hlt
dec
and
ds
js
xor
scas
sbb
jg
sub
adc
out
arpl
imull
and
inc
and
rorl
cmpsb
push
nop
sbb
aaa
xchg
fsts
test
les
cmc
cli
mov
add
jle
xchg
enter
push
sub
and
dec
push
test
sahf
test
je
lock
scas
push
test
stos
dec
jge
mov
xlat
stc
mov
call
hlt
pop
sbbb
mov
inc
jp
inc
cmpsb
shrb
aaa
and
fld
dec
pop
sub
cli
sbb
insl
push
dec
pop
imul
fucomp
movsl
pop
and
and
pop
sbb
arpl
orb
insb
fstps
int
outsb
dec
adc
test
std
rolb
jno
arpl
clc
cld
sub
aas
or
mov
lret
inc
lret
lods
adc
ds
inc
dec
fsubs
jmp
or
cmp
push
ret
iret
test
inc
cmp
sub
in
jnp
xchg
mov
pop
enter
and
loopne
addr16
sbb
cmp
push
outsb
sbb
lcall
mov
ljmp
inc
jecxz
lock
sti
and
inc
loopne
imull
call
xchg
mov
and
adc
in
sub
dec
inc
ja
jo
daa
xchg
idiv
dec
sub
mov
fiadds
js
insb
and
fnstsw
lahf
xchg
popf
stos
sbb
dec
pop
dec
sbb
mov
jb
ds
in
sbb
or
cmp
push
mov
fdivrp
imul
repz
adc
mov
test
out
lods
sub
adc
push
test
cmpsb
add
push
js
or
jne
mov
cwtl
stos
jecxz
imul
stos
ljmp
sub
dec
mov
in
mov
inc
int3
aaa
mov
stos
pusha
xlat
pop
fists
jle
shrb
outsl
fcoml
sti
test
push
sub
notl
jae
imul
inc
sbb
inc
sbb
repnz
mov
nop
add
clc
gs
ss
mov
and
adc
loope
repz
and
push
cmp
call
pop
inc
dec
cmp
rcr
cmc
push
xor
xchg
cmpsb
dec
mov
pusha
fdiv
mov
shrb
movsb
and
fwait
mov
dec
push
jne
sub
sti
pushf
fnstsw
mov
les
sub
das
lcall
jnp
cmpsb
lods
out
das
or
xor
push
mov
pop
inc
lcall
add
jecxz
jmp
dec
daa
mov
xchg
lock
jmp
imul
push
stos
aas
mov
rcl
repz
xchg
sbb
iret
jbe
nop
aad
or
adc
lds
push
jne
xchg
lret
xor
or
adc
out
stos
jle
or
andl
cmp
xchg
sbb
pop
and
add
mov
xchg
add
inc
lock
adc
cwtl
push
sbb
mov
lods
in
xor
sub
cmc
cmp
fisttpll
pop
dec
mov
sti
fidivrl
fidivs
xchg
pop
int
cmc
jo
rorl
addb
xchg
test
xor
inc
adcb
repz
test
cmp
movsl
cmp
xchg
cs
mov
ja
cmp
jnp
and
sbb
dec
lahf
xchg
sbb
sarl
jecxz
rorb
inc
mov
xchg
pop
xchg
mov
cs
mov
stos
mov
push
jb
pop
or
imul
imul
out
and
dec
mov
cmp
xor
sub
aad
inc
pop
xchg
aam
push
jge
inc
hlt
in
pop
loope
mov
pop
loopne
dec
jae
push
test
and
mov
clc
cwtl
mov
mov
sub
fistpll
push
xor
mov
cld
ret
lods
inc
jp
out
cmp
inc
fsubr
sbbb
cmp
dec
mov
inc
daa
or
leave
data16
loop
roll
sub
jbe
rorb
call
and
mov
jno
add
ret
mov
out
into
dec
dec
inc
lock
mov
dec
cmp
fcomps
mov
adc
pop
orl
mov
mov
js
test
fldenv
push
jns
sti
jg
int3
decb
mov
out
nop
pop
cld
and
xchg
sbb
mov
cmc
sub
je
sub
ret
xchg
test
addr16
sbb
popa
xor
fisubs
jl
aam
xchg
add
mov
pop
dec
movsl
cmp
push
aaa
mov
imul
sti
ss
lea
lds
call
push
aaa
pop
scas
mov
xor
divl
xlat
out
mov
inc
mov
ss
out
mov
and
xchg
xchg
inc
cs
and
mov
xchg
arpl
mov
les
sti
mov
xor
roll
sub
jnp
inc
sahf
jg
push
lahf
stc
lds
xchg
outsb
adc
das
mov
inc
ljmp
stos
shlb
cmc
pop
mov
inc
fsubs
mov
fmull
scas
mov
mov
arpl
mov
cmp
jle
out
inc
pop
xor
out
xchg
mov
rorb
addb
imul
and
cmpsb
or
in
or
fnstenv
mov
mov
mov
mov
xchg
cmpsb
add
dec
mov
pop
and
or
insb
mov
xorl
rolb
shrb
sbb
popa
push
sbb
adc
fdivrs
fldcw
rcll
jnp
mov
das
mov
pop
inc
out
das
inc
cmp
adc
xchg
mov
fdivrs
lds
xor
arpl
loope
fcmovne
dec
xor
jnp
xor
push
adc
cmp
or
sbb
and
sbb
arpl
testl
sbb
xchg
jge
out
adc
mov
push
insl
or
mov
xor
cs
pushf
push
cmpsl
xor
xchg
ds
mov
fldenv
clc
out
jae
ljmp
insb
sbb
pop
jp
add
out
nop
add
cwtl
mov
mov
call
lods
sub
repz
ljmp
pop
cld
pop
dec
call
fidivl
test
jmp
inc
rorl
test
pushf
adc
call
cmc
js
xor
push
jb
mov
push
fisttpl
insb
mov
adc
xchg
sub
aam
jnp
inc
or
rcrb
cli
mov
mov
sahf
pushf
xchg
inc
mov
xchg
in
out
std
sub
and
lock
add
lods
aad
sbb
pop
inc
push
adc
jno
mov
es
cmp
or
jge
xor
xor
lea
mov
xor
add
imul
mov
xor
sub
mov
add
cmp
mov
mov
jg
xor
mov
sub
add
jmp
xor
add
add
mov
mov
mov
xor
add
not
and
movsbw
mov
sub
mov
xor
mov
cmp
jne
movsbw
mov
sub
mov
xor
mov
cmp
je
mov
xor
mov
sub
add
jmp
mov
mov
jmp
dec
sub
pusha
repz
or
test
and
jl
dec
pop
jl
sub
mov
in
inc
jmp
dec
pop
adcl
jo
and
or
popf
push
rorb
sub
outsb
sbb
mov
ret
push
daa
pop
inc
mov
inc
cmpsl
sbb
movsb
cmc
push
push
pop
jnp
jmp
stc
aaa
mov
inc
lea
and
or
sub
mov
lret
sbb
mov
and
inc
xchg
inc
mov
mov
dec
imul
stos
fidivrl
cli
ds
test
xchg
mov
in
sbb
insl
add
in
idivl
loopne
bswap
mov
pop
sarb
and
popf
es
mov
shl
bound
out
or
dec
andb
jmp
les
push
pop
dec
push
enter
mov
into
inc
push
arpl
cwtl
inc
and
mov
jb
or
stos
mov
mov
jp
int3
cltd
pop
pop
push
cs
mov
cmpl
scas
pop
and
jg
into
add
leave
or
les
test
push
xchg
xchg
sub
mov
arpl
add
lds
fnstsw
mov
xlat
xor
push
outsl
mov
out
jle
or
adc
adc
pop
pusha
test
sti
push
aam
and
push
pop
and
xchg
sub
xchg
stos
jmp
aas
or
fs
mov
rcll
ret
push
mov
mov
adcb
mov
pop
sub
sbb
fidivrl
pop
shll
mov
je
int
push
push
fs
xor
jae
jb
out
aaa
iret
fdivl
inc
out
std
gs
add
ret
mov
push
lcall
and
fcompl
aad
adcb
cli
call
cmpsb
push
or
cmp
xchg
mov
fwait
mov
lea
rorl
fmuls
cwtl
jnp
adc
sbb
xlat
jne
cmp
test
scas
xchg
jbe
sub
fistpll
sbb
and
add
lcall
xor
push
push
xor
adc
mov
pop
sti
leave
push
xchg
iret
cmpsl
out
cmp
popf
fnstenv
lds
pushaw
add
jbe
mov
bound
test
xchg
xchg
lods
or
cltd
pop
xor
inc
jae
mov
sbbl
push
add
push
lahf
push
pop
outsb
sbb
out
mov
test
mov
clc
out
mov
sbb
sub
jp
in
cmp
insb
pop
incl
vcmppd
pop
push
pop
lods
negb
rorl
push
adc
adc
push
fistl
arpl
jl
wrmsr
sahf
fisttpll
std
inc
mov
mov
scas
aam
outsb
mov
push
aam
sub
fiaddl
jae
out
jge
jg
cwtl
push
ja
rorl
icebp
push
pop
adc
into
mov
pusha
jle
test
mov
bts
xor
pop
int3
shlb
sahf
fists
test
jns
test
into
popa
aad
shlb
loopne
ljmp
inc
adc
leave
js
iret
mov
xchg
js
nop
or
data16
shl
movsb
xchg
push
push
sub
inc
adc
push
out
push
ss
icebp
cmc
out
jo
inc
int3
sbb
mov
daa
dec
push
enter
jb
xchg
cli
mov
pop
nop
mov
icebp
imul
sub
into
jns
test
lret
pushf
movsb
popa
push
and
fimull
shll
xchg
mov
and
adc
fwait
arpl
dec
mov
push
xor
cmp
fidivl
inc
das
andl
and
sbb
dec
stc
mov
mov
mov
lahf
push
xchg
mov
mov
test
and
sbb
push
cld
jno
pop
sub
xor
push
cli
mov
push
and
aam
push
test
pop
mov
inc
leave
xchg
pmulhw
popa
jge
xchg
lds
mov
jp
test
out
pushf
jns
stc
sbb
nop
rcr
and
adc
sbb
add
mov
and
bound
dec
insl
add
push
popf
jns
mov
orb
xor
push
jbe
lahf
fwait
jecxz
mov
push
fiaddl
insl
aaa
fisttpl
rorl
dec
jl
push
ret
mov
loop,pn
sub
mov
mov
cmpsb
mov
adc
fstp
stos
mov
int3
insl
loopne
dec
xlat
ret
pushl
xor
jo
imul
push
cld
movsb
mov
mov
orb
mov
je
pushf
push
mov
jmp
or
inc
fcom
or
inc
mov
insl
lahf
push
add
xor
mov
loopne
mov
mov
lock
adc
stos
mov
sbb
push
mov
pop
inc
mov
pushf
loop
sbb
mov
mov
stos
mov
jo
push
and
data16
addr16
inc
test
mov
add
push
lret
ret
or
dec
dec
or
cmc
sbbb
sub
ret
inc
in
fucomp
pop
push
mov
andb
ret
cmpsb
mov
jne
push
lea
stos
lahf
push
outsb
shrb
push
movsl
in
decb
fwait
mov
ret
sti
and
mov
fwait
mov
pop
ja
decb
fldenv
pop
imul
std
aas
and
int3
ret
jl
stos
push
std
popa
adc
pop
jbe
fbstp
test
data16
xor
scas
scas
sbb
mov
clc
or
movsb
or
adc
sbb
lods
add
pop
sub
cmp
fadds
inc
mov
adc
dec
dec
dec
sbb
sub
cmp
xor
ljmp
xchg
xchg
mov
add
jae
rcrb
inc
fwait
jmp
pop
outsl
sbb
popa
mov
dec
mov
aad
mov
ss
orb
ja
jae
sub
mov
int3
push
clc
sbb
pop
mov
loop
xor
mov
jo
cmpsl
fwait
pop
rcr
cmp
cmp
pop
insl
aam
pop
pop
mov
inc
mov
popl
pop
inc
loopne
fidivl
adc
dec
mov
in
xor
nop
pop
das
adc
mov
pusha
in
insl
xchg
push
xor
mov
mov
inc
testl
mov
xor
loope
mov
adc
jle
mov
jns
adc
jno
ss
js
lods
jle
or
dec
xchg
fadds
sbb
xor
pop
mov
pop
rclb
pushf
addl
out
lods
test
mov
push
pop
xchg
push
fwait
loope
int3
mov
rolb
sbb
std
std
arpl
mov
shll
insb
outsl
xor
inc
popa
stc
mov
shlb
pop
mov
mov
orb
sub
mov
aad
sub
cmpsl
pop
daa
xchg
mov
rcl
in
in
or
ds
mov
xor
test
push
mov
int3
pop
pop
pop
mov
movhps
fists
popa
test
popf
test
arpl
call
cmp
cmc
jbe
ret
faddl
add
test
cmc
test
in
outsl
mov
loopne
sahf
pusha
in
and
mov
ja
lods
in
loopne
dec
test
cmpsl
mov
outsl
popa
das
jl
lods
sbbl
mov
scas
mov
jmp
lret
enter
or
out
pop
neg
jb
xor
adc
test
in
cmpb
fsubrl
xor
sub
inc
insb
test
push
call
sbb
mov
push
clc
push
and
leave
cltd
enter
ss
mov
jne
dec
ja
sub
push
int3
xor
mov
js
in
or
pushf
mov
adc
int3
push
cmp
inc
xchg
xchg
jo
into
call
ds
and
cltd
sub
sbb
mov
adc
jmp
addr16
ror
inc
rcrl
rcll
push
mov
push
cwtl
sub
push
or
movl
mov
movsb
ds
lret
pusha
inc
shl
sub
and
xorb
xchg
mov
pop
iret
sub
mov
iret
ret
pop
or
jge
in
cli
dec
cmp
clc
cmp
xchg
outsl
and
sub
clc
stc
and
iret
pop
adc
jp
repnz
fnstenv
mov
iret
or
xchg
rcrl
mov
mov
les
scas
insl
xor
mov
pushf
mov
mov
or
push
xchg
popf
xor
fs
sub
je
int3
js
xlat
cmp
je
sub
or
inc
push
or
xchg
dec
mov
sarb
pop
or
mov
jle
adc
out
js
addl
push
hlt
int3
and
lods
std
loopne
sub
xchg
inc
xchg
mov
cmpb
mov
mov
and
xchg
iret
mov
jp
in
push
lds
sbb
and
lret
addl
ds
ja
addr16
cmp
add
mov
xchg
mov
jns
cld
testl
add
outsb
fldcw
andl
pop
enter
rcr
test
fs
hlt
dec
scas
test
mov
mov
push
add
and
lahf
add
inc
mov
aas
lret
inc
movsl
cmp
adc
adc
or
xor
divl
insb
mov
push
sub
icebp
jl
dec
or
xchg
lea
in
pop
test
pop
das
mov
jmp
je
inc
jp
test
nop
rorl
divb
xor
add
outsl
call
mov
cmp
jbe
cmp
fildl
fnstsw
cmpsb
sub
adcb
call
or
fdiv
in
mov
jo
add
adc
mov
outsb
cltd
insb
stc
push
mov
aaa
shll
scas
mov
ret
push
xchg
xchg
pop
pushf
pop
leave
adc
sub
mov
fs
jo
clc
ja
int
ljmp
push
repnz
out
jae
xchg
jecxz
in
lahf
or
mov
mov
imul
gs
jl
pusha
pop
mov
jns
rcrl
out
sbb
jne
movl
push
push
push
jnp
pop
sub
add
sub
popa
sbb
push
mov
insb
scas
push
and
fcmovb
inc
cmpsb
mov
stos
push
cmc
fisttpl
pop
push
test
xchg
pusha
out
imul
cmp
jo
stos
pop
jne
inc
rcrb
addr16
lea
xchg
xchg
mov
in
sbb
lret
pop
xlat
sbb
pop
je
push
pop
dec
and
pop
ljmp
mov
sub
mov
push
ret
pop
cmpsl
addr16
in
inc
mov
cs
xor
sbb
xor
pop
dec
pop
push
mov
dec
lahf
imulb
push
ficoms
in
jle
mov
cmc
fmuls
jnp
mov
mov
into
pop
jne
fcom
adc
cmp
fsubr
sub
sub
mov
es
xchg
jecxz
iret
inc
dec
and
xor
mov
dec
inc
les
xchg
xchg
leave
in
pop
and
imul
out
adc
stos
or
sub
add
or
cltd
dec
movl
shrb
xor
loopne
sub
push
sub
jae
sbbl
cwtl
in
shl
adc
ret
daa
xor
xor
xor
adc
cmpsl
and
or
cmp
int3
nop
movsl
cld
repz
orb
jmp
dec
jmp
mov
pop
clc
leave
pop
test
jmp
jl
sbb
cld
add
mov
lret
inc
rorb
stc
or
xchg
or
xchg
rcrb
dec
imul
outsb
sbb
sbb
sub
mov
push
leave
adc
enter
aad
jmp
mov
scas
jns
pop
push
inc
sbb
stc
in
sbb
jns
je
lea
fmuls
mov
and
cmpsb
mov
jecxz
or
test
sub
sbb
or
jbe
push
in
out
loope
movsl
cmp
jp,pt
arpl
mov
std
sbbl
push
in
push
imul
das
inc
shll
sbb
jno
and
addr16
jmp
ret
dec
sbb
scas
xchg
incl
dec
sub
pop
sti
lret
sbb
pop
mov
icebp
mov
and
cmp
push
sub
cltd
push
mov
xor
push
shrb
mov
mov
rorl
fisttpl
mov
fisubl
out
outsb
cmpsl
or
bound
mov
fs
bound
xor
sub
sub
outsb
push
lds
sbb
pop
out
jecxz
jns
je
cs
cmpsl
mov
in
inc
shlb
iret
xlat
cmpsl
sub
dec
fiaddl
imul
adc
imul
xor
and
cmpsb
jbe
cmp
xor
push
sub
jge
xchg
push
mov
mov
movsl
add
cs
fadds
sahf
dec
leave
popa
pop
cmp
push
dec
in
and
icebp
ds
nop
scas
das
mov
push
pop
addr16
inc
push
cltd
mov
or
push
cmp
repnz
orb
xor
or
push
xor
mov
daa
jg
cmp
subb
les
pushf
in
in
or
loop
push
out
and
jno
movsl
sahf
in
and
in
fdivrl
les
js
jb
add
pop
push
dec
aas
das
adc
daa
negb
and
movsl
sub
imul
xor
add
add
movsb
repnz
jle
xchg
cmc
fwait
mov
sbb
cmp
pop
inc
fwait
inc
push
or
or
adc
fwait
xor
xor
mov
xlat
cmp
jge
add
mov
decl
mov
sub
pop
mov
lcall
jp
sbb
xor
dec
inc
out
and
out
fs
cltd
push
mov
sub
aam
push
movsl
xchg
cli
daa
adc
mov
mov
dec
cltd
push
test
push
pusha
enter
dec
ficompl
outsl
fisubl
push
repnz
mov
test
xchg
inc
xchg
xor
adc
mov
push
ss
add
in
lods
sbbl
xchg
xor
sbb
inc
mov
mov
mov
sub
cmp
inc
ret
dec
jne
pop
cmp
repnz
hlt
test
xchg
sub
dec
push
add
aas
xchg
mov
leave
mov
add
fsubl
xchg
mov
shlb
push
pop
test
mov
inc
mov
rcr
add
inc
inc
fwait
cld
sbb
pop
sbb
sbb
jns
jmp
fwait
mov
repz
xchg
aad
jle
mov
fcom
data16
and
dec
adc
lock
push
into
out
ds
rclb
pop
clc
adc
lock
ljmp
cld
orl
movsl
xor
jne
jnp
fstps
mov
test
cmpsb
jge
lock
daa
cltd
or
testb
hlt
shrl
cltd
je
xlat
sbb
push
out
inc
adc
test
loope
ds
lahf
push
jge
in
adc
je
inc
cmp
mov
lahf
mov
xchg
repnz
jge
hlt
outsl
aad
repnz
jmp
aam
scas
pop
ds
out
idiv
pop
sub
jnp
cmp
clc
aaa
mul
sbb
loop
push
push
pop
mov
jecxz
inc
repz
lds
in
aaa
into
sbb
fwait
inc
in
push
add
and
int
adc
or
dec
jp
insb
sub
cmpl
cmpsl
jmp
mov
pop
mov
ret
mov
in
add
and
adc
adc
sbb
stc
pop
sbb
cld
es
adc
sub
cmp
hlt
out
enter
push
pop
faddl
push
xor
or
insl
test
ljmp
xor
fs
out
adc
push
jns
cmp
loop
insb
push
jmp
jecxz
jo
fiadds
sub
mov
cmp
arpl
push
call
sbb
test
lret
js
out
fadds
xor
in
mov
mov
into
aas
pusha
enter
leave
loopne
pop
mov
fisubs
sahf
sahf
xor
iret
test
add
xchg
push
pop
mov
jbe
dec
arpl
push
test
jecxz
xchg
js
mov
push
nop
in
and
jno
push
cmpsb
movsl
pop
iret
dec
jns
pop
fucomp
sbb
out
adc
gs
std
cmp
js
cs
retw
fsubl
ja
cmp
into
movsb
mov
add
mov
repz
push
test
mov
and
pop
xchg
mov
cmp
push
and
add
rcrl
out
push
xchg
filds
imul
jecxz
pop
push
cltd
sbb
int3
dec
aas
xchg
cmpsb
push
or
and
add
add
in
or
pop
in
lcall
sub
rcl
mov
add
in
pushf
scas
shll
mov
dec
and
inc
mov
xchg
or
lret
jl
js
je
push
fidivs
stc
movsl
lahf
add
sahf
xor
ja
adc
mov
fwait
and
mov
xor
dec
cwtl
or
loope
push
sbb
stc
scas
mov
xor
lds
cmpsb
test
sub
imul
aas
push
std
imull
pop
and
out
bound
jno
mov
stos
sbb
data16
pop
notb
test
lock
int
lahf
icebp
push
sbb
mov
lret
out
jl
popa
popa
cmp
sti
or
aad
sbb
xor
cmp
xchg
in
test
incl
jmp
outsb
rolb
insl
hlt
test
adc
fistl
outsb
aad
or
gs
jg
or
outsl
sti
push
movsl
push
daa
ja
dec
icebp
mov
repnz
shrb
mulb
dec
add
aam
xchg
xor
add
and
pop
sub
mov
cmp
add
add
adc
mov
outsb
xchg
enter
cltd
stc
adc
xchg
cmp
fwait
jns
inc
mov
push
lock
push
sbb
dec
pop
pusha
cmp
repnz
movsb
sarl
stos
xor
add
push
lret
test
and
cmp
jge
sahf
push
fstl
adc
ja
ret
scas
jge
frndint
lcall
fsub
call
iret
mov
mov
pop
mov
in
or
mov
out
fwait
xchg
rcrl
sbb
ret
dec
adc
cld
fsubrp
cmpsb
lea
stos
ret
mov
mov
dec
adc
cmc
inc
aas
and
lods
sbb
or
lahf
xor
es
jns
out
iret
add
mov
fdiv
cmp
sub
out
outsb
fcompl
movsl
sbb
inc
mov
dec
cmp
sub
xor
movsl
or
ljmp
iret
cmc
pop
sub
xchg
or
stos
je
inc
mov
aam
cmpb
ljmp
xor
sbb
jle
enter
insl
imul
mov
add
lods
fnstcw
jge
push
or
mov
dec
fnstcw
push
jnp
lea
movsl
insl
daa
mov
inc
adc
adc
loope
pop
ret
xchg
outsl
into
xchg
xchg
cltd
stos
bound
mov
mov
xor
inc
adc
mov
or
mov
or
ret
add
or
lcall
jp
pop
fs
sbb
insl
xchg
or
jne
add
mov
nop
ss
inc
jbe
cmp
repz
fwait
sbb
movsb
jo
inc
ja
sub
fidivrs
cmpsb
out
negb
pop
sbb
pop
dec
xchg
rorb
lret
addr16
fisubs
jno
bound
cmp
sbb
push
sub
cltd
add
jmp
mov
cmp
outsb
iret
repz
fsts
shl
fsubl
sub
sub
adc
adc
adc
ret
xor
jecxz
jl
test
ret
data16
jne
test
divb
fs
mov
pushf
daa
add
adc
inc
cli
add
out
mov
lock
call
xchg
adc
subb
push
xor
lds
icebp
shrl
sti
add
iret
mov
dec
imul
or
ret
fdivrs
xchg
mov
adc
jbe
or
mov
aas
jns
fcmovb
pop
lds
sbb
dec
test
out
sub
fldt
pop
jbe
xchg
dec
inc
sub
stos
lock
pop
xchg
je
xchg
sbb
out
sbb
add
jle
mov
cmp
inc
lahf
loopne
jge
or
pop
pop
mov
pop
cld
pop
movsl
data16
popa
sub
loop
xchg
or
lods
sti
ds
or
xchg
pop
mov
add
loope
jmp
xchg
lods
fmuls
or
cmp
rcr
adc
addr16
cltd
shr
mov
cmpsl
out
addb
outsb
adc
dec
pop
xlat
mov
inc
xor
fisubl
xchg
dec
mov
ficomps
mov
or
xor
xor
xchg
and
shlb
sti
mov
and
pop
bnd
ret
jp
mov
cmp
fidivrs
inc
adc
mov
mov
gs
shl
mov
ret
fldt
mov
rclb
xchg
dec
jo
adc
and
xlat
and
mov
fwait
mov
jl
sbb
jae
loop
jp
sbb
sbb
js
icebp
ja
push
mov
mov
movsb
pop
mov
out
cwtl
add
sub
jle
and
inc
xor
and
lret
mov
ss
imul
insb
add
sub
out
mov
dec
xor
mov
mov
je
jl
mov
jl
rclb
mov
pop
lock
mov
aaa
inc
int
repz
adc
jge
add
in
sub
add
pop
xorb
in
jle
cmp
add
popf
push
js
mov
mov
sahf
iret
cmp
xchg
dec
stc
push
stc
jb
in
popfw
pop
lahf
sub
cs
fldt
dec
mov
jle
jno
adc
cmc
cmp
adc
and
push
adc
sub
push
fsub
push
stc
repz
fnstcw
or
in
es
mov
and
outsl
dec
add
sbb
out
fiaddl
fwait
cwtl
stc
and
aam
add
orl
sbb
jge
test
insl
mov
scas
pop
mov
lea
ss
xlat
je
mov
into
insb
addr16
xor
lods
dec
rorl
das
sbb
add
fmuls
cmpsw
cld
enter
lahf
mov
mov
cmp
arpl
shl
outsl
aaa
sbbl
inc
push
or
jp
fistpll
cmpsl
lret
pop
xchg
shlb
pop
push
xor
inc
adc
mov
push
aad
add
fstl
xchg
stos
fisttps
cs
mov
cli
shlb
lods
mov
movsl
leave
xor
push
or
push
nop
lret
pop
mov
ds
in
call
loopne
sbb
sbb
lcall
fs
pop
lret
adc
mov
out
popf
imulb
cmp
cwtl
ficoms
xchg
pop
test
stos
mov
mov
mov
test
mov
push
stos
jo
js
stos
pop
inc
adc
mov
mov
add
in
rol
xlat
cmc
or
ja
mov
pop
je
lcall
xchg
pop
fldt
imul
adc
add
adc
jl
scas
add
insl
inc
sarb
jecxz
mov
sbb
loop
sub
xchg
fs
mov
je
orb
add
fbstp
nop
jecxz
repz
rclb
adc
mov
sbb
leave
je
inc
in
ljmp
adc
and
scas
mov
clc
ret
les
sbb
sub
cmp
pop
pop
andl
lock
repz
data16
notb
xchg
jge
lret
xchg
shl
or
mov
out
add
push
out
sbb
mov
dec
lock
lods
pop
ljmp
adc
inc
add
dec
insl
bound
cltd
jp
add
push
ss
and
mov
push
ds
jb
mov
ja
mov
inc
mov
lods
mov
shl
mov
loope
jnp
outsl
or
adc
dec
pminub
nop
inc
sub
ja
dec
mov
pop
lcall
loop
arpl
cmp
iret
dec
cmpsb
jge
cmovae
xchg
lahf
dec
pop
jbe
cwtl
or
fwait
xor
add
loopne
ja
lea
pop
cmp
mov
cvtpi2ps
pop
mov
inc
je
push
or
mov
pop
cli
outsl
mov
adc
sbb
or
adc
repz
aam
mov
stos
es
sti
out
mov
shll
mov
dec
xchg
add
or
or
cmp
leave
or
insb
and
jb
mov
cmp
add
scas
push
dec
push
jnp
jecxz
xor
mov
mov
and
fldenv
jno
mov
fcoml
lcall
xchg
iret
and
jo
repz
add
ret
in
mov
push
cmp
xor
or
shrb
or
int3
pop
dec
js
and
mov
or
xchg
push
lret
mov
loop
or
icebp
xchg
cwtl
cmc
xorb
addb
in
push
sbb
jb
insl
xchg
mov
cmp
add
inc
inc
adc
jnp
add
pop
jbe
mul
dec
in
mov
inc
xchg
cwtl
adc
sbb
dec
and
push
rcrl
or
out
jmp
jne
jp
sub
push
pushf
mov
imul
es
in
push
mov
lcall
push
push
ret
ret
repnz
fadds
sar
add
test
loope
sbb
jl
das
dec
mov
and
fs
or
ljmp
inc
iret
ret
enter
dec
lods
std
xchg
mov
mov
dec
dec
xor
cli
dec
loopne
dec
push
shr
call
mov
cmp
xchg
mov
flds
and
adc
bound
pusha
xor
dec
sbb
test
push
es
dec
addl
les
fstl
pop
imul
mov
nop
lods
push
and
mov
fcom
sub
call
cli
cmp
push
cs
mov
push
xchg
das
mov
and
hlt
push
xchg
out
mov
sbb
cs
pop
icebp
scas
aam
xchg
add
dec
mov
xchg
add
push
movsb
mov
sbb
xor
xchg
pop
adc
fistps
cmp
fs
add
ret
jmp
lret
es
sti
sub
test
pop
add
test
push
dec
dec
outsb
sub
leave
mov
mov
mov
cwtl
adc
mov
cmc
fsubrl
sbb
into
stos
sbb
dec
jp
insb
mov
mov
ret
mov
lea
jge
lock
cli
stos
popf
or
jmp
jae
mov
jbe
add
stos
xchg
push
out
js
inc
jnp
inc
and
or
mov
jle
mov
repz
enter
ficoms
mov
jp
pop
cmpsb
faddl
ret
sbb
jns
out
add
popa
shll
lea
out
movsb
mov
sbb
dec
add
cmp
adc
or
cwtl
je
andl
cmp
bound
sbbb
pop
mov
lock
xchg
jbe
mov
movsl
push
mov
das
out
cmp
nop
in
addb
sub
aad
sbb
fnstenv
and
js
divl
mov
or
sbb
dec
ja
ds
pop
sahf
push
or
lea
outsb
insl
mov
in
lea
pop
int3
lahf
mov
xor
nop
sub
dec
xchg
jne
xchg
xor
icebp
hlt
add
pop
mov
addr16
dec
or
mov
jnp
dec
testb
jmp
lock
sarl
adc
movsl
cmpsb
aaa
and
scas
sbb
sub
cli
subl
mov
fldenv
sbb
roll
aam
test
xor
enter
pop
fcoms
ret
inc
adc
sti
sbb
mov
mov
outsb
jnp
outsb
loopne
mov
xchg
xlat
sbb
fimull
imul
mov
fcoml
clc
daa
mov
xchg
xchg
in
mov
sub
lcall
movl
xor
xchg
jge
sbb
clc
cltd
dec
push
test
add
call
or
dec
jg
nop
outsb
mov
xor
and
sbb
int3
bnd
es
xor
pusha
shll
test
mov
pusha
inc
imul
mov
mov
out
xor
add
shrb
adc
push
inc
pop
xchg
decl
xor
mov
negb
or
sbb
xchg
cwtl
mov
pop
jmp
andl
stos
xchg
mov
jp
push
test
test
sbb
dec
jmp
stos
in
jge,pn
mov
cwtl
push
cmpsl
xchg
pop
mov
inc
push
adc
mov
inc
fcoms
jecxz
pop
mov
mov
jecxz
fs
xor
jns
jb
mov
ljmp
das
sahf
mov
pop
arpl
gs
add
test
xor
sti
and
add
data16
xor
lcall
cld
lea
loop
stos
addb
je
js
xor
mov
mov
xor
add
mov
mov
mov
xor
add
pop
cmp
jne
mov
xor
mov
add
imul
mov
pushl
jmp
mov
add
mov
mov
mov
movsbw
mov
sub
mov
xor
mov
cmp
jne
mov
mov
mov
jmp
mov
cmp
jne
push
pushl
pushl
pushl
pushl
call
pop
pop
leave
ret
push
mov
sub
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
pushl
push
pushl
push
pushl
pushl
push
push
push
pushl
pushl
push
call
cmpl
jne
mov
inc
mov
jmp
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
push
push
call
jmp
push
mov
xor
mov
movl
mov
mov
sub
add
push
mov
mov
mov
mov
xor
xor
mov
add
add
imul
mov
cmp
je
mov
mov
mov
xor
lea
mov
mov
mov
mov
xor
xor
add
add
imul
mov
cmp
je
mov
xor
mov
add
imul
add
mov
mov
jmp
mov
mov
xor
xor
add
add
imul
pop
pop
leave
ret
push
mov
push
andl
xor
or
inc
mov
cmpl
jne
push
pushl
push
pushl
call
cmpl
jb
movl
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
call
jmp
mov
xor
add
mov
mov
xor
push
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
pop
leave
ret
push
mov
sub
adc
jmp
xor
jg
mov
pop
ja
inc
cmp
cwtl
fdivrs
jl
pop
jl
call
fs
lock
mov
inc
das
mov
adc
inc
sbb
addr16
les
cmp
rcl
or
jecxz
push
rorl
xchg
xor
cltd
imull
push
xchg
add
jo
add
mov
push
and
inc
out
mulb
mov
fwait
xorl
ret
jo
cmc
aas
cmp
ret
jno
jmp
xor
mov
dec
stos
rclb
adc
pusha
mov
pusha
ja
mov
jns
fsubrs
mov
add
sbb
scas
inc
pop
push
push
or
idivb
push
push
mov
pop
out
mov
adc
mov
mov
icebp
adc
nop
mov
mov
push
mov
and
inc
mov
cwtl
psubq
clc
inc
pop
inc
sub
inc
push
shlb
pusha
inc
sbb
cs
inc
lret
inc
pushf
mov
shll
xor
add
inc
in
dec
aad
cmpsl
outsl
rcrb
aas
nop
ret
leave
aaa
outsl
xor
cmp
out
sbb
inc
lahf
addr16
in
mov
xchg
pop
jp
icebp
add
das
xor
je
test
inc
in
cmc
push
hlt
outsl
out
subl
jle
or
out
inc
outsl
add
in
mull
cli
cmp
loopne
pop
loop
push
fdivrl
out
mov
add
arpl
stos
cmpsl
cmp
mov
loop
fadds
pop
movsl
loop
mov
pusha
shr
repz
pop
or
aas
sti
mov
loopne
mov
lar
add
cmpsl
dec
or
subl
push
push
jne
jns
ja
scas
mov
aas
sbb
mov
nop
jp
movsb
cltd
mov
cmc
or
outsl
dec
xor
cmp
cmp
add
imul
or
xor
mov
cmpsb
mov
arpl
mov
sahf
cwtl
pusha
push
out
mov
repnz
lea
popa
xor
push
adc
jnp
push
pop
mov
in
cmp
cmpsl
loop
mov
xor
in
or
push
cmp
cmpsl
mov
mov
mov
fcmovnb
fdivr
inc
push
xchg
out
test
testl
inc
jecxz
das
rorl
imul
add
test
fisttpl
cwtl
dec
jno
es
xor
in
aaa
xor
out
je
stos
mov
daa
ljmp
sub
mov
addr16
pop
mov
loopne
mov
lea
mov
mov
and
xor
imul
gs
lret
daa
xor
aam
adc
pop
adc
das
in
clc
fwait
add
jns
das
xchg
jmp
mov
xchg
sub
or
pop
popa
es
sahf
jb
mov
xorb
push
pop
sbb
iret
push
insb
inc
call
nop
addr16
sub
in
movsl
cmp
mov
mov
pop
je
mov
sub
jmp
clc
test
in
out
sbb
dec
xchg
into
adc
jns
sbb
push
and
shl
and
lea
lcall
xchg
bound
push
imul
jmp
xor
xchg
and
outsl
or
les
jo
push
cmp
mov
jbe
mov
sbb
clc
cmp
or
mov
xchg
cmp
test
jmp
scas
test
imul
xor
in
push
mov
and
insb
push
adc
inc
inc
lea
lret
aad
and
mov
xchg
sbb
shll
addr16
mov
rolb
loopne
push
cmc
jge
sbb
mov
jmp
repnz
xor
pop
in
dec
cmpsb
imul
dec
jne
jae
pushf
adc
mov
push
mov
mov
jb
int
rorl
mov
mov
push
pop
test
insb
lahf
insl
mov
mov
jmp
xchg
push
jecxz
scas
dec
mov
add
mov
mov
fucomip
and
leave
xor
rcr
inc
and
mov
aam
mov
xchg
adc
enter
cmp
push
repnz
outsb
xor
adc
in
call
je
pop
sbb
xlat
data16
js
xor
mov
xchg
xchg
shl
test
sti
dec
lods
sahf
test
sub
lret
fistpl
insl
xchg
aaa
out
jg
push
fdivrs
fisubl
inc
pop
adc
sub
xchg
xchg
arpl
in
pop
mov
cmc
pop
into
lds
leave
sahf
add
in
pop
xchg
movsb
shl
pop
outsb
pop
push
in
in
clc
jae
fisttpl
orl
loopne
and
stos
rcr
jle
mov
jp
inc
aaa
cmp
pop
lods
cmp
les
ds
negb
xchg
in
enter
cld
cmpsb
mov
out
add
push
test
orb
pop
xchg
enter
divl
pop
jecxz
inc
loop
inc
inc
cmpsl
lret
push
lret
out
or
xchg
add
movsb
sbb
in
pop
add
jge
ds
xorb
insb
xor
in
mov
aam
push
mov
push
in
mov
push
jbe
pop
push
mov
sub
xor
mov
lea
lret
and
push
xor
subl
lret
jmp
xor
lcall
inc
sub
fcmovbe
clc
scas
xor
out
xor
fdivl
mov
pop
shrb
cmp
sahf
dec
andb
push
cld
pop
lcall
lret
fidivrs
sub
cmp
mov
imul
push
inc
test
and
add
jne
vmovlps
lods
fwait
pop
dec
leave
mov
jl
adc
mov
inc
xchg
insl
sbb
arpl
inc
mov
lods
inc
and
jne
test
xor
sub
addr16
and
cmpsb
mov
mov
inc
xchg
cmp
inc
xchg
sbb
sub
mov
outsl
mov
repnz
mov
clc
dec
add
add
push
lods
pmaddwd
push
jbe
inc
daa
cmp
jecxz
lret
xchg
scas
insl
in
jbe
cltd
fisttpll
or
cltd
dec
mov
out
mov
in
push
test
mov
movsb
loopne
xchg
jmp
add
dec
mov
mov
and
push
subl
loopne
lock
in
jne
loope
xlat
push
add
aam
jo
inc
out
push
loope
ljmp
adcb
mov
out
pop
mov
or
lods
out
cwtl
stos
cli
sti
add
mov
mov
mov
sub
subl
enter
or
das
cmp
sahf
out
xorb
and
mov
sbb
rcll
je
out
jge
xchg
cli
fsubrs
push
add
dec
lcall
out
repz
mov
xchg
into
dec
leave
orl
mov
inc
xchg
push
hlt
je
dec
jmp
xchg
cmc
cmpsl
stos
jbe
mov
pop
fldt
ss
mov
call
jmp
xor
jo
movsl
scas
push
and
adc
jl
scas
lea
insb
mov
xor
fsubrl
sbb
popf
cmc
pop
inc
pop
add
popa
dec
pop
aam
adc
and
fcom
divl
and
or
sbb
pop
cli
pop
mull
add
loope
mov
dec
xlat
fiadds
cmp
adc
push
loope
adc
test
mov
dec
cmp
xor
push
xchg
or
incl
adc
dec
push
dec
cmpsb
js
jns
and
scas
cmp
xor
fildll
bound
mov
out
xchg
sbb
cwtl
cmp
mov
scas
dec
int3
fldt
stc
xchg
ds
sub
jge
scas
shl
idivl
push
testl
and
dec
and
lock
xchg
push
arpl
adc
out
addr16
imul
popa
pushfw
loop
mov
in
xor
adc
mov
jnp
test
out
and
loopne
or
fadd
enter
lret
xchg
sub
adc
and
and
arpl
lock
stos
in
lret
and
and
or
int3
dec
mov
xchg
test
mov
aaa
jno
out
pop
xchg
sbb
dec
cltd
cmp
call
mov
enter
hlt
xlat
sahf
daa
jae
pop
mov
gs
es
mov
or
sub
inc
ja
xor
ret
iret
push
in
js
or
jne
cmp
insl
data16
push
ljmp
lock
imul
xor
sbb
push
jmp
or
lock
adc
test
roll
nop
das
push
xchg
push
pop
mov
dec
dec
mov
pop
loop
clc
add
cmp
pusha
jae
xor
fsubrs
xchg
sbb
aas
pop
xchg
std
cmova
mov
mov
mov
push
pop
jp
mov
mov
scas
imul
cmp
sbb
mov
mov
pushl
ljmp
pop
dec
jns
jmp
repnz
push
shrb
loopne
filds
imul
push
mov
xlat
inc
mov
iret
add
pushf
push
add
movsb
push
aaa
out
nop
rcll
add
and
sub
and
js
mov
xor
sbb
mov
pop
das
aas
xor
sti
js
push
mov
mov
test
mov
gs
jo
mov
incb
inc
sub
mov
jg
mov
insl
mov
fwait
fwait
push
es
popf
pop
outsl
or
pop
xor
and
xchg
push
add
push
pop
adc
add
xchg
repz
dec
inc
add
ret
adc
adc
dec
add
push
out
mov
sub
iret
mov
add
and
aaa
cmpsb
je
mov
xchg
lret
ss
and
lret
fistpl
pushf
pop
movsb
in
sbb
cmp
jge
and
loopne
mov
sbb
sbb
fldl
jecxz
iret
add
push
adc
inc
cmp
push
mov
and
cltd
xorl
lock
out
sub
outsl
lahf
adc
in
adc
lea
sub
cmc
mov
insl
lcall
dec
lods
cwtl
fdivrl
sub
mov
push
adc
mov
xchg
sbb
pop
mov
clc
add
mov
dec
pop
mov
idivb
mov
sub
cmp
sub
inc
dec
das
lock
call
mov
icebp
addr16
cld
lret
jo
or
sahf
xchg
lret
add
pop
addr16
sti
adcb
aad
sbb
jmp
out
nop
inc
adc
adc
ljmp
jmp
pop
popa
icebp
jle
mov
adc
insb
push
and
fs
not
imul
mov
xlat
sbb
cltd
popf
jmp
cmp
in
and
ss
mov
pop
fcmovu
pushf
stos
mov
aam
enter
xlat
pop
aad
mov
subl
test
adc
ss
adc
pop
fldl
loope,pn
les
loop
lds
add
stc
push
ja
in
or
xchg
xor
pop
aas
sub
pop
rclb
pusha
insb
in
xorb
int3
or
xor
es
xchg
scas
push
stos
jbe
repnz
xor
insb
subb
push
and
dec
mov
clc
dec
shrl
cli
ljmp
push
ret
lods
inc
rclb
jae
sar
sbb
xor
push
pop
or
fs
push
cmpb
push
int
pushf
and
ret
rorl
das
pop
xor
adc
js
sub
leave
push
and
add
cltd
test
sub
in
pop
es
ss
lods
mov
jle
adc
and
pop
jle
aas
dec
enter
ljmp
xlat
cmc
enter
or
and
mov
pop
adc
pop
mov
daa
lahf
add
sar
mov
or
sbb
inc
inc
sub
jb
xchg
sbb
and
push
push
cmp
imul
cltd
jno
pop
sbb
fsub
movsl
or
dec
jo
lods
ss
in
dec
lea
pop
jl
inc
enter
dec
push
popf
insl
out
jmp
outsb
sub
ja
mov
lock
lret
push
jae
mov
loope
and
repz
daa
popf
mov
add
or
add
js
shrl
xchg
pop
cmp
xchg
pop
push
cs
jno
sub
jmp
es
cmp
xchg
shlb
nop
add
jae
outsl
repnz
jge
jmp
cmp
inc
std
movsl
hlt
mov
je
mov
jbe
int
lock
dec
aas
fidivrs
cmc
addb
sahf
add
xchg
fidivrl
lret
call
cmp
in
mov
mov
xor
imul
xor
add
stc
adc
lahf
dec
dec
mov
scas
repz
and
xor
adc
xchg
dec
mov
test
sbb
xor
out
fdivl
jb
mov
sbbb
aad
dec
mov
sub
fcmovb
xor
sbb
fwait
loop
inc
inc
push
mov
sub
fldt
push
or
daa
mov
test
add
das
mov
popa
cmp
jo
sbb
out
addr16
adc
cltd
outsl
pop
add
cmp
outsl
push
shrb
orl
cmp
aad
adc
daa
lcall
xor
out
lret
cmpsl
cmp
ss
and
pop
insl
xor
mov
mov
or
xlat
jno
mov
stos
adc
xor
push
mov
movsb
push
mov
frstor
add
fld
cmp
sbb
ljmp
xchg
push
sub
jg
xor
dec
es
pop
cld
xor
fucomp
pop
mov
outsl
add
inc
adc
mov
sbb
mov
fimuls
fidivrs
mov
sub
movsl
jne
and
cmp
adc
fnsave
out
mov
or
fistl
ss
rorl
test
dec
adc
and
shr
or
xor
out
xchg
repnz
mov
rorb
sub
negl
loope
xlat
or
arpl
jp
dec
fstp
mov
jmp
xor
xchg
repnz
jg
cwtl
and
mov
mov
xor
jo
sahf
outsl
jbe
push
and
or
xorl
sub
mov
sbb
cli
cli
fcmovnu
sub
arpl
vpavgb
fidivrs
test
mov
add
mov
pushf
repnz
and
test
cld
xor
mov
sub
pop
xchg
xchg
mov
cmpsl
das
mov
aas
std
ljmp
push
or
and
or
cmp
and
xor
dec
dec
mov
scas
stc
mov
testl
push
xchg
or
test
jmp
call
mov
push
xor
sub
and
add
push
xchg
lock
dec
mov
fsub
mov
outsb
mov
push
call
or
enter
je
stos
gs
sbb
jbe
mov
mov
add
add
mov
and
cld
mov
mov
ss
shl
mov
mov
js
inc
or
cmpsl
leave
outsl
popf
outsl
sub
movsl
mov
pop
push
shl
aam
add
add
enter
ja
dec
movsl
stos
and
xor
loop
inc
test
ficoml
or
jbe
sbb
and
imul
and
out
fistpll
xchg
xor
mov
lret
imul
mov
or
pop
mov
in
sbb
iret
xor
mov
mov
dec
pop
cmp
ljmp
fadds
and
and
or
inc
and
mov
mov
loop
stc
mov
outsl
sub
nop
mov
fwait
mov
mov
ror
icebp
gs
scas
movsb
xchg
fdivp
jo
cs
addr16
mov
adc
fsubl
enter
or
test
fwait
pusha
test
jae
xchg
jmp
jp
aas
xchg
sbb
stos
mov
mov
ds
aaa
sub
les
dec
ja
dec
xor
push
cmpsb
inc
add
lods
stos
jge
bound
enter
jl
adc
xchg
aad
movsb
adc
and
les
ret
jle
push
loop
pop
lea
leave
loop
into
jns
ljmp
jp
and
push
xor
stos
ss
fwait
mov
pop
mov
lods
jne
pop
sub
sbb
cli
pop
es
xor
int3
pop
cmp
add
mov
ja
xor
shl
xchg
mov
mov
sub
push
xchg
dec
aas
push
dec
add
xor
aam
dec
loope
fcmovnb
cmp
popl
das
adc
xor
mov
imul
std
cmp
inc
pop
push
xor
add
mov
clc
aas
mov
mov
add
test
in
add
push
ljmp
scas
fcmovnbe
adc
jns
dec
push
cmp
and
icebp
adc
pop
in
inc
push
lahf
lret
fmul
mov
or
sbbl
or
cld
or
xchg
inc
sub
pop
sub
stos
bound
nop
aad
dec
and
fs
scas
pop
addl
mull
dec
rcll
leave
insb
mov
cmpsl
mov
cmp
dec
fisubs
ret
stos
and
add
inc
sub
xchg
add
xchg
test
ljmp
xchg
repnz
jg
imul
mov
jbe
inc
jp
imul
movsb
push
jne
pop
inc
sbb
jg
fcoms
mov
clc
je
scas
loop
in
xchg
pop
sbb
call
pop
sbb
mov
out
cmp
popf
fs
or
xor
sub
out
adc
or
cmp
gs
add
std
cli
xchg
inc
or
data16
mov
add
jb
je
out
add
rorb
sbb
frstor
pop
out
dec
xor
int3
xchg
inc
cmpb
nop
hlt
cmp
inc
pop
add
scas
shrl
mov
or
ja
loope
sahf
mov
sub
mov
mov
sbb
popf
add
popa
mov
pop
imul
lahf
jle
popf
mov
inc
add
imul
scas
setbe
loope
push
mov
mov
pop
movsl
icebp
fldl
negl
fs
scas
repz
daa
push
cmp
cli
sbb
sub
fdivrs
cmp
pop
mov
pop
sub
test
jne
ficoms
sbbl
js
pop
sbb
pop
push
shlb
ret
mov
rcr
add
in
dec
or
sti
cmp
aam
lds
push
mov
and
icebp
xchg
pop
xchg
xchg
push
in
lret
add
lcall
push
sub
repnz
cld
fiadds
jns
push
inc
push
push
mov
pop
mov
cmp
jmp
fnstsw
fstl
sub
cltd
insl
xorb
fistpll
cli
cmpsb
decb
fdivrs
push
mov
adc
cltd
jno
gs
aad
sbbb
ja
sbb
cli
push
daa
adc
add
daa
lret
pop
push
xchg
sbbl
sub
push
test
push
outsb
fldcw
ret
lret
shl
stos
andl
rcl
pop
jge
addb
lahf
sbb
sub
out
fldcw
notl
cwtl
sbb
mov
daa
inc
inc
push
jge
jne
dec
shrl
xchg
sar
fwait
adc
jnp
ljmp
int
popa
orb
mov
pop
sbb
jle
add
cmp
jbe
es
xchg
sahf
daa
out
mov
mov
xchg
les
xor
and
ret
sbb
pop
push
in
push
pop
jbe
xlat
push
mov
aad
idiv
or
imul
imul
pop
add
lahf
cmc
add
jle
xor
cli
push
daa
mov
adc
movsl
pop
bound
into
fcmovu
push
sbb
mov
fld
mov
gs
xchg
cs
mov
mov
sarl
mov
out
dec
sub
or
aam
shrl
out
loope
outsb
leave
imul
pusha
jp
repz
dec
negb
cld
out
sub
pop
xchg
or
test
mov
sbb
mov
ror
hlt
insb
push
xlat
dec
cmpsl
adc
sub
mov
pmaxsw
mov
lock
int3
cmp
dec
lds
je
hlt
call
andl
fnstsw
cwtl
stos
push
jmp
fnstenv
xchg
cli
das
ljmp
sub
daa
jg
mov
stc
loope
jnp
dec
adc
frstor
sarb
add
xor
dec
add
or
repz
mov
addr16
jl
inc
adc
nop
xor
std
stos
mov
outsl
iret
adc
lahf
jmp
sbb
pop
cmp
mov
dec
adc
jecxz
das
sbb
push
cmp
or
repz
add
ja
jge
jne
add
mov
sahf
arpl
orb
aad
fidivrl
lea
jno
xor
pusha
pop
jecxz
push
in
outsl
icebp
jle
sub
ret
jbe
fmull
or
cmc
jo
and
movsl
or
imul
cwtl
imul
test
mov
mov
or
and
ss
test
adc
je
push
push
sbb
aas
repz
and
push
sub
lods
xchg
mov
sahf
fstpt
pop
out
dec
push
push
inc
and
jecxz
pop
cmp
nop
jae
jo
xchg
dec
repz
out
lods
xchg
mov
cmc
or
sbb
inc
mov
mov
fcmovb
push
mov
or
or
xchg
cld
mov
mov
cld
pop
fbstp
aas
ds
mov
ret
xchg
xor
lods
and
popa
jmp
adc
rcrb
aaa
push
mulb
mov
jnp
or
xor
sbb
pop
mov
addb
pusha
xchg
mov
aam
std
sbbb
outsl
and
jle
fldlg2
std
or
loope
sub
sbb
cwtl
aas
add
dec
pop
movsb
test
stos
loope
ds
mov
and
ds
sbb
fmull
xchg
insb
xor
mov
adc
test
add
xchg
jge
leave
in
in
dec
add
ss
sbb
hlt
scas
dec
popf
cmpb
xchg
fcompl
lods
out
pop
dec
out
dec
ja
test
or
movsb
imul
fisttpl
out
mov
sub
mov
lret
daa
inc
cmc
fisubrs
inc
push
or
fwait
pop
lret
push
push
icebp
aad
and
mov
push
es
pop
cmpl
jns
pop
pop
andl
add
adc
sahf
cltd
imul
mov
pop
mov
xchg
pop
mov
pop
test
ljmp
loope
popl
mov
popf
xor
movsb
mov
jle
dec
mov
repz
shrb
arpl
jns
leave
mov
push
sub
data16
aaa
movsb
nop
mov
lods
test
sub
in
dec
xchg
or
dec
sbb
mov
shrl
popf
pop
pop
cmc
inc
mov
fnstenv
sbb
dec
lock
aaa
out
jns
je
and
push
jge
pop
rcll
dec
mov
cld
addl
push
outsl
ret
mov
or
jp
aas
mov
test
hlt
ljmp
push
dec
ud0
push
clc
cmp
jno
push
xchg
iret
sarb
mov
push
pushf
pavgw
lds
inc
mov
sbb
nop
and
pop
push
mov
bnd
xor
cmp
lcall
push
ds
pop
jecxz
ljmp
mov
stos
cmpsb
stos
jle
ljmp
hlt
or
cmp
push
mov
mov
inc
dec
push
test
sub
xchg
test
push
jmp
hlt
jae
adc
js
push
das
xchg
push
addb
inc
fisubrs
stc
mov
mov
xor
sarl
sub
jl
arpl
adc
icebp
aad
cld
jne
bound
sahf
test
test
aas
outsb
in
mov
and
dec
shl
push
xor
insl
jno
loop
push
hlt
in
dec
shl
adc
lods
xchg
clc
sti
mov
ret
lret
dec
ljmp
cli
mov
cmp
xor
mov
int
fnstcw
imul
dec
mov
inc
jle
imul
adc
xorb
icebp
inc
dec
mov
sub
aam
cli
cld
mov
jmp
xchg
push
das
fcmovnb
or
dec
or
xchg
decl
ret
imul
lret
lahf
dec
jns
hlt
jnp
leave
daa
jge
mov
pop
inc
sub
adc
mov
jmp
jl
loope
inc
mov
test
pop
rcrb
mov
sub
sub
shll
push
out
imulb
add
scas
rol
popa
cmp
xchg
mov
inc
pop
jno
in
cmp
jne
scas
das
sub
hlt
dec
push
jg
dec
cmp
dec
repnz
int3
lret
subb
mov
stos
pop
dec
imul
hlt
sbb
jb
dec
sub
loop
cmp
mov
lcall
sub
fnstcw
push
cmpsl
popa
fbstp
inc
mov
mov
decl
sbb
or
in
adc
cmp
sbb
pop
push
ret
cmpsb
ss
fs
sub
shlb
movb
lods
push
xor
xor
popa
insl
les
insl
jmp
pop
das
jp
sarl
pop
ss
out
orl
outsl
inc
test
jle
mov
icebp
repnz
mov
aas
mov
scas
js
inc
hlt
mov
loope
mov
jnp
out
lds
xor
in
xchg
push
pop
mov
sbb
adc
mov
scas
add
ds
mov
sub
mov
pop
sbb
fildll
dec
paddsw
xor
ret
clc
adc
pusha
push
pop
icebp
push
es
bnd
fistl
cld
push
adc
cmpsl
and
sub
test
stos
cmp
add
push
xchg
add
rorl
adc
divb
push
jns
pop
mov
jns
sti
out
xchg
pusha
inc
cmpsb
out
or
out
or
mov
icebp
stos
das
movsl
jnp
es
clc
inc
inc
adc
or
sub
loop
data16
sub
andb
mov
lods
inc
push
mov
enter
jle
gs
mov
lods
mov
pushf
ja
jb
xor
dec
mov
mov
loop
pop
add
sub
gs
js
sub
sub
mov
cmpsl
out
pushf
pushf
sbb
dec
aad
rcrl
mov
lret
cmc
cmp
sbb
xchg
cmpsb
testl
cmp
fs
mov
rcrb
mov
in
push
das
stos
je
sbb
xchg
scas
pop
xchg
mov
cmp
dec
add
inc
cmp
or
popl
cmpsl
lods
stos
in
test
xchg
arpl
pop
sub
push
dec
sbb
inc
lods
add
cmp
jne
call
hlt
add
std
mov
in
cmpsl
sbb
pop
pop
enter
mov
cmp
aas
cmp
dec
jae
sub
jg
mul
push
xchg
push
mov
cmpsb
aam
aaa
fstpt
jbe
les
sub
fldcw
addr16
or
aam
inc
xlat
imull
adc
push
icebp
mov
sub
rcrb
cmp
mov
mov
jns
scas
std
and
dec
or
mov
push
mov
add
push
pop
mov
adc
fmull
mov
shlb
and
or
cmp
xchg
add
add
sbb
jl
fnstsw
bswap
jbe
or
pop
xlat
movsb
inc
xchg
divb
jle
mov
ret
in
into
lds
sub
aas
icebp
imul
mov
loopne
cld
mov
inc
leave
in
inc
out
adc
adc
sahf
andl
sub
aas
loopne
cmp
lahf
push
adc
test
mov
pop
inc
enter
movsb
fisubs
fstps
or
xchg
aaa
notl
add
std
xchg
sbb
fldenv
or
ret
nop
std
mov
cwtl
jg
xchg
clc
cmp
lahf
mov
push
subl
cmp
add
lret
ljmp
repnz
pop
inc
and
int3
xor
movsl
cmp
aad
and
jnp
or
inc
push
or
push
xor
and
addr16
cmpsl
inc
sbb
push
xor
mov
cmpb
lods
push
mov
or
xchg
clc
sbbb
aad
push
out
pop
in
stos
loop
out
in
dec
adc
mov
fdiv
jnp
pop
es
in
sub
lea
test
xor
add
push
pusha
aas
in
xchg
loopne
mov
pop
stos
ret
mov
sti
out
mov
mov
xor
or
mov
nop
int3
jno
push
adc
pop
ret
hlt
jnp
arpl
rclb
cmp
ret
subl
test
or
and
inc
push
dec
sbb
outsl
fwait
xlat
int
cwtl
es
shlb
or
adc
sbb
sbb
dec
repnz
mov
cltd
je
fxch
cmp
dec
sti
jns
mull
loop
mov
sbbb
xor
ficomps
stc
adc
cmpb
xor
dec
repnz
and
cmp
pushf
xor
in
cmpsl
outsl
outsl
mov
xlat
leave
or
jns
sub
fwait
jno
mov
mov
repnz
nop
roll
mov
push
sub
cmp
push
xor
sub
in
andb
adc
pop
addr16
shl
dec
repnz
lret
outsb
inc
jo
in
rol
pop
scas
inc
push
jns
call
ja
repz
insl
cmpsb
pop
xor
mov
sub
sbb
lods
jge
je
adc
sbb
notl
lds
push
xlat
lock
cmp
inc
mov
mov
xor
adcl
mov
orl
add
or
movzwl
mov
xor
movb
lea
and
mov
mov
mov
xorl
xor
sub
addl
mov
movl
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jne
call
cmpl
jne
xor
xor
inc
mov
jmp
movl
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
andl
mov
inc
mov
cmpl
jne
pushl
push
push
call
cmpl
jb
xor
movl
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
xor
mov
decl
push
mov
mov
mov
sub
xor
inc
mov
addl
push
orl
add
jmp
movl
mov
movl
mov
movl
inc
movl
cmp
movl
jb
mov
xor
add
jmp
sub
mov
add
mov
xor
sub
mov
xorl
add
movzwl
mov
mov
sbbl
movzwl
xor
adcl
add
mov
movl
mov
inc
mov
movl
cmp
movl
jne
movl
cmpl
je
cmpl
jne
call
cmpl
jne
xor
add
dec
mov
mov
dec
mov
jmp
adc
mov
or
mov
neg
xor
add
add
mov
andl
mov
inc
mov
cmpl
jne
push
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
or
mov
xor
sbbl
add
mov
movl
movl
cmpl
je
cmpl
jne
push
pushl
push
pushl
call
cmpl
jne
xor
or
dec
mov
mov
dec
mov
jmp
xor
xor
mov
sub
or
movl
movl
andl
mov
inc
mov
cmpl
jne
pushl
pushl
pushl
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
mov
mov
movl
cmpl
je
cmpl
jne
push
call
xor
add
dec
mov
jmp
xor
movzbl
sub
mov
add
movl
mov
mov
mov
je
orl
mov
mov
andl
xor
jmp
test
jno
cmc
jo
icebp
out
insl
inc
scas
jl
inc
pop
jl
insb
scas
dec
push
mov
sbbb
pop
pop
fistpll
mov
push
xchg
mov
inc
stos
dec
insl
outsb
sub
xlat
dec
dec
sub
jg
mov
fidivrs
fsubs
pop
lock
pop
add
aaa
aam
sub
icebp
sahf
cmp
dec
cwtl
pop
jbe
clc
mov
aad
movb
call
cmpb
test
pop
into
int3
pop
std
in
loope
ret
aam
pop
cmp
outsl
daa
inc
jl
rcrl
sbb
pop
cmp
roll
repz
push
sbb
xlat
gs
sbb
dec
inc
xor
inc
fldt
in
push
scas
sub
mov
loop
fwait
pusha
popa
xor
adc
sbb
int
adc
xchg
ja
jle
or
outsl
pop
sti
daa
xor
dec
je
mov
dec
movsb
push
sub
or
adc
dec
pop
std
inc
pushl
shl
aaa
push
adc
clc
mov
addl
xor
or
jo
lods
movsl
orb
jmp
stos
outsl
das
jb
sbb
fisubrl
int3
or
arpl
xchg
sti
mov
mov
inc
hlt
sbb
stos
sarb
sbb
cmp
out
add
jge
mov
iret
pop
sahf
jne
adc
stc
and
sbb
clc
adc
adc
sbbl
xchg
or
sbb
pop
inc
neg
jg
mov
dec
pop
mov
add
sub
arpl
out
imul
pop
inc
jg
xor
outsb
or
mov
in
or
jge
lods
inc
dec
xchg
in
mov
sbb
or
push
mov
pop
push
es
or
mov
fmull
icebp
inc
icebp
fucomp
mov
cmp
movsb
cmc
mov
mov
push
pop
and
push
lahf
push
push
test
sbb
jb
aaa
push
add
loope
inc
push
enter
popa
test
or
lahf
cmp
mov
push
hlt
jae
cltd
sbb
add
test
mov
jns
jmp
into
add
xor
push
cmc
pop
mov
ljmp
cmp
stos
pop
xchg
movsl
je
repnz
xchg
or
jno
stos
les
pusha
xchg
rorb
mov
xchg
sbb
jb
xor
add
fistps
call
lock
int3
jne
inc
cltd
mov
cmp
jmp
sub
jb
push
insl
adc
push
mov
cld
in
pop
sahf
out
push
jmp
sub
pop
mov
test
loop
decb
in
dec
mov
mov
ret
add
inc
adc
sahf
and
cwtl
das
loop
loop
cmp
mov
mov
cwtl
push
mov
jl
jns
popf
int3
aaa
and
sub
jge
dec
fldlg2
jecxz
test
ja
lea
push
pop
mov
and
and
pextrw
xor
lcall
arpl
xchg
repnz
nop
cmp
ja
push
fidivl
dec
lock
out
aad
pop
fiaddl
sbb
lds
into
lods
sub
mov
sbb
mov
xchg
scas
mov
push
xor
pop
into
cmp
into
pop
xor
lahf
lods
mov
cmp
sub
les
test
iret
out
stc
push
icebp
mov
adc
adc
jo
dec
dec
mov
cmpsb
mov
adc
testl
push
push
movsb
repz
mov
adc
bound
outsl
jae
xchg
mov
in
mov
or
lea
stc
in
les
test
mov
mov
loopne
cltd
mov
popf
sarl
movsl
xor
push
pushf
add
pusha
das
mov
mov
in
vmread
jmp
mov
pop
sbb
push
in
rcll
nop
xchg
xor
lds
mov
sbb
mov
cld
pop
adc
es
or
inc
test
inc
loop
lret
in
push
mov
mov
fbstp
sub
dec
mov
pop
mov
push
inc
jl
fwait
xorb
lds
out
andb
push
sub
nopl
and
mov
mov
xchg
rcll
loopne
sar
arpl
fnstsw
mov
pop
mov
jo
push
mov
and
cmp
pop
int
add
mov
gs
aas
fsubl
insb
jmp
sub
push
sahf
jae
dec
cmpsb
test
push
pop
loop
and
xchg
faddp
jmp
pop
aas
hlt
xchg
cmp
insb
xchg
dec
lret
add
popa
aas
sahf
adc
mov
stos
sub
jb
out
cmpsb
pop
and
icebp
jno
icebp
or
add
fwait
jb
insl
push
dec
in
add
push
or
mov
cltd
pop
dec
sbb
cmp
mov
sub
sbb
test
call
mov
mov
push
push
daa
ror
mov
xchg
cltd
cmovnp
inc
rolb
and
xchg
nop
inc
gs
ret
pop
cmpb
inc
loop
jnp
jecxz
add
inc
cmp
fidivrs
mov
and
cmp
insb
roll
pop
movsl
push
lods
into
xchg
rorl
idiv
nop
loop
lcall
scas
jmp
enter
dec
mov
or
jecxz
sbb
adcw
gs
xchg
inc
mov
cmp
movsb
and
popa
mov
into
iret
outsl
jmp
inc
jl
mov
jb
mov
and
sub
repnz
mov
scas
icebp
xchg
das
lods
xor
xchg
push
fildll
xchg
pop
fcoms
movl
sbb
jg
jg
push
orl
ss
mov
xorb
adc
jnp
pop
pop
pushf
loopne
dec
cld
cltd
fsubs
das
test
std
dec
fadds
stc
pop
lret
add
cmpb
pop
aaa
or
orb
cmp
mov
add
sbb
xor
lcall
in
rorb
movsb
rolb
xchg
xchg
xor
mov
test
jle
cld
loop
adc
movsl
xchg
cmp
dec
inc
js
jp
test
repnz
mov
loopne
subb
pop
mov
stos
dec
movsb
sahf
ret
add
mov
leave
cltd
outsl
sbb
pushf
sahf
and
fs
push
addr16
rclb
ficoms
pop
jbe
popa
lds
pop
cld
cmp
out
mov
push
pop
addr16
inc
jp
mov
push
sub
pop
movsl
sbb
inc
nop
xchg
fnstsw
std
adc
pop
lahf
pop
push
or
sbb
push
jp
jno
test
dec
inc
xchg
imul
outsb
jmp
fcoms
iret
push
test
xchg
push
std
imul
out
mov
mov
dec
fcoms
stc
jl
xor
sbb
in
aad
pop
xchg
add
mov
jecxz
fisubs
push
lret
mov
aaa
sbb
dec
adc
lds
dec
jno
loope
adc
add
stos
mov
cmp
xor
arpl
mov
out
xor
stos
fwait
inc
dec
push
roll
adc
add
or
fidivs
lahf
test
mov
add
jecxz
cs
cld
roll
fcom
sbb
or
mov
mov
and
test
gs
xor
pop
add
pop
ret
sahf
push
or
shlb
xchg
rcrb
scas
or
cmp
jp
or
test
jne
popf
mov
nop
or
out
and
cltd
imul
sbb
icebp
shrb
inc
outsl
std
imulb
dec
imul
sbbl
cmp
add
test
ja
push
mov
lock
arpl
and
int
xor
mov
push
dec
scas
xchg
sub
adc
in
les
pop
pop
lock
fdivrl
mov
hlt
mov
push
push
or
dec
sub
test
dec
cs
addr16
aas
fcmovu
cld
sub
cmp
sbb
and
fwait
or
pop
mov
push
scas
loopne
push
cmp
push
dec
jg
sbb
and
js
pop
jmp
mov
imul
pop
cmc
subb
loop
xchg
gs
scas
xchg
mov
mov
dec
inc
mov
sahf
lahf
lods
inc
inc
cli
mov
lret
sbb
cmp
lods
js
adc
popf
jne
dec
mov
add
rorb
int
xchg
loop
and
nop
dec
dec
dec
jbe
jp
and
jle
pop
mov
mov
pusha
dec
inc
aas
in
xor
xor
stc
mov
sub
cmp
ret
jp
jbe,pt
mov
fsts
jp
or
inc
je
andl
push
adc
cmp
cld
repz
movsb
das
stc
fwait
jo
into
data16
scas
sub
jg
cld
mov
jne
incb
add
and
movsb
mov
pop
jno
pop
xor
xchg
and
mov
jae
push
pushf
xor
xchg
sbb
pushw
cmp
mov
push
fimuls
aas
hlt
push
insb
cld
jns
dec
xchg
mov
hlt
fisubl
testl
fdiv
and
mov
add
or
stos
lds
push
insl
and
js
jle
mov
inc
lods
cmp
inc
mov
mov
andb
rep
pop
mov
clc
sbb
push
mov
sbb
test
xor
stos
and
lock
fsubl
inc
sbb
adc
out
outsb
dec
mov
mov
into
pop
xor
cli
call
push
mov
movl
mov
stos
adc
or
mov
push
add
cmpl
jno
push
ljmp
xchg
into
push
mov
mov
cmpsl
popa
lret
xlat
cmc
and
and
sar
add
daa
jno
movsb
test
or
rcrl
mov
jae
xor
leave
sbb
ds
inc
mov
scas
je
jnp
sbb
and
inc
lahf
notl
clc
stc
gs
outsb
mov
hlt
clc
ja
cmc
mov
jmp
mov
and
push
fisttpl
lea
inc
mov
sub
inc
rcrl
lds
push
mov
stos
mov
sub
pop
out
in
pop
arpl
imul
aam
cwtl
repz
lds
jmp
std
out
add
fidivrl
icebp
adc
mov
sbb
cli
gs
sbb
dec
xor
push
cmp
cmpsb
and
jns
pop
test
fadd
popa
push
enter
rcr
popf
clc
in
fists
cmp
xchg
sbb
fiaddl
cli
and
movl
push
fs
or
inc
or
mov
and
stos
and
jmp
mov
cmc
and
mov
pop
pushf
jge
test
inc
adc
xchg
cmpsb
lods
or
bound
or
repz
push
je
jg
bnd
mov
int3
add
loop
jnp
xor
mov
push
cmp
lds
cmpsl
add
adc
dec
test
jae
aad
dec
or
adc
fdivrs
frndint
sub
and
dec
mov
push
jmp
ret
out
addr16
data16
xchg
add
mov
aaa
jne
mov
aam
push
sahf
popf
jle
roll
aam
insb
nop
push
leave
jecxz
pusha
push
dec
pop
cmpsl
fiaddl
ljmp
aaa
shl
hlt
jns
xchg
jno
push
fdivrs
cmc
ja
cmpsl
mov
push
insb
stos
and
ret
and
data16
mov
fstl
negl
adc
inc
sbb
std
aaa
adc
sbb
aam
fimull
subb
movl
test
sahf
xchg
loope
lahf
jb
inc
dec
iret
push
push
ds
insb
sub
out
mov
lret
test
and
add
call
pusha
push
test
add
or
or
popf
mov
fldt
pop
sub
jb
imul
popw
test
dec
jns
xchg
inc
pop
cmp
adc
test
dec
xchg
mov
daa
push
adcb
add
pop
dec
xlat
pop
xchg
jne
adc
ja
inc
aad
pusha
hlt
decb
push
pop
xor
clc
shl
sbb
pop
push
dec
pop
lds
push
xor
hlt
sbb
push
push
mov
cmp
xor
mov
cli
inc
test
cmpb
sbb
add
cmpb
and
sub
mov
orl
mov
insb
movsl
lea
pop
dec
jg
je
jo
jp
lcall
fidivl
out
cmpsb
sub
shlb
and
cmp
jecxz
loopne
sub
sbb
mov
xor
pop
inc
aaa
cld
mov
push
cli
pop
fs
aaa
repnz
ja
aas
add
das
lret
out
dec
sub
mov
je
or
hlt
jmp
daa
imul
outsl
inc
fsubrp
cmpsb
mov
xchg
pop
pop
jge
adc
sbb
ret
lock
neg
test
sbb
gs
stos
jg
sub
pop
idivl
mov
aad
js
xchg
cmpsb
popa
cmp
cmp
jo
rcrb
fwait
dec
icebp
loopne
faddl
jae
rcrb
call
xor
add
push
repnz
insb
sub
push
imul
jmp
add
xorb
iret
mov
ret
inc
inc
mov
mov
mov
mov
clc
mov
cld
xor
ja
adc
xchg
inc
add
cli
test
jecxz
mov
std
push
pop
xor
pop
jg
enter
gs
add
pop
nop
fcomi
xchg
mov
sti
cli
sti
mov
vcvtdq2ps
fildl
sub
fidivrs
dec
push
add
mov
sbb
sbbb
pop
aaa
imul
rcll
xor
test
ret
add
ds
sub
mov
or
xchg
cwtl
and
into
pushf
faddl
fldt
push
push
aad
mov
inc
test
cwtl
js
shll
cmp
mov
cmc
stos
mov
mov
mov
imul
les
sti
jge
inc
mov
bound
cli
add
pop
or
scas
cmp
ret
mov
cmp
dec
push
mov
pop
sbb
in
lret
mov
adc
push
xorl
fwait
test
sbb
in
add
push
fiadds
push
jno
xchg
repz
scas
sub
ljmp
mov
jno
pop
and
outsl
into
arpl
dec
xchg
rorb
idiv
adc
es
loopne
popf
dec
cmc
fisubrs
mov
arpl
jno
lds
andb
lods
xchg
mov
xor
cltd
pop
adc
mov
push
inc
aas
xchg
test
jb
pop
pop
movsl
lret
and
push
pop
cmp
cmp
daa
fsubr
mov
and
orl
pop
mov
je
sbb
pop
cli
dec
cmp
mov
fadds
ja
push
ret
jg
aaa
es
in
outsl
push
jne
aaa
push
pop
xor
add
mov
pusha
mov
mov
push
jmp
jle
mov
mov
add
mov
pushf
and
ret
xor
les
mov
in
or
sbb
div
fwait
orl
xchg
mulb
in
push
aas
outsl
xor
xchg
adc
shl
sti
mov
fcomps
push
or
in
rcll
mov
out
xchg
xchg
lock
xchg
sahf
jge
data16
movsl
inc
adc
data16
in
dec
ljmp
push
bnd
push
pop
scas
pop
cs
inc
jp
mov
ficomps
dec
daa
pop
adc
je
mov
inc
movups
fwait
bound
mov
cwtl
inc
arpl
pusha
mov
add
jmp
jbe
xchg
push
les
inc
add
mov
ds
dec
pop
sub
mov
inc
jge
repnz
mov
xchg
or
pop
and
add
pusha
addr16
inc
mov
adc
pop
shll
adc
jmp
pop
scas
pop
es
cmp
loopne
xchg
push
push
xchg
lahf
or
adc
add
mov
xchg
into
add
stos
cmp
les
es
or
inc
pop
outsb
sbbl
cmp
jge
sub
repnz
cmp
pop
fldenv
pop
sub
mov
cli
add
ret
mov
xchg
adc
jae
cmp
mov
fiadds
mov
mov
mov
mov
test
jno
push
imul
sarl
sbb
std
dec
imul
push
flds
cmpsb
add
scas
jmp
pop
mul
repz
ret
int3
cmp
cli
inc
movsl
rclb
adc
push
sub
popf
inc
cmp
addb
int3
dec
xchg
out
mov
inc
sbb
or
mov
js
mov
dec
out
add
ds
hlt
push
adc
stos
sbb
mov
das
push
add
xor
cs
mov
xor
lock
icebp
cltd
stc
call
aad
mov
daa
loopne
xchg
mov
ljmp
pusha
fidivrl
pop
pop
xor
and
mov
lret
fmul
jnp
inc
xlat
roll
cmpsl
jnp
aad
mov
add
push
xchg
mov
jnp
fisubrl
mov
pop
xchg
mov
pop
iret
aam
mov
popa
arpl
ljmp
xchg
addr16
stos
cmp
imul
and
imul
out
sbb
mov
push
cvtpi2ps
cs
push
mov
sbb
add
push
negl
jo
popa
pop
pop
imul
leave
fists
mov
test
sub
add
mov
jnp
or
adc
mov
inc
or
mov
repz
or
or
std
std
imul
cmp
xchg
pop
aad
cwtl
test
ljmp
ss
or
repz
js
lea
or
cmc
hlt
xor
xchg
sti
cmp
arpl
sub
cld
xchg
xlat
sbb
das
lea
int3
into
push
add
pushf
popf
es
mov
mov
mov
shr
mov
jle
xchg
adc
rol
cmpsl
aas
inc
sbb
dec
sub
popf
jecxz
mov
mov
sahf
push
lret
pop
andl
popf
xchg
mov
cmp
jbe
mov
mov
mov
fimull
pop
cli
in
loope
imul
mov
and
jbe
andl
out
out
add
mov
mov
ucomiss
lahf
and
pop
inc
test
rcrl
cmp
cld
faddl
mov
lods
adc
or
stos
rolb
jbe
je
mov
pop
jno
aad
cmpsl
mov
lea
cmc
inc
mov
mov
inc
testb
clc
xchg
xchg
mov
mov
mov
or
jecxz
stos
fyl2xp1
lods
loopne
cs
mov
lock
sbb
lods
pop
outsb
fisttpll
cli
les
pop
push
repnz
cmp
xchg
pminsw
ds
adc
sbb
ljmp
mov
push
leave
outsl
nopl
mov
push
jne
add
dec
add
jnp
cmp
test
mov
or
and
mov
xchg
lcall
sbb
pop
ja
into
imul
jnp
repz
lea
loop
adc
push
inc
les
pop
cwtl
add
push
ljmp
and
cmp
in
xchg
or
sub
adc
inc
mov
les
mov
popa
xor
stc
mov
enter
mov
roll
inc
sub
repnz
mov
mov
pop
bnd
pop
mov
testl
xor
dec
jecxz
mov
mov
mov
or
and
ss
in
aas
test
rcrl
ljmp
leave
xor
aam
pop
hlt
cwtl
notb
out
test
sbb
add
mov
rcrb
test
dec
dec
or
cmp
pop
je
pop
cmc
mov
cmpsl
and
sahf
mov
jno
cmp
xchg
lret
push
xchg
movsl
pop
test
cmpl
mov
push
inc
popf
and
ljmp
fidivrs
cmc
sahf
jnp
repnz
adc
cltd
cltd
inc
dec
iret
mov
imul
fisttpll
and
jle
inc
cltd
cmp
or
add
push
push
nop
push
je
xchg
daa
jbe,pn
into
sbb
inc
lret
sbb
popa
leave
ret
outsb
test
dec
xor
gs
mov
xchg
sbb
and
lret
mov
stos
lcall
pop
loop
mov
jb
test
imul
popf
or
dec
sub
andl
ret
cmpsl
add
jle
adc
add
xchg
lds
sub
jae
scas
iret
jno
jg
rclb
inc
lret
test
loop
addb
sub
test
sbb
inc
or
xor
mov
mov
push
jns
mov
xchg
mov
out
cmc
mov
mov
scas
lahf
fwait
jnp
out
adc
push
sub
insl
sub
cmp
dec
not
mov
pop
dec
adc
movsl
outsb
dec
es
push
sub
inc
cmp
and
aad
sahf
stos
mov
pop
fnstsw
movl
call
sub
xchg
push
mov
sub
ret
xor
xchg
dec
pop
jmp
mov
lods
pop
rorl
in
cmp
inc
fstpt
lret
ss
pusha
jno
sahf
jge
xor
jnp
push
dec
mov
mov
pop
xchg
adc
in
inc
cmc
dec
xchg
addr16
push
negl
xor
test
fcomps
xor
movsl
jnp
test
aam
call
in
mov
enter
imul
push
xor
inc
insl
or
lret
jp
bound
adc
sub
notb
or
popf
pop
cmp
or
inc
push
adc
mov
sbb
sub
aaa
dec
mov
xorl
mov
xor
in
leave
mov
outsb
repnz
imulb
xor
sub
fisubrl
sub
mov
cmp
movsl
pop
jmp
pop
mov
mov
loope
xchg
aaa
xchg
imul
xchg
std
push
and
inc
pushf
push
sub
sahf
lret
xchg
rol
stos
push
ret
sub
or
sub
in
fsubrs
scas
stos
sub
adc
movb
jmp
js
jns
dec
pop
jns
mov
mov
loope
movsl
sbb
aad
pusha
sbb
mov
mov
inc
mov
repz
jo
and
mov
and
pop
sub
aam
dec
xorb
jo
sbb
les
jb
sub
aas
add
mov
adc
or
push
sbb
inc
aad
push
jae
add
push
shll
movsb
push
xchg
xor
cmpsb
enter
iret
imul
xlat
popf
jle
rol
push
jl
cmp
mov
movsl
adc
dec
cld
mov
and
cmp
int3
outsb
in
cmp
sbb
loope
fistpl
sbbl
mov
mov
push
push
arpl
sub
mov
not
pop
scas
clc
sahf
outsb
adcb
out
cs
jge
xor
jae
lods
mov
outsl
lahf
shrb
ds
add
xor
sub
out
mov
mov
inc
ret
and
pop
in
loopne
pop
iret
add
shr
int3
incl
or
push
test
mov
lds
pop
inc
push
or
lods
or
mov
fcomps
mov
mov
into
push
insb
sub
cmp
lcall
dec
cmp
xor
cmp
icebp
mov
cmp
dec
in
mov
mov
popf
pusha
cs
sbb
jle
push
adc
adc
lds
aam
popa
lret
or
shlb
mov
mov
and
inc
xchg
adc
repz
dec
aad
aad
cmp
mov
out
cmc
ds
jg
mov
xchg
imul
lock
cld
jle
dec
pop
adcb
subb
xchg
xchg
push
ljmp
xor
xchg
xor
xor
adc
or
imul
je
pushf
aaa
fisubs
loopne
pop
jnp
ljmp
insb
clc
stc
cli
push
and
jae
dec
add
pop
repnz
daa
imul
daa
das
fisttps
clc
sbb
cmp
inc
test
mov
arpl
inc
sbb
sahf
int3
loope
jmp
xor
cmp
fidivl
shr
sarb
xchg
fdivp
inc
and
push
cmp
repnz
mov
dec
jmp
into
jle
sub
cmp
les
jnp
and
fisttps
cmp
sar
in
in
jne
pop
add
incb
and
pop
xorb
scas
xor
add
jl
lods
pop
mov
and
cs
pop
push
pop
in
add
loop
nop
lods
popa
sub
fwait
sub
cmp
pusha
cld
sti
mov
fmull
mull
popf
iret
imul
cli
jecxz
out
dec
mov
push
mov
gs
mov
xchg
push
jmp
inc
ljmp
ret
enter
cmp
and
jns
sbb
inc
clc
push
imul
inc
scas
cmp
mov
dec
xchg
jnp
add
addr16
sub
or
pop
cli
or
jns
stos
sub
out
fisttpl
mov
stos
mov
rcrb
push
dec
mov
js
xchg
mull
rcr
call
mov
dec
push
inc
imul
pop
mov
mov
sbb
push
jecxz
enter
scas
lock
sub
jnp
loopne
xor
sbb
jno
pusha
in
and
movsl
push
pop
rol
aam
pusha
mov
sbb
cmc
mov
xchg
push
pop
cmp
imul
sub
or
aaa
mov
into
xchg
xchg
ds
ret
mov
xor
inc
lcall
jno
stc
mov
sbb
inc
imul
or
sbb
or
ret
dec
inc
or
xor
test
pop
fadds
dec
data16
out
jle
xchg
fcmovb
icebp
pop
fs
js
aad
push
outsb
sarl
mov
dec
int
lret
enter
mov
lea
enter
imul
movl
adc
imulb
lea
shrl
sbb
imul
fisubl
push
add
sahf
pop
mov
add
mov
xchg
push
mov
and
pop
fneni(8087
push
enter
aaa
movsl
add
adc
sbb
pop
push
and
movsb
sahf
inc
push
dec
mov
in
lcall
insb
inc
pop
adc
test
jbe
fisttps
das
fcomip
mov
cwtl
push
int
sub
sbb
test
adc
addb
das
xchg
pop
mov
arpl
xor
mov
mov
iret
fiadds
jns
test
pop
mov
test
out
jnp
sub
xchg
sbb
dec
frstor
lret
fistl
dec
repnz
adc
mov
inc
jl
stos
jo
mov
jbe
repz
sub
lds
icebp
cli
dec
sbb
add
sub
push
jnp
movb
stos
movsl
std
fisubrl
lret
ret
pushf
xor
adc
sti
clc
push
mov
inc
push
sarb
sub
dec
jge
pop
pop
mov
xor
dec
cmp
push
adc
pop
cli
jecxz
shl
rcll
fidivl
out
jp
mov
cmp
sbbb
mov
push
push
test
push
sub
lahf
mov
sahf
call
jmp
arpl
mov
fsubrs
aam
lea
xchg
out
popa
pop
mov
rcrb
and
xchg
shrb
sbb
pop
cmp
pushf
imul
std
pop
push
mov
pusha
rclb
xchg
cwtl
inc
add
pop
movsl
stc
decl
out
lock
data16
mov
mov
daa
loop
fidivs
adc
lock
ret
and
lret
or
push
jge
jae
ss
lahf
andb
cmpsb
jno
stos
repz
pop
or
inc
test
fdivrp
movsl
push
scas
daa
jle
inc
push
pop
popf
je
pop
cwtl
mov
and
jmp
xor
jecxz
bound
leave
aaa
sub
mov
data16
mov
jae
mov
ljmp
pop
fiaddl
inc
dec
mov
repnz
arpl
and
sbb
jne
imul
sahf
aam
cmp
sbb
push
ds
enter
data16
imul
pop
lcall
xchg
dec
pop
imul
xchg
pop
movsl
push
xlat
hlt
mov
cmpsl
sub
jl
sub
dec
les
or
adc
idiv
jle
xlat
mov
cs
mov
bound
push
or
gs
aam
sarl
call
jmp
push
dec
or
cmp
mov
mov
icebp
es
nop
shll
stos
adc
or
mov
xchg
cmp
gs
outsl
mov
lahf
rorb
dec
bound
imul
shr
out
addr16
adc
mov
nop
aaa
iret
jl
inc
mov
mov
mov
test
pop
add
inc
in
fdivrl
insl
mov
inc
or
ds
clc
mov
jno
push
imul
mov
jnp
push
sub
js
xchg
mov
aas
or
and
push
jno
cmpb
pop
sti
scas
and
xor
andl
sub
sub
adcl
xor
addl
mov
or
mov
mov
subl
add
imul
mov
mov
andl
mov
inc
mov
cmpl
jne
pushl
call
cmpl
jb
andl
mov
inc
mov
cmpl
jne
push
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
add
mov
movl
add
or
addl
mov
mov
mov
andl
add
xorl
xor
mov
add
mov
adc
mov
orl
add
orl
and
xor
mov
movl
cmpl
je
cmpl
jne
push
push
pushl
push
call
mov
dec
mov
jmp
add
mov
sbb
mov
lea
mov
inc
mov
movzbl
sbb
mov
sub
add
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
call
jmp
or
mov
movl
cmpl
je
cmpl
jne
push
pushl
push
push
call
mov
dec
mov
jmp
addl
mov
xorl
xor
movl
add
movl
jne
movl
jmp
xor
add
sbb
mov
movl
cmpl
je
cmpl
jne
call
xor
add
dec
mov
jmp
or
sub
xor
mov
mov
sub
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
call
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
jmp
xchg
mov
aad
mov
mov
xor
ja
out
movsl
ds
jl
inc
pop
jl
xor
inc
inc
sub
ret
dec
jns
xchg
aas
daa
ret
push
ja
cmc
cmp
sbb
inc
nop
imul
test
es
movsb
mov
cmc
add
test
xchg
je
mov
popa
and
push
fcoms
jmp
xchg
shlb
xchg
sti
mov
lea
adc
jp
mov
shll
stc
pop
int3
fisttpl
mov
dec
cmc
jmp
mov
scas
jo
push
inc
nop
mov
leave
pop
and
jle
bound
or
xchg
xchg
cld
mov
cld
int
jb
jmp
fwait
stc
sub
hlt
xlat
fistpl
fnsave
je
jnp
das
push
orl
mov
in
out
gs
sar
aad
xchg
scas
mov
stos
rcll
pop
repnz
outsb
fcom
pop
jp
lds
dec
jne
js
push
push
aaa
or
adcl
mov
pop
sbb
mov
and
addr16
jmp
sahf
out
neg
sbb
xchg
stc
int
pop
movsb
sub
test
mov
xor
sbb
fdiv
rcrb
or
mull
or
adc
and
notb
and
repz
dec
mov
movsl
addr16
test
bound
rolb
divb
dec
cmpsb
test
sbb
movsb
pop
popf
imul
int3
popf
xor
les
in
gs
int
jl
adc
jno
rcrb
xor
loopne
dec
jb
out
inc
jmp
push
pop
add
loop
jne
fstpl
sbb
inc
les
negb
jno
inc
cli
sub
in
and
jmp
add
nop
adc
sbb
out
and
cmc
mov
sbb
lret
ja
fwait
leave
rolb
loope
mov
call
sbb
xor
gs
lahf
add
out
xchg
xchg
adc
and
rcr
adc
add
mov
insb
icebp
jle
sub
inc
stos
hlt
mov
ja
or
xor
mov
xlat
pop
push
pushf
mov
adc
fdivs
xchg
cmpsl
add
fs
fs
into
mov
add
jae
or
jmp
push
push
mov
pop
in
fsubl
jle
mov
clc
ja
movsl
adc
or
pop
jp
sahf
push
add
iret
sbb
or
mov
fldt
enter
mov
dec
cld
jp
mov
icebp
inc
fimuls
aam
push
pop
jl
adc
and
loop
xchg
mov
add
popf
call
adc
loop
in
sub
pushf
xchg
add
popa
jmp
xchg
call
lds
xchg
jne
fs
push
mov
mov
movsl
popf
stos
shl
cmp
add
jnp
mov
cmc
jne
dec
les
cmp
push
dec
loopne
pop
das
mov
jp
decl
mov
and
mov
cmpsl
mov
pop
or
inc
ss
jbe
dec
sub
aaa
fidivrs
add
pop
xlat
rcr
xor
jb
and
inc
mov
mov
push
fimull
cmp
add
inc
sbb
fdivrl
shrb
cmp
sti
sbb
push
ljmp
pop
cmpsb
push
mov
loop
bound
xchg
sub
imul
inc
pop
out
stc
or
sub
imul
xchg
stos
ret
ja
es
cmp
nop
mov
pushf
fs
push
cmp
add
mov
imul
xor
jo
dec
sbb
loopne
pop
jecxz
push
lock
test
dec
imull
data16
mov
fidivrl
mov
cwtl
hlt
jbe
pop
mov
mov
mov
jae
add
mov
test
fsubrl
push
push
mov
jb
push
and
sub
sbb
sbb
das
cmp
mov
push
pop
jmp
test
xor
jns
dec
push
jmp
daa
je
fidivrs
fistl
xchg
cmc
dec
in
push
sbb
sub
xor
shrl
add
in
lds
jle
call
mov
and
test
sub
push
int
xchg
mov
out
fists
sub
jne
in
cmpsb
shrl
xchg
addl
stos
loopne
aam
push
cmp
ret
scas
movsl
xor
lds
inc
cltd
pushf
jo
cmpsl
mov
call
cmp
test
xor
jmp
and
mov
or
jge
clc
and
add
xor
add
imul
out
cmpsl
mov
cmp
inc
sub
pop
or
and
nop
aam
mov
and
pushf
sub
or
pop
sbb
inc
inc
repz
pop
cmpsb
adc
sysret
outsl
hlt
dec
and
jecxz
in
push
jmp
repz
jbe
rcll
repnz
and
pop
cltd
cli
in
je
out
shrl
test
ret
in
push
insl
movl
push
pop
xchg
cmp
add
dec
lods
aas
scas
shl
sub
aas
pop
mov
xchg
loop
mov
push
movsb
add
ss
popf
xor
ljmp
sbb
push
and
repnz
in
mov
aas
push
lods
popa
fiadds
nop
sub
sbb
cwtl
xor
jae
add
sbb
rorb
mov
pop
sahf
test
add
out
add
pop
lods
pop
mov
adc
or
cmp
xchg
arpl
int3
gs
cld
out
sbbl
inc
adc
lahf
in
cltd
mov
sub
dec
mov
shlb
mov
call
dec
dec
popl
gs
sub
addr16
cld
add
push
xchg
fisubl
cmpsb
jnp
mov
mov
iret
add
in
mov
mov
mov
or
xchg
stc
lahf
lret
lret
fucomip
lods
mov
test
fisttps
inc
nop
inc
or
mov
mov
sar
loopne
fiadds
push
jge
push
cli
stc
arpl
pop
or
gs
dec
dec
stos
fdivrl
jecxz
pop
nop
and
xlat
inc
xchg
cld
or
pushf
mov
sbb
jmp
out
xor
add
xor
mov
loop
cmp
cltd
sti
mov
pop
or
mov
ljmp
dec
inc
enter
xchg
je
cld
mov
test
mov
divl
cmp
sbb
bnd
pop
cmp
xchg
lods
fisttpll
std
fildl
imul
sbb
std
or
enter
movsb
test
in
jo
or
jg
in
sub
pop
add
adc
dec
sub
xor
or
sti
mov
jecxz
mov
jl
jmp
sbb
std
daa
push
cmp
arpl
adc
xchg
dec
lock
inc
pushf
mov
cmpsl
in
or
push
mov
push
fcomps
push
xor
adc
push
clc
imul
cltd
out
aam
jo
or
push
xchg
xor
fsub
add
mov
jmp
jg
inc
jge
push
xor
loope
sub
inc
push
jle
test
je
push
rcrl
ljmp
jb
or
mov
ret
stos
aaa
push
pop
sarl
add
and
fstl
dec
cmp
dec
jp
shll
clc
push
mov
jp
xlat
sub
add
jno
mov
add
out
jb
mov
sahf
enter
fistpll
fs
inc
jo
pop
sbb
jae
xchg
adcl
inc
inc
ss
repz
dec
scas
dec
adc
xor
stc
xchg
test
aas
aaa
sbbb
sbb
js
inc
cmp
cli
in
loop
inc
xchg
push
cmp
sub
cmp
fists
mov
je
lock
add
hlt
insl
iret
push
sti
push
inc
sbb
mov
orb
jle
lret
sbb
pop
lock
cmpl
pop
xor
addl
mov
add
mov
push
dec
jne
getsec
arpl
scas
mov
and
mov
cmp
inc
enter
pop
test
dec
mov
cmpsb
data16
mov
lret
icebp
xchg
scas
jmp
jns
mov
popf
std
xchg
in
lahf
sbb
pop
sbb
push
mov
push
sbb
inc
outsl
cmc
xchg
mov
je
push
mov
adcl
jnp
add
out
sub
aam
jb
xor
jge
out
inc
scas
pop
cli
cmp
mov
mov
das
mov
lret
adc
push
decb
in
cmpl
popa
adc
xor
fdiv
pop
or
std
call
adcl
bnd
mov
sub
into
add
xchg
lods
pop
xchg
xchg
stc
and
xor
jnp
sbb
dec
xor
xor
xchg
push
or
stos
push
iret
inc
pusha
cmpsl
mov
frstor
hlt
fxch
mov
or
scas
mov
adc
pop
sub
and
mov
out
sti
push
push
add
and
in
in
xchg
pusha
les
dec
pop
popf
mov
push
adc
inc
pop
push
mov
ja
jns
mov
mov
push
sub
push
mov
addl
test
popf
test
ret
cmp
ret
xor
jns
dec
or
xchg
out
mov
xor
pop
js
dec
dec
mov
mov
fdivs
inc
xchg
mov
loope
xor
xchg
shl
lds
xchg
mov
jecxz
in
lcall
xor
mov
xor
into
push
pop
ljmp
out
les
mov
pop
leave
fwait
jle
repz
lods
lcall
pop
lea
adc
inc
adc
scas
pop
ror
aam
pop
data16
and
rcrb
inc
sbb
dec
dec
cmp
xlat
hlt
cmp
mov
push
push
dec
xor
jb
lods
xchg
sbb
leave
sub
dec
int3
pushf
out
std
push
xorb
jle
push
aas
mov
jns
ja
and
or
mov
jbe
dec
mov
movsl
xchg
pop
mov
dec
das
push
sbb
testl
lds
repz
shl
add
shrb
pop
ror
mov
sbb
xchg
lret
mov
scas
jp
add
cld
sub
rolb
out
std
fwait
cmp
adc
xor
in
mov
or
scas
mov
fisubl
sub
lret
mov
sub
xchg
gs
je
dec
mov
imul
in
in
jmp
faddp
lea
stc
xlat
xchg
inc
pushf
pop
loope
in
testb
je
cmpsb
rcrb
orl
push
xor
mov
push
mov
notl
jp
mov
sbb
and
mov
aas
ret
lcall
in
or
or
popf
cmp
xorb
jge
mov
or
inc
xchg
push
out
mov
faddl
mov
imull
or
or
movsb
and
leave
sbb
sub
inc
mov
pop
fisttpll
adc
into
leave
shll
pop
jns
dec
dec
and
arpl
xor
lods
stc
and
cmpsb
mov
mov
mov
inc
arpl
mov
mov
push
sahf
jo
push
imul
lea
jb
adc
dec
push
or
add
ds
fdivp
lret
pop
mov
xchg
xchg
dec
es
rclb
mov
or
stos
and
stc
rcl
and
mov
inc
xchg
sub
xchg
mov
cwtl
cmp
jle
nop
mov
pop
adc
into
jecxz
push
dec
shl
lret
inc
lret
ret
sarl
mov
sub
cmpsl
ja
inc
popf
or
daa
movsb
lret
mov
ds
mov
cmp
hlt
jp
in
stos
negb
je
inc
aaa
sub
adc
xlat
bound
fsub
pushf
and
mov
cmp
jb
pop
adc
and
scas
addl
and
movsb
or
mov
not
mov
mov
test
dec
push
aam
xor
aas
inc
jns
fimuls
cwtl
add
outsb
xchg
pop
push
or
imull
cmpl
push
insl
mov
inc
cmc
push
mov
mov
pop
xchg
mov
sbb
jmp
mov
mov
cmp
cmpsb
scas
ret
xlat
pop
fidivl
pusha
stc
outsl
mov
das
stos
push
and
sub
int3
loopne
xor
pop
fdivrl
inc
pop
pop
pop
mov
adc
sbb
shrb
pop
cmpsl
mov
aaa
inc
add
push
sarb
sbb
jns
adc
xchg
ret
and
dec
aaa
dec
dec
cmpsb
and
sub
dec
or
sub
sti
push
mov
xor
cmp
adc
into
mov
divb
das
sub
scas
in
out
cmp
add
adc
nop
fstpl
outsb
popa
cmp
pop
mov
pop
cmp
xor
adc
and
adc
pop
jecxz
adc
cmp
cltd
lret
sub
xchg
push
adcl
inc
inc
sar
cmpsl
je
cmp
sbb
add
lock
dec
mov
xorb
inc
cmp
hlt
out
test
gs
push
adc
sbb
outsl
or
jecxz
test
push
mov
call
push
aad
or
push
mov
sbbl
pusha
cld
pop
sahf
ja
sahf
imul
xlat
movb
inc
popa
xchg
add
fst
sbb
push
mov
rorl
pop
add
sarb
cs
imul
dec
pusha
mov
and
rcll
in
sbb
mov
movsb
push
shlb
inc
sbbb
pop
into
pop
hlt
inc
pop
inc
std
cwtl
scas
out
mov
lods
add
bound
lock
sub
inc
mov
inc
pop
pop
test
inc
outsl
mov
aad
add
scas
cmp
out
lahf
xor
add
rcl
movsl
test
jbe
xchg
mov
fiaddl
ss
adc
in
aaa
addr16
xchg
in
push
mov
and
mov
movsb
loop
movsb
adcb
xorb
xor
stos
jae
pop
pop
fdivrl
int
subl
sub
fnstenv
sbb
jae
addl
icebp
dec
rolb
or
sbb
xor
push
dec
fcompl
es
or
adc
inc
test
mov
std
xchg
sub
and
cmp
inc
ret
aas
out
into
bts
rorl
adc
and
mov
sub
push
test
mov
lods
lds
divl
mov
sbbb
outsb
aas
pushf
jl
mov
pop
popf
nop
pop
xchg
inc
lret
jle
leave
mov
mov
or
adc
push
jle
cmp
cs
in
cwtl
loope
jbe
dec
xchg
lds
adc
sahf
inc
int3
sub
repz
mov
rolb
dec
stos
lret
popa
xor
mov
filds
sahf
fs
dec
push
clc
jmp
aaa
repz
aad
jl
mov
xchg
add
nop
bound
and
data16
in
repz
out
add
ret
test
add
lret
jle
mov
pop
pushf
mov
xchg
lcall
stc
loop
jge
ds
mov
sub
gs
bound
sbb
push
jmp
sbbb
adc
les
dec
or
mov
push
mov
xchg
andb
adc
sub
bound
stos
xor
or
in
movsb
aas
mov
nop
adc
fbld
div
dec
mov
push
pop
xor
shll
and
daa
ss
sbb
xchg
inc
mov
inc
add
xchg
xchg
push
jecxz
pop
or
push
std
or
fxtract
sbb
mov
adc
leave
je
mov
inc
and
and
xchg
lods
inc
jge
adc
cmc
ljmp
push
in
adc
lcall
dec
mov
cltd
inc
adc
adc
inc
inc
push
pop
jbe,pn
daa
fsubr
pop
out
cltd
pop
dec
mov
insb
mov
mov
or
adc
and
cmpb
cmp
adc
mov
sub
imul
shrl
clc
or
or
push
lret
sarb
sbb
lret
lahf
loop
add
jmp
data16
incb
push
std
lock
outsb
popf
jne
call
in
mov
adc
mov
jmp
test
mov
inc
push
movsb
mov
pop
and
lods
mov
dec
mov
and
int
out
xchg
scas
or
stos
mov
lret
push
pop
sbb
scas
jns
mov
scas
enter
dec
pusha
xor
adcb
mov
xor
je
sbb
scas
jecxz
ja
cmp
xor
sbb
addr16
mov
fists
addb
movsl
movsb
xchg
jmp
cmp
test
out
adc
mov
mov
data16
inc
js
gs
scas
movsl
stos
out
dec
addr16
fs
mov
popa
dec
nop
lcall
mov
ja
adc
js
jg
bound
mov
aam
decl
popl
lods
cmp
inc
std
daa
lcall
movsl
icebp
scas
cmpl
les
xchg
jno
jecxz
shll
adc
cmp
data16
aaa
sbb
mov
in
out
das
jo
mov
nop
cmp
mov
jle
sub
mov
mov
cmp
in
jg
push
sub
and
jl
jbe
fwait
pushf
jge
xlat
cmp
inc
fsubrp
data16
jne
and
jge
sub
icebp
dec
sti
or
dec
call
push
lods
sbb
cwtl
xchg
loopne
stos
jbe
push
je
aam
mov
repnz
mov
scas
shlb
mov
push
movsl
xchg
imul
inc
enter
add
mov
loope
out
ret
test
add
in
xchg
adc
in
cmp
cmp
cmp
rol
fdivl
lods
adc
aaa
insb
test
pusha
xor
sarb
enter
inc
imul
lds
xchg
lds
push
bound
adc
push
lods
mov
xchg
ljmp
nop
push
mov
inc
in
fisttpl
jecxz
xor
pop
sti
xlat
psllw
aaa
pushf
cmpsb
sbb
push
jecxz
pop
movsb
outsb
push
inc
push
ljmp
lods
mov
lahf
cmp
jne
push
add
push
adc
outsl
in
mov
xorps
inc
adc
add
cmp
leave
mov
xorl
and
jns
inc
out
dec
or
into
dec
push
mov
inc
mov
push
mov
icebp
pop
jnp
sahf
sbb
ds
sbb
mov
inc
mov
mov
es
bound
mov
out
aaa
addr16
or
sub
loopne
mov
mov
testl
and
out
pushf
shll
xchg
mov
jle
test
ljmp
jb
loop
les
pop
xchg
pop
push
inc
pop
adc
cmp
cli
ret
jecxz
xor
sti
sbb
fimull
mov
jae
movsl
mov
lahf
push
pop
movsl
repnz
pop
inc
xchg
adc
pop
add
aad
ret
sub
lret
int
xchg
nop
dec
push
pop
lahf
push
jno
xlat
pop
or
or
jbe
xlat
jns
mov
lcall
xchg
jge,pt
int3
aad
xchg
mov
mov
dec
fnstenv
dec
and
xor
adc
test
sbb
xchg
jmp
aad
jns
cmp
addr16
shrl
scas
vrsqrtps
lods
inc
loop
out
jmp
lcall
and
mov
mov
mov
push
sub
repnz
popa
fdivrl
addr16
pop
movsl
rcll
mov
scas
inc
pop
enter
adc
popf
or
add
notb
lahf
jno
xlat
es
fadds
loop
hlt
and
jb
test
in
xchg
into
add
outsb
das
sub
cmp
sbb
rorl
jg
outsl
inc
rol
add
mov
jge
or
rorl
mov
fs
sub
mov
jb
lods
mov
or
pop
sbb
pusha
mov
inc
paddusb
pop
fs
dec
mov
adc
and
sbb
mov
adc
test
lods
es
cmp
mov
cmp
outsl
mov
xchg
test
sbb
sub
xlat
pushf
adc
aas
cmc
jl
cmp
call
inc
test
insb
xor
add
xchg
jg
cmp
outsl
pushf
xor
and
pop
out
iret
mov
out
xor
test
sbb
xchg
cmp
fisubrl
sti
ret
int
inc
push
pop
xor
pop
add
int
pop
inc
and
lods
fldpi
push
jmp
in
push
push
div
test
or
lods
test
and
push
cmp
dec
xor
popf
xor
lahf
cmc
sub
test
jge
aas
push
stos
rcr
jae
or
jne
dec
add
mov
cmp
mov
into
xlat
out
mov
jns
sbb
popa
xchg
adc
pushl
ljmp
xor
data16
int
cltd
fisubrs
jl
cld
shr
xor
pushf
xchg
test
dec
scas
dec
ljmp
jb
cltd
xchg
dec
pop
xor
sub
jp
roll
pusha
sbb
das
jno
cmp
jg
mov
jle
inc
in
and
mov
pop
mov
and
cmp
ljmp
xchg
adc
lock
pop
mov
scas
fldt
xor
mov
aaa
fiadds
and
repz
and
xor
sub
pop
arpl
out
push
clc
fsubs
jmp
shll
pop
mov
cmc
aas
js
and
enter
pop
iret
cmp
mov
addb
cmp
iret
sub
enter
ja
pop
out
xchg
int3
pop
mov
test
mov
dec
pop
nop
insl
cmp
loope
cmp
sti
adc
int3
xor
jno
xchg
xchg
cli
and
sbb
cli
mov
mov
lods
jns
test
dec
add
insb
lods
pop
pop
mov
or
mov
cmp
daa
pop
xchg
xlat
sub
pusha
dec
sbbl
cmp
xchg
scas
into
mov
or
ja
cltd
stos
cs
or
xchg
cltd
jle
and
mov
out
fwait
cmc
pop
es
movsb
adc
jne
lods
sti
mov
jnp
xor
into
dec
cmp
dec
push
dec
and
cld
into
inc
fnstenv
std
push
aam
pushf
or
pop
pop
inc
lods
cmp
sub
mov
scas
adc
es
pop
dec
sbb
aad
inc
test
addr16
call
addr16
je
out
mov
call
fmuls
jle
sbb
push
mov
inc
cwtl
pop
inc
fcoms
pop
daa
add
scas
fisubrs
ljmp
outsl
ss
jecxz
xor
cmp
call
out
mov
outsl
aad
imul
cld
mov
sbb
in
mov
out
cmp
mov
fs
pop
mov
xchg
mov
cmc
push
rcl
fldcw
pop
jns
fs
add
xor
lds
cmp
xchg
and
repz
adc
mov
cmp
imul
xchg
ficoml
add
enter
std
pushf
iret
test
xor
fldt
notl
pushf
int3
xor
sbb
dec
test
or
push
cs
pop
sarl
mov
add
sub
push
mov
loope
enter
and
or
inc
enter
fidivrl
and
movsb
push
pop
jnp
outsb
cmp
add
cmp
mov
das
insl
fs
push
leave
out
dec
roll
jae
push
sub
sbb
pop
xor
cltd
and
jno
icebp
or
ss
xor
mov
es
or
mov
sti
bound
mov
ret
les
inc
jle
sub
mov
out
cmc
loope
push
or
test
testl
cmp
inc
inc
cltd
test
loopne
in
mov
or
or
cmpsb
and
and
mov
lock
mov
adc
mov
out
ljmp
xchg
cmpsl
mov
adc
call
lea
adc
js
daa
adc
imul
pop
dec
ljmp
outsb
shl
pop
jno
sbb
and
mov
mov
loope
in
push
adc
ret
jl
cmpsb
cmp
jg
ret
cmp
in
adc
jne
cmp
dec
leave
mov
mov
repnz
loope
push
adc
cltd
idivl
dec
mov
xchg
dec
imul
cmp
loop
fwait
loope
sahf
xchg
and
mov
or
add
js
shlb
out
push
jl
jns
inc
inc
sub
xchg
out
sub
sahf
insl
mov
mov
xor
fisubrs
adc
jae
imul
mov
inc
lea
jnp
sbb
lock
movl
sub
adc
sub
call
popa
pop
mov
insl
xchg
in
sbbl
push
outsl
pop
adc
or
jbe
inc
pusha
jae
push
add
mov
jecxz
call
cmp
inc
nop
push
sbb
push
mulb
jne
jl
aas
test
push
roll
ljmp
dec
push
jae
stos
rcrb
repz
jo
scas
lcall
sbb
stos
dec
testb
jno
mov
loope
xor
xlat
push
je
addr16
inc
push
xor
xchg
cmp
into
leave
fcomps
mov
loopne
loopne
cmp
or
gs
and
push
dec
mov
test
jg
lock
mov
mov
or
push
fidivrs
int3
clc
mov
add
loop
gs
adc
jno
dec
gs
loop
and
stc
fs
in
cmc
and
mov
rcll
pop
pusha
mov
fadd
cltd
inc
loop
and
call
adc
inc
dec
addr16
mov
or
sub
movsl
cmp
mov
mov
lods
adcb
aas
push
gs
mov
sub
pop
mov
jle
mov
movsl
jb
cmp
das
daa
pop
push
pop
adc
mov
pop
ret
lret
fbld
outsl
setnp
jg
dec
out
scas
out
icebp
cwtl
ret
sub
xchg
adc
pop
callw
fidivrl
inc
push
dec
repz
add
ror
stc
pop
shr
xchg
loope
out
mov
daa
hlt
inc
xor
or
leave
add
shl
shll
addb
notl
stc
and
mov
jg
sbb
mulb
mov
xor
nop
hlt
orl
lret
fcoms
stos
sti
jl
shl
pop
xorl
cmp
dec
push
and
xchg
aaa
cmp
mov
fcomps
lea
xor
test
lcall
and
xchg
adc
sub
popa
dec
xchg
in
hlt
fsqrt
mov
and
jmp
das
adc
sbb
sub
fldl
inc
cmp
fwait
adc
lea
adc
pop
adc
mov
cwtl
mov
add
dec
jno
mov
arpl
pop
sbb
sbb
sub
fwait
xchg
add
xor
mov
push
call
fcompl
pop
dec
add
sub
loope
cwtl
adc
fimull
aaa
clc
int
push
std
xchg
loop
adc
cs
pop
sbb
dec
sbb
sarl
inc
dec
jb
shll
mov
lock
imul
mov
jbe
scas
xor
mov
cmp
mov
ret
lahf
inc
sbb
arpl
je
sbb
and
mov
lods
xchg
in
mov
jns
out
test
arpl
dec
test
pop
jl
or
popa
sbb
or
ds
out
and
repnz
jp
xchg
mov
cmpsl
mov
mov
enter
test
imul
iret
mov
movsb
mulb
push
jl
xor
sti
out
adc
lea
xchg
jne
movsl
sub
in
js
dec
clc
bound
sarl
and
cs
loop
push
and
out
push
or
add
data16
aaa
add
mov
pop
or
outsb
inc
mov
dec
fisubrl
iret
xchg
pop
adc
andb
push
fidivrl
add
repnz
test
jbe
pushl
enter
test
dec
mov
push
dec
xchg
mov
or
mov
sbb
loopne
inc
fbld
pusha
adc
ss
lcall
clc
push
das
push
mov
arpl
test
mov
imul
pop
stos
push
shll
jg
xor
mov
mov
sbb
or
sub
jmp
out
mov
popa
xorb
dec
fiadds
dec
push
xor
divb
lret
movsl
mov
and
gs
xchg
test
pop
sub
pop
data16
push
add
mov
dec
xchg
fs
fisttpl
add
bound
out
dec
into
jne
xor
dec
mull
mov
loopne
loope
cmp
and
pop
add
xchg
or
xchg
call
adc
pop
dec
lret
nop
scas
mov
in
mov
pop
sub
stc
cmp
pop
add
call
push
sbb
xlat
rclb
pushf
xor
lcall
cmp
sub
es
das
push
stos
and
roll
push
in
pop
inc
lea
inc
arpl
dec
sub
jnp
mov
or
cwtl
dec
leave
loope
mov
push
jl
rol
test
pop
pop
mov
pop
push
mov
ljmp
es
sbb
int
cmp
lock
out
lods
push
movsb
pop
jnp
aaa
cmp
addb
int
xchg
sahf
leave
fwait
dec
int
in
jecxz
push
loope
push
mov
jbe
fcom
fists
mov
adc
pushf
stos
lahf
popa
pop
mov
add
push
and
cmp
mov
jge
lods
ja
stos
xor
daa
scas
inc
leave
or
xchg
cmpsl
jmp
jmp
cmp
sub
mov
fmull
mov
push
adc
lods
mov
pop
xchg
mov
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jmp
inc
mov
ss
test
and
clc
push
jge
inc
pop
jl
cs
je
push
movsl
in
sbb
or
xor
push
mov
call
pop
adc
and
sub
xor
jle
stos
mov
repz
iret
mov
mov
rolb
jns
sbb
dec
jl
ja
dec
pop
int
jno
shll
sbb
mov
sub
loopne
cmp
insb
sbb
sti
cmpsl
lods
addr16
bound
out
loop
mov
in
mov
push
adc
movsl
mov
aad
cltd
fld
fcoml
loopne
cmp
xor
ret
pushf
loopne
fs
xchg
fidivrs
fsubrl
pop
mov
int
fistpl
imul
inc
movsb
cmpsl
lock
lock
and
inc
into
scas
xor
mov
add
notl
out
sbb
mov
inc
jmp
loop
fldl2e
enter
shrb
jbe
cld
divl
sub
pop
sub
shll
pop
mov
mov
repz
mov
imul
mov
stos
mov
repz
mov
outsb
and
cmpsb
mov
or
das
inc
fwait
gs
xor
sub
xchg
push
push
insl
xlat
mov
repnz
dec
dec
mov
push
jb
xchg
inc
pushf
xchg
push
inc
lea
int
daa
sub
xor
fwait
xor
daa
dec
repz
dec
rcrb
in
jmp
out
clc
mov
enter
xchg
test
cmp
push
lret
jae
cmp
and
push
mov
cltd
out
orb
sub
cli
xor
pop
cld
push
xchg
xor
mov
sbb
xchg
adc
out
dec
stos
dec
add
scas
ret
out
push
aaa
inc
pusha
in
aam
push
mov
sbb
jne
pushf
xchg
ret
sbbl
adc
scas
mov
addr16
sti
dec
mov
or
fs
cli
pop
ret
mov
scas
pop
xlat
enter
and
aam
xlat
ljmp
ds
ds
test
and
mov
lods
pop
xchg
hlt
push
push
push
inc
add
or
mov
scas
cmp
jmp
lock
mov
xor
jno
idivb
mov
adc
jb
lret
js
cld
into
add
push
and
popf
lret
mov
andl
pop
jne
insb
aam
sbb
jge
pop
cmp
cmp
jle
xchg
shrb
cmp
mov
frstor
test
mov
jae
dec
fsubrl
mov
rol
mov
popa
xchg
std
fninit
repz
push
xchg
dec
daa
push
es
in
mov
mov
insl
aad
int
lahf
cwtl
jne
mov
movsl
int
rclb
mov
icebp
int
push
xchg
int
loop
pop
out
fwait
or
pop
nop
cmc
imul
andps
fsub
adc
or
lds
xchg
add
xchg
into
mov
xlat
jb
test
cmpsl
mov
idivb
and
lods
add
shrb
mov
inc
jnp
fcompl
pop
cmpsb
push
push
and
jg
mov
xor
cmp
fcmovu
sub
mov
inc
dec
lret
push
dec
mov
push
mov
leave
stos
jnp
fsubl
repnz
roll
insl
scas
push
xchg
or
insb
mov
lock
pop
fnstenv
cmp
cmp
push
xor
pop
cmp
out
outsb
nop
cli
in
jle
pushf
loope
inc
sub
adc
xlat
ss
dec
cmp
into
jae
cmpb
test
into
xor
pop
xchg
mov
xchg
gs
or
mov
iret
sarb
cmpsb
popl
sbb
mov
inc
outsl
out
adc
pushf
stos
lods
pop
gs
jnp
xchg
in
xchg
cld
in
xchg
out
dec
sub
push
push
xchg
mov
icebp
ss
sbb
sub
out
aad
dec
pop
fstl
fidivl
mov
cs
ud2
ja
sub
cmc
add
push
int3
jl
clc
movsl
sub
adc
test
addr16
test
aas
into
movsl
xchg
or
push
jg
xchg
and
adc
into
fistps
lds
jns
adc
fdivrs
arpl
xchg
int
and
cmp
cmc
adc
out
rolb
fldt
das
mov
push
and
fs
or
xor
push
lahf
dec
push
nop
adc
scas
push
aas
imul
stc
inc
inc
ret
pop
pushf
and
push
mov
jo
push
cmpb
or
lods
jnp
call
pop
adc
push
adc
fmuls
sbb
lret
inc
dec
pop
and
dec
int
call
sbb
fucomi
cwtl
outsb
pushl
mov
dec
dec
movsb
adc
jecxz
mov
popf
adc
inc
aad
and
xor
and
test
xor
iret
clc
or
lcall
mov
lret
mov
es
jge
adc
dec
std
add
out
cmp
xlat
inc
lret
xchg
loope
xchg
jb
insl
lock
dec
loopne
adc
xchg
ret
icebp
cmp
jno
push
rolb
push
xchg
mov
inc
rolb
xorb
mov
cmpsb
js
sub
idivl
movsl
out
mov
inc
ja
subl
mov
inc
jmp
mov
sbbl
bound
mov
decl
in
and
inc
sub
pop
ss
loopne
pop
mov
fists
add
vmovntps
mov
cmp
call
cmp
hlt
jecxz
jecxz
mov
pop
mov
mov
lock
jmp
jl
movsb
mov
xor
int
mov
cmpsl
or
mov
int3
aas
jns
mov
dec
outsl
pop
sub
sub
xor
jecxz
and
into
pop
mov
mov
outsl
insb
inc
add
inc
lea
imul
lahf
iret
lods
mov
jmp
sti
nop
jle
cwtl
pop
and
aam
dec
sub
adc
repz
pop
lds
cli
sub
cmpsl
cmpsl
lcall
mov
jae
fld1
ja
mov
shlb
cs
andl
icebp
shlb
pop
mov
and
mov
addr16
or
iret
mov
pop
pop
mov
jne
sub
jne
rcrb
les
mov
dec
xor
push
dec
xor
f2xm1
fcomi
adc
push
je
add
addr16
ret
xor
or
lds
mov
insl
sub
jo
ja
movsl
push
pop
push
jmp
sbbb
test
adc
out
bound
in
and
aam
push
rcll
loope
mov
mov
pop
dec
int3
sbb
aas
clc
pop
std
add
aaa
inc
ss
xor
popa
movsl
mov
dec
insl
sbbb
int3
sbbl
inc
andb
xor
inc
mov
push
ljmp
imul
fisttpll
mov
xor
dec
mov
into
sub
mov
out
mov
outsb
pop
pop
cmp
enter
add
repz
inc
cli
int3
jne
pop
add
mov
icebp
inc
lret
mov
xor
cmp
xor
jg
jl
push
add
popa
out
movsb
je
lret
mov
xchg
or
leave
and
lcall
mov
adc
push
fisttps
pop
repz
xor
mov
or
push
push
sbb
call
arpl
and
xor
jns
push
dec
mov
inc
mov
xchg
xchg
dec
out
mov
mov
arpl
jmp
mov
or
push
sahf
ljmp
xor
sarl
fwait
gs
sbb
movsb
add
pop
dec
sub
aas
test
jge
scas
repz
mov
idivb
push
ret
xor
ret
inc
cmp
fnstcw
out
stc
js
fsubr
dec
addr16
leave
sub
into
lods
adc
or
jns
pop
cmp
lcall
jmp
mov
loopne
xor
and
int
mov
push
jae
xchg
jp
imul
dec
jle
call
andl
mov
mov
call
cltd
pop
dec
jne
pop
enter
jo
or
push
cmc
inc
fwait
ljmp
fists
inc
xor
rcll
dec
xor
aad
out
in
cmpsl
or
or
pop
xchg
add
add
push
cmp
fldl
out
out
mov
lock
mov
fsubrl
das
icebp
decl
add
clc
outsb
pop
mov
mov
jp
add
pop
push
mov
cmpsl
popa
or
loop
and
and
push
cwtl
stos
shl
ret
dec
push
cmp
les
xchg
adc
push
and
out
popf
cmp
pop
out
mov
or
mov
bound
xor
test
inc
push
lods
in
not
repz
out
cld
cmp
dec
push
ss
mov
mov
lret
push
jmp
inc
push
out
pop
cli
icebp
jne
popf
pop
out
scas
mov
lea
cltd
shll
fldt
adc
pop
mov
lcall
stos
stc
cmp
dec
jl
repnz
hlt
mov
cs
aam
js
adc
pop
or
dec
rcrl
push
out
cmp
stos
adc
in
rcrl
xchg
test
shll
cmpsl
lock
jmp
jl
and
int
adc
lea
inc
shll
rorb
pop
xchg
mov
bswap
arpl
test
inc
cs
nop
test
aam
test
adc
mov
mov
sbb
mov
inc
loopne
or
insb
pop
xlat
aam
repnz
test
ja
enter
fistpl
xor
push
adc
das
cmp
bound
mov
das
cmp
ds
cmp
jp
cmpsl
lods
push
mul
roll
xchg
ud2
in
jmp
xor
add
inc
fdivs
cs
sub
loopne
mov
and
sub
push
cwtl
sub
lock
ds
pop
dec
and
pop
xor
cmp
adc
mov
xor
push
rclb
mov
test
cltd
pop
repnz
testb
std
ja
add
sub
call
jo
or
outsl
xchg
push
cmp
xorl
pop
aad
loopne
jb
push
sbbb
xchg
or
stos
pop
mov
fdivrs
es
add
jnp
xor
cmp
iret
push
adc
pop
sarb
out
xchg
out
popa
stc
aaa
aaa
fdivrl
fsub
jle
dec
jge
xor
jbe
sub
xor
dec
test
test
insb
je
adcl
sahf
xchg
cltd
dec
mov
lea
jmp
movb
shll
or
xlat
hlt
or
pop
lock
mov
xchg
mov
leave
data16
lods
adc
push
push
mulb
insl
mov
dec
repnz
ja
addb
and
mov
xor
movsl
ljmp
pusha
inc
std
mov
sahf
dec
flds
shr
mov
sbb
hlt
or
insb
int3
in
dec
int
pushf
ret
adc
inc
xchg
pop
mov
xchg
sub
push
jnp
lock
sub
jne
dec
jb
jb
mov
jo
or
gs
sahf
xchg
test
popa
lret
adc
lcall
cmpsl
dec
das
jno
aad
mov
dec
push
mov
aad
pushf
addb
cmp
and
sub
adc
pop
ja
xor
or
iret
loopne
mov
das
bnd
mov
cld
sbb
test
inc
jge
inc
arpl
nop
jns
inc
lock
xor
das
dec
cmp
xchg
clc
push
inc
pop
jb
inc
orl
shrl
sbb
imul
lret
adc
sbb
dec
repz
jp
aad
ret
mov
jnp
or
lds
ret
or
outsl
add
out
mov
loope
sub
inc
subl
push
data16
fcmovnb
cmp
cmp
mov
inc
andb
test
imulb
mov
add
nop
dec
xlat
xorl
stos
xchg
lea
inc
adc
adc
push
add
movsb
adc
and
lods
sbb
inc
cld
dec
ss
dec
stos
jo
mov
xchg
ficoml
shll
lock
xchg
inc
mov
xchg
pop
std
clc
or
mov
test
mov
pop
stc
dec
call
xchg
mov
cmp
xchg
dec
and
add
loope
dec
push
aam
dec
les
cmp
cmp
xchg
mov
ret
cmpsl
push
sub
adc
or
xor
fstpt
adc
mov
cmpsb
push
and
adc
and
je
aad
ja
and
add
rclb
sub
fnstsw
mov
imul
sti
adc
adc
fbstp
jle
pop
repnz
push
push
dec
pop
ljmpw
jle
repnz
mull
repz
into
iret
cmp
push
cwtl
int
in
decl
jge
mov
int
jne
es
stos
in
sub
insl
cmpsl
and
ror
divl
mov
cmp
dec
push
lods
push
cmpsl
inc
or
sbb
mov
or
xchg
rcll
cmpsb
inc
cld
mov
outsl
popa
xor
icebp
loope
jl
mov
push
movsl
jbe
repz
shl
push
aas
popf
mov
inc
rcrb
hlt
scas
aas
xlat
push
les
lods
cmpb
inc
test
scas
fsubs
or
lea
add
xchg
pop
jb
stos
orl
sbbb
jg
mov
or
mul
adc
jg
mov
xchg
mov
or
dec
rolb
mov
or
inc
subb
enter
add
dec
xchg
sub
mov
push
mov
xchg
push
popa
out
subl
jge
cltd
and
xchg
jbe
pop
pop
dec
dec
add
pop
xor
inc
cmp
xor
jl
inc
xchg
jb
arpl
scas
inc
push
xchg
or
jmp
es
or
cmp
repz
mov
cmp
mov
mov
sahf
cltd
dec
out
stc
lods
out
call
das
jmp
sti
shl
and
jp
into
and
stos
mov
in
adc
and
add
cli
jne
lock
jge
pop
add
push
test
push
notl
jae
test
les
je
mov
dec
xchg
fmul
xchg
mov
sbb
ret
mul
inc
mov
push
je
mov
xlat
mov
push
xchg
xchg
popa
push
cwtl
xor
in
pop
ljmp
mov
mov
push
inc
mov
xor
mov
pop
in
in
and
add
push
mov
sub
or
mov
popf
mov
cmp
mov
pop
fdivrp
shrb
loop
popf
mov
cs
xchg
idivb
adc
mov
xchg
jb
xchg
cli
xchg
jbe
fsubl
xor
insb
notl
push
xor
scas
cmp
or
gs
cmp
mov
cmpsb
jae
outsl
loope
mov
dec
fldl2t
dec
xor
inc
sbb
jp
push
ret
pop
cli
test
iret
sahf
dec
stos
test
ss
mov
and
push
sub
sub
out
push
mov
sub
std
push
push
call
cmp
sub
mov
imul
fisubrs
movsl
movsl
jb
push
or
xor
cmpsl
add
nop
outsl
push
dec
adc
lods
sarl
in
loope
jg
mov
test
jecxz
insl
aad
xchg
js
cmpsb
stos
outsb
xor
das
aam
add
roll
scas
repnz
dec
dec
xor
mov
in
xchg
sub
int3
push
inc
fbstp
inc
call
xchg
sub
mov
push
mov
or
je
insb
mov
add
loope
jne
mov
outsl
out
fwait
xchg
and
adc
loopne
inc
xchg
or
and
cmp
sub
das
add
sbb
insl
jecxz
outsb
dec
lcall
jns
jmp
mov
mov
push
into
mov
sbb
xchg
fimull
xor
int3
leave
or
pop
outsl
pusha
shll
push
ret
outsb
aad
lcall
sbb
mov
sub
in
add
std
xchg
adc
imul
leave
leave
mov
popf
jl
clc
mov
sub
cld
add
mov
push
dec
in
hlt
xchg
add
clc
icebp
aas
cmpsb
repz
push
and
sub
sub
sarb
imul
fisubs
dec
imul
stc
mov
cmp
shrb
add
into
jp
pop
pushf
xchg
push
out
into
pusha
push
lahf
pop
aas
arpl
mov
push
and
sti
push
push
adc
mov
fwait
add
mov
mov
pusha
xchg
cmp
stc
icebp
lds
dec
sbb
adc
das
or
xor
test
cltd
add
pop
adc
jne
leave
int
pop
or
lret
mov
or
inc
cmp
sbb
jb
sarb
xor
ret
lock
sub
cltd
stos
push
jnp
pop
inc
lahf
insb
jo
jmp
in
outsl
mov
mov
mov
imul
scas
scas
or
pushf
lods
sbb
mov
jns
ss
out
xorb
sbb
jle
and
lods
xchg
imul
mov
mov
sub
ja
ljmp
jns
xchg
xchg
stc
adc
xchg
add
test
push
push
rcrb
repnz
add
cmc
pop
jge
lahf
mov
hlt
mov
mov
add
out
sbb
test
pop
or
pop
lds
ds
jno
scas
xchg
xor
mov
mov
add
pop
pushf
mov
adcb
mov
test
out
mov
mov
in
jmp
sub
jp
mov
dec
lret
xchg
mov
xor
std
outsl
xchg
nop
xchg
fs
out
lret
xchg
loope
push
or
pushf
mov
test
rorl
call
pop
outsl
cltd
nop
or
xor
ret
cmpsb
out
ss
add
insb
sub
push
or
inc
pusha
sbb
outsl
fldenv
xor
addb
cmpsl
shll
xchg
push
jb
jae
cli
xchg
mul
fidivl
insb
jo
jbe
sub
dec
mov
or
divl
mov
mov
and
clc
idiv
adc
sub
mov
addl
jp
jns,pn
and
jge
jne
fistl
mov
or
mov
fsubl
inc
loope
push
xor
xchg
dec
sbb
test
std
lods
xchg
jp
xchg
jbe
shrb
lock
and
push
scas
popa
aam
roll
ret
jae
outsl
xor
popf
pop
fsubrs
jge
insb
stos
int
rclb
lret
ds
mov
xchg
outsb
cltd
out
ljmp
jnp
es
hlt
inc
cli
push
arpl
pop
push
jo
addl
out
adc
fwait
std
gs
sub
add
sarb
cmp
adc
mov
mov
fadds
imul
mov
push
sbb
sub
out
dec
dec
pop
mov
dec
xchg
mov
or
pmaddwd
jecxz
outsl
in
lea
jo
data16
fildll
xor
mov
shrb
push
mov
adc
dec
add
add
sbb
add
repnz
mov
mov
dec
test
adc
stc
and
jl
add
dec
daa
mov
test
jne
ret
fdiv
xor
lcall
sti
repz
push
jae
mov
fldl
ss
xor
cmp
ds
adc
je
fdivrs
shlb
nop
xchg
fdivp
ret
xchg
fdivs
pop
and
pop
decb
cli
sbb
sub
pop
sbb
cli
test
add
sbb
sbb
negl
lcall
push
sub
push
or
jle
mov
and
mov
and
xchg
popa
adc
jnp
ficoml
stos
sub
fwait
pop
adcb
add
in
mov
cmc
mov
mov
xor
push
pop
clc
andb
mov
scas
sbb
jne
stos
jmp
jae
push
daa
xor
or
fdivl
xchg
and
push
mov
jo
mov
roll
cli
movsl
or
scas
push
daa
inc
add
daa
push
ficomps
pop
stos
fwait
insb
inc
dec
jle
test
lcall
stos
mov
inc
aam
jl
adc
lock
lret
call
xor
out
xor
jmp
mov
lods
outsl
in
mov
adc
ljmp
push
fldt
loop
cmp
ss
fists
sbb
popa
enter
sbb
sahf
and
sub
test
mov
and
mov
inc
movsl
jmp
stos
or
leave
insb
xchg
stos
mov
shl
inc
xchg
and
test
pop
add
cmp
inc
lea
outsl
adc
je
xchg
cli
flds
int
pop
xchg
jp
out
lods
mov
xchg
push
push
pushf
fcompl
push
lret
sbbl
rcl
mov
xor
and
mov
addr16
das
in
push
xlat
add
mov
in
mov
or
cmp
fwait
shrb
pavgb
dec
mov
mov
leave
in
sub
or
loop
testl
mov
lcall
sub
pop
dec
mov
or
mov
in
mov
stc
nop
lock
mov
xor
or
push
ss
jl
mov
repz
push
mov
xlat
sbb
and
repnz
sbb
fiaddl
dec
xchg
in
jbe
mov
ret
in
div
jmp
inc
adc
int3
in
js
or
jae
mov
or
add
jge
icebp
sarb
jnp
dec
lock
sarb
dec
sbb
testl
dec
jle
sbb
ljmp
sub
popf
sbb
sbb
xchg
xchg
inc
jecxz
out
and
push
xchg
mov
sti
fnstenv
repz
shl
inc
jl
ljmp
dec
jb
les
cwtl
xchg
rcrb
in
test
int3
xchg
bound
das
add
in
cmp
nop
mov
jo
inc
enter
jns
iret
pop
pop
mov
dec
inc
sbb
mov
cld
xor
les
xchg
mov
int
dec
pusha
ljmp
and
int3
adc
jmp
arpl
dec
out
jo
or
fisttps
fsubl
push
aas
rorb
imul
sub
jnp
cmp
loopne
pop
rcll
xlat
xor
fimull
faddl
mov
test
jb
stos
mov
jle
mov
ret
aaa
mov
jo
fists
xor
in
in
popa
icebp
cmpsb
sub
fisttpll
xor
dec
into
lcall
xchg
movsb
lods
mov
push
mov
fwait
mov
inc
pop
push
iret
dec
push
adc
pop
push
int3
mov
jge
iret
into
push
adc
pop
out
add
jnp
outsb
pop
pop
push
in
pop
add
sar
sti
inc
cmpsb
sub
push
add
loop
idivl
aas
sti
out
mov
ds
or
stc
push
int
push
xor
sbb
push
sbbl
xchg
and
push
pop
mov
jne
or
pushf
sbb
xchg
jno
dec
pop
mov
inc
mov
adc
pop
rolb
sub
es
or
or
push
or
test
and
cmpsb
icebp
je
ljmp
xchg
pusha
cwtl
xlat
fs
add
pop
aad
jl
push
inc
mov
lds
cld
push
jno
jmp
in
js
xchg
jle
or
fadds
add
loopne
pop
mov
mov
out
adc
je
ss
call
ret
imul
sbb
pushf
aam
push
xchg
dec
or
mov
aad
and
mov
fwait
mov
fs
pop
push
xchg
stc
jmp
cltd
das
xor
jge
cli
pop
hlt
stos
aad
hlt
xchg
pushf
pop
aas
sar
fwait
dec
pop
jle
test
pop
fdiv
pop
pop
mov
mov
lahf
scas
mov
shrb
jg
mov
jne
loopne
lds
pop
not
jbe
jno
dec
or
pop
or
mov
inc
addr16
out
cmc
ja
inc
xchg
mov
dec
fisttpll
add
cmpsl
sahf
xor
sbb
mov
jns
mov
mov
icebp
inc
mov
lds
push
mov
and
repz
mov
and
cmp
and
and
push
aam
stc
push
sbb
jb
mov
loopne
outsl
jae
xor
sub
cwtl
jmp
shlb
xchg
insl
jae
cmp
pushf
mov
dec
cmpsb
xlat
xor
mov
push
sub
arpl
stos
jae
xchg
daa
xor
aad
push
sbb
addr16
jbe
insl
sti
ss
lret
scas
sahf
dec
fst
scas
mov
push
jmp
jp
xchg
popf
or
popf
adc
stos
mov
fisubrs
imul
cltd
in
xchg
jl
jae
xor
movsl
mov
lahf
mov
pop
jl
sub
rcll
imul
sub
clc
aaa
mov
jge
int
adc
mov
movsb
or
mov
or
aad
add
xchg
cmpsl
cli
fcomp
movsb
dec
fisttpll
sahf
test
mov
pop
pusha
mov
aaa
aaa
out
in
test
and
sub
adc
lcall
xor
aam
cs
adc
pop
iret
push
add
pop
scas
lahf
dec
adc
inc
mov
scas
sbb
call
fcmovnu
pop
in
loop
lods
sbb
pusha
adc
loope
icebp
mov
sub
inc
inc
pop
inc
icebp
fistps
pop
xchg
sub
fwait
clc
xchg
lods
mov
in
nop
xlat
jnp
out
fucompp
sbb
add
sbb
popf
push
lods
dec
add
mov
sub
mov
mov
sub
ja
sub
dec
pop
daa
daa
sbb
dec
add
lods
add
jns
push
xchg
lahf
mov
les
jo
pop
inc
mov
mov
inc
mov
das
dec
dec
data16
cwtl
mov
and
in
and
mov
jmp
pop
jl
add
pop
pushf
ret
dec
inc
popf
aas
xlat
addr16
and
outsb
dec
xor
push
pop
cmpl
mov
stc
lcall
jmp
jb
adc
dec
std
mov
and
cmovae
call
pushf
mov
adc
arpl
aas
sub
repz
bsf
add
out
push
test
std
std
jmp
pop
jo
inc
xorl
lods
pusha
fcmovnbe
loope
push
lret
test
les
ds
std
xchg
fsubs
jg
test
es
into
or
fdivrs
add
es
pop
icebp
sbb
xor
rorb
mov
ret
insl
shlb
and
add
out
pop
call
testb
out
sti
adc
mov
sub
stos
mov
jmp
push
cld
loope
lret
cmp
push
rorb
pop
in
dec
js
fbstp
sub
adc
repnz
mov
incl
lds
nop
movsl
call
pop
mov
mov
arpl
push
cmc
or
andl
sti
cmp
push
pop
or
adc
and
mov
mov
mov
mov
mov
add
sar
out
jmp
ja
dec
cmp
add
push
and
push
sbb
adc
repnz
lret
mov
js
jnp
or
mov
add
stos
xchg
dec
jnp
adc
cmc
lods
lods
add
movl
mov
cmpb
cli
push
add
sahf
inc
pop
pop
push
push
dec
jl
or
in
test
dec
add
push
mov
testb
aas
lret
out
insb
mull
push
push
or
ret
stos
push
and
push
daa
jbe
cs
jno
or
inc
cwtl
sub
inc
ljmp
cwtl
pop
ja
mov
jle
mov
jne
lret
rclb
xchg
fcmove
cmp
adc
and
dec
push
mov
rcr
ljmp
inc
inc
loop
es
xor
inc
xchg
xchg
xchg
popa
out
mov
clc
add
mov
fucompp
xor
push
in
cmp
cmpsl
scas
pop
ss
jle
lds
or
push
inc
repz
jns
jecxz
jle
fsts
dec
addl
cltd
lahf
out
imul
ret
shll
xchg
fdivrs
xchg
cltd
nop
xor
scas
adc
in
cmpps
cmpsb
cltd
push
sbb
imul
cmpsb
adc
mov
cmp
pop
and
daa
pop
push
add
ja
jb
fiadds
data16
sbb
addr16
imul
and
arpl
pop
push
and
jae
lods
xor
ret
mov
or
sbb
cmp
cs
push
push
ljmp
push
out
into
stos
dec
mov
or
dec
sub
add
jns
daa
hlt
inc
mov
push
sbb
add
popf
dec
jns
pop
pop
lock
loopne
xchg
popa
jb
repz
adc
mov
mov
adc
mov
push
sahf
cmp
or
loopne
jnp
in
adc
and
faddl
jge,pt
imul
and
cmp
shrl
cmp
aad
xchg
ljmp
jecxz
xor
mov
mov
jecxz
push
filds
xchg
xor
mov
xchg
int3
dec
add
cmp
stos
mov
cmp
xchg
pop
andb
imul
push
jecxz
xchg
addl
lds
js
addr16
fs
inc
mov
and
jo
sarb
aad
sub
push
push
popa
test
fldl
rorl
gs
jo
ds
cmp
sub
dec
sbbb
adc
push
push
dec
cmp
pop
fwait
divl
mov
lds
adc
and
push
dec
mov
imul
mov
hlt
mov
mov
cmp
je
mov
mov
mov
mov
xor
cmp
jne
mov
mov
xor
movsbl
mov
xor
add
cmp
mov
mov
mov
je
xor
add
mov
je
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
jmp
jmp
adc
lods
fnsave
lock
sbb
pusha
roll
jl
pop
jl
adc
or
mov
sarb
rcl
xor
aam
jg
hlt
aas
fistl
scas
fistl
inc
in
adc
mov
pop
push
mov
xchg
outsb
lcall
mov
push
je
lcall
ds
cmp
out
dec
lock
lcall
or
imul
mov
add
push
xchg
pop
ja
fcom
out
sbb
daa
mov
dec
cmp
pop
jmp
mov
aad
sbb
inc
jle
call
fs
or
cmp
inc
sahf
int3
jmp
in
mov
daa
inc
cmpl
ret
sub
jno
xchg
or
mov
icebp
sub
mov
adc
adc
xchg
mov
and
xchg
ljmp
xchg
adc
movsl
adc
orl
call
dec
jge
stos
mov
bnd
shrl
mov
dec
ljmp
add
mov
sub
xchg
pop
pusha
sarb
mov
rorl
rcrb
add
aam
inc
jne
stos
es
sbb
outsb
jns
xor
pop
sub
adc
mov
out
loopne
xor
push
sub
jg
pop
jbe
gs
dec
push
ret
lea
jcxz
stc
out
out
pop
pop
add
xchg
inc
add
repnz
push
data16
pop
xchg
push
push
cmp
xor
fists
xchg
sub
fs
push
or
or
dec
andb
repnz
and
mov
in
mov
fimuls
jmp
aaa
push
test
jmp
cmp
mov
test
adc
mov
add
out
jb
gs
outsb
js
cli
imul
dec
mov
std
jno
jg
outsl
aaa
arpl
and
sbb
popf
aad
dec
jmp
shlb
xor
loope
push
or
jg
pop
lret
iret
pop
int3
cmp
or
call
or
mov
movsb
call
cli
rcll
cmp
imul
cmp
arpl
and
ficoml
icebp
lret
cmp
adc
outsl
pop
push
test
movsb
mov
int3
pushf
and
imul
adc
jnp
cmpsl
fidivrl
mov
mov
fdiv
repz
sbb
jmp
cmc
in
pop
push
es
dec
jecxz
inc
or
add
fs
adc
push
xchg
jo
cmovg
nop
std
xor
jne
sbb
mov
lea
aaa
and
rcrl
lds
popf
popa
cmp
out
dec
gs
lock
and
loopne
add
imul
and
imul
mov
cltd
sti
mov
rorb
hlt
adc
jge
into
jg
ss
sub
adc
shll
fsub
push
std
mov
stos
clc
nop
xor
pop
enter
cmp
xor
ret
adc
data16
idivb
out
outsl
out
outsb
or
mov
mov
jle
fsincos
fildll
in
inc
sbb
ja
pushl
cmp
cmp
scas
fwait
adc
fimuls
sbb
push
or
sti
call
test
cs
bound
adcb
xchg
cwtl
jb
inc
push
dec
repnz
xchg
pop
mov
movsb
pop
add
repz
jne
jbe
jmp
and
push
stos
sbb
and
xor
test
inc
clc
sbb
fnstcw
lret
cmp
lods
orb
mov
icebp
push
mov
or
xorb
xchg
mov
inc
and
int
pop
stc
sbb
lretw
mov
fwait
and
stos
mov
mov
subl
push
add
push
std
mov
leave
xchg
dec
inc
popf
sub
xchg
pusha
int3
dec
scas
inc
mov
emms
test
in
out
jnp
movsb
pop
push
clc
outsl
push
enter
inc
ljmp
jecxz
jmp
or
jge
divb
insl
test
bound
fisubrl
xchg
call
fucomip
aas
aas
imul
dec
imul
mov
fdivrl
inc
lret
imul
loope
loop
jle
icebp
push
push
repnz
adc
out
xor
xor
or
xchg
mov
xor
ffreep
dec
fs
cmpsl
cld
imulb
inc
ljmp
xor
pop
jno
sbb
jecxz
sub
repz
jne
and
push
mov
mov
mov
xorb
mov
cmp
lods
es
xchg
push
icebp
decl
aad
fucomp
and
les
jbe
jle
push
out
mov
add
jmp
sbb
pop
xor
dec
jbe
xchg
dec
imul
les
inc
jo
test
int3
movsl
fs
mov
rorb
insb
cmpsl
stc
lock
jnp
dec
jne
mov
inc
mov
add
sbb
clc
jecxz
test
mov
xlat
jns
mov
in
add
inc
mov
into
movsb
cld
je
loope
add
push
cpuid
and
xorl
pop
divb
jmp
mov
loopne
ror
js
push
push
pop
mov
jb
jbe
mov
push
pop
cmp
es
ss
lahf
cwtl
outsb
in
inc
dec
and
cmpsb
pop
test
dec
fcmove
push
add
ret
and
lock
sub
insl
lret
xor
jno
jg
popa
or
jns
jns
xchg
adc
popa
js
mov
stos
lret
and
call
pop
mov
jecxz
sub
fldcw
or
jg
repnz
adcl
ljmp
mov
mov
out
add
xchg
fisttps
cltd
mov
push
out
sbb
cltd
test
mov
ja
jg
pop
adc
push
jnp
call
fimuls
mov
mov
inc
mov
pushf
mov
mov
pop
jmp
les
vpshab
fisubs
loop
mov
negb
outsb
roll
aad
sbb
aad
clc
adc
xor
iret
loopne
ss
cltd
mov
testb
xor
inc
repz
add
lods
rcrl
loope
xor
mov
lahf
bound
pop
fs
add
or
fucom
loopne
jmp
jmp
pop
mov
nop
mov
inc
outsb
xor
hlt
loope
xchg
pushf
lods
inc
icebp
loop
in
roll
nop
push
aad
jge
sub
rorl
and
inc
cmp
cmpsl
add
pop
int
cs
repz
in
mov
imul
mov
sbb
push
call
push
loop
data16
fsubrl
repnz
push
jns
je
cli
jg
dec
rcl
adcb
flds
mov
dec
or
xchg
dec
add
rorl
cwtl
outsl
fldenv
push
ss
loop
ss
push
xchg
ficoml
and
into
fdivrs
mov
cltd
xchg
add
int
push
push
scas
rorb
fstl
leave
repnz
add
fnstenv
mov
jl
iret
pop
les
xchg
mov
outsl
insb
or
das
xlat
pop
cmp
in
aam
push
cmp
push
mov
cmp
or
xchg
cmp
sbb
mov
mov
call
clts
jb
pop
and
xchg
or
push
subb
jg
pop
shlb
mov
mov
mov
mov
pop
dec
or
dec
aad
int
int3
dec
shll
pop
popa
imul
rclb
sti
adcb
daa
jge
jbe
mov
mov
or
jb
and
xchg
lea
flds
imul
or
xchg
add
cmpb
push
rorl
sub
fs
movl
xchg
ja
iret
scas
call
roll
fwait
pop
loopne
push
fidivl
fisttps
out
test
add
stos
xchg
push
cmpsb
out
xchg
push
mov
sub
mov
sub
sbb
scas
xchg
jae
xchg
xchg
lret
movsl
and
pop
mov
sbb
outsb
xchg
xchg
xor
arpl
lret
mov
sub
in
jl
in
mov
inc
xlat
cmp
sarb
sti
imul
mov
inc
xchg
bound
clc
inc
xchg
sbb
in
adc
cwtl
inc
mov
addl
idivb
jno
repnz
into
out
imul
bound
add
or
fnstenv
pop
mov
and
dec
scas
cmpsb
xchg
dec
pop
scas
insb
nop
add
xor
and
cmp
add
cli
mov
repnz
jno
ljmp
jns
push
or
std
shll
sarb
adc
outsl
fisttpll
cvtdq2ps
aaa
fisttpll
push
fs
xor
inc
ja
lret
xor
cmp
inc
fldl
cmp
clc
ljmp
cmpsl
pop
xor
add
mov
jp
sbb
mov
jnp
cld
xor
jp
push
aas
incl
push
xor
ljmp
inc
sbb
cmp
and
ss
fcmovb
add
imul
movsb
das
push
out
inc
and
mov
cmp
pop
add
xor
and
data16
rcr
or
data16
int3
xor
sub
mov
mov
jge
inc
inc
fidivs
inc
outsl
push
pop
mov
out
loope,pn
stc
xchg
push
cmp
mov
dec
dec
jl
dec
and
in
nop
sub
out
gs
ret
or
xor
shlb
mov
jnp
jmp
inc
jnp
mov
sbb
jge
push
cmpb
popf
jle
lds
push
in
imul
adc
cmp
add
lea
xchg
add
sub
or
mov
sub
ret
mov
dec
cwtl
mov
push
pop
mov
clc
inc
movlps
inc
imul
dec
aam
insl
enter
and
adc
sub
ret
or
das
mov
and
and
mov
repz
mov
js
cmpsl
decb
xor
or
pop
jnp
jmp
into
pop
push
aas
movb
dec
aaa
xchg
pop
cli
in
or
ds
and
jecxz
lds
ljmp
xor
aam
xorl
or
pushf
out
xchg
mov
sub
inc
cwtl
xor
mov
into
pushf
addr16
xchg
xor
jnp
mov
and
mov
rcr
rorl
push
push
stos
js
int3
mov
mov
pop
int
stos
or
nop
cli
push
lret
test
add
fs
jne
lea
call
popa
dec
dec
shll
cmpsl
mov
ja
push
mov
lea
cmp
cld
test
pop
loopne
jecxz
loop
mov
in
push
jbe
loop
aas
xor
jmp
pop
je
xchg
pop
mov
dec
xor
xchg
addb
push
stos
fbld
push
pop
inc
sbbb
jne
imul
popa
fsubrp
lds
xacquire
sbb
jns
jns
out
pushf
and
mov
inc
ja
xchg
fisttps
out
popf
gs
adc
jae
mov
cmpsb
loop
cmpsb
inc
sub
xor
movsb
addr16
out
push
cld
stc
in
stos
das
push
jo
js
je
sbb
cltd
xor
push
loope
fsubr
out
and
push
bound
test
mov
jmp
and
cmp
mov
popa
cmp
adc
sub
dec
orb
movsb
daa
sbb
fisubs
inc
jge
and
dec
cmp
inc
ds
or
adc
xor
mov
pop
int
pop
lcall
hlt
xchg
pop
push
mov
subb
lods
jg
popf
stc
sub
dec
xchg
inc
mov
mov
fnstenv
fsubp
jmp
jle
outsb
mov
adc
fstpt
shlb
inc
lahf
rclb
inc
data16
xor
mov
inc
mov
mov
cmp
cmc
out
cmp
cwtl
sbb
insl
adc
mov
xchg
in
and
add
and
nop
push
nop
pusha
jo
js
cmpsl
shr
repz
jmp
imul
cmp
aad
and
rcll
addr16
inc
xor
je
adc
push
jmp
fisubl
xor
sar
cmp
scas
sub
fstp
xchg
aaa
jmp
push
int
or
stos
sbb
xchg
daa
addb
fwait
push
addr16
outsb
data16
aad
test
mov
jmp
xchg
rcll
pop
lods
lahf
xchg
shll
in
fwait
jge
lret
pusha
cmp
pop
mov
sub
inc
out
stos
aaa
adc
or
jae
or
stc
jge
bound
int3
mov
pop
jb
js
fs
bound
int3
pop
and
pop
fistpll
inc
pushw
jp
xor
xchg
testl
enter
adc
xchg
mov
jne
ljmp
fcompp
cmpsl
ds
jmp
inc
push
mov
fdivp
add
icebp
inc
xor
insl
sub
and
inc
fcmovbe
sti
lret
lcall
jl
adc
inc
ficoms
sub
icebp
fadds
adcl
xor
mov
idivl
push
cmp
insl
cmp
push
dec
jnp
outsb
lret
sub
push
mov
push
jmp
sahf
data16
mov
or
dec
dec
stc
fdivs
xchg
sti
cmp
cmp
loope
push
pop
dec
add
xor
movsl
test
rorb
test
or
out
jne
ret
stos
imul
mov
cmp
mov
lahf
xlat
rep
and
int3
cmp
adc
adc
jmp
xchg
pop
and
aaa
adc
jb
not
inc
gs
in
jns
dec
sbb
inc
popf
or
lods
xchg
pop
mov
mov
push
scas
xor
dec
jle
push
sub
sub
sub
sub
jo
add
pop
pop
and
mov
mov
jg
or
cmp
ljmp
cmp
ljmp
sub
orb
iret
stc
cli
inc
push
xlat
mov
mov
pop
jnp
arpl
cld
or
cmp
stos
jns
mov
mov
jno
inc
aaa
adc
mov
and
adc
rol
xor
nop
cmpsl
lock
mov
rclb
sub
leave
mov
aaa
and
push
shrl
pop
iret
xchg
or
flds
mov
cmc
js
test
xchg
mov
inc
xor
ss
xor
mov
mov
jecxz
add
cwtl
out
xchg
jp
test
mov
pop
cli
ret
xchg
push
in
sbb
je
stos
cmp
mov
insb
js
pushf
into
fimuls
jp
mov
sarb
repnz
jmp
enter
test
filds
test
insb
mov
lret
int
fstps
cmp
iret
mov
dec
pop
ficoms
push
dec
xchg
push
sub
hlt
movsl
imull
pop
jne
leave
shlb
mov
sub
jg
dec
xchg
cs
pop
push
cmp
ror
iret
xor
sub
add
dec
xor
xchg
addl
adc
pop
orb
arpl
or
aam
push
xor
int
pop
dec
rol
insl
sub
lods
ljmp
imul
xchg
push
int
or
sub
scas
inc
enter
inc
mov
stc
sarb
sar
sbb
xlat
test
cmpsb
insl
in
int
mov
aam
rorb
fildl
push
lods
imul
js
push
push
add
loope
push
daa
enter
ret
adc
xor
jg
pop
xor
cmp
cwtl
inc
xor
add
inc
xor
lock
push
mov
mov
in
jns
inc
push
jnp
sbb
add
scas
push
movsb
jnp
stos
xchg
imul
xchg
hlt
mov
mov
mov
mov
xchg
mov
mov
dec
movsl
sub
cmpb
xchg
insb
push
pop
gs
sbb
add
cmp
and
out
xchg
push
fistpll
out
or
adc
int3
cs
mov
test
mov
dec
sbbl
or
mov
xor
mov
fwait
mov
pop
test
mov
jl
and
cmpsl
addr16
xchg
pop
out
or
mov
xchg
sub
xchg
inc
and
mov
cmp
xchg
fwait
jl
insb
sbb
incl
sti
adc
push
ljmp
fstpt
dec
imul
shl
outsl
adcb
sbb
loope
or
ljmp
sub
adc
cmpsb
pop
movsl
jae
add
sbb
mov
jle
jmp
sbb
jmp
ret
test
jns
push
repnz
push
xor
mov
movsl
sub
stos
test
inc
push
daa
mov
or
out
js
xor
cmp
cmp
pop
dec
and
repz
cmpb
adc
lret
and
xchg
rcrl
bound
ljmp
push
add
out
cmp
xchg
jnp
aad
and
lds
xchg
mov
push
cmp
sub
addr16
loopne
shll
mov
and
mov
test
mov
add
test
sbb
call
add
lods
adc
add
cmpsb
mov
iret
scas
xchg
shlb
loopne
dec
sbb
push
xchg
int3
lods
sub
repz
sbb
fcoms
sub
xchg
xchg
push
fimuls
out
jmp
or
mov
mov
lds
and
mov
xor
mov
ja
cmpsb
cmpl
mov
in
ficomps
inc
in
fdivrp
cmp
add
les
sahf
cmpsl
pop
cmp
sbb
xchg
in
mov
lock
xchg
cmc
jns
cld
mov
lcall
or
sub
in
out
subb
sti
fistps
cwtl
xchg
test
stos
das
add
pop
mov
dec
mov
xlat
stos
ret
rolb
mov
adc
nop
and
scas
fidivl
int
sbb
pop
cmp
loop
cmp
cmp
pop
mov
jle
stos
test
aad
dec
imul
stos
cmp
inc
cmp
lds
mov
pop
and
inc
jb
pop
nop
lock
adc
xchg
sub
into
pop
iret
pop
out
lock
clc
cmp
in
pmulhw
cmp
jno
frstor
pop
pop
pop
inc
mov
fidivrl
xor
dec
flds
mov
out
jo
aas
and
mov
ds
inc
sub
das
mov
mov
fadd
leave
mov
lock
sbb
in
loopne
pop
into
cmpl
rcrb
sahf
notl
fucom
pop
xor
push
mov
ja
jle
fildl
dec
sbb
inc
push
or
mov
fs
cwtl
xor
mov
aaa
inc
outsb
enter
sbb
sbb
aam
loope
mov
pushf
stc
popa
fldl
bound
out
and
push
sbb
lods
xor
push
sbb
outsb
ljmp
xchg
mov
repnz
fildl
dec
pop
sub
fs
jns
arpl
sbb
std
dec
ret
shrl
mov
dec
loope
jnp
data16
pop
insb
inc
adc
cmp
push
and
loope
sbb
outsl
pop
in
sbb
out
sti
mov
ret
ret
jae
movntps
mov
adc
std
and
lea
fisubl
insl
sbb
out
ret
xor
mov
jbe
sub
leave
rcl
sbb
sbb
lahf
lcall
mov
pop
fistl
or
sbb
jne
fbstp
xchg
inc
fistpll
rep
or
in
xchg
shlb
enter
mov
push
iret
lods
insl
fsts
xchg
int3
dec
adc
ss
insl
imul
xor
xchg
out
es
push
rorl
movsb
stos
jne
xchg
test
cld
in
xchg
sbb
out
repnz
mov
push
movsl
jno
stc
mov
xchg
rcrl
sbb
jo
inc
leave
inc
in
popf
movsl
inc
jg
mov
dec
xchg
cli
fmuls
loopne
andl
fadds
insb
repz
out
outsb
pusha
into
jmp
mov
xchg
loop
mov
mov
add
imull
mov
cmc
lea
pop
fwait
pcmpeqb
lods
cltd
xor
lret
sarb
loope
pop
test
mov
lods
xor
add
into
xor
cmpb
dec
loope
or
push
pushf
int
mov
hlt
imul
jno
sti
xor
sbb
xchg
pop
orb
jbe
rorl
mov
jl
xchg
cmp
sbbl
mov
mov
adc
mov
lea
xor
and
inc
xchg
xor
xor
cli
mov
sbb
mov
mov
cmp
xchg
pop
fcoms
ffreep
sub
stc
xchg
or
xor
mov
mov
wbinvd
cltd
jns
in
xor
xchg
test
pop
pop
push
enter
sub
sarl
xor
and
loopne
scas
pop
cltd
push
pop
shlb
xorl
sub
out
dec
pop
cli
jmp
xchg
pusha
pop
outsl
mov
cmc
or
ss
int3
sbb
adc
cmc
mov
into
test
and
sahf
jno
xchg
push
cmp
xchg
decl
sarl
les
jae
jo
movsl
or
shlb
aam
out
xlat
int3
jg
mov
popa
in
movsl
cmpsb
push
xchg
inc
jg
in
push
or
lret
mov
insb
pop
mul
mov
test
cmp
add
mov
test
sub
pop
jge
xor
or
sub
mov
add
sub
jne
stos
in
and
dec
mov
insl
fisubrs
outsb
fs
orl
sub
inc
stc
movlps
outsl
lods
sti
add
lret
add
push
sbb
cwtl
xlat
rcll
clc
test
and
std
test
jb
and
popa
lret
insl
or
stos
int3
stos
sub
push
out
fcompl
testb
or
movsb
jecxz
push
arpl
or
xor
cmp
xchg
sub
scas
movsb
sar
insl
pop
lret
add
lahf
mov
dec
mov
inc
xor
inc
fwait
insb
fists
jp
mov
jecxz
sub
mov
stc
mov
data16
fmuls
or
xchg
ja
lret
fisubrl
addb
dec
test
daa
scas
jnp
cld
pop
in
dec
imul
lods
xor
das
test
dec
fstps
or
adc
iret
inc
mov
out
mov
test
aaa
dec
outsl
in
add
int
fptan
divb
sar
adc
iret
xor
mov
rcll
xlat
fwait
jne
jbe
xchg
sbb
add
xchg
mov
cmc
idivl
ret
cmpsl
push
dec
pusha
add
push
movsl
addb
dec
call
cmc
xchg
and
sub
xor
int3
jo
pop
cmp
cli
and
shlb
xchg
ds
cmp
int3
or
inc
xchg
incb
sub
cmp
pop
pop
into
mov
lods
int3
stos
mov
rorb
stos
adcl
add
ljmp
pop
xor
push
mov
out
mov
in
push
outsb
notb
cmp
push
add
ljmp
pop
lods
fadd
and
repz
mov
mov
sub
push
xchg
ds
aad
pop
ds
push
dec
xchg
rol
or
pushf
out
push
fisttpl
xchg
mov
enter
repz
mov
cmp
andb
popa
xchg
inc
ja
xchg
push
fnstcw
inc
lods
push
test
je
cmp
cmc
xor
insb
js
mov
in
scas
xlat
add
pop
push
mov
inc
mov
hlt
pop
daa
lcall
pop
push
addl
pop
or
xor
sbbl
push
mov
lock
sbb
inc
mov
ss
jns
lcall
adc
mov
cmpsl
sbb
aas
int3
or
sbb
xchg
xor
mov
jne
or
add
insl
mov
dec
out
push
rcll
iret
loopne
stos
adc
jae
pop
call
bound
loop
or
fmulp
in
inc
inc
andb
sahf
sbb
pusha
xchg
and
adc
sub
xorl
push
bound
pop
ds
in
add
or
faddl
add
les
stos
mov
js
in
push
jbe
adc
mov
cs
nop
aam
add
xchg
mov
in
iret
ds
push
add
shrl
insb
adc
pop
bound
subl
popa
xchg
clc
pop
psllq
pop
test
js
push
arpl
repnz
jmp
sub
popf
test
or
sub
sbb
pop
push
imul
cmp
push
xor
cmpsb
dec
leave
faddl
addl
add
add
test
lea
lret
sub
or
iret
fldt
mov
mov
xchg
stc
lahf
jl
std
mov
mov
int3
mov
scas
aad
bswap
dec
and
lcall
rcrl
dec
enter
mov
sar
div
ds
dec
mov
orl
out
mov
ljmp
pop
movsb
outsl
mov
pop
fldl
mov
insb
stos
xlat
mov
mov
mov
lahf
cwtl
insl
in
inc
addl
push
dec
fnstsw
push
xchg
sahf
test
popa
mov
test
and
out
mov
cmp
lahf
cmpsl
xor
mov
cltd
testl
add
jmp
and
and
mov
sbb
pop
mov
cmp
sti
and
out
cmpsl
outsb
sub
xor
frstor
sbb
pop
out
orl
and
jmp
aad
and
divb
cwtl
or
jmp
and
loop
fwait
cmp
arpl
mov
data16
dec
icebp
shrb
repz
divb
cmc
mov
daa
out
add
scas
adc
pushf
cmpsl
stc
stc
cmp
jge
shl
dec
jg
xor
fidivs
stc
jbe
mov
mov
mov
lods
lods
mov
lds
nop
xchg
jne
and
mov
dec
mov
int3
loope
sbb
sti
test
or
sbb
pop
or
dec
xchg
xor
in
mov
roll
mov
push
inc
decb
out
pop
xor
pop
ljmp
loop
pop
pop
jecxz
inc
push
or
jne
and
fs
jbe
sbbb
ret
add
daa
or
sub
cli
and
push
sbb
sub
sbb
ljmp
scas
xchg
sub
add
or
fists
insb
bound
adc
fisubs
loope
ds
inc
movsl
cmp
mov
shlb
jns
lret
scas
fistps
insb
cmpb
mov
inc
jno
jge
shl
int3
mov
mov
jno
add
xor
sbb
pop
mov
add
push
fnstsw
push
imul
jne
push
repnz
clc
lock
scas
add
icebp
or
and
cli
add
cmpsb
sub
adc
sub
aas
test
cmpsl
fildll
cmpsb
icebp
orl
pop
int
dec
sub
and
mov
or
push
addl
jb
adc
aam
inc
cmp
xchg
outsb
dec
and
jo
push
mov
mov
aam
inc
fildll
rorl
icebp
dec
aad
jo
mov
rorl
push
inc
xchg
xor
in
add
fstl
stc
add
out
repz
cmpsb
sub
popa
dec
push
fistl
push
jne
add
stos
in
nop
mov
shll
mov
cmp
xchg
jnp
das
xchg
add
decb
sub
fucomip
loop
cmp
jns
push
gs
push
ss
std
call
pop
cmp
fidivl
and
push
xor
jns
rcr
movsl
push
xchg
pop
cmpsb
fcoms
jge
aam
mov
mov
loopne
imul
push
test
int
push
int
insb
lods
pop
mov
jl
mov
cwtl
divl
jbe
daa
jg
adc
adc
loop
cmpsl
roll
mov
inc
int
adc
je
bound
fldl
shr
and
imul
scas
out
add
lods
xlat
jmp
out
pop
mov
inc
call
xlat
jb
shlb
dec
jecxz
cmp
enter
cmpsl
cmp
lahf
stos
rcrb
sbb
dec
or
cmovle
mov
je
and
dec
pop
sbb
mov
mov
mov
pop
aas
xchg
xchg
mov
repnz
add
dec
outsb
inc
pop
push
les
mov
mov
inc
loop
mov
dec
or
test
fnclex
add
nop
xchg
rolb
push
pop
xchg
mov
add
out
movsl
xchg
mov
out
sbb
pop
push
mov
lods
push
in
or
jp
lds
push
inc
sbbl
sub
xchg
xchg
sahf
or
add
push
test
fldt
or
sub
divb
inc
or
mov
sub
mov
lods
mov
cmp
popa
jne
inc
sbb
sbb
das
sub
sub
sub
xor
push
push
sbb
rorb
cltd
sbb
pop
push
out
rcr
mov
cmp
ret
inc
or
sbb
test
scas
jecxz
mov
pop
cmpl
aam
adc
cmp
cmova
mov
xor
sbb
add
mov
fstpt
xchg
ret
iret
enter
rorb
jge
jmp
data16
mov
sub
jmp
xchg
rolb
shlb
sbb
push
or
mov
xchg
pop
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
jmp
lret
lock
mov
cmp
mov
inc
pop
jl
adc
roll
scas
mov
and
xchg
out
sub
mov
mov
popf
sub
test
popf
sub
in
and
out
jmp
adc
bound
mov
sbb
mov
bound
inc
xor
sub
hlt
mov
jl
stos
or
mov
stc
mov
stc
movsb
popa
sub
mov
or
inc
sbb
jle
mov
xchg
ficomps
mov
xor
leave
and
js
push
push
testl
push
outsb
loope
das
mov
sub
adc
dec
stc
mov
pop
les
aad
and
xchg
mov
int
int
aam
call
or
lahf
sbb
imul
push
mov
into
xchg
jp
out
mov
jns
frstor
test
pop
sub
int
repz
std
mov
cli
fsubl
ss
xchg
inc
dec
xor
xchg
inc
xor
mov
out
mov
mov
jmp
mov
push
jmp
dec
aam
sti
sub
cmpsb
mov
mov
xor
test
lea
pop
inc
cld
dec
test
sub
mov
mov
push
xor
stc
cmc
sbb
mov
xchg
scas
mov
adc
lds
outsl
jl,pn
loopne
in
or
cmp
push
push
jo
jle
mov
dec
ret
in
movsb
xchg
movl
bound
adc
es
mov
or
mov
call
mov
outsl
fstpl
rcrl
insb
dec
insb
bound
adc
inc
jmp
pop
inc
aaa
fst
lahf
adc
add
repz
ja
jb
pop
jge
mov
clc
inc
int3
xor
movsb
clc
xchg
imul
mov
shlb
jno
and
push
fdivs
rep
leave
push
clc
je
mov
aas
and
mov
cmp
jb
and
loopne
pushf
push
mov
js
pusha
out
mov
out
fiadds
lods
sbb
jecxz
aam
and
mov
test
lahf
and
jno
cwtl
scas
xchg
mov
enter
jle
pop
mov
push
lcall
mov
rolb
pop
adc
mov
pop
int3
test
rclb
mov
adc
lret
fwait
inc
bound
insl
xchg
fcoml
add
add
dec
int
jno
cmc
mov
inc
clc
lds
jne
outsl
and
adc
pusha
addr16
fwait
pop
adc
fsubrl
push
addr16
inc
fbstp
mov
sbb
mov
mov
je
fsubrs
mul
roll
jg
pop
adc
aad
mov
rol
adc
in
inc
mov
ds
xchg
repnz
mov
pop
movsb
cmp
push
jo
inc
add
mov
push
mov
in
decb
fdivl
add
jmp
pop
cwtl
push
int
stc
jae
fadds
push
arpl
mov
jo
adc
outsb
js
lret
rorl
adcl
jmp
dec
fwait
inc
int
mov
inc
pop
inc
push
sbbl
in
adc
cmp
lds
shll
push
test
xchg
shlb
lret
cmc
lods
ficomps
jo
ds
xor
pop
outsl
lahf
shrl
mov
es
xchg
lds
mov
adc
fdivrs
xor
test
xchg
fcomps
xchg
dec
and
out
add
addl
das
or
push
int
dec
sahf
das
and
movsl
lods
mov
lds
scas
subl
mov
and
add
mov
hlt
int
sbb
xchg
gs
js
xlat
xchg
mov
fidivrl
mov
mov
mov
add
ret
in
les
sbb
pusha
dec
cmpsb
jecxz
mov
mov
out
push
push
pop
sub
mov
lea
bound
sub
lock
sbb
or
jl
lret
or
sti
loope
nop
outsl
rcll
dec
and
je
test
fildl
push
decl
pusha
test
fsubr
in
aaa
xlat
pop
jg
cli
or
lods
dec
sub
pop
inc
lock
iret
lock
push
stos
sbb
sbb
sbb
push
je
movsb
sarl
or
dec
mov
sub
jge,pn
push
dec
jg
pop
js
std
mov
ret
lcall
push
shr
fiaddl
test
lret
cwtl
inc
ljmp
cmp
mov
fcomip
jb
xor
push
ljmp
aam
imul
popf
jbe
fsubl
dec
sub
xchg
adc
leave
cli
pop
int3
mov
mov
jecxz
fsubrl
mov
sbb
shlb
jp
pop
popa
jge
imul
mov
repz
addl
int3
ret
jae
or
aam
stos
shrb
xchg
mov
pop
scas
cltd
repz
pushf
movsb
les
jo
inc
cmp
pop
lret
cmp
xorb
mov
pop
shl
or
addl
jae
sbb
arpl
dec
aad
fwait
mov
or
fstpl
into
je
sti
mov
mov
or
pop
xor
adc
test
sub
sub
xor
int
test
lds
out
out
sub
inc
jo
mov
push
stos
mov
mov
stos
mov
jns
xchg
mov
mov
loop
shlb
jbe
jne
pop
mov
cli
pop
mov
jecxz
mov
push
push
cwtl
xor
mov
mov
xor
sub
mov
dec
dec
dec
mov
js
adc
sbb
pop
out
mov
sbb
adc
xor
add
pop
jl
adc
add
adc
xlat
fldl
jno
xor
aad
gs
jnp
gs
pop
dec
mov
jnp
add
xor
icebp
es
jle
mov
xchg
ds
cmp
repz
sarl
jp
icebp
fwait
scas
fiaddl
dec
lea
scas
push
and
pusha
cmpsb
cmpsb
out
inc
mov
popa
stos
xchg
sub
test
popa
cmp
inc
mov
mov
not
add
inc
insb
mov
leave
icebp
pop
out
xor
jnp
add
mov
out
jo
pop
inc
and
aaa
fsubl
push
rorb
inc
sbbb
lret
jle
int
aam
dec
inc
filds
push
inc
dec
push
cli
cmpsl
pushf
xlat
enter
inc
ja
sbb
idivl
movb
loopne
std
fldt
pop
ja
leave
push
sbb
push
adc
icebp
xlat
jae
xor
scas
xor
ret
or
adc
sub
mov
mov
mov
sbb
mov
aaa
scas
inc
xchg
push
inc
sub
jg
enter
jb
incl
xorl
out
jp
es
push
jle
jno
outsb
mov
shll
inc
pusha
mov
push
dec
outsb
inc
xor
mov
out
cmpsb
mov
stos
mov
pop
cwtl
add
push
and
dec
push
pop
cmpsb
scas
jmp
add
push
outsl
mov
mov
inc
ret
shlb
movsb
xchg
movups
lds
cmp
cmp
sbb
push
sbb
stc
xchg
addr16
pop
ret
push
dec
call
test
push
inc
repnz
sbb
cmp
outsb
sub
add
je
mov
pushf
stc
adcl
ret
addl
push
xor
mov
sbbl
xor
and
je
not
mov
daa
xor
and
aas
shrl
cmp
jmp
clc
cmp
loope
nop
push
nop
add
adc
cmp
mov
movsb
dec
pushl
fisttpl
ret
cmp
aas
jl
ja
pshufw
xchg
sbb
addr16
mov
jbe
bound
insb
and
lods
xor
adc
ret
jnp
aam
jae
or
cmp
mov
mov
and
popf
sbb
add
loop
out
push
sahf
int
jno
leave
mov
sbb
in
cmpsb
dec
dec
mov
adc
lcall
test
out
pop
lcall
test
cmc
mov
add
pop
mov
jle
inc
add
xchg
jne
ret
sbb
rclb
add
mov
cmp
fcomp
imul
xorb
pop
das
or
dec
rcrb
gs
push
or
sbb
out
ficompl
mov
push
pop
cmp
lock
lahf
and
mov
rol
pop
dec
adc
xorl
mov
sub
aad
add
std
decl
push
mov
xor
in
mov
mov
scas
out
push
test
cmp
int3
test
adc
add
cmp
ljmp
push
movsb
adc
or
movsb
loop
lods
fimuls
test
in
add
loop
stos
push
leave
cmp
frstor
data16
dec
push
ds
jg
mov
fs
jo
test
jge
outsb
cmp
push
rorb
push
push
add
out
adc
clc
xchg
outsb
mulb
xchg
andb
push
or
inc
fiadds
movsb
out
jp
inc
pop
push
xchg
imul
in
sub
add
xor
test
aam
add
add
xchg
xchg
fdivrp
lret
ss
insl
adc
add
fistpll
mov
dec
nop
xor
ret
pop
hlt
jmp
jo
and
stc
adc
xchg
data16
mov
test
in
mov
cli
mov
call
repz
push
xor
xor
mov
pop
xchg
mov
and
in
or
jmp
jmp
lea
cmp
or
pop
inc
outsl
insb
mov
cmp
or
xchg
mov
leave
sbb
mov
ret
shrl
sub
popl
lcall
dec
repnz
mov
nop
cmpl
bound
xchg
adc
cmp
lods
push
pop
aas
stos
push
cmpsb
aad
jnp
imul
jns
cld
call
mov
fistpl
inc
test
lds
fnsave
aam
ljmp
outsb
push
in
xchg
push
lret
push
xchg
mov
dec
loope
sub
js
js
lret
jle
in
roll
into
cwtl
pop
xor
cmp
out
adc
xorl
dec
sbb
sar
mov
inc
sbbl
xchg
add
push
xchg
pop
sub
push
push
inc
ret
jge
ja
mov
rcrb
mov
ja
int
je
push
jge
add
and
das
test
in
shll
mov
xchg
xor
mov
add
mov
pop
inc
and
fcompl
jecxz
mov
hlt
loop
jno
jnp
pop
in
insl
mov
out
pop
fdivl
test
xor
cmp
testb
stos
leave
imul
push
arpl
xor
stos
mov
push
rorl
adc
cs
pop
xchg
out
repz
dec
cmp
mov
outsb
mov
pop
jae
xchg
jge
mov
punpckhbw
test
sub
lods
gs
stos
and
inc
lret
adc
and
cltd
pushf
fwait
aaa
pop
jae
pop
aad
dec
pop
xor
pop
loope
jns
push
out
cmp
sub
mov
test
nop
dec
icebp
dec
inc
ss
adc
inc
call
daa
test
gs
push
stc
jmp
adc
mov
adc
outsl
aas
lods
jne
ljmp
adc
mov
inc
pushf
add
push
aam
inc
daa
mov
push
ljmp
xchg
mov
aaa
cmpsb
enter
hlt
pop
push
cmpsl
xor
sub
rcrb
sarb
subb
rolb
sbb
or
leave
jecxz
mov
in
mov
xchg
xor
sbb
dec
jl
xchg
and
xchg
jmp
dec
fdivs
test
add
das
xor
fs
push
mov
xor
lret
hlt
aam
cmpsb
outsb
inc
jecxz
xor
rclb
lea
in
fdivrl
cwtl
jno
in
sar
dec
repnz
imul
dec
fs
lock
xor
sti
sbb
mov
xchg
mov
and
mov
out
mov
xchg
into
xor
out
mov
or
mov
dec
mov
mov
xchg
test
fists
adc
inc
jae
pop
jbe
xchg
mov
sbb
cmp
std
adc
out
jmp
cmp
iret
pop
add
dec
or
push
jp
mov
or
test
jo
stos
adc
loopne
adc
and
dec
sbb
mov
ss
lcall
inc
fadd
inc
jno
mov
bound
bound
adc
push
xorb
xchg
movsb
xchg
xchg
in
fcoms
insb
cli
sub
das
in
pop
in
shll
stc
ret
cmp
rcl
xor
mov
test
outsl
cltd
popf
xchg
sub
icebp
mov
je
mov
in
jae
jle
jno
loopne
cld
test
fiaddl
lret
cmpsl
xchg
js
or
xchg
mov
in
pop
jno
sub
loope
lret
push
xchg
lods
pop
jle
xor
fildll
mov
pop
push
jg
or
sbb
sub
out
inc
test
out
pop
cmp
jae
nop
push
mov
inc
ljmp
hlt
ret
pop
test
shl
jne
sub
bound
dec
and
mov
push
insb
jle
adc
mov
pop
or
mov
sbb
cmp
test
imul
xor
sub
jl
movsl
mov
jae
mov
repz
dec
jns
scas
mov
mov
fnstenv
jns
shrl
cmp
jo
jge
imul
ret
dec
jmp
mov
or
notl
jnp
mov
shl
inc
xor
inc
int
xchg
ficoml
pusha
lcall
cld
ljmp
pop
cmpsb
or
or
lods
sub
rcr
fadd
imul
test
jno
into
cmpsb
dec
add
fwait
xorl
jbe
mov
fs
mov
xor
jns
jae
push
lret
popf
push
or
mov
bound
lods
je
pop
sbb
sub
inc
fdivr
stc
lret
es
frstor
adc
mov
fwait
cmp
jnp
les
mov
sub
daa
fisttpl
ret
jae
mov
pusha
adc
rcrl
decb
jne
jns
adc
scas
mov
testl
test
mov
adc
sbb
sbb
nop
dec
adc
jmp
ret
into
iret
lahf
iret
sub
dec
sti
stos
mov
pop
cmpl
pop
sub
stos
outsl
adc
shll
scas
and
test
flds
das
sbb
nop
outsb
popw
jmp
bound
fs
les
popa
sub
popa
and
into
xchg
loop
ljmp
testb
lret
mov
inc
out
mov
sub
je
arpl
fdivl
nop
lea
and
aad
cmpsl
push
cmp
and
stos
in
repz
dec
inc
and
or
jge
lods
cltd
jns
mov
rclb
gs
out
xor
stos
lods
adc
sub
and
shl
in
inc
jno
or
sbb
jecxz
call
gs
mov
punpckhdq
adc
lods
sub
jg
cld
arpl
cmp
aas
cmpb
repnz
or
mov
insb
rcll
es
out
push
cld
mov
in
lret
cmp
cmc
arpl
add
and
dec
fwait
inc
mov
cmpsb
adc
sbb
cmp
aam
sbbl
nop
out
pop
add
pop
test
push
dec
or
adc
mov
inc
dec
sbb
int3
xor
cld
orl
pop
inc
mov
mov
mov
sub
push
mov
xchg
int3
pop
fstpl
jle
mov
mov
sbb
push
test
and
lret
js
cmp
and
insl
fsubrp
adc
lret
pop
movsb
cmp
cmpsb
xor
jmp
lock
sub
mov
sbb
aad
xor
ljmp
jp
pop
jecxz
push
orb
cwtl
mov
mov
fcompl
repz
sub
pushf
mov
loopne
fnstcw
jno
sub
test
jmp
addb
btc
add
jae
pop
and
mov
rcll
data16
add
dec
mov
dec
or
pop
and
dec
fistpll
sbb
out
out
in
pop
pop
in
inc
xchg
push
cmp
sub
pop
sahf
or
ret
mov
sbb
sub
mov
cld
pop
push
mov
cmc
popa
addr16
cs
lret
cli
push
cmp
dec
adc
adc
lcall
repnz
stos
inc
inc
cmp
lret
into
sbb
xor
push
pop
add
adc
mov
inc
out
enter
xor
gs
cmp
sbb
ds
jbe
or
pop
jmp
lods
sub
or
lods
mov
imul
dec
mov
push
dec
push
ja
test
out
push
gs
add
cmp
je
jl
add
push
shl
pop
push
push
mov
loopne
add
pop
cmpsl
jns
pushf
test
stos
je
das
cmp
sbb
cmpsl
mov
repnz
fisubrs
sbb
js
cmc
mov
daa
imul
sbb
daa
fcomp
ds
xchg
fwait
inc
in
insl
imul
jne
test
and
out
cmp
mov
sbb
mov
ret
sbb
subl
push
faddl
enter
adc
arpl
test
pop
pop
xorb
cmpsb
sarb
inc
sub
xchg
out
sbb
mov
xchg
test
inc
dec
jbe
mov
mov
xchg
mov
es
mov
icebp
fists
fiaddl
jns
mov
je
adc
shrb
sbb
out
or
call
cmpsb
and
adc
aaa
fst
sbb
aad
shll
cmp
imul
pop
xchg
and
mov
ficoms
sub
aas
test
into
jbe
or
loope
popa
mov
rcll
push
dec
pop
xor
sub
popa
flds
add
sbb
jge
or
inc
cmc
or
pop
or
cmp
cli
out
je
aad
sahf
mov
outsb
outsl
cmpsb
mov
shll
ficomps
push
iret
std
or
sbbl
xlat
ds
pop
imul
int3
xor
mov
icebp
jmp
xchg
rcr
fmuls
mov
adc
movsb
mov
xlat
sysexit
xor
lret
imul
pop
pop
ja
inc
cltd
xor
ds
enter
outsb
push
mov
sbb
inc
cmc
jmp
daa
aam
lock
adc
push
jbe
fmuls
mov
stc
cmp
pop
jb
cmp
outsl
in
stc
push
test
sbb
scas
push
bound
xor
rcrl
dec
dec
sub
sbb
mov
arpl
xor
sbb
aaa
push
std
mov
add
in
jg
ret
mov
add
push
and
or
xchg
dec
ljmp
fmuls
dec
dec
lea
dec
jno
lahf
xchg
jle
mov
lods
jle
imul
inc
movsb
push
stos
inc
mov
and
and
jle
pop
mov
jne
inc
mov
mov
in
insb
cmp
push
shll
inc
addr16
push
hlt
enter
cmpsl
pop
or
add
es
inc
push
sub
jp
push
addb
sub
add
movlps
outsb
clc
insb
in
mov
sbb
jbe
dec
push
js
cmp
adc
stc
cli
mov
pop
and
into
jae
jge
mov
push
pop
clc
incl
jns
jg
pop
mov
loope
ss
pop
imul
sbb
lcall
jae
andb
lcall
inc
popf
and
xor
add
cld
std
sbb
test
ljmpw
pop
dec
inc
gs
adc
sbb
rorl
dec
shlb
call
xor
in
dec
cmp
clc
xor
ljmp
leave
mov
jne
lods
xchg
out
ja
cmp
inc
ret
gs
pop
mov
arpl
mov
int3
push
and
aas
push
popa
fs
push
xchg
push
inc
loope
or
mov
aas
sbb
sbb
mov
fs
push
das
pop
sub
cmp
stos
sbb
or
mov
cld
push
rcrl
lods
xchg
iret
xchg
fimuls
adc
pop
data16
shl
mov
sub
out
insl
lcall
add
push
inc
rclb
pop
lcall
ss
mov
mov
mov
imul
mov
adc
lds
hlt
sbb
cmp
or
ss
push
xchg
je
inc
or
shl
rolb
push
cmc
jne
lret
dec
adc
call
jecxz
jbe
aam
or
daa
xor
into
lds
inc
dec
in
ss
pop
push
leave
fildll
movsb
test
mov
rclb
ja
cmp
out
adc
xor
jae
ljmp
stos
lds
gs
test
sbb
push
test
cld
sub
enter
adc
lret
inc
ss
adc
ret
call
insb
test
test
fcomi
push
dec
repz
mov
lds
test
ss
in
push
mov
jo
xor
arpl
int3
lret
pop
cmp
push
orb
jecxz
jne
std
jnp
jo
adc
dec
push
mov
jecxz
stos
cmp
add
jl
lock
xorb
mov
testb
xor
lret
jns
dec
or
xor
push
xchg
popa
out
pop
mov
mov
outsb
pop
mov
arpl
xchg
out
testb
cli
fidivs
adc
or
in
fwait
mov
mov
sub
jo
mov
ja
imulb
jbe
pop
inc
xor
push
or
je
inc
push
ja
ljmp
sti
testl
rolb
or
push
test
fwait
inc
jnp
and
outsl
adc
inc
push
popa
mov
mov
adc
mov
jecxz
test
les
testl
orl
pop
mov
mov
dec
pop
pop
dec
scas
rorb
push
js
leave
pop
rolb
stos
int
adc
sub
leave
imul
mov
fwait
pusha
adc
ret
jmp
pop
clc
int
push
fsub
pushf
je
rclb
subb
mov
dec
data16
rcr
xchg
xchg
insl
fnstsw
addr16
xor
out
fisubrs
jbe
mov
into
inc
bound
cmp
xor
jg
jp
fcomip
inc
push
adc
ds
dec
sti
sbb
je
mull
cltd
cmpsb
pop
arpl
mov
int
clc
push
mov
popf
jne
dec
cvttps2pi
xor
movsl
jo
add
sbb
lea
jge
fists
imull
fmulp
or
mov
fsubrs
pop
jns
and
jb
jle
imul
and
add
pop
popf
cli
or
dec
xor
es
lods
imul
push
dec
lock
jge
lods
lcall
mov
adc
fdivrs
aas
pop
jo
cmp
sti
mov
mov
inc
and
mov
dec
mov
daa
push
int3
sbb
add
fadd
jp
jbe
outsl
inc
mov
add
aam
fdecstp
decl
out
aad
lock
inc
mov
test
mov
adc
shll
std
clc
imull
sub
fdivl
sub
jnp
sub
xor
stc
ret
stos
mov
xchg
cmp
das
mov
test
jp
dec
sbb
xchg
mov
movsb
sbb
mov
outsl
push
test
int
push
cli
ss
mov
xor
pop
or
and
mov
sub
notl
testl
mov
jbe
xlat
lea
xchg
lret
jno
add
jg
shl
xchg
inc
in
js
or
dec
dec
add
mov
mov
scas
setbe
jle
mov
stos
imul
cmpb
dec
fnsave
mov
mov
dec
lret
pop
or
sbb
test
mov
mov
icebp
movb
in
jb
ret
fnsave
pusha
je
aaa
xchg
pop
push
mov
xor
sbb
push
push
testl
in
xchg
repz
push
scas
xor
xchg
push
xchg
mov
mov
cld
fistl
int3
xchg
frstor
adc
sbb
dec
outsl
cs
mov
add
xor
mov
fs
loop
xchg
mov
outsl
into
das
adcb
outsb
fnstsw
sahf
inc
inc
inc
dec
jmp
inc
push
and
sub
push
push
cmp
fwait
jbe
dec
or
rcrb
jb
lods
call
mov
cmp
sbb
cmp
fxtract
xor
test
out
lods
cli
xorb
bswap
inc
push
sub
fisttpll
jg
outsl
imul
mov
dec
or
add
xchg
call
cwtl
mov
add
push
mov
jb
fisttpll
lock
cmp
aaa
out
imul
jo
fnstenv
imul
cmp
or
fnsave
add
adc
adc
push
shll
sarb
jp
push
push
mov
cmpsl
jmp
lods
sbbl
out
jae
je
movsl
ljmp
call
push
repnz
aaa
xor
out
jno
gs
sahf
inc
cmp
jbe
adc
push
in
pop
inc
xorl
mov
divb
test
sbb
mov
adc
jbe
mov
pushf
adc
rcrb
pop
test
out
xlat
cmpsb
jmp
clc
fisttpl
cmpsl
iret
popf
lds
fwait
add
sbb
outsb
inc
clc
dec
push
out
jp
push
mov
in
mov
dec
nop
mov
cmp
lods
push
jecxz
test
cmp
sub
xor
sub
negl
sub
xchg
or
cltd
lret
jg
bound
data16
mov
in
scas
ss
out
add
mov
loopne
outsb
out
iret
sbb
loopne
dec
shll
or
mov
fwait
dec
nop
or
ret
ljmp
mov
arpl
fldcw
xchg
out
movb
mov
sub
daa
into
push
xor
inc
test
add
cmpsl
icebp
adc
in
sbb
outsb
jno
cmp
and
test
push
add
xor
std
dec
jo
pop
adc
or
in
mov
lcall
test
cld
mov
cmpsl
shl
cmp
call
xor
js
lahf
into
xchg
sbb
sti
cmp
add
and
push
mov
cwtl
mov
mov
push
jmp
sti
adc
inc
pop
sbb
pop
lods
jnp
punpckldq
xchg
popa
xchg
adc
dec
cmp
mov
pop
mov
daa
jmp
adc
fnstcw
ret
adc
add
sbb
push
arpl
pop
enter
or
mov
sbb
sbb
dec
iret
push
sbb
inc
aaa
jmp
xor
pop
mov
cs
xor
mov
and
aam
call
inc
inc
add
push
jae
inc
fdivl
mov
push
outsl
pop
dec
mov
ljmp
mov
rolb
pop
xchg
shll
inc
dec
mov
cltd
loopne
pop
pop
and
insb
movsl
in
inc
sarb
test
jbe
xchg
xchg
and
in
mov
dec
push
movsl
mov
push
ja
push
lods
jg
jecxz
iret
test
repz
mov
mov
imulb
sub
lahf
pop
xchg
dec
xchg
add
pop
xchg
andl
jbe
mov
or
mov
xor
in
mov
jp
pop
dec
adc
fcomi
pop
xchg
mov
shlb
fsubrs
faddl
xor
bound
push
pop
arpl
pop
popf
or
cmp
aaa
fnstsw
scas
aaa
mov
xchg
loop
jle
and
mov
imul
mov
and
dec
leave
xor
popl
inc
add
mov
jge
inc
mov
xchg
cmp
inc
mov
sub
test
loopne
repnz
sti
fdivrl
or
stos
or
mov
adc
jne
adc
jbe
pop
outsl
flds
enter
lock
xchg
das
fs
mov
icebp
xchg
enter
xchg
cmp
imul
cmp
xchg
std
mov
mov
ljmp
mov
adc
into
add
and
jnp
push
inc
test
aad
mov
fidivs
test
sub
insb
out
sub
mov
cmp
out
dec
sub
es
or
cmpsl
jecxz
daa
cmpsb
in
cltd
mov
insb
inc
push
adc
jge
cmc
loop
xor
mov
push
mov
gs
aas
cmp
or
inc
leave
and
jnp
cmpsl
jge
adc
outsb
sbb
jbe
mov
sbb
pushf
ljmp
into
add
dec
or
jb
addr16
push
xchg
sbb
xorb
inc
dec
and
cltd
xchg
jo
je
lret
mov
shrb
arpl
cmp
push
mov
dec
sti
aam
lret
jle
jmp
sbb
push
mov
movsl
aad
jp
loop
sub
mov
rorl
or
adc
cld
inc
add
or
sub
add
mov
mov
xor
add
jne
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
mov
mov
xor
lea
mov
mov
xor
add
jne
jmp
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
mov
xor
mov
add
mov
pop
pop
pop
leave
ret
add
inc
add
mov
inc
add
mov
inc
add
mov
inc
add
rolb
add
inc
add
rolb
or
inc
add
rolb
adc
inc
add
rolb
sbb
inc
rcr
xor
add
add
add
add
into
add
inc
ret
add
inc
add
nop
inc
add
inc
add
nop
inc
add
inc
add
nop
inc
add
inc
add
nop
inc
add
inc
add
nop
inc
add
mov
add
inc
add
mov
add
inc
add
mov
add
inc
add
mov
add
inc
add
rolb
rolb
rolb
rolb
rolb
rolb
rolb
rolb
add
add
add
add
inc
push
sti
xor
mov
aas
xchg
hlt
les
inc
cmp
jb
outsb
je
popa
je
pop
dec
outsl
imul
insb
imul
dec
gs
mov
sub
push
push
mov
xchg
mov
mov
cmp
jne
mov
cmp
jne
mov
mov
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
push
movb
movb
push
movb
movb
xor
pop
mov
lea
movzbl
xor
add
inc
mov
cmp
jb
xor
lea
movzbl
xor
add
inc
mov
cmp
jb
xor
lea
movzbl
xor
add
inc
mov
cmp
jb
lea
mov
mov
mov
mov
mov
cmp
jne
mov
movl
mov
mov
xor
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
lea
mov
mov
mov
lea
mov
add
mov
lea
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
lea
push
mov
movl
movl
lea
pop
mov
xor
sub
mov
inc
dec
jne
lea
mov
lea
push
mov
mov
xor
add
push
mov
add
push
mov
mov
movl
pushl
mov
call
mov
xor
add
mov
cmp
jne
mov
or
mov
add
mov
mov
mov
mov
mov
mov
mov
lea
mov
add
mov
lea
mov
add
mov
lea
mov
mov
mov
mov
lea
mov
mov
mov
mov
add
mov
mov
add
mov
lea
mov
add
mov
mov
mov
mov
movzwl
xor
add
xor
mov
mov
movzwl
xor
add
xor
mov
xor
mov
mov
mov
lea
lea
movl
mov
call
mov
lea
push
mov
xor
add
push
lea
push
pushl
mov
call
mov
lea
lea
mov
call
mov
mov
pushl
pushl
pushl
pushl
pushl
pushl
pushl
call
test
je
add
pushl
lea
call
mov
mov
mov
xor
add
mov
jne
mov
mov
pushl
mov
call
jmp
mov
mov
add
pop
pop
pop
leave
ret
push
push
push
push
mov
mov
add
push
cld
mov
add
push
mov
lods
xchg
push
mov
or
shl
not
push
mov
or
shl
not
push
add
mov
sub
sub
inc
push
push
push
push
push
push
sub
push
or
mov
shl
lea
mov
shr
rep
push
pop
call
loop
lea
lea
mov
mov
sub
and
mov
mov
call
jne
mov
and
shl
sub
neg
shr
pop
add
pop
lea
shl
cmp
pop
lea
push
push
mov
push
mov
jb
mov
sub
movzbl
mov
shl
mov
and
add
lea
call
mov
shr
and
cmp
mov
jne
cmp
jb
jmp
mov
call
inc
inc
sub
sub
cmp
jb
pop
inc
cmp
dec
mov
jb
inc
cmp
dec
mov
dec
jb
mov
dec
sub
push
jmp
mov
dec
call
jne
pop
pop
pop
pop
pop
pop
pushl
push
push
mov
mov
jmp
mov
dec
call
jne
mov
dec
call
jne
pop
cmp
mov
jb
mov
push
mov
sub
cmp
jb
lods
mov
stos
jmp
mov
call
mov
je
mov
call
mov
je
mov
mov
mov
mov
mov
mov
mov
mov
pop
pop
pop
mov
mov
add
push
push
cmp
mov
jb
add
push
mov
call
jne
mov
mov
shl
sub
push
pop
lea
jmp
mov
add
call
jne
mov
mov
shl
push
pop
push
pop
lea
jmp
mov
add
push
pop
mov
mov
sub
inc
mov
call
mov
sub
jb
add
cmpl
jae
addl
mov
cmp
jb
push
pop
mov
shl
sub
inc
push
pop
lea
mov
call
mov
sub
jb
mov
mov
cmp
jb
mov
andl
shr
orl
dec
cmp
jae
mov
sub
mov
shlb
add
shl
add
mov
jmp
sub
call
shr
shll
cmp
jb
incl
sub
dec
jne
mov
add
mov
shll
push
pop
sub
inc
mov
mov
call
test
je
or
shl
dec
jne
jmp
incl
mov
add
mov
mov
sub
cmp
ja
mov
sub
mov
lods
stos
cmp
jae
dec
jne
mov
movzbl
cmp
jb
call
sub
lea
mov
mov
sub
mov
mov
mov
sub
mov
leave
pop
pop
pop
ret
pop
pop
sub
inc
jmp
cmp
jb
ret
shl
push
mov
cmp
jae
mov
shl
lods
mov
mov
pop
ret
mov
movzbl
shl
add
add
jmp
movzbl
add
mov
lea
sub
lea
cmp
jae
mov
shll
cmp
jae
mov
incl
shl
mov
mov
movzwl
shr
imul
cmp
jae
mov
mov
sub
shr
add
add
lea
ret
shr
sub
sub
sub
add
add
lea
ret
push
mov
sub
push
push
push
movl
movl
mov
mov
mov
mov
xor
mov
add
mov
mov
xor
add
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
movl
push
pop
mov
mov
push
pop
mov
mov
movl
movl
mov
xor
add
mov
mov
xor
add
mov
movl
movl
movl
lea
lea
call
decl
jne
decl
jne
decl
jne
movl
mov
xor
mov
add
mov
mov
andl
xor
add
mov
mov
mov
mov
mov
mov
mov
mov
lea
mov
mov
lea
mov
mov
pushl
lea
mov
call
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
add
mov
mov
lea
push
mov
mov
mov
add
push
pushl
push
call
pushl
mov
mov
mov
movl
movl
movw
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
call
push
mov
mov
pushl
call
test
jne
mov
mov
mov
add
mov
mov
mov
call
push
mov
call
test
jne
mov
mov
mov
add
mov
mov
mov
call
push
mov
call
mov
mov
xor
add
cmp
je
mov
xor
mov
sub
add
mov
cmp
ja
movl
pushl
mov
mov
mov
call
push
mov
mov
pushl
call
mov
mov
mov
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
mov
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
andl
mov
and
add
push
call
test
jne
and
jmp
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
mov
incl
cmpl
jb
mov
mov
xor
mov
add
lea
call
push
mov
mov
xor
add
lea
call
push
call
mov
xor
add
cmp
jne
movl
mov
mov
xor
lea
mov
mov
test
je
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
cmp
jbe
mov
mov
mov
cmp
jne
pushl
lea
push
call
mov
jmp
mov
mov
xor
add
xor
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
je
mov
xor
add
jmp
mov
mov
and
or
sub
add
mov
xor
lea
mov
cmp
jb
mov
mov
mov
movl
mov
mov
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
jmp
mov
mov
sub
mov
xor
add
xor
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
movl
mov
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
mov
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
push
mov
mov
xor
add
push
call
mov
mov
xor
add
cmp
je
mov
jmp
mov
xor
mov
mov
mov
xor
lea
xor
mov
sub
xor
cmp
jne
mov
mov
mov
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
mov
mov
mov
mov
xor
add
movl
movl
jmp
mov
mov
xor
mov
movsbl
xor
sub
movzbl
cmp
jne
mov
xor
lea
xor
cmp
jne
jmp
mov
xor
add
mov
xor
add
cmp
je
mov
mov
movl
movl
movl
movl
mov
mov
mov
xor
add
push
mov
mov
xor
add
push
mov
xor
add
push
mov
xor
add
push
call
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
mov
pushl
xor
add
push
call
mov
xor
add
mov
cmp
je
mov
xor
add
cmp
je
movl
movl
mov
xor
sub
mov
mov
xor
sub
mov
mov
xor
sub
mov
andl
andl
lea
push
pushl
push
lea
push
mov
pushl
mov
add
push
push
call
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
push
call
mov
add
xor
cmp
mov
mov
mov
jne
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
mov
jmp
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
movl
mov
mov
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
jmp
mov
mov
sub
mov
xor
add
xor
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
movl
mov
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
pushl
mov
pushl
lea
push
mov
mov
pushl
mov
mov
pushl
pushl
pushl
call
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
xor
add
push
mov
xor
add
push
pushl
call
pop
pop
pop
leave
ret
push
mov
push
push
lea
mov
push
mov
mov
mov
mov
cmp
pop
jne
movb
movb
movb
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
mov
movb
movb
movb
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
movb
mov
movb
movb
leave
ret
push
mov
push
push
lea
mov
push
mov
mov
mov
mov
cmp
pop
jne
movb
movw
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
mov
movb
movb
movb
leave
ret
push
mov
call
mov
mov
movb
call
push
mov
movb
call
push
movb
call
movb
mov
jmp
push
mov
push
mov
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
movl
mov
movzwl
xor
add
pop
test
je
mov
movl
leave
ret
push
mov
sub
andl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
push
mov
mov
mov
mov
mov
push
mov
test
jne
pushl
mov
call
mov
mov
add
mov
mov
mov
mov
xor
mov
add
cmp
jne
mov
mov
mov
mov
mov
mov
xor
add
mov
mov
andl
xor
add
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
movl
pushl
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
lea
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
movl
pushl
mov
call
test
je
andl
cmpl
jbe
mov
mov
sub
mov
incl
mov
mov
inc
cmp
jb
mov
mov
add
mov
mov
add
sub
add
mov
mov
mov
movl
jmp
add
shr
mov
je
lea
mov
mov
mov
mov
movzwl
mov
and
mov
mov
shr
add
xor
cmp
jne
mov
add
mov
cmpl
je
mov
add
mov
mov
mov
mov
addl
decl
jne
mov
add
mov
cmp
jae
add
mov
mov
test
jne
mov
mov
movl
mov
mov
mov
xor
add
mov
lea
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
mov
call
mov
mov
add
mov
pushl
mov
pushl
pushl
call
mov
add
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jb
mov
mov
mov
lea
mov
add
cmp
jae
mov
mov
mov
sub
add
mov
mov
jmp
xor
pop
pop
pop
leave
ret
push
mov
sub
push
mov
mov
cmpl
je
test
je
test
je
mov
test
je
cmpl
je
cmp
je
mov
andl
mov
sub
add
movzwl
mov
movzwl
add
je
lea
push
mov
mov
push
test
je
mov
andl
and
add
movzwl
movzwl
add
je
lea
mov
test
je
mov
andl
and
add
movzwl
movzwl
add
je
lea
mov
mov
mov
test
je
mov
add
movzwl
movzwl
incl
addl
add
cmp
jb
movzwl
movzwl
mov
incl
add
add
mov
cmp
jb
mov
movzwl
movzwl
incl
add
add
mov
cmp
jb
pop
pop
xor
inc
jmp
xor
pop
leave
ret
push
mov
mov
mov
sub
push
xor
push
push
cmp
je
cmp
je
cmp
jne
xor
inc
jmp
mov
add
mov
mov
mov
mov
add
add
mov
cmp
ja
mov
mov
cmp
jbe
cmp
jae
movzwl
jmp
mov
lea
mov
test
je
add
mov
cmp
jbe
mov
mov
add
cmp
jae
mov
jmp
sub
mov
mov
test
je
mov
inc
mov
cmp
jb
jmp
xor
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
movl
mov
mov
mov
mov
mov
mov
push
mov
push
mov
movl
mov
mov
push
mov
xor
xor
add
add
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
je
add
mov
mov
xor
add
mov
mov
cmp
je
mov
mov
imul
xor
add
cmp
jne
mov
mov
imul
xor
add
cmp
je
mov
mov
mov
imul
add
mov
add
xor
mov
mov
mov
xor
add
xor
mov
mov
add
add
cmp
je
add
mov
mov
xor
add
mov
lea
mov
movl
mov
pushl
mov
call
mov
xor
add
mov
cmp
jne
mov
pushl
mov
call
mov
movl
movl
mov
xor
add
cmp
jne
mov
mov
xor
xor
lea
mov
mov
add
imul
push
call
mov
xor
add
cmp
jne
mov
xor
add
cmp
jbe
mov
xor
add
cmp
jne
mov
mov
xor
lea
mov
jmp
movl
movl
mov
xor
add
jmp
mov
xor
add
mov
mov
xor
add
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
mov
xor
add
cmp
je
mov
mov
xor
add
shr
cmp
je
mov
mov
mov
movzwl
push
pushl
call
jmp
mov
add
mov
mov
add
push
pushl
call
mov
mov
mov
xor
add
cmp
mov
jne
mov
xor
lea
mov
jmp
mov
xor
add
imul
mov
mov
mov
xor
lea
mov
mov
xor
add
cmp
jne
mov
mov
mov
sub
xor
jmp
mov
xor
add
cmp
mov
jne
mov
jmp
mov
xor
add
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
mov
mov
push
mov
mov
mov
mov
xor
mov
add
cmp
je
mov
mov
add
push
mov
movl
mov
mov
mov
xor
xor
add
cmp
je
mov
mov
add
mov
mov
sub
mov
xor
add
mov
cmp
je
mov
xor
add
mov
push
movl
jmp
mov
xor
lea
add
shr
cmp
jae
sub
lea
mov
movzwl
and
mov
mov
mov
sub
add
movzwl
shr
xor
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
cmp
jne
mov
mov
add
add
decl
jne
mov
add
mov
mov
mov
xor
cmp
jae
add
mov
mov
xor
add
mov
cmp
jne
pop
mov
pop
jmp
mov
xor
add
pop
leave
ret
push
mov
sub
movl
movl
mov
push
push
mov
xor
push
mov
add
mov
mov
xor
add
mov
mov
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
mov
test
je
mov
test
je
mov
test
je
mov
mov
xor
mov
add
mov
cmp
jne
mov
xor
add
mov
mov
mov
mov
add
mov
mov
test
je
movl
mov
xor
add
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
cmp
jne
mov
lea
push
mov
xor
add
push
pushl
pushl
call
mov
mov
mov
sub
add
push
call
mov
mov
mov
mov
pushl
pushl
push
call
mov
mov
add
movzwl
lea
mov
mov
movzwl
xor
add
mov
cmp
je
mov
xor
add
mov
mov
movzwl
xor
sub
sub
cmp
ja
mov
add
mov
jmp
mov
mov
lea
mov
mov
test
je
not
and
add
mov
add
push
call
mov
mov
mov
xor
add
cmp
je
push
mov
add
mov
add
push
push
call
mov
mov
mov
add
xor
lea
mov
mov
mov
movzwl
xor
sub
mov
sub
mov
cmp
jbe
mov
mov
cmp
jne
mov
lea
push
mov
xor
add
push
mov
pushl
push
call
test
je
mov
mov
mov
xor
add
je
andl
andl
mov
lea
movl
movl
mov
mov
mov
movl
mov
mov
xor
mov
add
mov
incl
cmpl
mov
jb
mov
mov
mov
mov
mov
lea
mov
mov
mov
movl
mov
mov
movl
movl
movl
movl
movl
mov
movl
mov
movl
mov
movl
mov
movl
movl
xor
mov
xor
sub
mov
inc
cmp
jb
mov
lea
push
call
mov
lea
push
push
call
lea
push
mov
pushl
call
mov
test
je
mov
jmp
mov
mov
cmp
je
mov
mov
cmp
jne
mov
mov
cmp
jne
mov
mov
mov
add
mov
mov
push
push
pushl
call
test
je
pushl
mov
pushl
call
test
je
mov
mov
mov
call
test
je
push
pushl
call
test
je
mov
mov
cmp
jne
mov
lea
push
pushl
mov
pushl
push
call
mov
mov
mov
xor
add
je
mov
mov
movl
mov
pushl
xor
pushl
add
or
add
push
call
movl
jmp
mov
mov
add
call
mov
mov
mov
mov
movl
cmpl
jne
andl
mov
jmp
xor
pop
pop
pop
leave
ret
push
mov
movzwl
movzwl
push
push
xor
lea
test
je
mov
lea
cmp
jb
mov
add
add
cmp
jb
add
inc
cmp
jb
xor
pop
pop
pop
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
mov
xor
push
mov
mov
add
push
cmp
je
mov
mov
xor
add
cmp
je
mov
xor
add
mov
mov
xor
add
mov
mov
mov
mov
xor
mov
xor
add
add
sub
mov
jmp
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
mov
mov
je
cmp
je
mov
mov
xor
add
cmp
jb
mov
mov
xor
add
cmp
ja
movzwl
movzwl
add
mov
mov
mov
xor
add
cmp
jb
mov
mov
xor
add
cmp
ja
movzwl
movzwl
add
mov
mov
mov
cmp
jne
mov
mov
xor
lea
mov
mov
mov
xor
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
imul
mov
jmp
mov
mov
xor
lea
mov
mov
sub
xor
mov
mov
sub
xor
mov
mov
mov
xor
add
xor
add
imul
mov
movzwl
mov
mov
xor
add
xor
add
imul
mov
movzwl
sub
sub
xor
xor
cmp
jne
mov
mov
xor
add
xor
add
imul
mov
movzwl
mov
sub
xor
cmp
mov
je
mov
pop
xor
pop
add
pop
leave
ret
push
mov
push
mov
push
mov
sub
mov
xor
mov
movl
mov
cmp
je
push
push
movzwl
mov
mov
mov
cmp
jne
mov
lea
xor
mov
xor
mov
mov
sub
mov
xor
mov
cmp
jne
mov
pop
pop
cmp
je
xor
lea
pop
leave
ret
push
mov
push
push
push
movl
mov
call
mov
mov
add
xor
cmp
je
mov
mov
mov
push
mov
mov
sub
mov
xor
mov
cmp
jne
mov
lea
xor
mov
xor
lea
mov
add
xor
cmp
jne
mov
pop
cmp
je
xor
xor
mov
mov
pop
pop
leave
ret
push
mov
push
push
movl
mov
call
mov
mov
sub
mov
xor
mov
cmp
je
push
push
movzwl
mov
mov
mov
cmp
jne
mov
lea
xor
mov
xor
mov
mov
sub
mov
xor
mov
cmp
jne
cmpl
pop
pop
je
xor
inc
jmp
xor
pop
leave
ret
push
mov
push
mov
movzwl
push
lea
mov
push
xor
mov
mov
cmp
je
mov
sub
mov
jmp
mov
mov
add
movzwl
mov
add
xor
mov
cmp
jne
xor
pop
mov
mov
pop
leave
ret
push
mov
sub
movl
movl
mov
xor
add
mov
movl
movl
movl
mov
xor
mov
lea
mov
xor
add
mov
imul
cmp
jae
mov
mov
sub
mov
xor
add
cmp
jbe
mov
add
mov
add
mov
mov
mov
mov
mov
xor
mov
lea
mov
jmp
mov
mov
sub
mov
xor
add
cmp
jbe
mov
add
mov
add
mov
mov
mov
xor
mov
lea
mov
jmp
mov
mov
sub
mov
xor
add
cmp
jbe
mov
add
mov
add
mov
mov
mov
xor
mov
lea
mov
jmp
mov
add
mov
add
mov
mov
mov
inc
mov
jmp
leave
ret
push
mov
sub
movl
push
mov
movl
mov
mov
xor
mov
add
cmp
je
push
push
mov
mov
xor
mov
sub
add
lea
xor
mov
mov
mov
xor
sub
xor
mov
mov
xor
add
cmp
jne
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
mov
mov
mov
push
push
mov
xor
mov
add
cmp
mov
jne
xor
add
jmp
mov
xor
add
cmp
jne
mov
jmp
lea
mov
mov
mov
mov
xor
add
mov
mov
push
call
mov
mov
mov
jmp
mov
sub
mov
mov
mov
call
mov
pushl
mov
call
mov
xor
add
cmp
jne
mov
call
mov
xor
add
push
pushl
mov
call
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
add
cmp
jne
mov
xor
add
pop
pop
pop
leave
ret
mov
mov
jmp
push
mov
mov
sub
cmpl
push
push
push
je
test
je
movzwl
mov
mov
xor
and
mov
xor
add
mov
andl
xor
push
pop
cmp
jae
lea
xor
movzwl
mov
lea
cmp
jne
movzwl
mov
cmp
jne
mov
movzwl
cmpb
je
mov
movzwl
movsbw
mov
sub
xor
cmp
je
push
pop
incl
mov
cmp
jb
jmp
incl
push
pop
mov
movzwl
cmpb
je
inc
cmp
jne
xor
pop
pop
pop
leave
ret
mov
add
xor
xor
cmp
sete
jmp
push
mov
sub
push
mov
mov
cmpl
jne
xor
jmp
pushl
push
pop
call
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
push
mov
mov
call
push
mov
pushl
call
mov
test
je
mov
push
push
mov
add
mov
mov
mov
mov
add
mov
mov
add
add
mov
mov
mov
cmp
ja
mov
xor
mov
cmp
jbe
jmp
mov
mov
movzwl
cmp
jae
cmp
jae
mov
mov
mov
mov
lea
add
add
sub
movl
mov
mov
cmpl
jne
mov
pushl
push
call
mov
test
je
mov
mov
mov
addl
decl
jne
mov
inc
mov
cmp
jb
pop
pop
pop
leave
ret
push
mov
mov
push
pushl
lea
mov
call
mov
mov
mov
xor
cmp
pop
setne
mov
pop
ret
mov
push
jmp
xor
add
mov
add
add
movzwl
mov
cmp
jne
xor
mov
mov
pop
ret
push
mov
mov
shl
add
jmp
xor
sub
mov
inc
inc
mov
cmp
jne
movb
mov
add
pop
ret
push
mov
sub
push
mov
mov
lea
push
mov
mov
mov
mov
push
xor
mov
add
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
movl
mov
mov
mov
movl
mov
mov
xor
mov
sub
add
mov
movl
jmp
mov
mov
xor
xor
lea
mov
xor
div
mov
mov
xor
xor
sub
cmp
jne
mov
add
mov
mov
mov
xor
xor
add
add
cmp
jae
lea
mov
mov
xor
add
lea
mov
mov
cmp
jbe
addl
jmp
addl
mov
xor
inc
incl
add
cmp
jb
mov
mov
test
jne
xor
sub
jmp
mov
xor
mov
sub
add
mov
xor
sub
ror
xor
mov
add
mov
mov
mov
sub
xor
cmp
jne
mov
mov
xor
xor
sub
sub
xor
mov
mov
xor
mov
sub
add
jmp
mov
xor
mov
sub
add
mov
mov
cmp
jne
mov
jmp
mov
xor
add
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
mov
mov
movl
push
push
movl
mov
mov
mov
xor
mov
xor
add
add
imul
jmp
mov
mov
xor
xor
add
add
test
mov
mov
je
xor
xor
add
add
shr
mov
xor
add
xor
jmp
xor
xor
add
add
shr
mov
mov
xor
lea
mov
mov
xor
xor
sub
cmp
jbe
mov
pop
mov
mov
pop
leave
ret
push
mov
sub
movl
movl
movl
push
movl
mov
push
mov
push
xor
mov
add
mov
movl
movl
movl
mov
mov
mov
xor
xor
add
add
imul
jmp
mov
sub
xor
mov
lea
call
mov
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
xor
sub
mov
cmp
jbe
mov
xor
add
mov
movl
mov
jmp
mov
mov
xor
add
shr
mov
mov
mov
mov
mov
mov
movzbl
xor
mov
mov
mov
xor
add
and
mov
mov
xor
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
pop
pop
xor
pop
leave
ret
push
mov
mov
mov
mov
mov
mov
sub
push
push
push
mov
xor
mov
add
cmp
jne
orl
jmp
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
sub
mov
mov
mov
mov
dec
test
mov
je
mov
mov
mov
dec
not
and
mov
mov
add
jmp
mov
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
xor
add
mov
mov
movl
movl
movl
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jae
mov
xor
add
mov
mov
add
mov
pushl
mov
mov
call
mov
movl
mov
xor
lea
add
push
call
mov
test
je
mov
xor
add
push
pushl
lea
push
call
mov
mov
mov
mov
sub
mov
mov
mov
mov
add
mov
cmp
jb
mov
mov
mov
add
mov
sub
jmp
push
pushl
lea
push
call
mov
mov
movl
movl
movl
lea
mov
lea
mov
lea
mov
lea
mov
mov
xor
add
mov
jmp
cmp
je
mov
xor
mov
add
mov
mov
xor
lea
mov
mov
mov
xor
add
cmp
jne
mov
xor
add
push
push
lea
push
call
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
lea
push
call
mov
cmp
je
mov
xor
add
mov
mov
xor
lea
xor
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
jne
mov
mov
xor
lea
jmp
push
pushl
lea
push
call
mov
mov
xor
add
cmp
je
mov
xor
add
push
push
lea
push
call
mov
add
mov
pushl
pushl
mov
add
push
call
mov
mov
xor
add
cmp
je
push
pushl
mov
add
push
call
mov
mov
add
mov
add
mov
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jb
mov
mov
mov
jmp
mov
mov
xor
xor
add
add
cmp
jne
mov
imul
mov
jmp
mov
xor
add
cmp
je
subl
jmp
andl
pop
pop
pop
leave
ret
push
mov
and
mov
sub
push
mov
push
push
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
mov
add
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
push
push
pushl
push
call
mov
mov
pushl
xor
add
mov
lea
push
push
pushl
pushl
pushl
call
mov
mov
xor
add
cmp
je
mov
mov
xor
add
imul
mov
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
pushl
pushl
push
pushl
pushl
pushl
call
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
mov
mov
movl
mov
xor
add
mov
mov
push
mov
pushl
lea
pushl
push
pushl
pushl
pushl
call
mov
mov
leave
ret
jg
jge
add
gs
mov
addl
std
add
add
test
fcomps
std
shl
ss
popf
repnz
imul
jle
jnp
xchg
lods
fcomps
push
inc
adc
lds
adc
jmp
jl
xchg
jle
fxch
roll
aad
push
lcall
outsl
daa
mov
repnz
xchg
shrb
les
lea
dec
ja
and
push
pop
pop
pop
mov
out
or
int3
and
fmull
push
xchg
cltd
sbb
fdivs
add
sub
je
inc
or
test
jo
lock
mov
mov
mov
je
add
inc
sbb
and
xchg
and
add
mov
mov
mov
add
mov
or
mov
jg
add
mov
adc
fisttps
fistps
pop
shlb
lock
cmp
or
or
sub
mov
inc
xor
nop
xor
mov
loope
sub
adc
aam
int
jb
mov
jno
orps
cltd
mov
xor
sti
jmp
add
mov
mov
inc
ja
lahf
xchg
rorb
xchg
lods
cmpsl
xchg
cmpsl
cmpsl
lcall
inc
xchg
push
icebp
cltd
in
or
push
sbb
cli
stos
sbb
gs
inc
sbb
inc
and
jl
cmpsl
test
rcl
ficompl
shlb
cmpsl
mov
fisttpl
pop
in
sti
cmp
imul
mov
mov
call
mov
pop
add
je
jl
adc
sbb
pop
ds
dec
scas
les
xchg
into
adc
dec
stc
and
push
cmp
cwtl
es
in
dec
mov
inc
jbe
pop
adc
rolb
sub
adc
in
pop
pushf
stos
and
rorl
xchg
rolb
add
idiv
jg
mulb
pop
xchg
add
add
movsb
cld
lcall
lcall
or
sub
into
neg
ljmp
xlat
add
int3
shrl
mov
fisubrs
scas
stos
mov
adc
imul
mov
xchg
pusha
sti
inc
or
imul
push
xchg
mov
movsb
sbb
ljmp
pop
lock
outsb
xor
jmp
cmpps
jle
lock
mov
inc
and
fld
sub
xchg
jmp
cmpsl
int3
inc
loopne
jg
mov
mov
or
leave
notl
test
mov
filds
xchg
sub
js
ljmp
mov
add
sub
ja
xor
arpl
xchg
xchg
jb
jb
cltd
or
ret
pushf
iret
or
stc
and
andl
ror
shll
jle
popa
xor
lcall
shll
ja
pop
ljmp
in
daa
orl
xchg
inc
imul
mov
mov
cmpsb
pop
fsubrl
mov
xchg
dec
jg
mov
cltd
repz
nop
outsb
xor
xchg
shrl
imul
xor
xchg
cmp
sub
in
push
inc
std
or
pop
ja
fistl
icebp
stos
stos
xor
dec
pushf
out
in
in
push
ds
mov
push
stc
xlat
mov
pop
je
adc
ret
ficompl
or
mov
cmp
cmpsb
jae
filds
dec
pop
jp
loopne
jo
cmc
orb
fwait
lods
push
sub
bound
outsl
shll
mov
mov
adc
insb
xchg
push
fbstp
push
push
jmp
lods
xchg
out
pop
lock
pop
add
add
sbb
pop
std
jg
adc
cwtl
add
add
sub
sub
mov
call
add
mov
or
lcall
pop
mov
mov
jno
fcoms
testl
int
cld
fstps
xor
push
cmp
fstps
je
aad
ret
sub
cltd
out
push
mov
lods
lret
addb
jmp
leave
push
sbb
test
int
dec
imul
je
or
push
cmpsl
jl
lds
mov
aaa
add
sbbb
dec
idiv
fst
jo
arpl
fsubrl
mov
pop
push
add
push
adc
xor
gs
rcrb
imul
or
mov
or
sub
add
jp
push
xchg
xorl
dec
sti
push
xor
arpl
stos
insl
outsb
or
shrb
mov
out
push
daa
add
xchg
mov
jae
adcb
popf
mov
inc
pop
sbb
xchg
adc
push
xchg
mov
push
push
and
jb
in
and
popa
arpl
or
xchg
or
and
jge
imulb
cs
out
lret
aaa
out
jno
insl
jae
inc
sahf
sbb
outsl
mov
sub
mov
pusha
fwait
xchg
dec
jecxz
jno
cld
jno
fidivl
cld
aaa
pop
sbb
dec
mov
nop
xlat
jge
ss
and
outsb
and
pop
cmpsl
fcomps
imul
dec
sahf
out
push
mov
out
push
std
ds
cltd
dec
in
ds
stos
jnp
adc
ds
aam
or
jmp
pop
or
leave
leave
div
popa
push
xchg
xor
jmp
insb
fsubs
fwait
inc
mov
mov
pushf
mov
jno
xlat
in
stos
jno
xor
jmp
loopne
sub
loopne
aad
jg
pop
clc
pushf
xchg
push
mov
arpl
sbb
add
add
add
add
add
mov
int
mov
das
sbb
mov
add
add
add
push
dec
ret
sti
repz
adc
mov
shlb
xlat
mov
test
mov
xbegin
pop
ret
movsl
in
lea
mov
jmp
nop
and
xchg
sarb
sbb
and
lods
jbe
jae
icebp
push
jns
loope
in
cmc
stc
xor
inc
scas
fs
sub
scas
mov
int3
fidivrs
pop
xchg
outsl
mov
lahf
hlt
xchg
test
xor
dec
mov
inc
test
mov
sub
fstl
insl
es
push
fnsave
sbb
jnp
jmp
pop
cs
push
jne
push
adc
pop
pop
push
clc
or
lods
mov
push
inc
push
fsubl
test
in
xchg
dec
xor
add
mov
mov
mov
cmovae
cltd
gs
incb
aam
pop
enter
mov
mov
les
push
lahf
jns
pop
psubsw
fsts
loop
xchg
sub
mov
jns
lret
dec
xor
jno
and
mov
fildll
stc
adc
and
cwtl
sarb
jmp
pop
lcall
out
jmp
das
rolb
repz
repz
xchg
push
mov
jae
fldenv
mov
cmpsb
xchg
aas
or
jle
mov
arpl
cld
mov
mov
dec
pop
mov
push
cmc
aam
add
pop
or
mov
std
sbb
jecxz
mov
int3
dec
mov
sbb
mov
in
pop
push
ja
sub
and
add
test
xchg
push
aaa
adc
and
fs
cmp
lods
cld
jg
insb
mov
xor
jp
mov
mov
dec
xchg
inc
imul
popa
popl
add
js
hlt
mov
std
jl
xor
jg
inc
out
cld
mov
add
add
add
adc
movsb
jbe
mov
add
ja
addr16
adc
mov
jge
jl
inc
in
mov
sub
xor
sahf
push
lock
in
frstor
ss
aad
mov
fldt
into
call
sub
aaa
jp
notb
adc
sarl
bnd
mov
pop
mov
xchg
or
adc
ffreep
cmp
fstcw
mov
mov
jmp
and
adcl
jecxz
push
sti
stos
inc
test
sbb
mov
fs
aam
mov
fisubrl
jp
stos
enter
and
fwait
stc
cmp
outsb
push
dec
sbb
mov
ds
int3
dec
subb
scas
xchg
rcll
imul
addl
stc
pop
jl
lds
sub
bound
jns
fdiv
cli
call
and
lahf
xchg
cmp
test
push
iret
cmp
sub
aas
mov
mov
notl
sbb
push
jp
fwait
repnz
xor
jnp
gs
imul
inc
fwait
push
sahf
jmp
scas
jecxz
int3
mov
in
loopne
pop
jbe
mov
mov
sbb
movl
into
cli
ret
mov
sub
loopne
xor
inc
mov
arpl
adc
dec
cltd
clc
sub
xor
and
jno
cs
cmpsb
add
xor
push
jbe
daa
inc
add
sbb
jno
adc
test
icebp
inc
int3
inc
mov
push
fwait
push
insb
xchg
test
mov
mov
jae
stc
adc
xchg
cmp
xchg
and
aas
icebp
cmp
push
add
add
imul
fdivrl
cmp
clc
stc
mov
add
add
add
es
push
enter
insl
fsts
dec
in
cmp
out
inc
jecxz
cld
and
xchg
fwait
pop
adc
mov
push
subps
nop
inc
ss
scas
inc
mov
into
arpl
jp
adc
pusha
in
dec
adc
mov
adc
and
jo
sbb
jp
cmp
movb
pop
into
or
sti
jp
xchg
mov
cs
sbb
test
rorb
sub
sub
cld
xor
pop
out
into
mov
gs
aas
push
fisubrl
xlat
int3
out
int
mov
outsl
mov
push
sbb
sub
icebp
lock
dec
dec
arpl
mov
jno
std
dec
popa
and
jno
adc
repnz
fiadds
dec
cmp
cltd
fdivrl
jle
fnstsw
nop
lods
cmp
sub
inc
cmp
jl
jle
sahf
dec
icebp
pop
add
mov
fisttpll
aas
or
inc
daa
in
pop
int
push
lock
xorl
add
push
jns
scas
aas
push
loope
dec
lcall
add
test
and
mov
xchg
adc
in
inc
cwtl
sbb
in
sub
dec
div
jl
lcall
or
xchg
subl
aam
mov
mov
push
push
pop
lea
xchg
ret
scas
cmp
push
lcall
mov
fwait
dec
iret
mov
push
xorl
sbb
lea
inc
loop
xlat
add
xchg
jp
cli
daa
add
addl
or
sbb
add
sti
decl
mov
jl
cli
mov
movsb
in
jns
xchg
call
adc
ljmp
test
movsb
xchg
mov
sub
push
cmpsl
sbb
jg
pop
fstps
testb
add
mov
shl
loope
push
fstpl
rorb
imul
stos
mov
fstl
jecxz
xor
aad
sub
insl
push
push
repz
mov
loop
idiv
and
fs
in
out
mov
out
mov
outsb
cltd
inc
jne
mov
imul
scas
je
hlt
lea
aaa
mov
jmp
aad
cwtl
pop
sbb
mov
call
pop
jge
nop
adc
shlb
dec
imull
pop
cmp
int
sub
dec
push
push
aaa
push
mov
jb
pop
xchg
les
fildl
gs
cmc
inc
pop
and
aad
push
addb
je
repz
test
adc
and
mov
xchg
jge
mov
js
add
pop
pop
cltd
jecxz
in
mov
fmuls
xor
sub
rcrl
sbb
mov
mov
inc
loopne
jne
test
sbb
iret
adc
jne
cs
popa
mov
add
lret
sarl
daa
cltd
lods
sub
aad
dec
lds
add
test
imul
inc
into
das
aaa
push
jns
lock
or
adc
aam
dec
add
lahf
xchg
cltd
push
aas
mov
dec
cli
insl
aaa
pop
cmc
push
ret
mov
mov
sub
xchg
cmpsb
pop
pop
pop
sbb
rcll
out
addb
fwait
add
or
sub
loope
lret
js
fmul
fwait
push
fstpl
js
push
shrb
les
ret
push
fistps
movntps
cwtl
pop
and
adc
xchg
addr16
xchg
mov
jb
cmp
popf
cli
push
stc
sub
lods
xchg
mov
lret
es
add
mov
add
popf
paddd
fidivl
stos
mov
shl
nop
add
std
add
add
add
int3
mov
xchg
hlt
test
add
fidivl
in
jle
pandn
add
scas
ljmp
test
and
mov
pop
cld
mov
jno
lods
or
aad
negb
mov
js
test
mov
in
movsl
xchg
outsb
mov
faddl
lea
icebp
mov
repz
fiaddl
lret
js
cli
sub
jnp
adc
xor
andb
repz
rcrl
test
jns
add
aad
sub
push
out
jle
xchg
insb
xchg
ljmp
cltd
pop
mov
xchg
call
pop
mov
stos
push
roll
mov
insb
xchg
rorb
adc
push
inc
xchg
push
pop
out
sbb
shrb
loop
push
adc
cltd
sub
ss
or
test
js
adc
orl
sub
or
outsl
dec
lcall
or
cli
mov
aam
adc
xchg
push
add
movsl
call
in
test
xchg
repnz
roll
pop
xchg
andl
ja
pop
dec
movsb
push
add
sti
push
out
scas
and
cmpsb
scas
mov
mulb
sbb
test
mov
sbbb
sub
inc
inc
scas
xchg
add
sarb
mov
out
jno
jb
cmp
bound
filds
xchg
xchg
push
int3
mov
xchg
into
sbb
scas
or
xchg
push
pop
jbe
sub
imul
test
leave
jae
pop
cmp
out
xchg
cld
adc
lds
jge
sbb
mov
and
js
addb
dec
push
and
movsb
lea
sub
mul
mov
add
std
add
add
push
inc
jge
sbb
shl
and
jp
pop
xchg
das
xchg
daa
mov
repz
mov
and
jbe
and
nop
lret
add
stos
cmp
mov
and
neg
pusha
jnp
add
xchg
jl
cmp
fmuls
sarb
dec
test
mov
jo
mov
cmp
clc
imul
cs
push
jmp
sub
les
push
adc
jecxz
jp
scas
pop
push
ljmpw
xlat
mov
fs
es
js
aaa
fcomi
dec
std
push
into
sahf
ret
int3
push
xor
mov
lds
or
mov
cwtl
xchg
mov
adc
adc
sbb
js
push
sbb
lock
int
or
push
es
test
mov
sub
push
pop
movb
fstps
push
pop
repnz
dec
pop
jge
push
or
loope
push
xchg
lods
mov
iret
loop
cli
or
js
add
mov
cld
lret
dec
rcll
and
xchg
or
push
xor
or
jns
fdivl
clc
jns
pop
xchg
popf
jae
mov
out
xchg
aas
enter
mov
in
mov
fs
int
test
mov
negl
idivl
out
jbe
sbb
xchg
cmp
dec
in
in
scas
mov
or
call
hlt
or
sub
movsb
dec
xorl
cmovp
mov
jle
movsl
pop
test
add
div
movsl
jno
push
jno
mov
les
xor
ret
lea
out
aad
sbb
mov
inc
sub
mov
mov
ja
jb
fmuls
lret
lock
mov
shll
mov
xlat
pop
lret
test
add
add
test
mov
sub
xchg
add
std
add
add
or
mov
jnp
cld
fstl
jno
mov
mov
shll
lret
dec
jecxz
popa
scas
sbb
fistl
ss
lcall
push
push
mov
lods
push
movsb
xchg
xchg
lret
sub
lock
jp
mov
mov
sbb
cmp
int
mov
fs
mov
aam
mov
mov
ss
outsl
jns
jle
fdivrp
ret
inc
inc
fnsave
icebp
in
daa
cmp
js
pop
xchg
jb
adcl
nop
loope
loop
pop
movsl
adc
pop
hlt
rolb
and
andl
sbb
leave
fldl
mov
out
sbb
pop
daa
mov
jmp
js
xchg
and
mov
adc
mov
mov
or
mov
gs
push
fdivs
inc
mov
xchg
sbb
divb
pop
std
jne
std
xchg
inc
xor
dec
and
scas
or
popf
pop
adc
dec
inc
stc
push
mov
pop
scas
cmpsl
ret
hlt
aad
fidivl
adc
in
mov
mov
cli
fldl
je
push
xchg
imul
push
lret
mov
mov
xchg
stc
lahf
mov
sub
pop
ja
scas
cmp
sarb
mov
cmp
inc
pushf
psubsw
hlt
lcall
mov
xchg
test
sarl
adc
jb
pop
pop
jp
call
scas
outsl
mov
fdivrs
cltd
shl
test
loopne
sbb
and
and
add
in
into
mov
addr16
cmp
xorb
dec
pop
call
add
cmp
jne
mov
jae
sbb
jge
roll
and
add
add
xchg
std
jg
mov
fisttpll
std
add
add
testb
lock
aaa
nop
outsb
mov
dec
cmp
xchg
mov
stos
inc
ja
popf
inc
add
mov
stc
divl
inc
js
jo
fs
sahf
jns
imul
jle
sarb
ss
cltd
leave
mov
out
stos
push
insb
ret
xchg
ret
push
out
push
int3
dec
xor
outsl
mov
adc
dec
jbe
and
jp
fsub
and
repnz
sub
in
out
inc
push
mov
sub
insl
insl
pop
sar
popa
into
mov
dec
fs
jb
out
lods
loopne
mov
je
cwtl
movsl
sub
xchg
push
nop
aas
jl
int3
mov
scas
dec
pushf
and
daa
imul
gs
repz
cmp
and
and
push
push
pop
mov
insb
xchg
pop
adc
imul
xchg
xchg
jb
imul
dec
subl
adc
faddl
sub
lea
sbb
pop
test
mov
xchg
addr16
neg
iret
add
js
test
cmp
pop
inc
xchg
pushf
cmc
loopne
or
fcmovnb
push
inc
jle
sub
ja
or
and
xlat
js
pop
mov
mov
sub
cmp
cmp
rolb
hlt
xchg
xor
jp
mov
adc
ret
xchg
orb
mov
ltr
adc
imul
jne
inc
push
inc
out
mov
sub
data16
aad
add
push
cmp
rolb
jmp
in
xchg
in
pop
dec
sub
dec
jbe
or
add
orb
push
dec
jns
inc
es
push
mov
and
jmp
push
push
add
xor
push
mov
add
add
idiv
iret
rorl
xchg
es
add
add
add
xchg
ret
icebp
push
loope
shll
fwait
cmp
push
push
es
or
push
jbe
xchg
mov
in
add
push
repnz
fadds
mov
lret
mov
stc
push
xor
and
js
les
xor
mov
or
push
mov
pushf
lcall
inc
in
daa
xor
sti
outsl
sub
pop
fimuls
aam
push
data16
inc
jg
dec
xor
fistl
stos
out
and
outsl
popa
and
and
loope
add
or
mov
ror
add
dec
xlat
mov
pop
mov
lret
aam
sbb
jo
ja
ret
lcall
out
add
adc
fldenv
xorb
das
bound
xchg
pusha
sub
clc
jnp
cmpsl
push
pop
xchg
inc
pop
nop
xchg
adc
adc
cmc
push
ja
leave
and
xchg
clc
xchg
ret
xor
bound
adc
pop
cmc
lret
mov
movsl
dec
cmp
xchg
push
in
xor
adc
inc
mov
dec
les
lds
mov
sbb
mov
inc
inc
mov
or
repz
sub
mov
cmp
dec
lea
adc
inc
js
pop
lahf
addr16
shll
and
mov
sub
sahf
gs
call
pop
sbb
mov
mov
and
jle
add
push
lock
enter
sub
rcll
mov
test
loop
jnp
mov
imul
daa
jae
mov
or
test
ja
mov
repnz
nop
push
loope
push
repnz
xchg
push
fs
or
fisubl
and
nop
inc
fldl2t
shll
test
cld
fsubr
add
mov
in
cmp
and
or
aas
les
add
out
ret
mov
ja
or
mov
push
std
add
add
jp
sahf
inc
aaa
in
movsb
mov
iret
rcr
int3
out
push
stos
icebp
xchg
mov
pop
sbb
or
sub
in
adc
xchg
sbb
das
pop
insl
push
or
ds
in
cmp
mov
cmp
ja
cmpsl
cmpsb
push
fwait
int
pop
scas
cs
or
xor
mov
xchg
and
xor
mov
leave
cld
push
inc
sbb
lret
lcall
xchg
nop
dec
jb
cmp
jp
dec
int3
push
lock
fadd
inc
and
sbb
arpl
and
adc
andb
lds
mov
pushf
enter
push
sarb
inc
jbe
dec
push
add
movsl
je
mov
lock
push
leave
push
ja
int3
jns
pop
and
rcrl
fildll
repz
adc
xchg
jp
add
iret
xchg
cwtl
push
add
ret
es
xchg
cmc
dec
shll
movsb
jbe
inc
jo
mov
pop
cmp
push
dec
call
cmovo
pop
testl
out
jecxz
sbbl
sub
subb
sub
jae
xchg
aam
mov
test
je
mov
sbb
cmp
adc
push
stc
or
fistps
jns
push
in
pop
int3
inc
cs
pop
inc
xor
push
push
loope
xchg
fs
ret
test
lret
lret
xchg
sbb
stc
das
jnp
mov
xor
lods
and
sub
out
mov
addl
ret
inc
insl
cld
es
add
fwait
lds
fs
jns
sbb
test
dec
into
cmpsl
jno
test
pop
filds
jnp
cmp
push
pop
lea
xchg
push
jmp
loopne
in
mov
push
push
jle
xlat
lret
push
testl
pushf
add
std
add
add
icebp
mov
push
and
push
vaddss
sub
jge
outsb
mov
adc
push
shrb
aaa
add
inc
cmp
insb
cmp
dec
pop
into
and
clc
jle
lret
cli
leave
je
cld
test
xchg
mov
jmp
mov
mov
je
mov
movsl
and
test
sbb
sbb
cwtl
js
sbb
test
push
sub
sub
xor
inc
push
outsb
add
sub
cmpsb
fildll
out
sahf
notl
pop
inc
fwait
xchg
cld
mov
icebp
adc
push
xchg
adc
jb
sub
mov
out
pop
mov
mov
in
and
aaa
push
shrb
repz
dec
sbb
jno
dec
adc
dec
movb
adc
mov
mov
movsb
ljmp
std
push
mov
sbb
pop
sbb
fnstcw
test
sti
sub
xchg
fisubs
fs
clc
mov
add
int
dec
aam
out
push
adc
adc
push
mov
divl
push
outsb
jno
mov
cmp
pop
loop
pop
push
adc
fs
push
fwait
push
dec
shll
xlat
adc
cltd
sbb
fimuls
jge
xor
bound
flds
mov
popa
shrl
mov
out
mov
popa
inc
lock
aas
adc
push
mov
xor
mov
cmp
push
lret
mov
clc
push
ljmp
test
ljmp
test
sarb
cmp
xchg
jle
test
lock
call
sahf
cli
cs
mov
lahf
sbbl
add
aas
add
jbe
pop
fdivl
mov
fsubs
aam
out
xor
sub
mov
sub
add
adc
or
pop
out
repz
fucomp
mov
add
add
add
cmp
sub
repz
je
xor
cmc
add
lods
ret
xor
pop
adc
movl
push
dec
jnp
push
lcall
pop
jg
stos
mov
mov
xchg
pop
xor
mov
mov
lret
add
push
pop
into
pushf
scas
jae
insb
push
imul
jecxz
lods
or
mov
hlt
mov
sbb
insl
sar
xor
fsubp
add
addl
jg
gs
adc
pop
lods
push
sub
and
and
movsl
cmpsl
inc
mov
xor
outsl
das
jg
mov
andb
popa
add
les
shll
pop
shll
mov
ret
mov
outsb
fld
lds
imul
call
jecxz
adc
jae
das
inc
insl
add
and
adc
lea
and
dec
lds
aam
mov
in
nop
lret
add
hlt
roll
jl
jnp
push
mov
sbb
je
popf
addr16
inc
dec
fmull
ftst
mov
jle
cmc
or
mov
mov
jo
mov
iret
into
add
es
add
sub
mov
montmul
cmpsb
pop
sbb
insl
jb
jbe
xchg
inc
dec
ret
scas
cmp
outsl
clc
out
cmp
negb
repnz
cld
jmp
and
jmp
xor
aaa
jl
push
inc
stc
stos
pop
test
call
stos
mov
mov
sub
sub
insb
sarb
push
jb
add
fildl
mov
ja
les
mov
push
adc
fisubl
sbb
mov
out
dec
push
cltd
mov
adc
mov
out
lea
rcr
es
orl
add
add
leave
xchg
insl
mov
out
nop
sbb
mov
add
ds
sbb
and
insl
fwait
or
jl
out
sbb
decb
daa
mov
imul
jae
inc
fcmovb
dec
dec
hlt
dec
xor
push
jp
jnp
and
into
pop
push
cmpl
jl
adc
jl
push
ret
sbb
hlt
push
xlat
out
adc
jl
xor
or
pop
scas
xchg
loop
mov
push
pop
lods
and
stos
scas
out
cmp
xor
cs
sbbb
aas
imul
in
jge
hlt
mov
test
loopne
xchg
pop
je
ljmp
fdivl
xor
mov
lea
cmpsb
pop
scas
push
sbb
and
outsb
ss
les
xchg
test
sbb
xlat
mov
jp
jle
dec
je
jg
xorb
xor
add
out
pop
jp
loop
inc
xlat
ret
xchg
fxtract
imul
fwait
cmp
push
push
sti
imul
jae
jg
std
jmp
cli
xor
fcmovnu
shlb
ss
fwait
xchg
push
incb
xlat
mov
enter
mov
xchg
aas
rclb
ret
lock
dec
es
sbb
sti
cmp
into
pusha
mov
xor
xchg
jb
cmc
and
xor
repnz
mov
insb
cwtl
das
sar
insb
hlt
add
push
fisttps
ljmp
idivb
dec
mov
stc
mov
mov
outsl
jge
mov
dec
mov
mov
clc
jo
jp
enter
lods
js
ds
aas
push
roll
idivb
adc
jb
loopne
mov
push
sbb
movsl
frstor
or
lds
and
pop
outsb
cld
mov
sub
dec
shll
xchg
loope
and
out
pop
inc
fstpt
inc
mov
shl
call
inc
aaa
add
add
ja
idiv
pop
out
cmp
xchg
mov
std
add
add
jp
rcrl
cld
sub
xor
rolb
stc
ffree
lret
sub
mov
sbb
outsb
mov
scas
mov
cmpsb
and
pop
mov
inc
imulb
pop
lods
in
adc
push
lret
pop
mov
mov
push
mov
cmp
mov
xor
in
fcoml
outsb
mov
int
mov
das
andb
int
jns
and
xchg
stos
lcall
je
hlt
or
adc
rcrb
inc
mov
mov
lock
ljmp
sbb
cli
sbb
aam
jno
cmp
cld
test
xchg
push
add
mov
in
mov
negl
adc
mov
pop
xor
sbb
push
mov
pop
jae
jmp
sti
dec
in
arpl
lret
rorb
pop
add
or
cmp
sbb
adc
mov
and
repnz
fcmovne
in
push
sbb
and
addr16
pop
cmc
dec
rorb
mov
mov
rorb
inc
mov
movsb
into
inc
add
mov
inc
jns
mov
xor
push
or
mov
cmp
jno
jg
cmp
mov
mov
out
cli
lahf
or
xchg
mov
dec
inc
jecxz
stos
pop
or
imulb
and
push
push
les
rcll
xchg
dec
aaa
imul
loop
cld
scas
int3
out
xchg
stos
rcrl
mov
lret
testl
out
jp
xchg
js
outsb
mov
shrl
jle
xlat
mov
hlt
jge
pusha
push
dec
das
pop
mov
dec
in
add
leave
fstpl
pop
data16
data16
add
add
sti
mov
inc
into
mov
dec
aad
add
std
add
add
cwtl
add
push
sbb
lods
xchg
mov
in
xor
jnp
jecxz
mov
outsb
std
popf
xchg
out
adc
jecxz
test
das
lea
xlat
sbb
iret
jae
pop
jge
xorb
sbb
f2xm1
or
inc
dec
sbb
stc
ljmp
std
xor
lds
push
adc
loope
cltd
ds
pop
pop
jmp
cmpsb
fistps
pop
pop
imul
scas
cmp
jp
cmp
push
gs
pop
xor
sbb
xor
test
jecxz
mov
push
mov
ja
popa
pop
andb
cld
sub
sub
mov
mov
mov
divb
jae
mov
data16
xchg
or
fiadds
data16
xor
adc
or
push
repz
mov
cmpb
popf
or
jb
adc
jbe
or
pop
cmp
dec
inc
mov
xchg
andl
dec
sbb
add
shrb
arpl
push
cmp
and
popf
and
push
push
lea
fmull
dec
push
ja
das
push
mov
push
mov
call
lds
push
cltd
icebp
and
and
cld
int
mov
cmp
rorl
xor
xlat
popf
cmc
dec
loopne
loopne
ss
out
shlb
mov
aad
sub
das
or
xchg
pop
sti
popa
jle
add
cmpsl
mov
push
jmp
push
mov
call
rcll
call
xlat
das
popa
push
pop
fstpl
inc
mov
xor
jmp
es
and
adc
pop
and
sahf
jge
jecxz
and
push
leave
inc
int3
jno
aaa
inc
nop
fisubs
inc
inc
cli
sbb
xchg
add
jns
xchg
movsl
inc
and
add
xor
sahf
xor
sub
add
psrld
add
or
inc
and
rcll
dec
add
fildl
push
inc
or
mov
aad
mov
fisubs
aaa
mov
mov
push
push
pop
dec
fwait
loopne
jno
inc
rcrl
push
mov
adc
add
into
dec
sbbl
mov
lcall
bound
lret
cmp
jbe
jbe
pushf
add
pop
rorb
jno
adc
jns
push
in
mov
enter
or
rol
add
adc
in
fsubrs
popa
mov
xchg
bnd
xor
mov
add
sarl
scas
dec
xchg
in
xlat
das
imul
sahf
sub
cmp
jbe
movsl
frstor
pop
xchg
lock
add
sahf
stc
cmpsl
push
inc
mov
sub
imull
jae
mov
dec
test
add
mov
pop
ficomps
push
sbb
xor
fists
daa
icebp
push
mov
inc
test
push
jbe
loopne
jns
and
xchg
and
outsl
iret
sub
pop
outsb
inc
adc
push
mov
inc
jle
data16
xchg
inc
mov
pusha
daa
lret
in
leave
int
out
clc
push
adc
je
mov
aad
out
sbb
mov
popa
pop
jmp
mov
cmp
jp
mov
adc
pop
adc
fisubs
xor
std
fistpl
les
inc
out
aad
das
movsb
sbb
pop
insb
push
test
push
movsb
cmp
loop
jmp
or
push
mov
or
mov
sub
cwtl
loopne
scas
aas
mov
xor
jg
jmp
mov
sti
rcrb
sub
imul
inc
inc
fucompp
test
cmp
add
add
std
in
mov
mov
std
cmp
shl
iret
test
add
add
add
mov
or
add
lret
popa
mov
je
out
cmp
jle
add
mov
clc
mov
in
ljmp
jb
pop
mov
or
inc
adc
and
into
xor
movb
cmpsl
js
and
out
int
sbb
inc
faddp
cmp
and
xor
aas
sub
adc
lcall
add
mov
sti
popf
xor
sbb
xor
scas
xchg
vscatterdps
cmp
popf
dec
mov
pop
cmp
sti
add
int3
lret
pop
aam
cmpsl
insb
mov
or
out
jae
loop
dec
scas
xchg
fs
adc
xor
ror
mov
lock
add
cli
mov
pop
outsb
imull
in
jge
sbb
xchg
xor
fidivrs
jns
cld
xlat
loope
out
data16
add
or
movsl
and
or
mov
cmp
mov
out
mov
mov
and
adc
lods
lahf
shrb
cmpsb
mov
sar
push
fdivr
push
or
dec
mov
adc
aas
sub
mov
dec
pop
mov
fisubs
and
bound
dec
sub
inc
mov
push
add
push
jp
inc
mov
movsl
adc
lods
xor
ret
mov
pavgb
and
int3
imul
out
push
int3
rcr
ret
arpl
xor
cli
jae
icebp
daa
push
sub
pusha
mov
push
push
fsts
in
push
pavgb
mov
lock
jae
inc
mov
scas
jne
ret
mov
clc
mov
push
sub
jo
lcall
addl
dec
xor
add
sbb
aaa
icebp
mov
add
rolb
testb
inc
les
mov
int3
stos
add
std
add
add
and
js
mov
push
cmpsb
xchg
adc
pushf
fdivrs
jp
sub
jns
ret
outsb
mov
loop
add
lea
dec
dec
push
sbb
out
lods
outsl
ret
sub
jle
push
clc
roll
arpl
mov
jmp
aaa
subl
push
jae
mov
arpl
out
xchg
mov
add
adc
arpl
add
or
mov
or
std
and
imul
cmpsl
sub
mov
jmp
ljmp
mov
daa
std
add
pop
es
push
pop
mov
pop
aaa
adc
and
jae
pop
out
stc
sub
lret
orl
in
in
adc
dec
ds
sahf
pop
mov
push
mov
pop
sbb
dec
outsb
cli
xor
aas
jns
jle
in
sbb
sub
xor
lea
or
aas
and
test
fistps
inc
and
dec
jle
into
sub
popa
xor
loope
loope
mov
cmp
push
iret
addl
xchg
jnp
add
ljmp
and
lret
push
fists
subb
clc
xor
cli
lods
dec
fadds
jp
and
out
xchg
ror
ja
int
mov
add
lret
dec
inc
es
pop
mov
rolb
ja
aaa
sbb
js
rorl
pop
adc
mov
xchg
push
andb
stos
jno
test
rol
sbb
push
adc
mov
ja
arpl
fbstp
enter
iret
sbb
mov
fsubl
fwait
emms
mov
adc
inc
push
lods
fdivl
add
add
popa
data16
gs
mov
push
rorl
std
add
add
mov
mov
pop
rcll
pop
imul
rorb
jae
jl
or
mov
outsb
ljmp
shr
sbb
aam
adc
cwtl
mov
in
rolb
ljmp
call
repz
pop
cmpsb
sbb
mov
and
fbstp
mov
dec
in
pop
pop
mov
mov
xlat
sbb
pop
outsb
pop
sbb
sbb
mov
stos
test
sub
pusha
xor
into
loope
out
dec
in
pushf
lock
xor
mov
cmpsl
add
or
lahf
adc
lock
popa
imul
into
fcompl
pushl
popf
in
lahf
pushf
pop
ljmp
adc
inc
mov
mov
ret
push
flds
gs
ds
jle
aas
pop
les
in
pop
dec
xchg
out
test
dec
adc
in
xchg
into
jge
mov
and
div
cmp
push
jp
int
mull
add
jg
fwait
mov
cmpsl
jmp
cmp
loope
aas
call
inc
mov
sub
call
or
xor
pop
sbb
mov
inc
cmp
test
mov
push
pop
lods
mov
in
lcall
jns
or
adc
mov
sub
rorl
sub
jbe
fldenv
or
jo
inc
xor
fnstenv
xor
push
mov
dec
pop
adc
imul
pop
mov
push
sbb
push
in
inc
in
cmp
fwait
inc
lahf
inc
mov
clc
mov
push
in
adc
cmp
xor
cli
inc
addl
add
add
add
cmp
cli
cmp
adc
xchg
cltd
loopne
scas
add
std
add
add
mov
xor
xchg
lods
jnp
jecxz
cwtl
add
mov
sbb
inc
mov
mov
mov
lds
dec
icebp
pop
imul
or
cmpsb
mov
lock
int3
mov
in
add
jg
or
push
inc
std
data16
xchg
jb
push
clc
and
movzbl
jns
xor
aas
xor
out
in
xor
cli
lea
lahf
lds
jns
into
xor
in
loopne
mov
pop
and
and
sbb
fmull
add
leave
out
xorb
or
in
hlt
or
add
scas
nop
cmp
pop
mov
inc
pop
shll
popl
mov
int3
nop
insb
xor
test
pop
inc
nop
xchg
test
out
mov
loopne
pop
push
cmpsb
xchg
xchg
jo
das
fimuls
ret
add
lahf
mov
clc
lcall
inc
addr16
or
and
icebp
sbb
jo
push
and
repz
xchg
pop
mov
aas
jmp
push
pop
cmpl
sbb
int
mov
cs
enter
ud0
out
daa
sbb
lea
test
movsl
pop
pop
add
fldpi
and
mov
fisttpl
mov
out
sbb
inc
iret
sti
xchg
call
add
mov
xchg
or
stos
jae
jae
idivb
jle
test
mov
out
rclb
out
push
iret
push
cmp
ljmp
jmp
dec
iret
pusha
add
test
call
add
dec
inc
pop
inc
inc
icebp
popf
out
inc
fiaddl
adc
aaa
cmc
cld
mov
jns
fidivl
jae
mov
inc
jb
lods
push
adc
stos
je
mov
push
mov
pop
add
add
and
push
push
cmp
repnz
loop
mov
add
add
add
add
mov
and
into
adcl
outsb
es
cmp
pop
pop
dec
int3
add
sbb
divl
push
mov
fists
or
lgs
insl
cmp
out
rcll
dec
jns
dec
dec
movsb
inc
add
push
test
aaa
xchg
jle
bound
hlt
adc
mov
clc
sub
inc
ja
push
ljmp
arpl
pop
xor
and
fcmovne
push
sub
in
inc
testl
cmc
push
out
sub
jns
inc
mov
ret
mov
aam
xchg
dec
repnz
call
test
leave
cld
hlt
push
lret
stos
jmp
jg
aas
and
gs
in
adc
inc
xchg
dec
addr16
cmpsb
or
push
push
lods
mov
and
sbb
jne
dec
clc
or
idiv
test
ss
mov
sbb
push
mov
jge
jmp
ja
inc
leave
mov
xor
pop
pop
in
data16
inc
mov
mov
std
mov
sbb
fldl
mov
xchg
xchg
fcompl
dec
imul
ds
out
fstl
orb
adc
fcompl
in
push
pop
mov
mov
sbb
movsl
or
incl
pop
jns
jb
aaa
cwtl
add
inc
out
outsb
ss
das
sub
xchg
test
sarl
nop
in
xchg
sub
cwtl
sbb
jne
mov
inc
dec
adc
je
xchg
mov
or
inc
add
jle
xor
stos
mov
mov
dec
into
and
imul
lock
jo
fisttpll
stc
jg
imul
cwtl
xlat
fdivl
sbb
daa
inc
sbb
mov
push
push
pop
cmp
cmp
cmpsl
mov
ss
lret
and
add
fnstsw
mov
in
outsb
fs
sbb
fdivr
shlb
add
push
repnz
jne
xchg
ja
xor
ror
cmp
cmc
ret
rorl
mov
adc
enter
fs
dec
je
sbb
xchg
jns
dec
pop
dec
scas
inc
push
dec
daa
ja
fldcw
jmp
or
ds
mov
jge
mov
popf
inc
xor
or
loop
pushf
cltd
mov
sub
jecxz
mov
or
int3
push
sbb
xor
mov
mov
test
mov
incl
loop
pop
jl
jne
fildll
pop
outsb
inc
adc
movd
sub
jle
cmp
adc
int3
jnp
xor
add
xor
and
mov
ret
lcall
insl
mov
aaa
mov
mov
mov
outsb
jmp
mov
pop
mov
in
je
pop
adc
push
rcll
xchg
fiadds
iret
das
orb
int
dec
dec
jnp
sub
and
lcall
xchg
in
add
out
and
push
adc
xor
mov
push
dec
outsl
mov
adc
out
stos
mov
and
test
cmp
call
and
aad
push
lcall
lea
sbb
mov
test
pop
repnz
sbb
jo
xchg
fisubs
hlt
test
dec
mov
dec
mov
popf
cltd
pop
insl
out
arpl
pushl
pushf
cmp
in
pushf
scas
movsb
mov
pusha
cmp
mov
or
jmp
sarl
adc
scas
push
aas
sbb
jns
gs
aam
and
sub
out
mov
addr16
jp
fstpl
repnz
in
fndisi(8087
in
movsb
rcrb
sub
icebp
cltd
jae
mov
in
dec
int
pushw
jecxz
add
add
inc
mov
jb
shlb
add
add
add
jnp
mov
js
in
mov
pop
sub
loope
in
lahf
shll
mov
jl
pop
cmpsl
mov
adc
xchg
scas
test
sub
ror
aad
sbb
xchg
lds
push
shlb
fld
clc
es
ret
jp
sub
add
inc
jb
dec
cmp
fists
mov
out
xchg
nop
adc
push
loop
fmulp
xor
stos
cmp
sub
fwait
adc
jo
js
sti
fdivrs
adcl
mov
test
stos
add
les
cmpsl
pop
jl
ret
xor
mov
fidivrl
insb
insl
mov
xchg
pushw
inc
jne
scas
out
mov
jle
add
inc
mov
inc
inc
mov
lret
cs
or
mov
jg
mov
jle
rol
inc
cmp
js
call
andb
mov
fidivrl
das
sbbl
mov
in
adc
push
mov
dec
sbb
mov
xchg
jbe
mov
xor
arpl
subl
int3
leave
jl
sub
jo
std
lea
popf
inc
pusha
push
sbb
adc
mov
inc
imul
andb
int
mov
es
pop
stos
out
xor
mov
adc
cwtl
stc
inc
push
sbb
dec
sti
jne
adc
cmp
cmp
andb
and
jl
shll
add
mov
jbe
or
ja
ja
pop
push
scas
or
push
xor
into
jno
popa
in
push
add
inc
loopne
add
add
adc
or
add
mov
push
mov
mov
sbb
pushf
int3
jecxz
rcll
scas
push
popf
cli
ja
mov
sub
xor
outsl
lret
addl
add
mov
cmp
mov
fcomi
sbb
add
add
dec
jb
cwtl
push
inc
sti
cmpb
mov
push
movsb
nop
test
jno
sbb
outsb
pop
push
mov
push
mov
ljmp
enterw
loopne
and
jae
push
testb
inc
mov
movsl
mov
xor
jo
aam
ret
shll
mov
mov
xor
mov
pop
fsubl
and
clc
scas
inc
test
gs
adc
fwait
ret
inc
psubd
pop
sub
xchg
mov
loopne
push
sub
cmpsb
rolb
push
testb
imul
mov
mov
mov
jmp
shlb
add
pop
lea
popa
adc
add
adc
pusha
lret
dec
pop
jl
ds
mov
sbb
mov
stos
inc
lret
dec
jge
lret
dec
adc
fbstp
jne
mov
mov
mov
loop
int
outsl
test
decl
jle
in
inc
xorl
dec
xor
mov
sbb
fldt
dec
pop
xor
add
mov
push
mov
pop
hlt
lds
xchg
sahf
lcall
enter
mov
mov
fwait
ja
scas
faddl
int
sti
push
xchg
stos
enter
mov
fdivrp
xchg
repnz
mov
ds
sbb
stos
cmpb
mov
arpl
cmp
adc
repnz
add
ret
adc
fldl
fs
inc
xorl
pop
add
sbb
mov
jno
push
mov
nop
mov
repnz
lret
dec
xchg
sarl
jb
div
in
lret
pop
mov
test
pushf
xchg
jecxz
mov
jae
pop
push
mov
xchg
arpl
mov
ss
pop
xlat
add
add
sbb
out
idivl
test
cmp
imul
add
test
cmp
mov
cmp
pop
lret
jo
sub
out
hlt
idivb
mov
add
daa
test
fisubrs
jo
sbb
mov
jo
mov
scas
in
add
inc
pop
xor
mov
push
add
inc
push
sbb
jo
bound
pop
scas
xchg
mov
mov
je
push
outsl
cli
imul
repz
pop
pushf
sub
add
repz
int
pop
popf
lods
push
stc
push
test
dec
dec
jnp
pop
mov
inc
out
out
dec
cmp
dec
inc
test
and
adc
mov
xchg
test
add
inc
mov
dec
sbb
lret
loop
xchg
out
adc
cs
sub
cmp
mov
push
inc
inc
aas
add
fwait
test
aaa
repz
enter
and
xchg
fimull
outsl
out
xchg
cmpsb
mov
scas
outsl
enter
xchg
push
add
lret
mov
or
out
insb
mov
call
push
adc
pop
ss
pop
xchg
adc
mov
sub
icebp
mov
shlb
aam
push
popa
loopne
cs
pushf
mov
imull
push
leave
adc
in
inc
arpl
mov
pop
imul
scas
jp
icebp
cld
mov
mov
shrb
xchg
jecxz
lods
aas
push
sub
in
int
les
dec
mov
repz
ret
ss
lret
xchg
dec
cmpb
cmp
mov
decl
arpl
fsubs
add
inc
mov
push
dec
clc
push
pusha
lcall
adc
stos
fstpt
das
test
jb
invlpg
sbb
mov
je,pn
inc
add
adc
cmp
xchg
jbe
call
push
je
dec
mov
mov
add
add
sbb
fsin
out
fs
popf
outsb
adc
add
std
add
add
xor
cmp
xchg
ret
lahf
addr16
jo
jle
push
in
movsb
int3
addb
mov
ss
ret
inc
rcrb
mov
andl
push
rorl
mov
lock
cmp
mov
insl
inc
jnp
out
fstps
ficoms
or
mov
jl
jne
sbb
cmc
cmp
cmp
aas
out
mov
jnp
cwtl
pop
into
andl
ljmp
cmp
cwtl
fdivr
fucom
repnz
shll
negl
lret
sbb
fstps
lahf
outsb
loope
sub
sbb
dec
js
out
insb
dec
fistpll
jecxz
push
inc
pop
pop
pop
sbb
mov
out
mov
sbb
or
pop
lea
outsb
dec
ds
jl
in
popf
add
bound
test
dec
stc
ficomps
test
stc
cmp
andb
movsl
mov
xor
or
jl
lock
jno
fnstenv
add
xor
mov
mov
test
or
rcll
pushl
in
or
jno
mov
adc
add
nop
rorb
push
iret
pop
fmul
or
nopl
scas
ficomps
jno
jl
in
push
sarl
cs
pop
inc
sub
ret
adcl
jp
mov
popa
push
subb
jge
cli
and
adc
sub
cmpsl
loopne
xchg
adc
push
movsb
loope
shll
loop
mov
pop
cmp
mov
jae
popf
popf
pop
add
push
inc
cmpsb
cmp
test
fsubp
mov
lds
rolb
bound
mov
les
add
mov
push
lret
dec
bound
xchg
arpl
gs
faddp
leave
shlb
cld
mov
xchg
andl
aaa
and
add
add
add
add
add
add
fsubs
jmp
adc
jl
dec
dec
jecxz
ss
mov
add
std
add
add
sti
addr16
sbb
jmp
mov
jnp
inc
and
jbe
mov
or
push
fbstp
push
adc
mov
sbb
js
dec
dec
mov
daa
sub
scas
pop
pop
cwtl
dec
mov
mov
and
in
repz
hlt
stc
pop
mov
fs
xor
cltd
jmp
xchg
insl
popa
fdivl
stc
or
je
out
mov
ret
mov
aad
add
push
je
fcmovnbe
sub
shlb
dec
xor
andb
adc
test
push
jno
les
cmp
cmp
in
fnstenv
and
enter
pop
ljmp
rcrl
cmp
aaa
cmp
sbb
out
pop
xlat
ljmp
loop
xor
imul
xor
outsl
mov
lcall
insl
daa
scas
lock
inc
mov
pop
aaa
fnsave
loope
stos
inc
cld
pop
adc
movsb
xlat
dec
xor
ss
inc
cwtl
loopne
mov
xor
mov
fwait
mov
mov
arpl
test
add
test
jmp
sbb
mov
jbe
push
popa
jne
loopne
dec
ret
out
enter
fsubrl
int
lcall
outsb
push
aaa
lcall
icebp
mov
inc
test
cmpsb
cmpsb
xchg
mov
clc
ja
ds
jl
out
inc
out
inc
mov
push
divl
jae
xchg
out
roll
pop
sbb
ficoms
add
out
out
lret
xchg
jecxz
repz
dec
into
fld
pop
sub
mov
xchg
pop
mov
mov
movsl
sarl
cmc
cmp
push
cld
jb
mov
lret
pusha
mov
shlb
dec
add
add
and
xor
sub
aad
mov
add
xchg
fidivs
in
jg
ss
stc
cmpsl
xchg
in
jo
int3
add
mov
xorb
lods
ret
out
inc
pop
sbb
xor
xchg
dec
ds
adc
xchg
add
cwtl
sub
cmp
mov
leave
xchg
ds
loop
popf
mov
and
and
sti
lods
inc
mov
pop
push
pop
inc
fldl
fisttpl
dec
es
aad
pop
addl
call
mulb
ds
cmpl
inc
aad
jg
jl
jp
rorb
movsl
rcr
fisubrl
pop
sbb
push
pop
push
test
adcl
shlb
xadd
lcall
xchg
xlat
das
add
pushf
inc
jg
mov
sub
ror
je
sub
hlt
into
cmp
clc
fmull
out
lock
lret
int
out
xchg
or
mov
ds
xlat
mov
push
cmp
shlb
mov
jp
mov
fnstcw
mov
dec
pusha
pop
adc
mov
mov
adc
add
rcll
pushf
scas
adc
mov
mov
push
push
xchg
jbe
je
mov
je
inc
lods
dec
int3
pop
stc
popa
enter
cltd
aas
add
cld
popa
adc
cmp
mov
lret
stos
mov
mov
push
add
cli
inc
pop
push
lds
pop
into
cmpsb
mov
cli
cwtl
dec
pop
ja
std
push
ficoms
and
push
sahf
jge
xor
das
lds
sti
stc
sbb
dec
orb
mov
int3
jae
dec
daa
imul
std
pusha
lea
xor
in
dec
jns
loopne
xlat
or
xchg
inc
hlt
and
push
xor
loopne
in
or
scas
lret
or
inc
in
add
add
push
jecxz
jg
data16
sbb
push
stos
rolb
std
add
add
outsl
add
cmp
int3
decb
ljmp
lock
ss
xchg
inc
sbb
dec
movsb
mov
mov
sbb
daa
xor
inc
cmp
ds
outsl
int3
cmp
outsb
aad
popf
ja
mov
movsl
jbe
ss
lods
stos
inc
test
lea
cmp
adc
jp
push
dec
movsl
sub
and
sbb
repz
push
push
out
pushf
mov
stos
inc
mov
aas
cwtl
rcl
mov
and
pusha
push
dec
lea
dec
subb
repnz
or
mov
xchg
popa
pop
pop
xchg
push
cmpsb
push
jl
dec
sub
gs
dec
fsubr
and
adc
pop
cmpsb
xchg
xchg
or
sarb
inc
xor
mov
idivl
sar
sbb
cmpsl
xchg
push
mov
cmp
ficompl
lahf
add
cs
or
xlat
dec
aam
mov
cwtl
movsl
inc
mov
lret
testb
fadds
adc
jmp
sub
fistpll
push
cmp
dec
and
push
lock
jae
imul
jb
cltd
inc
fs
or
or
mov
xor
lods
test
mov
es
clc
mov
in
cmpb
test
inc
or
push
roll
lea
testl
cmp
mov
and
cli
aam
pop
ret
dec
mov
xchg
cltd
in
call
inc
push
adc
push
mov
scas
scas
in
pop
enter
repz
sub
jg
push
add
pop
shlb
pop
xchg
stc
shl
and
mov
scas
ds
into
inc
lods
xlat
jp
push
pop
mov
fmull
xor
pop
xchg
in
jne
and
xchg
out
fsubp
inc
call
add
inc
push
pusha
jbe
out
test
stos
rcrb
std
add
add
call
fwait
inc
int3
pop
out
sbb
sti
test
add
cmp
xchg
aam
cmp
and
call
mov
xor
adc
xchg
iret
js
mov
pop
dec
mov
imul
dec
cltd
cmp
adc
cltd
push
cwtl
cmpsl
cld
das
xor
lcall
repz
lods
push
jb
js
mov
lcall
movsl
adc
jno
xor
and
add
int
enter
pop
jne
pop
xchg
push
cltd
dec
push
pushf
repz
ret
ficomps
inc
dec
data16
dec
shll
xor
jp
ficoms
loopne
loopne
inc
shl
sahf
xor
push
mov
dec
ja
xor
mov
pop
dec
or
ja
idivb
sbb
lret
xchg
xorl
add
xchg
mov
inc
pop
xor
pushl
push
adc
loope
mov
xlat
scas
cmc
add
adc
lret
or
xchg
mov
inc
into
mov
repz
xchg
cwtl
cld
xor
cli
push
jmp
out
mov
and
ljmp
add
sub
mov
mov
jmp
jl
lock
int3
jp
jle
inc
adc
in
popf
test
jnp
add
stc
mov
or
inc
shr
dec
testb
icebp
in
jo
add
inc
pop
lret
pusha
outsl
jb
mov
cmp
sub
pop
jg
ja
enter
loopne
out
mov
jb
mov
addr16
pop
mov
jg
lds
scas
cltd
leave
mov
test
aam
int3
js
stos
in
ds
sahf
mov
push
xlat
roll
fwait
mov
out
add
add
pop
lcall
addr16
and
shlb
add
add
or
jns
and
cmp
rcrl
sbb
mov
push
dec
or
dec
lea
jmp
push
jo
mov
adcl
das
pop
int
popf
and
adc
adc
push
aam
mov
jl
xor
gs
dec
fidivrl
out
jmp
xchg
pop
mov
push
lret
hlt
pop
leave
int3
out
mov
cmpsl
js
cmpsb
mov
sahf
divl
ret
scas
leave
jne
xor
add
cld
xor
pop
jns
aaa
std
inc
inc
leave
je
rcll
lret
add
push
iret
xchg
pop
leave
adc
ja
into
cs
aam
adc
stos
push
or
arpl
dec
jg
adc
xchg
cmp
sbb
fadds
push
xchg
sub
jl
jb
call
inc
mov
imul
xchg
addr16
and
jge
inc
lret
cld
mov
lea
stc
push
into
movsl
mov
sub
jns
int3
les
loope
repnz
sub
xor
fcmovnb
loopne
xchg
and
xor
pop
mov
cmp
xchg
scas
xorb
call
in
xchg
sbb
fstpl
stos
xchg
mov
or
inc
js
inc
jae
inc
dec
dec
and
jmp
pop
and
not
mov
lock
push
dec
out
sbb
jle
rclb
ret
cwtl
push
sti
out
jo
bnd
xchg
out
ss
in
iret
movsb
add
repnz
xchg
mov
mov
inc
outsb
pop
jmp
mov
aaa
cmp
pop
hlt
insl
xor
sub
pop
lea
fimull
shlb
movsb
iret
call
repnz
out
fadd
dec
pushaw
mov
mov
pop
ja
cmp
adc
int3
jne
add
add
outsl
daa
insl
push
addb
xchg
fstl
add
add
add
lret
adc
push
fwait
dec
repz
and
icebp
mov
mov
lcall
mov
ret
add
fmul
out
push
push
or
push
sbb
in
pop
inc
popf
les
xchg
cmpsl
sub
xchg
xchg
loopne
mov
or
push
pushf
push
adc
addr16
fistl
inc
ds
jne
mov
adc
iret
stc
pop
xor
add
inc
int3
jns
imul
mov
repz
ja
jmp
cmp
mov
pop
push
mov
pop
rcr
cltd
inc
in
inc
lret
pop
cs
or
pushl
jns
pop
mov
and
mov
mov
scas
lds
stc
pop
push
lods
ss
insb
mov
pusha
out
hlt
adc
dec
negl
or
or
jo
mov
bound
std
repnz
mov
xor
in
loop
mov
das
and
int3
test
inc
lret
aad
syscall
xor
pushf
pop
stc
adc
pop
scas
sbb
and
pop
adc
sub
mov
insl
push
and
push
inc
mov
prefetcht2
rcl
lods
add
es
daa
ljmp
into
sub
and
xlat
repnz
andb
adcb
xchg
xor
addr16
push
loopne
jg
jno
mov
cmpsb
jmp
xor
mov
mov
out
loope
ss
dec
dec
sbb
mov
sbb
inc
loope
or
inc
sub
cwtl
mov
scas
outsl
push
jae
mov
adc
sub
rorb
lea
test
lods
sbb
jg
daa
cmovbe
xor
setge
test
sbb
mov
shrb
adc
out
mov
fdivrs
jo
add
add
pop
and
mov
out
leave
enter
das
icebp
fistps
add
add
or
mov
cmp
xor
lcall
push
mov
jae
stos
or
cmp
add
rclb
les
inc
outsb
out
outsl
and
mov
cmp
push
pop
xchg
scas
shrl
sub
xor
inc
test
mov
cltd
subb
shl
daa
out
int
test
xor
aad
ljmp
push
lahf
fcoml
push
push
jg
loope
dec
add
std
outsl
cltd
add
mov
mov
xchg
mov
repnz
sbb
lea
mov
call
add
sub
pop
cmp
jge
dec
pusha
dec
mov
inc
dec
mov
inc
lret
push
es
inc
lock
and
js
push
sbb
scas
push
inc
enter
test
mov
cmp
insb
dec
ror
cmpsl
movsl
push
in
jns
sbb
push
cmpsb
fwait
mov
and
mov
lods
or
mov
dec
inc
sub
mov
push
adc
popf
movaps
add
lock
and
xchg
notb
cmp
sub
jb
pop
pop
sahf
xor
cmp
cmpsl
jb
cmp
popa
mov
test
stos
mov
mov
mov
jmp
push
mov
sahf
ret
in
repz
and
mov
dec
adc
insb
and
outsb
xchg
sbbl
or
int
ret
aam
adc
cmp
ret
xor
testl
cwtl
js
adc
cli
lds
xlat
mov
inc
dec
inc
mov
xchg
mov
xor
xchg
orb
xchg
sbb
hlt
jp
test
or
inc
in
std
in
shll
pusha
push
jne
push
test
add
add
cmp
mov
push
repnz
rcrb
add
inc
dec
pusha
repnz
pushf
push
sahf
ljmp
lods
adc
and
or
inc
mov
or
pop
addr16
mov
add
xchg
inc
add
jns
shrl
mov
adc
daa
rclb
iret
ret
mov
test
xchg
addl
daa
das
pushf
je
fisttps
sbb
push
xchg
into
adc
mov
sub
test
lfs
js
push
int3
out
mov
cli
and
jae
push
gs
fcmovbe
dec
mov
pop
sbb
push
mov
idiv
xchg
xlat
jne
scas
jp
xchg
sub
jg
mov
out
ret
mov
push
js
lret
addr16
mov
mov
push
or
xchg
dec
sbb
scas
jb
add
mov
pusha
mov
xchg
fdivr
int
pop
xor
ja
ds
xor
jae
jmp
xor
add
js
loope
insl
mov
shlb
push
cmp
fdiv
in
push
bswap
jne
dec
aad
mov
sub
in
cmp
mov
cmp
push
in
dec
insb
cmp
shlb
mov
add
mov
mov
scas
daa
sti
jecxz
jl
sbbb
cmpsb
fsubrp
pop
fwait
aas
fistl
and
jecxz
lret
lods
pusha
gs
mov
lret
ljmp
hlt
sbb
xchg
push
mov
scas
test
in
repnz
ds
sub
std
pop
in
xor
lea
fwait
cmp
es
lahf
mov
sub
mov
adc
fists
pushf
ljmp
mov
loopne
mov
cmp
addb
mov
mov
cmp
mov
add
push
ds
outsb
sbb
aam
dec
out
in
pop
cltd
int3
add
std
add
add
ljmp
mov
xor
lret
mov
repnz
ss
xor
jo
fdiv
add
cmp
pop
pop
cmp
sub
movups
mov
inc
rol
xchg
aam
fldt
dec
xor
imul
aaa
nop
inc
mov
cmp
mov
stos
add
inc
shl
xchg
pop
mov
repnz
mov
mov
lcall
insb
push
push
outsb
push
add
mov
aas
mov
imul
mov
cmpsl
and
cli
xchg
xchg
divl
cmc
pop
inc
data16
movsl
movsb
enter
negb
out
in
das
test
cltd
jo
xchg
jnp
fsubs
sbb
insb
jge
cmp
mov
shrl
xchg
clc
lods
and
fcomp
int
sub
lret
lds
mov
es
mov
add
dec
mov
add
ss
out
push
pop
mov
jmp
cmp
pop
lods
clc
add
sar
sub
fnstsw
in
cvtps2pd
add
pop
jae
cli
mov
jp
xor
jnp
push
mov
mov
in
or
push
dec
sbb
iret
fwait
cs
ret
cmp
leave
xor
cmpsb
push
sbb
shll
push
pushf
mov
jmp
aam
enter
jg
ret
or
dec
cmc
jecxz
pushf
fistl
mov
push
cmpsb
pop
and
loop
push
ja
test
aas
stc
mov
arpl
or
int
lret
scas
jnp
inc
mov
out
ljmp
aam
popf
testb
loope
add
mov
add
or
add
add
mov
nop
sbb
add
add
add
ss
xchg
xchg
mov
jp
mov
cmpsl
shll
pop
xor
in
rcrb
ljmp
sub
pop
sbb
outsl
adc
cmpsb
push
cli
addl
cmp
sbb
imul
cld
sbb
add
loop
xchg
add
test
cld
imul
add
je
cmp
add
xorb
jb
push
lods
inc
test
sub
out
or
fstps
out
fidivrs
adc
xor
imul
notb
mov
push
lret
nop
ret
sahf
xor
testb
rep
in
xlat
orl
xor
cmpsl
and
dec
cld
adc
fsts
stos
ret
pop
push
mov
lods
es
sbb
insl
sarl
iret
out
aad
add
and
lods
mov
adcb
mov
int3
sti
popa
xchg
enter
aas
cmp
mov
adc
and
push
sbb
call
mov
sub
sbbl
cwtl
imul
jns
add
sub
sbb
call
add
xor
test
xlat
xor
jl
and
imul
sbb
je
out
gs
add
ret
mov
lcall
jne
inc
xchg
sub
adcb
mov
loope
or
or
xchg
lds
lds
int
mov
icebp
xor
xchg
xorb
ds
jnp
cmovl
xchg
mov
mov
gs
jae
jle
pop
mov
ljmp
add
pop
cmp
add
out
xchg
push
ret
gs
fstps
addr16
xor
add
add
mov
in
dec
cmp
mov
rolb
add
add
add
xor
in
xchg
or
call
mov
mov
adc
fst
mov
lahf
jl
adc
push
test
jmp
lcall
inc
dec
data16
dec
shrb
rcrl
push
jns
mov
xor
scas
or
outsb
out
daa
lahf
fs
adc
fs
test
ss
mov
xchg
lret
adc
outsb
adc
jmp
lahf
sub
sub
repnz
lods
jne
jo
dec
cmp
xor
and
push
cmp
pop
lret
push
push
loopne
mov
bound
push
adc
lds
and
inc
ljmp
ret
sub
inc
push
jg
mov
popa
mov
pusha
or
int3
outsl
xchg
test
lcall
push
push
repnz
jns
cmc
ss
sti
jge
add
or
cltd
les
iret
movsl
popa
sbb
push
jp
roll
and
dec
dec
jp
mov
lock
cwtl
fimuls
mov
hlt
add
mov
cmp
xchg
shll
stc
in
push
sub
and
sbb
inc
hlt
mov
fstl
cmp
sub
xor
insb
loop
mov
jmp
jae
test
pusha
pop
bound
mov
loop
push
xchg
pop
inc
mov
dec
jnp
pop
and
mov
jno
jnp
push
pop
pop
leave
lret
inc
jg
mov
popl
jb
adc
mov
sti
mov
stos
pop
pop
mov
xor
cmp
aam
inc
push
mov
pop
add
pop
lods
xchg
ss
sub
mov
imul
fldl
add
add
fldcw
and
pop
int3
nop
rolb
add
add
add
mov
clc
xchg
or
enter
inc
shrb
pop
aaa
fisttps
movsb
bound
js
push
mov
and
xchg
orb
and
aaa
pop
mov
adc
imul
jmp
pop
stos
adc
mov
push
mov
add
mov
push
adc
hlt
enter
add
adc
rcll
lock
pop
mov
scas
testb
xor
dec
mov
mov
andb
arpl
or
add
icebp
setne
cmp
sti
leave
inc
insl
aad
dec
lahf
pop
testl
mov
adc
adc
mov
sahf
arpl
mov
xchg
popa
imul
out
fstps
imul
leave
cwtl
in
js
into
xlat
test
fcomps
bound
out
pop
dec
xlat
and
and
int3
add
adc
loope
sbb
int
sbb
sahf
mov
mov
mov
push
and
and
or
gs
bsr
mov
mov
push
in
adc
push
cmc
ret
fiadds
cmp
add
test
xchg
inc
sub
sbb
addb
pop
fcmovnbe
jbe
adc
test
adc
inc
push
mov
stos
jg
stos
sub
jne
inc
push
leave
add
lods
sbb
cmp
dec
lds
adc
stos
repz
and
pop
out
mov
cwtl
mov
shll
mov
fbld
lock
shll
jg
mov
add
imul
add
push
dec
pop
xchg
js
or
add
add
mov
mov
push
sub
and
out
notl
fsub
xlat
mov
movsl
je
filds
or
sahf
cpuid
adc
mov
cmpsb
dec
dec
mov
cs
jmp
imul
adc
push
inc
fwait
jmp
mov
xor
je
js,pt
test
pop
out
ror
push
ja
outsl
popa
dec
leave
stos
aas
xchg
insl
mov
mov
cmp
and
outsb
sbb
into
mov
mov
xor
mov
xchg
mov
icebp
mov
decl
mov
mov
xchg
xchg
xor
sbb
stos
daa
sar
xchg
js
aad
imull
flds
je
rcrl
jno
xor
inc
cld
mov
in
jmp
in
fistl
lret
cmp
push
sub
mov
sbb
add
xchg
inc
stos
int3
aaa
push
inc
out
dec
xchg
sbb
fsubrs
xchg
xchg
xor
pop
cmp
lret
je
int
lds
ja
inc
scas
dec
sub
insb
test
test
push
lods
adc
xchg
pushf
push
nop
aam
mov
cmpsl
sbb
jecxz
test
inc
jmp
bound
mov
rcll
xchg
xor
test
xor
int
xchg
adc
sub
add
add
xchg
insl
mov
mov
mov
repnz
mov
mov
roll
call
xlat
bound
es
mov
sbb
pop
jae
cmp
push
dec
sbb
xchg
xchg
push
cmp
jns
pop
lock
jo
int3
leavew
or
out
xchg
test
ret
push
inc
mov
or
jae
fstpl
mov
iret
xor
cld
cld
imul
das
scas
dec
pop
pop
push
cmp
mov
roll
in
repz
add
xchg
jl
cld
decl
or
sub
mov
add
add
add
pop
out
mov
aad
outsl
stos
jp
lds
sbb
popf
mov
ret
dec
inc
addr16
fnstsw
es
cmpsb
adc
or
xor
mov
inc
push
loope
outsl
xchg
imul
fldcw
cmp
xlat
mov
loope
or
sbb
adc
movsl
jae
sar
sbb
sbb
xchg
mov
sub
inc
push
or
mov
iret
bound
sbb
adc
push
mov
dec
adc
loop
mov
jo
xchg
test
dec
dec
leave
negb
or
stc
out
imul
lret
nop
xorb
push
fisttps
mov
push
mov
aam
test
and
add
sub
inc
js
mov
xchg
jbe
xor
cmc
add
dec
inc
mov
mov
lea
or
xchg
pop
push
mov
dec
icebp
pop
mov
or
cld
and
inc
jmp
sub
repz
aaa
push
and
inc
xor
pop
add
out
xor
add
add
mov
sub
test
sbb
add
loope
dec
or
sti
outsl
nop
cmpsl
mov
out
lods
adc
pop
inc
iret
movsl
xchg
cmp
enter
sbb
cmp
or
sub
ja
mov
xchg
dec
scas
push
int
pop
rolb
pop
cmpsl
aam
das
movl
fdivrs
cld
filds
outsb
iret
repnz
jne
jae
sbbl
xchg
insl
mov
add
pop
and
mov
cltd
iret
cmp
mov
mov
fst
ss
jp
pop
adc
lds
xchg
data16
fmuls
popa
out
push
arpl
push
rclb
jmp
addb
aam
add
ret
and
dec
repz
fldt
scas
and
inc
xchg
add
std
add
add
or
test
jo
mov
ror
inc
inc
add
aas
lret
sarl
sub
fidivs
sbb
sbb
mov
inc
pop
sub
test
dec
jbe
and
dec
xor
sub
adc
cmpsb
mov
sahf
notb
sbb
jmp
add
xchg
clc
push
outsb
mov
aad
mov
repz
pop
out
mov
arpl
sub
xchg
mov
lea
cs
jbe
pop
push
mov
in
and
fucomip
add
add
nop
mov
in
lret
pop
out
xor
outsb
inc
sti
stc
aas
mov
daa
push
add
mov
cs
inc
mov
add
cmpl
push
inc
shr
inc
push
fwait
inc
push
out
ret
or
lret
sub
adc
pop
push
jne
rolb
loop
xchg
xchg
xchg
ret
imul
xchg
sub
repnz
push
dec
out
inc
push
lea
push
imul
adc
out
out
fxch
mov
push
mov
or
dec
xor
loopne
jl
adc
and
mov
sub
ret
pop
xchg
mov
xor
outsb
push
in
push
cs
cmp
divb
mov
jbe
loope
sbb
fisttps
push
adc
fidivs
mov
call
push
xchg
mov
pop
dec
lret
mov
ds
lret
ss
leave
dec
cmp
ljmp
add
inc
mov
jns
lock
mov
pop
pop
jge
lods
sub
mov
pop
mov
mov
testb
into
insl
in
jbe
inc
loope
shl
mov
imul
mov
add
add
lcall
rcll
mov
test
add
std
add
add
pop
lret
sub
stos
or
scas
les
push
mov
fwait
es
push
stc
cmp
mov
cmp
mov
test
sub
push
outsb
dec
js
pusha
xor
test
jge
add
pop
movsb
scas
jg
and
xchg
lret
sbb
pushf
lret
add
sub
push
shlb
nop
sub
mov
repnz
jae
sub
adc
test
inc
cmc
andl
xor
mov
rcrb
stc
lret
fisubrs
push
push
push
lea
aaa
fmuls
mov
cmp
pop
and
nop
dec
cmpsb
push
cwtl
jge
fdivrl
sbb
cmpsl
shrl
xlat
xchg
or
or
ret
push
pop
popf
data16
leave
mov
fidivrs
or
pop
in
test
lods
outsb
aaa
jns
addr16
xlat
mov
xchg
imul
push
jae
push
fbld
add
dec
je
mov
cmpb
ljmp
orl
xchg
mov
adc
inc
movsb
and
add
xor
fidivl
test
xchg
push
test
arpl
or
xchg
test
mov
and
and
in
in
fidivs
ret
in
xor
ficoml
xchg
out
aaa
cltd
push
lock
rclb
mov
stos
xchg
inc
push
imul
sub
mov
xor
jns
jnp
push
dec
ret
orl
jle
jg
add
dec
cmp
or
in
fistpl
sub
xor
cmp
cmp
inc
in
test
sub
sub
push
push
and
or
aas
xchg
xor
stos
xchg
xchg
test
jbe
bound
mov
and
loopne
sbb
shr
adc
movb
add
idivl
jg
rolb
addb
add
sub
imul
stos
push
cld
pop
int
inc
adc
cmp
inc
pop
lcall
mov
jne
or
inc
mov
fnstcw
fmulp
imul
jg
sarb
test
mov
xor
js
push
pop
imul
nop
lods
dec
test
popa
out
and
jmp
jnp
fwait
outsl
insb
cld
pop
push
scas
xor
imul
dec
mov
int
test
inc
movsb
orl
adc
cmp
cmp
mov
xor
ret
fs
sub
adc
or
mov
bound
add
addr16
fs
mov
rolb
ds
decl
jg
jns
xchg
push
pop
inc
jne
outsl
cmpsl
mov
xor
push
rcrl
xor
insl
fidivrs
push
cld
in
pop
stc
scas
hlt
sbb
sti
ret
sub
into
or
int3
sub
mov
add
fiaddl
xchg
mov
into
jmp
dec
sbb
rclb
mov
lahf
je,pn
push
add
incl
xchg
js
jnp
out
mov
mov
cmpsb
push
pushf
add
xchg
es
jge
in
xchg
xor
add
mov
out
jmp
mov
fisubrs
jnp
cmpsb
not
sbb
dec
and
jge
aad
icebp
jecxz
fs
or
xchg
or
and
push
mov
in
adc
dec
mov
lods
in
mov
add
into
js
in
leave
add
jge
aad
stos
add
iret
mov
sbb
enter
mov
or
jo
repnz
dec
mov
daa
ljmp
test
or
test
out
loop
into
mov
add
das
movsb
lods
out
mov
leave
or
jge
movswl
add
add
jecxz
mov
rol
push
fistpll
add
std
add
add
ds
fwait
aam
vmovntpd
add
cltd
jnp
inc
rcll
adc
lcall
data16
jg
rcr
lods
mov
pop
add
lods
test
fs
inc
pop
cli
fiaddl
and
gs
xor
jo
inc
dec
adc
mov
rorb
cmp
or
pusha
push
lds
lret
xor
sub
push
in
dec
cmp
icebp
jge
popa
mov
out
mov
cmp
inc
push
test
popf
shll
shlb
ljmp
and
jb
cli
pusha
in
in
xchg
and
push
int
enter
int
mov
jmp
aam
loopne
mov
add
cmp
sub
int
or
lock
enter
in
cmpsb
push
fisubs
jmp
loope
data16
dec
fisttps
cmp
sub
mov
rolb
or
push
cli
inc
cli
les
loope
cmc
jl
adc
mov
in
push
sub
dec
jp
sbb
ret
fisttpll
mov
nop
xor
movswl
mov
pop
stc
fdivs
push
push
inc
gs
xor
push
pop
int
js
jb
pop
jns
mov
imull
and
mov
sbb
test
xchg
lret
sbb
clc
mov
repnz
outsb
out
pusha
xor
out
push
pop
sbb
in
out
mov
arpl
mov
cmp
xor
mov
stc
mov
mov
push
cmpsb
pop
dec
or
repnz
repz
mov
mov
xor
addr16
push
mov
mov
and
jp
cmp
enter
push
bound
jno
mov
cmpsl
xchg
xor
hlt
scas
sub
movsl
je
jl
pop
adc
jg
aam
pop
jno
fsubrl
mov
fcompl
or
adc
ljmp
add
add
jg
or
pop
inc
sub
or
dec
xrelease
bound
repz
push
mov
leave
outsb
add
repnz
ja
xchg
jmp
mov
test
popf
jecxz
add
cld
push
xlat
ja
das
fiaddl
or
adc
dec
aam
mov
mov
leave
jl
pushf
lahf
push
adc
xchg
aam
inc
imul
cmp
mov
push
and
jne
pop
cmp
fnstsw
enter
pop
jnp
dec
and
loopnew
sar
or
jb
push
je
ss
decb
shl
out
jns
test
clc
mov
into
mov
int3
iret
mov
jnp
xlat
enter
bound
mov
push
mov
lea
jo
sbb
sbb
jbe
out
cmp
test
xchg
test
sbb
inc
subl
mov
lret
add
cmp
xor
mov
out
notl
cmp
add
jg
sub
scas
push
test
xchg
add
sub
jg
add
ss
es
lods
leave
sub
sub
push
aas
mov
cmp
or
xor
addr16
js
mov
int
mov
inc
push
shrl
mov
out
jnp
fbstp
in
aas
pop
jle
les
pop
out
popa
sub
enter
mov
jl
fisubs
xchg
sub
ret
push
mov
cltd
lods
xchg
lcall
fdivs
adc
pusha
cmp
jnp
sub
daa
rcrb
sbb
xchg
cltd
test
in
xchg
mov
pushf
fbstp
or
mov
fwait
jae
sub
dec
lahf
add
add
pop
sbb
cli
inc
cli
mov
aaa
idivb
add
std
add
add
cmp
add
cs
or
sbb
mov
dec
cld
and
add
lret
sub
sub
sti
mov
lds
jno
test
xor
sub
sarl
jmp
pusha
jecxz
mov
aas
dec
or
je
cmc
mov
sub
xchg
mov
xor
shrl
xor
ja
insl
mov
xchg
push
mov
lahf
jl
out
bound
out
cld
adc
fcompl
jg
jg
nop
aam
or
out
jge
cmp
leave
popa
sub
jmp
mov
lds
mov
test
pop
popf
outsb
fildl
cmp
sti
aad
cmp
icebp
adc
inc
adcl
lretw
pop
xlat
imul
xchg
push
jge
xchg
shlb
pushf
and
sbb
loop
fs
jne
push
cmpsb
mulb
insl
lret
mov
mov
and
push
scas
xor
mov
movl
xchg
xchg
and
fs
sub
icebp
pop
test
add
xlat
adc
pop
out
xchg
les
lea
inc
dec
xchg
xor
xchg
sbb
push
dec
fcomps
cmp
les
pop
jle
mov
push
cmp
mov
loope
pop
out
ss
mov
rcll
loope
mov
stc
dec
lock
push
fs
jno
fisubrl
jl
inc
jns
push
mov
mov
jbe
cmp
loop
cmc
jecxz
jge
pop
jl
push
out
lock
hlt
cld
jl
jmp
or
daa
cmp
inc
sub
ljmp
les
mov
jl
push
scas
stos
xchg
cmp
mov
bound
mov
adc
add
test
mov
mov
xlat
push
xlat
ja
out
push
lahf
fcoml
add
std
add
add
or
inc
adc
and
mov
or
popf
or
xorb
xor
ljmp
sbb
insl
sbb
sub
mov
cmpsb
mov
test
adc
sbb
xchg
loopne
inc
aad
lea
scas
mov
fdivrp
imul
movsl
repnz
xchg
test
dec
pop
sahf
int
in
iret
ljmp
loopne
bound
enter
test
and
mov
adc
stc
or
sbb
arpl
fildl
mov
jnp
bound
mov
dec
dec
enter
mov
pusha
popf
push
std
add
rcrb
pop
mov
add
mov
mov
jle
lds
in
mov
movsl
pop
inc
dec
push
inc
pusha
pxor
test
loope
jle
jae
test
mov
lods
popa
mov
push
or
mov
scas
xchg
sbb
and
jle
mov
inc
or
sbb
inc
hlt
icebp
or
daa
dec
rcrb
les
mov
mov
sub
jmp
outsb
fdivl
ss
fildll
mov
dec
adcl
ffree
cld
fisubrs
jae
pop
or
rcrb
dec
es
fsubs
xor
insl
ss
movsl
or
aaa
aaa
mov
out
sub
dec
sub
pop
mov
push
inc
cld
push
daa
lds
inc
cmp
lret
jne
ja
mov
out
mov
jl
mov
jge
dec
inc
xor
ficoms
sub
out
push
faddl
es
sub
xchg
sbb
sahf
sub
push
pop
lods
dec
pop
jo
pop
add
int3
jbe
push
mov
add
or
inc
jo
add
add
rcll
jmp
pop
cmp
jb
add
std
add
add
fidivl
arpl
xchg
das
leave
lds
xchg
scas
xor
mov
or
cmp
addr16
dec
xchg
shlb
mov
shr
jg
and
inc
shl
cmp
pushf
or
insb
mov
jns
jb
inc
xor
lods
gs
pop
in
mov
push
mov
xor
aad
xchg
or
rol
repz
add
push
inc
push
call
inc
pop
jne
insb
stos
repnz
andb
ret
cltd
outsl
fs
cmp
mov
mov
clc
or
mov
stos
scas
insl
popa
in
into
jg
cmp
popa
dec
scas
data16
test
mov
sar
dec
add
out
jge
cmp
in
fwait
dec
ljmp
call
aas
xchg
les
lods
push
sbb
pop
fnstenv
or
or
dec
fldt
xor
adc
pop
iret
cmpsb
dec
push
test
dec
mov
add
mov
xchg
inc
jno
dec
add
lret
ja
popa
push
dec
das
jno
cld
xor
cmp
dec
xor
outsl
ret
push
xlat
ret
frstor
insl
jmp
and
push
ret
xchg
arpl
push
popf
int
xor
xchg
in
iret
fmuls
push
mov
xor
out
fidivl
or
sti
jle
and
das
dec
mov
cmp
outsb
test
push
addr16
in
cwtl
mov
out
ret
mov
lock
jmp
flds
cmc
mov
enter
aaa
in
les
repnz
mov
nop
or
gs
loope
jmp
mov
sarb
dec
scas
dec
push
xchg
loopne
in
push
push
xor
lea
stc
pop
dec
pop
xchg
mov
jge
pop
push
insb
inc
jecxz
and
xchg
inc
sub
shrb
add
add
add
add
negb
mov
clc
inc
inc
outsl
call
add
mov
sahf
or
pop
push
sub
daa
lahf
int3
inc
subl
lret
sbb
icebp
push
stos
loope
dec
mov
roll
ljmp
repz
leave
mov
jmp
xchg
shl
addr16
sub
es
add
and
sbb
dec
push
aas
push
lods
movsb
and
add
aam
push
and
out
hlt
ds
add
add
or
gs
mov
loop
pop
pop
mov
in
or
push
scas
fistpll
xor
adc
ljmp
aad
mov
lahf
sub
in
mov
fdivl
iret
mov
cmc
das
movsb
sbb
pop
add
push
mov
js
sub
sbb
mov
pop
mov
ret
sbb
sbb
xchg
loope
popa
lahf
aam
mov
mov
mov
lods
push
mov
stos
sub
xor
xchg
sbb
sub
mov
out
stc
test
cwtl
cmpsl
pushf
inc
adc
bound
mov
pushf
rcr
mov
imul
mov
popf
repz
or
xchg
repnz
cwtl
data16
add
cltd
ja
js
add
dec
push
pusha
repnz
xchg
jecxz
or
and
insb
fldcw
aad
pop
cltd
subb
js
aaa
sahf
pop
aam
mov
xchg
dec
repz
adc
subl
mov
in
adc
pop
pop
into
stc
adc
mov
mov
xchg
dec
push
movsl
rclb
icebp
lods
pop
lahf
dec
cmpl
loopne
push
and
ret
mov
xchg
pop
imul
dec
fadd
sbb
push
test
mov
lret
cmp
push
cltd
cmp
add
push
push
jnp
outsl
jno
dec
mov
push
insb
ljmp
jae
fsincos
push
mov
cmpsl
loop
lods
sarl
mov
mov
popf
jmp
data16
push
rorl
inc
mov
inc
jg
push
pop
jle
fidivrs
sbb
sub
add
jns
push
xchg
pop
mov
cmpsb
push
out
xchg
and
gs
push
shlb
mov
and
cmp
push
loop
stc
inc
aas
sub
cmp
dec
jg
aaa
out
inc
mov
mov
fidivrs
mov
pop
sub
mov
leave
popa
rdmsr
icebp
aas
jecxz
testl
sbb
pusha
pop
nop
insb
mov
int
xor
mov
push
dec
test
xlat
shll
push
dec
xor
dec
or
aam
nop
or
hlt
gs
mov
test
inc
scas
aad
jbe
loope
inc
jecxz
push
scas
dec
in
outsb
outsb
xor
ret
lahf
cmp
int
fsubrl
jo
sbb
push
ret
and
fst
sbb
mov
lret
jp
es
cmp
ljmp
mov
xchg
cmpsb
push
cld
stc
jecxz
jmp
fdivr
lds
mov
sbb
iret
xchg
fs
rol
push
and
pop
sbb
pushf
cmpl
add
sub
mov
jnp
sbb
cmpsb
repz
mov
cmp
inc
xchg
sub
je
inc
std
jno
xor
pop
cmpsb
add
fs
stos
jle
xor
jne
xchg
mov
add
repnz
push
je
hlt
popf
and
lcall
mov
out
pop
js
ss
adc
jo
rol
dec
aam
mov
dec
lret
repz
stc
pop
pop
mov
jle
mov
leave
jbe
addr16
mov
cmp
nop
int
push
addl
aad
sub
sarl
mov
jge
mov
lcall
dec
into
mov
cltd
enter
mov
stc
popf
and
sahf
fildll
add
std
add
add
lods
das
insb
cwtl
test
stc
sbb
mov
mov
xchg
push
jmp
clc
jb
aaa
lar
or
push
pop
sarb
xor
push
std
inc
in
jl
fidivrl
or
cmp
pop
sub
pop
nop
ror
test
add
and
hlt
loope
repz
stc
call
aad
dec
adc
rcll
xchg
mov
ret
lods
push
or
mov
cli
xchg
cli
hlt
adc
mov
iret
mov
cmp
loopne
iret
int3
jno
inc
pop
mov
pop
push
lret
mov
loope
clc
setne
ficoms
aas
jg
sti
lea
cmp
xchg
dec
pop
xchg
inc
mov
and
dec
push
in
in
and
or
pusha
pop
mov
cmpsb
xchg
fnsave
jne
sub
shrb
adc
xor
mov
icebp
call
int3
enter
jnp
dec
cmpsl
or
and
adc
nop
sbb
fldenv
ss
aam
sub
xchg
test
cs
xchg
push
pop
sti
push
mov
rolb
in
push
or
sbb
int3
shrb
lea
cmpsl
outsb
cli
xchg
dec
pop
shll
lock
mov
xor
ljmp
mov
push
je
jl
adc
push
cmp
insl
jns
insl
lahf
cmp
loope
daa
add
fldt
or
sahf
fsts
stos
shlb
pop
push
sbb
lock
sbb
bound
les
xor
push
xor
lock
insl
sbb
xor
fistpl
ljmp
out
insl
jmp
imul
jae
mov
mov
adc
stos
mov
outsb
out
xlat
out
iret
dec
hlt
xlat
in
rcrb
scas
sbb
push
add
add
sbb
jge
and
dec
sub
fadds
std
add
add
push
in
inc
fcomps
inc
jmp
push
movsl
sub
mov
pop
aad
jg
jg
mov
mov
lea
sub
cmp
cli
push
pop
sub
popf
mov
ja
mov
sbbl
cli
or
xchg
sar
repz
notl
mov
sub
jmp
mov
faddp
xchg
cli
rorb
push
mov
mov
or
pusha
sub
repnz
cmp
fcmovnbe
cmp
fisubs
popf
mov
mov
push
xor
sbb
dec
inc
aad
jb
out
cwtl
or
ja
mov
fiadds
movsl
and
adc
loopne
in
clc
jge
in
inc
xchg
pop
xchg
ja
fs
mov
insb
repz
mov
fcomi
mov
add
mov
test
xchg
cmp
fwait
jne
out
addb
outsl
sub
push
sbb
ret
test
inc
test
inc
inc
sbb
loopne
pop
pop
clc
fld
call
stos
not
les
jno
add
fisttpll
mull
stos
pop
andb
xlat
pop
and
mov
stc
iret
subb
xor
cmp
rdtsc
xchg
mov
push
jne
or
insb
leave
call
mov
shll
dec
push
add
cmc
and
jmp
mov
loop
jmp
daa
push
fisttps
cltd
jle
loope
xor
pop
mov
incb
inc
xchg
sbb
aad
adc
jl
ja
outsb
mov
sarl
mov
aas
test
rorl
dec
push
adc
mov
cmpsl
jle
xor
adc
shll
push
push
or
hlt
pop
mov
xchg
pop
jns
add
push
push
jae
stos
lea
xor
dec
push
add
add
roll
pop
arpl
call
add
add
add
loopne
and
stos
mov
cmc
loopne
cmp
and
fiadds
mov
subl
stc
adcl
enter
xor
jecxz
maskmovq
testl
inc
sbb
fmulp
sub
add
adc
push
fistl
push
sub
xchg
or
fld
and
movsl
mov
push
and
mov
mov
mov
xor
mov
dec
loopne
cmpsl
mov
sar
insb
add
cmp
pop
aaa
push
imul
xchg
xor
rolb
push
cmp
lock
fld
push
mov
pop
xchg
dec
into
cmp
xchg
rolb
push
jae
and
cltd
jecxz
mov
inc
cwtl
add
call
sub
dec
dec
and
push
adc
mov
mov
int
imul
insl
cmp
push
ret
jg
outsb
add
cmp
les
js
sbb
cs
lods
push
inc
fwait
xor
cmp
ss
push
dec
or
movsl
dec
out
fiadds
negl
xchg
sahf
mov
pop
push
mov
add
and
loope
pop
in
aam
xchg
xor
cmpsl
mov
mov
imul
imul
lea
mov
xchg
fnsave
dec
mov
mov
test
mov
aaa
scas
lret
inc
jnp
push
push
sub
jmp
cmp
push
push
out
jmp
push
lret
sahf
lret
movsl
push
inc
dec
fcmove
push
stos
lret
add
and
or
adc
cwtl
outsl
les
sahf
repz
incb
xchg
mov
jecxz
sbb
mov
std
xor
insl
jecxz
inc
mov
pop
xchg
push
addr16
cwtl
hlt
sub
cmp
mov
mov
stos
jge
add
sbb
pushf
cli
mov
xchg
out
cltd
mov
repnz
std
add
add
or
or
icebp
insb
imul
popf
bound
xchg
sbb
push
and
shrl
stos
lcall
sbb
mov
fstpt
ja
sub
mov
movsl
call
pop
pop
movsl
stc
cmpsb
pop
lcall
inc
movsl
mov
ds
jmp
into
movsb
popf
repnz
or
pop
ljmp
rol
dec
std
fs
in
stos
out
dec
jno
cwtl
sbb
repnz
fsubl
push
loopne
adc
jle
mov
xlat
movsl
cmc
push
pushf
clc
hlt
push
pop
std
sbb
cmp
fists
inc
jo
or
outsl
inc
cld
adc
push
decl
mov
mov
mov
sahf
push
sbbb
or
pop
mov
jge
imul
testb
scas
add
out
mov
jno
icebp
push
test
loop
pusha
cs
and
mov
mov
pop
mov
push
clc
and
movsb
jno
jne
jg
xchg
cmpb
fdivrp
movsb
sarb
stos
mov
pop
push
popf
dec
sbb
aam
sar
rolb
push
add
inc
push
ds
clc
or
es
bnd
popa
js
sbb
mov
pop
push
cmp
push
and
jmp
push
pushf
mov
xchg
sub
dec
or
xchg
xchg
btr
and
dec
repz
mov
pop
outsl
lea
fiadds
jmp
scas
sub
int
cwtl
icebp
ret
mov
sbb
mov
jmp
je
inc
xchg
cmp
cmp
xchg
arpl
push
adc
inc
fs
mov
cmp
xor
lock
and
push
or
push
setge
or
pop
mov
data16
roll
scas
data16
add
add
fisubl
and
and
pop
hlt
add
std
add
add
push
sub
dec
xor
sbbl
sarl
push
adc
js
lea
jne
jle
mov
xchg
push
arpl
je
cmp
adc
mov
std
subl
leave
sbb
arpl
mov
and
inc
xor
movsl
daa
mov
pop
por
cmc
ret
hlt
mov
cs
pop
jecxz,pn
push
jecxz
movsb
push
mov
and
xchg
adc
ljmp
add
fwait
xchg
mov
xor
mov
xor
call
hlt
mov
sub
push
xor
add
push
mov
and
mov
mov
imul
jbe
sbb
and
pushf
adc
jae
popa
icebp
xorb
cli
scas
ljmp
pusha
hlt
push
xchg
xchg
rorb
push
test
rolb
jmp
sbb
scas
push
pop
lods
jns
ficoml
insb
mov
lret
mov
mov
or
pop
cmpsl
cltd
fistpll
jecxz
rorl
push
andb
inc
stos
inc
jb
sub
int
jne
cli
jg
out
add
scas
outsl
jl
das
and
xor
mov
add
pop
outsb
and
xchg
aas
push
xchg
adc
push
mov
mov
out
lahf
imul
dec
shll
sti
mov
int
lret
jnp
sbb
and
int3
cmp
add
mov
and
mov
sbb
pop
add
push
int3
jecxz
adc
jns
xchg
xchg
pop
add
and
xchg
fists
icebp
mov
aas
inc
stos
mov
jl
hlt
insb
pop
xchg
add
cmpsb
test
movsl
push
mov
sub
add
nop
stos
es
aas
iret
cmc
sti
pushf
and
push
nop
inc
cld
bound
add
std
add
add
push
mov
repz
sub
jle
and
sbb
movsb
cltd
cs
xor
cmpsb
fimuls
insb
push
adc
pop
lock
rorl
mov
mov
jbe
out
add
sub
inc
adc
add
sti
shl
arpl
test
xor
dec
pop
incb
adc
cmpsl
andl
pop
adc
inc
or
sarb
sub
push
sub
roll
ljmp
push
lea
test
cmp
rolb
mov
fsubrs
outsl
or
jg
push
and
xor
addr16
sub
scas
out
les
mov
loope
mov
shll
jmp
sbb
fmull
daa
popf
arpl
popf
mov
mov
mov
and
mov
push
mov
int3
mov
dec
inc
adc
xor
test
lock
dec
pop
cmp
jge
jns
sub
mov
adc
clc
movsb
pop
loopne
lret
mov
ffree
jb
enter
push
loop
mull
cmpsl
in
adc
push
fcmovnb
jge
aas
loope
jno
pop
pop
and
fisubrs
push
fcmove
pushf
pop
orb
jmp
iret
pop
mov
xchg
sahf
cmpsb
mov
scas
inc
push
mov
addr16
mov
fbstp
mov
sub
dec
out
sbb
int
adc
sbb
mov
inc
test
sbb
xorb
gs
and
push
inc
mov
stos
sbb
shrl
dec
inc
mov
mov
out
fnstsw
fwait
rcrb
add
mov
fstl
outsl
pop
sbb
dec
pop
out
dec
lea
ja
add
std
cmp
stc
jl
stc
jne
shlb
dec
push
clc
add
ljmp
into
push
jae
fcomip
mov
add
test
adc
xor
xchg
rcrb
lcall
aas
cmp
and
negl
add
enter
int3
jbe
cmp
loope
lcall
mov
xchg
inc
loopne
xchg
out
rcrl
stos
mov
or
sti
movsl
mov
jnp
adc
mov
and
test
mov
daa
ret
xchg
adc
stc
shr
mov
leave
hlt
cltd
jae
sub
push
fwait
pop
test
xor
mov
pop
fs
pop
call
mov
ficompl
and
add
out
push
lahf
into
testl
xchg
fisubrs
xchg
jns
in
push
mov
rol
and
jo
adc
jecxz
stos
mov
sti
cmp
pop
addr16
das
cmp
pushf
in
ja
mov
sarl
cmpsb
inc
jns
stos
mov
adc
fsubl
pop
imul
cmp
mov
mov
loopne
out
xchg
div
xor
cwtl
daa
test
add
fwait
jmp
mov
lds
dec
inc
push
aad
dec
mov
or
aas
xlat
daa
mov
rolb
enter
es
xchg
xchg
cld
sbb
mov
inc
adc
jg
push
loope
shrb
jo
xchg
dec
xor
push
sahf
xor
sub
popfw
xchg
aas
imul
xor
hlt
out
in
movsl
insl
stos
aas
out
xchg
push
sbb
cmp
cwtl
fwait
mov
jne
ds
and
jp
cmpsb
sub
mov
fwait
sbb
add
