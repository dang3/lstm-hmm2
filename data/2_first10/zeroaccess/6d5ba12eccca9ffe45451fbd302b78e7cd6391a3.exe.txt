push
mov
sub
sub
mov
push
add
push
push
movl
cmpl
je
cmpl
jle
jmp
push
push
push
pushl
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
movl
cmpl
je
cmpl
jge
jmp
pushl
push
push
push
push
call
mov
dec
mov
jmp
xor
or
mov
add
xor
mov
mov
mov
sub
sub
mov
or
mov
mov
mov
xor
mov
mov
andl
movl
or
mov
xor
add
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jl
jmp
pushl
pushl
call
jmp
mov
orl
mov
movl
cmpl
je
cmpl
jg
jmp
push
pushl
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
sbbl
mov
mov
movzbl
xor
mov
jmp
lods
insl
lcall
xchg
add
loope
or
jnp
sahf
jnp
aam
rcr
fcmove
test
mov
mov
test
orl
xchg
lods
jle
jno
jle
inc
mov
sti
xchg
jle
or
sub
or
rcrb
push
out
cwtl
dec
imul
out
sti
fldcw
cmp
mov
test
jne
sub
inc
sbbb
push
out
arpl
jb
sbb
xchg
insb
mov
xchg
add
imul
xor
sub
xchg
lods
in
mov
stos
sub
and
xchg
cld
xchg
xchg
inc
clc
mov
stc
mov
fldl
mov
push
sbb
or
pushf
inc
lret
int
mov
pop
arpl
jg
cmp
clc
mov
loope
or
mov
jge
test
inc
outsl
sub
fistpl
insl
cli
jne
test
les
cmp
lret
push
pop
test
and
mov
add
out
mov
fisttps
xchg
ds
call
adc
adc
cwtl
fstp
inc
pop
add
push
or
sbb
aas
xchg
mov
pop
outsb
fisubrs
sbb
js,pn
or
ja
mov
setbe
xchg
adc
aas
aad
test
pusha
inc
sti
les
es
pop
inc
inc
adc
js
xchg
cwtl
push
bound
imul
cmc
and
jbe
data16
bound
in
bound
and
mov
popa
fidivrs
and
shll
sbb
jae
fisubrs
push
push
cmpsb
lret
xor
mov
ret
sub
inc
pop
xchg
xchg
fstpt
mov
cs
sub
dec
inc
ljmp
add
sbb
add
jns
insb
xchg
push
pop
cmpsb
mov
lds
push
xor
insl
leave
push
pop
in
movsl
cmp
lods
repz
mov
push
jp
xchg
data16
pop
imul
ret
or
aas
mov
mov
add
xor
jle
add
repnz
jp
cmpb
cli
ror
jbe
mov
mov
push
and
icebp
push
pop
cmp
cmp
lret
sub
lods
xchg
addr16
push
mov
and
dec
dec
sarl
add
pop
mov
xchg
orl
sub
aad
fsubr
pop
hlt
and
insb
insb
lea
xchg
dec
lock
sbb
mov
or
into
inc
pop
and
pop
mov
add
mov
mov
mov
fstpt
subb
lea
push
mov
xorl
imul
xchg
in
push
inc
loop
bound
mov
dec
dec
bnd
or
lods
js
xor
add
mov
test
int3
cmpsl
xor
pusha
dec
iret
xchg
push
test
sub
jp
pop
pop
adc
data16
bound
pop
push
mov
lea
lods
lods
cmc
add
jge
mov
icebp
sbb
mov
sbb
je
jbe
iret
movsl
cwtl
out
add
xchg
insl
push
mov
mov
mov
fisttpll
mov
bound
adc
cmp
jae
inc
inc
pop
lret
ss
xor
test
loop
test
xor
lock
xchg
xchg
orl
aas
push
lcall
sti
adc
mov
dec
fldenv
sarl
lcall
aaa
andb
push
fwait
dec
scas
out
mov
xchg
out
xor
push
sbb
push
lods
jl
int3
divb
out
fwait
adc
shrb
clc
inc
subb
mov
int3
enter
ss
sbb
mov
shll
insl
cmpsb
lahf
pusha
icebp
js
dec
frstor
jno
sub
in
insl
or
sti
dec
pop
push
mov
and
jle
popa
icebp
sub
pop
mov
push
mov
dec
jge
icebp
and
xchg
gs
mov
jmp
mov
add
cmp
fnstsw
cs
hlt
push
mov
inc
fisttpl
lods
xchg
jbe
fmulp
mov
dec
pop
fsubs
sahf
mov
dec
rcr
sub
cwtl
popf
test
jae
jg
xor
ror
fisubl
lcall
aam
in
out
xor
icebp
jo
jge
outsb
push
add
lods
movsl
inc
pop
ret
mov
push
loop
add
add
xor
jecxz
lea
sbb
fstpl
out
cmp
scas
ret
cmpsl
movd
dec
jb
inc
stos
lds
xchg
mov
test
mov
filds
add
cmp
dec
mov
adc
inc
inc
cwtl
rcrb
fdivs
dec
divb
cmp
jns
xchg
hlt
dec
lcall
cmp
lret
fs
dec
sub
lret
jno
xchg
popa
popa
xchg
dec
jge
outsb
xchg
popa
test
xor
adc
inc
xor
stos
mulb
clc
outsb
mov
mov
enter
ret
pop
pop
xor
push
inc
mov
mov
popa
inc
mov
add
clc
jl
push
lds
mov
jno
and
into
mov
push
gs
pop
xchg
xchg
jle
jmp
lods
fldt
lahf
push
mov
sbb
dec
add
inc
mov
test
mov
and
cltd
push
mov
sub
and
jns
pop
pushf
fildl
xor
jge
xor
xchg
push
mov
adcl
lock
rcr
cmp
loop
jns
push
pop
mov
sbb
shrb
mov
add
int
jbe
cmp
rorb
int3
mov
loopne
sbb
xlat
or
sub
push
xchg
push
push
popa
mov
sub
sahf
cmpsl
pop
pop
pop
in
loope
mov
adc
push
ret
cmpsb
loopne
dec
pushf
adc
lock
test
aas
popf
imul
daa
imulb
pop
cmp
xor
mov
push
jge
repnz
and
add
mov
in
jmp
sbb
lock
add
stos
imul
and
and
es
addr16
enter
jmp
sub
dec
push
out
jo
insl
mov
cmp
lcall
cmp
sub
or
lcall
lret
and
psrlw
lret
int
jecxz
repnz
or
mov
xorb
mov
inc
inc
repnz
test
movsb
lock
sbb
pop
aam
dec
or
xchg
push
pop
dec
dec
out
mov
movsb
push
xchg
pop
scas
insl
enter
xchg
aaa
inc
jae
or
xchg
mov
or
movq
int
daa
jl
nop
iret
mov
xchg
ss
pop
addr16
repz
stos
insb
ljmp
inc
inc
xor
test
xorl
pop
push
fstpl
jmp
cmc
shlb
movsb
repz
repnz
test
cmp
adc
ljmp
outsb
push
das
push
or
mov
les
ret
es
fwait
arpl
xor
dec
cmpsl
xchg
cmp
insb
mov
pushl
push
add
cmp
mov
jl
call
cmp
std
clc
pusha
add
xchg
pop
js
push
lods
dec
out
pop
mov
pop
movsl
add
jg
and
mov
lcall
mov
lahf
mov
cmpsb
orl
adc
das
push
push
push
icebp
jecxz
push
loop
ljmp
loope
popa
jmp
mov
cmp
mov
jo
addb
cld
xchg
mov
jmp
adc
pop
rorb
inc
mov
ret
push
es
xchg
xchg
shl
fwait
mov
jmp
dec
mov
or
cmp
cmpl
lea
adcl
cmp
incl
pop
sbb
add
fwait
inc
push
in
sub
rcrb
lret
add
jo
lret
test
std
pop
sub
int3
cmc
gs
adc
jb
inc
leave
fwait
xchg
mov
mov
ljmp
shrl
push
fwait
in
cmpsb
pop
out
adc
xrelease
rclb
int3
sbb
loope
ljmp
inc
cli
jle
test
cmp
loope
lar
mov
mov
lahf
mov
dec
cmpsl
xor
in
mov
push
jns
cmp
insb
sbb
fadd
dec
aas
adc
int
xor
test
cmpsb
mov
dec
inc
outsl
cmp
ret
mov
sbb
out
add
arpl
inc
xlat
scas
cmp
stc
mov
aad
xchg
ficompl
pop
aad
dec
fcomps
inc
shr
popa
dec
ffree
ljmp
jno
pop
jno
mov
aam
lahf
push
and
dec
dec
outsb
or
out
xchg
xor
je
pusha
fisttpll
out
and
lds
inc
pop
push
cltd
pop
imul
js
sub
stc
cld
cmc
imull
mov
movsb
out
dec
test
adc
test
mov
adc
sbb
lret
or
adc
xor
out
mov
and
ret
test
loopne
lahf
nop
adc
sbb
lcall
imulb
pop
fwait
inc
xchg
dec
hlt
jge
pop
add
push
mov
inc
xchg
ja
mov
add
add
aam
add
add
or
in
jo
decl
sahf
push
pusha
jo
clc
in
test
in
jge
out
pop
insl
dec
divb
movsl
xor
add
xchg
hlt
inc
inc
lock
cli
aad
addl
aad
fimuls
rcrb
data16
sub
sub
sahf
mov
xchg
popa
mov
cmpl
and
inc
cmp
out
cmp
cmp
jo
xchg
sub
mov
push
clc
out
sbb
mov
repz
in
pop
mov
sub
cmpsb
mov
and
adc
and
adcl
sub
addl
loope
fisttps
adc
fisubrs
fsubl
inc
mov
jl
test
scas
mov
xor
in
jae
testb
jl
xchg
jnp
push
cld
subl
add
cli
out
aas
aas
push
pop
jge
bswap
ss
xor
ljmpw
test
lret
gs
mov
mov
push
push
inc
mov
mov
rorb
repz
enter
jae
dec
xor
lods
aaa
cmpsb
mov
xchg
cmp
xchg
xor
popf
loope
outsl
cmp
pushf
mov
push
bound
in
outsb
jmp
sub
jbe
icebp
mov
lods
bound
fadd
dec
inc
sti
leave
test
mov
sub
repz
mov
sub
ds
xchg
cmp
in
xor
xchg
pop
aad
xor
mov
sbb
pop
xor
xor
mov
pop
in
and
xor
inc
pusha
in
or
or
cmpsl
xchg
xchg
sbb
into
insl
jecxz
sub
inc
fisubl
pop
jge
pop
and
jl
inc
pop
jmp
pop
inc
sub
push
pop
mov
sub
fisubrs
jmp
pop
fs
xchg
push
inc
sbb
das
mov
sub
mov
dec
icebp
add
loope
ret
ljmp
mov
sbb
sahf
jns
outsb
inc
test
or
scas
shrl
sbb
push
mov
mov
cmp
fnstcw
int
mov
pop
jmp
jno
imul
pop
push
pop
repz
fsubrl
dec
sbb
into
jbe
push
and
in
mov
cltd
push
insl
loopne
xor
fisttpl
stc
call
mov
push
pop
nop
outsb
sbb
mov
sbb
push
ret
aaa
and
add
lret
adcb
das
arpl
adc
ljmp
dec
ja
lret
mov
lahf
inc
int
mov
dec
jl
mov
ror
mov
sbb
or
scas
fstps
add
cs
rclb
inc
dec
inc
ret
insb
in
pop
mov
and
sub
hlt
xor
int3
push
aas
pop
jge
hlt
cmp
std
jb,pt
mov
push
adcl
ds
mov
shrl
jl
cltd
pop
hlt
xor
pop
insb
push
imul
xor
jl
and
fwait
or
sbbb
pop
adc
push
adc
xchg
fiadds
shrb
pop
lret
cmp
or
mov
cmpsl
lret
cmp
pushl
push
or
mov
inc
gs
lock
xchg
movsl
mov
jnp
jae
icebp
aaa
ljmp
or
or
adc
cs
addr16
dec
xor
adc
sbb
xor
dec
in
das
icebp
cld
ret
xor
in
xlat
popf
cwtl
in
cmp
jecxz
jecxz
sti
and
pop
inc
adc
leave
push
testb
nop
cmp
lret
icebp
aam
divl
and
cmc
sti
movsl
dec
add
sub
sbb
pop
dec
sbbl
mov
mov
jmp
cld
fsubs
jb
test
mov
mov
sbb
push
and
notb
and
aam
in
sbb
add
aas
neg
xchg
xor
xchg
xchg
and
pop
aaa
stc
sub
jae
jmp
push
mov
mov
andb
fildll
push
and
dec
sti
jl
jne
mov
add
rolb
mov
jnp,pt
data16
sbb
dec
and
fs
jmp
inc
in
out
inc
pop
dec
jae
sbb
inc
pop
cmp
jno
pop
test
adc
xor
lods
nop
addr16
pop
add
xor
add
mov
xor
popa
andl
xchg
ljmp
and
cmc
or
aad
das
xchg
pop
rorl
push
mov
dec
ss
inc
xchg
add
stc
inc
repnz
pop
sbb
ljmp
imul
lret
xchg
cmp
in
call
fidivrl
jl,pn
into
sahf
cltd
xor
scas
cmp
adc
mov
bound
push
pop
fidivrl
xchg
mov
or
mov
push
jl
mov
mov
mov
xor
arpl
sbb
test
loope
push
mov
dec
fsubr
inc
dec
dec
stos
mov
mov
lock
cmp
jne
cmpsl
test
mov
mov
sbb
pop
arpl
xchg
pushf
xor
mov
pop
in
test
push
mov
iretw
orb
stos
inc
sub
addb
shlb
sbb
xchg
notl
repnz
mov
enter
fisubl
gs
pusha
aam
dec
sub
xchg
or
and
xor
add
push
mov
lock
mov
rcrb
inc
push
lcall
push
pop
lcall
push
inc
test
mov
mov
add
mov
dec
push
js
das
ret
xor
hlt
sub
out
mov
lods
xor
popf
addr16
movsb
mov
adc
scas
push
mov
popf
jle
mov
jnp
cs
push
jle
test
or
xchg
or
cmp
pop
mov
xchg
adc
loop
addr16
inc
aas
xchg
arpl
in
cmp
in
test
mov
jmp
das
and
fidivrl
xor
mov
aad
mov
clc
inc
pop
gs
stos
xor
xlat
out
inc
cmpsb
iret
push
dec
popa
inc
stos
sbb
enter
je
cmpsb
xor
sarl
in
sbb
pop
push
pushf
imul
in
je
je
cmp
cltd
pop
xchg
cmpsb
mov
pop
cmc
pop
sahf
shrl
jge
outsb
mov
jg
dec
sub
mov
nop
in
lret
adc
xchg
test
mov
lret
mov
pop
insl
mov
gs
hlt
and
jmp
cmpsl
xchg
cli
sarl
mov
insb
out
mov
fbstp
pop
mov
ds
sbb
cwtl
push
pop
cmpsb
test
insb
je
mov
sub
cmpb
sbb
sbb
sbb
stc
xchg
aad
sbb
cmpsl
fistl
mov
lock
negl
mov
mov
xchg
jne
stos
int3
repz
push
xor
push
inc
pop
lret
cmp
mov
add
cli
sbb
outsb
cli
pop
xchg
pop
in
fs
hlt
add
xlat
roll
movsl
enter
mov
jbe
inc
ret
test
inc
lret
push
test
addr16
aam
dec
xchg
jae
mov
push
fs
divl
dec
add
inc
mov
sar
adc
loopne
daa
stos
pop
and
add
out
imul
jmp
xchg
imul
ljmp
adc
sbb
xchg
clc
sahf
sub
dec
mov
mov
sbb
inc
loope
js
sbb
repnz
xor
inc
lret
mov
cmpsb
in
shl
mov
inc
call
movsb
dec
aam
xor
pop
outsl
iret
adc
or
sbb
jle
popf
cmc
mov
inc
repz
cwtl
xchg
sarb
mov
jmp
out
mov
adc
addl
sahf
xchg
pop
adc
xchg
in
mov
pop
sub
int
notl
mov
xchg
insl
imul
lds
xor
adc
mov
cld
adc
into
cmp
jp
js
inc
lock
repz
and
pop
data16
sbb
aam
gs
add
imul
enter
adc
sub
xchg
dec
cld
inc
mov
jns
loopne
pusha
out
cmp
in
lahf
push
push
adc
mov
adc
xor
pop
stos
shrl
dec
push
mov
and
lea
pop
push
movb
out
mov
pop
test
cld
inc
and
lahf
stos
inc
loopne
push
mov
push
ret
nop
jo
inc
adc
inc
push
ret
cmp
cmpl
mov
pop
lcall
repz
fildl
mov
cld
jb
int
lods
flds
in
lret
and
inc
push
sahf
cmpsb
cs
lea
les
lds
filds
rorl
jno
or
pop
sar
cmp
test
add
and
in
stc
push
mov
loop
into
clc
sbb
or
jns
daa
fldcw
mov
mov
mov
ds
pop
mov
add
mov
insb
mov
mov
roll
into
xchg
fidivs
loop
adcb
enter
insb
and
cmpsl
sbb
divl
jle
xchg
jge
dec
jb
sub
sbb
sti
test
jp
inc
into
jecxz
push
jg
inc
shlb
mov
adc
lea
mov
sbb
xchg
das
pusha
stos
mov
jmp
mov
insb
dec
mov
mov
push
add
repnz
xor
mov
xlat
stos
jnp
movsb
xor
pop
movsl
sub
mov
in
jo
adc
xchg
mov
gs
jl
sahf
sbb
xchg
pusha
jns
or
fmul
mov
push
jns
and
xor
sub
pop
mov
pop
xlat
lcall
test
popf
pop
hlt
aas
dec
mov
out
movsl
ja
out
mov
mov
sbb
les
stos
cmp
push
roll
push
insb
call
pop
cmp
mov
jbe
sahf
jle
cltd
scas
popf
push
mov
lea
or
mov
xchg
cwtl
mov
or
xor
mov
and
stc
inc
repnz
andl
lea
ljmp
insb
add
idivb
insb
es
popf
ret
sbb
xor
popa
sub
push
fdivrs
cmp
inc
jmp
adc
sub
sbb
fmulp
and
add
sbb
lahf
dec
into
out
cmp
ds
xchg
scas
pop
popf
sbb
into
add
inc
mov
popa
dec
cmp
popf
mov
mov
roll
adc
pop
lahf
xchg
pop
loope
fimuls
gs
xchg
mov
adcl
push
dec
fistl
es
xor
cmp
jle
test
cli
icebp
mov
mov
jb
adc
stc
mull
sub
subl
mov
dec
and
cli
sbb
mov
fwait
mov
jge
sub
adc
sbb
xchg
xchg
sbb
pop
xchg
scas
lds
stos
scas
push
ds
mov
fsubrs
loop
mov
dec
or
or
mov
and
popa
pop
push
enter
js
mov
xchg
ret
repnz
push
xchg
loopne
adc
sbb
xchg
xor
call
mov
xchg
insb
addr16
cmp
pop
stos
sub
sbb
pop
in
rcll
xor
dec
lock
add
add
jl
pop
mov
cmpsl
ret
imul
jmp
addr16
das
mov
xor
cmp
sbb
push
popf
fs
pop
jp
andl
out
add
addr16
mov
test
jge
repnz
popa
pop
mov
cmpsb
into
pop
cmp
ljmp
sub
fistl
outsb
mov
xchg
jne
pusha
outsb
arpl
bound
xor
test
cmp
std
pop
lcall
pop
rorb
mov
cmp
out
mov
lods
sub
sti
mov
inc
cltd
adc
jns
hlt
sbb
test
in
mov
iret
or
mov
push
out
lret
lock
push
aaa
jnp
in
xchg
mov
pop
mov
mov
or
in
fiadds
fninit
mov
popf
js
lcall
pop
adc
lahf
inc
xor
stos
pop
mov
xor
inc
jmp
test
add
mov
inc
ror
or
jb
and
lret
xchg
mov
or
ja
xor
xor
dec
adc
push
add
sbb
ret
dec
inc
or
pop
punpckhdq
dec
mov
adc
push
lret
addb
or
xchg
and
iret
or
xor
or
xchg
outsb
nop
outsb
insl
test
test
cs
test
push
jp
cmpsl
dec
int
mov
sbb
cmp
in
jle
sahf
ss
rorb
push
pusha
repnz
test
dec
std
sub
test
movsb
insb
in
mov
sahf
rorl
sub
mov
inc
mov
adc
pop
in
out
mov
movsb
test
inc
jg
jae
push
xor
and
scas
shl
mov
test
iret
cltd
sbb
jne
int3
push
sub
stc
dec
push
push
insl
pop
sahf
xor
lcall
dec
fnstcw
leave
nop
mov
flds
cmpsl
mov
leave
xchg
js
sbb
jmp
jp
jae
mov
movsb
inc
jnp
test
inc
jb
test
adc
inc
in
aad
jmp
hlt
dec
ss
fxch
rcrl
test
aaa
mov
cmp
mov
loope
cmp
xchg
inc
faddl
push
test
insb
push
nop
out
inc
jl
sbb
or
imul
or
insl
add
test
pusha
cmp
push
lds
push
mov
inc
xchg
outsl
jbe
fldln2
xor
sbb
repnz
mov
call
gs
mov
jns
test
sbb
movsl
or
aad
pop
fcompl
gs
add
pop
popf
xlat
fs
or
fs
call
dec
loope
and
mov
xchg
aam
scas
mov
cs
insl
inc
aam
popa
dec
pushw
dec
outsb
aad
enter
daa
aam
add
inc
ja
mov
xor
dec
in
lods
in
cmpb
inc
cmp
cmp
xchg
aad
inc
pushf
push
test
cmpsb
repnz
lods
pop
data16
push
mov
or
inc
daa
aad
stc
addr16
sti
xchg
inc
cmp
push
int3
pop
lds
jns,pt
push
lahf
push
in
lods
repnz
push
fisttpll
outsl
iret
addb
gs
mov
cmp
xor
jge
out
pop
mov
in
lret
pop
mov
inc
and
jns
pushf
shl
in
adc
stos
cmp
mov
inc
aam
stos
mov
out
rcr
sti
in
and
ljmp
xor
pusha
xor
inc
out
out
cmp
lret
adc
adc
sub
ja
popa
stc
add
jns
lods
ljmp
fisttps
testb
mov
pop
mov
popf
mov
inc
xor
lret
aas
pop
shld
push
mov
addr16
stos
fisubrs
or
movb
mov
addr16
rol
add
adc
cmp
loope
inc
and
imul
clc
rolw
hlt
mov
es
sbb
fs
shll
popf
enter
popf
shl
mov
dec
lods
pop
adc
imul
out
rorb
lret
ret
inc
repnz
bound
and
add
rorb
stos
stos
pop
xor
add
in
sub
outsb
inc
cmp
push
jge
cmp
xor
add
repz
leave
sbb
lds
adc
andb
xchg
pop
outsl
out
mov
mov
mov
mov
mov
cld
sub
test
cmc
jae
sti
mov
popa
lret
cmpsl
pop
adc
pop
jge
mov
jg
repnz
outsl
push
mov
aad
jo
cli
ds
sub
dec
jge
daa
push
cmpsl
xor
xor
mov
mov
in
bound
cli
test
sbb
jle
js
aad
insb
mov
dec
insl
inc
ja
fcoml
xor
sub
aas
add
mov
lds
fsub
sub
push
adc
pop
or
sbbl
test
inc
jnp
adcl
pop
lret
jne
jnp
mov
adc
call
scas
lods
mov
testl
xchg
mov
sbb
sbb
js
repz
sbb
fs
repnz
push
mov
pop
hlt
negb
push
jmp
movsl
js
cmp
lret
fcompl
adc
pop
fst
sarb
cmp
ljmp
xchg
and
lret
imul
test
mov
fs
lret
xchg
dec
sar
xor
daa
movsl
mov
cmp
adc
mov
in
mov
jno
xor
popf
les
shrb
sahf
or
dec
mov
dec
mov
push
cmp
jbe
out
shrl
or
gs
lret
dec
daa
stos
fucom
pop
ljmp
cld
movsl
hlt
fisubrl
dec
sub
jbe
outsl
or
push
pop
adc
ds
fstpl
es
daa
jg
mov
repz
ljmp
mov
xchg
push
or
sub
sub
aam
mov
cmp
pop
push
mov
repz
ds
push
jae,pt
andb
sarb
lock
xor
ret
lods
inc
inc
add
out
hlt
les
subl
dec
lds
jle
stos
in
mov
jo
push
and
cmp
stos
xchg
mov
xchg
mov
jle
outsb
cmpb
enter
or
popa
mov
jns
jmp
mov
sahf
xchg
push
jno
fsubs
cmp
ss
je
xor
cmp
sarb
xor
jb
sbb
sub
mov
daa
cmp
out
cli
roll
sub
mov
mov
cmp
jmp
push
clc
adc
mov
mov
aaa
sti
enter
cwtl
adc
data16
sarb
cld
subl
mov
lds
inc
aas
scas
dec
pusha
push
popf
ficoms
negb
clc
add
and
xchg
sub
xchg
ds
mov
outsl
inc
outsl
xor
or
xchg
jge
fwait
push
enter
mov
loopne
jae
jno
sbb
fwait
addr16
inc
ljmp
pop
push
pop
pop
dec
fimuls
mov
rorb
pop
pop
push
int3
shrl
inc
dec
mov
jg
jle
stos
sub
cmp
fs
push
dec
cmp
inc
lock
push
jae
shll
inc
subb
imul
fisubrl
popa
push
fs
pop
in
andl
pop
and
ret
cwtl
flds
sysret
inc
aam
cmp
mov
mov
fnsave
inc
adcb
pusha
sub
jmp
into
cmp
jo
aaa
mov
xchg
sbb
xchg
js
cmp
ljmp
sub
dec
mov
jmp
movsl
xchg
arpl
sub
cld
inc
jbe
mov
mov
sti
sub
push
pop
notl
shrb
pop
testb
scas
clc
jp
out
rcll
and
xchg
int3
outsl
or
shl
int
vpcmpeqw
adc
jbe
sub
pop
jns
das
sbb
jecxz
insl
or
lods
lods
nop
push
mov
or
ficomps
shlb
das
inc
std
fnsave
out
cwtl
mov
jle
dec
xchg
jl
sbb
gs
jbe
cmc
push
fidivrl
cmc
add
or
rcl
ret
lods
lcall
lock
sub
fcmovnb
addl
fcomi
push
jecxz
cld
out
fwait
jge
and
xchg
in
xor
push
out
cmp
mov
ljmp
adc
dec
in
lahf
dec
lcall
cmp
nop
adc
mov
adc
xchg
imul
sbb
lods
sbb
rdmsr
cld
lods
mulb
clc
pop
sub
dec
xor
add
xchg
stos
xor
outsb
xchg
pop
jecxz
popa
sbb
insb
mov
int3
test
add
xchg
dec
cld
mov
mov
and
add
dec
mov
sbb
fs
inc
outsb
mov
popf
xor
jmp
arpl
cmp
sbb
mov
add
lret
stc
fcoml
insb
stc
imulb
and
push
inc
nop
or
iret
mov
or
mov
add
fisttpll
xchg
rcrb
ljmp
pop
xchg
nop
fistpll
or
movsb
dec
mov
mov
or
pop
in
jns
bnd
sahf
lcall
fstl
sbb
jle
pushf
decb
pop
sbb
adc
mov
cmp
add
movsl
es
fbstp
les
or
xchg
arpl
ljmp
dec
pop
out
or
sbbl
cmpsl
into
roll
testl
lods
bound
mov
dec
into
sar
dec
inc
pop
jp
inc
stos
arpl
fcomip
push
push
dec
mov
sub
lock
aas
and
das
nop
xchg
inc
pushf
add
andl
sub
andl
mov
inc
mov
cmpl
jge
jmp
push
push
call
cmpl
jb
add
movl
andl
mov
inc
mov
cmpl
jb
jmp
push
call
cmpl
jb
mov
mov
mov
or
movl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jge
jmp
push
push
push
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
mov
orl
mov
movzwl
sub
mov
xor
xorl
add
mov
lea
mov
adc
mov
adcl
xor
sbbl
add
orl
mov
notl
lea
push
adc
mov
orl
xor
orl
add
orl
push
or
mov
push
pushl
call
and
mov
movzbl
sbb
mov
mov
mov
movl
mov
mov
lea
orl
mov
sub
movl
movzwl
sbb
mov
sbb
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jb
jmp
push
push
call
cmpl
jne
mov
inc
mov
jmp
xor
mov
addl
sub
movl
mov
movl
mov
mov
movl
mov
cmp
movl
je
mov
mov
xor
xor
lea
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jg
jmp
push
pushl
pushl
push
call
jmp
mov
xor
orl
div
mov
sbbl
mov
andl
xor
xor
sub
movl
cmp
movl
jne
mov
xor
mov
sub
mov
or
mov
xor
xor
sbbl
add
sbbl
add
mov
movl
cmp
jae
xor
lea
mov
mov
xor
add
lea
movl
mov
mov
mov
cmp
movl
jbe
addl
addl
jmp
decl
addl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jle
jmp
push
pushl
push
call
jmp
mov
xor
adcl
inc
incl
subl
add
cmp
jb
notl
mov
add
mov
adcl
xor
sbbl
mov
sub
add
sub
mov
sbbl
xor
xorl
sub
subl
ror
xor
mov
xor
add
sub
imul
mov
mov
movl
cmpl
je
cmpl
jb
jmp
push
push
pushl
push
call
cmpl
jne
mov
dec
mov
xor
xor
dec
mov
jmp
mov
mov
sub
xor
cmp
jne
mov
mov
xor
xor
sub
sub
xor
mov
mov
xor
mov
sub
jmp
mov
xor
mov
sub
add
mov
mov
cmp
jne
movl
mov
xor
add
jmp
lea
mov
mov
sub
mov
mov
mov
mov
movl
mov
movl
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
ja
mov
mov
mov
sub
xor
xor
add
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
mov
mov
movl
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
jmp
iret
xor
jne
jns
cmp
mov
jnp
mov
jnp
mov
jnp
sahf
dec
push
dec
xor
pusha
outsl
mov
sbb
fisttpll
xor
xor
or
inc
jbe
imul
xor
or
mov
aad
lods
lea
inc
rcr
inc
pop
or
or
dec
data16
jmp
loope
or
dec
shl
push
sbb
inc
pop
inc
dec
cmp
dec
mov
pop
ficomps
jbe
or
cld
pop
lea
mov
mov
sbb
lcall
jle
out
mov
pop
sahf
js
movsl
mov
cld
cld
sub
clc
pop
out
xchg
bound
pop
pop
clc
jg
cmp
loop
movl
leave
push
pop
inc
imul
rolb
sahf
mov
psubq
lock
jno
lock
mov
nop
loopne
jb
sub
jb
inc
sub
shrl
popa
inc
sbb
in
and
mov
pushf
loopne
sub
mov
pop
dec
pop
sub
rorb
out
outsb
dec
pusha
jns
push
and
jae
and
pop
adc
testb
test
adc
adc
jle
push
outsb
xor
in
fmull
push
aad
mov
push
in
inc
loop
fistpl
icebp
inc
mov
push
aam
or
sub
pop
jne
jle
orl
test
mov
add
fiadds
aas
xchg
repz
pusha
lea
jne
imul
fsubrl
mov
mov
pop
fsub
and
push
pushf
lea
sets
loop
and
fs
xor
scas
cmp
sub
jle
sbb
xor
xchg
mov
clc
adc
jge
jae
inc
xor
mov
mov
push
or
shll
dec
cwtl
fisubl
pop
jo
loop
je
mov
xchg
pop
pop
insl
js
push
and
js
xchg
push
mov
test
test
sahf
cmp
push
add
gs
insb
adc
jmp
sbb
pop
adc
pop
fstps
jns
loop
movntps
in
test
jg
or
dec
out
xor
gs
aas
fwait
dec
cmp
or
pop
pop
adc
mov
sti
enter
pop
mov
cmp
mov
out
or
stc
jle
aaa
xchg
cwtl
fidivrs
call
cmp
ja
test
loop
in
in
sbb
pop
jns
xchg
mov
mov
jo
movsb
loopne
lods
repnz
aas
fidivs
inc
daa
and
mov
jecxz
xchg
das
jno
mov
cwtl
pushf
and
sub
inc
pop
sub
inc
cmc
mov
je
repnz
cwtl
shl
cwtl
ret
or
sub
sbb
cmpb
cmp
addl
lret
cmp
mov
dec
ret
jae
add
sarb
add
movsb
into
pop
xchg
pop
cmp
add
pop
sub
cmp
pushf
push
popa
or
dec
int3
adc
push
dec
or
mov
scas
add
add
sbb
mov
pushf
loop
mov
sub
add
sbb
push
xchg
jp
sbb
mov
adc
inc
test
mov
xor
cmovbe
enter
mov
test
xchg
dec
xchg
pop
pop
cmp
sbb
pusha
clc
jne
int3
mov
xchg
or
bound
cmp
inc
and
push
mov
int3
cmc
mov
outsb
pop
jmp
lea
lea
mov
mov
sar
push
lcall
imul
adc
adc
lea
sahf
dec
enter
aaa
xor
fcomps
lods
movd
popf
cmp
fxrstor
shll
push
subl
inc
into
je
xlat
cltd
arpl
pop
iret
xchg
push
call
jmp
cmp
mov
push
bound
mov
outsl
mov
add
jns
adc
std
pop
push
inc
arpl
add
jbe
test
mov
dec
sub
sti
lea
push
popf
scas
imul
mov
aam
xchg
cmpsb
std
xchg
dec
jne
test
sub
shrb
push
fisttpll
cmp
les
inc
aaa
mov
adc
inc
jb
dec
push
cmpsb
xgetbv
ror
and
pop
test
inc
ds
js
push
pop
push
adc
mov
jp
cs
cmp
mov
push
jnp
mov
jle
sbb
sbb
and
xchg
inc
xchg
test
xor
jmp
mov
jmp
sub
loop
pop
pop
cmpsb
xor
adcl
dec
loop
in
ds
sbb
imul
inc
repnz
mov
dec
push
inc
clc
adc
xchg
push
push
pop
push
jbe
jnp
mov
inc
xchg
push
fists
dec
cmp
dec
mov
pop
shll
push
mov
lret
cmp
pop
xor
dec
push
les
mov
ret
scas
idiv
xor
aad
dec
popa
lods
clc
or
jge
in
daa
in
aaa
xor
cld
mov
fsubrl
or
movsb
pop
call
xor
lods
dec
cmp
loopne
cld
les
and
lcall
leave
lods
add
push
mov
jae
jp
mov
push
in
xchg
sub
and
jo
fnstsw
cmc
leave
sub
lods
push
xchg
push
sbb
aam
xlat
push
mov
adc
adc
and
stos
pop
fwait
push
adc
sub
jp
jno
adc
rolb
rorl
sbb
repz
xchg
pop
clc
fadds
mov
bound
cli
dec
je
adc
mov
shl
sti
pop
jp
add
pusha
fldcw
jbe
out
into
lods
pop
or
pop
adc
jae
stos
mov
sbb
scas
fiaddl
jb,pt
sbb
lea
hlt
lea
xor
inc
addr16
add
mov
inc
dec
movl
xor
inc
es
adc
cmpsb
js
nop
mov
movsb
pop
xor
push
dec
or
adc
adc
stc
rolb
popa
jge
xchg
push
sahf
repz
xchg
insl
mov
cld
mov
in
pop
jno
jecxz
in
cwtl
hlt
mov
dec
addr16
add
loopne
repnz
pop
sub
jmp
inc
mov
xchg
test
xorl
push
fcoml
dec
lods
fcompl
pop
xchg
inc
cmc
ljmp
jle
xor
xchg
imul
cmpsl
cmp
push
repnz
dec
fiaddl
idiv
insl
test
mov
xor
inc
es
sub
xchg
add
adc
mov
andl
repz
cmp
jne
je
movsb
outsb
cmc
out
mov
int3
push
inc
sub
sub
mov
test
cld
adc
push
cwtl
rorl
pushf
inc
xor
fdiv
sbb
jae
mov
adc
into
xor
aad
and
rorl
sub
loopne
pop
cld
lahf
mov
inc
call
mov
mov
fldt
sahf
mov
sub
out
dec
cs
mov
loopne
xor
out
push
js
into
push
jge
adcb
daa
gs
sbb
jno
sub
mov
lds
pop
push
pop
mov
or
rcrl
pusha
sub
outsb
int3
mov
cli
aaa
cmp
in
fmulp
adc
movsl
ja
inc
sahf
xchg
fldenv
jo
mov
mov
sub
sub
and
pop
loope
and
outsl
mov
adc
add
movl
lea
sub
xlat
mov
mov
jns
pop
mov
push
repz
bound
or
xchg
int
mov
movl
inc
pop
or
clc
jo
xor
or
cmp
cmp
call
les
sar
sub
push
xor
mov
mov
add
jne
cmpsb
push
push
dec
mov
push
cmp
es
jle
mov
mov
aad
mov
push
xchg
lret
add
mov
shll
cmp
jne
test
cmp
arpl
std
sti
pop
inc
pop
repnz
jbe
push
or
mov
pop
jg
aam
xchg
pop
stos
and
and
fsubl
rolb
adc
cmp
insb
test
std
mov
cmp
pop
mov
test
aad
sbb
adc
mov
adc
jge
jns
movsb
push
mov
sbb
and
lods
sub
mov
mov
xor
je
leave
and
aam
hlt
pop
in
mov
adc
jno
jns
mov
mov
scas
mov
loopne
add
or
out
aad
push
fnstcw
leave
push
dec
xor
xchg
dec
add
std
or
sti
jo
mov
popa
cld
dec
pusha
orb
jl
or
out
out
mov
xchg
sahf
sti
sarl
pop
push
mov
dec
je
adc
xchg
out
fwait
jmp
or
pop
push
out
adc
sbb
pop
dec
mov
ficoml
into
mov
adc
pop
fwait
lea
test
sbbb
inc
push
scas
inc
ja
and
xchg
mov
sbb
pop
out
xor
and
repz
lea
ja
stc
lcall
adcb
pop
cwtl
out
iret
sbb
rclb
jl
xchg
sbb
add
mov
repnz
hlt
stos
jge
mov
sub
iret
or
int
and
xchg
inc
sub
push
push
jne
out
and
sub
loope
jge
add
scas
pusha
int
daa
subb
xchg
jne
orb
mov
sub
leave
cmp
dec
mov
mov
mov
pusha
add
fsubs
adc
xor
inc
lret
push
pushf
iret
push
lahf
aad
ret
negb
xchg
inc
stos
add
adc
imul
jp
stc
mov
jmp
lahf
push
pusha
inc
mov
mov
mov
sub
loope
cmp
xor
sidtl
ficoms
xor
rcll
push
pop
cmp
mov
je
jmp
stos
mov
shrl
mov
inc
in
in
pushf
test
dec
dec
andb
cltd
rolb
or
fst
jbe
in
aas
stos
mov
movsl
sub
jno
pop
xchg
cmc
lock
push
cli
mov
jl
and
fstps
add
pop
push
mov
mov
jb
movaps
nop
cli
and
das
ljmp
jno
dec
jp
xorl
std
ljmp
lret
cmc
push
frstor
loopne
shlb
push
jae
cli
pop
lret
test
add
push
iret
addr16
jge
pop
popa
imul
movsb
push
and
js
leave
or
adc
lock
adc
pop
push
push
jle
sub
jl
cmp
pop
sbb
repnz
dec
inc
xchg
jmp
test
cmpsl
sbb
popa
inc
mov
pop
xor
push
pop
inc
in
lock
jnp
inc
push
or
and
ljmp
xchg
dec
test
loopne
nop
xor
outsl
fisubrl
sbb
in
mov
repnz
imul
bound
imul
pushl
into
sub
shll
pop
dec
mov
ror
dec
ja
jnp
setge
push
or
ja
xor
push
out
jl
dec
andl
ret
loopne
ss
call
in
mov
mov
es
pop
mov
data16
sti
dec
inc
mov
loop
vhaddpd
outsl
popa
std
pop
cmpsl
movsb
cmp
scas
mov
pop
rorl
iret
and
xor
sbb
jle
lods
outsb
mov
jmp
push
pop
fimuls
sbb
scas
jg
hlt
nop
cmp
scas
pop
lret
push
mov
push
lret
adc
mov
xlat
test
or
stos
mov
sub
mov
out
inc
movb
lret
bound
inc
adc
xchg
mov
mov
repz
mov
inc
adc
sub
aam
jp
push
cmp
outsl
mov
ds
icebp
lea
les
dec
adc
lahf
mov
dec
pushf
jb
push
xchg
mov
mov
xchg
sarl
or
js
push
xor
and
xchg
push
inc
or
add
icebp
je
mov
leave
push
mov
int
subl
ss
mov
push
iret
or
mov
dec
xchg
pop
cmp
mov
outsb
sub
xor
pop
clc
push
sub
cli
mov
out
fadd
fcmovnbe
imul
jmp
xlat
mov
repz
sbb
ficomps
cmp
inc
scas
jle
loopne
test
out
xchg
inc
inc
lret
dec
mov
or
test
ds
fsubs
add
out
cld
in
test
lds
or
stc
test
cs
mov
or
push
mov
imul
movsb
sub
jp
sbb
cmpsl
sbb
add
mov
mov
fimull
fbstp
sbbl
xor
mov
mov
out
hlt
addr16
pop
jne
or
fld
lods
xchg
lret
jbe
lret
in
movb
push
loop
adc
repz
pshufw
xor
leave
sbb
das
mov
mov
jne
mov
mov
mov
xchg
cmpsb
mov
lret
in
mov
dec
xlat
inc
rolb
fwait
pop
inc
clc
test
push
ljmp
inc
mov
fwait
insb
ljmp
jo
dec
fildl
rolb
jg
rcrb
xchg
pushf
test
xchg
dec
fidivrs
bound
jmp
ja
insl
lock
leavew
adc
stos
sub
push
test
mov
mov
addr16
das
pop
mov
pop
dec
jno
clc
pop
sbb
push
in
loop
cmpsl
xchg
out
push
dec
movsb
clc
mov
sbbb
xchg
scas
ljmp
fsubp
pusha
fidivl
mov
and
mov
dec
sbb
lahf
lret
xchg
stc
test
pop
popf
sar
cli
insb
aad
xor
ja
xor
stos
pushf
ret
jmp
sub
push
xchg
pop
jno
movsb
je
xor
cmpsb
ret
rcll
lea
mov
mov
popa
aam
xor
dec
loop
xor
inc
jne
sub
push
sub
rorl
lds
fcmovbe
sbb
cld
movb
prefetch
or
adc
popa
jae
fadd
mov
sub
lds
ljmp
loop
sbb
adc
push
add
push
jb
push
test
xor
inc
lahf
clc
cli
ret
inc
xchg
lock
mov
add
inc
mov
mov
int
jge
sub
mov
test
das
cmpsl
test
dec
xchg
test
inc
or
sbb
int3
stc
stos
or
ss
and
add
mov
ror
cwtl
and
shlb
insb
or
mov
pop
push
push
das
clc
popl
repz
xchg
mov
or
fs
insl
enter
cwtl
out
sbb
inc
lods
cmpsl
pop
pop
mov
xchg
sub
rcrl
fists
pop
mov
cmc
nop
scas
mov
sub
rcrl
xchg
dec
lds
jo
outsl
push
or
cmpsl
pop
cwtl
loop
adc
cmc
inc
fdivs
int
addr16
rcrb
adc
test
aas
or
rep
sub
rcll
movsb
sti
leave
ds
fsubrl
cmp
lods
fidivs
daa
sti
xchg
pop
cmp
andb
add
sub
decl
dec
sbb
ljmp
push
pop
mov
lds
nop
sub
mov
dec
jns
cmp
aaa
push
adc
add
lea
xor
aas
xor
loope
push
adc
sbb
mov
pop
fidivl
aad
add
imul
inc
out
ret
and
mov
push
sub
mov
in
loope
pop
dec
scas
into
nop
stc
mov
xchg
cmp
out
jge
xlat
cli
outsl
and
xor
mov
jle
sbb
mov
shrl
and
addr16
out
nop
fwait
mov
pop
in
adc
aaa
pop
int
hlt
shrb
scas
mov
pop
mov
sbb
cmp
ljmp
lea
int3
mov
dec
xor
imul
pop
push
push
jae
fmull
sub
scas
sbb
mov
insb
dec
jge
xlat
repz
lret
out
sbb
rorl
bound
cmp
mov
push
cmp
ret
push
sahf
addr16
xchg
xor
sbbl
cmc
xor
repz
cmp
les
push
lret
pop
stos
mov
call
or
fwait
aas
jmp
jae
and
fsubrs
push
stos
mov
imull
test
dec
in
insl
mov
aaa
aad
daa
jmp
sti
es
adc
push
inc
mov
cwtl
sub
iret
push
xchg
jle
repnz
cmp
and
ja
repz
mov
addb
fcmovnb
scas
ja
mov
ss
imul
lock
add
lret
push
mov
nop
addl
lods
xor
push
les
add
add
xchg
int3
mov
jle
push
lahf
aad
call
int
and
subl
stos
and
outsl
jge
cld
lcall
in
or
inc
lea
push
je
test
mov
fdivr
jnp
cs
jnp
pushf
mov
jno
lcall
faddl
out
pop
pusha
xor
sub
add
lcall
mov
inc
adc
adc
jg
lea
out
sbb
pop
mulb
jno
loope
mov
iret
repz
out
adc
std
mov
cmpsl
add
cmp
movl
and
jg
mov
or
mov
dec
sub
xchg
lahf
pop
push
sahf
cmp
adc
add
pop
bound
and
fadd
movsb
and
stc
pop
jne
xor
cmp
outsl
fisttpl
jbe
fsubrs
andb
cmpl
fneni(8087
ljmp
call
fcoms
repz
imul
pop
inc
mov
adc
es
xchg
jecxz
in
mov
movsb
xchg
js
or
add
ja
adc
sbb
and
movsb
mov
mov
ja
out
xor
adc
add
sub
mov
cmp
dec
addl
xchg
test
testl
gs
outsl
jne
incl
iret
arpl
push
sbb
cmpsl
out
xchg
les
in
outsl
scas
mov
lods
or
dec
negb
in
dec
outsl
xlat
fmulp
cltd
icebp
jle
fisttps
sbb
mov
sbb
movsl
push
cmp
or
jl
imul
out
lret
insb
mov
inc
aas
iret
xor
dec
mov
outsb
sub
shl
inc
add
xor
sbb
popf
lds
mov
lahf
and
fidivs
jb
iret
push
inc
mov
test
push
in
xor
in
and
jmp
push
lock
add
jg
push
pop
jo
cltd
hlt
pushf
test
pop
cmpsb
pand
psrld
mov
xchg
cmp
fwait
icebp
fdivrs
fnsave
rol
les
pop
pop
add
and
ss
jae
fstps
fisttpll
mov
mov
fs
loope
mov
xor
mov
pop
mov
xchg
lods
jecxz
push
push
mov
add
xchg
mov
push
xchg
rclb
adc
ret
cmp
mov
sub
jbe
movd
or
jp
test
stos
aas
loopne
and
leave
inc
daa
testl
insb
xchg
mov
xor
divb
sub
inc
jae
les
jbe
leave
test
mov
mov
shlb
sbb
lret
int3
cltd
add
dec
mov
sarl
xchg
jb
dec
xchg
add
dec
packssdw
clc
insb
cltd
gs
xor
mull
or
cmp
jp
subl
dec
push
pop
lods
scas
xchg
repz
in
xlat
pop
inc
jns
sub
push
mov
sub
or
int
push
pop
movsl
test
movsl
sbbw
xchg
dec
and
xchg
mov
adc
cmp
sar
adc
insb
lods
xor
popa
pop
mov
test
mov
push
push
mov
imull
jne
mov
mov
push
adc
iret
mov
cld
adc
mov
mov
dec
sbb
push
mov
xor
aad
cli
filds
jo
lret
inc
xor
fisttpl
les
shrl
outsl
popf
test
cwtl
inc
ja
xor
jmp
push
ljmp
icebp
adc
sub
in
sbb
in
aam
inc
rcll
add
shlb
add
mov
xchg
push
mov
xlat
test
pop
lret
ret
cs
and
scas
mov
sub
lock
iret
pop
sbb
mov
fimuls
mov
rcrl
clc
fwait
jl
inc
xchg
mov
dec
push
cmp
lods
cwtl
jbe
repnz
gs
xor
repnz
mov
ja
dec
loopne
mov
and
jbe
sete
in
mov
shll
imul
cmc
and
movsl
fidivrs
ficoml
mov
int3
fwait
bound
scas
jo
rolb
incb
mov
inc
mov
add
xlat
add
rcll
lcall
xor
and
push
repnz
mov
aaa
flds
mov
icebp
aad
dec
aad
dec
fs
jg
test
mov
in
lahf
push
pop
cmp
adc
gs
lods
pop
inc
or
mov
cwtl
insl
pop
jns
fcmovbe
inc
cwtl
cmc
xchg
or
sub
push
jne
addr16
dec
mov
cwtl
push
xchg
and
xchg
cmp
insl
jo
clc
inc
cmc
sbbb
inc
imulb
mov
mov
out
and
jl
fldl
out
cmpsb
rorb
out
orb
lret
cmp
inc
addl
out
mov
jg
lret
movsb
popf
adc
push
fnstenv
mov
jbe
sub
xlat
fildl
push
lret
mov
cmpsb
je
enter
lret
mov
dec
cwtl
scas
or
loopne
push
jne
xrelease
stos
xor
repz
mov
xchg
lretw
ret
arpl
adc
imul
inc
push
xor
into
pop
mov
stc
add
aas
push
add
xorl
add
rcll
jmp
stos
xrstor
scas
icebp
mov
push
add
jnp
ds
cltd
sub
sahf
add
lea
mov
push
movsb
fisttps
xchg
mov
mov
cmp
mov
jl
push
xor
out
jp
insb
mov
repnz
mov
jmp
addr16
test
pop
mov
cmp
outsb
je
sahf
test
adc
push
aam
andl
aaa
and
cltd
data16
push
shrb
test
mov
push
jnp
push
dec
and
arpl
jl
lcall
icebp
jo
in
test
pop
mov
test
mov
cmp
mov
rolb
and
mov
arpl
cli
call
jg
inc
jnp
addr16
jno
insb
popa
jno
lds
lret
mov
dec
icebp
add
mov
hlt
xor
xor
shll
mov
stos
push
jb
or
in
scas
scas
scas
push
mov
ja
push
lret
push
pop
adc
out
or
xchg
cli
clc
in
lcall
jae
mov
shlb
pusha
cmpsl
jnp
in
mov
sub
sub
dec
add
mov
inc
add
sub
cltd
je
stos
andl
pop
mov
adc
add
xchg
cmp
js
or
sahf
push
scas
ret
xor
and
and
pusha
xor
jle
dec
pop
popa
iret
shr
jb
sub
jo
fistl
mov
pusha
sub
lods
aam
adc
nop
inc
pop
and
push
or
iret
sbb
sub
jae
and
mov
mov
cmp
cs
dec
rcrb
and
push
cmp
dec
sbb
mov
fstp
mov
or
out
sti
xchg
sub
into
enter
test
xor
lahf
add
test
outsl
insl
jns
in
int3
jne
repnz
and
add
nop
fnsave
dec
nop
stos
in
inc
aaa
jge
data16
mov
cmp
or
dec
lret
sub
test
ja
pop
hlt
ret
dec
add
aad
ret
outsl
aam
pop
mov
mov
inc
and
in
dec
push
inc
dec
sbb
mulb
add
add
and
fnsave
call
and
adc
insb
jnp,pn
loop
xor
cwtl
icebp
call
out
inc
inc
cmp
or
fs
add
popa
ljmp
dec
cmp
loopne
rcrb
cmp
jne
pop
pop
add
aas
shlb
pop
mov
jbe
sub
jecxz
or
push
data16
std
mov
fsubrs
push
jnp
hlt
loop
xor
inc
aam
outsl
mov
add
dec
aad
jge
jmp
mov
mov
movsl
dec
test
cmp
push
dec
push
adc
je
and
faddl
out
adc
mul
icebp
sbb
xor
jle
dec
xchg
mov
pop
iret
push
movsb
pop
push
xor
adc
lock
cmp
cmpl
push
xchg
push
ret
sub
jns
mov
or
fyl2xp1
int3
and
xor
and
imul
push
push
mov
addl
add
and
mov
push
ja
pop
insb
cld
mov
xor
jecxz
jo
push
mov
push
cmp
notl
cmp
jge
data16
imul
or
xor
inc
push
adc
xor
fbld
cli
sti
cmp
mov
pop
test
ret
loopne
add
pop
inc
repnz
cmp
push
mov
xchg
cli
xchg
movsb
or
inc
and
push
jbe
nop
out
mov
int3
sbb
mov
andb
testl
das
movsl
bound
pop
shrl
add
xchg
and
jb
sub
mov
push
aam
loop
gs
xchg
and
xor
dec
jp
jg
ds
in
inc
and
les
in
out
int
insl
jns,pn
mov
cmp
xchg
mov
fcomps
into
stos
cs
jmp
lds
iret
aaa
lahf
xchg
fnstsw
inc
cmp
xchg
ror
and
mov
mov
pushf
sbb
mov
push
aaa
mov
add
pop
sub
out
test
test
rorb
dec
and
cmp
inc
lock
dec
dec
inc
pusha
fldenv
adc
mov
mov
sahf
out
sbb
xor
add
das
lahf
sahf
aas
aaa
sub
clc
xor
pop
lds
lret
loopne
or
test
lret
sub
andl
cmp
data16
arpl
inc
lret
repnz
and
mov
jg
leave
imul
inc
sbb
xchg
bound
addl
sub
sti
xchg
push
hlt
sub
dec
xchg
shll
pop
jne
mov
iret
xor
pop
sbb
sbb
pop
sbb
xchg
enter
xchg
push
jg
xlat
jo
repnz
sub
sbb
push
lea
cltd
loop
ret
rorl
into
cmp
repnz
in
pop
mov
neg
inc
negl
lret
xchg
lds
xor
je
jbe
rclb
jecxz
sarb
jg
repz
add
mov
push
jae
cmp
mov
xchg
fmul
jbe
loope
insl
jnp
pusha
add
jnp
jne
aam
and
mov
xor
mov
mov
jecxz
fcomp
sahf
inc
movsb
add
xor
and
jmp
movsl
xorb
dec
scas
repnz
or
xlat
imul
push
push
repnz
fs
push
push
mov
test
movsb
mov
shlb
faddl
sub
push
scas
push
jb
or
in
test
scas
dec
mov
jb
jnp
ror
fstpl
test
sbb
movsl
in
mov
scas
repz
inc
cmp
in
imul
jne
add
test
stos
test
das
mov
mov
fsubr
ljmp
call
lcall
sbb
sub
or
push
sbb
or
pushf
push
cwtl
outsl
xchg
pop
jo
shll
das
ret
call
paddusw
pop
mov
movsb
sahf
rcll
lock
das
or
sbb
mov
pop
push
lods
test
and
ds
push
mov
mov
mov
mov
or
cmpl
lods
xchg
dec
mov
mov
addb
mov
xchg
inc
jle
mov
cmp
sbb
pop
cli
mov
xor
xor
push
loope
outsb
push
cmpsl
fimull
lret
sub
iret
pushf
push
lods
out
ret
cld
rclb
stc
fstpt
mov
push
sti
dec
insl
shlb
and
nop
sti
stos
sbb
xor
dec
leave
testb
cmpsb
or
fsubrp
push
dec
jno
scas
sub
cmpl
push
xor
test
lcall
insb
cld
cmp
cmp
pop
push
cmp
xor
stos
adc
js
add
and
int
pusha
xor
mov
push
divl
jmp
xor
xchg
mov
gs
in
aaa
mov
add
pop
push
jg
mov
mov
out
or
ss
iret
ja
loopne
sub
in
push
sub
mov
out
or
lock
pop
sbb
xor
xor
ss
out
pop
jae
in
and
dec
sub
aad
pop
mov
push
test
jne
cmp
push
adc
das
xchg
pop
mov
xlat
cmp
addr16
aam
fs
push
and
in
jge
push
dec
inc
mov
mov
inc
sub
cmp
cwtl
jne
mov
push
add
xor
aam
in
inc
xor
test
sti
adc
xchg
pusha
pop
cmpsl
aam
andb
xor
clc
ret
movsb
repz
out
cmpsl
adc
loope
rclb
mov
push
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
jmp
add
test
pop
add
push
popf
and
insl
mov
jnp
mov
jnp
popa
leave
push
dec
push
mov
outsb
adc
pop
dec
sub
insl
js
stos
pusha
jnp
arpl
jmp
lret
xchg
data16
pop
into
pop
je
xlat
xor
jp
mov
cltd
data16
imul
jb
jmp
fnstenv
sbb
shlb
enter
sub
loopne
sub
in
push
inc
sbb
xor
les
fucomi
jo
das
mov
mov
enter
paddusw
adc
movsl
bound
cld
sub
cli
int3
pop
inc
jne
sbb
outsl
mov
ret
into
in
dec
mov
cli
imul
pop
sub
testl
mov
inc
jns
fists
inc
loopne
stos
nop
int3
cmp
mov
aaa
push
movsl
xor
addl
aam
call
es
test
add
push
sahf
jmp
cmp
jae
cld
xchg
enter
cwtl
clc
xor
xor
sbb
mov
add
mov
pop
gs
xor
mov
xchg
clc
mov
sub
adc
call
faddp
sti
out
data16
xor
aad
inc
pop
pop
push
sub
xor
pop
popf
punpckldq
sub
mov
test
inc
add
jo
fcmovne
cmp
mov
push
sub
sbb
test
and
dec
outsb
mov
xor
push
jne
addr16
jnp
popa
jbe
or
int
adc
mov
push
ljmp
mov
cmp
xchg
xchg
das
mov
addr16
inc
loopne
repz
and
decb
les
data16
out
cld
sbb
pop
test
sbbb
fs
mov
call
hlt
icebp
mov
mov
outsl
push
adc
daa
lock
ficoml
sbb
pop
lea
xlat
lds
jne
cmp
adc
lret
adc
bound
pop
hlt
ss
imul
fwait
das
adc
std
fwait
mov
xchg
dec
mov
iret
aas
cmp
or
dec
mov
mov
xor
add
push
jns
pop
cmp
aam
jp
cld
ud2
mov
mov
mov
jl
lahf
mov
xchg
jnp
or
js
mov
andb
cmp
xchg
add
add
aad
dec
cmpsl
insb
cld
push
or
dec
movsb
pop
xor
pushf
enter
sbb
shrl
cs
and
nop
mov
mov
push
imul
mov
inc
cltd
inc
mov
pop
xor
mov
mov
dec
push
loopne
fldl
push
mov
aam
loopne
scas
sub
adc
test
stos
sub
sahf
cltd
jge
adc
mov
mov
int
js
xchg
mov
mov
inc
inc
ret
sarl
inc
movsl
dec
inc
movsb
sub
cli
mov
inc
mov
mov
mov
and
ss
jo
sbb
and
popa
mov
lock
ja
arpl
xchg
jg
sar
xor
jae
cmpl
mov
mov
out
gs
rorl
sbb
mov
or
jne
sbb
push
push
dec
push
aaa
mov
sbb
mov
sub
push
jae
pop
xchg
xor
aaa
sbb
pop
jp
add
out
adc
push
arpl
and
loope,pn
lahf
fldt
jbe
rcll
decb
lahf
loop
inc
pop
out
sbb
loope
xor
xlat
xchg
dec
lret
cld
shrl
repz
mov
aam
sbb
aas
fcoms
incl
ja
sbb
jecxz
aad
mov
dec
ja
mov
mov
test
push
mov
xchg
daa
lock
cmpsl
or
inc
dec
xor
mov
bnd
mov
fsubl
aas
xchg
and
xlat
ja
sbb
push
mov
pop
or
fdivrs
pop
ss
dec
les
cmc
ss
adc
enter
and
jecxz
dec
dec
xchg
cmp
sbb
out
pop
and
sub
rcrb
test
jle
fwait
xor
sbb
mov
fstps
inc
negb
roll
jb
jle
sbb
adcb
outsl
push
add
dec
out
testl
popa
push
cs
stos
or
rclb
shr
loopne
cmp
popf
and
lea
cmp
aad
lods
cmpsl
ds
aam
das
sbb
push
inc
stos
xchg
and
or
clc
push
pop
and
dec
imul
sbb
shll
sti
sti
stos
sbb
push
xchg
ja
dec
cmc
inc
add
push
testl
imul
scas
cltd
ja
push
or
add
sub
adc
xor
lret
push
sub
sub
cmpsl
add
testb
shrl
ds
mov
and
loopne
lret
cmpb
push
lahf
sarb
adc
xchg
daa
mov
shll
push
mov
mov
xor
call
js
xchg
mov
xchg
jle
rcr
fsub
outsb
xchg
cmp
fistpl
out
in
out
xor
cmc
push
enter
mov
lcall
cmp
imull
mov
xor
ss
sub
sarl
loope
cmp
lds
xor
jo
sbb
je,pn
fistpll
ror
and
cmp
mov
dec
and
xor
mov
cmp
xchg
xorl
fcmove
idiv
pop
mov
mov
repnz
adc
or
fwait
into
iret
xor
lea
shrl
or
fwait
arpl
incb
and
lea
xor
stos
inc
push
mov
fdivrl
sub
push
pop
xchg
xchg
lock
xor
cmp
aas
and
into
or
add
push
popf
sti
jl
mov
mov
sub
push
js
out
outsl
sahf
lods
jno
shrb
in
std
pop
mov
call
jecxz
lods
aaa
sbb
ds
rsm
sbb
and
ljmp
mov
jecxz
jge
orb
adc
fwait
dec
out
out
pop
xchg
and
or
test
shl
enter
xor
push
inc
scas
hlt
add
sub
pop
inc
xchg
inc
int3
scas
jno
scas
cwtl
dec
ljmp
nop
sbb
adc
popa
sbb
ljmp
outsl
rorb
es
fstps
cmpsb
or
xor
js
and
fisttpll
shlb
or
xchg
pop
dec
xor
cld
push
xor
push
cltd
mov
mov
xchg
adc
inc
xchg
repz
mov
pop
add
loope
jge
fdivr
jg
out
mov
mov
push
fs
es
cli
jnp
xlat
hlt
jmp
xor
sbb
aad
push
pop
cmp
mov
push
jp
add
inc
loope
cmc
and
dec
mov
pop
fisubl
mov
sbb
icebp
jg
mov
iret
sti
sbb
or
xor
cltd
mov
sub
addl
hlt
mov
nop
cmpb
or
sbb
clc
out
in
jne
sbb
mov
xor
ret
adc
inc
jmp
push
push
mov
or
mov
cmpsb
cmp
cs
sub
and
iret
dec
mov
xor
push
lods
mov
jbe
cld
ljmp
sbb
mov
lea
xchg
sahf
addr16
stos
insl
call
xchg
shll
rcr
xchg
push
jnp
mov
insl
or
push
xchg
lock
addr16
mov
xchg
pusha
sahf
scas
push
lahf
xor
ljmp
pop
ret
flds
xchg
fdiv
in
mov
daa
pushf
jle
test
leave
out
sahf
adc
inc
daa
lods
popa
inc
push
pop
out
lcall
pop
mov
pop
bound
mov
add
les
sub
jecxz
sti
mov
in
or
repz
std
ds
xchg
xchg
jae
icebp
mov
xchg
cli
lock
movsl
in
out
adc
les
or
pusha
mov
pop
push
inc
pop
loopne
add
out
daa
fidivs
jp
lret
scas
stos
mov
mov
fwait
stos
and
mov
mov
xchg
xchg
mov
fidivrl
lock
push
out
sbb
cmc
pop
mov
popf
mov
cwtl
aaa
jge
rep
jge
pusha
jns
into
adc
ljmp
dec
mov
out
rorb
pop
loope
push
loop
lods
cmp
fwait
stos
xlat
rcrb
push
dec
add
movsl
dec
cwtl
sbb
cld
cmpsb
sub
hlt
sub
je
add
cmpsl
outsb
pop
call
dec
pop
xchg
rcrb
mov
loop
lret
sub
mov
fiaddl
mov
mov
xchg
add
xchg
pusha
pop
mov
fwait
add
mov
mov
mov
fstpt
fidivl
sbb
mov
pop
cmp
cmp
push
and
ljmp
push
cli
mov
xchg
lods
hlt
mov
lahf
sub
jp
cmp
xchg
push
inc
cwtl
int
pop
cmp
push
jnp
mov
xchg
pushf
and
mov
in
inc
xchg
pop
gs
loope
mov
leave
add
mov
out
cltd
cs
xor
push
jne
push
jge
pop
push
rclb
push
in
sbbb
sub
inc
jge
out
test
pop
or
xchg
xor
push
jbe
scas
ds
repz
imul
cmp
push
mov
lods
negl
test
rcll
inc
bound
ret
push
addb
jns
mov
pop
pop
clc
das
call
fwait
push
cmp
sbb
ss
mov
cmpsl
ficoms
jle
dec
pop
lods
push
add
jg
push
mov
popf
xorb
xchg
sub
dec
mov
ja
push
jnp
jnp
cmc
icebp
xchg
fwait
cmp
xorb
enter
out
movsl
dec
aam
cmp
and
inc
inc
nop
xchg
xchg
adc
rcrb
jb
adc
iret
cs
dec
push
rclb
mov
fwait
sub
cmp
push
push
sbb
pop
fsubs
or
in
and
es
push
jg
push
sbb
push
rcrl
lahf
movsl
lods
daa
or
dec
js
outsl
pushf
xchg
sub
cs
imul
cld
push
jl
les
sub
xchg
sub
mov
hlt
or
mov
rcrb
ficoms
inc
in
cmp
xor
inc
pop
xchg
out
jl
push
xchg
idiv
cmpsl
xchg
cs
jbe
and
mov
negb
fsubl
sbb
insl
and
and
xlat
fs
push
pop
test
data16
inc
fstps
loop
stos
aaa
adc
out
sbb
lret
iret
fwait
shlb
jecxz
pushf
bswap
lock
xchg
cmp
insl
int3
and
lahf
in
xchg
aas
stos
mov
and
mov
rcrl
xchg
shr
sbb
add
pop
push
mov
int3
jge
std
mov
ds
std
inc
loope
jnp
ret
enter
test
ja
sub
cmp
int3
adc
imul
into
push
imul
add
push
daa
lods
icebp
popa
lret
out
dec
imulb
pop
dec
inc
cli
jo
pop
call
and
ret
push
sub
mov
fsubp
or
xchg
xorl
mov
movsl
les
xchg
ja
subl
btc
jge
push
jp
sub
movsl
mov
cmp
sarb
mov
rcr
in
aas
in
dec
rorb
test
out
xchg
add
dec
mov
inc
lea
cmp
inc
mov
add
rcrb
xorb
pusha
push
dec
fdivrs
adc
sub
mov
sub
aaa
repnz
loopne
fistps
lcall
cmp
dec
jp
icebp
add
sbb
mov
movsl
mov
jns
loop
push
mov
addl
mov
sbb
aaa
mov
fwait
clc
out
call
int
add
sbb
xadd
lods
mov
loope
mov
and
cmpsb
add
xchg
add
add
arpl
ret
lds
jno
inc
js
insb
mov
icebp
pop
mov
mov
cwtl
push
mov
imul
data16
iret
mov
idiv
sbb
xchg
imul
push
push
sbb
and
into
shr
lret
imul
pop
loop
mov
cmpsl
adc
dec
call
push
lea
loopne
pushl
sub
cmp
xor
aad
pop
sahf
clc
fwait
roll
outsl
repz
mov
loopne
mov
mov
insb
shrb
push
dec
stos
cmpsb
mov
cltd
jecxz
call
cmp
and
sub
mov
inc
adc
pop
shll
daa
dec
dec
mov
stc
loope
jl
add
add
sbb
xlat
mov
inc
mov
push
sub
pop
mov
fldenv
mov
ret
xchg
mov
mov
dec
fstpl
pop
in
out
pusha
adc
add
xchg
xor
mov
cmp
ja
in
xor
mov
push
pop
fsubrs
lahf
jmp
pop
das
add
fwait
mul
inc
inc
push
pop
jl
add
fcoms
daa
add
pop
dec
test
xchg
xor
pop
dec
mov
mov
xchg
data16
add
adc
and
inc
dec
push
ret
pop
rolb
icebp
adc
adcb
subb
idiv
cmp
xchg
mov
cmp
or
stos
jg
xor
lcall
sub
lret
sub
cmp
cmp
fcompl
push
pop
mov
adc
xor
xchg
sarb
cs
sbb
pop
mov
sti
or
frstor
das
push
scas
das
xor
les
shr
adc
jb
mov
mov
and
mov
fiaddl
cmpsb
loope
xchg
push
test
add
outsl
pop
roll
lret
outsl
in
mov
in
cs
or
clc
dec
add
jp
cmp
cltd
push
lock
and
fisubl
mov
adc
push
popa
dec
imulb
push
outsl
sub
fisubrs
std
inc
data16
or
push
fisttpl
jmp
pop
pop
inc
push
xor
and
or
ds
loop
adc
cmp
push
xchg
or
xor
mov
jg
mov
jp
aas
xchg
mov
inc
sub
jo
xchg
ss
gs
imul
or
push
adc
pop
hlt
cmp
lret
xorl
and
xor
mov
ret
sub
jg
sub
dec
adc
push
movsl
mov
pop
push
addr16
xchg
xchg
mov
lods
idiv
roll
stos
jo
xchg
arpl
mov
xor
cli
mov
ret
iret
fadds
mov
jb
mov
mov
mov
push
cmpl
int
push
out
popf
addr16
xchg
enter
hlt
xchg
outsl
cmp
lods
fwait
xor
cmc
ljmp
cmp
loop
lock
push
pushf
mov
mov
data16
push
inc
sbb
push
cwtl
jne
sarb
fsubrs
sub
shlb
mov
adc
jnp
cmc
dec
lods
jno
scas
push
jmp
adc
pop
fistpll
in
test
into
jne
insl
jp
dec
test
push
sub
pushf
dec
inc
inc
jle
add
stos
repnz
jnp
fsubrs
fwait
mov
dec
xor
fwait
jno
xor
cmp
ss
int
jnp
cwtl
jle
xchg
xchg
hlt
lcall
repz
ds
xchg
cld
push
inc
jae
pop
ss
mov
test
sub
xchg
and
aam
cli
jge
popf
in
sbb
lock
dec
xor
mov
inc
fsubs
or
lock
pusha
fucom
jmp
xchg
mov
dec
sbb
push
dec
xor
push
in
adc
pop
cmp
cmp
jmp
sub
jbe
jle
pop
or
pop
testb
xlat
or
add
sub
sbb
jbe
js
xor
jns
xchg
xchg
or
mov
fstpl
xor
jno
inc
push
out
in
push
push
xchg
bnd
outsb
push
pop
push
pop
shll
pop
popf
add
mov
rol
add
faddl
insb
mov
adc
jp
push
or
adc
aam
cwtl
sub
dec
out
fistl
jecxz
mov
xor
adc
dec
popf
mov
adc
mov
shrb
scas
mov
jbe
push
xchg
add
or
cltd
adc
or
lock
adc
push
or
lea
into
mov
into
inc
cmp
pop
cltd
test
std
loope
sub
icebp
xchg
insb
push
sub
mov
xor
loopne
mov
or
xor
sub
adc
popa
xchg
repz
mov
mov
flds
and
popf
mov
loope
lret
push
rcll
cmp
imul
addl
sbb
in
jnp
mov
in
mov
pusha
xchg
aad
mov
or
push
xchg
ja
gs
dec
sbbl
cmpsb
fiaddl
dec
ret
lock
xchg
pop
and
pop
fistpll
or
mov
loop
pop
sub
xor
das
aaa
lods
sbb
jmp
insl
in
mov
orl
inc
cmpsb
dec
fisttpll
pop
cmc
cwtl
divl
mov
xor
sahf
pop
or
insb
mov
add
and
push
ljmp
cmp
movsb
jp
lods
lret
out
cltd
pop
sbb
testb
push
aaa
jge
adc
inc
data16
jns
jno
dec
cmc
sti
std
adc
sub
inc
adc
cmp
jle
test
add
xor
in
mov
pop
fidivrl
cmp
scas
les
mov
push
fdivs
pop
cmc
int
or
shl
adc
test
cmp
ret
or
adc
xchg
xchg
cmp
mov
mov
stos
mov
jmp
or
mov
adc
pop
lock
and
outsb
sti
rorl
jge
faddp
cmc
inc
xchg
fwait
add
lock
daa
shrl
fwait
out
or
aaa
pop
sbb
inc
testl
shrb
push
fidivrl
adc
ss
jo
adc
shlb
fidivrl
xchg
xor
inc
push
std
outsb
fdivrs
pop
mov
loope
rorb
fnstenv
call
jno
movsb
cmp
es
xor
cmp
lahf
js
xchg
fldt
or
dec
jb
aaa
adc
fsts
insl
repnz
out
jp
sub
push
out
inc
adc
lret
fiaddl
fs
jge
jbe
ret
dec
flds
shld
test
hlt
mov
out
insl
test
scas
add
dec
xor
ss
aam
adc
sub
mov
roll
test
ret
xchg
jae
into
addr16
decb
adc
insl
cmp
pop
push
mov
mov
outsl
movsb
mov
popa
add
pop
mov
scas
pop
add
movsb
lret
add
sbb
out
inc
mov
inc
push
ja
cmovns
add
xchg
inc
lahf
or
xchg
dec
inc
jns
xchg
inc
jns
das
jle
inc
insl
push
mov
add
sub
cmp
push
nop
xchg
jecxz
jge
les
push
push
aaa
dec
push
fbld
cmp
rol
mov
push
sbb
enter
cltd
fstpt
add
jbe
outsl
aad
mov
dec
icebp
xchg
inc
inc
sbb
movsl
subl
push
into
bound
repz
add
das
pop
cmpsl
xchg
jnp
sahf
repnz
cmp
cmpsb
adc
xchg
test
sbb
inc
popa
dec
cmp
mov
jo
mov
cmp
aas
in
adc
lret
fdivs
jno
dec
aaa
dec
adc
mov
testw
add
dec
push
cli
mov
xchg
lds
clc
pop
fcomps
mov
mov
std
outsb
mov
leave
push
clc
mov
xchg
push
lock
orl
das
nop
xor
xchg
sbb
mov
sub
jge,pn
sub
xor
inc
pop
dec
dec
sub
mov
mov
fldenv
andl
jnp
jb
push
sbb
rcl
mov
arpl
popf
push
mov
dec
rolw
lea
cmp
mov
sub
inc
cli
and
stos
xor
xchg
rorl
inc
mov
out
pop
andl
sbb
pop
pop
testb
and
jle
adc
jge
jecxz
cmp
lock
aaa
iret
pop
lods
cld
and
inc
push
mov
pop
cmpsl
fistps
mov
sub
sbb
daa
adc
jns
subb
dec
or
shr
sbb
sub
or
in
stos
xorb
jmp
lret
sti
gs
jb
lahf
inc
jo
ret
xchg
aaa
pop
jo
loop
sbb
cmp
roll
cs
mov
lret
fbstp
iret
pop
js
jp
dec
cltd
ss
xorb
fiadds
scas
adc
insl
or
dec
mov
nop
test
out
adc
adc
nop
jo
or
cmp
add
and
xchg
adc
cmpsl
scas
jle
jae
xchg
int3
xor
pop
push
jnp
mov
mov
mov
push
xchg
outsl
int3
or
push
fmulp
in
popf
or
pusha
inc
sub
lcall
mov
mov
or
xchg
in
insb
popf
jbe
dec
mov
ja
sbb
sub
aad
into
sahf
or
cli
xchg
cmp
mov
cmp
scas
jp
popf
test
mov
jge
test
jns
and
lahf
arpl
leave
jno
push
jnp
sti
ss
or
aaa
jnp
sub
and
mov
cli
and
jno
jae
sub
repnz
outsb
orl
fcoml
add
test
pop
ljmp
sbb
lret
xchg
call
push
mov
jnp
or
in
jo
push
pop
inc
lea
lock
sub
mov
ja
and
dec
sbb
add
fistpl
out
enter
imul
mulb
movsl
icebp
mov
dec
mov
addr16
mov
nop
push
dec
ror
sahf
cld
aam
insl
cmp
push
and
mov
adcl
jnp
stos
push
lahf
mov
in
or
mov
insl
adc
lret
pusha
rorl
stc
push
das
sub
and
out
dec
insb
sbb
arpl
and
lret
iret
lods
imull
notb
rcrl
repnz
push
pop
pop
testl
repz
inc
and
out
iret
icebp
cld
std
test
arpl
dec
sbb
or
inc
inc
inc
rclb
imul
mov
test
outsb
pop
cmc
out
mov
test
movsb
fucomip
pop
sbb
xchg
cmp
lret
cmp
shl
and
dec
insl
into
shl
loopne
ret
lock
pxor
pop
addr16
test
js
xchg
pop
jmp
sub
xchg
ss
push
test
xor
xchg
stos
addr16
inc
outsl
stc
mov
aam
inc
cwtl
arpl
repz
repz
out
add
mov
in
loopne
jp
ss
sub
cmp
fnstenv
cmp
add
push
data16
insb
shrb
xor
jns
dec
mov
jl
rcl
in
repnz
xor
outsl
adc
loope
jmp
std
ljmp
mov
mov
mov
setb
mov
and
fadds
out
ds
sbb
inc
push
add
push
int
sub
ficoml
xlat
fisubl
cmp
mov
pop
out
nop
push
mov
xchg
pop
inc
movsl
and
iret
in
sub
add
inc
jecxz
or
sub
imul
and
sbb
xor
mov
jmp
mov
popa
xor
adc
sub
push
pop
jp
cwtl
loop
insl
mov
andl
pop
in
out
jge
sub
inc
cld
sarb
xchg
xchg
fwait
mov
dec
iret
mov
mov
mov
pushw
push
dec
ljmp
fidivrs
sub
in
shlb
ss
xchg
push
dec
cli
jl
jnp
into
int
jg
and
movsl
or
or
cmp
adc
and
pop
cli
stos
push
div
pop
cmp
aas
add
mov
push
xlat
aaa
jle
jns
std
dec
inc
mov
cmpsl
cltd
or
or
push
jo
stos
push
cmp
cmpsb
icebp
mov
shld
mov
pop
push
ja
inc
adc
outsl
in
pop
push
test
pop
add
push
jno
hlt
es
les
jecxz
out
jo
dec
and
fcom
in
mov
scas
les
in
adc
movsl
fucomp
repz
xchg
out
or
add
lds
mov
pop
gs
dec
mov
rcr
add
mov
add
cld
jecxz
jno
mov
mov
es
jmp
loopne
sub
mov
cmp
icebp
xchg
add
cmp
scas
pop
mov
cmp
xchg
outsb
dec
and
sub
ds
mov
jecxz
and
out
mov
mov
cli
in
or
or
cli
or
daa
in
rcrb
push
push
in
dec
leave
daa
push
sub
clc
fwait
dec
scas
popa
sub
cmpsb
inc
or
lahf
pop
mov
and
fnstcw
lret
jle
mov
ljmp
flds
pop
jge
loopne
xchg
scas
jae
lcall
scas
sub
lcall
orb
scas
push
fsubrl
stos
ja
pop
pushf
pop
xor
push
pop
sbb
adc
sbb
mov
fisubl
rorl
ret
mov
sub
test
rclb
addr16
dec
and
lcall
cld
adc
cmp
mov
cmpsb
stc
xchg
push
ret
idivl
adc
stos
mov
sub
push
mov
pop
xchg
push
xchg
or
out
inc
pop
sbb
pop
imul
push
lock
pusha
mov
jne
inc
cmp
xor
aam
idivl
adc
aaa
in
sub
push
sbb
shrb
movsl
dec
jne
sahf
out
push
ret
lods
inc
pop
fbld
movsb
gs
mov
inc
rolb
test
call
add
add
adc
and
loope
rclb
pop
ret
mov
xchg
ss
push
out
shll
fdivl
nop
sahf
pop
xor
imul
cmp
stos
loope
pop
adc
jl
sbb
lds
ss
inc
mov
mov
mov
mov
insl
test
in
mov
je
enter
aas
sbb
xor
ljmp
imull
test
enter
or
mov
xchg
dec
repnz
in
hlt
in
mov
xchg
and
popf
clc
mov
lods
mov
xchg
bound
enter
andb
mov
or
out
fsts
fcoms
push
dec
ljmp
jae
or
and
repz
lods
mov
xchg
in
rolb
je
adc
lahf
sub
jne
call
pop
xor
push
adc
xchg
jnp
test
pop
arpl
aas
xchg
pop
pop
divl
inc
movsb
ds
and
pop
js
jns
and
jmp
imul
jle
data16
movl
dec
push
fwait
leave
sti
test
cmp
daa
aam
adc
imul
aaa
xchg
popa
popf
push
out
xchg
in
push
inc
jb
inc
adc
out
ds
dec
in
sub
mov
loop
mov
arpl
sub
inc
jbe
push
mov
xor
sbb
out
test
daa
mov
orl
fstpl
addr16
loope
shrb
imul
stos
adc
mov
ljmp
imul
testb
mov
test
jecxz
push
jns,pt
sub
inc
loop
daa
xchg
jle
push
pop
cld
gs
fldl
clc
push
rolb
loop
pop
or
stos
and
mov
xchg
dec
xchg
pop
inc
fcmovne
popa
mov
shrl
mov
cld
inc
lea
dec
vmovaps
mov
mov
in
imul
stos
xlat
push
or
stos
jl
out
sahf
int3
pushf
xchg
scas
push
scas
jmp
adc
mov
push
dec
pop
mov
mov
inc
fs
nop
xchg
adc
out
aaa
cmp
sbbb
test
lcall
in
xor
les
fldenv
add
dec
mov
out
dec
loopne
mov
mov
pop
xchg
mov
sub
sahf
add
sbb
and
mov
fnstcw
sub
add
dec
or
jl
sub
push
rolb
inc
or
xlat
adc
cmp
or
xor
in
and
dec
adc
jle
dec
in
xchg
mov
in
dec
inc
pop
data16
loopne
jne
inc
lcall
repz
lcall
mov
int
in
ficoml
in
aaa
mov
cmpsb
add
mov
iret
xor
adc
fnstenv
insl
out
sub
enter
jo
les
in
dec
or
fdivs
rcrl
ret
dec
pop
pop
xchg
mov
scas
mov
adc
mov
mov
loopne
ja
add
fwait
mov
cltd
popf
insb
or
jmp
leave
xlat
cli
cmp
mov
ds
lock
out
pop
loopne
adc
subb
test
or
dec
daa
inc
mov
arpl
dec
lcall
pop
in
xchg
adc
dec
cmp
loopne
sahf
mov
push
mov
insl
pop
mov
aad
sbb
andl
js
mov
push
push
inc
gs
sbb
mov
lret
jp
sbb
or
sarl
cmc
cli
aaa
lods
test
loope
mov
or
cmp
cltd
rcll
and
shlb
int
dec
aas
scas
sbb
outsb
mov
enter
cmp
push
dec
dec
inc
cwtl
sar
xor
mov
call
sbb
xchg
sbb
lds
pop
clc
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
jmp
mov
mov
xor
lea
lea
xor
cmp
jne
decl
jne
mov
mov
mov
xor
mov
xor
mov
xor
mov
mov
xor
mov
mov
xor
add
pop
pop
pop
leave
ret
sbbl
xor
ret
push
mov
sub
movl
adcl
push
sbbl
movl
addl
mov
subl
push
sub
mov
xor
adcl
push
mov
subl
add
subl
mov
mov
test
je
andl
mov
inc
mov
cmpl
jl
jmp
push
push
call
cmpl
jb
mov
sbbl
mov
mov
and
mov
xor
add
movzbl
sub
mov
mov
sub
mov
xor
orl
add
mov
movl
cmpl
je
cmpl
jb
jmp
push
call
mov
dec
mov
jmp
mov
xor
sub
add
mov
sbb
mov
sub
xor
movl
add
mov
sub
xorl
lea
orl
xor
orl
xor
movl
cmp
je
mov
addl
xor
sbbl
add
cmp
jne
pushl
call
andl
mov
andl
mov
inc
mov
cmpl
ja
jmp
pushl
call
cmpl
jb
mov
mov
sbbl
xor
andl
add
cmp
movl
je
xorl
pushl
pushl
xorl
call
mov
mov
sub
mov
sbbl
xor
sbbl
add
movl
cmp
movl
je
movl
mov
mov
adc
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jge
jmp
push
call
cmpl
jne
mov
inc
mov
jmp
mov
decl
mov
addl
add
movl
cmpl
je
cmpl
jl
jmp
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
mov
mov
addl
add
or
mov
sbb
mov
mov
add
movl
mov
jmp
add
mov
mov
add
mov
mov
and
mov
mov
xor
subl
add
cmp
movl
je
jmp
mov
and
mov
xor
decl
add
movl
cmp
mov
movl
je
andl
mov
xor
add
movl
cmp
movl
je
lea
xorl
push
pushl
sbbl
pushl
call
or
mov
sbb
mov
xorl
xor
sbbl
add
movl
cmp
movl
je
movzwl
mov
movzwl
mov
mov
mov
mov
jmp
mov
xor
lea
jmp
mov
xor
add
jmp
mov
add
mov
mov
test
je
movl
push
xor
pop
add
push
pop
push
dec
pop
dec
xchg
sub
xchg
dec
mov
imul
sub
mov
mov
xor
add
jmp
mov
mov
mov
mov
xor
add
xor
div
mov
xor
lea
mov
mov
jmp
fbstp
cmp
cmpsl
fnstsw
cwtl
push
jbe
in
jnp
sahf
jnp
fistl
mov
sbb
movsl
and
push
mov
ljmp
add
add
jp
pop
xchg
add
cmp
pop
push
or
jno
mov
aas
push
push
adc
adc
and
roll
or
lret
movsb
or
sti
pop
ljmp
add
int3
ja
incl
and
adc
and
clc
dec
or
test
stc
leave
pushf
push
outsl
pop
sbb
cmp
xchg
cli
add
sub
adc
jno
rcll
cwtl
enter
mov
push
negl
jge
ror
xor
mov
mov
xchg
std
clc
jp
and
push
insb
mulb
mov
popa
push
push
pop
clc
mov
fs
arpl
repnz
push
out
or
aam
jno
ja
push
adcb
aad
or
cmove
pop
inc
inc
mov
inc
hlt
cmpsl
js
call
or
roll
lock
lret
js
mov
aam
add
imul
lret
dec
and
mov
cs
aad
repnz
in
xor
xchg
pop
fidivrs
dec
mov
pop
mov
push
lock
fisubl
js
xchg
dec
mov
rorb
sti
mov
sub
jne
pusha
lcall
aas
xchg
icebp
mov
lds
sub
lret
stos
loope
push
pop
jae
adc
push
test
hlt
xchg
sub
add
test
aam
dec
outsl
inc
push
mov
shlb
mov
aam
mov
std
adc
jns
push
xor
leave
stc
jbe
or
lods
xchg
jmp
mov
dec
dec
jno
hlt
mov
add
adc
test
push
jo
xchg
xor
mov
aad
xor
repz
scas
push
pmulhuw
clc
sub
mov
idivl
mov
jb
xor
sbb
ljmp
fistps
adc
in
dec
mov
jns
clc
pop
shl
dec
out
test
lahf
adc
out
sbb
mov
out
in
int
and
je
inc
jb
hlt
mov
repnz
pop
lock
push
stos
push
sbb
fwait
dec
sbbl
pusha
aad
jl
ds
xor
ret
andb
mov
mov
outsb
mov
outsl
mov
ss
jns
mov
cmp
cmp
lret
mov
push
cmpsl
adc
shrb
jecxz
xchg
fcoms
lahf
scas
mov
jmp
push
sarb
or
or
ja
cltd
lahf
imul
loop
sbb
insb
or
or
push
cmp
stos
loope
shlb
and
xchg
loop
test
in
add
cmp
sub
mov
sub
cmc
mov
imul
or
add
int
sub
xchg
aam
adc
mov
add
and
pop
adc
imul
jb
mov
aam
or
adc
and
leave
jmp
sub
dec
imul
pop
std
ret
sub
out
stos
cs
insb
adc
mov
lret
sub
cmp
jl
mov
push
push
mov
sub
push
mov
inc
es
cli
into
test
leave
cmpsl
cld
dec
scas
mov
hlt
enter
cltd
cmpsl
std
pop
dec
fcomip
or
pop
jnp
jg
adc
add
lcall
pop
addl
ret
dec
or
push
dec
push
jmp
xchg
xchg
or
scas
jnp
sbb
ret
push
inc
or
lock
hlt
std
lahf
cmc
loopne
out
and
imul
or
xor
fisubrs
mov
cld
ret
xchg
cltd
psubd
cmpsl
fs
lret
outsb
fldenv
inc
inc
add
cwtl
int3
popf
xchg
add
mov
mov
xchg
pop
out
fadds
sti
sbb
pushl
jl
loop
jns
inc
iret
dec
cli
lea
add
into
ds
or
fnstenv
jecxz
loopne
icebp
fists
gs
inc
mov
inc
outsb
xor
dec
cmpsb
lcall
outsl
sub
lods
cmp
es
orb
insl
xchg
pop
loopne
adc
fsubrl
xor
mov
jae
cmp
push
cmp
pusha
adc
fsubl
xchg
or
popf
and
lahf
cmp
fnstsw
xor
lea
cwtl
shl
xchg
bound
pop
adc
pop
push
daa
in
push
fdivrl
fwait
repz
push
sub
mov
xor
lods
adc
sti
loope
dec
cmp
scas
pusha
dec
push
aaa
mov
ficoml
sub
pusha
sbb
ret
push
push
and
inc
mov
daa
insl
inc
ljmp
xchg
repz
idivl
das
jb
rcl
push
mov
out
fnsave
sbb
test
dec
sub
int3
xchg
out
cmp
mov
lret
lcall
scas
jge
pop
movsb
cs
loope
loop
cmc
pushf
sti
adc
jo
icebp
dec
fdivrs
push
in
and
fsubrl
jmp
and
scas
ljmp
je
insl
test
mov
cmc
cmp
add
xchg
mov
loop
inc
lcall
idivb
dec
push
jmp
jbe
imul
ret
lods
pushf
pop
mov
arpl
mov
jne
mov
fdivs
or
cmp
ds
scas
mov
ret
push
cmp
and
push
insb
ljmp
lds
divb
test
xchg
adc
lahf
add
mov
fs
fistpl
fdivs
xchg
mov
test
xlat
roll
sbb
add
shll
push
mov
call
push
test
fwait
popa
test
movsb
xchg
ds
in
mov
jno
popf
sti
sti
mov
mov
mov
xchg
or
dec
aas
test
stc
xchg
mov
dec
sbb
ret
and
lds
pop
jns
mov
xor
cmpsl
fldl
int3
add
and
mov
outsb
sub
inc
lods
mov
leave
push
dec
pop
sbb
inc
add
pop
lods
mov
mov
movsl
xchg
out
fcmovnb
pop
inc
bnd
xchg
mov
vunpcklpd
cmp
lret
lods
add
rcrb
pop
inc
adc
push
push
xchg
pop
add
pop
setge
jb
int
imull
in
test
push
xchg
xchg
insb
cli
mov
sahf
xchg
sub
scas
push
bound
jmp
sub
cmp
sbb
je
stos
stc
retw
cmp
and
and
leave
loope
insb
sarb
and
lret
mov
inc
cmpb
push
pop
adc
xlat
ds
mov
inc
mov
sbb
sahf
mov
mov
shlb
sbb
loope
and
jne
sub
xor
dec
addr16
into
mov
sub
les
clc
rcr
adc
cmpsb
gs
pop
lret
push
int
sti
ljmp
jecxz
imul
push
mov
int3
cmpsl
fs
jns
mov
sahf
push
or
cmpsb
das
nop
xchg
fwait
mov
inc
inc
nop
pop
push
gs
insl
out
dec
ficompl
repz
call
dec
xchg
sti
adc
sbb
pushf
pop
jnp
in
arpl
fst
fdivrs
es
mov
shll
shrb
movsl
and
clc
sarb
fwait
dec
cmc
xor
in
cmp
int
iret
jno
stos
xchg
daa
xor
inc
lret
or
dec
cmp
shlb
cwtl
adcb
mov
rcl
mov
push
icebp
insl
mov
lock
lds
mov
xlat
pop
jo
mov
lret
rorb
adc
fcomps
das
jno
fcmovu
das
lcall
lock
mov
mov
or
mov
push
data16
stos
leave
and
cmp
dec
add
inc
cmp
js
mov
sub
cmp
add
mov
and
hlt
add
imul
fsubl
pop
stc
mov
into
aaa
dec
out
stos
stos
inc
into
hlt
cmp
cmp
into
xor
pop
loopne
or
outsb
or
or
pop
xchg
cld
or
sub
pop
jmp
push
mov
inc
jp
cmpsl
lock
adc
xorl
mov
subl
sarl
stc
adc
fs
pop
xchg
call
out
xchg
mov
sub
es
push
and
aad
push
cwtl
test
addr16
cmpsl
sbb
stos
push
lock
aad
pop
bound
cli
ficomps
push
out
test
rolb
out
das
scas
and
push
xor
sarb
in
in
fwait
xor
pop
test
fimuls
jmp
loopne
push
add
jb
outsl
cmp
jge
pop
xchg
pop
fadd
pop
cmp
xchg
outsb
repz
sub
jae
mov
add
dec
test
rcll
nop
inc
push
lahf
dec
sbbl
mov
fistpll
bound
cwtl
mov
lds
popa
bound
movsb
shrb
jg
in
arpl
xor
fnsave
enter
pop
out
ret
imul
cld
adc
push
xor
ret
lahf
std
mov
inc
mov
xor
push
test
xchg
sbbb
pop
xchg
out
cmp
fmul
test
repnz
mov
push
jge
movsl
outsl
in
imull
cli
xchg
fcompl
rclb
mov
xor
sbb
mov
or
adc
popa
nop
mov
outsb
inc
iret
sub
shlb
dec
loop
jp
andb
dec
sub
or
lods
fcoml
outsb
ja
sbb
add
dec
lcall
and
lret
xor
pop
sarl
jmp
fists
or
jecxz
mov
mov
or
fcompl
popa
mov
lds
rclb
push
lcall
cli
mov
outsl
jge
adc
xchg
loope
aam
lock
nop
dec
ret
pop
outsl
sbb
test
jnp
mov
popa
mov
sbb
popf
imul
fwait
shll
adc
sbb
cmp
data16
out
jl
pop
aad
addr16
push
jb
sub
push
jno
sub
push
cmc
call
iret
adc
lods
inc
jae
nop
mov
sbb
push
mov
pop
add
testb
gs
add
adc
sub
fwait
mov
ljmp
cli
fisubrl
pop
add
push
aaa
push
xor
cld
mov
mov
jno
or
sub
and
push
fldt
cwtl
mov
out
leave
add
mov
mov
push
int3
mov
jle
hlt
clc
cs
test
inc
mov
jg
mov
faddl
and
sbb
mov
mov
mov
xchg
sub
sub
pushf
push
insl
aas
insl
aas
add
test
fildl
push
sahf
hlt
xlat
lahf
jo
xchg
mov
movlps
cmp
fists
rcll
mov
mov
jns
sub
xlat
repnz
lcall
je
scas
lret
mov
into
xor
push
cld
in
sbb
sarl
in
add
imul
into
loop
sub
mov
xchg
add
mov
push
repnz
call
or
or
adc
mov
mov
lahf
pop
stos
mov
cmp
rcrb
dec
xchg
add
xchg
dec
xchg
and
push
out
pop
jae
daa
fistps
lcall
jbe
ret
ds
lret
xchg
sti
unpcklps
jae
iret
add
push
sahf
rcr
mov
cmp
add
jg
pop
ficoms
xor
xchg
mov
xchg
inc
sub
pop
jl
and
jne
fiadds
rolb
test
or
adc
pop
jns
or
pop
mov
xor
dec
mov
daa
lock
cld
pop
xchg
sbb
inc
das
dec
rorb
enter
repz
xor
sbb
pop
stos
repnz
dec
adc
sbb
cmc
into
mov
cmpl
cs
mov
sbb
in
adc
aas
lahf
xchg
mov
add
outsl
and
xlat
cmp
int3
popf
jp
dec
inc
ss
addr16
popf
push
iret
jge
push
dec
int
xor
inc
leave
xor
mov
inc
inc
shll
js
sub
xor
or
aaa
mov
pminub
dec
dec
or
jne
xor
mov
cmp
dec
mov
sbb
bound
call
jo
mov
push
push
out
pop
lods
test
jnp
sti
mov
loope
sti
addb
pop
inc
mov
or
mov
fisttpll
xlat
int
andb
mov
sub
jne
pop
rorl
out
pop
mov
and
cmp
mov
sbb
xor
cwtl
xchg
enter
ljmp
aad
out
lret
adc
jb
or
enter
inc
mov
cmove
cwtl
out
lea
fdiv
xchg
xchg
jmp
enter
mov
test
push
cmp
jo
inc
pop
movsb
int
or
mov
jmp
inc
xorb
push
mov
cli
jl
rcr
pop
icebp
xchg
lea
sbb
push
mov
inc
pop
push
loop
jb
add
xor
and
inc
stos
push
daa
jnp
and
cmpsl
pop
sbb
add
incb
cltd
fwait
lahf
outsb
outsb
xchg
scas
ss
mov
aas
jmp
xchg
sahf
mov
inc
loop
xor
mov
je
packsswb
std
cmpsl
shll
xchg
daa
mov
inc
cmp
enter
dec
cs
cmp
jae
ret
add
inc
push
outsb
incb
xchg
loopne
gs
xor
and
iret
out
xchg
sub
push
hlt
and
push
gs
xor
xlat
fiadds
in
pop
out
shlb
cltd
push
testl
add
push
js
mov
loope
repnz
xchg
mov
cld
cmp
sub
stc
sbb
sbb
push
es
mov
push
adc
jbe
mov
xchg
xor
aaa
mov
mov
scas
dec
pop
stc
imul
jo
shlb
pop
mov
stos
cmpsl
in
sub
cmc
imul
push
mov
push
repz
adcl
push
jne
xchg
shr
pop
fldenv
mov
push
xchg
les
dec
dec
add
sub
sbb
sahf
enter
dec
mov
mov
push
outsb
or
fisubl
push
xor
inc
outsl
dec
out
adc
imul
hlt
lea
fdivl
testb
jg
push
outsb
dec
mov
mov
flds
jmp
jne
imul
insl
mov
xor
bound
xchg
cmp
jle
adc
mov
andb
movsb
sti
cmc
xchg
imul
mov
imul
jmp
clc
xchg
add
jg
push
add
repnz
sub
adc
adc
out
ror
pop
push
jmp
in
cmp
cltd
cmp
cmp
test
and
int
jnp
jp
xor
xchg
push
outsb
cmpsb
jb
or
pop
push
outsb
ss
push
pop
jns
sbb
insl
push
mov
lahf
fidivl
fistl
jle
popa
pop
mov
xorl
inc
cmp
fiadds
adc
jmp
xchg
mov
sub
int3
js
dec
jb
cwtl
add
push
adc
xor
jp
jg
mov
dec
mov
jmp
pushf
inc
lret
sahf
push
dec
push
sbb
jns
mov
pop
bound
cmp
add
outsl
imul
cmp
add
loop
sbb
insb
lea
sub
adc
aam
data16
dec
push
mov
xor
inc
cmp
xor
sbb
orl
mov
lret
xor
push
mov
cmp
je
fs
jp
out
sub
jo
lods
mov
and
lcall
sbb
xor
loope
les
mov
cmp
and
cmp
movsl
mov
pop
cmc
out
adc
xor
or
inc
jmp
pop
mov
aaa
scas
adc
xlat
pop
push
xor
fimull
adc
in
cmpsl
aad
sub
jmp
test
aas
data16
pop
out
push
shlb
pop
xchg
mov
inc
and
mov
jns
std
clc
cli
sbb
jl
cmp
xchg
enter
sub
and
subl
sbb
inc
in
sti
cmp
ds
lret
jle
cmpl
jnp
ds
dec
dec
mov
les
pop
dec
lock
idiv
mov
adc
sub
sbb
mov
dec
cmpsb
jbe
add
out
data16
ds
inc
jb
xchg
xchg
daa
or
and
mov
mov
adc
adc
push
cld
ljmp
flds
cmp
pop
lret
cmp
dec
mov
jl
loope
repz
push
add
and
or
aas
cmp
mov
in
outsb
pop
mov
inc
jg
test
inc
inc
in
hlt
dec
dec
pop
jecxz
in
dec
mul
add
out
das
test
lods
out
mov
cmp
inc
mov
xchg
mov
pop
jno
ds
imul
mov
push
jge
and
outsb
cmp
jae
dec
lcall
loop
and
mov
jecxz
push
jno
dec
adc
pop
fidivs
sub
cmpsb
push
sub
xor
add
inc
mov
push
mov
mov
cmc
fdivl
jmp
das
xor
lahf
sti
loop
pop
out
xchg
fsubl
into
sbb
aaa
int3
pop
ljmp
cwtl
dec
icebp
push
aas
scas
out
jge
andl
loope
and
bound
xchg
inc
lret
mov
push
lcall
stc
fisubrs
and
add
mov
pop
mov
xchg
and
in
mov
cmp
into
xor
xchg
mov
mov
xlat
mov
imul
dec
push
filds
adc
jge
lahf
fwait
lret
repz
inc
pop
fs
shll
aam
stc
sbbl
fldl
idivb
and
mov
mov
mov
dec
fildll
add
jmp
cmp
movsb
fdivs
adc
stc
pushf
addr16
aad
addl
aam
mov
mov
xchg
cs
dec
test
fmuls
mov
push
xchg
cmp
sub
in
dec
imull
fdivs
out
sbb
fisubl
in
dec
xchg
sti
mov
btc
mov
js
mov
xchg
xor
imul
js
dec
pusha
arpl
mov
sbb
test
idivl
mov
mov
aam
jne
mov
and
inc
mov
call
repz
jmp
push
gs
adc
rolb
jbe
mov
out
xchg
call
call
fwait
jl
leave
lret
and
dec
call
sub
test
cmp
mov
movsl
xor
shlb
dec
rorl
inc
sub
out
pop
rcrb
sbb
lods
mov
cld
insl
test
sbb
dec
in
leave
add
xor
insl
add
mov
ss
in
xchg
mov
int3
inc
cmpsb
and
in
xorb
push
fisttps
sub
jle
push
maskmovq
notl
jle
jecxz
aam
push
cli
sbbb
int
fwait
pop
push
ljmp
sub
lcall
xor
sbbl
sub
mov
pop
sarb
insb
in
lret
in
dec
jl
pop
dec
mov
cs
xor
sbb
dec
cli
gs
mov
xlat
adc
in
mov
inc
loop
mov
das
repnz
loope
cmp
jb
or
lret
in
fdivrl
out
and
xchg
mov
push
rorb
and
cmp
int3
roll
in
rclb
addr16
jle
jns
mov
jo
mov
cmp
xchg
xchg
call
inc
in
aaa
pop
mov
inc
adc
aad
push
xor
lret
inc
popa
pusha
jae
fmull
out
and
push
pop
int3
xor
mov
jnp
cmp
stc
or
fcoml
sbb
inc
test
inc
cmp
loopne
mov
shrl
mov
cmpsb
rcll
shrl
das
add
jns
loop
inc
cmpsl
outsb
push
int
popf
mov
das
hlt
push
mov
dec
stos
sub
rclb
aam
fidivrs
push
push
pop
jecxz
hlt
cmpsb
and
jg
jmp
jecxz
in
movsb
xchg
cli
pop
mov
push
js
jb
push
mov
cmp
call
out
clc
stc
mov
cld
push
xor
enter
leave
and
jg
ret
and
jo
jns
or
ja
dec
cmpsb
mov
movb
dec
mov
and
movsl
into
lea
stc
movsb
lahf
push
add
sub
ret
test
push
lcall
inc
insb
push
mov
sbb
adc
movsb
jge
fiadds
sti
push
and
pop
mov
jo
cmp
sub
mov
cmp
push
in
xchg
lahf
mov
pop
iret
mov
insb
cmp
xchg
adc
jg
jle
mov
sub
lcall
mov
dec
sub
loopne
pop
idivb
push
fistpll
push
in
lret
cld
push
dec
jno
insl
and
nop
mov
fwait
mov
mov
pop
sbb
dec
out
mov
mov
pusha
xchg
mov
pop
push
mov
pushf
xor
je
adc
outsl
popf
lcall
mov
mov
jecxz
out
jno,pn
cmp
ror
jns
sbb
inc
sahf
jb
xchg
mov
dec
outsl
cmc
add
push
mov
fbstp
cmp
add
add
lcall
jg
rcrl
xor
mov
ret
jne
movsb
dec
xchg
push
sub
mov
iret
fs
ret
xor
mov
add
aad
repz
in
pop
incb
or
sub
xor
pop
xor
movsl
gs
and
push
inc
hlt
dec
shlb
add
jmp
stc
imul
adc
icebp
and
int
cwtl
add
ja
push
outsb
inc
inc
jbe
push
pop
in
jle
imul
cs
push
fistl
mov
add
roll
cltd
lock
aas
fimull
into
xor
aas
jae
out
imul
mov
mov
jp
testb
inc
mov
lahf
fbstp
rcrb
dec
ret
and
std
mov
ret
sahf
and
out
sub
pusha
inc
stc
mov
retw
gs
and
pop
cmp
mov
gs
divl
pop
cmp
jl
and
mov
mov
mov
xchg
mov
xor
mov
xor
test
aaa
xchg
imul
pop
sbbb
repz
sub
popa
sub
test
jns
ficoms
loop
rcll
jmp
mov
lret
mov
int
xchg
lock
mov
sub
ret
push
cmp
enter
loop
xchg
loope
and
cmp
in
add
lcall
stos
jg
xor
lock
pop
aas
xchg
aad
mov
mov
lock
or
mov
ljmp
insb
insb
adc
pop
cmp
outsl
add
xchg
jp
xor
fs
mov
pop
test
aas
sub
sahf
push
cli
mov
adc
sarl
sbb
mov
add
enter
mov
push
push
aam
or
fucomp
or
or
push
sbb
lretw
repz
fwait
xlat
inc
xorl
sub
jo
adc
stos
mov
push
xlat
test
mov
mov
adc
adc
andl
out
sub
addr16
dec
mov
adc
xchg
mov
leave
mov
sbb
scas
cmp
pusha
mov
jp
and
sbb
test
mov
xchg
pop
cmp
ffree
pushf
cli
shrl
sbb
iret
das
mov
inc
daa
and
inc
dec
in
mov
ret
cmp
mov
lret
sbb
daa
push
pop
insl
fidivrs
mov
sub
add
es
push
shlb
cmc
addr16
pop
mov
or
cmp
xchg
dec
popf
mov
ret
push
icebp
mov
mov
or
imull
retw
pushf
jb
nop
pop
cld
mov
jp
mov
xchg
and
or
and
push
xor
and
add
movsb
push
in
pop
les
add
jae,pn
insb
mov
aam
pop
in
or
out
test
fmuls
loope
xchg
or
pop
in
and
in
cltd
unpckhps
mov
mov
cmp
add
in
outsl
pop
inc
in
add
sti
add
mov
and
aas
add
pusha
bound
enter
add
scas
xchg
scas
rep
xor
xchg
pop
cmp
pop
lcall
sub
imul
in
jmp
fbld
xor
pop
inc
dec
pop
jp
mov
pop
fwait
rcll
mov
jb
lea
gs
cmp
or
scas
cmp
sub
mov
cs
out
nop
xorl
pop
push
adc
xor
fs
lret
pop
lret
pop
and
outsb
test
es
lea
call
adc
jmp
stos
xchg
popa
flds
sbb
movsb
and
adc
ret
mov
push
out
jp
outsl
cmpl
jp
jno
addl
in
jge
inc
inc
lea
fisttps
or
rcrl
sub
js
dec
or
mov
imul
ja
mov
jle
xchg
rclb
gs
mov
dec
lret
dec
ret
push
ret
outsl
push
iret
mov
and
push
pop
std
or
ret
and
in
orb
jl
out
ret
jae
push
shrb
shr
push
test
stc
adc
fisubl
out
pop
adc
mov
ficoml
repnz
popa
inc
xchg
mov
imul
into
add
in
cmc
add
dec
scas
pop
jnp
fidivl
sahf
pop
sub
add
sub
mov
pushf
mov
arpl
fucomip
sub
cmp
loope
push
outsl
push
mov
js
mov
int3
push
push
inc
lahf
add
mov
fst
cmpsb
adc
dec
sub
popf
sbb
push
das
scas
fwait
shrb
push
loopne
cmp
sub
mov
inc
and
jl
stos
push
out
out
ss
sub
or
fs
loopne
addr16
leave
cmp
pop
jecxz
dec
popl
push
aam
rcrl
mov
inc
arpl
sbb
jbe
sbb
pushf
mov
insl
jbe
mov
dec
sub
call
fs
data16
sbb
decb
daa
mov
scas
cmp
call
aam
lahf
mov
inc
orl
aad
cwtl
shll
icebp
jno
fs
les
lods
jmp
in
mov
xor
ror
push
adc
loop
push
jae
or
loope
push
jp
nop
sbb
mov
fs
pop
jg
xchg
pop
fbld
outsb
sbb
mov
lods
loope
ds
pop
xlat
repnz
stc
sbb
ja
or
nop
outsb
jno
push
bound
dec
orl
into
mov
dec
add
out
dec
lret
dec
popf
sbb
out
inc
add
arpl
and
addb
aam
cld
arpl
sahf
push
imul
in
cli
mov
aam
pop
lods
push
testb
push
fdivp
and
cmp
dec
sbb
stc
pusha
pop
push
shlb
test
adc
pop
stos
idivl
and
std
add
xchg
addl
push
loope
mov
jne
add
inc
daa
fmull
jmp
sbb
test
dec
repnz
in
pop
pop
cltd
sbb
outsb
jae
mov
sub
sbb
xchg
cmovnp
adc
cmp
mov
ds
or
sbb
and
and
std
xchg
and
sahf
sub
add
xchg
pop
jl
lods
pop
adc
cmp
cmp
mov
sbb
movsl
call
call
sbb
mov
pusha
mov
push
insl
add
adc
cmp
cltd
pusha
jle
sub
dec
pop
xor
adc
decl
imul
in
incb
cmp
in
test
xchg
in
mov
in
and
adc
sub
loopne
mov
lods
test
stos
test
rcrb
push
xchg
fwait
aad
push
daa
xchg
mov
mov
jecxz
movb
call
sti
aaa
clc
arpl
lods
stos
mov
rcrb
sbb
or
pushfw
add
faddl
lahf
fisubs
call
aam
jp
in
mov
pop
arpl
xchg
insb
push
and
outsb
cmpb
mov
cmpsb
dec
mov
mov
jmp
jno
out
rorb
and
xchg
sub
arpl
cmpsb
int
aam
sub
jns
pop
xchg
je
sbb
lcall
jge
push
sbb
sbb
aaa
jg
outsl
sub
and
aad
xlat
into
jb
insb
and
xor
lock
cwtl
and
push
adc
lret
pop
int
fdivrs
mov
sub
mov
lock
shrl
insl
mov
sub
sti
rolb
lds
rolb
mov
push
xchg
dec
or
test
cmpsl
adc
adc
movsl
cmc
aas
xor
fsubs
int3
mov
pop
sti
ret
ljmp
clc
lds
insb
xchg
and
or
add
xor
mov
sub
push
mov
dec
xor
out
lea
or
adc
pop
xchg
pusha
sbb
cmp
dec
jmp
cmp
pop
in
push
nop
or
imul
frstor
addl
sar
aam
imul
aam
jp
mov
jecxz
into
mov
outsb
sub
sbb
cmp
daa
shl
imul
testl
mov
add
adc
mov
cmpsl
mov
ficoml
add
movsb
mov
cli
pop
mov
lods
mov
mov
clc
cwtl
inc
xchg
push
mov
roll
add
addl
roll
aaa
xchg
ret
inc
fcmovnb
into
mov
pop
popa
clc
push
mov
scas
sub
sub
jbe
cmc
enter
movsb
push
xchg
clc
jae
into
sbb
enter
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
imul
mov
mov
xor
jmp
mov
out
fwait
push
xor
je
lods
or
sahf
jnp
movsl
in
jmp
fisttpl
lods
sub
and
aam
sub
and
faddp
dec
aaa
lods
push
jle
pop
pusha
xchg
test
mov
fs
xchg
sbb
jg
xor
out
lahf
pushf
scas
shrb
lret
imul
jbe
or
ror
gs
push
xchg
ja
xor
pushf
sub
sub
xor
or
cmp
sbb
xor
in
jl
mov
sub
add
dec
enter
in
or
repz
adc
loop
pop
mov
sub
cmp
adc
cs
sub
ss
mov
pushf
or
repz
sub
mov
movsl
jmp
in
xor
inc
and
push
movsb
jl
int3
ret
insb
mov
inc
mov
fnsetpm(287
adc
inc
push
xadd
subb
dec
lcall
push
pop
ljmp
adc
pop
shrb
inc
mov
sub
mov
dec
cmp
cwtl
cli
sub
mov
push
cmp
push
mov
imul
cmp
repz
sti
mov
mov
sahf
das
in
xor
xor
outsl
std
lcall
lds
insb
xor
movsl
mov
and
push
lock
push
jge
mov
bound
xchg
adc
rcrl
loop
sbb
add
popa
mov
imul
and
dec
sub
adc
pop
xor
xchg
mov
pop
or
rcrl
stc
outsb
jecxz
inc
cli
loopne
iret
shl
stc
jg
mov
mov
imul
negl
lea
ret
and
mov
lret
popf
jns
in
aas
dec
lahf
in
inc
mov
negb
arpl
pop
daa
sahf
popf
mov
mov
movsb
pusha
popf
pop
shrb
clc
fwait
daa
mov
push
cmp
mov
push
or
sti
or
lea
add
orl
or
dec
or
popa
aas
and
jne
dec
out
mov
xchg
mov
mov
inc
test
in
popa
pop
orl
cmc
lret
push
and
or
xchg
mov
inc
enter
mulb
cmp
cmc
es
lock
test
cli
stc
jmp
xor
push
or
jl
int
imull
jno
and
mov
and
lock
cs
outsl
insw
push
jl
pop
xchg
xor
cmp
push
pop
stos
and
sub
stos
sbb
pop
push
sbb
stc
test
xlat
cli
ficomps
adc
xchg
mov
fisubrl
or
and
ret
aad
cwtl
outsl
inc
jp
add
jo
push
outsl
mov
loope
or
cwtl
sar
inc
xchg
lret
mov
inc
cmpl
pcmpeqd
stos
fimull
jle
fdivp
iret
sbb
push
into
movsb
bound
sub
ret
dec
adc
lods
pop
test
in
lds
mov
std
lods
mov
dec
inc
clc
mov
pop
mov
mov
imul
inc
xchg
jle
test
jmp
sub
adc
mov
enter
das
push
sbb
jmp
mull
lret
and
shld
xchg
pop
addr16
roll
mov
xchg
lea
sub
imul
inc
pop
push
add
inc
mov
jae
outsl
shl
mov
xchg
in
sub
lods
adc
movsl
push
pushf
cs
inc
push
pop
dec
xor
loopne
push
mov
js
lock
dec
fs
std
pop
leave
xor
dec
insb
test
loope
push
add
mov
mov
sbb
iret
mov
xchg
pop
adc
popa
out
cmp
mov
in
xor
stc
pop
es
fisubrl
shrb
ss
cli
jo
popa
and
add
adcb
cmc
mov
scas
cli
fisubrs
in
push
mov
pop
and
sub
and
ja
mov
mov
int3
xchg
stc
insl
icebp
loop
lcall
add
into
add
out
gs
repz
fstpt
and
ds
adc
hlt
shlb
iret
cs
lods
aaa
fwait
and
arpl
cwtl
and
push
das
push
scas
adc
xor
sarl
ljmp
and
hlt
cmp
adc
xchg
pop
lods
mov
pop
jnp
lcall
movsl
lret
xor
sub
in
adcl
cltd
ljmp
addr16
xchg
xchg
xchg
ficoms
insl
imul
fcmove
orb
enter
or
cmp
or
jne
lods
cs
xor
ret
subb
xchg
orl
insb
push
ds
pop
mov
decl
xlat
ja
imul
int
insb
push
inc
cmpsb
mov
int
sar
sbb
outsl
sbb
xor
loope
aas
push
cs
push
jge
sahf
push
pop
cmp
adc
movsb
in
mov
out
or
hlt
push
test
inc
dec
ja
jle
mov
jge
dec
lods
test
fsubs
pop
in
divb
pop
js
sub
jecxz
add
sarb
push
nop
fisubs
mov
lea
notl
inc
pop
mov
lods
inc
insb
test
adc
notb
dec
pop
jecxz
fdivl
cwtl
cmp
fidivrs
inc
dec
out
adc
leave
xchg
mov
sub
jno
call
test
push
sbb
ja
xor
push
sar
jle
aas
mov
lods
repnz
adc
jp
bound
mov
fucomi
pop
fwait
aad
sub
adc
add
mov
adc
movsl
scas
sub
movsb
add
andl
cmpsl
pop
fnsave
push
push
cmp
sarl
fidivrs
xchg
lods
push
fdivrs
adc
les
leave
mov
xchg
cmp
pop
mov
imul
xor
sbb
dec
push
sub
jge
push
xchg
mov
ret
leave
mov
popf
fldcw
adc
xchg
std
setl
pop
fldenv
ret
adc
incl
cwtl
mov
filds
dec
mov
adc
push
leave
lret
push
movsb
movsl
dec
stos
repnz
popf
popf
cmp
adc
std
clc
xor
push
int3
popa
sbb
inc
cmp
adc
popf
std
out
adc
mov
insb
xchg
push
dec
imul
jb
out
sarl
std
push
pusha
sub
or
mov
cli
and
pop
xor
mov
or
push
sub
insb
iret
push
es
adc
pop
outsl
mov
aas
lods
pop
mov
aad
push
xchg
lods
es
inc
test
repnz
addr16
inc
dec
inc
push
rcrb
adc
jae
push
int3
dec
xor
stos
fldenv
jmp
out
adc
pop
daa
scas
adc
mov
fstps
dec
push
loop
out
adc
pop
loope
mov
lahf
lock
or
sub
shll
scas
and
testb
mov
xor
stos
xor
push
pop
repz
mov
daa
imul
movsb
add
and
stos
enter
mov
popa
jmp
adc
or
in
mov
sub
or
pop
cld
push
test
jbe
lock
mov
jno
pop
addr16
popf
and
pop
loope
ljmp
mov
push
pop
loope
repnz
jns
mov
adcw
lret
fcompl
imul
jge
push
add
in
fistpll
push
mov
ja
sbb
push
clc
or
xor
adc
notb
pop
add
inc
sbbb
mov
test
gs
addr16
sahf
mov
mov
push
in
mov
out
sub
dec
xchg
js
and
nop
cmp
mov
icebp
iret
leave
xchg
dec
jns
push
popf
sub
pop
adc
sub
and
inc
push
mov
xchg
xchg
in
jo
cltd
mov
sbb
cmc
fstl
sti
pop
movsb
scas
add
pop
jae
pop
add
cli
enter
sub
or
dec
mov
mov
sbb
adc
push
dec
loope
push
sbb
xchg
xchg
mov
pop
jbe
add
xchg
adc
jg
xor
sbb
push
fadds
incl
cli
pop
jne
jmp
ss
xchg
testb
inc
sub
inc
push
pop
mov
or
jae
xlat
mov
hlt
lods
xor
inc
ret
cwtl
test
xchg
jp
clc
adc
notb
mov
out
dec
test
dec
lret
push
imul
or
lods
fildl
imul
inc
and
cwtl
adcl
sub
aaa
push
cmpsb
int3
or
insl
xchg
xorl
das
jp
pop
and
addr16
mov
pop
imul
jae
fdivrl
jbe
jmp
jo
cmp
out
scas
pop
mov
push
daa
inc
adc
fadds
lcall
cmc
sbb
inc
xchg
imul
or
push
jo
mov
rcrb
cwtl
enter
push
aad
vminsd
mov
cli
testb
imul
mov
andl
or
ret
negl
adc
xchg
adc
imul
outsb
loopne
xchg
std
mov
jne
adc
lods
or
jmp
xor
sbb
pop
xor
pop
or
inc
stc
xchg
inc
test
inc
mov
adc
repz
xor
add
outsl
fnstsw
cmp
mov
gs
sti
movsl
in
or
mov
mov
scas
outsl
sub
cmp
xchg
fildl
cmc
push
jl
add
mul
push
scas
loop
mov
leave
pop
test
in
insl
lret
xchg
pop
shr
hlt
into
mov
aas
loopne
inc
lcall
imul
pop
lea
or
cld
nop
inc
jle
xor
jo
adc
pusha
mov
popf
jg
out
scas
inc
push
dec
xchg
push
xor
mov
add
mov
repnz
scas
jle
cmp
add
movb
mov
push
mov
adcb
or
sbb
ja
sbb
xlat
pop
cmpsb
jae
push
push
out
jle
jp
std
cmpb
lcall
or
xchg
pop
dec
dec
push
lods
xchg
xchg
mov
mov
frstor
lods
dec
xchg
out
sub
pop
adc
sbb
sbb
xchg
shll
push
xchg
push
bnd
je
cli
push
in
mov
xchg
shrb
shlb
xchg
pop
mov
add
jmp
sbb
cltd
cmpsl
xor
add
outsb
xor
or
cmpsb
mov
pusha
xor
adc
xchg
cld
jmp
pop
xchg
in
clc
popf
cwtl
gs
popa
mov
lods
inc
jmp
adc
jo
dec
xchg
cltd
jno
jns
jl
repz
pop
add
push
movsb
in
sub
xor
gs
hlt
bound
or
or
push
in
test
add
xchg
jge
aas
sub
or
negl
pop
or
sbb
shrb
addr16
push
ds
out
xchg
idivl
xor
xchg
cmp
insb
sub
sbb
cld
ljmp
lods
insl
add
add
in
mov
das
test
les
call
lcall
jne
je
sub
fisttpll
jns
inc
mov
les
hlt
icebp
fldenv
mull
cld
sub
loop
mov
in
mov
aam
lret
aad
and
push
mov
mov
adc
enter
add
stos
js
adc
repz
xchg
pop
push
insb
loopne
pop
mov
scas
fwait
sti
xor
cmpsb
add
dec
push
cmp
dec
pop
imul
xor
repnz
mov
xlat
call
dec
stos
test
sub
dec
fldl
test
popa
mov
mov
je
inc
mov
frstor
lock
lcall
aas
jmp
fidivrl
add
lds
mov
out
sbb
sbb
inc
stos
cs
or
dec
repnz
es
mov
sbb
pop
cmp
in
or
fs
mov
inc
stos
adc
mov
mov
xor
push
jne
stc
mov
mov
je
int3
les
push
push
push
test
imul
mov
or
lcall
mov
cs
arpl
pop
shrl
fisttpl
mov
or
test
mulb
mov
pop
push
jns
int
insb
and
and
in
inc
mov
jmp
movsb
int
int
mov
or
mov
or
adc
add
ss
repz
divl
daa
xor
or
xorb
mov
jnp
out
add
pop
jge
xor
pop
xchg
dec
mov
xchg
dec
jmp
dec
jl
cmpsb
roll
pop
jae
ret
inc
scas
and
int
xchg
fcomps
lds
dec
aas
decl
add
add
add
sub
push
les
or
mov
imul
jg
add
cmpsb
rclb
jbe
inc
jecxz
fwait
add
ret
jb
cltd
add
stos
ljmp
mov
xchg
sarl
add
sbb
fnstcw
push
outsb
dec
cmp
les
in
push
cmc
xchg
push
test
xor
repnz
sti
in
xor
pop
xor
aam
popf
jp
push
ja
push
scas
leave
jmp
push
ret
inc
xor
mov
mov
mov
shrb
lods
pusha
mov
pop
ljmp
fimull
dec
ret
and
stos
inc
out
dec
cltd
jl
jb
popa
lcall
add
test
jl
aam
add
pop
rcrl
or
ljmp
lock
lret
push
insl
addr16
push
pop
jl
ss
in
jmp
imul
mov
imul
and
test
cmp
hlt
test
mov
lods
negb
xor
js
push
sbb
and
pusha
in
stos
hlt
loope
out
pusha
sbb
out
mov
xchg
add
cmpsb
cld
call
sbb
jcxz
jl
jge
scas
dec
popa
add
mov
lahf
dec
cmp
cmp
mov
pop
sbb
mov
pop
inc
in
lret
ss
xchg
pop
loop
stos
push
repz
xchg
cld
push
fmulp
lods
jle
mov
lods
mov
xchg
add
dec
int
cmp
ret
das
push
jo
mov
mov
imull
outsb
test
aas
cmpsl
xor
pushf
add
cmpl
cmp
leave
repz
mov
outsb
and
or
push
sub
fwait
movsb
stos
mov
inc
sbbb
sbb
lea
xchg
jns
or
jg
cmc
jb
jl
dec
jne
enter
push
fsts
adc
stos
out
and
pop
push
cltd
daa
loopne
jp
les
pusha
mov
sbb
sbb
xor
pop
lret
sar
hlt
in
xchg
dec
outsl
sub
movsb
in
jbe
jmp
mov
lret
outsb
imul
sbb
std
push
jne
dec
mov
loopne
dec
loop
aas
int
stos
scas
aad
pushf
inc
or
les
into
inc
push
pop
pop
jo
jg
push
repz
dec
int3
xor
add
xchg
lods
push
lcall
push
or
sbb
add
loopne
es
scas
push
push
sahf
add
mov
cmp
inc
inc
daa
mov
mov
pop
push
sbb
out
xor
xchg
or
mov
mov
xchg
inc
rcr
xchg
frstpm(287
jns
or
jno
cld
push
inc
popf
in
popf
and
pushf
mov
lret
mov
and
shlb
arpl
rcr
cmp
mov
pusha
sbb
rep
fwait
rcll
and
insb
dec
popa
ds
leave
rol
orb
sub
ret
jle
ds
test
aas
xor
nop
or
lea
sub
dec
jmp
lds
mov
movsl
xchg
lcall
addr16
push
inc
rorl
ffree
mov
ja
movsb
push
rol
cli
mov
cmp
pop
les
dec
push
jb
js
mov
sbb
out
xchg
lret
jne
and
push
inc
jp
pop
push
lods
ret
adc
mov
lret
adc
jnp
pop
dec
js
jno
lock
arpl
pop
sbb
fcoml
pop
data16
inc
mov
in
jns
sub
and
scas
fs
lods
add
mov
sbb
mov
or
nop
adc
test
test
fbld
and
push
and
popa
movsl
cmp
aam
add
cs
pop
xor
int
jo
jmp
nop
mov
push
std
and
adc
inc
xchg
mov
mov
pop
cmpsl
mov
push
jno
aas
lahf
xchg
js
jg
fidivl
jb
add
orl
fcmove
arpl
pop
ret
ret
ret
jecxz
lret
dec
pop
data16
shlb
pop
jno
pop
adc
mov
jns
xor
in
jno
aas
sbb
xchg
test
dec
add
adc
pop
cmp
std
aad
dec
arpl
jns
insl
loopne
xor
add
jecxz
cltd
aam
dec
sbb
pop
mov
jl
scas
xchg
xlat
lret
scas
in
stc
lds
xor
pop
xchg
jnp
cli
xchg
mov
dec
cmp
adc
sbb
fwait
push
lds
test
mov
xor
push
xchg
mov
cld
nop
gs
ret
int3
cmp
xor
in
fcompl
inc
sub
loopne
inc
inc
mov
inc
ds
add
dec
inc
xor
les
fs
mov
movsb
loop
sub
dec
out
ljmp
cmp
test
aaa
clc
dec
jno
push
fidivrl
pusha
clc
sub
lods
clc
out
pop
xchg
mov
cs
ret
stos
outsb
bound
sarb
roll
aam
mov
lods
inc
and
shlb
or
popf
jecxz
mov
roll
ljmp
cmp
dec
seto
lret
or
repz
sbb
ret
mov
push
sub
xor
mov
pop
daa
xor
movsb
in
jbe
test
push
mov
mov
out
nop
sbb
ljmpw
icebp
or
jno
out
sbb
cmc
xchg
sbb
jmp
fildl
xlat
and
cmp
mov
or
jg
pop
sub
mov
xor
ret
mov
pop
imul
xlat
bts
cmp
pop
cmp
dec
fisubrs
xchg
fs
jle
mov
or
push
dec
in
xor
sti
xchg
imul
std
and
pop
jmp
jo
outsl
fucom
sahf
jp
fwait
push
js
out
lret
push
aas
mov
sbb
jnp
ficomps
pop
ret
sbbb
lds
loope
xor
jg
sbb
jl
xor
push
in
lods
out
insl
lret
adc
sbb
pop
jne
jo
push
sub
push
fadd
icebp
pop
sar
cmpsb
hlt
repnz
add
icebp
outsl
popf
or
adc
gs
movsl
data16
and
xor
das
bound
enter
bnd
ret
int3
xchg
loopne
fs
fcoml
and
and
add
int
out
in
imul
sub
xchg
mov
cmp
lds
pop
mov
ljmp
jecxz
cmc
adc
scas
mov
lea
or
pop
sbb
pop
or
add
lock
gs
or
fmul
sbb
xor
stc
sti
popf
shll
loope
pop
pop
pop
jp
stc
decl
out
xor
cmc
addl
fldl
mov
arpl
mov
pop
xor
mov
mov
fcmovu
les
xchg
jnp
inc
inc
js
fists
pop
mov
stos
jb
or
outsb
sbb
push
lea
cmp
adc
jmp
mov
mov
and
adc
imul
in
sbb
mov
mov
repz
test
adc
jo
pop
pop
push
lds
arpl
and
lea
aam
add
jl
sbb
sbb
outsb
adc
inc
fists
pushf
outsb
clc
adc
scas
pop
mov
mov
sub
sbb
repz
add
in
or
stos
clc
cmp
xchg
call
divb
pop
adc
xor
out
push
pop
or
push
int
outsl
mov
and
icebp
adc
mov
xchg
bound
imul
add
pusha
sar
sarb
sbb
pop
sbb
cmp
inc
push
sti
push
popa
mov
aas
mov
mov
mov
cmpsl
pushf
jle
nop
shl
pushf
sub
neg
lcall
jnp
mov
test
daa
xchg
das
push
ss
push
jae
inc
sub
addr16
cs
ss
jge
adc
pusha
mov
xor
pop
outsb
push
ljmp
cs
mov
mov
fcomps
add
imul
cmc
inc
mov
sbb
push
cmp
add
mov
cmc
jl
pop
or
dec
and
dec
mov
fwait
cmp
adc
shrl
nop
ffreep
jg
test
jb
or
sub
xchg
jne
aas
lds
jo
scas
add
nop
jmp
mov
addb
and
inc
in
stos
pop
fistl
jg
jb
mov
jle
ret
lods
int3
imul
adc
jp
clc
jl
add
in
mov
call
ds
test
add
mov
sbb
ja
cmp
add
arpl
xor
add
adc
sub
fisubs
fimull
ret
inc
and
jnp
aam
mov
jo
mov
jbe
fldl
iret
outsl
xor
aam
or
jge
mov
xlat
enter
mov
pushf
sub
movsl
push
popf
pop
loope
jp
jmp
loop
popf
mov
aam
scas
pop
xor
xchg
sbb
mov
or
inc
std
and
cmc
mov
mov
mov
adc
sbb
mov
ds
lock
adc
mov
pushf
sub
daa
js
lods
or
pop
dec
cmpsb
xchg
shr
push
in
lea
in
xor
sahf
mov
sbb
shufps
inc
and
les
mov
mov
ret
mov
sahf
inc
call
cli
or
out
push
inc
data16
push
out
push
cld
add
pop
popa
test
add
ja
adc
les
xor
hlt
cmp
pushf
hlt
xchg
aad
pop
sarl
jae
or
fildl
pop
cmp
mov
fwait
aam
xchg
sbb
pop
xchg
cwtl
in
inc
leave
scas
xor
in
loope
push
mov
jmp
push
xor
ja
and
dec
or
in
cs
cmpsb
adc
ljmp
cld
testb
pushf
jp
jne
adc
pushf
push
xor
lods
lds
movsb
pop
popa
xchg
aad
test
cmpsb
into
data16
arpl
xchg
aaa
in
xchg
push
lcall
sbb
add
mov
mov
test
and
cwtl
sub
push
repz
loopne
fcmovb
je
rcr
add
pop
push
movsb
in
aaa
movsl
add
and
dec
sahf
add
mulb
aad
push
adc
lds
sbb
or
repnz
add
xor
jecxz
shrb
sbb
leave
add
rorl
lock
out
inc
add
jmp
and
ds
loopne
fbld
pop
add
dec
mov
push
xor
mov
or
dec
mov
repz
pop
xor
pop
xchg
test
or
jge
sbb
jns
and
sbb
je
aaa
movsb
or
les
aas
out
int
es
testb
cmc
mov
xchg
mov
cmp
pop
dec
jle
test
inc
stos
enter
punpckhbw
loope
call
lods
push
push
pop
jnp
push
sbb
into
imul
adc
movsb
repz
nop
sti
scas
push
shrb
out
aas
sbb
cmc
and
jbe
das
pmaxub
popf
cli
push
setnp
or
shll
or
and
jg
adc
cmp
xchg
inc
in
mov
cmp
mov
pop
jne
test
data16
jecxz
arpl
inc
adc
sbb
stc
cltd
inc
push
push
frstor
or
pushf
jne
push
inc
jns
cmp
lahf
test
scas
lods
inc
fidivrs
mov
pop
dec
aas
stc
dec
dec
test
jg
and
rclb
arpl
push
xchg
sbb
sbb
mov
test
dec
inc
loopne
orb
xchg
roll
jo
pop
pop
aas
out
mov
pop
mov
dec
push
sub
out
inc
jae
cs
xor
inc
jb
jns
aam
addr16
sbb
cs
iret
push
aas
cmp
les
mov
jge,pt
sub
aad
int3
cmp
mov
movsb
inc
sarb
xchg
push
dec
gs
das
popa
cmp
push
mov
sub
addr16
negl
inc
insl
pop
pop
fsubs
in
push
xlat
mov
jmp
lret
sbb
test
movsl
push
cmp
pop
sub
push
into
adcl
bound
sub
xchg
stos
imul
pop
aad
add
jg
lds
cwtl
pop
sbb
and
js
mov
insb
mov
mov
sti
out
fs
jge
mov
and
flds
std
int3
cmpsb
aam
mov
test
stos
enter
xchg
mov
xor
push
testb
sub
cmp
cld
and
pop
adc
pop
dec
mov
pop
or
dec
dec
jbe
push
leave
rcrl
mov
ja
test
push
shlb
ret
sti
out
aaa
loopne
xchg
jno
mov
nop
imul
xchg
push
mulb
xor
sbb
inc
rorl
out
and
xchg
imul
test
repnz
mov
push
mov
pop
pop
out
sbb
scas
cmp
mov
dec
cltd
xor
add
stc
mov
dec
sbb
mov
cwtl
fs
xor
jle
inc
test
sarb
or
sbb
pop
cmp
gs
repz
sub
jno
xor
jle
push
mull
dec
push
leave
sbb
jl
icebp
mov
into
fsubr
sbb
arpl
stos
mov
lea
loopne
and
int3
adc
fldenv
shrl
imul
mov
jmp
xchg
sbb
cmp
ffreep
je
sbb
ja
ljmp
mov
mov
add
jb
adc
xlat
add
or
mov
cwtl
push
or
mov
jbe
xchg
inc
push
div
mov
pop
inc
pushf
pop
sbb
pop
and
push
and
sbb
and
jecxz
lods
jae
and
mov
jp
inc
or
sbb
and
mov
aaa
iret
repz
cmp
pop
jmp
movsl
cltd
push
push
aas
pop
mov
or
addr16
dec
push
pop
add
mov
sub
das
in
clc
cli
mov
cltd
mov
jb
and
jbe
mov
pop
adc
arpl
lods
lret
outsl
leave
mov
push
jl
add
and
add
shrb
xchg
jb
dec
repnz
mov
es
imul
push
inc
push
dec
lds
inc
push
mov
and
fld
int3
mov
gs
hlt
hlt
fstl
cmp
dec
ss
add
mov
imul
xchg
sub
in
sub
or
xchg
push
lods
shl
in
pop
sub
sti
and
mull
dec
sub
fcomi
mov
rorl
ljmp
add
into
rorl
sub
cmpsl
aam
mov
dec
and
lods
icebp
mov
aad
shlb
les
dec
push
sbbl
jne
out
jbe
in
repnz
shlb
aam
inc
and
aaa
adc
cmp
js
test
mov
and
out
sub
int
push
and
push
mov
lret
push
mov
bound
xlat
inc
mov
lahf
dec
and
mov
dec
int3
out
xor
push
lock
out
push
jmp
lcall
lods
and
and
sub
lds
lret
jl
cmpsl
outsb
sbb
mov
mov
push
stos
nop
pop
lret
dec
dec
fs
or
in
sarb
or
mov
out
addl
ja
jae
scas
jbe
pop
mov
xchg
pop
mov
out
mov
mov
jg
sbb
testb
cmp
rcrl
outsl
jmp
scas
ljmp
mov
ret
add
mov
jno
imul
or
lock
xor
sub
hlt
and
jge
shll
insl
dec
ja
fdivrl
push
xchg
clc
push
aam
push
rolb
pop
fnstenv
jo
adc
add
pop
iret
mov
pop
mov
aaa
mov
cltd
sbb
jno
fs
fidivrl
sub
ja
push
and
push
inc
xchg
xor
cmp
cmp
daa
jo
dec
pop
and
iret
jge
in
pop
inc
mov
loope
cmp
inc
or
mov
inc
xchg
in
repnz
xor
xor
icebp
addl
mov
sbb
jo
imul
xlat
enter
sub
cli
mov
cmpsl
aam
inc
or
les
into
pop
mov
call
jae
inc
movsb
jecxz
fmull
pop
into
shl
xor
mov
scas
in
push
lcall
das
xor
jno
or
xor
dec
xchg
test
je
inc
pop
inc
xchg
mov
lds
push
xchg
mov
sub
int
inc
fs
ss
stos
push
pop
push
push
cmp
push
in
js
sbb
add
xor
mov
dec
subl
adc
sub
xchg
das
outsl
out
lahf
add
or
and
add
cli
push
negb
test
fadds
repz
and
movsb
lds
popa
nop
loope
popa
push
jp
push
add
jns
or
push
push
or
cmpb
pop
xor
fnstcw
inc
cltd
xor
cli
or
mov
roll
jg
out
inc
xchg
sub
loope
fidivrs
adc
divb
sub
outsb
sub
in
and
ljmp
jbe
fwait
rclb
mov
bound
sbb
imul
inc
shlb
fnstcw
xor
mov
mov
lahf
adc
mov
pinsrw
pusha
mov
movsb
pop
dec
lret
adc
jb
add
enter
mov
cld
xor
add
mov
mov
add
jmp
iret
jmp
sub
cli
in
xchg
sbb
or
mov
das
sub
sahf
jnp
sbb
pop
cwtl
nop
sbb
and
jp
and
jmp
or
or
cmp
mov
stos
adc
or
or
outsl
mov
lods
mov
mov
or
ja
and
ss
xchg
test
repz
sbb
shrb
enter
out
adc
js
cli
and
loope
in
pushf
add
insl
dec
mov
xchg
insl
and
jle
out
addb
int3
je
call
xchg
or
dec
add
fimull
xchg
enter
subl
sbb
add
inc
test
sahf
jno
inc
in
xorl
mov
pop
lea
out
paddusb
cmpsb
or
or
inc
hlt
cmp
inc
aas
push
or
adc
hlt
mov
lret
pop
fnstcw
lods
sub
cmp
loope
adc
mov
arpl
cmp
mov
mov
adc
cld
jae
and
sarb
icebp
push
daa
hlt
aaa
mov
xchg
xchg
dec
xchg
pop
mov
aas
fadds
imul
sub
dec
push
push
out
cmp
push
lret
stos
loop
lds
adc
pop
ret
loope
test
sar
mov
lret
sub
mov
in
mov
mov
stos
adc
inc
in
lods
enter
pop
mov
jge
push
push
inc
nop
sbb
notl
or
or
and
mov
je
mul
cmp
jle
out
mov
scas
in
test
mov
pop
fimuls
incb
out
mov
mov
leave
popa
cmp
notb
xchg
fdivrs
subl
push
cmp
inc
jne
addb
test
fdiv
arpl
inc
sub
add
jo
js
fnstcw
ds
int
cwtl
mov
call
in
mov
sbb
rcll
out
pop
adc
sbb
jnp
mov
jnp
cli
or
lret
and
xchg
pop
arpl
sarb
adc
xor
mov
pop
cmpsb
stc
adc
in
cs
fdivl
and
sub
int3
pop
nop
addb
ljmp
hlt
push
push
jnp
lret
mov
xchg
sarb
popa
leave
xchg
add
cmp
mov
fsts
aaa
in
dec
cs
dec
lret
enter
mov
add
inc
std
add
subb
dec
clc
mov
js
call
out
xchg
mov
cli
stos
mov
mov
into
gs
cmp
dec
lock
insl
pop
jp
cmc
mov
xor
sub
sub
mov
push
fwait
mov
icebp
repz
and
scas
or
jnp
sbb
das
inc
shlb
sbbl
or
test
repz
leave
int3
in
das
mov
dec
jmp
scas
mov
jl
into
xor
ljmp
mov
jno
push
xchg
outsl
pop
lods
imul
insl
lock
inc
or
and
in
sbb
rolb
cvttps2pi
inc
xbegin
jns
cwtl
enter
jmp
lock
pop
cmp
clc
repnz
or
out
sarb
jo
push
xlat
inc
cmp
and
pop
aad
mov
fucomp
xchg
iret
pushf
repnz
jmp
aaa
jns
gs
pop
imul
push
stos
dec
jbe
test
jb
js,pt
pop
inc
in
jg
inc
or
dec
outsb
fs
ja
aam
and
insl
push
adc
std
pushf
into
clc
mov
enter
xlat
in
shl
sar
cmc
stos
test
sub
jno
gs
lock
mov
mov
xchg
jg
pop
jnp
mov
outsl
add
stos
es
inc
xchg
mov
sub
and
sbb
in
sbb
lods
sub
fdivp
gs
push
lock
iret
jb
test
clc
js
int
mov
addr16
pop
subl
lret
pushl
xor
xor
ljmp
sub
fsubl
aaa
mov
xor
inc
gs
lahf
movsb
ficoml
sub
pushf
outsb
dec
testb
in
int3
push
xchg
and
inc
add
xor
cmc
lahf
cmc
mov
subl
and
xchg
jp
sub
sub
sbb
inc
xor
bound
out
stos
repnz
enter
ret
push
flds
lods
push
mov
cmpsb
stos
aaa
aad
jnp
sahf
aad
jne
sub
mov
xor
pop
mov
xchg
sub
dec
ds
and
ljmp
mov
insb
mov
mov
lds
jae
jno
mov
iret
mov
aad
loope
xchg
cwtl
mov
cs
mov
andb
ja
gs
xor
les
lds
cmp
lods
mov
jl
popa
stos
ret
dec
push
sub
push
jmp
test
fidivrs
loop
jnp
cmp
lret
rcr
mov
pop
mov
popf
push
aas
or
jmp
call
into
push
inc
mov
notl
ljmp
iret
repz
dec
fnsave
arpl
add
dec
stos
fs
pushaw
jns
mov
jb
mov
mov
pop
mov
xchg
jmp
dec
repnz
dec
xor
jle
inc
xchg
jl
int3
mov
xchg
mov
dec
sub
adc
loop
scas
push
iret
mov
addr16
sbb
push
aas
adc
push
rorb
adc
popa
pop
xchg
arpl
cs
xor
scas
sahf
repz
les
inc
ffree
sub
pop
test
pop
cmp
jbe
pop
jp
das
xchg
jmp
sbb
add
mov
cmp
movsb
lods
in
pop
jge
lds
dec
xor
sti
dec
inc
ret
mov
jmp
clc
out
enter
gs
pop
or
jmp
shll
pop
xor
inc
add
in
inc
mov
ljmp
mov
adc
daa
mov
insl
aad
scas
bound
pop
mov
sbb
sbb
push
xchg
fwait
jae
loope
out
mov
jl
inc
add
xchg
pop
leave
xor
enter
shrb
imul
jne
out
xchg
mov
js
repz
fisubrl
pop
xor
call
sbb
mov
fldenv
xchg
adc
fmuls
adc
xchg
popa
xchg
adc
sbb
dec
inc
dec
movb
add
dec
ljmp
xor
dec
xchg
jne
push
fcomip
in
jns
mov
pop
aas
mov
push
mov
dec
xchg
mov
into
add
ljmp
jge
popa
cld
push
stc
lods
mov
fdivrl
push
push
fiaddl
cmp
mov
not
lock
inc
cmpb
and
leave
in
dec
xchg
stc
cld
pop
mov
outsb
jecxz
lret
push
push
or
pop
cmc
sub
fucomp
adc
inc
aas
push
notb
stc
lods
mov
pop
push
cmp
sbb
in
mov
mov
jne
lds
adc
stc
dec
jle
dec
pop
imul
sbb
mov
push
push
push
xcrypt-ctr
cmpsl
pop
bound
and
cli
sub
jno
in
and
xchg
mov
lods
fs
or
push
aam
pop
mov
adc
mov
mov
sbb
xchg
stos
lods
out
adc
mov
addr16
or
fldt
xchg
mov
hlt
cmp
or
cld
cmp
ror
push
scas
ss
fisttpl
test
xchg
lods
mov
fs
popf
sub
dec
sbb
ljmp
jle
in
enter
lock
in
enter
sbb
xor
sbb
shll
sub
cmp
and
test
push
adc
dec
jo
push
inc
stos
lods
out
out
mov
lods
bnd
mov
xor
and
adc
outsl
and
movsl
or
insb
mov
bound
or
ja
clc
ja
adc
in
mov
mov
cwtl
dec
lcall
push
xchg
sub
das
aaa
pop
sub
lods
addr16
fs
stc
inc
enter
mov
cmp
add
jbe
sbb
cwtl
dec
push
mov
clc
rclb
jmp
push
ljmp
mov
push
adcb
add
sti
xor
jb
pop
inc
sub
sub
inc
sub
mov
testl
mov
outsb
addb
aad
int
jle
sub
or
and
pop
cwtl
adc
inc
mov
pop
sbb
pop
out
jecxz
pushf
cli
sub
ret
jg
xchg
rcrl
jmp
xchg
sbb
or
fistps
outsl
or
push
cmovle
orl
mov
pop
jo
push
xchg
lret
imul
dec
dec
mov
sub
push
cmp
sbb
pop
inc
repnz
jno
sbb
adc
jl
outsl
add
mov
adcb
sub
not
fdivr
and
les
mov
test
xlat
mov
data16
in
insl
push
and
xchg
ds
lcall
xor
shr
push
push
push
jmp
fwait
gs
in
pop
rorl
mov
mov
mov
xchg
cmp
popa
mov
scas
pop
movsl
ficoml
pop
cld
xchg
cld
pop
stos
sbb
pop
cli
test
je
pushf
sub
scas
test
or
mov
stc
mov
adc
in
mov
rorb
aam
cmp
into
mov
loopne
adc
shl
ds
sar
cmp
sbb
mov
movsl
mov
add
fbld
out
jecxz
xchg
mov
imul
int
mov
xchg
add
xor
cmpsl
xlat
cmp
aam
and
cmpsl
roll
xchg
and
ror
inc
add
icebp
jmp
outsb
adcb
lea
cmc
xor
jmp
icebp
cld
arpl
adc
lea
mov
dec
xor
aas
leave
stos
add
out
mov
mov
loopne
xor
sub
jge
int3
mov
jns
out
out
cmpsb
and
and
sbb
xor
inc
adc
lret
pop
jp
push
xlat
dec
in
sub
mov
bound
jae
or
sub
dec
dec
sub
adc
sti
das
xchg
in
push
fmulp
rcrl
jbe
icebp
imul
pop
adc
gs
inc
js
push
and
movsl
jp
pop
inc
jbe
sbb
js
mov
movb
mov
jns
xchg
mov
out
inc
jmp
std
jmp
push
mull
inc
rcll
rcrl
and
in
cmp
test
xchg
es
mov
jbe
push
mov
popf
sub
add
jl
in
mov
pop
and
loope
xor
sbbb
jne
push
test
in
push
fnstcw
push
shll
xor
clc
cmp
add
lds
das
cmp
je
mov
jns
and
xchg
pop
rcrb
test
add
orb
xorb
shlb
and
jecxz
test
mov
xchg
sub
movsb
add
pop
lret
in
pop
out
inc
and
insl
cmp
lods
lods
popa
cld
sbb
hlt
aam
movsb
daa
push
ds
mov
shlb
inc
out
das
adc
adc
movsb
insl
sub
adc
fists
add
fwait
cmc
adc
mov
aad
es
dec
pop
push
fcoms
add
rol
out
andl
dec
pmullw
js
add
loop
hlt
icebp
sub
psrad
cmp
ret
sub
jmp
lods
dec
pop
rcrb
mov
sub
iret
fidivl
push
lcall
dec
adc
jmp
and
inc
outsl
mov
in
jb
sbb
push
test
inc
movsb
scas
mov
push
fisttps
jnp
sbb
mov
mov
lea
icebp
iret
mov
xor
imul
push
jmp
popa
popf
jg
and
xchg
int3
add
pop
lret
push
lcall
out
push
inc
and
movsb
mov
adc
pop
jns
in
cmp
pushf
xor
int3
stc
insb
jmp
cwtl
in
cmp
adc
xorl
mov
or
cmc
xor
and
int3
xor
popf
movsl
pop
mov
cltd
xchg
ljmp
xor
inc
xor
cli
and
xchg
pop
ja
dec
loope
add
or
and
add
pop
xor
shlb
lods
in
inc
int
test
adc
mov
adc
add
sub
mov
add
jle
and
mov
xchg
sbb
xor
lret
ja
popf
jbe
into
xor
pushf
pop
test
fisttpl
push
xor
jns
pop
push
bound
and
xchg
in
testb
std
or
cltd
pop
test
out
mov
test
mov
pop
push
adc
int
mov
jnp
sub
out
pop
mov
mov
push
mov
pop
adc
sub
sbb
hlt
pop
dec
adc
fwait
jb
out
vpackssdw
xor
push
jbe
fmulp
sbb
jo
push
and
stos
cli
sbb
maxps
or
ja
cmpsb
add
in
rorb
sbb
dec
cmc
lods
dec
xor
sbb
out
inc
test
jl
pop
xor
sub
and
fisttpll
or
loop
stos
xor
iret
mov
fisubrl
popf
std
mov
ficompl
aad
and
int3
sbb
ficoml
into
bound
aas
cmp
sarl
jns
das
mov
adc
pop
pop
stos
and
push
inc
pop
push
gs
scas
mov
lret
mov
test
push
inc
inc
inc
xorb
in
mov
or
out
sbb
inc
jns
push
jnp
lods
mul
dec
mov
adc
inc
inc
xchg
aam
jbe
in
ljmp
testb
mov
cmpsb
dec
jnp
in
lsl
sarb
add
jo
in
lods
and
push
jle
lahf
out
xchg
inc
xorl
mov
jnp
jle
out
mov
imul
cltd
add
test
xchg
movsb
inc
fstpl
in
xor
pop
repz
lds
sti
xchg
test
es
in
cmp
neg
test
mov
xchg
inc
push
lret
arpl
lock
loop
adc
xor
push
lods
push
cmpsb
dec
bound
popa
dec
mov
add
std
mov
and
adc
add
dec
call
pop
xor
jne
imul
xchg
mov
repz
ja
aam
mov
int
jge
mov
rorl
repz
pop
cli
xlat
cmpsb
not
mov
sbb
jecxz
std
bound
mov
aaa
sub
xor
ss
cmp
mov
cmp
ja
je
mov
jae
jle
mov
ds
cmpsl
mov
scas
subl
icebp
adc
push
pop
out
inc
aad
cmp
cmc
and
cmp
adc
pushf
or
into
push
scas
push
add
out
lds
pop
mov
iret
sbb
add
push
add
out
pop
ljmp
lea
int
and
pusha
mov
sub
pop
sbb
fwait
or
push
mov
imul
insl
nop
shr
adc
or
mov
in
dec
imul
jb
and
rorl
sbb
dec
add
cmp
pop
push
adc
in
push
mov
mov
cli
lods
and
xchg
lret
jo
sahf
mov
xchg
sub
lcall
fs
cmpsl
fcompl
in
adc
sbb
push
lahf
jecxz
ds
mov
add
shll
int
xorb
cmp
fsubr
jbe
push
lds
push
fiaddl
ficoml
mov
stc
in
mov
enter
sub
mov
cmp
inc
xor
xchg
xchg
lock
push
lds
dec
popa
jb
cmpsb
sub
or
xchg
flds
int3
or
jns
repnz
xchg
or
pushf
pop
mov
icebp
mov
inc
out
sbb
jo
cmp
js
xorl
stos
push
call
pop
mov
mov
xchg
xor
inc
out
cwtl
sbb
mov
divl
int
xchg
inc
sbb
popf
jb
mov
and
nop
subl
xor
push
mov
insl
push
push
fiadds
testl
mov
push
call
sub
aad
jecxz
bound
mov
and
cs
arpl
cld
out
xchg
mov
cli
add
dec
add
push
xor
call
jno
mov
push
imul
xor
in
mov
mov
jno
push
pop
mov
mov
dec
stc
jns
fisubrl
or
enter
mov
lods
jne
sub
dec
mov
std
sub
ss
scas
add
push
sub
xchg
cld
mov
jnp
sub
lea
pop
adc
cli
shrb
mov
imul
cltd
loope
adc
xchg
loop
test
test
mov
pushf
or
adc
das
fstpt
loope
iret
loop
xor
cwtl
call
stos
repnz
mov
cmp
loope
mov
inc
shrl
stos
lret
mov
repnz
in
out
mov
dec
loop
xor
inc
enter
add
bound
cwtl
js
outsb
stos
mov
scas
push
cmpsl
lea
dec
leave
cmpsl
mov
test
aaa
sub
mov
fsubs
pop
daa
into
xchg
sub
lahf
sahf
sbb
xor
adcb
dec
xchg
aaa
out
jbe
iret
inc
push
out
sbb
jmp
lret
popa
sub
and
outsb
jo
imul
mov
mov
cmp
and
jmp
ljmp
lret
mov
xor
into
flds
pop
repnz
lret
loopne
dec
sbb
jbe
lock
int3
orl
dec
imull
into
shrb
xor
inc
jmp
lcall
xor
loop
ss
sub
ja
bound
mov
fsubrs
and
orl
lea
push
sbb
loop
fsubrl
fwait
mov
call
cmp
or
sub
imul
or
nop
testl
loope
divb
pop
test
dec
in
pop
lods
ss
dec
xor
cmp
sbb
and
and
mov
mov
sahf
xchg
sbb
add
popf
xlat
loope
dec
pop
jns
faddl
add
addr16
dec
mov
pop
dec
inc
bound
into
ficoml
jmp
add
cmp
inc
movsl
pop
jnp
repz
xchg
sbb
sub
inc
ss
cld
jl
mov
add
mov
in
inc
loopne
adc
mov
sbb
jmp
sti
push
or
dec
sub
jmp
stos
adc
sbb
cmp
adc
psrad
in
lcall
mov
insl
cmp
cld
cs
cmp
cs
push
rcll
sarb
and
jb
or
lods
lcall
or
lods
and
or
stos
pcmpgtb
imul
mov
add
loop
push
bound
mov
jno
and
adc
roll
push
mov
fisubs
sub
test
js
dec
int
fs
jno
dec
mov
cmp
cld
mov
jp
mov
jp
mov
add
rorb
subb
mov
adc
sbb
mov
aaa
jnp
or
test
xchg
jle
cmp
xorl
scas
push
add
jg
push
jo
mov
lock
das
testl
out
and
fbstp
lahf
and
div
insl
push
mov
cwtl
sub
mov
cli
pop
enter
into
inc
xor
icebp
mov
push
sub
mov
cmp
out
sbb
enter
mov
push
lcall
adc
test
test
andl
add
jmp
adc
mov
push
hlt
xchg
dec
aas
push
in
outsb
sub
insl
adc
dec
loop
out
cmpsb
mov
out
std
ljmp
xchg
in
lahf
outsb
in
mov
pop
inc
nop
mov
add
mov
insl
fstps
xor
subb
sbb
das
cwtl
and
or
push
jp
jp
and
into
roll
xchg
enter
and
xchg
addb
aas
cmc
mov
lret
or
xchg
ss
into
dec
sbb
push
int3
stos
jno
shl
aas
add
xlat
cmp
mov
add
lahf
cmp
fisubl
lldt
push
inc
add
jbe
cmp
das
push
cmp
inc
mov
cmp
cmp
pop
std
xchg
inc
ds
xchg
fisttpl
clc
push
test
outsl
arpl
outsb
lcall
sub
pop
jecxz
cmp
mov
repz
inc
xor
mov
sti
gs
push
bnd
xchg
cmpsl
add
dec
in
fcoml
xor
out
sbb
into
pusha
or
and
push
mov
aam
loopne
std
push
stos
mov
mov
int3
adc
jp
inc
decl
add
int
dec
int
pop
pop
mov
mov
pop
xor
stc
jns
les
mov
imul
outsb
mov
pop
and
test
leave
popf
mov
fwait
and
imul
insb
and
lret
xchg
pop
jp
fisttpll
or
mov
xchg
leave
cld
int3
sub
push
sbb
mov
iret
daa
fsts
fdivrs
outsl
jle
lret
add
pop
mov
arpl
xlat
out
jae
xchg
inc
fldl
leave
fldt
push
cmpsl
pop
hlt
iret
adc
sbb
xor
inc
stos
divl
les
or
and
pushl
gs
mov
xor
dec
and
jl
and
aam
jg
xor
int3
wrmsr
pop
sub
aad
das
adc
sti
inc
repz
sbb
pusha
imul
add
mov
stc
das
mov
sbb
lods
nop
xchg
dec
cmp
negl
mov
jle
xchg
icebp
addr16
mov
scas
push
xchg
fisubrl
sub
xchg
sub
jnp
add
ss
cmp
lods
in
fwait
inc
fidivrl
lahf
adc
lds
pusha
or
xchg
mov
pop
cmp
outsb
and
testl
jns
dec
lret
fwait
movsb
cmc
and
aas
adc
jne
fisubrl
lahf
lea
mov
in
push
lods
arpl
sbb
push
sbb
and
out
es
call
push
mov
in
mov
sub
xor
dec
inc
cmp
stos
cmp
cltd
mov
sbb
es
arpl
or
xor
adc
jle
push
push
inc
push
dec
push
loope
dec
inc
sub
cltd
dec
lret
inc
sub
pop
pop
cltd
into
cmp
mov
call
xchg
stc
mov
push
lcall
into
ficoms
bnd
in
jo
fsub
jmp
lds
imul
xchg
arpl
mov
sub
mov
dec
xchg
pushf
enter
adc
cmpsb
nop
lret
pusha
fidivl
fwait
rol
jno
mov
test
mov
sbb
pop
out
xlat
xor
ja
je
cmc
dec
mov
pusha
dec
pushf
test
inc
and
pop
push
jle
daa
cmp
sti
andb
in
js
sarb
test
outsl
adc
lea
jae
ret
sub
nop
adc
shrl
iret
dec
cmpsl
xchg
incb
adc
dec
pop
rcll
jb
movsl
insb
mov
andl
pop
aam
mov
xor
insl
lock
pop
jne
mov
andl
in
movsl
fcomps
xchg
out
pop
adc
push
cmp
fwait
lret
mov
inc
in
and
xor
sbb
mov
rorb
dec
es
sub
inc
stos
in
xlat
inc
xor
rcll
ficomps
test
movsb
pop
fstps
and
shlb
cmp
mov
pop
and
enter
and
mov
loop
ret
cmpb
push
and
loope
push
mov
movl
push
cwtl
in
jle
lods
mov
or
mov
mov
loopne
pop
iret
jmp
rclb
xor
movsl
sbb
lea
lahf
fidivl
jno
push
mov
fsubrs
mov
into
dec
imul
xorb
xchg
mov
xchg
es
dec
inc
adc
loope
sub
orb
arpl
lds
push
and
das
loop
bound
je
xchg
push
sahf
inc
shl
push
xchg
pop
pusha
lods
mov
push
daa
add
or
loop
repz
mov
js
out
cmp
pop
pop
mov
mov
mov
hlt
xchg
daa
out
xchg
pop
in
sub
adc
insb
inc
dec
in
push
inc
lea
cmpsb
std
add
int3
mov
cmpsb
cmp
and
jbe
hlt
shll
mov
mov
pop
pcmpgtw
mov
fsubs
xlat
aam
jg
cmpsl
js
les
adc
aas
lds
ficompl
push
loopne
push
out
push
aas
push
cmp
dec
mov
imul
outsl
mov
ja
mov
lret
movsl
fwait
dec
test
dec
out
fidivl
sub
inc
popf
pop
inc
inc
xchg
sbb
mov
aaa
or
subb
push
ss
mov
cmp
ret
paddusw
mov
jge
xor
xchg
push
mov
loope
sbb
sbbl
lock
lret
cmpl
fisubs
movsl
pop
sahf
xchg
mov
repz
ud1
mov
out
sbb
enter
pop
mov
cmp
call
push
jp
gs
int3
cmp
loop
pop
jmp
lods
hlt
aad
sbb
pop
je
mov
icebp
outsl
jnp
pusha
mov
cmc
push
into
fistpl
adc
fwait
sti
jp
xchg
rclb
pop
jle
cli
xor
add
in
sbb
scas
mov
gs
fwait
je
push
lods
jmp
pop
dec
repnz
int
aaa
shlb
rorb
not
mov
imul
inc
mov
inc
pshufw
xor
and
add
xor
and
pop
xchg
push
sbb
cmpsb
xor
pop
push
jmp
fstps
fwait
imul
sub
fmull
in
ljmp
add
adc
adc
xchg
inc
out
aas
ja
xor
inc
xor
dec
lret
ret
jmp
xchg
add
repz
xor
add
jno
jle
mov
and
int
sbb
add
sub
jb
in
js
xchg
sbb
nop
mov
mov
inc
xchg
and
insl
inc
jge
mov
mov
cmp
or
adc
push
in
mov
sar
out
or
xchg
bound
push
enter
push
hlt
mov
cmp
xchg
and
imulb
es
pmulhuw
out
insb
loope
and
cmp
stc
pop
lcall
jg
cmc
outsl
adc
xchg
enter
andb
aaa
lret
fldenv
ds
xor
push
ss
rcl
pop
fwait
dec
sbb
and
mov
pop
scas
in
loopne
ror
add
rorl
imul
repz
xor
aas
mov
in
pop
faddl
dec
adc
sub
gs
xlat
addb
mov
std
pop
dec
xor
and
cmpl
mov
movsb
sbb
sub
push
icebp
aaa
clc
imul
test
mov
icebp
out
mov
lcall
adc
cmpb
dec
and
push
popa
das
push
jg
leave
inc
aas
inc
mov
push
pusha
jmp
sar
leave
cmp
xchg
daa
out
inc
loopne
das
push
rcll
jle
out
push
aas
call
sahf
add
stos
outsb
xor
and
add
es
mov
xchg
aad
add
imul
ficoms
sbbb
pop
in
aaa
pop
add
cmp
sbb
mov
push
into
fadd
ljmp
sub
add
sub
xor
int3
adc
mov
fidivl
xor
cmp
sbb
decl
xchg
daa
fdiv
cmp
addr16
rcrb
xor
push
iret
loope
dec
ja
loopne
mov
xor
int
cmpsb
fimuls
enter
out
mov
and
int
aam
daa
push
rcrl
mov
fidivs
mov
sbb
mov
jl
sti
mov
xor
and
mov
insb
ss
and
xor
rcll
or
in
mov
rorl
sti
cwtl
lods
xchg
mov
cld
lcall
pusha
dec
fcompl
lret
inc
out
dec
addr16
clc
jge
sbb
pop
sbb
push
jo
jg
or
sti
or
add
lahf
or
ret
les
sahf
adc
sbb
mull
push
cmpsb
xor
stc
adcb
xor
lcall
jecxz
outsl
call
xlat
fisttps
clc
pop
fsubs
cwtl
fs
jo
xchg
sbb
mov
jge
clc
dec
adcb
mov
daa
repz
cmc
cmp
enter
xchg
adc
xchg
inc
dec
dec
jne
dec
daa
push
cmpb
stc
scas
mov
cmpsb
aam
sbb
and
imul
jo
jl
fadd
cmc
cmp
or
xor
jns
mov
push
jne
push
clc
jecxz
cmc
rcll
mov
and
pop
mov
mov
push
sub
lret
push
leave
push
lds
dec
xchg
stos
dec
and
dec
lcall
pop
xor
cmp
loopne
add
popf
adc
mov
jl
loopne
ja
mov
dec
fidivl
push
mov
sub
cltd
or
adc
mov
std
sbb
stc
shll
nop
dec
push
xchg
sbb
sahf
rol
hlt
jb
fstpt
addr16
test
or
xchg
push
popf
pop
or
xchg
dec
mov
ljmp
mov
xor
movsb
xchg
ret
fiaddl
xor
jmp
xchg
loopne
jb
sbb
or
mov
jmp
insb
mov
fs
xchg
lret
push
mov
loop
into
xchg
ret
xlat
sub
lahf
and
xchg
int
test
gs
mov
divb
idiv
and
push
xchg
xor
push
mov
pop
mov
add
lea
add
add
push
inc
pop
dec
xchg
dec
xchg
dec
xchg
dec
push
mov
pop
dec
call
cmp
je
xchg
push
pop
dec
push
pop
inc
xchg
inc
sub
xchg
dec
dec
mov
imul
add
xchg
push
xor
mov
dec
inc
add
dec
xor
add
pop
mov
pop
pop
pop
leave
ret
push
mov
push
movl
xorl
mov
mov
mov
xor
add
mov
mov
xor
orl
push
xor
mov
mov
subl
add
mov
mov
subl
mov
xorl
mov
mov
mov
subl
mov
add
mov
mov
mov
mov
xor
add
pop
leave
ret
push
mov
sub
mov
sbb
mov
sbbl
xor
and
mov
add
movzwl
xor
mov
movb
andl
mov
inc
mov
cmpl
ja
jmp
push
pushl
pushl
pushl
call
cmpl
jb
lea
mov
movl
cmpl
je
cmpl
jle
jmp
push
pushl
pushl
pushl
push
pushl
call
xor
or
dec
mov
jmp
mov
add
mov
xor
subl
add
sbbl
mov
movl
cmpl
je
cmpl
jl
jmp
push
pushl
push
call
cmpl
jne
mov
dec
mov
xor
add
dec
mov
jmp
movl
push
movl
cmpl
je
cmpl
jg
jmp
push
call
xor
or
dec
mov
jmp
movl
mov
push
mov
andl
xor
or
mov
sbbl
push
add
jmp
mov
movl
mov
inc
cmp
movl
jb
not
mov
orl
xor
sbbl
add
movl
jmp
sbb
mov
subl
mov
sbbl
xor
orl
mov
orl
add
movzwl
mov
and
mov
movzwl
addl
xor
add
inc
mov
movl
mov
inc
mov
mov
movl
cmp
jne
mov
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jbe
jmp
pushl
push
push
call
jmp
mov
mov
sub
xor
add
neg
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jb
jmp
pushl
pushl
push
pushl
push
call
jmp
mov
xor
add
neg
mov
or
movl
movzbl
or
mov
movl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jbe
jmp
push
push
call
cmpl
jne
mov
inc
mov
jmp
movl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jge
jmp
pushl
pushl
push
push
call
cmpl
jne
mov
inc
mov
jmp
mov
xor
add
xor
mov
adc
mov
adcl
xor
orl
add
mov
mov
mov
je
add
mov
andl
mov
xor
adcl
xor
sub
notl
sub
xor
sub
mov
movl
cmpl
je
cmpl
jg
jmp
pushl
push
call
cmpl
jne
xor
xor
dec
mov
mov
dec
mov
jmp
mov
adc
mov
subl
lea
movl
mov
mov
mov
add
adcl
imul
mov
xor
mov
xorl
mov
movl
add
movl
and
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
ja
jmp
push
push
call
cmpl
jne
xor
xor
inc
mov
jmp
jmp
xadd
dec
push
dec
dec
sar
mov
popf
pop
push
xor
xlat
sahf
jnp
gs
out
les
jmp
in
clc
push
mov
xchg
mov
out
mov
dec
xlat
lea
inc
ss
jno
jl
nop
sub
sbb
dec
add
fwait
dec
add
xor
call
cmpsl
sub
push
iret
fbld
mov
push
pop
xchg
dec
ds
pusha
lods
jmp
cmc
xlat
inc
call
sbb
push
mov
dec
pusha
mov
scas
nop
inc
repnz
lea
xor
adc
xchg
sub
pop
adc
das
outsl
lea
nop
pop
fistpll
cmpsb
movq
mov
out
cld
pop
add
xor
test
jnp
add
insb
cmp
jno
int
push
jl
movsb
adcl
cmp
pushf
arpl
inc
ljmp
lcall
mov
icebp
sub
mov
dec
popf
add
dec
xchg
ficompl
jb
outsb
mov
call
add
mov
movsl
push
mov
mov
cmpsl
aas
and
lock
scas
pusha
fucomip
movsl
rcrb
addb
cmp
icebp
jge
xchg
ret
lret
imul
cmc
xor
ljmp
sub
lcall
mov
mov
in
sahf
je
cld
pop
add
into
fcoms
or
popa
cli
stos
push
mov
cltd
in
pop
jg
fbld
inc
clc
test
cmc
jge
inc
rorb
fwait
stos
les
mov
pop
ret
and
jp
xchg
shrl
pop
add
movb
ret
push
or
insb
fadd
daa
lds
mov
je
fcoml
mov
cli
iret
jnp
cmp
sbb
sbb
mov
jge
lods
fucomp
jp
xlat
bsr
pushf
sbbl
mov
outsb
cmp
mov
dec
movsb
or
add
mov
gs
xchg
aas
adc
aas
add
jmp
sub
testl
jp
push
mov
cwtl
inc
or
arpl
mov
and
add
mov
outsb
and
xchg
xchg
shrl
int
cld
lods
jg
push
jmp
push
leave
mov
push
repnz
iret
push
sub
lret
icebp
clc
and
dec
das
inc
daa
insb
inc
dec
test
stos
popa
incb
popa
gs
xchg
pop
lret
push
sbb
aaa
pop
pushf
pop
call
push
sbb
inc
rorl
ss
pop
adc
rorl
out
out
sbb
sub
push
negb
mov
jns
subl
sbb
mov
and
aaa
jo
rep
push
pop
adc
sarb
pop
fiaddl
lahf
and
sub
inc
mov
mov
aaa
adc
cmp
outsl
mov
repz
fisubl
inc
ja
jne
ds
xchg
add
jge
sbb
addr16
jg
fistpll
add
pop
mov
mov
rorb
lret
gs
cmp
push
aaa
sahf
pop
jl
mov
jbe
push
push
adc
cmp
push
push
cmp
rcll
add
sub
clc
lods
popf
lahf
aam
out
test
sbb
pop
add
stc
lds
mov
mov
jo
pushf
and
cmp
jno
cli
push
mov
xor
ljmp
int3
js
fs
mov
enter
pop
add
bnd
jecxz
cld
jg
xor
jbe
js
mov
lods
cwtl
inc
bound
sbb
mov
xchg
aaa
push
xchg
mov
popa
pop
cwtl
cmp
and
cmpsl
daa
aad
dec
das
mov
cld
icebp
dec
mov
fwait
jmp
clc
mov
mov
jo
sub
mov
ficoms
shrb
lret
loopne
xor
cmp
in
fsub
scas
jno
jecxz
enter
fcmovne
sub
push
add
xor
push
adc
out
aad
in
dec
dec
jo
mov
jl
leave
loope
dec
and
mov
inc
push
es
xlat
bound
inc
test
xchg
jno
sub
xor
test
inc
imul
xor
popf
mov
push
mov
push
imul
xchg
popf
or
call
in
mov
jae
sti
addr16
andl
repnz
test
int3
inc
mov
xchg
mov
gs
add
xchg
hlt
lret
inc
mov
jl
or
sub
outsl
mov
cmp
mov
jl
push
outsl
jg
pushf
movsb
push
shll
rorb
jns
mov
xor
xlat
mov
js
mov
add
jl
push
fildll
arpl
in
out
lcall
fimuls
orb
xchg
jg
pop
cmc
inc
fdivp
arpl
cmpsl
push
push
push
dec
cmpsb
cwtl
imul
aam
cmp
xchg
push
push
sub
scas
lcall
sub
sub
sub
adc
pop
mov
js
out
les
push
sub
xor
and
cmpsl
jg
test
dec
std
xor
aam
or
add
adc
lret
movl
xor
jo
or
mov
sub
pop
sub
scas
jg
sbb
mov
inc
xor
mov
xlat
mov
and
mov
lock
push
sbb
or
movsb
shr
push
shll
jno
std
mov
test
adc
mov
in
mov
sarl
cmp
inc
sub
iret
jno
sti
adc
sbb
mov
mov
jg
mov
ss
pusha
mov
mov
jl
push
rcrl
mov
movsb
xchg
mov
lds
dec
xchg
mov
fs
aam
pop
xor
adc
icebp
dec
xor
in
cmpsl
pop
imul
mov
xor
stos
cmp
inc
xchg
cmp
in
sub
or
mov
add
bound
fmuls
xor
pop
hlt
pop
popa
cmpsb
test
push
addl
movsl
in
out
int3
xchg
arpl
mov
or
icebp
loopne
jecxz
fwait
nop
dec
aas
xlat
inc
inc
arpl
lret
lock
cmp
xchg
jle
jmp
lret
subl
lock
cmp
or
das
pop
mov
jg
ret
xchg
mov
mov
mov
cs
lock
cld
imul
mov
pop
or
or
inc
add
rcl
sbb
mov
jl
lods
jle
rcr
test
cmpsb
add
xchg
lcall
cltd
jg
inc
inc
mov
and
mov
push
xchg
out
pop
adc
nop
mov
push
pop
dec
and
repz
mov
das
sti
imull
fisubl
cwtl
stc
xor
sbb
into
clc
ret
pushf
fwait
insb
pop
dec
icebp
outsl
lock
ljmp
ret
adc
sub
cli
lea
add
gs
xlat
imul
notl
insl
mov
mov
negl
xchg
ret
xor
hlt
subl
loopne
sub
mov
mov
pop
daa
adc
adc
dec
js
inc
mov
daa
and
ja
push
mov
fnstenv
jp
cmpsl
ret
pop
jno
or
and
jge
faddl
aad
cmp
mov
jae
repz
imul
sbb
jne
js
cmpsb
sti
inc
xchg
dec
push
xor
jle
inc
insl
movsl
cmc
push
lods
jne
dec
ja
adc
inc
outsb
jle
adc
push
inc
cmpsb
cmp
xlat
jnp
pop
jo
sbb
cmp
ret
jmp
lock
test
push
pop
jnp
fbstp
jae
jo
in
repz
dec
lret
push
fcompl
or
in
sub
inc
push
aam
fnstenv
xor
in
ds
push
in
rol
aas
test
cmpsl
push
xchg
stc
xor
addr16
stos
shr
daa
xchg
mov
cmp
fstl
lret
pop
mov
xchg
sbb
xor
stos
ja
and
ja
sti
sub
lea
addr16
sbbl
xor
pcmpeqd
loope
sub
stos
jp
fnsave
sub
mov
andb
jo
stos
mov
sub
lcall
stos
les
xor
in
pop
movl
cmpb
iret
and
lea
pop
add
insb
xor
loopne
hlt
or
add
or
jp
mov
push
cmp
pop
and
fldcw
pop
cli
xchg
pop
outsl
hlt
push
rcll
loop
lock
cmp
mov
mov
xchg
imul
cltd
jno
or
and
or
add
pop
jp
je
test
das
push
roll
mov
sbb
push
loope
bound
mov
movsl
pop
or
gs
scas
shlb
cmp
pop
add
subl
pop
cli
mov
jle
cld
jo
clc
iret
add
or
jge
fwait
ret
daa
cwtl
pop
cmp
xchg
aaa
jnp
outsb
or
sub
div
push
test
inc
imul
add
subb
pusha
sti
repz
sbb
aad
lods
inc
jmp
xchg
test
popf
xchg
adc
pusha
ret
push
lret
pop
or
cli
fmull
fs
sti
fistpl
mov
neg
rcl
jb
pop
cmp
mov
enter
fistpl
xchg
sbbl
inc
rol
mov
xor
xchg
jp
push
lods
cmc
mov
int
jmp
dec
call
testb
repnz
xor
jae
fisttps
lcall
rorb
ljmp
add
lahf
lods
and
mov
cmpsl
mov
lock
inc
mov
js
adc
pandn
mov
add
cmp
sub
adc
out
in
inc
fcmovnu
cld
fs
xchg
test
repz
pop
ljmp
dec
outsl
nop
ljmp
adc
sub
jmp
sarl
clc
push
popf
int3
cltd
call
lea
mov
iret
mov
and
fdivl
sub
pop
fidivl
add
mov
and
and
rorl
icebp
ljmp
incb
push
dec
sub
mov
mov
aam
add
in
cmc
and
xor
mov
sbb
jb
iret
or
cmp
js
xchg
jne
jo
lock
into
in
lret
jl
dec
iret
fcmovnbe
and
mov
lret
jns
xchg
jecxz
and
jno
adcb
jo
nop
inc
pushf
xor
mov
jcxz
psrld
fwait
rcrb
int3
mov
mov
mov
xor
cmpsl
pop
int3
sub
stos
cli
jle
add
cmp
dec
jp
jae
lods
jno
dec
sbb
addr16
pop
jns
out
cmc
pop
and
and
outsb
int3
mov
sub
xor
cwtl
dec
leave
stc
pop
mov
cmp
fbld
outsl
mov
push
mov
mov
mov
pop
sbb
mov
cmp
subb
add
loop
jne
imul
loope
mov
cmp
dec
aas
cmp
jl
pop
sub
stos
jno
cmp
jo
mov
mov
jecxz
cltd
xor
ljmp
mov
outsl
fsubl
dec
gs
les
pop
adc
push
mov
fmuls
cmp
cmp
xchg
sti
and
mov
daa
inc
jns
adc
inc
inc
xchg
inc
sub
mov
hlt
in
mov
aaa
adc
mov
dec
mov
pop
jnp
cmc
mov
imul
adc
imul
sub
push
in
in
mov
sbb
inc
mov
ffreep
leave
nop
stc
fldl
lods
cmp
sub
pop
mov
xchg
mov
mov
out
sub
dec
sarb
test
mov
andl
xchg
push
loope
repz
jne
sbb
xor
dec
insb
mov
jle
or
aam
mov
jae
mov
sub
sbb
pusha
jmp
shlb
mov
pop
mov
jne
mov
insb
loopne
cld
imul
xchg
xchg
jnp
mov
std
inc
arpl
mov
pop
xchg
sub
sub
mov
mov
rcrb
mov
jmp
mov
test
popa
mov
leave
fidivl
dec
lret
test
daa
adc
or
cmp
lahf
repnz
movsb
shl
test
mov
xchg
shl
mov
testl
mov
icebp
scas
push
adc
xchg
std
insb
dec
sbb
cli
out
icebp
mov
push
pop
imul
cmp
sahf
sub
fmull
ret
pop
jo
call
push
add
test
jb
pop
arpl
or
fldcw
or
pop
sbbl
test
mov
xchg
sbb
xchg
fucom
addl
push
pop
mov
jecxz
lret
push
sub
in
outsb
fmuls
popf
inc
pop
push
test
sti
mov
add
cwtl
jge
mov
out
in
lret
dec
imul
and
and
jp
call
mov
imul
fcom
cmp
sbb
inc
in
mov
pop
xchg
negb
out
fisubs
xchg
cmp
out
test
push
cmp
jns
add
les
pushf
in
dec
inc
scas
lcall
popf
or
adc
pop
fbstp
scas
push
test
outsl
enter
xor
in
and
pop
int
nop
xchg
sub
mov
ja
js
out
xchg
rolb
fwait
jl
xor
daa
push
xor
dec
cmp
add
insl
and
xor
fs
or
push
add
sub
dec
subl
aam
pop
lock
enter
add
jp
dec
in
xorb
lret
add
cmpsb
push
adc
test
push
adc
mov
repz
into
xlat
adc
sub
fwait
cmp
stos
sub
cwtl
cmp
pop
inc
lret
cwtl
fsubrl
and
pop
es
jns
mov
out
push
mov
das
jge
decl
test
ret
or
mov
lds
inc
dec
mov
adc
sbbb
xchg
sar
stos
xor
mov
push
aas
fimuls
mov
int3
dec
xchg
inc
push
orl
mov
and
cmpsl
inc
ljmp
jnp
pop
add
push
and
pop
pop
xchg
push
xor
add
dec
fdiv
sub
cmp
sbb
pop
stos
out
jp
sub
arpl
aas
jae
inc
arpl
ljmp
cmp
inc
push
jns
gs
xchg
sbb
pop
lahf
push
pop
popf
ljmp
jo
cmpsb
and
mov
add
cmpb
leave
mov
xchg
test
ljmp
inc
sarl
pop
orb
xchg
adc
push
push
push
test
aad
pop
adc
xor
mov
lea
jnp
pop
add
mov
pushf
movsb
push
jge
sub
pop
jl
cli
pop
mov
adc
xor
push
pop
out
sarb
rcrb
jno
fbld
push
adc
push
mov
jp
cmp
pop
lods
das
leave
js
adc
mov
jnp
aam
mov
add
pop
rcrb
dec
xchg
sbb
or
mov
sub
fistl
subl
sub
jae
mov
jne
stc
mov
mov
cmp
enter
imul
loopne
arpl
or
popa
inc
hlt
pop
push
hlt
sub
fbld
mov
fdivrl
sbb
adc
jne
inc
iret
jge
bound
stos
jnp
je
pushf
movb
loopne
mov
mov
mov
cmpsb
mov
nopl
jecxz
lea
verw
repnz
movsb
mov
push
pusha
cmpb
test
nop
lea
mov
scas
pop
inc
or
lds
inc
mov
mov
cmp
fstps
lret
shlb
mov
dec
pop
testl
xor
int3
cmp
in
jae
test
movsl
imul
and
jo
in
and
aad
mov
mov
idivb
adc
push
mov
dec
and
es
inc
je
loopne
aam
mov
pusha
or
sahf
shlb
cmp
in
ja
cmp
fcomps
ljmp
rol
push
cmp
add
mov
mov
adc
lock
inc
pop
adc
imul
sub
dec
mov
mov
mov
ss
xor
pop
sbb
test
xor
cmc
mov
shll
out
rcl
or
mov
adc
lds
lods
dec
push
cmpsl
pop
pop
rcrb
mov
cmovle
stc
rorb
sbb
sti
cli
ja
adc
nop
lcall
lret
xor
cmp
or
jp
push
dec
push
dec
push
fistps
aad
jg
mov
inc
je
sbb
xor
sbb
out
popf
addr16
adcb
adc
and
inc
push
dec
icebp
outsb
xor
addr16
push
aam
inc
imul
outsb
lahf
pop
and
repz
mov
loopne
jle
rep
cmp
pop
push
jecxz
pop
loopne
jno
dec
push
xchg
add
in
lret
ret
jecxz
jle
clc
sarl
mov
and
int
scas
lds
rorl
les
enter
cwtl
inc
inc
cli
xor
mov
in
ss
mov
xchg
bound
push
ret
pop
daa
push
sub
sahf
jb
icebp
dec
pop
stos
xchg
stos
decb
xchg
sbb
mov
inc
add
xor
add
mov
jnp
pushf
jno
and
sbb
loop
insl
push
jno
gs
jp
test
arpl
scas
addl
icebp
rcr
mov
xorps
mov
mov
adc
dec
out
mov
stos
pop
or
std
adc
fstl
out
push
adc
andb
fistps
and
adc
mov
lds
sti
pop
add
sbb
mov
stc
scas
aam
sbb
or
enter
dec
jecxz
xor
ja
jl
lret
inc
xchg
add
pop
pop
jge
sub
aaa
rcl
or
mov
mov
ljmp
scas
xor
pusha
jbe
lea
inc
outsb
mov
js
je
add
addr16
nop
arpl
xchg
or
aas
xchg
aad
cmp
sub
nop
cmp
jge
adc
leave
sti
pop
sub
fptan
lods
jle
into
aad
stos
inc
stos
lea
sbb
int
pop
cmp
add
iret
xor
cmp
repnz
pop
js
adc
mov
pop
leave
ds
icebp
inc
jle
test
add
cli
gs
sub
inc
or
daa
cmp
aad
ss
fmuls
push
and
sbb
inc
popf
in
cmc
sbb
addr16
xor
shl
and
test
in
cwtl
stc
std
or
int3
push
lahf
shrl
sbb
fsts
pusha
xchg
lahf
mov
add
xchg
test
outsl
fsts
push
xchg
outsl
and
ret
dec
mov
popa
add
fcoml
aas
sub
icebp
ficoml
xor
int3
adc
rorb
ss
clc
adc
movsl
nop
insb
out
repz
xor
das
call
imul
xor
icebp
lret
notb
jge
aaa
fs
dec
xor
cmp
mov
push
adc
test
xchg
cmpb
push
mov
insb
sub
incl
sbb
jns
pop
popl
or
imul
dec
cwtl
std
data16
sbb
into
sbb
xor
lods
loop
js
lods
sub
sbb
mov
push
mov
mov
mov
cmpsb
loopne
nop
rolb
fstpl
cld
popa
sbb
xchg
int3
and
pop
arpl
pop
loope
mov
data16
sub
pusha
cmpl
pop
mov
pop
jns
or
int3
in
mov
push
rol
xor
movsl
in
mov
in
xchg
imul
stos
shrb
pop
insb
lea
loope
cmp
cmp
cmc
jmp
adc
mov
sbb
mov
mov
add
imul
adc
pop
xchg
sbb
inc
cli
imul
insb
xchg
cld
pusha
repz
inc
lea
rorb
lods
lcall
and
in
push
xlat
js
jp
xor
sbb
ljmp
mov
and
dec
jnp
dec
add
fnstenv
push
mov
shlb
jle
pop
bound
pop
push
cmp
arpl
iret
cs
mov
xor
mov
sbb
mov
or
cmp
mov
sub
fwait
sbb
push
push
or
xor
xchg
daa
xchg
shll
fstps
sub
jne
pop
in
pop
test
sub
dec
sbb
sbb
pop
sub
popf
in
lods
in
repnz
aaa
test
fsts
mov
xor
push
cmp
lds
mov
mov
aad
pusha
out
or
xchg
lods
loope
jo
mov
push
out
xor
test
xchg
xlat
movsl
cmp
popf
mov
in
fs
xor
andl
fisttpll
cmp
lods
adc
adc
jmp
inc
repnz
sbb
test
icebp
push
clc
cmpsb
xor
dec
jge
repnz
jge
inc
sti
cmp
aam
push
mov
test
mov
jg
mov
cmp
xor
jge
inc
ja
test
fs
jb
das
dec
add
into
inc
scas
and
out
xchg
jecxz
sbb
test
dec
insb
xor
add
cmp
mov
stos
testl
test
std
or
or
push
sti
xchg
jge
stos
insl
inc
xchg
ret
jle
inc
cmp
test
push
push
pusha
mov
pop
jne
fdivl
mov
jno
cmp
cld
mov
int
xchg
leave
cmp
pusha
sub
and
lods
mov
sarb
out
dec
fisubrl
push
test
movb
popw
and
mov
inc
add
inc
add
xchg
cmp
push
dec
lahf
add
mov
sbb
je
mov
dec
cmp
sub
cmp
add
out
mov
pop
xchg
ljmp
imul
xchg
mov
mov
jg
mov
in
hlt
iret
pushf
mov
aaa
mov
leave
mov
cmc
push
mov
adc
xchg
jbe
dec
mov
mov
jp
daa
mov
pusha
or
xchg
fcomip
lret
and
je
push
inc
ja
lock
mov
cwtl
mov
stos
sub
jae
adc
mov
dec
inc
loop
or
mov
xchg
stos
mov
cmp
mov
outsb
jl
mov
push
xchg
cmp
je
xor
es
mov
ja
roll
stc
aad
pop
ljmp
pop
jae
pop
add
hlt
inc
sbb
sub
sbb
dec
aaa
push
cwtl
shll
roll
imul
cmp
jo
adc
sub
sbb
test
jmp
scas
insl
jge
inc
fbstp
and
push
pop
adc
addr16
fstpl
cmpsl
xor
addr16
mov
mov
and
inc
fsubp
add
subb
pop
xlat
bound
push
hlt
loope
das
pop
sarb
mov
xlat
jo
popl
test
and
pop
push
test
pusha
pop
es
jns
ret
xlat
mov
ficomps
adc
push
push
mov
pop
jg
push
lahf
jns
dec
xor
enter
mov
mov
ja
cld
xchg
aam
lret
xor
jmp
or
enter
jmp
lods
fistl
sub
mov
mov
repz
cmpl
imul
shrl
stos
xor
mov
mov
pop
or
fisttpl
adc
lds
out
push
insl
ret
and
test
mov
pop
cmp
xchg
imul
rolb
push
push
icebp
sahf
pop
es
push
mov
je
inc
jmp
cmp
or
add
jno
cwtl
cmp
std
icebp
mov
sti
cmp
inc
flds
mov
mov
cli
dec
jb
cmp
test
sarb
jge
pop
out
add
outsb
and
test
leave
sub
cmp
mov
inc
mov
xor
rolb
lea
mov
aam
jg
pop
je
pusha
cld
test
push
les
test
jbe
sub
mov
lahf
fsubl
popa
pop
mov
les
rcl
push
int
cmc
fwait
adc
addr16
out
fwait
repz
add
das
pop
jl
push
orl
imul
push
dec
hlt
dec
decb
test
test
movsl
adc
cmpsb
push
in
adc
push
andb
jnp
cli
pop
mov
and
jns
out
imul
inc
aaa
lea
pop
adc
fwait
xchg
ret
ret
mov
adc
inc
into
insb
mov
mov
inc
cmpsb
icebp
sub
inc
push
ds
and
xchg
or
nop
xchg
rcrl
in
pop
inc
xchg
dec
fcomps
inc
xor
mov
pop
out
shl
sub
xchg
dec
mov
push
xchg
mov
ret
lret
mov
add
mov
adc
call
fistl
pop
xor
xchg
lock
mov
xchg
in
xchg
arpl
fisubrl
xorb
cmp
loope
jecxz
repnz
inc
lods
not
fidivrl
adc
nop
shlb
xor
dec
push
jbe
clc
test
repz
fwait
lods
out
out
mov
sbb
ljmp
mov
in
pop
rorb
lea
xchg
rcr
mov
or
mov
das
shlb
cwtl
inc
inc
sub
out
add
imul
xchg
pop
lret
jle
mov
jae
dec
jl
adc
int3
mulb
or
ret
sbb
pop
mov
and
inc
push
out
cmp
sub
adc
aas
cmp
xchg
or
xor
xor
scas
aas
mov
and
aaa
push
jecxz
sub
sti
push
jmp
aam
in
dec
into
popa
sbb
fwait
in
adc
arpl
mov
pop
sbbl
jp
gs
nop
and
mov
mov
jnp
jno
mov
pop
test
push
insb
ret
jnp
in
mov
sub
mov
gs
outsl
mov
out
movsl
ror
and
sbb
inc
subl
movsb
rcrb
mov
cwtl
fs
pop
insl
cld
js
dec
in
jo
fmuls
out
insl
aaa
cs
add
insb
inc
or
aaa
pop
repnz
sub
cld
xor
mov
and
dec
call
push
hlt
fnsave
test
and
pop
xchg
iret
cmpsb
jne
jo
add
or
test
pop
adc
adc
imul
push
sub
mov
jo
jns
pop
xchg
into
lods
aad
loop
fs
inc
lret
aas
push
pop
and
lods
cmp
enter
push
jne
mov
subb
fs
sti
cmp
mov
dec
out
jno
cmp
sub
or
daa
push
clc
push
in
and
inc
jne
sarl
imul
dec
and
cld
fidivl
in
aad
cmp
push
popa
dec
and
enter
or
jno
or
push
cmpsl
out
sbb
push
or
and
jno
addr16
add
fs
lret
and
pop
scas
aam
push
loope
push
adc
sbb
inc
xchg
inc
int
out
mov
lcall
or
jo
and
jge
pop
lods
pushf
or
mov
and
add
lods
sub
daa
dec
out
pushf
mov
mov
sbb
cmp
pop
shrb
lods
push
cld
lods
popa
enter
das
inc
push
sub
cmpsb
push
dec
or
mov
pop
push
cltd
js
cmpsl
sbb
inc
stc
or
xchg
jle
insb
mov
mov
popf
les
push
iret
cmp
shlb
adc
ret
push
cwtl
push
jnp
pop
mov
insb
sarl
jmp
xor
add
inc
jg
dec
push
inc
dec
mov
and
test
daa
pushf
addr16
mov
xlat
lock
stos
mov
jb
dec
cmp
jge
push
pop
in
call
jge
repnz
enter
mov
sub
mov
push
aam
jnp
gs
ss
in
jp
test
nop
rcl
sbb
jne
bound
test
push
jmp
sbb
addl
xchg
add
lea
adc
popl
mov
mov
pop
stc
aam
mov
pushf
ret
xchg
nop
pusha
pop
mov
adc
sbb
xor
ja
jle
aaa
into
mov
mov
ja
in
test
imul
sbb
mov
ds
aam
data16
rorl
aad
mov
xor
xchg
mov
fstl
sub
push
scas
out
jmp
sar
ret
xchg
sub
mov
repz
ret
sti
ficomps
pop
or
shll
cmp
into
or
or
imul
cmpsl
inc
mov
pop
xor
ds
cmpsb
inc
addb
lcall
mov
add
repz
fwait
sahf
in
xchg
popa
pop
jl
xchg
popa
in
sahf
call
clc
cmovb
inc
and
or
das
cld
dec
mov
jne
fwait
mov
ljmp
stc
push
imul
loope
add
stc
push
rcll
sbb
dec
lret
cld
jne
mov
loope
xorl
pushf
ja
in
rclb
xchg
inc
mov
dec
jbe
and
xchg
loope
cmp
mov
popa
xchg
fwait
add
jp
ret
xchg
adc
outsb
mov
rorb
jns
jnp
jg
inc
inc
pop
mov
adc
pop
imul
inc
lods
mov
push
addr16
insl
add
stos
xchg
dec
inc
into
decl
nopl
add
call
ret
mov
pop
aaa
adc
mov
xchg
xchg
out
leave
cmp
stc
popa
adc
hlt
and
fs
mov
dec
lret
outsl
add
imul
repnz
stos
leave
mov
loope
and
xlat
das
cli
out
xor
xchg
or
xchg
out
xor
das
mov
cld
inc
push
cmp
ds
nop
jne
mov
fcmovu
lock
mov
xlat
xchg
sub
sarb
xor
sub
push
std
xorb
fcmovnb
mov
jnp
or
fnstsw
jbe
in
out
pop
outsb
mov
jg,pn
and
fisttpl
lea
add
jmp
mov
inc
mov
cmpl
jae
cmpl
ja
jmp
push
push
call
jmp
mov
incl
add
sbbl
or
movl
cmpl
je
cmpl
jle
jmp
pushl
call
mov
dec
mov
jmp
mov
add
mov
movl
cmpl
je
cmpl
jl
jmp
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
addl
sub
add
sbb
mov
xor
mov
mov
sub
mov
add
xorl
xor
mov
movzbl
adc
mov
xorl
xor
add
movl
jne
jmp
mov
inc
sub
movzbl
xor
xor
movl
cmpl
je
cmpl
jle
jmp
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
mov
mov
xorl
xor
xor
subl
sub
sub
xor
mov
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
lea
mov
mov
mov
add
imul
mov
mov
mov
add
and
mov
mov
mov
add
or
mov
mov
mov
sub
add
mov
mov
mov
add
xor
mov
mov
xor
add
jne
mov
mov
mov
cmp
je
mov
mov
mov
mov
xor
cmp
jne
mov
mov
xor
movsbl
mov
xor
add
cmp
mov
mov
mov
je
xor
add
mov
je
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
lea
mov
mov
mov
add
imul
mov
mov
mov
add
and
mov
mov
mov
add
or
mov
mov
mov
sub
add
mov
mov
mov
add
xor
mov
mov
xor
add
jne
jmp
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
lea
mov
mov
mov
add
imul
mov
mov
mov
add
and
mov
mov
mov
add
or
mov
mov
mov
sub
add
mov
mov
mov
add
xor
mov
mov
xor
add
jne
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
lea
mov
mov
mov
add
imul
mov
mov
mov
add
and
mov
mov
mov
add
or
mov
mov
mov
sub
add
mov
mov
mov
add
xor
mov
mov
xor
add
jne
mov
mov
xor
lea
mov
mov
xor
add
jne
jmp
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
lea
mov
mov
mov
add
imul
mov
mov
mov
add
and
mov
mov
mov
add
or
mov
mov
mov
sub
add
mov
mov
mov
add
xor
mov
mov
xor
add
jne
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
lea
mov
mov
mov
add
imul
mov
mov
mov
add
and
mov
mov
mov
add
or
jmp
enter
jecxz
dec
push
add
xlat
xor
mov
jnp
sahf
jnp
dec
daa
scas
scas
or
aaa
imull
push
lret
fwait
add
pop
inc
push
mov
sub
shr
adc
out
jmp
mov
ja
shl
pop
jo
test
and
or
out
movsl
lock
or
fs
in
addr16
pop
push
insb
mov
lods
add
dec
mov
popa
das
sub
cltd
mov
loope
decb
loopne
cwtl
call
jl
jmp
jecxz
dec
cmp
fcomps
sub
or
lods
cmp
mov
ret
xor
mov
aam
mov
push
sbb
inc
push
or
insb
lcall
aad
cmc
insb
pop
adc
jg
jl
imul
lock
xchg
dec
adc
paddsb
fsubl
les
cmpb
jae
ljmp
and
cmp
sub
mov
push
stos
jge
jnp
cwtl
add
bound
ret
mov
imul
xchg
insl
pop
xchg
add
aad
add
addr16
in
pusha
mov
jge
ficompl
sbb
lahf
sbb
adc
xor
in
je
hlt
divb
or
and
in
pop
xchg
cmpsb
dec
sbb
jle
mov
xor
inc
ret
loop
push
lret
adcl
je
xlat
pop
jg
push
fbstp
xor
xor
scas
add
push
or
jge
sub
push
pushf
ret
cli
mov
mov
stc
iret
pop
call
jno
int
fisttpl
subl
lea
out
pushf
dec
and
repnz
jmp
mov
mov
pop
movsl
cs
lods
push
aas
aad
sub
xchg
or
add
hlt
xor
adc
call
dec
or
popf
jo
or
mov
fldl
stos
mov
xor
push
leave
icebp
jle
nop
pop
rol
mov
out
fistl
mov
mov
insl
push
mov
out
in
cmpsl
cmp
push
sbb
jmp
xchg
xchg
push
mov
in
dec
icebp
push
out
mov
cmpsb
lcall
pop
cmp
mov
xor
out
loope
scas
das
cli
mov
shrl
or
test
push
mov
xchg
fs
int
pop
daa
xchg
mov
aam
push
lret
sbb
mov
add
xor
shlb
std
cli
add
mov
jl
fildll
outsl
sub
loop
stos
pop
or
xchg
push
int
loop
scas
mov
test
jle
adc
push
lock
lcall
mov
adc
lahf
and
pop
addb
roll
jle
ficoms
jecxz
in
mov
fcomps
or
clc
out
jb
or
ss
sti
outsl
iret
or
stc
mov
adc
inc
enter
push
xor
sub
lds
scas
addr16
xchg
fs
pop
aad
repnz
or
fiaddl
jne
dec
int3
sub
add
repz
xor
daa
pop
mov
sub
xlat
shrl
loope
mov
nop
push
fdivrs
add
sar
dec
inc
sub
out
and
lock
lret
scas
xchg
cld
mov
sbb
xor
or
js
int3
ret
das
dec
xorb
mov
mov
sbb
sbb
xor
ljmp
cmp
testb
push
inc
std
iret
rolb
inc
sbb
outsb
icebp
jg
rcll
pop
out
mov
lcall
mov
cwtl
mov
cld
out
cwtl
cmp
scas
loopne
dec
jns
xchg
fwait
dec
std
push
inc
nop
sbb
pop
xchg
testb
in
xor
and
add
stos
adc
lods
sub
pop
xchg
push
push
mov
repz
and
lret
jnp
inc
rcrb
push
andl
cmp
xchg
sub
jae
imull
mov
dec
pop
mov
add
push
lret
push
mov
aas
sti
pop
clc
inc
adc
insb
mov
ja
dec
aad
std
xchg
push
cmp
mov
mov
repnz
clc
xchg
cmpsb
adc
push
test
leave
arpl
mov
insb
popa
clc
test
sarl
adc
xor
lods
sbb
lods
repnz
add
inc
or
mov
test
xor
sub
ret
cmp
rcrl
dec
add
fs
or
das
rcrb
push
mov
imul
lahf
push
or
xor
mov
fildll
movsb
jmp
or
popf
orb
mov
mov
or
mov
or
test
je
mov
cmp
adc
sbb
fsubl
stc
or
sbb
xchg
or
dec
pusha
mov
loope
xchg
adc
sbb
cltd
test
out
neg
in
add
inc
and
out
dec
adcl
sti
or
mov
pop
mov
mov
jns
add
mov
push
jns
mov
mov
pop
mov
pop
and
lret
inc
shlb
jno
push
adc
es
xor
jno
andb
addl
adc
xlat
arpl
inc
idivb
loope
es
add
test
dec
xchg
add
aas
adc
int
mov
movsb
jmp
clc
push
ljmp
add
lock
std
mov
mov
jbe
int
sub
fistpl
cmp
inc
lods
andl
pushf
sbb
icebp
enter
cmp
cmp
imul
mov
icebp
dec
xchg
cmpsl
cwtl
jns
lea
test
mov
push
adc
mov
mov
jl
incl
iret
adcb
mov
lea
fiaddl
push
mov
sub
aam
xchg
mov
jmp
outsl
dec
std
scas
adc
sbb
cld
and
jge
testb
xor
stos
inc
cmp
push
sub
js
mov
loope
or
adc
and
xchg
pop
push
jle
mov
in
imul
mov
sub
push
aad
pop
aaa
add
adc
inc
data16
lds
mov
stos
cmp
lret
sub
testl
dec
inc
mov
push
push
in
jb
movsb
or
xor
push
aam
loop
pop
or
xor
mov
sbb
cmp
sub
pop
mov
mov
xor
pop
inc
xchg
rcrb
push
lcall
push
adc
xchg
inc
pushfw
push
mov
sbb
cmp
jge
dec
aam
hlt
insl
stos
mov
call
mov
lock
ljmp
xchg
push
jne
mov
in
addb
test
fs
pop
pop
pop
inc
sbb
movsb
enter
push
jne
inc
clc
lock
and
imul
and
sarb
xchg
std
pop
xor
clc
scas
aas
jnp
pop
cmp
in
xchg
pop
jmp
lea
dec
leave
cmp
mov
or
or
jp
and
jb
lds
pop
aaa
in
inc
fsubl
mov
xor
mov
or
insl
fwait
outsb
push
lcall
test
imul
xchg
jecxz
pop
cltd
es
jnp
mov
mov
mov
bound
jg
fsubrl
insl
mov
mov
sub
pop
ret
mov
fwait
and
push
add
sub
add
jp
pop
repnz
pop
popf
shrb
add
inc
cmp
addb
xchg
lds
into
inc
out
adc
dec
jbe
es
push
xchg
inc
inc
jb
push
inc
jecxz
pop
lahf
addr16
mov
cmp
fwait
iret
lds
push
adc
push
or
xor
and
arpl
or
mov
sub
mov
arpl
stos
add
sbb
shrl
jo
mov
inc
lahf
js
mov
sbb
bound
push
pushf
mov
jmp
add
mov
rorl
out
inc
gs
fucomp
xor
sub
dec
jno
xor
pop
out
xchg
xchg
mov
inc
call
outsl
shl
outsb
pop
sub
xchg
push
iret
adc
ret
add
out
ljmp
pop
fisttps
mov
in
ret
ret
into
ss
pop
xchg
lcall
cltd
aaa
ljmp
jmp
pop
andl
jl
inc
mov
adc
lcall
int3
inc
es
cli
imul
xor
push
xor
in
jg
mov
inc
loopne
shrb
xchg
insl
xchg
jnp
and
pop
dec
sub
jl
sub
test
imul
sub
test
add
imul
or
jmp
push
xchg
popf
mov
pop
jnp
filds
aaa
xorb
inc
or
outsb
imul
jl
ja
xor
push
pop
hlt
adc
dec
mov
mov
xchg
jle
sub
in
iret
adc
hlt
jne
lret
pop
inc
xlat
or
xchg
sub
inc
loop
testb
mov
incb
aaa
cmc
push
or
insl
mov
fwait
mov
xchg
push
push
push
or
xor
adc
daa
sub
mov
dec
jne
std
inc
test
push
pop
mov
das
out
push
mov
push
cmp
xchg
push
xchg
pushf
repz
int
mov
pop
push
xor
xor
roll
cmp
jle
sbb
pop
jg
inc
sbb
xchg
stc
stos
mov
push
negl
sub
add
out
decl
sbbl
sub
lcall
push
xchg
sti
mov
ds
jns
dec
or
outsl
jo
mov
cmpsb
inc
rcr
lahf
sub
push
and
xchg
outsb
mov
pop
or
cmpb
or
fs
sahf
fnstcw
xchg
ret
sub
imul
or
testb
fs
cwtl
push
push
mov
push
adc
xchg
sub
dec
ljmp
addr16
jle
roll
faddp
popf
rolb
rep
sub
and
jo
mov
and
mov
push
pop
sahf
loopne
lahf
rcl
mov
fiaddl
and
add
mov
neg
test
sbbb
sub
fcmove
sbb
mov
lods
push
arpl
add
sbb
push
movsl
aas
mov
in
xchg
inc
push
outsl
mov
pop
fistl
pushf
roll
cltd
push
adc
push
cwtl
mov
cmc
pop
or
call
jbe
dec
sbb
push
mov
push
lds
jl
cmpsl
js
jmp
adcl
int3
rcrl
outsb
and
and
aam
mov
fstpt
add
adc
jg
icebp
jno
jns
frstor
cmp
and
push
add
jmp
sub
or
dec
fcomip
cwtl
sbb
faddl
mov
je
out
sbb
inc
or
out
addr16
adc
xchg
lods
ret
jle
pusha
push
adc
push
sbbl
loope
das
hlt
xchg
lock
adc
ret
popa
mov
mull
iret
mov
lods
xchg
dec
cmc
ret
cmp
clc
sbb
sub
dec
pop
test
mov
pop
mov
bound
popf
stos
push
cltd
aas
aam
jb
rorb
fldl
and
mov
sbb
jle
adc
rcrb
fdivrl
scas
mov
pop
leave
sub
fimuls
insl
pop
nop
je
stos
inc
stos
sbb
cmpb
rorb
sub
mov
jnp
jne
xchg
cs
and
push
enter
hlt
sbb
dec
es
test
cmp
aaa
ret
cmc
jns
lock
leave
cmc
push
adc
jp
aad
mov
mov
fcmove
leave
push
lret
sar
or
pop
outsl
and
xchg
push
jmp
mov
sub
call
bound
xor
outsb
inc
div
dec
jg
shll
daa
gs
xor
ljmp
fsubl
fs
sub
adc
mov
xor
pop
xor
cmpsl
push
mov
pop
mov
sbb
ljmp
inc
inc
xorl
popl
clc
adcb
ffreep
mov
xor
push
dec
lock
push
int3
fsubrl
adc
xchg
cmpsb
sbb
sub
mov
jg
xor
xor
gs
xchg
jmp
mov
aam
and
ljmp
dec
inc
out
addr16
iret
inc
inc
sub
cmp
lea
pop
xchg
jne
mov
aaa
fldt
xor
cmp
es
add
test
jbe
jns
add
jno
add
arpl
aaa
movsb
scas
lods
mov
shrl
pop
outsl
filds
push
jl
or
sbb
ja
lea
dec
in
inc
sub
int
sbb
jne
rcrl
rcll
xchg
xor
rdtsc
push
mov
dec
mov
mov
or
xchg
aad
fptan
cmc
pop
es
pop
xchg
arpl
jo
fidivrs
push
dec
lret
shlb
insl
out
testb
inc
mov
mov
sahf
jae
out
pop
cmc
sbb
push
mov
add
sbb
dec
jo
mov
mov
push
negb
loop
hlt
lock
push
or
pushf
lea
dec
adc
push
mov
out
pop
aas
xor
adc
fwait
add
mov
test
popf
incl
xchg
stos
push
outsl
cmpl
mov
inc
jae
mov
push
xchg
and
sub
mov
dec
loopne
jns
popf
mov
jb
es
and
dec
xor
das
mov
out
mov
lds
cmovp
cmp
jne
das
push
rorb
shl
out
mov
cli
stc
ret
and
dec
cwtl
ficoms
jo
mov
cmp
sahf
adc
sahf
cli
sti
or
cmp
inc
imul
sbb
push
xor
repnz
mov
pop
add
test
mov
rorb
jle
cli
pop
test
popf
xchg
and
push
mov
pusha
stos
pop
mov
jo
pusha
arpl
sbb
mov
jns
dec
mov
into
pop
add
sub
mov
ret
std
cld
xor
mov
mov
jp
test
hlt
orl
int
ret
mov
repz
dec
add
xchg
les
lret
repz
icebp
arpl
mov
fstpl
in
sbb
int3
pop
or
mov
test
or
in
mov
dec
inc
mul
mov
mov
shrl
cmp
or
mov
lods
pop
movl
jmp
sub
jne
scas
addb
movsb
cmp
adc
call
popa
adc
xchg
sti
jge
mov
mov
call
inc
cmp
inc
sub
cmc
pusha
lds
push
mov
mov
adc
push
push
xchg
adc
mov
in
ljmp
pop
pop
cmp
inc
jg
dec
jl
in
insb
fnsave
cwtl
mov
add
or
test
mov
mov
pop
stos
aaa
mov
call
mov
mov
bound
pop
adc
jge
xor
cmp
hlt
push
int
cmpsb
add
clc
enter
cmp
inc
and
push
mov
pop
dec
lcall
popa
xor
mov
scas
subl
cmc
or
pop
dec
xor
incb
shll
xchg
enter
xlat
gs
fwait
mov
cmp
ljmp
cmpsl
mov
or
pop
mov
inc
adc
les
jg
ja
fwait
repnz
out
adc
shlb
xor
leave
stos
inc
shlb
test
xchg
pusha
stc
mov
cmovge
add
shrl
add
lea
ficoms
loope
addr16
xchg
push
das
mov
leave
call
sbb
lret
inc
movaps
add
jnp
push
jg
adc
inc
rorl
in
movsb
add
mov
sbb
insb
movsb
scas
sahf
das
push
and
sub
aaa
lea
sub
mov
pusha
sub
cmpsb
mov
fnstenv
add
js
sbb
idivl
mov
inc
jnp
in
loope
sub
xor
jns
pop
mov
pop
movsb
sbb
mov
inc
xchg
clc
cs
push
cli
es
mov
js
inc
lret
scas
iret
xlat
cmpsl
cmpsb
call
pop
out
inc
mov
add
rcrb
push
lock
mov
xchg
cld
inc
fcmovu
cs
adc
loope
and
inc
cmc
mov
scas
adc
add
int3
mov
nop
xor
sbb
push
lcall
sub
int
test
sbb
cmpsb
cmc
jle
sub
xchg
mov
xor
rorl
inc
jl
sub
shrl
mov
xchg
dec
push
cmp
leave
pop
mov
sbb
push
or
jge
lahf
subb
nop
sub
sub
or
add
jae
jo
pop
test
mov
cmc
or
mov
test
mov
push
lods
mov
or
imul
mov
push
fucomp
rolb
pop
xchg
imul
cmp
adc
fmull
xchg
inc
cmpsl
shll
or
push
dec
iret
adc
add
fdivrp
push
ret
and
inc
gs
mov
cmp
mov
mov
inc
out
pop
fcompl
push
xchg
outsl
outsl
sbb
aad
sub
gs
in
dec
jbe
icebp
cmpsb
or
scas
cmp
pop
mov
mov
lret
mov
xor
cmp
icebp
mov
mov
jae
dec
push
xor
pop
outsl
mov
add
sti
xlat
std
call
cmp
cwtl
or
and
mov
outsl
lcall
iret
cmp
adc
cli
inc
in
lods
pop
add
dec
sbb
add
and
out
les
jg
fs
jnp
sub
iret
adc
fcoms
stos
lds
sub
push
or
xorl
sub
push
repz
mov
loope
sbb
popa
rolb
notl
sub
sbb
mov
push
in
xchg
test
jmp
leave
repnz
arpl
inc
nop
xchg
shr
div
cmp
lea
pop
outsb
dec
sub
pop
or
jmp
jl
cmp
pop
rorl
mov
sbb
push
xchg
fcoml
das
cmc
test
shrl
addr16
imull
and
sbb
jg
mov
xlat
or
jne
mov
mov
fwait
xchg
cmp
mov
sbbb
add
mov
dec
jne
popa
and
add
dec
cmp
lret
sbb
mov
popa
cmp
aam
add
mov
mov
mov
nop
push
cmc
adc
mov
int
repnz
add
icebp
dec
jns
mov
cmc
xchg
xchg
jg
adc
imul
xor
mov
in
xor
add
pusha
rcrl
aaa
nop
shl
inc
stos
out
adc
xorl
and
jne
iret
mov
jg
sbb
push
and
and
int3
sub
adc
sbb
or
jno
add
or
out
shlb
and
sti
and
imul
call
jl
mov
jle
das
xchg
fbstp
popf
mov
mov
cmp
daa
enter
mov
pop
call
jnp
lret
sahf
test
push
dec
pop
stos
addr16
inc
fnstcw
xchg
adc
and
cmp
scas
stos
pusha
cmpsb
xor
repnz
push
dec
out
jge
adc
cmp
test
fiaddl
call
pop
addl
add
adc
sbb
and
fisttpl
scas
rcll
xchg
je
pop
in
add
test
push
mov
sub
lcall
adc
popf
inc
mov
xor
xchg
rcl
dec
jne
pop
ffree
test
or
mov
sti
push
adc
in
mov
jg
mov
mov
movsb
inc
rolb
call
lcall
cmp
in
jno
push
jno
or
clts
mov
adc
add
loop
push
stc
adc
sbb
sub
mov
in
pusha
jo
push
xchg
mov
pushf
sahf
shrl
pop
icebp
dec
pop
add
lea
pop
test
xor
sbb
mov
mov
repz
sarl
and
fs
lods
pop
fs
mov
sub
or
xorb
cmpb
push
pop
inc
leave
loop
push
imulb
call
scas
adc
popf
dec
dec
fcmovb
dec
stc
pop
jno,pn
outsl
insb
dec
fwait
jno
ljmp
aad
jne
xor
repnz
fimuls
adc
mov
icebp
jns
xchg
in
rcrb
outsl
lea
jle
outsl
xor
inc
scas
cmp
je
jmp
outsb
popf
insl
pop
xchg
out
mov
mov
lods
add
pop
mov
push
sbb
dec
dec
push
ud1
dec
mov
pop
orb
aam
lea
fisttps
stc
in
push
in
jne
aad
ja
or
lahf
outsl
in
ret
mov
mov
sbb
je
xchg
and
stos
xchg
pop
cmp
dec
jecxz
pop
add
or
mov
jl
push
jge
push
add
outsb
fidivl
add
pop
mov
sbb
popf
sbb
mov
andb
movsb
test
bswap
es
and
aas
jbe
repnz
aaa
inc
dec
mov
jmp
mov
sarb
mov
cmpl
int3
push
xchg
lock
xor
inc
sub
and
arpl
inc
icebp
fstp
push
les
and
sbb
mov
xor
pop
mov
shlb
or
aas
and
and
jle
loop
mov
and
sti
insb
pop
inc
and
jle
test
mov
xor
int
jae
sahf
pop
dec
hlt
icebp
adc
adc
mov
xchg
xchg
fsubl
movsb
pushf
stc
pop
xchg
aas
jmp
mov
xor
je
cmpsb
jmp
push
div
addb
iret
icebp
inc
and
into
shlb
or
call
add
jmp
adc
jg
es
rcl
hlt
je
xchg
mov
adc
jo
aad
xor
push
xor
jo
push
ljmp
mov
lds
mov
aam
mov
ljmp
dec
xor
mov
lcall
lds
test
xchg
jne
stos
inc
adcl
xchg
ss
sbb
test
ss
aaa
and
xor
clc
fdivrl
or
adc
mov
stos
push
fnstsw
inc
jp
mov
int3
out
fwait
jno
and
iret
jle
popa
or
push
push
loopne
inc
pop
mov
mov
sahf
arpl
insb
aam
mov
mov
test
pop
lock
aaa
xor
cmp
jne
test
popf
jb
xor
mov
call
pop
loope
push
cmp
xchg
dec
dec
lret
cmp
arpl
stos
dec
popf
lock
ja
jmp
mov
pop
sbb
sti
pop
cmp
sub
adcl
jb
scas
pop
and
sub
es
sbb
insb
in
int3
pop
das
test
in
adc
mov
lds
jmp
cwtl
fdivr
add
cli
sub
jno
sbb
cmp
stc
jle
rcrl
and
lahf
popf
int3
cmc
hlt
jecxz
mov
jae
or
int3
mov
dec
sub
iret
and
adcb
xchg
jns
scas
add
push
and
out
gs
enter
mov
stos
insb
popf
pop
ja
mov
push
cli
into
lahf
subb
ljmp
je
mov
rorb
test
xchg
out
push
cld
mov
js
mov
push
lods
jp
lcall
mov
sub
movsb
xor
rolb
orb
insb
pop
jge
icebp
rcrl
pop
jg
lds
cmp
in
jl
jge
and
push
jbe
imul
rorb
pop
mov
mov
mov
dec
sbb
fs
notb
icebp
rcrb
or
ret
movsb
pop
iret
cmp
jne
sub
cmpsb
or
jnp
xchg
int
cmp
mov
repz
xor
shlb
aad
jl
add
sti
mov
adc
add
aas
dec
mov
enter
shll
mov
xor
jnp
ja
xor
adc
push
push
rorl
cmp
cltd
pop
pop
loop
mov
xlat
xor
jp
xor
inc
inc
mov
mov
addr16
insb
add
loopne
mov
sub
xchg
xchg
mov
inc
fdivrl
jae
xchg
fisttpll
gs
xor
adc
xchg
loopne
mov
jmp
mov
std
xor
and
lea
xchg
loop
cld
lds
lcall
or
xor
xchg
pop
in
inc
cld
mov
ljmp
or
push
lds
mov
dec
add
xlat
sub
dec
inc
stos
ja
adc
out
lret
xchg
clc
imul
or
aaa
in
inc
and
mov
scas
ret
dec
mov
fmuls
sub
push
ret
data16
sbb
fldenv
cli
clc
movsb
dec
xlat
cmp
jmp
push
pop
pop
xchg
lret
mov
push
and
pushf
pop
movsb
cmp
hlt
addr16
xchg
outsl
inc
int3
lahf
insl
xor
add
push
inc
bound
int3
scas
pop
inc
iret
adc
xor
mov
inc
push
push
add
je
ja
xchg
jl
popa
mov
sbb
or
jnp
xchg
lret
addr16
jne
or
cs
iret
inc
enter
lea
push
mov
inc
mov
fwait
repz
dec
in
lea
cmp
popa
or
jne
lea
cmp
mov
mov
ljmp
mov
outsb
mov
test
jne
xor
jne
mull
stos
sbb
jle
or
icebp
xorb
cmpsl
es
jmp
cmp
rolb
mov
fisttpl
inc
outsl
pop
pop
fisubrs
push
add
mov
aam
in
inc
stos
pop
into
push
out
sti
and
ja
xchg
cltd
sbbb
pop
sbb
jae
sbb
and
xchg
cli
dec
jl
adc
add
sbb
mov
hlt
mov
adc
loop
cmp
and
pop
fsubs
cmp
jae
out
jp
dec
pop
js
jle
cmp
repnz
xchg
cs
or
pop
loopne
jp
jbe
pop
ds
push
or
sub
inc
mov
icebp
fldcw
xchg
mov
jbe
add
shlb
nop
mov
rorb
mov
arpl
pop
jl
mov
and
fsubrs
or
std
sub
push
jge
hlt
push
xchg
sub
iret
xor
aas
xchg
mov
fs
aas
dec
sahf
xlat
popl
mov
imul
lret
pop
rclb
outsl
jl
sub
pop
mov
mov
xchg
lret
adc
jecxz
fdivrs
push
fs
mov
mov
fsubs
scas
ret
adc
push
xchg
dec
xor
add
shr
mov
add
dec
inc
test
mov
xor
pushf
jnp
das
jnp
sbb
and
push
enter
push
inc
jp
mov
lcall
adc
inc
mov
lret
test
lea
movsb
bound
repz
sti
pop
es
cmp
jle
jmp
enter
xchg
fisubrl
and
dec
jecxz
or
loop
test
xor
mov
shl
loop
and
loopne
pusha
std
jns
mov
fldt
inc
jb
inc
fsubs
jae
mov
jl
inc
mov
inc
pop
test
mov
sub
mov
mov
aam
cmp
addr16
or
jo
xchg
and
mov
popf
in
sbb
in
push
lea
inc
loopne
lock
xchg
lret
dec
or
loopne
dec
into
xlat
inc
push
jmp
and
push
xor
add
xchg
notb
pop
dec
fs
in
and
out
mov
ds
jl
or
or
dec
pop
repz
lcall
gs
lcall
mov
push
mov
iret
xchg
inc
dec
inc
add
roll
iret
and
jns
jg
sub
mov
cld
pop
lret
mov
mov
jae
call
hlt
mov
mov
push
fcmovne
in
mov
out
mov
adc
and
cmpsb
lods
pop
xor
jp
inc
jg
cltd
or
cs
jmp
push
shll
sub
push
add
mov
pop
inc
sub
sbb
fcomp
mov
adc
shlb
mov
jp
sbb
jns
jno
mov
shll
sbb
jg
mov
pop
int
cmp
and
push
add
and
sbb
xchg
mov
xchg
pop
data16
push
or
lcall
cmp
fldl
movsb
test
add
cmp
xor
push
push
xchg
lahf
xlat
inc
pop
mov
arpl
aad
je
data16
ret
push
lock
add
push
dec
mov
sub
jecxz
xor
fmull
fstl
cmpsb
fsubs
enter
sub
in
cmovg
pop
aad
jmp
cli
jnp
adc
shrb
jns
les
lret
roll
test
loope
or
inc
es
scas
and
push
pop
jo
stc
aam
iret
cmpsb
cmp
sbb
loopne
ret
aaa
jl
popf
sbb
cwtl
sti
xchg
lret
mov
ds
sub
jp
sbb
sbb
cmp
jp
into
xchg
jno
enter
add
xchg
sub
loope
push
pop
jp
push
movsb
xlat
enter
bound
jge
sub
std
out
mov
pushf
jne
mov
dec
insl
mov
inc
fcmovnu
hlt
scas
push
jne
hlt
sbb
or
in
push
xrelease
mov
mov
sub
add
mov
mov
mov
add
xor
mov
mov
xor
add
jne
mov
xor
mov
add
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
xor
xor
sub
add
push
adc
push
and
mov
mov
add
mov
addl
mov
sub
movl
movl
xor
mov
orl
mov
sub
movl
cmpl
je
cmpl
jb
jmp
push
push
push
call
cmpl
jne
xor
or
dec
mov
mov
dec
mov
jmp
mov
subl
xorl
mov
neg
mov
sub
mov
orl
addl
mov
adc
mov
add
sub
add
mov
orl
adc
mov
mov
adc
sub
xor
mov
orl
mov
negl
mov
sub
xor
xor
xor
xor
sub
or
mov
or
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jb
jmp
push
push
pushl
push
call
jmp
mov
mov
xor
adcl
mov
andl
add
or
orl
mov
movl
cmpl
je
cmpl
jle
jmp
pushl
call
cmpl
jne
xor
add
dec
mov
mov
dec
mov
jmp
mov
mov
sub
mov
orl
mov
xor
add
push
mov
xor
add
push
mov
xor
add
push
lea
push
pushl
pushl
call
test
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
mov
lea
mov
incl
mov
test
je
lea
mov
mov
mov
mov
mov
jmp
mov
movsl
aas
jns
jns
pop
popw
inc
cmpsl
test
jno
xchg
jl
mov
test
repz
and
mov
dec
stc
in
mov
push
dec
mov
jp
jbe
pop
jb
in
cmovne
mov
aaa
jge
cmp
rolb
adc
push
inc
out
adcb
push
xlat
movsb
jle
dec
dec
jecxz
and
aad
imul
cmp
je
pop
or
imul
test
pop
and
sahf
inc
jns
hlt
cmpsl
mov
pop
mov
inc
mov
jae
or
stc
and
inc
jecxz
add
xor
movl
pop
add
xchg
inc
in
jno
push
lret
ja
inc
loop
xchg
cmp
sbb
clc
stos
add
jae
std
inc
rcrb
pop
insl
loope
ds
lds
into
fdiv
pop
mov
cld
push
movsl
nop
into
into
outsl
mov
fyl2xp1
lret
leave
sub
mov
out
dec
iret
adc
sub
icebp
push
sarl
push
popf
cmpsb
sbb
push
jle
push
sub
rcr
xchg
mull
loope
es
mov
stos
scas
push
test
sub
gs
sbb
stos
mov
add
adc
cmp
add
ret
push
mov
in
sbb
mov
xchg
fiaddl
out
jle
mov
rdtsc
cs
inc
mov
inc
ret
rorb
sbb
rclb
adc
ja
push
fld
fldt
fsubs
xor
into
mov
sti
add
dec
lock
push
sub
mov
dec
je
je
scas
lock
sbb
xlat
lret
cli
and
push
mov
dec
and
fcmovne
clc
int
push
cmp
hlt
jno
nop
test
pop
hlt
aam
adc
sbbb
outsb
sub
dec
insl
adc
mov
jns
sbb
call
filds
dec
jp
test
popa
fs
stos
fisubs
cmp
mov
sub
pop
lods
jmp
fsubl
call
push
sub
and
clc
loop
jb
xchg
adc
jb
arpl
xlat
xchg
and
popw
pop
or
dec
mov
pop
repnz
enter
xor
mov
xchg
jp
push
adc
sbb
inc
cmp
pop
xchg
fcmovbe
push
sbb
pushw
cmp
or
bswap
lods
test
out
stc
aam
test
shll
jg
push
stos
mov
cmp
xchg
pushf
push
out
repnz
xor
lods
lcall
dec
rol
pushf
cltd
lea
mov
int
into
jb
pusha
add
rolb
jp
dec
mov
push
imul
mov
sub
cmp
fdivs
fwait
inc
mov
lods
int3
dec
je
adc
or
test
fstps
popa
imul
mov
dec
cmc
mov
fmull
xor
stos
inc
ljmp
inc
and
mov
test
inc
inc
call
addb
mov
cmp
enter
pushf
addr16
add
sub
addb
cmc
xchg
cwtl
mov
hlt
loop
sarb
fcmovnu
mov
pop
repnz
stos
lock
xor
push
aad
js
test
je
mov
inc
fiadds
mov
je
out
dec
cmc
setge
add
insl
sbb
push
nop
mov
mov
lret
ja
pop
cmp
imul
mov
aas
cmpb
mov
jmp
push
cmp
dec
add
call
fucom
adc
test
pop
xchg
cwtl
sti
loop
xor
push
pop
pop
gs
dec
mov
int
push
leave
das
mov
fimull
mov
xlat
insl
sar
or
cmpb
test
movsb
cmpsl
das
std
xchg
sbb
mov
mov
clc
xchg
push
mov
inc
pop
scas
enter
jbe
stos
out
filds
inc
iret
pop
push
xor
jns
mov
jo
jne
les
add
xor
fstps
lcall
sbb
push
lcall
add
xchg
mov
das
adc
insl
ljmp
xchg
xlat
mov
int
jle
jecxz
decb
dec
sahf
test
scas
jnp
cmpsb
gs
cmp
xchg
pop
mov
ret
xor
xacquire
pop
idiv
pusha
stos
add
inc
cwtl
xchg
add
pop
mov
xor
mov
add
cmp
enter
fcompl
int
sbb
jle
clc
dec
das
loop
vpmovsxwq
push
mov
push
dec
pop
add
fnstsw
xchg
or
sbb
cmpsl
mov
dec
aad
idivl
xchg
xor
mov
fstl
and
dec
out
and
and
addb
and
xchg
ss
cmpsl
mov
add
lods
sub
xor
and
inc
mov
cmp
leave
inc
and
sbb
int3
jo
mov
and
rol
and
test
mov
fists
shl
popa
enter
mov
jns
add
xchg
inc
mov
xchg
into
aas
push
shrb
mov
leave
scas
pop
orb
popf
mov
and
in
push
jmp
xchg
inc
outsl
lret
out
inc
jl
or
mov
push
or
dec
leave
adc
cmp
cs
rorb
ret
jl
xor
into
cli
or
arpl
fadds
das
push
ss
arpl
mov
fidivrl
inc
mov
dec
sahf
fs
push
icebp
xor
movd
sub
loopne
cmp
daa
cmpsl
cmpsl
pop
xchg
dec
test
jbe
stos
gs
divl
nop
rol
mov
daa
xchg
or
test
xchg
lret
ret
or
and
push
stos
nop
add
jp
cmp
mov
push
or
dec
sbb
out
icebp
jp
fnstsw
pop
dec
adc
pop
mov
jge
imul
in
pavgw
pop
sub
mov
cwtl
cs
mov
aaa
clc
enter
push
pop
or
push
mov
imul
jbe
pusha
sub
mov
xor
adc
mov
mov
sub
fs
mov
cli
adc
add
jmp
ja
divl
roll
xchg
pop
cld
shll
sbb
or
pop
jbe
inc
out
or
push
and
mov
xchg
xor
adc
cmp
movsl
jmp
xchg
sbb
push
test
cwtl
ljmp
inc
dec
xchg
mov
and
sub
mov
push
out
pop
out
pop
imul
mov
divb
shlb
jo
loope
add
sub
adc
or
enter
inc
inc
aas
pop
scas
push
popf
and
rsm
leave
fprem
aad
lcall
and
push
fdivs
push
adc
mov
push
iret
jno
repnz
push
movsb
jmp
and
xor
fwait
nop
or
cli
fwait
scas
sbb
adc
or
out
sub
jnp
arpl
movsb
xor
and
lcall
dec
out
mov
clc
popa
in
sub
aas
lods
mov
shl
enter
mov
or
push
ss
inc
pop
je
add
or
mov
imul
push
jge
movsl
or
adc
add
cmp
xlat
mov
dec
inc
lret
xor
scas
pop
adc
cli
rcrb
sbbl
xchg
sahf
sbb
or
push
mov
sub
or
mov
fs
xor
and
fst
adc
ja
and
jne
dec
mov
test
add
shr
in
dec
dec
sti
push
or
mov
lock
pop
pop
shll
or
jns
gs
push
testl
or
mov
iret
cld
decl
rcrl
fnsave
imul
out
dec
pushf
push
cmc
das
jnp
or
dec
fwait
daa
and
filds
xchg
fsubl
pop
loopne
mov
in
dec
mov
daa
es
hlt
mov
pop
cmp
dec
push
inc
cmp
shr
enter
add
dec
cmp
mov
mov
cld
pop
jp
lods
mov
mov
jns
loopne
test
sub
mov
mov
mov
or
and
ret
lret
pop
push
adc
xchg
outsl
cmp
sub
lret
adc
test
push
lret
xchg
xchg
xor
loope
into
mov
pop
mov
xchg
in
mov
mov
in
mov
mov
stc
nop
jg
and
aam
movsb
test
into
xchg
fiaddl
mov
mov
int3
xchg
inc
xchg
jns
pop
ss
aam
out
lock
repz
adc
push
sub
stos
ret
je
cmpsl
inc
or
ficompl
sbb
mov
sub
ret
add
mov
push
xchg
ljmp
xchg
lods
sbb
sahf
sub
push
jge
daa
mov
or
jbe
mov
das
xchg
pop
movsl
inc
inc
dec
xor
movsl
mov
inc
jnp
inc
push
outsb
push
sub
sti
push
into
inc
test
mov
testl
and
repz
fs
push
cmp
mov
movl
and
movsl
mov
insb
sbb
push
je
add
add
mov
aad
cmpsb
mov
rol
rclb
adc
xor
cld
xchg
mov
in
in
insb
mov
hlt
lock
sbb
outsb
inc
push
add
push
cmc
mov
or
andl
lods
ljmp
andb
dec
outsb
add
js
mov
or
repz
add
inc
xchg
shrb
cmpsb
gs
aam
ss
pop
and
dec
rorl
addr16
popa
les
ficompl
ficomps
jne
lcall
xor
lret
sbb
js
rcll
push
addb
mov
add
push
dec
mov
repnz
stc
push
pop
and
xchg
sbb
lret
mov
jae
and
push
mov
daa
andb
gs
xor
pop
dec
cltd
mov
lock
dec
mov
lea
inc
ret
mov
pop
mull
int
xchg
out
xor
jae
aas
dec
loopne
adc
pop
or
pop
mov
inc
fnstenv
pop
lahf
mov
adc
scas
cli
icebp
stos
cmpsb
mov
inc
ret
bound
sub
inc
dec
mov
sub
sahf
xchg
jecxz
cmc
xchg
sbb
jmp
int3
push
mov
in
add
neg
push
fmuls
sbb
jnp
xor
or
test
ret
loope
sti
sub
jnp
roll
subb
inc
aaa
aam
push
and
mov
movsl
loopne
or
mov
in
sti
filds
mov
mov
jmp
mov
es
dec
inc
adc
aam
fcompl
pop
inc
nop
cltd
inc
xchg
and
gs
sbb
cltd
arpl
sbb
adc
adc
push
test
out
dec
jne
adc
popa
cmc
cs
out
addl
sub
test
fsubr
xchg
mov
sbb
iret
xchg
or
movsb
ds
movsl
repz
xor
xor
or
pop
dec
lret
inc
push
in
jmp
inc
bound
sub
dec
inc
loop
cmp
test
orl
mov
movsl
imul
add
je
movsl
leave
scas
lret
test
insl
sarb
and
js
push
mov
pop
or
out
mov
xlat
dec
inc
fisubrl
fnsetpm(287
arpl
xor
adc
ds
jecxz
xor
fwait
adc
fildll
jno
inc
loopne
inc
popf
insl
xchg
insl
lods
mov
int3
and
loope
pusha
xchg
lds
mov
mov
sbb
inc
pop
sub
xchg
sbb
adc
sbb
sub
or
lods
outsb
test
xorl
lret
dec
outsb
pop
and
scas
cld
push
subl
mov
fistps
daa
lds
cld
ret
mov
xor
pop
daa
xor
xor
mov
out
inc
mov
pop
outsl
subb
mov
mov
push
sub
mov
push
jns
fucomi
sbb
fidivrl
jp
jno
sbb
into
nop
mov
fistpl
mov
fstl
mov
mov
adc
sti
fiadds
jnp
popa
test
insl
in
daa
out
into
dec
fidivl
popa
fs
add
pop
mov
daa
cmp
flds
dec
push
dec
popf
jo
cltd
cld
and
imul
in
cmp
jb
inc
stos
in
pop
xchg
jbe
fs
pusha
idiv
arpl
mov
xchg
push
fdivs
jno
add
push
subb
andb
getsec
stos
push
testl
fcmove
jp
sti
int3
add
outsb
and
jne
inc
js
mov
icebp
mov
push
lcall
aam
call
test
jno
mov
push
out
shlb
loopne
inc
xor
xlat
dec
out
jecxz
push
std
sti
js
xchg
cli
icebp
loopnew
adc
mov
cmc
add
ja
out
mov
sub
rcl
xor
sahf
add
cltd
mov
and
add
int
mov
cmp
in
jo
popf
out
hlt
and
inc
mov
sbb
negl
fidivs
and
mov
mov
jl
pop
cli
inc
faddl
xor
jmp
inc
test
lods
dec
mov
push
mov
push
adc
lea
mov
mov
clc
cmp
icebp
cmpsb
cli
rcrl
mov
test
in
subb
scas
imul
sahf
mov
add
sub
and
fistpll
in
mov
movsb
ret
in
mov
xor
and
push
int3
xchg
mov
cmc
xlat
mov
popa
negl
fistps
xor
cmp
int3
push
xor
iret
cmpsl
fcompl
sub
mov
xor
xor
push
lods
push
mov
adc
add
lods
xchg
dec
jnp
jp
inc
push
lods
arpl
push
jp
mov
fildl
repz
outsb
aam
gs
adc
sahf
jl
xchg
xor
stc
out
sbb
add
mov
sbb
and
clc
mov
lret
adc
mov
dec
lods
bound
repnz
stc
push
ror
adc
mov
mov
mov
adc
mov
repz
adc
sub
jno
ljmp
dec
add
pop
lods
push
hlt
sub
loope
fnstenv
bound
add
scas
orb
sbb
fstps
insb
xchg
hlt
test
into
xlat
shrb
shrb
add
jmp
icebp
cmc
xchg
cmpsb
in
jae
xlat
adc
dec
clc
test
dec
insl
add
stc
mov
pop
jp
dec
hlt
mov
jg
cli
sbb
mov
das
dec
arpl
insl
jb,pn
aad
jmp
add
leave
hlt
pop
cmc
jge
imul
out
enter
notb
jecxz
xchg
pop
xlat
iret
mov
ljmp
jns
jo
shl
addb
adc
scas
outsl
addr16
pop
pop
mov
subl
movsb
int3
xchg
stos
aam
insb
jl
in
shll
in
test
sbb
xor
aaa
pop
fisttpl
mov
mov
fxch
sub
stc
push
insl
bound
dec
jmp
jp
push
inc
mov
sub
rorb
mov
push
dec
dec
pop
inc
add
pop
in
std
in
pop
and
sahf
in
push
adc
test
push
mov
adc
add
mov
movsl
btc
stos
iret
lods
hlt
pop
test
and
push
pop
inc
stos
mov
sar
mov
arpl
outsl
inc
inc
add
mov
adc
pop
mov
cmp
das
xor
fwait
ret
push
sub
dec
arpl
idivb
inc
jle
pop
push
sub
cli
cltd
icebp
enter
ds
xchg
test
inc
insb
fisttps
sbbb
jnp
pop
sub
sbb
mov
imulb
sahf
lahf
bound
call
mov
cmp
fsts
xchg
or
xor
xchg
popf
out
pop
adc
rcrl
jb
testl
sbb
incl
cmp
cltd
movsl
test
jo
xorl
jp
and
push
mov
dec
aam
pusha
out
nop
or
push
sub
insl
iret
shrb
xchg
test
iret
push
push
push
outsl
mov
mov
push
lahf
aam
call
shrb
pop
add
mov
int3
add
cmp
cmc
push
jnp
push
fs
les
pop
jb
fs
jle
seta
mov
lea
data16
call
jmp
xorl
call
xchg
sbb
adc
xor
or
push
ljmp
dec
inc
cwtl
and
mov
addl
pop
clc
icebp
or
cld
and
mov
int
xlat
repz
and
fcmovnb
inc
mov
inc
xorl
jns
std
mov
cmp
xchg
and
sarl
sbb
dec
into
xor
cwtl
add
test
je
jae
and
adc
add
addr16
xor
cmp
xor
dec
mov
sbb
js
or
add
iret
and
ljmp
jecxz
dec
andl
out
xor
pop
shr
aas
je
aam
mov
aaa
int3
out
push
mov
mov
adc
dec
loopne
mov
ja
xchg
imul
push
xorb
insb
add
cs
stos
inc
imul
out
jp
ljmp
sti
iret
popa
xchg
stos
mov
xchg
mov
mov
xchg
loop
js
ja,pn
cmpsb
adc
out
inc
jo
shlb
and
cmp
into
pop
sub
loopne
mov
mov
add
sbb
outsb
mov
cli
stos
xchg
imul
sbb
cmpsl
jns
adc
cmpsl
push
and
fisubl
xchg
in
adc
fsubrl
outsb
push
int
test
and
ljmp
jmp
mov
jo
dec
loopne
xchg
enter
push
loop
hlt
pop
xor
pop
pop
in
lds
shlb
push
cmp
jno
jae
fiadds
adc
jmp
sahf
fldln2
cld
popf
shll
rclb
int
loope
aas
mov
adc
ss
inc
adc
push
xor
cmp
mov
cmp
add
sub
es
aad
xor
daa
and
cwtl
outsl
out
sub
and
adc
popa
mov
push
xor
fwait
add
lahf
scas
sbb
jne
xor
in
leave
cmp
hlt
imull
or
leave
inc
sbb
xor
push
cmp
repnz
ja
pop
mov
mov
fs
fs
mov
iret
xchg
cmp
push
insb
stos
out
rcrl
cmpsb
out
and
and
je
dec
insb
pop
arpl
pop
cmp
not
and
loop
cmc
inc
outsl
mov
ja
mov
xchg
imul
sarb
fisttpll
inc
xchg
push
ret
xor
lds
jl
loopne
ret
pop
inc
negb
mov
outsl
or
clc
pop
popa
and
lods
jg
mov
mov
push
icebp
jg
xor
loopne
push
sbb
mov
imul
mov
lea
xchg
inc
jl
mov
cli
into
or
insl
dec
sbb
push
gs
jo
or
xlat
stos
fldt
lods
pop
sbb
xchg
outsl
insb
loop
scas
adc
or
adc
cltd
bound
ret
leave
hlt
or
outsl
in
or
jecxz
fdivs
inc
mov
mov
push
pop
jle
adc
sbb
stos
mov
repz
rclb
lods
or
imul
stc
pushl
into
int3
cmp
xchg
push
sbb
iret
cmp
sub
int
inc
inc
pop
fsubrl
mov
sub
insl
cs
nop
sahf
sbb
xlat
negl
test
or
xchg
fisubrl
cmpsb
add
sti
sbb
mov
je
loop
sub
xchg
dec
add
call
xor
dec
dec
ficoms
push
lret
iret
int
mov
xchg
xchg
cmpsl
xor
push
xorb
sub
sbb
push
cli
pop
iret
popa
inc
mov
cmp
dec
mov
jb
dec
psrad
jbe
sti
pop
xchg
sbb
sbb
stos
imul
mov
dec
jp
and
inc
cmpb
fstps
lret
inc
lods
sahf
or
and
fst
xor
fs
adc
inc
test
inc
into
sbb
aad
fisttpll
jle
xchg
mov
mov
gs
pop
ror
icebp
mov
jbe
call
shl
fists
mov
fwait
cmp
aam
pop
xchg
jb
iret
aas
add
lods
pushf
lods
in
shrl
push
pop
xlat
jp
jbe
mov
in
cld
cmc
pop
aas
aaa
mov
push
inc
data16
repnz
aaa
xchg
jle
xor
inc
xchg
repz
daa
xchg
mov
mov
jmp
mov
lds
mov
aaa
es
test
ret
push
mov
les
leave
cmp
pop
lcall
jge
inc
lea
pushf
cmp
jae
lcall
adc
lahf
and
or
jae
cs
jp
lock
adc
pop
jae
adc
sbb
inc
les
loop
test
lea
arpl
mov
and
repz
pop
ljmp
pop
rcll
adc
sbb
aam
ror
repz
mov
xchg
enter
lea
arpl
push
cmpsb
add
dec
addr16
frndint
bound
dec
jle
jmp
fwait
gs
push
adc
ljmp
dec
and
xor
push
add
mov
sub
testb
jno
inc
pop
push
xchg
pusha
xchg
ds
pushf
cli
mov
in
pop
pop
pop
fcoms
cli
jge
pop
fisubrl
adc
pop
jle
in
ret
outsl
dec
jle
repnz
xchg
ret
sarl
mov
mov
lock
sahf
sarl
call
repnz
out
clc
testl
sti
cld
pop
push
scas
xchg
loop
jns,pn
jo
jns
leave
lret
shlb
fldcw
call
lcall
imul
mov
lahf
es
mov
in
pusha
jge
push
push
pop
adc
das
jb
adc
icebp
andl
cmp
pop
mov
leave
mov
cmpsl
cmp
lods
pop
shrb
repz
xor
pop
fcoml
pop
push
sbb
xchg
fimuls
mov
jno
mov
stos
inc
imul
ds
push
adc
icebp
popa
or
mov
dec
cmp
daa
icebp
dec
jecxz
adc
or
popf
mov
dec
mov
ljmp
mov
dec
sbb
and
fdiv
cmp
cmp
xlat
jge
mov
cwtl
fnstenv
scas
subb
cmpsb
daa
pop
push
aad
and
mov
push
clc
or
or
loopne
mov
outsb
lods
das
jmp
in
aaa
jle
mov
sbb
push
outsl
adcb
in
scas
ds
push
cmp
popw
movsl
out
sub
fxam
loope
in
or
dec
mov
pop
sbb
std
loop
jno
cmp
mov
pushf
adc
int3
test
loope
repz
sbb
cld
insb
loopne
pop
bound
hlt
cmp
pop
scas
push
mov
pop
and
add
test
int
pop
lock
out
sbb
pop
lahf
sub
neg
dec
xor
inc
cmc
outsl
outsl
push
insl
add
test
cmp
loope
popa
and
add
cmp
shlb
daa
add
mov
fdiv
shlb
mov
mov
sbb
jl
stc
das
dec
fcmove
jns
fcmovne
mov
sub
inc
sbb
in
jg
add
fimuls
jo
popf
jo
loop
test
je
cmpsl
and
mov
xor
and
cs
jp
sbb
jae
out
adc
imul
adc
movsb
jbe
imul
scas
in
add
inc
mov
mov
sbb
mov
cli
mov
inc
mov
jne
movsl
push
orb
mov
jae
nop
xchg
shr
xchg
and
hlt
movsb
xor
pop
sbb
movsb
push
xor
jl
into
and
pop
adc
inc
idivb
icebp
adc
xchg
xor
xchg
push
and
movsb
mov
stc
out
or
push
rcr
sti
arpl
dec
jmp
scas
xor
or
jbe
cmp
push
decb
std
mov
pusha
loopne
lods
jnp
insb
mov
mov
dec
arpl
sti
shl
cmp
pop
std
inc
push
inc
arpl
aam
dec
mov
test
in
push
or
cmp
and
orb
xor
data16
movsl
and
ss
hlt
repnz
or
add
jns
mov
cli
into
addl
test
pusha
ss
xor
pusha
mov
out
ret
and
mov
fwait
mov
gs
das
cmpsl
daa
mov
std
or
jae
shl
jo
call
or
out
sbb
int
mov
das
push
aam
xchg
or
xchg
les
pop
dec
jbe
in
into
dec
ret
les
sbb
add
call
sbb
fidivs
lock
push
outsl
push
shl
jl
ret
rorb
addr16
xchg
xchg
outsb
push
cmpl
pop
scas
jp
in
in
movsl
push
xor
test
pop
mov
inc
jl
std
xchg
xchg
mov
adc
push
pop
addr16
fsub
rolb
or
mov
push
add
lret
push
dec
sub
or
push
repnz
loop
push
pop
aam
inc
testl
gs
cmp
cmp
pop
mov
sahf
sbb
mov
iret
lret
dec
add
and
call
xchg
mov
out
mov
inc
scas
insl
dec
out
dec
inc
imul
insb
call
cmp
push
dec
push
lret
xlat
and
icebp
xchg
loopne
test
jmp
xchg
in
lea
cmp
fnstcw
frstor
fimuls
push
ret
decl
mov
or
popf
mov
movsl
lret
cld
sub
aas
clc
ljmp
and
daa
es
push
dec
push
test
push
and
jne
fidivl
icebp
and
in
jae
inc
mov
sbb
add
mov
dec
loop
jno
call
or
je
cmc
mov
xchg
add
mov
jmp
fwait
lods
lret
push
or
scas
cs
cmpsb
popf
ret
sub
mov
add
out
out
int
jecxz
dec
sub
ficomps
mov
pop
loope
loop
out
or
cltd
add
inc
rorl
push
in
push
mov
inc
xor
xchg
jecxz
in
jg
xchg
aaa
lods
rclb
add
int3
cli
push
and
loope
lods
movsb
aam
cmp
pop
dec
dec
sub
jle
mov
xchg
adc
loope
fists
cld
aad
shl
add
mov
inc
add
inc
mov
lcall
xchg
faddl
sub
leave
push
adcb
insb
ja
or
jecxz
lahf
loope
xchg
push
add
les
ret
cmp
sbb
jl
pushf
xor
xchg
nop
sbb
cmpsb
and
pushf
or
outsl
and
xorl
mov
lods
mov
fbstp
das
cmp
add
add
out
out
mov
dec
mov
push
outsb
mov
or
mov
jns
add
mov
pop
fnstenv
dec
and
aaa
xchg
mov
ja
stc
jns
scas
ss
pop
data16
xchg
repnz
add
mov
lods
adc
popa
jnp
and
and
and
hlt
or
jmp
icebp
cmc
lcall
or
inc
test
and
stos
mulb
dec
shrd
cmpsl
inc
dec
mov
fbstp
sbb
or
xor
mov
mov
add
push
fsubrs
pop
xchg
je
dec
aas
mov
mov
inc
sbb
add
and
ds
cld
lods
imul
fstps
test
pop
inc
pop
pop
rcll
adc
cmpsl
idiv
add
lcall
insb
or
icebp
ljmp
in
out
jle
pop
sub
mov
imul
insl
fdivl
push
ljmp
mov
stos
pop
sub
sbb
xor
push
aad
jl
pop
outsl
push
or
lods
dec
push
rcr
nop
lahf
cmpsl
dec
shl
add
icebp
lea
push
jp
mov
jne
cmp
cmp
outsb
iret
xor
push
xchg
gs
rcl
xlat
mov
jb
jbe
jmp
mov
mov
pop
xchg
repz
and
insb
and
sbb
lock
ss
xchg
iret
xchg
cmp
lcall
jb
cmp
pop
mov
inc
xchg
scas
test
pop
xchg
iret
cld
pop
ret
cmpsl
popa
js
xor
je
imul
stos
outsb
jge
jl
test
and
ret
inc
dec
cld
lahf
add
fldt
pushf
dec
jecxz
push
xchg
fnsave
inc
andb
inc
fdivrl
mov
out
mov
mov
pushf
divl
fisubrs
xchg
sub
sub
test
adc
lods
xchg
cs
jecxz
lret
cmp
leave
subb
pop
push
cmpsl
cltd
js,pt
into
imul
mov
int
mov
mov
cmp
jmp
jno
jns
andb
and
inc
sbb
or
lods
mov
sbb
inc
stos
push
mov
push
in
test
dec
pop
stos
adc
cmpsl
in
lock
ljmp
rclb
call
shrb
subb
push
adc
mov
cmp
push
lret
je
mov
mov
mov
pop
mov
mov
xor
add
repz
inc
out
pop
cmc
ja
enter
es
testb
pop
sbb
movsl
sub
mov
mov
xor
mov
sub
add
mov
movl
movl
mov
mov
pushl
mov
mov
pushl
pushl
pushl
pushl
pushl
pushl
pushl
mov
call
pop
pop
leave
ret
push
mov
sub
add
push
push
movzwl
or
push
movl
lea
mov
movl
sub
lea
xor
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jbe
jmp
push
pushl
pushl
push
call
jmp
mov
mov
or
mov
xor
decl
add
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jl
jmp
push
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
mov
mov
movl
cmpl
je
cmpl
jg
jmp
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
add
mov
mov
sbb
mov
movl
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jle
jmp
pushl
push
push
call
jmp
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jb
jmp
pushl
push
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
orl
add
movl
cmp
movl
je
mov
movl
jmp
sbb
mov
mov
adc
mov
or
movl
cmp
movl
jne
movl
cmp
movl
jne
movl
push
movl
push
movl
jmp
mov
mov
mov
cmp
movl
jne
cmp
movl
jne
push
movl
push
jmp
mov
mov
mov
cmp
jne
movl
cmp
jne
movl
push
movl
push
movl
jmp
mov
mov
movl
cmp
jne
cmp
movl
jne
movl
push
movl
push
movl
jmp
mov
mov
mov
mov
movl
cmp
movl
jne
cmp
movl
jne
sbb
mov
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jge
jmp
pushl
pushl
pushl
push
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
xor
add
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jbe
jmp
pushl
push
push
push
push
call
jmp
mov
mov
mov
xor
add
imul
mov
xor
add
cmp
mov
mov
je
mov
add
mov
mov
xor
add
imul
mov
jmp
mov
xor
mov
mov
xor
sub
add
mov
mov
add
mov
mov
mov
xor
xor
lea
mov
xor
add
imul
mov
jmp
sbb
cmp
inc
fst
inc
and
sbb
sbb
lret
push
push
mov
loope
pushf
addr16
sti
cmpsb
sahf
call
xorb
mov
jp
mov
pusha
outsb
sbb
int
push
scas
dec
jno
testb
insl
lahf
inc
and
or
xor
inc
pop
pop
push
and
iret
cmp
adc
cli
in
inc
scas
sbb
jnp
dec
mov
add
ret
pop
std
imul
sub
test
add
jo
mov
jnp
jge
hlt
int
out
mov
ret
mov
or
pop
inc
in
lret
fisttps
xchg
xorl
jg
data16
mov
ret
pusha
and
mov
enter
push
fwait
add
add
rorb
cltd
pop
pop
cltd
stos
push
loopne
fimull
out
mov
pop
adc
fs
jo
xchg
fwait
ret
loopne
outsl
inc
jne
cs
mov
cld
in
outsb
or
adc
aas
inc
int3
inc
out
mov
xchg
jno
std
repz
in
adc
in
add
scas
pop
xor
pop
fsub
dec
xor
adc
mov
vpcmpeqd
push
mov
mov
jns
sbb
sarl
mov
jmp
xlat
ljmp
cmp
xor
sub
aad
push
sub
or
inc
push
mov
and
mov
mov
movsl
mov
xlat
daa
push
out
sti
or
popa
xchg
dec
dec
pop
push
cs
mov
mov
addr16
dec
inc
fcoml
add
add
cli
enter
fdivrs
js
ret
cld
xor
daa
jnp
push
lahf
push
mov
jmp
push
movsl
jle
aaa
mov
and
sbb
xchg
mov
loopne
dec
push
sbb
cwtl
jp
in
and
leave
iret
jae
repnz
test
pop
xchg
inc
rclb
cli
and
stos
test
fisubrs
jecxz
cmp
or
gs
push
sbb
inc
aam
jb
andl
sbb
pusha
sbb
mov
jp
jl
sbb
fnsave
cmp
pusha
ja
pop
addr16
sbb
aam
pusha
sub
lcall
lods
jae
and
in
mov
dec
orl
stc
leave
hlt
loopne
nop
pop
mov
enter
pop
popa
cmp
push
adc
jg
push
mov
cmp
mov
ss
push
icebp
sahf
lock
jecxz
ret
lock
mov
xchg
mov
jp
xchg
lods
mov
rorl
mov
dec
pop
inc
lods
js
push
imul
gs
idiv
lahf
stos
jns
out
jge
xchg
mul
adc
inc
cltd
fistpl
clc
fnstcw
mov
call
sub
push
jnp
xchg
mov
mov
fildl
pusha
adc
ljmp
mov
sub
xchg
adc
data16
push
in
push
adc
fwait
dec
or
into
fwait
dec
xchg
jns
imul
adc
pop
jae
cli
and
xor
mov
mov
lock
mov
sbb
mov
sbb
mov
mov
sub
pusha
mov
clc
das
ds
push
adc
mul
and
pushf
fwait
push
jl
rcll
sbb
add
aad
in
xchg
loope
outsb
push
dec
shll
rep
jmp
mov
mov
fisubrs
push
adc
popf
nop
or
gs
int3
leave
lea
rcll
dec
cmp
push
mov
enter
mov
inc
adc
and
idivb
and
sub
jl
adc
inc
xchg
fcomi
movsb
xlat
dec
xor
push
mov
sub
rcr
inc
or
pop
in
mov
shr
inc
rol
push
mov
sub
sub
icebp
add
sbb
loopne
mov
or
pop
das
inc
add
pop
cmp
add
xor
aas
or
mov
fldl
add
jp
pop
enter
stos
xor
mov
jo
jg
lds
or
dec
cmp
dec
xchg
pop
jns
cltd
scas
push
movsb
aam
mov
cmp
or
ds
jo
leave
or
lock
inc
fdivrp
testl
mov
jge
sbb
mov
sahf
bound
cli
mov
xchg
int
aaa
sub
mov
or
pusha
sub
dec
adc
les
stos
aaa
jp
xorl
rclb
nop
push
fwait
data16
mov
fsubs
mov
inc
icebp
mov
or
or
pushf
xlat
xor
xlat
xlat
pop
sbb
int3
mov
popf
cltd
cmp
sub
cmp
leave
addr16
icebp
inc
and
aam
imul
push
cwtl
and
bound
xchg
adc
aaa
out
fdivl
pop
cmp
fnstcw
lret
pop
nop
mov
lahf
fld
in
orb
sub
adc
scas
ret
push
mov
loope
jl
mov
xchg
movl
pusha
or
add
mov
daa
jp
jecxz
fnstenv
insl
xchg
dec
bound
aas
clc
jmp
mov
sub
or
dec
or
divl
dec
cwtl
and
pop
out
roll
mov
pop
mov
fnstenv
and
mov
gs
add
push
jg
cmp
in
adc
add
jl
test
daa
xor
loopne
insb
pop
clc
sbbl
sbb
sbb
pusha
mov
fildll
sub
sub
sub
and
jns
mov
popa
fwait
inc
push
leave
bound
arpl
cltd
sub
fistps
cli
sub
push
jno
shlb
insb
mov
xor
test
jp
enter
loope
mov
xlat
adc
dec
loope
cmp
fnstsw
in
and
jmp
pop
outsl
mov
xor
bound
or
call
push
push
cmpl
imul
cmpsb
dec
push
push
shl
sub
pop
push
rcrl
jecxz
stos
in
inc
cmp
mov
xor
ss
jae
int3
fistpll
shlb
sub
das
jle
int3
jno
or
movsl
adc
cmpl
movsl
push
das
xchg
add
mov
cwtl
dec
pop
sub
adc
cmp
mov
jnp
mov
iret
aaa
mov
mov
cltd
push
dec
in
push
lret
aas
data16
std
mov
pop
mov
mov
lock
mov
subl
daa
cmpb
in
push
roll
ret
jl
ja
stc
push
push
dec
and
add
dec
jge
ret
dec
and
push
fldcw
push
and
jmp
inc
ds
test
hlt
scas
mov
pop
cmp
imul
stc
mov
pop
fisubs
fidivs
dec
in
gs
loope
inc
dec
gs
push
push
jo
repnz
sub
sbb
dec
xchg
popf
iret
dec
push
xchg
xor
xchg
out
cmc
adc
push
mov
mov
sub
sarl
ljmp
and
xor
and
sbb
xor
in
in
xor
insb
sbb
push
icebp
fmul
mov
push
test
xchg
push
or
and
fucomip
push
push
and
mov
fidivl
in
push
dec
scas
mull
pop
jl
sbb
fimull
mov
out
push
jmp
jl
mov
push
loop
cli
sbb
in
pop
and
cmp
cmpsl
cli
inc
rcll
cmp
xchg
aaa
xor
insw
xor
xchg
leave
mov
add
push
in
jo
pop
dec
call
ljmp
imul
cmp
and
leave
notl
mov
dec
fnsave
jmp
jnp
adc
xor
dec
mov
xchg
xchg
iret
push
jno
int
inc
lods
dec
mov
and
mov
inc
mov
sub
test
pop
inc
imull
jle
pop
jmp
jge
cltd
dec
sub
movsb
dec
lods
fwait
lret
sub
pushf
jne
push
adc
pop
loop
xchg
out
mov
mov
rclb
das
int3
cmp
stos
pop
out
aaa
ficoms
mov
xor
or
fs
fs
test
imul
push
out
mov
add
xor
int
and
das
mov
and
call
cltd
push
jmp
dec
in
mov
pop
ss
outsb
inc
arpl
fmull
push
cld
sub
mov
cmp
lds
cmc
and
mov
enter
shlb
mov
mov
xor
leave
mov
jg
inc
ds
ret
shll
jo
fsubs
xlat
imull
or
fidivl
sub
jbe
rorb
rcll
aas
imul
rcrl
mov
jbe
jle
fiaddl
iret
jecxz
mov
cs
int3
out
pop
mov
cmc
or
aam
loop
call
adc
mov
negb
mov
or
mov
sbb
int
mov
adc
push
push
pop
pop
bound
and
leave
or
sahf
out
and
aad
sub
mov
inc
pop
push
sbb
mov
and
xchg
fcompl
test
xor
cli
cmc
xchg
popa
scas
aam
loopne
out
pusha
mov
adc
push
insb
sarl
div
xchg
aas
cmp
int3
in
adc
xorl
addl
mov
cmc
popa
and
nop
pop
sahf
in
test
mov
and
mov
add
das
mov
lret
inc
sbb
add
mov
pop
into
fdivl
loopne
testl
loopne
fnstsw
in
push
xlat
lcall
xlat
mov
cmpsl
or
mov
in
push
lret
int3
inc
test
push
pop
mov
sub
mov
fldt
mov
mov
pop
adc
xchg
cmc
xchg
sahf
aaa
popa
ret
and
fdivl
test
shll
movsl
outsl
xlat
mov
sbbl
cmpsl
js
xor
add
dec
icebp
cld
fsts
in
daa
inc
dec
sbb
sbb
inc
es
lods
outsl
pop
icebp
xor
into
adc
sahf
int3
xor
gs
mov
repnz
mov
in
add
sub
fwait
pop
dec
add
push
inc
shlb
sti
jp
or
out
xor
mov
sbb
stos
cltd
adc
xor
lods
das
cmp
xchg
faddl
ss
sub
in
lock
bound
sarl
in
jge
adc
test
pop
mov
lea
jne
pop
add
ljmp
fwait
into
jl
iret
pop
xchg
mov
mov
mov
aas
adcl
xorb
jge
fwait
push
adc
addr16
dec
les
lods
xchg
clc
dec
std
sbbb
dec
rorl
dec
or
movsb
push
push
sbb
testl
out
inc
popf
dec
test
sub
loopne
outsl
xchg
outsl
mov
int3
dec
out
mov
pop
mov
lods
cmc
cmpsb
loop
sbb
jbe
loopne
dec
outsb
inc
push
mov
xchg
mov
nop
imulb
movsb
stos
jnp
xchg
les
jle
gs
xor
pop
push
dec
pop
cmp
jmp
sub
xchg
int3
xor
ret
ja
repnz
dec
jmp
or
lcall
sub
rorl
or
dec
mov
xor
sub
pop
in
stos
imul
xchg
test
clc
jmp
filds
lahf
aad
mov
xor
bound
shlb
mov
mov
inc
add
jnp
adc
js
xchg
mov
adc
rol
cmc
jge
repz
dec
add
lcall
ds
xor
inc
jmp
sub
sub
dec
pop
push
insb
dec
or
and
in
mov
shll
mov
nop
jle
icebp
jnp
test
rcrb
insl
dec
sarl
mov
addr16
mov
or
leave
sbbb
mov
in
sub
pusha
imul
cmp
push
or
push
mov
leave
bound
or
cmc
cld
cltd
and
lds
gs
cmp
loopne
sbbl
es
cwtl
scas
dec
loope
int3
aam
iret
out
sub
mov
dec
or
add
dec
mov
xchg
stos
jp
rcrl
sub
and
clc
subl
mov
lods
shrb
mov
push
add
mov
sub
in
sub
xchg
mov
add
cmc
sub
lock
cmpsb
repnz
pop
jge
test
pushf
cmp
incb
fwait
mov
pop
and
test
and
cmpsb
xor
jle
and
jnp
or
es
lea
pop
lods
cld
mov
add
push
mov
and
imul
or
adc
mov
sahf
out
mov
pusha
icebp
sarl
mov
sbb
push
add
daa
xor
lcall
jmp
pusha
or
adc
fsubrp
adc
xchg
and
inc
inc
push
cmp
add
add
and
ljmp
sub
cld
fisubrl
pop
cmpsb
hlt
jns
pop
xor
out
or
psllq
cs
sub
push
nop
pop
inc
and
mov
mov
enter
cmpsb
add
xchg
int
inc
out
test
orl
lods
jge
mov
dec
jne
sub
push
pop
inc
jb
rcl
icebp
sbb
int
aam
cmp
fidivrl
insb
or
sbb
adc
jno
fwait
jae
std
fs
div
xchg
out
jg
dec
jo
cwtl
call
and
or
dec
scas
or
scas
sub
cmp
xor
rcrl
xor
scas
sub
mov
xor
adc
pop
push
divl
shlb
xchg
cmp
jb
xchg
rcl
test
push
adc
es
mov
test
pop
stos
ss
mov
add
add
lods
mov
cmp
xchg
or
dec
cmpsl
push
cmp
mov
push
push
dec
lret
out
jo
jo
mov
or
inc
jnp
and
inc
mov
test
stos
data16
ss
icebp
stos
mov
xchg
jg
push
adc
dec
int
adc
orb
push
push
push
xchg
mov
loope
roll
add
xor
mov
lret
dec
clc
subl
lock
cmpsb
pop
mov
push
jns
mov
mov
idivl
add
push
popf
rorl
iret
roll
jno
stos
sbb
dec
add
cmp
sbb
leave
sub
push
jg
cli
dec
outsl
mov
imul
addr16
pop
out
push
je
cli
clc
and
push
jl
jno
cld
sbb
push
add
in
in
xor
jne
add
xchg
sbb
int
lds
int3
cltd
xor
popf
jmp
xchg
fnstcw
mov
ss
rcrl
les
dec
adc
mov
or
pop
scas
popa
mov
mov
mov
scas
adc
lods
jg
cmp
std
push
pop
push
into
sbb
add
cmp
and
add
mov
xchg
push
xchg
xchg
fs
inc
std
dec
add
xor
clc
test
jecxz
xchg
pop
daa
sub
ja
xor
jns
xor
in
stc
ficoms
pop
stc
sti
loopne,pn
lea
fistps
iret
sub
gs
imul
adc
ss
xor
xchg
fisttpl
testb
insb
rorb
dec
push
outsb
mov
jle
idiv
mov
ss
dec
stos
xor
daa
mov
push
lea
rorl
cmp
xchg
lcall
cmpsl
out
and
not
les
add
rcrl
std
cmp
xchg
hlt
sub
js
mov
shlb
push
insb
add
xchg
stc
outsb
test
inc
lret
bound
lods
or
lahf
int3
jb
adc
out
int3
mov
ljmp
pop
mov
xchg
xchg
sub
icebp
jecxz
gs
pop
xor
push
shll
call
fs
push
cs
loope
mov
fiadds
into
or
loop
insb
inc
das
fldenv
dec
inc
jmp
inc
stos
mov
jmp
fiadds
xchg
test
or
sub
add
loop
or
sub
les
sbb
icebp
mov
and
mov
cmp
les
sarb
mov
sub
xchg
dec
cmp
pop
mov
pop
icebp
add
mov
imul
jmp
lret
aaa
and
std
mov
pop
test
push
jmp
mov
or
fadds
add
and
movsl
roll
mov
fwait
seta
xchg
sbb
sub
repnz
mov
lcall
test
scas
pop
pop
cmp
pushf
imul
negb
cmp
mov
pop
pop
mov
dec
jns
lea
in
repz
test
jge
mov
adc
adc
test
mov
sub
fildll
pop
mov
xor
fdivs
inc
and
mov
jo
pop
push
pushf
jle
sbb
xchg
jmp
ljmp
mov
mov
add
jmp
xor
ret
add
or
fcmovnu
test
push
xor
mov
repz
cmp
andl
jno
jb
ret
or
sbb
pop
cmpsb
sbb
pop
call
jl
jmp
xor
push
push
scas
ficoml
imul
rcll
or
xchg
cmp
pop
push
pop
xor
lcall
fwait
dec
cmp
xchg
push
or
mov
inc
xlat
mov
out
cmp
int3
loope
lods
sbb
cmp
dec
imul
jae
int3
dec
mov
lcall
fists
mov
icebp
push
add
or
jle
test
mov
push
cmp
push
or
mov
add
mov
or
add
cmp
cmp
mov
mov
lahf
cli
cmpsb
push
jns
js
clc
fst
lods
sti
movsl
mov
pop
aaa
sub
shll
cli
cmpsl
scas
cmpl
xchg
daa
cli
mov
adc
mov
lods
repz
movsb
sbb
inc
out
cmp
in
ret
je
add
nop
adc
adc
pop
cld
add
xchg
ja
jle
in
arpl
jg
sbb
jg
or
imul
scas
xchg
loop
push
xchg
cltd
inc
jl
jecxz
sub
xor
movsb
inc
test
adc
mov
or
lret
jmp
pop
push
out
or
dec
js
cwtl
mov
adc
inc
loop
mov
pop
in
lahf
sbbl
mov
cld
ret
cmc
mov
fsubrl
mov
sbb
mov
roll
fidivs
clc
jl
pop
and
mov
mov
lods
mov
or
dec
adc
jecxz
cmpsl
cltd
xor
int3
jmp
in
and
movsl
inc
adc
mov
and
fbstp
out
xor
int
or
dec
ja
jl
orl
arpl
popa
lea
jbe
push
jb
pop
outsb
jbe
icebp
cmp
mov
mov
inc
lds
call
jb
rcrb
jb
call
dec
dec
pusha
out
mov
mov
cmp
clc
cmp
lahf
mov
lret
xchg
mov
mov
inc
xchg
cmpsb
sub
sub
mov
and
xchg
add
int
and
sbbl
pop
aaa
jmp
inc
ja
in
nop
pop
std
outsb
push
and
sti
xor
or
pop
pop
pop
adc
test
jmp
add
cmp
insb
daa
jb
jbe
xor
scas
cld
xchg
xchg
test
shll
cmp
mov
xor
and
push
mov
and
arpl
adc
add
dec
sbb
pop
out
inc
clc
les
cli
lahf
jecxz
movsl
pop
sti
jle
inc
inc
shll
pop
mov
adc
sahf
push
jne
mov
xor
pxor
imul
pop
mov
idivl
xor
push
xchg
inc
cmp
and
mov
inc
lret
leave
push
jg
fwait
mov
jbe
jmp
push
pop
movsb
jne
mov
pop
gs
in
ss
mov
push
xchg
jno
add
sbb
push
repnz
push
cltd
icebp
test
dec
sahf
bound
out
jg
mov
adc
add
or
inc
out
lret
inc
jmp
mov
cmp
stc
jmp
add
mov
push
sti
pushf
pop
dec
sbb
mov
cmp
xor
push
arpl
adc
in
push
pop
cmp
xor
pop
adc
loope
jmp
xchg
ret
mov
xor
mov
sbb
arpl
cmp
push
lahf
sub
push
popl
std
fidivrs
cli
add
scas
sub
mov
jae
ljmp
icebp
das
xor
cmpsb
dec
int3
shlb
mov
sub
cmp
inc
xchg
ljmp
sub
jecxz
or
lret
scas
out
pop
jmp
shl
aaa
jno
or
cmp
and
pop
sahf
xor
repz
movsb
popf
in
ja
scas
jnp
sub
rcll
test
addr16
push
inc
push
mov
and
sbb
push
out
add
add
jp
jae
mov
xor
mov
adcl
push
arpl
sub
xchg
mov
sahf
add
test
aas
mov
aam
repz
mov
shl
pop
ret
pop
jnp
adc
adc
push
jp
insl
sub
and
or
mov
dec
sbb
and
xchg
lret
fmull
xchg
adc
mov
mov
loopne
xchg
loopne
cmp
sub
push
xor
int3
mov
dec
inc
dec
mov
sbb
insl
hlt
leave
sbb
ljmp
imul
pop
ljmp
dec
adc
mov
lock
adc
fcompl
int
sbb
mov
lods
jno
or
int
dec
ret
add
jle
mov
inc
gs
adc
or
test
and
sub
and
and
jmp
stos
push
pop
dec
jbe
or
xor
out
hlt
pop
movsb
sbb
popf
inc
sbb
in
cmpsb
mov
shlb
sbb
or
or
mov
hlt
fldenv
jb
scas
cmp
jbe
subb
add
in
xor
xor
mov
scas
mov
cld
push
sbb
mov
push
lcall
stc
das
addl
mov
xor
lahf
into
adc
push
jg
test
and
xor
mov
adc
pop
imul
popa
push
clc
or
js
nop
sub
fisttpll
sub
shlb
outsb
in
mov
adc
xchg
pop
stos
fnstsw
or
mov
int
pop
js
jnp
dec
inc
loope
mov
mov
adc
jns
lret
sbb
jge
push
push
ret
test
addr16
jecxz
xchg
inc
dec
mov
je
arpl
in
int
push
mov
push
add
and
nop
fcomip
sbb
xchg
sbb
cli
je
and
dec
mov
cmpsl
cmp
jne
fwait
mov
jle
jns
xor
subl
add
jne
sub
mov
in
cmc
outsl
out
ficompl
pushf
mov
leave
sub
rcrl
imul
icebp
js
cmp
xchg
stos
hlt
dec
gs
nop
in
inc
xchg
fisttpl
fisubrs
in
pop
jl
shr
mov
push
mov
hlt
sbb
or
incb
push
sbb
adc
testb
sarl
sub
mov
inc
xor
mov
push
sub
inc
out
cmc
cltd
or
sbb
test
adc
aad
pop
mov
cmpsb
jp
rclb
popf
dec
ficoml
jecxz
push
sub
repz
or
out
xor
pop
roll
or
and
daa
scas
in
lcall
mov
call
les
xchg
cs
ss
std
push
fimull
jmp
fnstenv
dec
adc
cltd
cs
xchg
std
sub
outsb
inc
test
fldenv
inc
mov
scas
fstps
shlb
fsubs
push
popa
xor
fsubl
stos
mov
test
mov
int3
jg
gs
dec
jnp
mov
sub
testl
xor
shlb
icebp
aas
inc
cltd
bound
addr16
aaa
in
inc
adc
sub
ror
sub
or
and
sbb
fldcw
cmp
rolb
lods
jp
pusha
dec
aad
pop
inc
sbb
xchg
mov
or
stc
dec
add
xchg
test
mov
je
setl
adc
aam
mov
call
and
xchg
lcall
test
addr16
fsubrl
ds
dec
jae
es
inc
stos
inc
mov
aam
mov
enter
outsb
dec
jg
popf
ss
jge
rorl
idivb
out
pusha
xor
mov
dec
push
cwtl
cwtl
das
mov
stc
cmpsb
add
pop
sub
mov
adc
sbb
int3
das
popf
xor
dec
pop
aas
jp
xchg
fsubrs
cwtl
xchg
adc
push
xchg
fstl
mov
enter
jo
dec
dec
xchg
fidivs
sbb
sbb
dec
fwait
lods
jl
aas
xchg
aad
outsb
xchg
les
mov
inc
jp
sub
int3
imul
xchg
nop
test
xchg
mov
les
mov
outsl
sub
push
imul
mov
ficoms
imul
ret
mov
in
into
xor
adc
adc
aaa
fisubrs
adc
xor
adc
je
sbb
mov
jbe
data16
inc
cmc
add
or
es
movsl
lods
popf
outsb
sub
adc
mov
push
out
subb
jl
je
xor
scas
add
jg
xor
jno
lret
adc
ss
gs
lds
push
pop
cmp
into
or
cmp
mov
mov
loop
mov
inc
popa
xor
and
xor
mov
int
jae
push
sbb
mov
push
fwait
jge
cltd
pop
mov
xor
dec
pop
dec
lods
and
imul
pop
pop
pop
fbld
in
jecxz
std
xchg
es
scas
shll
mov
fildl
add
inc
cmp
leave
cwtl
fidivl
cmpsb
mov
and
cli
pop
mov
clc
xchg
loope
test
loope
adc
mov
sbb
mov
mov
dec
cmpsb
adc
pop
or
mov
and
push
out
pop
sub
mov
cmp
pusha
pop
sbb
movsb
mov
xchg
pop
sbb
movsb
idivb
clc
mov
sub
arpl
sub
or
pop
xor
jb,pt
jmp
test
adc
cli
dec
mov
add
push
fsubr
add
xchg
arpl
out
push
cmp
and
pop
mov
gs
rclb
mov
aas
cmp
lcall
aas
push
lods
jnp
mov
mov
int
push
stc
mov
sbb
xchg
mov
aas
std
rorb
cmp
dec
push
mov
ja
in
cmp
fists
fisubs
xor
sbb
outsb
push
shlb
rorl
loopne
pop
sub
in
sbb
shrl
pause
call
and
jno
mov
lret
daa
pop
insb
mov
cltd
fwait
jno
pushf
ljmp
cmp
sarl
adc
in
add
and
jne
lds
cmpsb
out
xchg
int3
push
mov
push
popa
sahf
roll
push
pop
pop
cmp
mov
es
and
xchg
push
jne
out
adc
lods
pop
xchg
rcll
jne
cwtl
lea
cmp
push
sbb
add
in
dec
fmul
jmp
jg
btcl
scas
pop
mull
push
pop
stos
jae
pop
mov
sar
jle
cmp
and
aas
jnp
rclb
jge
mov
rcrl
cmp
in
xor
jnp
shl
xchg
pushf
je
nop
fists
jne
push
int
das
and
xchg
not
mov
sub
imul
push
jno
mov
dec
push
push
jg
test
cmp
jb
dec
inc
sbb
dec
out
pusha
mov
in
pushl
fdivrl
sbb
pop
push
cmpsl
add
inc
mov
mov
mov
repnz
pop
movsb
lret
stc
addr16
or
and
call
cmpsb
idivb
stos
aam
int
fimuls
xchg
cmp
sbb
sub
mov
cmp
mov
test
int
aaa
ret
popa
fwait
mov
and
xchg
lods
insl
out
sarb
mov
jne
pop
sbb
and
pop
lods
mov
mov
jnp
adc
loopne
cmpsl
aad
out
adc
xchg
inc
int
push
scas
repnz
fsubrp
pop
lret
adc
sub
cmp
lea
sbb
sbb
aas
xchg
mov
or
or
out
into
pop
add
aam
out
push
adc
lods
xchg
sub
cmp
jb
in
pop
sub
lock
pop
jo
mov
xchg
addr16
imul
orb
push
xchg
cltd
xchg
cmp
dec
jecxz
cltd
pop
adc
repnz
cmp
or
dec
jno
lods
in
pop
daa
jge
into
hlt
in
and
mov
cltd
lds
leave
in
test
popa
jo
xor
sbb
ss
xchg
outsl
ds
xor
push
repz
div
scas
push
lret
and
cmp
test
add
push
cmpsl
sub
adc
lods
sub
push
sub
pop
icebp
mov
push
inc
push
dec
push
jmp
arpl
in
or
xchg
dec
in
jne
in
movsb
adc
stos
fwait
cltd
in
in
jns
fadd
insl
ret
pop
adc
fldcw
xchg
mov
lds
and
loope
ds
and
fcmovne
nop
and
or
das
adc
out
sbb
mov
hlt
cwtl
outsl
out
xlat
add
fistpl
push
insl
pop
add
or
mov
inc
lahf
ret
or
orb
loop
incb
pop
gs
adc
repz
jne
pop
dec
mov
lock
mov
add
cmp
mov
mov
jg
jmp
push
bound
jp
xchg
js
pop
scas
lcall
fdivrl
sahf
jnp
push
test
insl
push
dec
jmp
test
xchg
stos
imul
call
sahf
cld
mov
ds
scas
out
inc
ljmp
cmp
inc
pop
sbb
push
rorl
xchg
cmp
jmp
jae
cwtl
or
inc
fimull
cs
leave
mov
icebp
adc
popa
adc
in
sbbb
or
vphaddubq
imul
fmuls
decb
sub
add
lods
loop
jle
pop
sub
loope
iret
mov
adc
jge
mov
inc
mov
cmpsl
fucom
push
cmp
or
lcall
sub
popa
mov
cs
in
mov
push
pushw
sub
xchg
jns
test
rol
inc
shlb
and
dec
mov
push
dec
sub
lock
std
stos
jnp
mov
leave
lods
int3
inc
dec
add
jns
push
jns
popa
rcrb
sahf
ja
push
enter
add
scas
lret
push
sub
sbb
cmc
or
adc
sbb
xlat
xchg
addb
stos
mov
and
clc
pop
fs
repnz
scas
out
sbbb
jmp
xor
fs
aam
sbb
rclb
jle
mov
inc
push
xchg
push
dec
into
sbbb
fildll
gs
mov
push
ds
les
clc
js
add
xchg
nop
sbb
and
test
xchg
sti
pop
mov
and
sbb
data16
pop
mov
mov
cld
imul
add
mov
or
out
inc
mov
mov
in
inc
pop
jmp
repnz
sbb
ud1
pand
push
in
mov
std
or
push
sub
inc
mull
jb
stos
xor
inc
inc
idiv
inc
shll
adc
mov
and
cltd
aas
shrb
dec
xchg
cmp
or
or
xchg
cld
xor
in
mov
sbb
loope
hlt
into
aas
inc
push
pop
add
sbb
xor
mov
lea
and
xchg
or
jge
mov
cmpsb
xor
hlt
push
pop
mov
mov
inc
xorl
dec
jo
xchg
mov
into
fnstsw
in
mov
sahf
and
adc
add
ljmp
stc
sub
lret
lods
data16
rcr
mov
mov
mov
xchg
adc
adc
adc
xchg
sbb
js
inc
aam
lret
roll
enter
add
pop
addb
and
sarb
mov
xor
test
pop
scas
sbb
add
xchg
push
pop
xchg
pusha
xchg
enter
and
add
jb
cli
pop
in
inc
lcall
xchg
test
rclb
rolb
mov
daa
imul
icebp
cmp
cltd
test
insl
je
pop
pop
rclb
shlb
jecxz
test
iret
notrack
dec
inc
mov
cmpsb
jecxz
inc
jge
jb,pn
fcomps
fcmovnb
xor
dec
cld
je
sub
rcll
incb
pop
adc
ss
addr16
push
cltd
loope
mov
fs
cmp
cmp
lds
sub
sti
aaa
insb
add
clc
imul
outsl
and
sbbl
pop
mov
cmpsl
xor
neg
and
movsl
mov
and
mov
xlat
jbe
data16
push
fistpl
push
fidivrl
lcall
add
mov
fisubl
adc
dec
mov
ljmp
test
xchg
insl
loopne
mov
pop
jge
mov
dec
clc
xchg
xor
sahf
fnsave
out
lret
je
outsb
ss
push
mov
lds
ss
aad
daa
sub
aad
pop
out
inc
add
adc
mov
fdivs
or
js
scas
fdivrl
lret
aam
xor
std
jb
repz
outsl
inc
cmp
pop
stos
insb
lret
mov
addr16
bound
mov
inc
xchg
sbb
or
adc
ljmp
add
out
sbb
nop
push
mov
push
rorl
pop
and
sub
es
mov
pop
jbe
xor
mov
jle
inc
adc
pop
int
out
idivb
mov
sbb
add
jae
fs
popa
ljmp
shl
mov
sar
lea
push
pop
lods
xor
dec
xlat
pop
fisttpll
inc
dec
mov
mov
int
lds
icebp
mov
cmpsl
inc
data16
cmp
jnp
jns
rclb
ds
popf
insb
mov
loop
push
sub
arpl
add
xchg
mov
ljmp
and
cmpsl
jge
xchg
xor
aas
xor
stos
jae
jns
leave
lea
xchg
mov
push
fimuls
jbe
sbb
imul
push
push
test
jns
scas
dec
int3
andb
pop
sub
popf
push
sbb
pop
push
cmp
push
cmpsb
dec
sbb
adc
xchg
cld
pop
jge
sbb
xor
rcr
sbb
add
inc
mov
cmp
ret
int3
xor
sbb
inc
out
mov
fwait
push
and
aam
iret
pop
sub
ds
sub
pop
fadds
jg
iret
add
fdivs
mov
or
pop
adc
jb
mov
fistl
add
or
lcall
or
inc
add
sub
adc
mov
xor
mov
mov
stos
jb
enter
cmp
cmpsl
cmp
int
test
arpl
icebp
jl
pop
or
loopne
ret
pop
dec
xor
mov
arpl
inc
cmp
inc
in
mov
test
or
or
and
mov
test
or
sub
sar
and
nop
jb
xchg
xchg
cli
je
loopne
ret
xor
ds
in
jnp
jo
jl
jno
jae
push
daa
add
ljmp
xor
scas
movsl
in
gs
jbe
fs
push
pushf
lea
or
jne
idivl
fcmovu
sbb
and
push
icebp
fcoml
adc
sbb
fnstcw
jae
xor
rcl
adc
das
es
sti
fidivl
iret
ja
sarl
jecxz
add
sbbb
mov
pusha
adc
push
push
in
loopne
hlt
mov
jnp
icebp
popf
sbb
sbbl
mov
nop
pop
mov
adc
jo
pop
push
lret
pop
sub
xor
icebp
add
jbe
pop
inc
std
add
lahf
int
ds
pop
in
lcall
dec
cs
adc
stos
outsl
adc
bound
mov
inc
stos
pop
test
in
mov
arpl
aas
and
nop
outsl
leave
or
sti
push
les
or
dec
hlt
jo
in
stc
inc
sub
cmp
mov
mov
lea
cli
jne
pop
daa
inc
cmpb
adc
imul
pop
pop
repz
cmp
sahf
adc
jle
dec
adc
movsb
sbb
bound
sbb
mov
or
rcrl
add
cmp
test
sub
leave
mov
ret
sbb
dec
push
rorl
xchg
xchg
not
shll
jno
xchg
fstps
xchg
nop
sbb
push
cmp
out
popf
mov
and
daa
fnstsw
outsb
lahf
pusha
sub
dec
cs
mov
xchg
clc
in
mov
ret
push
sub
scas
out
into
fld
jg
idivl
or
out
jp
pusha
jmp
insb
stos
addr16
cmp
mov
fistpll
sub
mov
adc
mov
jl
pop
or
jecxz
push
xchg
cmpsl
sarb
adcb
fbld
pop
xchg
push
inc
addr16
adc
mull
movsl
sti
dec
adc
cltd
xor
shl
int
stos
or
push
out
add
cli
dec
sbb
xchg
sbb
or
rolb
push
in
sar
divb
and
iret
dec
testb
and
insb
mov
popa
and
mov
aad
int3
mov
xor
icebp
pop
js
jecxz
or
jb
aas
xchg
lret
xchg
loop
sub
lahf
outsl
pop
mov
test
pop
push
xor
aad
xor
xchg
jmp
mov
stc
lahf
fnsave
clc
test
movsl
mov
arpl
cwtl
mov
mov
push
push
xlat
mov
adc
fildll
mov
add
inc
lds
stos
iret
jge
pop
mov
pop
sub
enter
mov
push
sahf
insb
xor
stos
clc
mov
cs
cs
xor
adc
repnz
push
lods
dec
pop
outsl
hlt
in
jp
mov
jl
dec
aam
add
pop
adc
loop,pn
out
mul
lret
and
das
gs
mov
push
insl
pop
rcrb
jp
sub
daa
xchg
xchg
aam
in
ret
mov
jb
cmp
std
loopne
ds
mov
aaa
ret
add
scas
xchg
xchg
fcomps
ret
int
aas
sub
les
das
pop
aas
icebp
adc
pop
push
addr16
add
push
les
mov
inc
adc
enter
add
sub
jbe
add
rclb
es
lock
in
addr16
in
fldt
and
fcmovnu
mov
mov
cmc
lea
in
push
stos
lret
mov
pop
push
test
inc
std
xchg
int
std
dec
mov
lahf
jae
xor
adc
je
push
push
dec
xchg
pop
push
mov
insb
bound
lcall
inc
js
sub
jp
mov
cltd
in
unpckhps
xchg
iret
cltd
scas
xchg
cmp
mov
cmp
cmp
out
leave
sub
pusha
xchg
sub
pop
or
std
enter
add
movsb
leave
jg
jge
jne
pop
sarb
repz
aaa
pop
xchg
idivl
mov
push
repnz
int
mov
sbb
sbb
scas
out
ficoml
push
adc
test
clc
mov
mov
cmpsl
jns
xor
enter
into
das
and
test
sbb
bound
or
mov
lock
push
jno
mov
mov
inc
mov
outsl
push
cmpb
dec
jecxz
xchg
inc
xchg
sar
dec
jmp
lret
sub
cmp
fmulp
out
pop
sbb
mov
in
lcall
shlb
movsb
sub
shll
mov
lds
push
lret
pop
jle
mov
xchg
repnz
mov
aad
aaa
into
roll
xor
pop
imul
lret
sarl
mov
inc
pop
loop
insb
pop
push
dec
mov
movsb
aas
mov
aad
mov
mov
mov
and
outsb
arpl
xor
jb
cmp
imul
fiaddl
js
push
jb
jmp
push
insb
dec
aad
mov
cmp
imul
sub
mov
push
mov
sbb
movsl
dec
jb,pn
addr16
test
push
fsts
and
aas
movsl
jbe
data16
das
lods
loopne
sbb
call
xlat
or
mov
dec
outsl
shld
clc
mov
shld
inc
xor
cwtl
stos
push
out
cwtl
icebp
jl
jbe
mov
dec
call
jae
or
leave
mov
fimull
mov
xchg
js
sbb
xchg
roll
sub
call
dec
mov
pop
enter
push
in
inc
std
sbb
outsb
sbb
enter
repnz
jl
stos
push
nop
ljmp
lds
sub
scas
xor
movsb
jp
mov
inc
call
mov
push
ret
push
shll
iret
lds
fstp
les
cmpsb
iret
mov
cmovs
dec
mov
pop
jg
push
je
mov
in
and
sub
imul
mov
push
sahf
jecxz
call
jnp
ljmp
cmpsb
sub
imul
fisubs
mov
mov
dec
pushf
jmp
sbb
ss
loope
data16
rorb
ss
cli
or
push
je
imul
mov
call
aaa
mov
lcall
cmp
lock
negb
xlat
sti
sbb
or
cmp
or
stc
mov
add
testb
adc
ds
imul
xchg
lcall
mov
in
xor
add
mov
enter
dec
fs
int3
pop
mov
inc
pop
xchg
mov
enter
pop
inc
int3
mov
push
dec
dec
jne
mov
push
cltd
or
addr16
sub
inc
xchg
pop
mov
je
dec
sbb
pop
xchg
jbe
jno
cltd
test
js
popf
xchg
jle
mov
push
cmpsb
mov
cmc
jl
lds
sarl
push
jae
sub
pop
into
jae
add
or
or
adc
sbb
dec
movntq
fnstsw
xor
jns
push
call
call
jo
pusha
xchg
leave
loope
pop
add
mov
mov
push
sub
mov
inc
push
cli
xor
ret
cli
lock
sti
jg
pop
hlt
mov
sbb
and
mov
dec
ja
ret
repz
lret
scas
nopl
rorb
insb
lods
insl
ficompl
xor
xchg
in
imul
push
pop
inc
aad
addb
aaa
ss
sbb
xchg
mov
adc
pop
movsb
mov
jp
mov
mov
in
lods
mov
jns
fadds
jnp
outsb
mov
imul
test
cli
jbe
mov
cmp
jb
adcl
or
mov
xchg
push
cmpsb
xor
jecxz
lods
pop
cmpsb
or
ljmp
data16
clc
xor
or
mov
ret
scas
icebp
inc
fldt
lds
rcr
push
int
sub
adc
xchg
adc
loopne
xor
xchg
add
bound
sbb
testb
mov
mov
add
ja
hlt
pop
pop
stos
dec
insl
pop
iret
xchg
mov
cmp
cmp
int
popa
add
sbb
push
or
add
adc
flds
ljmp
lcall
jno
aam
jmp
out
xchg
add
rol
filds
pop
imul
test
popf
add
jg
fwait
cmp
std
cmc
mov
cmp
loope
movsl
inc
add
cmp
ds
rcl
or
xor
pop
ja
inc
jae
mov
push
fsubrs
push
push
or
loope
add
dec
popf
jbe
jb
pop
int3
sbb
mov
or
in
in
pop
loop
mov
push
dec
ds
xor
push
insl
push
lahf
mov
fs
gs
enter
lods
push
test
pop
loopne
sar
push
pop
subb
adc
imul
adc
sbb
std
test
push
fisubrl
xor
and
hlt
loopne
cmp
movsb
mov
cmpb
and
and
dec
sub
fmulp
pusha
pushf
pop
pop
dec
fs
int3
inc
fstl
cli
leave
or
mov
push
mov
sbb
pushf
insl
scas
pop
ret
jbe
stos
add
add
pop
push
sub
cmp
and
cmp
and
mov
fimuls
rolb
stc
repz
call
pop
jp
mov
addl
in
and
adc
add
xlat
sti
inc
mov
lret
pop
lret
adc
loop
push
mov
push
sbb
xorl
movsb
or
dec
inc
add
fcoms
xchg
leave
jle
dec
jmp
inc
cmp
arpl
imul
out
sub
loopne
push
or
jb
cmp
sarb
daa
push
xor
test
or
out
js
lock
pop
and
mov
jb
xchg
cld
insb
test
fdivrl
dec
dec
mov
xor
ds
push
repz
or
and
stos
add
popa
jg
dec
push
movb
cmp
push
jecxz,pt
add
push
nop
push
cmc
idivl
std
and
xchg
bound
clc
jbe
cltd
mov
xchg
lea
rcrb
xor
xor
shlb
jmp
inc
dec
and
rcl
add
inc
cmp
movsb
iret
mov
ljmp
pop
mov
sbb
test
pop
dec
fcomps
jge
je
sbb
cmp
push
mov
inc
mov
cmp
mov
cmp
inc
mov
rol
pop
jb
jp
and
mov
cs
fnstcw
add
xlat
push
dec
adc
out
adc
mov
push
inc
lods
inc
sbb
xchg
dec
jmp
push
fimull
jno
or
sbb
lock
lret
push
xchg
mov
or
dec
pop
jns
xor
pop
lds
xor
mov
popa
sbb
mov
push
int
les
xor
pop
pop
and
mov
aad
xchg
xchg
mov
sub
mov
or
cmpl
and
jg
in
dec
mov
mov
ja
jo
dec
cmp
xchg
les
mov
mov
xlat
scas
cmp
cmp
jge
mov
xchg
jae
stos
mov
lahf
adc
stos
sti
mov
jge
sbb
pop
cmp
push
jae
jno
rcrb
mov
jl
out
inc
in
pop
test
mov
sbb
and
jmp
outsl
ss
cmpsb
xchg
gs
mov
dec
or
cmp
call
adc
es
and
cltd
and
rcll
mov
lcall
jns
aas
scas
mov
sbb
mov
and
mov
stos
dec
loop
sbb
fwait
jp
adc
sbb
cmp
pop
push
jae,pt
inc
addb
test
add
jbe
jp
jle
popa
jp
in
cmovp
dec
lcall
jo
js
out
mov
and
popf
mov
pop
push
pop
jl
jmp
dec
adc
aam
icebp
es
sub
gs
cmp
push
pop
fldenv
gs
bound
xchg
or
xorb
fcomip
sub
adc
clc
filds
mov
push
inc
push
insl
outsb
shll
mov
pop
push
jge
xor
push
sub
add
xor
mov
mov
mov
test
jl
cmp
push
or
test
dec
imul
jl
andb
pop
insb
push
dec
lds
or
sbb
xchg
push
sahf
jp
xchg
jns
pop
and
xchg
ljmp
xchg
mov
and
mov
or
lods
daa
xchg
faddl
dec
test
arpl
push
popf
xchg
jae
add
ret
rol
scas
in
scas
inc
addr16
popf
jne
jae
add
pop
ljmp
aam
loope
shll
mov
lods
add
xor
mov
scas
pop
outsb
push
stc
ljmp
out
mov
push
inc
inc
lret
inc
jnp
test
test
pop
enter
mov
aad
loop
lahf
in
dec
sub
adc
cmp
fstpl
jns
xchg
xor
lods
adcl
movsb
inc
into
leave
dec
add
push
repz
ds
popf
out
pop
and
mov
or
loop,pn
xchg
aam
pop
test
mov
arpl
addb
inc
xor
push
sub
les
rcrb
cli
outsl
xor
rolb
mov
mov
jecxz
cli
fstl
mov
sbb
xchg
jg
xchg
pop
popa
test
leave
mov
xor
mov
and
push
sub
aam
sbb
mov
sti
push
lea
mov
push
lcallw
and
or
in
jne
and
inc
repz
pop
or
sub
adc
jl
cmp
adc
adc
pop
xchg
dec
fistpll
dec
sahf
cmpsl
dec
std
adc
push
dec
cmp
jo
and
adc
btr
jnp
int
mov
hlt
pmuludq
mov
out
or
sbb
pop
cmp
loop
outsb
aaa
cltd
bound
in
incl
div
enter
popa
push
negb
pop
das
and
dec
test
lret
jp
cli
inc
mov
fmuls
loop
cld
cmp
xchg
cmp
pop
adc
lret
xchg
jbe
filds
adc
and
out
pop
jge
cwtl
lahf
jp
aad
xchg
dec
pop
stos
insb
lcall
adc
insb
shll
mov
jge
and
adc
pop
add
sbb
mov
push
push
cld
aas
sub
cmp
cmp
das
out
dec
loop
imul
lea
loopne
fsubrs
or
jnp
outsb
push
sar
jge
jno
jne
cmp
scas
cli
lcall
mov
daa
mov
popf
xor
test
icebp
adc
xchg
inc
cmp
cmpsl
iret
into
in
gs
addb
jbe
ficoml
and
mov
cmpsl
add
jle
lea
pop
mov
daa
mov
dec
and
loope
ds
adc
mov
sub
push
inc
pop
movsl
ds
mov
loop
sbb
and
fbstp
int3
sbb
inc
imul
xchg
nop
adc
xor
inc
test
inc
sub
clc
mov
jns
sarb
das
stc
mov
es
mov
jmp
sbb
test
hlt
xchg
pop
inc
mov
jle
push
gs
sbb
cmp
jg
iret
cli
xchg
movsb
mov
push
mov
cmp
andl
mov
inc
mov
sub
mov
pop
cs
and
je
es
ss
loop
dec
nop
repnz
es
add
aam
jns
pusha
mov
inc
mov
ret
gs
ljmp
pushf
pushf
xlat
test
sbb
mov
xchg
subl
fucomp
pop
sbb
gs
cmc
adc
popa
mov
call
js
pop
les
mov
ss
inc
xchg
inc
jno
mov
jae
stos
inc
aad
inc
push
cmp
stc
cwtl
mov
cmp
or
out
pop
pop
rolb
movsl
lcall
inc
in
jae
adc
jle
inc
fsubl
sub
adc
add
div
push
jns
inc
push
or
movsl
mov
pop
jecxz
xchg
movsb
lods
subl
sbb
scas
fisubs
scas
fildll
mov
add
pusha
repnz
and
sahf
xor
jl
sti
fs
pop
sti
mov
pop
push
fwait
mov
xchg
sbb
loope
aaa
fcomi
xchg
scas
setg
pop
test
push
sub
jle
mov
iret
outsb
fimull
ret
jae
rcrl
pop
scas
jns
pop
daa
add
mov
sbb
mov
inc
test
xchg
pop
sbb
insl
loopne
xchg
push
and
mov
pop
pop
adc
popl
adc
or
jns
jae
imul
out
popa
xchg
or
daa
pop
sub
rolb
popf
add
movl
imul
push
repnz
les
sbb
and
cli
mov
push
push
push
or
cmp
in
or
into
mov
cmpsl
lret
xor
add
jg
cmp
mov
jle
fldt
roll
pop
cmp
jg
add
repnz
add
lcall
test
cmp
imul
pushf
mov
imul
sti
enter
out
or
mov
pop
shlb
mov
lock
int3
test
and
shl
and
scas
clc
push
sbb
push
inc
shrb
cmpsb
jp
xchg
mov
test
push
rcrb
push
jne
icebp
nop
int3
mov
fldcw
ss
test
fcoms
push
ret
out
sub
mov
scas
jns
jmp
mov
inc
dec
sarl
cs
dec
cmc
push
fs
repnz
arpl
clc
or
cwtl
or
and
xchg
dec
sbb
xchg
mov
push
add
cli
cmc
pop
push
mov
aaa
sahf
fnstenv
idivb
mov
shrb
jl
mov
push
inc
iret
cmpsl
idivl
leave
sub
mov
dec
or
xchg
mov
add
pop
clc
fldl
repnz
in
ljmp
cmp
mov
out
icebp
xlat
mov
test
xchg
pop
sub
in
in
add
pop
cld
fcomp
mov
data16
xchg
mov
mov
out
dec
push
mov
sbb
mov
and
int
push
and
sub
or
scas
inc
push
test
push
jp
std
scas
lret
dec
push
icebp
int
das
testl
push
sbb
cld
mov
fidivs
mov
cmp
out
pop
movsl
jg
cld
jbe
push
and
jns
jge
adc
adc
test
shr
es
scas
iret
rorb
sti
outsl
jge
stos
push
xchg
mov
cli
fmuls
inc
pop
pop
or
dec
cmc
pop
sar
cmp
push
out
push
sahf
mov
sub
cmp
and
cmpsl
gs
out
dec
iret
lahf
add
xor
mov
dec
lock
jmp
mov
jo
out
nop
pop
outsb
jae
sub
pop
lret
adc
adcl
hlt
divb
cmpl
cmc
inc
jbe
div
call
movsb
sub
sbb
fcoms
jo
pusha
push
and
or
test
call
jmp
clc
arpl
jle
lods
enterw
clc
add
cmpsb
inc
and
jp
jb
stos
mov
imul
rcll
mov
lea
in
push
rorl
cmp
xchg
dec
fiaddl
sub
xlat
enter
outsb
cmc
adc
repz
in
int
push
xor
ljmp
pop
jns
adc
sub
outsb
mov
dec
push
jbe
jg
add
or
mov
test
int3
push
cmp
xor
popa
dec
movb
push
outsl
lahf
mov
jne
imul
jmp
push
mov
cmp
lods
mov
sbb
ljmp
test
push
xlat
ds
inc
inc
lret
adc
dec
push
sbb
add
mov
fmuls
xor
js
push
push
fwait
scas
mov
nop
lods
add
mov
sub
ror
xchg
std
jno
mov
ret
movsb
mov
inc
xchg
pop
pushf
jmp
cmpsb
insl
mov
jno
test
and
jmp
mov
pop
pop
pop
and
js
sub
dec
inc
fsqrt
dec
cmp
cmp
jae
push
xor
adc
ss
insb
jns
inc
xchg
xchg
inc
stc
orl
jmp
dec
fldenv
and
lcall
js
rorl
cmp
les
mov
subl
enter
jbe
jns
ja
les
es
in
daa
aas
and
xor
add
mov
mov
mov
out
add
mov
loopw
mov
nop
xchg
loop
pop
aam
dec
inc
inc
hlt
add
addb
gs
mov
adc
adc
and
jmp
mov
mov
divl
jo
dec
lds
aas
scas
mov
popa
inc
push
mov
inc
movsl
loop
sbb
jg
iret
xlat
push
push
add
xorl
xor
cmpsl
push
lahf
or
pop
cmp
pop
outsl
jbe
mov
pop
mov
xor
pop
cmp
cmc
test
mov
cwtl
fstps
add
scas
out
mov
dec
cwtl
adc
mov
int
jae
out
test
loope
into
mulb
dec
lea
popa
jmp
and
pushw
push
jb
lahf
lahf
or
mov
lock
mov
and
inc
fwait
adc
orb
sbb
mov
rcll
ss
or
push
cmp
outsl
and
inc
out
mov
jns
cmp
adc
dec
sahf
int
out
pop
hlt
add
movsl
pop
mov
test
mov
aaa
ss
repz
ret
or
lods
movsl
movsb
aas
out
pop
xchg
cli
add
and
push
push
icebp
cmp
dec
add
dec
push
push
dec
inc
iret
cmpsl
inc
hlt
or
lea
push
push
sbb
cmp
aad
mov
jle
mov
jbe
or
mov
out
xor
insl
sub
pop
lods
lods
add
mov
mov
test
int3
movsl
out
out
movsb
inc
inc
push
mov
paddsb
aad
daa
add
test
pop
xchg
inc
repnz
imul
jp
aas
rcrl
popa
shlb
out
xor
xor
call
ljmp
test
pusha
push
dec
or
lds
push
shr
das
jl
rcrb
pop
ljmp
movsb
pop
xchg
and
push
clc
test
clc
adc
movsb
rcl
cli
sahf
inc
jge
mov
jae
sub
test
lods
sub
negl
fcompl
data16
xchg
movsb
stos
push
cmpsl
xor
xchg
arpl
jo
sbb
push
jl
and
orl
mov
cmp
mov
rcr
inc
ret
mov
xchg
es
and
sub
pop
rolb
jg
dec
push
and
iret
cmp
jg
dec
jb
mov
xchg
lock
lock
popa
repnz
mov
xchg
bound
mov
or
movsb
add
mov
inc
cmp
divb
addr16
cmpsl
adc
repz
das
cmp
int3
fbstp
jno
cmp
and
je
lcall
inc
call
sbb
repz
in
pop
xlat
in
jg
add
sbb
inc
ds
xchg
lret
jge
jg
int3
rcrb
insl
test
mov
testb
or
inc
mov
and
add
into
lret
outsb
call
jno
shrb
dec
jb
mov
lret
loopne
jne
xchg
sahf
mov
mov
cmp
cmp
jnp
push
test
lahf
scas
cmp
aam
lods
mov
xlat
push
in
cmc
pop
scas
lcall
mov
mov
sub
xor
js
mov
push
test
imul
jecxz
adc
sub
cmp
and
testb
mov
insb
push
cmp
test
addr16
outsl
pop
jb
fcompl
xchg
pop
lret
jge
cmp
inc
scas
lock
and
jbe
loope
add
jmp
pusha
scas
imul
jp
leave
out
mov
cmc
pop
loop
push
or
std
xlat
aad
xor
mov
sub
add
jmp
xor
add
add
mov
mov
mov
xor
add
movl
mov
not
movl
mov
mov
mov
and
mov
xor
mov
add
cmp
je
mov
xor
movl
movl
mov
sub
movl
add
movl
mov
mov
mov
xor
add
cmp
jne
mov
jmp
lret
pop
idivb
addr16
push
into
jg
cwtl
or
add
sahf
jnp
gs
adc
in
push
adc
js
xchg
fsubr
in
xlat
xor
es
mov
scas
adc
ss
inc
xor
imul
roll
call
hlt
xchg
mov
jp
mov
add
jne
lods
stc
xchg
lods
push
js
pop
inc
pop
es
xor
jg
mov
sbb
jbe
dec
test
lahf
les
mov
das
lea
std
icebp
stos
icebp
aam
pop
pop
mov
dec
aas
xchg
and
push
call
lcall
inc
orl
sub
frndint
sbb
push
lahf
mov
out
inc
test
pop
addr16
jmp
cld
andb
subl
jo,pn
cld
sub
daa
insl
dec
sub
dec
std
adc
aaa
pop
jae
dec
ret
jecxz
mov
xchg
enter
call
aad
push
pushf
outsl
pop
fnstsw
pop
ss
cmc
cmp
call
pop
rclb
xlat
mov
test
push
dec
in
mov
mov
stos
xchg
ljmp
mov
add
sbb
outsb
popa
inc
and
jle
mov
mov
adc
sarl
lds
out
and
scas
in
movsl
push
in
xor
inc
dec
shl
mov
add
pop
lret
mov
mov
and
rol
xorl
stos
pop
sub
lea
adc
loopne
aaa
dec
sbb
outsl
jmp
roll
mov
xchg
mov
mov
push
xchg
fidivrs
mov
cmp
loopne
adcl
push
xor
cmp
xchg
add
pop
jne
icebp
fs
jmp
dec
leave
movsb
add
cmpb
mov
xorl
xchg
pop
xchg
push
int
push
adc
sbb
in
cmpsb
leave
sbb
and
adc
pop
fdivrp
les
jae
addl
scas
push
mov
and
std
mov
lds
mov
fisubs
into
out
shll
push
pop
out
adcl
cmc
cmpsb
jl
insb
jns
jnp
or
cld
mov
lea
loop
cmc
je
mov
jge
aad
sbb
pop
push
dec
and
int3
iret
sbb
push
out
addl
loopne
out
fstpt
es
pushf
mov
cmp
mov
xchg
xchg
dec
adc
sbb
dec
mov
hlt
mov
push
inc
adc
daa
scas
shlb
jnp
mov
pop
xchg
xchg
idiv
inc
fstps
jns
stc
push
jl
mov
fsubs
cli
add
pop
dec
or
adc
push
adc
movsl
fwait
mov
cmpsl
pop
dec
pusha
or
push
push
test
push
popa
cltd
aam
pop
push
imul
inc
sub
rcll
mfence
inc
aaa
mov
cmpsb
cs
mov
adc
fsubr
repz
stc
or
mov
mov
mov
das
pop
cltd
push
pop
xlat
cmp
mov
pop
loope
in
and
mov
js
hlt
add
adc
mov
sarb
daa
jg
and
fwait
ds
es
xor
push
loope
out
loope
pop
fsts
pop
lods
outsl
outsl
mov
push
in
adc
clc
mov
fiaddl
or
mov
pop
mov
dec
repz
sbb
popf
mov
outsl
dec
aas
xchg
push
out
arpl
sub
orb
mov
cmp
push
mov
cld
imul
data16
sub
xchg
out
pushf
fildll
sti
sti
in
pusha
sahf
cmp
rcrl
aas
aas
nop
mov
hlt
xchg
jp
in
cltd
inc
addr16
scas
push
aaa
cmp
lea
cmp
xor
mov
lock
mov
ljmp
out
or
fmull
lds
cmp
ret
clc
jge
jne
lretw
subb
ja
repz
jle
shr
xchg
lcall
xchg
add
gs
rcr
cmp
adc
punpckhbw
mov
out
push
push
incb
push
cli
jl
or
inc
mov
call
add
sbb
pop
xor
insl
lahf
or
fisttpl
clc
inc
and
and
fdivl
aas
ds
xchg
ffreep
jl
xor
movsb
xor
rcl
inc
loop
or
push
lret
rclb
xor
pushf
inc
lods
in
and
rorb
mov
inc
in
popf
mov
outsb
out
xor
cld
push
and
rorb
push
ret
cmp
push
imul
in
dec
xchg
cmp
jns
sbb
rcrb
add
adcl
and
lds
xchg
pushf
mov
ljmp
dec
pop
and
fistps
xchg
sub
pop
icebp
adc
andb
xchg
ret
fcoms
xchg
adc
sub
ja
mov
test
cmpsl
repnz
add
mov
or
loopne
add
xchg
scas
mov
jno
mov
icebp
out
push
jb
out
push
sbb
and
lea
mov
add
ret
push
push
leave
xchg
test
fidivs
and
sub
xchg
clc
dec
push
pushf
push
sbb
fdivr
scas
ljmp
das
ret
push
cld
mov
and
pop
shlb
paddb
dec
mov
jg
sti
cltd
jns
insb
jp
mov
xor
push
mov
push
and
insb
inc
out
lds
xchg
cmp
jg
pop
add
mov
mov
sbb
adc
shr
mov
add
sub
inc
push
not
xor
data16
aas
imul
jmp
jmp
mov
lea
rcrb
divl
das
adc
push
lds
lcall
inc
fs
out
orb
jmp
or
jae
cmp
clc
nop
dec
xchg
mov
cs
mov
xchg
data16
cmp
pop
adc
out
or
sub
cmc
or
xchg
int
mov
ljmp
movsl
push
mov
test
fwait
push
sub
push
sub
xchg
jmp
pop
sub
cltd
out
fdivrs
lret
cltd
lahf
jmp
mov
out
lea
xchg
hlt
xlat
or
lret
xchg
sub
mov
gs
ret
jno
mov
aad
not
inc
sub
dec
dec
xlat
jecxz
cmc
lods
push
or
popa
add
rolb
cmpsl
sub
xor
adc
and
lock
xchg
lcall
jae
daa
sub
sbb
cmp
gs
xlat
mov
mov
iret
lods
mov
out
std
popa
jnp
jmp
das
fnstcw
iret
ds
add
lock
ret
jo
in
jl
bound
pop
out
push
mov
mov
add
mov
aam
cltd
ret
das
shr
xchg
xchg
pop
aad
insl
mov
jmp
fs
enter
jle
bound
std
ret
cli
rcrb
aaa
add
call
pop
dec
shll
jmp
outsl
ret
ret
jbe
inc
cmpsb
leave
sbb
cmp
mov
cmpsb
push
outsl
mov
pushf
mov
xchg
ljmp
sub
dec
mov
sarb
mov
jg
mov
loope
ret
add
ror
lds
inc
jae
jb
pop
mov
and
jle
fcomps
scas
push
scas
out
call
iret
inc
lahf
aam
pop
jp
call
inc
std
mov
lret
push
cmp
repz
out
mov
xlat
dec
sti
insb
mov
adc
movl
sbb
sub
or
jns
dec
and
scas
mov
aas
mov
pop
insl
jecxz
adc
adc
add
push
pop
fsubrp
divl
add
jmp
icebp
add
out
pop
mov
jno
pop
add
cmp
cli
aas
pop
jle
call
xor
imul
mov
cmp
dec
ret
lods
xor
adc
adc
xchg
iret
iret
repnz
xchg
mov
sbb
js
cld
sbb
pop
fxch
fcmovb
fdivrp
inc
mov
cmp
jo
in
inc
insb
mov
jnp
push
icebp
insb
cmpsb
rorl
jl
inc
ss
xor
sub
pop
xchg
inc
xor
cmp
add
filds
rorl
mov
addl
cmpsl
test
loope
or
jae
arpl
dec
stos
test
cltd
adc
push
inc
pushf
adc
pop
ljmp
xor
push
sub
jmp
jnp
mov
and
pop
pop
insb
mov
jae
xor
and
jle
inc
xor
das
inc
arpl
jl
call
or
cmp
dec
or
jno
add
addr16
xorl
xchg
insl
fxam
cmp
push
sub
popf
jmp
shll
stos
jge
imul
mov
cs
dec
push
ficomps
stc
cld
div
push
fsub
mov
into
sti
imul
incl
aad
imul
mov
jge
fidivs
push
repnz
mov
test
pop
aam
aas
mov
pusha
inc
push
in
push
jp
xchg
out
cmpsb
loope
jbe
push
out
insl
test
out
dec
or
loopne
test
mov
adcl
xchg
add
push
sti
push
cmp
pop
xor
push
ret
add
sarl
ss
pop
pop
popf
adc
jl
add
imul
cmp
loopne
popl
pop
sbb
loope
mov
aaa
stos
fmuls
sbb
arpl
leave
pop
int3
gs
test
and
inc
cltd
jo
addr16
xchg
jns
xlat
shll
xchg
add
or
jo
dec
nop
int
clc
inc
mov
adc
faddl
cwtl
ja
dec
std
lods
das
shll
xor
xchg
gs
xor
adcl
and
inc
sub
in
ss
out
sbb
adcl
pop
inc
je
add
xrelease
data16
fiaddl
jg
xlat
sahf
stc
gs
pop
cli
out
fs
sbb
or
inc
imul
push
dec
push
lods
adc
sub
jle
adc
sub
popa
inc
arpl
pop
repnz
and
push
cmp
leave
mov
and
ss
jne
movsl
out
dec
mov
adc
sub
sub
jmp
pop
fldl
add
sbb
mov
jne
add
nop
cmpsl
int3
test
insb
out
imul
bound
push
add
or
push
pop
out
pop
dec
add
and
xor
popf
lds
inc
mov
jnp
ret
leave
push
add
cmpsl
seto
scas
inc
cli
in
cmp
pop
xor
test
or
bound
in
dec
fcomps
mov
add
lock
aad
inc
scas
push
lcall
insl
xchg
or
xor
subb
bound
aad
and
lcall
mul
mov
adc
out
movsb
movsl
mov
inc
and
in
mov
hlt
addr16
dec
sti
and
pminsw
aas
fistpl
iret
adc
inc
rcll
mov
inc
pop
xchg
fldcw
inc
pusha
mov
out
or
test
gs
inc
xchg
das
pop
add
jne
outsl
cltd
push
jb
scas
push
shrb
sbb
xor
outsl
jle
xlat
adc
push
fists
ss
sub
cltd
sbb
pop
mov
mov
jns
xor
push
sub
sub
adc
rcll
fcmovnbe
lods
add
andl
xor
mov
add
in
inc
test
mov
and
dec
xchg
bound
or
dec
cmp
cmpsb
adc
lds
sbb
sbb
ja
mov
or
pop
pop
push
sti
sbb
cmpl
mov
push
mov
inc
xchg
inc
jo
jno
mov
push
mov
das
outsw
pop
imul
cld
push
push
lods
xor
dec
or
std
popa
cmp
pop
addr16
fs
pop
shll
mov
aas
add
mov
stos
mov
lcall
stos
stos
push
mov
icebp
sub
mov
push
sub
das
lds
dec
xchg
and
daa
mov
sbb
dec
pop
mov
dec
mull
in
xchg
pop
in
pop
inc
or
cmc
lahf
loope
mov
xchg
cmp
ljmp
adc
sub
ret
lcall
xchg
sbb
imul
ret
sub
ror
fcompl
scas
pop
mov
nop
mov
pop
rorl
call
jg
jg
imul
and
mov
mov
jge
sub
shll
adc
jnp
xchg
mov
in
fbld
and
pop
lret
mov
subb
jnp
rorb
adc
stos
rclb
cld
and
jne
popf
mov
push
push
xor
dec
mov
mov
pop
adc
cmpsb
jno
adc
or
xor
ret
push
jns
out
sub
gs
push
add
into
jns
mov
out
sub
imul
test
inc
jmp
data16
flds
xchg
cmp
daa
mov
xchg
in
xchg
pop
mov
adc
ljmp
outsl
and
or
and
mov
stos
sbb
lret
das
test
ds
mov
pop
mov
inc
cmpsl
daa
xchg
jg
movzbl
lock
in
out
cmp
hlt
and
out
in
push
popa
clc
jg
jns
pop
adc
pushf
or
sub
subb
pop
mov
and
fistl
push
pop
push
rcrb
in
push
add
mov
lahf
clc
mov
stos
and
outsl
mov
add
call
or
mov
ret
fstpl
or
scas
sbb
loope
test
mov
fwait
jg
scas
pop
and
add
mov
sub
push
call
mov
rorl
stos
lahf
mov
inc
test
in
outsl
push
sub
mov
pop
fcmove
movsl
xchg
push
or
inc
neg
mov
daa
inc
cmp
xchg
imul
fsubrl
cmc
inc
gs
xchg
les
sub
xor
mov
mov
in
clc
adc
jne
lock
ret
pop
lea
test
push
test
sbb
hlt
stc
ljmp
sbb
cmp
xor
add
nop
cmp
push
fs
or
insl
dec
inc
push
mov
jo
mov
mov
pop
sti
xchg
roll
cmpsb
hlt
mov
adc
ljmp
pop
into
aad
shl
aaa
sub
pop
out
sahf
pop
jmp
cs
mov
in
lahf
loop
sub
jbe
je
jae
rep
inc
pop
sub
xchg
cmpsb
adc
fpatan
pop
cmp
inc
pop
std
call
js
loope
mov
testb
inc
nop
xlat
sub
mov
inc
test
cmpsl
rep
into
xor
xor
jne
xchg
lret
inc
in
outsb
pop
push
fsubs
xchg
push
mov
pop
mov
pop
mov
repnz
mov
mov
mov
sub
leave
mov
cmp
lret
cmp
movsb
mov
mov
adc
js
inc
pop
xor
andl
xor
mov
inc
lcall
shrl
stc
insl
popa
sub
xchg
xchg
lret
cwtl
mov
fsubl
out
clc
cld
push
adc
pop
test
loopne
icebp
adc
inc
xor
mov
cs
sub
inc
and
ficomps
jno
stc
test
addr16
xchg
push
frstor
fisttpl
add
sbb
call
mov
sarb
pop
xchg
leave
data16
dec
mov
xchg
pop
std
jae
orb
push
daa
scas
popa
jle
xchg
xchg
lahf
out
outsl
fcompl
movb
repnz
mov
jnp
sbb
push
dec
adc
mov
add
aaa
stos
xor
cmpl
dec
add
test
ds
cli
fs
aad
mov
add
push
adc
movsl
cmc
adc
push
ja
sub
cwtl
push
es
jns
inc
cmp
sbb
orl
mov
push
inc
in
xchg
iret
pushf
mov
icebp
test
sbb
sub
pop
popa
jae
cmp
sti
aas
dec
dec
pusha
xchg
xchg
xor
jns
test
outsl
xor
psllw
inc
sahf
pop
dec
pop
push
rorl
mov
mov
sbb
lret
out
cs
in
sub
push
add
frstor
pop
sbb
or
push
jb
xor
cld
ja
adc
mov
lds
sbb
fnstenv
je
mov
pop
lcall
repnz
jmp
xor
jbe
xor
or
add
adc
pushf
scas
js
cld
call
push
cs
mov
sub
and
iret
in
xchg
pop
scas
arpl
in
push
mov
or
out
sbb
in
call
ret
lea
push
test
in
xchg
jle
dec
mov
inc
xchg
mov
out
mov
out
jmp
sub
jnp
inc
inc
daa
sub
push
movsl
mov
stc
jbe
jno
push
out
push
rorl
inc
hlt
inc
out
cmc
loop
scas
out
pusha
aas
lret
daa
xchg
notl
jle
in
push
out
icebp
scas
shr
push
lea
jnp
mov
lods
into
movsl
pop
sbb
lods
and
push
jmp
mov
pop
sbb
add
lea
sahf
xchg
sahf
pop
dec
icebp
xorl
xlat
add
push
test
movsl
daa
pop
ret
xor
pop
jns
or
add
cmpl
jne
jae
fnstcw
lret
xchg
push
jo
pop
xor
out
or
test
add
lcall
out
push
adc
push
xchg
movsl
or
ss
adc
push
mov
loop
or
ds
lea
fs
jb
movsl
loopne
add
mov
fldt
xor
sbb
sti
dec
xor
loopne
pop
mov
test
bound
nopl
inc
stos
and
lret
cmpsb
cld
mov
aam
loope
xor
sbb
mov
mov
pop
cmpb
pop
pop
mov
mov
xchg
rol
cmp
adc
jne
cld
fstpl
and
pop
sub
or
dec
data16
imul
rcrb
ds
clc
xchg
adc
and
test
xor
xor
sub
std
into
cmp
pusha
loop
inc
shl
in
call
mov
push
cmp
sbb
pop
cmp
push
outsl
cmp
xchg
xchg
test
int
and
int3
lea
test
in
cs
bnd
scas
dec
ss
xor
jl
mov
pop
add
int3
int3
and
sub
mov
fs
add
out
ja
int
jae
ds
int
loop
outsl
adc
mov
pop
inc
or
sbb
mov
push
cmovnp
insb
push
mov
jg
movsb
daa
test
std
loopne
jo
or
sub
xchg
or
cmpsl
popa
fstpt
adc
mov
inc
sahf
mov
bound
add
jb
mov
adc
dec
mov
pop
loop
test
cmp
sbb
cmp
les
fmulp
mov
aad
or
ja
cmp
pop
into
lea
push
into
pushf
repnz
push
int3
jp
xchg
adc
mov
enter
repz
xchg
and
mov
dec
add
dec
in
das
sbb
pop
fsubr
fmuls
aas
add
in
jae
subl
and
repz
ret
xlat
pop
sbb
jno
stos
sub
push
xor
add
or
out
mov
xchg
add
shl
aad
icebp
sbb
mov
cmpsb
sbb
inc
ds
jecxz
fisubl
shll
mov
and
push
les
imul
cli
loope
out
cs
sbb
push
lcall
lahf
out
jecxz
mov
insl
xchg
xchg
aam
sarl
sub
test
shr
mov
lds
test
ss
ja
jecxz
add
into
iret
popa
dec
sub
imul
sbb
or
and
xor
aas
imul
fs
jmp
push
mov
call
xchg
cmc
loop
sub
cwtd
jo
stos
das
push
pop
test
push
xorps
mov
sub
mov
xchg
out
mov
cli
ret
inc
mov
dec
rcrl
repnz
sbb
in
mov
lods
loope
or
int3
fdivl
fmul
mov
mov
rolb
outsl
sbbb
mov
fnstsw
ljmp
call
pop
jmp
mov
addb
mov
cltd
mov
jb
mov
push
gs
xchg
dec
mov
sub
ror
xchg
add
jne
scas
popf
jge
mov
mov
shll
in
fld
xchg
cmp
pop
mov
outsl
pop
scas
cltd
push
cmp
js
mov
lahf
sbb
notl
sub
incb
adcl
fdivr
adc
movsb
mov
mov
das
mov
in
jp
stos
notl
aas
cld
add
stc
clc
stos
fcmovne
xchg
xor
push
mov
dec
imul
scas
pop
mov
ljmp
pop
xchg
cmc
push
mov
dec
js
int
jmp
mov
icebp
xor
inc
into
movsb
jne
cmc
rorl
xor
xchg
cmp
mov
cli
push
inc
ja
fsub
or
dec
subl
pop
jne
hlt
xor
popf
dec
lret
push
data16
lret
fists
sbbb
lcall
cmp
arpl
inc
mov
shl
out
andb
jg
mov
mov
ds
mov
mov
sbb
cmpsl
lods
xor
cmp
adc
mov
ret
push
jae
test
clc
mov
fsubrl
add
aam
inc
in
push
pop
xchg
inc
and
cs
pop
mov
lods
repz
test
hlt
jns
push
imul
mov
push
fiaddl
push
add
jmp
add
mov
xlat
sub
pop
lahf
cli
loopnew
push
xor
mov
dec
cmc
je
mov
je
rolb
lcall
push
sub
movsb
sbb
push
popf
out
enter
adc
add
imul
dec
jp
aas
and
lahf
lfs
xor
jp
shlb
xor
orl
mov
imul
jns
dec
lods
and
pusha
pusha
sarb
pop
or
adc
cmpsb
das
sti
daa
mov
jmp
and
mov
test
fdiv
pop
mov
or
out
ljmp
sbb
ss
mov
mov
pop
or
cmp
popa
inc
or
aas
mov
cmp
daa
adc
mov
xchg
xchg
stc
add
cltd
jmp
imul
lret
mov
sub
jb
dec
aad
push
pop
sub
mov
sub
rclb
xchg
cmp
cmp
xlat
in
xor
das
and
sbb
xor
nop
cmc
add
or
rcll
mov
sub
data16
rcll
sti
ljmp
and
push
xchg
jne
jg
test
xchg
subl
mov
fmull
sahf
loope
mov
lahf
sub
movsl
cli
loope
test
push
pusha
add
adc
pop
adc
mov
cmp
std
xlat
out
inc
pushf
mov
fs
sub
ret
pop
cmp
jns
inc
pop
jns
sub
and
sbb
scas
in
cld
insl
push
loope
add
inc
stos
add
loop
inc
push
std
iret
stos
cli
dec
xchg
popa
outsb
je
arpl
sbb
or
xor
jns
mov
or
ja
pop
jmp
leave
dec
mov
mov
jmp
or
sbb
add
cmp
push
sbb
cmc
test
and
add
lock
sbb
xchg
out
outsb
imul
mov
cmc
or
adc
pop
or
hlt
xor
clc
push
cmpsb
ret
inc
cld
cltd
insb
lret
jbe
popa
insl
xchg
inc
shll
addl
nop
es
gs
adc
push
leave
mov
sub
mov
lds
inc
test
ds
jns
test
dec
sbb
sbb
in
dec
jae
subb
dec
lahf
fwait
dec
cmp
push
iret
daa
fldcw
jo
jg
dec
stos
insb
add
xchg
push
into
out
xchg
push
out
and
inc
insb
data16
sbb
pop
sahf
sbb
lods
loope
push
testl
pop
mov
idivb
jns
repz
push
out
testl
mov
xchg
push
inc
jo
cli
or
aam
jge
inc
xor
add
sub
mov
mov
push
or
cwtl
xlat
andl
into
in
xor
subl
jecxz
push
pop
and
and
popl
cs
xchg
out
jmp
sub
clc
push
popf
sbb
jbe
lahf
lods
mov
pop
sub
jns
mov
aas
jmp
arpl
std
lcall
cmp
mov
lcall
fisttpl
push
push
adc
das
in
xchg
movsb
or
xor
adc
add
hlt
pop
push
xchg
and
xor
push
cmp
add
dec
ret
add
push
and
cmc
int3
es
imul
adc
inc
push
and
repnz
sbb
lahf
inc
or
icebp
stos
sbb
mov
sahf
mov
shr
and
push
test
xchg
fsubrs
test
lret
clc
imulb
pop
rclb
in
add
add
cmc
dec
jmp
add
testb
lods
mulb
dec
cmc
cli
in
fstl
sub
stos
cmc
ja
out
push
cmp
lock
xchg
rol
inc
movsb
cmc
in
in
test
inc
mov
cmp
sub
jno
mov
add
and
push
movsl
ja
les
fisubrs
ljmp
mov
mov
aad
mov
seta
and
mov
into
push
inc
ja
insb
outsl
xor
ds
scas
test
pushf
fildl
xchg
rcl
sub
inc
cmp
jno
add
inc
sahf
adc
or
sbb
and
push
pop
movsb
push
jl
dec
stos
aas
lock
sbb
pop
fdivrs
fstpl
sbb
jmp
inc
insb
ret
in
pop
inc
sbb
mov
jns
shlb
ficomps
out
pop
cli
sbb
adc
dec
pop
rcll
out
in
mov
call
ret
push
movsl
aaa
adc
cmp
or
xchg
lcall
lcall
sti
lods
and
cltd
jp
mov
jle
movsl
jmp
xor
nop
cmp
pop
pop
sbb
cmpsl
jnp
xchg
sbb
fldz
sbb
adc
jo
mov
aad
push
sti
lret
orb
aaa
xor
xor
dec
enter
rolb
add
cmpsb
xchg
lea
fdivs
outsb
xchg
pushf
mov
mov
popa
mov
mov
hlt
ret
ss
pop
shrb
fldt
push
xor
nop
jle
push
or
xor
in
lods
popf
mov
push
jp
mov
insb
push
bound
cmc
xchg
rorb
shll
ds
cld
fucom
or
je
arpl
and
aam
fisubrs
push
push
jmp
mov
out
push
ret
test
movsl
pop
sarl
and
xorb
rcll
jge
test
dec
xlat
add
call
dec
and
jge
nop
leave
xchg
xchg
movsb
push
push
pop
jp
or
jae
fldl
ror
or
mov
je
dec
jo
xchg
cmp
bound
imul
push
pop
pop
sbb
mov
jb
cmp
repz
mov
inc
ljmp
test
push
sub
mov
push
xor
sub
mov
stos
cmpsl
mov
cmp
jnp
inc
mov
stos
lcall
cmp
sub
fistpl
sub
jae
pop
das
mov
insb
inc
mov
push
std
inc
inc
int
je
ret
push
jge
add
xchg
stos
out
inc
mov
inc
lods
and
cltd
fadd
adc
or
pop
movsb
add
mov
xor
rcrb
add
out
mov
rclb
ds
fwait
sbb
push
jp
mov
xor
mov
test
sarb
popa
pop
xchg
pop
adc
mov
cmpsl
pop
mov
addr16
mov
xchg
lcall
jae
jg
push
xor
fs
insl
scas
xchg
int
cmc
stos
not
pop
sub
sub
add
pop
imul
mov
jle
jnp
test
mov
dec
jb
mov
je
ds
js
push
xor
jno
daa
cmp
gs
outsb
pushf
loope
xor
bound
sahf
cld
and
movsb
out
sub
mov
add
cmpsb
mov
lahf
movl
out
outsl
cmpl
sarb
pop
jmp
mov
das
mov
adc
in
mov
lds
cltd
jg
test
gs
pop
xchg
fimull
push
andl
ja
pop
push
daa
adc
es
xor
loopne
mov
jno
mov
andb
mov
dec
inc
std
test
cltd
fwait
dec
je
lods
dec
imul
push
inc
loop
sbb
sbb
test
popf
orb
jl
in
cmp
insl
add
pop
add
xchg
mov
pop
inc
xor
movsb
push
sbb
jecxz
xchg
scas
mov
neg
mov
leave
lds
mov
push
repnz
pop
cmc
sub
lret
add
loop
int3
movl
aam
sub
and
icebp
lcall
cld
or
je
push
sub
xchg
cmpsl
aad
cs
mov
out
or
fxtract
arpl
stos
adc
loop
cmp
enter
cwtl
sbb
push
or
out
mov
mov
cwtl
and
imul
cmp
and
dec
addl
out
into
js
jbe
mov
orl
add
les
rcrb
notl
adcb
or
jae
inc
int
cli
lods
addr16
push
mov
xchg
int
adcb
js
mov
jo
mov
xor
jg
test
push
out
aas
cld
adc
xchg
test
mov
sbb
pop
mov
jmp
mov
ds
dec
ret
cli
push
mov
clc
xor
mov
jmp
mov
push
lcall
gs
mov
mov
pop
mov
dec
cwtl
int
inc
enter
mov
mov
lea
mov
mov
mov
xor
add
mov
mov
xor
mov
add
cmp
je
mov
add
mov
mov
mov
mov
xor
mov
mov
add
cmp
jne
mov
mov
mov
jmp
pushl
pushl
jmp
mov
mov
cmp
jne
cmp
jne
push
push
jmp
mov
mov
cmp
jne
cmp
jne
push
push
pushl
pushl
pushl
pushl
call
pop
pop
pop
leave
ret
push
mov
and
sub
mov
push
movl
push
movl
push
movl
movb
cmp
je
xor
movl
jmp
mov
movl
cmp
jne
mov
push
adcl
push
call
sbbl
test
movl
je
push
andl
push
call
andl
push
subl
lea
adcl
push
xorl
call
add
movl
or
mov
adc
mov
movl
dec
lea
andl
xor
add
inc
mov
cmpl
jle
jmp
push
pushl
push
call
cmpl
jb
mov
adc
lea
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jb
jmp
push
pushl
pushl
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
xor
or
or
mov
mov
mov
movl
cmpl
je
cmpl
jl
jmp
pushl
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
adc
mov
sub
xor
addl
mov
orl
add
movl
mov
not
mov
cmp
jne
neg
mov
mov
xorl
mov
xor
addl
add
addl
mov
mov
xor
add
mov
mov
subl
xor
add
orl
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jg
jmp
push
pushl
call
jmp
mov
mov
mov
sbbl
mov
movzwl
sub
mov
mov
mov
mov
addl
mov
subl
mov
movl
mov
add
mov
xor
add
jmp
mov
cmp
jne
mov
cmp
movl
jne
push
xorl
push
call
orl
test
movl
je
mov
cmp
movl
jne
movl
mov
movl
cmp
movl
jne
adcl
push
incl
push
call
test
movl
je
sub
mov
sbbl
mov
addl
xor
adcl
lea
push
mov
andl
xor
xorl
lea
push
xor
mov
pushl
xorl
call
xor
xor
mov
sub
sub
mov
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jbe
jmp
push
pushl
call
jmp
mov
add
xor
xor
lea
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jbe
jmp
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
andl
xor
xor
add
andl
mov
inc
mov
cmpl
jle
jmp
push
call
cmpl
jb
mov
adcl
xor
movl
lea
movl
mov
movl
cmp
movl
jbe
and
mov
movl
cmpl
je
cmpl
jb
jmp
pushl
call
cmpl
jne
mov
dec
mov
xor
add
dec
mov
jmp
mov
sbb
mov
mov
mov
mov
decl
sub
xor
movl
mov
lea
movl
mov
lea
movl
mov
mov
movl
cmp
jne
mov
movl
cmp
movl
jne
push
sbbl
push
sbbl
call
orl
test
je
movl
mov
cmp
movl
jne
movl
mov
cmp
jne
addl
push
push
call
test
movl
je
mov
cmp
movl
jne
movl
mov
movl
cmp
movl
jne
push
addl
push
call
test
movl
je
mov
movl
cmp
movl
jne
movl
mov
movl
cmp
jne
xorl
push
push
call
orl
test
je
mov
movl
cmp
movl
jne
movl
mov
movl
cmp
jne
xorl
push
push
addl
call
andl
test
je
mov
movl
cmp
jne
movl
mov
movl
cmp
jne
push
push
call
subl
test
je
mov
movl
cmp
movl
jne
movl
mov
cmp
movl
jne
addl
push
sbbl
push
addl
call
test
je
mov
cmp
movl
jne
movl
mov
movl
cmp
movl
jne
sbbl
push
orl
push
adcl
call
adcl
test
movl
je
movl
mov
movl
cmp
movl
jne
mov
movl
cmp
movl
jne
subl
push
push
movl
call
test
je
mov
movl
cmp
movl
jne
mov
movl
cmp
movl
jne
adcl
push
adcl
push
call
subl
test
movl
je
movl
mov
movl
cmp
jne
movl
mov
movl
cmp
movl
jne
push
push
sbbl
call
subl
test
je
mov
cmp
jne
mov
cmp
jne
push
push
call
test
je
mov
cmp
jne
mov
cmp
jne
push
push
call
test
je
mov
cmp
jne
mov
cmp
jne
push
push
call
test
je
mov
cmp
jne
mov
cmp
jne
push
push
call
test
je
mov
cmp
jne
mov
cmp
jne
push
push
call
test
je
mov
cmp
jne
mov
cmp
jne
push
push
call
test
je
mov
cmp
jne
mov
cmp
jne
push
push
call
test
je
mov
cmp
jne
mov
cmp
jne
push
push
call
test
je
mov
cmp
jne
mov
cmp
jne
push
push
call
test
je
mov
cmp
jne
mov
cmp
jne
push
push
call
test
je
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
pushl
mov
pushl
add
mov
mov
pushl
call
mov
mov
mov
jmp
mov
mov
xor
add
cmp
jne
mov
mov
mov
xor
add
cmp
jne
mov
push
push
xor
add
push
push
pushl
pushl
call
pushl
pushl
call
mov
xor
add
mov
mov
xor
add
mov
mov
test
je
movl
movl
movl
movl
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
andl
mov
add
adcl
mov
xor
mov
mov
xor
cmpl
mov
jne
cmp
jne
mov
mov
xor
mov
mov
mov
add
jmp
mov
mov
cltd
add
adc
andl
xor
mov
mov
mov
xor
add
mov
adcl
xor
mov
mov
xor
mov
cmp
jne
mov
cmp
je
mov
add
mov
jmp
mov
mov
xor
mov
mov
mov
add
mov
mov
mov
mov
xor
add
xor
add
adc
xor
xor
xor
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
movl
cmpl
je
cmpl
jge
jmp
push
call
mov
dec
mov
jmp
mov
mov
or
movl
sbb
mov
sbb
push
mov
incl
xor
sub
mov
adcl
push
mov
xorl
add
movl
cmp
je
andl
xor
add
inc
mov
cmpl
ja
jmp
push
call
cmpl
jne
xor
or
inc
mov
cmpl
jb
mov
xor
xor
or
mov
andl
xor
addl
xor
adcl
add
add
adc
andl
xor
xorl
mov
push
xor
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jle
jmp
pushl
pushl
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
xor
mov
add
adc
xor
xor
cmp
jmp
pop
popf
cwtl
jo
jp
mov
cmp
cld
add
sahf
jnp
jge
jge
mov
scas
xchg
repz
sub
enter
movsb
cmpsl
outsb
or
cmpsb
shlb
popf
ja
mov
adc
sti
mov
js
fidivrs
popa
add
adc
jmp
sbb
stos
loopne
aas
sub
ds
cmp
mov
push
adc
mov
mov
aad
pushf
jne
fwait
mov
sbb
shl
mov
cmp
and
jne
sbb
fisttpl
and
int
pop
outsl
adc
sub
fisubs
ljmp
out
scas
push
dec
adc
cmp
sbb
mov
pop
adc
mov
jae
jmp
push
mov
dec
push
push
cmc
bnd
jae
sti
out
xor
xor
lods
lock
loop
inc
pop
out
fldenv
dec
inc
sub
mov
push
jle
jl
neg
xchg
jnp
mov
sub
mov
adc
mov
test
xchg
mov
mov
cmp
in
aaa
frstor
sbb
fdivp
dec
jbe
pop
jno
xchg
cmp
adc
mov
xchg
psubusb
sahf
pop
mov
inc
sbb
cmc
xchg
scas
dec
xchg
inc
in
imul
sbb
cmpsb
mov
ds
inc
mov
and
int
sahf
xchg
loope
aaa
stos
sbb
mov
push
rcll
ret
out
sbb
xchg
out
mov
jbe
cmp
sarl
jbe
or
mov
add
shlb
aas
sub
fistps
out
divl
or
jle
xchg
jb
lock
lds
sbb
scas
add
and
testl
outsb
loop
dec
aad
test
sub
movl
lret
loop
xchg
xchg
rcll
adc
inc
xchg
lahf
imul
adc
out
fcomip
add
cld
lret
and
sbb
sbb
dec
or
and
adc
aam
inc
add
inc
push
push
int3
stc
std
aad
cmp
aad
xchg
out
push
xor
pop
out
out
rolb
cmpl
jns
aam
cmp
test
dec
ficompl
push
pushf
mov
mov
pop
outsl
sar
cmp
out
or
jmp
mov
pop
roll
fists
cli
adc
lods
mov
ds
imul
mov
into
xchg
xchg
mov
ds
jno
xlat
loopne
fimull
test
scas
fisubrs
sbb
inc
sub
inc
mov
dec
and
jnp
and
clc
mov
jp
pop
pop
jl
jle
sub
addb
cwtl
inc
popf
push
outsb
adc
and
movsb
xor
inc
pop
enter
xlat
push
lret
mov
sbb
fwait
lea
pop
inc
lock
mov
adc
push
jns
push
mov
ret
or
push
mov
leave
out
jp
stos
xchg
icebp
pop
xchg
cmpsl
movsb
adcb
jb
cld
xchg
adc
jb
jmp
sbb
sub
pop
pop
xor
subb
mov
and
push
xchg
jle
and
lret
es
lock
and
and
icebp
inc
mov
jne
mov
sub
cwtl
pop
jmp
shlb
stos
jp
sti
int3
mov
cmp
jns
int
mov
ror
dec
inc
adc
cmp
sbb
dec
in
in
or
jno
or
enter
scas
and
sub
lds
int
push
ret
xor
push
lea
femms
stc
enter
into
outsb
int
cmp
stc
jg
enter
inc
imul
roll
faddl
out
dec
cmpsb
push
or
pusha
xchg
inc
int
daa
jge
aas
in
or
xchg
mov
sub
sarl
dec
dec
dec
dec
int
and
in
sub
push
stos
push
ljmp
sbb
insl
lahf
cmp
inc
or
imul
jno
push
int3
popl
jle
mov
adc
jl
pop
das
push
pop
mov
xor
mov
hlt
add
jg
push
or
pop
ljmp
lock
frstor
xor
push
cmp
push
jnp
pop
testl
fs
aam
push
icebp
pop
push
mov
dec
mov
shrl
arpl
adc
pop
mov
js
push
leave
rorl
mov
sub
add
push
or
jne
stos
sub
push
mov
aas
push
into
pmullw
adc
sbb
lds
lea
cli
cmp
add
movsb
shll
out
mov
fsub
out
or
xchg
jo
lahf
jp
mov
fcom
sti
and
xchg
arpl
cwtl
pop
cli
cmp
push
rclb
daa
mov
aaa
jne
aaa
xor
and
mov
or
lds
pand
mov
arpl
xor
mov
push
hlt
testb
iret
pop
push
xchg
mov
add
add
out
popa
leave
inc
mov
lret
xchg
cs
jo
call
inc
imulb
fdivrl
inc
jp
jl
and
jb
add
loope
shll
in
sbb
adc
mov
sub
dec
pop
pop
jne
lock
adc
clc
xchg
int3
mov
xchg
fmull
insb
lcall
ret
arpl
lea
xor
push
out
roll
inc
mov
negl
mov
out
or
xlat
loop
repnz
pop
rcr
cmpsb
test
mov
dec
inc
adc
ljmp
sbb
sub
push
xor
cmp
mov
negb
testb
push
test
mov
lcall
jo
dec
mov
mov
xor
addb
jo
pop
xchg
sub
push
cltd
or
daa
fwait
sub
repnz
sbb
out
cld
scas
cs
fstps
mov
sbb
mov
xorb
inc
mov
inc
and
mov
sbb
int3
sti
dec
adc
pop
jl
inc
rcr
ss
or
mov
mov
cmpsl
mov
pushf
ja
lret
jbe
inc
out
outsb
adc
adc
insb
and
push
sub
mov
lea
fsub
loopne
xchg
sub
leave
cld
out
cmpsb
or
cwtl
inc
push
fsts
xchg
cmpsb
jmp
dec
fdivrp
lds
mov
dec
shrb
repz
lahf
cmp
das
mov
cmp
inc
dec
cld
mov
out
data16
movsb
andps
insl
sub
push
cltd
es
shll
push
dec
js
sahf
inc
xchg
imul
mov
loope
ljmp
mov
adc
sarb
clc
mull
sbb
ljmp
push
jle
lcall
outsb
and
fsubs
repnz
out
or
mov
mov
out
xchg
faddl
inc
ja,pt
jmp
cmc
cmpsb
aaa
dec
adc
pop
out
dec
xor
ds
shlb
dec
pop
int
cmp
sbb
xchg
xor
lahf
outsb
int
call
divl
notl
jmp
insb
and
and
xorl
pop
adc
outsb
mov
les
scas
mov
inc
jecxz
pop
mov
cld
pop
out
mov
jg
add
xchg
sub
pushf
loop
xor
scas
clc
push
pushf
sbb
pop
rcr
out
fidivrl
sbb
sbb
sbb
mov
sbb
aaa
or
adc
xchg
dec
mov
mov
in
lret
mov
popf
std
dec
cmp
pop
add
repz
hlt
fnstcw
push
jecxz
dec
or
es
adc
push
repz
pop
bound
dec
and
fs
and
in
popa
inc
xlat
or
int3
xchg
das
mov
adc
das
jne
push
cmp
and
mov
stos
push
popf
push
sbb
lds
dec
sub
sbb
fstl
popa
jl
daa
out
and
jp
sub
or
pop
in
movsb
xchg
dec
sidtl
stos
cmp
ds
mov
xor
mov
push
adc
add
shlb
pop
and
test
add
fs
jo
lcall
push
das
pop
xchg
sub
add
ret
mov
std
mov
xchg
sbb
jecxz
repnz
jge
jae
pop
pop
in
inc
inc
pop
inc
and
mov
push
gs
pop
mov
sub
add
por
bound
adc
mov
push
mov
mov
mov
inc
adc
mov
inc
aaa
xchg
addr16
nop
xor
mov
insl
mov
sub
adc
mov
push
pop
insb
daa
jg
cmc
push
lcall
rcll
mov
je
dec
fsubr
enter
roll
jp
imull
jnp
xor
pop
pushf
add
cmp
mov
jp
int3
or
sub
insb
sbb
mov
mov
xorl
mov
in
jno
lods
add
mov
adc
pop
scas
mov
std
mov
enter
std
dec
add
lahf
push
dec
sbb
hlt
jp
xchg
push
fistpl
lret
add
add
mov
mov
xor
rcr
fwait
jle
sub
shlb
mov
ljmp
add
cmpsb
dec
fs
repnz
enter
xchg
pop
mov
jp
or
jecxz
cmp
std
xor
and
adc
mov
mov
jl
mov
sti
pop
inc
pop
rolb
cmp
incl
add
lods
test
int
rclb
push
out
es
cwtl
sbb
popa
cli
xchg
leave
dec
fists
or
ret
clc
and
sub
rcr
popa
rcrb
mov
les
addr16
mov
add
xchg
les
loope
call
arpl
dec
pop
out
sub
inc
dec
adc
jg
divps
mov
ret
pop
xchg
fsubrl
jp
test
popf
adc
pop
sub
dec
jg
out
cwtl
sub
sbb
mov
mov
jmp
jnp
popa
notl
mov
pop
dec
rol
in
fidivs
or
and
sbb
das
imul
std
cltd
lds
add
int
movsl
pop
fwait
aas
divl
dec
xor
call
clc
pop
rcr
sarl
leave
mov
cmp
sbb
sub
sbb
xchg
push
jp
cli
lret
inc
jl
mov
pop
mov
pop
push
fcompl
cwtl
inc
push
xchg
jno
shll
add
dec
in
test
cmpl
leave
popa
cli
ja
xchg
xchg
int
pop
rcr
popf
add
cmp
dec
insl
lods
mov
pop
ftst
shll
aas
jge
ret
ret
or
mov
xchg
fildll
ret
xor
push
jno
out
sbb
fimuls
mov
add
cmpsb
pop
arpl
inc
and
or
sub
pop
dec
stos
loop
and
mov
ljmp
pop
pop
mov
scas
andb
inc
xchg
dec
and
fstl
mov
mov
mov
aam
fldenv
mov
mov
sub
fbld
jne
ret
shlb
out
dec
add
jae
mov
inc
mov
rol
jp
mov
inc
sbb
cmpsb
cmp
fildll
pop
lds
lea
cmp
inc
repz
push
pop
ror
repnz
repnz
stos
mov
gs
and
lock
push
data16
loopne
cwtl
sub
fdivl
gs
dec
les
popa
bound
xor
adc
scas
test
mov
or
ret
pop
mov
lahf
out
cwtl
movntps
popa
lret
in
or
xchg
fldl
mov
xchg
inc
cmp
cmp
int3
test
mov
adc
rcr
mov
pop
sbb
movsl
stc
insb
inc
sbb
hlt
enter
lods
jae
push
and
adc
fdivrl
mov
test
stc
push
hlt
and
int3
lret
push
aam
xchg
test
or
enter
push
fstl
xchg
lock
arpl
fimuls
add
push
jle
shl
das
loope
xor
sti
cmp
dec
fnstcw
xchg
sub
ja
call
rcr
mov
pop
nop
adc
scas
dec
pop
push
or
xlat
loop
sahf
sbb
lods
push
inc
adc
sub
sub
cmp
mov
es
and
addl
movsl
fnstcw
js
push
sub
push
xor
dec
pop
push
scas
jo
push
loope
fistpll
xchg
ret
mov
xchg
and
push
stos
das
lods
shrb
dec
nop
es
je
mov
insb
xchg
xchg
out
rcl
test
cmp
xorb
add
loopne
pop
js
jnp
and
mov
stos
jge
push
sbb
sbb
push
ret
imull
push
jb
mov
xor
push
jo
dec
mov
and
not
inc
fimuls
mov
sbb
xchg
mov
js
xchg
cmp
lret
dec
mov
les
mov
imul
cmp
xor
daa
pop
subb
inc
nop
js
hlt
shrl
sbb
xchg
push
add
ret
mov
mov
jmp
out
cmpsb
mov
or
add
flds
sub
popa
jbe
lods
rep
mov
enter
add
mov
ret
loop
out
pop
rclb
test
dec
ljmp
pop
pop
jnp
sub
les
mov
mov
in
decl
mov
jg
lcall
stos
icebp
cs
cs
pop
jg
xchg
out
cli
and
les
cmp
je
pop
into
pop
icebp
test
gs
jecxz
mov
push
lods
in
cmpsb
hlt
rolb
enter
addr16
jbe
mov
das
paddusb
cmp
xchg
out
cmp
sbb
jne
outsb
xchg
jnp
and
inc
fdiv
ja
or
gs
mov
loope
cmp
xor
popa
dec
mov
sbb
inc
jmp
jbe
ficomps
jae
mov
in
mov
data16
adc
pop
fwait
sbb
mov
or
xor
imul
jp
sti
xchg
inc
fiadds
lea
jl
scas
lods
lret
mov
adcl
mov
push
pusha
push
push
test
fdivl
xchg
xor
mov
mov
cmp
adc
inc
hlt
and
into
loope
lea
lods
dec
movsb
scas
jne
xchg
adcl
jnp
mov
outsb
adc
xchg
roll
js
mov
jmp
fisubrs
jns
imul
jne
repz
mov
mov
jg
ljmp
or
sub
add
push
push
nop
push
rclb
out
jbe
outsb
xchg
jo
xchg
insb
insl
cmpsb
or
mov
enter
mov
mov
dec
xchg
insl
mov
mov
pushf
xchg
gs
xchg
stos
dec
jb
xchg
test
subl
pusha
xchg
xor
pop
scas
dec
sbb
ficomps
mov
push
cld
mov
addr16
sahf
and
loop
pushf
add
jle
loopne
je
cmpb
sub
xchg
cmp
movsb
xor
and
sub
cmp
push
lods
shr
jo
sub
mov
gs
mov
sub
push
dec
xorl
mull
mov
fcoml
xchg
icebp
push
xchg
scas
jl
js
mov
jns
pop
rolb
and
jg
movsb
aaa
pop
insl
pop
cmp
inc
mov
inc
iret
adc
rcrl
adc
sbb
mov
call
jmp
rolb
insl
xchg
sarl
xchg
int3
out
inc
or
cwtl
push
sub
jae
aas
in
pusha
test
sub
jnp
les
ds
xchg
stos
pop
jno
jecxz
adc
mov
lods
rcll
loope
test
and
push
repz
add
xchg
add
test
xchg
into
fs
lcall
rorb
xorb
sbb
add
push
pop
dec
out
mov
arpl
and
repnz
insb
xchg
loopne
outsb
jg
mov
lea
xor
rcll
pushf
pop
jne
pop
xor
cmp
cmc
jo
fsubs
fisubl
aaa
jle
stos
inc
cmpsl
xorb
inc
cs
mov
les
inc
sbb
xor
in
mov
pop
jbe
cltd
ss
mov
jge
stos
daa
pop
scas
daa
out
jae
pavgb
jle
push
cs
mov
pop
sub
jl
jecxz
sub
adc
mov
cld
in
std
sub
jno
int3
mov
pop
nop
pop
pop
jb
sbb
pop
out
mov
or
mov
lahf
sbbb
pop
inc
stos
add
add
push
out
cli
mov
mov
rcrb
xlat
xor
xchg
dec
lods
add
repnz
cmp
ljmp
xlat
xor
pop
mov
mov
cmp
in
jmp
dec
push
pop
addl
das
lahf
xchg
mov
insb
aam
loop
sub
dec
mov
inc
mov
ds
xor
sahf
fsubs
scas
cmp
cld
dec
mov
loope
or
fwait
cld
sub
lods
fcompl
sbb
jmp
adc
dec
cmc
mov
pop
push
shlb
push
mov
xor
pop
push
pop
data16
pop
adc
jne
and
mov
addr16
mov
outsb
lahf
adc
fwait
xchg
push
daa
add
addl
mov
in
mov
popa
hlt
rcrl
xchg
rorl
mov
push
add
loopne
and
and
arpl
jo
jp
movsl
mov
jge
in
pusha
aad
adc
mov
iret
clc
repnz
add
leave
push
std
jmp
and
ljmp
test
addb
test
sti
aam
or
mov
adc
and
sarl
cmpsl
test
or
jp
bound
bound
xchg
clc
syscall
lock
fwait
adc
idiv
adc
fs
icebp
jb
mov
dec
dec
pop
bound
xchg
add
sub
hlt
mov
dec
pop
sbb
pop
adc
aas
mov
nop
xchg
out
add
loopne
mov
std
add
adc
cli
mov
cmp
jbe
outsl
and
inc
inc
cmp
popa
adc
stc
test
pop
jp
les
jo
fs
aam
mov
mov
jl
int3
push
std
int
jl
pushf
js
adc
aaa
enter
adc
sub
mov
hlt
lahf
call
xor
int
jbe
inc
repnz
mov
xchg
sahf
dec
ret
jnp
sbb
clc
lods
mov
stc
sub
add
clc
arpl
cwtl
pop
popa
leave
adc
outsl
xchg
pop
xchg
insb
add
pop
pop
mulb
add
repnz
push
lods
inc
inc
mov
adc
and
xchg
mov
adc
mov
pop
jge
dec
lods
push
nop
adc
mov
push
xlat
jnp
or
int3
inc
inc
gs
inc
dec
fldcw
pop
and
mov
imul
xchg
add
xlat
das
mov
cmpsb
sub
or
pushf
or
cli
stos
sbb
xor
jl
repz
mov
loope
cmp
stc
add
jmp
sahf
pop
sub
jnp
jge
inc
dec
sub
jno
je
xchg
mov
stos
mov
or
arpl
aad
cmp
fs
fcoms
js
dec
daa
or
movsb
and
mov
mov
pop
movsb
les
sub
shlb
pop
lret
xchg
das
mov
pop
cmp
mov
xlat
pop
lods
mov
sub
cmp
mov
fsubs
xchg
fisubrs
jecxz
mov
sti
sbb
cmp
sub
sbb
ret
outsl
lock
popl
xchg
sub
leave
test
in
pop
push
cmp
pop
stos
push
jno
mov
lahf
daa
and
jne
test
neg
and
jl
iret
mov
push
sahf
fidivl
mov
cmc
jb
or
fiaddl
dec
pop
sbb
sub
xchg
outsb
cli
fsubrs
aaa
jl
lcall
shrl
nop
movsl
pop
out
mov
push
sti
or
in
jae
sahf
gs
push
mov
xor
lock
out
adc
cmp
pop
add
pop
lods
js
in
clc
jg
outsb
jmp
mov
cmc
add
jns
jp
xchg
loopne
pop
aaa
in
insl
adc
jl
outsb
mov
and
repz
inc
stos
out
adc
sahf
imul
ret
sbb
in
lods
dec
add
lcall
sub
jg
ds
jo
xchg
shrl
mov
add
fs
sbb
jl
jb
lds
mov
sbb
push
orl
in
hlt
sbb
jne
mov
enter
sahf
fimuls
test
inc
out
es
sti
fwait
sub
es
popf
js
push
lahf
jecxz
xchg
idivl
test
je
ret
jo
popf
mov
mov
adc
sahf
pop
movl
roll
jnp
cs
or
les
mov
cmp
jge
hlt
in
cmpsb
rorb
mov
mov
hlt
shlb
out
xlat
fs
adc
xchg
aaa
dec
push
jo
pop
mov
imul
dec
out
aad
mov
xchg
xor
es
jmp
jg
dec
int
jge
fwait
mov
mov
cmc
jnp
mov
cmp
jg
iret
xor
clc
ficoms
cmp
int3
xchg
jae
xor
pop
ret
or
lret
pop
sub
xor
sbb
inc
mov
in
pop
stos
jmp
dec
pop
inc
xor
pop
aam
push
out
shl
bound
mov
sub
movups
mov
mov
inc
outsl
inc
xchg
xor
cmp
inc
movl
leave
xchg
pop
fsts
into
xchg
sbb
mov
int
push
or
fidivs
pop
cmpsb
push
std
jb
jns
xchg
dec
inc
daa
shl
repnz
into
push
push
or
xchg
cmc
ljmp
ret
cmpb
jge
mov
les
cs
shlb
data16
add
rolb
jg
stos
xchg
adc
push
enter
mov
fistps
dec
imul
cli
je
adc
scas
test
outsb
or
loopne
nop
insb
lods
and
cmp
aaa
adc
sbb
dec
sub
pop
test
lods
es
and
pop
inc
jae
xor
lahf
fdivs
ret
pop
out
add
sub
ljmp
insb
outsb
out
jae
leave
or
xor
mov
mov
push
loopne
fidivrl
pop
test
jb
inc
fdivr
jl
loop
ds
es
push
jmp
jnp
decb
xchg
aas
mov
pusha
or
dec
repnz
pop
add
je
aaa
xor
mov
mov
packssdw
mov
hlt
lock
sbb
add
popa
jg
xchg
dec
push
stc
xor
adc
mov
leave
out
jge
push
lahf
test
add
shlb
loope
cmp
loopne
in
mov
repnz
es
mov
outsb
daa
andl
jb
std
xor
mov
xor
push
adc
mov
xchg
std
cld
inc
clc
pushf
add
push
cmp
sarb
rcrl
arpl
int
and
aaa
fwait
xor
popf
out
push
pop
incl
jo
mov
test
sub
xor
push
test
sbb
lcall
jmp
sub
push
loop
shlb
pop
xchg
jns
dec
hlt
popa
shr
test
sti
pop
aas
fisttpl
sub
enter
mov
ja
lret
jmp
and
inc
dec
pushf
inc
ljmp
xorb
mov
fdiv
inc
and
fadds
sub
sbbl
fwait
das
outsb
icebp
push
dec
pusha
lret
xchg
add
mov
adc
cmp
cmp
pop
pop
jle
lret
xchg
lods
fbld
mov
imul
data16
aaa
std
xor
pop
mov
fcmovne
data16
sub
or
dec
fs
in
lahf
mov
cmp
insb
pusha
xchg
sub
or
shrl
lds
push
xor
cmp
fisttpl
outsb
fiadds
inc
jg
mov
je
mov
dec
int
int3
movsb
sti
cs
mov
insb
xchg
hlt
rorl
add
lock
push
dec
sbb
dec
das
and
inc
in
scas
xlat
in
fcomip
mov
fmuls
jo
cmp
sub
sub
arpl
mov
mov
jae
or
lods
jbe
clc
daa
outsb
xor
and
xchg
addr16
test
push
hlt
dec
push
mov
imul
sub
xor
dec
dec
repz
mov
pop
cmp
pop
inc
pop
adcl
les
cmp
push
inc
aad
xor
orl
dec
getsec
ficoml
je
add
pop
inc
lock
mov
xchg
push
loop
movsl
into
jge
es
std
cmp
call
cwtl
mov
enter
or
inc
loope
push
and
push
mov
jnp
mov
xchg
in
sbb
sub
in
adc
mov
popa
and
movsl
and
mov
in
negl
jnp
test
cmp
rorl
xor
jmp
shl
mov
mov
jb
repnz
adc
lret
or
inc
lret
insl
test
xchg
lret
lret
inc
shlb
jno
sub
sbb
std
xchg
popf
jno
insl
cmc
push
das
aas
cmp
pop
lea
mov
cmp
push
sbb
pop
in
mov
jge
adc
fsubrs
xorb
mov
or
cmp
imul
inc
cmp
xchg
xchg
pop
mov
adc
push
enter
pusha
enter
rcrl
pop
adcl
xchg
sub
stc
adc
push
mov
bound
cmc
add
xchg
in
jp
sbb
push
and
inc
repnz
rdtsc
popa
jmp
popf
push
adc
imul
adc
adc
ret
dec
in
clc
mov
or
test
lahf
gs
lock
add
popl
mov
popf
jp
jp
bound
test
inc
pop
pop
xchg
pop
inc
dec
sub
add
jo
pop
dec
jo
push
xor
mov
clc
ds
imul
das
mov
fldcw
inc
fildl
out
lret
sub
in
cltd
cmp
mov
sbb
sarb
adc
shl
xorb
insb
lock
dec
test
loop,pt
inc
xchg
ja
repnz
dec
faddl
repz
cmpl
jp
add
loop
aas
out
dec
xchg
xor
and
fiadds
or
out
dec
imul
rcr
test
pop
clc
hlt
jo
cld
popa
push
add
cmp
jp
pop
loope
fisttps
sbb
int3
scas
push
xchg
gs
sbb
movsl
stc
pop
pop
mov
pop
or
rorl
loope
movsb
sub
mov
mov
and
in
scas
mov
and
add
sub
sub
xchg
push
xlat
pop
inc
scas
repz
xchg
data16
enter
cmp
xor
jno
ds
je
cmp
pop
mov
pop
mov
or
movsl
shr
sub
cs
lods
mov
sbb
test
cmc
inc
rorl
mov
rcll
push
push
xchg
adc
and
call
inc
sub
es
xchg
adc
ljmp
pop
add
shrb
std
loopne
jne
xlat
mov
mov
mov
ss
fnstcw
ljmp
xchg
loop
cmp
lret
mov
repnz
lcall
aas
ror
mov
scas
out
cld
dec
pop
insl
inc
jp
push
xchg
popf
pop
mov
lods
inc
jl
fcompl
xchg
sti
cmp
ficomps
inc
das
imul
pusha
into
pop
popf
clc
xchg
cmpsl
pop
daa
lret
jg
jmp
inc
dec
mov
mov
xchg
inc
sub
mov
adc
repz
mov
negb
stos
inc
sub
xchg
mov
enter
daa
cltd
int3
enter
movsl
mov
mov
cmpl
push
lea
bound
adc
dec
xchg
out
aam
pop
fucomp
loopne
repz
subl
xlat
jno
in
add
and
jbe
add
aaa
inc
xchg
aad
gs
jno
xor
cmpsl
and
jb
add
sbb
cmpsb
cmpsb
add
sub
mov
fnstenv
or
jecxz
lock
cld
iret
cmpsb
loop
pop
cwtl
aad
xor
cli
adc
out
dec
sbbl
jae
pop
sbb
pop
imul
mov
mov
xchg
xlat
cmp
sbb
loopne
in
mov
push
in
int3
mov
dec
js
loopne
pop
roll
push
insb
mov
lcall
adc
or
aas
iret
pop
xchg
lock
adc
mov
outsb
lods
sub
out
jo
sub
ds
and
pop
or
push
lahf
int
imul
mov
lds
leave
scas
sbb
std
out
nop
aam
frstor
loop
iret
add
out
lea
es
add
out
stos
mov
insb
imulb
push
bound
pop
inc
mov
bound
push
jb
fsubr
sub
and
mov
inc
mov
das
and
pop
jnp
adc
add
aas
std
add
sbb
xchg
sbb
dec
das
cmp
mov
js
mov
xchg
stos
or
mov
stos
xchg
inc
cmp
test
imul
push
and
movsb
ljmp
or
push
scas
push
mov
lds
cmp
xchg
loop
pop
test
stc
rolb
xor
std
push
std
repnz
lret
popf
das
mov
out
loopne
or
mov
loop
dec
add
ja
adcb
fidivrs
mov
push
ret
ret
loope
hlt
dec
int3
sub
pop
jge
test
dec
outsl
aaa
shrd
jno
outsl
bound
inc
xchg
and
inc
mov
sub
mov
or
aaa
sahf
rol
sub
imul
std
xchg
cmp
psubb
mov
rcrb
lret
xchg
rorb
mov
scas
in
cmp
push
cmp
dec
jmp
add
mov
hlt
pop
mov
cs
jne
push
mov
aad
dec
sub
jns
je
jns
fiadds
push
gs
roll
call
test
add
add
pop
hlt
je
jmp
mov
mov
mov
xor
add
mov
imul
mov
xor
add
mov
mov
mov
mov
xor
xor
add
adc
lea
xor
xor
jmp
int
stos
ljmpw
dec
jnp
imul
int3
and
jnp
sahf
jnp
jge
mov
mov
inc
aam
movsb
mov
fisttpll
or
or
and
sub
into
out
iret
inc
cmp
stos
inc
sbb
sbb
outsb
and
stos
xchg
pop
mov
sub
lret
popa
ret
push
addr16
daa
jp
jge
jle
xchg
mov
ret
mov
iret
push
test
test
add
loopne
mov
pop
adcb
add
push
in
xchg
mov
lret
push
and
dec
adc
inc
adcb
fisubrl
clc
scas
movsb
sarl
lahf
pop
push
push
adc
ds
mov
rcrl
xor
cmpsl
iret
xor
adc
test
pop
mov
out
or
xchg
sub
stos
push
cmp
sbb
in
fisubrs
mov
in
mov
push
jecxz
orb
pushf
pop
inc
fistps
outsl
push
jl
mov
lock
lahf
adc
xchg
int
cmpsb
mov
xor
lock
push
or
dec
cltd
fists
and
adc
mov
out
rcll
inc
jae
sbb
cmpsl
into
or
pop
lahf
xchg
loop
xor
pop
cmp
les
popf
lea
and
fnstcw
xchg
insb
movsb
test
bound
cmp
mov
nop
push
int3
rcrb
mov
faddl
xorb
les
in
sbb
adc
sbbl
jae
mov
inc
repnz
xchg
mov
jae
jno
sub
add
mov
xchg
rcrb
cmp
inc
inc
leave
xor
das
dec
or
jne
ljmp
inc
inc
daa
lods
sbb
xorl
jmp
pushf
faddl
jo
mov
aad
adc
mov
sti
jnp
ja
pop
cmp
and
stc
inc
lahf
int3
cli
int
into
pusha
dec
xchg
sub
aam
cmpl
call
cltd
add
test
add
mov
pop
inc
cmp
mov
push
mov
xchg
test
jmp
dec
add
stc
mov
insb
push
or
mov
inc
jl
jmp
push
hlt
xor
push
bnd
adcl
je
jnp
push
std
sarl
xrelease
pop
jae
mov
push
sbb
cmp
orl
loopne
pop
clc
test
js
add
dec
jmp
nop
or
fsts
adc
test
and
dec
inc
mov
ljmp
sbb
test
jnp
adc
movsl
jmp
sbb
inc
add
push
xor
mov
jns
add
sti
jecxz
xchg
cmp
xchg
xchg
jl
stos
fcoms
inc
outsb
adc
dec
mov
leave
lret
inc
mov
add
test
pushf
adc
cmp
sahf
jbe
mov
and
dec
dec
xorl
cmp
ret
inc
sti
push
cwtl
fadds
sub
push
mov
mov
leave
jbe
mov
or
xor
or
mov
pushf
sbb
aaa
mov
xor
dec
sahf
mov
les
jmp
fs
adc
cmpsl
hlt
dec
cld
sbb
sbb
shlb
push
sub
enter
insl
xchg
out
sbb
lock
adc
add
cs
stos
mov
mov
adc
icebp
inc
push
mov
xchg
in
rolb
inc
data16
lret
imul
aas
xchg
out
stc
rcr
popa
icebp
jno
xchg
jecxz
jo
cmp
repz
shrb
pop
xor
out
or
int3
arpl
into
jno
in
jae
sbb
jns
mov
inc
cmp
out
add
or
or
xchg
mov
maxps
push
mov
jnp
loopne
sbb
lods
iret
xor
daa
fstps
cmp
xor
lock
xchg
jge
icebp
adc
decl
xchg
leave
jecxz
xor
mov
cmp
pop
xor
inc
test
stos
enter
xchg
pop
or
sub
jb
mov
mov
outsl
mov
pop
jle
dec
dec
fsts
repz
sbb
fistl
iret
and
es
or
push
fcompl
mov
lahf
add
cli
pop
xor
dec
mov
in
hlt
mov
test
lods
arpl
paddsw
clc
shlb
push
and
adc
fisubrs
jecxz
dec
pop
ret
ficompl
fstpt
inc
sub
jmp
jbe
out
imul
loopne
sbb
fxch
loop
shll
pop
imul
or
rcrl
rcrl
ss
xor
aas
jmp
cmp
cmpsl
xor
mov
cli
fs
push
ficompl
adc
outsb
lock
outsb
sub
loop
push
mov
jmp
in
sahf
cmp
ja
push
inc
or
mulb
loopne
lahf
sub
enter
xchg
cs
xchg
cmp
sahf
add
sub
int
dec
fistl
pop
xorl
push
out
cmp
fdiv
lret
out
jecxz
sbb
add
in
sbb
mov
ss
ret
movsl
or
mov
and
movsl
xorb
movsb
dec
rcrl
xchg
adc
popf
mov
adc
sbb
mov
ret
jbe
cs
ss
adc
icebp
jg
push
mov
insl
repz
rorl
cmp
out
mov
mov
push
pop
sub
int3
jl
xchg
movsb
sub
jo
lret
push
inc
and
pushf
mov
mov
add
loope
sub
shl
int3
int3
or
adc
aas
and
mov
stc
ljmp
jb
sbb
ja
ret
jle
push
and
xor
mov
jmp
dec
sub
cltd
int3
fistpll
das
dec
mov
mov
mov
mov
in
sbb
xchg
dec
xor
loope
jp
xchg
xchg
fildl
arpl
shr
ret
mov
pop
dec
dec
test
xor
je
in
js
mov
adc
push
and
sub
adc
push
repz
je
test
inc
mov
pop
icebp
out
loopne
es
jecxz
shrl
fstps
inc
insb
add
xchg
les
or
inc
enter
sub
sarb
pop
sbb
inc
clc
jp
dec
ret
imul
mov
mov
xor
sub
mov
mov
imul
bnd
sbb
xlat
dec
pop
lock
cmp
jbe
addr16
aad
xor
mov
test
outsb
pop
cmc
daa
cs
clc
sub
sahf
mov
mov
into
ljmp
clc
daa
rcl
fnstcw
jmp
xchg
mov
cmp
js
es
mov
sub
gs
pushf
xchg
orl
sbb
mov
inc
ficomps
inc
scas
jge
mov
ret
xor
outsb
dec
xchg
shrl
lcall
out
mov
das
aaa
mov
shll
adc
add
into
xor
test
mov
push
adc
shl
rorl
sub
pop
pop
inc
xor
cmp
loope
and
mov
nop
push
ljmp
push
sti
lea
pop
sahf
test
push
mov
fsts
es
jb
pop
xchg
sub
jnp
fildll
mov
loopne
test
in
fwait
xchg
mov
mov
imul
inc
pop
push
clc
fs
pop
jl
inc
rcrb
mov
push
add
enter
jge
add
push
dec
loope
cmp
jp
test
pop
push
xchg
cwtl
out
adc
ret
and
test
cwtl
movsb
mov
dec
adc
adc
subl
add
jecxz
shrb
push
enter
or
push
push
add
push
dec
orb
aad
clc
addl
and
push
sbb
push
push
xchg
test
outsb
jecxz
std
xor
inc
popa
pop
xchg
ret
shll
mov
call
les
mov
push
popa
sbb
adc
test
test
mov
lea
popa
je
jg
inc
xor
cmc
xchg
mov
xorl
sahf
xor
test
nop
sbb
adc
xor
mov
cmp
addr16
insl
xchg
les
ds
cmp
mov
lods
fcoml
jle
enter
inc
jge
add
pushf
nop
dec
call
dec
add
loop
je
inc
and
cmpsl
mov
pop
fldcw
cltd
sahf
jns
repnz
push
pushf
jo
lcall
loope
jb
imul
push
cwtl
arpl
out
push
leave
sub
dec
divl
jnp
pop
out
sahf
and
mov
outsb
and
cmp
jo
out
jbe
xchg
fsubrp
in
xchg
into
sti
fldcw
lea
scas
lods
push
fnstenv
sub
mov
push
lds
pop
rcrl
stc
xchg
push
and
cmpsb
arpl
lret
test
add
cmc
js
in
xchg
rcll
loope
or
mov
lret
or
loope
clc
mov
inc
xor
divl
add
cli
sub
bound
ljmp
push
sub
sub
cs
aam
fcoms
and
inc
sbb
mov
clc
cld
in
pop
xor
sub
aad
into
imul
scas
sar
das
mov
in
adc
mov
insb
icebp
mov
movb
sbb
test
mov
jo
cmp
sbb
test
fadds
mov
mov
icebp
lods
dec
jecxz
in
data16
adc
pop
dec
fs
mov
ds
dec
xor
dec
js
jmp
insl
and
shrl
std
mov
outsl
xor
dec
jge
cwtl
xchg
loopne
imul
adc
shrl
fwait
sub
aas
into
int
xlat
mov
adc
cmpsb
fscale
addr16
mov
xchg
xor
scas
adcl
loopne
push
loopne
mov
flds
pop
rcrl
push
add
jno
mov
dec
add
adcl
jne
jne
ret
in
cmpsb
ret
push
xchg
out
sbb
and
scas
sub
mov
repz
lock
xchg
jnp
inc
pop
sar
sarb
pop
ja
mov
gs
cli
mov
nop
loope
in
cmp
sbb
mov
mov
mov
cwtl
dec
shll
aad
outsb
outsb
cmovne
mov
cmpsb
jecxz
in
cmp
ljmp
mov
mov
pushf
push
adc
out
jnp
arpl
mov
push
mov
pop
sub
jb
lret
xchg
add
lock
test
xchg
andb
clc
pop
sti
fildll
pop
cmp
test
pop
pop
xor
jp
xor
xchg
ret
lahf
xlat
pop
lds
cli
sub
xchg
sbb
fidivrl
adc
adc
int
xchg
push
dec
push
xchg
in
lahf
pop
mov
scas
pop
ds
test
and
mov
loopne
cmc
jp
xchg
ret
mov
in
rclb
and
sbb
inc
in
xor
adc
cmpsl
push
ret
add
fisubrl
fidivl
leave
bound
movsl
add
xchg
test
and
xor
jmp
jecxz
cmpsb
out
xlat
pop
sbb
and
pop
es
mov
iret
inc
divb
stos
sub
push
andb
jl
inc
les
nop
pop
cmp
addb
pop
xchg
sub
loop
aad
push
xor
xchg
jg
inc
cltd
push
sbb
lretw
add
mov
outsb
aaa
mov
sar
push
add
jo
and
bound
outsb
sbb
out
mov
lock
jno
pop
sbb
int3
push
dec
test
stc
adc
icebp
stc
push
imul
inc
sub
cmp
cmpsl
rorl
xor
jmp
push
imul
lock
test
loope
test
jae
push
in
insl
mov
fidivl
mov
sti
into
push
xchg
int
adc
leave
inc
repnz
push
sbb
pop
in
jmp
pop
shll
mov
sub
xor
xor
cmp
mov
lods
add
fldenv
sub
jns
xchg
push
rcrl
enter
mov
inc
dec
or
cs
mov
hlt
mov
add
pusha
or
decb
scas
mov
push
sub
adc
xorb
bound
push
sub
popf
ret
xlat
inc
cmp
cmc
hlt
into
xor
hlt
and
fcomp
outsl
mov
push
xor
pop
cltd
mov
adc
pop
jp
test
sarl
xor
outsl
orb
daa
iret
out
pusha
insl
std
mov
push
or
es
in
js
shl
add
loope
push
jle
pop
push
xchg
jae
pop
movsl
xor
adcb
stc
out
sub
add
add
pop
movsb
enter
rolb
scas
jo
and
jbe
rcr
pop
mov
in
aas
rcl
loop
dec
arpl
add
push
add
das
push
mov
push
cmp
mov
jnp
subl
push
mov
jne
add
out
mov
xchg
jnp
dec
mov
xor
fiadds
mov
stos
fs
in
test
inc
sub
add
jne
sbb
cmp
jo
mov
mov
mov
dec
fucom
jo
fs
shrb
das
jge
jb
out
cli
mov
or
mov
xchg
push
jle
cmp
data16
out
xor
insl
call
std
aad
add
scas
jae
push
jge
cmp
bound
jp
in
imul
mov
mulb
add
lea
repnz
imul
mov
xchg
dec
vmovq
mov
add
xchg
sbb
mov
push
outsl
mov
sbb
adc
testl
xchg
pop
xchg
sahf
inc
xorb
loop
xor
jp
mov
pop
fnstsw
adc
clc
inc
loope
ret
xchg
fiaddl
test
sbb
jbe
dec
and
enter
jbe
mov
ret
test
nop
push
or
js
andl
sbb
in
mov
and
es
inc
sti
inc
inc
cmp
inc
inc
jle
popf
gs
push
cmp
mov
sub
insb
int3
pop
mov
shr
in
xor
aad
bound
repz
pop
inc
ror
test
std
jnp
lock
mov
mov
mov
xchg
sbb
arpl
xor
mov
cmp
cmpsb
daa
and
xor
push
pusha
mov
push
jae
leave
cmpsl
push
shrb
cmpsb
test
mov
pusha
imul
stos
push
outsl
xchg
mov
mov
jge
enter
pusha
loope
push
mov
subb
shl
xor
pusha
mov
stos
les
pop
pop
sbb
mov
std
rcrb
push
mov
inc
icebp
add
mov
cli
shr
ljmp
mov
cmp
mov
sub
and
or
fisttpll
xchg
mov
fiaddl
ja
inc
sti
and
out
pusha
sub
iret
pop
imul
cmpsb
and
inc
adc
pop
aas
inc
jg
mov
jo
repz
lds
cs
fs
push
aad
aam
mov
nop
pop
mov
mov
out
lahf
mov
cs
push
mov
pop
cmp
popa
int3
out
int
cmp
push
lds
test
mov
mov
repnz
sub
xchg
shl
inc
xor
or
or
repnz
arpl
mov
or
shl
add
addr16
push
out
cmp
cmpb
in
orl
xor
out
dec
cmpsl
xchg
jl
in
mov
sbb
mov
inc
mov
lcall
js
pusha
xchg
shrl
cmp
or
or
jbe
negb
cltd
xchg
cs
xchg
stos
jb
lock
adc
nop
xchg
xchg
pop
pop
out
cmc
jbe
lahf
and
aad
mov
push
jecxz
sub
pop
cmpsb
pop
fwait
in
repnz
or
sub
or
xchg
js
push
jae
in
mov
lods
lods
shrl
pop
jnp
jae
sbb
or
shl
lea
mov
xor
js
mov
fistps
lret
push
jge
push
adc
gs
movsb
push
jno
mov
ss
les
fimull
dec
icebp
addl
mov
arpl
sti
add
int
dec
cli
insb
out
cmc
int
inc
out
dec
inc
icebp
inc
or
jbe
rclb
add
divl
jge
iret
pop
inc
rcrl
push
cmp
call
out
test
cmp
aaa
push
dec
loopne
or
dec
nopl
mov
mov
in
cmpsb
mov
lcall
push
cmp
sahf
les
mov
xlat
mov
adc
out
dec
movsb
fwait
ja,pt
mov
mov
and
in
jp
stos
lds
mov
les
xlat
rcrl
mov
hlt
shl
popa
adc
pop
rcr
dec
cld
jmp
push
xchg
scas
pop
sbb
fs
mov
xor
sbb
sub
rorl
clc
jae
ss
in
add
das
clc
test
test
enter
bound
cltd
hlt
ljmp
cltd
lds
or
dec
arpl
aad
mov
jmp
push
adc
or
xchg
andb
jg
jns
cmp
shrl
mov
in
pop
cwtl
pop
and
std
cmp
push
dec
pusha
imul
jmp
mov
xchg
sbb
or
idiv
dec
jne
mov
add
lods
mov
insl
and
pop
test
xor
rorl
pop
xor
daa
cmc
test
add
inc
mov
lds
pop
mov
repz
fdivrl
ljmp
mov
inc
xchg
fucomip
ljmp
and
push
pop
out
or
jmp
sbb
mov
mov
xchg
push
jmp
inc
mov
and
mov
mov
cmp
xchg
dec
notb
pop
push
sub
fmulp
ja
icebp
mov
adc
jbe
or
jbe
mov
incb
sahf
mov
lods
bound
add
test
ds
mov
int3
jp
mov
mov
jl
test
and
in
mov
dec
stos
mov
orb
in
xchg
in
xchg
mov
xchg
rclb
pop
rol
sarl
pusha
mov
dec
jno
adc
mov
mov
mov
xchg
add
xor
lea
dec
sub
into
and
pop
sub
jge
push
jb
int
pop
daa
cmp
stc
xchg
test
lcall
scas
pop
inc
movsl
inc
insl
outsl
sbb
into
inc
sahf
das
lcall
mov
mov
push
out
sbb
mov
ljmp
test
sbb
fmuls
inc
push
dec
mov
sbb
fdivr
mov
or
push
pop
cmpsb
fbstp
test
mov
sbb
dec
dec
jle
or
rcrl
les
pop
rol
pop
aam
push
or
shl
sub
int
jle
pop
mov
pop
or
inc
lea
fistpll
into
xchg
cwtl
shrb
xor
out
cmpsl
in
sar
daa
icebp
fwait
xchg
das
test
or
rorl
scas
jbe
jecxz
imul
adc
sbb
int3
push
sbb
jle
sbb
cmc
xchg
or
pop
ds
inc
mov
mov
sub
test
daa
fists
mov
or
loopne
dec
test
dec
outsl
xchg
mov
or
dec
cli
pop
incl
mov
je
xlat
mov
das
dec
not
sbb
push
lahf
arpl
dec
mov
xor
dec
cmp
bound
ss
or
cmp
add
rorb
fcoms
xchg
sub
ss
jo,pn
cmp
in
sahf
das
xor
xor
mov
leave
rdtsc
lcall
enter
clc
leave
iret
or
inc
loop
fstl
test
daa
stos
dec
push
faddl
xchg
popf
and
jne
stc
push
mov
adc
int
in
adc
push
repz
mov
cmp
xchg
lahf
movsb
xchg
pushf
pop
pop
iret
add
jle
sbb
dec
push
fbld
inc
mov
vpmacsswd
dec
daa
add
jae
movsb
divb
fiadds
loop
push
jg
add
imul
pop
sub
jmp
ja
jecxz
ss
sbb
addr16
ficompl
mov
popa
enter
sbb
out
shrl
mov
pop
push
or
dec
data16
push
stc
stos
mov
std
rorl
cmp
mov
lock
push
lret
push
mov
loop
divl
push
mov
movl
jae
jmp
sbb
mov
fistpll
add
popf
or
push
imul
xor
repz
push
mov
or
jae
xchg
imul
fmull
adc
fnstenv
mov
sub
xlat
push
or
add
dec
mov
jno
adc
xor
iret
mov
adc
jp
dec
pop
bswap
jne
mov
lret
bound
jnp
std
pop
rcr
push
jg
sub
push
mov
sahf
sub
pop
sub
outsb
aaa
ds
ficoml
xor
pop
stc
aaa
cmpsl
les
lock
fstl
jp
pushf
cmpsl
mov
jb
add
enter
push
sbb
cmp
add
shl
push
test
jns
mov
stos
imul
in
test
imul
bound
fdiv
sbb
aas
in
imul
cmp
mov
scas
pop
sub
ds
fcompl
jp
loopne
push
lea
int
mov
loopne
jmp
xchg
lods
mov
into
sbb
add
cmp
orl
std
cs
fistpll
adc
adc
out
aad
mov
fbstp
sbb
push
adc
ret
push
mov
inc
sub
fsubrl
cmp
push
cmp
in
cmp
or
mov
stos
ljmp
addr16
xorb
sub
xor
int
xor
mov
fwait
adc
insb
xor
aas
cmp
jbe
mov
in
pop
xchg
mov
or
popf
xor
jmp
adc
ror
cmp
dec
outsl
shrb
in
xor
hlt
add
cmpl
jae
mov
xchg
mov
xor
mov
adc
fcomi
dec
push
mov
mov
ljmp
cwtl
mov
and
xlat
lcall
and
ret
lock
and
sbb
imul
std
push
xchg
push
cmp
cmp
rolb
cmp
or
sub
aam
mov
popa
dec
xchg
inc
mov
or
lret
pop
mov
cmpsb
inc
mov
fs
lahf
push
sbb
mov
add
jo
cmp
dec
pusha
out
mov
mov
push
mov
xchg
into
loop
sbb
sub
xor
dec
repnz
repnz
pop
nop
rorl
or
imul
adc
pop
inc
cld
xchg
mov
pop
ret
adc
pop
inc
andl
loopne
jge
mov
cmpsb
xchg
arpl
pop
imul
enter
subl
mov
dec
mov
inc
lds
xchg
bnd
icebp
add
xor
inc
xor
sarb
xor
test
outsb
cmpsw
fmulp
push
push
fsubl
pop
sub
mov
mov
mov
je
rcrb
stos
jg
and
enter
sahf
aam
lods
mov
fsubr
inc
xor
imul
mull
dec
dec
fisubrl
xor
rcll
jo
xchg
inc
cwtl
xlat
das
rolb
pop
clc
test
dec
inc
loope
cmp
xlat
mov
xchg
pop
sub
add
push
inc
sbb
test
cs
cmp
xor
fadds
xlat
ret
push
imul
rol
jge
push
pop
sub
xchg
pop
pop
and
inc
in
iret
jmp
test
and
mov
cmp
mov
add
xchg
das
mov
addr16
outsb
arpl
sbb
push
pop
mov
int
test
dec
or
loope
inc
adc
adc
rorb
test
push
xlat
lret
mov
inc
mov
out
jle
loop
add
mov
push
or
sbb
jecxz
push
cmc
mov
and
adc
cli
add
add
outsl
or
or
and
rcrb
icebp
imul
adc
lahf
pop
jae
sub
jo
sub
xor
jne
mov
fmul
hlt
lods
and
lret
icebp
push
daa
mov
push
orb
inc
xor
xchg
jnp
cli
lcall
cmpsb
in
scas
mov
daa
imul
xchg
icebp
sub
mov
adc
xchg
jno
pop
stos
xchg
mov
nop
push
lret
mov
cmp
mov
mov
cltd
jl
out
push
xor
mov
add
in
dec
mov
mov
or
fiaddl
pop
push
inc
mov
stos
aas
insl
xor
xor
test
jnp
sbb
sub
mov
inc
ja
lods
sahf
xor
test
fwait
mov
mov
fldt
clc
fisttpl
push
cld
mov
lcall
push
or
or
xorb
adc
push
lret
repnz
mov
nop
mov
sbb
jle
mov
xchg
aas
push
scas
bound
sub
testl
pop
dec
int
insb
sub
ret
jle
daa
leave
pop
mov
aas
jg
rcrl
fstps
add
or
mov
mov
std
sbb
adc
push
add
in
addr16
cmp
outsb
jae
inc
jl
mov
inc
cmc
or
sub
xchg
inc
xchg
imul
pop
sub
cmp
push
ss
push
fistpll
xchg
sahf
out
cmc
mov
sub
out
sarb
xchg
mov
dec
cmpsl
sahf
int
cmp
jecxz
inc
and
adcl
jge
mov
shlb
cmp
insb
clc
imul
or
sti
xchg
add
rol
mov
xor
repnz
loop
sbb
call
xchg
add
mov
das
xor
jle
jns
pop
clc
lea
xchg
cmp
ret
xchg
out
mov
push
adc
push
movsb
scas
cmp
sub
popa
stc
hlt
jmp
in
mov
push
sub
add
mov
aad
addr16
loop
push
and
in
pushf
jns
push
sub
and
pop
clc
lods
xchg
sbb
fmuls
stos
lock
mov
jl
inc
mov
and
push
data16
pop
fcmovbe
loop
xor
int3
adc
cmp
cmp
and
hlt
test
unpcklps
rcrb
in
xchg
fs
add
das
add
mov
stc
cmp
jecxz
lods
mov
inc
mov
jno
out
repnz
mov
or
lret
mov
sbb
int
sub
outsb
loop
and
rcrb
bound
test
out
cmpb
lahf
lret
cmpsl
push
nop
and
popa
mov
in
dec
dec
arpl
sub
add
push
loopne
sbb
je
add
jae
pop
jg
out
ja
mov
loope
sti
sti
mov
mov
mov
inc
fimull
jg
sahf
or
xchg
out
xor
fwait
push
mov
rcrb
out
in
jae
push
int
data16
jmp
sub
pusha
insb
test
les
pop
or
addl
cmp
mov
mov
sub
ss
xchg
call
add
push
cmpsb
fcomip
sbb
sahf
addb
jbe
sub
sub
sti
push
lods
cltd
cld
xchg
aas
lods
pop
or
xchg
repz
scas
xor
addr16
pushf
bswap
jle
addr16
mov
outsb
cmp
sti
in
mov
inc
lcall
xchg
jecxz
or
mov
xchg
ret
add
push
push
sar
sub
adc
in
add
and
out
test
add
cmp
test
mov
and
in
sub
fstpl
cmp
push
fwait
xchg
fadd
aaa
add
addr16
mov
mov
in
mov
inc
and
pop
mov
jle
jl
loopne
sub
adc
pop
push
mov
dec
push
push
pmulhuw
adc
outsb
sbb
sti
js
mov
fisubs
jb
push
leave
or
or
int
mov
fisubl
pop
lds
cli
pop
xor
push
leave
test
test
test
mov
or
pop
aad
mov
adc
sbb
mov
jb
test
push
je
std
mov
mov
lahf
jo
inc
inc
inc
cmp
stc
outsb
push
les
outsb
cmpsl
mov
cs
xchg
add
icebp
adc
cmc
push
sub
js
dec
out
jp
rol
mov
adc
fwait
add
loopne
xor
mov
xor
scas
lds
mov
xchg
cltd
imull
in
mov
sbb
hlt
adc
fldcw
lahf
mov
mov
cs
mov
push
sbb
fcomi
test
mov
push
lret
subl
mov
int3
mov
scas
movsb
xchg
stc
sti
lds
rol
dec
mov
pop
aaa
out
jmp
inc
push
pop
adc
out
mov
mov
pop
rcrb
mov
std
lds
ret
clc
cld
inc
push
mov
xchg
in
sbb
push
dec
leave
dec
fimull
push
adc
je
lcall
mov
xor
ja
xor
scas
in
ds
jp
loope
out
and
jle
icebp
rclb
xor
pop
pop
cltd
pop
push
pushf
shll
sbb
push
jl
rcrb
sbb
mov
xchg
ds
imul
lahf
loop
xchg
jbe
mov
push
stos
lea
ret
jmp
xchg
fnstcw
fcmovnbe
push
lock
xor
jno
push
jecxz
mov
adc
push
inc
pop
dec
and
mov
mov
out
jmp
xchg
mov
dec
add
out
mov
lret
push
out
inc
das
mov
lods
cs
mov
pop
imul
sti
dec
xchg
mov
inc
repnz
or
add
adc
xor
xor
cmp
jne
cmp
jne
mov
pop
pop
pop
leave
ret
push
mov
push
movl
and
mov
and
movsbl
sub
mov
xor
add
and
sub
mov
subl
xor
cmp
movl
jne
andl
mov
inc
mov
cmpl
jbe
jmp
push
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
push
mov
add
mov
mov
mov
xor
add
cmp
pop
je
mov
jmp
mov
xor
add
leave
ret
push
mov
sub
adc
push
or
mov
movl
cmpl
je
cmpl
jb
jmp
pushl
call
xor
add
dec
mov
jmp
mov
movl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jle
jmp
pushl
push
pushl
pushl
push
push
call
jmp
mov
xorl
push
movl
cmpl
je
cmpl
ja
jmp
push
push
push
pushl
push
call
mov
dec
mov
jmp
mov
mov
xor
xor
mov
add
add
imul
mov
cmp
je
mov
mov
mov
xor
lea
mov
mov
mov
mov
xor
xor
add
add
imul
mov
cmp
je
mov
xor
mov
add
imul
add
mov
mov
jmp
mov
mov
xor
xor
add
add
imul
pop
pop
leave
ret
iret
lods
mov
add
add
add
add
add
loopne
add
loopne
add
add
add
push
push
inc
push
adc
std
dec
sahf
cmp
test
add
inc
cmp
insb
fs
outsl
data16
jb
imul
push
arpl
jb
push
arpl
jae
add
or
add
push
mov
xchg
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
xor
lea
movzbl
xor
add
inc
mov
cmp
jb
xor
lea
movzbl
xor
add
inc
mov
cmp
jb
xor
lea
movzbl
xor
add
inc
mov
cmp
jb
lea
mov
mov
mov
push
mov
mov
mov
push
lea
mov
cmp
jne
lea
mov
mov
mov
add
mov
lea
mov
add
mov
mov
mov
mov
mov
lea
mov
add
mov
lea
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
push
mov
xor
add
push
lea
push
mov
mov
movl
movl
pushl
mov
call
mov
mov
test
je
xorl
mov
mov
xor
cmp
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movb
mov
mov
movb
mov
movb
mov
movb
mov
movb
mov
mov
movb
push
movb
mov
movb
movl
lea
pop
movzbl
xor
add
mov
inc
dec
jne
movl
lea
mov
mov
mov
mov
add
mov
mov
mov
mov
add
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
lea
mov
add
mov
lea
mov
mov
mov
mov
movzwl
mov
xor
add
xor
mov
mov
xor
movzwl
add
xor
xor
mov
mov
mov
mov
lea
lea
movl
mov
call
mov
mov
mov
xor
add
je
lea
push
mov
xor
add
push
lea
push
mov
push
call
mov
lea
lea
mov
call
mov
mov
pushl
pushl
pushl
pushl
pushl
pushl
pushl
call
test
je
add
pushl
lea
call
mov
mov
mov
xor
add
mov
jne
mov
mov
pushl
mov
call
jmp
mov
mov
add
mov
mov
decl
mov
mov
mov
lea
mov
mov
mov
mov
add
pop
pop
pop
leave
ret
push
push
push
push
mov
mov
add
push
cld
mov
add
push
mov
lods
xchg
push
mov
or
shl
not
push
mov
or
shl
not
push
add
mov
sub
sub
inc
push
push
push
push
push
push
sub
push
or
mov
shl
lea
mov
shr
rep
push
pop
call
loop
lea
lea
mov
mov
sub
and
mov
mov
call
jne
mov
and
shl
sub
neg
shr
pop
add
pop
lea
shl
cmp
pop
lea
push
push
mov
push
mov
jb
mov
sub
movzbl
mov
shl
mov
and
add
lea
call
mov
shr
and
cmp
mov
jne
cmp
jb
jmp
mov
call
inc
inc
sub
sub
cmp
jb
pop
inc
cmp
dec
mov
jb
inc
cmp
dec
mov
dec
jb
mov
dec
sub
push
jmp
mov
dec
call
jne
pop
pop
pop
pop
pop
pop
pushl
push
push
mov
mov
jmp
mov
dec
call
jne
mov
dec
call
jne
pop
cmp
mov
jb
mov
push
mov
sub
cmp
jb
lods
mov
stos
jmp
mov
call
mov
je
mov
call
mov
je
mov
mov
mov
mov
mov
mov
mov
mov
pop
pop
pop
mov
mov
add
push
push
cmp
mov
jb
add
push
mov
call
jne
mov
mov
shl
sub
push
pop
lea
jmp
mov
add
call
jne
mov
mov
shl
push
pop
push
pop
lea
jmp
mov
add
push
pop
mov
mov
sub
inc
mov
call
mov
sub
jb
add
cmpl
jae
addl
mov
cmp
jb
push
pop
mov
shl
sub
inc
push
pop
lea
mov
call
mov
sub
jb
mov
mov
cmp
jb
mov
andl
shr
orl
dec
cmp
jae
mov
sub
mov
shlb
add
shl
add
mov
jmp
sub
call
shr
shll
cmp
jb
incl
sub
dec
jne
mov
add
mov
shll
push
pop
sub
inc
mov
mov
call
test
je
or
shl
dec
jne
jmp
incl
mov
add
mov
mov
sub
cmp
ja
mov
sub
mov
lods
stos
cmp
jae
dec
jne
mov
movzbl
cmp
jb
call
sub
lea
mov
mov
sub
mov
mov
mov
sub
mov
leave
pop
pop
pop
ret
pop
pop
sub
inc
jmp
cmp
jb
ret
shl
push
mov
jbe
cli
push
sbb
or
or
cltd
mov
lea
sub
lea
lods
sarb
mov
sarb
mov
mov
mov
sbb
or
push
cld
mov
mov
stos
lods
fistpl
or
mov
mov
mov
mov
mov
sahf
and
shrb
shr
sub
sub
sub
add
add
lea
ret
push
mov
sub
push
push
push
movl
movl
mov
mov
mov
mov
xor
mov
add
mov
mov
xor
add
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
movl
push
pop
mov
mov
push
pop
mov
mov
movl
movl
mov
xor
add
mov
mov
xor
add
mov
movl
movl
movl
lea
lea
call
decl
jne
decl
jne
decl
jne
movl
mov
xor
mov
add
mov
mov
andl
xor
add
mov
mov
mov
mov
mov
mov
mov
mov
lea
mov
mov
lea
mov
mov
pushl
lea
mov
call
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
add
mov
mov
lea
push
mov
mov
mov
add
push
pushl
push
call
pushl
xor
movl
movl
movl
movb
lea
stos
stos
stos
xor
movl
movl
movl
movb
lea
stos
stos
stos
mov
mov
mov
movl
movl
movw
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
call
push
mov
mov
pushl
call
test
jne
mov
mov
mov
add
mov
mov
mov
call
push
mov
call
test
jne
mov
mov
mov
add
mov
mov
mov
call
push
mov
call
mov
mov
xor
add
cmp
je
mov
xor
mov
sub
add
mov
cmp
ja
movl
pushl
mov
mov
mov
call
push
mov
mov
pushl
call
mov
mov
mov
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
mov
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
andl
mov
mov
and
add
push
call
test
je
mov
push
xor
pop
div
add
movzbl
push
call
test
jne
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
mov
jmp
andl
incl
cmpl
jb
mov
mov
xor
mov
add
lea
call
push
mov
mov
xor
add
lea
call
push
call
mov
xor
add
cmp
jne
movl
mov
mov
xor
lea
mov
mov
test
je
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
cmp
jbe
mov
mov
mov
cmp
jne
pushl
lea
push
call
mov
jmp
mov
mov
xor
add
xor
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
je
mov
xor
add
jmp
mov
mov
and
or
sub
add
mov
xor
lea
mov
cmp
jb
mov
mov
mov
movl
mov
mov
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
jmp
mov
mov
sub
mov
xor
add
xor
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
movl
mov
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
mov
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
push
mov
mov
xor
add
push
call
mov
mov
xor
add
cmp
je
mov
jmp
mov
xor
mov
mov
mov
xor
lea
xor
mov
sub
xor
cmp
jne
mov
mov
mov
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
mov
mov
mov
xor
mov
add
movl
movl
jmp
xor
mov
xor
add
mov
movsbl
movzbl
cmp
jne
mov
mov
xor
lea
xor
cmp
jne
jmp
mov
xor
add
mov
xor
add
cmp
je
mov
movl
movl
movl
movl
mov
mov
mov
xor
add
push
mov
mov
xor
add
push
mov
xor
add
push
mov
xor
add
push
call
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
mov
pushl
xor
add
push
call
mov
xor
add
mov
cmp
je
mov
xor
add
cmp
je
movl
movl
mov
xor
sub
mov
mov
xor
sub
mov
mov
xor
sub
mov
andl
andl
lea
push
pushl
push
lea
push
mov
pushl
mov
add
push
push
call
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
push
call
mov
add
xor
cmp
mov
mov
mov
jne
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
mov
jmp
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
movl
mov
mov
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
jmp
mov
mov
sub
mov
xor
add
xor
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
movl
mov
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
pushl
mov
pushl
lea
push
mov
mov
pushl
mov
mov
pushl
pushl
pushl
call
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
xor
add
push
mov
xor
add
push
pushl
call
pop
pop
pop
leave
ret
push
mov
push
push
lea
mov
push
mov
mov
mov
mov
cmp
pop
jne
movb
movb
movb
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
mov
movb
movb
movb
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
movb
mov
movb
movb
leave
ret
push
mov
push
push
lea
mov
push
mov
mov
mov
mov
cmp
pop
jne
movb
movw
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
mov
movb
movb
movb
leave
ret
push
mov
call
mov
mov
movb
call
push
mov
movb
call
push
movb
call
movb
mov
jmp
push
mov
push
mov
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
movl
mov
movzwl
xor
add
pop
test
je
mov
movl
leave
ret
push
mov
sub
andl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
push
mov
mov
mov
mov
mov
push
mov
test
jne
pushl
mov
call
mov
mov
add
mov
mov
mov
mov
xor
mov
add
cmp
jne
mov
mov
mov
mov
mov
mov
xor
add
mov
mov
andl
xor
add
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
movl
pushl
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
lea
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
movl
pushl
mov
call
test
je
andl
cmpl
jbe
mov
mov
sub
mov
incl
mov
mov
inc
cmp
jb
mov
mov
add
mov
mov
add
sub
add
mov
mov
mov
movl
jmp
add
shr
mov
je
lea
mov
mov
mov
mov
movzwl
mov
and
mov
mov
shr
add
xor
cmp
jne
mov
add
mov
cmpl
je
mov
add
mov
mov
mov
mov
addl
decl
jne
mov
add
mov
cmp
jae
add
mov
mov
test
jne
mov
mov
movl
mov
mov
mov
xor
add
mov
lea
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
mov
call
mov
mov
add
mov
pushl
mov
pushl
pushl
call
mov
add
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jb
mov
mov
mov
lea
mov
add
cmp
jae
mov
mov
mov
sub
add
mov
mov
jmp
xor
pop
pop
pop
leave
ret
push
mov
sub
push
mov
mov
cmpl
je
test
je
test
je
mov
test
je
cmpl
je
cmp
je
mov
andl
mov
sub
add
movzwl
mov
movzwl
add
je
lea
push
mov
mov
push
test
je
mov
andl
and
add
movzwl
movzwl
add
je
lea
mov
test
je
mov
andl
and
add
movzwl
movzwl
add
je
lea
mov
mov
mov
test
je
mov
add
movzwl
movzwl
incl
addl
add
cmp
jb
movzwl
movzwl
mov
incl
add
add
mov
cmp
jb
mov
movzwl
movzwl
incl
add
add
mov
cmp
jb
pop
pop
xor
inc
jmp
xor
pop
leave
ret
push
mov
mov
mov
sub
push
xor
push
push
cmp
je
cmp
je
cmp
jne
xor
inc
jmp
mov
add
mov
mov
mov
mov
add
add
mov
cmp
ja
mov
mov
cmp
jbe
cmp
jae
movzwl
jmp
mov
lea
mov
test
je
add
mov
cmp
jbe
mov
mov
add
cmp
jae
mov
jmp
sub
mov
mov
test
je
mov
inc
mov
cmp
jb
jmp
xor
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
movl
mov
mov
mov
mov
mov
mov
push
mov
push
mov
movl
mov
mov
push
mov
xor
xor
add
add
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
je
add
mov
mov
xor
add
mov
mov
cmp
je
mov
mov
imul
xor
add
cmp
jne
mov
mov
imul
xor
add
cmp
je
mov
mov
mov
imul
add
mov
add
xor
mov
mov
mov
xor
add
xor
mov
mov
add
add
cmp
je
add
mov
mov
xor
add
mov
lea
mov
movl
mov
pushl
mov
call
mov
xor
add
mov
cmp
jne
mov
pushl
mov
call
mov
movl
movl
mov
xor
add
cmp
jne
mov
mov
xor
xor
lea
mov
mov
add
imul
push
call
mov
xor
add
cmp
jne
mov
xor
add
cmp
jbe
mov
xor
add
cmp
jne
mov
mov
xor
lea
mov
jmp
movl
movl
mov
xor
add
jmp
mov
xor
add
mov
mov
xor
add
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
mov
xor
add
cmp
je
mov
mov
xor
add
shr
cmp
je
mov
mov
mov
movzwl
push
pushl
call
jmp
mov
add
mov
mov
add
push
pushl
call
mov
mov
mov
xor
add
cmp
mov
jne
mov
xor
lea
mov
jmp
mov
xor
add
imul
mov
mov
mov
xor
lea
mov
mov
xor
add
cmp
jne
mov
mov
mov
sub
xor
jmp
mov
xor
add
cmp
mov
jne
mov
jmp
mov
xor
add
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
mov
mov
push
mov
mov
mov
mov
xor
mov
add
cmp
je
mov
mov
add
push
mov
movl
mov
mov
mov
xor
xor
add
cmp
je
mov
mov
add
mov
mov
sub
mov
xor
add
mov
cmp
je
mov
xor
add
mov
push
movl
jmp
mov
xor
lea
add
shr
cmp
jae
sub
lea
mov
movzwl
and
mov
mov
mov
sub
add
movzwl
shr
xor
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
cmp
jne
mov
mov
add
add
decl
jne
mov
add
mov
mov
mov
xor
cmp
jae
add
mov
mov
xor
add
mov
cmp
jne
pop
mov
pop
jmp
mov
xor
add
pop
leave
ret
push
mov
sub
movl
movl
mov
push
push
mov
xor
push
mov
add
mov
mov
xor
add
mov
mov
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
movl
mov
test
je
mov
test
je
mov
test
je
mov
mov
xor
add
cmp
jne
mov
xor
add
mov
mov
mov
mov
add
mov
mov
test
je
movl
mov
xor
add
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
cmp
jne
mov
lea
push
mov
xor
add
push
pushl
pushl
call
mov
mov
mov
sub
add
push
call
mov
mov
mov
mov
pushl
pushl
push
call
mov
mov
add
movzwl
lea
mov
mov
movzwl
xor
add
mov
cmp
je
mov
xor
add
mov
mov
movzwl
xor
sub
sub
cmp
ja
mov
add
mov
jmp
mov
mov
lea
mov
mov
test
je
not
and
add
mov
add
push
call
mov
mov
mov
xor
add
cmp
je
push
mov
add
mov
add
push
push
call
mov
mov
mov
add
xor
lea
mov
mov
mov
movzwl
xor
sub
mov
sub
mov
cmp
jbe
mov
mov
cmp
jne
mov
lea
push
mov
xor
add
push
mov
pushl
push
call
test
je
mov
mov
mov
xor
add
je
mov
xor
add
andl
mov
mov
lea
movl
movl
mov
mov
mov
movl
mov
mov
xor
mov
add
mov
incl
cmpl
mov
jb
mov
mov
mov
mov
mov
lea
lea
mov
mov
movl
mov
mov
movl
movl
movl
movl
movl
mov
movl
mov
movl
mov
movl
mov
movl
movl
xor
mov
xor
sub
mov
inc
cmp
jb
mov
lea
push
call
mov
lea
push
push
call
mov
lea
push
mov
pushl
mov
call
mov
xor
add
mov
mov
mov
xor
add
cmp
je
mov
jmp
mov
mov
mov
mov
cmp
je
mov
mov
cmp
jne
mov
mov
cmp
jne
mov
mov
mov
add
mov
mov
xor
add
mov
mov
push
push
pushl
call
test
je
pushl
mov
pushl
call
test
je
mov
mov
mov
call
test
je
push
pushl
call
test
je
mov
mov
cmp
jne
mov
lea
push
pushl
mov
pushl
push
call
mov
mov
mov
xor
add
je
mov
mov
movl
mov
pushl
xor
pushl
add
or
add
push
call
movl
jmp
mov
mov
add
call
mov
mov
mov
mov
movl
cmpl
jne
andl
mov
jmp
xor
pop
pop
pop
leave
ret
push
mov
movzwl
movzwl
push
push
xor
lea
test
je
mov
lea
cmp
jb
mov
add
add
cmp
jb
add
inc
cmp
jb
xor
pop
pop
pop
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
mov
xor
push
mov
mov
add
push
cmp
je
mov
mov
xor
add
cmp
je
mov
xor
add
mov
mov
xor
add
mov
mov
mov
mov
xor
mov
xor
add
add
sub
mov
jmp
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
mov
mov
je
cmp
je
mov
mov
xor
add
cmp
jb
mov
mov
xor
add
cmp
ja
movzwl
movzwl
add
mov
mov
mov
xor
add
cmp
jb
mov
mov
xor
add
cmp
ja
movzwl
movzwl
add
mov
mov
mov
cmp
jne
mov
mov
xor
lea
mov
mov
mov
xor
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
imul
mov
jmp
mov
mov
xor
lea
mov
mov
sub
xor
mov
mov
sub
xor
mov
mov
mov
xor
add
xor
add
imul
mov
movzwl
mov
mov
xor
add
xor
add
imul
mov
movzwl
sub
sub
xor
xor
cmp
jne
mov
mov
xor
add
xor
add
imul
mov
movzwl
mov
sub
xor
cmp
mov
je
mov
pop
xor
pop
add
pop
leave
ret
push
mov
push
mov
push
mov
sub
mov
xor
mov
movl
mov
cmp
je
push
push
movzwl
mov
mov
mov
cmp
jne
mov
lea
xor
mov
xor
mov
mov
sub
mov
xor
mov
cmp
jne
mov
pop
pop
cmp
je
xor
lea
pop
leave
ret
push
mov
push
push
push
movl
mov
call
mov
mov
sub
xor
cmp
je
mov
mov
mov
push
mov
mov
sub
mov
xor
mov
cmp
jne
mov
lea
xor
mov
xor
lea
mov
sub
xor
cmp
jne
mov
pop
cmp
je
xor
xor
mov
mov
pop
pop
leave
ret
push
mov
push
push
movl
mov
call
mov
mov
sub
mov
xor
mov
cmp
je
push
push
movzwl
mov
mov
mov
cmp
jne
mov
lea
xor
mov
xor
mov
mov
sub
mov
xor
mov
cmp
jne
cmpl
pop
pop
je
xor
inc
jmp
xor
pop
leave
ret
push
mov
push
mov
movzwl
push
lea
mov
push
xor
mov
mov
cmp
je
mov
sub
mov
jmp
mov
mov
add
movzwl
mov
add
xor
mov
cmp
jne
xor
pop
mov
mov
pop
leave
ret
push
mov
sub
movl
movl
mov
push
mov
xor
mov
add
mov
movl
movl
push
movl
jmp
mov
mov
sub
mov
xor
add
cmp
jbe
mov
add
mov
add
mov
mov
mov
mov
mov
jmp
mov
mov
sub
mov
xor
add
cmp
mov
jbe
add
mov
add
mov
mov
mov
jmp
mov
sub
mov
xor
add
cmp
mov
jbe
add
mov
add
mov
mov
mov
mov
xor
lea
mov
jmp
add
mov
add
mov
mov
incl
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jb
pop
pop
leave
ret
push
mov
sub
movl
push
mov
movl
mov
mov
xor
mov
add
cmp
je
push
push
mov
mov
xor
mov
sub
add
lea
xor
mov
mov
mov
xor
sub
xor
mov
mov
xor
add
cmp
jne
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
mov
mov
mov
push
push
mov
xor
mov
add
cmp
mov
jne
xor
add
jmp
mov
xor
add
cmp
jne
mov
jmp
lea
mov
mov
mov
mov
xor
add
mov
mov
push
call
mov
mov
mov
jmp
mov
sub
mov
mov
mov
call
mov
pushl
mov
call
mov
xor
add
cmp
jne
mov
call
mov
xor
add
push
pushl
mov
call
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
add
cmp
jne
mov
xor
add
pop
pop
pop
leave
ret
mov
mov
jmp
push
mov
mov
sub
cmpl
push
push
push
je
test
je
movzwl
mov
mov
xor
and
mov
xor
add
mov
andl
xor
push
pop
cmp
jae
lea
xor
movzwl
mov
lea
cmp
jne
movzwl
mov
cmp
jne
mov
movzwl
cmpb
je
mov
movzwl
movsbw
mov
sub
xor
cmp
je
push
pop
incl
mov
cmp
jb
jmp
incl
push
pop
mov
movzwl
cmpb
je
inc
cmp
jne
xor
pop
pop
pop
leave
ret
mov
add
xor
xor
cmp
sete
jmp
push
mov
sub
push
mov
mov
cmpl
jne
xor
jmp
pushl
push
pop
call
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
push
mov
mov
call
push
mov
pushl
call
mov
test
je
mov
push
push
mov
add
mov
mov
mov
mov
add
mov
mov
add
add
mov
mov
mov
cmp
ja
mov
xor
mov
cmp
jbe
jmp
mov
mov
movzwl
cmp
jae
cmp
jae
mov
mov
mov
mov
lea
add
add
sub
movl
mov
mov
cmpl
jne
mov
pushl
push
call
mov
test
je
mov
mov
mov
addl
decl
jne
mov
inc
mov
cmp
jb
pop
pop
pop
leave
ret
push
mov
mov
push
pushl
lea
mov
call
mov
mov
mov
xor
cmp
pop
setne
mov
pop
ret
mov
push
jmp
xor
add
mov
add
add
movzwl
mov
cmp
jne
xor
mov
mov
pop
ret
push
mov
mov
shl
add
jmp
xor
add
mov
inc
inc
mov
cmp
jne
movb
mov
add
pop
ret
push
mov
sub
movl
movl
mov
mov
movl
push
push
movl
mov
mov
mov
xor
mov
xor
add
add
imul
jmp
mov
mov
xor
xor
add
add
test
mov
mov
je
xor
xor
add
add
shr
mov
xor
add
xor
jmp
xor
xor
add
add
shr
mov
mov
xor
lea
mov
mov
xor
xor
sub
cmp
jbe
mov
pop
mov
mov
pop
leave
ret
push
mov
sub
push
mov
mov
lea
mov
mov
mov
push
mov
xor
push
mov
add
cmp
mov
je
mov
xor
add
cmp
je
mov
mov
mov
mov
movl
mov
lea
mov
mov
mov
mov
mov
xor
mov
sub
sub
mov
movl
jmp
mov
mov
xor
xor
lea
mov
xor
div
mov
mov
xor
xor
sub
cmp
jne
mov
mov
mov
mov
mov
xor
xor
add
add
cmp
jae
lea
mov
mov
xor
add
lea
mov
mov
cmp
jbe
addl
jmp
addl
mov
xor
inc
incl
add
cmp
jb
mov
cmpl
jne
xor
add
jmp
mov
xor
mov
sub
add
mov
xor
sub
ror
xor
mov
mov
mov
mov
mov
sub
xor
cmp
jne
mov
mov
xor
xor
sub
mov
sub
xor
mov
mov
xor
sub
sub
jmp
mov
xor
mov
sub
add
mov
mov
cmp
jne
mov
jmp
mov
xor
add
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
movl
push
movl
mov
push
mov
push
xor
mov
add
mov
movl
movl
movl
mov
mov
mov
xor
xor
add
add
imul
jmp
mov
sub
xor
mov
lea
call
mov
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
xor
sub
mov
cmp
jbe
mov
xor
add
mov
movl
mov
jmp
mov
mov
xor
add
shr
mov
mov
mov
mov
mov
mov
movzbl
xor
mov
mov
mov
xor
add
and
mov
mov
xor
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
pop
pop
xor
pop
leave
ret
push
mov
mov
mov
mov
mov
mov
sub
push
push
push
mov
xor
mov
add
cmp
jne
orl
jmp
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
sub
mov
mov
mov
mov
dec
test
mov
je
mov
mov
mov
dec
not
and
mov
mov
add
jmp
mov
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
xor
add
mov
mov
movl
movl
movl
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jae
mov
xor
add
mov
mov
add
mov
pushl
mov
mov
call
mov
movl
mov
xor
lea
add
push
call
mov
test
je
mov
xor
add
push
pushl
lea
push
call
mov
mov
mov
mov
sub
mov
mov
mov
mov
add
mov
cmp
jb
mov
mov
mov
add
mov
sub
jmp
push
pushl
lea
push
call
mov
mov
movl
movl
movl
lea
mov
lea
mov
lea
mov
lea
mov
mov
xor
add
mov
jmp
cmp
je
mov
xor
mov
add
mov
mov
xor
lea
mov
mov
mov
xor
add
cmp
jne
mov
xor
add
push
push
lea
push
call
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
lea
push
call
mov
cmp
je
mov
xor
add
mov
mov
xor
lea
xor
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
jne
mov
mov
xor
lea
jmp
push
pushl
lea
push
call
mov
mov
xor
add
cmp
je
mov
xor
add
push
push
lea
push
call
mov
add
mov
pushl
pushl
mov
add
push
call
mov
mov
xor
add
cmp
je
push
pushl
mov
add
push
call
mov
mov
add
mov
add
mov
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jb
mov
mov
mov
jmp
mov
mov
xor
xor
add
add
cmp
jne
mov
imul
mov
jmp
mov
xor
add
cmp
je
subl
jmp
andl
pop
pop
pop
leave
ret
push
mov
and
mov
sub
push
mov
push
push
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
mov
add
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
push
push
pushl
push
call
mov
mov
pushl
xor
add
mov
lea
push
push
pushl
pushl
pushl
call
mov
mov
xor
add
cmp
je
mov
mov
xor
add
imul
mov
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
pushl
pushl
push
pushl
pushl
pushl
call
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
mov
mov
movl
mov
xor
add
mov
mov
push
mov
pushl
lea
pushl
push
pushl
pushl
pushl
call
mov
mov
leave
ret
