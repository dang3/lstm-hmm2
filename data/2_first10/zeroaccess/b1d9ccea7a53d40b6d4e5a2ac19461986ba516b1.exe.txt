push
mov
sub
movl
movl
cmpl
je
cmpl
jge
jmp
pushl
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
push
push
push
mov
mov
xor
or
sub
or
mov
lea
mov
sbb
mov
mov
andl
mov
inc
mov
cmpl
ja
jmp
push
call
cmpl
jb
mov
sbb
xor
or
mov
andl
mov
inc
mov
cmpl
ja
jmp
push
push
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
xor
mov
add
mov
mov
adc
mov
movl
movzwl
sub
mov
or
movl
subl
mov
mov
sbb
mov
xor
inc
mov
orl
add
movzwl
xor
mov
mov
movl
cmpl
je
cmpl
jbe
jmp
pushl
push
push
call
cmpl
jne
mov
dec
mov
xor
xor
dec
mov
jmp
mov
xor
orl
add
movl
jmp
mov
mov
mov
mov
movl
inc
movl
cmp
movl
jb
mov
addl
mov
adcl
xor
orl
add
jmp
add
mov
not
mov
addl
xor
sub
mov
add
movzwl
mov
mov
movzwl
mov
xor
add
mov
jmp
mov
je
je
leave
imul
jnp
jnp
cwtl
jnp
ror
sarb
add
xchg
mov
sbb
lea
jge
xchg
sub
pusha
ja
stos
js
insl
inc
js
inc
mov
clc
xchg
sti
mov
or
int3
pop
fs
call
lock
loope
out
sti
aad
jmp
dec
int3
sahf
loop
clc
push
cmpsb
les
and
jne
jl
push
cwtl
fs
arpl
insb
in
lret
mov
xchg
cld
sub
sub
mov
mov
in
mov
dec
movsb
sub
sbb
xchg
inc
testb
and
insb
iret
cs
es
mov
lods
inc
ds
mov
or
push
push
out
popa
pop
mov
pop
aaa
in
fisttpl
xor
cmp
add
shlb
outsb
push
mov
loop
outsb
mov
jl
mov
enter
jmp
xor
push
shlb
test
sbb
cmp
inc
inc
gs
cld
push
std
loope
stos
pop
cmp
push
daa
out
jno
xchg
lcall
xchg
ljmp
test
xchg
cmp
into
dec
ds
xchg
iret
cld
imul
fiaddl
lret
outsl
loope
jecxz
pop
jecxz
mov
push
insb
mov
aas
mov
test
xchg
rorl
fcmovnbe
xlat
test
push
in
lods
cmpsb
sbb
aam
jp
pop
mov
push
jae
daa
je
adc
mov
rcll
add
insl
mov
out
lock
xchg
pop
scas
mov
cwtl
push
arpl
mov
mov
dec
push
cmp
cwtl
add
push
push
push
data16
or
daa
inc
les
lcall
mov
and
fists
sbb
fstps
insb
fistpll
filds
mov
mov
cs
lret
lret
scas
push
or
xchg
out
aas
scas
and
lret
cli
lods
insb
dec
add
push
sti
in
add
adc
sub
cltd
inc
sub
pop
sbb
xlat
pushf
ret
mov
mov
stos
fldt
dec
cli
sub
jo
sub
hlt
push
loopne
jbe
jno
dec
repnz
in
btc
inc
jmp
xchg
outsl
and
pop
arpl
cmp
dec
sub
jo
aas
fists
jp
adcl
imul
in
leave
fwait
enter
xor
stos
sbb
dec
dec
imul
jp
cmpsl
jo
negl
push
jo
popf
cmp
ret
out
jnp
xor
add
jnp
hlt
int3
cwtl
pusha
aam
int
mov
mov
in
aas
pusha
sub
icebp
and
flds
dec
xor
push
push
sub
pop
testl
push
mov
pop
push
xor
jp
rcrl
lods
mov
jg
aad
xchg
mov
in
push
jnp
aaa
push
or
leave
and
addb
je
ljmp
or
mov
lods
out
hlt
int
fisttpll
push
cmp
jnp
outsb
rolb
clc
xor
sbb
addb
cmp
dec
mov
sub
pop
pop
cmp
cbtw
scas
dec
dec
jp
cmp
mov
cmpsl
mov
xor
outsl
mov
cmp
mov
mov
push
and
push
push
pop
lods
shrb
pop
or
lods
xchg
nop
xor
loopne
jecxz
push
sti
iret
sbb
xor
push
and
mov
cmp
aam
fcmovu
ljmp
out
inc
in
pop
push
xor
cmp
xor
ss
ficompl
hlt
mov
jns
jg
mov
xchg
xor
ljmp
loop
cs
fcomp
sbb
jecxz
cmpl
pop
clc
lcall
sbb
or
add
cmpsb
push
xchg
inc
xchg
in
loope
jl
iret
ret
jb
aas
sbb
or
lret
lret
lahf
dec
repnz
outsl
xchg
jmp
mov
aad
sub
push
jo
in
mov
cld
sub
ljmp
cmpsb
pop
xor
fstps
test
fidivl
cmpsl
pop
insb
pmullw
jle
pop
insl
gs
int3
jb
inc
lds
cmp
jno
push
add
push
jle
jbe
sbb
mov
movsl
jle
sub
das
jae,pt
mov
adc
int3
and
push
in
lea
inc
cmpl
xchg
stos
enter
push
aaa
arpl
not
leave
mov
fld
dec
or
add
stc
inc
aad
dec
push
aaa
push
outsb
jle
mull
sbb
push
orl
mov
rcr
sahf
popa
dec
sbb
push
mov
aaa
shll
pop
adc
lods
push
cltd
insl
xchg
mov
jnp
popa
push
and
bound
lcall
stos
inc
dec
js
cmp
push
out
lret
mov
jb
shrl
add
dec
int
fwait
mov
mov
sahf
jecxz
les
mov
adc
jnp
or
out
pop
and
insl
push
xchg
jbe
shr
and
data16
inc
jb
mov
mov
les
mov
jno
mov
loopne
paddq
and
xchg
and
cmp
cli
bound
pop
incl
add
push
or
test
popa
int
dec
push
and
fs
fiaddl
sti
outsl
jno
sub
inc
mov
hlt
cmc
cltd
xor
popf
stc
dec
sbb
sti
sti
stos
movsb
mov
jmp
addb
or
roll
outsl
push
adcb
pop
daa
cmpsb
pop
mov
imul
scas
sahf
cmp
movsl
out
ds
outsb
les
xor
fwait
call
test
inc
addr16
mov
out
sahf
insb
dec
insb
push
dec
and
adc
dec
sub
sbb
pop
scas
lods
mov
cmpsl
inc
jl
pop
xchg
xchg
jg
stos
je
jmp
mov
outsb
and
sub
pop
sub
inc
mov
xor
insl
cmovns
push
mov
pusha
fcomp
movl
cli
mov
pop
mov
out
popa
adc
shll
bnd
mov
pop
addl
sub
das
test
shl
push
fidivrl
or
into
ja
jecxz
cmp
xchg
fdivl
in
mov
cmp
mov
into
push
dec
cltd
in
pop
lds
add
dec
cld
es
roll
andl
scas
dec
ja
sub
jbe
repz
ss
push
push
pop
into
shlb
lret
pop
mov
cli
dec
or
jbe
popa
scas
inc
popf
popf
inc
push
pop
mov
into
inc
adc
push
sub
fisubs
and
mov
add
mulb
jmp
dec
mov
or
sbb
cmpsl
sub
xor
cmpsb
inc
or
outsb
stos
fiaddl
aad
int
test
inc
out
dec
les
inc
xchg
pop
or
jno
aam
xchg
sbb
lret
in
or
push
pop
repz
sbb
fistpll
dec
imul
adc
jecxz
or
bound
or
mov
int3
pop
rolb
call
ror
popf
jmp
pop
and
lods
aad
sub
cmp
inc
xchg
jnp
pop
shll
dec
and
int
ret
push
xchg
xchg
or
es
pop
adc
fstps
or
push
fs
outsl
ds
loope
sub
outsl
xchg
sub
mov
out
xchg
and
adc
xchg
push
repnz
cmp
xor
and
js
jnp
pop
inc
cld
adc
mov
inc
inc
xchg
xor
ja
mov
es
scas
lcall
pop
lods
xchg
cmp
fwait
jmp
fisubrl
iret
daa
cli
stos
sbb
jle
outsb
push
xor
xor
inc
sti
push
add
cmp
dec
dec
adc
xlat
ret
dec
imul
sub
aad
stos
cmc
adc
jne
mov
rorl
mov
adc
mov
jmp
xchg
out
test
aas
loop
dec
mov
dec
mov
sbb
sub
mov
in
jge
add
rcrb
inc
movsl
xchg
cwtl
cmp
or
push
filds
pop
sbb
lods
in
les
xchg
in
jl
sti
out
pusha
movsb
cltd
push
sbb
lcall
shrl
pop
mov
mov
xorl
rol
lods
int3
aaa
and
dec
adc
mov
rep
cltd
push
lret
jno
sbb
sarl
mov
in
das
dec
pop
pushf
dec
hlt
roll
ret
mov
adc
lds
fistl
outsb
xchg
mov
and
mov
jecxz
mov
adc
or
lds
imul
sbb
and
icebp
cmc
xchg
xchg
jo
enter
pop
out
mov
jnp
sub
addl
sar
or
lea
lock
lahf
jecxz
outsb
iret
pop
add
pusha
xor
addl
jo
or
insl
je
cli
push
nop
int
loop
add
push
xchg
js
lea
mov
add
in
leave
pushf
xchg
sbb
xchg
popf
fistl
jg
push
cmpsb
jg
jno
jb
dec
scas
popa
lcall
xor
jle
mov
mov
xchg
jmp
outsb
cli
and
pop
add
test
rorb
inc
into
decb
stos
popf
cmp
sub
lock
and
fwait
jmp
enter
in
sbbb
into
insl
or
jb
pop
mov
pop
adc
stos
dec
mov
add
ljmp
bound
aaa
jl
ljmp
inc
movsb
insb
call
xor
push
cmp
sbb
sub
roll
jns
scas
mov
lea
aas
cltd
call
bound
ds
push
test
int
enter
jle
cmp
cwtl
adc
repz
subb
ret
and
pop
fadds
lods
push
rcr
arpl
movsb
xchg
int3
push
or
cmp
dec
clc
push
lret
cwtl
popa
push
xchg
pop
and
stos
or
ret
push
mov
lock
xchg
jp
push
cs
jmp
test
incl
sub
xchg
fcomps
lods
mov
mov
loopne
int3
movsl
dec
or
ja
sub
imul
aam
jecxz
add
cld
in
fwait
test
inc
push
sbb
add
fisttps
inc
inc
rol
out
lds
cltd
mov
gs
xchg
loopne
or
mov
mov
rcr
dec
pop
fdivp
movb
lea
mov
push
push
data16
pop
sbb
out
push
jo
jno
clc
sbb
jb
in
xor
call
adc
fdivr
cmp
cmpsl
addl
push
ds
inc
adc
fdivr
push
jnp
pop
add
pop
ljmp
fidivs
jnp
add
pop
and
mov
xchg
pop
popf
jae
int3
adc
or
mov
in
ret
push
inc
mov
mov
inc
imul
mov
sbb
je
xor
adc
dec
inc
push
jge
dec
int
ret
pop
testb
jns
lcall
aam
jbe
cmpsl
mov
mov
jl
inc
xor
dec
sahf
inc
xchg
popa
frstor
push
or
jbe
mov
jbe
icebp
adc
addr16
adc
push
push
fs
in
mov
pop
int
cmp
addb
dec
shrb
mov
or
aas
ss
push
je
insb
mov
popa
in
add
in
popf
ds
das
dec
dec
lock
test
ret
cmp
add
lret
cmp
addb
gs
push
lret
jae
ja
std
out
mov
inc
repz
jne
dec
mov
push
push
rorb
popf
push
pop
jno
xchg
aam
pop
enter
add
pop
incb
sti
outsl
in
movb
dec
loope
dec
dec
inc
aad
xor
push
or
mov
jle
adc
jg
in
cltd
and
sub
insl
stos
outsb
or
lret
lret
test
mov
jg
lock
leave
mov
icebp
andb
push
pop
mov
cmp
subl
daa
test
mov
lea
mov
pop
int3
hlt
push
xor
cli
in
xor
lret
jp
stos
iret
rcrb
gs
and
xor
sbb
orb
lahf
ljmp
mov
push
test
loope
pushf
inc
std
xor
xchg
xor
movsl
in
add
sub
inc
pop
sub
lahf
test
push
mov
jbe
shl
pop
subb
in
shrl
xor
push
mov
and
jbe
add
ret
push
andl
lds
jne
sbb
stc
push
cli
mov
arpl
pop
add
clc
lret
push
dec
mov
dec
out
adc
sarl
jecxz
push
icebp
cmp
cmpl
arpl
or
jge
inc
stos
sub
xchg
sbb
daa
sbb
dec
push
fstpl
pop
int
cltd
pusha
cmpb
repz
xchg
repz
and
out
add
add
pop
add
daa
mov
movsb
iret
lods
lret
cmp
iret
nop
lret
or
cmpsb
sbbb
mov
out
add
xor
repz
inc
test
cltd
call
pop
xor
cmpsl
clc
fsubr
xor
inc
lods
cmp
les
testl
fwait
das
mov
mov
lods
popf
xchg
test
jo
xorb
mov
inc
xchg
idivb
addr16
clc
jbe
jnp
push
adc
pop
xchg
je
sub
inc
push
enter
stc
push
outsb
push
mov
popa
mov
dec
sub
in
jp
xorb
push
mov
cmc
add
cwtl
push
fwait
jmp
xchg
aam
push
inc
ret
sbb
orl
cmpsl
sbb
cmc
push
cmpsl
addb
push
jge
addb
cmpl
cld
adc
jbe
inc
sbb
jb
push
dec
and
insl
dec
mov
dec
dec
aad
jnp
mov
pop
xchg
mov
and
or
aas
xchg
pop
mov
repnz
add
int3
cmc
aad
push
inc
sbb
testb
fistpl
xor
mov
push
cltd
inc
sub
sub
or
dec
sbb
clc
pop
outsl
push
adc
insl
xchg
stos
lahf
movsb
psrlw
add
push
notl
out
add
les
pop
cmp
out
insb
sub
cmpsb
mov
test
inc
fimull
jl
aam
inc
mov
push
mov
imul
js
jns
je
fldl
movb
push
xchg
inc
in
xchg
pushf
push
mov
out
out
int3
sbb
cmc
inc
lods
jp
fistpll
jne
setle
cmp
lcall
xchg
adc
in
push
xor
test
pusha
inc
mov
dec
fxch
ret
xor
sub
and
pusha
popa
pop
mov
xor
push
inc
jecxz
mov
mov
outsl
fincstp
xor
and
bound
pop
lret
jg
dec
jns
pop
mov
fstl
cmp
and
xchg
sbb
inc
ret
pop
xchg
aad
lcall
cmp
adc
pop
popf
inc
cmpsl
ja
sbb
fisubs
push
push
lock
adc
inc
cli
out
std
jecxz
aaa
lcall
cmc
scas
ja
jbe
test
mov
aam
je
hlt
lds
xchg
shlb
ret
push
push
in
inc
adc
in
mov
or
jno
sub
or
ja
cmp
cmc
int3
cld
ljmp
jg
and
mov
push
out
cli
sbb
lahf
push
and
lods
nop
or
dec
sub
outsl
xchg
push
rcl
and
cmp
fs
push
testb
aam
outsl
pop
cmp
int3
movsl
in
pop
icebp
sub
mov
xor
testb
mov
gs
aas
pop
mov
and
mov
xor
mov
add
in
shll
push
lret
in
pop
and
jb
lods
fs
cmpsl
adc
lret
push
je
idivb
xchg
inc
cmpsl
sti
xchg
add
pop
push
and
js
incb
cwtl
cmpsl
cmpsb
incl
je
adc
and
cmp
jmp
inc
leave
jl
test
dec
sbb
sub
xor
loop
mov
test
out
jnp
mov
and
pop
xor
and
dec
mov
sbb
dec
xor
int3
scas
fmull
out
shrl
fwait
scas
push
mov
jo
dec
xchg
mov
xchg
icebp
dec
push
mov
loop
mov
sti
adc
lea
in
lret
std
cld
pop
push
push
mov
addr16
sbb
inc
jge
das
lcall
sbb
inc
xor
or
fwait
and
mov
hlt
push
aad
outsb
pop
mov
cmpsb
sbb
cmp
loope
mov
mov
push
in
sarb
lret
mov
shlb
push
sahf
sbb
mov
sbb
add
jecxz
push
stos
inc
pop
mov
nop
std
mov
fmull
sbb
adc
lcall
lret
jnp
out
aas
mov
cmp
icebp
pusha
sub
inc
pop
and
cmp
and
daa
dec
xor
mov
jecxz
insl
pop
or
mov
lea
daa
jecxz
adc
inc
mov
cli
dec
and
popf
imul
loope
sbb
and
mov
adc
mov
jle
adc
pop
out
xor
push
xchg
iret
mov
lea
and
stos
das
sahf
jns
xchg
xchg
pop
adc
cmp
sbb
pop
cmc
push
lahf
jp
pop
mov
imul
addr16
xor
mov
jbe
cmp
dec
loope
jno
jecxz
aas
sub
outsl
or
pushf
push
cmp
mov
xchg
jo
jno
hlt
push
xchg
ret
xor
adc
inc
xchg
add
fdivl
clc
mov
lahf
fdivrs
incl
xchg
arpl
gs
loope
cld
mov
hlt
mov
xor
cmp
jp
add
inc
aas
pop
pop
les
movsl
cmpsb
test
dec
cmp
test
cld
lahf
jmp
xorb
shrb
lods
or
mov
dec
icebp
aad
and
mov
xor
jmp
xchg
popa
out
xor
mov
sti
pop
cltd
sbb
aas
jl
push
mov
dec
sbb
fistpl
inc
xlat
jbe
push
push
xchg
inc
push
or
std
xchg
sub
out
cmp
shl
sarl
outsb
xchg
sti
inc
pop
xchg
push
std
stos
cli
insl
and
mov
jmp
dec
xor
aas
jbe
cmp
pushaw
pop
insb
cmpsb
sahf
sub
fildll
jns
addb
mov
lret
sti
dec
jg
jmp
dec
and
xor
xor
lea
sbb
mov
push
mov
fisttpll
inc
ljmp
dec
pusha
out
fcoml
or
mov
and
pusha
sub
movsl
inc
and
add
repz
cld
inc
jmp
mov
lret
sub
adcb
and
ds
xor
mov
repz
adc
jp
das
sub
jns
or
int3
pop
jge
push
fldl
push
stos
push
cli
or
stos
xchg
mov
testb
jno
pop
pop
bound
aaa
fldl
pop
fdivl
and
cmpl
pop
das
or
fistpll
addr16
lods
inc
or
mov
cltd
mov
cmc
dec
push
mov
out
sarl
mov
popa
into
sub
stos
incb
jl
jbe
sub
inc
lahf
cmpsl
mov
adc
lcall
mov
les
aas
je
push
pop
and
dec
out
rcl
shll
pop
sub
ss
or
pop
pop
cmpsb
stc
lds
aaa
out
aaa
inc
push
dec
mov
and
jne
and
loopne
dec
jmp
das
jno
lock
out
add
nop
or
insb
aam
mov
xchg
ret
dec
xchg
push
scas
call
pop
int3
aas
aas
inc
in
fmul
add
mov
cmp
lahf
xchg
loope
dec
test
out
pop
enter
xchg
inc
fisubrs
inc
and
jg
cmp
mov
scas
mov
jg
lcall
cwtl
cmc
divl
jbe
lods
lcall
dec
loop
pop
add
ror
dec
outsb
leave
lret
xor
jbe
icebp
push
stc
cmp
fwait
insl
fistl
xchg
xor
cmp
scas
lea
mov
lods
das
popa
scas
mov
inc
bound
mov
roll
in
cmp
pop
aas
aaa
stos
movsb
sbbl
cwtl
mov
stc
test
jnp
sbb
gs
aam
filds
push
jbe
xchg
aas
cmpxchg
xchg
sub
test
or
popf
mov
sahf
xor
sub
xchg
leave
into
adc
lcall
jns
orl
xor
mov
sbb
mov
cli
out
and
cmp
xchg
mov
fldt
adc
lea
out
scas
and
in
cltd
mov
sbb
cmp
xchg
icebp
jge
fdivs
jbe
pop
cmpsl
xchg
fwait
xchg
sub
sbb
push
data16
ss
xchg
lods
add
mov
push
jae
inc
push
popf
daa
push
iret
test
sbb
push
out
fwait
add
ret
cmp
jne
movsl
and
xchg
or
push
lcall
lods
das
jge
or
fsubl
mov
xchg
cld
andb
push
cwtl
loope
shll
cli
call
dec
mov
adcb
jmp
inc
and
pusha
pop
mov
andb
adc
push
or
inc
and
jecxz
hlt
inc
cmpsl
sahf
xchg
xchg
add
push
loopne
sarb
sub
fdivrl
mov
je
leave
call
jecxz
lea
mov
int
push
jle
decb
mov
xchg
adc
inc
cmpsl
shll
mov
fwait
push
call
loop
fsubrl
jmp
or
sbb
jecxz
push
jmp
mov
inc
inc
cltd
cmp
daa
xor
push
ror
fs
xor
lret
push
and
mov
inc
clc
dec
sub
push
mov
lret
cmp
mov
xchg
push
inc
imulb
add
sub
dec
mov
scas
sub
pushf
cs
xlat
sbb
xor
jmp
call
pop
rcrb
int
in
mov
ret
iret
je
int3
dec
adc
mov
lret
out
xchg
cli
jnp
cmp
add
add
call
enter
gs
and
push
fistps
cmp
mov
push
adc
add
xor
mov
addr16
inc
inc
mov
je
out
sahf
popf
in
dec
and
jl
adc
lcall
lds
in
pop
jo
arpl
mov
push
mov
mov
popa
dec
sub
adc
mov
push
pop
jnp
mov
stc
and
lods
inc
loop
pop
test
mov
das
aaa
loopne
sarl
add
shrl
int
cmp
or
div
sub
pop
cmp
and
mov
fidivl
aaa
pop
hlt
mov
stos
jb
jbe
ds
out
push
jb
jmp
insb
ds
std
mov
xchg
std
ljmp
insl
xor
cmp
dec
cmp
cmp
jmp
std
cwtl
ret
mov
mov
fimuls
sbb
push
test
icebp
hlt
fcompl
push
push
jns
mov
daa
sub
cmp
sbb
mov
push
xchg
mov
pop
mov
pop
lds
or
sub
mov
cmp
push
repnz
jecxz
dec
or
test
scas
test
adc
sarb
and
add
and
leave
sahf
mov
insl
xor
sub
ds
stos
mov
adc
test
and
cmp
pushf
fwait
pop
sub
lock
jp
add
mov
adc
aam
arpl
notl
add
mov
xor
sub
les
push
mov
stc
and
mov
pop
sbb
fadd
clc
xchg
jbe
lret
cmp
in
sbb
xor
or
xor
daa
mov
test
dec
push
pop
sub
fildl
sub
adc
lea
fldcw
pusha
xchg
xor
xlat
xor
mov
int
xlat
push
popf
and
mov
fisttps
nop
and
dec
push
aas
sub
cmc
lea
enter
fistpl
insl
cmpsb
insb
stos
lgs
xor
cmp
fnstcw
loope
pop
mov
ljmp
mov
push
xor
jp
add
xchg
rep
xor
scas
cwtl
mov
shll
jne
push
lea
push
mov
cmc
cmp
sbb
out
pop
inc
add
push
jae
outsl
loope
dec
jmp
jo
mov
in
mov
mov
leave
lret
fldl
mov
mov
inc
dec
test
pusha
aad
pop
or
fcmovnu
xor
dec
sub
mov
jne
fidivs
enter
out
popf
cmp
cltd
push
cltd
xchg
aaa
out
stos
sti
mov
adc
mov
jp
sahf
lods
cld
loopne
into
leave
lods
inc
out
inc
sarb
scas
pop
mov
cmc
in
sbbl
inc
adc
mov
pop
pusha
stc
mov
rorb
call
push
fwait
mov
je
pop
xchg
mov
cld
clc
mov
xchg
xchg
mov
mov
sub
and
aad
js,pn
add
mov
jmp
pusha
adc
fwait
outsl
jl
xchg
sbb
push
popf
xor
inc
pop
cmp
lret
shl
add
mov
jecxz
insl
or
sub
iret
call
sbb
lahf
jp
movl
mov
or
fildll
mov
pop
xchg
sbb
addb
addr16
add
repnz
xchg
cmpsb
stos
into
mov
cmp
inc
lret
test
adc
push
and
pop
scas
cltd
jne
fsubs
mov
sbb
add
xchg
shr
loopne
andb
cmc
adc
loop
sub
call
push
pop
xor
sbb
mov
repnz
pop
jns
fisubrl
std
pushf
or
lds
cmp
imull
mov
dec
ret
or
push
test
jl
es
jae
fsts
fs
test
movsb
and
outsb
lret
loope
cmp
inc
es
mov
mov
mov
fcmovnb
lahf
sbb
insb
lret
cmp
push
pop
mov
test
outsl
stc
pop
aas
ja
mov
std
mov
jo
jne
dec
mov
nop
jno
xor
push
shlb
inc
xor
imul
dec
inc
popa
push
mov
les
insl
clc
pop
sub
jno
mov
inc
movsl
and
xlat
out
and
lods
and
hlt
sarl
xor
inc
sbb
jne
dec
push
or
xchg
add
lahf
push
xor
jecxz
mov
sub
popf
pop
shl
jecxz
into
mov
sahf
xchg
pop
inc
test
dec
call
sbb
xchg
push
sub
dec
jnp
loope
mov
mov
xchg
pop
gs
jae
subl
mov
test
test
rorb
popw
adc
repz
add
int3
push
cltd
pop
fldl2e
std
loop
add
pop
pop
fs
and
fwait
dec
pop
in
mov
sahf
mov
inc
xor
add
insl
jp
in
adc
out
iret
lods
outsb
mov
outsl
pop
sti
xchg
jecxz
lods
sbb
mov
lds
xchg
jns
imulb
sub
fisttpll
icebp
dec
cli
pop
fs
js
xor
cltd
ljmp
flds
test
mov
mov
jb
cli
and
out
or
aas
push
add
popf
lret
subl
push
cmpb
in
clc
mov
jge
sub
push
push
std
cmp
mov
imul
in
push
or
xor
jae
daa
sub
cmpsb
mov
push
push
leave
inc
or
pop
xor
icebp
mov
add
in
xchg
loope
cmp
mov
cmp
dec
mov
inc
and
and
out
out
cmc
or
pushf
adc
outsb
std
jnp
mov
mov
mov
xchg
pop
xor
pop
or
dec
out
bound
out
loopne
loop
adc
and
mov
inc
push
jb
pop
or
pop
lea
sub
mov
xchg
sbb
xchg
stos
stc
call
inc
jnp
pop
scas
jg
lcall
sub
rclb
ret
sub
movsl
fdivs
std
mov
dec
mov
inc
aaa
inc
daa
adc
add
sub
mov
sbbl
cmpsl
mov
sbb
push
sub
test
jns
scas
xchg
vmovq
adc
inc
test
fwait
ss
imul
fdivrl
test
and
dec
jmp
test
dec
xor
mov
rcrb
mov
cmp
inc
push
dec
push
adc
push
dec
imul
xlat
dec
or
scas
iret
iret
aam
test
jle
adcb
stc
pop
or
add
daa
dec
or
push
adc
jne
pop
insb
fisubrl
inc
fwait
inc
xchg
sbb
and
xor
push
sbb
sar
loope
loope
xchg
push
mull
mulb
jp
icebp
pop
test
xlat
sub
sbb
xor
scas
cmpb
daa
mov
jne
filds
nop
lahf
addr16
pop
add
push
cld
push
inc
xchg
pusha
addr16
pop
xchg
scas
push
jns
xlat
xchg
call
stc
mov
push
push
sahf
jns
xchg
inc
cmp
xchg
sbbl
dec
jmp
rclb
push
cmp
push
add
in
lret
mov
out
test
test
inc
dec
sarb
push
jl
movsb
pop
out
mov
inc
jne
jg
push
lea
fs
negl
cmp
in
dec
mov
and
jmp
mov
lahf
adc
in
les
mov
push
mov
dec
sub
cmp
mov
push
ficompl
fwait
jg
and
cwtl
ficomps
push
and
mov
mov
imul
fsubrs
fisttps
lods
addl
cld
inc
mov
mov
cmp
jne
mov
mov
mov
xor
add
mov
mov
mov
xor
add
mov
movl
mov
mov
jmp
mov
sub
xor
mov
mov
mov
xor
mov
mov
xor
xor
xor
sub
sbb
add
adc
xor
mov
mov
xor
mov
mov
mov
mov
mov
cmp
je
jmp
and
and
lds
in
jnp
mov
sub
pop
and
jmp
inc
push
or
mov
jmp
mov
push
fcoml
pop
mov
mov
pusha
jp
psrlw
outsb
dec
sbb
and
loopne
incl
or
mov
es
and
in
ficompl
add
xchg
insb
push
push
aam
cmp
adc
jecxz
sti
shlb
cmp
push
lods
outsb
pop
push
nop
rorl
bound
sahf
cmp
iret
pop
movsl
stc
insb
out
xor
mov
ljmp
hlt
sbb
pop
mov
xor
push
mov
add
or
inc
bound
frstor
jne
adc
inc
leave
lods
mov
bound
pop
mov
ljmp
or
cmpsl
mov
jg
mov
push
pop
out
out
lds
std
cwtl
mov
cmpsl
fwait
jl
ss
test
bound
mov
inc
in
rcl
imul
jmp
inc
xchg
jecxz
push
dec
int3
cmpsl
and
mov
scas
and
mov
sbb
lods
pop
push
test
add
sub
std
jo
mov
dec
fdiv
cmpsl
xchg
lock
je
mov
addr16
mov
out
mov
push
xchg
push
shrl
aam
and
ljmp
dec
fucomi
loope
pop
test
mov
and
jmp
fadds
push
push
enter
xchg
jmp
mov
dec
sahf
cltd
and
lods
dec
adc
dec
mov
or
gs
aas
xlat
push
pop
jne
add
push
pop
mov
daa
mov
push
out
in
mov
lea
mov
or
lgs
mov
outsl
inc
imulb
aam
push
and
or
jp
ljmp
sub
out
or
sbb
enter
add
mov
fdivrp
out
rorl
pusha
fnstsw
mov
xchg
inc
outsl
in
pop
inc
outsl
movsl
mov
cmpsb
push
jg
cmp
mov
data16
test
mov
fisubrs
jb
push
es
nop
add
or
jae
rol
xlat
sbb
js
mov
lcall
imul
lret
dec
jmp
pusha
push
ds
int3
and
fcoms
mov
dec
rcll
push
adc
jle
jae
fcoml
call
andl
pop
and
inc
jg
add
and
sarl
add
cmp
inc
cmp
push
mov
xchg
sub
dec
xor
dec
out
fs
mov
mov
fbld
fidivrs
stos
inc
push
rcll
lcall
fsubl
shlb
push
decb
sbb
stos
pop
push
mov
mov
inc
jge
dec
push
nop
and
ret
aad
sub
xor
int
pop
mov
fistpll
pushf
int
dec
movl
rclb
imul
in
or
lahf
pop
and
add
jg
inc
and
imul
pop
pop
dec
pop
stos
jo
pop
mov
add
in
rorb
dec
mov
enter
push
ljmp
in
ret
push
mov
push
enter
inc
out
and
mov
decb
in
pop
movsb
jmp
stc
jg
jo
test
mov
sti
or
ja
mov
arpl
jmp
sti
shlb
add
push
push
lcall
jg
lods
jno
sub
insl
hlt
iret
rcr
mov
out
dec
xchg
cmc
sbb
arpl
clc
lret
mov
and
push
mov
cmc
cmc
lahf
fistl
push
loop
jg
adc
jae
xor
or
or
push
jae
sbbl
add
xor
in
and
fs
fimull
mov
pusha
decl
xchg
push
ds
fisubrs
adc
push
aam
xchg
out
aaa
imul
icebp
in
add
sbbl
insb
shrb
sti
mov
daa
jo
jl
sbb
inc
xchg
adc
lahf
cmc
clc
mov
push
pop
in
xor
test
int3
cmpsb
std
add
sti
xor
xlat
push
cmovae
incl
fbstp
mov
test
or
dec
jns
add
xchg
aad
xchg
push
xor
xchg
adc
add
je
pop
and
jl
and
shlb
jnp
je
add
ds
pop
fucomi
push
movsb
inc
in
jle
lahf
repz
fs
aad
or
outsb
imul
movsl
push
push
loope
pop
jmp
jl
xchg
xchg
repnz
xor
cmpl
dec
scas
cs
lret
adc
mov
out
mov
mov
mov
mov
fdivs
pop
mov
fidivs
addl
xlat
mov
cmpsl
aaa
cli
mov
push
xchg
je
ret
notb
add
jmp
dec
mov
popf
push
mov
mov
or
aam
adc
icebp
mov
push
mov
je
out
mov
or
mov
inc
dec
fcmovbe
iret
call
lds
pop
lcallw
sub
nop
push
std
push
push
imul
fmulp
mov
es
loopne
insl
lds
rcll
push
mov
lret
inc
aas
aad
outsl
cld
mov
pop
movsl
sub
jmp
movsl
shl
mov
mov
test
std
pop
stc
xchg
mov
and
in
cs
rorb
aas
lea
lds
mov
pop
push
mov
xor
push
pop
push
movsl
outsb
add
xchg
loop
pop
enter
pop
jge
pusha
out
cmp
mov
fwait
sbb
stos
imul
bound
pop
mov
jl
fwait
jg
and
mov
dec
mov
pop
pusha
stos
js
and
les
jb
movnti
push
ret
or
jno
cli
pusha
fistps
xchg
add
or
scas
push
adcb
push
xchg
pop
imul
cltd
loop
insb
pop
sbb
xlat
lock
xchg
dec
inc
adc
xchg
mov
mov
mov
fstp
mov
mov
xor
cli
in
jae
ljmp
cwtl
add
fistl
in
cli
stos
mov
xor
cld
lea
and
and
mov
data16
fists
dec
and
int3
and
lret
loope
fs
es
comiss
leave
data16
jnp
inc
push
xchg
dec
fdiv
test
out
jge
push
std
xor
inc
mov
sub
loop
sti
dec
cmc
mov
loope
cli
insl
adc
jg,pn
or
sahf
jbe
mov
adc
add
loop
inc
ss
cwtl
sub
xchg
insb
ds
xchg
push
shlb
sub
es
push
push
inc
inc
jnp
arpl
xorb
adc
cmp
fwait
pushf
scas
shll
test
sub
cmpb
push
or
jo
mov
push
push
adc
incl
insl
jmp
movsb
jae
push
mov
mov
inc
add
test
mov
inc
sub
xor
dec
push
or
jbe
cli
push
mov
dec
pop
push
push
jbe
pop
lds
sahf
cmpsl
out
jmp
data16
jbe
pop
pop
lock
insb
push
mov
movsb
sbb
mov
xor
xor
add
add
stos
iret
add
fisubrl
pusha
add
addr16
pusha
inc
cmp
pushf
pop
and
xlat
mov
pop
or
cwtl
cli
jb
xlat
sahf
sbb
or
test
aad
dec
adc
pushl
mov
jne
cli
pop
fidivs
cltd
jb
mov
adc
cmp
cmp
xchg
jmp
repnz
cmp
xor
cmpsb
dec
mov
jp
xchg
in
inc
andb
loope
shll
sbb
or
xor
xor
adc
sar
adc
mov
mov
mov
mov
mov
fcompl
mov
mov
jge
pop
cmp
int
popa
and
jnp
cwtl
or
pop
jb
pop
scas
enter
js
mov
add
mov
jbe
adc
dec
xor
ljmp
loopne
imul
mov
pop
mov
and
call
aam
pop
adc
xor
sub
xchg
dec
pop
push
stos
xchg
mov
push
callw
repnz
jecxz,pn
lret
mov
stos
test
fistl
pop
imul
ljmp
push
dec
ret
pop
lcall
jb
inc
fiaddl
mov
movsb
and
jge
jne
iret
in
mov
outsb
and
dec
inc
or
mov
leave
add
push
mov
lea
push
into
outsl
push
pop
xor
and
stos
mov
xchg
movsl
adc
mov
pop
pop
ret
xor
aaa
filds
stc
fmul
cmp
xchg
mov
mov
movsb
inc
test
mov
cmp
hlt
pop
add
adc
add
loopne
sub
inc
rol
or
sub
cmpsb
shrb
xor
enter
sbb
or
mov
push
xor
sbb
aaa
xor
adc
loopne
lret
pusha
jae
addr16
scas
mov
mull
test
mov
out
lds
add
loope
inc
jl
lret
rep
in
and
or
aas
jne
loope
loope
jecxz
and
test
inc
fsts
and
lds
push
ret
movsb
aad
dec
ss
inc
sbbl
add
pop
leave
outsb
push
mov
pop
ss
adc
xor
loope
cmc
inc
inc
cmp
dec
addr16
xor
rcll
cmpsl
dec
hlt
arpl
mov
dec
dec
ljmp
lret
repz
push
mov
cmp
cwtl
sbb
sub
mov
jmp
push
lea
imul
shl
add
leave
cld
int
sbb
add
repnz
js
frstor
xchg
pop
aas
cli
xchg
cmpsb
inc
and
push
or
cmp
mov
sub
jb
jl
push
dec
mov
sub
mov
in
adc
xor
pusha
ret
jge
notl
mov
xchg
mov
sti
mov
fcmovbe
jo
push
push
mov
add
out
mov
and
notb
mov
jle
loope
mov
push
sub
adc
daa
and
popl
sbb
sub
subl
repnz
push
dec
or
pop
lods
shll
push
sub
pop
mov
push
mov
mov
lret
cmp
cld
stc
mov
jnp
jne
lds
les
popa
outsl
and
in
jg
inc
fdiv
aas
sub
fidivl
mov
iret
dec
call
jmp
xchg
in
sbb
xchg
loope
popf
cmp
jmp
jmp
in
imul
cli
sub
data16
popa
out
mov
xchg
push
sub
jns
xchg
push
or
dec
mov
leave
sub
mov
lcall
xorb
add
fs
jg
and
mov
mov
into
pop
add
push
push
daa
lahf
ret
daa
cs
leave
mov
les
loop
out
sbb
xchg
call
xchg
loope
pop
xor
js
movsb
mov
mov
inc
call
inc
xor
mov
dec
pop
push
sub
pop
jp
mov
mov
jb
and
dec
pextrw
sbb
sti
es
dec
stc
ljmp
or
rorb
jg,pt
add
jbe
mov
xchg
mov
pop
inc
sub
insl
sbb
outsl
movsb
mov
dec
imul
cwtl
and
lods
insl
gs
jecxz
scas
ds
sti
cwtl
mov
jne
mov
inc
into
dec
psllq
in
icebp
rclb
mov
push
push
sub
js
sub
lcall
add
bound
test
fcompl
mov
mov
inc
jg
pushf
and
add
inc
dec
nop
aam
push
pop
mov
fs
xchg
test
jge
sbb
jb
xchg
push
mov
jb
sub
mov
ret
fmuls
mov
xor
mov
ret
lea
cli
dec
mov
ret
cmc
idivl
mov
in
out
lret
and
aaa
add
and
test
cmpsl
inc
in
jecxz
add
repnz
out
fstps
pop
adc
popa
fisttpll
or
push
hlt
and
sub
test
les
addl
mov
ds
bound
adc
iret
cwtl
loopne
push
cmp
in
mov
mov
aas
or
fwait
mov
mov
jb
enter
cmp
mov
aam
sbb
int
fwait
repnz
dec
mov
std
xchg
loop
int
add
shr
sti
fsubl
jmp
and
gs
ret
pop
sbbb
or
nop
pop
cmp
repz
icebp
adcl
cmpsb
popaw
cltd
test
cmpsl
nop
jmp
cmpsl
into
out
xchg
fs
push
jecxz
inc
fildl
mov
fisubrs
sub
cmp
sub
cli
les
sbb
outsb
mov
push
mov
cmp
xchg
sahf
add
push
sbb
jmp
xchg
add
ficomps
mov
xorb
push
out
fidivrl
aas
and
pop
nop
xor
sub
in
js
in
clc
movsb
enter
push
jg
push
mov
xchg
aaa
fwait
into
or
loope
dec
cmp
push
decb
mov
je
jns
scas
jl
xchg
xchg
mov
jns
jmp
and
mov
xchg
lods
or
pop
jp
mulb
pop
cmp
or
iret
mov
push
push
jp
dec
sti
push
repnz
into
aad
ds
cmp
loop
cwtl
and
add
jnp
ss
fs
enter
test
add
das
push
jl
loop
in
push
lret
xor
xor
dec
sbb
mov
data16
dec
mov
mov
xchg
daa
cmpsb
cmp
stc
jne
pop
iret
mov
or
sahf
sahf
call
xlat
or
inc
push
ljmp
sbb
dec
lods
aas
popa
dec
dec
dec
mov
xchg
xchg
imul
or
sub
movsb
loopne
jns
outsl
cmp
es
push
pop
pushf
pop
js
hlt
es
enter
xchg
lret
mov
frstor
jns
push
or
lcall
fnstcw
icebp
pop
cli
cmp
xlat
pop
sbb
test
mov
shlb
jo
mov
inc
xor
inc
or
popf
test
fistps
fs
pop
mov
and
lock
add
das
shl
outsb
fwait
imul
dec
cs
mov
add
adc
lahf
lret
das
push
fmul
xchg
mov
into
mov
test
adc
add
pop
dec
stos
and
and
sub
bsf
pop
test
xchg
fbstp
lods
jge
test
xor
adc
and
cmp
pop
jmp
push
ret
mov
scas
dec
das
mov
movsb
addb
jp
leave
jmp
aaa
or
and
fcompl
ja
sbb
stos
loopne
add
dec
pop
dec
mov
lods
sti
sbb
out
sbb
lods
or
sahf
repz
jbe
jnp
jecxz
jb
push
push
pop
xchg
pop
pop
mov
mov
cld
loop
in
lahf
nop
sbb
test
decl
mov
scas
je
lock
outsb
jmp
int3
mov
add
dec
mov
mov
andl
jno
popa
insl
fmul
or
sbb
jo
xchg
imul
xor
stc
adc
sbb
or
cmc
and
mov
fwait
xor
and
into
xchg
adc
cmp
ret
ret
pushf
cmp
sahf
inc
iret
jno
jnp
dec
inc
mov
inc
icebp
out
xor
loope
jae
gs
sub
xchg
push
test
loop
gs
push
andl
and
sub
nop
outsb
outsb
movsb
clc
std
adc
push
dec
inc
je
int
mov
xor
jg,pt
mov
cmp
push
xor
jo
negb
add
mov
pop
int3
pop
sub
mov
adc
dec
dec
cmpsl
test
xor
add
mov
lret
mov
jge
sub
mov
sub
cmp
fcmove
in
loope
popf
ljmp
mov
mov
jno
cltd
into
add
sarb
aaa
in
hlt
mov
hlt
or
or
push
mov
cmp
xchg
hlt
xchg
mov
into
lea
fdivrl
mov
aam
les
repnz
add
inc
outsb
xor
sbbb
mov
mov
pop
pop
adc
int
mov
cltd
lods
movsl
inc
dec
sub
adc
scas
int
popa
leave
insl
repnz
and
dec
icebp
in
or
lods
inc
lods
push
lds
sbb
inc
inc
insl
xorl
inc
adc
pusha
stos
arpl
cltd
imul
je
add
or
xchg
enter
ret
push
push
or
out
test
testb
loop
xchg
aad
test
mov
xchg
or
ja
das
add
ljmp
mov
std
and
inc
mov
ret
xchg
dec
adc
bound
push
bound
aaa
mov
xchg
loopne
jne
jecxz
in
inc
and
jne
orl
pop
jl
stc
addr16
dec
and
pop
out
mov
iret
rolb
daa
out
inc
jle
cmp
xchg
out
hlt
loope
hlt
fwait
xchg
pop
and
jbe
sub
jbe
enter
add
xor
dec
pop
xchg
or
add
xor
aaa
and
sub
cmpsb
jb
cmp
xchg
or
in
imul
les
xor
push
mov
je
repnz
js
and
roll
je
test
imul
cmp
jns
jp
cmp
sub
xchg
fs
xchg
and
insb
movl
dec
cmp
aas
xchg
sbb
js
daa
popa
mov
into
scas
pop
push
clc
shlb
nop
cmp
cs
pop
bound
mov
lea
xor
mov
pop
add
ret
ret
push
xor
or
in
fnstcw
lret
inc
dec
mov
pop
or
xchg
orb
lds
das
and
js
jg
in
mov
sarl
jle
jns
mov
jbe
xchg
or
pop
repz
xlat
jl
int
shll
xchg
sbb
sar
fcoml
mov
icebp
jno
hlt
out
inc
pushf
push
repnz
loopne
mov
cmp
push
shr
test
add
mov
jae
adc
lcall
and
fs
jg
out
jae
cs
aam
cmpsb
negl
int
adc
aas
mov
pop
jns
mov
jns
cmp
ja
pop
movsb
out
std
mov
dec
mov
nop
sbb
addr16
mov
out
stos
sti
lock
shl
dec
cmp
push
xchg
sub
fnstcw
lret
enter
cwtl
sbb
mov
push
mov
les
jb
mov
pop
hlt
in
lahf
sub
shl
arpl
sbb
pop
push
fcoms
xchg
les
pushf
aas
loope
push
xchg
mov
ss
adc
loope
jge
fiadds
inc
mov
mov
inc
negl
xchg
mov
xor
mov
aaa
pop
push
ret
mov
sub
and
xchg
mov
adc
dec
xor
stos
pusha
pop
sbb
popa
fldenv
pop
ljmp
cmp
inc
xchg
scas
and
sbb
xchg
popf
sub
nop
adc
xchg
pop
fsts
lahf
inc
mov
mov
mov
rorb
cmpsl
xor
mov
mov
mov
icebp
inc
inc
xchg
fldt
mov
mov
xchg
jecxz
xlat
pusha
insl
call
fdivr
gs
loope
jle
push
or
and
cmc
cmp
xor
aaa
repnz
loope
inc
in
cltd
inc
arpl
aaa
fistpl
sbb
ljmp
stos
inc
clc
or
adc
pop
lock
ret
aam
cmp
out
call
insl
scas
fstl
dec
mov
outsb
pop
push
ds
jo
mov
sub
addr16
in
ret
cmp
push
mov
mov
push
push
enter
jmp
pop
adc
ja
adc
mov
dec
inc
jbe
jmp
jb
mov
fsubs
fildll
xor
inc
push
mov
jp
and
xchg
push
call
dec
das
add
fmull
mov
dec
std
push
stc
jp
dec
mov
std
stos
and
enter
mov
movsb
mov
sub
js
dec
js
push
sub
mov
aaa
enter
lahf
fildll
xor
mov
imul
cmp
mov
pushf
or
sbb
and
iret
jecxz
add
add
jne
int3
sub
mov
dec
inc
andl
inc
daa
cmp
cmp
cmp
add
cmc
pop
lret
popa
aam
addr16
mov
add
add
jo
movsl
sbb
movsb
cwtl
aas
ljmp
add
cwtl
adc
sub
andb
je
je
repnz
iret
mov
dec
scas
xchg
xchg
aam
add
adc
ret
fistps
mov
test
icebp
xorl
add
push
adc
sbb
lcall
cmpsl
ret
mov
push
pxor
repnz
sbb
jg
ret
push
nop
repz
stos
lock
inc
bound
cltd
into
push
sbb
jmp
push
sub
and
mov
rcr
fwait
test
inc
pop
xchg
push
cwtl
jl
or
lcall
mov
call
mov
xor
dec
inc
dec
loopne
icebp
xchg
fisubrs
outsl
outsb
arpl
adc
xor
in
mov
scas
clc
add
into
mov
in
bound
sub
add
mov
xor
adc
and
xor
pop
lea
adc
and
xlat
out
daa
movsl
jno
sbb
mov
dec
fdivrs
pop
mov
insl
jbe
mov
into
inc
cmp
xchg
call
sub
aad
jl
test
inc
sahf
outsl
push
stc
pushf
xor
aam
ds
jbe
pop
into
xor
addl
or
rolb
out
sbb
imul
das
or
enter
mov
push
pop
je
cli
sbb
jb
push
mov
orl
hlt
xor
add
sti
mov
mov
popf
scas
cmp
or
ja
cwtl
push
and
test
mov
fldt
lock
lock
test
sbb
push
and
mov
shl
adc
add
push
das
les
mov
push
icebp
xchg
jb
push
inc
loopne
sbb
scas
in
cmp
lret
sbb
enter
mov
adc
mov
jno
and
ret
movsb
jl
das
mov
push
lcall
push
scas
lds
rorb
pop
add
js
mov
push
push
push
stos
and
das
js
cmpsb
sub
mov
leave
pop
test
mov
jge
test
fildl
cli
cmp
test
mov
leave
pop
out
jb
or
mov
in
mov
mov
push
hlt
ds
hlt
jns
cmc
aas
xchg
adc
inc
sub
sarl
pop
rcr
inc
push
inc
stos
cltd
mov
addr16
into
and
push
aad
ret
fdivs
nop
int
pop
and
push
sarb
add
insl
fistpll
in
jecxz
and
test
negb
aad
jnp
cmp
pop
jl
cmp
mov
fwait
aas
cmp
and
pop
adc
lods
stos
fs
xor
inc
movsl
cmp
sub
mov
xchg
add
imul
adc
lahf
ds
xor
ret
int3
push
fstps
sub
lret
add
jmp
lret
nop
mov
test
jecxz
xor
dec
pop
and
adc
in
in
mov
addb
inc
sarl
jp
cmc
xchg
inc
fcmovnb
in
mov
fldenv
pusha
adc
aas
ds
pop
inc
cwtl
insb
sbb
enter
outsl
fnstcw
mov
loopne
sti
pop
repz
cs
mov
or
dec
movsl
into
pop
jge
sub
cmp
int3
xor
sub
loopne
push
lahf
outsb
shl
sti
ljmp
xchg
shll
test
push
mov
icebp
xor
cmp
addb
inc
cltd
adcl
xchg
dec
xor
inc
push
fcmovnbe
xor
movsb
mov
and
dec
sbb
fwait
xchg
ret
sub
cwtl
pushf
pushf
divps
cltd
cwtl
es
pop
jle
mov
mov
rcl
add
ret
scas
hlt
adc
jp
js
mov
test
jne
inc
inc
inc
fldt
gs
sub
dec
mov
ret
shll
mov
imul
fwait
xchg
faddl
cmpsb
push
incb
ret
add
fisubrl
sub
sbb
fwait
or
cmp
mov
idiv
aam
and
insb
lret
outsb
gs
mov
inc
sbb
inc
mov
mov
mov
xchg
and
jl
cmpsb
sub
dec
pop
jbe
adc
sbb
mov
xchg
mov
pop
sub
lods
inc
pop
push
arpl
dec
dec
inc
mov
jae
fstl
jno
outsb
ret
mov
repz
xor
jbe
xlat
adc
idiv
ss
test
dec
sbb
jno
or
out
lods
jecxz
leave
jl
mov
lea
fucom
and
mov
pop
iret
out
das
mov
mov
sub
mov
add
jle
mov
push
nop
pop
jae
loopne
ds
out
loop
mov
mov
cmp
loope
inc
fisubrl
lods
mov
sbb
aam
arpl
adc
pop
sub
mov
cmc
ret
pop
adc
jb
adc
cmp
std
cld
sbb
push
or
pushf
test
test
or
js
fildll
int3
enter
jg
call
addr16
divl
inc
lcall
mov
stos
sub
push
out
and
les
dec
inc
arpl
ret
cmp
scas
jecxz
call
jnp
or
nop
pop
sbb
mov
lahf
lods
push
clc
loopne
push
xor
cmp
arpl
dec
sarb
inc
cmp
dec
in
xlat
cld
punpckhbw
mov
push
mov
lock
mov
data16
inc
add
adc
in
ds
mov
decl
xlat
fimuls
not
mov
inc
jl
daa
mov
cmp
cmp
stos
mov
pop
fistpll
shlb
lods
out
inc
cmpsb
xchg
ffreep
int3
jmp
fcomp
xchg
cmp
and
shlb
mov
cs
lea
jl
sub
aad
inc
das
mov
ja
aad
inc
ds
lds
in
out
adc
jno
push
jbe
inc
mov
sbbb
mov
xchg
data16
sub
cltd
test
in
popa
daa
lea
xor
std
daa
add
es
sbb
jle
bound
pop
add
mov
jno
in
cmp
test
fcomps
repz
jge
add
jnp
mov
adc
inc
fists
insl
push
xor
mov
xor
xchg
mov
sbb
pop
push
push
data16
clc
loop
pusha
cmpsb
mov
cli
aam
push
push
aas
mov
push
leave
jnp
inc
adc
sarl
inc
shrl
xchg
ja
aas
into
call
clc
pop
pop
sbbl
inc
les
testl
aad
aaa
ret
mov
dec
sbb
add
mov
jnp
and
jg
adc
jne
aaa
pusha
repz
out
es
sub
lock
pop
cmp
int3
arpl
xlat
ficompl
dec
cmp
mov
test
pop
stos
scas
jae
or
mov
cltd
sbb
add
xchg
mov
mov
pop
add
and
mov
jne
or
imul
stc
dec
pop
sub
mov
inc
and
mov
negb
mov
leave
mov
sbb
jns
or
fidivrs
daa
out
clc
jne
mov
fidivl
jmp
loopne
inc
push
shrb
cs
in
jecxz
clc
inc
mov
pop
pop
imulb
mov
push
push
cld
test
mov
clc
xchg
xor
jns
stos
fiadds
sbb
and
shrb
inc
enter
faddp
in
sarb
jnp
rcl
dec
aaa
xor
push
test
sub
out
or
push
adc
idivl
pop
xlat
in
insl
insb
add
jbe
test
inc
aas
dec
cltd
xchg
aas
test
insb
pop
test
ret
xchg
ret
out
xchg
repz
test
outsb
sub
les
inc
inc
mov
fcmovnu
and
popf
add
stos
test
xor
sbb
cli
stos
sbb
insl
ja
and
sub
stos
mov
dec
pop
add
sbb
cmc
sub
lds
pop
bound
out
fcmovnu
cmpl
pop
mov
repnz
into
cmp
sub
jmp
test
sub
sbb
sahf
in
jnp
jp
out
ret
and
add
xor
pop
fstpt
and
and
pause
gs
cwtl
rcl
loope
lea
mov
out
dec
jbe
dec
psrlq
sbb
shl
push
mov
sub
cmpsb
xor
shlb
add
repnz
sub
jecxz
sub
fwait
jno
adc
mov
xchg
data16
sbb
mov
mov
sub
add
sub
pop
mov
ss
lcall
jl
int3
cmp
enter
jp
int3
pushf
adc
jnp
xor
dec
or
mov
mov
mov
mov
xor
cmp
jne
mov
mov
mov
mov
xor
xor
add
cmp
je
mov
mov
mov
xor
lea
mov
mov
mov
xor
xor
add
adc
or
jne
mov
mov
xor
mov
add
mov
pop
pop
pop
leave
ret
mov
mov
ret
mov
jmp
ljmp
hlt
out
adc
sbb
mov
jnp
jg
xor
stc
mov
dec
or
arpl
in
cmp
adc
movd
xchg
mov
jb
repnz
or
mov
cmp
cmp
xlat
scas
cmpsb
push
mov
loop
stos
cmp
lret
adc
or
test
mov
or
scas
std
je
ret
lahf
jp
push
js
or
lds
ja
lahf
xchg
jnp
xchg
fsub
lea
inc
push
mov
insb
or
xchg
cmp
add
pop
jge
sbb
arpl
pop
fildll
jo
int
adc
pop
das
mov
pop
jmp
mov
mov
dec
jbe
inc
scas
push
cmp
sbb
adc
adcb
lret
pusha
enter
mov
pop
cmpsb
jg
push
jnp
jns
and
dec
xchg
mov
push
sub
push
fs
add
ja
mov
into
fabs
icebp
mov
insl
scas
dec
stc
mov
loope
mov
movl
mov
jle
adc
sub
jle
fwait
adc
movsl
std
push
jns
push
in
xor
dec
sub
and
or
mov
xor
paddsw
mov
cmpsb
mov
int
daa
shr
push
loop
mov
leave
fnstsw
ja
stos
cmpsb
idivb
cmp
aam
pop
inc
movsb
and
jne
ja
pop
cmp
or
mul
das
push
fsub
xlat
dec
add
cmp
mov
sbb
jae
inc
mov
dec
and
adc
lahf
test
lcall
push
icebp
xor
cmp
bound
std
idivb
cmpsl
push
xchg
jmp
cwtl
and
mov
push
insb
adc
inc
movsb
adc
cltd
test
arpl
stos
cmp
xlat
mov
jno
jae
jne
sbb
fld
ja
push
pop
push
dec
mov
xor
loope
fldl
cmp
inc
mov
fldcw
fdivrs
setl
sub
jmp
adcl
mov
add
jbe
sbb
sub
mov
pop
mov
jle
cmp
xchg
adc
aas
mov
stc
repnz
andl
and
cmp
jb
push
mov
ljmp
pop
or
cmp
dec
inc
pop
push
xor
scas
mov
pop
pusha
outsl
test
mov
mov
xor
xlat
in
loope
xor
sub
cmpsb
popa
enter
sahf
mov
xchg
ficompl
pop
sub
scas
push
xchg
push
dec
sub
sbb
mov
jle
nop
pop
loop
lcall
push
sti
jnp
dec
gs
fwait
mov
ljmp
test
sahf
cld
lea
inc
cmpsb
add
sbb
dec
stc
cmc
addr16
in
pop
bound
xchg
and
and
dec
bnd
xchg
inc
rol
pop
shl
pop
cld
or
ret
or
xchg
fwait
or
dec
pop
stos
stos
sbb
push
mov
inc
cli
fsts
add
adc
sbb
inc
fs
addr16
mov
and
xor
cmovo
add
pop
sbb
push
lret
dec
fildll
mov
out
mulb
cmpsl
jg
movsb
addl
je
into
pop
iret
fiadds
rcrb
incl
sbb
dec
jnp
je
mov
mov
cwtl
rcrl
pop
mov
add
mov
xor
cmc
std
ds
mov
jecxz
imul
jns
mov
push
shrl
jmp
jnp
ret
inc
and
xchg
xchg
pop
dec
cmp
push
fs
dec
dec
cwtl
sub
movsl
or
xchg
pop
lcall
stos
out
xchg
hlt
repz
popa
xchg
xchg
or
imulb
xor
mov
dec
add
jbe
jne
sub
push
jp
xor
mov
ds
cltd
sub
mov
sub
cmc
adc
mov
int
inc
xor
pop
xor
jge
inc
xchg
mov
outsl
into
mov
jmp
sub
sbb
mov
or
pop
adc
sti
cs
mov
lcall
pop
pop
or
stos
shll
jne
jne
dec
sbb
loope
sbb
jb
sbb
push
ret
pop
es
js
push
sbb
pop
inc
cltd
icebp
cltd
incb
xor
fdivr
pusha
lahf
andb
fwait
negl
xchg
fidivrs
inc
sbb
pop
gs
jle
shlb
xlat
xor
pop
xchg
jl
ret
sbb
cmp
loope
sbb
or
out
dec
jne
cmp
daa
cmpsb
in
mov
and
and
es
cmpsb
pop
gs
xchg
inc
int3
jmp
xchg
push
xchg
pop
bound
add
pop
pmulhuw
js
imul
mov
mov
jbe
es
ljmp
test
data16
mov
cmp
push
out
xor
shlb
popa
outsl
lahf
pop
dec
cltd
les
sbb
mov
adc
in
and
ret
mov
or
dec
lret
mov
add
xlat
in
and
cmc
je
and
mov
pop
sbb
lcall
inc
hlt
std
cld
lahf
sub
lret
shl
pop
push
jp
lods
push
jb
lret
ljmp
dec
icebp
into
mov
movsb
push
cmp
fstps
pop
int
xor
les
pop
stos
xchg
pushf
add
in
ljmp
pop
ret
lods
test
scas
add
loope
int3
out
aaa
add
ja
pop
adc
push
mov
pop
dec
repz
inc
sarl
aad
sbb
in
in
insl
insl
inc
push
out
maskmovq
idivl
lcall
out
ljmp
fildll
stc
xchg
push
push
andb
cmpsl
sub
fstpl
ficomps
adc
imul
jp
mov
stos
lret
xchg
jnp
adc
imul
xor
push
dec
outsb
hlt
outsl
sbb
sub
divl
pop
dec
jp
pop
push
dec
pop
sahf
mov
and
mov
stos
inc
inc
mov
mov
ficoms
xchg
pop
or
ljmp
cmp
es
out
stc
pop
arpl
movsb
sub
xchg
pop
xor
out
scas
mov
ljmp
dec
ds
ret
loopne
mov
int
cmc
cmp
dec
push
mov
in
cmp
test
cs
xor
jg
rcll
add
add
jp
pusha
test
aaa
jp
jg
cmp
adc
jl
sbb
daa
sub
cmp
or
arpl
hlt
xor
les
push
mov
or
aaa
divb
mov
cmc
xor
xchg
fisttpl
sub
xchg
push
cltd
mov
push
push
and
popa
pushl
leave
push
fsubl
js
push
call
dec
push
int
push
subb
les
lea
xor
idiv
sbb
jno
cli
and
push
leave
movsl
mov
dec
aas
jle
dec
xor
sub
out
rcrl
imul
or
and
xor
mov
sub
pop
adc
loopne
lods
sbb
scas
lahf
rorl
pop
adc
mov
inc
lahf
xchg
and
jmp
insb
std
inc
repz
frndint
cmp
xor
push
sti
push
sbb
xor
and
loopne
push
lea
sbb
jecxz
pop
ret
jns
sbb
jl
testb
pop
mov
push
ret
ja
cltd
mov
cmpsb
sub
dec
jae
cld
mov
xlat
add
xor
ret
imul
and
jl
mov
jg
adc
mov
lret
in
popf
push
mov
out
lea
ds
xor
fmuls
mov
orl
xor
ljmp
jle
mov
imul
ss
xchg
repz
push
adc
xchg
xchg
popa
inc
aad
jae
or
repz
addr16
jo
or
xchg
jg
or
jnp
das
jb
jmp
aam
and
mov
cld
mov
push
mov
push
test
in
dec
jbe
xchg
imul
pop
into
mov
roll
call
jge
inc
or
xchg
xor
mov
bound
imul
mov
adc
and
xlat
push
loopne
inc
jmp
or
inc
sti
push
cmp
xchg
xchg
cli
stos
jge
push
pop
into
mov
flds
scas
cmp
imul
stos
mov
ret
xor
in
shrl
ds
subb
adc
movsl
test
jg
jmp
pushf
cmp
test
jg
push
orb
xor
mov
inc
pusha
xor
shlb
dec
adc
int
sbb
pop
dec
ret
xlat
push
and
in
mov
mov
lods
mov
and
sbb
ss
cmp
mov
or
sbb
xchg
shlb
jno
jg
dec
or
ret
push
bound
andl
daa
or
jae
rcrb
mov
andl
cs
push
lret
lds
and
xchg
pop
sbb
sub
pop
rcrl
dec
js
push
jb
push
sub
mov
xor
mov
pop
jo
stc
outsb
xchg
repnz
sub
aam
or
dec
mov
jmp
pop
dec
adc
xchg
icebp
rorb
shl
fisubrs
nop
add
rorb
popf
fldcw
mov
jle
push
mov
pop
cmp
and
inc
adc
test
lcall
push
jne
cld
filds
pop
mov
sbb
push
push
inc
es
js
push
cmpsb
mov
jb
lahf
or
daa
push
adc
icebp
push
sbbb
pop
fstpl
rsm
fiadds
fstpl
jge
sub
out
push
or
push
dec
cmc
stos
jg
pop
pop
in
dec
xlat
fbld
push
or
cmp
aas
sub
inc
mov
xor
or
add
add
out
mov
mov
notl
jb
push
jb
xchg
enter
jl
push
cmp
lds
out
dec
lret
fsubrs
dec
adc
into
in
in
les
inc
imul
ljmp
stc
sbb
pop
out
xchg
xchg
popa
scas
pop
pop
inc
loope
cmp
adc
cmpl
repnz
in
shrl
pop
jecxz
cmp
xchg
push
movsl
int3
lcall
ds
inc
xor
mov
sub
hlt
fidivrs
stc
insl
cmp
mov
sbb
sahf
test
jnp
out
fisttpl
bnd
xchg
mov
jg
xchg
fldl
xchg
addr16
cmpsb
dec
inc
cmpsl
fmulp
pop
out
shlb
xor
loopne
lea
ds
lret
or
add
sub
sub
test
testb
fwait
hlt
jp
mov
jmp
movsb
outsl
enter
mov
push
test
int3
xlat
mov
cwtl
xor
sub
into
repnz
pop
push
cmp
xchg
idivb
pusha
leave
sub
xchg
cmp
adc
js
pop
pop
sub
cmp
jae
cmp
mov
ja
xchg
adc
cltd
or
loope
pmaddwd
inc
sti
dec
lods
movsl
loope
mov
sbb
lods
adc
rorb
xor
adc
clc
sahf
ja
test
cmp
pop
push
push
daa
pusha
les
js
pop
adcb
mov
xchg
fcompl
push
dec
dec
push
shl
push
jmp
xor
cmpsl
mov
ss
fisubrl
lds
jge
out
inc
mov
sbb
xchg
mov
mov
jg
mov
and
pusha
lahf
jbe
sbb
xorl
arpl
push
push
das
movsl
dec
mov
movb
jne
add
ds
adcl
add
dec
xor
xlat
test
mov
mulb
xchg
inc
loop
cmp
test
in
mov
imul
jb
jmp
insb
enter
shr
inc
pop
hlt
jmp
xor
fisubrl
lret
or
aas
and
fcoms
or
xchg
push
popf
cmc
fstpl
dec
mov
dec
dec
adc
je
lcall
hlt
mov
and
xchg
inc
adc
es
mov
push
jmp
scas
lods
xchg
push
dec
loopne
mov
outsl
shlb
negl
dec
in
mov
lret
mov
clc
push
mov
aam
pop
adc
pop
call
data16
stc
pop
mull
icebp
inc
nop
repnz
sbb
dec
or
sbb
cmc
or
addl
jmp
fidivl
or
mov
sub
xor
add
mov
idivl
mov
lahf
mov
popf
xor
mov
dec
je
movsb
mov
popa
pushf
leave
mov
and
mov
add
adc
inc
int
lods
adc
enter
xor
sti
jb
mov
test
pop
or
mov
scas
test
test
shll
pop
xlat
inc
loop
je
dec
jne
mov
popf
subb
scas
mov
ret
add
pop
pushf
sub
add
xor
sbb
cs
mov
push
xchg
jmp
xchg
or
mov
movsb
call
mov
leave
push
in
dec
cmp
inc
inc
mov
xchg
fiaddl
or
pop
fsubl
add
cmpsb
gs
dec
ret
test
pusha
pop
cmp
into
xchg
mov
repz
or
inc
add
jp
inc
movl
jae
cs
cmpsl
mov
aam
or
pop
cmp
xchg
jl
mov
into
aas
mov
stos
push
cmp
mov
xor
inc
inc
add
cmp
and
push
dec
dec
push
inc
fbld
mov
test
lock
adc
enter
stos
add
cmp
adc
push
xor
jbe
jo
mov
adc
in
in
test
mov
out
outsl
xchg
inc
mov
mov
or
pop
out
xchg
out
adc
sub
scas
testl
mov
sahf
and
je
xor
rorl
lret
and
cmp
incl
cwtl
mov
aaa
ret
dec
mov
repz
or
daa
mov
les
pop
cmp
mov
scas
dec
scas
test
fld
arpl
lods
mov
dec
jle
out
test
mov
pop
enter
inc
out
cmp
pop
xchg
xchg
or
mov
scas
enter
jmp
push
dec
movsb
push
rep
movsl
fcmovu
idivl
out
ds
and
mov
js
sarl
repnz
pop
inc
jecxz
pop
add
inc
subb
pop
push
jo
push
fidivl
adc
lock
mov
mov
aad
mov
cmp
bound
lcall
jl
mov
mov
sub
test
push
mov
into
push
lock
ss
fdivl
hlt
add
push
mov
ds
mov
repnz
into
std
xchg
or
rcrb
mov
or
outsl
xor
xchg
in
popf
inc
mov
pushf
je
mov
hlt
fldt
mov
mov
xor
fidivrl
mov
or
jle
jne
lret
or
fisubrs
mov
idivb
fdivr
sub
mov
xchg
push
mov
pop
lret
inc
mov
popa
xor
mov
and
pop
test
fldenv
lahf
push
xor
or
rorl
lock
jb
fwait
insb
outsb
dec
decl
push
imul
imul
push
mov
adc
xchg
hlt
mov
cmpl
push
sahf
mov
out
lock
outsl
js
js
imul
push
cmp
mov
push
adc
inc
jne
jnp
sbb
loope
je
repz
shrb
dec
das
jle
out
stc
js
insb
inc
mov
inc
xor
imul
mov
dec
fldl
mov
sub
pop
mov
mov
xchg
mov
pop
push
mov
fnsave
and
lea
or
inc
out
cmpsl
or
mov
enter
pop
jmp
stos
iret
in
add
je
push
and
jecxz
sti
mov
adc
mov
add
das
in
outsb
jbe
cs
mov
sub
dec
add
ret
iret
jb
fisubs
cmp
xchg
mov
lds
insb
hlt
xor
sub
test
clc
out
add
inc
cld
sub
loope
ret
sbb
sub
vmwrite
or
fcomps
adc
test
test
mov
add
add
dec
xchg
add
xchg
cli
sahf
shrd
mov
stos
mov
je
outsl
xchg
pushf
sub
inc
mov
mov
cmpsl
mov
or
cmp
pusha
loopne
pop
sbb
xchg
xchg
sbb
insl
loopne
out
add
xchg
imul
xchg
mov
mov
push
push
xchg
xchg
sti
cmp
and
jmp
into
mov
push
mov
inc
pop
test
lock
jne
push
dec
mov
dec
xor
sarl
repnz
imul
xchg
jb
hlt
popf
mov
cmp
and
xor
push
add
xor
stc
dec
and
in
dec
push
inc
fwait
cmp
jmp
repz
inc
inc
mov
push
test
mov
out
jnp
inc
lds
leave
cwtl
int
xchg
jno
leave
adc
xor
cltd
xor
mov
cmp
iret
fs
jle
add
sbb
ja
jne
lcall
enter
xchg
ja
sbb
lret
sti
shlb
push
xchg
clc
sub
and
add
sbb
pop
imul
shrl
aam
xchg
pop
int3
sub
leave
lds
cmp
cmc
jae
mov
xor
fwait
xchg
je
mov
aas
mov
enter
mov
or
call
sub
out
xchg
daa
fs
cmp
into
je
sbb
lret
je
out
xchg
testb
pop
mov
and
dec
inc
xor
cmp
or
out
mov
mov
xor
outsl
pop
dec
lock
jne
sbb
push
andb
mov
int
jne
cli
sbb
cmp
pop
out
aaa
pop
lds
frstor
pop
add
cmp
fs
out
imulb
mov
adc
inc
jg
pusha
dec
repnz
sti
jge
add
jno
mov
mov
push
lods
fpatan
xchg
ja
or
and
mov
dec
dec
gs
gs
and
decb
add
fnstsw
push
sbb
pop
lret
and
pushf
sbb
les
push
das
in
mov
push
mov
pop
cmp
push
jns
test
in
sub
jne
testb
xor
int3
call
fnstcw
in
cmp
shll
sarb
lret
sbb
out
cmp
mov
ror
adc
or
outsl
loopne
push
mov
aas
jnp
sbb
cmp
push
gs
jbe
lahf
fidivrl
and
dec
xchg
dec
xlat
popf
or
fs
jge
int
pop
jecxz
pop
xlat
mov
test
adc
inc
incb
jb
xchg
cmc
mov
inc
hlt
out
xchg
int
xor
mov
mov
dec
add
jl
adc
push
cmc
lcall
out
fxch
ds
fmull
pop
int
pop
and
jmp
dec
inc
xchg
mov
inc
dec
aad
js
sub
lods
push
add
or
in
xchg
adc
imul
mov
data16
cld
pop
aaa
push
jbe
rcrl
mov
aam
jp
into
clc
sub
ficomps
adc
mov
loopne
push
loopne
sahf
in
repz
xchg
dec
jle
push
mov
in
pop
das
sbb
pushf
movsl
jge
insl
repz
popf
stos
fiadds
cmp
scas
jecxz
dec
fistps
icebp
jne
ja
mov
imul
dec
xchg
fisubs
push
inc
rcl
and
and
dec
out
fmuls
loopne
fs
int3
and
aas
push
adc
shrb
jno
mov
mov
stc
add
inc
xchg
push
ja
mov
add
in
jno
scas
sub
and
sub
cmp
popa
or
or
cmp
es
clc
cmp
dec
mov
jo
jecxz
test
movsl
icebp
sub
je
cli
jl
rolb
scas
mov
push
push
push
mov
and
dec
movsl
jl
clc
dec
and
dec
xor
dec
hlt
adc
inc
pop
cmp
mov
add
sbb
pop
cmp
mov
push
imul
pop
pop
mov
insl
cli
out
scas
fsub
pop
nop
and
data16
mov
testl
inc
mov
scas
cmp
popl
pop
enter
jae
cmpsl
or
stos
fmull
pop
movsb
mov
testb
sbb
out
movl
inc
pop
std
loopne
jnp
mov
pusha
and
push
fs
insb
xchg
fildll
mov
es
push
dec
mov
and
xlat
adc
sub
shl
inc
or
adc
mov
movsl
xor
out
xchg
popf
lock
int
mov
aaa
cltd
mov
cmpsl
addr16
dec
xchg
dec
ret
mov
pop
or
sub
lods
cmp
sub
pop
jle
push
xorl
fcomi
lea
loope
xlat
testl
test
inc
stos
test
push
je
mov
mov
pop
ret
data16
mov
out
fildl
subb
gs
mov
leave
xor
cltd
adc
movl
pop
pop
shrl
shl
cmp
pop
ret
fstl
in
cld
mov
jnp
cmpsl
aas
pop
in
addb
xor
ret
or
jo
andl
mov
sarl
rcrb
or
cwtl
subb
xchg
movsb
dec
fsubl
jnp
mov
mov
test
in
push
or
roll
mov
mov
popa
mov
add
ffreep
icebp
xchg
pop
mov
mov
js
stos
cltd
out
mov
adc
xor
inc
insb
add
mov
adcl
jnp
add
and
jmp
mov
mov
call
adc
jno
aad
sarb
or
xchg
and
mov
dec
push
push
sub
lods
lds
pop
nop
lahf
jmp
mov
cmp
sub
ficoms
test
test
push
mov
mov
mov
dec
outsb
cmpsb
jae
inc
adc
dec
xchg
xchg
xor
ss
push
data16
mov
mov
fbld
or
int3
dec
call
clc
mov
mov
pop
movsl
out
push
push
ja
add
xchg
cli
and
iret
lahf
push
lea
xor
sub
call
insl
push
inc
jmp
mov
idiv
divl
pop
icebp
jg
push
sahf
in
push
lahf
pop
in
stos
push
push
mov
lock
and
add
lret
jecxz
mov
enter
enter
pop
cmc
andb
mov
pop
es
sbb
es
xor
xchg
scas
dec
jg
mov
fdiv
pop
jb
js
adc
popa
js
int3
mov
je
xor
jle
adc
inc
out
sbb
push
xor
sub
ja
jo
mov
jg
addb
sbb
enter
mov
into
sti
fidivl
lea
jecxz
lret
dec
push
mov
aad
hlt
leave
push
dec
pop
or
shrl
lock
xchg
lods
dec
add
std
neg
push
mov
add
cmp
lock
jle
out
in
sbbb
mov
popa
mov
push
xchg
inc
shrb
push
imul
test
outsl
mov
xchg
fcompl
lods
mov
out
sub
stos
loop
inc
xchg
cwtl
lcall
cmp
out
loope
xor
sbb
js
pop
data16
pop
inc
scas
push
dec
test
dec
add
iret
cmpsl
add
aas
inc
sub
rorb
ret
test
pop
pop
int
sub
popa
inc
push
aam
arpl
fnsave
xchg
clc
push
sar
pusha
xor
filds
dec
adc
sub
sub
or
push
inc
iret
push
sub
and
mov
xlat
xor
repz
addr16
enter
inc
cmp
aas
lds
pop
call
or
inc
lahf
ret
push
in
out
lods
jb
addl
movsb
jg
jecxz
or
and
data16
sar
adc
add
call
jae
fwait
out
mov
and
cmp
mov
repz
mov
adc
xchg
mov
sbb
push
push
popa
and
daa
arpl
std
add
out
ja
ss
and
inc
pop
mov
push
mov
insl
push
insb
mov
pop
jmp
test
and
aas
xor
popf
and
dec
das
shlb
mov
mov
mov
ds
rolb
adc
ret
aaa
arpl
xchg
sti
xor
xor
mov
int3
pushf
sti
lock
popf
add
shll
nop
push
pop
pop
push
scas
inc
and
sarb
andl
mov
push
pop
xchg
xchg
mull
pop
pop
sahf
jae
jo
aam
lods
cmp
out
inc
push
in
addr16
sarb
and
sub
cmpsl
and
mov
jl
fisttps
repnz
hlt
ror
jp
add
fdivs
lea
xchg
int
xchg
xchg
jmp
adc
dec
enter
dec
mov
inc
pop
inc
leave
testl
xchg
fistpl
movsl
stos
jb
icebp
shlb
in
shll
mov
jg
xor
pop
jge
mov
ret
inc
scas
xor
mov
mov
scas
sub
insb
sahf
jno
test
hlt
lahf
xchg
push
cmp
jns
sub
enter
jb
push
out
dec
xor
cmpsb
jge
adc
sarl
clc
imul
inc
push
add
mov
das
push
mov
cld
in
dec
test
mov
test
out
test
movsb
sbb
jns
insb
or
shlb
cld
ret
mov
cmp
cs
adc
xor
dec
mov
fcmovne
jg
dec
cmp
loopne
scas
loop
xchg
inc
int
cmpsb
sub
data16
subl
sub
mov
or
sub
xchg
adc
in
jbe
push
imul
roll
fisubrl
mov
jo
mov
xchg
xor
int3
fildll
xchg
cmpsb
repnz
pop
shrb
fwait
js
xchg
push
cmpsl
mov
and
out
in
mov
rol
dec
push
iret
add
aaa
inc
mov
sub
xchg
adc
gs
jnp
test
or
iret
popf
cmc
jne,pn
xor
add
push
ds
sbb
mov
mov
xchg
jo
int3
pop
ds
les
cmpsb
add
cmp
xchg
dec
ds
mov
mov
push
mov
pop
and
gs
jmp
test
outsb
sbb
loopne
out
push
add
and
aad
sbbl
inc
nop
in
jae
test
or
lcall
fiadds
mov
jg
scas
lods
subl
icebp
lods
inc
mov
sbb
or
cmp
or
xorl
in
pop
jnp
enter
adcb
out
cmp
adc
pop
mov
je
gs
mov
jae
int3
lds
mov
test
rcll
idivb
xor
mov
xchg
loopne
lcall
sub
jno
loopne
mov
scas
cmp
imul
repz
jnp
repz
mov
mov
pop
dec
add
div
push
outsl
jnp
push
in
ret
std
cmp
push
jae
cli
cmp
scas
add
push
xchg
not
adc
dec
inc
nop
scas
daa
rorl
and
push
hlt
sub
mov
sub
dec
push
icebp
aam
adcb
outsb
xchg
cs
mov
adc
fbld
mov
inc
ljmp
lds
movb
mov
into
and
shlb
bound
dec
xorl
jno
int
cmpsl
jne
jle
jnp
and
js
pop
dec
lret
lods
popf
mov
shll
mov
aaa
test
pop
and
cs
push
stc
jp
jmp
xor
sbb
and
push
mov
cmp
sarl
ret
cmp
mov
inc
xor
popa
sub
add
xchg
inc
fidivl
cs
out
je
mov
pop
cmpsb
fiaddl
lret
xlat
mov
cmp
xchg
xchg
loopne
pop
pop
jae
scas
dec
sar
sub
mov
ret
mov
or
xchg
shlb
jge
push
test
mov
pop
pop
adc
loop
pop
xchg
shr
and
fisubs
push
sub
das
mov
jo
bound
loope
mov
ss
repz
cs
loope
mov
and
cmpl
roll
repnz
stos
js
sti
pop
jge
scas
or
add
and
push
cld
jl
call
push
stos
dec
ret
sbbb
or
cmp
lds
jne
ss
push
sahf
push
hlt
push
imul
insb
mov
dec
and
push
or
jns
inc
mov
sub
dec
test
lea
or
adc
pop
mov
enter
mov
lret
orb
push
mov
jl
xor
aas
cld
out
pop
jecxz
jno
clc
pop
stos
mulb
aas
scas
jo
inc
xor
insb
pop
subb
cmp
lahf
jecxz
jp
jmp
in
cmp
lret
inc
loopne
pop
movsl
ljmp
in
push
cmpsl
mov
xchg
mov
or
jne
das
xor
movsl
jle
imul
push
mov
mov
fs
orl
nop
xor
sti
sti
inc
xchg
mov
inc
xchg
lds
mov
ret
push
mov
sub
xor
push
mov
mov
sub
add
movl
movl
cmpl
je
cmpl
jle
jmp
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
mov
or
movl
push
sub
mov
negl
mov
sbbl
xor
push
mov
add
mov
mov
adc
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jle
jmp
push
call
jmp
mov
xor
xorl
mov
andl
mov
inc
mov
cmpl
jge
jmp
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
movl
cmpl
je
cmpl
ja
jmp
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
mov
add
mov
xor
movl
mov
movl
cmp
jne
mov
cmp
je
mov
mov
cmp
je
mov
mov
mov
andl
mov
xor
add
add
mov
mov
adc
xor
mov
mov
andl
xor
mov
mov
add
jmp
xchg
popa
in
jne
jbe
in
sbb
cld
adc
ss
mov
jnp
scas
cwtl
jnp
jo
dec
int
bound
jnp
sbb
xchg
sbb
fdivrs
jge
jle
hlt
and
fdivrs
leave
cmp
jp
lahf
clc
fchs
into
lahf
push
or
repz
into
or
lret
cmp
fwait
mov
pop
iret
gs
leave
popf
int3
loopne
mov
rcl
xchg
pusha
mov
mov
xchg
fistpl
xor
sbb
xchg
push
xor
sbb
mov
xchg
inc
not
nop
mov
das
push
xor
dec
hlt
sub
mov
loop
or
jl
pop
cmpsl
ret
xor
and
test
movsb
lahf
shrl
out
dec
test
lods
lahf
jmp
inc
xchg
imul
mov
repnz
sub
jg
push
dec
mov
fmulp
xchg
repnz
mov
das
cwtl
stos
rorb
push
clc
aas
dec
scas
cs
inc
cld
inc
cmp
std
xchg
sti
sbb
aad
stc
gs
cmp
dec
cmp
or
nop
out
adc
popf
pop
cwtl
xchg
xlat
jg
sbb
cmp
mov
fisubrs
insb
sbb
in
lcall
loop
pop
fidivs
push
daa
jge
es
xchg
pop
hlt
test
cmp
push
insb
cmp
adc
test
rcr
rol
loope
push
push
test
insl
rcrb
or
xchg
inc
shrb
fwait
rcrl
inc
shrl
push
movsb
or
pop
jle
data16
cmc
fs
xor
stos
mov
leave
ficoml
mov
in
repz
xchg
add
rcrb
icebp
bound
push
push
jp
cmpsl
push
push
imul
sbb
sub
je
mov
mov
cltd
inc
adc
ror
xor
scas
sbb
insb
jbe
call
mov
out
cmp
aad
adc
into
icebp
dec
int3
into
inc
stos
sub
fnsave
push
push
loopne
or
sub
pop
movsl
push
mov
mov
ja
scas
add
add
mov
arpl
cmp
adc
push
jae
mov
sti
xor
dec
or
in
inc
aad
sub
push
icebp
jne
andb
cmp
xchg
je
and
mov
and
scas
sbb
call
lcall
fwait
shll
lea
shlb
dec
push
jns
out
fistps
push
lods
fcompl
andl
aam
int3
jle
loopne
sub
lods
shrb
jne
adc
ljmp
pop
loopne
and
inc
out
push
inc
sbb
loop
popf
popa
out
xor
mov
dec
test
sub
loope
xor
lahf
mov
out
popf
xor
clc
call
ljmp
enter
xchg
mov
lahf
inc
pop
test
pusha
in
fstps
divl
testb
inc
cmpsb
or
ss
inc
lds
jp
dec
mov
decl
mov
and
dec
leave
mov
shll
mov
lods
xchg
push
xchg
mov
cmp
and
lahf
xchg
outsl
jns
mov
dec
test
ds
add
fdivr
mov
adc
mov
lds
sbb
pop
nop
addr16
mov
xchg
out
jecxz
xor
frstor
jge
dec
mov
je
pop
insb
int
insb
fwait
arpl
jp
icebp
sbbb
out
aaa
cmp
fcomps
mov
out
incb
pop
adc
pop
or
mov
mov
movsb
std
push
cld
dec
test
or
mov
loop
sub
cmp
loope
outsb
xchg
and
nop
inc
adc
dec
insb
dec
inc
pop
leave
adc
cs
inc
insl
icebp
int
dec
mov
mov
jmp
jnp
jbe
stos
insb
ja
xchg
mov
iret
push
rorb
mov
add
jb
push
jecxz
mov
xor
test
push
call
sub
call
inc
sbb
adc
rcll
add
pop
push
sub
or
jnp
int3
mov
mov
in
out
out
mov
jno
mov
loop
jb
insb
sbb
add
repnz
and
sub
mov
add
pop
add
test
sti
mov
dec
lds
pop
call
jnp
mov
cmpsl
or
mov
sub
cli
jb
pop
leave
fsubl
adc
pusha
popf
sub
sub
stc
xchg
xchg
and
mov
adc
sub
fcoms
cmp
adc
mov
loope
sti
push
lods
enter
gs
js
cmp
hlt
dec
mov
cmp
jp
je
and
jecxz
jg
aad
mov
sahf
push
scas
pop
insl
hlt
xor
clc
aam
lds
pop
shr
inc
dec
loopne
fcos
xor
into
or
cmp
test
mov
add
xor
jle
cmpsl
add
jno
mov
cmpsl
jo
or
sub
push
test
addr16
and
hlt
out
and
push
xor
pop
in
into
inc
mov
xchg
jle
cmp
adc
insb
add
xchg
add
jno
lock
movsb
stos
stos
adc
cmp
cli
push
lods
and
mov
pushf
test
jo
push
dec
fwait
and
arpl
in
sbb
xor
fs
xchg
adc
test
push
jge
mov
xor
aam
addr16
imul
scas
int
mov
clc
aam
push
and
negl
fiadds
xor
mov
cwtl
jo
push
jbe
aad
lock
aas
xchg
mov
lcall
int3
mov
push
mov
xchg
lret
dec
andb
adc
lods
mov
test
jmp
mov
aam
stos
nop
push
add
in
mulb
dec
adc
xchg
mov
mov
aas
call
outsl
push
mov
xorb
inc
cli
fistps
lods
mov
popa
mov
je
aas
test
imul
gs
mov
push
pop
jg
mov
sbb
js
xlat
daa
inc
fwait
pop
cmp
daa
cmc
fdivs
jbe
addl
inc
pushf
cltd
loope
xchg
xchg
loopne
fsts
out
push
ficomps
sbb
in
dec
lret
cmp
push
aam
cld
out
jge
test
std
andb
shlb
and
mov
js
inc
cs
test
mov
cmp
mov
movsb
mov
dec
cs
or
ja
jmp
inc
mov
bound
test
and
jmp
scas
jne
stc
mov
shll
push
push
movsl
ljmp
mov
inc
cs
das
rcr
shll
cmp
dec
jg
mov
xchg
jno
xor
hlt
mov
lods
jge
fwait
xor
loope
add
fistpll
mov
mov
aas
adc
or
or
mov
jne
int
and
pop
adc
sbb
loop
rcrl
pop
xlat
push
mov
jge
dec
ret
push
lahf
sub
sub
es
cs
pop
mov
dec
dec
and
or
pop
ds
mov
addr16
clc
fnsave
ja
es
mov
push
icebp
xor
mov
mov
fwait
pop
mov
mov
repz
push
notl
xchg
jp
pop
pop
pop
rorb
pop
ret
cld
inc
and
xor
jmp
movsb
mov
loopne
ds
mov
jp
push
out
jecxz
lock
sub
movsb
loop
and
call
sbb
cmp
fcmovnbe
cltd
jns
stc
and
fistl
mov
mov
mov
cmp
fsubp
leave
negb
mov
test
cmp
das
sub
pop
gs
js
orl
push
out
mov
lret
jnp
push
je
out
sub
lcall
mov
inc
ja
js
ljmp
aam
push
lock
mov
test
mov
or
and
pop
jmp
lea
push
lcall
xchg
dec
aad
in
inc
xchg
call
ret
and
cmpsl
jg
es
push
lods
gs
gs
stc
mov
out
mov
out
cs
mov
ja
fwait
arpl
ret
cmp
xchg
outsl
dec
push
xor
inc
jp
mov
mov
lcall
mov
call
push
jge
shr
jmp
mov
cwtl
gs
push
icebp
dec
push
jne
or
pusha
mov
out
and
xor
test
jle
push
xchg
sarb
push
test
loop
mov
rclb
mov
xor
pop
clc
lock
mov
imul
movsb
lock
pop
sub
pop
xchg
lock
frstor
sub
ret
cmpl
push
adc
sarl
sub
outsl
jb
hlt
outsl
pop
fstps
xchg
sbb
jl
dec
lret
out
xchg
fcomip
sub
adc
push
iret
lods
fs
jae
pushl
jp
push
cld
pop
lds
xor
cmp
inc
cld
lock
fisubl
aaa
cmp
imul
mov
leave
sbb
arpl
aam
mov
orb
mov
mov
es
xchg
in
jle
push
inc
ret
sbb
popl
sbb
ja
dec
pop
fwait
and
xchg
add
scas
mov
call
stos
pop
jnp
notb
xchg
push
add
cld
jbe
push
call
xor
dec
pop
push
lods
sbb
jp
sub
xor
ss
adc
aas
xor
imul
mov
cmp
loopne,pt
xor
stos
cmpsl
jnp
in
xchg
daa
iret
lds
movsb
xor
cmp
adc
cmp
sbb
jge
or
push
lock
jb
out
movsl
imul
xor
mov
xchg
jmp
out
repnz
mov
ficompl
js
pop
sub
jb
adc
mov
sbbb
xor
inc
gs
add
adc
in
mov
movsb
imul
mov
pop
aaa
push
sub
outsl
mov
imul
dec
lret
pop
or
xor
xchg
xchg
loop
je
push
inc
int
or
bound
jns
dec
jge,pn
jp
xor
mov
adc
imul
dec
sub
sbb
leave
mov
shrb
cmp
scas
enter
lds
and
fdivl
cmpsb
push
shlb
lods
dec
cltd
pop
mov
ret
fadd
jns
fwait
stos
pushf
jmp
repnz
das
scas
cmp
movl
and
jo
lahf
insl
in
ljmp
dec
inc
inc
mov
aas
lret
out
lret
inc
pop
jecxz
push
pop
mov
sub
push
out
jns
jae
ret
bound
addr16
shr
sub
xor
xor
les
pusha
add
call
dec
lret
sub
lcall
adcl
xchg
cmp
sbb
sbbl
fdivs
imul
fmulp
sarl
lods
scas
stos
cmp
cld
sbb
ficoml
mov
div
std
or
les
sub
fldcw
xchg
add
jno
pushf
rcrl
adc
jge
inc
lcall
sbb
push
int3
scas
sub
sub
pop
outsb
data16
mov
push
test
adc
stos
push
dec
in
push
cmp
mov
inc
adcb
rcrl
loopne
cmp
jns
idivb
test
xchg
push
sbb
push
lret
hlt
inc
dec
add
out
mov
sbb
jns
push
loope
addb
and
out
xchg
cmp
push
rcll
pop
jbe
insb
add
jb
repnz
dec
or
add
rcll
mov
adc
hlt
or
stos
push
sub
and
test
lret
cmpsb
movsl
sub
mov
adc
add
mov
cmp
cmc
push
jmp
repnz
xchg
adc
subb
mov
mov
idivl
cmp
adc
sbb
jle
and
push
push
gs
ss
or
push
pop
sub
ljmp
mov
push
xchg
popa
pusha
push
lret
add
push
mov
mov
mov
nop
test
xchg
xor
aaa
pop
call
mov
mov
mov
sbb
sbb
mov
aas
jb
mov
scas
bound
xchg
leave
rorl
adc
std
push
daa
arpl
mov
sarl
jbe
sbb
push
sub
xor
mov
push
mov
xor
lcall
jmp
movb
sbb
divb
sbb
cmpb
mov
jb
mov
xchg
in
sbb
gs
push
and
adc
add
in
pusha
mov
xlat
ljmp
loope
jge
sar
enter
in
test
sti
mov
ds
xor
aam
es
push
inc
in
test
movhps
adc
into
sahf
ficomps
mov
insl
cmpsl
cmp
or
mov
sub
push
cmpsl
out
inc
loop
or
rcl
pop
sbb
xor
bound
pop
mov
or
mov
pop
mov
or
in
mov
int
mov
aaa
iret
fdivrl
imul
mov
cmpl
data16
mov
cmp
inc
pop
stos
jbe
pop
aad
lods
js
mov
pop
sub
sub
sbb
nop
call
sub
xchg
rolb
lods
int3
mov
ja
arpl
fwait
gs
in
das
push
addl
ret
jbe
mov
aas
and
std
fiadds
cmp
sub
aaa
pop
pushf
dec
adc
mov
insb
leave
mov
ret
stc
inc
mov
sbb
jnp
dec
pop
lock
call
xchg
and
in
or
imul
fs
xchg
imul
xchg
sbb
dec
fistl
xchg
sub
add
cmp
ret
gs
rcll
xor
lea
adc
jb
and
cmp
inc
negl
in
mov
adc
ror
xor
cmc
pop
mov
xor
pop
hlt
testl
add
xchg
test
ret
lcall
fs
popf
and
in
add
fisubs
cmp
or
jp
dec
xchg
stos
pop
faddl
sbb
mov
mov
push
jge
cmp
jns
push
leave
addl
dec
in
jne
jl
imul
out
dec
iret
or
rcll
stos
in
xor
xchg
xchg
femms
stos
jge
add
xor
dec
push
repnz
push
push
xchg
into
jecxz
mov
xor
popf
int3
lods
add
dec
adc
mov
mov
scas
push
pop
out
inc
xor
out
mov
sub
fdivr
stos
and
fistps
push
mov
nop
mov
out
cmpsb
int
negl
ss
mov
ret
out
mov
xor
sub
pop
jno
mov
or
cld
push
cmc
jb
pop
mov
enter
jne
pop
sub
int
push
cmp
xchg
out
adc
dec
push
dec
sarb
push
adc
or
add
test
cmp
cmp
stc
aad
pop
push
xor
inc
orl
inc
ja
add
cwtl
repz
imul
jne
lock
adcl
rcrl
or
sti
sub
aas
cld
adc
mov
add
inc
shl
loope
lock
stos
scas
cmp
xchg
cmpsb
les
test
inc
cld
cwtl
fmulp
pop
ljmp
aad
aam
aas
push
inc
stos
test
std
mov
daa
pop
inc
rcll
or
dec
mov
aas
push
add
outsb
cmpl
in
scas
mov
shlb
dec
mov
daa
iret
lods
xchg
sub
leave
lret
fdivs
in
lds
pushf
ret
faddl
popa
test
push
jne
stos
push
dec
loopne
bound
mov
in
js
pop
push
test
pop
arpl
sub
jge
loope
inc
mov
mov
les
push
shl
push
mov
fwait
push
rcrb
fidivrs
pop
call
jae
test
sub
je
xchg
and
decb
jecxz
push
add
rcrl
ret
je
out
push
add
xor
cmp
fldz
dec
cld
mov
or
inc
cli
cmp
cmc
pusha
lods
test
or
sbb
mov
and
xor
xchg
inc
mov
cli
xorl
or
pop
push
add
push
xor
shlb
pushf
pop
in
push
fsubrl
or
pop
andl
js
pop
jmp
stos
mov
mov
dec
movsb
stos
push
mov
in
aad
dec
sub
inc
mov
pop
movsl
loope
xor
xchg
movsl
sub
fdivp
mul
jl
dec
push
loop
rolb
mov
cli
cmp
adc
xchg
iret
bound
cmpsl
pop
movsl
imul
and
leave
loop
insb
jmp
insl
sub
jne
pop
mov
subb
xor
ja
popf
fucomp
loop
mov
xor
pop
jle
fistpl
pop
mov
test
orl
jno
cmp
xchg
lea
cmp
mov
in
xor
push
cs
aaa
cmc
adc
sarl
xchg
pop
cmpl
in
stos
and
adc
addr16
push
not
push
push
cmp
div
dec
enter
roll
mov
mov
clc
adc
lods
pusha
and
ret
cltd
mov
add
mov
lcall
dec
dec
into
inc
shlb
das
cmp
mov
inc
aad
xchg
xchg
mov
mov
pop
fbld
insb
int
sub
test
inc
bound
stc
test
test
xor
cs
ret
mov
mov
icebp
jecxz
jne
jmp
cmpsl
jno
cmp
xor
pop
xchg
adc
inc
cwtl
loope
dec
lock
packuswb
push
xchg
test
push
imul
inc
sbb
mov
mov
test
sbb
outsb
dec
cmpl
or
add
dec
cmp
cmp
fcomp
scas
sbb
jne
lahf
gs
push
or
mov
or
imul
pop
shrb
leave
mov
sbb
dec
scas
xchg
ljmp
icebp
dec
outsl
xchg
daa
sti
mov
push
leave
pop
pop
adc
ret
aaa
shlb
out
pushf
or
clc
adc
js
jnp
pop
lret
inc
pop
cmp
lods
les
xchg
ror
xchg
jle
adc
les
jmp
pushf
cmp
mov
icebp
fidivs
lods
mov
sbb
mov
and
mov
fstpt
mov
pop
je
dec
imul
add
jg
mov
test
aas
mov
adc
and
and
xchg
cs
ret
stos
or
sahf
int
test
aam
jae
rol
jp
lods
pop
mov
jae
in
mov
cmp
int3
cmp
ljmp
shrb
psrld
mov
sbb
inc
enter
xchg
testl
dec
cmp
rcrl
aas
mov
adc
sahf
inc
push
lds
mov
or
adcb
shl
and
lds
mov
fs
js
je
xor
cltd
mov
daa
pop
sbb
adcb
lods
faddl
cli
mov
push
pusha
sub
sbb
mov
pop
cmc
es
test
pop
jmp
ret
rcrl
or
call
out
sbb
adc
jle
gs
repnz
out
fisubl
loop
xor
call
xchg
jbe
sub
inc
xchg
cmp
les
shrl
inc
adc
lock
push
nop
mov
push
je
outsb
mov
pop
repnz
sub
outsl
mov
pushf
nop
pop
pop
sti
scas
in
shlb
xor
pusha
flds
xchg
mov
imul
adc
fldcw
or
mov
scas
or
mov
cmc
adc
jns
repnz
pop
mov
xor
adc
pop
pop
fstpt
lods
mov
insl
les
sub
scas
fsts
push
push
push
pop
mov
sti
sub
mov
sbbb
cmp
js
adc
sbb
iret
and
sub
es
fimull
test
cli
push
iret
sbb
inc
aaa
lret
sub
pop
test
add
sbb
pop
jno
jno
test
pushl
repz
push
fs
push
pop
lods
inc
hlt
sbb
cmp
push
adcb
dec
adc
and
cmpsb
push
call
dec
popf
jecxz
insl
mov
cmp
jecxz
or
and
stc
sbb
push
pop
jb
les
adc
mov
cmp
sbb
xchg
dec
sub
and
orb
adc
mov
shlb
scas
xchg
jp
inc
inc
shl
sahf
shr
mov
cmp
ja
push
xchg
clc
fwait
test
pop
mov
pop
pop
nop
les
inc
rorb
leave
jmp
pop
mov
mov
and
aas
mov
scas
dec
gs
cmc
jmp
mov
mov
subl
or
popa
push
cmp
jge
mov
out
lods
sbb
in
xchg
add
sbb
sub
xor
dec
mov
insl
into
adc
adc
push
push
lahf
mov
fsubp
into
aam
cmp
xor
ret
jl
sti
jmp
or
mov
cs
push
cmp
sub
sar
je
test
mov
lret
repnz
es
pop
xchg
jge
aam
popa
fstpt
inc
lock
stos
ret
dec
sbb
mov
push
pushaw
stos
and
lret
pop
push
mov
cli
or
out
inc
fisubl
jl
sub
in
movsb
cwtl
pop
stos
movsb
and
pop
pop
stos
or
mov
enter
xor
cmp
ficomps
rolb
out
es
sahf
push
test
out
imul
fsubrp
ds
mov
fadds
xor
mov
dec
sub
pop
stc
shll
mov
cwtl
cmc
pop
popa
mov
mov
ljmp
add
pusha
sub
int
push
mov
lcall
inc
test
and
sbb
nop
push
test
popf
adc
in
mov
sub
int
pop
rorb
dec
or
bound
xor
pop
loop
mov
and
sub
ret
xchg
enter
adc
sub
push
inc
add
and
jns
ljmp
and
mov
imul
rclb
in
sbb
test
mov
cli
shl
loop
mov
fcmovnbe
scas
in
mov
xlat
jno
xchg
mov
push
mov
mov
cmc
lods
inc
cli
jns
inc
sbb
pop
push
mov
mov
test
push
xor
xor
adc
xchg
mov
xor
jmp
mov
push
xor
mov
in
bound
cmp
inc
or
in
xchg
ss
loope
sub
push
sar
push
cld
jb
cmpsl
push
jno
inc
les
mov
outsb
es
int
add
add
mov
insl
cmp
xchg
insl
pop
int
dec
xor
mov
pop
inc
cmp
negl
mov
jmp
fistl
clc
lret
mov
lret
cltd
jl
jbe
sub
mov
stc
mov
xchg
mov
push
insb
insb
lds
pusha
adc
mov
movsb
outsl
das
test
out
adc
inc
out
lret
dec
out
inc
add
sbb
or
cmpsl
jns
ret
lods
fldenv
jp
add
inc
dec
dec
sbb
and
iret
movsl
fadds
leave
lock
jae
mov
xlat
fmuls
or
jno
inc
adc
push
xor
mov
mov
faddl
pusha
mov
cwtl
das
decb
mov
or
cmp
cli
pop
cmovae
es
call
xor
jns
imul
jle
push
lret
mov
aaa
jmp
lods
outsl
movl
pop
ss
js
mov
xchg
or
into
pop
into
add
pop
lret
jecxz
push
jg
cld
into
in
mov
icebp
out
pop
and
scas
aad
data16
rcll
dec
mov
cmpsl
shrl
xlat
mov
or
shll
sub
icebp
arpl
popl
fcmovnu
call
push
enter
or
hlt
lods
in
mov
test
jae
fisttps
and
loope
sub
dec
sbb
ret
inc
inc
or
mov
jge
mov
sbb
or
jno
icebp
mov
xchg
mov
cltd
sub
popl
add
testl
pop
push
pop
push
cli
lds
cmpsl
mov
add
or
inc
clc
imul
push
in
push
nop
inc
sahf
pop
mov
dec
xor
dec
push
daa
inc
aad
inc
adc
iret
pop
fs
push
fisubl
and
lods
xor
sbb
mov
or
cmp
cmp
xchg
cmp
mov
ljmp
jg
or
dec
fadd
divb
pop
mov
add
sub
sbb
stos
cwtl
adc
mov
in
shll
mov
xlat
pop
adc
pcmpeqd
notb
pop
dec
adc
dec
pop
out
cld
test
sbb
mov
jno
out
bound
add
mov
sbb
call
mov
mov
sub
mov
mov
ret
sbb
out
hlt
cmp
scas
xlat
jne
xchg
pop
mov
inc
divb
mov
pop
lret
xlat
cmp
repnz
in
push
inc
arpl
adc
inc
mov
jae
xor
stos
popa
test
call
mov
inc
jnp
adc
dec
std
fwait
adc
and
add
mov
mov
movsl
mov
cmp
jmp
fsts
sub
fnstsw
pop
mov
loopne
repz
movd
int3
mov
cmpsb
fcom
insb
fsubs
loope
jo
gs
jmp
dec
add
std
jnp
movsl
jno
mov
xor
push
pop
mov
enter
adc
push
movsl
push
popa
dec
leave
sub
mov
fbld
mov
mov
outsl
daa
adc
inc
in
test
and
xor
call
xor
mov
fwait
int
jb
adc
addr16
adc
inc
ds
lcall
scas
dec
sub
or
movsl
xlat
push
addl
xor
loop
mov
ds
in
or
xlat
fmuls
pmulhw
dec
jns
test
stos
into
push
and
and
or
jge
pop
imul
sub
xchg
jg
movsl
lcall
lret
js
pop
fcomps
insl
lods
and
dec
mov
dec
test
dec
jp
mov
mov
mov
loopne
push
cmp
sub
arpl
movsb
add
rcrb
xor
sub
data16
ljmp
mov
out
push
and
stc
adc
xchg
lret
inc
inc
pop
and
inc
sbb
dec
jb
mov
xchg
jb
and
movb
or
pop
fcoms
push
cmp
sarb
outsb
loopne
movsb
sub
arpl
inc
add
sbb
jb
das
repz
jno
push
cs
popa
sahf
push
inc
adcl
int
into
cmp
dec
shlb
ds
mov
xlat
sbb
adc
insl
stos
and
mov
inc
pusha
dec
cmpsb
lods
imul
xchg
loop
inc
mov
or
cld
inc
jg
fldt
push
int3
mov
sub
xor
add
pop
orl
dec
popf
push
push
xchg
adc
and
dec
jae
in
lods
inc
divb
test
int3
movsb
cld
loopne
sahf
mov
into
dec
fwait
into
dec
dec
stos
and
or
out
out
pop
lock
xchg
push
std
sahf
jge
mov
jl
pop
cmp
sbb
and
outsl
xlat
stos
jecxz
push
ljmp
xor
jb
cmc
xchg
cs
mov
and
stc
xor
push
jns
mov
mov
jae
scas
fs
stos
xchg
dec
jl
int3
or
lcall
aaa
cmp
scas
pop
xchg
mov
mov
stos
cli
mov
lock
xor
pushf
fldcw
out
sub
jo
stos
jae
jnp
mov
push
xor
sahf
jecxz
addr16
mov
adc
and
clc
les
xchg
mov
loop
mov
add
int3
loopne
mov
mov
adcb
insl
cmpsb
pop
cmp
in
jp
adc
and
ljmp
xor
rcrl
fmul
push
xor
into
jb
daa
pop
int
es
fdivs
mov
pusha
test
leave
stos
dec
sub
mov
push
mov
jle
dec
movsl
pop
jbe
jg
outsl
movsb
insb
or
subl
jnp
mov
out
mov
pop
data16
mov
outsb
int3
mov
aaa
mov
mov
and
stc
ss
inc
mov
ljmp
sub
ret
jbe
mov
jae
pop
rclb
and
add
inc
outsb
mov
adc
enter
pop
in
mov
inc
cmp
fmull
sti
lcall
aas
dec
icebp
inc
bound
xchg
sbb
cmp
dec
scas
repz
lods
repz
out
fstl
push
ja
push
rorl
cmpsl
mov
sub
mov
test
adc
cmp
push
cmp
enterw
testl
cs
add
mov
jae
inc
je
cmpsb
daa
pop
mov
out
outsl
repnz
jno
ds
push
inc
std
cli
or
adc
jmp
jmp
add
adc
jb
mov
int
sub
push
jnp
scas
cwtl
jnp
xchg
and
mov
neg
lds
mov
cmc
dec
lock
and
inc
jns
push
dec
mov
ror
mov
inc
jecxz
mov
xchg
rcrb
repnz
addr16
jb
mov
dec
ret
cltd
aaa
jle
movsb
stc
addr16
idiv
jbe
imul
ljmp
jno
aaa
push
and
mov
jne
ljmp
jo
ja
mov
loop
das
loope
push
pop
dec
shrb
mov
dec
roll
jge
js
nop
and
ror
push
xchg
lahf
adc
cmpsl
fmul
push
mov
call
fwait
ja
mov
cmp
push
xchg
cmc
dec
mov
out
pop
stos
es
sbb
sub
sub
mov
jle
js
mov
add
jmp
sub
fisubrl
xchg
pop
rcrb
faddp
add
inc
call
icebp
jge
add
sub
imull
loope
push
adc
xor
leave
ljmp
int
movsl
add
cli
ja
das
pop
ss
es
sarl
mov
jo
sbb
nop
inc
pop
and
jae
mov
mov
std
sbbl
test
fwait
mov
pop
lea
ljmp
out
jp
push
cmp
xchg
jle
iret
adc
or
adc
or
ljmp
pop
sbb
out
sbb
cmp
inc
fisttps
and
mov
and
inc
jge
or
push
or
mov
shl
sub
enter
jp
cmp
pop
ret
or
sbb
movd
mov
add
push
cmp
lods
dec
or
cs
in
pusha
mov
ljmp
cs
pop
mov
adc
mov
cmp
int3
pushf
fcoml
aaa
xchg
cmp
sub
cmp
out
cmp
sbb
xchg
std
push
ficomps
pop
mov
pushf
repz
int
mov
rolb
mov
lods
cmp
lahf
sti
imul
and
leave
call
call
push
mov
pop
pusha
lea
xchg
sub
mov
mov
nop
in
ja
jg
daa
push
mov
push
sarl
xchg
pop
sbb
lcall
xchg
jae
adc
cmpsb
pop
rcl
lahf
push
or
mov
mov
pmulhw
sbb
sahf
std
repz
xor
mov
push
cmp
sbb
loop
mov
test
cmp
mov
lock
adc
fnstcw
imull
push
pusha
xchg
jl
and
sub
jecxz
xchg
bound
aas
mov
xlat
ljmp
stc
out
icebp
cs
into
pop
scas
fsubp
sub
addr16
xor
out
aam
xor
push
inc
dec
and
push
mov
pop
mov
dec
xchg
xchg
test
out
dec
lcall
add
lret
sbb
pop
loop
cmpsl
mov
movsb
and
sub
or
pop
push
pop
cmp
notl
xchg
aad
mov
dec
dec
or
fistpll
jne
aam
jae
cmpsl
es
dec
andl
sub
sbb
jg
mov
add
iret
insb
push
lcall
adc
mov
lret
ss
rcrl
cmpsl
push
jo
daa
dec
and
add
mov
and
das
js
or
mov
add
jae
ds
test
push
inc
jl
jg
setbe
or
add
or
das
dec
dec
cmc
push
inc
dec
mov
int3
sub
fdivs
mov
jl
dec
sub
pusha
sub
lds
rcr
sub
es
mov
sub
mov
jg
out
vmulpd
imul
les
aad
and
sbb
cmp
xor
jge
pushf
test
jp
mov
out
daa
sarl
sbb
xor
xchg
gs
add
bound
fistl
cmpsb
ss
jno
repz
jp
pop
mov
out
in
cltd
sbb
or
paddsb
inc
mov
aaa
jo
jo
bound
loopne
add
outsb
or
cmp
inc
shr
or
bound
bound
add
loopne
loop
iret
out
jb
and
push
jno
pop
push
lret
push
add
and
mov
in
mov
jge
inc
ret
push
arpl
imul
jne
push
scas
test
jp
mov
mov
imul
out
inc
clc
mov
popa
clc
mov
sub
mov
roll
xchg
adc
fwait
stc
xchg
repz
adc
stos
mov
movsb
add
nop
lods
jnp
movsl
mov
fistl
xlat
or
fisttpll
adc
adc
jmp
pushw
lret
cmp
dec
push
sbb
js
inc
inc
sbb
fsubp
dec
or
jb
les
test
das
mov
cmpsl
insb
push
push
xchg
dec
sub
jns
rcrb
cmp
nop
into
cld
push
int
xchg
lcall
movsb
sub
xor
insl
movsl
in
jne
mov
sub
test
jg
enter
test
xor
xchg
sub
jp
pop
daa
flds
cmp
inc
je
pop
out
mov
sbb
push
mov
mov
ficoml
cltd
push
popf
mov
and
sub
jg
xor
pop
mov
mov
sbb
push
mov
mov
scas
xchg
lock
add
mov
mov
stos
mov
mov
inc
jo
loopne
lcall
mov
sbb
lret
data16
sub
mov
rolb
xor
push
lds
push
popa
cmpl
jo
arpl
dec
test
nop
sti
mov
faddl
insb
rclb
out
jl
je
xchg
xchg
iret
jge
sbb
icebp
test
dec
sbb
pop
adc
mov
sbb
int
cmc
mov
aam
jp
sub
fsubrl
and
mov
lcall
in
xor
repnz
in
mov
test
inc
mov
aam
outsb
into
push
cmp
repnz
pop
push
lret
jne
cmp
shl
pop
repz
out
jg
sti
cs
adc
sahf
jae
idivl
jmp
aam
data16
into
and
andl
shrb
das
fs
repnz
mov
jne
jne
int3
mov
sub
xchg
push
mov
les
pop
test
cmp
lods
loope
mov
xchg
inc
lcall
mov
stos
cmp
insb
aaa
push
sub
push
cmpsl
pop
pop
mov
inc
mov
xchg
cwtl
mov
add
popf
inc
jecxz
js
or
je
out
pop
jmp
scas
inc
je
xor
xor
dec
pop
and
movsb
xchg
cli
push
mov
inc
insl
add
and
roll
fdivr
shl
push
add
sbbl
pop
stos
ficomps
repz
loope
and
jns
dec
push
cmp
mov
xchg
jmp
push
scas
das
repnz
ss
xchg
rclb
inc
loopne
mov
stos
mov
and
in
mov
call
pop
jae
jno
lea
dec
pop
mov
nop
aad
xchg
jbe
rcll
insb
mov
out
pop
bound
cmpb
jg
pop
imul
push
fisttpll
ficoms
mov
jmp
ja
and
sbb
jns
and
inc
xchg
push
sbb
or
jp
leave
push
push
std
test
ficomps
push
or
pop
sbb
stos
js
pushf
jno
push
pop
mov
leave
push
test
push
jo
bound
jl
jmp
movsl
sub
inc
add
jge
std
xor
push
cmp
xchg
cmp
adc
inc
xlat
test
dec
jmp
push
inc
cmp
stos
and
mov
dec
les
and
lods
lock
dec
xlat
fcomip
outsl
inc
addl
std
add
mov
or
mov
cwtl
push
sub
je
out
imul
insb
pusha
mov
push
adc
movsb
cs
cmpsl
imul
mov
adc
mov
call
add
in
std
jp
flds
adc
movsb
dec
mov
adc
lret
pop
int3
loopne
std
mov
lret
mov
movsl
inc
daa
fsincos
sbb
cmp
sub
lods
hlt
nop
xor
and
sub
test
sbb
jnp
dec
out
adc
xchg
ja
std
add
xor
loop
cmp
mov
pop
and
inc
rcrb
xor
inc
ret
mov
cltd
cmp
notb
outsl
sbb
outsb
scas
xor
jle
add
push
dec
faddl
xchg
xchg
test
mov
scas
xor
push
ret
jge
dec
sahf
cmp
jbe
ret
mov
cmp
mov
inc
push
das
and
arpl
pop
ljmp
in
dec
sbbl
add
pushf
cmp
lcall
inc
pusha
fdivl
les
imul
push
fs
decl
popf
dec
in
test
or
fmull
mov
imul
mov
and
cwtl
out
xchg
dec
adc
adc
mov
sub
jge
in
adc
adc
inc
iret
jle
dec
push
push
xchg
popa
dec
jnp
inc
outsl
mov
stos
push
into
lea
and
push
movsb
xchg
popf
btl
cmpsb
lret
push
stos
xchg
cmpsb
int3
or
aas
aas
pop
add
mov
or
sub
jmp
push
and
mov
add
pop
adc
lahf
dec
scas
sbb
or
xor
dec
stc
mov
cwtl
adc
or
fnstcw
ds
shlb
jno
loope
fisttps
add
cmpsb
jg
cmpsl
mov
push
mov
jae
push
pop
ret
outsl
inc
dec
lea
lret
push
mov
push
hlt
and
mov
mull
jno
iret
adc
fcmovb
mov
sub
mov
sub
jg
xor
mov
jns
xchg
lea
jo
loopne
in
sahf
mov
adc
pop
add
nop
in
pop
nop
jo
ss
popf
stos
cmp
out
xchg
add
or
addb
test
hlt
cltd
in
fsubs
jge
inc
or
mov
loope
pop
xchg
sub
testb
fdivr
ss
call
cmp
pop
ret
jmp
outsb
mov
dec
adc
cmp
lds
cmp
xchg
or
cmp
cld
and
sub
imull
mov
pop
push
or
sub
nop
sub
mov
enter
sub
not
imul
jns
lock
xchg
xchg
cmp
fdivrl
jnp
push
mov
mov
sbb
testl
sub
jg
and
push
out
jmp
inc
mov
jp
lock
xor
ja
or
loopne
mov
fptan
mov
loopne
sbb
inc
or
stos
test
mov
sbb
or
mov
popf
dec
xchg
fidivrl
pop
iret
pop
push
jbe
sbb
add
adc
and
dec
pop
adc
jl
stc
das
jg
into
popl
adc
adc
das
and
arpl
pusha
or
pop
pop
push
add
add
fcoml
cwtl
fnstenv
sbb
cmp
scas
aas
mov
int
enter
loopne
movsb
clc
and
out
jbe
out
das
inc
jl
bound
shl
lods
dec
jg
lret
mov
inc
or
inc
add
inc
pop
cmpsb
je
dec
adc
fdivs
in
aad
iret
insl
stos
mov
sti
test
movsb
sub
rcrl
push
ja
dec
pushf
insl
jae
dec
inc
dec
mov
mov
sbbb
clc
add
ficomps
int3
push
adc
pop
sti
out
scas
out
push
lret
or
fwait
dec
aaa
stc
sbb
sbb
xor
cmpsb
addb
lcall
movsl
inc
repz
cmp
sbb
mov
push
jnp
pop
xorb
sbb
xchg
loope
je
cli
sub
xchg
xorb
out
adc
test
lret
loop
mov
sarb
dec
fbld
cli
pop
mov
mov
ret
shlb
mov
adc
xor
in
sub
es
mov
jmp
mov
popa
or
sbb
repz
test
inc
mov
sbb
out
sbb
call
mov
jae
cmp
adc
insb
jo
jl
adc
std
and
sti
fcompl
pushf
testl
ret
movsl
test
jo
inc
pop
pushf
and
push
mov
pop
mov
ss
cmp
fistps
test
xor
add
stc
mov
jecxz
cmp
pop
adc
xchg
out
mov
xor
sbbl
push
sub
je
lea
jae
test
cli
bound
lahf
cmpsl
inc
iret
daa
xor
or
or
stos
rcr
xor
and
dec
subb
push
and
stos
mov
in
repz
sub
xor
xchg
xor
mov
mov
mov
xor
roll
xchg
jnp
push
pop
movsb
loopne
mov
stos
cwtl
and
scas
scas
mov
push
dec
and
push
or
push
push
mov
sbb
pop
add
imul
lock
jno
inc
sub
xchg
repz
mov
or
lock
cmc
add
cwtl
push
add
das
jge
sub
push
mov
xor
aaa
pop
fdivrs
push
pop
xchg
in
data16
inc
inc
das
sbb
int3
mov
mov
jecxz
or
mov
int
out
std
mov
movsb
ds
pop
pop
hlt
nop
sub
or
ret
iret
fs
and
mov
fcmovnbe
inc
rcrb
nop
js
mov
es
push
sti
icebp
lcall
lahf
fldcw
in
dec
dec
in
xlat
aas
imul
pop
mov
sub
vpsubsw
xchg
std
daa
push
test
add
push
clc
mov
mov
sti
sti
and
into
mov
add
cmp
loop
mov
xor
cmc
ret
jmp
pop
ljmp
bound
sub
cli
addb
cli
mov
inc
mov
and
cmp
test
xlat
fs
mov
sub
sub
mov
xchg
mov
es
cli
xchg
mov
mov
push
push
push
and
stos
js
arpl
lods
repnz
xchg
and
or
mov
stos
push
inc
and
fcmovnu
fildl
sub
sbb
insb
inc
sub
test
lock
sub
xor
xchg
ja
pop
ret
lods
data16
ja
es
or
dec
pop
sbb
pop
mov
adc
loop
add
xchg
pop
push
xorl
xchg
int3
leave
in
or
int3
out
jl
ret
popf
mov
sbb
bound
mov
cltd
nop
jo
mov
aam
mov
insl
jb
lock
sbb
dec
and
and
add
andb
adcb
mov
sbb
test
dec
mov
arpl
jae
mov
insl
jmp
jb
ljmp
dec
ss
aad
test
jae
xchg
in
ds
outsl
popf
mov
or
cmpsl
push
sti
pop
cmp
xchg
imul
lahf
mov
or
mov
xchg
pop
mov
mov
test
shrb
xchg
into
dec
push
fstps
dec
sbb
sbb
mov
mov
and
sbb
xchg
test
or
int3
or
pop
inc
out
sub
adc
imul
das
jle
xor
repnz
in
enter
xor
cmpsl
movsl
push
shl
repz
in
cmc
or
sbb
mov
mov
out
adc
mov
adc
cwtl
mov
enter
ljmp
mov
and
inc
lcall
push
sbb
mov
movsb
add
add
inc
add
insb
aaa
fstl
mov
call
insl
shr
ficomps
arpl
sarl
out
jecxz
ljmp
aas
dec
xchg
ficoml
scas
inc
push
xchg
in
mov
add
aam
shlb
push
out
cmp
iret
inc
adc
gs
subb
std
push
ficoms
bswap
sub
xor
jno
pushf
popa
sbb
faddl
repz
pop
stc
shl
iret
jecxz
lds
pop
push
mov
push
dec
popf
xchg
mov
rclb
jne
mov
jge
cs
lock
insl
ss
xor
outsb
pushf
sti
icebp
stos
lret
in
imul
sub
xchg
jno
cltd
mov
das
cmp
sbb
sti
jle
xor
xor
mov
push
sbb
adc
pop
ja
jo
fld
fdivs
fimull
xchg
jae
and
jecxz
shll
inc
mov
add
sbb
enter
adc
push
inc
or
ja
das
push
rclb
pop
mov
imul
shll
outsb
add
adc
sbb
lds
mov
cmp
or
stos
fs
imul
fistl
lret
cmp
mov
fcomi
inc
push
ljmp
or
fwait
mov
rolb
sub
push
int
xchg
and
push
movsb
cmpsb
bound
and
add
insl
jne
fwait
cmpsl
mov
cmp
adcb
xchg
cmpsb
inc
xor
xchg
cmc
subl
jge
lret
fstl
xchg
repz
loop
loopne
lods
dec
cvtps2pd
cmp
cltd
stos
lahf
and
fnstsw
lds
bound
sub
xchg
and
inc
scas
loop
mov
loope
mov
push
into
hlt
pop
push
sub
and
repnz
mov
ja
xorb
pop
push
sbbb
dec
cs
int3
dec
xchg
mov
sahf
cmpb
sbb
ja
fadds
push
xor
cmp
ljmp
pop
sub
adc
test
cmpsb
mov
scas
stos
or
fs
add
fsubrl
lret
in
shlb
sub
loopne
jnp
adc
sub
addr16
bswap
arpl
push
push
gs
xor
int3
cmp
adc
adc
mov
int
inc
xlat
out
adc
dec
mov
ds
mov
pop
das
in
test
sarl
mov
mov
pushf
mov
xor
movl
add
stc
insb
pop
dec
push
out
shll
outsb
inc
movsb
and
dec
lods
pop
cmpsl
push
daa
add
jae
fucomip
js
mov
arpl
outsb
inc
ja
add
add
cmp
aad
mov
out
stc
aam
clc
test
push
pop
inc
js
stos
addr16
and
fsubr
ljmp
pop
sbb
adc
in
out
loop
imul
inc
add
lods
push
ss
iret
lods
sbb
imul
ss
push
clc
fwait
adc
sub
adc
xchg
dec
jb,pt
cli
test
and
fildll
mov
cld
pusha
popa
mov
push
mov
push
cmp
add
push
insl
std
popa
inc
int3
push
pop
mov
lods
jmp
cwtl
mov
push
push
jb
mov
lods
lods
loope
out
addr16
cmp
inc
inc
dec
bswap
jmp
dec
imul
scas
dec
and
ljmp
mov
mov
jo
imul
lcall
xor
nop
and
fdivrs
jne
inc
imul
lea
xor
and
orl
push
sbb
jmp
sti
adc
adc
pop
xor
mov
loope
std
sub
fcompp
sbb
cmp
xor
mov
pop
xor
mov
fadds
outsl
cli
jg
jbe
or
cli
xor
int3
xor
adc
xchg
rolb
jmp
daa
ror
mov
lods
sahf
mov
jle
lahf
loop
pusha
or
push
mov
push
pop
popa
sub
cltd
mov
jno
sub
xchg
cmc
pushf
push
dec
add
mov
arpl
daa
mov
push
push
jbe
adc
cltd
aam
fsubp
stc
mov
fisubrs
sub
lret
adc
pop
cmp
sahf
ja
rclb
loopne
jno
and
lret
fsubp
sar
call
xchg
jp
dec
test
andnps
hlt
lods
inc
sbb
push
stos
and
dec
sbb
xor
js
adc
int
mov
shll
into
hlt
nop
mov
jmp
loope
jge
xchg
xlat
push
out
mov
call
mov
push
fcompl
push
mov
push
daa
inc
or
or
sbb
xchg
xchg
stc
xchg
sarl
rcll
cmp
mov
arpl
jl
sbb
mov
mov
lods
sub
js
mov
outsl
dec
lret
rcrb
or
and
xor
jle
scas
ficomps
sub
arpl
pop
sbb
dec
xchg
or
adc
jle
cmpsl
inc
std
lret
mov
and
cmp
or
int3
mov
xchg
dec
add
xchg
xor
pop
dec
mov
mov
add
popa
or
cmp
pop
xor
dec
dec
mov
out
jns
mov
or
jmp
mov
nop
push
xlat
sbbl
gs
mov
fstpt
mov
push
outsb
or
bnd
iret
aad
jns
pushl
inc
pop
dec
add
cmp
mov
push
xor
jnp
adc
ja
sbb
xchg
call
fwait
sar
xchg
pop
shlb
pop
xor
lret
or
sahf
ret
into
shrb
adc
subb
dec
xchg
insl
dec
sub
and
xchg
and
and
pop
push
cs
and
outsl
mov
mov
and
test
cwtl
out
shll
push
iret
iret
pop
in
sub
add
mov
pop
ret
pop
push
sub
cmp
sub
push
push
imul
ret
fisubs
int
pushf
jecxz
ss
repnz
cld
aaa
or
enter
dec
or
scas
fisubrs
iret
xchg
xchg
andb
ret
xor
xchg
mov
jle
cmp
sbbb
test
jecxz
movsb
adc
xor
or
cmp
lret
outsl
lahf
pop
es
sahf
inc
pusha
fs
push
jge
imul
int3
cmp
pop
stos
sub
ljmp
js
repnz
push
push
ljmp
enter
jl
xor
movsl
adc
dec
push
lahf
jmp
imul
inc
sbb
pop
icebp
sti
repz
fstl
pop
test
repnz
xchg
dec
sti
data16
cmp
xchg
inc
cmp
and
inc
jg
das
jne
cmp
xor
loop
push
pop
jmp
test
and
pop
cs
or
xchg
es
mov
clc
pop
adcl
gs
dec
outsl
inc
outsl
dec
or
out
sbb
es
sbb
test
mov
mov
xlat
pop
fs
rolb
jae
aas
ficomps
cld
jb
xor
jmp
loopne
ja
xor
jb
neg
fcomps
push
cmp
jg
sub
jb
sub
jmp
bound
cmp
shll
inc
mov
inc
inc
imul
cmc
or
out
out
cmp
call
push
xor
scas
lock
mov
pop
imul
into
xchg
inc
xchg
cvtpi2ps
mov
xchg
pop
add
call
push
fmuls
xchg
lret
jnp
jecxz
mov
ret
jmp
stos
and
mov
cmp
movb
cmp
inc
xor
idiv
xchg
xchg
pusha
repnz
xor
pop
out
sahf
aas
bound
pop
bound
add
cmp
xchg
pushf
mov
dec
xlat
test
push
fs
sub
push
xchg
sbb
sbbb
inc
sub
mov
ret
pushf
stos
lods
repnz
enter
icebp
iret
cmp
loop
adc
ljmp
or
testl
cld
mov
jl
movsl
lahf
push
cmp
test
pop
xchg
lds
push
inc
jne
jg
mov
adc
das
mov
jecxz
fisubrs
loopne
push
dec
lods
cs
shrl
scas
mov
aam
sti
or
ljmp
dec
outsb
dec
adc
sub
popa
xchg
jbe
cmpsb
mov
inc
push
leave
add
outsb
stc
ja
in
mov
jecxz
daa
mov
adc
and
sub
add
and
cmc
imul
dec
nop
test
cmpsl
push
dec
xchg
js
pop
rol
jg
data16
cli
idivl
sbb
cmpl
data16
xchg
push
fisttpll
mov
bound
push
xor
rol
pop
bound
sub
push
stos
add
jo
enter
cmpsb
mov
loopnew
sbb
jl
inc
mov
dec
fbld
pop
outsb
popf
push
lahf
fsts
mov
xchg
pop
dec
inc
out
mov
mov
cmp
fldl2e
sbb
or
ror
sub
pusha
es
mov
adc
jnp
jno
std
aad
popa
lods
xchg
sbb
fadds
jne
divb
adc
ja
pop
mov
cmp
es
fucom
les
ljmp
lahf
push
js
cmpl
shlb
mov
pop
lea
xchg
xchg
xor
pop
jne
jg
cmp
pushf
insb
dec
dec
fwait
incb
imul
fimull
cmp
fisttpl
incb
push
bound
jmp
repz
or
jbe
sbb
pop
nop
add
daa
cs
rolb
int
inc
stos
push
sub
call
lcall
test
inc
jnp
jmp
adc
je
aam
insb
sub
inc
dec
pop
sahf
loope
push
gs
push
jecxz
leave
push
inc
scas
aad
pop
pushf
cmpsl
iret
sbb
cltd
mov
stc
jb
sarl
dec
pop
js
and
push
lret
jle
stos
jmp
lret
imul
push
or
xor
mov
fwait
lea
xor
movsb
in
sti
repnz
push
out
jl
sub
push
stc
mov
sbb
ret
sti
fdivl
popa
jnp
pop
mov
out
and
cmpsb
mov
arpl
ror
cmpb
test
je
or
push
pop
cmp
leave
mov
pop
push
mov
pop
filds
adc
mov
sub
out
sub
hlt
mov
cmpsl
inc
pop
test
jbe
addr16
enter
push
je
mov
out
jns
adc
aas
outsb
mov
repnz
loopne
lcall
shrb
xchg
icebp
hlt
lret
pop
cmpsl
dec
icebp
roll
notb
mov
push
lods
mov
fildll
mov
xchg
pop
push
push
das
mov
push
call
popf
jp
fistpll
jecxz
jne
mov
xchg
mov
cmp
decl
out
add
mov
out
ljmp
cmp
or
pushf
shrb
and
scas
cmp
add
fildl
cmc
adc
lahf
xlat
int3
or
push
hlt
dec
xchg
dec
insl
scas
movsl
cltd
sbb
repz
mov
jbe
jmp
movsl
mov
adc
dec
push
out
mov
add
sub
and
fs
mov
and
das
adc
dec
sbb
sbbl
clc
popa
in
inc
sub
add
aaa
jle
xor
pandn
mov
mov
pop
xchg
rcl
dec
mov
cwtl
rcrl
and
xchg
in
lods
fwait
popa
popa
aas
lret
std
mulb
lds
in
xor
mov
add
frstor
jb
repnz
fsubrs
sbb
push
dec
lock
lcall
out
in
bswap
mov
dec
add
enter
aas
xor
or
push
das
stos
sti
das
and
xlat
push
aaa
fprem
jo
mov
xchg
fwait
mov
lods
push
int3
add
popf
lret
cld
xor
daa
mov
ficoms
mov
mov
xchg
mov
push
cmp
cmp
cli
push
adc
adc
sub
mov
sub
rorl
sub
cmpsl
cwtl
scas
stos
icebp
add
aas
arpl
mov
mov
lret
ret
xchg
push
xchg
loopne
movl
ret
popf
icebp
jo
adc
fstps
xchg
popl
test
adc
repz
cmp
xor
cmp
mov
adc
jae
hlt
in
addr16
mov
loopne
push
inc
int
pop
xor
daa
aas
mov
lea
cli
fistps
lds
adc
in
cmpsl
pop
sub
sbb
or
enter
mov
add
in
or
cmp
mov
test
mov
and
jns
mov
mov
iret
mov
pop
jg
pop
clc
pop
test
sbb
push
sub
fwait
mov
mov
in
add
sub
test
mov
repz
in
xchg
cld
data16
pusha
shrl
and
xor
cwtl
out
loopne
aas
addr16
inc
xchg
roll
hlt
popa
test
dec
repnz
pop
xor
fists
shll
push
pop
jle
and
ss
test
inc
mov
mov
add
arpl
xor
jp
jo
hlt
push
jp,pt
add
cmpsl
stos
push
lock
add
dec
imul
scas
cltd
dec
orb
inc
or
std
xchg
test
ret
add
popa
xchg
aam
lods
jne
fildll
leave
addb
andb
add
jl
popa
mov
pop
outsb
xchg
ja
in
sti
jbe
push
ljmp
mull
add
add
pop
test
inc
popf
jmp
add
pop
sti
push
jno
pop
inc
clc
jbe
cmpsb
mov
or
stc
or
or
mov
xchg
or
xchg
std
adc
pop
sub
push
loop
mov
jp
out
aam
mov
cwtl
popf
push
mov
mov
mov
cmpsb
jmp
shlb
push
lock
jne
cmp
je
mov
mov
mov
mov
xor
xor
add
add
imul
mov
mov
mov
mov
mov
mov
mov
mov
xor
lea
xor
add
adc
xor
mov
xor
xor
mov
add
adc
xor
xor
mov
cmp
jne
cmp
jne
mov
jmp
mov
pop
pop
pop
leave
ret
push
mov
sub
or
movl
mov
mov
add
movl
neg
mov
mov
mov
sub
and
mov
mov
andl
push
xorl
push
movzwl
xor
mov
xor
push
mov
subl
add
addl
mov
orl
mov
test
movl
je
movzbl
sbb
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jbe
jmp
push
call
cmpl
jne
mov
inc
mov
jmp
mov
movl
cmpl
je
cmpl
jge
jmp
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
inc
mov
mov
xor
or
add
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jg
jmp
pushl
push
pushl
push
call
cmpl
jne
xor
xor
inc
mov
jmp
mov
dec
mov
mov
sbb
xor
andl
mov
inc
mov
cmpl
jbe
jmp
push
push
push
push
call
cmpl
jb
add
mov
mov
adc
mov
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jbe
jmp
push
push
push
call
jmp
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jbe
jmp
push
push
pushl
pushl
call
cmpl
jne
mov
inc
mov
jmp
add
mov
mov
mov
or
xor
add
or
mov
movl
cmpl
je
cmpl
jg
jmp
pushl
pushl
call
mov
dec
mov
jmp
sub
add
mov
subl
jmp
into
in
push
mov
push
in
imul
push
in
hlt
sub
repnz
jnp
sti
in
lods
sub
pop
sub
mov
push
adc
add
mov
in
int
lds
aam
ljmp
and
test
stc
call
pusha
repz
xor
in
adc
xor
int3
jbe
adc
jg
repz
aaa
cld
cld
in
mov
es
xchg
daa
push
addl
movsb
enter
or
inc
pop
incb
sbb
ss
cli
bound
jno
mov
sbb
sub
mov
pusha
mov
iret
scas
fwait
clc
iret
push
sbb
jp
lret
add
lahf
sbb
lret
scas
aam
jg
inc
cmp
mov
mov
cli
cmp
enter
fildl
imul
and
fcomps
dec
dec
push
cmp
out
fnsave
jmp
xor
inc
cmp
cmp
add
aas
pop
pop
or
adc
into
cmp
inc
jecxz
je
and
mov
imul
loope
pop
push
mov
out
lret
and
jnp
mov
jge
popf
mov
sbb
cmp
mov
leave
jno
es
popa
lcall
jecxz
mov
int
rcrb
fst
cmp
ret
adc
sub
mov
mov
add
xor
lcall
xlat
inc
sahf
sbb
sti
xchg
mov
cwtl
data16
cmp
sbb
cmp
inc
or
mov
jno
sarb
dec
fisubs
dec
xor
jge
inc
jge
imul
es
int3
mov
or
cmp
aad
adc
pop
inc
mov
xchg
addl
dec
adc
mov
mov
mov
pusha
cwtl
inc
imulb
stos
ja
adc
les
test
subb
call
daa
ljmp
arpl
pop
fimull
test
leave
cs
and
mull
lcall
loope
add
fsubs
xchg
pusha
dec
xchg
in
inc
insb
std
mov
testl
dec
push
insl
fistl
add
test
incb
jne
outsl
or
aaa
mov
jmp
cmpl
aas
imul
xor
ja
push
mov
or
push
or
mov
dec
idivl
stc
cmpsb
int
out
out
xchg
or
jl
or
and
jecxz
mov
ljmp
cmpsl
imul
add
mov
outsb
inc
int3
adcl
mov
pop
add
xchg
cwtl
mov
xlat
sbb
lock
js
cmp
jl
cmp
repz
xor
dec
into
std
arpl
add
push
pop
xor
inc
notb
jl
dec
imull
ja
sbb
cld
mov
or
push
sbb
movsb
cmc
mov
shlb
cmpsl
test
pop
movb
and
inc
in
rclb
push
pop
push
mov
loopne
ljmp
push
dec
in
andl
cmpsl
and
rcl
je
adc
and
jo
in
loop
and
mov
xlat
xorl
popa
leave
xlat
inc
cmp
test
ret
push
test
dec
pop
inc
sbb
push
pop
cvtdq2ps
mov
insb
fwait
sete
test
fsubrl
add
jo
xor
dec
xor
add
pop
imul
adc
jae
mov
imul
mov
aas
fwait
xchg
sbb
jae
clc
or
cmp
cs
loopne
fstps
pop
mov
repnz
adc
jl
sbb
js
adc
jmp
adc
sub
push
imul
inc
lcall
pop
jns
pop
dec
out
js
out
xor
movsb
cmp
inc
dec
dec
repnz
out
xchg
mov
fwait
xchg
lds
or
xlat
pop
fisubrl
scas
inc
xor
subb
mov
xchg
pushf
sub
cmp
in
fwait
mov
xor
xchg
pop
mov
and
pop
movsb
mov
sub
lea
mov
push
mov
fnstcw
jl
cmp
dec
hlt
out
cmpsl
jno
xchg
out
js
sbb
sub
push
or
pop
daa
repz
jmp
ficoms
xchg
dec
cmc
mov
js
mov
imul
adc
mov
ja
jb
mov
lea
adc
push
or
or
and
lcall
sti
mov
call
pop
loopne
in
xlat
aaa
mov
cmp
jns
adc
setge
add
fs
pop
repz
inc
xchg
inc
ret
lock
jo
test
ret
push
loopne
cld
hlt
or
dec
sub
xchg
repz
jge
cltd
loope
sub
xchg
gs
fprem1
push
dec
ffreep
sbbb
sti
scas
xchg
hlt
xchg
gs
jp
or
insl
daa
push
ja
lret
cmp
lods
lahf
sbb
push
loope
push
xchg
daa
xchg
enter
inc
nop
cmp
cmpsl
mov
jnp
ja
call
out
out
outsl
xor
xchg
adc
loop
jg
and
xchg
mov
mov
push
icebp
push
fnstsw
dec
cmp
dec
test
push
mov
movsb
add
adc
inc
repnz
popf
in
xorl
cmpsl
ja
pop
daa
insl
xor
imul
insl
lock
sub
xor
stos
mov
mov
in
jns
loop
mov
xchg
arpl
in
lea
dec
dec
call
fstl
in
movsb
dec
mov
daa
mov
push
xor
pop
gs
adc
sbb
mov
lods
dec
mov
es
loope
sub
jnp
mov
push
push
icebp
outsb
xchg
cmovnp
aaa
mov
add
pop
cmpl
mov
pop
popf
addr16
mov
inc
repz
cmp
mov
pop
mov
std
in
call
or
xor
sub
dec
pop
mov
das
mov
xor
jg
icebp
inc
cmp
xchg
fstpt
xchg
mov
rcl
inc
bound
movl
stos
inc
leave
xor
and
pop
stc
loop
cmpb
pop
rep
shlb
mov
pop
shlb
stos
pop
mov
js
sbb
ret
sub
xchg
insl
shl
pop
add
xchg
mov
jg
pop
mov
jno
push
jl
ja
out
cld
scas
adc
jns
pop
mov
test
inc
push
mov
sarl
fxtract
cmp
or
dec
add
cmp
push
aas
cmp
add
jle
lcall
loope
or
test
jmp
pop
push
mov
xchg
lea
jmp
fisttpll
shll
xor
movsl
sub
sbb
and
enter
mov
ss
mov
mov
xchg
aam
xorb
xor
test
repz
js
cld
inc
icebp
jb
mov
in
ret
jmp
and
mov
push
xchg
out
rorl
popa
aas
loopne
push
scas
sub
mov
mov
mov
in
rcll
push
dec
in
jbe
push
repz
cmpsb
pop
xorl
std
pop
arpl
ja
push
inc
popa
test
or
add
roll
pop
jmp
imul
xchg
ficomps
mov
dec
lcall
dec
call
cmc
cs
fs
cmp
push
xor
and
dec
add
idivb
out
insl
testb
dec
inc
outsb
gs
mov
repz
mov
mov
inc
add
comiss
inc
aad
lods
rorl
mov
in
and
movsb
jo
adc
rcl
lret
mov
mov
imulb
mov
out
push
addl
and
setae
mov
adc
stc
jecxz
pop
mov
or
or
rcr
mov
fadd
in
adc
lahf
fsubl
cmc
pop
scas
into
rclb
cmc
pop
jp
inc
mov
fcompl
test
mov
sub
fstps
fwait
inc
xlat
pop
add
and
inc
cmp
mov
sbb
dec
sbb
repnz
push
dec
fstps
bound
ljmp
mov
and
aam
pop
cwtl
and
or
lahf
stos
shrl
aaa
scas
ret
push
xchg
iret
sbb
mov
jns
jae
sarl
mov
push
stos
cmc
pop
ffree
repz
xchg
push
nop
cmp
je
rol
data16
ss
mov
sub
mov
out
sbb
cmp
cmp
inc
lds
mov
xchg
and
xchg
dec
fcompl
pop
inc
out
rcll
scas
mov
or
cmp
mov
jg
mov
scas
add
call
add
ja
test
mov
mov
dec
out
je
test
pop
cmp
inc
out
jne
dec
idivl
fadds
mov
add
popf
sbb
frstor
mov
bound
xchg
js
es
push
call
insl
or
fs
or
cwtl
xchg
out
outsb
mov
push
mov
pop
adc
and
js
adc
clc
push
test
fnsave
lahf
pop
or
push
cld
dec
push
js
in
dec
pusha
cmc
xor
mov
cmp
out
stc
xchg
leave
jmp
adc
mov
cmp
addb
in
inc
pop
xorl
je
mov
mov
mov
icebp
mov
dec
push
push
adc
mov
mov
daa
push
or
cli
cmp
frstor
mov
rorl
in
cmp
push
aas
pushf
mov
lret
out
fcmovnb
cld
cmc
sbb
call
dec
sbb
pop
fisttpl
aas
cmpsb
fsubs
sbb
leave
aam
xchg
xlat
fbld
punpckhdq
push
mov
or
pushf
mov
rep
adc
mov
pop
daa
push
mov
or
mov
jmp
out
addr16
das
fs
and
mov
stos
xchg
xchg
mov
mov
rolb
js
or
inc
pop
add
xchg
test
movsl
out
aad
test
or
jg
or
or
push
push
sarl
fisubrl
fmuls
adc
push
cmpsb
sub
leave
out
out
pop
and
add
loope
xor
mov
call
nop
mov
sti
iret
push
mov
idivb
xor
xchg
fstpt
mov
add
cmp
outsl
and
popa
and
mov
sar
ja
jmp
rcl
cld
call
sbb
mov
test
loop
xor
or
cld
subl
jmp
push
dec
cli
jb
mov
movsb
jo
repnz
jno
mov
jmp
pop
out
repnz
push
adc
rolb
lcall
cmp
aad
cltd
mov
add
mov
mov
setp
mov
adc
dec
lods
add
dec
add
stos
cmpsl
les
aas
sub
or
shlb
loopne
mov
jl
aaa
cs
mov
stos
addr16
push
jg
add
lea
inc
xor
fucom
fnstenv
push
jne
fnsave
sub
pop
push
ret
mov
inc
cmp
call
test
push
jo
jecxz,pt
insb
jnp
mov
sbb
ffree
jb
iret
and
nop
jle
mov
mov
dec
dec
push
test
add
bound
xchg
call
push
push
cmpsb
les
mov
cli
adc
sahf
in
mov
xor
outsl
sub
mov
or
iret
aad
dec
mov
adc
or
leave
subb
testl
xor
aas
pop
mov
mov
jmp
sbb
add
push
xchg
das
ret
in
adc
sub
pop
pop
cmc
mov
jae
inc
dec
jnp
fadd
push
pop
cwtl
sahf
das
test
xchg
sub
sbb
push
stos
jecxz
movsl
enter
dec
cmp
sarl
adc
and
xor
in
mov
arpl
jl
lods
add
mov
add
outsl
ja
push
pusha
push
mov
fs
xchg
hlt
clc
sarb
adc
mov
out
cmpsl
pusha
mov
mov
and
lods
sub
test
or
xor
mov
les
leave
sub
xorl
pop
jle
adc
inc
cmp
arpl
lret
lods
xchg
adc
aad
push
std
dec
and
subl
add
xor
dec
lahf
lods
dec
jbe
xchg
int3
or
cmp
mov
sub
push
fnstcw
push
adc
pushf
data16
inc
jae
insl
xchg
lahf
das
jp
mov
repnz
xor
add
call
mov
stos
push
adc
inc
inc
add
popf
mov
and
inc
pop
xchg
dec
outsb
jne,pn
xchg
ljmp
xor
cmpsl
push
jmp
int3
xor
and
cmp
xchg
sbb
adc
test
mov
ja
repnz
push
into
mov
fstl
fwait
in
sahf
popf
sarl
inc
mov
nop
sbb
dec
fsubs
bound
cmpsb
shlb
sbb
cld
dec
int3
mov
test
or
xorb
or
push
cwtl
push
jns
jle
in
in
and
xor
in
and
push
movsl
lds
xchg
dec
stos
mov
cmp
push
test
clc
gs
jo
les
adc
xor
gs
xor
mov
pop
scas
cmp
or
xor
daa
pop
flds
lcall
xchg
stos
adc
dec
shlb
leave
xchg
xor
das
cmpsb
pop
sub
xor
mov
push
xor
leave
and
scas
mov
fistpl
sub
sub
cmpb
rclb
add
add
or
pop
sti
subps
and
sub
cmp
jmpw
xchg
jne
jg
mov
cmpsl
pop
sbb
sbb
or
pop
movsl
incb
mov
and
out
push
test
pushf
mov
lret
mov
sub
cmpl
push
mov
cmovl
call
test
mov
lock
dec
add
testl
xchg
testb
data16
test
int3
lods
lcall
sub
push
sbb
and
inc
and
xor
arpl
lcall
out
scas
cmp
pop
je
arpl
or
testb
ffree
mov
dec
imul
sub
or
je
popa
xchg
add
and
sbb
lahf
xor
ds
popa
xor
mov
lock
divb
sub
addl
or
or
ds
mov
xor
sbb
mov
fstl
xchg
and
repnz
cmp
test
cld
jge
xchg
rcrl
dec
clc
or
stc
jg
inc
std
inc
add
sub
rcrl
movsb
jb
fcoml
inc
inc
or
roll
jns
inc
ror
insl
sbb
inc
mov
cs
je
ss
mov
test
add
aam
popa
push
push
decb
push
movsl
cmpsb
mov
xor
ret
mov
shl
xor
lret
ficoml
loope
lret
mov
ret
push
adc
dec
add
or
jge
mov
cmpsb
dec
pop
fcomi
cltd
les
clc
out
cmp
insb
into
scas
lahf
push
enter
pop
mov
lds
xor
stos
cmpsl
mov
fiadds
mov
mov
loop
daa
in
pop
fcomp
ljmp
cmp
lds
jl
sub
hlt
fdivrl
aas
add
enter
ljmp
xchg
adc
outsl
push
repnz
clc
sub
cmp
pop
mov
stos
dec
bnd
cmpsl
fs
mov
popf
in
xor
daa
push
cmpsl
cmp
cmp
shrl
cwtl
lods
mov
arpl
mov
mov
sub
push
bound
xlat
mov
sub
pop
cmp
repz
imul
jle
xor
adc
repz
adc
test
fldl
mov
addr16
ljmp
into
sbb
push
jno
scas
cmpsl
popf
and
scas
mov
pop
inc
pop
jns
clc
fcmovb
shll
cli
imul
jp
push
pop
shll
pop
and
mov
pop
mov
mov
mov
sub
aad
shrb
push
gs
or
push
and
jnp
cli
aas
xor
sbb
jmp
in
xchg
imul
int
and
jbe
xchg
push
repz
aas
lds
je
repnz
popa
scas
popf
xchg
ljmp
inc
fwait
outsl
ss
jmp
ds
add
jo
cmp
daa
cmp
push
mov
leave
movntps
push
xor
or
adc
jbe
data16
mov
jecxz
mov
bswap
add
imul
jne
lods
outsl
xchg
pushf
int3
xchg
std
shll
push
sahf
xlat
lret
adc
lcall
iret
mov
loopne
add
es
pusha
adc
cmpsb
mov
test
pop
leave
or
mov
sbb
push
jp
sub
pop
subl
jbe
mov
les
push
jne
jns
pop
rorl
stos
js
stc
xchg
int
inc
xchg
pop
push
repnz
or
jle
popf
jo
aam
shlb
mov
pop
cmp
pushf
or
xor
sub
psadbw
xor
hlt
lahf
fwait
aam
or
loopne
int
pop
sub
sbb
fsts
gs
sarb
cltd
mov
sub
mov
xchg
mov
fpatan
pop
xchg
or
mov
es
pop
sbb
aas
idivb
xchg
sbb
testb
cltd
cmp
add
stc
test
jcxz
pop
mov
in
rol
jl
arpl
sub
or
cli
aam
and
add
addb
sub
out
xchg
jnp
lea
xchg
pop
sti
sti
jb
lods
xchg
test
push
bound
add
les
push
mov
ja
loopne
ja
addr16
push
adc
or
bound
adc
test
mov
orl
sbb
cmpsl
dec
dec
loopne
mov
in
lret
out
shrl
mov
in
lea
nop
ret
xor
fisubl
and
sti
aas
ljmp
in
shrb
loopne
pushf
xchg
clc
inc
das
movsb
cli
pop
jnp
popw
popa
std
lds
inc
sbb
lds
push
and
outsl
inc
shrb
das
sti
ret
stos
push
add
or
inc
jns
insl
mov
add
ss
jecxz
pop
stos
xor
or
sub
sub
movsl
cmp
pop
inc
out
lds
dec
fcmovnb
add
push
les
insb
es
mov
leave
push
js
or
xorb
adc
jne
fbld
push
xor
mov
call
dec
imul
movsb
lds
pop
jnp
push
mov
hlt
adc
cmc
daa
je
cwtl
or
dec
std
mov
xchg
sbb
mov
iret
mov
xchg
cmp
push
mov
dec
fsubl
pop
fwait
inc
pop
sbb
push
jmp
xchg
adc
pop
test
into
les
mov
js
dec
or
fstpl
in
cmp
jge
mov
add
add
mov
inc
call
adc
xchg
jge
lcall
jp
xchg
mov
pop
cmp
adcb
clc
inc
pop
xchg
xor
sbb
call
pop
jecxz
inc
and
xchg
je
test
das
outsb
loop
sbb
mov
shll
lods
mov
mov
sub
cwtl
into
push
add
subl
ficomps
lea
and
dec
xor
xchg
shll
jg
cwtl
popf
outsb
sub
inc
inc
test
or
sbb
popf
push
mov
mov
sub
adc
push
idivb
imul
leave
loopne
fbld
popa
mov
adc
daa
enter
sub
xorb
in
xchg
lahf
loope
push
imul
and
xchg
in
and
jmp
pop
in
testb
fwait
jae
and
add
xor
mov
imul
fildl
jg
or
cwtl
cmp
cmp
or
je
in
incl
scas
orl
jo
popa
icebp
icebp
or
mov
mov
insl
lret
movsb
iret
and
mov
inc
std
dec
aam
inc
or
test
sub
xor
and
pop
cs
cmp
push
mov
outsl
idivl
mov
jb
xor
dec
sbb
cmpsb
push
aaa
inc
mov
daa
add
dec
jnp
mov
call
into
jo
subl
je
xor
mov
lods
out
inc
in
mov
mov
push
sarl
and
sbb
aas
xchg
mov
rcrl
mov
sbb
dec
jns
in
popf
pop
arpl
movl
lcall
cmpb
add
adc
les
std
fistpll
test
mov
fs
movsl
or
aas
mov
xor
adc
clc
and
insl
imul
out
fsubr
in
ja
xchg
lods
push
jmp
or
sbb
scas
and
leave
and
xchg
sbb
bound
icebp
insl
sbb
stc
jmp
dec
or
popf
aad
movsl
mov
and
fcoml
push
pop
inc
hlt
adc
pop
lods
hlt
je
imull
shl
in
clc
mov
repnz
or
int3
shrb
cs
repz
stos
jmp
lahf
mov
fs
push
outsl
xlat
scas
daa
das
xor
sbb
les
movsl
cmpsb
in
and
jle
lret
push
cld
stos
test
cmp
and
test
cmp
jno
cmp
movsb
sub
in
das
lret
loopne
and
mov
roll
mov
sbb
loop
inc
push
shl
cmc
lods
imul
insb
pop
pop
mov
mov
dec
sbb
dec
insl
add
ja
and
jp
popa
jbe
push
fldl
call
jo
scas
lret
rclb
clc
sub
push
test
xchg
jg
mov
in
fistl
sbbb
adc
pop
insb
or
inc
pushf
xchg
add
and
mov
std
inc
aas
xchg
mov
sar
stos
dec
flds
jae
mov
mov
jae
xchg
xchg
xchg
lret
inc
int
sbb
jno
jns
lock
daa
pop
leave
dec
data16
jl
inc
push
nop
lods
pop
and
adc
loop
mov
mov
stos
sub
cmp
jmp
push
lea
sahf
fmuls
xchg
sar
adc
xchg
add
shll
hlt
fs
cmp
mov
jbe
mov
pop
sbb
in
dec
cmpb
je
dec
mov
sub
cmpsb
je
mov
in
data16
xchg
jo
mov
cltd
push
sti
addr16
bound
push
cmp
jl
mov
int3
shl
pop
mov
enter
out
cmp
xchg
xchg
cmc
fcompl
cmp
pop
push
test
mov
imul
stos
add
and
icebp
cmp
sub
sub
je
sbb
jg
ljmp
pusha
mov
inc
xchg
ljmp
lods
pusha
or
push
aas
gs
or
mov
inc
nop
dec
add
cmpsb
fisubrs
inc
pop
jne
mov
js
mov
sub
addr16
and
cmp
loope
xchg
dec
in
sbb
add
cmc
push
xor
mov
push
shll
cli
ja
cld
fimuls
or
mov
adc
roll
or
pop
adc
dec
je
fldenv
inc
xor
stos
int3
aam
pushf
lahf
pop
cmpsb
mov
pop
push
inc
add
dec
jbe
mov
push
cmp
push
cmp
jge
cld
ficoml
add
sbb
movsl
jecxz
push
hlt
call
ja
or
mov
ja
std
mov
test
push
lcall
lret
mov
mov
jne
cmp
cmpsb
mov
loope
mov
sub
or
enter
xchg
lods
pushf
and
das
inc
iret
xor
ljmp
hlt
insl
jmp
arpl
jecxz
sub
repnz
test
mov
hlt
mov
mov
fsubl
xlat
and
jle
mov
mov
mov
sub
cltd
xor
loope
jp
andb
xchg
inc
adc
cld
stc
out
and
lock
push
jg
sub
lods
bound
int
daa
cmc
jnp
fcomps
es
insb
es
push
lea
inc
test
cs
cmpsb
cmpsb
movsb
roll
mov
loop
lcall
aad
fldt
or
sbb
lds
lret
push
jnp
or
lret
mov
pushw
sahf
ja
jb
dec
cmpsl
insl
push
test
shr
push
sub
sbb
insb
in
mov
aaa
mov
mov
mov
sbb
pop
or
xchg
clc
out
xor
cmpsb
mov
jl
jecxz
vpaddw
lds
or
repnz
lret
mov
cmp
pop
cmp
push
nop
int3
lea
es
lods
shr
bound
sub
outsl
shll
jb
dec
js
pop
push
inc
fdivr
pop
lret
lar
call
sbb
mull
jp
iret
add
jg
addr16
jbe
lock
push
cld
mov
fnstsw
mov
mov
insl
sar
scas
imul
pop
mov
xor
shlb
aaa
fisubs
fldcw
or
cmp
shll
adc
pop
out
adc
orb
sub
jecxz
jle
icebp
jne
jl
ljmp
add
jl
mov
inc
insl
mov
les
std
fdivrs
into
imul
pop
pop
mov
and
push
aam
out
mov
loope
mov
lds
cmp
in
cmp
loopne
imul
add
test
xchg
add
aad
pop
js
lds
jne
push
outsl
mov
popa
jne
dec
lret
je
psrlq
sub
or
fldenv
jae
add
setbe
sbb
cmp
std
mov
or
jo
inc
cmpsb
xchg
xor
xor
iret
inc
push
xchg
xor
pop
fisttpll
ret
dec
mull
mov
pushf
push
popa
test
cmp
loop
mov
cmpsb
sahf
lcall
jecxz
fs
nop
ret
movsl
jecxz
mov
cmpsb
xorl
pop
fcmovnb
gs
xchg
xchg
add
aad
out
xor
and
mov
sub
loopne
xchg
push
xor
jbe
scas
inc
push
stos
sar
dec
mov
pop
pop
lods
mov
bound
fwait
sub
inc
mov
in
subb
cmpsb
test
mov
ret
pop
mov
sbb
and
jl
cmp
stc
adc
mov
fldl
inc
xchg
shrl
iret
fucomi
mov
push
mov
rep
add
dec
pop
lods
mov
cmp
mov
in
xlat
push
nop
mov
daa
int
movsb
cmp
rcll
xchg
inc
add
or
nop
pop
inc
push
inc
mov
leave
pushf
mull
nop
adc
clc
into
xor
or
popa
jb
rolb
adcl
xchg
das
fiadds
jns
sbb
scas
mov
sbbl
cld
cltd
and
mov
test
int3
jl
dec
sbb
sub
lret
ror
dec
rclb
fcom
xchg
pop
mov
pop
imul
add
mov
inc
mov
xchg
pop
dec
inc
lcall
mov
cs
sub
dec
sub
out
cmpsl
outsb
shrb
or
fisubrl
add
and
outsb
pop
or
mov
das
dec
jmp
sarb
lret
cld
xchg
pusha
aas
int3
adc
jno
enter
arpl
add
or
or
popf
lea
lds
dec
test
loop
jns
sub
adc
jle
aad
call
mov
ds
and
cmp
sbb
add
push
cltd
scas
aas
cli
sub
movsl
mov
scas
jmp
pop
out
iret
add
add
mov
or
add
sub
push
adc
hlt
jbe
mov
and
pop
xchg
mov
testb
inc
arpl
pushf
rclb
aas
dec
mov
jecxz,pt
sbb
push
mov
cwtl
cld
push
faddl
xor
sbb
xlat
loopne
jno
in
cmpsl
sub
fmulp
inc
and
mov
lahf
sub
jle
outsb
cmc
xchg
cmp
in
dec
les
ja
mov
xchg
mov
and
jbe
dec
or
sahf
xchg
imul
cli
mov
dec
jge
add
in
cmp
xchg
or
mov
data16
std
mov
jecxz
clc
loope
jno
fs
add
inc
inc
adc
in
mov
leave
xor
or
add
add
cmc
pop
mov
inc
cwtl
popa
inc
pushl
xor
fnstsw
push
mov
cld
testb
jp
addb
sub
mov
sahf
shl
xchg
fstps
cmp
and
jl
sbb
imul
pop
pop
in
pushf
mov
dec
mulb
mov
dec
pop
repz
push
enter
out
dec
pop
sahf
inc
push
adc
pop
in
dec
testb
cld
js
sti
es
mov
and
ret
xor
push
test
sbb
ja
outsl
fildl
in
cmp
push
andl
fs
das
mov
stos
arpl
or
imul
lods
fisubl
push
ljmp
and
sahf
pop
gs
test
rcr
jp
mov
daa
xchg
bound
pop
shlb
aad
push
pop
xchg
loopne
fldenv
into
mov
enter
dec
add
negl
mov
stos
ja
sub
and
sbb
stos
pop
add
lret
mov
out
and
out
in
dec
insl
or
mov
idiv
ljmp
push
pusha
sahf
dec
jl
cmpsl
gs
or
sub
sbb
xor
sbb
cmp
push
pop
pop
xor
movsb
inc
repz
aas
xor
jle
push
lea
xorl
xor
xor
movl
cmp
movl
je
xor
or
add
mov
movl
cmpl
je
cmpl
jge
jmp
push
call
mov
dec
mov
jmp
mov
xorl
xor
add
cmp
movl
jne
pushl
call
mov
mov
adcl
mov
mov
addl
xor
sbbl
add
cmp
movl
je
pushl
pushl
addl
call
sub
mov
decl
mov
mov
or
mov
xor
andl
add
movl
cmp
je
or
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jle
jmp
pushl
pushl
push
call
cmpl
jne
mov
inc
mov
jmp
mov
adc
mov
adc
mov
mov
add
mov
mov
mov
add
mov
mov
mov
add
mov
jmp
mov
mov
add
mov
mov
mov
mov
xor
add
cmp
je
jmp
mov
mov
mov
xor
add
cmp
mov
mov
je
mov
xor
add
cmp
je
lea
push
pushl
pushl
call
mov
mov
mov
xor
add
cmp
je
mov
movzwl
mov
mov
mov
jmp
mov
mov
xor
lea
jmp
mov
mov
xor
add
jmp
mov
add
mov
mov
test
je
movl
push
pop
push
sub
pop
add
push
pop
push
dec
pop
dec
xchg
sub
xchg
dec
mov
imul
sub
mov
mov
mov
xor
add
jmp
mov
mov
mov
mov
mov
xor
xor
add
div
mov
mov
xor
lea
mov
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
mov
jmp
cmpsb
daa
arpl
push
mov
adc
cmp
lret
dec
jnp
repnz
jnp
out
mov
repz
sbb
mov
ss
pop
jg
das
cmp
mov
pop
pop
mov
mov
pop
mov
push
dec
fcoml
dec
adc
and
jae
and
sahf
movsl
push
sub
imul
sub
xlat
lods
test
mov
pusha
sahf
bound
out
inc
mov
jno
inc
cmp
scas
sahf
incl
push
mov
add
jle
fstpt
mov
pop
aam
into
mov
xchg
pop
xchg
push
ljmp
dec
inc
jnp
mov
subb
aad
int3
cmpsb
loopne
fldenv
or
mov
pushf
jl
into
test
and
and
les
mov
lods
faddp
mov
mov
in
icebp
or
inc
inc
push
or
fldt
and
cli
cmpsb
aaa
loopne
xor
mov
out
mov
pop
ljmp
sbb
in
aam
stos
push
shr
scas
cmpsl
mov
sbb
xor
mov
cld
adc
mov
rcrb
and
popf
mov
sbb
imulb
cmp
xor
jl
xchg
notb
mov
sub
mov
popa
clc
out
lret
bound
pop
add
std
mov
add
xor
imul
lods
ret
mov
xchg
divb
pusha
pop
mov
and
pop
cwtl
aas
pop
iret
jmp
jae
jne
mov
mov
sbb
pop
loopne
jbe
inc
inc
inc
loopne
or
and
sahf
cld
xchg
lahf
sub
or
sbb
addl
movsb
lock
rcl
ror
inc
ret
sub
xor
shlb
in
push
rcll
add
gs
stos
add
loope
mov
in
xor
mov
xchg
js
notb
jns
inc
dec
inc
lret
add
xchg
clc
cmpb
pop
jns
push
insl
orb
and
bound
mov
mov
fsubrl
lea
inc
sub
jge
jnp
xchg
fstps
out
ret
cmpsl
and
loope
idiv
std
enter
pop
add
loop
mov
in
mov
inc
movsl
or
iret
xchg
and
mov
lea
in
popa
push
sbb
jns
inc
orb
pusha
paddusb
ljmp
mov
mov
cmc
inc
lods
dec
mov
dec
mov
imul
mov
sahf
out
cmpsb
xor
sub
xchg
aad
in
dec
xchg
fwait
ret
push
jno
mov
out
test
mov
mov
ljmp
out
adc
xchg
ss
das
pusha
pop
inc
xchg
sub
dec
cmc
fldenv
mov
inc
fisttpl
je
cmp
add
pushf
sbb
ja
xchg
push
add
rclb
fdivrl
adc
rcr
out
push
fsubrs
xor
fisttpl
xchg
dec
lret
pop
sbb
mov
stc
mov
xor
dec
test
adc
add
mov
fstps
pop
sbb
jecxz
gs
xchg
pop
cmp
cmp
in
jmp
lods
xchg
xor
pop
mov
mov
inc
ss
sbb
or
cmp
push
adc
or
cmp
mov
dec
stc
insl
or
shlb
xor
jge
aas
gs
jle
xchg
pop
out
imul
test
test
pushf
std
jb
shll
popf
and
cmp
cmp
mov
push
inc
xchg
repz
mov
movsb
lret
or
bound
jno
subb
test
daa
inc
jp
mov
sub
cmc
inc
nop
mov
incl
or
mov
xor
mov
sar
dec
aam
cltd
sbb
icebp
fucomp
and
inc
inc
sbb
popf
push
jns
ljmp
bound
loopne
dec
imul
call
push
and
dec
aaa
les
aas
addr16
bound
ficoml
fldl
and
jmp
add
orb
enter
cmpsl
pop
mov
imul
mov
into
out
push
and
iret
notl
mov
aas
inc
shrl
pop
jl
and
push
outsb
stc
mov
cmpsb
jb
std
rorl
in
pop
add
lret
push
popf
and
mov
pop
mov
out
rcrb
sbb
out
movsb
push
addr16
jns
mov
lret
in
xor
xor
in
test
rcr
icebp
repnz
jp
adc
test
enter
pushf
mov
mov
xchg
or
loope
xor
fisttpll
add
dec
pushf
xchg
sbb
movsb
cmpsb
and
in
movsb
outsb
aad
rclb
pop
pop
testl
ret
jp
push
xorb
pushf
shl
mov
movsb
pop
dec
pushf
xchg
test
aam
ss
pusha
mov
xor
int
mov
xchg
inc
or
rorl
lret
aam
xor
xchg
sbb
jmp
mov
scas
loope
out
or
in
inc
nop
lcall
mov
bound
or
fsts
rorl
jp
faddl
or
xor
push
hlt
push
movsl
xor
xor
leave
inc
pop
sbb
mov
imul
aad
jne
pop
loope
stc
jmp
dec
adc
test
xor
js
repnz
sub
and
pop
push
mov
jnp
push
or
roll
dec
inc
std
popa
mov
je
mov
imul
sbb
dec
mov
jns
faddl
dec
sub
ret
fbld
lret
dec
fisttpll
fistpll
cmp
mov
push
outsb
loope
push
xor
xchg
pop
mov
add
int3
jmp
pop
fdivrl
cmp
or
cmp
mov
or
and
mov
in
jne
add
dec
scas
aad
add
outsl
add
dec
pop
rol
and
test
inc
xor
pop
jecxz
stos
fsubl
jmp
xchg
jecxz
das
xchg
add
pop
orb
dec
fbstp
addr16
iret
es
pop
scas
sub
or
sub
xlat
pop
cld
jb
loope
std
rorb
pop
shrb
out
out
repz
xchg
sti
sbb
fldenv
sti
cs
repz
ja
out
rclb
mov
mov
or
iret
stos
sub
fcmovne
add
jg
adc
sar
ret
xchg
out
sahf
add
aas
jbe
cli
sub
inc
mov
dec
lds
inc
adc
mov
lcall
ret
adc
fidivs
sarb
inc
mov
test
mov
push
inc
push
or
xchg
add
lret
and
stos
ret
sarb
data16
fdivrl
add
jmp
nop
sti
sbb
mov
xchg
aaa
cmc
lock
lret
repnz
xchg
fidivs
lods
insb
push
aaa
mov
jnp
repz
jnp
ficoms
loop
and
movsl
ja
dec
cmp
lcall
enter
dec
loopne
mov
shll
push
pop
iret
inc
mov
sbb
add
call
das
mov
cmp
xchg
push
sub
roll
mov
enter
pop
lock
pop
mov
mov
push
aaa
add
inc
sbb
sbb
ret
mov
pop
sub
pop
push
xor
sub
push
mov
rclb
sub
sbb
rclb
and
and
pushf
cmp
cmpb
orb
shll
xchg
mov
pop
fsubrl
cmpsl
mov
icebp
out
mov
sahf
cmp
mov
mov
fs
inc
xchg
mov
dec
mov
cmc
mov
or
cli
enter
mov
dec
xchg
fdivrs
aam
scas
mov
into
sub
cmp
xchg
xchg
iret
and
and
mov
movsb
mov
outsl
add
push
mov
ds
sahf
mov
ss
jmp
cmp
fcmovnb
in
jle
test
mov
cmc
call
pop
mov
mov
sub
sub
repnz
aad
stos
cmc
int3
sub
lds
xor
adc
push
movsl
pop
xchg
hlt
mov
pop
adc
ret
pop
push
repnz
push
or
in
imul
cmp
pop
addr16
add
and
outsl
add
add
xor
pop
ss
adc
hlt
xchg
jecxz
imul
and
stos
leave
jmp
sti
std
icebp
out
fwait
loopne
dec
xorl
adc
dec
jns
je
xor
sbb
mov
push
scas
pop
in
pop
lea
dec
mov
icebp
xchg
orl
push
bound
ljmp
sbb
xor
inc
push
mov
jg
mov
mov
sub
mov
inc
sbb
cmp
fldenv
add
xchg
nop
xlat
sub
push
cld
pop
out
or
jg
push
popf
add
paddq
stos
jo
sbb
aas
pop
enter
in
sbb
xor
stos
jle
fisttps
fdivrl
and
ror
cmpsl
fidivl
push
or
js
in
test
xor
or
jmp
adc
jl
sahf
pop
xchg
inc
and
insl
jl
movsl
and
mov
jle
or
jmp
inc
adc
inc
jl
xor
nop
iret
add
mov
ds
xchg
shlb
popa
sarb
inc
je
and
xor
sub
movsl
fdivl
mov
jb
addr16
sbb
xchg
mov
dec
adc
js
stc
mov
adc
dec
jle
call
leave
scas
dec
xor
pop
adc
add
mov
insl
stos
lods
in
popl
pop
xchg
test
jne
loopne
leave
out
movsl
sbb
nop
jecxz
mov
fucomp
sti
in
sbbb
and
arpl
add
push
xor
fucomi
imul
iret
push
sub
pop
pop
jge
push
insl
rolb
test
jle
cmp
fnstenv
push
mov
repnz
and
and
jb
add
adc
mov
xchg
jo
pop
jmp
and
inc
test
lods
xchg
push
testl
mov
cmpsb
test
popa
jle
xchg
xor
mov
repnz
lods
and
rolb
pop
push
mov
cmpsb
stos
mov
inc
fidivrl
push
test
jle
dec
xor
loope
pop
faddp
cmp
pop
push
call
pop
enter
xchg
xchg
add
call
js
sbb
inc
push
bound
ficomps
imul
and
push
mov
cwtl
mov
aaa
out
add
lock
add
sbb
mov
push
adc
mov
jmp
ja
ret
xor
je
out
jbe
xchg
sub
sbb
adc
cmpb
dec
inc
cmp
jo
scas
jmp
dec
mov
stos
call
insl
mov
rclb
and
cltd
movsb
add
jb
dec
push
mov
xor
mov
jns
nop
sahf
xchg
notb
sar
mov
mov
xlat
or
jg
mov
pop
or
sahf
enter
out
in
push
mov
lea
jno
icebp
pause
push
jge
pop
sbb
das
ljmp
clc
stc
xor
nop
inc
add
cmp
rclb
nop
mov
mov
add
push
inc
aaa
xor
cmp
ss
hlt
decl
xchg
mov
jb
adc
sti
orl
daa
mov
mov
sub
mov
leave
mov
pop
pop
mov
jecxz
pop
mov
add
fsincos
xchg
add
das
adc
adc
jne
or
lods
push
jmp
mov
adc
ret
lds
je
test
lcall
xchg
jbe
shl
sub
mov
ds
dec
sbb
icebp
inc
rorb
mov
xchg
push
mov
sarl
pushf
test
pop
int
cld
enter
popa
call
call
test
icebp
outsb
push
sbb
jne
inc
stc
popa
call
pop
loope
xchg
adc
shl
adc
lods
sbb
inc
jae
xchg
into
rcl
add
add
lea
arpl
inc
mov
movsb
sbb
dec
and
cmp
call
jae
sub
ret
pop
out
shll
js
icebp
pop
add
ds
ljmp
push
ret
and
mov
mov
mov
shll
pop
xor
test
adc
push
das
cmc
iret
push
roll
mov
es
add
mov
sbb
enter
mov
push
dec
sub
mov
mov
xchg
and
and
stos
xlat
fucomp
cld
push
mov
mov
and
dec
add
nop
and
clc
cmp
out
cmp
test
je
inc
sbb
jecxz
mov
inc
inc
jecxz
je
popf
ret
jp
inc
push
sahf
cmp
fstpl
js
test
aam
arpl
mov
loop
pushf
negl
add
inc
push
xchg
sbb
pop
int
test
ret
push
in
adc
cmc
jmp
mov
inc
fidivrs
add
movsb
sub
or
adc
xor
popa
add
jge
sbb
and
sti
cmp
sahf
jge
mov
sahf
inc
cmp
neg
xchg
mov
push
add
or
loopne
scas
and
xchg
outsb
arpl
and
rorb
cmp
dec
sub
mov
orb
lods
lahf
adc
lods
dec
stos
push
inc
add
test
mov
fs
cmp
sarl
xor
adc
ja
hlt
xor
push
inc
stc
ja
sbb
test
and
sbb
sbb
jns
stos
push
testb
iret
add
pop
push
xchg
test
mov
push
cli
push
in
pop
mov
clc
test
cwtl
cmpsl
je
ret
lods
dec
imul
cmp
ror
push
sub
lea
rcrl
inc
mov
push
pop
or
dec
xor
xor
sub
dec
pop
xchg
lock
nop
outsl
enter
out
mov
push
int3
inc
std
xchg
cmp
cld
je
fcompl
bound
fldenv
fldt
js
adc
andb
pusha
mov
mov
mov
mov
adc
pop
jb
or
dec
and
push
xlat
or
insb
stos
or
add
mov
xchg
pop
adc
lahf
aaa
or
cli
cmp
and
loopne
jbe
push
jnp
ss
jg
jl
ds
xchg
lahf
aas
mov
js
into
clc
movb
cld
pushf
adc
cmc
ficoml
jp
mov
mov
cmc
fisubl
inc
aas
movsb
bound
sub
push
std
push
xchg
ja
add
jmp
in
dec
sub
pop
icebp
mov
lds
mov
pop
inc
lock
mov
roll
das
add
or
ljmp
push
repnz
mov
sbb
cmp
mov
adc
add
adcb
pusha
xor
xor
stos
jp
lds
cmp
sahf
xor
mov
imul
pushf
jb
sbb
inc
ficoml
je
divb
aam
jno
stos
ret
call
jl
mov
jecxz
jae
popl
mov
mov
dec
arpl
dec
add
fwait
popf
pusha
dec
mov
inc
push
or
mov
push
orb
or
insl
repnz
cmp
mov
inc
xchg
dec
mov
movsb
aam
jbe
rcll
fistpl
lods
test
mov
xchg
sub
data16
gs
push
sbb
adc
jmp
xchg
dec
rorb
movsl
movsb
cmpl
mov
js
loop
dec
jp
aad
in
or
daa
pop
fnstenv
out
add
fcom
jmp
ficomps
mov
fcmovnu
jne
push
shlb
push
or
ret
dec
sbb
sbb
outsl
pop
and
mov
mov
jb
loop
and
cmpsb
in
xorb
cmp
ret
sbb
sbb
push
xchg
cmpsb
call
or
xchg
in
add
lcall
mov
mov
and
pop
inc
dec
jl
cmp
xchg
push
stos
dec
insl
push
pop
sbb
jmp
and
sub
cmp
popa
shrl
bound
fidivs
lret
lods
adc
into
cs
bound
sub
jne
dec
mov
insl
or
sbb
jg
stos
fstpl
punpcklwd
gs
movsb
jb
out
cmp
aaa
or
or
test
and
xchg
mov
adc
sbb
insl
cmpl
subb
xchg
sbb
daa
pushf
ffreep
shrb
mov
dec
test
out
pop
sbb
jg
and
out
sbb
fs
leave
shll
xor
testl
adc
adc
aaa
xchg
inc
mov
stos
pop
test
mov
popa
rolb
out
sar
jge
adc
hlt
pop
adc
call
and
fwait
insb
imul
leave
xchg
cmpsb
movsl
sub
jno
leave
pop
loop
lahf
testb
jp
sarl
fnsave
push
out
rorb
mov
push
inc
movsl
mov
inc
mov
loope,pn
fidivl
imul
mov
xchg
test
pop
inc
sti
or
jae
outsb
nop
cmp
lods
xadd
push
xlat
add
jp
jl
dec
dec
aad
adc
int
fadds
pop
sbb
adc
cmp
cld
in
daa
ret
data16
cli
insb
rorb
and
adc
clc
jp
push
adc
lcall
pop
mov
xor
inc
sti
daa
fcomps
test
sbb
pop
pop
shrl
iret
inc
inc
out
int
insb
push
sub
add
scas
cmpsb
insb
push
mov
insb
xchg
cmp
adc
mov
jno
stos
arpl
mov
lods
aam
ljmp
push
iret
bound
inc
dec
adc
call
insl
iret
rorl
lock
je
sbb
jmp
ficoml
cmc
test
pushf
test
sti
insb
cmpsb
or
lret
cmp
aas
std
mov
lods
push
repnz
push
add
push
cli
cld
xor
shr
xor
mov
sub
or
pop
push
mov
push
mov
test
icebp
into
jl
pop
fnstsw
push
xor
adc
inc
adc
test
jnp
nop
scas
outsb
mov
repnz
or
push
sbb
pusha
ds
sub
pushf
cltd
movsl
jle
rclw
add
cmp
movsl
mov
mov
mov
inc
dec
ljmp
inc
repnz
pop
sbb
jle
inc
daa
mov
ljmp
js
inc
dec
xor
arpl
mov
sub
push
enter
jmp
dec
enter
or
jmp
sbbl
mov
mov
test
inc
xchg
arpl
pop
arpl
adc
jle
pop
xchg
aam
out
adc
inc
lcall
mov
and
mov
bound
jne
mov
inc
add
push
xor
add
ljmp
adc
sub
jg
push
or
mov
adc
or
adc
int
dec
or
outsl
stc
cmpsl
lret
xchg
pop
jns
inc
in
cwtl
and
jmp
adc
cmp
fstl
lods
nop
fldenv
cmp
int
sbb
cmp
xlat
push
popa
dec
mov
lods
inc
movsb
and
add
sub
flds
cmp
sti
or
xchg
add
push
mov
sbb
mov
mov
or
add
jl
lahf
addr16
sub
xchg
pop
mov
ror
ss
imul
and
sarb
push
pop
stos
jne
scas
inc
imul
popf
push
loop
mov
imul
mov
pop
rorb
add
leave
ret
lcall
adc
push
popf
dec
or
push
popf
movl
xchg
xchg
mov
in
out
pop
out
jae
jb
lcall
adc
daa
adc
cmpsb
std
inc
lea
div
andl
or
fwait
dec
enter
jns
push
rcrb
popa
jmp
cmp
insb
pop
push
xchg
xchg
stos
mov
movsl
or
popf
fmull
sar
xlat
movsb
fld
fidivs
mov
mov
or
lds
in
pop
xchg
xchg
mov
mov
dec
scas
ret
jbe
and
test
mov
lcall
dec
or
xchg
pop
mov
nop
sub
lock
lahf
pop
les
leave
ljmpw
dec
mov
jl
in
mov
lock
adcb
dec
jl
cmp
xchg
and
and
mov
mov
cmp
fisubrl
je
fcoml
pusha
xchg
sub
pop
pop
push
mov
in
sub
add
cmc
dec
in
lret
mov
lods
into
insl
ret
pop
and
out
rorb
mov
or
lcall
cmp
inc
fstpl
mov
int3
testl
push
addr16
rcrb
shlb
daa
lahf
dec
inc
inc
xlat
dec
aam
aad
enter
mov
adc
imul
pop
fisttpl
adc
jp
incb
js
or
pushf
sub
dec
push
jl
loopne
and
bsr
xchg
xlat
test
or
sar
add
and
push
dec
or
push
sub
iret
dec
lcall
xchg
or
fidivrs
push
push
push
imul
iret
jle
cmp
mov
shl
repnz
mov
adc
in
negb
mov
sbbb
xchg
int3
jae
adc
sub
sbb
xlat
clc
test
mov
and
fs
pusha
and
dec
stos
test
push
in
fdivl
clc
mov
sub
and
fs
jae
sbb
mov
out
enter
ret
push
dec
cmp
or
stos
pop
xor
sbb
notl
sub
sti
pop
movsl
dec
nop
popf
scas
jg
test
scas
xchg
sub
cmpsl
pop
adc
cwtl
push
push
stos
adcb
dec
scas
ds
lret
xchg
jns
roll
aad
mov
lret
mov
cmpsl
mov
pop
fwait
mov
inc
pop
sarb
xchg
pushf
jmp
jmp
dec
int3
inc
pop
and
int3
rcr
bound
movsl
mov
add
mov
mov
mov
inc
sti
negl
pop
push
fs
shl
rcll
inc
mov
dec
repz
mov
dec
xor
pop
stos
mov
mov
pop
std
fiadds
roll
pop
enter
sbbl
or
mov
jbe
stos
enter
push
xchg
in
sub
sub
scas
in
hlt
xchg
jp
mov
mov
jg
and
hlt
call
push
fstpl
outsl
imul
movsl
cmp
test
cmp
loope
add
mov
mov
add
pop
repnz
popa
ret
xor
fidivrl
mov
lret
pop
imul
cmp
inc
and
pop
pop
lock
repnz
in
ret
into
adc
loope
sub
in
mov
mov
loopne
cmpsl
xor
out
push
iret
adc
stos
stos
in
mov
sbb
dec
mov
jo
das
into
xor
popf
imul
loop
jp
lret
outsb
repz
cmp
and
ficomps
sub
add
inc
jo
sti
push
cmp
push
mov
shrb
pushl
add
push
lahf
mov
sub
xor
pop
sbb
cmp
dec
fiadds
hlt
pushf
sub
enter
pop
adc
push
aas
cmp
popa
xor
mov
int3
add
adc
repz
aad
loope
test
and
movsl
push
and
out
shlb
add
sub
lret
push
aad
in
loop
imul
sub
fcompl
push
scas
xlat
iret
imul
and
adcb
cmp
jne
pop
adc
stos
call
adc
jmp
pop
pusha
sub
shrl
mov
out
daa
test
insl
mov
std
xor
out
adc
in
filds
push
mov
push
jmp
inc
cmpsb
xchg
cltd
xor
scas
lret
int
cmp
divb
dec
push
xchg
and
jmp
inc
cmpsl
xor
inc
pop
repnz
popf
inc
rcrl
xchg
scas
sti
sbb
add
lcall
stos
pop
mov
imul
sti
les
pusha
push
sub
cmpsb
pop
cmpsb
jnp
adc
scas
dec
xchg
jg
adc
mov
push
movsl
aad
adc
lcall
inc
mov
loopne
dec
mov
gs
mov
mov
aas
mov
dec
jnp
push
ficompl
inc
xchg
and
mov
cmc
mov
stos
aaa
add
rcll
push
pop
scas
aam
jb
push
adcb
mov
sbb
xor
pop
pop
dec
test
pop
into
in
pop
jecxz
hlt
pop
xchg
subl
or
mov
cmp
fdivrl
cmpsb
test
mov
aaa
pop
and
fdecstp
jns
xchg
or
or
ret
jle
cmc
mov
cmp
sbb
es
cmpb
add
mov
inc
inc
in
mov
jmp
mov
mov
std
loop
scas
jb
loopne
loope
outsb
repz
repnz
fldt
pop
les
sbb
jb
fcomps
div
mov
push
cmpxchg
cmp
lahf
into
add
inc
mov
adcb
nop
repz
push
leave
mov
sbb
jecxz
cmp
xor
and
push
sbb
adc
fwait
stos
dec
mov
mov
mov
push
pushf
out
pop
les
jno
adc
dec
xchg
shll
dec
aam
push
test
cmp
xlat
in
pop
push
mov
cmp
addr16
shrl
outsb
inc
outsl
lahf
pop
in
or
std
or
sub
mov
inc
sub
mov
xchg
jmp
mov
mov
int
lods
mov
imul
pop
adc
pushf
daa
in
xchg
movsl
test
cli
in
inc
inc
mov
adc
jnp
dec
and
xor
outsl
fsubs
jecxz
pop
mov
push
lret
test
shll
xchg
nop
neg
push
popf
mov
pop
push
xchg
fimull
jmp
xchg
add
roll
sub
dec
push
jg
ret
cli
jg
in
xchg
enter
mov
inc
repz
repnz
xchg
ret
pusha
jns
push
xchg
adc
js
xlat
mov
shrb
adc
loopne
arpl
scas
xchg
les
or
cld
daa
icebp
in
add
stc
inc
mov
push
jb
movsb
and
iret
outsl
jne
ret
call
push
lods
aad
or
dec
xchg
mov
sti
push
fistl
ss
xchg
adc
sub
rorb
pop
in
push
dec
cmp
bnd
mov
lar
push
imull
xchg
xor
or
mov
out
xchg
xchg
mov
mov
push
pop
fs
xchg
and
jae
dec
jo
mov
jns
roll
dec
ja
inc
push
dec
xchg
mov
or
shlb
nop
js
xchg
mov
cwtl
or
outsl
fists
xchg
xor
mov
test
adc
xor
hlt
in
dec
outsb
and
stc
rolb
and
bound
sbb
and
xchg
pop
mov
fwait
jo
pop
shll
out
fmull
inc
push
in
jle
fimull
dec
out
xchg
stc
in
call
dec
cmp
push
pop
adc
add
xchg
or
mov
scas
sub
jns
pop
test
jno
push
rcrl
nop
aad
xchg
cmc
lds
das
test
ficompl
sbb
loopne,pn
cmp
pop
jae
fwait
cmp
adc
mov
hlt
lahf
fstp
pop
insb
add
inc
dec
inc
mov
addr16
fcom
cmpsb
and
pop
sbb
add
out
ret
pop
xchg
gs
leave
push
icebp
push
pop
insb
popf
addr16
and
orb
ljmp
scas
jns
in
dec
jnp
bound
popa
jae
jb
loope
popf
pop
mov
je
mov
inc
lahf
jecxz
je
sbb
jbe
into
add
push
insl
push
and
mov
and
xchg
rcr
inc
lods
pop
in
jae
mov
fidivrl
shrl
mov
mov
sub
adc
inc
mov
jge
leave
xor
int
inc
lock
sub
jae
or
push
loope
jne
sbb
ds
adc
and
and
enter
and
rcrl
pop
lahf
add
rcrb
addb
int3
pop
imul
pushf
out
xorb
movsb
es
and
or
roll
jns
xchg
int3
clc
popf
inc
hlt
orl
sub
orb
pushf
and
or
mov
std
out
and
sbb
scas
push
dec
fnstsw
nop
enter
mov
sub
and
subb
cld
mov
push
xchg
lock
in
cmp
mov
or
ret
mov
lods
mov
jge
jae
lahf
stos
imul
test
pop
stc
push
inc
and
imul
movsb
adc
or
pop
pusha
mov
sub
loopne
leave
jb
jl
cli
inc
in
xor
scas
lods
pop
xchg
or
add
lcall
rol
inc
pop
jbe
mov
cmp
aaa
scas
rclb
std
sub
fisubl
fistpll
dec
cmpsb
mov
mov
mov
sbb
movsl
out
in
popf
add
or
push
adc
jl
cwtl
mov
push
xchg
mov
or
mov
scas
nop
mov
dec
rorb
mov
aas
xchg
aaa
adc
mov
dec
daa
add
loop
dec
test
loope
sub
addb
cltd
ss
cli
adc
inc
add
cmp
cmpsb
push
push
push
sbb
mov
xor
repz
mov
movsl
mov
adc
cwtl
mov
ss
push
sub
xchg
sub
jmp
push
and
sub
pop
adc
push
ret
mov
iret
pusha
inc
lods
subl
inc
dec
push
lods
push
mov
or
fistpl
mov
testb
sub
loop
ja
idivb
enter
sarl
jl
cmp
sub
add
sbb
jge
sbb
pop
add
push
sbb
cmpsb
call
and
popf
popa
dec
scas
ljmp
int
mov
push
imul
or
pusha
mov
loop
mov
cmpsl
adc
sbbl
add
xchg
out
push
sbb
lds
inc
pop
cmp
scas
stos
jo
stc
pop
and
xor
add
imul
mov
mov
mov
xor
lea
cmp
jne
mov
mov
xor
add
mov
and
xor
xchg
xor
push
mov
jmp
cli
test
pop
jo
inc
add
cmp
subl
sarl
int3
add
xchg
bound
xchg
aaa
arpl
push
mov
loopne
cwtl
roll
sub
and
sub
std
mov
nop
pop
out
jnp
mov
or
lahf
scas
pop
pop
xchg
stc
pop
mov
bswap
bound
dec
add
test
inc
fwait
das
mov
cmp
and
push
xor
mov
out
bswap
xor
pop
and
sarl
push
push
cwtl
pop
pop
fs
dec
test
mov
add
push
xor
mov
mov
sub
imul
xchg
out
xchg
mov
lret
pusha
add
fstps
repnz
pusha
into
mov
out
lock
push
xchg
adc
jecxz
leave
ljmp
movsb
test
sbb
in
incb
outsb
sub
insb
sub
insb
xchg
sub
pop
push
mov
jns
dec
adc
repz
pop
xlat
int3
les
ljmp
outsl
pop
and
pop
mov
mov
or
rep
icebp
jo
into
push
lds
bound
pop
mov
adc
out
xchg
popa
mov
aas
adc
sti
nop
add
mov
cli
mov
fnstenv
ljmp
xor
inc
dec
adc
aaa
xor
jecxz
outsb
test
dec
arpl
mov
aad
fidivs
fs
pop
outsb
push
inc
add
inc
mov
jmp
cmp
adc
data16
cmp
push
sar
dec
inc
in
imul
out
fcoml
pop
clc
xor
pop
addr16
cmp
xchg
pop
sub
push
movsl
out
out
push
jle
cwtl
hlt
pop
jge
sahf
xor
orl
sbbl
daa
adc
xchg
push
rcll
sbb
pop
pop
pop
mov
ss
lds
dec
xor
push
outsl
rcrb
mov
insb
icebp
cmpsb
adc
adc
and
xor
mov
sbb
cmp
fs
test
push
out
xor
in
repz
mov
adc
add
adc
inc
push
mov
cmp
xor
xchg
shlb
and
push
test
dec
xor
pop
push
test
stc
imul
cmp
lret
mov
pop
sarb
movsl
cmpsb
lock
dec
push
ret
psrld
mov
dec
adc
jb
inc
inc
mov
sub
xor
xchg
lahf
sbb
lret
movsb
vaddps
mov
xchg
andb
sbb
sbb
pushf
pushf
jg
mov
mov
hlt
lods
popa
lea
cmp
in
mov
bound
bound
xchg
jbe
jne
repz
push
mulb
dec
cmp
clc
sar
repnz
lcall
insb
je
repnz
inc
jnp
cmp
dec
enter
push
fsubrl
inc
mov
jnp
lds
cmc
stc
testb
mov
xor
cmp
fiaddl
pop
and
pop
scas
shll
push
movb
outsl
sub
adc
loope
lods
mov
pop
cmp
flds
adc
jno
xchg
cli
dec
add
fmuls
xlat
rorl
mov
add
xchg
pop
insl
ror
fdivs
adc
or
xchg
adc
jae
data16
stc
mov
inc
and
ret
jno
pop
popa
sbb
nop
fwait
cmp
mov
xor
mov
and
jecxz
xorb
add
aam
mov
sub
mov
loopne
mov
popf
and
dec
imul
ss
mov
idivb
loop
add
or
push
inc
xchg
sarl
add
push
lahf
adc
add
mov
stc
testb
fs
outsl
lahf
cld
pusha
icebp
js
and
xchg
adc
jecxz
jmp
int3
mov
aad
into
push
shll
cmpsb
arpl
jae
mov
ss
xor
adc
mov
dec
insl
xor
test
repz
ja
add
test
push
fistl
sbb
jns
insl
jns
inc
push
shll
adc
mov
push
movsb
imul
pop
test
pop
xor
movsl
mov
xchg
mov
cwtl
insl
and
sub
mov
push
movntps
inc
cmpsb
xchg
xchg
xchg
adc
mov
mov
insb
inc
les
enter
les
sub
cmp
popf
mov
inc
or
inc
sahf
and
or
iret
mov
push
cltd
cltd
cmp
mov
inc
dec
mov
loope
fistl
imul
inc
mov
sbb
lcall
or
xchg
push
xchg
aas
add
arpl
ja
add
inc
inc
mov
cmp
aaa
push
divb
inc
cmc
xchg
nop
ljmp
inc
jnp
data16
rol
outsb
push
movsb
out
dec
out
pushf
cltd
cltd
inc
push
sub
negl
mov
xchg
fldcw
xor
gs
out
scas
in
cld
or
push
sahf
out
rcrb
jecxz
scas
andb
repnz
js
and
push
push
inc
push
mov
leave
aaa
movsb
ja
gs
add
pop
push
fidivl
adc
sbb
and
add
aad
fsubrl
add
clc
insb
adc
movb
aas
pop
mov
popa
pop
mov
cmp
out
dec
scas
jg
pushf
out
xchg
gs
xor
arpl
and
movl
xchg
mov
cmc
cmpl
stos
xorb
or
add
sbb
sub
data16
or
cmp
xorl
sbb
mov
mov
jle
sub
or
stc
rcll
ds
dec
lea
push
stc
mov
jb
rclb
mov
in
jl
push
jne
sub
push
or
mov
dec
xchg
xchg
int3
aam
inc
cmp
in
jnp
xlat
in
sbb
int
fdivp
repnz
popa
xchg
ss
aad
mov
fxch
mov
ficoml
stos
icebp
jmp
or
aas
outsb
fimuls
test
cmp
fsubr
sahf
push
mov
ljmp
ja
shll
xchg
dec
cmpsb
sub
push
popa
jae
mov
cmp
sub
mov
daa
add
xchg
inc
add
fistl
adc
mov
push
push
and
lret
push
sub
scas
arpl
cwtd
sbb
ss
or
and
jle
arpl
jne
repnz
dec
je
std
lcall
outsb
ljmp
dec
mov
repz
mov
mov
icebp
mov
xchg
inc
jmp
push
cmovbe
fidivl
push
dec
and
scas
aad
cmp
jb
cmc
ret
mov
jb
aaa
mov
mov
fidivrs
mov
mov
mov
repz
xchg
std
movsl
sub
cli
jns
addr16
das
outsl
stos
imul
shlb
mov
sarb
cwtl
mov
push
mov
mov
push
mov
mov
fs
aaa
mov
sbb
xor
pusha
fstpl
cmc
loop
popf
adc
jl
jge
fldl
sti
xchg
aaa
sub
mov
jb
fnstsw
rolb
outsb
mull
cmp
aas
xchg
fisubrs
mov
sti
pop
shlb
push
xchg
and
aam
jo
mov
cmp
out
pop
pushf
push
jb
imul
mov
jae
test
adc
inc
insb
jb
add
imul
and
mov
cmpsl
adc
pop
shl
mov
movsb
clc
cmp
xlat
push
jae,pn
sbb
test
mov
sub
push
ja
adc
xchg
shlb
data16
fucomp
dec
xchg
jb
cld
jne
jmp
push
sub
je
mov
and
xor
hlt
cltd
and
xchg
jg
call
pop
push
lret
test
sbb
addr16
mov
xor
repnz
add
inc
outsl
out
int3
inc
gs
pop
sub
mov
das
sub
adc
sbb
mov
or
in
stc
cmp
cmpxchg
jmp
insb
xchg
mov
stos
lock
adc
sub
cwtl
clc
orl
xor
jg
lods
push
mov
icebp
xor
pop
adc
xchg
pop
es
mov
movsl
mov
in
jbe
fsubl
stos
in
mov
xor
xchg
mov
jno
xchg
cmpsb
cmp
aad
nop
leave
nop
aad
call
sbb
ret
cmp
sbb
in
dec
outsl
arpl
add
movsl
mov
jp
and
sub
ret
jp
dec
add
mov
jg
adc
cmp
xchg
mov
in
cmp
pop
scas
subb
es
push
jp
fbstp
xor
cs
push
xor
mov
xor
mov
out
arpl
cmp
fs
sbb
dec
adc
lcall
mov
mov
sbb
stc
inc
xor
outsl
sbb
pop
aas
popf
clc
pop
fisubrs
ret
jns
leave
or
lds
lea
loope
jge
aam
std
ret
dec
and
mov
mov
adc
sbb
push
sahf
clc
pop
cmp
lcall
pop
insb
mov
inc
jge
sub
adc
mov
hlt
add
cmp
xchg
or
lock
inc
pusha
outsb
mov
mov
imul
or
mov
push
or
push
ljmp
pop
mov
aas
xor
inc
jne
jb
leave
repnz
mov
cmp
scas
leave
divl
sbb
stc
add
push
or
push
push
pop
and
fcmovnu
lcall
push
sub
or
ret
add
fidivrl
aam
mov
popf
test
sub
sbb
mov
cmpl
dec
cmpsl
stos
rcrl
clc
push
out
cmpsl
out
into
lahf
clc
aam
into
iret
jo
enter
rcll
jg
mov
add
and
jg
mov
push
daa
cmc
push
adc
xor
xchg
orb
mov
or
in
cwtl
aaa
clc
rolb
push
mov
enter
mov
push
lods
pop
dec
test
dec
push
and
cmp
daa
sub
in
pop
mov
in
jae
ljmp
sti
aas
scas
mov
and
hlt
jbe
outsb
xchg
iret
sub
cld
pop
aas
cld
clc
pop
gs
lret
sbb
ret
ss
sub
andl
inc
mov
rcll
sar
loope
mov
cmpl
mov
sbb
mulb
pop
insb
imul
loop
popa
js
cmc
mov
adc
stos
jmp
adc
xchg
cmp
scas
lds
xchg
or
subl
loop,pn
push
pop
nop
pop
cmp
cmp
xchg
fnstenv
sbb
insb
jp
pop
rorb
dec
inc
cmp
jecxz
push
pop
inc
pop
lock
sub
jnp
mov
outsb
loope
fwait
and
push
or
pop
out
stos
jle
fsubr
arpl
xchg
xchg
call
or
mov
imul
cmp
xchg
xchg
sarl
push
pop
push
pop
mov
push
jp
lahf
pop
or
jb
xlat
out
into
addl
cli
arpl
clc
movsb
into
inc
mov
pop
aam
mov
inc
xchg
dec
inc
jl
and
sbb
test
lcall
ret
xchg
pop
xor
mov
ret
fsub
cmp
mov
add
adc
push
xor
push
int
add
xchg
sahf
dec
dec
movsb
push
mov
pop
call
cmp
cwtl
fdivl
mov
jle
sub
and
pop
jb
dec
loopne
push
push
outsb
fisttpl
scas
pop
idivb
dec
or
jnp
jae
out
fcoms
scas
mov
js
xor
mov
icebp
les
sub
mov
mov
mov
test
ss
or
aad
ja
andps
jl
hlt
jbe
stc
out
xchg
pop
lods
jle
jl
jecxz
lock
arpl
std
adc
scas
adc
add
mov
pop
push
subb
push
push
loope
insl
pop
lock
push
aam
push
out
dec
mov
push
aam
xor
in
xchg
push
mov
fdivrs
loope
xchg
sarl
ret
and
cltd
xchg
jns
jge
xor
fwait
adc
movsb
loop
js
pop
lfs
fldt
adcl
push
jmp
ret
xor
arpl
cmc
loop
inc
xor
filds
cmp
js
nop
out
add
lds
mov
dec
or
movsl
test
std
sub
xchg
sbb
lods
cmp
cmp
sbb
pop
inc
adcl
es
cmc
dec
push
gs
imul
adc
outsl
add
lcall
loopne
jp
test
cmp
mov
pop
pop
enter
xor
jns
jle
and
add
sub
mov
call
xor
faddp
dec
jb
or
or
inc
jl
cmp
xor
aad
outsb
cmp
mov
cwtl
cmp
fwait
jle
scas
jb
popa
lret
mov
fsubs
adc
inc
sub
movsl
jecxz
outsb
add
or
or
pop
xor
cmp
popf
movsl
ljmp
jl
cld
pop
or
out
out
call
cltd
jmp
pop
add
xchg
sbb
push
dec
dec
jmp
sub
inc
mov
cmp
cmp
cmp
je
adc
fdivs
mov
movsb
cli
or
jae
mov
fdivrs
or
pushaw
fildl
enter
js
decb
cmp
and
movsl
dec
loop
add
cmpb
nop
imul
cmp
in
pop
outsb
sub
in
imul
jp
aad
int
scas
xorl
mov
xchg
mov
loopne
xchg
inc
inc
mov
rolb
loope
inc
fnstenv
jo
inc
mov
mov
test
push
cltd
jp
fstpt
mov
sti
and
mov
push
xor
dec
insl
push
push
or
cmp
lahf
sub
sbb
xchg
outsl
das
test
fisubl
nop
ret
les
pop
cmpsl
clc
rcpps
xchg
shlb
cmc
push
push
sub
push
sarb
mov
idivb
leave
cmc
sbbb
cmp
mov
add
inc
mov
xchg
mov
add
xor
stos
xchg
mov
mov
mov
or
or
sbb
addr16
sti
pslld
and
and
dec
push
std
pusha
mov
xor
push
movsl
mov
imul
dec
cmp
mov
pushf
ja
shrb
ucomiss
mov
mov
mov
jge
add
pop
cmpsl
fcomps
lods
imul
in
daa
sti
cmc
popa
dec
and
fisttps
js
test
fimull
mov
pop
mov
jbe
sbb
ss
sub
inc
in
ret
fwait
jmp
lods
mov
dec
fcmove
sbb
push
data16
sbb
ljmp
mov
scas
cli
xchg
js
lcall
dec
adc
and
pop
push
pop
cwtl
out
ror
mov
mov
sbb
mov
addr16
data16
stos
imul
or
xchg
push
mov
sbbl
mov
mov
in
sub
jae
or
push
adc
pop
pop
test
push
lea
or
adc
dec
imul
insl
push
mov
cmp
fwait
in
mov
xchg
aad
lcall
hlt
icebp
lret
repz
ljmp
call
dec
xchg
dec
and
pop
xor
or
nop
or
xor
dec
xlat
add
call
cmp
cltd
push
xchg
xchg
stos
jp
or
pushf
add
sub
sbbl
jae
lds
js
outsl
test
mov
insb
sbb
ss
cmp
dec
adc
ljmp
jge
int3
test
hlt
es
dec
sbb
push
and
cmc
pop
mov
adc
dec
in
out
inc
addl
stc
sbb
mov
or
push
pop
mov
into
dec
into
inc
or
cmpsl
ds
push
in
push
jb
inc
push
setl
push
jno
xchg
daa
pop
sbb
stos
mov
sbb
fwait
mov
int3
xchg
adc
dec
stos
outsb
add
pusha
bound
or
cltd
pop
mov
pop
sbb
or
sub
subl
lret
ja
jae
insl
push
rorl
dec
inc
inc
xor
lods
sbb
pop
pop
or
xchg
jl
mov
add
jecxz
inc
fisttps
push
jnp
sahf
icebp
mov
cmpsl
idivb
cld
push
hlt
mov
roll
movsb
imul
xchg
xlat
add
imul
addr16
test
sub
mov
inc
loop
pop
pusha
mov
outsb
push
xor
ret
andl
mov
lods
int3
out
sarb
push
fisubs
insb
and
daa
jae
lret
pop
pop
aas
pop
pushf
sub
popa
push
cld
loope
sti
adc
sub
jns
dec
cmp
jo
jb
repz
call
jmp
test
xor
add
cltd
xor
fwait
mov
jl
sbb
insl
adc
xchg
push
add
adc
xchg
inc
in
mov
cmp
out
push
adc
dec
repz
lods
add
push
les
pop
hlt
aam
sbb
sti
fcom
mov
pop
add
lcall
cmpsb
sahf
dec
lods
and
pushf
pop
scas
out
repnz
xchg
stc
out
pop
in
movl
xchg
bound
imul
mov
inc
mov
or
sub
in
add
push
aad
enter
add
pop
sbb
pop
das
jge
les
dec
stc
icebp
shll
xchg
pop
mov
shrl
push
adc
pop
pusha
jns
and
std
sub
xor
jecxz
idivl
cmpxchg
adc
loop
outsl
and
or
mov
push
push
dec
xchg
jp
mov
pop
or
out
sbb
jns
jo
cs
jecxz
sarl
iret
imul
lahf
mov
add
into
repz
dec
imul
ss
xor
mov
sahf
or
push
xor
in
jge
jnp
ffree
out
mov
stc
cmpl
fldcw
fsub
cld
mov
fwait
outsb
out
add
cmpsl
mov
jns
xchg
aad
dec
sbb
push
cmp
outsl
push
movsl
stos
cmc
pop
or
mov
cmpsb
sub
imul
lods
xor
repz
xor
or
cltd
scas
and
jne
adc
or
jmp
fldt
shrb
int3
cltd
push
enter
cld
sub
fisubs
cmp
pop
addb
cmp
inc
fiadds
test
mov
lds
gs
dec
movsb
xchg
hlt
aad
out
fs
shrb
fisttpll
lcall
sbb
rorl
xor
mov
mov
lds
imul
sub
decl
roll
gs
shl
loopne
dec
jns
jae
add
add
push
mov
pop
outsb
mov
sbb
lcall
std
fdivrl
and
loope
cmc
add
out
mov
adcb
pop
test
adc
mov
and
xor
lds
mov
fsubs
lret
pop
aad
data16
and
arpl
fists
test
adcb
lcall
add
lret
sub
xor
pause
pusha
out
xchg
or
adc
sub
lret
daa
pop
mov
pop
repnz
std
repnz
jp
sub
idivl
sahf
dec
out
ljmp
mov
jbe
adc
pop
xchg
je
mov
cmp
mov
mov
mov
jg
push
mov
cmpsl
jno
test
jge
ret
mov
jbe
int3
inc
or
aas
or
pusha
popf
lds
pop
mov
dec
sub
shll
xor
jns
insl
sub
dec
add
xlat
arpl
xlat
sar
pop
mov
adc
je
pop
cmp
push
mov
inc
mov
mov
push
push
xor
orb
lods
es
jns
je
sbb
mov
add
jno
mov
sbb
arpl
pusha
pop
add
and
out
sti
dec
and
dec
outsl
les
test
lock
lock
push
pop
es
xchg
cmp
inc
and
addr16
pop
xchg
daa
jp
lret
adc
iret
xchg
fsubrl
sbb
dec
sbb
xchg
lock
dec
mov
cmp
push
push
hlt
pusha
ficoml
faddl
or
add
xor
test
inc
test
jle
sub
leave
pop
popf
adc
es
mov
push
xchg
push
loope
lods
sub
idivb
fwait
xchg
je
or
js
sti
loop
pop
clc
mov
into
add
push
fwait
mov
adc
push
cmp
mov
cmp
fs
inc
xchg
pop
lock
mov
jmp
sub
popa
push
sub
dec
mov
jmp
fbstp
xchg
jno
leave
xor
pop
loopne
scas
sbb
repz
cmp
xor
xor
jbe
inc
lret
xor
jns
mov
in
mov
mov
mov
data16
int3
adc
sbb
dec
es
add
adc
add
js
sbb
push
xchg
enter
es
dec
movb
dec
mov
add
xchg
sbb
in
cltd
push
and
gs
and
repnz
daa
test
pop
adc
jge
xor
jne
xchg
xchg
nop
pop
jne
ss
cmp
cs
sahf
hlt
dec
arpl
mov
mov
mov
dec
mov
incl
jmp
fs
push
out
test
testl
iret
inc
aad
outsl
xlat
lahf
testb
sbb
sbb
stc
out
or
int3
nop
cld
pop
pop
jo
mov
fimull
mov
pop
sub
jne
add
or
stc
mov
mov
fcmovb
mov
or
cltd
and
aaa
sbb
outsl
fnstcw
and
movsb
lods
inc
and
jl
push
ret
sbb
lods
xor
pop
pop
sbb
jbe
lds
sti
push
fiadds
pusha
clc
cmpsb
fiaddl
es
adc
mov
push
dec
ficompl
sbb
add
ds
rolb
mov
inc
lcall
jne
push
add
loop
out
scas
mov
jnp
push
mov
push
clc
ret
mov
mov
inc
xlat
ja
fwait
cwtl
not
cmpsl
mov
int
pop
xor
dec
loop
aaa
in
in
add
dec
sbb
out
rcrb
mov
daa
insb
imul
sbb
push
and
dec
addr16
sbb
je
testb
push
adc
jmp
mov
mov
mov
lods
jno
jl
sub
dec
pop
ret
mov
lea
stos
sub
xchg
rcrb
ret
sub
cmovbe
loope
add
jnp
ret
ja
inc
pop
add
or
div
pop
cli
inc
lock
das
jnp
ret
push
jnp
push
xchg
cli
mov
imull
sar
push
mov
or
and
cs
outsb
add
adcb
mov
ljmp
and
stc
fildll
dec
gs
stos
daa
pop
data16
js
cmpsl
pop
mov
insl
fs
mov
addb
imul
lret
imul
sbb
mov
sbb
adc
push
adc
stos
pushf
jg
clc
sarb
std
push
xchg
loopne
sub
pusha
pop
or
sarl
mov
cmp
sub
jnp,pt
and
in
jp
scas
shlb
jbe
jne
cmp
outsl
jns
adc
add
pop
js
dec
out
mov
cwtl
mov
xor
add
repnz
sub
fidivrl
nop
add
aaa
inc
cltd
shlb
outsl
and
push
lods
cld
shrb
ret
cmp
pop
pop
imul
mov
addr16
xchg
std
mov
ds
mov
cmp
popf
push
add
lret
dec
ror
icebp
cmp
rcll
dec
int
dec
sbb
adc
adc
popa
sbb
dec
add
or
jp
adc
mov
test
gs
xor
hlt
xor
imull
ror
pop
adc
adc
lods
sahf
sbb
mov
movsl
int3
push
mov
dec
xchg
aad
cmc
push
scas
idivl
ss
cld
lods
cmp
mov
sbb
xor
cmp
cli
xor
ljmp
out
inc
add
jae
test
adc
xor
mov
lds
int
mov
adc
rcr
lcall
hlt
lods
dec
dec
inc
cmp
mov
mov
add
sahf
add
notl
lret
scas
cmc
js
pop
incl
pop
rclb
mov
mov
mov
out
sbb
ja
xchg
jmp
rolb
inc
pop
mov
jmp
gs
sbb
fsubs
mov
ret
into
xor
sbb
aaa
mov
mov
hlt
inc
sar
mov
scas
cmp
test
loopne
cmpsl
fadds
mov
inc
mov
mov
outsb
cmpsl
icebp
cmp
mov
or
xchg
xlat
push
mov
lret
outsb
mov
shrl
mov
idiv
push
das
and
xlat
mov
mov
xchg
lret
xchg
jo
mov
bound
push
push
enter
xchg
add
stos
lret
or
add
jno
lods
imul
xchg
roll
fs
dec
adc
mov
lcall
and
lods
test
inc
xchg
leave
mov
movsb
mov
movsl
jb
mov
push
scas
xlat
neg
push
mov
add
in
out
das
push
pushf
pop
and
dec
fidivrl
mov
addr16
pop
or
repnz
dec
into
push
fxtract
mov
push
or
enter
lock
cltd
jb
xchg
pop
pop
xlat
mov
mov
push
pop
ror
sbbl
or
jl
daa
imul
lahf
pop
repnz
or
sub
push
lret
bound
mov
cld
out
jno
inc
pop
je
mov
xchg
mov
testl
outsb
sbb
mov
and
and
inc
push
sbb
push
xchg
mov
cmp
sub
adc
call
or
das
fucomip
fnstenv
inc
stos
out
paddw
les
mov
ss
sbb
ss
in
sti
xchg
aam
call
mov
inc
inc
sub
ret
bound
data16
and
iret
mov
add
jbe
fnsave
inc
mov
mov
push
jno
div
push
insl
xchg
cmpsl
or
mov
inc
fdivs
push
leave
lods
push
insl
stos
andl
adc
imul
adc
lahf
mov
daa
and
inc
jmp
pop
nop
mov
pop
jg
pop
mov
test
sbb
notl
or
inc
insb
mov
orl
dec
lret
and
sbb
gs
or
xor
insl
lahf
fildll
pop
pop
fwait
xor
setne
pop
dec
mov
sub
sbb
les
mov
pusha
imul
imul
leave
loope
push
adc
jne
sti
push
dec
fisubl
mov
ret
sbb
dec
xor
pop
enter
getsec
mov
xor
repnz
adc
test
push
lods
shll
mov
sbb
adc
lret
insl
adc
mov
xchg
xchg
fwait
mov
cmovae
mov
xchg
fmuls
lahf
jle
sbb
add
jecxz
sbb
push
cmc
sbb
pop
mov
cmpb
fsub
xor
aad
xchg
jae
pop
xor
mov
mov
jg
in
dec
or
cld
test
pop
or
outsl
in
inc
push
mov
lods
nop
add
aam
inc
std
loope
or
add
outsl
test
mov
test
ja
and
mov
in
in
adc
cli
into
clc
int
addr16
icebp
or
add
sub
jp
dec
sbb
dec
imul
mov
mov
dec
xorb
aas
cmp
mov
inc
loopne
xlat
sarl
xor
dec
xchg
in
cmp
mov
dec
sub
lock
outsb
sar
and
mov
jl
in
mov
mov
scas
enter
out
ljmp
cmpsb
fisubrl
es
jb
xchg
xchg
xchg
jb
out
jle
popf
lods
clc
inc
out
push
xor
sahf
enter
and
sahf
and
add
dec
sub
sbb
mov
add
pop
mov
cmp
pop
outsl
into
pop
loopne
addr16
xchg
mov
jnp
data16
fcoms
ds
mov
mov
xchg
inc
inc
lea
pushf
sub
push
js
test
mov
inc
push
ljmp
incb
jp
pop
aam
jo
push
nop
or
call
mov
ficomps
dec
inc
xor
cmpsb
jno
int3
cld
jmp
sahf
repnz
inc
arpl
test
ret
push
pusha
int
mov
repz
sarl
stc
das
mov
jo
xchg
xor
push
mov
jbe
insl
sub
push
sbb
in
aas
call
or
sub
loop
add
sahf
and
add
xchg
dec
fs
add
ja
loope
sbb
rol
sbb
add
dec
add
lods
and
sbbl
sbb
push
pusha
pop
push
xchg
roll
fmuls
push
rcrb
ret
push
pop
dec
fstpl
jbe
inc
cs
push
test
jno
mov
js
or
sub
lret
jns
lock
lock
scas
je
inc
inc
gs
jo
ret
add
inc
and
ficomps
nop
movsb
gs
enter
outsl
jmp
push
xlat
or
jmp
add
cmp
insb
shll
mov
out
mov
push
add
das
imul
scas
cmp
cwtl
push
xor
hlt
sahf
xchg
xchg
jns
fidivl
jno
shll
imul
jno
and
les
sbb
mov
sub
in
pop
mov
add
lea
add
add
push
inc
pop
dec
xchg
dec
xchg
dec
xchg
dec
push
mov
pop
jmp
lea
sub
insb
int
xchg
mov
bound
jp
repnz
jnp
aas
jae
mov
inc
popf
mov
popl
popl
xchg
add
cmp
push
decb
mov
push
ficomps
dec
cwtl
pop
lds
push
and
rolb
hlt
ds
es
mov
push
add
xchg
enter
and
sti
inc
cmp
add
mov
add
add
insl
push
pop
cmp
mov
repnz
pop
xchg
mov
cmp
and
xchg
in
mov
outsl
lahf
ror
or
xor
sbb
sbb
in
sub
lcall
dec
adc
cmp
test
enter
xchg
out
loop
aam
xchg
cmp
mov
testl
jl
pop
movsl
inc
outsl
dec
repnz
ss
dec
cli
jae
aaa
mov
sbbl
push
repnz
dec
gs
stc
add
push
mov
push
and
pusha
cli
mov
and
push
or
out
cmp
gs
fidivrl
push
pop
popa
sarb
cmc
insl
xor
or
lods
js
jnp
adc
and
in
adc
scas
inc
cmp
dec
mov
cmp
push
xchg
adc
jne
cmp
adc
pop
in
adc
out
or
sti
cmp
mov
cmpsb
sub
mov
jns
movsl
aam
dec
xchg
mov
add
jmp
daa
imul
mov
fisubs
frstor
mov
gs
sub
loop
stc
sbb
rcrb
push
xor
sub
loop
ja
aam
lds
ljmp
je
aas
cmp
cmp
test
inc
xor
outsb
int
cmp
push
sub
cld
pushf
enter
call
imul
sbb
js
ds
push
pop
sub
mov
push
pushf
fnstsw
sub
mov
ss
or
in
push
mov
gs
mov
pop
clc
inc
pop
sbb
insl
jg
jl
inc
push
js
push
dec
ror
or
addr16
int3
fucomip
jbe
test
pop
arpl
pop
push
popa
xchg
cmpsl
shll
fisttpl
in
jbe
pop
mov
shll
ja
jb
lea
dec
fs
loop
imul
cmp
cmpsl
ljmp
cmp
cmp
rcrl
adc
dec
out
in
push
sbb
movsb
or
sarl
or
dec
enter
div
flds
lods
aad
or
xchg
or
mov
add
imul
pop
mov
and
xchg
fisttpl
fidivs
xchg
js
push
enter
ret
mov
jae
pop
pop
ja
sarl
into
sub
leave
sbb
add
add
add
push
xchg
adc
xchg
mov
jns
sub
sbb
sub
stos
lret
pusha
xchg
mov
jb
arpl
cmpsb
mov
xor
movsb
jg
jle
dec
cmp
leave
or
iret
xlat
mov
sahf
jo
stos
and
pushf
in
xor
outsb
in
out
jb
shlb
test
cmpsl
and
addr16
popf
adc
clc
sub
inc
rorb
test
adc
add
cmp
and
push
cmp
xchg
movsl
pushf
stos
jo
or
sarl
cmp
imul
mov
jns
mov
mull
add
mov
push
cld
out
imul
jl
jecxz
jp
stos
jbe
aas
lds
or
lret
pop
xchg
sti
and
fstp
gs
das
mov
inc
imul
shll
mov
cmp
divb
cltd
fwait
jl
inc
loope
test
es
adc
xor
or
aam
push
aaa
outsl
gs
cs
daa
icebp
mov
inc
adc
push
pop
push
mov
xchg
sbb
fistpll
call
iret
inc
fstpt
ficoml
cmpsl
das
popa
lea
sbb
lret
lret
mov
sub
ret
pop
stos
mov
rcll
lock
or
sbb
shr
mov
or
xor
lds
push
sti
and
mov
jbe
adc
out
push
or
fcmove
aad
mov
jecxz
int3
sbb
adc
out
lods
ss
cmpsl
out
mov
data16
pusha
xor
arpl
jp
out
roll
and
int
movsb
nop
inc
lahf
es
nop
subb
mov
std
xor
testl
xchg
adc
testb
mov
sub
xlat
stos
ja
std
or
mov
pop
fstpt
shrb
sub
out
imul
jp
dec
out
cwtl
out
fldt
pop
add
or
sub
test
sub
in
daa
insb
jnp
xor
fdivrl
ljmp
dec
rcll
adc
movsb
lahf
pop
inc
hlt
cmc
mov
mov
sub
lcall
cmp
inc
ficompl
loopne
lret
mov
fwait
cs
cmp
adc
jp
cli
push
scas
pop
sub
lock
test
fisttpl
das
pop
xor
sahf
xchg
mov
xor
adc
pop
mov
adc
jmp
push
inc
xor
cwtl
imul
mov
mov
shl
fsubr
jnp
inc
loopne
cmp
push
pop
roll
adc
sbb
jle
jl
outsl
inc
sub
sub
add
mov
mov
sub
ja
test
xlat
xor
adc
repz
rcr
sub
loopne
popf
xchg
call
jb
inc
nop
ret
outsb
jns
insb
sbbl
mov
js
outsb
idivl
push
mov
aas
mov
loop
cmp
sub
mov
test
mov
out
xor
jp
aam
jge
cs
movsl
fsubrp
cmp
inc
add
xor
imull
inc
call
sbb
lret
incb
test
clc
je
fwait
data16
rcrb
mov
les
dec
jmp
push
movsl
or
mov
les
cmpsl
mov
orl
out
sub
inc
pop
mov
das
mov
fisubrs
mov
mov
movsl
test
sub
inc
jle
adc
xchg
scas
pop
pop
out
arpl
push
lcall
xchg
mov
add
fs
cmp
pusha
ds
aam
mov
popf
cwtl
sarb
outsb
mov
lods
adc
ja
inc
mov
rolb
add
es
aad
xadd
sub
shlb
mov
mov
add
inc
lods
or
test
push
adc
aas
call
int
sbb
iret
add
inc
loop
add
xchg
push
pop
mov
mov
mov
xor
mov
jecxz
orl
push
mov
cmpsb
jnp
ror
dec
data16
loopne
lahf
sbb
jmp
cld
gs
mov
jno
sbb
pop
xlat
flds
idivb
lcall
js
stos
mov
mov
iret
ficoml
enter
xor
xchg
arpl
mov
iret
push
jl
or
pop
minps
fmuls
jg
and
xchg
cmpl
int
add
cmp
xchg
imul
icebp
sub
loope
jne
pop
lahf
xor
pop
mov
incb
imul
outsl
xorb
stos
or
sub
in
pop
dec
in
xchg
pop
dec
mov
xor
mov
xor
test
cmp
movsl
sbbb
into
das
leave
mov
es
nop
lods
adc
mov
xchg
xchg
add
mov
jg
cs
mov
dec
xchg
pop
pop
popa
pop
pushf
test
insl
pop
in
xchg
sahf
lods
jns
ljmp
mov
xor
mov
insl
cmpsb
inc
push
sub
dec
pop
inc
jo
pusha
out
or
add
ja
or
imul
and
aas
add
loop,pt
and
enter
filds
push
popf
cwtl
inc
cwtl
jae
xlat
push
fcomip
lods
rorl
push
arpl
jae
test
roll
sbb
icebp
pop
iret
push
mov
cmp
xchg
or
ljmp
movsb
test
cwtl
pop
ret
mov
push
nop
mov
in
insl
and
mov
loop
push
fdivrs
mov
push
fyl2xp1
mov
aaa
mov
rcrb
fwait
xor
jmp
mov
shr
pop
lods
iret
imul
imul
sbb
pop
xchg
fs
xchg
jp
arpl
mov
sti
mov
lods
femms
pop
or
test
mov
aad
pcmpeqd
gs
push
xor
jns
std
enter
shlb
popf
add
filds
add
bound
sub
mov
inc
fstps
aad
lods
inc
mov
in
xchg
pop
push
adc
mov
decl
mov
out
pop
in
out
jecxz
mov
inc
xor
mov
jg
jecxz
repnz
cs
xchg
sub
shrb
fsubrs
movlps
inc
lea
adc
sbb
roll
scas
int3
pusha
out
fsts
dec
lret
pusha
ficompl
iret
in
test
loope
sbb
lods
out
das
pop
sahf
inc
dec
push
fsubl
loop
add
mov
add
add
int
loopne
in
or
push
push
lret
flds
adc
push
in
rcl
fwait
jmp
sbb
icebp
insb
out
mov
push
push
xlat
insl
or
lret
or
inc
lret
jg
and
sub
pop
cwtl
stos
push
xchg
out
sub
xchg
outsb
adc
inc
sbb
add
cmp
jmp
divb
dec
sbb
mov
push
xchg
sbb
xchg
xlat
jo
xor
daa
movsb
test
sahf
cli
in
inc
xor
gs
dec
in
xor
les
repz
cmp
cltd
and
sar
jmp
incb
lret
sti
ret
mov
rorl
cmp
mov
mov
mov
movsl
push
sti
cmp
jge
push
scas
jo
push
out
push
xchg
sub
push
std
inc
lret
pop
pop
lret
pop
cmp
adc
scas
xlat
push
arpl
push
out
inc
mov
arpl
push
das
push
push
es
adc
inc
test
into
scas
sub
gs
and
mov
cmp
rolb
and
mov
push
adcl
aaa
shrb
icebp
enter
pop
mov
mov
lcall
adc
ljmp
mov
testl
mov
jecxz
mov
fldt
out
cwtl
pushl
pusha
add
cld
cmp
xchg
lret
mov
fisubrs
je
add
sub
jnp
jae
ljmp
mov
sbb
rcr
icebp
xchg
nop
sbb
fimuls
fs
add
pop
out
imul
xor
jnp
sub
dec
fisttps
bound
pop
push
mov
repz
push
scas
test
and
ljmp
add
jae
les
push
mov
mull
repnz
sub
les
pushf
adc
iret
out
pop
jmp
sub
inc
jmp
dec
or
xchg
jge
inc
inc
sub
pop
shlb
pop
mov
int
xorps
insb
jno
int3
jl
pop
jmp
sub
pushf
cmc
dec
cmpsb
sub
stc
rcll
push
leave
imul
stc
nop
adc
jno
dec
sub
dec
mov
ror
inc
pop
mov
xor
std
jnp
xor
pop
cmp
pop
out
add
sbb
and
mov
push
jmp
push
mov
data16
sub
icebp
js
fmuls
mov
test
sub
lods
push
lret
scas
push
or
dec
sbbb
call
in
clc
test
sub
add
and
pop
ljmp
xchg
pop
ficoml
sbb
dec
aam
fst
movsl
int
mov
imul
popf
insb
loop
mov
ret
pop
lret
cmp
int3
repnz
sub
mov
mov
cmpl
into
dec
xchg
xor
scas
rcl
xor
add
cltd
mov
add
cltd
or
call
or
ljmp
lock
sub
inc
and
pushf
sub
xchg
cmp
out
ficomps
mov
test
mov
xor
mov
pop
push
pushl
and
jp
lret
lret
fucomi
lods
pop
mov
adc
insb
mov
cmpl
mov
testb
and
lret
insl
popa
mov
ljmp
push
cltd
lods
call
dec
lcall
xchg
cmpb
jb
mov
in
fwait
and
pop
add
jge
pop
adc
or
sbb
shll
cld
add
mov
pop
jne
push
fdivrp
dec
fisubrs
xlat
or
jecxz
ret
lock
sub
add
das
push
mov
into
push
loopne
fistpl
imul
test
test
rorb
pop
jecxz
es
imul
cmpsb
xchg
lea
mov
sarb
addr16
sub
mov
dec
movl
mov
addr16
push
popa
jl
jne
dec
jmp
push
js
aas
faddl
pop
arpl
jp
dec
loopne
in
aad
xlat
push
xor
pop
unpckhps
sub
push
push
ds
out
popf
fcmove
pushf
pop
enter
mov
dec
mov
cmpb
pop
cltd
push
push
sarl
xchg
iret
pop
jae
pop
or
xchg
fstp
cmp
and
test
fidivrl
test
sbb
call
rorl
mov
push
insl
pusha
inc
notl
js,pt
aam
movsb
andb
lds
jno
cmp
dec
mov
pop
mov
pop
pop
clc
movsb
enter
outsl
sbb
lret
daa
inc
leave
movsl
les
out
data16
xor
or
pop
insl
testl
aaa
pop
xchg
mov
ret
or
test
dec
xor
push
enter
pop
pop
adc
test
cmp
pop
push
lds
xorb
mov
xchg
shll
in
inc
sahf
dec
ljmp
lds
sti
adc
jb
js
mov
aaa
cmpsb
add
inc
lods
mov
push
mov
stos
and
inc
adc
ds
cltd
incl
mov
dec
mov
sub
mov
cltd
xchg
loop
adc
int
imul
mov
add
ds
pop
mov
fsubrl
and
add
aas
inc
pushf
icebp
scas
ficoml
orl
mov
cmp
scas
xchg
ret
inc
fucomp
jns
cmpsb
jo
or
out
mov
dec
and
popl
push
out
rolb
push
stos
pop
push
mov
dec
adc
pop
jle
rcrl
dec
push
pusha
jp
imul
jecxz
aaa
sbbl
fsubr
xlat
push
xchg
psllw
xchg
call
arpl
mov
bound
in
adcl
mov
adc
ficoml
jno
push
push
mov
inc
cwtl
dec
xor
pop
sbb
pop
and
mov
ds
pop
sub
inc
mov
out
iret
pop
and
inc
and
xchg
jns
nop
sub
sub
adc
out
into
sub
sbb
xor
lods
adc
sti
lods
and
call
fsts
js
and
inc
jp
xlat
addr16
mov
lea
mov
lret
imul
fmuls
cmp
ja
dec
xor
lds
inc
xchg
mov
out
mov
shlb
mov
push
aam
lret
cmc
xchg
xor
sbb
repz
inc
stos
shlb
std
and
dec
lock
cmp
pushf
xor
lcall
aaa
pop
xor
stos
gs
lret
jnp
xchg
lea
inc
xlat
mov
arpl
xor
or
sub
or
leave
pop
sbb
and
push
jno
lret
shrl
jmp
cmpsl
adc
cld
mov
stos
or
pop
or
ja
sti
adc
lods
and
and
pusha
xchg
loop
sbb
dec
pop
jo
jmp
push
adc
jno
dec
jae
pop
pop
fnstcw
gs
pop
pop
mov
jmp
ss
push
stos
fimuls
jno
ret
lea
push
mov
xchg
sub
in
mov
pop
addb
cmc
arpl
sbb
push
and
mov
mov
sbb
int
inc
mov
data16
or
fs
xchg
mov
push
mov
xor
pop
sti
loop
xchg
popf
jp
push
insl
loope
sbb
add
pop
inc
mov
lret
dec
push
or
pop
mov
mov
adc
call
sbb
pop
cmc
xchg
leave
ret
mov
pop
mull
inc
or
xor
adc
shll
fcoml
mov
dec
jno
ds
inc
adc
movsb
sub
adc
mov
xchg
pop
mov
pusha
test
jl
mov
pop
mov
outsb
push
push
imul
mov
lret
in
pop
xchg
sub
jge
jmp
adc
jmp
div
mov
mulb
and
popf
lcall
lret
fcmovbe
xlat
pop
aad
jle
mov
adc
add
add
xor
jne
xchg
out
int3
loop
ret
js
mov
stos
push
mov
adc
out
sbb
rolb
jne
mov
es
pop
sbb
sub
ljmp
das
push
icebp
xlat
pop
clc
dec
mov
sarb
rclb
leave
push
mov
inc
fs
scas
pop
mov
jecxz
fldt
test
push
fildll
push
imul
lods
and
inc
xchg
pop
nop
mov
xor
icebp
jns
adc
and
sub
jb
scas
imul
loopne
ja
lods
cmp
mov
and
adc
or
out
cmp
cmp
popa
insb
inc
add
lret
sbb
inc
ljmp
pop
nop
ljmp
push
movsb
gs
and
push
pop
inc
mov
lret
shrb
push
jp
fistl
mov
lretw
popa
inc
sbb
aam
push
and
xchg
lcall
out
and
pop
and
inc
lret
cmp
push
mov
push
and
mov
xchg
mov
out
xorb
enter
mov
outsb
pop
cmp
adc
outsl
insb
insb
scas
dec
mov
sbb
push
lods
outsb
mov
ljmp
jae
fldt
mov
ret
pop
push
xchg
or
bound
or
das
fsubrl
call
popa
mov
imul
in
roll
hlt
adc
pop
sbb
pop
mov
cmp
into
xchg
lcall
jle
pusha
or
stc
jb
repnz
mov
scas
jg
pop
ja
or
add
call
xor
ret
icebp
andb
dec
int3
mov
cltd
push
rcll
das
mov
in
fbld
sbb
pop
sbb
enter
dec
enter
xchg
xor
mov
xor
aaa
inc
mov
test
ret
mov
cmp
mov
lcall
into
push
ljmp
sbb
lock
mov
jl
and
lods
cld
adc
mov
repnz
mov
int3
xchg
inc
push
dec
jns
pop
jl
cmpsl
sub
xchg
lods
xor
cltd
test
add
andb
mov
jo
fsub
repz
xor
mov
test
lock
leave
add
or
and
out
or
test
inc
cmp
adc
sub
scas
rcl
stc
push
stos
loopne
pusha
popf
arpl
or
dec
mov
shl
xchg
sti
lcall
lcall
pop
xor
nop
jns
inc
cmc
cli
jmp
cmp
mov
jecxz
jne
aam
sub
mov
inc
jb
lcall
xchg
mov
push
daa
ret
add
cmp
daa
mov
divl
ret
add
jmp
dec
clc
aad
out
aam
iret
cmp
push
add
jl
bnd
es
pop
push
ja
inc
adc
mov
pusha
test
je
push
andl
push
jp
pusha
xchg
ret
call
xchg
dec
daa
dec
ret
in
lret
out
inc
loope
sub
stc
inc
ljmp
add
mov
hlt
out
cli
std
rcrb
xchg
pop
int3
cmp
mov
adc
pop
dec
mov
sbbb
out
mov
mov
ficompl
mov
ficomps
pop
call
push
call
loope
fmull
mov
loope
pushf
lods
push
cs
std
jecxz
push
rcl
in
inc
dec
mov
mov
insb
out
js
push
pop
addr16
mov
xchg
jmp
xchg
xor
and
bound
xor
adc
cmp
inc
sbb
push
push
add
xor
decl
loop
jge
pop
adc
test
cmp
outsw
mov
push
ljmp
cmp
add
cs
std
jmp
ret
inc
and
inc
fstpt
jns
fstpl
jnp
mov
fisubrs
cwtl
movsl
xchg
dec
divl
push
inc
stos
pop
jmp
adc
xchg
andb
mov
adc
cmpsl
aad
aad
shl
or
test
ret
cmp
and
dec
mov
sarl
xor
ror
pop
ret
xchg
iret
cs
cmp
inc
xchg
das
lods
adc
push
adc
push
leave
push
int
dec
daa
dec
and
cli
sub
pop
pop
push
es
jae
mov
xor
add
cmp
test
pop
cmp
mov
or
in
shll
push
xchg
jg
cli
mov
mov
fstps
xlat
dec
xlat
dec
adc
inc
sbb
lret
jmp
ja
push
inc
mov
cmpsb
js
in
aaa
insb
or
xor
sub
or
ret
pop
lea
pop
sub
add
pop
cmc
jp
ds
jno
dec
lods
cmp
leave
aas
popf
hlt
out
mov
outsl
cmp
rcl
mov
sbb
call
loopne
push
fnstsw
stos
repnz
mov
or
xchg
inc
test
aaa
add
mov
xchg
push
out
jne
sbb
mov
cmc
cmp
inc
mov
xor
push
mov
and
jmp
inc
mov
hlt
dec
loope
sub
and
and
sub
xchg
jl
in
jnp
add
cli
movl
mov
in
stos
test
push
adc
call
adc
sbb
mov
push
sarb
pop
or
lret
test
enter
push
cmp
jl
inc
out
iret
js
jge
je
push
cwtl
inc
in
rol
pop
adc
movsl
test
mov
sub
xchg
xchg
adc
iret
xor
add
mov
cltd
leave
stc
aam
xlat
lcall
push
test
inc
bound
inc
xlat
lea
xor
mov
rcll
mov
popa
lret
sbb
lret
jae
jbe
and
shl
lea
insb
iret
adc
test
inc
loopne
fwait
add
pop
adc
jne
lods
inc
cs
aaa
out
push
cmp
insb
sub
dec
adcb
aas
testl
or
loop
cmpsl
aam
gs
dec
pop
or
push
js
pop
mov
test
sbb
push
ret
aaa
rcrl
jle
ja
fisubs
mov
mov
call
mov
and
das
mov
xor
dec
stc
repnz
int
dec
cltd
sti
add
movsb
cmpsl
repnz
js
cld
add
cmp
push
cmc
lcall
lcall
pop
cld
xchg
ds
xlat
xlat
jnp
clc
fs
stc
rcr
movsl
sub
repz
pop
xor
into
sub
ficompl
es
push
mov
and
mov
push
jbe
pop
ljmp
mov
xor
sub
mov
fmuls
push
negb
sahf
adc
mov
lock
sub
mov
into
lret
pop
push
push
test
xchg
cmp
xchg
aam
addr16
adc
push
and
ret
pusha
repnz
outsb
inc
jb
and
imul
in
pause
test
adc
sbb
mov
ret
int3
sub
mov
test
in
push
or
fwait
xor
bound
cmc
xchg
repz
mov
in
xchg
jg
aad
loopne
add
jg
xchg
fmuls
lret
inc
dec
xor
sti
adc
les
or
call
inc
movl
adc
pop
jle
jge
push
mov
jecxz
scas
adc
bnd
mov
ror
jmp
sub
lahf
clc
push
call
inc
jns
sti
pop
movsl
adc
sti
stos
jmp
sbb
pusha
or
call
jno
cmp
shrb
aaa
sbb
xchg
xchg
dec
add
inc
mov
fwait
xor
cmp
push
test
mov
jnp
mov
mov
inc
cwtl
mov
ljmp
mov
push
pop
sub
out
xor
push
push
xchg
insb
clc
push
pop
mov
xchg
pop
jl
scas
mov
sti
dec
push
cs
insb
cmp
lret
pop
jp
sub
mov
jns
shlb
in
lock
stos
mov
add
cmp
fcoms
cmp
cli
hlt
scas
mov
mov
jg
mov
dec
mov
mov
mov
out
lcall
ljmp
lds
daa
pop
jmp
mov
xor
jmp
mov
test
lea
jnp
es
xchg
xchg
xchg
hlt
pushf
push
xchg
push
xlat
das
mov
cmp
das
inc
cmp
sbb
out
leave
hlt
adc
cmpb
inc
ret
out
fnop
xor
jb
sbb
lock
push
outsw
repz
pop
gs
rcrl
cmp
xchg
and
lcall
and
push
xchg
shlb
cwtl
xor
dec
xor
int
xor
out
xor
mov
sub
push
int
repnz
cmp
not
xorb
jmp
pop
pop
fbld
fdivrl
and
xor
stc
flds
pop
and
mov
mov
lret
imulb
dec
mov
cmp
adc
fdivrl
lea
inc
sub
push
cmp
in
cmp
mov
jl
out
andb
arpl
mov
out
xchg
aas
or
imulb
repz
mov
mov
hlt
jo
int
leave
push
mov
dec
shll
adc
adc
incl
xor
cwtl
fmul
fs
mov
int
jmp
xchg
inc
mov
sti
test
lds
mov
aad
std
mov
scas
pop
and
sbb
mov
mov
jecxz
out
or
fimuls
dec
and
incl
cld
add
and
mov
jns
ljmp
scas
js
orl
sub
mov
pusha
daa
sbb
adcl
jmp
das
bound
cwtl
push
adc
pop
jmp
add
push
mov
mov
ja
scas
sbb
popa
adc
pop
lret
cmp
inc
mov
push
daa
das
das
xor
roll
das
sahf
in
cmpsl
dec
data16
add
fwait
pop
lea
push
fwait
pop
dec
cmp
cmp
out
sbb
test
dec
jp
popa
fldl
pusha
mov
or
dec
cmpsl
cmp
test
mov
daa
pop
incl
mov
daa
cmpb
shlb
fidivrl
mov
ljmp
cmpsb
repz
inc
aam
push
test
jnp
xchg
ljmp
imulb
test
test
push
sbb
dec
inc
pop
leave
loopne
dec
jnp
add
imul
xchg
pop
fisubrl
pop
ret
mov
dec
pop
data16
push
mov
int3
xchg
stos
and
mov
jl
incl
test
ret
cli
lret
lcall
cmp
pop
jns
movsl
pop
sbb
add
jb
dec
inc
or
pop
add
popf
sub
adc
shl
xchg
cmpsb
or
das
cmp
mov
or
aam
loop
mov
mov
sbb
mov
test
subb
lods
jmp
cmp
call
xor
in
add
lret
sbb
or
push
or
std
pop
jg
sbb
scas
push
or
pusha
xchg
cmp
sahf
or
incb
sbb
fdivrs
cli
lock
stos
int3
push
in
hlt
int
jne
jno
push
repz
mov
cwtl
jmp
daa
frstor
cwtl
pop
stos
inc
cmpsl
cmp
clc
pop
ss
out
mov
and
adc
shrl
push
or
cltd
clc
loope
inc
mov
pop
aas
repnz
ret
sub
int
fnstsw
add
in
sarl
jp
xor
xor
js
iret
inc
test
dec
insb
int
mov
adc
sahf
cltd
inc
and
pushf
inc
jecxz
sub
movsb
adc
imul
xchg
ficoml
das
test
dec
mov
iret
mov
je
out
xlat
adc
sub
dec
ss
lods
pop
and
out
stc
loop
adc
faddp
xor
hlt
jmp
or
lcall
dec
call
xlat
js
les
jbe
cltd
bound
loop
mov
mov
pop
shrl
cmp
cld
jns
add
inc
das
mov
xchg
inc
xchg
push
mov
bound
sbbl
push
jl
nop
xchg
pusha
outsb
pop
dec
add
dec
mov
test
test
mov
push
mov
xchg
mov
push
cli
arpl
faddl
jno
jecxz
je
js
les
in
pop
mov
cltd
jnp
loope
inc
lret
jecxz
sub
or
pusha
sbb
andb
out
sbb
inc
adc
pop
sbb
sti
xor
loop
mov
les
dec
call
cmp
je
xchg
push
pop
dec
push
pop
inc
xchg
inc
sub
xchg
jmp
mov
je
fs
stc
cmp
cmpsl
jne
and
mov
jnp
cwtl
jnp
pop
ss
jne
sub
iret
mov
fwait
jecxz
ret
mov
xchg
xor
xor
jp
fsubs
sub
lahf
xchg
ja
or
xor
push
jbe
insl
idivl
test
xchg
cmp
sarl
out
push
dec
fwait
js
jae
jns
push
repz
in
sub
cmp
popf
rcll
mov
xchg
xchg
arpl
sub
xchg
dec
cwtl
xlat
mov
lret
int
pop
mov
sub
sbbb
jns
add
adc
iret
pop
std
mov
arpl
imulb
xchg
xchg
insb
andb
icebp
stos
loop
adc
inc
pop
fwait
push
das
push
filds
or
push
dec
cwtl
push
push
stos
push
dec
cmc
fadd
and
mov
pop
jp
mov
dec
aas
mov
jnp
and
jns
cmpsl
cwtl
mov
and
push
cs
jae
outsb
cmp
and
pop
paddd
out
adc
in
cs
ja
xor
xchg
mov
xchg
out
push
lret
sbb
pop
test
shlb
out
outsl
mov
jecxz
cli
and
lret
test
ds
adc
pop
mov
inc
lods
adc
dec
mov
pop
rcll
sbb
xchg
test
shrl
cmpsb
addb
jo
dec
push
fldl
and
and
sub
mov
pop
stos
popf
iret
out
das
add
adc
fdivrs
pop
out
test
arpl
mov
mov
lahf
scas
and
js
mov
stc
mov
push
gs
sub
mov
repz
sbb
stc
out
sbb
out
push
imul
jnp
test
outsl
gs
push
lods
fsubrs
mov
add
push
cmp
shll
test
roll
jg
enter
jge
movsl
sub
pop
pandn
and
mov
or
sti
xchg
xor
xor
leave
sub
aas
inc
mov
mov
push
mov
ljmp
dec
fimuls
shl
das
pop
rolb
and
pop
cli
dec
xchg
test
pop
mov
sub
mov
cmp
xor
sbb
mov
sbbb
or
out
loopne
pop
testl
dec
mov
out
fwait
push
cwtl
pop
stos
lds
or
test
pushf
icebp
push
call
or
push
jno
push
in
lods
ljmp
daa
fstps
jne
imul
stos
iret
ja
pop
and
inc
add
cmp
in
leave
jae
popf
mov
push
mov
cmp
add
inc
mov
sub
js
dec
pop
outsb
scas
jns
aad
cmp
xor
es
cmpsb
insb
adc
pusha
add
jne
dec
inc
xchg
stos
fldlg2
inc
dec
fwait
mov
gs
arpl
icebp
sarb
pop
dec
mov
daa
xchg
mov
adc
cmp
add
clc
ret
jbe
outsl
in
hlt
or
mov
testl
es
pusha
scas
cmp
adcl
imul
sti
xchg
and
std
loope
ds
mov
xchg
aas
jg
push
push
and
xchg
mov
push
scas
add
or
aas
stc
jecxz
int
lds
xor
jge
fisubs
push
int
xor
jge
inc
pop
mov
insl
ja
xchg
xor
jp
test
lea
add
mov
testl
sbb
jne
or
xor
pop
movl
das
xor
or
clc
scas
jmp
fnstcw
xchg
mov
insb
push
xlat
cmp
fcoml
cwtl
out
bound
mov
cmpsl
inc
rclb
cmp
mov
push
enter
pushl
call
xor
inc
paddq
jne
rcrl
rolb
imul
mov
jl
stos
movsl
inc
inc
sarl
dec
or
bound
push
out
andl
jae
fldt
sbb
fucomp
jle
xor
mov
les
adc
mov
and
sbb
xchg
adc
inc
xor
lock
in
push
mov
addb
jo
sarb
scas
addr16
cmp
xchg
fadd
mov
fists
jg
movsb
test
mov
pop
inc
mov
mov
dec
push
shrl
out
paddw
leave
push
daa
stos
inc
xchg
call
mov
adc
jo
rclb
movsb
sub
mov
xor
inc
inc
jbe
sub
xor
in
mov
mov
mov
jno
add
pop
and
cli
lods
inc
sti
hlt
dec
cltd
dec
xor
outsl
pop
fcompl
jns
cmp
pusha
adc
lds
cmp
mov
loopne
jecxz
mov
ficompl
fnstenv
mov
jp
out
lea
scas
pop
mov
cwtl
loope
and
mov
aad
xchg
xchg
pop
popa
lahf
adc
lcall
scas
dec
pushf
mov
push
adc
adc
lock
loope
jo
push
clc
pop
push
in
das
or
push
in
add
insl
xchg
jmp
call
rcrb
inc
push
lds
lahf
leave
push
inc
mov
popa
sub
cmc
mov
sbb
push
jg
or
mov
cwtl
add
test
push
fidivrl
ss
ret
xchg
sub
js
pop
dec
test
xor
pop
xchg
pop
repnz
lret
aaa
popa
pop
dec
daa
push
cwtl
out
mov
pop
aam
push
pop
aad
lcall
jg
test
dec
pop
jl
add
lea
fs
jge
adc
sub
std
shll
sub
dec
pop
shlb
scas
mov
repz
movsb
xchg
test
sub
xchg
and
test
mov
push
lea
mov
jb
cmc
aaa
loopne
test
fdivrs
mov
divb
adc
lods
add
pop
mov
aad
pop
shlb
mov
cld
jb
or
mov
sar
sbb
std
enter
sub
arpl
push
pop
inc
push
xor
jl
adc
lods
into
addr16
mov
sbb
or
dec
adc
int
test
dec
pop
mov
out
aam
add
xchg
add
pop
lods
adc
nop
sbb
fstpt
mov
ja
adc
or
push
add
imul
mov
cltd
or
xchg
addr16
fldl
sbb
hlt
sub
jp
lds
pop
cmpsb
add
fstp
shr
adc
dec
rcrl
scas
fs
aad
xor
mov
imul
adc
sbb
rcrb
aad
out
fabs
mov
bound
push
ja
dec
adc
lcall
sub
push
jl
lea
push
out
cli
clc
ljmp
jle
sbb
sbb
scas
xlat
lds
js
lock
out
imul
sub
xor
in
repz
ret
test
xchg
sbb
dec
jnp
pop
inc
stos
inc
push
jno
fisubl
lret
jns
imul
fmul
bound
flds
fisubs
dec
add
sub
jno
fstpt
push
arpl
jae
sub
cld
pop
movsb
cmc
mov
sub
in
test
dec
push
fisttpll
mov
aas
fadd
pop
jge
dec
push
fldt
adc
imul
cmp
loopne
mov
mov
jo
fldcw
shll
cs
pop
rorb
daa
mov
and
ficoms
aad
lds
int
pop
pop
mov
mov
addr16
and
or
insb
dec
cmp
je
or
stos
int3
in
push
fwait
xchg
lods
xchg
aad
xchg
in
je
sub
data16
notl
fnstsw
rorb
cmp
sub
das
jno
bsf
lds
movsl
xchg
call
lret
outsb
pop
sbb
cmc
mov
xchg
xchg
stos
enter
pop
cs
mov
pop
push
mov
mov
sbb
pop
mov
xchg
mov
in
ds
rcr
add
mov
call
les
push
mov
movsl
jmp
adc
cmp
dec
pusha
dec
lods
pop
xchg
sbb
repnz
sbb
and
mov
fisttpl
popa
or
enter
ds
mov
mov
rclb
pop
pushf
add
mov
mov
js
aas
dec
mov
andb
mov
xchg
cmc
sub
mov
repnz
cmc
bt
mov
stc
movsl
mov
sub
leave
xchg
cmp
pop
jne
xchg
add
mov
xchg
js
dec
push
mov
je
cmpsb
dec
or
pushf
jbe
sti
loop
inc
pop
sar
ss
cmp
lret
lods
xor
inc
decb
sti
inc
shll
outsl
inc
repz
cltd
imul
adcl
push
jne
mov
push
adc
je
adc
sub
xor
mov
sbb
in
clc
in
sub
addb
test
mov
push
jae
mov
sahf
bound
pop
loopne
popa
sahf
xor
push
out
push
clc
xchg
dec
cmp
push
and
pop
and
cmpb
push
nop
repz
addr16
fistpl
and
mov
pop
jo
add
movsb
push
mov
stc
jo
sbb
cld
or
xor
jo
and
cltd
das
sbb
out
fs
imul
push
aaa
hlt
mov
jnp
outsb
ja
push
scas
je
dec
pop
and
faddl
loop
push
out
dec
mov
test
shrl
test
or
jmp
mov
sbb
fwait
pop
jae
pop
imul
stos
push
sbb
cmp
inc
pop
pusha
mov
adc
arpl
pop
add
inc
cmc
or
jge
fwait
dec
dec
adc
movsl
mov
jno
aaa
mov
xor
adc
fldt
leave
mov
rclb
das
cs
imul
scas
or
popf
pop
mov
cmp
repz
out
dec
sarb
loop
sbb
and
out
mov
xor
gs
push
mov
out
push
xlat
xchg
sbb
scas
icebp
pop
in
ss
mov
jne
dec
cs
push
sbb
hlt
fdivr
das
test
ret
addr16
movsl
insl
jne
outsb
in
mov
mov
mov
inc
fucom
ret
push
stos
aam
push
pushf
out
pusha
fnstsw
add
push
mov
mov
les
mov
adc
push
sti
dec
dec
aad
xchg
mov
hlt
stos
jno
aaa
and
adc
jns
in
lret
sub
sti
sub
cwtl
sub
jnp
mov
adc
imul
pop
clc
sub
cmp
aad
mov
lds
pop
mov
insl
sub
jl
ret
iret
leave
sub
fistl
push
cmp
pop
xchg
mov
add
sub
les
out
mov
or
lcall
mov
fidivrs
les
decb
stos
jp
mov
push
jmp
mov
jg
arpl
faddp
xlat
xchg
stc
jle
aas
iret
add
lock
mov
and
outsb
adc
dec
iret
loop
outsl
push
ja
aad
aad
mov
aam
out
mov
nop
cmpsb
push
mov
cld
popa
dec
and
js
por
out
push
fbstp
sbb
push
aam
and
xchg
mov
and
je,pn
inc
dec
jo
std
aad
outsb
push
repz
fildl
cmp
je
iret
test
adc
cmp
aad
push
xchg
dec
icebp
pop
movsl
cmp
jmp
jno
data16
popa
push
xor
std
sbb
mov
fs
out
iret
out
pop
cltd
cmp
xchg
scas
pop
sub
rclb
pop
push
fildll
cmp
iret
pop
iret
inc
test
mov
jnp
divb
test
adc
adc
push
data16
jp
push
les
lock
mov
inc
push
push
cld
cmp
fstps
cli
push
lock
mov
movsb
cld
jns
and
out
xchg
mov
add
inc
push
aas
in
lea
arpl
sub
mov
sub
jp
jmp
dec
test
or
sahf
insl
sbb
jne
mov
mov
mov
sub
mov
or
negl
lock
and
sarl
lret
push
lock
xchg
jbe
loop
loopne
rolb
movsb
cltd
call
adc
hlt
dec
mov
mov
push
int3
rorb
jp
mov
inc
fcomip
stos
or
mov
jl
xor
mov
jl
or
pusha
pop
ss
insb
sub
aaa
cmp
mov
add
popf
addr16
test
adc
mov
roll
mov
iret
in
test
mov
in
add
test
dec
gs
out
jge
test
sbb
mov
out
push
in
aam
dec
and
clc
sub
jns
aam
add
or
mov
dec
mov
scas
out
ret
rcrb
movsl
repz
inc
int
push
or
fiaddl
lds
mov
add
cmp
cli
loopne
sbb
loopne
imul
dec
je
into
je
jecxz
mov
mov
mov
mov
dec
add
mov
je
xchg
cmp
adc
jns
push
push
mov
lcall
lret
jmp
push
dec
add
xor
mov
push
inc
lcall
ja
xor
mov
ret
fstps
shlb
sub
ljmp
push
mov
jmp
ret
xor
fcomip
add
jecxz
or
in
pop
jmp
dec
paddw
add
dec
loopne
xchg
nop
lock
xchg
xor
add
mov
pop
dec
int3
lock
fsts
xor
mov
in
js
sbb
mov
mov
subb
test
leave
xlat
leave
cmp
daa
push
sar
mov
sbb
mov
add
inc
push
or
mov
loop
and
cmpsl
into
or
mov
sub
mov
repz
cmp
xlat
movsl
fimuls
pop
dec
adcl
movsl
or
stc
cli
add
adc
xchg
mov
push
sbb
adc
icebp
mov
in
mov
cmp
shrb
fildl
cs
icebp
fdivl
in
lods
dec
xchg
sbb
js
cli
icebp
sub
or
test
enter
pop
fcmovbe
adc
jne
pop
test
xchg
mov
movaps
popf
loope
call
je
andl
cmpsb
mov
sahf
jl
scas
mov
pop
pop
aad
pop
sbb
mov
pop
add
movsb
pop
dec
mov
push
mov
mov
pop
pop
shrl
mov
dec
movsl
fimull
sub
in
cwtl
mov
jl
cltd
popa
mov
repz
pop
sub
inc
ss
cmp
test
fwait
scas
std
or
ja
push
jp
and
je
inc
jb
outsl
mov
call
ss
mov
push
adc
nop
aad
sub
or
je
mov
or
stos
out
push
mov
out
hlt
push
lcall
push
jg
in
cmc
test
mov
sahf
inc
dec
pop
ljmp
pop
xor
in
into
xchg
movsl
cmp
push
mov
sub
out
dec
dec
loopne
dec
or
andb
aas
xor
fldl
and
sti
jbe
push
loopne
mov
or
test
or
pop
jp
daa
mov
addl
aad
dec
adc
xchg
mov
add
or
xor
insl
and
cwtl
inc
jb
xchg
xchg
xchg
shr
inc
adcb
adc
es
push
bound
mov
pop
je
lock
mov
push
fwait
arpl
fisubs
jmp
sub
pop
pushf
lea
lret
xchg
adc
es
mov
insb
fdivrl
mov
xchg
enter
fcompl
pop
xchg
sbbb
xchg
mov
and
jno
mov
test
xor
cmpsl
lahf
fwait
sub
pusha
in
dec
cmpl
xchg
fidivl
sub
cmp
hlt
shll
les
sbb
pop
stos
xor
inc
cmp
sahf
rorb
aaa
mov
jl
enter
adc
subb
mov
xchg
adc
mov
cwtl
add
and
dec
bound
shlb
ret
jp
add
fnstcw
cs
lret
test
clc
sarb
clc
subl
sbb
mov
imul
xor
add
lods
mov
jmp
mov
dec
test
or
jl
fildl
push
dec
mov
lcall
sub
and
xor
repz
shlb
xor
andb
jle
enter
add
sbb
aad
push
jecxz
hlt
shrl
rcll
notb
cltd
xchg
sub
vorps
pop
xchg
shlb
sub
push
insb
jle
sub
outsb
jnp
lock
pop
loopne
mov
pop
add
pop
mov
and
jns
lahf
ret
rcll
jg
add
add
mov
mov
outsb
or
daa
xlat
into
aam
jmp
inc
xchg
push
dec
shrl
ljmp
fldl
mov
inc
int
dec
aaa
or
xchg
inc
stos
cmpb
pop
mov
mov
sarl
mov
and
movsl
sbb
loope
jmp
fdivs
cld
pop
mov
fldenv
mov
jecxz
mov
rolb
mov
mov
cmc
jb
les
and
les
sti
ljmp
imulb
sub
das
sbb
dec
adc
bound
push
pop
mov
cmpsb
fstpt
ja
ret
mov
mov
xchg
or
scas
pop
push
fxch
iret
and
add
cmp
dec
leave
in
push
ja
adc
mov
sbbb
rcrb
notb
lods
inc
insl
andb
dec
cs
fcmovnu
xorl
sbbl
sbb
adc
lret
pop
xchg
fdivl
leave
in
cmpsl
lea
jns
cmpsb
scas
xor
pop
xchg
mov
inc
sub
fiaddl
cmp
test
aam
cmpsb
dec
adc
add
bound
or
pop
mov
loop
adc
mov
pop
pop
add
loope
or
mov
jne
in
inc
mov
mov
sub
mov
bound
mov
jae
mov
jb
and
imulb
clc
ss
sbb
ror
xor
xchg
pop
cmp
cmpsl
jns
sbb
cs
mov
pop
or
mov
lods
rorb
cmp
jns
inc
test
sti
bound
lea
sbb
rcpps
mov
push
popa
pop
jle
xchg
push
sub
adc
push
mov
cmc
sub
sub
sti
addb
lock
add
sbb
test
mov
xchg
pushl
out
mov
jne
cmp
enter
mov
mov
cmp
xor
nop
inc
push
cld
inc
scas
jb
mov
cmpb
mov
mov
daa
mov
sub
xlat
mov
adc
std
cs
pop
fisttps
loop
mov
mov
mov
mov
or
pop
test
daa
sahf
or
enter
out
xchg
shlb
iret
adc
dec
cmc
jle
jmp
pop
and
popf
dec
lret
call
mov
mov
loope
out
jae
jmp
mov
sub
stc
imul
dec
divb
fdivrl
test
mov
cli
and
and
xor
pop
xor
fisubrl
int
fs
xor
and
inc
mov
mov
mov
xchg
jnp
dec
jecxz
testb
cmpsl
aas
repnz
mov
push
ljmp
mov
inc
testl
pop
add
inc
sub
sbb
das
in
test
imul
sbb
aas
xchg
scas
imul
cld
arpl
test
and
rcrl
fidivl
pop
add
popf
mov
dec
xchg
cmp
mov
hlt
imul
test
lods
jg
mov
add
sbb
scas
popf
jmp
or
push
mov
pop
or
and
shl
xor
cmpsb
push
test
loop
popf
inc
pop
sbb
lods
shlb
cltd
sarl
inc
scas
adc
mov
jnp
adcl
jbe
mov
xchg
lods
mov
mov
fsubrl
arpl
mov
add
ds
and
fcomip
lcall
mov
mov
ljmp
imul
cmp
xor
sbb
push
popf
ficoms
jbe
mov
dec
outsb
cld
pop
jno
sbb
sub
stos
add
shrb
scas
out
cmp
movsl
cmp
xor
lods
adc
pop
jno
sbb
cmp
fisttps
scas
mov
pop
xchg
sub
inc
sub
sbb
push
sahf
into
xchg
int
and
or
out
js
mov
mov
aaa
lcall
lds
push
aad
bound
jmp
addl
in
ret
int
lods
lock
xchg
jnp
std
pushf
sbb
scas
jno
ret
mov
xchg
mov
repnz
xor
xchg
mov
mov
dec
xor
movsl
xor
dec
mov
neg
adc
mov
in
mov
cmp
repz
insl
sbb
xor
rcrl
sub
shll
in
aaa
mov
shlb
jmp
dec
mov
xchg
out
xchg
test
dec
adc
adcb
das
or
mov
add
imul
bound
in
lds
data16
outsb
xchg
hlt
mov
xor
cmp
bound
xchg
pop
and
call
mov
adc
aam
pop
fwait
pushf
push
sahf
push
pop
push
push
xor
ret
pop
pop
movsb
rcl
xchg
add
popf
mov
and
fnsave
int
add
push
and
jne
lret
pop
out
test
add
sub
xchg
insb
push
push
mov
add
stos
and
or
jns
push
xchg
lods
xor
rolb
sbb
ret
cmp
ja
xchg
daa
xchg
pop
dec
or
lret
int3
ror
inc
pushf
push
mov
inc
add
dec
addr16
adc
loope
sbb
adc
mov
faddp
loope
mov
push
push
cwtl
fwait
mov
fidivrl
and
jb
mov
push
jp
dec
xchg
fiadds
dec
std
mov
push
push
dec
push
xor
addr16
xor
fdivl
dec
ljmp
inc
mov
nop
push
push
mov
pop
shlb
xchg
and
fsubl
mov
fnsave
popa
arpl
xchg
lcall
pop
add
int
sub
out
xchg
xchg
sub
jne
fdivrs
lods
xor
or
and
jae
pop
lds
andl
je
aaa
fisubrl
repnz
jnp
test
sub
out
ds
and
sarl
sub
sub
adcb
cmp
jb
or
dec
mov
mov
cmp
inc
xchg
sbb
loop
in
jno
fiaddl
lods
stos
mov
mov
cmp
stc
and
movsl
add
jle
cmp
xor
jmp
sbb
test
pop
add
test
ret
insl
jne
mov
lret
shlb
fisubrs
test
adc
jnp
cs
addr16
cmpsl
aam
int
xchg
icebp
lret
push
sub
clc
out
test
aaa
push
inc
fs
ret
and
hlt
adc
mov
insl
push
jmp
orl
loopne
jmp
xor
leave
dec
cmc
mov
or
sub
xor
sbb
test
add
cmp
std
data16
sub
or
mov
aad
out
add
mov
mov
add
cmpsb
sub
sub
out
mov
loop
or
sbbb
dec
ror
shlb
xor
loope
in
xchg
mov
or
pop
aad
jne
mov
out
adc
push
iret
sbb
pop
movsb
nop
ret
sahf
roll
adc
or
pushf
ss
jne
sti
pop
or
mov
inc
ds
sti
jg
shll
jno
add
idivl
sbb
add
fistpll
mov
lods
pusha
sbbl
inc
xor
sbb
mov
jp
out
repnz
popa
mov
dec
mov
imul
shlb
pop
jne
mov
cld
or
cmp
mov
outsb
cmpsb
jmp
hlt
mov
adc
jbe
xor
mov
sbb
mov
outsl
cmpsl
dec
sahf
lret
push
dec
lcall
cmpsb
mov
xchg
ds
push
dec
test
repz
or
or
dec
adc
add
or
pushf
in
xchg
iret
gs
dec
inc
and
in
daa
pop
insl
mov
cltd
push
pop
add
jle
pop
out
or
ror
loopne
lds
stos
pop
jno
mov
aaa
imul
sti
pushf
adc
mov
fucomip
fsubrl
lcall
fcoml
and
pop
xchg
jge
out
popf
scas
sbb
cmp
or
fmull
into
arpl
mov
and
cmp
popa
das
lret
xor
scas
lods
lods
pop
bound
jns
lods
cli
jge
add
hlt
cmp
mov
inc
mov
js
dec
jmp
mov
out
push
mov
mov
cwtl
imul
cwtl
push
xchg
jmp
jae
in
cmp
aaa
mov
daa
jns
into
into
dec
adc
out
lods
ret
stos
dec
jbe
mov
push
sbb
shlb
xor
mov
movl
xor
rep
mov
iret
jmp
cmpsb
xor
pop
mov
je
lds
mov
mov
sbb
into
and
sbb
dec
rolb
pop
pushf
inc
cmp
mov
inc
jae
xor
dec
out
enter
xlat
sbb
inc
and
sub
and
repnz
xor
and
add
pop
or
lods
mov
mov
mul
mov
pop
or
roll
mov
leave
test
or
stc
jp
cmp
cmp
fcoml
dec
negb
test
inc
mov
cmp
in
pusha
inc
mov
and
sbb
push
pop
sub
mov
jae
test
mov
sbb
cmp
cmp
int
ja
sub
and
xlat
loop
mov
in
cli
in
and
aaa
jmp
jb
pop
pusha
int
rcrb
dec
dec
or
adcl
dec
pushf
addr16
fwait
or
or
cmp
imul
dec
cmp
and
push
and
push
cmp
aas
jmp
add
ljmp
shlb
and
mov
cmc
and
fnsetpm(287
icebp
jle
mov
dec
mov
lods
jmp
push
hlt
out
dec
lahf
int3
add
stos
in
or
and
pusha
push
out
pop
mov
jl
mov
dec
mov
test
jg
sub
ret
sbb
adc
imul
test
pop
mov
fistpl
test
cmp
or
push
mov
cs
popf
cmpsb
mov
inc
and
icebp
cmpsl
shll
push
push
fildll
js
jae
or
push
into
xor
outsb
jne
dec
xorb
xor
fbstp
stc
push
push
cmp
test
test
nop
test
inc
xchg
repz
dec
dec
js
xchg
movsl
xchg
jmp
lret
notl
mov
add
in
aaa
mov
cwtl
rcr
mov
aam
xchg
bound
and
test
add
xchg
adc
push
movsb
pop
cltd
outsl
push
mov
aas
mov
push
sub
repnz
xor
imul
mov
jg
push
jle
stc
sub
dec
xor
outsl
movsl
popa
inc
bound
movzbl
mov
int
or
push
inc
insl
rorb
mov
xor
xchg
stos
adc
mov
jg
lods
or
pop
jmp
xchg
test
inc
je
outsb
aas
xor
daa
dec
subl
in
add
pop
dec
pop
inc
es
test
cmp
mov
cmpsl
mov
fadd
loope
pusha
cmp
or
pop
addb
call
add
leave
daa
lea
pop
in
mov
aas
sti
cmp
add
cmp
jne
fsubrl
mov
fdivr
or
bnd
jne
fisubrs
push
into
jp
test
mov
sbbb
mov
movsb
iret
jo
movsb
xor
test
rcrb
clc
jb
mov
js
inc
rcll
leave
hlt
push
insl
mov
cmp
dec
inc
mov
fisubrl
mov
push
imul
in
scas
jns
loope
push
mov
or
lds
inc
movsb
shlb
dec
jo
std
leave
loope
lods
push
cld
test
test
test
lea
mov
jbe
or
jle
icebp
aam
mov
mov
fiadds
popf
dec
inc
popf
scas
nop
fisubrl
or
into
and
jecxz
das
or
inc
mov
jbe
xor
inc
lcall
mov
cmpsl
xchg
test
cld
jp
dec
mov
adc
mov
cwtl
add
bound
push
mov
addr16
test
jecxz
int
push
ret
xor
dec
je
or
les
or
stc
and
cmpsl
mov
pop
push
test
sub
jo
and
je
call
xor
lods
jecxz
clc
jne
mov
pop
shrl
movsb
bound
outsl
sahf
in
aaa
push
daa
mov
sub
add
inc
xchg
sub
mov
rcll
call
adc
cmp
mov
sbb
sbb
js
mov
enter
movsl
push
push
jnp
lods
mov
push
psrlq
pop
cmp
adcb
cmp
jecxz
clc
mov
or
push
lea
mov
loope
popa
stos
in
add
repz
mov
dec
mov
arpl
pop
adc
sub
cli
mov
fsubs
outsb
xchg
adc
xchg
push
cmp
or
cwtl
mov
dec
mov
imul
add
xchg
push
xor
mov
dec
inc
add
dec
xor
add
pop
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
inc
mov
mov
movzbl
and
mov
mov
xorl
mov
adc
sub
decl
mov
movl
cmpl
je
cmpl
jbe
jmp
push
push
push
pushl
pushl
pushl
push
call
mov
dec
mov
jmp
push
movl
cmpl
je
cmpl
ja
jmp
push
pushl
push
push
pushl
push
call
mov
dec
mov
jmp
movl
movl
xor
xorl
mov
mov
mov
mov
xor
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
xor
add
pop
leave
ret
push
mov
push
sub
push
adc
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jle
jmp
push
pushl
call
jmp
mov
adc
mov
subl
mov
adc
mov
mov
not
mov
movl
cmpl
je
cmpl
jb
jmp
push
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
push
add
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jbe
jmp
push
pushl
pushl
push
call
jmp
push
add
push
inc
mov
movl
adc
xor
mov
andl
mov
inc
mov
cmpl
jge
jmp
pushl
call
cmpl
jb
mov
xor
mov
xor
cmp
jne
cmp
jne
mov
mov
xor
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
jmp
mov
mov
xor
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
movl
mov
mov
cmp
jne
cmp
jne
mov
mov
xor
add
adc
xor
xor
mov
cmp
jne
cmp
jne
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
and
mov
adc
mov
mov
mov
jmp
pop
aad
dec
xor
insb
hlt
xchg
das
mov
fwait
movsl
insl
imul
jnp
cwtl
jnp
shrb
js
aas
mov
jnp
daa
fsubrl
leave
dec
adc
add
mov
and
out
neg
out
bound
dec
adc
rorl
lods
pop
subl
add
add
xor
clc
loope
cwtl
ss
out
cmp
xchg
lods
ret
mov
sbb
pop
repz
pop
cli
or
mul
ja
shrl
ds
shll
call
pop
dec
add
fwait
out
popa
or
arpl
jnp,pn
dec
or
sbb
sub
pop
loope
mov
popf
out
pop
inc
sub
icebp
fcom
in
mov
xor
xchg
bound
push
jle
jl
scas
loop
int
push
lods
sbb
adc
iret
scas
adc
or
sbbl
popf
add
jg
cmp
cld
ja
pop
cld
lods
mov
jns
mov
repnz
hlt
leave
subl
out
add
push
mov
sbb
jl
push
loop
mov
mov
mov
repnz
and
or
test
ljmp
mov
pop
xchg
push
inc
xor
cwtl
mov
in
scas
fldl
jbe
dec
dec
mov
xor
adc
xchg
mov
ret
fidivs
pop
cmp
js
jo
or
fstps
dec
andb
mov
jmp
stos
test
mov
out
test
adc
push
div
push
rolb
inc
xor
cmp
popf
in
inc
mov
inc
and
loopne
iret
jbe
cmp
faddp
in
mov
pop
mov
cmpsl
mov
mov
cmpsb
lds
dec
jp
push
lcall
mov
hlt
mov
out
shrb
cmp
mov
pusha
ss
push
int3
fcoml
jp
xor
adc
cmp
mov
mov
jo
daa
dec
or
mov
jle
add
pop
xor
fs
mov
std
push
call
fisttps
ret
ljmp
int3
gs
cmp
add
mov
pop
mov
cmp
sbb
inc
mov
fwait
repnz
cmp
add
jge
inc
and
sub
xchg
inc
icebp
shll
stos
div
pop
xchg
cmp
xor
cwtl
push
mov
shlb
mov
inc
daa
jl
repnz
xchg
mov
add
cmp
dec
insl
jecxz
inc
xchg
mov
call
ljmp
int
sbb
in
push
add
imul
int
lcall
mov
aas
inc
sub
sub
popa
cmp
jle
stos
repnz
cld
movsb
adc
push
push
dec
movsl
in
inc
jmp
in
inc
fcmovbe
lea
adc
aas
outsl
and
add
mov
sbb
push
loop
call
mov
lahf
sbb
dec
push
clc
pop
jno
cmp
lcall
xchg
jno
xor
cwtl
xor
fcomi
mov
sbb
push
or
aaa
inc
enter
push
jl
dec
rcll
cli
mov
test
sarl
inc
jae
ja
adc
mov
inc
fisttpll
mov
cmp
dec
lret
lods
push
xchg
outsl
pop
aam
sbb
sbb
jns
test
mov
pop
xchg
decb
test
cmpsl
inc
mov
les
fdivrl
xor
in
fs
sub
js
lods
add
popf
sbb
sbb
mov
dec
test
repnz
xor
push
js
not
sub
ret
jo
push
mov
cmc
jmp
add
and
outsl
push
jge
popf
out
jnp
lahf
stc
lret
jbe
push
ja
or
jno
inc
popa
pop
outsb
sub
mov
out
cmc
pop
xchg
cmc
cmc
xchg
out
int3
arpl
mov
mov
pop
fisubrl
hlt
mov
rolb
lret
negl
lahf
jmp
or
arpl
push
mov
mov
add
das
adc
pop
scas
iret
call
pushf
cmp
icebp
adc
fdivp
leave
sub
adc
scas
mov
mov
pop
push
and
adcb
add
cmp
cli
xchg
pop
push
scas
daa
mov
ret
aad
dec
ds
push
in
mov
jg
add
iret
or
jae
xor
xchg
pushf
adc
movsl
rcll
insl
sub
jl
shl
xchg
pop
test
aam
test
xchg
mov
jne
jecxz
lret
pop
repnz
and
in
xor
jmp
inc
cmp
jmp
in
jp
jno
fildll
in
imul
loop
rorl
cli
jle
xlat
fiadds
repnz
jmp
popa
loope
xlat
mov
xchg
addl
pusha
in
and
lret
sbb
and
mov
or
pusha
xor
ja
imul
fadds
ljmp
or
push
test
cs
cmp
dec
pop
imul
std
pop
aam
lock
dec
inc
push
push
loope
into
adc
aam
out
and
inc
mov
stos
mov
into
gs
ds
jnp
adc
jp
pop
xor
cmp
dec
add
setno
mov
or
arpl
fsub
arpl
sub
jno
jns
push
add
dec
pop
pop
rclb
jbe
jno
in
rclb
and
fwait
cmpsl
cmc
inc
push
imul
fsts
adc
lock
aaa
imul
shl
mov
repz
mov
cmp
ljmp
mov
mov
loope
out
orb
adc
in
and
xor
fcomps
xor
xchg
lret
jae
idivb
sbb
mov
inc
test
dec
and
ds
sub
pop
dec
jmp
mov
movsb
stc
fidivrs
jbe
pop
shl
lcall
fiadds
inc
or
popa
lret
fwait
imul
push
out
js
xor
xchg
sub
lcall
movb
push
sbb
aam
cmp
push
cld
test
push
mov
push
adc
clc
jl
lods
cmpsl
mov
fldl
mov
add
stos
mov
or
stos
fs
fwait
mov
cmp
cmc
mov
jno
mov
sub
stc
sar
je
fwait
mov
aam
inc
out
push
inc
xchg
cmp
pop
bsf
pop
loopne
inc
push
adc
mov
mov
mov
in
dec
adc
add
popf
mov
inc
ss
or
jl
mov
cld
push
inc
fiaddl
loopne
das
jnp
and
mov
lcall
in
xor
sub
mov
cltd
not
fsub
aaa
xor
movsl
lock
pop
out
add
std
aam
out
push
cmp
sahf
fnstenv
icebp
adc
sub
mov
mov
jp
mov
std
loopne
aas
cmpsl
cmp
inc
push
mov
icebp
icebp
sti
and
xor
mov
inc
adc
mov
adc
sub
mov
outsb
popa
loopne
jb
xor
sub
adc
shll
push
stos
xchg
roll
pop
cli
loop
add
mov
or
mov
push
mov
dec
icebp
inc
mov
xor
out
int
push
int
cmc
dec
inc
les
sbb
sbb
push
sub
je
xchg
or
cwtl
lods
sub
jnp
or
sub
add
fildl
imull
inc
and
pop
push
rcrl
push
xor
xchg
xchg
push
push
fiaddl
repz
sbb
pop
pop
scas
nop
loop
lret
and
jno
xchg
pop
push
cmp
or
jbe
popf
lahf
daa
sahf
out
xchg
sbb
dec
mov
xchg
and
mov
cmpsw
cmpsb
sbb
imul
aaa
and
dec
das
ja
call
xchg
mov
lods
test
shrb
cmp
push
xchg
mov
inc
cltd
push
ss
lahf
jnp
xchg
push
mov
in
xchg
std
test
push
mov
fcomip
mov
movsb
add
mov
aam
xor
stc
add
lahf
lahf
sub
mov
out
call
push
mov
rclb
mov
pop
test
subl
mov
mov
fnstsw
jns
loop
inc
insl
fisubrl
rorb
stc
add
pcmpgtw
popf
pop
xchg
hlt
les
mov
add
out
mov
add
test
std
in
pop
push
cltd
fstpl
subl
pop
pop
mov
lds
jecxz
pop
repz
mov
out
add
sub
pop
adcl
mov
scas
mov
xchg
push
ret
or
popf
jae
push
cmp
data16
pop
ret
add
lcall
mov
es
cmp
andl
outsl
or
pop
or
mov
aad
adc
jge
adc
xor
test
xchg
cmp
sub
test
fistpll
xchg
int3
imul
jb
in
xchg
xor
stos
sub
adc
mov
mov
hlt
or
out
jae
cwtl
mov
in
lock
or
mov
mov
popf
adc
xor
shll
test
imul
cmpsl
xor
xchg
pop
mov
ss
out
loope
rcl
xchg
and
sar
aas
imul
pusha
adc
icebp
or
sub
insl
and
mov
sbb
js
mov
dec
data16
xor
imull
jns
push
inc
mov
ja
pop
cmc
fcmovu
lods
mov
jnp
push
dec
or
dec
lret
lret
daa
inc
jle
dec
cltd
rorb
outsl
add
dec
adc
negb
inc
cmpsb
xchg
mov
and
loope
fistpl
cmp
loopne
fisubrl
adc
push
mov
movsb
ja
into
fwait
dec
test
repz
imul
adc
mov
push
into
pop
call
pop
mov
pop
inc
mov
mov
lds
push
repnz
out
out
fcompl
addl
loope
clc
mov
inc
v4fnmaddss
xor
xchg
xchg
test
add
and
mov
adc
ficompl
lret
sub
bound
cs
das
mov
nop
stos
jae
fs
or
adc
hlt
popf
je
push
xchg
daa
jae
push
ljmp
sbb
dec
push
pushf
scas
fidivs
jg
sbb
repnz
sahf
dec
jns
rcll
scas
out
adc
lods
inc
iret
xchg
sahf
sub
or
xchg
or
cld
mov
jae
rcrl
sub
lods
fists
dec
adc
mov
add
and
mov
and
jne
enter
mov
sarb
add
ljmp
inc
shlb
fs
and
push
pop
xor
ret
or
das
push
pop
addr16
push
enter
pop
sub
push
in
arpl
adc
cmp
stc
testb
popf
sbb
or
xchg
popf
cs
xchg
int
and
cmp
mov
add
push
jno
jb
add
outsb
mov
mov
mov
mov
and
mov
cmp
icebp
enter
jge
inc
mov
outsl
pop
xor
mov
sti
lret
sbb
test
shll
nop
out
inc
pop
push
mull
xor
pop
mov
add
movsl
lods
stos
mov
fsubrp
inc
inc
ficoms
jbe
hlt
mov
iret
lea
mov
movsl
xchg
adc
pushf
cld
mov
push
mov
xchg
cmp
mov
js
jnp
jge
sar
mov
sbb
out
test
or
push
leave
not
gs
push
jp
cmp
xchg
adc
push
jbe
jmp
out
adc
fs
cwtl
cmc
jb
loope
stos
xchg
pop
les
xchg
cltd
jp
int3
shll
clc
add
add
xor
adc
or
stos
dec
add
loop
ret
push
nop
pushf
add
and
mov
jno
jns
arpl
cmc
repz
sbb
adc
dec
rcl
std
add
jle
icebp
dec
in
and
daa
cmp
jg
push
test
jo
xchg
or
rep
or
clc
jp
std
add
and
xchg
rcll
add
sbb
pop
addr16
scas
fidivrl
jp
sbb
push
movsl
push
test
sbb
mov
popa
adc
fildl
jne
lret
cld
pusha
and
jns
filds
dec
adc
shll
scas
ficoml
lods
scas
lea
adc
stc
test
dec
push
test
mov
jno
xchg
scas
loop
ficoml
dec
mov
dec
popa
push
inc
mov
mov
insl
sub
addr16
cmp
adc
out
insl
mov
push
test
cs
subb
inc
fdivl
in
jnp
mov
in
sbb
cwtl
push
aas
xchg
pusha
push
dec
push
xchg
xlat
dec
sbb
bound
cmp
add
insl
fbld
jae
mov
push
adc
stos
or
enter
sub
push
pop
sbb
push
pop
mov
hlt
loopne
push
sub
pop
mov
outsl
jb
inc
and
test
adc
mov
pusha
pusha
mov
bound
dec
adc
xchg
insb
es
push
aas
hlt
outsl
cmp
testb
jbe
sub
sbb
test
shrl
mov
mov
dec
lds
adc
push
movsl
movsb
pop
pusha
lahf
cmc
outsl
cs
bound
sbb
jno,pt
sub
fdivr
adc
sub
push
dec
or
sub
xchg
adc
mov
cmp
testl
adc
cli
fnsave
fsubr
ds
andl
repz
adc
mov
push
pop
adc
xchg
nop
jb
jns
insb
pop
into
mov
push
popa
mov
jb
xor
jmp
pop
jno
xor
push
push
xchg
lds
or
mov
and
mov
cmp
pusha
jno
nop
sbb
cmp
sub
sarb
dec
dec
stos
stc
aaa
push
rcrl
pop
shlb
inc
loopne
lret
push
in
pop
adc
sub
inc
inc
adc
hlt
inc
add
add
sbb
push
or
or
xlat
fwait
adc
mov
icebp
push
into
mov
sbb
jno
jecxz
dec
mov
rclb
dec
sub
jbe
in
fadd
mov
loop
jmp
call
dec
mov
leave
mov
fwait
ror
pop
jle
cwtl
push
enter
jnp
push
shrl
xchg
clc
arpl
and
mov
call
jl
jo
sbb
pusha
lcall
ja,pt
std
ret
jl
les
pusha
cs
and
sbb
popf
test
cmc
test
push
xor
jmp
xchg
cmp
xchg
mov
sub
sahf
dec
test
js
mov
loopne
fidivl
mov
cmp
shll
jecxz
rcl
mov
cmp
jno
and
test
scas
call
mov
cwtl
pop
add
out
or
cmp
mov
rclb
jmp
int3
or
sbb
sti
dec
jbe
js
and
test
mov
xor
mov
pusha
cld
imul
hlt
inc
push
add
mov
loop
das
les
leave
int3
pop
cmp
dec
fadd
call
mov
repnz
leave
or
in
gs
push
dec
dec
divl
pop
mov
fscale
or
std
inc
mov
sbb
push
cld
outsb
push
out
and
andb
dec
aad
ret
add
cmp
dec
cmp
in
pop
cmp
inc
out
mov
mov
rep
cmpsb
jl
cwtl
icebp
xchg
inc
outsb
adc
mov
xor
test
mov
xchg
jl
push
popa
ds
mov
repnz
incl
ds
push
mov
iret
mov
push
test
lret
jns
add
add
xchg
addr16
push
mov
xchg
jae
mov
push
pushl
add
mov
outsb
insl
add
incb
fiaddl
loop
int
push
subl
lret
cmp
push
in
sahf
cltd
pop
movb
sarb
add
stos
insl
xor
loope
and
ret
push
mov
daa
jg
pop
inc
sahf
ficompl
nop
out
push
mov
popf
jle
data16
pop
or
iret
pusha
and
mov
sbbb
mov
lock
push
pop
data16
mov
and
mov
or
mov
movsl
enter
repz
dec
cmpsb
adc
jb
sbb
jl
cmp
icebp
scas
sbb
icebp
or
cmpsl
sbb
dec
out
subb
jns
pop
pop
xor
jo
push
xor
sarl
pop
es
xchg
scas
popa
out
mov
icebp
test
sbb
ss
loop
in
mov
pushf
in
pop
cltd
push
dec
jno
cmpsl
notb
pop
push
jo
imul
adc
sti
shl
in
mov
add
lcall
arpl
fcmovbe
push
adc
jne
or
cmp
or
loop
or
bound
fcoml
popa
mov
lcall
cmp
mov
xchg
inc
xchg
pop
sbb
cmp
testb
push
xchg
or
out
daa
cli
cmpl
loop
outsb
jo
inc
adc
cmpsb
jg
daa
clc
xchg
xchg
mov
pusha
das
and
js,pt
shlb
sbb
orb
inc
mov
and
orb
and
or
fisubs
cltd
adc
mov
cwtl
fwait
testw
fisttps
bound
stc
xlat
ja
push
and
dec
clc
cmc
dec
mov
pop
mov
push
in
push
pop
movsl
pop
sbb
adc
jl
sub
imulb
icebp
push
sbb
adc
stos
jg
or
test
pop
add
jns
inc
and
pop
mov
pushf
cld
xor
mov
andb
lahf
jbe
stos
cmovl
int3
inc
nop
sbb
sbb
fdivrs
jb
lcall
jmp
jns
xchg
stos
xchg
cmpsl
test
add
dec
lock
and
sbb
jo
mov
mov
pop
mov
xchg
sub
sbb
mov
pop
cli
sbb
pusha
into
inc
loopne
mov
jno
leave
mov
push
dec
fdivrl
cmpb
adc
mov
lods
inc
pop
aad
jb
insl
adc
xchg
cmpb
xor
das
and
cmp
sbb
in
loope
daa
push
push
arpl
cmpl
jl
mov
xchg
lea
loope
aad
nop
orl
mov
scas
lea
or
std
icebp
xor
into
jb
cmpsb
jo
pop
cmp
or
sub
add
cld
cli
xchg
dec
movl
cmc
in
popa
or
inc
mov
sub
sbb
dec
ds
imul
mov
and
inc
in
shrb
cmp
int3
test
pusha
push
lahf
loopne
jecxz
mov
jne
add
repz
cmp
mov
xor
or
int3
cmpb
mov
repnz
dec
ljmp
pop
iret
push
lahf
sahf
inc
adc
popa
jecxz
mov
ljmp
cld
xchg
xor
and
mov
subb
imul
mov
cwtl
lret
repz
mov
pusha
jmp
pusha
fs
or
xchg
pop
rcr
rol
xchg
and
out
adc
jne
sarb
out
pminub
js
and
out
popf
jb
push
cmp
add
sbb
cmp
les
call
mov
stc
adc
cli
aaa
outsb
sub
pop
inc
jmp
test
outsb
xchg
popf
push
or
and
les
mov
pusha
inc
pop
mov
daa
negb
sbb
dec
inc
xlat
inc
aas
out
cs
mov
loope
cmp
iret
fldenv
push
xchg
std
out
hlt
adc
adc
movsl
repz
cltd
imul
pop
ljmp
sti
lret
jne
mov
pop
mov
dec
push
mov
sbb
push
clc
ret
or
repz
pop
pushf
ret
comiss
jbe
js
dec
xor
xor
mov
sbb
push
incb
mov
push
scas
mov
movsb
or
inc
xchg
jnp
out
cmpsl
fisubs
in
jnp
pop
je
pop
paddd
ja
in
int3
popf
sbb
cmp
dec
or
inc
ret
mov
pop
mov
xor
fwait
imul
cmp
fs
xchg
scas
cmc
cmpsl
mov
fistpl
fildll
push
mov
sub
mov
dec
mov
mov
pop
xor
xchg
add
jmp
inc
in
push
data16
inc
mov
xlat
xchg
dec
inc
sbb
xchg
sbb
test
adc
fmuls
ja
je
adc
out
imul
jae
mov
push
cwtl
nop
and
das
sti
add
hlt
sub
xchg
jbe
sbb
mov
jae
filds
in
sub
or
push
repz
dec
daa
test
cli
repz
scas
out
adc
jge
hlt
adc
mov
xchg
nop
subb
and
in
cmp
adcb
js
or
test
jb
popf
fucomp
idivb
outsl
dec
or
cwtl
inc
clc
mov
insl
sbb
push
mov
push
insl
pop
add
add
call
and
das
jb
subl
rcll
pop
mov
movsb
sub
mov
mov
test
add
adc
imul
mov
data16
and
iret
xor
repnz
jb
bound
test
dec
jne
dec
idivl
test
insl
mov
dec
popa
inc
mov
out
lahf
faddp
sub
sub
imul
inc
in
push
adc
out
add
dec
mov
xchg
sbb
or
push
imulb
push
call
sub
lods
push
lret
jb
push
ret
outsl
mul
mov
add
mov
jbe
sbb
pop
js
adc
jo
push
arpl
in
jns
mov
dec
lret
jns
push
test
repz
jmp
pop
ss
sbb
shl
imul
sbb
cmpsl
add
or
inc
push
imul
inc
ljmp
test
add
sub
xor
std
repz
mov
jae
ret
lret
jmp
cwtl
adc
push
lods
xor
in
jmp
cmc
inc
jb
pusha
jne
xor
mov
insb
rclb
xchg
cltd
gs
es
ret
sahf
jno
loop
and
je
insl
loop
inc
mov
lret
cmp
jmp
pop
ret
pop
xor
sbb
mov
adc
add
cmp
pop
test
mov
test
gs
inc
mov
ss
sti
aam
sub
dec
ss
mov
sahf
enter
testl
inc
push
scas
lods
push
loope
cmpsb
ljmp
dec
jno
pop
inc
pop
inc
cs
or
push
or
push
clc
or
aad
add
pop
mov
mov
mov
loope
xchg
pushf
xor
jnp
cmp
mov
stos
je
inc
sahf
inc
enter
addr16
repnz
xchg
push
mov
movsb
pop
sbb
enter
mov
add
loop
or
ss
mov
xchg
jno
dec
push
andb
push
int3
out
sbb
adc
mov
adc
jp
lahf
pop
or
sub
cmc
jno
or
xchg
fdivp
inc
push
loope
lods
fistpl
sti
out
or
dec
pop
inc
jb
adc
out
mov
dec
outsb
xor
dec
pop
popa
cltd
dec
mov
incl
insl
mov
mov
fnstenv
repz
cmpl
jbe
out
aad
testl
mov
lcall
outsb
or
sub
decl
ss
xchg
ss
aam
push
mov
cli
mov
int
jle
push
sub
or
pop
loop
mov
add
divb
fucomp
xchg
in
cli
gs
jb
fcoms
aad
sub
into
or
pop
sbb
dec
vmovupd
icebp
sub
scas
int
outsl
sbb
xor
inc
bound
dec
cmp
mov
into
sub
pop
vpmacssdqh
aaa
dec
aas
xchg
es
adc
ja
jecxz
aaa
sub
movsb
jbe
push
push
shlb
out
es
lahf
cld
shll
inc
sarl
fildll
add
cltd
or
dec
xchg
or
adc
icebp
test
lahf
jns
fisubs
inc
mov
subl
and
dec
pop
adc
cmc
cmp
movsb
xchg
or
jl
jl
jnp
enter
sbb
pop
adc
sahf
adc
and
stc
repz
imul
scas
loopne
ret
shlb
pop
inc
ja
jmp
sub
push
pop
rorb
fcomps
stc
xor
or
push
test
clc
popf
xchg
adc
pop
cmp
mov
push
sub
push
push
push
rcl
adc
xchg
divl
add
lcall
outsl
addb
shr
fsubrp
push
sbb
jle
and
adc
leave
sub
insl
fwait
inc
shll
sbb
dec
mov
clc
mov
fldenv
and
sub
mov
and
movsb
icebp
add
or
into
pop
mov
or
outsl
ffreep
repnz
sbb
icebp
dec
fildll
or
lret
jmp
pushf
dec
mov
daa
out
fs
aas
inc
pop
cmp
inc
cmp
std
xlat
mov
cmp
add
ljmp
fmuls
cmpsl
hlt
xor
movsb
cld
dec
nop
je
negl
adc
out
inc
cmp
aad
lret
add
mov
dec
out
fisubrl
mov
jae
jle
test
test
loopne
das
outsb
test
fisttpl
dec
std
dec
push
in
in
sbb
fwait
sbb
xchg
jns
mov
movsl
dec
jo
in
push
mov
popf
add
ja
loope
sbbl
das
adc
fisttps
jns
fnsave
mov
movsl
cmp
pop
push
xchg
pop
mov
jne
xor
pop
sbb
loop
das
inc
add
out
dec
repz
int3
or
mov
in
inc
cmpsb
pop
adc
imull
xor
jg
test
xchg
fidivrl
sbb
mov
mov
sbb
adc
addr16
add
out
enter
push
push
imul
test
adc
sbb
xor
xchg
cli
xchg
pushf
pop
mov
push
ljmp
sbb
es
mov
mov
aas
mov
push
jo
sbb
popa
mov
ret
jl
pop
adc
add
xor
push
xor
xchg
addl
xor
pop
mov
or
inc
or
in
and
jns
cwtl
sub
fwait
ja
insb
mov
call
or
imul
imul
lock
pop
loopne
lret
flds
push
xchg
adc
fstpl
loope
aas
rol
push
sbb
cmc
and
add
jnp
or
mov
bound
test
jns
jo
dec
imul
cmp
mov
or
sarl
xchg
mov
xorb
jbe
mov
test
mov
xchg
jmp
insl
and
lret
xor
lcall
ficoml
inc
inc
push
das
je
into
and
adc
xor
mov
jle
sti
sbb
cmpsb
push
cmp
int
test
xchg
lods
adc
mov
jmp
js
lahf
or
jb
inc
sahf
in
xchg
and
mov
rcll
and
out
sbb
lret
dec
data16
push
aaa
xor
sub
ljmp
sti
aas
inc
mov
jns
xor
or
filds
pushl
xchg
push
inc
mov
inc
cmp
iret
cwtl
jnp
and
dec
aaa
xchg
xchg
cmc
xor
mov
dec
jnp
cmp
add
cltd
sub
in
sbb
sub
insb
sti
ja
cltd
push
cmc
pop
out
cmp
sub
sarb
loop
cmp
jle
movsb
popa
das
inc
inc
imul
mov
aad
mov
std
push
mov
test
or
das
dec
cmpsb
test
mov
push
test
sub
cli
xchg
and
jp
data16
gs
mov
int3
or
pop
andl
cmp
sbb
and
adc
orl
and
arpl
push
mov
adc
ss
je
jp
dec
sbb
push
or
imul
adc
dec
cmp
jae
sub
stos
andl
xor
add
repz
xchg
push
sub
jecxz
das
or
cld
jne
pop
cmp
pusha
loop
fnsave
movsb
int3
mov
sub
mov
jne
inc
pop
fnstcw
mov
pop
out
pop
out
das
push
adc
stc
leave
sbb
imul
shrl
stc
add
roll
movsl
jle
int3
inc
lret
lods
add
enter
negb
xchg
push
xchg
or
test
jmp
sbb
push
fists
push
out
jns
jns
imul
or
mov
cmp
into
out
movsl
cmc
ss
aad
inc
js
enter
stos
cli
aas
test
ljmp
fildll
clc
loop
fildl
fiadds
imull
enter
xor
inc
pop
nop
imul
mov
fs
push
rcl
sahf
push
sub
inc
out
ljmp
dec
sti
sbb
das
add
out
xlat
mov
dec
movsb
push
and
fs
lea
into
inc
sarb
lea
stc
xor
inc
or
mov
inc
jg
aas
sub
cld
mov
add
or
icebp
mov
arpl
sbb
in
cmp
add
and
test
cmp
fcmovne
xchg
add
pop
jl
pop
and
push
jle
notb
or
shlb
cmc
aam
shrl
sub
mov
rcrl
xor
adc
or
push
mov
nop
or
pop
mov
rsqrtps
in
xchg
pop
xchg
ret
xchg
xchg
xor
cli
das
pop
in
xchg
loop
pop
mov
lcall
stos
and
test
fcmovnb
cmpsb
adc
mov
subb
repz
sub
mov
mov
adc
insb
dec
xor
mov
out
pusha
cmpsb
iret
dec
mov
lahf
and
lods
pop
lods
gs
jl
mov
cltd
dec
and
pop
mov
adc
movl
add
mov
subl
mov
movl
cmpl
je
cmpl
ja
jmp
push
pushl
pushl
pushl
call
mov
dec
mov
jmp
push
movl
and
mov
push
xor
mov
or
mov
sub
andl
mov
inc
mov
cmpl
jg
jmp
pushl
pushl
pushl
call
cmpl
jb
mov
andl
mov
inc
mov
cmpl
jbe
jmp
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
xorl
xor
mov
sub
mov
sub
andl
mov
inc
mov
cmpl
ja
jmp
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
movzbl
add
mov
orl
movl
cmpl
je
cmpl
jle
jmp
pushl
pushl
push
pushl
call
mov
dec
mov
jmp
mov
mov
sub
mov
xor
mov
and
orl
adc
mov
sub
mov
xor
or
mov
sub
imul
sub
mov
orl
mov
mov
sub
mov
mov
mov
mov
xor
mov
add
or
mov
mov
mov
sub
mov
orl
mov
mov
xor
mov
add
push
mov
xor
add
push
mov
xor
add
push
lea
push
call
test
je
lea
push
mov
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
mov
lea
mov
incl
mov
sub
xor
mov
cmp
je
lea
mov
mov
mov
mov
mov
sub
mov
mov
xor
mov
sub
add
jmp
mov
into
gs
xchg
xchg
ret
pushf
jp
rcrb
and
jbe
push
mov
cmp
test
pop
shll
add
loop
aad
test
lahf
mov
dec
outsl
jne,pt
or
movsl
daa
push
add
fdivrp
and
call
les
lds
mov
sub
jle
ret
testb
push
ds
sub
sub
mov
or
ret
call
and
inc
ret
ret
fwait
dec
xor
sahf
leave
add
xor
cmpsb
sahf
mov
push
outsb
ffree
cmc
aam
add
mov
call
add
rcrl
add
mov
and
dec
insb
push
lock
mov
int
cmp
cmp
loope
leave
imul
jne
and
push
dec
push
cmp
shlb
mov
sbb
push
lds
xor
pop
jg
pop
adc
lock
vfmsubaddpd
jo
pop
dec
xchg
sbb
cmp
mov
jb
push
jno
xor
sub
mov
idiv
dec
or
gs
test
icebp
out
push
dec
xchg
inc
imul
int3
or
pop
sub
jns
lea
xchg
xchg
pop
rclb
inc
mov
push
xchg
cmp
cmpsl
lods
sbb
pushf
ja
xchg
fsubs
adc
jnp
test
ret
ret
mov
pop
shrb
test
mov
pop
jmp
pop
dec
aad
jge
sub
push
mov
dec
testl
xchg
stos
icebp
jb
stos
mov
repz
adc
xchg
aas
lea
dec
clc
and
and
xchg
lgs
add
ja
or
fmull
mov
add
inc
dec
repnz
pop
pop
addr16
jo
test
push
pushf
bound
aam
testl
cmpsb
mov
dec
pop
push
test
test
xlat
scas
lds
sub
sbb
add
in
mov
aam
mov
sub
jp
cmpsb
adc
stc
stos
inc
mov
aaa
and
xchg
jl
add
and
mov
repz
sbb
add
mov
shll
jge
sub
add
inc
adc
xchg
sbb
sbb
pop
push
test
jnp
cmp
cmpl
fiadds
and
dec
cmc
xchg
shlb
fistpll
cmp
mov
xor
mov
push
xstore-rng
cmpsl
ret
mov
imul
fisubl
dec
cltd
xlat
js
ror
cld
mov
cmc
dec
in
or
movsl
insl
stc
ret
mov
aaa
inc
jecxz
pop
cmpsb
lds
ror
ret
repz
test
aas
push
sbb
pop
arpl
adc
test
pop
xor
mov
dec
mov
je
pop
pop
mov
push
jo
push
push
cmp
scas
imul
cmp
insl
lods
outsl
leave
adc
push
outsl
pusha
subl
daa
push
int3
pop
inc
sub
sbb
int
push
push
mov
add
sub
pop
cmp
mov
daa
je
jb
lcall
xor
rclb
addr16
and
test
sbb
xchg
add
stos
fistpll
cmc
hlt
adcb
push
cli
xlat
sub
and
push
pop
xchg
and
jne
out
dec
clc
jge
and
jns
and
mov
int3
int
adc
mov
cs
xor
popa
push
int
and
mov
fwait
pushf
addl
into
push
jnp
xor
sbb
fmull
mov
ss
pop
dec
jnp
fbstp
or
mov
ss
pop
inc
cmpsb
pop
out
mulb
fldenv
xchg
pop
inc
loop
jns
push
xchg
xchg
shrl
roll
sub
add
icebp
lret
pop
in
inc
mov
arpl
xchg
sub
sub
cmc
inc
xchg
lds
add
out
aaa
mov
xchg
les
xor
jecxz
cmp
lds
sbb
push
idivb
mov
cld
pop
lret
enter
mov
dec
mov
mov
inc
stos
xchg
movsl
loopne
sbbb
icebp
lock
push
in
inc
lods
sahf
test
cs
js
pop
xchg
gs
aas
les
orb
es
cwtl
icebp
pop
xchg
clc
je
dec
je
xlat
sub
pop
cmpb
mov
sbb
movsl
lcall
mov
push
shlb
fidivl
jle
sub
xlat
adc
cmpsl
je
into
sub
xchg
int3
push
test
daa
cmpsb
adc
jno
adc
hlt
aaa
ss
leave
and
in
xchg
cwtl
aad
test
add
sbb
gs
push
cmp
lret
xchg
pop
sub
sbb
dec
lea
jae
call
xchg
in
loop
jbe
mov
cmpb
cmpl
insb
push
jg
gs
rcr
insb
pushf
mov
push
sbb
je
stos
in
fadds
ljmp
scas
lcall
jnp
stos
stos
out
pop
aaa
xlat
xlat
lods
les
xorl
shlb
int
test
loop
cs
jbe
jp
jmp
sar
or
int
pop
and
rcr
pop
push
aad
jae
or
rorb
push
test
into
push
jae
loopne,pt
rol
push
movsl
cmp
jp
mov
adc
repnz
xchg
pop
push
jle
leave
dec
inc
mov
mov
test
and
push
sbb
mov
mov
shl
mov
inc
dec
sub
mov
fstps
dec
outsb
sub
pop
push
add
cmp
adc
mov
inc
call
ljmp
nop/reserved
push
outsb
or
insl
push
aas
adc
lea
shll
pop
push
sbb
pop
in
pop
adc
cli
in
into
adc
cmp
push
push
mov
shl
xor
sbb
pop
sarl
ficoms
scas
std
inc
sarl
cld
mov
daa
dec
test
mov
insb
fcmovb
cmp
xchg
sbb
popa
cmp
xor
cmp
jb
dec
imul
bound
hlt
out
cld
repnz
jl
pop
sub
push
fsub
or
jb
sub
mov
push
je
xchg
jp
mov
push
inc
in
je
loop
lods
out
int3
cwtl
dec
das
mov
lret
jbe
mov
xchg
test
cmp
or
scas
mov
in
push
lea
push
add
lcall
mov
insb
enter
shlb
loopne
movsb
shl
add
loopne
shl
push
lcall
outsl
out
jg
pop
mov
mov
sub
sti
add
aaa
fistps
call
push
jnp
jecxz
pop
xorl
hlt
cmp
or
cmp
shrb
dec
mov
out
insl
imul
push
fwait
scas
push
sbb
add
cltd
jbe
jge
ret
mov
pop
push
test
xor
mov
js
cli
xor
scas
mov
jno
jno
shrb
jne
int
push
int3
es
js
pushf
dec
adc
mov
iret
adc
xor
adc
sub
inc
fst
inc
mov
pusha
repz
insl
push
mov
loopne
mov
add
xchg
push
adc
lcall
mov
test
jne
dec
and
int
int
mov
mov
pop
xchg
scas
leave
icebp
mov
fwait
inc
loopne
lret
aas
and
inc
inc
or
pop
loop
imull
cmp
lods
push
mov
jp
jg
push
loop
imul
xchg
sbbl
mov
mov
and
lret
sbb
mov
jno
hlt
lret
sub
call
adc
push
lea
out
sub
mov
pusha
js
in
insb
cmpsb
pop
cmp
je
or
or
mov
xchg
xor
rcrl
dec
ret
push
inc
xor
lret
call
push
pop
jmp
or
mov
aam
out
push
repz
mov
jp
loop
mov
iret
sbb
in
pop
popf
or
fnstenv
mov
cmp
jecxz
lods
push
fisubs
mov
in
incl
leave
test
popf
loope
pop
lea
pop
or
leave
shl
cld
mov
loope
jb
clc
lahf
in
andl
mov
pop
pop
fwait
mov
and
gs
movsl
xor
in
fisttps
fidivl
rcl
or
inc
loopne
scas
mov
cmp
dec
or
mov
arpl
xchg
and
cmp
xor
xchg
std
push
repz
jb
in
pop
mov
or
add
inc
arpl
dec
fimuls
mov
das
dec
jbe
push
jns
iret
inc
fistpll
push
sbb
divb
ljmp
mov
int
out
sti
mov
or
and
mov
fidivrs
cmp
mov
inc
fcomps
sub
pusha
mov
lret
and
les
cmp
and
xor
int3
cmovns
push
or
sub
or
push
mov
ljmp
mov
fldenv
inc
pop
mov
adc
sbb
dec
outsb
in
mov
mov
fnsetpm(287
jbe
imul
xchg
adc
jns
adc
push
jge
mov
lods
sarl
sbb
push
or
in
jle
inc
mov
mov
jbe
mov
push
imul
jle
insl
lret
test
or
push
mov
insb
test
insb
and
jae
jge
cmp
pop
fs
mov
fildll
xchg
data16
add
xor
sub
into
inc
ds
cmp
addl
iret
ljmp
cmc
stos
pop
fists
mov
fwait
sbb
sub
sub
mov
insb
jp
sub
or
push
cmp
ljmp
fdivrp
hlt
xchg
movb
lods
in
das
inc
lcall
mov
cmp
push
gs
icebp
xchg
scas
mov
rorb
je
sbb
mov
adc
jno
loopne
add
pop
or
in
mov
jno
push
pop
xchg
aam
xchg
mov
dec
dec
test
xchg
push
pop
xor
int3
inc
call
pop
and
mov
mov
rclb
aad
or
add
mov
call
cmp
das
cmpsb
int3
and
cmp
cmp
adc
stc
mov
cwtl
and
mov
ret
mov
and
test
loop
sarl
sbb
jb
loop
xor
stos
stc
sub
cmpsb
aad
jne
pop
jecxz
ljmp
dec
ja
mov
mov
dec
sahf
pop
lret
sub
cmp
std
jno
lcall
enter
cmp
xor
cltd
add
inc
or
scas
pop
and
or
mov
jg
subl
incl
arpl
adc
ljmp
shll
std
xchg
rcr
jno
int
fwait
mov
aam
popf
mov
insl
or
scas
cmp
push
dec
inc
xor
insb
int
inc
jmp
pop
outsl
dec
pop
sbb
ret
notl
sbb
and
fwait
mov
lcall
xchg
mov
push
test
call
out
js
mov
shl
flds
call
adc
lock
mov
xor
lret
pop
mov
mov
sbb
out
dec
pop
cmp
inc
aad
stos
fbstp
addr16
cmp
pushf
cmpsl
cmp
aaa
adc
or
movsb
out
ss
mov
ds
push
cmp
loopne
icebp
data16
and
in
sub
and
addr16
scas
movsb
push
push
ja
popa
or
mov
dec
dec
sbb
cld
inc
jno
push
scas
mov
or
fcompl
or
int
or
pop
jmp
inc
std
into
hlt
std
pop
dec
loope
pushl
iret
fstpt
out
popf
inc
push
outsl
dec
pop
mov
je
lcall
add
rolb
adc
mov
mov
es
add
xorb
inc
test
scas
addb
xchg
lcall
pop
scas
or
sbb
aad
xor
out
xor
adc
int3
insl
mov
add
cli
jb
sbb
scas
clc
lock
mov
mov
jp
xchg
push
jp
dec
pop
mov
addr16
mov
stos
xlat
pop
and
pop
push
cmpsl
pop
mov
adc
xlat
xlat
clc
not
sbb
mov
out
jnp
scas
dec
xchg
js
icebp
pop
mov
sarb
test
jecxz
cmp
and
outsb
mov
scas
test
insl
int3
push
cmp
sbb
push
rol
mov
jmp
sbb
sub
push
sbb
jle
mov
push
mov
push
add
out
lret
xor
mov
lcall
cmp
lods
cmp
bound
dec
sbb
jge
aad
jge
jmp
cli
negb
scas
fnstenv
dec
in
sbb
iret
ja
adc
inc
mov
or
mov
arpl
push
test
xor
xlat
aas
cmpsb
lds
xor
mov
dec
std
push
sbb
xorl
jecxz
dec
add
outsl
test
inc
lea
xchg
jg
aas
adc
pop
or
adc
and
push
and
inc
dec
jne
or
fcompl
call
pusha
lods
in
sbb
das
fadd
push
ljmp
jnp
gs
pushf
icebp
test
test
leave
dec
aad
jle
ja
gs
in
push
ret
lcall
out
rcl
ds
adcb
cmpsl
xor
cs
nop
fistl
pop
push
or
and
add
and
and
pop
call
inc
sti
cmp
test
lahf
mov
dec
dec
jne
arpl
pushl
repz
cs
or
xor
outsb
call
mov
popl
or
mov
cmc
mov
mov
cmpsl
xchg
lods
or
mov
pop
push
or
adc
sub
popa
int
xchg
jb
add
aaa
shll
xor
jae
xchg
stos
or
nop
sbb
out
mov
cltd
push
or
repnz
sub
add
in
mov
sub
outsb
lock
sbb
sub
xor
cs
add
dec
daa
popa
mov
jle
lea
iret
mov
gs
popa
imul
xchg
lret
pop
dec
jns
out
cmp
loopne
lea
mov
pop
and
aam
sti
in
lret
mov
cli
das
ss
out
ljmp
setns
scas
adc
ds
push
inc
xchg
mov
lahf
lods
pushf
dec
sub
shll
dec
xchg
stos
sub
loopne
pop
jmp
cmp
pop
jae
inc
jle
jmp
push
out
addb
push
fnstenv
jecxz
in
jne
jl
aad
subl
aad
adc
test
lea
std
inc
sub
dec
inc
addl
jg
mov
cmpsl
cltd
mov
mov
mov
xor
adc
bswap
or
jne
dec
dec
sbb
or
or
aad
mov
mov
mov
xlat
outsb
ss
mov
cwtl
nop
popa
mov
xchg
out
pushf
lret
add
cli
pop
sbb
push
sti
les
dec
adc
lods
dec
rcrb
xchg
fldt
outsl
popf
sar
sarl
xlat
jno
jg
add
xor
jge
sbb
ds
inc
mov
ret
sub
or
adc
rcll
lea
in
xor
cli
pop
mov
dec
xchg
add
adc
mov
fsts
mov
fidivs
or
pop
push
adc
lods
movsl
xchg
push
into
or
pop
dec
mov
out
xor
pop
imul
adc
rolb
pop
shlb
dec
in
cltd
jge
fldl
pop
rcll
jp
mov
shll
inc
pop
push
xor
mull
mov
mov
dec
adc
gs
bound
xor
cmp
sbb
cmp
adc
loope
sub
jne
repnz
pop
pop
mov
mov
insb
push
mov
aas
or
sub
dec
lret
dec
aad
jl
adc
mov
and
outsl
and
xor
cs
loopne
sarl
addr16
je
out
jmp
pop
cld
jmp
fst
lods
test
mov
inc
pop
jns
dec
std
jb
mov
or
sarl
sarb
stos
mov
idivb
inc
fwait
xchg
scas
xchg
dec
in
sub
push
mov
jl
sub
mov
ret
cmovns
push
rcrl
push
lods
mov
fdivrl
hlt
notl
pop
iret
push
mov
subl
push
add
ljmp
les
test
push
lds
out
pop
cmpsl
or
std
mov
pop
jbe
inc
mov
mov
fs
add
lods
and
mov
test
dec
sbb
loope
mov
cld
lret
and
adc
iret
stc
out
mov
xchg
mov
pusha
inc
mov
sub
inc
adc
jg
stos
stc
ljmp
pop
dec
stos
dec
out
or
std
addr16
push
cmpb
sub
push
dec
in
fs
or
push
xchg
div
or
es
test
dec
addr16
int
cld
jmp
push
adc
jae
paddw
lret
leave
jno
idivl
ficomps
rol
mov
addl
add
mov
jge
push
inc
sbb
xor
pushf
xor
cld
add
inc
inc
dec
mov
fwait
rcrb
lret
mov
ss
aaa
out
insl
push
xchg
stos
stos
cli
mov
fbld
jmp
add
xchg
push
nop
test
ret
data16
add
call
iret
xchg
negb
out
jg
xchg
daa
adc
rcll
inc
or
mov
fcmovu
mov
loop
cmpsb
sar
stc
inc
sahf
sbb
scas
popf
jge
out
adc
xor
cmc
or
stos
xchg
in
ret
mov
jg
inc
lcall
fs
inc
push
mov
cmp
xor
inc
push
sarl
lods
int3
in
lret
xor
test
pop
aas
and
scas
fsubl
xor
jo
sub
xor
jb
sub
cmpsb
incl
movsb
pusha
mov
sub
inc
xchg
out
movsb
sarl
lods
into
pop
push
nop
ljmp
pop
xor
jnp
or
pop
push
lahf
xchg
std
lret
andb
dec
movsb
enter
jae
mov
mov
popl
repz
aad
inc
bts
sbb
push
jae
es
das
adc
jae
pushl
or
scas
pop
pop
sbb
or
xor
daa
pop
xchg
add
mov
mov
dec
inc
cs
xchg
inc
add
jecxz
loopne
fwait
mov
imul
mov
push
cltd
loop
test
sub
push
sbb
outsb
sar
pop
add
sub
or
mov
aam
clc
out
mov
dec
mov
into
mov
cmpsl
or
mov
out
sub
jl
and
mov
jb
mov
sar
frstor
add
pushf
and
jmp
and
inc
int3
jmp
out
mov
mov
std
push
xor
cmp
mov
or
push
sub
fstl
pushf
pop
push
xor
sbb
lcall
xor
mov
cld
dec
lods
fisttps
xchg
std
test
rcrb
sarb
add
cmpsl
jnp
repz
inc
mov
mov
mov
outsb
addl
test
and
pop
or
inc
insl
popf
adc
cltd
nop
mov
pop
cwtl
insb
ja
pop
sti
push
mov
push
mov
sahf
xchg
inc
cmp
lods
adc
xchg
jnp
mov
inc
xchg
adc
test
cmpb
gs
mov
dec
movsb
std
add
cmp
dec
lret
mov
sub
add
mov
mov
pop
xor
mov
mov
je
mov
cmc
in
push
fistps
cmp
xchg
idivb
roll
icebp
adc
es
cwtl
ja
add
lods
enter
imul
leave
jp
jo
lahf
cmpsl
push
jnp
lea
push
jne
popa
add
sbb
shl
ja
scas
mov
idivb
push
shl
dec
xchg
mov
mov
xor
sbb
rcll
mov
addr16
mov
es
jge
ljmp
dec
sarl
sub
adc
push
cmp
sarl
daa
xor
dec
js
pop
leave
mov
cwtl
in
pop
xlat
inc
push
sub
jae
lea
test
adc
loope
push
push
xchg
out
pop
push
jbe
ljmp
divl
dec
mov
out
loope
insl
loope
push
fcomps
orl
scas
jne
jmp
int3
cmp
pop
xchg
jno
adc
rorl
xchg
inc
fmuls
loopne
sbb
in
sbb
and
stos
and
cli
or
lds
out
jo
lea
jg
xchg
repnz
adc
sub
jmp
shl
mov
cmpsb
dec
int3
std
sahf
xchg
add
ja
jbe
lret
lret
lds
aas
aaa
mov
cli
lods
ljmp
mov
lock
fisttpll
jecxz
lds
test
stc
loop
mov
jle
fldz
mov
inc
bound
cmc
add
mov
je
cmp
mov
cld
xchg
mov
lret
jge
lahf
btr
xchg
and
imul
or
sub
mov
fimull
jbe
loope
pop
xchg
add
xlat
clc
icebp
dec
fst
cs
popf
sbb
sbb
add
pop
sbb
in
or
jne
pop
cmp
xchg
sbb
loopne
fcoms
jle
jae
fisubrs
jne
push
lret
stos
jb
xor
dec
and
pop
cmp
popa
pop
fsubs
fnstenv
popf
into
lret
xor
data16
or
lods
stos
scas
cmp
movsl
mov
jmp
jl
out
sbb
mov
insl
loopne
jle
jmp
lahf
push
xlat
iret
push
aaa
int3
add
repz
cltd
lret
or
fdivrp
repz
pop
shr
fs
loopne
sbbl
xorl
or
xlat
call
lret
outsl
imul
or
jmp
scas
ds
push
sbb
adc
std
stos
cmp
mov
cld
push
sub
xchg
xor
mov
insl
subl
lcall
addl
dec
decl
sub
loope
xor
dec
add
sti
adc
mov
lcall
iret
mov
jle
xchg
inc
negb
mov
push
adc
xchg
inc
mov
xchg
add
sbb
pop
dec
mov
lcall
inc
pop
movsb
mov
dec
ret
fmul
popa
cmc
pop
testl
adc
jmp
fnsave
push
add
mov
ret
and
and
ds
jmp
test
and
repz
sbb
cmp
add
shlb
es
inc
enter
push
cmp
cwtl
fstl
kunpckwd
sub
jge
sbb
inc
ret
popf
les
scas
mov
dec
dec
daa
movsb
mov
push
xchg
cs
and
sarb
dec
push
and
jp
and
mov
adc
jns
aaa
jns
xchg
add
outsb
lods
int
sbb
adc
imul
insl
outsb
js
push
lods
leave
mov
lock
add
dec
pop
fcomi
xchg
mov
push
insl
test
movb
in
loopne
add
test
subb
xchg
or
rorl
ret
dec
in
inc
insl
ja
out
imul
movsl
sub
gs
sahf
loop
jbe
mov
in
out
fdiv
push
xchg
lods
xchg
xchg
sbb
imul
je
xchg
pop
dec
jg
movsl
bound
bound
int
mov
lahf
pop
test
rcr
insl
add
repz
sbb
dec
imul
bound
push
into
and
movsl
jg
paddb
imul
adc
bound
pop
sub
mov
aaa
cltd
fimull
lods
inc
shlb
dec
inc
fmuls
repnz
daa
rolb
jmp
mov
enter
mov
shr
mull
idivl
ret
dec
adc
iret
sub
dec
rcr
xor
push
test
xchg
popf
inc
mov
cmp
ds
ds
cmp
mov
cld
movsl
mov
hlt
jns
or
inc
push
fdivs
fdivs
mov
or
aaa
mov
call
cmp
pop
pop
cmpsb
inc
mov
mov
or
mov
add
test
jg
hlt
fsubr
pop
xchg
out
scas
ljmp
adc
or
ss
outsb
fiadds
xchg
sahf
and
mov
jmp
leave
add
or
sbb
dec
lret
shll
sub
adcl
punpcklwd
ljmp
lods
in
mov
addr16
inc
stc
test
out
mov
adcl
insl
cmpb
scas
adc
pop
int3
push
cmp
fwait
mov
xchg
les
les
jmp
pusha
stos
fld
fists
mov
sub
or
jns
cmp
jnp
cmp
jo
adc
mov
outsb
xor
hlt
add
push
jp
hlt
mov
mov
xchg
loopne
pop
popa
dec
hlt
xchg
shll
aas
adc
les
fs
add
pop
pop
xor
pusha
stos
jno
test
mov
cs
in
mov
jnp
shll
lea
es
mov
icebp
test
les
out
jmp
shll
cmpsb
xchg
mov
mov
adc
out
fs
add
inc
inc
jmp
jmp
and
dec
jecxz
cmpsl
scas
pop
xlat
pop
adc
sbb
mov
cmp
jno
popa
and
cmp
inc
xor
out
sbb
test
pop
pop
lds
fwait
mov
jg
mov
mov
cmp
mov
les
pusha
daa
push
pop
mov
pop
jge
mov
push
cmpb
push
shl
enter
push
das
jae
and
stos
cmp
in
movl
sub
mov
pop
or
lock
scas
pushf
lock
inc
push
jae
cmc
std
fs
jns
xlat
or
lods
cmpsl
ja
cwtl
cmp
aas
cli
sub
hlt
jge
adc
icebp
test
jne
xchg
jne
or
inc
inc
cld
mov
inc
lock
shll
repz
rol
lcall
mov
jnp
negl
or
mov
jle
xchg
je
or
shl
push
cmpb
lahf
ret
outsl
and
sub
push
mov
in
jge
sbb
subl
insb
bound
out
lock
hlt
jbe
out
xchg
aam
nop
push
sub
fwait
xor
daa
cmp
jl
adc
adc
inc
and
jge
insl
hlt
out
repnz
push
rcll
mov
out
xor
inc
repnz
int
dec
in
xchg
ds
mov
adc
jp
xor
addr16
in
sbb
dec
pushf
pop
aaa
ret
pop
roll
sub
filds
xor
or
add
int
sub
stos
cmp
pop
mov
push
mov
inc
jle
or
dec
pop
lock
loop
mov
xor
lods
dec
int
dec
imul
adc
dec
nop
aaa
dec
dec
orb
shrl
cmpsb
movsl
ljmp
pop
mov
std
add
aam
pop
in
stos
mov
int3
mov
stos
adc
xlat
das
out
pop
adc
lods
les
mov
mov
lea
lret
icebp
sti
gs
pop
inc
xchg
movsb
dec
jb
outsb
dec
or
push
ljmp
popf
mov
mov
dec
in
ficompl
jmp
jo
lods
call
push
in
clc
cs
sbb
test
rolb
cmpsl
xlat
out
ja
lahf
in
pop
gs
cmpsb
pushf
dec
daa
not
in
sub
jle
xor
mov
sub
insb
cmp
jbe
mov
jmp
stc
push
jg
and
mov
sbb
pop
add
cmpsb
mov
test
push
pop
clc
in
mov
cmp
dec
jg
inc
xchg
pop
aaa
xchg
xor
lcall
icebp
push
pushf
fadds
bound
lods
shl
into
lea
inc
scas
enter
rorl
imul
cmp
or
push
mov
fcomps
movsb
push
lds
scas
add
add
mov
scas
inc
add
mov
and
add
lret
popa
sbb
shrb
cmp
pop
pop
imul
inc
inc
or
outsl
lret
andb
sub
mov
icebp
mul
pop
dec
cmpsb
mov
sub
pop
pop
mov
iret
push
sub
xor
xchg
cmp
jnp
dec
dec
pop
addr16
jnp
jle
xor
adc
push
out
cmp
pop
nop
out
adc
stos
dec
dec
aam
roll
loope
adc
int
fnstcw
scas
add
loop
cmp
lahf
fwait
mov
mov
xchg
fsub
sbb
xchg
cmp
push
ja
push
ret
mov
or
call
pop
fnstcw
push
test
push
ljmp
sbb
mov
cmp
dec
push
cmp
mov
dec
cmp
mov
loop
test
or
test
mov
mov
enter
and
mov
pushf
test
jg
sbb
fucomip
test
insl
shr
mov
sti
loop
sbb
cmp
push
xchg
pop
mov
insl
xchg
sti
test
lahf
mov
dec
sbb
int3
mov
jo
push
cld
fs
sub
or
inc
dec
imul
dec
repz
aaa
out
outsl
pop
mov
xor
pop
subb
leave
mov
jle
cmpsl
lret
pop
sbb
gs
out
sub
stos
push
fsubrl
lock
mov
jo
ret
ficompl
pushf
adc
cli
xor
xor
sti
or
jnp
fdivs
jae
xor
or
sub
mov
stos
inc
adc
out
fwait
es
push
mov
movl
movl
jmp
sahf
aas
mov
je
movsb
dec
sbb
test
jmp
cwtl
jnp
int
iret
fildll
cmp
ret
xchg
push
lods
dec
adc
mov
push
andl
loope
jl
pop
jbe
jl
fldl
or
outsl
add
insb
test
lods
and
or
mov
dec
in
jle
mov
push
mov
sub
and
cld
enter
cmc
cmp
inc
movsb
les
push
aam
je
and
jbe
mov
inc
jg
ss
icebp
jl
jne
fwait
inc
inc
fcoml
sbb
rorb
nop
out
iret
gs
sub
push
std
lret
cltd
aam
fs
or
out
incb
add
ss
mov
lock
movsb
jl
add
lret
mov
mov
test
imulb
pop
cmp
xchg
iret
arpl
and
mov
and
in
mov
dec
xchg
and
cmp
and
or
mov
and
clc
add
daa
mov
pop
pop
mov
loope
lcall
enter
mov
mov
add
rcll
pop
dec
shlb
stos
and
push
ss
popf
ljmp
xor
cli
ret
inc
test
hlt
sub
xor
movsb
sbb
in
popf
aad
lret
sbb
les
shll
imul
mov
divb
stos
pop
push
push
div
push
fs
repnz
add
mov
aad
push
pop
mov
lds
mov
inc
push
cmpsl
repnz
scas
dec
jo
outsl
jbe
arpl
lock
pusha
mov
lods
and
xor
jg
mov
stos
add
sbb
movsl
xchg
scas
inc
stos
add
out
andl
pop
leave
push
lods
test
adc
push
stos
fucomi
hlt
jg
movsb
arpl
popa
daa
fidivs
xor
sbb
push
or
xor
dec
mov
std
xchg
cld
in
icebp
pusha
mov
xor
jl
add
fcom
ret
fimull
mov
pushf
fcmovne
add
loopne
enter
aam
and
jns
jmp
clc
jge
dec
add
mov
sbbb
and
push
jno
cmp
ret
xchg
add
jae
xchg
xchg
add
test
ds
pop
mov
push
and
inc
icebp
lock
jg
lcall
inc
or
fnsave
sbbl
push
hlt
dec
mov
ret
xchg
inc
adc
inc
stos
iret
fadds
mov
sub
lods
or
xor
pop
int3
xchg
xor
gs
pop
push
in
aaa
mov
and
push
mov
mov
xchg
subb
push
leave
or
popa
shl
dec
pop
ljmp
sar
shrl
or
mov
pop
daa
lret
mov
cmp
mov
pop
je
push
outsb
xchg
mov
std
out
push
out
jns
imul
shll
stos
jno
jo
adc
popf
jp
lea
inc
jne
das
or
mov
mov
xor
mov
arpl
jg
cmp
adc
in
dec
push
and
pop
pop
pushf
stos
shr
test
pop
jecxz
call
lahf
mov
pop
or
add
jg
aad
insb
outsl
mov
mov
pop
lods
es
das
or
stc
popa
ret
lea
mov
cmp
sbb
lea
sti
mov
int
push
loopne
pop
nop
cmp
stos
aas
inc
sbb
pop
sub
aad
pop
stos
cmpl
mov
jmp
mov
add
cli
pop
insl
sti
ficompl
rorl
push
and
inc
xor
xor
sbb
dec
es
popa
xorl
rcrb
push
sbbl
jle
ja
or
xchg
fsubrl
inc
jle
icebp
inc
fidivrl
loope
stos
cmp
lods
and
jne
lcall
pop
xor
mov
mov
int3
pushf
lods
pushf
push
xlat
inc
jbe
push
aaa
dec
xchg
mov
fstps
das
sub
jae
imul
cld
mov
mov
dec
add
xor
orl
jnp
sbb
aas
cli
pop
push
sub
scas
aam
je
mov
pop
jge
mov
push
daa
je
nop
dec
std
sub
test
jl
xchg
int3
pop
and
mov
in
dec
icebp
rcll
pop
pushf
push
xchg
lock
je
push
aaa
popa
js
xchg
das
divb
out
divb
mov
jmp
push
adc
iret
lock
mov
pushf
sub
mov
jnp
pop
jle
xchg
push
arpl
push
into
lods
pop
jb
outsb
in
jo
push
mov
bound
mov
test
movsl
sub
mov
jns
xorl
repz
clc
lret
lds
cmp
push
mov
lcall
push
and
in
enter
fists
loopw
xlat
cmp
pop
hlt
pusha
mov
aas
loope
sbb
in
xchg
mov
inc
lea
sbb
or
dec
sbb
les
lahf
mov
scas
test
ret
jnp
add
xor
mov
sub
dec
mov
fs
push
out
outsb
xor
sbb
or
and
ljmp
mov
pop
clc
add
into
xchg
test
inc
stos
lock
push
test
inc
int
imul
je
insl
out
dec
fsubrs
adc
sub
mov
sub
out
unpcklpd
jne
sub
call
data16
mov
or
ja
push
sub
xor
fs
sti
scas
or
and
div
fnstsw
sbb
lds
stos
mov
cmp
scas
mov
sahf
sbb
pusha
js
lock
and
addr16
push
jns
jno
xchg
mov
ret
and
adc
inc
inc
cli
call
in
push
push
loope
cwtl
lahf
shlb
pop
stc
mov
inc
loopne
lcall
mov
jmp
cmpsl
inc
dec
popa
les
and
sub
testb
cmpsl
outsb
fcoml
jbe
loopne
pop
mov
jp
cmp
push
testb
cmpsl
jno
sbb
movsb
xchg
imul
mov
cmp
cmp
cmp
lods
call
data16
cmp
mov
jnp
jne
addr16
xchg
cmp
mov
sbb
sbb
push
cltd
imulb
dec
or
ret
or
sahf
sbb
pusha
ja
or
imul
add
push
ds
aam
cld
xchg
data16
andl
or
shrb
popf
out
sub
sub
lods
ljmp
rolb
mov
imul
inc
in
jl
jecxz
mov
ds
mov
sbb
sti
xor
cmpsl
cmpsl
cs
sarl
mov
xchg
into
fcompl
sub
cwtl
mov
ret
pop
imul
gs
cltd
cwtl
mov
popa
int
cltd
shll
test
dec
push
sarl
xchg
repz
std
sbb
inc
cmc
adc
aaa
adc
fldenv
pop
jo
loop
iret
fdivr
fidivs
sti
outsl
std
ret
cmp
outsb
and
adc
xlat
in
or
subb
xchg
xchg
push
call
add
ror
lods
fldt
dec
aam
pop
pushf
pop
test
mov
das
push
jecxz
adc
cwtl
ret
sahf
mov
mov
or
mov
cmp
mov
rolb
mov
ret
ret
mov
stc
in
inc
cld
sbb
sahf
dec
jle
dec
cltd
mov
mov
sbb
cmc
mov
iret
ret
mov
sub
push
jg
cli
push
stos
call
mov
data16
cmpsl
push
jmp
mov
dec
ficomps
popf
outsb
and
inc
stos
cmpsl
mov
gs
cmc
fnstsw
xor
fwait
jmp
and
pop
popa
or
jge
fsub
jl
stos
lret
mov
lods
sbb
mov
sbb
daa
stc
jg
fwait
add
movsl
mov
or
jb
data16
xchg
jo
sub
dec
dec
clc
push
adc
mov
clc
lret
push
push
lods
mov
mov
xor
mov
sbbb
pop
xchg
popf
int3
outsb
in
push
rcrl
mov
es
ss
std
int
dec
push
rcl
lds
adc
mov
je
cli
adc
outsl
adc
shrb
outsb
pop
cmp
mov
jae
ss
imull
xchg
inc
lods
retw
mov
aad
add
xorl
sub
dec
cmc
and
clc
mov
inc
add
pop
and
and
outsl
lahf
stos
sbb
inc
pop
test
pop
ljmp
fdivs
mov
cmp
fstpt
mov
dec
jo
popa
ss
xchg
cmp
in
aad
jbe
mov
sub
adc
inc
fistpl
sub
mov
sbb
fisubl
insl
fisubs
adc
pop
xchg
aaa
jecxz
ss
shll
in
adc
sub
jno
rep
imul
in
or
pusha
popa
rolb
mov
iret
jmp
add
shl
outsb
pop
outsb
outsl
stc
pushf
mov
jae
sbb
pop
in
into
inc
scas
jmp
and
stc
cli
or
or
and
cmp
cmp
popf
add
add
pop
push
sub
jl
push
fs
push
dec
push
xchg
jg
leave
jns
jl
lods
xor
repnz
aaa
mov
add
xchg
insl
xchg
sbb
push
inc
loope
bound
pop
mov
insl
arpl
ret
mov
rcrl
xchg
ret
xchg
std
mov
mov
mov
xchg
xchg
test
jecxz
push
mov
sbb
push
cmpsl
jae
pop
xchg
les
aad
and
push
je
pop
and
arpl
outsb
ret
imul
and
mov
xchg
jecxz
cmc
orl
add
jae
pushl
jge
xchg
mov
adc
out
or
or
pop
addr16
mov
mov
adc
pop
sub
xchg
std
inc
nop
sbb
mov
xchg
add
push
std
xor
jno
xchg
or
and
call
addb
xor
sbb
insl
stos
in
mov
loopne
into
es
adc
repnz
sub
outsl
int
shlb
fsubl
call
arpl
and
jno
in
jo
js
or
add
loop
fldcw
shrb
cld
mov
mov
cwtd
cltd
jecxz
fwait
adc
loope
add
cmp
enter
aam
mov
xlat
ret
inc
xchg
lret
lahf
sbb
dec
add
cmpsb
and
push
inc
jb
shrb
outsl
imul
popf
int3
push
push
arpl
out
lret
jle
mov
sarl
xchg
ljmp
mov
imul
sahf
loop
push
jno
adc
jbe
xor
jae
mov
jg
aas
sub
repnz
xor
sti
push
xor
mov
cmpb
adc
dec
movb
push
dec
mul
jle
add
xchg
inc
push
ss
lahf
sub
mov
and
sub
movsb
bound
je
cwtl
sbb
xor
inc
sbb
add
ja
outsl
sub
scas
hlt
jecxz
daa
dec
enter
sub
xchg
mov
bnd
xor
xchg
subl
decl
js
xchg
jb
lock
mov
push
jp
add
xchg
test
jge
push
mov
and
cmp
sub
inc
lea
divl
hlt
and
and
ja
pop
jne
pop
mov
out
inc
in
aad
rorl
push
inc
shll
adc
ljmp
mov
pop
repz
add
dec
mov
mov
sub
adc
orb
sub
add
sahf
nop
addr16
pop
lods
sti
cmp
shl
movsb
dec
stc
adc
sbb
sub
mov
xor
mov
jecxz
push
negl
pop
xor
lret
jle
cmpsl
aas
movsl
mov
cmp
sub
out
lods
jns
mov
xor
dec
mov
aam
addr16
gs
dec
nop
enter
cmp
stos
mov
pop
jmp
adc
out
mov
filds
pop
out
inc
or
mov
jle
inc
cmp
mov
or
inc
scas
ja
xchg
stos
mov
dec
test
leave
xchg
dec
or
test
lods
xlat
fcomip
mull
fistpll
stos
jne
push
popf
dec
rorb
sbb
test
test
scas
movsb
fnstcw
lods
mov
and
dec
pop
dec
cmp
xchg
mov
jp
test
cmp
iret
leave
inc
fidivrl
xor
leave
mov
mov
je
out
push
arpl
mov
in
cmp
sbb
lcall
out
repz
xchg
adc
das
imul
mov
mov
jns
sbb
mov
xor
in
mov
xchg
scas
xchg
data16
xlat
ljmp
es
add
or
nop
mov
stos
inc
mov
lea
rolb
pop
push
daa
movsb
jne
cmpsb
or
stos
xchg
push
xchg
aaa
push
mov
ret
in
pop
sti
cli
xorb
push
cwtl
add
dec
out
push
std
int
jl
dec
fmul
sbb
mov
pop
cmp
jmp
push
fmull
loope
lahf
mov
aaa
loopne
push
test
mov
mov
cmp
push
stc
jne
inc
ret
mov
jg
push
add
push
inc
leave
sbb
xor
insl
dec
icebp
xchg
cs
xor
inc
dec
dec
nop
icebp
insb
lea
andl
add
adc
addr16
sbb
insb
lcall
and
dec
and
outsl
push
sub
popa
xchg
enter
outsb
cmp
test
andl
fldcw
lea
icebp
jne
pop
inc
fsubrl
push
popl
mov
dec
icebp
repnz
mov
xchg
cmp
ret
ja
cmp
adc
mov
inc
sub
dec
mov
bound
dec
inc
les
adc
mov
cli
call
lahf
shl
outsb
mov
rcrb
xchg
mov
lcall
xor
mov
jne
loope
push
aas
pop
push
mov
inc
add
cmp
push
repz
lret
dec
adc
aas
rcll
and
sub
push
test
jnp
sbb
repnz
mov
xchg
pushf
jmp
xor
subl
xchg
nop
lcall
cmp
pop
flds
clc
mov
fiaddl
cmc
jns
mov
mov
lret
cli
mov
loopne
repnz
cs
inc
push
mov
insl
inc
jge
iret
dec
xchg
sbb
xchg
popf
mov
int
mov
lock
pop
mov
sbb
dec
xchg
xor
ficomps
inc
cld
pop
xor
sti
rcrl
movsb
int3
and
mov
sbb
inc
pop
stc
ja
lds
mov
jnp
dec
xchg
test
sub
sbb
mov
bound
fs
rcr
push
pusha
inc
cmp
xor
cmpsl
hlt
sbb
xor
fadd
imul
sub
and
icebp
mov
xchg
fs
pop
mov
push
in
in
pop
lds
rol
or
sub
xchg
jmp
adc
and
mov
ret
dec
test
enter
xor
add
bound
cld
enter
inc
xchg
lcall
jp
xor
xchg
dec
popf
mov
pop
lahf
cltd
mov
in
pop
pusha
dec
or
jg
or
dec
daa
and
shlb
pop
ret
mov
jb
ret
stc
cmp
lock
data16
ljmp
push
aam
jno
insb
add
and
clc
cs
lods
sbb
lods
and
add
mov
in
pop
pop
dec
hlt
insb
sub
sub
or
cmc
mov
inc
pusha
inc
mov
imul
shrl
and
pop
adc
xchg
adc
jbe
push
ss
jns
xchg
popa
xchg
jno
jne
fisubrl
pop
and
leave
iret
enter
inc
mov
sbb
mov
dec
es
push
lret
call
sarl
int3
jns
jae
xchg
jl
mov
xor
enter
test
or
movsb
mov
ret
out
jmp
fadds
pop
sbb
sbbl
mov
nop
rolb
pop
out
pop
sahf
sub
mov
and
out
fldcw
mov
mov
insb
and
mov
addr16
mov
ret
lea
sbb
pop
xchg
mov
cmp
testl
xchg
mov
das
loopne
jg
sbb
mov
pop
inc
cs
mov
sti
mov
mov
cmp
repnz
inc
repz
cmpsb
push
push
fwait
cli
repz
in
inc
sbb
imul
fnstsw
xor
and
xchg
pop
push
out
rclb
data16
inc
cmc
sarb
mov
lock
cmp
loope
xchg
mov
cmp
xchg
dec
popa
xchg
mov
and
pusha
xchg
add
push
xchg
scas
insl
lret
xor
scas
jle
dec
outsb
aam
adc
cmp
call
gs
xorl
das
lret
add
sub
sub
inc
subb
iret
out
mov
add
adcb
lret
idivl
js
rol
stos
xchg
mov
clc
js
mov
cmp
cli
jg
sub
or
push
pop
jge
lahf
icebp
mov
adc
xor
xor
add
jecxz
arpl
pop
pop
call
and
and
cli
mov
test
sbb
cmp
fidivrl
cltd
sbb
test
bound
jne
dec
repnz
xor
and
dec
dec
xchg
cmp
inc
xchg
sbbl
mov
lds
push
mov
jbe
pop
sbb
pop
repnz
lods
and
nop
inc
ja
cmc
add
add
into
adc
nop
loopne
imul
and
cmpsb
fiaddl
pop
stos
lods
dec
dec
ljmp
test
insl
ficoms
sbb
dec
shll
in
in
mov
xchg
pop
fidivs
push
sub
pop
in
js
adc
stc
pop
popf
mov
adc
psubw
aas
icebp
sub
jp
or
stos
movsl
push
hlt
shr
push
push
mov
sbb
dec
sbb
mov
jg
ficompl
sbb
cmp
cmp
inc
out
xchg
push
xchg
push
or
sub
cli
inc
cmp
leave
imul
fs
ficoms
cmc
cmpsl
mov
lock
fisttpl
sbb
fnstcw
jmp
adc
stos
std
pop
fidivl
sub
cmp
inc
mov
mov
adc
ds
out
iret
stos
xchg
das
jecxz
pusha
add
sahf
cmpb
cmp
fs
nop
xchg
inc
inc
sub
lods
test
movsl
mov
jg
mov
imul
mov
or
jae
pop
pop
fiaddl
mov
lret
push
cltd
mov
mov
enter
icebp
cmp
sub
and
mov
add
les
out
dec
adcl
cmp
push
xor
cmp
and
addr16
sub
xor
inc
hlt
push
sbb
in
mov
movsb
dec
dec
clc
push
cwtl
mov
lds
adc
add
cmp
add
jecxz
cmp
pop
add
pop
mov
movsl
nop
add
adc
imul
dec
cmpsl
out
cmpsb
inc
enter
push
into
push
xor
add
xlat
aaa
adc
or
jg
dec
clc
dec
iret
mov
sti
icebp
iret
mov
mov
sbb
jl
mov
push
jecxz
sbb
into
mov
push
adc
shl
outsb
fdivrs
cltd
xor
mov
movsl
aaa
jae
xchg
lds
inc
pop
xchg
mov
mov
and
inc
mov
outsl
jno
dec
jae
add
inc
leave
dec
mov
jle
xchg
push
ja
or
aas
fmul
pop
int3
or
out
popa
sbb
lods
sub
pushf
xchg
loopne
xor
sub
mov
cltd
inc
ret
pop
adc
adc
movsl
xchg
xchg
sub
insl
mov
xchg
add
lcall
or
cmp
adc
test
ret
lahf
std
cmp
insl
dec
scas
shlb
xor
movsl
negl
mov
repz
rorl
inc
jg
stos
dec
or
pop
mov
repnz
out
cwtl
repz
or
lds
cmp
push
pop
hlt
ja
sti
fdiv
jbe
paddq
fidivrs
into
outsl
mov
push
iret
inc
clc
pop
push
add
cmp
call
jecxz
cmp
mov
xchg
rorl
call
mov
sahf
mov
inc
jb
lcall
fdivl
mov
xor
sub
mov
in
xchg
xor
loopne
cmpsl
ljmp
xor
mov
out
adc
sarb
outsb
movsl
sub
stos
cmp
mov
ret
mov
je
inc
pop
sbb
or
scas
jecxz
push
js
jo
or
sbb
pop
stos
mov
add
xchg
push
pop
mov
fldcw
dec
sahf
sti
mov
fs
push
je
mov
sti
out
push
ficoml
mov
or
loopne,pn
lods
sub
pop
js
inc
out
sbb
std
ret
push
iret
sub
jb
aas
notl
addr16
cld
adcl
jae
out
xchg
test
and
mov
pop
aam
in
fwait
outsb
imul
shll
ret
scas
add
sbb
jo
mov
jp
ficoml
sub
pop
mov
outsl
xorl
or
pushl
jbe
inc
mov
sahf
adc
repnz
xchg
jl
scas
scas
xorb
add
in
mov
dec
pop
scas
inc
addl
xor
mov
testb
repnz
das
sbb
das
aad
inc
shll
into
int
pop
jl
mov
xchg
jno
mov
jbe
dec
push
imul
add
mov
or
or
xorb
clc
sbb
adc
stc
push
into
xor
aam
push
push
mov
sbb
imul
add
ret
jne
sbb
xor
xchg
fcoms
inc
xor
out
mov
push
and
data16
sub
jmp
add
xor
lea
fistpll
cmp
dec
sub
in
sahf
or
push
mov
jns
in
mov
clc
stc
cmp
inc
clc
test
enter
dec
fwait
dec
dec
mov
pusha
ja
xchg
fisubrl
push
jnp
ret
loop
dec
mov
scas
pusha
mov
in
aad
mov
outsb
mov
cmp
xchg
jp
pusha
pop
add
jmp
cmp
fucomip
cmpsl
js
dec
mov
lahf
pop
jae
xchg
or
movsb
mov
add
mov
jo
xor
cmp
into
cs
ds
push
out
ret
sub
cmp
out
dec
dec
in
es
xor
cld
push
jl
sarb
adc
popf
fsubrs
jge
int3
jns
out
mov
popa
xor
jmp
jge
jno
and
inc
rcrb
adc
repz
enter
xor
clc
lret
jno
mov
xchg
sti
xor
xor
jns
sub
pop
lret
push
mov
nop
pop
stc
scas
loopne
sbb
sti
call
daa
test
test
fwait
adc
test
cmp
sbb
stc
fadd
push
sti
inc
mov
and
add
adc
jae
mov
fsts
mov
bound
mov
lcall
fs
imul
lods
mov
push
sbb
push
fdivs
mov
dec
mov
nop
adc
je
aad
add
ss
fcoml
cmpsb
hlt
add
pop
lcall
repz
add
jne
mov
std
mov
jbe
xor
mov
xor
xchg
or
xchg
loopne
stos
call
movsl
out
sbb
mov
mov
inc
pop
test
xlat
mov
cmp
pop
pop
cwtl
sub
inc
lahf
cmp
lahf
or
outsb
push
ds
push
scas
mov
push
mov
cmp
mov
inc
jb
cld
ja
scas
and
aaa
dec
lret
icebp
int3
pop
inc
jae
mov
lcall
pop
jecxz
adc
scas
and
adc
les
mov
and
in
xor
sub
call
sub
jbe
cmpsb
mov
call
mov
adc
xchg
mov
push
inc
loop
das
mov
jecxz
mov
in
pop
or
pop
enter
in
sub
or
xchg
xchg
sub
sbb
push
repnz
push
and
arpl
dec
mov
addr16
mov
pop
jecxz
out
in
cmp
cwtl
sbb
xchg
jo
and
frstor
cld
in
sub
dec
push
pop
dec
lret
inc
push
gs
js
int3
aaa
sub
sub
dec
cmp
lods
popf
fists
or
xchg
enter
pop
sbb
sti
ss
aad
in
pop
repz
xchg
or
test
imul
outsb
lret
sbb
sarb
aas
pop
jns
jnp
out
loope
ficompl
ljmp
dec
scas
aaa
sbb
int3
adcl
sahf
lcall
mov
mov
pop
jp
jecxz
jnp
repnz
lret
mov
sub
aas
dec
popf
or
outsl
int
push
iret
or
push
inc
mov
and
hlt
es
or
and
scas
push
cmp
mov
lock
pusha
cmpsl
or
or
test
add
decl
fcomps
or
push
lods
fistps
push
adc
cmp
icebp
ja
jg
adc
push
xchg
push
mov
das
dec
xor
aam
jae
and
jmp
loop
std
push
cmp
jl
pop
lret
loop
inc
jp
fstl
or
xchg
add
fsts
movsb
xchg
jge
add
xor
mov
push
lahf
jnp
in
cmp
mov
icebp
roll
adc
fists
adc
testb
out
inc
popf
shll
xchg
mov
sbb
adc
scas
jns
std
out
cmp
pop
push
pop
sub
xchg
mov
dec
pop
push
push
or
bound
mov
adc
in
fmull
bound
jge
sahf
sub
or
movsl
mov
mov
jbe
sbb
decb
ljmp
jae
outsb
stos
int
jle
in
jb
add
sub
sub
enter
xchg
and
or
push
fidivs
fwait
leave
sub
lock
mov
xchg
mov
push
inc
fs
test
mov
cltd
xlat
jg
repnz
inc
std
push
dec
or
jmp
daa
js
inc
out
sbb
cmp
inc
pop
adc
mov
cmpsb
dec
gs
pop
xor
and
sbb
outsl
mov
dec
nop
es
mov
jg
inc
pop
decl
les
xchg
imul
pop
xchg
mov
jl
cli
arpl
pop
lret
lahf
fwait
test
cld
mov
adc
cmpsb
pop
cli
inc
out
sub
fidivrl
mov
and
out
into
ja
push
mov
sub
sbb
push
dec
xor
shrl
and
adc
push
xchg
loop
mov
inc
mov
or
or
ss
icebp
xchg
shrb
sbb
xor
adc
lret
xor
pop
das
or
loop
lods
sbb
or
jle
imul
testl
xchg
jne
jbe
or
lret
std
pop
pop
mov
aad
cwtl
sub
xorl
jbe
nop
dec
cmc
mov
push
mov
imul
shll
loopne
aas
nop
xor
inc
jmp
add
jno
xor
ja
aaa
lahf
ucomiss
and
cmp
xchg
sar
mov
and
addr16
test
sbb
xchg
inc
popa
inc
xchg
dec
sahf
mov
leave
mov
in
adc
sub
mov
or
jo
in
lcall
loope
outsb
mov
push
es
test
loop
ds
daa
push
sbb
push
lcall
js
clc
jns
loopne
repz
inc
popa
xor
ret
out
lahf
mov
mov
fiaddl
push
dec
enter
ljmp
jne
dec
dec
dec
addr16
stc
pop
ret
rol
icebp
sub
sub
insb
fcoms
mov
rorl
data16
lock
mov
lret
fidivrl
sub
mov
divb
mov
lahf
lcall
push
sbb
inc
imul
mov
rcll
pop
jge
mov
lock
mov
or
gs
pop
iret
push
jns
ret
sbb
outsl
dec
test
stc
xlat
add
mov
cmp
cmp
push
subb
sbbb
mov
shll
jne
std
lods
and
push
test
and
pop
xchg
jb
in
pop
xor
cmp
mov
es
rcrb
dec
mov
sub
cmp
sub
imul
inc
adc
cmp
mov
aad
rol
jmp
push
aam
xor
xor
xchg
cmp
pop
lret
int3
adc
mov
and
in
pop
push
and
lahf
mov
xchg
adc
test
xchg
xchg
std
and
jne
push
ret
sbb
sub
add
adc
data16
lock
mov
sahf
cmp
add
mov
repz
add
jns
ds
ds
mov
sbb
adc
dec
or
and
clc
dec
push
ds
and
dec
movntps
fs
movsl
in
push
fisubrs
and
mov
movl
lea
xchg
push
idiv
cmpl
xchg
lds
mov
or
into
in
push
and
divb
mov
mov
das
mov
or
inc
and
loop
movsb
mov
mov
mov
xchg
add
into
andl
mov
outsl
mov
clc
mov
pushl
mov
mov
pushl
pushl
pushl
pushl
mov
pushl
push
push
call
pop
pop
pop
leave
ret
push
mov
sub
movl
cmpl
je
cmpl
jb
jmp
push
pushl
push
push
call
mov
dec
mov
jmp
movl
xor
lea
andl
mov
adc
movl
lea
xor
mov
mov
andl
mov
inc
mov
cmpl
ja
jmp
push
pushl
push
pushl
call
cmpl
jb
mov
movl
cmpl
je
cmpl
jl
jmp
push
pushl
call
xor
add
dec
mov
jmp
mov
andl
push
adcl
xor
subl
push
add
push
mov
xor
mov
mov
movl
cmpl
je
cmpl
jle
jmp
push
call
mov
dec
mov
jmp
mov
add
mov
sub
mov
andl
mov
inc
mov
cmpl
ja
jmp
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
jmp
cmp
xor
insl
or
sub
push
ss
jp
xlat
cwtl
jnp
nop
mov
insb
cmpsl
dec
or
ficompl
aad
or
enter
in
mov
ljmp
or
lods
xchg
outsl
fsubrl
add
aas
outsl
aam
mov
pop
xor
pop
push
xor
es
shrl
mov
mov
fsts
fwait
jo
arpl
mov
movl
lret
into
mov
into
cmp
pop
xor
or
pop
lock
ret
jbe
lcall
shll
or
xchg
dec
mov
mov
outsl
xchg
push
push
cmp
adc
xchg
fistps
lock
shlb
fimuls
pop
add
sub
insl
lock
das
inc
sbb
pop
xor
outsl
repnz
iret
popf
aas
dec
iret
movsb
sbb
xchg
sub
add
mov
sub
mov
adc
jae
leave
sub
xor
js
push
jo
adc
mov
iret
dec
or
mov
loopne
xor
mov
sub
test
jle
xor
push
fildll
outsl
adc
stc
mov
icebp
inc
repnz
xor
sub
aaa
sbb
addr16
and
test
stos
xchg
cli
or
sub
inc
shll
mov
mov
pop
aas
cmpsl
mov
dec
mov
lcall
ds
cmpsb
ds
adc
mov
shll
and
rorl
hlt
mov
adc
outsb
hlt
adc
sub
daa
pop
push
pusha
pusha
cmp
cli
bound
iret
mov
dec
popa
xchg
cli
dec
fsts
cmpsl
dec
xor
push
sbb
jle
xchg
and
hlt
loop
jns
out
xchg
loop
out
cld
mov
fimuls
sub
mov
push
imul
roll
dec
fsubs
pop
je
leave
mov
mov
pop
cmp
inc
testl
pop
jno
lahf
int3
mov
int
movsb
pop
and
hlt
cmp
sub
cmp
lock
sub
mov
nop
nop
in
lea
sbb
add
leave
mov
ja
mov
inc
adc
es
in
loop
jae
mov
call
popa
ds
loope
pop
pop
sbb
movsl
sbb
int
dec
pop
push
inc
jae
je
add
ss
sti
popf
add
jmp
jno
inc
cmp
adc
sbb
jae
add
pcmpeqb
cli
rclb
sbb
loopne
test
dec
dec
adc
mov
xchg
xchg
mov
js
push
orb
inc
xor
inc
lods
add
sbb
add
mov
mov
xchg
and
pop
and
aaa
inc
pop
add
jmp
xor
insl
push
push
in
xchg
mov
inc
inc
jne
xor
ljmp
loope
push
adc
pop
les
daa
mov
dec
inc
xor
cmp
jb
xor
hlt
iret
ljmp
shlb
daa
leave
repz
sub
ret
lcall
cmp
inc
push
test
mov
push
dec
mov
or
sub
mov
leave
xor
stos
xor
pop
mov
dec
jl
sub
rcrl
pop
jo
mov
mov
dec
xor
addr16
mov
mov
clc
jge
dec
xor
sub
pop
andl
stos
lea
mov
fwait
sbb
pop
in
idiv
lods
iret
sub
sbb
jg
mov
addr16
jnp
mov
inc
aas
push
jl
scas
std
nop
leave
out
dec
lret
stc
push
pusha
xchg
jb
lods
daa
shll
push
or
and
jb
addl
ret
mov
push
jae
dec
mov
cld
ss
pop
movsl
mov
push
icebp
out
stos
jnp
mov
mov
dec
jae
icebp
xor
out
popa
in
cmc
xchg
cmpsb
mov
add
rol
push
cltd
or
sbb
sub
mov
in
call
mov
xchg
lea
dec
mov
daa
xchg
cmp
movsl
jns
outsl
inc
mov
push
fwait
fwait
pop
xchg
sti
cli
std
jl
aad
xchg
xchg
jmp
and
xor
add
push
in
int3
shll
movsl
and
dec
pop
inc
movsb
in
dec
loop
orl
add
sbbl
jl
sbb
adc
mov
push
shrl
jns
test
leave
lock
jmp
int
insl
popf
xor
loope
ds
push
cmp
test
data16
fldl
mov
mov
push
outsb
lcall
imulb
cmova
cli
cmpsb
push
push
fs
call
mov
lret
mov
push
sbb
icebp
movsb
aas
sti
mov
jmp
popf
cmp
push
ja
ret
or
out
ror
xor
sti
je
aam
jmp
subl
movsl
popf
adc
and
inc
mov
scas
sub
push
lock
pop
popa
repnz
sbb
test
sub
gs
cli
hlt
dec
or
xchg
cmp
test
push
cmp
and
test
mov
mov
pop
adc
cmp
dec
jge
leave
insb
sub
mov
or
mov
in
pop
call
into
aam
aaa
push
and
shll
cmp
pop
adc
bound
insb
fcmovu
push
jmp
orb
mov
mov
test
or
mov
pop
xchg
xchg
mov
mov
aas
testb
outsb
enter
cmp
loopne
fs
mov
and
push
jl
pop
out
push
int
popf
adc
sti
sbb
data16
rorb
shll
or
mov
das
dec
inc
mov
inc
sub
pusha
movsb
inc
push
outsb
sbb
ds
xor
inc
insl
xlat
pop
leave
mov
imul
mov
cwtl
mov
add
test
ljmp
rcl
xchg
in
jmp
arpl
ljmp
in
inc
in
mov
jno
fbld
rcll
inc
out
daa
jle
js
xor
pop
es
mov
mov
in
mov
add
inc
mulb
test
pop
test
sub
mov
test
ds
sarl
pop
or
mov
mov
js
xchg
cli
xor
cltd
je
aaa
push
sub
inc
in
xor
packsswb
sub
xchg
dec
stos
adc
mov
fisttpll
inc
mov
out
inc
cmpsl
fstps
pop
mov
shrl
cmp
cmpsb
mov
cmpsb
cmpsb
lret
pop
jge
xor
rcl
jns
mov
adc
mov
out
sub
inc
rcr
cmpb
fldcw
xor
push
adc
daa
jl
ds
push
je
arpl
push
xor
and
outsl
inc
adc
mov
mov
filds
ret
sbb
jmp
mov
cmp
dec
outsl
dec
push
pop
mov
inc
and
leave
mov
imul
leave
jecxz
jae
xor
add
xor
iret
dec
mov
push
filds
les
xor
xor
xor
out
mov
jmp
mov
mov
mov
mov
jl
inc
arpl
push
shll
fidivrs
aam
in
or
in
jae
xor
shrb
inc
xchg
aad
dec
sub
lods
das
jle
int
mov
js
mov
cwtl
in
dec
jnp
mov
jno
sub
jo
aad
mov
add
mov
mov
push
fs
mov
mov
adc
andb
test
data16
or
adc
sub
xchg
mov
mov
insb
add
cli
dec
fwait
adc
pop
loope
cmpsb
inc
scas
or
jg
cmp
pop
mov
and
outsb
movsb
cli
xchg
lahf
rolb
mov
pop
js
or
push
mov
scas
or
ds
jg
fwait
outsl
shll
inc
fs
divb
orl
sarb
sub
inc
subb
das
push
push
inc
pop
mov
ljmp
fsts
sub
sbb
fisubrs
or
int
negl
or
push
ljmp
and
in
aad
or
in
shlb
push
jb
lds
shlb
xchg
out
add
jg
insl
pop
xchg
xor
cwtl
scas
lret
andb
sbb
jp
mov
jge
dec
std
movsb
push
iret
and
cli
mov
cli
out
push
mov
pop
icebp
dec
xor
sub
xor
scas
and
xor
cld
les
xor
int3
out
pop
pop
cmpsl
push
popf
sti
cmc
inc
xchg
mov
push
xor
in
dec
push
testb
scas
xchg
js
and
add
cmp
adc
adc
or
pop
aad
ficoms
push
lcall
fimull
cmp
lahf
rolb
fwait
test
xor
lcall
pop
sbb
pop
jge
pop
jne
imul
jl
stc
bound
sub
sarb
in
repnz
fcompl
addr16
xor
mov
jmp
jg
jns
and
ss
push
fistpl
notb
iret
fisubrs
loope
pop
sub
ret
js
adc
ds
mov
pushf
jmp
rclb
mov
hlt
sbb
lea
repnz
xor
sbb
sbb
adc
inc
pop
xor
repnz
sub
inc
push
mov
sub
mov
mov
bound
int3
les
cmp
mov
pop
mov
addb
aad
adc
pop
stos
mov
adc
insb
jno
mov
lahf
add
imul
cmp
insb
lret
pop
pop
inc
pop
cwtl
fwait
arpl
fistps
popa
mov
jne
arpl
xchg
into
cmpsb
push
mov
cmp
push
inc
mov
lods
test
rol
in
push
icebp
cmp
push
fdivl
enter
and
out
hlt
xchg
xadd
push
and
jl
sbb
addr16
fs
adc
cs
push
xchg
push
xchg
addr16
andl
fsubp
adcb
inc
das
inc
outsl
imul
jle
lods
pop
add
push
sub
mov
arpl
fsubl
xchg
inc
and
xor
inc
pusha
xchg
clc
push
inc
ja
loope
fiadds
push
or
jmp
add
jno
faddl
insb
enter
add
jp
pusha
add
cmp
xchg
sub
lret
mov
out
cmpsl
pop
lcall
inc
or
dec
sub
or
stos
dec
mov
gs
jge
mov
xchg
test
andb
mov
iret
cmc
sbbb
lahf
mov
in
sarl
inc
imul
imul
and
ja
cwtl
jo
inc
rorl
pusha
or
out
sbb
mov
xor
xchg
or
lock
jle
and
push
lock
fisubrl
sbb
dec
imulb
push
out
and
sub
fidivrl
out
shrl
push
aam
fists
or
add
js
mov
clc
sti
outsb
inc
jns
insb
cld
push
sub
inc
pop
jnp
roll
das
testb
cmpsb
sub
pop
pop
xchg
jo
cmp
lods
sbbb
dec
aad
fcomip
addl
pop
incb
int
imul
stos
je
add
jecxz
lods
mov
mov
mov
or
mov
ret
and
fldl
lret
add
cmc
aaa
push
mov
sub
lds
std
inc
fldcw
jo
gs
push
pop
inc
mov
pop
iret
mov
aam
pop
sarl
and
lea
mov
mov
cmp
ja
jecxz
mov
inc
inc
pop
adc
push
pop
repnz
xchg
in
cmpl
pusha
lcall
jecxz
push
outsb
icebp
xchg
fwait
in
mov
arpl
movsb
sbb
jle
and
sub
mov
stos
repz
out
dec
rclb
xor
push
clc
inc
add
jge
add
mov
lods
cmp
fwait
inc
ljmp
pop
aas
pop
test
fadds
lods
enter
stos
mov
mov
inc
ja
push
call
mov
mov
hlt
jns
jbe
sub
popf
jbe
aam
xchg
inc
stc
jbe
and
mov
mov
lret
push
add
shrl
pop
test
pop
pop
pop
mov
push
pop
pop
test
leave
mov
add
cli
lcall
mov
inc
lods
jl
and
xchg
icebp
and
mov
push
in
dec
mov
sbb
lret
xchg
rcr
lock
mov
add
push
out
jle
push
and
stc
and
dec
out
mov
in
xor
inc
stos
push
aas
ret
mov
ffreep
jb
aas
xorb
adc
pop
shrb
xchg
pop
dec
dec
add
mov
dec
data16
fbstp
dec
insl
mov
xor
pop
xchg
cmp
sub
pop
cmp
adcl
jns
mov
mov
mov
enter
lcall
push
ret
hlt
push
or
out
lods
pop
jl
sti
jns
mov
sub
data16
sbb
and
out
mov
es
mov
mov
out
mov
cltd
mov
ds
adcl
int
pop
adc
enter
movsl
jns
adc
add
imul
stos
pop
sub
frndint
jo
inc
icebp
add
mov
push
cli
push
push
fsubrp
in
pop
dec
iret
mov
inc
icebp
adc
adc
aad
ret
negb
or
aaa
enter
hlt
lods
push
pusha
std
into
xchg
push
mov
add
mov
fstpt
das
fistpl
shlb
fldcw
stos
fildl
cli
iret
fucomi
adc
jns
pop
sub
push
mov
xchg
fnsave
enter
xchg
lds
jo
cli
out
inc
inc
sub
lea
arpl
xor
cmp
add
xchg
gs
mov
xor
lahf
sub
lock
fbstp
lea
or
add
xor
inc
lret
jp
out
dec
push
sti
ja
mov
push
cmp
xchg
or
push
and
loop
popf
lds
call
out
cltd
add
jg
xchg
inc
cmp
jge
out
pop
aad
or
cmp
and
into
sarb
fldl
imull
mov
cltd
loop
fistl
ja
inc
mov
cmp
imul
pushf
push
sbb
xchg
out
mov
jns
pop
cmpsl
ficomps
inc
lds
jbe
mov
aaa
lret
and
fcmovne
and
loop
adc
and
sti
cld
adcl
rorb
jne
inc
or
sub
jns
setns
movlps
sti
sbb
mov
adc
cmp
call
dec
cli
pop
nop
dec
outsl
mov
dec
gs
sti
in
or
es
mov
cmp
mov
push
push
jae
insb
std
pop
rolb
in
and
andl
in
mov
pop
outsl
test
daa
pushf
xchg
dec
rolb
sbb
lahf
jbe
xor
dec
xlat
sub
mov
icebp
fcomps
iret
aas
inc
cmp
movsl
push
aas
ja
mov
sub
lret
dec
inc
sub
xchg
lcall
test
fadds
subb
xchg
pushf
loope
jb
inc
mov
jne
test
jecxz
pop
jl
das
add
cmp
aas
mov
adc
call
push
jp
sahf
and
test
sahf
mov
ja
cmp
dec
inc
xchg
movsl
inc
mov
push
aas
adc
lods
testl
mov
sbb
dec
fldcw
repnz
dec
rol
push
out
mov
push
shrl
inc
stos
divl
lods
mov
scas
sub
cmc
insb
out
ja
shll
pop
imul
nop
out
and
cmp
cmp
les
mov
sarb
shrb
ss
sub
sbb
cld
jmp
add
dec
aaa
iret
aad
out
adc
add
pop
div
call
dec
sub
out
jns
stc
lret
sbb
bound
jecxz
out
cmpsl
xor
iret
icebp
cwtl
stos
push
mov
push
dec
or
jbe
ja
movsl
mov
adc
mov
pop
pop
push
cmp
sub
js
rorl
ljmp
cmpb
jnp
sbbb
dec
sbb
fdivrs
addr16
adc
sar
js
lock
sbb
fs
or
js
inc
adc
lret
and
imul
adc
orb
scas
xchg
push
scas
jg
adc
mov
dec
fwait
rcrb
les
mov
jecxz
sub
sbb
movsl
mov
jmp
inc
out
jp
pop
out
jge
push
fsubl
popa
add
int3
adc
mov
xor
in
rcll
or
pop
shll
mov
pop
ret
pop
out
test
xchg
enter
lcall
mov
movsb
xchg
call
nop
cmpb
mov
sub
sbb
mov
pushf
mov
mov
adcb
ds
je
or
popa
ds
sbbb
mov
iret
inc
fdivs
aad
jmp
cwtl
sbb
imul
outsl
int3
xchg
test
in
sbbb
movsl
sub
icebp
sar
jecxz
mov
cmpsb
loope
out
and
call
dec
pop
jnp
and
mov
fsubrs
xchg
aaa
sbb
movsl
lea
out
push
pop
cmc
fsts
xor
push
adc
xlat
mov
bnd
push
jo
mov
sti
cmp
decb
fldcw
sbb
das
stc
sub
lods
jne
in
mov
lock
jno
inc
mov
inc
add
xchg
movsl
pop
jp
cmp
add
cli
jecxz
rcll
push
shrb
or
leave
lret
and
cmp
sbb
xchg
push
cltd
icebp
xchg
xchg
or
sbb
dec
outsb
fisttps
pop
das
dec
add
mov
enter
push
xchg
and
cmp
repz
je
adc
leave
pop
xchg
es
pop
cmc
int
enter
add
test
push
push
jnp
pop
pop
pusha
flds
outsb
lods
sbb
scas
jp
ret
insl
or
add
push
mov
push
in
stos
popa
roll
sub
inc
and
xor
sub
adc
js
test
and
mov
xchg
rcll
hlt
mov
jl
sahf
dec
scas
mov
xor
mov
jge
iret
push
dec
push
mov
rorl
shlb
sbb
and
mov
sbb
cmp
rclb
mov
push
cmc
jecxz
sub
ljmp
mov
jnp
lock
daa
mov
movsl
xorl
mov
push
sahf
and
popf
cmc
sub
lock
cwtl
fwait
jmp
orb
mov
and
dec
inc
pushf
test
sub
dec
js
jno
pop
mov
pshufw
cs
sarb
adc
xor
xor
insb
dec
or
dec
and
subl
pop
sbb
loop
jno
dec
or
inc
in
leave
mov
lcall
and
jno
sub
mov
jecxz
aam
mov
lock
inc
mov
pushf
jl
movsl
fadd
scas
ja
or
jmp
mov
xor
cmc
add
lahf
sub
lret
and
ljmp
stos
sbb
dec
and
pop
outsl
mov
mov
push
clc
sbb
adc
in
pop
lret
lods
lret
pushf
jmp
mov
xchg
cmp
hlt
mov
jle
addb
jecxz
test
jl
xchg
shll
add
es
nop
mov
or
cmp
fcomip
sti
je
cwtl
mov
jne
adc
sbbl
in
popa
or
mov
xor
sbb
mov
adcl
pop
hlt
out
mov
aad
test
out
mov
sbb
jg
dec
add
adcl
inc
xor
fbstp
neg
je
add
jo
cmc
cmp
xchg
inc
fiadds
js
jae
rclb
pop
pushf
cld
push
fnstcw
sub
adc
call
fildl
dec
add
xlat
icebp
lret
mov
rolb
mov
pop
xlat
mov
movsb
jg
sahf
fidivs
shl
movsl
test
popf
jmp
and
mov
jbe
cmpsb
pop
lcall
stc
rclb
mov
aam
out
aas
mov
js
xchg
jbe
mov
xlat
and
clc
jmp
or
inc
xor
cwtl
test
inc
stc
mov
dec
jno
sbb
pop
jnp
push
xor
pusha
mov
pop
pop
sub
cmp
dec
rorl
lret
pop
mov
sub
dec
fucomip
pusha
aam
mov
repz
repnz
and
lods
adc
or
mov
and
fnstenv
fs
aad
dec
add
shll
aam
pop
mov
mov
std
sbb
stos
out
or
mov
out
xor
in
adc
insl
je
insl
mov
aaa
jb
mov
add
inc
out
inc
cmp
out
ret
mov
xchg
jno
outsl
and
cld
fstp
ljmp
and
imul
jge
scas
jnp
inc
jnp
inc
outsb
pop
es
sub
test
imul
stc
xor
adc
add
or
mov
adcl
insb
mov
nop
bound
dec
xor
stos
out
and
inc
es
fisttpll
das
sbb
xchg
jecxz
xor
movsl
fistpll
xchg
sti
sbb
cmp
fimuls
push
leave
icebp
dec
jge
mov
pop
cmp
dec
pop
dec
popa
and
xchg
clc
insb
jnp
sub
or
aaa
xor
sbb
mov
mov
iret
mov
jmp
popa
imul
xor
pop
push
out
and
rorb
mov
sub
xchg
inc
cmp
in
and
xchg
jle
xchg
in
sbb
fnsave
fisttps
scas
repz
pop
inc
xchg
pop
mov
cli
xorl
aad
sbb
je
popl
add
mov
dec
pop
inc
dec
mov
and
xchg
pop
dec
aam
and
test
sub
inc
fistps
js
sahf
mov
insb
scas
decb
pop
out
add
in
aas
push
pop
fs
out
jge
push
mov
adc
dec
cmp
fcomps
xor
filds
push
dec
adc
add
cmp
cli
mov
xchg
pop
mov
pop
jmp
and
aam
push
iret
sub
mov
sbbb
xchg
out
mov
cltd
cld
push
clc
ss
adc
das
movsb
outsb
xchg
mov
incb
mov
rorl
inc
movsb
subb
outsl
test
jg
sbb
dec
dec
mov
push
xchg
jno
adc
dec
xor
stc
or
in
mov
shll
popf
xchg
into
and
adc
pop
fldenv
iret
mov
lret
add
fadds
ss
sub
mov
xor
lret
mov
jg
push
mulb
inc
sbb
jp
leave
jbe
xor
push
ljmp
pop
insl
sbb
lcall
mov
add
sbbl
jmp
mov
push
ficoml
inc
and
jle
and
xchg
sub
cs
clc
sub
xchg
and
into
aad
out
jp
add
adc
jae
jp
pop
imul
movsb
adc
lcall
xor
mov
cmp
fidivl
cmp
lock
jmp
mulb
xor
pusha
jne
test
insl
gs
jg
ss
push
dec
dec
lock
aaa
and
in
repnz
nop
cmp
push
push
orb
sahf
xchg
jmp
add
mov
sbb
cmp
lahf
lret
jg
lcall
and
push
stos
cli
xchg
dec
mov
movsb
aam
push
sub
pop
jns
jl
dec
jno
in
mov
sbb
mov
xor
mov
pop
cltd
mov
insl
mov
lea
mov
test
sub
xlat
sub
addl
lcall
int
andl
mov
popa
sbb
pop
pop
add
xor
popf
iret
sub
xor
aas
scas
mov
sbb
jg
sti
bound
xchg
mov
mov
outsl
inc
inc
rcl
or
aam
add
mov
pushf
pop
insb
sbb
popa
jl
inc
pop
jo
test
aaa
imul
sbb
in
push
cmpsl
insb
stc
aad
test
addl
imul
and
mov
jmp
and
and
push
adc
cmc
cs
test
inc
outsl
jbe
das
aaa
mull
enter
stc
aaa
push
cld
fsubrp
or
into
imul
cli
add
inc
loopne
rcr
lods
mov
in
arpl
add
bound
popw
fucom
stos
adcb
ret
cwtl
xor
cmp
mov
mov
sbb
and
and
sbb
nop
pop
inc
call
adc
push
and
or
rclb
movsb
pop
mov
add
inc
icebp
and
push
add
cld
lcall
push
imull
push
sub
mov
inc
daa
xlat
add
and
xor
xor
lahf
xor
xor
xor
mov
cmp
jmp
int
int
dec
cmpb
pop
movb
jmp
scas
add
adc
movsl
fs
xor
inc
cmp
cmp
ljmp
add
push
or
jl
lods
ja
inc
js
xor
daa
hlt
pop
leave
scas
imul
pop
mov
dec
mov
adc
out
aas
shlb
xchg
push
add
test
ljmp
xchg
cmpsl
add
and
cmp
in
push
shl
add
insl
pop
jae
cmp
xlat
mulb
mov
loope
stc
iret
int
adc
clc
mov
and
push
fxam
pop
sbb
sub
jne
out
in
sbb
and
out
mov
mov
dec
in
cmc
fdivr
lds
xor
mov
fwait
mov
fadds
inc
mov
faddl
xchg
lea
in
mov
pop
mov
sub
and
sti
pop
nop
and
shlb
inc
jne
mov
addr16
in
mov
cmp
sar
sub
push
push
cmp
lds
lea
call
pop
ljmp
xchg
push
in
cmpsl
hlt
jb
inc
mov
nop
test
mov
cwtl
sbb
xchg
in
js
pop
inc
add
mov
pushl
inc
lds
fisubl
in
out
xor
inc
leave
push
je
pop
in
into
mov
pop
idivl
loopne
add
jnp
data16
or
repz
inc
mov
stc
jae
mov
push
dec
mov
je
fwait
lods
mov
orb
mov
popa
mov
test
cmp
xlat
mov
arpl
aad
arpl
jae
int3
mov
and
inc
shll
pushf
mov
int
jecxz
xchg
shlb
adc
ret
aad
jns
lret
fdivrl
gs
aam
and
loop
outsb
stc
shl
enter
movsb
ficoms
pop
call
mov
mul
dec
xlat
mov
sub
sub
lods
lcall
or
jecxz
or
popf
sbb
sub
and
pop
cmp
fcoms
xor
jg
jmp
jge
mov
inc
add
cmp
pushw
xchg
divb
pop
push
jnp
mov
jg
lock
aas
pop
inc
jg
jo
scas
cmpsb
in
leave
cmp
ss
lahf
add
repnz
xor
aad
push
stc
xchg
andb
fs
in
ss
pop
xchg
push
loop
push
loope
push
sahf
xor
dec
mov
dec
sub
dec
xor
bound
les
lods
inc
stos
out
test
jmp
popa
lret
test
cmc
mov
jmp
jecxz
sub
sar
jbe
fwait
dec
stos
rorl
cmp
fwait
mov
inc
inc
cmp
insb
std
rcrb
mov
sub
fildl
insb
movsb
ret
jge
pop
add
and
shlb
adc
fcom
cmp
sub
sbb
and
or
lcall
pop
and
add
jo
push
aas
add
push
js
mov
pop
and
fidivl
fcoml
and
loope
pop
mov
lret
mov
test
or
scas
xlat
out
in
xchg
push
inc
xchg
xchg
shl
fsubs
jp
mov
mov
sbbb
imul
inc
jo
and
xchg
dec
test
fdivrl
jmp
in
mov
jle
and
adc
push
inc
and
mov
rcr
movl
xor
jbe
call
jb
add
adc
std
call
insb
fwait
mov
jmp
pushf
imul
cvtps2pi
push
out
ror
and
lds
dec
out
into
loop
lret
std
sub
sbb
sar
xor
jb
scas
xchg
inc
inc
or
scas
push
adc
adc
cmc
aad
and
popf
ret
inc
dec
std
inc
fimull
mov
popf
pusha
pop
inc
mov
sti
inc
jl,pn
pop
lcall
jl
pop
inc
lds
vpaddsb
pop
ljmp
int3
out
add
cmp
popa
jbe
dec
pop
or
clc
pop
arpl
das
repnz
mov
and
inc
push
or
test
sar
test
js
pop
outsl
das
or
xor
and
cld
adc
aas
mov
sub
out
cmp
xorl
xchg
push
push
aas
mov
in
xchg
cmc
pop
add
adc
push
mov
cmc
sahf
mov
and
out
stc
ss
push
int3
lret
mov
inc
pop
test
add
dec
xchg
mov
imul
call
mov
mov
mov
sbb
mov
sub
mov
xor
add
movl
cmp
movl
jne
movl
jmp
dec
cmc
pushf
adc
je
mov
popf
push
pop
adc
jp
and
jnp
sbb
push
cmpsb
fstpl
into
push
in
dec
shrl
pop
jmp
jb
jo
adc
push
sub
mov
push
mov
mov
addr16
jge
inc
mov
fcompl
pop
paddsw
pop
imul
sarb
std
xchg
jno
jmp
xor
clc
mov
in
sub
leave
test
sbb
push
aaa
imul
cli
jge
mov
lcall
pop
mov
add
mov
adc
add
test
pop
mov
loope
mov
push
movsl
movsb
inc
nop
in
xor
jb
ret
pusha
ficomps
cld
push
pusha
mov
imul
idiv
repz
aam
iret
add
push
adc
cmp
nop
pop
insl
stc
in
iret
xchg
jp
mov
xchg
inc
ljmp
inc
sahf
dec
lea
movsl
call
bound
dec
ss
pop
cmp
fists
mov
cmp
outsl
sbb
bound
xchg
inc
jp
in
mov
adc
iret
roll
mov
mov
mov
enter
cmp
aad
push
dec
jmp
cs
cmp
and
repz
push
adc
cmpsl
mov
insl
mov
ffreep
adc
jbe
xchg
sbb
mov
xchg
xchg
jae
outsl
sbb
loope
adc
repnz
adc
aaa
adc
add
fcoms
mov
out
push
imul
insl
push
mov
mov
push
in
ja,pt
fnstenv
mov
and
iret
add
xchg
inc
push
push
insl
pop
add
loop
pop
cmpsb
add
mov
das
adc
js
cmpsb
jl
jl
loop
inc
cmc
jo
xchg
jnp
popf
movsl
js
ficompl
loope
adc
dec
std
sbb
nop
lock
xchg
or
or
fst
lds
inc
push
add
sti
jne
push
jge
add
ret
inc
mov
into
repnz
fisubl
dec
into
es
or
cs
xchg
inc
mov
sbb
push
in
jle
cmc
xor
incl
roll
std
imul
mov
add
jno
xor
pop
pop
sub
clc
mov
xchg
jno
popaw
pop
cli
test
cmc
pop
and
lcall
mov
les
or
sub
idiv
cmp
sbb
mov
sbb
push
cmp
mov
sbb
mov
or
xchg
sbb
popf
xchg
ficompl
stos
loope
or
out
addb
adc
or
lret
scas
test
test
pop
mov
out
mov
or
cmp
sub
rcrb
mov
push
mov
int3
lret
and
cmp
clc
repz
in
shll
clc
into
cmp
inc
xchg
dec
pop
fsubrl
fcmovbe
mov
pop
push
lock
repnz
fstpt
loope
insb
add
sub
push
sti
shrl
cmp
bnd
sahf
jns
dec
shrl
rorb
pop
cld
fildl
pop
adc
into
mov
in
xor
cmp
rcrb
mov
xchg
mov
andl
cs
mov
pop
test
jno
add
sub
pop
push
and
mov
ret
sbb
or
cmpsb
push
fnstcw
pop
pop
es
xorb
mov
xchg
and
lds
jmp
adc
nop
pop
rclb
sub
cmp
mov
filds
cmpsb
mov
mov
and
les
hlt
int3
rolb
flds
or
adc
push
lods
mov
lahf
adc
mov
pop
scas
mov
mov
sub
mov
fists
sbb
nop
outsl
pop
dec
ret
mov
out
out
push
adc
in
repz
dec
bound
insl
push
or
sbb
jmp
mov
test
in
or
in
loope
repnz
enter
scas
jbe
into
dec
lcall
cld
sub
aas
sub
xor
and
jbe
mov
rcrb
in
xor
inc
push
sub
fisubrl
aas
pushf
movsb
pusha
aaa
dec
bound
enter
lea
sti
andb
cld
ds
jecxz
mov
das
adc
pop
out
mov
aam
mov
sbb
or
ljmp
or
mov
push
dec
mov
mov
cmp
pop
fucomip
sub
xlat
sbb
shrb
xchg
cmp
push
fcoml
dec
adc
addr16
das
push
xor
jne
sahf
repnz
cmpsl
xor
sbb
inc
sbb
xchg
mov
adc
jl
lret
jle
xlat
jns
xchg
mov
lock
mov
cs
mov
xchg
adc
cmp
push
int
mov
push
or
leave
stc
sbb
sbb
aam
push
add
push
fisubs
lds
sar
mov
xor
pop
mov
sbb
mov
iret
das
daa
orb
fs
sahf
pop
mov
popa
imull
dec
jne
out
jne
inc
call
fdivrl
lods
stos
and
out
xchg
popf
into
push
sbb
out
pop
pop
push
test
xchg
push
dec
push
pop
sub
sbb
and
movsb
dec
jo
aam
sbb
pop
and
ss
or
cmp
jbe
out
push
std
jl
cwtl
or
aam
bnd
hlt
sub
inc
mov
adc
sbb
sub
aaa
mov
dec
xchg
pop
fs
mov
mov
xchg
inc
jle
pop
fcmovnb
jbe
mov
stc
ret
adc
lret
mov
inc
mov
cmpsl
ja
pop
fistps
mov
xlat
sbb
popf
ds
xor
jmp
mov
ss
mov
sub
cs
and
test
xor
dec
mov
pop
xor
mov
mov
rcrb
sub
add
adc
xor
stos
and
pop
in
repz
adc
std
mov
sbb
movsl
sbb
enter
fistl
rcr
jmp
jne
lods
push
arpl
fwait
cmp
cld
xor
jl
push
mov
fstpl
dec
out
lret
cmp
xchg
or
pop
jmp
std
or
xchg
outsl
adc
cmc
cmpsl
cltd
out
dec
mov
mov
outsb
fsubl
ds
add
insl
and
sub
xchg
xor
sbb
cmp
cmp
adc
cmpsl
mov
negb
dec
mov
sub
pop
mov
scas
pop
mov
lcall
enter
sub
adc
pop
jno
inc
aas
cmp
jecxz
dec
push
ja
aaa
adc
je
mov
popa
in
xchg
je
pop
push
push
int3
jl
jg
mov
inc
lea
shl
movsb
pop
flds
mov
in
mov
les
hlt
push
sbb
xchg
sub
adc
test
jbe
adc
dec
push
subb
pushf
lahf
ficoml
mull
cmp
mov
add
cmp
and
loop
inc
mov
test
loop
adc
lahf
push
sub
and
jp
push
push
sahf
jp
mov
outsb
jno
jp
adc
addr16
lods
lods
jecxz
xchg
mov
push
subl
jbe
mov
inc
push
sti
imul
bound
inc
hlt
add
leave
ret
lahf
sub
add
cmpsb
mov
adc
sahf
insl
sub
in
push
movd
lods
in
xor
or
js
nop
mov
in
and
xchg
leave
push
shl
insl
push
add
mov
out
cwtl
test
inc
test
in
sub
cmp
stos
cmpsl
xor
orb
movsl
cmp
mov
sub
adc
addr16
dec
stos
stos
xor
xchg
imul
xchg
sahf
iret
shl
scas
loope
and
push
adc
outsb
fwait
push
mov
arpl
scas
push
inc
lock
dec
pusha
xchg
xchg
mov
and
sbb
lods
mov
and
jmp
orl
push
sub
mov
scas
pop
mov
mov
js
repz
pop
fisttps
in
arpl
fcmovnu
stos
cld
pop
outsb
shlb
xchg
xor
loop
ja
push
shr
nop
imul
outsl
jbe
outsb
call
cld
mov
fs
mov
out
movsl
pop
xchg
shrb
xchg
es
dec
out
push
mov
hlt
nop
xchg
push
xorl
je
aad
testl
pushf
hlt
gs
dec
nop
lcall
imul
je
or
int3
mov
pop
or
or
jge
ss
in
jecxz
cmpsb
jnp
inc
fwait
mov
fnstenv
jge
sahf
push
jp
fadd
mov
out
jp
in
call
xorl
jle
mov
xchg
push
dec
push
insb
cmpsb
int3
aad
pop
dec
lahf
fadds
xor
cs
clc
xor
rclb
mov
dec
fsubr
aaa
ror
jnp
lods
cmp
push
sbb
fsub
push
int3
je
mov
lods
pop
jo
aaa
divl
mov
popa
movsb
jp
mov
cld
mov
mov
push
or
lea
jnp
lcall
adc
cmp
movsl
sub
or
add
imul
outsb
icebp
pop
mov
gs
sbb
loope
dec
cmp
stos
fnstenv
fsubrp
xchg
push
push
out
popf
pop
jnp
lcall
mov
cmp
out
test
popa
scas
jp
pop
adc
in
sahf
aas
mov
fsubrl
movsb
in
cmp
cli
mov
add
daa
outsl
mov
call
mov
jnp
xchg
push
test
xor
and
jge
data16
imul
mov
mov
and
sahf
adc
mov
add
imul
xchg
jge
dec
fstpl
sub
jecxz
test
divl
nop
js
ret
fdivr
fiadds
gs
cli
sub
cltd
stc
jbe
mov
mov
sub
jo
data16
movsl
mov
add
cmp
ljmp
adc
cltd
lcall
daa
fiaddl
cmp
gs
inc
cmp
sahf
repz
shlb
xor
mov
xchg
fiadds
pop
sub
adc
add
aam
mov
je
stos
xchg
outsl
add
sahf
adc
in
aam
popf
cmp
sti
pop
idivb
or
cmp
test
negl
js
sbb
iret
mov
cmpsl
mov
movsl
repz
add
stos
in
loope
sbb
xchg
inc
xor
test
push
out
dec
outsb
push
das
or
push
bound
mov
arpl
add
pop
inc
push
fsubrl
add
sbb
imul
shrl
inc
xchg
fsubl
sub
cmc
sbbb
cmpsl
jecxz
dec
mull
xlat
dec
pop
inc
mov
int3
addr16
push
mov
and
push
cwtl
inc
test
xor
ljmp
pop
testb
mov
insb
shr
xchg
sub
sub
mov
es
leave
mov
xor
or
inc
dec
insb
sbb
dec
mov
out
sbb
iret
mov
lds
sub
nop
cli
insb
push
es
out
cmp
stos
pop
mov
hlt
push
stc
jnp
pop
popf
outsb
mov
inc
in
push
aas
shr
xor
dec
add
cmc
xchg
sbb
jge
mov
push
outsl
cmp
popf
setb
xchg
sub
mov
mov
inc
sub
mov
aaa
mov
mov
pop
es
push
cmc
push
jbe
iret
incb
mov
jge
cmc
pushf
fnstsw
jnp
mov
test
movsb
iret
jge
cmc
push
pop
push
inc
or
std
mov
js
push
add
dec
mov
les
fcoms
lods
scas
jb
mov
jl
mov
mov
fstl
imul
mov
movsl
icebp
mov
mov
xor
test
inc
iret
je
in
in
xchg
xchg
in
repz
inc
jno
stos
or
out
push
gs
loop
mov
cwtl
xchg
daa
popa
test
out
add
pop
mov
jno
lods
cmp
fdivrs
jl
arpl
pop
push
push
mov
inc
and
cmpsl
and
movsb
push
negl
and
test
xchg
pop
mov
and
outsl
cli
mov
xchg
jbe
mov
lds
mov
xchg
rcrb
in
mov
adc
xchg
xchg
repnz
ret
jmp
xchg
push
jnp
push
xchg
call
repnz
fisubrl
ret
xchg
inc
bound
rcll
call
sub
jmp
dec
aas
out
mov
cwtl
push
test
into
dec
add
cmp
sbbl
fcmovnu
aad
push
into
stos
add
stos
push
shrl
movl
les
cmp
out
outsl
fs
les
je
inc
inc
cmp
in
sub
fstp
jge
xor
das
aaa
pusha
gs
push
int3
mov
or
mov
sub
daa
jge
sahf
lods
xor
cmp
xor
outsl
ret
or
jg
enter
and
sub
movsb
jmp
add
adc
pop
or
jl
jle
jbe
add
ljmp
sub
cmpl
pop
aam
jnp
inc
dec
and
xor
test
stos
xchg
lods
stos
rcrb
mov
add
jo
test
in
xor
test
jge
outsl
add
popa
mov
clc
outsb
and
les
mov
mov
fisubrl
xchg
jge
and
hlt
fistpll
leave
push
inc
pop
test
jle
pop
add
out
add
xchg
and
jno
cmp
addr16
xchg
fdivl
subb
int
call
inc
push
mov
xchg
mov
add
int3
jns
in
fists
mov
arpl
std
jo
ds
ret
int3
xlat
repnz
mov
sbb
out
cmc
push
lods
and
inc
ja
xor
call
scas
pop
mov
stos
dec
or
dec
sbb
inc
cltd
jl
maxps
out
js
fwait
lea
cmp
sub
push
pop
movsl
jno
fisttpl
iret
mov
mov
push
mov
mov
dec
cmp
add
sub
mov
adc
mov
es
sub
pcmpeqb
mov
pop
ljmp
je
mov
xor
cld
rep
pop
pushf
bound
pop
or
pop
mov
cmp
fldt
and
popa
cmp
pop
mov
dec
pop
fcmovnbe
mov
jae
rol
scas
or
cmp
and
push
std
fcmovnb
cmp
loop
mov
ja
mov
jp
jmp
arpl
in
inc
push
mov
sbb
stc
mov
push
cmpsb
jl
gs
iret
xor
push
loop
xlat
repnz
xchg
or
sub
sbb
inc
cwtl
divb
jae
movsl
faddl
push
adc
orb
orl
xor
jmp
xor
lock
aaa
mov
test
mov
jg
mov
sbb
pop
imul
mov
jnp
loopne
mov
jb
xchg
mov
cwtl
pop
jecxz
xlat
ljmp
pop
jge
repz
mov
cltd
sbb
push
jns
pop
and
aas
scas
aam
mov
cs
cmp
bound
clc
xchg
jo
lods
lock
adc
push
scas
jmp
pop
sub
push
ss
in
pop
dec
hlt
cmp
outsl
punpcklwd
outsb
pop
sub
lea
sbb
dec
mov
pop
xchg
or
sub
push
adc
icebp
sub
cmp
imul
call
out
aas
ret
sbb
addr16
loope
inc
cld
inc
daa
in
push
jnp
jnp
stos
iret
adc
stos
es
sbb
sub
fnstcw
ss
gs
sub
test
lret
and
mov
les
mov
pop
sub
xchg
or
sbb
sub
ja
jecxz
push
fsubrs
xor
and
imul
in
pop
js
push
adc
sbb
cmp
ret
fisubl
sti
gs
imul
mov
enter
jne
lods
lret
xchg
mov
addr16
or
ret
fstl
push
ljmp
dec
pop
rclb
inc
movsl
jl
js
xor
fs
jb
or
sub
pop
jne
insl
jo
pop
clc
ljmp
dec
out
adc
int
inc
cmp
xchg
addl
inc
test
pusha
popa
lcall
adc
sbb
adc
xchg
push
faddp
mov
cmp
xorl
inc
rcll
mov
pop
mov
jns
test
xlat
outsl
dec
fwait
sti
inc
add
aas
aam
push
cld
xchg
cmp
das
inc
mov
arpl
cs
push
js
or
movsb
lret
popa
push
pusha
fsubrp
pop
fistps
lret
bound
cmpsl
ror
movsb
fbstp
repnz
pop
or
enter
mov
add
fdivrl
mov
cltd
arpl
ss
pop
ss
add
adc
mov
std
dec
cmpsl
es
cmp
cmp
fiaddl
xor
mov
dec
loop
and
push
call
je
or
enter
or
add
das
lahf
cltd
and
mov
stc
or
sbb
push
and
fnsave
dec
ret
mov
add
mov
stc
rorl
lret
cmpsb
adc
sbb
and
or
ja
and
sbb
imul
ljmp
sahf
loop
xchg
or
cwtl
outsl
mov
xchg
mov
int
jo
jns
dec
scas
xchg
scas
push
push
jmp
push
ss
pop
inc
jl
adc
dec
jp
jb
out
fsubl
sub
add
ja
mov
gs
sbb
popf
ja
nop
idivl
pop
cmp
adc
jl
scas
cmp
shll
adc
push
mov
inc
fidivs
inc
les
xchg
cli
xchg
pop
mov
lcall
test
in
xchg
adc
push
into
push
addb
in
shr
mov
movsb
inc
out
test
sahf
cli
or
and
xchg
rorb
xchg
sahf
jge
sub
sti
sti
nop
fsubl
pop
fidivrl
test
jae
loop
adc
add
popf
leave
dec
xor
xorps
je
or
xchg
test
adc
xchg
push
nop
dec
mov
fdivrs
jecxz,pt
mov
imul
lahf
and
xchg
leave
dec
ret
mov
mov
dec
cmp
and
rcl
push
in
inc
jns
lahf
sub
shl
lcall
aad
pop
aaa
aaa
movsl
enter
jg
mov
jnp
or
js
fwait
and
lods
push
xchg
jns
dec
stos
ss
cmpsb
repnz
out
lds
mov
bound
cld
in
icebp
xchg
int
call
pop
xlat
xor
sbb
dec
pop
jo
stos
dec
jp
and
xchg
int3
mov
fiadds
push
xchg
insb
clc
xor
cmp
xchg
jle
out
dec
popf
xor
outsl
cmp
jecxz
mov
rorl
pop
and
pop
inc
pop
les
fcompl
icebp
adc
cmpsb
imul
push
push
push
xchg
inc
pop
shrb
scas
out
dec
xor
adc
test
adc
push
jno
test
push
inc
aas
icebp
out
nop
fidivs
scas
or
xchg
jle
stos
in
inc
mov
sub
and
jno
scas
stc
or
loop
add
adc
dec
test
inc
repz
mov
call
dec
mov
xor
in
fnsave
cmc
out
mov
cmp
in
jmp
fstpl
scas
adc
cltd
in
jnp
dec
ss
dec
cld
decb
dec
mov
das
data16
lahf
sub
sbb
cmp
leave
pop
mov
rol
pop
outsl
iret
sahf
pop
fisubrs
lret
jmp
pop
cwtl
popa
push
ds
cli
ljmp
sub
xor
dec
and
xor
jg
test
ss
es
nop
pop
imul
xchg
adc
pop
ret
ret
test
data16
filds
jmp
jae
cltd
xlat
mov
or
xor
dec
jo
push
pop
test
lods
mov
lret
pop
sub
xchg
xor
data16
sbb
dec
inc
mov
in
or
stos
ret
xchg
inc
movsl
nop
cmp
cmp
cmc
aam
xchg
in
js
jmp
andb
shlb
sub
jmp
mov
and
repnz
lcall
and
and
and
decl
pusha
mov
push
or
ss
sarb
daa
jecxz
lret
jb
add
dec
loop
jae
sub
jno
cmc
mov
push
hlt
add
outsl
flds
xor
aam
inc
push
cltd
cwtl
cmp
ja
mov
add
cmc
fcomip
outsl
sahf
lods
leave
notb
out
test
fcomps
or
cwtl
dec
xor
push
jne
repz
loopne
and
les
xchg
cld
in
aaa
cmp
push
imul
mov
add
and
subl
pop
pop
dec
lods
mov
cmp
cmp
lret
mov
mov
adc
scas
or
pop
lock
adc
pop
and
test
cmp
or
sub
xchg
dec
xchg
pop
sub
add
dec
dec
xor
sti
cmp
test
mov
not
mov
movzwl
mov
mov
mov
movl
cmp
jne
cmp
je
mov
xor
or
add
mov
mov
mov
or
mov
sbb
xor
xorl
add
imul
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jge
jmp
pushl
push
pushl
call
jmp
mov
xor
notl
add
movl
cmp
mov
je
mov
add
or
mov
mov
mov
xor
add
sbbl
imul
movl
mov
jmp
adc
mov
sbb
xor
mov
mov
xor
mov
sub
add
mov
mov
add
mov
mov
mov
mov
mov
xor
xor
lea
mov
mov
xor
add
imul
mov
mov
xor
sub
mov
add
cmp
mov
mov
jg
xor
mov
sub
add
jmp
xor
add
add
mov
mov
mov
xor
add
not
and
jmp
mov
xor
mov
sub
add
movl
mov
mov
movl
mov
mov
mov
mov
xor
mov
add
cmp
jne
mov
mov
mov
lea
mov
mov
mov
mov
xor
add
mov
mov
mov
xor
mov
add
cmp
je
mov
add
mov
mov
mov
mov
xor
mov
add
mov
mov
cmp
jne
mov
mov
mov
jmp
pushl
pushl
pushl
pushl
pushl
pushl
call
pop
pop
pop
leave
ret
push
mov
and
sub
push
addl
push
andl
push
orl
xor
addl
push
push
push
addl
push
orl
push
addl
push
orl
push
call
movl
cmp
movl
je
andl
xor
movl
jmp
subl
push
call
addl
test
movl
jne
xorl
push
call
adcl
test
movl
jne
movl
mov
or
mov
xor
movl
mov
and
lea
mov
movzwl
xor
lea
movl
cmpl
je
cmpl
ja
jmp
push
call
mov
dec
mov
jmp
mov
mov
mov
mov
add
mov
sbb
xor
mov
add
mov
mov
mov
mov
cmp
jne
sbb
mov
neg
mov
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jl
jmp
push
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jl
jmp
pushl
push
call
jmp
xor
notl
mov
subl
add
xorl
mov
sub
mov
mov
mov
xor
mov
andl
mov
inc
mov
cmpl
jl
jmp
push
push
call
cmpl
jne
xor
or
inc
mov
cmpl
jb
xor
adc
add
and
mov
mov
mov
and
mov
movzwl
or
mov
andl
xor
movl
add
movl
mov
jmp
sbb
mov
add
mov
add
mov
andl
mov
inc
mov
cmpl
jge
jmp
push
call
cmpl
jb
mov
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jg
jmp
push
push
push
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
andl
mov
inc
mov
cmpl
jl
jmp
pushl
pushl
push
pushl
pushl
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
movzwl
sub
mov
and
mov
mov
mov
mov
movl
cmpl
je
cmpl
jge
jmp
push
push
push
push
pushl
push
call
mov
dec
mov
jmp
movl
xor
or
and
mov
mov
mov
and
mov
orl
mov
movl
mov
mov
addl
mov
xor
add
jmp
dec
mov
mov
or
mov
xor
lea
mov
adc
mov
push
mov
add
mov
xor
sbbl
lea
push
sbb
mov
sbbl
pushl
call
or
mov
mov
andl
mov
inc
mov
cmpl
jg
jmp
push
push
call
cmpl
jb
mov
xor
lea
mov
or
mov
and
mov
or
mov
mov
movl
xor
xor
add
xor
or
mov
add
mov
add
mov
sbbl
xor
lea
movl
cmp
jbe
sbb
mov
mov
xor
subl
add
jmp
mov
mov
mov
xor
lea
push
mov
mov
xor
lea
push
mov
pushl
call
mov
mov
mov
xor
lea
mov
mov
mov
mov
mov
xor
xor
add
mov
mov
xor
lea
cmp
jbe
mov
mov
xor
add
jmp
mov
mov
mov
xor
lea
push
mov
mov
xor
lea
push
mov
pushl
call
mov
mov
mov
xor
lea
mov
mov
mov
mov
mov
xor
xor
add
mov
mov
xor
lea
cmp
jbe
mov
mov
sub
mov
xor
mov
lea
mov
lea
mov
mov
xor
add
xor
add
mov
adc
mov
xor
xor
cmp
jne
cmp
je
mov
mov
cltd
add
adc
mov
mov
xor
xor
mov
cmp
jne
cmp
je
mov
mov
mov
push
pushl
lea
push
call
mov
mov
mov
mov
mov
mov
mov
lea
mov
add
pushl
pushl
mov
mov
pushl
mov
call
mov
mov
mov
jmp
mov
xor
add
adc
mov
mov
xor
xor
cmp
jne
cmp
jne
mov
mov
mov
mov
xor
mov
add
cmp
jne
mov
mov
xor
add
push
push
pushl
pushl
pushl
pushl
call
pushl
pushl
pushl
pushl
call
mov
mov
xor
add
mov
mov
mov
xor
add
mov
jmp
mov
mov
mov
mov
xor
xor
add
adc
xor
cmp
jne
cmp
je
movl
movl
movl
movl
call
mov
lea
push
pushl
pushl
pushl
pushl
call
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
mov
sbbl
mov
and
mov
mov
sbb
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jle
jmp
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
add
mov
movzbl
and
mov
orl
mov
orl
mov
movl
cmpl
je
cmpl
jb
jmp
push
pushl
pushl
push
call
mov
dec
mov
jmp
mov
mov
adcl
mov
movl
cmpl
je
cmpl
jbe
jmp
pushl
push
call
xor
or
dec
mov
jmp
mov
adcl
xor
push
andl
mov
inc
mov
cmpl
jb
jmp
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
subl
add
push
mov
movl
adc
xor
orl
xor
movl
push
mov
notl
movl
movzwl
movl
mov
mov
cmp
movl
jne
cmp
je
andl
mov
inc
mov
cmpl
jbe
jmp
pushl
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
mov
andl
xor
add
notl
adc
mov
sbbl
mov
negl
xor
notl
xor
movl
mov
cmp
movl
jne
movl
cmp
movl
je
movl
cmpl
je
cmpl
jb
jmp
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
xor
xor
add
mov
mov
add
mov
mov
orl
mov
mov
mov
add
push
movl
cmpl
je
cmpl
jl
jmp
push
call
cmpl
jne
xor
or
dec
mov
mov
dec
mov
jmp
pop
xorl
sub
add
movzbl
xor
mov
mov
add
movl
xor
mov
mov
add
mov
andl
mov
inc
mov
cmpl
jge
jmp
push
pushl
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
sbb
mov
xor
sbb
add
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jb
jmp
push
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
add
lea
add
mov
mov
xor
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
ja
jmp
pushl
push
call
cmpl
jne
mov
inc
mov
jmp
add
sbb
mov
movl
lea
push
mov
xor
or
sub
add
mov
mov
sbb
mov
mov
andl
xor
mov
add
xorl
push
push
addl
pushl
xorl
call
dec
mov
and
mov
movl
cmpl
je
cmpl
jle
jmp
push
push
push
push
call
mov
dec
mov
jmp
mov
lea
not
xor
mov
mov
movl
mov
movl
cmp
jne
xor
movl
jmp
movl
cmpl
je
cmpl
jle
jmp
push
pushl
pushl
pushl
call
cmpl
jne
xor
xor
dec
mov
mov
dec
mov
jmp
mov
or
movl
movl
adcl
mov
neg
movl
dec
movl
adc
mov
adcl
mov
addl
xor
subl
sub
sub
mov
movl
movl
mov
mov
cmp
movl
je
andl
mov
inc
mov
cmpl
ja
jmp
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
movzbl
xor
mov
subl
xor
xor
adcl
lea
mov
xorl
xor
adcl
div
mov
mov
sub
add
mov
xor
mov
adcl
xor
xor
andl
sub
movl
cmp
movl
jne
mov
or
mov
or
mov
andl
mov
inc
mov
cmpl
jg
jmp
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
and
mov
andl
xor
andl
xor
movl
add
sbbl
add
movl
mov
movl
cmp
jae
lea
neg
mov
incl
mov
xor
add
movl
lea
mov
mov
mov
cmp
movl
jbe
adcl
addl
jmp
decl
addl
mov
adcl
xor
inc
incl
subl
add
cmp
movl
jb
mov
add
mov
mov
add
xor
movl
cmpl
je
cmpl
jge
jmp
push
push
call
mov
dec
mov
jmp
add
movl
cmpl
je
cmpl
jb
jmp
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
xor
mov
mov
movl
mov
sbb
mov
andl
mov
inc
mov
cmpl
jbe
jmp
pushl
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
addl
sub
sbbl
xor
movl
cmp
movl
jne
sbb
mov
add
mov
xorl
xor
xor
subl
sub
mov
movl
sub
subl
xor
xorl
mov
mov
xor
xorl
sub
orl
sub
movl
jmp
mov
or
mov
xor
mov
orl
sub
add
mov
mov
movl
cmp
movl
jne
mov
or
mov
mov
subl
movl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
ja
jmp
pushl
push
push
call
cmpl
jne
xor
xor
inc
mov
jmp
movl
add
mov
movl
movl
mov
mov
xor
sub
sub
mov
movl
mov
cmp
je
mov
mov
xor
xor
lea
mov
xor
div
mov
mov
xor
xor
sub
cmp
jne
mov
mov
mov
mov
mov
xor
xor
add
add
mov
cmp
jae
lea
mov
mov
xor
add
lea
mov
mov
cmp
jbe
addl
jmp
addl
mov
xor
inc
incl
add
cmp
jb
mov
mov
xor
mov
sub
add
mov
xor
sub
ror
xor
mov
mov
mov
mov
mov
sub
xor
cmp
jne
mov
mov
xor
xor
sub
mov
sub
xor
mov
mov
xor
sub
sub
jmp
mov
xor
mov
sub
add
mov
mov
cmp
jne
mov
movl
mov
dec
and
mov
mov
movl
movl
mov
movl
movl
mov
mov
xor
sub
sub
mov
movl
mov
cmp
je
mov
mov
xor
xor
lea
mov
xor
div
mov
mov
xor
xor
sub
cmp
jne
mov
mov
mov
mov
mov
xor
xor
add
add
mov
cmp
jae
lea
mov
mov
xor
add
lea
mov
mov
cmp
jbe
addl
jmp
addl
mov
xor
inc
incl
add
cmp
jb
mov
cmpl
jne
xor
add
jmp
mov
xor
mov
sub
add
mov
xor
sub
ror
xor
mov
mov
mov
mov
mov
sub
xor
cmp
jne
mov
mov
xor
xor
sub
mov
sub
xor
mov
mov
xor
sub
sub
jmp
mov
xor
mov
sub
add
mov
mov
cmp
jne
mov
mov
mov
xor
add
jmp
lea
mov
mov
sub
mov
mov
mov
mov
mov
mov
movl
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
ja
mov
mov
sub
mov
xor
add
xor
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
mov
mov
mov
mov
movl
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
jmp
mov
mov
mov
mov
xor
lea
lea
xor
mov
cmp
jne
decl
jne
mov
mov
mov
mov
mov
mov
mov
xor
mov
mov
xor
mov
xor
mov
mov
xor
mov
mov
mov
xor
add
pop
pop
pop
leave
ret
push
mov
push
movl
cmpl
je
cmpl
jle
jmp
push
push
push
pushl
call
mov
dec
mov
jmp
push
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jl
jmp
push
push
push
push
pushl
pushl
push
call
cmpl
jne
xor
or
inc
mov
jmp
movl
mov
mov
mov
movsbl
cltd
add
adc
mov
xor
xor
cmp
jne
cmp
jne
mov
mov
add
mov
mov
mov
mov
xor
mov
add
cmp
je
mov
jmp
mov
mov
xor
add
jmp
mov
mov
xor
add
pop
leave
ret
push
mov
sub
subl
movl
mov
mov
mov
and
movl
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jge
jmp
push
push
pushl
pushl
pushl
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
adc
mov
push
mov
adc
mov
movzbl
or
mov
mov
xor
movl
cmpl
je
cmpl
jg
jmp
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
xor
mov
add
add
imul
push
mov
mov
cmp
je
movl
mov
mov
xor
lea
mov
mov
mov
mov
mov
mov
xor
xor
add
add
imul
mov
cmp
je
mov
mov
xor
add
mov
imul
add
mov
mov
jmp
mov
mov
mov
mov
xor
xor
add
add
imul
pop
pop
leave
ret
add
add
adc
add
add
add
add
add
add
dec
add
add
add
push
push
inc
push
xor
add
or
add
add
pop
dec
gs
insb
outsl
pop
dec
outsb
jae
jb
pop
inc
popa
je
pop
inc
imul
add
push
mov
add
sbb
add
add
add
add
add
add
add
or
add
push
add
sbb
add
add
push
pop
add
sub
add
push
push
add
add
add
push
arpl
outsb
inc
popa
je
cs
add
gs
gs
popa
addr16
js
jb
dec
outsb
outsw
push
gs
gs
popa
addr16
js
jb
dec
outsb
outsw
inc
xor
pop
push
gs
gs
popa
addr16
js
jb
dec
outsb
outsw
push
gs
gs
popa
addr16
js
jb
dec
outsb
outsw
push
gs
gs
popa
addr16
js
jb
dec
outsb
outsw
inc
xor
add
imul
add
imul
add
push
add
push
add
add
push
push
add
add
jle
add
add
add
xchg
push
add
push
add
push
add
push
add
push
add
imul
and
add
imul
inc
imul
push
imul
pusha
imul
jb
add
mov
add
add
