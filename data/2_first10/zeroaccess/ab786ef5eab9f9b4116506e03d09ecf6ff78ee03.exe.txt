push
mov
sub
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
or
mov
orl
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
xor
xor
inc
mov
jmp
mov
incl
add
movzwl
adc
mov
mov
mov
sub
movb
and
lea
sbb
mov
xor
xor
adc
mov
mov
mov
sub
mov
xor
xorl
sub
mov
adcl
movl
movl
cmpl
je
cmpl
jne
pushl
call
mov
dec
mov
jmp
sub
push
and
movl
mov
push
mov
or
xor
andl
mov
subl
push
andl
add
jmp
mov
mov
inc
movl
cmp
movl
jb
mov
xor
add
movl
jmp
adc
mov
sbb
mov
subl
xor
xor
mov
andl
add
addl
movzwl
sbbl
mov
subl
mov
xorl
movzwl
orl
xor
sbbl
add
mov
mov
mov
movzbl
inc
mov
movl
cmp
movl
jne
mov
movl
cmpl
je
cmpl
jne
push
push
pushl
pushl
push
pushl
call
mov
dec
mov
jmp
xorl
mov
addl
xor
orl
add
mov
sbbl
mov
xor
add
mov
movl
movl
movl
mov
mov
movl
jmp
movzbl
sbb
mov
xor
xor
or
mov
mov
xor
movl
xor
addl
sub
subl
sub
xor
or
sub
xor
mov
mov
mov
lea
mov
movl
cmpl
je
cmpl
jne
push
push
call
mov
dec
mov
jmp
and
mov
or
mov
sbbl
lea
inc
mov
mov
mov
subl
lea
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jb
mov
sbb
mov
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jb
mov
xorl
lea
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jb
mov
mov
mov
lea
andl
mov
inc
mov
cmpl
jne
pushl
call
cmpl
jb
mov
or
mov
andl
mov
lea
mov
xor
mov
xor
add
jne
movl
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
pushl
push
call
cmpl
jne
mov
inc
mov
jmp
mov
orl
mov
orl
xor
addl
xor
sub
sub
xor
movl
mov
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
imul
xor
add
lea
mov
add
mov
mov
xor
add
jne
mov
mov
mov
cmp
je
mov
mov
mov
cmp
jne
mov
mov
movsbl
xor
add
cmp
mov
mov
mov
je
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
xor
imul
add
lea
mov
add
mov
mov
xor
add
jne
mov
mov
xor
xor
add
add
cmp
jae
lea
mov
mov
movl
lea
mov
mov
addl
mov
xor
add
lea
mov
xor
mov
mov
xor
inc
incl
add
cmp
jb
jmp
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
imul
xor
add
lea
mov
add
mov
mov
xor
add
jne
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
imul
xor
add
lea
mov
add
mov
mov
xor
add
jne
mov
mov
xor
lea
mov
incl
mov
xor
add
jne
jmp
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
imul
xor
add
lea
mov
add
mov
mov
xor
add
jne
jmp
mov
mov
xor
xor
sub
sub
jmp
cmpsl
js
movsb
mov
je
stos
ss
xchg
mull
bound
pop
bound
xor
cmp
jns
jbe
adc
fld
std
dec
push
jae
inc
mov
scas
inc
push
cmp
loop
data16
lcall
hlt
xor
dec
and
std
pop
int
xor
test
mov
clc
cmp
mov
mov
mov
idivb
push
arpl
push
jne
and
stos
adc
cmp
mov
dec
ret
adc
and
jmp
fwait
into
or
divl
mov
add
retw
sti
lret
xor
or
and
or
mov
lahf
mov
add
xlat
mov
mov
pop
frstor
les
hlt
data16
cmp
testl
inc
push
xor
inc
pop
sbb
pop
jmp
push
pop
push
shrb
sbb
inc
subb
std
pop
nop
cld
push
xlat
fsubrs
adc
call
xor
mov
imul
or
mov
mov
stos
fsubs
lcall
mov
pop
jb
int3
push
scas
lret
insl
jl
xchg
dec
ss
stos
jp
push
arpl
inc
jle
mov
fidivrl
sahf
inc
lahf
dec
lods
jno
xor
shrb
imul
movsb
stos
mov
ss
cmp
dec
ja
sbb
ret
pop
test
mov
dec
rcrl
ss
add
pop
dec
xchg
mov
outsl
mov
fcompl
test
repz
cld
mov
popf
pusha
add
cltd
movsb
insb
jne
add
lahf
aad
adc
pop
sbb
in
out
mov
add
inc
fnstcw
jns
cmp
sbb
cmc
dec
je
xlat
xchg
clc
and
lods
into
mulb
aas
dec
add
je
cmp
dec
loopne
lahf
push
dec
cltd
jbe
dec
adc
scas
dec
movsb
mov
flds
fcompl
jl
jo
popf
repz
test
leave
sar
push
cmp
cwtl
push
aad
xor
mov
out
sbb
fs
adc
add
into
pushf
fimull
xchg
popa
stos
add
inc
adcl
xchg
ja
mov
lods
xchg
mov
dec
cmp
into
imul
sahf
push
lods
push
popa
jno
fisubrl
inc
jmp
mov
mov
mov
mov
mov
inc
cmp
fcompl
fnstenv
out
pop
sbb
push
mov
dec
in
ret
adc
ja
cmp
dec
stos
out
or
xlat
adc
fstpt
mov
ret
shll
push
xor
out
xor
les
xor
pop
or
fcomip
sbb
loope
repz
fcompl
inc
mov
insb
cwtl
into
xor
cltd
in
dec
pop
popf
pop
cmp
or
mov
add
mov
mov
or
fnsave
movsl
add
jne
push
pop
fcmovnb
popa
lcall
lea
xchg
push
mov
dec
cmc
aad
or
arpl
cmp
clc
xor
adc
repz
daa
mov
and
or
pop
cmpsl
add
sub
ds
xchg
iret
mov
in
xchg
outsl
and
sbbl
out
es
cmc
popf
int
push
xlat
cld
xchg
jl
sbbb
pop
jp
loop
jmp
push
jp
push
lret
jmp
and
cltd
ror
sub
jmp
in
in
inc
mov
stos
sub
std
sbb
xor
fadd
out
push
insl
add
pop
iret
js
scas
ret
ja
jg
pusha
mov
push
sub
ret
js
mov
aaa
insb
repz
test
jecxz
prefetch
add
movsl
stos
in
mov
clc
cwtl
into
ljmp
sub
xchg
arpl
jmp
sti
imul
pusha
sbb
mov
outsl
inc
cmpsb
je
ljmp
mov
sub
xchg
mov
outsl
aam
and
icebp
cltd
lods
es
aas
xor
popa
adc
hlt
mov
add
out
sbb
fld
out
shlb
addr16
fistl
stos
rorb
jbe
add
in
outsl
fists
adc
push
sqrtps
dec
mov
mov
mov
inc
inc
push
mov
popf
cmp
adc
nop
push
mov
jle
fs
fwait
ljmp
lods
pop
pop
add
out
mov
nop
pusha
lahf
into
imul
xor
rcll
cmpb
decl
sub
jo
mov
fdivl
cwtl
std
jg
jb
cmpsb
add
mov
inc
mov
ret
xor
icebp
push
jnp
lahf
inc
aaa
sub
bound
fistl
es
shrb
xchg
mov
push
push
adc
in
jns
mull
pusha
aaa
aaa
sarl
cmp
push
ret
leave
ja
lods
je,pn
das
mov
mov
fisubs
lret
mov
and
lock
loope
ret
lock
pop
xchg
sbb
daa
mov
push
enter
mov
popa
mov
loope
push
sbb
inc
jno
pop
lea
outsl
rcl
call
adcb
inc
aas
pop
inc
jle
sbb
push
mov
imulb
jle
bound
pop
fs
jmp
flds
pop
xchg
jnp
rclb
mov
iret
lods
add
je
jno
jb
lea
mov
cmpsb
and
mov
dec
sbb
mov
mov
cld
inc
sahf
ret
jl
sub
aas
pop
mov
and
in
or
dec
add
jbe
iret
aad
out
mov
fwait
ret
fwait
mov
push
ss
mov
mov
fdivl
loopne
cld
fiadds
popf
sub
push
xor
inc
jmp
lret
test
insb
fistl
or
jp
scas
cmp
ret
popf
lret
fs
cmpsb
mov
aas
mov
jo
pop
push
or
xchg
addr16
lods
lea
sbb
sbb
mov
push
push
sbb
int3
jo
test
movsl
adcl
or
xor
inc
mov
ret
mov
stos
loop
mov
lods
sar
xchg
ja
scas
or
pop
mov
cmp
fadd
std
lock
lcall
jno
andl
adc
push
adc
dec
mov
add
jge
call
dec
aam
mov
sbb
xor
fs
pop
pop
or
out
mov
out
inc
mov
dec
ret
insb
sbb
lods
popf
and
sbb
jne
lret
lds
imul
and
sub
repz
fs
jmp
jmp
sbbb
shrb
sbb
adc
repnz
cltd
stos
inc
pop
mov
dec
mov
ljmp
ja
scas
mov
xor
sbb
xchg
add
xchg
cmp
pop
pusha
es
xchg
mov
outsb
je
movsb
xlat
push
sbb
jbe
insl
and
or
cmp
or
xabort
int3
xchg
cmpl
mov
jle
iret
lds
or
fstpl
lret
add
out
or
push
push
mov
in
imul
pop
jnp
sbb
jge
pop
xor
jmp
out
adc
or
xchg
gs
repz
mov
aas
idivl
pop
or
or
loop
jns
adc
or
and
mov
stc
and
jae
mov
or
push
divps
ja
in
sbb
add
call
fcoml
pop
mov
cmp
mov
jl
fsub
fcomi
sub
lcall
fnstsw
cs
repnz
test
mov
mov
in
mov
xchg
scas
fs
and
test
sub
jbe
push
call
out
sub
das
repnz
xor
push
enter
addr16
push
cmp
and
push
dec
mov
lods
sub
jl
stc
scas
add
inc
xor
js
enter
push
stos
mov
mov
sub
pushf
sbb
arpl
cmp
jecxz
cmp
xor
loopne
ss
mov
mov
jl
in
mov
push
addr16
les
mov
lcall
and
mov
in
insb
xor
mov
stc
sub
and
pop
nop
inc
jle
inc
test
je
and
sbb
xchg
imul
sbb
cs
push
xorl
push
xor
dec
push
mov
nop
sbb
lea
mov
pop
sub
aas
andb
fwait
in
or
and
push
jae
call
and
inc
cmpsl
sbb
out
shlb
jbe
or
add
gs
fucomp
std
sub
mov
mulb
push
fs
pop
push
fimuls
or
sub
add
pop
pop
inc
mov
and
pop
adc
addl
popf
out
imul
mov
pop
rcrl
enter
xor
mov
lret
not
mov
cltd
ja
lods
mov
in
sbb
jecxz
push
inc
mov
add
xlat
xchg
push
lahf
lock
sub
xor
andl
cltd
shlb
pop
or
and
push
cmc
jno
or
push
int
sbb
pop
cmc
ds
push
shl
mov
scas
sbb
in
cmpsl
sti
jecxz
lods
push
xor
dec
popa
add
mov
xchg
lock
xor
mov
movsb
or
sti
mov
sbb
pop
fwait
push
gs
adc
enter
fsubrl
pop
filds
ret
lods
mov
mov
jl
mov
fisttps
xchg
inc
rorl
cmc
cmp
pop
add
cmp
out
add
data16
mov
cld
or
mov
cmp
mov
jae
into
mov
mov
xchg
mov
xor
cmp
mov
pop
sub
int3
xchg
mov
pop
ret
jmp
scas
idiv
insl
mov
les
enter
sbb
push
mov
lock
scas
enter
popa
xchg
int
es
sub
ret
mov
push
pushf
je
cli
add
imul
push
nop
add
xor
xor
loopne
loop
cld
idivl
mov
jge
arpl
cmp
xor
add
adc
inc
aas
mov
aam
mov
stos
imul
push
mulps
push
idiv
xchg
mov
sub
test
sbb
imul
lret
jl
sbb
in
jne
mov
cwtl
or
outsb
or
inc
or
mov
in
add
movsl
popa
or
call
xchg
push
cmpsb
mov
test
dec
mov
inc
pop
fildll
sub
sbb
nop
es
int
scas
cwtl
int3
call
push
mov
pop
jno
push
pop
mov
push
and
sbb
repnz
je
dec
and
jl
jnp
jbe
aad
cmp
testb
and
sbb
insl
and
cmp
in
inc
ficoml
sbb
and
icebp
out
push
hlt
mull
jae
pop
sub
jne
or
imul
pop
or
xchg
xchg
mov
mov
icebp
jnp
hlt
fsubp
outsb
xor
mov
jecxz
fcomip
xor
popa
sub
sbb
push
ds
mov
jmp
psraw
or
xchg
lods
pop
test
mov
cmovae
outsl
or
in
mov
leave
push
inc
loop
cwtl
jecxz
sbb
pushaw
clc
loope
mov
mov
mov
dec
sbb
stos
sbb
cli
psubb
test
aas
dec
push
push
bound
popf
mov
mov
fmull
sub
leave
xor
sub
jl
movsl
pop
push
xchg
stos
inc
negl
fisttpll
dec
add
and
das
js
or
test
mov
mov
test
call
iret
cmpsl
xchg
inc
xchg
and
out
loop
loopne
outsl
lds
addr16
xchg
imul
clc
xor
cltd
loopne
ret
jmp
pop
test
xchg
mov
push
es
sub
or
loopne
lods
insb
mov
and
inc
mov
fstps
stc
scas
out
jae
in
cld
push
movsl
mov
mov
iret
out
mov
mov
dec
nop
adcb
mov
nop
mov
lcall
sub
popa
push
push
sbbl
mov
jbe
in
lds
mov
stos
lods
xor
sti
lods
jo
mov
jl
arpl
decb
mov
testl
dec
mov
push
int3
sub
xor
dec
add
cltd
xor
stc
mov
addb
pop
jb
mov
cmpb
stos
sbb
ret
cli
or
mov
js
sbb
dec
popf
jo
xor
xchg
dec
lcall
jns
in
jno
out
das
push
ret
std
sbb
fs
push
push
dec
lahf
outsl
fldenv
test
test
xor
and
hlt
mov
adc
aas
ret
add
fsubrp
lcall
movsl
cs
sbb
shr
xchg
js
repnz
cld
mov
rsm
pop
jo
enter
in
fcomps
scas
mov
in
push
iret
dec
mov
pushf
mov
cmpsl
xor
in
push
in
push
sbb
stc
loop
cs
stc
mov
in
mov
cmpsb
add
mov
roll
pop
xor
cli
xor
mov
inc
inc
inc
jge
pusha
ds
outsb
xchg
or
movsl
outsl
jnp
mov
jp
movsb
iret
insb
pop
in
filds
scas
mov
pop
ss
daa
mov
push
lock
jns
dec
dec
and
mov
leave
outsb
jg
mov
and
popa
fwait
bound
arpl
mov
and
dec
mov
mov
roll
pop
or
sbb
lods
pusha
pop
scas
setae
into
pop
dec
bound
out
lcall
mov
add
fbld
in
aam
cmpb
inc
jne
loopne
shll
stc
lcall
stos
sub
fldt
mov
repnz
push
mov
jecxz
imul
adc
push
pop
lods
mov
or
xchg
push
mov
loope
mov
xlat
inc
cmp
arpl
xchg
dec
cld
push
sahf
repz
cmpsl
ja
cld
pop
add
push
push
xor
dec
filds
repz
mov
mov
fst
adc
test
xchg
dec
mov
gs
mov
stc
pop
sbb
mov
hlt
vmaxss
push
jg
out
inc
popf
sahf
xchg
bound
mov
push
mull
pop
mov
cltd
push
es
arpl
xlat
sub
out
in
sub
pop
orl
mov
adc
or
movsl
push
jmp
mov
add
inc
imul
mov
dec
pop
cmp
mov
push
mov
jmp
and
rcr
pop
push
or
or
fimuls
test
in
xor
xchg
sub
xlat
pop
ret
rolb
repnz
cld
stos
xchg
nop
loop
dec
fidivrs
repnz
xchg
mov
mov
adc
rorb
push
popa
ret
jl,pt
mov
dec
fdivl
sahf
jp
lds
pusha
xchg
push
je
data16
fucomip
ljmp
mov
inc
inc
inc
sarb
test
push
add
fcoml
out
cmp
rcll
jns
outsb
testl
cmp
fsubr
or
add
aam
bound
std
out
pop
mov
mov
mov
lea
mov
jae
in
ja
jb
cmp
xor
xchg
and
mov
test
loop
in
les
jnp
shl
in
push
cwtl
inc
sub
xchg
adc
shlb
add
aas
add
shrb
push
push
push
mov
pop
pop
lret
mov
xor
into
xchg
sbb
and
mov
adc
cmp
fidivs
loopne
mov
jae
pop
fimuls
jmp
xchg
push
add
or
mov
adc
hlt
lahf
shrb
fsubr
cmp
arpl
lea
rorl
and
add
aas
in
pop
loopne
mov
pop
push
mov
cmp
jmp
movl
daa
mov
fnstenv
inc
int
push
lahf
std
popa
mov
pusha
jmp
addl
jns
popf
cld
add
cmp
xchg
fdivr
int
and
das
xorl
pop
xchg
push
iret
cld
xchg
rcr
cmp
adc
xchg
loopne
mov
push
loop
cmp
mov
repz
jno
dec
or
orl
add
rol
iret
jge
incb
loop
push
and
and
inc
ret
dec
fildll
imul
stos
adcb
add
xlat
imul
out
imul
stos
insl
xchg
mov
mov
mov
lods
outsl
pop
mov
ljmp
repnz
gs
lock
mov
xor
jp
gs
mov
or
cltd
aam
std
out
jns
lret
loop
fs
cwtl
push
xchg
mov
xor
add
push
jo
push
iret
jecxz
fdivr
lret
or
dec
push
mov
jg
aas
addr16
mov
mov
fstpl
xchg
lods
xor
or
xchg
and
mov
shrl
fsts
xchg
cmp
pop
cs
loope
sti
inc
mov
sub
jl
adc
xor
nop
or
lahf
and
pushf
scas
push
adc
ret
inc
mov
jnp
xchg
jmp
daa
xor
adc
inc
daa
mov
lods
xor
hlt
outsb
add
mov
lcall
mov
mov
mov
insl
repz
pop
cmp
aam
cwtl
lret
pop
cmpsb
push
mov
mov
aam
sahf
sbb
and
jecxz
stc
mov
sbb
xchg
dec
rcr
push
and
out
cmpsb
fistps
nop
imul
sub
mov
adc
cmp
ffree
dec
mov
lret
xor
into
push
insb
push
push
cmp
leave
or
push
out
xchg
imul
push
int3
pop
dec
pop
and
dec
int
ljmp
lods
into
imul
data16
inc
jecxz
cltd
fs
xchg
lcall
cs
out
sbb
stos
sahf
lret
xchg
call
sbb
pusha
jae
mov
in
int
rcrb
in
clc
or
adc
xchg
add
outsb
cmp
cwtl
pop
sub
cwtl
xor
adc
fbld
jp
inc
mov
sbb
mov
pop
xor
push
mov
sbb
mov
inc
jns
in
sahf
pop
mov
sbb
sub
out
jle
mov
in
and
cmp
mov
sarl
push
dec
sbb
cmpl
std
icebp
cltd
xlat
test
push
orl
cmp
das
adc
adc
lds
movsb
imul
sbb
pusha
fidivrl
xchg
sti
mov
push
mov
sbb
mov
lcall
push
scas
mov
xchg
mov
icebp
in
fcmovne
or
mov
jmp
enter
adc
mov
mov
enter
iret
imul
ret
sub
aad
mov
xor
mov
cmp
out
xchg
fdivrs
daa
mov
repz
adc
and
adc
adc
jp
rolb
mov
or
inc
mov
add
push
push
jne
test
add
push
mov
mov
stc
add
jb
scas
mov
lahf
movsl
pop
lea
out
shll
out
cli
dec
push
sbb
adc
sub
enter
pusha
popf
sub
sbb
js
pop
jae
test
stos
mov
stc
lods
cmp
mov
or
add
out
and
hlt
ds
popf
xor
cmpsb
js
aas
cmp
addb
test
sub
xorl
fwait
pop
and
xor
repnz
out
adc
xor
in
and
push
aas
rorl
pop
lret
cmpsb
adc
pop
loop
in
add
stos
fnsave
and
jge
and
xchg
je
inc
ficompl
xchg
dec
adc
add
out
in
ljmp
mov
das
mov
flds
push
sarl
or
fs
jnp
mov
jmp
add
imul
mov
xor
xchg
and
sub
das
mov
mov
mov
ja
negb
imul
add
xchg
lods
mov
sbb
lret
imul
fbld
stos
jae
push
and
pop
jb
adc
sbbb
out
in
jne
aas
or
sbb
jne
mov
xchg
ret
pusha
cmp
or
sahf
iret
dec
ds
xchg
and
mov
sbb
inc
pushf
and
stos
pop
mov
pop
test
add
or
and
jmp
lods
xchg
pusha
aam
ss
dec
out
pop
and
cld
jl
or
dec
or
int3
int3
jbe
jl
jnp
jl
mov
notl
mulb
mov
shrl
mov
subl
jbe
sub
and
ds
or
and
in
js
fwait
jmp
push
mov
inc
out
insb
add
xor
sub
xchg
sbb
xchg
inc
nop
cmpsb
pop
daa
movl
ror
dec
dec
cmp
mov
mov
imul
imul
movsb
mov
dec
sub
sarl
rorb
xchg
adc
pop
imul
pushf
push
inc
sti
inc
pop
std
inc
aas
test
pop
das
pop
in
test
cltd
dec
or
call
movsl
xchg
es
xchg
enter
stos
ret
nop
mov
scas
adc
and
imul
xor
dec
nop
sub
cltd
mov
adc
mov
push
mov
bound
sub
xchg
jbe
xor
xor
lods
pop
pop
lds
rclb
inc
fbstp
jb
das
cmpsb
int3
jl
stc
dec
icebp
or
xor
dec
pop
adc
rolb
mov
std
mov
out
jecxz
mov
aaa
incl
add
cmp
mov
sbb
sub
jp
jmp
push
inc
lods
dec
xor
mov
ljmp
popa
andl
mov
pop
push
aam
jge
arpl
pop
pop
mov
jg
out
sbbl
or
out
xor
pop
adc
outsl
sti
xacquire
je
fidivrl
xchg
es
inc
cs
outsl
daa
fwait
xor
xchg
hlt
adc
add
push
daa
cmpsb
test
scas
mov
leave
dec
lods
fmul
ss
dec
movsl
in
fildll
mov
test
mov
mov
xor
cmp
inc
dec
and
and
mov
inc
arpl
ret
mov
es
and
xor
pop
dec
es
jnp
sti
pop
out
mov
jno
xor
stos
loope
add
fyl2xp1
enter
or
mov
mov
push
ret
or
test
pop
popf
cmpsl
lods
aad
mov
orl
int3
test
xor
add
stos
cmpsb
cmpxchg
dec
loop
in
mov
adc
fwait
pop
xor
jnp
dec
inc
nop
imul
adc
and
mov
fldpi
push
aad
cmp
xchg
dec
clc
mov
lea
mov
push
aaa
aas
daa
pushf
outsb
jle
mov
or
loopne
mov
sbb
adc
lds
cltd
cli
mov
and
jmp
pop
aaa
gs
addr16
cmp
jno
jg
je
fs
adc
cmp
and
addr16
cli
repnz
repz
stc
scas
cmp
icebp
mov
xor
push
mov
neg
push
adc
xchg
mov
sbb
movsb
adc
jge
frstor
sbb
icebp
ret
mov
mov
les
xchg
xor
mov
lahf
popf
jne
mov
mov
jne
xchg
adcb
subl
cmpsl
movsl
decb
stos
in
insb
aas
xchg
inc
ja
push
jp
lods
inc
and
ficoml
sbb
dec
adc
and
mov
cmp
pop
sbb
inc
popf
pop
cs
leave
test
int
mov
pop
or
push
add
jae
notb
pop
mov
addr16
les
dec
pop
es
stc
decb
xchg
push
and
std
adc
loope
dec
xchg
cmp
xchg
lea
popa
mov
adc
scas
push
stos
inc
cwtl
out
repnz
cmp
or
shlb
fwait
push
mov
mov
loope
repz
xor
xor
cmc
cmp
fmuls
push
mov
lock
add
mov
pop
push
adc
jns
pop
jo
out
jmp
xor
in
loopne
test
dec
test
lret
pop
fsts
mov
sbb
loopne
loopne
xor
inc
mov
inc
inc
inc
push
clc
inc
mov
ret
movsb
xchg
call
mov
sub
sbb
popa
jnp
std
and
sbb
jne
sbb
mov
jle
pop
fucomip
push
es
push
out
dec
and
in
je
sahf
pop
shl
xchg
add
sub
xor
push
push
mov
jmp
dec
inc
pop
loop
fwait
mov
fwait
xchg
stos
pop
pop
push
mov
dec
imul
xorl
inc
ficoms
sbb
lret
daa
mov
sbb
dec
mov
fistl
aad
mov
push
jl
or
hlt
jp
repz
pop
mov
xchg
xchg
and
cmp
xor
dec
sbb
jbe
stos
test
xchg
push
sbb
xchg
outsb
hlt
adcl
pop
fs
stc
push
arpl
out
outsl
je
jno
or
jl
lahf
push
push
out
dec
jnp
mov
pushf
jns
lahf
mov
iret
push
jecxz
jno
mov
iret
mov
je
push
mov
adc
mov
pushf
aad
mov
cld
mov
cltd
addr16
jle
out
pop
mov
js
dec
cld
rcll
mov
mov
test
lds
cld
ss
adc
jp
dec
mov
fneni(8087
add
jg
push
inc
stos
cmpsl
pop
addr16
vfrczsd
in
arpl
inc
ljmp
lcall
in
out
and
rcr
add
into
dec
xchg
out
dec
loope
cmp
sbb
sahf
push
xlat
jge
ljmp
mov
inc
dec
jg,pt
popa
scas
jae
inc
xlat
jl
mov
leave
pop
pop
addr16
ja
int3
and
lods
fwait
adc
push
or
lods
jl
cmp
insb
jne
fs
shl
loope
bound
icebp
mov
lea
test
mov
push
daa
bound
daa
or
xchg
loope
das
ss
stc
int
adc
dec
lcall
xchg
pushf
loopne
int3
mov
push
mov
sbb
inc
xchg
inc
insl
mov
js
dec
and
lea
shll
mov
and
sub
xchg
or
push
repnz
add
inc
xchg
jmp
lods
rclb
adc
mov
sarl
mov
pop
cld
inc
data16
jle
mov
adc
in
adc
outsl
fcoms
sub
pop
xchg
icebp
xor
add
push
cld
test
das
sti
ds
cltd
add
int
jp
cwtl
movsl
mov
stos
mov
mov
shlb
mov
fstpt
jmp
add
mov
cmovle
push
pop
adc
out
xchg
mov
mov
aaa
imul
outsb
jecxz
test
mov
pop
sub
leave
mov
test
push
dec
pop
in
out
out
repz
mov
cmc
aas
pop
sub
hlt
pop
je
gs
jg
loope
pop
lods
mov
ret
in
push
orl
insl
cmp
ret
xor
lods
pop
outsl
ds
jl
cmpsl
mov
inc
sti
lock
pop
pop
int3
fwait
pop
and
ljmp
cs
or
sbb
mov
in
mov
lret
sbb
adc
shl
and
faddp
rcl
aam
pop
xchg
cld
roll
sarl
int3
cmpsb
std
ret
sbb
out
xor
mov
loope
mov
repnz
rorl
xchg
mov
adc
lods
movl
mov
mov
pop
gs
dec
shlb
incb
xorl
out
jle
in
mov
scas
lcall
lea
pop
push
mov
shlb
sub
popf
stos
xchg
fsubrs
pop
pusha
fildll
int3
rorl
cmp
xchg
dec
mov
xchg
sbb
sahf
push
fwait
cmp
sub
mov
sbb
sbb
cmp
fsubrs
add
out
jne
sarb
cltd
lods
int
pop
mov
xchg
pop
jle
les
jns
sub
mov
and
sbb
les
jae
xchg
negb
int
sahf
xchg
mov
popf
cld
pop
ljmp
add
mov
mov
sbb
dec
das
icebp
popa
int3
xchg
lret
mov
movl
and
and
push
mov
jmp
aaa
lea
pusha
jo
jecxz,pn
xlat
cwtl
arpl
stos
fs
stos
cli
push
push
jl
repnz
sbb
xor
roll
into
cwtl
cmp
leave
jb
jne
jno
push
sbb
sarb
xchg
fxch
add
cmp
lahf
not
jmp
mov
fildll
sub
adc
lds
cltd
dec
popl
fs
xlat
aam
pop
mov
es
shlb
mov
idiv
add
cmp
adcb
add
push
and
mov
cmp
mov
push
in
sbb
xor
or
hlt
pop
sbb
or
jmp
cmc
jno
xchg
lea
push
pop
xchg
pop
jg
sbb
pop
ret
stos
or
xor
sti
push
xchg
push
cmc
scas
imul
xor
xor
fisubrs
pushf
sbb
mov
push
dec
cltd
cld
adc
push
jp
xchg
pop
loopne
imul
sbb
shr
xchg
rorb
mov
leave
pop
xor
mov
mov
mov
xor
imul
add
lea
mov
add
mov
mov
xor
add
jne
mov
xor
mov
add
mov
pop
pop
pop
leave
ret
push
mov
movl
pop
movl
jmp
sbb
mov
ret
push
mov
sub
mov
movl
cmpl
je
cmpl
jne
pushl
pushl
pushl
call
mov
dec
mov
jmp
xorl
mov
movl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
add
mov
adc
push
or
mov
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
movzbl
sub
xor
mov
push
sbb
mov
add
movl
cmp
movl
je
mov
sub
mov
xor
xor
add
add
adc
xor
mov
push
xor
xor
mov
add
adc
xor
xor
cmp
jne
cmp
je
jmp
mov
mov
mov
xor
add
mov
imul
mov
xor
add
mov
mov
mov
mov
xor
xor
add
adc
lea
xor
xor
xor
mov
add
adc
xor
xor
cmp
jne
cmp
jne
mov
pop
pop
pop
leave
ret
push
mov
sub
adcl
push
push
push
push
subl
lea
sbbl
push
addl
push
subl
call
push
andl
call
andl
mov
inc
mov
cmpl
jne
push
push
pushl
push
pushl
push
pushl
push
push
push
call
cmpl
jb
add
movl
movl
orl
mov
adc
mov
xor
xor
mov
add
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
jmp
mov
adcl
test
movl
je
mov
mov
mov
mov
imul
orl
mov
sbbl
add
xchg
or
mov
sub
xor
mov
xorl
xor
movl
cmpl
je
cmpl
jne
push
push
pushl
call
mov
dec
mov
jmp
sbbl
add
mov
sbb
mov
sub
mov
movl
xor
add
mov
mov
sbb
mov
xor
movl
cmpl
je
cmpl
jne
push
push
pushl
call
xor
add
dec
mov
jmp
neg
add
adc
mov
orl
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
call
cmpl
jb
xor
movl
cmpl
je
cmpl
jne
pushl
push
push
pushl
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
add
sub
mov
orl
sub
jmp
div
and
xchg
lods
mov
jae
jbe
pop
bound
pop
bound
mov
xchg
dec
repnz
dec
dec
shr
dec
stc
push
mov
stos
xchg
repz
scas
testl
sub
cmpsl
mov
filds
call
sbbb
xchg
mov
cmpsl
inc
enter
flds
lret
cmp
in
enter
jge
or
fs
xor
lcall
fiaddl
sbb
pusha
mov
cmp
mov
jb
pop
dec
jne
xchg
movsb
xchg
xor
mov
cld
add
ljmp
jle
jno
xchg
inc
scas
lret
sub
ss
negl
dec
dec
in
cld
and
ljmp
nop
push
pop
in
jmp
test
sub
idivl
mov
dec
ret
loop
jbe
xor
xchg
sub
outsb
inc
jno
push
push
mov
cltd
lds
or
jmp
mov
fistpll
and
mov
mov
mov
sub
mov
int
jb
cmp
insl
inc
dec
dec
dec
pop
loopne
mov
mov
int3
xchg
add
adc
inc
mov
test
ret
mov
ljmp
test
dec
xchg
mov
mov
and
and
add
dec
sub
pushf
sub
xor
inc
mov
or
or
jnp
add
sbb
or
jns
pop
movsl
stc
dec
scas
fwait
cmpsb
mov
cmc
nop
testl
inc
imul
cmpsl
mov
outsl
sub
imul
xlat
mulps
lea
add
fcomps
imul
rorl
and
add
stos
push
outsl
jne
cld
mov
mov
loopne
jl
lds
jne
sub
lock
or
dec
scas
xor
orl
loopne
xor
andl
or
and
mov
aaa
push
insl
in
mov
xchg
pop
arpl
clc
and
push
inc
xor
pop
outsb
mov
sub
data16
push
pop
pusha
rcl
stc
xchg
pop
das
mov
adc
dec
movsb
pop
scas
push
push
adc
push
popl
xchg
test
imul
aaa
pop
xchg
adc
je
repz
xor
cli
mov
into
out
pop
data16
add
ljmp
out
mov
rolb
stos
jl
push
cld
push
jmp
lret
lret
icebp
mov
jp
push
mov
mov
lahf
fsubs
mov
push
mov
and
and
outsb
shrl
jne
push
sub
movsb
push
rcrb
cmpsl
mov
fildll
out
push
dec
lret
ret
xor
aad
add
adc
pop
out
mov
mov
cld
cmp
mov
pusha
loope
mov
scas
popf
out
or
and
xchg
rcrl
andb
mov
or
xchg
inc
inc
ljmp
out
mov
call
lahf
enter
mov
imul
outsb
jg
add
cmp
pop
data16
add
test
jo
gs
out
int
arpl
mov
lret
aaa
out
dec
inc
cltd
imul
dec
in
in
sbb
pusha
and
cmp
mov
es
cmp
mov
cmp
sub
nop
in
mov
mov
fidivrl
adc
mov
fdivr
xchg
jnp
adcl
and
adc
scas
adc
mov
or
and
es
jp
pop
fistps
or
mov
mov
fcom
push
mov
dec
inc
je
stc
add
adc
dec
xor
and
dec
mov
pop
mov
stos
jns
push
int3
cltd
jle
dec
rolb
scas
mov
inc
push
pop
inc
ror
mov
popf
sbb
mov
mov
cmc
jle
testb
je
hlt
scas
jle
fxch
lcall
js
push
loope
loopne
ja
cmpsb
lods
jmp
sbb
fsubr
push
stc
cmp
ficompl
dec
adc
jo
clc
arpl
push
lret
xchg
inc
mov
mov
and
and
lds
inc
push
decb
addl
sub
sbb
mov
jge
lcall
repz
js
cmp
mov
mov
lea
push
cmp
push
mov
fwait
jo
pop
ficomps
mov
cmp
mov
in
dec
dec
add
cmp
cmp
cmp
pushf
lods
ret
push
movsl
and
jne
sbb
mov
mov
pop
mov
int
xorb
xor
ror
jnp
xor
lods
sub
pusha
add
cld
jecxz
mov
push
or
lds
mov
dec
aad
lahf
in
jecxz
movsb
push
jno
sbb
sbb
cmp
cmpsb
cmp
push
sub
or
sarl
nop
mov
add
mov
enter
arpl
out
outsb
jnp
adc
mov
je
fistl
mov
pop
xchg
dec
cwtl
lock
pop
test
fdivp
shr
cld
lds
adc
sbb
push
addb
pop
jp
dec
inc
pop
frstor
cld
fimuls
outsl
sub
push
sbb
mov
xor
stos
sub
lea
jl
xchg
aaa
sbb
imul
push
cmp
mov
pop
lret
cltd
daa
and
cmp
inc
add
mov
loope
inc
dec
sub
shll
xchg
les
lcall
ljmp
inc
outsl
in
clc
sbb
xchg
jne
sbb
es
scas
xor
sbb
sbb
adc
pop
icebp
ret
pop
popa
fisubl
sub
data16
xor
insl
ja
repz
mov
cmp
mov
in
dec
cmpsl
inc
insl
rcr
fidivrs
lock
mov
jns
sbb
popl
sbb
sbb
sbb
loop
inc
test
call
nop
xchg
cmp
pushf
dec
in
ja
in
test
jle
les
xchg
sub
sbb
xchg
or
sahf
or
aaa
jecxz
jg
clc
pop
aaa
stos
sahf
mov
into
inc
jns
and
pusha
xchg
inc
out
sub
or
jmp
or
fimuls
dec
pop
mov
mov
xor
int3
je
xchg
ja
in
cmp
push
fmul
cmpsl
mov
bound
je
sub
sub
cmp
and
adc
adcb
outsl
or
inc
cwtl
and
jmp
pop
int
push
lock
jmp
push
adc
aas
imull
add
jae
mov
push
sbb
pop
xlat
lcall
lds
mov
adc
sbb
jecxz
fmuls
bound
dec
or
das
mov
lea
and
inc
xlat
jl
les
jge
xchg
fwait
mov
cmp
or
call
mov
xchg
cmpb
add
insl
push
mov
sahf
push
pop
ja
mov
loop
movsb
scas
jb
packsswb
rcrl
test
enter
jmp
popa
cmc
js
jno
sbb
rcll
jnp
aad
and
out
push
inc
cli
and
in
xchg
or
xchg
shrl
mov
mov
ljmp
cwtl
fcos
add
cmp
ds
jns
out
sarl
iret
sbb
inc
mov
ret
xchg
cmp
jns
xchg
sub
mov
sbb
cmp
and
mov
pop
xlat
cmp
daa
inc
jge
lcall
mov
rcrl
inc
jae
inc
push
pop
and
mov
sbb
sub
scas
jo
adc
mov
jle
in
subb
into
dec
add
push
nop
pusha
mov
xchg
add
push
test
mov
or
cltd
in
adc
jl
fscale
push
and
call
aaa
imul
pop
pop
push
insl
rcl
test
mov
push
movsb
and
sub
inc
mov
xchg
clc
jno
es
push
test
sbb
cmp
and
rolb
popf
cltd
mov
enter
mov
gs
jae
imul
jne
pop
pop
inc
les
addb
clc
xor
outsb
mov
add
pop
fwait
sub
jmp
xchg
add
mov
mov
stos
lahf
mov
jge
or
mov
dec
adc
push
mov
or
lcall
add
mov
xchg
jl
pop
inc
adc
rorb
pop
push
and
fstp
mov
test
loop
and
cmp
call
push
inc
jecxz
jns
pop
fimuls
cld
and
insb
mov
dec
jecxz
out
out
test
cmp
scas
stos
les
fsin
inc
pop
xor
ffree
ds
movsl
sbb
bound
mov
aam
clc
add
ja
jns
out
inc
pop
test
movsb
inc
xor
and
xchg
cmpb
mov
mov
aas
adc
bnd
test
fcomps
sub
xor
outsl
mov
imul
inc
movsl
add
sub
mov
jmp
outsb
mov
sbb
rcr
sub
push
push
mov
jnp
mov
fcmovnbe
push
adc
daa
mov
cmp
push
pop
pop
loop
cmp
add
jge
inc
lds
out
shl
sar
jle
jle
xor
shll
imull
sub
rolb
out
in
imul
hlt
xchg
jnp
mov
sbb
dec
popa
pop
dec
sahf
in
sub
cmp
ss
popl
add
in
cmpsb
lock
mov
out
addr16
lds
ss
roll
adc
loopne
dec
std
pop
fsubrs
iret
shrl
lds
test
scas
mov
sbb
jbe
das
fdivs
insb
dec
jb
mov
incl
pop
test
mov
pop
pushf
jbe
inc
or
lahf
dec
inc
outsl
mov
movsl
xchg
mov
loope
push
sbbb
popa
mov
pop
and
roll
inc
cmpsb
xor
mov
and
pop
insb
enter
stos
xor
ficoml
fisttps
adc
add
cs
dec
insl
cmp
cmp
fildll
inc
dec
mov
test
mov
pop
jns
icebp
push
xor
mov
out
frstor
call
jne
dec
sarb
addr16
push
addr16
repz
stos
lds
ret
pop
psadbw
inc
and
jne
push
pop
mov
out
push
aam
ret
jns
pop
sbb
adc
xchg
stc
aam
bound
adc
mov
sar
js
int
jbe
in
sub
out
add
add
sahf
lcall
clc
shrl
push
push
lahf
jno
pop
es
fdivrl
enter
fisubrl
lcall
sbb
cmp
pop
xchg
add
pop
mov
pop
lods
flds
in
push
pop
jmp
fidivs
dec
adc
jmp
sub
jmp
lcall
cwtl
arpl
inc
pop
sar
jl
push
orb
ds
out
clc
and
jmp
in
push
lcall
ds
jne
nop
outsb
jno
in
add
fs
or
push
sbb
inc
mov
pop
pop
pushf
das
push
xchg
adc
scas
xor
cmp
leave
scas
mov
cwtl
jnp
or
icebp
sub
xor
mov
inc
push
sarl
and
fwait
rclb
adc
sub
lcall
and
fnstenv
dec
cmpsb
push
daa
in
std
jge
aad
mov
ret
inc
js
aad
mov
fs
jp
or
movsl
mov
ret
pusha
dec
fistpll
xorl
add
cmp
add
adc
pop
mov
mov
push
std
aad
pop
or
inc
icebp
icebp
jp
test
or
pop
std
test
movsb
xchg
xchg
stc
scas
inc
pop
xor
aas
fnstenv
xchg
jo
out
pusha
sahf
and
or
mov
inc
pop
mov
push
fmul
cltd
xor
das
ss
fisttpll
mov
mov
mov
cmp
fidivrs
mov
inc
xchg
pop
jecxz
xor
clc
xchg
ljmp
push
fiaddl
xchg
sbb
adc
loope
movswl
xchg
dec
cltd
sub
push
dec
stos
sub
pop
xchg
int3
sar
pop
and
sbb
outsl
mov
hlt
jo
not
sub
jp
iret
and
push
xchg
int3
adc
rorl
inc
repz
dec
jnp
adc
repz
gs
and
call
iret
jno
ret
sub
orl
pop
and
sbbl
jl
popa
cmp
push
pop
xlat
push
call
lds
or
pusha
jo
ret
popa
pop
lcall
inc
adc
subb
xor
and
or
in
lret
dec
lahf
outsl
fs
lea
clc
push
mov
mov
push
xorb
adc
or
adc
dec
mov
adc
fwait
cmp
imul
out
scas
xchg
xchg
sub
and
mov
xchg
mov
sub
scas
int3
cwtl
mov
cltd
push
xor
rolb
mov
jl
push
inc
stc
push
jnp
mov
daa
jl
gs
mov
mov
or
fs
jge
scas
jmp
fldl
repz
push
out
aaa
je
popf
scas
sub
pop
sbb
cs
adc
xor
and
pop
scas
adc
push
xor
sub
dec
or
cltd
lock
clc
outsb
adc
inc
push
in
xor
push
xchg
push
jge
test
and
cli
test
push
xchg
out
out
insl
xchg
gs
je
inc
enter
push
call
mov
stos
subb
push
lahf
sbb
ljmp
inc
adcl
dec
push
scas
in
call
mov
mov
call
or
mov
jae
inc
xchg
andnps
clc
mov
fstpt
push
fildll
inc
sub
mov
and
inc
xchg
loop
dec
fwait
imul
dec
xor
setae
jb
out
jo
outsl
aas
outsb
or
adc
stos
xchg
cmp
pop
mov
shl
xchg
test
cwtl
pop
mov
pop
jp
xchg
aam
inc
jecxz
push
orb
mov
movl
adcl
outsb
adcl
mov
mov
lret
jmp
sbb
lcall
mov
and
notl
pusha
lret
xchg
xchg
sub
in
lods
enter
repz
sub
loop
in
shl
inc
mov
push
pop
mov
xchg
fistl
xchg
call
mov
push
mov
mov
cmpsl
leave
mov
cli
adc
int
mov
jbe
je
iret
add
and
lcall
push
inc
outsl
ss
inc
leave
or
dec
dec
insl
push
xchg
sub
jbe
jno
push
pushf
add
inc
mov
dec
int
stos
movsb
gs
cli
test
mov
cmp
ds
mov
fnstcw
sbb
cmc
cs
push
sbb
inc
nop
jb
sbb
cld
xchg
cld
rclb
iret
sub
pusha
sub
xor
inc
dec
lahf
mov
out
sbb
ret
inc
inc
shll
or
jmp
mov
pusha
lea
xlat
push
jb
sbb
mov
fdivrl
shrb
jg
sbb
adc
mov
dec
inc
push
out
pop
arpl
outsl
ljmp
clc
push
cld
sub
bound
insl
cmp
in
hlt
in
jecxz
jg
or
cmp
jl
int3
jnp
cmpsl
leave
add
pop
pop
pop
pop
test
daa
iret
mov
test
cs
aaa
xor
jg
test
cmp
adc
mov
dec
add
cmpsb
fmuls
ror
push
ds
pop
fbstp
pop
mov
test
andl
popf
into
cltd
mov
cmp
pushf
icebp
rorb
ret
push
aam
les
test
xchg
adc
mov
mov
pop
idivl
lock
push
add
pop
cli
orl
popa
jmp
cmp
int
dec
cmp
sbb
cmpsl
incl
inc
and
sub
mov
fstl
scas
imul
push
mov
cmp
ret
mov
mov
sti
ja
xor
sbb
sub
add
mov
movsl
iret
xor
insl
leave
ror
jge
loopne
sbbl
xchg
adc
daa
sbb
popa
mov
push
andb
push
insl
div
imul
dec
daa
mov
jecxz
xor
lock
mov
cmp
sub
outsb
jo
mov
xor
or
lret
in
fwait
pop
pop
fwait
inc
dec
xchg
xchg
in
cltd
dec
cmp
xchg
xor
adc
daa
pop
aam
pusha
pop
nop
stc
out
jo
mov
push
mov
popf
arpl
adc
ljmp
repnz
push
mov
hlt
ficoms
jmp
imul
jg
cmpsl
out
dec
rolb
lret
pop
adc
mov
leave
mov
imul
and
sbb
cmpsb
orb
insb
in
inc
xor
jmp
pop
scas
repnz
mov
jno
nop
dec
push
das
sub
aad
inc
call
loope
enter
hlt
fidivs
lea
and
or
xchg
adc
incl
mov
out
push
and
mov
dec
ror
sub
mov
movsl
dec
out
scas
xlat
xor
fdivrs
mov
insl
inc
je
push
sub
or
mov
incl
aad
addb
cltd
push
xchg
and
test
rorl
cli
xlat
mov
pop
xchg
adc
cmp
mov
repz
xor
outsl
test
aam
xorb
testl
aaa
orl
stos
pusha
jmp
mov
aam
inc
rcrl
cmp
inc
into
push
pop
adc
lcall
jns
jae
out
jno
sti
xchg
adc
out
fimuls
xchg
pusha
sbb
mov
clc
and
and
cmp
clc
ret
test
repz
test
push
mov
push
outsl
pop
jg
dec
popf
mov
xchg
cmp
mov
and
jns
inc
pop
jmp
xlat
adc
fdiv
pop
ret
mov
mov
ss
xor
ja
pop
dec
outsb
sahf
rcrl
push
stos
aaa
pop
or
repnz
xchg
or
mov
cld
inc
jp
xchg
dec
jns
in
rorb
mov
insl
repz
push
nop
loopne
jae
sbb
mov
or
cwtl
inc
in
stos
push
js
mov
enter
repnz
mov
jne
fdivs
cs
inc
cli
jne
xchg
xor
dec
add
scas
mov
adc
add
push
push
sbb
sarb
and
rorb
int3
cs
add
stc
in
addr16
lods
push
jae
cmp
sub
mov
mov
lds
jg
xchg
stc
pop
push
cmp
xchg
int3
scas
mov
cltd
outsl
sub
mov
gs
sti
sub
es
mov
fwait
divb
inc
int
in
imul
cmpsl
pop
xor
push
scas
adc
inc
call
xor
add
xchg
clc
lods
out
aas
mov
push
mov
hlt
div
add
mov
sub
dec
mov
popa
nop
rorb
aas
sbb
sbb
cmp
popa
jo
notl
jecxz
imul
mov
cmp
loope
push
std
cmp
sahf
xor
aas
lea
push
das
mov
in
cmp
es
notl
or
adc
jns
sahf
push
popl
arpl
adc
mov
cmp
repz
cmp
add
fists
xor
lods
icebp
sub
push
mov
xchg
in
nop
ret
or
inc
pop
and
xor
imul
pusha
jo
xchg
add
scas
hlt
iret
mov
icebp
cs
loop
aaa
scas
arpl
add
cwtl
loopne
jnp
sub
jmp
test
and
inc
sbb
jge
mov
mov
mov
push
in
cmp
pop
push
sbb
movsl
cmp
ret
cmp
jnp
shr
adcl
enter
mov
jbe
mov
enter
pop
push
jbe
push
imul
mov
push
loopne
mov
mov
sub
or
fisttps
and
and
sbb
xchg
decl
and
sub
push
and
inc
mov
pushf
mov
jns
ljmp
pop
loop
arpl
lds
inc
call
test
mov
rclb
popa
rorl
inc
sbb
sahf
and
mov
sub
and
popa
inc
pop
fnstcw
popf
loopne
pop
in
mov
xchg
adc
sub
cmp
addr16
sahf
mov
ss
popa
cmp
rol
inc
inc
pop
sbb
out
push
pcmpeqd
cmp
scas
jmp
or
jbe
mov
outsb
mov
jb
mov
fisubrl
pop
dec
lock
fdivs
test
xor
push
jp
sbb
in
stos
pop
cmpsl
jmp
hlt
cmp
out
loopne
sti
dec
ret
fadds
sub
cmp
leave
push
pushf
bound
inc
xor
cmc
cmp
int
rcrl
xor
mov
xchg
add
out
and
fldl
sbb
sbb
gs
lahf
stos
add
int3
fildl
mov
cmp
leave
fiaddl
into
lahf
mov
adc
mov
cltd
adc
adc
shlb
shlb
mov
scas
repz
in
mov
pop
dec
aas
cmovae
imul
scas
sub
les
decl
loope
scas
in
xchg
rcrl
xchg
mov
jns
adc
out
outsl
adc
ret
lret
mov
dec
cli
loop
movsl
xlat
test
fldenv
mov
fwait
push
push
lods
int
insl
cmp
adcl
dec
pop
lods
sti
out
sub
sub
pop
mov
adc
idiv
lea
jg
or
inc
or
and
jge
aaa
push
pop
rclb
rcrb
inc
pop
clc
jp
mov
addr16
nop
daa
dec
mov
dec
les
sub
out
fisttps
adc
or
out
fstpt
push
pop
mov
xchg
into
cld
sub
push
aaa
jo
mov
or
dec
int3
xchg
sub
jg
cmp
xor
aas
push
adc
push
xor
mov
lret
or
test
inc
leave
lahf
sbb
sub
inc
iret
sub
jg
lock
shlb
dec
lret
sbb
or
push
orb
cmpsl
outsb
sbb
mov
enter
sub
insl
cmp
mov
pop
loopne
arpl
xlat
lods
cmp
jno
insl
int
jns
mov
cld
lcall
dec
jle
jp
ror
hlt
mov
sti
gs
jge
movsl
xor
adc
outsb
lea
lret
jecxz
test
int
mov
push
xor
lods
popf
dec
jge
leave
xchg
jmp
xchg
bound
xchg
push
and
pop
repnz
stos
enter
imul
push
test
xchg
icebp
clc
test
adc
mov
mov
mov
scas
or
repz
cmpsl
fyl2x
and
int
add
mov
sub
lock
and
pop
jg
lahf
lea
sbb
ljmp
dec
jge
rcll
or
push
clc
jbe
pop
xchg
mov
out
clc
and
mov
jp
movsb
inc
loope
xchg
pop
ficompl
ljmp
inc
mov
pop
mov
mov
das
cmp
imul
inc
xchg
jge
es
push
subb
insb
divb
push
cmc
mul
jl
dec
lock
cmpsb
jns
loop
les
icebp
inc
lret
enter
or
or
insb
xorb
or
in
cs
cmc
jne
sbb
int3
inc
aam
cmp
stos
ror
addr16
xchg
shl
dec
data16
push
inc
sbb
outsb
xlat
mov
dec
dec
push
adc
cltd
out
fisubs
xchg
aaa
xchg
and
cmp
int3
cwtl
test
jle
push
pusha
pusha
adc
and
int
adc
jge
cmp
xchg
xchg
subb
fsubrl
add
dec
gs
movsl
outsl
pop
arpl
arpl
push
lcall
inc
pop
dec
jno
jge
pusha
sbb
pop
in
sbb
push
leavew
xor
imul
push
inc
sub
cmp
stos
dec
sbb
adc
dec
pop
aad
inc
loop,pt
imull
into
mov
fnsave
cmp
pusha
scas
mov
sbb
push
mov
loope
add
cmp
cmpl
dec
in
and
push
sarl
int3
add
jmp
jae
incb
cli
xchg
dec
aad
dec
pop
push
aas
fadds
imul
stos
fimuls
mov
pop
fidivrl
xchg
popa
jmp
clc
sbb
das
cld
mov
push
add
jecxz
push
es
lret
aas
aam
test
dec
xchg
inc
mov
jmp
leave
and
lods
pusha
sbb
fwait
dec
aaa
push
pop
fidivrs
and
add
cmp
pop
add
jno
imul
sbb
add
or
repz
fs
dec
adc
cmpsl
push
in
jecxz
sub
fbstp
jp
dec
mov
add
pusha
inc
pop
adc
stos
aaa
sub
jb
inc
mov
mov
xchg
les
ss
jno
cmp
into
xlat
out
pop
rclb
add
stos
jae
leave
daa
and
mov
fmull
sbb
std
popf
or
mov
push
or
in
hlt
es
mov
mov
adc
jl
jne
and
fadd
loop
cmc
les
pop
icebp
stos
jl
sbb
and
in
pusha
pop
notl
lock
pop
xchg
push
shll
sub
mov
icebp
pop
add
xchg
jle
dec
pop
adc
rolb
mov
out
lret
pop
lcall
adc
ficoml
jl
jp
cmp
cmpb
loop
push
push
rcrb
sub
push
push
sub
mul
xchg
mov
xor
cmp
xchg
sub
ja
les
xor
fisubs
or
and
inc
add
jmp
mov
in
jmp
pop
or
out
cmp
add
jmp
inc
push
pop
sti
mov
push
fnsave
fsubl
aad
pop
ret
add
push
xchg
cs
jecxz
sbb
dec
rorl
fwait
lret
or
add
cmp
es
into
xor
aaa
push
fisubrs
push
add
mov
in
sbb
add
and
sbb
and
push
repnz
pop
fiadds
call
xchg
mov
fcmovbe
xchg
mov
hlt
jno
xchg
cmc
sti
scas
xchg
mov
jecxz
scas
dec
std
mov
push
testl
mov
mov
sbb
adc
mov
xchg
shll
xchg
fwait
or
mov
push
adcb
bound
fsubr
add
mov
andb
insl
pop
scas
arpl
in
push
mov
aam
pop
mov
sub
sbb
mov
leave
inc
sub
and
ds
sub
daa
cli
sbb
cmp
jmp
ret
push
cmp
dec
mov
xorl
add
mov
fcoml
daa
shr
dec
sub
jne
add
push
xor
jg
out
shl
pop
int3
cmp
pop
data16
sub
repz
in
das
rcl
add
jg
dec
andb
jge
dec
ljmp
jmp
sub
jge
aad
push
inc
in
xor
add
cmp
sub
fsubl
jmp
jg
sbb
mov
cmp
adc
jns
call
jno,pt
insl
outsb
jae
xor
mov
ja
les
pop
outsb
aas
nop
sub
cmp
mov
push
les
mov
pusha
mov
mov
stc
repnz
jns
xor
hlt
sub
sub
js
lock
lods
lcall
imul
lods
xor
jg
push
cmp
or
dec
adc
and
enter
mov
mov
push
shll
enter
dec
xchg
jno
lock
icebp
cmp
outsb
inc
outsb
pop
push
scas
or
sub
jle
mov
lret
arpl
ja
fucom
push
roll
xor
add
in
aas
dec
nop
lods
push
loopne
mov
mov
popa
sub
dec
xchg
ljmp
pop
daa
or
jb
lea
xchg
bound
cmp
imul
in
push
cltd
lcall
and
and
les
leave
xor
outsb
gs
rcrb
dec
shlb
sub
out
hlt
into
in
iret
fldl2e
into
movsl
sub
pop
and
xor
filds
mov
test
stos
add
fnstsw
mov
sub
ret
loopne
or
mov
repnz
push
ja
push
mov
cmp
js
push
lret
addr16
adc
jmp
aad
je
or
xor
push
mov
mov
fmuls
jl
loop
movb
test
stos
pop
imul
or
clc
jg
xchg
add
ljmp
pop
hlt
adc
mov
daa
xor
inc
xor
adc
loope
test
pop
aas
mov
imul
inc
mov
fildll
imul
sub
stos
adc
or
inc
enter
sub
sti
ffreep
dec
dec
mov
mov
and
test
jnp
inc
repz
add
inc
ss
out
sub
pop
cmp
out
jno
add
adc
ret
je
push
pop
pop
and
add
mov
dec
movsb
sbb
fdivl
xchg
lea
sbbl
xor
xorl
xor
movl
cmp
movl
je
mov
xor
adcl
add
cmp
jne
pushl
call
mov
mov
and
mov
mov
movl
cmpl
je
cmpl
jne
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
mov
sub
add
mov
xor
mov
add
movl
cmp
je
sbbl
pushl
pushl
call
sbb
mov
dec
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
call
jmp
sbb
mov
xorl
xor
subl
add
cmp
movl
je
mov
mov
mov
or
mov
mov
mov
add
mov
and
mov
and
mov
adcl
add
movzwl
sbb
mov
mov
or
mov
mov
sbbl
add
not
mov
mov
jmp
movzbl
add
mov
mov
xor
mov
andl
add
inc
mov
sub
mov
sbbl
mov
xor
decl
add
cmp
je
jmp
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
je
lea
push
pushl
pushl
call
mov
mov
mov
xor
add
cmp
je
mov
movzwl
mov
mov
mov
jmp
mov
xor
lea
jmp
mov
xor
add
jmp
mov
xor
add
jmp
mov
add
mov
mov
test
je
movl
push
xor
pop
add
push
pop
push
dec
pop
dec
xchg
sub
xchg
dec
mov
imul
sub
mov
mov
mov
xor
mov
add
mov
mov
xor
add
mov
imul
mov
xor
mov
lea
cmp
je
mov
mov
mov
mov
mov
xor
xor
mov
add
div
mov
xor
lea
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
imul
mov
xor
mov
lea
cmp
jmp
into
mov
adc
shll
out
ret
bound
pop
bound
pop
push
cmp
je
inc
stos
add
jns
xchg
mov
ds
int
push
loop
outsl
inc
stc
mov
push
nop
shr
cmp
dec
loop
andb
jp
in
mov
sub
ds
dec
cltd
test
cld
in
dec
xchg
push
mov
mov
inc
les
rcrl
sub
fidivrs
dec
mov
out
xor
xor
add
fisttpl
sbb
aas
or
or
jecxz
or
push
insl
jns
adc
ret
mov
dec
adc
inc
and
xor
cmp
and
add
negb
es
dec
in
add
outsl
jecxz
lret
das
xor
cmc
xchg
jbe
inc
cmpsb
pusha
inc
icebp
outsb
adc
std
inc
mov
sub
mov
mov
leave
add
fbld
loope
mov
test
pop
push
cmp
push
je
jbe
lcallw
loope
call
inc
shrb
lds
sub
je
movsb
sbb
jle
icebp
cwtl
jg
rcrl
and
xor
stos
rol
xchg
jnp
std
adc
stos
loop
mov
std
pop
lods
decb
add
xchg
dec
jecxz
jecxz
add
adc
inc
dec
and
cmp
loope
cld
fcmovnu
scas
cmp
mov
mov
jb
lods
dec
cmp
jne
xlat
add
ss
outsl
inc
xor
cltd
sti
cmp
sub
mov
xlat
ds
subl
push
nop
and
xchg
in
sub
push
and
mov
push
pop
mov
cmc
adc
jo
das
inc
into
out
dec
mov
and
dec
mov
movsb
mov
jbe
mov
bound
leave
ljmp
lahf
test
xchg
imul
popa
jo
add
cmp
adc
mov
jno
pop
jns
outsb
push
cltd
pusha
dec
cmc
pop
adc
lahf
jno
xor
pop
mov
fsubs
jo
or
movl
mov
sbb
stos
out
xchg
add
stos
xchg
das
push
jecxz
sarl
lods
lods
out
lods
std
mov
mov
aam
xor
addr16
jbe
push
mov
lret
repnz
inc
in
mov
xor
mov
xchg
jg
or
movsb
mov
adc
fadds
out
lds
fiaddl
mov
lahf
sti
incl
shl
popa
xchg
stos
negl
push
xchg
outsl
cmp
push
jp
add
xchg
lods
cmp
mov
outsl
lcall
shr
testb
push
mov
mov
cli
sub
mov
jle
lds
lar
xchg
popf
jp
cmc
add
in
add
pushf
icebp
icebp
jmp
cmpsb
add
sub
dec
cmc
fldt
out
repz
movsb
lods
cmpb
scas
and
jmp
loop
xchg
or
les
pop
adc
mov
cmp
enter
scas
inc
cli
gs
mov
ret
aam
rorl
mov
mov
fldt
push
xchg
mov
push
shrl
dec
cltd
loopne
dec
mov
lock
pop
and
out
add
add
or
mov
in
fnstenv
xchg
dec
jmp
ret
testl
rcrl
xchg
pop
leave
mov
rorb
mov
daa
jnp
jae
ljmp
ja
mov
dec
dec
jnp
inc
popf
test
cmp
fs
jl
cld
loopne
push
cmp
push
inc
jo
add
adc
out
and
pop
ret
fldcw
mov
cmc
in
sbb
sub
xor
pop
dec
rcrl
mov
push
ret
xchg
jae
repnz
outsl
push
pop
push
shlb
popa
mov
js
ret
push
cmp
icebp
ss
lcall
and
cld
pop
sub
push
ja
dec
mov
and
jmp
arpl
in
xchg
inc
dec
or
mov
cmp
and
idiv
sbb
push
ret
out
rorb
pop
add
leave
popa
mov
jae
into
add
push
cmp
jge
jb,pn
sbb
icebp
push
inc
cmp
or
and
sbb
pop
cmc
repnz
or
hlt
push
jecxz
mov
insl
xor
sti
inc
adc
in
jmp
mov
adc
in
pop
mov
fwait
jle
mov
aas
inc
push
lret
loop
leave
or
test
xor
inc
or
icebp
mov
stc
jp
cmpsb
es
adc
ds
push
int3
pusha
jo
loop
es
push
jg
cwtl
js
scas
sbb
adc
sbb
lret
sbb
lcall
pop
sbb
add
push
pop
lods
lock
push
and
adc
inc
jg
push
jns
xor
lods
push
frstpm(287
cmpsl
fldl2t
sub
sbb
shlb
ja
dec
int
pop
ds
pop
int
pop
pop
into
std
cmp
dec
in
and
adc
lret
xchg
push
inc
mov
adc
nop
and
mov
rcll
divb
cmp
add
cltd
sbb
call
mov
mov
lret
je
repz
adc
ds
adc
xor
lock
mov
inc
notb
xchg
cmc
shl
xchg
icebp
mov
leave
popf
mov
push
sub
jecxz
repnz
dec
lds
jg
ss
enter
imul
ja
pushf
inc
lea
xchg
mov
mov
adc
mov
loopne
inc
jb
jmp
pusha
jne
loop
lock
rolb
data16
popf
mov
cmpsb
repnz
popf
mov
inc
xchg
std
sub
dec
mov
mov
jmp
mov
ljmp
popf
mov
pop
jecxz
cmc
mov
jmp
fnsave
out
sbb
xor
and
inc
loopne
arpl
pop
adc
dec
push
cmp
xchg
and
es
inc
fs
jo
xor
mov
or
sti
ljmp
mov
pop
and
xchg
jns
inc
mov
orl
mov
and
cwtl
push
sub
xor
sub
dec
jne
sub
dec
fwait
sub
int
pop
mov
push
xor
icebp
add
sbb
rclb
cmp
mov
test
and
pop
leave
push
adc
add
mov
stc
adc
inc
clc
iret
dec
lea
outsl
movsb
add
jbe
xor
mov
out
inc
std
sbb
sub
inc
jne
shll
divb
pushf
push
mov
icebp
loope
insl
xor
push
push
adc
shlb
fcomps
add
out
in
adc
mov
test
int3
push
notb
je
jb
add
push
popa
sbb
mov
pushf
xor
cmpsl
xchg
movsb
addl
decb
sub
pop
cwtl
enter
imul
scas
outsl
orl
scas
or
mov
pop
and
pop
jae
jae
xor
cmpsb
push
push
xchg
sub
xchg
std
push
xor
ret
adc
ljmp
fidivs
fbld
fcmovnb
roll
add
fldenv
adc
dec
shll
jecxz
or
hlt
and
pop
fistl
jg,pn
sub
or
mov
loop
lods
ret
mov
jno
loopne
aaa
inc
mov
std
lds
mov
inc
sbb
std
or
popa
mov
cmp
add
add
jno
mov
jp
rclb
pop
test
xchg
adc
ds
jp
sti
rcrb
test
ret
mov
ffreep
pop
insl
jecxz
or
and
pop
dec
and
adc
push
xchg
loope
aad
dec
lea
pop
pop
aaa
out
fmuls
xchg
fsubs
fucom
aaa
xorb
std
mov
sqrtps
cmpsl
rolb
sbb
test
jbe
ficomps
adcl
xor
inc
mov
and
fwait
xchg
imul
pop
lds
hlt
sbb
insb
loope
jno
push
push
mov
mov
jbe
mov
sub
add
push
mov
xchg
xchg
fadds
out
pop
adc
rcrb
push
push
xchg
cmp
jno
inc
adc
je
repz
mov
push
push
fmul
adc
jl
push
adc
mov
dec
sub
movsl
dec
mov
scas
push
sub
scas
mov
cli
sub
and
and
das
sbb
popf
popf
es
testb
inc
addr16
or
dec
xchg
not
pop
daa
or
stos
push
jl
mov
test
sarb
inc
popa
xor
outsb
popf
sub
xchg
adcl
inc
adc
cmp
stos
inc
les
subb
mov
mov
adc
xor
push
call
jno
out
mov
push
push
shll
xchg
mov
xchg
stos
sahf
cmpsb
arpl
loopne
jl
fwait
subb
scas
sbb
mov
jb
sub
mov
mov
mov
xchg
jb
adc
xchg
xlat
inc
cmpb
add
push
scas
dec
or
test
ret
push
call
popa
test
leave
bswap
xor
inc
loop
lahf
xor
lods
cmp
mov
js
arpl
in
jmp
pop
mov
sbb
cmc
push
mov
and
test
test
jo
ja
cmp
shrb
jmp
or
ret
mov
aaa
bnd
xchg
push
adc
int3
iret
test
dec
dec
and
inc
jb
jae
dec
jo
inc
int
xchg
adc
fistpl
pop
out
or
lds
mov
lcall
push
in
fld1
xor
shll
inc
sbb
mov
adc
dec
test
pop
in
push
cld
or
or
popf
cli
es
mov
cmc
iret
push
xor
fdivrl
sub
in
test
mov
dec
subl
fucomi
lods
inc
mov
mov
test
fidivs
bound
xor
sysexit
push
rorb
jle
hlt
sarb
push
jb
push
test
jne
insl
je
add
test
lcall
add
hlt
xchg
mov
mov
out
pop
xchg
movsb
push
popf
xchg
jns
cmc
movsl
add
sub
pop
xor
pop
push
int3
int3
js
xlat
push
push
add
adc
cmc
jp
dec
repnz
in
cmp
imul
add
add
repz
dec
in
xor
jns
mov
dec
ret
out
inc
cmp
pop
adc
lcall
insl
in
mov
pop
notb
dec
or
in
jb
insb
add
inc
popf
ficoml
es
lods
loope
xorl
ja
jg
jo
xchg
nopl
in
jbe
dec
lds
mov
aas
add
jmp
inc
mov
into
mov
filds
nop
gs
sub
xchg
das
ret
test
lahf
lcall
or
cmp
lcall
or
push
jo
cmp
dec
add
jno
inc
and
scas
jnp
jl
fcomi
jb
mov
adc
ss
xchg
mov
imul
push
aad
in
loope
aad
fnsave
les
jnp
loop
jp
movsb
jbe
sbb
mov
stos
int3
dec
xchg
in
es
pop
jg
push
inc
mov
pop
in
decl
push
sbb
xchg
ja
or
adc
add
scas
or
mov
popf
cld
push
loopne
dec
xchg
hlt
pop
jo
sar
mov
cld
andl
ret
addr16
loopne
lcall
cmpsb
mov
fisubrs
icebp
push
data16
sbb
mov
fsubrl
test
cmp
push
jmp
dec
and
out
adc
stos
inc
repz
sub
dec
xlat
dec
test
sahf
jbe
ss
adcb
mov
sub
scas
daa
rcr
jp,pn
in
in
divb
mov
in
push
cmc
cmp
xchg
xor
aaa
mov
pop
inc
inc
mov
cltd
ret
js
cmp
out
xchg
ja
jbe
cmc
pop
push
je
icebp
xchg
xlat
insl
out
sub
movsb
xchg
xchg
xor
aas
mov
jbe
pop
hlt
leave
dec
push
lea
cltd
bound
pop
add
insb
imul
cwtl
mov
add
push
xor
xlat
adc
mov
mov
mov
push
and
divb
aaa
cmp
daa
mov
add
es
sub
dec
sbb
andl
inc
shr
and
dec
push
mov
add
imul
cs
mov
mov
sub
push
outsl
fstl
jg
mov
xor
sbb
cmpsb
jl
add
adc
notl
push
xchg
mov
or
out
mov
outsl
dec
jnp
mov
push
out
clc
mov
jns
mov
inc
into
ja
pop
into
das
popf
std
inc
jecxz
sbb
sub
pop
outsb
push
data16
std
pop
or
adc
rep
insb
das
cli
jmp
pop
mov
outsb
cmp
push
scas
push
arpl
mov
out
sub
xchg
push
and
lods
int3
jl
xor
jo
in
jecxz
scas
jns
sub
mov
add
sbb
emms
les
neg
imul
push
nop
je
sub
xchg
rcrb
or
test
aaa
std
jl
add
pop
test
mov
mov
loopne
mov
mov
test
and
cmpsl
aad
das
pop
aaa
dec
test
jo
in
psrad
mov
cmc
mov
jnp
xor
jnp
xlat
cmpsb
pop
outsb
xchg
ficoml
leave
push
aad
movsb
xchg
sub
dec
pop
in
imul
xchg
dec
xor
popf
outsb
inc
adc
add
loope
fs
scas
pop
sbb
lods
pusha
pop
add
scas
inc
insl
push
adc
pop
movsb
push
aaa
or
lea
cmp
dec
inc
into
inc
out
xchg
fcompl
cmp
jle
xchg
outsl
test
aam
or
je
sbb
rcll
ret
mov
loope
cmp
mov
cwtl
iret
out
push
test
gs
cmp
push
sar
test
subl
nop
popa
outsb
enterw
mov
addb
cmp
dec
repnz
mov
jmp
push
ljmp
mov
xor
or
mov
add
sarb
testl
cmpsl
lcall
test
adc
and
lods
mov
negb
insw
clc
popa
arpl
jle
in
cmpsb
rcrl
inc
gs
inc
test
push
das
rcll
and
popf
xchg
dec
icebp
js
sbb
mov
sub
mov
xchg
sarb
push
xchg
sub
mov
inc
pop
jo
sub
ds
or
sbb
cmp
push
cmc
movsb
add
in
pop
pop
and
mov
lock
xlat
push
pushf
mov
mov
or
pop
outsb
mov
ror
xor
lods
outsl
pop
jnp
flds
sub
test
es
popa
sub
test
or
add
mov
stc
aas
jle
stos
lods
mov
icebp
jbe
or
bound
jp
jnp
rolb
inc
jmp
sub
jp
xchg
out
and
fwait
insb
sbb
imul
mov
dec
push
jecxz
les
pop
mov
sub
mov
push
jecxz
movsl
roll
sub
shlb
and
cwtl
xchg
cmp
pusha
xor
mov
or
add
fwait
lods
shrb
jecxz
xchg
mov
sub
lock
lret
or
in
pop
roll
mov
inc
dec
sub
jo
xlat
mov
cmpb
mov
inc
inc
clc
pop
xchg
jmp
mov
jl
jne
fs
mov
cmp
adc
out
cmp
mov
ss
mov
push
std
jbe
js
dec
fcomps
and
daa
mov
mov
mov
test
scas
mov
sbb
xchg
mov
cmp
loopne
into
mov
add
out
sub
mov
mov
rclb
loop
fcoml
es
and
push
jo
fistpll
or
add
jbe
in
mov
jp
xchg
popf
popf
aaa
sub
dec
mov
push
push
xchg
xchg
ss
mov
lods
popf
cmp
sbb
rorl
pop
inc
xchg
xor
xchg
xchg
or
lods
je
push
cmp
cmp
dec
sbb
es
xchg
in
or
lods
fnstcw
call
sub
stos
inc
in
jecxz
sbb
xchg
push
iret
push
sbb
repz
scas
sbb
mov
xchg
xor
add
mov
push
and
inc
mov
clc
jnp
scas
mov
jmp
aas
stos
stos
sarl
mov
sub
cld
aam
cmp
cmc
mov
jno
lret
int
adc
and
inc
xor
test
in
fidivrs
stos
xor
dec
dec
incb
add
dec
les
inc
mov
lcall
cld
jae
movsb
pusha
shrl
stc
and
insb
or
testl
push
pusha
in
push
movsl
jmp
mov
pop
xor
mov
loop
mov
sub
js
push
fwait
jge
std
and
loope
mov
push
repnz
sbb
sub
adc
popa
add
test
jle
repz
sti
cmc
mov
push
arpl
adc
je
sub
les
jbe
in
cmp
sub
mov
lcall
jo
fucomp
mov
gs
push
mov
mov
dec
cmpsb
or
es
push
cmpb
scas
mov
dec
jne
push
push
orb
xor
mov
push
and
andb
mov
divl
out
ret
and
fdivl
or
xchg
push
ds
arpl
add
sub
das
int
sbb
or
sti
jnp
sbb
mov
cmp
add
stc
jbe
test
mov
aaa
pop
stos
push
call
dec
insb
or
xor
sbb
popl
movsl
fistl
push
xor
imul
pushf
jmp
jmp
mov
call
test
lcall
xor
mov
lods
movsb
and
icebp
or
insl
insl
out
cli
jg
or
jne
ret
in
mov
add
mov
xchg
dec
sbb
add
or
call
fidivrl
mov
jl
movsb
pushw
adc
adc
punpckhdq
jecxz
push
push
rorb
rcrb
dec
push
lret
mov
insl
bnd
aad
jns
jnp
jp
jl
sub
aaa
int3
and
ret
aas
xchg
lods
adc
cs
adc
xchg
icebp
xor
mov
xor
in
pusha
cmp
stos
out
or
and
hlt
fcoml
and
xlat
adc
pop
lahf
enter
dec
test
adc
aad
jecxz
add
jmp
fnstenv
mov
repz
fsubrl
stos
cs
int
outsl
xchg
sbb
jns
dec
push
dec
sbb
ror
or
inc
pop
inc
mov
sbb
add
pop
push
xchg
js
in
imul
adc
pop
out
push
push
pop
mov
pop
fildll
loopne
call
adcb
xchg
jle
add
repz
stc
into
xor
add
ljmp
xor
es
xchg
jbe
sbb
sub
push
ret
stos
inc
xchg
xchg
insb
cmp
mov
fmull
xor
xor
jl
add
mov
jns
cmp
push
add
or
mov
movsl
add
ljmp
lahf
loopne
fs
or
adc
daa
fstl
outsb
or
mov
pop
xchg
mov
dec
lds
ret
ret
aam
popl
aaa
scas
and
jno
mov
movsl
cmp
push
aaa
jae
js
popa
inc
leave
or
roll
movsb
shr
pop
out
xchg
cmp
push
push
mov
push
rol
sar
data16
pop
mov
incb
inc
mov
adc
sbb
jno
mov
inc
pop
or
cwtl
lret
mov
pop
mov
inc
mov
out
push
call
xchg
std
popa
shlb
aas
jmp
pop
les
ret
push
jl
mov
jno
mul
push
xchg
xchg
shlb
out
push
mov
jns
jl
ret
add
loop
pop
jae
xchg
pusha
inc
int3
pushf
call
das
test
pop
inc
loopne
es
pop
mov
jae
xchg
in
cmp
push
mov
call
fistpl
lret
pop
cmpsb
xchg
mov
aad
push
nop
sbb
mov
imul
scas
or
jge
out
push
movsl
xor
push
shlb
jno
aas
andb
lret
iret
rcrl
imul
sub
sub
cwtl
iret
xchg
add
jl
cmp
mov
not
xchg
push
fs
out
and
sbb
insl
lret
lret
mov
jp
jp
pop
cmpsl
lock
test
cmp
cmp
jnp
aas
cmpsl
lods
neg
loop
pop
repz
je
sub
outsb
push
adc
data16
ss
fidivl
cmp
sbbl
push
stc
mov
stos
scas
repz
ficompl
ss
inc
adc
loopne
or
mov
scas
test
xor
adc
leave
jge
out
push
add
add
lods
imull
enter
lahf
mov
insb
movsb
int
and
inc
adc
lahf
xor
or
aad
add
rorb
ja
mov
dec
adcb
mov
lret
xchg
inc
into
lcall
cwtl
add
cli
std
f2xm1
mov
jne
inc
out
mov
xlat
mov
xchg
decb
push
aam
jge
mov
add
cmp
adc
jbe
cmp
cmpsb
rorb
mov
lds
fimuls
popf
mov
mov
fucom
fldenv
push
mov
or
push
push
adc
div
shlb
mov
xor
sahf
adc
push
push
gs
sbb
pcmpgtb
std
xor
in
push
push
cmpsb
dec
fidivrs
pop
loopne
sub
repnz
jae
xor
and
mov
out
or
fidivs
mov
mov
lret
pop
iret
in
sub
imul
cwtl
scas
je
and
cmpsl
dec
ss
mov
rolb
push
loope
shll
iret
aaa
pushf
or
sbb
mov
lods
out
xchg
insb
lret
jmp
or
test
dec
pop
mov
in
aam
push
aad
push
mov
add
pop
sbb
lret
lock
push
push
stos
xchg
sbb
inc
stos
mov
enter
dec
lcall
pop
inc
int
mov
movsb
rcr
sahf
int
push
lods
imul
push
jecxz
inc
mov
mov
packuswb
or
mov
push
pop
jo
aam
sbb
mulb
sub
cld
xor
fsts
sbb
mov
jg
cmp
pop
repz
and
addr16
cmpb
test
xor
mov
push
mov
std
mov
adc
or
dec
inc
insl
lcall
xor
gs
mov
fdiv
and
fisubl
pop
inc
ret
sub
jge
repnz
in
enter
daa
stos
mov
add
xor
cmp
hlt
nop
xchg
adc
mov
gs
lock
push
insl
test
xor
sbb
jecxz
out
add
sub
insl
scas
cmp
mov
xchg
fisttps
lcall
cmp
cmp
push
adc
mov
movswl
mov
pop
cld
pop
pushf
ficoms
xchg
mov
xchg
test
and
pop
pop
sbb
mov
mov
xlat
cmpsl
aaa
ds
pop
lahf
stos
int3
mov
scas
xchg
xor
jmp
jo
ret
mov
xchg
dec
iret
pop
pop
inc
fldt
ret
add
fcoml
pushf
lret
sbb
push
in
ljmp
dec
daa
add
stc
aas
fidivrl
movsl
sbb
adc
sbb
sbb
xor
movsl
leave
pusha
fistps
call
icebp
insl
pop
jbe
mov
cmp
adc
pop
add
jne
imul
mov
mov
mov
sbb
add
pop
xchg
xor
and
push
jg
je
sub
lret
mov
mov
cmp
pop
inc
pop
mov
fucom
sub
inc
mov
popa
add
xor
xchg
cs
mov
sbbl
push
mov
push
aaa
stos
adc
dec
dec
divb
inc
mov
adc
ror
pop
xor
cmp
stos
mov
xchg
subl
std
inc
mov
jnp
jns
int
jp
lds
stos
ret
bound
outsb
movsl
sbb
loope
and
ja
lods
inc
cli
pushf
sti
dec
scas
jbe
fmul
lcall
jmp
stos
xor
fbld
into
cmpsb
add
test
pop
mov
lds
adc
pop
sub
mov
add
and
lcall
js
jge
dec
in
lock
pop
or
jns
pop
into
adc
inc
push
sar
fistps
addr16
inc
jae
loopne
sti
inc
fsubl
arpl
mov
scas
add
add
jge
cld
fmulp
mov
test
enter
fnsave
xlat
std
mov
jo
loope
pop
pop
adc
negb
xchg
sbb
adc
mov
cs
fisubl
cmp
aas
mov
shl
icebp
and
out
ja
cld
inc
add
xlat
mov
and
in
ljmp
sub
arpl
xlat
faddl
fisubrl
test
adc
pop
xor
sbb
into
cmp
sti
ss
mov
test
jno
xor
mov
jl
mov
test
jmp
cmpsl
repz
cmc
mov
arpl
xor
pop
and
repnz
or
arpl
xorb
fmul
inc
frstor
test
jne
sbb
mov
cltd
insb
push
adc
das
and
mov
mov
stos
dec
lods
fidivrl
jno
mov
dec
mov
int
adc
push
mov
adc
mov
inc
das
jno
or
fldcw
push
mov
aad
jnp
stc
push
or
dec
mov
lret
xor
enter
roll
push
mov
into
lds
sbb
out
adc
sahf
dec
fnstsw
and
push
mov
cmp
test
adc
hlt
shll
addr16
sbb
push
mov
sub
jg
dec
cli
popa
das
lods
addr16
jmp
shrb
cmpsb
pushl
lock
mov
mov
or
popa
cmp
lahf
xchg
sbb
or
lcall
call
bound
loope
push
add
or
scas
adc
jecxz
jg
dec
les
dec
lcall
hlt
pop
dec
jg
mov
and
inc
lds
inc
sbb
xor
inc
mov
and
in
fs
ds
sbb
imul
int3
int3
mov
mov
int3
dec
and
adc
imul
movsl
jl
xchg
nop
jg
pop
push
mov
or
cmp
lcall
xorl
in
in
fwait
pop
movsl
xor
inc
pop
and
adc
mov
fdivrp
or
loope
mov
cmp
sti
or
faddl
jnp
outsb
inc
xor
stc
fcoms
and
jae
stos
pop
mov
scas
adc
mov
addr16
cmp
or
jnp
inc
lods
fildll
xorl
inc
out
mov
testl
xor
ss
lods
movsb
insb
mov
les
shrl
sub
add
pop
mov
les
popf
cmpsb
add
mov
mov
dec
push
mov
into
cli
mov
cltd
pop
aam
cmpsl
and
jle
xor
jb
in
aad
fmull
repz
cmp
loop
int
js
mov
cmp
sti
movsl
fcmovu
mov
push
jp
xchg
inc
popf
push
cmpsl
xorl
jno
testb
insb
add
cmp
lret
jmp
jmp
fldl
push
subl
fwait
jae
outsb
fdivl
sub
pop
mov
rolb
mov
cmp
outsl
das
les
mov
fnstsw
loope
mov
xchg
lret
sub
pop
mov
lea
dec
ss
test
push
mov
hlt
xchg
aaa
loope
cld
mov
cmp
and
scas
es
std
xchg
adc
add
push
arpl
inc
dec
xor
repnz
xor
stos
adc
pop
loope
add
push
loopne
push
rclb
ja
jmp
aas
dec
xchg
mov
mov
inc
test
int3
xlat
lock
push
into
jns
ljmp
fnsetpm(287
xchg
das
outsb
dec
ror
scas
mov
in
push
pusha
adc
loop
pop
dec
cmpsl
insl
addr16
and
es
cmp
or
repnz
jmp
cmpsb
cmp
and
push
add
mov
push
adc
adc
dec
xchg
subb
mov
fisubl
cmp
sbb
dec
jns
sti
cmp
push
mov
lods
fucomi
pop
in
adc
shll
xchg
mov
cmp
aaa
mov
out
jbe
cwtl
jnp
mov
mov
jbe
std
pop
sahf
add
mov
pop
xor
cli
mov
nop
das
aas
xor
insl
sub
mov
push
mov
add
pop
sahf
sbb
aas
jmp
mov
fwait
das
inc
xlat
xchg
jo,pn
xor
shll
cwtl
leave
adc
pop
add
xchg
rcll
mov
enter
gs
repz
fsubr
rcrb
aaa
mov
outsb
or
add
addr16
stc
clc
and
inc
mov
test
sbb
loop
mov
push
xchg
adc
ljmp
rorl
test
decl
add
mov
mov
mov
xor
add
mov
mov
add
xchg
xor
push
mov
pop
mov
add
lea
add
add
push
inc
pop
dec
xchg
dec
xchg
dec
xchg
dec
push
mov
pop
dec
call
cmp
je
xchg
push
pop
push
pop
inc
xchg
sub
xchg
dec
dec
mov
imul
add
xchg
push
xor
mov
dec
inc
add
dec
xor
add
pop
mov
pop
pop
pop
leave
ret
push
mov
push
xor
xor
and
movl
mov
sub
mov
and
mov
xor
add
mov
movl
mov
sbbl
xor
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jb
xor
push
mov
mov
add
mov
mov
mov
mov
jmp
push
add
mov
add
push
test
bound
pop
bound
divl
fidivs
sbb
mov
xlat
in
repz
jge
inc
aad
push
sbb
and
and
xchg
cmp
cmp
pop
imul
dec
xchg
sbb
clc
mov
add
sub
jl
cmpsl
push
add
xchg
fmul
stos
cld
xchg
add
punpcklwd
push
dec
sbb
mov
lods
scas
out
and
add
jnp
mov
das
mov
ss
push
mov
adc
xchg
cmpsb
es
dec
fisubrl
sub
cmp
cmp
sub
mov
loop
dec
insb
repnz
jno
inc
aaa
dec
and
xor
filds
dec
push
sbb
and
stos
cmc
aaa
in
stos
pusha
outsb
gs
test
sbb
iret
jl
xchg
dec
repz
mov
jg
call
add
repz
dec
fmulp
dec
dec
bound
xor
out
sbb
sub
daa
jns
jnp
ud1
pop
test
mov
push
movsb
int
rcll
sti
aaa
jge
sbb
fwait
data16
sub
and
les
xor
jb
sahf
leave
and
xchg
or
cmpsb
mov
decb
inc
adc
popf
out
enter
out
call
xchg
pop
rorb
daa
push
jl
mov
dec
xor
les
pop
mov
jl
es
and
or
mov
call
dec
mov
sbb
pop
movups
pop
adc
cmpsl
ss
pop
loopne
or
adc
jmp
movsl
pop
dec
imul
xchg
imul
push
stc
inc
das
outsb
mov
ffreep
mov
mov
lahf
test
gs
inc
mov
sbb
inc
jno
push
pusha
xor
fidivrl
and
mov
pop
mov
lock
test
test
bound
loopne
fstpt
xlat
mov
cmc
into
jle
lcall
das
ja
pop
dec
call
jle
ror
and
repnz
in
jl
nop
jo
jmp
push
add
das
jnp
idivb
lock
sarl
test
sbb
ret
mov
mov
add
scas
loope
data16
or
dec
pusha
je
cmp
hlt
in
cmpsb
xor
mov
adc
inc
mov
push
aaa
adc
push
in
sbb
lock
test
stos
add
loop
push
fmull
and
movsb
loope
inc
in
cmp
in
stos
dec
push
sbb
inc
orl
adcl
rcrb
pop
stos
and
call
hlt
das
imul
pop
mov
mov
cmp
ja
jo
cmp
fidivs
sbb
push
enter
and
notb
or
sbb
adc
lods
push
mov
mov
loop
loope
lahf
out
xchg
hlt
adc
rorb
shrl
movl
fistl
arpl
cmp
jge
in
test
push
jp
push
sti
int3
imul
mov
jle
aam
js
inc
je
in
scas
stc
push
jl
idivb
sbbb
stos
sub
lods
push
sbb
fmul
js
movsl
sbb
sub
in
rcrb
adc
sbb
out
or
fsubrl
mov
jne
clc
aam
jge
inc
push
dec
insb
cwtl
sub
mov
scas
pop
xchg
iret
sub
stc
fs
mov
lods
jnp
fwait
mov
sbb
mov
dec
aas
scas
mov
pop
imul
jb
jmp
outsl
add
insl
sahf
inc
sbbl
add
das
jb
xor
push
pop
mov
pop
jl
xchg
aaa
mov
cmp
aad
mov
jl
push
js
mov
iret
and
sbb
push
je
dec
adc
mov
jns
rcl
push
cld
sub
insl
add
or
enter
std
and
scas
push
ljmp
jbe
cltd
mov
lret
mov
aaa
scas
fcoml
mov
mov
inc
cld
xor
xchg
int
sti
aad
mov
test
cmpsl
aas
adc
shrb
aas
add
mov
push
cmp
in
call
mov
sub
sbbl
mov
clc
add
and
stos
data16
xchg
lea
fsubrl
pop
cmp
out
push
mov
in
mov
enter
pop
and
mov
ficomps
ljmp
add
push
mov
lcall
fidivl
jg
lods
jmp
jge
push
adc
or
stc
sub
adc
imul
arpl
dec
dec
dec
xchg
add
addr16
mov
push
fnstenv
cli
jbe
mov
lods
in
loopne
xorps
shlb
aad
nop
xor
mov
fcmovnb
or
inc
repz
jle
lock
mov
sub
dec
mov
add
xor
cmp
xor
inc
mov
pop
push
xor
xchg
orl
fcmovnu
jb
jecxz
sti
xor
les
scas
je
cmc
or
mov
sbb
xchg
push
les
outsb
push
or
scas
lret
in
sub
int
movsl
ljmp
popf
mov
or
fs
mov
imul
jmp
shl
sbb
je
inc
es
fistps
sahf
and
dec
mov
and
add
enter
in
out
xor
and
fiaddl
out
jo
xchg
popf
mov
mov
sub
popa
sbb
mov
pop
adc
and
incb
rcrb
lock
insb
add
xchg
icebp
addr16
testl
sub
add
xchg
mov
cmp
pop
xchg
mov
sbb
je
mov
loope
push
cmp
mov
loopne
rorl
jl
xchg
movsb
jp
push
out
enter
push
cs
inc
cmc
xlat
pop
lods
xchg
mov
pop
aas
repnz
adc
push
je
sbb
rclb
aam
cmp
xchg
pop
and
pop
cmc
sbb
jnp
sti
pop
sub
or
dec
adc
xchg
mov
sub
loope
mov
xor
in
mov
mov
imul
inc
jge
mov
pop
outsl
prefetchwt1
sub
ljmp
lods
mov
cmp
push
jl
xchg
aam
addb
adc
push
stos
repz
mov
inc
pop
mov
mov
repz
sub
in
inc
mov
jbe
mov
or
popf
or
mov
dec
inc
loopne
jmp
lock
icebp
sti
dec
popa
lock
xchg
test
inc
rorb
dec
out
and
inc
and
aam
jns
out
cmp
stos
dec
xor
out
push
popf
cli
xor
bound
mov
jno
push
jp
push
jp
inc
sub
scas
jnp
cmpsl
div
ret
test
out
popf
adc
lahf
daa
cli
sub
xor
orl
adc
push
adc
adc
es
leave
in
test
loop
js
jno
daa
rcrl
jns
jmp
std
mov
or
sub
mov
cmp
fucomi
mov
dec
lret
push
dec
and
iret
mov
sub
cmp
jecxz
sbbb
sbb
cs
js
arpl
pop
push
mov
jae
cmp
inc
sub
lret
push
pop
pop
pop
xchg
xor
stos
add
add
mov
mov
sub
mov
lock
and
xor
fsts
push
jae
out
ds
test
popf
adc
cmp
xchg
jl
cmc
popa
xchg
xor
popa
jno
pushf
or
rorl
push
popa
sub
or
lret
xchg
inc
inc
cmp
and
mov
icebp
fldcw
test
pop
sub
mov
insb
movsl
pop
or
data16
sbb
je
adc
push
inc
pop
adc
fcoms
in
lcall
xor
add
sar
mov
dec
negb
sbb
inc
mov
gs
xor
cli
add
mov
and
or
lds
outsb
mov
lret
daa
into
test
insb
xchg
insl
pop
test
mov
repnz
pop
pop
ret
ret
mov
jle
adc
int
sub
push
shlb
mov
faddl
daa
lods
xor
inc
or
fnstsw
adc
orb
cmpsl
icebp
jbe
enter
jmp
dec
scas
dec
push
lock
ret
adc
or
popa
rorb
mov
add
and
std
xchg
xchg
cmp
cld
aas
aad
inc
loope
mov
xor
pop
fucomp
cmc
lods
dec
add
add
orl
in
pushf
adc
and
rcrl
es
sub
mov
xlat
ja
lret
test
and
sbb
xchg
iret
jns
mov
cmp
sub
repz
lock
dec
popa
js
and
xchg
loope
jecxz
mov
stos
and
and
in
pop
jae
sbbb
aam
out
in
pop
les
xchg
dec
adc
mov
js
test
jecxz
mov
dec
add
das
pop
jbe
xchg
mov
jae
mov
cmp
outsl
lds
cmpsb
mov
rorb
out
mov
mov
xchg
cmc
sahf
lcall
xor
xlat
mov
into
aas
inc
mov
push
ficomps
add
ss
out
ja
insl
mov
sbb
leave
out
add
push
sbb
js
adc
sub
xor
push
cmp
sbb
push
mov
push
nop
shl
sbb
mov
adc
dec
mov
and
test
sarb
fsubrl
jne
xchg
fadds
jno
sub
add
cmp
dec
sbb
mov
fiadds
mov
mov
outsl
xor
lcall
mov
jbe
repz
shrb
dec
mov
into
jae
xor
mov
int3
mov
mov
fs
into
dec
pop
cld
add
sub
add
cmpsl
jecxz
aad
and
mov
sahf
mov
lcall
pop
cli
inc
cmp
rolb
cmpsl
outsb
cmpsl
inc
lea
mov
ret
jno
es
mov
std
lret
mov
dec
xor
enter
cmp
in
jne
loopne
mov
test
mov
sbb
push
jmp
daa
mov
jne
call
mov
fcomi
xor
add
ds
out
subl
sbb
aaa
icebp
insb
mov
aam
push
and
dec
lcall
test
out
fs
fcoml
and
sti
push
fmull
and
xor
movsb
bound
aaa
outsb
pop
pop
test
sub
fcoml
scas
mov
mov
pop
push
ds
int3
imul
jb
push
inc
lcall
or
rclb
mov
adc
mov
rorb
add
or
push
adc
jae
stc
sub
or
sbb
aam
scas
inc
mov
xchg
std
xchg
and
jecxz
ljmp
mov
push
adc
lods
cwtl
mov
mov
and
mulb
clc
daa
lods
loop
in
lea
adc
das
xchg
icebp
aaa
out
add
xchg
adc
lcall
sub
rorb
add
pop
cmp
addl
int3
sarb
or
fldlg2
out
cwtl
pop
push
xor
arpl
sub
pop
xor
out
push
inc
mov
lods
inc
out
and
sub
pushl
gs
or
cli
shlb
mov
inc
dec
push
add
into
movsb
lea
imul
mov
add
xchg
mov
inc
mov
popf
sbb
icebp
sub
xchg
adc
lods
loope
xchg
push
movsl
mov
push
and
int3
dec
outsl
sahf
cmpsb
aas
inc
in
rclb
sarl
popf
jnp,pn
mov
mov
xchg
jmp
dec
scas
dec
rorl
mov
push
cmpl
adc
jne
xchg
mov
fdivs
rcl
mov
push
mov
mov
mov
mov
xchg
or
sub
enter
arpl
xchg
es
sarl
xchg
push
rcl
cmp
lret
movsl
pop
fcomi
push
sbb
adcl
lcall
jmp
mov
mov
jl
test
jae
fldcw
test
inc
jbe
dec
inc
jns
rorl
nop
popa
test
lcall
shlb
in
ljmp
xor
jmp
es
scas
mov
dec
jbe
mov
lds
fsubl
jns
cmc
xchg
cmp
push
popf
xchg
js
sbb
push
idivb
dec
stc
es
pop
loopne
int
scas
adc
test
adc
sbbb
mov
cmp
cmpsl
mov
sbb
arpl
sarb
or
xchg
ficoml
jno
sti
pop
enter
mov
leave
pop
xchg
push
mov
pop
repz
scas
or
lcall
dec
into
push
push
sti
shlb
cltd
out
adc
xchg
sbb
cs
xlat
mov
pushf
jp
out
mov
lods
pop
sar
adc
jne
jnp
push
insl
adc
psllw
pcmpeqd
sub
test
ss
loope
sub
and
mov
inc
or
jne
popa
inc
add
push
or
iret
jns
pop
mov
mov
xor
add
scas
out
fnstsw
pop
nop
daa
nop
bound
cwtl
loop
sbbl
push
mov
test
push
pop
in
cltd
fcmove
gs
loopne
incl
lods
push
negb
insb
aaa
dec
sar
fcmovbe
arpl
arpl
fbstp
addr16
pop
loop
jecxz
fnstcw
xchg
inc
aad
pop
enter
or
fimuls
mov
push
pushfw
nop
fwait
enter
cmp
int
pop
loop
outsb
nop
inc
shl
push
inc
fisubrs
addr16
dec
into
into
pop
pop
and
mov
xchg
xchg
or
and
jo
push
and
or
pop
sbb
adc
jnp
rcrb
mov
gs
outsl
mov
pop
in
jbe
andb
in
pop
xor
lcall
aas
pop
mov
fldcw
frstor
xchg
outsb
rclb
stc
lcall
xor
mov
or
dec
loop
pop
arpl
adc
nop
lods
pusha
mov
push
hlt
cli
dec
xchg
xor
bnd
and
test
aas
lea
lock
mov
mov
enter
adc
sti
pop
pop
out
stos
lcall
inc
imul
xor
pop
insb
sbb
repz
shll
cmpsb
jg
add
push
movsl
push
jne
inc
daa
and
iret
sub
mov
and
dec
arpl
cmp
cmc
dec
xor
mov
shlb
add
lcall
inc
or
movq
gs
mov
test
xlat
cmp
movsl
and
lods
fisttpl
scas
stos
sahf
sub
and
mov
clc
sbb
pop
lods
mov
lcall
insb
pop
sub
or
and
ljmp
movsb
dec
pop
leave
cmpsl
push
test
ja
popa
xor
and
inc
int
loop
ds
sub
sbb
mov
sbb
idivb
adc
cld
cmp
add
movsl
mov
pop
inc
adc
push
sbb
call
add
cmp
jge
xor
and
dec
jecxz
or
pop
xor
adcl
out
mov
sub
jnp
aam
fldl
sub
xorb
mov
in
pop
xor
fcoms
fmuls
cmpsb
xor
in
cmpsb
mov
stos
mov
pop
lea
jne
jle
xor
mov
xor
add
repz
cs
lods
jnp
xchg
aaa
mov
mov
addl
out
lcall
testl
add
fdivrl
inc
insl
cmpsl
rcll
sbb
mov
rcrl
jo
fnsave
cmpsb
cmpsb
je
sub
xorb
js
test
scas
push
arpl
inc
inc
imul
push
fistl
add
jb
jnp
repnz
inc
dec
out
popa
shlb
inc
xlat
push
ss
icebp
mov
or
pop
mov
aad
int3
mov
aas
cld
ja
adc
mov
loope
pop
and
mov
ret
or
insl
sbbb
incl
add
arpl
mov
sahf
movsb
mov
test
adc
ret
dec
mov
mov
cvtpi2ps
push
sub
xlat
cltd
and
fcoms
test
pop
loope
push
int3
aam
mov
pop
sbb
mov
dec
or
inc
pop
add
add
pushf
inc
ret
je
xchg
in
dec
cmp
mov
sub
mov
das
sbb
adcl
xor
dec
test
outsb
or
push
out
jl
cmpb
mov
mov
push
push
outsb
dec
imul
or
pop
movl
mov
xor
sbb
pusha
dec
in
push
call
dec
fcoms
sbb
test
ljmp
xor
cmp
and
jp
mov
sbb
mov
push
sbb
jecxz
sub
mov
push
idiv
dec
repnz
cmpsl
xor
sti
cmp
xchg
inc
jmp
push
call
pop
loope
jbe
sub
popf
pop
sbb
imul
jae
lea
pop
jo
xlat
add
lahf
fbstp
mov
ret
cld
cmp
jne
movsb
inc
fsubrl
fldenv
out
mov
daa
pop
mov
push
aas
dec
inc
add
loope
and
cmp
jo
sti
inc
imul
test
es
addb
std
adc
ret
xchg
dec
gs
pop
dec
fnstcw
loopne
cmp
push
flds
sub
ss
or
push
cmp
lds
sub
jge
add
cmp
repnz
pop
pop
aad
enter
sub
lds
ret
enter
dec
xorl
inc
jns
inc
cli
bswap
mov
or
addr16
adcl
int3
popa
push
mov
popa
mul
jbe
stos
jno
iret
mov
cld
fs
and
daa
lock
adc
sbb
or
adc
adc
cwtl
xor
add
mov
sbb
adc
insl
fsubs
fiaddl
cltd
popf
dec
rclb
insl
mov
cmova
daa
xor
lds
push
fdiv
outsb
in
out
push
lods
ja
cmp
lcall
inc
test
aam
pushf
loop
sub
lret
ret
inc
sbb
jb
pop
idivl
mov
push
jo
mov
dec
mov
xlat
imul
in
repnz
mov
mov
lea
mov
xchg
rolb
push
jecxz
or
jbe
in
test
icebp
or
lods
pop
jno
mov
leave
jmp
out
sub
in
movsbl
test
sbb
dec
add
jb
mov
movsl
sub
out
xor
loop
sbb
insl
sahf
stos
and
push
in
ds
in
jmp
gs
leavew
push
shl
ljmp
xchg
std
inc
mov
mov
int
dec
cmc
cmp
lret
daa
inc
int
pop
rclb
lock
jbe
leave
pushf
daa
mov
stos
outsl
rcl
sbb
popa
ret
cld
fwait
push
int3
call
ret
jg
sub
dec
lea
das
clc
adc
xchg
test
and
mov
ret
mov
sub
sbbl
adc
scas
pushf
add
inc
pusha
stos
cmp
test
iret
pusha
std
push
hlt
push
mov
add
arpl
jmp
push
sti
mov
xchg
clc
and
mov
or
mov
xchg
mov
sbb
jle
xor
pop
jb
mov
mov
adc
adc
xchg
cmp
bound
push
sub
or
out
int3
inc
mov
mov
and
mov
dec
or
xchg
dec
jp
in
hlt
lret
mov
adc
sbb
inc
or
aam
xchg
or
mov
and
mov
mov
aas
rcll
add
enter
sbb
cmpsb
mov
out
lds
pushf
push
jbe
or
ffreep
adc
or
cbtw
call
push
out
aad
scas
fnstenv
dec
jbe
aad
adc
pop
je
sub
and
loope
mov
lods
and
sbb
inc
lock
inc
and
add
test
push
shlb
cmc
mov
and
xor
cmpsl
dec
fsubl
sub
inc
inc
mov
daa
push
int
mov
xor
sbb
lahf
mov
and
add
xchg
sub
loop
dec
xchg
arpl
cmpsb
mov
test
mov
lahf
aam
sub
xor
gs
mov
push
outsl
xchg
les
imul
inc
sahf
adc
sbb
or
mov
dec
and
sbb
sbb
mov
cld
scas
sti
lods
addr16
mov
pushf
push
adc
cwtl
pop
out
sbb
lahf
test
adc
xor
scas
lea
pop
inc
mov
repnz
loope
cmp
fisttpl
out
outsl
or
pop
adc
mov
pop
pop
ret
addr16
std
jl
movsb
loope
pop
jns
jb
fwait
in
mov
ljmp
jae
inc
mov
clc
aas
hlt
xchg
inc
sub
inc
cmp
ljmp
std
xor
mov
arpl
cmpl
push
push
pusha
outsb
std
add
pop
mov
lcall
sbb
xor
sbb
mov
pop
mov
ja
mov
add
xchg
inc
dec
ljmp
add
arpl
stos
mov
xchg
push
xchg
out
xchg
xor
cmp
pop
pop
mov
push
enter
imul
lret
repz
push
mov
aam
sbb
test
stos
mov
fbld
insb
add
stos
jae
idiv
call
cmpsl
fadd
fildl
mov
mov
adcb
xorl
sub
jl
adc
dec
testb
cmp
arpl
aas
push
jno,pt
sbb
mov
xor
sub
pop
dec
inc
xchg
push
subb
data16
ficomps
pusha
dec
arpl
scas
call
push
negb
jmp
pop
out
movsl
mov
jecxz
xor
xchg
fsubrl
push
cli
mov
rorl
stc
xchg
and
mov
in
notl
fwait
imul
loop
fdivrs
shl
enter
leave
xlat
ret
loope
daa
loopne
mov
cmp
ja
and
xchg
inc
and
rclb
int3
icebp
cmpsl
pop
js
inc
call
pop
dec
push
dec
dec
incb
push
xor
xchg
and
jecxz
adc
cltd
xchg
cs
pop
out
inc
test
mov
xor
mov
sub
movsb
add
test
mov
lods
xor
daa
ss
lcall
mov
add
adc
mov
inc
xor
js
movsl
faddl
jle
nop
push
and
lea
push
daa
add
adc
aam
mov
imul
loopne
mov
pusha
fbld
je
rcrb
fwait
xchg
mov
push
pop
fmull
out
add
cltd
lods
stos
xchg
sbb
sarl
clc
push
mov
out
dec
lahf
lret
mov
enter
test
fidivrs
sub
mov
lds
enter
xchg
flds
aaa
mov
jno
xchg
and
mov
loopne
mov
mov
fbstp
xor
push
stos
dec
pushf
cmc
loop
dec
cltd
fisubl
inc
xor
popf
mov
iret
stos
dec
cwtl
shl
add
and
jo
jnp
leave
out
pop
clc
push
loop
jnp
int3
pop
movsb
dec
repz
jmp
in
and
inc
jp
cli
pushl
pop
adc
push
lahf
test
loop
test
scas
ja
and
cwtl
mov
sub
lock
dec
xor
sbb
mov
add
xor
arpl
out
rcl
xor
dec
add
call
xor
nop
cltd
push
lahf
loopne
mov
div
sub
movsb
adc
jbe
lods
dec
bnd
lcall
jno
or
pop
jnp
iret
pusha
dec
inc
data16
aad
lods
dec
lret
imul
fsts
pop
dec
adc
push
inc
cld
push
mov
mov
mov
rorl
mov
iret
mov
ret
adc
pop
jae
sbb
pushf
out
popa
int
jne
sbb
mov
push
out
fnsave
sub
jmp
mov
imul
sub
cvtpi2ps
insb
leave
or
push
jmp
sub
subb
icebp
adc
or
std
mov
add
sarl
leave
jmp
sub
push
imul
bound
xchg
in
repnz
out
or
add
andb
jl
ljmp
mov
stc
pop
or
stos
and
mov
jg
dec
jg
inc
out
imul
test
hlt
mov
testl
mov
roll
out
aas
or
adc
insl
mov
xchg
mov
cmp
mov
das
inc
and
push
psrld
daa
push
in
dec
scas
loop
fidivl
fstpt
rorb
mov
xchg
scas
push
lea
data16
loop
test
divb
cmc
mul
test
xchg
pop
jl
mov
cli
loope
dec
loope
cmp
es
jb
mov
stos
pusha
mov
pushf
bound
push
pop
xchg
pop
push
add
aas
out
imul
insl
push
sub
mov
push
dec
mov
or
loopne
xchg
fucomip
push
aam
mov
dec
or
mov
repz
pop
or
jmp
arpl
test
push
mov
add
roll
mov
add
in
popa
addr16
push
cltd
scas
scas
pop
xlat
in
cmp
iret
xor
hlt
add
sub
jno
hlt
scas
pusha
sti
pop
mov
std
stos
stos
mov
enter
daa
push
inc
add
fnstcw
ret
flds
arpl
dec
iret
and
scas
in
mov
dec
push
out
decb
push
mov
push
lods
push
mov
xchg
icebp
add
cmp
jp
or
orb
sub
pop
enter
mov
je
out
popf
scas
jp
outsl
dec
push
xchg
cmpsl
push
xchg
mov
inc
pop
arpl
pop
lds
jmp
imul
xor
insl
add
dec
push
push
xchg
icebp
mov
into
or
test
leave
jp
jge
iret
out
imul
test
xor
xor
loopne
xchg
push
out
mov
push
lea
lea
or
inc
pop
daa
lcall
aam
inc
dec
xor
inc
mov
sub
ja
aad
adc
sub
sub
fwait
ss
adc
std
out
outsl
inc
jns
mov
cmp
shrl
dec
pop
push
xchg
sub
xchg
test
and
push
jge
lds
xor
cmp
push
add
dec
test
adcl
jg
xchg
mov
xchg
jg
xlat
lret
ljmp
sbb
pop
push
xor
or
in
sbb
or
lods
sti
les
cld
mov
mov
lds
push
and
arpl
xchg
and
xchg
xchg
sbb
dec
mov
adc
fwait
adc
xor
aad
mov
jp
mov
push
cmpsl
cmp
outsl
sahf
sahf
or
adc
pop
xor
jg
inc
cmp
pop
in
ds
xor
mov
mov
call
mov
mov
mov
scas
ret
pop
fadd
sbb
inc
sahf
daa
add
ja
push
daa
jnp
andl
popa
push
fistps
daa
jl
js
xchg
fwait
jecxz
cmpsb
sub
dec
xchg
push
fs
leave
xchg
fsubrl
in
dec
or
cmpl
popf
mov
mov
orl
jo
sub
cmp
fistpll
push
mov
stos
sti
xchg
add
pop
mov
push
mov
enter
insl
lock
fistps
adc
lcall
mov
lret
js
add
cltd
and
xor
xabort
jle
sub
aad
push
inc
int
pinsrw
lods
push
notl
pop
lcall
into
loop
stos
stos
xchg
das
dec
mov
cmp
jp
leave
gs
into
imul
scas
xor
cmp
cwtl
push
dec
std
subb
or
iret
call
std
xchg
pop
movsb
sahf
mov
in
xchg
mov
adc
sub
or
push
cmpsl
xchg
adc
cltd
xchg
ljmp
sub
mov
xchg
inc
adcb
push
jo
mov
ret
push
mov
or
xchg
jb
pop
mov
cld
xor
add
or
rcl
or
lret
push
inc
fwait
subl
jne
aaa
shlb
push
add
in
push
test
cs
test
sub
bound
test
push
cmp
ret
pop
stc
push
cmp
mov
lods
mov
lds
mov
adc
add
es
xor
pop
push
mov
lea
dec
int3
jle
rcrl
mov
lock
push
push
xchg
adc
js
push
stos
insb
jnp
je
jb
nop
ret
push
das
popf
pushf
enter
adc
je,pn
inc
xchg
dec
jle
mov
and
inc
push
cmp
leave
subl
add
jno
inc
pop
divl
cs
jns
mov
gs
cmpsb
or
push
test
jle
ja
cs
xchg
outsl
inc
mov
pop
lahf
sarb
push
adc
add
push
idivb
aad
stos
es
mov
roll
lret
inc
std
outsb
int3
inc
faddl
lods
repnz
notl
std
jb
outsb
and
outsl
jno
vpcmpeqw
mov
lea
dec
push
sti
movsl
cmp
fimuls
cmc
cmpsb
sub
ret
gs
pop
hlt
clc
cltd
xchg
scas
add
add
sbb
cmc
pop
dec
mov
cmpsl
insl
cmp
mov
mov
pop
xchg
fwait
sub
addb
cs
or
jns
mov
inc
sbb
or
inc
sbb
jne
mov
mov
xor
add
pop
leave
ret
push
mov
mov
sub
mov
mov
subl
cltd
sub
push
add
mov
add
inc
adc
push
push
mov
movl
mov
mov
mov
xor
xor
orl
xor
adcl
add
movl
adc
xorl
xor
xorl
xor
movl
cmp
movl
jne
movl
cmp
movl
je
andl
mov
inc
mov
cmpl
jne
push
push
pushl
push
push
pushl
call
cmpl
jne
xor
xor
inc
mov
cmpl
jb
orl
mov
orl
mov
mov
orl
xor
adcl
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
xor
mov
mov
mov
mov
mov
add
mov
mov
xor
add
xor
add
adc
xor
xor
xor
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
pop
pop
pop
pop
ret
push
mov
sub
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
jmp
movzbl
sub
push
or
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
call
jmp
mov
and
mov
sub
mov
mov
andl
movl
addl
movl
andl
mov
xorl
mov
sub
xor
mov
mov
sub
sub
mov
orl
add
mov
xor
mov
or
xor
mov
addl
sub
mov
mov
xor
adc
mov
notl
addl
mov
mov
sub
and
mov
mov
xor
and
mov
addl
mov
mov
xor
andl
mov
mov
mov
sub
xor
mov
movl
cmpl
je
cmpl
jne
push
push
call
mov
dec
mov
jmp
mov
mov
negl
xor
mov
add
xor
mov
sbbl
mov
xor
mov
sub
and
mov
addl
xor
mov
add
movzbl
movzbl
adcl
sub
mov
movzbl
xor
mov
or
mov
xor
add
andl
mov
andl
lea
adcl
mov
adcl
lea
mov
sbbl
lea
mov
orl
lea
andl
mov
adc
mov
sbbl
xor
add
andl
push
mov
xor
add
push
mov
xor
add
push
lea
push
pushl
pushl
call
test
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
lea
mov
mov
mov
mov
mov
test
je
lea
mov
mov
mov
mov
mov
mov
mov
sub
mov
xor
mov
sub
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
pushl
xor
sub
mov
mov
pushl
pushl
pushl
pushl
pushl
pushl
pushl
mov
mov
mov
mov
call
mov
mov
add
pop
pop
leave
ret
push
mov
sub
movl
lea
neg
mov
push
sbb
mov
mov
lea
add
mov
sub
mov
dec
mov
and
mov
orl
xor
add
subl
mov
xorl
mov
mov
mov
xor
mov
mov
andl
add
movl
cmpl
je
cmpl
jne
push
call
xor
add
dec
mov
jmp
push
mov
sub
mov
movl
cmpl
je
cmpl
jne
push
push
pushl
call
mov
dec
mov
jmp
mov
addl
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
adcl
xor
mov
mov
and
mov
add
movl
cmp
je
movl
mov
movl
jmp
mov
mov
cmp
jne
movl
push
jmp
mov
notl
mov
movl
cmp
movl
jne
or
mov
add
xor
addl
add
movl
cmpl
je
cmpl
jne
push
push
pushl
push
call
cmpl
jne
mov
dec
mov
xor
add
dec
mov
jmp
mov
adc
mov
mov
orl
xor
add
xorl
imul
mov
sbbl
xor
addl
add
cmp
jmp
jl
lret
mov
test
rcl
ljmp
bound
pop
bound
mov
dec
sarl
inc
stos
mov
out
out
inc
mov
push
pop
adc
mov
jo
call
sbb
gs
iret
pop
in
xor
mov
lds
dec
mov
jp
mov
dec
aas
jo
inc
jns
and
and
pop
pop
in
aad
dec
mov
nop
pop
cmp
push
adc
push
inc
push
dec
dec
inc
popf
dec
mov
sbb
clc
xchg
test
shl
adc
dec
lahf
pushf
pop
xor
mov
mov
rol
jns
sub
jge
adc
data16
dec
lea
xchg
leave
mov
xor
add
sahf
mov
adc
repz
dec
jnp
inc
pop
or
imul
shrl
cltd
mov
fists
sbb
inc
jg
or
out
sbb
ficoms
cwtl
sub
andl
cmp
sbb
push
aad
mov
dec
nop
mov
pop
jmp
fldenv
cmp
loopne
adc
add
or
dec
adc
daa
movsb
add
cmp
push
sub
cmp
mov
add
adc
push
sar
jno
dec
cmp
push
enter
lahf
push
xor
inc
adc
mov
xor
sbb
loope
pop
fs
dec
sbb
lods
inc
movsb
dec
loope
in
popf
int
mov
lahf
call
mov
xorb
and
lahf
dec
mov
mov
sub
shrb
int
leave
mov
adc
call
out
leave
xchg
inc
pop
jmp
jae
rorb
in
jl
sbb
test
movsl
mov
adcb
orb
cmpl
mov
xlat
sub
in
xor
sub
cmp
aad
decb
aas
sub
mov
imul
adc
in
movsb
ja
mov
leave
movsl
test
and
jbe
push
mov
or
test
out
or
cld
xlat
xor
cld
mov
xchg
inc
ja
add
test
lret
lods
rcrb
jne
sub
loop
les
inc
gs
lods
xlat
add
mov
push
cmp
fs
sub
arpl
push
mov
cmp
aaa
stos
into
sbb
dec
mov
push
add
jge
rep
sub
mov
gs
bound
imulb
out
dec
cli
imul
push
in
scas
int
inc
sahf
scas
add
lret
or
mov
ljmp
pop
inc
xor
jg
out
lods
out
repz
push
test
adc
sub
sti
mov
int
inc
pop
mov
in
daa
aad
ret
adc
or
imul
call
mov
pop
sbb
lea
xor
aad
xchg
stos
and
or
div
adc
js
fisubrs
cmpsb
or
ja
loop
add
lods
jmp
xchg
ret
je
lea
jge
adc
jmp
inc
pop
cmp
aad
test
idiv
mov
ficoms
rclb
mov
adc
stc
cmp
repnz
pop
fstps
in
push
adc
xor
cwtl
icebp
push
or
mov
xchg
inc
imul
in
ljmp
into
jge
imul
mov
loopne
aaa
test
nop
adc
inc
mov
xor
loop
mov
ret
stos
aaa
or
dec
mov
je
fucomp
dec
aaa
and
pop
std
lea
in
push
subl
lds
push
mov
cld
repnz
mov
push
jb
incb
xlat
adc
fwait
inc
sbb
jno
and
lcall
movsb
or
adc
inc
jp
movsl
mov
xchg
rcl
pop
adc
xchg
nop
jge
insl
pusha
xchg
out
test
lods
pop
rcrl
mov
mov
push
inc
mov
ds
movsl
into
lds
xchg
ljmp
inc
repz
sbb
rcrl
add
sbb
repnz
movsl
lahf
push
loopne
lds
cmp
push
popl
je
and
fsub
xchg
jle
test
aad
adc
sbb
jp
push
rcl
inc
insl
push
sti
fwait
lea
scas
out
cld
pop
add
cmp
inc
pop
cmp
stos
adc
cmp
or
outsl
loopne
fldl
mov
hlt
pop
sub
cmc
repnz
pushf
ret
sub
test
loopne
xor
call
in
jp
sbb
adc
mov
jbe
outsb
test
lods
hlt
enter
repz
pop
jl
scas
jg
es
mov
repz
adc
in
std
pop
inc
push
xchg
inc
lcall
or
add
fnstcw
lods
push
mov
test
xchg
inc
push
fldt
xor
xor
dec
test
cmpsl
adc
sbb
adc
outsl
int
std
push
testb
les
fwait
scas
inc
scas
push
stos
clc
imulb
data16
int3
insb
or
xor
lods
cmp
push
cmp
sub
int
icebp
push
fadd
call
stos
pop
pop
add
xchg
addb
dec
lcall
lds
push
hlt
mov
or
sbb
cltd
aam
popf
ss
or
adc
jne
inc
cltd
add
test
cli
pop
ds
and
or
push
jecxz
aam
nop
loope
jbe
aaa
shl
mov
push
sbb
lods
scas
push
cmp
inc
rolb
gs
or
xor
incl
int3
shll
hlt
out
mov
sub
add
adcl
and
and
fistpl
outsl
or
roll
aaa
ret
in
movsl
or
cmc
outsl
add
push
inc
mov
cmpsb
sub
xor
imul
loop
xchg
iret
push
and
cmp
dec
fxam
fwait
inc
aas
sub
orb
mov
arpl
ljmp
and
sti
push
in
movsl
xlat
sbb
jbe
mov
xchg
inc
lret
insl
jo
xor
lea
push
int3
int3
push
adc
insb
mov
sub
ret
mov
jg
dec
push
movsb
inc
push
ror
lcall
ror
addr16
inc
es
fstl
addr16
iret
adc
mov
cmpsb
mov
push
out
cld
cmp
ret
cmp
dec
mov
sub
fdivp
out
mov
aad
scas
mov
nop
fsub
js
insl
leave
addl
decb
andb
shll
lock
jmp
out
cmovl
les
arpl
fidivrs
xor
popa
xor
cwtl
stos
adc
rcrl
pop
cmp
mov
scas
dec
cltd
popf
sti
and
loop
mov
and
xbegin
sub
icebp
pop
test
or
xor
sahf
in
stos
stc
test
push
and
mov
jmp
xlat
repz
jnp
mov
mov
sbb
jns
push
adc
dec
in
cwtl
ret
popa
hlt
popf
sub
sbb
or
dec
mov
andl
mov
lret
test
sar
xchg
mov
dec
outsb
leave
imul
or
sub
shll
cmpsb
cmp
jp
jg
mov
jp
mov
inc
imul
test
lret
orb
or
jns
shlb
cs
cmpsl
cmpsb
mov
inc
popl
fists
adc
and
mov
mov
fmulp
lds
arpl
mov
sbb
jno
mov
mov
es
js
outsl
fnstenv
push
sub
inc
std
fistpll
mov
dec
xchg
or
lcall
lock
and
xor
js
add
inc
adcb
jbe
xchg
sbb
cli
sahf
loopne
inc
mov
jge
push
mov
incl
pushf
punpckhdq
or
ljmp
movsl
pop
xor
xchg
inc
sub
xor
sub
jae
sbb
pop
jns
add
fs
gs
lods
add
repz
fstps
rcrl
cmp
pop
xlat
lret
rclb
push
mov
jns
lods
movsb
int3
adc
mov
push
movsb
xorb
fisttpl
lods
bound
adc
cwtl
aas
ja
add
outsb
inc
pop
jnp
enter
add
mov
jne
mov
jecxz
pusha
js
pop
sarl
in
adc
test
icebp
insl
imul
xor
mov
cmpsl
test
imul
sub
sub
mov
enter
rcrl
mov
out
bnd
sub
mov
data16
or
enter
dec
imul
add
pop
das
xchg
mov
inc
hlt
pop
or
jns
inc
dec
call
cmp
scas
xchg
fdiv
mov
push
and
dec
xchg
test
mov
lahf
mov
test
addr16
lock
jmp
mov
inc
xor
imul
add
jp
jge
cwtl
shll
xchg
rolb
mov
sub
sti
ss
pop
sbb
scas
cs
lods
xorl
insb
and
les
and
mov
xchg
sbb
mov
mov
mov
mov
rorl
cmp
shll
jae
int
push
fistl
dec
or
mov
and
sub
jl
sub
adc
jge
jl
push
aas
pop
imul
xchg
and
dec
inc
jo
jp
adc
jns
jg
xor
cwtl
cmp
leave
mov
or
ret
mov
imul
mov
jmp
inc
cld
xchg
inc
jno
xchg
jl
and
and
or
dec
pop
push
xor
mov
pop
lret
mov
pop
push
repnz
movsl
pop
cs
mov
mov
repz
jmp
push
cld
dec
cmp
loope
mov
stos
xor
insb
mov
scas
mov
xchg
push
xchg
repnz
jo
xchg
sbb
and
push
fisttpl
lcall
fisttpll
mov
mov
mov
sbb
push
ds
mov
push
rcl
mov
test
and
sbb
mov
sub
sti
fcos
lea
xchg
jp
das
pop
stc
dec
andb
fcoml
xchg
inc
imul
xchg
fnsave
aad
xchg
add
loop
lret
and
cmp
pop
scas
cmp
jmp
aas
je
xchg
add
fcomps
dec
sar
xchg
outsl
imul
xchg
jle
mov
nop
jo
test
sahf
cltd
js
es
xlat
cmpl
test
mov
cmpsb
out
mov
push
jmp
mov
ja
mulb
push
popf
cmc
adc
mov
dec
imul
and
seta
ja
adc
cmp
mov
int
je
shrl
fistpll
addr16
loop
mov
inc
push
sub
adc
jle
mov
out
sub
push
dec
or
xor
jno
xchg
cmp
mov
scas
test
push
dec
and
inc
mov
inc
sub
and
sbb
inc
faddp
pop
filds
nop
xorl
fst
aad
sub
inc
mov
fbld
add
insb
testl
cmp
sub
inc
pushf
jno
jne
js
sub
stos
fwait
mov
cmp
incb
sbb
and
and
mov
fwait
xchg
push
mov
fbld
fstpl
sub
add
xor
xor
std
loope
push
pop
les
inc
adc
cmp
jl
test
push
xchg
jb
popf
adc
sub
fsubr
pushf
mov
jmp
xchg
jno
test
imul
mov
dec
fdivrp
jb
rolb
add
cmc
sub
adc
in
out
jl
icebp
in
outsb
or
xor
xlat
jg
stos
sti
inc
add
dec
mov
cmp
frstor
sbb
ljmp
stc
or
je
mov
test
push
dec
xchg
xchg
cld
hlt
bound
push
rclb
mov
cmpsl
mov
dec
fcompl
dec
jbe
aad
mov
xchg
lds
paddsb
add
xor
cltd
test
out
ljmp
adc
cmpsl
out
jmp
xchg
mov
add
xchg
scas
mov
adc
dec
in
fadd
aaa
shlb
ds
push
inc
xor
je
cli
mov
adc
imul
shlb
fs
icebp
fwait
daa
lods
push
cmp
popa
mov
cltd
adc
push
loop
cmc
repnz
adc
xchg
pop
push
aaa
push
rcll
fdivrl
inc
mov
mov
pop
adc
mov
aas
test
pop
adc
adc
xchg
clc
cmp
add
sbb
fstpl
mov
rcll
loop
mov
jge
jne
cmp
xchg
ljmp
pusha
or
cmp
inc
ja
adc
je
fnstsw
sub
or
pop
lods
and
xchg
mov
adc
ficomps
arpl
iret
je
pop
and
mov
test
addr16
xor
aaa
push
cmpsl
es
jns
sti
mov
adc
fucomip
aad
fildl
es
mov
add
mov
test
inc
loope
addr16
stc
cmpb
popa
jnp
out
addr16
in
out
inc
addr16
dec
movsb
lret
push
stos
daa
xchg
shll
xchg
xchg
aas
subl
ja
pusha
nop
mov
add
xorb
mov
roll
xchg
push
xor
cmc
or
jns
mov
xchg
test
sbb
nop
int3
std
cmp
add
sbb
add
pop
jmp
movb
pusha
rorl
ljmp
dec
dec
cmp
push
push
das
pop
stos
outsb
xchg
mov
fdivrl
mov
insb
xor
mov
sub
loop
arpl
add
enter
mov
test
push
and
scas
add
js
in
call
repz
mov
jmp
cmp
push
in
jl
ret
mov
in
sbb
ret
fdivl
icebp
loopne
addr16
out
fwait
jb
dec
push
push
roll
cwtl
xor
fs
bound
mov
popf
mov
nop
loopne
xchg
popf
std
pop
cmpsl
shl
std
sti
inc
sarl
das
and
push
inc
fnstcw
ret
fidivrl
daa
movsb
jl
push
sbb
nop
mov
cli
mov
into
loop
cmp
xchg
scas
push
rorb
xchg
lret
mov
pushf
push
rcrb
add
push
sub
int
inc
imul
xchg
dec
mov
mov
push
fsub
push
ss
jg
sbb
pop
mov
test
dec
fstpt
fstpl
lds
add
mov
cld
fidivl
xor
into
mov
adc
push
xchg
sub
cmc
dec
dec
mov
out
pusha
dec
dec
xchg
add
jno
cmp
movsb
vdivss
test
leave
gs
mov
filds
mov
xor
cmp
into
dec
leave
je
imul
mov
lcall
and
fwait
rcrl
jecxz
jae
mov
movsb
add
push
cmpb
out
mov
add
and
ficomps
jp
mov
sarl
lock
sbb
insb
push
xchg
jmp
movsb
add
and
and
xorl
pop
xor
clc
xchg
or
adc
testl
popa
dec
jo
out
and
inc
push
sub
xchg
sbb
mov
negl
mov
or
in
loop
js
jl
add
pop
adc
cmp
es
pop
jne
dec
cli
or
lds
xchg
imul
xchg
std
ja
dec
in
xor
movsb
cmp
mov
mov
popa
cli
imul
push
scas
add
aas
arpl
inc
pop
inc
xchg
int
aad
adc
daa
cld
jbe
adc
lea
sbb
fbstp
jno
cs
xor
fcomps
pop
sbb
popf
xor
in
cltd
je
cmp
dec
pop
or
push
test
inc
xor
dec
jp
xor
lds
mov
hlt
js
cmp
jnp
movsb
dec
divl
push
and
ja
xchg
dec
ljmp
dec
imul
add
repz
dec
and
jle
mov
push
push
dec
dec
hlt
test
sub
enter
mov
sub
addb
data16
jl
incl
or
jns
and
mov
movsl
std
or
and
and
xor
sub
out
jmp
xchg
pop
lods
addr16
dec
repnz
in
ret
pop
fmuls
repnz
ljmp
jle
daa
fistps
cmp
mov
sbb
xchg
in
mov
fwait
pop
mov
mov
in
fwait
and
lret
mov
adc
push
xlat
cmc
std
pop
faddl
xlat
adc
dec
ficoml
pop
mov
scas
mov
div
cmp
push
clc
fldcw
out
xchg
mov
mov
jae
and
and
adc
pop
out
scas
mov
lea
cld
xor
inc
icebp
sarb
push
lahf
int
push
jmp
adc
cmp
test
pushf
mov
movsb
mov
sbb
sbb
leave
sub
jle
push
in
ss
ss
sti
loop
dec
arpl
insb
divl
rolb
push
inc
xor
loop
push
pop
mov
add
add
in
adc
fs
xor
dec
pushl
es
xor
sub
jmp
mov
outsl
sub
fstpt
pop
inc
imul
xchg
fisubs
fiadds
jns
stc
aaa
mov
xchg
push
adc
mov
stos
repnz
mov
incb
or
adc
adc
add
push
and
xchg
cmc
push
negb
mov
enter
testb
cmp
adc
push
xchg
testb
lcall
jmp
out
sbb
aaa
mov
gs
sub
pop
and
pop
adc
xor
add
ljmp
negl
aam
int
xchg
into
fidivl
nop
das
jns
out
mov
ja
adcl
and
xchg
loope
lods
jl
jae
ret
lea
outsb
jae
gs
adc
mov
ds
sub
repnz
xchg
cs
cltd
shrb
mov
xchg
imul
or
push
and
jno,pn
dec
xchg
rclb
sbb
push
jbe
mov
pop
xchg
mov
jmp
pop
jp
mov
mov
cli
xchg
shl
adc
jmp
fisttpll
adcb
test
xchg
inc
pop
push
mov
mov
cmp
pop
sub
shr
andw
or
cwtl
dec
push
mov
dec
add
sub
pop
pop
mov
or
xchg
fdivrl
arpl
mov
pop
and
xor
push
aad
pushf
ja
lods
inc
cltd
mov
dec
push
jb
mov
pushf
sbb
and
cld
loop
test
dec
adc
lods
xorb
sahf
pop
jnp
cli
add
ret
cmpl
scas
mov
mov
push
sub
cmp
cmpsl
into
push
movsb
add
sbbb
lret
mov
jl
sbb
pop
push
pop
lods
inc
add
bound
js
add
mov
or
xor
xor
mov
mov
in
push
int3
into
sub
dec
xchg
sub
pop
cmpsb
out
imul
adc
ss
add
push
fidivs
jnp
jne
fcoml
mov
xor
ljmp
repnz
xchg
lea
test
cli
fwait
xor
imul
lcall
rorb
adcb
xchg
shlb
pop
xchg
fsubs
cmp
loopne
sub
xor
repnz
test
data16
fisttps
dec
flds
jmp
lahf
lods
stos
and
jecxz
cmp
pop
lret
jp
push
je
xchg
ds
clc
and
cmp
cmp
mov
inc
popa
ficoml
jecxz
lods
xor
in
cltd
xchg
and
xchg
test
in
std
rcrb
popf
push
stos
stos
cmpsb
shl
rcrl
in
fcompl
clc
pop
and
push
sti
jmp
fwait
jl
sbb
inc
or
dec
jo
cs
pop
xchg
xchg
rcrl
inc
push
pop
xor
mov
sub
frstor
stc
loop
fnsave
mov
das
pop
outsl
ror
out
jne
mov
sub
inc
lock
xchg
inc
std
mov
lcall
fisttpll
push
out
adc
xchg
or
adc
add
or
sbbl
daa
in
test
dec
lea
in
outsb
adc
cltd
lret
pop
xor
in
mov
or
jae
adc
cld
test
es
xlat
inc
or
jb
inc
das
ja
mov
jmp
mov
push
bound
test
fmull
int3
sbb
or
imul
jle
jl
or
push
lock
scas
mov
sub
and
loopne
test
jns
mov
or
and
xor
lea
lods
loope
cmp
jae
stos
pop
xchg
ss
dec
sub
cmp
fwait
mov
or
xor
fdivrp
cmpsb
lds
pop
xor
pop
mov
test
repnz
fists
in
aam
add
roll
inc
mov
cmpsb
cmp
adc
out
je
inc
push
mov
cmp
add
lret
fildl
cmp
sbb
outsb
xor
sub
xchg
mov
dec
dec
dec
loopne
mov
mov
into
je
sbb
mov
jp
xor
mov
jge
das
inc
test
mov
mov
xchg
jnp
cmp
lret
mov
pop
mov
sub
into
aas
pop
clc
add
test
mov
subb
cmp
das
lock
pusha
sbb
mov
and
sbbb
pop
incb
sub
inc
stos
sub
pop
or
es
push
lods
adc
pop
xor
mov
push
sbb
inc
inc
sub
inc
lods
lret
mov
push
lcall
stos
fstp
icebp
xchg
xor
inc
in
ss
jnp
jbe
cwtl
enter
sbb
xchg
repz
jnp
out
or
sbb
lahf
into
aas
xchg
or
iret
xor
or
add
jecxz
mov
fcmove
push
mov
dec
xchg
pop
and
pop
jae
mov
mov
adc
push
jne
jns
or
xor
dec
daa
jo
push
fbld
gs
test
add
mov
arpl
jne
sub
add
mov
insb
ret
xchg
das
dec
push
cwtl
lea
xchg
int3
mov
mov
fsubs
icebp
in
pusha
hlt
push
fdivrl
cld
mov
and
pop
jl
arpl
je
gs
cltd
or
jbe
movb
std
inc
jg
lea
jp
push
sbb
pop
stc
jmp
inc
arpl
testl
mov
jl
scas
outsb
sub
popf
and
mov
outsb
cmp
push
fs
inc
sarb
dec
mov
pop
fs
in
cmp
out
push
lods
out
cmp
lret
out
into
adc
or
ret
popf
mov
pop
call
mov
xchg
xchg
cmp
push
pop
divl
jp
dec
ret
imul
mov
xchg
nop
cmc
mov
inc
xchg
stos
xor
push
push
xchg
int3
mov
aam
loopne
inc
push
int
out
ds
cmpsb
fistl
out
xor
push
aas
data16
push
cli
xchg
jmp
shrb
insb
or
fisubl
pop
push
dec
push
sbb
pop
lret
mov
movsb
mov
lds
adc
inc
scas
cmpsl
fldt
cli
xor
jp
jbe
outsb
fwait
mul
fldt
pop
add
outsl
stos
sbb
cmp
add
mov
xor
les
sub
pushf
lock
in
and
aad
sub
fwait
pop
cs
and
sub
jae
mov
cmp
adc
xchg
and
repz
mov
sbbb
fwait
xchg
dec
inc
jae
ds
sbb
ljmp
pop
xor
scas
mov
dec
shlb
mov
mov
cmp
push
scas
xor
mov
out
pop
jle
dec
lods
or
stc
inc
pop
outsl
inc
pop
sub
mov
sub
call
fdivrs
mull
decb
and
ret
sbb
adc
imul
pop
push
sahf
push
or
leave
test
pop
and
test
mov
xor
rcll
jp
in
dec
cwtl
jae
push
lods
adcl
aas
mov
call
lret
inc
jg
jg
mov
pushf
data16
mov
popa
insl
jnp
pop
sbb
idivb
and
hlt
xor
xor
push
jecxz
scas
int3
dec
cmp
stos
or
add
jb
mov
in
ret
dec
or
inc
add
lcall
js
mov
out
push
inc
mov
lret
inc
mov
aam
mov
aas
shlb
scas
push
arpl
inc
push
aaa
lret
ljmp
jne
mov
aaa
ljmp
out
mov
adc
es
sahf
outsl
cmp
enter
push
int
mov
push
cmp
or
jle
pop
or
sub
test
in
dec
pusha
pop
or
push
cmp
or
mov
pop
jnp
sub
es
and
test
adc
scas
cmpsl
jge
les
mov
sbb
pop
jno
nop
js
dec
xor
arpl
dec
cmpsl
mov
shr
pop
inc
hlt
lret
imul
lods
aas
and
or
adc
push
test
pop
dec
iret
lods
lods
sbb
jge
loop
popf
cmp
inc
iret
mov
cwtl
inc
inc
push
scas
push
or
fld
or
xchg
negb
xor
lcall
mov
add
or
or
sbb
cld
div
loope
push
repz
pop
movsl
mov
popf
push
xchg
mov
lds
mov
out
into
add
cld
adc
aam
in
cmpsb
mov
push
cmp
adc
shll
cmp
aaa
cmpsl
clc
push
or
adc
fiaddl
repnz
adcl
xchg
inc
dec
xorb
pop
add
call
call
and
lea
mov
sbb
and
mov
testl
rclb
and
dec
dec
sub
mov
and
movsl
ret
sub
sbb
scas
subl
adc
test
mov
cmovl
jmp
jne
aaa
cmp
loopne
and
ss
sbb
sub
adc
mov
stos
pushf
jno
fldenv
cmc
push
cmp
clc
loop
add
out
dec
mov
mov
adcb
ss
xor
fistl
sub
into
and
add
jp
fimull
push
push
insb
enter
cmp
arpl
addr16
movups
in
imul
test
sbb
insl
pop
pop
xor
push
leave
mov
inc
adc
shl
adc
xor
or
add
xor
arpl
push
insl
into
lahf
leave
out
cltd
stc
inc
push
mov
mov
fdivrp
push
dec
inc
inc
sbb
popa
sbb
add
lock
addr16
sub
pop
test
mov
xor
dec
push
and
mov
adc
data16
scas
incb
sbb
push
lds
xchg
push
xor
arpl
lds
mov
cmpsb
sbb
rclb
std
sub
cmp
daa
pop
addps
jno
mov
stc
mov
xchg
mov
sub
outsl
es
add
test
test
mov
arpl
push
pusha
lea
inc
popa
adcl
stc
xchg
or
add
and
ror
rcrb
addb
pop
out
pop
push
test
and
mov
xlat
lret
cmp
push
xchg
mov
add
mov
bound
pop
mov
in
lods
int
xlat
sub
sub
nop
sbb
ja
or
hlt
jae
pusha
add
push
aam
xchg
xor
cmpsl
mov
cmp
pop
jge
int
test
inc
aas
dec
in
jbe
mov
insl
mov
rcll
adc
ret
and
out
fs
scas
lods
scas
decb
mov
loop
fcoml
roll
insb
inc
ficomps
dec
cwtl
and
pop
add
jnp
cmp
clc
mov
stos
bswap
mov
std
loope
push
jl
or
cli
jge
sub
aad
jmp
jae
subl
push
cwtl
cmp
addr16
mov
fs
test
push
xchg
and
idiv
out
mov
xchg
ror
addr16
xchg
mov
jo
in
sub
sarb
int3
test
sub
sbb
mov
adc
xor
stos
nop
xchg
orb
xor
ljmp
or
pop
xor
sbb
pop
lods
sub
sub
sub
inc
cli
push
pop
pop
pop
push
sbb
mov
imul
ds
and
cwtl
cmpsb
jno
insl
out
mov
in
inc
iret
cmp
std
dec
mull
mov
lods
in
add
xlat
pop
cmpsl
cmc
mov
dec
pop
xchg
mov
jmp
mov
lods
mov
leave
xor
stos
mov
scas
dec
lea
arpl
pop
and
push
outsb
xor
inc
imul
dec
stc
arpl
loopne
pop
sub
adc
xchg
shlb
xor
jl
lods
int3
int3
lea
dec
sbb
inc
jb
js
ret
dec
inc
fisubl
add
xor
stos
cmpsl
adc
jnp
mov
jmp
mov
out
xor
pop
aas
das
mov
xor
ret
push
cmp
push
cli
mov
pushf
jge
xchg
iret
popa
jne
mov
call
sbb
jl
mov
lods
fdivs
movsl
cmp
je
cmpsb
or
int
icebp
cmpsl
es
mov
xchg
cli
out
push
pushf
inc
repnz
dec
insl
cmp
pusha
das
adc
jmp
cld
or
movaps
aam
adc
xchg
call
movl
je
or
mov
movl
add
mov
xor
or
or
mov
decl
xor
add
subl
imul
movl
mov
jmp
subl
mov
xor
sub
mov
andl
mov
add
xor
or
mov
decl
mov
sub
add
movl
cmpl
je
cmpl
jne
pushl
push
push
call
cmpl
jne
mov
dec
mov
xor
xor
dec
mov
jmp
mov
mov
add
mov
mov
mov
xor
xor
lea
mov
xor
add
imul
mov
xor
sub
mov
add
cmp
mov
mov
jg
xor
mov
sub
add
jmp
xor
add
add
mov
mov
mov
xor
add
not
and
movsbw
jmp
jge
xor
xor
add
mov
mov
fwait
add
hlt
pop
bound
dec
dec
dec
repnz
mov
outsb
mov
sbb
mov
adc
mov
sti
aad
dec
inc
popa
mov
pushf
xchg
stc
mov
int3
and
mov
adc
lea
mov
addr16
mov
sbb
xchg
push
cli
in
in
shlb
adcb
mov
and
push
lea
ss
jbe
and
sub
or
inc
push
push
jbe
lock
lcall
jecxz
in
sub
sub
cld
inc
in
and
ja
and
js
js
ret
cmpsl
adc
mov
pop
mov
dec
mov
loope
mov
push
icebp
bound
xchg
subb
mov
dec
imul
lea
jbe
orl
xchg
jge
das
xchg
dec
xlat
into
cs
aad
jmp
test
push
mov
jle
xor
push
stos
bound
push
jae
lods
or
cltd
loopw
xlat
sti
sbb
cmp
fwait
xorb
pop
add
out
enter
insb
pop
int
loop
mov
pushl
inc
sarl
sbb
mov
mov
mov
sti
nop
cmp
outsl
mov
push
loopne
fnstcw
push
adc
jl
cld
and
push
lret
and
push
push
inc
inc
adc
and
pop
into
pop
mov
clc
jle
loope
mov
add
xchg
push
subl
bound
popf
cltd
das
mov
repnz
ds
rcl
pop
jns
add
sahf
cmp
xchg
adc
dec
cmc
add
ljmp
stos
dec
ds
fldcw
aas
ljmp
jg
jno
ret
scas
xchg
push
mov
cmp
dec
cmpsb
dec
lcall
cld
mov
mov
cmp
or
int3
sbb
cltd
cmpsl
mov
sbb
in
jle
xor
cmp
mov
or
movsb
push
inc
mov
es
shll
jns
adc
or
xlat
shl
or
and
push
test
rcr
notl
or
jns
clc
sub
jecxz
fstps
mov
and
imul
mov
es
mov
push
add
push
mov
inc
movsb
mov
imul
movsb
enter
and
test
orb
lods
popa
nop
push
xadd
xchg
sahf
lahf
fcmovnb
sub
icebp
and
inc
push
push
xor
into
aaa
imul
leave
je
mov
adc
in
roll
sbb
test
popw
and
and
sub
sub
mov
imul
daa
into
jp
fimuls
jge
jo
xor
push
pushf
and
push
cmpsb
mov
dec
or
imul
mov
jns
mov
rolb
sbb
and
jle
or
push
and
js
or
push
gs
jle
pop
and
addr16
loope
hlt
dec
mov
mov
int3
or
shl
mov
jmp
pop
and
pop
mov
pop
jae
push
sarb
idivl
push
inc
cmpsb
lcall
pusha
and
fildll
sahf
jae
pop
add
enter
jae
shlb
dec
sbb
push
andb
das
dec
pop
push
in
daa
inc
inc
and
mov
and
jle
fucomp
sahf
jmp
testl
shl
outsb
adc
andl
inc
rcl
lea
mov
cld
jl
nop
xchg
jmp
sub
dec
fadds
out
sub
jnp
fldl
jle
cmc
pop
inc
lahf
adc
loope
xor
hlt
adc
mov
dec
dec
add
enter
aad
cmp
mov
or
cmp
and
mov
stos
xor
loopne
adc
jle
mul
pop
mov
shll
mov
call
inc
inc
test
sub
ret
das
cli
ja
inc
pop
xor
shll
mov
popa
xchg
xor
jp
and
cmpsl
fcomip
or
lods
ret
inc
jl
dec
arpl
fcoml
jne
dec
pop
xchg
cli
ret
or
or
pop
fcmovnb
stos
sub
test
sub
and
leave
scas
mov
xchg
mov
xchg
out
mov
xchg
cmp
cs
push
jo
sub
call
jl
loop
cmp
imul
popf
jns
int
mov
nop
fwait
push
clc
icebp
in
dec
test
sub
roll
sbb
add
xchg
xchg
test
xchg
push
and
das
data16
mov
mov
fdivr
flds
push
fidivrs
lds
into
jne
and
adcb
into
or
mov
inc
push
inc
jo
fisttpll
inc
sahf
mov
leave
repnz
push
rcpps
lea
mov
lock
adc
addr16
sbb
sbb
mov
dec
imul
mov
in
push
mov
rclb
pop
sar
inc
fnsave
fimuls
pop
or
cltd
xchg
lock
rol
sub
sbb
sbb
subps
xchg
fwait
mov
out
sub
out
add
scas
es
pop
dec
inc
or
jmp
imul
sti
outsb
push
push
push
in
mov
addb
jle
jno
and
ret
loop
push
pop
jbe
dec
mov
scas
fists
push
in
test
sahf
iret
repz
inc
lock
mov
push
push
test
ret
adc
loop
cmp
inc
imul
push
mov
aad
iret
pop
mov
sub
mov
daa
jo
orb
jecxz
lret
jns
push
stc
std
insl
test
add
scas
cmp
inc
jno
gs
pop
jnp
lcall
ss
std
mov
roll
jb
add
pop
sbb
rcrl
push
lcall
and
lds
push
xor
or
jecxz
addr16
push
or
inc
mov
cs
stos
push
out
or
adc
push
pushw
mov
jne
dec
and
mov
shlb
out
jge
mov
js,pn
adc
mov
cmp
push
push
mov
mov
shlb
fimull
mov
in
mov
push
jnp
jecxz
xchg
pop
stos
xor
bound
fsubr
mov
mov
jns
push
int3
dec
adc
mov
mov
xor
lods
push
or
dec
cwtl
cwtl
xchg
mov
in
cmp
cltd
inc
cmp
fwait
cmp
cmpsl
or
fistpl
int
dec
mov
shlb
fcoml
insb
mov
test
sbb
add
rorb
sti
cmc
ljmp
frstor
sub
xchg
daa
pop
shlb
xchg
mov
lea
pushf
add
icebp
out
jmp
adc
mov
lock
sbb
aad
fwait
ds
push
mov
movsl
push
loopne
test
scas
les
je
testl
jb
push
test
leave
clc
popf
mov
aaa
scas
push
mov
xchg
mov
inc
jo
js
push
iret
sbb
and
and
jle
mov
jg
cwtl
mov
sub
jle
aaa
daa
roll
icebp
push
adc
cmp
or
lock
stc
je
inc
and
pop
rclb
cli
sahf
in
inc
inc
fnstenv
mov
or
stos
test
stos
push
add
pop
test
fprem
repnz
fists
fcmove
pushf
sbb
push
nop
hlt
mov
cmp
cmp
jmp
imul
in
adc
or
jno
sbb
imul
mov
jge
xchg
push
aas
cmc
imul
lret
adc
insb
jno
fwait
outsb
xor
dec
cmpl
mov
or
movsb
clc
mov
pop
or
xchg
add
mov
jg
xor
dec
test
pop
fcmovb
inc
xchg
or
out
jg
push
rorb
sbb
sbb
insl
movsb
sbb
aad
dec
dec
addr16
pop
iret
stos
and
push
mov
jbe
ret
fwait
int
outsl
lahf
ror
mov
clc
and
add
or
lods
xchg
and
pop
stos
repz
mov
mov
sti
ljmp
add
out
addl
xchg
mov
jmp
in
out
jmp
in
cmpsb
jg
adc
andl
xor
sbb
mov
jne
pop
enter
inc
lret
mov
rorb
mov
push
cmpsl
lods
push
mov
pop
sub
outsl
push
les
sahf
or
fs
cmp
sbb
loope
pop
outsl
cpuid
aas
mov
jns
jge
mov
hlt
and
fidivl
adc
lret
jecxz
push
fcomip
into
sbb
jno
ja
cmpsl
bound
xchg
xchg
lsl
repnz
cli
jo
mov
enter
outsl
sub
ss
mov
dec
or
test
push
dec
inc
mov
sbb
push
sbb
sbb
es
fisubl
pop
popf
inc
sti
mov
add
mov
shrb
pusha
sub
adc
jne
es
clc
jns
xor
loop
je
ds
mov
dec
out
repz
sarb
cltd
movsl
hlt
sbb
mov
push
scas
cmp
pushf
add
lock
ljmp
pop
lret
push
int
cmp
lods
xor
out
dec
or
lret
mov
pop
xor
int
mov
cmp
mov
rcll
jnp
push
ret
lods
jecxz
pop
dec
jp
push
push
mov
jns
mov
or
cwtl
mov
mov
sbb
and
jmp
and
lds
fsubrs
or
mov
imul
pop
rclb
or
bound
inc
sub
std
mov
scas
movl
fucomi
push
and
out
int
lock
scas
jge
mov
cltd
jp
and
mov
imul
add
arpl
jp
stos
jns
push
int
add
aaa
add
imulb
pop
bswap
hlt
popf
aas
repz
mov
nop
dec
or
cmpsl
out
inc
dec
pop
dec
loop
jle
cmp
addr16
mov
cmc
dec
jmp
mov
sub
stos
add
sahf
iret
xor
mov
test
sbb
lret
rol
lahf
lods
xchg
cmpsl
xchg
and
xchg
andl
xchg
out
pop
psubusb
and
push
lods
ret
and
sbb
mov
jns
push
iret
rclb
and
push
daa
and
sub
popf
or
sbb
xchg
in
lods
loop,pn
pop
add
pop
nop
jae
aaa
sbb
cmp
cmp
lods
les
mov
jnp
addr16
pop
out
ret
fcomps
or
cmc
pop
sbb
mov
addl
mov
pop
pop
push
mov
mov
std
jnp
jmp
jp
xchg
fsubrs
jne
xchg
fdivrl
insl
fidivrl
adc
scas
jl
inc
mov
xor
ja
xchg
adc
add
ds
add
int3
adc
jno
loope
mov
ret
in
dec
push
out
push
addl
enter
pusha
gs
loop
imul
pop
aaa
pop
sub
xchg
fwait
push
sahf
lea
lock
outsl
xor
xchg
fwait
ret
popf
in
pop
add
or
daa
rcll
hlt
xchg
enter
test
fidivrl
add
pop
jg
sub
cltd
or
cmc
xorl
inc
dec
fstps
addb
jb
in
fisubl
add
lods
subps
aad
aas
es
mov
dec
push
push
insl
in
push
cltd
inc
ret
xchg
dec
mov
rcrl
je
pop
sahf
mov
xorl
test
or
ja
loop
push
popf
enter
pop
sbb
inc
in
or
lods
sbb
xchg
pop
sub
xor
sub
shlb
les
sbb
inc
jecxz
add
or
shlb
out
scas
pop
or
jnp
iret
dec
fsubrl
push
jo
sub
add
int3
fistpl
data16
lret
mov
js
lods
in
mov
dec
call
and
stos
testl
inc
cmp
sub
int
cs
cmp
xchg
mov
fisubs
stos
bound
sbb
inc
leave
sbb
lock
cmp
jl
jo
mov
adc
add
mov
push
mov
ds
mov
xchg
test
arpl
push
fwait
addr16
test
mov
shl
jg
or
inc
jbe
push
push
xchg
xchg
out
fistpll
dec
mov
mov
mov
fimuls
sbb
inc
std
addr16
data16
mov
cli
add
ljmp
clc
or
in
mov
xchg
loop
jno
rcrl
jno
add
jp
sahf
es
iret
iret
std
adc
clc
lcall
fsts
xor
xchg
jns
stos
stos
mov
xor
rcll
shlb
inc
imul
cmp
mov
xor
cmp
cmp
jl
or
in
mov
jle
mov
jp
adc
ret
icebp
pop
test
loope
daa
outsl
dec
add
inc
daa
xorl
das
cmpsl
mov
mov
js
sbb
pop
and
sbb
mov
push
popf
sub
test
popa
mov
cltd
es
add
sbb
loope
insl
mov
outsl
outsb
mov
or
lds
fisttpll
fwait
mov
sub
data16
xor
xlat
inc
dec
dec
sti
xor
or
pop
xor
scas
cmp
adc
in
jbe
jmp
xchg
sbb
fisubrs
jne
xchg
push
jbe
clc
jmp
out
jbe
push
mov
mov
inc
inc
add
xchg
shll
insb
out
fwait
enter
cli
loopne
pop
xchg
mov
or
mov
in
lods
mov
dec
mov
xchg
popa
mov
inc
pushf
stos
testb
xor
insb
inc
ja
leave
mov
test
shll
mov
xor
clc
dec
repnz
fcoml
ljmp
dec
out
xchg
das
aam
inc
icebp
mov
push
mov
cmp
add
push
inc
xchg
cltd
outsb
lea
out
ss
inc
sarl
popa
mov
push
addb
cmpsb
imulb
insl
push
sub
jno
gs
aad
into
sub
fiaddl
xchg
push
add
jg
fwait
inc
fwait
cs
lock
sub
xor
push
lea
lods
sbb
cmpsb
lods
stos
sbb
xchg
incb
mov
outsb
test
je
inc
sahf
xor
jo
test
dec
add
push
daa
xchg
lds
bound
adc
dec
or
lahf
inc
lods
jbe
test
xchg
js
cmp
in
fldl2t
imul
and
fdivrl
xchg
hlt
sbb
js
cmpsl
ds
sbb
inc
xchg
pop
adc
xchg
add
cmp
in
jmp
sub
repz
mov
ljmp
movsl
aad
cmpl
fldl
ret
gs
mov
push
dec
notb
mov
mov
xchg
and
jo
pusha
push
dec
fs
mov
push
outsb
jl
xchg
ds
sbb
pushf
fwait
mov
out
loopne
add
ss
movsb
out
dec
mov
fwait
push
jg
fs
sbb
sbbl
add
push
out
jmp
mov
xor
sbb
or
js
ja
setne
sbb
test
fwait
push
mov
cmp
mov
outsb
ret
mov
jne
int3
fwait
lahf
mov
aad
jne
xchg
mov
pop
sub
push
cmp
sti
mov
dec
enter
xor
stos
cld
in
nop
pop
or
shrb
fsts
xor
push
stos
mov
jmp
mov
mov
jno
adc
into
fisubrs
fucomp
gs
rcr
stos
adc
push
xchg
xadd
fwait
movsl
cmp
sbb
sub
mov
sub
push
pop
jnp
push
xor
and
shll
daa
dec
pop
lcall
fwait
mov
nop
cs
pop
aaa
add
lcall
pop
fiadds
int
fdivs
add
in
mov
cmpsb
adcb
jmp
cld
xchg
xor
cmpsl
xor
xlat
fisttpll
out
xlat
clc
popa
in
or
dec
enter
push
add
in
or
jo
dec
cmp
test
notb
out
shlb
sub
out
xor
and
fbstp
jb
mov
push
outsb
mov
xlat
nop
mov
cmc
dec
scas
mov
lock
fdivl
mov
jne
fwait
xor
jle
insl
aam
or
xchg
cwtl
push
jg
je
add
push
test
inc
sbb
in
mov
mov
cwtl
cwtl
test
jecxz
sbbb
adc
jg
and
mov
mov
lahf
frstor
aaa
mov
inc
add
inc
mov
sub
ljmp
mov
mulb
mov
jge
pop
ljmp
test
insb
jo
pusha
shrl
push
sbb
dec
push
imul
fldt
jb
jp
out
ret
xchg
push
cmp
mov
pop
xchg
aaa
jecxz
lahf
pop
xor
fcomps
scas
bound
pop
or
lods
nop
inc
sbb
xchg
mov
call
mov
inc
fisttpl
mov
jl
sbb
cld
mov
add
mov
std
mov
jbe
push
push
hlt
lahf
scas
jb
call
sub
xchg
push
aam
push
xchg
fidivs
sub
mov
cltd
or
clc
pop
int
inc
jmp
pop
sbb
push
lds
loope
and
sub
out
pop
ret
out
dec
sti
inc
adc
jb
lods
inc
inc
fwait
mov
leave
mov
mov
pop
mov
pop
mov
inc
pusha
pop
hlt
cmp
enter
sbb
push
cmpsb
out
ficompl
xchg
fnstenv
or
test
or
pop
fldt
test
mov
ja
mov
mov
shll
and
pop
sub
cli
rcll
sbb
out
cld
into
call
sbb
xchg
push
aas
je
aam
inc
sbb
mov
repz
popf
aad
jmp
and
std
jne
push
cmp
pop
push
or
lcall
jnp
cmp
test
popf
ljmp
xor
jmp
push
xchg
and
push
nop
and
push
es
pop
pop
pop
rorl
repz
sbb
ficoms
xchg
dec
rclb
jbe
cld
shr
sbb
sahf
out
jno
adc
inc
hlt
je
fidivrs
cmc
leave
sub
int3
rcrl
and
and
or
dec
lods
movsb
jp
rorb
pop
xlat
dec
popl
mov
pop
sub
xchg
xor
mov
cwtl
sahf
mov
insb
imul
push
mov
ljmp
lret
repz
shrb
mov
adcb
lods
push
in
jae
repz
xchg
adc
int3
inc
pop
push
jae
lds
rolb
bound
ret
inc
dec
enter
filds
dec
inc
jge
idiv
add
push
lds
pop
jne
mov
aaa
fisubs
inc
and
pop
enter
shrb
mov
sub
and
loope
jns
mov
sbb
sbbb
lret
dec
fcomps
jno
pop
fnstenv
ret
pop
leave
fistpll
test
ficomps
xchg
fs
xchg
fs
call
aad
jl
int3
int
clc
ss
push
adc
mov
scas
gs
xchg
pop
ret
fisubl
push
sub
push
dec
outsl
ficoms
sbb
fisubs
sbbl
cmc
inc
inc
cmpsb
out
dec
mov
call
mov
xchg
add
inc
shr
movq
mov
xor
test
sbb
mov
popa
subb
mov
out
rcl
mov
sub
jmp
xchg
ds
inc
push
nop
sbb
imul
movsb
lret
mov
cmp
push
aad
pop
leave
cmp
push
jmp
gs
inc
movsb
jns
dec
imul
pop
shlb
mov
sub
sahf
push
jmp
loop
dec
iret
ficoml
jo
icebp
adc
xchg
dec
cmpsl
xor
imul
sbb
inc
cmpsl
or
jns
jae
jns
lret
pop
jg
shl
pop
insb
into
into
test
inc
lea
jmp
and
xchg
mov
push
mov
test
insb
mov
add
lcall
cmpsl
ja
push
into
scas
push
xor
or
xchg
push
mov
cmp
and
inc
in
push
insb
std
fs
adc
cmpb
push
idiv
bound
icebp
lods
or
cmpsl
add
movsb
sbb
popa
jle
inc
add
xchg
inc
in
push
ljmp
arpl
push
out
xor
adc
xchg
test
jg
testl
or
cmp
or
mov
es
xchg
andps
push
scas
add
lods
jg
lret
mov
imul
repnz
inc
dec
js
pop
stos
push
loope
movsb
pop
inc
ds
lahf
or
frstor
dec
mov
shlb
ficoms
in
pop
xor
fsubrs
push
and
rol
ss
and
xlat
xor
mov
dec
add
inc
iret
push
xor
pop
pop
xchg
push
adc
fadds
mov
pop
ret
sub
aad
leave
fdivrs
or
lods
loope
scas
or
aas
xlat
shlb
xchg
shll
cmpsb
scas
inc
and
fildl
hlt
icebp
mov
aad
loop
insb
inc
push
lret
nop
call
dec
imul
sub
pop
push
sub
aad
lcall
mov
sar
js
repz
sub
jge
xchg
jae
or
xchg
rclb
in
mov
xor
or
pushf
push
adc
jno
data16
scas
xchg
jl
inc
mov
jp
sbbl
mov
inc
mov
fnstenv
add
cmp
push
ret
inc
mov
push
lahf
ret
call
int3
loope
mov
cmp
adc
fs
sub
jg
cwtl
std
push
hlt
xchg
roll
sbb
addr16
pop
xchg
insl
mov
sti
inc
or
imul
es
pop
scas
jmp
mov
imull
int3
mov
xchg
cmp
bound
or
popf
jl
out
aas
mov
shrb
in
or
ja
movsl
inc
pop
in
arpl
int3
sbbb
es
jae
cltd
pop
int
hlt
movsb
xchg
cmc
push
ljmp
xchg
and
andl
int3
xchg
cmp
pop
pop
inc
pop
cmp
movsb
faddl
adc
cltd
outsb
mov
xchg
pop
mov
jl
dec
lea
mov
or
dec
int3
mov
leave
test
push
push
insl
dec
andl
cmp
imul
jne
popa
pop
ss
scas
or
pop
roll
xor
out
sti
adc
adc
push
lods
stc
fbld
sub
inc
mov
jg
popf
adc
aad
add
jae
aad
mov
push
cmp
jp
jo
outsl
std
xlat
xchg
ss
inc
popf
cmp
jecxz
cmpsb
jecxz
outsl
adc
fidivl
ja
dec
jmp
jmp
flds
out
and
xor
jno
inc
int
inc
addb
mov
jl
cmp
pop
lock
mov
cmp
iret
fdivrl
jae
inc
repnz
mov
cmp
pushf
ja
dec
mov
mov
jmp
jp
xor
mov
inc
pop
fbld
add
aad
sub
jg
cltd
popa
lcall
sub
xor
and
push
addr16
cmpsb
fiadds
mov
aaa
ds
decl
jbe
mov
xchg
fldt
xchg
cmp
jbe
je
xor
dec
push
addl
cmp
jns
sub
movsl
jae
nop
mov
icebp
lcall
in
loope
adc
pop
out
dec
adc
jg
jae
jo
fwait
das
mov
and
test
sti
add
mov
lods
push
mov
rorb
inc
pop
fwait
xchg
sub
add
pop
in
out
mov
cli
pop
sahf
addl
pop
dec
or
pop
addr16
insb
sar
mov
or
or
stc
xchg
jecxz
fcoml
hlt
or
fstpl
xchg
and
mov
movsb
lret
sbb
mov
mov
xor
dec
cmp
sahf
adc
ljmp
xchg
aas
ss
mov
or
popf
arpl
mov
xchg
push
mov
movsb
in
arpl
mov
add
mov
dec
testb
cmp
jl
mov
ds
sbb
push
sbb
cli
jmp
adc
int
xchg
push
push
das
push
gs
sahf
mov
or
push
jnp
inc
xchg
mov
and
adcl
in
scas
ret
into
cmp
gs
or
shl
jae
mov
mov
or
adc
sbb
pop
sub
rcrb
rcrb
xchg
and
inc
in
sbb
mov
push
and
insb
out
rorl
xchg
insb
xor
lret
jnp
loopne
jecxz
dec
jb
fisttpll
push
cli
cli
popa
jmp
stos
imul
fimuls
mov
adc
mov
repz
jbe
cmp
cmp
mov
scas
bound
adc
inc
stos
imul
cmpsb
mov
dec
mov
cmc
or
xor
mov
sti
xchg
xchg
ljmp
add
in
adc
add
filds
mov
cli
jecxz
push
push
sub
enter
or
inc
dec
sub
mov
addr16
data16
test
cmovae
adc
imul
jo
call
gs
aas
imul
jmp
xor
adc
lock
xor
mov
push
clc
in
cmp
or
mulb
cmc
fistl
lahf
sub
xchg
pop
int3
mov
scas
xlat
add
popa
push
mov
pop
ljmp
cmp
fwait
dec
cmp
lahf
jns
cmp
dec
test
and
roll
shll
bound
out
push
cpuid
or
test
cmp
adc
out
ja
mov
sub
pop
push
sbb
xchg
jbe
loop
dec
imul
xor
xor
fistpll
mov
and
add
xor
enter
out
repnz
pusha
mov
fdivl
add
xchg
rol
xchg
ja
test
lea
movsl
jae
idivl
scas
xor
testl
adc
or
repz
jmp
sub
leave
or
jp
mov
inc
push
popf
repnz
adc
xchg
repnz
push
xor
ffree
mov
aad
add
pop
xchg
imul
xchg
xor
gs
dec
jb
fistl
cmp
or
dec
or
setb
das
sbb
xchg
xchg
aad
loopne
in
fadd
dec
out
in
add
inc
cmc
daa
lds
mov
leave
pop
xor
icebp
out
cmp
in
stos
js
shl
iret
clc
insl
test
cmpsl
movsl
xchg
test
mov
aas
out
xchg
addr16
or
jge
adc
jp
fisubrl
cmp
mov
pushf
adc
pushf
jno
fdivl
add
xor
sbbb
push
dec
lahf
pop
dec
fisttpll
push
icebp
fsubrs
outsl
sbb
pusha
mov
inc
sbb
sahf
pop
adc
idivb
push
mov
dec
cli
sub
lahf
pop
je
sbb
cmpsl
out
divl
data16
imulb
or
jo
and
mov
ljmp
ljmp
repnz
cmp
shl
test
jo
sti
xchg
int3
mov
xchg
jge
pop
popa
dec
and
fstpt
sub
test
mov
sti
ret
in
push
loope
mov
outsb
sbb
mov
pop
es
repz
jmp
jns
shlb
clc
and
and
sarb
fcomps
aam
cld
xchg
cli
testl
mov
decb
imul
arpl
stos
enter
and
add
adc
andl
mov
xchg
and
xchg
push
lds
push
push
xchg
insb
adc
in
imul
notl
or
scas
outsl
movl
xor
sti
and
push
or
mov
mov
pop
inc
mov
rcr
addr16
add
dec
cmp
pop
jb
iret
shlb
mov
adc
sbb
shr
push
add
push
and
fimull
scas
movsl
lea
jmp
pop
xchg
cmc
insb
lret
arpl
cmp
xchg
pop
scas
ret
cmp
fnstenv
iret
adc
clc
mov
inc
repnz
cmp
mov
push
dec
in
mov
sub
enter
inc
flds
mov
jbe
ljmp
mov
scas
mov
cmp
sbb
scas
adc
arpl
cmp
stc
jo
shl
outsb
icebp
xor
add
xor
dec
shrl
mov
mov
pop
push
testl
dec
mov
inc
shr
dec
pop
dec
std
push
clc
add
jae
sbb
or
ja
mov
pop
mov
lret
pop
arpl
cmp
sub
xchg
aad
fsubrl
push
cmpsb
movsl
jge
cmp
inc
aam
xor
xchg
push
mov
insb
or
add
sbb
and
imulb
ret
jmp
cmp
fs
sbb
aad
int3
insb
neg
test
std
dec
aas
xchg
pop
pusha
mov
icebp
les
jbe
test
lret
jp
dec
cmp
insb
call
cmc
adc
scas
add
inc
mov
icebp
ret
pop
mov
mov
dec
and
fwait
out
mov
testl
mov
and
bound
mov
popf
sbb
insl
push
rol
pop
fisttps
enter
jnp
pop
faddl
jnp
mov
sti
pop
mov
fwait
and
jecxz
adc
cmc
pop
mov
out
xor
scas
sahf
in
sbb
pushf
aaa
int3
mov
push
shl
hlt
inc
or
push
js
gs
and
mov
cltd
je
adc
add
pop
xchg
mov
pop
divl
pop
jl
sbb
dec
pop
inc
fsts
add
sub
mov
xor
mov
cmp
jne
movsbw
mov
sub
mov
xor
mov
cmp
je
mov
xor
mov
sub
add
jmp
mov
mov
mov
lea
mov
mov
mov
xor
add
mov
mov
mov
xor
add
pop
cmp
jne
mov
xor
mov
add
imul
mov
pushl
jmp
mov
add
mov
mov
mov
movsbw
mov
sub
mov
xor
mov
cmp
jne
mov
mov
mov
jmp
mov
cmp
jne
push
pushl
pushl
pushl
pushl
call
pop
pop
leave
ret
push
mov
sub
andl
mov
inc
mov
cmpl
jne
pushl
pushl
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
adc
push
movl
cmpl
je
cmpl
jne
push
call
xor
xor
dec
mov
jmp
movzwl
sub
mov
push
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
push
pushl
pushl
pushl
push
pushl
push
push
call
jmp
and
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
or
mov
push
and
mov
add
pop
addl
push
call
push
andl
push
adcl
push
xorl
push
push
addl
push
push
call
xorl
push
addl
push
andl
push
notl
push
orl
push
push
call
dec
movl
jne
mov
mov
mov
cmp
movl
jne
orl
movl
addl
pushl
sbbl
pushl
pushl
call
movl
cmpl
je
cmpl
jne
pushl
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
andl
mov
inc
mov
cmpl
jne
push
pushl
push
push
pushl
call
cmpl
jb
mov
sub
mov
and
mov
or
mov
movl
lea
xor
mov
sbb
lea
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jb
sbb
mov
andl
mov
inc
mov
cmpl
jne
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
and
mov
sub
mov
mov
mov
not
mov
xor
movzbl
add
mov
adcl
add
movl
mov
mov
mov
movl
cmp
jne
andl
xor
or
inc
mov
cmpl
jne
pushl
call
cmpl
jb
mov
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movl
mov
mov
mov
xor
xor
add
mov
xor
xor
add
lea
cmp
ja
mov
xor
lea
push
mov
xor
lea
push
mov
pushl
call
mov
xor
lea
mov
mov
xor
xor
add
mov
xor
lea
cmp
jbe
mov
mov
mov
mov
mov
mov
mov
sub
xor
mov
mov
mov
cmp
jne
lea
mov
lea
mov
mov
test
je
mov
mov
lea
jmp
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
pushl
mov
pushl
add
mov
mov
pushl
call
mov
mov
mov
jmp
mov
mov
xor
add
cmp
jne
mov
mov
mov
xor
add
cmp
jne
push
mov
xor
add
push
push
pushl
pushl
call
pushl
pushl
call
mov
xor
add
mov
mov
xor
add
mov
lea
mov
lea
mov
mov
test
je
movl
movl
movl
movl
call
mov
mov
lea
push
pushl
call
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
or
push
push
and
push
inc
mov
xor
mov
add
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
push
pushl
push
call
jmp
mov
sub
mov
sbb
mov
mov
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jb
movl
cmpl
je
cmpl
jne
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
inc
mov
mov
movl
sbbl
mov
andl
mov
inc
mov
cmpl
jne
push
pushl
pushl
pushl
call
cmpl
jne
xor
xor
inc
mov
cmpl
jb
xor
andl
add
mov
sbb
mov
sbbl
mov
add
mov
mov
sbbl
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
jmp
and
push
pop
sub
add
movl
mov
movl
or
mov
xorl
mov
sbbl
mov
mov
movl
cmpl
je
cmpl
jne
pushl
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
jmp
mov
orl
xor
add
mov
lea
mov
xorl
mov
xorl
xor
add
adcl
mov
lea
adcl
push
adcl
mov
subl
xor
addl
add
xorl
push
movl
mov
andl
push
pushl
call
sub
mov
adc
mov
xorl
mov
mov
adcl
xor
addl
mov
add
movl
jmp
andl
mov
inc
mov
cmpl
jne
push
push
push
call
cmpl
jb
andl
xor
add
inc
mov
cmpl
jne
pushl
push
push
call
cmpl
jb
adc
lea
sbbl
mov
mov
mov
sub
sub
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
call
jmp
sub
xor
mov
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
movzwl
sbb
mov
or
mov
mov
movl
mov
movl
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
ja
mov
mov
mov
sub
xor
xor
add
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
mov
mov
movl
movl
mov
mov
xor
add
jmp
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
jmp
cli
jl
popa
fs
repz
push
and
fsts
bound
pop
bound
xlat
fldenv
or
mov
mov
cmpsb
or
das
or
in
mov
les
cld
es
sbb
adc
inc
shlb
inc
cs
dec
xlat
sbb
das
std
mov
insl
flds
mov
inc
sub
push
rclb
mov
or
popf
imul
pop
cmp
xchg
jmp
outsb
pop
mov
adc
loope
and
out
ror
dec
pushf
mov
jge
shrb
mov
pop
cltd
insb
push
int3
add
jne
inc
movsl
sti
idiv
fiaddl
insl
jb
lods
fidivrl
cwtl
mov
inc
in
out
pop
mov
ss
lods
data16
mov
xchg
push
daa
fs
pop
out
leave
shl
push
add
jne
cld
pop
scas
mov
push
push
mov
mov
push
aam
sbb
jl
test
clc
mov
fninit
jo
lds
inc
or
xor
cli
jo
mov
xor
jge
dec
push
jb
imul
sub
imul
in
sub
mov
sti
mov
imul
cmpsb
loope
jl
cld
testb
pop
inc
mov
and
test
mov
loope
xor
inc
cli
xor
mov
pop
and
loopne
movsl
add
mov
push
ljmp
adc
cmpsb
out
mov
jle,pt
shl
mov
xchg
mov
sub
jb
push
out
bound
sub
pop
pop
les
adc
cmp
enter
cltd
sti
movsb
mov
loop
mov
dec
adc
loop
out
push
jne
mov
push
inc
data16
out
pop
adc
std
test
shrb
int
cs
add
insl
hlt
mov
outsl
cmp
and
jl
mov
aad
fisttpl
repz
jp
mov
jge
mov
scas
mov
lcall
adc
inc
fs
std
cs
xchg
out
jle
addr16
mov
sbb
xorl
add
shr
cli
rclb
imul
es
sub
cmp
pop
imul
ret
sbb
fwait
push
popa
sub
sub
loop
ficomps
rcrl
inc
mov
dec
daa
lock
cmp
jns
movsb
ret
xor
xchg
clc
lahf
or
insb
mov
ficoml
jnp
fcomps
rorb
arpl
cmp
mov
loope
out
daa
add
inc
mov
pushf
test
dec
adc
lahf
ljmp
push
shl
mov
ficoml
addr16
push
loope
sbb
cli
mov
mov
iret
mov
insb
push
jp
xor
cmp
jle
dec
dec
lock
xor
add
ss
dec
pop
cmpsb
and
add
das
dec
repz
jns
mov
loope
or
hlt
add
adc
es
pop
inc
imul
iret
iret
out
cmpl
cmp
cmp
imul
mov
jo
sbb
fdivp
xchg
inc
add
mov
jnp
stos
outsb
pop
push
aad
aaa
push
or
adc
or
xor
pop
dec
push
stc
sbb
mov
sub
cmp
fnsave
das
stos
and
xor
cmpsb
or
and
inc
pop
and
cmp
stos
and
and
out
inc
insl
sub
aaa
jecxz
mov
dec
jo
cld
xchg
subl
out
jne
js
mov
jno
into
pushf
in
push
dec
sub
xchg
jbe
sub
daa
adc
add
iret
aaa
adc
out
fs
cmp
out
sbb
sbb
in
scas
sahf
adc
push
popf
aas
jo
loop
add
iret
adc
inc
push
loopne
push
fnsave
ljmp
pop
gs
mov
ja
sub
adc
or
xchg
sahf
mov
es
or
add
fidivrs
out
xchg
mov
loope
inc
mov
int
dec
test
pop
mov
sub
cmp
xor
pop
outsl
xlat
xchg
stos
mov
mov
pop
push
mov
push
mov
imul
fcomps
and
into
loopne
repnz
aad
push
fcompl
sbbl
into
adc
test
int
jecxz
xor
lret
mov
les
in
popa
fisttpl
add
test
xchg
leave
xor
outsl
vmovsd
cltd
jle
push
inc
and
lret
stos
push
lock
xchg
insb
push
cmpl
es
and
mov
or
cli
leave
rorl
fwait
cmp
lods
into
in
mov
push
cli
pop
cmp
pop
sahf
push
xchg
movsl
vpbroadcastq
adc
xor
pop
mov
lahf
pop
and
and
mov
mov
sti
cmp
jbe
lock
decb
lcall
lret
adc
ja
pop
negl
pop
call
shl
pop
ficomps
xchg
loope
cmp
mov
cltd
push
pushf
adc
cmp
imul
je
and
jne
inc
popa
stos
loop
js
rcl
mov
push
jmp
aad
bound
xchg
subl
mov
xor
imul
add
imul
call
aad
imul
call
rol
mov
test
shll
xchg
imul
cmp
and
mov
imul
or
inc
xlat
and
adc
mov
out
mov
inc
repz
fstpl
fisttps
imul
fnstsw
inc
hlt
addr16
shrl
es
ret
mov
loop
jmp
lods
dec
inc
xor
dec
loope
jns
xchg
xchg
addr16
push
setl
out
or
popf
pop
fstl
inc
loop
subb
and
mov
out
pop
dec
hlt
and
cmc
jne
add
sbb
dec
aad
sbb
push
mov
or
popf
loop
sub
lds
mov
repz
aad
mov
lods
test
test
movsl
xor
xchg
inc
adc
dec
call
push
rorl
jge
xor
and
loope
fisttpl
push
pop
lahf
adc
mov
sbb
fwait
push
movsb
ret
push
scas
pop
cmc
mov
mov
out
xlat
and
gs
jmp
mov
test
sub
dec
sub
ror
xchg
mov
fstl
inc
mov
cmp
sbb
xlat
loope
xchg
stos
inc
xor
adc
and
push
adc
repnz
cmp
sarl
cmp
cmp
dec
mov
mov
or
loop
fiadds
push
jl
pop
stc
leave
push
fildl
in
inc
jne
stos
fildll
ss
fs
aam
mov
xor
test
add
xchg
inc
mov
push
push
popw
leave
mov
dec
scas
ljmp
jno
fisttpl
cmp
out
cltd
bound
test
cmpsl
bound
mov
test
es
ror
xchg
in
js
loopne
loope
mov
xorb
cmp
loopne
test
pusha
push
cs
fdivs
inc
inc
pushl
stc
daa
fldl
mov
clc
int
xor
or
bound
fcomi
inc
pop
xor
gs
movsb
addr16
and
sbb
sbb
aam
and
repnz
ds
dec
push
cmp
and
inc
es
lock
lock
pop
mov
fisttps
mov
jmp
xor
cld
jg
fisttps
xchg
or
push
xchg
dec
jb
fldenv
xchg
sub
jl
mov
cld
push
mov
outsb
sub
outsl
xchg
test
lret
mov
pusha
es
scas
in
jns
and
cli
add
dec
inc
repz
pop
xchg
loopne
cmp
popa
add
or
xchg
cmc
jb
ret
mov
push
inc
push
push
icebp
and
out
fstpt
movsb
adc
pop
repz
jbe
jmp
lods
mov
add
fisttpll
cli
test
dec
das
outsl
lods
jo
loope
in
xchg
adcb
jge
mov
xor
push
jnp
jnp
jae
xchg
cmp
lds
and
out
inc
imul
daa
lret
xor
mov
push
movsb
xchg
loopne
subl
cld
and
add
pusha
leave
sahf
mov
in
add
repz
xchg
pop
aam
pusha
xorb
clc
jo
pop
jno
mulb
mov
jle
dec
aad
addr16
cmp
adc
fstpt
jmp
fwait
push
cmpsl
sbb
es
mov
rcrb
pop
enter
enter
or
mov
movsb
xchg
xor
sub
lods
push
mov
data16
aad
pop
int3
cmpsl
mov
bound
mov
loope
lods
fisubrs
fnstenv
dec
fcmovnu
testl
push
push
push
or
mov
std
ss
xchg
push
inc
mov
xchg
cmpsb
mov
lret
inc
and
jmp
ret
notw
dec
sti
lret
sub
sbb
mov
dec
icebp
pop
add
xor
mov
jo
les
dec
xlat
in
iret
xchg
aad
push
or
adc
pusha
fldcw
fs
pop
cmp
push
xor
gs
add
xor
cmp
negl
fbld
mov
xchg
push
roll
out
sub
dec
mov
movsb
mov
js
push
inc
xor
xchg
cltd
rcll
das
stc
jne
or
addr16
push
mov
jae
add
push
xlat
or
push
push
xchg
dec
fstp
xchg
int
fucomip
pushf
movsl
fdiv
lods
mov
dec
mov
aas
in
and
inc
stos
jno
add
mov
cmp
dec
push
sahf
adcl
jo
pop
mov
xor
push
jno
out
iret
test
push
imul
cmc
jae
xor
hlt
lock
inc
shll
mov
jne
rolb
inc
dec
add
mov
xchg
lea
icebp
outsl
in
pop
test
push
ret
add
movsw
sub
and
divb
fcmovbe
jns
pop
cmp
and
ds
lret
mov
stos
xchg
or
ret
add
fs
mov
repz
inc
out
add
mov
test
into
adc
push
sbb
mov
dec
jnp
rcl
leave
adc
push
fidivl
inc
mov
in
dec
adc
xchg
xchg
xchg
popf
aaa
stc
push
xor
push
stc
or
mov
test
ljmp
mov
adc
pop
mov
mov
fs
vmovsldup
add
inc
lret
adc
and
sbb
or
push
xor
movsb
jmp
ja
pop
addr16
into
out
cmp
push
stc
xor
xchg
sahf
sbb
mov
lcall
lcall
push
lahf
or
dec
loope
rcl
dec
arpl
push
sub
jge
int3
push
push
orl
add
dec
or
iret
into
adc
jge
cmc
pop
rcrb
sub
int3
int3
popa
frstor
push
sub
mov
ret
out
mov
mov
outsb
fwait
lods
mul
pop
cmp
sub
inc
pop
imul
sub
loope
aad
insb
pop
jb
dec
pushf
pop
or
stc
jg
mov
inc
or
xor
or
into
cmp
cs
pop
mov
data16
add
xchg
cltd
jl
in
gs
inc
in
and
out
xchg
nop
mov
jo
fs
mov
adc
push
rclb
pop
cmp
test
xorl
ljmp
rcr
fs
adc
mov
rcll
movsb
je
sub
xor
push
test
test
adc
imull
pushl
xor
mov
ss
inc
cmp
scas
sahf
outsb
gs
stos
scas
fs
pusha
mov
xor
mov
addl
push
adc
into
adc
sub
fldl
repnz
adc
xchg
call
aaa
push
push
jnp
dec
ret
inc
or
test
adc
in
sub
loope
out
jmp
mov
add
cwtl
out
cmp
lds
les
es
pop
push
xchg
imul
fwait
call
test
je
push
mov
add
sti
dec
inc
mov
xchg
dec
cmc
cmp
mov
lcall
add
les
xchg
push
data16
inc
push
adc
fistpll
adc
jb
test
cmpsb
xchg
dec
jb
sub
cli
idivl
fwait
pop
subl
mov
mov
inc
loopne
int
xor
lea
jge
mov
and
das
sbb
jne
add
mov
sub
pop
mov
fcomps
into
mov
mov
imul
push
lods
into
inc
ror
mov
das
dec
pop
imul
push
mov
stos
jg
push
xor
nop
insl
mov
leave
popa
out
sub
mov
add
jecxz
into
xchg
add
xchg
mov
push
cmpsl
loope
xchg
nop
jg
ljmp
jno
xchg
mov
mov
movsb
std
sub
lock
hlt
scas
jae
sub
lret
daa
clc
fidivrs
fimull
push
adc
mov
xchg
je
aam
push
push
mov
xor
xor
outsl
ss
in
addr16
mov
pop
test
jno
jle
fdivs
adc
lcall
sbb
mov
inc
xchg
add
pmulhuw
mov
inc
loop
aaa
cmc
scas
int3
xchg
pop
pusha
popa
inc
je
fwait
aaa
mov
int
push
pop
cmp
icebp
pop
inc
or
popf
inc
mov
arpl
popf
push
and
ret
cmpsb
xor
or
dec
iret
fwait
cmp
mov
loopne
out
ret
adc
sbb
dec
sahf
push
mov
sbb
adc
xor
sbb
lds
push
gs
and
inc
cwtl
push
mov
push
shrb
dec
clc
add
insl
sbbl
imul
movsl
andl
dec
push
iret
mov
inc
pop
mov
xchg
aad
jp
mov
cltd
pop
lods
mov
insb
inc
inc
cmc
nop
addl
mov
push
or
dec
fidivrl
lea
pop
pop
cmc
mov
mov
lcall
xlat
dec
cmp
jbe
xor
push
mov
or
fcomps
jno
arpl
cli
mov
sbb
sbb
push
inc
out
pop
enter
sbb
in
cli
test
cmp
lahf
ss
je
dec
jge
cmc
xchg
jge
push
mov
jp
sbb
lods
jl
mov
out
pop
fsts
pop
movsl
lret
dec
cld
lods
add
orl
cmpsb
cmp
les
shr
sbb
push
mov
mov
arpl
mov
or
push
xchg
adcl
lock
inc
inc
or
xlat
pop
aaa
mov
aas
in
xor
dec
xchg
add
int3
dec
pusha
mov
cmp
bound
cld
es
stc
stc
hlt
xor
mov
inc
lahf
cmp
mov
cmp
fld
push
mov
stc
push
xchg
out
ret
stos
xor
xor
push
in
cmp
ljmp
mov
xchg
add
pop
or
aaa
pcmpeqb
ja
adcl
inc
loop
stos
gs
mov
pop
fdivp
xor
sub
xchg
xor
insl
mov
cli
rclb
mov
movsl
mov
fmul
push
add
inc
inc
mov
lret
stc
and
jne
mov
sbb
loope
scas
fdivrl
or
rcll
and
mov
cmp
and
mov
xchg
adc
mov
xchg
pop
cmpsb
jne
cmp
sbb
ljmp
cmp
xlat
outsl
or
xor
jno
addr16
jg
add
in
test
icebp
or
jp
or
pop
xor
leave
sbb
insl
or
data16
cmp
int
pop
fiaddl
into
iret
rolb
mov
stc
lahf
cld
mov
fistpl
mov
inc
loop
loope
xchg
inc
mov
add
push
repnz
pusha
push
ud0
add
push
sub
xchg
inc
into
inc
or
sbb
add
mov
xor
arpl
sub
gs
mov
sbb
mov
aas
xor
sub
xor
outsl
stos
fists
mov
aad
mov
rorl
xchg
adc
je
and
xor
enter
pop
aaa
popf
out
hlt
jno
fisttpll
or
xchg
add
add
andb
xchg
scas
pop
outsl
daa
repz
push
push
lcall
outsl
repnz
add
dec
pop
decb
ret
ljmp
ficoml
sbb
push
and
out
push
fdivrp
xchg
xor
or
popf
leave
dec
xor
push
mov
pop
inc
sbb
adcl
sbb
stos
add
xchg
gs
xchg
lods
hlt
push
mov
addr16
cmp
cmpsb
arpl
xchg
in
jne
out
mov
sub
int3
jecxz
ret
pushl
jne
push
sub
iret
call
jg
xor
pop
inc
mov
add
xchg
mov
sbb
in
popa
arpl
ret
std
lock
lret
rorb
sub
mov
stos
pop
cmp
or
lea
shlb
das
bound
divb
dec
inc
mov
push
test
shrl
mov
mov
clc
hlt
sahf
popa
lods
xchg
xchg
icebp
and
pop
add
sub
xor
push
shll
dec
inc
ret
daa
popa
mov
andl
enter
test
fdivrs
push
shlb
mov
js
mov
shlb
jbe
xchg
fsubl
sbb
lods
sub
aad
jmp
outsb
xor
jmp
fidivrl
mov
sti
pop
data16
pop
movsl
add
ss
jo
or
dec
pop
jmp
push
lcall
es
mov
pusha
daa
and
push
arpl
fstpl
aad
lret
mov
add
mov
mov
lea
cmpsl
add
pop
lds
add
sub
pop
dec
sub
popf
jne
sbb
andb
pop
adc
stc
xchg
aas
fdivl
out
lret
paddb
insl
inc
xchg
dec
leave
imul
lahf
outsl
jno
xor
bound
repnz
sarl
popa
xchg
mov
dec
mov
loope
or
and
adc
dec
push
cwtl
sbb
outsb
iret
cmpsl
push
sti
scas
adc
mov
add
shlb
mov
test
pushf
jp
inc
imul
pop
push
nop
in
fcoms
push
add
pop
scas
dec
js
insb
cs
cwtl
jnp
inc
daa
ljmp
push
mov
xchg
std
sbb
or
or
push
inc
xor
pop
xchg
jo
loopne
lret
xchg
movsl
jne
shl
or
mov
movl
ficompl
xchg
mov
std
mov
xor
xchg
rorb
inc
jp
sbb
xor
ss
scas
test
enter
inc
inc
pop
adc
and
sbb
add
pusha
fstpl
std
mov
ds
test
notl
push
pop
xor
and
or
adc
in
cmp
cmp
and
inc
xlat
rep
xor
arpl
imul
enter
bound
mov
sbb
ficompl
repnz
mov
shlb
sub
pop
cmc
fdivp
inc
test
rcrb
lock
xchg
jne
xor
pop
fisubl
xchg
ljmp
std
sbbl
push
sbb
test
mov
cs
fsubrs
cmp
and
test
not
lods
daa
mov
pop
add
dec
rorb
lock
jbe
push
in
enter
xor
hlt
repz
not
jle
sahf
mov
adc
mov
popa
movsb
mov
and
ror
dec
inc
sbb
in
cwtl
add
inc
push
rcrl
rcr
je
pop
outsl
jmp
push
xor
rol
stos
movsb
jae
std
mov
arpl
imul
daa
aad
call
testl
cltd
dec
cmp
mov
adc
xchg
fmuls
mov
insl
pop
cmp
xchg
stos
xlat
add
xlat
popa
jge
jbe
stos
cmpsl
push
push
pop
push
or
push
or
mov
cli
push
imul
int3
cmp
lods
sbb
cmp
push
test
cmpsl
xchg
jge
call
inc
cmp
decl
push
test
stc
lahf
cmc
or
mov
lods
mov
mov
daa
addr16
or
mov
in
cmp
pavgb
jo,pn
fsubl
clc
lods
push
imul
das
adc
roll
cmp
out
mov
test
mov
and
push
cmpl
add
sub
insl
pop
push
inc
pop
mov
inc
adc
test
adc
ret
out
scas
push
inc
dec
jb
dec
icebp
add
out
jne
xchg
cmp
leave
fisubrs
shrl
adc
aas
sbb
lds
mov
jl
test
pop
dec
push
cmp
pop
pusha
nop
rorb
insb
sub
xor
rclb
aam
insb
jle
mov
js
jp
jae
mulb
mov
mov
cmp
xor
lods
lds
sub
push
jg
push
inc
dec
in
mov
cld
stc
stc
pushf
or
xor
cmp
xchg
andb
mov
in
dec
daa
and
adc
xor
and
mov
mov
dec
les
sub
fwait
or
std
add
mov
aad
arpl
mov
into
int3
cmp
loope
data16
inc
cli
and
dec
mov
fisubl
cmpsl
js
data16
lods
xor
xchg
cmpsl
mov
mov
jmp
sbb
pop
pop
sarl
add
and
add
and
call
cli
inc
inc
or
push
jle
movsl
lret
out
imul
je
cmpsl
push
ds
adc
mov
push
mov
sbbl
xchg
in
jmp
int
dec
sub
push
xchg
sub
loop
movsl
insb
fucomp
data16
sahf
outsb
jae
shll
dec
add
fdivs
adc
mov
lcall
jge
insb
stos
xchg
loopne
xor
mov
call
add
adc
dec
or
enter
loope
mov
xorl
icebp
mov
jp
lods
pop
xchg
in
push
jecxz
data16
into
pop
es
push
bound
aad
loope
xchg
mov
je
out
and
push
or
mov
xchg
movsl
cmp
adc
pop
test
xchg
lret
outsb
mov
sbb
shl
mov
xchg
icebp
fildl
mov
dec
mov
ds
adc
sbb
lcall
insb
or
lret
daa
out
or
insb
scas
and
cmpsl
test
in
and
cmpsl
negb
ds
dec
sub
inc
loope
fs
jbe
mov
sub
les
xchg
pop
lahf
loope
xchg
mov
inc
push
and
mov
ret
push
jb
jge
mov
arpl
arpl
test
inc
cmp
or
pop
lock
sub
cmp
icebp
xchg
cltd
flds
push
xchg
lahf
push
inc
je
inc
aaa
in
imul
lea
and
adc
dec
jno
push
xor
pop
or
lret
jnp
jno
ret
xlat
negl
fsts
lds
mov
mov
xchg
inc
xchg
fidivl
pop
pop
pop
add
movsb
add
hlt
fstpl
into
sub
out
ds
mov
and
dec
mov
mov
fs
andb
push
hlt
test
repnz
stc
roll
sarb
out
int3
push
fiaddl
sbb
mov
xor
or
arpl
or
std
test
pop
daa
je
mov
or
add
stc
lea
mov
push
inc
lock
push
ds
cmp
fcoml
pop
push
sub
mov
pop
dec
jl
inc
xchg
adcl
inc
jb
inc
fucomi
cmc
and
push
jo
jmp
mulb
pop
mov
js
xchg
cld
sub
adc
sub
push
or
call
jecxz
outsl
lahf
jae
cld
mov
imul
xorb
enter
addr16
lret
pop
into
hlt
pop
dec
repnz
imul
ljmp
xchg
in
and
stos
subb
inc
add
sbb
push
pop
or
fwait
popf
notl
mov
hlt
jns
andps
js
xor
xchg
cmp
xchg
mov
inc
iret
fstps
fbstp
pop
into
fmulp
bound
test
ficomps
mov
and
adc
rcll
mov
cmp
push
addr16
jne
sti
fistpll
xchg
std
fs
pop
sbb
pushf
and
add
ja
cmp
rol
es
jae
das
dec
push
adc
mov
pusha
loop
adc
aad
push
mov
xchg
mov
lahf
out
js
mov
leave
mov
mov
movsl
xchg
lods
lcall
xor
aas
xlat
mov
fiaddl
fcoms
pop
shld
leave
inc
call
fiadds
pop
cmpsl
out
xchg
adc
daa
pop
cmp
add
jnp
ss
loope
in
sti
cltd
mov
xor
push
loopne
les
in
hlt
jno
xor
lret
or
adc
mov
push
inc
loop
fwait
jb
fadds
dec
shll
inc
fiaddl
xchg
xchg
imul
ds
push
or
fs
int
prefetch
push
movsb
lock
jl
loopne
mov
sahf
dec
shlb
pop
sbb
dec
fsub
pushf
sbb
lods
leave
xchg
jb
cli
adc
loopne
cmp
mov
add
int
add
xor
call
pop
ss
cmc
adc
add
ja
inc
filds
stc
lret
in
shlb
int3
clc
jns
pop
mov
arpl
arpl
dec
inc
mov
cmp
or
imul
adc
fstps
adc
fstps
or
push
inc
xlat
into
push
cli
cld
nop
icebp
xchg
cltd
sbb
daa
push
cmpsl
sub
mov
arpl
stc
jle
inc
cmp
cwtl
dec
adc
sbb
xchg
aad
mov
sub
ret
sub
push
push
lret
aas
jp
mov
inc
lret
jnp
rclb
clc
jae
jge
xchg
lds
and
stos
or
hlt
imul
add
xor
js
push
stc
aam
adc
jb
mov
mov
aas
dec
xor
mov
fwait
pop
pop
gs
fidivrl
mov
fnstsw
cld
jo
mov
push
sbb
inc
push
mov
dec
jp
scas
test
sbb
dec
push
add
xchg
lahf
loop
bound
push
dec
jl
in
cmp
mov
xchg
negl
sbb
mov
andb
fnstsw
imul
ljmp
xchg
cmovno
jg
aad
jae
imul
das
outsl
push
popl
sub
mov
mov
or
push
scas
sbb
js
mov
add
jg
lds
outsb
jo
xchg
mov
lods
mov
xchg
outsb
xchg
mov
mov
or
imul
dec
push
jno
sbb
orl
movsb
testb
outsl
cmpsl
push
lock
xchg
and
outsl
or
jp
dec
mov
cmp
in
icebp
mov
mov
inc
mov
subb
sar
adc
pop
movsl
jno,pn
repnz
push
repz
and
lret
popf
sbb
mov
lds
sbb
xor
fwait
jl
notb
xchg
pop
cwtl
shr
and
pop
out
fwait
dec
test
mov
lret
xchg
fcompl
aam
scas
je
test
fildl
push
mov
out
push
in
int
push
cmpsl
je
out
xor
dec
mov
push
scas
sub
stc
cltd
push
mov
and
std
sbb
jmp
loope
movsl
das
ficomps
stos
outsb
and
popf
shlb
test
mov
push
notb
movb
xor
add
jne
rorb
mov
dec
and
cli
jge
push
lret
mov
jmp
and
mov
aad
daa
out
mov
adc
es
ja
push
jne
xlat
sahf
ret
sahf
and
push
jnp
ds
movsl
ret
cmpsb
and
mov
cmpsl
jnp
jmp
xor
mov
out
xor
push
testl
insb
bound
jae
push
xor
and
push
mov
or
jnp
xchg
jb
xchg
sahf
loope
aam
in
loope
out
call
repz
movsl
cld
xchg
test
dec
push
pop
sbb
mov
mov
pusha
pushf
cmp
pop
jbe
jg
insb
sub
sbb
sarl
jns
out
adc
fistl
push
push
lret
pop
pop
addr16
mov
rolb
popf
xchg
sbb
cmpsl
mov
in
nop
andb
mov
lahf
cs
pop
nop
leave
repnz
fisubrl
sbb
push
jle
outsb
and
cmp
push
int
mov
dec
pop
pop
enter
adc
pop
pop
mov
js
lcall
push
jae
or
or
in
enter
xorb
add
pop
ret
push
jb
jne
mov
pusha
cwtl
and
dec
popf
movl
xor
mov
sub
push
jecxz
dec
cmpsl
outsl
xchg
mov
rcl
jge
jae
jle
test
test
inc
xor
repnz
insl
add
or
scas
aam
push
imul
xchg
push
mov
nop
sub
pop
push
inc
int
pop
mov
and
pop
push
aaa
rcr
sbb
adc
in
in
and
mov
pop
pop
ror
add
push
jb
mov
shlb
mov
mov
inc
or
pop
imul
popf
or
adc
lret
frstor
adc
aas
push
adc
fwait
rorb
out
stc
xchg
mov
and
rcrl
add
cmp
dec
mov
mov
into
fdivrs
push
adc
xlat
rorl
cmp
jmp
dec
mov
and
xchg
movsb
loope
cmp
xchg
scas
mov
xor
add
imul
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
jmp
mov
mov
xor
lea
lea
xor
cmp
jne
mov
mov
mov
xor
mov
xor
mov
xor
mov
jmp
xlat
repz
xchg
mov
mov
add
lock
pop
bound
pop
lds
or
rcl
inc
xchg
sbb
scas
insl
inc
add
cli
pop
lahf
fwait
adc
and
lcall
rol
jb
mov
dec
in
ror
jnp
push
aas
jb
stos
mov
daa
jge
cltd
jp
jne
lahf
pop
jle
adc
fidivs
imul
scas
push
ficompl
hlt
cld
pop
xorl
mov
cmp
push
test
iret
call
mov
ja
sbb
jns
sub
ret
push
push
fldenv
jmp
pop
sub
cmp
sahf
cmp
lods
mov
jns
lret
in
dec
or
pop
inc
cld
jns
es
cmc
cmp
dec
addr16
icebp
add
sub
sub
add
mov
and
xor
aam
ret
sub
xchg
push
call
push
mov
je
jmp
xchg
jno
adc
orb
or
je
sbb
imul
mov
stos
cltd
lods
stos
mov
js
sti
push
cs
ja
popa
cmp
push
sbb
push
jmp
mov
insl
lods
adc
ss
mov
push
loope
sbb
pusha
mov
arpl
lock
dec
fwait
jbe
mov
add
xchg
xchg
out
sub
add
pop
pop
dec
and
insb
mov
aad
std
add
arpl
push
xor
mov
imul
mov
nop
mov
shlb
shrb
pop
sbb
es
jecxz
dec
add
out
pop
xchg
push
mov
dec
mov
xchg
subb
dec
shrb
int3
int3
mov
lea
jmp
cs
lea
dec
es
xchg
test
shl
adc
fists
fdiv
pop
gs
cmp
dec
xchg
xor
stos
out
lock
mov
sti
dec
or
push
jecxz
mov
loop
xchg
add
pusha
int3
popf
xchg
lahf
pop
imulb
sbb
out
shrb
sahf
jecxz
mov
scas
psadbw
imul
inc
std
mov
cmp
scas
or
dec
cmc
daa
pop
les
xor
cmp
mov
lock
dec
sub
push
push
mov
xchg
inc
mov
sbb
push
call
aam
sbb
xchg
sarl
and
lret
addr16
inc
lahf
loope
cmpsb
fistps
pop
or
push
in
pop
jae
ljmp
scas
jge
lret
pop
xor
stos
or
push
push
push
jns
or
in
lcall
hlt
movsl
sbb
mov
leave
je
movsb
cwtl
negl
cmc
stc
and
stos
aad
push
adc
repz
inc
addr16
jb
and
fildl
sub
mulb
mov
fbld
or
adc
outsb
sub
cmp
and
es
ffreep
mov
loopne
push
sarl
outsl
dec
bound
xor
leave
xchg
mull
cwtl
pop
sbb
and
pop
aam
pop
xor
or
xor
sub
mov
and
cmpb
pop
xlat
mov
int
fdiv
or
adcb
xchg
and
imul
popa
jp
mov
fadds
pop
dec
add
stos
in
in
fnstenv
and
rcll
xchg
into
sub
cltd
mov
or
pop
push
push
test
daa
nop
mov
les
fidivrl
cmp
sbb
mov
dec
sbb
jg
outsl
xchg
rcl
or
inc
lcall
ja
xor
outsb
call
out
mov
inc
lret
mov
or
mov
sub
add
adcb
int3
insb
jnp
fidivs
popf
adc
jg
push
leave
in
lret
daa
jge
rorb
xchg
xor
aad
repz
int3
sub
roll
xchg
stc
loopne
fld
imul
pop
sar
add
push
add
enter
das
lods
xor
lods
pop
and
shll
push
jl
xchg
pop
sub
stos
clc
add
jg
jae
inc
in
cmp
out
pop
jp
or
mov
mov
sti
je
ret
push
sbb
jae
and
in
lods
shll
sti
xchg
mov
outsb
roll
xchg
movsl
call
in
imul
cmp
aaa
or
lea
mov
jae
xor
lods
daa
jnp
sub
cltd
sti
aad
pop
negl
in
jg
shl
mov
sub
pop
imul
fwait
daa
rolb
add
or
fdivr
sub
jnp
sbb
clc
cmp
or
or
shll
adc
movsb
rorb
in
push
lods
dec
fs
jmp
pop
pop
sti
lret
push
scas
cli
cmp
imul
pop
sbb
mov
cmp
sub
imul
stc
mov
add
mov
add
pop
scas
ret
je
insb
push
ds
mov
sub
aas
mov
aad
fists
cmpsb
aaa
vxorps
mov
or
cltd
aad
inc
lcall
scas
sarl
sub
jae
push
cmpsb
in
xchg
popw
mov
fs
inc
ja
std
sbb
sub
mov
jb
stos
xchg
imul
rorb
pop
pop
cs
xchg
test
jg
pop
mov
cmc
xchg
outsl
mov
xchg
out
mov
push
mov
cwtl
jg
aad
pop
out
ljmp
adc
adc
jmp
jae,pn
pop
mov
inc
jo
ss
fisubrl
daa
sarl
sbb
pop
pop
fsubl
xor
hlt
and
push
mov
push
sti
cld
mov
push
lds
clc
call
aad
std
mov
dec
or
xchg
adc
ficoml
xor
pusha
inc
inc
into
cli
icebp
pop
ljmp
mov
gs
sbb
inc
fiaddl
in
dec
xchg
push
mov
mov
lahf
rorb
loop
daa
lds
cli
push
out
jae
sub
es
cwtl
cmp
movsb
xor
bound
sbb
fbstp
pusha
test
mov
mov
xchg
repz
rorb
lds
inc
inc
enter
insb
test
sbb
adc
push
push
adc
popa
test
aad
jle
enter
ret
mov
cli
cmpb
jno
mov
pop
dec
arpl
pop
test
lret
iret
lea
sbb
cmp
mov
cmc
test
bnd
fmull
ljmp
out
daa
jo
pop
icebp
jecxz
dec
and
repz
mov
cs
scas
push
movsl
xchg
and
and
fstpl
mov
imul
inc
jo
dec
cmp
inc
int
mov
test
out
jge
pop
dec
in
jae
xchg
popa
enter
cltd
das
repnz
pop
test
pop
cli
pop
xchg
lcall
dec
pushf
test
mov
xor
testl
mov
repnz
xor
adc
xlat
dec
pop
ret
xchg
popf
loop
adc
mov
lods
nop
pop
mov
pop
aam
push
jbe
cmp
pop
jae
sub
int3
push
test
inc
int3
test
xor
hlt
ja
jl
lds
movl
outsb
and
mov
nop
cmp
loop
mov
dec
jp
shrl
stos
push
xchg
xchg
xchg
rcrb
push
and
nop
dec
dec
sub
push
enter
add
mov
jnp
adc
cs
js
pop
pop
idivl
pop
pop
pop
and
loope
nop
xchg
jo
insl
outsb
add
mov
stos
fildl
pop
in
leave
lock
mov
cmp
inc
fsts
test
or
pop
and
repz
pop
in
xchg
dec
pop
ret
aam
cmp
fstp
stc
inc
jmp
push
pop
inc
loop
push
add
sbb
movsb
cwtl
fs
mov
in
jo
lahf
lds
jmp
shll
sbb
push
mov
mov
sub
jo
or
pop
adc
mov
sbb
stc
push
ds
mov
data16
das
fmull
and
mov
mov
fabs
mov
push
sarb
fwait
daa
push
ret
xchg
push
ss
out
ss
push
inc
aam
adc
clc
loope
jmp
aam
stos
push
sbb
pop
test
addr16
fstpl
out
shl
ret
jnp
pop
inc
dec
cmpsb
adc
xchg
js
xor
push
cmp
adc
rcll
jg
xor
push
pop
rcrl
cltd
push
dec
and
push
sbb
pop
jns
pop
aad
clc
mov
es
pushf
fstp
xor
popa
rorl
jl
mov
addr16
jecxz
and
inc
test
nop
sbb
pop
or
inc
ret
jno
mov
adc
inc
out
outsl
xchg
and
xchg
loope
mov
lret
fs
icebp
push
jg
ljmp
fs
sarb
sti
mov
add
ss
fdivl
mov
xor
ficoms
pop
pop
sbb
mov
pop
lea
push
adc
jl
xor
mov
push
mov
lahf
loop
cld
cmp
pop
cmp
rorl
add
or
xchg
cmp
pop
or
lods
sarl
andb
adc
lret
cmp
xchg
push
in
out
pop
insl
or
cmp
in
mov
xchg
sbbl
rclb
mov
mov
movsl
outsl
lret
fisttpl
sbb
cmp
pop
push
jno
int
aaa
pop
imul
add
sbb
imul
lret
addr16
xchg
inc
push
stos
jae
jl
add
sub
dec
jmp
popf
mov
pop
aam
cmp
scas
imull
jecxz
add
leave
push
mov
push
jbe
sahf
adc
inc
adc
pop
pop
fwait
lods
mov
sbb
out
jno
fadds
push
loope
mov
add
arpl
popa
in
xchg
or
ret
bnd
xor
jno
outsl
mov
int
aam
jns
in
mov
insb
cmp
add
jnp
xchg
loope
jmp
push
push
fcoml
mov
adc
into
jecxz
push
mov
iret
scas
inc
dec
sbb
pushf
test
ret
pop
mov
xor
cli
roll
aaa
jb
cmp
ret
inc
jb
leave
dec
and
mov
jmp
sbb
out
enter
adc
cmc
cli
push
inc
aaa
cmp
pop
push
insb
cmp
mov
rclb
push
mov
pop
dec
xlat
nop
out
push
ret
dec
adc
ds
adc
inc
jle
jae
jmp
sub
mov
xchg
insb
xchg
sar
xor
jns
sarb
add
dec
mov
mov
sti
xor
rorl
sub
dec
out
and
dec
dec
push
sbb
out
adc
mov
inc
negb
cmc
cs
frstor
sbb
mov
rclb
jne
popf
xchg
add
pushf
jmp
xchg
pop
sub
sahf
dec
fstpt
aaa
mov
divb
inc
jno
xchg
ja
fdivr
sbb
xchg
or
inc
mov
add
adc
stc
loop
mov
add
jo
in
xchg
sbb
cmpsl
sbb
cld
push
test
mov
rcll
jmp
cs
adc
inc
outsl
setns
call
dec
cs
add
sbb
inc
arpl
fsubp
push
jl
push
loope
pop
ds
inc
mov
dec
and
stos
inc
mov
outsb
inc
xor
sbb
jne
mov
sbb
pop
dec
pop
xor
in
jnp
lods
mov
lds
movsl
mov
adc
pop
or
inc
pop
dec
dec
or
sti
out
lret
clc
mov
loope
dec
je
imul
loopne
int3
iret
aad
push
xor
push
cmp
ja
mov
fs
adc
sub
mov
sbb
shld
into
lods
ljmp
push
jp
pop
ficomps
icebp
inc
and
incb
push
adc
in
pop
out
xor
add
adc
lcall
pop
push
xor
cwtl
pop
xor
out
inc
push
and
rolb
mov
pop
add
mov
test
or
das
pop
out
cmp
out
inc
shl
mov
pop
pop
addb
movsl
fs
mov
and
pushf
pop
icebp
cltd
push
inc
subl
cmp
lcall
cmp
pop
mov
idivl
dec
stos
inc
mov
ss
out
mov
mov
cmpsb
divl
js
dec
pop
movl
xchg
daa
call
mov
fistl
dec
cs
pop
fistl
cmp
cmpsb
sub
jle
hlt
or
add
push
push
fisttpl
mov
add
jns
movsb
or
shl
rcll
mov
cmpsl
xchg
lret
push
xor
aad
lret
loopne
jns
jl
push
out
mov
push
movsl
iret
ret
inc
push
pop
frstor
jmp
cs
pop
mull
pop
movsb
pushf
les
popf
jp
shlb
add
jp
loopne
dec
fistpl
test
cmp
cmpsl
mov
out
outsb
enter
sbb
fstps
dec
faddl
aas
adc
push
dec
push
jmp
stos
cmpsl
fbld
mov
je
dec
pushf
push
sub
xor
je
flds
rol
pop
int3
and
cwtl
rcll
data16
mov
and
jb
xchg
aas
cs
fdivrs
xchg
jno
int3
rorl
out
adc
adc
lea
cmc
dec
clc
test
orb
and
xchg
dec
dec
mov
aam
push
inc
repnz
or
add
jle
fmuls
dec
pop
out
inc
cld
shlb
orb
cmp
mov
scas
inc
and
mov
shl
insb
xor
fsubs
pop
inc
and
or
lret
outsl
ds
dec
fdivrs
push
jbe
add
into
jmp
cmpsb
stc
pop
push
push
les
xor
mov
mov
jl
ja
jle
pminsw
push
jnp
in
jge
cmp
or
movsbl
out
ss
test
xrelease
mov
pop
push
clc
outsb
mov
ds
jo
call
rclb
push
ds
sub
or
or
jp
cmp
inc
mov
stos
jno
cmp
xchg
data16
js
jns
leave
iret
pop
cmp
pop
inc
sub
div
or
sbb
mov
xor
xchg
int3
lahf
jb
leave
push
int3
mov
inc
and
decb
mov
xor
es
incb
dec
test
arpl
adc
imul
mov
aad
lahf
leave
rol
data16
mov
pop
jb
stos
or
lcall
hlt
add
jle
les
inc
lahf
lret
cmp
pusha
adc
cmp
aam
pop
push
xor
cmp
fcoms
shl
sarl
orl
push
subb
cmc
cmpsb
cli
inc
cmc
and
cmpl
dec
inc
cmp
sub
stos
int
imul
inc
scas
add
adc
dec
add
negl
out
ret
jmp
xchg
xlat
ud0
fbld
out
jecxz
adc
pop
pop
pop
jns
sbb
stc
adc
adc
sub
push
mov
int
rclb
mov
pop
mov
jbe
mov
push
mov
push
xchg
mov
or
xor
inc
and
xchg
jecxz
testb
loopne
xchg
icebp
loop
imul
mov
add
insb
mov
mov
mov
stos
add
mov
sar
rcrb
cwtl
lret
and
int
sbb
stos
add
mov
cmp
popf
or
ret
cmp
fidivl
fld
fdivrs
scas
dec
jns
mov
ret
and
outsl
xchg
dec
push
xor
fisttpll
xor
in
sbb
jae
cli
dec
outsb
insb
mov
mov
xor
push
mov
mov
in
inc
xorb
pop
push
int
fmuls
jg
pop
add
arpl
divl
inc
imul
push
mov
rclb
dec
ds
lret
fildl
mov
mov
in
sbb
pop
das
xor
adc
and
fcomps
push
int3
mov
dec
dec
fxch
xor
pop
ja
or
jbe
test
sub
pushf
inc
outsl
adc
pop
orb
sub
mov
out
enter
or
rclb
push
mov
out
lods
jmp
mov
push
negl
cmp
fs
xchg
sbb
icebp
xchg
mov
jne
xchg
inc
dec
adc
jle,pt
inc
push
cmp
test
test
sub
and
in
lcall
or
mov
xchg
cmp
ret
loopne
push
dec
pop
adc
push
ret
push
loop
movsb
cltd
pop
push
push
sbb
out
mov
pop
nop
inc
mov
push
ret
cmp
cli
lcall
imul
bound
pop
jg
mov
stos
adcl
and
inc
xor
aaa
aas
xor
outsb
lret
repz
push
je
scas
idivl
jge
add
xchg
and
add
sbb
pusha
ja
bound
cmpsl
adc
mov
or
popa
push
dec
sbb
dec
daa
stos
in
lds
or
sub
mov
out
shl
shll
test
xchg
lea
dec
jbe
pop
stos
lret
adc
js
jb
lods
out
dec
cld
lods
inc
pop
mov
adc
jecxz
jmp
push
cmpsb
sub
mov
push
leave
dec
add
jae
adc
jge
inc
aaa
add
adc
lret
jne
or
xchg
loopne
or
imul
shrl
mov
or
inc
dec
movsl
mov
rcr
aad
movsl
pop
lret
push
lahf
stos
movsl
call
popf
xchg
sti
in
cmp
adc
adc
cmp
xchg
aaa
push
pop
pop
jae,pt
fstps
jno
mov
jl
scas
xlat
mov
out
insb
xchg
xchg
in
enter
imul
mov
in
xor
add
push
jle
push
ss
jp
dec
and
cmp
repnz
incb
ret
mov
inc
and
mov
dec
es
lahf
pop
mov
out
add
ret
and
into
aad
xchg
xor
jbe
xor
push
jmp
into
andb
sub
sub
jl
sarb
push
xchg
lcall
xor
push
xor
or
xchg
jl
mov
mov
sub
or
divb
rcrb
adc
xor
dec
das
loop
pusha
cmp
cmp
fiadds
nop
xlat
cmpsl
mov
repz
ret
stos
ret
fldenv
mov
mov
lcall
inc
pop
pop
lods
cs
rcll
movsl
sbb
das
mov
in
bound
mov
adc
mov
mov
fcoms
push
jmp
es
or
test
and
cld
iret
xchg
cltd
int3
jp
das
sub
xor
mov
push
xchg
mov
cmpsl
addl
ss
out
lret
mov
inc
and
cmp
imul
mov
sbb
ficoms
jmp
repz
push
cmp
and
mov
add
scas
adc
inc
leave
jno
ja
mov
in
sub
loope
xchg
sub
push
icebp
ret
out
cld
inc
lcall
or
cmpsl
sub
fstpl
adc
jae
leave
sbb
mov
and
mov
loop
mov
call
enter
les
ja
pop
popa
stos
push
push
scas
testb
lock
cld
out
adc
out
imul
cmpsl
pop
pop
mov
mov
mov
pop
dec
les
xor
mov
add
push
and
lahf
cs
inc
xor
ret
jo
or
cltd
cmpsb
xchg
shlb
cmp
sti
cmpsb
push
repz
fcmove
sub
push
mov
and
sub
push
push
mov
es
inc
add
pop
xchg
and
sahf
dec
hlt
aam
pop
sub
xchg
push
cmc
cmp
push
xor
push
and
push
cmp
rolb
push
in
pushf
mov
es
or
outsb
rolb
inc
jbe
push
xor
xchg
js
sar
out
sbb
dec
imul
addl
outsb
add
fmull
push
and
dec
shl
enter
bound
mov
push
pop
test
pop
sbb
cli
in
les
lret
dec
jns
mov
addr16
jae
xor
sub
jle
fimull
clc
scas
scas
jo
popa
aad
gs
jmp
ljmp
jg
sub
xchg
mov
push
mov
and
and
push
nop
or
add
fists
add
fnstsw
insb
cmp
pop
incb
xchg
pop
pop
loope
sub
push
add
mov
rorb
adc
das
testl
fisubrs
outsb
pop
and
push
out
loop
mov
mov
push
sbb
idivl
fwait
jns
add
mov
fisubs
int3
stc
inc
test
mov
filds
and
fsts
sbb
in
sbb
rcll
pushw
pop
mov
and
mov
inc
sti
mov
out
int
mov
loop
jno
mov
or
test
mov
add
and
mov
std
jecxz
fistpll
push
pop
shll
cli
int
movsl
push
test
iret
sub
leave
addr16
jmp
inc
jae
dec
inc
and
stc
pop
sub
push
mov
adc
xlat
testl
cmpsb
test
test
imul
sub
xchg
dec
lods
xor
mov
mov
mov
je
jecxz
stos
orl
xor
lea
ds
cld
pop
mov
fiadds
out
sti
icebp
sub
xor
dec
or
and
int3
jbe
xchg
cmpsb
pusha
shlb
push
nop
or
bndstx
push
lods
sbb
imul
add
int3
xchg
add
fcmove
pop
hlt
out
mov
mov
lea
out
mov
sub
jle
out
in
out
xor
pop
dec
outsb
lods
mov
imul
or
inc
xor
loope
fwait
add
cmp
dec
cs
incl
mov
test
push
loope
sub
testb
dec
cmp
dec
iret
lods
xchg
pop
int
mov
lods
or
arpl
jb
sbb
mov
frstor
inc
pop
mov
cmpsb
out
push
fcomps
push
jp
ret
ret
xchg
add
jmp
arpl
fs
pop
and
pop
movsb
sub
jns
scas
and
sbb
pop
push
cli
cwtl
gs
jge
scas
mov
insb
xchg
stos
sahf
xor
or
outsb
push
or
push
sbb
mov
push
pop
lock
sar
mov
bound
pop
stc
xchg
add
test
mov
int
sbb
cwtl
stc
adc
clc
pop
lcall
lods
adc
rcll
rol
jge
ja
rorl
push
jbe
sub
lea
sub
sbb
cmpsb
int3
jp
jg
out
inc
cmpsl
mov
fcomps
scas
and
push
xchg
pusha
popf
push
inc
sub
mov
loope
in
adc
cmp
int
data16
mov
dec
jae
jb
repz
jl
andl
fcomp
mov
leave
push
dec
ficoms
inc
add
sbb
cltd
adc
loope
in
fistpll
push
into
fstpt
or
mov
lcall
in
popa
mov
nop
out
pop
pop
mov
dec
notb
cmp
int3
pop
mov
lea
inc
mov
test
jns
jmp
aaa
cmp
push
nop
rcr
add
out
stos
jns
mov
jecxz
into
mov
pop
call
xchg
mov
add
cmp
lods
push
jbe
test
loop
in
jnp
fisubs
cmpsl
test
mov
test
sbb
cld
sbb
mov
xor
inc
xor
inc
insb
push
push
je
out
xchg
arpl
cli
inc
jae
push
lahf
sbb
dec
arpl
addl
and
stos
mov
test
in
sub
cmp
push
adcl
cmp
ret
in
jp
lock
adcl
icebp
movsb
mov
test
xor
bound
shll
add
enter
push
sarl
cmp
sub
add
sub
push
pop
mov
push
mov
mov
loopne
les
rcrl
das
push
inc
iret
fs
movsl
mov
ds
dec
pop
ljmp
rorl
adcl
inc
pop
mov
in
xor
sub
fcoml
jnp
xchg
add
mov
pop
xchg
cmp
push
scas
sarl
xchg
push
push
int
inc
call
movsb
loop
sub
test
test
shlb
shlb
jb
hlt
ret
cmp
int
lods
test
sbb
sub
push
push
lret
and
cld
mov
loop
fcoml
push
ret
jne
stc
cmc
mov
js
sub
fldt
mov
in
adc
xchg
shll
jne
orl
jbe
or
clc
push
mov
int3
daa
data16
jnp
shl
fadds
jmp
cwtl
pop
subl
pop
pusha
mov
loopne
fwait
aam
xor
sub
adc
push
stos
fscale
pop
repz
pusha
and
jns
das
iret
fmul
dec
setl
cltd
aad
add
lcall
insb
bound
add
lea
inc
hlt
aas
shll
mov
sbbl
movl
push
push
rcrb
dec
mov
rcr
push
adcl
xchg
sub
and
xchg
mov
cmp
pop
sub
mov
sbb
popa
sub
lret
dec
push
pop
in
mov
lods
popf
mov
ja
push
mov
xor
adc
popw
xor
and
push
xchg
pop
xor
xchg
add
adc
imul
js
cmpl
jl
mov
cmp
mov
cld
push
xor
scas
lcall
push
lods
jae
clc
adc
dec
mov
test
nop
mov
int3
add
push
mov
stos
sub
fldl
mov
mov
adc
popa
cltd
addl
adc
sub
test
cmp
jns
mov
adc
mov
cltd
imul
test
mov
mov
pusha
sahf
mov
push
fnstcw
mov
adc
inc
jae
jb
adc
cmp
pop
push
nop
aad
aaa
les
shrb
outsb
jno
jns
repz
or
cmpsb
divb
and
scas
mov
das
leave
lods
mov
and
lods
push
inc
addl
sbb
mov
push
fdivs
add
dec
ljmp
dec
jecxz
daa
sahf
mov
in
mov
enter
ss
gs
int
sub
adc
repnz
or
repz
sahf
lahf
mov
gs
dec
and
xchg
jmp
cmp
out
and
mov
loop
shll
mov
or
lods
cmp
popf
aaa
inc
lret
imul
je
jnp
fwait
mov
adc
arpl
xor
ss
push
clc
lret
shlb
ljmp
jb
cmp
push
out
adc
or
adcl
loope
je
xchg
inc
aam
popf
pop
dec
or
add
sub
cwtl
jno
test
inc
dec
test
adc
mov
push
jmp
fnsave
outsb
ret
hlt
adc
clc
mov
out
jmp
jbe
test
jmp
jge
cmp
stc
or
pop
aaa
outsb
aad
dec
mov
gs
mov
xor
push
das
nop
ret
mov
scas
xchg
pop
lahf
out
cmp
stc
in
shrl
cmp
hlt
ja
in
addl
lods
adc
mov
push
cmpsl
fidivl
sub
les
punpckhdq
negl
out
pushf
test
xchg
outsb
push
adc
imul
adcl
sub
int3
or
jnp
and
xchg
repz
imul
or
in
push
jns
mov
aad
cmpsb
popf
test
inc
push
adc
inc
mov
mov
test
mov
shl
inc
dec
pop
mov
cmp
sub
jb
gs
mov
cmpsb
xchg
cmpsb
dec
or
aaa
cwtl
inc
mov
insl
andl
addb
popa
pop
mov
adc
xor
leave
outsb
cmpb
push
mov
inc
jmp
aad
jg
xchg
inc
add
xorl
mov
add
fnsave
xor
xchg
sub
mov
mov
lods
push
mov
jo
jmp
movsl
lcall
inc
into
cs
xchg
test
and
outsb
xor
jnp
lods
dec
or
loop
mov
das
decl
pusha
xor
xchg
stos
push
sahf
rcrb
mov
lret
hlt
sarl
loope
xor
int
hlt
xor
mov
imul
jbe
and
push
lret
xor
stc
mov
inc
faddl
pop
fwait
push
adc
sbb
mov
push
sbb
and
jnp
xor
subl
arpl
addr16
mov
je
enter
mov
hlt
enter
cwtl
sbb
and
jo
iret
sub
lods
jno
scas
testb
shll
call
aaa
rorb
jb
mov
xor
inc
mov
mov
push
in
xchg
xor
addr16
sub
shrl
mov
adc
jne
dec
lds
sarl
or
mov
push
rclb
mov
shr
sbb
pop
mov
test
add
xor
adc
lret
cmp
inc
jmp
test
or
push
fdivrs
in
in
sub
inc
jge
rol
or
add
sbb
mov
mov
rolb
xchg
and
jmp
outsl
fwait
rorb
mov
bound
adc
daa
loop
mov
xchg
push
mov
inc
jp
int
cmp
fcmovne
repnz
lock
stos
into
cmp
pop
icebp
adc
add
pop
mov
shrl
xchg
arpl
xor
pusha
loope
cltd
push
cmpsb
mov
stc
leave
enter
in
pop
add
mov
mov
xor
ret
mov
push
aaa
repnz
xor
jo
cmp
cld
or
add
test
repz
mov
mov
jl
sub
mov
xor
mov
mov
xor
add
pop
pop
pop
leave
ret
push
mov
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
pushl
pushl
push
pushl
push
push
push
pushl
call
jmp
movl
adc
mov
addl
jmp
into
or
jg
fildll
dec
mov
ljmp
pop
bound
mov
lods
sub
shrb
and
cld
and
inc
lods
rcll
mov
cmp
mov
insl
mov
shl
leave
push
lods
sahf
iret
jl
lret
pop
adc
cmp
inc
push
jnp
std
repz
js
repnz
imul
mov
shl
push
fsubrl
jp
outsb
add
xor
sbb
ret
std
lock
mov
cltd
mov
je
ljmp
loop
adc
inc
clc
in
dec
lods
nop
outsl
inc
inc
push
push
add
clc
leave
pop
mov
pop
adc
andb
add
add
adc
sbb
cmp
outsb
sub
repz
in
ret
pop
adc
sbb
adc
pop
sub
add
outsb
loop
jle
push
xor
clc
mov
scas
pop
shlb
int
out
inc
jnp
xchg
ljmp
adc
lock
push
push
inc
fcom
es
dec
gs
jnp
cmpsb
mov
lcall
nop
mov
xor
push
add
mov
inc
cmp
mov
mov
popa
in
xor
aam
lret
les
repnz
sbb
out
xor
inc
ljmp
orl
imul
fldl
in
xchg
sub
int
dec
push
dec
cmp
lods
shll
fimuls
sub
xor
pop
push
cmp
pop
mov
or
int3
mov
xchg
xchg
repnz
jl
dec
lret
pop
cld
dec
mov
xchg
sbbl
pop
dec
aam
dec
pusha
nop
dec
cld
mov
clc
inc
cmp
lds
pop
adc
push
stos
mov
imul
mov
mov
outsb
movb
adc
mov
in
cmp
js
fwait
cmp
inc
fucomp
mov
rcrl
out
jnp
xor
test
mov
lcall
das
jl
inc
sbb
jl
and
push
sub
sbb
sbb
jp
rclb
fcmove
xchg
jge
adc
subl
cmp
shl
sub
xchg
sub
cmc
cmp
jp
in
push
cli
lods
loope
outsl
int3
sub
sbb
mov
sub
push
add
mov
jp
addr16
pop
cmp
scas
into
cmc
movsl
xchg
adc
mov
shll
lret
in
xchg
inc
fildl
in
xor
mov
mov
cmc
data16
mov
mov
scas
sarl
shrl
leave
ud0
icebp
xchg
jns
jae
loope
xchg
addb
or
xchg
sbb
or
icebp
jmp
add
mov
push
or
cmpb
mov
shrb
inc
pop
or
pushf
and
push
jmp
cld
xchg
fsubl
into
mov
pop
fiadds
inc
mov
inc
adc
ja
mov
cmp
test
pop
mov
sbb
xchg
dec
sbb
in
loopne
add
xor
mov
cmp
mov
lret
mov
mov
sub
mov
mov
adc
rolb
outsl
shlb
das
sbb
popa
mov
dec
popf
out
and
mov
outsb
ja
imul
cwtl
cmc
lret
shlb
hlt
addb
xor
xor
mov
inc
push
sbb
sub
push
jecxz
pusha
dec
lds
fnstcw
sub
dec
sub
leave
and
sahf
sub
push
cmp
push
loope
inc
jp
shrl
jae
jbe
add
movsl
fs
adc
shr
movsl
mov
cmp
imull
fwait
push
mov
jne
mov
sub
inc
lahf
jno
mov
daa
or
shll
jne
fs
dec
mov
andl
xchg
mov
adc
mov
inc
enter
sub
test
ds
xor
and
push
in
jae
add
adc
jecxz
addps
test
inc
or
ret
xor
cmpsl
or
mov
dec
iret
int3
daa
ljmp
or
out
cmpsl
jne
pushl
sbb
repnz
loopne
test
sub
fs
xor
subl
enter
push
mov
dec
ja
inc
notl
fmull
test
stos
sub
lock
jno
daa
push
jbe
mov
or
sbb
outsb
xor
subl
add
notl
mull
add
or
in
scas
lea
pop
mov
adc
cmp
sub
dec
lock
jb
lods
cli
in
jp
or
jecxz
jg
adc
fstps
mov
hlt
sti
pop
aas
data16
icebp
push
imul
mov
repnz
icebp
stos
sahf
mov
sbb
xchg
movsl
call
add
loopne
pushf
daa
aas
or
pop
movsb
aaa
mov
jno
test
mov
mov
cwtl
mov
jg
lret
std
int
cmc
sbb
imul
sub
out
aas
xchg
or
rcll
and
pop
lret
retw
inc
push
adc
out
out
inc
dec
or
setge
jne
push
or
mov
push
pop
pop
sub
daa
stos
insl
out
mov
fstps
sbb
je
jnp
cs
fs
cmp
das
shl
jo
in
in
push
push
aaa
mov
pop
jge
scas
or
add
push
popf
je
mov
sbb
repnz
lds
jno
sub
and
jns
jecxz
das
and
pop
test
pop
test
pop
mov
lret
ficomps
inc
push
pop
into
icebp
or
shlb
or
pop
stos
push
and
ror
mov
stos
adc
jnp
ret
mov
xor
into
lds
mov
push
jge
add
fisubl
in
fbld
push
add
icebp
and
inc
push
jmp
rcl
nop
or
push
or
push
scas
call
addr16
mov
outsb
xorl
lret
mov
xor
imul
inc
xor
cmp
movsl
imul
xchg
stos
cmc
popf
aad
fdivrl
std
adc
out
psubq
notl
adc
cmp
out
scas
dec
jecxz
dec
jle
mov
inc
fisttps
pop
mov
xor
pop
data16
jecxz
pop
lcall
sbb
cmp
xor
or
cmp
movsl
jns
insb
bound
fldt
stc
add
out
inc
jne
fiaddl
xchg
movsb
sub
xor
push
mov
sub
pop
leave
xchg
inc
lcall
push
sub
cmp
mov
cmp
xchg
je,pt
add
xchg
jp
rorb
cs
mov
jo
dec
mov
mov
cmp
mov
push
push
pop
imul
mov
iret
lret
xor
mov
sti
dec
mov
sub
icebp
mov
xchg
fdivr
call
push
cmp
pop
or
dec
jg
jns
inc
jbe
iret
sub
jle
or
mov
mov
fsts
and
icebp
sbb
cltd
lahf
and
jae
jmp
dec
pop
dec
in
int
push
lret
lea
mov
pop
loopne
aas
mov
cltd
out
pop
scas
hlt
xchg
mov
adcl
hlt
dec
test
hlt
sbb
rcrb
test
jge
push
push
or
sub
adc
sbb
inc
mov
popa
sbb
pop
jg
out
fidivl
mov
xchg
test
xor
mov
cwtl
sub
jge
movsb
int
fldcw
mov
bound
add
lea
stc
pop
and
daa
faddl
xor
sbb
rcrb
pop
fcoms
mov
imul
in
dec
jbe
mov
cmp
out
nop
jae
or
xchg
pop
add
adc
in
les
scas
mov
pushf
adcb
or
mov
push
jnp
orb
mov
ds
movsl
ss
mov
mov
sub
lahf
push
lret
pusha
outsl
fstps
fsubs
sub
xchg
aam
int
roll
pop
imul
pop
aam
arpl
stos
jno
mov
mov
jecxz
cmp
mov
sbb
stc
and
jnp
roll
add
addr16
mov
pop
pushf
faddl
push
push
cmpsl
or
pop
scas
in
mov
dec
int
pop
jbe
fimuls
lods
fsubp
enter
push
ss
jmp
adcl
jle
loop
adc
nop
int3
movsb
gs
pop
xor
int3
movsl
or
mov
pop
mov
xor
jmp
and
arpl
xchg
adc
mov
hlt
pop
addr16
jnp
ja
jns
mov
push
mov
mov
cmp
sub
push
inc
subb
or
sarb
jno
or
in
add
pop
cltd
mov
sar
loop
lods
and
pusha
outsb
xlat
dec
bnd
or
xor
iret
lahf
stos
sub
pop
mov
insl
out
stos
jl
fsts
repz
sbb
push
xor
scas
push
mov
push
mov
push
je
loope
or
loopne
test
in
lcall
xchg
inc
mov
mov
fsubp
lock
lods
in
nop
lahf
cltd
lret
mov
pop
pushf
imul
push
push
rclb
sti
mov
hlt
mov
cli
dec
push
lods
jecxz
dec
pop
clc
adc
mov
sbb
add
clc
mov
leave
inc
aad
ss
int
xchg
add
cmc
or
out
fldl
xchg
cmpsl
push
mov
mov
pop
je
add
push
pop
jnp
xchg
fdivs
pop
mov
push
dec
outsl
clc
jecxz
xor
pop
mov
repnz
pop
fisubs
test
or
xchg
test
mov
addr16
cmpsb
xchg
popf
das
cmp
lcall
in
mov
loope
loopne
push
fdivrs
xchg
dec
in
xor
mov
loope
xor
push
ds
test
dec
pop
fisubrs
cmp
scas
ljmp
pop
and
xchg
mov
loope
cwtl
das
push
lret
pop
outsl
cld
adc
popf
xchg
imul
push
std
jl
imul
jno
mov
int3
push
and
int3
xor
inc
xchg
cmc
repz
push
or
lret
xor
vpsubb
add
sub
add
pop
adc
xchg
adc
pop
mov
add
xor
cmp
icebp
fcmovbe
and
jns
mov
leave
in
mov
pop
jl
mov
or
mov
adc
js
test
cmp
gs
push
insb
sti
xchg
loop
xor
push
mov
les
int3
stos
adc
or
nop
out
imul
cmovne
lret
inc
jno
cld
inc
dec
imul
mov
loope
mov
seta
movsb
fs
loope
push
push
push
fimuls
fidivl
aas
movsl
adc
decl
lods
out
mov
jecxz
sub
dec
add
int3
loopne
push
pop
mov
cmp
aam
cmpsl
push
int3
loop
arpl
mov
or
cli
mov
mov
xlat
sbb
xor
daa
rorl
mov
inc
js
outsl
xchg
push
aad
pushf
cmp
loope
outsb
adc
mov
mov
vaddsubpd
mov
xor
aad
push
xchg
dec
adc
jno
or
jno
mov
int
inc
sahf
sahf
in
pop
imul
pusha
inc
xchg
sar
pop
int3
pop
lea
xchg
mov
inc
into
pop
lds
stos
add
loopne
mov
popf
in
inc
rcrl
pop
xor
inc
test
jge
enter
adc
out
inc
aam
jb
jle
jb
mov
rcrb
test
adc
inc
je
ret
subb
adc
push
dec
xchg
sub
fcomps
mov
adc
cmp
popa
xor
pop
xor
test
xchg
and
loope
dec
lahf
dec
mov
mov
pop
lea
and
cmpl
out
sbb
jbe
push
movsl
fnstenv
out
mull
subb
sahf
lods
loopne
test
jnp
jb,pn
dec
inc
lea
rorl
insb
int3
cmc
mov
add
movsb
jae
sub
scas
and
scas
jle
in
bound
push
in
test
and
int
jb
and
push
rorl
into
xor
xchg
fldl
and
std
js
in
xor
pop
mov
mov
call
add
jbe
fildl
xchg
mov
cmp
popa
test
hlt
cmpl
inc
jns
rcll
jb
sub
mov
js
cmp
stos
mov
sbb
dec
push
into
xorl
mov
fstpl
push
xchg
dec
and
cs
xchg
int
fistps
int
mov
sahf
cmp
dec
adc
std
mov
shrb
lret
push
adc
xlat
pushf
outsb
cmp
mov
push
fwait
dec
daa
lods
shlb
arpl
stos
loopne
or
fiaddl
adc
or
movsl
pushf
xchg
push
inc
or
ss
dec
out
roll
loope
aad
sub
in
subb
pop
leave
pop
adc
jns
in
inc
push
adc
mov
insl
push
test
mov
jae
xor
stc
mov
ljmp
mov
jb
pushf
add
dec
mov
aaa
dec
repz
pop
push
add
xor
outsb
inc
xor
aad
xchg
mov
sub
fdiv
add
xchg
test
mov
mov
call
cmp
and
stos
ljmp
pop
gs
sub
sub
xchg
out
push
imul
stc
pop
sub
test
sbb
jae
mov
shll
fidivrs
repz
jnp
in
cld
ljmp
jecxz
pop
out
cmc
jne
shll
not
cs
gs
adc
rorl
dec
lods
repz
inc
popf
and
shlb
movsl
mov
xchg
cwtl
ja
or
inc
inc
hlt
inc
sbb
ljmp
add
neg
ret
sbb
sti
pop
mov
aam
push
cmp
fdivrs
mov
and
pop
xor
stos
xor
test
add
test
nop
adc
test
mulb
sarb
rcrl
leave
dec
inc
fstps
push
jge
push
mov
and
xchg
inc
sbb
mov
push
or
push
fisubs
js
push
iret
fistps
shll
in
stos
aam
rorl
jne
inc
enter
pushf
sbb
xchg
ds
inc
adc
mov
jne
subb
loop
cmp
dec
pop
jne
or
mov
in
fstpl
je
out
scas
pop
lds
leave
push
loop
mov
ss
jp
lret
sbb
ja
sbb
test
je
insl
pop
lods
sbb
fwait
popf
adc
sbb
and
ja
je
dec
pop
sub
push
mov
cmp
and
outsb
filds
inc
dec
jmp
lds
dec
push
rcrl
je
sub
lret
or
xchg
mov
and
fdivrl
icebp
lea
test
lock
xchg
aas
cmp
xor
pop
cltd
popf
subl
insl
inc
das
cmpsb
push
clc
dec
pop
cmp
xchg
sbb
arpl
sahf
xchg
dec
pop
jb
jbe
mov
test
ds
push
dec
or
sbb
xchg
xchg
or
leave
je
loop
jg
into
scas
aaa
push
jge
jae
sbb
loope
clc
loope
fmul
es
inc
cld
pop
or
je
adc
jnp
push
repnz
sbb
push
ja
xchg
lods
in
adc
and
and
pop
pop
inc
in
sbb
aas
jle
adc
data16
push
ja
or
inc
or
sub
stc
dec
sbb
ljmp
sbbb
add
pusha
dec
fisubrl
and
dec
mov
sub
insb
pop
stos
test
mov
stc
jg
cmp
cmp
lea
pop
xor
xor
mov
leave
push
pop
push
add
enter
fnsave
adcb
pop
adcb
mov
xchg
xchg
push
pop
mov
xchg
dec
shl
mov
cmp
push
sarl
imulb
and
call
adc
call
xchg
call
cs
lds
test
int3
push
xchg
cmp
mov
ror
dec
scas
push
sub
pop
mov
lds
push
adc
outsb
xor
enter
sti
or
dec
xor
mov
sub
fwait
xchg
inc
dec
stc
sub
repnz
mov
neg
outsl
lret
adc
jb
jae
or
inc
je
inc
das
mov
dec
or
push
imul
push
pop
cmpsb
loopne
inc
add
mov
test
ds
cmp
testb
jle
mov
xchg
out
clc
nop
push
mov
aas
xor
jmp
les
stos
mov
mov
inc
in
stos
push
out
lcall
jmp
andl
lret
xor
fmuls
mov
sbb
aam
mov
aas
mov
les
fs
mov
sbbl
xchg
push
notl
and
add
mov
or
cmpsb
push
rcr
pop
xchg
inc
lds
xchg
or
testb
mov
fadds
lods
cmp
and
jae
jmp
into
out
mov
es
iret
fists
inc
xor
jb
jg
jp
sbb
sbb
jmp
lahf
push
bound
or
lcall
lods
jl
mov
aas
pushf
dec
mov
mov
mov
xlat
or
lcall
nop
xor
dec
push
ja
and
cmc
dec
rcrb
mov
add
fnclex
in
nop
cld
cmc
adc
mov
das
pop
mov
addr16
fcomi
out
jne
pop
push
sbb
testb
adc
wbinvd
push
dec
jae
jnp
inc
fcomps
adc
pusha
add
lret
enter
dec
mov
clc
mov
cs
outsb
push
cmp
imul
lods
sub
inc
popa
int3
mov
jecxz
mov
aad
jbe
frstor
and
cmp
out
xlat
movsl
push
cmpsb
sbb
adc
sbb
stos
in
fsubrs
jbe
sub
loop
icebp
adc
or
jecxz
push
mov
cwtl
adc
shr
out
dec
dec
xor
add
dec
ss
xchg
and
enter
in
jae
and
push
aaa
arpl
stos
and
loope
dec
pop
ja
add
rcl
xchg
test
jne
xchg
mov
adc
fabs
gs
jb
lods
fs
sbb
pop
sub
repnz
fmull
fimuls
pushf
inc
jmp
dec
cli
mov
pop
mov
sbb
mov
lds
mov
test
and
inc
in
jnp
enter
xor
stos
lahf
push
aam
sbb
das
scas
daa
cltd
cwtl
inc
pusha
daa
xchg
stos
jb
cld
pop
stos
jnp
cmp
adc
daa
pop
mov
or
icebp
mov
cltd
or
sub
push
jmp
loope
loop
add
iret
test
dec
out
cmp
test
or
lahf
call
xchg
xchg
pop
cmpsl
or
sbb
mov
mov
or
popa
mov
pop
es
xchg
ja
rcrb
ljmp
int3
mov
or
adc
popa
ret
test
lahf
cmp
out
or
aas
mov
push
add
inc
add
in
cwtl
adc
enter
in
xchg
iret
roll
dec
imul
popf
and
mov
cmp
cmp
fildll
sti
jg
iret
pop
in
leave
mov
dec
stos
dec
loop
xchg
leave
int
addr16
push
jecxz
out
xchg
cmp
imul
push
dec
pusha
icebp
and
inc
jmp
cmc
fs
aas
push
pop
add
in
cmp
xlat
push
insb
sahf
or
repnz
iret
pusha
and
insl
ds
and
pop
pcmpgtd
inc
loop
push
xor
insl
or
aam
and
lock
adcl
inc
cmpsb
lret
ret
or
pusha
jmp
mov
ret
xor
scas
mov
adc
and
test
mov
cmp
pop
jns
or
rorb
loope
loop
inc
mulb
scas
aad
fdivl
repnz
data16
or
nop
movsl
jbe
push
aaa
repz
or
lods
add
std
jbe
push
pop
push
sbb
loopne
aas
adc
dec
inc
insl
ja
or
cwtl
hlt
add
loopne
ficoms
mov
jno
addr16
lcall
int
shlb
xchg
pop
negl
pop
xor
mov
das
xor
cmp
bound
orl
dec
popf
push
je
mov
push
and
inc
lret
sub
stc
and
add
rcll
jbe
adc
adc
daa
jb
mov
loope
mov
or
xor
mov
lods
inc
cld
push
sbb
mov
pushf
testb
pop
pop
cwtl
cmc
aas
rcr
jns
cmp
mov
test
and
stc
push
mov
mov
test
cmpsb
and
cwtl
xchg
insl
daa
ret
pusha
push
dec
fwait
mov
test
or
dec
pop
push
or
stc
jo
scas
mov
shlb
inc
push
jl
xchg
xchg
std
mov
jno
leave
push
lods
jno
test
in
pusha
repnz
ja
mov
popa
in
push
test
repz
js
ficomps
mov
mov
into
rorb
xor
das
nop
dec
stc
std
push
add
xchg
jae
into
dec
test
daa
in
sub
sbb
popf
lock
pushw
fidivs
mov
cmpl
or
mov
sbb
test
cmpsl
outsl
popf
sbb
bound
lcall
out
push
xor
cld
loopne
xchg
xor
add
push
jo
fiaddl
push
cmp
sub
jo
mov
hlt
cmp
out
outsl
xchg
sub
outsl
aad
cmp
adc
xchg
in
jecxz
push
or
cmp
cmp
cld
or
insb
mov
or
sbbl
dec
arpl
push
cmpl
xor
mov
mov
shufps
enter
faddl
stos
or
dec
inc
popf
cltd
lods
push
mov
fdivr
or
and
or
pusha
push
fdivl
scas
fisubs
jg
imul
fs
sar
inc
add
sub
or
add
popf
mov
decb
hlt
xchg
pop
sbb
push
xchg
outsb
scas
dec
dec
adcl
mov
sub
push
addb
or
or
mov
sbb
mov
lods
mov
mov
push
pop
insb
std
sbb
dec
loopne
ret
out
adcl
mov
ja
cmp
wrmsr
cmp
test
mov
cmp
movsb
dec
push
xchg
shll
sbb
push
mov
ret
out
xor
jl
push
push
inc
or
or
pushf
jge
dec
mov
xchg
pop
out
sbb
daa
jae
sbb
xchg
jnp
add
ret
pop
mov
aaa
test
loope
xchg
adc
js
jo
into
out
notl
mov
int
mov
nop
mov
add
mov
sbb
push
lret
repz
mov
cmp
mov
fcomps
aaa
push
stos
push
jl
mov
add
or
xchg
push
sarb
dec
sub
test
mov
xchg
repz
push
sahf
adc
clc
sub
std
jge
lahf
push
pop
mov
into
add
movsb
push
lock
and
cmp
in
aas
mov
ja
jae
sti
add
test
cmp
dec
in
lahf
ja
adc
push
cmp
jno
mov
inc
inc
testb
fbstp
lods
stos
test
std
in
or
popa
insl
jo
cmp
shrl
xchg
test
jp
pop
aam
int3
aas
dec
push
inc
xchg
imul
sbb
out
pop
push
pushf
or
outsb
mov
push
xchg
fisttpl
mov
cmpsl
pop
dec
daa
add
xor
xchg
in
iret
sub
xchg
inc
mov
or
sub
cmp
cmpsl
jecxz
mov
sbb
loope
js
insl
pop
adc
inc
popf
cmp
rep
cli
bound
mov
lock
pop
dec
das
jmp
iret
mov
xchg
jae
jne
xor
les
ret
jnp
pop
leave
in
adc
call
addr16
sub
fcomip
cmp
les
int3
jmp
adc
cmp
and
push
fisubs
outsl
cmp
popa
push
xchg
or
and
xor
inc
lock
cld
in
in
sbb
jne
push
inc
cmpsb
mov
inc
js
arpl
sarl
jne
adc
push
cmc
lods
clc
fistpl
and
xor
clc
jnp
shlb
movsb
jbe
xlat
mov
fcoml
test
inc
addr16
push
sbb
dec
cmpsl
ljmp
scas
cmp
icebp
sbb
cltd
xchg
sub
shrb
loop
mov
insb
xor
rolb
das
sbb
and
inc
jmp
jns
mov
out
gs
mov
ss
add
sti
ret
jecxz
nop
sbb
dec
dec
add
ja
xchg
movsb
mov
sarl
lea
xor
test
pop
cmpsb
sub
push
push
adc
je
add
xor
fstpl
mov
xor
stos
jbe
fcomps
incl
mov
dec
pushf
int
scas
and
std
xor
jo
cli
loop
or
shl
rcrl
add
jle
xchg
cmp
cmp
test
repz
hlt
pop
inc
adc
push
jle
cmpsb
dec
mov
xor
dec
or
xchg
push
js
or
mov
inc
repz
shlb
inc
mov
jno
mov
mov
cmp
clc
scas
push
jp
push
or
xchg
fsubl
mov
aam
scas
andl
shrl
cld
pop
std
mov
or
pop
cwtl
push
mov
push
push
jae
add
insl
or
pop
xchg
inc
outsl
dec
enter
pop
xchg
mov
imul
or
pop
push
cli
sub
cmpsb
dec
ss
arpl
xor
or
mov
std
dec
xor
test
adc
mov
je
cld
push
xor
adc
sub
bnd
jnp
pushf
jle
sahf
dec
pop
pop
add
pop
push
fdivrs
stc
jle
clc
dec
imul
xchg
xor
jne
out
pop
sbb
pusha
sub
xchg
call
cmpsl
xor
jae
loopne
inc
fwait
decb
scas
pop
sarb
push
movsb
lret
jbe
mov
loope
jb
push
push
push
sub
pop
adc
hlt
xchg
xchg
jmp
dec
mov
pop
mov
dec
dec
mov
ss
adc
adc
inc
xor
jg
in
mov
add
and
aam
adc
push
ret
or
test
mov
fldl
in
mov
mov
lods
push
imul
or
incl
and
adc
cli
insb
pop
jo
mov
push
pop
daa
stc
push
mov
imul
xchg
sub
mov
es
jge
and
and
out
ja
insl
popl
popa
push
add
sub
movsl
and
or
lahf
ret
pop
mov
mov
cmp
jbe
adc
adc
add
jmp
les
ljmp
dec
test
dec
lock
fistpll
cmpsl
hlt
cs
jg
dec
pusha
sub
out
push
jl
in
push
outsb
fldenv
mov
adc
cwtl
popf
xchg
imul
dec
inc
insb
xchg
mulb
or
sbb
repnz
faddp
fldcw
adc
or
into
popa
mov
dec
adc
xor
inc
xchg
push
lods
dec
push
lahf
hlt
pop
gs
ret
sbb
sub
mov
shrl
movsb
mov
xchg
fisubs
pop
movsb
rol
adc
test
xchg
adc
scas
dec
mov
jmp
lea
shrb
fmul
sbb
pop
jg
inc
loopne
jp
or
fstl
cmp
pusha
in
pop
sub
dec
xchg
push
push
popf
lcall
jbe
xorb
mov
in
mov
fstpt
rcrb
and
jne
mov
stc
jae
jp
ret
hlt
pop
in
add
push
adc
insl
lock
dec
mov
adc
jg
cwtl
lcall
and
shrl
pusha
adcl
cmpl
pop
and
dec
or
stc
mov
rorl
jmp
fucom
lods
and
shll
out
dec
imul
lds
mov
movhps
adc
jmp
sbb
adc
cmpsb
repz
fstpt
rolb
mov
flds
push
rorb
insl
mov
jg
testb
add
clc
xchg
fidivrl
shlb
jl
mov
inc
fsts
push
push
mov
shll
lret
fsubr
imul
inc
fisubrs
popa
sti
movsl
pop
jae
and
or
sahf
jo
movsb
lods
repz
mov
lods
xchg
xchg
push
push
rorl
add
daa
stos
or
sub
sub
push
pusha
sub
in
mov
loope
in
lea
lret
je
pop
adc
xchg
loop
cmp
gs
out
jo
outsb
loop,pt
sarl
mulb
mov
fmull
aad
ja,pt
imul
dec
sbb
cmp
cmpb
jbe
add
jne
inc
imul
sbb
out
pop
jne
lretw
inc
push
xchg
push
lea
mov
xor
mov
mov
xlat
push
sub
lds
fstl
or
pop
sbb
inc
int3
adc
shl
cmc
cli
lahf
push
lds
cmp
data16
cli
rcrb
in
jne
mov
addl
add
xorl
xor
movl
cmp
jne
mov
mov
add
mov
mov
mov
xor
push
mov
mov
add
cmp
pop
je
mov
jmp
mov
xor
add
jmp
mov
xor
add
leave
ret
push
mov
push
push
movl
cmpl
je
cmpl
jne
pushl
push
push
call
xor
add
dec
mov
jmp
movl
movl
cmpl
je
cmpl
jne
pushl
push
call
mov
dec
mov
jmp
movl
mov
add
push
mov
xor
add
sub
and
mov
addl
mov
xor
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
push
pushl
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
add
add
imul
mov
cmp
jne
mov
mov
xor
jmp
mov
subl
mov
mov
and
int
bound
or
mov
ja
je
les
dec
xor
push
dec
cltd
mov
and
stos
xor
xor
mov
mov
cwtl
shl
test
popf
lods
fimuls
ret
jne
imul
pop
fwait
mov
mov
outsb
gs
jp
mov
jns
fstl
loop
in
icebp
jnp
mov
jg
lret
sti
pop
mov
ret
sub
adc
lahf
mov
sbb
pop
out
xchg
sub
scas
notl
adc
bound
fwait
in
fdivrl
add
jae
mov
adc
jg
imul
inc
mov
orl
cmp
out
cmpsl
lods
dec
mov
stc
lret
aam
data16
jnp
iret
aad
sti
scas
or
movsl
sbb
add
scas
outsl
xchg
xchg
sbb
pop
nop
jp
fimull
jge
lods
jp
addl
ror
xor
ficoms
ret
mov
mov
call
sub
and
pop
mov
dec
pop
jne
imul
out
adc
pop
pop
jg
mov
jl
std
ffreep
int3
adc
mov
cmc
and
addr16
jle
add
rcrl
fidivrs
mov
scas
dec
out
int
or
xor
jns
pop
cltd
std
jecxz
out
adc
sub
not
or
adc
pop
popf
arpl
scas
or
int3
imul
cmp
in
or
fisttpll
mov
cmpsl
jmp
jno
lock
pop
insb
and
stos
mov
cmp
fdivp
push
in
add
es
jecxz
aad
nop
jae
sarb
dec
leave
add
in
inc
pop
nop
ss
fbld
mov
andl
iret
mov
mov
hlt
pop
push
js
pop
push
movsb
sbb
popf
sub
int3
or
lds
xor
stos
inc
inc
push
pop
jnp
xchg
jecxz
mov
xchg
scas
sub
lcall
push
loope
xor
adc
inc
bswap
bound
cltd
pop
sarl
fidivl
faddl
mov
fildl
cmp
inc
shrl
jbe
push
sub
ss
out
ret
imulb
imul
xchg
daa
mov
popa
mov
adc
cmp
hlt
sub
mov
pop
fiaddl
int3
ds
lods
fwait
test
adc
lahf
lret
inc
mov
sbbb
cmc
mov
mov
cmc
fdiv
xchg
jge
cmp
jnp
xor
mov
fisubrl
mov
ret
jae
adc
out
and
dec
mov
lret
xchg
cwtl
insb
es
sahf
mov
insl
std
loop
jecxz
hlt
sbb
clc
mov
pop
add
mov
inc
jns
push
pop
inc
jmp
mov
push
mov
pop
cmpsl
aam
out
shrl
neg
repz
sub
jl
push
mov
inc
or
out
test
cmpsl
stc
xchg
pop
mov
es
rol
mov
mov
mov
xchg
inc
xor
mov
jns
pop
dec
arpl
jae
inc
mov
add
call
loope
mov
lods
insb
lods
fsubrl
inc
push
sub
fcompl
push
nop
ret
and
popa
push
xor
cli
push
ret
lds
in
mov
arpl
jo
leave
leave
and
push
pop
dec
jae
out
push
jp,pt
and
inc
jle
pop
push
mov
out
inc
repz
sub
mov
fidivrl
push
mov
pop
enter
sarl
mov
jae
lret
dec
sahf
xor
icebp
push
xor
lods
data16
mov
sbb
stos
push
push
stc
lods
imul
rorb
jecxz
loopne
inc
in
sbb
jno
mov
and
jmp
pop
or
bound
in
addl
fldenv
dec
mov
pop
mov
enter
stc
iret
mov
push
ret
aas
out
pusha
popf
pusha
or
outsl
push
xor
jbe
lods
pop
xchg
push
inc
out
add
mov
insb
stc
jmp
push
lret
lcall
and
mov
adc
push
mov
testl
incb
sub
test
inc
je
lds
or
push
jbe
push
idivb
in
call
mov
dec
mov
scas
rol
outsb
add
sti
jno
cmp
subb
ret
sub
cmp
jns
pop
enter
jo
rolb
int3
out
enter
aas
mov
pop
arpl
es
in
or
rcr
mov
sbb
jl
les
inc
jle
mov
cmpsl
pusha
jmp
cmc
rcrl
cmp
lret
add
daa
mov
inc
cmp
sbb
push
rcrl
ljmp
inc
mov
test
fisubs
jmp
lods
mov
scas
repnz
jge
out
dec
or
sub
mov
pop
push
adc
push
ficoml
idivb
filds
das
rcl
jl
add
add
dec
sbb
outsb
push
adcb
cmp
or
repnz
gs
mov
mov
rclb
sub
rcrl
mov
scas
insb
scas
ficompl
pop
ret
and
sub
or
sbb
add
or
adc
xchg
dec
pop
sti
test
clc
sub
repz
test
std
inc
call
fstps
pop
xchg
xchg
and
js
fyl2xp1
or
xor
dec
pop
inc
sti
jl
push
insb
jmp
fsubl
pop
dec
in
aam
rcl
popa
push
in
or
dec
imul
imul
jno
mov
movl
xchg
mov
adc
sub
mov
push
cmpsb
mov
cld
out
xlat
ds
insb
out
int3
outsl
lret
mov
clc
in
mov
call
mov
mov
cld
sbb
mov
dec
mov
fistpl
arpl
xor
fcmovnb
inc
les
popa
je
cmp
call
pushf
adc
imul
pop
in
cmovg
lcall
call
push
lock
adc
cmpsl
push
or
jecxz
cmpsl
jns
iret
in
xor
mov
aad
jo
lret
adc
jge
shlb
std
adc
push
stc
test
cmp
push
jae
std
mov
subb
add
fmull
mov
pop
and
cli
les
sbb
in
jmp
push
icebp
mov
xchg
jb
xor
mov
rorl
add
fidivrl
daa
push
repnz
loope
xchg
in
mov
jp
pop
xor
mov
dec
inc
jle
push
mov
out
out
in
lahf
cmpsb
sbb
lret
cltd
mov
inc
dec
jbe
sub
jg
cmp
dec
mov
or
popf
out
mov
sub
pop
xchg
jg
test
dec
mov
push
fs
push
ret
sub
jae
mov
pusha
insl
pop
cwtl
mov
sahf
jle
test
pushf
stc
sarb
sub
cmpl
push
mov
xor
pop
mov
sbb
jne
rolb
into
sbb
inc
pop
jecxz
mov
push
test
xor
movsl
lahf
dec
and
dec
test
mov
dec
jg
pop
jae
sub
and
lea
jmp
xchg
cmc
mov
pop
mov
jg
jl
call
inc
or
ret
add
addl
nop
inc
xchg
and
jo
dec
push
sbbl
enter
ja
loope
add
out
and
fwait
mov
mov
imul
insl
push
fldcw
popa
xchg
pop
fwait
lret
mov
leave
adc
shlb
and
leave
imul
sti
sbb
repnz
xchg
pop
adcl
fisubrl
sahf
jmp
fmulp
mov
xchg
mov
lret
inc
add
int
imulb
mov
out
xorb
stc
pop
loope
fisttpll
enter
ror
sub
insb
movsl
movsl
mov
in
ja
nop
or
or
inc
mov
xor
push
mov
xchg
les
push
lret
iret
mov
xchg
dec
pop
or
jne
pop
sub
sbb
or
push
fldenv
inc
loope
xchg
movsb
push
ficomps
inc
cmp
mov
and
xlat
leave
cli
aam
xor
pop
cmp
jno
xchg
mov
jnp
cmp
sub
pusha
jbe
iret
bound
mov
insb
push
lock
movsl
lahf
enter
push
xor
mov
sbb
pop
leave
xchg
jp
mov
pop
sub
out
inc
out
jg
out
rolb
dec
xor
popf
push
sahf
push
fnstsw
es
jg
mov
add
jnp
cmp
fyl2xp1
int
rorb
cwtl
fldt
js
clc
xor
fsub
sub
mov
jl
adc
mov
insl
jg
mov
sahf
and
js
lods
sbb
in
test
jecxz
popa
std
xor
cld
aas
pop
call
jnp
mov
or
mov
jmp
xor
xor
shrl
xchg
dec
dec
mov
mov
xor
out
test
jnp
mov
fidivrl
pop
sti
lcall
mov
push
jmp
mov
addr16
adc
lock
int3
nop
cmp
lcall
and
pushf
loopne
dec
call
fisubrl
pop
push
test
push
sub
pop
push
imul
or
cmc
push
in
push
jo
rcrl
dec
stos
dec
jmp
xchg
adc
out
pusha
cmp
and
sbb
gs
gs
sub
test
jns
les
stos
cmp
rolb
fmull
ja
into
sbb
dec
cs
and
je
scas
sbb
adc
xchg
imul
loopne
cmp
imul
push
cli
in
testl
xchg
hlt
xchg
push
in
mov
in
test
push
ret
lret
fsubrs
mov
fildll
add
add
imul
xchg
pushl
imul
mov
xor
cmp
lcall
inc
xlat
adc
pop
or
push
aaa
lret
imul
xor
add
dec
push
dec
dec
nop
push
dec
frstor
rol
mov
jge
mov
sbb
outsb
mov
outsl
or
movsl
cmp
mov
test
cmc
or
lahf
jnp
call
repnz
mov
and
push
jne
cmp
or
scas
cli
and
ret
sub
mov
mov
and
cli
jmp
cmpsb
ss
adc
mov
mov
loop
repz
adc
cmp
shll
xor
insl
pusha
push
out
out
and
mov
out
xchg
sbb
push
inc
stc
roll
jb
pop
cs
bound
sbbl
scas
movsl
ss
sahf
xor
clc
or
sub
movsl
or
mov
push
out
ret
pushf
push
inc
mov
jno
xorb
cs
mov
pushf
inc
movsl
movsb
pop
cmp
insb
fmulp
xchg
cltd
addr16
js
test
jle
arpl
aad
xchg
sub
lods
je
sbb
or
loope
push
add
sti
les
dec
aaa
xchg
inc
daa
pop
mov
imul
insw
lods
pop
lcall
inc
pushf
push
push
int3
fbstp
sbb
inc
dec
add
fsubrs
js
sbb
xchg
addr16
push
dec
jb
ret
test
jle
sbb
andl
cmp
mov
ds
fs
fs
and
shr
jle
ss
sti
outsb
mov
push
mov
das
insb
xor
scas
out
mov
mov
jecxz
orl
sbb
dec
mov
jecxz
test
mov
lods
jnp
sbb
and
xchg
push
sbb
pop
gs
dec
dec
iret
lock
pop
mov
test
lds
mov
jl
std
das
pop
mov
insb
scas
enter
add
xchg
fistl
add
push
sbb
js
add
add
mov
jmp
mov
xlat
call
cwtl
pop
push
pop
adc
test
add
cmp
sub
push
es
test
ret
mov
loopne
loop,pt
and
push
inc
inc
movsl
mov
xchg
mov
pop
call
pop
or
cmpsl
jo
icebp
sub
stos
mov
js
imul
xor
je
add
scas
sub
mov
inc
mov
sbb
lock
addb
ret
jecxz
pop
ret
stos
push
mov
adc
lods
cmc
xchg
mov
mov
sub
or
pushf
pop
call
ficoml
inc
adc
shll
mov
xor
dec
test
jnp
fisttps
clc
mov
xchg
xor
or
into
or
out
arpl
hlt
mov
unpckhps
daa
push
and
lods
adc
xor
and
mov
test
adc
xor
add
xchg
out
popa
inc
inc
mov
cmpsl
adc
ds
adc
xor
in
cmp
jle
mov
or
inc
adc
rcr
loope
aad
mov
into
or
in
inc
dec
ds
inc
movsl
fstp
pop
ljmp
aaa
dec
enter
call
dec
xchg
push
movsb
cltd
std
into
xor
dec
xor
mov
imul
lahf
dec
mov
addr16
mov
push
push
es
repz
fiaddl
cli
shl
in
cmp
dec
add
push
add
js
jnp
icebp
dec
std
or
mov
push
dec
sub
jbe
fidivl
add
mov
imul
pop
rcrb
test
stc
adc
add
scas
cli
jle
sub
ljmp
cmp
or
mov
pop
or
xor
imul
and
subl
adc
les
sbb
mov
lock
outsb
jecxz
dec
out
imull
ret
out
inc
popf
test
leave
ror
insb
cmp
sbbl
sub
sbb
pop
orl
inc
jb
sahf
shll
push
out
leave
lret
xchg
and
leave
fs
jle
add
popf
cmpsl
ds
insl
inc
sbbl
outsb
sti
mov
stos
push
and
fisubs
jmp
imul
pusha
mov
ret
mov
int
fldenv
arpl
mov
xchg
scas
cmp
jle
loopne
xor
mov
xlat
data16
mov
fs
jmp
lahf
popa
add
imul
sti
ss
adc
lret
lds
out
ficoms
xchg
call
and
sbb
push
or
mov
outsl
mov
or
dec
inc
jae
out
sub
mov
sub
sub
mov
cmp
shr
aad
vpcmpeqw
fs
test
icebp
loope
aas
xchg
test
jle
dec
clc
mov
and
in
cmc
sbb
mov
test
jecxz
imul
ss
mov
push
push
icebp
aas
fwait
int
and
mov
insb
aad
cld
lcall
or
fcompl
sub
pop
push
orb
inc
sub
push
popf
mov
loope
mov
jae
rcrb
in
mov
scas
xchg
rorl
in
push
pushf
mov
jg
adc
xchg
cmpsl
jne
pushf
dec
adc
jle
sbb
incb
jo
imull
jnp
stos
pop
inc
gs
mov
ja
pop
addr16
call
insb
ljmp
call
je
int3
das
push
jns
imul
lea
mov
cs
mov
sub
sub
int3
pop
jmp
rorl
bound
cmp
jle
movsb
and
inc
xchg
push
pop
into
cltd
dec
xor
lods
jecxz
orb
dec
ret
fcoms
addr16
xchg
sub
pop
pop
in
cmp
stos
mov
mov
ret
nop
sub
pop
in
into
call
test
add
mov
add
or
sbb
pop
mov
int3
cwtl
adc
xorb
xchg
push
xchg
faddl
adc
and
or
push
lods
stos
pmullw
ja
fdivrl
cli
sbb
in
test
sub
stc
sbb
or
mov
pop
xor
ret
fsub
sub
jo
outsb
dec
loope
sbb
add
stc
mov
jl
xor
mov
xchg
test
clc
je
add
pop
inc
xchg
push
outsb
or
xchg
pop
lahf
loopne
xchg
jmp
fst
mov
sub
dec
push
mov
ja
out
fs
xor
cmpsl
xchg
or
ss
push
sub
xlat
mov
jne
xchg
stos
bound
xlat
js
out
add
mov
dec
std
mov
pop
inc
adc
inc
xchg
ficomps
cmp
cmc
into
mov
setge
cmp
mov
insb
mov
dec
pop
gs
push
add
js
add
pop
adc
mov
rcrb
ds
add
gs
fs
stc
pop
stos
aam
sbb
mov
fcomi
jnp
mov
fimull
in
dec
in
sub
lds
adc
adc
and
sbb
sbb
test
hlt
pop
movsb
cmpsl
enter
hlt
mov
mov
sub
add
or
repnz
clc
add
jp
sbb
push
sub
fmul
movsl
adc
dec
psubusw
mov
push
aam
aaa
fisttps
cli
pop
pop
jae
scas
mov
add
cmp
jg
sbb
jle
stos
jno
sti
mov
jmp
ja
jae
dec
mov
sub
movsl
or
sub
pop
movsb
dec
xchg
pop
sbb
add
pop
pop
es
adcl
insl
test
push
jmp
push
jnp
xor
aam
jns
dec
xor
je
cmp
lods
sub
mov
rolb
push
dec
xor
sub
mov
int3
adc
mov
cld
and
sub
das
repnz
jge
sbb
out
shrb
add
je
mov
xor
mov
sub
das
jnp
ret
xchg
std
pop
out
cmpsb
cwtl
pop
js
ror
popa
mov
pop
movsl
ds
pushf
js
ljmp
sub
notb
aas
sbb
dec
std
lret
imul
lahf
in
cmp
push
das
fidivl
sub
aas
xchg
ret
test
jb
icebp
sub
jge
lret
pusha
mov
or
mov
adc
orb
pop
sti
inc
mov
out
mov
mov
insb
insl
subl
mov
rcll
cmp
pop
fwait
xchg
sbb
jbe
push
cmp
dec
sbb
call
cld
inc
fstpl
sub
addl
xchg
cmp
inc
jnp
jo
enter
rorb
insb
stos
das
push
push
pop
add
imul
inc
cmp
and
icebp
jl
sub
loopne
adc
imul
jne
sub
je
adc
mov
iret
cmp
flds
mov
sahf
decl
dec
inc
fnstenv
push
and
mov
movsl
push
cs
mov
sbb
and
js
popf
cmp
rcrb
mov
in
out
fs
cmp
jg
dec
mov
mov
faddl
cs
push
xchg
or
mov
ret
cmpsl
jb
ret
or
xchg
aas
pop
mov
test
dec
fld
cmpl
cmp
decl
mov
testl
mov
sub
mov
popa
add
test
inc
sub
adc
jbe
xor
push
cmp
rol
mov
adc
dec
imul
in
jnp
aas
adc
jns
xorl
stc
inc
lret
aas
popa
pop
ret
jmp
lcall
out
fdivl
dec
pop
inc
push
jp
mov
sbb
cmp
jecxz
lods
xchg
mov
mov
mov
dec
dec
mov
leave
push
in
sub
es
pop
and
mov
jbe
lret
repnz
enter
xor
es
inc
aaa
push
clc
push
lock
out
sub
fwait
mov
shll
ds
pop
mov
mov
mov
stc
outsl
subl
xchg
lcall
push
cwtl
lahf
add
or
or
pop
inc
pop
insb
loop
jae
mov
sbb
mov
pop
pop
rclb
in
shlb
test
xchg
outsb
call
in
int
fsub
xor
dec
pop
cmp
jbe,pt
mov
jne
mov
jns
xor
xor
std
loope
test
ds
call
jnp
dec
sbb
fisubl
callw
or
adc
inc
ds
gs
push
test
pop
and
add
dec
push
or
mov
loopne
addr16
scas
test
push
fstpt
mov
xchg
in
cmp
test
mov
jnp
data16
adcl
js
repnz
cmp
imul
mov
out
inc
adc
adc
mov
mov
xchg
push
push
xchg
mov
or
mov
mov
mov
aas
mov
dec
jb
sbb
jg
mov
push
imul
ret
pop
mov
xchg
cwtl
add
outsb
add
mov
jo
push
gs
push
pop
in
add
mov
pop
mov
xchg
repnz
into
sbb
jbe
iret
adc
lds
add
gs
xchg
lds
cmpsb
out
popa
jno,pn
inc
sbb
stc
fiaddl
jmp
rcr
std
push
call
movd
and
adc
stc
adc
cmp
loopne
ret
mov
mov
out
iret
xchg
fcompl
dec
shl
fdivrl
test
push
pop
cmp
popf
sarb
adc
add
fld
out
adc
add
sbb
fidivl
or
sbb
xlat
xchg
popa
popa
sbb
pop
mov
pop
outsl
lcall
mov
lcall
push
es
movsb
jb
xchg
lods
pushf
sti
dec
bsf
sbb
mov
xchg
mov
xor
das
jne
jbe
and
jle
std
shrb
aas
sti
lds
stos
cmp
jmp
mov
ljmp
stos
out
int3
cmp
jnp
aas
mov
xchg
stc
jmp
pop
pop
lahf
sbb
jne
rcll
mov
aad
cmp
mov
push
xchg
inc
push
xchg
mov
pop
jle
pop
stos
mov
mov
jb
or
sub
pop
adc
inc
pop
xchg
mov
insl
je
push
adc
xor
je
xor
jg
fs
cmp
in
inc
mov
mov
scas
jb
ss
push
push
faddp
dec
test
mov
out
sar
mov
adc
loop
pop
add
and
int3
jmp
adc
jae
sbb
push
dec
mov
mov
clc
pop
pop
fs
aas
in
inc
dec
loopnew,pn
mov
lock
insl
cli
in
cwtl
push
mov
movsl
je
hlt
push
into
jne
sahf
shlb
repnz
mov
ja
shll
fidivl
pop
stc
stc
pop
pop
sub
xorb
hlt
jl
cmp
icebp
sub
fs
repz
std
fidivrl
push
inc
fdiv
dec
push
push
inc
dec
cmp
jne
loope
and
add
ret
inc
and
push
in
inc
fidivs
xchg
xchg
mov
scas
in
sbb
jmp
and
jge
addb
fsts
mov
jb
mov
lods
sub
daa
sti
fldt
and
and
sub
mov
sbb
out
dec
sub
lea
mov
cltd
jle
xorl
adc
test
or
xor
fstpt
inc
cmp
loopne
or
jge
sub
lock
lret
cmp
pop
jae
or
cmp
xchg
loop
popf
insl
lcall
or
lret
fadds
mov
or
sub
mov
imul
cmpsb
jns
shr
dec
or
fwait
pop
test
repz
or
fldl
push
fidivrl
cli
cmpl
inc
lret
outsb
or
and
sub
aaa
sbb
repnz
mov
sbbb
jbe
mull
imul
jae
xor
addb
mov
xchg
mov
imul
mov
adc
int3
test
lahf
or
aaa
neg
sbbl
and
add
in
jo
pop
mov
lods
cmp
mov
sbb
cs
cmp
shlb
pop
mov
in
or
push
cmp
in
aas
ds
test
ret
repz
push
addr16
aaa
rcll
inc
sub
add
repz
mov
movsl
mov
mov
dec
sti
sub
inc
push
lret
in
adc
lds
int3
jg
imul
divl
dec
dec
mov
xchg
xlat
inc
aad
loope
scas
leave
push
imul
je
fs
sahf
jb
mov
mov
out
dec
nop
and
xchg
jecxz
outsl
jmp
aam
mov
imul
pop
xchg
gs
je
jae
aaa
jl
cmp
pop
jl
xor
out
lock
fwait
push
pop
jge
sub
jnp
mov
mov
pop
lret
xor
ret
sbb
mov
shrl
fsubrs
jmp
stc
dec
or
ds
push
inc
aaa
push
hlt
push
mov
in
das
iret
mov
filds
add
les
dec
mov
enter
stos
push
adc
ds
test
in
repnz
test
iret
sahf
push
add
jg
push
mov
data16
push
out
and
fstps
dec
mov
lret
out
fnstcw
sub
adc
jg
and
or
adc
push
inc
xchg
in
xor
outsb
dec
pop
test
dec
add
ss
pop
pop
xchg
mov
adc
int
lds
mov
adc
fs
shl
lods
cmpsb
mov
movsl
stos
fs
add
xchg
mov
in
pop
lret
lahf
jae
and
add
jg
pop
nop
out
xchg
mov
out
cmp
iret
out
scas
loopne
mov
lret
ret
sar
in
mov
fcompl
lock
stos
add
stos
repnz
sti
aad
add
sub
jmp
sbb
jl
push
push
sahf
or
mov
pop
pop
sub
or
jp
mov
andb
call
outsb
rcrl
lcall
inc
sbb
adcb
pcmpgtw
cmp
lret
and
test
insl
movaps
iret
fwait
mov
jbe
mov
insb
mov
push
xor
mov
jl
or
pop
cli
pop
jae
pop
or
mov
or
mov
lret
pusha
jp
into
push
imul
ds
jle
and
sub
and
pop
or
mov
xchg
and
outsb
mov
lock
pop
subl
pop
lea
enter
arpl
iret
cmp
jne
inc
shlb
pop
mov
mov
lods
insb
jle
pop
mov
movsb
test
mov
pop
aas
or
rorl
dec
jns
scas
jns
imul
jl
or
hlt
add
adcb
mov
jbe
repnz
cmc
je
add
mov
inc
scas
sbb
mov
ja
mov
cmp
or
push
mov
mov
cmp
pop
inc
bound
mov
incl
pop
mov
pushf
ljmp
cwtl
push
adc
pop
cmp
outsl
je
cld
jb
sbb
fdivrs
adc
into
inc
xchg
and
bound
and
pop
pop
mov
mov
clc
divb
arpl
shlb
push
sub
mov
in
inc
ja
jo
push
jne
outsb
insb
test
mov
addr16
fmull
test
push
sti
int
push
jae
stos
outsb
add
addl
sub
adc
mov
scas
jl
aas
out
push
and
cmp
jo
movsb
cmpsl
pop
lcall
mov
je
pop
loope
loop
xlat
jbe
out
jne
cmpsb
outsl
mov
jl
fists
xchg
jge
pop
sbb
push
mov
xchg
sbb
inc
jno
mov
inc
mov
icebp
xchg
lds
xchg
sub
movsb
adc
aad
add
xchg
mov
cltd
push
mov
bound
cmp
cmc
pop
sbb
testb
push
xchg
rcr
xor
mov
movsl
std
sbb
add
cmp
lahf
cmpl
and
cmp
cwtl
mov
cmp
mov
push
int3
clc
out
pop
cmp
jecxz
mov
test
ljmp
sahf
jmp
je
test
ljmp
jno
mov
xor
pop
jo
nop
xchg
test
lret
fisubl
mov
rcl
incb
push
loopne
pop
pusha
adc
mov
sbb
or
imulb
pop
movsl
stos
jp
out
xchg
div
sbb
add
lret
inc
pop
push
in
cli
add
xchg
sbb
popa
loop
das
pop
enter
jns
push
push
shrl
lcall
movsl
rcrb
out
or
mov
cmp
fmulp
or
sub
movsl
xor
cmp
inc
push
mov
or
scas
data16
mov
movsb
icebp
xlat
sub
pop
push
xor
xor
pop
xchg
outsb
jp
xor
bound
mov
mov
adc
inc
adc
test
es
sub
cmpsl
out
mov
mov
out
or
adc
ljmp
dec
fimuls
ficomps
and
mov
roll
push
mov
add
sub
insb
or
sbb
sbb
imull
out
mov
cmc
les
xchg
push
mov
pop
xchg
dec
lcall
in
add
data16
mov
loop
mov
pop
mov
outsl
int3
sub
push
shll
lcall
sbb
jns
mov
lcall
insb
jmp
xor
add
add
imul
jmp
mov
mov
mov
mov
mov
xor
xor
add
add
imul
mov
cmp
mov
je
xor
jmp
aaa
dec
cmpsl
sbb
xchg
and
ds
add
int
bound
aas
sub
xchg
test
into
xchg
pop
or
jp
inc
stos
ja
mov
jecxz
mov
in
add
test
lea
and
les
pop
push
aaa
loope
jno
loope
fnsave
dec
dec
or
sarl
dec
pushf
xchg
in
outsb
xchg
call
adc
and
and
jne
sbb
mov
add
xchg
cli
add
mov
adc
fdivrl
push
lds
dec
pop
push
add
xchg
adc
mov
pop
xchg
fisubs
jb
cmp
sbb
jnp
sbb
xor
mov
xchg
xchg
mov
in
sub
or
sarb
xor
fildl
push
dec
les
lret
arpl
je
mov
insb
cli
adc
xor
mov
inc
dec
or
inc
mov
mov
dec
out
xchg
adc
jae
mov
jp
pop
repz
jl
inc
push
cs
xor
scas
inc
mul
dec
popf
sahf
ja
ret
push
iret
fistpl
and
out
fnstsw
cwtl
sbb
fidivrl
xchg
stc
div
cmp
jbe
adc
mov
cld
xor
push
test
or
mov
mov
adc
sbb
sub
add
mov
pop
sbb
pop
mov
push
leave
clc
mov
mov
push
mov
das
in
push
andb
xor
fcom
mov
pusha
mov
es
mov
mov
add
adc
test
sub
add
loop
adc
je
jmp
cmpsb
das
or
cmp
push
jne
imul
dec
cmp
jge
cmc
add
sahf
xlat
mov
cltd
jg
in
out
imul
fwait
xor
sti
ljmp
orl
pop
push
adc
test
out
dec
outsl
jle
inc
icebp
dec
and
inc
arpl
xchg
inc
sbb
fldlg2
inc
dec
xor
divb
int3
das
cli
pop
or
notb
inc
jle
iret
add
inc
js
mov
and
loope
outsb
iret
sub
jno
inc
push
sbb
stos
or
mov
push
nop
subl
push
js
pop
jo
and
adc
xor
sub
data16
mov
ds
jno
andl
cld
pop
pop
mov
icebp
jecxz
nop
inc
xchg
pop
stos
fistl
and
loop
repz
jmp
mov
sti
push
and
inc
shll
lret
pop
lcall
xchg
mov
dec
mov
jbe
inc
pop
xor
mov
push
mov
add
cmp
adc
jl
inc
mov
sub
loope
ljmp
fists
sbb
mov
lods
out
inc
and
outsb
and
or
arpl
cmc
add
mov
in
int
mov
and
add
sub
xchg
sub
xor
mov
dec
mov
ljmp
mov
sbb
xchg
lods
mov
sarb
push
jae
test
rcll
ja
popf
data16
inc
push
dec
dec
cmp
add
sub
cmp
or
popf
adc
adc
sub
pop
loop
outsl
repz
xor
xchg
movsl
pushf
in
inc
adc
pop
xchg
xlat
in
xchg
push
pushf
mov
movsb
push
mov
insb
out
lock
ds
dec
sti
das
push
cmpsb
xor
outsl
mov
push
push
aam
call
aad
push
inc
dec
faddp
mov
mov
mov
pop
aas
or
movsl
mov
scas
inc
psubw
call
stc
sub
push
adc
xor
push
push
xor
dec
insl
cwtl
xchg
push
mov
out
sbb
cmc
mov
push
roll
pop
pop
repz
cmp
xchg
mov
insb
cli
movsb
cmpsb
xor
nop
mov
cmpsl
mov
sar
cmpsb
inc
jo
ds
sbb
aad
fimull
pop
fcomp
inc
inc
movsb
orb
icebp
out
je
mov
andl
mov
in
sub
fadd
inc
jnp
cmpl
mov
out
inc
movsl
outsl
test
stos
dec
mov
adc
add
jae
inc
addb
loope
xchg
or
sti
mov
loop
cmp
push
outsb
jne
data16
imull
ds
hlt
test
add
mov
ret
test
or
xchg
inc
repnz
or
mov
inc
rorb
mov
movsb
xor
mov
mov
mov
mov
inc
enter
ds
arpl
push
insb
xorps
lods
fsubl
sbb
push
adc
mov
fdiv
in
mov
mov
std
adc
test
fbld
ss
inc
push
flds
jns
rcrl
lds
or
sub
xchg
loopne
test
push
fstpl
icebp
push
sub
lahf
jp
clc
iret
inc
rclb
mov
test
ret
adc
test
pop
inc
lcall
xchg
mov
push
adc
mov
aaa
dec
ret
lcall
pop
outsb
lods
inc
cmpsb
cwtl
jbe
pop
sbb
push
cmc
sbb
int3
das
lods
add
in
addr16
and
enter
and
mov
data16
cltd
lcall
sub
mov
dec
xor
test
pop
inc
imull
and
pop
cmp
push
mov
or
scas
cmp
in
imul
nop
lcall
cli
push
sub
aas
dec
frstor
or
dec
loope
leave
xchg
es
push
mov
popa
test
repnz
mov
lea
add
fdivrs
test
push
lcall
shlb
stos
and
imul
movnti
cmpsb
cmpb
jg
mov
scas
fwait
dec
clc
popf
pusha
xchg
jnp,pt
mov
jae
push
pop
dec
dec
cmc
jno
das
mov
cli
outsb
ss
lods
fnstenv
test
mov
cmp
push
addr16
push
cmp
fcoms
add
dec
aas
add
in
sahf
dec
jnp
cmp
fimull
aas
ret
mov
push
mov
je
stos
or
gs
call
ret
and
push
xor
jge
call
mov
ja
in
push
cmc
sub
scas
lcall
sub
dec
push
imul
gs
clc
mov
pop
dec
dec
setb
pop
sub
xlat
stos
shll
cli
jg
cmpsb
cs
mov
lock
das
aad
add
jp
push
fildl
mov
jne
out
ljmp
mov
sbb
data16
testb
cmp
add
lock
rol
cmp
inc
fstps
clc
mov
push
sbb
pop
stc
mov
lcall
xchg
sbb
or
dec
ror
cmp
cld
cmp
lret
iret
xchg
mov
leave
push
xor
vmwrite
out
pop
jb
aas
clc
into
fisubl
roll
cmp
mov
add
mov
sbb
divb
insb
cmp
sbb
push
adc
std
ja
mov
sbbb
lahf
sbb
xchg
shrl
repnz
imul
xchg
mov
pop
fisttpl
xchg
lods
sahf
ljmp
jne
mov
jmp
cli
xor
rorl
sub
ficomps
pusha
les
scas
adc
xchg
and
scas
add
sti
sub
mov
les
cwtl
jne
push
xor
out
lods
xchg
lcall
lcall
clc
cli
jb
or
xchg
cld
xor
test
sbb
and
sub
imul
mov
and
push
or
repz
pop
mov
xor
xor
push
das
and
jnp
fs
paddd
mov
mov
pop
and
gs
ds
je
pushf
push
std
jmp
xor
insb
leave
cmpsl
loopne
inc
pop
fs
call
xchg
scas
ss
sbb
mov
dec
stos
cmp
inc
dec
and
mov
mov
pop
into
cmp
add
sub
in
sbb
fildll
xchg
cmp
sbb
xchg
cmc
fwait
cmp
sbb
nop
push
in
ja
push
xchg
fstpl
push
cmp
pushf
and
jecxz
mov
popa
daa
or
pop
mov
sahf
push
in
leave
xor
jge
cwtl
fistpll
inc
push
cmc
mov
pop
ret
lahf
mov
call
mov
and
mov
test
push
sbb
cli
insl
mov
sbb
int3
mov
mov
testb
xchg
mov
fnsave
sbb
pusha
fs
outsb
mov
stos
push
fiadds
inc
gs
sub
pop
stos
mov
xchg
mov
in
xchg
push
rclb
js
xor
lds
test
cltd
xchg
push
add
jle
test
mov
add
sub
movsb
arpl
sub
mov
xorb
mov
xchg
sub
push
xchg
mov
pop
into
adc
push
and
xchg
arpl
sbb
or
inc
adc
cmc
add
jns
push
inc
cld
and
xchg
das
test
xor
push
jp
mov
mov
pop
idivl
or
fidivrl
push
jnp
cwtl
sbb
scas
pop
xchg
sbbl
aam
cmpl
inc
popa
push
lods
cmp
subl
imul
dec
mov
popa
mov
jecxz
adc
add
loopne
dec
aaa
mov
mov
and
dec
into
imul
nop
add
xchg
cltd
dec
sahf
movl
pop
fistpl
cld
ret
inc
cli
popf
mov
icebp
jl
mov
std
bound
mov
adcl
repnz
sahf
ficoml
mov
mov
outsl
out
add
push
pop
jne
daa
dec
sub
adc
mov
jne
xor
imul
xchg
dec
inc
dec
sti
imulb
cmp
sti
sbb
mov
fmuls
icebp
leave
out
cld
arpl
rorl
sarb
xor
dec
fstl
loope
mov
leave
jle
dec
inc
xchg
inc
cwtl
dec
rcrl
das
or
fucomi
cmpsb
mov
aad
xlat
and
fidivs
lea
mov
cltd
inc
or
fmull
daa
mov
add
ret
inc
ret
scas
fistps
cld
adc
loope
mov
ret
stos
sub
mov
push
lods
pop
mov
mov
clc
mulb
in
mov
rcr
into
bound
mov
inc
cmp
push
sbb
mov
call
roll
adc
pop
cltd
inc
jmp
andl
or
es
fiadds
enter
gs
ret
push
xchg
jle
mov
popf
imul
lock
push
xchg
cmp
jl
test
mov
pop
popa
mov
jle
in
push
mov
jnp
push
add
mov
pop
push
ss
fldcw
cmp
sub
shlb
rcr
xchg
testb
aaa
add
xor
sub
test
push
ret
push
shrb
das
mov
mov
out
or
ljmp
pop
mov
jae
stc
arpl
mov
sub
mov
pop
mov
arpl
insb
fst
pop
mov
insl
stos
fisttpl
orl
es
adc
jmp
jae
out
jns
mov
int3
jl
insl
inc
insl
sahf
adc
in
popf
fs
jno
xor
pmaxsw
aaa
mov
sbb
dec
inc
pmaxub
or
adc
call
sbb
leave
mov
sti
in
xor
ljmp
sbb
in
adc
enter
out
call
js
sub
mov
jl
add
adc
hlt
es
push
mov
sahf
cmc
fimuls
cmc
or
jns
dec
mov
std
and
shll
ss
add
and
add
outsb
test
pop
movsb
add
pop
push
adc
hlt
loop
stos
pop
or
cmp
fs
imul
jecxz
inc
mov
out
in
test
leave
idiv
cmpsb
mov
inc
mov
or
dec
iret
lret
stos
pop
lock
pop
and
xor
imul
repnz
movsb
jl
js
repz
push
scas
inc
and
cmp
adc
xchg
mov
mov
leave
lods
int
aam
test
loopne
push
xchg
fs
out
jecxz
fwait
bound
jmp
dec
into
push
mov
xchg
jmp
sahf
popa
int
mov
jmp
push
hlt
or
out
cwtl
sbb
jb
dec
mul
cmpsb
cmpsl
ja
or
inc
ljmp
sbb
call
rclb
clc
adc
mov
out
sbb
sub
leave
pop
pushf
clc
pop
xchg
mov
jmp
jg
sbb
dec
imul
leave
add
xor
addb
mov
movsb
mov
out
cmpsb
call
mov
shrl
sbb
lahf
cmpsb
std
stos
jl
adc
fisubrs
outsl
and
and
jb
pop
fisubrs
inc
js
cmp
mov
sbb
push
inc
pop
inc
mov
jmp
sub
nop
mov
and
jnp
inc
push
or
test
lahf
lds
stos
inc
mov
dec
aas
add
pushl
aad
iret
sub
out
jb
movsb
stos
cli
xor
stc
hlt
lret
sub
int3
test
mulb
dec
pusha
push
mov
jo
jmp
jb
clc
ror
leave
out
sub
push
repz
test
ljmp
dec
fidivl
xchg
jmp
mov
mov
xchg
push
lock
roll
mov
pop
push
clc
rcr
sbb
cmpsl
sub
push
insb
popf
add
fwait
lods
sarb
xchg
cmpsl
dec
and
andl
mov
popl
cmp
js
add
inc
sbb
inc
mov
rclb
push
inc
add
add
movsb
jp
push
fbstp
out
mov
and
cmp
aas
jmp
mov
ljmp
paddq
out
sub
xlat
fstps
cmp
sub
jg
lcall
add
lret
rcl
rcrb
hlt
imul
inc
out
adc
movsl
jle
gs
dec
std
or
ret
movl
push
dec
sub
enter
dec
test
leave
sub
or
mov
ret
xchg
add
sub
xchg
inc
dec
rolb
mov
shrl
mov
hlt
mov
cwtl
loope
push
addr16
stos
cmp
scas
dec
cld
popf
cltd
cmp
test
push
mov
insb
pop
sub
sub
hlt
cs
push
jecxz
and
mov
jns
ret
xor
mov
dec
sbb
mov
or
mov
sbb
in
rep
cmpl
je
add
xchg
adc
jae
pop
lock
shr
lret
fdivrs
jb
or
adc
mov
insb
mov
pop
push
scas
sub
jecxz
iret
cmpsl
push
add
sbb
xchg
adc
std
or
dec
push
daa
das
mov
lods
sub
sbb
clc
inc
push
push
leave
pop
popf
add
add
mov
clc
aas
in
or
xchg
icebp
mov
cmp
xor
pushf
loopne
aaa
sarl
push
clc
cwtl
sub
mov
or
enter
jno
shr
outsb
lea
xchg
pushf
or
xchg
fs
add
test
adc
pop
ret
mov
lret
push
sahf
stc
jge
push
ja
sbb
xchg
dec
lret
imull
jae
pusha
lahf
clc
int
insb
frstor
shlb
sub
sbb
xchg
int3
lds
and
push
icebp
data16
cli
insl
insl
adc
and
das
xor
mov
cs
sbb
add
fcomp
jno
inc
pop
leave
stos
cmp
cmp
lods
lret
sub
push
clc
adc
sub
fwait
mov
sbb
inc
mov
dec
outsb
imul
add
nop
mov
cld
xor
popl
xchg
cmp
mov
or
daa
popf
not
test
push
add
iret
xchg
or
arpl
fdivl
int
xchg
mov
pop
addr16
pop
mov
mov
sub
xor
dec
cmpsl
mov
dec
mov
push
outsb
fidivrl
arpl
cmp
pop
pop
lock
jo
loop
dec
mov
loopne
push
xchg
pop
push
loop
std
scas
jo
pop
insb
push
bswap
sbb
cwtl
and
lret
inc
or
addb
mov
jmp
dec
push
sub
or
add
pop
stos
cmp
stos
in
ds
outsl
es
sarl
push
inc
call
movsl
pop
inc
or
xor
jecxz
lahf
mov
jb
jns
lcall
mov
rorb
dec
outsl
scas
push
jecxz
roll
dec
icebp
push
fldt
cld
lock
out
arpl
daa
sbb
cmp
jae
adc
cmpsb
hlt
xlat
adc
pusha
cmpsb
cmp
sub
mov
in
and
daa
adc
jg
leave
mov
mov
add
xor
cmpsb
fs
jne
jae
xor
test
xchg
mov
pop
repz
lahf
sub
mov
ror
lret
incb
push
sbb
inc
add
ret
out
imul
fmull
lret
cli
push
xchg
int3
mov
rol
data16
xchg
add
sahf
adc
imul
mov
negb
notl
cmp
push
cs
pop
test
xchg
push
orb
adc
daa
loop
sbb
ret
mov
shr
popw
pushf
xlat
add
dec
in
popf
stos
xchg
pop
aam
pop
fcompl
mov
xor
mov
in
sbb
xor
scas
orb
out
and
mov
sub
data16
rcrl
shrl
push
push
fwait
inc
jbe,pt
pop
jp
cmc
test
mov
mov
cltd
repnz
out
test
out
xor
xlat
scas
pop
lods
pop
xchg
negl
cwtl
cmp
cli
cmp
repz
inc
inc
js
adc
dec
adc
mov
cs
stos
ljmp
xor
inc
jecxz
pop
loop
push
cmc
sahf
lret
or
mov
in
cmp
xor
aad
fcmovu
mov
outsb
add
rcrl
push
jbe
sub
inc
mov
sub
ret
pop
push
loopne
cs
mov
dec
mov
adc
dec
addl
mov
stos
daa
jne
mov
xor
cmp
xorl
je
fldcw
xor
iret
sbbb
ja
jg
add
cmp
sar
int3
mov
in
int
aaa
mul
ljmp
lcall
add
stc
xor
cmp
testl
push
xor
incb
xor
adc
fsts
inc
mov
cwtl
xchg
inc
xor
xchg
dec
lock
push
nop
dec
adc
adc
sub
mov
fisubl
mov
jl
pop
scas
xchg
xor
push
push
mov
fwait
mov
rcr
call
xchg
pusha
cmp
push
stos
mov
xchg
loope
push
adc
and
mov
aad
or
inc
sbb
and
fsubp
cmp
sub
std
cmpsl
mov
test
sbb
loope
lea
pushf
nop
jnp
xchg
mov
subl
sbbl
cwtl
andl
leave
sbb
adc
orl
and
imul
in
push
ret
cmp
cmpb
jne
loope
cli
test
dec
hlt
popa
dec
aad
cmp
mov
sub
push
sbb
arpl
pop
adc
scas
jecxz
int3
mov
pushf
jge
fwait
cmpsl
lods
mov
inc
es
sbb
and
mov
fcmovb
add
xor
sub
test
test
adc
xlat
movsl
xchg
call
mov
mov
shrl
inc
in
test
jmp
js
cmp
repz
out
clc
cmp
shrb
adc
mov
jp
mov
pop
xorb
cmpsb
xchg
and
cmpl
out
lods
or
daa
sub
adc
ss
xchg
inc
daa
xor
or
xchg
sub
and
or
addr16
or
inc
xor
jae
xor
loopne
ret
adc
out
repz
jnp
xchg
pop
sub
and
xchg
cmp
push
pop
stos
mov
pop
imul
push
mov
xor
dec
sub
and
cwtl
leave
ljmp
cwtl
js
xchg
mov
imul
pop
jnp
add
dec
lods
pop
adc
scas
clc
xchg
pushf
shll
jle
push
jmp
inc
jns
and
pop
sub
sbb
lock
aad
scas
out
dec
repz
pusha
add
cmp
pusha
cmp
fldcw
jp
repz
jecxz
sbb
pop
xor
shlb
das
pushf
sbb
hlt
inc
sarb
loop
daa
mov
mov
in
add
sbb
sbb
testl
pop
xor
or
rol
in
es
xor
and
out
mov
sarb
sbb
pop
mov
adc
adc
jns
inc
jbe
xchg
test
pop
leave
push
mov
das
into
add
and
xchg
pop
xchg
stos
stos
xchg
add
dec
test
pop
mov
sub
inc
mov
jnp
mov
push
sbb
cmpsb
lods
enter
mov
xchg
jne
cwtl
sub
mov
mov
xor
adc
outsl
in
sbb
cmp
inc
es
jb
or
out
xchg
and
outsl
sub
outsb
leave
pop
bound
xor
adc
sarl
pop
dec
mov
push
cmc
xchg
mov
sti
test
push
scas
adc
jae
dec
daa
imul
and
into
call
pushf
push
pop
jp
lds
fidivs
int3
stos
mov
mulb
inc
push
outsb
mov
dec
jecxz
dec
mov
cmpsb
aas
filds
bound
scas
push
stc
out
int
rcrl
adc
ret
ret
jbe
ljmp
dec
aaa
cmp
icebp
insb
mov
daa
cltd
xor
inc
lret
loop
movsb
orb
mov
fxch
adc
jmp
or
xchg
push
mov
aaa
lock
fwait
sub
dec
jne
jp
dec
add
fistl
movsl
push
sar
insl
xlat
rclb
insl
inc
inc
mov
aaa
jnp
jo
enter
mov
mov
negb
sbb
mov
ja
push
test
inc
test
sbb
mov
lds
mov
add
mov
push
cmp
sub
sti
jp
push
push
jae
dec
mov
xchg
cmpsl
rclb
sbb
push
pop
push
lret
push
adcl
insl
jge
sub
push
mov
stos
mov
outsl
add
cmp
fs
sub
xchg
outsl
adc
iret
jno
jl
jbe
mov
lret
ds
sub
hlt
lock
lods
add
enter
arpl
xchg
int
pop
jo
test
cltd
ljmp
jmp
sub
jp
jns
sbb
xchg
cltd
pop
jno
xchg
push
dec
iret
js
xor
repz
fisubs
add
neg
es
fnsave
std
mov
mov
sbb
ret
jg
pop
pop
pop
rolb
cmp
shll
mov
mov
push
adc
jbe
add
cwtl
mov
mov
rcl
icebp
mov
test
mov
fs
mov
mov
inc
dec
shlb
cmpsb
mov
aam
jo
push
xchg
lds
mov
sbb
dec
pusha
xlat
add
jle
sbb
adc
add
push
loope
sbb
nop
loop
push
pop
pushf
fstl
mov
movl
out
out
jbe
in
sbb
out
push
js
or
pop
sahf
fwait
dec
sbb
xchg
adc
mov
je
es
pusha
loope
jae
push
out
mov
out
fisubs
cmp
push
divl
xchg
pop
ds
cmp
mov
stc
pop
push
cmp
arpl
pushl
dec
pushf
cmp
and
test
iret
repnz
jb
outsl
out
adc
movsb
filds
mov
lcall
movsl
mov
push
sti
lret
aas
or
call
stc
clc
mov
sahf
dec
leave
push
outsb
push
inc
hlt
mov
mov
cmc
data16
inc
sahf
pop
leave
inc
mov
adc
in
jnp
cwtl
ret
cmc
arpl
hlt
lret
inc
pop
lret
lods
jb
movsb
ljmp
mov
add
or
lret
jle
xor
mov
ds
lcall
pop
lret
cmpb
mov
cli
sti
add
call
jecxz
mov
adc
jae
cwtl
push
xchg
in
fwait
dec
arpl
daa
sbbb
enter
push
lret
push
loopne
jp
pop
mov
les
scas
jne
data16
cltd
push
mov
and
jmp
push
mov
mov
je
sbb
sub
and
mov
xchg
rol
cli
push
data16
int3
jbe
push
sub
mov
fidivs
mov
jo
jmp
mov
ror
mov
add
mov
jle
rcll
popf
xchg
push
stos
outsl
push
jns
ja
xchg
hlt
cmp
push
xor
hlt
sub
in
aas
popf
loope
into
negb
das
and
cs
out
push
repnz
loope
in
and
mov
pusha
xchg
test
push
loope
sbb
xor
push
nop
mov
mov
fsubrl
sbb
arpl
sbb
in
sbb
inc
pop
fs
aam
jae
or
push
pop
imul
push
out
push
or
cmp
dec
sbb
push
outsl
popf
test
in
push
mov
sub
cltd
xchg
or
push
mov
and
cli
ret
subl
pop
in
dec
push
outsb
inc
jp,pn
push
iret
jl
pop
es
loopne
cli
jo
andb
scas
sti
lock
outsl
int3
test
xor
push
ja
or
cmpsb
cs
sbb
push
jge
call
incl
loop
xchg
sub
lods
in
and
sar
int
sbb
loop
test
mov
adc
mov
add
jmp
xchg
dec
mov
jae
div
pop
mov
pop
or
mov
adc
bound
jo
jnp
push
cmc
push
lods
push
push
and
sbb
cmp
lcall
add
jnp
pop
sbb
jmp
js
arpl
sub
enter
xchg
mov
ret
sub
mov
dec
pop
cltd
ss
cmp
and
adc
pop
xchg
jmp
fs
dec
mov
dec
scas
aam
loope
stc
mov
xchg
in
push
add
push
sti
scas
and
jae
xor
icebp
cmp
add
out
mov
mov
hlt
scas
out
and
pop
jo
push
dec
push
imul
mov
aam
mov
xchg
mov
sbbb
dec
incb
iret
out
mov
and
xchg
xchg
int3
ret
xchg
dec
sbb
mov
cmpsl
sub
es
lea
je
loope
cwtl
mov
dec
add
adcl
mov
roll
out
loope
shll
les
lret
jo
adc
aad
test
cmp
dec
call
sbb
push
mov
sub
repnz
sub
icebp
and
mov
daa
sub
pop
lahf
cs
xchg
ret
stos
pop
test
sahf
imul
mov
sti
xchg
cli
dec
or
mov
adc
idiv
shll
adc
add
sbb
sarl
push
ja
pushf
sbb
jmp
xlat
mov
out
popf
jmp
or
sub
cmc
jg
mov
test
mov
loopne
jg
push
clc
out
imul
mov
push
sub
into
test
fbld
jmp
xor
dec
stc
jg
shrb
je
lret
mov
sbb
idivl
repnz
jp
sub
lret
add
push
aam
ret
sbb
xor
cltd
loop
adc
out
cltd
mov
pop
sbb
mov
sarb
div
or
sbb
leave
nop
cmp
out
jmp
and
mov
jmp
inc
out
push
dec
movsb
lds
cmpsl
jmp
iret
mov
mov
clc
ret
insb
xor
icebp
pushf
fwait
lods
sbb
std
popl
jl,pt
into
jle
scas
xchg
pusha
shll
bound
jo
cmp
sub
imul
rolb
push
loope
pop
jbe
push
push
iret
pop
and
hlt
sub
cmp
xor
loopne
fbld
or
ret
xorl
xchg
jb
in
sbb
xchg
data16
xchg
insl
lock
mov
arpl
ja
cmp
mov
cwtl
push
xchg
cmp
jb
or
inc
addr16
and
inc
out
sub
shlb
sub
dec
jo
mov
jle
inc
mov
test
lods
lds
jbe
es
in
jle
push
dec
sub
push
lcall
or
mov
or
les
lock
scas
jg
xor
and
cmp
cmpsl
mov
fbld
or
dec
popa
xchg
xor
mulb
push
jmp
stos
sbb
iret
push
dec
lret
orl
xchg
mov
mov
mull
mov
orl
mov
test
aas
jge
fnstsw
fisubs
push
jns
mov
mov
fst
sub
dec
enter
fwait
or
rcrb
mov
imul
out
mov
clc
daa
xchg
jnp
clc
loopne
ja
test
xlat
jae
scas
out
pushf
mov
push
jb
rcrb
push
mov
mov
lea
lea
shll
sub
add
adc
mov
and
push
xchg
pop
push
decl
or
inc
bound
mov
rorb
inc
dec
mov
and
add
push
lds
sahf
mov
push
adc
cltd
mov
cli
cmpsb
fmuls
add
inc
lods
xor
add
push
popa
sub
and
shl
jmp
imulb
mulb
mov
movsl
sbb
stc
push
xchg
cmp
or
mov
xchg
cmpsb
scas
ds
sub
int
ret
scas
jo
sub
mov
cmp
pop
jo
in
jne
popa
cmp
lds
pop
push
add
inc
mov
lahf
mov
fscale
add
mov
imul
add
mov
mov
pop
leave
ret
pop
or
repz
sti
ja
stos
mov
cwtl
shrb
add
add
test
dec
in
push
fimull
cmp
jg
mov
je
cmc
add
sbb
jo
xchg
out
lods
mov
push
or
aas
out
add
in
or
out
insb
xor
xor
ljmp
in
push
xchg
in
add
jg
cld
add
mov
jnp
jle
push
pop
imul
or
flds
push
addb
ret
incb
pop
jb
hlt
jnp
pop
in
sbb
mov
pop
jno
push
cmp
sbb
dec
cmc
sub
int3
inc
xchg
pop
push
jne
add
shrl
adc
cmp
out
pop
xchg
push
pop
xchg
add
test
add
mov
enter
dec
in
sub
cld
movsb
loop
jns
test
je
mov
cltd
jecxz
mov
mov
pop
lock
jb
jp
faddl
std
xchg
adc
pushf
cwtl
lret
xor
outsw
out
cmpsb
icebp
call
ret
sbb
and
sub
mov
test
and
mov
pop
lahf
dec
mov
loopne
mov
mov
mov
add
test
mov
cld
cmp
lods
and
xchg
or
xor
sahf
shlb
add
sub
sub
addb
xchg
add
jno
dec
js
mov
adc
adc
insb
inc
outsb
insl
aad
lret
aad
sahf
test
jl
in
loope
inc
inc
mov
pop
cmp
js
pop
movsb
cmp
stos
xchg
cmp
lods
test
insb
inc
mov
xor
mov
inc
addr16
xchg
jmp
fiaddl
fstp
ret
test
iret
mov
jl
cmp
fiadds
dec
pop
sbb
push
andb
lret
jp
in
push
and
test
test
sbb
sbbl
sub
cli
ret
lods
mov
add
and
aam
aam
ljmp
je
rcrb
add
inc
xchg
cwtl
cld
arpl
stos
adc
out
pop
xchg
stos
xor
jb
les
loop
sbb
gs
test
sub
push
push
mov
pop
xlat
ret
ffree
xor
xor
inc
mov
mov
xchg
mov
pop
jae
addl
nop
insb
pop
and
dec
jae
pop
lods
pop
xor
cltd
adc
inc
jg
fiaddl
xchg
cmp
jp
jge
or
inc
test
adc
addb
scas
pushf
dec
or
imul
js
sti
inc
popa
xchg
movsl
test
add
add
mov
sti
cmpsl
mov
dec
mov
push
mov
add
mov
fucomp
out
pop
out
imul
lret
add
or
jmp
addr16
pop
xor
test
xorl
in
int3
rcrl
adc
imul
mov
pop
cwtl
stos
push
fsubl
pushw
pop
pushf
iret
lahf
push
sbb
rcl
inc
jbe
dec
outsb
addr16
dec
push
xlat
push
dec
sub
jne
xor
and
adc
mov
lcall
push
xor
in
or
adc
push
xor
adc
ror
je
push
add
bound
xchg
pop
pop
mov
xor
add
out
lods
cmp
stc
stc
push
adc
mov
stos
add
add
inc
xor
std
sub
sahf
imul
sar
rcll
jmp
cld
jne,pt
iret
jo
dec
loop
mov
dec
push
mov
pop
rol
mov
pop
dec
adc
rol
pop
scas
rcrb
dec
ja
adc
imul
and
negl
into
mov
dec
arpl
sub
ss
shll
xacquire
push
icebp
pop
cltd
scas
testb
nop
mov
and
dec
mov
bound
aad
mov
push
mov
cli
adc
xchg
fsubrs
pusha
int3
jno
lcall
pop
add
push
xor
gs
aaa
push
fists
add
jbe
add
jle
loop
imul
mov
push
arpl
xchg
faddl
lods
fnstcw
or
and
sbb
push
and
cmpsl
adc
inc
push
adc
adc
aas
cmp
sub
adc
jmp
mov
aaa
ret
testl
addr16
imul
or
push
mov
int
test
insb
jns
ret
push
inc
sbb
inc
js
pop
int3
pop
xor
mov
push
inc
inc
mov
adcb
mov
icebp
jl
testl
out
imul
add
mov
push
adc
cwtl
out
push
xchg
addl
ret
sets
dec
pop
negb
and
mov
sub
fidivs
test
bound
sbbb
push
pop
xor
mov
xchg
cld
mov
xor
mov
mov
jne
mov
outsl
out
inc
pop
jmp
movsb
xchg
xor
fisubrs
lods
movsl
push
or
mov
das
or
jae
cmpl
fists
mov
rolb
xorb
imul
pusha
jns
movsb
cmc
cmpsb
lds
inc
cltd
dec
mov
cmc
push
cs
add
lds
aaa
ret
pop
arpl
add
sub
das
jle
jg
imul
in
scas
mov
stos
add
stos
add
add
add
add
sbb
data16
mov
in
scas
fisubrl
inc
in
ss
jae,pt
sbb
fdivl
add
pop
xor
mov
dec
add
gs
sbb
shl
push
or
cli
or
sub
neg
stc
into
or
lock
mov
lods
sub
mov
in
and
inc
ljmp
and
jnp
outsb
inc
loop
enter
cs
inc
call
and
fnstenv
jbe
or
into
jo
in
imul
mov
dec
aas
mov
add
and
mov
mov
sub
mov
add
call
notl
ja
addl
sbb
arpl
mov
push
insb
push
sti
push
dec
cli
fists
xor
je
and
out
sub
xchg
adc
and
movsb
cs
ds
cmp
movsl
mov
cmp
fidivl
mov
mov
loopne
xchg
movsb
add
mov
fidivs
mov
push
cmpsl
cwtl
adc
cld
in
dec
mov
imul
and
lds
out
data16
aaa
jp
cltd
in
fidivl
les
push
loopne
sti
adc
ret
or
ret
lods
sub
mov
inc
xor
add
xor
push
xchg
enter
movsb
loop
mov
mov
lcall
movsb
xor
or
cmp
cmp
js
sbb
jmp
ds
mov
pop
mov
lods
loopne
mov
arpl
dec
dec
jg
adc
or
outsb
sub
enter
jbe
incb
inc
adcb
scas
mov
adcl
lods
pop
mov
xlat
les
xor
or
sub
ss
dec
cld
aad
popa
push
mov
daa
mov
mov
imul
adc
popa
mov
add
ret
pop
iret
fst
enter
inc
mov
add
xchg
add
add
call
insb
outsb
rcrl
cmp
repz
test
dec
es
mov
outsl
ss
cmp
in
fisttpll
out
cmp
or
pop
adc
pop
shlb
add
pushf
mov
mov
das
xlat
icebp
jnp
jae
rcrb
sub
in
pop
mov
mov
mov
pop
push
dec
stc
jp
loope
in
inc
dec
outsb
mov
sub
mov
clc
shlb
add
add
add
pusha
inc
add
inc
add
pusha
inc
add
inc
add
pusha
inc
add
inc
add
pusha
inc
add
inc
add
jo
add
inc
add
jo
add
inc
add
jo
add
inc
add
jo
add
inc
add
addb
addb
addb
addb
addb
addb
addb
addb
data16
jp
jbe
ja
js
jno
arpl
inc
dec
outsl
pop
inc
jb
jns
inc
pop
dec
add
add
pop
inc
add
add
mov
jns
xor
dec
cmp
dec
js
cmp
dec
inc
dec
jae
inc
dec
xor
dec
pop
pop
pop
push
cmp
dec
xor
dec
cmp
dec
js
cmp
dec
inc
dec
mov
dec
xor
dec
pop
insl
pop
bound
dec
jns
xor
dec
cmp
dec
mov
dec
inc
dec
pop
jge
jb
subb
xchg
jns
aas
dec
test
dec
test
dec
mov
dec
inc
dec
xor
dec
pop
lea
outsl
xchg
outsb
xchg
jle
jns
aas
dec
test
dec
test
dec
mov
dec
inc
dec
xor
dec
pop
popf
pop
xchg
outsl
mov
jns
aas
dec
mov
dec
lods
dec
cmp
dec
mov
dec
inc
dec
pop
lods
pop
mov
jle
jns
aas
dec
mov
dec
lods
dec
cmp
dec
lahf
dec
cmp
dec
inc
dec
pop
mov
outsb
ret
jle
jns
aas
dec
mov
dec
lods
dec
cmp
dec
lods
dec
cmp
dec
inc
dec
pop
int
ret
outsb
sarl
jns
aas
dec
mov
dec
lods
dec
cmp
dec
mov
dec
inc
dec
pop
fstpl
outsl
loop
jecxz
repz
aas
dec
lea
dec
lahf
dec
cmp
dec
xor
dec
pop
in
pop
loop
repnz
repz
jns
jle
jns
cmp
jg
xor
dec
xor
dec
cmp
lods
dec
cmp
dec
inc
dec
pop
or
outsb
adc
jns
aas
dec
add
in
inc
add
aam
add
aam
add
inc
add
aad
add
inc
add
aam
add
aam
add
add
aad
add
mov
inc
add
inc
add
inc
add
inc
add
inc
add
add
or
sub
sbb
orl
add
cmp
ds
add
inc
imul
in
incb
aas
cli
mov
add
xchg
pushf
clc
mov
pushf
clc
mov
xchg
pushf
clc
mov
xchg
pushf
clc
mov
xchg
pushf
clc
mov
xchg
pushf
clc
ljmp
add
jbe
mov
pushf
clc
sbb
push
pop
es
add
aam
inc
add
or
mov
inc
add
pushw
addr16
pushw
push
es
inc
add
dec
cmpsb
dec
lahf
dec
movsb
dec
insl
dec
bound
dec
add
cltd
dec
pushf
dec
fwait
dec
insl
dec
bound
dec
scas
dec
lods
dec
lahf
dec
mov
dec
xor
add
dec
test
dec
fwait
dec
xor
add
add
add
add
mov
mov
mov
mov
mov
mov
mov
jae
jo
jno
jbe
ja
je
jne
mov
mov
lods
jge
jge
jns
mov
insl
enter
jb
test
hlt
test
test
fnstenv
mov
push
or
xlat
out
add
scas
adc
jge
fidivs
leave
hlt
cmpsb
cmp
mov
cmpsb
and
and
cmc
enter
adc
jno
jp
enter
sub
inc
add
in
adc
imul
insb
push
imul
push
insb
inc
push
inc
jo
dec
dec
pop
jp
jbe
pop
jo
inc
push
jb
inc
je
inc
jae
dec
gs
inc
push
jno
ja
dec
dec
dec
inc
jno
jae
dec
inc
inc
inc
push
dec
insb
dec
jbe
pop
jbe
inc
fs
push
inc
add
inc
outsb
imul
push
push
push
jne
insl
push
push
jo
addr16
pop
add
push
pop
inc
inc
outsb
popa
imul
jne
dec
add
bound
dec
ja
dec
inc
inc
push
add
je
bound
dec
bound
pop
outsl
push
inc
gs
dec
js
inc
js
arpl
add
add
add
jb
outsl
pop
dec
push
dec
jns
js
outsb
pop
jae
push
arpl
push
push
je
addr16
dec
inc
insl
inc
inc
inc
arpl
push
inc
popa
push
dec
imul
push
push
imul
dec
jns
push
inc
jo
imul
fs
inc
push
push
ja
jp
push
arpl
dec
dec
data16
imul
dec
cmp
dec
lods
out
mov
js
je
pop
out
dec
xchg
add
stos
add
add
popa
loopne
xor
lret
loopne
popf
repnz
rorb
push
pop
into
subb
popf
pop
sbbl
imul
insl
les
sbb
test
push
in
inc
fs
dec
mov
insl
cmp
sbb
jb
ret
clc
mov
mov
mov
cwtl
pop
ljmp
mov
ret
sub
and
jmp
cmpsl
jo
cmp
in
inc
pop
pop
mov
lcall
repz
inc
rorb
outsl
push
push
sbb
and
out
inc
mov
dec
push
pop
in
adc
stc
rorb
add
mov
push
mov
xlat
push
cmpsl
push
add
xchg
add
stos
add
add
sub
shll
lea
pop
fisttpll
inc
xchg
inc
pop
mov
movsb
push
xchg
pop
pop
movsl
cmp
or
mov
inc
imul
imul
add
lods
movl
hlt
sarw
scas
in
mov
icebp
jo
lret
inc
jmp
mov
jmp
pop
mov
mov
xchg
call
shll
jo
ljmp
fst
lds
cmp
sahf
iret
inc
lret
das
out
ret
pop
pop
push
add
mov
jg
ljmp
push
sbb
add
add
cld
mov
orl
iret
dec
in
out
cmp
adc
xor
mov
mov
pop
cmpsl
add
sub
or
insl
xor
ret
mov
clc
mov
lods
sbb
mov
add
or
pusha
mov
popf
fmul
sbb
dec
mov
stos
in
cmpsl
enter
pushf
xor
sub
sbb
aad
iret
mov
push
mov
ss
cmpsb
mov
loop
ds
ret
fistpll
xchg
xchg
pop
jnp
addr16
mov
dec
mov
cmp
sub
add
cmp
in
fimuls
push
inc
add
add
stos
add
add
fmulp
cltd
btr
pop
inc
cmp
add
dec
mov
lods
xor
xor
cmpsl
dec
add
pop
mov
and
cwtl
add
arpl
mov
push
inc
pop
imulb
mov
clc
push
pop
mov
adc
xchg
std
insb
xchg
sub
mov
ret
mov
insl
out
ror
adc
adc
xchg
or
jo
inc
push
jb
in
pop
xchg
xchg
aaa
enter
xor
xchg
push
lahf
stc
mov
cmp
call
movsl
mov
mov
movsb
jp
stos
sub
mov
repz
fnstenv
std
negb
sub
jno
mov
add
cwtl
add
aam
icebp
xor
inc
sub
xor
insb
repz
cli
popf
call
push
insb
sub
mov
out
jne
xor
adc
test
xlat
xor
idivl
mov
sub
in
add
nop
movb
and
and
shrb
rorb
ja
push
sub
cmp
push
sbb
sarb
sub
mov
ja
shll
ds
inc
push
popf
rcll
mov
sub
bound
mov
or
lods
mov
dec
inc
xchg
add
fidivl
xchg
mov
scas
fbstp
inc
mov
xchg
fwait
cltd
add
stos
add
add
addr16
addr16
loope
insl
in
aad
pop
lea
jo
mov
cmp
fidivrl
insb
push
sub
xchg
into
pop
andb
dec
pop
negb
adc
rorb
jbe
or
std
pop
imul
rcrb
rcr
stos
push
jns
sti
mov
fstl
cmp
ds
out
and
pop
adc
pop
lods
xchg
dec
inc
mov
push
pushf
push
or
outsb
sub
lock
xor
mov
jge
in
mov
lret
rol
xor
add
add
pop
sub
insb
inc
lcall
mov
sub
repnz
daa
popa
push
push
inc
mov
sbb
and
dec
mov
outsl
xor
pop
xor
jge
jns
sub
push
insb
xchg
mov
ret
inc
mov
movsl
lods
lret
das
jmp
jp
mov
ljmp
mov
xchg
mov
fidivs
stc
outsb
or
mov
ret
shlb
xchg
mov
fldlg2
in
mov
scas
lret
shl
rcrl
xchg
push
fwait
add
neg
lcall
sub
xchg
pusha
std
sub
add
cmp
xlat
mov
add
push
add
xor
jb
insl
xor
and
out
lcall
ror
rorl
mov
push
xor
pop
sub
sti
shlb
les
icebp
and
adc
iret
and
adc
arpl
stos
movsl
pop
sbb
jb
movsb
adc
jne
add
jbe
inc
sbb
sub
fnstcw
cltd
stos
xchg
fldl
add
sub
ss
icebp
and
push
test
cmc
in
in
xor
inc
adc
sbb
insb
sub
mov
jae
add
rcrb
push
xchg
stc
dec
xorl
shll
fnsave
mov
xchg
mov
lahf
add
cmp
add
mov
out
and
cltd
fwait
add
stos
add
add
mov
fsubrl
test
and
push
mov
scas
in
mov
lret
sbb
inc
test
ss
dec
mov
mov
hlt
lods
leave
cmp
arpl
dec
or
sub
inc
xor
sub
xchg
aaa
fs
pop
push
ret
xchg
or
adc
nop
pop
or
inc
jnp
inc
pop
cmc
pop
jg
add
mov
mov
mov
fmull
dec
cli
push
out
into
or
lahf
test
mov
dec
stc
xchg
xchg
push
das
xor
push
push
add
jmp
repz
fimull
jmp
push
adc
stos
add
add
mov
pop
insl
loope
data16
inc
sub
rcr
cld
push
adc
sub
mov
dec
fwait
mov
sbb
jns
popa
cmp
or
cmc
data16
aam
js
popl
and
xchg
repnz
mov
aam
repnz
push
adc
xchg
out
adc
jb
aam
test
pop
aas
dec
testl
mov
cmpsl
add
pop
out
cltd
test
pop
mov
or
jae
xchg
or
iret
nop
je
outsb
scas
push
cmp
shrl
test
jnp
pop
aad
add
pop
iret
pop
aad
ss
dec
sub
pop
call
stos
add
add
lods
mov
sbb
test
cmp
bound
ds
sub
fistpll
mov
leave
call
jns
add
insl
dec
pop
ret
or
call
mov
mov
mov
xor
sbb
adcl
or
push
sbb
idivl
mov
adc
xor
cmp
js
iret
nop
mov
in
das
mov
lods
into
bound
or
ret
push
mov
cmp
add
cld
ja
sub
stos
add
add
mov
sahf
jno
mov
nop
test
jbe
push
dec
add
jge
lock
mov
mov
sbb
sahf
xchg
notl
add
subb
push
push
aas
pop
aad
mov
pop
stos
out
loop
add
int
stos
int3
jb
out
adc
scas
call
mov
iret
pop
pop
shrl
sub
xchg
dec
cmp
jecxz
mov
add
dec
fcompl
jmp
sub
aad
push
inc
pop
fcmovnbe
adc
ror
arpl
jecxz
mov
cld
std
repnz
test
sbb
outsb
jae
lret
jle
repz
pop
sub
add
stos
add
add
mov
cld
cmpsb
sti
pop
mov
mov
fidivrl
jg
insl
out
cmpsl
fcmovnbe
fcoms
daa
sbb
test
fimull
sub
cmpsl
or
push
lods
cmp
xchg
and
mov
and
stos
jo
mov
insb
leave
xchg
pop
push
adc
hlt
in
mov
pop
data16
inc
dec
nop
hlt
lods
roll
movsl
jmp
loope
mov
leave
sbbb
push
pop
dec
fbld
push
mov
out
pop
sub
push
mov
mov
add
add
adc
adc
mov
lds
jmp
add
stos
add
add
push
inc
push
pop
pop
test
sbb
cmpl
xchg
sub
mov
xor
adc
fwait
or
push
cltd
lret
fcoml
lea
fldenv
mov
jl
loope
int
test
pusha
in
pop
fsubrs
insl
arpl
sub
xor
cwtl
gs
or
xlat
xchg
xor
cwtl
xchg
or
xchg
iret
mov
in
add
sub
test
lret
pop
gs
call
leave
cmpsb
sub
outsb
add
pushf
out
aas
enter
pop
jbe
add
mov
lock
mov
rolb
add
stos
add
add
insl
inc
stos
int
les
ret
push
push
sbb
sbb
add
push
fwait
xor
mov
leave
mov
pop
sub
stc
dec
int3
shrb
inc
and
push
int
shll
ss
gs
sbb
sbb
cmp
xchg
inc
jp
popa
or
or
aad
push
jae
decl
outsb
xchg
ret
dec
lods
push
mov
mov
jne
clc
push
xor
add
cwtl
push
push
xorb
xchg
in
aas
sbb
inc
repnz
jnp
cmpsl
int
mov
add
bound
js
sbbb
add
aam
push
lock
cmc
das
sbb
xchg
iret
mov
mov
add
mov
push
testl
pushf
adc
les
and
insl
insl
xor
repz
lods
xchg
stos
mov
jle
xor
cmp
ret
outsb
xchg
xchg
insl
ss
aas
data16
fldt
dec
inc
js
mov
out
daa
clc
cmpsl
iret
insb
lcall
dec
shr
sbbl
gs
mov
mov
mov
push
sbb
test
in
out
hlt
adc
les
inc
pop
dec
lock
or
jns
and
dec
ljmp
cmpsl
lea
xchg
fidivl
lods
roll
add
sub
fildll
mov
out
fldl2t
mov
add
or
inc
movsb
daa
inc
sbb
or
push
jecxz
jne
inc
sub
les
fwait
iret
out
jnp
pop
inc
into
cmp
add
pop
pop
sti
adc
lret
mov
sbbl
cld
push
popl
scas
sahf
mov
dec
jecxz
insl
and
andl
cmpsl
sub
out
xchg
inc
in
jnp
inc
loope
lahf
stos
clc
jnp
inc
fnsave
fwait
mov
xor
dec
adc
push
fstpl
adc
imul
xor
xchg
adc
sub
sti
mov
adc
xchg
out
cmp
stos
add
mov
add
add
fs
testl
adc
xchg
mov
add
jne
mov
sahf
lds
adc
movsl
lahf
in
out
jge
dec
pop
in
add
ja
out
cltd
orl
fnsave
notl
jg
fcoml
fstps
jae
jecxz
sahf
icebp
ret
addr16
pop
jge
mov
hlt
subl
imul
xor
mov
sbb
call
inc
lds
sub
cmpsb
dec
stos
add
push
cld
add
stos
fidivl
and
mov
std
lods
sti
cmpb
lock
lock
test
lea
addr16
iret
jnp
xchg
or
add
jne
jg
clc
cs
push
push
mov
add
lret
sti
stos
ljmp
add
cmp
inc
lret
mov
cmp
cmpb
mov
icebp
mov
enter
adc
and
stos
xchg
insb
jbe
pop
ds
xlat
inc
fnsave
stos
out
jae
stos
xchg
rcr
fdivs
jl
adc
xor
inc
inc
movl
in
sbb
aas
xchg
inc
adc
les
ret
push
lret
add
push
insl
orps
and
jo
rcll
jmp
or
data16
cmp
mov
scas
neg
push
or
pop
inc
push
push
int3
cmp
add
or
dec
mov
je
lcall
add
stos
add
add
jmp
or
jmp
sbb
add
cmp
adc
sahf
das
xchg
loop
insb
mov
mov
and
insl
fs
or
mov
test
mov
push
dec
push
sarb
mov
fdivr
and
lcall
scas
shll
pusha
loop
int
arpl
lahf
shlb
and
mov
cmpsb
inc
fisubl
insl
jg
lcall
repnz
push
mov
hlt
mov
or
or
push
xacquire
lea
icebp
lds
and
push
aam
inc
xor
leave
leave
rcr
in
mov
fists
dec
mov
xchg
adc
pop
lds
mov
add
push
cmpsb
mov
mov
pop
sar
adc
xchg
fisubrs
lock
mov
insl
sbb
cvtps2pd
cwtl
fs
stc
les
bound
ljmp
sti
movsb
push
sbb
mov
sarb
mov
jle
adc
loope
pop
inc
push
and
cmp
movsb
aaa
sub
jmp
repz
sub
cltd
pusha
loopne
lods
pop
lret
sbb
andb
mov
mov
dec
fwait
pop
push
in
ret
pop
cmpsl
insb
or
sbb
in
andl
sub
add
xchg
fcmovu
fisttps
push
and
negb
push
mov
add
jp
popf
cltd
addr16
fildl
mov
imul
jl
inc
xchg
mov
sub
repz
loope
aaa
fidivs
sub
mov
std
loope
xlat
xor
push
imul
add
pop
sbb
jne
mov
xchg
pop
jg
das
sbb
lods
xchg
insl
nop
daa
adc
fs
cmp
or
pop
push
ret
push
sub
add
inc
xor
push
adc
sarb
mov
mov
add
shl
fists
pop
aad
sub
faddl
out
dec
pushf
add
lahf
arpl
std
jle
out
sbb
mov
mov
add
bnd
xchg
gs
xlat
or
sbb
jge
popf
and
movsl
stos
mov
xchg
cmpsb
ret
jo
scas
xor
mov
outsl
xor
ret
data16
sub
mov
lahf
dec
cmp
adc
ss
in
xchg
push
sbb
inc
in
cmpsb
lods
jne
in
sbb
jmp
in
lret
in
dec
shl
sub
nop
pop
enter
xchg
rclb
mov
push
dec
xchg
outsb
inc
int3
xor
int3
xchg
mov
jl
sub
mov
aam
mov
inc
fs
out
add
nop
lock
add
and
cmp
iret
lea
add
ljmp
push
hlt
neg
push
adc
xlat
push
mov
outsb
jg
sarl
out
xor
mov
movsb
mov
idivb
nop
xor
subb
sahf
leave
stc
and
pop
adc
cmp
mov
add
hlt
dec
dec
js
insb
mov
adc
inc
mov
jo
aas
mov
sub
aad
int3
inc
out
repz
iret
into
jg
xor
or
mov
mov
cs
lds
inc
dec
pop
movsl
ret
xlat
jnp
sbb
xor
pop
push
fdivs
xchg
repnz
je
adc
add
popf
aam
ss
imul
add
repz
ja
inc
mov
in
mov
shr
xor
out
inc
push
dec
sbb
mull
mov
jo
inc
inc
dec
out
roll
xchg
lds
jp
test
push
lock
hlt
jno
jecxz
rcrb
or
fists
cmc
push
hlt
in
cmpl
and
adc
shr
loop
addl
pop
add
lret
in
add
clc
xor
aam
mov
mov
sub
jl
jmp
mov
jle
add
mov
jbe
hlt
mov
and
cmpsb
call
add
stos
add
add
ss
testl
mov
cld
bound
and
scas
jmp
insl
inc
add
xor
xlat
dec
add
jne
ret
mov
sahf
fincstp
lock
scas
loopne
call
mov
fistps
inc
ds
and
test
xchg
fxch
cmpsb
sub
add
xor
sbb
aam
sub
push
sbb
mov
lods
aaa
lcall
xlat
shlb
xlat
fcmovnb
cs
jno
popa
push
cwtl
repnz
push
rcr
sarb
sbb
mov
xor
into
mov
sub
out
push
xchg
xchg
movsl
popl
add
fsubs
mov
inc
std
pop
loope
dec
mov
jle
and
test
into
pusha
and
data16
inc
adc
xchg
gs
mov
dec
outsb
mov
jge
mov
icebp
mov
jg
push
cmp
test
dec
xor
imul
pop
lods
shll
cmp
jb
push
adc
adc
jns
das
mov
mov
adc
jl
push
lcall
push
rcrl
or
pushf
frstor
xlat
jb
mov
out
push
into
mov
mov
out
xchg
push
fsts
xor
add
in
outsb
and
pop
mov
dec
nop
add
stos
add
add
sub
pop
jle
cmp
lahf
adc
push
icebp
inc
int
lock
adc
fs
fstpt
cmp
or
push
mov
fidivrs
sarb
pop
mov
dec
ja
sbbl
cmp
popa
cmp
pop
dec
pop
cmp
sahf
in
mov
js
or
jge
in
dec
pop
int
or
cmpsb
mov
mov
data16
out
dec
imul
leave
add
jg
xor
testb
cmp
dec
pop
inc
and
fwait
mov
cmp
or
ss
add
add
mov
and
add
nop
add
stos
add
add
sbb
fwait
lahf
lret
mov
xchg
pop
jo
cwtl
pushf
pop
push
mov
gs
sbb
pop
in
sub
inc
lret
test
pop
mov
pushf
stos
imul
ret
push
sbb
push
push
inc
xor
or
lea
cli
xor
and
sbb
imul
jecxz
mov
leave
les
loop
int3
inc
sub
mov
and
mov
add
add
adc
sahf
lahf
jns
loopne
out
andl
arpl
push
jne
pop
movsb
mov
jne
adc
std
add
add
mov
and
jg
call
into
inc
mov
mov
xorl
add
xor
dec
popa
ljmp
call
mov
mov
scas
je
mov
decb
pop
pop
outsb
mov
push
jge
lea
push
xor
pop
call
sub
jecxz
addr16
xlat
stos
aas
data16
xlat
out
jbe
pusha
mov
pop
cmp
and
pushf
out
mov
or
insb
mov
negl
cmp
push
cli
iret
loope
push
xchg
rclb
push
ret
mov
sbb
pop
sbb
cltd
daa
jo
aam
mov
stos
jne
pushf
decl
dec
fstpt
adc
imul
add
fisubrs
cwtl
sar
repz
lock
and
xchg
add
stos
add
add
inc
rolb
or
test
dec
mov
adc
mov
fs
jne
mov
sahf
sub
int3
mov
inc
dec
lods
sub
sbb
mov
push
mov
rclb
dec
rcrb
cmp
dec
adc
fdivs
inc
dec
sub
inc
cmp
ficoms
movsl
hlt
lret
jno
mov
arpl
inc
mov
dec
sbb
and
xor
adc
hlt
jp
sub
int
dec
add
loop
out
fstpt
or
pop
ljmp
adcb
scas
fmulp
js
hlt
lods
jo
add
int3
sbb
out
loopne
lods
push
xor
in
notl
add
push
mov
mov
mov
out
mov
hlt
or
into
lret
add
rorl
cmpl
add
addr16
dec
rorb
add
dec
mov
ftst
aas
cld
sub
cmp
xchg
pop
std
fwait
stos
sub
cld
pop
xor
xorl
xchg
call
shl
dec
jno
inc
mov
ds
add
xchg
push
jnp
pop
jmp
arpl
xchg
and
je
or
add
or
out
icebp
adcb
leave
jnp
pop
pop
andl
add
push
test
fildll
dec
rcrb
stos
add
add
xor
cmp
pop
in
jo
xchg
paddq
insl
sahf
dec
lods
mov
insb
aad
dec
jle
std
mov
pushf
xorl
xor
jl
adc
cwtl
out
mov
jb
mov
out
mov
push
cbtw
nop
mov
test
data16
inc
jecxz
ja
fisubl
jne
lahf
pop
add
pushf
xlat
cmpsl
push
rorl
pop
jo
inc
je
mov
roll
mov
jb
andl
popa
sbb
adc
popa
sub
xchg
test
push
cmp
push
push
fdivs
add
lods
fcomi
sarb
add
xchg
add
stos
add
add
and
jmp
sub
mov
pop
jae
cmp
aad
xchg
sub
jo
cmp
push
loop
cmpsb
movsb
shlb
outsb
xor
btc
sbb
lcall
lods
popf
pop
out
jge
push
mov
fisttpll
cwtl
in
mov
xchg
push
pusha
hlt
std
aaa
cmp
fisubrs
insb
pop
pushf
push
inc
hlt
jp
pop
push
in
stc
hlt
test
sahf
xchg
pop
aam
push
ret
jge
sbb
add
out
test
ljmp
cmp
jle
dec
js
fimuls
add
or
ja
dec
cmp
dec
adc
xchg
add
stos
add
add
and
loopne
or
loope
mov
aad
jp
sbb
cmp
jbe
pop
mov
pusha
add
push
mov
in
dec
outsl
bound
popa
jb
aas
pop
inc
sub
lret
frstor
movsl
cmp
lods
pop
fidivs
mov
or
dec
add
std
sbb
or
movsb
lock
insl
jnp
in
pop
into
outsl
pushl
cltd
push
mov
ja
adc
stos
pop
push
mov
dec
push
sub
imulb
inc
ja
jbe
push
jl
cmc
adc
add
add
arpl
jge
mov
daa
jne
mov
lahf
xchg
add
stos
add
add
mov
sbb
cwtl
rorl
test
and
push
dec
mov
push
adc
sub
add
mov
add
insb
xor
popa
stos
dec
movsb
sbb
or
lods
dec
cmp
mov
pop
pop
sbb
jbe
aad
inc
test
cld
mov
icebp
sbb
dec
jle
popf
pop
dec
cmp
fidivs
mov
mov
sahf
sbb
jns
mov
xchg
popf
test
icebp
lcall
cli
dec
fs
outsb
adc
add
daa
push
imul
icebp
sub
add
sbb
shrb
add
in
test
push
out
sub
lahf
pop
xchg
mov
aaa
mov
jae
repz
mov
sub
jmp
fidivrs
add
orps
loope
lods
pop
jge
cli
divl
jno
mov
xchg
adc
shlb
lds
ds
xor
add
pop
push
enter
pop
inc
aaa
push
push
and
sbb
data16
inc
inc
jno
incl
mov
inc
mov
mov
sbb
scas
push
add
add
daa
ss
xor
and
sahf
pop
out
add
stos
add
add
js
ror
jg
scas
popf
cmp
loope
pop
mov
and
push
movsb
aam
xchg
stos
scas
xchg
jb
or
fcomps
repnz
cltd
jecxz
aad
aaa
test
shr
inc
shrb
fcompl
insl
arpl
stos
jmp
jo
aam
stos
cmovns
fmul
inc
xchg
add
or
sbb
mov
jmp
in
mov
outsb
inc
add
rol
hlt
push
pop
outsl
push
cmp
scas
pop
adc
lahf
ja
sbb
cmp
cmc
mov
jne
adc
scas
cltd
add
aaa
out
mul
aaa
cmc
xchg
lcall
xchg
mov
add
pop
dec
popa
test
inc
insl
cmp
pop
ljmp
jae
push
mov
xchg
movsb
mov
and
xchg
cli
dec
mov
aad
test
lock
pop
test
cmpsb
sbb
cmp
lds
add
or
popa
or
inc
iret
test
mov
mov
in
sbb
inc
cmp
push
sub
push
mov
enter
mov
xor
pop
adc
out
add
xor
loop
mov
mov
cmp
push
jne
push
push
insl
or
xor
cld
xchg
mov
repnz
push
iret
jl
push
add
push
aad
out
fucomip
ss
cmp
ja
cmp
add
sti
mov
lock
xchg
cmp
arpl
aad
shrl
inc
loopne
lret
push
adc
xchg
xchg
les
inc
int
or
or
enter
aad
daa
jmp
nop
hlt
cmpsb
shll
jge
adc
loopne
xchg
dec
cld
jl
jle
lcall
fcomip
mov
aas
push
fcomps
mov
mov
push
dec
mov
repnz
fisubl
imul
sbb
cmp
or
push
ss
adc
std
mov
and
mov
sbb
inc
xchg
jne
movsb
xchg
add
in
cld
fisubrl
sbb
outsb
shl
movsb
add
stos
add
add
mov
jg
loop
cwtl
jb
scas
cmp
dec
cwtl
icebp
scas
mov
adc
mov
repz
jg
cmp
lea
dec
outsb
cwtl
js
and
int3
xchg
pop
scas
or
xor
mov
mov
subl
aas
mov
sub
push
negb
mov
ljmp
ret
mov
ss
arpl
add
push
pop
int
dec
cmp
orb
sbb
daa
popf
arpl
cltd
nop
lahf
sub
stos
mov
xchg
stos
in
das
inc
aad
dec
xor
lea
repnz
add
push
les
in
lahf
sti
ja
rcll
aas
movsl
add
stos
add
add
int
outsl
jb
imul
push
xchg
int3
inc
js
cwtl
test
call
sbb
jno
push
mov
jle
push
dec
jnp
fpatan
call
dec
std
jnp
push
jnp
in
mov
mov
jp
scas
xchg
adc
xor
das
push
movsl
sub
adc
icebp
fs
fcoms
and
xchg
mov
inc
mov
addr16
push
jbe
inc
movsb
popf
stos
neg
push
ror
pmaxsw
gs
fcom
pop
sub
pop
cmp
jge
jno
das
jno
lods
test
lahf
pop
sbb
lret
test
mov
xchg
cmpl
push
loopne
lcall
add
stos
add
add
int3
pop
dec
jb
mov
and
scas
out
sbb
es
adc
ficoml
les
push
fbstp
adc
imul
sub
ss
dec
icebp
movsl
cmp
insl
clc
sub
mov
push
scas
push
sti
jns
xacquire
test
dec
stc
loope
icebp
sbbl
cmpl
sub
pushf
inc
jno
inc
jb
add
out
mov
mov
inc
sbb
aas
repnz
std
push
xor
jmp
lock
add
lea
mov
mov
add
fincstp
shl
frstor
pop
dec
lahf
call
add
stos
add
add
clc
cmpl
insb
jl
rol
inc
adcb
add
push
inc
or
arpl
rcll
push
js
ljmp
xrelease
jecxz
sbb
in
inc
lds
je
fcomps
into
das
xchg
outsb
imul
sbb
push
fninit
aam
shl
mov
cmp
xchg
shr
fldl
test
sbb
xor
pop
dec
xor
ret
mov
ja
es
sub
out
aad
outsb
rcrb
add
das
push
dec
mov
xchg
sahf
add
add
outsl
mov
jmp
push
fcmovu
in
inc
out
lea
add
or
sbb
enter
fiadds
mov
mov
addb
int3
bound
js
cld
jnp
aad
sub
cmp
mov
mov
aam
je
or
das
ja
stc
cmc
loop
dec
adc
loopne
mov
cmp
mov
mov
pop
add
and
add
fsubs
xchg
outsl
adc
sub
cmpsl
loopne
mov
sub
shll
iret
inc
sub
fbld
ret
icebp
repnz
aam
fldl
cmp
sub
jae
jg
dec
jge
cmp
mov
add
sbb
inc
jecxz
mov
xchg
adc
aaa
test
add
or
rcl
mov
xchg
repz
xlat
xchg
daa
adc
mov
dec
je
mov
xor
xor
mov
push
paddusw
pusha
inc
test
sbb
push
mov
jae
dec
jge
push
into
dec
daa
jno
subb
xchg
adc
sub
jb
mov
aad
shlb
sbb
jb
outsl
adc
push
push
ss
sbb
js
xchg
add
fsubrs
xchg
cmpsl
mov
xorl
fisttpll
out
icebp
pop
dec
inc
push
mov
lret
out
xor
cli
push
xor
jb
add
mov
icebp
and
push
fucom
test
add
push
in
loope
push
mov
xchg
lods
jns
in
or
cli
cli
nop
push
cld
jns
and
loope
jbe
inc
or
add
inc
jns
orb
or
dec
dec
aad
adc
jbe
loop
js
dec
leave
push
enter
rclb
mov
outsl
or
into
sbb
adc
fadds
divl
enter
lock
push
mov
or
cmp
adc
jmp
gs
xlat
sbb
push
mov
fldpi
adc
cmp
daa
pop
test
add
add
xlat
repz
das
cli
fists
dec
es
outsl
les
add
xchg
sub
jp
movsl
mov
mov
pop
stc
popf
cmc
in
mov
les
ljmp
mov
xchg
cmpsb
mov
lds
icebp
mov
loopne
subb
imul
mov
emms
bnd
cltd
incl
dec
xchg
fstpt
pop
cs
xorb
adcl
mov
push
je
or
sbb
in
lcall
or
sub
lret
sub
or
js
pop
sbb
or
test
sub
adc
add
add
inc
add
nop
inc
add
inc
add
nop
inc
add
inc
add
nop
inc
add
inc
add
dec
pop
pop
dec
inc
xor
push
push
inc
cmp
pop
ss
pop
add
inc
pop
inc
pop
push
dec
inc
pop
cmp
dec
add
cmp
xor
aaa
inc
inc
pop
xor
pop
push
push
inc
push
cmp
push
push
inc
xor
xor
add
cmp
dec
cmp
pop
dec
xor
add
xor
pop
inc
dec
pop
pop
xor
pop
inc
xor
inc
dec
cmp
inc
cmp
ss
dec
add
xor
dec
xor
push
add
aaa
pop
push
dec
dec
cmp
inc
xor
add
pop
add
dec
add
xor
pop
add
add
push
add
dec
add
add
inc
add
add
xor
pop
add
xor
dec
add
push
add
add
cmp
push
add
push
add
add
add
add
add
dec
add
push
add
add
add
add
add
dec
add
add
pop
add
add
push
add
add
pop
add
xor
xor
push
add
add
add
add
inc
add
xor
cmp
add
add
add
inc
add
push
inc
add
inc
add
push
inc
add
inc
add
push
inc
add
inc
add
push
inc
add
inc
add
push
inc
add
lcall
add
add
add
add
add
add
add
add
cmp
add
cmp
add
inc
add
add
cmp
add
add
add
push
outsl
jb
push
imul
aas
inc
insb
outsl
jae
push
imul
popa
je
outsl
outsb
inc
insb
outsl
jae
push
imul
