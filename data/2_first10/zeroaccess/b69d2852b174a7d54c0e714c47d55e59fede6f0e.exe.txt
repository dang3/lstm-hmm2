push
mov
sub
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
jmp
movl
cmpl
je
cmpl
jne
pushl
call
mov
dec
mov
jmp
add
mov
mov
mov
mov
mov
sbbl
push
sbb
jmp
ret
aas
ret
aad
aad
mov
sub
jle
or
jle
fld
fcom
enter
leave
cld
icebp
fmulp
iret
rcl
rcl
mov
nop
fsub
nop
cld
jmp
leave
ss
xor
neg
aad
int
fnsetpm(287
lock
in
cli
sti
jmp
xchg
in
cli
fxch
out
leave
icebp
idiv
iret
ds
lock
repz
enter
out
fildl
ret
sub
shl
xlat
fdiv
stc
aas
adc
call
fmuls
repz
mul
ret
into
jmp
loopne
iret
lock
in
repnz
into
sub
sti
ljmp
int
into
out
rorb
fimull
div
aam
hlt
cmc
aad
ss
int3
rcl
rol
idivb
icebp
les
out
sti
xchg
ljmp
cmc
clc
cmp
aas
loop
cmp
out
aas
out
fxtract
sbb
adc
repz
repz
aam
cmp
cmp
loope
icebp
mul
icebp
repnz
mov
testb
into
xchg
xorb
loope
iret
cmp
cmc
aaa
loopne
loop
and
faddp
lret
icebp
cld
fucomp
out
out
ror
icebp
stc
out
xor
cmc
lret
test
sbb
xchg
mov
int
in
call
mov
mul
xor
lret
xlat
cmp
int
rolb
loope
movl
bnd
xor
shlb
shr
loopne
fst
clc
addl
rorb
repnz
fsubr
call
jecxz
fsub
xor
lds
xchg
shl
loope
cmp
fcmovnbe
rcr
aam
aas
cmp
fldl
out
xchg
shl
shr
stc
xor
out
lock
int3
std
sti
not
incl
out
leave
xchg
ror
xchg
shl
loope
icebp
ret
aad
das
cmp
int3
hlt
cmpb
add
add
rcr
fcmovnu
mov
bound
cli
or
jle
or
jle
fadds
loope
aad
int
mov
nop
xchg
repz
hlt
fcom
repz
iret
rol
loop
call
mov
in
cli
lret
loopne
sub
loop
div
lock
sarb
rorb
mov
fdivr
fcmove
and
enter
cmp
out
cmc
lock
clc
ret
aas
loopne
jmp
fucom
in
mov
lock
leave
iret
shr
les
clc
loope
loopne
loop
in
test
loop
ret
enter
call
in
loopne
orb
test
lock
in
ret
aaa
xor
icebp
aaa
fadd
rcl
out
xchg
enter
cli
jmp
fistl
in
das
jecxz
stc
ret
aaa
icebp
aad
iret
xlat
xor
idivb
roll
in
loope
out
bnd
stc
sti
call
int
out
loop
mov
cmp
mov
mov
out
call
clc
into
cmp
call
loopne
jecxz
shl
in
lret
xchg
mov
lret
aad
out
xlat
xor
aam
lock
into
and
into
xlat
sarl
clc
cmp
in
ljmp
xlat
xor
out
cmp
fdivl
cmp
in
into
bnd
rorb
neg
loope
and
imul
shl
xor
cld
rcl
into
testl
hlt
lret
out
movl
ret
lock
ljmp
fprem
out
mov
xchg
ljmp
xchg
test
ss
out
fcmove
fcmovnu
adc
xlat
mov
fcmove
xchg
cli
lret
adc
int
sub
fcmovnbe
xlat
out
cld
aas
cld
int3
cmp
adc
sti
aam
lock
std
repnz
out
xchg
cmc
ret
std
cmc
aam
and
out
ds
xlat
cmp
cld
loope
in
fisttpl
push
pop
movl
cmpl
je
cmpl
jne
pushl
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
xor
xor
jmp
ret
leave
aad
fcmovnu
sub
fisubrl
add
or
jle
in
jecxz
xor
aam
clc
cld
xor
fcompp
cmp
out
out
aas
fsub
std
loope
xlat
add
cmp
xlat
lock
fsub
jmp
cmp
fincstp
incb
loope
test
jmp
rcr
lret
ljmp
xchg
jmp
lret
or
cmc
ret
sar
jmp
fucomp
loopne
cmp
loop
idiv
repz
in
out
div
sti
call
cmp
rcr
xor
ljmp
fsub
mov
imul
loop
cmp
lret
enter
icebp
lock
mov
out
lret
test
into
fildll
lret
lock
clc
out
leave
int
in
cli
out
hlt
in
xor
lds
decb
xor
rcl
loope
clc
jecxz
icebp
sar
cmp
xchg
ljmp
mov
enter
int3
xlat
clc
cmp
sar
repnz
fsubp
ret
fcmove
in
mov
sbb
xchg
out
xor
hlt
into
call
shlb
adc
out
fstl
lret
lret
cmc
enter
aas
loope
cmp
ret
lret
loope
loop
mov
xchg
xor
shl
in
into
cmp
enter
fprem
cmp
stc
cmc
in
lret
mov
orb
aaa
clc
shl
lret
in
clc
cli
loopne
cmp
lock
out
sti
clc
loop
loop
lock
cmp
shl
fsubp
fcmovnb
aad
loopne
fincstp
lds
call
cmp
leave
lret
hlt
loope
stc
fdiv
iret
iret
cmc
test
loope
test
loope
in
aam
sub
cmp
leave
ret
fldl
std
rorb
out
lret
loop
in
xor
ss
add
mov
sub
add
andl
mov
sub
jmp
vaddsubpd
rcr
pop
push
xchg
fcomi
ds
sub
jle
add
into
loopne
aas
aam
fscale
ljmp
cld
xchg
out
xchg
out
call
stc
hlt
ror
cmp
repz
fstp
fucomip
call
int3
out
cmc
loope
cmp
neg
xlat
rcr
cmp
cmp
ljmp
jmp
jecxz
hlt
int3
fnstsw
repnz
out
cmc
and
aas
mov
fmuls
ljmp
leave
icebp
cmp
std
fcos
iret
xor
into
lock
fcmovnu
test
out
fldl
rcl
xor
hlt
cli
in
shr
cmp
clc
sti
stc
cmp
stc
hlt
testb
mov
nop
call
repz
cmp
sti
sti
ffree
hlt
fscale
mov
jmp
int
repnz
cmp
ror
out
iret
stc
std
lock
repz
xlat
in
ljmp
in
hlt
les
cmp
aad
fcomip
out
cmp
jecxz,pt
ds
std
test
fisttpl
repnz
icebp
aam
out
shl
aad
cmp
loop
in
fisttps
in
in
xchg
in
lret
xor
cmp
stc
clc
into
sar
in
cld
out
cmp
fsub
mov
or
out
int
idiv
out
aaa
aad
icebp
xor
sarl
test
sbb
iret
loop
out
sub
in
sub
int
int3
sti
out
in
lock
shl
fst
int
in
fucomi
enter
int3
ss
ljmp
loopne
cmp
fcmovbe
sti
ror
faddp
aas
dec
lock
jecxz
rol
xor
lock
idiv
loope
mov
cmp
mov
repnz
in
in
shll
lret
stc
out
aaa
sbb
jecxz
sarb
sbb
in
iret
xchg
shl
test
rcl
stc
xlat
into
div
shl
out
or
repz
fcmovnbe
ljmp
movsb
jbe
add
add
add
xlat
fcom
fcom
fstp
outsb
push
mov
sahf
push
xchg
jl
push
jle
or
jle
icebp
decb
das
ljmp
lock
cmp
std
xor
fldlg2
out
mov
out
clc
rol
iret
sti
xor
loopne
rolb
fmuls
nop
int3
lret
add
cmc
ss
into
loopne
ds
in
out
repz
fimull
jmp
lret
cs
aaa
into
ds
jmp
rcl
fucom
cmp
ds
mov
out
into
jmp
fst
jmp
hlt
cmp
fldl
cli
ret
fadds
adc
adcl
cmp
iret
into
into
iret
int3
fdivrs
loope
rcl
std
xchg
sti
int3
dec
lret
jmp
lret
fcmovnu
sti
rcl
iret
mul
aad
fadds
fsubrp
mov
icebp
in
loope
in
mov
jmp
call
int
cmp
cmp
sti
xlat
jecxz
call
out
stc
rolb
jmp
cmp
fmul
jmp
cmc
hlt
cld
out
in
cmc
shl
ljmp
out
rolb
int
out
int3
not
repnz
cmp
sar
fcomip
filds
out
int
mov
shll
cmp
xlat
ror
in
std
rcr
lret
aas
in
xacquire
mov
std
loope
out
icebp
lret
cmc
cmp
out
add
loopne
xchg
ret
mov
iret
jecxz
in
shr
xor
hlt
in
sti
cld
loop
not
aas
ds
sti
xchg
xchg
repz
into
in
fcmove
jecxz
aad
ror
cmp
test
in
fucomip
or
orl
int3
int
fdivp
fdivrl
iret
out
lock
icebp
hlt
rcr
jmp
std
xchg
in
in
iret
in
cmp
fnstenv
repnz
lret
out
add
xchg
or
sti
fld1
nop
in
decb
repz
and
xor
orl
add
xor
add
mov
add
mov
movl
mov
xor
mov
lea
and
mov
mov
mov
or
mov
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
push
push
call
jmp
mov
sub
mov
mov
and
xor
movl
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
add
add
jmp
ret
fstp
ret
frstor
mov
jno
les
jle
or
jle
int3
xor
cmpl
not
cmc
cld
lret
fldl
into
fiadds
divb
aaa
cmp
lret
cmp
add
orl
aam
xor
out
sarb
ds
loopne
out
sbb
aas
in
call
xlat
std
mov
leave
xchg
cld
rcl
out
ds
and
clc
roll
test
mov
out
mov
xor
iret
rcr
clc
cmc
cmp
roll
enter
mov
xchg
ljmp
int
cmp
leave
call
repnz
out
cmp
fsub
into
and
test
ss
ror
xor
aas
cmp
out
cmp
fmul
loop
lret
test
aad
aaa
cli
cmp
int
fincstp
cli
mov
stc
test
cld
addb
ljmp
ror
shr
shl
aaa
fdivp
cld
lret
in
cmp
fucomp
test
xchg
out
ljmp
into
cmc
int
div
cmpb
jmp
loope
lret
fsub
call
xor
cmp
aad
cli
aad
testl
ret
mov
clc
in
mov
hlt
xchg
mov
int
ror
out
jmp
int
add
testb
fucomp
icebp
xchg
sub
in
int
iret
fmul
fcmovnb
cmp
loope
cld
repz
repz
int
fiadds
stc
cmp
lock
xlat
rcr
aas
test
stc
in
loope
into
test
xchg
incb
leave
aam
faddl
iret
std
faddp
std
xlat
call
stc
lock
in
out
rcr
aad
stc
fdivrp
fnstcw
fdiv
jecxz
lock
jecxz
stc
mov
jmp
jmp
ret
repz
aad
xor
cmp
sti
cmp
std
ret
rorb
lock
add
add
mov
mov
mov
mov
adcl
movzwl
andl
add
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
push
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
and
mov
and
mov
mov
xor
add
jmp
aam
fistl
leave
lret
or
or
jle
stc
movl
out
xor
shr
imul
cmp
jecxz
fcom
faddl
int3
dec
mov
filds
aaa
shl
cmp
fdivp
and
clc
ret
cmc
int
std
test
in
sti
jmp
int3
lret
in
cmp
jecxz
loop
fsub
loop
stc
std
xchg
fucomi
fistl
iret
cmp
ret
xlat
shl
fucomp
int
cmp
testl
dec
orb
xor
hlt
vpmuludq
cld
ror
clc
ret
out
clc
call
int
mov
and
shr
call
rcl
out
cmp
test
jmp
test
call
xlat
sti
std
lock
out
out
movl
cld
ljmp
xor
rol
cmc
ss
cmc
and
roll
cld
xchg
cli
lret
lret
out
out
aas
fistpll
fistpll
aam
sti
fdivrp
loopne
sti
rcr
in
xchg
out
adc
icebp
loop
ljmp
jmp
std
loopne
in
mov
out
test
clc
cli
out
rolb
ret
out
fdivs
imul
lock
in
rcl
inc
in
mov
in
fiaddl
iret
xor
clc
cmp
out
fucomp
lret
add
cld
fcomp
fcomp
rcl
std
in
cli
mov
lret
decl
ljmp
std
idivl
xlat
cmp
mov
in
mov
mov
in
repnz
fdiv
hlt
cmc
fcmovb
xor
dec
jmp
test
in
test
nop
repz
cmc
cli
sti
leave
cmp
cld
iret
lret
rcl
shl
mov
ret
shl
lret
mov
cld
test
into
xor
cmc
out
shr
cli
ror
enter
rol
jmp
loop
cmp
jmp
fstp
je
xchg
or
loopne
jle
or
jle
jmp
int3
clc
cld
test
lret
xor
shl
out
xchg
clc
rolb
xchg
jmp
jmp
cmp
std
loope
in
rolb
ret
out
incl
ss
hlt
rcl
in
shl
repz
lock
cli
ffree
out
xchg
mov
xchg
leave
out
xor
sti
cmp
rcr
call
div
xlat
xchg
loope
xlat
fists
mov
ret
shll
ljmp
lds
loopne
lock
lret
mov
enter
out
call
xor
orb
test
orb
clc
icebp
hlt
cmp
int3
fcmovu
xor
cmp
into
fcmovnu
jmp
out
in
iret
in
in
filds
clc
out
cmp
std
ds
fucom
loope
loope
fcmovb
mov
int
loope
xor
shl
divl
shr
icebp
lret
out
stc
sar
fsub
test
cmp
orl
in
xchg
das
aam
clc
leave
int
into
out
cmp
xlat
incb
mov
leave
dec
xchg
ljmp
lret
fcmovnbe
rcr
sar
shl
aad
ds
jmp
sbb
fsubr
iret
ror
repnz
rol
rcr
xlat
roll
addl
cld
lret
lret
out
mov
in
cmp
ror
repz
stc
fdivrp
cmc
roll
int3
out
hlt
loope
ss
ret
shl
cld
loopne
hlt
adc
ds
enter
enter
test
enter
ds
out
clc
rcl
stc
cli
clc
xlat
leave
out
mov
out
shl
mov
ljmp
int
sti
test
stc
fisttps
jmp
mov
repnz
xchg
jecxz
loope
loop
repnz
fbstp
fxtract
fisttps
test
push
add
mov
mov
xor
add
cmp
jne
mov
mov
jmp
int
rol
fst
lcall
pop
out
push
jle
or
jle
roll
call
jecxz
sar
shl
into
shl
sti
cli
imul
stc
cld
out
hlt
fcomp
fildl
xchg
repnz
enter
lock
out
out
aad
stc
fucom
loopne
fdivp
call
int
mov
ljmp
int
f2xm1
repnz
stc
sti
test
fcmove
test
mov
out
cli
sub
xor
idiv
loopne
test
mov
cmp
in
cmc
idiv
sub
in
int
nop
xor
xor
lock
cmp
sti
jecxz
shl
in
in
xchg
jmp
loop
mov
mov
loope
loop
out
enter
cld
shl
clc
cmp
mul
inc
int
fiadds
into
inc
sub
lds
shl
ror
fistpll
shlb
and
test
in
fimuls
ror
aad
out
in
fcom
repnz
ds
test
rol
loop
fcmovnb
lret
filds
enter
iret
enter
fidivl
std
sti
shl
repz
xlat
xlat
jmp
fndisi(8087
mov
xchg
hlt
mov
in
fcmovne
out
int3
fsub
adc
fldl
xchg
icebp
icebp
xchg
aam
fadd
out
jmp
lret
fincstp
in
cmp
lock
cmc
sti
faddp
iret
jmp
in
repz
in
out
lret
iret
aad
cmp
test
mov
mov
into
out
loopne
ret
aaa
iret
icebp
xor
testl
out
fcomp
fucomi
mov
fidivrl
aam
hlt
fdivr
cmp
jecxz
test
hlt
xlat
incl
in
loope
lret
cmp
shl
lret
aam
ds
cld
jmp
out
cld
jmp
mov
fsubp
call
in
fmul
repnz
test
iret
lds
clc
loope
sub
lret
xor
add
mov
mov
mov
jmp
leave
ret
int
int
mov
paddusb
cld
adc
or
jle
test
repnz
fdiv
icebp
shl
cmc
rcl
out
or
cmp
ljmp
shl
out
idiv
icebp
aad
cmc
neg
std
cmpl
in
clc
lea
adcb
in
imul
lock
out
addl
cld
filds
in
ror
sarb
lret
hlt
cmp
ds
inc
sti
cld
std
sti
mov
aas
fcmove
ljmp
xor
shl
out
fcomi
cmp
loop
clc
cmp
sub
cli
mov
ljmp
ror
xor
cli
rol
cmp
jecxz
cmc
fnstcw
nop
cli
shl
rorb
cmp
jmp
idiv
stc
repnz
rcl
movb
jmp
int
lock
iret
xor
xor
stc
fnstcw
ret
into
aas
aas
jecxz
in
fildl
iret
mov
in
stc
into
cmp
f2xm1
repz
call
stc
in
hlt
repnz
xlat
test
lret
mov
loopne
lret
int3
rcr
cmp
aaa
aam
cmc
into
jecxz
fdivrs
aam
jmp
iret
rcll
les
fldln2
lock
loopne
shl
fnstsw
xlat
sbb
fsubrp
ret
mov
int3
mov
rcl
out
cmp
fidivrs
lock
stc
fdivr
xchg
leave
jecxz
cli
ror
in
int3
mov
ret
int
lret
ljmp
enter
clc
aas
mov
in
jmp
fisttps
aad
call
hlt
cmp
repnz
icebp
in
mov
rcr
xchg
in
in
fcmovnbe
aam
std
sar
vpsubd
shl
cli
cmp
ljmp
lret
cmp
fcmovne
call
leave
lock
xchg
rcl
ret
xchg
out
mov
lret
repnz
xchg
out
xlat
jecxz
div
cmp
sbb
loope
into
jmp
aam
mov
in
push
mov
jle
or
jle
roll
cmp
mov
nop
iret
xchg
xchg
jmp
xor
into
into
xor
lret
cmpb
fdivr
loop
ret
repnz
leave
mov
jmp
jecxz
cmc
cmp
in
cmp
stc
in
cmp
repz
icebp
repnz
fyl2xp1
int
fimuls
into
mov
in
shr
aaa
fcmovnbe
jecxz
ret
std
repnz
xchg
jmp
fsincos
xor
out
aam
int
aas
jecxz
ret
rcr
fcmovnbe
fdiv
ffreep
out
out
loop
repnz
leave
shl
aaa
lock
rcr
hlt
fxam
xlat
in
ljmp
lock
int
aad
xor
xor
out
ljmp
into
fdivp
xlat
rcl
aam
in
shl
jmp
int3
repz
aad
jecxz
xor
xor
fcmovnu
loop
out
rcr
clc
jmp
test
std
xchg
xchg
xor
jecxz
in
xor
cmp
xor
test
jmp
out
jmp
in
jecxz
repnz
ret
into
ljmp
xor
ffreep
fdivr
in
jmp
out
sar
mov
jecxz
fidivrl
out
xlat
fdivr
in
lret
fcmovbe
ds
repz
in
mov
test
xchg
rorl
ss
in
xor
sbb
lds
and
in
out
iret
ljmp
jecxz
stc
repz
repnz
enter
dec
lret
xchg
or
ljmp
stc
out
std
lock
sti
stc
add
xchg
loop
jecxz
in
cmp
sti
ljmp
cmp
repnz
loop
incb
repz
jecxz
clc
cmp
shl
cmp
sti
int
in
lock
rol
call
push
in
jecxz
icebp
ret
ss
rol
int3
leave
in
clc
idiv
into
add
loop
loope
mov
sub
add
mov
mov
jmp
xlat
rol
xlat
enter
push
mov
adc
jle
add
mov
mov
ss
cmp
int3
filds
repz
into
loop
jecxz
ret
icebp
int3
aaa
cld
cmc
fstpt
loopne
sar
mov
rcr
loop
ljmp
xor
neg
iret
jmp
std
fld
call
loopne
jmp
enter
out
lock
iret
lret
fcomp
repnz
fdivl
sar
jecxz
int
orl
jecxz
into
ljmp
int
stc
loop
enter
lret
lret
loopne
xchg
sti
lret
aad
icebp
ror
aam
std
rolb
out
out
clc
repnz
int
clc
icebp
rol
lret
fadd
sub
fcomi
cld
in
cld
out
nop
in
test
cmp
neg
out
fcmovbe
cmc
out
fstp
addl
in
repz
sub
repnz
test
sti
and
hlt
enter
int3
sti
loop
shl
std
icebp
das
xor
int
cs
xor
fdivp
repz
mov
fmuls
fisttpll
jmp
ret
ror
call
std
stc
neg
fiadds
stc
mov
dec
sub
ret
imul
into
xor
aam
sar
fsubp
sar
jecxz
test
mov
int
out
loope
jecxz
xor
xor
ljmp
lock
sub
ljmp
lret
fxch
fst
cmc
fcmovbe
lret
int
call
test
fucom
in
ljmp
jmp
aaa
xor
ret
sbb
mov
fxch
and
repnz
mov
lret
out
shll
in
std
cmp
xchg
ljmp
loope
in
repz
test
in
in
sti
mov
jmp
into
ror
fxch
fst
cmc
mov
mov
cmpsb
push
jle
or
jle
aas
into
icebp
into
ds
ds
mov
cld
loopne
stc
in
into
xchg
jmp
xor
fst
cmp
icebp
ret
lock
hlt
call
out
int
out
xchg
xlat
clc
icebp
lock
cmp
repnz
aam
cld
lock
loop
lret
clc
fiadds
fmull
int3
clc
cmp
cmp
std
aam
stc
fchs
repnz
call
add
shr
leave
shl
xchg
xchg
sub
fsubr
in
icebp
cmp
cmp
icebp
lock
std
rcr
ljmp
out
out
rol
fprem1
out
out
cmp
lock
repz
fdivrl
out
ret
loope
cmp
xchg
lea
jmp
cmp
fucomp
sbb
mov
fisttps
fucomip
xchg
xchg
clc
int3
out
cmp
enter
xlat
or
ret
test
or
xlat
mov
xacquire
out
out
sti
cmp
int3
loope
loopne
cmp
ljmp
std
leave
push
xchg
call
sti
ss
repz
leave
or
cmp
aad
not
test
neg
fisttps
ret
stc
shr
out
call
xlat
roll
call
and
test
test
out
fdivr
loopne
neg
clc
loopne
fdivr
jmp
out
into
repz
ss
fpatan
xlat
aas
out
iret
cmpl
ffreep
in
testl
mov
shlb
cld
enter
out
out
imul
rcl
out
repz
flds
icebp
lret
in
shl
lret
in
jmp
lock
in
in
mov
jmp
mov
cld
fcomip
in
shl
das
mov
aam
stc
fucomp
loope
sarb
fcmovnb
mul
mov
leave
leave
fucom
sub
repnz
ljmp
hlt
lret
iret
div
aam
addl
dec
call
add
rol
rcl
rcl
sar
and
adc
dec
and
or
jle
int
cli
fistl
xchg
in
xlat
clc
jmp
aaa
fcmovnu
aad
fdivr
ret
lret
fdivr
leave
in
int3
fdivr
fildll
xlat
jmp
repnz
ret
jecxz
test
lret
in
into
test
shrl
aad
sub
dec
cmp
fprem1
aam
repnz
fistl
xchg
into
loop
lock
lret
das
out
cmp
sbb
testl
xchg
hlt
shr
in
xor
in
in
cmc
xlat
out
cmp
cmc
rorl
in
sbb
xchg
addb
repz
lock
and
aam
mov
rcl
iret
xchg
shr
enter
cld
fcom
out
enter
rcr
clc
cli
in
sbb
out
out
cli
in
rcll
cmp
xor
out
out
ffreep
lret
into
shl
call
out
loop
in
mov
loop
fyl2x
xor
fdivrp
fucom
fcomip
in
std
addb
int
aaa
repz
leave
shl
std
fidivrs
loop
repz
test
int3
mov
xor
ljmp
aam
sbb
cmp
mov
mov
into
test
xor
in
cld
jmp
cmp
cmc
xlat
test
ljmp
test
xchg
xor
xlat
loop
icebp
fmulp
leave
int
cli
pushl
cli
std
lock
xchg
mov
loopne
xchg
loop
sub
lret
xor
out
in
and
aad
mov
cmp
icebp
fxch
test
jecxz
in
lock
cmp
shr
int3
not
cmc
test
fiadds
std
out
jmp
addb
leave
cmp
int3
stc
rolb
mul
roll
test
fscale
xchg
int3
xchg
mov
mov
xor
add
jmp
rcl
rcl
fstp
rcr
cld
cmp
jmp
cmp
jle
or
jle
hlt
cli
into
hlt
in
hlt
in
ret
xchg
cmp
fcomp
stc
out
rcr
into
in
test
leave
int3
shr
ss
loope
shl
mul
cmp
testb
test
mov
loopne
loop
ret
xlat
xlat
int3
adc
lret
fcmovbe
neg
test
out
xchg
xchg
rcr
aaa
int3
stc
repnz
shll
leave
iret
in
in
adc
or
dec
lret
int3
xchg
out
clc
sti
ljmp
fsubr
cmp
ljmp
xchg
shr
call
sar
lock
hlt
std
lock
fnstsw
repz
test
xchg
jmp
nop
loop
out
in
clc
xor
ss
fidivrs
in
in
iret
incb
in
fxam
lret
fucomi
in
leave
adc
cmp
mov
test
in
sbb
in
in
mov
xchg
lret
vpavgw
repnz
cmp
iret
cmc
cld
enter
sub
test
enter
cmc
in
aaa
loope
repz
aaa
xor
xor
call
out
or
xchg
repnz
repz
loop
fld
xor
hlt
imul
int3
aas
fcomp
cmp
mov
fcom
loope
xchg
jmp
sub
lret
xor
aaa
aas
lret
cmp
loop
mul
loopne
xchg
stc
cli
mov
iret
call
int
leave
rcl
cli
icebp
cld
repnz
div
loop
mov
and
ljmp
lret
out
fsubr
iret
cmp
idiv
lret
sub
cli
aas
mul
out
mov
in
in
imul
ror
xor
jmp
fadd
int3
dec
loope
iret
cmp
xchg
mul
cld
loopne
out
cld
xchg
out
aaa
out
lock
xor
cmp
ret
div
lret
mov
mov
mov
ror
jmp
leave
rcl
sarl
lret
cmp
xor
sub
mov
jmp
int3
enter
lret
int
stos
test
mov
sbb
jle
add
in
clc
fimuls
mov
cmp
jecxz
clc
int
in
lret
in
rcr
out
mul
in
loopne
xlat
in
test
iret
mov
hlt
cmp
std
enter
clc
cld
fadd
cld
cld
hlt
in
lret
addb
into
repz
imul
cmp
aaa
ds
xlat
aam
ret
loopne
aad
test
nop
mov
nop
in
loope
sub
aaa
int3
rol
test
shl
call
aas
test
decl
ret
cmp
out
cmp
aas
jmp
hlt
cmc
xlat
aas
loope
in
int3
ljmp
in
xor
aaa
aaa
aaa
fdivp
stc
aas
iret
lret
rcr
stc
addl
rcl
xchg
icebp
loop
xchg
ret
xlat
repz
hlt
fcmovnu
cli
repnz
repz
call
shr
or
jmp
aaa
enter
leave
rcl
out
fnstenv
lds
ljmp
xchg
nop
xor
repz
in
ljmp
aad
sti
aaa
aas
sti
cld
cli
fisttpl
into
in
xchg
int
mov
cmp
sti
aam
addb
neg
jecxz
idiv
dec
out
std
xchg
xor
repnz
in
cmp
sarb
icebp
loop
icebp
fdivrp
cmc
call
mov
sub
into
test
jecxz
ljmp
xor
fcom
idiv
test
fsub
xchg
in
in
xlat
fucom
cmp
fst
cmp
ror
fdiv
fldl2e
cld
loopne
mov
in
shl
cmc
lret
xlat
enter
add
fabs
jmp
xchg
mov
mov
mov
shl
out
hlt
aaa
into
in
xlat
cmp
fsubr
lret
cmc
xlat
hlt
cld
xchg
cmp
clc
xchg
cld
loop
cs
rcr
cmp
jecxz
idiv
in
dec
cli
test
cmp
xchg
mov
shrb
cmp
mov
movzwl
jg
xor
jmp
int
rcl
fcmovu
int
xchg
daa
ljmp
push
jle
or
jle
jecxz
repnz
in
icebp
idivb
cmp
test
ret
aad
cmp
fiaddl
lret
into
in
loope
xor
aad
aad
jmp
in
std
sub
out
iret
hlt
out
stc
fisttpll
out
out
mov
mov
leave
shr
lret
fst
ds
out
ret
mov
imul
into
orl
jmp
repz
sbb
cli
clc
loop
ret
fsub
jecxz
xor
loopne
ss
fldl2t
aaa
in
call
fadd
xchg
mov
cmp
in
jmp
fisttpll
xor
lock
cmp
fcomp
iret
div
in
out
test
ret
mov
test
in
fsub
cmp
xor
sti
out
iret
fiadds
aad
roll
incl
in
ror
out
in
cmp
out
cmp
repnz
ret
cmc
fiaddl
std
out
out
ss
cli
cmc
icebp
cmp
call
std
aad
repz
fsubrp
test
xchg
in
fst
lret
in
int
lret
shl
rcr
ss
fidivrl
loope
cmc
loop
lret
or
sbb
aad
das
out
hlt
in
aaa
repnz
cmp
fsub
mov
fchs
std
lock
addl
cmp
aas
shl
ret
flds
out
enter
out
fadd
in
vpaddusw
fcmovnu
cli
cli
idivl
fdiv
jmp
orb
lret
in
rcl
out
cmp
sub
int
fdivr
fsub
mov
xchg
shr
ret
das
clc
icebp
divl
sti
iret
shr
ds
into
out
loop
call
std
test
enter
incl
idivb
hlt
int
aaa
cmc
int3
in
ret
mov
vpinsrw
mov
and
shl
divb
rol
ljmp
fildll
enter
mov
jmp
xor
jmp
mov
fst
fxch
jg
lods
loop
test
jle
or
jle
xlat
cmp
loopne
aam
hlt
xlat
mul
fmuls
loop
out
not
fsubr
aaa
fsubr
cli
ret
ret
std
call
mov
xchg
xchg
xchg
out
xor
ljmp
fsubr
clc
fcomip
iret
test
rcl
test
aas
mov
cld
xchg
iret
fidivs
loope
jmp
clc
cmp
int3
clc
sti
jecxz
call
out
add
out
loopne
aam
loop
iret
repz
lret
faddl
in
enter
lock
ljmp
sti
out
sarb
fstp
xor
fcmovnu
jmp
in
and
loop
out
int3
out
xor
xor
int3
call
std
int3
aas
cli
iret
sti
xchg
mov
rcl
mov
mov
call
cld
loop
lret
rolb
ret
leave
leave
xchg
loop
int3
fsubr
cmp
aad
cmc
loope
ret
xchg
jecxz
mov
sti
mov
aad
icebp
aam
cld
jmp
ljmp
fcmovbe
std
std
in
decl
jecxz
repnz
rol
repnz
ljmp
in
sti
mov
ljmp
in
xorl
icebp
clc
into
shll
int
in
cmp
stc
mov
mov
cli
out
aam
out
enter
out
jmp
jmp
loope
incl
int
int3
test
int
std
call
repz
aam
hlt
icebp
iret
cmpl
ror
leave
mov
stc
mov
mov
mov
shll
shl
ljmp
stc
cld
ds
fstp
jmp
loop
lret
jmp
fdiv
in
iret
aaa
cld
in
shr
int3
cmp
jecxz
rol
movl
mov
aaa
in
stc
in
aas
rcl
fucom
fdivrp
out
mul
jecxz
fiadds
in
lea
mov
mov
cmp
je
mov
movl
jmp
mov
mov
xor
add
jmp
rol
lret
aad
mov
fidivrs
jle
or
jle
lock
xchg
shr
sar
leave
sarb
fadd
div
jecxz
vpaddw
lea
repz
shr
cmp
jmp
fsub
repnz
xor
fcomp
and
out
int3
xchg
loop
or
lock
rol
call
into
idiv
iret
aas
loop
orb
mov
repnz
xor
out
shl
fcmovnbe
cmp
aad
repnz
cmp
test
and
fninit
fdiv
cld
mov
call
iret
shr
xor
jmp
test
in
xlat
loope
cld
ljmp
out
xor
int3
ljmp
xor
in
ljmp
xchg
loop
shlb
jmp
repnz
sar
aam
test
cmp
mov
ljmp
rcl
xchg
xor
cmp
cmp
out
loopne
xchg
inc
lret
test
loope
lock
cmp
cli
lret
sbb
addb
in
fucomip
out
movl
aas
call
sarb
cmp
cmc
call
and
ds
cli
test
mov
mov
orb
clc
xlat
lret
ffree
vpsllw
jmp
leave
jecxz
in
loope
call
icebp
stc
fsubp
clc
fiadds
fsub
neg
lret
in
fiadds
cmc
mul
fsubr
fdivr
repnz
ret
in
fcmovb
leave
fisttps
rolb
clc
jmp
fdiv
out
out
hlt
add
sar
cli
out
stc
hlt
repz
xlat
nop
sti
in
leave
ror
jecxz
mov
sti
cmp
cld
lock
fxam
test
fcmove
lret
ljmp
xor
lret
iret
cmp
out
aad
lock
cli
mov
in
test
mov
sbb
jecxz
hlt
out
aam
cld
fcmove
fidivrl
cmp
je
jmp
aam
int
aad
fldt
sbb
or
jle
aas
rol
ds
sbb
xlat
ljmp
int3
rcl
repnz
repnz
std
iret
cmp
cld
rol
sar
cli
not
sar
into
repnz
mov
rcl
jecxz
shr
repnz
lret
cmp
aam
ret
lret
shr
mov
in
ror
leave
hlt
xlat
aad
aam
cld
cmp
in
fldln2
clc
out
lret
fisttpll
aas
loopne
xor
ss
enter
shl
test
out
enter
sub
xchg
mov
repz
out
ret
leave
sti
shl
in
test
roll
in
sti
cli
stc
jmp
jecxz
int
sub
jmp
in
clc
idiv
in
jecxz
fxam
ret
out
incl
fsub
in
xchg
repnz
rcr
lret
fdiv
aam
cmp
mov
mov
clc
nop
std
lock
iret
xor
lret
cmp
xlat
sarb
rorl
ret
out
cli
in
frstpm(287
nop
xchg
das
lret
lock
out
iret
aas
xchg
mov
mov
stc
out
clc
ret
xchg
cld
mov
xor
repnz
icebp
cmp
repz
cmp
fcos
stc
rcr
adc
mov
iret
xlat
repnz
lret
fcomi
shl
cmp
cmp
lock
rcr
loopne
sti
int
mov
in
shll
jmp
aad
sti
fsubr
cld
rcl
jecxz
iret
rcr
ror
adc
mov
lret
iret
xor
out
cli
ljmp
loopne,pt
shl
roll
icebp
or
xor
out
clc
ljmp
shl
fucomi
jecxz
aam
ljmp
xchg
shl
das
lock
cli
cmp
cmp
rcl
mov
mov
cli
xchg
mov
shlb
jmp
dec
cmp
test
cld
orl
clc
jmp
aam
iret
int3
fst
outsl
fmull
cmp
jle
or
jle
incb
call
shr
not
cmp
in
rol
cmc
mov
fsub
int3
fisttpl
clc
ss
cli
fidivrs
stc
repnz
cmp
clc
xchg
hlt
xchg
loop
in
sti
lret
lock
test
xor
cli
jmp
fsub
iret
les
mov
mov
mov
fdivp
sar
repz
xor
cmp
iret
cmp
xchg
testb
jmp
stc
loop
xor
fucomi
ljmp
iret
repnz
fadds
mov
out
loopne
ss
out
rol
sti
idivl
jmp
in
in
rcl
cli
sbb
loopne
lret
fdivr
jmp
das
clc
bnd
aaa
call
fdiv
imul
sti
sar
int3
fucomp
test
aam
out
not
xor
sar
loope
fcmovnbe
mov
fucomp
popl
in
out
ljmp
shl
repnz
shl
fdivr
ljmp
fst
decb
cmc
fnstsw
std
cmc
cmp
lock
out
filds
fucom
ljmp
cmc
jmp
cmp
clc
aam
lock
rcl
test
jecxz
jecxz
xchg
rorb
xor
cmp
fcmovnbe
shl
addb
out
mov
loope
lock
out
rcl
in
icebp
repnz
int
fcomip
sub
loope
loope
in
fcmove
enter
test
out
in
stc
cmp
out
shr
fsubr
fucomip
lock
shl
lds
jmp
enter
jmp
fsubr
in
lret
lret
rol
fmulp
leave
aam
in
ds
fsubp
jecxz
roll
cld
jmp
in
xchg
fsqrt
clc
in
repnz
out
in
fstpt
push
mov
xchg
mov
fmul
cmc
in
fmull
jmp
ret
xlat
int
fstp
cltd
sbb
je
sub
or
jle
out
ljmp
sbb
mov
rcll
cmp
aaa
cmp
cmp
in
neg
repnz
enter
ljmp
ljmp
ret
std
repz
ror
loopne
ret
lds
inc
cld
jmp
aas
jmp
call
sbb
out
aad
out
and
loop
in
fsubrp
imulb
cmp
das
repz
rcl
neg
rol
aad
out
sti
std
test
xchg
lret
out
cli
rol
cmp
lock
icebp
jmp
stc
cmc
cmp
out
adc
test
std
cmp
call
xor
cmp
cmp
sar
out
leave
rcl
call
mov
decl
test
xor
in
aaa
fdivr
stc
iret
idivb
push
dec
test
xchg
xchg
loop
in
lret
div
icebp
div
fsin
shl
aas
xor
inc
mov
loop
lret
jmp
jmp
cmp
fcmovbe
loopne
xor
repz
mov
test
out
leave
mov
lock
into
xor
ror
rcr
int
aas
fsubrp
fdiv
addl
mov
in
lock
das
in
rcl
aam
fsubr
int3
hlt
loop
fdivp
cmc
mov
jmp
mov
adc
shl
int3
out
cmc
repz
rolb
loope
int3
fcomip
orb
out
mul
cmp
in
test
cli
les
sbb
xchg
loopne
ljmp
in
icebp
ss
fnstcw
loop
cmp
addb
nop
adc
icebp
cmpb
aaa
iret
imul
in
fsubr
ljmp
xchg
std
out
mov
xor
icebp
cmp
jmp
cmp
out
fdivr
mov
lea
add
mov
mov
mov
jmp
rol
xlat
int
arpl
mov
imul
dec
xor
jle
or
jle
cld
fdivrp
mov
in
out
xor
repz
in
out
aas
lret
ds
xor
push
xchg
xchg
lock
jmp
lock
std
push
test
faddp
loope
jmp
fucomip
call
xchg
xlat
loope
shl
call
hlt
out
cmp
test
rol
mov
fsubp
out
out
mov
int
into
repnz
leave
in
aaa
sub
cmp
repz
xlat
call
fisttpl
repnz
aam
sarl
loopne
out
fdivrp
out
iret
aam
in
fnstcw
lret
ljmp
aam
hlt
out
in
fcmovbe
fst
icebp
xlat
sar
icebp
std
jecxz
out
lds
xchg
cld
mov
aaa
xor
out
out
cmp
cmc
ds
into
xlat
test
lds
jmp
loope
std
call
lret
ret
cmp
into
ss
cld
std
cmp
aam
lds
stc
test
in
lret
mov
xor
enter
lret
cmp
std
ret
xchg
stc
out
jmp
xchg
decb
imul
aad
idivb
shl
ds
stc
loop
repz
cmp
lea
cmc
ljmp
cmp
icebp
cmp
test
add
std
mov
loop
ljmp
cmc
int3
xor
ftst
jmp
fildl
cmp
rcr
loope
sti
lock
in
aad
sti
xor
cmp
int3
jmp
roll
neg
ljmp
int
out
ror
ret
out
std
aaa
aam
cli
ror
cli
aas
jmp
lock
mov
out
in
in
xor
loopne
out
cmc
out
xor
in
ds
jmp
roll
loope
fisttpll
xor
in
repz
shl
call
rorb
or
mov
jmp
enter
ret
xorb
pop
sub
jle
rcr
xor
lock
fdivrp
ds
loopne
fninit
or
xchg
adcl
out
fnstsw
enter
aad
xchg
ds
aam
lock
enter
aam
lret
cmc
xlat
int3
ljmp
xchg
cmc
aas
loopne
enter
mov
fisttpl
aad
icebp
ror
fdivr
std
aaa
cmc
lret
loopne
loope
ljmp
out
mov
orb
int3
ljmp
cld
rcr
xchg
enter
aas
xlat
out
into
lret
aad
aaa
out
leave
cmp
into
clc
cmp
cmp
aad
int
repnz
in
fiadds
int
lds
bnd
ror
sarl
fndisi(8087
cmc
std
stc
aad
fcmovb
out
call
fsubrp
loop
xor
into
cld
sti
ds
fiaddl
orb
std
lea
xchg
xchg
rcl
rcr
cmp
cmp
fucomi
fcmovu
repnz
lret
int
test
mov
divl
ret
fcmove
in
cmp
out
aas
xlat
in
test
aam
shr
enter
mul
ret
mov
shl
out
xor
leave
clc
hlt
cmp
ljmp
loopne
fiadds
fmulp
out
push
icebp
call
in
into
lret
xlat
icebp
std
fdiv
enter
in
in
xchg
int3
out
xchg
rcl
in
xlat
icebp
cmp
in
call
int
repnz
cmc
aad
or
sti
ljmp
out
lds
lret
cmp
test
xchg
mov
addb
mov
stc
into
cmp
into
jecxz
fdivr
in
faddp
xchg
out
loop
mov
shr
ljmp
rcl
mov
hlt
fxch
out
call
mov
lock
jecxz
int3
sti
rcr
std
icebp
jmp
test
jecxz
mov
xor
jmp
leave
xchg
aaa
cmp
loop
das
jle
or
jle
incl
push
out
jmp
addl
ds
lret
xchg
clc
rcr
in
jecxz
addl
aaa
divb
repz
in
jmp
std
fdivrp
fsub
cmp
cmc
mov
out
nop
ret
jecxz
cmc
jmp
in
ljmp
roll
loopne
fcmovu
lret
in
div
loop
cld
int3
xchg
leave
iret
aaa
leave
xor
xor
cmc
xchg
sbb
fstp
cli
sub
mov
repnz
sti
in
fmul
lock
aas
fsub
cmp
std
xchg
test
rolb
fdivs
roll
rolb
faddp
in
repnz
lock
and
div
enter
ds
lret
cli
rolb
mul
fisttps
xchg
call
into
ss
call
sar
loopne
in
cmp
stc
mov
mov
in
int3
in
int3
xor
jmp
iret
fsub
std
clc
in
fmul
std
mov
icebp
jmp
out
int3
clc
hlt
cmp
cmp
rolb
lret
fucomip
fldl
mov
std
clc
cld
lret
loope
cmc
testl
cld
out
xchg
mov
xchg
int3
xor
ljmp
shl
repz
mov
test
mov
xor
hlt
icebp
xor
into
xor
sbb
in
in
leave
test
loope
in
faddl
loope
lret
xor
in
aam
cmc
adc
lock
call
lret
jecxz
in
mov
xchg
mov
aaa
sub
xlat
call
cmp
shl
sti
cld
out
cld
nop
iret
in
repz
aam
out
leave
lret
cmp
cmp
repnz
mov
mov
std
nop
lret
add
mov
mov
mov
xor
add
cmp
je
mov
mov
add
mov
mov
mov
mov
jmp
into
lret
fcmovne
into
fistpl
adcl
fdivl
jle
or
jle
jecxz
jecxz
cmp
into
in
cli
out
sbb
sar
out
hlt
jecxz
fxtract
loop
ljmp
aad
int
xor
repz
repz
out
jecxz
lock
in
xchg
orb
xor
in
int3
hlt
call
rcl
ret
ds
icebp
iret
in
xchg
decl
aaa
in
ljmp
inc
out
std
cmc
xlat
flds
out
xor
shl
call
ror
cmp
cmp
int
int
fists
cmc
xor
fcmovnu
repnz
div
sbb
aad
fmuls
cmp
shr
into
aad
aam
into
clc
repz
icebp
xlat
rcl
decb
mov
xor
out
sti
cmc
cmp
repnz
and
cmp
call
lea
shr
cmp
fst
repz
cmp
test
add
out
in
xchg
icebp
lds
xor
in
cmp
std
cmp
std
rol
std
roll
jecxz
shr
xchg
call
rcr
jmp
leave
int
in
sarb
cli
aas
iret
stc
rorb
cli
jmp
repz
fld
icebp
xor
sarb
rol
cmp
shl
ds
fcmovu
xchg
mov
in
test
ss
int
fdivrp
sarl
fidivrs
shl
roll
mov
neg
out
in
mov
mov
shl
aaa
out
cmp
in
imul
fcom
mov
neg
lret
fiaddl
hlt
xlat
in
in
idivb
in
loop
fmuls
mov
icebp
rcll
clc
in
xor
aam
xor
adc
stc
loopne
fdivp
vcmpps
out
repz
ljmp
aad
or
jmp
ret
enter
int
aas
icebp
jg
les
ljmp
jle
in
testb
call
sub
repz
into
hlt
call
call
loop
jmp
sti
leave
in
sub
out
sub
cmp
stc
int
faddp
xchg
ljmp
rorb
in
test
imul
shl
faddp
iret
cmp
call
nop
loopne
sti
decl
lret
divb
fcmovnu
cmp
lret
not
repnz
enter
call
hlt
rol
enter
jmp
lret
ds
fst
out
ret
jmp
sub
jmp
int3
leave
int
neg
fmul
fucom
and
jecxz
mov
icebp
out
test
xlat
loop
fst
cld
call
cmp
rcl
rorb
cld
mov
xchg
orb
repz
out
fiadds
cli
out
out
jmp
out
std
out
aam
jmp
int
jmp
sti
fsubp
loopne
hlt
cmp
std
stc
cmp
aam
jmp
in
fcmovne
into
divl
leave
out
cmp
aam
xor
out
test
fcomp
cli
idiv
ljmp
or
out
das
rcl
sarl
shl
loopne
aam
div
fisttps
fisttpll
xchg
out
repnz
cmp
cld
cmp
iret
loope
loope
aad
vpsubsw
aam
int3
cli
into
jmp
out
jmp
fnstenv
aad
in
cmc
shl
add
ret
cmp
sub
in
in
jmp
aaa
aaa
clc
imul
fcmovnbe
cmp
xchg
loopne
lret
mov
imul
int3
out
cld
repz
imul
aaa
sbb
shl
fadd
cli
xchg
jecxz
in
fimull
xor
cmc
out
cmp
fdivr
fscale
loop
inc
cmp
fxtract
xchg
int3
clc
fdivl
cmp
je
mov
mov
xor
add
mov
jmp
xorl
jmp
mov
mov
jmp
rcl
rcl
rcl
aad
xchg
stos
gs
aam
clc
xor
jle
enter
repz
out
loop
enter
cmp
addb
ret
jmp
loop
sti
rolb
in
cmp
cmp
sti
repnz
fcmovbe
cli
icebp
lds
sbb
sub
out
cld
repz
cmc
hlt
into
ret
cmc
cmp
xor
shr
addl
in
addb
out
clc
out
fsub
fdiv
aaa
stc
sti
ds
neg
out
call
enter
ljmp
iret
in
shl
out
test
shr
cmp
sbb
fisttpl
mov
addl
in
call
clc
lret
rolb
cmp
test
lock
cld
test
ljmp
icebp
jmp
lock
fcmovu
hlt
stc
push
fisttpl
xchg
in
enter
in
repz
rcl
cmp
sti
xabort
out
lret
nop
xchg
cmc
int
cmc
test
iret
fdivrs
neg
loopne
rcr
in
loopne
in
enter
mov
cmp
xor
int3
fcmovu
cmp
shl
xchg
rcr
xchg
xchg
ljmp
jmp
idiv
in
rcl
xchg
ret
stc
in
out
cli
fsubp
rcll
shr
cld
ror
repz
xor
repz
leave
fucom
mov
int
les
ljmp
ror
icebp
rcl
into
stc
fcompp
jecxz
aad
xchg
icebp
iret
xchg
ret
xor
neg
lret
jmp
in
test
out
out
cmp
ret
repz
xchg
shl
cli
fdivl
rcl
xor
into
rcr
shl
leave
orl
repnz
fdivr
cmc
xor
aad
lret
loope
aas
cli
shl
flds
int
out
and
leave
ret
fld
out
std
fisttpll
inc
or
inc
or
jne
call
mov
jmp
enter
int
int
repz
xchg
jle
or
jle
sti
sti
fdivrl
into
rol
incb
fimuls
mov
shl
call
cmc
fcmovnu
into
cmp
stc
rolb
sub
iret
xchg
cmp
in
cmp
cmp
fld
lock
test
xlat
jmp
out
dec
rcl
lret
bnd
fiadds
ljmp
icebp
out
rolb
jmp
sti
fdivrs
lret
div
ljmp
jecxz
rcr
fldl2t
loope
std
out
adc
aam
ss
fcmove
into
das
in
fnstcw
cmp
aad
xchg
clc
int
mov
rclb
cmp
xor
fnstsw
fsubr
test
aam
fadds
lock
cmp
cmc
iret
out
icebp
call
neg
stc
icebp
mov
mov
stc
lret
out
icebp
in
call
icebp
in
int
sti
cmp
fcmovu
ds
sbb
fpatan
mul
call
out
jmp
out
repz
loopne
ss
cmp
aam
repz
neg
in
ds
repz
mov
loop
icebp
into
jmp
hlt
xabort
mul
ds
aad
orb
mov
rolb
leave
ror
in
cli
xor
stc
iret
rcl
ret
rolb
clc
mov
xchg
or
ret
xor
out
cmp
addl
faddp
adc
xchg
lret
lret
out
icebp
iret
icebp
fcmove
cmc
shl
ss
add
fucom
mul
mov
out
test
out
mov
xor
sarb
aad
out
fiadds
shr
loope
int3
mov
jmp
shr
les
hlt
cmp
cmp
ljmp
fdivrl
sar
test
mov
out
mov
xlat
fdiv
aam
in
sar
fdivr
loope
ret
leave
cmp
loop
ret
je
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
leave
ret
push
mov
mov
movl
mov
movzwl
xor
mov
jmp
aad
aas
fst
int3
aad
adc
stos
aam
sbb
jle
cli
testl
xor
into
ffree
leave
rcl
rcr
cld
cmp
mov
filds
leave
in
xchg
cmp
out
cmp
out
rcr
shll
ret
flds
cld
mov
iret
fldl
shr
fcmove
int3
rcr
int3
sti
ror
out
rol
fdiv
hlt
mov
cli
leave
loopne
loope
out
icebp
fdivs
call
or
fcomi
fsub
testb
stc
sti
in
xchg
iret
int
xor
repnz
jmp
in
out
clc
fucom
sti
or
loop
xchg
out
test
sti
cmp
lret
hlt
aaa
iret
ret
cmp
stc
xlat
ds
orb
in
xchg
rclb
cmc
shl
hlt
repnz
cmp
in
ds
rol
cmp
into
test
sub
repnz
and
mul
repnz
test
call
repnz
cld
aad
loop
lret
iret
in
leave
aaa
jmp
fdivrs
mov
in
lret
xchg
mov
ror
out
jmp
std
adc
test
loope
sbb
xchg
fucomp
mov
lock
out
iret
cmp
repnz
int3
sar
xor
dec
cld
jecxz
loop
out
adcb
cmp
xor
cli
int3
aas
incl
cmc
div
loope
in
in
sbb
test
mov
xor
fcomp
fmul
aad
loop
xchg
cmpl
rol
cli
sti
loope
mov
mov
jecxz
xor
sar
fmul
sar
aas
sti
add
repz
test
idiv
ffreep
fstp
icebp
mov
ljmp
aaa
enter
in
in
shl
out
sti
inc
xlat
jecxz
in
out
in
mov
ljmp
cmp
icebp
sbb
aas
in
rcr
jmp
xchg
frstpm(287
loopne
out
shl
repnz
cmp
stc
stc
not
hlt
sti
fnstcw
rcl
not
call
xchg
cld
cld
xor
clc
jmp
std
cmp
lret
lret
lret
out
fldl
sub
mov
xorl
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
call
jmp
mov
xorl
xor
cmp
je
mov
mov
sub
add
mov
andl
mov
sub
andl
xor
jmp
into
int
fstp
aam
or
imulb
cmp
cmp
jle
cmc
lret
fadd
test
hlt
cmc
and
hlt
lock
cmc
fcmove
call
fcmovnb
test
jmp
mov
ret
aaa
fucomi
repnz
shl
cmp
adc
xchg
out
test
int3
test
in
in
cmc
shl
icebp
jmp
cmp
ds
cli
jecxz,pt
cld
xlat
leave
jmp
fsubp
ror
addl
aad
cmp
repz
xor
rol
aam
clc
mov
int
loope
int
xchg
test
fsubr
ror
lock
out
repz
aad
cmc
rcr
fsubrp
jmp
int3
into
dec
hlt
out
into
lret
fsubr
out
cmp
call
mov
mul
clc
orl
test
fdivrs
in
out
out
ds
faddl
fdivr
in
xchg
shr
in
cmc
stc
out
call
leave
aad
ret
out
cmc
addb
lret
mov
lock
fdivrs
ror
int
mov
repnz
cli
in
cmp
enter
jmp
repz
jmp
cmp
in
sar
div
decb
mov
ret
in
int
in
int
cmp
sti
out
std
lock
out
out
cli
int
in
out
cmc
out
rcl
jecxz
int
lret
lret
fcomi
repnz
in
in
stc
xlat
lret
int
nop
out
into
repnz
in
stc
ret
cld
lret
sarb
lret
stc
repz
mul
jmp
cmp
aam
call
lds
cmp
aam
stc
cmp
fcom
jmp
jmp
std
loop
into
dec
xchg
repz
xlat
cmp
lock
loopne
fcmovnbe
jmp
test
mov
ret
aad
xor
in
ret
enter
test
lret
fists
leave
fcmove
in
sarl
ret
fneni(8087
fcmovnb
mov
sti
incl
out
aas
hlt
out
ret
fcmovu
out
std
leave
clc
loopne
stc
cld
fcomp
stc
sarb
mov
and
inc
add
test
add
mov
subl
jmp
leave
rol
ret
int
cwtl
stos
cltd
fs
pop
dec
mov
jle,pt
cmp
jle
xchg
stc
movb
xlat
shrb
aaa
xor
loope
lock
sub
and
fsubr
jmp
iret
call
ljmp
hlt
repz
mov
xchg
in
jmp
in
cld
jmp
aad
test
lock
in
xlat
xchg
fimull
out
lock
iret
aam
fucomp
ss
xlat
fcos
fcmovbe
ret
test
test
lock
icebp
in
out
xor
hlt
cmp
clc
xor
lock
sar
shl
filds
out
orb
shl
repz
leave
enter
xorb
loop
xlat
neg
repnz
test
test
mov
loop
fcmovbe
iret
lret
jmp
ret
cld
aad
fscale
test
fsub
fucomi
shr
test
jecxz
out
iret
cmp
cli
lock
out
flds
adc
loope
fucomp
int3
lret
out
loopne
enter
lret
out
xor
std
push
sar
fnstcw
aas
mov
icebp
fcomip
div
lret
out
cs
fdiv
lret
sti
into
aas
test
mov
shl
ret
mul
dec
nop
jecxz
in
repnz
lret
xor
icebp
stc
cmp
loopne
or
test
out
icebp
jecxz
lret
cld
mov
in
call
sar
cmp
fcmovnb
f2xm1
aas
sub
std
lret
jmp
into
fucom
mov
shlb
fcom
into
ss
out
cmp
cli
cmp
iret
fucomp
lret
fsts
xor
xor
ret
shr
leave
sti
jecxz
sbb
sti
rcr
loop
vpsrad
lret
aam
test
fmul
lret
jmp
cli
idivb
sarl
hlt
xchg
out
in
sti
int3
mov
jmp
loope
int3
jecxz
cmp
fstp
add
sar
test
inc
in
in
out
aam
mul
shr
icebp
out
sti
enter
fcmovnbe
aad
sti
fiadds
leave
fsubr
ror
xchg
in
cmp
sti
xor
shlb
fdivrp
sar
into
add
movl
jmp
mov
incl
xor
jmp
into
into
rol
rol
rcl
mov
or
mov
jle
cmp
jle
repz
aad
ljmp
fbstp
ss
iret
fpatan
hlt
cmp
cmp
iret
aas
clc
not
rol
xchg
in
test
fiadds
loope
lock
int
xor
ds
inc
in
cmp
fiadds
in
jmp
and
in
test
in
test
div
cli
xor
testl
test
aam
cmp
icebp
out
cmp
cmc
fcmovnbe
loope
lret
fucomip
addb
iret
vpaddsw
das
xor
aas
cmp
xor
xlat
fscale
jmp
loop
rorb
out
into
enter
cmp
xor
repz
loope
jecxz
xlat
fsub
int
mov
shl
xor
leave
std
jmp
loopne
cmp
fdivr
out
ret
jmp
shl
and
loop
lock
in
les
lret
cmp
cmp
loop
cmp
icebp
aam
std
mov
mov
sub
int3
cmp
ret
in
test
jecxz
in
orl
out
xlat
aam
out
fldl
out
repz
mul
aad
loop
xchg
roll
xlat
fidivl
fucomi
rcl
sbb
repnz
repz
in
out
leave
lock
int
aam
hlt
in
cld
std
sti
loopne
sbb
sti
repnz
xlat
jmp
out
out
xchg
xlat
aaa
ror
div
fld1
aam
rcr
std
ds
in
hlt
mov
clc
cli
add
ljmp
aaa
hlt
in
call
loope
inc
orl
jmp
xchg
or
loope
cmc
fxch
idivb
cmp
jmp
ror
fucom
lock
fadd
call
iret
jecxz
xchg
xchg
lock
xor
aaa
xor
cli
loopne
xlat
ffreep
loop
out
mov
cmp
divb
aam
cmc
sar
fidivs
aam
fidivrl
fst
repz
loopne
cld
jecxz
repnz
mov
in
ljmp
dec
fnstsw
mov
jmp
ret
leave
lret
aad
flds
jge
sbb
ret
cmp
jle
fucom
in
aam
in
in
movl
jmp
sti
fcmovb
ror
in
icebp
repz
repz
rcl
sbb
ljmp
loope
or
xor
fdivr
ret
lret
sar
aaa
aam
cli
iret
xlat
test
repz
fisttpl
lock
out
xchg
in
xor
jecxz
mul
hlt
out
int
sti
fstp
fiaddl
mov
xor
xor
div
cmp
cmp
clc
rcl
jecxz
cmp
mov
out
mov
loopne
in
int3
xchg
int
clc
xlat
divb
enter
in
loopne
aad
fcmove
xchg
jecxz
out
in
mov
loop
int
loope
idiv
fcom
cld
in
repz
roll
fisttpll
into
fdivr
lock
ret
cmp
hlt
aaa
into
cmp
loope
aam
mov
ret
out
jmp
xchg
out
in
into
xor
xor
cmc
out
loopne
rcr
xlat
fcomp
in
std
loop
sbb
mov
in
lret
mov
lock
fcom
dec
int3
call
xor
incl
mov
shl
in
repnz
clc
call
xor
aam
int3
sbb
xlat
not
fcmovnu
mov
loope
leave
std
fucomp
mov
jmp
int3
jmp
das
pushl
clc
xor
fadds
xlat
mov
repnz
icebp
xlat
ret
cmp
cmp
cmpb
aam
ret
xlat
ljmp
jmp
out
xchg
in
ljmp
lock
fld
aad
cmc
repnz
cli
fstp
aam
ror
fxch
shr
cmp
out
cmp
out
cmp
in
jmp
xchg
mov
divl
out
stc
int
rcl
sti
pushl
in
rolb
repnz
mov
test
out
xchg
icebp
shl
jecxz
lret
xor
cmc
clc
int
rcl
sbb
aam
in
jmp
call
rol
lret
das
aam
bnd
std
ds
fldl2t
incb
ljmp
add
rol
jmp
fnstcw
jmp
iret
fmul
aad
clc
sub
mov
dec
les
cmp
jle
out
out
std
aam
jmp
xchg
mov
divb
ss
cmp
into
divb
hlt
cmp
out
idiv
cmc
in
jmp
fldl
jmp
aad
stc
shrl
fstp
repnz
cli
lret
loop
fadd
iret
fld
loop
jecxz
in
out
cld
jmp
das
ret
int
int
aas
clc
incl
cmp
fld
mul
iret
xchg
xchg
ror
mov
std
lock
cmpb
out
ret
repnz
rol
icebp
xchg
ljmp
leave
test
cld
cmp
ret
int3
fnstsw
cmc
cli
xlat
mov
loope
mov
xchg
adcb
in
div
loopne
into
fyl2xp1
fimuls
out
mov
or
adcb
aaa
idivb
rol
stc
out
int
aas
ljmp
xchg
xchg
lret
repnz
neg
aam
aam
into
icebp
aam
mul
xchg
mov
out
in
fucom
out
out
rcl
fcmovu
xor
lret
stc
cli
addl
loope
call
fdivr
ret
ljmp
sbb
fdiv
lds
xchg
icebp
xchg
loope
fucom
int3
rcl
int
idivb
in
aam
or
ds
test
mov
in
test
repz
int
neg
xor
fidivrl
clc
std
lret
hlt
ds
xchg
jecxz
out
sbb
leave
cmp
int
enter
aam
cmp
aad
shl
rcl
fldl
xchg
stc
repz
not
shr
sub
test
ljmp
std
cli
jecxz
vshufpd
out
call
repnz
cmp
cmp
sub
jmp
clc
ret
fucompp
fcmovne
mov
iret
repz
loopne
out
cli
aad
aam
cmp
xlat
cmp
cmp
mov
cld
sbb
out
sub
aam
in
cld
enter
cmc
roll
fxtract
jmp
out
cld
stc
in
lret
std
rorl
out
lock
aas
xor
add
mov
jmp
mov
mov
jmp
rcl
xlat
fcmovnu
rcr
in
repnz
insl
lods
dec
arpl
or
jle
cmp
jle
out
int
into
std
ret
loop
in
into
mov
fisttpl
aas
lret
ljmp
cmp
stc
fcmovb
cld
out
fiaddl
test
xchg
addb
out
not
divb
loop
int
aam
test
mov
out
clc
out
rorl
not
sti
fcmovb
ds
int
ds
test
test
in
mov
orb
aam
xlat
cmp
clc
shl
std
sar
in
in
ljmp
call
sub
out
xor
stc
in
out
sar
fiaddl
addb
loop
xor
ljmp
sub
xchg
repnz
lret
test
int
into
sub
cmp
sti
lret
cmc
rcr
into
repnz
repz
cmp
call
xchg
not
xor
jmp
out
loop
rcr
aaa
repnz
std
and
in
nop
shl
out
jmp
jmp
in
into
rcl
out
int
cmp
roll
sti
in
std
ljmp
fcmovb
cld
std
rcl
cmp
loop
in
loop
fadds
lret
lret
sti
fsts
ret
stc
int3
enter
sti
lret
iret
cmp
xchg
stc
loope
cli
cmp
incl
hlt
into
ljmp
lock
std
cmp
xchg
mov
incb
iret
xlat
call
in
sbb
out
xor
fcmove
std
in
stc
leave
enter
out
mov
aaa
lock
xor
aad
cld
xor
test
loope
leave
rclb
lock
ret
icebp
lds
stc
aaa
sar
jmp
cmp
xor
lret
fildl
iret
fdivp
out
clc
sar
aam
fdiv
std
rcr
aad
into
rolb
les
cmc
rclb
into
xor
aaa
div
aas
out
rcl
icebp
fld
test
xchg
lea
rcl
vpaddsb
dec
mov
mov
jmp
enter
fcmovnbe
fcomp
insb
jae
ficoms
cmpsb
iret
leave
jle
cmp
jle
clc
fxch
fdivr
into
sar
inc
std
aam
stc
out
xchg
mov
out
stc
out
fmul
in
repz
xlat
addb
icebp
jmp
in
loope
idiv
cmc
jmp
cmc
sar
in
rcr
fnstsw
and
mov
mov
xor
cs
in
into
aas
xor
sti
cmp
loopne
aam
jmp
and
fstp
std
jmp
call
fcmovne
div
shr
cli
rcr
enter
in
in
nop
xchg
std
divl
das
xor
aam
into
leave
out
lock
sti
out
test
aam
testb
enter
aam
xchg
aam
clc
jmp
fdivrs
lret
ljmp
out
xor
add
aad
cld
in
into
xchg
call
sub
int
sti
aaa
or
repnz
frstpm(287
fsubr
out
int3
repnz
lock
shr
fnop
leave
xlat
shl
cld
fimull
ljmp
in
fcomp
idivl
out
sar
lret
hlt
jmp
aad
incb
ret
int3
lret
xchg
loope
ljmp
jmp
in
clc
aas
adc
xchg
cmc
loop
std
clc
std
int3
shr
jecxz
or
call
stc
cmp
lret
not
fcom
cmp
sti
stc
xchg
out
test
int
xor
out
int3
not
ror
int
lock
out
ret
addb
loope
jmp
imul
repz
cmp
imul
sub
aad
rcr
cmc
in
loope
in
shr
icebp
mov
iret
das
aam
in
in
shl
aam
xchg
leave
mov
lret
test
hlt
fldz
shlb
int
jmp
and
mov
popl
neg
leave
ss
iret
icebp
shl
in
shl
shl
incb
ret
loopne
xchg
in
aaa
clc
call
cmc
cmp
fcomip
fildl
out
out
mov
mov
loop
enter
lret
iret
out
or
add
pop
jmp
aas
lret
ror
lahf
jmp
inc
push
cmp
jle
iret
cmp
jmp
shl
ret
sti
mov
in
dec
fmull
cs
fcmovne
ss
in
loopne
aam
cmp
ret
ds
test
into
call
cmc
iret
out
fdivrl
cmp
lock
out
fnstsw
ret
cmp
aad
xchg
mov
jmp
xlat
xlat
cmp
clc
fneni(8087
cmpl
cli
loop
hlt
fsub
in
jecxz
mov
loopne
test
jmp
cmp
shl
xlat
ret
into
call
xchg
call
rol
cli
in
jecxz
out
lret
rcl
into
inc
in
xchg
in
jecxz
std
orl
shl
xor
sti
out
aad
stc
fmull
nop
out
in
mul
into
sti
out
fcmovbe
clc
stc
cmp
idivb
ds
in
loop
fcmove
lret
lret
lock
xlat
enter
stc
in
aam
fmul
repnz
rcr
std
stc
test
fisttpl
loopne
loope
cmp
cld
stc
shl
ror
aas
cli
sarl
fcomp
addb
fiaddl
repnz
icebp
cmp
shll
fdiv
mov
mov
fsub
int3
lret
xchg
mov
shl
sub
fsubp
ds
ret
push
mov
jmp
mov
xchg
dec
call
sarb
out
lock
fucom
fmull
repnz
cli
rcl
iret
out
cmp
out
loop
cmp
xchg
jmp
test
int
rcll
in
in
shl
aaa
shl
cld
cli
rcl
stc
jmp
imul
popl
icebp
xor
rcr
cmp
cmc
fcmovb
ret
out
stc
mov
fcmovnb
in
sti
mov
out
repz
cmc
cmp
int
cli
lret
aam
and
and
test
out
loop
out
out
jmp
jecxz
xor
cmp
loopne
out
addb
int
mov
stc
lock
aam
xchg
int
ficompl
or
push
mov
mov
xor
mov
jmp
ror
aas
fstp
int3
fisttpl
dec
shrl
inc
int
jle
add
fcmovu
jmp
out
std
shl
in
repnz
sar
fstp
fcomp
imul
cli
mov
mov
neg
icebp
cld
lret
jecxz
cmp
fcmovbe
cld
roll
loopne
nop
xchg
in
out
out
hlt
in
icebp
jmp
aad
ljmp
aas
fucomip
fmull
repnz
sarb
repz
loopne
fcmovnbe
hlt
xchg
out
lret
lret
aaa
cmp
cmp
loop
out
ljmp
cmc
ljmp
hlt
call
xorl
fsincos
loopne
in
ret
icebp
repz
ret
xor
xor
cli
cmp
into
and
xchg
stc
jecxz
jmp
imul
out
aad
xor
sbb
cmp
mov
loope
call
lock
aam
aam
fsubrp
aad
rcr
ss
repz
aam
mov
mov
icebp
icebp
repnz
ljmp
cmp
into
fstpt
cmp
cmc
stc
hlt
fucom
rol
fimull
jmp
das
xor
leave
aam
icebp
lret
out
leave
icebp
sar
roll
int3
int3
idiv
lret
mov
xchg
jecxz
sub
jmp
enter
jmp
int3
repz
rcl
xchg
cmpl
and
xchg
fucom
in
aas
shr
fidivrl
clc
out
cmp
push
div
faddl
jmp
loope
leave
xor
enter
ljmp
xlat
shl
fdiv
test
cmp
call
jecxz
into
aaa
ret
fnstenv
imul
cld
aad
fcos
sti
aad
enter
clc
std
flds
fucom
jecxz
shl
sti
ds
sti
cmc
rcl
faddp
loopne
loop
sti
in
lea
loop
jecxz
loope
int3
ror
out
aaa
aad
idiv
in
aas
std
filds
loop
int3
mov
xor
aaa
xor
aam
fdivr
leave
loope
addb
cld
fimull
out
xchg
lret
mov
and
or
jmp
ret
ret
rcl
aad
sbb
mov
sarb
cmp
jle
les
out
cmp
enter
cmp
aam
and
cmp
stc
loop
xchg
jecxz
inc
loopne
in
jmp
int3
cmp
jmp
shr
clc
fucomip
enter
fmulp
xlat
int3
sti
leave
test
xchg
rol
enter
fprem1
int
cmp
roll
shl
fst
fcmovu
fmull
nop
jmp
xor
out
ljmp
aas
sti
icebp
xor
out
movl
cmp
jecxz
shl
ror
cmp
roll
cli
flds
out
xchg
jmp
cmp
cmp
ljmp
sbb
out
into
fsubrp
test
sar
into
icebp
fucomi
lock
leave
ds
hlt
loopne
hlt
mov
ljmp
int
jmp
cs
cli
repz
xlat
xor
out
cmp
cmc
xchg
fcmovnbe
lock
repnz
leave
rcr
test
out
clc
xor
int3
clc
rcr
icebp
aas
test
hlt
fucomp
sub
lock
out
vpor
jmp
xlat
test
sarb
and
in
in
nop
rcll
sti
ss
fdivl
repz
stc
stc
cmc
adc
std
in
lret
fmull
leave
lea
loop
iret
xor
jmp
cmp
ret
fcmovu
repz
xchg
out
fiaddl
repz
cmp
aad
cld
fiaddl
loop
repz
into
fimuls
aad
cmp
call
cmp
cmp
fcompp
mov
nop
ret
hlt
mov
xchg
jmp
hlt
cmp
testl
lea
in
xchg
lret
fadd
xor
call
clc
fidivs
cld
repnz
xchg
enter
int3
mov
in
aaa
into
icebp
cmp
out
xlat
sti
cld
imul
cmc
ret
in
xchg
incb
aad
out
xor
aaa
cmp
aad
ret
loop
enter
cld
lock
mov
jecxz
loopne
rcrl
add
in
jmp
lret
aad
int
ss
shrl
out
sarb
adc
jle
lret
stc
idivb
out
ffree
test
movl
xchg
int3
testb
aaa
shl
repz
inc
rcl
aad
loopne,pt
cli
loop
out
shl
adcb
out
cmp
stc
fld
sti
addb
mov
into
leave
cld
out
test
out
in
hlt
in
repnz
aam
cld
aam
loopne
xor
in
ret
call
jmp
cmp
int
cli
iret
sbb
xchg
jmp
xchg
ror
in
imull
out
shr
aad
hlt
test
rol
fsubp
test
in
fucomp
out
repz
cmc
fst
loop
xor
div
hlt
repnz
in
cmp
clc
fnsetpm(287
aad
cli
sub
loope
int
in
sti
std
test
xlat
ds
mov
fmull
xchg
xchg
in
leave
cmp
in
rcl
lock
cmp
fcmovnu
loope
jmp
jecxz
mov
loop
out
ror
lock
cmc
cmp
iret
out
lret
aad
sar
hlt
mov
loop
jmp
test
jmp
jmp
aam
cmc
jmp
and
xlat
lret
vpsubusw
shr
sti
orl
cli
ss
cmp
sti
iret
icebp
sar
test
fimuls
loop
loopne
out
lock
fdiv
loopne
xlat
incb
ret
sbb
hlt
std
cld
ror
test
fdivrp
in
int3
ret
sti
fucomp
xlat
stc
ret
out
fiadds
orb
into
ss
xor
idiv
jmp
stc
sar
rcr
testb
test
out
loop
int3
out
enter
cmp
cld
loop
leave
stc
jmp
fiadds
aam
lret
sti
fcmovnbe
hlt
aas
lret
jmp
aas
std
xlat
loope
sub
sbb
mov
movl
cmpl
je
cmpl
jne
pushl
pushl
push
call
cmpl
jne
xor
or
dec
mov
mov
dec
mov
jmp
sbbl
jmp
ret
ror
int
outsb
xor
rcl
jle
adc
jle
cli
fndisi(8087
enter
xchg
jmp
aad
cmp
fiaddl
lret
aad
decb
shl
sub
icebp
out
bnd
test
sti
cmp
mov
lret
lock
ss
in
cmp
cmp
jmp
xchg
incb
in
out
adcl
fcomp
stc
repz
test
out
ret
rorb
int3
xor
mov
stc
xor
fucomp
jmp
test
repz
fsubr
hlt
enter
out
addl
cli
in
icebp
cmp
ffree
aad
fcomip
nop
out
fdivrp
repnz
inc
fcom
repnz
aam
int3
fldln2
aad
sar
faddl
addb
loop
jmp
rol
lret
lret
cmp
lock
hlt
jmp
ljmp
loop
aad
into
loope
fcomi
sarl
stc
fucomip
cld
aam
sbb
fsub
repnz
in
into
ficoms
xchg
int3
xor
jmp
aaa
cli
leave
cmp
ljmp
xchg
cmp
cmc
jmp
xchg
test
nop
jmp
jmp
adc
ret
loop
fildl
mov
hlt
cld
int
clc
test
in
enter
aaa
fdiv
aas
loop
repnz
fildl
mov
jmp
out
test
sub
hlt
in
fnstcw
jmp
rcl
clc
test
icebp
out
ret
xlat
neg
decb
fsubrp
mov
int
ss
cmp
fstp
lock
into
rcr
loop
vpaddw
loop
xchg
addl
hlt
cmc
hlt
lock
icebp
cmp
fildl
fcomi
ljmp
ljmp
fidivl
icebp
fxch
cmp
ret
cmc
rorb
fstp
mov
out
call
icebp
into
ss
adcl
xor
mov
adcl
add
jmp
fcom
xlat
push
xlat
outsb
rolb
jle
adc
jle
stc
rcr
fcompp
in
jmp
out
fistpll
hlt
repnz
mov
mov
out
push
ret
cmp
sarb
lock
loop
in
xchg
fldl
cld
int
out
in
adc
lret
xor
cmc
out
cmp
cmp
fcomi
cmp
add
hlt
cmc
iret
shl
hlt
lock
jmp
shlb
jmp
shr
std
out
cmp
ret
repz
mov
xchg
in
xor
enter
int
rcl
jecxz
in
stc
fcmovb
fcmovne
sti
std
xchg
xchg
aam
mov
cmp
aam
jmp
testb
aad
cli
mov
out
aad
shl
test
repz
xor
hlt
ret
sbb
sti
xchg
std
cld
fisttpll
into
jmp
test
shl
int
cmp
iret
rcl
div
out
mov
clc
xchg
sub
lret
aaa
icebp
enter
iret
loop
in
repz
test
fildl
std
out
xor
hlt
cmp
into
aam
cmp
idiv
cmp
loop
and
in
mov
out
out
lret
cmp
sarb
fcmove
addl
loopne
sti
lock
fcmovne
fsubp
stc
aad
fcmovbe
cmp
out
jmp
addl
out
fisttps
rorl
cli
in
test
cmc
cmp
test
shl
cmpb
in
orl
int
ss
xor
loop
rcr
cld
rolb
ret
cld
int3
ret
ljmp
aam
fucomp
out
rcl
fdivr
out
out
loop
orl
out
call
fptan
fnstcw
out
sar
filds
xchg
mov
xor
repnz
jmp
int3
xchg
in
repnz
int3
enter
mov
mov
and
movb
lea
mov
jmp
rcl
rol
rol
rcl
mov
iret
inc
jb
fdivrs
adc
jle
sub
icebp
mul
xor
cmp
cmp
aam
in
ret
fnsetpm(287
in
cld
out
fmulp
xor
out
jecxz
enter
lret
cmp
out
loope
jmp
clc
std
cmp
in
aad
fdivs
iret
cmp
cmc
repnz
not
in
cmp
sbb
out
out
mov
orl
xor
lock
sub
cmp
fimull
loope
test
sti
aam
shlb
icebp
cmp
rcl
std
cld
xlat
clc
sti
sti
std
lock
jmp
shr
leave
enter
fiaddl
ret
out
xlat
loop
in
mov
lret
into
cld
fcoml
in
div
fcmovne
dec
xor
cld
in
cmp
shl
mov
lret
iret
repnz
mov
xor
xor
xlat
xor
cmp
sti
out
adc
mov
in
fsub
call
out
xchg
loopne
cmc
aad
sti
xor
cmp
shl
test
cmc
fyl2xp1
ret
lret
cld
mov
dec
call
out
xor
int3
cmp
fadds
xchg
rol
hlt
fstp
mov
orb
enter
sti
jmp
sbb
xlat
ret
icebp
sar
mov
incb
mov
in
call
in
cmp
aad
repz
mov
ret
in
movl
stc
rcl
fnstenv
ror
aad
shl
shl
mov
fcomip
mov
xchg
mov
xchg
sub
lret
repnz
in
hlt
cli
sar
add
out
icebp
cmp
cmc
int
in
lock
mov
repz
int
imul
cmp
in
mul
fcom
in
faddl
sti
sti
aam
mov
in
aad
in
int
out
aad
loope
sarl
std
test
idivl
into
test
xor
ror
out
sar
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
pushl
push
push
push
push
call
jmp
mov
movl
xor
addl
sub
mov
sbb
movl
not
movl
andl
mov
mov
push
jmp
into
mov
fmul
iret
fucomp
sub
inc
popa
out
and
add
aam
xlat
test
repz
lret
lret
mov
rcl
lock
repz
enter
aas
ds
ret
repnz
loope
jecxz
in
lock
rcl
lock
in
cli
clc
sub
out
repz
test
test
in
jecxz
loop
in
fists
clc
imul
int3
out
ljmp
cmpl
int3
or
xchg
call
cmp
idivl
neg
idiv
std
rol
ret
lret
mov
fiadds
shlb
sar
call
aas
jmp
lock
ds
clc
out
repnz
dec
int3
shr
and
xor
ljmp
leave
fsub
add
sarb
aad
ljmp
in
jmp
int3
lret
sti
xor
leave
cmpb
fsubp
les
testl
div
fcomp
in
lret
fiaddl
loopne
ret
aad
fcomp
xchg
ret
mov
xchg
in
cmp
lret
cmp
aad
aas
std
out
shl
loop
shl
rolb
leave
enter
sarb
int
idivl
fsubr
repnz
repnz
roll
in
fimuls
loopne
in
aad
out
in
aad
cmc
fucomp
iret
hlt
sti
sar
movb
enter
orb
int
cs
fcomip
ds
sti
jecxz
clc
xchg
addl
shr
in
xlat
std
cmp
cmp
test
jmp
out
test
lds
icebp
out
lock
jmp
fcmovbe
cmp
repnz
int3
in
out
aam
cmc
lret
cli
out
xchg
in
mov
lret
aad
into
in
lret
xlat
cmp
stc
fcomp
test
in
fiaddl
fucomip
xor
ss
sarl
xor
fiaddl
fsincos
or
ljmp
ja
add
movl
add
jmp
movl
mov
mov
movl
inc
jmp
ret
xlat
rcl
lret
xchg
out
testb
add
out
aam
repz
fdivrs
fnstenv
shl
cld
fcos
ret
jmp
loope
lret
xchg
nop
test
lret
cli
ds
test
hlt
in
clc
fucomi
mov
test
neg
mov
mov
les
leave
xor
xor
out
cli
ror
int
iret
test
jecxz
test
lock
repz
xor
cmp
cli
repz
faddl
hlt
aad
enter
in
in
cmc
into
enter
jecxz
jmp
repz
not
cld
out
out
mov
call
fdivr
jecxz
into
xchg
adc
out
xor
repz
aaa
fildl
test
ljmp
in
ljmp
std
adc
loope
rol
xlat
call
int3
fdivr
fmul
fldl
fcmovb
xor
loope
repnz
in
std
fcmovnb
leave
ljmp
icebp
sar
mov
iret
leave
test
lret
loopne
loopne
test
in
jecxz
in
jmp
sar
jmp
repnz
clc
in
xor
fcomi
cmp
stc
stc
testl
out
fucomip
jmp
fcmove
out
enter
sarl
test
repnz
fnstcw
ljmp
out
stc
out
in
cld
not
lret
jmp
int
loop
icebp
aad
jecxz
out
fsubr
out
shlb
xor
int
into
aaa
shl
xchg
aam
leave
loopne
xchg
roll
loopne
lock
clc
repz
ljmp
std
cli
add
cmc
lret
in
lea
out
cmc
jmp
call
cmp
cli
test
std
out
ret
mov
sti
loopne
lret
ljmp
out
in
repnz
enter
cld
sbb
cmp
lret
cli
cli
leave
orb
fldz
out
aam
enter
ds
rol
cmp
movl
jb
dec
jmp
aam
fadd
fstp
pusha
shl
ret
adc
push
mov
jle
adc
jle
ret
aam
jmp
out
out
sar
sub
repnz
stc
xlat
loop
cmc
fisttps
lret
out
nop
mov
lock
aam
cli
repnz
aam
int3
cmp
xchg
mov
xchg
out
cs
fcmovbe
into
into
cmp
sar
cmp
cmp
mov
in
ds
xchg
test
xor
int
ljmp
addb
mov
lret
loopne
aad
loopne
fdivr
leave
ss
rcl
not
fcomi
cmpb
fsub
cli
in
int3
mov
cli
loope
in
icebp
in
xlat
cmp
in
fmulp
cmpl
out
inc
ret
incl
nop
nop
xchg
aaa
loop
int
shr
lret
fcomip
fistpll
leave
xrelease
in
in
icebp
xchg
xor
out
cmp
aam
jmp
out
repnz
cli
xchg
mov
lret
iret
shr
in
icebp
jmp
shl
lret
ss
rcl
out
sti
fsub
xor
out
leave
fdivrp
jecxz
out
test
int3
xor
lret
out
cmpb
testl
fcomp
dec
mov
ror
call
out
ljmp
cmp
cli
jecxz
int3
in
fisttpll
in
rol
sarl
bnd
fld
fmul
bnd
testb
leave
std
iret
rol
xor
cmp
icebp
xor
cmc
shl
fadd
loopne
in
sub
mov
fstl
xor
repz
flds
hlt
xchg
stc
rcl
out
mov
cmp
neg
repnz
out
shl
aad
ret
fsubrp
leave
jmp
mov
shl
nop
mov
call
cmp
aas
stc
int3
sar
and
and
neg
test
cld
fucomip
dec
aad
hlt
aam
out
mov
sbbl
mov
addl
jmp
fcomp
fistps
je
mov
inc
loopne
jle
add
cli
clc
notrack
aad
aas
and
clc
lret
out
fisttps
repz
fxch
xor
cli
fst
iret
lock
cld
std
clc
lock
cmc
mov
mov
ss
in
jmp
rcl
xor
fmul
fdiv
stc
sti
fdivrp
testl
lock
ss
loop
cmp
icebp
shr
sub
icebp
cmc
repnz
enter
lock
test
shl
test
cmc
aad
icebp
aaa
fsubr
icebp
out
sub
out
test
cmc
xchg
xor
ror
lret
not
jecxz
aam
aad
into
cmp
cmp
test
sar
flds
lret
xchg
repz
out
ret
out
sti
cmp
aas
std
loope
cmp
rorl
orb
loopne
aaa
rol
sarl
test
fcmovbe
cmp
mul
adc
leave
les
fldl
ss
in
xlat
aad
ljmp
shl
repnz
lret
std
ficoms
hlt
in
cld
lret
out
sti
icebp
shr
cmp
std
fiaddl
fiadds
test
rcl
std
cmp
loopne
out
ds
repz
sti
adc
fcmovbe
lret
into
lock
cmp
jmp
lret
cmpb
ds
fcmovnb
leave
out
sti
mov
repnz
aam
in
les
idiv
in
xor
jmp
aam
ret
loopne
repz
fiadds
mov
shl
icebp
xor
call
ss
rcr
fucom
mul
fincstp
test
mov
mov
orl
int
out
in
stc
sarl
ds
test
aas
aas
xlat
cmc
sar
fimull
mov
in
jecxz
out
in
shr
jmp
in
aam
fdivr
lock
jecxz
vphaddubw
xchg
shl
xlat
fcmove
lock
lret
in
cli
std
std
sti
fdivr
fucom
add
loop
roll
movl
cmp
movl
jmp
iret
aas
aas
ror
rcl
ret
pushf
mov
orl
jle
adc
jle
jmp
in
lds
ret
in
rol
cld
aad
leave
ljmp
cmc
stc
test
mul
out
cld
mov
jmp
dec
cmp
sti
loop
shl
xchg
das
out
ror
icebp
out
enter
cld
icebp
rcl
aad
loop
fadd
clc
call
and
iret
jmp
in
into
out
cld
icebp
in
out
mov
loop
out
sbb
xor
shl
int
fcmovnbe
dec
icebp
cmp
mov
test
shr
repz
jmp
out
cmpl
fiadds
fcmovu
fdivp
test
sti
in
div
xlat
xor
repnz
aad
aam
imul
std
rol
shl
fstp
hlt
fildl
addb
ljmp
test
std
cmc
repz
fcmovnbe
in
fcmove
fsubrp
fisttps
cmp
xor
shl
sar
xor
rcl
repz
loop
mov
rolb
fcomp
hlt
ljmp
in
rorb
mov
aad
loopne
enter
idivl
rcr
out
cmp
int
call
jmp
rolb
shl
sarl
aaa
cli
ret
icebp
icebp
out
lret
hlt
xor
ret
aam
add
mov
out
jecxz
rorb
hlt
xbegin
call
fistpll
shl
enter
dec
out
fucomp
in
or
cli
aad
int
in
shl
ss
lock
cld
loope
incb
int
lret
repz
fucomp
ror
sarl
inc
jecxz
xchg
rol
mov
sub
in
mov
jmp
jecxz
jmp
sarl
int
cmp
cmp
sarb
cld
out
clc
xlat
sbb
mov
loop
loop
clc
into
clc
sub
cmp
test
add
adc
jmp
int3
rol
aad
pop
pop
movsb
or
in
jle
add
xlat
dec
rcr
fadds
mov
std
lret
sub
xchg
hlt
lret
hlt
xor
icebp
roll
in
lret
std
loopne
lret
mov
xchg
lock
out
xor
clc
icebp
fdivp
addl
pop
nop
cli
les
loopne
loop
enter
testb
stc
in
cmc
aad
test
out
xchg
int3
in
xchg
in
loop
test
jmp
shl
fmul
loop
aad
aas
rcl
fdivr
in
jmp
clc
loopne
jmp
repnz
cli
std
ljmp
out
fcmovb
repz
loope
repz
loopne
ret
cld
and
xor
stc
iret
ljmp
cld
ret
loop
test
sti
orl
shl
fisttpll
out
hlt
into
clc
xorl
icebp
test
testb
mov
inc
hlt
xchg
in
sarb
ljmp
repnz
loopne
cli
loop
ljmp
repz
divb
lock
fcomp
rcl
ror
lret
rcl
int3
lock
in
clc
loopne
jecxz
int
fst
std
sub
int
ss
hlt
fmul
repz
xlat
loopne
out
jecxz
movl
out
xchg
xchg
fdivs
xor
aad
icebp
in
int
idiv
fnsetpm(287
out
xchg
repnz
loope
test
xorl
jmp
aas
int3
std
sarl
rol
loopne
loop
fmulp
or
mov
enter
out
out
aad
icebp
icebp
fdivr
fcmovu
cmp
fmull
loopne
cld
int3
in
loopne
xor
cli
rcr
cld
fsubr
shr
stc
out
ret
cmp
leave
in
lea
mov
xchg
xchg
das
iret
jmp
lret
clc
out
cmp
xchg
jmp
lea
cmc
test
enter
std
aas
stc
stc
ljmp
faddp
stc
loopne
jmp
xchg
sbb
push
andl
xor
xor
inc
mov
cmpl
jne
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
push
mov
mov
jmp
ret
into
sarl
rol
rcl
ja
data16
out
jle
add
aad
out
leave
aam
repz
xor
cmc
test
roll
ljmp
in
into
rcl
out
lds
loopne
int
in
in
fsubr
aam
int3
in
out
ljmp
ss
fdivr
repnz
sbb
test
xchg
int
xchg
aam
cmc
lock
xor
xor
enter
in
xor
rcr
and
fadd
decl
xchg
iret
cli
out
hlt
out
cli
jmp
sti
repnz
in
fdivp
ljmp
mov
jmp
enter
leave
xor
shr
fsubrp
fcmovnbe
cmp
sti
in
fsub
cmp
mov
into
mov
lret
mov
xor
in
xor
iret
xlat
repz
icebp
xchg
xchg
incl
out
jecxz
jmp
cld
repnz
lret
fmulp
iret
incl
fcmovnb
out
mov
cld
int
fists
jmp
repz
iret
lret
incb
sti
lret
mov
lret
fucomp
xchg
loope
cmc
rcl
div
fcmovu
iret
lret
fcmovnu
repnz
loop
addb
in
out
test
xchg
xchg
fld
jecxz
lret
std
neg
lret
repnz
fsubp
loop
iret
mov
in
leave
jecxz
call
orb
repnz
ss
std
repz
lds
loop
out
mov
std
icebp
in
mov
leave
rcr
idiv
loopne
sbb
mov
mov
fsub
loopne
xchg
mov
int
cmc
fmulp
aaa
test
icebp
fnop
rcr
stc
sti
in
fdivrp
xchg
cld
loop
repz
fmul
call
iret
leave
fsub
cmpl
lret
aam
out
enter
rclb
out
vpminub
int3
hlt
xor
loop
stc
ffreep
fcmovnu
fcmovnu
sbb
jmp
int3
not
fmul
in
fdivp
ds
stc
jecxz
sbb
xor
mov
add
movzwl
mov
jmp
leave
aad
movsb
inc
jb
mov
push
inc
psubsw
adc
jle
clc
cli
out
aad
call
cmc
xor
jmp
clc
sti
xor
repnz
in
cli
ret
fldpi
in
in
int3
decl
in
mov
repnz
int
cmpb
fst
std
aad
orb
iret
out
out
lret
leave
clc
lret
xor
iret
hlt
rcr
loopne
cmc
mov
ljmp
repnz
test
repz
xor
aam
dec
fcmovbe
aaa
cmp
clc
ljmp
loope
call
int3
jmp
divl
ret
hlt
std
aad
fdivp
ret
cld
nop
loope
addl
cmp
cmp
shl
les
loopne
sbb
nop
mov
faddl
aaa
aam
fidivrs
cli
hlt
jecxz
aas
sarl
cmc
dec
loope
ljmp
xchg
fsubrs
divb
aad
leave
adc
cli
addb
sti
out
hlt
out
jecxz
in
enter
ss
int3
aad
sti
neg
out
sti
clc
loope
in
xchg
hlt
rorb
ret
ror
cmp
xor
addb
leave
fucom
jmp
mov
loope
into
stc
cmp
in
rcr
incb
add
mov
call
in
mov
jecxz
idivb
test
push
fiaddl
xlat
out
in
stc
rol
loope
mov
out
lret
stc
cmp
shr
xor
fnstsw
test
ret
ljmp
sti
xchg
mul
cmp
neg
cli
int3
cmc
shl
aas
clc
aad
movb
test
leave
in
loope
lea
jecxz
clc
ss
aam
iret
in
ret
icebp
cld
enter
int3
fmul
out
lock
mov
xor
stc
repnz
xor
cmp
shll
xchg
mov
addl
or
mov
nop
xor
add
jmp
ret
into
aam
aad
fst
stc
hlt
stos
xchg
push
and
gs
jle
adc
jle
lret
fmul
cmp
sar
shr
out
sar
shr
add
loopne
iret
adcb
fidivrl
xlat
enter
iret
idiv
aas
fdiv
rol
loop
mov
out
loop
loope
out
jecxz
stc
in
in
aam
aaa
cmp
fld
push
sbb
jmp
nop
mov
xchg
imul
ljmp
cmp
aas
shl
aad
ror
lret
xchg
int
mov
loope
mul
aad
lock
stc
loop
lret
ss
roll
hlt
ret
in
sbb
lret
in
int3
ss
repz
xor
cmp
stc
xor
int
loope
adc
xor
ljmp
test
jecxz
jecxz
lret
cmp
cmp
jmp
rcr
aad
fcomi
fadds
fcmovu
test
fld
in
fcom
jmp
neg
loope
ljmp
enter
in
hlt
ljmp
test
sti
aas
fxch
stc
jmp
out
lock
xchg
lret
xchg
int3
rcr
aad
out
clc
sarb
cmc
loop
aad
std
flds
orb
clc
int3
les
lret
leave
icebp
out
cmp
std
out
loop
mov
out
mov
mov
mov
lea
sub
xor
cmp
fdivrp
iret
out
and
in
out
incl
out
out
lret
hlt
sar
repz
int
cmp
cli
stc
in
test
mov
repnz
jmp
ss
fmulp
cmp
shl
shl
div
ret
roll
out
lret
loopne
loopne
in
sti
xor
cmp
in
repnz
lock
sti
mov
call
std
rclb
cli
fnstenv
ss
out
ljmp
ret
fyl2xp1
sub
loop
loope
xchg
shrl
in
out
int
aaa
in
xlat
idivl
loope
loopne
testb
mov
mov
jmp
aam
aad
fstp
movsb
ficomps
push
xor
add
neg
iret
xchg
std
xchg
jmp
xor
xor
fnstcw
cmpb
aad
xchg
mov
test
xchg
loopne
call
test
mul
in
fcmovnbe
cmc
hlt
shr
mov
roll
out
sub
ljmp
icebp
fld
test
div
call
lea
stc
ror
cmp
fcomp
cmp
cmp
aas
loop
jmp
out
leave
loopne
test
loopne
vpsrlw
shl
iret
fucomp
idivl
fdiv
call
aas
fucomi
loop
leave
lea
mov
jecxz
jecxz
ss
out
jmp
lret
cmc
loop
fcmovbe
rcl
rol
lret
into
mov
iret
call
xor
cmp
xor
fnstcw
icebp
fdivrp
lret
int3
int3
xchg
shl
div
iret
aad
in
cmp
out
enter
ret
in
ret
in
fprem
out
fmull
shl
in
clc
loop
leave
xor
leave
std
lock
ss
rol
aas
xchg
sar
loop
out
fucomp
in
sub
jmp
out
xor
fincstp
std
out
cli
test
xchg
in
iret
mov
lock
int
int3
ss
shr
cmp
cmp
cmc
sar
aam
lds
lret
mov
in
aaa
cmp
or
out
repz
cli
mul
fsubp
addb
xor
cli
hlt
aaa
or
shl
xlat
call
std
xchg
mov
test
enter
out
cmp
in
call
int3
push
aas
loop
mov
leave
lea
ror
icebp
in
in
out
cli
in
out
aam
loopne
out
cmp
ret
loope
out
les
jecxz
test
rcl
in
xor
ds
cmp
lock
mov
ret
ds
mov
sti
repnz
push
xchg
iret
fxch
xor
leave
fimuls
add
add
lret
enter
int
cltd
movsb
imul
dec
loopne
mov
out
jle
adc
jle
jmp
loop
ror
in
hlt
rcl
mov
int3
rol
incb
jmp
leave
aas
ljmp
fmuls
cli
out
jecxz
call
in
in
aaa
aam
leave
fiadds
test
rol
loope
loop
mov
out
xchg
mov
in
cmp
aam
lret
idiv
sti
xlat
out
rcl
shr
fdiv
fucomi
in
mov
xor
xor
jecxz
int
call
shl
ffree
fcomp
aam
jmp
in
out
iret
xor
shll
ds
in
aaa
loopne
loope
ffree
cld
vpsubb
lret
cmc
into
out
repz
call
shl
hlt
icebp
lock
test
or
out
ljmp
sar
icebp
xor
loopne
repnz
stc
sti
fimull
in
int
test
shl
jecxz
jecxz
stc
hlt
jmp
neg
jmp
ds
aam
std
mov
fucomi
mov
lret
jmp
enter
int3
lock
shl
xlat
shl
roll
jmp
mov
out
jmp
ljmp
loope
in
out
hlt
in
cld
in
xchg
into
lret
xchg
xor
xor
idiv
cmp
cmp
hlt
shr
icebp
sarb
stc
fcom
std
incb
loope
mov
in
aas
xlat
in
enter
cmp
repnz
ret
sti
fcom
test
enter
sar
xor
loop
hlt
lock
icebp
fdivr
std
std
cmp
clc
fcomi
hlt
shl
loopne
std
fcmove
roll
fcom
ds
lret
in
test
aad
sar
leave
cmc
xlat
xchg
sar
fldl
clc
fsubr
lret
int
rcl
fiaddl
ret
lret
test
test
sub
std
shl
clc
test
icebp
cmp
sti
cmp
aam
sarl
repz
fdiv
enter
repnz
inc
jmp
iret
ror
fcmovnu
out
mov
fcomi
jle
adc
jle
std
in
repnz
ljmp
neg
idiv
add
rcl
repz
hlt
cli
loop
orb
cmp
out
icebp
in
filds
movb
sub
mov
imull
into
lock
repz
in
ds
shl
fndisi(8087
out
loop
clc
out
jmp
ljmp
fdivrp
flds
ret
sub
iret
fsubr
mov
das
xlat
cli
xor
aad
lret
out
into
test
test
push
fsub
std
xchg
fcomp
in
mov
shl
sub
leave
out
test
lret
aas
out
aam
fisttps
mov
int3
lock
incb
leave
leave
icebp
xor
cmp
cmp
shr
jmp
mov
in
cli
out
enter
in
stc
hlt
cmc
sar
leave
in
int3
ret
cmp
xchg
enter
fsub
iret
repnz
out
enter
clc
lock
ss
mov
ret
filds
roll
test
idivl
cli
cmp
neg
in
testl
nop
cld
jmp
adc
idivl
enter
lret
xor
xlat
cmp
test
sub
jmp
jmp
ret
sub
aas
rcr
clc
loop,pt
fcomip
orb
mov
call
in
fsubr
repnz
int3
rol
fsubp
fcomi
fcoml
cmc
xor
xor
cli
repz
aaa
rcr
rcl
out
test
std
loop
push
jmp
int
enter
xchg
shl
repnz
iret
std
aad
sub
add
xchg
adcl
ss
cmp
cmp
sar
in
in
faddl
faddl
xor
hlt
rcl
iret
clc
jmp
ret
jne
pop
jmp
int3
into
fmul
fsubrl
in
jecxz
and
add
adc
jle
repz
lret
out
iret
mov
out
rol
aad
xlat
cmp
lock
not
lock
enter
leave
and
in
int
int3
int3
in
out
repnz
fstp
xchg
ret
cli
out
lret
loopne
int
out
stc
lret
in
dec
fcmovnbe
sti
fnstsw
adc
jecxz
std
enter
jecxz
xchg
std
test
xor
in
out
cmp
cmp
in
sti
cmp
rcl
mov
jmp
mov
hlt
jecxz
jecxz
idivb
call
shl
fdivp
out
fisttps
xlat
fucomi
call
lret
aaa
ror
stc
stc
dec
xor
ds
and
in
std
int
xchg
or
out
stc
int
out
shr
fstpt
shl
aam
sar
call
mov
test
mov
lea
das
xor
cmp
icebp
loope
out
xchg
cli
ljmp
jecxz
repz
icebp
shr
int3
repnz
shl
das
fptan
icebp
fsubp
out
flds
lea
call
call
aad
fdivrl
shl
loop
mov
mov
in
fimuls
mov
call
cmp
cld
ds
enter
in
xor
mov
lret
cld
cmc
sti
or
cmc
cmp
rolb
stc
cld
int3
int3
iret
in
xor
shl
cli
in
aad
shl
icebp
test
out
in
out
and
call
call
test
das
ret
fcmovnbe
std
aad
idiv
fmul
aas
lock
cld
popl
lret
sub
repz
xor
ss
cmp
mov
mov
jecxz
ret
in
div
leave
cmp
lock
ds
xchg
leave
jmp
nop
out
jmp
fcomps
sub
add
ret
ror
aam
mov
dec
lret
xor
jle
jmp
in
jmp
aas
lock
idivl
fadds
imul
out
test
ficoms
icebp
rol
repz
in
fucomp
sar
std
aas
in
add
in
enter
cli
loop
ljmp
jmp
xor
fcmovb
repz
out
clc
popl
test
jmp
divl
out
stc
cmp
test
out
fistpll
aam
fsub
cmpb
fmulp
mov
ret
into
in
cmp
cmp
int3
into
div
shl
jmp
ret
fucom
jmp
out
int3
repnz
aam
rcr
in
aam
cmp
jmp
incl
in
aaa
aam
fdivr
testb
aad
call
jmp
jecxz
out
aas
ret
repz
cmp
faddl
repnz
test
cmp
loope
loop
fcmovnu
jmp
test
jmp
aad
call
sti
jmp
aaa
fdivrp
shl
cmp
loope
std
icebp
int
xchg
sub
cmp
aad
xor
cmp
test
fadds
in
out
int3
leave
test
xchg
cld
jmp
xlat
ret
stc
enter
cmp
faddp
std
out
leave
aad
mov
jecxz
mov
xor
iret
cmp
cmp
std
in
fucom
cmc
call
fcmovnb
call
call
leave
test
mov
repz
in
div
enter
std
hlt
ror
xchg
out
out
inc
enter
loope
test
fdivl
cmc
lock
lret
loop
test
aad
loop
mov
mov
mov
out
xor
in
enter
sti
out
icebp
icebp
mov
ljmp
sti
jmp
in
xor
sti
xlat
leave
into
hlt
cmp
fcmovnb
test
in
out
xlat
out
mov
cmc
lds
out
shr
out
sti
aaa
incb
fdivr
in
std
mov
mov
jmp
xlat
lret
aad
aad
int
jle
and
xchg
idivl
adc
jle
imul
mov
or
xor
ror
xor
out
sub
in
sbb
decl
in
repnz
lret
out
out
jmp
shl
not
sti
cmp
xlat
fcom
sti
lret
in
std
shr
jecxz
clc
iret
cmp
enter
cmp
loopne
cmp
lret
in
dec
ljmp
icebp
clc
in
cmp
loope
fdivr
loope
cmp
out
fdivr
hlt
clc
orl
jecxz
aaa
cmp
aaa
icebp
iret
stc
fcom
repnz
aam
rol
lret
out
ljmp
shl
in
hlt
aam
in
sar
cmp
stc
xchg
std
loopne
ret
neg
lock
xchg
out
ljmp
jmp
icebp
std
jmp
ret
call
enter
cmp
ljmp
xor
iret
lret
cli
ds
hlt
out
out
mov
jmp
fmull
into
xor
lret
std
stc
clc
lock
loop
repz
cmp
leave
in
mov
mov
sub
out
sub
leave
fsqrt
addb
loop
movl
iret
mul
sarl
out
cmp
out
loopne
aas
aas
aas
ret
cli
imul
in
out
sbb
xchg
das
xor
cmp
shr
push
shl
rolb
in
stc
mov
add
fcmovu
cld
orl
int3
sti
lret
fcmove
shl
call
mov
test
icebp
iret
out
xor
stc
jmp
out
cmp
into
cld
jmp
cli
jmp
jmp
mov
repnz
xchg
ret
xlat
ljmp
aad
les
repnz
in
fisttpl
in
int3
mov
ss
jmp
cli
clc
in
jmp
sti
jecxz,pt
mov
loop
leave
xlat
into
out
mov
icebp
fdivp
sarl
repz
xor
ljmp
mov
mov
xor
add
jmp
lret
rcr
aad
fsubr
xor
dec
cmpsl
stc
jle
adc
jle
call
faddp
clc
enter
xor
fmul
loopne
fdiv
jecxz
xlat
xor
ljmp
leave
fadd
ret
icebp
out
xchg
shl
fildl
xchg
in
repz
in
cmc
fcos
xor
aam
ss
hlt
lock
addb
out
mov
xchg
mov
icebp
shr
into
stc
repnz
xlat
lret
cmp
stc
ret
cmp
xchg
mov
clc
ror
xchg
mov
out
fcmovbe
cmp
neg
fcos
rolb
shl
test
nop
mov
in
cmc
shl
out
xor
ljmp
cmpl
call
enter
add
lret
jmp
enter
iret
std
fdivr
xchg
fld
out
std
into
sar
loop
jmp
aad
ror
cli
aaa
ss
icebp
shl
icebp
in
mov
int
into
out
jmp
repnz
xlat
cmp
aam
sbb
add
rorb
cmp
out
loop
loope
shl
icebp
into
clc
int
sar
sar
lock
repnz
filds
aam
xor
ljmp
int
fcmovbe
rcl
enter
lock
repz
repz
ret
jmp
clc
fcomip
repnz
aam
rcr
test
jecxz
mov
nop
and
xlat
iret
jmp
idivb
iret
rorl
mov
std
mov
xor
test
ljmp
cmc
aam
shl
ljmp
mov
jecxz
adc
vcmpsd
neg
out
cld
cld
rcl
test
aam
ret
fcompp
aad
lds
shl
out
shl
jmp
cmp
fucompp
out
sti
not
rol
test
jmp
loope
hlt
nop
rcl
rol
jmp
icebp
f2xm1
cmc
fiaddl
stc
jmp
ljmp
inc
or
add
add
iret
enter
int
xchg
cmpsb
push
ja
std
inc
push
mov
add
lret
nop
out
repnz
xor
fdivr
aas
int
cmp
xor
rcl
fdiv
xchg
in
int3
xchg
loopne
ret
int3
shlb
loopne
repnz
call
out
loopne
mov
out
cmc
icebp
xor
fnstcw
fdivp
cmc
in
int3
fdiv
test
out
loope
mov
fimuls
loop
out
lret
sti
aad
jmp
aas
rcl
call
or
mov
cs
div
repz
ds
shl
cli
jecxz
addl
loop
cld
int3
into
out
sar
loopne
sti
fcomp
fdiv
hlt
xchg
ret
fsubr
fucomp
xchg
out
fbstp
lret
xlat
clc
aaa
repz
fstpt
sbb
fcomi
shl
in
loop
std
test
lock
call
shl
xor
lret
xor
idivb
sar
mov
stc
xchg
neg
icebp
ljmp
shl
out
cmp
jmp
in
fadd
aas
repz
fucomi
fmul
ljmp
out
xor
xor
or
out
clc
call
loop
repz
out
sti
xor
incb
std
jecxz
aad
test
lret
out
loope
fmul
aad
xor
xor
lret
aam
cmp
aad
clc
orl
sti
xchg
mov
ror
clc
sar
lret
ror
aas
in
les
call
flds
jmp
fcmovnu
xlat
shl
in
idivb
rol
out
fld1
in
ds
orl
hlt
xor
shl
shl
in
shl
fcom
sti
sti
cmp
leave
aam
xchg
in
lret
in
loop
int
cmp
ljmp
sbb
icebp
leave
fmul
jecxz
and
test
out
ret
shr
jmp
cmp
icebp
std
rorb
push
cmp
jmp
lret
fst
int
test
cmp
dec
std
jle
adc
jle
out
icebp
call
loope
nop
shl
out
shl
ror
fcmovnbe
aam
aam
aam
rcl
aas
inc
rcl
xchg
ljmp
rol
ljmp
aam
cmp
loop
repz
mov
incl
xchg
xchg
in
cs
fxch
ds
sti
cmp
out
xor
sti
jmp
std
ror
iret
out
in
in
shlb
loopne
fdivr
cmp
cmp
fiadds
dec
jmp
xor
aam
aad
cli
xlat
out
ret
iret
in
loope
loop
xchg
loopne
loopne
ljmp
int3
lret
sar
rcr
loopne
int3
std
fcoml
out
addl
iret
cld
iret
shl
in
call
mov
mov
lock
loop
out
ljmp
xor
test
shl
test
not
loope
lret
lret
mov
in
lock
cmp
xor
out
filds
in
mov
shl
sti
in
out
lret
idiv
lock
loope
aam
fnstsw
fcomp
out
ret
int
in
in
shlb
cmp
fcmovu
xor
xlat
cmp
int
repnz
out
cmpl
movb
loopne
int3
mov
enter
leave
icebp
cmp
cmp
fldl
mov
aad
std
sti
xchg
mov
das
lds
repz
lret
in
repnz
lret
mov
sti
dec
int
mov
out
ret
repnz
out
xor
jecxz
vpsubsw
rcl
fstp
in
enter
loope
fdivs
hlt
into
mul
into
cld
cmp
rolb
fdiv
leave
orb
fmulp
xchg
xlat
lds
cld
cmp
xlat
rcl
repnz
fabs
out
hlt
in
clc
ds
mov
in
xor
test
inc
or
push
or
sub
add
xlat
into
rcl
aad
fadd
mov
adc
call
jle
adc
jle
cli
xor
sti
jmp
ljmp
hlt
ds
mov
lock
jmp
aaa
out
stc
shr
into
ss
into
jmp
out
lock
idiv
fimull
call
leave
hlt
cld
out
aaa
stc
rcl
loop
aad
loop
les
in
repz
xor
xor
xor
hlt
lret
cmp
stc
in
sar
enter
addl
lea
loop
cmp
ds
ds
fcmove
aad
stc
testb
cld
faddp
nop
fdivp
lret
aam
sub
in
stc
iret
repnz
fldl
xlat
aam
ffree
out
mov
lret
into
shr
xor
loopne
cmp
int3
rcr
out
fdivrp
test
dec
fninit
push
fucomp
xchg
aas
das
cli
sti
in
into
in
jmp
shl
sar
aas
enter
test
sbb
xchg
cmc
jmp
not
aaa
cmc
loopne
cli
loope
fcmovnb
out
out
loope
ffree
lret
adc
hlt
in
cmc
loope
jecxz
fsubr
out
inc
not
repz
testb
fsubp
mov
xchg
bnd
xor
shlb
fidivrs
int
ret
aam
repnz
aam
stc
out
leave
xchg
ror
int
icebp
in
ss
rcl
fcmove
ror
into
ljmp
ret
enter
or
cld
xchg
in
fxch
shl
repnz
out
shl
aad
stc
xchg
add
cld
int3
xchg
roll
fcmove
clc
lret
xor
in
fsubp
repz
mov
into
nop
xor
cmp
div
xor
cmp
stc
int3
repz
loopne
loopne
in
movl
xchg
xor
idiv
sar
cmp
cmp
ret
adc
orl
shll
int
rcr
add
test
test
call
add
add
lret
ret
enter
lret
add
mov
jle
add
mov
in
jmp
jecxz
int
cmp
sti
lock
sar
faddl
incb
lea
popl
xor
jmp
aam
in
clc
fmuls
cmc
loope
mov
xor
cli
imul
out
lret
sub
out
and
or
fildl
lret
iret
xor
jmp
sti
idivb
cli
loope
xlat
cld
div
leave
xchg
lret
jmp
out
xchg
or
loope
stc
cmp
jmp
sti
fdivrp
sti
cli
jecxz
ljmp
in
xor
idivl
aad
int3
cli
ror
idivb
cmp
mov
std
fdiv
fsub
out
icebp
lret
xlat
idivl
enter
leave
xor
fsin
shl
fcmovb
test
and
xchg
xchg
shll
faddp
repnz
out
repnz
ljmp
loop
xor
cmp
loope,pt
idiv
cld
xchg
cli
mov
cmp
sbb
out
out
repnz
ret
loope
repnz
cmc
lret
ffreep
cmc
fsub
xchg
cli
testb
mov
fcmovnbe
int3
cmp
fst
out
cld
jecxz
shl
ret
aas
int3
xchg
int3
fcmovnu
addb
in
les
add
lds
fmuls
in
mov
cmp
in
idiv
rcr
sar
rcr
out
clc
in
jmp
orb
not
lret
int3
enter
rcl
int
hlt
sti
loope
imul
cmc
cli
std
decl
loop
loopne
shr
xor
jmp
leave
jmp
jmp
in
addl
imul
cs
repz
lret
cld
sti
ret
and
lret
fiaddl
repz
mov
das
in
in
xor
imul
testb
adc
add
mov
mov
movsbl
xor
add
jmp
int3
enter
into
push
mov
out
insl
pop
push
test
adc
jle
cmp
aam
fdivr
jecxz
mov
lret
loop
jecxz
xchg
in
cld
xchg
mov
jmp
lret
idiv
test
into
stc
vpaddusb
cmc
cld
lret
lret
test
lret
call
div
out
aad
in
testb
adc
mov
mov
jmp
aam
les
ret
call
aas
in
xor
ds
repz
loop
in
leave
lock
jecxz
lret
in
int3
lds
repz
fdiv
idiv
shl
icebp
stc
aad
loope
call
out
repz
aad
out
lret
lret
xor
aas
ffree
cli
mov
lret
int
aam
in
repnz
leave
aas
cmp
ds
jmp
loop
fmulp
ror
int3
fxam
xor
call
xlat
sarb
fcomp
shl
out
enter
rcll
xor
xlat
cmp
int
in
fcmovu
roll
cld
cmc
in
xor
lock
out
jmp
int3
jmp
cmp
iret
lock
jmp
nop
mov
fucom
rol
hlt
in
fcmovne
stc
enter
fucomip
iret
aad
out
loop
in
sub
orb
enter
hlt
cmp
fstpt
out
rol
ds
xchg
out
hlt
sub
ljmp
lret
cmp
faddp
mov
out
or
int
xchg
call
fidivl
hlt
repz
sbb
cmp
fadds
test
sarb
icebp
xor
sti
loopne
fld
aam
call
lock
fists
ss
cmp
fcmovbe
loopne
fmul
fldl
mov
jecxz
mov
out
repz
rcl
aam
and
out
testl
cmp
je
movl
lea
jmp
sarl
aam
aam
fcmovne
inc
cwtl
sbb
sbb
jle
call
loopne
sub
cli
aam
ds
out
sub
ret
ljmp
xchg
adcl
lret
fcomip
sarb
fsubrp
addb
rol
out
ror
fscale
cmp
in
testl
rcl
lret
xlat
call
cmp
shl
out
hlt
and
fldl2t
in
cli
mov
ficoms
repz
cmp
clc
jmp
in
ds
xchg
leave
test
in
sti
iret
lret
xchg
hlt
iret
leave
jmp
loop
rcr
cmp
mov
in
fiadds
loop
call
xlat
cmp
fcmovu
faddl
frstpm(287
fyl2xp1
std
filds
cmp
enter
lock
cld
fcomip
out
fcomp
ret
incl
lret
sar
sub
les
out
shlb
or
xlat
jecxz
add
iret
xchg
test
repz
call
iret
flds
iret
sar
cld
cld
lock
mov
repz
aaa
sti
cs
jmp
lock
jmp
out
rorl
call
clc
das
cmp
repnz
dec
roll
test
and
jmp
xchg
ror
xor
cli
icebp
int
ds
repnz
loope
adc
jmp
int
iret
fdivr
ror
shr
xor
rcr
std
cmp
fdecstp
xchg
mov
mov
icebp
loopne
lock
test
ds
stc
fildl
mov
in
in
fsub
hlt
in
loopne
lret
out
out
xlat
shr
rcr
repnz
std
aam
lret
into
ret
out
std
in
out
into
ror
icebp
lock
in
jmp
mov
mov
addl
jmp
int
fcmove
fstp
adc
js
dec
cmp
jle
add
shl
ret
xchg
xlat
mov
loopne
lret
aas
rcr
cmp
cld
leave
fxch
cmc
idiv
and
rcr
jecxz
iret
in
testb
fstpt
fldz
shlb
in
cld
sti
into
fstp
mov
sti
loop
fsubr
call
jmp
iret
sar
icebp
cmp
dec
dec
lret
div
ret
ret
ret
fld
stc
mov
call
loope
xlat
cs
aad
idiv
cmp
cmp
cli
stc
ret
test
jmp
lock
imul
sub
leave
in
cmc
ror
ljmp
clc
hlt
std
out
cli
ficoml
ljmp
cmp
not
fcomi
aaa
hlt
std
ss
std
not
ljmp
call
xor
cmp
icebp
in
sar
cld
idivl
cmc
repnz
xchg
fcmovu
movb
repnz
clc
shlb
divl
fldlg2
sbb
cmp
mov
xchg
jmp
divl
in
in
xor
cmp
rcr
shl
cmp
int
std
call
shr
xor
fcmove
in
fdivr
idiv
lret
fsincos
idiv
rcr
jmp
test
mov
hlt
cmc
iret
lock
into
cmc
lret
leave
jmp
cmp
repz
sti
shl
loope
fcmovb
sub
out
ret
out
xlat
aam
aaa
out
fcom
repnz
shl
aad
ret
cmp
add
xchg
not
repz
fdivr
cmp
cmp
xlat
rol
roll
mov
xchg
int3
out
shl
iret
ret
shr
aam
fcmovnu
cmp
sti
adc
loop
sti
lret
in
sbb
out
out
in
fists
in
out
cld
icebp
fcmovbe
sarl
fdivrs
icebp
out
cmpl
idiv
cli
sti
fildl
loope
shl
aaa
enter
loopne
idivb
out
xor
int3
aad
jecxz
shl
jecxz
in
jmp
mov
mov
xor
lea
jmp
into
aam
enter
fsubl
dec
pop
pop
add
jle
add
aaa
int
out
lock
ds
loop
adc
ret
cli
call
iret
repnz
iret
dec
imulb
in
lock
hlt
clc
loope
stc
ret
adc
xchg
in
mov
enter
repz
out
in
int3
in
jmp
rcr
rcr
shl
enter
test
leave
mov
in
loope
iret
call
in
stc
cld
std
clc
aam
cld
aas
fadd
ffree
stc
into
cli
fsub
addb
in
xlat
repz
xor
cmp
div
mov
shl
fneni(8087
mov
loope
jecxz
leave
aaa
call
ds
fcos
aas
in
mov
orb
xor
cmc
in
ror
fsubrp
ljmp
test
clc
in
xchg
nop
in
jecxz
in
nop
xor
out
xor
fxch
aas
sar
aam
xlat
clc
roll
leave
fxch
flds
rolb
xor
cmp
shr
loop
sar
cld
testb
ffree
xchg
ljmp
xlat
stc
int3
hlt
cli
addb
ret
in
xlat
mov
iret
xchg
test
call
out
jmp
cmp
out
shl
sub
into
cmp
fisttps
ficoms
jmp
aam
enter
int3
rcl
shl
xchg
xlat
repz
iret
or
out
out
in
repz
fdivrp
iret
loopne
cmp
out
out
cli
lret
fxch
loope
out
repnz
cs
cli
int3
aaa
cli
fcom
flds
out
mov
cli
incb
lock
nop
out
call
aam
lock
cmp
fiaddl
jecxz
sbb
repnz
ret
stc
shl
in
rcr
neg
out
cmp
ds
sti
incl
orb
ss
rcl
sarl
repnz
ffree
stc
not
mov
incl
jmp
mov
xor
mov
add
mov
pop
leave
ret
push
mov
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
jmp
push
jmp
int3
rol
xlat
fstp
fst
mov
add
rorb
jle
fisttpll
in
ljmp
int3
cs
cmp
lock
xor
jmp
test
nop
mov
faddl
aaa
out
xlat
leave
std
xlat
aad
sar
fxch
xchg
fcmovu
test
fldl
lock
jecxz
shl
into
cmp
imul
in
ret
shl
call
mov
int3
mov
cmc
rcr
in
int
div
iret
idiv
in
idiv
out
std
clc
xlat
mov
xchg
or
clc
loop
xlat
xor
cmc
xor
fxch
in
int3
in
repz
xchg
jmp
fsubp
repz
jecxz
repz
in
in
cmp
sar
sbb
in
cld
shl
cld
lret
clc
cli
stc
out
mov
in
xor
cmp
rcl
in
icebp
repnz
out
inc
xchg
int3
xchg
in
int3
in
cmp
out
div
aad
not
iret
out
clc
xchg
jmp
ljmp
ljmp
out
sarl
int
rcr
sti
call
call
rcll
sarb
call
lret
fdivr
out
std
and
fistpll
std
out
clc
shr
mov
in
into
rol
xor
out
std
sub
sar
test
out
aam
sbb
ljmp
add
mov
aas
icebp
and
fildl
in
in
hlt
mov
call
in
shl
cmp
ret
xchg
icebp
neg
ret
lock
std
incb
cld
cmp
cmp
ds
jmp
cli
ljmp
in
into
jmp
aam
into
jmp
xor
ret
std
cld
les
in
loopne
mov
cmp
shl
clc
shl
loopne
shl
aam
cmp
mov
jmp
aam
call
jmp
rcl
in
cld
int
icebp
mov
loop
xchg
in
rcr
jmp
ss
bnd
or
icebp
shl
ret
sar
xlat
neg
mov
xchg
aad
leave
repz
in
lock
xrelease
call
jmp
xchg
in
mov
ljmp
fstpt
adc
cld
out
call
or
lret
cs
in
aam
aaa
imul
aaa
aad
stc
test
iret
xchg
cmc
jecxz
ret
std
aam
cmc
ss
aaa
icebp
repz
aas
xlat
cmc
shl
rolb
and
insb
jbe
add
add
add
fadd
fcom
fld
pop
into
shll
adc
jle
leave
idiv
jmp
iret
leave
repz
int3
xchg
in
jmp
lret
imul
out
fsubrp
cmc
lock
clc
fdivr
xchg
rol
test
lret
in
call
fdivr
div
enter
icebp
jecxz
aad
aad
ret
xlat
sti
mov
faddl
clc
leave
out
fdivr
icebp
repz
in
loopne
cld
test
fidivrs
rorb
stc
loop
lock
loop
fidivl
cmp
shl
xor
int
iret
shl
and
leave
in
sti
testl
ret
loop
divl
fistpll
aam
repz
fsub
in
loope
in
add
jecxz
xorl
xor
cmp
ror
clc
int
loopne
faddp
test
sbb
addl
shr
xor
cs
imul
in
cmp
cmc
sti
iret
ret
call
ror
decb
sub
xlat
cmp
into
cmp
int
out
out
icebp
test
out
mov
xchg
shr
imul
in
cmp
out
cli
idivb
out
shl
test
enter
lret
shr
rcl
xchg
fdiv
push
xor
in
fdivr
test
neg
call
repnz
xor
xlat
enter
neg
ds
loop
out
stc
loope
addl
mov
icebp
icebp
xchg
out
shl
ss
out
ss
aad
icebp
shr
cli
mov
neg
jmp
ljmp
iret
lock
out
fcmovbe
fadds
sti
fxch
clc
int3
mov
in
int3
xchg
shr
call
cmp
repz
out
xlat
jecxz
mov
lret
lret
aam
ret
in
std
fcmovnbe
loopne
cmp
in
in
jecxz
enter
out
rolb
cmp
out
cmp
fidivrs
cmp
cmp
orb
roll
in
aam
cmp
in
aas
fucomip
cmp
sti
push
lret
addb
clc
out
repnz
std
out
cmp
aaa
fstp
repz
out
int
mov
repz
enter
stc
in
rcl
lret
into
repnz
lock
mov
out
xchg
out
mov
repnz
xor
cli
fstpt
std
int
in
repnz
iret
test
ret
in
in
ljmp
lock
cmc
cmp
out
lock
cmc
loope
leave
mov
out
adc
call
jmp
fstpt
cmp
cld
daa
test
inc
add
add
add
rolb
add
add
add
add
add
jne
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
and
mov
jmp
aas
sarl
fcmovnbe
fcmovb
loope
add
or
aad
dec
xchg
jle
mov
lock
call
mov
sub
sub
int
lock
fsubp
cmpb
sub
sub
cld
sub
jmp
into
out
xor
lret
clc
out
cmp
sub
loop
hlt
ffree
loope
fcmovnu
stc
cmp
jmp
jecxz
nop
out
repnz
sarb
jecxz
add
jecxz
aam
call
sti
lock
cmc
shl
hlt
fcmovb
std
cmp
fsub
in
xchg
stc
std
aam
add
nop
cmc
fbstp
xor
stc
stc
repz
fcom
out
clc
ljmp
addl
clc
out
lret
fcmovnu
sarl
cli
stc
cld
jecxz
orb
into
in
jmp
cmc
jmp
jecxz
ret
imul
testb
adcb
lret
clc
cmp
ljmp
cmp
rcr
mov
loop
int
sub
not
iret
xor
repz
fnstsw
loopne
fcos
test
jmp
fucom
addl
out
int
shll
cld
enter
cmp
test
fmul
in
out
nop
pop
loope
push
loopne
in
test
clc
cmp
jecxz
lds
shr
faddp
jmp
aad
lret
xor
sarl
cmp
iret
fcmovbe
cld
mov
int3
out
jmp
loope
in
cmp
iret
cli
lret
stc
into
ds
rol
rcr
xchg
in
orb
ret
rcl
shl
in
xlat
add
loop
in
fsub
leave
nop
enter
call
clc
icebp
cmc
int3
xor
rcl
ret
fcmovbe
mov
sti
xor
clc
lret
cmc
rcl
mul
int
cmp
cmp
in
int
test
in
ror
in
loope
cli
leave
xlat
repnz
cli
shl
fcomip
iret
ret
aad
mov
sti
fsub
or
lret
jmp
xor
xor
aad
repz
xor
std
mov
enter
loopne
in
into
out
ror
rol
xor
flds
xchg
test
mov
sti
out
iret
lea
call
shlb
icebp
cld
loope
int3
cli
or
shl
ret
in
jmp
in
hlt
not
xor
not
aaa
clc
cmp
repnz
cmc
loop
or
in
int3
std
out
xchg
xchg
shlb
aaa
call
out
call
mov
mov
adc
push
inc
mov
movl
jmp
into
aas
ror
rcl
sarl
xchg
lods
mov
mov
jle
out
repz
div
in
mov
loopne
out
test
rorl
fcom
in
xor
xlat
hlt
clc
loop
ret
out
iret
loopne
fimull
int
fcoml
jmp
clc
repnz
stc
in
repz
test
adcl
into
lock
fcomi
lock
fdivr
fldz
inc
cld
jecxz
lret
mov
and
in
xchg
divl
int
aaa
xor
fstp
cmp
sti
fcomp
fldl
mov
in
in
sbb
xor
xor
out
loopne
fcmovu
in
test
cmp
ljmp
lea
xor
iret
cmp
clc
xlat
aam
aad
mov
loope
icebp
out
repnz
aad
leave
not
xor
cmp
out
jecxz
sti
shl
in
test
test
in
fimuls
clc
cmp
lock
lret
cmpb
loopne
fdivp
aam
xchg
int3
out
int
lock
in
lock
out
aaa
xor
xlat
fstp
addb
cmp
in
fadds
jecxz
int
test
in
int3
loopne
fld
shl
xor
add
jmp
jmp
aad
lret
divl
cmp
repz
aam
sub
call
in
stc
mov
nop
out
out
xor
xor
lret
fiadds
fsubrp
enter
out
jmp
repnz
test
int
out
repz
aas
fxch
cmpl
out
test
leave
loopne
decl
out
sti
call
icebp
into
ret
sti
mov
fimuls
jmp
xor
in
shr
iret
lret
fmul
fdiv
lds
roll
in
rcr
nop
out
test
ljmp
ds
fsub
cmp
in
div
aad
loopne
in
cli
in
in
jecxz
mov
into
lret
xor
ss
rcr
xor
rorl
stc
repz
in
adc
into
lock
cmp
cld
xor
fnstcw
fmul
shl
test
out
shl
nop
cmc
xlat
cmp
cli
hlt
cmp
sti
repnz
lret
xlat
call
xchg
mov
int3
xor
lret
sar
xlat
std
sar
loope
add
ret
fildl
mov
ss
sub
cli
sarb
xor
shr
out
cmc
loop
ljmp
int
movl
jmp
or
jmp
rcl
aad
aad
shll
roll
loope
xchg
jle
mov
ss
xor
clc
fucomi
in
test
cli
mov
lock
in
aam
cmp
xlat
cmc
fcmovnb
cmp
jecxz
test
rol
mov
cld
lret
xchg
xchg
cmp
div
leave
cmp
fcmovnbe
jmp
icebp
shr
test
aad
xchg
in
in
jmp
out
out
clc
aam
cmp
cli
sarl
aaa
lock
xchg
jmp
fisttpll
vpsubw
lret
sarb
fadd
ror
fcomp
fcmovb
shr
ret
aad
mov
in
mov
incl
cmc
xlat
in
stc
icebp
out
neg
loopne
stc
xchg
testl
shl
call
out
jmp
xorl
shl
add
xchg
mov
in
repz
lret
xlat
leave
not
into
test
sub
fcomip
rolb
int
ljmp
stc
fcmovb
into
test
cmc
xlat
leave
int
jecxz
rorb
ss
enter
leave
cmp
rolb
test
loopne
sub
iret
clc
ret
enter
fcomi
fcomi
idiv
sti
aas
enter
cld
cld
into
in
cld
xchg
into
incl
xor
out
in
cmp
adc
ret
jecxz
sub
clc
test
in
rcr
loope
and
ret
in
in
jmp
rcl
jecxz
fldl
mov
out
jmp
ficoml
clc
cmp
xor
xlat
jmp
sti
rcl
cmc
sar
add
mov
fmul
xor
jmp
aaa
jmp
xor
leave
and
cld
cli
rcl
mov
aam
xchg
call
aas
lret
jecxz
clc
hlt
in
hlt
cmc
cmc
fdivrp
jmp
test
stc
mov
mov
mov
aad
xor
shl
cmp
cmp
xlat
lock
clc
in
into
loope
xchg
and
aad
xor
loope
xor
jmp
rcr
cmc
ror
and
out
test
in
loope
into
rol
icebp
repnz
cmp
clc
ret
jecxz
ljmp
faddl
int
aaa
repz
cmp
lock
into
xchg
inc
xlat
lret
fcomp
stc
addb
cli
int
cmp
ljmp
rol
sar
neg
fimull
fisttpl
aam
mul
das
call
test
repz
out
test
stc
rol
stc
out
in
lret
hlt
into
loopne
leave
out
out
xor
repnz
andl
mov
inc
mov
cmpl
jne
push
pushl
pushl
call
cmpl
jne
xor
add
inc
mov
cmpl
jb
xor
mov
add
add
imul
mov
cmp
jmp
int3
rol
aad
aad
fpatan
int3
and
shlb
or
jle
cmpb
loopne
lds
std
stc
jecxz
in
lret
loopne
imulb
shl
cld
out
out
sti
xlat
loopne
roll
shr
in
mov
mov
lret
icebp
out
call
fcmovu
icebp
xor
jmp
fnstcw
aas
cmp
in
fidivrs
lock
icebp
fcoml
into
sti
xlat
loope
iret
xor
jecxz
lret
jecxz
out
mov
cs
cli
ss
ss
rolb
aas
aam
ret
cli
fadds
int3
call
in
in
repz
fucomp
repz
cmp
out
repz
hlt
hlt
loop
leave
sar
xor
hlt
imul
ljmp
xchg
loope
lea
xchg
loopne
aam
in
cmp
div
loope
cmp
in
stc
fcomp
in
std
leave
faddp
fucom
out
out
shr
fsubr
aas
lock
inc
sbb
clc
loopne
fdiv
not
and
call
jmp
leave
repnz
ss
cli
cli
and
sar
jmp
test
mov
jecxz
rol
aaa
rcl
cld
cld
cmp
ds
idiv
aad
loope
mov
jmp
fcmovu
int
xchg
int
mov
xlat
clc
fidivrs
aaa
lret
out
fcmovnu
ffreep
hlt
rcl
aam
aas
mov
and
in
fstl
icebp
cmc
in
call
loop
aad
rcl
lds
loopne
in
lret
hlt
out
out
iret
into
cmp
idiv
loopne
cmpb
into
div
fcom
imul
fstp
mov
loop
test
mov
in
in
in
ror
clc
rolb
mov
stc
in
call
repz
int3
jmp
out
cli
fdivp
lret
add
aad
ljmp
fst
xchg
aam
nop
shr
in
xor
cmp
ffree
out
cli
les
lret
out
out
ror
aam
xor
divl
out
call
shl
idivl
stc
fdiv
in
sar
repnz
mov
int
lock
clc
cmp
aam
jmp
sar
aas
sar
test
cmp
xor
cmc
int
lret
shr
idiv
out
and
cmp
rcr
faddp
fucom
cmp
out
lret
call
leave
into
fnstenv
jmp
fcom
cmpb
out
aas
loopne
add
leave
shr
mov
xchg
xchg
lock
out
cmp
into
aaa
lret
fcmovnb
in
shl
ret
repnz
div
fimuls
in
icebp
sub
cli
std
jne,pt
mov
mov
xor
xor
add
add
imul
jmp
mov
mov
mov
jmp
into
rol
fcomp
fcomps
mov
jo
pushf
jle
mov
lock
lock
in
mov
fiaddl
leave
test
repnz
ret
repnz
lds
cmp
flds
fld
cli
leave
loopne
mov
xchg
xor
xor
enter
xorl
loope
test
lret
int3
test
shl
fbstp
div
sar
cmp
clc
mov
mov
xchg
fisttps
xor
sti
ljmp
icebp
ljmp
int3
fistl
sub
xbegin
sti
in
fiaddl
aas
test
test
test
out
xchg
mov
in
rcl
shl
int3
cmc
cmp
not
loopne
test
test
fadds
clc
xchg
ljmp
enter
not
clc
fcom
in
in
fnstsw
rcl
add
cmc
idiv
xlat
fyl2x
cli
mov
xor
hlt
xor
cmp
cli
lock
xchg
mul
decl
aad
out
iret
int
les
jmp
jmp
into
fildl
cmc
cld
fimull
int
cld
xchg
in
cmc
out
cli
cmp
cmp
fcmovu
cmp
out
int
jmp
repz
lret
rcl
out
not
or
out
xrelease
stc
lret
fsubr
decl
int3
icebp
fsubr
fcomp
fnstenv
icebp
cmp
rol
aas
xlat
test
jmp
aas
out
jmp
lock
jmp
call
rcl
enter
out
into
clc
cld
test
loopne
leave
aad
decb
int
mul
sub
lret
xlat
shl
fdiv
int3
stc
clc
enter
clc
out
in
fimull
jmp
das
lret
cmp
out
out
cmp
clc
rcr
div
std
add
jmp
in
addb
repnz
std
cmp
aaa
cmp
out
fadd
aam
loop
ficoms
shlb
ljmp
cmc
out
out
rolb
imul
xchg
sub
jmp
vpmullw
xor
leave
fmul
aaa
icebp
out
out
add
idiv
mov
in
mov
mov
ret
cmc
shr
div
out
fsubr
jecxz,pt
add
in
enter
stc
std
iret
out
std
xchg
test
in
out
leave
sti
loope
out
cld
ror
xlat
repz
out
test
cld
jmp
cmc
shl
jecxz
cmp
test
fnstsw
loop
sar
hlt
cmp
in
loopne
iret
rorb
jmp
inc
cld
mov
jmp
rcl
rcr
fstp
aam
cmp
lods
sarb
test
jle
shr
test
sti
loop
fdiv
std
rorb
mov
cmp
xchg
jecxz
out
lret
cmp
cmp
out
jmp
in
loope
in
and
mov
in
cli
cmp
hlt
cmp
clc
leave
int3
and
int
cli
loop
rcl
int3
aas
xlat
in
int
aam
out
fld
cmp
std
out
fdivrs
enter
clc
lock
mul
jmp
loope
vprotd
in
aam
fdecstp
cmp
cmpl
enter
mov
jmp
aaa
jecxz
call
repnz
int
into
stc
cmp
loope
fucomip
jmp
enter
into
cs
sar
idivb
and
loopne
mov
mov
shr
xchg
mov
bnd
stc
aas
into
lock
shl
repnz
sti
loop
xlat
adcl
xor
fdivrs
not
call
xlat
idiv
aam
cli
sti
ljmp
shll
aam
cs
repnz
test
iret
sar
aad
xlat
in
loopne
mov
ret
ss
call
into
div
faddl
neg
fcmovb
int
mov
call
lock
ss
enter
test
rol
cld
fdivr
and
loope
mov
mov
lret
ret
fadd
cmp
ror
leave
cmp
clc
out
aas
neg
stc
idiv
fcmovne
rcr
lret
loop
iret
in
fsub
out
hlt
sub
out
xor
ror
sarl
in
fadd
test
out
in
lret
or
mov
jecxz
jecxz
aad
in
repz
sbb
xor
ffreep
loope
mov
loope
jecxz
mov
adc
call
cmp
rolb
stc
cmp
jmp
mov
enter
cmc
fmul
clc
sar
frndint
out
icebp
addl
xchg
test
repz
fcmovbe
fmul
ror
aam
xor
call
ljmp
or
int3
lret
xlat
sti
rcl
lret
xlat
add
fcmovne
stc
ffree
mov
out
fsubp
das
aam
cmp
fdivr
fidivrl
out
xor
faddp
aad
jecxz
int3
loop
call
out
out
into
cmc
int
in
lock
sub
addb
test
ljmp
xor
std
aaa
lock
ret
sub
clc
ret
jmp
std
in
test
cmc
xor
xor
add
add
imul
jmp
sarl
ret
ffree
in
jns
pusha
loope
mov
jle
add
icebp
lock
cmp
int
shr
not
rcl
loope
dec
lret
mov
out
loope
in
hlt
in
lret
stc
repnz
cmc
cld
fst
test
incb
call
nop
mov
rcl
repnz
out
fcom
cmc
rcl
out
stc
adc
jmp
enter
test
jmp
xchg
xor
aas
icebp
aas
iret
cmp
cmp
jmp
fnsetpm(287
iret
cmp
in
imul
int3
shr
cmp
lock
lock
ret
out
and
in
leave
ljmp
xchg
test
xor
shl
clc
cmp
sar
not
fst
repnz
lock
rcl
ljmp
out
les
xor
cmp
loope
in
stc
lock
or
fiadds
loope
out
enter
lock
fsubr
repz
mov
mov
sti
int
adcl
std
repnz
ljmp
jecxz
aad
jmp
stc
int3
mov
jmp
out
fstp
into
jmp
in
fildl
sub
std
fsub
lret
fsub
ljmp
ss
xlat
repz
aas
aas
std
jmp
clc
ret
mov
jecxz
mov
rcl
xchg
xor
xor
out
sbb
repz
loopne
neg
stc
xchg
xchg
stc
call
repz
cmp
stc
cmp
fstp
fstp
shl
repnz
push
inc
jecxz
icebp
in
lret
xchg
fcomip
xor
aam
cmp
cmp
xchg
fcmovb
inc
test
loope
hlt
into
xor
xor
enter
out
xchg
loope
loope
loop
out
jmp
mov
repnz
int3
ret
sti
ror
loopne
sti
fdivrl
loope
lock
clc
repz
enter
std
out
repnz
enter
out
cmp
std
lret
rol
out
mov
leave
jmp
repnz
jecxz
out
leave
xlat
mov
aaa
repnz
out
ret
ret
fcmovnbe
cli
nop
iret
std
jmp
cmp
fadd
stc
xor
fdivs
aam
iret
cli
cmc
ds
clc
repz
neg
fsubr
cmp
mov
ficoms
out
lret
clc
lret
ret
aad
cld
out
in
fcomp
fisttpl
xchg
out
in
repz
lock
int
ret
lock
in
leave
aam
mov
in
iret
shll
das
cmp
jmp
cmp
aas
lds
out
test
or
xchg
sub
jmp
rcl
aad
rcrl
sub
add
jle
cmp
stc
out
aam
cmp
rcr
fsubp
fldl
clc
jmp
repz
xchg
call
cmp
in
cmp
enter
repz
out
decl
xchg
sti
call
sub
loop
cmp
lock
xlat
shl
sbb
ret
and
mov
jecxz
cmc
in
call
fcomi
int
cld
fdivr
ret
cli
test
jecxz
loopne
loope
cld
test
sub
loopne
xor
fcmovnu
in
shr
jmp
std
xor
lock
cmc
ret
loope
loope
test
fcomip
mov
div
ljmp
iret
aam
enter
fcmovnu
enter
leave
lret
xchg
sub
ss
div
sti
lret
in
out
not
rcr
jmp
out
lea
clc
enter
aas
int3
cli
incl
ret
stc
mov
xchg
jmp
roll
fcmovnbe
xor
cmp
les
aad
jmp
ljmp
jmp
xor
in
cmp
out
jmp
rcl
xchg
mov
out
loopne
icebp
ftst
xchg
iret
out
out
in
int3
out
jmp
rolb
jecxz
rcr
fmull
out
and
in
in
jmp
sti
idivl
vpsubb
loope
ror
jmp
out
in
clc
shl
shl
out
jmp
jecxz
les
mov
jecxz
shr
aad
xor
les
hlt
cmp
cmp
fprem1
shl
xlat
aaa
fsubp
hlt
call
in
cld
iret
rolb
out
rol
fdivr
xor
loopne
loopne
out
test
loopne
cmc
in
test
int3
orb
hlt
ret
xor
in
lock
neg
enter
int3
mov
out
adcl
fsubr
shll
int3
addb
out
idiv
decl
into
xchg
rol
xor
jmp
loop
aas
sti
loop
ret
orb
loope
icebp
test
out
cmc
shl
icebp
cmc
mul
repnz
hlt
icebp
loopne
ret
and
loopne
jmp
xchg
into
std
in
in
loope
xlat
out
out
cmp
idiv
iret
std
fld
out
xlat
lds
mov
out
jmp
xor
cmp
xlat
rcl
aad
rcl
loopne
stc
out
loop
nop
int3
lock
enter
sti
add
test
stc
mov
out
loop
mov
xchg
in
mov
je
xor
add
mov
imul
add
mov
mov
pop
leave
ret
push
mov
push
push
mov
mov
mov
not
jmp
leave
xlat
rcr
mov
cwtl
push
mov
cmpsl
jle
sbb
jle
xor
out
xor
lret
int3
cmp
cld
fcomi
clc
flds
mov
shl
mov
cmp
fst
fdivr
cmp
neg
ret
loop
in
mov
xchg
das
repnz
fnstcw
cld
sti
xor
ffreep
jecxz
imul
leave
int3
int
test
int3
xchg
loop
sub
ss
xor
ret
fxch
out
ret
out
cli
lret
loop
out
imul
in
cmc
clc
xor
sti
repz
cmp
cli
add
leave
mov
into
mov
in
out
cld
out
cmp
loopne
mov
mov
xlat
jmp
leave
jmp
fcoml
jmp
jmp
jecxz
xlat
div
cmc
jecxz
shr
out
loopne
lret
iret
addb
cmc
out
aad
cmp
cmp
in
fst
std
jmp
jmp
xchg
mov
jmp
jmp
sarb
stc
addb
call
test
jmp
out
sarb
out
xlat
sar
shr
in
aas
loope
orl
int
repnz
loope
hlt
clc
stc
out
sarb
rol
hlt
out
fsub
addl
xchg
jecxz
roll
in
xor
cmp
fcomip
clc
xlat
roll
mov
lock
out
repz
aam
loopne
lret
sar
jmp
fucom
xor
xchg
fucomip
cld
fdiv
nop
mov
int3
repnz
xor
leave
fmul
call
loope
cmp
ffreep
fisttps
lret
mov
jmp
aad
lock
fsubp
cmp
fcomi
mov
in
mov
out
fdecstp
in
out
std
fdivr
sti
aas
clc
xlat
into
out
lock
fxch
loope
fucomip
in
mov
out
sub
cld
int3
xor
in
aad
stc
aad
loop
rcl
jmp
aad
cli
fsubr
cli
jmp
cld
movl
movl
cmp
movl
jmp
mov
fstp
enter
imul
sbb
sbb
jle
adcb
shr
cli
cld
cli
fcomp
repnz
rcr
out
and
add
loop
or
hlt
stc
fcmovne
cmp
cmp
iret
out
lock
jecxz
std
les
in
fucom
xor
sub
int
cli
xlat
rol
sar
shl
repz
in
ljmp
nop
xchg
test
out
out
sti
iret
cli
ds
cld
mov
fimull
in
iret
cmp
mov
xor
ret
cmp
out
int
repnz
xor
std
aad
fcmovnb
orb
xor
das
stc
fxch
cmc
fsubr
aam
xor
out
in
lret
out
enter
addl
xor
std
aam
div
cmc
test
call
in
out
icebp
icebp
xor
xor
fcmovbe
fcmovnbe
aad
int
sarb
rorb
test
in
mov
jecxz
repnz
ljmp
fiadds
std
mov
jmp
xchg
rcl
lret
xlat
xlat
cmp
aas
shl
loopne
out
loope
in
repz
int3
fcomip
xor
repnz
clc
loop
call
cli
jmp
std
in
shr
leave
cmp
repz
clc
sti
div
call
aam
xchg
mov
sub
aas
shl
xlat
aam
shll
hlt
out
out
xlat
cmp
adc
mov
sar
xchg
jmp
in
sub
int3
iret
fcmovb
xor
cmp
aam
test
ret
loop
fsubp
ljmp
cmc
fsub
cmc
int
cmp
xor
test
dec
std
xchg
filds
clc
call
xor
hlt
lock
aad
cmc
cmp
fsub
in
clc
loope
xrelease
repz
enter
leave
jmp
aaa
out
mov
loope
filds
lret
test
or
add
add
push
add
jmp
lret
aas
fst
fcmove
fidivrs
mov
jp
jle
sbb
jle
sub
in
out
aad
ljmp
shr
int
cmp
stc
or
loop
in
xorb
aaa
cmc
iret
fdivrl
into
std
fst
aad
hlt
fcmovnbe
addl
dec
stc
decb
clc
call
and
mov
enter
ljmp
shr
aam
lret
fsub
cmp
repnz
cld
out
hlt
ds
lret
test
sti
xchg
lret
adc
icebp
fcomi
out
shl
loope
out
call
call
ljmp
out
fpatan
sub
cmp
jecxz
icebp
test
int3
call
loope
jmp
aam
ret
aaa
leave
out
xlat
aaa
out
lret
int
addl
jmp
hlt
int3
enter
ror
in
xchg
adc
in
cli
lret
ljmp
ret
std
test
lret
rolb
int
ljmp
fldln2
test
rol
mov
adc
fxch
test
out
out
int3
jmp
aaa
cli
idiv
fdivp
cmp
cli
jecxz
loopne
call
jmp
rolb
jmp
cmp
ss
shr
add
mov
nop
int
and
cmc
lock
cmc
lock
in
inc
cmp
loopne
cmp
rorl
in
fsubrp
mov
lock
clc
xor
icebp
shl
lock
cmp
ret
icebp
cmp
mov
fildl
or
enter
loopne
clc
lret
and
ret
lock
xlat
leave
test
in
stc
in
fcoml
out
out
cmp
clc
ds
xlat
ss
cmp
cmp
in
icebp
xchg
rcl
xor
into
ret
cmp
imul
aad
out
xlat
mov
mov
out
into
xor
fcmovbe
faddp
ror
test
mov
lret
call
mov
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jne
xor
xor
inc
mov
cmpl
jb
jmp
aam
aas
ret
lret
fst
fnstenv
lods
pop
inc
dec
cli
add
sbb
jle
loop
out
lret
xchg
adc
shr
aaa
lret
neg
idiv
rol
int
in
sar
test
test
out
mov
std
cmp
cmp
int3
ds
in
fsubr
enter
mov
fcmovne
in
int3
out
ret
ljmp
cmp
les
xchg
xlat
fisttpl
xchg
int
xor
iret
rol
cmp
xor
lret
cmp
cmp
clc
shr
int
in
hlt
lret
mov
ss
div
fildl
fstp
fxtract
mov
sub
int3
fsubr
xor
in
jmp
sarb
in
cli
fneni(8087
idiv
in
ret
movl
into
xor
icebp
leave
call
cmp
not
into
xor
in
loopne
call
fldl
repnz
sar
test
aad
cmp
roll
call
fmuls
xchg
xlat
repz
int3
aam
hlt
hlt
ret
idiv
fcomip
movb
ljmp
out
stc
cmp
sti
cmp
out
aad
clc
sar
in
loop
decl
xchg
dec
shr
in
out
into
xor
cmp
repnz
shr
ret
fimuls
mov
rol
repz
fstp
sarb
cmp
not
aad
lock
shl
fcmovnu
mov
mov
mov
in
out
out
fstp
cmp
in
stc
cmp
sbb
xchg
fucomi
shl
addl
lret
jmp
jmp
hlt
fdivrl
leave
jmp
int
loop
test
bnd
out
in
lret
out
cmp
into
loop
jecxz
call
test
lret
adc
xchg
aad
int
aaa
ror
idiv
fmul
lret
lock
div
repnz
cmc
fisttpl
icebp
iret
cmc
xchg
in
jmp
jmp
xor
int
aam
loopne
sbb
std
stc
mov
xor
mov
add
mov
movzwl
jmp
rcl
xlat
fcom
push
outsl
cli
xor
mov
jle
add
int
mov
loope
mov
jmp
xlat
icebp
int3
ljmp
out
orb
jmp
xchg
out
cli
cmp
cmp
rol
lock
lds
addb
ret
lock
int
cmc
cmp
add
ret
jmp
in
fmul
lret
fdivp
das
enter
lret
cmp
aad
test
imul
aad
fiadds
leave
hlt
std
int
in
in
aad
ror
repnz
fcomp
repz
mov
clc
mov
cli
out
sbb
xor
into
enter
aas
int3
ror
loope
fsub
fisttpll
in
xchg
out
xchg
vpsadbw
jmp
ror
repz
xor
jecxz
xchg
icebp
call
cld
xchg
lret
mov
enter
cmc
into
int
push
aad
xlat
clc
fucom
mul
hlt
orl
int3
clc
cmp
into
xor
cmp
hlt
faddp
cmp
icebp
in
cld
xchg
fists
aad
lret
shr
fucomi
ds
repnz
in
mov
and
shl
iret
cmp
hlt
int3
ss
aam
fcmovbe
int
sarl
cmp
repnz
out
in
loope
mov
fmull
shll
iret
aam
fsubr
cmp
ljmp
cli
icebp
leave
enter
out
mov
in
fiadds
les
int3
cs
loope
ret
fcmovb
adc
cmp
xchg
mov
lock
rcr
in
stc
cmp
in
fisttpll
mov
xor
icebp
xchg
nop
divl
ljmp
rcr
sarb
loopne
mov
mov
cli
in
lock
lret
aad
fsqrt
push
in
lret
in
fsubr
shl
stc
xor
xchg
test
iret
in
hlt
int3
sti
icebp
cmp
loopne
shl
aas
out
out
rcl
aad
not
and
jmp
aam
enter
aad
cmp
and
jle
sbb
jle
lret
in
decb
in
out
jmp
fistpll
div
clc
cmp
icebp
fsubr
loopne
lret
jmp
jmp
shr
fmul
leave
cmp
out
hlt
test
faddl
out
loopne
mov
xor
call
jmp
loope
shl
xchg
test
cmc
repz
ror
fcmovne
out
fucomp
ljmp
ljmp
iret
loope
test
aad
xor
loope
fsub
leave
incb
fsqrt
mul
mov
call
ljmp
shl
jmp
aad
fcmovnu
aam
std
into
cmp
rolb
in
mov
cld
rcr
int
aam
loop
cmc
hlt
lret
icebp
out
xor
cmc
roll
leave
out
in
int
mov
shll
xor
divb
aad
shl
sti
test
addl
lret
mov
jmp
loop
in
jmp
cmc
cmp
rolb
out
std
rcr
mov
aam
in
loopne
enter
call
out
fsub
clc
clc
jmp
icebp
sub
cmc
jmp
lds
iret
mov
ljmp
ds
fsubr
ljmp
ret
fmul
shr
int
sti
ljmp
cmpl
xchg
cmc
in
test
hlt
xchg
xor
loop
ret
cmp
out
hlt
ret
in
cld
rcr
movb
fisttpl
addb
jmp
out
cmp
cmp
aad
sar
loop
fmulp
cli
int3
iret
mov
loop
repz
cmc
in
cmpl
in
fmull
sti
in
jmp
ficoml
jecxz
fadd
faddp
idiv
fnstcw
ds
jecxz
mov
fmuls
jecxz
leave
int3
xor
hlt
rcl
call
aaa
jmp
rorl
mov
jmp
xorl
mov
jmp
rcl
enter
fcmovne
fdivl
mov
jle
add
loopne
fiadds
jmp
sbb
aam
stc
xor
int
in
leave
sar
stc
cmp
addb
int3
fistl
icebp
xor
fcmovb
cld
neg
fcmovnu
cmp
hlt
ffree
div
repz
call
enter
std
repnz
loope
fcom
jmp
cmp
in
cmp
in
loop
filds
mov
out
out
mov
into
sub
cld
enter
ds
ret
cmp
ljmp
test
cmp
jmp
std
in
cmp
fcom
xchg
rol
fcmove
iret
enter
ror
ss
aad
aad
cmp
fdivr
shl
ret
ror
cmp
out
sar
shlb
repnz
hlt
xlat
stc
std
into
cmp
fcmovu
rolb
mov
lock
icebp
out
int
jmp
cmp
rcl
adc
fcmovne
cmc
fadd
fdiv
xchg
into
rcr
in
jecxz
fadd
cmp
xor
loopne
cmc
cli
fst
fucompp
test
mov
int
lea
aad
rcl
fnstsw
cmp
shl
std
neg
xlat
lret
sti
loope
hlt
hlt
aas
rol
xor
cmp
fmul
fcmovbe
aas
loopne
lock
fiaddl
into
loop
fsubp
loop
or
jecxz
cld
aaa
aaa
in
cld
xor
fsubp
icebp
repnz
aad
loop
call
mov
out
lock
xor
cmpb
repnz
icebp
mov
cmc
out
lret
out
rcl
ljmp
aaa
xor
fcmovnu
fldlg2
cli
sub
xchg
stc
loopne
out
out
rcr
sub
xor
cmp
rcr
sti
sarb
les
cld
leave
aad
loope
test
loope
testb
out
repz
loope
fdivrl
ror
loop
jmp
mov
xchg
jecxz
vpxor
out
shr
lret
call
hlt
aas
fidivrs
cmp
call
test
je
leave
ret
push
mov
sub
movl
movl
incl
mov
add
jmp
leave
ror
xlat
fstp
fst
pop
push
inc
dec
inc
cmp
mov
ret
jle
neg
in
std
lret
cld
xchg
xchg
jmp
leave
shr
out
repz
les
mov
xchg
loope
cmc
div
std
cmp
cmp
cmp
jecxz
ror
out
jmp
iret
xchg
xor
xor
xor
aaa
shr
into
aas
in
in
out
out
sti
neg
test
fldpi
fxch
test
leave
shlb
jecxz
sar
enter
cmp
ret
leave
leave
fadds
cld
faddl
out
sub
cli
aad
loopne
xor
jmp
clc
aad
clc
sar
jecxz
sub
std
xchg
out
nop
into
int3
sub
shl
out
loope
aas
jmp
repz
jmp
mov
out
iret
shr
in
cli
xor
shl
cld
aas
in
xlat
ror
not
xlat
rol
fxam
jmp
lret
call
jecxz
into
cmp
ljmp
fisttpl
cld
fucomip
fists
xor
aad
fmulp
int3
cmp
loop
std
lock
fcmovb
test
jmp
nop
mov
in
int
repz
shr
imul
in
cmc
into
cmp
xchg
fsqrt
aad
lret
fcomi
xchg
dec
shl
aam
cmp
iret
cmp
rcl
mov
loop
sar
in
out
hlt
in
cmp
ljmp
xor
idivl
adc
xlat
out
lret
lret
call
in
cli
ret
out
divl
in
lret
loope
in
aam
loope
fiadds
sub
into
int
out
ss
fld1
jmp
idivl
std
aam
testb
fimuls
fucomi
out
sub
out
shll
aad
sti
fdivp
iret
neg
in
movl
xchg
mov
cmc
cmc
subl
sub
xor
jmp
cmp
fdivp
fldl
lret
fcmovnu
cmp
xchg
add
into
hlt
aad
call
lock
aas
cli
cld
cld
test
icebp
enter
aad
out
aam
lock
adc
cmp
cmc
loop
rcl
mov
andl
xor
or
inc
mov
cmpl
jne
pushl
pushl
push
push
push
pushl
call
cmpl
jne
xor
add
inc
mov
cmpl
jb
adc
lea
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
jmp
mov
xor
push
lea
and
jmp
mov
into
lret
rcr
xlat
nop
aaa
dec
out
rolb
scas
push
mov
jle
mov
out
ljmp
xor
jecxz
in
fst
div
into
sti
rcr
xchg
cli
mov
fucomip
mov
into
icebp
iret
loope
ss
cmp
out
aas
aad
test
enter
stc
fsubr
into
jecxz
icebp
in
aam
aaa
iret
enter
lret
in
fcmovnb
cmp
lret
movl
cmc
xlat
lret
cmp
sti
loopne
xor
xlat
cmp
fldl
out
icebp
xchg
repz
lret
fdiv
cli
shr
repnz
filds
fadds
mov
out
and
xchg
sub
xor
aaa
cmp
aas
ret
shl
mov
lret
fcmove
decb
enter
lock
repz
cmp
in
in
jmp
test
ror
in
loop
fsubr
mov
lret
int3
repz
fdivrs
test
shl
loope
int3
cmp
ror
call
in
jmp
leave
loopne
hlt
std
cli
into
sti
cmp
xchg
sti
shl
mov
mov
jecxz
shl
lock
ljmp
incl
clc
mov
fcmovu
lock
addb
in
cmp
and
fsub
idiv
aam
mov
call
out
out
cmc
lds
das
cmp
repnz
int
repnz
iret
aas
decb
jmp
shr
sub
int3
in
in
repnz
ret
adc
enter
jmp
out
into
ror
repnz
xor
in
cld
shr
icebp
sub
clc
rcl
fcomi
lock
ret
std
neg
call
repz
xor
shl
lock
jmp
rolb
jmp
idiv
loope
out
fists
jmp
int
cmp
ret
cli
lds
loope
test
loope
jecxz
out
lock
out
clc
div
repz
leave
loopne
ljmp
fnstsw
ret
les
fucompp
stc
in
ljmp
out
mov
inc
in
adc
push
mov
mov
mov
sbb
jmp
rol
rcl
aad
addr16
sbb
jle
orl
ror
lret
fcmovne
hlt
test
aam
xchg
into
incl
xchg
aam
lret
ljmp
loopne
cmp
shr
icebp
fcmovbe
fsubr
mov
lret
out
int
std
in
xor
iret
xlat
out
rcl
clc
call
icebp
cmc
cmp
sti
loope
ljmp
shl
xor
enter
fcmovnbe
aaa
fprem1
jmp
hlt
icebp
repz
faddl
xlat
xchg
sar
out
lret
aaa
int3
ror
out
idiv
xlat
cmp
rcr
fiaddl
mov
xchg
subb
in
leave
cmp
out
aad
shl
rcl
fcmovb
addb
mov
lret
xchg
xchg
jmp
fdivp
ss
repnz
mul
cmp
xchg
test
icebp
mov
aad
cld
rcr
cmp
rcl
iret
cmp
not
imul
std
out
repnz
fmul
out
call
fdivrp
jmp
cmc
aam
fildl
std
cmc
fisttpl
int3
int3
lret
mov
ret
call
aas
leave
repz
jecxz,pt
jmp
fildl
jecxz
out
imulb
ret
stc
cmc
imul
call
mul
xlat
loop
icebp
loop
loop
jmp
call
xor
cmp
cmp
not
hlt
dec
addb
cld
enter
out
sarl
call
cmp
leave
lret
in
clc
rcl
fcom
jecxz
fneni(8087
int3
in
or
int3
xchg
or
shr
out
loopne
neg
xor
mov
fucomi
out
test
lret
int3
jecxz
out
out
xor
cmp
fcmovbe
hlt
iret
stc
out
fcmovb
fdivrp
in
and
in
xchg
ljmp
in
iret
rcl
xlat
iret
in
jecxz
jecxz
lea
loop
xchg
mov
xor
fnsetpm(287
hlt
fsubr
std
std
cmp
ret
ret
xchg
in
loopne
loopne
movl
aas
iret
xlat
aad
icebp
aaa
fsubp
fyl2x
shll
out
stc
int3
in
mov
iret
out
cmp
xor
add
add
add
add
je
cmpl
jne
pushl
push
call
cmpl
jne
xor
add
dec
mov
xor
xor
dec
mov
jmp
andl
mov
inc
mov
cmpl
jne
push
push
pushl
pushl
call
cmpl
jb
mov
or
mov
jmp
ror
into
fcmovne
out
je
add
adcl
mov
jle
fsubrp
test
out
out
aas
cmp
lret
shl
call
in
enter
in
test
in
jmp
repz
shll
fsubrp
leave
lret
rolb
mov
mov
lock
cmc
shrb
ds
fst
jecxz
jecxz
aad
fxam
clc
cli
cli
ljmp
aad
neg
fyl2x
aaa
and
fildl
mov
test
shr
std
xchg
aam
jmp
clc
in
ss
adc
leave
clc
hlt
ljmp
xchg
rclb
rol
bnd
cmc
int
xlat
jecxz,pt
cli
test
mov
xlat
imull
clc
out
cmp
in
xlat
ljmp
testb
fcoms
loop
icebp
out
int
aam
lock
jmp
shl
xchg
cmp
cld
lret
xchg
lock
dec
call
int3
cmp
cld
jmp
cmp
jecxz
hlt
incl
aam
orb
addl
in
aaa
sti
xor
loope
loopne
mul
or
fcmovu
mov
std
add
lret
in
jmp
cld
sti
fucom
ss
out
fld
stc
and
mov
nop
in
int3
xlat
lock
repz
icebp
sti
clc
fistpll
ds
fidivrs
xlat
enter
lret
mov
int
lret
mov
xor
icebp
xor
sarb
out
cmp
repnz
aas
loopne
stc
sti
ret
cli
loop
stc
clc
jmp
mov
ljmp
cli
cli
cmp
aas
fdiv
fcomip
sar
stc
adc
mov
adc
cs
ss
aaa
lock
jecxz
std
icebp
rol
xchg
aad
sub
mov
enter
loope
rol
enter
inc
xlat
fildl
ret
stc
jmp
rorl
call
cmp
iret
aaa
out
in
into
aam
shr
fxam
iret
mov
jecxz
cmp
loop
lret
in
enter
cld
iret
sti
icebp
ret
orl
sarl
adc
push
flds
add
add
rolb
add
inc
add
movb
div
mov
movl
cmp
jmp
lret
leave
aas
int3
leave
stos
jb
push
mov
jle
ret
jle
cmp
stc
fcmovne
loope
cmp
cmp
out
aad
int
call
xor
fdivr
cmp
rcr
int3
ror
fstpt
test
out
aam
aam
fisttpl
xchg
adc
cmp
aaa
loope
jecxz
cmp
jecxz
lret
orl
repz
in
hlt
icebp
int3
aad
ffree
hlt
ret
out
stc
adc
fmul
lock
xchg
out
mul
ret
fcmove
stc
leave
aas
cmp
ret
fcmovnu
mov
out
lock
test
divl
xor
leave
out
in
test
fcmovnbe
testb
out
xchg
jmp
mov
loope
xor
cs
cmp
fdivl
std
aam
cmp
jmp
int3
lret
push
xchg
out
xor
xor
cmp
fdivrp
fxch
sti
shr
cli
mov
mov
leave
mov
into
repz
lock
xor
rcl
jecxz
loopne
xchg
orl
mov
shr
in
repnz
fdiv
jecxz
aam
loopne
aam
jecxz
cli
icebp
out
out
incb
fidivl
fscale
cld
aas
lock
xlat
out
in
xlat
movl
in
roll
enter
ss
neg
xor
jmp
in
xlat
out
sti
in
aam
out
enter
enter
cmp
fst
shl
mov
fsubr
enter
rcl
mov
ljmp
neg
hlt
into
adc
leave
ljmp
mov
mov
xchg
pushl
shr
aad
out
fpatan
rol
rolb
ror
sbb
lock
lret
cld
call
xlat
shl
jecxz
adc
lret
in
std
xchg
loope
into
xchg
in
repnz
cli
xor
ljmp
and
in
testl
ljmp
ljmp
ffreep
int3
cmp
repz
out
xchg
xchg
xlat
jmp
mov
sub
add
inc
hlt
stos
std
add
jmp
iret
iret
ror
ror
xlat
fstps
pop
je
ret
test
jle
add
in
sar
jmp
icebp
xlat
out
inc
push
mov
test
icebp
iret
mov
xchg
aad
jecxz
leave
icebp
icebp
std
mul
div
ds
in
rcl
aam
xchg
jecxz
leave
out
ficoms
aad
jecxz
sar
ror
loopne
idiv
shl
filds
loopne
adc
fmulp
lret
repnz
in
xlat
in
cli
clc
cmp
hlt
faddp
fcmovnu
stc
out
in
ffreep
lret
icebp
mov
hlt
fisttps
fcmovne
cmp
cmp
sbb
repz
iret
stc
out
lret
idiv
out
in
orl
aad
ljmp
orb
sub
mov
clc
int3
jmp
ljmp
aad
aam
ret
cli
test
nop
sti
jmp
fisttpll
fsubrs
fcmovu
repz
aas
aaa
lock
in
aam
mov
loopne
loop
out
vaddsubpd
jmp
repz
int3
jmp
roll
in
lret
lret
loope
in
hlt
int3
lock
das
enter
idiv
sti
out
rol
fxtract
cli
movb
test
ljmp
cmp
jmp
cmc
cmp
sar
ret
test
cli
test
fucomip
out
aaa
leave
into
shl
out
cmp
icebp
cld
loope
xchg
aas
call
cld
in
jmp
into
xchg
aad
lret
loope
cmp
out
hlt
fcmovnu
test
enter
mov
mov
jmp
jmp
jmp
loopne
sti
stc
hlt
loopne
out
xchg
call
leave
xor
int3
fnstcw
jecxz
into
cli
fcomp
movl
fldl
iret
ljmp
out
ret
cmp
cli
rol
ret
int
out
iret
out
int
hlt
popl
in
iret
cmc
rcr
out
not
aad
roll
fcmovne
jmp
nop
mul
int3
xor
cld
in
clc
icebp
and
std
xor
xor
loope
lret
call
xchg
leave
xor
lret
out
cmp
xor
mov
mov
jmp
lret
ret
int
lret
in
aad
andb
inc
jle
ret
jle
sarb
mov
in
cld
cmc
clc
jmp
out
fcomi
icebp
ljmp
fdivrp
shll
cli
cmp
cmp
out
mov
les
shl
in
leave
out
fstpt
in
leave
call
hlt
xlat
faddl
cli
into
lret
in
fisttpl
iret
xor
cmp
ffreep
fsubp
in
aad
ljmp
test
sub
iret
sti
hlt
out
xor
rcr
shl
aad
hlt
cld
adc
mov
xchg
mov
cmc
hlt
in
xor
lock
xor
lret
iret
cmp
loop
cld
adc
fstp
jmp
jmp
in
xchg
in
nop
repnz
loope
aam
fdivp
imul
sti
addl
std
mov
std
nop
das
out
lock
lret
not
cld
cmp
repz
jecxz
hlt
lret
xchg
stc
fisttpll
aam
fcmove
xor
int
cli
lret
sti
rolb
sbb
test
in
out
mov
loop
in
out
hlt
cli
loope,pt
out
idivb
ror
and
fstp
jmp
iret
out
cs
fstpt
div
stc
jmp
into
add
aaa
cmp
ds
jmp
call
repnz
ljmp
repnz
int
out
aad
mov
idiv
cli
loope
fsub
xchg
jmp
aam
test
das
into
out
fcmove
repnz
hlt
stc
loop
movl
in
xchg
shr
subb
not
lock
loope
rcl
repz
ret
xchg
xchg
subb
shl
idivb
jmp
loopne
in
ret
ret
fcmovb
sbb
aad
in
mov
test
lret
in
int
fdivr
xlat
cld
fcmove
into
repnz
loopne
iret
loopne
not
fcomp
sti
or
mov
clc
cmp
out
sti
out
aas
aad
cmp
fsubrp
hlt
rol
ret
out
leave
mov
int3
in
in
xchg
out
in
xlat
shll
xor
repnz
xchg
faddl
jecxz
mov
hlt
xor
sub
cmp
fld1
iret
fcmovnu
div
imul
mov
mov
cmp
je
jmp
rcl
mov
aad
sti
adc
in
inc
jle
ret
jle
xchg
in
cmc
decl
fcmovne
rorl
ljmp
loopne
xor
xchg
out
jmp
out
fsubp
rorb
aad
hlt
int
std
cmp
out
cmp
cld
fdivr
loop
or
in
shll
out
lock
fcmovu
fcom
add
out
iret
call
fmull
nop
out
xchg
call
fyl2x
sar
int
in
repnz
in
xchg
iret
loope
mov
or
fnstcw
xor
icebp
fcomp
aam
ret
shl
cld
jecxz
fldl
cld
int
aaa
clc
xor
xor
fdiv
cmp
cmp
cmp
rcr
aas
movl
xor
cli
lock
sti
fnstsw
lock
in
std
ret
jmp
rolb
imul
clc
into
fidivl
jmp
out
fsubr
repnz
idivb
fdivr
cld
aas
repnz
loope
fstp
fildl
into
in
shl
repz
stc
int3
jmp
iret
jmp
cli
cmc
ror
repz
out
test
addb
ror
das
lret
out
ror
loop
hlt
icebp
xchg
xchg
fcmovnb
mov
mov
in
test
lret
fsubp
sarl
roll
xlat
test
call
in
loop
aad
xor
xor
xor
cli
repz
in
jmp
ret
loopne
mov
lret
out
iret
xchg
out
fsubrs
xor
test
iret
xor
cli
add
loop
ret
addl
mov
lret
hlt
lock
idiv
jmp
out
cmp
mov
enter
lock
aad
cli
out
idiv
ror
clc
fsubrp
fiaddl
icebp
aad
leave
jmp
sub
rcll
ss
stc
fidivrl
rcl
rcl
cmp
loop
out
sar
icebp
repnz
loope
out
loop
aam
leave
aam
test
loop
out
hlt
ljmp
mov
xor
int
aad
in
xor
xor
neg
roll
mov
orl
mov
xor
add
jmp
rol
lret
fstp
aad
dec
jns
test
dec
jle
ret
jle
hlt
xchg
lock
repnz
ror
icebp
hlt
not
std
leave
cld
shl
repnz
shr
fisttpl
ljmp
xchg
mov
clc
xor
lock
out
out
aad
repnz
ficoms
divl
fnstenv
aam
int
fcomip
add
loop
lret
ljmp
fdiv
repnz
lret
cli
out
into
repz
sti
hlt
aas
loop
xlat
adc
aam
fcomp
movb
rcl
lock
hlt
cmp
xor
icebp
in
jecxz
loope
loop
enter
mov
ljmp
in
xor
in
lret
enter
cmp
jecxz
cld
in
std
clc
or
jmp
in
out
out
fdivr
cld
ffreep
jecxz
loop
cmc
fimuls
fcmovne
loopne
std
mov
mov
aaa
in
xlat
int3
leave
repz
int3
out
out
test
leave
jmp
mov
ss
shll
jmp
fdiv
std
repz
fiadds
xlat
int3
decb
test
in
repz
rcl
cmp
xlat
xchg
out
repnz
mov
in
sti
hlt
cmp
cli
in
cmp
fdivrs
aas
fyl2xp1
div
cmc
mov
mul
fucomi
jmp
shl
sti
lds
in
cmp
out
addl
out
sti
cld
xchg
jecxz
out
cs
hlt
xor
cmc
loopne
cld
loop
jecxz
flds
ffreep
int3
cmp
out
xor
hlt
cmp
cld
jmp
xlat
cmp
int3
icebp
faddl
loope
xlat
fucomi
int3
lret
rcl
xchg
fisttps
sar
fdiv
out
ds
add
test
jecxz
lea
rol
fidivl
clc
int3
cmp
cmp
fcmovu
fucomi
in
out
fstl
fadd
faddp
in
testl
xlat
div
leave
out
fldl
in
ret
iret
cli
cmp
clc
icebp
into
loopne
rolb
fucom
enter
pop
pop
leave
ret
mov
add
cmp
je
mov
andl
jmp
mov
mov
or
cmp
je
mov
xorl
jmp
mov
mov
jmp
fmul
into
ror
fstp
int
dec
je
jge
test
jle
add
mov
loope
fucomp
call
call
sti
shl
ret
not
cmp
loop
stc
in
test
rorl
aaa
aam
cmp
neg
cmp
repnz
fsub
int3
xlat
out
xchg
lock
lock
repz
rol
bnd
jecxz
test
aad
clc
int
lret
adcl
loop
lret
ljmp
int3
sti
jecxz
hlt
lock
in
out
in
out
aam
das
xlat
lds
fsubr
icebp
aam
hlt
cmp
loopne
stc
in
std
leave
shl
movl
clc
aam
cmc
clc
aam
imul
cmp
in
lock
iret
xlat
aas
xor
in
out
in
jmp
jecxz
out
fsubr
cld
stc
xor
in
fmul
addb
ljmp
loopne
loopne
iret
out
ljmp
cmp
loopne
cmc
fstp
test
xchg
into
xchg
int3
out
repnz
ss
stc
lret
aad
cmp
out
cmpb
fisttpll
in
out
sar
cld
lock
shl
fcmovnu
test
enter
fsincos
lret
xchg
and
jmp
cmp
xor
repnz
hlt
div
in
repz
call
cld
fildl
out
into
fcoml
cs
hlt
lock
cmp
in
fdivr
rcl
filds
int
mov
mov
xchg
mov
fcom
test
call
add
aad
test
repnz
xor
test
mov
aam
cmp
hlt
jmp
xor
cmp
cli
sti
xlat
loop
test
fdivrp
enter
mov
ljmp
lock
and
ret
test
test
shr
in
into
in
div
out
shl
clc
xor
fsin
shl
and
mov
out
fcmovnu
xchg
orl
aaa
jmp
iret
loopne
cmc
int
xchg
test
icebp
bnd
xchg
in
lock
in
rcl
xor
in
loopne
in
fidivrs
cmp
std
test
fcompp
fiaddl
pop
add
add
mov
fmul
rcr
and
popa
jle
ret
jle
mov
xchg
test
rcr
cmc
fmul
repnz
and
in
clc
jmp
jecxz
stc
xchg
into
lret
mov
aam
shl
int
jmp
rcr
repnz
in
repz
repz
lret
ret
xchg
out
aad
lret
in
hlt
icebp
xor
xlat
cmp
leave
clc
mov
jecxz
aad
repnz
stc
call
cmp
cmp
cld
out
out
xchg
test
iret
xor
call
ljmp
sar
iret
fyl2xp1
cli
jmp
fsubr
out
out
lock
out
aam
idivb
in
hlt
rcr
cmc
icebp
cld
sar
repz
out
xchg
stc
out
xchg
out
repz
lret
in
icebp
shl
ror
cmp
incb
and
cli
mov
incl
repz
fldlg2
cmp
ljmp
out
vshufps
frstpm(287
fisttps
aam
call
aad
cld
cmpl
out
testb
mov
ret
enter
jmp
ret
ret
push
xor
jecxz
cli
xchg
iret
jmp
icebp
lret
shr
filds
fcmovne
jecxz
loopne
cli
test
shl
sub
into
cld
clc
clc
lret
aaa
dec
ds
xlat
ds
clc
adc
cmp
int
nop
call
ror
xor
shr
hlt
cmc
xor
fdecstp
in
repnz
clc
fsub
xor
into
into
repnz
in
jmp
cmp
cmp
cmc
into
rol
fdiv
filds
lret
and
out
xchg
mov
vaddsubps
aad
clc
fucom
lret
xor
aad
mov
inc
clc
in
sub
xchg
xchg
into
aad
icebp
jecxz
cmc
cmp
sti
cmp
xor
hlt
sarl
aad
or
std
out
or
jmp
out
lret
fcmovnu
sarl
fadds
fiaddl
fdivrp
repz
addb
in
aam
out
aaa
in
stc
fcmovnbe
cld
aam
in
out
into
loopne
mov
jmp
fadd
lret
fstp
aad
mov
cmp
ljmp
ret
jle
xchg
ror
xlat
ffree
in
cmp
call
ds
out
mov
in
aam
int3
repz
shr
xor
shlb
push
rcl
xlat
lret
call
iret
lock
fldln2
int
fdivr
fxch
cld
cmp
fld
stc
aam
lds
out
xchg
lds
in
stc
ljmp
xor
std
cld
mov
ror
jmp
ret
in
int
enter
stc
hlt
in
cmc
out
testl
int3
iret
lock
ror
jmp
fdiv
aam
int
addb
call
mov
hlt
lock
shl
repnz
sti
les
std
lock
jmp
lret
cld
shlb
aam
hlt
fcomp
in
ret
lret
repnz
lret
divb
int
aam
lock
cmp
sbb
fcmovnb
ret
cli
xchg
add
fsubr
sbb
jmp
fdiv
hlt
int
in
fucomp
shl
out
cli
in
movb
fimuls
xor
ljmp
loop
repnz
out
in
shl
cmp
lret
mov
out
adcb
leave
idiv
hlt
idivb
icebp
repz
ljmp
fildl
in
out
cli
icebp
cmp
lret
xor
hlt
lock
repnz
and
testl
call
in
repz
repz
fidivrs
fcmovnu
shl
jmp
test
int
std
loope
test
cmc
xor
aam
out
hlt
fst
adc
rol
test
in
test
out
xchg
in
orb
ljmp
test
rcl
loopne
loopne
enter
in
xor
xor
xor
cmp
cld
hlt
int3
aam
fld
std
hlt
and
out
xchg
mov
lret
out
in
ljmp
hlt
rcl
shl
orl
lock
xor
mov
add
cmp
je
mov
xor
jmp
ror
ror
mov
cmp
dec
inc
push
jle
ret
jle
clc
cmp
rcr
call
stc
out
cld
in
enter
out
int3
in
ljmp
into
ds
in
cmp
xchg
ret
jecxz
call
cmc
mov
out
repz
xlat
leave
out
loop
rcr
sbb
clc
fcomp
jecxz
loopne
ljmp
jmp
jmp
into
hlt
repnz
adc
stc
rol
enter
call
fucomip
iret
out
not
hlt
leave
icebp
enter
cmp
test
sti
fcmovu
jmp
xchg
orb
out
ljmp
cmp
cmp
aas
xchg
lea
xchg
mov
fcmovu
aam
out
loope
sar
int3
clc
ds
leave
stc
jmp
xlat
enter
xchg
mov
test
aad
int
in
in
fadd
cmp
test
cmp
loop
faddl
call
int
ljmp
addb
mul
fisttpll
icebp
jecxz
test
sar
lock
ror
aas
rorb
mov
int
test
fildll
xor
lret
fyl2x
icebp
jmp
cmp
faddl
add
mov
sub
in
out
out
ljmp
into
repnz
mov
jmp
fsub
aad
enter
cmp
repz
leave
loopne
ret
out
cmp
loopne
in
xor
lock
bnd
sarl
cli
jmp
cmp
xlat
jecxz
fst
lret
int3
call
fmul
lock
loopne
in
xor
fnstsw
loope
not
lds
jecxz
cli
out
lret
xchg
xor
in
cli
idiv
imul
sti
int
cmp
cmp
rol
sbb
in
rorb
rol
stc
clc
iret
jmp
test
loope
stc
std
cmc
fcompp
cmc
in
decb
xor
ss
aaa
lret
clc
fcmovbe
std
jecxz
ds
xlat
aas
sar
in
out
mov
jecxz
xor
das
in
cld
add
jmp
xlat
into
ror
fxch
flds
jp
pop
lret
and
jle
ret
jle
int
ss
cld
icebp
cmp
std
movl
xchg
jmp
das
lret
aaa
neg
divb
rcr
hlt
sti
repnz
test
cld
xlat
xchg
enter
xchg
into
jmp
ret
lock
in
fucom
call
cld
cld
clc
xlat
nop
iret
test
repnz
out
in
xor
sar
fsubp
xchg
test
dec
ljmp
adc
aam
out
aaa
lret
fcmove
out
test
xor
into
jmp
loop
int
jecxz
ss
ds
cmpl
mov
stc
hlt
aas
cli
call
lea
lock
iret
icebp
cmp
fsub
sti
sar
loope
repnz
out
xlat
ljmp
out
lret
loop
jmp
stc
cmp
loop
sti
call
in
mov
out
in
idiv
cmp
addb
stc
ret
aam
ljmp
xchg
enter
aaa
out
cmp
cmp
aaa
aam
test
aam
cld
and
jmp
decl
shrb
cmp
fmul
repz
clc
fnstsw
shl
lret
xlat
in
adcl
icebp
repnz
cmp
in
fcmovb
hlt
testb
int3
adc
loope
cmp
loop
fucomi
idiv
lret
aaa
int3
fdivp
rcl
mov
repz
jmp
mov
jecxz
ret
jmp
xlat
into
aam
cmp
repz
fsub
xlat
cld
leave
orb
mov
mov
xor
das
xlat
hlt
ss
icebp
cmp
aas
iret
fprem
xlat
test
mov
xchg
shr
xchg
in
lret
repnz
xlat
xor
lock
shl
icebp
std
cmc
xlat
leave
std
xchg
fsub
in
xchg
nop
lock
int
sti
in
in
xor
aas
loopne
repz
hlt
loop
out
in
stc
loope
int3
jmp
clc
out
fcmovne
aaa
cmp
fcmovnu
into
test
out
out
out
clc
xchg
mov
jecxz
das
in
stc
lret
enter
inc
fsubr
pop
add
add
leave
int3
aam
aad
fnstcw
ficompl
ljmp
push
pop
enter
ret
jle
adc
rorb
in
in
mov
hlt
in
iret
repz
mul
into
aaa
cmp
shl
sbb
sbb
lock
mov
xchg
aad
repz
xbegin
ror
cmp
in
cmc
cmc
leave
std
cmp
out
hlt
into
repz
xor
cmp
sti
test
out
lret
loopne
ret
xlat
out
fcmovb
cld
in
aas
clc
cld
mov
leave
leave
mov
iret
aam
jmp
cmp
ss
cmp
fadd
fprem
hlt
fmull
xchg
mov
xchg
fsub
into
int3
repnz
xlat
in
icebp
test
mov
out
std
mov
loop
xchg
shl
shl
call
jmp
test
fdivr
in
repz
leave
ret
xlat
lret
lock
std
loopne
xorb
enter
fmul
fidivrl
adc
jecxz
cmc
enter
mov
cmc
mov
loopne
fmul
fdivr
leave
lock
in
cmc
fsubr
ds
inc
jecxz
vpsubsw
std
in
loopne
lock
into
icebp
xlat
neg
fscale
fdivrl
loopne
testb
flds
fucomi
fisttps
cmc
cmp
xlat
iret
out
addb
repnz
test
jecxz
loop
adc
cmc
cmp
aaa
repz
cmp
cmp
testl
out
lock
ret
ljmp
fld
cmp
jecxz
stc
ret
fmul
std
jmp
nop
int3
enter
jmp
icebp
in
ror
cmp
leave
icebp
shlb
shl
cli
jmp
fadd
std
jecxz
ret
mov
jecxz
xor
in
lret
int
out
sti
loope
or
jmp
fmul
lret
incb
icebp
cmp
cmc
out
out
cli
cld
ds
test
lret
mov
lock
cmp
cmp
repnz
in
into
aaa
out
shl
mov
jmp
icebp
fsub
test
sub
aam
neg
cmp
cmc
fnstsw
hlt
fcmovnb
sub
repnz
enter
in
cli
sub
iret
ror
loop
cmp
iret
sti
cmp
xor
cld
orl
ret
int3
fmul
aad
mov
mov
jle
add
iret
loope
les
loope
in
incl
in
ljmp
jmp
in
rcr
cld
cmc
mov
decb
xor
icebp
int
repnz
out
clc
cmc
roll
sub
int3
mov
out
and
xor
hlt
aad
fcmovbe
mul
hlt
hlt
lock
cmc
dec
mov
sub
lret
mov
xor
xor
vshufps
lock
sar
rol
fucom
xchg
call
fcoml
icebp
rol
test
imul
jmp
fcom
out
fdiv
ret
or
ljmp
in
jecxz
ss
stc
aam
rcl
stc
cld
out
ds
cmp
mov
mov
int
xor
aad
aad
add
frstpm(287
stc
xlat
hlt
fsubr
in
jecxz
call
xchg
testb
cmp
cmp
ljmp
call
decb
nop
loope
in
int3
std
in
out
sti
cld
iret
ret
lock
fst
rcr
ret
enter
out
lock
xchg
fdivp
shl
xor
jmp
aaa
out
lock
lock
fcmovnu
hlt
cmc
xchg
adc
mov
in
fists
jmp
aaa
xlat
aam
lret
xlat
in
shl
aam
mov
ljmp
enter
cli
cmp
in
hlt
fcos
cmp
cmp
incl
test
fcoms
jmp
xor
lock
cmp
repz
fcom
fmulp
out
test
orl
or
iret
enter
out
cld
imul
loopne
icebp
cli
int3
lock
ffreep
xlat
xlat
fcmove
clc
out
leave
shr
call
lock
out
xlat
cli
std
loop
or
fcmove
vpaddq
cld
loopne
in
mov
rclb
call
sar
clc
cmc
fadd
iret
fcmovu
repz
in
cli
xchg
ljmp
ljmp
fucomi
iret
std
repz
xlat
cld
shl
xor
jmp
mov
mov
out
out
lock
ds
cli
in
mov
mov
xor
add
movzwl
mov
xor
lea
add
mov
jmp
aas
into
iret
ror
rol
shr
movsb
lock
movl
ret
jle
sar
leave
int
fucomp
mov
int
sar
ret
cmp
into
icebp
fsin
fptan
ret
rorl
cli
xchg
mov
repnz
lock
lret
sar
out
ret
loope
aad
jecxz
mov
xchg
cmc
ss
sti
shr
into
cmp
ret
sti
mov
leave
and
jmp
out
icebp
jmp
stc
lock
clc
stc
out
iret
cmc
adc
cli
ds
jmp
mov
in
lds
xor
cmp
sti
jmp
sar
ds
sub
cmp
hlt
ret
lret
nop
sti
in
decb
out
xor
clc
cmp
hlt
repz
aam
loop
jmp
ljmp
xchg
mov
loope
shr
lock
in
cmp
mov
enter
fisttpll
xchg
fsubrp
out
divl
xor
lret
out
xlat
fst
in
ljmp
addb
call
lret
icebp
ljmp
ror
cmp
xchg
xchg
out
in
aam
icebp
aam
enter
cmp
xchg
jmp
cld
orb
xchg
repz
out
cld
lret
loopne
aaa
int
cmc
ret
out
xchg
or
fildl
fsub
call
fcomp
cmp
add
fnclex
xor
loopne
aad
lret
rcl
mov
ljmp
idiv
in
loopne
test
shl
les
neg
pop
int
incl
cli
cmp
shl
rcr
lock
shr
ret
out
shl
aad
les
iret
ljmp
xor
cmp
idiv
int3
int3
fdivp
icebp
fcmovbe
test
xlat
ror
lret
test
fdivr
stc
ret
fcmovne
std
dec
cmp
icebp
or
lock
cld
stc
loopne
add
lret
iret
lret
mov
jmp
xor
std
fnstsw
repnz
in
hlt
cld
cmp
clc
sbb
hlt
ret
out
ljmp
sar
loopne
ret
mov
mov
jmp
into
aad
vpaddusw
aad
js
jg
fdivs
adc
jle
ret
jle
mov
mov
icebp
ret
div
out
lret
int
out
fdiv
fcos
cmp
sti
xor
loop
enter
repnz
call
xor
in
fsubr
cmc
fildl
aad
lock
xlat
mov
shl
int
int
lock
cmc
shr
loope
xlat
aas
repz
std
sub
fists
leave
xor
int3
ljmp
cmp
fmuls
in
std
fucomip
lret
sub
in
in
lret
rol
fildl
loopne
call
in
jecxz
nop
lea
enter
cmp
rcl
adc
xchg
jmp
les
rol
cmc
rol
xor
xor
fldlg2
in
sti
loop
out
repz
mov
dec
into
orl
enter
fcmovnu
sbb
mov
fisttps
xlat
incl
repz
fadd
aaa
in
sti
repnz
lock
cmp
ret
shr
ret
xchg
into
rorb
call
cmp
aas
rolb
call
xor
xchg
iret
in
ljmp
enter
test
std
rcl
roll
xchg
out
xchg
lret
lret
into
clc
call
mul
aas
sbb
fiadds
clc
std
in
into
call
out
into
xor
repnz
idiv
icebp
cmp
sar
shr
cld
loope
lret
xlat
loop
iret
lret
xchg
jmp
aad
stc
ss
out
ds
test
in
hlt
not
in
in
out
loopne
out
jecxz
xchg
rol
int
xor
fdiv
cli
lock
repnz
testl
lock
xchg
aad
fsubr
out
in
cmp
xlat
fcomi
faddl
mov
lock
orl
out
ror
cli
repz
aam
fdivr
icebp
faddp
test
add
out
lock
out
into
xor
int3
cmp
cli
call
cli
add
rol
hlt
filds
add
imul
sub
jmp
aad
int3
fmul
fnstsw
sti
adc
pop
jle
ret
jle
loop
iret
in
leave
divl
fnstsw
ss
ret
std
and
mov
jmp
jmp
lock
shl
aad
int3
aam
sti
fcmovnb
cmp
call
enter
mov
decb
out
xor
cmp
in
aaa
loopne
cmc
stc
aam
mul
in
adc
loope
int3
call
in
xor
in
cmc
fcmovnu
cli
out
xlat
cli
xchg
and
xchg
sti
loop
in
aad
xor
aam
jmp
sub
xchg
clc
cmc
neg
addb
not
aam
out
leave
sarb
push
repnz
fcmovb
stc
ret
repnz
or
orl
in
xlat
ret
sar
ror
aam
int3
icebp
out
cmc
jecxz
repnz
mov
iret
loop
out
loop
ror
sub
ss
lret
repz
repnz
movl
mov
lock
lock
repnz
aad
cli
int
cmp
hlt
loopne
into
rcr
stc
jmp
test
out
fcoml
lock
fsubr
cld
aam
icebp
icebp
hlt
fadd
cmc
hlt
cld
call
les
out
lock
xor
int3
xor
int3
sti
cmp
cmp
enter
std
enter
loopne
xchg
in
cmc
shr
repnz
in
stc
sti
iret
call
aas
repz
loope
ffreep
addb
nop
jmp
jecxz
out
in
lock
cmp
ds
loopne
push
in
lds
jmp
ljmp
iret
repz
sarl
mul
fcom
lret
idiv
fcoms
jmp
neg
cld
icebp
fcmovbe
ss
jmp
icebp
cli
clc
hlt
ret
test
loope
repnz
or
shl
out
fcomp
shl
out
stc
loope
aas
cmp
xor
in
lret
shl
aas
repnz
into
cmp
xor
cmp
test
jmp
mov
lret
cs
cmc
into
clc
repnz
aaa
aad
icebp
ror
xchg
mov
lret
not
out
test
out
inc
in
jmp
mov
mov
jmp
int
iret
rcl
fcmovne
fnstcw
xchg
pop
popf
pushf
popa
jle
ret
jle
in
sub
in
hlt
fnstsw
in
lret
sarl
in
idiv
lret
fdiv
cld
filds
int
lock
test
cmp
stc
aad
fiaddl
in
fcmovne
in
fcmovu
mov
in
jmp
xor
aam
cmp
cld
ss
stc
fstpt
fadds
in
fisttpll
call
hlt
into
leave
ljmp
loop
iret
lock
idiv
fndisi(8087
fyl2xp1
fsub
loope
fdiv
ljmp
aad
ss
not
lret
sti
sar
fstp
out
ffreep
jmp
clc
call
aam
call
cli
in
shr
in
div
aad
cmp
aas
aad
aam
in
mov
jmp
into
ret
lock
aaa
lret
repz
clc
fcmovnbe
fcmovu
jecxz
int3
int
mov
in
call
in
mul
ror
cmp
hlt
ss
cmc
iret
loope
sti
xlat
ret
mov
mov
incl
popl
xor
int3
aaa
xlat
out
fst
out
loope
xlat
fiadds
jmp
clc
in
cli
cld
int3
clc
ds
lret
hlt
sarl
xlat
repnz
int
loope
repz
jecxz
shl
cli
out
ljmp
filds
mov
out
f2xm1
xchg
divb
jmp
cld
cmp
fcmovnbe
cmp
rol
stc
ret
jecxz
jmp
lret
xor
xor
into
iret
cld
stc
lret
cmp
cmc
ds
sti
testl
mov
out
out
iret
enter
int3
xor
sarl
rcl
xlat
shl
sti
sti
loop
loope
mov
jmp
lret
out
shl
xor
cmp
inc
lock
jecxz
fstp
in
mov
addl
hlt
xor
aam
ror
call
aas
jecxz
std
cld
repnz
sti
fisttps
std
mov
rcl
imul
les
int
jmp
out
test
enter
fcoml
mov
xor
lret
out
shl
cmp
cmp
fidivrs
icebp
std
addl
sub
jecxz
lret
ret
fstpt
sti
jmp
int
int3
int
cmc
inc
cwtl
push
arpl
ret
jle
mul
stc
repz
addb
cmc
mov
fsub
fabs
xchg
mov
sti
call
jmp
xor
test
out
loopne
out
lret
std
in
call
in
call
in
repz
repnz
fcmovu
jecxz
out
leave
std
jecxz
test
stc
icebp
fcmovbe
cmp
ljmp
std
adc
mov
xchg
mov
aad
sub
out
rcr
shl
into
fcom
repz
mov
enter
repnz
fcomip
mov
call
int
cld
ds
aad
ret
jecxz
lret
test
frstpm(287
lret
sbb
icebp
into
jmp
repnz
cmp
jecxz
in
cmc
out
fldl
ljmp
test
int3
out
xlat
shl
idiv
test
out
cmp
xchg
in
fdiv
lock
out
in
call
cmp
cmp
xlat
lock
ds
repz
repz
cmc
hlt
out
mov
fucom
loope
into
int
xor
clc
ret
jmp
hlt
cli
fsub
cmp
fdivrp
shr
cmc
loopne
lret
ljmp
cli
out
sarl
in
out
jmp
clc
shl
repz
mov
sub
sbb
ror
shr
xor
ror
aaa
rcr
xchg
fucom
lret
int
sti
ret
repnz
jmp
rcl
rcr
call
roll
leave
xchg
or
mov
rcl
loopne
out
rol
ss
not
xor
rol
hlt
loopne
imul
fucomip
out
in
cld
xchg
into
into
shl
sarl
cmp
sti
ret
fsub
ret
jmp
call
mov
hlt
cmp
ror
call
into
mul
ret
rcl
fdiv
int3
iret
loop
call
enter
fucomip
aad
sti
into
cmp
fidivrl
shl
std
xchg
and
hlt
into
div
loope
iret
shrl
aaa
clc
out
std
into
frstpm(287
xchg
std
loopne
hlt
loop
stc
out
xchg
in
out
out
jmp
testb
dec
loopne
decl
add
add
rol
int
fcmovnbe
mov
or
and
jle
ret
jle
clc
out
call
in
fcomp
call
out
ljmp
repnz
sub
out
int
lret
rcr
idivb
shl
lock
lret
mov
out
mov
jmp
xor
stc
shl
repnz
aad
in
cmp
mov
sub
out
or
out
hlt
rcl
cmp
out
out
loop
jecxz
fcmovnu
stc
test
out
cli
leave
loope
lret
iret
fdiv
in
div
fldpi
lret
ret
addl
icebp
int
into
shl
icebp
out
in
in
cli
hlt
int3
lret
sbb
aam
faddl
loope
stc
ljmp
shl
fisubrl
ds
fcom
in
fadds
imul
xchg
jmp
in
cmp
sub
out
in
into
sti
cmp
repnz
std
aas
sar
call
fsubrp
sub
mov
call
sti
stc
xlat
adc
clc
shl
loope
jecxz
ljmp
icebp
test
aas
ret
cmp
repnz
hlt
shr
cmpb
out
shl
sar
movb
test
aam
in
aad
hlt
in
cmp
ss
sarl
clc
cli
jecxz
cld
xchg
enter
std
into
xchg
rol
int
fldt
iret
lret
icebp
lock
int3
test
sti
fsubr
ljmp
mov
out
int
loope
cmp
leave
cli
aam
lret
loope
shr
adc
xchg
mov
ljmp
repz
in
test
aaa
loope
hlt
stc
jmp
mov
shr
filds
jmp
repnz
ljmp
or
jmp
ret
lret
ljmp
hlt
fcmovnb
iret
cmp
cli
cmp
fndisi(8087
ret
sti
rcr
cld
flds
fisttpl
cmp
out
rcr
xlat
fnstcw
clc
addl
mov
loopne
loope
mov
aad
ret
fmul
call
fdivrp
shl
div
loope
mov
mov
lds
mov
shlb
in
aam
das
fcmovnu
clc
addl
jmp
mov
jmp
ret
int
fstl
mov
mov
jle
add
cmp
std
add
cli
lock
jmp
xchg
fldl
shl
cmp
jmp
cmp
cld
aam
hlt
fstp
jmp
fdiv
in
xchg
cmc
call
idivb
rcr
hlt
leave
aaa
jmp
iret
repnz
cld
mov
xchg
les
in
loop
xorl
icebp
aaa
ss
loope
loop
aaa
mul
cmpl
hlt
in
orl
rclb
not
fst
fucomi
sti
adc
hlt
aas
std
test
mov
mov
cmc
hlt
in
xor
xor
std
jmp
int3
addb
loope
jecxz
call
iret
lret
mov
in
loopne
repz
lret
cli
jmp
aas
in
hlt
xlat
call
sar
and
in
fmull
in
cmc
cli
out
sar
aas
push
fadd
mov
xchg
in
iret
fstl
repnz
out
loopne
jmp
fxch
loop
vcmpss
in
clc
jmp
jmp
into
cmc
xor
xor
fdiv
out
loope
int
lock
mov
ljmp
test
aaa
loope
jmp
imul
lret
xor
cli
iret
fcmovnbe
out
mov
ret
cld
int3
out
stc
ss
loopne
fdivr
into
out
incb
loop
in
cld
mov
into
out
xchg
xchg
xor
ljmp
fidivs
idiv
fdiv
out
rol
hlt
fcmovb
jmp
jmp
xchg
xchg
sar
lock
lret
rcl
fdivr
lock
shl
out
std
cli
shl
sbb
xchg
xchg
shll
fcmovne
ret
in
rol
ret
out
nop
dec
enter
nop
rcl
out
out
call
addb
mul
jmp
xchg
xchg
xlat
sub
in
sti
lret
jmp
repz
idiv
orl
and
loopne
loopne
int
out
fsubr
out
rcl
rcr
in
in
test
sti
in
fildl
xchg
adc
int
leave
cmp
xor
stc
cmp
je
jmp
int3
ret
int
mov
pusha
das
mov
jle
ret
jle
std
fldl
out
leave
enter
fnstsw
ljmp
out
sti
cmp
cmc
cmp
ljmp
int
mov
out
lds
ds
out
cmp
loop
loopne
call
mov
in
xchg
out
xor
in
lock
cmp
test
clc
fmull
lret
lret
loop
mov
xor
int
cmp
cmp
into
ljmp
loop
stc
aad
fisttpll
ret
divl
out
cs
div
fdiv
stc
iret
out
test
out
xlat
cmc
std
fldl
rorl
cmp
xor
int3
ds
ret
out
test
into
int3
icebp
out
cmc
ss
out
enter
call
cld
test
out
shl
xlat
ljmp
push
lret
in
out
cs
cmp
jmp
ret
cmp
ret
cmp
mov
flds
aaa
xor
cmp
clc
cmp
fsubp
in
mov
in
leave
lock
and
test
ret
sub
xor
cmc
int3
rcl
xor
rolb
cli
mov
fisttpll
ljmp
repnz
cmc
fmulp
ret
loope
and
cmp
xchg
sbb
shr
xchg
cmc
loop
out
cmp
fprem
aas
cmp
repnz
mov
out
cld
pause
rcl
in
xlat
shl
rcr
fdiv
int3
clc
cli
ret
fchs
xchg
cld
mov
enter
xchg
xchg
icebp
xor
in
cmc
aas
cmp
rol
cld
fimuls
addb
in
clc
int
out
rcr
call
cmp
jecxz
rcr
cmc
loop
mov
into
mov
testb
enter
cmp
cli
sti
iret
jmp
les
mov
enter
jmp
icebp
std
call
ret
in
loop
loop
neg
fnstsw
out
mov
jmp
in
icebp
fdivp
aad
ret
ds
sarb
jmp
push
mov
jmp
aad
iret
aas
rol
aad
push
inc
push
xchg
pop
xchg
jo
jle
test
jle
rcr
test
in
out
iret
addl
icebp
hlt
ret
cli
cmc
lock
enter
mul
loope
cmc
hlt
enter
out
in
cmp
in
repnz
xor
int3
xlat
out
fildl
shr
decl
leave
int3
out
enter
stc
into
aaa
lock
push
sarl
rcl
push
fiadds
orb
lock
clc
cld
icebp
in
cmc
addl
lret
fldl
rcl
ret
repz
inc
aad
sbb
ret
int3
mov
call
cmp
icebp
sti
stc
fdivr
cmc
iret
loop
cli
fadd
leave
lret
fxch
in
repnz
mov
sub
int
cmp
in
clc
aad
idiv
cmp
jmp
out
mov
mov
aad
loop
ljmp
lock
cmc
ret
out
in
clc
jmp
std
fisttpl
xchg
iret
cmc
sub
in
out
xor
leave
int
jmp
ror
loope
call
lock
in
jecxz
sub
enter
cmp
loop
cli
repz
in
loopne
lret
mov
loopne
cmp
sti
not
sar
test
cmpb
addb
out
fsubp
adc
jmp
icebp
xor
out
jmp
out
xor
ret
xchg
xlat
jecxz
in
lret
xchg
hlt
enter
into
lret
rcr
in
iret
repnz
repz
jmp
orl
aaa
neg
in
cmp
clc
lock
fcmovnu
jmp
ds
jmp
sbb
ljmp
into
repz
aad
out
idivl
into
mul
cli
out
fisttps
adcb
xor
out
sar
divl
out
repz
cmc
in
mov
nop
out
int
xchg
jmp
out
imull
rcr
cmp
shr
adc
int3
mov
jecxz
clc
in
icebp
out
clc
ds
icebp
loope
aam
in
neg
cli
jmp
fldl
loop
repnz
cmp
cmc
in
inc
loopne
jmp
and
loope
lret
in
sti
fsincos
into
cmc
cmc
aad
in
mov
xchg
test
out
int
mov
in
in
loop
xlat
cld
ror
in
iret
out
jecxz
flds
loop
repnz
jmp
aas
into
lret
leave
aam
dec
jo
ret
or
add
out
mov
bnd
lock
lret
lret
dec
std
clc
std
test
testb
test
test
les
in
cli
cmp
repz
cli
aam
fucom
clc
cmc
fcmovb
test
stc
jmp
loop
lds
ss
rcr
aas
stc
sti
std
in
xlat
aam
in
addb
mov
repz
std
loopne
loop
xchg
imul
addl
adc
out
xor
xor
into
cmp
cld
sub
loopne
mov
pop
lret
cmc
in
int
xor
les
jmp
int
cmp
fcomip
fcmove
out
in
int
in
xchg
mov
cmc
aaa
shl
xor
fucomi
cmc
cmp
add
cmp
addb
int3
decl
hlt
clc
cli
iret
lret
xlat
cmp
rcr
repz
add
loop
sbb
test
aam
fdivl
ror
icebp
repnz
shl
fdivr
loopne
std
xlat
in
loop
repnz
pop
fdiv
out
not
cmp
stc
leave
into
fnstsw
sti
sar
mov
and
out
neg
loopne
xchg
popl
aaa
xor
aaa
ljmp
in
rolb
fcmove
xchg
loopne
jmp
aad
cmp
cmp
fcmovnb
out
aas
aam
xchg
aad
in
clc
out
fdivp
xchg
jecxz
xchg
not
xlat
icebp
cmp
iret
ror
loope
ret
test
xchg
mov
add
out
loopne
fimuls
xor
cmp
leave
idiv
aas
cmc
lock
sbb
cmp
mov
in
cld
mov
call
cli
iret
cmp
xor
cmpb
sti
mov
fld
jmp
call
int
shll
int3
icebp
fdivrp
fidivrl
or
aam
in
in
std
mov
in
in
out
xor
ljmp
shl
and
icebp
test
leave
loop
jecxz
fcmovu
mov
lret
mov
xor
cmp
not
stc
ffreep
mov
lock
loopne
lret
xchg
das
loope
sti
sub
lock
rcl
roll
jmp
lret
in
cmp
repz
fucom
mov
loopne
in
ljmp
and
into
fdiv
in
mov
int3
jmp
shl
test
lret
xor
cmp
mov
mov
fsub
mov
fcmove
loope
and
div
out
fmull
push
jmp
int3
ret
int3
int3
sahf
pushf
gs
jp
xchg
les
jle
add
aaa
out
cmc
cmp
xlat
xor
ret
xchg
fucomip
fisttpll
xchg
xchg
mul
xor
out
ror
stc
cmp
repnz
out
xlat
aad
jmp
test
adcl
into
into
addl
call
in
xchg
test
lock
rcl
ror
in
cli
fnstcw
into
aam
add
stc
aam
stc
int3
jmp
loop
rcl
aam
lret
lret
fcmovnu
fmul
xor
hlt
call
loop
int
xchg
xor
out
ret
leave
in
std
aad
iret
fidivrl
loop
stc
lret
iret
decl
out
cli
in
cmp
std
loopne
hlt
std
fcmovu
sbb
mov
inc
fisttps
cmc
hlt
ljmp
xor
jmp
cmp
lret
into
sbb
test
xchg
mov
in
lret
xlat
fistl
lock
jmp
stc
ret
aaa
aaa
icebp
cmp
iret
cmp
in
ds
fdiv
call
out
fcoml
out
rcl
xor
cmc
call
in
rcr
ds
repnz
ffreep
out
sub
call
in
rcl
ljmp
sbb
ret
out
cld
int3
sti
into
fisttps
out
ljmp
hlt
stc
cmp
repz
ret
cld
call
ror
enter
test
xor
cmp
sarb
jmp
in
rol
jmp
fsqrt
fmul
incb
iret
leave
ss
call
ljmp
xchg
xlat
jmp
out
stc
incb
xchg
xchg
iret
shl
lret
shl
leave
aam
in
xlat
lock
filds
sti
loopne
orl
xchg
aad
mul
enter
fdiv
ljmp
aas
out
cmp
decl
bnd
ret
enter
cmc
cmp
sti
xor
in
ffreep
cld
sub
orb
aaa
shl
sti
into
into
cmp
int3
cmp
ret
addl
mov
loop
aam
shl
cli
leave
in
cli
int
fcom
loop
test
aad
sti
mov
call
in
repnz
sarl
ds
repz
testb
loope
cmc
xchg
out
iret
ret
repnz
xlat
call
loop
lock
loopne
incl
mov
mov
out
cli
shr
in
enter
cmp
fstpt
cmp
push
pop
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
pushl
pushl
pushl
pushl
call
jmp
adc
jmp
lret
into
fst
fstp
bound
and
jle
test
jle
loop
aas
ret
aam
loope
cli
ficoml
xchg
fdivs
ret
shlb
stc
xor
ljmp
out
call
lea
test
ror
out
cmp
ljmp
cmp
mov
div
mov
int3
out
jecxz
jmp
out
jmp
lret
xlat
std
cmc
hlt
adc
ds
fiaddl
out
into
repz
jmp
xor
cmp
hlt
cmpb
sti
ret
cmc
xchg
leave
loope
mov
xchg
icebp
xlat
cmp
testl
addl
repz
xchg
xor
ss
enter
aad
aam
loope
call
jecxz
jmp
in
rorb
test
iret
jecxz
std
repz
cli
std
cli
fcom
test
out
leave
mov
adcl
cmp
int3
icebp
icebp
cld
testl
out
jmp
fstp
int
fdivrp
test
lret
stc
xor
xor
rcr
out
cld
lock
out
loopne
sti
and
fildl
fmul
out
loop
ss
clc
stc
leave
std
icebp
hlt
mov
ficoms
hlt
cmc
les
xlat
jmp
divb
aaa
repz
xlat
test
std
incl
mov
out
decb
out
fcomp
xor
in
in
xor
sti
out
in
sti
test
test
lock
cmc
repz
out
jmp
shl
loopne
icebp
into
cmp
cld
fcom
jmp
stc
ljmp
xor
fmul
das
aam
aad
neg
cmp
fcomp
lds
int3
in
shr
mov
stc
cld
repz
out
rcl
ret
hlt
leave
std
loopne
ljmp
mov
idiv
jecxz
std
cli
lret
lock
int3
int3
hlt
xchg
out
dec
jmp
std
in
and
in
iret
out
lret
loopne
sarb
sarb
adc
ljmp
div
fdivr
xor
jmp
loope
repz
out
rol
out
mov
mov
hlt
leave
lock
int3
fidivrs
iret
cmp
loope
cmp
and
fsubr
test
xlat
out
mov
lret
int
clc
cmp
stc
xor
jecxz
fldl
or
aad
in
lock
xor
icebp
fsin
in
sbb
std
loopne
xchg
neg
loopne
jmp
int
iret
rcl
aad
inc
xor
jg
insb
ficomps
add
ljmp
in
repz
jmp
ror
shl
icebp
sti
out
aam
cld
testl
shl
xor
lret
cld
stc
out
cmp
addb
out
jecxz
cld
out
lret
jmp
cmp
clc
cld
loope
or
loope
rol
out
in
xlat
or
lret
test
icebp
enter
xor
cmp
dec
cmpl
loope
sar
out
mov
xchg
in
cli
int
loope
rol
clc
xor
cmp
aaa
enter
repnz
fprem
out
loop
not
fcomi
xlat
loop
in
sar
test
hlt
in
aam
jecxz
fcmovu
out
loop
ret
stc
hlt
mov
and
fimuls
int3
ret
repz
std
enter
xor
loope
addl
aad
cld
cli
loopne
test
enter
cmp
cmp
cli
jecxz
cmp
fcmovnb
fldl
jmp
xchg
loopne
xchg
sub
xor
in
fnstenv
fcmovnbe
shll
mul
call
int3
ret
int3
out
icebp
xor
ss
ret
cs
stc
incl
testb
in
roll
shlb
shl
call
cmp
rol
clc
and
call
out
leave
xlat
xor
out
shl
repnz
sti
test
shl
in
std
fcomp
loopne
in
out
inc
call
icebp
std
lret
clc
cmp
mov
ds
shl
out
out
loope
jmp
out
lock
xor
sar
aam
stc
loope
inc
jmp
lret
mov
sub
aam
shlb
xor
xor
repz
aad
idiv
out
sti
mov
out
icebp
nop
mov
cmc
test
ljmp
xor
sub
orb
loopne
faddl
xor
lret
lret
aad
cmpl
testl
in
in
cmc
aam
xor
out
call
lock
aad
fucom
ret
mov
fstp
out
cmc
in
hlt
hlt
not
clc
xor
stc
out
aas
cmp
jmp
in
lock
loopne
stc
cmp
fsubr
mov
iret
xor
sti
idivb
lock
ds
test
int
fists
loop
jecxz
cmp
out
int3
cmp
repnz
sarl
fdiv
test
fimuls
jmp
mov
enter
xchg
jb
add
add
add
ret
jmp
mov
fcmovnu
or
sub
stos
inc
ret
jle
add
cli
call
aam
repnz
rol
fadd
call
stc
loope
addl
clc
int3
jmp
out
shl
cmc
clc
repnz
sti
loope
cmc
mov
ret
iret
out
xchg
xchg
xchg
loop
out
out
cmp
std
fstpt
fucomp
rcl
std
out
jecxz
test
vpaddsb
in
cmc
aad
enter
int
cmp
lret
cmp
call
stc
enter
icebp
into
test
or
int
cmp
int
out
iret
loopne
loope
jmp
in
xchg
in
std
call
cmp
fmulp
icebp
cmp
loopne
loope
test
ffree
enter
movl
repnz
aam
int
icebp
or
into
lock
mov
xchg
fisttps
div
call
test
call
leave
iret
sti
in
hlt
jecxz
ljmp
aaa
fsubr
aaa
in
div
shl
xchg
cli
orb
jmp
mov
xor
jmp
aam
lds
loopne
std
out
sti
jecxz
aad
in
int3
repnz
std
sti
jmp
aas
cmp
fsub
enter
xchg
or
repz
xor
enter
hlt
fcmovnu
fcmovnu
fdivrp
cld
hlt
cmp
cld
in
xchg
hlt
shll
xlat
idiv
enter
or
lret
in
ret
loopne
in
and
in
int3
int
iret
hlt
out
into
ljmp
jmp
iret
shl
loope
roll
adcl
xchg
xor
clc
lock
fdiv
out
fldl2t
fld
cmp
repnz
cld
nop
into
fcmovne
repz
enter
out
addb
xchg
out
lret
stc
std
lret
out
iret
xchg
ljmp
jmp
lret
aad
shr
sarl
jecxz
out
ljmp
cld
loope
rol
xor
sub
cmp
in
loopne
adc
aas
test
loopne
jecxz
loope
shl
xchg
ss
rcr
shl
idivl
xlat
aam
aam
in
cmp
mov
in
stc
fmull
jmp
enter
cmp
fnstsw
repnz
call
lret
lret
loopne
repz
xor
cmp
fstp
test
shl
sar
jmp
cld
enter
xchg
rol
iret
int3
cmc
aaa
hlt
xor
notb
xlat
mov
xor
mov
adcl
xor
movl
jmp
iret
lret
rcr
aad
int
jge
ja
sysenter
into
insb
jl
jle
add
fildl
leave
loope
test
fsubrp
cld
std
jmp
leave
xor
repz
ror
adc
aad
fld
addb
ljmp
int3
xor
aam
sbb
add
jecxz
cmp
int3
enter
iret
fstl
sti
ljmp
int
out
ljmp
movl
stc
in
xor
cli
jmp
fidivl
div
icebp
cld
jecxz
fcomi
fmuls
std
repz
cmp
in
ds
shl
loope
repnz
xlat
sub
out
ret
mov
imul
lret
std
into
cmc
fcom
icebp
aas
call
ds
ret
shr
rorl
cmp
out
stc
aam
cmpl
incl
loop
repnz
loop
cmc
aam
in
leave
fdivp
repz
repnz
and
vpsrad
int3
sti
nop
fcoms
fsubrp
out
shl
lret
xor
and
dec
call
in
xor
ljmp
repnz
fucom
aam
fincstp
xchg
mov
cli
mov
into
ljmp
cs
iret
cld
cs
sar
int3
fidivrl
loope
shl
fxch
out
loope
int
enter
icebp
aam
shr
test
cli
stc
loope
fisttpl
std
icebp
xlat
xor
xor
in
ror
call
int
fcmovbe
ret
mov
iret
call
sub
int3
fcmovnbe
aaa
into
cli
cmp
out
aas
fildl
roll
cmp
mov
out
ss
icebp
in
cmp
mov
cmp
mov
sub
enter
neg
icebp
in
loopne
leave
ljmp
fsubp
ror
icebp
call
ds
roll
lret
enter
std
out
in
call
xor
test
into
addl
mov
loope
cli
in
out
xchg
iret
lock
jecxz
xor
loopne
sub
in
xchg
dec
cli
ret
in
int3
lea
out
cmp
ds
lock
cld
roll
in
jmp
out
iret
xor
out
cmp
fidivs
incl
aad
sti
mov
stc
movl
add
movl
jmp
jmp
enter
int
int3
lret
xlat
ja
lea
jg
jle
add
cmp
and
out
xchg
aad
in
into
clc
rcr
cmp
lret
out
shl
stc
clc
mov
in
in
stc
out
orl
cmp
std
sar
cmp
clc
rolb
xlat
int
icebp
shl
iret
mov
clc
fmul
das
sti
ds
clc
into
fcmovnu
aas
mov
fisttps
lea
neg
xor
call
idiv
in
repz
mov
leave
mov
mov
cld
or
xchg
jecxz
xor
jmp
cmp
fiaddl
shl
loope
nop
repz
sub
shll
out
lret
out
int
icebp
cmp
repz
xchg
loop
mov
stc
int
out
sti
cmp
iret
cmpl
cli
test
dec
fxch
xchg
out
and
xlat
out
sti
fnstenv
cmp
rol
rolb
cmp
xchg
leave
icebp
in
sub
in
clc
in
into
shr
fidivs
jmp
in
lds
shl
jecxz
jecxz
loopne
jecxz
test
in
ss
out
int
repnz
xor
cmp
xor
idiv
in
fcmovnbe
clc
sbb
repnz
clc
out
stc
out
in
sarl
int3
cli
aas
ss
cld
lock
aad
loope
stc
decl
xchg
shr
xor
cli
call
fcmovu
fsubp
repz
jmp
in
xchg
fiaddl
shll
aaa
cmp
int3
sub
into
decl
loop
out
fcom
mov
faddl
xor
int
test
lret
fldl
mov
lea
loope
lret
loop
in
aam
ret
fidivrl
out
sti
in
cld
out
aas
into
les
iret
jecxz
xchg
lret
cli
ss
xor
sti
shl
cmp
ds
call
lret
iret
cld
addl
iret
out
cmp
ror
sarl
cmp
xchg
addb
sub
xorl
ror
jmp
sar
cmp
cld
out
xchg
int3
int3
in
iret
shrb
enter
aam
into
lock
ret
ret
stc
xbegin
shl
int
clc
xlat
leave
lret
fmul
xlat
ss
cmpl
out
aas
leave
and
test
xchg
test
lock
xor
jmp
out
mov
xrelease
int3
test
mov
aas
jne
mov
mov
mov
movl
mov
mov
mov
mov
notl
jmp
rol
lret
ffree
aam
mov
mov
pop
clc
sub
test
jle
xor
fidivs
rcr
out
ds
cmp
enter
leave
lret
test
sub
repnz
shl
ret
rcr
call
idivl
idiv
rolb
std
flds
mul
rcr
lock
int3
lock
sbb
fninit
adc
fucom
mov
leave
lret
roll
lock
fdivr
int
not
cli
repz
fsubp
cli
enter
ljmp
cs
sarl
test
out
out
iret
cmpb
ret
div
mov
loopne
jecxz
int3
aam
mov
repz
aam
aaa
rcr
int3
cmp
jecxz
test
int
in
cld
sti
cld
xchg
xchg
xor
xor
xor
clc
aad
lret
fsin
and
mov
fcmove
in
out
cli
cli
sti
out
jmp
ljmp
lds
fucomp
fcomp
std
faddl
shlb
out
fmulp
xor
pushl
sti
out
leave
loope
cmc
fcmovu
loope
lret
fucomip
out
shll
xlat
enter
shl
test
fcomp
loope
in
out
out
icebp
test
clc
cli
faddp
aad
loopne
or
out
dec
in
int
loop
xchg
inc
loopne
repz
stc
out
cmp
lock
shl
aad
int3
dec
stc
int
jmp
xor
icebp
into
shr
out
cmp
repz
xor
ret
jmp
fmull
out
loopne
in
call
xor
fucomp
ljmp
cmc
jecxz
mov
loop
in
enter
lock
loope
out
enter
fucomp
enter
fiaddl
fst
leave
mov
fcomip
in
xor
clc
sti
rcl
cmp
cmp
xlat
ret
testb
ljmp
nop
mov
jmp
enter
out
cmp
repnz
in
ror
cmc
in
sub
in
mov
stc
out
enter
int3
repz
cmp
test
into
in
rclb
in
in
ljmp
lock
ds
lock
jecxz
ret
int
out
std
rclb
lret
sar
in
fcos
repz
movb
lret
mov
into
into
cmc
out
out
test
cmp
aam
fdivrs
fnstcw
loop
repz
out
loopne
leave
orl
jmp
aam
rcl
aam
inc
call
add
add
ret
add
int
xlat
enter
add
jle
add
into
shl
rcl
aad
std
lret
mov
lock
xchg
test
int3
aam
ljmp
in
out
repnz
orb
mov
loop
xor
fldl2e
into
call
imul
test
in
cli
icebp
icebp
mov
aam
rol
out
in
sti
ljmp
lock
lock
cmp
in
cmp
into
ret
iret
out
movl
in
xchg
xchg
xchg
rol
shl
clc
lret
stc
std
jmp
cmp
cli
rorl
test
jmp
sub
in
cmc
in
in
cmpb
fdivr
fsubrp
sarl
add
loope
call
xor
cmp
jmp
ljmp
hlt
fdivp
out
xlat
xchg
int
shr
rol
shr
xlat
aad
xor
aam
fcomi
ret
test
aam
xchg
lret
mov
icebp
ljmp
cmp
cmp
xor
stc
fld
repnz
std
cmc
cmc
ljmp
mov
out
loop
fldl2t
sarl
aad
cld
cmp
fcmovne
in
call
fcmovne
test
xor
fcomip
icebp
in
neg
in
out
cmp
lock
ret
out
call
lock
shl
clc
ret
leave
out
out
aaa
sarb
cmp
in
cmp
shl
fcmovb
sti
std
and
std
rcr
out
xor
icebp
cs
enter
out
loop
aas
adc
rol
and
fstp
ljmp
shl
stc
into
shlb
aad
clc
lock
loopne
movb
fildl
shl
in
call
ss
cmp
rcr
fld
fstp
mul
enter
mov
ficoml
jmp
vpmaxub
cld
leave
loop
loope
fldl
xlat
mov
jmp
cld
std
out
xchg
xchg
in
ret
shr
lock
rol
cld
sarb
out
test
fdivp
in
mov
int3
leave
fdivp
xchg
aad
icebp
cmc
repnz
aaa
fistpll
fldl
test
ret
mov
clc
lret
xchg
xchg
xchg
out
stc
hlt
out
shlb
idivb
hlt
jmp
sti
in
fsub
sbb
jecxz
fisttps
in
hlt
cmp
cmp
in
shr
ljmp
les
ljmp
fucomip
icebp
ret
das
mul
les
cld
ljmp
in
xlat
in
xlat
in
jne
sbb
andl
andl
xor
add
inc
mov
cmpl
jne
pushl
push
push
push
pushl
push
call
cmpl
jb
xorl
jmp
ret
int3
int
ret
leave
pop
cs
xchg
pop
jg
test
jle
int
testl
das
xor
xor
fdivl
cmpl
xchg
aas
sbb
call
mov
iret
test
mov
in
hlt
in
iret
cmp
cmp
xor
rcl
ret
xor
sti
jecxz
jecxz
xchg
lret
xor
sar
repnz
aam
into
rcr
loopne
mul
mov
int
out
iret
loope
repz
repnz
xor
repz
fisttpll
out
in
loope
fsub
xchg
xor
in
iret
lret
enter
sbb
ret
aam
ret
mov
ret
cli
fisttpl
out
rcr
in
test
test
jmp
sarl
cld
fst
idiv
fsubr
lret
out
mov
bnd
lret
ss
int
int
aaa
fld
in
xchg
out
xchg
sar
xchg
cmp
ret
into
out
hlt
leave
rcl
ret
neg
loop
sbb
jmp
int3
xor
clc
lret
divb
loop
out
rcr
xlat
in
jmp
call
aaa
shr
int3
clc
std
div
cld
lret
cmp
hlt
ffreep
test
shl
loope
fldl
xlat
in
leave
cmp
into
loope
sarl
sub
filds
cli
int
icebp
orb
xlat
dec
into
loope
std
adc
hlt
lock
clc
into
icebp
xchg
loop
in
sub
sar
shl
into
ljmp
in
filds
fdivr
rorb
out
xor
into
sar
xor
cmc
icebp
cmp
ds
jmp
and
out
in
out
aad
iret
cmp
xlat
loop
sbb
fldl
into
lock
out
les
in
cmp
int
push
lock
shl
xor
clc
fdivr
fmuls
int3
xchg
loope
cmc
das
cmp
cmp
cld
xor
xlat
fdivr
test
test
in
loope
out
lret
mov
shl
std
fninit
out
lds
out
in
xlat
clc
jecxz
rorb
ror
jmp
aaa
in
ret
clc
aam
testb
lret
jmp
int3
xor
ljmp
testl
jmp
mov
iret
jmp
hlt
rcr
xchg
loop
fdivr
vpsrad
int
call
ljmp
jbe
add
inc
add
inc
or
or
jl
inc
add
ret
add
int3
ror
fcomp
aam
aas
idivb
adc
or
test
jle
out
jmp
cmc
hlt
stc
in
int
sbb
div
stc
aam
ftst
out
in
jmp
mov
xor
aaa
leave
out
in
into
out
filds
cmc
sub
lock
xchg
ljmp
rcl
loop
and
into
rcr
icebp
fcmovnb
or
int3
mov
icebp
fucomp
iret
aad
sub
stc
iret
fidivrs
ds
into
loop
jecxz
mov
jmp
fxch
call
test
shl
fcomp
leave
lret
repnz
repnz
jecxz
repnz
fadd
in
out
jecxz
in
ljmp
lret
fnstenv
into
xor
clc
fiaddl
idiv
enter
jecxz
mov
cmc
int
cmp
cmp
rcl
repnz
rolb
dec
loop
in
shl
in
bnd
int
cmp
mul
clc
sarb
std
in
clc
jmp
in
cli
out
shl
aam
mov
shr
clc
xor
aam
ffreep
xor
clc
mov
mov
mov
in
orl
aaa
in
repnz
fdiv
shr
leave
enter
in
mov
xchg
repz
lret
clc
std
cmp
stc
dec
jmp
in
fdivrp
std
lret
in
testb
in
cmp
inc
fucomi
sar
ret
fcmovnbe
mov
in
xchg
xchg
out
shl
xchg
out
int
enter
lock
jmp
fsubp
cli
cmp
testb
in
out
std
loop
xchg
and
out
int
out
std
aaa
lret
fcmovnu
in
out
aas
call
ljmp
mov
leave
lret
fdivs
fsubr
jmp
lret
cmp
rorl
fildl
int3
loop
xlat
cmp
xor
std
adc
cli
std
faddl
jmp
flds
mov
repnz
leave
clc
leave
cmp
shlb
aad
int
loopne
clc
flds
vpavgb
lea
cmp
xlat
int
cmp
jecxz
aas
fsubp
test
stc
ret
aad
fadd
iret
xchg
lock
rclb
cmp
std
loope
cmp
int
addl
std
lret
shr
and
jecxz
lock
leave
cmp
lock
jmp
push
sti
rol
stc
or
lock
xchg
out
test
xor
ret
in
leave
fdivr
ds
in
cmp
cli
leave
mov
xchg
std
fucomi
fcomip
loop
shlb
icebp
repz
imul
mov
sbbl
add
push
call
incl
jmp
ret
rcl
aam
ret
sarl
into
rorl
or
jle
add
cmp
rorb
cli
xchg
mov
repz
aam
aam
hlt
cmp
ss
xor
cmp
stc
faddp
cli
hlt
jmp
fiadds
and
xor
int3
aaa
cmc
idiv
loope
cli
out
in
aam
cli
fdivr
out
fcomip
xchg
int3
out
xor
jmp
in
test
cmp
in
sar
test
mul
int3
loope
repnz
int3
repz
out
aam
cmp
incb
xlat
mov
in
adc
int
aad
xor
xor
div
cmp
ljmp
out
shr
leave
mov
cli
ljmp
repnz
aad
lret
hlt
int
fiadds
in
int3
fmuls
loope
in
clc
ss
sar
leave
out
sar
loope
mul
movl
mov
repz
fsubr
ljmp
fcomp
cmp
cld
loopne
loopne
call
in
cs
in
cs
jmp
in
add
out
cmp
into
leave
out
out
lret
mov
ljmp
out
lret
cmp
fadd
jecxz
xor
ffree
sbb
lock
call
lock
aaa
ljmp
aam
frstpm(287
idivl
flds
in
loope
jmp
out
into
jmp
jmp
iret
clc
loope
fdivrl
cmp
cmc
aam
std
loop
in
out
repnz
loope
in
aad
out
out
cli
ljmp
sbb
add
xlat
sbb
cld
xchg
in
iret
std
iret
in
icebp
cmp
enter
cmp
repz
ffreep
loope
cmc
ffreep
dec
in
xchg
out
aam
aas
call
fdivr
into
int3
sti
cmp
shr
cmp
aam
decb
add
xor
out
aas
fdecstp
out
out
cmp
loopne
or
sti
in
call
int
fidivl
stc
hlt
aaa
cli
jmp
cmp
fadd
sbb
or
jecxz
into
cmp
fdivrl
fsubrp
rcl
loope
rol
ret
in
icebp
xchg
std
shr
in
xor
icebp
out
cmp
sar
hlt
clc
add
hlt
fmul
fcomi
fmulp
fisttps
addl
in
jmp
shl
orl
in
shl
fucomi
lret
jmp
into
xor
repnz
repz
sar
xrelease
cmpl
jb
jmp
cmp
jne
movl
mov
mov
mov
mov
mov
jmp
sarb
ret
enter
fldl
jge
push
aaa
psubw
add
jmp
jmp
adcb
xor
cld
ss
not
sti
clc
add
std
sti
ffree
xchg
out
call
ljmp
out
jmp
ds
clc
filds
loopne
clc
xchg
sar
in
into
in
fsub
lret
lret
sarb
xlat
in
icebp
fcos
ret
in
mov
shl
call
out
sbb
aam
mul
jmp
ljmp
cmc
rol
ffree
in
test
in
out
aad
jmp
fnstenv
int3
clc
shr
lret
aam
std
cmpb
ret
fsub
mov
aam
in
in
frndint
fcmove
repnz
fmul
repz
loop
cmc
stc
faddl
out
faddp
loop
sti
stc
cmp
cmp
cld
shl
loope
fiaddl
fimuls
icebp
xor
in
shrl
lret
cld
cmpl
cli
aad
sti
in
ljmp
in
into
xchg
imul
xor
fdivrl
in
sarb
fnstcw
cld
xchg
call
clc
fsubr
lret
out
int
lea
clc
cmc
xlat
divb
jecxz
std
shl
cld
rol
lds
shl
cmc
rcr
aaa
cmc
clc
xor
enter
rolb
aad
leave
test
test
jmp
call
out
cmc
iret
int3
cmpb
neg
xchg
out
enter
cld
xchg
xchg
xor
ljmp
std
ret
rol
fxch
mov
fdivr
out
xchg
adcb
hlt
cmp
cmp
shr
loopne
cmp
jecxz
loopne
sbb
out
iret
ret
shl
xlat
hlt
fsubr
xor
into
sub
stc
flds
rorb
in
iret
int3
cmp
cmp
repnz
loop
iret
neg
aam
fcmovnu
stc
and
leave
stc
in
into
sbb
xlat
ret
jmp
in
cli
lret
loop
fsubrp
test
std
and
ljmp
xchg
mov
in
int3
out
xor
out
xor
sar
ds
adc
rolb
sub
mov
mov
out
enter
into
cld
sar
aad
lret
rol
repz
loopne
idiv
orl
shl
ljmp
div
jmp
cld
ret
rol
lret
jmp
out
into
in
jmp
icebp
lock
cmp
rcl
sarb
stc
rol
icebp
out
aas
stc
in
xor
add
mov
lea
mov
mov
xor
add
jmp
ror
fmul
fcomp
fcmovnb
aad
jp
sbb
cmp
jg
test
jle
int3
not
stc
loop
out
in
call
sub
sarb
fcmovnb
int
xor
out
jecxz
fxch
idiv
out
shr
in
lret
rcl
fucomip
ljmp
rcr
test
xchg
xchg
out
out
ret
shl
fistpll
fldl
stc
jecxz
stc
testb
lret
int3
test
icebp
lret
into
enter
out
shr
cmp
aad
aad
in
in
call
std
out
in
stc
ljmp
cld
ret
xchg
in
mov
in
fucom
in
loope
loop
lret
int
repz
fnstsw
cmpb
test
cmp
jecxz
and
jmp
addl
aaa
cmc
icebp
cmp
fucom
stc
ds
xchg
rcr
loop
mov
mov
orb
lret
iret
ljmp
in
loopne
shl
xchg
sti
test
std
cld
cld
repnz
xchg
aam
fdivr
iret
inc
addb
aas
int
xchg
aas
jmp
out
xor
aam
loop
in
rcr
add
jmp
adcb
xchg
xor
shl
ss
sarl
mul
loope
filds
into
out
lock
jmp
int3
in
xor
fcomi
leave
aas
cli
int3
aas
xlat
out
loopne
hlt
jmp
xchg
adcb
out
call
aaa
cmp
cmp
aad
rol
jmp
sti
jmp
in
lea
div
jmp
jmp
clc
movb
fcmovbe
out
in
shr
divl
sub
in
out
into
loopne
sarl
cmp
repz
fucomp
in
int3
loope
xchg
out
xchg
cmc
aam
lock
lret
cmp
cld
ss
lret
aas
sti
ret
cmc
roll
loop
sub
icebp
lock
sub
sti
hlt
enter
fdivr
and
rcr
in
in
jecxz
jmp
out
xchg
jmp
imul
jmp
ss
out
sti
jecxz
clc
fdiv
in
jecxz
out
lret
lret
fmull
xor
cli
aad
in
fidivl
int3
cmc
fnstcw
rcl
mov
in
fisttpll
xor
xor
shl
xlat
cmp
aad
cmc
aam
fcomi
ret
in
nop
mov
lret
lock
shr
ret
leave
cmp
out
call
repz
ret
roll
fisttpl
or
xor
cmp
mov
lea
push
mov
xor
jmp
int3
int
fstp
cmp
pop
pushf
mov
push
addr16
jle
add
out
into
clc
hlt
lock
cmp
add
mov
shr
fptan
int3
hlt
lret
cmp
cmpb
jmp
aad
fistpll
rorl
test
mov
cs
jecxz
int
std
repz
loop
in
int
fldln2
icebp
loopne
test
jecxz
fsubrs
cmp
clc
jmp
sar
aam
shl
in
fisttpll
iret
rolb
fsubr
ljmp
jecxz
icebp
lock
fldz
call
test
out
ror
cli
int3
ss
call
adc
mov
xchg
mov
xchg
hlt
addb
ljmp
repnz
jecxz
shr
ljmp
fldl
loop
ret
enter
fucomp
cmp
idiv
ret
loope
fimull
nop
loopne
repnz
lret
out
imul
rcl
test
ffreep
sbb
mov
lret
xlat
fsub
clc
cmp
rcr
clc
hlt
repz
in
roll
movl
jecxz
repz
jmp
sti
xchg
fadd
stc
lret
nop
lret
std
lock
cmp
cmp
lret
stc
int3
ret
mov
adc
fucomip
call
cmc
xor
leave
int
xlat
cmp
idivl
mov
test
fcmove
lds
out
fcmovbe
rol
cmp
clc
into
clc
mov
mov
iret
idiv
in
xlat
loopne
fdivr
loope
fdivr
aad
jecxz
leave
mov
ljmp
xchg
fucomip
ret
les
test
in
sar
sar
out
fcmovne
cli
fcomip
call
out
sub
fdivrs
into
repnz
shl
loop
aas
and
mul
enter
loop
or
in
repz
ds
hlt
adc
div
ret
fucomp
ljmp
jecxz
int
nop
xor
clc
imul
icebp
pushl
jmp
repz
cmp
loope
test
ljmp
test
call
cld
lret
std
inc
into
cmp
std
ret
enter
out
adcb
int3
out
xor
leave
cmp
ljmp
sti
addl
fldl
loop
in
in
hlt
cmp
shlb
cmp
cmp
cli
loop
add
push
jmp
iret
xlat
rcl
rcr
lret
push
cmp
aad
push
cli
and
add
adc
xlat
faddl
cmc
out
out
out
leave
ror
cmp
ret
in
rcl
and
add
test
jmp
ss
aaa
iret
fdivr
in
cld
shl
clc
jmp
call
rclb
fcomp
std
lret
int
sbb
out
xchg
mov
in
test
out
icebp
out
lds
sti
xlat
fldl
repz
ret
loope
stc
fcmovbe
xchg
ror
jmp
shr
fcomi
shl
aad
enter
faddl
mov
icebp
test
das
enter
iret
cmp
idivl
aas
mov
mov
jecxz
ret
int
repnz
hlt
ss
jmp
xor
rcl
sar
loope
in
mul
mov
push
xchg
shl
aad
out
cmp
int
loopne
cmp
fiaddl
out
loopne
jecxz
fucomi
out
mov
shl
div
cmp
xor
rcl
icebp
cli
repnz
int
ficoms
nop
fabs
lds
rcr
out
xor
lret
loop
loope
cmp
std
testb
iret
leave
xor
not
xlat
jmp
jmp
cmp
fst
loopne
clc
loopne
fcmovb
jecxz
sub
xchg
out
shr
cli
xor
fcomi
roll
in
fdivr
ds
loop
frndint
xchg
lret
mov
xor
fcomi
ljmp
enter
in
idiv
sti
out
in
mov
call
xor
sub
cmc
jmp
push
testl
mov
jecxz
shl
lock
sarb
cmp
ror
icebp
rcl
add
iret
jecxz
mov
clc
mov
shr
or
leave
loope
enter
in
xor
aam
repz
clc
not
fcomip
std
mov
out
into
rorb
xor
iret
lock
std
std
aas
in
hlt
roll
les
jmp
fldln2
shr
cmp
cmp
cmp
iret
stc
div
aam
jecxz
aam
stc
lea
int3
ror
out
lret
into
icebp
out
fnstsw
fnstcw
xchg
ds
leave
testl
int
idiv
aad
cmp
shr
stc
filds
hlt
leave
loopne
loop
into
mov
loop
in
loop
cld
repz
cmp
cmc
sbb
mov
movb
and
inc
add
sti
inc
add
xor
call
fcoml
add
jmp
rol
into
xlat
rcr
fcmovne
lret
pop
xlat
adc
dec
arpl
cmp
jg
test
jle
out
and
xor
loop
out
cs
xlat
aaa
enter
fsub
xlat
loope
fcmovu
fchs
mov
fisttps
test
cli
sar
lret
jmp
in
fcomip
in
sbb
jmp
mov
out
out
mov
jmp
out
sub
stc
in
in
xor
icebp
lret
xor
clc
in
fucomi
std
loop
mov
enter
addl
repnz
std
ljmp
call
jmp
ljmp
mov
lret
aaa
ljmp
inc
stc
rcr
testl
addb
xor
fidivrs
or
loop
hlt
ret
ljmp
mov
loop
into
loop
cmp
jmp
cli
iret
cmpb
xlat
cmc
std
mov
xor
lret
call
ljmp
fidivrl
movl
lret
subb
cmp
repz
jmp
rol
cli
call
clc
cmp
adc
in
shl
xlat
shll
iret
ss
repnz
aaa
cmp
std
cld
out
jmp
lock
mov
xchg
loop
cmp
ror
icebp
ds
cld
fdivp
rcl
in
out
clc
mov
fsubr
repnz
fucomip
clc
hlt
out
das
aad
cmc
iret
jecxz
xlat
and
idiv
mov
shr
into
ss
repnz
in
int
hlt
ds
fucomi
nop
in
mov
aam
shrb
in
sarb
rolb
rcl
aad
shr
call
mov
clc
int
ret
frstpm(287
das
repnz
into
idiv
into
sar
loop
out
hlt
fucomi
std
cld
mov
ret
jmp
aam
ds
rolb
aad
fsubp
out
in
test
xchg
in
fcomip
out
into
ss
fcmove
cmp
lock
xlat
sti
jecxz
sti
sub
fmul
jmp
test
shr
in
in
aaa
cmp
std
cmc
fiaddl
xchg
leave
sub
lds
jecxz
ljmp
cmp
addl
lock
xor
clc
out
iret
iret
repz
fsubr
add
nop
xchg
lock
repz
ror
idiv
fiadds
aas
icebp
mov
test
orl
fcom
cmp
jne
jmp
enter
rcr
adc
lock
ja
sbb
jle
add
lret
icebp
sti
clc
jmp
in
cmp
jecxz
mov
mov
stc
jmp
out
xchg
icebp
fdivs
in
shr
cmp
aam
aad
aas
xor
xchg
mov
xlat
loop
mov
aas
hlt
not
fcom
fnsave
jecxz
aam
bnd
loop
sti
into
int
in
xchg
mov
hlt
ss
pushl
xlat
fsub
loop
rolb
flds
jecxz
ljmp
enter
cld
idiv
lds
mov
loope
out
repz
fcmovne
sar
xor
xlat
loopne
cmp
std
mov
mov
out
mov
out
lds
rcl
jmp
loopne
faddp
out
sbb
xchg
in
sti
out
sub
xor
sti
cmc
leave
out
aaa
aad
lock
icebp
rolb
fisttpl
test
mov
in
leave
lock
in
cld
repz
aam
repz
not
cmp
fsub
xlat
loop
loopne
xlat
xlat
lret
mov
out
ret
lret
cmp
cmpb
in
aas
ds
hlt
sbb
in
iret
into
lock
std
in
cmp
enter
fst
cmp
sbb
fldl
leave
in
out
xor
fcmovbe
int
hlt
jmp
fcomip
test
fstp
out
rcr
out
into
lret
mov
int3
xor
icebp
ss
sarb
int3
sar
fdivp
addb
jecxz
aam
repnz
shl
jmp
in
call
and
testl
jmp
das
in
rcl
out
shl
sti
loop
cmc
aad
fiadds
xlat
out
lret
or
in
out
cmp
cmp
dec
cmp
cmp
neg
xchg
cld
mov
xlat
ljmp
int3
imul
xor
ror
cmp
ljmp
in
in
clc
in
in
lock
shr
call
loop
std
ds
clc
aad
xchg
leave
idiv
mov
orl
xor
cli
cmc
cmp
shl
fcomip
shl
mov
sti
testl
shlb
aaa
call
rcr
lds
repz
aad
xchg
test
addl
jmp
out
fucomp
imul
rol
cli
cmp
test
std
int3
fstp
sti
loop
mov
icebp
fcomp
aas
leave
hlt
lret
jecxz
mov
xor
add
jmp
rcl
rcl
aad
mov
fimull
jg
test
jle
ds
addl
xchg
xchg
loopne
xor
in
shl
stc
cmp
shl
loope
ffreep
in
shl
xchg
lock
fninit
shr
mov
lock
call
out
sar
stc
cmp
xchg
jmp
loopne
lock
adc
icebp
out
fsubr
imul
aad
loop
fldz
test
ret
faddl
xchg
in
fcom
lret
out
in
ss
stc
dec
stc
faddp
addl
lret
out
in
xorb
lock
cld
ss
loop
hlt
int
call
fld
out
jecxz
or
xchg
lock
enter
ljmp
cmc
int
fcomi
leave
call
in
lret
fsubrp
out
xor
ljmp
shl
idiv
icebp
xabort
xchg
in
orl
loop
repnz
repnz
repz
aad
cli
and
fstl
xchg
out
ljmp
sarb
loopne
iret
sbb
not
ret
leave
and
ffreep
int
lea
fdivr
cmp
in
fucomi
icebp
test
stc
call
ror
add
fnstsw
cmp
rol
lock
jecxz
mov
out
mov
fcmovnu
sub
iret
in
lock
ror
out
jecxz
lock
cmp
hlt
test
fsubr
test
out
aad
test
lret
out
lret
std
ret
fsub
fimuls
sti
fcmovb
fisttpll
xchg
xchg
lret
fcmovnu
rcl
rcr
rol
int3
clc
repz
cli
loop
dec
stc
enter
xchg
fstl
int
shl
fidivs
clc
out
rol
rcr
ret
jmp
mov
out
out
ljmp
in
cmc
jmp
cmp
aam
sbb
in
testb
sti
mov
idiv
shl
xor
lret
addb
shl
icebp
faddl
in
cli
lret
loopne
icebp
aaa
xor
cmp
out
stc
jecxz
and
rcl
faddl
sti
cli
mov
cld
mov
cld
sti
lds
ss
rcr
aaa
flds
fdiv
loope
fcmove
fcmovne
cmc
hlt
shr
fidivrl
xlat
sti
cmp
jmp
xor
xlat
in
jecxz
faddp
loop
stc
lock
in
call
enter
hlt
rol
shl
out
loope
or
mov
jmp
rcl
lret
rcr
ficoms
cmp
jg
test
jle
jmp
mov
out
ret
cmp
xor
jmp
testb
and
xchg
jmp
loopne
xchg
jmp
rorb
lock
aad
loopne
fst
cld
fxch
cld
mov
mov
cmc
int3
aaa
out
in
xlat
enter
repz
fprem1
shl
ds
out
mov
fsubr
loope
iret
mov
cs
lock
ljmp
shl
xrelease
int3
fldl
fcomip
int3
clc
ret
xor
xlat
leave
int
int3
cld
xchg
fsub
ret
test
out
enter
int
out
out
ss
int3
jmp
fsub
loopne
out
lock
test
mov
lock
nop
jmp
lret
hlt
fnstsw
faddl
cli
repnz
fcomi
jecxz
leave
in
mov
into
shl
jecxz
fdivl
into
shr
sar
in
loopne
stc
fcmovnu
repz
mov
sti
or
mov
filds
aam
enter
aas
rol
aam
cmp
fcmovb
sti
fucomip
out
in
call
xor
cmp
out
into
into
aas
cli
add
cmp
ret
out
jecxz
xchg
mov
ret
repz
xor
in
ds
ljmp
rolb
ljmp
ror
clc
sub
in
lock
fcmovbe
ds
fldl
call
lret
jmp
in
aaa
icebp
cli
repnz
cmp
fadds
cld
ret
jmp
fsincos
mov
in
int3
jmp
aaa
in
jmp
icebp
fsub
std
orb
icebp
mov
mov
out
out
sar
cmp
fcmovne
in
hlt
aam
xlat
into
fdiv
xchg
sar
jecxz
loop
in
nop
enter
divb
cmp
ds
sti
fadd
out
in
rol
in
loopne
fildl
lock
int
call
cmp
clc
std
rcr
filds
xchg
nop
sbb
iret
cld
shl
in
cmp
not
aam
mov
test
in
in
fisttpll
shll
sti
xor
xor
aad
cmc
cmp
rolb
sbb
mov
xchg
loop
test
ljmp
cli
lock
icebp
loop
inc
jecxz
testb
in
ss
sub
fcmovbe
loope
test
fcomip
aad
cli
cli
fadd
test
iret
in
iret
int
mov
mov
mov
mov
mov
push
jmp
leave
ror
rcl
jecxz
in
or
or
bound
jle
add
repnz
aad
into
fsubrp
in
loop
jecxz
in
repnz
out
in
xchg
mov
out
aam
nop
aam
leave
out
jmp
in
xlat
shr
jecxz
ret
in
jecxz,pt
sub
lret
loopne
icebp
xchg
sub
shll
cli
aad
repz
aam
out
ds
out
hlt
test
out
enter
in
xchg
loop
lock
icebp
sti
fldl
cmc
les
int3
and
mov
xchg
xchg
ljmp
out
xor
testl
mov
out
out
decb
xchg
cs
aad
int
out
cld
cmp
ret
clc
xlat
cld
ljmp
jecxz
int3
xchg
out
jmp
in
iret
sar
jmp
cmp
testl
in
fcmove
mov
std
call
rol
jmp
ss
stc
xor
fildl
xchg
fdivrp
xchg
nop
sti
int
ljmp
fidivl
cmp
cmc
in
in
fcmovnb
xchg
fcmovne
sub
xchg
shl
sti
das
repnz
iret
clc
lret
rcl
fucomp
repnz
repnz
decb
clc
sti
aam
lret
in
loop
flds
aas
adc
out
enter
out
mov
in
not
cs
rolb
cld
mov
out
cli
in
loop
stc
leave
jmp
xchg
shl
in
cmp
int
ds
repnz
jecxz
vpsubsw
loop
jecxz
in
xchg
in
in
hlt
ss
lret
rol
or
fcomp
stc
mov
in
icebp
sti
xchg
repnz
ror
fmulp
imul
cmp
shl
out
mov
cmc
out
leave
mov
xchg
std
into
xchg
out
xor
cmp
lret
testl
hlt
ds
int3
fsubp
sub
vmovntdq
rolb
cmpb
fnstcw
std
stc
xchg
out
in
mov
out
push
shl
icebp
lret
in
ss
aad
int3
fcmovu
fneni(8087
call
int3
decl
mov
xor
int
repnz
loope
xor
ds
ret
cmp
in
xchg
rolb
loop
div
icebp
out
int3
mul
lock
sbb
repnz
test
not
clc
adc
xchg
test
in
lret
rcr
cmp
mov
testb
in
xchg
shll
xor
xor
test
sti
int
pop
jmp
into
iret
xlat
xlat
into
xlat
fwait
in
mov
vmread
test
jle
clc
out
enter
in
fsubr
mov
mov
call
std
cmp
rcl
loop
sti
ret
orl
ss
cmp
repz
aam
fnstenv
and
repz
fisttps
loope
out
xchg
jecxz
out
xlat
in
out
enter
clc
into
lock
out
ret
mov
xchg
ljmp
hlt
iret
ss
ror
icebp
push
lock
fmuls
leave
aaa
xor
aam
xor
loopne
out
cmpb
fnsetpm(287
fsub
std
cmp
repnz
loop
xchg
lock
loopne
lret
in
cmp
cmp
fcmovne
hlt
xrelease
cmp
jecxz
jecxz
mov
loop
fimuls
jecxz
icebp
repz
fmul
call
aam
iret
in
idiv
jecxz
clc
jmp
loopne
loope
in
fcmovu
cmp
cmp
repz
clc
loop
rorb
orb
aam
lret
aas
addl
aad
fmuls
test
and
in
out
fnstcw
stc
jecxz
jecxz
cmp
out
clc
call
loop
ret
xor
xor
jmp
leave
aad
fnstcw
icebp
jmp
mov
in
mov
lret
sti
out
xor
repnz
ret
div
int3
mov
movb
shr
shr
ljmp
xor
shl
clc
fimuls
ljmp
orl
cmp
repz
jmp
lock
ffree
test
in
mov
movl
in
fdivr
lock
fcmovu
addb
ds
ljmp
call
xor
xlat
fdiv
rcl
aam
xlat
in
xchg
jmp
in
hlt
loope
test
in
into
sti
repz
lret
fcmovnbe
repnz
incb
out
ret
fiadds
das
sub
aaa
cmp
shl
fdivr
repz
sti
icebp
call
jmp
fcmovu
jmp
call
cmp
neg
cld
cmc
fucom
aaa
cmc
fnstcw
sti
ret
xchg
loop
sbb
stc
out
icebp
addl
lock
xlat
cli
cmp
ret
mov
fcmovb
in
out
out
xchg
ljmp
aad
rcr
xor
aam
in
std
hlt
fld
sti
addb
call
inc
or
lea
jmp
leave
aad
xlat
fcmovnu
ret
pop
lock
dec
jo
mov
test
jle
fstp
mov
mov
ret
in
cmc
divb
repnz
cmp
xlat
loopne
xchg
idivl
std
test
mov
fldl
jmp
repnz
cmp
icebp
in
sti
sti
clc
fld
fmul
jmp
aam
out
lock
stc
jmp
hlt
int
out
in
and
std
ljmp
fdivrp
jmp
iret
cmp
fcomip
shl
jecxz
rcl
lock
loopne
decb
call
in
hlt
hlt
aaa
call
xchg
fdivr
jmp
ftst
out
xrelease
jmp
loope
cmp
out
shl
xchg
add
in
mov
loopne
xor
aaa
fdivs
sar
loop
fst
int
cld
call
or
rcr
mov
in
nop
sarl
cmp
in
aad
shll
fucomip
icebp
into
out
mov
loop
jmp
iret
hlt
loopne
xor
ss
div
hlt
cli
test
in
incl
orb
lock
rcl
ljmp
icebp
out
loopne
and
ret
fucomi
test
test
sub
cs
shrl
leave
hlt
xor
into
cmp
faddp
ret
enter
xchg
aaa
out
in
lret
jmp
icebp
sub
fdivr
call
mov
out
loopne
lret
fprem1
shr
out
ljmp
out
xchg
orb
out
sub
idiv
int3
repnz
repz
out
in
cmp
call
xchg
test
xchg
aam
int
sarb
sti
mov
lock
aas
icebp
in
shl
cli
mov
xchg
leave
xchg
fsubp
mov
cli
aam
xor
loopne
cld
xlat
fistpll
test
cld
xlat
mov
or
loop
out
out
in
shr
lock
cld
mul
cmp
cmc
int
rol
cld
jmp
lret
ljmp
loop
sub
jmp
fsubrp
lret
in
in
icebp
add
xchg
leave
sti
std
into
jecxz
loopne
rorb
aad
stc
jmp
cmp
out
test
repz
stc
enter
loop
xchg
xchg
out
out
cs
ljmp
cmp
out
aam
neg
roll
int
lret
std
mov
mov
jecxz
out
ljmp
int3
cli
rcr
xchg
xrelease
out
in
cmp
jne
mov
pop
jmp
ror
ret
int
movsb
inc
push
xchg
mov
jg
test
jle
fsub
lret
ds
shl
in
xlat
xchg
addl
nop
bnd
xor
out
cli
in
lret
xor
jmp
xlat
rcr
shr
leave
fmuls
lock
int3
cmp
cmp
idiv
in
cmp
sarb
repz
loope
test
loop
mov
shl
clc
leave
cmc
out
xorl
loopne
shr
ffreep
ftst
fucom
sub
in
sub
mov
xlat
cmc
loopne
into
xlat
loope
cmp
aam
mov
jmp
in
loop
out
ss
xlat
stc
jmp
aam
ds
loope
loopne
mov
repz
in
les
aad
rcl
into
out
fpatan
add
cld
sbb
ftst
repnz
out
in
xor
xor
fdiv
clc
loope
add
lds
cld
out
in
call
sarl
stc
int
rol
test
mov
cmp
xchg
ljmp
sti
enter
icebp
rcl
sarb
faddp
addl
mov
mov
out
cs
shll
loopne
aad
cli
repnz
fistpll
out
xchg
fsub
rolb
repnz
cmc
lret
sbb
cmc
fucom
fucomi
adc
aad
dec
int
loope
std
lret
fsubr
cmc
jmp
fcmovbe
out
cmp
lret
in
idiv
stc
cld
shr
ret
incb
das
xor
cmp
das
cmp
cmp
cmp
addb
ret
ret
in
fisttpl
icebp
shrl
stc
cmp
loope
flds
aam
jmp
cmp
fsubrp
out
xor
jmp
repz
iret
hlt
out
aad
cli
aas
ret
fisttpl
xchg
mov
sti
leave
ss
ljmp
out
repz
jecxz
jmp
in
mov
mov
ljmp
sti
stc
repnz
xlat
clc
aas
adc
cmp
roll
enter
xchg
cmc
xlat
ret
not
ds
cld
fcomip
rcr
icebp
sti
ret
in
mul
loop
xchg
loopne
hlt
rcl
xor
shl
hlt
xor
ss
test
icebp
lret
loop
std
jecxz
jmp
and
out
out
cld
aad
hlt
test
ret
aas
test
mul
jecxz
ror
sbb
xchg
sti
xchg
nop
cmc
xlat
shl
cmp
lret
clc
xor
jmp
ret
int3
rcl
ret
fldl
fwait
lret
mov
jg
test
jle
iret
clc
loope
ret
mov
lock
int3
mov
fbstp
int
xor
fidivrl
cmp
enter
repnz
clc
decl
int
test
in
out
out
int
fcmovnu
std
or
out
fcomip
aam
neg
cli
cmc
loop
fstp
fucomip
std
lret
xchg
in
hlt
int
cmp
idivb
int3
frndint
shr
rol
xchg
fldl
jmp
jmp
ror
hlt
cmp
jmp
sarl
in
ret
out
int
in
loop
xchg
in
xor
fcmove
enter
out
cmp
cmp
rcr
rol
in
int
loopne
orl
in
iret
cmp
cmp
cmc
cmc
ret
rol
jecxz
in
sub
test
cs
fdivrl
repnz
cmp
int3
aaa
test
ffreep
cld
fcomp
adcl
xlat
cmp
out
in
repz
into
roll
fmulp
fdivr
lret
test
call
ljmp
repnz
ret
xchg
ljmp
aaa
fldcw
sti
loopne
xor
ljmp
stc
stc
icebp
repnz
jmp
fnstsw
in
iret
cld
out
iret
enter
fadds
into
jmp
xor
into
shr
jmp
cli
rolb
leave
addl
in
fdivr
std
into
test
jecxz
jmp
cli
fildl
out
xor
test
fmulp
int
aaa
shl
std
rcr
shl
hlt
decb
fimuls
in
repz
cmp
cmp
loope
out
jecxz,pt
fildl
stc
stc
stc
fildl
pushl
jecxz
test
aas
fdivrl
aam
inc
loope
out
ret
lret
in
test
int3
mov
repz
call
sar
cmp
cmp
loop
test
sti
lret
out
jmp
int3
out
call
cmp
hlt
fnstsw
jecxz
add
fdivr
rcr
incl
ret
hlt
fxch
repnz
cmp
out
ret
test
fst
jmp
leave
stc
icebp
or
enter
in
icebp
jmp
loope
xlat
fsubrp
stc
out
jmp
ret
loopne
mov
enter
icebp
lret
lret
xlat
cmp
clc
cmc
cmp
fcmovbe
les
add
jmp
fadd
aam
fst
fcoms
sbb
jg
xchg
mov
xor
jg
test
jle
adc
icebp
lret
out
ss
ret
stc
lock
lret
cmp
ffree
repnz
rolb
jecxz
nop
in
repz
xor
in
fbstp
iret
sarl
rcr
aas
loope
std
xchg
aam
cmpb
repz
cs
out
incb
xlat
mov
loope
icebp
xchg
std
mov
ljmp
cmp
out
sti
stc
leave
int
xchg
leave
in
sub
xor
int3
cmp
sti
lret
aas
aaa
icebp
lret
add
incb
test
test
cmc
div
int3
out
into
aaa
test
stc
sub
fyl2xp1
repz
sti
sti
fcmovb
leave
xchg
in
and
xlat
xor
out
in
in
out
shr
loope
out
sbb
in
test
xchg
in
mov
lret
jmp
leave
cmp
loopne
repz
repnz
add
std
leave
fdivr
xchg
leave
hlt
out
shll
lret
rcr
stc
ds
cmp
out
loop
jmp
fabs
loopne
nop
call
ljmp
iret
cli
out
sti
in
icebp
cld
clc
ljmp
loopne
inc
mov
fcom
jmp
fistpll
sbb
loop
rcl
enter
mov
shr
loopne
shl
xchg
loop
out
jmp
aaa
cld
cld
int
rcr
test
lds
in
xchg
icebp
adc
jecxz
xor
cmp
cmp
repnz
out
ror
fdiv
xchg
in
enter
jmp
jmp
lret
aas
fcom
cmp
cmp
sar
ret
in
jecxz
fdiv
mov
aad
ror
cmp
lock
aaa
in
cld
ret
hlt
shl
clc
jmp
fimull
xlat
sub
clc
imul
repnz
out
hlt
cmp
loopne
out
imul
call
cld
xchg
in
cmc
icebp
div
enter
neg
cmp
fiadds
testl
xchg
shl
icebp
repnz
fdivrp
cmp
jmp
rol
test
loope
adc
cli
enter
in
sub
iret
nop
hlt
lret
in
fcmovnbe
hlt
loopne
fdivrs
out
hlt
rcr
ret
in
test
jmp
stc
fld
ss
lret
shll
ret
loopne
mov
lds
ljmp
sar
dec
cmp
in
aam
ret
rol
out
call
xchg
and
leave
ret
push
mov
sub
xorl
jmp
int
int
leave
push
hlt
cltd
loope
mov
ja
xor
jle
add
loop
sti
cmp
fcompp
cld
fcmovu
sar
aaa
clc
fcom
in
decl
xchg
rcll
enter
out
iret
rcl
aam
cli
jecxz
call
fneni(8087
ljmp
out
xor
clc
rcr
cmp
ffree
fsub
sti
int3
clc
mov
orb
ret
in
ljmp
sar
xchg
cmc
repnz
enter
int3
out
roll
out
aaa
ret
std
test
cld
int3
shl
xchg
mov
popl
int
iret
out
hlt
shl
cld
iret
fabs
shr
cmp
call
ficoms
in
repz
stc
repz
repnz
out
fprem
vpsubusb
mov
loop
lock
divb
fdivr
sbb
cmc
repnz
clc
std
test
xlat
in
loop
lret
fsubr
lock
aas
out
aam
std
ds
test
and
repnz
fsubp
loope
std
jmp
out
int3
fdivr
iret
std
cmp
lret
filds
loope
test
stc
xor
jmp
jmp
out
clc
repz
repz
aam
cmpb
cmp
sti
dec
sbb
mov
adcl
clc
xor
ds
test
fsubr
nop
jmp
rorb
call
rcr
cmp
fcom
out
loopne
cmc
out
out
jecxz
mov
mov
jmp
xor
int3
idiv
hlt
cmp
in
lock
jmp
fmull
jecxz
out
shr
fcom
ljmp
loope
cmp
rcl
rcr
faddp
xchg
int3
lret
into
xchg
or
shll
into
cmp
in
sarb
clc
shr
repz
xchg
adc
jmp
std
lret
out
int3
clc
lret
rcr
xlat
cmp
cmp
enter
jmp
out
mov
xchg
icebp
lock
cli
loopne
repz
repz
hlt
sar
stc
in
xchg
in
mov
in
out
cmp
aaa
cmp
in
aaa
cli
into
stc
sar
cmpl
aad
stc
jmp
call
or
mov
add
mov
mov
incl
jmp
int
ret
rol
fcmovnu
jecxz,pn
nop
add
jg
fiaddl
jle
roll
sub
cld
hlt
shl
incb
aad
inc
cmc
ret
loopne
test
lock
std
xchg
aam
rcl
lock
hlt
xlat
ss
out
aad
out
jecxz
sub
loope
test
xchg
xchg
loope
mul
out
lret
jmp
cli
loop
in
fcmove
test
fcomip
loope
nop
stc
cli
rolb
aam
xor
aaa
cmp
sar
xor
cmp
in
in
ljmp
neg
icebp
shll
lds
sarl
rcr
roll
idiv
fsub
test
int
sti
out
into
rorb
ss
sar
in
out
cmc
mov
xchg
fsub
repnz
repz
idivl
out
enter
out
stc
test
lret
addl
lea
jmp
cmp
repnz
jecxz
les
sarb
xchg
out
in
out
xchg
int
rcr
cmp
repz
cli
ljmp
nop
cmp
repz
xor
call
icebp
rcl
ret
call
mov
mov
fisttps
rol
aam
cmp
idiv
add
hlt
div
xlat
mov
ljmp
jecxz
iret
fcmovbe
leave
das
cmp
rcl
sbb
iret
fneni(8087
mov
idiv
fstp
orl
icebp
cmc
out
aad
idivl
leave
leave
rcl
aam
rcl
test
sar
stc
ljmp
int
out
jmp
jecxz
enter
cmp
lock
sar
fstp
out
test
mov
rcl
stc
das
xor
aam
cmp
adc
sbb
sar
aad
in
fsubrp
loopne
in
xchg
out
aaa
enter
lock
not
test
fcmovnb
cmp
mov
fstp
cli
ljmp
repz
idivb
jmp
fadds
aam
int
jmp
icebp
in
cmc
in
xor
iret
stc
in
cmp
jmp
rol
cld
mov
test
fdivr
repnz
jmp
into
test
int
aas
cmp
cmp
lock
lock
loop
shl
incb
and
loopne
test
inc
add
add
cli
xor
mov
add
jmp
int
ret
aam
fstp
fstl
fmull
shrl
jle
add
lock
xchg
out
mov
cmc
into
enter
sbb
not
loop
std
mov
loopne
fdivr
mov
adcb
int3
sar
stc
cli
call
aas
roll
hlt
in
test
xchg
out
fiadds
out
rcl
in
fcmovnbe
adc
loopne
rorl
xlat
dec
dec
jmp
test
in
out
cmc
loopne
ffree
out
ret
shr
fisttpl
enter
shl
xor
ret
shr
fldpi
fsubr
lret
clc
test
into
fnsetpm(287
jecxz
enter
mov
rol
aaa
in
in
ds
aam
addl
in
int3
mov
xchg
adcb
cmp
enter
icebp
cmp
in
test
cmp
clc
shr
out
jmp
jmp
loop
enter
int3
int
into
ret
rolb
lds
mov
xor
shl
stc
xor
lret
leave
ret
fdivr
fabs
ret
stc
addb
lret
out
das
out
loop
cmp
ss
call
addl
xchg
xchg
call
icebp
out
icebp
aam
sti
ljmp
cmp
stc
clc
leave
lret
jecxz
lret
std
xorl
std
sar
cmp
push
cmp
and
in
in
test
xchg
div
les
out
aad
out
into
hlt
ljmp
inc
mov
cld
call
repz
xchg
loop
cmp
xor
call
fcmovnbe
hlt
repnz
into
iret
in
out
or
in
out
leave
lock
sar
cli
xlat
int3
cmp
jmp
icebp
ds
neg
test
ljmp
loope
cmp
fsub
aam
ds
cli
xlat
clc
ds
in
sar
leave
loop
cld
repnz
ljmp
jecxz
call
int
aad
into
cmp
cmc
in
out
call
xchg
xor
xor
incl
out
hlt
in
loope
mov
xlat
ljmp
into
into
nop
out
jmp
xor
xor
xor
fdivrl
aam
fldl
fmuls
or
or
mov
xor
mov
movzwl
or
mov
add
mov
mov
decl
xor
add
sub
mov
xor
add
adc
jmp
rcl
rcl
dec
mov
testb
jg
fiaddl
jle
enter
clc
decl
in
sub
aaa
int3
aaa
jmp
in
in
sbb
jmp
enter
xchg
loope
xchg
inc
shl
aad
cli
fcmovne
rcl
ss
clc
hlt
fstp
out
stc
xchg
orl
leave
lret
imul
lock
iret
out
sbb
loopne
lea
mov
jecxz
ret
cmp
call
faddl
aad
sti
mul
mov
out
xchg
leave
in
adc
das
cmc
aad
sarl
in
repnz
aam
jmp
loop
into
icebp
cli
int
fsubrp
loopne
shlb
vshufps
ds
shl
aad
fnstcw
repz
aad
mov
std
rorl
cmp
int
fdivrl
std
stc
cmp
loopne
fdivr
in
call
leave
icebp
shr
rorb
jmp
ss
icebp
shr
ret
in
xlat
loopne
mov
jmp
xchg
repnz
shl
ror
cmp
out
fcmovnu
rol
jmp
cld
lea
xor
sar
fadds
sti
ffreep
cld
test
loop
orb
sti
cs
aam
cmp
ljmp
inc
leave
or
in
aad
sub
in
fdivl
cmc
out
aas
loopne
cmp
loope
in
loopne
mov
in
ficoml
int3
out
out
in
out
lock
cmp
fmulp
jecxz
aam
leave
lret
in
call
cs
sar
cmp
aaa
fmulp
rcl
iret
out
clc
jmp
ret
jmp
into
int3
out
shr
lret
xlat
clc
fcomi
div
ds
repnz
xchg
mov
ljmp
rorb
ljmp
in
div
cmp
xlat
adc
loopne
jmp
lock
call
jmp
sarb
lret
loope
jecxz
ret
fisttpll
fildl
sub
in
lret
hlt
cmp
iret
cld
aad
aam
sar
aam
add
ljmp
jecxz
out
shll
int
lock
fcmove
hlt
movl
xor
or
sub
jmp
ror
rcr
ror
js
cmp
jg,pt
fiaddl
jle
fiadds
test
lea
rcl
xor
out
lret
ss
sti
shr
ds
ret
shl
rcl
addb
int3
sti
shl
loop
ss
xor
rol
int3
aas
fistpll
sar
aas
ret
shl
jecxz
fstp
in
in
and
lret
icebp
enter
aam
fdiv
hlt
leave
lret
cmc
and
repnz
jecxz
in
out
mov
out
in
xor
jmp
xor
lret
loope
cmp
xlat
loop
rol
jmp
rorl
jecxz
shl
shl
cmp
ss
aad
out
aam
in
jecxz
testl
xchg
mov
sub
cli
cld
ror
int
lock
aad
in
std
incb
mov
nop
hlt
test
cli
cmp
ss
lock
cmp
filds
into
jecxz
jmp
xor
xor
ss
ret
sti
cli
in
xchg
cmc
loop
loop
sti
mov
lret
xchg
hlt
aaa
aaa
out
rcr
iret
cmpb
iret
or
std
jecxz
mov
mov
stc
std
loop
mov
xor
sub
jmp
sarb
stc
fdivrp
ds
enter
in
test
aad
in
in
out
int
aad
jmp
test
sti
loope
loop
out
out
mov
loope
into
cmc
ss
xlat
repz
aas
xlat
mul
shl
clc
test
out
into
filds
ljmp
ljmp
jmp
jmp
lock
lret
adcl
clc
sarb
aas
rcl
and
xchg
test
in
cli
jmp
or
cli
int
cmp
stc
cmc
fincstp
loopne
fsubp
leave
xchg
lret
test
in
call
int3
int
iret
leave
cmp
repnz
out
fscale
cmp
in
xlat
out
xlat
in
xchg
jmp
rcl
pop
cmc
fsubr
cmp
fdivl
faddl
fucomip
ljmp
out
lock
aad
repz
icebp
fxch
rcl
xchg
cmp
mov
faddp
lock
addl
cmc
fsubrp
hlt
icebp
iret
movl
or
movl
movzbl
xor
movl
mov
add
mov
movl
movl
movl
adcl
mov
mov
sub
xor
mov
addl
jmp
lret
aas
ret
aad
fldenv
push
aam
stos
sarb
add
int
std
xchg
xchg
cmp
cmc
cld
stc
xchg
int3
mov
leave
aaa
ljmp
sarb
hlt
rolb
in
mov
mov
lret
cmp
in
cs
cmc
xor
cmp
rol
xchg
fisttpll
fcomip
bnd
lret
stc
std
repnz
aas
shl
ret
fdiv
stc
mov
in
fucomi
mov
mov
int3
xor
aam
in
cmp
repz
lock
leave
cld
cli
mov
aad
lret
out
out
in
cmp
hlt
sbb
test
mov
dec
icebp
nop
fimuls
out
out
into
aaa
ljmp
fcmovu
sar
xlat
ret
cmc
in
dec
jecxz
jecxz
xchg
mul
jmp
les
cld
xlat
fnsave
aas
dec
loopne
div
xchg
fucomi
cld
ret
in
in
lret
jmp
std
sti
sti
cmp
loopne
cmc
aam
sub
add
lret
mov
iret
shlb
fidivl
cmp
cmc
cmp
fdivrs
in
jecxz
loope
call
int
stc
lret
nop
lea
cli
repnz
hlt
cmc
idivl
std
xlat
fcomp
or
decl
in
sti
fucomp
ljmp
into
out
ljmp
int
test
in
out
loope
fmul
mov
jmp
aaa
or
aam
and
rcr
cmc
xlat
mov
mov
movb
sub
ljmp
cld
ret
cmp
repnz
enter
sarb
iret
test
cmp
fmulp
loopne
test
cld
xchg
out
xchg
xor
xor
out
fldpi
ljmp
in
ret
clc
lret
enter
enter
clc
in
std
jmp
sti
fsubrp
loop
test
lock
loop
cli
enter
loope
nop
addl
ss
iret
call
ds
out
out
addl
not
in
in
xlat
cmp
rol
cmp
add
mov
rol
aad
out
call
mov
aam
fdivl
add
movl
cmp
movl
je
push
movl
jmp
mov
mov
andl
sub
orl
mov
xor
add
jmp
rcl
lret
fcmovnbe
lods
pop
mov
push
push
ret
jg
fiaddl
jle
jmp
fadd
cmp
rcr
mov
sub
icebp
loop
out
rcl
ljmp
into
cmp
shlb
loope
fcomip
fadds
faddl
into
out
std
shr
cmc
cmp
lret
into
icebp
test
ljmp
mov
mov
aad
cli
ss
jmp
stc
repnz
loopne
rcl
out
ljmp
fiaddl
fsubr
xor
in
lock
rcr
cmp
fnstenv
loope
fprem1
fsubrp
fucomi
mov
lea
lret
fstpt
loopne
fdivrs
shl
stc
shl
xchg
faddl
fldl
inc
hlt
divl
aaa
xor
stc
shr
in
test
idiv
call
in
lds
mov
fldl
jecxz
repnz
dec
sarb
fscale
call
jmp
fdivr
fisttpll
rol
clc
aam
clc
xor
lock
test
int3
lret
xchg
iret
lret
mul
repz
clc
cmp
fidivrl
icebp
xor
loopne
call
jmp
xchg
int3
ljmp
lock
cs
fcomp
stc
lock
icebp
out
repnz
in
sti
mov
in
cli
mov
repz
jmp
out
int
fxch
fptan
test
in
fucomp
fists
cmc
xor
fsubr
sar
iret
hlt
ret
aas
sar
fadd
in
mov
jmp
xor
shr
cmc
jmp
fdiv
lret
out
in
rcl
push
clc
cli
call
xchg
aam
xor
in
repnz
fdiv
loopne
out
xlat
xchg
ret
dec
in
loope
out
out
in
jecxz
xchg
cmc
jmp
int3
sti
in
out
in
repnz
aas
cmp
aam
in
std
cmp
mov
int3
cmp
sbb
out
jmp
aam
sti
clc
ljmp
jmp
loope
stc
test
xchg
addb
jmp
xor
cld
mul
xchg
test
mov
leave
mov
or
sub
xor
fdivs
cmp
idivb
out
std
shl
fcomp
xor
mov
loop
nop
adc
ljmp
sarl
cli
jmp
fcom
rcr
fstp
fnstsw
fmull
stos
sub
jle
add
aaa
enter
loope
aas
out
xlat
iret
clc
aad
ret
std
sti
hlt
mov
rolb
repnz
cmp
cli
aaa
leave
aam
repz
fadd
cmp
xchg
xchg
nop
jecxz
rol
les
in
repnz
sub
in
lock
in
fdivr
cli
lock
shl
repnz
cli
cmp
int
repz
loope
aam
mov
out
shl
fldl
out
fcmovne
jmp
clc
xlat
icebp
std
out
ret
jmp
out
cli
xchg
aad
shl
cld
div
out
repz
fcom
aam
imul
std
or
int
mov
jmp
xor
out
iret
aas
fcmovnb
fcmovne
cmp
lds
out
jmp
loop
ffreep
vcvttpd2dq
cmp
ds
rol
hlt
aad
shr
testb
mov
subl
in
sti
fsub
lock
ret
xor
movb
sbb
lock
cmp
out
out
aad
in
hlt
shl
cmp
out
lret
std
std
ljmp
cs
dec
and
ret
fadds
in
xchg
xchg
repnz
sub
fcomi
cmp
cld
lock
div
out
mov
out
addl
repz
aad
cld
fcmovnbe
loope
roll
lret
xlat
cld
jmp
xchg
loopne
into
aad
sti
icebp
push
icebp
sarl
add
sti
testl
int3
in
int
xlat
cli
cmp
in
xlat
in
cmp
sar
xchg
leave
xlat
out
shr
in
xchg
test
xor
cmp
shl
ds
in
fdivp
faddl
push
shl
xor
lds
in
out
sarl
idivl
shl
cmp
leave
fcmovnu
into
jmp
xchg
out
iret
hlt
out
cld
jmp
fcomp
out
vpsadbw
mov
fucom
fimull
xor
ss
enter
std
aad
fucomp
lds
fadd
repnz
out
in
shl
lock
xorb
add
movl
cmpl
je
cmpl
jne
push
push
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
adc
mov
jmp
ror
aam
frstor
rcll
cmp
jg
fiaddl
jle
shll
ljmp
shr
loope
test
repnz
loope
xchg
in
rclb
icebp
xor
hlt
aam
out
std
stc
aad
fdivr
rol
orl
fucomp
loopne
and
into
shl
call
fnsave
cld
fsub
jecxz
test
repz
decb
cld
loopne
xor
in
fcmovu
xlat
fdivr
idivb
cli
aas
aam
loope
clc
addb
xchg
fdivrp
into
ret
rcl
fdiv
mov
idiv
test
lret
ljmp
fdiv
cmp
aaa
push
ljmp
lds
int
mov
xchg
iret
xor
fsubr
idivb
xlat
rcr
fdiv
std
fldl
in
in
mov
loop
loop
fmul
fucomi
cmp
call
cmpb
in
fst
frndint
and
xchg
cli
xor
cmp
fdivrp
clc
shl
in
jmp
mov
out
lret
repz
out
jecxz
idivl
std
stc
int3
lret
std
sarb
test
icebp
test
sub
icebp
sub
sti
cmc
xor
loope
sar
xlat
into
hlt
test
mov
xlat
jmp
fucom
in
nop
adcb
xor
sar
fstp
into
in
fnstsw
fcmovbe
call
loope
fabs
orb
sub
shl
stc
xor
enter
sbb
ret
xor
mov
cld
fstl
jecxz
aam
in
sti
ds
fdivr
roll
cli
loop
fucom
out
fsubr
into
in
orl
into
xor
sarb
out
out
xor
loop
sbb
decl
in
into
into
imul
aaa
aad
add
shl
shl
fimuls
loope
lock
lock
stc
ljmp
and
fcomp
loop
xchg
in
out
fld
addl
stc
enter
loope
in
jmp
xchg
mov
icebp
sub
xor
lret
iret
out
xor
loope
rcr
in
fimuls
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
push
call
cmpl
jne
xor
add
inc
mov
jmp
xor
xor
xor
add
adcl
add
imul
mov
or
mov
sbb
mov
jmp
rol
aam
aad
aad
xchg
mov
add
lahf
sbb
jg
fiaddl
jle
xor
xchg
iret
hlt
aaa
ljmp
loop
jmp
aad
lock
std
int
repz
xor
ljmp
lret
cmp
out
adc
test
rcll
das
cmc
rcr
fcmovbe
ss
idiv
ljmp
repz
or
out
xchg
cli
xchg
lret
and
stc
hlt
in
std
cmp
cli
out
fmul
jmp
lea
leave
in
in
xchg
int3
int3
in
cld
in
xor
imul
sarb
sar
addb
in
mov
in
mov
mov
jmp
xor
ret
in
int
enter
rcl
xchg
incl
sti
in
fcmovnu
mov
xchg
mov
fxch
in
cld
jmp
aam
out
fucom
out
loop
jmp
rolb
aaa
ror
les
call
out
out
loopne
lock
loopne
out
out
loop
std
test
not
stc
loop
xor
int3
shr
fstp
std
cmp
clc
add
lret
fisttpl
sub
rol
aad
in
aam
out
stc
xor
decb
mov
mov
int
in
xchg
out
lret
in
aas
rolb
icebp
std
incl
les
jecxz
mov
hlt
xor
cs
cmp
xlat
int
testb
mov
lret
jmp
sti
lock
sarb
sti
cmp
out
shr
aad
loopne
repz
cmp
fucom
fst
leave
enter
shr
lock
aaa
in
fdivr
stc
out
cmp
ret
shl
hlt
aas
clc
ficoms
out
ss
in
rcl
xor
xlat
adc
test
ret
int
lock
and
jmp
ret
in
jmp
cmp
in
loopne
mov
test
mov
out
cmc
leave
enter
ljmp
stc
sub
sub
out
lret
int
fdivrl
loopne
ss
inc
cmp
mov
loop
fsubr
repnz
out
jmp
fstp
aam
loope
ret
icebp
mov
int3
cli
sub
cmp
movl
jmp
rcl
ret
fucomp
insb
fstps
cmp
lea
int3
jg
fiaddl
jle
cli
lret
lock
in
icebp
xor
shl
sarb
repnz
fadd
idiv
sarb
fst
hlt
enter
in
out
loopne
xchg
xor
cmp
sti
fcmovbe
addl
lret
leave
orb
in
cmp
ss
sarl
cmp
in
test
repz
fdivp
out
loopne
test
cmc
lret
xlat
repz
cmp
fdivrs
mov
enter
test
test
shr
call
cli
aas
icebp
adc
ret
fdivp
mov
aam
loopne
das
cmp
shl
iret
in
int
test
hlt
loopne
out
fadd
out
xchg
dec
mov
aaa
cs
clc
call
fcomp
cli
call
in
out
fmul
sub
mov
in
sub
aam
cmp
aas
fdiv
cmp
mov
orl
aaa
cmc
cmp
out
test
sti
aam
std
lret
out
cld
xchg
std
mov
lret
cmc
sarl
test
in
rcr
cmc
test
lret
int
repz
icebp
cs
xor
cmp
jmp
out
in
stc
shl
lret
out
xchg
mov
loopne
lret
stc
sub
rcl
int
aaa
cli
sar
loope
cmp
test
addl
test
loopne
hlt
cmc
not
shl
repnz
clc
shl
std
loopne
call
mov
bnd
loopne
xor
cmp
cld
out
cmp
std
stc
faddl
sti
loop
jecxz
sti
repnz
stc
lret
fiaddl
mov
cmp
mov
icebp
sub
stc
jmp
cld
cmc
std
aas
lock
loope
clc
sar
fmull
xor
in
xchg
lret
fcmovne
icebp
shr
jmp
lret
in
inc
loopne
rolb
sti
mov
adc
xor
ljmp
repnz
ret
loopne
out
int3
fisttps
div
in
ss
in
out
fdivr
cmc
loope
cmp
xchg
std
cli
mov
xchg
add
movl
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
mov
orl
xor
add
movl
jmp
mov
notl
mov
xor
xor
add
add
andl
mov
inc
mov
cmpl
jne
push
push
push
pushl
call
cmpl
jb
sub
add
add
imul
jmp
into
ret
rcl
aad
aad
push
pop
movsl
and
push
into
jg
fiaddl
jle
les
fisttpl
shr
mov
jmp
fnstsw
adc
xchg
sti
fcmovbe
vpor
cld
iret
out
mov
jmp
cmc
test
sar
lret
loope
xor
add
jmp
jmp
repz
shl
cmp
rcl
aam
fcmovu
cmp
ret
loop
aad
std
div
sub
stc
and
shr
xchg
aam
shlb
cmp
aam
aad
test
out
fdiv
cmc
repnz
cmp
call
loopne
cmc
iret
xor
mov
xchg
test
xchg
jmp
cs
icebp
ror
test
stc
fcmovbe
orl
mov
ljmp
fmul
out
fmul
cld
shl
out
stc
loope
out
out
jecxz
rol
xchg
xchg
test
loopne
clc
icebp
int
icebp
fucomi
cmp
aam
aas
sbb
aad
les
call
out
shll
shrb
fmul
sar
loopne
cmp
hlt
rcl
stc
stc
clc
lret
xchg
xor
cmc
shr
test
xlat
clc
lock
in
xchg
repz
not
mov
lea
in
not
fucom
jmp
fdiv
repnz
jecxz
or
cli
clc
ljmp
repz
stc
cmc
lret
fcmovne
flds
sti
test
mov
mov
fmulp
cmc
xchg
ret
sarb
out
xlat
fucomip
hlt
sarb
cmp
loope
out
in
mov
jecxz
test
sbb
fadd
aam
int3
cmc
in
cmp
fdivrs
std
sti
test
jmp
out
sti
lock
xchg
int
xchg
out
in
ljmp
int
ds
xchg
loopne
mov
hlt
and
int
lret
sti
lock
fucomp
in
int
jecxz
iret
ljmp
rol
rcr
lret
jmp
int
loope
test
enter
cmc
int3
repz
fistpll
ret
incb
ljmp
out
in
int
aam
xlat
ret
call
cmp
iret
vpmaxub
jecxz
out
fmuls
ficoms
xor
ljmp
jge
add
jmp
rcl
aad
loop
pop
sbb
jg
dec
sarl
fiaddl
jle
vpsraw
enter
jmp
jecxz
shl
xchg
aaa
shl
sti
ror
cli
lock
sti
int
fucom
cmc
fcmovu
xchg
fdivrp
lret
icebp
repnz
out
aaa
leave
in
int
loopne
sti
aas
cmp
fmul
int
loop
into
out
int
sarl
movl
stc
cld
stc
mov
fsubr
test
jmp
clc
xor
in
cmp
in
xchg
ds
mov
filds
in
in
sti
cli
cs
xor
cmp
cld
cmpb
leave
clc
fimuls
into
xchg
mov
int3
in
sar
fistpll
repz
les
loope
mov
mov
jecxz
hlt
sti
fcmovu
cmp
fcomi
rcr
aas
call
fcmove
out
jmp
call
xor
int
iret
out
repnz
leave
mov
lret
loope
loopne
xor
in
shlb
lock
int
sarl
mul
mov
xlat
xchg
iret
in
test
cmc
cmp
cmp
loope
loop
hlt
loop
jmp
xchg
mov
aaa
out
cmp
fcomp
cli
rcl
cmp
icebp
fcmovnb
in
neg
out
jmp
in
loope
xor
cmp
cmp
cmp
int
fcmovbe
cmp
out
fcmovb
test
int3
fisttps
sub
jmp
out
ror
fdivp
aad
ds
test
fldl2e
test
orl
ss
in
lock
ss
rcl
loopne
cmp
clc
aas
lea
mov
shr
sti
clc
cmp
fcmove
xlat
fcomi
in
lds
call
cmc
in
xchg
xlat
icebp
cmp
call
fdiv
aas
in
sbb
cmp
out
rcr
enter
test
lds
hlt
in
cmc
cmp
fldl
cld
call
ret
sti
sar
fdivs
aaa
cmp
cli
add
loope
xlat
fadd
enter
cmp
out
int3
in
shl
sub
lock
lret
fimuls
mov
je
add
enter
fstp
int
inc
dec
adc
mov
sarl
fiaddl
jle
loope
out
hlt
icebp
neg
mov
call
in
hlt
in
cmp
fdivrs
cmp
fcomip
sti
faddl
mov
stc
jmp
jmp
sar
xorl
aaa
cmp
cmp
aad
mul
fdivrp
in
leave
clc
lds
out
out
fdiv
ss
xor
in
ds
out
out
orl
repz
xor
in
cmp
xor
lock
loop
repnz
fcomi
jmp
lret
ret
sti
pop
mov
mov
out
out
repnz
cmp
hlt
cmp
fcmovnbe
cli
cld
mov
cli
in
lret
loope
test
enter
ljmp
mov
fucomi
fmul
in
out
rorl
fcmovbe
cmp
lret
lock
fadd
aam
icebp
stc
in
fdiv
and
call
out
clc
rcl
lret
hlt
out
repz
icebp
repz
ljmp
std
mov
leave
int3
testb
rcr
repnz
cmp
lock
cmp
in
xchg
in
iret
in
rcll
call
cmp
leave
loop
cmp
fcomi
repz
mov
in
in
fdivs
mov
ss
ret
incl
faddl
jecxz
imul
in
shl
xlat
aaa
icebp
aam
incl
fdivrp
clc
in
std
lds
xchg
rcl
rol
xlat
ss
xor
cmp
jmp
sarl
aam
repz
xchg
std
test
or
out
into
cmp
sti
fcmovnbe
iret
in
bnd
enter
clc
lock
repnz
jecxz
xor
ror
std
fcmovu
stc
aad
cmp
mov
mov
loopne
fdivp
call
push
ret
icebp
ljmp
fnstsw
rorb
mov
or
lret
into
lret
fcmovnb
clc
jecxz
stc
rol
loop
mov
out
fcmovbe
iret
mov
aam
shl
not
std
out
cld
cli
ljmp
decb
in
out
icebp
xorb
xlat
rcr
fstpt
shrb
fistpll
fcmovb
add
sti
jbe
add
xchg
add
add
add
sahf
add
fsubr
rcrl
add
add
adc
mov
mov
movl
jmp
aas
mov
fnstcw
jae
pusha
clc
lret
aad
jle
add
sar
fnstcw
rcl
rcl
rcl
aad
mov
icebp
test
ffree
aad
in
jmp
xor
fcmovnbe
fdivp
cmp
orl
in
repz
incb
cli
icebp
rcl
out
aas
into
fcmovb
fdiv
mov
dec
lret
loop
clc
lret
cmc
int3
jmp
fsubr
iret
fsubr
xor
xor
icebp
cli
ss
icebp
repnz
icebp
mov
fldl
mov
mov
shl
shl
ljmp
in
cmc
aam
cli
xlat
jmp
mul
xchg
cld
leave
fisttps
cmc
loop
fmul
fidivrl
cmp
adc
lds
aam
flds
xchg
mov
iret
ret
ljmp
int3
rcr
roll
fucom
loope
cld
cmp
test
aas
aam
ljmp
cmp
test
out
mov
imul
movl
cmp
in
rcl
repnz
fstpt
neg
sbb
xchg
sti
enter
in
mov
rol
cmp
leave
cmp
out
jmp
push
fidivrs
fdivp
and
out
sbb
int3
mov
icebp
hlt
hlt
jmp
cmp
leave
repz
aaa
addl
test
repnz
in
xor
aad
lret
in
ds
cmc
rcr
mov
fcomp
std
call
iret
aam
shr
fldl2t
xor
cmp
aas
fucom
xor
fcmovbe
test
jmp
xchg
stc
ljmp
loopne
cmp
rcl
decb
lock
lret
call
xlat
neg
fsqrt
cmp
lret
aad
not
lret
in
lret
mov
lret
aam
idiv
aas
fdiv
into
ret
cli
jecxz
xor
mov
hlt
fimull
ljmp
xor
xlat
cld
ljmp
rorl
xchg
incl
les
cmp
cmp
aam
out
cld
mov
mov
nop
xchg
out
lock
in
lret
xlat
in
cmp
test
inc
jecxz
loope
rcr
cld
mov
ljmp
xor
xorl
xor
jmp
aam
mov
int
rol
repnz
ljmp
jle
add
out
aad
fsubr
sti
sti
int
aam
loope
cmp
jmp
xchg
loope
nop
aam
out
loop
icebp
xlat
fdivp
lret
jecxz
out
aad
or
nop
in
jmp
lock
loope
xor
clc
xlat
cli
call
ds
xchg
shl
adc
xlat
inc
ljmp
xor
into
in
lret
repnz
int3
cmp
xchg
icebp
ret
cli
out
ljmp
sub
ror
clc
lret
hlt
lock
cmc
jecxz
rol
ror
hlt
out
lret
mov
icebp
mov
xchg
loopne
sar
cmp
fdivr
icebp
ds
fcomi
fcomip
mov
mov
xor
jmp
in
cld
fmul
xor
in
clc
cli
aad
lea
shl
orb
clc
sti
stc
out
into
cmp
push
testl
stc
lea
loope
loope
in
fscale
fcmovu
stc
xlat
sarb
fsubr
inc
loop
aam
jmp
xchg
iret
repz
idiv
fadd
fidivl
sti
cli
div
cmc
cmp
jecxz
rcl
fmulp
sbb
fmulp
fucomi
jmp
out
out
loopne
sub
enter
cli
sti
lret
sar
sbb
fnclex
in
xlat
lret
faddl
sub
shl
shr
out
clc
lock
into
test
mov
fadd
loop
mov
mov
xchg
lds
cmp
in
cmp
cmc
in
lock
in
out
cmp
test
in
int
repnz
stc
xor
aad
iret
fidivrs
loop
shr
shl
iret
sub
ret
divb
std
in
idivl
icebp
cmp
cmc
xor
out
jecxz
fsubr
xchg
call
xor
in
repnz
xor
in
out
sub
sti
idiv
repz
sbb
out
repnz
out
jmp
iret
cmp
xor
jmp
sarl
shr
into
int
leave
out
fucom
xchg
in
leave
out
jmp
clc
icebp
loope
std
repz
out
std
cmp
test
jecxz
in
mov
fcomp
out
aaa
lret
in
aas
aad
xchg
ds
inc
out
mov
in
std
xchg
out
incl
stc
xor
or
sub
add
mov
or
imul
mov
mov
sub
cmp
movl
ja
mov
jmp
xor
jmp
ror
iret
leave
fstp
popa
test
ds
sahf
fidivrl
fiaddl
jle
divl
jecxz
xlat
das
hlt
jmp
into
inc
cmp
out
sar
loope
ljmp
lock
lret
jmp
out
fdivp
call
out
icebp
fcmovnu
rcll
in
cmp
call
and
stc
fst
xchg
dec
nop
fsubrp
aam
xor
fprem1
shl
stc
iret
fildl
jmp
aam
into
enter
xor
cmp
aaa
sti
fcmovne
repz
int3
aas
out
out
out
out
adc
jecxz
xor
repz
fistpll
aam
addl
sub
lret
addb
aad
ret
fcmovnbe
fsubr
aas
fabs
ds
cld
in
rolb
sti
clc
xchg
ror
test
in
xor
lret
fdivr
int
sti
fiaddl
loope
hlt
out
call
cld
mov
xor
ror
stc
clc
repnz
lock
cmp
fcmovnb
clc
faddl
xor
out
rcl
out
lret
stc
out
hlt
int3
fxtract
fmul
jmp
lock
enter
xchg
vphadduwd
into
ljmp
and
ds
hlt
fsubp
in
testl
out
shrl
fstpt
cmp
icebp
cld
in
fdivrs
adc
jmp
rol
sti
jmp
xchg
mov
loopne
fcmovb
xor
out
ljmp
mov
test
and
icebp
into
xchg
std
call
hlt
into
shl
xlat
cld
icebp
rcr
vcvttpd2dq
testb
mov
xchg
test
repz
das
jmp
clc
roll
aad
rol
loop
sti
enter
fucom
iret
out
out
jmp
xor
cmp
jmp
cmp
fiadds
cmp
filds
sar
out
out
call
rcr
hlt
adc
shl
in
or
fiaddl
icebp
xchg
ss
leave
shl
std
repnz
cmp
aas
test
cmc
fmull
int3
xchg
lret
jmp
int3
cmpb
cmp
std
addl
mov
mov
mov
movzwl
sub
mov
xor
xor
jmp
rcl
into
aad
fcmovu
add
pop
hlt
inc
int3
xlat
jp
jg
fiaddl
jle
icebp
icebp
cmc
mov
stc
in
cmp
fcmove
rcl
loopne
repnz
call
in
adcl
xor
xor
into
out
testl
nop
out
cmc
in
rcr
lock
stc
xlat
ljmp
std
aas
out
mov
out
xchg
in
loop
loop
xor
cmp
fdivp
fstpt
aad
movb
lret
mov
lock
int
cld
xor
int
sti
aam
ret
jecxz
test
mov
rcr
repnz
sub
rcr
cli
lock
jmp
loopne
fdivr
mov
shl
xlat
int
cmc
xor
cmp
in
aas
in
out
fidivrs
fucom
mov
fcmovu
mov
test
xchg
jmp
into
cmp
std
shr
int
iret
lock
ret
test
or
rorl
int3
shr
call
loopne
lret
not
hlt
loop
sar
ljmp
fsub
dec
in
jecxz
rcl
enter
repz
cmpb
repnz
clc
sub
in
call
nop
repz
int
xor
xor
hlt
fcomi
cmp
sti
ret
testb
in
cmc
mov
rcr
cli
lock
hlt
icebp
loop
aad
std
cmp
jecxz
cmc
decb
xchg
cmp
out
xor
cmp
repnz
sbb
xchg
call
enter
std
loope
ror
jmp
out
loop
cmc
shr
mov
sti
stc
in
fists
hlt
xlat
iret
iret
cmp
xor
fiaddl
ljmp
fiaddl
fdivrs
out
fcom
xor
std
shl
cld
shr
ret
stc
fsub
in
fsubp
in
xchg
out
nop
fmulp
xor
clc
iret
lret
shl
xor
aas
fdivr
in
shl
fildl
fcomp
mov
loope
out
in
out
lock
fstpt
lret
jmp
rcl
loope
aam
cld
aas
test
in
mov
aad
cmp
ss
out
lret
loop
xlat
cmp
in
cmp
fildl
fs
add
shr
je
add
aad
ret
int
fistpl
xor
fistpll
fiaddl
jle
fcmove
in
xchg
and
out
out
xor
leave
div
out
iret
stc
xchg
call
clc
out
mov
into
xchg
ljmp
call
clc
std
rcr
into
filds
in
test
out
ljmp
in
loope
fsubrp
aas
les
in
mov
stc
sub
xchg
xchg
aas
sarl
xor
cmp
cmp
fsub
cli
out
mov
loopne
loope
lret
call
hlt
out
sar
cmp
add
out
jmp
fiadds
cld
out
jmp
xor
icebp
icebp
xor
out
fcomip
rolb
or
cli
cli
in
mov
iret
idivb
imul
iret
sti
cmp
loop,pt
repnz
enter
iret
cld
fcomip
shl
xchg
jecxz
in
idiv
cmp
int
shl
shl
jmp
fstp
lock
out
in
in
icebp
xor
rolb
ljmp
sti
jecxz
out
shl
in
cmp
xor
sti
fst
iret
repnz
incb
enter
nop
rcl
sarl
lock
enter
ret
cli
icebp
ffreep
lret
mov
icebp
rcll
cmp
int3
lock
stc
cld
loopne
shl
fadd
in
cmp
loopne
loop
shl
xor
ljmp
in
cmp
ljmp
sar
ror
xchg
imul
sub
jmp
out
ss
out
cmp
enter
int3
jmp
sti
mov
out
jmp
imul
xor
int
repz
not
cmp
loop
cld
repnz
in
rol
xor
call
cmp
in
cmc
rolb
lret
lea
loopne
out
shl
cmp
aaa
dec
out
cld
sub
rol
clc
fucomi
ret
jecxz
loopne
jecxz
loop
nop
iret
ret
out
jmp
loopne
xor
loopne
addl
jecxz
out
xchg
lret
aam
iret
enter
cmp
aaa
jmp
loope
hlt
in
sarl
imul
xor
xor
sub
mov
mov
jmp
rcl
rcr
aam
fstp
lods
pushf
inc
outsb
mov
loope
jle
add
les
out
leave
sti
std
out
loop
ret
out
repnz
fdiv
stc
faddl
out
xlat
call
fldl
incl
cmp
aam
loopne
stc
neg
repnz
fdivrp
mov
cmc
lret
mov
mov
adc
cs
enter
fstpt
lret
lret
div
loope
test
in
mov
lds
stc
lock
int3
lock
repnz
jecxz
roll
fmull
mov
aam
int3
fdivrl
ljmp
sbb
cmpl
movl
lock
shl
in
hlt
fmulp
cmp
xor
cmp
mov
mov
fsubr
iret
xchg
in
cld
aam
in
xor
xor
int3
cmc
cmp
int3
clc
loopne
repnz
fucomi
stc
leave
mov
in
ljmp
rcr
fcmovu
xor
in
fdivrl
xchg
out
lds
mov
call
repz
cmp
cmp
iret
cmp
jmp
fsubr
out
int
iret
enter
in
fucomi
int3
xor
shl
fdivrl
cld
aam
fucompp
mov
xchg
fisttpll
lock
lret
icebp
lret
iret
cmp
repnz
orl
mov
loop
vpmuludq
icebp
stc
shll
lock
mov
int
xchg
shl
shl
iret
mul
out
cld
fdivr
filds
rolb
into
xor
fdiv
clc
divb
fstp
cmp
sti
repnz
orl
xchg
repnz
xor
cmp
div
xor
rol
movb
out
mov
repnz
not
aaa
in
into
cmc
xor
roll
vpminsw
ljmp
test
hlt
ss
cmp
int
ds
roll
sar
cld
mov
lret
test
xchg
xchg
fsubp
xor
iret
ss
out
cld
cmc
fucomp
out
cmp
mov
mov
fdivrp
out
mov
shr
lret
jmp
repz
xchg
mov
sub
cmp
jmp
sarl
rol
js
pusha
mov
push
in
jle
add
iret
mov
neg
popl
loope
clc
lret
icebp
hlt
cmp
aaa
rcr
in
iret
int
cmp
aad
leave
rol
fsubr
xchg
out
aam
ljmp
into
aam
repz
idiv
out
cld
xchg
clc
loopne
mov
sub
xchg
xchg
shl
ss
xlat
std
cmp
cld
int
std
aam
vpsubsb
cld
stc
loope
enter
les
in
ftst
call
sti
test
ds
faddl
jmp
cmc
mov
std
leave
enter
fdivr
repz
sti
xchg
nop
test
ljmp
cmp
int3
into
cmp
fsub
hlt
out
jecxz
xlat
lea
icebp
loopne
int
ljmp
into
cld
ret
sti
fadd
shl
ret
fimuls
fdivr
mov
rcl
xor
xor
shr
lret
ds
stc
in
fcmovne
lret
sti
decl
into
div
hlt
xor
ss
jmp
in
sar
push
inc
repz
fiaddl
lret
xchg
lret
sub
repnz
sub
rcl
clc
loope
out
in
icebp
call
fmul
out
cld
xchg
out
jmp
fcmovne
xlat
cld
sarl
lock
out
cli
sar
fcom
jecxz
incl
jmp
mov
ret
cmp
shl
xor
and
aam
stc
out
out
decl
rcl
lock
ror
fucomip
fdivrp
mov
leave
shl
int3
aam
ljmp
ds
sar
xchg
testl
out
out
fld
repnz
ljmp
into
aad
xchg
hlt
mov
fdivrp
std
or
xchg
iret
adc
cmp
cmp
loop
push
iret
fdiv
les
in
jmp
sub
repz
xlat
cmc
xlat
repnz
ret
fnstsw
fiaddl
notl
xor
cmp
repz
fidivs
and
fistpll
cmc
xlat
lds
fcmovne
in
in
xchg
rol
stc
out
icebp
out
stc
call
or
add
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
jmp
fcom
rol
fcom
add
faddl
ljmp
jle
in
ret
stc
test
decl
std
fcmovne
lea
repnz
shl
fucomp
cld
ret
cli
loopne
mov
loopne
jmp
decb
addl
int
clc
cmp
fdiv
out
addb
out
loope
aam
in
ss
repz
in
cmc
aaa
cmp
into
xor
loope
orl
out
loop
fsubr
lock
ror
in
int
xlat
shl
jecxz
flds
lret
cli
enter
cli
xchg
div
jecxz
lret
shr
cmc
clc
ror
out
test
aam
cld
jmp
xchg
div
xor
icebp
in
idiv
cmp
repnz
adc
sbb
shr
sbb
into
sti
fsubr
rorl
lret
dec
sarb
out
shl
cmc
repnz
fcmovnbe
mov
les
loop
test
ret
clc
ss
cmp
loopne
xlat
sti
jmp
in
loope
ficoms
loope
loop
rcr
leave
ds
in
aad
loopne
cmp
fdiv
testb
aam
out
out
in
loop
int
shl
in
cmp
sarb
repnz
sarb
leave
sar
addl
aaa
ljmp
into
cli
fcmovnu
enter
into
in
adc
xchg
rol
into
xor
lret
fsubr
aas
clc
add
fucomip
std
leave
clc
lret
or
aad
les
rcr
xor
in
fcom
in
fcomp
ret
repz
in
leave
jmp
repnz
neg
loop
in
ss
ret
loope
aas
sub
std
mov
loope
fldl
cli
fsubr
hlt
loopne
sti
cmp
shl
call
mov
faddp
loope
cmp
aam
fsub
jmp
sti
repz
ljmp
stc
repz
ret
in
std
test
std
nop
mov
jmp
aaa
out
hlt
aad
out
out
ffree
aas
loope
shr
cld
cli
test
shl
iret
test
in
loope
sub
cmp
clc
cmc
ljmp
rorl
out
sbb
in
fsubrp
in
fcom
lock
cmp
shlb
clc
add
jmp
int3
int
loope
sub
stos
mov
jle
add
std
lret
loop
div
ffreep
fdivrp
xchg
lret
into
cli
in
lret
xchg
clc
repz
cmp
cmp
loopne
cmpb
into
int
std
sti
div
mov
out
out
rcr
in
test
jmp
repz
in
sti
xor
fidivrl
iret
lock
cmp
addl
rcl
sub
jmp
fdivrl
cmp
into
out
xlat
into
xchg
mov
out
in
jmp
shl
loope
in
leave
icebp
iret
fmul
leave
rcr
cmp
lock
ret
mov
neg
loope
call
call
divl
cs
aad
cmp
in
loopne
aam
sti
jecxz
mov
loopne
out
in
in
jmp
lock
sti
loope
leave
out
call
sub
test
int
aam
out
out
xor
out
clc
lret
cli
rcr
out
out
jmp
in
jmp
int3
int
shr
sti
lret
ds
cmp
cld
iret
loopne
clc
sti
fsub
aad
mov
in
rol
out
repnz
ss
test
cmp
lock
fcmovne
or
cmp
xchg
in
stc
out
fcom
out
rcl
cmp
rcl
aam
xchg
addl
shl
sub
xor
fcmove
adc
aam
add
mov
out
aam
sub
loope
xor
loope
cld
loope
mul
call
lret
lret
clc
out
mov
xchg
clc
out
jecxz
out
cmp
fldz
ret
clc
std
enter
sub
jmp
mov
xor
fsubr
call
adc
fmuls
std
loope
int
and
in
enter
ds
aas
cmc
cmp
ret
clc
adcb
shr
in
jecxz
ds
jmp
cmp
rcr
cld
cli
leave
test
in
vpsubd
imul
sar
idivb
clc
into
loopne
cli
cmc
fstp
clc
addb
icebp
orl
aad
cmp
cmp
cli
repnz
repnz
fdivp
ror
leave
sti
loop
ror
int
shl
clc
ror
add
jmp
enter
fstp
int3
shl
scas
imul
rorl
fiaddl
jle
cmc
lret
std
enter
xlat
cmp
test
fimull
cld
xchg
call
xor
int3
lock
cmp
idiv
sar
incb
call
mov
int3
sar
ror
in
in
jmp
ror
call
faddl
sti
and
filds
test
jecxz
shl
std
out
cld
imul
in
stc
cmc
ret
sti
and
enter
lock
std
cmc
xor
rol
in
cmp
cmp
int3
clc
sub
repz
sti
test
jecxz
loop
int
test
into
cmp
call
shl
sti
xlat
xchg
sti
enter
fstl
in
lret
aam
icebp
sti
cld
in
jecxz
and
jecxz
repnz
fdivrp
mov
in
mov
jmp
mov
xor
int3
aad
out
in
sarb
int
rol
xchg
fsub
lret
test
out
les
enter
cmc
call
or
ret
bnd
mov
in
stc
nop
in
mov
call
aam
lock
in
aam
call
clc
std
std
fmulp
mov
nop
lret
sub
jmp
sarl
loope
xchg
out
rol
out
fiaddl
icebp
std
out
xor
cmp
mov
add
cmp
incb
out
int3
xchg
shl
out
icebp
cmp
divl
ret
sti
hlt
and
fucom
xchg
and
jecxz
cmc
call
cmp
repnz
mov
or
ljmp
clc
xor
jecxz
clc
clc
xor
icebp
clc
cld
ror
clc
idiv
aas
fsubr
faddp
call
xchg
loopne
ror
aad
xor
not
xlat
fadd
in
clc
aam
aad
clc
loop
mov
decl
repz
clc
jmp
xlat
repnz
fdivp
jecxz
aas
repnz
xchg
in
mov
lock
loop
shr
call
rcl
filds
ret
lret
loopne
loop
rcl
cmp
stc
repnz
rol
cmp
adc
loop
cli
fsubrp
idiv
lret
addl
je
add
lret
ror
aas
ffree
fcmovnu
out
jmp
sub
in
jg
fiaddl
jle
ljmp
cmp
into
aam
icebp
cld
stc
rol
jecxz
jmp
int
in
int3
lret
cmp
stc
out
cmp
clc
test
test
test
mov
rol
loopne
out
fcmove
iret
fdiv
out
lock
ret
test
lock
jmp
hlt
shl
clc
int3
out
cli
fdiv
xor
cmp
aam
shl
ljmp
adc
loope
jecxz
divb
cmp
hlt
out
in
cmp
out
shl
repz
movb
rorl
sub
out
ffree
sar
xor
cmp
cmp
lret
mov
jmp
out
jmp
call
fcmovu
shr
fbstp
xchg
mov
stc
lea
das
out
das
stc
xor
sbb
out
into
aas
fadd
call
in
xchg
lret
int3
into
mov
cmc
int
into
cld
dec
cmp
cmp
in
xchg
repz
cli
nop
clc
fdivrp
fucom
iret
in
fistpll
bnd
cmp
lret
fdiv
test
test
loopne
out
out
lea
out
int3
lret
std
fdivrl
ror
shl
aas
repnz
out
orb
mov
fldl
ret
cld
repz
aad
cmc
hlt
cmp
stc
jmp
ljmp
sub
cli
repnz
cmp
aas
rcl
sarb
lds
mov
ror
lret
leave
leave
xor
out
xor
fdivrs
aas
out
in
fdiv
int3
stc
call
out
in
lret
in
ljmp
loopne
shl
cmpl
int
out
in
jmp
out
lret
in
aad
cmp
lock
sti
jecxz
incb
filds
lea
lret
repnz
cmp
ds
aaa
aad
bnd
popl
ror
icebp
xor
not
out
out
xor
loopne
loope
cmp
ljmp
into
aam
lret
jmp
jmp
sarl
fdivr
adc
mov
cli
mov
mov
sub
cmp
mov
jbe
jmp
lret
ret
in
call
xchg
push
loopne
pop
out
jg
fiaddl
jle
in
imul
enter
fnstenv
repnz
ffreep
fdivp
cmc
mov
idiv
lret
std
leave
icebp
cld
xchg
aam
loope
out
cmc
xbegin
sarl
rolb
loop
std
cmc
int3
in
sub
jmp
xor
repnz
repnz
cmp
cmc
hlt
xchg
clc
fucomip
int
xchg
aad
into
jmp
call
cmc
ret
call
jecxz
decb
test
test
icebp
iret
lret
jmp
aad
lock
cmc
mov
loop
call
not
fcmove
mov
aad
ljmp
mov
sbb
mov
xchg
rolb
cmp
fdivp
std
cmp
repz
iret
cmp
call
or
mov
loope
cmc
aaa
fnop
jmp
adc
std
hlt
hlt
xchg
cli
fmulp
rorl
shl
jmp
repz
stc
cmp
clc
icebp
cmc
sarb
vpminub
aam
shl
jmp
in
jmp
repnz
rol
mov
sar
enter
mov
xchg
mov
int
repnz
leave
fstp
cmp
loopne
add
std
inc
mul
mov
test
jmp
aas
lock
xor
cld
sti
lret
cmc
cmp
clc
cmp
out
cmp
jmp
icebp
in
lret
shl
idiv
enter
cmc
cli
fdivrp
cmpl
test
in
test
loope
xor
cmc
cmp
lret
enter
loope
rol
test
enter
stc
fiaddl
jecxz
lock
call
into
cmp
ljmp
in
xchg
xor
neg
xlat
cmp
out
xor
jmp
loopne
test
rol
enter
xlat
loopne
call
sub
enter
ss
test
cmc
xlat
mov
add
enter
call
in
xor
shlb
out
fcmovnbe
repnz
add
fisttpl
sbb
lret
aam
int3
into
leave
out
jmp
cmp
xor
cli
int
test
clc
clc
mov
cld
xor
xor
add
add
imul
mov
mov
mov
mov
add
movl
mov
movl
movl
jmp
ret
rcl
rol
rorl
jecxz
shlb
bnd
fiaddl
jle
xbegin
loopne
in
ror
repz
sti
repnz
cmp
faddl
fdivrp
mov
xchg
icebp
jmp
cmc
icebp
aad
cmp
cmp
sbb
fcomp
addb
jecxz
ss
rolb
cmc
testl
mov
rcl
repnz
das
test
fdivr
in
aam
repz
call
cld
cld
loopne
int3
mov
stc
in
lret
out
cmp
cmp
clc
cmp
in
in
lret
xlat
idiv
lret
filds
ret
out
cmp
sarb
lret
loop
in
lock
aam
mov
lret
clc
mov
jecxz
jmp
fsubr
xlat
std
repnz
in
xlat
std
icebp
jmp
ret
shr
cld
test
nop
add
xor
cli
aaa
aam
sar
stc
aad
repz
aas
xlat
out
adc
in
mov
out
in
xor
repz
rcl
cmp
ret
aas
loope
mov
jecxz
out
cld
cld
in
rol
out
call
aam
repnz
lock
shl
fsub
sti
fildl
jmp
jmp
das
int3
int3
rcr
iret
call
cmp
loopne
loop
in
std
enter
int
inc
into
neg
sar
fucomp
std
sar
xlat
aam
stc
lret
and
test
aam
into
cmp
aad
fstp
lret
ret
dec
fdivrp
in
fcomp
out
mov
out
leave
cs
aad
aas
ds
loope
sti
and
fcmovbe
fchs
xchg
test
shl
out
xor
ljmp
loop
shl
cmpb
mul
aad
rcll
cmp
out
ljmp
out
sarl
sti
lds
iret
or
shr
ss
fsincos
mul
rcl
cmc
loopne
aad
test
jecxz
fucomip
mov
out
enter
call
incl
fxch
testb
loopne
adc
loope
rcl
aam
xlat
int3
cmpb
rol
stc
rol
mov
jmp
fcom
mov
rcr
xlat
sub
mov
jle
add
xchg
test
sti
in
xchg
cs
icebp
stc
ljmp
in
mul
orb
int
shl
icebp
shr
cmp
cmp
shl
sti
clc
xchg
out
idiv
loope
call
out
ss
iret
clc
fucomi
repz
iret
fdivrs
addb
in
jmp
idiv
aaa
fdivs
lret
cmp
fndisi(8087
rol
stc
mov
xchg
xlat
in
int
leave
out
nop
xchg
aad
ret
cmp
sti
enter
int
sbb
fsub
fmul
call
mov
into
xor
cmc
shl
sar
out
loop
loope
out
loop
repz
in
cli
lret
adcl
ffree
div
ljmp
rol
rolb
int
xchg
in
xchg
rcll
in
out
into
rcr
clc
testb
ljmp
in
xchg
in
jmp
cmp
shr
in
icebp
aad
shl
loope
std
in
sub
lret
int
test
hlt
aaa
cs
iret
repnz
sarl
in
xchg
stc
call
mov
jecxz
xchg
out
test
aam
aam
xor
fcmovne
hlt
mov
mov
jecxz
test
and
hlt
in
shr
out
fdivrs
cmp
cmp
faddl
clc
jmp
nop
ljmp
call
jmp
shl
faddl
iret
fcmovbe
aad
lret
decl
out
enter
xor
sarb
shr
into
xlat
lock
fcomip
ret
in
in
testl
loope
ret
xor
call
cmp
in
test
fninit
fldl2t
in
int3
repnz
xor
fsubr
aam
out
dec
shl
cmp
faddl
loop
sub
std
xchg
in
xor
in
shl
into
cmp
icebp
fcmovnbe
icebp
loop
xchg
hlt
enter
cli
cli
faddl
xor
xlat
out
idivb
aas
sbb
shl
clc
hlt
shl
jmp
nop
mov
int
lret
jmp
jmp
fcmovb
repz
cmp
cmp
je
add
lret
xlat
aas
rcr
int
in
push
repnz
outsb
idivb
fiaddl
jle
aad
leave
test
in
fildl
or
out
shl
hlt
iret
push
shl
stc
cmp
faddp
addb
out
hlt
rol
xor
cmp
jmp
std
cmc
int
addl
fucom
aad
in
jmp
repz
std
out
out
cmp
cmp
xor
in
cmp
xchg
cmp
sar
icebp
out
out
icebp
hlt
lock
stc
aam
cmp
repnz
ret
cli
int
fcmovbe
ret
rorb
in
icebp
shl
out
aam
shl
fucomip
clc
out
sti
loopne
iret
rol
out
test
loope
or
cmp
cmc
xor
stc
sti
cli
hlt
int
test
test
rcr
enter
loop
clc
fxch
repz
leave
icebp
out
enter
in
xlat
les
sub
in
jmp
test
int3
xchg
icebp
xchg
cs
in
cmc
ret
cmp
xor
ds
aad
in
jecxz
clc
in
lds
filds
aam
bnd
sti
cmp
xor
std
faddl
repz
in
icebp
shr
xchg
xor
out
ret
in
ret
hlt
idiv
nop
mov
ror
cmp
rcl
out
std
int3
fucomp
cmp
aas
loopne
aad
fxch
mov
loope
out
xchg
aam
lret
in
cld
call
sti
cld
fsub
ret
jecxz
std
cld
fcmovne
mov
nop
loope
in
mov
xor
cmp
lock
ljmp
aad
rcl
cmc
test
fcmovne
nop
sti
inc
mov
cmp
iret
int3
mul
int3
repz
icebp
hlt
cmp
call
rcll
in
fstpt
xlat
aas
fiaddl
loopne
mov
in
xchg
enter
in
in
lret
fsubr
lock
out
cmc
xlat
rcr
test
in
test
loope
loopne
mov
in
dec
call
cmp
cld
out
aam
icebp
cmc
ret
out
fiadds
mov
fcmovnu
xchg
xorl
xor
clc
shl
cli
idivl
rcr
cmp
out
cld
xlat
div
inc
out
mov
rcr
test
sub
shlb
fsubr
into
ds
jmp
jmp
lret
fst
mov
addr16
jb
lcall
add
ret
lds
in
aad
in
int3
loope
shl
shll
iret
in
lock
rcl
loopne
lret
int3
int3
test
jmp
mov
rcl
lret
jmp
rcr
jmp
cmc
fdivrp
out
rcr
fdivp
repnz
fiaddl
xchg
out
ss
call
fadds
fst
hlt
lret
fadds
xchg
out
enter
clc
out
icebp
icebp
leave
div
rcr
ret
div
stc
cmp
lret
mov
xchg
int3
aaa
out
idiv
cmp
stc
lret
leave
aam
aad
sar
cld
out
in
loope
jmp
call
mov
lock
fdivr
cmp
rolb
fsubp
sar
in
cld
fisttps
test
xor
cmp
jmp
and
fadd
rol
jmp
mov
in
xchg
sub
ret
xor
iret
int3
hlt
repz
xor
loope
fsub
jmp
in
movb
hlt
cmc
cmp
in
cmp
shl
ror
lock
addb
xor
iret
adcl
xor
xor
cld
rcr
cmp
iret
fucomi
stc
ret
mov
out
int
cmp
fcmove
cmpb
and
mov
out
sbb
sbb
shr
xor
xor
xor
ljmp
fdivp
in
fcmovne
std
int
mov
xchg
fucomip
aam
fxch
in
shr
jmp
cmp
aas
add
shl
in
enter
cmp
xor
int3
aad
icebp
in
xor
repz
hlt
fdivrp
in
in
test
in
int3
or
ficoms
int
cmp
fsub
neg
cmp
neg
iret
inc
fistpll
ljmp
loop
clc
mov
ret
ret
loop
in
loop
loopne
xchg
mov
stc
les
rol
stc
xor
stc
rcr
xlat
repz
mov
mov
xchg
jmp
not
cs
out
int
div
cmp
fstp
cmp
xlat
fucom
loopne
cmp
icebp
mov
in
xor
clc
mov
xor
add
mov
mov
mov
mov
xor
add
jmp
aam
ret
aam
push
stc
add
jle
add
stc
loope
cli
aam
cld
sar
cli
in
enter
enter
loopne
call
idiv
jmp
rcr
sar
fcmovne
out
enter
loop
into
mul
les
int3
out
repnz
aad
out
ds
sub
lret
into
xchg
int
clc
fdiv
fcomp
int
fcom
out
shl
faddl
mov
fsubrp
shrl
out
hlt
fstpt
cmc
std
aam
shl
sti
cmp
fimull
loopne
loopne
out
loope
int
aaa
in
std
shr
cmp
iret
jecxz
clc
stc
clc
mov
loopne
call
out
ss
xor
jmp
iret
loope
cmc
rol
test
test
lret
notb
ss
not
cli
cmp
fdiv
lock
fistpll
aam
aad
xlat
mov
out
xchg
fucomp
int3
roll
call
shll
rcr
cmp
test
loope
leave
ljmp
hlt
leave
out
enter
lret
rcr
enter
jmp
mov
orb
stc
call
cmp
shl
cli
out
out
incl
std
iret
mov
int
shr
mov
in
shr
lret
fcom
int3
sarb
ror
shl
mov
fmulp
leave
lret
xchg
in
cmp
cmc
iret
fxch
sub
iret
rolb
in
and
xchg
sar
out
into
lds
out
ljmp
xor
cmp
fimuls
fxch
nop
orb
in
xor
cmp
xor
fninit
cmp
aad
in
mov
dec
lret
int
ret
aaa
lret
enter
cmp
aas
loop
out
ljmp
mov
loope
repnz
xor
cmc
in
xor
jmp
incb
hlt
in
shr
loopne
in
jecxz
repz
cmp
repnz
lock
out
test
test
lret
orl
test
in
cmc
leave
clc
xlat
sarb
icebp
idiv
int
out
icebp
cli
repz
fucomi
lret
rolb
and
shl
mov
mov
mov
jmp
lret
ret
fcmovu
fucomi
pop
test
xchg
fwait
add
fiaddl
jle
stc
fmul
fsubrp
ror
or
rol
sar
enter
ret
fsubr
fsincos
xchg
repnz
lret
jmp
out
cmc
cmp
cmp
int
jecxz
out
ret
call
loop
orb
in
enter
aad
int3
lret
repnz
call
shl
repz
cli
fcmovnu
shl
cld
repz
fcmove
fsubp
aaa
int3
cmp
fcmovb
jecxz
mov
decl
cmc
repnz
ljmp
cld
cmp
loopne
jecxz
test
xchg
rorb
cmp
fld1
cmp
iret
loope
jecxz
mov
ficoml
aam
sub
xor
lret
xor
into
fdiv
add
aam
fld
sub
lret
in
icebp
jmp
shl
shll
leave
shl
loope
lock
cli
test
in
in
xchg
jecxz
jmp
lret
add
shr
clc
iret
aam
idiv
clc
addl
in
loop
out
xchg
in
out
sub
xor
cmp
fcomi
jecxz
out
xlat
ffree
xchg
std
cmc
mov
out
enter
aaa
cmp
cld
fmul
loopne
cmp
lret
call
jmp
test
ret
call
hlt
iret
shl
into
rolb
ret
lret
jmp
nop
loop
vmovntpd
aam
in
lret
bnd
repz
or
ret
cmp
lret
fcom
int
xchg
rclb
in
xor
dec
std
rcr
sarl
aad
call
mov
test
adcb
ror
repnz
icebp
shl
faddp
neg
cmc
loope
in
lock
jmp
cmp
call
clc
in
xlat
in
cld
cmc
hlt
std
mov
leave
lea
xchg
ss
clc
aad
lret
repnz
rcr
in
cmp
sar
test
roll
lea
jmp
cmp
out
int3
cmp
hlt
int3
shl
xlat
stc
sbb
rorl
int3
clc
loop
sub
shl
rcl
fst
test
test
fucomip
iret
fisttps
push
jnp
add
add
aas
ret
vpcmpeqw
sbb
cmc
jle
cmpb
add
jmp
cld
sti
ss
aad
rcr
cmp
mov
std
lret
lret
in
xor
jmp
test
out
loope
in
lret
call
out
jecxz
cmp
cmp
fcomi
loopne
shl
ret
xor
lret
mov
mov
out
bnd
out
lret
stc
leave
icebp
out
lock
std
cmp
fdivr
jmp
movl
cli
into
cmp
int3
cmp
ds
into
out
mov
std
in
enter
lea
stc
call
aas
cld
loop
jecxz
ret
cli
ret
in
xchg
enter
lock
iret
int3
cli
fcmovbe
icebp
xlat
fcmovnbe
repz
sti
mov
iret
orl
jmp
cli
dec
fdivr
aas
in
sar
xchg
lret
out
repnz
int
xchg
hlt
lock
hlt
cmp
fcomip
fdiv
lock
in
icebp
faddl
sub
mov
fsincos
les
jmp
repz
out
out
into
jecxz
cmc
xlat
ljmp
jecxz
ljmp
idivb
xlat
repz
aam
idiv
addb
xchg
hlt
xchg
xchg
int
out
xor
aad
call
idiv
aaa
jecxz
call
jecxz
enter
test
ror
in
cli
clc
lret
cmp
cld
stc
out
jecxz
test
fsubrp
ljmp
sub
out
jmp
lret
loope
in
faddl
jmp
jmp
loop
sti
out
iret
ss
fxch
fst
xor
cld
mul
fcomp
imul
sti
rorl
repnz
das
fmul
into
bnd
xor
aaa
div
stc
clc
sti
mul
leave
enter
fabs
fisttpl
aam
out
repz
in
aad
fcmovnu
cld
in
div
stc
test
lock
ss
in
clc
aaa
xor
loop
iret
repnz
jmp
sti
push
popl
out
rcl
cmp
fdiv
fdivr
cli
ss
loope
repz
jmp
int3
ret
lret
ret
int
int3
int
adc
jo
mov
add
out
int
enter
stc
xor
fcom
fdiv
lock
cmp
adc
fsubp
in
fcomp
loope
in
xchg
xchg
out
into
cmp
xlat
jmp
stc
xlat
ds
loopne
loope
mov
mov
jmp
shl
cmp
loopne
and
hlt
jmp
cld
in
in
std
mov
lock
cmp
sar
loope
xchg
fmuls
shl
mov
cmc
ljmp
out
fsubrp
lret
sarb
shl
stc
hlt
fiadds
test
repz
aas
sarl
cmp
icebp
movb
in
fists
mov
aaa
loope
fsubr
stc
jecxz
loopne
aad
jmp
fisttpll
ret
jmp
cmc
into
int3
fneni(8087
cmp
out
faddp
jecxz
xchg
out
out
repnz
in
fbstp
shl
in
aad
not
ret
repnz
jmp
std
lock
or
test
fld1
repnz
fnstcw
faddl
test
enter
xchg
iret
hlt
out
out
cmp
into
repnz
not
fiaddl
ds
flds
sti
jmp
xchg
loope
shr
sub
out
fcmovbe
xchg
in
test
in
icebp
xacquire
jmp
lock
aad
hlt
out
cmp
incb
lea
les
jmp
ss
iret
ds
in
cmp
les
jmp
cs
in
xor
sti
icebp
icebp
into
cmp
ljmp
iret
call
into
rcl
xlat
sti
cli
rcr
out
out
sarb
loope
ljmp
in
out
loopne
jecxz
icebp
enter
leave
aaa
out
aaa
enter
fdiv
iret
out
out
enter
and
into
not
xor
out
cmp
out
fdivr
rolb
rcr
aas
shl
in
leave
std
enter
xchg
mov
in
clc
cmp
fmulp
hlt
fdiv
filds
sbb
add
mov
jmp
ror
aas
roll
ljmp
test
fiaddl
jle
in
loopne
aad
in
out
cmc
jmp
inc
xor
add
in
cli
loopne
and
filds
lret
ss
not
in
cmc
imul
test
add
test
in
in
hlt
loop
xor
out
cmp
sbb
sti
test
fmul
sar
loope
and
loopne
ljmp
call
ds
aaa
clc
cld
xchg
cmp
std
out
fcmovnbe
xchg
xchg
jecxz
cli
in
cld
cmp
rcl
clc
fadd
loop
jmp
call
int
in
out
xor
ret
fcmovu
in
loopne
cmp
aad
push
cmp
mov
out
in
bnd
aam
iret
lret
aaa
cli
aas
loope
fcmovbe
xchg
cmc
aas
xchg
mov
fmull
out
addb
sti
in
int
cmp
xor
shl
out
loope
cmc
loope
ljmp
jecxz
mov
fdivr
aad
cmp
stc
std
jecxz
fisttpll
fsubp
call
rcl
in
loop
leave
ss
jmp
cmp
in
in
out
in
mov
icebp
jmp
out
xchg
clc
out
idiv
xor
lret
cmp
jmp
out
mov
ret
testl
xchg
out
clc
jmp
out
repz
idivl
fildl
loop
out
or
call
int
xlat
cmp
in
lret
xor
cmp
lock
jmp
jmp
xchg
lret
out
icebp
ljmp
out
std
test
fiadds
ficoms
jecxz
out
lret
aaa
cmp
ds
sti
stc
aad
xlat
repz
orb
cmp
mov
xor
int
jmp
in
repz
std
rcr
in
loope
lret
jmp
call
lret
ss
aaa
sbb
xchg
xchg
cli
xlat
in
fisttpll
out
shl
xor
lret
testl
ljmp
fdiv
ror
loop
sub
cmp
aad
int
shl
cmc
aam
sti
shl
jmp
xchg
pop
xchg
jb
add
call
add
into
aam
fmul
dec
cmp
in
xacquire
fiaddl
jle
neg
repz
jecxz
fucomp
cmp
aam
int
xor
in
and
sar
loope
sti
cld
aam
sarl
out
sti
cmp
std
out
lret
repnz
fidivrl
xchg
fildl
ljmp
xlat
xor
leave
neg
int
cmp
ljmp
loope
decl
xchg
mov
lock
sarl
in
jecxz
shlb
xor
sar
aas
repz
xchg
mov
decb
cmc
ror
fucomp
rcr
cmp
aad
int3
loop
call
in
mov
loopne
cld
repnz
hlt
xlat
fld1
out
fnstcw
enter
aas
cli
cld
icebp
jmp
cli
xchg
fiadds
not
shl
in
cmp
loopne
cmp
fdivr
adc
loopne
fxch
fdivr
mov
lret
lret
cli
sar
cmp
iret
xlat
icebp
lock
fcmovb
repnz
repz
xlat
shr
cmp
in
jmp
jmp
leave
into
fsub
xchg
aas
aam
jmp
stc
mov
out
mov
jmp
or
out
aaa
ss
not
cmp
xor
fst
xchg
add
lret
in
enter
call
cmp
cmp
f2xm1
hlt
ret
fneni(8087
repnz
aad
lret
xchg
mov
ret
xor
cmp
std
fstpt
aad
aas
loope
cld
stc
rcr
cmpb
hlt
in
in
fucomip
adcl
int3
lret
xor
repz
rcl
jecxz
call
out
out
nop
xchg
fisttps
fdivrl
ljmp
cmp
xchg
clc
fildl
in
mov
out
cmp
rcr
in
jecxz
jecxz
int3
int3
int
loope
mov
xchg
ljmp
cmp
in
addl
out
xchg
icebp
xchg
nop
xor
out
repnz
cmc
idiv
iret
add
cmp
fadds
call
shl
mov
icebp
xor
repz
stc
int3
cld
cli
loopne
flds
in
fdivrp
fdivp
push
xchg
shr
out
cmc
stc
in
icebp
fcmovnu
repnz
loop
clc
add
mov
mov
mov
mov
xor
xor
add
add
imul
jmp
lret
enter
int3
rorb
andl
loopne
ret
cmp
idiv
std
out
cld
fst
cmp
lret
icebp
cmp
shr
int3
fsubp
out
cmp
jmp
lret
lret
nop
repnz
test
aad
aam
cmp
ror
std
jecxz
cmp
loop
mov
xchg
mov
out
into
repz
fdiv
cmc
xor
hlt
loope
mul
fcomp
jmp
stc
int3
mov
out
xor
imul
jmp
idiv
hlt
ror
mov
loope
lret
out
std
iret
imul
shr
out
leave
iret
stc
fdivp
xor
rcr
lds
ror
fisttpll
loop
xor
jmp
fdivrp
clc
ds
xlat
mov
call
out
lock
cmc
std
aaa
into
repz
loopne
stc
int
cli
loopne
roll
enter
lret
xchg
ljmp
cmp
aaa
ds
xlat
xlat
int
rolb
mov
jmp
nop
fpatan
les
int3
aad
ljmp
hlt
shl
fdivr
or
enter
loopne
in
sub
sti
in
in
cmp
repz
rcl
test
mul
ffree
fiadds
in
shl
in
repz
cmp
lret
cmc
jecxz
loope,pt
jmp
neg
fchs
shl
jmp
cmp
in
idiv
out
loope
iret
loope
idiv
clc
ret
int3
mov
xchg
lret
ffree
not
shl
fcmove
xor
imul
lock
cmp
hlt
cmp
xchg
xchg
or
std
lock
xor
cmp
cmc
out
testb
icebp
loope
jmp
call
int
rcr
jmp
rol
test
aam
sbb
lret
int3
mov
call
xor
aam
fidivrl
fsubr
loopne
xlat
fnstsw
testb
call
div
ds
stc
fnstsw
neg
fsubp
mov
fucomi
icebp
flds
ret
fdivr
sub
aad
aad
in
out
leave
fxch
icebp
in
int
in
out
call
cmc
sti
rcl
add
jmp
ror
rcl
stos
sub
insl
or
mov
fiaddl
jle
cld
iret
std
out
lret
loope
sti
ljmp
das
loope
iret
rcr
fsubrp
loopne
lock
fcmovb
icebp
sar
loopne
std
fldl
xchg
nop
leave
cs
aam
leave
repnz
out
loopne
fabs
in
ffreep
std
mov
lock
xchg
xor
rol
shl
fcmovnu
loope
lock
fcmovbe
aam
fldl
movl
cld
aad
call
mul
ret
xlat
in
mov
test
cli
out
std
out
out
cmc
out
xor
das
fcmove
ffree
cmp
rol
test
jmp
out
mov
shl
loopne
test
call
lret
repz
lret
iret
out
aam
cmp
leave
fcmovu
mov
xchg
loopne
xor
out
rcr
aam
loopne
repnz
call
mov
addl
out
in
fdivrp
div
fdivrl
out
movl
div
in
cmc
aaa
out
in
sti
addl
repnz
into
call
xchg
in
shl
xor
aam
cmp
lock
cmp
div
clc
iret
test
fldl
ror
xchg
cmp
sarb
in
cmp
cmp
aam
cmp
std
cmp
xchg
iret
out
repnz
loop
ss
lret
loopne
cmp
clc
icebp
repz
mov
cmp
call
in
xor
aad
xlat
cmp
std
cld
jmp
aaa
aas
hlt
fmul
test
cmp
cmp
imull
repnz
cmp
leave
clc
neg
call
aam
loope
loope
imul
icebp
lret
sub
xchg
in
stc
call
hlt
cmp
loopne
iret
fcmovu
xlat
out
in
sar
ffree
cli
xchg
int
int3
mov
in
cmp
aad
aam
jecxz
shl
sbb
int3
fld
enter
jmp
in
cs
out
lret
iret
aas
ds
cmc
call
jmp
fimuls
cmc
loope
aam
xor
rcl
call
cmp
fcmovnb
clc
sar
clc
call
iret
out
cmc
out
lret
aad
lret
push
in
mov
mov
xor
add
jmp
aam
lret
rcr
scas
cld
cmp
xchg
jle
cmc
cmc
loope
sti
cmp
repz
shl
aad
loopne
lret
fst
rcl
sub
xor
repz
loope
loopne
out
iret
jecxz
xchg
mov
int
xchg
mul
enter
clc
ss
iret
cmp
rolb
in
mov
iret
mov
call
in
rol
clc
jecxz
imul
aam
fcmovnbe
iret
out
repz
fcmovnbe
lret
testb
fcomip
lret
enter
cs
fcmovnu
cmp
fadds
out
repz
xchg
loope
loop
in
jecxz
fcmovne
lock
out
shr
int3
fnstcw
std
loope
ret
mov
cld
jmp
out
aam
icebp
call
jmp
cmp
int3
fucomip
test
aas
xlat
jmp
mov
pushl
sar
xor
ss
fcmovbe
xor
icebp
ret
loopne
out
out
adcb
xor
into
lret
cmp
cli
loope
not
cmp
clc
fyl2x
orb
in
iret
cld
mov
enter
hlt
fsubrp
cmp
sti
cmp
fsubp
clc
inc
cmp
ficoms
shr
aaa
out
aaa
aaa
leave
iret
loop
stc
shl
std
hlt
stc
std
jmp
xchg
out
iret
lock
ss
out
leave
faddp
cmp
fcmovu
mov
xchg
mov
repz
jmp
rcr
xlat
jmp
adc
aas
xchg
cmp
call
mov
nop
fucom
mov
repz
xor
xlat
aaa
cmp
rcl
shl
cld
icebp
cld
fidivrl
fcmovnu
cld
xchg
into
hlt
in
int3
in
out
lock
shll
sarb
stc
icebp
cmp
sti
loopne
enter
ljmp
ror
rcl
cmp
push
aas
clc
icebp
std
cmp
rol
xchg
jmp
in
enter
mov
neg
shl
clc
shl
adc
jecxz
jecxz
dec
jmp
cld
repnz
int
out
aam
aam
fistpll
hlt
aam
mul
fdivr
sti
test
lret
in
call
sub
ror
jmp
jmp
cmc
not
rcl
ret
aam
loope
clc
addl
leave
imul
mov
xor
sub
mov
mov
jmp
ret
enter
int
leave
mov
popf
in
bound
jle
cmc
lock
cmp
lock
cli
test
cli
cmc
xlat
in
mov
out
jmp
ljmp
fst
iret
lret
in
rcl
out
cld
xlat
out
mov
mov
ljmp
repnz
jmp
rcl
jecxz
cmp
add
out
jecxz
ljmp
xor
ss
shl
in
stc
clc
fld
mov
in
sub
repnz
mov
fadd
fsubrs
cmp
xlat
aam
lret
cmp
stc
rcl
clc
fdivp
mov
xchg
out
nop
cld
fmul
adc
sarb
ljmp
rol
in
out
ds
test
stc
aas
in
cli
call
out
jmp
out
leave
fmul
fidivs
aad
rcr
out
in
fst
sti
out
iret
fimuls
shll
out
idiv
loopne
adc
cli
sar
xchg
fnclex
jmp
int
mov
fmul
call
xlat
ss
in
xor
call
xchg
jmp
fdivrp
mov
mov
sbb
mov
icebp
cmp
cmp
cmp
jmp
fnclex
cli
loop
leave
cmp
rcr
iret
and
in
repnz
cmp
jmp
cmp
fdivrs
in
ret
fyl2xp1
fimuls
mov
mov
mov
call
hlt
xor
repnz
rcl
xchg
call
in
out
xchg
mov
icebp
ftst
into
jmp
cmp
out
mov
clc
shr
sub
enter
xchg
sub
hlt
das
fmulp
out
out
jmp
icebp
test
clc
repz
icebp
out
jmp
xchg
imul
ret
xor
int
in
call
cmp
aam
out
fucomi
xor
aaa
das
cmc
aam
lret
xor
test
test
cld
test
loopne
in
clc
icebp
decl
ljmp
sarl
std
loopne
aas
aam
cld
call
into
or
sub
shl
vaddsubpd
iret
fsincos
lock
ds
aas
ret
shr
mov
xchg
loopne
iret
aad
xor
aaa
cmp
cli
aam
std
repz
aam
jmp
faddl
xor
jmp
enter
fcmovne
fst
or
pop
push
mov
jle
add
cmc
idiv
into
hlt
fxch
into
cld
cld
lock
int
sbb
addb
jecxz
test
icebp
xchg
ljmp
loope
cli
lock
lret
int
jmp
incl
xlat
fsubr
call
nop
jmp
ret
aad
fst
enter
cmp
ret
leave
loopne
addb
mov
out
out
into
xlat
enter
fstpt
out
test
rcr
mov
cmc
jmp
jecxz
repz
in
xchg
enter
test
jmp
sar
fsubr
inc
aad
shl
faddp
bnd
fldln2
repnz
fdivrs
out
fiadds
hlt
hlt
aam
loope
mov
mov
mov
in
aam
icebp
icebp
icebp
enter
in
fiaddl
mov
clc
into
orb
aam
xor
in
lret
repz
test
mov
lret
sub
das
xor
repnz
repz
cmp
stc
std
out
iret
lock
lret
xlat
ljmp
test
cmc
aas
fsub
ror
jmp
cli
cld
cmp
rol
jmp
in
test
jecxz
nop
int
das
shll
fcmovbe
xor
out
cmp
rcr
shl
repnz
jmp
test
fildl
xchg
in
sub
idiv
hlt
in
aas
shl
aas
loop
into
in
cli
clc
fisttpl
out
xchg
shl
xchg
iret
aad
repz
cmp
int
loop
lock
call
mov
jecxz
out
mov
hlt
jecxz
cmp
int3
repz
fucomi
rcr
sti
xlat
testb
mov
test
jmp
not
ss
in
cmp
xor
ss
mul
in
fpatan
fucomp
enter
shl
test
sar
aam
fsubr
jmp
fst
aas
xor
aam
fadds
nop
jecxz
sub
icebp
ljmp
test
out
roll
in
loop
stc
enter
shr
out
shl
cmp
lret
cmp
idiv
fcomip
fnstsw
aam
jecxz
into
leave
enter
icebp
xchg
ljmp
aad
fsub
fadd
sbb
cli
roll
xchg
scas
sti
mov
xor
sub
jmp
ret
fmul
ret
int
dec
filds
lds
add
jmp
repnz
neg
leave
in
iret
f2xm1
cmp
dec
xlat
ret
stc
lret
int3
jmp
repnz
in
lret
cli
cmp
iret
cmp
aam
lock
fcomip
in
iret
mov
ljmp
roll
aam
ds
jecxz
loop
mov
dec
out
xor
repz
stc
out
div
cmp
ret
mov
lret
xchg
xchg
cmc
aad
repnz
fcmovne
stc
fcmovnbe
fucom
cld
std
cli
jecxz
out
fdivr
fimuls
shl
les
into
in
repz
out
repz
test
test
not
lock
lret
int
jmp
aaa
repz
xor
sti
fnstsw
lock
loop
fcmove
enter
lock
cld
shr
aas
iret
call
int
in
cmp
repnz
jecxz
loop
in
int
jecxz
loope
fdivrp
ret
jmp
ss
cmp
aaa
shll
jmp
xchg
xchg
mov
out
aaa
xor
cmp
into
cmp
lock
jmp
out
aam
inc
xchg
in
jmp
shll
iret
enter
fcom
or
loopne
rcl
shr
and
cli
lret
ljmp
xchg
call
jecxz
fnstsw
call
repnz
repz
cmc
std
sti
hlt
xor
int
orl
out
jmp
sar
cld
std
iret
aam
aam
aad
lret
lret
fsubr
repz
clc
cmp
out
int
ds
cmc
iret
fdivrp
ljmp
out
loopne
mov
hlt
fcomi
cmp
xor
xor
ret
aam
div
ret
mul
mov
push
cli
mov
mov
ss
clc
cmp
cmp
ret
repz
into
rol
hlt
dec
idiv
loope
int
out
xchg
rcl
idivl
xlat
cmp
iret
jmp
in
sti
in
fdivr
aas
aam
out
cmp
and
mov
xchg
out
call
cmp
shr
ds
sti
in
flds
cld
mov
cli
loopne
test
rcl
out
out
in
ljmp
ss
stc
idiv
cmc
sti
lea
cmp
jbe
mov
mov
jmp
rcl
into
test
mov
fwait
xor
xchg
jbe
jg
fiaddl
jle
test
sub
loope
fnstenv
xor
in
rcr
xlat
cld
in
and
hlt
sar
call
int3
out
in
loop
jmp
into
lret
fcmovnu
aam
flds
fadds
xchg
lret
lret
shlb
fnstcw
clc
clc
repnz
hlt
cli
out
loope
sub
fcmove
in
iret
xchg
fcomip
shr
out
shll
fiadds
out
repnz
add
lret
out
mov
jmp
cmp
rcl
cmp
fsub
sub
fdiv
test
jecxz
loop
lea
call
ret
cmp
in
fidivrs
ret
test
mov
cld
and
out
mov
loopne
mov
sti
ss
hlt
aad
lock
cli
cli
addb
in
test
icebp
test
mul
test
ss
aam
cmp
stc
fcmovnu
cmp
ret
lds
out
int3
shll
cli
out
cld
sti
ds
repnz
sti
loope
leave
repnz
in
loop
jmp
iret
fdiv
ljmp
cli
xchg
and
test
xchg
shr
cmp
sti
jmp
fsubr
cmp
neg
mov
stc
test
jmp
adcb
rcl
repz
aad
loopne
in
xlat
ret
fmulp
jmp
xchg
jmp
xor
sti
xor
std
cmc
out
fdivrp
jecxz
out
sar
out
testb
cmc
xchg
xor
xlat
in
xor
lret
ret
mov
xchg
ret
mov
int3
nop
jmp
cli
fcmovnu
icebp
div
sar
std
rcr
mov
out
ljmp
lret
shll
xlat
ret
hlt
cli
cmp
fcmovnu
stc
or
aad
add
mov
stc
nop
fiaddl
loop
lret
out
sti
fstpt
icebp
icebp
int3
repz
and
int
xlat
cli
cmp
sub
clc
xor
out
fpatan
cmp
aad
loop
sub
mov
fucomp
cld
mov
xchg
xchg
sar
xor
ljmp
jecxz
loop
addl
scas
xlat
mov
xor
jmp
rcl
leave
int
aad
or
out
loop
sbb
fiaddl
jle
xlat
sub
test
std
int3
xchg
nop
xor
xor
out
ror
xlat
int3
out
loop
cli
xchg
jmp
lret
xchg
lock
sub
cmc
out
enter
aam
jmp
in
hlt
xor
ljmp
out
xlat
hlt
lret
into
iret
repz
iret
fstp
sti
out
fiaddl
leave
jmp
fucomip
mov
test
xor
int3
cmp
repz
xbegin
mov
mov
out
stc
cmp
in
cli
fxtract
cmp
aas
incl
and
out
xchg
xchg
in
lret
out
aad
stc
lret
xor
in
fisttpll
xchg
in
cmp
aaa
out
leave
cmp
cmpl
out
cli
enter
and
icebp
lock
shrb
repnz
aam
into
jmp
fsubr
stc
rol
idiv
rorb
stc
rclb
loopne
xor
shl
repnz
cli
sbb
cmp
jecxz
in
out
test
fsubrp
clc
not
lret
cmc
xor
lret
std
fsubp
hlt
sti
aad
lret
dec
int
int
ror
lock
ret
xlat
in
cli
ljmp
in
in
repnz
loopne
enter
std
fmuls
pop
jmp
stc
cld
in
das
jmp
fsubr
hlt
std
in
enter
clc
xchg
mov
dec
loopne
in
out
ret
cmp
cmp
stc
fnstsw
jmp
sar
xlat
ret
addb
enter
shl
xor
shlb
xor
shl
xlat
xor
hlt
lret
fdivrp
ret
test
cmc
fimull
out
jmp
xlat
xor
shl
ss
loope
jmp
cmp
out
in
test
rorb
cli
aaa
cli
in
out
cmp
lret
shr
fsub
mov
fdivr
mov
in
loop
mov
xchg
shr
into
out
cmp
jmp
hlt
repnz
out
idivb
add
fmuls
mov
hlt
call
fdivr
incb
roll
out
into
in
repnz
xchg
ss
xor
out
out
shl
rcl
fucom
addb
mov
lea
mov
mov
jmp
rcl
iret
aad
cmp
loop
lahf
cmp
scas
pushf
jg
fiaddl
jle
cmp
fadds
flds
cmp
jmp
not
aad
jecxz
cli
aas
test
test
in
xor
ljmp
rcl
rol
std
shl
fmulp
clc
lret
inc
sti
sub
lea
fcmovb
enter
lock
rcl
sar
mov
test
out
std
lock
cmc
ror
fld
repnz
hlt
not
std
repnz
cmp
out
jecxz
imul
clc
in
addl
xor
cli
in
into
jmp
test
mov
in
in
mov
fcmovnu
call
aaa
fcmovnu
cmp
aaa
sbb
filds
ljmp
leave
xchg
call
lret
cli
rcl
aaa
int3
loopne
cmp
roll
out
test
out
popl
repz
enter
leave
xlat
cmp
cmp
rcr
shl
xor
inc
out
add
and
repnz
jmp
in
jmp
push
lock
cmp
loop
fnop
call
jecxz
mov
jecxz
jecxz
mov
cmp
cmp
int
jmp
idiv
cmp
in
xchg
int3
into
jmp
leave
xor
out
xor
lret
enter
fcmovu
aas
in
flds
test
mov
mul
stc
ds
cmp
aad
jmp
in
orb
aad
xor
cli
call
repz
faddp
xor
repz
out
stc
int
movl
ror
rcl
out
sbb
iret
loopne
loop
les
out
out
lret
repz
sar
shl
iret
aam
cmp
int
in
repz
loope
clc
fninit
sbb
add
xchg
aam
in
lret
clc
cmp
shll
mov
jmp
call
test
repnz
cli
idiv
mul
frndint
cmp
clc
repnz
fmuls
orb
lret
into
enter
stc
xor
loopne
xchg
mov
fcomp
xchg
jmp
out
jecxz
repnz
xor
xor
jmp
iret
ret
rcr
fxch
in
incl
mov
or
jle
lock
fcmovne
frndint
jecxz
int3
in
out
test
into
rol
in
shl
icebp
cmp
aam
cmc
xchg
cmc
sar
sti
ret
testb
addb
aaa
out
stc
repz
shl
jmp
in
repnz
mov
aad
int3
test
cli
mov
in
cmp
cli
fidivs
lret
jmp
out
fld
test
in
mov
mov
bnd
enter
aad
out
cmc
lock
filds
fldl
mov
in
enter
in
fucomp
enter
in
cld
addb
jmp
fcmovu
lock
icebp
shll
into
icebp
cmp
into
out
aad
cld
hlt
int
cmp
test
aam
sti
cli
aas
stc
jmp
loope
mov
xor
out
sti
int3
repnz
rol
out
sti
int
repnz
cli
fiadds
mov
mov
int
int3
xor
lret
clc
lock
sar
clc
in
ret
out
jmp
jecxz
call
lret
cld
icebp
xor
std
cmc
icebp
xlat
cmc
xchg
adc
std
call
leave
lret
std
hlt
in
aad
xlat
ljmp
sar
int
clc
stc
in
sbb
testl
out
cmp
jmp
cmp
in
jecxz
cmc
rol
dec
stc
out
jecxz
in
aad
stc
iret
shl
out
cmp
fadd
fdivrl
ret
loope
enter
in
loopne
out
fimuls
int3
rol
call
ds
aam
loopne
orb
mov
int3
nop
out
out
ror
out
enter
ds
cmp
mul
std
cmp
sti
sub
mov
clc
in
repnz
jecxz
xor
out
out
xlat
cmp
loop
sar
call
mov
loope
loope
nop
lret
int3
jecxz
loopne
xor
fcomi
cmp
shl
out
call
mov
out
in
lock
out
test
icebp
fcomi
leave
jmp
cmp
out
vpsadbw
mov
in
xchg
dec
jecxz
divb
xlat
stc
fcmovbe
cld
cmp
cmp
cmp
in
out
mov
ljmp
loop
jmp
jmp
mov
jmp
aam
fstp
fcmovnbe
push
cltd
sahf
mov
out
jg
fiaddl
jle
fdivp
xor
xchg
stc
shl
jmp
testl
out
rcl
jmp
cli
jmp
sti
out
fcomp
jmp
idiv
into
xchg
jmp
xor
mul
sti
cmp
std
fdivr
out
out
ret
xchg
stc
loope
int3
cld
cmp
xchg
fucomip
cmp
aad
shl
ljmp
bnd
fcmovb
nop
in
fsubp
xchg
test
loopne
lret
enter
fucomp
int3
shl
cmp
shl
jmp
jmp
into
enter
repz
sti
sarb
rcl
filds
ror
cmc
fsubr
ret
loop
in
out
into
out
in
out
in
shr
fdivs
test
sbb
mov
fldl
icebp
out
ror
out
jmp
std
aad
int
test
shl
xchg
mov
rclb
sub
in
iret
xor
sar
iret
shl
test
cmc
out
hlt
add
cli
in
test
out
cmc
xchg
shll
xor
fstpt
int3
cmp
cmc
loopne
inc
repnz
out
sub
mov
mov
cld
mov
in
lock
clc
out
rcr
cmp
stc
loope
ret
xlat
mov
repnz
xchg
sub
iret
shr
stc
cs
ror
fucomp
add
repz
mov
jmp
out
enter
icebp
xchg
loope
mov
int
repnz
out
fdivrl
shl
fadds
sti
mov
repz
cmp
jmp
shll
fcmovne
iret
ret
roll
clc
out
lret
iret
enter
ljmp
lret
cmp
fildl
inc
mov
fcmovb
jmp
fldl
enter
leave
hlt
fdivrp
lret
cmpl
in
sti
in
iret
fldlg2
jmp
aam
xlat
in
fsubr
cmp
ds
in
testl
test
mov
jmp
adc
cmp
cmp
fsubr
cli
hlt
sarl
cmc
repz
loop
and
lret
int3
loope
in
stc
xlat
lret
ljmp
test
shl
std
sub
leave
loope
movl
sub
jmp
leave
rcr
fcomp
cmc
pop
fildl
pop
pushf
pop
inc
mov
jle
out
div
idiv
out
lock
cmp
rcr
fdiv
int3
imul
out
iret
mov
loopne
out
xor
icebp
in
lock
lret
or
cli
aad
hlt
loope
aas
loop
sti
roll
aad
cmp
idiv
int3
hlt
inc
out
cld
in
faddp
rcl
ret
cmp
jecxz
fdivrp
out
in
out
fdiv
out
bnd
fiaddl
mov
cmp
cli
in
nop
aad
xor
jmp
clc
jmp
cmpb
fdivr
repnz
cmc
test
call
sub
xchg
shlb
ret
dec
adc
cli
loopne
leave
in
cli
loope
fistl
xor
repz
icebp
rol
jmp
fsubp
in
fadd
std
jecxz
mov
call
cmp
test
jmp
cmpl
aad
loopne
loope
mov
int3
sbb
repnz
fxch
lret
sarl
lock
icebp
xlat
cmp
enter
movl
icebp
cmc
xlat
xor
jmp
adc
filds
jmp
out
out
shl
xor
sar
int3
rcr
jecxz
fcmove
call
jmp
jmp
loope
cld
repnz
xchg
lret
ljmp
sub
in
loope
rcr
lret
lret
int3
mov
lock
xor
out
into
test
cld
out
xlat
addl
mov
xor
idivl
fcomi
aas
aad
ret
fadd
fldl
mov
cmc
and
fcmovne
cmp
int
cmc
cmp
loopne
addl
in
cmc
jecxz
xor
jmp
adc
fnsetpm(287
aad
enter
fucomip
out
fmul
xchg
cmp
lret
ror
ss
ret
std
testb
xchg
xchg
aad
shl
fcmove
leave
lret
xor
cmpl
icebp
in
mov
mov
xchg
lock
into
xlat
cmp
ds
aad
loop
sbb
in
enter
loop
stc
call
in
add
jmp
rcl
iret
aam
aad
sarl
cmp
push
cmpsb
jg
fiaddl
jle
int3
call
cmp
stc
lret
hlt
ret
out
cld
hlt
fsub
lret
jecxz
mov
cmc
out
cmp
hlt
fiaddl
call
int
nop
jecxz
divl
cld
rcl
fsubr
cld
cmc
fdivr
fdivrp
fldl
into
orb
in
loop
int3
ret
clc
jmp
call
add
leave
xchg
jmp
mov
lock
repz
cmc
lret
hlt
aam
aas
shl
test
cld
mov
mov
jmp
hlt
lock
fdivrs
xor
in
icebp
out
fiadds
lret
jecxz
lock
into
loopne
aas
xor
shr
out
out
xor
test
into
loope
mov
ret
loop
orb
out
fcmovu
ss
div
fcmovnbe
sti
hlt
rcr
xchg
xlat
xor
and
int
cmc
loopne
fcmove
out
stc
out
stc
in
call
fdivr
loop
fdivr
stc
fmul
cld
std
jmp
lret
icebp
ret
in
stc
leave
fcomi
aas
xlat
int
lock
adc
int
cmp
clc
flds
stc
sar
mul
fsubr
in
jmp
test
idiv
jmp
mul
rcr
test
sti
ret
rorl
into
sti
mov
jecxz
mov
lret
ss
aas
cmp
rcr
shr
cld
xchg
test
fildl
iret
in
out
out
fcomi
cmp
lock
hlt
ffree
cmc
xchg
aad
test
vpminub
lret
in
rorb
rcl
shr
shr
loopne
cmp
out
in
shl
xchg
fiaddl
aas
ljmp
cmp
cmp
cmp
aas
in
push
mov
out
in
mov
into
test
rcl
out
fcmovne
sti
xor
leave
lock
hlt
fiadds
mov
in
xor
shr
xor
xlat
shl
ds
cmp
int
aas
cmp
call
cli
mov
shr
jmp
fld
aas
xor
repz
fld
loope
leave
fdivr
mov
clc
xor
add
jmp
rcl
aad
aad
fstp
aam
xor
inc
lock
cli
test
jle
add
fdivp
hlt
in
jmp
out
xor
in
idiv
cmpl
jmp
loop
test
ljmp
fxch
aad
sbb
out
decb
test
in
in
in
fimuls
call
aam
aam
icebp
ds
out
in
fucomip
cmp
jecxz
cmc
shl
sub
sti
int
stc
into
xorl
in
std
enter
jmp
imul
repz
cmc
xor
iret
fdivrp
ds
cmp
out
mov
xlat
out
enter
xchg
int3
test
out
in
cmp
in
int3
loope
aam
out
std
ret
out
aam
lret
stc
std
mov
rcll
out
aad
lock
leave
call
aas
clc
sarb
and
clc
sbb
lret
icebp
into
adc
repz
clc
loopne
rcr
cld
fsub
rcr
sti
test
sti
int
xor
shl
in
ror
lret
cmp
test
addl
loope
mov
xor
xor
iret
enter
ffree
ret
sti
sti
out
fstp
clc
cmp
fsubr
fimull
loope
stc
xor
aad
in
out
cmp
into
sar
loopne
shl
call
fsub
hlt
rclb
mul
xlat
rcr
imul
cli
add
xchg
ret
mov
jecxz
in
mov
enter
mul
in
out
sarl
repz
out
sar
aas
fnsetpm(287
hlt
sub
out
cld
test
lret
out
xor
enter
fnstsw
lret
aam
loop
sar
repz
rorl
loop
in
in
xor
ss
leave
cli
cmp
sti
std
fiaddl
loopne
mov
jecxz
fucomi
out
ficoms
xlat
fdivr
iret
cli
int3
aas
idiv
out
call
fmuls
mov
cmc
aad
in
xor
xlat
out
cmp
repz
cmp
inc
cmp
loope
hlt
fadds
rcl
int3
loopne
aam
icebp
sti
in
repnz
xchg
jmp
decl
jecxz
xor
loope
aam
cmp
fdivr
hlt
jecxz
clc
iret
out
xchg
leave
in
cld
out
scas
shr
je
add
rol
lret
ror
int
aam
jge
mov
jle
add
lret
mov
cld
aam
shl
xor
xor
jmp
dec
std
ds
fcmovbe
loop
fld1
jmp
leave
mov
cli
out
out
xlat
imul
jmp
out
lret
ret
ret
ret
hlt
shl
enter
loopne
mov
decl
xor
int3
fstpt
aad
repnz
ret
fcmovb
stc
repnz
out
aad
call
call
cmc
repz
and
xchg
and
loope
loopne
lock
xor
fdivs
int3
leave
loopne
icebp
aas
lock
in
ljmp
shl
idivb
aad
icebp
xor
std
shl
iret
and
ffreep
mov
rcl
in
loopne
enter
shl
in
cmp
bnd
xlat
ret
out
stc
mov
xchg
lret
test
in
cmp
loopne
iret
aam
testb
test
ljmp
loopne
ss
call
lret
out
std
aas
int
loop
out
fsubrp
cmc
loop
jmp
ss
in
in
aas
sti
stc
into
mul
test
ret
fcmovnbe
repnz
cld
decb
test
int3
out
cmp
push
aam
loopne
shl
and
fsub
call
test
xchg
xor
repnz
stc
shr
cmp
lock
test
out
out
fldl
cmc
aaa
int
imul
call
out
cld
lock
loope
xchg
ljmp
xlat
lret
cmp
clc
in
idiv
fcmovnb
sbb
in
fimuls
mov
into
xor
rcl
aam
test
test
in
int3
icebp
in
imul
shr
jmp
test
rol
xchg
out
clc
in
jmp
cmc
out
pop
jmp
rcr
rcl
lock
jmp
iret
sti
xlat
mul
rcr
mov
mov
xor
cmc
ret
ss
xor
hlt
xor
std
test
sar
std
jmp
lea
in
hlt
int3
les
bnd
jmp
repz
shr
out
cmp
jbe
jmp
int
lret
lret
int
mov
dec
add
lods
jg
fiaddl
jle
ljmp
in
xchg
ljmp
iret
dec
sti
std
cmp
test
ffreep
lret
sti
mov
loop
addb
out
fstpt
lds
cmp
jmp
adc
cld
fdiv
cmp
call
in
loopne
fucomi
mov
call
fyl2xp1
iret
int
aas
shl
and
sti
fcmove
in
stc
or
out
jmp
shl
cmp
ret
out
mov
cli
stc
cld
xchg
hlt
test
out
out
into
aaa
rcl
ljmp
clc
fstp
ljmp
out
cmc
xchg
jecxz
inc
test
add
cli
aas
std
std
aam
orl
add
shr
icebp
shlb
ret
imul
enter
cmpb
addb
sub
repz
repnz
enter
call
loope
sar
ffree
fcmovnb
int3
idiv
jecxz
orl
in
fstpt
roll
std
rcl
cmpl
jmp
jmp
not
aad
sar
cld
cli
clc
ror
out
cmp
adc
jmp
ljmp
cmc
in
in
repz
fdivrl
loope
test
fistpll
icebp
lds
incl
xor
xor
out
xor
jmp
test
shl
cmp
in
jmp
call
xchg
mov
ret
fcmovnb
idiv
repz
sbb
rol
icebp
icebp
aad
lret
cli
test
int3
or
cld
ljmp
out
aad
aad
out
iret
aad
stc
test
in
and
sti
in
xchg
out
out
cli
aaa
sarl
jmp
in
std
aas
in
loopne
stc
test
in
fisttpll
in
cmc
cmc
shr
idivl
xor
icebp
test
faddl
mov
xchg
repz
dec
jmp
into
cmp
rcl
xor
out
out
cmp
fcmove
loopne
leave
out
loopne
ror
xchg
xchg
hlt
int
jmp
ror
int3
into
lds
vpmulhw
jecxz
loop
shrb
lock
into
cli
out
sar
pop
jmp
ror
ror
aad
inc
push
jle
scas
jg
fiaddl
jle
inc
repnz
aad
out
iret
std
std
mov
lock
xchg
xor
in
xor
out
lret
loop
cmp
iret
loop
out
mov
mov
out
mov
aaa
xor
cli
loope
fsub
out
rcr
loopne
fisttpll
mov
xor
rcr
ljmp
lret
in
aad
lock
fucomp
std
sub
mov
das
aam
ss
cmp
adc
shl
call
nop
xor
test
jmp
aas
int
into
out
ret
repnz
jmp
in
jmp
fmuls
in
lret
lock
cmp
test
and
in
filds
xchg
xor
xor
out
xor
lret
mov
xlat
enter
repnz
out
test
fsubr
aam
or
cmc
call
mov
clc
mov
or
shl
fsubr
stc
xlat
cmp
in
hlt
fcmovbe
std
fiaddl
aam
out
shll
hlt
out
fsubr
rcl
aam
aam
fdivrp
repz
mov
cli
jmp
xchg
hlt
ljmp
jmp
cmp
lret
mov
out
test
ror
das
fdivrs
ss
out
shr
cmp
xlat
mov
jmp
out
jmp
mov
sub
aaa
std
repnz
sarl
repnz
ds
in
addl
in
xchg
shl
xchg
xor
in
int3
iret
stc
out
in
loopne
loopne
shl
repnz
stc
sar
fdivrp
fdivr
mov
sti
xor
ret
in
enter
icebp
sar
not
fdivr
mov
jmp
into
in
dec
fistpll
ror
iret
xor
aaa
repnz
testb
rcr
xor
lea
in
out
cli
lret
icebp
leave
cmp
xor
cmp
sarb
lret
lock
in
xchg
into
les
std
call
fcomip
cmp
iret
cmc
test
call
loope
cli
sti
lret
in
in
out
sti
imul
ss
fdivr
pop
leave
ret
push
mov
sub
addl
push
andl
push
addl
push
push
addl
push
call
mov
andl
test
movl
je
andl
lea
push
andl
push
xorl
call
addl
push
addl
call
mov
test
je
movl
mov
jmp
mov
movl
jmp
push
push
push
movl
call
movl
mov
mov
movl
cmp
movl
jne
pushl
push
adcl
push
push
orl
call
inc
movl
cmp
jb
movl
inc
movl
cmp
jb
sbbl
push
call
orl
movl
movl
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
andl
xor
xor
inc
mov
cmpl
jne
push
call
cmpl
jb
mov
mov
sub
sub
movl
andl
xor
add
inc
mov
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
movl
cmpl
je
cmpl
jne
pushl
call
mov
dec
mov
jmp
lea
sub
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
push
call
cmpl
jne
mov
inc
mov
jmp
add
lea
mov
xor
mov
mov
xor
mov
mov
xor
mov
mov
andl
mov
inc
mov
cmpl
jne
pushl
call
cmpl
jb
inc
mov
xor
xor
mov
andl
xor
add
inc
mov
cmpl
jne
push
push
pushl
pushl
push
call
cmpl
jb
add
mov
movl
mov
cmp
movl
mov
mov
movl
je
mov
xorl
xor
subl
add
imul
movl
mov
movl
jmp
mov
adc
xor
and
add
or
mov
andl
mov
inc
mov
cmpl
jne
pushl
pushl
pushl
pushl
push
push
push
push
pushl
push
pushl
pushl
push
call
cmpl
jb
mov
add
xor
add
add
movzbl
and
mov
orl
mov
xor
mov
adcl
xor
xorl
add
cmp
jne
subl
push
orl
pushl
andl
pushl
call
xorl
mov
notl
mov
mov
negl
mov
mov
or
mov
mov
sub
movl
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
pushl
pushl
push
call
cmpl
jne
mov
inc
mov
jmp
movl
cmpl
je
cmpl
jne
push
push
push
call
cmpl
jne
mov
dec
mov
xor
or
dec
mov
jmp
movl
cmpl
je
cmpl
jne
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
movl
mov
orl
xor
add
jmp
sbb
mov
xor
sbb
lea
mov
and
mov
movl
cmpl
je
cmpl
jne
pushl
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
xor
movzwl
xor
lea
mov
mov
neg
mov
add
movl
adc
mov
sbb
movl
or
mov
dec
mov
xor
orl
add
movl
cmp
movl
je
xor
mov
xor
add
sub
mov
sbb
mov
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
xor
movl
cmpl
je
cmpl
jne
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
and
mov
sub
mov
sub
add
movl
mov
cmp
ja
mov
mov
xor
add
imul
xor
add
mov
mov
mov
mov
mov
mov
xor
lea
mov
xor
mov
sub
add
mov
cmp
jbe
mov
mov
mov
xor
lea
mov
mov
xor
xor
add
mov
xor
lea
mov
cmp
jbe
mov
mov
mov
mov
mov
mov
pushl
sub
pushl
xor
mov
pushl
call
sub
xor
mov
mov
mov
xor
add
xor
div
mov
cmp
je
mov
jmp
mov
mov
mov
mov
movl
movl
mov
xor
add
mov
movl
movl
movl
movl
mov
xor
add
mov
movl
movb
mov
xor
add
mov
mov
xor
add
mov
mov
xor
add
mov
mov
xor
add
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
cmpl
je
lea
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
test
mov
jne
mov
xor
add
test
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
xor
mov
sub
sub
mov
add
mov
mov
mov
mov
xor
sub
mov
lea
incb
inc
push
pop
dec
xchg
decb
pushl
mov
mov
pushl
lea
pushl
lea
pushl
lea
pushl
lea
pushl
xchg
inc
push
pop
call
lea
mov
mov
add
mov
lea
movl
mov
movl
mov
xor
movl
mov
add
cmp
je
mov
xor
add
jmp
mov
mov
xor
add
imul
xor
add
mov
mov
mov
mov
mov
mov
xor
lea
mov
xor
mov
sub
add
mov
cmp
jbe
mov
mov
pushl
lea
push
call
mov
mov
pop
pop
pop
leave
ret
push
mov
jmp
fmul
ret
ror
fst
repz
push
insb
pop
adc
jg
pop
add
int
in
loopne
out
int
in
repz
test
fcmovu
ds
rcl
cmc
aas
call
rol
repnz
xchg
fneni(8087
xchg
int
in
xchg
aam
jmp
lret
int
fildl
out
and
jmp
call
mov
shl
test
sar
lret
shl
loopne
icebp
add
cli
xchg
roll
stc
out
fcmovbe
adc
stc
rol
icebp
addb
cmc
out
cmp
cld
repz
mov
jecxz
ret
cmp
in
aas
xor
jecxz
adc
aad
fadds
fucom
out
fsubr
shr
int3
int3
ss
icebp
lock
cmp
iret
fsubrp
fmuls
call
and
rcr
jmp
cmp
jmp
int
cld
test
jmp
jmp
xchg
out
shr
lock
repz
out
ss
sbb
rcl
ret
fmul
mov
xchg
fcmovnbe
jmp
repnz
lock
shlb
rcr
test
in
out
enter
jmp
repnz
rcl
out
cmp
fdivrs
leave
cmp
clc
test
repz
cli
out
test
in
fmull
mul
int
out
xor
test
sti
aam
clc
std
fildl
in
xor
aad
int3
fdiv
sti
aam
div
sar
and
ljmp
mov
ljmp
iret
call
fmul
filds
cld
fucom
cmc
in
ret
loopne
enter
out
in
nop
ret
das
xor
aad
fcomi
cmpb
addb
xlat
xor
jecxz
int
fimuls
aaa
stc
cmp
leave
fcmovne
cmp
cld
sar
sti
xor
cld
loop
into
mov
jmp
jmp
fdivrp
ffree
clc
in
call
int
leave
jmp
into
xor
cmp
in
out
hlt
aaa
ds
cld
int3
ds
in
cld
jecxz
xlat
in
in
adc
mov
into
repnz
cld
leave
enter
std
rolb
in
popl
test
rol
ss
sarb
into
cld
icebp
cmp
repnz
shl
cli
mov
ret
leave
movl
sarb
cmp
xor
out
icebp
lret
cli
shl
loop
test
mov
cli
in
jmp
in
loope
test
xlat
aam
cmc
aad
in
div
fcmovu
mov
les
repnz
fyl2xp1
out
repnz
cmp
jmp
test
icebp
ljmp
fcmove
cs
xor
test
test
add
cmc
add
add
aam
leave
leave
fst
fsubrl
std
sub
pop
andb
pop
add
xor
ret
out
repz
out
fimuls
xchg
call
clc
hlt
cli
jmp
adc
testl
in
cmp
in
sub
jmp
rcr
loop
rcl
std
fdivr
cmc
mov
lret
loop
jmp
aam
cmp
clc
loopne
loop
roll
ret
fisttpl
ljmp
iret
xlat
in
aas
rolb
fcompp
mov
xchg
int3
icebp
out
aam
xor
out
test
div
in
fmuls
int
int3
loopne
shr
in
iret
stc
aaa
lock
rcl
cmc
ret
in
cmc
sub
cmp
xchg
xchg
xchg
call
divl
aaa
in
fcmovu
xor
xlat
iret
iret
fld
loop
call
loopne
cld
out
dec
xchg
fdiv
int3
out
jmp
out
cmp
fdivrs
not
xchg
decl
xchg
out
leave
cli
fcmovne
cmp
ds
incb
into
adcl
leave
repz
jmp
testb
fcmovu
xchg
mov
in
cld
dec
cld
into
in
out
ljmp
in
in
cmp
stc
fsubp
in
leave
fsub
loopne
stc
xor
lret
xchg
int
repz
xor
int
ds
loopne
rcr
ljmp
out
mov
cmp
fdivrp
shll
rcr
shl
xchg
test
fucomi
mov
repnz
call
lret
repnz
ror
lock
xchg
rol
and
addb
lret
aaa
vshufpd
xlat
loope
addb
fisttpl
in
test
fsubp
hlt
call
int
lock
aaa
rol
fdiv
cli
addb
out
xchg
dec
test
div
clc
fmulp
ljmp
hlt
sub
out
jecxz
jmp
out
leave
into
icebp
cmp
fsub
loope
ret
mov
lea
fildl
clc
out
xbegin
call
fcmovne
fld
in
ds
fadds
ljmp
aad
ljmp
in
ffreep
in
stc
jmp
lea
xchg
orl
lock
inc
repnz
fcos
into
rcr
shr
clc
cmc
ret
cmp
jmp
std
fdivrl
test
in
sar
mov
xchg
into
repnz
rorl
jmp
mov
jmp
int3
iret
xlat
ffree
fst
loope
sub
stc
and
inc
movsb
mov
jle
add
fnstsw
xor
int3
mul
rol
jmp
nop
fcmovne
mov
lret
enter
ljmp
aas
jecxz
cld
in
cld
in
cld
into
call
out
in
cmp
sti
dec
fdivrl
testb
fimuls
cli
orb
imull
stc
repnz
in
lret
sbb
div
repnz
test
sub
in
in
cmp
sti
cmp
loope
int
std
out
jecxz
jmp
lret
into
call
ret
lds
lock
cmp
neg
in
fdivr
aad
mov
loopne
roll
das
xor
aaa
leave
jmp
rcr
repz
test
sbb
int3
mov
icebp
xchg
mov
xlat
icebp
icebp
icebp
icebp
ljmp
sar
sti
in
loopne
xchg
mov
xchg
lret
lock
shl
repz
ror
into
jecxz
ret
xchg
loope
in
xchg
int
into
ljmp
lret
ljmp
fdivrs
lret
in
fldln2
loop
mov
fsubr
divb
xlat
cmp
jmp
lret
aas
aas
jecxz
xlat
fildl
ret
mov
xchg
xchg
repz
jmp
das
in
ss
out
jmp
out
cmc
aas
cmp
loop
dec
sub
loopne
hlt
lock
repnz
hlt
out
int3
loop
shl
rol
mov
ljmp
mov
xchg
rorl
out
iret
call
out
push
aam
stc
shl
test
sbb
jmp
lock
xor
aas
int
cmc
fst
sbb
bnd
in
rolb
repz
fcmovnu
aad
cmp
cmc
xchg
fimuls
mov
fiadds
int3
loopne
in
sub
iret
repz
xlat
fcmovu
iret
sti
ret
neg
mov
lret
leave
cld
repz
jmp
aad
fmul
repz
hlt
icebp
sti
repz
clc
xor
jecxz
fucomip
faddl
sub
ss
idivl
fcom
cmc
fdivr
fcom
div
add
call
icebp
jmp
ss
into
jmp
fcmovne
flds
in
out
out
out
or
int3
hlt
in
aam
clc
sbb
shl
aam
jecxz
out
xchg
fcmovu
jecxz
test
cmp
cs
xor
in
xlat
cmc
rcr
fpatan
lds
mov
addb
ljmp
cli
lock
cmp
fxch
aad
mov
jmp
divl
stc
lret
or
jmp
ret
ror
aad
and
nop
pop
cmpl
ljmp
shl
ret
out
cmc
mov
nop
enter
out
jmp
cld
shr
into
sti
sar
in
in
adc
xchg
mov
fadd
decb
addb
jmp
lock
cmp
cmp
loopne
in
jecxz
loop
mov
shl
mov
out
fmul
stc
cmp
fsubr
cmp
in
test
shl
rol
cmc
int3
fmul
into
in
jmp
lret
loope
aam
xor
fmul
xorl
xchg
std
mov
int3
mov
repnz
hlt
call
leave
ljmp
in
in
sub
xchg
loop
jmp
in
ror
xor
sar
rcr
fiadds
test
int3
loope
cmp
lret
test
shr
cmc
ljmp
cmp
mov
jmp
mov
out
loopne
aad
stc
icebp
xor
stc
cmc
int
iret
loopne
out
std
out
enter
cld
mov
out
cli
loopne
fmull
cli
lret
in
aad
aad
loope
fscale
hlt
fldl
flds
into
ljmp
shl
xor
int3
cld
imul
aam
stc
out
ret
shl
repnz
div
fsub
loope
cli
xchg
test
jmp
sarb
add
cmc
fnstsw
fcmovnb
std
cld
orl
cmp
lock
loope
shl
aad
cmc
lock
xor
xlat
fsubp
xchg
in
out
incb
out
in
out
dec
clc
cmp
cld
loop
fimuls
mov
jecxz
loope
icebp
loop
lock
cmp
aad
lret
out
loop
rcl
fcmovnu
jecxz
out
cld
out
out
out
loopne
leave
aad
in
idivl
fcmovb
xlat
aad
out
faddp
loope
mov
int
lret
int
lret
lret
lret
cmp
xlat
neg
aas
cmp
ret
cmp
out
fsubr
xchg
mov
mov
xor
clc
iret
fsin
icebp
xor
into
ret
not
mov
std
xchg
into
in
cs
repz
out
call
stc
lock
not
clc
stc
enter
sbb
rcr
mov
ss
in
lret
aas
loope
loopne
std
cli
cmp
aam
sti
in
ljmp
out
cs
xor
fcmovne
jmp
cmp
ds
std
ret
sar
cli
not
fmull
shl
test
repnz
ljmp
aaa
fdivp
cmc
aas
add
in
aas
jmp
or
xchg
xor
cmp
int3
fdivr
lret
repnz
rcl
fdivrs
rcl
stc
out
in
sbb
mov
movl
mov
jmp
leave
int3
rcl
aad
int
mov
xchg
subb
fidivrs
jle
rcr
iret
xor
cmp
cld
enter
out
clc
incl
lret
xlat
std
call
out
in
out
loop
fdivr
call
cmc
sbb
test
fdivrp
aad
mul
or
jecxz
loope
loope
lock
cmp
ss
repz
aam
repnz
out
xchg
in
cmc
pushl
jmp
imul
leave
cmp
in
xchg
cmp
cli
out
fstl
xor
out
int
repz
int
hlt
in
repnz
mov
fsub
sti
nop
fdivp
repnz
xor
out
cmc
ss
adc
int3
hlt
fdivr
std
sti
and
in
in
test
jmp
aas
enter
cmp
aaa
cmp
int
repz
lock
xor
loopne
mov
xchg
in
in
iret
mul
in
int
cmp
jmp
stc
rorb
xchg
cld
std
jecxz
loope
sar
into
neg
int
sub
sarl
xchg
hlt
test
ret
in
int3
ljmp
imul
ret
into
repnz
cmp
aas
cmp
rcr
hlt
loopne
cmc
ret
sti
addl
out
jmp
cmp
lock
ljmp
enter
clc
in
sti
out
mov
ror
jmp
int3
xor
loop
loop
iret
cmp
cmc
in
and
mov
xlat
out
ss
enter
aas
test
repz
test
mov
enter
filds
xor
aad
leave
shr
fucomip
repnz
jecxz
jecxz
call
nop
iret
das
jecxz
stc
sarl
iret
lock
repz
jmp
mov
loope
int3
lret
ror
test
xor
lock
cld
hlt
hlt
mov
cli
mov
xor
lock
clc
ljmp
lock
ret
stc
cmp
fiaddl
loopne
inc
lret
int
hlt
lock
stc
cmp
enter
out
out
fildl
aad
hlt
stc
xor
ds
into
in
cmp
cmp
sbb
and
lret
ljmp
out
lret
leave
out
std
cmp
iret
in
sti
neg
clc
hlt
ret
test
jecxz
loope
xchg
out
lret
repz
shr
aas
ds
aam
jecxz
xchg
out
test
mov
hlt
roll
loop
icebp
aad
lret
iret
cmc
shl
in
neg
rorb
std
in
std
call
leave
out
xor
aas
shr
fnstcw
fmulp
mov
xchg
mov
enter
jbe
add
cmc
add
add
aam
aas
aad
iret
aam
adc
mov
in
lods
dec
cmp
jle
add
mov
mov
aam
enter
ss
sti
loop
clc
fmul
out
xlat
loopne
or
mov
shr
mov
int
hlt
shl
jmp
imul
lock
rcr
xor
sti
cmp
ret
loope
jmp
mov
lret
jmp
divl
out
sbb
cli
ss
fildl
xlat
std
out
int
repz
out
out
cmp
ror
cmp
cmp
in
out
ret
repz
addl
flds
imul
in
enter
ljmp
ret
fsub
std
lret
clc
cmp
xchg
lret
mov
ss
out
cmp
ffreep
out
xlat
std
cld
or
rol
sti
in
not
cld
mov
dec
xor
jmp
cmp
cmp
fdivr
in
test
jecxz
ret
lret
hlt
icebp
aam
loop
cs
cmp
in
in
ret
mov
cmp
mov
jecxz
loope
mul
leave
sti
rcl
int3
cmp
cld
loop
shl
clc
mov
leave
xchg
test
xchg
cmp
out
add
aaa
fucomi
sar
shl
loopne
in
std
fadds
in
mov
in
jmp
or
into
xor
enter
int
fstp
rcr
cmp
mul
adc
test
fcmovnu
out
repz
out
sbb
xor
cmp
in
repz
xchg
ret
out
mov
jmp
adc
jecxz
fcmove
clc
incb
sar
in
xchg
int
icebp
cmc
lock
ss
xlat
cmp
addl
fnstsw
loope
jecxz
addb
jmp
cmc
repz
in
test
sar
mov
bnd
in
ret
stc
div
xlat
leave
div
icebp
int3
in
roll
test
std
std
mov
nop
shr
jmp
aad
repnz
rcr
sti
not
in
cmc
clc
cld
hlt
test
xlat
adcb
hlt
iret
jmp
fyl2x
cmp
int3
repz
ret
incb
enter
sti
leave
xchg
test
jmp
iret
xor
out
cli
lret
out
sar
fdivr
cmc
repz
call
fcmovnu
int3
addb
stc
cli
idivb
rcl
xor
aas
xchg
test
mov
iret
enter
shr
xchg
xlat
repnz
lret
leave
iret
std
sar
aas
ret
sti
std
shl
fsub
xchg
orb
ror
les
fdivr
cmp
jmp
fiaddl
stc
not
lock
out
hlt
mov
sbb
xor
jecxz
aam
lock
in
ret
std
hlt
int3
stc
je
mov
mov
incl
xor
add
movl
cmp
movl
je
jmp
lret
rcr
fstp
fisttpll
inc
mov
sbb
jle
add
int3
or
aad
out
xlat
in
into
cmp
cmp
lock
cmp
ret
mov
in
enter
rclb
stc
cmp
aad
aam
cmp
div
ret
ret
jmp
lret
rcl
loope
mov
ret
out
repz
aaa
lock
lret
test
repz
sub
leave
cmp
xlat
xor
fcmovu
xor
stc
fdiv
not
hlt
jecxz
mov
int
mov
int
out
int3
rol
cmp
stc
sti
xor
fcomi
leave
or
aam
xlat
repz
lret
mov
mov
enter
mov
repnz
cld
cs
leave
shr
in
loope
ret
in
sti
idivl
mov
lret
xor
leave
leave
rcr
xor
fstpt
ljmp
sti
cmp
incb
int
call
nop
lea
call
rcr
out
div
jecxz
repnz
call
loop
adcl
f2xm1
out
sarb
fneni(8087
cld
shl
les
fnclex
std
popl
out
repz
out
leave
cmp
ljmp
jmp
jecxz
lret
out
jmp
sarl
mov
xlat
clc
xor
lock
xor
aad
leave
leave
fiaddl
add
xlat
call
test
icebp
nop
loope
out
lret
shll
int
sar
aad
repnz
aas
hlt
test
enter
lea
out
mov
dec
out
call
out
cmp
out
lret
hlt
adc
enter
fmulp
lock
out
xor
in
enter
clc
sarb
cmc
shr
aad
not
aam
leave
out
cld
fmulp
loopne
mov
xlat
mul
xor
jmp
fildl
rcl
std
div
out
test
in
out
aam
ror
xor
ror
ljmp
icebp
cld
xchg
vpsrad
xchg
ljmp
clc
fcmove
out
cmpl
into
fistpll
leave
testl
or
loop
clc
in
int3
lret
in
out
cld
test
sar
std
in
mov
jmp
in
in
out
mov
stc
cmp
rcl
cmp
rcl
aam
into
xor
test
enter
cld
xchg
cmp
call
aaa
out
enter
sti
lock
sbb
test
lock
enter
lock
aam
in
jmp
lret
out
test
mov
sub
in
out
cli
fsub
das
sar
stc
shl
cmp
in
in
and
inc
cld
sub
xor
andl
mov
inc
mov
cmpl
jne
push
push
push
call
cmpl
jne
xor
or
inc
mov
cmpl
jb
add
add
orl
push
xor
jmp
rcl
aad
aad
fstp
jns
fwait
mov
jne
jg
pop
add
addl
in
in
lret
xlat
cmc
cmp
ljmp
aam
out
ret
or
mov
out
xor
ljmp
sub
in
cmp
aad
aad
cli
loop
dec
rcl
in
das
call
iret
icebp
sar
stc
out
aad
rolb
std
faddp
enter
idiv
call
in
loop
fistpll
clc
ljmp
mov
lret
in
in
das
int
mul
out
int3
out
xor
loope
fucom
xchg
out
nop
cmc
xchg
lock
in
out
int
aaa
repnz
orl
fnclex
fst
loope
shlb
shlb
fidivs
cmp
loope
rolb
lret
sbb
sti
sti
jmp
int
xchg
fcomip
cli
lock
cmp
fstp
sub
roll
in
ffree
int3
test
popl
repnz
sti
lret
out
loope
rcr
stc
stc
out
adc
loopne
fsqrt
xchg
jmp
aam
int3
ljmp
div
lret
out
addb
jecxz
loopne
roll
icebp
out
aam
lds
cld
xor
test
std
incl
enter
icebp
ljmp
cli
out
jmp
aam
sar
shl
test
and
jecxz
fiadds
jmp
cs
leave
enter
cmp
cli
sti
idiv
movl
xchg
shl
in
clc
das
test
divl
xor
cld
out
fst
fucomip
lret
stc
out
test
in
lock
cs
iret
fsubr
cmp
stc
not
xchg
test
or
in
jmp
enter
icebp
leave
leave
cmp
aaa
shr
shl
inc
lret
mov
loope
in
mov
shrl
fnstsw
ds
aam
ret
jmp
mov
lret
rclb
imul
aaa
shrb
aam
int3
fstpt
aad
rol
in
repnz
fldz
mov
fmulp
cmc
ss
int3
sub
sti
out
xlat
clc
in
fnstcw
ret
mov
in
into
fimull
jecxz
rcl
into
fdivrl
enter
stc
lds
aam
fisttpl
rol
out
leave
xor
out
enter
repz
int3
out
cmp
jecxz
fdivr
loopne
icebp
loopne
in
rol
into
out
in
jmp
fldlg2
lret
cld
cli
add
sti
fmuls
jecxz
sbb
lock
aad
iret
repnz
cmp
aad
loope
loope
cli
fsincos
aad
jne
pushl
mov
jmp
rcl
int3
lret
fst
fstl
loop
jmp
dec
jg
pop
add
adc
fisttpll
xor
int
repnz
leave
cmp
cmp
idiv
cli
mov
out
ljmp
lret
sti
xor
into
in
hlt
call
cli
in
ds
mov
jmp
jmp
clc
repz
sti
lret
cmp
aam
fdiv
add
out
rcl
out
fmull
out
fucom
int
icebp
hlt
sti
cli
cmp
into
repnz
hlt
cmc
mov
xchg
mul
enter
out
mov
lret
clc
xlat
cmp
ror
clc
sarb
ret
cmp
cld
in
lret
test
frstpm(287
xchg
leave
in
shr
ror
loope
icebp
rol
ffreep
lret
or
xchg
mov
aad
in
not
out
lock
neg
clc
int3
loope
in
fisttps
fucom
orl
aad
repz
leave
rol
out
loope
not
mov
fcmovnu
stc
xlat
loopne
mov
int3
xor
out
fmul
div
cmp
fdivrp
clc
shl
add
xchg
orl
enter
int3
xor
fcom
test
rcr
cld
mov
mov
rcl
jmp
lret
sar
ljmp
sti
fcomi
aad
and
out
popl
imul
fsubr
xor
enter
hlt
cmp
and
or
aas
out
in
jmp
std
lock
repnz
cmc
xor
idiv
ds
out
fcmovb
test
test
mov
ljmp
fcmovnb
cmp
in
and
hlt
idiv
test
fimuls
shrl
ljmp
clc
fildl
fucom
jecxz
lock
lret
fdivp
jmp
aad
rcl
into
call
test
xlat
rcr
cmc
leave
fcmovne
fcmovne
out
fmul
xchg
loope
shl
int3
cli
cmc
lret
repnz
loop
aam
int
mov
adcl
loopne
std
into
sar
add
stc
lret
int
leave
out
mov
lds
cli
leave
int3
sti
call
cli
test
xchg
out
out
cli
test
hlt
iret
xchg
fdiv
shr
xor
out
cmp
fildl
in
call
int3
test
shr
stc
repz
jmp
fcmovnb
aas
cld
faddp
out
fisttpll
ljmp
out
out
out
jmp
into
clc
sbb
out
mov
out
jmp
in
ss
fcom
cmp
fsubrp
xor
in
sti
test
daa
add
jmp
aad
fnstsw
repz
dec
ret
dec
scas
dec
jg
pop
add
ds
fucom
jecxz
clc
lret
iret
xchg
loopne
or
cmc
shr
std
out
hlt
shr
in
fimuls
out
mov
out
jecxz
loopne
into
fdiv
aad
icebp
aaa
xor
aas
fstpt
loope
out
ret
fcmove
out
sti
out
jmp
shl
cmc
call
xor
aad
cli
lock
hlt
aam
mov
out
fsts
xchg
loope
cmc
out
ret
in
hlt
xlat
fcmovu
imul
les
shl
xchg
ljmp
test
in
fcmovnu
lds
mov
rorb
out
cli
out
shl
ffreep
shl
fst
shl
shr
shr
sti
sti
lds
aam
out
in
lret
fcmovnbe
fmul
loopne
out
jecxz
repz
test
in
loopne
icebp
in
lret
call
hlt
aam
cmp
idivb
roll
cli
xlat
test
stc
int3
loop
iret
adcb
out
leave
std
aam
int3
clc
aam
shl
icebp
jmp
int
in
iret
fsubr
hlt
clc
loope
out
cmp
out
repz
shr
aas
fcmovnbe
call
loop
stc
mov
out
lret
cmp
fld
xlat
int3
fdivrl
fucomi
stc
stc
aaa
cmp
rol
xlat
cmc
int3
dec
sbb
mov
xlat
fdivrs
iret
imul
icebp
clc
ds
fadds
cld
fucomip
fdivr
shr
enter
jecxz
xor
cmp
ljmp
in
cmpb
neg
stc
out
mov
call
lock
ljmp
enter
iret
fnstenv
loopne
cmp
cli
enter
fucomip
rolb
sar
hlt
xor
add
rcr
shl
mul
fcomip
call
leave
mov
lret
shl
rcl
clc
xor
fxch
in
lock
aad
ret
fisttps
xchg
fisttpll
out
cmc
fcom
cmp
icebp
aam
xor
xchg
ljmp
lea
ret
jmp
icebp
sbb
fcmovb
std
cld
jmp
ljmp
aam
lret
rolb
jmp
leave
leave
loop
mov
out
in
leave
int
icebp
out
fcmovnu
in
push
lock
xlat
cmp
fisttps
loopne
in
hlt
loop
ljmp
lock
add
orb
popl
loope
clc
rcl
std
lret
shll
xchg
xlat
div
in
ret
sti
fmull
jmp
repz
fsubr
sti
aaa
shl
loop
jecxz
or
jmp
iret
aam
aas
aad
iret
aam
ljmp
and
dec
jg
pop
add
in
rol
mov
mov
loopne
int
int3
and
xchg
repz
hlt
int
ror
cmp
xor
cld
testl
mov
xchg
cmc
ljmp
xlat
cmp
ljmp
cmp
loop
fucom
into
out
out
test
cmc
iret
rcl
in
icebp
cmp
cmc
std
jmp
std
out
cmp
call
lret
rcr
hlt
test
in
out
std
loopne
cmc
idiv
in
out
repz
fadds
loop
xchg
mov
mov
jecxz
fdivs
in
cld
fsubrp
loopne
jecxz
rol
fadds
test
jmp
lock
cmp
cmp
hlt
std
loope
cld
in
fsub
test
xchg
lret
repz
out
sub
rcl
in
cmp
loop
testl
xchg
xchg
out
mov
xor
cmp
std
in
cli
cmpb
faddp
ljmp
in
in
int
in
lock
std
cmp
cmp
aad
loope
rcl
loop
ljmp
fsub
test
in
lret
cmp
in
repz
enter
fadds
in
in
xor
loop
vpsubb
cmp
fstpt
addb
leave
addb
xchg
ljmp
cli
fsub
xlat
fdiv
cmp
ret
addl
mov
out
loop
xchg
in
fxch
aad
repnz
into
icebp
test
fxam
call
jmp
fucomp
rorb
cs
aaa
enter
sti
cmp
aas
les
fmuls
fists
test
icebp
into
repz
cmp
and
rcr
test
aam
cli
out
mov
out
lea
ret
aam
xlat
shl
call
xor
enter
test
lret
xchg
lock
fucomi
das
fxch
cmc
repnz
mov
ret
out
xchg
iret
int
ljmp
out
int
dec
iret
call
cmc
xchg
xchg
ret
sub
lock
jmp
stc
test
cmp
loope
mov
std
nop
sar
cld
into
repnz
aaa
in
out
std
aad
cmp
aas
imul
xlat
loop
enter
addb
xchg
icebp
icebp
xor
shr
in
cli
into
cli
cmp
lock
flds
loopne
in
in
xchg
xchg
fsubr
xor
enter
cmp
stc
div
repz
out
or
fsts
fsubr
ljmp
out
rorl
add
jmp
mov
jmp
fmul
aas
xlat
aad
fmul
ss
loope
ss
jmp
add
sar
iret
hlt
clc
hlt
xlat
shl
in
stc
int
rcr
repz
icebp
fdivr
cmp
clc
stc
imul
shl
sub
xchg
jecxz
jmp
hlt
out
jecxz
xor
ljmp
shl
ret
loop
lds
int
test
ret
xor
out
sarl
loopne
fdivr
xlat
roll
out
lret
test
mov
repz
cs
call
aaa
aaa
cmp
fstp
xlat
xchg
cmp
in
jmp
fucomip
in
leave
in
cmp
jmp
lret
add
cmp
fld
jmp
into
std
mov
shl
enter
fnsave
out
in
sub
mov
movl
rorl
cli
idivl
ljmp
hlt
mov
test
jecxz
sti
xchg
in
mov
icebp
fstp
fxch
ss
loopne
shl
roll
lea
rcl
aad
enter
das
xor
not
icebp
icebp
sar
mul
aas
enter
cli
jecxz
loopne
mov
xor
in
cs
lret
cmp
fdivp
or
repnz
enter
in
flds
orl
enter
aam
loopne
mov
aad
div
ret
sti
in
mov
std
fucomi
nop
xchg
cs
les
repz
int
sti
cli
cld
in
iret
neg
xchg
and
lea
mov
xor
les
call
lret
xlat
xlat
out
ret
testb
ljmp
adc
shl
cmc
out
cld
ds
ss
sar
jmp
clc
cld
mov
xchg
test
repnz
lret
fcomp
fprem
incb
cli
out
shl
loop
int3
leave
int3
fsubrp
test
out
xor
out
out
test
cmp
aas
rcr
ret
cmc
sti
adc
sub
icebp
test
dec
jmp
aad
xor
shl
lret
cmp
sar
cld
in
fmul
lret
jmp
jecxz
out
fmul
lret
ljmp
sar
fcmovnb
loopne
out
jmp
in
jmp
filds
shl
out
out
in
int3
rcr
shr
rcr
lds
out
lret
call
out
aam
xor
aad
repz
stc
xchg
loopne
in
in
sbb
faddl
cs
cmp
test
clc
xor
cli
cmp
sti
mov
loopne
jmp
lds
das
shlb
sub
addl
fldl
in
loopne
xor
lret
cmc
lret
rorl
add
add
ror
fst
mov
fxch
push
jg
pop
add
aaa
loope
icebp
cld
shr
out
aad
test
mov
ljmp
icebp
iret
fidivs
iret
lret
aad
jmp
out
rcl
ret
std
ljmp
in
rolb
ljmp
lock
and
filds
sub
fmuls
fisttps
xor
jmp
into
and
out
out
leave
call
in
icebp
mov
iret
ror
int
fcmove
xor
cmp
out
clc
repz
sbb
sub
fcmove
mov
nop
aam
ret
cli
aad
call
sarl
hlt
fucom
out
fcmovnu
cmc
adc
into
lret
xchg
xchg
shl
int3
int3
loope
in
icebp
sti
int3
xor
repz
fsubr
call
loop
in
out
fsubp
jecxz
hlt
not
repz
lret
fdiv
sbb
fcmovne
out
fcomi
fimuls
aam
ret
xor
int3
aad
in
lret
rol
lock
cld
in
loopne
loop
fnsetpm(287
xchg
ljmp
stc
call
xor
xor
add
xchg
xchg
rcl
xlat
enter
out
lret
loop
shl
aas
sti
cmp
movb
jmp
out
mov
xor
fdivrl
cmc
aaa
sarl
ds
addl
lret
test
jmp
lret
call
jmp
call
hlt
cmc
into
jecxz
fst
test
test
fucomip
out
mov
mov
call
idivb
cmp
dec
cmc
or
shl
aad
call
mov
lret
fists
xor
aad
clc
cmc
cmp
lock
and
ret
sti
enter
out
mov
aad
lock
aas
cmp
out
fdivrp
loopne
std
ret
sbb
in
loopne
std
adc
loope
mov
shr
lret
iret
cmp
xor
not
fimull
lret
int3
aad
loope
cmp
cmc
cld
out
cmc
aaa
loop
or
loop
xchg
out
test
ljmp
out
jmp
out
fdivr
lret
cmp
cli
flds
clc
out
test
xchg
jmp
out
ljmp
cmpb
vpaddw
loop
jmp
jmp
hlt
orl
xor
lret
in
out
std
clc
iret
hlt
adc
lock
fucomip
int3
into
repz
shl
ror
aad
jmp
fcomip
and
xchg
cmc
mov
mov
xchg
call
cmp
lock
aam
ret
stc
mov
mov
fsincos
in
fucom
repz
xor
add
cmp
jne
jmp
leave
aad
aad
int
jge
in
and
scas
sub
push
jg
pop
add
cli
ss
cli
fucom
aad
rorl
std
or
icebp
int3
divl
aad
jecxz
fcmovnu
int
ljmp
cmc
jecxz
jmp
cmp
jmp
ljmp
fcom
std
aas
xor
hlt
clc
rcl
mov
out
loop
in
out
into
enter
out
stc
cmp
clc
sar
cmc
ret
not
cli
out
loop
mov
std
leave
out
xchg
jecxz
clc
shl
xlat
neg
sti
ror
sarl
shl
in
loopne
mov
stc
iret
fstp
xchg
lret
leave
rcl
icebp
xlat
xor
lock
shl
aas
call
in
mov
stc
lret
test
xor
in
std
call
in
fxch
int
ret
lock
jecxz
and
mov
xor
cmp
aam
rcr
fsin
idivb
hlt
mov
jmp
lea
xchg
loopne
in
xor
in
icebp
std
cmp
jmp
fst
neg
sbb
testl
test
ret
int
cmc
xlat
cmp
rcl
cmp
stc
cmp
aas
sbb
loop
icebp
fbstp
fld
into
rcl
ds
not
neg
ss
ret
xchg
ret
xlat
in
ljmp
iret
fdiv
into
ror
fiaddl
shl
mov
loop
cld
stc
jmp
loopne
xor
in
cld
sti
sbb
rcr
fadd
clc
mov
test
lock
out
loop
iret
leave
frndint
int3
loopne
rcl
jecxz
rcr
loop
enter
xchg
repz
into
rcr
iret
fdiv
cmp
into
lret
fadd
clc
fdivrp
fcmovbe
test
jmp
test
leave
shl
aam
loope
loop
aam
aad
cli
icebp
loopne
loopne
shl
xchg
xlat
or
ret
ljmp
cli
in
in
jmp
jecxz
hlt
clc
mov
ret
mov
ret
out
test
leave
rcr
into
ss
ljmp
test
or
lret
decb
fdivs
cmp
cmpl
testl
xchg
rol
in
fcmovnu
stc
out
jmp
fchs
aas
cmp
mov
enter
roll
das
jmp
aam
cmp
sti
cli
repz
filds
out
ffree
in
out
hlt
in
fcmove
sti
lret
in
fdivrl
into
cmp
aas
fcmovbe
fucom
clc
enter
into
loope
mov
rcll
test
ss
std
not
jmp
stc
clc
ljmp
aad
repz
xor
jmp
ret
les
je
push
sub
mov
add
jle
add
cmc
repz
ljmp
les
std
std
out
cli
test
orb
in
fsubr
stc
clc
xlat
hlt
jmp
cmp
ds
xchg
leave
out
test
lret
repnz
ret
sarb
leave
neg
xor
xlat
xlat
sub
ret
jmp
in
nop
mov
xchg
repnz
xor
sti
idiv
icebp
clc
lret
fcmovbe
iret
int
fiaddl
loopne
fdivr
mov
mov
mov
aaa
cmp
out
fstp
inc
repnz
iret
mov
lds
mov
cmp
out
xor
iret
cmp
fnstcw
call
mov
clc
shl
call
int3
fstpt
xlat
cmc
in
cld
cmp
rol
sti
jmp
mov
mov
in
ret
out
cli
cmp
lret
fiadds
les
leave
loop
nop
fstl
cmp
jmp
cld
lock
cmp
loop
imul
lret
addb
clc
test
ljmp
sti
sti
fnclex
jmp
int3
fadds
in
ss
std
fnsave
into
iret
xor
aam
aaa
neg
loope
aam
ret
cmp
std
icebp
in
ljmp
aad
cmp
aaa
aam
repz
sar
aam
stc
cmc
out
mov
lret
int
mov
rcl
fldl2e
repz
lret
cmp
into
neg
addl
in
mov
lock
in
ljmp
xor
out
in
f2xm1
cmp
jecxz
cmp
fld
lret
int
jecxz
in
lret
stc
out
out
cli
jmp
cmp
fdivr
testb
movb
in
int3
xlat
ss
leave
jmp
aas
rcl
out
out
fiaddl
in
incl
aad
xor
shr
test
testl
test
loop
xor
cmp
cmp
das
jmp
cmp
in
clc
rcl
call
in
testl
ret
hlt
xor
ss
cmp
cmp
enter
xlat
ficoml
cmc
mov
lret
in
in
aaa
lret
out
bnd
rolb
aam
jmp
fcomi
leave
out
fimuls
xor
idivb
int
enter
int
repnz
testb
enter
out
in
jmp
jmp
xor
aad
xor
dec
fldl
repz
out
fxch
loope
xor
divl
out
repnz
fcom
ss
fnstcw
sti
icebp
shl
addl
fdivr
icebp
rcll
cs
inc
add
add
add
rcl
rcl
aad
add
dec
arpl
pop
jg
pop
add
xchg
lds
jmp
out
aam
icebp
aam
cmc
stc
ret
loopne
in
fucomi
mov
out
in
xchg
rolb
lret
cli
call
in
xor
out
ljmp
bnd
fcomi
fdivr
fcmovnu
into
sarb
faddl
xlat
jmp
loopne
xchg
shr
out
jmp
in
fidivrs
aas
int3
rcl
aad
fiadds
lock
out
jmp
lret
cmp
out
ss
enter
loope
out
cmc
shl
in
jmp
or
iret
mov
hlt
hlt
in
in
xlat
shl
cli
call
int
out
jecxz
fst
jmp
popl
mov
ret
sub
test
loop
int
clc
f2xm1
clc
in
jecxz
sub
mov
in
out
clc
std
repnz
cld
into
lds
fcomp
out
out
or
jmp
in
sub
in
sti
sti
fdiv
inc
sti
out
ret
loope
movb
enter
xchg
ror
fdivs
into
out
aam
aad
cmc
in
repz
aam
out
orb
xchg
jecxz
in
out
cld
jmp
out
stc
loop
lret
loope
les
test
cli
mov
xchg
lds
clc
in
shr
iret
xor
stc
shl
jecxz
fmull
in
xchg
sbb
clc
shr
ss
aaa
fucomi
ljmp
rcl
fisttps
fisttpl
hlt
aad
aaa
fcmovne
leave
aaa
aas
repz
lock
ss
testb
xchg
leave
into
out
loopne
xor
enter
cmp
std
out
shl
cmp
xlat
mov
sub
sub
leave
ljmp
loop
cmp
aas
fistpll
not
sar
jmp
clc
mov
fsubp
ljmp
call
leave
cmp
clc
rolb
fcmovnbe
out
out
jecxz
cld
xchg
out
loop
xor
int3
cmp
sti
enter
jecxz
repz
clc
cmc
in
mov
std
shl
out
int
fdivl
shr
ds
int3
not
aam
add
cmp
in
fcomip
fsubrp
aam
clc
ss
cmc
aad
fcomi
ffreep
adc
clc
cmp
in
sti
out
xchg
fucomip
ljmp
shlb
cmp
aam
sti
cmp
in
fcomp
cmp
out
sbb
xchg
lret
out
iret
fcmovbe
xor
int
stc
std
xlat
cmp
idiv
hlt
push
xlat
ret
cli
out
in
mov
nop
and
shl
aam
xor
out
cmp
cli
clc
shll
filds
cld
xchg
lea
add
mov
pushl
pushl
call
mov
jmp
leave
ret
int
leave
iret
ror
shrb
jg
pop
add
ljmp
aad
in
fdiv
xor
fdivs
xchg
les
jecxz
repz
mov
in
test
out
lret
xlat
shl
aas
xor
in
incl
repnz
lret
in
cmp
std
cli
cmp
bnd
mov
cli
call
or
in
hlt
lret
imul
lret
aad
rolb
xchg
fiaddl
lret
out
xchg
nop
adc
lret
stc
bnd
shl
ret
icebp
ret
aad
lds
hlt
ss
div
leave
lret
and
icebp
cld
inc
adc
enter
cli
int3
shl
leave
adc
in
aam
fnstenv
loopne
int
aam
rcl
call
icebp
mov
out
int3
div
out
xlat
fdivp
les
stc
ret
enter
mov
call
hlt
out
cmp
rcr
aam
cli
aam
repnz
loope
in
in
jmp
hlt
shll
shl
aam
cmp
into
or
repz
xlat
fcom
inc
neg
stc
into
lret
test
in
fxch
repnz
jmp
or
std
std
cli
hlt
in
xlat
loopne
rol
xchg
in
jecxz
icebp
cs
ss
fdivp
cmp
or
aam
fimuls
out
enter
lock
cmp
rol
stc
repnz
and
or
testb
lock
cmp
iret
in
xrelease
xlat
cld
call
xchg
fcomip
clc
out
cmp
divl
cmp
rol
enter
fmuls
sti
fmulp
iret
cmc
aam
das
in
rcr
div
fcmovne
loope
loopne
rcr
cld
xchg
iret
sti
in
call
call
out
jmp
sarb
repnz
in
cmc
orb
loop
test
loop
ss
fcomp
std
lock
aad
cmc
test
sti
iret
loop
rcr
addl
ss
jmp
addb
shr
incl
fisttps
idiv
leave
ljmp
out
in
mov
cli
int3
fstp
fisttps
xor
xor
shl
in
ffree
out
xchg
mov
clc
sti
test
ret
ror
not
lret
cmp
test
lds
sbb
enter
in
fucomip
mov
std
lock
ret
fyl2x
in
out
loope
cld
fistpll
lret
adc
xor
jmp
xlat
ror
fld
and
test
and
bound
pop
add
or
xchg
xor
lret
out
aam
out
fidivrl
loop
cmp
mov
incl
fimuls
lret
cs
aaa
rcr
adc
cli
hlt
mov
in
xchg
test
lock
xchg
ret
lret
leave
fldl2e
out
idivl
int
cld
idiv
aad
fisttpl
jecxz
icebp
std
xchg
divl
lret
dec
repz
cld
cli
fidivrs
shl
fucomp
fucomi
int
fmul
out
loope
shl
ror
aad
idiv
icebp
test
cmp
xchg
aam
loopne
std
into
jmp
cld
rorb
in
fucomi
cld
loopne
fidivrl
filds
leave
mov
in
mov
in
iret
lret
adcl
imul
in
lock
inc
into
rcl
aad
ror
add
std
fimull
in
repnz
out
mul
fdiv
ds
icebp
out
xchg
rorl
shl
std
xchg
xchg
test
xor
in
sar
int3
out
filds
xchg
mov
repz
iret
imul
into
out
test
out
cld
enter
fildl
nop
xchg
int3
lock
imul
cmp
jmp
out
iret
ljmp
ljmp
lret
xchg
lock
mov
aad
xor
aam
xor
int3
cld
cmp
cmp
sti
out
cmp
loop
jecxz
cld
fcmovne
std
in
out
ret
jecxz
in
iret
fnstsw
loopne
stc
cld
int
in
fcmovnu
jecxz
loope
neg
cli
in
std
out
xchg
xor
jmp
in
cmp
aam
cmp
lock
in
cmp
xchg
lock
out
xlat
in
xlat
aas
loopne
cmc
ror
mul
faddp
cmp
cli
mov
cld
jmp
xchg
jmp
loope
fcmove
xor
lret
cli
ds
int
ds
cmp
lret
adcb
cli
rcl
das
cmp
and
jecxz
cmp
fiaddl
xchg
int3
xchg
aaa
shl
fcomi
rcr
aam
icebp
imul
cld
jmp
out
xchg
out
out
xor
out
xlat
fnstsw
lock
xlat
mov
fcom
sar
clc
and
int
jmp
cmc
jmp
aad
out
xor
cmp
cmc
xlat
int
clc
aam
out
out
mov
jecxz
out
int
repz
vpsrld
sti
cmp
cld
div
incb
dec
sti
fists
jmp
jecxz
enter
fnstsw
cmp
into
and
loop
jecxz
ret
out
test
das
int3
fxch
int
repnz
fcmovnbe
xor
jmp
cmc
out
pop
add
jmp
fcom
xlat
fstp
int3
fstpl
sbbb
mov
jg
pop
add
out
loopne
xor
hlt
sti
repnz
clc
out
call
in
and
xor
cli
cmp
aad
aas
shl
cmp
out
fsubrp
xchg
cli
repnz
std
into
inc
xor
xor
loopne
fnstsw
rolb
aam
lret
jmp
in
icebp
repnz
lock
clc
div
cmp
sti
leave
cmp
xlat
sar
add
out
cli
fdivrp
ret
out
leave
rcll
xor
jmp
cli
cmc
cmp
cli
cld
aam
xchg
test
orb
xchg
aaa
lock
out
call
lock
loop
out
lret
cld
fsubp
nop
iret
jecxz
div
aaa
repz
jmp
cmp
sti
jecxz
enter
mov
mul
xchg
aaa
xor
cmp
out
cmp
rolb
fcomi
iret
loopne
xchg
out
in
std
addl
enter
into
or
cmp
xlat
stc
ds
out
out
xchg
call
cmc
repz
in
cmp
in
fdivrp
rcl
out
enter
in
test
call
loope
mov
into
ljmp
int
in
cli
in
into
out
xchg
shl
fmul
adc
cld
in
out
in
add
in
xor
fidivrl
out
ror
hlt
in
hlt
repnz
loope
out
stc
orl
out
xor
aam
cmp
sarb
cmp
clc
lock
out
ret
in
or
loope
ljmp
ljmp
aad
aas
ret
decb
loop
int3
mov
int
ret
cmp
enter
sarl
faddp
test
test
icebp
mov
iret
xchg
iret
imul
jmp
aaa
in
sbb
aad
fcmovb
rcl
jmp
rcr
mov
in
call
test
jmp
int
hlt
cld
idiv
in
call
call
xor
cld
xlat
hlt
jmp
lock
fadd
in
out
xchg
leave
jmp
rcl
icebp
cmp
cld
sti
shl
jmp
cld
out
jmp
cld
fmuls
aaa
leave
das
lret
fcmovnbe
divl
out
cmp
fadd
loopne
fxch
mov
in
iret
xor
cmp
enter
ds
call
lret
mov
fsubrp
jmp
repz
cmc
xor
rcr
int3
lret
loope
in
aas
std
stc
rcr
test
incl
rorl
fdiv
fcom
repnz
fadds
repz
xchg
ret
push
mov
push
movl
mov
mov
add
orl
xor
movl
jmp
rol
int3
rcr
fxch
ss
insl
sub
and
sub
push
jle
cmp
mov
test
in
mul
shr
int
imul
call
sar
cli
ret
stc
int3
into
enter
lret
jmp
repnz
sar
cmp
in
cmp
sti
ret
xchg
leave
cmp
xchg
cld
mov
dec
clc
loope
out
in
lock
call
idiv
addb
cld
orb
xor
out
sar
lret
cmp
fstp
loop
sti
ret
out
mov
lock
loope
xor
xor
out
fidivrl
int3
fcomi
in
repz
xchg
test
test
fiaddl
shl
idiv
enter
shlb
int
in
out
iret
out
aam
repnz
movl
aad
into
enter
sarb
sar
aad
cld
hlt
test
addl
in
hlt
shr
in
int
push
shl
in
shl
icebp
jmp
in
mov
enter
shr
fsubr
idivl
out
cmp
fpatan
test
faddp
fmuls
popl
shl
loop
call
stc
rolb
hlt
mov
fadds
jecxz
nop
mov
xor
cmp
icebp
ss
in
idivl
cmp
shl
test
xchg
loope
lock
fdivrp
out
ror
mul
into
and
xchg
fsubr
in
in
xchg
das
cli
icebp
aaa
idiv
in
enter
lock
aam
decb
int3
in
hlt
xchg
mov
shl
xor
fst
lret
cmp
idivb
leave
in
ret
lds
ljmp
xor
std
in
stc
ljmp
cmp
fdivr
loop
loopne
shl
cld
out
xchg
xchg
shr
jecxz
jecxz
out
rcl
ss
stc
sti
fcomp
fdivr
lret
icebp
call
out
jecxz
aad
aaa
ss
fnstsw
lret
movl
jne
mov
mov
mov
add
add
sbb
mov
add
mov
jmp
ror
ret
fcmovnu
fisttpl
mov
ss
in
push
jle
add
roll
mov
test
test
into
lret
lock
in
sar
cmp
cmp
aas
xor
test
aam
out
addl
in
aad
rcr
loopne
or
ljmp
and
rorb
hlt
aam
into
cli
call
sti
iret
aam
aad
test
test
mov
loop
cld
leave
std
aam
in
cmp
aad
stc
cmp
cmc
ret
adc
sti
loope
loope
leave
out
std
xchg
xchg
mov
jmp
int3
cmc
cmp
cmc
fsub
loop
std
in
xlat
call
jmp
into
out
ljmp
rcr
ffree
int3
icebp
out
loopne
lock
out
testl
jmp
int
in
fcmovbe
fcmove
stc
in
fcomip
loope
enter
lret
jecxz
xchg
ret
fld1
idivl
int3
fidivrl
ss
sbb
and
ffree
testl
in
aas
ljmp
lock
xor
fcmovnu
xlat
filds
icebp
xchg
loope
call
sti
sti
xor
repnz
rol
shl
jecxz
loop
icebp
or
in
lret
divb
repz
fcmovne
lret
clc
hlt
cmc
rolb
std
in
cli
enter
jmp
mov
mov
aaa
xor
out
hlt
fidivs
sar
aam
incl
fisttps
loope
fists
xor
int
cli
cli
rcl
imul
repz
fiadds
or
shl
shll
sti
aad
cmp
out
lret
jecxz
cmp
cld
xchg
clc
out
lock
int3
mov
ljmp
incl
cmp
jmp
cli
call
xchg
xchg
ss
cli
stc
icebp
cli
cld
into
cmp
cmp
cmp
xlat
testb
rcr
xor
in
into
xor
cmp
cli
cmp
into
mov
xor
xorl
push
or
mov
mov
add
movl
cmp
pop
movl
je
mov
jmp
jmp
lret
xlat
lret
rcr
rcr
xlat
test
inc
sub
sub
xrelease
sbb
jle
loopne
loope
clc
repz
loope
fsub
call
in
repnz
jmp
ljmp
cmc
repnz
stc
ret
ljmp
std
out
lock
mov
in
out
rcl
iret
lret
iret
xor
fnstsw
test
aad
aad
out
clc
lret
lret
int3
repnz
lock
ss
sarb
loop
flds
sbb
out
mov
fcomip
jmp
in
divb
repnz
xlat
aam
rolb
test
in
jmp
mov
fld
aad
rcr
cmc
rcl
jecxz
jecxz
rol
cmp
cmc
mov
jmp
mov
jmp
rcr
lds
cli
cmp
loop
sti
test
loop
call
lret
aam
call
call
call
clc
shlb
repz
cld
int
int
repz
iret
xor
xlat
cmp
aas
call
ds
loope
cli
aad
loop
cli
int
loopne
xchg
call
lret
int3
loopne
hlt
icebp
cmpb
std
test
leave
out
mov
test
xor
ss
ror
cli
fcmovnbe
fdivrp
adc
cli
fsub
fdivrp
int
std
xchg
xchg
xchg
lret
fucom
out
out
ret
lret
repnz
loop
cmp
in
loope
fsub
stc
in
cmc
jmp
mov
test
lret
shl
fdivrs
in
cmp
into
aas
sub
mov
cld
cmc
test
jmp
xrelease
out
jmp
clc
rcr
stc
xor
fnstcw
loop
cmp
jmp
ljmp
in
icebp
stc
aaa
mul
out
sti
loopne
out
jecxz
iret
xor
clc
enter
or
mov
sti
into
mov
in
int
clc
cli
cmp
cmp
cmp
push
loop
int
sti
sar
aad
jecxz
lret
fiaddl
xor
lret
call
in
in
cmp
test
out
jecxz
aam
faddp
mov
mov
in
xor
ss
cmp
add
add
int
aas
int
int
jbe
repnz
jnp
movsl
outsb
jg
sbb
jle
clc
neg
loopne
icebp
lock
jecxz
test
call
lret
mov
xlat
fdivr
fcmovb
xor
sarl
cmp
xor
fdiv
shl
repnz
mov
lret
cld
into
iret
loopne
lea
divb
cmp
shr
in
test
lock
or
in
filds
shlb
lret
dec
fcmovnu
in
incb
aam
loope
cli
mov
cld
adcl
ror
ds
out
sti
out
not
mov
stc
xchg
enter
call
rol
hlt
rcl
ds
adc
shr
cmp
ljmp
cld
mov
call
leave
fdivr
loope
int3
cmp
icebp
aam
cmp
int
loop
shl
sub
into
into
cmp
in
fstp
icebp
push
rol
sarb
aam
stc
xchg
ljmp
div
hlt
out
out
cmp
cmp
in
shll
out
loopne
cli
rcr
jecxz
int3
in
int3
jmp
out
sti
in
ss
stc
fcomp
fcom
cld
roll
adcl
aaa
xor
lock
sti
test
in
test
lds
rorb
shl
cmp
int
lret
roll
enter
in
mov
call
out
lret
in
shr
std
lret
test
mov
xchg
iret
fcomip
aam
out
xor
iret
into
xor
out
out
fdiv
icebp
cmp
shl
xchg
xchg
in
cld
mov
in
xchg
aas
lret
enter
fidivs
out
std
in
fcmovbe
iret
in
cld
ret
testl
mov
cmc
clc
out
xlat
fdiv
aaa
fucomp
cmp
loope
int
xchg
std
lret
fisttpll
decl
cli
xor
xor
not
fcom
repnz
xchg
ficoms
aaa
clc
jmp
ret
jmp
mov
xor
add
leave
ret
push
mov
push
or
jmp
ret
ret
fst
int3
xlat
fs
test
inc
jo
jle
add
bnd
repnz
cmp
adc
stc
in
lock
stc
cld
rcl
mov
rol
int3
fcmovbe
cmp
aas
sarl
rcr
test
test
aam
loopne
mov
cmp
cli
out
icebp
sub
repnz
in
iret
cld
fxch
int3
hlt
jecxz
fstpt
lock
rol
jecxz
in
mov
sbb
mov
icebp
int
div
lock
aad
ss
push
into
cld
call
lret
decb
in
in
xlat
in
jmp
repz
fnsave
ror
addb
imul
lds
loopne
lret
in
test
stc
fdivrs
hlt
fnstcw
cli
rcr
or
lret
repz
rol
das
fptan
repnz
repnz
aad
sti
out
aad
rorl
mov
jmp
fsub
ljmp
in
cld
in
xor
cli
cmp
fucomi
cmc
std
mov
fildl
ror
fisttpl
iret
not
in
fst
xlat
clc
shl
into
and
out
add
out
int3
out
lea
iret
fsub
int3
fsubr
cmp
not
cmp
adc
and
add
xchg
lret
lock
ljmp
out
cmc
jmp
xlat
jecxz
stc
adc
lret
fsubrp
or
test
rolb
ret
cmp
out
adc
sbb
clc
adc
in
loopne
in
lea
std
xchg
fdiv
aam
enter
ljmp
incb
testl
xor
imul
fdiv
cmp
out
loopne
stc
cmp
hlt
fstp
faddl
test
rol
sti
aad
shl
cmp
hlt
xlat
cmp
cli
std
enter
xlat
test
mov
jmp
loop
int3
out
out
fmul
loope
clc
shl
fsubr
fmul
test
nop
cs
leave
xor
in
xor
jecxz
aas
stc
aas
add
out
loop
cld
xchg
loope
lock
cmpl
call
and
loop
in
out
fists
test
leave
rol
cli
xor
into
cmp
int3
cli
in
loop
mul
aas
roll
jmp
xor
shl
rcr
cli
cmp
fsubrs
ss
inc
or
mov
mov
cmp
mov
faddl
out
into
cmp
xor
aas
lret
cmp
aad
aam
and
incl
test
int
int
fmul
lock
idiv
fst
icebp
xchg
call
dec
or
xor
sbbl
add
movl
mov
movl
movl
movl
movl
mov
movl
push
movl
movl
mov
cmp
movl
jmp
rcl
enter
fsubl
adc
jg
lods
add
testl
xchg
mov
rol
rcl
cmp
shr
clc
in
iret
ret
roll
out
mov
adcb
xor
fdiv
jmp
lock
fcmovb
rcr
cld
or
rcll
aaa
xor
stc
out
stc
int
sti
ds
icebp
in
test
loope
stc
std
xchg
test
in
shll
xor
ret
out
in
aas
mov
xlat
test
or
jmp
xlat
cmc
call
jmp
cmp
aam
fisttpll
into
test
out
mov
xlat
in
loop
ret
repz
ljmp
sub
int3
xor
les
repnz
test
out
shl
loope
add
icebp
rolb
das
sub
xor
cmpb
rcl
and
jmp
mov
out
xchg
cs
lret
int
cli
in
rol
cld
in
fcomip
loop
loope
clc
aad
fmuls
xchg
icebp
int3
cmp
fidivrs
xlat
cmc
repz
cld
shl
enter
std
stc
xchg
shl
not
div
fdivr
cmp
aas
in
jmp
std
std
test
cli
out
mov
fsubrp
xor
repnz
repz
icebp
lret
repz
lock
clc
jmp
sti
call
mov
ret
ss
xor
shr
fdivr
xlat
ret
mov
fsubp
loope
xchg
rcr
aad
aas
shr
jecxz
loopne
cmc
clc
fld
xlat
rcr
fcmove
sbb
mov
into
mov
imulb
ret
cmp
shr
cmp
push
test
loop
fisttpl
addb
stc
sti
shl
xlat
clc
clc
fildl
adc
jecxz
lret
in
cld
xchg
stc
in
sar
fcmovnbe
loopne
fnstsw
neg
cli
aas
repz
fildl
sub
ljmp
shr
call
xor
xlat
aad
aas
idivb
repnz
ffreep
mov
out
xchg
into
rorb
in
lret
out
icebp
cmp
repz
sar
out
test
loopne
jecxz
lret
xchg
mov
leave
test
icebp
ds
test
into
out
leave
fdivr
inc
in
addl
int
cli
fcom
int
cmp
xchg
shl
mul
jecxz
mov
into
call
xchg
or
add
xor
mov
xor
jmp
aas
leave
fmul
fcom
fld
cli
jae
sti
call
jg
lods
add
xor
xor
clc
cld
icebp
ror
repnz
aad
int
in
out
xchg
mov
mov
les
jmp
fcmovu
fdiv
ds
icebp
neg
stc
clc
in
leave
mov
sar
loope
ret
cli
cmp
xlat
int
lret
fstpt
cli
stc
inc
aas
std
ds
std
fcomip
ficoms
jmp
cmp
clc
sar
icebp
addb
mov
filds
incl
leave
into
das
rol
cld
cmp
loop
cmp
shl
mov
leave
ror
mov
shl
into
lret
divl
ror
ffree
std
call
jmp
mov
out
int
call
cmp
testb
rol
fdivr
mov
or
les
shlb
aad
icebp
in
xlat
xlat
loope
cld
int3
aad
loope
faddp
movb
sar
loopne
shl
aad
out
in
clc
xlat
lret
aam
rcl
cld
xlat
ret
sbb
dec
out
mov
in
mov
xor
shl
repz
hlt
jmp
fucomip
fstp
repz
sar
ret
ljmp
shr
ret
shl
vshufps
repnz
loopne
test
out
repz
faddl
cmc
rcl
iret
iret
call
clc
cld
icebp
fmull
jmp
hlt
xchg
lret
xor
sub
imul
int
cmp
not
lock
xchg
cld
addl
std
loope
int
xor
ror
out
cmc
loopne
incl
rol
shr
lret
in
cmc
in
repz
out
in
cmp
xor
in
cmp
cmpb
adc
ret
filds
out
xchg
cmc
shl
ljmp
cmp
ds
sti
div
inc
testl
aam
in
int3
in
lret
rol
call
fucom
test
xchg
mov
ljmp
not
cmc
idivl
jmp
repnz
cmp
shl
neg
in
clc
in
or
rol
clc
xlat
repnz
ror
in
out
jecxz
in
in
aas
ret
mov
in
out
mov
out
mov
rol
sub
xor
std
into
in
rol
stc
aas
mov
cld
stc
sub
into
mov
in
out
test
inc
repz
aam
out
xchg
aas
orb
int
in
xor
jmp
in
ds
loope
stc
xor
jmp
lret
aam
aam
incb
dec
js
jle
add
hlt
ret
xchg
ljmp
jmp
out
in
lret
cmp
in
incl
ds
jmp
rcll
icebp
repz
rcr
cmp
ror
loopne
int
in
cli
test
xchg
rorb
call
in
in
cmp
int3
jmp
aas
aam
shr
neg
imul
fcmovnu
loope
loopne
lock
call
not
rol
lret
in
int3
ss
rcl
into
rol
and
xlat
xchg
fstp
int3
jmp
jmp
lret
jmp
loope
mov
hlt
jmp
in
rol
adc
rol
shl
aad
repnz
fcmovnbe
ds
lock
cli
shr
loopne
fmul
xchg
out
int
aad
shlb
cmc
leave
in
shl
ljmp
cld
xchg
out
repz
test
aam
aad
out
shr
fdiv
int
loop
lret
clc
jecxz
in
mov
test
in
ret
int
cmp
stc
aas
cmc
fsubp
fstp
fdiv
sbb
testl
xor
jmp
cmp
aam
sar
repnz
ljmp
mov
xchg
jmp
repnz
sti
fsubr
cmp
std
xlat
iret
iret
repnz
cmp
out
out
icebp
xor
fdivs
xor
fcmovbe
xor
jmp
aad
mov
lock
test
std
mov
in
into
cmp
ljmp
aad
in
in
repz
incb
in
shr
int
aaa
xor
sub
fcompp
fcom
fst
addb
fldz
lret
mov
and
xchg
shr
xor
cmc
rcl
cmc
and
incb
in
jmp
cli
incl
call
clc
cli
jmp
shl
sti
fucom
fsubp
aad
mov
loopne
mov
int3
icebp
in
xor
in
call
in
cmc
into
fneni(8087
rcl
xchg
test
test
call
test
call
sti
out
cmp
hlt
cmc
clc
repnz
sub
xlat
ret
fcomp
loopne
mov
loop
aaa
out
rcl
lret
cmp
hlt
aam
repz
cmp
idiv
fcom
mov
iret
xorl
stc
mul
icebp
sar
aad
xchg
cld
cmc
out
fucomip
shr
hlt
xchg
ljmp
repnz
ret
std
out
ror
fmull
test
filds
xchg
jb
add
add
add
add
movl
enter
int
lds
pop
cmp
add
or
repz
ss
cmp
fcomip
cli
call
aam
test
mov
repz
loop
lock
aaa
out
loope
cld
and
rolb
lret
lret
xchg
aaa
ljmp
fmul
cld
fdivrs
cli
xor
testb
loopne
xor
leave
int3
aad
repnz
jmp
iret
xchg
movl
nop
mov
out
out
shl
xor
hlt
cld
lret
loopne
out
fdiv
int
and
xchg
ds
int3
mov
loope
imul
in
xlat
xlat
xor
aam
adc
loop
add
mov
jmp
jecxz
icebp
incl
cmp
loop
sar
jmp
int3
cld
shl
addb
shl
sarl
shl
repz
fildl
sbb
std
in
cli
sub
xchg
repz
enter
lret
adc
fdiv
aad
xlat
stc
clc
xchg
cmc
int3
cmc
lret
xlat
sarb
into
ss
xor
or
rcr
stc
out
cmc
hlt
hlt
int3
faddp
jmp
xchg
call
jmp
fxch
rcr
ljmp
rcr
ret
mov
fcomip
jmp
jecxz
test
clc
fsubr
out
fidivs
ljmp
ret
hlt
add
xchg
shl
movl
icebp
std
cmp
ds
call
in
fmuls
xchg
out
xor
out
test
test
mov
neg
clc
int
fstp
xchg
xchg
rol
ss
repnz
loop
fdiv
ds
rcr
in
cli
lret
loopne
addb
sub
imul
cmp
lock
in
int
xchg
fsubrp
mov
div
in
shrb
into
xor
les
cmc
fld
jecxz
in
mov
xchg
hlt
cmc
lret
ss
lock
leave
aad
dec
ret
adc
sar
mov
stc
in
out
push
out
loopne
int
idivb
cmp
xor
ret
cmc
addl
call
icebp
xor
loop
jecxz
neg
aaa
lret
fcomi
repnz
rcl
push
lds
xchg
jmp
fucom
loope
xchg
testb
in
out
int3
out
cs
enter
jmp
fptan
cmp
enter
test
jmp
movl
cmpl
je
cmpl
jne
pushl
push
push
push
call
cmpl
jne
xor
xor
dec
mov
mov
dec
mov
jmp
add
mov
jmp
ror
vpsrld
jl
push
push
iret
mulb
jle
add
in
cmc
test
mul
in
orb
out
out
jmp
aaa
fdiv
imul
xlat
out
ror
xlat
cld
cmp
int3
fucomip
stc
out
jmp
sub
ret
call
xor
sbb
icebp
shl
sbb
std
xchg
repz
call
ss
std
shr
stc
fptan
jecxz
shl
cmc
std
aad
aas
into
fldl
iret
nop
repz
xor
in
ljmp
cmpb
repz
clc
xchg
fadds
lret
std
shlb
aam
out
out
cmc
cmp
std
cld
adc
aam
adc
cld
add
jmp
out
shr
out
lret
jmp
xor
cmp
ret
mul
loop
enter
out
push
shr
not
aam
clc
ret
in
out
iret
in
repz
in
xor
cmp
or
mov
loop
in
loopne
std
shlb
sub
cmp
aad
idiv
loope
out
rcl
repnz
rcl
call
lret
out
rcr
shl
enter
cmp
fcom
jmp
cmp
faddl
aad
fsubr
fdivp
jmp
loope
xor
aad
aam
leave
stc
repnz
icebp
clc
lock
ret
add
fxch
xchg
faddl
jmp
leave
cli
fcmove
imul
out
in
neg
rolb
decl
fmull
xor
out
icebp
clc
fcomip
loop
shl
xchg
neg
sbb
jecxz
loopne
rol
icebp
loope
test
cmp
repnz
cli
int3
xchg
call
stc
fcoml
icebp
fdivp
ss
mov
int3
ljmp
lock
cld
jecxz
cli
call
leave
jmp
icebp
xor
shll
jmp
enter
loope
sar
out
fmulp
cli
lds
shl
int
shrl
xor
stc
lret
std
fsubr
cli
iret
in
ljmp
cld
test
xchg
test
int3
loope
ss
enter
icebp
clc
aad
div
fnstsw
fdivr
jecxz
lea
out
loope
icebp
ljmp
int
lret
jmp
cmp
loop
sti
jmp
jmp
sti
int
sub
rcl
in
in
idiv
jmp
cmp
not
aad
jecxz
decb
loop
nop
ljmp
xor
lock
xlat
sti
repz
fimull
mov
xchg
in
out
xor
ljmp
jmp
flds
xor
jmp
aad
lret
enter
fcmovnu
push
icebp
ret
xchg
pop
add
jle
add
fdivp
out
leave
xor
bnd
stc
fdivrs
hlt
enter
test
xlat
div
loope
ffree
into
in
addl
in
xor
clc
into
rcr
div
hlt
mov
in
in
mov
xchg
icebp
divb
test
std
sbb
in
call
in
orb
xchg
xor
call
into
ds
aam
ds
repnz
mov
add
cmp
in
xor
in
out
sarl
iret
fadd
fdiv
rcr
loopne
add
lock
fdivrp
int3
in
imul
int
das
icebp
ljmp
fiaddl
jmp
inc
mov
in
mov
out
int3
xlat
fnsave
lock
test
test
or
xor
clc
loope
aam
xor
cli
fcmovb
lret
xor
fdivrs
loopne
sub
jmp
jmp
jmp
in
fucomi
sarb
stc
hlt
std
cli
fcmovnbe
test
out
in
int3
loop
sbb
lret
aaa
out
aaa
aaa
shl
sti
cmp
shl
iret
jmp
sub
loope
into
out
int3
out
in
aad
jmp
jecxz
xchg
ret
jmp
fcmovu
cld
repnz
xchg
lock
in
fsubrs
lret
inc
addb
into
loop
in
stc
shr
hlt
sarl
cld
sar
clc
cmp
ret
fcomp
lret
jmp
xchg
rorb
int3
aad
out
out
int
fcomip
call
incl
in
cld
std
out
lock
std
shll
xor
fcomp
sti
rcr
lret
ret
out
loope
mov
jmp
mov
shr
icebp
int3
into
xor
xor
mul
out
cli
cmp
aam
cld
div
fsubrp
clc
fsubr
lds
xchg
mov
aam
xor
out
lret
sti
fdivp
in
repz
loop
fmul
out
xchg
xchg
mov
out
cmp
in
fcmovnbe
cmp
rolb
cli
lret
xchg
inc
int3
clc
aam
xor
shll
ss
aas
ret
hlt
iret
add
test
in
decb
hlt
xchg
sub
stc
hlt
rcl
out
ror
enter
sar
lock
flds
loope
into
xchg
lret
int3
in
repz
in
out
lret
sbb
ret
rol
stc
xor
in
int
sub
xor
repz
rcr
add
mov
mov
xor
jmp
enter
int
enter
push
add
add
jle
add
rol
test
xlat
cmp
out
cld
enter
rolb
repz
int
std
jmp
int3
xlat
aad
rolb
int
xchg
out
mov
cmp
repz
shlb
jmp
shr
rol
xchg
mov
fisttps
fdiv
out
xor
stc
aas
ror
rolb
cmc
ret
mov
mov
sar
xchg
hlt
ror
rcl
rcl
leave
ljmp
cmp
shl
ret
mov
in
out
xchg
in
shr
int3
aam
shlb
cmc
enter
ss
xchg
fcmovb
fcmove
lret
clc
sti
out
mov
fxtract
cmp
cld
leave
shr
sarl
out
fucomi
loopne
jecxz
int3
fxam
test
out
mov
xchg
rcl
ss
ror
out
cmc
lock
cmpl
ffree
ret
loopne
out
icebp
in
lea
iret
fcmovnu
in
fucomp
ljmp
test
aam
mov
loopne
test
iret
jecxz
into
in
shr
loope
out
aad
cmp
out
loopne
clc
fcmovnu
fdivr
dec
mov
fsubp
loope
ret
fdivp
test
int3
das
int3
stc
lret
aad
stc
hlt
fcomi
adc
cmc
xchg
mov
in
xchg
repnz
lea
ss
in
hlt
stc
ss
test
sbb
int3
out
mov
rolb
stc
cmp
rcl
faddl
ds
test
in
cld
lret
decl
xor
fcmovnb
jmp
xor
inc
in
jmp
in
lret
loope
xchg
cld
hlt
cmp
sub
jmp
cmp
stc
cmp
aam
rcr
mov
test
test
shr
aam
call
ss
loop
std
add
loope
cmp
fcmovu
jmp
lds
xor
leave
in
repz
shl
clc
aas
loop
sub
ret
movb
xchg
test
lret
out
leave
cmp
out
neg
cmpl
xor
fdiv
mov
shl
loope
cmp
xor
out
icebp
jmp
out
out
out
shl
sti
std
ret
test
icebp
clc
cmp
cmp
test
xchg
jecxz
loope
in
iret
into
int
orl
repz
out
xor
loop
fcmovnb
xor
repz
lds
int3
xchg
out
jmp
aam
ds
lret
ret
mov
cmp
xchg
xorb
jmp
aas
lret
fcmovnu
xlat
aad
jno
mov
add
add
nop
nop
fsubp
jecxz
aaa
fmul
cmp
cmp
jmp
aaa
in
jmp
cmc
cmp
xchg
fmuls
dec
shr
xor
cmp
cld
out
leave
cmpb
repz
std
roll
cli
nop
call
test
repnz
rcr
in
fcmovnu
or
loop
fdivr
faddl
nop
mov
mov
xor
ss
leave
sarl
in
shl
std
loopne
jmp
adc
xchg
sbb
repz
faddl
ds
aad
out
cli
loope
add
mov
leave
xor
in
xlat
in
dec
fcomip
fucomi
shl
call
testl
xor
iret
lock
cld
cmp
cmp
in
cmc
ffreep
cmpl
into
mul
cs
mul
cmp
neg
lret
ljmp
out
xlat
call
mov
xchg
call
out
aaa
icebp
xlat
hlt
sarl
cmp
cld
add
rol
div
addb
nop
sti
fldl
repnz
cli
lret
lret
cmp
rcl
shr
loop
xlat
orb
xchg
test
xor
das
in
shr
lock
fidivrs
out
ret
xlat
aas
test
ret
decb
loopne
rorl
cli
icebp
cmp
aaa
cmp
rcl
fsub
repnz
xchg
nop
out
call
loope
enter
xor
cmp
rcr
call
out
out
xchg
loope
leave
enter
xlat
fistpll
icebp
in
sbb
sti
cli
loopne
mov
fimull
cli
rolb
stc
aaa
das
into
aad
xlat
cmp
jecxz
ds
imul
fisttps
sbb
shr
out
ret
rol
ss
clc
repz
xlat
aam
stc
fidivrs
hlt
aad
les
sti
int
lea
out
fcmovnbe
int3
rol
cmp
xchg
in
addl
jecxz
imul
xor
aam
test
icebp
fnstsw
lock
ds
neg
std
fisttpll
loope
iret
ffreep
jmp
shr
ljmp
repnz
adc
xlat
std
repz
fmul
and
ljmp
cmp
rolb
fchs
cli
clc
sti
iret
loopne
call
jmp
out
loop
in
cmc
hlt
iret
loopne
repnz
lds
xchg
rcr
xchg
loope
xchg
ljmp
cmp
mov
mov
jmp
into
enter
int3
fwait
outsb
mov
mov
jmp
jle
add
hlt
sti
loope
cmp
test
std
iret
out
loopne
aam
loopne
sar
in
xor
std
clc
lock
ds
and
test
fcomip
in
in
mov
xchg
int3
out
aad
xor
rcr
xor
loope
aas
repnz
fcom
cld
int
fisttpll
in
out
shlb
xor
int
jmp
fcmovbe
loop
cmc
iret
aam
fdivrp
in
out
out
out
aad
iret
das
xlat
int3
int3
in
jmp
out
fcmove
ret
sar
in
loopne
call
lret
shl
shlb
int
into
repz
int3
repz
sti
clc
enter
in
cmp
leave
mov
int
lret
fdivr
divb
out
fxch
shl
clc
neg
repnz
test
clc
sti
xor
shr
xor
lret
ds
repz
cmp
fneni(8087
fdiv
in
in
jmp
test
ljmp
icebp
out
shr
in
sarb
jmp
ds
fucomi
out
shr
and
addb
ret
out
cmp
repnz
ljmp
out
sbb
loop
loop
repz
out
jecxz
call
icebp
sarb
in
fcmovnb
ret
leave
rol
out
jmp
mov
mov
in
fdivl
icebp
aad
sti
add
stc
call
mov
roll
rcl
jmp
fstpt
out
xlat
hlt
cmpb
repz
iret
pop
loope
out
hlt
shlb
hlt
ljmp
ljmp
loopne
xchg
fucomi
out
xchg
loop
xchg
repz
out
in
sti
ljmp
shl
aas
jecxz
ret
xlat
in
icebp
stc
int3
icebp
mov
cmc
xor
shlb
aam
out
jmp
out
xlat
cmp
xchg
test
mov
iret
in
repz
cli
enter
cmc
xor
repnz
loop
in
sbb
and
xchg
cmc
mov
loopne
xor
in
jmp
into
leave
aas
shl
fidivrl
add
repz
out
lds
loope
shlb
leave
aad
stc
in
fsubrp
lock
shr
aas
sar
aas
cmc
fsub
xchg
lock
xchg
or
int3
call
fmul
cmp
loope
into
int
fcmovnbe
xor
test
xchg
aam
int
icebp
rcr
in
jmp
fdivr
sbb
idivb
ds
jmp
xchg
in
xchg
nop
in
jecxz
xor
out
stc
in
fmul
ds
jecxz
addb
mov
jmp
leave
iret
int3
into
fstp
pushf
mov
popa
fistl
add
into
lock
repnz
jmp
xor
cmp
fchs
fadd
repnz
icebp
jmp
sub
adc
xchg
lock
rcl
xor
push
sub
repz
loopne
les
xchg
fmull
loop
sti
cmc
xor
hlt
ljmp
call
cmc
jmp
out
rcr
movb
out
stc
stc
shlb
stc
cmp
cmc
cli
sbb
mov
xor
stc
out
iret
in
aad
icebp
loop
iret
lock
lret
stc
cmp
faddl
in
aas
stc
ljmp
in
fcomi
out
cmc
cmc
faddp
cmp
aad
lock
dec
test
cli
xlat
nop
int
lret
shl
sub
cmp
repnz
fsubrp
sarb
in
icebp
mov
xlat
loop
sbb
rcl
in
enter
jecxz
stc
lret
cmp
hlt
incb
loope
cmc
fcmovnb
lret
mov
mov
xor
cmp
repz
xlat
cmp
xlat
lret
loope
jecxz
repnz
ljmp
cmp
in
stc
cmc
in
cli
flds
repnz
icebp
out
lock
xor
lock
ljmp
xchg
icebp
mov
push
fsub
lret
sub
xor
clc
cmp
fsubr
call
addl
test
xchg
xor
aam
shll
fdivr
loopne
aaa
cmp
fcmovnb
fcmovnb
ljmp
fisttpll
les
clc
cli
enter
cmp
out
aas
enter
xlat
fsubr
cld
test
repz
cmp
test
out
fiadds
xchg
mov
out
out
fsqrt
jmp
cmp
cmp
cmp
call
dec
out
popl
cli
fidivrl
lret
int
out
loope
clc
sti
stc
ljmp
std
out
std
loopne
cmc
das
aam
jmp
filds
sti
fprem1
hlt
or
loope
xchg
or
xor
xlat
clc
test
fcom
loope
in
cmp
mov
loop
jmp
shr
shl
cmp
loope
call
into
clc
lock
fdivrp
fdivrp
cmc
out
fimuls
nop
ret
fcmovbe
fst
cmc
repnz
call
iret
xchg
xlat
cmp
icebp
fsubrp
hlt
adcl
hlt
das
cmp
add
mov
mov
jmp
rcr
int3
ror
fcmovnu
arpl
pop
cmpsl
push
add
add
lret
shl
into
vpsubb
add
out
sar
shl
loope
mov
sub
repnz
std
aam
out
in
fimull
cli
call
shr
iret
cld
xor
fmulp
cmp
icebp
int
cmp
cmc
loopne
in
fiadds
icebp
enter
out
xor
fidivl
iret
ret
idiv
out
fdivr
ret
mov
mov
out
lret
cli
ljmp
cmp
cmp
in
icebp
shl
cld
mov
test
lret
mov
ret
in
out
jmp
rcr
ret
cld
aam
jmp
icebp
into
repz
ror
xchg
icebp
int3
xor
cli
fdecstp
in
ss
cld
in
ljmp
nop
nop
fildl
jmp
hlt
idivl
loop
cld
cmc
std
call
jmp
rolb
into
out
lret
repz
cmp
lock
ret
rol
sar
jecxz
cmp
lock
loopne
jmp
in
repz
sarl
out
std
jmp
ret
xlat
loopne
test
lret
out
testb
in
in
out
icebp
xor
cli
clc
rcr
fstp
fsub
loopne
ret
clc
std
faddl
roll
into
enter
out
clc
cli
repnz
int
out
sar
repz
leave
lret
jecxz
adc
bnd
fsubp
cmp
jmp
jecxz
cli
lret
loope
out
fucomip
loop
aaa
out
out
cmp
repz
fcom
hlt
iret
fiadds
out
orl
xor
xor
cmp
fidivrs
cmp
rol
out
rolb
mov
xchg
in
rcl
jmp
repnz
std
cmp
cmp
out
repnz
xlat
sub
mov
xchg
ljmp
out
sarl
lret
lret
aad
test
xchg
jecxz
fsub
rcr
repnz
stc
jmp
out
hlt
jmp
fcom
loope
mov
ret
fadds
xchg
stc
into
repnz
cld
in
loope
sti
xlat
xorb
roll
loop
lock
int
test
lock
cli
xor
mov
stc
les
jecxz
loopne
out
shr
cli
lret
rcl
int3
xor
not
cli
shl
lock
aam
test
ljmp
in
fxam
xor
xor
in
int3
repz
fsub
rcl
enter
orl
lret
iret
into
aad
leave
fnsave
cmp
pop
dec
mov
jne
add
add
enter
lret
repnz
jmp
div
ljmp
cmp
iret
adc
roll
leave
into
jmp
mov
out
xor
clc
into
lock
xchg
ror
mov
orl
call
shl
cmp
hlt
xlat
cli
sbb
mov
icebp
cmp
ret
lock
jmp
int3
hlt
aas
cmp
lock
mul
xchg
cmc
stc
in
out
test
mov
stc
cmp
fnsave
aam
lock
sar
fdivp
mov
in
repz
in
call
sar
lret
int3
loop
ret
shl
icebp
loop
xchg
loop
fdivp
shll
aam
enter
xlat
shl
and
rol
loopne
jecxz
filds
into
xor
fdivrp
aad
cmp
stc
rcl
loope
mov
leave
jmp
mov
xchg
call
lret
int3
sti
lret
cmc
inc
repnz
sbb
or
flds
cmc
out
aad
divl
cld
hlt
ss
in
out
xchg
fmulp
loopne
call
xchg
test
fld
idiv
std
cmp
cmpb
sti
call
inc
mov
mov
int3
mov
hlt
shl
shl
into
cmp
out
cmp
shl
in
clc
jecxz
loop
std
fiaddl
std
loopne
int
sub
xor
ss
cmp
or
rorb
in
ljmp
into
into
lret
in
stc
hlt
stc
shl
roll
fcompp
out
fldpi
lds
in
incb
bnd
cmp
sar
aaa
rol
cld
ljmp
ljmp
repz
lret
lock
out
leave
xlat
std
cmp
leave
lret
clc
sti
xchg
out
mov
out
lea
lock
xor
repnz
ror
icebp
cmp
xlat
in
cmp
aas
shr
fdivrp
fcmovnu
mov
leave
out
cmc
cmp
lock
aas
std
cld
shl
and
std
adc
enter
cld
fsubr
sbb
xlat
xor
lret
cmp
jmp
cmp
std
icebp
add
fnstsw
iret
icebp
repz
lock
xlat
lret
cmp
jecxz
fcmovnb
repnz
std
dec
sbb
xchg
aad
in
cmp
xor
cli
ret
in
and
mov
int3
xchg
ljmp
in
into
pop
test
je
jmp
mov
int
sub
movsb
adc
jle
add
das
std
fcomi
fsin
sar
repz
fcomi
fcomip
xchg
jmp
out
iret
nop
loopne
in
stc
out
rcl
aad
in
ret
cmc
ret
rol
fdivr
fnsetpm(287
into
out
loop
orb
fadd
idiv
xlat
int3
rcr
xchg
repz
cli
out
addl
xchg
aam
out
in
aam
cmp
xor
fdiv
ds
cmp
fcmovnu
rorb
in
and
cmp
xor
rcl
loopne
idiv
clc
idivl
cmp
in
fldl
in
aaa
bnd
in
aad
lock
clc
mul
cli
out
out
mov
loop
ret
loop
stc
sbb
in
in
cmp
aad
push
repnz
fadds
test
neg
ljmp
lock
iret
sar
idiv
call
fcmovne
cmp
incl
in
in
mov
mov
mov
mov
int
in
xor
rcl
cld
test
jmp
jecxz
aam
mov
mov
mov
test
int3
xchg
mov
out
aam
ljmp
fildl
idiv
mov
sti
mov
cs
int
leave
sar
xor
fcmovnu
into
int3
cmc
rol
rol
mov
mov
clc
xor
aaa
in
xor
idiv
mul
clc
fstp
loope
adc
fcmovnbe
in
jmp
xlat
mov
xlat
int
xor
repz
loope
jecxz
cld
xchg
test
loop
jmp
repnz
xor
sarl
hlt
cmp
cmp
repnz
call
fsubrp
fimull
in
rcl
aaa
sti
call
repz
stc
shl
stc
add
cmp
out
into
hlt
div
sub
icebp
cli
int
out
fcmovnu
fdivr
cmp
std
xlat
aam
lret
jmp
mov
mov
nop
ret
enter
xor
in
test
rol
iret
fucomp
fsub
mov
mov
int
enter
xchg
xor
clc
aam
cmp
jmp
idiv
loope
shl
cld
mov
test
fimull
ljmp
ljmp
fmul
lock
xlat
movl
jecxz
loop
testb
iret
cmp
repz
clc
aam
fmulp
aad
test
out
call
dec
in
in
xor
int3
out
xor
cmp
cmp
repz
ret
fucomp
shl
aam
cmp
test
out
sti
clc
leave
cld
sti
fcomp
loopne
sbb
xor
pushl
pushl
mov
pushl
mov
call
jmp
jmp
lret
rcr
lret
fstpl
shll
rcll
add
add
orb
xchg
testb
cs
in
stc
lret
loopne
fsubr
mov
fstp
clc
in
lret
ret
repnz
mov
into
enter
lock
repz
cmp
ljmp
in
out
enter
out
xor
cli
xor
idiv
in
shl
ffreep
jmp
int3
jmp
int3
cli
fcmovnbe
in
sub
aaa
out
sti
xlat
xlat
cmp
inc
test
clc
jmp
rolb
cs
shl
clc
cmp
xor
aam
cmc
aaa
testl
loopne
cli
in
xchg
call
icebp
aad
jmp
rcr
into
fisttpll
call
int3
mov
iret
repz
call
clc
iret
fldl
not
in
rol
or
rcr
addb
shlb
ljmp
sar
stc
leave
out
in
test
loop
loopne
out
ljmp
icebp
imul
lret
fidivrs
int3
xlat
int
cmp
lret
in
xchg
into
call
aam
in
cmp
addb
in
sti
ffreep
shl
xchg
fdivp
aaa
fxch
lock
fucomi
std
in
fdiv
repz
hlt
clc
shr
fcmovu
xlat
aad
ljmp
repnz
out
out
repnz
cmc
sti
cmp
cmp
aam
jecxz
fisttpll
loope
cld
test
iret
xchg
in
loope
ss
clc
aam
cmp
loopne
not
jecxz
cmp
cli
mov
jmp
shl
xchg
das
repz
fcmovbe
cmp
test
out
loopne,pt
xlat
stc
stc
xlat
nop
fsts
xor
cmp
lock
cmp
sti
shr
cmp
out
clc
ret
cli
fmulp
cld
fmuls
icebp
mov
aaa
xor
xlat
cmp
fistpll
cld
aas
into
out
repz
fadd
stc
fisttpll
out
stc
rclb
out
neg
neg
aaa
fmul
into
stc
mov
jecxz
out
mov
xor
call
stc
repz
fdivp
out
sbb
aam
call
out
fsubr
mov
in
in
xor
aad
repnz
clc
ds
loope
fnstsw
xchg
fadd
leave
dec
enter
ficoms
xlat
in
cmc
test
out
rolb
shl
orl
idiv
fnstsw
fcmovne
rol
out
int3
repnz
test
rolb
ret
fldl
xlat
call
ret
push
mov
sub
decl
movl
adc
movl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
push
push
push
pushl
push
call
cmpl
jne
mov
inc
mov
jmp
mov
sbb
jmp
leave
aad
fst
leave
fldl
cli
sbb
sub
add
add
add
into
xor
neg
enter
stc
in
loope
rcl
jecxz
test
jmp
leave
mov
roll
out
cmp
fdivr
fdivrp
loop
sub
cmpl
in
mov
stc
decl
lret
xor
out
in
repz
jmp
in
sti
mov
fld
out
repnz
jmp
adc
lock
std
xlat
clc
cmp
div
fcmovnu
out
sti
test
stc
in
mov
jmp
mov
in
cmp
ds
cmc
int
fcmovnb
ret
imul
sti
lds
xchg
into
rol
rcr
ljmp
std
cld
icebp
shr
ret
out
leave
fstp
and
int3
ljmp
int
into
enter
ret
cmp
loop
shl
addb
test
cmp
idiv
ds
cli
shl
shl
cmc
xlat
in
imul
mov
loop
ror
mov
mul
iret
shl
iret
hlt
hlt
out
sar
sarb
ftst
rol
out
fmulp
mov
mov
or
sub
out
fidivrs
aas
cmp
mov
sar
loope
sti
fmul
ficoms
in
fld
xor
sti
loopne
rcr
loopne
loope
test
enter
sbb
adcb
in
lret
fdiv
std
fprem1
lock
repz
fadd
out
clc
out
xchg
jmp
rol
shlb
sarl
sti
lret
fninit
hlt
hlt
fdivr
cmp
cmp
ljmp
into
shl
jecxz
out
jmp
cmp
lret
not
stc
fcmovne
ljmp
aad
enter
mov
in
jecxz
shr
repnz
out
aaa
into
neg
xlat
sarl
out
icebp
cmp
shl
loope
cmp
mov
or
mov
shrl
iret
ljmp
lock
lock
lock
fimull
in
out
out
icebp
aaa
xor
cmp
lock
repnz
out
icebp
in
iret
int
int3
xor
into
sti
xor
into
lret
loopne
rolb
cmp
cmp
out
in
lret
out
test
jbe
add
add
push
add
add
aam
enter
fldl
push
xchg
imul
jle
mov
cmp
ret
fnop
rol
ffree
lock
in
loopne
loope
out
loopne
cli
mov
int3
loop
sarl
rcl
in
aam
ds
rcl
fdivrp
ljmp
fsubrp
shl
cs
icebp
out
cmp
aam
aad
aam
rcl
rcr
jmp
test
xchg
fcoml
clc
aad
shr
rcr
cmp
std
std
ds
test
enter
nop
in
iret
hlt
clc
xor
int3
fucomp
in
cmp
shr
test
std
fcmovnu
in
in
test
out
rorl
ljmp
aad
hlt
out
int3
clc
std
hlt
cld
stc
mov
lea
call
cmc
lret
enter
aad
rcl
int
xchg
addb
mov
stc
repnz
jecxz
out
cmp
and
ds
hlt
in
loopne
test
cli
out
lret
mov
jmp
repnz
pushl
icebp
lock
xor
xlat
repnz
stc
and
lock
jecxz
xor
ds
divl
xlat
test
shl
lock
ror
loopne
in
into
push
in
lock
lret
xor
sti
fucomi
sar
lret
cli
jmp
xlat
aam
out
sub
orb
cmp
out
int3
fnstcw
sbb
cld
aaa
frstpm(287
xchg
stc
cld
xchg
flds
sub
icebp
rcl
ss
loope
cli
std
cmc
fiaddl
jecxz
fst
call
aam
out
icebp
ljmp
fstp
addl
or
lret
cmc
out
out
int
neg
out
leave
fscale
in
jecxz
cmc
xchg
leave
addb
mov
jmp
stc
fidivl
in
aad
test
idivb
neg
ret
call
into
bnd
das
cmp
cmp
sub
les
mov
out
icebp
sbb
cs
iret
lret
lock
cmp
sti
fucom
rcl
ret
pop
xor
adc
mov
andl
add
sbbl
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
pushl
push
pushl
call
jmp
adc
mov
push
addl
push
test
je
mov
mov
xor
mov
sbb
jmp
xlat
aad
ror
cmpsb
xchg
jg
xlat
mov
add
add
std
out
std
repnz
in
xor
in
into
cmp
testb
ffreep
fdiv
test
enter
in
sub
fdiv
sti
cmp
ss
faddp
cld
test
cli
stc
jecxz
mov
cld
test
call
int
cmc
ss
aad
cli
cld
ds
clc
mov
int
lock
lret
leave
rcl
xlat
cli
cmp
cmp
faddl
icebp
sti
out
jecxz
int3
int
fst
shl
out
out
aas
xor
hlt
cmp
in
cmp
cmp
sar
fiaddl
ljmp
in
aam
shr
xor
clc
in
loopne
out
aad
aas
test
fdivp
cli
stc
int3
fsub
mov
xor
cmp
cli
repnz
stc
xor
cmc
fdiv
ret
repz
in
test
int
call
aam
xor
jmp
xlat
lock
xor
mul
mov
sti
ret
out
enter
xchg
xchg
xchg
repz
xor
cli
into
stc
sbb
rcl
int3
int3
into
mov
enter
xchg
repnz
lret
icebp
fmul
cmc
stc
mul
loopne
test
test
xlat
lret
mov
xchg
xor
ror
leave
out
cmp
into
into
out
fsubrp
aam
xchg
sti
fxch
addl
jmp
shl
rol
repz
cli
aad
aas
rcl
loope
mov
test
fisttpl
ss
ror
aam
in
shl
mov
fmuls
into
call
fsubr
cmp
ss
rcr
loop
jecxz
ffree
out
cmc
test
out
in
ljmp
out
fsub
cmp
out
cmp
rcr
fisttpll
lret
xchg
std
jmp
xor
shr
loopne
int
test
repnz
mov
jmp
aam
aaa
in
iret
ss
in
into
fadds
in
fimuls
loopne
nop
xchg
test
xor
divb
jmp
rcr
cmp
not
clc
loop
mov
mov
sbb
imul
andl
mov
inc
mov
cmpl
jne
push
pushl
pushl
pushl
call
cmpl
jb
sub
mov
add
add
sbb
jmp
int3
fstp
int
ficoml
fstps
mov
add
add
icebp
test
neg
clc
loopne
fsub
lret
repz
out
clc
int3
cmp
cli
shl
loop
fiadds
test
jmp
das
fsubr
enter
fdivrl
shr
sub
hlt
testb
out
xchg
xchg
xchg
xor
hlt
xor
lock
ljmp
fcmovnb
fildl
into
in
sub
clc
xor
clc
in
rcl
lret
fdivrs
cld
in
test
addb
xchg
out
int3
cli
int3
int
stc
stc
repz
icebp
fucomp
aas
loop
test
cmpb
fsub
leave
std
ljmp
ret
repnz
in
jmp
fcmove
lock
aam
call
lret
mov
call
xchg
loopne
into
xor
jmp
aas
ret
addb
jmp
cld
repz
mov
fldlg2
icebp
cli
cmp
sar
cmc
stc
rcr
faddl
rcr
int3
neg
xlat
fneni(8087
call
in
jmp
ret
repnz
hlt
sub
aas
out
jecxz
test
loop
mov
pushl
iret
repnz
xlat
cli
roll
repnz
cld
test
loop
call
and
lock
in
leave
cmp
cld
faddl
leave
out
enter
call
jmp
out
repnz
loopne
iret
lock
sar
loope
lret
mov
jmp
vphsubwd
cmc
fprem1
aam
into
ss
xor
rol
shl
roll
fucomip
mov
loope
jmp
into
rcr
clc
repnz
in
lds
mov
loopne
lock
mov
shlb
div
iret
xor
sar
cli
cmp
rcr
cld
call
ljmp
jmp
out
lret
rcr
shl
aam
icebp
rcl
cmp
loop
sti
mov
sub
call
cmp
xlat
out
test
aam
cmc
fsubr
int
in
mov
out
jmp
xor
jmp
mov
mov
sbb
jmp
rol
xlat
lret
rcr
push
adc
pop
stos
xlat
xchg
push
add
add
shl
iret
rol
cli
rorb
std
enter
or
iret
ljmp
in
cmp
hlt
not
hlt
clc
rorl
stc
orb
loopne
out
fstpt
fcomp
xor
rcr
fiadds
stc
cli
sti
in
or
into
dec
fmul
xor
div
aam
shl
imul
call
jmp
in
fcmove
test
lock
out
leave
enter
int3
hlt
out
repz
call
enter
mov
cli
movl
fmul
mov
int
dec
jmp
leave
leave
mov
out
sti
fxch
loope
test
shl
out
cli
clc
hlt
aaa
repz
fiaddl
icebp
out
mov
fsub
stc
out
fucomp
jmp
shll
aam
lret
xor
in
fiadds
in
loopne
ljmp
icebp
mov
in
xchg
ss
div
cmp
aaa
in
jmp
idiv
xor
mov
lret
mov
repnz
int
sub
rol
cmp
ds
loop
jecxz
fcmove
jmp
mov
rol
int3
xor
cmp
cld
in
fxam
out
cmp
test
xchg
fsubp
xchg
repnz
xor
loop
in
stc
cmp
fcmovbe
lock
addb
fdivr
int3
icebp
call
xchg
mov
int
cmp
fiadds
stc
cli
fsubrp
int3
out
int3
xchg
lea
ror
mov
lret
incl
int3
mov
lret
out
int
fnstenv
in
shl
aad
ss
sarb
jecxz
test
incb
and
dec
int3
in
xlat
lret
rolb
rcl
and
loopne
nop
out
flds
cs
call
sti
fdivrs
out
loope
ror
std
jmp
in
out
ror
out
cli
fucomp
hlt
sar
repz
xlat
xlat
rol
roll
adcb
into
in
lock
xchg
adc
sub
xor
sbbl
mov
movl
cmpl
je
cmpl
jne
pushl
call
mov
dec
mov
jmp
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
jmp
movzwl
add
mov
mov
movl
cmpl
je
cmpl
jne
push
pushl
push
pushl
push
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
or
mov
mov
mov
xorl
xor
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
call
cmpl
jne
mov
inc
mov
jmp
jmp
iret
lret
rcr
aad
enter
mov
and
add
add
sti
repnz
int3
fadds
iret
not
orb
lret
out
loop
mov
out
jmp
into
aas
sbb
cld
int
rcl
fadd
stc
mov
fcmovne
jecxz
fninit
xchg
xchg
add
fstpt
clc
shr
icebp
shl
aas
loop
loop
rcl
repz
fmul
xchg
shr
call
out
xor
out
rcr
in
fcmovbe
fcos
iret
cmc
cmpl
testl
shl
fsubr
imul
jmp
idivb
out
loope
faddp
clc
fcmovu
jmp
xchg
out
mov
int
xchg
rcl
fcmovbe
int
fidivrl
rcl
aas
cmp
cmp
out
incb
hlt
repnz
call
loopne
cli
stc
shr
in
aam
std
out
aam
lret
mov
mov
rol
aaa
clc
jmp
fdivr
shl
ret
test
xlat
into
in
fucomi
in
in
in
sub
leave
lret
fnstsw
jmp
cmc
shl
into
repnz
lret
int
sbb
xor
in
iret
icebp
cmp
add
rorl
fcmovnb
std
iret
mov
mov
xor
lret
shlb
ds
aam
icebp
fcomip
mov
loop
xchg
into
repz
sar
cmp
int
iret
repz
fucom
in
ljmp
out
loope
out
int
jecxz
into
in
in
std
stc
rcr
sar
not
div
aad
out
out
lret
cld
xchg
decl
cmp
cmp
cmp
iret
clc
out
aam
fst
sub
int3
out
enter
aam
in
into
enter
lock
out
aad
hlt
loop
ret
adc
sti
xlat
mov
into
jmp
xchg
hlt
lret
das
xor
fsubr
fcmovne
jmp
out
aas
shl
in
mov
loop
loop
in
loopne
cmc
call
cmp
f2xm1
rolb
leave
std
fcomp
cli
mov
or
rol
leave
cmp
ds
rcl
stc
in
iret
aad
test
push
aas
popl
rolb
add
mov
mov
movl
je
movl
cmpl
je
cmpl
jne
pushl
push
call
xor
add
dec
mov
jmp
adcl
mov
xor
decl
jmp
rol
xlat
aad
fstp
lds
fimuls
js
neg
add
add
repnz
xor
out
repz
ret
aas
xchg
icebp
inc
in
out
iret
out
addb
leave
xor
loopne
neg
test
ret
stc
std
flds
fucomip
ror
ljmp
iret
in
fsubrp
cmp
aad
mov
stc
jmp
loope
test
ss
xor
cmc
repnz
jmp
imul
incb
stc
mov
iret
int
xor
hlt
stc
shr
hlt
xorb
hlt
enter
lret
mov
fdiv
xchg
int
lret
out
not
lock
lret
ljmp
hlt
decl
decl
repnz
loop
aam
cld
hlt
call
rcr
aaa
mul
xchg
test
ffreep
mov
out
aad
hlt
xor
fmulp
icebp
sar
cmp
filds
ret
mov
rol
in
leave
sbb
xlat
xor
lret
out
in
cmc
stc
sarl
sti
hlt
stc
sarl
std
xlat
test
les
and
jecxz
xor
lret
xlat
aam
hlt
int
xor
fdivp
aas
mov
mov
fadds
enter
in
iret
repnz
icebp
std
in
fidivrs
fld
ljmp
enter
out
ss
fstpt
icebp
fdivrp
int3
fsub
xor
flds
std
call
std
in
aaa
stc
fsub
divl
aam
ffree
loopne
test
cmp
jmp
out
cmp
das
loop
leave
aam
sti
aas
loope
out
aas
out
out
fiaddl
mov
neg
mov
ljmp
in
lret
push
loopne
sar
flds
loop
loope
mov
adc
out
xor
neg
enter
fstpt
sti
fcomi
ret
repnz
lea
test
jmp
cmp
mov
enter
iret
sti
lock
in
icebp
test
xchg
icebp
nop
loope
int
in
xor
fdivrs
cmpb
fcmovnu
addl
mov
add
movl
cmp
movl
jne
andl
pushl
xorl
call
mov
xor
mov
movl
cmpl
je
cmpl
jne
push
push
push
call
cmpl
jne
xor
add
dec
mov
mov
dec
mov
jmp
mov
mov
xor
add
cmp
je
pushl
pushl
call
jmp
aam
fadd
fst
aam
add
jle
or
loopne
sub
jle
add
ljmp
loopne
repz
into
fmul
out
stc
lock
sar
fadd
rcr
lret
movl
xor
out
test
hlt
loopne
lret
filds
fld
les
xchg
mov
xchg
hlt
xor
xor
aad
into
push
jmp
not
loope
rol
loop
ret
mov
test
xchg
out
icebp
ljmp
cmp
int3
int3
fpatan
stc
flds
mov
orl
ljmp
cld
iret
in
loopne
rcl
sbb
movl
in
leave
xlat
out
jmp
fnsave
fcmovnbe
iret
shl
ljmp
xchg
mov
repz
int
sar
repz
cmp
xor
ds
cmp
loope
jmp
loop
repz
xchg
jmp
neg
aaa
repz
enter
repnz
clc
aad
jmp
in
cld
loop
sub
repnz
xor
int3
aam
fdivs
shll
ret
jmp
leave
filds
xchg
repz
shll
out
cmc
shr
fucom
cld
in
aaa
xchg
xchg
call
shl
xchg
inc
enter
out
int3
repz
shl
out
out
sar
incb
jecxz
ljmp
imul
lret
out
cmp
fadd
inc
sar
mov
into
fldl
jecxz
loop
lret
lock
aam
out
mul
out
mov
stc
leave
std
fisttps
test
xor
aad
cmp
clc
fcmovb
adc
aad
in
mov
repnz
das
cs
xor
fcmovnbe
in
aam
repnz
xchg
int3
in
ljmp
jecxz
shlb
cmp
aad
stc
lret
fdecstp
roll
mov
fsub
lock
out
ljmp
rcl
sar
lret
in
sar
clc
mov
test
aam
out
lret
mov
xchg
rorl
xor
int
int
in
cli
lock
cld
mov
mov
mov
xor
add
jmp
rcl
int
ffree
fstpl
jmp
jp
sub
jle
add
cli
lret
jmp
xchg
aam
aam
lret
leave
leave
jmp
cli
cmp
cmp
cld
cmc
enter
call
out
in
shll
jecxz
leave
jmp
lret
shl
hlt
not
jmp
cmc
cli
cmp
mov
xor
ret
cmp
sarb
enter
fstpt
out
orl
mov
cld
lret
lock
loope,pn
cli
sar
out
jmp
aas
sbb
lock
jecxz
ret
std
into
mov
jmp
jmp
jecxz
jmp
fcmovne
push
hlt
rcr
cmp
call
jmp
leave
repnz
ss
in
jmp
into
call
cli
icebp
out
fcmovnu
mov
std
loopne
xchg
out
ror
iret
cmc
out
in
ljmp
icebp
std
repnz
loop
fiaddl
test
mov
xlat
repnz
out
rcl
ror
out
jmp
in
and
cli
test
xchg
mov
sar
std
fsub
loopne
shl
not
fnstsw
cmp
cld
mul
mov
cld
clc
test
in
lret
in
mov
in
shr
fidivl
cmp
shl
repnz
out
out
clc
fcmovne
test
fsubp
loope
loopne
repnz
call
repnz
adc
out
icebp
add
loop
and
rorl
xor
jmp
idiv
frndint
int3
icebp
lret
xlat
sti
xchg
int3
rcr
test
xchg
rorl
into
int
shl
cmp
hlt
ffree
in
jmp
jmp
hlt
enter
int
div
call
std
xlat
cld
mov
in
neg
sbb
leave
xchg
lret
out
or
aaa
lret
out
jmp
jmp
cmc
sti
xlat
jmp
sti
int
call
aas
sub
repnz
neg
out
hlt
cld
lock
into
ret
sti
iret
loope
lret
sbb
out
xchg
mov
out
icebp
xor
into
lret
iret
fpatan
shl
hlt
sbb
incb
sti
call
das
cmp
cmc
in
lret
sar
hlt
aam
enter
adc
in
mov
jmp
int3
aas
rol
fst
fadd
ljmp
lcall
jle
mov
out
xlat
movb
xchg
nop
sub
div
fucomp
or
fldl
fcmovu
ret
fcmovne
out
out
cmc
xchg
mov
neg
ljmp
cmp
aam
stc
out
xlat
ret
stc
mov
out
loop
call
repnz
lock
sti
test
fld
aas
loope
ret
testb
cmp
fisttpll
hlt
out
ljmp
aad
cmp
movb
fcmovu
int
lock
mov
icebp
xor
stc
shr
hlt
enter
lret
cld
iret
testb
mov
xchg
out
in
cli
out
clc
int3
and
fst
fstp
leave
mov
clc
cld
jmp
loop
out
cmc
fsubr
int3
ljmp
test
lock
hlt
rol
lret
int
loopne
dec
call
out
in
cmc
cmp
ffree
rcr
vpminub
test
jecxz
mov
ss
xor
sti
lock
cmp
cmp
ret
loop
mov
lock
out
std
cmp
out
fcomp
lock
div
out
ret
std
hlt
call
out
shl
shl
cmc
jmp
sub
aaa
clc
cmc
lock
ds
jmp
test
stc
xchg
ss
shr
cld
cmp
out
cmp
aas
fdivr
aas
repz
in
leave
loope
out
test
aam
fcmovbe
ss
fdivr
loopne
rol
cmpb
std
test
lret
in
adc
sti
cmc
shlb
cmp
call
fildl
mov
repnz
shll
cli
fnsave
cmp
icebp
or
and
cmc
frndint
ror
out
mov
mov
repz
enter
shl
fdivrl
loopne
std
ret
shl
jmp
les
mov
jmp
jmp
shl
aaa
xor
cmp
rcr
fucomp
cmc
in
loopne
stc
xchg
int3
loop
addl
xor
inc
loopne
inc
in
mov
add
mov
mov
mov
add
mov
mov
mov
add
xor
mov
jmp
aas
ror
fcomp
fnstcw
dec
int
jns
incl
das
add
add
cmp
xlat
fprem1
testl
pop
jecxz
stc
clc
int
cmp
aaa
out
out
shl
shl
shl
addl
rcr
nop
in
test
iret
cmp
loope
faddl
fcom
stc
lret
or
out
aad
rcr
xor
aad
fcmovb
aam
ret
ret
call
incb
fucomi
test
ljmp
out
cmp
ret
or
ret
mov
jecxz
cli
loopne
jecxz
xor
cmc
bnd
iret
cmp
aad
fsub
cmc
iret
ret
sti
test
in
fsubp
ljmp
mov
jecxz
in
cmp
dec
lock
repnz
xchg
neg
enter
cli
call
jmp
fucom
das
xor
sarb
aad
iret
xlat
adc
iret
clc
test
loop
aam
xchg
add
loope
xchg
out
repz
ss
call
out
test
out
fadds
repz
xchg
test
nop
cmc
shl
fcomi
xor
jmp
loope
lock
std
out
xchg
cld
test
loopne
int
xchg
lea
jmp
int
xor
in
test
lret
jecxz
mov
shl
xor
jmp
cld
shl
repnz
aam
in
sub
aad
fsubrp
adc
loopne
aam
enter
neg
cld
ret
loopne
ds
mov
roll
into
xchg
orl
ret
shr
cmp
int3
loope
hlt
loop
fildl
jmp
cld
xchg
lock
in
out
jmp
int3
f2xm1
fst
lret
cmp
xlat
xchg
int
ret
incl
ss
in
cmp
in
clc
fsubp
lret
repnz
clc
ret
xchg
sbb
mov
int
aad
sub
rcl
cmpb
cmp
hlt
cmp
imul
std
loopne
call
icebp
loopne
xor
aam
out
cmp
imul
test
cmp
flds
jecxz
stc
std
rolb
mov
mov
jmp
aas
xlat
xlat
rcl
ror
fld
cs
and
xor
jle
add
cmp
shl
jmp
jecxz
in
test
std
repnz
aad
fisttpl
xchg
repnz
shl
cmp
out
neg
imul
fmulp
xor
loope
aas
cmp
mov
shl
int
in
aam
icebp
mul
out
out
div
fdivp
stc
sar
xchg
mul
addb
test
mov
out
loop
lret
int3
leave
shll
out
jmp
shl
icebp
shl
jmp
ljmp
into
xor
mul
call
in
xlat
fnstsw
sti
out
ds
addb
fucomi
fiadds
in
cmp
aad
ds
aas
repz
loopne
sti
enter
in
fmulp
mov
call
leave
not
xor
iret
enter
icebp
rcr
ds
xlat
div
test
lret
fdivrp
jecxz
jecxz
in
lret
fldlg2
leave
ret
cmp
in
lret
cmp
hlt
add
out
decb
out
lret
int3
iret
cs
divl
xabort
xor
aas
cmp
fcos
cli
mov
loopne
lea
in
in
cld
in
repz
int3
sarb
test
aas
neg
in
int3
out
std
out
in
jmp
fucom
out
aam
cmp
out
ds
iret
xchg
enter
out
nop
fsubr
mov
lret
out
fcmovb
iret
repnz
cmp
sar
fcos
cmp
fcmovnb
mov
leave
fistl
shll
cmp
fptan
aad
loopne
fadds
std
out
mov
fisttps
call
in
int3
xlat
icebp
out
xlat
out
xlat
clc
cmp
xor
fidivrs
lds
lock
xchg
div
int3
ret
cs
fiaddl
lock
xlat
fildl
orb
iret
out
out
cmp
movb
cld
aas
icebp
cld
ret
test
cld
leave
out
out
in
rcr
xchg
cli
in
call
div
ret
mov
xchg
clc
int3
test
ljmp
iret
in
aam
std
jmp
int
aad
shl
clc
clc
in
rolb
mov
add
aam
xlat
int3
fcmovnbe
frstor
nop
jmp
aaa
mov
add
into
jmp
enter
enter
cmp
repz
fstpt
not
mov
out
xchg
fsub
bnd
cmp
fdiv
aam
repz
icebp
adc
int
int
repz
leave
jmp
xlat
ljmp
in
std
test
lds
int3
iret
in
xlat
xor
clc
fstp
cmp
ds
cld
loope
decl
repz
fdivp
mul
cli
aad
into
jmp
loope
clc
xchg
call
xchg
ljmp
cli
leave
jmp
cmp
repz
in
and
lret
out
jmp
in
std
loope
jmp
lock
jmp
aad
ds
aad
xlat
std
mov
mov
test
int
fidivrl
clc
sti
cli
cmp
repz
fcmovnu
ret
out
cli
test
lret
out
lret
std
xor
xlat
ret
out
cli
cmp
loop
xor
cmp
fisttpl
out
fucom
cmc
xchg
lea
repz
cmp
idivl
out
cmp
mov
mov
in
jecxz
in
out
in
jmp
fidivl
lock
out
aam
cld
ret
mov
loope
into
in
iret
hlt
lret
jmp
cmc
aam
jmp
xor
ds
aad
iret
in
xchg
call
xchg
lret
xor
jmp
cmp
shl
xlat
test
jecxz
repz
fxch
sti
jmp
int
std
fcomip
loopne
call
loope
lock
rorl
repz
cmc
cmc
shl
leave
hlt
lret
hlt
icebp
ret
aas
fucom
enter
xchg
mov
ljmp
lock
cmp
fildl
in
cmp
fdivr
lock
loopne
in
leave
jecxz
into
int3
loop
stc
cld
ret
aam
cld
lret
dec
int3
ret
mov
cmp
cmc
out
xor
ret
icebp
vshufps
dec
rclb
jne
pushl
call
jmp
lret
rcl
fstp
xchg
sti
inc
in
scas
std
pop
aaa
je
add
add
sub
cld
ret
call
loope
in
out
icebp
sti
aaa
jmp
inc
fadd
std
test
sar
jmp
ror
cmp
jmp
cmp
div
stc
add
sti
fnstcw
fimull
fsubr
mov
inc
iret
cmp
fidivl
sarb
mul
loop
xchg
repnz
and
clc
in
call
out
out
fldln2
shl
lret
in
aaa
xor
adc
fmul
jmp
iret
xchg
aad
xor
lock
xor
dec
aam
loop
repnz
repz
loop
ret
xchg
int
loopne
rcr
xor
cli
int3
idivl
int
repnz
aam
cmc
fisttps
aam
out
das
test
fdiv
std
aad
aad
fadds
loop
mov
sbb
leave
xchg
rcll
jecxz
in
xlat
int
lret
into
shl
stc
loopne
sbb
mov
fsubp
popl
xchg
fsubrp
rcl
div
in
aad
xor
jmp
in
aas
mul
addl
mov
xchg
aad
aam
rcl
aad
aaa
xor
icebp
fdiv
aam
cmc
enter
in
in
mov
xor
fdivrs
fucomp
fdivr
cld
in
cmp
rcr
sti
fimuls
incl
int
fdiv
xor
std
repz
hlt
aam
fstp
xchg
sbb
std
test
call
jmp
xlat
icebp
xlat
lock
in
hlt
cmp
fcmovu
loope
int3
lret
repnz
lock
bnd
aad
fldpi
cmp
div
lock
mov
fisttpl
rcll
aad
out
aam
clc
repnz
out
cmp
test
out
xchg
mov
out
sub
out
out
jmp
enter
int3
fsubp
shl
rol
cli
in
clc
ljmp
test
clc
ret
cmc
out
cld
cmp
xor
repnz
sti
ret
aas
cmp
fldl
and
ss
cmp
shl
loopne
repnz
inc
cld
jmp
vshufpd
ror
adc
push
and
imul
add
fdivr
inc
cmp
out
mov
shll
cmp
cmp
ss
loopne
cmp
aas
cmp
shr
rol
mov
out
adc
cld
push
div
enter
imul
in
sti
fucom
cld
clc
push
mov
movb
iret
repnz
shl
stc
cmp
hlt
div
rcl
cmp
sar
repz
clc
clc
jmp
rcl
decl
ret
cs
int
ds
jecxz
fcmovnu
fimuls
addb
repz
clc
in
jmp
in
cld
int3
fucomip
aad
cmp
loopne
ret
icebp
fsub
sti
loop
cli
leave
ljmp
lock
cmc
aaa
shl
xor
div
add
jmp
sti
std
adc
in
in
out
out
loope
jecxz
test
sar
test
int
test
cmc
in
lock
cmp
loopne
in
ffreep
loop
cmc
stc
out
xchg
in
mov
ss
xor
imul
icebp
fcom
sarb
repz
lock
shr
aad
call
out
fcmovnbe
into
out
loopne
fsub
jmp
loop
xchg
loopne
fmul
cmp
aad
call
fcmovne
icebp
call
jecxz
out
xchg
roll
out
fldln2
cmp
icebp
fdivrp
ret
into
lock
cld
ret
mov
orl
cmp
out
iret
int
cmp
iret
repnz
testl
repz
aam
jmp
std
out
out
loopne
aam
ffree
mul
loope
mov
in
out
lock
out
xor
out
sti
fnstsw
leave
stc
aad
push
lock
enter
lret
test
jmp
fsubr
mov
xor
leave
out
xlat
out
lret
cmp
aad
aas
icebp
fsubrp
fldl
enter
xchg
shll
xor
iret
std
loope
rcl
clc
test
lret
out
movl
out
in
cmp
std
mov
xor
jmp
int3
aas
ret
sbb
roll
lods
call
add
icebp
and
clc
test
lds
shl
fdivp
cli
stc
out
loope
xor
xor
cmp
sti
out
repz
hlt
xor
cli
clc
cld
test
mov
iret
xor
ss
cmp
out
out
jmp
fldl
out
mov
frstpm(287
jmp
test
shl
into
aam
into
rcr
clc
icebp
into
loopne
div
mov
clc
mov
ret
std
out
loope
cli
cmc
in
xchg
loop
ljmp
out
icebp
stc
jmp
test
call
cmc
out
mov
call
out
lret
cmc
out
in
mul
out
fxch
in
in
xor
in
std
into
mov
vfrczps
jmp
out
out
fcom
jmp
ds
filds
aam
into
sti
or
rcl
nop
in
hlt
xor
sti
icebp
call
loopne
idiv
loope
mul
leave
ret
jecxz
leave
orl
xor
ljmp
hlt
fdivrs
cmp
stc
les
cmp
lret
out
xlat
repz
lret
sar
into
cmp
test
fcomi
lret
jecxz
int
mov
mov
das
ljmp
aad
hlt
repz
repz
sti
jmp
mov
loopne
into
les
xor
jmp
xlat
fcmovnbe
ret
out
aad
xlat
adc
jecxz
in
in
lock
xchg
mov
jmp
xor
jmp
xchg
ds
ljmp
or
xchg
xchg
aad
jecxz
stc
repz
cmp
lock
cld
cmc
loop
loop
rorl
jmp
icebp
lret
iret
into
out
stc
shl
in
in
icebp
xchg
cli
repz
ds
cld
xchg
xchg
icebp
xlat
xor
in
fucomi
int3
roll
ret
test
test
sbb
not
in
iret
enter
or
cmp
into
in
out
ret
ret
mov
out
mov
mov
in
in
cmp
int3
cmp
lock
mov
jmp
xchg
aad
stc
fmul
add
cmp
jmp
rol
rcl
rol
aad
sahf
xor
into
push
pop
xlat
mov
add
enter
aas
sti
repnz
cld
repz
xlat
jecxz
faddl
leave
jmp
jmp
in
repnz
test
mov
addl
clc
in
cli
repz
out
in
ret
into
fcmovu
ret
mov
xchg
fsub
test
lret
in
fdiv
xor
fmulp
cld
ror
sbb
icebp
fucom
sub
leave
mov
rcl
in
xor
ret
cmp
aad
leave
lret
fiadds
std
xchg
enter
xchg
int3
rcr
vpsrlq
ss
rcl
hlt
xor
repz
test
and
stc
shl
out
jmp
lock
fcom
in
xlat
rcl
repz
lock
fiaddl
clc
mov
test
adc
iret
icebp
ret
repz
cmc
cmp
icebp
addb
test
call
sti
sub
addl
fidivl
aam
fnsave
leave
xor
test
sar
lds
int
int3
loopne
in
hlt
ljmp
out
hlt
ds
cli
fadd
cmc
shl
in
mov
lret
fmuls
fmulp
lock
bnd
jmp
xor
cli
ds
ret
div
out
cli
in
fsubr
jmp
in
mov
ss
out
out
enter
cmpb
cli
in
loopne
into
stc
call
aad
cmc
fpatan
bnd
cmp
in
fcmovnu
mov
imul
lea
loope
ljmp
cmc
iret
cmp
not
std
mov
out
orb
xchg
rcl
in
jmp
aad
lock
loop
faddp
jmp
loope
clc
out
in
loope
fcom
xor
idiv
shr
aad
aas
ffree
idiv
enter
int3
in
ror
xchg
xor
xor
xor
clc
into
leave
cmc
neg
fsubrp
sbb
fcom
test
orl
test
xchg
rcl
out
ljmp
shl
hlt
ds
out
repz
cld
clc
test
int
stc
sub
test
add
push
add
add
ret
mov
mov
pop
aam
add
add
hlt
cs
lret
sti
rcr
iret
stc
cmp
rol
mov
mov
std
cmc
int
aam
stc
ss
ds
aad
stc
ret
and
fsub
xchg
in
jmp
loope
xor
xlat
out
in
jmp
addl
mov
fstp
fsin
adcb
sub
jmp
std
mul
stc
loope
leave
ds
cli
shr
iret
call
enter
in
fcomp
aaa
fsubr
cmp
jmp
mov
mov
in
xchg
sub
cmp
loopne
iret
cmp
ret
rol
leave
mov
fcmovbe
lret
sub
xor
sub
out
ds
repnz
shl
fdivr
stc
lret
fucomip
call
icebp
repnz
cmc
cmc
lret
lret
cmp
loopne
hlt
fadds
jmp
call
iret
mov
enter
into
in
cmp
sar
loope
cmp
hlt
jecxz
fucomip
cld
cli
ficoml
sub
rcl
xor
fsincos
rol
out
fcom
clc
mov
call
out
xor
lret
hlt
sar
cmc
ret
loope
cld
aad
repz
cld
in
std
mov
shr
in
jecxz
ret
repz
leave
enter
lock
rol
cmp
mov
test
loop
sub
ret
shl
out
std
shl
idivb
ret
fcmove
mov
test
jmp
cli
dec
call
fxtract
int3
cmp
fstp
loope
xlat
test
stc
vpsubw
in
adc
test
xlat
jmp
cmp
cmpl
xchg
jmp
int
mov
mov
in
fdiv
enter
aad
loopne
test
fisttpll
rorl
xor
dec
loope
cli
icebp
fprem
cmpl
jmp
jecxz
iret
in
shlb
int
into
int
fmuls
test
mov
inc
cmp
jb
jmp
mov
xor
add
jmp
mov
movzwl
mov
mov
mov
mov
mov
jmp
leave
aam
aad
int
fisttpll
scas
imul
push
roll
cmp
jle
lea
fisubrs
in
icebp
ljmp
in
adc
fadds
test
jmp
sti
lret
std
rcl
ror
aad
ret
xor
repnz
ss
call
ret
lret
into
mov
xchg
loop
mov
shr
out
leave
in
mov
fidivrl
fcmovu
out
in
mul
ffree
lret
fbstp
fldlg2
out
cmp
fscale
xchg
enter
lock
rorb
cli
hlt
xor
clc
hlt
xlat
xor
test
ret
xchg
sbb
nop
fdivp
fucom
jmp
out
out
cmp
iret
cmp
fcom
fnsave
xchg
not
fmuls
repz
test
cmp
into
loopne
std
sbb
out
mov
out
lea
test
fdivs
fcomp
in
hlt
cmp
neg
loope
loop
ret
fcomip
in
out
jmp
incb
call
aaa
rcr
cli
aad
testb
inc
sbb
and
call
sti
shlb
out
aas
aad
adc
std
hlt
repz
lret
loop
clc
xchg
ffreep
fstl
out
aam
xor
int
jecxz
xchg
loope
icebp
ret
loope
stc
jmp
in
xor
out
xchg
shl
in
lock
cld
fcom
out
in
repnz
repnz
sub
fsubrp
xchg
in
loop
lret
int
shr
int
std
cmc
fidivrs
cli
cmp
rcr
testb
lock
hlt
stc
ljmp
cli
sbb
hlt
xchg
loope
xlat
enter
loope
loop
xchg
lock
xor
xlat
cmp
fcmovnb
aam
fmulp
fadds
aas
shl
lret
test
into
loop
into
xchg
xor
enter
cmc
iret
xor
fstpt
in
test
loop
sti
cmc
out
out
in
lret
xor
cs
lret
xlat
cld
fcmovb
cmp
cli
icebp
aam
loope
mov
out
ljmp
aaa
loop
hlt
xlat
icebp
leave
cmp
cld
cmp
dec
or
add
cmp
jne
mov
xor
jmp
mov
add
mov
mov
test
je
mov
push
pop
push
dec
jmp
enter
fcmovu
int3
aam
in
add
pop
jo
ret
add
add
cmc
mov
faddp
loopne
jmp
or
out
in
lret
ret
out
out
jmp
repz
cli
fsub
mov
test
test
lret
xorb
out
cmp
in
cmp
fdivr
fscale
loop
cmp
std
shr
mov
cmp
lret
jmp
loope
int3
cld
in
aas
repz
xlat
mov
lea
into
in
lret
jecxz
stc
sar
repz
iret
fcom
xchg
rcr
mov
std
enter
shr
mov
loop
in
loope
idivl
enter
lret
cmp
addb
int
int3
and
test
out
in
int3
in
leave
std
loope
fstp
inc
out
ret
sub
iret
lret
adc
aad
repnz
icebp
cmp
xor
fmul
xlat
test
mov
sarl
xchg
fxch
lret
les
ret
iret
ret
cld
into
fcom
aad
lret
div
rolb
loopne
fdivr
fldl
enter
in
out
aas
fyl2x
repz
loope
clc
leave
mul
in
lret
jmp
mov
repnz
rcr
sti
ds
cmp
test
leave
in
ljmp
xchg
xlat
fldcw
icebp
sti
fcmovnu
ds
shl
mov
or
ficoml
rol
xor
aam
into
icebp
ss
into
cmp
ffree
call
out
int
loop
lock
xor
rcr
cmp
icebp
clc
in
cli
sbb
loope
loope
ror
mov
aam
loope
ret
xlat
cmp
in
shr
xor
inc
lret
out
jmp
hlt
aad
div
fsubr
out
cld
int
incl
lock
into
test
ljmp
loope
out
repnz
mul
mov
mov
fsubr
cld
call
in
leave
xor
cmp
aad
repnz
fucomip
aad
sti
mov
aas
std
dec
loope
roll
xlat
xor
cld
fdivr
dec
pop
xchg
jmp
aas
int3
mov
std
int
pushf
xchg
mov
jle
add
xlat
jecxz
shl
and
test
cli
fmul
test
shrb
shl
cmc
int3
in
fadds
flds
fldz
call
stc
rol
fmul
call
icebp
idiv
ds
mov
addl
xchg
cmc
out
xor
out
idiv
into
das
lock
cmp
cmp
mov
and
fsubr
jmp
mov
in
xor
in
cmc
aaa
repnz
xlat
cmp
lret
icebp
shl
xchg
sub
mov
int3
call
nop
push
xor
fdiv
aad
aaa
xor
cmp
test
les
xchg
in
out
fdivp
in
stc
into
cld
call
fprem1
repz
icebp
mov
jmp
fucom
jmp
enter
cli
xor
shl
addl
mov
mov
jecxz
testb
hlt
out
aaa
out
icebp
lock
out
fdiv
ret
xor
mov
faddp
in
mov
leave
int
shl
xor
cmc
call
cmp
in
ret
hlt
and
mov
cli
hlt
xchg
les
aaa
int
fucomi
cld
repz
sar
cli
movb
std
repz
out
cmc
sub
call
xor
int
ror
repnz
call
cld
out
sti
loopne
xchg
mov
into
test
jmp
sarb
ffree
cmc
incb
int
in
shl
divl
loopne
shr
into
lock
jmp
stc
cmp
adc
vpsubd
cmp
stc
in
orb
in
aad
rcl
out
clc
xlat
aam
xlat
mov
out
mov
loope
xor
out
xlat
enter
fabs
aad
cli
fcmovnbe
loope
out
int3
jecxz
aam
test
out
iret
clc
enter
repz
fadds
jecxz
test
in
fistl
aas
divb
in
xlat
cmc
lock
sar
cmp
stc
out
ljmp
fxam
rcr
test
aad
ret
in
fcmovbe
in
flds
add
add
lret
int3
fcmovnu
mov
jl
sbb
inc
movl
jle
ror
cmp
rcl
sub
cmc
ret
loop
jmp
leave
jmp
ffreep
xchg
iret
iret
test
out
fidivrl
aad
loope
out
rol
out
sti
out
ljmp
call
lret
ss
out
idiv
cmp
into
cmc
icebp
ret
fmuls
out
mov
rcr
out
out
ret
jmp
sarl
repz
xor
in
xor
cmp
loopne
sti
int3
cli
mov
loope
notb
ss
xor
in
neg
fcom
fld
aas
std
leave
cli
fucompp
mov
call
jmp
ss
lret
fstp
clc
cmc
aam
sar
and
orb
xchg
xchg
nop
test
fcmovne
cmc
cmp
fiadds
aam
call
jmp
out
fimuls
rol
cli
dec
cmp
sar
iret
loope
in
in
mov
test
nop
lea
lret
loop
out
sti
icebp
call
ffree
ftst
call
std
lret
in
mov
aad
xor
fmul
fsub
cmc
xlat
ret
std
incb
jmp
xchg
rcl
test
xor
lock
ror
loop
cmp
sti
xlat
xchg
loope
out
sti
mov
xlat
ljmp
lret
aad
out
loopne
fimuls
test
ljmp
cli
xor
out
xor
fsub
cmp
out
jecxz
test
xchg
xor
jecxz
lock
stc
in
test
sub
shr
mov
xchg
xorl
divl
cld
cs
in
repz
out
ret
in
fcomi
loope
xchg
out
out
in
in
fucomp
shl
cli
fsubrs
jmp
out
in
sub
lock
repz
out
into
lret
call
std
cmc
shl
addl
loopne
roll
xchg
in
sub
cmp
clc
fsubrp
int
cmp
out
fdivr
addl
loop
shr
and
inc
in
scas
shrl
mov
mov
mov
xor
mov
add
mov
mov
xor
add
mov
jmp
mov
rcl
ror
fnstcw
lret
adcb
jle
add
add
aaa
shl
lret
lock
cmp
fcomi
xchg
mov
jmp
jmp
fst
in
aad
xor
out
int3
fldln2
fnstsw
addl
leave
aad
loope
lock
repnz
mov
div
xor
cs
int3
int3
aam
rcr
aam
neg
cmp
mov
lret
jmp
incl
jecxz
repnz
hlt
cmp
loop
shl
jecxz
jmp
int3
jmp
loope
addl
xor
cmp
cmc
mov
jecxz
loope
out
lret
xor
stc
fldln2
in
cmp
aas
cli
xlat
fdiv
imul
cmp
lret
into
in
adcb
xor
int
icebp
xor
hlt
jecxz
out
lds
cli
fisttps
loopne
aam
xor
icebp
iret
cmp
stc
repnz
leave
mov
xlat
out
xchg
rcr
out
std
or
out
ror
xor
repz
cmp
xchg
flds
int3
mov
pop
iret
cmp
cmp
out
repnz
leave
cmp
cmp
repnz
call
fildl
adc
repz
cmp
repz
idiv
repz
shr
loope
loop
repnz
mul
jmp
jmp
xchg
leave
hlt
fadd
lock
fxch
sarl
sar
rolb
jmp
leave
clc
lret
shr
mov
shl
repz
xor
in
lret
shl
in
loopne
out
aad
fmul
fcmovnb
loopne
fiadds
out
rcl
shll
call
fcmovbe
cmpb
fcmovb
loopne
sar
loope
test
in
fcmovne
xchg
enter
aam
cmp
xor
xacquire
shl
xlat
std
loope
ljmp
addb
ror
out
dec
aad
loop
cmp
rcr
xlat
fdivr
out
lret
in
xchg
ss
xor
loopne
and
fiaddl
mov
fistl
aad
ret
in
ljmp
inc
cld
out
test
mov
lds
mov
jmp
aam
int
int
aam
xchg
inc
lret
jecxz
cmp
add
add
fucomi
fucomp
loop
lock
enter
into
fcmovne
fdivrs
fldl
std
xchg
mov
in
mov
hlt
sarb
push
aam
lret
cli
rcl
aad
adc
fscale
out
out
in
jmp
lret
stc
cli
cli
out
cld
hlt
cmp
fcmovbe
loope
loope
sbb
mov
out
cmc
int3
jmp
xlat
fcomp
jmp
repz
cli
cld
loop
hlt
ret
ljmp
xchg
out
mov
out
hlt
jmp
into
in
jmp
fidivrl
test
rorl
cld
repnz
xchg
into
mov
jmp
cmp
repz
repz
ret
sar
sar
ljmp
jmp
int3
mov
lret
shl
xlat
cmp
icebp
iret
xlat
jmp
into
jecxz
cmp
call
orl
in
lock
aam
cmpb
cmp
aad
in
fsub
aad
jecxz
fsubrp
fadd
in
faddl
cli
in
out
ss
rcl
cmp
div
icebp
rcr
repz
in
fcmovnbe
mov
ljmp
shrb
jmp
shl
out
div
shl
aam
aam
mov
clc
nop
sti
loope
xchg
sub
int
fdivp
addb
fiadds
sbb
std
nop
cld
xor
fcom
xor
fucomp
xor
ret
repnz
jecxz
addl
shr
shl
aaa
shll
enter
fdivp
loope
clc
xor
rolb
shr
ror
std
call
frndint
jecxz
in
fdivr
test
int3
mov
jecxz
iret
mov
xor
cmp
cld
cmp
std
int3
adc
test
cmc
fiaddl
xchg
xchg
decb
fnstenv
hlt
icebp
out
rcl
sub
nop
icebp
out
mov
cs
iret
rcl
fdivr
loope
jecxz
iret
xlat
repnz
sbb
leave
incl
stc
aad
cli
clc
aaa
cmp
out
cmp
ret
cmp
rorl
or
push
add
add
ror
rcr
int
stos
outsl
int3
nop
scas
rcrb
repnz
add
add
ret
loop
ljmp
int3
int3
cli
test
fcmove
aam
cmp
hlt
xlat
aad
test
mov
out
mov
shr
sarb
xor
into
xor
and
hlt
cmp
xlat
out
lret
kmovb
xchg
repnz
icebp
lret
lret
cli
repnz
shlb
rol
repz
cli
lock
repz
dec
mov
cli
sti
xchg
int3
shl
enter
cli
clc
fnsave
fstpt
ljmp
ljmp
loop
ljmp
lret
sti
sar
repnz
loope
mov
std
lock
jecxz
loope
shl
xor
cli
out
fyl2x
shr
fcomi
cli
fsub
fiadds
roll
mov
loopne
lret
lret
xor
in
sarl
testb
in
int
jmp
rcr
popl
lock
shr
lock
ds
rcl
les
fmull
shr
loope
fdivs
leave
ljmp
sti
loopne
fcmovne
or
icebp
ret
fcmove
sti
loope
enter
leave
fdiv
cmp
clc
fcmovne
in
sti
xchg
repnz
in
sbb
loopne
xchg
repz
ljmp
repz
mov
call
int3
xor
lret
sarl
icebp
loope
in
mov
out
in
rcl
xchg
xchg
xor
mov
clc
int
fucom
test
mov
clc
in
fcmovne
adc
jmp
jecxz
out
std
in
out
cmp
sar
ffree
rorl
fdivr
addb
rcl
repnz
aad
aad
cli
loope
shl
sti
repnz
out
addl
xor
out
in
fcmovne
call
std
loop
stc
stc
call
orl
xor
cmp
repz
cmp
cld
loop
not
neg
jecxz
adcb
loope
in
in
aam
out
aam
loop
cmp
jmp
ret
xlat
fmul
fmul
rcr
test
daa
or
add
add
loop
cmc
xchg
jmp
out
ljmp
cmp
cmp
neg
std
repnz
sti
xchg
clc
xchg
mov
out
cmp
lock
fstpt
repz
sar
xchg
xchg
ret
out
leave
iret
decl
shlb
xor
sti
clc
fdivrs
xor
out
aas
xor
int3
out
into
fmulp
lret
adcl
out
cli
xlat
fsubrp
rolb
fcomi
ret
adc
shlb
into
sarl
shr
out
int3
aaa
cld
cmp
int
cmp
fdiv
in
out
enter
xchg
xchg
call
out
cmp
int
cmp
out
rcr
cmp
ret
jmp
rcl
shl
in
clc
jmp
lret
jmp
into
iret
add
push
xchg
out
ljmp
lret
fidivrl
out
repz
sti
cmp
not
rolb
fucomi
add
xchg
aam
in
jmp
fdivr
fbstp
cmp
loopne
repnz
shl
ret
out
test
jmp
mov
iret
xor
les
xor
rcl
rcl
movl
mov
in
jmp
repz
sarl
clc
in
iret
repnz
loop
out
mov
loop
mov
addl
enter
into
cld
int
idivb
shl
ret
call
leave
loop
lret
xchg
xchg
loopne
aad
out
stc
xor
test
test
xchg
xor
loopne
xchg
incb
jmp
lret
int3
loopne
iret
loopne
jecxz
cmc
fincstp
mov
mov
xchg
repnz
out
int
repnz
shl
shl
orl
loopne
xchg
leave
cmc
fcom
fisubrl
lret
cmc
or
aas
cli
cmp
in
mov
in
call
sar
int
xor
fldz
fmul
repnz
sti
repz
jecxz
sar
shl
in
leave
and
out
xchg
in
icebp
int3
int
jecxz
clc
xor
pop
add
mov
jmp
rcl
leave
int3
leave
fldt
not
xor
cmp
jle
testl
enter
idiv
in
int3
xchg
jecxz
lock
xor
aad
cli
fcmovnu
cmc
into
cli
icebp
not
fldl
cli
cli
int3
icebp
xchg
decl
int
in
repnz
cld
fiadds
xchg
and
fcmovbe
mov
fmul
mov
jmp
sti
repnz
repnz
repnz
mov
test
out
sub
fdivr
call
rcl
rcr
fadds
mov
std
test
mov
in
loope
xor
cmp
ror
fst
ss
lds
loopne
out
out
loope
ljmp
xlat
fidivl
ss
loopne
hlt
aam
addb
out
sub
in
jmp
fcmovbe
xlat
aad
fucom
repz
out
xlat
hlt
shr
stc
rolb
fisttpl
lret
repz
clc
cld
aaa
hlt
cmp
sar
fsub
enter
mul
int3
nop
stc
loopne
std
rcll
fidivl
cld
call
out
repnz
mov
jecxz
hlt
xchg
xchg
repz
repnz
rcl
cmp
cld
test
in
incb
xchg
aad
ss
out
rcr
fmul
aam
sti
les
cld
fdivr
fcom
les
in
xchg
repz
lock
in
call
fidivl
loopne
cmp
std
out
cld
fcmovnb
fucomi
incl
int
call
clc
out
leave
clc
cmp
sarl
rcl
and
jmp
lret
leave
mov
jmp
div
hlt
leave
jmp
in
clc
ds
shl
test
xchg
in
fcomp
mov
mov
xchg
out
repz
enter
out
hlt
sarb
xlat
cmp
xor
jmp
jecxz
rol
mov
fdivr
fucomi
cmp
cli
lock
test
iret
fsub
decl
iret
int3
icebp
jecxz
sub
ss
int3
iret
fcmove
jmp
imul
roll
xor
fdiv
movl
or
addb
add
add
ror
fstp
ffree
pop
fiadds
and
cmp
jle
fadd
hlt
aaa
enter
roll
rolb
mov
iret
in
in
xchg
xchg
div
int
iret
hlt
shl
out
out
fildl
jecxz
cld
loop
icebp
loop
call
out
stc
test
fsubr
lret
aas
rcr
adc
loopne
orb
xchg
ror
loope
fcmovne
in
cld
cmp
in
aas
out
clc
aad
xchg
decb
mov
int3
in
sub
out
into
cmp
cmp
in
xchg
cli
call
mov
mov
lret
jmp
cmp
stc
loopne
cmc
iret
call
aad
loop
jmp
not
div
icebp
lret
icebp
lock
rcr
jecxz
loop
decl
mov
shlb
sarb
clc
aad
xor
cmp
int
ret
rol
aad
adc
sti
addl
repnz
int
ss
loope
fcmovb
sub
leave
fcmovnb
xacquire
lret
cmp
xor
fidivrs
jecxz
testb
enter
out
xor
aad
aad
out
in
into
mul
in
addl
repnz
xor
cmp
cmp
mul
cmp
jmp
mov
or
out
jecxz
hlt
repnz
lret
sti
rol
in
repnz
lock
mov
sub
nop
fcoml
loopne
cmp
out
fcmovnbe
icebp
int
into
cmpl
hlt
out
iret
icebp
mov
idivl
stc
ret
aad
cmpb
cmp
stc
cmp
sti
sar
fsub
stc
out
mov
rolb
loop
aam
int
into
ss
in
cmc
in
sbb
fiaddl
out
fmul
test
rcl
in
cmp
lret
clc
cmp
loop
sarl
aad
movl
aad
out
int
aam
cmp
call
push
xor
shl
mov
orb
push
pop
jmp
enter
int3
aam
pop
adc
jbe
add
xlat
add
add
repz
in
shr
out
xor
repnz
aas
xlat
lret
out
aad
ret
shr
cli
out
mov
xchg
mov
loope
out
out
shl
cmp
sti
cmp
repz
imul
out
idiv
cli
loopne
test
test
divl
test
clc
stc
fsubp
faddl
mov
fdivr
xchg
loop
repz
icebp
fucomip
sbb
sar
icebp
addb
xchg
call
test
cli
enter
iret
loop
fcom
testb
out
leave
shl
lock
xchg
test
jecxz
cmp
ror
lret
stc
hlt
les
int3
lret
mov
mov
mov
cmc
jmp
jmp
rol
sub
call
jmp
loopne
call
cmp
lret
call
cmp
stc
addb
clc
fadds
test
orb
enter
aaa
sar
idivl
out
hlt
aam
xchg
fistpll
addb
cmc
xchg
shr
int3
enter
aam
addb
loop,pt
cld
aas
enter
cmp
ficoms
sub
xor
idiv
loop
fcomp
cli
clc
mov
mov
out
mov
out
out
icebp
xor
hlt
aad
jmp
ds
mul
into
cld
fldl2t
fldl
out
mov
jmp
enter
xor
into
lock
cmp
rcr
add
std
repnz
std
decb
xchg
lret
lret
in
xor
cmp
cs
aas
into
cld
fiadds
fsub
cld
fucom
mov
call
fidivl
sarb
shl
cmp
out
aas
rol
std
mov
out
cmp
out
lret
xor
in
cld
fucomi
iret
loop
fisttps
call
cld
out
in
ljmp
sti
out
icebp
repz
ret
in
mov
cmp
sti
cmp
mov
call
aaa
lret
shr
ror
mul
neg
repnz
cmp
xor
jmp
rol
enter
jp
fimuls
xchg
flds
jle
add
cmc
xlat
mov
sub
lock
clc
clc
int
fcmovu
cmc
sbb
std
in
lret
xlat
in
xchg
ljmp
out
lock
loopne
fcmovu
fnstcw
add
call
lock
xor
xor
fcmovnb
rcr
repz
loop
test
cmc
enter
nop
out
lock
push
lock
shrl
fdiv
out
aad
xor
stc
test
cmp
mov
jecxz
loop
xchg
sar
jecxz
hlt
fprem
fcmovnu
in
lock
repz
shl
cmc
mov
mov
xchg
test
cmc
out
leave
repz
repnz
aaa
cmp
mov
enter
mov
xor
cmp
out
xlat
jmp
div
ret
ljmp
enter
and
ss
fcmovu
adc
roll
test
cld
faddl
imul
jecxz
rcr
aad
fsubr
or
rcl
cmp
xchg
xchg
nop
mov
hlt
xchg
clc
iret
xor
cmp
fdivr
fnclex
hlt
std
xlat
ret
xlat
int
rorl
imul
xor
vpmuludq
icebp
cmp
test
fdivr
mov
cli
out
mov
not
xor
leave
xor
cmp
ss
ljmp
faddl
loopne
xchg
out
jmp
aam
xor
out
aam
ss
repnz
iret
hlt
aaa
fadd
fstp
loope
xlat
out
in
xorb
ret
xor
ror
xor
cmp
hlt
cmp
int
out
aad
fdivr
xchg
xchg
sarb
aad
iret
sti
cmp
std
leave
fdivl
roll
addl
lock
in
into
int3
hlt
in
cmc
aad
lock
hlt
xor
xlat
jecxz
hlt
test
test
cli
fcmovnu
fmulp
into
int3
in
sub
cmp
fldz
sarb
iret
xlat
rol
icebp
in
loope
mov
fimuls
lock
cmp
int
cmp
cli
shll
stc
mov
add
jmp
aas
push
mov
adc
ds
dec
fildl
jle
add
fcomi
fcmovu
jmp
filds
xchg
mov
fcmovb
cli
repnz
cmp
idiv
in
and
ficoms
addl
hlt
cmc
in
fdivr
out
rcr
out
loop
fldl
mov
loopne
in
cmp
into
fcmovb
xlat
sti
xor
out
aas
add
xlat
call
xchg
and
shr
cmp
out
roll
in
xchg
mov
xchg
into
xchg
icebp
shl
int
das
xlat
out
ljmp
sti
div
test
hlt
fisttpll
aad
xlat
cmc
add
sti
ret
mov
in
call
adcl
xlat
xor
shl
lret
aas
xor
ret
aas
aad
in
out
movl
shl
shll
cld
cmp
neg
out
ret
dec
mov
and
cld
in
std
xor
aad
in
in
ljmp
cmpb
out
fcomip
lret
mov
std
fsubp
das
int3
frndint
int
out
sti
div
int
loope
rcl
aam
loopne
fimull
iret
mov
cmp
std
sti
in
rcl
cmc
shl
repnz
aad
leave
xlat
lret
sub
loopne
in
fdivs
aad
ss
cmpb
enter
call
nop
mov
rol
xlat
xlat
iret
sar
sar
shr
fldz
xor
xchg
cld
fcmovne
icebp
aas
aam
aaa
xor
cmc
lret
fsubrp
cmp
in
clc
cli
int3
cld
test
test
into
out
mov
out
lock
cmp
cmp
int3
shl
idivl
mov
or
mov
mov
xchg
mov
into
std
aam
lret
ss
fldl
lea
cli
lock
mov
enter
in
cmp
loopne
fcmovne
shl
mul
ret
ret
test
in
loope
in
fsub
icebp
in
in
xlat
fucomp
div
mov
jmp
enter
lret
jno
sbb
xchg
or
add
add
loopne
in
shl
sbb
ror
xchg
in
and
jecxz
into
clc
repnz
cmp
xchg
fcmovb
fdivp
sub
loope
in
sti
rcl
sar
in
lret
fcomp
into
aas
aad
cmp
loope
mov
out
fmull
xor
shll
repz
aas
fadds
out
in
fsubp
out
adc
sub
rol
cs
aaa
aaa
lret
xlat
flds
or
mov
mov
icebp
hlt
shl
nop
loope
aad
out
cs
lock
leave
cmp
fsubp
jecxz
lds
lret
add
xor
into
aam
xchg
shl
int3
xlat
clc
cli
imul
cmp
loope
sbb
aas
aam
call
out
mov
in
lret
call
int
xor
aad
test
test
rcl
enter
mov
hlt
int3
enter
cld
into
ljmp
xchg
jmp
fildl
xchg
lret
rcl
cmp
cmp
lock
in
loope
cmp
fcmovbe
fildl
lea
enter
cmp
cmpb
shl
mov
into
xchg
jecxz
fdivp
ljmp
aaa
loopne
out
icebp
fcmovnb
repz
jmp
iret
rcl
test
fnstsw
addb
icebp
cld
cli
loope
jmp
out
stc
fimull
aas
out
fcomp
leave
repnz
cld
int
int3
loop
and
fiadds
sbb
jmp
sar
in
shr
cmp
aam
repz
aas
cmc
icebp
jmp
std
int3
loope
in
out
in
jmp
enter
fidivrl
cld
idivl
inc
icebp
jecxz
fcmovne
leave
div
cld
sbb
mov
mov
shl
int
int3
cmp
shr
cli
in
cmp
lret
cld
fcmovnu
mov
out
sti
ss
neg
aas
out
cmpb
loop
cld
ljmp
into
in
fildl
ret
iret
xor
jmp
int
rol
fcmovu
fstps
outsl
inc
dec
insl
pop
jecxz
loopne
jle
add
jmp
int3
idiv
aad
sbb
jmp
loope
in
fcomip
jmp
enter
fucom
cmp
cld
cmp
ret
leave
aam
into
in
mov
jmp
repnz
lret
out
cmp
cli
sti
shl
test
lret
decl
mov
ret
div
jmp
cmp
in
aam
idiv
ret
int3
cld
jecxz
cmp
int
aam
cmp
iret
lret
loop
out
fmulp
iret
shl
stc
xchg
fcompp
jmp
in
jmp
enter
std
int3
aad
fiadds
out
in
aad
rcr
call
rol
xor
in
cli
aaa
cmp
and
shl
mov
sub
ret
mov
rorl
out
int3
call
cmp
sti
cli
hlt
ret
ror
repz
out
call
in
in
stc
repnz
fptan
out
test
ret
lret
in
in
in
iret
test
rcl
into
repz
fcmovu
stc
cmp
aas
dec
fsubr
jecxz
xchg
sub
int
call
xor
sti
cmp
fxch
loop
ffree
leave
in
mov
iret
xor
repnz
into
aas
bnd
sti
shl
xlat
hlt
mov
call
xchg
into
out
rol
cmp
ror
ret
sbb
loopne
test
mov
sti
xchg
out
xchg
xchg
das
lret
xor
cmc
fld1
cmp
shr
in
not
enter
sti
out
fucomi
loopne
xchg
into
shr
shll
clc
aam
enter
cmp
fdivrp
icebp
hlt
xor
mov
addl
mov
ss
jmp
fcom
cmp
fidivrs
in
out
mov
int3
sti
mov
icebp
call
sbb
ljmp
xor
out
hlt
in
lock
adc
bextr
sar
aaa
in
sarb
shl
test
fxch
lret
ljmp
loope
test
xchg
jb
add
fmull
call
rorl
add
call
add
ret
rcl
fcmovbe
lret
shll
in
push
mov
loop
jle
add
mov
fadd
test
lock
out
icebp
out
repz
shr
stc
xchg
xchg
lret
mov
loop
loop
int
fsubr
cld
stc
loopne
fadds
add
ljmp
mov
iret
shl
int
aaa
in
ds
jmp
fld
inc
sub
int3
mov
std
jmp
incb
jecxz
jmp
cmp
sarb
lret
sarl
repnz
in
call
mov
mov
test
out
enter
lock
frndint
inc
test
flds
xchg
das
xor
ret
fsubr
cmc
sti
test
idivb
out
ljmp
ret
fucom
test
int3
jmp
sub
ljmp
faddp
aad
fdivrs
cld
fisttps
jecxz
out
out
shlb
leave
iret
cmp
cld
sarb
xlat
hlt
cmpl
test
testl
jmp
int3
sub
fcomp
cmp
fdivr
jmp
cmp
test
aad
loop
decb
in
out
lret
xlat
xor
int3
repnz
fidivrs
cli
cmp
out
stc
std
mov
out
int
test
repz
repz
in
aad
ljmp
cmp
xlat
stc
loope
test
ffreep
mov
jmp
std
aam
out
clc
enter
enter
cmp
mov
cmc
out
lret
rcr
in
xchg
xchg
xlat
out
stc
test
cmp
sar
loopne
test
fdiv
leave
loopne
ljmp
out
loop
ret
into
fsub
hlt
ss
repz
fucom
orl
adc
out
xor
xor
fst
hlt
cmp
sti
lret
mov
nop
dec
jecxz
fucomp
out
in
aad
into
in
imul
frndint
testb
mov
enter
mov
fmul
call
roll
ret
xor
cld
out
loop
cld
iret
int
lock
sub
cmp
int3
cld
loopne
std
aam
fneni(8087
cld
enter
loopne
mov
jmp
mov
aam
fstp
fcoml
mov
add
add
in
mov
jmp
sub
int
sar
std
loopne
incl
enter
call
jmp
aam
iret
jmp
stc
repz
into
std
ret
loop
shl
call
ror
aam
leave
cmc
lret
rcl
leave
iret
cmp
lret
rcr
out
fsubp
xchg
xlat
in
in
cld
int
out
xchg
call
in
clc
aad
loop
int3
into
test
test
out
test
xchg
repnz
xlat
xor
lret
fcmovne
cmp
in
ret
cmc
fdivr
jmp
mov
fcmovu
out
in
repnz
cmc
lds
leave
cmp
cmp
in
in
xor
leave
jmp
testl
fsub
sti
in
in
ror
cmp
in
loope
out
or
xchg
jmp
shl
in
fcmove
cmp
jmp
jmp
addl
out
in
loop
cmc
int3
imul
in
enter
in
aas
sti
out
adc
enter
orb
out
test
lock
ror
fucom
and
repz
loopne
fcmove
mov
lret
in
nop
mov
int
ror
aaa
fstp
loopne
testb
mov
fisttpl
jmp
ret
xlat
into
in
jmp
not
aam
testl
mov
rcr
leave
cmc
out
hlt
in
sti
aad
idivb
fcmovnu
int
sbb
sarb
aad
vshufps
fsubr
into
loopne
out
jmp
loopne
ljmp
xlat
fiaddl
out
test
repnz
int3
ror
loopne
jmp
aam
sti
cmp
cmp
addb
hlt
test
in
xchg
jmp
xor
leave
fmul
rcr
fcomp
loopne
lock
std
ljmp
lret
test
hlt
idiv
in
int3
cmp
std
int3
ror
jecxz
ret
testb
incb
rcl
xor
in
cld
clc
rcr
sub
adc
roll
jmp
ret
enter
int3
or
test
jo
add
add
roll
clc
std
mov
fcoml
shr
out
int
cmp
sarl
sti
incb
sbb
loopne
xchg
int
loopne
lret
fdiv
hlt
clc
aas
aaa
loopne
icebp
cmp
loope
mov
clc
int3
filds
xor
jecxz
xor
hlt
cli
in
xchg
testl
out
cld
sub
into
sub
ret
jmp
icebp
ror
xlat
cld
ffreep
shl
xchg
loope
lea
aam
rcl
cmp
ss
std
aam
xorb
stc
cmc
fucom
xchg
loope
lret
jmp
mov
loope
ret
in
xor
fcom
sti
sarb
xor
sar
fsubp
xchg
in
xchg
loop
lret
fmulp
out
lock
out
aas
hlt
cld
cmc
fmul
lds
in
in
sub
cmc
repz
int3
shr
div
fcmovnbe
fdivp
loope
jmp
fcomi
fmull
xor
cs
ror
cmp
fcom
ds
orb
ljmp
shll
in
sub
xor
jmp
out
iret
loop
sarl
std
call
mov
out
iret
fsub
repz
fiadds
ret
rorl
fcmovnbe
out
fsts
xor
jmp
iret
div
in
loope
cld
addl
stc
call
mov
mov
into
cmp
bnd
ss
loope
cld
loope
enter
out
repnz
in
in
out
cld
aam
sarb
out
cmp
rcl
cli
aad
fisttps
mov
xchg
sub
aad
call
clc
rol
cmc
cmc
stc
stc
filds
fcos
mov
int3
mov
int
cmp
aam
ret
not
aad
xlat
out
loopne
fcmovbe
lds
fcmovu
int
sarl
xor
ret
sti
xchg
fld
mov
lret
out
loope
mov
fimull
xor
int3
repnz
sarb
lret
imul
mov
xor
mov
lea
cmp
jne
mov
jmp
mov
mov
xor
add
jmp
rcl
ret
int
fstp
fnsave
mov
push
xor
cmp
jle
cmp
addl
fsub
addl
out
shlb
lret
cmp
loopne
ret
ret
cld
int3
mov
lock
jmp
out
enter
iret
fldl
imul
icebp
fisttps
cli
cld
iret
rcll
xor
xor
out
lret
loopne
fcomi
aad
cmp
aam
fcomi
fdivr
into
out
sub
xchg
xchg
ret
aam
shll
sarb
xlat
addb
not
aam
lret
iret
mov
jmp
xor
aad
xor
ss
idivb
cmp
adc
cmc
sti
jecxz
and
out
movl
lret
ret
cmp
out
xchg
test
loopne
enter
in
decb
call
rcr
aaa
sarl
loopne
addb
in
mov
out
out
sti
icebp
std
stc
add
hlt
clc
mov
fcmove
fadd
xchg
loope
mul
xor
sarl
repz
test
test
loope
fcmovnu
xchg
fsubrp
sti
addl
xor
add
aas
ffreep
shr
cld
std
jecxz
cmc
mov
sub
out
aaa
xor
out
rcl
inc
fdivr
shlb
aas
loopne
shl
fcomp
adcl
lock
xor
repnz
cmp
loopne
in
cmp
cli
rorl
leave
out
xor
cmp
loop
std
iret
cmp
clc
int3
ret
mov
test
sti
xchg
addl
into
cmp
repnz
ret
ror
sti
aad
out
sti
cld
jmp
out
icebp
xchg
repz
out
lret
rol
sar
xlat
ljmp
mov
les
int
repz
in
cmp
cmp
cmp
repz
cli
aad
ret
mov
loopne
cmp
in
out
sub
cs
xlat
ljmp
in
clc
aad
int
addl
clc
out
xrelease
xor
lea
add
call
xor
inc
cmp
je
xchg
push
pop
push
jmp
xlat
aas
lret
fcmovne
sbb
dec
mov
in
add
add
xor
clc
hlt
rolb
cmc
call
into
out
lret
repnz
cmp
leave
int3
cmp
ror
xor
fcmovu
rol
vpmaxub
into
loope
out
clc
xor
in
cmp
xlat
repnz
shl
jecxz
not
sti
aam
fmuls
out
loop
test
xor
aad
rcr
idiv
adc
mov
aad
xlat
fisttpl
fcmovne
sub
fdivs
fdivs
cmp
mov
aam
fadds
vshufps
add
ret
stc
in
aam
test
idiv
inc
std
in
dec
loopne
call
xor
cmp
cmp
testb
lock
xchg
xlat
out
out
into
orl
clc
stc
fdiv
xor
aad
jmp
loopne
ljmp
shr
aam
lret
int3
shl
sarb
stc
rcr
stc
shl
fimull
ljmp
xor
repnz
test
icebp
clc
shl
fisttps
shr
cmc
jmp
lret
fxch
cli
cmp
fcom
aam
ret
leave
fcomi
lds
repnz
int3
aaa
aaa
xor
in
xor
in
fcmovnu
int3
in
sti
fcomp
aam
cmp
repz
int
shl
rcl
ror
in
icebp
roll
xor
out
mov
in
jmp
call
aaa
sar
jmp
in
xchg
out
in
lret
fsub
fcmovne
in
lock
sar
cmp
rcl
fdivrl
out
loopne
rol
enter
test
out
cs
aam
xlat
sar
cmp
fdivrp
xor
fimull
test
ror
clc
jecxz
cmp
into
aad
rcr
std
int
repz
cmp
jmp
leave
ljmp
icebp
mov
lock
fcmovnu
fyl2x
int3
shr
fcmovu
cmp
ret
loop
out
std
int
cli
jmp
xchg
notb
sub
jmp
rcl
iret
aad
aad
pop
aaa
jp
adc
jle
add
aaa
out
sub
lock
stc
call
out
aas
ret
rcl
lret
cld
xchg
xchg
loopne
jmp
aam
cmp
out
in
fnstcw
in
cmp
shl
stc
call
cli
int3
xchg
iret
mov
iret
mov
cs
into
ljmp
cmc
in
loopne
frndint
jecxz
call
into
sti
mov
ret
repz
repnz
aad
aam
ss
loopne
mov
into
rorl
shr
fnstenv
int
cmp
lret
jecxz
sarb
fsub
fiadds
in
repnz
ljmp
shl
icebp
into
stc
adc
loopne
cld
mov
in
in
fstl
leave
aad
enter
aas
fdivr
aas
sar
incb
cld
aas
int3
enter
in
aam
das
lret
cld
cmp
aaa
fstp
stc
stc
rcr
fldl
test
xchg
repz
xchg
loop
xor
aaa
fxch
ljmp
rcr
jecxz
ljmp
xchg
xor
cmp
enter
fdiv
rolb
hlt
repz
int
sar
lret
ljmp
jecxz
in
rcr
aad
fcmovnu
std
cli
fdiv
aam
mov
jmp
loopne
icebp
std
mov
fdivr
repz
rcr
aam
sarb
test
loope
addl
repz
ss
idivb
out
xor
div
out
iret
std
ffreep
out
imul
enter
ljmp
mov
into
into
cli
lret
fcmove
lret
std
cli
loop
fld
in
enter
std
leave
add
xchg
xchg
xor
rcl
cli
fldl
out
xlat
cli
sti
aam
in
mov
shl
hlt
cmp
in
rcr
cli
icebp
into
xlat
sarb
cmp
cli
leave
std
mov
jmp
dec
repnz
jmp
cld
cmp
addb
enter
ret
orl
out
ljmp
rcr
out
shl
rcr
neg
in
int3
fucompp
xchg
dec
jmp
iret
rcl
fcomp
aad
mov
fnstsw
cmp
jle
rcl
jmp
xor
xor
std
repz
fdiv
rol
int
div
repz
mov
cli
loopne
into
out
and
leave
loop
aaa
cld
ljmp
roll
fmull
mov
into
jecxz
cmc
cmp
cmp
out
hlt
cli
fsub
fldl
sbb
in
into
into
ljmp
aaa
hlt
hlt
aaa
int
fcmovb
fabs
fadd
fucomp
test
repnz
xchg
clc
in
out
fldlg2
jmp
aad
leave
inc
loopne
shl
in
out
in
jecxz
xor
test
mul
idivb
repz
stc
ljmp
jecxz
enter
fdivr
enter
cmpb
icebp
adc
ror
jmp
out
lret
cmc
ljmp
shr
in
cmp
repnz
rcl
fiadds
xor
lret
cli
adc
shr
jecxz
lock
aaa
iret
aam
lock
repz
enter
addl
ret
int
loop
stc
cmp
cmp
cmp
ds
rcr
shl
fsub
int3
popl
test
xor
ss
out
xor
aam
loop
lret
into
out
jmp
loop
mov
out
test
int
loope
sti
fadd
test
rcl
idivl
stc
testl
fmulp
loopne
call
fdecstp
aaa
out
sti
jecxz
fdivr
sar
aad
ret
loop
call
in
ret
clc
lret
test
cli
aas
ret
xchg
shl
decb
cld
addb
cmp
ss
iret
cmp
test
fcmovne
ret
in
in
call
icebp
into
lret
int3
in
loope
frstpm(287
cmp
rcr
push
fstl
in
fsubrp
div
in
hlt
cmp
cmp
cmp
cmc
loopne
out
fld
aas
xor
cmp
hlt
aam
xchg
not
aam
xlat
ljmp
aad
cmp
mov
imul
add
xchg
jmp
int
int
fstp
fst
das
dec
fwait
lahf
addr16
popf
adc
add
add
loopne
cld
into
in
jecxz
sbb
xchg
into
into
out
cmc
aad
cld
call
aad
stc
mul
xchg
ds
call
stc
icebp
iret
test
leave
fidivrl
repnz
test
icebp
in
clc
leave
mov
cli
iret
mov
int3
out
rcl
ljmp
cmp
cmp
xor
loopne
cld
lret
clc
cmp
mov
shr
cmp
test
aad
mov
mov
rcll
enter
aam
ss
cmc
int
aam
addl
xchg
shl
fists
stc
out
aad
cmpb
cmp
xchg
out
loop
faddp
orl
aad
cld
std
int3
jmp
fnclex
jecxz
cmp
testb
in
nop
iret
jmp
shr
fcomi
sar
loop
test
test
clc
in
out
shl
test
jmp
out
iret
leave
rol
filds
fucom
fsubr
xchg
jecxz
xor
ljmp
iret
cmp
aam
std
ljmp
in
jmp
shr
iret
aad
shlb
xor
loopne
rolb
sti
imul
jecxz
leave
adc
aas
xor
in
idivb
out
aad
mul
test
loop
fucomip
cld
sbb
int3
shl
jmp
shr
cmp
int3
aaa
sti
out
out
in
shl
repnz
mov
call
mov
xor
ror
out
loopne
cmp
stc
std
loopne
icebp
mov
cmc
xchg
fcomip
lret
out
shll
in
ljmp
aad
cli
sarl
call
dec
and
icebp
ljmp
jecxz
xor
cmc
into
ds
loop
fcmovnu
fsub
or
call
repnz
hlt
orl
sti
in
idivb
loope
shl
fildl
leave
cmp
ljmp
shl
call
lret
cmp
push
xor
mov
dec
inc
add
dec
jmp
int
ret
lret
aad
int
jmp
cmpb
hlt
add
add
ret
in
clc
xlat
mov
lds
orb
les
cld
test
iret
xlat
faddl
leave
mov
fmulp
shl
xor
int3
out
test
xlat
cmpb
xchg
lret
in
fcmovnu
repnz
loope
cld
in
fcmovbe
jmp
cmp
cmp
shl
shl
icebp
shl
in
sti
fcmovu
in
sti
int3
out
shl
or
lock
add
decl
rcl
ss
jmp
aaa
ds
test
out
loopne
xchg
mov
cmp
shl
fstpt
fxam
push
fucom
mov
mov
loopne
into
into
jmp
rol
iret
iret
ret
icebp
out
aas
adc
filds
mov
into
in
test
cmc
iret
repnz
cli
aaa
aad
out
clc
fcmovnu
aad
cli
cmp
enter
fistl
in
cmp
cmp
sar
div
cmp
clc
xlat
mov
in
into
jmp
fbstp
xor
cli
repz
fdivr
jecxz
fcomp
xor
hlt
fcomip
out
sub
sarb
out
fdivp
test
fld
cld
jecxz
leave
filds
fdiv
out
loope
xor
aad
xor
icebp
repz
stc
ret
div
fmul
or
xchg
icebp
stc
cmp
hlt
fnsave
shl
out
rolb
jmp
cli
shl
out
in
aam
stc
int3
out
xlat
aaa
neg
fabs
aam
cmp
addb
fisttpll
call
shll
sti
fprem1
cmc
rcr
idivl
std
sar
aam
idiv
mov
xlat
xchg
out
jmp
neg
ljmp
loopne
cmp
stc
idivb
mov
in
int3
xlat
in
mov
frstpm(287
out
test
in
loopne
lock
in
shl
in
sti
nop
les
loopne
xlat
in
idiv
xor
add
pop
mov
pop
pop
pop
leave
ret
