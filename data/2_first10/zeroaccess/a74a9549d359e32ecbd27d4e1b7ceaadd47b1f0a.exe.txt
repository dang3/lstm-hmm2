push
mov
sub
cmpl
mov
movl
not
jmp
mov
jae
push
call
sub
sub
mov
xor
add
sub
and
or
mov
mov
mov
orl
sub
push
mov
mov
mov
mov
sbb
movzwl
add
mov
mov
sbbl
orl
orl
cmpl
not
mov
jmp
mov
mov
jle
push
pushl
push
push
push
pushl
push
call
andl
subl
and
orl
and
adc
adc
mov
mov
mov
mov
sbbl
sub
mov
mov
sbb
mov
orl
orl
lea
sbb
mov
cmpl
movzwl
mov
notl
mov
jmp
mov
mov
jae
push
push
pushl
call
xor
or
adc
sbb
mov
adc
mov
addl
add
mov
jmp
hlt
loop
sbb
and
mov
aaa
xorb
xlat
push
push
mov
sbb
jle
inc
mov
push
popf
sarl
test
clc
es
lds
push
mov
testl
movsl
dec
sbb
xor
pop
cmp
dec
rcl
inc
inc
push
jl
pop
mov
dec
dec
dec
rorb
or
mov
daa
bound
scas
test
mov
pop
push
inc
fdivs
imul
mov
jecxz
add
cmpsb
inc
fucomp
loopne
mov
hlt
push
rcll
out
jmp
rol
lret
mov
xor
push
and
inc
fiaddl
inc
clc
push
cmpsl
clc
sarl
repnz
test
fwait
add
clc
imulb
lret
adc
jns
data16
push
ret
sar
pop
sbb
push
xor
xchg
cmp
mov
lods
neg
cmp
jmp
cltd
xor
in
adc
adc
fldcw
and
lret
fistpl
aaa
xor
stos
mov
repnz
inc
sbb
aaa
shl
and
divl
xlat
in
rcl
mov
sub
xchg
inc
pop
pop
vdivss
loop
adc
dec
out
addr16
rcl
jno
or
and
mov
insl
push
dec
hlt
push
test
or
jb
psubq
stos
and
mov
stos
sarb
fidivs
mov
stc
sub
push
fidivrl
push
in
or
and
mov
adc
ret
pop
lds
jae
adc
xlat
mov
lea
test
insl
and
out
xor
sbb
nop
add
sub
movsb
mov
outsb
add
dec
add
xor
movsl
pop
stos
dec
inc
mov
ret
fcompl
dec
dec
or
jl
stc
xor
dec
xor
jg
dec
test
mov
faddl
test
mov
dec
gs
cwtl
fisubl
pop
xor
fisubl
push
jne
lods
jnp
adc
rcrb
arpl
pop
inc
cld
pop
xor
sbb
mov
in
pushf
cltd
sub
je
sub
test
ret
xor
dec
xchg
mov
push
addl
dec
test
cmp
ret
mov
ljmp
lahf
ljmp
int
cwtl
addl
stc
clc
das
xchg
xlat
adc
pop
or
adcl
ss
push
mov
in
mov
stos
jo
rcll
mov
push
ficoml
add
xchg
lcall
filds
hlt
shll
repz
movsl
dec
scas
mov
andl
out
mov
popf
call
gs
mov
cmpsl
mov
inc
hlt
and
cwtl
adc
sub
test
pop
dec
ds
cli
mov
ret
stos
jp
mov
xor
stc
fidivrs
in
lret
fs
aam
xor
orl
pop
add
js
int3
and
stos
aam
dec
inc
int
or
repz
add
and
adc
stos
dec
decb
push
push
jg
in
stc
push
jae
in
mov
sbb
clc
test
sbb
cmp
call
adc
movsb
push
cmp
xchg
jp
xor
mov
aas
xchg
push
into
cli
cltd
ljmp
xchg
mov
mov
int
daa
addr16
mov
fsubrl
inc
iret
clc
xchg
fsubrl
imul
mov
div
mov
lock
jge
cmp
sbb
pop
lea
xor
pop
jo
out
repnz
mov
lea
mov
push
scas
addr16
xchg
das
push
xor
fstpl
adc
cmp
mov
pop
repnz
adc
dec
xchg
popa
xchg
movsb
shrl
cltd
push
dec
xchg
shl
pop
jne
jge
aad
and
cmc
sbb
push
jne
cmp
lahf
mov
push
in
cmp
test
push
inc
lcall
sbbl
dec
cltd
icebp
push
inc
push
fmuls
mov
sbb
push
or
or
lcall
sub
mov
fmull
out
ljmp
cs
mov
movsl
aaa
dec
in
inc
scas
sub
in
imul
insb
loope
dec
in
nop
mov
fs
inc
mov
fistps
fistl
cmp
inc
dec
outsl
add
lea
ds
cld
iret
jp
xchg
mov
and
xor
sbb
mov
mov
stos
and
scas
aaa
ret
inc
sub
movsb
mov
lret
subb
sbb
sti
cmp
lock
inc
mov
cmp
out
xchg
and
cmp
and
jecxz
and
add
loop
sbb
sbb
inc
sbb
add
pop
enter
call
mov
xor
xchg
mov
sbb
in
ds
jb
mov
hlt
push
mov
loopne
pusha
jp
ret
sbb
push
jmp
jb
xchg
add
mov
and
jnp
decb
mov
add
mov
into
pop
pop
sbbl
loope
add
xchg
stos
cmp
xor
pop
nop
xchg
and
and
ljmp
push
clc
push
or
sarl
pop
bound
lret
push
xchg
sub
cmp
xor
mov
or
mov
dec
je
xlat
or
dec
xor
jb
or
shl
dec
lret
ljmp
scas
ficomps
mov
lock
jne
cmp
xor
mov
cmpl
mov
push
cmp
adc
add
sub
xchg
adc
insl
adc
stos
sbb
mov
xor
lods
popf
movsb
pop
cwtl
jno
jne
xor
add
sbb
xchg
mov
aad
out
mov
push
ss
in
pop
inc
adc
loop
xlat
fdivrl
leave
rolb
cmp
cmp
out
cmpl
in
fcomps
inc
cmp
lock
push
in
mov
xchg
adc
aad
icebp
push
stc
shlb
cli
jmp
xchg
push
pop
add
sub
jl
dec
xor
mov
mov
fcmovnb
icebp
add
mov
arpl
mov
inc
sbb
and
imul
sbb
adc
inc
fists
mov
movsl
add
dec
das
or
fmuls
int
out
push
pop
xchg
lds
mov
pop
inc
and
mov
lds
push
adc
adc
mov
jbe
insb
jmp
and
mov
inc
lods
enter
mov
pop
andl
imul
and
xor
rorb
and
outsb
call
lret
add
scas
xlat
mov
sub
mov
mov
fs
push
inc
dec
call
inc
adc
push
mov
mov
fnstcw
sub
inc
shl
or
cltd
fwait
pop
pop
loopne
in
pop
mov
sbb
adcb
sbb
pop
jae
lods
in
test
shll
movsl
jnp
cli
jne
testl
dec
and
mov
test
clc
dec
inc
push
inc
pop
cmpsb
mov
or
imul
push
cld
fstpl
xor
repnz
call
jle
mov
lods
push
mov
lea
pop
imull
cmp
adc
mov
jnp
ss
int
in
cmp
cltd
sbb
and
jge
mov
fnstsw
pop
imul
cmp
mov
pushf
aaa
out
fwait
cli
flds
inc
pusha
or
dec
arpl
jnp
imul
and
int3
ret
mov
mov
adc
mov
push
ljmp
imul
mov
inc
out
dec
pop
push
mov
lock
orl
sti
pop
lock
sub
iret
arpl
scas
cld
nop
jbe
imul
movsl
aad
loop
into
out
inc
adc
inc
push
outsl
adc
push
cmp
adc
dec
lcall
cmc
add
das
sbb
dec
dec
or
shr
or
movb
push
test
jb
sahf
or
and
xor
js
cmc
fisttps
cs
into
pop
lret
sub
testl
roll
in
sub
xor
jbe
jge
jae
push
jge
repz
cmpsl
popa
js
add
jge
flds
push
stos
daa
jnp
mov
and
icebp
mov
cs
jge
xchg
sub
xor
popf
insb
out
inc
pop
imul
xchg
cltd
out
adcb
pop
arpl
iret
fadds
call
jecxz
xchg
sahf
mov
cmc
repz
mov
or
iret
ds
mov
in
push
cli
cwtl
vucomiss
or
loopne
push
sbb
in
jmp
lods
insb
jecxz
and
inc
mov
notb
sub
daa
mov
xchg
arpl
repnz
dec
pop
imul
add
mov
mov
int3
pushf
repnz
clc
mov
dec
mov
loope
inc
xchg
in
loopne
push
subb
or
aad
or
or
out
popa
into
rorl
dec
enter
jle
or
mov
cmp
pop
stos
sbb
push
mov
in
test
lods
xchg
insb
sub
ja
xchg
jle
or
push
je
jnp
sbb
xor
loop
add
mov
xchg
xchg
inc
mov
or
imul
fwait
mov
cmpsl
loopne
mov
fcoml
clc
imul
sbb
lret
sub
jbe
out
pop
rolb
lahf
rol
add
movb
xchg
push
xor
ficomps
sbb
cmpl
into
lret
test
fcmovnbe
leave
and
ficoms
jmp
in
js
int3
in
push
pop
movsb
add
push
jno
out
push
cmp
pop
insl
testl
nop
dec
dec
iret
push
jne
fisubrs
add
outsb
sub
push
jmp
xor
subl
cmp
int
ljmp
mov
jbe
mov
popf
jg
sti
xlat
lods
scas
mov
fs
ja
jmp
push
add
xchg
fstpt
adc
dec
icebp
adc
xchg
shl
push
mov
mov
cmpsb
fstps
inc
pusha
dec
xchg
xor
rclb
fldl
fsts
lods
push
dec
xor
jp
arpl
push
push
push
fstpl
shr
movsb
mov
ret
mov
pop
dec
add
andb
outsl
xchg
xor
andb
xchg
jp
xlat
xor
dec
adc
test
out
repz
repz
push
ss
lcall
push
and
int
sbb
cmp
push
mov
dec
mov
adc
cmp
fsubl
lea
sub
push
test
test
add
jl
add
push
push
adc
outsl
xor
test
lahf
sub
adc
push
mov
es
adc
and
aaa
sti
ss
xor
into
pcmpeqb
cmpsb
imul
nop
jp
sub
sti
imulb
or
jnp
pop
nop
dec
cmp
add
xchg
in
xor
add
and
ljmp
fdivrp
loop
sub
jecxz
stos
loopne
pop
mov
sti
xchg
or
dec
dec
sbb
popa
nop
jns
rorb
mov
mov
push
popa
sti
mov
mov
and
mov
testl
mov
ret
inc
out
xchg
loopne
cli
cmp
clc
pop
test
dec
aas
iret
lods
sbb
cmp
adc
push
pop
loop
mov
jmp
jne
fdiv
lcall
pop
xchg
cmpsb
mov
mov
es
enter
dec
add
lods
jle
lret
mov
add
xchg
push
adc
pop
mov
lds
adc
or
test
lahf
test
inc
enter
fdivl
adc
jns
push
movsl
dec
cmp
push
outsb
lods
jge
call
scas
rcll
sbb
xchg
aam
in
push
adc
adc
dec
je
pop
inc
mov
and
testb
ret
test
data16
or
mov
add
xor
sbb
mov
jl
add
mov
xchg
xor
outsb
inc
mov
jno
icebp
xor
ret
out
hlt
movsl
pop
mov
inc
inc
cmp
sbb
push
adc
stc
jmp
cmc
std
and
push
pop
lcall
cs
dec
mov
mov
inc
ds
xor
jl
sbb
lock
cmpsl
dec
scas
cli
data16
mov
push
aam
sbb
ja
add
loop
cwtl
or
data16
int3
in
or
out
es
ret
cmp
jp
lret
mov
pop
loop
ljmp
lods
cltd
loope
lock
jmp
fcompl
lcall
mov
bound
xchg
cld
add
repz
fimull
outsl
repz
jne,pn
sbb
adc
mov
dec
xchg
outsb
or
je
mov
es
jle
sarl
dec
inc
stos
rcrl
int3
pop
or
pop
inc
int3
fucomi
dec
xchg
add
push
xchg
mov
mov
ja
or
out
mov
sub
in
mov
clc
aas
add
inc
xchg
pop
ret
xchg
mov
sbb
pushf
pop
mov
movsl
inc
or
imul
sub
shll
pop
push
mov
cmp
cmpsl
in
lods
inc
fstps
adc
outsl
jl
pop
push
mov
lea
test
mov
mov
xchg
rorl
fdivl
push
pavgb
stos
je
sub
cmc
xor
jmp
cmp
jnp
and
mov
cs
dec
fnstcw
loope,pt
ja
mov
outsl
aaa
push
inc
insb
movsl
into
add
cs
add
repnz
mov
aam
out
xlat
jne
xlat
push
insb
cmp
adc
iret
sbb
scas
les
sahf
xchg
hlt
das
sub
xor
sbb
inc
xor
dec
or
rcrl
shl
fimull
sbb
ret
into
mov
iret
dec
nop
or
fwait
mov
mov
pop
and
xor
add
pop
mov
add
add
fdivl
test
or
pop
mov
shlb
xchg
hlt
cmp
xchg
insl
and
dec
ja
pop
enter
inc
push
push
jo
adc
aas
sub
lock
je
cmp
cwtl
insb
mov
rolb
ds
pop
aam
push
cmc
add
clc
fnstcw
sbb
sbbl
add
push
jo
cs
insb
jge
fldt
cli
test
sub
push
xchg
mov
ret
scas
jae
jle
in
sub
dec
or
pop
sbb
adc
lock
shlb
adc
mov
repnz
mov
orl
sarb
and
and
push
push
jl
and
or
mov
cmp
testb
hlt
jnp
xor
aad
addb
pop
mov
sarl
out
inc
dec
and
lret
out
sbbb
push
mov
mov
sbb
rcrb
adcb
sbb
hlt
andl
movsl
mov
cli
das
cmpsl
lret
mov
out
sub
es
call
jae
dec
mov
adc
shll
pop
hlt
dec
dec
mov
cmpsb
imul
dec
or
pushf
inc
aas
nop
lds
xchg
mov
iret
push
mov
subb
push
icebp
or
push
movsb
out
aaa
push
push
out
jge
mov
xchg
in
pop
push
out
repz
or
je
es
push
jne
xor
pop
call
or
fstl
in
inc
ret
bnd
dec
sahf
ficomps
sbb
fidivs
lret
into
sub
lret
loop
dec
jge
pop
cmp
test
xchg
sbb
mov
jns
neg
mov
sti
movsb
jns
dec
lods
push
jge
int3
jecxz
mov
pop
cltd
cmp
push
sahf
and
adc
jl
leave
sub
cld
cmp
sbb
jp
push
push
cltd
mov
arpl
rcrb
test
es
or
popf
in
ret
out
clc
add
fwait
adc
dec
insl
call
outsb
sti
sbb
bound
push
cmp
jp
movups
nop
out
mov
outsb
ret
push
pop
sub
sti
mov
push
add
icebp
not
mov
pop
lds
mov
sbb
fstpt
dec
and
jl
clc
lods
pop
loope
stc
das
inc
in
loope
mov
inc
sti
mov
mov
lds
jp
or
pop
xchg
sub
test
add
push
cwtl
jae
mov
pop
shrl
add
imull
stos
or
cmpsb
loopne
cmpsl
jno
aam
inc
es
pop
out
mov
pop
cmp
fstps
jge
jmp
lea
lahf
pusha
push
adc
jmp
inc
mov
mov
xchg
outsb
mov
sbb
loop
sbb
inc
xchg
aam
dec
mov
pop
sbb
in
dec
outsl
mov
movaps
and
ror
or
add
mov
mov
mov
push
arpl
lret
ljmp
pop
xor
push
ljmp
jb
cli
das
stos
roll
ss
mov
faddl
dec
lcall
xchg
aad
jge
cld
insl
bound
sub
gs
daa
enter
call
out
lret
js
sub
xor
test
sub
test
stc
pop
bound
xchg
subb
and
outsb
and
sti
xchg
mov
dec
jb
mov
adc
out
jg
arpl
int
movsl
dec
push
mov
inc
aas
push
mov
out
inc
inc
sbb
test
das
stc
push
cmp
add
mov
and
jge
inc
sbb
mov
test
sti
daa
rolb
nop
or
inc
in
xorl
xor
inc
xor
repnz
lea
push
pop
push
sub
pop
sti
movsl
xor
cmp
pop
push
pop
mov
pop
fimuls
jmp
xchg
mov
out
rol
sbb
cmpsl
mov
iret
in
data16
xorl
inc
loop
lock
sbb
popf
xor
repz
pop
gs
add
xchg
mov
cmc
push
sub
xlat
mov
ss
sahf
xor
xor
or
mov
mov
mov
and
ds
aad
mov
mov
shlb
and
repnz
push
stc
mov
mov
pushf
aam
test
dec
push
jmp
inc
push
hlt
inc
add
stos
or
or
mov
js
mov
cltd
and
push
push
jmp
pop
mov
addr16
dec
dec
push
pop
xchg
sub
lea
outsl
incb
mov
lcall
xlat
push
adc
sbb
cwtl
jmp
loope
pop
cmp
out
dec
jae
pop
adc
add
xchg
jecxz
lds
daa
adc
dec
pop
push
subl
sub
rolb
loop
or
mov
pop
lret
aaa
loopne
mov
pop
push
out
adc
cmpsb
and
add
and
add
popf
push
or
jmp
and
stos
mov
or
jbe
pop
inc
imul
test
add
xorb
jge
push
or
mov
jae
jmp
leave
aam
out
lock
jnp
xchg
mov
or
mov
push
push
pop
cltd
or
mov
push
bound
dec
push
mov
dec
jp
adc
nop
fdiv
sub
inc
fistpll
adc
or
lea
arpl
aas
insl
aas
xchg
cmpsl
clc
in
iret
std
dec
or
jg
mov
sub
dec
jnp
movsl
shll
push
mov
inc
call
roll
push
push
popf
push
es
icebp
outsl
sbb
cld
jge
add
addr16
pop
je
aad
into
ss
movsl
cmc
inc
jae
enter
mov
push
iret
dec
rcrl
mov
inc
rorl
cwtl
lret
fcmovbe
lret
xor
int3
cmpb
or
imul
adc
insl
or
adc
sub
or
or
pop
mov
push
fdivs
int3
add
adc
ljmp
mov
dec
mov
jg
das
jb
and
ds
pop
fdivrl
inc
jmp
cmp
inc
mov
dec
xlat
rolb
icebp
mov
mov
and
inc
sub
lcall
sbb
je
leave
xor
cmc
ds
lret
std
cs
lods
shl
pop
dec
mov
add
daa
shlb
ljmp
test
xchg
fwait
loopne
or
pushf
lods
mov
sub
or
fcomp
adc
test
xchg
or
jmp
iret
sbb
cmpsl
stc
push
and
popa
rol
jecxz
and
lock
loop
xor
and
aam
or
inc
repz
out
jne
and
jmp
xchg
lods
xchg
or
inc
mov
mov
stc
lret
inc
cmp
shrb
jo
jbe
loopne
sbb
dec
adc
xchg
xlat
push
lds
into
xlat
sub
das
popa
jne
out
dec
or
sub
jnp
mov
dec
cmp
sbb
sub
sub
cltd
imulb
xor
outsl
and
push
inc
push
mov
inc
mov
testb
into
jp
fadds
pop
das
or
hlt
dec
add
adc
loopne
inc
add
dec
sbb
or
repz
lods
xchg
fdivs
xor
push
pop
adcb
add
aas
in
in
xchg
test
imul
es
pop
mov
sub
adc
pop
je
push
in
and
add
sahf
inc
lret
test
jne
sbbb
add
imul
and
call
in
scas
fidivl
sbb
std
ficoml
outsl
mov
addr16
es
xchg
xor
xor
pop
xlat
xor
call
out
mov
cli
mov
jle
xchg
clc
pop
ud1
jno
xchg
xchg
mov
dec
push
jl
jmp
jae
xor
sti
stos
sub
in
add
mov
mov
lds
mov
jmp
cmpsl
add
enter
jecxz
or
or
repnz
lods
ds
cmp
outsb
loope
aad
mov
jg
imul
jb
adc
jb
jae
adc
cmc
lcall
testb
xor
push
pop
pop
lods
rorb
jae
adc
push
jecxz
cmpsl
xchg
dec
mov
daa
lea
cmp
push
mov
loope
jno
push
test
push
mov
ss
repz
pop
mov
inc
daa
sub
push
fiadds
pop
stos
xor
xor
mov
and
add
sahf
sub
lahf
push
fimull
xchg
loopne
pop
xchg
cmp
inc
pop
ja
xchg
in
pop
adc
add
jl
nop
dec
pop
lret
jb
fistps
mov
aam
rolb
push
hlt
fwait
push
adc
add
cltd
push
cmpb
cmp
cmp
xor
dec
cmpb
add
mov
pop
xchg
sub
das
sbb
repnz
push
scas
or
push
movsb
mov
push
mov
out
mov
lret
sub
pop
stos
inc
mov
cwtl
lods
leave
xor
push
adc
iret
insb
fwait
sub
leave
ja
pop
nop
pop
dec
outsl
pop
mov
in
xor
jmp
cmp
pop
lret
xor
sbb
dec
out
fistl
cmp
cld
xor
mov
sarb
arpl
mov
lods
sahf
cli
jae
cwtl
ret
jecxz
sahf
lret
ds
insl
movb
iret
setp
add
imul
sub
xchg
shlb
jge
clc
jae
aam
mov
rclb
mov
int
mov
int
and
test
fisubl
mov
and
mov
das
scas
stc
mov
push
sbb
jbe
jne
aam
out
mov
sbb
ljmp
and
das
sub
rclb
cld
adc
mov
sub
fmuls
inc
je
or
rolb
inc
push
mov
lock
xchg
inc
call
mov
int
mov
dec
sbb
adc
pop
cmp
mov
pop
push
push
sahf
leave
xchg
sub
mov
mov
mov
mov
add
inc
pop
mull
sbb
mov
in
mov
sbb
sbb
mov
mov
aam
movsl
or
aad
xchg
push
ljmp
sbb
cmp
push
frstor
push
fmull
nop
xor
jmp
cmpsl
test
ja
mov
add
xor
pushf
dec
int3
jecxz
and
call
mov
inc
jbe
push
push
and
jno
push
mov
xlat
inc
mov
mov
fcoml
fcompl
mov
call
aaa
jmp
imul
jae
out
loop
les
bound
out
add
mov
mov
lds
inc
mov
mov
xchg
pop
lahf
mov
fistpl
rcll
or
mov
cmp
pusha
dec
dec
and
mov
loopne
ffreep
stos
inc
into
les
pop
mov
cmpsb
sbb
subl
jbe
fisttpl
int3
btc
sub
fsubl
nop
scas
sbb
pusha
fisttpll
test
fwait
aaa
aam
cmp
add
cmpsb
push
movhps
addr16
mov
mov
popa
sbb
out
lea
dec
iret
mov
cmpl
push
inc
pop
cltd
push
sahf
lods
mov
sbb
cmc
ljmp
or
xchg
cmpsl
xor
or
adc
clc
xor
fdivrs
sti
sbb
add
inc
call
pop
aad
in
or
shll
jmp
sti
enter
dec
pop
push
fildl
lock
out
jp
adc
mov
out
adc
adc
mov
in
cmp
mov
add
xchg
dec
decl
fsubl
add
xchg
adc
adc
lret
or
loop
jecxz
sbb
pusha
cmc
ljmp
decl
mov
mov
std
jns
jg
icebp
popf
push
and
je
xchg
dec
xor
pop
xchg
adc
jne
pop
insl
or
in
xor
addb
sub
and
cmp
and
xor
outsl
add
cmp
or
mov
add
mov
xorb
hlt
fmulp
mov
clc
dec
std
xchg
jg
xchg
and
repnz
ja
cltd
mov
and
push
push
pushf
xchg
push
add
pop
push
icebp
daa
enter
lahf
sub
mov
daa
std
fmuls
aad
and
pop
addb
adc
mov
mov
or
xchg
cmp
ss
inc
popf
jne
pcmpgtw
out
repz
sub
pop
jbe
add
or
mov
mov
pop
pop
movsb
fstp
movsl
sub
mov
das
movsl
cmpsl
insb
in
pop
xlat
push
lcall
fildl
sub
mov
add
jmp
pop
sub
push
add
jecxz
mov
jne
or
fidivrs
test
ds
std
pushf
jb
js
jne
shll
mov
cmp
pop
lock
mov
ret
repnz
adc
pop
xlat
xor
dec
mov
cmp
xor
jge
mov
sahf
push
push
inc
pusha
out
lock
push
rcl
jne
hlt
mov
movsb
fmull
jmp
sbb
jae
sub
inc
xchg
dec
pop
bound
clc
xchg
pop
inc
ss
lret
and
cs
nop
daa
pop
gs
and
push
mov
xor
cwtl
sub
inc
add
cmpl
movl
movl
mov
jmp
movl
movl
jge
push
push
push
call
or
sbbl
mov
add
or
orl
sbb
mov
xor
or
sub
and
add
mov
cmpl
movl
movzbl
movzbl
jmp
mov
jge
pushl
push
push
pushl
pushl
call
mov
mov
sub
not
adc
incl
sbb
xor
mov
mov
add
mov
adc
shrd
adcl
shr
mov
mov
negl
xor
xor
or
mov
sbbl
movl
xor
movl
cmpl
movl
mov
jmp
mov
movl
jl
push
call
adcl
addl
orl
xor
movl
movl
movl
andl
movl
incl
movl
movl
cmpl
movl
movl
mov
jmp
movl
jge
pushl
push
push
call
sbbl
subl
andl
sbbl
decl
movl
movl
cmpl
movl
movl
movl
jmp
mov
je
push
pushl
call
subl
add
addl
sub
andl
adcl
add
cmpl
movl
movl
jmp
movl
jbe
pushl
call
adcl
adcl
xor
sbbl
subl
xor
xorl
movl
movl
not
movl
cmpl
movl
movl
movl
movl
jmp
movl
jle
pushl
pushl
pushl
pushl
pushl
call
orl
sub
xorl
andl
decl
addl
sub
movl
movl
or
movl
movl
mov
and
mov
movl
jmp
out
adc
adc
sbb
mov
les
sub
push
push
or
sbb
mov
inc
int3
mov
shrb
cltd
gs
or
adc
inc
pop
adc
les
add
jnp
adc
fnstsw
pushf
test
js
fdivs
out
cmc
aam
popa
arpl
sbb
hlt
movsl
gs
xlat
movsb
stc
dec
adc
jl
repz
push
int3
pop
mov
stc
pop
and
or
addr16
and
jnp
imul
xchg
sub
push
inc
shlb
jb
jl
xchg
ret
aaa
pop
mov
mov
dec
mov
jg
dec
lods
mov
in
push
sub
sahf
xorl
adc
fsubp
and
sbb
inc
push
notl
into
push
push
iret
jne
outsb
pop
jp
jbe
jmp
push
and
jb
and
sarl
dec
cmpsb
jge
cmpsl
xchg
adcb
push
icebp
xor
jb
adc
dec
js
or
loopne
xor
xor
popf
xor
sub
repnz
or
adc
push
stos
mov
cmp
int
test
cmpsl
leave
xor
repnz
jo
lcall
mov
popf
and
adc
fcom
pop
xchg
icebp
mov
hlt
aam
and
pushf
and
pop
aaa
dec
test
push
imul
dec
mov
nop
lock
in
add
negl
enter
js
push
xchg
nop
push
shll
stc
jno
test
mov
and
aam
sub
cmpsl
ljmp
nop
sbb
pop
cld
jbe
ja
call
lahf
add
inc
mov
sbb
gs
and
rcrb
sbb
cmp
or
sub
ss
jl
and
cmpsl
adc
mov
lods
popa
xor
sub
sbbb
xor
stos
loope
stos
lahf
es
enter
jo
fs
mov
call
push
pop
fisttpl
cmp
cli
fs
adcl
mov
xor
mov
jp
pusha
dec
fwait
xchg
mov
imul
sub
mov
mov
inc
aad
lret
add
andb
sti
enter
mov
xchg
arpl
shlb
mov
into
mov
jge
jle
test
ljmp
adc
sbb
stos
push
pusha
and
add
mov
mov
les
sub
add
pop
add
xchg
xchg
push
shlb
in
sahf
cmp
test
add
es
sbb
xchg
and
dec
jg
mov
inc
add
test
pop
arpl
and
loopne
push
push
insl
das
sub
jne
mov
nop
int3
outsb
lret
mov
sub
jno
mov
add
fisttps
insb
mov
push
mov
lock
pop
ret
aas
jno
push
pop
mov
shl
jbe
inc
pop
cmpsb
xor
sbb
jl
pushf
push
sbb
pop
sbb
loop
fstp
ss
jns
cmc
dec
and
enter
push
adc
push
dec
adc
lods
and
dec
or
cmp
test
daa
pop
test
cmp
push
lahf
loope
lds
xchg
dec
test
cmp
enter
jmp
jmp
push
aam
mov
out
and
shrl
mov
inc
sub
fsts
sbb
inc
je
js
dec
jmp
mov
mov
mov
jecxz
or
jno
push
lods
ljmp
notl
inc
jle
mov
jp
mov
xor
adc
xor
add
xlat
add
mov
stos
mov
fisubrl
in
pop
sub
movb
lods
les
dec
mov
dec
fs
mov
mov
or
inc
stos
andl
mov
pop
cmpsl
lods
adc
inc
mov
cltd
cmp
popf
or
in
aam
mov
mov
or
les
add
xor
dec
cmp
aaa
adc
mov
cli
out
mov
mov
jne
mov
data16
ret
adc
test
jbe
inc
lods
push
cwtl
fiadds
ljmp
sbb
jge
pop
xor
adc
xor
jmp
jbe
nop
andl
sbb
and
push
cwtl
jecxz
in
es
inc
cmpsl
sub
in
mov
rcrl
test
mov
pop
out
mov
ss
pushl
mov
inc
ljmp
call
loop
add
test
inc
adc
lea
mov
call
xchg
mov
dec
repz
mov
jno
jle
inc
fwait
adc
insb
xor
cs
std
sbb
pop
test
stos
dec
xor
movsl
enter
dec
je
daa
sbb
add
cli
push
jl
shl
adc
jmp
notl
mov
jns
cmpsl
mov
inc
clc
leave
loop
pop
jbe
cmp
int3
or
aad
xor
lea
mov
pop
das
inc
insl
aas
add
xchg
filds
dec
aam
adc
mulb
mov
mov
cltd
xchg
mull
fdivl
add
and
sbb
fsubrs
xor
cwtl
cs
cmp
clc
out
mov
stos
scas
jmp
mov
cmpsl
negl
cmc
lods
insl
lcall
jge
lock
jb
push
pop
cmp
dec
enter
shll
jmp
sbb
push
inc
shlb
adc
cs
pop
dec
push
inc
data16
aas
pop
lret
fcomps
repnz
pushf
in
fcmovu
stos
add
mov
inc
pushl
mov
xchg
cmp
or
add
cwtl
rcrb
push
repnz
in
in
inc
sbbl
enter
push
sarl
push
xor
inc
xchg
scas
mov
lret
jno
xchg
dec
pop
ss
addr16
jecxz
outsl
xchg
lods
movsl
mov
pop
out
dec
repz
add
outsb
repnz
mov
mov
sub
mov
jl
popf
ret
loopne
inc
call
cmp
repz
stc
mov
cli
dec
mov
lahf
aam
je
mov
movsl
je
push
aas
add
sbb
fcmove
jge
pushf
mov
sbb
out
call
lret
lods
rcrl
mov
ljmp
and
pop
into
nop
jmp
inc
fistps
call
or
leave
ja
or
dec
jae
fistpll
mov
and
movsb
dec
lcall
jne
enter
add
xchg
ss
sbb
inc
and
pop
data16
inc
fs
popf
pop
test
dec
test
xor
fisubrs
mov
fcmovnbe
dec
shlb
data16
lods
jmp
mov
and
mov
cwtl
mov
in
inc
adc
in
xor
pop
inc
call
dec
cmp
push
out
cmp
mov
test
mov
pop
pop
pop
in
lret
mov
testb
add
and
pop
jge
in
xor
fsub
jbe
cwtl
jnp
jb
push
push
ret
or
movsb
push
add
fisubl
sar
or
es
mov
inc
pop
es
cmp
insl
jl
inc
xor
mov
push
out
out
enter
add
mov
cmp
movsb
jb
cwtl
lods
lcall
mov
push
or
insl
popf
mov
repz
cmpsl
mov
xor
jmp
imul
ja
iret
pop
jmp
add
dec
jl
mov
addl
inc
lahf
cmp
xor
sub
sub
sbb
cwtl
sub
out
out
sub
imul
loop
sub
inc
mov
daa
inc
adc
cmc
iret
lock
call
cmpsl
stos
jbe
clc
adc
jo
es
jl
mov
in
hlt
sub
jns
adc
icebp
loopne
insl
sub
adc
bound
mov
sbb
das
mov
fidivrs
stos
out
xchg
push
loope
jnp
cli
ret
aas
jecxz
push
iret
adc
jnp
xorb
cmc
xor
addr16
sahf
fmul
adc
test
push
js
bound
xor
jae
sub
mov
orb
push
ffree
inc
jnp
jnp
ret
push
test
add
jecxz
shr
aad
decl
push
faddl
cmp
xor
push
popf
add
inc
or
leave
ret
and
repnz
mov
mov
nop
mov
or
push
jno
adc
in
or
sti
sbb
adc
cmpsb
inc
andl
mov
mov
adc
add
mov
data16
arpl
das
cmp
sbb
add
mov
ja
cmpsb
insb
mov
movsl
pushf
pop
mov
shlb
shrb
adc
int3
mov
push
sub
aam
mov
xchg
jbe
arpl
jp
lret
add
push
pop
mov
out
xchg
ss
mov
sbb
lea
rcrl
mov
jecxz
xchg
dec
mov
adc
push
ss
and
repz
insl
push
pop
and
adcb
inc
repnz
repz
pop
adc
or
inc
mov
jae
fbstp
js
xchg
loopne
stos
sub
dec
jle
dec
imul
inc
cmpsb
fdivrl
fidivrs
mov
loopne
cmpl
jo
or
fmul
fucomp
jbe
imul
xchg
scas
inc
shrl
mov
out
int
inc
jecxz
repz
cli
sub
dec
adc
xchg
push
dec
push
out
mov
je
out
sbb
fnstcw
shlb
adc
fwait
jns
mov
inc
mov
jno
mov
or
clc
insb
scas
dec
xor
mov
jp
test
xor
jns
mov
pop
rolb
or
ret
pop
dec
flds
call
inc
xor
push
adc
sbb
lret
aas
sub
movsl
sub
sub
add
mov
shr
mov
jb
fcomps
adc
dec
xor
insb
and
lcall
popa
sbb
mov
mov
adc
sbb
and
lods
cltd
push
pop
and
mov
or
lea
cld
add
pop
jle
and
cmpsb
and
cwtl
lahf
mov
xchg
pop
xor
mov
stos
or
sub
and
dec
add
cmpsl
fisttps
into
jg
push
lret
or
sub
add
fsubs
push
aam
adc
cld
add
jae
inc
mov
sbb
sahf
sbb
sahf
mov
testl
xor
rorb
push
and
inc
fcmovne
and
jo
and
movsb
jb
xchg
fwait
inc
xor
sbb
aad
dec
nop
inc
fstpt
aaa
std
inc
mov
dec
stc
fdiv
mov
in
and
adc
test
out
mov
xchg
pop
addb
dec
cmp
bound
cmp
sbb
insb
push
sbb
push
in
hlt
mov
aas
rcrb
mov
rcrb
stos
jp
add
mov
mov
push
push
pop
or
mov
inc
push
sahf
lds
dec
and
cmpsb
adc
mov
leave
jecxz
in
clc
jmp
test
shrl
lods
outsb
mov
cmp
mov
dec
xor
sbb
pop
or
mov
lods
les
dec
cmp
out
daa
movsl
xchg
mov
lock
pushf
push
adc
mov
mov
aas
dec
fistps
arpl
out
sub
rcrl
adc
push
dec
push
int3
push
stc
in
push
adc
stc
pop
daa
and
int
mov
inc
or
lret
mov
int3
outsb
xchg
or
mov
jle
inc
push
das
in
enter
jns
add
push
hlt
in
repz
orl
aas
adc
inc
add
mov
bound
adc
imul
popf
icebp
add
or
or
push
sub
data16
sub
fdivrl
mov
mov
out
xchg
and
push
push
pop
cmp
rdpmc
cwtl
arpl
mov
jmp
sbbl
cmp
cmpsl
add
fisubs
outsl
jne
fidivrl
pop
push
outsb
divb
jne
nop
lock
out
inc
sbb
arpl
fists
cli
fwait
and
lods
nop
int3
mov
xchg
shl
add
pop
mov
imul
lock
shrb
aaa
pushf
lret
jecxz
out
jp
mov
test
xacquire
shlb
mov
inc
cmp
mov
and
mov
jp
jne
and
arpl
movsl
cli
movsl
movsb
out
mov
mov
xchg
sbb
fcmove
push
test
lret
inc
pushf
stos
adc
inc
mov
ret
fnsave
call
xchg
push
mov
jge
pop
sub
into
mov
cmpsl
jle
push
insb
int3
sbbb
movsb
fisttpll
pop
roll
cmpsl
fwait
lods
stos
mov
xchg
dec
psrlq
mov
out
test
xchg
popa
pop
sub
mov
iret
mov
push
dec
pop
hlt
cmp
arpl
pop
xchg
cli
xchg
stos
repnz
sbb
rolb
iret
gs
jo
add
mov
mov
outsb
insb
jno
dec
aaa
int
stos
std
bound
push
mov
scas
or
inc
sub
fcomip
sbb
fcmovb
mov
outsl
mov
dec
cs
loopne
or
ss
dec
out
loope
pushf
aam
dec
or
stos
mov
shr
mov
pop
rep
shlb
push
mov
inc
xchg
or
xchg
es
mov
mov
jecxz
aad
push
sub
lret
pop
pushf
push
xchg
mov
inc
test
call
mov
clc
in
add
rol
xchg
es
test
bound
ret
push
push
mov
daa
pop
sub
rorl
mov
enter
stc
cmc
mov
pusha
test
orl
sub
lret
lock
shrb
icebp
cmpsb
pop
cmp
xchg
insl
cmp
adc
arpl
test
sub
add
cs
pop
mov
jns
pop
xor
stos
adc
dec
xor
mov
cwtl
shl
cmp
in
pop
rcll
out
xchg
faddp
cwtl
rorb
movsl
int
movsb
pushf
aam
jbe
add
or
scas
adc
jns
mov
out
dec
in
sbb
push
pop
mov
xor
jnp
dec
nop
stos
xchg
mov
inc
rorl
stc
cmpsb
mov
inc
inc
iret
sbb
sub
or
faddl
adc
xor
call
mov
aaa
cs
fs
xchg
fdivl
loop
xchg
and
out
das
leave
push
jp
push
add
addl
test
aaa
mov
test
push
sub
outsb
push
cmp
outsb
mov
sbb
push
xchg
stos
push
inc
jg
outsl
addb
out
cmpsb
sbb
mov
dec
mov
jbe
scas
scas
and
clc
inc
aaa
clc
and
in
gs
loope
xlat
popa
add
cmp
cmp
bsr
pop
dec
cmp
xlat
cmpsl
rep
stc
mov
dec
adcl
and
roll
adc
addl
dec
xchg
jp
mov
push
xchg
add
push
push
shlb
xor
std
lret
fs
fmull
mov
into
mov
sbb
cmp
out
push
mov
dec
insl
mov
or
push
stos
jb
mull
adc
add
sbb
and
mov
gs
mov
aam
adc
rcl
out
popf
leave
pushf
test
or
push
pop
pop
pop
andl
loopne
xor
mov
pop
xchg
adc
ss
pop
dec
in
fildll
dec
cld
push
cmpsl
pop
jno
mov
lcall
jne
cmp
fcomip
push
inc
and
fisttps
mov
jbe
ffreep
idivb
ljmp
fs
add
cmp
loop
es
jb
mov
rorl
lods
out
ljmp
cmpsl
jno
into
dec
out
mov
adc
dec
xorl
jge
repnz
add
adc
lcall
add
fimuls
adc
xchg
aam
ss
cli
adc
sub
das
into
in
fwait
sub
push
iret
push
leave
cmpsl
mov
xchg
add
aaa
addb
xlat
test
jne
icebp
and
sbb
rolb
mov
call
iret
bound
adc
lods
pop
mov
aad
push
fwait
sub
jmp
jmp
popf
sbb
cmc
inc
sub
cmp
sbb
lods
inc
lea
xchg
mov
jp
or
mov
fimuls
outsb
cmp
push
fwait
lds
enter
clc
dec
lahf
test
fcmovnu
popf
pop
jbe
sbb
iret
adc
lret
dec
pop
adc
sti
push
pusha
and
test
inc
mov
push
jge
mov
mov
movsb
sub
and
adc
push
repnz
int
or
pop
mov
cmc
push
test
and
or
sbb
push
lds
cli
sbbl
movsb
ljmp
ja
dec
dec
lret
xchg
inc
jb
pushw
sub
mov
lea
cmc
jb
cmp
pop
pop
es
mov
push
fcomps
xlat
movsl
int
fistps
sti
xchg
push
jmp
inc
mov
mov
fstpl
xchg
cmc
sbb
outsl
sti
adc
or
cmc
adc
pop
push
cmc
ljmp
and
push
pop
or
addr16
movsb
or
aaa
stc
sbb
roll
dec
lahf
icebp
roll
sbb
pop
ja
fnsave
mulb
push
add
jns
pop
jns
frstor
mov
inc
jne
test
out
or
and
add
fstl
dec
xchg
push
pop
and
aaa
cmpsl
mov
fwait
movsl
test
adcl
sbb
push
das
cmpsb
mov
add
divb
adc
adc
aas
fldcw
xchg
enter
scas
enter
pop
ret
sahf
movsb
test
pop
imul
pop
cmpsb
mov
mov
popl
popf
mov
ljmp
and
jbe
lods
iret
inc
cmp
jmp
ret
mov
aam
mov
sbb
rcll
dec
mov
int
adc
jecxz
daa
js
dec
rcr
insl
std
mov
inc
jo
repnz
add
iret
ret
pop
outsb
arpl
jmp
mov
dec
iret
nopl
icebp
or
rcll
out
or
ss
call
pop
push
or
mov
popl
out
pop
jnp
lahf
fwait
sub
rcr
mov
rcll
jmp
xchg
cmpsl
into
mov
stc
std
mov
ds
push
xchg
addr16
int
jae
push
or
mov
mov
fcmovu
jnp
jb
subl
inc
cmpsb
pop
mov
or
sbb
test
inc
mov
in
outsl
ret
dec
daa
ss
out
dec
sub
dec
push
movsl
cmp
fcmovu
push
add
adc
xlat
mov
lea
dec
add
and
xor
add
push
inc
and
insl
add
lods
jecxz
sub
in
jne
icebp
sahf
lods
push
push
mov
in
mov
subl
pop
das
je
es
fwait
inc
cmp
ret
addb
xchg
test
stos
xchg
les
movsl
xor
mov
or
test
lahf
sub
mov
aam
jmp
fadd
imul
stc
mov
inc
fcomps
cmpsb
popa
leave
outsb
faddp
popf
add
cwtl
gs
inc
sub
add
clc
test
mov
or
sbb
movsl
mov
mov
negb
add
xchg
cli
fsubr
inc
and
stc
lds
scas
xchg
fidivs
cli
fists
sub
pushf
int
sti
mov
cs
mov
sub
jle
xor
fidivrl
add
cmc
insb
mov
fidivs
addr16
mov
cld
into
sbb
adc
outsb
xchg
adc
cmp
stos
int3
mov
test
and
enter
lret
add
stos
xor
sub
movsb
into
mov
int3
jb
adc
push
in
pop
cmp
les
sub
leave
outsl
adc
push
sti
mov
inc
mov
nop
es
cmp
fs
and
xchg
popa
lret
mov
sub
fdivs
cli
sub
out
nop
push
fwait
stc
xor
sbb
sbb
pop
lods
test
jg
loope
jge
jecxz
push
fiadds
fwait
push
sbb
mov
push
mov
fcomps
mov
rcrb
add
pop
or
dec
jle
adc
iret
addr16
test
add
jge
je
movsl
rcll
dec
mov
into
jnp
loopne
dec
push
inc
jl
dec
xor
stos
sub
outsl
bound
lea
fisubl
icebp
and
test
push
cmp
enter
cmp
sbb
leave
clc
rol
mov
icebp
decb
jb
mov
popf
or
add
push
jns
ja
cwtl
sbb
dec
mov
sbb
repnz
fcoms
mov
push
sti
ja
xor
loope
enter
push
xchg
lea
inc
outsl
pop
aam
jns
sbb
mov
inc
addb
inc
das
popa
incl
cmp
fiaddl
sarl
stos
enter
inc
enter
jge
push
into
push
mov
jecxz
mov
ret
sahf
and
dec
xor
xchg
enter
popa
ret
push
inc
pop
stos
aam
in
push
ljmp
pop
dec
pop
insl
push
xchg
sub
mov
pushf
test
fdivs
ljmp
sub
mov
or
in
cwtl
fcmovnb
and
outsb
cli
add
xor
out
sbb
mov
and
inc
sbb
movsb
jne
ds
push
and
popf
adc
out
pop
aaa
fwait
jmp
pop
testb
inc
pushf
daa
cmc
shlb
dec
daa
std
jecxz
aaa
movsl
cmpsl
xchg
bound
jle
out
popf
fdivl
lds
das
mov
add
test
stos
jecxz
mov
mov
add
in
push
cmp
mov
and
jns
aad
cmp
pop
sbb
sub
push
push
or
test
fnstenv
mov
imul
and
test
pushf
fisubrs
push
sub
jns
xor
loope
mov
lds
jae
lods
dec
push
adc
xlat
mov
icebp
mov
cmp
data16
scas
sti
or
cwtl
xor
mov
mov
xchg
sbb
iret
inc
dec
push
cmp
add
in
and
mov
pusha
stc
push
xchg
jae
mov
push
test
jp
mov
inc
or
xor
popa
cwtl
mov
iret
jmp
add
xor
sbb
adc
dec
sahf
scas
sub
cmpsl
out
out
jnp
dec
push
stos
out
out
repz
or
es
sahf
sub
in
fisttpl
lock
mov
sahf
mov
mov
push
aam
jmp
add
jno
mov
sub
dec
cltd
lea
mov
sub
clc
stc
xor
repnz
stos
add
movsb
jg
sub
lret
push
stc
test
int
cmp
test
or
lret
adc
add
adc
outsl
jne
es
cld
adc
sub
xchg
dec
sub
pop
jge
popf
std
scas
mov
jmp
ficomps
sub
hlt
andl
jle
dec
in
pop
mov
aam
pop
dec
lods
call
in
jp
push
pushf
or
push
popa
aad
push
xchg
mov
cmp
jle
pop
xor
jo
std
adc
aad
cmpsb
mov
jl
xchg
pushf
sbb
mov
out
rcrb
pop
xor
mov
dec
into
pop
outsb
nop
push
je
nop
jbe
sbb
shlb
push
aad
or
sub
pop
shlb
jle
ficomps
shl
mov
xor
and
leave
fimull
mov
push
gs
xchg
fnstcw
add
push
mov
dec
jecxz
lret
popa
fdivs
sbb
ss
push
xor
or
add
ja
fldl
addr16
data16
lcall
dec
js
and
repnz
loopne
mov
push
iretw
mov
outsb
dec
popf
jnp
mov
mov
iret
adc
push
jnp
aam
pushf
cmpb
lock
insb
das
xchg
adcb
icebp
les
and
push
xchg
sbb
shr
pop
push
clc
sbb
dec
test
std
or
pop
shll
ja
addr16
and
jp
sbb
imul
push
mov
enter
push
fucomip
roll
mov
jno
adc
xor
push
sbb
jbe
repz
cmpsb
bound
push
in
mov
mov
fidivrl
cltd
jo
ficoml
sub
adc
fxch
imul
jg
jecxz
sbbb
adc
inc
sub
lods
jnp
jnp
aam
roll
xlat
pop
xor
roll
or
leave
mov
iret
fstpt
mov
cli
sbb
hlt
dec
pop
add
push
idiv
inc
xchg
jmp
mov
mov
sub
and
dec
mov
cltd
addr16
scas
jmp
nop
pop
outsb
push
div
or
addr16
test
ficoml
sub
icebp
adc
cmpsl
ja
pop
test
iret
arpl
and
cmovle
cld
mov
add
aam
lea
mov
sub
add
fsubr
jnp
ss
pop
dec
sub
xchg
or
ljmp
push
out
pop
clc
fstl
sarb
cmc
clc
jmp
sbb
lret
mov
jmp
stos
mov
push
mov
mov
xchg
xchg
movb
das
lret
sub
rolb
xchg
mov
push
lock
rclb
xor
addr16
jae
push
xor
dec
inc
add
fnstsw
ret
test
sbb
xor
jns
mov
fidivl
jl
pop
push
sub
xchg
adc
push
sub
xor
cmp
pop
cli
pop
dec
dec
mov
jb
jle
testb
jp
cmp
dec
xchg
arpl
push
dec
and
push
xchg
jns
movsl
push
out
push
inc
sbbb
push
sub
rcll
pop
dec
pop
cmpsb
mov
aam
repz
js
insb
cmpsl
frstor
cmp
adc
xor
lods
adc
outsb
jno
xchg
fcomps
mov
stos
mov
dec
push
hlt
arpl
call
cmp
int
stos
cmpsb
add
sbb
movsb
fstpt
sub
add
adc
cmp
xchg
ror
push
shlb
les
rcrb
idivl
add
jmp
mov
mov
pop
dec
in
mov
iret
es
insb
mov
cld
cmpsb
cs
data16
jmp
jecxz
bound
xchg
clc
fidivl
and
sub
xchg
stc
stos
push
fsts
iret
xchg
fistpl
lcall
lret
xchg
and
xchg
js
dec
jns
jbe
cmpl
cmc
jne
lahf
insl
addr16
shll
adc
adc
out
xchg
imul
ret
sub
mov
movsb
iret
popf
mov
adc
inc
xor
jb
mov
and
enter
xor
sti
sbb
imul
push
in
fisubrs
ljmp
leave
cmpsb
jecxz
out
push
rolb
bound
rorb
adc
xchg
add
cwtl
or
push
sub
test
push
cld
sub
cli
add
je
cmp
test
cmpsl
int
adc
sti
sbb
enter
push
xorb
jb
push
adc
dec
push
dec
dec
dec
test
inc
pusha
mov
xchg
dec
sbb
cmp
pop
lahf
fiaddl
push
cmpsb
fcomi
adc
shll
addr16
ret
dec
sub
dec
or
jg
sub
scas
out
and
dec
and
les
xor
pop
outsb
ret
push
shll
jns
cmp
dec
in
sarl
mov
pop
push
int3
sub
in
clc
cmc
inc
ss
imul
insb
or
lea
cli
mov
stos
and
shl
add
xor
loopne
jbe
aad
inc
mov
mov
enter
jno
sub
cmp
popa
data16
cmpsl
adc
mov
lds
jne
out
push
cld
aad
pop
adc
scas
or
inc
jno
scas
outsl
cmc
sub
cli
cwtl
inc
adc
out
outsb
inc
cltd
jno
loopne
inc
in
or
add
add
movl
movl
movl
movl
jmp
movl
mov
jg
pushl
pushl
call
subl
xorl
subl
andl
cmpl
movl
movl
movl
jmp
movl
jbe
push
push
call
adcl
subl
xor
xorl
xor
add
orl
movl
xor
movl
movl
mov
shl
subl
mov
subl
push
andl
push
push
adcl
push
xorl
call
andl
mov
cmpl
movl
movl
jmp
movl
movl
je
push
call
add
mov
xor
xor
addl
sbb
sub
mov
mov
xor
xor
cmpl
not
movl
movzbl
jmp
movl
movl
jbe
push
call
andl
adcl
sbb
xor
add
sbb
mov
negl
sbbl
mov
mov
add
mov
or
mov
adc
sub
cmpl
movl
not
movl
jmp
mov
movl
jae
push
call
adc
dec
andl
adcl
and
add
mov
lea
xorl
mov
xorl
mov
orl
or
negl
and
mov
adcl
or
xor
cmp
jne
mov
mov
sub
shrd
orl
shr
sbb
mov
sub
mov
orl
shl
xor
xor
addl
or
movl
mov
movl
cmp
movl
jne
add
mov
add
mov
xor
xor
cmpl
mov
mov
notl
jmp
mov
notl
jae
push
push
pushl
pushl
call
xor
add
mov
and
and
and
add
sbb
mov
and
mov
cmpl
movl
movl
jmp
mov
jb
push
push
push
pushl
pushl
push
push
push
push
call
movzbl
add
mov
mov
add
mov
sbb
xor
or
mov
xor
and
sbbl
not
not
mov
shrd
sbbl
mov
cmpl
mov
mov
not
movzbl
jmp
mov
jge
push
pushl
push
push
push
call
add
sbbl
adc
movzbl
sbb
movzwl
or
andl
movl
mov
xor
shr
cmpl
mov
mov
movzwl
jmp
movl
movl
jae
pushl
push
pushl
push
push
push
call
or
adc
adc
mov
add
add
mov
add
mov
subl
xor
incl
or
orl
shl
sub
cmpl
mov
mov
jmp
movl
je
push
pushl
push
push
push
call
and
sbb
movzbl
sub
mov
adc
mov
mov
sub
xor
sub
jmp
out
cmp
cmpsl
adc
adc
xor
push
push
imul
ss
lcall
dec
sub
aad
sub
jb
out
add
cli
lcall
js
push
jge
push
adc
ss
push
aas
mov
push
jno
cmc
dec
add
int
jle
clc
mov
fmulp
add
sub
test
rclb
ds
fidivrs
inc
lahf
rcrl
insl
out
mov
add
push
sub
rcrb
jnp
ret
xchg
cmc
std
adc
dec
sub
fsubl
mov
cmpb
inc
outsl
sbb
dec
outsb
mov
xchg
adc
addr16
rcrb
fldenv
xchg
fildl
js
sbb
mov
xchg
loope
popa
sbb
sub
dec
push
xchg
or
pop
inc
ds
xorb
jecxz
jo
jns
adc
inc
negl
cmp
adc
shlb
and
and
adc
hlt
or
xor
loope
stc
lods
cld
jecxz
test
fimull
mov
orl
adc
dec
movsl
out
mov
subb
insl
shl
ds
and
push
jnp
pop
aad
lock
mov
lds
cmpsl
sub
stos
push
loop
mov
adc
pop
es
repz
lods
cmpsb
jae
es
cmp
ss
mov
inc
jge
inc
adc
mov
push
out
or
repnz
adc
test
test
notl
pushf
inc
fyl2x
mov
lret
int3
jbe
insl
mov
in
pushf
sbb
es
push
and
sbb
adc
inc
cld
push
xor
jmp
das
lret
dec
lea
aaa
inc
cmp
jo
int
jnp
or
cmpsl
in
adc
pop
je
mov
test
pop
lds
aaa
mov
inc
push
arpl
adc
sbb
inc
push
mov
sub
outsl
pop
imul
stos
std
inc
mov
movsl
sbb
mov
movsb
lret
dec
mov
adc
jns
mov
lea
mov
cmp
xchg
lret
cmp
pop
scas
sarb
iret
fisttpl
mov
pop
xchg
pop
std
mov
outsb
cs
cs
add
mov
popf
jne
loopne
push
xor
scas
mov
sbb
aam
mov
mov
pop
jb
jnp
into
jb
push
jmp
enter
stos
jmp
sbb
mov
loope
or
push
outsl
pop
rorl
sbb
xor
add
rclb
sub
mov
mov
iret
neg
dec
cmp
punpckhwd
add
adc
rolb
test
jl
loopne
test
mov
test
data16
insl
jmp
and
push
mov
mov
add
sti
push
inc
jg
daa
push
mov
mov
dec
iret
cmp
out
fs
mov
push
fs
jae
mov
dec
lahf
sub
fldl
enter
test
mov
icebp
jbe
lods
mov
push
repz
js
or
xor
or
mov
sbb
jb
scas
iret
dec
les
dec
stos
das
pop
ljmp
push
cli
rolb
sub
push
push
add
into
popf
inc
int3
test
mov
daa
mov
sub
inc
ficompl
jo
xor
inc
push
add
loopne
sti
dec
enter
in
aam
add
ret
inc
fdivp
mov
mov
jbe
bound
push
jecxz
mov
lea
sub
lahf
and
sub
gs
das
cli
jne
xchg
js
push
jne
cmp
out
ds
js
bound
incl
imul
lea
push
lret
out
pusha
pop
leave
jge
lds
xlat
into
push
inc
and
in
out
aad
xorb
ja
adc
mov
xchg
ret
loopne
pusha
or
sub
jg
dec
sti
aam
jne
or
mov
es
testl
jl
pop
push
pushf
imul
sahf
scas
inc
push
push
add
or
pop
aaa
out
mov
adc
iret
xchg
dec
cltd
fsubr
out
rclb
rorb
sahf
sub
jmp
fdivrl
subl
or
pushf
nop
xor
push
movsl
push
es
out
and
mov
dec
popa
int3
pushf
sub
sbb
xor
cltd
cltd
pop
add
mov
push
inc
or
sub
cmp
popa
adc
inc
rorl
xlat
pop
push
inc
pushf
test
mov
ret
cmp
jnp
mov
and
lret
jae
jmp
xor
jge
loop
lcall
sbb
cld
in
int
mov
push
mov
mov
sbb
adc
jp
push
xchg
mov
cs
pop
jnp
cmpsb
ret
cltd
jns
lock
xor
daa
sbb
dec
roll
push
in
rclb
sub
movsb
pop
pop
sub
cmpsb
and
mul
mov
pop
xor
out
xor
lret
cli
loopne
dec
mov
pop
sti
pop
mov
fisttpl
jae
add
in
jb
adc
ja
sbb
fdivs
pop
fwait
je
adc
cld
int3
cmp
xor
push
ja
push
adc
fdiv
iret
in
add
cltd
cwtl
outsl
inc
xlat
cmpsb
xlat
and
adc
aaa
inc
push
out
xchg
movsb
push
add
mov
faddp
jmp
jle
insl
rcr
add
jg
test
mov
inc
and
cltd
ret
das
sti
sub
fidivrs
jns
repnz
pop
insl
jle
push
dec
imulb
aas
out
fs
mov
xchg
adc
mov
adcb
scas
mov
pusha
xchg
jae
inc
jmp
lds
roll
dec
movsl
psubw
jp
sbb
int3
lahf
ljmp
int3
data16
adc
loop
aas
lds
rol
das
dec
xlat
dec
lcall
movsl
lret
dec
sbb
adc
das
sar
incl
xor
adc
mov
movsl
sub
inc
insb
sub
ja
mov
push
jl
dec
push
aaa
insb
data16
mov
xor
cli
imul
mov
sub
mov
sub
test
xor
push
test
bound
es
fiadds
jns
test
rolb
add
in
fxch
imul
dec
mov
cltd
adc
mov
test
lea
add
ljmp
mov
inc
jg
in
or
ds
mov
aam
pop
push
in
cmpsl
lods
cmp
lds
sbb
jb
jl
test
mov
pop
into
fstpt
mov
clc
leave
iret
stc
or
xchg
cmpsl
out
push
ret
jg
xor
sub
sbb
mov
sti
jmp
mov
add
outsb
ljmp
cmc
std
out
inc
jecxz
cmp
jno
or
pop
adc
sbb
and
jo
or
and
icebp
imul
jg
mov
in
jmp
mov
idiv
fs
push
jmp
cmp
or
gs
add
sub
in
add
popa
das
xor
jb
cmp
leave
xchg
cmove
ss
std
insl
fcomp
imul
pushf
mov
or
push
jb
pop
pusha
aaa
xor
adc
jmp
sbb
or
insb
inc
pop
adc
repnz
fidivs
dec
push
cwtl
inc
pop
add
les
jmp
xchg
push
xor
arpl
inc
jnp
sub
movsl
repnz
cmp
movsb
sbb
jge
out
mov
add
or
insb
and
sub
mov
sbb
push
xor
mov
xlat
nop
dec
int
fxch
inc
adc
aaa
adc
push
push
jg
and
aad
icebp
out
dec
ss
xchg
jmp
mov
jno
rolb
testl
imul
push
xchg
in
out
cmpsb
push
jle
daa
pop
sub
ljmp
jg
out
jg
in
jno
or
hlt
xchg
mov
lock
shrl
fnstcw
jae
and
imul
xor
jae
mov
rolb
fbstp
xchg
in
sub
add
clc
fdivr
sbb
push
cwtl
imul
jle
mov
pop
xchg
mov
and
test
mov
pop
cmp
push
xchg
sahf
test
mov
mov
xor
cmp
sbb
xchg
sbb
ljmp
popa
and
out
fistpl
xchg
aad
testb
adc
cmpsl
stc
push
out
jecxz
mov
xchg
xor
insb
call
jns
stos
enter
sbb
jecxz
lahf
repz
lahf
xchg
ret
out
popa
sub
fs
std
pop
cmp
addr16
iret
pop
inc
mov
sbb
push
scas
or
leave
repnz
sti
adc
stos
inc
xchg
add
ficoml
cmpsb
inc
ljmp
xchg
push
cmpsl
mov
fnstsw
and
fcmovu
arpl
stos
mov
xchg
cmp
jmp
and
jns
int3
test
lods
sbb
and
adc
sub
or
test
shlb
cmp
mov
push
icebp
xchg
mov
out
jmp
push
xor
ret
xchg
mov
xchg
jmp
cmp
cmp
xchg
push
or
or
movsb
dec
std
cmpsb
arpl
mov
outsl
pop
sbb
clc
adc
mov
in
or
jmp
movsb
mov
adc
repz
sub
xchg
popa
mov
xchg
add
insb
je
adc
test
jecxz
jnp
jne
adc
enter
jecxz
icebp
cmp
cmp
in
test
cs
js
dec
pop
or
ds
cmp
flds
xor
or
and
insb
or
dec
insl
rol
sub
lcall
sub
outsl
int
imul
mov
xchg
test
mov
fs
add
xchg
dec
cmp
jg
mov
pusha
mov
ja
sti
inc
leave
inc
gs
ficompl
pusha
push
mov
sub
cltd
outsl
lret
jl
sti
popa
jecxz
or
xchg
adc
out
sub
dec
pushf
mov
out
sbb
jecxz
nop
aad
aam
lahf
inc
cmp
adc
add
int3
orps
push
and
pop
sub
inc
adc
inc
pop
repz
jecxz
mov
gs
inc
fdivr
cmp
fucomip
fwait
cmp
lds
inc
cltd
loop
or
add
jb
in
bound
into
movsb
lret
mov
repz
daa
pand
incl
mov
mov
dec
int3
mov
int3
ja,pt
dec
or
scas
jge
jl
in
adc
jbe
out
insl
dec
jmp
adc
movsb
or
lods
cmp
cmp
dec
ss
mov
sub
push
pop
jp
pop
cwtl
add
jl
roll
and
cmp
das
and
dec
push
sarl
push
sbb
mov
push
das
inc
push
jbe
add
ja
mov
enter
push
arpl
pop
setl
insb
jg
add
xorl
push
lock
andl
ss
shrb
cli
repnz
add
mov
jae
fldt
stos
or
or
adcl
sar
inc
mov
testb
sarb
jb
fdivrp
dec
mov
ret
fdivs
adc
xor
fimuls
and
lret
jmp
aaa
pop
out
mov
xchg
fldenv
dec
push
shrb
imul
lock
or
ret
mull
orl
pop
rcll
stc
pop
add
add
iret
out
mov
push
pop
push
or
adc
sub
shll
in
inc
cmc
addr16
cmp
roll
mov
mov
insb
dec
fstps
add
dec
leave
mov
pop
jl
ficoms
in
insb
in
adc
xor
jo
hlt
cmpsl
test
jge
xchg
pop
inc
add
sahf
cmpsl
int3
cwtl
mov
jnp
test
stos
sub
mov
and
cmp
or
lods
and
jo
adc
aas
and
stos
lret
mov
in
lods
adc
out
pop
add
mov
ret
lahf
invd
divb
cli
dec
data16
xchg
mov
jns
sub
je
pop
mov
call
mov
test
xor
mov
leave
aad
jne
inc
insl
jg
add
dec
mov
test
jo
push
test
scas
scas
loop
fldt
sbb
xchg
dec
jl
add
out
push
and
push
scas
push
lcall
out
test
jb
fisubrl
sub
clc
stos
ds
loop
test
fidivrs
movsb
or
or
fdiv
fsubrs
or
cmc
test
insb
jg
rorl
call
into
scas
jg
ljmp
jo
jo
es
pop
cmp
test
xor
mov
mov
fisttps
pop
jne
cmp
jp
and
push
push
inc
adc
push
xor
shll
out
addr16
or
and
and
mov
fadd
loopne
lcall
jbe
dec
and
and
lret
fcomi
stos
and
imul
mov
xchg
sub
loop
out
xor
rcl
les
xchg
xor
push
cmp
jno
orl
stos
dec
push
pop
fisttpl
inc
add
sarb
xor
xor
mov
add
lods
imulb
mov
into
push
enter
mov
sbb
pop
xchg
mov
xor
or
stos
dec
stos
pop
lock
popf
mov
jno
lds
push
call
int3
loop
scas
data16
sbb
mov
stc
scas
fcmovnb
sub
cmp
jmp
jo
cld
lds
mov
jb
out
or
or
mov
pop
aam
mov
neg
cli
add
scas
mov
bound
lods
adc
inc
mov
fimuls
cwtl
add
inc
out
icebp
les
into
pop
push
fiadds
int3
mov
js
mov
insl
dec
lds
add
mov
add
pop
xchg
sbb
scas
ds
test
mov
in
and
repz
inc
adc
mov
jns
or
lret
mov
mov
xchg
call
mov
outsb
jno
in
ss
sub
andb
push
sarl
fdivr
enter
out
sahf
push
testb
jb
inc
mov
adc
adc
cmpsb
and
cmpsl
push
insl
sarl
stc
sub
add
jns
in
xchg
rclb
repnz
lahf
xchg
flds
pop
out
xor
cmpsl
sub
or
pop
dec
mov
dec
sub
lods
pop
out
push
aaa
das
add
arpl
mov
push
mov
fcom
shr
push
xchg
mov
lds
cs
sbb
push
popa
bound
in
pop
push
add
dec
stos
cmp
jno
cmp
mov
lock
addl
ljmp
shrl
push
xor
jno
popa
xchg
out
fldt
add
adc
test
call
outsl
mov
nop
xchg
mov
push
das
out
in
sub
sarl
mov
aas
cs
psrlw
add
mov
aam
cs
jne
pop
pusha
jns
pop
xchg
movsl
outsl
hlt
mov
push
scas
jo
cmp
jl
rcrb
cmp
lret
fisubrl
dec
pop
fldcw
push
cld
sub
mov
mov
sub
or
or
push
cmp
xlat
movsb
out
pop
xchg
mov
push
sbb
xor
push
jno
imul
test
or
add
stc
mov
xchg
stc
xchg
push
jle
fstpt
jecxz
fwait
test
mov
xor
pop
xcrypt-ofb
cmpsl
jmp
imul
push
inc
xchg
jecxz
mov
push
dec
jnp
ror
into
cmp
cmc
fadds
test
xchg
and
mov
dec
lods
jnp
arpl
js
stos
dec
pop
inc
mov
mov
and
loopne
pop
call
mov
int
mov
in
adc
cmp
aaa
push
mov
dec
test
or
insl
pop
add
or
pop
push
dec
add
pop
cmp
cmc
mov
jp
pop
pop
xchg
inc
sub
jbe
insl
test
filds
pushl
and
or
xchg
xor
pushf
aam
sahf
xchg
xchg
jae
in
mov
jne
fcoml
xor
adc
push
out
sbb
das
cmc
pop
cmp
dec
daa
scas
sbb
sbb
popf
sarl
dec
inc
or
sub
mov
mov
pop
aaa
xchg
enter
fisttpl
pushf
lea
xchg
arpl
add
sub
mov
pop
lds
aaa
in
fcom
cmpsb
lods
fdivrp
clc
sub
mov
les
imul
cmp
dec
movsl
xor
and
add
xchg
sub
xor
xor
add
pop
sbb
aam
lret
sub
mov
jg
andb
lock
mov
mov
rcll
cmpl
cltd
cwtl
push
repnz
pop
lods
push
lds
mov
repnz
add
mov
mov
and
mov
mov
in
scas
jns
and
add
sub
pop
jns
xorb
cmp
addr16
xlat
cli
and
mov
push
dec
push
outsb
mov
adc
cmp
lcall
daa
sbb
sub
push
dec
xchg
adc
sbb
shl
xchg
mov
add
sahf
xchg
inc
in
mov
sub
xchg
dec
jno
pop
jecxz
push
mov
std
adc
cmp
mov
or
mov
mov
xchg
int
cmpsb
pop
mov
mov
dec
xchg
ficomps
sbb
dec
pop
scas
inc
insb
lods
mov
mov
sbb
xchg
subb
cmp
fdivl
push
pop
inc
in
cmp
popa
arpl
push
pop
inc
sbb
fnstsw
lock
pop
lea
mov
inc
push
pop
addr16
cltd
sbbb
jl
cmp
xchg
and
xor
pop
jo
mov
add
dec
xor
stc
push
call
xor
and
rcll
xor
xchg
inc
jne
xor
cld
or
cmc
sub
adc
and
movsl
repz
inc
pop
push
dec
push
lcall
cmp
cmpsb
jb
aam
pop
cmpsb
jo
popf
jg
mov
shr
cld
pop
insb
mov
sbb
aad
mov
and
stc
mov
outsl
out
dec
add
mov
leave
push
ret
fs
xlat
aaa
adc
rcrb
push
mov
and
sahf
outsb
dec
push
loope
out
add
or
xor
push
shl
and
cltd
rolb
cli
jb
les
cmp
pop
jne
cmpsb
stc
inc
std
jecxz
rolb
or
imul
push
mov
cmp
sbb
dec
mov
call
pop
sbb
lcall
sarl
cmpsl
loope
aad
ljmp
aad
mov
adc
ret
stc
mov
mov
xchg
add
sbb
orl
pop
xlat
fisttpll
cmp
repnz
in
xor
pop
leave
imul
pop
jp
test
dec
cmp
and
inc
notb
and
outsb
shl
xchg
xor
pop
or
add
fwait
sbb
lcall
push
mov
or
dec
pop
jmp
xor
loope
inc
cmp
in
mov
xchg
jns
imull
or
xchg
adc
mov
test
push
test
pushf
push
mov
movsb
jne
or
ss
xor
int
mov
jecxz
xchg
and
aaa
fimull
mov
cmpsb
push
push
sub
aam
add
sbb
int
xlat
mov
addr16
leave
cmp
mov
shl
orb
outsb
mov
int
push
daa
sbbb
xlat
push
cld
cmp
ret
pop
loop
stos
scas
dec
imul
lds
bound
jo
movsl
popf
setno
push
mov
add
push
ftst
xchg
pop
arpl
pop
and
adc
gs
jae
sub
mov
push
outsl
sar
movsb
push
jns
add
test
fimull
xor
aas
rcrb
push
pop
ss
fwait
jecxz
jg
sub
mov
cltd
cwtl
inc
fsts
cmp
sahf
out
jp
push
ficomps
xchg
pop
mov
imul
inc
outsl
dec
lds
or
arpl
cmp
enter
loopne
addr16
or
cmpsl
adc
inc
pop
jno
mov
ret
aas
lock
sub
mov
popa
push
rcl
cmp
sub
mov
imul
cli
ss
and
adc
pushf
dec
clc
adc
and
js
cmc
fs
xchg
out
fnstsw
repz
in
pop
adc
jne
ss
push
add
jmp
cmp
in
sahf
stos
adc
dec
mov
pop
and
push
push
adc
lret
jge
loopnew
into
movsl
jg
push
xor
add
lock
addr16
add
int3
cmp
popl
push
mov
sbb
out
mov
adc
or
shlb
push
mov
mov
push
loopne
mov
loopne
test
lods
cld
add
mov
and
or
add
lret
sub
xchg
sub
adc
pop
sub
cltd
dec
jbe
pop
cmp
pop
mov
jg
jmp
out
inc
inc
push
lret
and
add
fcmovne
or
pop
addb
psubsw
jle
out
mov
mov
jbe
rclb
ljmp
shll
cmp
push
rorb
mov
inc
or
or
cltd
or
adc
adc
jne
lds
and
or
jae
adc
mov
subb
inc
adc
ds
divl
stc
outsl
jecxz
mov
out
xchg
mov
add
mov
xchg
aad
mov
inc
inc
pushf
incl
jl
out
lcall
sbb
imul
clc
test
pop
push
jne
mov
xchg
inc
lods
dec
or
icebp
push
lea
mov
xchg
push
and
jp
mov
lods
les
movsb
mov
jbe
or
std
push
jecxz
jb
iret
subb
lahf
stos
aas
push
scas
dec
dec
popf
lods
mov
aas
cli
jp
or
fists
push
push
lcall
sbb
sbb
push
into
inc
shll
int
ja
ret
call
push
in
adc
inc
ret
and
xchg
mov
or
imul
fbstp
mov
mov
pop
mov
push
sbb
or
jbe
dec
xor
ret
adc
push
hlt
fs
inc
fcoms
mov
dec
xchg
dec
xchg
and
aaa
pusha
mov
cmp
divb
add
pop
inc
repz
sbb
call
lret
jae
xchg
dec
mov
cmp
jp
add
jnp
cmp
xorl
pusha
nop
xor
adc
add
jno
or
repnz
repnz
aam
jno
divb
push
xchg
add
adc
loop
in
pop
xchg
es
into
cld
sbb
dec
jns
insl
mov
cmp
imul
push
stos
dec
sbb
xchg
in
adc
push
xchg
cmp
pop
jge
and
shll
pop
ss
mov
mov
lods
cli
popf
sbb
popf
inc
adc
and
ret
xchg
roll
in
scas
sbb
aas
scas
add
movsb
xchg
int3
xchg
and
xchg
stos
inc
add
add
add
mov
or
divb
jno
jecxz
call
fcmovnbe
neg
data16
fmull
mov
jecxz
jno
je
int
mov
lods
inc
push
lret
cmp
pop
sbb
push
loope
int
jp
mov
xor
fsts
out
mov
xor
mov
pop
flds
fs
jl
std
jnp
mov
into
cmp
push
and
mov
dec
or
les
jo
adc
sar
lret
cmp
mov
xchg
dec
mov
popf
mov
outsl
or
fisubrl
es
fcomp
ret
stos
jle
cld
jg
sub
cmp
add
cmc
test
out
cmp
pop
iret
shl
mov
fadds
pop
push
jmp
adc
in
js
gs
jbe
lahf
xchg
test
nop
xor
cmp
adc
aaa
daa
xchg
bound
lahf
or
pop
inc
popa
xchg
or
jle
fildl
cld
adc
out
cmp
cltd
adc
add
inc
sti
lods
nop
sbb
cmp
add
dec
or
fimuls
imul
out
and
std
mov
loope
fistps
push
mov
stos
filds
dec
mov
rcrl
cltd
xor
and
mov
cmp
out
sbb
xchg
sub
inc
dec
sbb
xor
in
in
outsb
iret
std
jne
cmpsl
dec
push
loope
repnz
lock
loope
test
movb
xchg
jb
dec
jbe
setle
sub
rcrb
mov
testl
ret
ds
jb
fildll
jo
xchg
mov
popa
scas
imul
mov
dec
xchg
loop
sar
std
and
cmp
sub
sbb
cltd
dec
movhps
or
jnp
fstl
dec
cld
es
or
inc
pop
inc
xor
mov
mov
into
mov
std
cwtl
mov
scas
adc
sub
or
push
mov
fwait
scas
aaa
cmp
addr16
lock
push
fisttpl
mov
pop
mov
dec
movsl
mov
ljmp
stos
jecxz
xorb
fmul
mov
movsb
icebp
in
in
shll
push
dec
and
movsl
push
xchg
lods
mov
negl
push
cmpsb
dec
xor
adc
mov
add
lret
jmp
pop
xchg
js
jns
add
and
repz
xchg
sbb
inc
adc
adc
imul
pop
fsub
sbb
mov
int
inc
rcr
scas
cwtl
pop
adc
lret
cmp
mov
add
xor
sub
pop
mov
xchg
mov
jg
inc
cltd
in
fcompl
loope
inc
fistpll
jle
push
adc
dec
push
scas
out
mov
cmp
das
icebp
ds
negb
jg
jecxz
xor
inc
pop
adc
popf
jno
cld
xor
inc
sub
and
hlt
std
add
mov
push
adc
test
data16
pushf
sub
pop
maxps
aas
test
dec
idivb
std
clc
das
xlat
lcall
arpl
cs
xchg
ret
jecxz
cmp
sbb
repz
clc
in
dec
fldt
mov
lret
push
xorb
adc
push
fwait
lret
adc
mov
cli
xchg
xchg
orps
add
scas
adc
adc
movsl
jo
dec
mov
mov
add
mov
inc
sub
dec
mov
fsubrl
hlt
or
es
stos
outsb
mov
push
push
lahf
int3
add
push
jnp
jno
cwtl
popf
sbb
pop
pushf
cli
dec
adc
xlat
gs
push
shll
cmp
movhlps
add
push
sub
jmp
aam
xor
shlb
adc
cmp
ja
cmpsl
lea
cwtl
in
cmpsl
pop
stc
xchg
es
or
lds
mov
js
cmp
iret
mov
mov
push
lock
fnstcw
fnsave
cmp
test
xchg
cmc
outsl
push
dec
cld
jnp
into
enter
dec
ljmp
jg
filds
add
jp
ja
jno
and
add
dec
cmc
and
aad
out
mov
repnz
fs
cwtl
fidivrs
xchg
sbb
fiadds
inc
arpl
and
and
es
sbb
mov
cmpl
not
mov
jmp
mov
jne
pushl
push
pushl
pushl
pushl
call
sbb
xorl
add
addl
movzbl
or
mov
sub
adc
mov
addl
mov
cmpl
mov
movl
movl
jmp
movl
not
jbe
push
push
push
push
push
call
movzbl
sbb
adcl
mov
and
xor
xor
xor
mov
and
add
cmpl
mov
mov
movl
not
jmp
movl
jbe
pushl
push
pushl
call
xor
add
sub
inc
adc
orl
adcl
mov
mov
mov
add
shrd
incl
shr
adc
mov
cmpl
movl
mov
mov
jmp
movl
movl
jle
pushl
pushl
push
push
call
xor
and
xor
movzwl
sbb
subl
xor
or
mov
sbb
mov
and
mov
sub
xor
sbb
shl
sub
xor
orl
or
mov
cmpl
mov
mov
mov
mov
jmp
mov
jb
pushl
call
subl
movzbl
and
mov
add
orl
sbb
sbb
sub
mov
shrd
addl
shr
mov
mov
adc
mov
addl
xor
xor
adcl
or
shl
lea
mov
subl
mov
shrd
shr
xor
mov
sbb
mov
inc
mov
movzwl
sbb
xor
mov
and
mov
xor
andl
or
adcl
shl
cmpl
mov
mov
mov
movl
jmp
movl
jbe
push
push
push
pushl
call
sbb
addl
mov
sbb
mov
xor
sbbl
neg
imul
xor
jmp
fistpl
sbb
jmp
push
test
dec
fdivl
push
push
sub
push
push
ret
out
in
push
psubsw
xchg
mov
out
pop
jbe
stc
pop
fisubl
stc
lock
add
loope
fidivrs
inc
push
and
sub
jno
int3
cmp
jmp
lcall
or
outsb
dec
pushf
sub
psubsw
lret
clc
mov
cmpsb
ret
inc
jge
pop
add
cs
cmp
lcall
mov
test
int
xor
push
sbb
fisttpl
mov
pop
orb
rorl
inc
and
and
fcoms
sti
jo
jl
jns
imul
mov
and
sbb
mov
outsb
mov
daa
mov
xor
mov
dec
ja
div
ss
dec
xor
pop
add
les
sub
dec
pop
xchg
cld
push
stos
and
mov
in
add
and
insb
lea
mov
jno
scas
cmp
mov
push
lds
push
dec
inc
sbb
pop
mov
insl
fcmove
cmp
iret
adc
data16
std
inc
scas
jmp
xor
jmp
mov
add
dec
subl
mov
roll
mov
aam
jecxz
lret
mov
and
fistps
shlb
xor
test
ficomps
dec
mov
pop
das
pop
iret
daa
and
push
pop
cli
out
adc
out
push
rolb
aaa
cmc
out
xlat
xchg
cmpsl
cmpsl
stos
mov
iret
or
xor
mov
xchg
xchg
ja
sub
mov
mov
iret
adc
or
mov
push
adc
or
fwait
ja
lret
aaa
xchg
faddl
stc
daa
hlt
sbb
mov
out
pop
lcall
pushf
jo
cmp
pop
xor
pop
or
adc
aaa
popl
popf
sbb
pop
fisubrs
aad
xchg
int
cs
out
push
fcompl
cmpl
sbb
pop
push
fiaddl
push
fadds
adc
test
dec
jge
pusha
inc
test
dec
jns
sarl
or
outsl
adc
loope
cli
lcall
scas
test
rcrl
lds
fistl
adc
adcl
cmpsl
insl
mov
gs
pop
sti
dec
lock
mov
adc
scas
ljmp
pushf
in
pop
jbe
repnz
aas
dec
push
sbb
rcr
and
xlat
pop
mov
aas
lret
lret
and
std
mul
pop
popf
stos
xor
fdivs
call
dec
add
mov
daa
addr16
enter
xchg
sahf
inc
fwait
outsl
or
rcrb
subb
iret
push
mov
in
adc
popa
jmp
outsb
pushf
test
inc
das
jmp
das
add
clc
ss
loop
xlat
jns
or
mov
repz
mov
popa
cltd
cmpsb
pop
int3
les
push
pop
mov
xchg
lods
repz
push
mov
cmp
imul
cltd
js
jl
je
cmc
out
jmp
movsb
std
dec
mov
out
mov
dec
into
sti
push
pop
outsl
les
test
cmpsl
test
pop
popa
push
roll
pop
stos
mov
xlat
add
jge
pop
and
stos
xor
call
cmpsb
jle
adc
shl
xchg
sub
jmp
loopne
mov
dec
add
and
xchg
std
jle
jnp
mov
sbb
push
pop
nop
mov
jbe
xor
pop
pop
adc
int
lret
divb
icebp
sub
dec
adc
fcmovbe
movsl
mov
sbb
fldt
cmc
rorb
cmpb
jge
pop
es
dec
sbb
add
push
sbb
and
sbb
jecxz
mov
sbb
dec
mov
or
sti
ds
push
add
enter
pop
mov
roll
ljmp
test
sbb
cmc
pop
nop
pop
pop
mov
xchg
repnz
inc
pop
inc
jno
insl
sbb
aam
or
cmpsb
in
aam
aam
dec
adc
and
lcall
xchg
enter
or
sbb
xor
out
sub
or
stos
jne
flds
leave
stos
dec
int3
dec
add
pop
mov
in
scas
ja
mov
out
test
jmp
mov
daa
ret
test
and
rolb
and
shrl
mov
cld
sti
xchg
out
or
mov
mov
movsl
xchg
push
jmp
shlb
js
adc
cwtl
push
daa
push
mov
shrb
add
fwait
popa
cmp
mov
popa
cld
sub
mov
inc
mov
movsl
add
cmp
popa
and
mov
out
add
pusha
cltd
mov
cltd
push
cmp
mov
out
adc
out
imul
dec
roll
les
fnstenv
jge
movsb
bound
mov
xchg
mov
sbb
insl
daa
inc
sbb
aaa
fsubs
int3
rorb
aas
clc
pop
mov
sub
decl
sbb
sub
mov
xchg
aas
cmp
loop
mov
sub
mulb
mov
out
cmp
dec
sub
rcl
jmp
sbb
sbb
hlt
sbb
dec
nop
jnp
test
pop
je
dec
test
stos
pop
lds
das
pop
imul
cld
add
stos
pop
pop
cmp
push
xor
or
jb
mov
jno
outsl
jecxz
lods
stos
aas
mov
push
mov
in
pop
pop
hlt
push
movsl
push
inc
sbb
lods
cmp
jl
nop
and
out
sub
mov
mov
mov
jl
push
adc
pop
ss
jae
shll
cltd
pusha
or
push
out
xchg
jnp
ljmp
lods
test
pop
mov
negl
or
push
lock
lods
cwtl
jmp
xchg
add
pop
push
adcl
push
test
and
adc
pop
push
sbb
pop
xchg
pop
add
fninit
mov
add
sti
jnp
mov
jne
pop
lcall
jae
sub
jp
lods
push
cmp
add
dec
sti
dec
or
das
movsl
mov
notb
test
ss
daa
mov
test
adc
out
rorb
aam
aas
inc
fidivl
add
movsl
movsb
fmull
in
push
pop
out
add
push
cmp
jmp
pop
ja
bswap
popa
jle
lods
xchg
xor
mov
int3
insl
cmc
cmpb
lods
das
inc
ds
sti
fcompp
mov
das
mov
out
mov
inc
ret
lret
inc
xchg
stos
and
mov
xor
out
xchg
cli
cs
loope
and
lcall
or
gs
fstl
pushl
xor
pusha
jbe
scas
xor
test
fbld
jns
push
mov
ffree
mov
jmp
adc
sbb
std
negb
mov
lea
jmp
cmpsl
cmp
xchg
loopne
roll
jbe
push
inc
arpl
sbb
sti
cmp
mov
popf
jp
fidivl
push
xor
lcall
cli
and
sbb
mov
xor
stos
mov
pop
pop
add
out
imul
fdivr
test
fucomip
dec
out
mov
lods
or
sbbl
cwtl
pop
lahf
dec
and
ljmp
jb
mov
nop
sub
mov
jb
xchg
fwait
jnp,pn
ss
out
insb
xchg
lcall
mov
pop
ret
mov
push
rcl
push
lock
out
lods
fisubrs
pop
mov
push
orl
loopne
test
mov
xchg
dec
lods
mov
jmp
xchg
sbb
mov
jl
inc
inc
shrl
stc
mov
insb
mulb
sbb
out
ret
lcall
cli
not
andl
popf
add
and
insl
push
repnz
add
test
xchg
shll
add
ss
pop
idivb
arpl
add
mov
jo
rcrb
pusha
inc
int
pop
or
loope
out
jae
mov
std
fwait
push
psubsw
icebp
dec
sub
xor
cli
out
into
js
mov
ds
mov
jnp
jns
sbb
lahf
in
mov
sub
mov
push
scas
xor
mov
cs
loop
push
adc
inc
movsl
fidivrl
in
nop
xchg
pushf
cmpsl
sub
mov
pop
lods
js
outsl
ss
cld
lcall
mov
push
and
mov
xor
push
outsl
jnp
pushf
dec
mov
fstpt
and
mov
push
add
leave
or
jecxz
pop
push
add
mov
xchg
jnp
sbb
stos
adc
mov
popf
inc
inc
fwait
imul
pop
mov
rol
rcrl
insb
pop
sbb
and
jge
and
ret
adc
and
jns
push
xor
scas
add
xchg
push
jl
fdivl
out
loopne
or
and
insb
mov
loope
out
mov
ret
ss
jne
mov
xchg
std
in
mov
push
xchg
mov
xchg
inc
mov
pushf
int3
pop
shlb
mov
or
mov
sub
mov
cmp
rcrl
xchg
loope
sbb
imul
mov
in
mov
mov
or
jmp
pushf
ret
call
scas
js
jae
repz
cmp
les
xor
add
aas
mov
push
dec
push
int3
cmp
cmp
mov
cmp
ds
test
jo
rcrb
push
mov
scas
pop
into
fsubrs
rcr
loopne
lahf
sbb
out
jo
jl
add
inc
arpl
test
pop
pop
aas
dec
out
testl
aad
xchg
pop
inc
sbb
daa
xor
xor
cs
mov
fisttpl
mov
push
cmp
sub
or
out
jo
mov
mov
sahf
sub
push
push
sub
mov
jnp
mov
outsl
jg
xlat
fcoml
or
call
xchg
jne
movsl
int
mov
push
push
add
mov
mov
sbb
push
mov
cmpl
cmp
dec
fsubrs
mov
rorb
inc
mov
sbb
lock
out
pushf
mov
das
jae
dec
adc
xor
add
push
xor
dec
or
xchg
and
into
dec
out
cmp
inc
stc
out
inc
dec
sub
enter
jae
jo
ja
ljmp
sub
xorb
pop
xchg
aas
dec
xchg
push
xor
add
sub
and
jge
jecxz
mov
and
es
xchg
mov
mov
ljmp
dec
das
arpl
loop
sbb
jnp
pop
popf
test
add
in
fnstcw
sub
sarb
dec
jb
rcrb
or
mov
cmp
push
inc
lds
ficoms
xchg
jbe
in
inc
jnp
scas
test
adc
xchg
dec
jge
pop
and
mov
pop
pop
push
pop
or
dec
ljmp
or
rcrb
and
mov
jl
cmp
sbb
xchg
out
mov
nop
ret
jnp
jnp
lods
inc
scas
lret
test
mov
ret
jge
pop
imul
inc
es
mov
sub
lods
add
shll
push
icebp
lret
add
mov
sbb
pop
jb
in
andl
cli
pushf
mov
mov
sub
fists
xor
aad
mov
xor
out
icebp
lods
call
incl
sti
arpl
push
cmpl
fmull
movsb
pop
mov
lahf
pop
ds
push
and
adc
push
xor
insb
aas
sub
cltd
test
dec
jmp
insb
xor
test
sbb
jnp
mov
mov
cli
add
push
add
les
xchg
mov
clc
jle
lods
mov
fidivrs
mov
xor
cmp
pop
popf
loopne
mov
mov
mov
ljmp
nop
sbb
jge
in
mov
outsl
imul
stc
mov
ja
push
cs
xlat
xchg
inc
iret
mov
rclb
mov
dec
and
ss
adc
or
push
arpl
sbb
xchg
invd
mov
scas
rorb
sub
push
and
hlt
lods
pushf
mov
jg
cmp
sbb
xchg
and
out
cmp
out
and
mov
jecxz
int
sbb
adc
mov
outsb
pop
push
push
inc
xchg
pop
es
xchg
jge
jnp
dec
insb
and
hlt
cmp
les
mov
gs
out
scas
popa
mov
mov
sbb
outsl
jbe
cmp
jl
mov
rclb
push
je
arpl
iret
rcll
leave
rolb
out
insl
push
push
lret
jno
xor
out
or
pop
pusha
out
mov
mov
lahf
in
mov
jnp
dec
cltd
push
pop
push
test
xchg
pop
aad
dec
out
and
ss
js
pop
add
int
xlat
xor
jns
call
aaa
inc
cmp
jae
stos
push
pop
gs
test
pop
outsb
in
xor
or
pusha
mov
sbb
xor
pop
dec
sub
arpl
cmp
push
lock
int3
sbb
dec
icebp
test
xchg
lods
push
inc
mov
pop
js
leave
mov
aas
cmp
and
cmp
push
inc
rclb
insl
je
mov
in
inc
mov
fs
push
inc
mov
pop
shlb
adcb
pop
inc
adcl
add
test
loop
cmc
push
les
imul
fcmovb
xbegin
adc
daa
xor
fidivrl
inc
mov
jno
inc
ljmp
lods
ror
push
outsl
xor
xchg
cmpsl
inc
xchg
fstps
sbb
enter
add
mov
out
jle
daa
pop
mov
cmpl
mov
lods
inc
and
in
pop
cmp
popa
sbb
out
xchg
fsubrs
lcall
ljmp
rep
lea
or
jecxz
rcl
shll
clc
mov
mov
jnp
ror
sub
mov
cmpsb
ret
sbb
loope
es
add
inc
add
inc
fstps
xor
push
mov
scas
jo
cwtl
outsb
in
cmp
pop
sbb
push
ja
andb
lds
test
cmp
fsubrl
pop
mov
nop
jmp
sbb
unpckhps
cmc
and
sub
adc
sbb
imul
fld
mov
mov
and
pop
repnz
xor
test
mov
cs
xor
adc
sbb
cmp
jl
push
out
cmp
add
mov
pop
xchg
leave
lret
jmp
pop
bound
push
imul
jecxz
inc
call
cmpsl
sarb
pop
outsb
popf
adc
jp
sahf
or
divl
push
xchg
add
in
xor
push
sbb
fsubrl
jg
cmp
push
sub
pop
dec
mov
push
int3
stc
lcall
sub
sub
dec
int
cli
in
xor
cmp
bnd
dec
aaa
call
mov
or
sahf
test
enter
adc
std
out
fs
adc
pop
loop
xchg
rcrl
ljmp
out
mov
cmp
insl
in
mov
scas
mov
inc
imul
and
in
fcom
es
jl
lock
pop
int3
das
shll
xchg
fimuls
rcr
mov
shrb
cmp
xchg
push
out
rorl
loopne
pop
jecxz
js
ret
jecxz
cmp
adc
xchg
icebp
or
fmuls
daa
mov
out
sahf
addb
xchg
sahf
loopne
shll
inc
pop
add
arpl
int
decb
mov
repz
hlt
out
adc
daa
sahf
pusha
add
in
push
push
shlb
xor
icebp
icebp
pop
mov
adc
mov
out
cli
xlat
in
mov
sub
stos
in
pushf
aad
mov
sub
das
adcb
popa
mov
jno
scas
jne
lock
je
stos
sbb
push
mov
pushf
icebp
xchg
out
out
cmpsl
fnstcw
push
cmpsl
mov
mov
cmp
push
fdivr
stc
scas
xchg
mov
insb
xlat
jmp
leave
ja
lar
mov
jg
stc
cmp
and
jl
hlt
lcall
and
jmp
mov
sbb
dec
or
rcrb
ljmp
ret
mov
mov
adc
clc
or
cmp
shll
sbb
int
call
cmpl
inc
les
mov
rol
ret
andb
pushf
mov
je
mov
push
fisubl
mov
mov
scas
loopne
mov
mov
lret
push
sbb
add
adc
mov
fldcw
sbb
iret
xchg
mov
dec
xor
shrb
jns
xchg
movsb
xchg
stos
jp
loop
pop
insb
ja
fnsave
jl
jno
les
je
subb
inc
subl
and
add
sbb
pushf
dec
or
cmp
push
cmp
xchg
fisttpll
fisttpll
cwtl
push
mov
or
cwtl
jb
mov
sub
out
dec
std
add
xor
sbbl
jmp
mov
mov
cmpsb
shl
xor
jl
xchg
lahf
mov
mov
mov
sti
aad
sti
mov
aad
pop
xor
repnz
enter
popf
sub
nop
cmp
xchg
pop
sub
movsl
jle
mov
push
clc
pop
mov
adc
into
sbb
fistl
jne
push
sbb
in
inc
ret
fcompl
jg
fs
pushf
mov
hlt
xchg
popa
mov
mov
adc
popw
aam
iret
popa
inc
inc
sbb
push
mov
sbb
std
sub
pusha
cmp
jns
pop
pop
mov
cmpsl
aad
jbe
push
push
add
xchg
push
sub
cmp
clc
rcll
xchg
mov
mov
adc
adc
lret
imul
dec
mov
and
loop
icebp
out
inc
inc
jae
xor
int3
mov
test
ss
and
sbb
add
jl
jecxz
xlat
pop
jecxz
dec
test
add
movsb
pusha
loope
stc
add
sub
addl
outsb
sbb
mov
sbb
and
sub
movsl
xor
sub
jo
and
test
shll
lods
pop
jae
pushf
orb
adc
push
or
inc
lods
lcall
add
jp
hlt
push
push
cmp
aas
sub
mov
pusha
mov
mov
insb
int3
dec
adc
outsb
cmc
sbb
fisubrs
les
xlat
sub
sbb
or
cmpsb
loope
pushf
inc
out
sahf
jge
mov
pusha
cld
mov
ret
and
pop
fucom
pusha
inc
pop
fxch
xchg
inc
sub
jo
push
jmp
shr
enter
pop
push
mov
xchg
pop
sub
aas
iret
xor
out
shlb
xchg
orb
jmp
xchg
xor
mov
xchg
sub
add
lret
add
or
xorl
sbb
mov
inc
jo
pop
pop
and
lds
jne
jb
sub
aam
jmp
jl
shll
rorb
movq
and
stos
push
icebp
xchg
cld
inc
jecxz
scas
and
or
js
jl
test
std
loopne
shrl
bound
es
inc
inc
pop
and
sahf
lahf
in
cmp
fwait
xor
or
jne
andb
inc
es
dec
popa
nop
lret
cmpsl
out
cmp
fnstcw
in
mov
xchg
mov
jmp
mov
shrb
call
and
mov
fwait
arpl
rcl
mov
xor
popf
push
xchg
popa
sbb
lock
sbb
xor
cli
sbb
sbb
mov
dec
imul
add
aam
les
sub
scas
lods
lds
scas
dec
mov
idiv
xor
imul
push
add
and
xor
rorb
pop
xor
loopne
sub
pop
sub
leave
adc
cltd
fisubl
stos
decb
xor
push
pop
xlat
cmpb
push
inc
sub
add
adc
sbb
adc
adc
ficompl
and
and
jp
xchg
gs
sub
xor
sbb
stc
sahf
xor
push
sbb
jno
inc
inc
pop
shl
stos
and
push
push
push
jnp
push
shl
mov
out
test
push
jb
push
movsl
andb
or
addr16
and
fstpl
inc
mov
shl
xchg
or
pop
call
loop
loopne
sbb
or
jecxz
and
inc
sbb
and
adc
scas
das
cmp
cs
fwait
push
imull
popa
movsl
stos
sbb
in
mov
or
int
xchg
xchg
jo
cmp
xor
movsl
jno
pop
test
push
lret
lds
or
cmp
sbb
jo
add
das
xchg
cmp
sbb
into
push
sbb
jle
scas
push
sub
dec
imul
test
xchg
adc
ljmp
mov
cmp
or
fsubrl
add
mov
mov
cmpsl
lods
push
stc
out
add
xor
adc
jmp
push
loop
jmp
daa
jae
mov
aad
mov
jnp
sub
repnz
sahf
xchg
pop
shr
out
and
adc
sbb
jg
mov
data16
sti
push
adc
cmp
cmp
and
mov
in
das
dec
push
pusha
jbe
movsb
xchg
out
testb
push
adc
mov
mov
movsl
pop
lods
or
adc
inc
loope
subl
ret
push
aaa
sbb
mov
gs
mov
add
aam
pop
mov
bnd
or
adc
and
sti
sub
adc
andb
mov
inc
jo
cmp
xor
mov
add
and
fisttpll
pop
into
aas
mov
test
push
adc
and
jnp
mov
jo
icebp
mov
mov
in
mov
cli
pop
lods
or
inc
pop
mov
dec
decl
xor
mov
mov
in
int3
data16
dec
std
mov
bound
push
or
mov
add
sub
mov
mov
sti
mov
stos
mov
xchg
mov
loope
ja
repz
inc
cmp
adc
insb
xchg
js
push
pop
sbb
sub
jo,pt
in
and
ret
into
inc
dec
mov
rolb
int3
mov
mov
push
mov
ss
es
ret
push
or
cmpsb
or
jnp
test
test
cli
sbb
mov
ja
dec
rorl
mov
ljmp
cmpsb
andl
push
lods
push
es
and
xchg
outsl
pushf
stc
and
popf
adc
aam
mov
or
lds
dec
iret
roll
xlat
ljmp
adc
dec
dec
clc
pop
les
jne
enter
test
jo
in
popa
mov
xchg
mov
shl
gs
cmpsl
sahf
lock
jne
dec
aad
xchg
cmp
dec
lods
ja
cmpsb
cmp
fiaddl
cmpsb
mov
mov
mov
add
ret
iret
jmp
hlt
pop
adc
xor
in
movsb
mov
add
inc
lcall
jno
popf
xor
test
mov
cmp
mov
daa
mov
jnp
mov
gs
xchg
test
test
mov
jo
mov
and
test
fwait
sub
in
dec
inc
push
leave
bound
push
lcall
leave
adc
dec
or
icebp
cmp
add
or
adc
adc
or
stos
ficoms
xor
jo
sbb
xchg
xchg
je
or
mov
addr16
sarb
xchg
inc
adc
add
cld
inc
pop
sbb
insl
mov
test
int
ret
xor
push
lods
mov
push
divl
or
ret
pop
stos
loop
clc
push
jo
test
pop
rorl
iret
addr16
add
repz
les
or
dec
adc
sbb
lock
inc
ss
rcll
dec
arpl
fsubs
lea
cmc
sub
mov
cltd
notl
xchg
xchg
das
ds
and
push
sbb
push
mov
int
mov
jp
stc
jmp
dec
fcmovnb
dec
mov
dec
outsl
adc
jg
mov
cmp
inc
sbb
test
cmp
cltd
and
cmpsb
jne
ret
and
mov
rorl
loope
adc
jns
loopne
popa
ret
mov
ljmp
sub
push
cmp
daa
cmp
fwait
mov
lock
dec
mov
clc
and
mov
test
mov
in
imul
das
loope
insb
iret
push
adc
in
inc
mov
fdiv
or
cmp
test
imul
xchg
shlb
mov
jl
or
pusha
and
cmp
push
push
and
popa
lea
mov
repz
in
filds
pop
cmp
lcall
mov
push
sbb
addr16
movsb
js
jo
dec
pushf
or
das
lds
push
mov
jmp
es
inc
filds
rorb
lret
mov
pop
decb
repnz
mov
pop
dec
push
cld
nop
sbb
das
mov
mov
lret
outsb
mov
sahf
ret
shrl
stos
xor
inc
call
gs
out
mov
jbe
or
std
sarb
stos
mov
fldln2
pop
negl
fisttps
scas
dec
adc
rcrb
jnp
mov
scas
and
or
xchg
in
mov
xchg
dec
stos
adc
adc
xchg
bound
cli
add
mov
dec
fwait
punpcklwd
sbb
jmp
imul
mov
call
jne
dec
jmp
ljmp
sbb
stc
ljmp
jb
dec
test
cltd
push
jns
fwait
sbbb
add
sahf
or
push
sti
outsb
push
and
into
das
pushf
jb
rclb
outsb
cmpsl
daa
jbe
stos
sub
js
in
and
sbb
sbb
les
sub
cli
jecxz
jno
mov
test
ret
cmp
jp
or
imul
mov
in
mov
jge
push
inc
andl
inc
xchg
xchg
stos
popa
test
cltd
daa
lds
mov
iret
mov
push
cmpl
rclb
dec
inc
xchg
cmp
fadd
mov
push
outsb
xchg
pop
add
jge
mov
scas
rclb
xor
lahf
int
sbbb
inc
sub
pop
lahf
xchg
sbb
pop
or
pop
sahf
add
into
push
iret
jle
pushl
daa
xor
flds
mov
sbb
loope
fldcw
cmp
aad
pop
mov
mov
jb
and
lock
add
add
pushl
push
das
push
dec
popf
leave
xor
lods
rolb
pusha
push
ffreep
fs
adc
cli
fs
mov
test
addr16
frstpm(287
dec
mov
mov
xchg
push
and
lret
mov
in
in
idivb
dec
dec
aam
adc
pop
sub
jle
or
mov
cmp
clc
adc
lock
ljmp
pushf
stc
sbb
jne
outsb
and
mov
cmpsb
mov
xchg
cmpb
mov
movzbl
or
mov
adcl
shrd
addl
mov
mov
xor
xorl
shr
sbb
mov
mov
xor
or
addl
shl
sub
mov
mov
cmp
mov
movl
jg
sub
mov
and
mov
subl
shrd
addl
mov
movzwl
xor
mov
mov
xor
xorl
shl
xor
or
xorl
shr
xor
mov
mov
mov
addl
mov
xorl
shrd
shr
cmpl
mov
mov
jmp
mov
jge
push
push
call
mov
adc
movl
and
and
mov
mov
mov
sub
imul
mov
mov
xor
xor
or
shl
imul
sub
jmp
mov
mov
shrd
mov
mov
xor
shl
xor
or
shr
mov
mov
mov
mov
shrd
shr
mov
mov
mov
xor
xor
or
shl
add
add
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
movl
mov
mov
movl
mov
movl
mov
movl
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
lea
mov
mov
mov
shrd
shr
mov
mov
shl
mov
xor
xor
or
mov
mov
xor
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
lea
mov
mov
mov
shrd
shr
mov
mov
shl
mov
xor
xor
or
mov
mov
or
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
lea
mov
mov
mov
shrd
shr
mov
mov
xor
shl
mov
xor
or
mov
mov
add
jmp
lock
cmp
mov
jae
test
mov
push
push
sub
push
push
shlb
jo
lods
add
lods
gs
and
or
pop
mov
pop
aaa
adc
pop
pop
pop
fsubrs
push
loopne
loop
dec
or
mov
dec
imul
dec
xchg
or
and
inc
adc
ss
push
ror
add
mov
in
lods
outsl
sbb
sahf
arpl
sub
fwait
adc
cmpl
sti
enter
push
push
push
adc
rdtsc
dec
lds
stc
in
pop
aam
hlt
fisubrs
out
sbb
clc
dec
push
mov
pop
mov
mov
push
jp
jg
mov
dec
aaa
push
out
inc
mov
bound
adc
jmp
sbb
mov
dec
lret
rorl
pop
jne
or
adc
out
mov
sarb
enter
call
rol
xchg
xchg
pop
mov
jp
jge
ss
sub
notb
and
fisttpll
push
push
mov
insb
scas
iret
mov
jp
or
rcrl
mov
insb
hlt
sub
loop
aas
jae
dec
jae
push
adc
sbb
lock
fbstp
inc
cltd
sbb
and
dec
xchg
bound
push
in
sub
cwtl
scas
mov
mov
or
ret
jmp
cmpsb
pushf
mov
jmp
cmp
repnz
fmull
cmp
iret
sbb
aaa
jecxz
jmp
mov
idivl
jnp
push
popa
jmp
mov
fnsave
cmp
sbb
adc
loope
push
fisubs
xchg
fisubs
inc
jecxz
cmp
sbb
add
jae
dec
mov
cmp
rolb
in
sti
sub
inc
sbb
or
lods
cmp
jp
fnstsw
lods
add
repz
jmp
jecxz
inc
mov
mov
jmp
in
pop
push
ficoms
push
push
mov
mov
shrb
pop
or
pushf
xchg
inc
push
popa
dec
inc
inc
mov
pop
adc
inc
movsl
pusha
jo
loop
adc
mov
test
scas
pop
mov
sbb
mov
sahf
sbb
mov
mov
mov
jne
mov
clc
scas
iret
in
mov
cmpb
cmp
outsl
les
scas
push
xlat
jo
sbb
mov
fsubr
call
jo
or
sbb
daa
cli
xchg
sbb
xorb
jmp
add
sub
xor
push
pop
jb
dec
cs
aas
int
jg
sbb
orb
pushf
mov
inc
inc
cld
xchg
sbb
popf
sbb
sbb
inc
or
jae
ljmp
lock
sub
movsl
movsb
inc
fistpll
imul
insb
pop
or
sbb
jae
aam
or
dec
push
iret
test
dec
es
aas
inc
pop
pop
adc
sahf
push
stos
scas
les
dec
sub
sbb
xchg
int3
jo
dec
inc
fsubrs
incb
add
dec
cmp
sbb
mov
repz
flds
negl
addr16
add
aas
lahf
pusha
lods
push
rcrb
sarb
fucomi
push
in
jnp
adc
inc
in
inc
stos
jmp
push
pusha
call
fwait
iret
push
stc
mov
lock
xor
jo
into
sub
cld
and
je
clc
xchg
inc
adc
inc
jae
push
pop
dec
sub
shrl
sbb
mov
in
add
push
push
out
pushf
lcall
popf
sbbl
pandn
jo
les
mov
mov
push
loopne
dec
cmp
mov
mov
gs
push
xor
in
andl
dec
sahf
outsb
dec
xor
test
cmpsl
shlb
add
sbb
nop
pusha
cltd
adc
js
cmp
imul
mov
xchg
cmp
adc
pop
ja
lahf
adc
mov
dec
mov
pusha
add
mov
outsl
mov
addr16
sub
invd
add
cmpsl
mov
neg
push
pusha
cmp
out
pusha
cmp
ljmp
dec
sahf
mov
outsb
push
pushf
sahf
sub
in
pop
ljmp
ret
js
inc
notl
stc
popf
jae
mov
mov
pushf
adc
gs
mov
sbb
outsb
cs
jp
into
or
sbb
sub
jle
mov
jge
xchg
sbbl
jne
xchg
dec
fsubs
or
jg
stos
int
sbb
xchg
scas
jmp
adc
clc
sub
sbb
xchg
pop
pop
stos
add
in
cmp
pop
orb
mov
cmp
ja
arpl
in
mov
jbe
pusha
add
xorb
cltd
push
fcomps
lods
adc
pop
cmc
in
orps
in
ss
push
cmpsl
dec
pop
arpl
inc
xor
push
mov
xchg
push
xchg
adc
sarb
push
inc
enter
mov
mov
rcrb
lret
aas
add
fldt
imul
movsl
vandps
test
mov
mov
add
sub
cmp
addr16
js
and
leave
push
sti
int
aad
lds
sbb
xchg
mov
addr16
ljmp
mov
jb
mov
movsl
ss
cli
imull
cmp
and
fptan
add
adc
in
in
repnz
sub
loope
es
stos
test
jnp
jle
fadd
scas
and
mov
roll
cwtl
dec
jge
subb
fdivl
push
call
xchg
cmp
lods
inc
inc
xchg
dec
mov
loopne
out
dec
imul
jmp
push
adc
in
sti
bound
jae
cs
imul
inc
shll
cmp
fucomip
sub
mov
sahf
fadds
loope
pop
or
nop
or
inc
test
pop
ja
dec
hlt
xorps
mov
lods
fs
xor
jp
scas
push
add
fadds
adc
mov
push
pop
push
outsb
cmpsb
or
push
daa
jne
loope
xchg
mov
jp
dec
dec
jg
popa
dec
dec
fisttpll
mov
inc
fcmovnb
lea
mov
pop
stos
mov
push
popa
loope
dec
pop
jo
xchg
int
xchg
mov
imul
out
xor
cmpb
xchg
adc
lods
div
inc
lods
sbb
in
vmread
out
xor
mov
test
dec
pushf
push
inc
dec
xor
les
pusha
mov
push
xchg
and
or
xor
insl
jae
lret
inc
lock
cmp
fidivrs
adc
notb
call
mov
dec
inc
cmp
sub
je
or
fisttpl
push
pop
fimuls
rclb
dec
inc
push
popa
jl
ja
lods
fisubrl
mov
mov
addr16
data16
sti
cmp
sbb
jno
xor
mov
fbstp
faddl
daa
fldt
xchg
jnp
mov
les
ror
insb
ja
std
fxtract
int3
cmp
mov
mov
sbb
aad
jne
mov
std
mov
pop
outsl
sub
pop
mov
cmp
push
repnz
mov
push
or
push
mov
mov
mov
dec
pusha
addr16
jne
cli
push
out
mov
in
out
mov
xchg
ffree
inc
jae
mov
fwait
sbb
daa
pop
pop
jno
cld
inc
jge
movsb
sbb
push
ret
insl
xchg
or
pop
mov
stos
fs
lods
jo
fs
es
imul
test
mov
mov
cwtl
cmp
decb
add
jl
outsl
or
sbb
mov
daa
jmp
dec
xor
into
test
dec
lahf
in
adcb
push
cmc
jo
pop
sub
mov
test
adc
jo
cmp
leave
pop
add
sub
fs
xor
push
frstor
xchg
jmp
jb
mov
mov
mov
fwait
dec
lock
lock
scas
xorl
adc
mov
in
xchg
push
sub
dec
xor
jmp
dec
mov
push
mov
ds
jae
xchg
dec
addr16
incb
jg
adc
jnp
inc
pop
dec
push
pop
repz
loope
add
notl
mov
movsb
imul
adc
dec
out
shlb
cmpsb
outsb
sub
aam
jp
rcrl
cmpsl
mov
adc
idivl
mov
sbb
add
test
test
dec
and
loope
lods
fidivrs
aaa
mov
fldt
adc
hlt
ss
inc
push
cwtl
dec
call
lahf
mov
cli
push
sbb
aaa
jmp
sub
cmp
and
shll
cmp
push
addr16
jge
mov
cmp
jo
pop
jae
ret
jmp
pusha
lock
sbb
sub
movsb
adc
mov
andb
mov
push
shr
fs
es
jno
jno
sub
xorl
or
int
xchg
mov
cmp
imul
cmp
dec
das
adc
arpl
and
dec
jae
test
imul
jne
jns
sub
push
mov
roll
lea
mov
dec
call
push
lahf
rclb
pop
scas
or
or
inc
aaa
fldl
mov
ret
das
in
sar
loopne
xchg
cmpsl
pop
jnp
enter
add
subb
pop
ds
je
sub
movsb
mov
hlt
jle
stos
push
mov
pop
pop
adc
insb
push
ljmpw
xor
mov
mov
add
fcomps
pop
es
fldt
pusha
out
out
jno
inc
jp
lahf
inc
mulb
add
insl
hlt
xor
insb
xor
jno
in
js
mov
add
jecxz
cmp
lcall
fsubrl
imul
into
aad
add
mov
aas
xor
jp
push
cmp
xlat
push
jnp
jmp
add
ja
sti
je
sub
cmpsb
inc
out
sub
add
and
stos
dec
dec
jge
fisubs
lcall
or
jb
and
mov
shl
and
aaa
cmp
in
into
sbb
pop
out
repnz
push
pop
popa
aas
mov
pop
loopne
sub
and
fstl
dec
leave
ljmp
push
mov
pusha
xor
adcl
popl
outsl
in
fcomps
js
test
push
out
push
push
cmpsl
pop
lea
inc
jl
hlt
insl
idiv
mov
mov
xchg
add
cmp
cmp
ja
addl
into
mov
push
inc
rdmsr
cli
lea
adc
rcrl
idivb
aad
pop
mov
cmp
mov
pushf
aam
test
sbb
rcrb
or
lcall
rcl
xchg
outsb
sbb
jae
cmp
sarl
arpl
jae
sbb
imull
pop
xchg
test
outsl
and
pop
mov
xor
xchg
jae
in
and
and
push
mov
popf
lret
rol
in
in
jecxz
mov
jns
divb
lock
cwtl
add
stc
push
outsl
xchg
cmpsb
xor
push
inc
mov
push
pop
pop
loope
pushf
push
sarl
push
mov
mov
sbb
jns
mov
adc
mov
pop
cmp
inc
movsb
cmp
ja
cmp
push
loope
adcb
inc
clc
lds
xchg
lcall
out
imul
lea
in
adc
push
scas
pop
divl
jle
stos
inc
mov
sarb
ljmp
mov
cmpsb
cwtl
mov
cld
je
jle
mov
mov
xchg
insb
nop
mov
rcrl
inc
fwait
leave
adc
in
add
rcrb
mov
pop
and
cmpsl
xlat
cmc
xor
fcmovnbe
ja
out
sbb
mov
xchg
jl
orb
or
or
or
mov
mov
inc
push
std
or
lcall
rclb
stos
push
push
fcmove
sbb
cmp
jl
jnp
mov
mov
push
cmp
in
ret
stos
add
xor
shll
xlat
stos
lock
js
inc
ds
adc
stos
add
xor
push
cmpsb
add
arpl
out
jmp
mov
add
sbb
sub
xor
pop
sbb
cld
pusha
mov
lock
sbb
lods
pop
int
mov
and
dec
mov
fistl
sbb
cmp
mov
mov
mov
mov
shll
cmp
push
andb
movsl
in
loopne
idivb
inc
js
and
out
ja
int3
xchg
push
sub
pusha
pop
add
jbe
test
mov
mov
es
mov
push
lcall
xor
add
adc
aaa
dec
mov
das
mov
inc
in
imul
iret
imul
in
test
sub
gs
cmp
stc
cmp
push
fsubrl
addr16
arpl
negb
mov
mov
std
int
leave
cmp
movsb
mov
pop
push
lret
aaa
pop
outsb
mov
ds
dec
dec
das
jmp
push
push
lds
jno
xor
xlat
xchg
pop
negb
jmp
subb
sub
rclb
jae
shlb
cmpsl
mov
mov
nop
inc
vmulps
stos
or
inc
inc
shll
pop
cmp
pop
push
stc
stos
std
test
sahf
and
sahf
lock
pop
imul
fldcw
sbb
inc
stc
out
test
fcoms
les
jno
push
stc
mov
shrb
sbb
add
cs
jmp
clc
mov
iret
in
inc
or
in
inc
push
rcr
adc
mov
hlt
clts
lahf
scas
popa
pop
fnstcw
add
xchg
rcl
lds
movsl
add
mov
and
dec
adc
jne
cmp
idivl
aaa
or
dec
fisubrl
jle
sub
in
sbb
pushf
pop
push
test
orb
rcrl
pop
xchg
and
dec
out
dec
in
das
mov
mov
pushf
xchg
or
imul
shrl
nop
dec
cmp
mov
popa
inc
bound
adc
shll
adc
nop
out
dec
mov
aad
cmp
inc
in
incb
fildl
sbb
lea
lret
loope
pushf
sub
mov
xchg
pop
out
ja
xchg
movsb
or
lret
adc
in
call
push
pop
xchg
adc
sub
mov
jnp
jns
fstpt
push
mov
nop
movsl
xchg
or
lret
cmpsb
outsb
arpl
or
inc
inc
inc
and
mov
xchg
pop
and
dec
add
push
mov
sub
jns
xor
int
insl
inc
int3
pusha
outsl
dec
popf
pop
mov
in
popa
push
fwait
xchg
push
jmp
push
lods
popa
pop
cmp
cmp
adc
jo
sbb
fs
icebp
lea
in
jge
add
mov
scas
mov
fcomp
loope
dec
lret
cmp
insb
pop
jge
inc
test
mov
loop
xchg
divl
jl
jo
or
and
pop
jbe
movsl
xlat
jno
cmp
popf
into
lea
fcompl
js
jmp
xor
pop
xor
aam
lret
mov
into
jo
gs
insb
divb
cltd
mov
js
dec
cmp
pop
dec
or
clc
rcll
dec
xchg
lahf
cmp
inc
lret
std
sub
popf
push
mov
sbb
push
iret
cmp
cwtl
jle
cmp
pop
cmpsl
repz
fsubrp
shll
pop
rcrl
daa
pusha
mov
cmpsb
push
sub
int3
lock
int
in
jg
pop
inc
mov
jmp
pop
sub
add
jp
xlat
sahf
cmpsl
or
mov
mov
mov
mov
mov
pop
jae
lahf
imul
inc
ds
ds
rclb
repz
jecxz
or
mov
push
mov
in
test
add
fdivrp
lret
gs
cltd
aaa
insl
or
xchg
aas
push
les
sbb
enter
push
dec
popf
mov
fldl
pop
lds
add
mov
out
mov
cwtl
outsl
mov
jecxz
adc
aaa
mov
aam
gs
fimuls
push
cmpsb
xor
in
xchg
and
pusha
inc
out
mov
xchg
es
push
arpl
dec
into
enter
shll
cmp
inc
mov
mov
repnz
int3
divb
inc
cmc
xor
inc
or
test
aaa
test
lahf
and
push
mov
add
pop
push
xor
jl
icebp
dec
mov
in
outsl
or
clc
jne
es
sarl
movsb
aad
xchg
xchg
jp
addb
xor
test
int
cs
es
int
push
insl
add
cmp
lods
sbb
mov
imul
lret
lret
pop
xor
inc
fnstsw
xlat
ss
cmpsl
psllq
mov
mov
jp
cmp
sub
ret
mov
lods
inc
mov
cmp
inc
scas
adc
jnp
dec
or
sub
nop
jl
or
iret
add
jae
rolb
fists
aas
pop
cld
mov
pop
aad
ja
jne
test
fldl
jmp
mov
fisubrs
jmp
stc
cmp
lret
mov
cmpsl
xor
mov
pop
lahf
stos
dec
inc
into
rolb
mov
add
cmp
jecxz
sbb
out
mov
jno
adc
push
jnp
cmp
repnz
out
or
push
pop
cld
push
cld
in
in
adc
xor
push
outsl
mov
cmc
mov
in
pop
mov
jle
mov
in
sbb
mov
outsl
mov
test
cmp
js
repz
lahf
loope
xchg
fnstsw
ja
jmp
test
test
cli
or
test
jg
mov
pop
stc
lock
inc
adc
fdivrs
repz
xchg
pop
imul
ror
arpl
mov
and
adc
or
lds
sbb
test
out
ds
cli
ljmp
pop
and
sub
sti
jae
mov
leave
loope
cmp
icebp
das
sub
jecxz
xchg
mov
out
popf
std
pop
fistps
adc
lods
cmp
jbe
daa
sbb
sub
insl
cmpsl
mov
nop
dec
sub
pop
push
push
shll
pop
mov
test
inc
xchg
inc
cmp
sub
pushf
popf
xchg
scas
xor
je
imul
lods
cmp
fadd
mov
insl
sub
jo
dec
cmp
cmp
push
dec
push
scas
jns
divl
jge
dec
xor
mov
dec
subl
aas
ret
popa
lods
loopne
or
push
loop
and
std
aam
mov
cmpsl
mov
mov
es
insl
int3
lret
mov
pop
out
fsub
test
inc
cmp
jg
adc
xchg
xchg
cmp
mov
daa
sbb
cltd
cwtl
xchg
adc
pop
mov
xchg
dec
mov
movsb
cmp
push
or
and
add
sbbb
adc
or
fstpt
xchg
pop
cmp
jg
aam
xchg
jl
push
or
or
adc
pop
adcb
ds
mov
out
inc
jp
cld
adc
inc
cmpsb
xor
stos
xrelease
int
sbb
xor
loope
fdivrs
lahf
js
stc
int
mov
orl
mov
or
mov
and
xor
pushf
pop
mov
rolb
and
or
add
sbb
rcrl
loop
push
aas
lahf
pop
pop
or
adc
inc
push
aaa
arpl
ss
pop
push
xor
into
test
or
scas
push
push
mull
pop
call
mov
xchg
dec
push
sbb
cmpsl
or
lock
dec
jae
sbb
mov
rcll
icebp
adc
scas
inc
dec
mov
int3
imul
dec
aad
arpl
add
mov
es
js
test
sti
cmpsb
push
cmp
cmpb
movb
fwait
outsl
pop
mov
sbb
fsubl
mov
adc
cs
or
cmpsb
xchg
cwtl
cmpsl
add
and
jmp
or
das
in
out
jl
push
mov
lods
sbb
adc
sub
test
jge
nop
fcmovb
shll
mov
stos
inc
xchg
test
imul
popf
push
push
adc
stos
cli
mov
popf
ret
xchg
fstpt
cmpsl
aam
jbe
sub
add
sub
adc
pop
lock
dec
mov
aam
insl
cmpsb
push
push
cmp
test
das
dec
lret
cmp
pop
stos
mov
leave
loopne
mov
xor
add
lahf
add
jmp
cmp
mov
add
add
pop
inc
andb
sbb
lret
jecxz
loope
mov
outsl
loopne
xchg
sbb
jo
dec
mov
jo
jnp
fdivrl
xchg
rclb
std
or
mov
sbb
sarb
sbb
push
out
mov
jp
int
loop
lahf
cld
mov
iret
push
jg
dec
jecxz
and
aaa
mov
cmp
sbb
mov
adc
ds
repnz
stos
int3
xchg
scas
out
cmp
fwait
mov
cmpsl
test
jo
stos
adc
jge
and
push
cld
insb
lcall
mov
shll
and
add
inc
xchg
add
mov
and
cmpb
xchg
dec
repz
daa
ficompl
jns
cmp
adc
cld
push
add
mov
shlb
xchg
lds
adc
fsubrl
adc
pop
cvtps2pi
dec
or
test
sbb
scas
test
cmpsl
push
lret
push
test
pop
cmp
and
hlt
mov
ljmp
repz
mov
sub
insb
lcall
outsl
cmc
pop
ljmp
fistps
loopne
das
adc
pop
sub
fucomi
cmp
mov
adc
js
js
mov
mov
xchg
sub
sbb
mov
lods
adc
popa
int
pop
test
rolb
popa
ljmp
call
mov
mov
sbb
pop
mov
cmp
and
fstps
repz
addr16
in
jae
movsb
jo
cwtl
push
push
xor
out
cmp
ret
pop
test
dec
sub
sub
inc
mov
fldenv
pop
repnz
mov
ret
lcall
adc
sub
ffreep
sub
insb
cmp
arpl
mov
aas
cmp
cmpsb
popf
bound
add
mov
fsubp
mov
icebp
push
loope
out
adc
dec
mov
mov
dec
inc
add
push
faddl
repnz
lret
inc
pop
mov
lods
outsb
push
scas
sarb
aas
stos
or
scas
setl
mov
cltd
xlat
mov
jle
sub
mov
mov
mov
or
lock
push
andb
inc
dec
sbb
dec
mov
and
std
inc
fsts
outsl
adc
pop
mov
inc
movsb
or
aas
or
fwait
je
in
icebp
inc
scas
pop
cmp
and
outsl
pop
jmp
lods
xchg
xor
pushf
in
mov
xlat
nop
jl
push
push
adc
fadds
mov
pop
add
in
fiadds
sbb
push
adc
int
lea
test
pop
subb
outsl
xor
cmp
adc
inc
popf
les
scas
sub
pop
out
test
aaa
and
test
loope
shlb
iret
mov
into
rol
addr16
adc
xor
push
loope
and
pop
cs
outsb
scas
notb
fsts
dec
out
inc
imul
xor
mov
sbb
push
fldcw
pop
daa
add
mov
dec
cwtl
aam
ja
call
in
mov
jecxz
pop
ljmp
lret
sbb
out
scas
push
fidivl
mov
lcall
mov
lock
inc
adc
dec
and
ljmp
mov
sbb
cmp
mov
aas
sub
pop
in
out
inc
cmc
int3
jae
jbe
jns
outsb
fisttpll
idivl
sub
scas
mov
bound
addr16
and
jecxz
and
leave
repnz
daa
add
into
mov
xchg
data16
push
ficoml
sub
lahf
cmpsb
mov
and
jmp
jg
fsincos
pusha
ret
test
mov
add
enter
ds
cld
sbb
fmull
cmp
jl
push
xchg
shll
pop
xchg
inc
ss
scas
in
js
mov
pop
test
f2xm1
lret
hlt
out
icebp
pushf
push
push
mov
clc
repz
mov
jo
xchg
leave
xor
jae
mov
xchg
mov
dec
je
test
add
ds
sahf
sbb
add
jl
les
or
mov
ss
aam
push
jle
sub
cmpsb
nop
mov
hlt
mov
bound
fwait
icebp
movsb
adc
cld
push
push
xlat
addb
or
arpl
js
jbe
push
sub
sbb
stos
xor
mov
pop
mov
dec
ficoms
mov
cld
jne
xchg
push
imul
mov
cmc
push
js
xchg
jp
inc
fwait
lods
dec
cli
xchg
adc
cmpb
sbb
sahf
and
enter
push
test
out
into
aaa
stc
mov
push
ja
mov
mov
aaa
dec
je
add
in
test
mov
xchg
inc
xor
scas
call
imul
les
and
cmp
pop
jns
inc
push
insb
test
pop
scas
add
push
sarb
push
dec
cs
es
sub
dec
push
pushf
clc
or
repnz
shrl
pushf
fld
jecxz
enter
add
outsl
imul
sbb
fnstenv
add
mov
pop
jo
fwait
push
fmull
inc
jp
loop
jno
mov
xor
mov
outsl
sub
mul
ret
pop
jbe
fldt
out
dec
mov
lret
in
int3
iret
push
xchg
mov
pop
test
stc
daa
jmp
fucomip
inc
mov
repz
repnz
jge
dec
push
lea
dec
jne
mov
les
cltd
loop
pop
and
es
inc
roll
dec
in
xchg
or
dec
push
sub
testb
cmp
in
add
fld
cmp
pusha
mov
xchg
call
or
pop
pop
mov
outsb
idiv
adc
pop
mov
fdivl
outsb
test
fwait
lret
mov
test
stc
add
push
add
adc
cld
mov
test
or
xlat
lret
fs
xchg
inc
mov
out
mov
push
push
mov
stos
cwtl
das
mov
aad
fdivs
inc
inc
andl
push
test
add
cltd
mov
inc
push
nop
adc
jg
pop
inc
xor
movsl
lcall
dec
mov
jnp
ds
not
or
cmp
mov
inc
push
mov
and
add
mov
mov
out
sbb
mov
aam
repz
mov
cs
testl
adc
pop
test
pop
test
xchg
pushf
movsl
ss
xchg
and
xchg
push
fnstenv
mov
jbe
movsl
test
repnz
lahf
cld
xor
mov
jmp
js
push
mull
push
das
cli
mov
inc
jecxz
push
icebp
icebp
mov
dec
mov
out
gs
sub
cmc
fldcw
xor
mov
push
xor
cwtl
jb
ss
mov
pop
mov
add
rclb
cmpsb
jmp
pusha
sbb
test
lock
addl
ja
xor
aam
insl
rorb
test
pop
frstor
and
xchg
mov
je
jp
pop
adc
popf
movsb
mov
movsb
and
mov
gs
jae
sbb
sti
mov
push
mov
out
dec
sub
sub
lds
cwtl
sub
loope
test
and
mov
adcl
inc
arpl
adc
repz
add
xor
punpckhdq
fdivl
sub
imulb
mov
mov
shrd
shr
mov
mov
xor
xor
or
lea
mov
mov
shl
mov
shrd
shr
mov
mov
xor
xor
or
mov
shl
mov
mov
mov
or
jmp
push
cli
imul
inc
iret
adc
xchg
dec
pop
mov
lret
sub
push
push
inc
fcmovnu
out
dec
mov
test
insb
push
hlt
je
pop
test
das
or
std
mov
cmp
fidivrl
es
inc
lods
sub
ret
into
xor
sub
pop
cmp
mov
add
out
clc
xchg
imul
mov
sub
fcoml
add
mov
outsb
das
cmpsb
add
push
sub
shll
sub
aas
lcall
pop
push
loopne
jl
inc
leave
xchg
xor
jmp
cmc
adc
call
imul
mov
pop
push
xor
mov
add
out
adc
shr
and
jne
je
inc
mov
push
nop
fsubrs
loop
roll
vphaddbq
add
push
fcmovnu
mov
decl
push
mov
lock
xor
arpl
jge
dec
xor
cmpsl
cli
push
clc
lea
iret
push
in
and
aam
push
aad
adc
sub
and
lods
aaa
dec
pop
jmp
das
fildl
pop
pushl
es
and
sbb
divl
pop
test
clc
ret
loopne
lock
jns
sub
ret
hlt
jo
or
insb
mov
pop
and
or
cwtl
and
jnp
fwait
push
ds
adc
or
mov
sbb
xchg
lock
sarl
loopne
lods
or
cmp
mov
lock
sbb
mov
jecxz
jns
jge
inc
out
sbb
and
jae
imul
or
pop
jp
mov
test
pusha
push
or
dec
mov
ret
add
fistpll
aad
jle
or
jbe
shl
mov
cmp
xor
fbld
mov
add
sbb
sbb
scas
outsb
std
mov
stc
shrl
mov
cmpsb
sub
dec
inc
and
rcrb
and
mov
add
test
popf
out
dec
shll
into
sub
jle
adc
in
test
sub
xchg
mov
addb
bound
mov
rcrl
sbb
or
push
rcll
sub
sti
push
or
adc
lea
jno
inc
scas
out
jge
jnp
sahf
jg
mov
pop
test
xacquire
or
icebp
mov
cmp
jge
cwtl
mov
sbb
lods
add
leave
out
sarb
xor
inc
test
cltd
jns
jo
jge
cmp
test
inc
push
cmp
sbbb
pop
xor
xor
repz
ret
mov
jmp
bound
js
es
pop
out
xchg
sarl
xchg
and
out
sbb
fmuls
add
push
mov
stc
dec
int
xchg
push
pop
cmp
cmpsb
mov
sbb
mov
lea
mov
or
mov
sub
xchg
xor
jecxz
shrb
loope
mov
sub
or
and
jns
jmp
daa
movsb
xchg
inc
mov
pushf
push
push
adc
pop
jb
popf
or
cmpb
sub
xchg
inc
pop
aam
jmp
cltd
fs
movsl
mov
pop
inc
and
sub
test
incl
std
je
push
popa
jnp
xor
push
xchg
hlt
test
jne
insl
ret
sbb
mov
inc
lods
mov
inc
ds
or
push
sub
ljmp
fwait
sbb
jb
inc
jae
sbb
sub
in
stc
push
out
mov
push
jbe
adc
and
ret
or
icebp
sbb
test
pop
mov
cmpsl
stos
jg
jl
push
inc
das
call
sbb
add
lods
push
xchg
aam
inc
pop
or
inc
mov
ds
loope
dec
push
lods
jno
out
push
test
push
and
xchg
add
pop
sbb
sti
ja
xchg
ret
insl
mov
pushf
ss
scas
xchg
cmp
scas
inc
push
repnz
adc
loopne
mov
stc
and
dec
jl
or
push
popf
xchg
jbe
jno
lea
or
jp
mov
cmp
lcall
out
sahf
lahf
imul
xor
out
aaa
lea
sbb
cmp
or
shlb
pushf
cmp
into
icebp
dec
dec
inc
sbb
xchg
pop
test
enter
repz
icebp
push
leave
div
sbb
add
arpl
jg
popa
or
inc
mov
lret
lret
ret
cmp
popf
int3
pop
mov
rolb
or
int
lds
test
or
addl
imul
leave
mov
pop
jp
std
inc
outsl
xchg
push
pusha
pop
ret
lret
add
cld
mov
pop
push
setl
insb
lock
mov
lods
sub
pushf
xor
mov
loope
pop
mov
dec
mov
mov
scas
rorl
push
movsl
xor
in
shll
cmpb
sti
and
xchg
jge
movsl
or
addr16
dec
jno
sarl
push
add
mov
test
mov
inc
loop
adc
xchg
daa
loop
or
cmpsb
ds
inc
insl
fucomi
mov
test
push
pop
adc
daa
data16
mov
inc
dec
scas
jo
fwait
push
mov
les
sbb
and
stos
xor
add
mov
and
inc
mov
jae
and
jb
daa
jns
outsl
xchg
cmp
sub
in
and
add
jb
rol
jnp
jnp
pop
data16
jg
adc
mov
cmpsb
sahf
mov
fsubrl
stos
jne
sub
xchg
movsb
sarl
cli
pop
add
rorb
sub
or
mov
xor
dec
sbb
cmpl
fstpl
dec
movnti
sbb
in
out
cmc
adc
insl
and
xchg
mov
adc
add
bswap
movsl
push
jno
xchg
ds
and
mov
push
dec
ja
add
jns
jg
mov
xchg
nop
xor
lds
push
sub
dec
xchg
mov
sub
pop
lcall
data16
lea
into
xchg
sbb
sarl
and
fimuls
in
jl
xchg
pop
cli
rep
mov
jecxz
xchg
jbe
test
and
clc
lahf
pop
dec
andl
or
in
sahf
mov
push
push
divb
addb
mov
add
dec
es
out
enter
or
in
pop
in
inc
movsl
push
mov
insb
add
repz
shlb
push
gs
popf
xor
outsl
imul
xchg
pop
lock
pushf
inc
iret
mov
sbb
push
test
scas
cmp
push
lds
leave
dec
gs
xchg
fwait
shl
mov
dec
mov
aad
adc
cwtl
stos
or
pop
bound
lock
mov
out
push
lods
cmpsl
sub
test
or
cmp
hlt
es
test
imul
xchg
icebp
inc
push
pandn
jae
push
jmp
ficoms
daa
pop
push
and
xchg
xchg
out
insl
sti
mov
xor
dec
push
adc
or
loop
out
arpl
stos
inc
dec
popa
jns
fldenv
jecxz
aaa
mov
push
data16
and
pusha
dec
xor
movsl
incb
mov
rcll
jne
inc
ftst
jo
cwtl
jecxz
xchg
cmpsb
loopne
sub
stos
lea
jne
insb
adc
movsb
lods
out
in
xor
mov
fnstenv
fsubs
push
jnp
mov
aas
jmp
mov
dec
mov
mov
push
dec
sbb
dec
popa
adc
mov
sub
gs
lcall
fmull
bound
push
nop
in
daa
icebp
lret
js
repz
xor
cltd
icebp
test
jae
mov
cmp
movzbl
pop
lea
xchg
mov
pop
xchg
nop
insl
push
sub
insl
cli
mov
cmpsl
dec
ja
dec
push
movsb
lods
mov
gs
sti
and
mov
mov
push
sub
sbb
lods
mov
fimull
or
int
test
push
and
adc
lcall
cmpsb
js
insb
mov
xchg
movsl
fwait
cmc
repz
jge
add
mov
dec
test
jbe
xchg
mov
cmp
das
dec
and
mov
dec
iret
rcr
out
jno
pop
lcall
mov
pop
aas
jnp
js
sbb
pop
sbb
ljmp
rolb
and
add
xchg
jo
loopne
aaa
ficoms
outsl
int3
xchg
sbb
pushf
enter
add
mov
jecxz
dec
dec
sub
fs
inc
aad
dec
push
mov
add
ss
pop
stos
mov
mov
sub
or
lea
jmp
dec
into
adc
xor
and
sbb
dec
xorl
repnz
dec
dec
jp
ds
stos
inc
imul
dec
in
mov
fsts
dec
int3
lock
xchg
js
add
ja
les
aaa
rclb
stc
fldcw
hlt
leave
inc
scas
roll
adcl
jnp
data16
loop
sub
mov
push
lock
fcompl
ret
add
shrb
stos
fcomip
mov
jecxz
cmpsb
mov
mov
xchg
jno
xchg
cli
xchg
sbb
mov
orb
mov
movsb
hlt
stos
fcompl
std
pushf
int
gs
adc
jmp
cmpsb
fwait
jp
xor
jecxz
inc
rolb
sar
inc
pusha
push
lcall
xchg
insl
mov
or
or
xchg
xor
loop
xor
add
mov
leave
xor
pop
inc
mov
push
adc
ret
mov
stos
dec
aad
xchg
adc
adc
cltd
mov
cmp
push
and
imul
xchg
insl
add
inc
ja
add
fisttpl
js
dec
push
mov
insl
jl
mov
push
add
in
aaa
cmpb
and
arpl
out
inc
or
jb
cmp
outsl
rorb
fildl
mov
dec
arpl
and
test
push
mov
lods
dec
ljmp
das
pop
mov
push
dec
pop
movsb
repnz
and
in
adc
xchg
call
fmull
adc
mov
idiv
mov
mov
push
mov
xchg
aaa
mov
in
dec
sbb
cld
ljmp
test
movsb
jns
jnp
and
or
cmc
aas
jae
ss
push
sub
add
push
jnp
dec
mov
push
lods
push
mov
mov
pushf
pop
ljmp
test
inc
mov
sahf
filds
scas
pop
loopne
inc
sbb
bound
jmp
test
cmp
fwait
insl
btsl
daa
sub
test
mov
ret
mov
ja
and
inc
scas
jle
sbb
out
adc
clc
pop
sub
xchg
jg
insl
mov
bound
add
int
dec
push
xor
test
inc
cmpsl
cmp
hlt
js
jns
xchg
cmpsl
xor
call
aad
sub
pushf
jp
jp
fidivs
jbe
sub
out
arpl
out
loope
add
push
into
aaa
out
shlb
bnd
sbb
pop
jp
daa
fists
outsl
dec
fistpl
ret
sub
xchg
add
insl
add
jp
mov
add
les
es
aas
lret
pusha
sub
pop
loope
xor
pushf
push
mov
cmc
or
mov
icebp
xor
cmp
push
cmp
jo
mov
in
in
and
divb
enter
jae
rclb
cmpsb
lock
adc
loop
xchg
orb
sahf
mov
icebp
sub
xchg
stos
loopne
sbb
pop
add
jmp
dec
push
push
cmp
push
inc
dec
dec
ret
int
or
mov
jmp
mov
in
scas
cmc
inc
and
movlps
jge
mov
addl
fs
jmp
push
aam
in
int3
cmpsl
jo
aad
stos
sub
mov
or
out
xchg
mov
xlat
pop
jg
das
jecxz
xor
or
out
push
lods
fnsave
or
jmp
mov
xor
dec
dec
icebp
rorb
or
jns
in
iret
push
stos
mov
popa
cmp
fcos
stc
xchg
mov
iret
and
mov
movsl
mov
mov
or
jns
mov
cmp
ret
sahf
mov
je
mov
pop
insb
adc
xchg
cmpsb
pusha
movsb
xchg
or
add
test
psubusw
stos
xor
sub
call
cmp
lea
into
icebp
dec
adc
or
cmp
enter
loopne
mov
in
and
test
and
sub
inc
or
push
jmp
cmpsl
mov
cmp
js
loope
lea
jge
mov
dec
js
xchg
dec
ffree
jnp
gs
pushf
in
lea
cmp
sub
icebp
ret
pop
sti
shrb
pop
addr16
lret
jle
int
and
mov
push
dec
inc
lods
hlt
mov
cltd
mov
std
xor
pop
sbb
popa
dec
xor
loop
push
inc
inc
outsl
out
jp
mov
out
xor
push
cmp
loope
aas
lods
rcrb
dec
fnstcw
xchg
dec
mov
in
fcomp
lock
sub
outsb
push
es
mov
lods
mov
mov
push
push
insl
mov
or
imul
jp
bound
rcrl
addr16
push
pop
add
xor
lods
push
jb
sahf
jmp
dec
aaa
cmpsb
jo
pushf
and
push
dec
sahf
lods
frstor
lock
sbb
inc
cmpsl
jbe
adc
popf
cmp
das
fisubs
sbb
inc
jae
cmp
loop
jbe
loop
in
ret
imul
stc
into
out
lods
adc
fimuls
fcoml
stos
icebp
aad
jg
stos
addl
xchg
pushf
call
mov
repnz
inc
xchg
jae
ret
clc
push
sahf
push
js
adc
inc
fs
jo
jp
fldcw
push
push
adc
out
push
imul
divl
out
pop
int
push
sbb
cltd
out
mov
inc
cmc
sbb
out
sub
add
test
out
inc
pop
or
push
mov
int3
lcall
stc
repnz
adc
fcoml
sub
push
mov
sbb
test
sub
adc
subb
and
test
test
leave
cld
fcmovnu
mov
or
adc
xchg
cmpsl
out
dec
push
sub
jle
fistpll
sti
mov
popa
dec
pop
xlat
mov
stos
loop
stos
and
sub
jae
je
xlat
jle
shll
mov
cmp
dec
dec
inc
and
ja
cmpsl
cmpsb
sub
inc
pop
adcl
adc
mov
xchg
mov
out
pop
push
loope
popa
add
cs
imul
mov
inc
mov
jae
xchg
loope
insb
aaa
inc
mov
sub
rorl
and
fisttpll
cmp
arpl
outsb
test
es
push
jg
movsb
cmp
ds
sub
nop
cld
in
mov
ret
jle
pusha
gs
jge
add
roll
icebp
push
add
into
lds
push
dec
cmpsb
mov
sbb
loopne
mov
xchg
mov
adc
cld
dec
dec
inc
mov
dec
ljmp
xchg
xchg
sub
jmp
xchg
adc
imul
lds
adcl
lret
jno
pushf
cmp
test
test
sbb
jecxz
adc
icebp
cmp
popf
cmpsl
xor
loope
test
inc
pushf
push
inc
fcmovnbe
shll
pop
das
dec
inc
or
mov
mulb
lcall
daa
ljmp
sbb
out
jp
mov
cmpsb
or
lahf
xchg
cli
or
icebp
fwait
mov
aaa
dec
rcrb
xor
adc
loope
add
xor
mov
adc
rorb
idivl
jne
add
aad
loope
adc
and
sub
xchg
adc
jmp
in
adc
stos
mov
addr16
subb
lods
pop
mov
xchg
xchg
testl
dec
adc
je
repnz
and
clc
or
inc
jecxz
cwtl
pop
pop
push
push
jnp
jge
cmp
jg
out
cwtl
inc
jno
mov
ja,pt
or
test
push
je
loope
push
mov
cmpsb
lahf
xor
sbb
sub
cmova
adc
xchg
les
call
dec
and
clc
fwait
out
xchg
add
push
loop
xor
add
or
mov
jmp
cs
sub
mov
mov
cs
sub
in
fmulp
movsb
lea
imul
mov
sbb
pop
lahf
arpl
pop
add
fmull
stos
add
stos
jno
dec
xor
cld
aas
mov
pop
dec
sbb
mov
dec
fimuls
movsl
mov
repz
xchg
lret
sbb
jnp
iret
sti
and
and
scas
cmp
and
pop
outsb
xor
fimull
pop
es
adc
lods
push
dec
pop
ljmp
ja
inc
fisubrl
insb
divb
pushf
jle
in
sbb
sahf
mov
das
mov
push
sub
jo
cmp
mov
mov
and
loope
dec
cmp
push
testl
pop
or
mov
push
cmp
xchg
nop
cmp
daa
es
scas
fsubrl
fldt
cltd
mov
sahf
pop
clc
and
inc
xchg
jae
lock
shll
in
push
push
outsl
aaa
js
jg
xchg
and
sti
out
bound
mov
dec
xchg
les
enter
dec
add
jns
mov
push
mov
push
jb
out
jno
mov
int3
icebp
aaa
jb
repz
pop
out
repnz
mov
lret
or
dec
ds
mov
jns
test
or
dec
int3
stc
movsl
xchg
mov
data16
mov
fadd
fsubl
iret
adc
fsubl
stos
add
int3
or
jp
ret
aad
jne
rorl
std
mov
and
adc
xchg
sti
xor
dec
or
fdivrs
pop
lds
adc
mov
std
or
jnp
subb
lahf
repz
mov
imul
cmp
add
sub
repz
int3
stos
jmp
loope
or
pop
pop
xchg
movsl
xchg
xchg
lods
cs
mov
pop
push
mov
lret
or
popf
add
push
imul
fisttpl
fbstp
jmp
xlat
push
dec
das
or
jmp
mov
pop
movsl
lahf
in
sbb
sbb
add
xor
sub
fst
ret
dec
movsl
lea
shr
or
xor
push
cwtl
rorb
inc
push
repnz
cmp
add
xchg
sbb
mov
mov
xchg
lock
cs
test
adc
mov
sbb
in
or
adc
lret
pop
mov
fwait
and
adc
rclb
rorb
iret
add
pop
and
loop
mov
sbb
dec
mov
pop
cmpsb
push
push
mov
xor
cmc
and
fidivrl
rclb
mov
sti
stc
sbb
push
jo
pop
mov
jl
hlt
pop
int
aam
sbb
test
mov
pop
dec
xchg
in
hlt
xchg
xchg
inc
movsl
test
xchg
out
mov
or
mov
jo
pusha
jae
jmp
icebp
pop
pop
rolb
icebp
cwtl
mov
fdivrl
xchg
jne
push
mov
lods
pop
adc
adc
call
loopne
cs
ss
cmp
scas
and
inc
add
fsts
mov
iret
and
out
mov
repnz
add
push
pushf
mov
js
push
mov
in
dec
out
adc
push
lock
cld
testb
xlat
int3
mov
hlt
pop
cmpsb
insl
cld
adc
daa
pop
jl
loop
fadds
jmp
pop
xchg
int
pop
xor
jecxz
push
sahf
imul
xchg
dec
inc
xor
xchg
dec
shl
mov
mov
outsb
push
inc
idivl
ss
pop
dec
loopne
stc
ljmp
sahf
scas
ret
pop
cmp
and
mov
ret
mov
mov
jae
clc
int
dec
jle
sbb
jmp
inc
inc
mov
push
xor
or
xchg
into
add
lea
adc
pop
pop
cmpsl
push
hlt
out
push
negl
test
shrb
cmpsl
lcall
cmp
mov
dec
aaa
ret
adc
xlat
ret
mov
inc
std
push
icebp
cmp
jnp
into
push
inc
inc
pop
es
sti
nop
xor
fldt
outsl
lcall
scas
fst
lods
sti
pop
dec
mov
iret
cmp
rcrl
movsb
mov
jne
cli
jbe
xor
das
leave
call
mov
cmp
pop
xchg
inc
insl
jecxz
push
mov
nop
je
scas
int
mov
fstps
cmpsb
loope
xchg
push
or
sub
cmpsb
js
mov
das
push
ljmp
hlt
push
push
cmp
sbb
int3
imulb
shl
push
jae
lods
sbb
rorl
xor
cmp
fmull
push
int
flds
stos
cli
pop
pop
mov
jae
and
push
mov
pushl
inc
repnz
fldcw
mov
mov
mov
and
cld
ficoms
lret
add
adc
inc
xor
and
ds
xchg
ljmp
xor
jno
push
dec
imul
aad
and
mov
frstor
add
push
pop
fdivl
sahf
das
std
aam
cmp
imul
mov
mov
test
daa
mov
ljmp
arpl
nop
hlt
xchg
mov
inc
push
repnz
iret
clc
ret
and
mov
jmp
rolb
add
mov
imul
and
jne
xor
adc
pop
dec
xor
outsb
push
cli
mov
shlb
mov
lods
and
loop
test
rcr
mov
sbb
inc
je
or
mov
into
mov
pop
inc
ljmp
adc
cwtl
xchg
or
je
jge
clc
js
orb
mov
out
mulb
push
arpl
mov
stos
inc
repz
cmc
inc
xchg
sti
movsl
jmp
lret
and
lock
incb
pop
loopne
test
jb
lret
mov
daa
adc
repnz
out
cmp
add
mov
adc
mov
push
addb
stos
lahf
cwtl
push
outsl
add
lret
push
jno
lea
loopne
or
pop
cmpsl
mov
push
dec
pop
add
fdivrl
pop
mov
lahf
andl
daa
cmpsl
call
push
mov
mov
or
sbb
pop
or
lret
dec
lahf
mov
jg
leave
sbb
sbb
enter
mov
je
loop
loope
jl
pop
dec
rclb
aas
jecxz
ret
lds
call
jecxz
dec
pop
popa
or
popf
jecxz
xchg
rcrl
insb
mov
cmp
stos
inc
push
popa
mov
mov
fistps
lds
xor
mov
adc
movsb
push
jbe
mov
xchg
fstps
jae
sbb
cli
and
lcall
jp
int3
lock
ljmp
jle
out
fnstcw
mov
push
xchg
jae
cmc
sub
fisttps
xchg
xchg
dec
jbe
push
xorb
xchg
dec
sar
pop
aaa
inc
mov
jnp
push
adc
inc
loopne
xchg
pop
loop
dec
shlb
dec
add
aas
xor
mov
loop
lods
jae
fbld
sbb
in
mov
mov
icebp
mov
in
sub
push
mov
daa
stos
negb
sub
inc
in
and
and
test
mov
std
adc
mov
clc
fisttpl
xor
and
into
pop
insl
mov
push
jbe
dec
mov
jbe
mov
js
mul
lea
xchg
xchg
mov
cltd
sbb
call
mov
js
jp
mov
inc
sahf
and
rcll
sbb
lret
cs
mov
inc
pop
add
mov
xor
sub
mov
cmp
mov
pop
jp
in
pop
mov
sbb
sbb
out
or
mov
in
pop
sbb
xchg
lahf
cmpsb
dec
jb
cmp
push
inc
or
jge
jge
jg
lods
pop
and
aam
in
sub
or
cli
icebp
mov
or
sub
clc
stos
clc
or
es
sbb
or
sub
sahf
icebp
or
jo
sbbl
incb
mov
scas
inc
add
add
repz
fiaddl
sub
scas
jo
mov
lahf
fwait
test
mov
push
inc
rclb
cli
sbb
popf
mov
clc
hlt
dec
jb
je
ret
mov
push
push
icebp
jl
and
pop
lcall
sbb
pop
cmc
adc
pop
clc
shll
aas
dec
sub
dec
jb
ret
add
test
cmpl
cvttps2pi
push
je
jge
sbb
push
push
or
js
aad
jmp
and
pop
addr16
jmp
sti
in
cmpsl
fimull
jne
adc
test
xchg
sbb
jae
das
arpl
lahf
mov
psrlq
xor
pop
fs
std
sub
outsl
and
shll
mov
cmc
ja
xorl
stos
aad
jecxz
pop
outsb
ja
fsub
fcoms
inc
push
in
pushf
jle
aam
or
dec
ljmp
dec
sbb
jnp
mov
cmp
ja
ror
insb
xor
mov
out
dec
hlt
into
pop
test
add
stos
and
or
dec
mov
cs
jb
orb
std
fcomps
lss
pop
inc
push
push
mov
int
push
or
mov
xchg
jne
out
das
mov
out
test
jb
sbb
fistl
mov
in
mov
mov
jmp
adc
inc
jbe
roll
push
inc
leave
clc
xchg
shr
shlb
or
rol
fwait
fsin
sbb
scas
pop
inc
out
pusha
leave
ds
inc
sub
inc
lahf
cwtl
fwait
push
ret
into
push
popa
mov
sbb
lcall
aam
popa
clc
fistps
cmovnp
shll
in
xor
dec
pop
fwait
dec
outsb
faddp
loopne
inc
cmp
jp
lret
adc
jo
lods
mov
inc
push
aam
hlt
aad
shlb
sub
xorl
jne
sub
adc
cmp
mov
test
data16
icebp
fnsave
int3
jmp
stos
and
shll
call
adc
dec
add
mov
popf
pop
cmp
dec
es
imul
pushf
sbb
jno
cmp
or
orb
in
pop
adc
jae
mov
cmpsl
sbb
scas
inc
ss
push
fwait
andb
xor
call
mov
stos
loopne
mov
pop
push
inc
cld
data16
mov
insb
inc
or
in
scas
loope
push
iret
jbe
mov
fstl
xchg
sbb
rcrb
and
cs
cmp
fnstcw
int
test
inc
mov
inc
push
leave
sub
sub
inc
lods
dec
cmp
cmc
jp
cmc
cmp
pop
jne
and
ja
inc
and
mov
xor
adc
push
jo
adc
ret
inc
pop
add
jp
addb
jg
cli
dec
pop
cltd
rcl
enter
enter
movb
cld
mov
cltd
lcall
push
add
leave
popf
jle
xlat
and
rclb
xor
in
add
sti
sbb
repnz
jae
pop
jne
cmp
jo
xchg
adc
lahf
cmp
push
xchg
leave
inc
pop
push
jp
mov
mov
popf
cmpsl
jmp
xlat
mov
js
test
push
shlb
adc
fdivs
xor
lock
sub
sbb
inc
adcb
repnz
fsubr
lea
lcall
repz
popa
jno
inc
pop
gs
movsl
push
mov
imul
dec
cmp
dec
jae
push
outsl
mov
dec
cs
fistl
lea
add
jb
aaa
int
movsl
sbb
cli
test
enter
add
loopne
shr
mov
mov
xor
mov
xor
or
mov
dec
not
and
xor
mov
mov
xor
or
mov
mov
shrd
shr
mov
mov
mov
xor
mov
xor
shl
mov
or
mov
cmp
je
mov
sub
mov
mov
mov
shl
xor
mov
mov
mov
xor
xor
shrd
shr
or
xor
or
mov
mov
mov
mov
xor
shl
xor
mov
mov
mov
mov
xor
xor
shrd
or
shr
mov
mov
or
mov
cmp
jne
cmp
je
jmp
mov
mov
mov
shl
xor
mov
mov
mov
xor
xor
shrd
xor
or
mov
mov
mov
mov
xor
shr
or
mov
mov
shl
xor
mov
mov
xor
mov
mov
xor
shrd
or
shr
mov
mov
or
mov
mov
mov
cmp
jne
mov
cmp
je
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
shrd
mov
mov
xor
shr
mov
xor
shl
or
mov
mov
mov
xor
shld
xor
mov
mov
shl
mov
mov
xor
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
mov
mov
xor
shl
mov
mov
xor
mov
mov
xor
xor
shrd
jmp
cs
lods
pushf
ds
enter
ficoml
ret
mov
push
sub
push
push
sub
adc
pop
push
or
mov
pop
fdivs
sbb
adc
cwtl
xor
add
out
outsb
sbb
push
int3
mov
add
aad
fs
fsubp
pusha
not
faddl
inc
mov
aaa
aas
xlat
insl
lock
xor
pop
jle
adc
push
mov
in
and
test
das
stos
in
dec
sub
outsb
aas
sbbl
mov
fstps
mov
push
inc
push
fbld
and
add
lret
push
and
iret
add
add
pop
mov
loopne
and
inc
aas
add
iret
jp
ret
nop
xorl
ds
push
xchg
xchg
and
loop
lahf
dec
pop
pushfw
inc
mov
jo
jae
xchg
mov
sub
and
jnp
mov
fldcw
cmp
mov
xchg
and
jb
mov
movsl
cmp
out
sub
push
fisubl
out
ret
popa
imul
jo
stos
inc
cmp
pop
mov
sub
out
sbb
sbb
add
mov
sbb
jae
cmp
fsts
jo
hlt
sub
xor
add
mov
jle
jbe
xlat
sub
fsubs
outsb
add
sub
xchg
call
cmp
cmp
lods
test
lock
ja
and
sbb
mov
cmp
or
push
pop
or
or
scas
cltd
fistpll
dec
lahf
cmp
xor
push
notb
adc
adc
jns
popa
ficompl
lcall
push
fistps
sti
mov
cmpsl
notl
loopne
hlt
inc
xchg
jb
pop
jae
jns
pop
dec
cltd
or
lret
nopl
push
inc
xchg
loopnew
clc
mulb
js
js
sbb
sbb
icebp
sahf
les
inc
push
lock
lahf
les
fidivrs
movsb
daa
xchg
or
daa
add
outsl
sbb
sbb
enter
xchg
xor
out
jle
sbb
js
sbb
jmp
sub
stos
jb
or
cmpsb
repnz
jne
fsubl
negb
es
mov
out
nop
jecxz
stc
push
pop
and
sbb
cld
push
addr16
xor
mov
mov
jno
xchg
mov
dec
xchg
sbbb
mov
jae
sti
addr16
add
xchg
cmp
pop
les
repnz
mov
in
jne
sbb
pop
insb
cmp
mov
loopne
mov
int3
inc
ja
sub
cmpsb
sti
mov
xchg
cwtl
flds
mov
dec
js
lret
push
daa
push
or
pop
mov
bound
mov
fwait
sub
inc
pop
ret
and
imull
xchg
cltd
scas
adcb
xor
push
insb
scas
mov
callw
mov
inc
sub
xlat
cmp
dec
stc
push
shrb
test
nop
mov
insb
xor
cmpsb
or
push
xchg
dec
cmc
cmp
or
sahf
lret
jp
sub
add
and
insl
cli
insb
dec
stos
mov
mov
fcomps
add
cltd
jmp
sbb
mov
outsb
pop
mov
sub
leave
pop
add
inc
mov
fwait
ljmp
mov
lods
sbb
inc
push
in
mov
sarb
add
notl
mov
pop
stc
inc
or
in
push
stos
pop
cmp
ret
inc
add
test
inc
leave
mov
or
fstpt
sti
iret
push
aam
jl
mov
and
add
lea
or
adc
push
imul
and
push
aas
push
movsb
addb
mov
jno
jmp
or
dec
fwait
loop
mov
mov
jb
pop
cltd
mov
mov
and
movsl
fnsave
pop
cmp
in
or
clc
sub
shl
lock
mov
mov
mov
dec
sbb
xor
cmp
cmpsb
dec
jmp
adc
pop
rclb
sbbl
sub
cmp
cs
addr16
push
add
sbb
mov
pop
mov
inc
cli
ljmp
shl
ja
inc
jne
push
inc
shrl
and
xchg
adc
inc
in
js
out
dec
mov
test
in
or
pop
stos
add
pcmpeqb
adcl
stc
dec
setnp
dec
enter
gs
pop
pop
cmp
inc
xchg
mov
mov
movsb
test
int3
aam
out
pop
fstp
rolb
or
mov
mov
aam
imul
cmp
jmp
mov
xor
outsl
cwtl
and
std
and
jb
adc
jbe
in
jno
or
add
mov
mov
push
mov
cmp
xor
sub
push
xor
sub
inc
imul
fsubs
dec
aaa
movsl
insl
arpl
gs
push
lods
ds
int
and
lea
lock
mov
add
call
mov
fcoms
add
hlt
in
icebp
fildll
sahf
mov
push
inc
and
xchg
nop
aaa
sub
sti
push
adc
mov
push
mov
imulb
fchs
lret
hlt
hlt
mov
sbb
filds
fnsave
aam
sahf
sarl
or
jl
andl
rcrb
sti
insl
hlt
rcrl
gs
dec
dec
data16
mov
and
ja
in
lcall
sbb
pop
adc
push
pop
xchg
je
jge
mov
sbb
jge
pop
dec
data16
fwait
mov
mov
pop
shll
inc
jecxz
cwtl
pop
inc
imul
jecxz
push
subb
je
enter
mov
int3
lret
je
in
mov
loop
into
push
movsl
test
loop
cld
xchg
jbe
mov
and
push
divl
mov
mov
xor
mov
cltd
adc
sub
rcrb
dec
pop
jmp
push
inc
and
push
push
pop
push
ljmp
push
mov
sub
cwtl
inc
push
aas
and
scas
mov
sbb
or
ja
xor
inc
jae
inc
repnz
sub
pop
inc
dec
mov
aam
stc
icebp
jnp
pushf
test
cmp
and
insb
mov
xchg
and
fwait
fwait
sbb
sbb
loope
mov
neg
mull
push
push
leave
test
ss
sbb
inc
and
aad
inc
jne
pop
lods
rcll
stos
bnd
nop
loope
iret
jns
popf
add
outsl
cli
jne
xchg
lcall
pop
jp
inc
dec
scas
dec
fimuls
inc
jg
mov
lock
mov
lcall
sbb
fbstp
xchg
arpl
add
jnp
and
clc
stos
test
sub
pop
mov
inc
sub
add
sbb
call
mov
neg
or
pop
push
negb
divl
dec
jecxz
enter
cmp
xchg
sbb
and
repz
mov
fldl
inc
mov
push
cwtl
imul
ret
cmp
popa
cmp
stos
fdivp
sub
and
push
ffree
loopne
sub
dec
sbb
enter
scas
xlat
cmpsl
loop
push
pop
inc
outsl
inc
mov
cmp
insb
push
pop
add
mov
mov
sarb
cmp
jmp
mov
orl
andb
add
je
repnz
jmp
xor
or
out
popf
aam
lcall
pop
mov
jle
aam
lret
jns
stc
pop
mov
xor
jmp
or
push
aad
or
jmp
popa
sbb
mov
mov
scas
arpl
xorb
in
popa
lea
je
mov
mov
cmp
dec
rcr
dec
mov
dec
int3
out
cmp
mov
sub
into
subl
sub
sub
sbb
scas
push
daa
sub
xchg
outsb
aad
mov
mov
cmp
push
aaa
mov
fnstsw
aam
pop
ficoms
jno
test
xchg
loope
sub
sbb
lret
adc
mov
or
dec
insb
mov
loope
push
and
out
sti
mov
scas
mov
rclb
mov
mov
xlat
imul
out
aaa
xchg
or
jbe
ror
mov
pop
popa
jl
insb
push
push
mov
push
daa
jo
mov
mov
push
sbbl
cmpsl
and
lods
add
push
jne
int3
sbb
lea
fst
imul
ss
lds
pop
dec
mov
mov
mov
lds
int
pop
subl
icebp
rcll
cmc
push
inc
add
sbb
popf
es
cmp
jae
mov
out
sbb
movsb
xor
mov
out
inc
pop
sub
mov
sahf
push
push
outsb
mov
inc
jb
dec
cmc
xchg
leave
or
sub
jle,pn
xchg
sti
pop
aaa
addb
adc
mov
loopne
mov
rcll
sbb
push
jnp
xlat
pushf
inc
mov
push
bound
les
sbb
add
insl
pop
xor
cmp
pusha
mov
aam
or
mov
fbld
jbe
pop
dec
mov
lea
mov
push
dec
add
adc
sub
loopne
mov
mov
bound
and
and
ret
sbb
test
cwtl
mov
fsubp
mov
pop
cmp
jl
xor
dec
daa
or
or
std
mov
test
and
arpl
inc
add
mov
popf
cmp
sub
jbe
test
pop
mov
sub
scas
dec
popw
jl
adc
js
loopne
repz
daa
xchg
into
mov
int3
add
xor
ja
fldt
ds
inc
jb
movsl
insb
insb
sub
pop
shrl
sub
mov
or
dec
js
jno
mov
sbb
mov
lods
xchg
xchg
lds
cmp
data16
es
popf
push
imul
icebp
mov
aas
mov
ret
pop
fs
je
sub
inc
fisttps
aam
mov
xchg
test
mov
repnz
scas
inc
xchg
jne
adc
cmp
sbb
aam
and
addr16
arpl
popf
pop
test
xchg
test
xor
cmp
sti
hlt
in
dec
sub
and
or
adc
in
les
sbb
dec
mov
mov
dec
xchg
fbld
sarl
adc
jns
cmc
xchg
jge
xchg
scas
jne
dec
scas
mov
jg
arpl
xor
jg
cmp
fucomip
push
pop
repz
loopne
xchg
adc
xlat
into
pop
dec
mov
divl
add
and
lahf
push
in
xchg
mov
mov
dec
test
push
push
dec
leave
push
inc
or
loop
mov
mulb
pop
xor
lcall
jae
jnp
rorl
cmp
lret
pop
cmpsl
mov
push
and
pushf
mov
lods
push
call
mov
loop
aaa
aas
pop
test
dec
pop
and
fstpt
dec
cmp
nop
or
loop
xor
xchg
sub
shlb
les
and
cmp
or
fsts
cmp
or
stos
sub
jmp
aam
dec
pop
sbb
out
or
or
xchg
rcl
mov
and
cmp
dec
push
cltd
cwtl
push
stos
cwtl
inc
out
lds
adc
sub
pop
sbb
psrad
test
push
add
inc
test
push
out
pop
jmp
push
stc
data16
enter
inc
pop
lret
add
das
xlat
repnz
icebp
push
popa
mov
push
aad
add
pop
xlat
addl
fs
mov
dec
clc
jb
cmp
fmul
gs
fs
hlt
inc
loope
add
push
aam
fs
dec
and
ljmp
outsb
mov
mov
ret
lea
jb
inc
pushf
push
fmull
cmc
jecxz
lods
mov
sub
fstpl
mov
ret
es
stos
jns
in
les
pop
mov
pop
cmpsl
fcomp
mov
xchg
dec
fsts
sub
cmp
mov
lahf
inc
aas
outsl
out
inc
das
stc
add
add
fs
cmp
insb
xor
je
dec
shlb
or
xor
inc
ret
sahf
mov
cmpl
dec
into
xor
les
cmp
stc
fsub
mov
push
cld
cmp
pop
int
lods
push
xchg
inc
mov
cmpsb
pop
movsb
out
setno
stos
push
into
scas
push
fwait
jbe
lret
lods
insl
rorl
cmp
out
jmp
jp
pop
out
sbb
cmp
sbb
movsb
jne
pop
push
jecxz
dec
pop
jmp
pop
rorb
ss
adc
dec
pop
pushf
inc
gs
lods
inc
stc
push
shlb
mov
add
mov
mov
push
inc
mov
cmc
das
adc
adc
pop
iret
sbb
test
inc
mov
fnstcw
and
int3
cmp
or
push
xor
test
call
insb
adc
mov
push
mov
in
push
outsl
sbb
cld
cltd
mov
mov
xsave
cmpsl
adcl
sub
adc
cmp
xor
jp
mov
int
in
sub
int3
mov
push
or
cwtl
dec
and
jns
xor
fidivs
ljmp
mov
cmp
xor
mov
and
test
push
in
std
sbb
fnstsw
and
jbe
xlat
mov
jle
cmp
mov
dec
sti
iret
push
lea
lea
repnz
lods
cmp
sub
fwait
mov
sbb
pop
loope
xchg
clc
push
rcrl
mov
imul
scas
cli
decl
ja
mov
fbld
jle
and
mov
push
fdivrs
adc
cld
sbb
aas
out
jae
and
sti
or
cmp
addr16
lods
xchg
rcl
jp
fwait
enter
imul
sbbl
mov
add
lods
jns
dec
mov
shlb
fcoms
dec
mov
and
aam
rcrb
pop
mov
aam
repz
and
call
push
into
in
mov
xchg
jns
test
aas
movsl
fxch
sub
dec
lods
mov
jmp
or
movsb
jb
jo
jo
loope
jecxz
test
inc
sbb
jns
pop
push
jmp
pop
push
ret
mov
es
inc
mov
jnp
jns
repz
mov
cld
lret
daa
arpl
addr16
daa
xchg
pop
sbb
add
fsub
jp
popa
sbb
sub
jne
lret
jne
mov
rcrl
and
enter
les
in
pusha
xchg
mov
aad
pop
mov
xor
and
neg
rcrl
mov
call
xchg
mov
add
repnz
rcrl
pop
call
ljmp
rsqrtps
mov
sahf
nop
mov
adc
xor
and
inc
sub
xchg
cli
adc
sub
sub
push
adc
fisttps
xor
loopne
push
sub
pushf
pop
push
push
sub
xchg
xor
xchg
cmp
fsubl
adc
pop
imul
mov
add
inc
out
cld
loop
fsubr
pop
inc
jo
add
cld
pop
in
into
shll
les
pop
inc
nop
xor
ficompl
out
push
xor
ljmp
push
pop
jae
test
mov
repnz
mov
insb
add
mov
loope
ds
sub
inc
arpl
push
imul
imul
movsb
rcrl
jno
mov
int
jle
cmp
sub
mov
and
jno
xorl
jo
mov
aaa
mov
dec
mov
mov
mov
pop
xchg
mov
sub
rcpps
repnz
test
inc
or
ds
and
add
mov
das
push
repz
test
out
pop
and
sti
mov
and
insl
cmp
and
push
outsl
mov
mov
push
imul
bndstx
stos
scas
movsb
mov
clc
add
and
inc
test
aam
add
or
mov
jle
xchg
xchg
mov
sub
adc
xchg
push
bound
and
je
push
xor
push
lret
dec
push
or
dec
stos
and
push
faddl
loopne
inc
stos
push
das
add
sub
hlt
lcall
es
push
pop
out
jo
sahf
cmp
mov
and
pop
jmp
idiv
xchg
inc
xor
mov
ret
dec
loope
and
jg
lea
add
jnp
jbe
jo
stos
or
add
jns
rorl
ljmp
xchg
aas
test
pop
jnp
or
push
lcall
daa
jge
cltd
jb
jne
dec
movsb
adc
sbb
aam
fdecstp
mov
jecxz
pushf
mov
add
cmp
test
sub
mov
outsl
mov
push
call
rorb
sahf
add
cmp
push
dec
xor
push
aad
cmp
lods
sbb
dec
lods
and
filds
jge
pop
es
push
jmp
mov
icebp
outsb
test
and
adc
mov
mov
enter
scas
mov
cmp
test
lea
xor
lods
std
mov
fincstp
lret
rcrb
inc
mov
push
lods
addr16
mov
or
mov
pusha
int
cs
lock
mov
aaa
nop
push
int3
mov
nop
add
mov
in
sbb
aam
mov
sub
iret
dec
sti
dec
pop
jno
sahf
outsl
test
pop
sub
popf
cld
or
jns
ret
xor
mov
cs
sbb
and
stos
jmp
or
jno
aaa
clc
jp
pop
test
lcall
xor
je
mov
cmp
jge
lahf
clc
stos
shrb
je
iret
cmpsb
add
sar
gs
fpatan
ret
js
pop
insl
jle
mov
imulb
dec
mov
mov
push
inc
or
outsl
pop
adc
sub
insl
pushl
iret
xchg
in
mov
or
in
xor
inc
xor
cmpsl
shrb
jb
movsb
sbb
fcmovu
inc
lahf
sar
stos
add
out
cwtl
xchg
movsb
lret
mov
add
sub
sarb
aad
out
lret
mov
ljmp
ret
dec
mov
stos
adc
movsb
movsl
dec
in
int3
mov
cmp
js
cli
sbb
ret
loop
addr16
outsl
ds
es
call
aas
ljmp
mov
push
adc
jnp
add
push
add
cltd
mov
jp
mov
mov
mov
movsl
lods
mov
xchg
ss
ret
jecxz
addr16
ss
sti
jg
cld
xchg
mov
sub
push
adc
test
xor
inc
or
popa
loop
in
mov
movl
scas
cvtps2pd
rcrl
shlb
mov
cs
loopne
aas
bound
and
dec
dec
inc
cwtl
lret
and
mov
ja
addl
or
in
sub
xchg
xchg
mov
or
shll
repz
push
jmp
push
xlat
add
imul
inc
ret
jge
dec
adc
cs
push
push
mov
mov
cmpsl
cmc
mov
arpl
xlat
mov
cmc
js
dec
fidivrl
pop
pop
push
sti
sbb
in
cmpsb
out
push
push
sub
cmp
cmp
and
xor
rclb
fldl
push
cmp
push
cli
xchg
sti
sub
push
popf
sub
inc
movsl
mov
inc
orl
aam
push
js
inc
inc
dec
outsl
add
mov
lcall
repnz
sub
add
xor
mov
jne
and
add
cmp
cmp
mov
dec
inc
pop
add
das
add
xchg
orl
pop
pop
nop
enter
or
aas
inc
ficomps
push
mov
nop
cmp
push
mov
ds
sbb
mov
loope
mov
repz
dec
pop
out
outsb
ret
sbb
mov
lcall
inc
push
fbld
movsl
test
fwait
cmp
jl
cmpsl
ret
repz
dec
sbb
xor
adc
mov
scas
adc
mov
cli
jmp
mov
sbb
adc
movsb
fsubrs
xchg
incl
ja
xor
pop
jns
cwtl
cmp
lods
in
in
mov
push
bound
xchg
add
rcll
dec
xchg
notl
movb
mov
or
push
test
cmc
pushf
mov
inc
jecxz
clc
fdivs
mov
xor
xor
imul
aas
and
sub
js
jae
xchg
test
loopne
sub
and
pusha
jmp
xor
lods
sbb
xor
jge
movl
js
pushf
and
jg
stos
xchg
jbe
mov
or
stos
lea
inc
jno
test
cmpsb
xor
jecxz
sbb
outsl
fwait
popf
pop
jmp
lods
push
dec
movsb
jge
jns
ds
mov
testb
lods
dec
jb
stos
test
ds
or
testl
push
jno
mov
jle
arpl
jno
push
xor
sahf
shlb
shrb
sbb
imul
sub
leave
mov
fisttps
call
scas
and
lahf
mov
jmp
mov
xchg
and
mov
in
mov
notl
subl
leave
jp
adc
mov
das
sbb
xor
dec
xor
push
sbb
jp
outsl
sub
repz
mov
or
mov
addr16
repz
adc
cmpsl
push
loope
data16
inc
xor
pushf
jbe
add
fsqrt
mov
mov
push
dec
mov
sub
sarl
pop
cwtl
in
pop
test
adc
jp
xchg
push
lret
xchg
lahf
into
jle
pop
movsl
sub
gs
mov
cs
mov
sbb
test
cld
adc
int
shrl
xor
mov
push
mov
popa
ja
arpl
outsb
mov
lret
out
xor
inc
mov
xlat
sub
dec
adc
mov
cmp
jmp
mov
cmp
popa
out
cwtl
les
jmp
pop
sub
xchg
push
nop
fidivl
std
repz
fdiv
repz
outsl
sbb
leave
or
int
cltd
mov
xchg
test
xor
sub
adc
xchg
lods
mov
xchg
sahf
sub
icebp
iret
and
out
dec
and
gs
pop
test
sahf
ret
jge
or
or
mov
cltd
cmpsb
mov
pop
xlat
into
andb
das
daa
addr16
popa
ljmp
xchg
pop
lahf
div
sti
pop
jnp
cmpsl
in
or
inc
xor
mov
inc
les
push
pop
scas
pop
notb
cmp
add
bound
loopne
and
jp
xor
repnz
push
test
sbb
mov
xchg
outsb
subl
rcrl
subb
push
testl
mov
lds
shlb
scas
jbe
aad
mov
or
xchg
sub
shr
mov
insl
add
mov
mov
adc
jbe
mov
lea
mov
rcrl
insb
in
pushf
aaa
fs
jnp
lea
pop
movsb
scas
inc
cmpsl
js
xlat
push
ret
int
dec
faddl
ja
adc
xor
cmp
pop
rcr
js
and
push
add
lods
push
icebp
push
jb
popf
roll
enter
je
jno
xchg
lahf
add
lahf
mov
xchg
test
jb
stos
fstpt
cmp
mov
imul
aam
or
mov
sti
outsl
outsb
sahf
in
inc
test
push
sarb
jnp
xor
mov
dec
ljmp
mov
push
inc
cmp
push
push
ds
mov
dec
sarb
mov
dec
stos
cmpsl
loop
inc
mov
xor
sub
mov
inc
inc
rcrb
popf
dec
nop
or
lods
pop
push
in
into
push
jb
jp
cmpsl
enter
cmpsb
stos
movsb
cmp
popa
jge
in
xchg
mov
add
cmpsl
popf
mov
aam
xor
inc
mov
js
pushf
cmp
lea
sti
into
push
jns
int
sarb
fmuls
callw
push
loop
pop
jns
fld
rorl
mov
pop
add
cmp
cmp
stos
sub
pop
scas
sbb
mov
js
movsl
out
lret
das
fidivs
repz
stc
sarl
push
cmp
mov
xchg
cmpsl
aaa
nop
push
adcl
push
ss
stc
xor
leave
pushf
mov
sub
out
aam
push
ljmp
push
ror
mov
enter
mov
dec
jg
and
in
jae
fs
aam
rol
lret
push
dec
loope
mov
bound
aaa
inc
shufps
pop
xchg
repnz
push
pop
gs
mov
cld
in
out
dec
push
mov
or
dec
xchg
mov
lods
cmpb
shlb
movsb
sub
sbb
les
cli
mov
insb
cmpb
sub
cmpsb
add
pop
sbb
xchg
fst
mov
fisttpll
lock
push
jecxz
add
jl
int
fidivl
fisubl
jae
cmc
cmpsb
enter
scas
sti
fprem1
sbb
into
scas
mov
mov
stc
add
test
jle
dec
in
fmul
sub
arpl
inc
int3
lds
mov
push
in
arpl
xlat
dec
int3
xlat
pusha
frstor
adc
outsl
pushf
mov
xchg
and
insb
stos
pop
cmp
dec
mov
add
pop
jno
cs
adc
sti
sub
sub
xor
or
imul
ja
dec
mov
mov
jecxz
call
or
push
sbb
push
xchg
fldcw
shrl
pop
lret
imul
out
cli
mov
sbb
std
rcl
popf
sub
pop
sub
adc
jecxz
dec
dec
test
jl
inc
call
pop
dec
in
fisttps
xor
xchg
cmpsb
lock
mov
jmp
adc
lock
jecxz
iret
inc
stos
mov
iret
adc
pusha
inc
jle
leave
shrb
sbb
sub
mov
scas
int3
mov
cmp
jmp
mov
jge
jne
push
mov
jle
pop
jns
loopne
xlat
xor
rcrb
sbb
call
popf
int
fs
outsl
cmp
adc
addr16
fwait
push
rol
shl
xor
rorl
xchg
aaa
jg
xor
push
push
inc
sbb
int3
dec
adc
adc
cwtl
iret
test
hlt
jne
in
subb
call
push
push
or
inc
insb
fs
xchg
ficoms
xor
jmp
mov
addr16
in
popa
js
mov
adc
jno,pn
lret
mov
int3
xchg
sub
jno
jmp
cmpsb
mov
out
jecxz
and
outsl
shl
in
fdivs
and
push
push
fisttpll
push
sbb
sarl
lahf
jge
mov
lcall
xor
adc
add
andl
int
push
pop
sub
add
scas
sbb
sub
mov
out
out
pop
gs
push
or
stc
dec
dec
xor
push
pop
popa
cmp
and
push
sbb
bound
push
in
dec
and
push
out
mov
or
mov
push
cmp
je
testl
cmc
loopne
jmp
or
adc
adc
mov
add
sbbl
insl
ror
jno
daa
popa
and
adc
dec
cmpsl
pusha
cs
adc
shll
cmp
rorb
dec
or
shr
mov
mov
or
jmp
pop
insl
sub
cmp
icebp
or
mov
push
push
push
sub
push
push
push
mov
or
js
fistl
sti
add
xor
mov
xlat
repnz
sti
outsl
icebp
add
sti
mov
iret
loopne
int3
inc
or
ficoml
cld
cmp
xchg
xor
sub
pusha
scas
inc
fwait
stos
int3
mov
shll
mov
or
pop
pop
shlb
sbb
xor
mov
test
je
lret
xor
xchg
in
mov
les
cli
icebp
add
jae
pop
sbbb
fucompp
cmc
mov
sbb
inc
inc
and
pop
insb
adc
cld
fwait
mov
cmp
pushf
jl
cmp
lret
out
inc
sub
mov
or
sbb
mov
jmp
cli
inc
outsl
mov
divb
cmp
mov
jle
mov
pop
and
int
cmp
mov
and
adc
adc
test
iret
jno
gs
xor
in
jnp
in
mov
fldenv
fs
mov
dec
insb
pop
sbb
xor
popf
mov
ja
push
or
and
push
or
pop
cld
jecxz
fstp
and
adc
mov
sbb
dec
mov
mov
mov
jl
shlb
dec
mov
mov
adc
scas
mov
fisubl
loopne
add
add
out
sahf
push
mov
shrl
test
rcrb
jmp
popa
and
pop
lods
sub
ds
dec
mov
into
int3
mov
test
xchg
call
xorl
cmp
inc
push
inc
jg
or
aas
or
sbb
addl
xchg
mov
adc
sti
pop
mov
sub
mov
sarl
mov
mov
push
inc
nop
movsl
jecxz
sbb
dec
xor
fcomps
mov
repnz
xor
and
icebp
mov
leave
repnz
xor
cmp
insb
ds
in
in
xchg
aam
add
inc
and
jge
add
ret
es
or
rol
mov
movsl
test
and
arpl
dec
xchg
imul
lock
popl
std
incl
out
aaa
jle
inc
cmc
fldt
inc
je
jg
mov
jno
dec
lret
or
stos
jne
inc
jmp
loopne
cmp
shrl
int
xchg
icebp
pop
iret
stc
sbb
stc
add
pop
in
mov
cltd
sbb
mov
int3
ret
aam
inc
aaa
push
scas
push
pop
add
and
sbb
push
push
sbb
call
out
das
ror
mov
pop
xor
jae
loope
mov
lret
push
std
cmpsb
sub
test
inc
daa
loope
bound
push
adc
jmp
sub
push
push
ja
cli
in
mov
test
or
jae
in
leave
mov
pop
fwait
cli
sub
push
adc
xchg
mov
js
jl
negb
mov
dec
add
ror
mov
mov
test
cli
ret
push
stos
je
movsb
xchg
outsl
cs
bound
and
cmpsb
add
dec
push
jno
lcall
cmc
es
xor
inc
xchg
mov
xor
add
addb
flds
into
sub
movb
inc
test
stos
out
mov
adc
lds
cmpsl
jb
jns
jg
adc
popa
loope,pn
and
pop
data16
push
minps
hlt
aad
fists
stos
add
xchg
push
xchg
fcoms
or
fistps
cmp
jp
or
push
cmp
loopne
mov
outsl
dec
or
dec
push
lock
ss
mov
sbb
sti
jge
mov
mov
bound
fildll
hlt
rcrb
jnp
out
insl
or
fildll
pop
xchg
mov
xor
scas
dec
ljmp
jae
ds
or
inc
push
xchg
jl
fs
aaa
sub
sbb
aas
push
into
mov
cmp
inc
and
and
sti
or
into
out
pop
mov
stos
stos
sbb
push
pop
out
stc
jg
xchg
inc
ret
lahf
mov
je
sub
mov
insb
loopne
add
je
sahf
inc
and
inc
mov
sub
arpl
xor
pop
insb
xchg
outsl
leave
cltd
dec
jmp
xchg
cmovbe
dec
mov
test
bound
imul
inc
jno
out
push
cmpsb
insb
dec
fnstsw
ret
into
inc
cmp
int
fidivrl
div
and
jae
inc
and
insb
cs
fistps
inc
sub
jnp
insl
xchg
dec
loop
pop
pop
sbb
mov
xchg
sub
sbbb
dec
movsb
loop
jp
sti
in
or
push
mov
fldt
pusha
cmp
push
ret
mov
lods
jge
pop
sbb
jecxz
outsb
add
lock
xor
pop
out
adc
aaa
loop
fxtract
jecxz
negb
sbb
lahf
int
fs
jmp
ds
imul
add
jae
sub
shrl
xlat
adc
add
sub
sbbb
int3
sbb
roll
sbb
cmpsl
lcall
aam
jo
mov
iret
pushf
pop
push
jnp
xchg
adc
ret
adc
lea
mov
scas
fidivrl
or
lds
dec
push
and
mov
lcall
xchg
int3
repz
mov
sub
cmp
push
in
repnz
adc
sbb
int3
mov
mov
mov
js
outsb
test
out
mov
mov
mov
inc
clc
jno
hlt
pop
or
cs
jle
aam
cmp
sbb
add
sub
pop
btc
sub
mov
adc
stc
pop
jmp
sub
pushf
pop
imul
inc
lods
dec
dec
mov
shld
mov
inc
jnp
aad
xchg
inc
sub
shlb
test
jmp
sbb
arpl
jmp
insl
je
pop
dec
add
xchg
mov
lock
inc
into
jae
xor
sarb
insb
inc
xchg
cmpsl
mov
xchg
mov
mov
xchg
xchg
inc
fsubrl
jmp
xor
mov
xchg
ret
jecxz,pn
out
movsb
aad
popa
or
dec
lret
lcall
mov
lahf
das
cltd
fstps
sbb
aaa
xor
dec
push
inc
xorb
aas
pop
xor
and
jecxz
ss
incl
iret
push
pop
mov
sarl
adc
ds
arpl
aas
bound
xlat
out
mov
imul
bound
mov
iret
mov
mov
pop
and
inc
pop
and
fnstcw
repnz
lcall
pop
aas
inc
aad
sbb
and
and
loop
cmc
pop
pop
loop
repnz
or
outsb
out
xor
loop
fcomps
xchg
lds
inc
das
jb
xorps
fdivrl
inc
mov
int3
sarb
mov
out
mov
popf
gs
mov
in
xchg
fstps
inc
jnp
xchg
jb
js
add
mov
xchg
aaa
ljmp
push
pop
outsl
repnz
push
or
pop
outsl
loop
mov
inc
push
nop
dec
fisttpll
xchg
push
push
and
xchg
lret
mov
mov
jecxz
xor
rcr
mov
push
sub
push
cmpsl
gs
mov
icebp
popf
xchg
mov
lret
repnz
xor
jno
push
sub
lcall
fsub
sbb
out
add
cmp
lahf
out
pushf
ret
add
cli
dec
mov
or
jno
jne
scas
cmc
into
call
and
shlb
pop
or
mov
sub
jl
scas
pop
xchg
jo
cld
fwait
rolb
cld
pop
xor
insb
xor
xor
cmpsl
lret
xchg
out
lcall
add
mov
xor
repnz
repnz
adc
lret
inc
adc
ss
int3
popa
pop
lret
xor
ret
push
aas
jb
inc
notb
push
add
mov
mov
scas
sbb
pop
in
pop
adc
sbb
pop
pop
loop
int
rol
mov
out
pop
mov
sbb
cmpsl
mov
adc
in
mov
jbe
add
ffreep
xchg
adc
dec
sub
movsb
inc
cmc
mov
pop
sub
int3
out
out
rsm
dec
dec
sub
fidivrl
pusha
imul
test
cwtl
frstor
ljmp
in
and
mov
pop
sbb
outsl
sub
cmc
push
cmc
scas
stos
lods
xchg
add
mov
leave
cmp
or
xlat
add
popf
sub
pop
popf
sbb
or
sbb
arpl
lds
sbb
and
cmp
pop
xlat
lock
jbe
loop
cmpsl
andb
sub
mov
sbb
lds
out
mov
push
inc
mov
mov
or
in
sub
ljmp
add
enter
xor
pushf
or
test
inc
push
shll
aaa
inc
fldz
int3
out
pop
imul
push
shl
call
sub
int3
or
mov
xor
jb
shlb
mov
xchg
mov
inc
lods
ror
adc
es
fildll
dec
mov
imul
xor
out
int3
adcl
push
mov
cmp
jno
and
jnp
and
and
cmp
cmp
aad
movsb
pop
push
out
pop
sbb
fstl
ror
jg
call
nop
sti
jnp
adc
xor
adc
ret
jb
call
shl
ret
iret
pop
rorb
push
inc
inc
cmp
push
test
push
inc
divb
lods
xchg
std
ja
mov
xor
sub
popa
ret
nop
clc
test
mov
inc
add
inc
aad
sysexit
xlat
loope
adc
ds
push
lods
nop
aas
push
inc
ss
cld
sbb
sub
into
pop
mov
popf
test
lcall
mov
pusha
call
test
ret
jo
mov
push
add
imul
shll
cmc
into
add
test
mov
out
or
popa
sbb
sub
or
xor
xor
inc
xchg
arpl
mov
or
dec
data16
push
pop
and
test
imul
pop
outsl
and
cmp
mov
ljmp
and
mov
je
fldt
pusha
xchg
test
jbe
adc
lock
test
jecxz
adc
inc
inc
fcmovnb
jne
shll
icebp
inc
mov
sbb
sti
sub
inc
xor
movsl
cmp
inc
jne
mov
sbb
cmc
daa
lahf
cld
pop
sarb
and
and
loop
cmp
mov
xlat
push
lea
ja
mov
leave
push
ficompl
das
or
push
xchg
adc
xchg
or
cwtl
lcall
inc
ret
dec
push
dec
jecxz
lods
jno
ret
notb
add
aad
adc
loope
and
mov
addr16
pop
push
dec
ljmp
sub
aas
xor
cmpl
movsl
fldenv
repz
in
lahf
xchg
xor
cmc
xor
loopne
int
loope
cmc
push
sahf
cmc
lcall
sbb
cs
push
inc
push
and
pop
sub
sar
iret
cltd
lret
push
sbb
dec
push
xchg
jnp
lods
push
out
ret
mov
and
jns
dec
insb
insb
jne
jns
mov
mov
mov
loope
lret
mov
sbb
xchg
adc
andb
mov
loopne
jae
in
and
mull
sbb
pop
movsb
mulb
stos
pushf
add
inc
stos
mov
ret
sbb
pop
push
cmp
mov
scas
dec
mov
movsb
jecxz
and
push
insb
aad
or
or
mov
imul
fidivrs
mov
sti
enter
sub
mov
mov
mov
add
mov
push
test
test
jg
ljmp
dec
or
sub
js,pn
xchg
inc
adc
mov
and
and
sub
cld
adc
push
gs
insl
test
shrb
xchg
shll
or
dec
jecxz
hlt
or
data16
mov
cmp
call
std
jecxz
addr16
cmpsb
popf
sti
insb
push
rcrl
sbb
sti
pop
shl
and
insb
mov
out
addr16
jnp
aad
rcll
setl
xchg
mov
push
mov
cmp
xchg
pop
pop
pop
pop
or
xor
clc
inc
movsb
push
mov
dec
adc
xchg
sub
sub
idivl
jecxz
or
jbe
sbb
int3
and
sbbb
call
pinsrw
div
mov
sbb
mov
das
add
lods
jmp
imul
adc
adc
popf
cmp
inc
add
repz
mov
dec
xchg
or
inc
mov
pushl
mov
pop
shrl
dec
cmpsb
mov
enter
jb
repz
cs
jno
stos
or
bound
mov
dec
cmc
add
inc
pusha
es
sbb
jg
sbb
ljmp
xor
fisubrs
aas
xchg
cmp
and
jno
aaa
mov
in
push
and
repnz
sub
xchg
dec
hlt
or
pop
insl
mov
mov
inc
out
arpl
and
test
cld
mov
pop
xchg
xor
inc
rolb
jle
andb
leave
repnz
test
call
fcoml
lods
rcrl
mov
vdivss
sbb
dec
mov
jns
pop
fisubrs
pop
scas
aad
cwtl
mov
dec
sub
xor
imul
lahf
mov
cmp
and
ret
or
movsl
fsubs
sti
fnstcw
cwtl
sbb
je
push
push
mov
fcmove
add
xor
shrl
stos
and
jnp
xlat
pushf
xchg
mov
jb
push
fisubl
add
testb
fnsave
pop
nop
addr16
daa
inc
dec
pop
mov
inc
mov
stos
mov
clc
mov
mov
jl
leave
adc
sub
cmp
std
pop
aad
pinsrw
adcb
mov
xchg
pop
mov
inc
leave
jb
addl
mov
sahf
pop
ja
jg
bound
xchg
pop
into
jo
stos
out
in
adc
jge
adc
in
jnp
adc
testl
mov
or
es
lods
xchg
stc
popf
dec
lock
mov
mov
and
sub
sbb
and
inc
das
es
shrb
fmul
xor
mov
dec
inc
adc
addl
repnz
test
jp
sub
push
push
or
sub
ds
mov
popf
ss
leave
jecxz
mov
fwait
cmp
pop
fwait
sub
mov
in
push
cmp
mov
mov
stos
sub
into
jb
pop
and
and
fidivrs
hlt
mov
test
sar
push
inc
lret
add
in
hlt
jne
mov
push
pop
inc
sbb
mov
sti
stos
xor
adc
dec
lret
cmpsb
xchg
loope
roll
lods
pop
test
loope
fstpl
lods
mov
test
and
out
mov
cwtl
pop
mov
add
lds
dec
sahf
and
ret
dec
fcomps
xor
mov
xor
bound
inc
mov
inc
enter
jle
shll
push
and
fdiv
dec
cmp
repnz
movsb
xor
pusha
loopne
lds
sbb
adc
roll
xchg
cld
loope
pop
repz
ss
and
add
and
mov
push
addr16
les
dec
or
clc
cmp
nop
or
ljmp
dec
add
rorl
aas
mov
add
inc
fsubl
outsl
dec
dec
insb
lahf
xlat
sbb
jl
push
insb
ret
fistps
xchg
mov
and
mov
cmp
sbb
cli
jns
shll
hlt
inc
dec
imull
fdivr
inc
xchg
xchg
cmp
fcompl
mov
pop
and
rclb
stc
cmp
and
adc
dec
xchg
in
push
test
int3
jp
int3
mov
frstor
lds
lea
xlat
popf
push
stos
pop
xor
and
fdivrl
dec
shll
inc
data16
ret
xor
movsb
or
repnz
lods
sub
add
repnz
dec
dec
pop
xchg
stos
dec
xor
lcall
addl
roll
push
cli
das
jbe
mov
pop
sti
adc
or
pushf
adc
dec
icebp
cmp
movsb
mov
nop
aad
xorl
xchg
cmp
sbbb
sbb
loop
mov
lret
imul
out
inc
cmp
ds
jecxz
loopne
popf
push
pop
loop
mov
roll
sub
cmp
loope
fstpt
push
std
into
adc
push
into
jns
sahf
stos
adc
inc
pop
out
mov
loopne
pop
mov
and
inc
sub
int3
popa
fsqrt
jno
mov
adc
inc
adc
sbb
icebp
push
aad
sub
push
xchg
xor
icebp
pop
xor
adc
sahf
mov
xlat
jbe
dec
fwait
pop
cmp
push
pop
mov
xor
push
inc
movb
test
pop
fidivrs
rcr
add
sbb
notb
or
test
adc
ss
and
gs
sub
mov
inc
in
cmp
jp
ficompl
jge
mov
shlb
std
cmp
cmc
adcl
aad
mov
push
arpl
leave
sbb
cmp
fsts
mov
int
mov
push
into
ljmp
das
int3
cmpsb
xchg
add
mov
inc
xchg
lock
out
mov
shll
test
movsb
xor
mov
push
mov
out
outsl
push
dec
into
bound
and
mov
jge
push
jge
add
jecxz
push
loopne
jbe
adc
leave
and
repz
sub
dec
andb
adc
arpl
xchg
or
sub
ret
add
cmp
lahf
mov
sub
jmp
sub
flds
fimull
fisubrs
arpl
or
inc
gs
into
inc
pop
sbb
or
mov
xchg
adc
sbb
push
or
sub
cmp
pop
imul
loopne
inc
pop
xor
jl
xchg
pop
dec
pop
mov
in
push
and
popa
sti
pusha
xchg
aas
out
insb
and
dec
pop
cmp
add
jae
pop
xor
pop
jbe
or
pop
shr
les
sti
lahf
in
out
pop
xor
sub
xor
js
leave
jge
aad
dec
out
js
cmp
push
aad
fimull
inc
adc
pop
sbb
mov
outsl
cli
ds
repz
cmp
mov
imul
mov
rcl
xlat
cmpsb
dec
test
dec
enter
xor
pop
dec
xor
bound
dec
dec
fmull
jl
les
sub
outsl
cwtl
xlat
push
leave
inc
dec
loope
adc
jge
add
out
aam
inc
lock
xchg
testl
addr16
or
imul
push
stos
add
rorb
pop
pop
mov
inc
dec
lret
in
std
add
leave
idivl
xor
scas
pop
mov
sbb
fnstsw
inc
daa
cld
ret
test
out
imul
hlt
iret
sbb
push
lcall
rcrl
cs
jno
push
sbb
out
test
shlb
scas
sbb
mov
sub
insl
stos
mov
mov
mov
cmp
mov
aas
testb
dec
inc
insl
xchg
leave
lret
jle
addl
lahf
jp
mov
pop
sti
inc
repz
fiaddl
dec
jae
dec
and
insl
cmp
addb
cmp
das
lahf
mov
xchg
sub
mov
adc
jns
iret
aas
jge
scas
and
pop
lahf
jno
enter
test
aaa
jae
push
int3
push
mov
push
xchg
push
cwtl
gs
xchg
or
mul
dec
xor
mov
andl
mov
cltd
sbb
dec
and
mov
mov
iret
lock
sbb
xor
push
loope
dec
mov
loopne
pusha
inc
pop
movb
leave
out
sub
imul
jge
push
mov
das
inc
cli
push
shlb
hlt
iret
mov
mov
sub
loopne
mov
push
sbb
js
cmpsl
leave
mov
jecxz
mov
mov
repz
fadd
pxor
xchg
lahf
or
pop
jmp
loope
pop
fstps
dec
mov
fistpll
jae
sub
cltd
pop
cmpsl
adc
aaa
test
into
adc
push
pop
xchg
or
and
jbe
fdivs
movsb
pop
stos
call
pop
iret
mov
sbb
movsb
adc
adcl
mov
push
add
jmp
xchg
aaa
jnp
or
scas
fcomps
cs
clc
ljmp
lods
js
loope
lcall
or
jmp
jno
daa
or
adc
xor
outsl
push
and
pop
push
cmc
push
insl
xchg
fisttpll
dec
cmp
cs
or
lods
jl
ds
enter
ret
iret
mov
push
je
or
xchg
loop
xchg
icebp
lods
movsb
pop
push
xchg
sub
jbe
flds
addr16
push
test
push
sub
es
fadds
repz
les
fnstenv
xchg
xchg
add
in
or
pop
test
push
loopnew
xchg
sub
aas
add
ret
inc
sbb
lret
movsb
or
mov
imul
into
and
dec
ja
in
rclb
orl
adc
sbb
sbb
test
aas
push
lret
jno
jnp,pt
sub
cltd
mov
sub
punpckldq
lahf
mov
mov
pop
aas
lret
mov
pusha
push
adc
int3
jno
dec
fidivs
adc
add
push
aad
lea
xchg
sar
inc
xor
and
and
mov
enter
arpl
pop
stos
inc
fst
dec
mull
add
xchg
repnz
lods
jl,pn
sar
mov
gs
lea
pop
negl
pop
xchg
xor
test
gs
push
sbb
shl
or
push
out
mov
inc
mov
and
outsb
mov
mov
jecxz
sub
bound
test
sub
pop
pop
or
sub
icebp
popf
or
or
mov
rolb
arpl
xor
or
lahf
xor
and
je
imul
cmp
inc
push
hlt
push
arpl
pop
pushf
sar
mov
pushf
mov
pop
pop
aas
push
mov
loop
enter
push
mov
insl
mov
mov
jb
add
push
mov
mov
pop
cmp
lcall
fcoml
mov
out
xchg
pop
lods
add
fstpl
fisubs
loopne
ja
notl
mov
std
pop
sub
dec
popa
xorl
popf
or
vpmacsswd
call
xchg
and
and
cmp
sbb
sbb
std
push
shr
imull
mov
leave
jo,pt
and
cmp
jns
mov
lret
inc
add
repz
addr16
sub
mov
push
scas
test
sub
ds
mov
or
jb
ret
int
loope
jns
sub
add
repz
fs
sbb
mov
cmpsb
mov
out
mov
mov
fistpl
out
mov
mov
jle
pop
sub
dec
mov
leave
mov
dec
mov
andb
jo
dec
mov
push
ret
cmpsl
call
fcompl
into
cmp
sahf
mov
lods
testb
sbb
lcall
inc
cmp
xor
inc
fcomi
cmp
adc
es
nop
aam
rclb
clc
popf
outsb
rclb
lds
mov
mov
mov
mov
or
push
pop
push
cld
jl
mov
jmp
xor
xor
leave
pushf
sub
xor
cld
xchg
stos
cmovg
daa
cmp
push
out
dec
in
out
push
jbe
enter
mov
jnp
fwait
test
mov
add
or
scas
into
mov
dec
adc
aaa
jp
pop
arpl
cmp
mov
sub
cmc
aad
fs
daa
rorl
ljmp
xor
mov
stc
fiaddl
out
test
iret
ja
push
xor
and
pop
sahf
xor
ret
adc
and
cmp
mov
sub
pop
sbb
ror
xor
inc
push
xor
daa
push
or
out
add
call
icebp
or
mov
adc
ss
sbb
imul
mov
adc
inc
xchg
popa
pop
aaa
inc
sbb
cmc
sub
loop
shrl
xor
outsb
scas
sub
and
jp
and
jmp
imul
inc
xor
or
mov
loopne
cmpsb
mov
cwtl
mov
adc
jo
jne
mov
into
mov
and
gs
pop
pop
rcll
and
mov
or
xchg
ret
jnp
add
out
test
mov
and
nop
adc
jg
mov
ffreep
xor
lret
addr16
testb
pop
push
arpl
jmp
loope
and
jo
mov
adc
add
mov
lret
mov
das
mov
xor
add
adc
hlt
pop
int3
nop
pop
scas
sahf
icebp
clc
add
mov
cs
pusha
push
dec
sub
outsb
jns
push
insl
and
add
sbb
mov
aas
mov
loop
aad
fpatan
mov
jg
stos
cmp
inc
xor
jecxz
mov
rcr
dec
mov
icebp
scas
and
clc
cmp
and
jns
and
inc
push
inc
stc
add
rcll
ss
sub
repnz
repz
cs
add
rorl
dec
xor
in
or
cwtl
adc
popa
sub
mov
push
lret
cmp
ror
push
jmp
hlt
arpl
stos
mov
aam
lahf
fsubrs
ds
add
mov
not
daa
addb
push
mov
dec
dec
adc
push
jb
fildll
ds
loop
inc
sti
sbb
rorb
inc
mov
in
sti
mov
pop
addr16
inc
lea
mov
jp
cmp
pop
pop
push
xchg
cmp
fucomp
pop
in
idiv
rclb
aaa
imulb
nop
sahf
add
push
mov
cmp
faddl
out
ja
insl
int3
pushf
cmp
pop
xor
shlb
mov
xor
stc
pop
mov
xchg
pop
test
push
fbld
cmp
leave
pop
jl
xor
adc
adc
inc
mov
testb
mov
cmp
ja
sahf
sarb
ja
test
mov
aam
out
lods
xor
jo
imul
int
jne
loopne
add
or
or
dec
jbe
das
sub
fdivrp
mov
or
movsl
dec
dec
push
cmpsb
mov
repz
fsts
push
cmpsl
xor
pushf
pushl
and
idivl
adc
sub
popa
or
mov
loop
xchg
mov
in
maxsd
in
inc
leave
mov
fs
mov
push
addr16
pop
jb
adc
int3
int3
xchg
mov
inc
cmc
scas
popf
ds
mov
out
or
jne
push
push
call
mov
mov
shrd
shr
shr
xor
push
xor
mov
jmp
jl
in
sub
adcb
sbb
or
sub
push
push
pop
daa
pop
adc
out
insl
fsubrl
jns
and
mov
inc
rcll
push
sbb
mov
xchg
and
xor
in
xchg
clc
int3
pop
popf
inc
pop
mov
and
cs
cld
xor
mov
out
js
inc
and
jno
cli
ja
inc
nop
popf
push
aad
dec
test
push
mov
rorl
jl
cli
lods
dec
out
push
sbb
mov
lds
or
jecxz
mov
fabs
fmuls
stos
pusha
inc
cltd
insb
lret
mov
leave
xor
aaa
rorb
jl
push
aad
inc
xchg
inc
xchg
cmpsl
popf
fcoml
adc
sarb
add
fnsave
sbb
pop
enter
hlt
pop
mov
aam
and
xchg
push
inc
adcb
adc
push
insb
cs
imul
or
and
test
jno
dec
neg
pop
push
rol
mov
adc
stos
and
out
jge
cltd
add
xlat
sub
shr
in
test
lock
sbb
xor
sbb
pusha
sub
or
cli
fsubrs
sbb
xor
sub
imul
bound
xor
ljmp
clc
mov
pushf
daa
pop
push
out
push
mov
sbb
in
push
insb
sub
mov
jne
jns
jo
xchg
dec
mov
mov
mov
jg
jmp
add
cmp
pop
sub
sub
outsl
je
movsl
cmpsb
jle
sti
test
dec
enter
fs
lea
jmp
sbb
mov
movsl
stos
insb
hlt
push
mov
stos
pop
mov
call
lret
jae
insb
int
pop
and
fbstp
mov
enter
lock
mov
jae
jmp
pop
sub
adc
sub
lret
lret
fnstsw
jno
movsl
cltd
push
daa
cmc
bound
push
add
mov
bound
fists
xchg
xor
aaa
xorb
cmc
out
lock
dec
pop
push
pusha
inc
out
test
jg
shl
push
or
push
dec
ficomps
xor
xchg
cmp
jo
pop
push
cmp
pop
mov
push
daa
xchg
mov
and
inc
leave
push
leave
push
pop
hlt
out
call
outsb
mov
pop
pusha
jno
lock
in
fsubrp
popa
pop
andnps
dec
xchg
inc
and
clc
fistpll
jmp
dec
call
add
mov
ljmp
test
add
mov
enter
aaa
xor
mov
int3
icebp
push
imul
das
dec
jg
jbe
mov
and
stos
sbb
cwtl
bound
xchg
mov
cs
sbbl
popf
daa
jmp
mov
lods
xchg
icebp
push
adc
scas
cmp
loopne
fwait
in
inc
dec
add
jmp
lret
adc
xor
xor
sbb
jle
sar
jmp
push
fimull
aas
dec
aas
sahf
push
pushf
dec
sub
clc
push
sbb
push
push
popf
push
bound
fsub
pushf
xor
xchg
test
in
js
jg
pop
or
hlt
add
xorl
mov
imul
adc
mov
hlt
mov
and
sub
sbb
cmp
jb
push
scas
jnp
movsb
or
sbb
cli
adc
mov
data16
adc
out
std
or
gs
leave
adc
mov
fwait
notb
add
shrl
add
aaa
pusha
rclb
leave
push
add
jmp
pusha
adc
mov
jge
aam
adc
push
ds
std
fs
jmp
icebp
sub
add
cmp
sbb
pop
iret
cmp
sbb
sub
sub
xchg
ja
mov
jne
ss
cmpsl
inc
push
into
jle
push
cmpsl
out
lret
out
pop
xchg
ja
stos
int
cmp
cmp
les
inc
daa
pop
mov
xlat
dec
jmp
fimull
cmpsl
xchg
dec
rcl
mov
mov
addb
mov
mov
scas
int3
cmp
dec
addr16
push
je
push
jle
mov
mov
pop
aas
data16
push
jno
dec
mov
dec
addr16
and
or
jne
sbb
sti
loopne
add
adc
ja
test
ret
adc
xor
xor
shrl
ljmp
imul
int
ficoms
sub
mov
daa
out
sbb
adc
xor
mov
insl
insl
push
jae
xchg
shlb
jmp
mov
xchg
xchg
pop
loopne
mov
data16
push
jmp
cltd
sub
cli
and
sub
inc
xchg
out
sbbl
xlat
ss
fsts
push
pop
jg
xor
or
aaa
outsl
adc
ret
pusha
adc
and
outsb
dec
inc
sbb
dec
rcrl
jecxz
or
outsb
movsl
aad
or
imul
cld
popf
cmp
aad
jmp
sub
cmc
push
xor
or
cmp
jle
test
popa
daa
stos
inc
std
cmp
adc
ret
rcll
aas
into
cwtl
jns
cli
xchg
cmpsl
inc
cld
pop
negb
inc
loop
push
enter
pop
jecxz
mov
std
cld
pop
and
jmp
push
in
adc
lods
push
sub
adc
jnp
sub
arpl
jmp
daa
mov
adc
cld
and
pop
aas
aas
mov
sbb
setle
inc
pop
cmp
jno
sbb
pop
loope
outsl
pop
ret
xchg
mov
leave
inc
sarb
imul
mov
inc
sub
inc
xchg
out
popf
mov
fistpll
scas
in
jne
repz
lods
icebp
out
and
rclb
lea
iret
loop
inc
call
ljmp
das
push
adc
xor
clc
jl
sti
rcl
add
pushf
add
mov
xor
lea
hlt
or
in
add
push
loope
stos
or
xor
mov
fucomip
sbb
arpl
fidivs
push
incl
mov
pop
ret
testb
and
jmp
cmp
roll
mov
icebp
aaa
hlt
ficoms
jno
call
fstps
pop
jle
pop
fs
jl
shll
outsb
mov
test
mov
cmc
jp
test
cmp
not
arpl
mov
decl
insb
pop
jmp
dec
int
shlb
mov
inc
inc
jae
cmp
mov
dec
cmp
mov
xchg
push
fildl
and
push
scas
jg
lods
xor
sub
lock
jle
sub
stos
lods
daa
jo
lahf
lods
lds
das
mov
xchg
inc
fcmovnb
push
outsb
or
leave
adc
dec
lds
daa
push
cmp
dec
add
add
scas
int3
add
sbb
fs
add
cld
std
push
dec
or
dec
rcll
ficoms
jmp
jecxz
mov
insb
setns
out
lret
jbe
fwait
hlt
pop
sub
sbb
jge
dec
stos
call
popa
sahf
adc
xor
outsb
data16
andl
and
push
xor
js
cmpsl
jb
mov
lea
lret
popf
repz
push
movsl
and
dec
sbb
into
aam
sti
xchg
sarl
imul
mov
mov
cmp
dec
sarl
mov
dec
jnp
sub
pop
push
in
sbb
jb
orb
cmp
cli
adc
add
int
dec
and
insb
push
in
repnz
popa
mov
das
fimull
pop
or
es
mov
or
jmp
cltd
out
push
pop
inc
inc
cmpsl
shl
mov
jnp
lcall
mov
ds
jge
imul
mov
inc
or
or
adc
lcall
xor
inc
push
ds
cs
xchg
or
sub
movsb
pop
lret
in
pop
inc
pop
lea
inc
inc
jnp
pop
fdivs
outsl
scas
in
sub
call
jle
daa
sarb
gs
cmp
sbb
dec
pop
or
in
loopne
pop
cli
jecxz
shr
fistps
xchg
sbb
mov
repz
jo
pop
or
sbb
insl
sbb
repz
jg
test
sbb
sub
nop
imul
push
pop
lods
and
adc
mov
xchg
xchg
cltd
mov
aas
in
pop
and
insl
mov
xor
inc
loope
cmpsb
loop
in
call
push
sti
loopne
cwtl
xor
hlt
fnstenv
add
lds
fildll
pop
adc
inc
mov
dec
test
je
xchg
insb
lcall
lcall
test
xor
fisttps
mov
mov
mov
xchg
xor
or
xchg
xchg
add
test
mov
sbb
push
push
imul
xor
cmc
adc
outsl
xorl
shlb
cld
mov
jg
pop
xor
adc
xor
mov
filds
lods
arpl
push
push
or
movsl
xor
sub
inc
out
cmc
js
cmp
es
pop
jno
das
std
xor
call
inc
aad
ret
push
stos
xchg
insl
stos
jg
push
add
mov
dec
push
rolb
add
out
iret
enter
mov
and
jl
pop
adc
ret
aaa
es
jo
push
cli
cmp
xor
sti
jge
sti
jg
lods
add
lret
push
lods
es
xor
jl
add
test
inc
mov
mov
jbe
outsl
sbb
lods
hlt
outsb
cmp
andb
insb
mov
lret
mov
imul
mov
stc
sub
sbb
int
pop
jecxz
repz
shl
notl
cli
mov
adc
imulb
cs
sub
pop
sub
ficoml
jmp
and
cmp
scas
push
clc
das
filds
fiaddl
jns
dec
idivl
or
mov
imul
jb
sbb
dec
sbb
mov
andb
adc
xchg
jl
or
lods
addr16
push
dec
pushw
pop
out
fstpt
adc
imul
fistps
out
cmc
add
jno
sbbb
adc
push
in
icebp
leave
adc
loopne
bound
inc
pop
sub
jae
rcll
push
xor
jmp
int3
mov
jecxz
outsb
xorl
add
jbe
ret
sub
mov
cli
jmp
loopne
je
mov
in
jle
mov
fstps
insb
mov
cmp
lcall
les
es
dec
jbe
mov
cmp
pop
in
out
stos
stos
fisubl
add
add
clc
in
or
jns
gs
mov
clc
sbb
fidivl
jge
jecxz
ljmp
je
pushf
sub
lahf
daa
push
pop
mov
mov
adc
fs
cmc
sbb
jle
fiaddl
and
push
push
and
stos
jne
int
rep
and
jmp
add
sahf
and
jl
cmp
out
not
outsb
getsec
out
stc
out
cmpb
add
xchg
cmp
inc
scas
ret
xor
out
out
push
lods
data16
push
sub
jbe
pushl
xlat
xchg
aad
xlat
add
mov
add
inc
movsl
rol
mov
testl
pop
pop
mov
dec
subb
pop
dec
push
bound
mov
pop
xor
fisubs
lahf
je
inc
inc
pop
repz
fs
cmpsb
push
cmpsl
mov
push
gs
lods
xor
arpl
sub
and
lea
fisubs
xchg
cmc
popf
mov
pop
aam
lods
out
ds
sbb
aam
cmp
leave
mov
xor
cld
and
sub
lcall
je
mov
ret
loope
enter
lahf
fs
orl
jmp
and
repz
ret
pop
mov
js
dec
in
orl
pop
fistps
ds
mov
cmp
push
sbb
inc
icebp
out
xor
xchg
nop
ds
mov
jb
pop
mov
inc
jecxz
fists
xchg
inc
cmp
gs
adc
enter
jne
outsl
pop
or
push
mov
sub
fcomip
bound
xor
push
cmpsl
addr16
and
in
stc
or
insl
scas
roll
push
mov
outsl
or
and
ficoml
lods
push
fcoms
gs
sbb
cld
insl
outsb
adc
jno
lods
jge
cli
ret
lods
scas
popf
arpl
xor
or
lret
pushf
xor
push
push
popa
xchg
cltd
push
adc
push
push
add
and
cmpsl
pop
push
xchg
outsb
sub
adc
outsb
repnz
adc
loop
mov
paddb
pop
insb
jle
hlt
xlat
sbb
movsb
jl
fstpt
sub
into
pop
addb
dec
int
cmpb
jmp
out
and
outsl
adc
outsl
lcall
movsb
fstpt
mov
inc
mov
mov
pop
jl
xchg
jp,pn
iret
xor
lcall
fs
sub
popf
repnz
incb
lods
jmp
dec
pop
mov
cmp
mov
sbb
jge
dec
xchg
sbb
int3
dec
aaa
inc
ret
xorl
mov
out
sti
inc
and
cmp
rep
pop
or
mov
cmpsb
addr16
into
mov
push
mov
xor
js
mov
imul
pop
cmp
dec
dec
outsb
inc
mov
sbb
xchg
xchg
inc
adc
orb
cmpsl
cmp
aaa
cmpsl
sub
popf
test
xor
cmc
loop
push
fidivs
inc
cmc
sarl
or
mov
fmuls
sbb
hlt
test
fstl
out
sbb
mov
push
data16
call
mov
or
mov
in
insb
jg
lea
andb
in
lods
and
out
cmp
nop
nop
xchg
decl
fistl
xchg
gs
mov
mov
popa
test
jle
ds
push
enter
push
ljmp
sub
pop
into
pop
sbb
mov
imul
push
stos
fcmovnbe
dec
nop
xor
pop
jno
jle
fcmove
lahf
loopne
adc
lcall
inc
out
movsl
in
and
pop
hlt
enter
fldl
je
jnp
adc
cmp
mov
outsb
loop
lock
rorl
push
jg
jle
jmp
fisttpl
push
subl
xor
stos
add
pop
xchg
rcr
fisubl
insb
mov
jns
dec
xchg
mov
jp
mov
int
xlat
lock
sub
fsubrs
rorb
mov
pop
fidivl
dec
fxch
scas
pop
pop
mov
inc
ffree
mov
jmp
popa
push
push
adc
and
arpl
dec
cmp
icebp
movsb
loop
sub
fildll
inc
mov
mov
add
mov
pop
adc
inc
loopne
push
push
psubd
fmul
pop
shrl
push
sbb
mov
mov
cmp
or
test
pop
add
aas
clc
aad
and
loop
mov
arpl
mov
test
cltd
add
jecxz
mov
out
loope
adc
mov
test
imul
sbb
xor
pop
push
inc
iret
aam
cmp
iret
mov
sbb
negb
jge
add
imul
gs
imul
js
mov
sahf
sbb
in
loop
sbb
insl
mov
and
push
mov
ret
lar
sub
mov
fxch
mov
les
mov
xor
icebp
adc
push
jmp
jmp
sub
adc
cmp
mov
ss
gs
loope
fldenv
dec
hlt
scas
push
icebp
xor
or
pop
test
push
inc
and
mov
hlt
mov
shrb
test
das
aas
les
lcall
pusha
xlat
out
ret
iret
out
xchg
adc
sub
sbb
adc
mov
in
cmpsl
jne
push
pop
adc
and
cmp
adcb
sbb
test
out
gs
jmp
hlt
addr16
sti
sub
cwtl
rorb
mov
or
cmc
sbb
repz
xlat
xchg
sbb
jns
jns
jne
mov
or
inc
cmp
es
jo
xchg
lods
das
jne
fdivs
add
lahf
ficoml
xchg
sahf
pop
out
fs
mov
xchg
lret
lock
notb
shl
ficompl
and
push
sbb
cmpsl
stos
into
fimull
and
clc
cltd
popf
fstpt
jbe
lds
fcomps
jns
xchg
jge
xchg
js
jbe
xor
add
out
lods
dec
mov
add
int3
stc
enter
in
jmp
sub
or
sti
fs
xchg
mov
inc
jne
cltd
mov
jmp
dec
mov
cmp
lahf
negb
xchg
sub
and
mov
insb
popa
sbb
mov
lods
xor
loop
cltd
pushf
ja
shrl
mov
jecxz
xor
mov
sub
xor
shr
imul
xchg
mov
pop
add
fisubrl
jmp
jl
xchg
xchg
jns
pop
and
mov
adc
sbb
hlt
adc
ja
xchg
fs
xor
xchg
mov
cmc
inc
loop
ret
jb
mov
in
or
xchg
pop
cmp
adc
jns
jle
jmp
ret
mov
divl
jg
jnp
jo
sub
ss
or
inc
movsb
or
mov
jl
dec
xchg
or
push
or
pop
or
mov
jae
ss
mov
sub
lea
jp
popf
pushf
outsb
jnp
dec
flds
testb
mov
adc
inc
scas
jmp
stc
jle,pn
dec
lods
xchg
repz
push
iret
jge
and
xor
cmp
rcrl
adcb
out
xchg
dec
mov
and
insl
mov
push
mov
jl
mov
aad
jbe
jg
mov
sbb
nop
xor
sbb
aaa
cmc
mov
testl
out
mov
cwtl
xchg
mov
repnz
xchg
insl
cmpb
pop
push
jg
mov
in
mov
ja
sub
addr16
inc
mov
fwait
xchg
mov
push
jns
stos
and
adc
add
sub
push
xchg
jne
frstor
mov
cltd
neg
nop
int
xor
imull
hlt
movb
cmpb
dec
cmc
inc
insb
add
push
inc
mov
clc
cmp
jmp
mov
jecxz
push
or
mov
adc
flds
imul
xchg
pushl
inc
cmpsb
int3
sbb
dec
loop
jno
in
jle
xchg
mov
aas
pusha
mov
and
stos
les
movsl
xor
xchg
shl
add
mov
je
cli
xchg
mov
aas
mov
call
pop
sbb
hlt
in
mov
lods
roll
push
sbbb
aam
fscale
shl
aaa
sti
pop
mov
sbb
cmc
sbb
cltd
pop
push
seto
in
adc
imul
sbb
pop
sbb
pop
xchg
and
aas
inc
or
mov
mov
adc
xlat
inc
adc
mov
fwait
leave
pop
icebp
sub
ss
loope
xlat
or
and
jbe
inc
lcall
jge
out
fisubl
inc
ret
inc
or
or
divl
pop
xchg
pusha
add
or
add
leave
bound
cwtl
xchg
stos
mov
movsl
mov
dec
es
sti
incl
lahf
mov
jbe
jge
movl
xchg
and
or
outsl
jg
testb
pop
test
dec
sub
ds
dec
sbb
sbb
or
push
shlb
ret
int3
xchg
jnp
jecxz
ljmp
movswl
pusha
and
mov
stc
dec
xchg
rcrl
mov
scas
js
mov
cwtl
cmpsl
hlt
js
adc
popa
fwait
cmp
cmp
leave
xor
mov
push
sbb
rorl
xchg
cmp
jns
in
xor
adcl
loope
in
mov
mov
sub
mov
push
xchg
xor
xchg
scas
sbb
add
std
push
cltd
push
dec
sbb
sbb
or
into
pop
pop
inc
call
mov
rcll
xor
icebp
mov
push
gs
mov
push
adc
loopne
add
mov
fidivrs
addr16
add
or
scas
rcrb
scas
push
andl
jnp
or
ljmp
rolb
fs
or
and
sahf
xlat
pop
add
out
xlat
test
je
mov
sub
jae
adc
pop
adc
stos
and
mov
xchg
shrl
shlb
xor
jbe
push
lea
jp
imul
rcrb
outsl
fnsave
movsb
les
movsb
xchg
dec
test
iret
and
dec
dec
outsl
jecxz
cmpl
push
jmp
dec
xchg
adc
cmpsb
in
inc
in
pop
ss
ss
dec
or
xchg
out
repz
adc
fistpll
arpl
ficompl
and
pushl
out
lods
xorl
mov
push
mov
clc
fs
insb
cmp
mov
in
ds
xchg
shrb
hlt
dec
xchg
sbb
stos
sbb
mov
sahf
ja
in
idivb
lahf
icebp
or
js
cmp
fisttpll
mov
inc
pop
dec
mov
lds
pop
mov
pop
xor
adc
adc
out
push
ret
jo
outsb
mov
outsl
daa
sbb
jnp
into
shll
mov
adc
jecxz
inc
pop
aaa
or
push
rsqrtps
dec
mov
jae
xchg
mov
and
xlat
jge
inc
push
inc
inc
xor
jo
les
dec
adc
adc
movsb
mov
ret
lea
in
pushf
push
into
push
sub
jo
adc
incl
movsb
dec
mov
jb
dec
push
divb
adc
inc
das
lock
stos
imul
imul
nop
daa
push
xchg
or
xor
js
inc
and
lahf
push
inc
repz
pop
daa
and
sarl
loopne
rolb
addr16
inc
mov
ja
and
xchg
sbb
cltd
mov
nop
fsts
jle
imul
and
addr16
push
inc
loope
aas
shrb
add
or
push
ror
in
lock
test
mov
lock
jae
xchg
pop
in
adc
lahf
xor
dec
or
mov
loop
lcall
sahf
xchg
hlt
ret
cltd
sahf
rep
fs
inc
push
mov
sahf
das
lahf
or
ret
add
push
aad
push
rcl
sbb
and
std
in
inc
pop
es
jle
pop
xorps
adc
outsl
and
inc
sub
xchg
test
fnstcw
mov
in
lods
mov
pop
add
paddb
pop
ds
mov
sbb
add
leave
out
pop
add
scas
into
popf
jae
xchg
dec
imul
pop
ret
mov
mov
and
daa
sub
push
outsb
sbb
mov
jecxz
fisubl
insb
loope
mov
dec
sbb
das
inc
pop
sub
inc
movsb
fnstcw
xchg
inc
mov
mov
faddl
jge
loop
test
xchg
pop
cmp
inc
lds
hlt
hlt
stos
lods
std
jmp
rcl
in
ret
jo
cmpsl
fcompl
jle
test
dec
and
in
out
pop
aaa
rcrl
lods
imul
jne
sbbl
lahf
daa
sahf
outsl
mov
pusha
ljmp
rcrl
mov
int
stos
or
or
leave
add
push
bound
pop
cmp
mov
adc
mov
in
and
mov
fs
pop
adcl
xchg
mov
clc
nop
aaa
push
mov
stos
jle
push
inc
into
adc
sbb
jg
fwait
jo
and
inc
cs
stos
pop
pop
sti
cli
je
hlt
sbb
out
inc
mov
hlt
gs
push
push
cmpsb
lret
xchg
adc
mov
ret
scas
inc
pop
stos
and
or
jmp
jno
jmp
push
jp
andb
xlat
dec
mov
stos
push
adc
fadds
mov
xchg
mov
jno
add
mov
enter
sarl
decb
mov
test
push
inc
mov
enter
movsb
clc
jbe
push
cli
in
stos
imul
jmp
or
sysret
sbb
mov
jmp
shrl
cmp
pop
sub
out
loop
jne
decl
call
xor
mov
push
inc
loopne
or
pop
pop
or
les
sbb
xor
mov
fildll
rcrb
pop
mov
jo
or
sub
jno
aad
push
lret
mov
cmp
arpl
adc
xor
xchg
jno
mov
leave
jge
mov
mov
ret
scas
add
mov
in
add
pop
repz
pop
iret
sub
fisubs
push
xor
mov
adc
mov
movsl
lcall
out
sbbl
ljmp
cltd
div
xchg
mov
jl
cmp
mov
jb
test
je
mov
divl
iretw
add
xor
ljmp
icebp
jg
ljmp
add
int
sahf
lds
or
xlat
push
adc
test
adc
mov
call
stos
fistl
call
gs
fcoml
mov
int
or
mov
xchg
shlb
mov
aam
outsb
jge
test
or
sub
pop
enter
scas
pop
add
mov
mov
lods
inc
push
aas
mov
and
loopne
daa
lods
mov
or
cmp
insb
lcall
lds
ss
add
pop
fsubrl
mov
xchg
mov
or
jl
nop
jne
xchg
mov
push
lds
jle
lahf
outsb
sti
jle
fmull
movsl
mov
pop
or
cli
xor
cmp
pop
mov
sbb
insl
adc
lock
movsl
data16
sub
test
mov
ljmp
cmpsl
or
sub
arpl
inc
sub
insb
push
fcomps
movsl
cmp
push
mov
pop
sbb
mov
sbb
adc
fsubs
sbb
movsb
adc
stc
je
xchg
or
xor
xor
es
scas
sbb
cmp
sbb
add
pop
push
scas
mov
mov
dec
ljmp
add
out
imul
sbb
and
call
rorb
int
cmp
mov
lea
xchg
xchg
aas
xor
mov
pop
stos
ljmp
xor
add
push
inc
pop
push
push
imul
adc
movb
dec
pop
pop
pop
test
lods
add
push
call
xchg
out
mov
xor
es
out
sbb
lds
jecxz
push
jb
mov
out
xchg
mov
xchg
and
push
punpcklbw
push
test
lahf
bound
inc
hlt
adc
fcomp
in
lcall
mov
jmp
fsubs
out
pop
add
jecxz
push
leave
sub
stos
test
adc
dec
mov
mov
stos
fistpl
mov
jns
mov
pop
inc
mov
popa
pop
orl
gs
orb
loope
xchg
mov
xor
in
leave
lret
inc
and
push
insb
js
push
mov
scas
xchg
fildl
mov
cmpsb
stos
push
stos
pop
add
or
xchg
jbe
sub
pop
cmp
pusha
cmpsb
pop
mov
push
cmpsl
lret
out
fucom
xor
int3
xor
push
shlb
add
mov
loope
insb
mov
cmp
fs
sub
pop
stc
mov
push
push
stos
pop
sarb
cmp
stc
push
inc
pop
adc
mov
hlt
jmp
sbb
mov
stc
mov
add
jae
aaa
lds
sub
xchg
or
mov
jmp
ljmp
jae
dec
cmpsl
mull
xchg
inc
mov
push
call
cmp
cli
xor
and
or
jbe
mov
or
dec
xor
and
mov
scas
cmc
or
clc
jmp
and
push
mov
mov
push
push
push
call
shld
mov
xor
or
mov
mov
shl
or
xor
xor
xor
xor
mov
mov
jmp
mov
add
mov
mov
mov
mov
mov
mov
movzwl
cltd
jmp
dec
inc
aad
push
pop
movsl
sbb
les
mov
xlat
push
push
sub
scas
faddl
call
cmp
aaa
and
xor
inc
out
sub
pop
mov
es
in
les
lahf
insb
jb
push
dec
ret
jle
lods
mov
pop
inc
in
adc
enter
fucomp
pop
xchg
loope
lret
mov
pop
fxch
or
mov
sbb
mov
adc
jg
outsb
aas
dec
xor
pop
pop
inc
mov
mov
into
ret
dec
rclb
gs
dec
jmp
pop
push
sub
scas
in
les
add
orl
lret
push
push
adc
in
mov
xchg
push
mov
call
xchg
mov
jmp
in
sbb
xor
mull
out
mov
sahf
fcoms
sbb
or
pop
mov
adc
push
mov
enter
mov
cmp
es
inc
jle
mov
mov
cs
call
jge
jae
sahf
mov
fisubl
push
jmp
cmp
pop
div
push
push
rcrb
imul
and
jae
add
dec
xlat
inc
cmpsb
leave
cmpsb
insb
gs
divl
aaa
pop
mov
sbb
in
xchg
mov
stos
repz
ret
add
sub
stos
inc
mov
push
dec
test
xchg
sub
pushf
scas
jo
leave
inc
sub
xchg
xorl
sub
mov
sub
test
dec
lds
cwtl
lcall
jp
push
jle
leave
pop
inc
jnp
mov
and
sub
mov
mull
jmp
aas
pop
mov
xor
inc
xchg
jmp
mov
aaa
xchg
jnp
sbb
xchg
cmp
sub
loop
dec
hlt
add
shrl
xchg
mov
jmp
fdivs
lea
mov
xchg
sub
xchg
fwait
cmp
sbb
xchg
sbb
test
repz
sbb
pop
push
cmp
cmp
or
int
sahf
pop
in
icebp
movsl
fmul
add
xlat
subb
and
sbb
dec
in
cli
pusha
ret
out
nop
push
push
movsb
negb
call
cmp
jge
jns,pn
xor
and
inc
stos
addr16
cli
jmp
mov
leave
add
movsl
push
std
or
lret
mov
sarb
push
pop
cmp
imul
sbb
xchg
jns,pt
int3
jnp
rolb
inc
pop
lock
ljmp
sbb
mov
mov
mov
outsb
xchg
jge
popf
push
sub
and
icebp
mov
mov
push
fmull
push
jecxz
cwtl
adc
push
inc
movl
outsl
mov
loopne
insl
mov
test
and
outsl
pop
sbb
stc
jmp
imull
and
out
call
lret
xchg
cmp
lret
dec
ja
lock
xor
sbb
clc
jb
ja
fsubrs
test
fisubrs
lea
cmpsl
mov
aas
pop
into
push
jge
scas
dec
in
add
mov
xor
xchg
les
jno
in
jp
pop
les
fbld
pop
push
in
popf
inc
jg
test
js
sbb
in
sbb
data16
fstps
cmp
sub
inc
push
jmp
inc
les
movsb
ss
push
mov
mov
sahf
cltd
push
dec
dec
repz
pop
call
xlat
push
sbb
pop
testl
mov
push
into
or
ja
lret
sahf
out
sahf
or
jmp
in
in
sub
jae
repz
and
mov
daa
sbb
fwait
test
popf
popa
aad
jp
scas
xchg
cltd
pop
lods
cmovp
cmpsb
cmp
in
sbb
and
xor
sti
mov
sbb
xchg
outsl
es
dec
pop
xchg
push
dec
mov
sahf
orb
mov
jbe
push
add
dec
std
xor
stos
pop
lods
cmovnp
aaa
jae
pop
loope
test
dec
mov
add
ja
jns
fs
adc
mov
sub
and
adc
and
cld
push
hlt
jbe
lea
rorl
mov
xor
xchg
jbe
arpl
faddp
mov
pushf
mov
jp
in
adcb
cltd
cmp
in
pop
xor
cmc
cmp
jge
xchg
adc
and
add
stc
enter
les
mulb
dec
shlb
mov
add
sahf
scas
ret
aas
iret
int3
or
cmpsb
js
cld
iret
jg
dec
mov
das
ficomps
mov
stos
push
leave
sti
cmp
inc
scas
out
fisttps
ja
test
xor
xor
pop
and
add
movsl
rorl
fadds
into
cmp
cmpl
pop
rcrl
mov
mov
lds
push
dec
dec
outsb
mov
xchg
adc
movb
push
xchg
pusha
ljmp
sti
push
int3
cwtl
xor
and
mov
and
mov
aad
std
cmc
push
push
shlb
push
dec
jg
mov
mov
lcall
jmp
jmp
test
outsb
fiadds
push
xor
jb
adc
or
faddl
mov
subb
decb
gs
lods
jae
mov
mov
push
push
in
and
outsb
cs
jge
inc
mov
cld
shrl
fistpll
lret
mov
in
mov
dec
popa
jo
push
or
xor
sub
add
push
mulb
hlt
aaa
add
pusha
lods
push
jmp
sub
insl
xlat
int
pushf
in
pushf
sahf
stos
xchg
inc
inc
iret
cmc
add
jae
fs
lock
mov
or
push
in
push
rclb
stos
cltd
iret
mov
or
sbb
dec
sub
push
repnz
xor
bound
fists
in
or
ss
push
add
iret
lret
jp
js
sub
jb
push
adc
xor
jnp
in
cwtl
pop
shrb
sbb
fadd
pop
dec
mov
push
popa
mov
push
sub
nop
test
scas
mov
shl
hlt
push
mov
sub
lea
dec
and
inc
ja
iret
or
icebp
push
rclb
dec
mov
and
ror
daa
dec
mov
mov
dec
push
test
inc
jg
mov
push
jl
scas
into
push
negb
xchg
xchg
inc
add
sbb
shll
js
sub
idivb
adc
lcall
xor
jp
ss
mov
icebp
inc
loopne
push
pmaxub
xor
xor
lahf
dec
mov
outsl
into
mov
inc
pop
and
sbbl
and
aad
rol
xor
inc
repz
adc
repnz
testb
std
test
xchg
xchg
stc
cmpw
adc
inc
js
lock
xchg
in
pop
cltd
cmpsl
fwait
lods
ret
jl
inc
mov
outsb
mov
orb
lahf
dec
inc
and
sbb
insl
int3
fs
push
inc
shl
fdivrl
fcoml
add
dec
mov
es
nop
aaa
or
idivb
mov
lods
cmp
das
pop
mov
push
aam
stc
pop
pop
aaa
inc
jg
cmp
insb
inc
push
push
sub
lret
ljmp
ljmp
sub
js
lcall
and
mov
adc
xor
xchg
les
enter
out
add
fsubr
loop
and
sbb
pop
xchg
ret
xlat
mov
mov
add
int3
sbb
lcall
mov
or
add
mov
shl
and
lods
sub
daa
call
push
ja
or
mov
rcll
inc
in
adc
or
outsb
dec
aam
gs
scas
cltd
stos
ret
call
test
push
sbb
fdivrs
jle
mov
push
arpl
push
jne
pop
inc
cmp
jno
cwtl
in
jecxz
sahf
inc
loope
jns
nop
adcl
push
adc
sub
fsubs
test
push
pop
sarl
fcmovne
cmp
inc
lcall
bswap
int
in
add
xchg
sub
cmc
ss
outsb
xchg
pop
test
push
jl
cmp
push
insl
pop
insb
jnp
lcall
pop
jbe
ss
mov
sub
ja
mov
lret
pop
ljmp
or
inc
mov
mov
cmp
mov
push
addr16
mov
sbb
rcll
push
xchg
jns
lcall
outsb
dec
jecxz
daa
test
sbb
inc
cli
mov
dec
lock
add
int3
mov
movsl
cmc
inc
jge
aas
sub
and
popf
push
cmpsb
mov
sarb
xor
jbe
in
int
sub
imul
out
sub
pop
ja
nop
inc
les
rcl
pop
pop
test
push
sti
lods
cmp
adc
xor
jb
jle
mov
add
ret
sti
ret
call
es
xor
dec
stos
and
mov
out
mov
jae
sub
mov
pusha
xchg
mov
jp
add
push
lods
nop
sar
cmp
xchg
js
cltd
sbb
pop
outsb
aas
and
movsl
faddl
frstor
orl
mov
ds
xchg
jmp
rol
scas
jae
nop
nop
add
or
test
imull
shl
pusha
jb
add
sbb
notl
movsb
insl
aas
aas
mov
pop
or
cs
dec
scas
test
lds
subb
mov
dec
jns
test
ljmp
mov
movsb
outsb
fiadds
adc
testl
out
repnz
sub
mov
mov
imul
add
jl
and
aam
xchg
pop
cmpl
lods
push
jmp
dec
xlat
incl
jno
out
sbb
pop
clc
outsl
daa
add
nop
shlb
mov
mov
mov
cmpsl
dec
lcall
push
dec
inc
out
sub
xchg
jne
outsb
insb
aas
pop
push
les
idiv
ror
add
in
xor
stos
cli
pop
mov
xor
fstps
mov
cmp
insb
xor
push
xchg
mov
jae
fucomip
inc
mov
rolb
push
inc
cli
or
and
lcall
movl
and
jo
pop
adc
dec
jb
fdivrl
mov
je
pop
testl
adc
sbb
mov
adc
dec
cmp
cmp
lea
mov
fnstcw
cld
mov
pop
enter
xchg
aad
xor
sbb
sbb
pop
repnz
sarl
aas
xchg
inc
cmc
mov
scas
sub
and
add
sub
flds
int3
lahf
inc
mov
pop
hlt
xchg
jge
loopne
cs
pop
cmp
cmpsb
dec
jp
bnd
cli
ret
popa
ljmp
pop
mov
out
fisubrs
jl
enter
inc
rcr
jo
mov
pop
mov
pop
fucomip
cmpsb
notb
out
jno
mov
or
inc
mov
insl
mov
or
je
add
and
pop
idivb
into
pop
mov
jmp
call
mov
jns
jne
jns
mov
aad
aam
adc
cwtl
loop
loop
jns
mov
mov
shll
andb
add
dec
jmp
jns
inc
pop
xchg
add
cmp
sahf
arpl
push
insl
ret
cmc
clc
fisttpl
rol
icebp
mov
sbb
andb
ljmp
add
xor
mov
loopne
ja
daa
mov
lret
cmp
push
leave
jae
pop
cmp
test
movsb
mov
dec
roll
add
ret
ss
mov
ja
sti
and
xor
sub
pop
add
push
cld
mov
jp
xor
push
mov
iret
outsl
jle
out
cmp
adc
fdivrl
stos
lahf
adc
push
push
lods
jnp
jb
fwait
mov
ret
js
xchg
xchg
rorl
incb
xchg
push
mov
frstor
dec
cmpsb
insl
imul
jecxz
out
and
lcall
js
xlat
or
in
enter
in
xor
mov
in
fstps
pop
pop
sbb
push
jns
push
jne
cwtl
pop
inc
adc
adc
push
in
insb
mov
cmpsl
add
sti
lahf
scas
inc
dec
inc
es
mov
addr16
ret
xor
stc
test
mov
jne
movsb
push
jns
inc
data16
sbb
sbb
ffreep
cwtl
sbb
loopne
cmp
in
dec
jle
or
jl
dec
pop
imul
pusha
test
mov
add
ret
leave
cmp
fs
lcall
pusha
ds
xor
enter
xor
mov
mov
ss
jg
mov
in
je
mov
nop
xor
daa
int3
sub
adc
inc
cmc
inc
dec
aam
clc
outsl
repnz
sbb
adc
or
hlt
mov
loopne
imul
ret
ja
shll
xor
aad
add
hlt
ljmp
mov
sbb
cli
addr16
pop
sub
lods
pusha
dec
mov
cwtl
pop
fistps
fcoms
ret
cmp
add
in
fnsave
and
cs
adc
or
out
nopl
push
and
icebp
inc
adc
push
in
rorl
push
out
movsl
or
outsb
xor
repz
lret
jmp
lods
stc
mov
scas
inc
lock
cmp
jns
pop
sbb
cmp
mov
je
pop
xchg
or
stos
into
jle
mov
inc
push
fidivrs
lods
push
sub
xor
aas
jmp
pop
aad
repz
mov
mov
inc
cmp
subb
mov
addr16
test
or
lret
mov
push
mov
pop
add
sub
sbb
jae
pop
jg
sahf
mov
sbb
scas
mov
pop
xchg
sub
sub
shl
nop
jns
pusha
std
stc
inc
movb
rcll
addb
ljmp
fsubr
pusha
jne
mov
or
or
fnstcw
lea
jl
cmp
cmp
negl
out
sbb
lock
out
mov
sub
popf
mov
nop
repnz
pop
vminss
inc
pop
jp
xor
sbb
push
test
out
cmpsl
call
scas
daa
pop
pushf
xor
cs
repnz
and
mov
cs
xchg
xor
cmp
mov
and
adc
and
push
sub
and
sti
cmp
xchg
pusha
sub
fmuls
jnp
cmp
pop
lret
jbe
xchg
rcrl
dec
int3
mov
dec
xchg
or
mov
bound
pushf
addl
fdivrs
push
fadds
out
inc
push
frstor
movb
dec
xor
push
pop
dec
push
sbb
pop
dec
dec
sbb
xchg
mov
pop
daa
push
fs
xchg
adc
sub
mulb
and
js
shlb
loopne
pop
pushf
dec
aam
push
add
lahf
mov
scas
add
push
cmp
movsl
adc
dec
mov
sub
or
sarb
dec
dec
out
inc
setg
fdivs
cltd
sbb
jb
push
dec
mov
or
clc
adc
push
or
outsb
cmp
gs
cmpsb
cmp
and
test
jo
xor
jp
sbb
lahf
xorl
cli
into
bound
test
int
cmp
push
jae
inc
pop
and
adc
mov
push
mov
push
fsubs
test
fldenv
sbb
xlat
pop
mov
lock
dec
mov
mov
mov
xor
pop
jno
push
push
dec
stos
nop
sub
mov
cmp
push
sarl
mov
mov
sub
xor
cmpsl
jp
jmp
adc
lock
lods
ljmp
rcrb
and
or
das
scas
pusha
dec
push
jbe
popf
rorl
inc
sub
loop
or
fcmovnb
test
insb
scas
mov
out
or
jnp
repnz
cmp
hlt
add
xchg
sub
outsl
fdivl
inc
jge
sub
out
std
imul
mov
daa
mov
mov
rol
or
dec
pusha
adc
fs
inc
stos
scas
lea
test
pop
test
mov
addr16
testw
push
cmp
mov
scas
jecxz
jle,pn
std
push
sbb
sbb
add
ret
adc
cwtl
adc
mov
fnstsw
sbb
sti
and
ret
and
pop
cmp
lret
addl
mov
adc
add
xchg
push
push
pop
push
lods
scas
sub
int
push
in
outsl
movsb
sti
test
out
lods
inc
pusha
sub
xchg
add
hlt
dec
jg
adc
push
out
sbb
lret
mov
popf
mov
mov
inc
jecxz
cmp
leave
sahf
xor
mov
out
sar
imul
push
jo
mov
inc
flds
mov
repnz
and
fcomps
fcoms
lret
aad
fnstcw
cli
or
or
aaa
jmp
and
aaa
sahf
inc
fadds
stos
adc
mov
in
xor
cltd
scas
pop
kmovw
xchg
pop
dec
and
pop
pop
out
pop
pop
aaa
movsl
shlb
inc
mov
dec
pop
cmp
xchg
jl
loop
sbb
pop
and
xchg
outsl
xchg
jo
rorl
mov
es
xor
aas
pop
icebp
adc
rcrb
cmpsb
pop
push
ja
and
cmpsb
lods
adc
or
cli
cmc
jne
sbb
jbe
lods
sbb
mov
sbb
push
add
loopne
jne
outsb
mov
xchg
arpl
mov
lds
ret
out
push
mov
mov
aad
ds
dec
cmp
jno
fimuls
mov
dec
mov
sub
add
faddl
dec
int3
bound
std
add
inc
jp,pt
pop
fldenv
pop
loopne
aam
shll
xor
pop
xchg
test
push
xchg
data16
jmp
xor
shll
sti
out
pop
insl
lahf
jno
push
es
test
data16
sbb
sbb
inc
push
test
fmul
dec
jg
adc
mov
fwait
cmp
dec
dec
pop
inc
pushl
flds
mov
aaa
into
xchg
pop
pop
inc
int
mov
mov
xor
mov
aaa
movsb
inc
mov
xchg
mov
arpl
aaa
mov
cmp
out
out
mov
or
mov
popf
sbb
sub
xchg
fchs
push
jle
cmp
jge
or
sbb
daa
fwait
pop
push
test
sub
movsb
dec
ja
mov
mov
fdivrl
les
popf
mov
leave
inc
fmull
shll
pop
cmc
dec
xor
adc
mov
mov
aad
dec
arpl
sbb
out
sub
pop
popa
aaa
cltd
jecxz
shll
aas
imul
pusha
faddl
pop
adc
pop
movsb
jae
adc
or
out
xchg
inc
push
sbb
jp
and
popa
add
popa
mov
or
call
fsubl
lcall
or
mov
enter
test
out
mov
shrl
adc
fldenv
dec
pop
xor
enter
pop
addr16
jl
test
add
ds
ret
mov
sbb
or
mov
dec
mov
daa
mov
jg
pop
mov
std
iret
aaa
mov
adc
lods
mov
orb
inc
icebp
sahf
adc
int
sti
loope
jmp
test
dec
movsl
jge
mov
jge
dec
xchg
mov
cmp
sub
packssdw
mov
adc
decl
push
mov
mov
rcr
jecxz
adc
xchg
jno
pushf
pop
push
sub
or
fdivrs
clc
enter
sbb
adc
out
cli
jecxz
js
pop
movsl
pop
lock
adc
pop
and
cmp
mov
or
xchg
mov
pop
in
scas
lcall
jns
testl
cmp
test
out
cmp
push
add
bound
push
xor
faddl
inc
inc
outsb
mov
pop
in
mov
sub
sub
mov
mov
lea
jl
out
jno
je
cmpsl
sarb
xor
mov
lret
jle
in
xlat
clc
inc
xchg
into
hlt
clc
ljmp
fcomi
adc
or
mov
inc
test
lahf
dec
lods
adc
dec
or
mov
loop
rclb
inc
add
xchg
rcll
mov
and
inc
shrb
xchg
cltd
mov
addr16
sbb
mov
cmovno
add
sbb
lret
sahf
ret
dec
popa
mov
imul
addr16
add
mov
add
jecxz
push
enter
arpl
loopne
jp
or
stc
and
jmp
in
cmp
or
sbb
mov
out
outsb
in
and
cmp
movsl
int3
xchg
shll
movsl
enter
outsb
inc
cld
leave
cltd
pop
ja
cmp
dec
mov
add
movsl
imul
std
pop
add
int3
popa
sbb
adc
xchg
out
or
out
lret
rorb
movsl
push
mov
pop
mov
sub
fidivs
int
shrb
mov
mov
andl
aas
call
adc
scas
push
pop
pop
cmpsb
sub
ljmp
cvttps2pi
xor
pop
sub
rclb
dec
jp
xlat
jne
mov
mov
cmp
loope
xor
xchg
cmp
xchg
sub
sbb
ss
jne
test
sub
pop
xor
ds
pop
mov
addr16
in
lods
xchg
jmp
mov
mov
jns
xorl
push
jns
push
js
scas
dec
jp
jmp
mov
cmc
xchg
mov
loope
pop
out
add
jecxz
xor
xchg
sar
xchg
or
xchg
xchg
pop
pop
xor
jmp
xchg
or
addr16
xlat
insb
pusha
mov
js
dec
out
fisubrl
pop
andl
popf
pop
imul
popl
or
sbb
jno
cmp
daa
xor
pusha
inc
lock
jmp
out
test
mov
add
and
inc
out
cmp
in
les
lcall
stos
repnz
sbb
loope
xor
sub
add
data16
sbb
movsl
and
mov
jle
and
mov
xor
outsb
cmp
sub
or
jb
cmp
mov
jnp
loop
sub
cmpsl
jne
adc
loop
leave
ja
jns
jge
jmp
cmc
xchg
scas
xlat
fsubs
ffree
pushf
xchg
mov
pmuludq
frstor
xchg
sbb
stc
jle
sbb
adc
inc
jp
sub
gs
mov
orl
adc
lds
pop
pushf
je
sub
fs
lret
sahf
inc
xchg
cwtl
ror
or
sti
repz
pop
pushf
jns
and
mov
and
lcall
rorb
sub
fxch
cli
push
xor
mov
sub
mov
xchg
loopne
in
push
jecxz
lahf
mov
out
rcr
cs
jae
enter
sub
iret
aam
cmp
jns,pt
push
jnp
inc
and
rol
or
or
lcall
mov
pop
push
jo
mov
and
and
pop
and
dec
ret
cwtl
es
in
push
data16
cmc
push
insb
loopne
lods
xor
insb
mov
push
pop
cmpsb
into
orb
repz
sbb
dec
inc
mov
inc
mov
jg
fists
and
sbb
jmp
aam
in
jo
ret
adc
int3
leave
inc
or
inc
sahf
ja
pushf
fidivrl
cltd
mov
jl
lret
push
inc
jae
adc
insl
xchg
push
pop
adc
shlb
jns
xor
xchg
push
adcb
adc
jle
mov
mov
fbstp
arpl
push
xor
and
loopne
enter
int3
push
add
icebp
scas
or
scas
mov
movsb
sbb
bound
lock
test
push
shr
adc
jmp
pusha
testb
or
xchg
ss
jp
mov
inc
inc
pop
pop
neg
jns
xor
pop
adcl
dec
mov
dec
inc
ja
mov
xor
fwait
pop
jp
xchg
pushw
ret
lock
out
lods
xchg
add
dec
test
test
test
jecxz
lea
inc
mov
ss
cmp
loopne
add
arpl
in
frstor
and
ja
inc
loopne
sub
or
and
call
dec
dec
jns
lods
mov
shld
push
or
ljmp
fimull
cmp
adc
dec
mov
out
pop
lods
fcoms
pop
shll
pusha
addr16
sub
popf
xor
out
fwait
inc
dec
xchg
add
daa
cltd
push
mov
mov
push
pop
sbb
ficoml
adc
loope
out
mov
adc
shrl
sub
stc
sahf
sbb
jbe
int3
lods
test
mov
dec
int
lret
and
in
loop
gs
cmp
pop
jmp
daa
jbe
xor
ret
xor
add
mov
out
add
sbb
loop
xorps
iret
adcl
cmp
sbb
mov
push
and
cld
push
adc
loopne
push
ret
inc
bound
lret
ds
inc
jecxz
xchg
out
ret
cmpsl
mov
xchg
sbb
rorb
xor
mov
lods
dec
pushf
dec
or
mov
xchg
enter
inc
shll
jecxz
sbb
les
icebp
jecxz
and
pop
cltd
repz
movsl
test
inc
sub
add
mov
cmp
ljmp
popa
ret
push
call
jge
mov
leave
push
sbb
xorl
aad
push
jp
sub
push
inc
scas
das
lahf
xchg
mov
shlb
cmp
in
imul
push
jnp
mov
aas
pop
andb
add
lods
test
jg
mov
daa
mov
aaa
sub
inc
outsb
out
mov
and
ljmp
out
mov
rcll
and
fs
aad
xchg
ds
out
inc
dec
add
or
add
sbb
xchg
xor
or
movsb
mov
inc
lea
call
sahf
or
push
cmp
cmp
jl
shl
mov
lods
outsl
das
fildll
test
test
in
mov
push
test
mov
adc
dec
sub
sbb
jl
mov
out
aad
dec
push
lock
xchg
sti
cmp
shl
daa
aas
jecxz
push
andb
jle
repz
mov
cmp
mov
mov
insb
jg
roll
ja
xor
push
mov
loope
fnsave
inc
mov
mov
rep
hlt
outsl
rcrb
mov
or
jae
popa
outsl
dec
xor
ljmp
loopne
lahf
imull
repz
test
out
in
or
imul
cwtl
mov
add
xor
xchg
clc
lods
fistl
outsb
push
int
cmp
inc
jle
dec
jle
push
cmp
outsl
cmp
das
cltd
push
mov
les
push
mov
xchg
mov
je
ja
stos
push
sub
in
xchg
roll
adc
dec
sbb
xor
and
icebp
xchg
pop
add
pop
lods
mov
push
aam
je,pn
mov
cmp
jns
sbb
mov
cltd
js
push
into
adc
rolb
enterw
leave
loopne
push
push
jmp
scas
mov
mov
push
jo
ljmp
mov
pop
jp
scas
and
les
cmc
outsb
les
bound
fucomi
shlb
push
incl
mov
jl
in
push
movsb
push
pop
inc
loope
pop
inc
stos
aaa
mov
adc
sub
icebp
mov
int3
sbb
dec
in
mov
shld
xor
mov
mov
shl
mov
mov
xor
mov
cmp
jne
mov
cmp
jne
movl
mov
movl
mov
movl
mov
movl
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
add
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
xor
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
add
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
or
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
shl
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
add
mov
mov
shrd
shr
mov
mov
xor
shl
mov
xor
or
mov
add
shrd
xor
shr
mov
mov
xor
or
mov
or
shl
mov
mov
shl
mov
xor
mov
mov
mov
xor
xor
shrd
shr
or
xor
or
mov
mov
mov
mov
xor
shl
xor
mov
mov
mov
mov
xor
xor
shrd
or
shr
mov
mov
or
mov
cmp
jne
cmp
jne
jmp
mov
mov
mov
mov
mov
xor
shl
mov
mov
xor
mov
mov
xor
xor
shrd
or
shr
mov
mov
or
mov
mov
push
pushl
push
push
call
mov
mov
shrd
shr
shr
xor
push
xor
mov
mov
mov
push
jmp
cli
shll
mov
xchg
mov
inc
cmp
xlat
push
push
clc
add
out
es
xor
into
sub
test
rorb
or
nop
ljmp
jne
ret
es
shll
hlt
jge
xor
mov
stc
popa
fildll
mov
dec
lods
fists
mov
or
leave
push
rcr
repz
and
xor
ficoml
repz
je
in
lds
rcrb
inc
bound
jmp
inc
aaa
loopnew
arpl
sar
sub
push
stc
cmp
imulb
mov
fnstenv
mov
gs
or
mov
mov
test
cmpsb
jmp
insl
aad
pop
mov
scas
mov
pop
mov
addr16
loope
adc
dec
pop
lcall
insl
push
sbb
push
pop
sbb
orl
cli
dec
or
mov
popl
outsb
stos
sub
cmp
mov
imul
push
jmp
cmp
lea
pop
sbb
mov
std
int
adc
loopne
popf
lods
mov
test
cs
enter
cmp
outsl
test
ret
insl
push
mov
mov
dec
sbbb
sbb
sub
mov
mov
pop
std
lahf
and
hlt
idivl
mov
push
push
in
fcom
xchg
dec
sbb
in
mov
mov
add
sub
inc
daa
sti
iret
ds
xor
adc
push
adc
xchg
popa
xor
outsl
cwtl
lret
lods
mov
shr
shlb
rcl
xchg
push
fcomps
lret
cs
push
dec
jo
flds
inc
movsb
mov
xchg
inc
and
into
dec
lcall
dec
bnd
shr
mov
lock
movsb
in
adcl
out
sub
mov
shll
xchg
xchg
rcr
aaa
xor
lret
loopne
sub
sbb
sbb
call
cmpsl
push
out
cli
push
icebp
adc
imul
sub
les
dec
add
xchg
inc
push
icebp
call
cli
and
inc
push
loop
cltd
insl
mov
cwtl
pushf
lock
adc
lret
or
inc
rol
repnz
popf
dec
mov
jnp,pn
cmpsb
xchg
ret
mov
hlt
das
and
fsubrs
sub
loope
loopne
and
int
mov
and
mov
incb
cmp
sub
mov
and
and
test
fcoml
pop
jno
imul
test
mov
ja
dec
int
mov
imul
or
and
xchg
push
xor
mov
dec
fadds
in
movsb
adc
fwait
loopne
push
add
arpl
stos
in
mov
cmp
jne
roll
mov
inc
adc
aad
dec
cmp
sbb
cmp
xor
dec
xchg
xchg
adc
cmp
outsl
or
sbb
add
ret
push
in
mov
gs
rorb
jns
adc
orl
cmp
inc
mov
out
cmp
lds
mov
jnp
mov
pop
xchg
and
loop
ss
insb
sub
cwtl
mov
pop
pop
sti
jns
adc
out
add
cmp
insb
sbb
add
cld
sbb
adc
repz
sbb
pushf
pop
xchg
fcoms
dec
add
pop
add
jge
pusha
add
inc
mov
xor
adc
adc
outsl
adc
jnp
and
shrb
or
pop
clc
push
loopne
mov
pop
push
sub
inc
cmpsb
adc
repz
fs
inc
aas
out
mov
les
repz
add
sbb
push
mov
mov
add
loopne
stos
std
iret
mov
cmp
bound
xor
xchg
stc
cmc
jnp
add
and
cmp
bound
das
sbb
mov
addb
into
and
lret
imul
mov
adc
pop
leave
cli
xor
cmc
rcr
dec
lret
dec
popf
addb
fildl
push
into
mov
in
push
aaa
mov
adc
into
adc
xchg
jle
dec
and
mov
pop
inc
or
pop
push
cmp
push
fwait
adc
aaa
pop
mov
or
int3
outsb
add
sbb
ds
mov
aas
aad
std
js
std
repz
imul
pop
dec
sbb
loope
test
sbb
sbb
dec
jbe
pop
ja
das
xlat
pop
stos
jne
test
or
fimull
int
pop
sarl
pop
push
jns
adc
insb
xor
xchg
jl
clc
inc
fdivr
loope
test
cmc
jnp
cmp
dec
adc
iret
ds
mov
dec
repnz
fcompl
mov
inc
add
sbb
imul
dec
into
mov
push
add
jmp
ret
inc
lea
imul
and
mov
hlt
mov
lods
xor
mov
shll
pop
aas
fdivrs
in
int3
mov
call
cld
push
cmpsb
xchg
inc
push
mov
sub
das
clc
cmp
and
pop
aam
cmp
call
and
outsl
pop
jae
mov
mov
out
push
jl
shlb
cwtl
sahf
dec
xchg
push
mov
adc
sub
test
adc
pop
cli
push
aam
ret
subb
cmp
adc
repz
in
mov
jne
xor
add
cmpsl
stos
xchg
pop
out
lahf
cmp
lock
jg
cmpsb
dec
and
or
xor
adc
sbb
fiadds
fs
push
or
add
mov
aas
imul
xchg
mov
stc
adc
sub
rcrb
sti
mov
push
aas
rorb
cs
popa
lcall
shrl
fwait
and
sub
cli
mov
jno
xchg
pusha
andl
sarb
or
sub
inc
or
and
cmpl
pop
imul
mov
addb
int3
lea
movb
mov
in
in
push
rcll
fistpl
rclb
adc
leave
cmp
cmp
mov
pop
dec
inc
mov
dec
fisttpl
cld
cmp
movsl
sbb
lea
int3
repnz
fwait
lret
cmp
cmp
mov
or
aas
lods
inc
scas
fsubs
or
idivb
fsts
mov
cmp
inc
sub
sbb
inc
shll
in
mov
inc
jge
into
adc
test
mov
mov
in
test
fsubrp
add
jmp
pop
sbb
cmc
mov
repz
cmpb
xor
jp
mov
xchg
mov
push
mov
mov
lock
rolb
pop
movsb
pop
bound
mov
push
and
dec
ja
xlat
dec
jp
fisttpl
loope
pop
xchg
cmpsb
mov
and
push
hlt
insl
popa
in
fwait
cmpsb
or
cmp
add
aad
and
xor
push
and
inc
add
adc
inc
push
push
dec
jecxz
pop
in
aas
insb
push
cli
iret
out
in
mov
or
mov
imul
pop
sahf
fwait
leave
inc
in
nop
test
idiv
stos
or
subb
jl
sbb
mov
repz
xor
cmpsl
pusha
scas
mov
fs
dec
in
jle
fs
or
inc
imul
dec
xchg
adc
pop
test
mov
and
iret
jo
fsubr
push
push
pop
sahf
or
jl
fwait
mov
mov
stos
movsl
jno
push
icebp
mov
sub
inc
test
pop
jbe
or
jecxz
scas
mov
and
and
pop
cmp
sti
out
inc
sbb
lahf
inc
cmp
je
add
mov
xor
arpl
mov
pop
and
das
or
pop
pusha
js
dec
movsl
add
sbb
push
pop
jecxz
nop
push
std
fsubs
ret
repz
test
cmpsb
xchg
gs
rcll
and
leave
je
popa
arpl
mov
and
pusha
out
push
dec
cld
aas
insb
fmull
add
ret
sahf
in
movsl
scas
outsl
pop
jbe
inc
mov
mov
push
sbb
xor
or
test
into
sbb
jg
pop
mov
mov
stos
test
aaa
mov
mov
sbb
push
test
ret
pop
loopne
fs
mov
test
out
xchg
stos
mov
inc
sbb
pop
cmp
add
imul
xor
mov
cmp
add
aam
mov
push
shll
test
test
push
jle
add
jle
mov
mov
addr16
int3
dec
mov
add
push
test
out
sbb
sub
mov
mov
inc
xor
add
loop
or
loopne
cmp
test
jo
test
sbb
repnz
pop
mov
shll
out
test
or
sar
fldl
xor
pusha
or
sbb
rcll
insl
sub
mov
mov
out
scas
data16
xchg
sahf
out
pop
lahf
add
push
hlt
stos
ret
aad
mov
adc
insl
adc
mov
adc
xchg
adc
sbb
push
push
stos
aaa
add
jns
push
bound
mov
test
dec
popf
xor
cmp
pop
ret
int3
xor
dec
out
push
ret
pop
sub
test
cmovge
inc
fstpl
xlat
loope
mov
roll
mov
jns
aaa
mov
xchg
jmp
mov
cmc
jnp
pop
fsubr
push
pop
int
in
push
sub
arpl
out
or
mov
in
out
jno
call
add
repnz
pop
fidivs
jns
addl
rcr
std
hlt
lcall
pop
dec
sti
out
push
pop
dec
fdivs
fimuls
add
xlat
call
ret
add
icebp
leave
cmp
popf
repz
repz
cld
xor
cmpsl
pop
ret
xor
fists
jl
sbb
jmp
pop
mov
cmpsb
repz
push
fbld
add
jb
mov
push
mov
jnp
push
xchg
fstpt
push
pand
daa
or
adc
xchg
sahf
lds
lret
xor
repnz
vcmpsd
push
dec
or
sbb
add
insb
movsl
add
fcoml
mov
mov
test
adc
xchg
jl
lods
xchg
fcomps
andb
inc
mov
mov
leave
das
insb
leave
mov
inc
repz
mov
jg
push
stos
sub
ss
xlat
arpl
inc
outsb
jnp
insl
cmp
aam
push
jnp
stc
cmp
jae
fdiv
enter
push
rcl
push
mov
pop
sub
or
rclb
mov
and
mov
mov
fcoml
xchg
xchg
add
xor
cmc
add
shll
xchg
xor
mov
shll
inc
mov
clc
out
mov
jecxz
dec
hlt
jmp
ret
lods
or
mov
pop
int
add
stc
lret
and
fmul
scas
jl
sub
mov
adc
push
mov
inc
mov
andl
push
xor
push
sub
xchg
ret
or
dec
test
push
gs
repnz
push
leave
mov
das
inc
sahf
pop
clc
rolb
or
mov
jge
push
dec
mov
push
adc
pusha
cmp
jne
neg
fsts
sahf
ret
in
cwtl
scas
lods
xchg
xchg
push
push
sbb
mov
adc
movsb
add
xchg
adc
jae
push
jae
les
cmp
sub
test
mov
mov
iret
decb
jb
movsb
std
adc
xor
inc
sub
pop
and
or
out
lret
fisubrs
in
xchg
jp
ja
test
mov
or
insl
jp
jbe
cmpsb
mov
mov
rcrb
add
popl
pop
enter
cmp
pop
and
fmul
and
je
je
movsl
adc
lcall
add
xchg
lods
xchg
lods
sub
dec
lret
mov
or
loopne
mov
loope
add
insl
add
jecxz
pop
mov
outsl
mov
out
or
add
push
lret
sti
or
pop
jae
inc
cmp
mov
push
mov
adc
lea
fnstenv
mov
push
out
add
adc
fcmove
mov
sbb
js
dec
stc
add
das
int
inc
jne
ret
loop
or
fsubrl
pop
out
sahf
pop
jno
jg
adcl
xchg
add
bound
xor
inc
sub
bound
xchg
adcb
pushf
or
mov
xchg
rclb
inc
int3
xor
pop
inc
jle
xchg
out
movsl
sub
fists
xor
fmull
adc
push
shll
mov
inc
cs
push
push
out
mov
test
lahf
ret
xlat
mov
cmp
or
xor
dec
ret
jle
je
xor
jmp
popa
fucomp
sub
ja
scas
push
jbe
fiadds
mov
sbb
and
loope
imul
ret
fistpl
stos
push
add
mov
or
lds
andb
ret
in
cmp
int3
in
out
sbb
sub
pop
mov
dec
loop
imul
pushf
icebp
pop
sub
das
lea
fidivl
or
cmpsl
sub
inc
jno
repnz
add
outsb
lea
sbb
stos
add
and
in
xor
orl
fsts
loope
mov
outsb
adc
jne
jno
xchg
and
sahf
or
jl
mov
mov
push
or
out
pop
jg
xor
or
call
cmp
sub
push
sti
xchg
add
xchg
xor
and
cmp
insb
jne
gs
loop
addl
xor
scas
adc
add
inc
test
pop
fstl
leave
push
ret
mov
inc
das
mov
and
mov
or
mov
or
add
stc
pop
push
das
mov
mov
and
push
xchg
fistpl
and
js
mov
out
aad
sub
mov
out
test
mov
lods
mov
mov
movsb
leave
pop
int3
cmpsl
xlat
cmp
leave
jle
cwtd
mov
fdivl
lret
adc
inc
dec
mov
lret
ficompl
sti
dec
jle
addl
xchg
aas
jle
xchg
es
inc
call
fiadds
loope
ja
aam
imul
mov
sbb
xor
mov
rorl
scas
adc
mov
pop
mov
mov
and
or
xor
xchg
push
cltd
lret
addr16
hlt
int
out
and
xor
test
mov
jecxz
lock
jnp
mov
pop
test
push
out
scas
sbb
daa
mov
sbb
mov
std
outsb
push
xchg
imul
icebp
jo
mov
sub
insb
dec
dec
inc
xchg
push
mov
adc
aas
incl
and
call
mov
jge
sub
fildl
fisttpll
pop
adc
les
testb
ja
or
sarb
push
push
cmpsb
cs
mov
mov
mov
mov
add
sbb
popl
pusha
inc
dec
xor
test
gs
lar
mov
pop
cwtl
cwtl
cmp
mov
stos
cli
dec
vmovntps
roll
loope
pop
and
xor
je
outsb
cltd
push
lahf
sub
xchg
out
mov
jmp
cmpsl
mov
jnp
pop
mov
lret
dec
jp
push
inc
mov
xor
ja
lret
push
sub
iret
mov
add
mov
mov
or
pop
push
nop
flds
out
sub
xchg
push
jne
jecxz
in
pop
push
test
and
in
mov
mov
loopne
push
sbb
inc
fadds
adc
jmp
movsb
jge
movntps
lds
int3
jno
push
pop
sbb
outsb
mov
int3
mov
int3
xor
mov
fbstp
ljmp
inc
out
push
insl
dec
sub
xchg
dec
in
adcb
add
sub
pushl
sbb
sub
sbb
outsb
in
sbb
adc
xor
outsl
sbb
sbb
rorb
imul
adc
mov
mov
xchg
or
mov
inc
sub
outsl
xchg
mov
clc
lods
push
sbb
jg
out
xchg
push
sub
sub
mov
pop
sbb
pushf
mov
add
ret
popf
sub
xchg
cli
jg
jnp
xor
jle
rolb
and
jge
pop
inc
push
aaa
std
and
shl
fwait
adc
rcll
xor
setl
data16
cltd
xchg
dec
or
xchg
xor
mov
mov
dec
inc
mov
mov
push
mov
mov
push
and
xchg
pop
mov
scas
inc
cli
jne
neg
ret
xchg
or
xor
push
xor
pop
xor
cmpsb
out
aaa
mov
and
adc
pop
dec
call
sbbl
xchg
pusha
xor
xchg
xchg
jne
sbb
fstpl
ss
dec
or
cmpsb
push
repnz
mov
push
mov
fiadds
rorl
dec
nop
sbb
sbb
mov
shll
inc
xchg
int3
das
fmuls
int
dec
movsb
ret
jecxz
sahf
jne
and
subb
and
sub
or
mov
cmpsb
and
cld
inc
xchg
jo,pt
jmp
mov
inc
mov
or
hlt
pushf
xchg
dec
mov
jmp
imul
les
mov
sub
lock
test
andl
lret
mov
or
jo
enter
mov
sar
sub
pop
popa
jecxz
lea
movsb
pop
jae
adcb
scas
sbb
mov
arpl
xor
fldcw
mov
out
sub
pop
dec
popf
sti
or
jl
jno
bound
shrb
pop
bound
xor
jecxz
aad
and
call
sbb
xor
movsb
cmp
lahf
mov
lea
inc
or
lock
mov
out
mov
or
push
mov
adc
ror
sbb
mov
mov
ja
scas
nop
imul
dec
jnp
or
out
inc
xor
mov
incl
fucomip
js
leave
xchg
dec
cs
out
rorl
push
mov
or
jmp
mov
outsb
adc
adcb
mov
or
xor
bound
xchg
xor
pop
es
sub
scas
in
and
pop
lcall
mov
xchg
push
mov
imul
sub
or
inc
stos
pushf
dec
mov
sbb
jb
add
faddp
ret
pop
lods
add
sbb
imul
inc
popa
jecxz
add
pop
cltd
push
out
mov
xchg
repnz
rcr
inc
jo
inc
lcall
enter
mov
mov
test
test
add
xchg
lret
test
das
int3
bound
pushw
in
testl
mov
pop
clc
mov
int3
xchg
add
xchg
arpl
shl
sbb
jle
mov
outsb
mov
xchg
cmp
pusha
in
ljmp
push
loope
mov
dec
jg
lahf
cmovbe
xchg
cmpsl
jb
or
jle
push
mov
arpl
sbb
xchg
insb
push
test
inc
jge
push
jl
sbb
aad
xor
xor
push
mul
push
or
fwait
add
loope
adc
sbb
fs
xor
or
mov
std
enter
push
insb
arpl
push
int3
dec
pop
rclb
movb
in
aas
push
push
dec
mov
outsl
fisttpll
movb
movsb
cmp
repnz
inc
addr16
inc
jno
cmpsl
outsl
je
jge
jl
or
sub
iret
sub
or
lret
or
add
pop
repnz
push
push
mov
push
rcrl
cmp
push
inc
mov
mov
fcomp
sbb
lods
cmovae
mov
sbbl
cmp
mov
ja
and
xor
xchg
cli
fs
dec
sbb
cmp
mov
jbe
adcl
add
mov
fisttpl
push
notb
stos
out
mov
dec
repnz
push
inc
sahf
es
mov
test
aas
gs
xchg
adc
and
inc
push
mov
movl
push
sahf
pushf
mov
das
cmc
pop
fs
mov
mov
js
xor
es
pop
sar
fcompl
mov
inc
or
inc
mov
rolb
ljmp
fstps
xor
stos
into
ret
pop
sub
out
shl
outsb
stos
fldt
sbb
repz
aaa
cltd
iret
xchg
adc
mov
xor
cld
ret
int
mov
lea
dec
scas
into
decl
or
loopne
add
cmp
imul
cwtl
pop
outsl
mov
and
stc
push
lods
xchg
in
gs
fidivrs
add
fcomps
push
ja
loop
push
stos
mov
sbb
adc
ds
ja
sbb
ret
mov
ja,pn
mov
cmp
adc
mov
or
pop
lock
adc
or
cmpsl
cmpsl
loop
out
lock
rcrb
dec
fcomps
mov
jb
mov
dec
and
xor
mov
ds
popa
int3
addr16
ret
fcmovbe
sub
in
arpl
and
nop
popf
test
cli
mov
insl
mov
push
mov
mov
adcl
adc
pop
rorb
lods
xor
mov
insl
ja
scas
inc
mov
inc
jne
jns
lds
sub
mov
jg
mov
push
ds
pop
xchg
mov
mov
inc
xor
xchg
add
orl
cmp
nop
loope
pop
cmp
nop
add
mov
repnz
mov
out
pop
sub
fucom
bound
xchg
pop
lods
jb
insl
dec
int3
sbb
nop
jle
jae
into
jbe
inc
aas
push
aas
int
popa
mov
repnz
push
popa
lods
push
push
or
ss
or
adc
popf
adc
negb
cmc
mov
es
test
and
mov
and
pop
ja
loope
fiaddl
pop
outsb
cli
push
or
push
add
test
in
push
push
inc
fwait
and
inc
mov
idivb
shl
xor
or
jmp
enter
pop
adc
jb
adc
or
xor
mov
dec
mov
or
pop
dec
xor
mov
dec
pop
dec
fidivl
es
into
sbb
inc
insb
mov
and
adc
int
je
inc
mov
xor
daa
xchg
sbb
iret
mov
ffree
subl
rol
pusha
xchg
mov
mov
mov
js
adc
aad
cmp
test
out
dec
dec
adc
or
adc
shrb
idivl
cwtl
cltd
ds
loope
lds
outsl
sbb
xor
xor
lcall
xor
clc
test
or
mov
add
arpl
ficomps
mov
add
lock
je
call
stos
xchg
mov
push
imul
nop
dec
repnz
push
rclb
jge
hlt
sub
stos
iret
push
jp
pop
sub
xor
dec
lahf
fistpll
rclb
std
xor
push
pop
icebp
mov
sbb
mov
pop
push
in
mov
cltd
mov
xor
jmp
xchg
jb
scas
lahf
enter
fidivs
pop
enter
dec
adc
push
jmp
insl
and
test
shrl
pop
sbb
xchg
dec
push
xchg
aam
cwtl
and
xchg
pushf
pop
or
dec
xlat
test
addb
jecxz
xchg
adc
add
iret
adc
jnp
repz
aas
shrb
cltd
cs
sbbb
leave
mov
loope
out
pop
pushf
arpl
xlat
arpl
outsl
subb
adc
push
cs
inc
das
jecxz
mov
add
das
add
ljmp
adc
js
adc
push
or
mov
dec
fdivrl
ja
adc
mov
and
and
pop
jg
frstor
or
call
adc
cmpsb
cmp
lea
mov
into
cmpsb
lods
xchg
fiadds
and
outsb
test
popa
mov
shll
fimull
into
jle
sbb
pop
filds
xor
pushf
in
mov
mov
xorl
jl
dec
inc
test
push
fisttpll
iret
rol
ror
cwtl
insl
ret
jnp
arpl
mov
jnp
rcrb
pop
inc
push
sbb
mov
std
adc
jg
or
pop
mov
ds
dec
adc
pop
in
pop
push
sub
push
xchg
ret
pop
xchg
nop
fimull
int3
inc
out
andb
sub
jno
push
dec
cmp
movsb
push
mov
repz
ret
dec
cmc
add
pop
mov
mov
test
imul
dec
jo
roll
aaa
pop
jnp
push
gs
xchg
push
sahf
sub
sbb
leave
push
xchg
push
mov
pop
or
lcall
mov
test
mov
shll
ds
je
mov
xchg
mov
mov
out
insb
fistpl
fildll
push
adc
mov
push
sarb
jmp
ss
mov
mov
mov
mov
in
jno
adc
add
or
mov
xchg
dec
pop
imul
push
pop
shl
and
mov
outsb
stc
aaa
scas
fs
add
lock
jl
aad
cltd
add
pop
sub
sub
push
cmp
out
sub
aam
stos
cld
xor
fs
add
frstor
adc
inc
push
xchg
fwait
or
lret
sbb
xor
lcall
jmp
xlat
mov
mov
pop
decb
or
jp
sbb
mov
scas
mov
cmp
mov
xor
xchg
call
roll
mov
xchg
sbb
sbb
loopne
in
enter
cltd
dec
fidivl
add
or
loope
add
clc
nop
pushf
loopne
popa
daa
nop
dec
ror
inc
inc
stos
pop
imul
gs
add
fwait
in
int
stos
out
mov
push
pop
negb
mov
repnz
es
mov
int
ss
jge
call
add
call
sbb
adc
jp
test
lahf
fs
adc
cld
iret
nop
pop
adc
movsl
repnz
pop
cwtl
sub
subb
arpl
and
dec
enter
inc
mov
mov
stc
pop
cmpsl
loope
rcrb
adc
sarb
inc
popa
lock
dec
cmp
push
jmp
mov
ja
mov
xchg
aas
sarb
dec
jle
jecxz
test
sbb
shl
mov
mov
loopne
dec
xor
fbld
mov
dec
add
pop
iret
femms
pop
movsl
sub
cmpsb
and
dec
dec
xchg
in
dec
push
adc
adc
test
cmpsl
lods
inc
xor
adc
out
inc
and
das
popf
mov
sahf
shrb
pop
push
mov
adc
xchg
mov
sub
xor
popa
imul
cmp
jnp
mov
js
mov
in
and
fucomi
imul
dec
push
sahf
stos
add
adc
sbb
dec
sahf
dec
sbb
ds
pop
dec
hlt
sarb
les
call
shld
shl
mov
or
xor
or
xor
xor
mov
mov
mov
mov
mov
mov
shl
xor
mov
mov
mov
xor
xor
shrd
shr
or
xor
mov
or
mov
mov
mov
shl
xor
mov
mov
mov
xor
xor
shrd
xor
shr
or
or
cmp
jne
cmp
je
pushl
pushl
pushl
push
push
call
pop
leave
ret
movl
cmp
jae
cmp
jae
shrd
movl
shr
ret
xorl
mov
xor
and
movl
shr
ret
xor
xor
ret
push
mov
sub
movl
cmpl
movzwl
mov
movl
jmp
mov
mov
je
pushl
pushl
pushl
push
push
pushl
call
not
or
and
xor
mov
mov
movl
cmpl
movl
mov
mov
mov
jmp
movl
mov
jg
pushl
call
orl
sbb
sub
sbb
adcl
mov
or
mov
movl
cmpl
mov
mov
mov
jmp
not
jb
pushl
pushl
call
adc
xor
or
xor
add
or
sbb
inc
addl
movl
dec
movl
decl
movl
movl
movzbl
or
movl
cmpl
movl
movl
jmp
mov
movl
jge
push
call
adc
mov
mov
sub
and
sbb
subl
mov
or
mov
mov
sbb
mov
mov
sub
mov
push
mov
movl
sbb
mov
andl
mov
xorl
push
orl
push
xorl
push
subl
push
addl
call
xor
mov
cmpl
mov
mov
mov
movzwl
jmp
movl
movl
jg
push
pushl
push
pushl
pushl
call
or
or
adc
addl
xor
add
adc
sbb
mov
xorl
xor
and
cmpl
mov
movl
jmp
movl
movl
jg
push
push
call
sbb
sbbl
sub
notl
xor
add
sbb
xor
xor
add
and
mov
mov
sub
or
and
or
mov
adcl
and
cmpl
mov
mov
mov
jmp
movl
jl
push
pushl
push
pushl
call
add
sbbl
and
or
mov
sub
sbb
movl
mov
or
movl
movl
movl
movl
mov
addl
mov
mov
mov
add
movl
push
adc
push
subl
and
and
push
andl
push
xorl
call
mov
mov
cmp
movl
ja
jb
cmp
jae
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
add
mov
adc
mov
or
or
add
adc
xor
xor
add
mov
adc
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
jmp
loope
cwtl
cwtl
mov
push
je
inc
or
xchg
int
push
jmp
cli
out
adc
mov
jnp
xchg
lock
les
sub
roll
pop
add
mov
xchg
cmp
stos
int3
dec
adc
aad
or
push
mov
cmp
mov
mov
xchg
mov
loop
lret
out
scas
xor
cmp
mov
test
int3
or
sub
mov
je
popa
dec
movsb
ret
jbe
xor
fwait
jae
dec
xchg
les
mov
cmpsb
mov
push
aas
mov
cmpsb
cltd
inc
and
aam
add
xchg
or
push
sbb
lods
call
pop
rep
mov
mov
inc
push
xor
iret
and
adc
push
ja
xchg
or
and
adc
xchg
dec
dec
lcall
pop
je
inc
adc
inc
mov
data16
mov
jo
jmp
jecxz
pop
sub
add
mov
xchg
add
and
mov
or
pop
fcmovb
addb
ja
std
jne
add
jae
xor
xchg
xor
adc
push
pop
adc
sub
inc
cmp
sub
sbb
or
jle
cmp
fwait
sub
mov
mov
dec
or
xor
adc
flds
adc
mov
xchg
pushf
in
orl
pop
clc
js
ret
xchg
inc
dec
popa
mov
mov
movsl
adc
adc
test
frstor
imull
sbb
and
lahf
sub
jne
aam
push
add
mov
cmpb
pusha
jmp
xchg
sbb
inc
xchg
jnp
lahf
cmpsb
pop
jge
idivl
out
clc
xor
jg
jno
es
push
jae
cmpsl
or
shlb
pop
pop
jb
addr16
cld
xor
pop
insb
jp
and
in
in
pop
cli
test
add
rcrb
xchg
aaa
pop
flds
out
xchg
ja
adc
fdivrs
xchg
pop
ficoml
sahf
inc
xor
iret
add
jns
mov
test
iret
aad
call
xlat
sahf
arpl
and
clc
int
mov
or
pop
lods
subl
sub
adc
inc
popa
dec
push
mov
fdivrl
xor
orl
pop
aas
and
enter
lods
fs
jns
and
adc
mov
mov
push
scas
jns
and
test
test
cli
les
test
xor
jle
add
daa
xchg
jmp
in
fdiv
nop
pop
xor
imul
jge
ror
mov
dec
cmc
sbb
cld
and
mov
and
xor
pop
sub
sbb
push
mov
fwait
divl
icebp
and
jg
mov
fsubrl
xor
dec
xchg
cmp
movsl
xchg
outsl
pop
xor
cmc
repnz
xchg
mov
pop
loop
ljmp
add
in
mov
jp
mov
jge
out
jmp
test
fisttpl
ror
cld
adc
insl
cld
or
push
jne
push
push
sbb
push
add
dec
adc
insb
outsb
test
ljmp
jo
push
cmpsb
bswap
arpl
add
pop
dec
jg
dec
jbe
inc
cld
nop
inc
insb
popf
hlt
stc
or
xor
dec
xchg
fs
lahf
or
mov
pop
sub
inc
arpl
lds
cmp
jb
xchg
imul
cli
xchg
push
stc
pop
jnp
movsl
stos
pop
fs
push
jno
mov
pop
popf
out
sahf
loope
enter
stos
jecxz
addr16
ss
icebp
inc
xchg
std
jnp
and
cmp
ljmp
es
cmp
lahf
mov
mov
arpl
dec
fbld
mov
jno
and
cmp
data16
or
les
sub
sub
hlt
jne
dec
testb
ljmp
inc
and
pop
idivl
outsl
out
hlt
dec
das
sti
mov
and
push
sub
std
push
mov
pushf
dec
jl
pop
mov
dec
lahf
sbb
mov
jns
pusha
push
sub
xchg
divl
icebp
pop
adc
mov
fdivrp
push
movb
jge
mov
dec
lea
sub
inc
jo
xor
add
mov
adc
test
fwait
mulb
mov
fwait
jne
movl
mov
dec
ficompl
out
xlat
xor
int3
push
and
push
ficomps
nop
insb
adc
test
inc
mov
ss
sub
mov
mov
inc
and
stos
fwait
push
mov
addr16
scas
aam
ja
mov
rcrl
jae
inc
lea
sbb
and
or
and
scas
int
and
mov
jns
add
imul
aas
sbb
jns
pop
out
sub
icebp
sahf
bound
pusha
hlt
or
push
pop
jle
aam
scas
sbb
sbb
pushf
lock
mov
pop
push
icebp
lret
in
dec
dec
popf
jb
adc
cmp
xorl
jns
add
ret
sbb
pop
mov
dec
mov
sti
cmpsb
push
loope
mov
shrb
sub
int
mov
push
add
stos
testl
mov
test
inc
sbbl
cmp
pusha
sahf
ljmp
sbb
loopne
jge
xchg
push
popa
jns
sbb
inc
filds
sub
mov
push
and
mov
xor
pusha
or
lret
insb
in
mov
sub
aam
lods
and
arpl
sub
pusha
fsubs
repz
jge
bound
out
lahf
adc
mov
in
lods
mov
cld
sbb
imul
xchg
sub
push
movsl
jbe
jo
ret
mov
ja
sub
cmpsb
gs
xchg
call
xor
icebp
fcomi
inc
test
repnz
iret
sbb
dec
imul
xchg
add
xlat
clc
mov
gs
or
push
pop
mov
push
ss
and
adc
sub
mov
das
les
xor
sub
xor
sub
leave
mov
pop
sub
repz
and
push
lret
and
inc
pushf
outsb
aam
insb
mov
popa
xchg
lret
and
xor
xchg
adc
lds
sarb
pop
ds
loopne
test
inc
pop
add
or
inc
clc
xchg
in
mov
or
test
add
mov
cmpsb
out
lds
dec
fstpl
adc
pop
aam
mov
jl
sarl
mov
repz
xchg
pop
push
inc
or
add
and
es
adc
call
into
int3
mov
cltd
adc
jns
inc
push
ret
iret
cmp
push
shll
out
popf
int
repnz
subb
in
pop
pusha
in
stos
int
or
inc
cli
sbb
cmp
adc
dec
adc
das
xchg
enter
ja
mov
adc
scas
sbb
or
pushf
sub
pop
jl
cmp
push
pop
lods
push
jae
mov
aad
fmuls
sub
cmp
push
shrl
int
sbbb
cmp
fsub
xchg
inc
in
jo
inc
and
pop
ror
sub
xchg
and
cmp
mov
shll
iret
push
stc
ret
mov
aaa
mov
pop
lret
rcrl
loop
je
xor
repnz
push
aam
addr16
sub
or
inc
xchg
push
jnp
sti
xchg
inc
push
mov
sbb
or
mov
dec
sbb
shrb
fcomi
xchg
mov
daa
pop
push
and
scas
add
ja
cmpsb
cmp
pop
push
insl
inc
or
jne
lods
and
jl
nop
sti
dec
push
nop
or
xor
xlat
imul
out
sbb
jns
stc
nop
push
in
frstor
mov
inc
dec
push
push
add
sbbb
test
xchg
mov
fdiv
sbb
js
adc
lea
stc
int3
fistpl
adc
stos
jo
dec
push
mov
inc
ret
jp
add
jbe
cltd
mov
ss
ret
xor
call
and
mov
dec
mov
xor
sub
repz
lds
adc
test
jecxz
rol
shrl
movsl
stc
lea
push
pop
aaa
insb
shlb
mov
mov
in
out
jg
push
jge
mov
xlat
add
shl
imul
push
add
hlt
and
int3
loop
and
dec
or
ja
push
dec
dec
push
fildl
xchg
arpl
int3
mov
fwait
xchg
cmp
cld
xchg
aam
add
and
pop
adc
lods
inc
fisubrl
inc
mov
das
pop
mov
pop
xchg
fwait
sbb
cmp
cmp
mov
push
int
jno
push
mov
push
mov
cmp
xor
inc
fisubrs
cmp
bound
addr16
lret
pop
in
mov
popa
mov
xor
add
or
pop
ret
shll
mov
mov
mov
add
ret
fistps
fcmovu
into
jmp
pop
xchg
mov
fisubl
mov
ficoml
cwtl
aas
enter
sbb
fistl
mov
enter
dec
addr16
xchg
push
mov
mov
aam
jne
push
or
fisttpl
push
xlat
mov
nop
and
fucomp
fists
mov
ret
cltd
fs
adc
test
iret
cmpsl
cmpsb
pop
sbb
aas
pop
dec
xchg
loop
out
mov
xor
int3
or
popf
push
xchg
cmp
sub
aad
sbb
in
es
rcll
repnz
push
out
inc
adc
rep
lods
xorb
mov
jg
mov
iret
sub
and
lods
xchg
dec
gs
aaa
add
lret
mov
mov
cmpsb
and
and
inc
inc
and
pushf
lods
sbb
sub
mov
sarl
test
cmpsb
mov
js
sahf
shll
insb
cmp
adc
fcmovnbe
hlt
and
jnp
mov
pushf
inc
dec
jo
lahf
add
cmp
popf
push
push
idivb
inc
jl
fsincos
fistpll
xchg
mov
sub
mov
or
xchg
mov
xor
addb
popf
add
test
jo
add
loope
sarl
stc
push
enter
loop
jecxz
int3
jns
cs
lods
xor
jnp
ja
push
jbe
rclb
arpl
scas
mov
push
push
js
sub
sbb
clc
imul
idivl
inc
push
cmp
mov
sbb
jo
mov
mov
sbb
mov
cs
cmpsl
mov
loop
mov
sti
add
xchg
mov
lahf
ja
jg
mov
mov
imul
in
pushf
xchg
add
inc
dec
push
mov
and
ja
inc
xchg
jecxz
mov
dec
mov
rcr
xor
fstp
fsts
mov
cwtl
push
mov
test
push
jae
cwtl
fidivrs
inc
pop
mov
dec
mov
sbb
ss
loopne
sbbl
fwait
jle
sub
jae
mov
int
and
mov
movsl
cmp
fistl
movsl
aas
jno
mov
arpl
dec
mov
cmp
cs
pop
lock
bound
daa
pushf
clc
push
jl
jle
adc
jns
popf
xor
push
ficoml
pop
pushf
or
fsubl
cmpsb
repz
icebp
aam
and
cwtl
lret
adc
mov
into
decb
jbe
mov
ja,pn
mov
cmp
pop
sahf
xchg
outsl
in
fnstenv
outsl
movsb
mov
push
je
cmp
inc
movsl
insb
sub
jle
fs
cli
cmp
mov
cmpsb
cwtl
shlb
lock
adc
mov
out
clc
jle
jg
stos
add
fstl
fadds
mov
addl
sbb
shrl
push
cmp
ss
fstl
mov
nop
sahf
std
loopne
das
xchg
cmp
xor
adc
sub
mov
add
jecxz
jge
mov
in
sar
shl
loopne
es
adc
pop
cwtl
je
inc
stos
xchg
mov
shll
or
xchg
popf
cmp
adc
scas
fldcw
dec
or
dec
repz
push
xorb
das
pop
mov
push
enter
fsub
pop
jnp
sbb
add
scas
dec
mov
call
out
or
sub
js
jnp
push
movsb
lea
cld
cmp
mov
and
in
jno
jmp
sbb
sub
sar
inc
jns
mov
insb
mov
lahf
and
or
xor
push
cmp
insl
sbb
dec
mov
sub
mov
mov
jmp
les
imul
push
mov
cmp
test
add
jo
pusha
rcl
stc
xchg
jl
int3
jl
inc
push
sbb
out
test
mov
shlb
and
loopne
lods
cmc
imul
push
gs
sbb
push
push
daa
stc
jns
xor
rcr
fucomip
mov
mov
aad
dec
inc
leave
and
jnp
and
mov
jle
or
pop
daa
dec
dec
int
adc
loopne
roll
inc
sarb
sbb
jge
imul
pop
mov
fcompl
lret
push
or
sub
scas
and
andl
push
add
add
mov
adc
mov
dec
add
std
xor
pop
ret
sub
enter
lods
jp
repnz
scas
sub
das
in
sub
pop
ja
and
outsb
notl
enter
insl
das
and
adc
push
bound
mov
scas
inc
lea
fwait
stc
in
mov
inc
jne
lahf
lods
fsubl
inc
mov
ret
pop
or
cli
xor
addr16
add
scas
sub
fimuls
dec
jg
ret
sbb
add
xchg
js
jle
mov
dec
dec
js
sti
and
insl
mov
ret
inc
xchg
dec
sbb
mov
add
sahf
hlt
xor
negb
andb
cmp
insb
inc
push
adc
push
mov
std
aad
and
popa
push
sub
xchg
fs
movsb
push
push
jo
inc
jo
adc
fs
outsl
or
jbe
shrb
jnp
fldcw
shlb
clc
je
lret
dec
adc
pop
mov
cmp
jl
loopne
test
mov
jmp
insb
mov
add
jecxz
mov
mov
lock
insb
cli
xchg
dec
out
pop
xchg
insl
aaa
push
dec
std
jmp
imul
xor
fidivrs
pop
pop
test
lods
out
imul
enter
push
jo
xchg
pop
xchg
jne
fcomps
mov
lcall
sbb
not
addr16
xchg
incl
scas
icebp
jmp
pushf
jle
popf
jnp
push
jl
sbb
dec
inc
lods
mov
add
jmp
or
push
stos
cwtl
jbe,pt
dec
push
cmp
add
ds
rcl
push
jnp
jns
outsl
ret
push
or
popf
clc
stos
nop
enter
mov
add
rclb
dec
repz
ds
fwait
push
mov
movl
outsl
cwtl
notl
movl
addl
xchg
andb
clc
ds
inc
fbld
add
cwtl
aaa
mov
and
es
adc
cmpsl
shld
cmp
mov
mov
push
mov
ret
mov
dec
jns
arpl
into
xorb
scas
stc
rcrb
cmp
push
cmp
mov
sar
sbb
ror
mov
xor
cmpsl
xlat
jge
mov
popa
repz
sbb
jl
cltd
flds
addl
daa
iret
dec
and
lods
arpl
sub
mov
cmp
mov
fisubl
rorl
rol
in
mov
inc
add
add
daa
out
sub
xchg
imul
int
sub
pop
and
jno
arpl
lret
mov
adc
mov
xchg
or
jl
mov
jp
pop
sub
popa
pop
mov
dec
sbb
dec
insl
adc
or
add
and
push
data16
mov
cmc
jbe
jb
dec
pushf
je
mov
cmp
mov
cmc
cmp
fdiv
and
xchg
into
pop
mov
call
adc
cmpb
pop
mov
in
shll
and
ja
xchg
push
pusha
jle
imul
aaa
iret
jae
mov
int
sub
pushf
push
cmpsb
add
xor
stos
xchg
pop
jo
je
shlb
and
cs
sbb
ljmp
xchg
test
mov
addr16
jmp
pusha
jge
jg
adc
sbb
std
pop
adc
sbb
ret
std
mov
sarl
jbe
mov
or
test
jo
arpl
mov
ja
pop
nop
inc
lods
or
inc
loopne
push
test
pop
xchg
out
ja
sbb
cmc
xlat
shll
das
scas
add
push
mov
test
pop
inc
cld
stc
ret
mov
push
xor
movzbl
aad
addb
or
test
pop
add
daa
rcrb
lods
sbb
adc
mov
data16
push
call
sub
and
lcall
xchg
cmp
mov
jo
xlat
out
das
jne
adc
mov
fwait
roll
mov
jb
jbe
inc
jl
out
pop
outsl
fbld
mov
inc
mov
gs
xor
mov
shll
pop
mov
sub
push
lods
xchg
xor
mov
jge
dec
cmp
int
adc
mov
mov
insl
pop
cmp
push
jg
sub
add
mov
pop
daa
dec
jge
mov
push
mov
call
mov
and
testl
jecxz
ret
xchg
sti
in
adc
ficompl
cmpsl
popa
xchg
cmp
popf
dec
dec
push
movl
orb
dec
insb
mov
mov
push
mov
negb
lods
add
xchg
push
pop
je
mov
inc
or
jle
rorb
pop
add
mov
add
popa
xor
fwait
ss
mov
push
mov
out
sbb
outsl
xor
fisubrl
jecxz
adc
fcomip
jne
cmp
adc
into
inc
inc
sbb
push
shrl
insb
xchg
mov
test
fs
jbe
pop
nop
insl
inc
int3
popf
lret
popa
xor
cltd
jp
roll
jnp
fdivr
pop
xor
cmc
enter
int
adc
mov
es
ds
xchg
xorl
cmpsl
mov
mov
inc
stc
pushf
inc
andb
sub
clc
mov
mov
or
jo
sub
xor
imul
out
enter
dec
popa
push
mov
es
pop
dec
dec
imulb
mov
inc
pop
test
sub
pushf
xchg
js
in
mov
sbb
pushf
sbb
push
or
mov
fs
aad
dec
pop
xchg
jl
into
jle
or
push
sub
mov
outsl
into
test
jge
imulb
enter
cld
jno
pop
xlat
shl
test
movsb
sbb
leave
sbb
push
mov
scas
sbb
sbb
cmpsl
dec
dec
xchg
pop
jne
mov
sahf
sbb
icebp
outsl
inc
pop
cmp
mov
jns
jmp
push
aas
mov
jae
mov
sbb
mov
rcl
gs
push
mov
mov
into
add
lock
mov
push
dec
jb
lahf
dec
outsl
shl
repnz
imul
sub
mov
add
outsb
mov
dec
nop
or
push
jbe
add
sbb
lcall
dec
jl
sti
adc
rcrb
mov
mov
jmp
cmpsb
cli
xor
adc
sub
out
cmp
or
fsubs
loop
and
xchg
repnz
mov
scas
sub
push
xchg
cli
adc
mov
sub
cmp
cmpsl
or
fidivrs
iret
daa
into
or
dec
jns
leave
or
icebp
cmp
xlat
jg
stc
js
test
lea
mov
jne
sub
les
sbb
push
divl
ret
cmpsl
mov
icebp
xlat
ds
imul
lret
hlt
daa
lret
and
lods
in
mov
adcb
addb
call
sbb
or
inc
dec
sbb
movl
mov
loop
out
sbb
pshufw
lea
adc
mov
shrl
fdivs
dec
out
inc
lahf
lds
test
fwait
push
das
leave
add
add
dec
in
xchg
in
sbb
repz
jno
ljmp
mov
inc
jae
stos
cmp
bnd
lods
lods
dec
jecxz
pop
mov
ljmp
js
leave
clc
outsl
sahf
pop
add
push
cmp
xchg
cmp
data16
inc
ljmp
pop
push
mov
out
xor
icebp
push
jb
push
sbb
and
push
insl
jnp
dec
push
mov
push
ret
fldenv
dec
movsl
int
and
and
in
xchg
xchg
iret
adc
ficompl
jno
mov
sub
and
sbb
pop
xchg
test
jo
negb
into
adcl
ret
jmp
add
push
popf
cmc
mov
mov
and
sti
jl
xchg
pop
aas
out
enter
push
push
mov
out
out
pop
adc
ret
rclb
dec
clc
repnz
clc
les
xchg
pushf
shll
sbbl
push
jecxz
push
ficoms
xchg
xor
sti
js
cmpsl
xlat
fwait
or
fmulp
data16
sub
stos
xchg
jmp
std
mov
in
cmpsb
sbb
imul
sub
pop
loop
rcll
loopne
jbe
shll
decl
xchg
loope
xchg
inc
stc
xor
or
leave
faddp
pop
cmp
lock
mov
hlt
mov
mov
inc
jl
mov
pop
fs
mov
into
pop
and
xor
dec
sub
pusha
cli
jae
mov
sarb
cmc
mov
mov
stc
lea
push
adc
cwtl
cmp
cmpl
push
jns
movsl
mov
fnstcw
sbb
cli
pop
fadds
push
lea
adc
repnz
adc
into
ljmp
or
inc
add
jmp
and
inc
ja
aam
or
scas
cmp
fmull
fnsave
adc
mov
hlt
cmp
iret
mov
aad
fwait
popa
cmp
sub
jb
adc
mov
divl
mov
adc
enter
call
adc
xor
xchg
mov
or
pushf
mov
out
sbb
xor
mov
mov
popa
jbe
fbstp
mov
adc
xchg
outsb
xchg
int
cmp
ljmp
jb
addr16
popf
mov
xor
rorl
mov
dec
into
fstpl
fstl
pop
pop
insb
xor
addr16
mov
dec
cmp
mov
or
cmc
or
adc
pop
fnsave
inc
mov
in
inc
leave
mov
pop
pop
lock
aam
add
mov
insl
dec
out
sbb
push
adc
dec
jo
popf
jb
jo
js
stos
mov
lods
cmp
stos
push
mov
adc
dec
fistps
dec
dec
repz
aad
cwtl
scas
in
xor
xor
in
andb
imul
jmp
mul
cs
inc
xchg
or
or
movl
dec
or
pop
cmp
mov
cld
pop
adc
push
outsl
mov
lret
call
xor
cli
inc
add
sub
test
jp
pusha
push
outsl
ret
jge
jge
push
fst
das
imul
pop
dec
out
das
cmp
cmpsl
jge
adc
cmpl
pmulhw
sub
or
imulb
dec
pop
push
stc
and
in
ljmp
sub
lds
nop
shl
scas
and
cwtl
stos
cld
test
push
aaa
jg
cwtl
cmp
or
ficoms
ret
outsb
lods
mov
dec
xor
and
cmp
sub
aad
in
stos
loopne
sub
jae
inc
dec
outsb
xor
mov
push
xor
mov
dec
jmp
lea
mov
jl
into
jecxz
or
mov
pop
inc
mov
mov
loop
jo
mov
aam
sbb
xchg
push
or
jne
push
bound
xchg
pop
mov
stc
test
sub
je
fwait
inc
dec
out
aad
jg
xlat
xorl
les
adc
mov
jl
xor
xor
mov
sub
lret
fisttpl
ret
push
enter
ror
lahf
iret
jmp
aam
test
mov
jle
loop
jg
xor
fs
or
adc
mov
mov
call
adc
es
cmp
ficoml
xchg
inc
sub
lds
ret
cltd
add
jnp
mov
notw
loopne
add
sahf
and
arpl
mov
push
andl
push
cmp
shll
jbe
sbb
add
test
ret
jb
movsl
add
sbb
pushf
sub
or
push
fcmovu
notl
sbbl
xchg
and
adc
jp
and
mov
stos
inc
mov
mov
std
and
lods
lahf
jb
fnstenv
mov
into
mov
lock
scas
sbb
jmp
rorl
pushf
jno
sbb
mov
movsb
jno
scas
shr
fimuls
ret
mov
cmp
aas
mov
sub
dec
mov
lea
in
fsubrs
repnz
push
sub
pop
daa
inc
jnp
scas
cld
xchg
or
dec
add
inc
imulb
pushf
int3
push
dec
ds
jns
fisubl
xlat
enter
xchg
mov
inc
enter
insl
sbb
mov
push
xor
cmp
add
add
mov
sub
pop
cli
pop
xchg
lcall
cmpsl
call
push
jmp
lret
jmp
pushf
cmp
sar
pop
dec
mov
cltd
xchg
test
rcrb
loop
out
ret
push
test
call
push
fisubrl
inc
mov
out
sahf
loope
mov
repz
inc
mov
push
lds
je
jp
mov
xchg
fildl
mov
mov
add
add
xlat
ss
pop
repz
hlt
sub
dec
andb
movsl
adc
sbb
mov
and
std
inc
push
cmpsl
je
xchg
push
filds
aaa
lcall
nop
test
add
fistps
loop
pop
push
xor
mov
sub
popf
jp
or
pop
xchg
mov
dec
jns
negb
ljmp
push
scas
inc
xor
data16
sub
add
mov
mov
scas
mov
popa
adc
packsswb
lock
adc
sbb
adc
imul
fimull
imul
fwait
aas
mov
sbb
or
or
xchg
movl
adc
js
imul
pop
sbb
out
lret
cltd
add
xor
adc
mov
jl
arpl
jge
cmp
lahf
loope
in
mov
arpl
mov
xlat
add
inc
jne
xchg
push
je
jge
bound
je
xor
test
and
loop
push
hlt
and
inc
icebp
movsl
push
dec
jns
adc
jecxz
sub
pop
dec
jnp
mov
insl
or
sbb
xchg
xor
lods
iret
daa
push
jl
pop
popa
xchg
test
es
fisubl
into
xchg
or
push
push
sbb
xchg
shlb
jp
add
rolb
stc
or
lcall
mov
popf
mov
fstpl
lret
inc
hlt
xchg
jg
in
cwtl
sub
pop
mov
pop
pshufw
divb
addr16
mov
sbb
xchg
ljmp
or
cmc
outsl
cwtl
jmp
scas
fidivrs
shrb
xor
aad
mov
rorb
adc
mov
dec
ja
outsl
pop
cs
or
movsb
pop
mov
or
xor
mov
push
imul
lcall
push
cmp
pop
stos
int
cltd
popf
rcll
in
cmp
lods
jp
in
add
daa
imul
push
fimull
sub
daa
aad
pop
test
jl
bound
cmp
int3
or
out
sbb
cmp
test
xchg
in
in
lods
repz
cmp
jg
mov
ds
and
cmp
lods
mov
insl
imul
mov
outsb
mov
mov
movsb
mov
push
ret
outsb
enter
mov
imul
dec
mov
xor
repz
cmp
mov
aas
or
repnz
stc
loopne
sub
insb
sbb
test
out
lret
dec
push
xchg
fimull
lock
mov
xchg
cmp
pop
mov
or
mov
fists
adc
loopne
jne
and
mov
and
mov
push
push
push
push
call
push
push
jmp
into
cmc
je
xor
mov
jb
push
out
pop
add
or
push
mov
or
lret
ja
pop
repz
shll
sti
dec
cmp
fs
xchg
or
outsb
xor
movsb
dec
fsubr
push
nop
aaa
hlt
in
cmp
pop
mov
lea
xlat
dec
sub
inc
adc
aas
jae
pop
sbb
xor
stc
xor
fwait
call
push
push
and
and
in
imul
mov
xor
fsubr
mov
lock
sub
xchg
loop
fcoml
in
inc
add
push
add
inc
fucomi
mov
push
dec
arpl
dec
loope
and
cwtl
das
loop
mov
sub
dec
js
ss
cmp
xor
mov
out
xor
add
adc
jbe
fidivs
in
stos
in
sbb
sub
xor
push
rol
mov
mov
and
cmp
lret
lahf
cmpsb
sbb
mov
sbb
mov
imul
pushf
inc
mov
call
mov
mov
add
mov
adc
mov
and
mov
and
mov
cmp
jne
cmp
je
movl
movl
mov
mov
push
push
push
push
call
xor
xor
or
or
mov
mov
mov
cmp
jne
mov
mov
mov
mov
shrd
shl
mov
mov
xor
shr
mov
xor
or
mov
mov
mov
shrd
shr
mov
mov
xor
xor
or
mov
movb
movb
movb
movb
movb
movb
mov
movzbl
mov
movzbl
shl
cltd
idiv
mov
movzbl
movzbl
or
mov
movzbl
cltd
idiv
mov
movzbl
movzbl
cltd
idiv
movzbl
and
mov
movb
movb
mov
mov
add
add
mov
imul
mov
cmp
ja
mov
mov
shrd
xor
mov
shr
mov
xor
shl
or
mov
pop
leave
ret
push
mov
sub
push
push
push
movl
movl
movl
movl
movl
movl
movl
movl
xor
inc
mov
movl
mov
mov
sub
add
add
imul
add
xor
movl
movl
movl
movl
mov
or
add
mov
and
mov
sub
mov
mov
mov
add
or
sub
xor
sub
mov
mov
mov
mov
mov
and
xor
xor
div
lea
mov
add
mov
and
mov
imul
mov
sub
cmp
jbe
push
pop
mov
mov
movl
movl
movl
mov
movl
movl
xor
movl
mov
mov
sub
div
mov
xor
mov
div
mov
xor
div
xor
mov
mov
imul
mov
add
div
mov
mov
sub
sub
xor
div
mov
add
cmp
jae
movl
movl
movl
movl
xor
movl
movl
mov
push
pop
div
mov
mov
mov
sub
mov
mov
imul
mov
xor
sub
add
and
mov
sub
mov
sub
mov
sub
mov
mov
mov
mov
xor
add
xor
and
lea
mov
mov
add
div
mov
mov
sub
xor
div
add
cmp
jb
xor
inc
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
add
and
xor
mov
sub
movl
movl
mov
movl
movl
mov
mov
imul
xor
or
xor
mov
sub
mov
mov
mov
or
sub
xor
div
mov
mov
sub
mov
mov
mov
mov
mov
imul
mov
imul
or
mov
or
xor
lea
mov
and
add
xor
add
cmp
jne
pop
pop
pop
leave
ret
push
mov
sub
push
push
movl
movl
mov
mov
add
or
mov
lea
mov
movl
movl
mov
mov
and
xor
mov
imul
xor
lea
mov
movl
movl
mov
xor
push
pop
div
mov
xor
push
add
and
mov
sub
mov
movl
movl
movl
mov
mov
lea
mov
div
mov
lea
mov
movl
movl
movl
mov
mov
xor
sub
mov
sub
xor
mov
movl
pop
mov
movl
movl
mov
mov
mov
xor
xor
div
mov
and
sub
mov
movl
movl
movl
movl
movl
movl
mov
add
mov
xor
mov
or
mov
or
mov
and
mov
sub
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
add
adc
or
mov
or
or
mov
mov
or
mov
sub
mov
sbb
mov
or
or
add
mov
adc
mov
movl
movl
movl
movl
movl
movl
movl
xor
inc
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
movl
mov
movl
movl
mov
or
add
mov
or
mov
sub
mov
sub
imul
add
mov
push
mov
lea
mov
xor
div
mov
lea
push
mov
mov
push
push
push
push
call
mov
mov
push
push
or
or
push
push
call
mov
mov
xor
mov
mov
mov
and
add
lea
xor
push
lea
call
mov
mov
mov
sub
xor
imul
add
xor
xor
mov
div
cmp
jne
mov
xor
mov
div
mov
mov
xor
sub
mov
xor
sub
or
lea
push
mov
push
pop
div
mov
xor
div
mov
mov
xor
xor
div
imul
sub
push
mov
add
push
mov
sub
mov
pushl
call
mov
mov
lea
mov
incl
mov
mov
xor
shld
shl
mov
mov
xor
xor
cmp
jne
cmp
jne
mov
mov
jmp
lea
mov
mov
mov
mov
mov
sub
mov
mov
mov
sub
mov
movl
movl
mov
mov
mov
mov
pushl
pushl
pushl
pushl
pushl
push
push
pushl
mov
call
mov
mov
pushl
call
mov
push
add
push
push
call
mov
jmp
mov
mov
pop
pop
leave
ret
push
mov
sub
push
push
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
push
push
push
call
mov
mov
add
adc
and
push
and
or
push
or
xor
xor
push
push
call
mov
movl
movl
movl
movl
xor
movl
push
inc
mov
mov
mov
push
push
push
call
mov
mov
or
or
push
add
push
adc
push
push
call
mov
lea
xor
mov
div
mov
sub
mov
movl
mov
movl
mov
mov
sub
mov
xor
div
mov
xor
or
or
mov
mov
movl
movl
movl
mov
add
mov
and
lea
mov
mov
mov
movl
movl
movl
mov
mov
sub
add
xor
add
mov
div
mov
xor
pop
pop
or
mov
movl
movl
movl
mov
mov
and
sub
or
mov
imul
mov
div
leave
ret
push
mov
sub
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
push
movl
mov
mov
push
push
push
call
mov
mov
xor
mov
mov
mov
xor
mov
xor
or
mov
mov
mov
xor
or
add
cltd
adc
cmp
jne
cmp
je
mov
mov
mov
mov
add
adc
or
mov
or
mov
push
push
push
push
call
mov
mov
and
mov
mov
mov
and
xor
xor
xor
cmp
jne
cmp
jne
mov
mov
add
or
mov
or
xor
lea
xor
mov
and
add
mov
xor
xor
div
mov
mov
xor
imul
mov
push
push
xor
mov
lea
mov
mov
lea
mov
mov
or
xor
div
mov
add
xor
add
mov
add
mov
mov
mov
mov
sub
mov
sbb
mov
xor
mov
xor
mov
add
adc
add
adc
push
push
call
mov
sub
push
pop
sbb
mov
xor
cmp
jne
cmp
jne
mov
mov
add
shr
or
mov
xor
xor
add
mov
pop
leave
ret
push
mov
sub
push
push
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
adc
mov
push
push
or
or
push
push
call
mov
mov
and
or
mov
mov
and
or
xor
xor
shld
shl
shr
xor
or
or
mov
xor
mov
mov
xor
mov
mov
mov
mov
mov
push
push
push
push
call
add
adc
push
push
push
push
call
mov
mov
mov
xor
xor
add
mov
adc
mov
mov
mov
mov
mov
sub
mov
mov
sbb
mov
sub
mov
sbb
add
mov
adc
push
xor
mov
pop
sub
mov
sub
xor
mov
mov
add
mov
shrd
xor
shl
shr
or
xor
or
mov
push
mov
mov
mov
push
push
push
call
mov
mov
mov
or
mov
or
mov
add
mov
adc
mov
add
mov
adc
add
pop
adc
pop
mov
mov
pop
leave
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
and
add
mov
and
mov
sub
and
mov
mov
imul
add
add
xor
cmp
jne
mov
mov
mov
sub
add
mov
or
mov
imul
sub
add
mov
or
mov
mov
add
imul
add
mov
add
mov
mov
mov
and
mov
and
mov
imul
mov
or
mov
imul
mov
sub
cmp
je
mov
jmp
mov
sub
xor
add
jmp
movl
movl
mov
mov
imul
add
and
add
or
sub
leave
ret
push
mov
and
sub
push
push
lea
mov
mov
mov
mov
sub
sbb
mov
orl
orl
lea
push
lea
push
call
mov
mov
pushl
mov
pushl
mov
pushl
pushl
pushl
pushl
pushl
call
pop
pop
mov
pop
ret
push
mov
sub
push
push
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
xor
mov
div
mov
mov
mov
mov
imul
mov
imul
xor
or
mov
mov
xor
mov
and
sub
xor
xor
add
div
mov
jmp
movl
mov
movl
movl
mov
mov
or
xor
mov
sub
xor
mov
sub
sub
mov
mov
mov
mov
mov
mov
mov
mov
imul
imul
sub
imul
xor
add
mov
mov
xor
mov
and
sub
xor
xor
mov
div
mov
sub
mov
add
xor
add
mov
xor
sub
cmp
jbe
pop
pop
pop
leave
ret
push
mov
sub
incl
push
orl
push
xor
add
mov
sub
push
adc
mov
cmpl
movzbl
movl
mov
movzbl
jmp
movl
movl
jbe
pushl
pushl
call
xor
add
mov
sub
xor
add
inc
movzwl
or
mov
and
sbb
mov
addl
shrd
cmpl
movl
movzbl
jmp
mov
mov
jbe
pushl
call
add
addl
movzwl
sub
inc
movzwl
sbb
shr
mov
mov
xor
mov
or
mov
mov
cmpl
movl
movl
movl
jmp
movl
ja
pushl
push
push
call
sub
mov
xor
sub
or
and
xor
or
sbbl
mov
mov
xor
mov
shl
mov
subl
shrd
cmpl
mov
mov
mov
mov
jmp
mov
mov
jne
push
push
pushl
call
mov
mov
sub
imul
subl
mov
and
mov
and
mov
adc
xor
shr
mov
mov
cmpl
mov
mov
jmp
mov
mov
jle
push
push
call
mov
sbb
and
or
neg
adc
add
xor
xor
add
or
cmpl
not
mov
mov
jmp
movl
mov
jg
push
call
mov
and
xor
add
orl
subl
and
sbb
mov
sbb
mov
xor
mov
mov
adc
mov
dec
mov
adc
mov
neg
mov
cmpl
mov
not
movl
jmp
mov
mov
jbe
pushl
call
or
sub
xorl
add
adc
dec
movzwl
sbb
mov
and
mov
xor
mov
andl
shl
sbb
xor
add
shld
mov
xor
mov
shl
adcl
mov
neg
xor
cmpl
mov
mov
movl
mov
jmp
movl
jg
pushl
call
and
or
sbbl
inc
subl
mov
xor
sbbl
xor
movl
inc
movl
movl
movl
cmp
movl
jne
movl
cmp
movl
je
mov
mov
sub
and
mov
and
mov
xor
adcl
shld
or
shl
cmpl
mov
mov
movl
jmp
mov
movl
jge
push
push
push
push
push
push
push
call
adcl
movzbl
adc
sbb
and
mov
adc
adcl
xor
mov
xor
or
sbb
mov
mov
xorl
xor
movl
cmp
jne
movl
cmp
je
add
mov
mov
cmpl
mov
movzbl
notl
mov
jmp
mov
ja
push
push
pushl
push
push
push
pushl
call
orl
adc
and
orl
xorl
xor
shl
mov
sbbl
xor
addl
shr
or
adc
mov
mov
sub
mov
mov
mov
sub
xor
mov
subl
mov
mov
xor
or
sub
xor
mov
push
and
pop
orl
sub
cmpl
movl
mov
mov
jmp
movl
jg
push
push
push
push
push
call
adc
sbb
xorl
orl
sub
sub
xor
mov
sub
mov
notl
add
subl
mov
addl
lea
not
mov
mov
mov
xor
xor
shr
shl
or
mov
movl
mov
mov
xor
xor
shr
shl
or
push
lea
push
lea
push
call
mov
mov
xor
xor
shr
shl
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
lea
push
shl
call
mov
mov
xor
xor
shr
shl
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
lea
push
shl
call
mov
mov
xor
xor
shl
shr
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
shl
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
lea
push
shl
call
mov
mov
xor
shl
xor
shr
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
shl
mov
xor
or
mov
shrd
shr
mov
mov
xor
xor
or
shl
add
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
lea
push
shl
call
mov
mov
xor
shr
inc
xor
shl
or
mov
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
mov
mov
push
pushl
shl
call
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
mov
push
pushl
shl
call
mov
mov
mov
mov
mov
mov
rol
mov
xor
cmp
je
movl
mov
xor
mov
test
je
mov
mov
movzbl
sub
mov
rorb
mov
mov
inc
cmp
jb
decl
jne
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
add
push
lea
push
shl
call
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
push
push
mov
shl
mov
shrd
shr
mov
mov
xor
xor
or
add
push
shl
call
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
push
shl
call
mov
mov
shrd
shr
mov
mov
pop
xor
xor
pop
shl
or
pop
leave
ret
or
mov
mov
andl
or
mov
mov
jne
mov
movl
mul
ret
andl
push
cmpl
mov
movl
mov
movl
jmp
movl
movl
jg
push
pushl
pushl
pushl
call
and
sbbl
subl
sbb
andl
sbb
and
mul
mov
mov
mull
add
mov
mul
add
pop
ret
push
mov
sub
push
push
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
imul
add
xor
add
mov
mov
sub
imul
add
xor
div
mov
mov
jmp
movl
movl
movl
movl
mov
mov
or
mov
imul
add
xor
mov
div
mov
mov
xor
sub
mov
mov
mov
xor
sub
mov
sub
mov
add
mov
mov
sub
and
add
xor
mov
div
xor
add
mov
mov
sub
imul
add
div
mov
xor
mov
sub
mov
and
or
sub
xor
mov
sub
cmp
jbe
pop
pop
pop
leave
ret
push
mov
and
sub
push
push
push
xor
push
push
call
mov
movzbl
push
call
test
jne
xor
movl
jmp
cmpl
movl
mov
mov
jmp
mov
jne
pushl
pushl
push
push
pushl
call
xor
and
xor
or
sub
or
sbbl
cmpl
movl
mov
mov
jmp
mov
mov
jg
pushl
pushl
call
andl
xor
and
adc
adcl
xor
xor
xor
or
sub
sub
mov
adcl
movl
movl
xor
movl
cmpl
mov
mov
notl
jmp
mov
jl
pushl
push
call
inc
mov
xor
mov
inc
and
sub
movl
mov
mov
adc
movl
add
movl
mov
add
movl
orl
push
add
movl
cmpl
not
notl
jmp
mov
jl
pushl
call
or
xor
xor
adc
andl
mov
cmpl
movl
not
not
movl
jmp
mov
mov
jg
call
xor
subl
orl
sbb
xor
xor
or
or
mov
push
subl
push
push
sbbl
call
xor
mov
mov
push
adcl
push
xorl
push
xorl
push
call
notl
mov
adcl
mov
addl
add
mov
adc
adc
mov
orl
xor
or
mov
adc
xor
mov
adc
movl
add
movl
or
movl
cmpl
movzwl
movl
jmp
movl
je
push
push
push
call
inc
add
mov
xor
adc
add
xor
movl
xor
or
mov
sub
xor
movl
cmpl
movl
mov
jmp
notl
mov
jg
push
push
call
adc
and
sub
sbb
add
sbb
mov
mov
or
push
movl
mov
add
mov
sbbl
push
adcl
push
push
andl
call
sbbl
mov
mov
push
push
xorl
push
andl
push
sbbl
call
mov
sbb
mov
sbbl
xor
mov
xor
mov
and
mov
movl
xor
xor
cmp
jne
movl
cmp
jne
sbb
movl
cmpl
mov
mov
jmp
notl
jb
push
pushl
pushl
push
call
xor
and
add
add
movzwl
add
mov
cmpl
not
mov
movl
movl
jmp
mov
jae
push
push
pushl
push
call
adc
and
mov
sub
sbb
movzbl
or
or
and
movl
movl
mov
cmpl
movl
mov
mov
movl
jmp
movl
movl
jle
push
push
push
call
incl
adc
and
adcl
xor
imul
and
xor
sbbl
mov
div
sub
pushl
cmpl
mov
movl
mov
jmp
mov
movl
jae
pushl
push
call
sbb
movzwl
and
mov
add
xor
mov
mov
or
sbb
addl
xor
xor
adcl
and
xor
subl
pushl
mov
cmpl
mov
mov
jmp
movl
movl
jg
push
call
sbb
sbb
addl
or
or
xor
adc
push
pop
div
cmpl
mov
movl
mov
jmp
movl
movl
jl
pushl
push
pushl
call
and
and
movzwl
sub
not
mov
or
mov
addl
sub
add
imul
subl
and
adcl
xor
pushl
notl
pushl
pushl
andl
pushl
andl
pushl
subl
call
cmpl
mov
mov
jmp
movl
mov
jne
push
pushl
pushl
call
xorl
sub
mov
mov
adc
orl
sub
sbb
xor
movl
movl
xor
or
mov
sub
or
mov
addl
mov
sub
xor
mov
xorl
xor
xor
movl
div
imul
xor
orl
pushl
pushl
call
decl
movl
adc
mov
movl
movl
sub
mov
cmpl
movl
mov
mov
movl
jmp
movl
movl
jb
push
push
push
pushl
push
push
push
pushl
call
add
adc
add
xor
xor
or
mov
sbb
mov
mov
adc
mov
mov
mov
push
push
xor
xor
adcl
push
xorl
push
call
xorl
add
mov
movl
adc
adcl
mov
movl
movl
movl
movl
dec
movl
jne
sbb
mov
not
mov
subl
mov
addl
mov
movl
movl
mov
call
add
lea
or
mov
lea
mov
sub
mov
mov
sub
mov
mov
mov
mov
addl
xor
xor
xor
shl
and
shr
movzbl
add
or
mov
mov
lea
xor
add
xor
mov
mov
mov
mov
sub
or
mov
or
mov
mov
add
shrd
sub
shr
mov
mov
adc
mov
mov
xor
subl
xor
or
xor
mov
push
pushl
lea
push
adcl
shl
addl
call
orl
lea
subl
push
mov
subl
mov
movl
lea
sbbl
push
xorl
mov
orl
lea
mov
orl
mov
sbbl
mov
addl
push
sbbl
call
push
andl
push
pushl
call
add
mov
mov
mov
sub
or
mov
and
mov
sub
mov
movzwl
sbb
shr
xor
or
sub
shl
or
cmpl
movl
movl
movl
jmp
movzwl
movl
jne
pushl
pushl
pushl
pushl
pushl
push
call
xor
xor
xor
mov
add
addl
mov
xor
mov
adc
lea
cmpl
mov
not
movl
jmp
mov
mov
jb
pushl
push
push
call
sbb
mov
xor
or
sub
or
mov
mov
xor
subl
movzwl
add
mov
lea
mov
mov
sub
lea
xor
movl
movl
movl
movl
mov
mov
mov
mov
add
adc
xor
xor
and
mov
and
mov
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
push
or
or
push
push
call
mov
mov
sub
mov
sbb
mov
cmp
jne
cmp
je
movl
movl
movl
movl
mov
mov
mov
mov
add
adc
xor
xor
and
mov
and
mov
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
push
push
xor
xor
push
push
call
mov
mov
push
push
push
push
call
mov
mov
push
push
push
push
call
mov
mov
add
mov
adc
mov
cmp
jne
cmp
je
mov
mov
mov
xor
shld
shl
xor
xor
cmp
jne
cmp
je
mov
cmp
je
mov
mov
mov
mov
xor
xor
shrd
mov
shr
xor
mov
mov
or
mov
shl
xor
or
mov
mov
cltd
cmp
jne
cmp
jne
movl
movl
mov
mov
mov
mov
xor
shld
shl
xor
xor
cmp
jne
cmp
jne
movl
mov
mov
shrd
shr
mov
mov
shl
mov
xor
xor
or
mov
mov
cmp
jne
mov
mov
mov
mov
mov
mov
movzwl
mov
and
mov
or
mov
add
or
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
or
mov
or
mov
sub
mov
sub
mov
cmp
jbe
mov
mov
mov
mov
movzwl
mov
or
mov
sub
mov
or
imul
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
xor
mov
imul
mov
and
mov
and
mov
cmp
ja
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
push
push
lea
push
lea
push
shl
call
pushl
pushl
pushl
pushl
call
mov
mov
shrd
shr
mov
mov
shl
xor
xor
or
mov
mov
mov
mov
shrd
shr
mov
mov
shl
xor
xor
or
mov
mov
mov
mov
mov
cmp
jne
mov
mov
mov
cmp
jne
movb
movb
movb
movb
mov
mov
or
sub
mov
sub
movzbl
movzbl
cltd
idiv
movzbl
or
mov
movb
movb
movb
movb
movb
mov
mov
or
and
mov
imul
mov
movzbl
movzbl
and
mov
movzbl
cltd
idiv
mov
cmp
je
lea
push
lea
call
cmp
jne
cmp
jne
jmp
mov
mov
mov
mov
add
adc
mov
mov
push
push
lea
push
call
mov
push
pushl
lea
push
call
mov
mov
mov
mov
mov
mov
mov
lea
mov
add
movl
movl
mov
and
add
and
sub
and
mov
movl
mov
mov
or
add
cmp
je
mov
mov
mov
xor
shld
shl
xor
xor
cmp
jne
cmp
je
mov
mov
mov
mov
xor
xor
shr
shl
or
xor
shld
shl
xor
xor
cmp
jne
cmp
je
mov
cltd
mov
mov
cltd
shld
shr
xor
shl
or
or
mov
mov
xor
xor
mov
cmp
jne
cmp
je
pushl
pushl
mov
mov
pushl
mov
call
mov
mov
mov
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
push
push
incl
push
movl
cmpl
movl
mov
mov
jmp
mov
movl
jae
pushl
call
adc
sub
andl
and
mov
and
xor
or
mov
sub
and
movl
adcl
movl
mov
mov
sub
add
mov
cmpl
movl
movl
jmp
mov
mov
jbe
push
call
addl
addl
orl
adcl
mov
xor
subl
div
cmpl
movl
mov
jmp
movl
movl
jle
pushl
push
call
xor
incl
add
and
dec
xorl
sub
cmpl
movl
movzwl
jmp
notl
jbe
push
push
pushl
push
pushl
push
pushl
call
xor
or
adc
sub
mov
mov
sub
mov
sbb
mov
imul
mov
sbbl
xor
and
dec
mov
xor
div
sub
mov
and
mov
movl
movl
movl
movzwl
sbb
mov
mov
xor
or
add
add
xor
xor
orl
imul
mov
adc
mov
mov
and
sub
mov
xor
xor
sub
or
mov
movl
movl
cmpl
mov
mov
mov
jmp
movl
ja
push
pushl
pushl
call
and
mov
add
add
movl
adc
sbb
movl
movl
and
mov
movl
imul
cmpl
mov
not
movl
jmp
mov
jg
call
xor
dec
sbbl
and
and
mov
adc
imul
imul
sbb
mov
andl
and
cmpl
mov
movzbl
mov
movl
jmp
mov
mov
jne
push
push
pushl
push
call
xorl
decl
adcl
adcl
sbbl
or
mov
xor
mov
mov
lea
cmpl
movl
mov
jmp
movl
movl
jg
push
pushl
push
push
pushl
push
call
and
adc
mov
adc
mov
addl
and
and
or
mov
movl
mov
mov
sub
add
movl
movl
mov
movzbl
adc
mov
xor
movzwl
sub
mov
mov
incl
or
cmpl
not
mov
mov
jmp
movl
movl
jle
push
call
xor
or
sbb
mov
xor
inc
orl
addl
negl
mov
or
cmpl
mov
mov
jmp
movl
ja
push
pushl
call
adc
inc
adc
mov
adc
xorl
add
adc
mov
or
cmpl
not
not
mov
movl
jmp
movl
movl
jne
call
mov
xor
sbbl
notl
xor
xor
xor
sbb
subl
add
xor
not
mov
cmpl
not
mov
movl
jmp
movl
jb
push
call
orl
mov
sbb
inc
adcl
movl
sub
movl
movl
mov
add
mov
sub
orl
mov
lea
cmpl
mov
mov
jmp
movl
jne
push
call
inc
mov
sub
orl
movl
adcl
incl
cmpl
mov
mov
notl
jmp
movl
jbe
pushl
push
call
add
xor
add
notl
mov
sub
mov
or
and
sub
mov
mov
adc
mov
movl
movl
not
mov
or
add
imul
mov
imul
notl
xor
cmpl
mov
movl
movzwl
jmp
movl
je
push
pushl
call
and
subl
subl
sub
inc
cmpl
mov
movl
mov
jmp
movzwl
jg
push
push
push
push
call
mov
sub
not
sub
sbb
mov
or
mov
div
cmpl
mov
movl
movl
mov
jmp
movl
jg
pushl
call
xor
mov
or
mov
and
subl
add
and
adc
sub
andl
sub
subl
mov
movl
cmpl
not
mov
mov
jmp
movl
movl
ja
pushl
push
push
call
add
addl
sbbl
adc
not
mov
sbb
mov
sbbl
movl
cmpl
mov
mov
not
jmp
mov
jb
pushl
push
call
xor
addl
xorl
adc
mov
mov
add
xorl
mov
adc
movl
mov
mov
movl
xor
sbbl
div
movl
imul
inc
add
mov
subl
xor
andl
xor
subl
mov
xorl
div
xor
or
adc
xor
mov
movl
subl
movl
addl
movl
xor
add
xor
xor
sub
xor
mov
xor
mov
sub
shr
sub
cmpl
movl
notl
jmp
notl
movl
jl
pushl
push
pushl
call
xorl
andl
subl
orl
movl
xor
xor
and
mov
mov
imul
mov
orl
and
or
mov
orl
sub
xor
or
add
mov
mov
movl
movl
mov
or
mov
or
cmpl
mov
mov
jmp
mov
jl
pushl
call
or
sub
xor
or
subl
sub
xor
mov
cmpl
movzwl
mov
mov
jmp
movl
movl
jne
pushl
pushl
pushl
push
push
call
or
xor
sub
xor
xor
and
mov
sub
and
xorl
movl
movl
cmpl
movl
movl
jmp
mov
jb
push
pushl
pushl
pushl
pushl
pushl
call
and
orl
andl
sbb
or
movl
movl
xor
movl
sub
movl
xor
movl
mov
xor
add
mov
sub
add
mov
imul
mov
sbb
imul
mov
or
mov
adcl
lea
andl
push
call
mov
xor
add
sub
mov
mov
notl
imul
adc
add
cmpl
mov
movl
not
mov
jmp
movzbl
jl
push
call
mov
add
adcl
movzbl
or
xor
or
xor
orl
and
sub
cmpl
movl
mov
jmp
movl
ja
push
pushl
push
pushl
push
push
call
sbb
or
and
movzwl
sub
mov
mov
adc
mov
addl
xor
andl
mov
xorl
div
xor
mov
mov
sub
add
add
mov
movl
movl
movl
movl
cmpl
mov
not
notl
jmp
not
je
push
push
call
adcl
dec
mov
mov
sub
or
adc
xor
cmpl
mov
movl
jmp
movl
jge
pushl
push
call
sbbl
sub
sbb
mov
mov
sub
and
xor
sbb
addl
movl
movl
movl
xor
movl
adc
movl
movl
movl
or
movl
mov
mov
cmpl
mov
movl
movl
jmp
movl
notl
jl
pushl
call
add
adc
and
adc
and
mov
cmpl
mov
not
mov
jmp
movl
jbe
push
push
push
pushl
call
neg
mov
sub
sub
decl
sbbl
and
neg
sub
sub
imul
mov
sub
lea
mov
xor
mov
mov
sub
mov
movzbl
adc
xor
add
cmpl
mov
not
mov
movl
jmp
mov
je
push
push
call
addl
mov
and
mov
sbb
not
sub
incl
mov
lea
mov
or
and
mov
sub
inc
add
xorl
mov
movl
cmpl
mov
mov
mov
not
jmp
mov
movl
jg
pushl
push
call
mov
sub
mov
movzwl
or
subl
xor
add
adc
movl
mov
mov
sub
sub
movl
movl
mov
mov
mov
sub
or
mov
mov
adcl
xor
xor
sbbl
mov
call
mov
mov
mov
and
mov
xor
xor
orl
mov
sbbl
call
xorl
or
cmpl
movl
movl
jmp
movl
mov
jl
push
pushl
pushl
call
subl
adcl
andl
sbbl
addl
xorl
or
mov
movl
mov
xor
xor
addl
mov
call
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
mov
call
mov
or
mov
or
push
push
push
push
call
mov
cmp
jne
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
mov
mov
call
or
mov
or
push
push
push
push
call
mov
jmp
jmp
lea
mov
mov
movl
mov
xor
shr
mov
xor
shl
or
mov
mov
mov
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
mov
call
mov
or
mov
or
push
push
push
push
call
mov
cmp
je
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
imul
add
mov
mov
mov
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
mov
mov
call
or
mov
or
push
push
push
push
call
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
xor
div
mov
and
add
mov
lea
xor
add
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
xor
div
add
mov
and
xor
add
mov
mov
sub
mov
or
mov
and
mov
xor
mov
mov
sub
mov
imul
xor
xor
mov
mov
add
add
mov
movl
movl
movl
movl
movl
movl
mov
xor
mov
imul
mov
lea
mov
and
and
xor
push
pop
div
imul
mov
and
mov
or
add
imul
mov
xor
xor
mov
mov
add
add
mov
movl
movl
movl
movl
movl
movl
mov
xor
push
pop
div
mov
or
mov
xor
div
imul
mov
lea
mov
and
and
sub
xor
mov
xor
mov
and
and
or
mov
mov
add
lea
mov
andl
jmp
mov
inc
mov
mov
mov
cmp
je
mov
mov
mov
add
mov
mov
mov
mov
mov
movl
movl
movl
movl
lea
mov
mov
movzwl
xor
movzwl
sar
mov
movzwl
xor
movzwl
shl
or
movzwl
mov
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movzbl
push
lea
push
call
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
add
mov
mov
cmp
je
mov
mov
movzwl
xor
movzwl
sar
mov
mov
movzwl
xor
movzwl
shl
or
movzwl
mov
mov
mov
movzwl
xor
movzwl
sar
mov
mov
movzwl
xor
movzwl
shl
or
mov
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
or
je
lea
mov
mov
xor
mov
call
mov
mov
mov
xor
mov
call
or
or
xor
xor
mov
mov
mov
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movsbl
cmp
je
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
movsbl
cmp
je
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movsbl
cmp
jne
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
add
mov
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
cmpl
je
mov
mov
movzwl
mov
mov
mov
jmp
jmp
cmpl
jne
xor
jmp
mov
add
mov
movl
cmpl
je
cmpl
je
mov
shl
mov
movl
sub
mov
movl
mov
cmp
je
mov
mov
mov
mov
mov
mov
mov
inc
mov
jmp
movl
push
jmp
mov
mov
ret
push
andl
push
cmpl
movl
movl
movl
movl
jmp
movl
jle
push
push
push
push
pushl
push
call
subl
orl
subl
andl
subl
sbbl
addl
sub
mov
or
jne
mov
cmpl
mov
mov
movl
mov
jmp
mov
movl
jl
push
push
call
xor
adc
adcl
xor
neg
mov
xor
div
mov
mov
div
mov
jmp
mov
mov
mov
mov
shr
rcr
shr
rcr
or
jne
div
mov
mull
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
xor
mov
pop
pop
ret
subl
subl
cmpl
je
mov
xor
add
sub
xor
add
mov
mov
mov
pop
pop
pop
leave
ret
cmp
jae
movl
cmp
jae
adcl
shld
movl
shl
ret
mov
xor
orl
and
shl
ret
xor
xor
ret
