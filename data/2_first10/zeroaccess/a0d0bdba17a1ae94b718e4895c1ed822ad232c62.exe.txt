mov
mov
ret
mov
mov
ret
cmp
movl
jmp
xor
sbb
or
nopl
jmp
mov
xlat
les
das
sub
in
data16
ljmp
push
aas
inc
adc
rolb
dec
ret
clc
loopne
jmp
jbe
cwtl
lds
and
out
mov
mov
jge
mov
loop
stos
xor
int
popf
inc
idiv
sbbl
out
stos
xchg
pop
cmpsl
cmp
or
sub
jae
adc
dec
ss
mov
jne
lret
push
outsb
aam
jle
mov
cwtl
pop
idivl
addr16
mov
xchg
xchg
cmc
fdivrs
pop
jb
mov
stc
xchg
add
rorl
jmp
stc
aam
sub
jo
sub
out
aas
sbb
push
repz
add
mov
in
sti
mov
cs
add
stc
mov
insb
push
pop
add
sbb
jg
shrl
fwait
inc
push
pop
mov
lret
sbb
sub
lret
cmp
pop
xor
pop
jl
pop
pop
jg
fcmovnb
mov
lret
ds
and
mov
adc
sbb
loope
pushf
xchg
cwtl
jle
dec
sub
adc
mov
xor
xor
adc
int
dec
dec
jne
mov
jbe
cmpsl
ror
hlt
mov
cmp
jno
insl
jns
das
fimuls
mov
cltd
jae
xchg
xchg
je
aam
jge
outsl
or
fisubrl
add
stc
cli
push
gs
leave
mov
push
mov
jmp
imul
orb
xchg
mov
fnstenv
shl
xchg
adc
sbb
xor
sbb
xchg
mov
mov
sbb
bound
add
ficomps
add
mov
adc
ds
lock
and
test
mov
lods
inc
or
dec
push
cwtl
mov
ss
negb
js
xchg
cmp
pop
roll
pop
lods
mov
mov
fbstp
cmpsw
je
jge
xchg
into
mov
jp
mov
bound
pop
lret
cmpsl
mov
lods
jle
inc
adc
pop
cmc
mov
or
fnstsw
fwait
repnz
sbb
insb
sub
dec
jle
xchg
pop
gs
repnz
cs
cltd
fs
sub
mov
push
pop
xor
cmp
inc
test
xor
aas
pop
adc
shrl
daa
mov
fistpll
popa
jo
arpl
mov
fldl
xchg
inc
ret
adc
pop
fxtract
adc
insb
sub
mov
or
flds
decl
mov
std
pushf
inc
repnz
ret
das
mov
cld
jmp
insb
sub
xlat
cmp
xchg
xchg
in
sarb
sbb
dec
adc
sbb
dec
pop
jnp
fimuls
push
xlat
leave
fistl
jecxz
cld
xchg
and
sarb
sbb
mov
js
inc
inc
mov
xchg
mov
fcompl
addr16
lahf
imul
int3
rclb
push
mov
dec
xor
sub
repnz
icebp
cmp
push
sahf
repnz
mov
sub
nop
icebp
push
std
sub
add
add
or
mov
sub
add
or
cwtl
imul
jmp
cli
loopne
and
mov
inc
cmpsb
pop
test
pop
or
inc
or
mov
ja
jnp
mov
lcall
xlat
adc
dec
cmp
mov
addr16
movsb
out
ss
cmp
mov
xchg
clc
fimull
xchg
in
jae
xchg
cmp
sbb
lock
push
mov
push
inc
jecxz
ret
les
xor
ljmp
and
jns
fndisi(8087
jge
loop
lods
out
stc
cmpsl
mov
cmc
cmpsb
data16
jnp
cmpsb
sbb
mov
mov
inc
call
mov
dec
add
pop
xchg
add
fsts
in
sbb
mov
ret
leave
nop
lret
cmp
jle
out
push
cs
ret
iret
pop
addr16
cmp
cmp
push
dec
imul
mov
out
mov
movsb
push
jcxz
adc
into
sub
mov
push
sbb
test
fcmovbe
dec
fs
add
mov
pop
shrl
aaa
pop
pop
fdivrs
push
pop
in
cmp
lea
mov
aaa
inc
push
loope
into
cwtl
pop
mov
out
ss
mov
mov
iret
or
or
pop
add
add
cltd
lock
insb
xchg
gs
enter
jmp
in
mov
sub
rorl
xor
in
lcall
inc
mov
mov
popf
aam
in
mov
dec
in
adc
jecxz
fsub
mov
call
ljmp
rorb
push
and
mov
jle
jns
xor
inc
lods
adc
outsb
jbe
sbb
popa
sti
inc
popf
sbb
jl
push
inc
out
call
push
cs
stos
pop
push
imul
mov
jb
jg
call
pop
and
mov
xchg
rclb
xchg
inc
xchg
out
mov
mov
dec
sbb
scas
jo
aad
bound
ljmp
mov
rcll
ds
in
sub
int3
dec
pop
xchg
in
fldcw
pop
sbb
cmp
sbb
sbb
inc
add
mov
lods
out
fcmovnu
or
dec
inc
push
lods
pusha
push
add
daa
adc
mov
es
sbb
sub
xor
add
les
mov
mov
cmp
xor
jns
test
dec
push
xor
jae
cmpl
add
add
add
loop
mov
test
jno
mov
ljmp
dec
pop
loopne
adc
lods
outsl
mov
insl
inc
call
pushf
jge
popf
sub
inc
inc
mov
jecxz
add
cmp
jb
les
mov
dec
sub
ss
leave
rcrl
add
mov
sub
and
adc
and
movsb
loop
out
sbb
into
inc
fucomp
cmp
scas
rclb
mov
cmpsl
add
fidivs
aam
jg
jnp
int3
popa
inc
jnp
sbb
mov
pop
lahf
orb
pop
push
sub
mov
push
inc
jge
dec
fwait
sub
cs
arpl
push
test
push
pop
lods
sub
fwait
popf
or
add
xchg
xchg
pop
add
jae
movl
cmp
movl
jae
adcl
shrd
shr
ret
inc
mov
xor
and
shr
ret
xor
xor
ret
mov
mov
ret
mov
mov
ret
mov
mov
ret
mov
mov
ret
mov
mov
ret
mov
mov
ret
mov
mov
ret
mov
mov
ret
mov
mov
ret
push
mov
sub
movl
movl
movl
movl
movl
jmp
cld
xor
test
mov
mov
push
add
pandn
sub
test
sbb
and
mov
cmp
sbb
cltd
mov
inc
jle
sub
fidivrs
fmul
leave
loop
aas
fucom
lock
mull
or
mov
ss
stos
sbb
scas
enter
inc
xchg
movsb
pusha
sub
cs
adc
jge
inc
int
add
dec
mov
push
into
ss
push
jp
add
jp
dec
insb
shlb
cmc
lret
scas
pop
push
pop
mov
cmp
aaa
dec
push
inc
adc
stos
pop
sbb
fiaddl
adc
mov
popf
inc
push
mov
shll
roll
adc
inc
fwait
lret
add
inc
les
xor
mov
pop
xlat
insl
test
test
inc
fs
cld
pusha
std
lahf
push
xor
rcrl
addr16
int3
xchg
int
inc
and
xor
insb
or
pop
adc
das
dec
dec
nop
ljmp
xorl
sub
test
call
fwait
cmpsb
sbb
mov
push
xlat
lret
add
xchg
cmp
push
jge
sbb
xchg
or
movsl
mov
sbb
push
lock
cmp
push
xor
lea
xor
popf
xorb
fs
arpl
pop
mov
cmp
lods
outsb
fdivrl
imul
sbb
mov
mov
inc
rcl
or
or
test
xchg
test
xchg
sub
pop
lret
aaa
pop
adc
nop
test
or
daa
jae
pushf
push
fbld
mov
xlat
mov
cmpsl
popf
jecxz
lea
mov
pop
mov
pop
push
push
pop
pop
xchg
cmpsb
mov
mov
inc
inc
jmp
adc
mov
push
repz
lds
stos
fwait
or
mov
mov
jbe
xchg
adc
mov
and
mov
das
push
cmp
and
out
xor
ret
push
and
mov
mov
mov
in
inc
adc
pop
mov
add
cli
and
and
pop
movsb
push
cmp
popf
repz
push
out
pop
mov
pop
add
push
fimuls
int3
mov
les
les
test
sub
mov
aas
repz
dec
stos
jge
shl
xchg
cmpl
adc
addb
xorl
cmp
sub
adc
mov
movl
decb
stos
les
sub
movsl
cmp
mov
add
dec
mov
inc
in
jl
dec
repz
les
gs
jmp
adc
shl
mov
out
pop
xchg
or
dec
addr16
outsb
adc
dec
pop
and
add
pop
inc
lcall
lahf
stc
xchg
clc
push
pop
jge
cmpsl
inc
sbb
cmc
push
in
not
xchg
rclb
inc
mov
divb
ret
loop
push
push
stos
dec
add
out
sub
mov
push
ss
add
sarl
mov
ret
xchg
out
sarb
in
lds
jg
lea
jno
cmpsb
stos
into
mov
cwtl
addr16
dec
mov
or
push
or
ret
lea
or
loope
mov
and
inc
cmp
mov
scas
push
sub
cli
cmpsb
gs
pusha
ficompl
xchg
sub
adc
push
imul
loopne
gs
and
out
or
pop
or
add
rolb
adc
ftst
insl
pop
fwait
cmp
insl
mov
or
add
arpl
arpl
dec
mov
push
mov
and
imulb
bound
jp
ficoms
jge
iret
pop
aad
cmp
jp
mov
rcrb
inc
sbb
addr16
fwait
test
push
pop
mov
cmp
pop
mov
jo
cmp
or
je
push
mov
cs
mov
int
lock
icebp
je
add
pusha
pop
insl
jo
push
pop
mov
cli
ja
leave
mov
push
inc
roll
sti
je
cmp
push
dec
xlat
out
ret
jp
xor
out
jo
sub
shlb
mov
lcall
mov
jmp
jne
fs
sbb
test
sti
dec
daa
imul
xor
sub
jp
aam
adc
xor
pop
mov
push
dec
movsl
sub
inc
nop
push
lock
xorb
fmul
adcl
fidivrs
jg
rcll
xchg
icebp
push
mov
repz
into
or
push
sbb
xchg
fldenv
leave
dec
pop
push
and
cwtl
insb
outsl
popl
movsb
out
xor
push
lds
stos
pop
imul
xchg
test
sbb
jmp
movsw
into
test
dec
sub
push
test
xlat
sbb
fldt
push
cmp
mov
mov
mov
js
xchg
dec
pop
adc
push
adc
mov
adc
pop
jo
addb
xchg
js
xor
cmp
pushf
ds
pop
cmp
adc
cld
push
fs
aad
inc
inc
icebp
mov
shlb
cli
cmp
bound
inc
loop
icebp
testl
lock
adcb
inc
addr16
adc
imul
pop
cmp
xlat
xor
arpl
test
xor
loope
lret
adc
mov
sub
cli
imul
jno
add
inc
fdiv
add
add
inc
fcoml
inc
loopne
arpl
add
ds
add
lds
mov
inc
xchg
inc
inc
das
ljmp
loope
pinsrw
bsf
les
fstl
out
mov
out
fistpll
cli
insb
fwait
adc
into
imulb
inc
inc
xchg
add
push
adc
in
nop
sub
push
pop
xchg
lea
xchg
lret
jl
cs
adc
pop
into
inc
lock
test
jnp
test
loope
fiadds
aam
push
adc
dec
mov
push
jge
stc
cltd
or
add
add
inc
xchg
xor
addb
cmpsl
add
jne
stc
insl
cmpsl
ret
and
arpl
cmp
jmp
xchg
mov
out
mov
push
jge
fstpt
test
es
jo
sarb
pushf
dec
mov
xchg
inc
mov
negb
mov
push
int
push
xor
leave
ret
and
add
mov
push
xor
push
pop
stos
pusha
jnp
leave
mov
sub
lock
push
mov
mov
loop
or
out
ret
mov
or
jb
fadds
fsubs
jb
lahf
lods
imul
push
xor
fucom
xor
leave
pop
sbb
push
adc
mov
xchg
inc
pop
inc
dec
sti
pop
imul
aad
test
lahf
mov
aas
mov
popf
addr16
jge
ds
add
xchg
add
push
xlat
xchg
and
loope
push
mov
xlat
or
shlb
adc
xor
sub
mov
jmp
and
sbb
imul
push
push
es
mov
pushf
aad
clc
lea
dec
jge
sbb
adc
pop
mov
xor
loopne
loope
xchg
and
ljmp
sub
jbe
adc
cmpsl
sub
fadds
int
push
add
sbb
sub
mov
jecxz
lds
push
mov
cmp
mov
xor
in
pop
out
in
lahf
mov
sub
pop
mov
inc
dec
mov
sbb
add
test
arpl
mov
pusha
fisubrs
xor
lods
cld
fstps
aam
loopne
xchg
jmp
popa
cmc
lret
xor
adc
adc
dec
pop
push
in
xchg
push
stc
or
dec
loope
fistpl
pop
cmp
in
jmp
ljmp
push
dec
ror
lock
jmp
sub
or
fnstsw
shrl
ret
hlt
mov
push
add
fisttps
and
cmpsb
iret
adc
sub
inc
xchg
lds
aas
pop
popa
sahf
decl
lret
inc
cmc
dec
cmp
mov
sub
imul
jae
add
or
or
sbbb
ret
push
cs
shlb
into
call
adc
mov
dec
mov
mov
push
test
jo
and
dec
icebp
dec
xor
mov
or
adc
jae
inc
stos
dec
js
insl
ss
invd
mov
or
push
pop
mov
push
push
test
pushw
or
popa
or
add
xchg
xchg
aad
insl
pop
fwait
in
imul
mov
dec
rolb
idiv
ret
jmp
in
inc
sub
stos
xchg
cmp
inc
pop
sahf
cmp
sbb
cs
int
popf
jl
fsts
ja
test
shll
push
jge
mov
sub
mov
js
inc
cmpl
pop
adc
or
out
xor
fcomp
and
xchg
mov
dec
mov
je
mov
jne
inc
push
xchg
sbb
aam
mov
sarl
pushf
gs
or
xor
dec
lea
test
inc
mull
cwtl
outsb
push
in
sarb
pop
sti
push
insb
sub
imul
cmp
fwait
movsl
pop
pushw
test
movl
das
dec
orl
add
inc
les
arpl
mov
aaa
call
leave
sbb
insb
mov
nop
pusha
xor
je
sub
jle
jmp
into
adc
test
adc
movsb
push
sub
adc
out
fidivs
mov
mov
cmp
or
popa
cli
jb
inc
jecxz
mov
jbe
call
addl
sbb
int3
leave
push
aad
loope
jl
popa
and
shl
into
cli
movsb
pop
movsl
iret
mov
cmpsl
inc
cmpsl
sti
or
nop
out
push
lea
sbbl
insl
out
shl
cwtl
mov
aaa
mov
dec
mov
imul
shl
mov
aas
icebp
cli
ja
icebp
mov
inc
ret
imul
nop
add
lahf
incl
subl
mov
das
pop
call
sub
test
jp
orl
or
dec
and
ficomps
fmulp
clc
jl
pop
cmp
or
nop
dec
jne,pt
fnstsw
cmpsb
lret
ret
sub
dec
nop
push
push
push
addr16
les
xchg
xor
xchg
sub
add
pop
and
push
fwait
mov
mov
les
jns
cmpsl
sub
jne
inc
mov
roll
mov
scas
pop
push
sbb
sahf
out
cli
push
lret
sub
mov
push
clc
sbb
pop
shll
jns
inc
adc
adc
mov
std
pop
mov
mov
jl
xchg
push
mov
push
cld
dec
push
jle
fadds
xchg
lock
imul
or
cmp
mov
scas
inc
cmp
adcb
fcoml
movl
movl
mov
mov
jmp
pop
inc
sti
and
jbe
pop
js
jb
mov
add
nop
movsb
sbb
stos
mov
xchg
or
adc
pop
out
cmp
out
notb
mov
sub
jno
mov
ss
cli
lock
shl
daa
cltd
or
or
mov
sbb
shll
mov
push
stos
hlt
shll
test
addr16
push
ss
in
adc
sbb
into
std
xor
pop
jecxz
xchg
jge
pop
sarl
mov
lea
subl
add
fsts
cmpsb
sbb
lods
and
cs
cmpsl
nop
mov
and
orl
test
sbb
or
push
cmp
cltd
pop
dec
lea
add
ret
mov
jne
jp
into
adc
cmp
add
xor
cwtl
out
mov
xor
jg
lds
or
jo
cmp
repz
das
loopne
in
pop
xor
loope
jmp
lcall
call
cli
jbe
mov
repnz
xor
inc
arpl
dec
jb
mov
dec
and
jmp
cmovl
dec
cmp
out
xor
jbe
pop
aad
repz
push
inc
xlat
pop
sahf
mov
in
push
cli
mov
outsb
jbe
mov
jle
mov
adc
sub
adc
hlt
cmc
je
popa
ja
nop
outsl
es
cmp
lahf
xchg
push
xor
iret
pop
sarb
cli
sar
mov
mov
lods
mov
cmc
jge
cmpsl
or
fdivl
inc
pop
sbb
add
data16
inc
in
mov
stc
inc
mov
and
inc
and
into
jmp
rolb
xchg
enter
fs
mov
stos
call
jno
push
xor
ret
dec
fistl
iret
fldt
aaa
sbb
rcrl
mov
xchg
cs
and
add
mov
mov
jge
pop
xchg
dec
xor
cmp
ds
xchg
and
push
call
mov
ljmp
jecxz
hlt
cwtl
cld
addl
cmp
test
sub
jbe
call
in
mov
lahf
mov
jae
or
fnstcw
dec
cltd
add
out
push
aas
cltd
sbb
in
jge
jmp
jecxz
inc
rcl
jp
sbb
xchg
test
dec
lahf
pop
cmpb
or
negb
inc
xor
imul
add
jecxz
sub
xchg
add
iret
mov
jecxz
cld
add
test
dec
outsb
pop
outsb
add
cmpb
or
mov
sbbb
xchg
es
stos
repz
sub
outsl
cmp
inc
and
andl
dec
adc
cmp
push
dec
or
cmp
lods
js
leave
pop
dec
xchg
or
mov
or
and
sbb
jmp
les
lods
pop
gs
out
fiaddl
or
lds
dec
inc
mov
cmpsb
push
cmp
std
leave
sbb
fbld
sbb
jbe
or
fnstcw
xor
pop
adc
mov
pop
in
pop
mov
in
mov
ds
mov
mov
pushf
and
cmp
in
ds
sbb
mov
das
ret
sub
pop
dec
dec
cwtl
push
rclb
sbb
rolb
or
xchg
movsl
xor
inc
mov
call
imull
lcall
and
jne
add
fldenv
stos
add
neg
push
pushf
shll
xchg
pop
dec
jge
xchg
in
rclb
bound
movsl
rcrl
xchg
imul
repz
adc
add
add
into
sbb
push
data16
pop
clc
xor
adc
xor
mov
movsl
sub
sbb
xor
cmp
and
mov
lcall
xchg
loope
and
cltd
dec
mov
cmp
push
sti
lret
push
lods
sub
inc
arpl
test
fisttps
js
jl
mov
adc
add
push
test
mulb
jmp
popf
int
js
dec
adcb
dec
add
sub
mov
inc
frstor
dec
mov
push
mov
aas
iret
jnp
pop
out
mov
add
test
insl
adc
inc
and
dec
adc
sub
mov
ja
outsb
adc
sub
pusha
mov
js
dec
push
fcomps
mov
sbb
lock
out
push
mov
mov
fsubrl
movsb
pop
ret
ret
insl
sub
repnz
mov
dec
ret
nop
cmpsl
pop
es
jmp
dec
test
and
xchg
ljmp
add
insl
dec
dec
xor
jo
mov
enter
cs
sub
dec
or
cmp
je
pop
daa
sub
inc
out
jle
insl
popf
andb
xchg
addr16
mov
inc
popf
pop
xor
rcll
sub
test
pop
jne
xor
cmp
cmp
xchg
xchg
scas
pop
inc
jae
movsl
jmp
dec
xchg
rcl
sarb
and
add
addr16
mov
sub
lret
daa
out
xor
jl
xchg
insl
lret
mov
dec
test
pop
or
leave
pop
fwait
xor
in
pop
adc
xor
dec
ret
mov
push
cmpsw
inc
jo
pop
mov
lret
xor
mov
sub
sub
call
loop
dec
xchg
pop
mov
mov
fwait
sub
mov
and
xor
imul
mov
push
sub
push
movl
jmp
ljmp
stos
lea
jbe
xchg
inc
mov
loop
pinsrw
xadd
call
stos
or
adc
das
dec
add
mov
rcll
adc
xchg
jb
or
cmp
int
xchg
mov
push
add
xor
pop
dec
cmp
jno
inc
movsb
xor
mov
sbb
xor
dec
sbb
lcall
adc
pushf
mov
pop
pop
inc
imul
out
mov
sbb
mov
cld
jns
loopne
fs
rorl
push
pop
sbb
aaa
das
fbld
sub
mov
insb
cmp
divb
add
jl
gs
sbb
adc
adc
divl
pop
stos
lods
scas
int3
add
jl
jne
js
push
fimull
mov
pop
lods
mov
sbb
mov
pop
dec
mov
shlb
popf
adc
mov
popa
pop
dec
cmp
pop
adc
mov
cld
mov
stc
push
rcrb
sbb
xchg
jbe
lahf
int3
in
std
fnstcw
mov
adc
cli
stos
and
clc
divl
ljmp
pop
dec
out
popa
pop
negl
mov
mov
and
jo
fldcw
movsb
les
xchg
ds
jb
xor
pop
insl
add
out
mov
mov
jp
push
js
mov
sbb
xchg
sub
cwtl
inc
inc
hlt
sub
cs
cmpsb
loopne
push
push
cmp
mov
sahf
and
loopne
sbb
clc
jnp
imul
sub
push
adc
xor
gs
sub
movsl
gs
and
mov
push
xchg
jbe
mov
mov
ja
or
es
push
inc
cli
lret
push
pop
lods
jmp
sub
ret
inc
lods
and
leave
push
cmpsb
int3
leave
mov
subl
fstp
jb
jne
or
idivl
push
sahf
adc
mov
comiss
inc
pop
scas
repz
ja
aas
nop
ret
sbb
push
lods
mov
repz
icebp
movsb
addl
mov
and
aam
out
dec
fisttpl
mov
scas
mov
hlt
js
sbb
push
cmc
fdivp
xor
test
mov
aad
xorl
in
or
aas
dec
mov
sbb
movsl
push
sub
or
jb
mov
cmp
rcr
int
adc
adc
jne
ret
leave
sub
push
mov
jbe
popa
mov
xchg
jb
jle
iret
in
daa
in
add
rcll
daa
jo
loopne
jl
mov
cmp
mov
in
out
jno
faddp
jge
xchg
lods
rcl
es
mov
sti
scas
mov
jecxz
rorl
add
mov
les
shll
mov
or
aam
ret
fidivrl
dec
lock
add
mov
lock
or
sahf
std
in
cli
cmp
leave
aas
xchg
push
jg
mov
jp
sbb
das
cmp
outsl
push
fs
xor
cwtl
mov
iret
mov
into
shrb
lea
das
mov
inc
mov
inc
pop
jecxz
test
mov
inc
xchg
xor
inc
pop
jnp
dec
xor
sbbb
dec
roll
or
xor
xlat
movb
cmc
lret
sbb
cmc
mov
rorl
sbb
dec
jne
dec
push
fisttpl
cltd
or
adc
pop
jne
pusha
stos
jp
cs
cmp
scas
insb
mov
movsl
ret
in
mov
sarb
fsincos
cltd
mov
arpl
sub
lret
jo
mov
orb
in
vpalignr
in
outsb
daa
sbb
ret
mov
push
mov
push
scas
or
adc
mov
mov
push
je
in
dec
cmc
push
mov
test
js
xlat
pop
out
xor
mov
mov
pop
jns,pt
bound
dec
inc
sti
fs
pushf
incl
mov
xor
lds
pop
xchg
sbb
pop
pop
scas
jge
cmc
add
or
dec
jl
cld
ljmp
mov
stc
out
mov
or
addl
shll
jle
xor
fsubr
lds
or
test
pop
mov
jo
jge
cmp
push
ret
pop
orl
push
es
jge
push
in
xchg
in
test
xchg
addr16
dec
add
scas
mov
stos
pop
das
sarb
add
daa
out
sbb
nop
fsubrp
mov
and
mov
sbb
cs
fildll
into
movsl
aas
adc
xor
or
adcb
outsb
inc
pop
gs
sbb
adc
stos
aam
dec
movsbl
addr16
push
loop
or
jecxz
addb
and
stc
jge
jo
pop
add
inc
iret
lret
adc
daa
loop
stos
inc
lds
in
mov
loop
insb
popa
dec
cmp
and
negb
sbb
sub
add
xchg
mov
sub
sub
xor
xor
test
mov
jle
in
movsl
repnz
and
adcb
mov
xchg
call
cmp
fsubs
into
or
dec
fsubrs
jle
imul
std
and
xor
or
lea
incb
hlt
mov
xor
movsl
cmp
loop
sub
ja
shlb
sub
in
stos
repz
jecxz
movsl
andl
js
movl
movl
movl
movl
mov
xor
add
mov
or
sub
mov
mov
and
or
mov
or
mov
mov
sub
mov
mov
mov
mov
mov
xor
jmp
xchg
mov
imul
inc
mov
rorb
pinsrw
inc
test
imul
pop
cs
loope
jl
test
ljmp
outsb
imul
lahf
mov
mov
adc
mov
push
sub
daa
mov
nop
int
xchg
sbb
stc
movsl
mov
lods
jmp
push
cmp
mov
leave
mov
jge
add
sub
add
adc
shr
inc
cltd
out
lret
dec
mov
pop
sbb
vpunpckhwd
daa
xor
add
aas
dec
jg
in
inc
lea
cli
xor
mov
sbb
imul
dec
stos
stos
scas
add
test
add
aad
push
enter
fcoms
dec
mov
adc
mov
je
les
loopne
lcall
ret
pushf
test
or
aas
ja
call
mov
mov
mov
add
dec
js
fidivs
adc
adc
and
data16
das
lds
fsubrs
adc
xchg
add
push
in
dec
and
mov
push
dec
nop
push
inc
xlat
pushf
lret
xchg
xchg
aam
mov
push
mov
jb
xor
shrl
dec
xor
add
dec
mov
add
lods
jno
xor
xlat
cs
shlb
push
mov
add
cmpsb
push
mov
les
lods
jnp
lret
test
call
or
mov
xchg
jp
push
jle
mov
pusha
gs
ret
mov
aam
push
jg
imul
test
stc
fbld
mov
mov
cmp
or
add
imul
aas
push
jecxz
mov
dec
mov
out
push
dec
and
lds
push
jo
call
push
cmpsl
fbld
adc
xor
xor
push
insl
lods
das
cmpsl
in
mov
sbb
lods
insb
cs
or
and
movsb
iret
mov
cwtl
dec
mov
inc
clc
fisubrl
fs
outsl
pop
cs
mov
xor
cmp
and
call
inc
stos
xchg
jle
cmp
cmp
mov
or
dec
inc
ss
mov
add
call
mov
mov
mov
push
jns
fidivrs
ja
jmp
xlat
shrl
loope
pop
ljmp
enter
mov
ja
out
les
jle
push
push
adc
inc
pusha
sbb
test
jnp
inc
push
call
inc
pop
push
insb
inc
lock
sar
cmp
inc
jecxz
cltd
adc
mov
outsl
lahf
popf
mov
push
xor
ficomps
int3
fwait
fwait
out
jo
mov
mov
gs
stos
sub
or
enter
mov
and
mov
mov
jp
popa
into
scas
xor
repz
in
mov
cmpsb
xor
fimuls
nop
fisttps
inc
xchg
int3
sbb
fcomps
dec
and
in
jmp
adc
aas
xlat
sbb
mov
adc
inc
out
xlat
jne
insl
cmp
mov
or
jmp
es
pop
xlat
mov
xchg
inc
xchg
rcrb
ja
xchg
push
xor
pop
out
or
sub
imul
mov
rcr
pop
dec
je
pop
out
jmp
dec
es
sahf
jp
shll
jmp
imul
addr16
xchg
push
clc
es
insb
push
push
mov
stc
pop
cli
addb
inc
push
dec
xor
or
adcl
imul
lods
push
or
fistl
xchg
pop
mov
or
ss
ficoms
daa
and
andl
lods
mov
cld
clc
lea
aas
loope
add
js
mov
adc
lods
mov
lds
xchg
mov
and
push
xchg
dec
or
iret
mov
or
nop
mov
xor
mov
sbbl
lcall
jecxz
popa
rol
fldt
xor
daa
cltd
mov
push
insb
xor
or
push
pop
sbb
cmp
push
and
arpl
cmpl
gs
fs
data16
int3
mov
mov
js
jg
mov
sahf
xor
daa
xchg
sub
xchg
mov
sbb
pop
push
xchg
test
imul
xchg
out
mov
push
imul
aas
xchg
and
in
add
cmp
inc
lret
adc
cs
testl
mov
das
mov
repz
jb
push
cmp
jb
mov
or
int3
ficoml
cmp
je
popa
int3
and
cwtl
fistl
ss
movsl
and
add
imul
jbe
dec
jp
pop
lret
lret
decb
notl
xchg
mov
mov
fs
push
lods
shr
push
sub
cld
dec
dec
sub
or
inc
in
adc
gs
test
sub
xor
mov
hlt
mov
clc
mov
and
mov
cmp
fnstenvs
dec
loopne
stos
jb
dec
imul
std
pop
jae
xor
xchg
and
jns
in
pop
pop
arpl
cmp
jmp
cmp
dec
dec
ljmp
push
jae
divl
and
push
mov
int
dec
aaa
outsl
loopne
addb
gs
je
push
push
add
mov
imul
lea
mov
mov
imul
mov
mov
or
xor
div
mov
jmp
push
fadds
sub
push
and
cmp
dec
scas
pop
sbb
mov
pinsrw
arpl
pop
es
imul
fwait
mov
out
adc
mov
jno
jg
scas
ffree
or
aaa
sbb
scas
pop
hlt
add
push
xchg
loopne
jne
fisttps
dec
jmp
popa
aas
lcall
bnd
je
or
shrb
das
into
xchg
or
shrl
repz
jo
jge
js
and
mov
sub
add
into
sarb
int3
jnp
sbb
rcl
cltd
imul
sub
push
popf
dec
add
adc
mov
pop
pop
enter
int
in
arpl
dec
mov
mov
adc
pusha
adc
aas
xchg
testb
pop
out
mov
out
inc
xor
add
sbb
ja
insl
xor
movsb
inc
rcll
jbe
xlat
inc
jg
dec
setne
jge
into
pop
mov
repz
icebp
hlt
ja
push
popa
cmp
push
icebp
add
ds
jb
in
aad
push
lcall
loop
push
inc
rorl
shll
dec
out
stos
addb
jo
adcb
jle
xchg
xchg
lods
dec
popa
xchg
mov
fnstenv
pop
xlat
and
jecxz
cli
int
iret
push
inc
dec
or
or
cmp
cmp
aas
xchg
dec
pop
jp
cmpsb
xchg
insl
and
inc
ja
sbb
pop
nop
inc
mov
cmp
scas
add
cmc
ds
in
jns
sub
xchg
dec
addr16
out
arpl
jno
pushl
test
negl
adc
incl
pop
insb
push
mov
mov
mov
dec
xchg
and
stos
jo
adcl
daa
repz
mov
and
push
mov
xchg
and
pop
nop
xor
inc
scas
fbstp
stc
sbb
out
jmp
xor
dec
xchg
std
dec
ret
int
int
int3
push
jae
mov
int3
outsl
push
fnstcw
aas
xor
xchg
sub
lea
mov
nop
dec
aam
sahf
inc
pop
inc
out
test
adc
and
jge
aas
ret
mov
popa
fdivs
xchg
repz
imul
cmc
int3
decb
loopne
inc
ficomps
mov
and
cmp
fisttpll
mov
shr
shl
inc
lea
push
cmp
test
sbb
popf
push
popf
insl
lret
push
or
sub
cs
loopne
ljmp
les
sbb
xchg
adc
jo
mov
add
insb
xchg
pop
xchg
fwait
push
cbtw
icebp
cmp
pop
or
hlt
or
je
fcomps
add
adc
popa
cmpsb
mov
sti
loop
outsl
or
in
and
out
jmp
gs
xchg
lcall
pop
lods
popa
xor
jmp
cmp
mov
sarb
nop
lcall
mov
and
cmp
mov
loop
icebp
ss
mov
pop
push
lock
and
jl
stc
or
adcb
or
inc
jns
mov
loop
imul
mov
sub
scas
cmp
sub
loop
sbb
sub
mov
test
sub
clc
shl
fdivl
jo
pop
xor
ret
lret
in
sub
xchg
sti
pop
imul
repz
js
adc
xchg
jge
sbb
js
lods
xchg
lock
sub
and
pop
jo
ficomps
cmp
js
loop
dec
pop
and
sbb
jge
jg
test
add
mov
fdivrl
and
xchg
mov
stc
lret
outsl
lcall
es
sarb
mov
sarl
or
jbe
xchg
add
push
aas
cmp
pop
mov
jle
pop
stos
dec
jecxz
movsl
test
xorl
xor
dec
mov
cltd
sbb
dec
mov
pop
inc
cmp
rcr
push
stc
fcmovu
and
imul
sbb
dec
xchg
sub
push
mov
out
cmp
hlt
inc
xchg
daa
push
loop
cmpsl
xchg
add
pop
cmpsb
in
out
jne
lock
cmc
rcl
push
adc
jb
lret
sbb
icebp
decb
sub
rcl
repnz
jb
cmp
push
loopne
jno
aam
jp
into
mov
and
lods
and
cwtl
add
aaa
idivb
push
mov
fsubrp
adc
dec
jbe
xchg
fwait
inc
int
nop
sbb
push
xor
add
sti
movsb
jae
fistps
jmp
add
repnz
lret
les
aam
in
jmp
inc
std
mov
mov
scas
jle
nop
in
addr16
mov
jge
mov
push
push
push
movsl
add
mov
inc
jae
stos
leave
xchg
loopne
divl
fcompl
pop
mov
popl
testb
pop
push
xor
pop
pushf
ficoms
jecxz
mov
jae
mov
gs
hlt
mov
popf
cmc
push
xor
imul
int3
in
mov
ficoms
ds
xchg
fidivrs
pop
sub
scas
lock
repz
outsb
stos
mov
cs
js
push
popa
not
sbbl
xchg
adc
pop
repz
or
and
jno
pop
mov
push
subb
lods
dec
dec
fidivrl
stos
jnp
or
cmc
inc
gs
xchg
repz
inc
aam
mov
mov
pop
and
add
cmp
jb
movl
movl
movl
movl
jmp
xorb
ret
xor
xor
ret
scas
xor
data16
pinsrw
jbe
rolb
adc
shlb
inc
shlb
push
lcall
and
fildl
add
popa
jne
mov
mov
jb
mov
out
or
stc
mov
cmp
mov
adc
scas
mov
into
fidivrl
insl
shlb
test
jb
imul
lea
xchg
scas
sahf
pop
dec
or
out
movl
lret
or
pusha
push
jbe
fstl
bound
mov
out
enter
inc
loop
pop
xor
pop
sti
jns
addr16
push
xchg
dec
sbb
mov
sbb
sti
push
ss
sar
mov
test
push
pop
les
outsb
lock
push
dec
into
ror
lock
test
cmp
mov
fldenv
add
inc
cmp
in
pop
rcll
dec
mov
enter
xor
push
cmp
jmp
dec
jo
or
cli
ret
and
arpl
rcr
jecxz
ds
call
fsub
add
pop
out
stos
daa
out
and
pop
jecxz
mov
xor
fnstsw
je
sbb
adc
xchg
adc
or
shr
out
sbb
push
mov
fdivrs
add
shl
xchg
popf
imul
pop
in
or
mov
in
or
int3
cmp
imul
in
sbb
lret
mov
pop
in
ret
push
mov
test
add
xor
mov
cmc
and
aaa
daa
xor
lcall
xchg
xlat
lcall
inc
out
popa
xchg
dec
fimull
adc
pop
jmp
mov
mov
out
sarl
adc
cli
mov
and
cmp
pushf
fcoms
cli
shrl
xor
out
inc
stos
xchg
jecxz
inc
rorb
push
shll
lea
cmp
xor
ds
and
loope
cltd
sbb
hlt
nop
xchg
xor
movsb
mul
inc
or
mov
inc
jge
mov
sbbb
scas
push
roll
shll
nop
out
cld
out
mov
shl
leave
movsb
dec
lahf
je
test
or
adc
movsb
sub
xchg
mov
mov
pushf
aam
jns
or
jle
repz
sub
daa
dec
mov
lea
rolb
dec
out
clc
nop
cmpsl
inc
dec
orl
jbe
cmp
jbe
scas
dec
mov
xor
inc
lcall
cmc
in
push
fnsave
mov
inc
nop
fcoml
lahf
pop
dec
js
test
xor
pusha
imul
int3
out
out
lsl
fnstsw
cmp
jb
lret
xlat
stos
testl
mov
daa
or
cmpl
push
sbb
scas
es
mov
dec
or
adc
xchg
push
fimuls
xor
or
icebp
mov
push
test
mov
test
xor
lea
sub
data16
cwtl
mov
daa
into
jo
and
dec
mov
lock
mov
mov
aaa
cmc
test
xchg
rorl
iret
xor
ret
mov
loopne
movsb
rolb
add
pop
and
pushl
lret
cld
add
lret
notb
clc
push
ror
dec
enter
movsl
ja
push
sub
push
rcrl
ret
dec
pop
inc
rcrl
insb
lock
les
push
jecxz
std
lods
or
ss
cltd
sbbl
scas
adc
pop
addr16
out
movsl
neg
xchg
mov
adc
add
jns
pop
pusha
int3
sbb
cltd
xchg
xchg
mov
push
mov
hlt
addl
mov
sbb
mov
mov
add
pop
in
mov
dec
mov
stc
mov
aad
cmp
pop
data16
ja
sbb
dec
aad
sbb
in
fsts
and
or
ret
adc
test
popf
ficoml
into
sbb
pop
insl
inc
sub
push
es
jge
or
mov
push
add
pop
push
dec
mov
jnp
mov
ds
ret
cld
je
loope
imul
clc
aas
sti
mov
sbb
aam
icebp
das
repnz
int3
scas
jno
pop
or
scas
shll
fbld
xchg
dec
jne
mov
inc
ret
adc
jbe
sub
fwait
test
and
and
sarl
push
jl
js
dec
xchg
mov
cmpsl
inc
and
xchg
stos
mov
push
sbbl
scas
pop
outsb
push
inc
stos
leave
cmp
and
andb
jmp
jno
clc
enter
outsl
outsl
in
or
mov
inc
fbstp
js
and
mov
cli
mov
or
jmp
ret
arpl
jnp
xchg
mov
pop
test
mov
es
ds
rcll
push
xlat
xchg
jb
xchg
push
loope
xlat
enter
sbb
and
add
cmp
js
popf
mov
adc
xchg
sbb
inc
xchg
cltd
mov
shlb
out
in
adc
fmull
call
dec
hlt
dec
jecxz
push
push
and
sbb
or
pop
sti
mov
mov
shrl
adc
ss
jle
add
jmp
mov
mov
adc
fcmovnb
pop
mov
repz
xchg
fcmovu
int3
sti
je
or
add
mov
inc
hlt
rcll
add
inc
lock
inc
in
sbb
add
movl
movl
movl
mov
mov
or
lea
add
movl
jmp
add
inc
sti
daa
push
cs
mov
lcall
add
cvtpi2ps
sub
fnstenv
xchg
fdivrl
and
push
push
xchg
mov
mov
lea
pop
pop
sub
fbstp
ret
sub
mov
shll
pop
imul
cld
shl
jns
adc
outsl
pusha
aaa
jge
std
mov
or
jne
shll
pop
push
pop
or
jl
add
int
add
adc
push
xchg
xor
push
loopne
dec
cmpsb
int3
mov
in
pop
ficompl
xchg
movups
in
ss
int3
mov
popa
mov
jl
mov
stos
xchg
jns
lret
jle
adc
mov
xacquire
gs
popa
jmp
les
push
rsqrtps
mov
sti
sub
mov
testb
imul
leave
adc
mov
mov
shlb
adc
xchg
xchg
mov
repnz
scas
iret
ljmp
mov
cli
add
mov
xchg
out
mov
xchg
cmp
fldt
or
mov
xorb
jno
xor
or
popf
adc
mov
lret
rolb
lret
cmp
mov
mov
xchg
or
cltd
mov
roll
leave
out
mov
imull
test
scas
cwtl
jno
es
cmp
imul
cltd
jnp
pop
jge
sbb
or
cmc
in
xchg
adc
ljmp
imul
adc
add
pop
pusha
mov
pop
pop
pop
test
in
inc
pop
ret
lock
adc
xchg
pop
pop
pusha
cmc
mov
and
inc
sahf
sbb
jl
pop
ss
in
sub
movsb
and
and
and
jo
push
dec
frstor
mov
mov
insb
adc
mov
mov
cmp
pop
leave
les
pop
lds
cwtl
sbb
xchg
pop
cmp
es
or
push
mov
mov
daa
xchg
mov
out
fisubs
pop
mov
xchg
clc
jo
jecxz
ficoml
inc
mov
test
sub
daa
aad
dec
mov
xorl
orb
push
mov
mov
adc
dec
cmpsb
jecxz
push
mov
xchg
pop
cwtl
stos
pop
cmp
arpl
sbb
add
gs
cmp
pop
andl
inc
sbb
mov
mov
sub
push
aam
iret
sbb
mov
add
jecxz
daa
adc
sbb
mov
xor
and
push
jno
test
mov
jns
imul
jne
out
and
dec
hlt
test
jge
jl
mov
xchg
popf
xor
hlt
or
add
andb
xchg
out
add
icebp
stos
sbb
and
dec
mov
mov
popa
stos
sbb
stc
jbe
mov
sbb
push
dec
mov
mov
loopne
inc
hlt
push
inc
inc
imul
dec
int3
clc
aad
cmp
lds
sub
and
or
lcall
cli
pop
rcrw
and
xchg
repnz
inc
inc
jmp
adc
repnz
mov
adc
push
mov
add
inc
pop
insb
stos
maskmovq
bnd
cwtl
and
clc
sub
imul
push
xchg
insb
aad
call
loopne
inc
adc
insb
negb
mov
hlt
pushf
and
xor
sub
xchg
add
mov
sbb
adc
sub
dec
lods
xchg
fildll
insl
sbb
add
dec
popf
sar
mov
pop
and
ret
fwait
dec
adc
aam
addr16
pop
clc
hlt
pop
mov
cmp
mov
inc
add
dec
jmp
cmp
nop
rclb
xchg
jmp
sahf
lds
dec
rcrl
cli
jmp
insb
nop
rcll
mov
push
insl
lcall
and
push
xchg
lds
call
dec
iret
in
stos
pop
and
mov
les
dec
mov
sub
lcall
test
cwtl
inc
jno
add
jmp
jmp
mov
dec
sbbl
fcompl
out
outsb
inc
jl
cmp
test
test
xchg
push
push
mov
jns
xor
adc
nop
cmp
push
inc
repz
scas
and
mov
testl
js
add
inc
xlat
stc
push
xchg
sti
popf
mov
xor
int
cmp
pop
iret
orl
data16
lcall
cmp
cmp
dec
out
daa
stos
sbb
push
xchg
sbb
push
jmp
arpl
pop
push
fidivl
fdivs
mov
adc
sub
in
imul
sbb
and
jp
sbb
pop
cwtl
shlb
pop
dec
sti
sbb
sahf
mov
mov
fs
xchg
mov
out
xchg
push
in
and
pop
popa
jnp
stos
lods
cmpb
int3
adc
sub
out
push
adc
loope
xchg
and
inc
mov
hlt
or
and
clc
cmp
out
jo
aam
dec
subl
mov
pop
mov
dec
in
sub
sbb
mov
adc
jno
stos
cmpl
cli
xchg
std
ds
pop
adc
xchg
cmp
popl
pop
adc
out
repnz
add
movl
movl
movl
movl
mov
mov
sub
add
mov
imul
mov
mov
jmp
aad
sub
ss
adc
xchg
subb
mov
add
pcmpgtb
mov
add
inc
out
or
fmul
lock
xor
inc
jns
mov
gs
adc
mov
fidivl
test
sti
bound
pop
pop
data16
mov
push
clc
inc
test
dec
mov
loop
jmp
adc
iret
mov
test
dec
adc
in
mov
add
aam
stos
or
push
xchg
fldl
loopne
fnstsw
sbb
icebp
dec
mov
cli
lea
shrl
pop
mov
and
lcall
dec
fcomps
push
out
pop
lret
js
fdivl
insl
inc
cli
pop
mov
pop
mov
mov
into
cltd
mov
inc
outsb
and
add
test
jo
and
dec
aaa
rclb
mov
jmp
lea
and
lret
and
inc
daa
cld
cmpsl
adc
cli
nop
jp
int3
shr
pop
clc
mov
imul
ret
rcrl
jbe
loopne
mov
in
in
mov
add
scas
scas
rorb
add
or
push
and
dec
in
aad
stc
xlat
popw
cmc
pop
xor
fwait
test
inc
jnp
inc
xor
cmpb
adc
fwait
into
mov
out
lea
in
adc
mov
push
cmp
xor
sbb
adc
fidivs
test
xchg
ret
pop
push
adcl
addr16
int3
fsts
cli
std
pop
imul
inc
jmpw
push
or
jmp
jmp
dec
lock
dec
mov
sbb
and
cltd
ss
insl
jmp
cmp
cmp
sub
imul
mov
idivb
dec
les
jae
iret
jae
cwtl
outsb
repz
ror
mov
data16
lret
xchg
lret
int
mov
and
mov
mov
push
loopne
cmp
and
stc
xor
mov
scas
iret
jle
test
loopne
popa
push
cmp
inc
xchg
jmp
cwtl
call
jnp
in
and
fwait
sbb
push
mov
loopne
scas
xchg
pop
inc
lret
ret
pushf
and
inc
std
enter
add
repz
pop
xchg
scas
iret
insb
jne
fwait
and
rclb
imul
outsb
jge
inc
ss
and
popa
jge
cmp
cmp
or
inc
add
and
jmp
addr16
hlt
test
ret
cmp
gs
and
fldt
xor
pusha
dec
movsl
push
in
prefetchw
and
jno
jge
mov
dec
in
dec
dec
stos
inc
add
fisubl
das
adc
pop
sbb
mov
cmp
jbe
or
push
popf
or
sub
xor
push
push
xchg
imul
push
xor
ja
jge
pushf
jns
sbb
lock
insl
lcall
dec
sbb
jmp
daa
iret
shll
mov
cmp
dec
dec
adc
mov
cmp
mov
inc
fwait
pushf
out
or
repz
pop
aas
xchg
mov
pop
nop
imul
xchg
int3
outsl
and
push
mov
ss
jbe
insb
lret
push
pop
or
mov
mov
rolb
push
fnsave
xlat
sbb
scas
mov
push
xchg
mov
scas
or
cwtl
mull
or
and
jne
outsb
sub
pop
inc
leave
movsb
ret
rorb
imul
pop
dec
xor
mov
scas
fwait
rcll
loopne
inc
mov
pop
mov
neg
and
xchg
call
jb
adc
sahf
add
inc
dec
js
inc
pop
loope
inc
xor
push
jae
jnp
orl
loop
push
push
inc
test
out
ljmp
cmpb
pop
cmpsl
mov
inc
jns
rolb
mov
mov
and
mov
inc
out
leave
cld
aam
test
xor
sbb
pop
loope
in
pusha
hlt
sahf
sub
jecxz
rclb
mov
push
jbe
in
push
jp
lcall
fbstp
adc
test
push
outsb
pop
xorb
adc
jp
cmp
movsl
xchg
out
inc
call
sub
mov
sbb
xlat
cmpsb
je
gs
sbb
mov
inc
cmc
sub
xor
leave
rol
push
dec
inc
fxam
fiadds
cli
stos
mov
int3
adc
pop
lods
push
lds
lret
pop
fs
shl
cli
call
mov
pusha
repz
in
out
cltd
daa
pushf
pop
and
push
pop
cmpsb
cmp
psllq
jmp
or
sub
pop
add
xor
sbb
movsb
adc
adc
adc
or
mov
clc
cmp
mov
push
adc
das
test
jmp
insl
jecxz
jbe
push
stos
cwtl
or
jmp
mov
shrl
xor
jae
stos
pop
dec
and
fwait
call
fstps
pop
lds
push
insl
stc
inc
leave
inc
std
mov
xor
stc
mov
inc
movsb
mov
leave
dec
das
pop
add
out
enter
adc
sbb
or
fs
sbb
cmp
pop
jmp
jo
cs
ss
in
out
jbe
and
in
das
pop
in
mov
lret
pop
mov
push
mov
int
lds
jp
aam
leave
into
loope
jmp
and
cmpsb
ljmp
mov
cmpsb
cs
lea
out
xchg
cmp
fmuls
dec
cli
sbb
and
js
push
or
subb
push
mov
jne
xor
mov
mov
add
xor
sub
mov
mov
mov
mov
mov
sub
mov
imul
mov
or
sub
mov
jmp
out
aad
aad
aad
adc
pop
push
pinsrw
punpcklwd
lds
fsts
mov
mov
sbb
scas
int
inc
pop
movsb
jecxz
xor
arpl
xor
fmuls
adcb
out
xchg
out
mov
aam
fistpl
jnp
sbb
adc
mov
pop
push
jbe
and
fstpt
movsl
inc
push
pusha
mov
xor
test
pop
fwait
popf
ss
rolb
adc
cmp
gs
cmp
jnp
mov
pushf
adc
pop
mov
adc
and
lea
dec
mov
pop
xor
enter
mov
cmp
es
sub
popf
lret
xchg
ret
fmul
and
xlat
pop
sbb
xchg
popa
sbb
jle
pop
out
rep
sbb
leave
sbb
aas
ret
adc
aaa
sub
sbb
mov
xor
add
sub
rcrl
push
mov
inc
add
mov
pop
int
pop
inc
gs
xlat
push
clc
cltd
lahf
adc
pop
lret
xchg
inc
pop
cmp
add
stos
push
adc
hlt
rorl
call
sub
and
enter
std
pop
jge
push
scas
xchg
or
aaa
cmp
mov
add
lret
test
push
sbb
mov
nop
hlt
in
ret
xchg
sti
loopne
xor
mov
or
xor
filds
std
ret
aas
lea
out
fiadds
repz
divb
frstor
test
daa
xchg
sbb
jbe
icebp
aas
mov
and
lds
add
lcall
xor
or
je
loop
stos
fistps
js
mov
xchg
imul
stos
data16
dec
data16
pop
ljmp
js
xor
mov
nop
in
loope
cmpsb
mov
in
mov
inc
cmp
testb
cmpsl
inc
mov
cmpsl
push
cmp
out
push
rcrb
cmp
shl
and
ja
xor
call
fcmovbe
fcompl
fcmovnu
aaa
aad
sub
cmpsb
sub
sbb
test
jae
xor
stc
mov
outsb
std
cmp
push
rolb
xor
jmp
sbb
adc
pop
cmpsl
push
cmp
mov
es
js
out
lea
idivb
cli
pushf
cld
in
outsb
xchg
out
add
jp
mov
ret
insb
push
push
int
jo
int
test
repnz
pop
stos
stos
cwtl
jge
popa
mov
or
subb
jae
movsb
sti
inc
stos
mov
dec
and
cmp
mov
ret
mov
inc
es
sahf
insb
bnd
add
lds
data16
lret
test
fimuls
notb
mov
imul
repnz
xor
int3
cmp
pop
fwait
sbb
addl
fsubrp
and
shlb
lcall
nop
cmp
rcrl
adc
sbb
mov
pop
sbb
mov
adc
orl
cli
push
xchg
dec
mov
add
xor
xchg
aaa
test
sub
stc
push
int3
inc
and
adc
add
mov
into
std
mov
imul
dec
or
les
imul
mov
jne
in
dec
lret
mov
imul
rcl
ds
enter
test
lret
lock
add
sub
rcll
add
in
push
out
out
ret
testb
js
cld
or
add
add
mov
ljmp
insl
or
push
dec
and
and
and
fprem
and
push
mov
lods
ffreep
aas
lea
iret
pushf
aaa
push
xchg
push
adc
mov
jbe
mov
stos
push
jns
mov
cs
xor
popf
sar
hlt
fisubl
fisubrl
or
adc
mov
divb
or
xor
cltd
inc
cltd
in
mov
mull
pop
aam
out
jno
jno
cmpsl
arpl
and
cmpsb
cli
loop
push
lret
push
xlat
cmpsb
push
mov
int
add
aad
pop
adc
mov
bound
jo
and
cs
adc
mov
lahf
in
sbb
lds
popa
adc
fsubrp
dec
fwait
xor
jo
divl
dec
push
stos
inc
or
sti
and
outsl
shll
jmp
cltd
in
fucomip
in
js
adc
add
cld
xchg
stos
ds
dec
lret
pop
aam
adc
xchg
fcmovu
inc
popa
pop
xchg
mov
cmp
int
fimuls
lcall
jmp
and
rcll
fbstp
subb
hlt
and
push
movsl
mov
jbe
arpl
xlat
pop
inc
xchg
pop
push
push
pop
and
xor
sub
and
add
push
loope
mov
cmpsb
xchg
insl
fimuls
mov
sub
push
xor
and
imul
mov
xor
arpl
add
aad
outsb
add
mov
cmpsl
or
jns
daa
call
jl
push
fs
dec
or
loop
repz
mov
in
pop
xchg
data16
jbe
rorb
popf
stc
es
cli
add
inc
fadds
push
sub
cmp
clc
cmp
mov
incl
xor
add
mov
xor
mov
sub
add
cmp
jbe
xor
inc
mov
mov
movl
movl
movl
movl
movl
movl
mov
mov
add
xor
xor
div
mov
xor
mov
mov
div
mov
xor
div
mov
sub
mov
and
imul
and
xor
cmp
je
push
movl
movl
movl
movl
movl
mov
mov
imul
xor
add
mov
and
sub
mov
mov
add
xor
mov
mov
and
sub
mov
mov
mov
mov
mov
xor
or
imul
or
mov
imul
xor
mov
div
add
mov
and
imul
and
xor
cmp
jne
pop
pop
pop
leave
ret
mov
mov
ret
mov
mov
ret
mov
mov
ret
push
mov
sub
push
push
push
movl
movl
jmp
imull
xchg
xchg
aam
mov
js
add
ss
testl
push
jmp
xor
inc
and
jle
test
mov
pop
leave
lock
dec
mov
cs
xchg
sahf
sub
mov
nop
jg
in
sahf
jmp
scas
in
rcrl
leave
cwtl
das
frstor
and
cmp
jp
mov
test
push
jmp
dec
mov
stos
dec
add
cmp
stos
jp
insl
and
mov
mov
in
dec
std
dec
sbb
mov
jp
adc
insb
xchg
std
sbbb
jo
sahf
and
enter
sbb
mov
mov
pushf
into
xchg
ret
fildl
xlat
push
shrb
in
or
or
mov
loope
lahf
jo
add
mov
scas
jle
in
imul
push
mov
in
cmpsl
add
ljmp
test
sti
sbb
mov
sbb
ffree
aad
or
and
xor
dec
flds
push
push
pop
adc
leave
in
add
sub
iret
incl
push
je
test
mov
loope
test
mov
sti
fwait
xlat
insl
lods
ret
in
sub
and
push
mov
ret
bound
rclb
add
cltd
push
xor
pop
jge
mov
lods
xor
cmp
and
popf
insb
pop
enter
insl
xor
pushf
fidivs
add
mov
cmpsl
mov
xor
loopne
cmpsb
nop
cli
rcrl
stc
xor
jae
xor
cmpsl
xor
mov
rorl
jnp
je
pop
sti
cmp
aam
bound
and
add
loope
cld
cmp
mov
or
bound
test
mov
out
iret
lahf
fs
packssdw
lds
stos
and
fidivs
arpl
insb
outsb
test
aad
imull
cmp
pop
xchg
dec
cmp
inc
rcll
mov
mov
pop
push
push
syscall
mov
mov
add
cmp
imul
mov
hlt
cmpsb
test
cmp
jno
mov
adc
sbb
jbe
xchg
pusha
cmpsb
fistps
xchg
jo
cmpsl
jo
xor
or
mov
add
stc
test
mov
insl
les
imul
push
rorl
push
cs
dec
mov
add
clc
aad
mov
shlb
adc
cmc
and
les
loope
push
rolb
pop
mov
out
leave
popf
lret
popa
call
or
rcrb
push
ret
aam
outsl
inc
mov
and
das
xchg
xchg
movsl
subb
cmp
sbb
test
sub
inc
and
adc
mov
mov
sbbb
ds
adc
outsl
int
and
daa
and
jmp
or
xchg
addr16
sbb
mov
mov
std
inc
inc
stc
test
cmp
das
js
sysenter
repnz
mov
xchg
aam
xor
adc
mov
mov
insl
imul
lcall
dec
sbbb
fimull
push
mov
sbb
jne
xchg
incb
adc
movl
ljmp
gs
fwait
jp
mov
popf
mov
mov
mov
loop
mov
jb
cs
outsl
mov
ret
insl
mov
in
add
fwait
and
mov
sub
in
lcall
jge
imul
jnp
xchg
xchg
insb
inc
int3
jae
mov
popf
test
pop
xchg
idivl
and
inc
xchg
jo
push
cmpsb
sub
mov
mov
scas
mov
pop
jo
jmp
int3
bound
decb
stc
push
test
repnz
lods
rclb
aad
ret
inc
xlat
aam
stos
pusha
je
dec
stos
aaa
jnp
insl
inc
out
cmp
js
xchg
movsl
out
sahf
inc
xor
aas
sub
add
dec
mov
inc
pop
inc
insb
add
clc
inc
sub
in
sub
mov
cli
stc
xor
add
aam
sbb
insb
xor
icebp
inc
cld
cmc
mov
sbb
imul
int3
jmp
lcall
gs
adc
test
mov
ds
loope
dec
scas
mov
and
pop
ret
sub
cli
ljmp
shll
shrb
sub
out
cmp
leave
scas
mov
call
arpl
push
rclb
sarb
iret
aad
aas
dec
or
in
clc
xchg
scas
icebp
iret
loop
je
cmp
in
repnz
jp
and
push
aas
dec
xchg
dec
sti
and
push
out
clc
adc
adc
add
add
adcl
inc
jg
jne
inc
ja
jb
and
or
mov
test
je
mov
shll
jg
add
pop
xlat
and
dec
ja
mov
in
add
xor
insl
popa
fmull
add
inc
out
loopne
jo
shrl
loope
or
dec
js
daa
xchg
xchg
mov
push
lcall
add
and
mov
cmpsb
fld
xor
pop
js
enter
xor
aad
aad
int
pop
int
jo
hlt
sahf
xchg
jmp
jmp
mov
les
mov
shlb
mov
pop
dec
push
lods
cli
scas
scas
cmp
outsb
push
int3
shr
pop
inc
out
decl
lods
ljmp
add
sub
das
jo
call
shr
sub
xchg
call
repz
ss
jg
xchg
movsl
jb
jno
mov
sub
aam
or
inc
jno
mov
movsb
xlat
mov
push
push
imul
ret
jns
lods
jb
jbe
inc
ja
icebp
cs
and
stos
outsb
icebp
and
jl
leave
stos
jnp
sarl
push
sysexit
fs
or
xchg
xchg
jb
pop
in
out
cmpsl
rclb
fldcw
pop
jb
mov
ret
fstpt
and
adc
push
outsl
cmc
push
out
fidivrs
in
fdivrp
jg
scas
out
push
out
mov
sbb
sbb
inc
mov
pusha
add
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
jmp
pop
fdivl
jo
push
push
mov
push
add
add
aam
pop
push
xchg
cmc
lods
mov
adc
cmpsb
leave
shlb
decb
sti
daa
adc
xchg
add
add
lahf
xor
andl
mov
std
aas
mov
aam
add
bound
pop
jmp
pop
inc
aas
rol
inc
lea
in
shlb
call
scas
cli
dec
loopne
adc
fxtract
int3
mov
shrb
es
loope
add
mov
xor
pop
cwtl
xor
sub
divb
sarl
mov
push
or
sub
push
sub
xchg
mov
add
mov
inc
out
jg
cmp
enter
aaa
je
lock
rcll
fistl
mov
fmull
pusha
fldt
xor
or
roll
shll
or
cmp
mov
test
xchg
out
movsb
in
xor
aas
push
mov
int3
popa
or
pop
dec
ds
rep
inc
sub
mov
lret
push
sbb
in
popf
add
pop
cmc
mov
mov
xor
sub
subl
jmp
push
sub
mov
sti
mov
mov
stos
and
dec
pusha
fdivrp
lock
dec
test
push
mov
or
push
adc
xor
aaa
jge
mov
ljmp
test
push
sti
ja
scas
dec
cwtl
roll
dec
sarb
mov
mov
push
sbb
push
rclb
pop
cmpsb
arpl
and
dec
aaa
push
out
xor
sbb
and
test
test
stos
or
shlb
lods
out
or
adcb
lea
movsb
sarl
push
lods
jle
icebp
cmc
mov
push
add
inc
push
insb
pop
xor
clc
mov
adc
mov
imul
and
cmp
std
stos
xchg
pop
ret
fldt
loope
fwait
ljmp
mov
outsl
mov
add
cmpsb
test
inc
mov
orb
xchg
cmpsb
push
lds
add
pop
lcall
mov
jg
outsb
out
fsubrs
mov
icebp
or
stc
outsl
mov
rcll
insl
ret
fcomps
or
iret
icebp
sub
in
pinsrw
pop
jne
ja
icebp
sbb
out
sti
mov
adc
hlt
imul
dec
jmp
decl
or
add
and
xchg
fwait
push
xchg
in
xor
mov
scas
inc
mov
aaa
repnz
mov
mov
andl
ljmp
test
loopne
push
push
cmpsb
fidivrs
sbb
pop
push
or
loope
sarb
jo
jns
test
pusha
clc
add
push
xor
jp
outsl
scas
stc
rol
push
aaa
dec
lahf
sub
fidivrs
imul
and
cmc
sub
pusha
ss
cltd
fwait
pop
pop
ret
push
sub
jg
sub
lret
inc
xchg
es
lods
loopne
add
adc
push
push
add
das
jmp
jecxz
daa
add
in
in
sbb
imul
sub
test
mov
inc
icebp
mov
push
es
pushf
sbb
jno
cmp
push
or
lods
jo
push
push
mov
sti
aam
arpl
jl
sub
sbbb
xor
pop
jns
jne
and
or
mov
add
negl
int
nop
gs
mov
mov
das
out
jo
shl
je
stos
mov
arpl
mov
je
push
das
adc
jne
pop
push
aas
lret
xchg
jmp
xor
mov
fwait
mov
add
mov
adc
inc
sub
aaa
jbe
xor
cmpl
cmpsl
push
repnz
push
add
pop
pop
test
dec
pop
hlt
gs
loopne
imul
dec
mov
xchg
mov
ss
enter
dec
jmp
sbb
mov
pop
sub
insl
xchg
sti
shr
mov
mov
adcl
in
mov
push
test
cmpsl
ret
sub
mov
iret
and
imul
les
mov
cmp
jo
sub
out
and
sarl
add
or
fisubl
mov
daa
out
daa
loop
dec
pop
pop
imul
xor
push
or
scas
cmpsb
dec
aas
jno
les
mov
aaa
sbb
pop
repnz
imul
cmc
xchg
jns
popa
les
dec
xor
cwtl
jno
mov
imul
inc
fst
rolb
mov
cli
popf
sti
pop
mov
sub
inc
int3
sti
mov
test
pop
stos
and
sahf
jno
cmovs
mov
lea
cmp
sub
jb
jnp
sbb
xor
jae
dec
adc
addb
fiadds
xor
test
jp
or
in
cmp
popa
mov
inc
pop
add
arpl
mov
aaa
mov
inc
xor
rcl
icebp
outsl
into
pop
adc
dec
out
shrb
clc
bound
dec
loop
das
push
rorb
mov
ret
out
pushf
add
cmc
iret
mov
je
int3
jle
inc
add
cltd
loopne
aad
mov
xor
pop
arpl
aaa
sbb
mov
adc
mov
or
bound
mov
sub
dec
adc
sbb
sahf
inc
mov
lods
int3
outsb
sbb
dec
aaa
xchg
out
loopne
add
scas
lods
dec
pusha
jmp
dec
sbb
add
movsl
or
shll
test
sbb
cltd
push
sbb
aaa
jmp
inc
bound
cs
popa
mov
pop
mov
mov
fs
xor
mov
jl
fldl2t
icebp
int3
jo
shr
outsb
arpl
es
inc
jecxz
cld
lods
add
cmpsb
mov
jg
xchg
test
push
out
xor
sti
stos
or
ss
jo
jge
add
testb
sub
pop
sbb
ret
dec
jnp
fwait
stos
sbb
mov
sub
sahf
fidivl
dec
add
es
dec
xchg
mov
mov
jl
push
inc
dec
mov
xchg
sub
sub
int
ret
cli
movsl
ss
pop
sub
inc
cld
addb
mov
mov
mov
mov
push
add
push
adc
jmp
lcall
xor
cmc
cmp
stos
pop
add
nop
int
leave
idiv
cli
push
repz
les
and
movsl
fmul
hlt
sub
sahf
push
out
push
and
int
cld
gs
push
mov
out
mov
or
adc
and
push
jns
jle
jno,pn
pop
and
pop
cld
insl
int3
push
sbb
stos
aas
out
jo
subps
aam
xchg
leave
ja
sar
mov
stos
xchg
lahf
insb
aad
pop
cmpsl
cmp
jb
in
mov
mov
push
jge
movsb
adcl
pop
addr16
into
push
xchg
ja
test
lds
ret
adc
xor
bound
mov
aas
and
jno
cmp
test
jns,pt
lds
jo
mov
dec
sbb
subl
fcmovnb
lcall
sub
mov
sbb
push
in
pop
outsb
add
int
mov
rclb
xor
xchg
xchg
inc
pop
push
xchg
rclb
jl
add
out
ficoms
and
add
mov
add
negl
mov
cs
cmc
jno
outsb
or
sarb
inc
dec
sbb
jmp
push
push
mov
push
jmp
xor
push
daa
into
call
sub
ret
sar
and
cli
pop
or
jo
int
xlat
push
dec
mov
push
dec
cltd
fisubrs
inc
aam
mov
cs
lcall
rorb
add
imul
push
insb
repz
int
mov
dec
out
jno
pushf
mov
aas
adc
pop
aas
lcall
adc
cmp
xor
mov
sbb
lock
shr
cld
jae
call
cmpsl
dec
mov
les
jbe
jecxz
stc
inc
cmp
pop
rep
add
fs
xorb
pushf
push
or
xchg
ret
mov
rcl
lret
stc
xor
add
orb
xchg
pop
daa
add
mov
adc
sbb
dec
sbb
nop
push
mov
fsubr
mov
rorb
notb
out
pop
mov
push
cmp
xchg
inc
mov
mov
lret
cmpsl
movl
ret
call
rclb
jns
dec
jge
fs
testl
imul
pop
mov
pop
sahf
clc
stos
and
aas
xchg
rcl
adc
fnstsw
inc
subl
rorl
xchg
mov
cwtl
imulb
gs
adc
fidivrs
mov
dec
mov
mov
cmpsl
fidivs
xchg
shlb
sbb
test
mov
adc
push
xlat
mov
jae
xor
ret
adc
fbld
jbe
xchg
mov
sbb
addr16
popf
scas
cmp
les
shr
adc
fidivrs
pop
push
icebp
push
sarl
inc
jb
addr16
lahf
daa
xchg
sti
cmp
stos
lods
cmp
or
mov
jae
mov
adc
mov
bound
ja
andl
xorb
daa
cmp
add
mov
or
scas
and
add
lahf
adc
and
orb
movsb
jae
rcl
arpl
repz
loop
mov
lcall
lods
xchg
aas
sar
xor
test
or
je
lods
mov
dec
cmp
adc
es
mov
imul
hlt
mov
jnp
movsl
and
pop
inc
sahf
inc
ficomps
lock
pop
fildl
sub
lods
sub
mov
pusha
or
jp
hlt
adc
mov
ljmp
and
push
lods
jle
pop
aad
or
popa
and
data16
cmc
pop
ds
jecxz
test
xchg
in
mov
rolb
lret
or
es
mov
fsubs
mov
popa
xchg
jge
or
xchg
inc
lret
ss
pushf
mov
cmc
scas
jb
sti
je
sbb
outsl
add
sub
mov
xor
pop
bound
rcrl
aam
popf
outsl
cmp
xor
mov
test
xor
xor
cld
sbb
sub
jnp
test
adc
in
stc
cltd
test
add
das
fstl
shr
aas
sbb
adcl
mov
call
mov
sar
dec
aas
mov
sarb
mov
jmp
neg
outsb
xchg
jmp
or
xchg
jmp
ss
sbb
push
xor
mov
jl
sub
jmp
inc
scas
inc
push
stos
sbb
jbe
sbb
loop
popf
sub
fidivs
cwtl
nop
push
pop
sbb
and
clc
sti
leave
fldl
outsl
inc
fmull
push
test
adc
lret
fnsave
cltd
aaa
xchg
sub
jo
in
push
ds
inc
inc
call
sahf
ror
xor
mov
mov
int
push
sub
lcall
outsb
add
xchg
pop
movsl
mov
ja
pop
rol
iret
adc
repz
dec
sub
mov
into
xchg
jp
jo
pop
xchg
cmp
dec
orb
and
add
push
lret
leave
int3
aad
add
ds
movsb
xchg
cltd
test
xchg
xor
mov
jmp
mov
setge
sub
mov
add
rcll
movsl
jmp
into
sub
cmp
mov
in
cmp
jae
rcrb
repnz
jl
cmpsb
dec
fisubs
repnz
mov
jb
pop
mov
mov
mov
outsl
pop
shlb
xchg
pop
out
pushf
mov
cmp
sub
filds
out
sarl
mov
shlb
pop
cmpsl
in
ds
in
sbb
lds
mov
std
mov
add
xlat
mov
lret
mov
sahf
push
test
fisttpl
ret
sub
xchg
xchg
imul
sbb
jmp
mov
pop
test
adc
xchg
mov
cli
jg
inc
cmp
push
inc
push
repnz
jl
ljmp
fidivrs
add
scas
inc
popa
mov
xchg
push
push
hlt
adc
sub
dec
popf
std
and
jns
lret
fnstcw
pop
dec
leave
push
mov
mov
pop
jmp
notb
inc
lea
lods
scas
push
push
mov
mov
add
and
adc
cmp
xor
xchg
xchg
add
mov
mov
sub
mov
jmp
mov
and
cwtl
sub
inc
ss
xchg
add
nop
xlat
orb
jecxz
imul
ret
mov
cli
enter
xlat
repnz
movsl
in
pop
cmp
lahf
jle
or
mov
inc
aam
jp
jle
mov
dec
in
nop
add
les
push
add
lcall
pop
imul
pop
push
jns
xor
iret
mov
lods
je
lret
xorb
rep
in
xchg
lcall
in
in
xchg
jmp
add
scas
cmpsb
aam
orb
xor
out
pop
stos
or
mov
sbb
outsl
roll
adc
add
add
lds
dec
sub
adc
add
jbe
pop
rclb
pusha
int3
out
outsl
mov
aas
adc
or
sbb
lea
pop
push
lods
cmc
aas
jae
frstor
test
pop
pop
add
dec
cltd
addb
loop
push
jmp
sbb
sub
outsb
pusha
pop
pop
inc
in
cltd
mov
out
push
lahf
fs
or
adc
lds
mov
pop
cwtl
dec
sarb
dec
subb
pop
push
sub
rclb
dec
dec
mov
insb
add
mov
xor
and
ja
outsb
pop
and
mov
push
or
and
dec
cmpsb
xchg
outsl
xchg
jnp
and
xor
gs
xor
or
mov
push
pop
sbb
xchg
pop
xor
push
int3
jl
icebp
and
xor
jo
xlat
jg
icebp
test
imul
bnd
out
dec
xor
lahf
es
mov
pop
mov
xchg
in
push
sub
ret
jae
daa
push
nop
cmp
mov
sub
pop
or
sbb
inc
cmp
iret
into
call
push
mov
arpl
bound
ret
cmp
mov
loopne
out
imull
xlat
or
push
stos
or
add
test
mov
ss
test
push
sub
sub
lret
mov
pop
int
sbb
stos
pushf
clc
loopne
add
cmp
push
test
sbb
cmpsb
sbb
aad
push
jnp
inc
pop
pop
inc
cmp
xor
mov
pushf
lds
push
pop
icebp
cmc
ret
inc
cmp
lea
dec
lret
xchg
dec
aas
and
and
pop
jnp
xor
add
addl
sar
add
xor
cmpb
popf
xor
mov
fistl
scas
lock
icebp
filds
push
fistpl
fs
mov
dec
add
mov
adc
add
push
aas
mov
adc
out
repnz
or
stc
movsl
mov
stos
cli
mov
call
cmp
mov
test
inc
fwait
in
inc
stos
les
cwtl
int
pusha
pop
adc
push
insb
and
cmp
cmp
scas
mov
sbb
addr16
jns
xchg
out
sub
cmc
loope
lcall
hlt
repnz
leave
mov
cmp
movsb
iret
cs
aaa
inc
jl
jae
mov
or
mov
pop
call
xchg
cltd
sbb
cltd
xor
scas
idivb
push
pop
ret
shrl
pop
prefetch
popa
xor
idiv
in
outsl
jecxz
cmp
fwait
psubsw
cwtl
xchg
imul
sarb
sbb
jns
movsb
inc
dec
xchg
mov
adc
sti
sbb
or
out
add
int
jmp
mov
adc
dec
inc
xchg
aaa
mov
push
pop
popa
push
xchg
sahf
lret
enter
data16
jp
push
ret
lods
out
mov
pop
mov
pop
or
cmp
sub
xor
mov
cmpl
cwtl
mov
cmp
push
push
mov
fnstcw
sub
ficoms
pop
inc
add
cmc
bound
lock
mov
push
cmp
ljmp
aam
iret
add
out
dec
loopne
add
mov
sbb
mov
sbb
inc
aam
repnz
popf
or
xchg
pop
jge
or
dec
inc
dec
add
es
cmp
push
test
pop
div
dec
cli
dec
pop
ret
add
xor
jno
repz
xchg
xlat
lods
std
in
jb
xchg
lcall
and
mov
ja
js
fcoms
repnz
xchg
gs
dec
into
jp
and
mov
fcmovne
xchg
es
cmp
loope
in
mov
xchg
dec
test
ljmp
aam
mov
xchg
mov
mov
adc
sub
clc
roll
dec
pop
lods
aad
mov
pusha
adc
inc
outsb
jl
mov
push
pop
sarl
movsb
bound
test
into
mov
cli
xlat
mov
push
pop
jmp
adc
fs
xchg
cld
cmp
mov
push
lret
cmp
ss
dec
arpl
xchg
cltd
push
xchg
and
jbe
and
hlt
mov
or
dec
mov
mov
lret
xor
cli
out
mov
ljmp
cmp
mov
adc
insl
pop
sub
repnz
mov
jle
out
aas
shl
jmp
push
mov
movsl
inc
sbb
addl
cmpb
mov
popa
stos
das
sub
ljmp
or
sbb
pop
jp
jp
mov
aaa
sbb
call
push
test
mov
push
movsb
imul
add
ds
cmp
mov
inc
xchg
or
or
or
rcll
sti
pusha
aad
sahf
add
popf
fbstp
les
js
jbe
and
xlat
stos
jns
pop
mov
mov
mov
jp
fisttps
fmull
push
mov
mov
dec
add
mov
mov
fldenv
outsl
test
jp
bound
ja
ffree
push
and
sbb
stos
jg
icebp
rcrl
push
mov
pop
pop
insl
pop
xor
ja
jno
cmp
pushf
stos
xor
and
xor
add
jno,pt
divb
adc
xchg
add
and
jb
orb
enter
ja
jp
xchg
sbb
push
pop
iret
pusha
ljmp
setbe
test
test
mov
push
push
push
push
call
add
adc
shld
shl
mov
mov
mov
mov
mov
mov
push
add
push
adc
push
push
call
mov
mov
sub
mov
sbb
mov
push
jmp
lcall
or
pop
push
xchg
push
add
sahf
mov
fsts
jg
out
jp
pop
shlb
pushf
mov
push
add
xor
dec
imul
jae
mov
cmp
jo
addr16
push
out
ss
mov
dec
sbb
or
leave
enter
cmc
aas
sub
or
jp
ds
sbb
sub
push
jb
aas
shrl
add
inc
xor
std
hlt
jg
fidivrs
jo
cmp
ret
popf
imul
adc
mov
or
adcl
mov
mov
push
cmpsb
sbb
cmpsb
adc
xor
mov
scas
pop
cmp
xchg
shll
das
pop
lds
push
nop
jno
adc
sub
sub
cli
adc
in
inc
mov
dec
inc
fsts
and
std
movsb
push
fwait
mov
pop
and
mov
push
and
out
mov
in
fsubl
adc
mov
loope
jle
pop
mov
outsl
shll
dec
cli
xor
mov
mov
stos
inc
aaa
lret
cmp
cmp
das
ss
adc
cmp
cmc
ret
popa
lret
mov
xchg
xchg
xchg
cmp
adc
adc
les
mov
movsl
inc
cmp
scas
mov
jne
les
cmp
movsb
popa
push
xchg
sbbl
cmc
in
mov
das
lods
or
sub
pushl
mov
push
int
sti
dec
jo
cmp
es
lret
push
das
push
jmp
aam
outsb
or
rcrb
or
mov
adc
in
and
dec
mov
roll
mov
add
mov
jle
arpl
lods
push
mov
ret
pop
mov
push
cmp
je
mov
loopne
jl
or
dec
into
mov
sbb
xchg
fildl
mov
pop
sub
sbb
int
lret
pop
push
cmpsl
cmp
push
aad
andl
fs
ss
push
push
rclb
add
mov
push
add
inc
pop
adcl
or
and
fldt
je
outsb
out
enter
aas
xchg
les
loope,pn
dec
dec
mov
push
lods
sbb
xor
int3
and
dec
pop
mov
inc
jg
movsb
cmpsb
dec
fdivrp
jb
mov
cmp
mov
jne
push
dec
and
mov
in
mov
insl
mov
clc
xchg
jmp
adc
pop
cmp
xchg
clc
xor
popf
sub
mov
sub
push
lods
andl
cmp
pop
outsl
jbe
push
repz
inc
std
test
jp
out
xorb
mov
add
or
rcll
xchg
jns
xchg
aas
cmp
mov
mov
mov
cli
out
scas
xor
inc
mov
imul
pop
bswap
ljmp
es
fcmovu
sbb
mov
mov
pop
out
test
gs
bound
dec
cmpsl
adc
jg
xchg
jg
shrl
out
mov
mov
daa
fld
je
adc
mov
cmpsb
repz
cmp
cmc
add
ret
arpl
loop
out
stc
pop
ljmp
cmpsl
and
ljmp
mov
mov
dec
xchg
in
push
or
in
xchg
lret
popf
stos
loope
mov
ret
adcl
jo
push
xchg
repnz
rcrl
outsb
cmpsb
jo
jp
ficoml
jmp
mov
dec
cmp
es
fiadds
jns
jle
adc
sbbl
xchg
jg
lret
repz
xor
lock
pop
cmp
sti
dec
repnz
cmp
mov
test
stos
or
pop
xchg
cs
jp
mov
fbstp
adcb
das
sbb
mov
push
sub
mov
movb
dec
jno
out
jl
sub
mov
fnsave
hlt
insb
jg
lret
arpl
pop
and
sub
mov
dec
mov
sbb
sub
cmpsb
cmpsl
ss
lret
cltd
call
push
test
or
mov
dec
jl
into
jg
arpl
mov
std
dec
push
out
xor
scas
pop
sbb
pop
fbld
popf
lock
or
outsb
cmpsb
mov
imul
ds
ja
loopne
or
mov
test
sarb
pop
popa
popa
mov
ficoms
repnz
sub
jmp
in
sub
add
cmp
mov
cld
movsl
aam
and
and
mov
in
inc
dec
lcall
jae
adc
pop
decl
roll
aad
mov
jno
or
jl
pushf
or
jae
xchg
int
fstpl
sbb
aas
adc
out
cmc
sub
adcl
lds
xor
out
mov
mov
add
testb
adc
repnz
jb
mov
mov
dec
je
jae
xchg
dec
inc
pop
stos
push
xor
mov
cs
bnd
std
lea
inc
or
bound
out
jle
inc
cmc
test
sub
int
xchg
cltd
mov
jmp
jg
sub
or
mov
sub
dec
les
data16
lods
add
sti
mov
lock
jp
cwtl
and
cmp
push
aam
mov
ss
fwait
inc
aaa
test
stos
push
repz
push
sub
scas
jnp
jb
in
push
bound
xchg
test
dec
ret
sub
jmp
rcr
sbb
testb
push
imull
push
in
sub
xor
jmp
inc
mov
nop
dec
adc
lock
lods
and
ja
jnp
lds
imul
ficomps
add
jo
ret
mov
hlt
mov
dec
jnp
xorb
mov
out
inc
and
jb
lock
loope
push
xchg
data16
dec
dec
hlt
shl
rol
dec
xchg
cld
aam
fsubrl
xchg
push
repnz
divb
push
cld
iret
xchg
lcall
pusha
add
adc
jg
push
out
pop
hlt
repz
cwtl
idivb
fs
out
shll
push
push
call
add
adc
shr
xor
or
or
xor
mov
push
xor
mov
mov
mov
jmp
mov
sbb
popf
or
push
push
xchg
inc
add
dec
je
insb
xor
pop
push
jns
bound
ret
dec
lcall
mov
out
xor
inc
insb
cli
mov
lret
in
mov
push
fdivrl
mov
cmp
sarl
push
cmp
or
shrb
mov
sbb
adc
mov
xor
ret
imul
pusha
sti
sbb
jno
popf
pusha
iret
inc
daa
mov
sti
jae
or
jne
add
dec
es
mov
les
test
and
int
shrb
cmpl
out
addb
cwtl
dec
lret
movsb
or
cmp
out
adc
push
lock
xor
mov
pop
adc
pop
sbb
aad
and
jno
mov
stos
aad
jae
fwait
push
mov
nop
pushf
push
dec
in
cmpsb
lea
stos
ss
addr16
pop
inc
add
je
inc
daa
pushf
fbstp
or
shll
ds
cmp
jmp
push
test
scas
lret
out
mov
and
add
movsl
dec
push
xor
lods
into
mov
sahf
sub
xor
ja
jb
cmp
mov
lahf
les
add
lahf
mov
jge
into
gs
mov
aas
repnz
data16
add
fimuls
adc
cmp
dec
sub
adc
pop
xchg
icebp
push
inc
in
sub
mov
xor
xchg
inc
test
mov
add
lds
xchg
sub
clc
jmp
adc
dec
sub
jmp
fmuls
lret
mov
fucomp
xor
test
bnd
fwait
push
rclb
icebp
cli
lret
xchg
pop
fbstp
imul
pusha
cmp
out
lods
mov
sbb
cltd
jmp
dec
scas
int
dec
xchg
scas
xor
push
mov
rcrb
dec
mov
push
xchg
xor
dec
test
cs
aam
decl
push
push
int
adc
outsl
pop
cmp
in
cmp
sbb
sbb
pop
popa
lret
fs
out
sahf
jo
pop
jae
vpsubusw
and
add
jmp
pushf
lret
xor
jl
adc
out
sub
push
aas
jecxz
xchg
push
fdivr
dec
rclb
loopne
hlt
sbb
add
inc
ja
mov
aaa
in
jl
xchg
mov
cmp
xor
arpl
js
cmp
lcall
daa
mov
ss
mov
test
xlat
arpl
inc
pop
sbb
xor
pop
jl
or
sub
in
adc
adc
out
sbb
mov
jae
in
xor
int3
cmp
dec
adc
in
adc
stos
lock
push
xchg
jae
mov
mov
and
pusha
sbb
lods
fildll
cld
cli
lret
and
mov
xchg
shl
sahf
int
xchg
ficompl
mov
stos
cwtl
xchg
addr16
loopne
sbb
outsb
and
push
insb
inc
andb
fbstp
sbb
outsb
inc
imul
sub
fdivr
adcl
xchg
out
cmp
addr16
ss
push
ds
sbb
and
fcomps
outsl
push
cs
pop
hlt
mov
xor
pop
push
cwtl
mov
jns
bound
aaa
cmpsl
xchg
xchg
cmp
inc
sub
ret
adc
sbb
dec
mov
mov
leave
cmpxchg8b
push
and
mov
sbb
mov
test
out
lahf
in
cmp
ret
bound
sbb
cs
xchg
repz
mov
and
add
cmp
jnp
jno
ljmp
sub
in
and
ficoml
xchg
sbb
insb
stc
adc
push
aam
and
les
jmp
int
jno
fs
loopne,pn
sahf
int3
mov
cmpsl
xor
hlt
stos
jno
stc
pop
lcall
mov
das
xchg
and
ljmp
dec
das
push
subb
lds
mov
cmc
dec
mov
pop
xchg
mov
mov
sbbl
repnz
jg
pop
int
adc
lahf
loope
int
xor
cmp
sbb
adc
mov
jo
mov
in
int3
dec
jmp
fucom
das
dec
jle
loope
pushf
push
dec
xchg
xor
xlat
icebp
push
into
iret
shll
cmp
sarb
je
dec
mov
add
mov
push
je
je
add
xchg
cmpsb
lock
adc
add
ret
bound
push
dec
call
add
into
xor
in
shr
in
inc
out
jnp
aas
cmp
rcl
mov
mov
loope
jns
dec
mov
enter
pusha
sub
rorb
ret
pop
jb
repz
pop
icebp
pop
jae
pop
aaa
xor
or
sbb
adc
sbbl
enter
scas
pop
rcrb
in
arpl
sbb
pop
mov
cmp
lret
pusha
into
dec
div
add
xor
mov
adc
data16
fs
mov
jne
loopne
mov
adc
test
add
dec
jbe
add
mov
cmc
mov
mov
sbb
ljmp
mov
fiaddl
clc
lret
scas
lds
pop
int3
clc
mov
and
xor
inc
pop
mov
xchg
mov
mov
movsb
or
xchg
add
cmc
or
icebp
sarl
push
movsl
jmp
shr
add
pop
xor
cmc
aad
dec
mov
test
cmpsl
call
mov
outsl
xchg
cmp
xchg
push
add
jns
inc
dec
or
outsb
inc
xor
movsl
leave
int
and
jae
mov
jb
mov
test
test
les
cmp
jb
nop
inc
in
data16
jne
cmp
imul
std
dec
cmp
aad
mov
rclb
cmp
jge
inc
mov
xor
or
loop
stos
cmp
hlt
and
mov
dec
sbb
stos
mov
out
repz
inc
enter
je
jg
push
pop
cmp
pushf
jecxz
lea
fdivrp
daa
pop
push
push
push
call
mov
mov
mov
add
mov
adc
mov
and
and
add
mov
adc
add
mov
adc
jmp
mov
xchg
adc
mov
shl
dec
shll
add
xor
mov
psadbw
inc
add
push
loop
pop
loopne
ret
sahf
mov
sahf
push
mov
iret
add
fcmovb
pop
dec
loop
and
mov
dec
es
push
fstl
jae
sub
mov
push
xor
cwtl
mov
aas
xchg
pop
pop
es
add
shll
jae
xchg
aam
xchg
gs
or
lcall
pop
in
ret
vshufpd
adc
jg
ror
cmp
das
stc
xchg
xchg
jecxz
dec
iret
inc
lret
loopne
test
es
inc
std
sub
add
in
push
in
in
aad
in
daa
jge
notl
cmp
in
inc
fildl
xchg
or
gs
xchg
mov
outsb
mov
fidivrl
mov
fistps
fdivrs
dec
dec
lahf
mov
push
sbb
lret
fstl
and
test
sub
adc
xchg
jnp
rol
stos
pop
test
setg
sar
cltd
jae
adc
dec
imul
inc
cmp
mov
mov
and
lods
jle
popa
inc
in
movsl
idivb
add
sbb
inc
sub
ret
fisubrl
inc
inc
rorb
mov
mov
cmp
bound
mov
adc
dec
cmpsb
stos
ds
cmpsb
fisttps
mov
enter
mov
inc
ja
xor
loop
push
fistpl
test
lds
das
and
cmp
ss
mov
ljmp
push
cmpsb
cmpsl
xor
xchg
call
adcl
lret
dec
popf
in
sbb
or
jno
negb
lret
add
mov
scas
lds
mov
cmpsl
test
xlat
ret
sbb
sub
testb
dec
push
mov
out
idivl
scas
sbb
jnp
pop
mov
stos
cmp
test
pop
jecxz
jmp
test
xor
pop
rol
leave
and
pop
mov
sahf
cwtl
idivb
outsb
fstps
repnz
pop
xor
insl
out
push
lret
push
mov
loopne
aaa
aam
cmpsl
mov
and
or
inc
sbb
xchg
lods
mov
arpl
in
adc
bound
mov
stos
int3
les
ret
push
mov
loop
cs
xchg
mov
xchg
andb
sub
inc
and
cli
pusha
xchg
in
lods
imul
jl
inc
adc
cmpsb
cld
lea
clc
xor
bnd
jno
pushf
inc
loope
sub
bound
adc
je
imul
xchg
add
incl
pushf
lcall
lret
xlat
lods
pop
cld
xchg
repz
cmpsb
mov
in
test
ja
jmp
jecxz
mov
xor
push
push
popf
rorl
push
xlat
loop
inc
int3
xor
mov
shll
cltd
mov
lods
inc
rol
pop
insb
sbb
fisttpl
inc
ss
cld
gs
inc
push
mov
cmp
in
out
in
add
xchg
xchg
mov
testl
mov
pop
leave
mov
pop
in
sbb
adc
inc
mov
lret
cmp
xchg
into
dec
sub
push
xchg
cmp
sbb
inc
jle
dec
lret
rclb
dec
push
mov
and
hlt
and
andl
xor
cmp
repnz
imul
jne
inc
sahf
movsl
push
ret
icebp
sub
adc
push
jg
jp
imul
xchg
hlt
jne
mov
shlb
out
imulb
popf
mov
add
in
leave
add
mov
andb
jecxz
enter
into
xchg
jecxz
popa
aam
fdivrl
mov
sub
ficomps
or
mov
xor
les
inc
arpl
xchg
sub
jp
pop
rcrl
ficoml
mov
mov
pusha
mov
testl
inc
je
clc
add
in
jg
push
sub
loopne
mov
shl
fists
iret
jo
les
xchg
hlt
xchg
enter
inc
scas
ss
add
idivb
in
mov
push
pop
in
sub
stc
add
addl
js
push
clc
inc
in
in
cmpsb
mov
lret
xor
lcall
mul
sbb
movsl
xor
xlat
popa
push
mov
scas
or
dec
clc
dec
and
pop
and
or
mov
ret
mov
mov
adc
mov
add
pop
xchg
xor
jecxz
push
mov
sti
add
imul
inc
shr
out
push
ds
mov
push
imul
nop
outsl
call
fsubl
jno
loope
dec
imul
outsb
icebp
jae
adc
outsl
insl
inc
mov
pop
lcall
add
mov
pop
cmpsl
dec
fdecstp
cmpl
stc
pop
cmpsl
sahf
xchg
jmp
dec
adc
or
mov
into
mov
stos
mov
xchg
push
inc
mov
push
imul
inc
js
hlt
sbb
xor
fdivs
es
add
dec
mov
aam
sahf
lret
cmpl
cmp
mov
dec
xor
or
pushf
sub
push
cli
sbb
outsb
xchg
sub
inc
mov
in
insb
mov
and
pop
rcl
mov
test
js
gs
lcall
ja
iret
addr16
pop
pop
lds
movsl
aaa
call
pop
jns
mov
test
push
test
pop
mov
jo
das
xchg
cltd
out
sub
mov
xchg
jmp
push
push
shlb
int3
test
icebp
fidivl
jge
imul
test
sub
mov
andl
lret
in
add
lea
lcall
add
dec
add
mov
jno
or
sete
das
aad
arpl
aam
xchg
and
nop
clc
aad
cmp
jecxz
and
dec
aas
aad
cmp
aas
xchg
or
xchg
scas
and
jne
js
cmpsl
pop
scas
or
scas
hlt
test
int
add
stos
jecxz
popf
arpl
iret
cmc
mov
rcl
sbb
cmp
lds
shlb
push
test
ret
pop
cltd
cmpsb
mov
cmp
mov
sub
and
sub
cmp
push
sub
divb
mov
sbb
add
fmuls
pop
add
push
push
jmp
dec
js
gs
push
pop
cmp
xchg
call
push
jg
add
ror
pop
inc
mov
or
jmp
decb
jg
jo
rcrb
ficomps
das
jb
test
repz
push
sahf
jne
mov
push
adc
add
and
sub
mov
pop
stos
or
inc
inc
push
or
mov
push
dec
imul
bound
adc
xor
mov
dec
cli
jns
push
fistps
inc
jmp
pusha
daa
in
imul
push
ror
push
add
pop
and
in
jno
aaa
clc
xchg
imull
mov
in
ljmp
cld
adc
pushf
outsb
lds
jle
je
add
sbb
jecxz
mov
stos
shlb
add
xchg
jo
dec
dec
cmpl
sbb
xchg
mov
cli
jbe
mov
pushf
jb
sub
fldt
or
cmp
incl
inc
in
sub
stos
repz
sbb
mov
xor
test
cmpl
dec
test
sarl
mov
add
rorl
enter
insl
lret
mov
movsb
rclb
push
insl
rcrb
inc
inc
dec
or
or
je
jno
mov
jl
add
repz
idivl
vsqrtps
scas
mov
mov
popf
jmp
lds
outsb
adc
fldl2e
add
dec
mov
cmpsl
mov
mul
mov
dec
xor
mov
inc
jmp
ret
enter
int3
testl
leave
dec
lahf
insb
addr16
push
mov
mov
arpl
ret
jp
xchg
addr16
inc
sub
leave
pop
and
mov
clc
cmpsl
jl
jo
mov
js
inc
cmpb
xchg
push
std
mov
xchg
jge
fimuls
cmp
sbb
mov
mov
popf
xchg
xchg
fwait
ja
popf
sbb
add
loop
faddl
rcrb
pop
dec
sub
add
pusha
iret
mov
ljmp
fidivrl
fstps
adc
push
in
push
inc
add
out
mov
or
sub
dec
test
jg
cli
ret
push
and
lock
push
inc
or
clc
in
and
or
pushl
mov
pushf
lods
lock
mov
push
sub
cmp
jb
jecxz
mov
insl
inc
popf
and
jae
mov
mov
xchg
in
dec
cwtl
ficompl
imul
xlat
dec
les
mov
jnp
sti
cmp
or
mov
adc
mov
loopne
mov
sbb
in
lods
mov
xchg
int3
negb
inc
sbb
loope
fdivrp
out
add
inc
dec
cmc
inc
cwtl
dec
or
in
push
jae
loope
push
push
mov
adc
imul
cld
repnz
hlt
inc
cwtl
add
mov
or
mov
addr16
push
out
mov
pop
mov
insl
popa
inc
xchg
dec
jo
sti
push
popl
push
imul
ljmp
inc
pusha
xchg
maxps
jo
cmp
insl
push
in
xor
outsb
test
lahf
sub
addr16
lea
pop
dec
iret
clc
test
xchg
cs
jbe
dec
push
test
cmp
and
push
inc
out
jp
jae
test
movsl
gs
aad
stos
int3
in
cmp
pusha
jmp
xor
push
stc
fs
icebp
shlb
ret
ljmp
nop
in
inc
loope
es
sub
sub
mov
cwtl
sub
psubw
scas
in
xchg
bt
cmp
mov
xor
mov
xchg
adc
jecxz
and
insl
pop
neg
inc
jnp
xchg
ja
sarl
push
pop
jmp
inc
lods
cmp
lea
in
lret
or
arpl
xchg
js
stos
add
pop
inc
jp
or
lods
rolb
prefetch
add
mov
das
test
inc
aam
mull
sub
mov
jmp
imul
sbb
add
mov
sahf
rcll
imul
movl
movsl
das
jmp
pop
mov
hlt
adc
call
fidivl
push
faddl
mov
sub
or
stc
mov
mov
ffree
out
std
pop
test
or
jecxz
sub
xor
daa
push
cmpsl
sbb
push
jle
add
scas
jne
adc
mov
pop
mov
xchg
hlt
dec
ds
add
push
stc
les
sub
cmp
sub
mov
repz
lea
rcr
rcrl
push
and
in
movsl
push
dec
and
fimull
pop
mov
movsl
repnz
mov
xor
jns
mov
sbb
loopne
scas
xchg
xor
fildl
sbb
and
push
rolb
or
push
std
scas
fwait
fwait
pop
inc
lods
std
rcl
mov
sahf
mov
add
sti
push
adc
cmp
pop
arpl
jl
adc
pop
scas
sbb
pop
inc
lret
mov
push
cwtl
or
or
leave
xchg
lods
outsl
imul
and
and
jo
ror
mov
ret
mov
into
orl
shrl
xlat
inc
loop
test
and
dec
arpl
in
lret
je
ljmp
std
outsl
cmpsl
test
jns
outsb
mov
sub
pop
hlt
xchg
sahf
add
int3
cmpl
cmp
push
std
sub
dec
mov
in
cltd
sub
cltd
out
push
push
pop
pop
es
frstor
das
mov
xchg
idivb
cmp
pop
hlt
shlb
repz
adc
push
xor
pusha
das
xor
ret
dec
push
bound
in
mov
cmpl
insb
shr
rcrl
int3
add
mov
or
lds
xor
push
xlat
aam
add
bound
repnz
adc
add
push
aam
cmp
popa
loopne
mov
popf
mov
inc
inc
add
aad
in
xchg
popf
or
sub
or
sub
xor
jle
aaa
lds
mov
pop
leave
shrl
sbb
aam
repz
lods
loope
xor
adc
mov
fistl
stos
add
or
add
pop
add
push
push
push
call
mov
mov
mov
or
mov
mov
shl
mov
or
mov
xor
xor
call
add
mov
mov
push
jmp
fnstenv
inc
mov
mul
push
xchg
inc
or
add
sbb
daa
bswap
ljmp
or
repz
fstpl
lods
xchg
push
in
or
bound
orb
aam
lahf
jbe
rol
sub
jo
in
and
inc
pop
ret
dec
call
xor
or
jecxz
in
xchg
xchg
pop
fisubrl
push
ja
mov
sbb
sahf
sub
dec
dec
mov
xor
xchg
mov
adc
cmp
fwait
sub
dec
mov
mov
mov
repnz
nop
call
mov
daa
xchg
sbb
mov
adc
and
in
or
lcall
pop
add
into
orb
iret
popa
les
int3
fistps
scas
jmp
xor
lods
pop
or
lock
dec
mov
inc
mov
cmpsb
mov
lock
fidivrl
cmp
add
inc
and
data16
xchg
xchg
inc
inc
fwait
jl
push
pop
out
cmpsl
xor
mov
cmp
push
xchg
enter
popa
fisttpll
popa
into
mov
sub
xlat
mov
add
ror
xor
fcmovnu
or
xor
xchg
in
xchg
cwtl
aad
mov
in
arpl
push
xor
in
lret
cmpsl
sbb
jns
mov
jecxz
sbb
push
fimuls
xchg
mov
call
mov
mov
inc
stos
sbb
ret
mov
xchg
popf
dec
dec
fwait
mov
lcall
test
stc
lret
jl
or
mov
or
pop
in
negl
sbb
imul
inc
or
fstpt
xchg
decb
fldcw
mov
imul
pusha
adc
fbld
dec
pusha
push
fldcw
outsb
in
and
jne
gs
xchg
lock
xchg
sub
repz
jo
mov
sbb
mov
and
mov
fstpl
mov
in
lods
lahf
out
or
lock
mov
out
test
xor
scas
jmp
enter
jecxz
pop
nop
xchg
fsubl
push
sub
jnp
sti
inc
mov
outsl
adc
mov
fdivl
cmp
lahf
test
ds
test
cmpsl
psrlw
pushf
xchg
popf
std
call
loopne
fimuls
cmpl
adc
pushf
leave
or
mov
xchg
jns
shl
cltd
popa
jbe
cmp
push
lds
and
mov
dec
add
sbb
dec
xor
mov
xor
push
xlat
sbb
jo
pushf
cli
stos
jmp
mov
jle
pop
shlb
shlb
test
ficomps
mov
in
xchg
idivb
jb
sbb
jno
bound
outsl
dec
test
jb
jnp
add
cmp
test
std
xlat
cmp
aas
ljmp
cmp
or
mov
inc
leave
lcall
cld
repnz
mov
push
dec
repz
push
sbb
setne
or
push
insb
xchg
push
xchg
into
shll
faddl
xor
mov
lea
mov
filds
outsb
out
or
ret
or
pop
mov
cmp
sbb
xchg
add
or
mov
fadds
mov
divl
mov
and
pop
push
jo
pop
cmpsb
or
or
jb
jecxz
push
fcmovu
iret
scas
dec
inc
loope
pop
jmp
sbb
imul
insl
cmp
outsl
testb
arpl
dec
push
lcall
sbb
jne
jg
pop
fwait
js
xor
mov
scas
fstps
adc
lcall
insl
in
push
dec
pop
nop
add
or
les
into
sbb
fs
fadds
out
lea
mov
jg
mov
xor
jo
xchg
pop
cmc
dec
adc
xchg
mov
negb
test
ret
cmp
sti
cli
or
sbb
pop
je
mov
lahf
in
test
jp
loope
in
rorb
mov
xor
push
xor
push
lret
cmc
push
push
sub
dec
dec
sub
outsb
andb
or
mov
daa
sub
daa
std
shl
inc
xchg
dec
jmp
push
push
out
mov
mov
int3
push
jp
popa
aam
xor
lcall
repz
push
inc
insl
je
add
add
daa
xor
add
xor
xchg
xchg
cs
test
and
push
aaa
shlb
pusha
int3
shrl
lcall
das
mov
fbstp
cmp
and
lret
push
in
lods
js
cltd
jnp
inc
xor
pop
call
aaa
xchg
jmp
xor
mov
movsb
mov
mov
pop
cmpsb
adc
sub
ljmp
jns
pop
adc
orl
mov
pop
mov
adc
push
scas
sbb
push
iret
xchg
testb
pop
fcoml
andl
add
insl
enter
push
adc
lds
std
fdivs
ret
xor
cmpsl
stos
cmp
out
ja
jns
cmp
cwtl
push
jns
fbstp
cli
test
xchg
pop
mov
ret
dec
pop
push
push
je
das
pop
inc
mov
xor
pop
mov
mov
sub
sbb
fs
xor
pop
sbb
ss
mov
mov
out
repnz
ret
pop
icebp
daa
pop
dec
pop
adc
rcr
or
imul
inc
pop
mov
xchg
rorl
sti
out
xor
cmp
pop
add
imul
test
xchg
cmp
loope
lds
xchg
sbb
mov
jecxz
mov
dec
gs
out
sbbl
leave
jo
in
sahf
ss
cmp
add
mov
pop
jg
insb
rcll
push
mov
push
lret
incl
and
insl
adc
pop
xchg
push
jne
mov
mov
jecxz
movsb
inc
inc
inc
dec
and
xchg
scas
add
in
cld
and
fldcw
inc
adc
push
and
xor
push
cmp
add
cli
push
push
xor
xor
call
push
push
push
push
call
mov
mov
mov
or
mov
or
or
or
xor
xor
add
adc
xor
xor
shrd
or
mov
shr
or
mov
mov
mov
mov
mov
or
jmp
out
fisubl
push
jne
lret
sti
xchg
sti
xchg
push
add
add
popf
es
dec
loopne
test
dec
lds
imul
inc
dec
sub
adc
dec
outsb
dec
sub
pop
or
mov
mov
xchg
mov
xor
mov
call
lahf
loopne
outsl
sub
sub
leave
clc
loope
and
jl
sub
mov
jb
daa
xchg
xchg
lret
stos
cltd
leave
mov
sahf
jnp
out
mov
pop
sbb
push
pushf
mov
icebp
jne
jbe
mov
inc
mov
and
je
xchg
imul
lcall
mov
pop
cmp
ja
ja
dec
xchg
idivb
xchg
or
loopne
pop
hlt
clc
jne
insb
scas
cmp
movsl
or
mov
loope
xchg
loopne
rcll
xchg
imul
data16
shl
add
pusha
pop
mov
jmp
cltd
add
mov
push
xchg
mov
adc
jno
cmp
aaa
out
pop
lea
pop
xor
loopne
or
pop
movsl
mov
bound
mov
pop
inc
dec
in
cmp
push
sub
lret
fdivl
js
lret
or
sbb
push
pop
lds
push
ljmp
jne
xor
push
inc
int
mov
pop
test
xchg
ja
lea
test
push
mov
scas
push
arpl
jb
jbe
fcomi
fnstcw
cmp
loope
mov
xchg
in
mov
sbb
and
daa
xor
loopne
mov
lock
pop
dec
jecxz
inc
cmp
out
lret
adc
das
lret
adc
jle
mov
imul
sbb
and
sub
loop
pop
lret
aad
ffree
mov
lea
sbb
mov
or
xlat
and
mov
in
adc
push
pop
cmp
mov
jae
adc
movl
cmp
ret
shl
fsubr
stos
mov
and
jo
aas
inc
xchg
xchg
out
xor
je
div
cmp
shl
add
sbb
jno
sbb
ja
imul
gs
sahf
push
repz
adc
mov
jno
out
test
ret
clc
cmp
stos
aaa
xor
jmp
ret
das
test
xchg
iret
mov
stos
or
cmp
lcall
shl
lods
jae
pop
repz
loop
fcmovu
add
sub
int
repz
out
loop
std
dec
mov
mov
mov
xchg
cmp
push
cmpsb
jnp
enter
mov
decb
ret
xor
jne
aaa
rolb
mov
js
dec
jmp
push
fcmovne
test
inc
push
xlat
add
cwtl
mov
inc
test
stos
cmp
enter
xchg
mov
clc
outsl
mov
mov
or
rclb
pop
aas
mov
and
shlb
inc
add
xchg
shlb
xchg
ror
add
fidivl
mov
fiadds
dec
push
push
sub
notb
inc
andl
jb
decb
jg
push
lahf
lret
dec
jbe
cmc
dec
dec
outsb
into
xchg
xchg
out
scas
in
mov
mov
sub
ret
stc
add
mov
push
pop
mov
fst
mov
les
lods
dec
lods
push
aas
repz
fwait
xchg
jb
or
or
xchg
in
mov
add
cmpsl
push
fmulp
xchg
pop
add
dec
lds
shll
call
stos
ss
iret
ss
sbb
xchg
mov
xor
testl
adc
lret
dec
andl
or
ret
xchg
ds
xor
dec
mov
mov
dec
fcomps
scas
adc
or
and
cltd
addr16
mov
push
loope
ja
add
repz
mov
and
les
and
adc
popf
sahf
or
push
sub
pop
sub
divl
add
lods
pop
xchg
cmp
imul
in
and
cmp
arpl
shr
or
fcomip
mov
jmp
stos
or
pop
dec
mov
sub
test
xchg
movsb
adc
lahf
mov
dec
dec
outsl
les
lcall
data16
loop
enter
sbb
insb
in
adc
imul
vpsubusw
and
lret
mov
mov
sub
push
add
sub
mov
int
out
fsubs
cmp
inc
xchg
mov
cmp
inc
int3
adc
inc
les
test
and
xor
out
ja
sbb
mov
clc
stos
aad
flds
mov
cli
mov
es
push
inc
sub
daa
xor
mov
scas
lea
pop
test
jae
inc
xchg
push
cmp
cmpsl
not
adc
rclb
outsl
xchg
inc
ja
adc
push
loop
enter
mov
lock
fwait
mov
repz
adc
push
lret
push
xor
dec
adc
xchg
daa
jg
cmpxchg
dec
enter
jnp
cmpsl
das
jge
adc
movsl
push
insl
mul
mov
inc
loope
cmp
lds
fcmovu
and
inc
mov
pop
shrl
sbb
cmpsb
lods
xchg
sar
fisttpll
lock
push
enter
lods
call
out
iret
js
add
xor
pushf
mov
lcall
push
jb
adc
jmp
xchg
loopne
cmp
sbbb
cmp
xor
and
inc
arpl
shl
adc
mov
std
push
xchg
and
push
add
pop
insb
aaa
bound
push
loopne
adc
daa
stos
clc
pop
add
cmp
xchg
bnd
clc
sbb
icebp
cmpsl
cmp
jle
dec
mov
cld
leave
fistpll
xchg
fwait
xchg
nop
jne
jo
je
jg
lock
push
xchg
cld
or
sbb
je
push
les
stc
ffreep
xlat
jnp
mov
imul
sub
pop
add
stos
or
push
bound
mov
push
xchg
fucom
lods
andb
cmp
sbb
mov
sbb
aas
es
xlat
jns
cmpsl
daa
jo
mov
filds
test
inc
jb
jbe
dec
adc
jmp
icebp
jno
enter
mov
inc
adc
push
push
or
xor
mov
xor
mov
push
push
push
push
call
push
push
jmp
add
lds
sti
adc
mov
add
jecxz
pop
rclb
mov
movsl
rol
data16
sbb
and
clc
jo
adc
mull
leave
pop
jg
insb
rorl
pop
clc
gs
mov
stos
add
pop
mov
inc
xchg
dec
cs
lea
cmpsb
adc
xor
je
mov
xchg
into
sub
sub
cwtl
jp
rcrb
lods
into
fcomi
jns
cmp
out
mov
andl
mov
movsb
add
leave
or
lods
jnp
cmp
ret
mov
stos
std
inc
out
leave
push
inc
dec
mov
add
push
mov
pop
xchg
lock
xchg
push
mov
jbe
cmp
cmp
lods
or
cmp
inc
movsb
leave
imul
cmp
xchg
mov
subl
cs
xor
scas
jns
pop
push
and
cmp
xor
jp
or
or
jg
andl
sahf
stos
cmp
fisubl
and
jle
adc
outsl
xor
or
rcrl
cli
andb
cmp
xchg
sahf
sti
rorb
mov
stos
push
repnz
movsl
cmc
mov
mov
into
jne
xlat
jnp
out
out
aaa
ljmp
out
xchg
fidivrs
xchg
add
into
push
xorb
or
js
in
xchg
xchg
or
xor
int3
push
stos
push
addr16
push
jne
lock
xchg
sub
push
shlb
xchg
push
mov
mov
nop
aaa
mov
jb
enter
push
jge
fimuls
xchg
mov
ljmp
xchg
int
je
sbb
fdivl
cmpsb
clc
adc
xor
adc
pushf
mov
loopne
push
ja
jg
je
addr16
repz
push
inc
lds
stos
call
ror
enter
out
sub
rcrl
lahf
rol
aaa
cmc
sahf
adc
aam
femms
jns
ret
stos
loope
nop
scas
inc
cmp
fiadds
and
nop
dec
dec
or
imul
and
or
push
jl
cmp
add
or
int
xchg
es
cltd
mov
push
or
pusha
add
xor
xor
jle
scas
shrb
mov
mov
shl
push
das
adc
das
mov
pop
loop
cmc
push
clc
ja
mov
mov
fildl
pop
jmp
sub
adc
scas
idivl
mov
scas
iret
cmp
cmp
cs
repz
jecxz
lret
xchg
push
lcall
loopne
ss
and
or
or
mov
lds
sub
das
push
lods
and
and
test
hlt
add
std
shrl
jo
push
mov
or
mov
clc
adc
dec
xchg
pop
mov
sub
je
repz
mov
xchg
hlt
loopne
sub
xor
fs
icebp
aas
jb
int3
sub
adc
dec
gs
lahf
mov
and
faddl
push
or
popa
sbb
pop
mov
jae
in
jp
inc
sbb
mov
pop
adc
sbb
mov
in
mov
dec
sbb
dec
stos
enter
adc
and
bswap
shrl
or
jne
scas
lret
cmpl
dec
mov
mov
mov
mov
cmp
mov
fcomip
or
jbe
pop
xor
jno
pushf
fbstp
xchg
add
shrb
fs
jns
shll
cmc
lods
sbb
fdivrl
lret
cmp
daa
inc
loopne
or
add
imul
jbe
mov
cmp
mov
xlat
jl
into
and
daa
pop
inc
repnz
leave
fs
pop
and
push
frstor
or
movsl
mov
cmc
out
cld
and
inc
dec
jnp
cmp
neg
cmp
out
jl
pop
cmp
mov
xor
lahf
inc
xlat
push
dec
xchg
jecxz
jno
into
cmp
fidivs
in
pop
push
xor
or
leave
clc
jmp
lods
push
jmp
sub
lret
aaa
shlb
repz
mov
iret
es
mov
cs
jns
or
jge,pn
std
test
pop
jmp
popa
mov
int
jne
daa
dec
xchg
mov
cmc
adc
js
lea
cltd
in
stos
fs
xchg
sbb
xchg
sbb
cld
adc
js
mov
jo
add
ja
aam
and
push
sbb
aad
and
mov
lea
jecxz
jne
pop
out
and
shr
or
adc
into
sahf
nop
cmpsb
out
inc
cli
add
movsb
fisubrl
in
lds
sbbb
mov
mov
imul
adc
repnz
or
out
pop
mov
aaa
into
push
outsl
scas
push
adc
shlb
jg
out
xor
aam
roll
lretw
mov
cmc
or
push
xchg
push
movsl
sarl
icebp
rclb
sub
popl
mov
jmp
mov
mov
adc
lock
stos
jle
out
js
repz
sbb
mov
lock
and
jnp
lods
hlt
dec
xor
std
stos
jb
icebp
sub
pop
xor
mov
rolb
es
fs
rcl
cmc
mulb
test
jmp
or
adc
push
mov
pop
js
dec
lahf
data16
lcall
dec
jnp
cs
rorl
ret
sbb
jne
xchg
mov
aam
roll
ret
andb
aas
adcb
mov
mov
cltd
jle
div
insb
lods
loopne
sbb
push
ja
fldt
xchg
fcompl
and
pop
or
aaa
scas
cmp
jl
xchg
mov
imulb
popf
in
call
cmp
jl
jno
in
push
and
dec
pop
lcall
pusha
enter
repnz
adc
sbb
je
adc
rclb
pop
sub
imul
pop
outsb
adc
sub
imull
lock
xchg
mov
and
movsl
add
mov
push
scas
fstpt
test
mov
ljmp
cmp
arpl
enter
cltd
mov
ljmp
pop
add
mov
mov
mov
add
mov
adc
add
pop
adc
pop
mov
mov
pop
leave
ret
push
mov
sub
adc
movl
mov
sub
mov
xorl
mov
addl
movl
orl
jmp
sti
out
out
jo
jo
pop
inc
push
push
mov
js
invd
add
mov
push
gs
data16
adc
and
outsl
xor
out
xor
and
dec
sarl
sub
and
adc
stos
test
xor
mov
pop
push
mov
push
mov
cli
adc
std
cmc
test
inc
mov
loop
push
loopne
cmp
jecxz
pop
push
adc
fdivl
or
lea
mov
mov
xor
adc
mov
sub
test
mov
push
jp
lret
and
xchg
ljmp
pop
mov
or
mov
mov
ret
xlat
jno
mov
mov
mov
imul
fwait
loopne
test
jo
sub
sbb
xchg
fs
movsb
xchg
repz
sti
or
and
nop
out
enter
les
sti
mov
rcll
or
js
mov
stos
push
mov
lods
sbb
mov
jecxz
jl
loopne
fbstp
data16
lret
mov
cwtl
pop
mov
push
sub
mov
dec
loope
mov
enter
negb
notb
xor
imul
lods
add
inc
popa
dec
roll
lea
inc
es
fisubs
fdivl
sub
jge
dec
in
scas
sbb
or
adc
cwtl
jmp
arpl
mov
mov
gs
sbb
fnstcw
xchg
push
sbb
mov
jo
and
mov
popf
jg
inc
scas
inc
inc
movsb
pop
adc
jl
jmp
nop
or
int
sub
int
imul
pop
fidivs
mov
mov
test
dec
in
ljmp
lahf
jae
iret
test
test
int
xchg
cwtl
add
jecxz
lcall
ret
inc
hlt
movsl
aas
dec
cmpb
pop
popa
mov
mull
dec
sub
or
jmp
add
jns
mov
fcompl
stos
and
cmp
mov
pop
xchg
out
lcall
in
cvtps2pd
cmp
lods
test
mov
cmpsl
jle
test
sub
out
push
or
adc
call
test
ljmp
add
adc
pop
adc
cld
cmovp
shl
shl
pop
sbb
scas
mov
and
inc
ljmp
push
adc
cmp
cmp
xor
rcrb
cmp
dec
xorl
in
pushf
jp
stc
push
cltd
mov
xor
cmp
lret
push
and
pusha
sub
data16
push
scas
mov
sbb
mov
out
push
jne
enter
pushf
adc
jne
sbb
int
add
out
imul
pop
xor
js
test
dec
xchg
xor
lea
push
pushf
adc
xchg
or
add
jno
movsb
test
mov
leave
sbb
js
or
in
jae
arpl
cltd
daa
loop
inc
mov
mov
sbb
jl
inc
in
lock
jge
es
cwtl
mov
inc
inc
cmp
testl
add
ret
dec
cmc
pusha
movsb
push
push
insl
pop
clc
cmp
lds
cmpsb
xor
sti
add
or
sbb
xchg
fs
cmpsl
mov
xchg
sarl
add
inc
jne
cmpsb
xchg
pop
insl
and
lret
nop
jge
adc
mov
xchg
fldcw
hlt
movb
rorb
nop
dec
mov
mov
cmp
dec
out
xor
js
pop
inc
adc
jecxz
cmp
sbb
movsl
dec
das
lods
cmc
pop
lret
jnp
and
in
xchg
add
push
je
push
cmp
xlat
sbb
mov
pop
dec
dec
and
lods
imul
jb
xchg
xlat
out
push
xor
jb
jecxz
and
lods
or
out
adc
movsb
cs
insb
aas
pop
mov
adc
pop
xor
add
andb
dec
lods
jl
xor
dec
fcoml
mov
xchg
cmpsb
addr16
jecxz
mov
mov
inc
add
and
cmpsb
cmp
xchg
loop
cli
nopl
ret
push
or
ljmp
nop
pop
fs
mov
mov
mov
push
sub
sub
addr16
in
adcl
jg
scas
inc
xchg
and
xor
inc
pop
xchg
call
xchg
fsub
fisttpll
test
pusha
add
outsb
xlat
mov
mov
inc
lods
jb
mov
cmpsl
dec
or
mov
cmp
adc
cmp
in
outsb
sub
sub
subb
sbb
imul
imul
and
pxor
rorl
jno
les
int3
sbb
dec
scas
xchg
and
mov
cmp
movsb
push
pop
mov
and
fildl
xor
pop
adc
les
xchg
sbb
lods
jg
es
cmp
push
push
mov
test
xlat
imul
pushf
int
jmp
mov
outsl
push
call
mov
fstl
xor
add
gs
sbb
stos
rcr
data16
pushf
jge
cmc
pop
jp
imul
jnp
in
mov
add
test
mov
mov
lea
or
adc
dec
push
fcompl
or
adcb
sub
inc
daa
mov
inc
out
xchg
xorb
xor
cmc
addr16
inc
jo
mov
pop
jns
pop
stos
subl
push
xor
dec
aam
mov
daa
xor
adcl
add
cmp
and
mov
ja
cmc
mov
jb
xor
push
fucomp
ret
les
in
movb
movb
cmpl
jbe
andl
adc
jmp
pushl
call
movb
movzbl
mov
sub
imul
mov
or
movzbl
push
orl
and
mov
movb
movl
movb
subl
movb
movb
orl
mov
orl
mov
subl
add
adcl
jmp
ret
sub
shlb
mov
xor
mov
pushf
data16
loope
invd
add
imul
dec
shll
lds
xor
lock
shr
call
sub
push
lcall
add
cltd
loope
pop
dec
clc
xchg
sbb
xchg
push
cmp
into
mov
mov
cmp
lcallw
jnp
pop
pop
into
lret
and
pusha
xchg
xchg
and
add
lods
and
xlat
jmp
ret
lock
mov
fadds
inc
adc
out
das
enter
shl
mov
sarl
sbb
sbb
loopne
cmpl
shr
scas
aam
dec
push
test
add
xor
outsb
adc
dec
je
jmp
dec
repnz
outsb
out
in
cmp
mov
mov
add
cmpsl
jmp
mov
out
mov
or
pop
sbb
jns
les
and
sbb
jge
jo
push
lcall
and
stos
arpl
iret
call
push
and
mov
mov
xor
test
movsl
or
data16
adc
int
add
fwait
icebp
push
add
mov
cmp
outsb
stos
shlb
add
popf
or
mov
xchg
xchg
je
pop
inc
hlt
call
jb
ficoml
insl
nop
xchg
mov
adc
gs
and
icebp
je
sub
cmp
fxch
ret
cmc
dec
mov
mov
xor
push
lea
inc
movsl
or
es
lock
sub
add
jl
dec
lods
rcpps
and
pusha
pushf
or
js
test
or
addb
mov
sub
mov
xchg
mul
fwait
mov
mov
sub
shrd
mov
fcmovne
inc
mov
adc
dec
rol
pop
mov
pop
mov
std
pop
int
mov
sub
mov
aas
inc
stc
notl
inc
outsl
xchg
inc
lods
mov
mov
dec
inc
hlt
iret
pop
lcall
push
sub
xchg
cmp
outsb
sbb
in
sbb
push
fs
das
adc
inc
lret
jnp
sub
ret
push
bound
lea
ret
and
xchg
je
xchg
lahf
sbb
lcall
in
cmp
mov
fbstp
push
cli
and
cmpsl
jp
inc
sbb
scas
cmc
and
aam
sub
push
fsubl
pushl
inc
int
rolb
adc
jb
or
test
add
loopne
imul
stos
stos
shrl
and
and
loope
les
mov
fildl
jmp
repnz
in
dec
mov
ret
ss
fcomip
jmp
jp
dec
lock
lret
push
xchg
imul
jnp
pusha
mov
pop
insl
cmc
cmp
out
add
shrb
fidivs
or
data16
stos
loop
cmp
roll
ficompl
fsub
inc
push
sub
inc
and
test
push
dec
jge
sbb
loop
mov
loop
push
ss
in
mov
xor
jmp
into
push
sbb
adc
lds
cs
push
shll
sub
dec
enter
mov
movsb
sarl
add
clc
int3
push
cmp
cmpsl
and
test
lea
fs
mov
in
clc
jp
rcrl
ds
cmp
aaa
repz
pop
aas
out
insb
fcomp
test
inc
lcall
push
std
mov
xlat
dec
xchg
insb
insl
jnp
inc
aas
inc
inc
popf
popa
mov
jg
jo
lea
xchg
pop
mov
ret
sbb
xchg
mov
pop
shll
popf
inc
bound
dec
inc
test
add
das
mov
mov
std
test
cmp
jmp
fidivrl
into
jg
stos
push
jecxz
pop
scas
sbb
push
inc
mov
aaa
in
push
negl
dec
jg
pop
mov
or
movsl
mov
sbb
setne
xchg
mov
lahf
cmp
test
cmpsl
imul
cmp
sbb
or
push
cmp
fisubs
hlt
xor
xchg
es
jmp
jle
nop
cs
adc
faddp
test
sub
scas
mov
xchg
mov
push
sub
fwait
nop
jl
mov
flds
sbbb
push
pop
jne
test
mov
adc
mov
xor
stos
dec
jp
mov
and
test
insb
enter
push
sbb
test
fdiv
mov
cmpsl
mov
mov
js
ret
jno
push
and
cmp
addr16
jge
sbb
mov
xchg
shrl
jb
push
lds
inc
out
arpl
push
leave
scas
pop
insl
enter
icebp
lahf
repz
pop
idivb
cli
lods
cmp
pop
aad
xor
pop
lcall
sub
add
std
inc
and
gs
std
xchg
mov
xchg
mov
pop
cs
scas
int
or
es
nop
mov
and
fsubs
cmpsb
shlb
idivb
out
sti
fistpl
pop
sti
enter
xor
int
push
fldcw
cwtl
inc
addr16
scas
push
out
mov
loop
into
cmp
pop
lods
popa
push
repz
jmp
sbb
mov
dec
das
loope
xchg
mov
mov
and
aad
test
out
dec
cmc
stos
jecxz
jb
pop
daa
popa
push
pop
data16
xchg
mov
cmp
loop
add
cmp
add
xchg
fsubl
inc
hlt
adc
test
dec
mov
pop
xor
iret
push
scas
inc
cmp
repz
adc
pop
sbb
jmp
call
mov
addl
or
addl
mov
subl
and
movl
jmp
mov
hlt
add
sbb
cmpsb
js
iret
invd
add
wrmsr
ficoms
arpl
cmpsl
lock
stos
rorb
cmp
push
out
or
fcmovu
cmpsl
shrl
mov
pusha
lods
jb
mov
mov
fsubl
pop
jne
int3
sub
cmp
in
dec
pop
adc
ds
jo
mov
fadds
insb
sub
int
in
dec
mov
mov
mov
cli
daa
and
adc
push
xor
test
push
push
lret
sti
mov
mov
popf
mov
std
stos
adc
fstps
cs
aaa
imul
add
pop
aaa
pop
f2xm1
mov
fcom
push
fisttpl
xlat
add
pop
mov
fisubs
es
ret
inc
inc
into
and
mov
push
out
adc
sbb
daa
dec
pop
test
inc
pop
fstl
aas
mov
cmp
and
test
mov
sbb
cmpsl
rclb
lea
mov
mov
lret
pop
push
lcall
sahf
and
mov
in
fstpl
xor
insl
in
pop
insl
jle
out
aam
inc
jno
dec
std
movaps
mov
adc
mov
inc
fidivrs
out
mov
outsl
jno
sub
mov
jp
dec
pop
ret
mov
xchg
sahf
xor
leave
inc
cmp
rol
inc
or
ret
fnsave
lahf
push
lock
push
cmp
push
pop
iret
mov
test
gs
roll
pop
int
hlt
sti
mov
pop
test
imul
out
dec
vmwrite
pop
int
inc
sbb
jns
push
nop
inc
jle
insl
mov
lret
mov
push
mov
dec
and
sub
jg
cmp
icebp
push
and
sub
bndstx
push
rclb
pop
cmp
js
lahf
jae,pt
jb
or
ljmp
aam
push
push
int
jno
or
and
cltd
pop
and
or
push
mov
popa
orl
or
arpl
cltd
sub
pop
sbb
push
mov
or
out
jbe
repz
mov
push
cmc
lds
lahf
adc
das
std
dec
pop
xchg
pop
cmp
mov
cltd
leave
push
pop
shl
xchg
cmp
sub
ss
inc
js
jmp
xchg
sub
test
cmp
or
fisubrs
movd
push
adc
xchg
xor
and
mov
jae
stc
sub
adc
call
mov
sbb
mov
ds
adc
mov
in
out
jge
pusha
pop
pop
jno
dec
in
out
adc
sarl
ficompl
dec
mov
daa
cltd
lds
lret
push
sub
out
and
cmc
out
jl
push
adc
in
imul
clc
add
push
lret
leave
mov
sub
mov
pop
outsb
adc
sub
xchg
mov
les
push
mov
syscall
or
int
inc
in
add
jge
jecxz
scas
xchg
out
mov
nop
dec
into
jnp
push
int3
inc
fisubl
lock
xor
push
fistpl
cwtl
dec
test
inc
sub
lods
cs
pop
in
adc
mov
jae
ret
cmp
std
jns
adc
sahf
js
daa
pop
sub
ljmp
ror
xlat
ja
xchg
iret
dec
adc
push
jecxz
and
inc
cmpsb
cmp
adc
out
call
ljmp
push
sysexit
leave
inc
inc
lods
arpl
imul
jl
fimuls
pop
or
xchg
mov
lods
dec
xchg
push
dec
fwait
ja
lret
push
sub
fdivrs
out
or
ret
xor
jp
xorl
pushf
lret
mov
or
add
inc
sbb
push
pop
xor
xor
stos
adc
mov
icebp
pushl
loope
dec
ljmp
dec
adc
loop
enterw
inc
dec
not
test
mov
cmc
adc
out
xlat
mov
bound
std
jecxz
je
sahf
sub
mov
mul
enter
lods
dec
pop
hlt
inc
xlat
push
pop
push
sbb
in
xchg
repz
mov
cmp
lds
sbb
or
in
add
cmp
sbbl
sahf
push
mov
inc
dec
mov
roll
xor
fcmovnbe
pushf
jbe
mov
mov
sub
je
jle
mov
adc
bound
mov
test
mov
jnp
and
xor
aas
out
mov
or
adc
adc
jb
hlt
sub
jmp
fidivl
add
out
test
hlt
jnp
testb
lret
cwtl
mov
scas
add
daa
adc
add
cmpsl
inc
je
stos
ja
out
cld
sub
jecxz
mov
inc
xor
and
and
test
hlt
lahf
cmpl
imul
insb
mov
notl
inc
mov
mov
imul
xor
sub
lcall
lret
push
into
dec
jmp
aad
enter
mov
jmp
pop
xchg
mov
test
or
xchg
out
int
sub
out
je
mov
xor
push
inc
loope
mov
or
leave
scas
in
and
pusha
stc
and
xchg
cs
loope
testl
xlat
in
push
jle
dec
sarb
add
mov
repz
pop
in
mov
and
jp
insb
cmp
add
cwtl
popf
stc
ljmp
lds
bound
dec
lcall
mov
aas
lds
out
lock
adc
dec
cld
cmpsb
push
pushf
add
loop
test
lods
mov
ja
mov
mov
sub
mov
cmpl
jl
andl
mov
and
jmp
push
push
push
call
mov
mov
movzwl
movzwl
shr
addl
or
sub
movl
mov
orl
movb
movb
sbbl
mov
mov
xorl
xor
addl
add
xorl
movzbl
movzbl
sub
cltd
mov
adc
mov
jmp
mov
pop
push
and
sub
mov
mov
lahf
ret
invd
add
comiss
call
aas
inc
lods
xchg
pop
add
mov
push
xchg
fldl
out
addl
mov
test
inc
pusha
adc
dec
xchg
daa
jecxz
lret
mov
add
testb
dec
xorl
test
test
les
push
loopne
push
lahf
add
xor
adc
mov
fisttpll
aam
push
push
mov
test
jae
enter
push
jp
testb
adc
loop
or
insl
lds
and
notb
in
pop
aad
mov
subb
adc
xor
lcall
test
push
pop
es
mov
dec
push
bound
jne
leave
pop
shll
dec
or
nop
add
pop
sbb
mov
arpl
push
rcr
aaa
gs
inc
jmp
fdivr
and
inc
dec
cmpsb
cmpsl
hlt
jecxz
adc
lahf
mov
dec
orb
das
fistpl
jp
cmp
push
push
or
mov
es
or
loope
adc
add
int
cmp
sti
mov
fldcw
in
mov
repz
in
dec
sbb
xchg
fdivrs
repnz
mov
lods
call
adc
jb
or
push
iret
fisubrl
cmpl
lods
xor
and
xlat
pop
mov
or
or
pop
add
outsb
sbb
xlat
mov
dec
and
pop
daa
and
test
mov
out
push
mov
rolb
repz
dec
dec
in
push
mov
incl
pop
push
cmpsl
push
mov
jns
push
dec
inc
scas
ljmp
push
sets
cmpsl
js
test
xor
fs
jo
data16
adc
rcr
shl
idivl
lea
loope
lcall
xchg
incb
pusha
xchg
xchg
lods
std
arpl
std
xor
ds
fwait
cmpsb
out
out
es
outsl
cli
cltd
repz
sbb
shrb
out
sbb
je
xchg
cmp
nop
dec
rcrb
pop
xor
ret
fistpll
sti
xchg
inc
add
jge
pop
xorb
mov
clc
in
push
cmp
das
mov
out
addr16
fdivs
sbb
add
mov
insb
addl
test
jo
inc
cmovnp
push
pop
ret
cmpsb
push
jb
das
out
inc
aad
add
xchg
or
pushf
or
faddl
cli
lock
popf
insb
mov
test
mov
test
push
aam
sub
push
rorl
and
scas
leave
jae
rol
sbb
pop
fnstcw
inc
ret
pop
push
pusha
dec
out
fisttpll
test
testb
or
enter
out
cmc
jle
xchg
inc
mov
mov
popa
ret
xchg
clc
jne
cltd
xchg
pop
lret
adc
popa
pop
mov
in
stc
rcl
and
sbb
ficoml
repnz
xchg
add
aaa
mov
sti
cmpsb
and
fsts
scas
add
lahf
out
sbb
sahf
pop
or
dec
and
adc
in
loopne
call
push
inc
push
xor
ss
out
cli
mov
sahf
in
add
push
pop
test
push
jns
test
ret
pop
adc
popa
add
push
stos
sub
cmpb
test
or
int3
ja
scas
xor
add
shlb
pop
add
and
and
or
inc
pusha
ror
sbb
ss
ds
or
scas
pop
test
cmp
adc
cmp
fistps
cmp
cli
xchg
outsb
pop
repnz
add
aad
pop
sub
add
adc
icebp
loopne
mov
jmp
xchg
shl
pop
mov
fistl
ljmp
dec
hlt
mov
jae
arpl
pop
cld
fsubrl
lods
ret
movsb
or
shll
ja
dec
cmove
and
in
xor
pop
pop
xor
shll
push
mov
jg
jp
mov
out
iret
jl
mov
jns
or
mov
mov
push
push
dec
test
test
dec
aad
jle
mov
imul
insl
jae
in
adc
and
lret
mov
add
dec
xchg
daa
add
stos
mov
mov
jp
and
cmp
pop
icebp
dec
icebp
shrl
mov
pop
add
lcall
pop
mov
cld
hlt
pop
jge
loop
inc
es
push
cmpsl
push
pop
pushf
xchg
cmp
ds
icebp
mov
fsubr
sbb
or
shll
or
dec
inc
insb
leave
and
pop
jp
sub
xchg
ror
lods
addr16
fildll
ljmp
push
or
sbbl
out
pop
out
or
btr
leave
dec
fsubrs
mov
push
in
or
sahf
mov
push
jb
pop
int
sub
xor
mov
ficompl
insb
push
imul
sub
out
lret
mov
pop
xchg
lahf
insb
les
xor
jo
cwtl
xchg
push
dec
es
std
and
ficompl
into
pop
dec
loop
fbstp
ja
cli
fs
lea
js
mov
inc
lahf
adc
or
repz
loope
mov
adcl
int3
pushf
add
mov
outsb
mov
cmpsb
mov
fldl
inc
ret
test
mov
icebp
push
push
pusha
jge
fsts
sub
test
cmpl
jl
and
jmp
push
call
jmp
sub
push
xchg
jne
jle
jnp
push
mov
or
or
fs
xlat
movsl
dec
pop
repz
imul
fs
sub
cmp
mov
mov
push
rolb
lds
jg
xlat
in
lret
in
insl
mov
inc
push
roll
fldt
sahf
popf
fildll
ljmp
mov
mov
aas
sbb
xor
dec
test
mov
je
test
jge
in
clc
mov
xor
insb
sub
stc
adcb
repnz
push
cmpsb
pop
xor
mov
enter
pop
ret
inc
mov
cmp
insl
xchg
call
sub
xchg
iret
lret
sarb
adc
das
rcll
orb
fiaddl
shll
out
mov
shlb
add
loope
xor
cmpsl
dec
mov
cmpsl
adc
or
push
or
aas
iret
out
xorb
dec
cmp
loope
mov
and
xchg
mov
cs
sbb
mov
add
rcrl
fadds
shl
cmp
les
lock
cmp
push
sbb
nop
movsb
out
shll
scas
js
js
mov
add
ds
and
aaa
or
gs
inc
mov
jge
outsl
arpl
push
dec
repz
out
cwtl
dec
sbb
adc
call
addr16
mov
xchg
orb
pop
and
imul
and
mov
test
rcll
leave
inc
mov
mov
and
pop
xlat
push
mov
push
int3
jmp
fsubrs
and
hlt
and
fsts
push
inc
add
push
icebp
dec
jmp
inc
add
ljmp
mov
xor
movsb
arpl
inc
mov
cltd
or
fst
enter
xor
xchg
sbb
and
shll
pop
xor
test
fstps
stos
mov
or
push
mov
outsl
push
xchg
mov
inc
ss
dec
pop
adc
cmp
lret
or
xchg
scas
pop
arpl
cmc
push
repnz
gs
popf
cld
fs
iret
and
hlt
pop
xchg
pop
movsb
and
sahf
sub
dec
mov
jecxz
les
inc
in
roll
cmp
ret
dec
push
sub
insb
ljmp
clc
mov
shlb
jns
movsl
jae
in
scas
rcr
pushf
test
xchg
xchg
movsb
std
xchg
imul
mov
movl
adc
sbb
push
cmp
mov
ja
xchg
gs
push
popf
arpl
ret
xlat
add
inc
dec
pop
mov
rcll
xchg
adc
jnp
sbb
mov
leave
dec
lods
mov
dec
jne
roll
fidivl
inc
lret
lods
mov
mov
pop
push
pop
mov
negb
mov
xchg
mov
push
ret
add
pusha
inc
pop
sbb
sbb
movsb
xor
xchg
mov
pop
std
ss
mov
out
rcrl
fdivl
stos
adc
xchg
sub
cs
outsl
shrb
mov
cmp
mov
xchg
int
fimuls
sahf
and
push
addr16
lahf
cld
call
rclb
das
cmpsl
adc
sub
xlat
add
in
les
out
dec
mov
mov
scas
xchg
sub
ss
pop
inc
in
lcall
stos
shlb
pusha
mov
and
fdivs
aad
aam
xchg
aaa
jle
adc
dec
mov
sbb
sti
popf
pop
mov
mov
adc
cmp
dec
out
or
repz
xchg
stc
add
sbb
sub
fisubl
das
mov
mov
pop
in
cli
mov
inc
ret
xchg
loope
adc
inc
xchg
test
cmp
or
in
jo
xchg
xor
stos
rorl
out
push
mov
jne
sub
je
aam
pushf
xchg
shll
ss
jno
popf
mov
jle
bound
je
pushf
test
test
add
cmp
clc
jnp
out
fmulp
adc
hlt
ljmp
xchg
stos
leave
adc
cs
ret
inc
rolb
xchg
test
lcall
iret
pop
sbb
jb
jmp
daa
shlb
mov
sahf
push
cmp
cmp
mov
loopne
pop
addl
jmp
xchg
out
das
jg
lods
sti
cmc
js
pop
fnstenv
adc
aas
loope
xor
jl
xchg
in
mov
or
in
and
sub
scas
mov
fs
mov
adc
subb
and
int3
decl
push
cmpsl
jg
xchg
adc
and
incl
shll
shrl
testl
mov
lret
ja
push
pop
push
jb
add
fisubrs
pop
jl
mov
dec
push
sbb
pop
dec
sbb
adc
ds
leave
and
out
test
mov
call
cmp
fcomps
push
jae
cmp
jg
test
xchg
lock
jae
xchg
rcll
cmpsl
ret
push
add
xor
cwtl
mov
dec
pop
xlat
lcall
pop
add
fidivrs
mov
lods
leave
stos
cmpsb
insb
cwtl
testl
mov
add
mov
and
lcall
push
scas
sti
add
int3
jno
call
push
mov
es
dec
dec
in
or
in
fildl
or
mov
popf
inc
jae
pop
jb
mull
xor
add
mov
dec
mov
sar
add
shr
cmpsb
aas
push
inc
fstpl
cmp
outsl
lcall
pusha
ficoml
and
pop
loope
pushf
sub
arpl
dec
out
sbbb
aaa
pop
idiv
jmp
mov
xchg
mov
adc
dec
scas
popf
invd
add
cmovns
sbbl
inc
into
mov
daa
pop
cmc
mov
les
in
push
pusha
xlat
pushf
xor
inc
jle
xchg
enter
jns
pop
stos
int3
xchg
fwait
lods
mov
nop
addr16
push
dec
shll
movsb
int3
fcompl
mov
xor
rcrl
insb
das
inc
mov
adc
ljmp
adc
in
xchg
in
or
sub
addr16
leave
dec
add
xrelease
call
sbb
imul
sbb
push
pop
sbb
fs
xchg
inc
dec
fdivrs
into
les
das
xchg
iret
add
orl
hlt
sbb
inc
adc
into
lock
jo
push
xchg
fnstsw
scas
or
push
repnz
or
cmp
sbb
into
cmp
out
dec
ret
cld
sbb
call
mov
add
mov
scas
movsb
cmp
cmc
or
add
push
sbb
fs
cmpsl
cmpsl
int3
addr16
lahf
and
cltd
xor
sub
mov
pusha
fbstp
int
mov
jle
imul
in
pop
mov
pusha
dec
inc
mov
cmp
daa
xchg
pop
jbe
add
xlat
scas
les
loope
xor
mov
xor
xor
sbb
jmp
xchg
jp
jle
mov
inc
jmp
fs
pop
pop
repnz
inc
xor
fcomps
imul
jae
int
inc
jl
and
test
out
mov
inc
mov
xchg
xchg
pop
iret
xchg
jg
lcall
scas
sti
xchg
cli
in
pop
scas
inc
rclb
xor
cmp
sbb
es
fildl
jmp
fwait
ret
push
inc
imul
cmp
test
outsl
push
rol
adc
sbb
popa
lcall
aam
cmpsb
adc
mov
pop
jb
cwtl
inc
xor
inc
push
enter
jl
call
nop
mov
daa
xchg
das
cltd
iret
repnz
aam
cmp
dec
pop
test
mov
cmpsl
cwtl
sbb
jno
int
xchg
mov
or
jo
or
es
or
movsl
mov
rorb
push
cmc
dec
repnz
imul
jns
adc
xchg
decl
enter
pop
lods
or
push
cmp
hlt
jne
jmp
fmull
mov
jb
subl
lods
test
and
pop
repz
inc
pop
aad
mov
movsb
les
aas
xchg
shlb
mov
sub
cmp
xchg
lea
or
cld
pop
inc
or
bound
imul
aas
cmp
inc
mov
into
aad
xor
inc
test
cmp
aam
jmp
lret
sub
push
pop
arpl
pop
mov
out
in
fwait
aam
adc
into
clc
add
mov
jle
cli
xchg
dec
mov
xor
add
mov
push
mov
pop
pop
jns
in
pop
push
pop
mov
insb
rorl
dec
dec
mov
scas
inc
adc
jne
pop
pop
pusha
sub
rclb
lods
scas
xor
sub
mov
cld
les
pop
sub
xor
mov
fdivr
adcl
addl
push
fwait
out
lcall
and
bound
mov
adc
sbb
push
push
mov
aaa
xchg
out
idivb
sub
sbb
jecxz
push
fbstp
adc
adc
fnstenv
pop
xchg
and
cmp
sarl
pop
es
jbe
cmp
test
mov
cltd
sbb
ja
xlat
leave
imulb
mov
loope
cmp
pop
cmp
fcoml
or
xor
mov
movsb
insb
fldt
push
popa
stos
push
inc
dec
dec
test
or
pop
adc
dec
icebp
push
inc
pop
das
or
faddp
fwait
jl
outsl
lret
in
adc
jo
push
cmp
xor
dec
loope
add
mov
push
out
inc
lods
mov
cmp
jnp
push
xor
cmp
pop
int3
jmp
jb
or
mov
std
lret
insb
nop
pop
push
gs
mov
cwtl
adc
mov
or
ds
sysexit
push
jmp
adc
push
or
in
mov
insl
insl
imul
fimuls
push
push
movsb
adc
mov
dec
rcl
push
mov
push
mov
jl
xchg
movb
in
mov
add
mov
andb
pop
jnp
and
icebp
lret
sbb
dec
js
push
in
pop
outsb
popa
dec
rorb
movsb
sbb
scas
aas
ljmp
cmp
lods
mov
pop
inc
mov
adc
shl
pop
or
iret
push
mov
push
mov
inc
pop
pop
ss
test
out
lret
aad
rcl
and
imul
pop
xchg
lock
push
add
fs
fnstenv
psubsw
daa
add
push
out
in
sbb
shlb
mov
inc
or
push
stos
sti
jg
test
lcall
cmpsb
popa
mov
mov
insl
and
and
popf
sarl
enter
adc
lods
xchg
pusha
rcrb
out
idiv
mov
jp
xor
sbb
or
loop
rorl
outsb
and
shrl
out
push
jge
sbb
adc
jl
lods
daa
inc
inc
or
mov
sub
pop
adc
test
lret
outsl
mov
xchg
push
rolb
daa
fstpt
gs
sbb
pop
or
inc
mov
sarl
mov
cs
sbb
cli
scas
call
mov
mov
jmp
orl
xlat
pop
cs
cmp
jb
les
mov
jg
mov
xchg
mov
movb
movb
mov
andl
jmp
dec
mov
aaa
es
mov
js
mov
invd
add
shufps
pop
add
mov
inc
add
js
mov
jne
or
xchg
popf
ret
jno
pop
mov
inc
inc
js
pop
jge
cmp
dec
xchg
pop
dec
or
add
adc
aas
jge
mov
clc
cmpsb
out
aam
out
int3
out
pop
pop
or
xor
fcmove
jo
lods
xchg
mov
jns
aas
ljmp
test
scas
push
pop
cmp
jge
pop
cmp
loope
idiv
cmpsb
push
aas
loope
push
jne
cmp
ljmp
sbb
sbb
in
out
loopne
mov
and
mov
cltd
sub
xlat
mov
adc
clc
or
sub
in
jecxz
xchg
popf
ss
pop
dec
mov
movsb
sbb
xchg
das
or
insb
repnz
fcmovnbe
sti
int
or
fs
arpl
adc
sub
cmp
pushf
movsb
cwtl
xor
fistl
pop
and
and
push
push
loopne
jbe
repz
bound
inc
repnz
add
dec
pop
fsubr
inc
xchg
push
into
sbb
call
and
add
inc
movsb
add
fisubrl
ja
ficoml
xor
adc
mov
push
add
push
sbb
pop
mov
test
jp
ss
or
push
sub
daa
cwtl
nop
std
cmp
fimull
adc
add
xchg
inc
cmc
xor
push
push
sub
jp
dec
mov
mov
lods
xor
adc
mov
pop
dec
lea
jle
cmp
loop
mov
lret
inc
xchg
xchg
fldt
jmp
stos
jae
mov
jo
dec
lods
xchg
inc
sbb
stc
in
popf
mov
daa
xor
and
add
cmp
mov
sbb
jp
inc
mov
aas
dec
sbb
mov
fwait
add
push
xor
out
pop
pop
icebp
subl
cli
in
cld
data16
lret
dec
pop
fsts
cmc
jge
stc
xor
cld
aad
jb
out
das
es
xor
pop
push
cmpsl
sub
sub
movsb
test
or
icebp
inc
and
fistpll
add
mov
dec
cmp
jl
mov
xchg
xorl
jne
ja
xchg
push
and
xor
dec
stc
out
enter
leave
xchg
dec
add
add
arpl
adc
sub
jl
in
pop
cmpsb
es
cmp
es
fstps
mov
pusha
std
pop
movb
adc
addr16
fisubrl
pop
pop
pop
inc
mov
fiadds
js
push
scas
mov
out
jg
jns
xchg
and
add
stc
roll
sbb
dec
cmp
test
fwait
pop
subb
scas
adc
cmpb
test
or
xchg
and
scas
cli
jno
push
leave
xchg
stos
cmp
push
negb
cltd
mov
popl
xchg
cmp
loopne
icebp
in
and
fwait
jbe
daa
outsl
scas
push
and
fdivrl
fdivrl
daa
push
xor
ds
pop
cli
ss
push
fadds
cmc
push
mov
mov
out
insb
fsub
xor
mov
jne
sub
push
mov
mov
ja
dec
into
mov
fiadds
inc
lcall
jg
push
stc
dec
push
fs
sbb
outsl
sub
movsl
lret
pop
push
fstpt
lcall
jmp
or
sbb
scas
fmuls
xlat
xchg
mov
cmpsb
add
popa
rcrl
sub
test
xor
xor
mov
pop
jmp
loope
cmp
popf
sbb
mov
outsl
push
lea
mov
jmp
leave
mov
sar
gs
jae
inc
mov
cld
out
and
fmull
add
lods
aas
test
cmpsb
popa
inc
xor
dec
dec
mov
gs
and
add
in
les
adc
sbb
icebp
lahf
jmp
xor
push
or
mov
loop
mov
pop
fwait
scas
ret
imul
pop
jae
sbb
mov
xor
and
mov
daa
mov
push
mov
mov
outsl
xchg
cld
loop
sarb
mov
push
sub
loopne
ficoml
jo
les
dec
movaps
or
mov
ret
dec
add
mov
iret
daa
or
movsb
out
loop
loop
mov
inc
arpl
in
add
out
dec
out
mov
cld
inc
call
cmp
jl
outsb
out
fildll
andl
jecxz
repz
mov
push
pop
pop
inc
cmp
jne
mov
xchg
das
mov
mov
repz
leave
cmp
shll
mov
pop
add
mov
int
loop
rcrl
mov
lods
lock
outsl
addr16
add
sub
push
xchg
jnp
fnstcw
xor
inc
pop
rorb
push
arpl
mov
repz
fldl
cmp
push
insb
in
pop
and
push
pop
dec
fst
inc
lret
call
mov
insb
outsl
sbb
fdivp
fcomps
fsubl
scas
push
subl
xor
addl
inc
cwtl
in
cwtl
sbb
movsb
pop
int3
xchg
jnp
rcll
in
inc
inc
cwtl
stc
jp
pop
adc
inc
jmp
jbe
mov
add
mov
scas
repz
loopne
sbb
sbb
hlt
add
push
mov
or
inc
outsb
adc
imul
mov
orl
add
movzbl
movzbl
orl
jmp
insb
lods
push
repz
je
xor
or
fs
add
psubb
cmp
mov
mov
mov
out
int3
leave
movsb
sbb
xchg
aad
pop
xchg
pop
inc
ret
js
enter
mov
xchg
and
ficoms
loop
sub
xchg
push
insl
mov
arpl
xor
pop
push
cmc
mov
mov
or
sti
or
jp
xor
cmp
rcrb
lods
push
adc
call
movsb
pop
loope
inc
stc
cmp
xlat
mov
mov
enter
movsb
dec
mov
xor
or
mov
fidivrl
into
jecxz
mov
outsl
mov
in
ret
mov
cmp
pusha
push
neg
xchg
add
movsl
xchg
push
repnz
xchg
fadds
scas
sbb
sbb
xlat
and
test
js
mov
orb
add
iret
inc
push
leave
stos
call
mov
sub
scas
jb
and
ljmp
nop
adc
pop
js
repnz
jecxz
mov
addr16
cmp
and
sub
push
fidivl
fs
mov
jp
cmp
outsl
test
call
imul
je
ljmp
or
stos
scas
and
iret
and
out
lea
and
in
xor
scas
fwait
lret
inc
adc
mov
inc
xor
xchg
sbb
mov
xor
shlb
pop
rcrb
adc
cmp
dec
hlt
xlat
fidivs
fcomip
sbb
stc
push
sub
fs
insl
inc
add
cltd
xchg
call
sub
in
bound
lea
mov
mov
sbb
sbb
cmpsb
xor
loope
je
pop
mov
js
loope
push
cmp
or
repz
test
mov
jecxz
jns
ljmp
sub
add
stos
leave
or
lods
movsb
pop
push
andb
pop
push
outsb
paddq
in
into
push
jle
mov
sub
mov
in
fistpll
jne
lcall
jb
push
andb
mov
inc
inc
test
call
and
popa
jb
scas
iret
insl
xchg
cltd
int
movsb
insl
clc
lea
jmp
in
hlt
xchg
ficoml
cmp
lret
in
test
dec
sbbl
sbb
loopne
aad
roll
sahf
pushf
xadd
fstpl
or
jae
mov
testb
aaa
stos
pushf
mov
fildl
sub
xchg
lcall
mov
push
inc
inc
cltd
fwait
and
cmp
and
mov
sub
pusha
xchg
popf
arpl
sub
sti
mov
insl
cli
addl
mov
int
mov
cltd
mov
pop
pop
push
in
loopne
lret
fcmovu
es
stos
jge
adc
mov
addr16
test
sbb
cld
push
xor
mov
push
sub
adcb
idiv
fmuls
rcr
add
jmp
mov
dec
xor
and
popa
inc
jge
insb
scas
xor
add
faddp
or
pop
lcall
hlt
arpl
pop
mov
loop
mov
dec
divl
dec
mov
ljmp
cld
test
mov
lahf
dec
lret
or
xchg
inc
rolb
add
addr16
stos
sub
int
in
enter
push
push
aam
or
loopne
pop
shl
pop
icebp
rcll
out
movsl
movsl
lahf
xor
mov
mov
sub
inc
sbb
and
iret
ds
mov
jbe
arpl
add
pop
add
mov
mov
push
int3
loope
fildll
pop
sub
mov
add
cmp
xchg
sarl
sbb
pushf
sub
fwait
xor
inc
rorb
js
mov
add
or
rcll
mov
and
sub
push
je
repz
dec
fdivl
lea
and
pop
js
test
jns
jp,pn
mov
sbb
mov
jo
sub
insl
xor
mov
dec
lods
mov
aam
and
sub
pop
inc
nop
or
daa
lret
sarl
scas
mov
int3
inc
or
jg
dec
fists
push
and
mov
xchg
or
in
add
or
mov
mov
lods
call
fsubrl
jp
fdiv
add
jl
aad
jge
cli
rcrl
outsl
insl
jmp
push
movsb
testb
cmp
jl
mov
mov
fcoms
lods
test
mov
inc
dec
aad
sbb
cwtl
das
sub
mov
js
mov
notb
out
fistpl
sub
xchg
mov
add
ljmp
xchg
inc
fs
mov
mov
loope
mov
int
dec
cltd
and
loopne
push
fdivrs
mov
les
mov
popf
pop
repnz
dec
shll
lods
add
pop
cltd
inc
mov
in
xor
xor
adc
push
in
fidivrl
imulb
subl
mov
adc
bound
rol
pop
add
int
out
pop
das
ret
add
cmc
js
shl
xchg
dec
jb
lock
imul
mov
push
sub
gs
test
or
out
add
xor
jae
xor
addb
mov
cmp
jle
mov
pop
insb
ror
pavgb
dec
and
test
stc
add
sub
shrl
xor
sub
sub
ret
loop
mov
ds
sti
fwait
repz
push
add
xchg
mov
dec
cmc
nop
mov
add
jne
cld
jo
fdivrl
getsec
xchg
ja
xorl
idiv
movl
mov
movl
cmp
movl
jmp
fidivl
push
or
fmuls
push
cwtl
js
test
invd
add
paddusw
test
int3
loopne
popa
jo
cmp
pop
lcall
cld
aad
xor
jmp
addb
mov
lds
fimuls
jmp
dec
cwtl
or
stos
sub
int
stc
sbb
hlt
jb
jbe
sahf
aam
iret
pop
inc
out
push
test
call
pop
mov
mov
add
fisttps
cmp
xchg
adc
pop
adc
movsb
icebp
xor
cmp
arpl
lret
cmc
add
cmpsb
test
mov
and
mov
clc
pop
add
mov
cmpsb
imull
mov
cltd
stos
mov
std
loopne
test
push
jae
xchg
cmp
mov
shrb
mov
ret
sub
push
mov
cmp
or
pop
in
jo
flds
cmpsb
mov
push
fwait
lods
or
icebp
inc
mov
xor
aam
xor
test
xchg
aad
aas
inc
inc
pushf
push
dec
movsl
mov
push
and
rclb
imul
js
popf
fists
leave
sbb
sbb
fcomps
push
cmp
cmp
lock
pop
add
push
cmp
insl
jnp
je
sbb
mov
dec
cmpsl
in
leave
push
test
xchg
enter
ret
outsb
push
cltd
testb
shll
jmp
std
cld
sub
mov
mov
push
dec
movsb
push
lock
sub
fs
pop
fisttps
cmc
js
pop
test
mov
mov
jo
adc
push
jb
cmpsl
jae
mov
mov
sbb
pop
or
jnp
or
jbe
ja
mov
sbb
dec
repnz
daa
out
fistpll
mov
dec
rorb
xor
push
shrb
iret
mov
or
fidivs
pop
ret
push
rcl
mov
lea
xor
xlat
pop
ret
sub
mov
or
clc
and
cli
pop
lds
and
xchg
mov
mov
xchg
movsb
dec
repnz
arpl
mov
pop
cmc
sub
arpl
xchg
test
scas
add
mov
sbb
fcoms
xor
jge
aad
icebp
stc
cli
stos
adc
sub
in
sbb
adc
pop
sbb
ret
mull
pop
mov
push
sbb
fadd
jmp
scas
mov
pop
cmp
pop
cmc
pop
push
stos
mov
push
lock
imul
pop
or
add
nop
and
or
lahf
mov
loop
xchg
call
sbb
dec
lock
pushf
inc
dec
hlt
cmpsb
adc
hlt
sub
adc
lea
jg
je
ret
dec
pop
or
pop
mov
addl
mov
stos
rcll
call
mov
sbb
mov
xor
int
cltd
add
xchg
mov
and
sub
mov
ss
jmp
cld
stos
int3
and
xchg
push
mov
mov
gs
cld
lods
mov
fs
ss
cmp
xor
std
aad
jp
or
xchg
xor
les
add
out
es
scas
clc
scas
fdivr
test
or
std
lahf
lea
xchg
lods
pop
enter
mov
and
sbb
rcll
sub
insb
sbb
fstpt
jg
insb
scas
mov
mov
sbb
push
xchg
aaa
mov
inc
push
sub
icebp
lods
push
lcall
add
orps
cli
push
out
shrl
test
cld
jo
dec
not
enter
mov
mov
mov
pop
out
inc
xchg
sub
imul
jbe
lahf
sbb
xor
fnsave
aas
popf
add
pop
xchg
cmpsb
out
push
adc
lock
cwtl
mov
jg
sbb
movsb
ss
pop
and
push
rcr
pushf
inc
mov
cmp
jp
xchg
subl
mov
jae
cmp
stc
dec
cmpsb
imul
cmpsl
not
fsubs
xchg
mov
subl
imul
adc
cmpb
daa
test
pusha
shrb
mov
or
mov
fsubrl
and
mov
sub
push
aas
adc
mov
in
cmpsb
aaa
std
xchg
mov
xor
mov
insl
cltd
sbb
daa
dec
hlt
test
dec
repnz
flds
mov
imul
popa
out
into
xor
lret
ficoms
cwtl
rorl
and
or
fs
pop
jge
dec
jmp
fidivl
iret
popl
mov
sub
pop
test
outsb
movsl
leave
insb
and
aas
fstps
js
cltd
insb
sub
dec
andb
pushf
jp
mov
jg
ret
jb
jmp
mov
mov
cmp
dec
mov
mov
fcomi
push
xlat
dec
push
cmpl
and
inc
ja
xor
filds
push
stc
std
push
jne
popa
cmp
inc
xchg
cmpsl
dec
adc
and
xchg
pop
xor
push
jg
gs
inc
cld
lods
inc
dec
inc
incl
bnd
mov
into
xor
jns
lods
fbld
adcb
enter
ror
orl
dec
cmpsl
ret
mov
mov
xor
push
je
test
mov
mov
in
pop
sbb
adc
ds
push
out
mov
mov
int
xor
jae
cmp
adc
fstl
jb
push
jae
rcll
sahf
xchg
shll
inc
mov
mov
sub
cli
and
ljmp
packsswb
adc
stos
divb
mull
repnz
push
mov
gs
sub
cltd
and
add
enter
push
aas
pop
cmpl
jb
mov
sbb
jmp
push
call
movl
mov
mov
push
push
adcl
push
push
andl
call
xor
xorl
xor
orl
or
or
movl
mov
mov
mov
cmp
jne
mov
mov
jmp
mov
dec
and
xchg
sub
push
mov
iret
imul
shld
sbb
dec
ficompl
es
pop
or
cltd
fcompl
push
pop
sub
stos
sbb
sub
mov
xlat
mov
lahf
fsubr
insl
xchg
aam
mov
cltd
push
dec
push
add
loopne
push
mov
mov
adc
sbb
adc
cmp
lea
push
lcall
xor
push
xor
pop
imul
xor
cmp
cli
push
jne
mov
push
sbb
cmp
in
insl
xchg
mov
rorl
mov
not
sub
xchg
inc
pop
hlt
or
xor
cmc
stos
push
fisttpll
xor
adcl
out
or
pop
loopew
jnp
cmpsb
out
stos
sbb
ror
stos
or
or
or
sub
xlat
mov
ja
jne
mov
or
movsb
push
inc
push
xor
test
imul
fdivp
loope
ret
sbb
mov
hlt
stc
fbld
pushf
jo
adc
imul
push
cmp
cwtl
or
jmp
and
cmp
mov
xchg
lret
xchg
xor
adc
pop
imul
and
pop
dec
ss
mov
mov
xchg
lods
dec
pusha
jb
ljmp
mov
sub
mov
scas
mov
sbb
pushf
lcall
sbb
mov
mov
dec
dec
iret
pop
fisubrl
xchg
lret
jae
xchg
enter
sbb
fadd
rcll
sbb
cwtl
jl
mov
lahf
dec
lods
mov
jge
xchg
inc
mov
inc
rolb
shll
jbe
jb
mov
mov
aam
adc
cmp
adc
inc
and
in
data16
jns
and
sbb
orb
movsl
inc
xchg
xchg
mov
xchg
xchg
stos
out
pusha
scas
and
aam
or
insl
movl
mov
mov
dec
dec
out
push
out
filds
cli
lea
lods
inc
in
mov
jae
xor
out
mov
cmp
mov
data16
mov
mov
sbb
sbb
xchg
dec
test
adc
daa
popa
loopne
mov
and
push
or
movsb
dec
loop
in
xor
mov
sahf
or
jl
pop
pushf
xchg
mov
into
js
sbb
sub
test
sub
or
in
lcall
xchg
loop
pushf
inc
out
sti
push
clc
lret
inc
loope
push
out
int3
or
jbe
jns
xor
insl
and
aad
aas
push
xchg
jecxz
push
dec
dec
pop
dec
lock
add
adc
sahf
cwtl
addr16
inc
in
adc
add
and
dec
addr16
or
dec
add
sbb
je
out
movsb
js
cmp
jl
sarl
and
mov
movsl
jmp
insb
xor
xchg
pop
lcall
dec
adc
pop
inc
dec
or
cwtl
ret
and
nop
int
jns
arpl
adcl
nop
or
popa
push
add
mov
cmc
mov
cld
sti
mov
adc
pop
sbb
cmp
push
push
xchg
lret
cmc
aam
in
jge
jecxz
cwtl
test
cmp
and
mov
shl
push
cwtl
xchg
mov
stos
mov
int3
jmp
in
out
aaa
aam
ds
subl
jle
and
dec
jmp
adc
out
cmc
inc
stc
dec
loopne
shrl
mov
xchg
cmpsl
pop
dec
and
outsb
mov
mov
cmp
lret
rcr
mov
adc
arpl
sarb
inc
es
sub
movsl
dec
mov
mov
adc
les
pop
aas
jbe
fmul
cmp
mov
sub
pop
mov
scas
adc
out
jge
inc
sbb
or
inc
adc
stc
add
nop
in
jp
dec
mov
lret
dec
rolb
push
pusha
mov
xchg
push
mov
cmp
dec
sub
cmc
mov
fbld
test
push
mov
add
push
out
decb
jae
aas
pushf
xchg
scas
stos
out
test
out
lods
test
arpl
add
imul
cltd
stos
rol
sti
pxor
sbb
xor
rorb
cmp
scas
shrb
sub
mov
ss
jnp
leave
mov
or
xor
and
mov
stos
or
jae
daa
ds
sbb
cmpsb
or
or
and
sbb
cltd
adc
inc
xor
jno
int
mov
sbb
sar
stos
test
mov
arpl
and
je
push
inc
into
xor
mov
imul
or
mov
adc
add
push
addr16
push
ficoml
fidivl
mov
mov
clc
in
testl
xchg
test
mov
inc
xor
push
cmp
aam
mov
fstpl
into
mov
adc
and
dec
lcallw
jo
mov
ret
mov
addr16
rcll
icebp
std
mov
shll
push
aaa
mov
mov
mov
mov
movsb
xor
dec
xchg
inc
bound
jno
pop
xchg
insb
es
xor
adc
in
test
mov
test
imul
decb
inc
inc
jl
les
cmp
loope
pusha
inc
ret
fdivr
mov
call
jno
inc
neg
test
ret
jge
cmp
lcall
cmp
inc
adc
daa
sar
mov
inc
mov
out
jp
cs
andb
mov
pop
jmp
xor
int3
scas
adc
cmpsb
jle
negl
in
or
push
add
inc
xor
dec
daa
fwait
imul
and
shlb
dec
or
jne
shrd
shl
mov
mov
shr
xor
mov
xor
or
mov
mov
mov
shrd
xor
shr
mov
mov
xor
or
mov
shl
push
pop
mov
mov
mov
mov
mov
sub
movzwl
mov
movzwl
cltd
jmp
jb
ffreep
push
aad
push
dec
mov
jmp
mov
or
punpcklwd
ret
aas
rcl
aam
shll
dec
in
inc
stos
pop
lcall
aas
push
das
xor
xchg
aam
xchg
cmp
jge
pop
push
insb
inc
mov
mov
adc
lea
xor
jnp
mov
cwtl
xchg
sahf
mov
fdivrl
jge
adc
push
adc
push
cs
adc
cs
fidivs
cli
and
into
mov
xor
movsbl
leave
icebp
shrb
in
push
jle
loope
rcr
dec
inc
mov
aad
push
bnd
je
pop
cmp
daa
xor
lods
ds
xchg
movsl
push
fistpl
sub
mov
pop
xchg
sub
xor
idivb
mov
mov
test
pop
adc
inc
aaa
test
mov
sti
clc
fcmovnu
push
rcrl
push
test
and
dec
lds
xchg
js
lret
ret
in
imul
mov
mov
or
sub
int
test
es
in
call
adc
out
mov
xchg
xchg
fwait
jae
aam
loop
xchg
out
in
inc
hlt
in
adc
dec
nop
pop
mov
je
cld
or
xchg
inc
sub
mov
jns
mov
xchg
add
inc
pop
jl
mov
dec
shr
out
jnp
pop
mov
dec
xlat
pop
mov
inc
xor
andb
or
pop
shlb
jge
mov
xchg
adc
pop
pop
inc
movsb
cmp
das
out
sub
loopne
lds
or
fs
ret
cmp
vmwrite
jmp
pop
cmpsb
pop
les
xchg
sti
push
lods
and
insl
adc
jns
outsb
insb
mov
jle
lock
inc
push
adc
rcrl
adc
jns
mov
es
push
sbb
sub
das
repz
addr16
inc
mov
das
iret
jg
mov
or
shlb
test
leave
jno
out
fiadds
add
dec
cmp
lret
xchg
insl
adc
dec
or
in
movsb
sub
dec
adc
arpl
je
pop
rclb
adc
sbb
cmp
fistps
into
clc
push
push
cs
mov
mov
ficoml
push
int3
call
sub
sahf
xchg
cmpsb
sub
cmc
outsb
mov
lock
les
imul
sbb
lods
xor
ud1
add
jne
sti
gs
jo
jge
mov
insb
cltd
cmpsb
push
dec
lret
pop
orb
imul
jo
mov
decl
pop
mov
xchg
or
jno
adc
xchg
popf
pop
mov
rorb
pop
sub
mov
into
inc
mov
ss
pop
sub
in
popa
popf
ss
shrl
jg
popf
out
jl
ja
sub
popa
push
cltd
dec
outsb
out
pop
inc
dec
int
sub
bswap
cmpsl
pop
mov
flds
mov
clc
push
movsb
mov
cmpsb
adcl
mov
aas
outsb
xchg
lcall
add
cmc
xor
ret
xchg
movsl
mov
mov
ret
ds
mov
or
lcall
testl
imul
sub
adc
push
xlat
jp
nop
add
mov
popa
add
insl
rcrl
inc
push
cs
dec
mov
in
pop
sub
mov
roll
popf
out
pop
pop
add
adc
push
cwtl
std
add
stc
fdivrl
pop
es
aam
push
mov
and
mov
mov
mov
pop
shlb
fnstsw
fdivrl
or
ds
data16
jbe
in
cmp
lock
push
adc
xor
cli
xchg
mov
stc
dec
cmp
mov
hlt
sub
nop
add
add
jne
jns
xor
xchg
push
repnz
les
add
lret
mov
mov
fnstenv
jecxz
sub
gs
xchg
jmp
orl
xor
sbb
out
sub
jnp
mov
jno
adc
std
mov
xchg
rcl
popf
inc
cmp
pushf
mov
movntq
dec
sub
int3
test
push
arpl
sub
scas
adc
xor
pop
pop
xchg
xchg
dec
or
ja
hlt
orl
pop
pop
imul
cld
inc
mov
cmpb
mov
repz
pop
mov
push
lods
and
orb
sbb
repnz
inc
jno
pop
push
add
cmp
in
adc
popa
jle
mov
dec
cs
int3
mov
mov
pop
data16
iret
arpl
popa
jo
pop
lods
loopne
dec
xchg
jmp
dec
jmp
jae
imul
add
ja
xor
scas
movsl
cs
pop
push
decb
xlat
sbb
push
test
sub
pop
in
rcr
fdivrl
out
pop
sub
dec
outsl
pop
nop
adc
in
and
push
loopne
add
xlat
insl
idivb
pushf
lcall
add
lret
mov
inc
adc
arpl
xchg
mov
push
cmp
andb
loopne
xor
scas
shl
js
nop
sar
stos
mov
stos
dec
or
daa
outsl
add
popl
add
and
mov
adc
pop
lds
push
int
and
fisubs
pushaw
cmp
inc
mov
jle
arpl
pop
and
sarb
jbe
inc
inc
lcall
jecxz
cmp
loope
jge
jecxz
pop
xor
jg
mov
lret
cld
sbb
bound
fsubrl
pop
outsl
shlb
add
jmp
pusha
lahf
aas
sti
aas
pop
or
ss
dec
jne
fisttps
invd
add
pcmpgtd
pop
dec
iret
push
jo
adc
loop
loope
jmp
mov
pop
loope
arpl
sub
ds
pop
rcrb
jne
inc
popf
imul
push
fcomip
in
cli
mov
shrb
xchg
jge
cmc
nop
sub
xor
stc
call
cmp
icebp
ss
jge
pop
sbb
mov
push
and
cmpsl
xor
lock
push
mov
movsb
and
dec
les
orb
lcall
roll
fimull
and
je
xchg
inc
mov
or
scas
int
xor
cmp
dec
adc
imul
pop
in
xchg
pushf
mov
add
aaa
cwtl
nop
adc
add
in
xorb
xchg
idivl
inc
xor
bound
dec
inc
shrl
aam
iret
and
and
dec
adc
or
dec
fs
ljmp
icebp
sahf
cmp
xor
push
sub
enter
xchg
jne
jbe
fistpl
das
je
dec
mov
xchg
xor
sbb
mov
popa
loop
repz
enter
dec
jmp
les
stc
inc
jnp
mov
push
je
lea
jp
push
jp
ss
adc
in
mov
xor
and
or
scas
adc
aaa
pop
dec
cmp
cmpsb
popa
mov
ja
popf
jno
ja
jno
sahf
xchg
or
mov
cld
mov
mov
jmp
xor
cld
cmp
cwtl
rolb
xor
cmp
scas
test
clc
mov
divb
jmp
inc
aaa
inc
js
push
push
mov
pop
in
adc
out
rcl
inc
enter
jb
or
mov
repz
test
xchg
pop
out
sbb
add
pop
sbb
cli
xor
sbb
cmpsb
gs
movsl
mov
std
js
mov
orl
xor
xor
and
or
or
xchg
test
cmp
dec
repnz
mov
mov
ja
push
sbb
mov
or
popa
loopne,pt
cmc
shlb
mov
fs
jg
sbb
xor
gs
scas
stos
in
jmp
jl
mov
je
or
mov
ljmp
filds
loopne
xchg
xor
icebp
jne
mov
push
divl
xchg
and
dec
xor
pop
inc
and
push
popf
pusha
mov
inc
dec
xchg
xchg
cmp
add
ret
rcrl
dec
inc
and
and
outsl
stc
sub
daa
fs
clc
sbb
push
aam
mov
push
imul
int
xchg
xor
xlat
mov
jns
cmpl
mov
pop
inc
xlat
bound
out
test
out
arpl
jle
xchg
xor
scas
mov
movsb
cmpb
xchg
decb
pop
cmp
lret
mov
test
subb
ret
pop
mov
iret
and
subb
sub
sahf
test
push
mov
mov
xor
mov
mov
push
test
loop
pop
xchg
lods
or
sub
mov
mov
arpl
negb
out
mov
cmpl
add
sahf
pop
xor
pop
cwtl
xchg
out
cltd
mov
movsl
jnp
loopne
lock
lock
shlb
or
mov
repnz
scas
inc
jo
push
inc
xchg
cmpl
cs
pushf
xor
push
inc
sub
fistpl
sbb
dec
lods
push
sub
stc
shr
and
add
jno
xlat
push
cs
xor
adc
js
pop
sub
insb
ljmp
cmp
imul
pushf
pop
mov
test
pop
sbb
inc
loope
cli
outsb
adc
push
xchg
sarl
in
loopne
enter
push
adc
in
jmp
shrb
add
in
jg
hlt
xchg
test
push
push
ljmp
lods
jnp
gs
mov
mov
xchg
call
cmp
add
lock
inc
pop
push
xchg
adc
cmp
cmp
cwtl
or
adc
scas
xchg
nop
push
or
call
push
mov
pop
xchg
int3
pop
sbb
out
jg
mov
mov
arpl
jmp
imul
in
clc
fsts
cmpsb
aaa
adc
popa
insb
aam
seto
pop
fists
mov
inc
push
xor
mov
and
popa
sub
std
adc
and
and
insl
sub
mov
call
cmp
xchg
mov
jb
fwait
and
dec
pop
fucom
lods
cmp
adc
fwait
xlat
and
enter
adcb
xchg
add
insb
mov
ljmp
mov
insl
in
cmp
xlat
add
xchg
imul
push
push
cmp
orb
movsb
test
movsl
dec
ss
ficompl
fdivr
pop
or
fs
rcll
int
es
je
pushf
dec
push
std
imul
cld
inc
arpl
xchg
xchg
inc
mov
cltd
push
rolb
cld
lahf
lcall
cmpsb
cmp
adc
fsubl
cmp
lret
jge
xor
lahf
mov
daa
out
mov
push
aaa
leave
cwtl
push
out
mov
stos
sub
jmp
and
or
xlat
and
movl
jmp
mov
mov
inc
andl
cmp
push
das
lahf
cmp
cmp
jbe
negl
and
imul
xor
pop
mov
sub
je
adc
cld
xor
rcll
lcall
std
repnz
mov
in
fcmove
mov
loopne
push
enter
lret
daa
addr16
push
jb
mov
fildl
rolb
into
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
and
mov
imul
mov
sub
mov
add
mov
cmp
jbe
mov
mov
shrd
xor
mov
shr
jmp
xor
xor
or
fcoms
invd
add
divps
add
cmp
add
adc
cli
notb
or
or
in
mov
cmp
fdiv
sub
fs
mov
outsb
inc
sbb
inc
sbb
adc
test
leave
lock
mov
push
addr16
pop
test
fsubr
jmp
inc
scas
cmp
fldl
add
sub
rcr
cmp
jecxz
aaa
fsubrl
adc
imul
push
add
aaa
mov
cmpsb
pop
jge
es
jnp
mov
gs
xchg
int
inc
sbb
sub
cmp
sbb
fstl
stos
sahf
xchg
adc
cmp
rorl
mov
jg
push
push
sub
mov
out
mov
push
cmp
cmp
push
mov
insb
fists
cli
mov
and
adc
jmp
imul
ja
inc
cmpsl
jl
pop
dec
or
je
or
fstenv
push
stos
inc
popf
sbb
test
adc
faddp
in
xchg
cmp
stos
test
adc
push
push
mov
jae
inc
and
andb
ss
push
sbb
cmp
jnp
add
dec
mulb
fisttps
fstpt
cmc
out
push
and
int
or
js
sbbl
out
jge
int3
jnp
in
popf
inc
outsb
mov
fstpt
adc
inc
sbb
xor
cli
adc
loope
cli
mov
adc
push
aaa
adc
les
loopne
imul
mov
pop
dec
scas
and
mov
xchg
add
or
jns
xor
dec
data16
pop
pushf
lahf
ret
sahf
xor
js
jecxz
xchg
ficoms
inc
jae
push
jnp
cmp
int
dec
add
pop
sub
lcall
pop
xchg
outsb
xchg
xor
or
fbld
mov
push
aas
pop
ret
imul
xchg
out
and
fsubrs
std
rclb
jae
mov
repz
test
test
into
je
pop
lods
ljmp
shl
and
and
repnz
xlat
push
sbb
xchg
xor
les
or
xchg
fsubrl
roll
push
pop
out
dec
out
sbb
push
or
add
test
rcrb
push
rcll
cmp
or
mov
push
inc
mov
mov
lods
adc
push
lock
pop
mov
hlt
inc
lds
jle
int3
imul
sahf
in
cs
push
or
and
je
sbb
jb
test
xchg
das
mov
xchg
shll
pop
inc
sarb
add
aad
aad
or
aaa
loopne
out
xchg
cltd
pop
es
push
and
mov
mov
sub
jns
or
repnz
mov
fdivrl
sub
mov
lds
loopne
push
xor
xchg
fists
fdivrl
adc
pop
cmp
or
adc
mov
adc
jmp
cmpsb
push
dec
aaa
sbb
push
push
sarb
push
lods
cld
loop
jae
nop
loop
or
mov
cwtl
adc
mov
addl
add
out
or
sub
mov
mov
pop
cmp
das
cmp
cmp
scas
lcall
jo
test
jg
shlb
push
sub
dec
sbb
shl
lret
mov
outsl
repnz
mov
jge
pop
xchg
in
repnz
cmp
addr16
test
rorb
mov
push
xor
or
jns
xor
adc
mov
mov
dec
mov
scas
enter
int3
pop
mov
int3
dec
sahf
xchg
fisttpll
pusha
in
daa
cmc
xor
outsl
mov
bound
jmp
bound
fs
cld
enter
xlat
les
cmp
sub
cmp
imul
dec
xchg
idivb
inc
adc
imul
mov
iret
push
or
push
inc
int3
outsl
or
sbb
daa
out
ss
fiaddl
pusha
adc
mov
dec
aas
mov
mov
pop
sbb
jmp
call
push
fimuls
imull
jae
fcoml
push
inc
lds
outsl
sub
aaa
mov
lock
imul
jae
leave
shll
jg
adc
sbb
test
pop
out
repnz
xor
jbe
and
mov
mov
fsubrl
add
movsb
test
xchg
inc
lret
and
loop
add
inc
mov
xor
add
cld
sbb
jnp
pushf
or
xchg
dec
das
fneni(8087
mov
adc
push
xchg
dec
adc
mov
dec
mov
addr16
ds
push
out
push
ss
sbb
mov
xchg
fsubrs
add
lret
movsb
into
stos
ret
adc
movsl
push
xor
aad
sub
mov
or
int3
inc
or
mov
and
pop
pop
inc
inc
and
cltd
gs
fcoms
xchg
mov
outsl
inc
lock
fninit
push
pop
push
in
mov
inc
and
stos
sbb
adc
inc
loope
jge
jnp
bound
popa
adc
adc
cld
mov
sbb
lods
mov
jb
xor
sub
jp
fiadds
mov
lret
clc
sar
pop
pmaddwd
add
rol
inc
push
stc
dec
jbe
sub
push
push
repz
jp
dec
add
mov
sbb
bound
stos
dec
je
fnsave
mov
cld
or
push
sbb
xor
sahf
sbb
out
subl
out
mov
inc
push
mov
mov
xor
shl
jmp
push
mov
cli
sbb
fnstenv
dec
in
test
or
psrld
xor
gs
xor
mov
sub
push
inc
negl
out
movsb
inc
mov
cmp
fcoml
aam
fisubs
pop
lahf
jb
es
xchg
cmp
adc
test
push
fs
add
clc
add
and
sub
rol
and
cs
mov
jne
mov
in
into
push
stos
sbbb
mov
frstor
sarb
loope
shrb
in
jae
test
lock
out
jge
and
js
xor
ret
sub
adc
add
sbb
mov
sti
dec
les
ss
push
and
outsb
add
cmpsl
or
filds
jnp
jnp
inc
cmp
outsl
in
sub
mov
sub
mov
mov
rclb
filds
xchg
jmp
loop
dec
cmp
shll
push
sarl
cmp
mov
movsb
push
out
cmpsl
pop
xchg
inc
cltd
gs
mov
fsubrp
jl
mov
push
xchg
dec
ret
push
clc
mov
add
pusha
out
cld
gs
pop
cmpsl
loope
shlb
loope
mov
add
pop
leave
subb
push
inc
cmp
mov
add
add
mov
das
loop
das
fdivrp
iret
cmp
sub
cmp
dec
xor
push
push
loopne
daa
insl
rcrb
sub
in
mov
jl
scas
shl
dec
adc
das
push
push
push
adc
insl
pop
ret
fcom
xchg
xchg
dec
sahf
cmp
fiaddl
call
adc
pop
sti
and
sub
insb
sahf
into
data16
sub
push
insb
pop
jno
push
mov
mov
push
fcom
out
jns
dec
lcall
inc
add
repz
test
insl
mov
je
mov
stc
shrb
je
testl
js
loope
mov
pusha
pop
sbb
jnp
xchg
rol
fsubr
fidivrs
pusha
daa
aaa
jg
insw
in
enter
shrb
sbb
xor
dec
inc
or
jb
mov
jb
std
push
out
pop
orps
repz
mov
jbe
lea
xchg
mov
icebp
xchg
clc
sub
int3
lret
aas
adc
mov
dec
pop
movsl
push
xchg
jb
in
aaa
sar
fwait
pop
sbb
adc
and
push
mov
push
mov
out
mov
xor
mov
stos
adc
mov
cmc
insl
test
rorb
leave
into
mov
inc
pop
push
or
ror
mov
gs
int
outsl
aaa
cmp
adc
pop
xor
xor
mov
les
xchg
ja
sbb
jle
cmp
jp
jle
out
mov
int
sbb
pop
mov
inc
sub
mov
iret
push
mov
xchg
or
xor
push
ja
sbb
jb
inc
cmp
mov
leave
cltd
sahf
ja
jnp
cmp
sub
or
sbb
jo
cltd
jnp
sub
stos
fst
xchg
push
ret
mov
jns
sti
push
lahf
rcrb
clc
cld
push
mov
sbb
out
add
nop
add
adc
lret
push
push
and
fcompl
scas
lret
divb
mov
xor
cmp
sarl
dec
notl
test
push
das
push
into
pop
in
sub
jns
mov
adc
and
fcmovb
push
imul
add
sub
call
add
or
xchg
loopne
ret
and
shrl
cmpsl
adc
popa
enter
fcomp
add
and
add
lock
add
mov
cmpsb
scas
jp
dec
pop
icebp
dec
push
pop
dec
inc
mov
cmp
adc
icebp
ret
repnz
lds
insl
mov
sbb
mov
xchg
sahf
fwait
js
cltd
loope
xor
movsl
dec
and
out
mov
xor
adc
jne
or
pusha
inc
and
sub
test
xchg
mov
int3
pop
fucomp
sahf
shl
jmp
adc
cmp
sbb
cmpsb
movsb
das
je
ja
jle
test
and
xor
and
jns
fimull
lods
push
sub
pop
jle
xor
and
incb
stos
pop
push
shrl
adc
xchg
outsl
xchg
jge
inc
mov
pop
mov
popa
in
cmp
scas
int3
nop
xchg
dec
and
pop
mov
movl
call
data16
pop
clc
daa
mov
movl
and
movsb
pop
push
lds
sbb
shll
mov
push
leave
mov
push
pop
in
pop
jb
lahf
push
xlat
std
fcoms
mov
enter
or
and
fldenv
je
hlt
sbb
push
testw
imul
hlt
scas
xchg
adc
cmpsb
mov
popa
mov
popf
nop
and
int
into
das
push
lods
js
pusha
cmp
ljmp
xor
rorl
fisttps
sbb
pop
test
pop
lret
jge
xchg
xchg
popf
movsl
push
fcoms
xchg
cmp
pop
mov
in
ds
pop
cmpsb
dec
ror
sub
negl
fidivs
pop
call
hlt
out
cmpsl
mov
pop
push
cmp
imul
dec
out
popf
jecxz
jmp
add
mov
cmp
clc
frndint
or
mov
addr16
mov
sub
push
loop
jl
movl
mov
push
aas
in
jp
and
int3
pusha
xlat
or
int3
pusha
adc
mov
mov
js
xor
lods
gs
sahf
jle
ret
inc
inc
add
ret
mov
mov
ret
push
mov
sub
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
jmp
inc
mov
or
mov
mov
xor
out
mov
pfnacc
sub
popf
movsl
xchg
lock
lcall
sub
cli
subl
and
daa
rclb
std
shr
clc
jne
lods
jno
sub
dec
fwait
cmp
loop
xchg
dec
push
pop
push
and
xchg
lds
mov
add
jmp
stos
add
or
das
loopne
adc
xchg
cmpb
cmpsb
in
sbb
mov
stos
mov
inc
leave
cmpsb
cmp
pop
loope
or
push
add
dec
mov
loop
fistl
fisubrs
push
xor
lea
xchg
and
cld
inc
or
lods
sbb
inc
leave
add
sub
repnz
jbe
mov
int3
lret
sbb
test
inc
inc
jge
dec
push
test
daa
and
lcall
jmp
sub
mov
mov
jb
mov
bound
cli
mov
cmp
fwait
lret
test
or
add
mov
int
outsl
scas
rcr
inc
adc
add
sti
aam
xor
pop
cmp
stos
out
or
adc
mov
and
or
bound
xchg
scas
call
mov
imul
dec
popf
orl
lret
idivb
push
fisubrl
sarb
lcall
nop
sbb
add
add
dec
mov
call
std
das
inc
in
pop
out
icebp
add
loopne
cmp
xchg
xor
cmp
sub
add
in
pop
cld
ret
or
push
jl
filds
lods
or
es
xchg
xor
jmp
pushf
subb
push
sub
jp
lods
fs
test
add
pushf
imul
std
sahf
fcmove
aad
clc
mov
loop
jnp
outsb
pop
push
pop
pop
xor
cmc
cld
das
add
inc
sti
add
pusha
xchg
nop
mov
idiv
arpl
sub
cmpsb
and
push
rorl
mov
loopne
xlat
dec
clc
cli
popa
lds
aas
jne
stos
insl
and
push
cltd
jmp
adcb
jb
jg
xor
sub
cmp
sub
clc
mov
je
rclb
jne
push
jne
fidivl
movsl
and
xchg
and
mov
jge
and
leave
test
adc
movsb
scas
repnz
jae
jle
mov
push
add
push
mov
pop
dec
mov
push
mov
inc
shrl
mov
mov
clc
aas
mov
jmp
adc
aaa
addl
in
or
outsl
mov
or
or
pop
stc
rolb
pop
arpl
xchg
xchg
cvttps2pi
sbb
push
push
movsb
leave
andnps
cmpsb
dec
out
jb
lret
enter
xor
and
xor
jns
mov
xchg
mov
bound
fimull
jle
mov
pop
xor
pusha
ss
filds
add
push
mov
mull
sbb
fs
je
sbb
mov
inc
popa
iret
mov
loopne
rolb
lock
push
out
jle
or
pop
movl
sub
sbb
xor
adc
inc
rclb
in
inc
sbb
movsl
jb
mov
xchg
inc
out
mov
sub
or
or
mov
mov
mov
dec
sub
notb
jb
call
sarb
mov
ret
es
ljmp
mov
add
sbb
rcrl
adc
cmp
push
scas
jbe
imul
fs
inc
mov
cmc
or
enter
inc
outsl
mov
mov
outsb
mov
pop
ficoms
outsb
cmp
push
shlb
sbb
out
jns
push
pop
dec
inc
in
stc
fsubs
shrb
xor
into
subb
notb
dec
jmp
jge
xor
dec
dec
je
in
fbstp
pop
xor
popf
mul
add
lds
dec
loope
pcmpeqb
int3
cmpsl
or
fstps
lods
repz
add
mov
loop
push
xchg
loop
std
mov
repz
fsubrs
jns
fstl
dec
and
test
mov
push
pop
push
push
xorl
adc
xor
mov
loopne
push
sub
dec
mov
mov
adc
add
inc
add
je
mov
in
outsb
or
xchg
push
sub
sub
dec
dec
aaa
adc
mov
rorb
daa
jmp
sub
xor
decb
xchg
leave
scas
push
jecxz
in
inc
pop
and
jnp
addb
lahf
or
leave
nop
aas
or
dec
in
jp
add
pushf
pop
mul
pop
and
xchg
xor
inc
add
das
push
test
push
mov
int
sub
and
cmp
lds
xor
or
lea
push
add
stos
jne
push
sub
xchg
pop
pop
dec
movsl
scas
hlt
in
dec
lods
jp
in
mov
jno
stos
scas
stc
aas
out
scas
or
push
movb
stos
call
das
iret
ret
inc
or
xor
ret
stc
cmpsb
fdivrs
outsb
stos
shll
push
test
lds
les
ss
mov
push
pushl
and
mov
sbb
andb
in
fcmovne
sub
mov
je
xchg
rol
iret
arpl
mov
inc
insb
jo
or
xor
icebp
fldt
lret
stos
pop
int3
add
xchg
jno
daa
mov
sub
subl
pop
inc
sub
sbb
jns
inc
movsb
in
and
lds
popl
push
sub
mov
cld
out
jnp
sbb
adc
push
fdivl
idivb
xchg
out
imulb
push
shll
test
enter
in
test
lahf
sbb
nop
jb
push
lcall
repnz
rcr
xchg
out
push
jecxz
dec
sbbb
cmpsl
or
xchg
std
decb
bound
popa
jno
mov
and
out
adcl
loopne
clc
fnstcw
and
shll
mov
cmpsl
imul
subb
movsb
mov
xor
lods
push
call
pop
dec
insl
sbb
jne
sbb
push
mov
inc
sti
jne
loop
shr
mov
xchg
push
arpl
vpmaxsw
hlt
mov
pop
sbb
cmp
ds
sbb
cld
shl
adc
int
std
movsb
jmp
ret
cmp
pop
test
sub
or
movsb
out
xor
sub
inc
lds
sti
lret
lock
or
data16
ret
ficomps
inc
xchg
push
aas
repz
mov
fcmovb
sti
push
xchg
ja
int
js
mov
inc
xchg
mov
pushf
stos
je
jae
cmpsl
jno
popa
mov
hlt
mov
add
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
jmp
mov
ret
mov
adc
cmpsb
js
add
mov
sbb
mov
movups
push
fidivl
jecxz
and
insb
jle
ror
inc
sbb
iret
add
and
std
mov
jns
jns
and
into
imull
xor
mov
mov
or
mov
loope
subb
into
jbe
lret
pop
sarl
jns
adc
xor
iret
mov
stos
adc
test
in
xchg
nop
aam
lahf
pop
mov
outsb
out
mov
bound
ds
scas
aaa
pop
bswap
in
jae
jl
xor
inc
or
dec
mov
jl
mov
popa
push
imul
inc
add
adc
jmp
mov
mov
mov
cmp
dec
cwtl
sbb
pushf
aam
add
addr16
cmp
test
push
stc
lret
or
inc
xchg
cld
mov
and
mov
imul
fcmovb
es
jge
push
test
popa
into
movsl
xor
xchg
shlb
sub
and
push
pusha
cmpb
js
or
mov
dec
pop
notb
ja
mov
scas
add
lret
outsl
mov
loope
mov
cld
push
add
inc
push
mov
fnstsw
cld
xchg
adc
mov
adc
jl
ret
lret
fisubrs
add
push
pop
xchg
fwait
lret
mov
outsl
add
clc
jns
mov
jecxz
sub
jb
jbe,pn
or
sahf
sahf
jne
or
push
add
add
jle
sub
test
adc
mov
aam
aas
fcompl
pmaddwd
mov
sub
sbb
cmp
adc
and
shll
rorl
jge
inc
ficompl
or
pop
mov
inc
sub
cmp
cs
and
inc
adc
dec
jge
push
mov
push
lds
sub
cmc
icebp
std
mov
mov
fs
pop
push
pop
and
cmp
gs
or
cs
jns
sbb
adc
sub
das
push
sub
lret
and
inc
adc
ja
ljmp
ss
insl
push
jnp
pusha
test
scas
stos
or
insb
push
lods
jo
icebp
lods
dec
loope
stos
aam
push
fsub
lea
xchg
cmp
cs
int
repnz
hlt
push
cmp
xchg
out
pusha
aam
pop
push
lret
xor
dec
inc
fucomip
inc
lods
pop
mov
addl
jno
out
adc
mov
xor
adc
inc
xlat
int
jnp
or
stos
xor
daa
fs
int
adc
adc
push
dec
fistpll
push
xchg
test
jnp
jl
movb
dec
mov
mov
mov
stos
mov
fwait
js
fsts
add
jne
and
mov
and
shrb
and
xchg
sarl
dec
outsb
add
ret
loope
in
insl
pusha
cmp
inc
adc
movl
sbb
push
add
mov
popa
or
push
cmp
test
rorb
call
sub
loopne
and
cmp
jle
pop
xor
nop
aaa
xor
jbe
imul
loopne
addr16
gs
arpl
mov
jb
aam
cmp
stos
fcoms
ret
pop
jne
sbb
push
in
sbbl
xor
das
aad
pop
fimull
jl
xor
xchg
inc
inc
xchg
popa
jno
test
jns
andl
into
sub
xor
sub
pop
and
adc
mov
cwtl
add
cmc
mov
sbb
mov
dec
jmp
cltd
sub
dec
inc
mov
lock
dec
sbb
cmpsb
mov
mov
lock
mov
bound
fwait
sub
push
movsl
cli
dec
cmp
sahf
inc
mov
cltd
out
sub
push
ficoml
and
ja
pop
inc
fldcw
cmp
fstps
daa
es
in
loope
cs
aas
loope
cmpsl
or
lock
lods
rcrb
les
ja
xchg
test
in
sti
out
fdiv
mov
ljmp
cmp
or
dec
xchg
xchg
jbe
mov
stos
push
or
testl
dec
inc
cltd
jo
push
fildl
sti
mov
sbb
push
inc
mov
popa
insl
pop
or
mov
xor
mov
dec
or
fisubl
xchg
scas
mov
xchg
jne
xorb
mov
in
mov
mov
test
inc
sub
mov
mov
jno
sahf
shll
adc
mov
xlat
movsb
cmpsb
mov
mov
lods
aas
fwait
mov
or
movsl
jmp
out
mov
add
lods
fldenv
cmc
xor
and
push
cltd
jbe
jbe
enter
lret
stc
rcr
pop
sahf
xchg
xchg
and
inc
cmpsl
in
cli
sysret
mov
sub
cltd
stos
inc
mov
sbb
testl
iret
jle
sub
ljmp
cmp
push
add
push
mov
or
xor
mov
xchg
icebp
sti
ret
icebp
mov
out
fsubs
imull
sbb
imul
loop
inc
out
ret
xchg
int
es
popf
inc
je
mov
add
addr16
in
xor
int3
aas
cmp
jl
xchg
or
or
xchg
inc
mov
pop
insb
fistpl
in
pop
cmp
sub
popa
mov
hlt
pop
xchg
pop
ja
xor
fisttpl
test
les
ret
in
inc
test
inc
mov
dec
jb
mov
pop
pushw
and
jge
cwtl
nop
in
movsl
cmc
loope
ja
rolb
fwait
sbb
xor
mov
pop
rcrb
enter
cmpsb
divb
out
and
sahf
pop
je
aam
ljmp
cmp
int3
xor
pop
pop
sbbb
cwtl
mov
mov
cmp
inc
fwait
pop
inc
lock
test
ret
jae
in
lret
shrl
add
cltd
test
mov
pop
inc
orb
cmpsb
cld
add
push
sar
hlt
lahf
cmp
push
and
cld
sbb
add
jge
lret
aaa
mov
pop
lret
movsb
lods
int
mov
fbstp
pop
inc
mov
adc
test
mov
inc
mov
xchg
push
mov
push
gs
push
xor
pop
sbb
add
sub
cli
sahf
inc
xchg
push
rolb
out
rcrl
mov
test
stos
push
dec
pop
cmp
std
mov
daa
mov
ljmp
add
movl
movl
mov
mov
mov
mov
add
jmp
pop
sbb
dec
mov
or
and
movb
mov
bt
pushf
mov
adc
pop
lcall
adc
cmp
in
mov
sub
push
call
fldpi
popf
xlat
movsb
jae
shll
out
mov
sbb
je
sbb
sub
fs
lahf
xchg
daa
jbe
stos
mov
inc
or
push
loopne
movb
cmp
and
jb
lcall
fcoml
xchg
int
pop
push
mov
add
daa
loop
mov
sbb
cmpsl
jge
xchg
jo
or
mov
out
and
mov
adc
out
jle
sbb
cmp
cwtl
cmpb
cmp
push
inc
cmpsb
pop
xor
dec
clc
orl
test
jns
dec
mov
cmpsl
mov
in
fs
jmp
test
in
inc
push
daa
jne
mov
orl
pop
push
cmpsl
aas
sub
jno
daa
cmp
push
fbstp
fwait
lods
lock
mov
ret
jle
cmpsl
sahf
loop
add
lret
add
es
sub
int
pusha
in
and
les
mov
subb
push
cmp
xor
mov
push
and
icebp
pop
vpshaw
mov
sbb
insb
repnz
out
jnp
sbb
xchg
call
add
inc
stos
ror
or
cmp
popf
jne
pop
pushf
test
imul
cmp
push
jp
dec
push
push
pushf
cmp
dec
shlb
insb
adc
inc
arpl
pop
jbe
hlt
hlt
add
inc
adc
out
aas
in
mov
inc
sub
and
dec
push
jnp
dec
xchg
jbe
xchg
dec
push
xchg
add
out
cmp
loop
jg
outsl
pushf
scas
shrl
ja
fisttpll
jo
xor
lds
push
dec
testl
push
cld
repnz
inc
lods
popa
xor
add
mov
dec
jno
in
subb
push
mov
xor
cwtl
jne
repz
cltd
andl
sbb
popa
push
inc
mov
fidivrl
out
repz
addl
in
outsb
fwait
and
jmp
daa
push
jl
and
lret
enter
mov
push
add
sbb
popf
movsl
and
and
or
sbb
adc
sbb
jp
sahf
push
ds
xchg
pop
push
cld
and
pop
stc
out
clc
es
push
les
xor
mov
or
jmp
sarb
or
ret
mov
push
dec
stos
mov
mov
adc
clc
mov
add
outsl
pushf
mov
inc
push
sbb
pop
mov
add
push
or
inc
aam
lret
dec
stc
sbb
stc
sti
leave
cmpsb
cs
lret
notl
jbe
inc
in
shrb
cwtl
das
xchg
add
ja
adc
decl
sbb
das
jnp
ret
adc
or
enter
mov
stc
in
enter
push
call
rclb
enter
mov
insl
mov
les
inc
frndint
push
sahf
mov
xor
sbb
cmp
fsubs
icebp
push
add
push
jp
mov
mov
inc
scas
inc
pop
and
aam
mov
rcll
movsl
pop
scas
inc
pop
in
sbb
lock
xor
das
xlat
inc
fisttpl
dec
sbb
jle
lods
dec
jge
ss
or
test
shlb
push
push
hlt
jmp
mov
xor
push
adc
insl
icebp
repz
jae
pushf
lds
mov
loope
jp
lea
push
rcrl
cmp
out
sub
sbb
stc
pusha
xchg
cmp
xchg
imul
fdivrl
pop
bound
xlat
mov
shlb
lods
inc
test
add
jmp
out
movsb
adcb
fwait
into
lret
popf
mov
cmc
les
scas
cs
shlb
fs
cmc
mov
sbb
adc
pop
add
lcall
add
test
mov
das
cmp
xchg
mov
movsb
xor
and
jnp,pt
cmpsb
jmp
and
bound
dec
cmp
mov
sub
lcall
xchg
lds
fistpll
call
pusha
loopne
jbe
pusha
popf
arpl
mov
cli
inc
arpl
and
fdivrl
out
in
movsl
sub
inc
xchg
cmp
xor
dec
out
mov
fldt
clc
mov
xchg
insb
mov
adc
xchg
cmpsl
test
arpl
cmp
enter
xor
pop
mov
pop
inc
cmp
mov
repnz
test
xlat
inc
mov
jmp
test
jbe
mov
in
daa
orb
lock
lods
mov
out
sbb
mov
xchg
inc
in
sbb
lret
test
aaa
adc
or
add
arpl
and
fstp
pop
lahf
out
mov
insb
fistpll
cli
adc
notb
testb
adc
repnz
lea
in
xchg
jl
cvtpi2ps
fstp
inc
xor
int
ljmp
adc
pushf
xchg
jge
ja
sbb
jl
pushf
icebp
stc
mov
sbb
mov
lcall
int3
fwait
fwait
cmp
out
pusha
pushf
js
out
adc
xor
jle
mov
push
jae
add
xor
fs
mov
sub
dec
xchg
out
xlat
cmpsl
and
mov
mov
out
lods
repz
out
js
cmp
lret
sub
sbb
arpl
cmp
sbb
xchg
pop
sbb
or
fs
and
sbb
mov
fistpl
cs
dec
jmp
push
mov
subb
ficoml
out
adc
mov
bound
ret
aad
xchg
mov
rorl
dec
mov
stos
lahf
cmp
mov
or
ret
repz
add
fwait
push
aas
cmc
dec
sub
pop
and
push
lret
shr
addr16
sahf
outsb
rcr
mov
add
cmp
or
lods
loope
daa
lds
and
jmp
in
rcrl
test
mov
fdivl
sub
add
call
test
addr16
pop
jb
mov
outsl
cmp
dec
dec
movsl
add
ffree
sbb
mov
ret
sub
cmp
push
push
push
jbe
cmp
jbe
hlt
nop
ja
mov
add
icebp
in
inc
orl
mov
repnz
jmp
into
add
or
sbb
xchg
push
sbb
adc
and
inc
adc
repz
cmc
xchg
out
mov
js
test
sbb
pop
pop
negb
cwtl
lret
in
rcll
xchg
jno
jnp
pushf
pop
or
ret
sbb
loope
loope
fldenv
xchg
and
mov
test
cmp
mov
mov
mov
out
les
roll
xchg
leave
in
stos
push
xchg
lods
aad
jns
push
or
inc
and
hlt
sub
mov
xor
loop
dec
xchg
xor
or
adc
push
jns
loope
cmp
mov
sub
push
out
xor
das
loop
fisttpll
and
out
ficomps
sti
loop
cli
or
xchg
jl
adc
ret
inc
jg
js
adc
lds
push
mov
orps
push
dec
fcoml
xor
pop
jl
and
sbb
xor
sbb
xor
push
dec
add
add
xor
jne
fiaddl
rorb
sbb
out
in
rclb
xor
add
xchg
jns
xchg
mov
jp
push
cmpsl
and
mov
sbb
xor
adc
cmp
jne
addl
sbb
test
mov
cs
rorl
dec
mov
mov
cmp
jae
icebp
xchg
shlb
or
int3
jp
cltd
enter
inc
inc
outsl
loop
out
dec
mov
negb
sbb
jnp
repz
inc
mov
mov
shll
mov
mov
pop
out
test
clc
call
jge
push
and
cmp
sub
fisubs
mov
mov
or
nop
aaa
pop
push
mov
scas
inc
arpl
pop
test
jno
insl
add
aaa
push
shlb
mov
adc
aam
test
divl
or
movsb
in
cltd
cmc
jb
arpl
sub
sub
outsb
mov
xchg
cs
pushw
xor
xor
pop
rcrb
and
movsl
cmp
or
scas
adc
push
int
and
out
rcrl
test
outsb
std
int
jno
je
flds
sub
std
pop
xchg
aaa
sar
adc
outsb
lcall
cmpsb
insb
push
fwait
push
sub
sbb
cmpsb
repz
jo
inc
sbb
cltd
loope
adc
sti
das
dec
scas
sub
cmp
ficomps
jno
push
jle
jge
data16
push
call
sti
mov
stc
lods
mov
inc
or
fs
xchg
test
mov
icebp
rcrb
les
mov
or
cmp
or
adc
out
dec
cmp
xchg
push
aad
dec
adc
outsb
or
push
sbbl
fwait
sub
clc
in
xor
jne
mov
rcrl
sbb
pop
mov
jecxz
jp
popa
sbb
inc
add
lods
mov
cmp
repz
pop
jo
mov
xchg
inc
movsb
cmp
mov
jo
inc
stos
test
movsb
mov
cmpl
mov
fs
inc
pop
or
mov
rolb
cmp
movsb
fsub
jle
shll
or
lods
or
in
fcomps
adc
notb
xchg
gs
sub
inc
addl
aaa
pop
arpl
push
sbb
gs
idivb
dec
or
fisttpl
inc
fwait
and
jae
fimuls
push
in
pop
pop
inc
xor
es
cltd
into
adc
cmp
pushf
mov
aas
out
sub
cmp
icebp
add
ja
nop
lahf
cmpsl
pop
push
or
push
push
test
pop
push
push
xchg
call
pop
jns
pusha
aam
mov
imul
push
or
mov
mov
pop
dec
sahf
mov
jb
push
xchg
dec
pop
aaa
push
movsb
lret
fcoms
mov
add
dec
or
add
add
add
jp
jo
inc
call
repnz
add
cltd
or
pusha
push
loop
shll
outsb
push
sar
lcall
jno
leave
popf
pusha
or
sub
adc
push
call
je
add
loop
add
pop
add
rsqrtps
or
lcall
push
ljmp
out
adc
addr16
add
mov
cmp
jo
movsb
jno
sub
call
dec
fldcw
cwtl
inc
dec
pop
imul
xchg
sub
fisttps
xchg
push
inc
pop
xlat
mov
dec
xchg
push
or
or
jl
sti
or
dec
gs
fldenv
aad
stos
pop
in
xchg
push
jbe
pop
adc
fiadds
push
and
imul
and
in
imul
xlat
and
aad
xchg
dec
test
push
sbb
mov
cld
pop
adc
pop
std
icebp
in
cli
ss
enter
adc
cli
sbb
push
into
cmp
push
mov
and
mov
pop
call
lahf
jns
and
mov
arpl
mov
cmp
in
stos
push
jbe
data16
int
pop
addr16
sbb
fsubrl
stos
push
lods
lcall
mov
mov
ret
lds
loope
adc
imul
addl
or
daa
flds
stos
pop
in
imul
pop
pop
sub
inc
sub
jecxz
xor
jne
adcb
inc
lods
inc
xchg
in
or
cltd
std
inc
add
idivb
pop
cmp
mov
sub
shll
lods
sub
out
and
es
fcomip
clc
push
adc
add
push
xor
jno
pop
jle
cld
cmpsb
andnps
loopne
test
mov
xchg
aam
adc
test
xor
and
mov
push
jl
mov
imul
ljmp
cld
mov
call
shrl
stc
fistps
add
inc
imul
sbb
mov
stos
cli
mov
or
jbe
sbbb
test
inc
fnsave
or
add
ret
mov
cmp
jnp
mov
rcll
jo
dec
and
loop
out
sbb
scas
scas
sub
loopnew
jns
or
xor
mov
xchg
int3
sub
push
push
addr16
dec
lods
arpl
or
cs
pop
ret
cld
inc
pusha
xchg
pop
adc
ds
cmc
mov
iret
sbb
add
orl
or
daa
js
inc
pop
dec
dec
cmpb
loope
daa
popf
adc
pop
push
andl
dec
sub
jnp
cmp
add
and
sub
mov
sbb
mov
add
adc
or
mov
mov
mov
or
add
cltd
adc
cmp
jne
cmp
je
mov
mov
mov
mov
add
adc
or
or
add
adc
xor
xor
mov
sub
mov
sbb
mov
mov
mov
xor
cmp
jne
cmp
jmp
pop
cli
pop
sub
or
dec
pop
nop
push
dec
or
and
mov
bound
dec
bound
jns
pop
push
sub
push
test
loope
mov
setbe
pop
imul
cmpsb
mov
pop
ret
mov
jle
into
insb
ret
sub
dec
sbb
cmpsl
sbb
xchg
nop
repnz
out
adc
movsb
mov
sbb
xor
dec
imul
popf
bnd
or
out
ret
cmp
insb
lds
adc
xor
fstps
mov
ja
out
ss
jle
stos
mov
adc
fdiv
sbb
cld
xchg
lahf
aam
or
jbe
mov
dec
add
repnz
shlb
jne
aas
push
mov
jo
adc
cmp
ret
fidivrs
xor
pop
mov
cmp
mov
xchg
stc
outsl
push
adc
or
adc
lea
data16
aam
sar
ljmp
jmp
jl
xchg
push
add
dec
je
jg
dec
inc
xorl
rep
or
pop
add
out
adc
pop
jno
jne
test
sahf
sub
xor
mov
xchg
dec
xlat
or
cmp
sub
lock
cmp
aas
sti
fwait
aam
movsl
mov
subl
das
dec
loope
sub
mov
pop
adc
mov
mov
adc
in
add
push
cmp
adc
mov
lds
popa
ljmp
mov
neg
cltd
mov
inc
outsl
xor
dec
in
test
lock
pop
leave
cmpsb
sbb
scas
adc
xor
roll
std
ficoml
sarb
subl
jg
pop
and
scas
sbb
nop
clc
gs
pop
mov
negb
mov
xchg
add
sbb
push
popf
xchg
insl
addr16
scas
xchg
cmp
aam
dec
inc
xor
mov
pop
cmp
jns
pop
mov
mov
out
pop
inc
les
into
dec
out
decl
loopne
xor
ss
xchg
out
scas
popa
loopne
cs
inc
pop
jnp
popa
in
gs
xorb
mov
or
in
scas
pusha
aaa
pusha
shll
jo
into
movsb
pop
les
in
dec
rol
mov
xor
pop
dec
sahf
dec
mov
popa
adc
xchg
mov
sub
notb
push
inc
sub
cmp
push
jmp
call
test
test
pop
sub
mov
and
mov
popa
shl
outsl
or
push
mov
sbb
inc
pop
scas
sbb
sbb
fsubrl
jp
mov
ss
sbb
fimull
push
pop
jmp
push
mov
aad
aad
cmp
es
lds
pop
loope
cmp
xchg
push
stc
movsl
dec
jbe
cmc
das
fcmovbe
orb
pop
ss
leave
rolb
es
pop
mov
and
dec
aam
imul
lret
push
xchg
xchg
lret
repz
or
adc
push
sub
cmp
and
jnp
cwtl
ljmp
xor
scas
adc
xor
sub
mov
push
mov
adc
pusha
adc
xor
xlat
ljmp
sub
xchg
je
call
or
imul
xor
gs
ja
aaa
mov
ljmp
fmull
movsb
push
or
scas
push
in
push
cmpsb
sbb
rcrb
mov
cmpsb
into
inc
sbb
js
jns
dec
cmp
jae
mov
push
xor
fstl
lret
inc
mov
cmp
dec
adc
xor
aaa
cmp
push
mov
je
mov
fwait
adc
clc
fidivs
fistpl
movsl
lret
movsb
scas
jmp
dec
arpl
hlt
test
mov
adc
push
stos
push
gs
lock
mov
jg
mov
lcall
adc
rclb
std
add
scas
add
xchg
dec
and
lret
fwait
imull
sub
cmp
roll
lea
push
shl
add
mov
enter
pop
repz
pop
dec
sub
mov
imul
hlt
and
sbb
in
cmpb
add
stc
data16
cs
fcomip
iret
sub
wbinvd
sbb
hlt
aaa
fsub
cmpsb
les
hlt
out
dec
jns
cmc
jb
xorb
out
pop
push
lods
mov
adc
sub
daa
das
cmpsb
out
mov
push
loop
std
xor
xchg
mov
pop
aam
imul
nop
mov
pop
faddl
popf
aad
mov
adc
pop
mov
inc
pushf
and
cmp
mov
aad
dec
enter
push
sbb
sub
xchg
or
cs
roll
xchg
je
inc
xor
fisubrl
test
sub
mov
lret
mov
pop
hlt
adc
push
stos
movsl
sbbl
lods
xchg
jp
outsl
adc
sahf
xor
in
movsl
movsb
call
push
fidivl
dec
jl
dec
int3
push
test
adc
cmp
sahf
pushf
or
or
daa
mov
cld
data16
aad
aad
inc
pop
mov
sbb
cwtl
lret
cmp
jmp
outsb
inc
pop
loopne
js
cmp
push
inc
xor
add
lods
jbe
jbe
jnp
inc
dec
jge
adc
cmp
stos
bound
enter
push
int3
inc
cmp
or
xor
xchg
jno
test
out
push
imulb
sub
mov
push
pop
mov
sbb
mov
pop
jo
push
pushf
sub
aas
lret
push
in
or
addb
xchg
in
dec
push
pop
or
mov
cmpsb
or
adc
push
mov
sub
enter
mov
add
mov
xor
cmp
inc
imul
out
rcrb
jnp
dec
cmp
test
cmp
jle
stc
xchg
xchg
andl
sub
cmpsb
rclb
jnp
in
jge
imulb
push
push
pop
mov
add
sti
xchg
mov
mov
pop
push
cmp
add
add
or
xchg
jp
loop
addr16
mov
and
inc
mov
cli
sbb
shlb
sub
add
dec
push
mov
adc
aaa
push
jecxz
push
es
orl
push
mov
repnz
fsub
stc
and
mov
xlat
and
xchg
xchg
xchg
add
test
add
mov
add
imul
xor
mov
div
jmp
lret
pop
cmp
adc
enter
cmp
adc
and
inc
mov
cmp
test
dec
pop
int3
hlt
lret
mov
add
mov
jmp
scas
jnp
mov
fistps
push
data16
lods
xchg
xchg
dec
icebp
jmp
dec
aas
stos
sahf
xchg
dec
push
fsubrp
and
inc
mov
xlat
int3
mov
or
jle
mov
xchg
push
imul
leave
es
cmp
cmpsb
dec
pop
js
in
pop
jbe
xchg
xchg
test
stc
imul
addr16
dec
push
sbb
pop
lds
loop
push
jbe
mov
push
and
std
sbb
out
jb
ja
mov
cmp
cmp
dec
mov
mov
cmp
push
sbb
mov
rorl
sbb
mov
outsb
and
add
lcall
mov
pcmpgtd
jge
cmpsb
cmp
mov
mov
and
lret
loop
mov
mov
dec
in
or
loopne
mov
mov
push
es
dec
jnp
mov
jl
movsl
sub
in
repnz
xchg
dec
ljmp
sti
mov
movl
in
bnd
int3
push
add
into
stc
sub
sbb
mov
push
call
movsb
popa
les
add
les
push
pushf
sub
pop
and
xchg
repnz
xor
in
jno
xorb
mov
dec
nop
push
xor
stos
mov
adc
jo
mov
sub
sbb
pop
outsb
mov
cmpsl
jecxz
mov
fsub
sahf
jge
mov
insl
mov
or
sub
lcall
xor
lods
xchg
inc
pop
sub
lahf
addb
xor
adc
sbb
icebp
movsb
mov
add
xor
sub
out
lods
and
in
sub
xchg
xchg
imul
cmp
sbb
mov
aaa
sbb
push
pusha
loopne
xchg
mov
inc
mov
push
sbb
pop
shll
sub
mov
push
ss
rcl
insl
icebp
shrl
movsb
pop
dec
sbb
or
cmc
jb
loopne
out
jb
test
xchg
fstl
sub
xchg
sub
inc
sbb
mov
es
push
xchg
adc
or
pop
jge
ficoml
mov
filds
mov
inc
adc
xor
lea
add
dec
sub
mov
dec
dec
fcoml
test
push
mov
enter
push
xlat
cmp
aam
jmp
in
push
in
xchg
iret
clc
inc
rcrl
dec
roll
sub
xchg
in
lods
sub
daa
add
cs
push
lods
cmp
xor
cmp
pop
aad
test
sbb
pusha
rorl
cmp
daa
repnz
mov
cmp
popa
icebp
pushaw
cmpsb
xorl
jno
adc
nop
mov
cmp
pop
daa
mov
insl
cmc
jne
loopne
pop
dec
push
sub
xor
in
fistps
or
ret
sbb
iret
mov
jle
or
test
lds
dec
xor
in
add
push
ret
mov
pop
out
popf
repnz
lcall
jp
xor
mov
sbb
and
sbb
mov
loope
and
rorb
ja
cmp
sti
test
idiv
sarb
pop
lahf
iret
test
sti
cmc
adc
add
imul
ja
xchg
jb,pn
dec
push
enter
pushf
cmp
scas
pop
mov
pop
or
fxch
xchg
push
mov
imul
sub
mov
inc
mov
add
fisttpll
push
cmove
cmp
mov
out
lret
and
loop
mov
cmc
mov
xor
rcr
lcall
shll
add
fcomp
int
dec
out
test
out
repnz
jnp
mov
sub
mov
mov
gs
int
sbb
mov
sti
test
sti
mov
push
cmp
jmp
enter
and
aas
or
cmpsb
mov
lods
jne
pusha
mov
aaa
adc
inc
inc
cs
fsts
push
add
jns
xchg
inc
rol
xor
clc
pop
mov
pop
sahf
rorb
adc
lea
mov
dec
add
push
pop
push
mov
cmc
pop
dec
inc
xor
or
inc
popa
orl
adc
iret
mov
adc
fbstp
adc
add
pop
es
mov
jnp
out
negl
and
mov
hlt
push
and
push
out
sub
testl
stos
adc
fwait
je
pop
inc
dec
inc
or
push
movsl
sbb
mov
or
lods
lods
dec
xor
jmp
outsb
xor
in
dec
test
scas
mov
add
mov
loop
xchg
mov
adc
jmp
pop
stc
mov
pop
jnp
sub
in
icebp
and
ret
fwait
call
sub
loop
pop
xchg
andl
fcos
lds
outsb
int
mov
movsl
jb
adc
xchg
push
jmp
or
sahf
in
xchg
hlt
in
int
lret
outsb
lcall
loop
push
js
movsl
repnz
push
hlt
jno
lods
iret
cltd
nop
stc
sbb
fidivs
in
icebp
shl
lret
das
call
adc
add
pusha
das
add
mov
int
jae
sub
js
pop
inc
ret
adcl
bound
mov
je
jl
adcb
fwait
push
and
pop
outsl
or
pop
xchg
push
pop
pop
inc
cmp
test
push
jnp
add
mov
push
aam
jge
loope
sub
xchg
aas
scas
pop
insb
cmpsl
addr16
mov
subb
rclb
aas
jmp
and
mov
mov
testb
sub
sub
jle
popf
cmp
xchg
lds
lods
jne
jge
mov
negb
xchg
sub
in
add
sub
push
mov
clc
pop
lahf
cli
sub
push
std
pop
jnp
popf
mov
inc
data16
lret
fucomip
sbb
lret
adc
and
pop
bnd
jnp
mov
sub
nop
fadd
push
ljmp
stos
jns
test
test
call
pop
cltd
sahf
mov
mov
dec
pop
out
out
jns
dec
pop
add
daa
int
shrl
cli
call
out
out
dec
cmpsb
mov
cmc
shrl
outsl
add
pushf
xor
fs
mov
add
test
lcall
mov
cmp
js
inc
xor
inc
cmp
loop
lcall
nop
stos
jns
insl
adc
jp
and
mov
and
fsubp
stos
sti
cltd
ret
imul
testb
jmp
cmc
xchg
cmp
push
mov
adc
mov
adc
and
pop
jno
dec
into
push
inc
mov
jmp
jecxz
test
jg
fldenv
adc
cwtl
sub
int3
jle
mov
dec
rol
test
sbb
out
add
pop
test
xchg
cmc
add
and
cmp
adc
xchg
push
fucom
mov
dec
lcall
outsb
mov
fstp
jl
scas
pushw
insl
mov
leave
mov
cmp
sti
in
xchg
xchg
cmp
add
adc
cmp
lcall
jae
adc
mov
icebp
nop
mov
scas
add
xchg
ret
shr
in
jae
nop
dec
push
adc
jbe
scas
jmp
xchg
in
rcl
mov
leave
mov
mov
inc
hlt
xchg
adc
hlt
push
mov
pushf
cmp
cld
repz
dec
adc
cmpsb
stos
fiaddl
aad
cltd
push
dec
fisubs
push
mov
xchg
jl
push
mov
imul
aas
pushf
mov
add
int
mov
push
test
movb
dec
mov
dec
sub
cmc
out
movsb
dec
ret
xlat
or
pusha
lds
xchg
hlt
sti
sbb
adc
sahf
repz
or
add
ret
push
cmp
xor
jnp
je
push
jl
cmp
fwait
inc
sbb
dec
std
mov
jb
xor
push
inc
cli
cmp
bound
test
inc
dec
cltd
push
out
std
shll
fisttpll
out
and
xlat
insl
imul
repnz
add
fucomp
jae
into
mov
dec
or
sbb
sbbl
stos
les
adc
in
mov
xchg
out
iret
sbb
repnz
xchg
pop
pop
divl
in
mov
fwait
mov
rcrl
cmp
test
sbb
push
int3
adc
cmp
jg
movsl
popa
jae
add
jge
xor
add
sbb
sbb
xlat
fcomps
arpl
cmp
enter
xor
addr16
xlat
inc
push
pop
adc
jl
hlt
das
pop
pop
fidivrl
push
jno
mov
push
adc
movsb
xor
addr16
mov
add
or
lea
add
das
movsl
sbb
sub
jle
mov
jp
scas
filds
xchg
mov
fmuls
lret
fcmovb
lods
or
sbb
mov
mov
xchg
jne
in
sbb
dec
fstl
int3
outsb
std
icebp
adc
cmp
cmp
fdivrl
je
cmp
ret
leave
dec
cmp
or
jg
in
ljmp
mov
ja
icebp
add
imulb
cmpsl
test
dec
lret
int
dec
sahf
cmp
mov
lods
lds
add
imul
insb
xchg
lods
ljmp
push
xor
int3
sbb
lahf
mov
divb
popl
pop
inc
out
add
imul
adc
cmp
mov
aas
xor
add
fdivrl
gs
dec
mov
push
adc
xor
push
or
jns
inc
mov
pop
scas
in
call
out
mov
jecxz
lea
and
xchg
push
pop
mov
xchg
and
fs
in
pop
outsl
imul
icebp
lahf
hlt
jmp
or
lods
rcll
pop
mov
stc
sbb
fsts
aad
jmpw
out
out
jo
dec
scas
mov
mov
dec
jno
push
aam
mov
and
insl
movsl
inc
int
enter
sub
adc
sti
cmp
lds
lds
insb
push
ja
pop
mull
cmpsl
push
hlt
mov
movsl
pop
sar
pop
inc
add
push
pop
sbb
push
xchg
test
jnp
mov
sarb
int
add
aas
pop
mov
sarb
xchg
sbb
and
fisubrs
loopne
fsubp
mov
stc
pop
int
and
out
xor
xchg
imul
addr16
adc
push
je
xor
pop
ljmp
aaa
dec
push
outsb
xchg
mov
pop
cli
or
clc
xor
pusha
adc
in
aam
mov
push
inc
in
sbb
xor
stos
shll
mov
cmp
out
lret
cs
shlb
push
movsl
push
push
ljmp
or
sub
cmpsb
fiadds
es
mov
pop
inc
sti
sbbl
xchg
and
jns
lods
inc
imul
xlat
mov
je
cmp
mov
bound
in
mov
rcrl
add
lret
xor
dec
dec
out
or
push
adc
sar
mov
pop
add
jle
addr16
rorb
in
aad
pop
in
mov
jne
dec
mov
das
cmpsb
imul
pop
lds
add
sahf
mov
push
cmpsl
sbb
pusha
push
push
aas
lock
lret
jecxz
and
std
dec
push
out
jle
ss
loopne
xchg
ret
mov
and
pop
rclb
test
insl
adc
sti
xchg
lcall
xor
and
add
sarl
pusha
sub
pop
aas
test
dec
insb
mov
jle
mov
inc
push
or
cwtl
pop
xchg
adcl
in
adc
cvtps2pi
mov
loop
mov
or
scas
cmp
mov
mov
sub
sbb
dec
cmp
popl
cmpsl
cmp
fsts
es
mov
inc
imul
outsl
push
fcmovb
add
sbb
push
out
lcall
add
push
inc
repz
push
ja
pop
mov
xchg
mov
or
add
lret
dec
jp
mov
inc
sub
push
int3
int
cmp
xor
dec
pop
daa
xchg
in
xlat
jnp
repnz
out
cld
comiss
mov
push
xchg
push
xchg
mov
and
cld
clc
insl
xchg
cmp
push
cmp
rcll
lods
dec
sub
jne
and
mov
dec
rcll
xchg
insb
cmp
sti
sti
sbb
xchg
incl
mov
cmp
pop
in
aad
cmc
cmp
lahf
in
pop
cwtl
imul
pop
mov
mov
jo
enter
xchg
sbb
leave
js
pop
ret
xor
xchg
mov
push
scas
sbb
pop
in
les
and
lret
xor
cwtl
inc
in
cs
mov
daa
lahf
dec
aaa
push
cmpsb
pop
pop
lock
loop
xor
fisubrl
jbe
int3
roll
dec
xor
lret
jnp
cmpl
xchg
jns
mov
js
stos
dec
cmp
mov
adc
lret
jo
in
icebp
xor
push
push
xor
add
xor
mov
mov
sub
mov
and
div
mov
mov
and
sub
imul
add
jmp
scas
fldl
movsl
jl
stc
mov
pop
xor
pop
mov
por
sarl
pop
xchg
call
sti
rcrb
jo
or
mov
mov
leave
lea
jbe
lds
aaa
daa
sar
ljmp
jg
loopne
imul
jbe
nop
sub
sti
out
and
inc
push
addr16
in
dec
push
lock
mov
fidivs
push
repz
xchg
mov
mov
dec
les
mov
sarl
ljmp
adc
div
popf
ss
pop
dec
sub
mov
inc
ret
sbb
cwtl
sub
adc
loop
leave
mov
jnp,pn
ss
ljmp
sbb
jo
mov
add
mov
addr16
dec
dec
xchg
dec
pop
cltd
sub
scas
lcall
or
add
fnstenv
jae
bnd
jle
jp
add
and
ja
cs
add
mov
addl
arpl
pop
cwtl
or
add
and
divb
test
jmp
in
xor
loop
xlat
fbld
sbb
sub
push
sub
xor
rcrb
stc
divl
jp
mov
in
or
push
pop
or
icebp
loope
pop
push
lcall
jl
sbb
lods
push
test
xchg
ret
adc
pop
adc
add
pop
or
out
aam
pop
rorb
push
outsl
popa
repnz
inc
loopne
orl
push
push
push
fnstcw
movsb
mov
sub
and
pop
js
sub
inc
and
sbb
dec
lahf
xor
lods
pop
outsb
out
mov
lock
sub
sub
sub
rcrl
push
scas
test
aaa
pop
push
mov
ja
pop
xor
mov
arpl
into
in
adc
push
sbb
or
sub
xchg
scas
sub
test
outsl
pop
fbld
icebp
dec
pop
xchg
testl
or
push
js
pop
mov
push
jge
pushf
mov
inc
scas
push
dec
xchg
inc
lods
in
cmp
jg
dec
cwtl
call
push
dec
ljmp
adc
mov
sbb
nop
xchg
pop
xor
fcomps
push
xor
rcr
mov
not
lods
ja
jb
dec
incl
divl
movb
rorb
cwtl
adc
jbe
mov
xor
ret
sti
xchg
add
mov
mov
push
add
hlt
cmpl
mov
outsl
enter
fiaddl
pop
stc
int3
out
adc
popa
ds
dec
and
ljmp
mov
pop
popf
mov
jmp
mov
mov
or
in
lods
xchg
mov
les
sub
cmp
stos
jle
adc
inc
std
and
jmp
push
fldt
add
cmp
pop
adc
or
push
roll
sub
or
pop
or
pop
push
pop
fnsave
mov
inc
int3
imul
mov
nop
movsb
adc
test
xchg
dec
arpl
mov
cmp
imul
jne
in
nop
sub
push
push
dec
pop
cmpl
pop
into
jnp
inc
push
or
mov
fsubrl
mov
das
add
out
lods
dec
push
aaa
xchg
add
aam
pop
lret
mov
xor
adc
xchg
loop
clc
repnz
jns
scas
sub
sti
lods
cld
push
xlat
mov
clc
repz
js
xor
mov
xchg
clc
cltd
cmp
mov
lods
pop
gs
xchg
and
jl
xorb
mov
insl
cmp
and
sub
pop
mov
inc
mov
mov
out
aaa
lret
xchg
inc
and
pop
xchg
out
adc
add
dec
jnp
pusha
pcmpgtw
mov
js
mov
dec
rorl
dec
loopne
cmpl
jle
mov
cmpsb
bound
sbb
mov
mov
sbb
dec
inc
cmp
sahf
xor
nop
stc
cmpsl
mov
inc
rcr
hlt
sub
cwtl
add
fistpl
mov
adc
push
lock
or
imul
imul
dec
and
and
dec
mov
arpl
adc
pop
jb
add
fcomps
ret
adc
jns
xor
gs
iret
in
lahf
insb
jnp
pushf
jns
or
sbb
sub
ds
mov
inc
fmuls
sbb
pop
jne
push
mov
and
push
out
adc
faddl
roll
sahf
scas
mov
jg
loop
jp
inc
sahf
cltd
fisubrs
mov
adc
orl
xchg
inc
out
mov
fucom
icebp
andb
es
mov
or
cmpb
ljmp
aam
cld
mov
dec
enter
add
inc
and
arpl
in
mov
ljmp
cmp
movsl
aas
lret
push
fidivs
pop
xchg
ljmp
aas
loopne
inc
or
xor
cmp
adc
adc
mov
aam
mov
sbb
xchg
and
mov
lods
scas
pop
sarl
cld
fnstsw
fistl
in
fnop
in
mov
jecxz,pt
cmp
inc
xor
mov
test
inc
test
popf
dec
pop
and
push
test
dec
or
fisubrs
pop
in
test
mov
stc
push
out
pop
jle
loope
aaa
pushf
xlat
pop
test
mov
outsb
push
fstpl
push
push
aaa
imulb
pop
fisttpll
pusha
adc
out
mov
push
sbb
inc
adc
cmp
add
test
sbb
jne
xchg
fwait
repnz
in
pop
clc
jb
sbb
or
push
jno
sbb
cmpsl
stos
arpl
arpl
mov
test
push
and
int
mov
sub
loop
inc
sbb
int3
scas
jnp
sbb
cwtl
jmp
jns
imul
jge
in
push
repnz
repnz
xchg
test
xor
adc
jle
inc
pop
adc
addl
cmp
push
lcall
cmp
aaa
xchg
sub
add
jecxz
pop
mov
int3
or
test
add
inc
push
dec
xchg
test
mov
test
mov
push
shll
lret
sahf
loope
fwait
outsl
ret
pop
insb
idiv
pushf
jno
or
je
jmp
cmp
sbbl
sbb
xchg
dec
je
mov
xchg
je
adc
call
es
mov
sub
daa
testl
out
sbb
das
push
add
mov
jno
or
movsb
and
add
jmp
jne
add
subl
xchg
pop
inc
sub
addr16
and
ljmp
jne
jecxz
lret
movsb
pop
addr16
mov
mov
dec
mul
mov
icebp
jnp
sub
adc
and
scas
nop
fildll
fists
pop
enter
xor
dec
stc
sub
pop
lret
sbb
sub
std
popa
fwait
es
addb
les
repnz
nop
jecxz
pop
jecxz
orb
add
mov
fdivrl
dec
adc
push
mov
and
jbe
clc
insb
je,pn
rolb
ja
lods
sbb
pop
popa
xchg
andl
pop
cmp
sbb
sub
jne
cmp
cmp
pop
out
push
cmp
aaa
subb
xlat
imul
cltd
xor
inc
and
das
lock
pop
xor
pop
int3
push
aas
or
imul
enter
outsb
push
cs
stos
jle
repz
sbb
jge
adc
jnp
mov
sub
mov
jns
dec
stos
and
sub
jo
adc
arpl
mov
and
cmp
push
popa
sbb
pop
in
push
jbe
popf
dec
cmpsb
fcomi
jnp
mov
mov
repnz
lds
lcall
repz
dec
ficoms
mov
sub
js
mov
pushl
outsl
call
aam
push
insb
cmp
stos
fisttpll
movswl
inc
ja
daa
add
std
xor
pop
mov
pop
and
jmp
pop
pop
mov
xchg
pop
jl
mov
mov
out
pop
in
pop
push
cmp
cmpsb
jb
push
mov
jbe
jo
jle
inc
mov
andb
dec
push
jnp
lret
cmp
or
stc
imulb
dec
test
jne
movsl
dec
pop
push
fwait
aaa
pop
das
push
daa
jno
rcl
push
push
scas
mov
pop
mov
lcall
or
sub
push
lar
mov
jae
push
push
gs
jo
push
pop
pop
jno
js
lcall
pop
jns
gs
mov
movsl
shlb
aaa
cmp
and
popa
lods
and
test
lods
cmp
cwtl
incl
inc
inc
adc
sub
fldl
pop
add
pop
push
inc
jmp
push
pop
ficoml
insb
jo
push
enter
jnp
cmp
into
jae
sti
ret
cmp
push
xor
push
mov
adc
dec
mov
xor
test
stos
mov
and
mov
jae
pop
mov
enter
nop
cwtl
lret
jns
ret
jae
outsl
cld
inc
jae
push
xor
xchg
popa
jbe
and
in
outsb
mov
push
or
jge
jl
and
xchg
test
lret
sbb
jnp
mov
lods
cmp
pushf
inc
dec
sbb
sbb
movsb
sbbl
dec
call
mov
hlt
outsb
mov
push
inc
push
xchg
xchg
stos
test
aaa
sub
adc
insl
inc
shrl
aas
subl
add
cmp
sbb
rcrl
imul
into
add
jns
fs
jecxz
ja
push
dec
shrb
imull
xor
lret
pop
into
push
lcall
sub
mov
mov
aad
hlt
dec
sbb
xchg
pop
outsl
mov
hlt
mov
int3
or
and
mov
movsl
or
jecxz
pop
out
in
mov
inc
mov
sbb
dec
adc
mov
mov
iret
pop
xor
sbbl
dec
xor
pop
test
push
sub
test
roll
cmpsl
jge
popf
jmp
inc
pop
les
mov
jp
cmc
jb
xor
es
mov
inc
add
pop
es
pop
out
mov
int
and
adc
ja,pt
mov
and
aad
rclb
push
inc
jo
fimull
adc
loop
pop
cmc
and
lea
inc
into
jae
lahf
mov
repz
stc
pop
je
mov
add
ss
xor
mov
xchg
or
pop
add
mov
push
stos
js
addl
pop
popa
push
out
sub
inc
cmp
sbb
std
push
jns
push
dec
aaa
outsb
mov
hlt
mov
bound
fnstenv
xchg
mov
repnz
cwtl
imul
mov
jns
sub
push
iret
neg
lret
imul
das
mov
into
adc
cmp
out
bound
sub
pop
dec
mov
loop
out
test
push
inc
add
testl
mulps
pushf
flds
insl
push
mov
outsb
xor
push
das
gs
pop
adc
jo
sub
notl
mov
fsub
dec
and
ret
xlat
out
push
mov
push
iret
aaa
dec
jae
subl
mov
cmp
dec
add
adc
popl
jp
xchg
pusha
cmpsb
mov
mov
rolb
mov
dec
adc
fmul
push
or
or
sti
and
hlt
hlt
testb
loop
testb
push
sbb
sbb
clc
fstpl
sub
mov
fs
addr16
sti
test
push
mov
inc
repnz
lds
repz
ljmp
cmp
inc
mov
push
and
ret
dec
pop
lea
enter
sbb
shll
xchg
xor
out
sbb
ljmp
scas
or
lea
push
outsl
dec
pop
sar
lcall
shll
xchg
scas
leave
lds
sbb
rcrl
repnz
sbb
jae
std
test
andw
push
push
pop
sbb
int
call
testb
jbe
stos
aas
in
popf
lods
pop
sahf
or
push
scas
pop
fld
rclb
mov
xor
imul
stos
gs
push
lcall
insb
push
pop
out
icebp
sbb
arpl
xchg
in
mov
pop
mov
test
mov
cmp
dec
jl
les
out
shl
push
cmp
sbb
mov
fdivr
add
add
cmp
or
sbb
stc
xor
scas
gs
jl
jle
xor
pop
xchg
pop
mov
mov
inc
push
add
push
push
sbb
js
out
adc
cmp
fldcw
sbb
xor
push
push
pop
jmp
push
scas
andl
add
test
shl
call
adc
mov
dec
push
pusha
call
or
cmp
hlt
pop
jmp
test
add
incl
enter
add
jmp
nop
shrb
sub
addr16
sub
dec
cmp
js
adc
and
insb
jae
jne
mov
xchg
lock
fidivrl
cmp
sub
push
xchg
push
cli
jl
xor
repz
js
data16
xor
and
inc
fiaddl
push
sub
fisttpll
and
cmp
sti
leave
push
es
clc
hlt
out
sub
push
sbb
int3
push
testl
sbb
pop
add
testl
or
mov
popf
rcll
hlt
std
daa
xchg
add
mov
adc
adc
sbb
jae
shll
mov
insb
xchg
stos
jl
dec
aaa
int3
and
xor
mov
cmp
push
clc
mov
mov
test
inc
call
xor
and
ret
mov
js
jbe
test
stos
out
lahf
xchg
rcrb
and
or
divb
sub
xchg
repnz
cltd
cli
sub
jno
daa
es
scas
cmp
das
mov
mov
ljmp
xchg
jecxz
add
mov
out
inc
dec
movsl
add
adc
push
inc
sar
lock
sub
xor
hlt
push
and
add
aad
aad
fimull
fmul
ds
jle
sub
sbb
jns
mov
rcl
cmpl
out
or
jmp
sub
ja
lret
stc
push
scas
pop
ret
icebp
call
mov
test
divb
fisubl
push
outsl
or
xchg
mov
shr
mov
jl
lods
add
mov
stos
stc
or
mov
mov
mov
dec
mov
push
xchg
repz
fs
push
in
or
out
out
aam
adc
aas
pop
mov
or
jne
add
fisttps
test
ss
js
ja
fisubl
bound
fisubrs
repnz
ror
out
pop
and
std
es
out
jne
add
mov
xchg
push
shll
inc
int3
push
pop
add
repnz
adc
insl
sbb
in
or
add
jb
jb
pop
adc
repz
stos
lock
fiadds
xchg
inc
add
cli
fsts
jno
sbb
lea
sub
loope
sahf
adc
iret
jne
add
fsubr
mov
jl
jg
es
and
ljmp
inc
je
xchg
adc
mov
faddp
in
jmp
into
fcomip
xor
or
arpl
loop
fdivrl
jmp
mov
xchg
inc
loopne
lret
pusha
out
pop
lock
mov
adc
sub
inc
rolb
cs
jne
jmp
adc
imul
sbb
mov
or
ror
pop
outsl
sbb
cmpsb
test
push
sbb
into
mov
inc
mov
sub
mov
cmpsl
jecxz
out
pop
cmpsl
or
les
in
scas
or
loop
pop
xor
pop
push
push
repnz
mov
jns
xor
mov
sbb
aam
psubd
out
mov
jmp
jecxz
aad
fwait
jp
pushf
lret
xor
mov
xchg
mov
stos
mov
pushw
or
dec
jno
xchg
jae
push
xor
into
mov
sbb
daa
ret
pop
jb
lods
and
jge
test
loop
jb
cmp
lods
mov
xor
fisubs
push
mov
push
cmp
inc
sbb
cmpsl
test
xrelease
xor
push
pop
mov
sbb
adc
mov
xchg
call
xlat
out
popa
das
rcl
ljmp
dec
and
inc
sarl
imul
and
les
sbb
notb
sbb
push
repnz
enter
movsl
pop
dec
fnstenv
adc
mov
icebp
and
in
int3
xchg
inc
in
hlt
fs
ss
imul
leave
into
add
or
pop
je
test
divl
pop
inc
popf
xchg
xor
add
stos
cmp
xchg
lods
pop
aaa
xchg
mov
je
and
pop
cmpsb
mov
inc
xor
cmp
mov
sub
in
int3
rcll
les
xor
xor
testb
dec
cmp
push
int3
sbb
and
jb
bound
in
jae
sahf
in
js
mov
push
xchg
fisttps
cmc
lret
xor
test
fisttpl
iret
mov
out
test
pop
xchg
jbe
mov
xor
jg
xor
push
mov
popf
nop
push
mov
mov
movsb
insb
shl
ffreep
icebp
inc
int3
fs
pop
adc
cmpsl
scas
nop
sarb
movsl
sarb
cwtl
jecxz
lret
xor
loope
jle
scas
jb
std
xchg
or
les
mov
lret
adc
adc
xchg
inc
ds
div
add
jbe
sahf
inc
sbbl
and
sub
int3
jge
and
iret
rorb
and
push
mov
fnstenv
daa
mov
cltd
leave
into
or
cld
or
adc
loop
aam
lods
sub
cmp
popa
idivb
lret
stc
sarb
loop
pop
and
outsb
mov
jbe
repnz
inc
popf
je
sahf
iret
mov
sbb
lret
push
push
dec
jbe
lret
lahf
in
cli
dec
arpl
add
out
mov
pop
filds
push
cmp
fstl
cmp
cltd
repz
clc
sbb
or
sbb
dec
div
pushf
jnp
rcr
xor
jo
sub
or
addr16
outsb
decb
popa
out
lds
jnp
mov
divl
lods
mov
fnstcw
dec
xor
mov
pop
aam
mov
push
mov
cmp
jo
cld
jae
or
fdivp
pop
mov
jae
mov
stc
dec
jb
inc
or
aad
pop
in
push
outsl
sti
inc
jne
fidivrl
clc
mov
subb
imul
icebp
xchg
cmp
add
xchg
jecxz
adc
cmp
imul
xchg
iret
or
into
mov
cmp
push
std
aaa
fildll
pop
jmp
fsubl
outsl
outsb
jge
sahf
or
enter
push
push
adc
fists
dec
push
ss
addl
inc
add
cmp
or
xor
sbb
shrl
pop
test
adc
jle
xchg
pop
pop
cmpsb
cmp
lret
mov
jmp
aas
xorl
jge
pop
scas
aaa
dec
pop
and
mov
push
mov
sub
ja
mov
xor
or
xor
add
mov
add
mov
mov
mov
mov
xor
xor
add
adc
jmp
push
gs
pop
out
dec
push
push
add
mov
inc
mov
add
push
shll
sbb
cmpsl
hlt
fdivrl
sub
pmulhuw
pushf
cmp
sbb
adc
cmp
push
xor
pop
pop
and
and
add
daa
xchg
into
mov
jns
nop
jbe
mov
pop
cmpb
dec
sub
and
out
fldt
clc
pop
jno
aam
subb
mov
pop
shlb
call
inc
shlb
repnz
cmp
clc
mov
mov
push
testb
outsl
movntq
jl
and
jae
in
inc
xor
fists
imul
jno
or
das
out
rolb
les
test
aad
test
imul
stos
dec
sub
or
and
xchg
out
xor
pop
scas
lea
sahf
push
fdivs
repnz
mov
stc
mov
and
and
mov
and
xchg
divl
jg
pop
fistps
clc
out
aad
repnz
incl
push
movsb
mov
jno
jbe
gs
aad
jno
inc
push
divb
jnp
aad
mov
cltd
fldlg2
pop
decb
mov
shll
jmp
push
das
mov
es
fsts
jnp
fs
dec
mull
dec
pop
paddusb
lahf
xchg
adcl
push
push
cmpsl
ret
jl
lret
in
jge
sub
push
cmc
jb
ret
mov
es
sbb
lret
ss
and
in
lret
lock
sti
ret
jne
repz
push
int3
pop
cmc
mov
jbe
and
ljmp
movb
mov
xor
sbb
push
sbb
xor
pop
out
xchg
pop
pop
loopne
int
jmp
test
mov
mov
cmp
std
fcompp
cld
cmp
sub
repnz
mov
stos
aad
cmp
cmp
psllw
in
je
xchg
xchg
xor
test
sub
jne
insl
mov
fsubrp
scas
lret
shlb
push
inc
fwait
scas
sub
test
mov
fldenv
and
imul
pop
js
xor
inc
in
popf
loop
hlt
out
rolb
and
or
aaa
stc
aad
les
or
xor
roll
add
clc
popf
lcall
movsb
mov
into
xor
aam
pop
pop
inc
or
sbb
shr
cmp
adc
and
iret
push
call
jne
mov
jns
mov
fs
xchg
inc
adc
popa
lcall
inc
aaa
push
outsb
outsb
xor
pop
in
fstpt
sti
scas
xchg
int
test
mov
pop
ret
adc
test
sbbl
insl
ror
push
and
jnp
or
dec
movsl
cmp
adc
jns
mov
add
bswap
sub
jnp
jl
push
pop
data16
mov
nop
mov
std
test
stc
fisttpl
cmp
xor
sbb
pop
sub
call
cmp
cmp
cmp
aas
nop
or
mov
mov
pop
xchg
add
mov
mov
push
fistps
gs
fstl
cmp
dec
fists
lret
xchg
data16
push
xor
inc
aad
fldt
stos
les
nop
push
pop
push
iret
sbb
ds
sub
inc
fs
scas
andl
cltd
jno
xor
push
xor
add
mov
and
movsl
sbb
push
mov
arpl
js
and
fdivl
dec
repnz
data16
sbb
daa
and
pop
mov
ret
lds
dec
mov
mov
fmull
mov
in
pop
mov
negl
daa
stc
mov
mov
stos
stc
mov
out
jle
out
jp
mov
leave
jge
fisubrs
sub
jo
int
outsl
xor
icebp
inc
enter
jg
xor
and
nop
lcall
cli
scas
test
cmpb
xor
pop
repnz
daa
clc
test
and
ljmp
jnp
adc
add
ret
lret
sub
movb
insl
daa
sbb
xchg
jg
xor
cmp
sub
lahf
adc
sbb
mov
xor
shl
int3
test
imull
mov
ja
dec
jnp
dec
clc
aad
xchg
xor
ss
stos
jmp
arpl
dec
imull
fisubs
adc
xchg
jo
movsb
out
scas
and
popl
mov
xor
movw
inc
les
into
xchg
dec
push
push
and
iret
xor
dec
jne
add
pop
mov
lret
mov
push
bound
push
fstps
mov
data16
lcall
add
add
jns
jae
jo
imul
mov
lock
incl
xchg
jmp
int3
dec
ss
inc
fwait
mov
adc
loope
xor
bound
movsb
push
mov
or
pop
add
sahf
cmp
mov
jg
mov
inc
xor
fmulp
add
outsl
mov
int3
test
aas
test
sbb
fisttpl
ret
sub
fldz
or
fs
ljmp
fwait
push
ret
pop
and
jp
rolb
dec
mov
pop
and
in
fildl
ret
fnstcw
stos
push
hlt
xchg
adc
pop
es
cmp
repnz
ret
fildl
adc
fisttps
clc
mov
js
mov
hlt
lahf
ljmp
shll
repnz
dec
cmp
dec
rcr
adc
add
jae
add
dec
rolb
lods
dec
and
jp
cmp
cmp
inc
xchg
mov
loope
inc
jno
adc
loopne
outsl
bound
inc
adc
int3
test
mov
insb
mov
fsubl
scas
divl
cmp
push
pop
sar
outsl
out
or
fwait
mov
mov
push
lds
int3
movsb
sahf
xor
insb
nop
imul
xchg
in
into
imul
imul
test
pop
iret
in
pop
jp
inc
movsb
dec
popf
out
mov
xor
ja
lods
push
add
es
aaa
ds
and
xchg
pushf
icebp
xor
out
mov
inc
int3
mov
fists
pop
repnz
lods
jnp
rorb
enterw
cmp
push
and
mov
add
lds
push
xchg
cmc
or
test
dec
scas
sbb
loopne
fistps
cmpsb
xchg
mov
jmp
jmp
sbb
push
adc
xchg
int3
xchg
adc
and
jne
jmp
js
add
lahf
icebp
stc
pop
notb
sub
adc
mov
shrl
lock
and
pop
add
loope
inc
xchg
aaa
neg
dec
sbb
daa
and
cmpb
jne
xor
in
push
aam
lds
dec
or
sub
arpl
js
ja
pop
jl
pusha
pop
call
sub
add
fisubl
inc
lods
shl
and
cs
inc
cmp
adc
lahf
sti
dec
mov
mov
xchg
ljmp
int
iret
adc
and
notb
das
outsb
gs
das
pop
loope
dec
xor
les
xchg
sti
mov
loop
aam
aam
jno
test
mov
inc
push
fld1
sbb
push
cmpsb
push
call
repz
fninit
lds
ficoms
ss
pop
insl
gs
jp
rcrb
jne
inc
mov
mov
jmp
push
jb
ljmp
test
in
jns
je
ds
lods
jmp
imul
fmuls
insl
pop
shlb
mov
sbb
pop
mov
xor
xchg
push
lods
mov
dec
insl
inc
shlb
dec
mov
pop
jl
notb
sarl
push
orb
adc
stc
mov
dec
movsb
push
pop
push
cli
push
rcl
sbb
fdiv
lock
scas
dec
inc
in
test
inc
inc
fistl
add
test
in
nop
mov
les
or
pop
xchg
push
iret
xor
outsl
test
mov
mov
adc
stc
xor
and
shrl
jb
lods
fistpl
dec
pop
xor
aaa
gs
pop
cmp
or
mov
inc
ret
aas
adc
mov
adc
mov
shrl
adc
cmp
mov
xchg
adc
scas
lods
pop
flds
divl
xor
in
push
jg
xor
enter
movsl
xchg
shrl
and
popa
fadd
cmp
dec
cmc
push
shll
aam
push
and
or
jl
out
shrb
inc
cmp
pusha
stc
mov
mov
xor
stc
xor
insb
push
lock
dec
mov
or
das
lret
je
sub
icebp
mov
jmp
test
dec
movsl
adc
gs
mov
inc
fistl
int3
jo
inc
xchg
int
mov
xchg
rorl
insl
dec
inc
jge
inc
insl
inc
mov
mov
lods
test
pop
mov
popa
dec
imull
fcomps
mov
clc
fwait
clc
inc
and
leave
push
add
hlt
pop
dec
icebp
sbbl
mov
inc
pop
lahf
pop
mov
sahf
iret
cmp
and
out
data16
push
in
push
leave
lahf
aam
dec
stc
clc
adc
nop
pop
sub
and
dec
sub
les
js
or
shll
add
test
es
pusha
adc
push
lret
sbb
jle
fwait
in
or
inc
add
addb
clc
xor
cmpsl
je
cmpsb
aas
sub
cmc
inc
mov
xor
mov
pop
jp
mov
in
out
int3
or
ss
loope
hlt
inc
lret
icebp
int3
push
xor
aas
adc
pop
in
daa
cmpb
loop
pop
sub
or
daa
mov
out
add
out
scas
push
xor
test
ficompl
lret
adc
xor
pushf
repz
inc
test
daa
stc
and
sub
cmpsl
jns
and
add
mov
enter
outsb
les
jnp
adc
pop
dec
aas
and
cs
mov
adc
cmp
pusha
xor
sbb
sbb
lods
dec
lea
stc
inc
pop
push
cs
sahf
mov
incl
mov
jmp
rorl
lret
out
cmp
push
fmuls
sub
sub
xor
mov
iret
xchg
lock
das
enter
mulps
pop
in
loop
cmp
jb
mov
cmpsl
cmc
jb
cmpsb
adc
jmp
scas
movsb
cld
xlat
pushf
out
mov
mov
and
dec
push
or
lret
scas
or
jne
out
andl
rcl
cmp
and
mov
stos
inc
loop
push
das
addb
or
ja
pop
sbb
cli
cwtl
clc
cmp
pmaxsw
inc
sub
mov
jae
negl
out
and
lcall
test
icebp
ja
mov
and
mov
xorl
xchg
or
into
jmp
out
lcall
les
mov
sti
mov
jmp
shll
mov
loopew
push
xor
and
xor
or
jmp
inc
and
je
push
stc
shll
pop
test
jl
outsb
push
enter
and
add
out
jb
mov
mov
imul
xor
inc
inc
cmpsl
mov
inc
adc
or
in
add
xor
jl
stc
inc
mov
adc
addr16
call
inc
int3
cmc
push
in
test
xor
xchg
jmp
rcll
test
insl
aad
xor
lods
lock
repz
cmp
jg
cmpsb
pushl
out
lcall
sbb
out
std
sbb
fs
sub
int3
or
cmp
mov
mov
mov
and
sarb
mov
push
jecxz
fucom
inc
int3
xchg
dec
je
mov
inc
addl
or
sub
cli
xor
jb
loopne
push
pushf
fucomp
pop
popa
dec
jo
loope
out
jo
cwtl
lret
adc
sub
inc
adc
loope
dec
in
cmp
ret
mov
mov
xor
mov
and
xchg
mov
add
aad
mov
inc
imul
adc
dec
orl
fs
adc
loop
fwait
adc
and
mov
jecxz
negb
sub
scas
adc
clc
jo
mov
lcall
popa
aad
pushf
and
int3
test
mov
ret
imul
ss
js
cmp
sbb
lcall
push
push
mov
dec
add
shrb
sub
adc
leave
repnz
push
jg,pt
xor
int3
std
mov
ficoml
lret
int
push
mov
xchg
fisubs
stos
xor
dec
insb
hlt
dec
add
mov
mov
in
outsl
std
jl
inc
imul
inc
xchg
inc
dec
call
push
push
push
push
call
mov
add
adc
xor
cmp
jne
cmp
jne
mov
mov
imul
mov
or
sub
mov
lea
mov
pop
leave
ret
push
mov
sub
cmpl
jg
mov
add
jmp
pushl
call
push
jmp
addb
add
xchg
fs
xchg
jno
mov
je
inc
cmp
adc
lods
test
enter
mov
cmpsl
test
lods
nop
xchg
jp
jno
push
inc
in
cmp
cmp
mov
jb
icebp
jae
dec
sub
fcomps
and
mov
inc
jo
cmc
add
imul
mov
jmp
fildll
sbb
hlt
fcompl
in
dec
xchg
fnstsw
jb
jne
mov
loopne
pop
inc
addl
imul
cs
or
mov
hlt
insb
movsb
lret
jb
or
push
mov
inc
cmp
jns
dec
cmc
mov
repnz
inc
pop
cs
xchg
jae
out
scas
add
inc
flds
pop
adc
fiaddl
mov
cmp
push
into
mov
imul
adc
in
cmp
lahf
rorl
sti
mov
aam
dec
mov
stc
lret
cwtl
gs
or
cli
sub
enter
sub
mov
jns
or
or
cmp
pop
push
loopne
sbb
mov
inc
sbb
xchg
and
dec
pop
inc
pop
jns
xor
rol
mov
adc
stc
sti
ret
into
mov
xchg
and
jecxz
ds
jno
stos
insl
cmpsb
clc
fstl
enter
jb
or
movsb
and
sub
jnp
sbb
outsl
daa
das
cmp
or
aaa
and
cmp
fwait
aam
js
loopne
arpl
mov
imul
outsl
jmp
xchg
jno
gs
jo
sub
xchg
or
rorb
dec
mov
aas
pop
jae
fs
mov
jne
aaa
cmp
inc
cs
repz
cmp
sahf
push
push
jle
stc
push
ljmp
adc
ror
pop
orl
insb
sbb
sub
cmp
mov
or
add
dec
xor
jle
sahf
enter
aas
mov
sbb
daa
insb
jne
jo
push
pop
dec
sbb
into
ret
xchg
push
push
mov
sbb
dec
sub
rorb
xor
shl
cmp
push
push
rcll
xor
das
pop
cmp
cmp
into
and
inc
sbb
cltd
sbb
out
push
xchg
xchg
sub
rol
adc
mov
jnp
lahf
daa
scas
sbb
mov
fstps
pop
fisttpl
daa
fsubp
pop
adc
lret
loop
lcall
or
mov
int3
repz
fisttpll
jno
and
add
repz
cltd
adc
xor
loopne
add
jb
sbb
adc
mov
mov
xchg
push
scas
xchg
push
lock
daa
mov
mov
inc
mov
shlb
mov
and
lcall
or
jmp
jl
and
mov
and
inc
or
mov
pop
or
movnti
dec
push
daa
cld
bswap
int
popf
in
rcrl
out
outsl
mov
jg
xchg
xor
xchg
push
jge
mov
scas
inc
xor
mov
repz
mov
icebp
xchg
clc
jmp
fwait
jnp
xor
je
mov
call
jecxz
add
adc
cmp
test
and
int
mov
mov
jnp
adc
mov
sbb
movsl
dec
dec
mov
jmp
pop
push
ficoms
push
pop
xor
lret
mov
shll
jg
jl
sub
mov
je
mov
inc
pushf
jl
daa
cmpsb
xchg
test
shr
fdivrl
and
repnz
test
outsb
jecxz
or
push
pop
jecxz
adc
repnz
pop
insb
clc
fistl
mov
ds
pop
sarb
sub
inc
in
jnp
dec
mov
push
cmp
dec
cs
mov
into
adc
std
jle
sub
adcl
outsl
int
hlt
out
jae
hlt
imul
sub
push
mov
je
lds
rcrl
jae
sbb
fdivrs
mov
insb
rorb
jns
loop
push
inc
cmp
inc
pop
repnz
les
stos
mov
jge
bound
in
inc
stos
aas
jecxz
pusha
arpl
mov
lods
leave
sub
add
roll
sub
mov
int3
add
enter
int
or
jns
sbb
inc
pop
jnp
outsb
call
sub
mov
insb
lea
pop
rcrb
shlb
mov
rorl
fistpll
xchg
and
mov
dec
insb
or
nop
cmp
and
imull
adc
test
mov
pusha
xor
aaa
push
push
adc
sar
rcl
adc
push
int
adc
testb
insb
popf
push
jmp
je
adc
orl
loope
mov
out
das
scas
in
xchg
int
inc
sub
adcb
stos
mov
pushl
xor
pop
and
in
imul
pop
je
dec
pusha
fsub
cwtl
dec
mov
fwait
test
pop
pushf
negl
and
mov
jp
sub
ficoml
ret
adc
adc
adc
fcom
cmp
je
iret
pop
stos
imul
and
xchg
sbb
fildl
sbb
leave
jnp
stos
cwtl
outsl
mov
or
je
jp
pop
and
push
fucomp
pop
sahf
xor
sbb
je
cmp
sahf
mov
dec
pop
mov
jns
and
mov
test
mov
lods
dec
mov
inc
mov
stc
fmull
in
je
xchg
iret
test
dec
mov
xchg
pop
and
data16
sub
fdivl
or
mov
sbb
cwtl
repz
cmp
iret
aaa
push
fcomps
xor
ret
mov
popa
adc
in
add
pop
xor
dec
push
and
push
and
dec
outsb
pop
and
rclb
xor
xchg
mov
stos
mov
lcall
xor
push
xlat
and
cmp
dec
pop
mov
mov
fdivrl
inc
xchg
push
in
push
clc
inc
mov
loopne
cmp
xchg
cmc
pop
stc
ret
ljmp
sbb
fwait
xor
mov
cmp
mov
nop
repz
cmp
add
in
aam
cmpsl
sbb
adc
pop
popf
push
imul
mov
iret
insl
std
push
push
in
addr16
or
pop
out
ficoms
pop
pop
mov
cmc
cmp
inc
mov
pop
imul
aam
mov
loop
mov
sub
and
sahf
arpl
inc
add
push
mov
mov
cmpl
jge
movzbl
add
adc
jmp
push
push
push
pushl
call
shrd
jmp
outsb
fwait
push
movsl
or
movsb
js
in
js
jbe
jno
cmpsl
scas
ljmp
jg
mov
jle
orl
jo
add
jmp
mov
scas
cmp
shl
fs
in
add
mov
loop
sub
movsb
dec
dec
test
dec
and
flds
es
mov
pop
mov
mov
dec
in
fadds
sbb
cmp
insb
xchg
adc
mov
mov
lret
mov
xchg
lret
shrl
xor
neg
out
dec
xchg
arpl
inc
mov
pop
mov
xor
dec
adc
jno,pn
dec
sbb
mov
in
mov
popf
gs
ljmp
jge
or
fcmovb
popf
jmp
push
insl
insb
std
call
pop
outsb
xor
lods
pop
popf
xor
lret
pop
xor
sub
xchg
outsl
pop
outsl
and
mov
cmp
mov
jb
lcall
imul
test
out
push
loop
or
cmpsb
mov
jnp
jb
fwait
dec
shll
jbe
mov
xor
loop
in
js
fbstp
loop
fs
fbstp
cmp
aas
sbb
mov
push
jb
add
std
scas
jb
rcrb
leave
mov
mov
inc
out
or
or
mov
stos
mov
cmp
sbb
aas
test
push
mov
jne
je
inc
jns
adc
lods
test
incb
imul
mov
negb
add
gs
pushf
mov
or
addl
lods
jns
mov
repnz
cmp
popa
and
push
cwtl
loopne
loopne
loope
adc
imul
push
mov
or
xchg
test
mov
sbbb
ja
and
push
arpl
dec
cltd
loop
lcall
aad
push
fbstp
mov
lock
mov
jae
inc
push
jbe
jmp
push
sub
inc
outsl
ja
jnp
cmp
loopne
cmp
mov
add
fstl
test
scas
sbb
mov
jns
push
push
stos
and
inc
mov
out
mov
push
rcr
mov
iret
sub
out
aaa
sti
and
outsb
inc
je
cli
jno
mov
pop
adc
push
push
cmpsb
pop
pop
lods
add
adc
xor
in
repz
hlt
popa
pop
or
inc
popw
sub
ja
in
rorb
xor
and
mov
scas
jp
push
in
call
mov
and
push
mov
mov
mov
int3
dec
and
xchg
rorb
mov
jge
sub
mov
pop
inc
xchg
add
add
mov
jbe
and
clc
jae
lcall
sbb
enter
sbbl
jp
test
mov
ss
adc
in
andb
arpl
test
push
sbb
bound
ret
leave
iret
outsb
pop
mov
jnp
mov
push
ja
adc
mov
jp
sub
xor
inc
xchg
dec
scas
pop
movl
jne
leave
jecxz
dec
shl
mov
xor
mov
lock
inc
or
cmpsb
subl
pop
cli
sub
enter
cmp
pusha
jge
rol
imul
in
jl
int
lock
mov
inc
stos
sbb
adc
mov
loopne
aas
push
sbb
lahf
inc
dec
mov
lock
add
jbe
xchg
cmp
pop
mov
out
inc
xor
jns
idiv
dec
push
lods
fcomps
ficomps
rcl
dec
jecxz
fs
or
push
mov
sbb
adc
jecxz
jg
xor
mov
ljmp
mov
pusha
xor
pop
scas
push
xor
hlt
ljmp
std
out
out
scas
mov
sub
data16
fadd
nop
push
aaa
mov
jecxz
cmp
test
shrl
adc
mov
add
cmp
mov
push
jl
rcl
xlat
loope
jno
lea
mov
jno
xchg
jbe
fstpt
arpl
cmovg
add
fcoml
pop
sahf
jo
pop
ja
hlt
add
je
add
jmp
pop
jecxz
cmp
jne
sbb
lods
adc
mov
push
push
pop
mov
mov
add
ret
inc
lods
jle
dec
inc
push
fcmovbe
repnz
jb
push
sub
inc
mov
sbb
test
rol
and
fisttpll
fcoms
adc
pusha
loop
push
fsub
shlb
pop
test
mov
sahf
push
sti
jmp
stos
jae
aaa
push
aas
cmpsb
in
loope
dec
pop
shl
les
mov
daa
mov
cmp
sbb
movsb
adc
subb
mov
jmp
dec
xchg
movsb
sar
repz
lods
mov
loop
shll
adc
cli
gs
repnz
pmaddwd
out
es
mov
dec
loop
mov
mov
pushf
push
subl
pop
pop
aad
stos
xchg
and
push
fstpl
jg
mov
jge
adc
pop
mov
loopne
push
inc
mov
enter
pop
fistl
orb
dec
add
jne,pt
cmp
fdivl
mov
fs
mov
mulb
hlt
pop
or
movntps
xchg
lcall
inc
mov
fdivs
inc
cmovns
andb
pop
ds
je
jnp
sbb
rol
cwtl
imul
xor
aad
jae
andl
mov
sub
mov
jbe
mov
xchg
ja
jnp
cli
mov
mov
sahf
aad
push
mov
lret
xor
idiv
pop
mov
pop
push
scas
push
push
add
push
in
hlt
popf
arpl
or
sub
push
mov
movsb
jo
or
jb
mov
gs
repnz
cld
stc
adc
insl
xchg
lret
add
in
insl
mov
xchg
std
xor
pop
xchg
pop
lcall
sti
fildl
xor
lds
add
shll
pop
shrb
cmp
or
and
sbb
push
adc
jp
cmc
pop
jno
lret
or
out
aad
popf
xchg
in
xlat
jns
push
mov
jmp
sub
movsb
popa
fcoml
xorb
push
pop
mov
xchg
lret
lcall
pusha
and
imul
xor
add
in
xor
lahf
dec
or
push
rcl
in
sbb
mov
lea
leave
icebp
jae
adc
fucomip
mov
inc
or
stc
push
cmp
adcb
sub
sub
pop
ss
insb
scas
mov
and
sarl
xrelease
xchg
loopne
xchg
add
push
repz
push
ss
and
cwtl
inc
xchg
or
icebp
cli
sub
test
sub
jp
ret
vpsubsw
mov
mov
adc
xor
and
mov
sbb
xor
sbbl
or
mov
sub
mov
mov
subl
shl
mov
and
mov
mov
shrd
movl
xor
addl
shr
mov
mov
sbb
mov
mov
mov
mov
sub
sub
xor
decl
or
orl
jmp
cli
int
lahf
push
or
inc
cmpsb
ss
lret
push
mov
pop
sub
xor
xchg
bswap
mov
jns
pop
loope
pusha
js
mov
add
int
and
mov
pop
inc
adc
aam
xchg
addr16
lahf
xor
adc
xor
xchg
pop
jg
movsl
jbe
mov
dec
cld
push
push
call
mov
jp
je
push
jg
add
and
xchg
jo
enter
jg
push
sub
test
fimuls
cmp
xlat
mov
imul
cwtl
popa
add
pop
sub
sub
ds
pop
cmp
xor
mov
test
mov
mov
cwtl
lret
mov
push
pop
fistps
xchg
das
xlat
jne
sti
int
stos
cmpsb
dec
mov
imul
movsl
dec
jns
mov
cmpsl
mov
xabort
insl
adc
out
je
leave
mov
xchg
das
bound
stc
out
dec
in
xchg
ret
lock
arpl
nop
pushl
mov
mov
push
ret
add
or
pop
lret
insb
mov
repnz
in
and
sub
mov
cli
dec
xor
xchg
push
jmp
adcl
and
xchg
int3
add
int3
fs
sbb
sar
mov
imul
mov
sub
inc
sti
lods
adc
hlt
outsl
aas
inc
push
adc
inc
and
fst
and
mov
jae
fs
and
mov
push
mov
imul
adc
neg
sbb
arpl
or
shrl
sbb
in
adc
dec
sbb
ret
shrl
add
push
out
insb
shrb
xchg
xchg
js
out
outsb
roll
bound
dec
jno
push
js
xor
or
sbb
lcall
imul
pop
out
push
imul
lret
mov
jbe
mov
popf
cmp
in
cmp
stos
jg
sbb
les
pop
inc
pop
push
cli
lods
shll
cmc
push
fisubl
mov
or
ss
lods
pop
mov
enter
add
roll
push
mov
jb
sbb
jl
mov
data16
adc
sarl
or
pop
loope
or
xchg
dec
mov
bound
cmp
cmp
adcl
and
nop
cmp
add
clc
mov
cltd
xor
repnz
ffreep
or
cmp
mov
aaa
inc
mov
out
cs
stc
jno
sbb
add
mov
mov
fs
inc
pop
imul
gs
jmp
fs
jnp
std
not
leave
push
mov
enter
mov
cwtl
nop
push
inc
lea
cltd
push
leave
jecxz
dec
sbb
lods
flds
icebp
dec
adc
arpl
sub
push
jns
lock
insl
gs
mov
mov
aad
adc
gs
push
dec
rcrb
stos
mov
bound
add
test
das
inc
push
mov
adc
addr16
pop
jo
sub
in
fnstsw
insl
lret
out
push
jbe
hlt
movsl
bound
sbb
xchg
xor
inc
movsl
arpl
inc
sar
int
push
rcll
mov
ss
mov
scas
stos
xchg
push
cli
dec
scas
push
pushf
pop
sub
and
movsl
and
leave
push
jg
ret
add
xlat
jl
jmp
mov
lret
push
push
nop
nop
sub
mov
dec
and
loop
aas
mov
hlt
inc
jb
popf
leave
mov
mov
add
not
cmp
les
lods
jl
ss
jo
daa
mov
aad
xchg
mov
shlb
jno
fs
xor
jmp
add
lods
shll
cmp
pushf
mov
pop
jnp
sbbl
je
fiadds
or
iret
adc
xchg
je
push
pushf
daa
cmp
inc
lahf
or
xor
in
cmp
dec
clc
mov
in
push
pushl
sub
das
xor
mov
mov
or
xor
es
mov
pop
push
sub
pusha
mov
cmpsw
mov
out
ljmp
jge
push
pop
push
roll
out
adc
inc
push
jp
loop
add
jae
xorb
mov
scas
sub
fisttpl
stc
cmp
je
sbb
clc
insl
dec
xchg
xchg
dec
push
xlat
cmp
mov
loopne
lods
mov
movsb
imul
mov
jae
push
lods
bound
pop
mov
mov
test
push
mov
mov
push
mov
adc
ds
repnz
push
push
fadds
fcomps
mov
lock
hlt
sub
or
and
cltd
int3
mov
arpl
sbbl
out
inc
std
std
hlt
outsb
pop
jg
int
cmp
lock
jb
push
pushf
inc
fidivl
and
xor
and
into
push
cwtl
mov
test
xchg
lds
rclb
sbb
out
pop
test
movb
sarl
add
and
mov
add
int
cmp
xor
pop
lds
inc
fdivs
jmp
xchg
lods
cmp
ds
roll
fsubrp
mov
cwtl
push
iret
out
cmpsb
push
test
movsl
in
sbb
xorl
call
xor
or
ss
cs
sti
pop
xchg
mov
sarl
insb
ret
fcomp
jno
mov
xchg
and
add
or
bound
push
cs
adc
scas
and
push
mov
and
mov
ret
pop
mov
outsl
add
sbb
mov
test
fs
xor
push
popf
neg
test
and
out
mov
or
mov
cwtl
test
loopne
hlt
jae
cmc
xlat
ss
xchg
inc
mov
ljmp
popf
jge
dec
gs
dec
add
sbb
cmp
icebp
jp
pop
jns
xchg
test
cmpsl
pop
shl
mov
jno
xchg
mov
jg
dec
shlb
gs
sbb
fmulp
pop
mov
nop
cmp
cmp
outsl
mov
mov
jg
gs
mov
aas
cmp
lahf
inc
push
xor
jmp
xchg
adc
fsub
hlt
clc
jb
stos
inc
push
aas
out
loop
mov
lret
or
in
enter
aam
push
xchg
dec
xor
test
jb
ficomps
and
into
cltd
std
xchg
daa
jmp
mov
negb
inc
or
adcl
push
push
dec
adc
hlt
cli
inc
dec
popf
and
lret
cmc
mov
data16
mov
clc
lahf
or
mov
scas
mov
mov
ror
into
jp
rolb
fsub
imul
xor
stc
jb
mov
iret
sarb
je
mov
add
mov
xor
or
mov
adc
mov
jmp
movsb
dec
dec
jo
gs
adc
push
int3
xchg
push
movb
sldt
mov
sti
pushf
cmp
dec
pop
scas
lahf
pop
or
test
mov
mov
nop
adc
stc
shl
sarl
outsb
pop
sbb
mov
pop
pop
pushl
or
icebp
ja
jae
gs
push
aaa
das
inc
test
jle
inc
push
loope
mov
loop
subb
adc
jnp
ss
pop
xlat
dec
mov
icebp
mov
jmp
jns
outsl
mov
lock
sbb
sub
push
cli
sub
test
push
push
xor
in
adc
jae
dec
pop
pop
xchg
fstpl
push
mov
and
xchg
xor
push
loopne
out
mov
jno
mov
jne
or
lds
insb
addl
movsb
frstpm(287
add
mov
sub
inc
inc
mov
addr16
xchg
stos
es
sub
xor
dec
cmp
jae
mul
adc
stos
scas
lock
add
cmpsb
mov
bound
xchg
xchg
cmp
jnp
inc
cmp
repz
insb
loope
xchg
xchg
push
sbb
nopl
cmp
icebp
mov
push
jp
adc
add
sub
mov
clc
dec
add
leave
lret
sub
jge
lods
repz
xchg
mov
scas
jb
jae,pt
inc
sub
lcall
aad
jecxz
or
cmp
je
mul
leave
in
repnz
jae
push
call
pop
cmp
inc
xchg
lea
pop
scas
jge
icebp
popf
iret
gs
xchg
jmp
xchg
pop
mov
iret
adc
pop
sti
pushf
scas
repz
mov
aas
inc
sahf
call
cmpsb
adc
pop
mov
fmull
pop
jae
adc
fcos
cs
mov
mov
adc
leave
lret
popa
loop
pushf
lds
dec
imul
jne
and
xchg
sub
imul
xchg
jmp
push
xchg
stc
faddl
mov
dec
mov
aas
notb
stos
fildll
mov
pusha
pusha
push
cltd
mov
push
mov
push
xchg
push
xchg
dec
ds
js
stos
mov
nop
dec
mov
mov
ret
int3
cmp
push
arpl
sub
lret
cmc
js
scas
insb
dec
pop
fistl
xchg
insb
jbe
adc
mov
pop
shrl
jbe
mov
in
mov
cmp
mov
dec
mov
mov
push
cwtl
xchg
es
mov
mull
mov
inc
jmp
mov
out
dec
mov
push
ret
and
aaa
stos
out
sahf
bndldx
dec
jle
cmp
or
repz
fdiv
mov
mov
push
loope
test
pop
dec
outsb
addr16
ljmp
push
push
dec
sbb
pop
mov
scas
dec
lahf
mov
or
lret
sbbl
pop
mov
add
dec
xchg
jmp
out
jnp
fdiv
sbb
stc
sub
jae
mov
xor
or
pop
sahf
repnz
loopne
push
mov
push
imul
sbb
mov
jo
mov
test
addl
pushf
adc
mov
int3
ds
testb
jae
mov
loope
sub
dec
dec
jmp
fcoms
push
jecxz
dec
pop
loope
cmp
lds
sub
jl
xchg
repnz
rolb
sahf
pop
jecxz
outsl
shlb
push
ja
cmp
push
bound
stc
popa
push
fwait
aas
insl
xor
mov
addr16
inc
imul
mov
mov
hlt
outsl
add
popf
cmpsb
xor
sbb
ds
inc
fstps
jns
sarb
jne
and
in
addb
mov
adc
ja
dec
adc
cmp
xchg
sub
insb
push
clc
mov
and
add
test
jmp
pushf
lock
loope
jb
or
call
inc
iret
cmp
cmp
cmp
push
cmp
and
lods
pop
or
fsubs
inc
cmpsl
test
fimull
xor
aam
dec
fidivrs
adc
cmp
test
xor
push
xor
inc
and
enter
jle
adc
sarb
xor
lret
mov
ss
xchg
leave
cld
test
push
pop
sar
jle
mov
cmp
mov
ss
out
push
repnz
jbe
sti
or
pop
pop
sub
lret
mov
jo
outsl
fisubrl
inc
mov
mov
dec
inc
mov
sahf
dec
clc
insl
or
xor
jle
aaa
and
add
mov
mov
sbb
sub
insb
cli
cmp
jb
mov
daa
inc
jae
jnp
outsl
cmp
out
mov
ret
inc
sbb
add
aaa
popf
xor
dec
ror
sbb
mov
mov
in
add
mov
xorl
cmp
lea
inc
dec
sahf
test
movl
sbb
pop
insl
xchg
hlt
mov
jp
or
lods
mov
repnz
dec
jecxz
test
fs
cmc
cmc
push
jmp
sub
and
sbb
adc
mulb
or
adc
cmpsl
adc
xor
je
or
insl
aad
insl
mov
scas
lret
inc
test
fwait
sbb
lea
jns
push
sub
in
ret
sti
test
shlb
lods
push
pushf
hlt
push
lock
jo
rorl
movsb
pop
out
testb
inc
pop
clc
daa
loopne
fs
test
mov
in
xchg
cmp
cmpsl
sub
loopne
pop
jge
xchg
xor
loope
popf
inc
daa
cmp
hlt
pushw
adc
repnz
sbb
movsl
cmpsb
js
jo
fdivr
stc
xor
sbb
int3
push
mov
mov
cmovnp
ss
test
mov
or
sti
pushf
call
jns
sub
gs
push
inc
jl
scas
loopne
in
lahf
adc
cmp
xor
hlt
outsb
fsts
cld
xor
lock
imul
cmpl
iret
inc
loope
jns
mov
jo
repz
movsl
cmc
aam
cmpsl
adc
sti
add
mov
adcl
mov
lahf
inc
mov
aam
das
adc
or
mov
push
dec
scas
jb
jg
shlb
arpl
add
mov
sar
fmull
jl
add
loope
and
int
lds
mov
cmp
jge
mov
mov
and
cli
lret
fstpl
imul
mov
sbb
leave
ds
aaa
xor
ss
push
mov
push
mov
add
ret
sub
mov
mull
shll
sbb
or
pop
mov
fmuls
push
outsb
out
and
inc
jp
fmul
aam
cmp
mov
adc
mov
cmpl
jl
subl
jmp
pushl
pushl
call
mov
mov
mov
mov
mov
mov
shl
xor
shld
cmpl
jg
dec
jmp
pushl
call
shl
mov
xor
xor
movl
movl
movl
cmp
movl
jne
movl
cmp
je
subl
mov
mov
cmpl
jg
add
jmp
pushl
push
pushl
push
push
push
push
pushl
call
mov
mov
xor
shld
shl
xor
addl
xor
movl
cmp
movl
jne
cmp
je
mov
mov
shl
mov
xor
movl
shr
or
sbb
mov
cmpl
ja
and
jmp
push
push
pushl
call
mov
mov
mov
mov
mov
jmp
bound
clc
xchg
xor
xchg
outsl
inc
adc
addl
movl
jge
je
into
cmp
push
xor
sub
loope
leave
xor
xor
lock
add
xchg
shrl
mov
mov
xchg
and
push
call
add
fisttpl
xor
cmp
dec
loopne
mov
inc
sbb
test
dec
in
ror
pop
ja
loope
imul
clc
sbb
xchg
sahf
movsl
sub
dec
sahf
jmp
and
andb
sbb
arpl
jns
xchg
dec
imul
mov
xchg
out
mov
push
jb
xor
js
mov
xchg
iret
data16
mov
or
pop
jp
jmp
push
jbe
dec
std
outsb
xchg
clc
outsl
fwait
xchg
push
iret
ljmp
fisubs
or
popf
adc
dec
hlt
xchg
mov
xchg
xor
sub
clc
push
mov
cmpsb
dec
xor
jecxz
mov
and
pop
pop
sbb
adc
mov
xor
cltd
fisubrl
or
mov
pop
adc
test
add
fwait
jge
pop
adc
testb
out
bound
xor
mov
test
xor
loop
in
xchg
jnp
shrb
loop
cmp
rcl
sti
sub
fiadds
mov
mov
in
push
lcall
lods
xorb
pusha
int
sub
ljmp
pop
or
sti
repz
adc
mov
out
jo
mov
arpl
mov
add
ljmp
cmp
jne
test
aas
pop
lds
imull
push
push
jg
adcl
adc
lods
sbb
sub
lret
push
cmp
mov
fdivr
in
push
push
ret
pop
cmp
xchg
ret
mov
xchg
cmp
andb
popf
jae
pop
das
lret
push
aam
iret
sbb
adcl
stos
bound
in
out
cmp
adc
cmpsb
pop
cmpsl
mov
fwait
xor
leave
cli
or
sub
dec
fdivrl
out
jns
push
mov
push
pop
pop
jno
addr16
mov
sti
push
xchg
mov
add
jmp
in
cwtl
xchg
push
iret
add
mov
adc
mov
shrb
fs
xchg
dec
xor
add
lods
dec
fdiv
xchg
out
mov
add
sahf
cmc
or
mov
jge
add
push
jge
hlt
jns
out
je
lods
xchg
fdivs
add
rep
xchg
fsts
dec
jl
imul
insb
call
xchg
inc
mov
or
jmp
push
sub
adc
mov
enter
aas
aas
sub
jns
pop
fcomip
movsl
in
pop
std
rcl
int
sub
data16
int
out
cmp
incl
rcll
ds
jl
jecxz
pop
xor
push
dec
push
adc
ds
fmul
dec
adc
xor
pop
fstp
jnp
movsl
xchg
mov
sbb
add
push
or
xchg
repz
push
xchg
pop
ret
stos
fidivl
fdivr
mov
add
push
pusha
push
sbb
enter
into
mov
mov
ljmp
push
jle
xchg
mov
dec
mov
testb
inc
or
add
js
mov
out
jns
pop
sub
xor
mov
dec
sbb
push
xor
mov
sub
test
popf
push
cld
mov
push
nop
adcl
inc
adc
dec
xor
arpl
mov
outsl
cmp
or
lods
aam
mov
xchg
add
inc
xlat
rcr
imulb
pop
es
mov
out
lods
adc
adc
adc
mov
aam
mov
pop
add
xchg
ror
xchg
cwtl
and
push
popa
pop
dec
xchg
xor
mov
jl
cld
cmp
mov
jb
inc
test
mov
mov
cmp
cmp
adc
jmp
cmp
ret
sahf
jo
xchg
push
jno
push
or
pop
xchg
adc
in
test
ss
lods
iret
sub
pop
sbb
icebp
in
cmp
cld
std
dec
cld
jae
mov
and
mov
jle
divb
test
bound
xchg
aam
mov
js
or
jbe
inc
scas
ret
loop
mov
insb
cmp
and
in
test
stc
testl
xchg
repnz
cmp
sub
test
and
negl
lret
ret
push
xorl
push
adc
movsl
movl
jmp
add
fxtract
gs
cld
jge
and
subb
mov
xor
inc
outsl
and
inc
sbb
movsb
ljmp
jne
or
std
sub
add
lahf
sub
pop
pop
add
or
push
xchg
push
or
mov
push
xor
jnp
ljmp
adc
in
incl
gs
cmp
dec
andl
rcll
lea
aaa
divb
lds
out
ds
hlt
hlt
xchg
outsb
push
jge
jmp
cld
pop
add
pop
adc
das
mov
sbb
insl
push
cmp
aaa
scas
movsl
shr
je
dec
inc
clc
cs
xor
and
push
adc
mov
adc
div
faddl
add
andl
je
cld
sbb
loopne
mov
or
push
movsl
ffreep
xor
aam
lahf
fnstsw
mov
es
inc
insl
push
cmp
jbe
fisttps
stos
mov
adc
add
mov
popa
dec
in
mov
jno
pop
xchg
lods
cs
in
inc
andl
push
mov
outsl
cld
jne
mov
pop
pop
xchg
arpl
jnp
scas
inc
ja
mov
loop
into
in
andl
xor
movsl
cmp
aam
lock
bound
jnp
cmp
fildl
dec
faddl
mov
jle
mov
or
sti
push
hlt
fiadds
push
sub
jle
add
ds
pop
flds
pop
addr16
aad
push
out
pop
push
in
cmp
icebp
loop
push
jmp
nop
push
pop
mov
cli
xor
add
loop
dec
cmp
add
dec
in
push
loopne
jmp
and
mov
shl
push
int3
ljmp
loop
mov
xor
jo
push
leave
ret
mov
dec
mov
pushf
and
call
int
jae
mov
mov
xchg
ljmp
dec
mov
sbbb
sub
iret
xlat
xchg
std
add
sub
dec
or
add
mov
mov
xor
out
mov
mov
sahf
inc
pop
pop
push
loopne
out
cwtl
dec
aad
adc
ja
mov
lods
dec
mov
scas
cmp
lret
add
ret
push
negl
pop
xorl
sub
mov
add
mov
lea
mov
xor
mov
mov
mov
adc
jmp
fbld
and
inc
pop
into
xchg
xor
jno
push
ss
inc
repz
mov
push
mov
aaa
leave
pop
push
idivb
test
push
fcoml
fadd
movb
jg
push
cmc
pushf
dec
test
or
lret
adc
add
sahf
hlt
mov
mov
out
xor
pop
or
out
pop
fiaddl
lds
mov
sar
pop
sub
ljmp
mov
mov
xchg
adc
ja
cmp
xor
inc
push
pop
rcrl
addr16
jg
and
nop
aas
mov
mov
ret
and
and
inc
fnstsw
jne
xlat
insb
xchg
jnp
xor
imul
mov
and
or
testb
mov
jmp
sbb
jns
pop
js
popa
inc
movsl
cmc
cmp
xchg
out
fsubp
mov
ret
enter
inc
icebp
pop
sub
adc
and
in
sbb
sub
jo
mov
push
cmp
or
xor
loop
and
ss
mov
jns
dec
outsl
or
sbb
sahf
or
mov
lods
lock
cltd
jp
push
stc
mov
jl
jb
out
bound
je
lock
or
dec
fs
push
fmul
sbb
jne,pn
pop
jnp
pop
fwait
lods
test
pop
jmp
sub
xchg
inc
mov
test
out
inc
sarl
mov
adc
adc
bound
sbb
or
jle
lcall
pop
nop
and
sbb
cmp
pop
lret
cmp
mov
inc
cmp
mov
andb
and
xlat
rorl
mov
pop
fdivr
cltd
nop
test
dec
adc
add
adc
cs
mov
rorb
jg
in
sub
cltd
int3
push
lods
lods
sbb
imul
dec
and
mov
jmp
push
cltd
dec
xor
stos
imul
cmp
lahf
pushf
and
mov
in
arpl
cwtl
sub
cmpsb
push
setp
btr
mov
xor
shll
gs
cld
mov
mov
adc
shl
xor
in
ja
pop
xchg
call
push
cltd
push
mov
jbe
in
cmp
das
scas
mov
pop
xchg
popf
add
ss
and
pop
xor
das
cli
out
and
cmp
dec
fucomip
push
or
imul
sub
inc
inc
push
xchg
lret
aas
mov
mov
cmpsl
xor
pop
outsl
jae
push
inc
and
pop
fs
add
mov
push
jnp
dec
jb
xorb
sbb
dec
mov
mov
sub
pop
cwtl
in
fwait
loope
push
xchg
xor
in
jecxz
fucomip
dec
dec
xchg
testb
pop
roll
repz
in
pushf
mul
pop
mov
cmp
sub
lret
roll
rcll
cmp
adc
mov
jg
xor
xor
adc
iret
fidivl
mov
mov
mov
shll
fbld
int3
xchg
int3
dec
dec
mov
shlb
inc
cmp
xlat
rcll
lret
jmp
int
sbb
pusha
push
add
movsb
gs
mov
push
nop
and
rcrl
aas
gs
pop
les
push
jmp
les
fsubrl
in
js
das
sbb
movb
sarl
jns
icebp
dec
xchg
data16
ss
sbb
pop
push
lods
pop
inc
jecxz
jge
movsb
add
mov
mov
cmp
repz
push
stos
or
pop
and
shll
mov
add
addl
or
mov
stos
inc
sarb
hlt
in
mov
insb
fadds
ja
push
fimull
push
sub
lds
loopne
add
push
sub
in
imul
adc
mov
cwtl
mov
bound
addr16
psrlq
sub
push
shl
pop
dec
test
movsl
xchg
adc
mov
loop
rorb
mov
lcall
je
xchg
call
add
adc
in
pop
ror
sbb
or
push
mov
leave
loop
fildll
pushf
scas
sub
sbbb
hlt
and
sbb
lret
mov
xor
stos
fdivrs
movsl
sub
into
cld
jmp
rorb
xchg
jae
ja
xor
and
inc
pop
sar
sub
mov
cmp
gs
ss
stos
xor
dec
test
add
jb
popf
xor
out
insl
mov
fs
push
mov
mov
add
ret
mov
jno
sub
enter
or
aas
and
insb
aaa
mov
js
or
mov
lods
jns
mov
mov
enter
scas
sub
jnp
mov
dec
or
jo
stos
out
mov
ret
cmp
jl
inc
xor
sbb
fs
out
pop
push
cmp
mov
and
jne
dec
cmp
insl
sub
lcall
cmpsl
sub
xor
repnz
les
jle
pop
mov
push
cs
jnp
and
cmpsb
aam
sub
mov
cmp
or
add
rcll
cmp
mov
or
jnp
add
sbb
mov
cmp
xchg
imul
add
mov
push
aaa
sbb
inc
cli
xchg
mov
dec
pop
rol
mov
fcmove
push
cld
push
mov
xor
stos
out
mov
fistpll
xchg
cltd
dec
xchg
iret
outsb
outsb
fcmovbe
inc
hlt
mov
mov
fs
pop
jns
dec
mov
xchg
jmp
arpl
lret
repz
repnz
cmp
sbb
std
cltd
sahf
mov
divb
dec
mov
dec
ret
loope
inc
fsub
jp
adc
lea
sbb
mov
mov
iret
adc
popf
pop
mov
sahf
movsb
or
outsl
add
inc
stos
cs
xor
outsb
int3
call
mov
push
testb
jnp
aam
bts
aad
cmp
push
in
dec
repz
inc
pop
sbb
cwtl
popa
insb
idivl
nop
mov
jp
and
jae
mov
pop
sti
mov
jecxz
movsb
mov
push
cmp
outsb
mov
jl
in
add
xchg
dec
repnz
and
jle
das
or
sub
stos
jg
sub
popa
add
insb
mov
aam
mov
jae
loop
imul
sbb
inc
incb
ja
movsb
outsl
or
into
aam
enter
andb
jnp
adc
loopne
mov
lods
jno
pop
inc
push
mov
sub
and
into
test
out
mov
lock
dec
iret
pushf
sbb
out
inc
add
pop
add
xor
orl
shr
xorl
shl
adcl
or
movzbl
sbb
mov
mov
mov
and
movl
sub
mov
neg
mov
xor
shr
negl
shl
or
subl
push
lea
sbbl
push
lea
orl
push
call
and
mov
cmpl
jb
jmp
push
push
pushl
pushl
call
mov
xor
shr
shl
or
push
lea
push
mov
sub
mov
shrd
shr
cmpl
jg
xor
add
mov
sub
imul
jmp
push
push
push
call
mov
mov
movl
xor
addl
xor
or
andl
lea
push
shl
movl
call
mov
sbb
mov
sub
xor
shl
adc
shr
or
mov
sub
push
sub
lea
push
orl
mov
inc
mov
incl
shrd
shr
or
mov
mov
sbbl
xor
shl
xor
movl
or
adcl
lea
push
call
and
mov
or
mov
cmpl
jl
mov
and
xorl
jmp
pushl
call
xor
shl
shr
or
addl
jmp
xchg
adc
inc
adc
xchg
popa
aaa
repnz
cmp
adc
addl
sub
sti
nop
lods
pusha
and
inc
cmp
int
adc
xor
outsl
and
notb
push
mov
loop
jbe
std
push
incb
clc
sahf
imul
movb
pop
fldenv
loope
dec
sub
jns
jns,pt
jecxz
scas
bound
ja
and
dec
sbb
int
push
inc
xchg
mov
lock
mov
sub
in
and
ret
push
mov
xchg
cmp
mov
dec
fcoms
adc
jmp
inc
adc
int3
ja
adc
mov
jge
loop,pn
icebp
and
test
push
ljmp
add
repnz
in
test
lea
mov
lret
mov
out
into
pusha
jp
push
test
cmpb
aaa
jmp
testl
xchg
push
push
inc
sub
mov
popa
movsl
and
adc
fs
sub
mov
jns
xchg
push
sub
push
jb
add
and
loopne
or
stos
fs
mov
pushf
inc
pop
xchg
fsubs
stos
idivb
das
push
sti
ficoms
xchg
dec
cld
dec
leave
sbb
lds
scas
outsl
inc
sub
rol
call
jns
pop
stos
inc
dec
mov
jae
pop
xor
dec
std
or
push
pop
loopne
mov
jo
add
mov
adc
xchg
xor
es
call
xor
lods
mov
aad
push
jl
ljmp
ret
jnp
xchg
sbb
mov
cmc
dec
dec
add
mov
hlt
add
xchg
rclb
ss
dec
inc
dec
repnz
push
inc
insl
lock
and
pop
test
pop
lock
fistl
inc
inc
jae
sub
aam
aaa
pop
inc
jo
mov
pop
sub
mov
jnp
sub
cmp
clc
arpl
setae
jno
fldenv
in
ret
jl
mov
mov
adc
js
call
shlb
insl
mov
dec
testb
or
sbb
sarl
sub
add
xchg
fbld
add
cmp
mov
mov
test
push
mov
mov
pop
cmp
xlat
sub
mull
dec
adcl
pop
jbe
stos
clc
mov
sub
imul
mov
notb
lahf
nop
fildll
nop
xchg
mov
imull
lahf
mov
daa
stos
push
sub
push
and
popfw
mov
mov
dec
lret
push
push
mov
sbb
mov
adc
or
or
pop
cltd
aam
call
ljmp
mov
mov
adc
out
add
lods
ret
sbb
jl
ja
in
mov
daa
jnp
jno
lock
aaa
add
mov
nop
sbb
out
mov
sub
dec
pop
daa
push
rolb
shlb
nop
pop
and
cmpsb
int
jl
mov
mov
jne
jg
addl
jbe
dec
loope
into
cmp
dec
out
sub
mov
dec
frstor
movsb
push
and
mov
dec
pop
adc
mov
test
stos
xchg
adcb
pop
jle
cmp
mov
mov
inc
into
add
insl
jb
fsubrs
in
mov
imul
shll
adc
xchg
or
out
xchg
adc
dec
stos
xor
push
xchg
xor
sbb
idivb
aas
shrl
leave
dec
cwtl
daa
xchg
cmp
call
ret
in
fisubrl
pop
stos
pop
dec
mov
loop
dec
enter
loop
mov
xor
xchg
xchg
xchg
and
sti
je
call
sbbl
jne
daa
mov
mov
add
ret
inc
in
or
pop
jns
mov
fwait
jno
adc
fsubl
mov
out
fistpl
leave
in
add
jne
pop
repnz
out
decb
dec
adc
cmp
cmpsl
mov
add
int
mov
sub
mov
mov
and
ret
in
cmp
idivb
and
mov
adc
fbstp
mov
pop
jbe
mov
inc
adc
pop
hlt
insl
jns
lods
stos
mov
xchg
and
sbb
mov
fimuls
add
dec
jae
push
jl
clc
cld
loop
out
pop
dec
test
fstl
sbbl
cmp
ja
push
outsb
or
pushf
fdivrs
add
shl
inc
lea
or
jmp
add
xchg
inc
add
mov
adc
or
sahf
bound
mov
test
es
stos
xor
out
roll
scas
ret
push
mov
add
xor
sbb
sbb
mov
sbb
mov
daa
or
js
xchg
mov
arpl
fmull
sub
mov
mov
xchg
nop
mov
mov
xchg
pop
ja
sbbb
cmpsl
and
push
movsb
inc
stos
add
ret
mov
sarb
sahf
sub
mov
sbb
shll
iret
lret
loopne
popa
adc
lahf
mov
lods
sbb
pop
scas
xchg
clc
xlat
iret
out
add
dec
daa
pop
fdivs
test
jecxz
mov
or
test
mov
addr16
movsl
jle
push
add
pop
push
fs
pop
add
or
jg
mov
repz
adc
push
mov
pop
jle
daa
cmp
push
cmpsl
push
sbbl
cli
adc
lret
repnz
ret
ret
fidivrl
pop
mov
sub
lcall
jno
pop
out
cs
mov
jge
adc
mov
push
fisubs
rolb
out
mov
mov
js
cmp
leave
mov
sbb
push
sti
jne
pop
pushf
in
fcompl
push
je
ds
arpl
sub
or
mov
add
xchg
add
add
push
pop
jle
jae
cmpsb
in
sub
mov
xor
adc
movsb
push
pop
push
std
sub
orb
pop
mov
rolb
jb
xor
jne
adc
cmpsl
xchg
push
lret
out
mov
inc
movsb
les
xchg
sub
lds
scas
js
ret
add
jmp
mov
adc
pop
xchg
fcomi
lds
xor
in
inc
cld
lahf
clc
inc
add
mov
movsl
cmpsl
mov
jmp
nop
mov
ss
mov
ret
jns
aas
insb
out
push
outsb
xchg
pushf
inc
fs
scas
fwait
push
add
dec
test
rcr
push
lret
adc
pop
sti
mov
xchg
lcall
adc
mov
pop
and
inc
sahf
inc
jo,pt
dec
push
lea
sbb
push
adcl
mov
sub
mov
shrd
and
shr
mov
mov
adc
xor
xor
subl
or
shl
mov
sub
mov
movl
shrd
shr
adcl
mov
mov
xor
jmp
adc
sahf
dec
push
rcrl
dec
or
addl
aad
insl
jecxz
shlb
je
mov
push
mov
dec
into
dec
cli
sbb
fidivrs
sar
daa
add
add
dec
mov
inc
mov
fwait
mov
dec
lods
lea
lret
scas
add
out
popa
ret
fdivrs
ljmp
ja
inc
inc
adc
aaa
loope
das
call
lahf
out
sarb
mov
xor
mov
or
cltd
dec
mov
lahf
in
dec
pop
test
push
xchg
mov
paddd
push
imulb
push
lds
repz
mov
adc
sbb
sarl
test
nop
or
int3
cmp
arpl
clc
adc
dec
std
mov
adc
cmp
mov
arpl
xlat
mov
push
xor
or
jo
movlps
mov
push
or
bound
inc
cs
push
fnstenv
add
nop
xor
adc
jnp
adcb
lret
adc
sbb
push
push
jae
ja
or
pop
mov
sarl
arpl
fstpl
jbe
stos
test
dec
pop
stos
das
inc
inc
fdivrl
mov
xchg
cmp
cmp
fiaddl
mov
insb
imul
push
push
cmpsb
and
scas
mov
mov
or
cmp
cmp
push
add
adc
cmp
xchg
negb
lods
enter
cmp
mull
nop
aam
call
xchg
out
or
push
jecxz
push
mov
mov
jno
movsl
dec
sub
pop
mov
sub
std
xchg
outsl
and
adc
paddusb
roll
aas
test
xor
iret
xchg
imul
and
push
int3
repnz
sbb
xor
adc
jg
or
cmpsl
js
xchg
lcall
aad
and
xor
jg
or
jbe
outsl
sbb
in
nop
aaa
std
jns
les
inc
fisubl
test
cmpsb
xor
popf
adc
xchg
pop
hlt
orb
jns
js
cmp
pop
push
loop
push
repnz
dec
loop
xor
addr16
in
cmp
sbb
mov
arpl
mov
in
pop
mov
xchg
out
and
xor
dec
xchg
clc
out
adc
addl
imul
mov
pop
cs
adc
movsb
cld
pop
jmp
popf
or
jge
push
push
pop
sbb
xor
out
mov
xor
lds
out
mov
mov
data16
mov
loope
lds
out
loope
jg
mov
shll
imul
ficomps
dec
or
into
ljmp
mov
ret
jo
xchg
and
cwtl
mov
jp
cltd
push
or
sbb
in
mov
push
and
cmp
call
jge
sub
dec
aam
gs
pushf
jecxz
xchg
adcb
mov
pop
adc
outsb
mov
in
and
aam
jne
scas
aad
sub
mov
sub
out
mov
and
aaa
lods
hlt
push
or
mov
and
push
adc
xchg
and
popa
cmp
add
fadds
mov
fxch
and
xlat
loope
ss
sbb
pop
pusha
push
inc
xchg
mov
push
out
inc
lret
out
xchg
xor
loop
adc
cltd
mov
pop
sbb
xchg
jge
sbb
mov
xor
push
pop
push
pop
adc
mov
scas
cs
cld
or
mov
add
jb
or
jecxz
add
and
loope
inc
mov
jge
sub
mov
jle
lret
push
clc
shl
dec
mov
push
xor
and
sub
es
jae
push
jns
xor
nop
and
int3
jle
dec
push
cwtl
mov
gs
xchg
jmp
hlt
rcll
or
test
cmpsb
sarl
nop
push
mov
shll
pushl
mov
mov
enter
xor
ds
lods
lods
xor
mov
jb
jne
mov
fcmovu
or
int
insb
ja
les
dec
test
das
scas
loop
xchg
movsl
repnz
cmp
aas
lahf
sub
orb
ljmp
jmp
outsb
loop
pop
pavgw
jecxz
out
mov
push
xchg
cmp
and
lret
inc
iret
sbb
push
mov
aas
clc
adc
pop
repnz
sbb
gs
mov
add
xchg
jg
iret
movsb
sbb
inc
ret
push
aad
daa
pop
dec
and
sti
mov
mov
jle
mov
adc
xchg
xchg
push
mov
xchg
dec
dec
jns
enter
stos
mull
add
dec
pop
scas
fdivl
shll
mov
xchg
push
sbb
stos
mov
adc
xor
sti
loope
xor
sub
add
jp
mov
js
shr
subb
sbb
jno
xlat
sbb
xchg
adc
jmp
cmp
in
test
sbb
imul
mov
xchg
jle
jp
mov
shrb
fwait
adc
mov
addr16
popf
dec
adc
cmp
outsb
jns
cmp
inc
sahf
rcrl
cmp
xor
nop
dec
ret
adc
dec
in
jle
test
arpl
pop
lods
cli
inc
push
ret
sbb
xchg
mov
aam
mov
jbe
js
xor
in
xchg
fdivr
fimull
push
jbe
loope
ret
fadds
sub
arpl
mov
test
sbb
sti
jge
push
icebp
repz
jo
mov
lret
insl
jmp
cmpsl
mov
add
ds
lea
outsl
cmp
leave
mov
std
pop
and
pop
push
scas
add
sbb
repz
fiaddl
clc
sahf
jge
decb
es
addr16
mov
xchg
inc
ss
into
ret
sbb
xchg
insl
int3
andb
jp
mov
add
les
and
das
aam
clc
cmpsb
roll
cmpl
in
cld
hlt
dec
pop
cmpsl
jnp
inc
mov
aad
lahf
push
push
imul
cmp
nop
mov
dec
cmc
fists
pop
sub
addr16
popl
mov
and
push
lcall
loop
fnstsw
fsts
lock
xor
clc
mov
pop
mov
mov
hlt
xchg
leave
pop
xchg
ret
movsb
adc
mov
shll
stos
push
stc
enter
adc
idiv
int
ret
and
pop
xchg
xchg
les
mov
pop
jbe
out
bound
mov
add
pop
mov
cmp
lcall
repz
ja
pop
push
mov
xor
subl
or
add
lea
adcl
push
xorl
shl
call
mov
cmpl
jg
sub
and
jmp
pushl
push
call
mov
shl
xor
shr
or
push
lea
sub
push
cmpl
jg
xorl
jmp
push
pushl
pushl
push
push
push
call
mov
mov
shrd
shr
mov
mov
sub
xor
mov
adc
shl
mov
mov
mov
sbb
xor
or
mov
and
shrd
adcl
shr
adc
mov
mov
orl
xor
xor
andl
or
cmpl
jg
jmp
call
add
mov
shl
mov
shrd
shr
mov
adcl
mov
xor
xor
sbbl
or
notl
add
lea
push
shl
xorl
call
mov
xorl
mov
cmpl
jg
jmp
push
pushl
call
xor
shr
jmp
notl
notb
sub
cmp
adc
adc
prefetch
dec
push
jg
sbb
and
push
jmp
pop
hlt
cmpl
or
fldl
jno,pt
leave
cmp
pop
cmp
jo
add
vphsubdq
pop
mov
filds
lret
xchg
pop
xor
cmp
jo
push
jb
and
mov
fwait
stos
pusha
push
xchg
adc
mov
inc
mov
lods
mov
int3
mov
scas
shrl
dec
or
mov
xlat
dec
cli
mov
clc
sbb
out
inc
lret
in
jge
mov
in
and
das
nop
xchg
ret
std
or
push
test
add
push
push
mov
push
ret
pop
pusha
mov
jno
mov
sbb
pusha
ret
pop
ljmp
sub
mov
pushf
sbb
daa
push
cltd
pop
les
popa
mov
or
jle
jbe
roll
or
mov
mov
jp
mov
negb
dec
leave
movsl
inc
cmpb
lcall
mov
jo
mov
adc
es
subb
push
out
jo
movsb
xor
sub
imul
pop
mov
adc
or
inc
xor
mov
sbb
decb
push
mov
mov
sbb
pop
mov
or
dec
adc
mov
xor
enter
decl
call
cmp
add
xchg
add
add
adc
jmp
push
push
push
pushl
call
mov
mov
shrd
shr
mov
mov
addl
xor
neg
xor
or
push
sbb
mov
movzbl
and
mov
mov
push
orl
pushl
subl
shl
call
lea
xor
add
add
push
add
mov
mov
cmpl
jbe
adc
or
jmp
push
push
push
call
shrd
shr
mov
mov
xor
xor
or
addl
push
adc
mov
push
adcl
pushl
subl
shl
call
cmpl
jge
sbb
jmp
pushl
pushl
push
push
pushl
pushl
call
mov
mov
mov
mov
mov
mov
sbbl
mov
rol
mov
adcl
xor
movl
mov
movl
cmp
movl
je
or
movl
mov
movl
mov
mov
mov
mov
mov
mov
add
mov
mov
xor
shld
shl
xor
mov
xor
inc
xor
mov
mov
mov
movzwl
mov
cltd
idiv
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
imul
mov
and
mov
and
mov
imul
mov
sub
mov
cmp
ja
mov
mov
mov
shrd
shr
mov
xor
shl
mov
xor
or
mov
mov
mov
xor
xor
shrd
mov
shll
xorl
xor
or
mov
shr
or
xor
cmp
ja
jae
mov
mov
movb
movb
movb
movb
mov
movzbl
mov
xor
mov
imul
movzbl
xor
and
add
mov
movb
movb
mov
mov
and
or
imul
mov
cmp
ja
movb
movb
movb
mov
mov
and
or
add
mov
movzbl
cltd
movzbl
idiv
mov
movb
movb
movb
mov
mov
xor
sub
mov
movzbl
movzbl
cltd
idiv
mov
cmp
jb
mov
mov
shrd
shr
mov
mov
xor
xor
or
sub
shl
mov
mov
shrd
shr
mov
mov
xor
xor
shl
mov
or
ror
jmp
mov
mov
mov
mov
mov
shrd
shr
mov
mov
xor
xor
or
shl
add
mov
mov
mov
mov
xor
xor
shrd
mov
shll
xorl
xor
or
mov
shr
or
xor
cmp
jb
ja
cmp
jb
mov
decl
jne
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
add
push
lea
push
shl
call
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
push
push
mov
shl
mov
shrd
shr
mov
mov
xor
xor
or
add
push
shl
call
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
push
shl
call
mov
mov
shrd
shr
mov
mov
pop
xor
xor
pop
shl
or
pop
leave
ret
push
mov
sub
not
mov
cmpl
jb
jmp
push
call
mov
mov
sub
push
mov
mov
sbb
mov
adc
orl
orl
add
mov
mov
add
mov
cmpl
ja
sbb
inc
jmp
pushl
pushl
push
pushl
push
pushl
call
mov
sub
mov
sbb
mov
cmpl
ja
or
jmp
push
push
push
call
orl
orl
lea
mov
mov
mov
not
mov
sbbl
add
neg
mov
mov
adcl
mov
mov
neg
shrd
cmpl
ja
or
jmp
push
push
push
pushl
push
call
shr
mov
mov
xor
xor
or
cmpl
jb
jmp
pushl
push
push
pushl
pushl
call
mov
movl
movl
movl
movl
movl
movl
xor
movl
movl
mov
add
movl
movl
cmpl
jge
adcl
adcl
jmp
pushl
push
push
call
movl
movl
movl
movl
movl
dec
movl
sbbl
movl
movl
movl
cmpl
ja
xor
add
sub
mov
jmp
push
push
push
call
movl
movl
movl
mov
shl
mov
andl
push
addl
push
push
push
andl
call
xorl
mov
xorl
mov
mov
mov
add
xor
add
mov
mov
sub
sub
mov
sbb
lea
and
mov
cmpl
jg
jmp
pushl
pushl
push
call
mov
or
and
mov
or
xor
cmp
movl
jne
not
mov
mov
shrd
cmpl
jbe
adc
jmp
push
pushl
push
pushl
pushl
call
shr
mov
mov
shl
xor
xor
subl
or
mov
mov
cmp
movl
jne
mov
add
mov
neg
xor
xor
or
sbb
mov
cmpl
jbe
jmp
pushl
call
mov
mov
shrd
mov
mov
xor
shr
cmpl
jbe
xor
jmp
push
push
call
mov
xor
or
shl
sub
mov
andl
mov
mov
add
adc
mov
and
mov
adc
mov
shrd
negl
shr
sub
mov
mov
cmpl
jg
add
jmp
pushl
pushl
pushl
pushl
pushl
call
xor
shl
xor
or
mov
mov
subl
shrd
shr
neg
mov
cmpl
jbe
adcl
jmp
pushl
pushl
pushl
call
mov
mov
xor
xor
or
shl
incl
lea
mov
cmpl
jl
dec
jmp
pushl
call
mov
shrd
shr
mov
mov
mov
adc
xor
cmpl
jbe
and
jmp
call
mov
xor
or
shl
imul
mov
dec
mov
sbbl
shrd
mov
or
mov
xorl
xor
orl
shr
mov
mov
addl
xor
subl
or
shl
sub
mov
movl
cmp
mov
mov
jg
sbb
mov
cmpl
jb
jmp
pushl
push
call
mov
shrd
mov
mov
xor
shl
xor
or
shr
subl
mov
sub
mov
mov
adcl
mov
subl
shrd
adcl
shr
add
mov
cmpl
jg
sbb
jmp
pushl
push
call
mov
mov
xor
xor
or
shl
orl
imul
addl
sub
jmp
mov
or
mov
mov
cmpl
jl
or
jmp
push
pushl
call
mov
shrd
mov
mov
xor
shl
addl
xor
adcl
or
andl
shr
cmpl
jg
jmp
pushl
push
push
push
call
mov
mov
mov
mov
shrd
shr
mov
cmpl
jg
mov
adc
or
jmp
push
pushl
pushl
pushl
pushl
push
call
mov
mov
xor
xor
or
shl
mov
mov
adc
add
add
xor
xor
adc
mov
mov
xor
add
adc
shrd
or
shr
movzbl
adc
mov
mov
xor
sbbl
shl
xor
movzbl
adc
or
neg
mov
add
movl
mov
mov
sub
imul
mov
cmpl
ja
or
jmp
push
pushl
pushl
pushl
call
mov
movl
mov
movl
mov
movl
adc
mov
xor
mov
cmpl
jbe
jmp
push
push
push
pushl
call
mov
shrd
shr
mov
mov
xor
shl
adcl
xor
or
movzwl
sbb
mov
lea
cmpl
jbe
and
jmp
pushl
push
pushl
pushl
call
mov
mov
mov
shrd
shr
mov
adcl
mov
subl
shl
adc
mov
xor
xor
sbbl
or
sbb
mov
or
mov
xor
cmpl
jl
jmp
push
push
push
call
mov
mov
shrd
shr
mov
mov
xor
shl
xor
adc
or
adcl
lea
mov
or
mov
cmpl
ja
add
jmp
pushl
pushl
push
call
mov
mov
shrd
shr
mov
mov
subl
shl
and
mov
xor
adcl
xor
xorl
or
cmpl
jle
inc
decl
jmp
push
call
mov
mov
or
mov
mov
shrd
notl
shr
mov
sub
mov
xor
addl
shl
addl
xor
sbb
or
lea
mov
mov
addl
mov
shrd
shr
xor
add
mov
sub
xor
mov
mov
addl
xor
shl
adc
mov
xor
addl
or
mov
sbb
mov
or
add
cmpl
jle
sub
negl
jmp
push
push
call
mov
mov
shrd
shr
mov
cmpl
jge
neg
jmp
pushl
push
push
call
mov
xor
xor
or
lea
mov
cmpl
jge
jmp
push
push
push
pushl
push
push
push
pushl
push
pushl
push
push
push
pushl
call
mov
shl
mov
shrd
shr
mov
mov
addl
xor
orl
xor
subl
or
xor
mov
shl
incl
mov
adcl
mov
orl
mov
addl
or
xor
mov
mov
andl
shrd
shl
sbbl
shr
mov
mov
or
xor
mov
xor
orl
or
mov
dec
orl
not
xorl
and
xor
or
xor
mov
xor
and
mov
cmpl
ja
sub
jmp
push
push
push
call
mov
xor
or
mov
mov
shrd
shr
mov
sbb
mov
mov
adc
mov
mov
xor
xor
xor
adc
mov
addl
xor
andl
shl
subl
mov
addl
or
mov
mov
cmp
je
xorl
mov
xor
add
mov
sub
and
sub
cmpl
ja
add
jmp
pushl
push
pushl
push
push
push
call
mov
mov
mov
shl
xor
mov
mov
mov
subl
xor
adcl
xor
sbbl
shrd
shr
xorl
or
xor
or
mov
mov
mov
mov
xor
shl
xor
mov
mov
mov
mov
xor
xor
shrd
or
shr
mov
mov
or
mov
cmp
jne
cmp
je
jmp
mov
mov
mov
shl
xor
mov
mov
mov
xor
xor
shrd
xor
or
mov
mov
mov
mov
xor
shr
or
mov
mov
shl
xor
mov
mov
xor
mov
mov
xor
shrd
or
shr
mov
mov
or
mov
mov
mov
cmp
jne
mov
cmp
je
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
shrd
mov
mov
xor
shr
mov
xor
shl
or
mov
mov
mov
xor
shld
xor
mov
mov
shl
mov
mov
xor
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
mov
mov
xor
shl
mov
mov
xor
mov
mov
xor
xor
shrd
or
shr
mov
mov
or
mov
mov
push
pushl
push
push
call
mov
mov
shrd
shr
shr
xor
push
xor
mov
mov
mov
push
push
push
call
shld
mov
xor
or
mov
mov
shl
or
xor
xor
xor
xor
mov
mov
jmp
mov
add
mov
mov
mov
mov
mov
mov
movzwl
cltd
shld
xor
mov
mov
shl
mov
mov
xor
mov
cmp
jne
mov
cmp
jne
movl
mov
movl
mov
movl
mov
movl
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
add
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
xor
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
add
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
or
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
shl
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
add
mov
mov
shrd
xor
shr
mov
mov
shl
mov
xor
or
mov
add
shrd
xor
shr
mov
mov
xor
or
mov
or
mov
mov
shl
shl
mov
mov
xor
xor
mov
mov
xor
shrd
shr
or
xor
or
mov
mov
mov
mov
xor
shl
xor
mov
mov
mov
mov
xor
xor
shrd
or
shr
mov
mov
or
mov
cmp
jne
cmp
jne
jmp
mov
mov
mov
mov
mov
xor
shl
mov
mov
xor
mov
mov
xor
xor
shrd
or
shr
mov
mov
or
mov
mov
push
pushl
push
push
call
mov
mov
shrd
shr
shr
xor
push
xor
mov
mov
mov
push
push
push
call
shld
shl
mov
or
xor
or
xor
xor
mov
mov
mov
mov
mov
mov
shl
xor
mov
mov
mov
xor
xor
shrd
shr
or
xor
or
mov
mov
mov
mov
xor
shl
mov
mov
xor
mov
mov
xor
xor
mov
shrd
or
shr
or
cmp
jne
cmp
je
pushl
pushl
pushl
push
push
call
pop
leave
ret
push
mov
sub
push
movl
movl
movl
push
movl
mov
mov
push
push
push
call
mov
mov
or
or
add
adc
push
push
push
push
call
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
imul
mov
mov
xor
mov
mov
xor
mov
mov
and
xor
mov
sub
mov
sub
mov
imul
sub
mov
movl
movl
mov
mov
or
mov
imul
mov
movl
movl
movl
mov
mov
or
xor
div
mov
mov
sub
mov
xor
div
mov
xor
pop
mov
movl
movl
movl
mov
mov
sub
mov
div
mov
or
mov
sub
mov
mov
movl
movl
mov
mov
xor
lea
xor
leave
ret
push
mov
sub
push
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
xor
mov
div
mov
mov
mov
xor
mov
xor
mov
mov
or
lea
mov
xor
mov
and
xor
mov
div
mov
xor
sub
mov
sub
add
mov
mov
and
xor
div
mov
mov
imul
sub
add
cmp
ja
push
movl
movl
movl
mov
mov
add
xor
div
mov
mov
imul
imul
lea
mov
mov
mov
mov
mov
mov
mov
mov
xor
imul
lea
mov
mov
or
lea
mov
xor
mov
and
xor
mov
div
mov
mov
sub
mov
sub
add
mov
mov
and
xor
div
mov
imul
sub
add
cmp
jbe
pop
pop
pop
leave
ret
push
mov
sub
push
xor
xor
mov
sub
xor
push
push
movl
movl
mov
and
movl
movl
mov
mov
and
sbbl
mov
xor
inc
and
and
add
cmpl
jle
xor
sub
jmp
pushl
call
xor
mov
movl
movl
mov
cmpl
jb
xor
jmp
pushl
call
xor
sub
mov
imul
xor
mov
movzbl
sub
mov
div
mov
xor
or
sub
xor
sub
mov
cmpl
jl
sbb
jmp
push
pushl
pushl
call
movl
movl
movl
movl
movl
movl
sbbl
mov
xor
or
adc
mov
sub
imul
xor
add
mov
sub
or
add
or
and
cmpl
jge
xor
xor
mov
and
and
jmp
push
call
sub
mov
sub
add
mov
mov
orl
sub
or
add
cmpl
jg
mov
sbb
mov
adc
jmp
pushl
call
mov
xor
div
xor
mov
xorl
sub
mov
andl
add
sbbl
mov
movl
movl
not
movl
or
mov
sbb
xor
and
add
add
mov
xorl
xor
subl
div
and
mov
or
sub
cmpl
jl
jmp
push
push
push
push
call
mov
movl
movl
movl
movl
mov
mov
orl
xor
cmpl
ja
jmp
pushl
pushl
push
pushl
push
pushl
call
xor
push
pop
div
mov
xor
div
mov
or
cmpl
jle
or
jmp
pushl
push
push
push
push
call
sub
mov
movl
mov
mov
xor
sbbl
div
cmpl
jg
jmp
push
push
call
imul
xor
xor
imul
xor
mov
movl
movl
movl
mov
and
mov
orl
xor
adcl
div
mov
imul
add
xor
and
mov
sbbl
sub
mov
sbbl
movl
mov
mov
sbb
and
xor
and
sub
or
cmpl
ja
jmp
push
pushl
call
xor
mov
movl
movl
movl
mov
and
or
add
xor
add
or
andl
or
dec
sub
cmpl
jg
inc
mov
sub
jmp
pushl
call
mov
movl
movl
movl
and
mov
shr
sub
cmpl
ja
mov
and
jmp
push
push
call
xor
mov
lea
push
call
mov
or
or
mov
add
or
add
and
lea
adc
mov
and
movl
movl
movzwl
adc
movl
sub
movl
mov
sbb
mov
movl
subl
movl
movl
mov
mov
sub
imul
movl
mov
orl
mov
and
sub
mov
lea
adc
mov
mov
cmpl
jbe
sub
adc
jmp
push
push
pushl
pushl
call
mov
mov
imul
and
imul
or
mov
lea
mov
movzbl
xor
movl
movl
movl
and
movl
or
mov
mov
mov
sub
or
mov
mov
andl
xor
xorl
xor
adcl
mov
subl
call
xor
or
or
mov
mov
mov
mov
cmpl
jle
xorl
jmp
pushl
pushl
push
call
mov
xor
xor
mov
call
or
cmpl
jle
jmp
push
push
pushl
call
or
mov
mov
xor
xor
mov
call
or
mov
cmpl
jb
jmp
push
call
mov
mov
mov
xor
xor
mov
mov
addl
mov
mov
mov
andl
call
mov
adcl
or
mov
or
subl
push
adcl
push
andl
push
addl
push
addl
call
mov
mov
cmp
movl
jne
mov
mov
xor
xor
mov
call
xor
mov
mov
sub
mov
adc
mov
addl
xor
xor
andl
mov
call
or
movl
or
add
mov
adc
mov
xorl
xor
xor
mov
adcl
call
sub
mov
mov
xor
mov
mov
mov
sbb
mov
mov
xor
subl
xor
mov
mov
xorl
mov
decl
call
adcl
or
movl
mov
andl
or
push
subl
push
push
addl
push
xorl
call
mov
movl
jmp
jmp
cmpl
jg
add
jmp
push
call
lea
mov
mov
movl
mov
xor
cmpl
ja
jmp
push
call
shr
mov
xor
shl
or
mov
mov
mov
mov
mov
mov
movl
xor
xor
mov
sbbl
call
neg
mov
mov
adcl
mov
xorl
mov
andl
xor
adcl
xor
mov
movl
call
or
and
or
cmpl
jge
orl
movzbl
xor
jmp
push
push
push
call
mov
mov
xor
xor
movl
mov
subl
call
sbb
mov
sub
mov
xorl
mov
mov
subl
xor
subl
xor
mov
mov
mov
mov
incl
mov
call
sbb
mov
addl
or
sub
mov
or
push
subl
push
addl
push
push
sbbl
call
mov
cmp
movl
je
cmpl
jbe
jmp
push
push
call
mov
mov
xor
xor
mov
call
mov
mov
cmpl
ja
jmp
push
pushl
push
call
mov
mov
xor
xor
mov
call
or
or
sbbl
mov
imul
cmpl
jle
not
decl
jmp
push
pushl
push
pushl
push
pushl
call
add
mov
mov
mov
jmp
movl
jmp
cmpl
jb
xorl
jmp
push
call
mov
mov
xor
xor
mov
call
mov
xor
mov
mov
mov
xorl
xor
addl
xor
adcl
mov
call
subl
or
or
adc
mov
mov
xor
adcl
xor
mov
call
adc
mov
cmpl
jb
jmp
pushl
call
mov
mov
mov
xor
xor
mov
mov
mov
orl
call
or
or
mov
or
push
push
negl
push
push
subl
call
movl
mov
jmp
movzbl
adc
mov
mov
and
mov
xor
andl
xor
movl
mov
addl
call
add
mov
mov
mov
mov
sub
mov
cmpl
ja
movl
jmp
pushl
push
call
mov
xor
xor
mov
call
or
or
mov
movl
jmp
mov
cmpl
jl
jmp
pushl
push
push
call
mov
xor
xor
mov
call
mov
mov
sub
mov
xor
or
or
mov
xor
xor
subl
mov
call
xor
or
xorl
or
xor
mov
mov
add
mov
xorl
xor
sbb
mov
sub
sub
sbb
mov
xor
xor
or
xor
movzwl
and
add
cmpl
jge
jmp
push
call
mov
movl
movl
movl
movl
movl
movl
and
movl
xor
movl
cmpl
jl
mov
mov
and
adc
jmp
pushl
pushl
pushl
push
pushl
pushl
push
push
call
mov
add
mov
sub
cmpl
jbe
jmp
push
push
push
push
call
xor
push
pop
div
mov
xor
add
mov
xor
mov
xor
div
dec
or
sbb
mov
cmpl
jg
orl
jmp
pushl
pushl
call
xor
mov
sub
mov
mov
sub
cmpl
jle
xor
jmp
push
push
pushl
call
mov
xor
mov
div
mov
xor
sbbl
div
orl
mov
sub
mov
mov
add
lea
mov
movl
movl
movl
movl
movl
movl
movl
mov
or
mov
xor
div
mov
xor
div
mov
lea
mov
mov
sub
mov
xor
mov
div
mov
imul
add
xor
mov
add
mov
and
xor
mov
mov
add
add
mov
movl
movl
movl
movl
movl
movl
movl
mov
mov
imul
imul
mov
imul
mov
sub
add
mov
and
mov
sub
imul
mov
mov
or
sub
xor
mov
div
xor
mov
mov
add
add
mov
andl
jmp
mov
inc
mov
mov
mov
cmp
je
mov
mov
mov
add
mov
mov
mov
mov
mov
movl
movl
movl
movl
lea
mov
mov
movzwl
xor
movzwl
sar
mov
movzwl
xor
movzwl
shl
or
movzwl
mov
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movzbl
push
lea
push
call
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
add
mov
mov
cmp
je
mov
mov
movzwl
xor
movzwl
sar
mov
mov
movzwl
xor
movzwl
shl
or
movzwl
mov
mov
mov
movzwl
xor
movzwl
sar
mov
mov
movzwl
xor
movzwl
shl
or
mov
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
or
je
lea
mov
mov
xor
mov
call
mov
mov
mov
xor
mov
call
or
or
xor
xor
mov
mov
mov
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movsbl
cmp
je
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
movsbl
cmp
je
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movsbl
cmp
jne
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
add
mov
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
cmpl
je
mov
mov
movzwl
mov
mov
mov
jmp
jmp
cmpl
jne
xor
jmp
mov
add
mov
movl
cmpl
je
cmpl
je
mov
shl
mov
movl
sub
mov
movl
mov
cmp
je
mov
mov
mov
mov
mov
mov
mov
inc
mov
jmp
movl
push
jmp
push
mov
sub
push
movl
movl
movl
mov
mov
add
xor
mov
lea
mov
add
mov
movl
movl
mov
mov
add
xor
div
mov
xor
push
sub
imul
xor
lea
mov
movl
movl
movl
mov
mov
shr
sub
mov
imul
div
xor
or
xor
mov
movl
movl
movl
mov
mov
or
sub
or
mov
lea
mov
movl
movl
mov
mov
add
imul
xor
and
mov
movl
movl
mov
mov
and
sub
add
mov
movl
movl
mov
add
pop
div
mov
sub
add
imul
mov
movl
movl
movl
movl
movl
movl
mov
mov
mov
sub
mov
sbb
mov
mov
add
mov
adc
mov
or
or
add
mov
adc
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
or
mov
sub
mov
imul
mov
sub
imul
xor
add
xor
push
mov
add
imul
mov
div
mov
lea
push
mov
mov
mov
mov
push
push
push
push
call
mov
mov
xor
sub
and
xor
mov
mov
lea
push
mov
push
pop
xor
div
mov
sub
add
and
lea
call
mov
mov
imul
mov
sub
add
mov
xor
sub
cmp
jne
mov
mov
sub
mov
sub
add
xor
xor
lea
mov
push
mov
and
xor
imul
mov
div
push
mov
add
push
mov
mov
imul
and
mov
imul
mov
xor
pushl
call
mov
mov
lea
mov
incl
mov
mov
xor
shld
shl
mov
mov
xor
xor
cmp
jne
cmp
jne
mov
mov
jmp
lea
mov
mov
mov
mov
mov
sub
mov
mov
mov
sub
mov
movl
movl
mov
mov
mov
mov
pushl
pushl
pushl
pushl
pushl
push
push
pushl
mov
call
mov
mov
pushl
call
mov
push
add
push
push
call
mov
jmp
mov
mov
pop
leave
ret
push
mov
and
sub
push
push
lea
mov
mov
mov
mov
sub
sbb
mov
orl
orl
lea
push
lea
push
call
mov
mov
pushl
mov
pushl
mov
pushl
pushl
pushl
pushl
pushl
call
pop
pop
mov
pop
ret
push
mov
and
sub
push
push
push
mov
pushl
pushl
call
test
je
movl
movl
movl
push
movl
adc
mov
andl
mov
andl
push
addl
push
push
adcl
call
push
subl
push
xorl
and
sbbl
and
push
push
orl
call
xor
xor
and
mov
cmpl
jbe
and
jmp
call
mov
xor
or
mov
xor
or
notl
mov
xorl
movl
movzbl
and
mov
movl
add
movl
movl
sub
movl
adc
movl
cmpl
jb
adcl
jmp
pushl
push
push
push
call
mov
mov
mov
mov
or
mov
or
mov
mov
sbb
mov
adcl
sub
mov
movl
sbb
mov
xor
xor
subl
and
sbbl
and
cmp
movl
jne
movl
cmp
movl
jne
sub
movl
sbbl
movl
adc
movl
cmpl
jl
sbbl
xor
jmp
push
push
pushl
pushl
push
pushl
call
movl
movl
mov
mov
sub
adc
mov
subl
imul
adcl
and
negl
imul
mov
addl
pushl
imul
incl
xor
mov
adc
mov
sbbl
div
xor
mov
adcl
xor
sbb
mov
sub
or
xor
sbbl
pushl
addl
pushl
call
andl
pushl
call
andl
movl
movzbl
sub
movl
cmpl
jge
negl
jmp
pushl
push
push
push
call
movl
movl
movl
movl
mov
mov
sub
mov
mov
add
mov
adc
cmpl
jge
and
jmp
pushl
push
pushl
push
pushl
push
call
mov
add
adc
and
mov
and
orl
mov
movl
decl
movl
addl
movl
xorl
movl
subl
dec
cmp
jne
movzwl
or
movl
mov
xorl
mov
movl
addl
mov
call
xor
lea
mov
mov
sub
sub
mov
lea
adc
mov
mov
cmpl
jbe
jmp
pushl
push
push
call
mov
mov
mov
xor
shl
shr
or
xor
mov
add
mov
or
mov
and
mov
xor
or
xor
or
sub
sub
mov
cmpl
ja
andl
jmp
push
pushl
pushl
call
mov
mov
shrd
shr
mov
mov
subl
xor
sbbl
xor
xorl
or
cmpl
ja
subl
jmp
push
push
pushl
push
pushl
pushl
call
mov
push
pushl
lea
push
shl
call
adcl
lea
subl
push
mov
mov
andl
lea
andl
push
adcl
mov
subl
lea
notl
mov
mov
orl
mov
push
xorl
call
xorl
push
addl
push
pushl
addl
call
mov
cmpl
ja
mov
xor
jmp
push
pushl
push
push
push
push
call
mov
mov
mov
shr
shl
or
mov
mov
sub
sub
mov
xor
xor
mov
or
xor
mov
lea
mov
cmpl
jle
adc
jmp
pushl
push
push
call
lea
mov
mov
sub
lea
xor
sbb
movl
movl
mov
sub
movl
movl
orl
mov
adcl
mov
sub
add
mov
mov
movl
adc
xor
cmpl
jb
and
jmp
push
push
push
call
xor
and
mov
and
mov
movl
movl
movl
movl
sbb
movl
add
movl
andl
mov
sub
mov
adc
mov
cmpl
jl
and
jmp
push
call
mov
push
push
or
or
push
addl
push
xorl
call
mov
negl
mov
sub
mov
movl
sbb
mov
mov
cmp
jne
cmp
je
and
movl
movl
movl
xor
add
mov
sub
xor
movl
mov
mov
sub
xor
mov
mov
mov
cmpl
jb
jmp
pushl
pushl
pushl
push
pushl
call
mov
add
adc
xor
xor
and
mov
and
mov
movl
movl
movl
and
movl
sub
movl
cmpl
jl
add
jmp
pushl
call
movl
movl
movl
mov
mov
push
push
xor
adcl
xor
push
push
call
addl
mov
andl
mov
push
push
push
sbbl
push
call
cmpl
jl
subl
jmp
call
mov
mov
push
push
push
push
andl
call
mov
sbb
mov
mov
mov
andl
add
movl
mov
adc
mov
cmp
movl
jne
movl
cmp
movl
je
xor
mov
xor
mov
addl
xor
adcl
shld
mov
and
shl
mov
mov
sbb
mov
sbbl
xor
subl
xor
mov
movl
cmp
movl
jne
movl
cmp
je
mov
mov
cmp
je
cmpl
jl
sub
jmp
pushl
call
mov
mov
mov
shl
xor
mov
mov
cmpl
jle
and
jmp
pushl
push
push
call
mov
xor
xor
shrd
xor
shr
or
or
mov
movl
mov
movl
cltd
movl
cmp
movl
jne
cmp
movl
jne
movzwl
add
movl
cmpl
jge
mov
add
jmp
push
push
call
movl
mov
mov
mov
xor
orl
shld
adcl
shl
movl
mov
mov
xor
sbbl
xor
mov
cmp
jne
movl
cmp
movl
jne
movl
mov
mov
shrd
shr
mov
mov
mov
mov
mov
shl
mov
xor
xor
or
cmp
jne
mov
mov
mov
mov
mov
mov
movzwl
mov
and
mov
or
mov
add
or
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
or
mov
or
mov
sub
mov
sub
mov
cmp
jbe
mov
mov
mov
mov
movzwl
mov
or
mov
sub
mov
or
imul
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
xor
mov
imul
mov
and
mov
and
mov
cmp
ja
mov
mov
shrd
xor
mov
shr
mov
xor
or
push
push
shl
push
lea
push
lea
push
call
pushl
pushl
pushl
pushl
call
mov
mov
mov
mov
shrd
shr
shl
xor
mov
xor
or
mov
mov
mov
mov
shrd
xor
mov
shl
shr
mov
xor
or
mov
mov
mov
mov
mov
cmp
jne
mov
mov
mov
cmp
jne
movb
movb
movb
movb
mov
mov
or
sub
mov
sub
movzbl
movzbl
cltd
idiv
movzbl
or
mov
movb
movb
movb
movb
movb
mov
mov
or
and
mov
imul
mov
movzbl
movzbl
and
mov
movzbl
cltd
idiv
mov
cmp
je
lea
push
lea
call
cmp
jne
cmp
jne
xor
jmp
xor
inc
jmp
mov
mov
mov
mov
add
adc
mov
mov
jmp
mov
push
push
lea
push
call
mov
push
pushl
lea
push
call
mov
mov
mov
mov
mov
mov
mov
lea
mov
add
movl
movl
mov
and
add
and
sub
and
mov
movl
mov
mov
or
add
cmp
je
mov
mov
mov
xor
shld
shl
xor
xor
cmp
jne
cmp
je
mov
mov
mov
mov
xor
shr
shl
or
xor
shld
shl
xor
xor
cmp
jne
cmp
je
mov
cltd
mov
mov
cltd
shld
shr
xor
shl
or
or
mov
mov
xor
xor
mov
cmp
jne
cmp
je
pushl
pushl
mov
mov
pushl
mov
call
mov
mov
mov
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
mov
pop
ret
movl
cmp
movl
jae
movl
cmp
jae
shld
movl
shl
ret
mov
addl
xor
and
shl
ret
xor
xor
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
and
and
or
mov
sub
mov
mov
sub
add
add
mov
xor
cmp
jne
mov
mov
xor
div
push
push
push
xor
mov
mov
mov
mov
mov
imul
mov
div
mov
sub
xor
shl
imul
sub
xor
mov
mov
add
mov
add
mov
mov
mov
xor
and
mov
imul
mov
sub
or
mov
pop
xor
pop
pop
cmp
je
mov
jmp
mov
mov
sub
or
imul
add
jmp
movl
movl
movl
mov
mov
add
imul
mov
or
xor
mov
div
xor
leave
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
xor
sub
and
sub
push
movl
movl
movl
movl
mov
mov
imul
mov
imul
xor
div
mov
mov
push
shr
and
xor
mov
sub
mov
mov
mov
and
imul
mov
imul
add
mov
sub
mov
mov
add
xor
pop
div
mov
push
and
sub
xor
add
mov
mov
and
imul
mov
imul
or
xor
pop
sub
mov
mov
or
mov
or
mov
add
or
mov
or
lea
cmp
jbe
pop
leave
ret
negl
subl
movl
cmpl
movl
je
cmpl
jbe
xor
jmp
push
pushl
pushl
pushl
push
push
push
pushl
push
push
push
push
pushl
push
call
add
mov
mov
pop
pop
pop
leave
ret
mov
mov
ret
orl
mov
mov
notl
or
mov
movl
jne
mov
sbbl
mul
ret
xorl
push
mul
and
mov
add
mov
mull
add
mov
mul
add
pop
ret
incl
push
mov
sbb
push
mov
andl
or
movl
jne
mov
mov
sub
imul
mov
mov
xor
div
andl
mov
and
mov
movl
div
not
mov
jmp
and
mov
andl
mov
movzbl
xor
mov
cmpl
jge
jmp
pushl
pushl
call
mov
shr
rcr
shr
rcr
or
jne
div
mov
mull
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
xor
mov
pop
pop
ret
