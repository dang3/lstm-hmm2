mov
mov
ret
mov
mov
ret
cmp
movl
jmp
xor
sbb
jp
stos
js
nopl
jmp
mov
ffree
aam
in
mov
in
data16
ljmp
push
aas
inc
adc
rolb
dec
ret
clc
loopne
jmp
jbe
cwtl
lds
and
out
mov
mov
jge
mov
loop
stos
xor
int
popf
inc
idiv
sbbl
out
stos
xchg
pop
cmpsl
cmp
or
sub
jae
adc
dec
ss
mov
jne
lret
push
outsb
aam
jle
mov
cwtl
pop
idivl
addr16
mov
xchg
xchg
cmc
fadd
or
lods
leave
mov
loope
cmp
sbb
mov
cmp
adc
xchg
in
lock
jmp
mov
add
pop
mov
out
loopne
das
cli
rcrl
or
repz
mov
jno
xchg
daa
jecxz
ja
push
add
insl
and
mov
mov
mov
mov
repz
pcmpeqb
ffree
cmc
test
push
mov
push
jecxz
push
ficomps
pop
jnp
imul
stc
loopne
das
cmp
int
or
sub
imul
addl
sub
test
adc
scas
jle
iret
movsl
or
mov
testb
out
mov
xchg
xor
fsts
jno
cltd
push
mov
mov
ss
jbe
mov
push
sbb
adc
jae
inc
push
ret
push
push
inc
loope
scas
les
data16
cmp
popa
cmp
push
cmp
js
push
inc
out
xchg
sub
icebp
mov
test
adc
cmpsb
xor
pop
stos
cmp
fwait
xor
mov
fiadds
push
fiadds
enter
mov
out
xchg
shlb
adc
jge
call
dec
lock
mov
sub
lret
push
cmpsl
icebp
ds
out
push
mov
sub
inc
push
sub
aaa
roll
cli
repz
mov
ret
je
out
xchg
or
mov
xlat
cmp
lock
and
jle
cld
mov
jb
shl
xchg
sub
sbb
pop
add
dec
push
mov
cli
mov
and
jae
lods
mov
fistps
ds
push
pusha
sub
aad
sbbl
icebp
pop
jbe
xor
push
in
icebp
mov
adc
adc
fldl
inc
mov
pop
cmpsl
and
dec
icebp
sti
popf
fs
mov
pop
jb
and
outsl
sti
jecxz
dec
or
xor
mov
ljmp
outsb
test
in
scas
inc
sub
fisttps
test
pop
and
ret
adc
mov
xor
jnp
popf
and
push
clc
adcb
pop
popa
fdivl
idiv
out
mov
in
mov
inc
xchg
xchg
out
push
mov
dec
sbb
xchg
cmp
rolb
pop
xchg
test
fcoml
jb
and
in
jo
sub
xchg
add
loopne
aad
jo
cmp
hlt
pop
andl
sub
mov
jmp
dec
jbe
xor
scas
ret
and
jns
ret
mov
push
rclb
adc
push
sbb
push
inc
or
lea
dec
cmpsb
dec
xor
out
push
push
das
sub
mov
pop
jl
jnp
ljmp
loop
cmp
sbb
and
rcrl
mov
ss
nop
into
rep
inc
sbbb
xor
xchg
push
data16
pop
aad
ret
inc
scas
arpl
lret
mov
mov
repz
or
inc
mov
int3
aas
lcall
lret
sbbl
aam
out
popa
dec
pop
xchg
push
adc
xchg
add
dec
pop
ljmp
adc
test
js
sbb
jne
pusha
xlat
in
out
xlat
dec
mov
xchg
into
xchg
pop
std
popf
imul
mov
jo
mov
pop
push
mov
xchg
jge
aaa
or
incl
inc
outsl
fmulp
mov
out
mov
stos
std
sbb
dec
icebp
push
sbb
cmpsl
jo
or
mov
std
adc
jnp
fcmovbe
mov
or
bound
ss
int3
sbb
mov
imul
jne
imul
xlat
test
dec
mov
loope
jns
jmp
icebp
aam
clc
das
jl
jle
pop
fs
pop
xor
es
jle
repz
dec
sbb
movsb
push
in
mov
mov
lock
repz
scas
loopne
add
dec
ljmp
fldcw
sbb
addr16
in
cld
scas
adc
pusha
xor
stos
lds
cmc
leave
mov
mov
loope
xchg
mov
and
cld
mov
lods
sub
mov
and
insb
mov
sub
popa
xchg
mov
aad
mov
negl
cmc
lods
sub
xor
imul
xchg
mov
inc
xchg
xchg
cmp
mov
pop
push
mov
sub
or
fildll
loope
dec
insl
popa
xor
pusha
xchg
pop
jns
sub
popf
hlt
and
sbb
xor
fimuls
xchg
in
adc
outsl
je
dec
inc
pop
ret
cmp
mov
push
pop
xor
ss
mov
out
xor
dec
xor
out
cmpsb
orb
fsts
in
ss
outsb
out
cmc
or
repnz
inc
push
dec
xor
dec
rorl
jbe
fdivrs
sarl
scas
jo
mov
inc
test
loop
jne
in
and
mov
test
lret
cmp
aas
pop
mov
in
andl
cmpsb
leave
jae
stc
lds
and
scas
aas
aaa
pop
loop
cmp
cs
mov
leave
or
fcomps
add
aad
mov
repnz
jmp
outsl
lret
and
push
js
and
andb
test
add
into
dec
sarl
pop
xor
pop
popa
mov
in
jo
add
mov
sbb
cmp
adc
imul
test
mov
sti
jnp
xchg
adc
cmp
push
gs
mov
sub
xchg
ja
cmpb
clc
sti
imul
jae
movl
cmp
movl
jae
adcl
shrd
shr
ret
inc
mov
xor
and
shr
ret
xor
xor
ret
mov
mov
ret
mov
mov
ret
mov
mov
ret
mov
mov
ret
mov
mov
ret
mov
mov
ret
mov
mov
ret
mov
mov
ret
mov
mov
ret
push
mov
sub
movl
movl
movl
movl
movl
jmp
cld
xor
test
mov
mov
push
add
bswap
inc
fnsave
dec
and
lds
cmp
push
add
repz
or
lcall
cmp
add
sbb
ret
imul
fs
pop
pop
in
jbe
mov
data16
mov
inc
push
mov
out
shlb
pop
push
into
adc
int
ljmp
clc
syscall
js
inc
lret
sbb
or
jg
lock
popa
movsb
pop
ret
rorb
test
cmc
aam
pusha
xor
fistps
or
loopne
movsl
push
test
mov
cltd
mov
cmp
adc
or
out
mov
or
sub
mov
mov
repz
movsb
mov
jle
inc
mov
insl
push
jge
jmp
ljmp
xlat
add
out
insl
test
fdivrs
and
aaa
loopne
popf
lret
je
repz
rorb
scas
stos
cs
in
xorb
outsl
xchg
stos
cltd
jp
cli
outsl
adc
mov
or
js
pop
pop
imul
stos
ret
pusha
jge
test
and
scas
out
push
sbb
fcmovbe
xchg
test
test
cmp
ret
jge
jae
inc
jno
mov
mov
enter
icebp
mov
push
jl
dec
xchg
mov
push
out
or
dec
fldenv
pushf
gs
insb
mov
das
outsl
outsl
or
and
rcll
mov
push
or
stos
out
in
std
and
cmpsl
pop
sarb
and
loop
dec
insb
dec
std
insl
frstor
mov
rcrl
xchg
lock
dec
lret
jmp
cmp
xor
stos
mov
mov
and
mov
sbb
xor
fwait
xor
jne
out
push
or
stos
in
mov
adc
sub
mov
sub
into
and
stc
test
and
xchg
in
jnp
pause
popa
xlat
cmp
mov
andl
aaa
rcl
shr
cwtl
lea
cld
sbb
cli
xchg
fimuls
rdpmc
jne
cmpsl
xchg
into
dec
sub
and
inc
popa
in
or
cmp
mov
jo
in
mov
pop
sub
sbb
test
xor
icebp
jno
lahf
loop
mov
lods
rcr
xchg
hlt
jae
bound
push
inc
inc
nop
push
jnp
inc
push
stc
adcb
xlat
outsl
cs
test
cmp
dec
cli
inc
std
call
imul
repz
lcall
push
fisubrs
inc
into
imul
hlt
popa
es
mov
js
or
cltd
push
cmpb
xchg
sub
inc
cmp
mov
pop
mov
lods
scas
sub
divb
mov
inc
mov
pop
jl
insl
push
pop
enter
out
dec
stos
mov
or
test
dec
mov
inc
push
sbb
sub
test
dec
xor
inc
mov
ljmp
lock
mov
shlb
shrl
shl
clc
outsl
xor
out
into
and
jp
cmp
push
divl
movsb
add
lret
shll
pop
inc
inc
cmpsb
out
push
xor
mov
lret
push
inc
mov
sbb
dec
rcrl
ds
rorb
addl
pushf
pop
mov
cmp
pop
lock
lea
push
pop
sbb
inc
jl
push
push
daa
push
push
pop
iret
push
lods
cmpsb
lahf
inc
cmpsb
mov
xchg
int3
mov
out
loope
leave
das
cmpb
inc
sbb
inc
jb
pop
js
test
and
and
pop
jne
outsb
mov
addr16
xchg
lea
push
insb
pop
dec
jae
int
lds
insl
rcl
jl
inc
push
add
rol
das
or
push
and
xor
icebp
xchg
push
dec
insb
lea
mov
arpl
mov
sub
js
ljmp
dec
nop
iret
and
and
in
insl
clc
push
add
mov
mov
mov
mov
sbb
imul
pop
sbb
mov
xlat
hlt
popf
bt
movsb
jge
cmp
cwtl
les
add
adc
je
scas
pop
repz
repnz
lea
lds
rclb
cs
fcoml
clc
ficomps
add
loopne
cmp
lods
stos
or
imul
outsb
cmp
cmp
faddl
clc
pop
mov
add
lcall
cltd
cli
sbb
or
ss
jecxz
add
mov
idivb
psubd
shrd
and
movsl
daa
or
sub
test
xor
or
jmp
out
jb
mov
sbb
lds
leave
scas
rorl
adc
xchg
jbe
dec
or
inc
lds
fmuls
mov
cmp
mov
jne
pop
push
sub
out
incl
jns
adc
and
inc
mov
scas
movsb
rclb
jmp
xchg
jns
test
cltd
push
fwait
jmp
push
mov
lcall
mov
jnp
inc
add
call
and
sti
fiadds
jo
jle
inc
addr16
lea
xor
or
popa
aaa
jae
xchg
sub
inc
mov
je
mov
int
icebp
lret
add
stc
pop
lea
xor
push
jp
and
int
jg
pusha
int3
adc
push
clc
mov
divb
inc
orl
xchg
add
inc
jb
pop
lret
movl
movl
movl
movl
jmp
lds
mov
inc
xchg
inc
inc
das
ljmp
loope
pinsrw
mov
or
dec
fistps
stos
jne
hlt
mov
sbb
lret
cmpsl
mov
cmpsb
movsl
nop
dec
outsl
in
incb
dec
lods
add
push
lods
cmp
gs
inc
imul
jl
lds
sbb
xor
lock
xchg
xchg
ficompl
jne
shl
cld
mov
xor
xor
je
push
js
unpcklps
js
ss
xchg
and
xchg
cpuid
pop
jl
das
loopne
in
and
pop
push
push
mov
fisubs
push
out
xchg
call
pop
add
fwait
outsb
test
insl
repz
aad
gs
or
pop
pop
xor
rcrl
cwtl
out
mov
outsl
les
mov
cld
sub
dec
insb
mov
repnz
mov
push
cmp
pop
fs
lahf
scas
bound
or
sbb
xchg
mov
cmpsb
arpl
fisubl
push
pop
mov
cs
xchg
mov
test
and
jae
pop
shl
shlb
fnstcw
idivb
and
dec
call
enter
es
jae
sahf
js
je
popa
aaa
mov
add
push
ss
dec
std
xor
sub
lcall
push
add
lret
push
loope
loop
push
sar
pop
pop
gs
dec
movsl
cmpsb
push
arpl
add
add
aam
rolb
lods
dec
lcall
insl
fsubs
or
fnsave
or
xchg
jl
or
xchg
mov
cmpb
add
and
mov
lcall
pop
and
push
mov
popf
scas
xor
movsl
in
lahf
je
sbb
push
mov
jae
sub
lds
negb
lds
rcr
push
jmp
jns
loop
xchg
xchg
jecxz
mov
jg
lahf
lcall
outsl
and
push
xchg
dec
fcompl
cmc
mov
decl
mov
in
js
in
fistpll
jl
xor
in
and
xor
xor
jle
pop
mov
shlb
dec
xchg
arpl
jne
imul
add
inc
jmp
mov
fcomps
out
test
cltd
add
mov
xchg
test
jnp
sbb
push
jo
scas
rorl
pop
sbb
inc
outsl
aad
pushl
out
mov
mov
jmp
sbb
jmp
ficoms
adc
je
sub
fsub
dec
push
mov
dec
jle
sbb
lcall
cmc
loope
mov
jae
addb
insb
out
stos
push
and
movsl
and
pop
add
fs
jno
push
xor
push
inc
shll
insb
pusha
bound
out
mov
mov
cli
xchg
jne
popf
cmp
stos
dec
and
or
mov
filds
adc
sbb
in
es
xchg
cmp
adc
ja
cli
sub
push
pushl
ss
loop
mov
mov
cli
idivl
mov
into
fwait
xchg
push
sti
mov
das
inc
add
jne
inc
and
mov
cmp
sarb
mov
mov
mov
sti
push
jl
js
mov
jmp
outsb
jmp
pop
or
loopne
faddl
and
lods
xorb
pop
lret
jae
lds
ja
outsl
adc
mov
xchg
push
lods
ss
pop
dec
inc
lods
lods
imul
incb
sbb
or
jbe
jb
je
je,pn
daa
rcl
mov
inc
insb
adc
shr
les
jmp
movsb
testl
mov
mov
sub
shlb
fildl
mov
cs
lods
or
xorl
insl
std
or
sbb
popa
sub
mov
jo
stos
pop
cld
push
push
scas
jno
loopne
mov
nop
xchg
xchg
jecxz
fwait
in
add
aaa
dec
scas
mov
xor
mov
out
sbb
insb
lock
inc
pusha
outsl
popf
jbe
xchg
xchg
push
scas
xlat
jg
xor
sbb
push
jb
sbb
fs
push
std
adc
jmp
xchg
stos
or
or
es
inc
int3
mov
scas
inc
add
push
std
xor
add
add
push
xlat
cmp
push
or
vmwrite
stos
jno
test
jl
out
dec
je
cmpsl
nop
lock
loop
cld
in
mov
mov
inc
push
je
ljmp
or
jmp
and
stos
and
push
imul
sbb
arpl
sarb
inc
push
xchg
stc
sahf
fwait
orl
mov
xorb
xor
cmpsl
aam
dec
cmp
and
and
pop
cmp
cmpb
jae
or
xor
cmpsb
push
cld
mov
push
adc
inc
sbb
outsl
pop
xchg
jle
lock
lret
push
pushl
jo
leave
cmpsl
outsl
fsubrp
or
mov
lret
push
pusha
xchg
jge
xchg
sbb
cs
sahf
and
push
lods
ds
fwait
orb
nop
or
push
mov
ret
in
in
and
pop
popl
stos
sbb
je
popf
inc
sub
leave
jnp
jb
aas
and
mov
mov
cmp
cmp
call
and
dec
and
fstps
mov
stos
es
mov
pop
dec
mov
mov
ss
cmpsb
scas
sbb
inc
in
dec
add
movl
mov
mov
jmp
pop
inc
sti
and
jbe
pop
js
leave
or
xchg
fimuls
pinsrw
vmread
pushf
pop
aam
insl
fistpl
stos
rolb
add
test
sbb
jp
jae
xchg
and
movsl
sti
jo
sbb
lret
mov
insb
mov
rcr
push
mov
lds
fbld
out
ljmp
xor
sbb
pop
arpl
dec
hlt
mov
or
mov
outsl
lock
fs
mov
adc
dec
pop
jge
nop
sbbl
adc
es
sbb
cwtl
repz
fstpl
in
scas
xor
pop
test
dec
xor
pop
mov
mov
sbb
dec
mov
jne
xor
lock
insl
in
fcmovbe
int3
adc
popa
mov
mov
ficoms
cli
mov
mov
fisttpll
mov
mov
fcoml
or
mov
and
add
jge
and
stos
in
mov
lods
adc
icebp
in
mov
pusha
in
dec
js
sub
arpl
jg
jge
rorb
pop
jo
insb
mov
xor
push
aas
dec
xchg
cld
into
jmp
cmp
mov
pop
das
fwait
cmpsl
sbb
sub
and
sti
in
cld
jl
add
push
cmc
adc
dec
pop
insl
push
jmp
imul
rorl
add
mov
and
sbb
shll
inc
pop
xchg
or
xchg
cmpsb
test
jae
mov
or
arpl
scas
mov
leave
fwait
lods
dec
cmp
js
xor
adc
stos
xchg
hlt
jl
lcall
sbb
sbb
das
loopne
or
scas
sahf
popa
pop
push
jge
out
sarl
sbb
or
daa
xor
pop
loopne
xchg
jns
sbb
mov
jge
mov
lock
loop
cwtl
pop
shlb
pop
jg
pop
lret
push
daa
aaa
xchg
cmp
dec
dec
cmp
push
inc
inc
jp
and
mov
loop
jg
testb
sub
jnp
rolb
out
push
pop
push
xorl
or
mov
rcl
stos
mov
mov
inc
inc
sbb
out
mov
inc
lods
xor
pop
pop
out
stos
clc
mov
movsl
pop
int
push
test
sub
inc
fisttps
inc
daa
adc
or
mov
push
scas
sub
je
out
movsb
dec
sub
cmp
mov
add
push
xchg
mov
and
or
pop
add
je
int
movsb
fimuls
sahf
je
fwait
test
add
xchg
out
jae
sahf
xchg
hlt
scas
fdivr
pushf
in
sub
xchg
lods
or
cmp
inc
adc
mov
idivl
out
scas
notl
push
movsl
and
mov
test
dec
aaa
lods
or
jl
ret
nop
sub
or
arpl
xor
clc
fwait
and
push
push
movsb
xlat
cwtl
insl
mov
push
push
cmc
push
pop
mov
je
xchg
popa
inc
dec
loope,pn
subb
cmc
push
insl
lea
int3
push
and
adc
pop
lret
lcall
inc
movsl
mov
enter
es
loope
jae
sub
or
je
sbb
stos
insl
or
mov
and
xor
jne
mov
cmp
push
inc
stos
sbb
xchg
loop
sub
rolb
jp
ret
jae
push
jb
and
loop
std
inc
rcl
cmpsb
in
pop
repz
adc
daa
inc
add
mov
push
pop
jmp
outsb
iret
jl
and
mov
jo
in
jmp
aas
pop
and
dec
push
int3
and
subl
lods
pop
xor
test
xor
andb
mov
and
test
dec
test
rorb
mov
test
stos
mov
fimuls
stos
sbb
mov
jno
imul
jl
fsubl
inc
adcb
ds
adc
mov
cmpsb
push
inc
fnstsw
jle
das
dec
and
dec
mov
rcrb
fistps
rorl
js
pushf
mov
das
sub
ret
movsb
xor
gs
fwait
push
xchg
jbe
insl
cmp
add
or
leave
sub
iret
outsb
ret
jno
mov
lret
test
js
jp
pop
lahf
jecxz
fwait
int
push
pop
call
adc
mov
rcr
xchg
sahf
insb
movsb
xor
mov
inc
inc
mov
flds
repz
mov
fs
xor
adc
stc
sbb
or
outsl
inc
fwait
add
decl
jg
ljmp
ja,pt
cmpsb
in
pop
cmp
subl
out
and
xchg
and
sbb
dec
mov
pop
in
ljmp
mov
test
add
mov
out
inc
push
rorb
lds
shlb
push
mov
inc
sbb
mov
and
inc
ficomps
rolb
jno
fwait
pop
lahf
push
leave
lret
cld
rcl
daa
mov
int
xchg
int
or
popa
add
inc
jmp
daa
in
cmp
and
mov
adc
imul
punpcklwd
inc
out
add
adc
lea
jne
ja
adc
fildll
nop
insb
sub
and
fwait
aam
incl
push
out
mov
ljmp
dec
push
sub
int3
icebp
dec
cltd
jb
mov
in
jno
pop
or
call
pop
stc
dec
sbb
rorb
push
inc
add
xor
imul
mov
push
sub
push
movl
jmp
ljmp
stos
lea
jbe
xchg
scas
xchg
cmp
pinsrw
pcmpgtd
push
bound
sbb
inc
pop
adc
jo
std
inc
cmp
xchg
mov
and
lahf
jge
es
jne
dec
inc
pop
shrw
mov
divl
stos
pushf
repnz
cs
mov
mov
lods
sbb
cmpsb
pop
mov
fidivrs
lock
inc
cltd
adc
pop
push
leave
push
and
mov
popf
or
dec
sbb
jl
xchg
and
imul
clc
jle
fnsave
add
gs
or
test
out
ljmp
movsb
xchg
dec
test
sbb
inc
sub
push
ret
fisttpl
sarb
xor
loop
sub
mov
bound
lret
pop
aad
and
ret
dec
test
cmp
push
nop
sbbl
jno
add
push
jmp
add
inc
xchg
mov
div
and
jl
cmp
js
dec
xor
mov
add
and
xlat
int
pop
hlt
test
xchg
sbb
xchg
daa
addr16
es
scas
xchg
in
outsl
xchg
sahf
pop
test
fs
push
test
cltd
push
fwait
pop
shll
stc
push
mov
addr16
inc
repz
cwtl
cmc
adc
inc
jnp
hlt
das
xchg
nop
xchg
sbb
inc
sbb
pusha
subb
inc
mov
cmpsl
out
cmp
or
jecxz
rcl
lea
pop
in
stc
sub
sub
mov
mov
daa
adc
pop
out
orb
sbb
pop
outsl
inc
cli
mov
push
inc
or
pop
sub
repnz
arpl
test
pop
pop
in
repnz
push
cmpsb
push
fildl
pop
jg
mov
dec
pop
out
mov
mov
cmp
sbb
jecxz
sahf
out
icebp
push
in
cs
mov
add
cltd
ret
fucom
lds
mov
fbld
or
aad
jp
mov
jne
bound
fiaddl
push
cwtl
rclb
bswap
int
pop
cmpsl
cmpsb
hlt
aaa
int3
or
lret
jle
in
or
sub
xchg
dec
loopne
call
add
inc
xorb
subl
les
pusha
std
sub
mov
jns
and
cmp
jl
mov
add
imul
inc
in
cwtl
jg
fsubr
jp
in
mov
mov
aaa
fldt
push
leave
stos
lret
cmpl
xorl
or
rorl
sbbl
repz
jb
ret
icebp
sub
fs
cmp
leave
jne
pusha
xchg
xchg
or
xlat
icebp
out
xchg
cld
in
and
lods
cmp
jae
mov
jae
mov
test
cmc
adc
push
and
push
sub
cmp
lret
push
cs
mov
repnz
push
push
jno
sti
jl
pushf
push
ljmp
pushf
andb
adc
out
jbe
into
sub
adc
jb
mov
adc
cli
inc
aam
enter
pop
ds
sub
lret
jle
sbb
mov
inc
mov
test
adc
and
jecxz
pop
fadds
jmp
mov
test
cmc
icebp
xchg
sub
push
xchg
sbb
ret
jp
xor
xchg
lock
insl
pop
jb
int
aas
xchg
dec
mov
insl
add
or
rorl
dec
push
clc
les
mov
xchg
jp
adc
mov
sbb
filds
fstps
sub
push
cwtl
or
js
ja
ret
xchg
out
movsl
fistps
push
mov
dec
mov
jecxz
fcmovb
outsb
fwait
cmpsl
aam
jne
push
xchg
cmp
daa
push
repnz
xchg
dec
ss
jo
xor
loope
inc
test
cli
mov
jecxz
jno
and
mov
cmpsl
and
xchg
daa
sub
in
push
cmpsl
push
adc
mov
dec
inc
xor
mov
xchg
sahf
test
push
iret
cmpsb
mov
out
insb
xchg
mov
std
cmp
xchg
cmp
rolb
pop
mov
sub
clc
xchg
xchg
inc
mov
xor
ret
push
or
adc
fnsave
rcrb
adc
fcompl
adc
mov
call
test
xchg
int
adc
out
ficoms
jmp
lock
fcmovbe
cld
aad
adc
jl
cmp
or
cli
jns
xor
cmp
push
fs
jae
shlb
sbb
xchg
cmp
dec
inc
xlat
addb
dec
insb
dec
sub
clc
mov
push
push
push
mov
arpl
dec
push
add
adc
xchg
mov
xchg
loopne
mov
pop
xor
mov
fistpll
stos
push
pushf
mov
loop
sub
mov
sub
push
jle
pop
call
popa
fwait
mov
jno
cltd
xchg
in
push
fsubrl
fwait
ret
and
fdivrs
sbb
loope
imul
jb
jl
or
inc
daa
je
in
mov
mov
fucomi
jbe
pushl
jb
xor
mov
bound
stc
pop
pop
inc
jmp
outsb
cmpsb
mov
jg
imul
push
dec
mov
aaa
js
cmpsb
xchg
pop
push
out
in
sarl
std
fidivrl
or
call
xor
mov
nop
mov
jnp
es
push
aas
test
mov
gs
lods
sbb
inc
hlt
inc
sbb
add
inc
in
sahf
add
movl
movl
mov
xor
add
mov
or
sub
mov
mov
and
or
mov
or
mov
mov
sub
mov
mov
mov
mov
mov
xor
jmp
xchg
mov
imul
insb
xchg
in
rorb
pinsrw
rdtsc
pop
stos
pop
lea
mov
insb
insb
enter
sbb
pop
mov
scas
hlt
add
dec
cmpb
inc
pop
xchg
or
in
sub
push
push
mov
or
clc
mov
sbb
mov
icebp
jl
jae
add
movsl
dec
shl
sub
or
mov
dec
mov
daa
cmp
repz
lcall
cmc
cmpsl
popf
aas
cmpsb
cmovl
fists
jg
shlb
aaa
or
cltd
push
int3
push
aaa
fsubrp
mov
xchg
mov
mov
xor
icebp
inc
sub
outsb
gs
sub
leave
jecxz
dec
or
inc
js
xchg
adc
insl
sbb
inc
les
mov
xlat
in
xor
xor
pop
sub
push
imul
aad
orb
push
mov
sbb
xorl
adc
push
shll
test
dec
les
xchg
xor
outsb
sub
pop
pop
jb
cmp
lea
dec
jg
sbb
or
in
mov
mov
outsb
stos
add
int3
movsb
cs
add
pop
xchg
sub
xchg
jl
aas
and
mov
mov
mov
xlat
jo
das
adc
and
mov
push
mov
dec
aad
fsubrp
test
cmp
lret
mov
mov
or
sbb
mov
out
test
mov
lods
call
scas
cli
mov
adc
xchg
pop
int
cs
iret
xor
ficoms
mov
cs
inc
cwtl
lret
xor
jb
push
cld
inc
jo
sub
popf
jo
jl
in
mov
pop
cmp
mov
call
add
scas
xchg
pusha
pop
cmp
push
aam
lock
mov
sbb
dec
pop
popf
notl
stos
shll
fmull
inc
insl
cmp
pop
fnstenv
xor
or
imul
mov
ret
xor
rcrl
andl
add
xor
xor
jle
and
xchg
jnp
ds
pop
cmp
add
in
jne
das
and
mov
cmp
hlt
push
repz
and
pop
cmp
inc
fdivrs
adc
cmpb
aas
inc
mov
and
sti
hlt
inc
sub
pop
inc
push
jg
push
adc
pop
lret
leave
jo
ljmp
scas
mov
into
jae
mov
pop
dec
ds
out
xor
loope
adc
scas
inc
aaa
fdivs
xchg
shll
int
push
ror
cmp
dec
and
push
fisubrs
push
movsb
loop
inc
punpckhdq
xchg
mov
ficomps
pop
mov
arpl
xchg
adc
mov
adc
jge
push
outsl
pushf
in
daa
dec
mov
fldcw
add
inc
pop
add
lcall
gs
mov
imul
addr16
pushf
xchg
xchg
jae
shrb
pop
mov
cmpsl
psubq
jns
fimull
cmp
push
shll
int
call
mulb
sbb
inc
push
xor
gs
xor
pop
cmpsl
in
xor
or
lods
jecxz
and
mov
inc
es
int
loope
and
dec
cmp
dec
pop
inc
mov
int
jp
mov
cmp
adc
divl
setle
xchg
jle
int
pop
fnstsw
nop
dec
aam
inc
cs
fimull
inc
loopne
ds
loope
xor
cmp
add
sub
add
fsubl
xchg
mov
je
test
xchg
sub
add
adc
add
repz
das
cltd
ds
cmpsl
mov
sub
scas
popa
inc
dec
jb
std
push
sahf
adc
clc
cmp
and
in
mov
repz
or
imul
xchg
js
out
std
scas
mov
sub
pop
xor
inc
sbb
xchg
mov
adc
cmc
xchg
lods
and
mov
and
pop
insb
xchg
jl,pt
xor
test
push
xchg
std
iret
pop
mov
pop
add
scas
cld
orl
dec
inc
stos
sahf
gs
sub
hlt
adc
sub
ds
ljmp
repnz
push
inc
popf
cli
js
jno
jl
add
dec
or
insb
loop
add
repz
in
push
cwtl
fists
dec
add
push
inc
fmul
or
sub
lods
stos
push
xchg
mov
mov
ficompl
subb
mov
push
fstpl
lret
xchg
add
jl
stos
mov
sub
aad
arpl
jns
rorb
xchg
push
imul
xchg
es
mov
dec
cmp
dec
mov
mov
xlat
dec
enter
and
jbe
aam
outsb
sbb
jae
xchg
sbb
sub
in
lret
mov
mov
in
push
inc
call
stc
mov
cld
sub
lds
out
sti
xlat
outsl
iret
xchg
pushf
clc
and
outsl
add
bound
mov
fisubrl
aaa
pop
xor
and
lds
adc
ds
inc
inc
dec
in
inc
xchg
and
ret
mov
aaa
mov
imul
dec
xor
fldl
enter
push
xor
pop
fdivrs
ror
cmp
fbld
stos
inc
pusha
jl
xor
push
push
adc
inc
and
pop
call
cs
dec
stos
sub
insl
and
cltd
dec
or
xor
mov
imul
lea
mov
mov
imul
mov
mov
or
xor
div
mov
jmp
push
fadds
sub
push
and
cmp
dec
fimull
pinsrw
sqrtps
push
data16
mov
sub
pop
and
sbb
fbld
call
test
lret
aad
aas
daa
dec
clc
pop
in
and
in
inc
imul
ret
lds
insl
fwait
xor
sbb
adc
dec
mov
fwait
jg
leave
sub
popf
out
out
shlb
mov
cmp
inc
mov
jnp
outsl
cmc
in
or
pop
xchg
xor
push
dec
adc
int3
cmp
or
mov
pop
enter
pop
adc
mov
test
push
push
inc
adcl
jmp
popf
lock
gs
fsubl
pop
fldl
xchg
pop
or
aam
stos
fnstenv
call
gs
mov
mov
cmpsl
and
aaa
or
xchg
push
push
or
mov
cmp
pop
push
mov
and
and
push
cli
inc
mov
xchg
sub
sub
mov
and
notl
pop
outsb
xor
mov
or
fwait
xor
mov
test
push
or
mov
dec
aaa
inc
scas
or
scas
mov
aad
dec
loope
loop
bound
mov
out
and
mov
icebp
lods
fstps
xchg
push
out
cld
add
fs
insb
ds
jns
xchg
outsl
dec
in
jp
pop
in
xor
cwtl
mov
mov
dec
adcb
ss
and
arpl
xchg
mov
test
std
and
call
xchg
clc
lods
inc
xor
jge,pn
mov
adc
hlt
in
mov
sub
mov
je
pop
sbb
mov
jl
sub
pop
push
mov
xchg
popa
mov
pop
dec
adc
mov
xor
outsl
and
add
sub
psrlw
mov
push
mov
pop
pop
int
push
mov
inc
lds
jno
add
jnp
pop
cmp
xchg
std
test
jmp
mov
subb
jns
int
xor
mov
test
cli
xchg
js
push
insb
cli
popf
push
jnp
aaa
inc
add
lea
lods
sub
jbe
mov
mov
xchg
rorb
and
xchg
push
daa
cs
cmpsb
add
jne
cmp
dec
pushf
iret
add
cmp
test
repnz
out
or
push
sbb
sti
add
jb
cmp
insl
mov
arpl
jns
sbb
f2xm1
dec
mov
rcl
adc
out
mov
popf
rdpmc
movsl
stos
adcb
bound
or
scas
adc
ds
mov
push
mov
dec
idivl
sarb
cmpsb
sub
or
push
sbb
loope
fldcw
dec
cmp
xchg
push
daa
std
ja
cmpsl
pushf
or
lret
popa
pop
dec
iret
stos
inc
popa
fcompl
aad
stos
xchg
cmp
sub
jecxz
pop
add
xlat
ret
sahf
icebp
adc
mov
xchg
add
push
popf
aas
xlat
fnstenv
sbb
xor
in
lcall
dec
jg
roll
movsb
insl
rol
push
mov
mov
mov
sbb
sub
inc
test
xchg
pop
sti
xchg
pop
imul
xor
pop
push
mov
js
sbb
push
xlat
sub
mov
jo
adc
pushf
or
pusha
jns
pop
fisttps
xchg
or
or
mov
rcrl
dec
dec
pushl
sub
loop
frstor
or
lahf
sahf
inc
or
nop
inc
add
sbb
jp
mov
jno
xchg
xlat
and
jl
mov
mov
clc
inc
xchg
fistps
sbbl
push
sub
push
rcpps
push
lahf
sub
xor
mov
xor
out
cs
repnz
dec
jle
rcll
popa
int
or
mov
sub
mov
outsl
mov
aam
in
cmp
sub
add
and
mov
inc
dec
dec
das
mov
xor
mov
scas
int3
mov
fildll
mulb
aaa
imul
xchg
in
faddl
mov
push
pop
mov
lods
jns
cmp
or
test
xchg
push
fildll
cmp
imul
cmp
xchg
shrl
fiadds
test
sbbb
pop
cmp
mov
jge
or
mov
imul
cmpsb
in
inc
out
sub
mov
sarb
cld
push
stos
push
cmp
cltd
in
js
cwtl
ret
fisubrs
popf
jp
out
jl
loop
mov
fwait
push
mov
pop
and
jmp
push
xor
insl
mov
movsb
mov
mov
sti
jmp
adc
lock
or
adc
out
movsl
push
xchg
jg
ret
pop
cltd
stc
push
cli
fs
cmpsb
push
mov
and
les
cs
sub
xor
vmread
add
mov
mov
inc
popf
sti
shl
push
fs
fldl2t
mov
dec
jmp
pop
repz
lret
or
hlt
repnz
in
nop
mov
mov
bound
adc
aas
jl
loope
and
jg
sti
mov
mov
sbb
mov
test
xchg
rclb
hlt
xor
stos
out
mov
jl
dec
cmp
cmp
in
outsl
dec
push
ljmp
add
cmp
jb
movl
movl
movl
movl
jmp
xorb
ret
xor
xor
and
mov
pinsrw
cmovb
xor
jo
push
in
push
mov
lock
mov
inc
add
out
movsl
out
dec
inc
repnz
pop
dec
leave
cmp
stos
stos
cmp
mov
or
sbb
jae
pushf
fsubl
adc
xchg
iret
addr16
jo
adc
and
lahf
cmp
rcl
scas
adc
cmpl
cmpsb
ja
andb
push
loop
mov
jg
lret
ss
jge
rcll
out
jmp
dec
sbb
fmull
fiadds
popa
and
lock
cli
adc
mov
dec
sub
xchg
xor
push
pop
push
int
dec
aam
cmpsl
pop
mov
test
out
xchg
rcr
xor
sub
cwtl
std
jnp
mov
pop
cmp
push
mov
jge
sub
mov
and
inc
mov
cwtl
outsl
pop
sub
lcall
lock
movsb
pop
in
cmc
adc
jno
xchg
sahf
leave
adc
adc
cmp
jecxz
sub
cmp
mov
das
fstl
lds
xchg
add
sti
dec
popf
cld
dec
cmovne
jnp
xchg
push
ret
jns
xor
psraw
jmp
sub
into
jmp
pushf
stc
add
add
lret
xchg
lcall
mov
popf
dec
mov
daa
psubusw
ss
xor
fdivp
sbb
and
popa
dec
pop
push
out
mov
rorl
cwtl
sub
push
repz
sbbb
out
dec
pop
xchg
popa
mov
aas
pop
popa
je
pushf
popa
outsl
xchg
sub
into
dec
iret
pop
imul
nop
nop
shrl
add
dec
cmpl
fwait
pop
xor
clc
mov
cld
push
adc
stos
sarl
xor
xchg
xchg
imul
xchg
xlat
repz
sbb
shlb
or
outsl
xor
sub
lock
mov
inc
ja
adc
and
repz
rclb
and
mov
rol
movsb
and
sbb
inc
divl
inc
xchg
dec
sub
mov
out
popa
jo
mov
fadds
jmp
movsb
xor
mov
mov
xchg
mov
cld
mov
pop
ds
mov
rcrb
lret
sub
fildl
mov
push
mov
mov
test
push
or
jmp
sahf
jno
mov
shlb
inc
mov
jmp
add
shrb
test
adc
dec
mov
rcrb
fiadds
and
or
fidivs
add
ret
repnz
mov
iret
mov
rolb
ja
test
dec
sub
in
lea
sbb
jno
pop
sub
leave
sbbl
lods
xor
inc
insl
fldl
sbb
scas
inc
sub
mov
inc
sub
sbb
imul
dec
cmp
ds
adc
add
pop
movsb
ljmp
mov
pop
mov
and
icebp
add
lods
sar
or
mov
divl
pusha
stos
jns
daa
jns
imul
int
jae
shr
call
andl
js
out
fistpl
aas
popa
sbb
cmp
jae
sub
jo
push
sub
sarb
imul
fimuls
sahf
mov
stc
mov
or
sbbl
add
cmp
push
idiv
cmp
jbe
cmpsb
mov
cmpsb
pop
push
sbb
std
adcb
rcll
xchg
es
jbe
push
int3
incb
fdivp
je
cmp
or
nop
xor
lcall
cmovb
jmp
xchg
mov
lods
sbb
data16
jecxz
sub
loope
mov
fistps
jge
cmp
hlt
jecxz
push
xor
or
mov
or
push
es
movsb
outsb
rorb
lock
ret
inc
cld
jno
or
add
mov
lcall
cmp
mov
mov
inc
je
fisubs
ss
cwtl
jb
in
or
add
xor
mov
fscale
sbb
je
mov
sub
aad
xchg
imul
sbb
out
xor
popf
jmp
pusha
cmp
jmp
stos
inc
loop
jne
out
aam
in
sbb
loope
test
xchg
lea
inc
vmovups
in
leave
gs
sbb
call
inc
cltd
andl
xor
or
push
xchg
or
outsb
mov
mov
popf
inc
arpl
xchg
xchg
or
outsb
dec
or
push
dec
push
imul
stos
lahf
xchg
lock
out
loop
vaddpd
mov
divl
movsl
add
lods
lock
aam
cmc
jns
insl
loopne
sbb
sbb
push
cmp
or
sub
cmc
adc
pop
subb
jbe
jb
push
or
add
fwait
adc
jb
mov
std
and
dec
rorl
popa
jg
push
shrl
xor
xor
and
lods
sarb
dec
stos
mov
push
jnp,pt
out
xor
xorb
lret
and
lods
mov
scas
adc
icebp
scas
orl
filds
jne
nop
jg
insl
mov
int3
test
pop
loop
les
mov
in
dec
mov
and
arpl
fsubrs
pop
sub
cmp
pop
rclb
hlt
rcll
add
inc
lock
inc
in
sbb
add
movl
movl
movl
mov
mov
or
lea
add
movl
jmp
add
inc
sti
daa
push
cs
popf
jns
mov
les
mov
stos
lea
orl
pop
mov
pop
push
pop
pop
lods
dec
rol
stos
inc
out
jns
lcall
inc
add
fcoms
repnz
imul
pop
fldenv
in
or
fwait
cmp
mov
imul
sub
mov
repz
stos
jle
loopne
xchg
rol
cmp
xor
loop
sub
sub
arpl
lcall
rcl
mov
scas
sti
shll
fildll
loopne
mov
fnop
xchg
jge
mov
stc
xor
mov
add
cmp
test
jmp
arpl
mov
mov
cs
push
cwtl
mov
dec
xor
mov
adc
loopne
mov
xor
push
sbb
inc
int3
push
mov
xchg
add
mov
cmp
xchg
movsb
and
lcall
mov
xor
loop
sub
xor
fyl2x
fwait
data16
or
mov
cmc
or
ret
pop
push
arpl
dec
or
xlat
bound
dec
pop
dec
pop
lds
mov
mov
test
dec
and
jbe
xchg
test
jecxz
add
lcall
cmp
movsl
lret
sbb
cld
inc
je
ds
mov
cmp
dec
dec
inc
adc
lret
loopne
pop
mov
leave
pop
mov
popf
xor
pop
movsb
mov
outsb
in
aaa
fsubl
sbb
adc
push
testl
sbb
pop
dec
repz
push
pop
sub
push
push
out
cwtl
xchg
push
loopne
jb
jg
ss
jno
xorb
in
aam
jbe
mov
pop
insl
icebp
xor
addr16
fsubrl
insb
ljmp
rorb
jbe
sbb
adc
mov
sub
shll
or
test
jl
sbb
or
pusha
xchg
adc
jnp
mov
inc
mov
aaa
pop
cs
cmc
lcall
lods
lahf
shlb
push
insl
inc
push
in
mov
imul
mov
push
pushl
out
mov
iret
mov
xor
mov
push
jmp
jle
xchg
stc
scas
inc
in
hlt
jl
add
sbb
movsb
push
jecxz
inc
sub
pop
jne
cwtl
in
and
mov
orl
int
mov
mov
pop
dec
dec
jno
xchg
jmp
lret
inc
stos
jo
sub
pop
in
stos
jmp
cwtl
popa
lea
pop
inc
xor
stos
xor
mov
test
cmc
pop
test
pop
jb
loope
decl
hlt
or
outsb
loopne
mov
mov
lcall
test
lret
nop
sub
push
and
imul
mov
gs
cmpb
div
call
jo
add
fucomp
jmp
mov
push
jmp
or
stos
fmuls
into
mov
or
mov
sub
sub
jno
in
inc
and
mov
push
jg
mov
mov
fsub
or
pushf
dec
fwait
mov
and
mov
jno
mov
pop
insl
xchg
lcall
inc
mov
push
aaa
pop
sbb
or
add
arpl
enter
cs
mov
jl
mov
mov
mov
dec
mov
add
inc
push
lods
push
fists
push
pop
mov
pop
mov
stc
es
xchg
dec
fldcw
das
sub
in
sbb
add
arpl
imul
xchg
rcrl
aas
mov
xchg
jne
mov
int
dec
dec
push
mov
sti
out
push
scas
mov
sub
loope
insl
sbb
pop
in
dec
jae
mov
mov
out
aas
in
arpl
xchg
rol
int
in
shrl
push
fdivrs
sbb
xchg
dec
push
fmull
lods
cmp
push
testl
cmc
rclb
test
jge
mov
jae
add
icebp
mov
dec
mov
imul
int
xor
or
cmpsb
xor
nop
jo
mov
xor
test
cmp
pusha
fwait
aad
test
sub
ror
mov
push
pop
shlb
jl
jge
adc
pop
or
sbb
fwait
mov
ds
jo
sub
sub
inc
inc
jmp
out
aaa
in
push
push
push
push
sbb
rcll
clc
jnp
ja
stos
mov
mov
adc
les
push
xorl
test
pop
imul
std
sbb
xor
shrb
outsl
xchg
js
iret
or
jle
loope
add
mov
fisttpll
dec
add
aad
sbbl
cmc
mov
add
cli
insb
mov
jle
insb
lds
aas
dec
subl
test
pop
cmp
shr
push
mov
sahf
rcrb
xlat
mov
inc
outsl
push
pop
ret
cmp
xchg
xchg
cli
push
or
pop
sbb
fwait
popl
rorl
jmp
jg
js
jae
jg
adc
lods
xchg
out
cmp
inc
mov
ss
sub
dec
push
test
mov
leave
nop
pop
mov
out
and
es
push
out
pushf
jno
sbb
push
add
test
push
jae
lock
aam
jp
notl
frstor
aad
fcoms
add
pop
enter
or
or
add
inc
int3
fwait
push
add
movl
movl
movl
mov
mov
sub
add
mov
imul
mov
mov
jmp
aad
sub
ss
adc
xchg
gs
and
les
maskmovq
divl
jns
stos
mov
or
rorl
insl
sbb
movsb
sti
ds
or
xchg
std
sbb
xor
scas
popf
jb
dec
and
xor
or
inc
dec
inc
mov
xchg
xchg
push
xor
or
inc
lret
insl
orb
jge
cmp
inc
fisttpl
test
push
outsb
insl
loope
outsl
aas
add
or
jg
popf
imul
lret
sub
adc
insb
or
stos
daa
cmpsb
or
fs
jne
sbb
dec
mov
aad
mov
sbb
inc
loope
and
sti
or
cmp
pusha
lds
xchg
adc
jle
pop
in
popw
push
andb
xchg
inc
mov
scas
loop
mov
sub
loopne
mov
out
push
jae
cmp
pop
sub
sarb
adc
pop
jge
js
xchg
sub
xchg
mov
repnz
mov
mov
push
inc
xlat
dec
ret
in
or
leave
test
xchg
xor
cmp
jb
sbb
sub
hlt
imul
lret
or
push
pop
pop
inc
jne
cmpl
test
cmc
and
in
data16
int3
scas
lds
fdivl
mov
gs
popf
stc
cld
jnp
jns
in
adc
jg
cmpsb
mov
or
cli
fdivr
jae
cmp
mov
lods
aam
andb
add
imul
push
sub
mov
in
nop
call
xor
dec
cld
push
out
lret
shl
ret
rcrl
cmp
out
jae
aam
test
test
orb
outsb
cli
sub
sbb
pop
inc
sub
outsb
cmp
jns
stos
enter
push
into
lret
mov
mov
jg
mov
mov
inc
aaa
sbb
or
cltd
jl
icebp
mov
cmp
ljmp
in
sbb
dec
daa
cmc
arpl
fistl
js
mov
scas
mov
jmp
ret
fistl
popf
cmp
pop
jns
pop
out
xadd
pop
es
xor
sarb
inc
adc
xchg
add
fs
sahf
jmp
and
add
cmpsb
jnp
aad
xor
xorb
xor
mov
nop
loope
pop
rcrl
into
roll
cmp
ss
mov
xor
imul
lret
sub
mov
sbbl
shrl
aas
jbe
mov
nop
aas
icebp
mov
cmc
stos
push
fmuls
stos
cmpb
mov
sub
sbb
shlb
mov
das
rolb
cmp
or
sarb
sti
cmc
push
and
outsl
push
inc
loop
cltd
imul
xchg
pop
add
mov
xchg
and
mov
insl
add
test
jno
sbb
or
mov
mov
pop
popf
mov
sub
loop
or
ljmp
add
iret
cwtl
arpl
std
sbb
orl
mov
adc
loopne
pop
and
jbe
lret
lock
test
cld
jae
cmc
test
outsb
inc
insl
sbb
or
push
push
jmp
and
shlb
mov
sbb
mov
daa
in
movsl
pop
push
jmp
lcall
mov
cmp
dec
aam
inc
push
mov
fwait
inc
add
mov
jge
movntq
cmpsl
xchg
xor
adc
cmpb
inc
add
jmp
lcall
xor
mulb
adcl
into
xchg
pop
fstps
cmpsb
mov
mov
lahf
stos
pop
xchg
adc
sti
mov
xor
aam
and
sub
xchg
in
lahf
out
loope
cmpsb
jmp
cmp
lcall
aam
cmp
dec
test
loop
mov
cmpsb
ficomps
sbb
out
in
and
or
pop
pushf
fimull
mov
push
xchg
xchg
inc
mov
das
dec
sarb
jecxz
stos
cld
fstps
jns
movsl
and
xlat
mov
jae
test
pop
mov
ljmp
mov
stc
sub
faddl
hlt
push
in
push
and
repz
cmpsb
xchg
shl
jne
sbb
movsl
insb
fcoml
test
das
xchg
lods
cltd
sbb
push
cltd
and
xchg
xchg
sub
outsb
fwait
pop
push
enter
psubw
and
aad
dec
das
pop
out
popa
daa
jb
iret
pop
pop
cltd
bound
pop
pop
idivl
cmp
pusha
hlt
sub
xchg
ror
cwtl
pop
popf
mov
invd
mov
mov
fcmove
mov
adc
js
xchg
mov
in
cmp
bound
adc
ja
ja
sbb
xchg
mov
aad
or
add
popf
call
andl
mov
mov
aad
repnz
or
lock
into
mov
mov
push
mov
adc
sub
xor
data16
aad
test
mov
movsl
in
mov
pop
into
inc
das
cwtl
pop
std
add
mov
mov
mov
mov
sbb
dec
mov
mov
sbb
cmpsl
aad
sub
ja
cmp
aaa
push
mov
iret
clc
and
pop
sbb
sarb
cli
mov
adc
gs
jecxz
adc
or
mov
adcl
push
add
dec
xchg
cmpb
jne
loopne
xor
pop
leave
jne
aam
mov
xor
iret
mov
into
lahf
leave
and
cmpb
lea
out
jnp
xor
mov
xor
mov
mov
add
xor
sub
mov
mov
mov
mov
mov
sub
mov
imul
mov
or
sub
mov
jmp
out
aad
aad
aad
adc
add
dec
adcl
ret
xor
mov
dec
sahf
gs
sub
jb
test
adc
push
hlt
mov
sahf
and
adc
int3
fcomip
lret
mov
inc
sbb
mov
inc
or
stos
add
pushl
mov
jle
jge
inc
lcall
fs
push
imul
pop
xchg
sub
inc
jecxz
add
mov
testl
mov
and
jg
bound
cmpb
or
pop
das
inc
fstps
adc
mov
clc
cmovae
mov
cltd
or
out
dec
loopne
popa
mov
mov
inc
enter
clc
xor
dec
aad
std
sub
or
adc
test
ljmp
ss
inc
outsb
xchg
and
sbb
cmp
adc
mov
inc
mov
int3
dec
jmp
sub
mov
or
push
inc
push
xlat
lds
gs
adc
out
rcll
lahf
jl
cmp
mov
cld
scas
js
and
gs
jo
into
push
repnz
int3
sbb
inc
pop
pusha
dec
add
test
push
repnz
ret
push
cs
jns
push
and
cmp
loopne
jo
pop
mov
pop
and
push
mov
add
add
repz
or
xchg
and
cmp
fsub
test
frstor
fs
sub
mov
subb
in
dec
push
int3
mov
adcb
arpl
fsubrl
cli
mov
pop
pusha
adc
arpl
int3
cwtl
movsl
push
insb
dec
fcmovnbe
aaa
jmp
loope
out
mov
enter
andb
sbb
popa
lret
sbb
idivb
sbb
push
sahf
sbb
push
add
jp
fs
nop
adc
test
imul
push
in
jb
mov
dec
lea
es
iret
ret
cmpsl
xor
or
add
xchg
dec
imul
sub
shl
inc
ljmp
and
filds
jg
data16
push
push
inc
pop
jnp
stc
ucomiss
dec
mov
mov
popa
jae
gs
add
push
xor
shll
add
pop
jo
and
or
adc
int
test
outsl
mov
sbb
fwait
cmpl
adc
dec
outsl
subl
add
add
pop
lds
movsl
mov
adc
or
cmp
lret
bound
les
fxch
addr16
push
or
bound
rcll
sti
dec
push
decb
aas
push
stc
xchg
xor
test
inc
inc
mov
mov
xor
enter
test
jo
adc
cld
sbbl
or
addr16
mov
pop
push
insb
mov
xor
in
in
sbb
rcrb
rcrl
cmc
dec
mov
inc
adc
lahf
jge
ds
aas
push
jno
cmp
add
pop
push
mov
adc
int3
outsb
enter
add
push
gs
xchg
lds
pop
pop
nop
push
push
lock
mov
sub
jnp
std
hlt
adc
sbb
dec
mov
or
pop
pop
std
test
not
mov
sub
and
jae
push
cwtl
or
sub
adc
cmpsb
int3
jno
push
mov
aas
ret
inc
adc
in
sub
mov
insl
xchg
insl
pop
sbb
daa
sbb
insb
repnz
mov
adcb
f2xm1
loopne
jnp
mov
inc
add
testb
fisubs
dec
mov
hlt
fstps
mov
xchg
call
std
dec
insl
dec
xchg
sbb
pop
and
popf
sbb
mov
call
incl
out
pusha
cltd
inc
mov
dec
popf
dec
shlb
scas
rcl
rorb
rolb
cs
inc
sub
inc
mov
xchg
movsb
cs
mull
sbb
push
dec
xchg
fiadds
rcrb
mov
in
cwtl
dec
mov
inc
cmp
mov
insl
xor
adc
or
sbb
out
mov
and
xchg
js
jno
filds
add
rcl
pop
xor
add
add
mov
stos
jns
gs
fisubs
mov
repnz
push
xchg
inc
sub
cwtl
mov
int
add
or
push
out
sub
daa
xor
shl
dec
xchg
imul
lods
out
das
mov
and
outsb
push
outsb
pop
out
push
ja
sahf
mov
xor
scas
outsl
jmp
aas
and
shll
push
cmp
loop
pop
addr16
cmp
fstpl
cltd
push
mov
xchg
test
ret
xchg
flds
popa
int
pop
dec
inc
test
stc
mov
dec
sub
lahf
push
fisubl
jle
and
jno
ret
or
je
mov
jmp
lcall
inc
xor
mov
int
dec
sub
pop
cmp
lahf
cmc
mov
jl
jmp
call
std
or
call
push
xchg
inc
pop
divl
scas
sbbl
ss
imul
mov
rcrb
repnz
adc
mov
movl
aam
repnz
push
incb
ret
hlt
xor
mov
sub
add
cmp
jbe
xor
inc
mov
mov
movl
movl
movl
movl
movl
movl
mov
mov
add
xor
xor
div
mov
xor
mov
mov
div
mov
xor
div
mov
sub
mov
and
imul
and
xor
cmp
je
push
movl
movl
movl
movl
movl
mov
mov
imul
xor
add
mov
and
sub
mov
mov
add
xor
mov
mov
and
sub
mov
mov
mov
mov
mov
xor
or
imul
or
mov
imul
xor
mov
div
add
mov
and
imul
and
xor
cmp
jne
pop
pop
pop
leave
ret
mov
mov
ret
mov
mov
ret
mov
mov
ret
push
mov
sub
push
push
push
movl
movl
jmp
imull
xchg
xchg
aam
push
loope
push
xor
add
aaa
jmp
xchg
aad
data16
movsb
adc
push
jno
push
xchg
cmp
pop
sbb
mov
dec
push
inc
or
pop
mov
mov
repz
in
push
pop
pop
fstl
aam
xchg
push
inc
cmp
xor
cld
sbb
add
push
clc
aaa
mov
push
push
dec
ret
push
cmp
loopne
rclb
push
testb
data16
xor
mov
out
shrb
sbb
cmp
jns
xor
cli
fs
lret
pusha
imul
cmp
inc
neg
aas
insl
stc
repz
out
inc
cmp
cmp
xor
xorl
icebp
push
in
mov
leave
outsb
mov
jp
mov
bound
xlat
inc
lret
mov
push
iret
add
stos
push
mov
sub
xor
jg
and
jge
mov
ljmp
jp
add
adc
aam
jmp
loopne
repnz
add
fistpl
xchg
mov
add
out
cmpsb
cmpb
push
outsl
pop
scas
mov
testl
inc
std
es
cmp
popf
mov
cld
mov
dec
mov
fwait
les
dec
loopne
test
lea
xor
lcall
and
mov
xor
dec
mov
aas
cmpsb
fisubs
xchg
cmp
aas
mov
bound
repnz
outsb
add
xchg
lret
lock
cmp
inc
lds
bound
imul
cmp
movsl
push
pop
xor
fwait
pop
sbb
jl
jge
out
popf
add
pop
cmp
or
dec
sbb
mov
pusha
pusha
or
out
or
push
push
mov
jmp
push
in
test
ret
cmpsb
daa
sbb
mov
add
inc
aaa
aam
stc
sti
jb
pop
adc
cmp
dec
fsubs
or
adc
or
push
int
jbe
sbb
pop
mov
mov
mov
fwait
sub
adc
outsb
int3
pop
flds
mov
loope
int3
ja
cwtl
stos
lcall
out
dec
xor
adc
sbb
xchg
mov
lds
xchg
jb
inc
mov
mov
ret
and
mul
mov
popf
in
sbb
insb
imul
mov
and
imul
inc
mov
clc
push
mov
ds
mov
fbstp
sub
sub
aas
cli
sub
push
outsb
loopne
sbb
mov
xchg
add
cmpsl
lock
mov
adc
or
arpl
fisubl
ds
xchg
je,pn
andl
out
popf
mov
mov
cli
ret
pushf
jmp
adc
jl
mov
pop
test
cld
test
push
dec
sbb
mov
adc
repz
sbb
pop
outsb
lods
push
jecxz
pop
js
fsubl
in
mov
sahf
ret
call
or
mov
jbe
popa
jb
mov
pop
shl
add
sub
cmp
pop
fcompl
mov
fcmovu
adc
jmp
sub
dec
xchg
jmp
out
cmc
icebp
shl
lock
inc
push
loop
mov
fisubrl
mov
jge
pop
iret
xchg
push
add
push
jae
mov
jecxz
adc
mov
data16
pop
adc
mov
adc
sub
inc
or
xor
push
es
out
movsl
enter
fmuls
mov
xchg
out
cmp
fmuls
test
or
loope
ljmp
daa
mov
sbb
inc
adc
adc
or
or
push
cwtl
sbb
arpl
mov
or
and
imul
repnz
mov
jbe
xchg
js
rcll
out
mov
test
xor
jle
or
sub
pushf
mov
into
jno
orb
test
jge
int
ds
jp
repz
cs
xor
xchg
repz
imul
das
mov
cld
enter
js
dec
xchg
jmp
mov
ror
mov
les
mov
add
icebp
ret
shlb
scas
insl
ds
test
dec
mov
sub
adc
mov
stc
je
cmpsl
movsb
clc
add
adc
mov
jle
jp
fdivl
pop
scas
mov
int3
inc
outsl
lods
mov
xchg
fwait
leave
cld
cmp
push
cmc
add
stc
rcrb
subb
in
ret
std
xchg
sub
shlb
jae
pop
int
sbb
or
ljmp
popf
bound
hlt
loopne
out
blcs
mov
out
inc
in
into
mov
mov
divl
fistl
testb
aam
into
inc
lds
dec
inc
xor
adc
push
sub
adc
sub
sub
mov
rcrb
aaa
mov
sbb
sarb
dec
mov
push
icebp
dec
and
popf
cmp
cs
xchg
rolb
sbb
mov
test
xchg
cmp
push
or
mov
mov
xchg
sbb
cmpl
roll
in
les
sbb
insb
inc
lret
popf
dec
repnz
cmp
xchg
ds
mov
cmp
pop
jb
sub
ss
cli
push
adc
push
mov
stos
lahf
rorl
cmp
movsb
inc
pop
xchg
pop
ret
int3
out
insl
or
ret
push
push
call
daa
insl
movsl
mov
pop
mov
sbb
xor
push
adc
arpl
int3
movsl
sub
cmp
mov
push
cltd
dec
pushf
aam
lret
cmp
jns
jge
push
pusha
dec
pop
fidivrl
adc
sub
enter
jne
cmp
xor
sub
inc
sub
call
mov
jle
js
push
mov
xor
fwait
dec
xchg
inc
mov
and
or
jb
inc
pushf
fimull
mov
dec
test
out
and
dec
enter
int3
adc
pushf
mov
and
rcrl
outsb
addr16
sbb
jge
int
call
inc
mov
pusha
add
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
jmp
pop
fdivl
jo
push
push
mov
dec
jbe
repz
pi2fd
orl
pop
xchg
lods
or
icebp
pop
in
test
je
jl
jae
jno
pop
xchg
or
scas
push
pop
mov
jne
std
inc
scas
push
test
cli
incl
popf
ss
std
mov
les
repnz
test
fldl
rolw
adcb
shrl
push
push
fimuls
pusha
dec
fsubs
xor
jns
aad
fistps
lret
dec
inc
in
jo
push
std
push
dec
and
out
shrl
clc
lods
in
lods
movsl
mov
mov
mov
loope
and
dec
ret
mov
adc
or
push
lods
repnz
cli
test
in
jne
adc
pop
in
mov
mov
cwtl
xchg
outsl
aaa
scas
lods
lea
movsl
in
dec
push
clc
outsl
push
xchg
cwtl
adc
imul
or
mov
loope
enter
sbb
leave
pusha
in
mov
arpl
push
ret
ljmp
rcl
or
andl
in
cwtl
add
in
pop
xlat
pop
pop
inc
or
mov
cld
xchg
fcmovnb
nop
jle
sub
stc
shr
inc
cmpsw
push
and
fcoml
icebp
pop
cmp
pop
scas
and
out
inc
popl
scas
mov
or
or
pop
test
xor
dec
inc
push
dec
test
mov
orw
add
mov
cltd
jno
fcomps
loop
repnz
cmp
adc
add
cmpl
xchg
insb
inc
repnz
nop
cltd
call
sbb
lods
cmp
mov
jne
sbb
xor
scas
cld
sahf
sbb
in
fsubrp
adc
dec
test
popa
add
inc
ljmp
jp
pop
in
dec
adc
movsb
ret
push
ljmp
inc
xchg
pop
sub
and
inc
jo
cmpsb
ret
jne
sub
test
mov
loopne
mov
gs
fwait
ret
mov
popa
jns
mov
pusha
in
scas
push
sarb
pop
dec
adc
lahf
sub
sbb
inc
cltd
rcl
cmp
ja
mov
outsb
push
fnstenv
lock
inc
xchg
roll
sbb
out
sub
in
sub
mov
in
mov
int3
call
repz
clc
cmc
data16
movsb
imul
xchg
sbb
add
div
out
push
mov
idivb
fcoms
aam
cltd
imul
inc
mov
push
inc
sub
pop
fsub
jp
push
sti
aaa
fwait
leave
js
add
pop
pushf
jbe
faddl
jg
jae
inc
mov
pop
push
mov
mov
es
xchg
jnp
and
jns
sbbb
lds
push
or
push
into
adc
inc
ljmp
loopne
sbb
cmp
xchg
shl
or
jg
fwait
add
lods
movntq
out
jp
add
arpl
cmpb
mov
inc
test
sub
lods
sbb
xchg
xor
jno
push
mov
nop
in
dec
das
sbb
push
and
jg
fucom
test
cmp
divb
movsl
mov
cmp
inc
push
adc
cld
aas
mov
add
popa
loope
idivl
mov
cmpsb
arpl
das
fcmovnu
or
pop
roll
test
push
cli
out
ljmp
add
dec
in
rol
inc
pushf
xor
les
pop
push
cmpsb
mov
cmpsb
or
je
cli
imul
dec
inc
outsl
mov
lcall
lods
sbb
and
and
dec
outsl
sarl
stos
sahf
aaa
adcb
ds
mov
outsb
mov
and
aas
sbb
adc
and
xor
mov
ret
jl
ljmp
mov
fnstsw
loopne
pop
xchg
subb
lds
xchg
xchg
pop
mov
or
dec
jo
dec
nop
daa
call
daa
mov
sub
mov
test
push
inc
or
or
jmp
mov
jb
daa
cmp
sub
sbb
fchs
or
jno
test
mov
mov
or
lcall
cmp
outsb
and
test
int
and
js
adcb
and
mov
daa
dec
int
out
out
cld
out
or
cld
xchg
push
fistpll
arpl
or
and
stc
xchg
cmp
push
push
inc
jo
les
cmpsl
jmp
push
std
mov
les
fimuls
jnp
or
ret
adc
iret
addr16
ret
sbb
sub
cmp
pop
cmp
leave
xchg
or
mov
cwtl
icebp
int3
jg
jbe
dec
add
and
aas
jecxz
xchg
aas
cmc
cmp
add
jecxz
mov
pusha
cmpsb
cmp
cmp
loop
loope
es
push
fdivs
enter
sbb
or
sbb
jb
xchg
xchg
xorb
fs
ljmp
lret
scas
mov
sbb
aad
push
fistps
les
mov
pop
ret
jne
in
adc
add
inc
rcrl
int
xchg
fldt
test
jge
js
daa
jb
das
add
stc
mov
in
incb
inc
sbb
out
jns
dec
js
mov
enter
popf
jo
ds
shrl
ljmp
test
inc
pop
hlt
sub
sub
xchg
movsb
mov
movsb
and
push
pop
int
repz
das
inc
int3
cmc
pop
lods
adc
loop
cld
lea
fnstcw
cli
xlat
push
js
fstp
mov
sub
add
inc
mov
ss
adc
insb
mov
sbb
les
sub
out
add
inc
movnti
dec
faddl
sarb
pop
cli
or
adc
subb
arpl
pop
or
add
jae
push
adc
or
xor
outsb
stos
cmp
loop
adc
sbb
or
dec
and
scas
mov
pop
mov
mov
adc
xchg
pop
cmpsl
mov
in
insl
cmpb
repz
sub
aad
outsl
jno
inc
jae
jb
dec
fnstsw
data16
or
inc
add
mov
mov
mov
mov
push
add
push
adc
jmp
lcall
xor
aaa
lods
inc
mov
add
inc
inc
push
aad
mov
or
mov
mov
mov
mov
lods
or
dec
das
push
cmpsl
add
into
pop
jbe
std
in
mov
shll
jnp
fldt
xor
notl
mov
pop
cmp
lods
or
xchg
loopne
inc
push
cs
xchg
jbe
mov
pop
inc
and
or
insb
inc
pop
bound
dec
hlt
jae
ja
stos
shlb
pop
rcrl
or
or
test
fstp
movl
idivb
push
rorb
out
pop
jo
add
cli
push
mov
add
cmpsl
sbbb
fs
pop
loopne
loop
mov
pop
mov
lock
mov
fistps
xchg
mov
dec
int
rep
xchg
mov
push
ljmp
push
pop
mov
mov
mov
jbe
dec
jns
lret
adc
fsts
clc
pop
cld
dec
push
sbb
push
mov
repnz
arpl
stc
pop
sub
push
dec
and
mov
sbb
mov
shlb
aaa
jp
stos
sbb
xchg
lds
lea
add
push
dec
loop
pop
cmp
imul
fdivs
mov
dec
lea
iret
out
cmp
inc
shl
test
iret
push
jmp
add
pop
mov
dec
dec
int
nop
jbe
jle
mov
je
mov
lret
icebp
pop
mov
sbb
adc
jno
or
aaa
fbstp
mov
mov
outsb
into
inc
or
add
sbb
ja
adc
xchg
cltd
out
aaa
pop
popf
add
loop
fnstcw
mov
popl
pop
xchg
add
sbb
push
lret
mov
sbb
into
pop
lods
push
fucomip
sub
jnp
push
dec
and
daa
test
cmpl
and
test
sub
fldt
daa
pop
loope
lahf
add
xchg
aam
fidivs
pushf
inc
subb
jle
inc
pop
aas
mov
or
sbb
pushl
lret
stc
lods
and
pusha
fsts
int3
mov
push
aas
xor
subb
mov
push
pop
adc
stc
sbb
mov
inc
lcall
daa
insb
lret
jmp
cmp
je
pop
popf
sbb
dec
push
aaa
jno
inc
xlat
fwait
xchg
adc
aaa
ds
sub
icebp
inc
in
mov
test
push
xorb
dec
dec
jno
into
insb
xchg
test
mov
iret
gs
mov
cmp
ds
stos
lcall
add
and
push
sub
fidivrl
imul
sbb
rcrl
cmp
xchg
insb
add
dec
push
push
xchg
es
int
push
sub
dec
sub
sbb
stos
outsl
dec
je
jo
pop
mov
aad
xchg
sbb
push
pushf
aas
cmp
mov
mov
ret
xchg
mov
test
lock
pop
orl
inc
or
sub
shll
adc
div
fldcw
inc
lock
mov
mov
call
idiv
xchg
pop
mov
stos
scas
shrl
pop
insb
cmc
sbb
cmp
push
and
dec
push
dec
fldcw
int3
and
sbb
adc
or
out
mov
xchg
sbb
and
dec
clc
push
in
shrb
mov
rorb
mov
cmpl
xchg
xor
icebp
movsl
inc
je
out
hlt
test
test
cli
sbb
stos
lcall
xor
loope
test
jno
aam
sbb
mov
mov
push
scas
out
jne
inc
or
mov
ja
push
mov
xchg
or
push
daa
popa
outsl
cwtl
subb
lret
xor
fwait
movsb
int
adc
pop
push
push
fs
xor
mov
lods
sub
test
in
add
push
pop
dec
arpl
das
dec
aas
jmp
fstps
je
push
lahf
lret
cs
fstp
cmpsl
ss
lea
inc
shlb
cmc
mov
fcoms
imul
push
xor
cmp
pop
dec
inc
fwait
push
mov
push
mov
inc
in
push
call
jne
out
cmp
jmp
xchg
popf
test
push
adc
and
jb
rcrb
adc
cmp
int
adc
daa
fists
jo
fidivrl
mov
lock
orl
pop
sub
mov
push
inc
cmp
insb
inc
jne
rcl
pop
das
pushf
out
mov
mov
inc
inc
sbb
mov
lds
xor
fwait
mov
orl
adc
xchg
adc
lods
pop
je
fwait
and
in
xchg
sbb
rcrl
rcrl
fwait
push
jg
add
mov
in
cld
and
mov
inc
fldl
jnp
shll
daa
addr16
repz
adc
pop
adc
add
rclb
test
std
xchg
sub
outsb
adc
loopne
cmp
push
pop
xchg
clc
dec
mov
icebp
jns
push
imul
jp
dec
fsubrl
mov
sahf
in
xchg
daa
sbb
xchg
rcl
cmp
or
sti
daa
jmp
lret
in
dec
ret
add
test
popf
add
cld
in
das
push
ss
xchg
cmp
lock
stos
mov
jecxz
insl
es
or
or
call
call
in
xchg
pop
pop
push
xlat
cmp
cmc
repnz
adc
leave
mov
inc
sub
and
dec
imul
sub
cmpsb
loop
in
lock
cmp
inc
jbe
push
clc
sbb
mov
mov
les
ficoml
in
sbb
add
leave
dec
call
inc
xchg
jmp
inc
rorb
jno
xchg
test
out
or
or
adc
jb
add
scas
daa
or
sbb
jne
pop
sub
cmp
sub
pop
inc
loop
ret
aaa
test
xchg
cmp
xchg
push
repnz
jge
stos
add
push
test
cmpsl
xor
lret
xor
xor
shlb
jo
dec
inc
mov
lods
lahf
mov
jmp
dec
mov
testb
mov
xor
ror
lods
cmc
push
push
cmp
mov
mov
addl
stos
mov
loope
adc
int
sub
jmp
and
xchg
add
dec
push
push
call
mov
mov
sub
mov
jmp
mov
and
cwtl
sub
inc
out
out
push
push
add
pop
jmp
jl
fcoml
mov
cmpsl
hlt
in
mov
xor
or
mov
pop
icebp
pushf
cmpsl
push
xor
adc
inc
sub
push
aaa
loop
test
sbbl
mov
cmc
sti
loop
lret
pop
jg
dec
jns
lcall
cmp
cmpl
ret
lret
lods
test
sub
fidivs
movsb
dec
mov
or
sub
arpl
mov
aad
and
aas
sbb
lea
add
scas
inc
es
int3
nop
subl
push
pop
test
sbb
mov
fnclex
pop
repz
push
test
aas
pop
dec
xor
test
pop
pop
divb
and
mov
cmpsb
adc
and
notl
fwait
imul
push
decb
sbb
push
mov
and
pop
mov
imul
lds
xor
iret
cmp
mov
dec
mov
xor
sub
sarl
pop
add
adcb
lret
and
pop
dec
xor
add
pop
ljmp
mov
jmp
aad
adc
mov
adc
and
sbb
sbb
and
outsl
jo
movsb
cmp
add
leave
mov
pop
sbb
xor
push
pushf
stc
ljmp
daa
mov
and
in
inc
test
mov
or
mov
and
xchg
leave
jno
aam
je
or
addr16
adc
pop
es
dec
fstps
in
xor
mov
xchg
xchg
fidivrs
mov
push
xor
rcl
mov
cs
push
popf
and
xor
xchg
mov
dec
jg
or
test
cmp
stos
adc
jo
dec
jle
xchg
test
ret
fmulp
add
jae
push
mov
push
push
lcall
cmc
and
pop
negl
mov
mov
mov
sarl
jne
xchg
xchg
cwtl
mov
xchg
imul
popf
mov
mov
ret
push
loop
dec
cmp
ror
mov
insl
sar
dec
stos
cmpsb
pop
into
out
lret
dec
imul
and
je
pop
sub
mov
mov
iret
and
stc
pop
dec
nop
out
push
fwait
sub
jp
and
cmp
mov
push
jae
mov
inc
movsb
sti
push
sbb
inc
jns
scas
sbb
mov
imul
jae
dec
jle
and
jecxz
mov
cmp
aaa
test
rcrl
lds
mov
lods
iret
lea
sub
sub
gs
cmp
adc
mov
push
stos
xor
mov
stos
arpl
xchg
push
sti
test
or
jnp
adc
add
mov
lcall
sub
jnp
dec
mov
cltd
pop
fisubrl
mov
push
faddl
in
xchg
xchg
in
cmp
ljmp
and
sarb
dec
sahf
and
dec
fsubrl
dec
mov
push
sahf
nop
mov
ficomps
pushf
dec
pop
out
xor
pop
pop
sub
xchg
mov
lret
lea
xchg
mov
lret
stc
fisttpl
push
mov
lea
jns
inc
repz
testl
push
imul
in
jns
pushf
loopne
adc
jp
div
pop
iret
dec
cmpsb
xchg
int3
xchg
gs
fcomps
push
or
jo
roll
int3
mov
adc
out
sub
sub
xor
in
inc
mov
in
jae
jnp
aaa
push
dec
inc
data16
iret
mov
cltd
stos
loop
ret
push
ror
cmpl
sbb
mov
mov
jnp
je
sbb
mov
lret
and
imul
cmp
add
fsubr
es
stc
inc
xor
xchg
cmp
ja
in
sub
mov
sub
iret
mov
scas
mov
popf
cmp
clc
push
insb
test
out
daa
mov
pop
cltd
cmpsb
aas
pop
xor
sub
mov
xor
inc
xor
nop
cmp
pop
mov
mov
js
add
ljmp
mov
das
ret
or
push
xchg
add
xchg
xor
rcll
mov
xor
idivb
cmp
pop
adc
ret
out
mov
add
cmpsb
bnd
int
mov
sub
push
or
adc
sub
lcall
mov
or
push
xchg
xor
dec
mov
or
xor
inc
mov
notb
push
or
data16
and
sahf
sbb
popf
mov
dec
pop
mov
fimull
insb
cwtl
fcoml
popf
loopne
dec
mov
pop
insb
dec
and
scas
sub
xchg
les
mov
mov
mov
sbb
fdivrl
pop
mov
sahf
add
mov
movsb
inc
fwait
cmp
add
or
frstor
push
lret
bound
test
adc
rcl
pop
pop
ficoml
es
sub
jbe
sub
and
pop
jl
sub
cmc
inc
fmulp
shlb
dec
push
in
mov
or
sbb
js
xchg
imul
mov
mov
out
mov
in
xor
mov
and
jae
mov
popf
push
scas
push
cmc
xchg
pop
fdivs
inc
rorb
push
adc
ss
dec
mov
pop
sbb
lock
call
mov
outsb
into
fisubrs
loope
nop
push
out
jns
pop
xchg
mov
xor
mov
push
nop
hlt
push
cltd
sub
lock
lea
xchg
mov
cmp
xor
fwait
jecxz
jge
lods
rcl
js
js
out
pop
aad
sub
sahf
jo
sub
stc
stos
mov
xor
pop
ror
adc
jecxz
repz
mov
pop
sub
jb
add
sub
adc
ljmp
and
rorl
rcrb
push
cmp
fcoml
push
cmp
sub
xor
pop
insl
and
imul
addr16
das
push
bound
mov
or
call
or
pop
clc
jo
dec
and
add
outsl
test
lcall
fisubrs
addr16
lock
insl
mov
sbb
sbb
mov
push
push
push
push
call
add
adc
shld
shl
mov
mov
mov
mov
mov
mov
push
add
push
adc
push
push
call
mov
mov
sub
mov
sbb
mov
push
jmp
lcall
or
push
and
add
and
lret
mov
dec
mov
sbb
push
es
out
ljmp
scas
out
ret
test
jno
lea
pusha
ss
xchg
icebp
das
inc
pop
out
sbb
mov
sbb
out
push
push
mov
into
xchg
jno
jnp
xchg
sbb
mov
aas
cmpsb
and
mov
test
outsl
stos
dec
loopne
repz
loop
mov
mov
inc
aam
cmc
dec
call
add
mov
popf
out
out
int3
or
push
jbe
ret
gs
dec
sub
loopne
movsl
stos
push
in
cmp
int
call
mov
fsubr
sub
mov
xor
shl
decb
or
xchg
sbb
lret
sbb
cmp
shlb
inc
dec
aam
testl
arpl
push
cwtl
and
int3
repnz
movsb
xchg
inc
fstpl
aaa
shl
sub
dec
dec
fsubr
pop
out
lcall
inc
movsb
push
out
mov
inc
sub
jno
fnstcw
cmp
mov
in
jno
dec
xlat
data16
xchg
sbb
xchg
aad
outsl
jnp
xor
orb
stos
insb
mov
and
ds
outsb
sbb
lret
outsl
mov
add
sbb
sbb
jge
repnz
aaa
mov
insb
inc
lcall
in
adc
imul
das
cwtl
pop
mov
cmp
gs
cs
or
test
stos
loope
or
inc
mov
jle
cmpsb
cmp
call
xlat
pop
movsl
pop
roll
call
stos
stc
mov
movsl
inc
and
xorb
fwait
mov
rep
test
mov
sub
mov
in
pop
sti
xchg
and
cs
jbe
cli
pop
sub
pop
rcll
inc
sub
pop
pop
icebp
stc
js
cmp
sahf
leave
pop
rorb
dec
jno
aas
xchg
xor
bound
cmp
into
mov
sbb
mov
cmp
push
or
jnp
dec
inc
test
lcall
xor
call
mov
or
dec
outsb
inc
cmc
dec
shl
clc
inc
bound
sub
arpl
loopne
xor
repz
lds
or
push
jo
mov
inc
jno
and
popa
xor
mov
push
cmp
xchg
ret
inc
mov
hlt
lcall
pop
test
outsl
aam
out
fisubl
gs
jl
fiadds
outsb
sub
out
add
std
xor
fldl
jb
jno
add
and
sbb
jb
inc
add
mov
call
add
push
movsb
cmp
push
xchg
loope
jne
out
dec
xor
mov
xchg
pop
push
lea
mov
pop
shlb
mov
xor
mov
ljmp
pop
dec
shlb
lcall
nop
stos
out
mov
jae
mov
cltd
nop
pop
mov
pop
inc
dec
sub
idivl
mov
dec
jp
mov
sub
xchg
nop
dec
movb
roll
cmp
call
loope
lea
dec
adc
cmp
addr16
xchg
mov
sahf
push
or
cmp
push
js
in
rcll
xor
lret
fwait
insl
loopne
xor
inc
adc
mov
or
cmp
dec
jno
jge
fstpt
cmp
into
dec
inc
into
cmp
push
addr16
not
es
cmc
mull
sub
cmpsb
pop
jb
lods
dec
push
scas
movsl
mov
sbb
cmp
mov
ljmp
cmc
ret
insb
jo
xor
enter
inc
jbe
and
fistps
scas
xor
or
out
pushl
pop
sbb
fwait
pop
fwait
dec
fsubrp
ljmp
push
cmp
rcrl
mov
push
repz
mov
jae
xor
testl
add
pusha
rcr
nop
and
pop
lret
andb
cmp
ja
mov
add
shr
test
cmpsl
xchg
jne
data16
sbb
sub
je
or
sarl
rcrl
jnp
subb
aad
xor
dec
mov
fdiv
icebp
mov
pop
pop
inc
pop
xor
or
clc
or
lahf
sub
cmp
cmp
sti
cmp
mov
outsb
leave
testl
mov
jno
mov
fisubrs
jg
das
pop
xor
mov
jns
xor
cmp
jle
mov
aas
pop
inc
icebp
mov
and
xor
cmovge
mov
leave
dec
jp
mov
scas
xchg
sbb
lea
xor
xor
sbbl
test
push
xor
push
add
jne
repz
and
gs
loopne
ja
in
movsb
cmp
sub
bound
pop
adc
inc
movsl
testb
xchg
adc
or
xor
mov
push
fidivrs
sbb
dec
jns
cs
sti
in
cli
ret
xor
jmp
xchg
sti
push
adcb
xor
or
add
mov
cmpsb
dec
and
test
adc
or
or
out
or
mov
or
nop
cmp
mov
sahf
add
adc
dec
jnp
pop
or
ret
push
js
or
fldl
faddl
jecxz
test
cmp
arpl
icebp
adc
pop
in
lcall
pop
pop
xchg
aas
shlb
mov
sti
cld
push
test
mov
cltd
icebp
andl
mov
adc
mov
cli
mov
cmp
inc
rcrb
out
sbb
ds
xchg
in
pop
std
mov
mov
movsb
sub
xor
sbb
test
fldenv
fdivl
loopne
sbb
and
mov
and
push
mov
cmp
fistl
jno
mov
cmp
sbb
sub
fidivs
testb
lret
jge
dec
xchg
dec
push
in
cmc
add
cs
addb
mov
test
dec
loopne
cmpsb
xchg
mov
xor
sub
gs
repz
stos
jle
mov
mov
cmpl
push
push
push
call
add
adc
shr
xor
or
or
xor
mov
push
xor
mov
mov
mov
jmp
mov
sbb
popf
or
rcrl
add
clc
iret
push
fwait
mov
sub
outsl
imul
lock
push
pushl
xor
sub
ret
clc
test
imul
pop
in
jp
sbb
xlat
jae
pop
sahf
rol
push
fdivp
std
push
xor
dec
inc
sarb
push
add
mov
xor
andl
mov
adc
insb
cs
stos
lods
push
push
jecxz
outsl
movb
scas
jp
xor
lret
adcl
lods
mov
mov
aad
ffreep
xchg
pop
clc
pop
add
sub
xchg
lcall
dec
bound
movsb
sbb
scas
inc
decl
mov
cltd
jecxz
in
mov
dec
out
pop
pop
lods
adc
sub
rcrl
jge
jo
jl
inc
dec
stos
divl
mov
repnz
pop
inc
push
cmp
or
test
push
in
jecxz
mov
lret
in
dec
test
sub
cmp
inc
sbb
mov
int3
insb
push
ret
jl
lock
dec
dec
or
sub
cmp
loopne
repnz
mov
sar
mov
sarb
sbb
mov
stos
rcrb
cmpsb
stc
fcom
fwait
push
pop
push
mull
lret
pop
lds
or
sbb
dec
loop
sub
cmp
cwtl
sbb
pop
mov
dec
arpl
jo
out
sub
dec
daa
pushf
jmp
pop
xor
fcompl
mov
and
dec
popf
in
xlat
jp
mov
les
in
adc
inc
add
nop
daa
outsl
xchg
int
push
sbb
ljmp
cmp
or
scas
mov
push
jl
in
dec
pusha
lds
sub
lods
clc
ds
mov
leave
mov
fs
sarl
cmpsb
icebp
add
arpl
pop
mov
jle
imul
push
dec
pop
cmpsl
pop
pusha
into
arpl
mov
dec
orb
pushf
test
pop
clc
and
sub
scas
testb
cld
add
enter
add
inc
jecxz
pop
jecxz
dec
jno
sub
adc
jne
inc
test
pop
cmpl
pusha
mov
or
cli
xchg
mov
push
sbb
cmp
in
cmc
add
or
and
stos
jae
pop
xchg
push
mov
push
jmp
inc
fbstp
fidivrl
and
lds
cmp
cmp
or
sbb
div
je
pusha
fistpll
jl
outsb
mov
pushf
xlat
imul
divb
xor
xor
jmp
out
or
xor
negb
aaa
inc
pop
push
or
xchg
adc
pop
push
dec
push
and
cmp
sub
mov
or
shrb
xchg
shlb
repnz
icebp
mov
jge
rclb
je
mov
mov
mov
mov
fwait
mov
mov
fistps
mov
jl
clc
mov
pop
pop
jne
mov
mov
mov
cmpsl
mov
fwait
dec
ficomps
sub
testb
cs
xor
inc
outsb
xor
fldcw
dec
mov
push
jge
fs
inc
mov
xor
in
and
adc
js
es
mov
or
hlt
xlat
addr16
mov
in
and
iret
inc
gs
and
loopne
stos
xchg
shlb
sub
or
test
daa
mov
stc
or
sbb
mov
ret
mov
inc
lret
push
push
cmp
and
sub
lret
nop
inc
mov
std
inc
sti
xchg
cmp
dec
push
testb
out
push
pop
adc
sub
mov
repz
mulb
int3
push
xchg
lret
inc
test
js
loope
xchg
cwtl
xor
hlt
in
out
aad
mov
xchg
mov
fst
mov
in
lods
push
or
shrb
cli
or
cmp
cs
add
inc
mov
cmp
xchg
sti
and
popf
js
add
sti
aas
mov
pop
ljmp
cmp
pop
icebp
lds
xchg
jp
hlt
imul
and
dec
push
orl
sub
adcl
mov
nop
int3
mov
dec
outsl
adc
scas
or
cli
pop
jl
outsl
pop
enter
lods
stc
lret
and
int3
jmp
xor
mov
or
jae
push
scas
fs
cli
mov
outsl
mov
jmp
adc
iret
fcmovnbe
jb
pusha
add
sub
movsl
xor
jg
mov
in
insb
sub
lock
stos
push
mov
push
xlat
lock
cmp
adc
cwtl
rorb
dec
loop
lcall
mov
jo
or
repz
loop
test
test
cmc
insb
mov
dec
insb
ret
jle
push
ret
or
mov
out
adc
insb
int3
sbb
dec
out
cmp
or
stos
pop
mov
mov
mov
dec
leave
rcrb
jl
jmp
cmpsl
jmp
scas
leave
sub
adc
lret
ja
pop
mov
and
scas
out
jge
mov
scas
std
mov
repnz
or
sahf
and
loop
push
call
inc
jp
inc
test
pop
mov
imul
ljmp
sbb
jp
add
inc
out
in
jns
or
cmp
add
clc
call
mov
sub
mov
fcmovu
sub
adc
xchg
jge
rclb
mov
aam
ret
loopne
inc
es
inc
inc
push
pop
daa
or
les
test
fistpl
in
popf
shll
sbb
shll
cs
and
lods
push
dec
in
jmp
ja
push
cmp
xor
push
enter
popa
in
clc
sbb
jecxz
outsl
mulb
aam
adc
pop
cmpsl
fcoms
mov
mov
int3
das
jge
in
sub
cmpsb
and
lcall
jle
loopne
shlb
shll
jmp
rolb
popf
add
dec
or
adc
jbe
jmp
xor
adc
orl
lahf
jl
or
sub
call
mov
mov
mov
add
mov
adc
mov
and
and
add
mov
adc
add
mov
adc
jmp
mov
xchg
adc
mov
repz
shll
add
daa
popf
loope
push
jge
aad
repnz
add
mov
lcall
pop
cmp
aad
in
addr16
xor
loopne
into
inc
call
push
movsb
test
and
pop
mov
sahf
add
sub
popf
loopne
pop
add
xchg
inc
fstpt
sahf
nop
inc
mov
xchg
in
adc
jae
mov
mov
jne
add
cld
subb
jp
cmpsl
mov
xchg
add
sub
pop
lret
xor
adc
adc
xor
movsl
fistpll
jg
dec
ret
push
mov
lret
lods
repnz
sbb
cmpsb
jb
mov
rcrl
xor
mov
pop
sbb
les
mov
shlb
lea
cmp
lods
leave
stc
xchg
aas
mov
test
in
das
mov
and
rcll
jl
icebp
jl,pt
adcb
xchg
dec
shll
int
cld
push
mov
std
cmp
jmp
imulb
dec
jg
sbb
repnz
and
shrb
jg
sub
int3
test
mov
jns
adc
push
mov
mov
add
pop
daa
mov
push
rolb
lcall
push
inc
push
lods
add
insl
add
lods
fs
popa
mov
ljmp
lret
scas
fimull
arpl
sub
data16
pop
mov
arpl
inc
mov
aam
test
mov
loop
push
mov
mov
jmp
inc
xchg
dec
jg
in
test
jns
fbstp
and
fdivs
xchg
aas
xorb
push
icebp
lret
aaa
dec
sub
cli
adc
inc
out
inc
cmp
mov
lea
aaa
lahf
xchg
cltd
pushfw
mov
adc
sub
stc
fldl2e
decl
dec
and
cld
sbb
stos
sub
repnz
leave
add
add
cmp
sbbl
stc
add
in
shr
sbb
or
push
jle
lret
sbb
cmp
mov
data16
je
fidivrs
inc
lods
int
jge
dec
je
inc
add
loopne
sbb
scas
adc
test
mov
mov
test
hlt
scas
push
divb
xchg
xchg
loop
push
test
and
add
rcrb
pop
xchg
pop
call
test
xor
stos
daa
or
lcall
push
xor
jbe
and
outsb
dec
fistps
movsl
adc
es
or
cmp
xchg
mov
pop
and
cltd
inc
or
es
mov
pop
lea
sahf
push
pavgb
mov
mov
insl
sbb
xor
incl
loope
xchg
loope
fidivrs
jecxz
mov
je
inc
jns,pn
cmpsb
fnsave
rcrl
stos
lods
cltd
shrb
xor
fs
leave
or
inc
popf
out
pop
and
mov
mull
out
call
inc
sub
loopne
add
xor
dec
push
mov
mov
enter
aas
into
xor
sub
scas
mov
cwtl
add
xchg
hlt
notb
cld
dec
sbb
mov
add
aad
stos
mov
lds
adc
sbb
mov
mov
sub
add
xchg
push
xchg
dec
cmpsb
mov
mov
fnstcw
roll
scas
cmp
repnz
sub
or
mov
push
pop
sub
inc
scas
dec
pop
inc
es
mov
sbb
cmp
shrb
rcll
sub
push
cmpb
push
fptan
and
movsl
mov
jae
arpl
add
popa
fcompl
sbb
addl
daa
pop
mov
out
shlb
pop
pushf
add
mov
dec
lcall
push
sbb
sbb
repnz
aaa
ss
mov
push
xchg
xchg
in
lea
xchg
mov
les
push
pop
lcall
mov
mov
ss
sbb
imul
or
inc
jns
or
sbb
dec
mov
or
in
fsts
and
and
roll
push
sti
cltd
pop
inc
cltd
inc
mov
popf
mov
in
in
mov
sub
movsl
ja
leave
data16
cmp
add
mov
inc
addr16
sbb
fs
loopne
xchg
push
popl
or
cs
aam
imul
jbe
pop
call
fbstp
sub
sbb
ljmp
add
pop
push
dec
cld
push
dec
mov
lcall
bound
aad
or
loop
in
sti
xor
out
push
ret
xchg
repnz
pop
jmp
inc
dec
loopne
iret
mov
into
mov
negl
fildl
into
lods
cltd
inc
stos
into
cmp
mov
inc
rorb
or
mov
movl
lahf
and
or
xchg
les
das
pop
pop
pop
xorl
jns
push
das
lret
push
jbe
xchg
or
inc
aaa
data16
inc
xchg
xchg
test
sub
or
mov
jmp
cmpsl
inc
add
mov
inc
enter
cmc
jnp
push
inc
pusha
ds
mov
cmp
fists
out
fists
fsubl
adc
or
outsb
popf
mov
sub
out
adc
jbe
in
inc
xlat
mov
mov
lret
popa
xchg
movsb
arpl
push
fwait
and
pop
movsb
into
xchg
or
dec
test
scas
xlat
and
lock
jns
push
aam
jle
mov
jnp
push
or
jo
addr16
inc
addr16
push
cmp
movsb
movsl
sbb
cs
cmp
ljmp
xor
mov
pusha
xor
add
jl
clc
add
sbb
insl
fcmovne
sahf
inc
push
jle
sub
inc
xchg
jno
mov
cmp
jge
inc
push
ss
pushf
stos
xor
movsl
jg
sbb
mov
imul
cmc
pop
in
int3
movsl
ja
sbb
xor
sbbl
shr
or
adc
mov
les
and
fstl
push
mov
mov
mov
push
push
push
jmp
dec
js
gs
push
pop
cmp
xchg
and
add
push
stc
aam
xor
xchg
int
mov
ja
cltd
jg
les
scas
test
xlat
fsub
xchg
sbb
js
pop
arpl
hlt
popf
test
inc
adc
fdivl
jg
daa
cs
jns
nop
inc
aad
push
dec
fmuls
xlat
or
sbb
or
sub
repz
scas
sar
xchg
push
lock
cwtl
mov
mov
add
and
ljmp
pop
dec
sub
repz
add
out
lods
imul
mov
arpl
sub
jae
sub
push
jbe
pop
xchg
lret
jecxz
int
movsb
stos
shlb
ja
sub
jnp
or
movl
cltd
inc
cltd
stc
call
push
fiaddl
fistpl
nop
cld
jo
cmp
test
dec
jmp
shl
sti
popa
mov
test
xor
out
add
push
comiss
mov
mov
mov
mov
pop
mov
jl
ljmp
mov
push
inc
or
and
lahf
pop
sti
ljmp
or
dec
fadds
dec
push
jp
sbb
out
idivb
sub
pextrw
xor
sub
jge
and
shl
adc
loop
mov
xor
ljmp
rcrl
dec
insb
popa
and
cs
sub
adc
in
stos
dec
imul
iret
sbb
jbe
dec
mov
daa
les
xor
outsl
insb
push
xchg
fs
pop
lods
test
repz
js
insl
in
xor
ja
stc
or
push
insb
sbb
mov
cmp
rcll
inc
popf
seta
ret
pop
icebp
stos
popf
xchg
sbb
xchg
jg
ds
aad
fstl
jg
int
roll
in
sbbl
out
mov
fucomip
inc
inc
pop
pushf
fbld
addb
mov
incb
out
mov
mov
lods
sbb
cmpsb
adc
jle
mov
faddp
pop
lock
mov
xor
std
push
and
fildl
sub
and
and
jmp
mov
push
xchg
or
dec
inc
test
lods
inc
out
ja
and
jns
lcall
clc
adc
pushf
outsb
aad
fnsave
lds
out
jne
popf
ljmp
mov
out
push
xchg
or
mov
cmpsb
fsubs
inc
dec
in
push
fucom
add
dec
add
dec
hlt
fisttpll
xorl
push
sub
push
mov
mov
or
or
cmp
ret
mov
imul
pushf
sub
mov
dec
ja
or
aad
insb
and
addr16
jo
or
push
push
data16
jnp
sub
mov
push
mov
pop
jmp
or
sbb
push
lahf
cli
fisttpl
push
das
and
mov
push
push
sbb
adc
nop
adc
xchg
bound
mov
scas
cmp
rorb
pusha
aas
popf
sbb
mov
ds
jle
adc
outsb
push
fsts
repz
and
movsl
sbb
push
addb
iret
push
rorb
fiaddl
cmpsb
add
out
sub
cmpsb
jge
xchg
call
enter
jnp
clc
mov
movsl
pop
dec
mov
push
popfw
mov
cmp
mov
pop
jo
sub
xor
push
sysret
push
add
insb
inc
and
je
mov
je
jns
popa
inc
xchg
cli
push
pop
mov
test
mov
jae
mov
mov
sub
xorl
mov
lret
popf
cmp
mov
aas
cmp
outsb
mov
and
stos
fstpl
decb
cwtl
data16
call
outsl
fiadds
inc
xor
out
int
mul
test
lcall
dec
scas
repnz
int3
or
jge
int3
jnp
mov
cmp
lods
aas
xor
lret
insb
nop
rorl
imul
add
xor
xchg
popa
repnz
add
inc
enter
pop
push
push
push
insb
inc
and
mov
aas
add
aas
nop
mov
inc
out
outsl
add
xor
push
cmp
aad
adcb
pusha
test
movsb
xor
test
add
movb
int3
in
push
mov
lds
ss
add
push
fs
ljmp
int
xor
sub
xchg
loope
xchg
mov
jl
pop
mov
ret
outsb
mov
mov
test
sbb
clc
or
js
scas
out
ja
push
icebp
mov
mov
pushf
jg
push
sub
rorb
add
jno
jl
sub
cli
scas
jb
aad
fwait
inc
pusha
aaa
popf
mov
xchg
mov
cmp
adc
jle
shlb
rorb
cmp
pusha
cli
push
lret
jne
and
pop
adc
negl
lcall
dec
and
pusha
sbb
xchg
jecxz
das
or
popf
iret
and
inc
outsb
sbb
lret
ret
push
mov
add
sub
es
sarb
lds
pop
ret
dec
int3
ss
xchg
gs
adc
mov
cmp
outsb
cmp
push
mov
les
and
sbb
shl
dec
leave
cmp
test
aas
jbe
les
hlt
lahf
push
sbb
movsl
add
mul
sbb
insl
out
jae
mov
iret
cmp
insb
lock
adc
cmp
lret
ljmp
push
test
imul
add
mov
cld
std
push
xor
dec
lods
sbb
ss
xor
jbe
mov
lret
pop
inc
lret
cmp
push
mov
and
mov
ds
jecxz
loop
aad
or
sahf
es
sti
lret
cmp
pop
xor
xchg
adc
and
sbb
mov
in
sbb
aaa
gs
push
imul
sub
aam
push
jne
cmc
add
cli
sub
sub
sbb
jmp
add
push
push
push
push
call
mov
mov
mov
or
mov
mov
shl
mov
or
mov
xor
xor
call
add
mov
mov
push
jmp
fnstenv
inc
mov
mul
push
xchg
inc
or
add
sub
decl
dec
sbb
test
mov
jb
outsl
pop
mov
xor
div
dec
and
fistpl
shlb
cmpsl
and
jg
xchg
int
loop
out
xchg
shrl
pop
mov
sbb
in
je
mov
shlb
sbb
lea
or
repz
lea
pop
jns
add
adc
mov
xor
loop
inc
mov
mov
movsb
test
outsl
pop
dec
xor
mov
mov
fildll
lea
inc
test
rcll
dec
addr16
mov
sbb
and
scas
sbb
in
cwtl
lods
sub
xor
cltd
movsl
and
fdivs
xor
ficoml
outsb
jne
bound
pop
cld
lds
dec
lea
faddl
and
sub
or
mov
cmp
and
je
xchg
mov
stc
mov
inc
inc
xchg
or
jmp
sub
pavgb
in
outsb
sub
imul
jecxz
sub
push
jae
aam
lret
ja
lock
adc
es
inc
mov
mov
sub
push
mov
shll
imul
std
sahf
es
sbb
lret
mov
push
popf
or
xchg
xor
push
jo
orb
fcoml
mov
fdiv
cmpsl
test
dec
rcrl
mov
push
adc
das
das
push
es
dec
adc
add
fisubs
adc
std
js
lret
andb
fdivp
jnp
sub
xor
gs
jo
flds
mov
fs
mov
fmul
mov
or
stos
jle
mov
mov
test
xchg
pop
ss
pop
shlb
rcll
pop
lock
pop
xchg
pusha
mov
push
stos
mov
aaa
pop
push
or
dec
test
mov
lods
inc
incb
sbb
push
xlat
inc
lret
lret
andl
incl
fdivr
mov
addr16
scas
aas
loope
mov
mov
adc
jge
inc
jnp
ret
xor
stos
je
jo
std
jns
mulb
fwait
xchg
xor
cwtl
into
scas
adcb
sbb
sbb
repnz
dec
push
imul
test
mov
lret
repz
or
and
mov
push
push
sti
adc
in
fimull
iret
pop
fmull
into
sub
out
in
test
mov
rcrb
adc
cmpsb
push
mov
pop
aam
and
out
mov
repnz
hlt
pop
mov
sub
mov
cmp
pop
mov
test
jne
xor
mov
les
xlat
scas
add
data16
ret
mov
outsb
inc
addr16
and
gs
xchg
sub
cltd
mov
mov
jne
jecxz
jne
test
mov
push
popa
xor
sbb
adc
dec
iret
outsl
rol
in
setbe
sub
je
and
inc
in
mov
int3
mov
mov
mov
add
push
mov
inc
inc
std
repnz
test
jnp
lods
sbb
adc
pop
push
inc
pop
push
arpl
push
aad
push
sbb
enter
cmpsb
lcall
sub
push
mov
dec
cmpb
dec
jecxz
repnz
test
and
cltd
pop
xor
mov
jg
push
sahf
dec
mov
dec
clc
add
adc
add
xchg
and
sti
mov
and
push
movsb
sub
sar
std
sub
dec
pop
pop
aad
fisubs
neg
push
mov
sub
push
pop
mov
adc
inc
pop
lahf
mov
mov
pusha
push
push
enter
and
dec
inc
addr16
push
dec
in
push
adc
and
mov
or
jp
inc
inc
sub
mov
cmp
sbb
add
mov
sbb
and
push
sbb
loop
pop
adcl
mov
fistpl
arpl
jmp
sbb
and
aas
xor
xorb
sub
idivb
sti
call
pop
bound
stc
orl
mov
mov
fs
fisubl
pop
adc
pop
sbb
inc
add
or
pushf
push
jno
cltd
popa
push
push
outsb
bound
loopne
mov
mov
jne
inc
repz
insb
mov
sub
mov
mov
xchg
mov
push
out
es
incl
ret
dec
in
and
out
sahf
dec
int3
sub
jbe
mov
xchg
loop
jo
sbb
cs
rcrl
loope
mov
inc
dec
lgdtl
out
dec
or
cmp
sub
jbe
test
mov
lods
xor
imul
aad
lock
fsubrs
movsl
sbb
jno
lcall
xor
in
fisttpl
rcrl
lret
dec
adc
mulb
pop
sub
repnz
xchg
fisttps
dec
push
push
inc
leave
inc
mul
mov
lcall
inc
loope
sbb
xchg
test
sub
cmp
and
std
shlb
inc
or
inc
jnp,pn
pop
cmp
and
sti
mov
imul
mov
pop
cltd
mov
push
cltd
mov
push
mov
sub
rcr
hlt
pop
sub
push
xchg
xchg
cli
mov
sub
cld
arpl
rcl
mov
mov
mov
mov
inc
cmp
call
and
add
shl
inc
push
dec
pop
mov
pop
and
mov
or
shll
subl
stos
aad
mov
xchg
pop
int3
cwtl
push
inc
add
arpl
push
dec
lret
mov
in
test
xchg
xchg
push
dec
xor
fiaddl
sbb
add
mov
push
test
cmp
out
push
jns
dec
pop
mov
cmp
mov
sbb
xor
cmc
mov
das
popf
jns
inc
es
aad
into
cmpsl
insb
mov
mov
xchg
push
xchg
jnp
sub
add
je
mov
fstp
negb
pop
add
adc
push
push
xor
xor
call
push
push
push
push
call
mov
mov
mov
or
mov
or
or
or
xor
xor
add
adc
xor
xor
shrd
or
mov
shr
or
mov
mov
mov
mov
mov
or
jmp
out
fisubl
push
jne
lret
sti
xchg
insl
fimull
cli
add
js
pop
js
jns
pop
add
sbb
inc
vmovddup
jle
pusha
ror
mov
xchg
outsb
xchg
cmpsb
xchg
mov
mov
push
ja
sbb
sbb
or
dec
push
sbb
clc
sub
push
cwtl
andb
sbb
mov
repnz
pop
jne
repz
test
fnstcw
inc
jns
cmp
lret
jns
lock
dec
out
fdivs
iret
jmp
stc
testl
mov
shlb
mov
xchg
out
shrb
mov
les
inc
xor
in
or
adc
out
jle
loopne
imul
add
xchg
leave
or
sar
and
testb
lret
pop
fwait
mov
lahf
dec
inc
mov
add
and
leave
enter
sahf
inc
and
mov
sub
jo
stc
adc
pop
xor
daa
cld
pop
adc
cmpsb
jbe
mov
mov
and
fisttpl
inc
cmp
clc
push
jno
dec
pushf
mov
loopne
sbb
or
mov
pop
iret
fs
inc
negl
cmp
mov
jge
dec
or
popf
push
mov
mov
iret
aaa
adc
mov
mov
pop
inc
push
jge
into
mov
add
adc
pop
xorb
jbe
pop
push
pusha
xchg
or
rol
js
fisubs
mov
sbb
ud2
xor
mov
mov
cwtd
dec
lds
in
imul
dec
loope
orb
mov
inc
loope
in
test
das
adc
jns
mov
sbb
hlt
mov
loop
scas
push
cmp
ffree
dec
mov
mov
push
cltd
in
pop
sub
xor
scas
loop
jns
push
ret
push
lea
push
in
mov
js
pop
lock
lods
or
and
cs
ss
pop
ja
in
or
mov
les
add
int3
xor
xchg
sub
xchg
mov
test
mov
pop
or
pop
or
jo
pop
shr
call
push
mov
inc
popa
fsubl
inc
stos
push
dec
xor
jle
movb
sahf
xchg
pusha
ljmp
mov
cmp
inc
and
cmc
stos
lods
mov
mov
aam
pop
cld
pop
inc
out
into
pop
repnz
test
jp
lret
stc
mov
out
int3
cmp
lods
rclb
and
jp
mov
test
lods
pop
in
mov
fisubrs
in
jp
cwtl
sbb
xor
lock
ret
jecxz
test
adc
dec
cli
imul
int3
in
lcall
lods
insl
mov
mov
fdivr
mov
jae
mov
adc
jo
xchg
test
movsb
lods
xor
int
mov
xchg
and
or
and
push
cmp
mov
jns
xchg
add
dec
push
pop
cmp
std
daa
fadds
lret
leave
add
xor
push
arpl
jle
xchg
fbstp
xlat
dec
cmp
loopne
jae
stos
or
jle
add
inc
pop
sbbl
dec
sbb
cmovo
push
mov
hlt
repz
mov
shrb
xor
dec
xorl
loopne
push
out
data16
stos
dec
jle
sub
dec
push
push
add
fsubs
cmp
sub
mov
movsb
add
std
inc
push
cs
mov
lahf
or
sete
add
das
jb
aaa
sub
push
and
and
xor
pop
repnz
jecxz
js
mov
sahf
xchg
sbb
or
les
gs
pop
int
dec
cmp
out
dec
sbb
mov
cld
dec
xchg
cltd
xor
cmp
push
bsr
sub
out
mov
push
cmp
xchg
mov
xchg
xor
dec
add
jge
icebp
in
xor
repz
mov
mov
adc
in
inc
aaa
jge
sbb
subb
pop
ja
pusha
dec
push
jge
dec
lret
pop
mov
stc
inc
imul
les
pop
and
sub
cmp
sub
pop
mov
into
mov
into
pop
and
loop
insl
or
jmp
adc
inc
fidivl
mov
in
pop
cmp
stos
lods
mov
rcl
and
lods
into
mov
clc
ret
inc
stos
dec
mov
loopne
dec
repnz
and
jp
jmp
dec
addr16
icebp
xor
xchg
nopl
jno
fsubl
cmpsb
mov
sub
push
ret
clc
and
xor
sub
jge
mov
or
daa
cmp
push
push
cmpsl
je
jmp
push
xor
mov
adc
ret
mov
sarl
mov
jnp
int3
lret
lret
inc
cmp
out
es
nop
jno
sub
pop
ds
sub
lock
scas
push
scas
or
cmp
push
fwait
or
testb
mov
inc
sahf
sbb
icebp
in
cmc
jno
cmpsl
pop
mov
or
jns
in
in
ja
dec
xchg
jbe
cmp
jle
push
mov
ds
outsl
addb
sti
lods
repz
aad
inc
sub
jmp
pop
ret
dec
dec
lods
arpl
and
into
cmp
out
mov
gs
push
testb
leave
jnp
inc
popa
aad
in
das
inc
pop
xor
rclb
push
cmp
fs
out
mov
cmc
inc
fcmovne
jl
dec
sbb
ja
fld
movsb
xorb
sub
bound
pop
mov
mov
loope
mov
mov
lock
out
dec
lret
clc
aaa
mov
nop
les
das
insb
sub
mov
imul
push
test
int3
arpl
xchg
not
test
mov
sub
xchg
mov
pop
mov
cmp
adc
js
stos
cmp
xchg
scas
imul
es
stc
data16
mov
pop
pop
insl
add
ljmp
xor
xchg
int3
jnp
rclb
scas
mov
sub
fwait
sahf
repnz
mov
int3
adc
repnz
rcll
push
in
mov
adc
mov
out
ss
or
cmp
pop
sbb
dec
pop
fidivs
add
int3
ret
pushf
icebp
pop
cmpsb
lcall
cli
mov
sbb
add
xor
mov
xor
mov
push
push
push
push
call
push
push
jmp
add
lds
mov
add
mov
dec
jne
mov
loope
prefetchw
xchg
fs
add
cmp
add
sbb
pop
xchg
rclb
mov
icebp
dec
xor
daa
cmp
call
dec
sbb
das
push
inc
adc
mov
fwait
xchg
cmp
aam
and
insl
arpl
test
stc
call
mov
cmp
or
cmc
xchg
lret
aaa
fistpll
fdivr
mov
scas
inc
jns
xor
repnz
insb
sub
lret
or
rcrl
insb
and
push
cmp
add
mov
cmc
xor
es
sti
mov
cmp
inc
iret
loopne
dec
xchg
and
xor
xchg
mov
aam
sahf
adc
leave
pop
jne
mov
frstor
mov
jb
daa
sub
rclb
out
jns
subl
cmpb
push
mov
adc
cmpb
xchg
pop
in
hlt
xor
aaa
cld
pop
arpl
bound
fs
shll
mov
xlat
pop
lret
arpl
pop
xor
jp
push
mov
loope
stc
repz
mov
shrl
push
sbb
dec
aas
into
cmp
pop
enter
aad
out
fstl
mov
inc
fwait
add
shrl
sbb
mov
or
dec
and
imul
and
movsl
ffreep
fwait
out
push
sti
lret
test
dec
ja
pushf
lock
fwait
and
jg
push
daa
repnz
test
xchg
push
or
mov
lret
adc
cmc
push
pop
pop
clc
addr16
popa
inc
cmc
jns
ss
add
jae
xor
add
test
cld
call
or
push
mov
in
popf
xor
mov
dec
pop
pop
pop
movsl
pop
xor
and
inc
pop
idivb
xchg
les
addr16
iret
push
mov
push
mov
sub
ja
test
jb
pusha
jb
xchg
pusha
mov
xchg
outsl
loopne
adc
push
pop
movsl
xor
mov
xor
cld
stos
jo
sub
push
scas
xchg
mov
mov
xor
cmp
pop
ret
mov
add
imul
imul
sub
xor
push
les
push
push
add
jg
popf
icebp
mov
sub
repnz
shll
in
nop
inc
cmp
mov
xchg
add
fwait
test
sbb
incb
jle
scas
jp
inc
call
pop
push
push
and
stos
repnz
pusha
pop
or
je
or
ret
gs
mov
inc
xchg
jo
stos
inc
idivl
inc
cmc
out
push
cmp
cltd
fdivrl
sub
popf
in
cld
out
jns
ficoml
adc
sbb
inc
add
orb
or
pop
sbb
cltd
subb
hlt
cmp
call
pushf
loopne
add
mov
mov
sub
outsb
mov
push
dec
push
fmul
clc
mov
shrb
icebp
pop
jno
icebp
in
insl
push
notl
cltd
mov
cs
fimull
shlb
pushf
scas
push
push
ss
mov
clc
notb
jo
leave
mov
adc
out
lods
pushf
faddl
add
dec
adcb
cmp
flds
or
aaa
nop
xor
shrl
fwait
cltd
test
pushf
pop
jno
sub
xor
outsb
push
outsb
adc
int
out
andb
lret
jbe
loopnew
dec
dec
mov
in
cwtl
insl
add
dec
je
repnz
push
xor
cwtl
and
fiadds
and
sar
std
faddl
stc
into
and
mov
stos
lahf
fsub
sbb
jne
xchg
or
imul
push
mov
in
repz
pop
mov
jo
ljmp
mov
mov
repnz
cmpsb
pusha
aam
lods
aam
or
inc
in
rorl
dec
cld
jns
inc
or
mov
inc
lds
xchg
outsl
xchg
push
xor
ja,pn
out
out
int
mov
mov
in
je
cmp
movsb
clc
lret
push
dec
insb
xor
xorb
mov
bound
dec
and
scas
jp
cmp
ss
mov
repnz
jl
ret
push
cs
ds
mov
jle
or
lcall
mov
sbbb
negl
es
xchg
mov
fcmovu
out
pop
sahf
addr16
inc
loope
fildl
jge
out
inc
enter
push
dec
pusha
sub
dec
lcall
mov
jg
xor
inc
push
jo
and
repnz
sub
mov
lret
popf
repz
push
push
shll
adc
bound
push
push
pop
mov
pushl
xchg
fwait
lock
pop
mov
repnz
and
cmp
sub
mov
imul
repz
cwtl
sbb
mov
movsb
lds
pop
movsl
sbb
cmpsb
aam
popf
cmp
out
stos
push
out
scas
mov
repz
push
inc
xchg
push
negl
xchg
lock
popa
fsubl
rclb
sarb
sar
add
cld
and
lds
dec
loop
cmp
insb
fucomip
push
mov
decb
addr16
bound
dec
mov
cli
das
jg
mov
ljmp
cmp
int3
mov
sarl
insb
or
pop
pop
mov
out
cmp
jbe
pop
add
fistpll
cld
lods
enter
int
ficoms
pop
adc
xorps
pushf
push
dec
xchg
pop
dec
cmp
push
push
stos
xchg
adc
mov
mov
insl
jg
sub
push
dec
js
adc
inc
mov
and
ss
jnp
add
mov
mov
iret
out
iret
sti
push
adc
das
sub
xchg
ds
cltd
icebp
xor
testb
sub
push
hlt
imul
jmp
stos
add
andl
inc
ja
scas
add
inc
mov
iret
mov
fimuls
push
cmp
sbb
inc
mov
pop
daa
sbb
orl
cmpsl
in
xor
xor
dec
stos
sbb
adc
sbb
mov
in
xor
rcrl
mov
mov
mov
add
mov
adc
add
pop
adc
pop
mov
mov
pop
leave
ret
push
mov
sub
adc
movl
mov
sub
mov
xorl
mov
addl
movl
orl
jmp
sti
out
out
jo
jo
pop
inc
push
push
mov
js
invd
add
sysexit
inc
or
adc
sar
push
xor
adc
jmp
cmpsb
push
inc
push
push
adc
clc
adc
pop
int3
cmp
adc
ret
loope
movsl
cmp
cmp
xor
xchg
pop
mov
inc
mov
pop
lea
inc
sub
jne
dec
test
shrb
xorl
lret
ret
jo
fdivs
xchg
fwait
pop
mov
pusha
in
mov
sti
mov
xchg
ret
or
inc
adc
mov
or
or
ljmp
cmpsb
stos
pop
mov
leave
sbb
adc
test
push
movsb
rcl
mov
xchg
adc
xor
insb
ss
adc
xchg
cmp
mov
insb
test
xchg
iret
jno
out
push
test
imul
hlt
adc
dec
cmpsl
jmp
add
imul
cmovs
popa
add
loopne
mov
in
xchg
jl
lock
mov
jo
mov
or
sbb
ja
mov
dec
push
or
or
repz
scas
clc
pop
xchg
iret
jns
std
pushf
dec
jg
adc
adc
cwtl
cli
pop
pop
ds
ljmp
ficomps
sub
out
test
fcmovnbe
scas
cli
xchg
xlat
mov
or
fwait
and
mov
imul
loopne
push
push
pushf
rolb
mov
inc
xchg
sbb
dec
pop
mov
push
push
cmc
int3
dec
sbb
jne
bound
xor
rorb
xlat
call
adc
push
pop
xchg
inc
mov
adc
pop
ror
sbb
jns
leave
icebp
test
mov
dec
or
mov
jne
adcb
iret
jno
adc
dec
and
lods
ss
mov
dec
std
test
jns
jl
ss
push
out
xor
or
das
icebp
lahf
xchg
scas
mov
fdivrs
lret
sub
sub
cmc
add
gs
push
pop
cmp
or
out
sub
pop
sub
xor
dec
jbe
fwait
pop
lcall
add
bound
cmp
mov
pop
and
jge
xor
add
in
adc
push
ret
arpl
aad
dec
lret
rorl
shl
cmp
mov
mov
out
xor
pushl
cld
mov
ret
mov
test
in
mov
ffree
xor
add
mov
pop
js
xlat
adc
jge
inc
ss
or
mov
jmp
mov
pop
and
jl
fbld
xor
rcr
inc
lock
add
sub
mov
push
or
or
jns
mov
cmp
xchg
mov
and
jle
jne
dec
push
mov
leave
loopne
mov
mov
push
push
gs
mov
mov
jbe
fmuls
pop
loopne
cmp
jb
mov
nop
or
push
xchg
shlb
dec
sahf
pop
fldt
mov
sahf
addb
jmp
jl
adc
jecxz
and
and
scas
aas
and
loopne
jg
push
mov
cmpsb
xchg
aas
jno
aaa
test
jo
fdivs
and
push
dec
push
ja
pop
cltd
mov
lds
leave
mov
mov
cs
or
jno
outsb
sub
dec
popw
mov
jmp
mov
subb
loope
xchg
xchg
jne
jmp
jecxz
add
in
ljmp
inc
pop
inc
ja
cmp
mov
scas
mov
sbb
push
push
mov
es
dec
out
or
mov
test
jp
repnz
push
pop
push
dec
mov
js
sbb
cltd
push
jno
popf
ds
mov
and
add
lods
in
mov
iret
sbb
and
lahf
ljmp
movsl
into
lock
popa
fdivl
pop
enter
pop
jecxz
jmp
insl
ret
push
popa
jmp
inc
jp
clc
add
or
hlt
inc
add
inc
dec
mov
cmp
fcomps
fnstsw
mov
fbld
and
filds
inc
mov
lret
sbb
popf
or
leave
sbb
insb
pop
xor
lock
mov
or
pop
int
jmp
in
into
nop
and
stc
push
mov
repnz
mov
gs
or
scas
push
mov
push
scas
and
inc
cmp
cmpsb
pop
sub
cmp
daa
sti
movsl
mov
jmp
mov
rolb
loope
scas
jge
shll
sub
fs
es
roll
adc
mov
sub
add
xchg
pop
mov
xchg
mov
pop
fwait
clc
jne
mov
xchg
cmp
push
cwtl
cmp
sbb
cmp
mov
pushf
xor
int3
dec
bound
mov
lret
mov
push
mov
and
into
and
int
xchg
sub
dec
and
js
iret
addr16
add
jl
and
or
call
xor
xchg
sahf
inc
out
mov
fcoms
dec
fmul
testb
shlb
pcmpgtb
inc
pop
sbb
fiadds
mov
cmpsl
mov
fdivr
xchg
jo
std
mov
jb
mov
mov
movsl
imul
mov
jg
mov
push
mov
out
dec
mov
xor
mov
or
mov
dec
xchg
orl
jae
inc
jg
add
in
aaa
imul
jo
push
hlt
lahf
stc
clc
fwait
inc
scas
int
jb
dec
insl
popa
xchg
cmp
pushf
or
lcall
lahf
fucomi
sbb
in
mov
inc
in
movb
movb
cmpl
jbe
andl
adc
jmp
pushl
call
movb
movzbl
mov
sub
imul
mov
or
movzbl
push
orl
and
mov
movb
movl
movb
subl
movb
movb
orl
mov
orl
mov
subl
add
adcl
jmp
ret
sub
shlb
mov
xor
mov
jbe
or
or
lsl
xor
movsl
not
filds
cmp
ja
jp
mov
sub
pop
gs
bound
scas
insb
mov
mov
xchg
mov
pop
mov
ret
lret
fldlg2
xor
fidivl
add
and
cmp
pusha
js
mov
jl
loop
cmc
scas
mov
shrb
cmp
andps
cmp
add
mov
mov
or
or
leave
mov
sub
gs
jne
mov
xchg
cmp
ret
movsl
jo
gs
mov
or
mov
sbb
or
cmp
jnp
rcrl
adc
pusha
in
aas
std
dec
or
push
cltd
sub
movl
nop
pmullw
stos
call
ss
xlat
fidivrs
mov
stos
stc
aas
les
jg
and
add
adc
jge
inc
aad
push
inc
xorb
adc
cmpsl
mov
jge
in
shlb
inc
sub
xchg
adc
sub
in
aaa
push
repnz
pop
out
cmp
and
adc
jb
rclb
int
jge
in
or
imul
inc
sbb
xchg
sti
test
pop
imul
insl
xor
flds
pushf
jns
sarb
lret
aaa
or
pop
inc
lock
loop
mov
sbb
mov
es
pop
push
push
xchg
mov
sub
lret
xchg
mov
xor
push
inc
dec
stos
xchg
inc
mov
les
mov
and
insb
test
inc
inc
insb
add
subl
push
test
aas
mov
leave
outsb
xchg
aad
lock
stos
outsb
mov
popa
jge
mov
loop
mov
inc
pcmpeqd
mov
scas
inc
jge
cmpsb
jl
and
pusha
pop
jns
lret
xor
lds
inc
imul
ja
and
ret
cmp
add
aam
add
adc
or
sub
les
sbb
pop
fcoms
fisubl
pop
jns
push
out
dec
flds
push
jmp
das
adc
mov
insl
fists
inc
push
test
imul
inc
inc
jg
adc
inc
add
pop
aam
pop
pop
xchg
scas
dec
lds
inc
leave
xor
inc
push
getsec
cmp
lock
mov
rclb
stos
lahf
mov
push
out
mov
cmpsb
cwtl
xchg
ljmp
pop
stos
nop
movsl
push
dec
out
jge
or
xor
ss
lret
push
jnp
sbb
fsubrl
cmp
jl
fmul
jo
cmp
sbb
ss
fmuls
pop
out
jle
dec
xchg
push
movsb
mov
push
pop
call
mov
pop
int3
scas
sbb
fcomps
fwait
and
sbb
filds
adc
insl
stc
push
push
ret
cmp
push
push
mov
sub
cmpb
xchg
push
jecxz
test
push
sti
pushf
mov
stos
outsb
rorl
pop
inc
push
mov
dec
inc
mov
pop
adc
dec
in
dec
imul
mov
out
shrb
push
pop
xchg
cmp
xchg
outsl
xor
or
fs
sbb
js
in
loop
stos
inc
adc
out
dec
push
shr
sbb
xchg
out
movb
cmp
pop
sahf
ret
sbb
pop
shr
test
adc
mov
xchg
inc
loop
imul
xchg
std
sub
test
xlat
es
mov
ret
or
loopne
mov
mov
and
jns
and
std
adc
imull
lcall
sub
rcl
sbb
jl
jno
jp
stos
scas
loope
lock
inc
fstpl
out
stc
sub
jae
and
popa
or
xchg
xchg
mov
xchg
xchg
inc
loope
mov
push
negb
adc
das
shl
mov
mov
lods
sbbl
push
adc
testb
or
adc
lds
decl
std
sahf
loopne
add
incl
movsl
or
test
arpl
sub
jmp
das
aaa
aam
push
imul
fcompl
rorl
jne
xlat
mov
test
dec
sub
mov
ds
add
and
cs
test
push
lret
pop
sub
dec
repz
popf
cmp
pop
cmp
jg
adc
jns
insl
cmp
das
repz
pushf
je
mov
push
sbb
adc
clc
adc
mov
enter
cmp
adc
mov
jp
inc
and
in
xchg
dec
inc
gs
mov
icebp
daa
popl
fwait
dec
popl
aas
jl
cld
out
xchg
and
pop
xor
int3
mov
xor
sbb
or
cltd
ljmp
mov
adc
jmp
push
xchg
daa
adc
aad
cmp
into
orl
sbb
mov
pop
bound
outsl
data16
add
dec
pop
mov
cmp
push
outsb
dec
sahf
pop
lcall
xor
and
jp
lds
xchg
mov
add
gs
insl
pop
or
lahf
cltd
cmp
movsb
dec
dec
sub
xchg
jl
rorl
jne
call
mov
aas
dec
adc
cmp
in
insl
pop
add
outsb
imul
add
and
cmp
sub
pop
add
jo
jnp
mov
inc
mov
aas
pop
lea
cltd
jne
fistl
cmp
sbb
popa
dec
dec
lock
pusha
vmovhps
add
xchg
and
or
inc
lahf
dec
ja
add
sbbl
xchg
mov
xor
imul
mov
addl
or
addl
mov
subl
and
movl
jmp
mov
hlt
add
sbb
js
mov
invd
add
setae
test
fstpl
jbe
leave
dec
add
hlt
mov
jno
cs
aam
enter
loopne
lea
cmp
jnp
imul
sub
mov
and
push
lret
insl
adc
sbb
imul
xchg
test
pop
outsl
sub
iret
xchg
jmp
cmp
push
sbb
sti
fsub
push
mov
cmp
shll
and
rolb
roll
fists
push
out
jne
ljmp
push
mov
lods
test
in
rcrb
cmp
sbb
sub
and
add
icebp
loopne
int
nop
shrb
mov
mov
mov
sahf
push
adc
ljmp
out
cmc
mov
inc
cld
stos
in
and
xchg
and
pop
pop
add
dec
pop
add
push
sbb
pop
std
pop
add
mov
jnp
cwtl
jne
push
pop
jge
jp
xchg
cmpsb
lods
data16
xor
ret
pop
lds
xor
daa
xchg
adcl
mov
dec
add
and
sub
xchg
xchg
outsl
addl
imul
aam
js
mov
andl
neg
ja
xor
pop
mov
or
mov
aam
xor
and
or
ficomps
insb
push
lcall
jbe
inc
mov
lea
lcall
lock
arpl
push
frstor
xchg
xchg
test
or
mov
lahf
pop
mov
pop
js
dec
lret
push
xchg
in
out
psubq
rcr
cs
insl
test
jmp
push
inc
xchg
cmp
mov
aad
sbb
xchg
mov
jg
xor
xchg
mov
call
dec
mov
dec
push
dec
jge
aas
lcall
dec
jmp
xlat
jne,pt
test
jle
gs
jns
pop
dec
adc
xor
cmp
cmpsb
out
mov
pop
stos
xor
add
es
push
jg
push
ss
into
popa
push
fld
jo
cltd
sub
aad
add
bswap
xor
es
call
push
pop
movsl
push
pop
mov
loopne
jmp
out
cmc
push
cwtl
push
mov
xchg
dec
sahf
fidivs
mov
loopne
into
repnz
fisubrl
imul
out
inc
lock
das
adc
in
insb
jae
dec
or
imul
ficoml
push
push
mov
shrl
sub
repz
xchg
cmp
insl
xor
mov
mov
inc
daa
insb
inc
pop
xor
pop
mov
pop
xchg
mov
adc
sbb
or
push
aad
sub
mov
fs
adc
sti
mov
push
dec
ffreep
adc
xchg
movsb
mov
inc
orb
pop
pop
mov
std
jbe
shld
mov
xlat
sub
jl
sbb
add
push
push
mov
sub
dec
mov
scas
mov
in
movsb
dec
lea
mov
jl
xor
pushl
cltd
cs
fdivs
sub
lcall
xor
loop
sub
mov
mov
insb
fs
xchg
fwait
es
sub
inc
js
cmp
scas
cmpsb
mov
mov
call
mov
test
lret
inc
aas
rcrl
jmp
and
test
hlt
xchg
adc
xor
mov
jmp
ds
mov
mov
stos
stc
inc
shr
cwtl
mov
sub
fistpll
outsl
pop
add
lahf
jecxz,pt
push
add
mov
push
bound
scas
test
loope
hlt
jmp
jle
mov
sbb
popl
insl
sbb
lock
jnp
fistps
pop
mov
fwait
and
in
push
je
out
push
jle
nop
aad
scas
adc
mov
dec
adc
mov
jo
mov
cmpsl
cmc
mov
mov
and
inc
aam
mov
pushw
inc
idivb
repnz
js
mov
mov
push
dec
data16
subl
xchg
cmp
add
push
out
jns
mov
neg
dec
push
repnz
or
cmc
sahf
pop
or
loop
aas
pushl
lret
jp
jl
push
jo
xchg
fidivrl
pusha
or
or
paddsb
mov
lea
inc
mov
dec
sub
fisttps
test
dec
push
inc
out
jbe
ljmp
pop
fcmovnu
pop
lea
push
mov
push
nop
outsb
jmp
lret
inc
stc
add
xchg
cltd
popa
mov
in
nop
lret
aad
fisttpl
adc
lea
and
push
in
out
rcrl
mov
stos
push
xchg
mov
aas
pop
mov
mov
xchg
pusha
rorl
dec
xor
push
out
mov
je
pop
out
mov
inc
cld
insb
xchg
push
jo
push
mov
aas
xor
jp
stos
mov
sahf
popa
sbb
scas
mov
in
or
fstpt
sub
lret
inc
dec
jo
add
xchg
vmread
inc
dec
lds
xlat
sbb
shrl
inc
mov
sub
ljmp
mov
mov
cmpsb
sbb
xchg
fsts
stos
inc
insl
cli
sbb
pop
pusha
std
or
sbb
gs
adc
jno
dec
mov
fisubl
movsb
ret
shlb
adc
adc
push
pop
push
mov
insb
sbb
mov
pop
movb
stos
int3
sub
mov
dec
daa
sub
test
iret
ljmp
cmpsb
xor
cmpsb
dec
dec
cli
jecxz
mov
adc
lods
in
das
mov
inc
add
aaa
jbe
jl
and
movl
sbb
ja
mov
mov
sub
mov
cmpl
jl
andl
mov
and
jmp
push
push
push
call
mov
mov
movzwl
movzwl
shr
addl
or
sub
movl
mov
orl
movb
movb
sbbl
mov
mov
xorl
xor
addl
add
xorl
movzbl
movzbl
sub
cltd
mov
adc
mov
jmp
mov
pop
push
and
sub
mov
mov
lahf
ret
invd
add
unpckhps
rolb
xchg
jo
push
mov
loope
arpl
bound
into
insl
add
or
das
out
pop
stos
mov
cmp
cmp
pop
mov
fisubrl
in
dec
stos
fwait
pop
iret
xchg
clc
add
loope
push
xchg
mov
dec
sub
and
icebp
stc
arpl
mov
sbb
inc
xchg
into
or
mov
movups
scas
dec
mov
and
mov
out
cs
add
push
push
movsl
mov
adcb
dec
fldcw
push
and
inc
cs
ficoml
pop
lret
mov
pushf
mov
jmp
jae
movsb
jecxz
fcoms
lds
leave
loope
mov
cmpsl
push
mov
stos
jae
mov
out
sbb
out
fstl
les
xchg
cli
xchg
xchg
insl
faddl
push
and
mov
outsl
das
sbb
ds
mov
in
push
pop
jno
mov
jbe
lods
mov
xchg
enter
out
and
rorb
sbb
repz
imul
mov
sub
inc
xor
div
adc
sub
frstor
arpl
or
add
sub
ljmp
xor
sbb
mov
inc
ljmp
push
mov
add
loope
xchg
dec
stos
adc
mov
and
adc
out
das
adc
loop
mov
cmp
or
and
cli
les
xchg
call
adc
nop
inc
mov
or
sbb
stc
dec
rol
mov
scas
addb
fisubrs
add
lods
into
daa
mov
and
rcrl
mov
xchg
cmp
jne
out
cmp
popa
push
or
or
jg
xchg
ss
mov
sub
ss
jns
mov
fdivs
mov
mov
mov
pop
adc
pop
movsl
mov
dec
or
stos
jl
std
pop
fisttpll
mov
or
insl
push
lods
adcb
lret
lcall
adc
add
scas
repz
or
jp
jl
adc
pusha
leave
lock
xor
clc
dec
outsl
cmc
outsb
notl
or
inc
sub
loopne
xlat
ret
and
shlb
dec
fcomi
pop
sub
out
je
cmp
and
mov
das
cmp
stos
and
fcomps
push
nop
enter
pop
cmp
xorl
adcl
sahf
cmc
jo
or
push
mov
outsb
mov
sub
loop
or
daa
out
pop
pop
sbb
lock
fnstsw
cld
cmc
repnz
arpl
movsl
pop
mov
jb
inc
lret
call
lea
hlt
cmpl
movsl
cmp
int
in
pop
scas
sub
addr16
jnp
icebp
clc
ficomps
call
js
dec
lds
shr
add
jae
int3
mov
adc
cmpsl
lods
fcmove
adc
mov
out
ljmpw
sub
adc
pop
movsb
test
add
mov
lods
push
jae
push
add
out
sub
mov
js
notb
mov
out
out
jle
das
arpl
mov
and
push
push
push
xchg
push
outsl
out
je
push
outsl
mov
or
decl
xchg
in
push
mov
lret
out
jnp
jecxz
scas
or
pop
xchg
cwtl
jecxz
sub
and
push
jae
lods
loope
mov
sub
mov
dec
mov
adc
pop
addl
sbb
adc
loope
repnz
insl
inc
add
out
std
loope
movl
or
sbb
popf
test
lods
addl
lock
enter
mov
add
les
xor
fistps
push
pop
jecxz
or
lock
mov
add
lahf
dec
add
test
insb
mov
cmp
lret
lods
jp
cmc
jo
mov
dec
lods
popf
dec
dec
insl
imull
fs
lods
mov
jecxz
xor
mov
add
arpl
fxam
popa
xlat
in
nop
addr16
loop
mov
pop
xchg
mov
adc
jae
sbb
cmp
add
sbb
or
jmp
and
push
out
jae
imul
inc
mov
pop
jnp
mov
outsl
jl
cmp
lods
dec
mov
inc
push
jno
dec
dec
xor
loopne
sarl
cld
xchg
pop
insl
loop
lret
xchg
or
sti
call
stc
jnp
cld
icebp
imul
jmp
dec
stos
and
fnsave
adc
aaa
loopne
fwait
mov
adc
in
cmp
stc
adc
mov
or
stc
fistps
mov
aam
mov
adc
imul
lcall
cmp
pop
add
xchg
adc
push
xor
fiadds
sahf
cmc
xchg
pop
and
push
cmp
sbb
push
cmpl
mov
xchg
add
in
jb
leave
cmp
or
in
gs
or
push
fwait
pop
xchg
out
je
jge
sbb
pop
into
jbe
mov
aad
xlat
clc
xchg
sub
sub
xchg
repnz
stc
js
pop
out
cmp
and
dec
loop
jp
push
xlat
fwait
stc
adc
fstl
popa
push
ficomps
add
mov
mov
scas
xlat
push
lods
sbb
repz
mov
ds
add
jbe
sbb
aam
fwait
inc
pushf
lret
lods
adc
fistps
add
cmp
xor
aas
test
aas
dec
or
cmp
out
lods
dec
adc
iret
or
cmp
add
mov
or
jmp
push
call
jmp
sub
push
xchg
jne
jle
dec
dec
repz
cwtl
test
xadd
call
adc
push
mov
repz
and
std
ret
push
hlt
outsl
or
rclb
inc
mov
xor
xlat
cmc
adc
outsl
andl
add
add
data16
xlat
add
movsl
repnz
ret
dec
push
outsl
daa
test
iret
jp
push
mov
or
in
push
jns
into
pop
lret
dec
sbb
test
jmp
in
mov
es
sub
and
idiv
shll
push
mov
loopew
mov
lods
mov
and
int
inc
clc
in
aas
test
push
jbe
dec
xor
insl
mov
add
test
jg
pop
cmc
sub
mov
xchg
into
jge
pop
scas
rcll
fwait
stos
sbb
dec
mov
xor
ret
xor
jge
cmpsb
inc
fdivs
fsts
arpl
jp
pop
xchg
ror
jmp
fistl
sbb
sub
xor
into
fwait
ret
mov
icebp
pushf
in
les
std
enter
es
or
in
fadds
jmp
out
std
mov
imul
scas
jns
pop
addr16
add
push
sbb
pop
add
xchg
add
pop
fistpll
in
icebp
dec
dec
fldt
cmp
jp
xorb
mov
xor
mov
jno
test
xchg
sbb
and
xchg
lcall
cmpl
add
dec
jns
test
jbe
dec
outsl
je
mov
push
or
adc
es
and
pop
in
cmp
pop
cmp
stc
mov
ss
aam
jle
add
mov
xchg
pop
leave
test
xchg
ja
ret
testl
imul
cmp
or
cwtl
mov
iret
push
aaa
inc
out
jle
out
push
xchg
mov
cmp
stos
arpl
add
or
xchg
pop
scas
jle
xchg
imul
andb
push
lea
inc
mov
adc
enter
mov
gs
inc
sbb
dec
jb
bound
cmp
dec
push
mov
sbb
xlat
push
pop
negb
xchg
jmp
jns
jg
fwait
xor
dec
cmpsl
aam
xor
fs
jb
mov
mov
call
je
aas
inc
stos
xchg
fdivs
or
cmp
adc
clc
push
mov
cmp
jnp
cmp
jns
lds
fwait
xor
scas
inc
lods
test
push
dec
adc
shr
imulb
imul
sbb
sub
mov
testb
sbb
insb
int
cs
sub
ficompl
shlb
sub
or
push
or
aaa
pop
out
inc
jmp
jge
pop
decb
shll
jmp
mov
loop
repz
adc
cld
out
and
sahf
push
bound
rol
or
daa
imul
fmuls
inc
mov
hlt
pushl
arpl
std
dec
cmp
pop
or
add
mov
mov
pop
je
add
fsts
cmp
push
inc
adc
mov
xchg
push
sub
scas
testl
dec
lea
test
ljmp
arpl
lfs
add
add
int
mov
icebp
push
aam
cmc
sahf
subb
mov
or
cmp
push
and
cs
adc
mov
push
mov
pop
arpl
push
loop
pop
fldl
int3
in
mov
in
mov
outsl
xor
push
jl
xchg
push
add
mov
call
adc
mov
std
and
jg
sub
or
insb
lock
test
arpl
add
int3
ret
js
das
and
adc
ret
or
movsl
dec
mov
or
loope
jbe
enter
ss
shll
sub
mov
dec
sub
ljmp
add
jge
insl
xor
imul
or
test
pop
inc
pop
fdiv
add
pop
popa
inc
fildl
and
xlat
sbb
xor
jb
test
cltd
push
add
daa
dec
popf
and
jae
inc
insl
add
or
andl
bound
mov
sub
push
loope
cmp
push
test
sbbl
pop
mov
fsubrp
dec
jg
xor
lea
mov
lds
xchg
dec
cmpsb
mov
cmpsl
and
xchg
push
idivl
enter
add
fnstcw
or
mov
sbb
and
xor
push
sahf
sub
int3
cmp
bound
lock
enter
xor
mov
push
sbb
ljmp
or
cmpsb
out
aas
add
stos
or
jbe
roll
jae
xor
ffreep
repnz
mov
out
mov
aaa
push
std
pop
inc
mov
not
and
pop
jae
xchg
bound
clc
mov
mov
fidivs
lahf
add
adc
movsb
jl
divl
push
sbb
or
test
lret
mov
lods
test
cmpsl
xchg
ljmp
jbe
sub
test
jns
add
lock
arpl
aas
mov
divl
add
imul
or
jbe
and
sub
aad
push
test
stos
xchg
push
or
daa
jp
in
mov
out
out
shrb
ja
lods
adc
setge
sti
cmpsl
adc
xor
inc
imul
fwait
inc
add
dec
icebp
adc
fcoml
xchg
test
inc
mov
push
pusha
imul
stc
repnz
ret
mov
sti
pop
jns
inc
xchg
and
out
sbb
push
jecxz
out
inc
pop
idiv
jmp
mov
xchg
mov
dec
mov
scas
popf
invd
add
mov
cmpsl
ljmp
push
adcb
cmc
imul
adc
test
dec
push
enter
pushl
xor
cmc
sbb
sbb
push
cs
cmpsl
mov
aas
ljmp
mov
dec
cmp
mov
imul
outsb
mov
cmpsb
bnd
sbb
mov
add
dec
cmp
leave
hlt
call
jg
xchg
adc
push
lds
dec
dec
mov
bound
pushf
mov
lcall
and
pop
js
mov
outsl
sub
jl
jg
adc
lea
dec
enter
mov
pavgb
daa
sarl
fistpll
lcall
sbb
mov
and
sbb
mov
jle
jecxz
divl
call
dec
cmpl
js
and
stos
into
insl
inc
or
lods
rcl
and
or
jp
dec
ja
enter
push
mov
xor
repz
sub
adcl
inc
cmp
imul
shr
test
cmp
mov
lcall
loope
xor
fdivl
xorl
pushf
ss
pop
push
out
dec
lret
or
rcrl
movsl
in
push
mov
scas
jmp
out
pop
jecxz
pop
std
jp
imul
sbb
mov
and
in
fstp
xor
sahf
test
sub
stc
rolb
sub
mov
loope
push
test
xchg
cmp
cmp
inc
or
das
push
add
dec
sahf
int
mov
sbb
adc
and
lea
icebp
movsl
andb
add
jns
add
fld
xlat
inc
jmp
mov
insb
sahf
fnsave
enter
push
fsubl
xchg
out
inc
xor
test
cltd
int3
enter
or
subb
pushf
push
ds
out
inc
cmpsl
cld
cmp
mov
pop
enter
sbb
jge
mov
xchg
std
jmp
xlat
jg
mov
nop
sub
dec
mov
jno
and
sbb
insb
add
xor
icebp
shl
mov
xor
popa
stos
cmp
xor
lret
jl
fisubrl
push
iret
je
jp
sub
push
dec
push
mov
icebp
sub
mov
xor
add
int3
scas
mov
xchg
add
sbb
mov
popa
iret
ret
mov
ret
lea
int
pop
jns
mov
lock
jne
dec
push
or
xchg
pop
std
mov
fistps
push
bswap
push
push
sub
das
sahf
mov
adc
mov
and
push
pop
gs
arpl
mov
std
popf
pusha
jmp
aam
insb
aam
dec
int
bound
inc
mov
mov
inc
xchg
push
cmp
test
das
add
and
enter
dec
or
sub
stos
push
cwtl
pop
sbb
xor
or
xchg
hlt
in
scas
inc
mov
add
ret
xor
mov
or
iret
inc
dec
jns
cmp
inc
xchg
add
pop
or
scas
lret
and
push
cmp
or
or
lcall
negl
shlb
mov
sub
sbb
sbb
cmpb
fisubl
lss
cmp
mov
bound
repnz
fwait
sub
xlat
push
cld
arpl
mov
lods
inc
cmp
cwtl
scas
lahf
addr16
js
popa
andb
bound
xor
cmpsb
leave
hlt
xor
test
popa
lock
inc
mov
mov
xor
cmp
xchg
ds
ja
push
out
clc
sbbb
and
icebp
xchg
push
shrb
and
and
push
aas
fisubrl
lock
clc
in
testb
inc
sub
xlat
pop
and
dec
mov
cltd
mov
mov
push
sbb
movsl
es
iret
xchg
int
sbb
sub
inc
cmp
imul
or
lcall
sub
bound
sbb
pusha
mov
movl
add
fildll
gs
xchg
mov
mov
cs
pop
add
dec
sub
mov
xchg
mov
mov
pop
int
data16
dec
pop
mov
adc
in
push
jecxz
pop
ret
inc
gs
decb
pop
out
mov
sahf
adc
ret
cmp
insb
push
pop
movl
pop
xchg
lcall
mov
into
stos
push
sbb
lods
repz
sbbl
pop
stos
sti
and
pop
and
xor
sbb
scas
test
insb
sub
jmp
push
dec
ljmp
scas
adc
out
popa
in
mov
or
in
pushf
sub
jecxz
xor
push
inc
adc
dec
pop
addl
daa
in
cli
jl
leave
ret
mov
lcall
inc
rcll
enter
and
ret
pop
loope
push
sbb
inc
iretw
hlt
add
inc
cli
xor
jbe
out
push
pop
test
sbb
xchg
sub
nop
xchg
xchg
loope
cwtl
fcmovnu
sbb
cmc
or
xor
xchg
cmp
test
iret
enter
mov
and
fadds
jle
mov
xchg
arpl
popa
sbb
je
iret
sub
fwait
inc
mov
sub
add
lret
cltd
mov
jne
add
stos
outsb
xor
push
add
pop
fld
scas
inc
cmpl
or
inc
inc
addr16
add
out
mov
pushf
xchg
push
pop
ljmp
add
inc
out
cmpsl
mov
andl
jmp
dec
mov
aaa
es
mov
xchg
add
and
stc
cmovae
out
iret
mov
iret
xchg
cmc
call
xor
dec
push
cwtl
fdivrs
enter
dec
or
fisubl
je
adc
cmp
mov
aas
push
cmp
xchg
sbb
jl
call
mov
subl
push
call
or
sahf
repz
pop
sub
hlt
pop
cmp
fadds
jp
ljmp
xchg
imul
xor
insb
xchg
stos
pop
or
mov
push
shll
mov
pop
inc
outsb
or
fsubrl
fisubl
xchg
jp
popf
lret
push
loope
fnstenv
sbb
and
dec
pop
pop
add
loop
add
imul
inc
in
pop
scas
dec
pop
sbb
jb
cmp
dec
cmp
cmp
cmp
sti
addb
push
sti
lea
out
adc
sub
or
enter
mov
xchg
test
in
inc
daa
subl
mov
testb
lods
jecxz
xchg
cmp
adc
mov
mov
mov
push
dec
orb
test
je
mov
push
dec
aad
mov
fdiv
mov
dec
ljmp
jnp
out
add
jno
daa
cmpsl
data16
xlat
cld
mov
je
mov
lret
out
mov
fldcw
iret
sbb
sti
xchg
sarl
xchg
xchg
push
pop
jmp
rcr
mov
mulb
sti
loopne
or
idivl
inc
ja
arpl
in
repz
push
sti
mull
mov
lods
loop
sbb
fiaddl
adc
jae
sbbl
les
mov
pop
dec
sub
adc
fisubrl
xchg
jne
iret
roll
addl
push
shrl
clc
inc
push
out
pushl
pop
out
jge
sbbl
lret
inc
rcpps
xor
insb
loope
into
mov
mov
adc
ljmp
mov
or
idiv
lods
mov
and
daa
jns
int
test
gs
mov
or
dec
or
outsl
and
push
in
inc
inc
mov
sub
dec
or
orb
or
in
loop
and
inc
imul
in
add
pushf
dec
jmp
out
js
out
ret
sbbb
lods
cld
cmc
jne
mov
pop
dec
test
lock
hlt
rcrb
jle
dec
mov
fdivrs
sbb
ret
dec
dec
in
shrb
add
jns
lea
data16
test
nop
push
aas
movsl
sbb
sbb
sub
jo
pop
or
fs
sub
jb
inc
outsb
je
sahf
sub
out
jo,pt
dec
mov
cmp
filds
inc
mov
push
insb
cmp
ss
mov
sub
inc
cmc
xchg
fwait
dec
jg
and
jne
mov
pushl
sbb
sub
out
repz
add
mov
cli
ret
and
pop
adcb
mov
sti
mov
xor
mov
cli
in
push
sbbl
mov
mov
ja
dec
call
add
mov
push
push
push
int
xor
lods
inc
jle
pop
inc
lahf
and
push
popa
push
nop
hlt
dec
pop
movsb
in
dec
push
add
xchg
lea
fimull
fnsave
jmp
mov
neg
shll
sahf
addb
push
jle
std
sub
pop
dec
orb
inc
lea
add
add
out
pop
jle
aad
in
adc
ffreep
fs
pop
cld
pop
inc
iret
cmp
dec
inc
les
bound
out
sub
enter
ficoml
inc
xor
sub
jns
test
imul
jb
data16
adc
arpl
or
and
xchg
jmp
leave
lcall
pushf
test
mov
and
mov
mov
adc
sbb
push
popa
sbb
leave
jp
insb
sti
xor
sbb
hlt
cwtl
xor
sub
inc
lds
arpl
jnp
lock
or
dec
xor
adc
push
jge
sbb
movsl
out
push
push
js
lahf
into
xchg
xchg
into
jg
pop
notb
and
icebp
aaa
cmpb
lahf
cmp
and
clc
or
aam
mov
pop
out
out
insb
jo
int3
sub
jp
and
test
xchg
xor
pop
lods
fwait
loop
cld
cltd
sub
fst
ud2
push
sbb
add
out
enter
pop
sub
stos
insb
jnp
loope
scas
pop
cmp
adcl
lcall
in
mov
mov
xchg
cs
imul
mov
aam
xor
repnz
lods
icebp
pop
mov
imul
xchg
cli
sarb
adc
test
or
test
orb
clc
sbb
shrl
jmp
adc
jo
xorb
into
adc
stc
adc
push
aad
loopne
push
add
mov
je
pop
in
call
shrl
cmp
out
lahf
jp
xchg
cmp
dec
and
pop
fistpl
add
pop
stc
cmc
incl
lcall
fs
xor
mov
push
and
dec
jecxz
push
dec
jl
sbbl
lods
je
mov
or
mov
mov
add
das
cmp
mov
push
clc
aas
mov
ret
mov
stos
int
shll
or
jae
cmp
cwtl
adc
into
sahf
xchg
fstpt
push
lahf
fists
xchg
mov
popf
cmpl
xchg
icebp
inc
lds
outsl
lcall
or
jmp
jnp
inc
out
addr16
cli
bound
imul
push
aam
subl
xchg
add
xor
mov
orl
jmp
insb
lods
push
repz
je
xor
or
jne
mov
add
jg
sub
pop
mov
scas
orl
imul
out
rcrl
xchg
shr
mov
mov
bound
daa
imul
mov
test
addr16
sbb
push
sti
mov
pop
xor
stc
aas
out
scas
pusha
dec
int3
dec
sbb
arpl
sbbb
imul
clc
fstl
push
push
xchg
out
pop
and
lock
or
out
cs
call
sbb
aam
mov
xchg
in
lods
mov
cmp
dec
cltd
adc
mov
push
sub
or
cmp
ljmp
push
jecxz
mov
push
fmul
mov
push
hlt
push
mov
push
pushl
xchg
add
movsl
enter
push
inc
push
mov
sub
push
mov
push
adcb
out
add
movb
cld
jg
bound
test
adc
mov
inc
pop
or
mov
movsb
or
sbb
pop
add
push
mov
stos
jmp
jbe
into
pop
dec
test
int
mov
ret
add
call
jge
je
ret
clc
sbb
push
push
sbb
aam
or
and
sbb
pop
mov
pop
mov
rcr
pop
sub
loopne
shr
inc
mov
pop
push
jo
gs
inc
xchg
sub
sbb
fs
pop
in
sub
mov
out
xchg
push
imul
mov
push
mov
dec
cmp
pop
jnp
sbb
or
leave
mov
inc
pushf
cmp
add
cmpb
loop
insl
lods
mov
jns
sbb
fs
ljmp
cmp
mov
jbe
iret
sbb
cmp
cwtl
xor
sbb
pop
popf
orb
xchg
sbb
nop
into
cmpsl
gs
mov
popf
out
cwtl
xor
cmpsb
or
loope
arpl
rclb
jmp
fnstsw
lret
sete
insb
leave
loopne
adc
cmp
cltd
mulb
and
and
popa
popf
and
enter
scas
mov
mov
push
rorb
aad
jle
mov
pop
fdivs
pop
dec
lret
inc
xchg
pusha
sti
xor
shll
inc
cmp
mov
andb
sbb
je
jae
xchg
insl
outsl
mov
mov
testb
sbb
sbbl
jbe
mov
hlt
mov
sub
sbb
out
lret
adc
inc
lods
fdivrs
popf
push
loopne
stos
daa
mov
push
cmpsb
or
arpl
add
jns
push
loope
mov
jno
bound
xchg
rorl
sbb
xor
dec
jnp
inc
bound
aas
test
mov
push
outsb
adc
out
outsb
out
int
imul
mov
jle
movsl
mov
dec
jo
sbb
ja
jecxz
in
cwtl
pop
sahf
fxam
lret
movsl
or
lcall
test
push
push
shl
in
push
data16
cmpsb
pop
scas
aam
push
push
div
cs
push
repz
dec
sbb
lods
xor
sti
push
push
xchg
mov
imul
loop
js
and
mov
add
movsb
insl
jnp
shll
pop
out
mov
mov
rorl
mov
cmpsb
or
fsubl
leave
mov
pop
das
fiaddl
push
sub
rcll
outsl
push
push
cmp
jae
xchg
jl
inc
add
loope
adc
inc
push
pushf
mov
scas
pop
dec
add
rcll
xchg
sbb
adc
and
ljmp
push
jp
ret
mov
add
sbb
idiv
cmpb
cmp
imul
xor
push
mov
jns
sbb
imul
inc
fldz
sbb
jmp
out
pusha
sahf
adc
lods
xor
cmp
pinsrw
mov
addb
mov
adc
lret
daa
dec
iret
out
outsl
mov
movhps
mov
loope
jecxz
fidivrs
mov
jecxz
push
mov
lods
jb
cmp
jb
adc
or
iret
out
fwait
push
movsb
lret
push
add
mov
dec
dec
xor
inc
and
inc
xchg
call
ljmp
xchg
pop
or
pop
les
adc
adc
out
lods
gs
jb
dec
dec
inc
icebp
pop
enter
jno
pop
pop
jae
cmp
sbb
imul
adc
gs
inc
push
inc
test
cmp
enter
xor
add
adc
sbb
adc
cld
insl
int
and
rorl
or
add
stos
stos
scas
xchg
dec
add
inc
pop
sub
dec
cld
inc
sbb
scas
repnz
insb
cmp
add
xchg
xor
lahf
rorl
orb
cmp
cwtl
cli
or
adc
addl
subb
addr16
sbb
enter
mov
incb
sub
xchg
data16
pop
outsl
and
es
or
nop
daa
sbb
jae
imul
dec
outsl
enter
nop
xchg
sbb
and
sbb
jge
mov
jle
jo
dec
inc
pushf
int3
movsb
adc
jl
sbb
arpl
cmp
les
outsl
inc
mov
or
and
out
sti
xchg
imul
rcrb
icebp
mov
dec
movsb
shlb
xchg
pop
sbb
adc
stos
testl
sbb
xchg
cmp
cwtl
mov
mov
cs
std
imul
fwait
mov
pusha
jp
cltd
xorl
idiv
movl
mov
movl
cmp
movl
jmp
fidivl
push
or
fmuls
lret
mov
add
pmaxsw
adc
push
xor
jnp
cmpsb
xchg
mov
mov
mov
es
nop
dec
pusha
jle
jle
mov
push
jge
roll
dec
pop
inc
dec
add
dec
idivb
inc
in
lock
lret
mov
inc
repnz
pusha
mov
or
data16
cmp
pop
pusha
ds
rclb
add
movsl
scas
pop
int3
pop
sbb
sti
xchg
mov
jl
fs
adc
faddl
fstps
xor
mov
inc
lret
fucomi
in
xor
cmc
dec
test
cwtl
call
mov
sub
xor
or
cmp
fs
xor
dec
xchg
jbe
leave
in
ret
mov
cwtl
fdivl
negl
aas
jne
sbb
andb
xchg
pop
movsl
inc
cmp
outsl
int
and
mov
mov
daa
clc
inc
inc
dec
aaa
or
iret
iret
fsts
adc
cli
push
add
mov
mov
movsb
popa
lea
jp
in
popa
jge
add
xor
movsb
inc
enter
and
into
call
sub
lahf
xor
cmp
pusha
fldenv
lock
push
mov
add
mov
mov
sahf
or
jp
and
and
gs
pop
add
or
call
add
scas
incb
js
mov
push
and
pop
std
pushf
fidivl
push
sbb
adc
mov
xor
mov
xchg
dec
int
lret
dec
int3
imul
push
lea
or
mov
xchg
cmp
hlt
mov
ds
ret
rcll
cmp
inc
dec
scas
add
dec
incl
pop
push
cmpsb
jle
adc
sahf
int
sahf
aad
mov
dec
outsl
loope
bswap
mov
cs
cwtl
mov
cmp
cmp
enter
es
out
aam
adcl
dec
mov
add
sahf
push
push
leave
ret
clc
movsb
leave
pop
cmc
jb
push
and
inc
push
cltd
aam
jle
adc
mov
cwtl
inc
inc
mov
mov
fists
or
push
sub
jno
mov
or
pop
enter
call
shlb
adc
stc
push
jno
push
outsl
ret
mov
push
movsb
ffreep
xchg
daa
bound
sub
pop
scas
inc
xor
and
sti
vmovntps
jbe
sar
testl
push
ret
adc
add
cmp
lods
xor
sahf
lret
in
jp
imul
adc
in
stos
pop
leave
stos
jnp
dec
xchg
inc
xlat
adc
cs
loop
push
dec
sbb
fdivrs
or
and
clc
fistpl
das
nop
jbe
sbb
sbb
cwtl
dec
adc
test
lods
fsubl
jns
scas
in
pop
mov
fcmovb
adcb
adc
mov
shr
jg
jecxz
inc
std
add
je
or
cltd
ficoms
sbb
es
cli
cltd
inc
push
push
not
lret
push
dec
aam
andb
push
pop
jbe
or
sbb
scas
jnp
xor
push
into
call
mov
mov
cmp
pop
sbb
inc
ret
sub
push
mov
fiadds
mov
std
stos
push
jmp
fwait
repz
xchg
xor
ret
popf
mov
push
in
lock
int3
sub
lret
lods
mov
test
jmp
and
fbstp
inc
mov
pusha
cltd
sahf
add
and
xor
dec
push
cmp
dec
scas
xor
xchg
je
ds
adc
fsub
out
fcomi
dec
in
jp
imul
data16
xchg
into
movsb
fs
fnstenv
sub
mov
mov
mov
movsb
mov
sub
mov
in
pop
push
xor
test
xorl
cmp
fwait
jns
ljmp
mov
mov
lret
int
mov
mov
lea
iret
xchg
aaa
dec
enter
add
enter
lods
push
imul
jecxz
cmc
inc
xchg
or
add
rorl
scas
loopne
jg
test
mov
rcr
add
outsb
mov
add
cmc
ficoml
stc
subb
in
cmpsb
mov
popa
jae
mov
stc
inc
push
scas
jnp
mov
fwait
add
out
push
xchg
cs
leave
es
out
push
lahf
push
lret
push
insb
dec
scas
rolb
int
inc
jb
push
sbb
adcb
pop
add
stos
cld
inc
jo
xchg
push
sub
add
repnz
cld
and
cs
daa
scas
fwait
popa
and
and
cld
ror
pop
js
loope
pop
inc
cs
sbb
push
hlt
and
fidivl
inc
xchg
lret
lret
lods
ret
xchg
or
iret
scas
mov
xchg
fstpt
xchg
pop
aam
push
mov
enter
inc
in
sub
dec
cwtl
sarl
jmp
adc
add
mov
cli
es
out
lahf
mov
xchg
add
mov
jl
out
cmpsb
mov
adc
addr16
imul
xchg
out
mov
frstor
inc
test
outsb
aas
outsl
mov
fidivs
pushf
push
scas
pusha
test
mov
mov
add
xchg
repz
lret
dec
add
push
cwtl
and
cmp
shl
repz
sti
jge
or
sub
sbb
push
movsl
pop
jmp
mov
xchg
pop
cmp
movsb
mov
push
jno
mov
xor
mov
imul
sub
xchg
stos
loope
and
ret
add
rcll
mov
inc
rclb
movsb
fs
loop
mov
jae
xor
movl
cmpl
jb
mov
sbb
jmp
push
call
movl
mov
mov
push
push
adcl
push
push
andl
call
xor
xorl
xor
orl
or
or
movl
mov
mov
mov
cmp
jne
mov
mov
jmp
mov
dec
and
xchg
sub
push
mov
iret
imul
bsr
out
insl
cmp
out
push
outsb
aad
mov
imul
cltd
push
test
outsb
sub
dec
icebp
xor
jbe
xor
sub
rcrb
mov
xchg
lods
push
bound
xor
adc
cltd
mov
cmp
xchg
jl
xchg
fmull
dec
cmp
sub
or
mov
lret
mov
imul
and
dec
loope
outsl
outsl
ljmp
and
fisubrs
xor
push
aas
aam
call
or
insl
out
push
fldenv
ja
shll
into
mov
sbb
and
adc
jo
dec
stos
insl
ret
push
int
jo
xchg
pop
sbb
ss
scas
mov
stc
and
xchg
aas
movsl
mov
dec
pop
xchg
jae
in
jp
jo
js
jo
shlb
fwait
sub
out
in
in
pop
and
in
gs
mov
push
lea
jl
mov
sbb
inc
pop
aas
xor
mov
das
adcb
xorb
mov
jne
test
xlat
sarb
mov
push
lret
addl
inc
or
sbb
das
jl
ds
shll
adc
inc
xor
dec
xor
jo
fcomps
stc
rcr
mov
lret
cltd
sahf
push
pop
jns
aaa
mov
fwait
xchg
push
and
cmc
add
incl
enter
push
and
pop
xchg
mov
jmp
or
jp
inc
push
cmpsb
hlt
pushf
movsl
xchg
mov
dec
popa
mov
xor
out
xlat
xor
outsl
lcall
daa
inc
fisubs
es
cmp
cmp
cmpb
cmp
xchg
out
fsubs
dec
iret
ds
lcall
xor
adc
cmpb
das
sbb
shlb
jmp
push
outsb
adc
or
jae
jne
jno
repnz
outsb
xchg
mov
mov
push
sbb
scas
fsubr
adcl
ficoml
push
mov
outsb
pop
lcall
inc
inc
inc
fcompl
pop
scas
popf
jge
mov
push
mov
pop
adc
testl
addr16
sbb
mov
dec
xor
imul
imul
fbstp
xor
jp
mov
mov
pop
into
xchg
mov
cmp
cmp
adc
and
jmp
pop
or
cmp
loopne
inc
jns
pop
push
cmpsb
pop
gs
aad
xor
jae
fnsave
les
or
rclb
stos
outsl
fadd
ss
mov
fs
insb
mov
iret
pop
push
jb
data16
pusha
popa
jp
inc
sub
bound
out
and
or
shrb
xchg
jmp
nop
cmp
pop
push
notl
inc
sub
push
pop
cmp
popa
vmaxss
lahf
pop
into
rcr
mov
scas
jge
fcmovnu
mov
ja
mov
inc
movsl
jg
jge
dec
popfw
pop
mov
in
idivl
pop
mov
or
push
rcl
jns
jmp
pop
divb
bound
in
sti
push
nop
push
sti
jbe
xchg
loop
mov
gs
subl
mov
dec
xor
rcl
pop
push
fisttpl
in
test
jnp
loopne
xor
inc
daa
mov
leave
adc
loop
out
loopne
inc
add
mov
sub
cmp
into
subb
adcl
mov
jge
sub
js
sub
stos
sbb
jecxz
cmp
add
scas
xor
mov
pop
jae
push
fdivl
pop
add
leave
mov
cwtl
loope
jge
xor
das
cld
sar
or
dec
out
pop
inc
push
arpl
or
mov
stos
pop
cli
xchg
lods
stos
mov
xchg
hlt
in
cmpsb
lahf
add
jo
fsubl
jnp
test
mov
adc
lea
insl
sbb
xor
dec
test
out
dec
aam
cli
sbb
push
add
mov
imul
stos
pop
or
sbb
inc
int3
sub
dec
jb
pop
inc
sub
lods
enter
int
mov
pop
pop
sub
pop
dec
push
jo
lea
dec
icebp
daa
pop
pusha
jae
mov
mov
add
outsl
jae
xor
mov
push
loopne
rclb
out
fdivs
and
outsl
mov
ljmp
push
fidivrl
loopne
test
in
rclb
push
pop
lods
int3
inc
sub
int3
mov
pop
and
lahf
pop
pop
lea
in
out
jmp
subb
sbb
daa
fildll
mov
cmp
sub
push
sbb
clc
lods
lret
add
and
or
ret
push
shr
hlt
loop
out
ja
movsb
sbb
lds
roll
cmp
sti
sbb
dec
jle
adc
out
jne
pop
jg
inc
xchg
fcompl
fcoml
mov
rcr
sub
adcw
test
push
cmp
lods
cli
cmp
test
lea
add
mov
push
loope
inc
xchg
and
inc
frstor
rcrl
add
ror
or
jp
insb
adc
dec
insb
out
repz
add
push
inc
mov
add
leave
jno
popl
mov
scas
jge
outsl
inc
lahf
xchg
push
ror
jecxz
adc
push
lods
ds
js
lods
arpl
loop
jnp
xor
sub
mov
ds
sbb
sub
cmc
inc
sahf
loopne
loope
cwtl
mov
mov
xchg
insl
in
xchg
fimull
mov
orb
bound
mov
push
adc
xchg
pusha
hlt
mov
mov
shrd
shl
mov
mov
shr
xor
mov
xor
or
mov
mov
mov
shrd
xor
shr
mov
mov
xor
or
mov
shl
push
pop
mov
mov
mov
mov
mov
sub
movzwl
mov
movzwl
cltd
jmp
jb
ffreep
push
aad
push
dec
mov
lds
invd
add
ud1
adc
sbb
ds
push
pop
outsl
notl
cli
pop
lahf
fstpt
mov
ficomps
jno
push
fstps
mov
mov
mov
out
mov
or
xchg
fidivrl
pop
cmpsb
imul
sub
pop
dec
test
adc
fdivr
pop
pop
les
pop
out
dec
fs
xchg
pop
or
fwait
lock
test
dec
inc
in
jl
out
mov
and
loopne
imul
sbb
pop
adc
mov
lahf
dec
jae
cmp
lods
jle
test
sbb
ret
scas
xchg
test
mov
faddl
push
sub
movsl
jge
adc
ja
adcb
mov
sahf
filds
rol
sub
mov
cmp
in
xorl
jno
lahf
or
mov
je
aas
sarb
mov
fdivr
or
data16
scas
rcl
pusha
hlt
ret
test
int3
aam
pusha
sub
movsl
scas
jl
jo
call
lods
sarb
pop
cltd
pop
test
mov
mov
mov
jo
xchg
mov
jl
mov
push
and
xor
xchg
inc
out
jne
push
push
xor
int3
xor
movsl
xchg
ss
test
rclb
fwait
xor
and
pop
push
push
mov
xchg
inc
aad
pop
inc
sarl
lods
fs
test
fisubrs
sub
dec
ret
and
test
inc
sbb
adc
cmp
push
aad
dec
jnp
inc
test
mov
mov
xchg
pop
dec
adc
pop
inc
scas
sbb
sysret
lcall
sarl
dec
pop
outsb
in
jmp
mov
mov
sub
xor
mov
or
mov
lds
sub
cmp
cmc
movsb
fldcw
faddl
mov
cld
dec
adc
mov
int
mov
sub
cmp
shr
mov
cltd
jns
aam
hlt
xchg
lret
shlb
cltd
push
cli
out
fs
loopne
cmpsl
xchg
jg
dec
adc
add
notb
push
imul
das
push
and
cmp
ljmp
fwait
jecxz
xchg
mov
inc
rorb
add
adc
cmpsl
inc
mov
gs
imul
repnz
add
shl
jbe
les
jo
outsl
jmp
jae
or
fiaddl
push
pusha
dec
xor
pop
inc
stos
arpl
adc
inc
mov
xchg
mov
andl
icebp
or
mov
inc
mov
addb
out
mov
inc
jbe
out
lret
nop
shl
push
je
xor
pop
pop
repz
adc
loop
push
dec
movsl
fs
cltd
dec
ja
enter
cmp
lods
push
adcl
push
cli
movsl
jb
jl
lds
in
mov
adc
jmp
mov
inc
scas
and
leave
pop
adc
cmpsb
subl
leave
mov
lods
lods
lahf
inc
and
mov
nop
xchg
mov
inc
push
js
mov
jo
sbb
test
xchg
ret
in
mov
dec
sar
cmp
cmp
std
lcall
or
pop
add
int
xor
cmpsb
shlb
ffree
sub
ret
pop
mov
pop
xor
adc
jmp
fldt
bound
lock
movsb
int3
xor
xchg
into
xlat
mov
inc
jp
mov
gs
in
popa
jne
inc
and
test
ja
pop
or
mov
jl
repnz
or
dec
mov
lock
cmp
jbe
or
cmpsb
mov
out
and
xor
mov
leave
std
fidivl
mov
call
imul
leave
inc
movb
int
in
das
ja
xchg
arpl
jg
jmp
popf
arpl
pop
nop
add
jecxz
lock
mov
inc
adc
xor
int
or
or
es
fnstcw
stos
or
out
jns
fcmovb
addl
iret
and
sbb
mov
in
insb
or
scas
lods
and
clc
and
aad
rclb
cmp
pop
popa
mov
mov
and
push
mov
sbb
jne
xor
inc
out
mov
dec
insl
nop
lahf
movb
outsl
cmp
icebp
jge
ss
add
dec
mov
lret
mov
mov
pcmpeqw
aad
test
rorl
push
mov
jno
dec
loop
stc
jp
ret
pop
jb
inc
in
popf
sti
fnstsw
inc
sarb
enter
fwait
iret
icebp
fwait
aas
mov
add
xlat
or
sar
into
mov
adc
jne
jl
loop
dec
popf
pop
cld
add
ss
dec
subb
idivl
fadd
jne
push
jg
xchg
inc
mov
pop
cld
scas
mov
insb
pop
sbbl
cmovs
mov
pop
stc
stc
les
xchg
je
test
push
mov
push
pop
in
fstpt
cli
pushf
xor
enter
mov
ficoml
call
ljmp
xchg
jnp
inc
sahf
or
mov
mov
and
pop
sub
adc
leave
scas
jg
lods
jne
aas
add
cmp
xchg
xchg
push
pop
xchg
popl
loopne
push
jbe
inc
inc
fsts
sbb
add
fildll
mov
lahf
dec
adc
mov
cs
in
pop
xor
pop
iret
or
mov
xchg
jmp
pusha
lahf
aas
sti
aas
pop
or
ss
jl
add
or
movups
push
push
and
lods
les
and
fdiv
add
lea
rclb
cmc
push
inc
divb
push
dec
std
or
lds
nop
sbb
mov
add
in
test
sub
and
popa
sub
mov
insb
jb
orl
rcr
push
xor
mov
and
mov
xchg
bound
jbe
es
cmp
ljmp
popa
dec
jno
mov
push
cmp
xchg
stos
pop
sub
ret
jmp
sbb
push
mov
jbe
cmp
scas
ret
mov
dec
flds
ljmp
mov
hlt
push
push
shlb
mov
add
dec
push
mov
cmp
sub
add
test
arpl
sub
fwait
mov
push
es
pop
cli
xor
mov
lret
mov
mov
dec
test
mov
mov
mov
xor
inc
sbb
outsl
mov
gs
inc
xchg
jl
cmp
jns
adc
sbb
lods
data16
or
mov
xor
test
hlt
movsl
fs
sbb
inc
pusha
inc
imul
or
mov
cwtl
inc
cld
push
mov
out
call
and
bound
add
mov
jb
push
dec
mov
push
cs
fsubl
lods
cmp
aas
daa
data16
idivl
lret
mov
data16
and
mov
or
cmc
sti
imul
xor
popf
fnstsw
xchg
cli
stos
xchg
pop
add
pop
mov
or
daa
les
cmp
sbb
mov
sahf
es
xor
stos
mov
add
loope
xor
cmp
xor
mov
pushf
mov
sub
and
lea
sub
adc
add
cs
mov
adc
out
arpl
xchg
cmpsb
xor
punpcklbw
scas
rcrb
ret
adc
dec
add
enter
out
int3
dec
ja
scas
add
mov
lahf
in
mov
sub
cmp
sub
sbb
mov
dec
aad
in
in
sahf
pusha
sub
cmp
inc
sub
das
push
lock
cld
insb
ja
sti
mov
inc
shlb
mov
inc
ja
adc
jnp
add
lret
aam
sbb
push
call
inc
lcall
addb
sub
lea
rorl
mov
in
fucomip
aam
dec
jnp
mov
jmp
jno
adc
push
sub
movsb
les
inc
push
shll
mov
push
imul
sub
mov
aaa
xchg
addb
shl
aaa
aam
out
push
and
decb
lahf
inc
jp
xchg
xchg
mov
and
pop
sbb
ret
or
adc
incb
lret
and
test
imul
popa
or
xchg
les
sub
popf
sub
add
test
xchg
je
insb
cli
stos
sub
add
insb
ret
scas
in
out
in
in
pop
xor
fsts
mov
xor
or
inc
fimuls
push
inc
jp
aam
mov
jge
xchg
cmp
les
ret
sahf
fsub
fiadds
shr
ljmp
mov
mov
aad
scas
shlb
jge
pushf
inc
test
lock
scas
mov
lahf
out
daa
call
jo
pop
push
repz
sbb
shll
add
mov
xchg
pop
nop
leave
xor
mov
and
cmc
sub
push
adc
call
cmp
icebp
into
inc
mov
or
add
add
dec
sub
cmc
scas
inc
ficompl
mov
xchg
add
mov
out
mov
pop
jno
popa
adc
jnp
inc
test
arpl
jnp
push
ljmp
ficomps
insl
mov
cmp
lock
add
dec
shr
lods
sahf
mov
adc
inc
inc
add
mov
pop
lds
fwait
inc
mov
xchg
jp
movsb
push
lcall
mov
sub
sub
pop
dec
sub
sub
xor
mov
jg
jne,pt
xor
out
add
popf
push
and
adc
out
movsb
inc
inc
add
jp
and
dec
jbe
xor
mov
and
lahf
inc
out
jecxz
loop
sbb
cmp
dec
loope
ljmp
scas
clc
mov
add
dec
lods
loop
xchg
add
int3
into
ret
mov
mov
and
pop
dec
fiaddl
sub
bound
shrl
mov
push
add
inc
mov
xchg
sbb
icebp
inc
xchg
cwtl
out
jle
mov
push
mov
mov
popa
sub
inc
cltd
rclb
daa
addr16
out
popa
add
add
push
fadds
push
daa
cmc
out
test
and
push
lret
pop
fisttps
dec
push
stos
out
insl
xor
lea
push
scas
xor
les
xor
sarl
testb
movsb
jb
sub
mov
insl
es
inc
mov
sub
imul
lods
sahf
notl
pop
not
insb
ljmp
pop
out
rcll
push
xor
repnz
cs
push
push
leave
imul
mov
xor
pop
cmp
add
and
dec
cli
pop
pop
sub
in
insb
sub
inc
mov
pushf
nopl
ror
push
inc
jecxz
and
ds
cwtl
int
cmpsl
pop
insb
mov
sub
lods
cmp
dec
jae
pop
jp
fdivrs
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
and
mov
imul
mov
sub
mov
add
mov
cmp
jbe
mov
mov
shrd
xor
mov
shr
jmp
xor
xor
or
fcoms
invd
add
dec
fsubrs
mov
dec
and
pop
add
shrb
inc
fs
arpl
mov
and
mulps
inc
enter
lods
rcrl
sub
push
jle
nop
ss
ret
pushf
stc
gs
dec
push
cmp
movsb
pop
cmp
cmp
adc
add
dec
jae
mov
pop
mov
pop
pop
popf
xor
mov
orl
loope
mov
pop
adc
fs
adc
pop
pop
mov
jl
jmp
repz
cmp
push
sbb
cmp
cmpsl
in
fisttpl
loope
sub
cli
and
divl
mov
icebp
mov
shlb
add
inc
mov
mov
mov
jae
xor
lock
mov
loope
add
xor
jp
inc
xor
xchg
notl
enter
mov
jmp
sub
int
pop
leave
or
loop
adc
rolb
out
dec
in
xchg
repnz
xor
out
xor
lret
jae
inc
subl
rorb
loop
push
mov
push
mov
in
lahf
adc
and
mov
push
add
cmpsb
shl
cld
inc
fwait
cltd
fsubrl
xchg
mov
push
cmp
push
sbb
sbb
fstpt
pop
jo
int3
mov
std
push
cmpsl
push
enter
lret
and
mov
in
xchg
mov
loop
inc
cli
and
and
lods
sbb
xchg
jns
fistl
adc
gs
stos
sbb
enter
cmp
add
mov
adc
cli
mov
aas
cli
hlt
je
jnp
js
ret
lahf
mov
popa
aaa
pcmpgtw
std
jbe
lods
push
out
xchg
sub
clc
add
das
fiadds
fnstenv
daa
add
push
fadds
lds
in
clc
test
inc
jmp
int
hlt
or
jo
mov
xchg
pop
xor
in
push
sub
pop
pop
bound
fs
inc
hlt
mov
jno
pop
aaa
ljmp
aad
dec
xchg
adc
mov
jbe
rolb
or
push
shll
or
gs
jns
push
pop
ffree
jno
jecxz
mov
sti
cmp
daa
adc
stos
sahf
dec
scas
lock
rcl
mov
lea
push
scas
lcall
push
int3
cmpsb
inc
cmpsb
mov
pop
or
test
int3
imul
cmp
aam
xchg
cli
adc
inc
xor
inc
xlat
cmp
in
sub
add
mov
jnp
out
or
das
addl
andb
mov
mov
xchg
mov
or
loope
push
push
stc
pop
mov
jbe
mov
pop
jmp
jmp
cmp
ret
sub
sahf
loopne
pop
cmp
push
int
mov
jnp
and
lcall
or
dec
cmpsb
or
mov
wrmsr
out
pop
cltd
push
mov
inc
pop
sahf
jp
mov
pop
test
inc
icebp
jecxz
icebp
loopne
int
lsl
mov
aam
adc
and
aas
pop
xchg
fmuls
ss
xor
adc
sbb
jle
add
push
sub
push
cmpsb
xor
pusha
test
std
movb
data16
add
jl
sub
lods
repz
dec
lods
add
or
cmpsb
mov
ds
add
mov
mov
repz
pop
push
int3
jmp
pop
and
insb
cmc
repnz
dec
test
push
stc
adc
mov
mov
test
adc
or
jns
outsb
or
cmpsb
stos
inc
push
or
loopne
mov
testb
lcall
sbb
lret
add
repz
out
int
sbb
in
mov
sar
ja
xchg
dec
pop
je
pop
test
sti
add
movsl
enter
imul
fldcw
mov
mov
loop
out
imul
pop
sub
xor
aas
aaa
imul
xchg
clc
add
shll
jmp
mov
xchg
xchg
pop
lret
adc
mov
sbbb
icebp
add
mov
ret
pop
pusha
pop
inc
nop
sub
fnop
add
push
sbb
pop
int3
bound
inc
mov
fistl
jmp
rcll
leave
xchg
dec
push
mov
mov
xchg
imul
lcall
mov
lcall
addr16
idiv
dec
pusha
push
loopne
mov
mov
sbb
add
xchg
pop
adc
pop
push
and
lret
leave
mov
scas
fcoms
outsl
xchg
hlt
jae
xchg
dec
popa
and
cli
iret
test
test
lods
bound
push
cld
pop
inc
cmp
pop
clc
jae
push
jns,pn
cmp
cvttps2pi
mov
cmp
or
xlat
mov
lods
add
cmp
in
or
push
sti
sbb
cmp
and
divb
loopne
in
or
shl
insl
pop
and
add
fisubs
dec
pop
ret
pop
dec
sbb
arpl
cltd
fmuls
push
xchg
rorl
add
not
and
jp
shrl
sub
ss
loopne
mov
cmp
add
and
sbb
ret
out
xor
or
stc
out
imull
or
cltd
push
faddl
ret
and
and
inc
push
mov
clc
mov
test
inc
xchg
push
ds
imul
in
leave
out
in
addl
sbb
pop
pushf
outsl
imul
xchg
push
add
push
mov
cli
sbb
fnstenv
dec
pop
pop
lcall
add
pmulhw
pusha
or
sti
xrelease
fwait
jnp
xchg
sbb
fsubrs
into
jp
jne
push
jae
movsb
sub
dec
xor
in
sub
jbe
push
cld
mov
lock
pop
jg
frstor
or
pop
test
push
push
xchg
pop
ss
fistpll
je
jne
popa
or
cmp
lcall
or
mov
ljmp
sarl
sbb
xor
or
pushf
xchg
cmp
mov
adc
outsl
mov
rolb
push
mov
adc
in
cmp
sub
mov
inc
mov
add
add
xchg
pop
hlt
insl
jl
adc
mov
jo
aad
aam
or
je
cmp
xor
and
cmp
fwait
outsl
xor
nopl
int
je
out
cmpsl
lock
dec
jg
shll
and
addb
jp
out
enter
mov
lcall
add
mov
pop
push
and
sti
sub
and
je
push
pop
jo
rcrb
pop
mov
xchg
imul
test
data16
pop
mov
rcll
lcall
incl
push
ljmp
cld
scas
jmp
ret
bound
push
pop
jns
sub
push
movsl
xchg
ret
negb
in
and
or
inc
cmpsb
inc
mov
fcomps
js
sbb
fldenv
jmp
pushf
xchg
ret
ss
mov
dec
mov
nop
leave
mov
or
sub
push
hlt
push
mov
add
dec
inc
lock
or
repnz
xchg
iret
rclb
insl
movsb
lahf
dec
scas
sbb
inc
das
adc
push
fsubl
push
mov
mov
dec
lods
add
lock
or
dec
movsb
inc
outsl
bound
daa
jp
xchg
push
bound
popa
bnd
inc
rorl
push
xchg
and
daa
jne
filds
pushf
xlat
mov
jge
and
jae
shl
sti
dec
dec
cmp
cmp
lock
and
inc
cmpsb
fadds
andl
mov
adc
inc
fildll
mov
mov
cmpsl
push
das
push
sarb
and
cmp
xchg
sub
pushf
mov
xchg
das
dec
sbb
jecxz
mov
cs
inc
xor
loop
lea
sbb
out
or
rcrb
xchg
or
push
out
dec
movsb
and
cmp
mov
sbb
push
or
xchg
mov
aam
fs
mov
pusha
sahf
sub
imul
xchg
push
mov
jge
out
sbb
jp
int3
lds
jns
arpl
andl
push
xor
mov
push
mov
pop
adc
jb
std
fneni(8087
std
stos
pop
cmp
and
gs
push
aas
or
jbe
and
outsl
insl
jbe
ret
mov
daa
fisttps
inc
test
repz
mov
repnz
filds
icebp
addl
pop
xchg
inc
jmp
outsl
fiadds
adcl
lahf
into
shll
idivl
xor
mov
push
jmp
xchg
into
jb
loop
or
out
jge
rcl
leave
cmp
rcrb
stos
lahf
into
jo
insl
cmpb
gs
das
lahf
add
push
sub
push
stc
lods
or
in
leave
push
sbb
mov
daa
in
lret
in
mov
and
adc
pop
leave
stc
ffreep
xchg
xchg
or
jb
mov
sarl
cmpsl
pushw
cs
hlt
outsl
push
xchg
fnsave
std
pushf
imul
dec
mov
push
outsb
orl
mov
shlb
clc
xchg
pop
arpl
lea
dec
fstp
or
mov
add
stos
adc
scas
fwait
sbb
aaa
pop
mov
push
in
das
insb
xchg
mul
shlb
aaa
jns
push
push
decl
xchg
cltd
or
cltd
mov
push
mov
inc
xchg
mov
inc
addb
xor
js
pop
add
les
xchg
pop
loopne
jns
jne
sub
xlat
mov
rclb
outsb
dec
push
in
push
mov
push
fstpl
rorl
mov
dec
push
test
mov
xchg
sub
test
cwtl
jle
nop
stos
jae
mov
out
push
pusha
and
pop
aas
mov
aaa
lahf
add
jne
loop
call
adc
inc
jecxz
aad
pop
add
in
mov
lods
fwait
dec
and
out
notb
push
pop
mov
inc
jo
sbb
cmp
jmp
cltd
xchg
jmp
push
inc
jmp
xor
clc
lods
cmp
or
mov
xchg
lds
dec
jbe
xor
sbb
mov
mov
bound
xor
lahf
movsb
nop
inc
les
je
add
xor
rcrl
int3
data16
cmp
aam
and
insb
xor
mov
push
push
outsl
cmp
push
aad
pop
addr16
mov
ds
icebp
shrl
adc
push
mulw
adc
inc
mov
push
je
cwtl
cmp
adcb
mov
std
xor
bound
push
cmc
sarb
dec
mov
outsb
mov
xor
cld
cltd
pusha
sbb
mov
mov
in
jo
inc
pop
push
pop
jp
mov
icebp
mov
jmp
adc
ss
in
lods
cmp
arpl
pop
adc
test
jl
lock
pop
or
divl
mov
loop
add
rcrl
push
iret
jg
shr
leave
iret
mov
jg
push
pop
mov
push
out
jl
ret
inc
inc
add
ret
mov
mov
ret
push
mov
sub
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
jmp
inc
mov
or
mov
mov
nop
push
out
mov
jnp
pop
iret
xchg
sahf
jge
xchg
lahf
cmp
in
dec
pop
lds
xor
sarb
in
mov
inc
mov
mov
cs
inc
push
test
push
jbe
rcll
pop
xchg
inc
nop
jl
xchg
into
popa
mov
pushf
xor
lret
mov
mov
adc
or
xor
es
addb
adc
sets
or
sbb
imul
fdivrl
push
ficoml
mov
jb
arpl
mov
out
ret
add
in
mov
pop
sub
mov
mov
lock
xchg
cld
cmp
pushf
subps
xor
or
mov
int3
sarb
test
mov
mov
fs
insl
popa
pushl
out
cmp
cwtl
test
inc
lret
dec
push
cld
in
imul
addr16
xchg
sbb
test
xor
test
cmp
repnz
clc
mull
sub
pushf
ror
roll
aad
or
xor
pop
inc
xlat
out
jle
roll
add
outsb
lds
outsl
jg
enter
pusha
mov
sbb
fxch
xchg
or
adc
insb
mov
inc
icebp
or
sbb
mov
cmpsl
cltd
mov
xchg
add
imul
sti
in
clc
add
push
xchg
inc
into
ret
mov
mov
jp
loopne
sbb
shl
testl
ret
jge
incl
std
fisttpl
movsl
int3
xor
add
incl
jb
ret
ljmp
sub
lock
jae
das
clc
test
mov
xchg
imul
out
mov
and
insb
mov
jne
or
inc
or
xchg
push
mov
mov
loope
lret
fildl
iret
dec
mov
rcrb
das
andb
mov
dec
mov
jnp
push
inc
sbb
das
push
frstor
jecxz
and
inc
stc
pushf
stos
jle
jae
jne
cmpsl
mov
cmpl
and
ss
enter
stos
fisttpll
push
out
sbb
pusha
xor
daa
sti
pop
add
lret
lea
decl
dec
data16
es
mov
pusha
mov
push
mov
imul
xor
test
pop
xchg
push
sarl
movsb
xchg
pop
push
fists
roll
inc
and
inc
mov
add
es
mov
fwait
inc
aaa
in
inc
js
fildll
insl
sbb
jae
test
lock
xchg
sahf
pop
daa
cld
or
sarb
scas
pop
std
adc
popa
mov
sbb
cwtl
mov
lds
or
jb
dec
in
subl
mov
jns
sub
mov
xor
inc
xor
mov
cmp
iret
aas
push
aam
sbb
jne
and
push
imull
ss
mov
pop
lods
addb
mov
pop
cmp
pop
or
ljmp
sub
and
aas
stc
mov
out
xchg
sbb
jae
lret
cmp
iret
sbb
mov
das
pusha
test
dec
fdivp
mov
cmp
rcll
dec
jge
mov
dec
mov
jae
fsubrl
int3
icebp
mov
adc
adc
push
loope
and
imull
add
ds
cltd
jecxz
and
fnsave
and
add
lods
push
adc
jae
push
xlat
xor
jle
mov
xor
dec
in
adc
sbbl
jae
adc
hlt
sbb
sub
fmul
xchg
int
popf
lahf
xor
fstpt
cmp
shll
xor
mov
stc
cmp
xchg
enter
repz
push
out
and
mov
push
sahf
adc
mov
imul
adcl
stos
repz
pop
cmpsl
orl
push
dec
scas
lret
sar
arpl
and
daa
js
dec
shlb
sub
nop
sub
pushf
shlb
push
test
inc
sub
adc
push
push
shl
shr
ret
fsubr
popa
inc
popf
aam
push
jp
cmp
dec
fmull
pop
jne
sbb
scas
imul
cwtl
fsubr
mov
ljmp
push
aam
jbe
fwait
add
hlt
iret
push
sbb
aas
int3
popl
pop
xor
inc
push
adc
sbb
jbe
movsl
movsb
xor
call
adc
xchg
and
leave
xor
mov
push
lcall
push
sbb
push
dec
push
sbb
sbb
push
lock
pop
mov
or
popf
fisttpll
scas
pop
and
mov
push
scas
ja
pop
insl
cmc
xchg
cmp
sbb
rcll
nop
fwait
cmp
ret
addr16
inc
or
inc
or
pop
and
mov
dec
call
sub
and
femms
enter
lret
mov
mov
add
pop
fidivrl
lock
cli
aas
popf
xchg
mov
mov
lock
stos
xchg
mov
leave
cmp
mov
sub
iret
xchg
daa
pop
out
loope
ret
and
mov
loope
and
jl
xor
xchg
jnp
inc
loopne
lods
adc
mulb
xor
fldenv
sub
fisttpl
imul
push
xor
outsl
and
lods
rorl
pop
push
sbb
xor
adc
push
pop
negb
cmp
jb
lods
call
sahf
xchg
xchg
adc
jl
in
push
pushf
sub
pop
fildl
nop
inc
adcl
dec
dec
outsl
adc
pop
mov
inc
inc
test
sbb
xchg
loopne
scas
mov
add
and
arpl
or
lcall
adc
pop
jp
arpl
pop
ljmp
out
dec
cwtl
adc
push
inc
sbb
mov
xchg
lods
fwait
jmp
jbe
lds
jl
pop
push
sbb
xorb
mov
fucom
orb
xchg
mov
mov
pop
mov
xor
popa
inc
and
in
out
fadds
pop
mov
insb
loopne
fadds
pop
xchg
jle
jno
cmpsb
mov
sbb
call
and
je
fcmovbe
lret
push
pop
sbb
inc
xchg
cli
sbb
xor
rorl
or
cli
jle
loope
iret
popa
lock
push
lods
mov
mov
jg
or
dec
das
test
popa
lods
cmp
das
movsl
addr16
outsl
and
xchg
fstl
enter
in
gs
loop
jmp
hlt
mov
add
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
jmp
mov
ret
mov
adc
cmpsb
js
pop
stc
mov
sbb
mov
setns
aas
rolb
cmc
imul
cmpsb
cmp
fucomp
jno
in
sahf
dec
iret
pop
shl
dec
inc
inc
nop
shrl
cmp
insb
enter
push
movsl
lods
add
and
dec
ljmp
fists
sub
clc
push
rcrb
vmovshdup
mov
jge
ret
xchg
sbb
pop
mov
cltd
fdiv
jmp
push
jo
jno
push
in
dec
adc
or
pop
imul
cmp
lods
nop
decb
mov
ljmp
mov
inc
adc
data16
fdivs
lea
dec
in
ret
push
das
int
xor
or
and
jecxz
in
sbb
xor
adc
fcoml
push
loop
pop
hlt
loop
and
in
sub
aam
aad
aam
add
scas
adcl
adc
sbb
jb
adc
push
in
pop
or
cmp
bound
mov
nopl
dec
dec
outsl
pop
repnz
dec
xchg
mov
sbb
mov
lcall
fsubl
adc
dec
enter
psllw
out
insb
xor
in
mov
mov
mov
mov
push
cmp
jb
pop
sub
jo
popf
dec
das
mov
arpl
cs
lods
cli
xchg
stos
xchg
xor
mov
pop
xor
dec
push
fs
pop
lret
pop
push
fcompl
push
loope
pop
jbe
mov
xchg
sub
xchg
lea
cwtl
mov
clc
sub
sbb
mov
mov
pop
sarl
xchg
xor
mov
out
adc
push
les
test
movsl
add
fisubrl
sbb
adc
sti
fmuls
ret
rcll
pop
outsl
daa
or
int3
inc
sbb
sub
mov
daa
out
xchg
rorb
add
in
int
dec
add
repz
notl
pop
and
jle
es
std
das
or
clc
lods
jecxz
xor
aad
and
test
sbb
xor
cmp
sub
stos
daa
xchg
scas
sahf
pop
mov
repnz
jmp
push
and
ljmp
jmp
lret
lods
mov
leave
or
in
jp
mov
or
dec
fwait
insb
jnp
shl
lea
fisttpll
pop
lahf
mov
lock
imul
fsts
jp
imul
loopne
jnp
push
inc
xlat
inc
stos
jle
in
data16
es
loop
int3
jecxz
mov
ret
stc
fdivl
gs
mov
sbb
mov
pop
add
nop
ss
pushf
and
addb
sub
bound
push
dec
cwtl
or
mov
mov
cwtl
cld
mov
mov
leave
pop
add
inc
mov
jl
je
sbb
cmp
jnp
push
lods
or
sub
in
fisubrl
and
pushf
out
cmp
scas
out
dec
ljmp
pop
push
mov
fildl
out
xchg
or
add
popa
outsb
sbb
or
lock
insl
pop
cltd
xchg
push
mov
or
pop
es
dec
fwait
xor
xchg
mov
xchg
aam
ss
test
push
xchg
xchg
pop
add
aad
cmpsb
std
in
nop
pop
pop
js
out
gs
push
or
mov
mov
scas
xchg
mov
icebp
cld
divl
push
or
mov
and
sub
outsb
mov
xor
scas
mov
sub
push
and
push
rclb
sub
lods
push
dec
jno
adcb
mov
cmpsl
pop
dec
frstor
pop
fwait
sub
mov
sub
and
cmp
jbe
insb
mov
mov
sti
ret
jns
pop
mov
nop
lods
pop
scas
xlat
popa
pop
mov
test
popf
es
sahf
dec
arpl
sub
pop
dec
mov
pop
mov
daa
jno
mov
pop
dec
test
jg
xchg
add
pop
push
js
insl
pop
dec
subl
mov
daa
mov
adc
arpl
std
mov
out
lock
xlat
dec
dec
inc
lock
gs
jb
ds
test
xchg
xorl
cmp
jne
ret
jecxz
punpckhbw
mov
mov
popl
jge
ss
in
mov
testb
ds
ss
push
add
in
and
sbb
pop
cld
cmc
dec
mov
cmc
rcll
lahf
fwait
dec
add
jmp
xlat
mov
pusha
jo
cmpsl
push
sbb
addl
inc
sub
cli
mov
shrl
repnz
int3
cmp
fldt
fiadds
sbb
in
movsb
add
lret
iret
mov
cltd
pop
pop
aas
fs
pop
test
rcr
cwtl
and
or
push
dec
push
xor
xchg
mov
in
pop
decl
mov
mov
cli
clc
test
mov
imul
push
mov
inc
daa
ds
ret
adc
popa
jle
clc
push
sub
and
fsub
je
int
pop
ljmp
cs
icebp
sub
cld
je
and
push
cmp
adc
scas
adc
wbinvd
sbb
push
pop
mov
cwtl
dec
dec
aad
fisubrl
inc
inc
add
divb
jle
jg
xor
sbb
xchg
dec
int
jbe
fucomi
or
push
jmp
push
pop
cmpsl
sbb
jns
mov
push
outsb
test
fnstsw
jo
push
gs
adc
jb
pop
fiaddl
dec
mov
mov
pop
mov
shrl
inc
mov
pusha
mov
mov
inc
stos
insb
imul
inc
sub
mov
daa
inc
add
imul
dec
jmp
mov
outsl
add
ja
leave
in
insb
push
scas
sbb
dec
adc
xchg
popf
cmovge
sub
loope
pop
dec
dec
mov
int
cmp
mov
mov
cltd
cli
mov
stos
mov
pop
rcll
lahf
add
jp
xchg
mov
jle
jb
sarl
ljmp
scas
iret
lcall
cmpl
adc
insb
daa
divl
inc
test
cmp
pop
sub
dec
dec
mov
and
sbbl
insl
pop
xchg
cmpsb
gs
imul
push
lcall
add
mov
sbb
push
inc
sub
iret
push
out
mov
sub
nop
jle
outsl
push
add
push
std
mov
add
pop
jp
dec
loopne
movl
movl
movl
mov
mov
mov
mov
add
jmp
pop
sbb
dec
mov
or
fs
mov
and
push
sbb
test
cmp
mov
pushf
sub
loopne
aas
cmp
cmp
or
jg
mov
addb
mov
movl
int
rcrl
mov
shrb
rcrb
xor
movsl
lret
mov
imull
xchg
cmpl
cmp
push
incb
fwait
mov
or
mov
fldlg2
inc
pop
mov
push
cltd
loop
xor
es
pop
sub
mov
dec
mov
add
mov
stc
and
or
pop
dec
test
addb
orb
cmp
xchg
and
push
jmp
adc
mov
out
mov
mov
je
int
rorl
dec
jno
mov
or
mov
movsl
jae
int
sbb
in
fistl
dec
pop
inc
jne
mov
cmp
nop
jg
aad
jns
inc
mov
and
shll
lret
shlb
mov
negl
iret
dec
add
lods
pop
fsts
testl
xor
jo
call
lret
jne
std
adc
mov
es
adc
sub
stos
sti
add
orb
arpl
pushf
pop
push
fldenv
jb
cmp
outsl
pushf
or
sbb
inc
shlb
mov
stc
inc
sub
xchg
xor
dec
push
sbb
jmp
insb
out
cmp
negb
sub
add
add
and
in
add
fstps
xor
cwtl
adc
mov
or
popf
inc
call
xor
aaa
push
fldcw
jne
push
idivb
leave
jmp
imull
adc
cmpsb
xchg
outsb
subl
inc
imul
sbb
js
movsl
cs
in
push
push
popa
ja
arpl
adcb
mov
push
push
int
inc
cmp
js
mov
rcrb
pop
popa
push
sbb
call
push
jno
dec
mov
in
push
daa
mov
pop
dec
jl
js
jno
cmp
cmc
adc
ljmp
lret
sub
mov
inc
in
dec
je
lret
cmp
pop
and
popa
mov
hlt
add
decl
shl
push
adc
jo
inc
addl
mov
cmp
shrl
jno
adc
arpl
xchg
sbb
jg
jle
lods
dec
pop
xchg
or
jns
loopne
or
jl
cs
jp
mov
xor
mov
inc
dec
ss
idivb
in
push
pop
mov
negb
sahf
mov
jecxz
adc
cli
push
arpl
ret
movsb
inc
test
or
sbb
jbe
push
mov
pusha
fwait
js
dec
lds
insb
ret
fidivrl
adc
xor
cmp
add
fdivrs
stos
xchg
lahf
jo
movsb
loopne
imul
lods
data16
sub
inc
xor
dec
pop
xchg
into
sub
add
ss
fmul
pop
mov
adc
aas
inc
in
mov
lods
mov
push
rcll
adc
int
mov
add
mov
pop
mov
lcall
cs
int
pop
jb
lock
or
popa
mov
push
ds
adc
mov
sbb
andps
push
arpl
out
orb
jnp
sbb
cmpsl
xor
cmp
adc
jg
pop
in
scas
push
in
out
push
fidivrs
sub
lds
cwtl
xor
fs
lds
sub
push
dec
loopne
pusha
and
scas
or
xor
sbb
mov
xchg
jno
int3
cli
jl
mov
cmp
das
shll
insl
mov
aas
lock
xchg
inc
in
add
xor
arpl
cmp
pop
pop
and
outsb
test
and
pop
add
mov
sub
shll
insl
icebp
sub
jns
mov
js
inc
mov
cmp
and
fs
scas
out
cld
xor
pushf
data16
or
pushf
sub
xchg
and
out
push
outsl
movsl
add
mov
push
and
adc
and
xor
into
adc
xchg
or
mov
push
sbb
addb
jg
sub
notl
jne
loop
jb
fucomp
aaa
add
jecxz
ret
test
addr16
mov
push
jl
addr16
inc
pop
imul
push
orb
xchg
jno
push
fs
imul
cmp
mov
test
xchg
insb
pop
mov
ds
aad
pop
icebp
repnz
jnp
xor
cmp
add
ror
sbb
mov
push
gs
mov
in
in
sbb
sbb
mov
pop
xor
dec
or
sbb
or
push
sti
and
stos
cmp
sub
cmpsl
cmp
or
lea
cmp
stos
mov
cwtl
subl
mov
and
add
mov
jnp
pop
or
push
fsubrl
push
jge
sbb
cli
pop
push
dec
mov
add
inc
dec
xchg
xchg
sbb
out
xchg
aaa
inc
inc
out
in
aas
push
mov
insl
not
inc
int3
lahf
xchg
jge
lods
inc
xor
inc
jle
imulb
rcrb
cmpsl
jp
scas
lods
int
stc
or
fdivrp
repz
pop
stc
or
sbb
push
js
lret
out
stos
ret
cmpsl
lods
adc
mov
xchg
fbstp
pop
xor
xchg
jle
movsb
mull
mov
pop
stos
jle
lods
pop
jne
and
cwtl
mov
inc
outsl
mov
in
dec
sub
adc
pop
adc
std
mov
adc
sbb
jle
incb
cmp
add
pop
lods
imulb
loope
into
or
mov
hlt
shlb
mov
pop
inc
aaa
jbe
mov
rorl
inc
fimuls
aas
repnz
gs
movsb
out
hlt
lret
jnp
adc
or
ljmp
jl
mov
and
data16
mov
jmp
scas
loopne
mov
dec
mov
scas
es
pop
mov
idivb
cmp
pop
jbe
jae
sarb
xor
std
mov
cmp
jbe
or
mov
xlat
dec
lret
push
fcmovb
cmpsl
pop
sbb
jecxz
jge
or
mov
cli
mov
adc
jge
adc
jmp
into
add
or
pop
sub
sbb
adc
and
jae
ljmp
call
xor
add
test
pop
cmp
in
jl
xor
push
pop
jecxz
pusha
jle
add
xchg
mov
int3
jp
mov
mov
and
mov
aas
stos
inc
dec
test
xor
xchg
push
les
imul
dec
out
xchg
push
mov
xor
dec
fwait
mov
mov
xchg
push
int3
int
sarb
push
fidivrl
stos
loop
sub
add
push
sbb
mov
mov
fiadds
dec
xlat
add
cmp
cmp
outsb
xchg
vpsllq
mov
xchg
in
push
sub
and
movsl
dec
sub
pop
adc
sti
sarb
outsb
popa
or
mov
sar
mov
jp
adc
pop
mov
inc
add
jnp
pop
scas
aam
and
popf
add
xor
xchg
push
roll
jae
int3
popf
push
sub
cmp
not
imul
xor
faddl
mov
loop
inc
mov
mov
popa
push
std
or
pop
lcall
loope
popl
add
jle
or
pop
inc
jae
adc
mov
cmp
sbb
sbb
xchg
aam
pop
add
push
adc
xchg
mov
mov
xor
mov
and
fnstenv
mov
mov
outsb
loope
and
add
fistpl
xor
mov
pop
sti
popf
dec
clc
xchg
fisubrl
xchg
and
les
jmp
repz
inc
push
test
lahf
inc
push
xchg
mov
inc
leave
jmp
or
movsb
int3
dec
cmp
push
rclb
xor
pop
lret
mov
inc
sbb
scas
out
pushf
jecxz
and
pop
xchg
cmpsb
mov
fcomi
dec
push
jnp
mov
lods
add
out
mov
enter
xchg
adc
dec
add
dec
lods
xor
mov
sahf
decl
mov
data16
xchg
inc
xchg
mov
jbe
sbb
jecxz
push
sub
ljmp
loopne
stos
xchg
sbb
pop
lret
jge
out
xor
das
add
out
add
mov
fs
mov
mov
jmp
leave
js,pt
and
push
rcrb
xor
fsubr
xlat
inc
fisttps
lea
mov
xor
jp
cmc
push
lret
and
xchg
jno
cmp
pop
jnp
sub
shr
or
lods
pop
push
sub
jmp
jp
dec
scas
sub
sbb
cmp
cmpsl
jae
push
mov
or
mov
xor
cmp
xchg
mov
ret
arpl
icebp
fwait
stc
mov
lret
sahf
lods
addl
test
scas
push
xchg
addr16
icebp
sub
sbb
out
xchg
ret
cmp
test
jo
push
fiaddl
inc
and
popa
call
mov
in
xorb
stos
xchg
stc
adc
in
fdivp
leave
xor
movsl
xchg
subl
data16
jg
pop
sub
andl
push
or
dec
les
push
mov
xchg
mov
dec
fistl
aad
inc
fldl2e
jo
test
js
adc
shll
mov
imull
hlt
xchg
ljmp
lahf
mov
add
aaa
jge
fnclex
xor
jg
xchg
jmp
xlat
bnd
adc
and
jp
adc
jb
mov
add
addl
out
inc
filds
mov
xchg
lods
sbb
mov
out
inc
sub
jg
push
adc
das
cmp
xor
xchg
mov
iret
outsb
and
pop
push
push
xchg
xor
jl
jl
test
fcmovnu
and
out
dec
jae
dec
iret
out
lret
int
and
cmpsl
stc
mov
inc
and
sub
pop
adc
fnstsw
xor
incb
repnz
push
mov
push
push
xchg
into
mov
pusha
subl
loopne
mov
dec
nop
arpl
xor
fldt
dec
inc
inc
imul
test
inc
sub
inc
push
lret
test
mov
mov
pop
mov
imul
cmc
pop
mov
push
pop
sbb
outsb
in
and
addr16
sarl
in
and
xor
xorb
shrl
mov
push
mov
or
leave
jae,pn
into
jo
add
cmc
inc
testb
adc
idiv
lret
in
test
fsubrs
mov
dec
into
xor
cs
sbb
aaa
lea
and
xor
fidivl
inc
sbb
sbb
aaa
outsl
add
sbb
rorl
pop
aas
jo
cmpsl
xchg
inc
fs
aas
shll
pop
sar
sarb
mov
jns
or
or
shl
out
test
mov
dec
jno
je,pn
adc
push
xchg
mov
mov
clc
cmp
imul
push
js
sub
lret
loope
lods
add
push
jbe
lea
loope
fldl
adc
sbb
jns
xchg
adc
cld
fstpt
or
add
push
cld
icebp
shrl
gs
jno
push
aad
adc
outsb
pop
cmp
outsb
dec
rcr
jmp
arpl
shrl
fcomip
or
cmpsl
in
xor
pushf
idiv
movsl
mov
gs
xchg
and
inc
outsl
xor
lea
sbb
insl
in
mov
and
or
mov
jge
arpl
dec
cli
pop
outsl
sbb
mov
cmp
stc
aas
push
jecxz
aaa
fbstp
xor
sbb
cmpsl
or
rclb
xor
add
daa
jle
add
mov
std
into
dec
insl
pushf
xor
sbb
arpl
fiadds
pop
dec
push
ja
xlat
lods
cltd
clc
mov
dec
pop
int3
jmp
je
inc
cltd
js
ret
movlps
push
or
cmp
imul
les
pushf
xor
jns
cmp
xor
sbb
loopne
or
out
mov
xor
cli
pop
lock
lds
sbb
test
mov
push
mov
rcll
in
xorl
mov
push
cwtl
adc
jg
aaa
imul
add
hlt
pop
loope
dec
js
or
sti
add
stos
inc
inc
pop
aaa
pop
aaa
mov
pop
pop
xchg
jo
inc
shl
in
cmp
sub
jg
cmp
xchg
fistpll
mov
inc
pop
and
push
sub
dec
cltd
cli
pop
pusha
push
aam
xchg
mov
clc
in
cs
pushf
push
add
and
sub
mov
sbb
mov
add
adc
or
mov
mov
mov
or
add
cltd
adc
cmp
jne
cmp
je
mov
mov
mov
mov
add
adc
or
or
add
adc
xor
xor
mov
sub
mov
sbb
mov
mov
mov
xor
cmp
jne
cmp
jmp
pop
cli
pop
sub
or
dec
pop
nop
push
inc
cmp
adc
and
dec
jb
adc
adc
in
cmp
je
outsl
sub
imul
daa
fmull
pop
or
adc
lock
push
mov
add
stc
push
in
xchg
jno
mov
cmpsl
xor
pop
rclb
mov
ret
mov
rol
mov
dec
clc
push
add
gs
add
stc
jbe
imulb
cmp
jns
jns
add
fcmovnb
xor
and
sarb
push
jmp
arpl
in
xor
jle
cmc
loop
mov
aam
pop
subb
pop
xchg
jl
or
adc
jp
loopne
std
mov
push
repz
xchg
test
sbb
inc
sbb
and
out
xor
cmp
shr
cmp
push
xor
cltd
cli
fcmovnbe
jp
dec
inc
fwait
jne
mov
mov
std
mov
shlb
mov
ficompl
call
inc
pop
pop
iret
mov
test
js
push
jne
pop
push
pop
or
and
jle
clc
popf
add
cmp
xchg
fmul
out
dec
inc
mov
inc
fisttpll
stos
mov
xchg
adcb
adc
cmp
jbe
and
pushf
mov
test
stc
push
adc
adc
adc
mov
jp
andb
jecxz
aad
cld
or
push
and
mov
out
data16
lds
cmp
dec
mov
cmp
adc
pop
in
xor
scas
dec
shlb
insb
sbb
pop
outsb
les
mov
and
pushw
xchg
jl
sub
mov
adc
mov
das
leave
dec
out
jnp
clc
xor
int3
mov
sar
out
lock
add
pop
dec
mov
loope
aas
das
out
loopne
push
fadd
aas
push
sbb
insb
mov
push
push
add
cmp
adc
test
movsl
ret
xor
scas
es
push
sbb
dec
fldt
test
and
inc
jno
sub
sti
mov
mov
adc
das
int3
mov
xchg
je
xorl
mov
xchg
jp
xor
in
les
adc
fs
cmpsb
cmpsb
xchg
jbe
insb
fdivrs
adc
push
mov
pushl
xor
xor
adc
stos
mov
js
or
sbbl
fidivs
fstpt
cld
adc
pop
or
sahf
arpl
out
sahf
mov
sti
mov
sub
sbb
cmp
out
mov
lret
mov
xlat
xor
aam
sbb
xchg
inc
imul
xchg
xchg
scas
mov
mov
pop
or
pop
mov
dec
pushf
xor
mov
mov
sub
fadds
sti
outsl
adc
sbb
cmpsl
fdiv
pop
out
mov
scas
ds
call
or
adc
je
in
sub
or
cmp
insb
imul
mov
adc
add
out
xchg
rclb
stos
mov
adc
mov
decl
cmpsb
sub
out
pop
and
pop
jo
sub
cmpsb
mov
hlt
mov
lret
or
dec
sbb
shll
sbb
aas
xchg
adc
adc
dec
popf
fcomip
iret
cmpb
aas
mov
push
inc
xor
cwtl
mov
movsl
sbb
adc
orb
inc
sub
pop
sub
xchg
insl
daa
rorb
out
and
out
add
dec
cmp
loopne
push
pop
sub
cltd
movsl
cmp
jge
outsl
or
int
fnstcw
pop
add
push
out
xor
mov
push
jno
cmp
enter
ret
jae
adc
sbb
mov
pop
dec
dec
adc
andl
daa
mov
adc
out
hlt
and
dec
pop
aas
arpl
jno
inc
mov
mov
cwtl
push
add
fsts
mov
scas
mov
int
notl
push
dec
push
mov
mov
inc
mov
sti
jecxz
aas
cmp
mov
adc
ja
pop
mov
lret
aaa
dec
cwtl
fsubs
mov
sub
push
test
shrb
mov
scas
sbb
jo
scas
cs
insl
push
xchg
jl
cmp
sbb
cmovo
inc
test
insl
ljmp
cmpsb
outsl
hlt
in
nop
shl
rcr
notb
test
jns
fcomps
cmp
xor
adc
cmpsb
push
xor
push
mov
adc
pop
push
pop
inc
fs
idiv
cmp
mov
mov
cld
test
add
cmp
stos
movsl
fidivrs
jp
and
sub
scas
rcr
lea
stos
xor
pop
mov
cli
nop
jae
mov
cs
push
adc
sbb
dec
push
mov
mov
pop
mov
cwtl
orb
push
popa
orb
xchg
cmp
inc
stc
aas
pop
mov
bound
push
rcr
cmp
rclb
xor
nop
repz
fwait
addr16
sub
ja
lret
hlt
add
outsl
jmp
ljmp
sub
xor
push
imulb
push
stos
mov
lods
xor
sbb
inc
daa
cmc
loope
sub
jae
ffree
push
subb
add
dec
lea
push
dec
xor
cltd
dec
lret
dec
dec
add
xor
xor
dec
lcall
sub
movsl
ja
mov
jbe
movntq
out
fidivl
adc
pop
sub
int3
sbbl
insb
cmp
jb
es
popf
jnp
out
imulb
lea
pop
dec
cmpsl
subb
mov
mov
int
xchg
sub
and
popa
inc
mov
nop
dec
nop
addr16
decb
lcall
repz
and
aaa
pusha
push
addb
sbbb
mov
ljmp
data16
xor
loopne
mov
in
sbb
icebp
push
push
lds
pusha
iret
insb
nop
add
xor
adc
punpckhdq
sbb
pop
mov
testb
ljmp
mov
lock
dec
imul
pop
ds
leave
dec
invd
mov
gs
cmp
and
sbb
fists
iret
aas
es
shll
icebp
in
dec
idivl
pop
sahf
test
add
out
pop
adc
xor
out
cmp
xchg
and
xchg
in
dec
add
mov
das
out
pop
je
fs
add
fwait
icebp
mov
or
cmp
mov
jne
mov
add
imul
xor
mov
div
jmp
lret
pop
cmp
adc
fwait
cmp
mov
mov
mov
cmc
shll
aaa
nop
test
mov
sbb
adc
jno
dec
stos
pushf
leave
mov
sbb
stc
adc
int
ss
int3
push
js
adcb
add
adc
aaa
xor
cmp
sub
cmc
jno
pop
or
add
loope
repnz
xchg
neg
pop
lds
or
insl
cld
adc
not
test
jmp
enter
movsb
or
mov
dec
in
pop
sub
enter
mov
xchg
add
bswap
and
pop
out
daa
mov
xchg
adc
xchg
mov
fnstenv
insb
sbb
push
cltd
inc
sub
push
sbb
aam
lock
fidivs
scas
push
inc
lea
in
decb
ljmp
mov
mov
add
xchg
fcoml
ficomps
out
fldl
mov
inc
pop
shrl
rorb
fildll
dec
push
bound
push
pop
lods
mov
pushf
mov
test
inc
xor
jbe
ss
fistps
mov
stc
in
mov
and
xor
mov
flds
mov
dec
fst
sub
jl
icebp
sbb
and
lahf
push
cmp
fldt
push
push
jp
xor
xchg
out
fcmovb
mov
mov
loop
mov
inc
mov
xlat
mov
cmp
fldcw
fdivp
imul
jmp
cli
js
call
xchg
stos
insb
pop
mov
leave
test
or
pusha
push
iret
cld
das
js
scas
or
mov
cltd
push
mov
clc
pop
cli
inc
stos
imul
inc
mov
dec
stos
repz
mov
xchg
call
int3
icebp
test
insl
inc
pusha
rcrb
mov
sahf
nop
popf
fwait
sub
jbe
in
xchg
fisubrs
mov
mov
inc
mov
not
add
push
xor
or
stos
imul
dec
jge
sarl
and
fs
lds
dec
lret
mov
push
push
jl
pop
mov
fisubrl
xchg
sbb
sub
notl
dec
pop
pop
push
movsl
cmp
arpl
sub
add
mov
lcall
jns
jno
ljmp
mov
cmp
xchg
and
int3
xchg
mov
scas
mov
sbb
movups
pop
mov
loop
mov
into
lret
popa
xchg
sbb
mov
out
mov
and
jae
sbb
or
ljmp
in
or
lods
sti
adc
and
jns
incb
cmp
push
sub
add
sbb
pop
leave
and
das
in
data16
hlt
enter
pop
bswap
mov
in
jo
xchg
sub
fsubrs
cmp
xchg
pop
jae
jns
ds
jl
cmc
xchg
pop
cld
jo
inc
mov
fwait
loopne
push
mov
shlb
xlat
mov
cmc
adc
mov
les
xor
andb
mov
sub
xorl
xorb
jne
add
push
sub
cmp
mov
stos
jle
mov
ror
sahf
shlb
or
mov
mov
add
repnz
cmpsb
adc
mov
stos
nop
mov
mov
dec
insb
xchg
push
lret
xor
mov
ja
test
stos
cli
mov
jg
mov
daa
out
push
pop
arpl
in
leave
cli
pop
stos
into
iret
lock
mov
fsubrl
pop
jg
je
test
movsb
enter
fmul
xchg
push
or
jnp
inc
xor
test
push
xor
adc
adc
and
call
addr16
fimuls
mov
icebp
shll
jmp
arpl
into
push
shlb
scas
outsl
push
ljmp
mov
fmuls
fbstp
mov
shrl
out
and
jno
aad
push
jnp
fnstsw
push
into
stos
addr16
push
jge
push
lret
cltd
lcall
je
push
cwtl
dec
movsl
nop
add
mov
test
or
aad
rcrl
fisttps
in
negl
and
and
cmp
xchg
inc
and
or
aam
fimull
lret
je
sub
test
jb
add
or
jnp
jl
cli
push
leave
test
rol
rorb
repnz
stos
out
es
adcl
lods
call
sub
lret
adc
into
jne
ss
push
push
fsubr
xor
cmp
ret
je
int
lods
cli
dec
les
and
pop
sbb
lds
push
cwtl
xor
daa
popf
fstpt
fldz
pop
sub
or
mul
mov
adc
xlat
sub
mov
sub
hlt
imul
mov
std
or
je
lcall
pop
mov
cmp
sub
js
lahf
enter
les
pusha
js
mov
out
xchg
jle
or
movsl
lock
leave
push
in
inc
imulb
mov
into
into
jge
lds
aas
movsb
in
jnp
mov
js
xchg
push
add
hlt
cmpsl
push
in
or
das
insl
jne
push
lock
pop
mov
sbb
pop
test
out
test
imul
inc
mov
rcr
ret
mov
scas
pop
nop
aaa
xchg
adc
stc
mov
bound
mov
cmp
push
nop
sbb
pop
ret
aaa
pop
adc
les
adc
jb
mov
cmp
adcb
mov
cltd
sbb
inc
or
movsl
sbb
or
mov
jp
and
in
push
jbe
repnz
xlat
sarb
push
and
gs
xor
mov
add
lret
push
rcrl
sub
pop
in
jb
dec
jp
mov
jle
pop
pop
test
sub
jg
xchg
adc
and
clc
mov
add
cwtl
es
mov
mov
testl
ficoms
cmpsb
xor
aaa
rolb
ljmp
xchg
adc
or
scas
jno
es
daa
xor
adc
xchg
xor
scas
call
push
or
inc
orb
dec
jge
sbb
push
pop
test
mov
xor
xor
push
or
and
insb
shl
cmp
addl
daa
mov
add
out
add
add
cmp
sub
std
xor
rcr
sub
mov
jmp
cmc
xchg
cmp
push
mov
adc
pop
in
movb
mov
cmovnp
xchg
dec
xchg
mov
mov
adc
cwtl
std
aad
or
test
lods
scas
pop
inc
data16
mov
pop
mov
sbb
sub
dec
mov
sub
adc
pop
dec
rclb
ja
fsts
jmp
fsubl
filds
daa
dec
or
pop
mov
jne
xor
add
jns
jl
add
out
scas
xor
bound
add
cmp
sub
fsubs
dec
clc
mov
mov
scas
out
and
repz
sub
xorl
adc
das
cmpsl
ja
mov
cmp
or
dec
cmp
inc
jae
and
fnstsw
in
data16
mov
test
pop
lods
sbb
pop
cltd
xchg
or
movsb
enter
aaa
je
mov
or
inc
gs
xor
xlat
mov
adc
mov
or
hlt
pop
ljmp
xchg
ficompl
adc
int
xor
push
call
popa
rcr
sub
loopne
add
pop
in
or
adc
add
pop
cmp
dec
mull
mov
cmp
jns
loopne
add
sbb
daa
mov
divl
rorl
outsb
mov
lock
stc
xchg
mov
pop
fstpt
cmpsl
mov
fimuls
sub
es
jb
rol
scas
mov
mov
leave
enter
gs
icebp
xor
push
inc
stc
or
jo
xchg
clc
add
mov
jg
inc
sahf
push
loop
jb
mov
xchg
nop
fbstp
cld
inc
xchg
push
sbb
jl
xchg
mov
dec
call
loope
loope
mov
scas
inc
or
aas
mov
xchg
jmp
adc
mov
fistpl
test
push
xchg
ss
or
aas
xchg
into
fsubl
add
xor
adc
xlat
mov
mov
push
fisttps
scas
imul
jl
sub
outsb
loop
jecxz
push
mov
push
aaa
sub
push
repnz
and
jbe
dec
mov
mov
hlt
movsb
imul
and
lea
push
push
fwait
movsb
gs
jmp
je
mov
test
pusha
loopne
bound
mov
les
xor
push
adc
sub
movsl
loope
jmp
mov
dec
dec
xchg
sti
outsb
sahf
mov
xchg
scas
incb
lahf
mov
sbb
and
enter
out
imul
mov
nop
in
mov
cld
add
es
xchg
add
enter
dec
stos
das
or
aam
pop
mov
or
push
push
daa
leave
lcall
or
adcb
add
mov
ja
inc
push
jbe
cmpsb
pushl
mov
cmp
hlt
xor
push
test
dec
dec
aaa
dec
mov
mov
daa
adc
loop
push
jnp
cmc
in
push
aam
insl
ljmp
jns
mov
aas
testl
cmp
pop
imul
repz
and
inc
sbb
xchg
fiadds
jne
push
insl
lahf
mov
into
jne
dec
ds
inc
out
insb
and
push
or
sub
jp
mov
pop
mov
add
jecxz
cwtl
xchg
imul
add
jo
fdivs
je
icebp
add
fs
or
cmp
test
notl
push
push
in
mov
mov
xchg
xor
add
cmp
test
cmpsl
clc
push
sti
cmp
into
mov
loope
movsb
or
fsubl
rorl
pop
loop
mov
push
cmp
inc
clc
test
mov
outsl
pushf
das
stos
in
dec
inc
jge
or
adc
push
add
xchg
mov
ret
pushf
mov
fprem
push
and
mov
or
arpl
mov
add
movl
mov
sub
cwtl
push
nop
push
popf
test
ds
in
push
sub
lret
js
jbe
mov
adc
in
lcall
add
sub
xchg
push
sbb
movsl
mov
or
mov
inc
loope
in
pushf
push
pusha
rcrb
pop
pop
out
sbb
mov
scas
inc
loope
subl
es
or
and
cmp
fsubp
mov
inc
pop
sarb
add
and
mov
popa
daa
popa
mov
ret
lret
or
push
sub
push
mov
pop
pop
cmpsb
xchg
and
int3
push
test
sahf
imul
test
iret
aam
mov
xor
adc
cmpsl
jmp
shrl
insl
fwait
popf
pushf
xlat
jg
push
fistl
cmp
add
aad
jle
test
in
cmc
push
mov
sbb
dec
clc
jae
mov
or
out
es
push
enter
sti
pop
gs
xchg
loope
das
mov
mov
jo
popf
hlt
sbb
ljmp
mov
dec
cmc
fdivl
cmpsl
xchg
iret
fcom
mov
and
pop
gs
xchg
outsb
pop
mov
xor
mov
dec
pop
mov
insl
mov
pop
mov
lret
mov
cmc
mov
pop
int
out
aas
aam
push
xchg
mov
lahf
mov
and
adc
dec
sahf
test
inc
popa
test
xor
sarb
sarb
mov
nop
sbb
nop
mov
cmpsl
sub
jmp
or
jae
xor
loopne
jo
cmp
lret
lahf
dec
mov
loope
mov
sbb
mov
rcr
div
fcoml
ss
inc
lea
lret
mov
and
xchg
pop
push
clc
lea
stc
dec
mov
and
mov
test
push
and
push
xchg
pushf
cmp
lds
fisttpll
pop
jno
in
dec
inc
out
push
pop
sbb
stc
xchg
mov
rcll
cltd
push
mov
mov
sub
pop
sarb
repnz
mov
loope
cli
aam
pop
xchg
or
mov
and
lahf
adc
pop
call
xor
int3
mov
hlt
adc
ret
aam
popf
pop
push
sbb
adc
das
cwtl
ss
mov
sti
fmul
repz
and
imul
adcb
adc
loopne
cmp
dec
add
sarb
mov
test
dec
sahf
xor
pop
cmp
bound
iret
notb
sbb
xor
mov
stos
xchg
rolb
sub
pop
lock
lea
jmp
fisttpll
mov
push
xchg
jecxz
shrb
push
xor
add
xor
mov
mov
sub
mov
and
div
mov
mov
and
sub
imul
add
jmp
scas
fldl
movsl
jl
stc
mov
fimull
mov
shufps
cpuid
jns
push
cmc
ret
mov
mov
sbb
rcll
ja
test
lods
push
loop
cmp
roll
dec
jne
loopne
mov
out
jmp
sub
movsl
adc
out
negb
inc
and
xchg
dec
pop
lea
pop
mov
pop
lahf
mov
pop
push
dec
ljmp
lcall
dec
out
inc
jae
inc
dec
gs
cmp
roll
cmpsb
pushf
mov
pop
mov
fisubrs
lcall
jbe
mov
cs
ds
fwait
mov
jmp
mov
or
shll
pop
inc
pop
or
push
xor
xor
divl
loop
fwait
and
out
insl
jbe
mov
lea
mov
push
xor
push
lods
fs
pop
lods
inc
sub
mov
scas
popa
pop
pop
imul
movsl
je
cmp
xchg
jmp
std
nop
add
xlat
daa
pop
es
rcrl
dec
cld
sbb
sti
cmp
or
mov
dec
stc
mov
hlt
pop
adc
xchg
mov
rorl
xchg
orb
test
mov
test
test
scas
clc
ret
mov
dec
rcll
jl
push
mov
inc
adc
add
or
cs
mov
lahf
mov
adc
mov
add
or
add
xor
lds
push
xchg
lcall
xchg
dec
adcl
clc
mov
into
xchg
clc
cmc
inc
in
jecxz
dec
popa
dec
lahf
out
and
or
jmp
subb
pop
repz
aaa
bound
test
pop
aam
xchg
rcrl
ret
adc
cld
fwait
or
xor
cld
test
push
sub
cmpsl
aam
mov
push
test
cltd
insb
and
insl
lret
add
cmp
push
or
jb
mov
xchg
scas
fwait
mov
hlt
imul
push
mov
imul
ret
add
test
cltd
jae
pusha
lret
push
test
ffreep
bswap
fidivrl
inc
cmp
mov
inc
sbb
pushf
in
xchg
jae
ljmp
jns
outsl
xchg
subb
outsb
mov
add
dec
lret
out
mov
lods
daa
xchg
xchg
or
into
rcrl
fimull
or
add
bnd
adc
testl
mov
adc
and
add
cmp
xchg
and
adc
jnp
cmp
mov
mov
xchg
test
mov
push
push
je
inc
adc
sub
and
mov
xor
test
or
loop
enter
mov
adc
jge
xor
es
out
incb
int3
push
push
in
sbb
mov
lea
stc
push
dec
jecxz
inc
inc
int
not
inc
dec
shrb
sub
loope
push
out
dec
lock
sub
in
sbb
push
adc
je
test
cli
aam
sbb
scas
aam
loope
sub
adc
adc
loopne
mov
stos
jg
and
jbe
fisubrl
call
orb
fistl
cmpsl
testb
add
inc
fisubl
std
outsb
dec
adc
aaa
inc
xlat
or
mov
jge
add
push
xchg
bound
push
out
ret
movsb
mov
shrl
cmp
xchg
scas
std
sti
xor
insl
xchg
xor
int3
pop
std
cwtl
fs
mov
jo
arpl
int
jmp
cmp
js
pop
mov
out
loop
nop
movsb
xchg
test
push
sub
incb
loopne
enter
data16
fdivr
sti
stos
nop
lret
push
addr16
inc
mov
pop
fists
cmp
aaa
push
repnz
dec
faddl
mov
inc
lods
adc
dec
and
movsl
fstpt
sbb
push
pop
rcl
decb
mov
mov
rcrb
mov
in
push
addr16
enter
popf
pop
pop
fs
mov
xor
xlat
testb
sub
mov
daa
js
mov
sub
cwtl
push
or
adc
rcl
lock
cmpsl
es
pop
xor
mov
je
popa
in
cmpsb
jns
sbb
leave
or
and
jb
xchg
shl
mov
and
xor
sbb
icebp
das
inc
sbb
mov
sbb
fdivrs
pop
sti
lds
mov
add
jmp
popf
fmuls
adc
mov
mov
pop
and
test
cwtl
inc
lock
dec
test
pop
jno
mov
and
cmp
sub
dec
add
sbb
sub
outsl
cmp
cmp
pop
mov
or
out
mov
fisubs
adc
jo
shl
mov
sbb
mov
icebp
jecxz
movsb
hlt
jb
jo
lds
movsb
add
call
sbb
cmp
dec
xor
xchg
sbb
xlat
popl
xchg
test
movsb
dec
mov
or
pop
mov
clc
mov
jl
cmp
into
int3
cmp
sbb
pop
xor
sarb
and
stc
mulb
inc
push
lea
dec
and
nop
gs
and
dec
outsb
push
xor
sub
mov
push
mov
ds
insb
mov
inc
rcll
sbb
fs
xor
jle
ja
fwait
call
mov
push
sbb
aad
jg
xor
xchg
dec
fnsave
call
movsl
mov
mov
add
insl
sti
andl
out
inc
pop
les
ja
shr
pop
cmc
mov
fwait
xor
xor
or
or
push
or
fmul
in
jb
fstl
ret
xchg
lahf
push
cmp
bound
cmp
loop
dec
jne
adc
xor
mov
pop
sub
sahf
mov
sub
rorb
popf
mov
testl
test
add
xor
fldl
adc
cmp
aas
call
mov
outsb
iret
fnclex
or
das
xor
cmp
and
push
cs
cmp
cmp
jnp
popa
sub
add
mov
push
lods
mov
pop
xchg
pop
rorl
sti
xor
adc
imul
jns
pop
nop
inc
xchg
ljmp
movsb
xchg
sbb
pop
pop
enter
ds
nop
push
in
arpl
int
and
pushf
popa
mov
push
fiaddl
mov
xor
and
jmp
jne
add
subl
xchg
scas
mov
mov
punpckhbw
std
dec
pop
push
sbb
fiadds
lock
xchg
jmp
push
rcl
mov
in
movsb
loope
shrb
cltd
inc
jo
mov
js
cmp
adc
cmp
jmp
inc
mov
cli
push
inc
movsb
xor
fcompl
push
sub
add
xchg
les
jno
and
add
xor
cmp
lcall
sbbb
fidivl
lahf
or
ret
hlt
mov
xlat
clc
clc
pop
cmpsl
mov
mov
out
or
jg
push
push
jg
aas
jns
dec
repnz
adc
pop
push
out
sbb
cmpb
mov
adc
jne
cli
push
dec
xor
lds
mov
lock
adcb
sahf
and
subb
test
cs
lea
fldcw
adc
mov
js
subb
sarb
adc
add
jecxz
jno
mov
fcmovnb
cmp
and
xchg
and
fwait
hlt
dec
loop
ret
enter
mov
ret
aas
xchg
jns
and
dec
mov
ror
inc
in
fisttps
and
ret
fcomps
sarb
xlat
loope
lods
jno
and
inc
mov
mov
jg
loope
data16
sbb
adc
shl
sbb
mov
mov
add
movsl
pop
pusha
cmc
adc
out
into
jne
inc
pop
push
ss
cmp
add
inc
mov
xlat
jbe
mov
push
and
mov
fdivl
rcl
adc
sbb
sub
cld
movsl
jp
or
fidivrs
cmpsl
stc
arpl
insl
pop
insb
bound
add
mov
pop
sbb
in
jl
jmp
les
sub
or
dec
cmpsl
cli
adc
popf
mov
sbb
mov
push
and
nop
pushf
sub
scas
push
iret
daa
loop
test
lods
test
ljmp
add
sbb
jecxz
cmp
leave
jbe
sub
sbb
push
movsl
fists
or
imul
sbb
nop
adc
pusha
loopne
stos
jo
pop
and
sbb
cmp
mov
pop
push
dec
out
xchg
mov
cmpsb
pop
xchg
loop
jo
rcr
xor
fdivrp
aaa
popf
xor
xchg
ficompl
mov
pop
pushf
test
sbb
and
jl
dec
in
add
mov
fisttpll
mov
int3
xchg
dec
mov
or
mov
in
mov
jae
lcall
xor
xchg
out
adc
xor
jb
lds
lcall
scas
ja
sub
xchg
sub
sahf
hlt
popf
xor
jae
add
xor
movsl
xchg
mov
xor
aad
inc
rcll
lock
pusha
fwait
push
ljmp
push
jp
xchg
xor
xchg
call
popf
mov
mov
adc
dec
add
push
cmc
enter
xor
adc
jns
push
jnp
lahf
jb
aam
add
test
shll
mov
clc
outsl
mov
adc
sub
in
loope
mov
jbe
or
imul
mov
xor
ret
pop
psrld
cmp
cmp
inc
fdivs
sub
mov
in
lds
lret
dec
jo
or
inc
fnstsw
sub
mov
xorl
mov
mov
loopne
insb
sbb
js
push
stos
xchg
loopne
jle
push
and
popa
leave
in
mov
ds
stc
push
pusha
mov
push
inc
cwtl
jns
out
popf
xlat
loopne
sbb
lock
xor
dec
cmp
aam
xor
sbb
mov
push
gs
ret
pop
xor
in
cmp
mov
inc
inc
adc
mov
mov
mov
jns
std
movsl
push
cmp
adc
inc
pop
loop
les
adc
fistps
inc
popf
das
pop
dec
enter
lods
cld
jle
inc
sbb
inc
push
and
cmp
xchg
loop
lods
adc
mov
cmpsl
lret
je
not
jb
daa
lret
adc
loope
xor
and
sub
jg
jmp
andb
xchg
rol
xor
mov
pop
sub
mov
outsl
xor
cmc
shl
or
mov
cltd
mov
jl
jo
cmc
sub
mov
push
jecxz
and
int
test
in
cmp
cwtl
roll
cwtl
xor
ja
push
push
fstpl
xchg
adc
hlt
xor
sub
xor
mov
xor
push
stos
mov
inc
data16
adc
mov
adc
pop
mov
hlt
shll
mov
or
or
sbb
pop
out
iret
cmp
push
push
mov
mov
jmp
in
mov
mov
lea
loopne
aad
xchg
idiv
fucomi
testl
ss
pop
mov
out
in
nop
adc
jg
mov
arpl
flds
icebp
callw
push
or
insb
stc
aad
fisubrs
lcall
sub
mov
data16
jo
insb
lea
cmpb
dec
aam
jno
sbb
cmpsb
pop
xor
add
icebp
enter
inc
or
outsb
pop
dec
and
mov
addr16
fwait
cmp
pop
dec
fdivs
mov
popa
mov
lods
sbb
dec
ds
or
cmp
pushf
xchg
inc
lret
sbb
sub
xor
inc
inc
mov
cld
in
sub
dec
sbb
and
icebp
cmpb
adc
lret
cmpsb
lock
sub
and
and
stos
data16
mov
push
mov
pop
out
movsb
xchg
ss
lahf
iret
loopne
pop
dec
mov
cmp
addr16
adc
sub
add
filds
sub
jo
cmp
arpl
in
insb
dec
and
xor
ret
adc
sub
pop
or
mov
inc
imul
loop
arpl
sahf
inc
subl
fstl
add
cmp
movsb
push
sub
pop
xor
fstpl
sub
insb
or
out
adc
fdivrs
adc
xchg
icebp
aaa
divl
mov
pop
jecxz
rorl
mov
cmc
sub
push
pop
fildll
inc
sarb
pop
jo
loopne
sti
dec
sbb
dec
mov
cmp
dec
sbb
stc
push
adc
adc
and
push
sub
sbb
adc
lret
mov
or
jne
sub
xchg
les
jle
xchg
sub
fstl
mov
add
mov
add
jmp
nop
shrb
sub
addr16
sub
xchg
push
rclb
adc
and
inc
shrb
xor
mov
inc
fdivr
aad
movsl
pop
jecxz
push
mov
arpl
dec
adc
repnz
jb
xchg
or
pop
jae
imul
xchg
lea
xchg
fucomp
inc
in
jae
push
iret
sar
and
push
jnp
imul
or
sbb
test
lds
dec
enter
sub
pushf
adc
fcoms
pshufw
into
adc
sub
sarl
cltd
xchg
out
rcll
adc
bnd
mov
mov
ret
fcomps
xchg
mov
xchg
jno
jge
mov
cli
pop
push
psrlq
lret
and
lret
in
lea
or
fbstp
enter
add
cmp
cs
lahf
xchg
adc
pushf
xor
jns
lods
hlt
sahf
fidivrs
out
test
repz
call
ljmp
enter
fstps
mov
xchg
sti
fcoml
cld
fwait
int3
or
cwtl
mov
inc
mov
fcmove
fsts
cmp
es
push
add
imul
cmpsl
adc
pop
mov
shl
lret
out
sbb
ss
xchg
sbb
pop
jbe
jo
cmpsl
movsb
repnz
pop
addr16
out
cld
bnd
lds
ljmp
sarl
ds
jo
mov
sarb
sub
fsub
push
ss
ficompl
mov
xchg
fwait
fxsave
stos
mov
fistps
and
adc
dec
mov
movsl
pushf
sahf
mov
addr16
ljmp
das
movsb
fbstp
sub
push
sbb
mov
push
add
cwtl
ret
jp
xchg
jo
sub
sti
mov
adc
clc
mov
stos
les
push
mov
dec
or
xchg
in
mov
and
js
mov
push
pop
or
add
add
pop
jge
mov
xor
je
mov
out
cmp
mov
stos
mov
sbb
sbb
das
jae,pt
mov
add
enter
loop
aad
mov
stc
insb
jecxz
or
add
cmp
movswl
or
insl
cmp
add
out
cmp
mov
dec
cmp
fwait
cwtl
negl
jl
inc
mov
mov
cltd
lds
mov
dec
inc
pushl
push
jae
cltd
dec
imul
push
cmp
jnp
sarl
int
rcrb
and
cmc
mov
mov
mov
arpl
xor
dec
out
mov
adcb
pop
loop
ret
ret
lret
push
test
inc
xlat
mov
ljmp
mov
and
cltd
leave
lret
mov
fldl
inc
fbstp
xor
fiadds
jnp
sub
jo
pop
lods
jne
inc
add
dec
pop
int
sub
clc
imul
sub
add
test
xor
rcll
xor
inc
popa
ds
daa
int3
cmpsl
sarl
and
shl
mov
in
xor
xor
or
out
test
and
cmpb
mov
dec
mov
popw
xchg
daa
mov
inc
les
xor
xor
js
cmp
and
push
cmp
imul
in
arpl
stc
or
push
adc
imul
js
mulb
test
sub
adc
stos
std
rcl
jb
pop
push
daa
mov
and
std
pop
jno
adc
jae
sub
sub
push
aad
es
mov
outsb
xchg
jmp
mov
cli
rcrb
frstor
ficoml
mov
jbe
sbb
jg
ret
pushf
cmc
mov
and
into
mov
and
cmpsl
ja
shl
mov
or
in
pop
jle
imul
popa
lods
adc
cmp
test
jne
cmpsl
mov
and
test
repz
xor
pop
cs
sti
fmuls
shll
daa
dec
les
xchg
jge
pop
jo
xchg
pushf
mov
cmp
push
add
mov
jecxz
jbe
jo
lods
and
mov
imul
aad
or
pop
adc
pop
lret
fiadds
hlt
jge
mov
mov
loope
jno
add
jb
or
stc
add
icebp
dec
push
lahf
jnp
jge
mov
xor
xor
mov
jo
rcrl
mull
outsb
add
arpl
mov
fs
cmp
push
cmc
mov
fstpt
fs
repnz
push
push
adcl
int3
cld
inc
insl
mull
cmp
and
sub
pop
inc
negl
cmp
jmp
daa
inc
cmp
ljmp
insl
movsb
rcrb
loop
sbb
cmp
xchg
mov
jae
arpl
cwtl
mov
mov
fsubrs
mov
add
cmc
mov
test
and
ret
out
movsb
in
jg
jl
and
sti
ljmp
out
mov
int
mov
add
int
shl
or
fnsave
add
or
adc
add
or
ds
mov
loopne
dec
push
daa
xor
mov
sahf
jno
je
mov
idivb
cmp
std
sub
adc
jnp
sub
jae
sub
pop
dec
xchg
dec
pop
std
inc
ss
pop
movsl
jbe,pt
fcmovb
shll
pop
inc
leave
int3
sub
xchg
mov
mov
dec
sbb
jne
ret
add
ret
subb
mov
cmp
repz
jg
imull
mov
fcoml
pop
fisubrs
pop
scas
push
jmp
iret
mov
or
jg
pop
sahf
sub
pushf
call
enter
push
push
rorl
sbb
aad
movsl
fidivrs
mov
mov
push
icebp
xor
mov
jle
fisubrl
lea
sub
mov
cli
bound
ljmp
mov
dec
cmp
es
aam
dec
arpl
mov
outsl
pop
insb
dec
lcall
popa
pop
xchg
add
enter
sbb
rorb
daa
sahf
cld
mov
mov
pop
sbb
mov
adc
test
push
mov
mov
rcrb
mov
mov
loopne
adc
add
sahf
js
mov
bound
inc
pop
je
xchg
fwait
adc
das
mov
jg
lods
fdivp
mov
sbb
inc
or
mov
mov
dec
adc
cltd
sub
pop
sbbl
adc
ret
mov
xor
or
xor
add
mov
add
mov
mov
mov
mov
xor
xor
add
adc
jmp
push
gs
pop
out
dec
push
push
add
mov
and
xchg
movswl
xchg
mov
xor
addr16
divb
cwtl
aad
dec
add
push
repz
cmpl
dec
std
adc
shl
loope
cmp
mov
scas
movsl
fisubrs
or
mov
push
ret
in
ret
pop
xlat
test
add
or
jno
fdivp
mov
cltd
call
ret
dec
or
push
add
cmpsb
in
push
hlt
repnz
add
pop
in
xor
gs
aad
xchg
jae
fisubrs
divb
inc
cmp
ja
ja
cmp
arpl
xchg
jb
xchg
jno
imul
add
xlat
or
loopne
jl
fwait
mov
stos
clc
int3
scas
repnz
jge
lret
jge
add
test
mov
gs
sbb
add
imul
pusha
iret
mov
cmpsl
cmc
int3
sbb
jmp
pop
cld
frstor
cld
inc
out
and
pop
pop
repnz
mov
cmpsl
stos
jo
mov
cmc
cmp
ret
xchg
cmpsb
sub
xchg
repnz
adc
loope
jmp
pop
mov
mov
mov
fldl
adc
pop
push
enter
cmp
cwtl
and
cmpsl
jg
add
mov
or
mov
repnz
es
aad
mov
sbb
imul
insl
dec
clc
mov
cmp
rol
mov
dec
mov
shll
pop
push
lock
cli
mov
push
and
lock
sti
movsl
icebp
scas
dec
jnp
or
inc
xchg
ljmp
pop
sti
sbb
shlb
xorb
mov
test
ret
dec
pop
cwtl
mov
xlat
sbb
test
sub
lret
jnp
cmpsb
cli
loop
fsubrs
cmp
push
mov
push
into
cmpsl
aam
lock
xchg
push
sahf
test
jle
lock
lar
push
mov
int3
mov
aad
out
imul
inc
or
mov
jp
call
inc
pop
fs
aam
in
imul
arpl
pop
pushf
outsl
notl
imul
mov
movsl
xor
stos
test
lods
jle
imul
jmp
shrb
dec
push
bound
ss
shrl
jo
test
jmp
cltd
outsl
jns
xor
or
je
test
aaa
mov
cmp
xor
lcall
sbb
inc
pop
jns
dec
aaa
cmp
push
out
push
loopne
ds
xlat
cli
push
jns
pop
jle
or
xlat
pop
jb
popf
fs
lods
add
fs
adc
xor
lret
dec
and
mov
lods
pop
or
sub
mov
adc
cmpl
pop
in
mov
hlt
fbld
shr
negb
xchg
pop
ficoml
xor
mov
andb
std
iret
jne
rcr
fwait
daa
add
andl
test
popf
clc
xchg
cmp
or
adc
fstpl
mov
xchg
fwait
adc
fmul
iret
loopne
enter
mov
xor
inc
adc
dec
ja
or
push
lcall
jns
movsl
pop
push
push
add
cli
xchg
mov
mov
lret
adc
ret
lret
sub
aam
rorb
adc
xchg
cmp
inc
mov
or
roll
mov
xchg
decb
daa
arpl
aaa
aam
inc
add
out
mov
roll
int
aaa
stc
ret
arpl
push
sbb
sbb
scas
fiaddl
jns
push
dec
ss
push
jnp
xchg
sub
inc
jg
stos
adc
arpl
js
sbb
sub
repnz
mov
jns
cltd
push
and
nop
mov
mov
test
icebp
cmp
jecxz
outsl
jmp
xchg
sar
aad
xchg
pop
push
xor
pop
int3
add
xor
xchg
mov
icebp
jg
loop
pop
dec
sbb
outsl
iret
adc
or
addr16
jbe
and
sbbb
aas
ljmp
arpl
fimull
pop
in
in
adc
lds
das
cmpsl
jge
icebp
dec
iret
arpl
dec
mov
push
into
pop
movsb
dec
xor
repnz
dec
push
mov
mov
pop
xor
dec
test
sub
pop
push
hlt
dec
repz
jae
fwait
stos
sahf
dec
sbb
xor
inc
mov
xchg
das
in
fsub
rcll
shrl
jecxz
insl
in
inc
mov
pop
xor
movb
es
sub
dec
test
mov
push
jmp
mov
add
fisttps
lock
jecxz
outsl
jecxz
sub
addl
test
out
cmpsl
std
jns
and
ficoms
push
les
fdivrs
clc
aam
jne
cmpsb
enter
ja
adc
or
cmp
add
out
push
test
mov
xorl
fidivl
mov
cs
xorl
test
mov
mov
sahf
lods
enter
arpl
push
fucom
inc
xchg
aas
inc
xchg
mov
jecxz
loopne
scas
xchg
movsl
sbb
into
sahf
pop
leave
pop
test
push
pop
bound
and
sbb
jmp
adc
incb
jp
cmpsl
xor
push
js
aad
pop
daa
stos
cmc
push
in
insl
push
out
add
test
scas
outsb
filds
mov
loop
xchg
jbe
push
rolb
ss
sbb
fildl
lods
xchg
xchg
insb
aam
je
ljmp
hlt
push
cwtl
je
mov
jns
mov
in
xor
pusha
std
lds
inc
lea
or
aaa
pop
mov
xlat
int3
bswap
lret
cwtl
push
mov
into
movsl
inc
fdivr
outsb
in
nop
and
pop
ss
lahf
dec
xor
aaa
cmpsb
mov
les
fcoms
push
cmp
or
loop
inc
cvttps2pi
mov
sub
add
cmpsl
fcoml
adc
xor
mov
or
xchg
add
pushf
jg
push
and
out
push
sti
imul
add
iret
pop
and
ss
cltd
mov
jmp
xchg
cmp
push
xor
pusha
mov
add
cmpsb
dec
dec
mulb
loope
sbb
test
cmpsl
mov
xchg
sub
shl
xor
and
sti
jle
rclb
add
lahf
or
into
push
sub
imul
lret
lret
pusha
mov
mov
xor
add
icebp
mov
pop
cmp
jo
adc
cmpsb
xchg
adc
rcll
adcl
nop
pop
add
sbb
push
adc
xchg
int3
xchg
mov
mov
add
mov
pushf
push
lock
out
inc
cmp
ja
int
ja
push
xlat
or
cmpsb
add
shl
enter
fisubl
inc
fs
xlat
popa
in
iret
pop
jmp
jp
int
push
cmp
addr16
xchg
aad
ss
adc
dec
mov
and
mov
hlt
push
jle
aam
lock
push
hlt
int3
jae
lcall
test
jge
pop
cmpsb
imul
jno
mov
add
sbb
sbbb
cmpsb
mov
cmc
fdivs
jmp
test
mov
and
lret
pop
push
cmp
cmp
cld
xchg
jle
jl
or
scas
sbb
pop
or
lods
std
xchg
ret
or
imul
outsb
hlt
pop
xor
mov
subb
shlb
xchg
adc
stos
loop
mov
lcall
adc
clc
inc
sbb
mov
movsl
popa
int
sarb
xchg
loop
xchg
pop
adc
scas
cli
sub
push
test
insb
xor
rol
and
out
and
pop
mov
mov
test
mov
inc
imul
inc
sbbl
pop
test
inc
push
xor
out
adc
pop
add
test
arpl
stc
shrl
jmp
in
jecxz
xchg
mov
fisubrl
je
mov
iret
adc
es
pop
xchg
je
icebp
push
xor
out
cmp
inc
push
add
add
sbb
stos
mov
jl
pop
mov
add
fs
fwait
nop
jmp
push
pushf
cmp
sti
faddl
or
inc
int3
inc
jo
sahf
pushf
cmp
popf
jnp
sbb
xor
in
fs
movsl
mov
loopne
sti
jns
pushf
sbb
xchg
cmp
mov
push
push
lret
fcomp
movsb
dec
lahf
mov
cmp
mov
aam
cmp
lods
or
and
or
lcall
and
out
sbb
xchg
or
clc
and
leave
bound
jo
jb
sbb
xchg
stos
and
scas
shl
rcr
outsb
out
mov
xor
push
loop
push
pushf
push
aad
jge
jmp
ja
gs
test
and
aad
mov
lock
mov
mov
sub
or
or
daa
inc
jp
je
dec
test
les
shll
cli
xchg
sbbb
push
dec
lods
leave
xchg
inc
xor
ja
pushf
lods
cwtl
push
or
ja
cmc
xor
mov
mov
adc
es
icebp
test
fistl
sbb
fwait
sub
push
in
mov
pop
jmp
testb
cmpsl
push
mov
add
cmc
inc
push
aas
mov
movsb
mov
jae
cmpsb
mov
jb
leave
mov
fbstp
or
imul
mov
push
jno
xor
andb
imul
adc
daa
jmp
ja
test
test
in
push
jg
cld
iret
sbb
jnp
test
into
add
sub
mov
push
cltd
or
ret
push
cli
mov
xchg
dec
mov
leave
cltd
in
insl
jbe
jbe
pop
fstpl
push
das
ss
lcall
cmp
jp
xor
mov
daa
or
movsl
cwtl
jbe
push
shr
pop
ljmp
add
mov
sbb
out
and
xchg
pop
xchg
xor
sub
jg
subb
adc
jbe
pushf
bound
add
xchg
lcall
lcall
dec
adc
lock
mov
and
sub
sarb
mov
pop
push
pop
jl
aaa
push
cld
ds
push
int3
insb
sub
js
mov
aam
inc
mulb
cmp
stos
mov
push
test
lock
orl
lret
mov
fisubs
cmp
stc
pop
jle
movsb
scas
mov
xchg
rcrl
loop
out
sub
jl
aad
inc
or
or
cwtl
imul
jle
push
out
xor
pop
add
and
cmpsb
inc
sbb
inc
push
and
stos
bound
clc
dec
into
pop
ss
xor
lds
pop
lret
je
or
stos
mov
test
rep
fistpl
std
dec
js
jl
movsb
subb
sar
mov
sbb
xchg
out
mov
fsubrs
mov
out
outsb
aam
mov
cmp
ret
sbb
xor
arpl
outsb
leave
xlat
int
cs
rorb
call
adc
pop
push
pop
add
stos
mov
outsl
mov
push
xor
insb
and
push
ret
ret
ds
xchg
int3
xchg
loopne
insl
cmp
loope
clc
or
push
test
sbb
fcmovb
sub
adc
pushf
rorl
mov
imul
jg
test
add
jb
fistps
jbe
dec
stc
rcr
dec
cmpsl
xchg
dec
adcl
test
in
cs
xchg
push
xor
push
cmp
popf
lods
pop
adc
idivl
jmp
mov
add
arpl
iret
sbb
pop
push
mov
adc
xchg
and
ss
rclb
push
inc
ljmp
pop
or
hlt
in
jge
inc
pop
orl
popa
jnp
sub
pop
in
fstpl
xor
or
pop
lods
mov
lahf
movl
mov
pop
stos
aam
jmp
cmp
mov
cli
and
lea
pop
ss
xchg
lods
lret
loopne
sbb
cmp
jo
in
inc
xor
into
gs
jbe
mov
iret
dec
popf
pop
or
add
loope
shlb
pop
xchg
dec
loopne
and
in
mov
inc
lock
mov
mov
jecxz
add
mov
popf
push
mov
test
push
lret
push
mov
rolb
xor
xor
sub
mov
sahf
call
ret
shl
push
leave
std
mov
jg
mov
push
jns
inc
mov
xor
pop
lock
call
jecxz
push
mov
mov
hlt
imul
lahf
push
lcall
jbe
sbb
pop
jnp
imul
pop
or
adc
arpl
push
fiaddl
test
js
jns
xchg
ja
pop
sbb
xor
ret
push
fs
iret
mov
dec
sbb
xchg
leave
adc
das
aaa
xchg
mov
adc
xor
add
insl
add
push
push
call
mov
add
adc
xor
cmp
jne
cmp
jne
mov
mov
imul
mov
or
sub
mov
lea
mov
pop
leave
ret
push
mov
sub
cmpl
jg
mov
add
jmp
pushl
call
push
jmp
addb
add
push
adc
jno
adc
repnz
fincstp
mov
and
xchg
cmpsb
inc
push
mov
addl
dec
and
lret
and
pop
mov
mov
out
push
mov
sti
adc
bound
fsubrl
sub
into
ret
mov
mov
jbe
out
sub
das
fs
ret
lods
mov
js
js
adc
push
in
xchg
push
rorl
imul
mov
insb
in
mov
jle
adc
mov
add
iret
sub
mov
hlt
mov
push
scas
xor
xor
pop
mov
inc
cli
sub
xchg
pop
inc
ljmp
sbb
out
cmpsl
jne
shll
fcom
sbb
adc
lret
mov
inc
shll
mov
xchg
and
loop
mov
scas
into
pop
adc
in
cmp
sub
mov
pop
pop
cmp
dec
out
rorb
pusha
jg
lret
or
jecxz
call
popa
in
cld
xor
push
sub
push
sub
test
mov
lret
jns
fsubr
xchg
and
push
ljmp
test
in
aam
pop
dec
std
repnz
adc
pop
in
test
pushf
lods
add
scas
subb
fs
dec
sub
sub
or
or
inc
inc
mov
dec
mov
mov
xchg
in
mov
and
pop
mov
scas
xlat
cmpsb
xlat
fstpt
cli
dec
mov
fildll
setnp
xchg
aaa
push
inc
dec
cltd
loopne
popf
jno
int
pop
es
into
pop
ss
imull
into
jp
cmp
mov
nop
sub
sub
out
cmp
cmp
jnp
stos
shrd
hlt
xor
arpl
idivb
xchg
jge
jno
sti
jmp
cmp
lret
clc
inc
sub
xchg
pop
cmpb
test
popf
add
cld
mov
sbbb
lea
adc
dec
cmp
xor
into
jne
jg
and
jl
and
or
ret
push
not
out
sbb
lods
add
adc
mov
adc
sub
sbb
flds
sub
jne
outsl
inc
sub
repz
divl
fists
pop
jecxz
out
inc
outsl
sbb
pop
sub
fs
xchg
and
lods
fimull
push
subb
inc
xchg
xchg
arpl
sti
add
out
pushf
nop
lea
cli
add
jg
dec
mov
fstpl
das
pop
xlat
lret
test
lcall
cmp
pusha
pushf
repz
dec
adcb
es
enter
add
fcmove
jecxz
push
sbb
pop
mov
mov
push
jne
mov
sub
pop
sub
pop
outsl
outsl
enter
xchg
xchg
sub
mov
sahf
xchg
cld
shll
cmp
loope
test
not
in
fidivl
out
fmull
adc
stc
add
pop
rcrl
cmp
sbb
test
cmp
push
rcrb
and
push
mov
sbb
ja
lds
add
add
jmp
and
pop
adc
mov
fidivl
xchg
pop
xchg
add
mov
cmpsb
mov
jo
out
es
pop
rol
cli
out
lahf
movsl
test
xor
inc
mov
test
lret
dec
mov
fdivl
push
cltd
dec
call
les
adc
andb
dec
jl
lea
pop
push
in
mov
xchg
scas
jae
jne
shl
je
outsl
mov
or
mov
mov
sbb
roll
test
pop
enter
test
dec
mov
bnd
or
push
scas
add
rcll
in
and
sahf
push
xchg
jae
loop
fdiv
xor
bt
mov
inc
fdivl
or
sbb
out
outsl
dec
loope
sbb
mov
jle
fs
sub
cmp
sbb
add
pop
push
fists
movsl
sbb
movsb
pop
xor
dec
mov
sahf
mov
jle
hlt
fisttps
popf
mov
lods
les
xchg
rclb
inc
imul
cmp
mov
paddusb
push
add
cmp
int
pop
into
xorl
inc
inc
movl
int3
cmc
inc
nop
dec
fidivl
jo
lock
xchg
out
push
cwtl
cld
sub
iret
cmp
js
icebp
lret
sbb
fsubs
jge
cmp
jns
xor
stos
jo
inc
divb
rolb
imul
out
add
fwait
sahf
sarl
adc
out
repz
push
cltd
jno
dec
pusha
es
sbb
cmpsb
fmuls
or
cli
add
pop
mov
and
xchg
std
jecxz
mov
dec
sub
inc
int3
push
popa
test
mov
add
adc
push
dec
notb
icebp
adc
sub
in
adc
cli
xor
imul
or
in
sub
das
pop
ja
popf
cmp
fcmovnu
push
push
mov
mov
enter
sub
sarb
cmp
into
inc
js
fucomp
sbb
push
ret
jmp
cmpl
mov
lcall
dec
loopne
sub
jp
jp
push
mov
shrb
loopne
fisttpll
insl
pop
hlt
jne
push
gs
inc
mov
pop
mov
adc
lahf
stc
dec
inc
mov
adc
cmp
jne
xchg
mov
das
out
dec
cmc
jns
out
add
gs
icebp
jne
or
adcl
and
xchg
cmpsb
flds
enter
mov
popf
bound
loopne
mov
jne
mov
aas
and
and
adc
mov
loop
cltd
push
xchg
add
sbb
sub
imul
test
pop
adc
xchg
rcrb
mov
xchg
in
cmp
or
push
sub
insb
dec
xor
daa
xchg
iret
test
subl
push
jmp
lods
xor
pop
and
mov
int3
arpl
aad
loop
mov
pop
add
sub
mov
pop
mov
sub
fidivrs
jns
xchg
fisttpll
xchg
sub
sbb
ret
xchg
xor
loop
sub
xorl
pushf
sub
aas
adc
pop
jmp
mov
xchg
sub
xchg
shll
cmpsb
das
data16
or
mov
aas
mov
icebp
sub
mov
out
loope
movlps
in
or
inc
lret
pushf
inc
jo
mov
outsl
pop
test
sub
mov
sbb
xor
daa
inc
out
ljmp
pop
add
jbe
outsb
movb
push
push
mov
mov
cmpl
jge
movzbl
add
adc
jmp
push
push
push
pushl
call
shrd
jmp
outsb
fwait
push
movsl
or
movsb
js
add
addl
ljmp
xor
test
insl
xor
mov
push
lret
jb
subb
xchg
out
mov
imul
jbe
aas
push
icebp
sbb
xchg
cwtl
sbb
xchg
sahf
fcmovu
mov
or
sarl
mov
add
rolb
repz
stos
cwtl
pop
cmp
mov
std
test
add
addr16
push
pushf
into
sbb
clc
sub
pop
mov
in
pop
mov
imul
jge
jge
jo
push
cmp
fisubs
mov
nop
out
js
inc
outsl
fwait
and
xor
cmp
insl
push
cmpsl
or
clc
add
sbb
ret
push
icebp
cmpsb
loope
pop
stc
imul
stos
sub
and
cld
and
cwtl
xlat
es
mov
mov
xchg
pcmpeqw
jle
lods
sub
add
inc
popa
or
jo
dec
pop
loope
rcll
sbb
and
repnz
push
ds
mov
rorl
fs
cltd
add
sti
adc
mov
mov
inc
pop
xchg
xor
js
xor
push
shl
xor
sbb
stos
adc
xchg
jb
mov
stos
ret
add
ss
scas
in
mov
out
and
std
add
andl
adc
leave
outsb
aam
out
or
ss
or
sbb
andl
xor
mov
out
popa
stc
popf
pop
sbb
push
xchg
dec
pop
xchg
lock
nop
loop
pop
fnclex
mov
in
xor
aam
fistpl
and
in
mov
mov
or
sub
mov
dec
adc
or
fdivl
sbb
push
dec
cmpsl
loopne
mov
adc
jns
hlt
jne
add
out
lret
jmp
ds
rclb
cld
iret
jbe,pt
jbe
mov
add
push
sbb
lods
lds
add
lahf
andl
inc
addr16
ficompl
sbb
ljmp
add
sti
or
loopne
xchg
xchg
aas
mov
ljmp
add
cmp
cmp
mov
sbb
test
hlt
iret
dec
jge
sbb
movl
jae
lds
jae
add
pop
xlat
lods
ja,pn
or
and
jmp
ds
and
mov
mov
and
pushf
jmp
mov
scas
or
jne
dec
mov
push
lcall
lea
lret
outsl
icebp
or
cmp
adc
ja
xor
outsb
sub
push
je
outsl
jb
mov
mov
in
add
cs
mov
aas
enter
mov
push
xchg
pop
mov
daa
test
scas
pop
std
icebp
jnp
inc
sub
popf
cli
fistps
ret
shrb
dec
pushf
xor
lea
xchg
jb
loopne
dec
add
ss
ds
inc
xchg
lock
stc
xchg
shll
icebp
jbe
scas
mov
leave
flds
mov
cmp
pushf
pop
inc
inc
sbb
cmp
negb
mov
sub
fdivs
add
stos
pop
adc
add
push
sbb
xor
addr16
sub
sub
jo
lret
jae
sub
xchg
popa
mov
inc
adc
inc
or
fadds
sub
ret
mov
mov
push
dec
or
pop
sub
or
andb
dec
out
inc
jne
mulb
push
mov
scas
pop
inc
adc
test
pop
out
cmp
cmpsb
cltd
fcomp
jmp
stc
push
es
or
push
dec
out
xor
cmp
xlat
pop
sub
add
xor
push
mov
out
jmp
push
call
in
mov
sub
mov
fs
rcll
push
and
mov
xor
adc
push
dec
mov
sti
push
scas
mov
fstps
or
cld
mov
les
xchg
lret
les
pop
sub
ss
ret
sub
adc
aaa
lret
test
adc
loopne
lcall
rolb
mov
out
movsb
into
outsl
push
jne
xor
or
shl
push
std
xor
inc
ret
lock
les
test
mov
jnp
pop
push
xchg
or
lods
xlat
js
sub
or
rorb
jne
fmull
lret
inc
jnp
clc
pop
pop
push
mov
add
test
cwtl
addb
faddl
mov
loopne
add
mov
xchg
fstl
gs
dec
dec
lods
jp
push
mov
sub
xchg
or
rorl
mov
pop
mov
fxch
pusha
jno
sub
inc
jb
inc
sub
subb
or
scas
mov
aaa
push
fwait
lret
and
mov
cmp
icebp
dec
xchg
mov
enter
rclb
sbb
aas
cmp
pop
aam
mov
dec
mov
pop
cmpsl
hlt
lock
cmp
push
sub
shl
int3
jge
ror
mov
mov
ja
lcall
xorl
bound
push
inc
jge
out
loope
loope
jp
dec
mov
orl
rolb
test
gs
cmp
xor
mov
fisttpll
ja
pushf
lods
fmuls
xchg
imull
je
sbb
mov
les
fcmovb
adc
jle
sub
lods
xchg
lret
add
enter
pusha
jmp
dec
cmp
cmp
jns
stos
subb
lods
dec
push
outsb
or
cmp
or
aaa
push
loope
mov
outsl
out
cmpsl
fcoms
nop
call
add
filds
mov
das
enter
daa
mov
loop
xchg
test
dec
hlt
lock
popa
jp
adc
cmp
adc
lret
arpl
leave
sub
lods
pusha
nop
sbb
mov
push
dec
mov
ret
lcall
sarb
xchg
fistps
xor
xchg
pop
fwait
mov
sub
imul
in
in
pop
sahf
repnz
testl
dec
scas
mov
in
mov
jno
jecxz
mov
push
rcrl
mov
sbb
mov
scas
jmp
push
das
aaa
out
js
fdivl
ljmp
adc
jno
stc
mov
jnp
or
std
inc
jo
bound
jmp
popa
adc
fs
jb
outsl
dec
xchg
pop
dec
xor
mov
icebp
jb
xor
push
push
popa
and
inc
add
xor
stos
arpl
cmp
inc
or
jns
inc
or
outsl
cmp
or
lods
push
xchg
in
je
gs
cmc
xor
pop
sub
mov
xor
lods
push
inc
mov
mov
mov
adc
xor
and
mov
sbb
xor
sbbl
or
mov
sub
mov
mov
subl
shl
mov
and
mov
mov
shrd
movl
xor
addl
shr
mov
mov
sbb
mov
mov
mov
mov
sub
sub
xor
decl
or
orl
jmp
cli
int
lahf
push
or
inc
cmpsb
ss
ds
xchg
orps
adc
cltd
adc
cmp
xor
dec
mov
shll
mov
dec
fldenv
rcrb
jb
cmc
daa
mov
outsb
int3
stos
lret
pop
lret
fisubrl
xor
xor
mov
push
int
out
insl
inc
enter
or
cmp
push
ss
stos
lahf
push
loopne
lock
cmpsl
mov
push
jge
cmpsl
jno
sub
jnp
rcll
lcall
cs
sti
nop
in
insb
arpl
xchg
leave
xor
and
cld
or
movsb
lret
sbb
or
fdivrp
test
out
adc
xor
adc
repz
pop
in
xlat
push
sbb
jb
stc
shll
sbb
hlt
cmp
movsb
cmp
sub
inc
sub
je
jae
and
sarb
scas
arpl
pop
cwtl
pusha
jb
imul
jge
mov
dec
rolb
inc
je
enter
daa
cmp
out
dec
pop
xchg
out
ret
fsts
and
cli
push
inc
mov
int
notl
xchg
stos
lar
xor
cwtl
ds
mov
or
adc
stos
test
lahf
nop
add
loope
mov
call
cmpsl
imul
sbb
mov
orb
andl
mov
gs
jnp
rdpmc
test
mov
pop
or
pushf
jns
cwtl
cmp
adc
jg
rcll
dec
or
addl
jp
sbb
cmp
aad
das
insl
stos
js
movb
jno
add
push
rcll
sub
test
ret
mov
xor
inc
push
jp
add
jge
push
mov
mov
or
jae
jnp
xor
mov
xchg
fimull
shlb
sarl
xor
mov
push
mov
ljmp
push
xchg
nopl
aas
in
add
hlt
icebp
inc
mov
and
mov
and
iret
xlat
or
mov
lods
xor
sahf
test
arpl
add
inc
push
sbb
cld
dec
fcoms
inc
fwait
dec
push
mov
loop
insb
lret
mull
test
sub
push
xor
addb
pushf
push
fisubrl
cmpsl
fnstcw
dec
push
dec
mov
lds
out
inc
or
lods
int
js
add
sub
popf
push
ja
pop
pop
xor
aas
and
mov
pop
xor
leave
lods
leave
mov
mov
test
cmp
pop
sahf
xlat
add
ficomps
leave
les
je
in
bound
lods
pop
xchg
jmp
mov
add
out
pop
or
mov
addr16
shll
int
lret
xchg
outsl
xlat
dec
xor
sub
mov
cltd
inc
and
lcall
adc
cltd
cmpsl
call
cld
xorl
sub
sub
lock
pmaxub
popf
jno
xor
enter
and
xor
stos
in
gs
and
xor
cmpsl
adc
add
cmp
loopne
lahf
pop
mov
lods
dec
push
cli
das
xchg
jl
sbb
out
push
loop
mov
lods
adc
shr
gs
mov
push
add
lcall
push
xlat
xchg
movsl
sub
data16
pushf
test
cmpsl
jns
shll
push
mov
ljmp
mov
sbb
push
adc
cmpsb
add
and
cli
lretw
andb
cmp
andl
mov
orl
pop
nop
in
xor
outsl
jl
cmp
inc
scas
pop
jo
test
clc
in
mov
call
gs
lcall
pop
cwtl
sbb
dec
pop
pop
ja
mov
add
mov
mov
out
test
inc
adc
lret
push
mov
lods
xchg
arpl
icebp
push
sbb
btr
mov
add
pop
xlat
lea
mov
dec
jge
lods
icebp
cmp
pop
mov
negl
ror
in
jae
lahf
rolb
adc
lret
pushf
xchg
dec
add
arpl
daa
sti
ret
inc
leave
push
pop
lods
mov
jno
arpl
jae
test
push
jl
mov
bound
dec
iret
ja
dec
into
pop
imul
imul
ret
add
fwait
sbb
ret
mov
test
in
inc
stos
inc
inc
sub
repz
movmskps
shl
into
and
loopne
adcl
and
jmp
test
lds
xchg
xchg
in
inc
pop
sbb
add
mov
jb
sub
xor
jmp
das
xor
out
inc
incl
cmpsb
xchg
pop
mov
popa
mov
aaa
popl
pusha
mov
negb
cmpsl
pop
aad
stos
ret
imul
mov
xchg
icebp
inc
les
jge
mov
mov
and
sub
data16
stc
cmp
outsl
stos
mov
cmp
adc
pop
in
fadds
stos
sbb
dec
cmp
outsl
ja
mov
andb
push
cmp
mov
jo
mov
hlt
sub
lds
push
xor
add
sbb
mov
sbb
decb
rorb
fildl
xchg
add
pop
data16
mov
movsl
adc
mov
add
and
add
or
ret
mov
bound
repnz
sti
xor
std
popa
adc
push
sub
adc
pusha
add
scas
xorl
ss
pop
scas
cmp
jns
test
test
xchg
push
mov
sbb
xchg
pop
fidivs
jle
xchg
aaa
xor
adc
cmp
jg
xchg
mov
jl
mov
ret
fwait
aad
out
add
ja
xchg
ret
je
sub
or
sbb
mov
adc
cld
in
push
lahf
cmpsl
or
fnstsw
push
mov
add
nop
inc
xchg
mov
test
lret
fimuls
or
dec
aaa
test
test
fisttpl
ss
sbb
push
sbb
add
cmp
push
dec
cmp
dec
xor
jecxz
subl
mov
std
sub
int3
jle
rolb
fwait
sub
dec
aaa
xchg
xor
mov
cld
pop
sbb
inc
mov
mov
xchg
stos
jmp
clc
or
scas
shrb
pop
arpl
test
cmp
mov
sub
xchg
jb
out
push
roll
fimuls
mov
mov
pop
and
mov
fcoml
mov
int3
and
sub
in
pushf
ret
ret
jae
stc
les
iret
fidivrs
test
lret
xor
inc
cmc
sub
ss
xchg
adc
cltd
xchg
push
int
subl
shll
xchg
inc
dec
xchg
sbb
test
push
jbe
add
testb
incl
sbb
mov
xor
or
mov
adc
mov
jmp
movsb
dec
dec
jo
gs
adc
push
int3
xchg
dec
insb
xchg
add
add
mov
add
adc
adc
mov
adc
or
adc
inc
and
fdivrs
sarl
lods
stos
fcoms
sbb
mov
popa
push
lcall
xchg
xchg
daa
leave
inc
lods
pop
pop
sub
sub
stos
repnz
cmp
mov
mov
xchg
cli
repz
addl
or
inc
xchg
push
mov
and
stos
xlat
add
xlat
sbb
jl
cmc
lock
repnz
adc
mov
or
int
mov
lods
popf
push
mov
mov
dec
imul
mov
add
lret
in
scas
jno
sub
push
mov
loope
cmpsb
imul
test
add
add
add
push
sub
lcall
loop
in
mov
xor
mov
lods
sbb
or
xlat
ss
and
aam
movsb
sbb
jo
lcall
inc
xor
lods
adc
jmp
or
adc
arpl
int3
bts
mov
ret
cmp
fcoms
dec
and
or
sbb
or
mov
dec
lods
adc
xchg
je
mov
xchg
jno
movsb
lods
cmp
lods
imul
cmp
pop
mov
pushf
adc
hlt
dec
xor
xchg
inc
test
movsl
push
ss
aas
test
pop
xor
bnd
mov
cmp
aaa
mov
pop
push
sti
mov
out
inc
jns
pop
ffree
push
adc
adc
mov
mov
jmp
dec
lods
in
mov
xchg
push
jo
cmpsl
or
fdivrs
lods
xor
stos
push
jb
cmp
mov
rorl
jns
movsl
pop
xor
out
mov
mov
add
insb
jne
sbb
pop
hlt
pop
rorb
int3
mov
jo
fs
icebp
ret
ffreep
jmp
lret
fisubrl
imul
add
push
cmp
loope
mov
mov
adc
pop
cmc
mov
and
imul
out
xor
xchg
repnz
inc
xor
add
roll
stos
je
daa
add
mov
out
mov
add
scas
cmp
xor
and
pop
aaa
mov
sbb
scas
push
mov
cli
add
mov
push
pop
cwtl
hlt
xchg
pop
aas
andb
add
push
in
jl
or
add
pop
repnz
mull
mov
aam
cmpsb
jno
popa
outsl
test
lock
mov
out
mov
popa
inc
dec
clc
cmpsl
mov
mov
push
movsl
sub
loop
push
jecxz
push
inc
mov
int3
xor
das
clc
push
cmp
stos
cmp
jg
inc
sub
out
pop
daa
pop
ss
fsubrl
xchg
xchg
ja
sbb
push
xchg
fwait
mov
ss
shl
fcoms
push
out
and
rorb
fs
sbb
outsb
mov
div
imulb
xlat
popa
jecxz
mov
mov
push
dec
dec
cli
repnz
sub
xor
inc
push
fisubs
hlt
xor
xchg
mov
add
arpl
sub
push
xchg
xchg
pop
sbb
mov
lods
ja
aad
lock
cmpsb
pop
fldenv
cmp
xor
inc
xlat
or
cmpl
mov
adc
mov
jl
mov
daa
dec
mov
in
mov
and
jp
adc
aam
in
or
test
mov
jg
out
arpl
jb
dec
add
stos
mov
mov
sbb
lea
rorl
fisubrl
clc
lods
insl
cmp
mov
and
mov
and
push
shll
rcll
std
movsb
les
pop
add
lret
lods
adcb
jecxz
or
in
stc
test
adc
push
stos
jecxz
jbe
xchg
cmp
or
lock
addr16
gs
scas
inc
ds
dec
mov
ret
jmp
xlat
test
adc
or
add
pop
mov
mov
push
lea
jg
js
mov
xchg
dec
sub
and
sbb
jae
and
inc
jae
dec
jns
mov
jle
out
lcall
inc
fcomp
mov
leave
mov
mov
mov
jnp
mov
fnstenv
dec
pop
mov
stos
jg
inc
inc
lret
jno
mov
mov
or
das
cltd
mov
mov
sahf
mov
int
aad
add
jns
mov
sub
es
push
je
xor
adc
int
cmp
repnz
aaa
aas
sbb
rorl
or
test
nop
int3
push
clc
and
mov
outsl
xor
insb
xchg
push
stc
jecxz
jecxz
mov
lret
clc
rcrb
dec
leave
dec
cmp
lock
or
mov
adc
mov
orb
iret
insl
pop
ss
xchg
xchg
call
test
mov
mov
xor
fists
test
xchg
or
jo
xchg
inc
sub
insl
or
cmp
pop
cmpsb
rcrl
xchg
stc
xchg
add
mov
push
pavgb
jg
add
mov
cwtl
icebp
sub
mov
cmpsb
sbb
push
sbb
mov
adc
flds
iret
pop
push
pop
mov
fisttps
cld
cmp
mov
jb
inc
push
inc
push
mov
ss
mov
pop
push
inc
and
xlat
pop
push
inc
aas
in
dec
shlb
sbb
inc
pop
fisubrs
insl
sahf
or
gs
icebp
iret
xor
lock
shll
pusha
popf
mov
cmp
cmp
sbb
mov
push
mov
push
and
jbe
stos
ljmp
jno
negb
cmp
or
sbb
out
rcrl
mov
ss
sub
fisttps
mov
push
outsl
adc
rolb
sub
ds
popf
fildll
test
dec
cmc
cmp
outsl
mov
mov
adc
mov
loop
ljmp
fdivrs
das
and
sbb
cmpl
pop
adc
pushf
cld
movsl
sahf
pop
jle
cmp
dec
loope
fs
add
lods
sub
imul
stos
mov
mov
adc
add
imul
movsb
inc
imul
imul
cmc
movsl
mov
push
adc
mov
mov
xchg
lods
lods
cmc
sbb
and
andb
int
clc
mov
loopne
dec
loope
nop
stos
in
inc
inc
sub
push
out
dec
cmp
and
push
mulb
inc
or
lahf
xchg
pop
mov
aam
xchg
pusha
cwtl
jle
subb
enter
clc
inc
inc
add
add
jl
subl
jmp
pushl
pushl
call
mov
mov
mov
mov
mov
mov
shl
xor
shld
cmpl
jg
dec
jmp
pushl
call
shl
mov
xor
xor
movl
movl
movl
cmp
movl
jne
movl
cmp
je
subl
mov
mov
cmpl
jg
add
jmp
pushl
push
pushl
push
push
push
push
pushl
call
mov
mov
xor
shld
shl
xor
addl
xor
movl
cmp
movl
jne
cmp
je
mov
mov
shl
mov
xor
movl
shr
or
sbb
mov
cmpl
ja
and
jmp
push
push
pushl
call
mov
mov
mov
mov
mov
jmp
bound
clc
xchg
xor
xchg
outsl
inc
adc
addl
pop
xchg
shrl
and
mov
sbb
push
xor
mov
movswl
mov
negl
addr16
mov
outsl
pop
iret
stc
or
sbbb
cmp
sahf
aaa
sub
dec
push
mov
sti
cli
mov
cmpb
cmp
cmp
add
rcrl
iret
call
inc
sub
fnstsw
lock
jno
jno
inc
jecxz
addl
das
test
hlt
mov
xchg
sbb
stos
outsl
mov
xor
fs
sbb
push
bound
jge
shll
pop
cmp
jb
xchg
fs
sarb
fisttps
mov
int3
adc
xchg
das
out
fmul
add
xchg
mov
pop
aad
fdiv
dec
cmc
cmp
pop
push
mov
aad
in
xlat
das
nop
mov
enter
inc
inc
cltd
enter
lea
fstp
inc
outsl
pusha
insb
mov
inc
pop
dec
subb
repz
out
jbe
js
xchg
xchg
sub
es
cli
push
xchg
dec
out
xor
mov
popa
call
or
mov
jl
push
xor
scas
cmp
stc
xchg
push
xlat
fs
stos
cmp
xlat
pop
pushf
dec
inc
add
adc
push
insl
cmc
mov
add
rcll
mov
adc
lcall
push
dec
movsl
shl
inc
xchg
faddl
xchg
mov
fistps
mov
filds
je
stc
pushf
dec
or
stc
test
push
sbb
xor
cli
cmc
jle
cld
scas
mov
bound
and
imul
sub
ja
loopne
cmp
push
cmpsl
or
dec
movsb
lret
rolb
push
aam
dec
dec
sbb
enter
pop
pop
inc
rcrb
or
cli
das
cmp
insb
ljmp
adc
sbb
cs
mov
jns
pop
sahf
cmc
jns
mov
imul
sub
sub
iret
imul
or
bound
frstor
push
mov
adc
push
push
dec
push
mov
test
mov
mov
pop
imul
xchg
arpl
cmp
cmp
mov
pop
mov
das
out
outsl
in
add
adc
mov
adc
scas
notb
jns
outsb
mov
mov
cmp
popa
shl
xor
dec
icebp
subb
stc
fst
scas
mov
ljmp
push
cld
add
push
decl
fcom
cmp
mulb
popf
sub
mull
cwtl
pop
scas
mov
sbb
dec
mov
cmpsl
stos
aaa
fldenv
mov
pop
mov
nop
cmc
andl
pop
cmp
xchg
xor
xchg
arpl
push
mov
into
inc
push
cli
jb
and
rorl
lock
idiv
sbb
pushl
push
sahf
mov
inc
and
daa
aam
fadds
cmp
inc
sbb
ficoml
out
lea
xchg
jne
fidivl
inc
xchg
lea
call
dec
test
enter
daa
add
xor
xchg
cli
hlt
rolb
or
sti
cmp
in
dec
testl
cld
xor
mov
inc
push
ficoms
mov
push
xchg
cmc
imul
mov
stos
cmp
lret
idivl
gs
add
aad
pusha
stc
fistpl
int
aas
mov
loop
cmp
xor
jo
mov
cltd
fnop
mov
in
sub
sar
xor
jnp
popf
dec
inc
xchg
les
jge
into
or
leave
movb
sbb
mov
adc
sub
je
sbb
adc
rcll
lods
adc
out
xchg
aam
cmp
add
loope
data16
or
gs
add
add
jecxz
cwtl
mov
inc
xchg
inc
push
cmp
movsb
cwtl
dec
cld
mov
pop
mov
movsb
cmp
add
shlb
int
addb
aad
pushf
xchg
xchg
dec
sti
bound
xor
sbb
idivb
aaa
mov
and
test
sub
cmpsb
dec
sub
outsl
test
cmp
xor
ficomps
add
and
mov
pop
pop
ds
in
xor
jo
push
insl
and
sub
xchg
inc
inc
iret
add
rol
mov
inc
push
imul
adc
xchg
mov
add
jo
mov
mov
clc
shrl
xor
push
test
mov
popf
jmp
cltd
clc
mov
inc
mov
mov
pop
adc
dec
rorl
hlt
sti
outsb
aaa
das
jb
data16
mov
ret
aad
mov
add
ja
mov
lret
aas
and
jb
mov
jnp
sarb
ss
pop
ret
jo
loopne
inc
cmpb
leave
in
cltd
mov
outsl
movsl
test
sbb
mov
int
test
and
ljmp
lea
loope
test
f2xm1
ror
add
sbb
lods
sti
fnstenv
outsb
jns
push
or
and
test
pusha
push
jmp
shlb
scas
push
mov
lods
clc
cltd
call
xchg
fs
roll
ja
imul
clc
push
loop
movsl
inc
insl
inc
js
fs
enter
push
mov
aaa
adc
fs
push
pop
push
aaa
jbe
push
test
adc
push
in
loope
out
nop
je
ret
movsb
loop
mov
loopne
jle
sbb
data16
jp
js
int
inc
popa
jp
inc
and
add
nop
dec
fs
inc
movsb
xchg
loop
xchg
push
mov
pop
in
mov
xor
aas
pop
push
insl
mov
dec
repnz
shlb
gs
jle
xor
mov
mov
pushf
aaa
aaa
xor
mov
sbbb
mov
add
mov
clc
xor
and
ret
pop
xor
aad
sub
jle
inc
movsl
cmp
jecxz
pusha
ljmp
adc
xorl
test
push
jl
pop
mov
jl
je
lahf
out
lcall
nop
enter
in
sub
jbe
cs
sti
dec
psllq
or
mov
push
movl
lret
in
sahf
xor
jnp
pop
sub
subl
and
into
std
cmp
test
vaddsubps
push
pop
mov
cltd
rcr
rolb
cmpsb
nop
dec
sbb
outsl
andl
aad
cmpsl
push
or
push
rclb
adc
dec
ret
sub
jae
adc
int
mov
sbb
ficoms
jne
shl
into
dec
sub
and
das
lods
scas
dec
xchg
pop
ret
sahf
enter
sub
test
mov
mov
and
add
scas
adc
fsubl
sbb
ret
sub
sub
xchg
rorl
iret
mov
shrb
inc
inc
add
xor
pop
inc
inc
add
rorl
dec
rorb
mov
xor
mov
mov
mov
adc
jmp
fbld
and
mov
in
loope
adc
addl
out
mov
cld
dec
jbe
lcall
sub
testl
aam
leave
sti
mov
cmp
lcall
mov
leave
dec
fisubl
and
jo
or
out
enter
call
insl
test
inc
call
jecxz
ret
ja
in
inc
fucom
in
std
data16
inc
and
cmp
cmp
pushf
cmp
push
ljmp
jl
popa
lea
fsubs
mov
mov
in
cmp
sub
sar
fisubrs
add
test
mov
dec
add
cmp
sti
hlt
lcall
dec
fxch
movsl
dec
in
adc
mov
adc
ljmp
dec
addl
ss
pop
shr
cmc
mov
rep
mov
jo
sub
jnp
ficoml
test
lock
mov
imul
fwait
jbe
pop
addb
fldt
lea
pop
mov
call
jmp
jmp
inc
ja
push
cli
mov
xchg
cmp
sti
pop
add
lahf
ficompl
xchg
addr16
fsubs
test
data16
ds
cwtl
outsl
std
lea
push
ret
sub
pushf
mov
lret
xlat
push
or
mov
mov
es
das
xor
mov
adc
adc
fwait
lods
into
jne
shll
and
push
mov
sub
inc
mov
pop
insb
jns
mov
mov
lret
jns
cmp
lret
push
cmp
mov
jle
cmpsl
mov
pop
fistpl
xor
or
fdivrl
jecxz
lock
jns
mov
inc
test
mov
or
mov
sbb
or
fisttps
shrl
pop
pushf
stc
int3
sarb
lods
lods
pop
in
icebp
cmp
lock
aaa
push
fs
stc
cmp
xchg
sub
sbb
jle
leave
cmp
arpl
lods
mov
sahf
adcl
pop
mov
lods
mov
fildl
and
js
and
mov
cwtl
jb
xchg
shlb
sbb
lret
addb
insb
out
int3
dec
inc
sbb
shrl
lcall
outsl
and
lea
subl
imull
sub
dec
cld
icebp
mov
xchg
lea
andb
arpl
scas
inc
fistpl
test
sbb
or
sbb
and
leave
cltd
add
pop
cmc
sti
push
lahf
cltd
cmp
in
ja
and
pop
pop
xchg
push
cmp
cmp
and
mov
int
cltd
mul
adc
fldl
sub
and
inc
or
clc
xchg
mov
fnsave
mov
out
mov
adc
mov
imul
hlt
mov
hlt
pop
jl
push
mov
jo
in
les
out
jmp
fwait
jae
or
xlat
imul
sbb
ljmp
cmp
jmp
stc
fistpl
in
xor
add
cmpb
daa
pop
mov
jns
jae
sub
add
decl
jle
sub
sub
enter
int3
lret
add
mov
ret
imul
sahf
or
iret
stc
mov
pop
xchg
pusha
sahf
mov
lret
out
or
sbb
adc
pop
cltd
add
and
adc
sub
stc
scas
iret
adcb
popa
lock
pop
iret
in
repz
jo
jge
std
outsb
push
mov
das
call
pop
decb
jl
cli
iret
ja
in
xchg
cwtl
lods
cli
jne
cmp
shl
bound
cld
xor
loope
popa
sbb
mov
std
or
sub
cmp
or
ret
sahf
pop
scas
sti
jmp
xor
ret
faddl
dec
dec
push
sbb
dec
mov
mov
add
dec
notl
xchg
pop
lret
lret
into
and
pushf
sbb
cli
add
daa
add
adc
jne
lret
cltd
repz
pop
mov
les
in
or
mov
ret
sbb
mov
mov
push
and
mov
rcl
push
or
inc
xor
movsb
sbb
dec
adc
data16
cmp
push
sbb
sbb
arpl
mov
xor
out
test
adc
iret
mov
flds
enter
inc
sti
btc
jp
mov
cs
push
xor
and
mov
inc
jg
pop
inc
cltd
jns
div
mov
or
outsl
adc
insb
fdivs
cmp
jle
cwtl
outsl
jb
sar
inc
shrl
push
push
lds
sbb
xchg
push
dec
adc
lods
les
add
gs
cmp
cltd
add
lahf
push
mov
pop
jl
mov
cmp
insb
mov
adc
loope
mov
cmovnp
sbb
jae
arpl
mov
push
into
add
mov
pop
das
rcll
js
push
sub
pop
mov
mov
dec
jg
sbb
movsb
or
sbb
rcll
push
pop
notb
sub
rorb
jno
mov
stc
mov
pop
push
dec
inc
cmp
pushw
gs
andl
add
or
mov
and
add
leave
out
imul
fiaddl
cmc
fisubs
jl
xor
cmpsl
sub
fnsetpm(287
in
mov
lcall
arpl
out
ja
lea
adc
call
fs
jb
emms
fcomi
gs
pop
fadds
mov
adc
lods
test
les
fnstcw
xchg
sbbl
jae
push
movsl
push
je
out
popa
add
ret
hlt
gs
jp
pop
mov
jno
dec
stos
mov
inc
rcr
loop
sub
push
outsb
mov
pushf
popa
int3
daa
and
add
mov
loope
push
hlt
in
push
iret
aad
clc
dec
js
orb
fsubl
pop
xchg
pop
dec
bswap
addr16
and
mov
imul
cmc
test
aas
dec
jb
leave
call
push
push
xor
pushf
lret
cwtl
mov
add
repnz
jg
das
sarl
ja
repz
sub
sbb
and
outsb
mov
out
ss
adc
inc
sbb
out
jg
testl
out
test
jns
lds
std
lock
daa
loopne
sarl
sbb
mov
cwtl
sub
mov
movsl
xchg
test
lret
stos
cld
test
and
ret
ljmp
imul
xor
mov
out
lods
int
jns
std
nop
cwtl
adc
xor
sub
addb
int3
and
xchg
or
pop
adc
xor
rorb
inc
inc
add
pop
add
xor
orl
shr
xorl
shl
adcl
or
movzbl
sbb
mov
mov
mov
and
movl
sub
mov
neg
mov
xor
shr
negl
shl
or
subl
push
lea
sbbl
push
lea
orl
push
call
and
mov
cmpl
jb
jmp
push
push
pushl
pushl
call
mov
xor
shr
shl
or
push
lea
push
mov
sub
mov
shrd
shr
cmpl
jg
xor
add
mov
sub
imul
jmp
push
push
push
call
mov
mov
movl
xor
addl
xor
or
andl
lea
push
shl
movl
call
mov
sbb
mov
sub
xor
shl
adc
shr
or
mov
sub
push
sub
lea
push
orl
mov
inc
mov
incl
shrd
shr
or
mov
mov
sbbl
xor
shl
xor
movl
or
adcl
lea
push
call
and
mov
or
mov
cmpl
jl
mov
and
xorl
jmp
pushl
call
xor
shl
shr
or
addl
jmp
xchg
adc
inc
adc
xchg
popa
aaa
repnz
cmp
adc
addl
mov
pop
fidivrl
adc
cli
outsb
sbb
rorb
out
and
xor
xor
popa
mull
cmp
adc
ret
je
cmp
mov
inc
stos
dec
ja
pusha
xchg
stos
and
dec
sbb
fisubrs
jle
hlt
and
fildll
cmp
and
sbb
orb
jb
mov
in
mov
jae
loope
dec
sti
dec
add
icebp
jecxz
mov
or
push
add
clc
pop
mov
insb
mov
mov
lock
iret
and
lret
jae
int3
add
cmp
in
dec
sub
mov
sub
pop
jmp
rcr
sub
call
inc
addr16
in
cmc
bound
subl
pop
ljmp
pop
pop
popf
enter
loop
mov
icebp
lock
cld
imul
xor
push
aaa
jno
and
push
fcmovbe
jg
imul
add
bound
sahf
adc
lret
push
loope
stos
call
push
inc
js
add
and
fiaddl
std
jp
sbb
loopne
stc
jmp
popa
pop
dec
jg
mov
data16
shl
outsl
cmp
int3
shrl
movsb
fadd
and
into
xor
ss
push
pop
sub
push
or
addr16
aas
and
stos
dec
out
or
test
adc
out
sub
mov
out
xchg
shr
jns
dec
out
sub
pop
popf
sub
dec
cmc
pop
pop
or
out
inc
insl
cmp
es
sahf
jbe
inc
dec
daa
jle
sub
jecxz
into
sub
shl
test
fsqrt
mov
cmp
or
jbe
pop
shl
stos
xchg
std
push
push
aam
and
cvtdq2ps
xchg
pop
cmp
push
sbb
mov
cmp
mov
leave
rclb
mov
and
fcoms
mov
push
jns
cwtl
shl
cmpsl
and
dec
inc
es
pop
push
jnp
shlb
lds
or
mov
sbbb
sub
aam
sbb
jae
sub
push
mov
cwtl
dec
idiv
daa
pop
js
mov
popf
adc
int3
mov
mov
mov
enter
clc
daa
xor
adc
cltd
cwtl
ret
imul
or
fsub
xchg
aas
inc
shrb
jl
iret
pushf
pop
outsb
mov
aad
out
mov
rorb
movsb
or
and
sub
pop
arpl
test
xchg
arpl
or
pusha
daa
jmp
stc
adc
data16
fadds
pop
pop
fadds
popf
and
ficoml
leave
mov
sub
jno
push
in
xor
aad
add
orb
pop
inc
insb
dec
repz
orb
jbe
insb
pop
stos
fadd
bound
cmc
loop
out
and
out
stos
test
shlb
xor
and
jecxz
in
test
xchg
and
push
je
jbe
add
dec
push
movups
leave
aas
xchg
jle
icebp
inc
mov
mov
cs
push
adc
or
sub
xor
mov
xchg
rcr
or
fsubrp
jecxz
sbb
dec
stos
iret
fiadds
ret
pushf
pop
subb
push
or
add
arpl
push
jle
mov
loope
mov
pop
sbbb
mov
sub
pop
pop
fsubs
test
int3
mov
lea
imul
push
sub
mov
mov
inc
pushf
test
aad
mov
icebp
jae
inc
mov
stos
orb
dec
test
cmp
lret
cmp
ljmp
das
popa
test
dec
fimuls
xchg
sub
mov
rorb
inc
sarl
and
mov
mov
jns
cmp
mov
push
fstps
shlb
insl
adc
aas
dec
loopne
cli
push
cwtl
mov
leave
pusha
pop
xchg
pop
mov
je
test
xchg
outsb
ret
roll
sbb
mov
mov
jmp
push
mov
sbb
out
sbb
pop
gs
cltd
xor
mov
mov
mov
sbbb
sti
mov
bnd
out
inc
sar
jb
and
lret
lahf
lret
push
sti
mov
cmc
loop
fildll
xchg
push
xchg
mov
test
and
psraw
mov
mov
jne
inc
loope
push
out
xchg
inc
fsubrs
imul
test
mov
cmp
sbb
mov
jbe
movsb
jle
add
leave
shll
loope
fstps
inc
outsb
dec
stos
jecxz
inc
dec
jae
es
out
out
jne
push
adc
jno
sub
scas
lods
xchg
add
pop
sub
out
in
mov
and
inc
aaa
and
lock
xchg
xor
xchg
test
mov
pop
push
cmpsl
dec
and
out
fcomip
inc
xchg
rorb
xchg
ret
xor
int3
xlat
inc
or
fwait
pop
roll
dec
imul
dec
testl
push
add
mov
stos
adc
fiaddl
pop
int
sub
xor
push
lds
mov
xchg
xchg
in
add
inc
in
mov
xchg
sub
int3
sbb
push
mov
insl
ficoms
and
lea
cld
adc
pop
cmp
cmp
sti
or
mov
leave
scas
mov
sbb
out
shrb
add
mov
jno
aam
ds
and
cmpsb
fisttps
test
test
pop
stos
sti
or
out
adc
add
xchg
outsl
and
and
bound
inc
cld
sbb
adc
or
push
bound
pop
adc
addb
test
jmp
leave
cmp
xchg
shlb
std
ja
jge
and
inc
mov
sub
call
push
aas
lds
mov
pandn
mov
dec
ss
sbbl
mov
test
jns
mov
js
int3
aad
mov
push
out
jb
sbb
insl
push
mov
fists
addr16
arpl
leave
xor
cmp
lods
xor
xchg
out
aas
or
mov
test
dec
sbb
or
add
int
sub
cmp
mov
cmp
or
sbb
adc
daa
push
mov
ljmp
push
mov
ja
lahf
lahf
ja
or
in
xor
adc
add
daa
jns
cmpsb
or
xchg
clc
sbb
pusha
adc
insl
add
cmp
push
mov
mov
mov
xchg
cmp
inc
sub
test
fs
push
sub
adc
pusha
xchg
icebp
mov
mov
jo
dec
aad
pop
insl
ds
adc
mov
sub
or
rcrb
sbb
push
outsl
cmp
jmp
pop
cmp
xor
push
lea
sbb
push
adcl
mov
sub
mov
shrd
and
shr
mov
mov
adc
xor
xor
subl
or
shl
mov
sub
mov
movl
shrd
shr
adcl
mov
mov
xor
jmp
adc
sahf
dec
push
rcrl
adc
scas
adc
jno
dec
jbe
push
push
leave
add
insl
push
stos
mov
test
les
mov
jp
lea
pop
jmp
out
sbb
stos
or
cltd
adc
pop
insb
call
xchg
lds
push
jmp
sub
aad
test
pop
jle
jno
pop
xlat
aaa
xchg
mov
jmp
ljmp
xchg
icebp
das
jo
inc
dec
cmpsb
hlt
mov
subl
cmpl
pop
sub
lahf
ffree
or
cli
lock
ljmp
ljmp
adc
ret
xchg
stos
sub
frstor
pop
xchg
jl
cs
stc
lods
daa
shr
aad
rorl
out
out
pushf
test
inc
jle
repnz
in
and
out
xchg
and
enter
inc
mov
fstpl
sub
pusha
bound
xor
frstor
aaa
push
push
push
cmc
mov
dec
stc
in
pop
in
mov
xchg
xor
idiv
jno
ret
and
mov
test
add
sbb
bound
and
mov
bound
ljmp
loopne
std
mov
mov
aaa
or
xor
sub
ljmp
inc
jp
push
xchg
or
je
xor
fs
jg
or
and
push
cmp
int3
add
adc
mov
push
in
stc
loopne
jecxz
imull
mov
pop
jo
imul
jo
xor
stos
xchg
mov
lret
and
sbbl
negb
iret
pop
and
mov
aad
jnp
jecxz
mov
andb
ret
outsl
mov
mov
loopne
arpl
std
stos
sahf
or
cmpsl
jp
mov
mov
mov
mov
xchg
mov
test
sub
xchg
jnp
inc
jp
jbe
mov
popl
xchg
ss
and
add
and
cmp
adc
daa
mov
shlb
jle
jbe
lods
mulb
mov
mov
jl
stos
push
js
inc
pop
push
inc
ljmp
arpl
add
add
add
fdivr
cmovne
sbb
cmp
ja
test
or
mov
dec
and
xor
mov
mov
lods
aaa
test
add
lahf
stc
fisubs
gs
je
lock
dec
addr16
dec
ljmp
push
popa
stc
test
aas
decl
dec
cmp
out
pop
mov
test
jae
mov
in
dec
inc
loope
xor
lods
xchg
movsb
aam
fldcw
pop
and
negb
mov
jo
lock
std
cmp
gs
cli
arpl
jmp
sbb
mov
jecxz
sbb
enter
add
cmp
dec
mov
clc
mov
adc
lds
cmc
dec
pusha
xchg
jg
and
fdivr
int
jae
push
imul
sbb
pop
pop
adc
jae
arpl
mov
fwait
js
out
mov
cmp
sbb
sbb
sbb
jbe
push
or
mov
test
out
inc
or
sbb
mov
fsubrs
lods
outsb
int3
add
and
icebp
out
das
xlat
fs
xor
and
mov
jle
nop
aam
daa
cmp
sub
ljmp
adcl
inc
adc
and
out
pop
lea
pop
mov
fwait
push
lds
xchg
mov
je
mov
adc
cmp
xchg
popf
mov
call
loopne
leave
pop
insb
mov
cwtl
insl
mov
push
pop
fs
or
or
push
insl
cwtl
dec
xor
negb
sbb
pop
lahf
mov
cmpsb
lods
add
fsubp
std
push
sub
repnz
xchg
pop
daa
cmpsl
mov
lcall
jecxz
xchg
add
mov
movsl
xchg
inc
adc
xchg
insl
dec
mov
push
shr
int
add
sbb
sbb
push
xchg
xor
sbb
add
push
cmp
pusha
adc
sbb
or
mov
jle
jp
call
jmp
or
lods
sahf
sbb
mov
and
sbb
jp
cmc
pop
dec
shrb
fs
cmpb
andl
fisttpll
adc
add
jb
inc
jl
xor
and
mov
testb
ja
mov
xchg
fisttps
iret
movsb
cmpsl
loop
cmpsl
and
test
mov
andps
lods
xchg
out
insb
lret
pop
fucom
add
leave
dec
mov
into
cmp
pop
and
mov
mov
push
clc
pop
mov
pop
adc
pop
shll
mov
jg
push
add
lods
inc
sbb
insl
cltd
lcall
mov
cmpsl
in
popf
repz
cmp
dec
push
jl
or
jecxz
xor
shll
insb
lret
mov
push
stos
cmp
and
bound
stc
xor
fsub
das
xor
imul
lea
sbb
pop
add
test
xchg
lods
adc
je
pop
imul
dec
pop
sub
cmp
stos
push
imul
cmpsb
or
or
in
incb
sub
sbb
sti
loop
outsl
popa
add
in
xor
fisubrs
lds
mov
imul
inc
outsb
scas
cwtl
pushf
xor
add
pop
bound
sahf
cmp
or
aaa
push
mov
mov
movsb
mov
xor
add
inc
imul
gs
mov
mov
mov
push
pop
dec
lea
push
arpl
pop
inc
fcmovnbe
test
add
fidivl
jecxz
sub
rorl
dec
mov
jg
lods
inc
imull
jge
or
test
mov
inc
inc
mov
push
stos
mov
lcall
cmc
das
and
cmp
push
lret
call
adc
popf
and
and
mov
xchg
aaa
jle
sbb
fpatan
xor
mov
sbb
cmp
and
andb
pop
pop
jno
xor
push
cmpsl
mov
add
lret
fildl
jp
insw
in
adc
jmp
and
rcrb
in
ljmp
fcompl
push
lea
inc
ret
ljmp
movsb
xchg
andl
cmp
inc
push
or
hlt
xor
and
jg
outsl
fisubl
into
inc
push
mov
xchg
fsts
test
stos
xchg
sbb
ficomps
div
jns
jle
addb
cltd
cmpsb
cmpsl
cli
sbb
inc
int
scas
outsl
das
idivb
adc
pop
and
sub
mov
jmp
loop
cmp
les
jge
or
jns
gs
add
adc
test
arpl
fildl
add
inc
inc
add
lret
add
lea
adcl
push
xorl
shl
call
mov
cmpl
jg
sub
and
jmp
pushl
push
call
mov
shl
xor
shr
or
push
lea
sub
push
cmpl
jg
xorl
jmp
push
pushl
pushl
push
push
push
call
mov
mov
shrd
shr
mov
mov
sub
xor
mov
adc
shl
mov
mov
mov
sbb
xor
or
mov
and
shrd
adcl
shr
adc
mov
mov
orl
xor
xor
andl
or
cmpl
jg
jmp
call
add
mov
shl
mov
shrd
shr
mov
adcl
mov
xor
xor
sbbl
or
notl
add
lea
push
shl
xorl
call
mov
xorl
mov
cmpl
jg
jmp
push
pushl
call
xor
shr
jmp
notl
notb
sub
adc
adc
and
movswl
adc
push
jnp
dec
sub
or
xchg
stos
ror
ss
xchg
gs
rcll
in
mov
insb
dec
add
pusha
adcb
lods
cli
sarl
xor
orb
mov
sbb
sti
aaa
aaa
inc
sbb
mov
pop
in
bound
cmp
jg
push
add
stos
dec
gs
jecxz
pop
or
xchg
shl
push
loope
cld
add
fsubl
and
and
test
push
loope
fcoms
test
or
jge
cmp
sub
pop
mov
aam
and
in
movsb
int
movsl
cmc
cmp
and
test
jae
fistpll
rcll
pushf
out
jne
jnp
dec
shrl
shl
cltd
xchg
ljmp
iret
sbb
int3
inc
call
xlat
mov
std
int
cmp
or
push
sarl
inc
pusha
ljmp
adc
and
sub
lods
push
mov
test
add
push
imul
out
mov
mov
sbbl
das
xor
test
mov
cli
push
pop
test
and
arpl
xchg
jl
sbb
push
xchg
jmp
shl
inc
stos
cmc
enter
xor
dec
inc
jns
outsl
jle
xor
cld
add
test
xchg
mov
lret
cmp
into
outsl
dec
xorl
jbe
sub
fs
aas
fisubl
dec
mov
inc
and
iret
jae
sbb
loope
jno
mov
outsb
pop
add
push
add
pop
push
push
test
bound
sarb
mov
fstps
outsl
mov
adc
dec
ljmp
jl
ljmp
into
jns
mov
or
mov
lea
push
cmpl
ja
and
jmp
push
push
push
pushl
call
mov
mov
shrd
shr
mov
mov
addl
xor
neg
xor
or
push
sbb
mov
movzbl
and
mov
mov
push
orl
pushl
subl
shl
call
lea
xor
add
add
push
add
mov
mov
cmpl
jbe
adc
or
jmp
push
push
push
call
shrd
shr
mov
mov
xor
xor
or
addl
push
adc
mov
push
adcl
pushl
subl
shl
call
cmpl
jge
sbb
jmp
pushl
pushl
push
push
pushl
pushl
call
mov
mov
mov
mov
mov
mov
sbbl
mov
rol
mov
adcl
xor
movl
mov
movl
cmp
movl
je
or
movl
mov
movl
mov
mov
mov
mov
mov
mov
add
mov
mov
xor
shld
shl
xor
mov
xor
inc
xor
mov
mov
mov
movzwl
mov
cltd
idiv
mov
and
mov
mov
mov
mov
mov
mov
mov
mov
imul
mov
and
mov
and
mov
imul
mov
sub
mov
cmp
ja
mov
mov
mov
shrd
shr
mov
xor
shl
mov
xor
or
mov
mov
mov
xor
xor
shrd
mov
shll
xorl
xor
or
mov
shr
or
xor
cmp
ja
jae
mov
mov
movb
movb
movb
movb
mov
movzbl
mov
xor
mov
imul
movzbl
xor
and
add
mov
movb
movb
mov
mov
and
or
imul
mov
cmp
ja
movb
movb
movb
mov
mov
and
or
add
mov
movzbl
cltd
movzbl
idiv
mov
movb
movb
movb
mov
mov
xor
sub
mov
movzbl
movzbl
cltd
idiv
mov
cmp
jb
mov
mov
shrd
shr
mov
mov
xor
xor
or
sub
shl
mov
mov
shrd
shr
mov
mov
xor
xor
shl
mov
or
ror
jmp
mov
mov
mov
mov
mov
shrd
shr
mov
mov
xor
xor
or
shl
add
mov
mov
mov
mov
xor
xor
shrd
mov
shll
xorl
xor
or
mov
shr
or
xor
cmp
jb
ja
cmp
jb
mov
decl
jne
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
add
push
lea
push
shl
call
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
push
push
mov
shl
mov
shrd
shr
mov
mov
xor
xor
or
add
push
shl
call
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
push
shl
call
mov
mov
shrd
shr
mov
mov
pop
xor
xor
pop
shl
or
pop
leave
ret
push
mov
sub
not
mov
cmpl
jb
jmp
push
call
mov
mov
sub
push
mov
mov
sbb
mov
adc
orl
orl
add
mov
mov
add
mov
cmpl
ja
sbb
inc
jmp
pushl
pushl
push
pushl
push
pushl
call
mov
sub
mov
sbb
mov
cmpl
ja
or
jmp
push
push
push
call
orl
orl
lea
mov
mov
mov
not
mov
sbbl
add
neg
mov
mov
adcl
mov
mov
neg
shrd
cmpl
ja
or
jmp
push
push
push
pushl
push
call
shr
mov
mov
xor
xor
or
cmpl
jb
jmp
pushl
push
push
pushl
pushl
call
mov
movl
movl
movl
movl
movl
movl
xor
movl
movl
mov
add
movl
movl
cmpl
jge
adcl
adcl
jmp
pushl
push
push
call
movl
movl
movl
movl
movl
dec
movl
sbbl
movl
movl
movl
cmpl
ja
xor
add
sub
mov
jmp
push
push
push
call
movl
movl
movl
mov
shl
mov
andl
push
addl
push
push
push
andl
call
xorl
mov
xorl
mov
mov
mov
add
xor
add
mov
mov
sub
sub
mov
sbb
lea
and
mov
cmpl
jg
jmp
pushl
pushl
push
call
mov
or
and
mov
or
xor
cmp
movl
jne
not
mov
mov
shrd
cmpl
jbe
adc
jmp
push
pushl
push
pushl
pushl
call
shr
mov
mov
shl
xor
xor
subl
or
mov
mov
cmp
movl
jne
mov
add
mov
neg
xor
xor
or
sbb
mov
cmpl
jbe
jmp
pushl
call
mov
mov
shrd
mov
mov
xor
shr
cmpl
jbe
xor
jmp
push
push
call
mov
xor
or
shl
sub
mov
andl
mov
mov
add
adc
mov
and
mov
adc
mov
shrd
negl
shr
sub
mov
mov
cmpl
jg
add
jmp
pushl
pushl
pushl
pushl
pushl
call
xor
shl
xor
or
mov
mov
subl
shrd
shr
neg
mov
cmpl
jbe
adcl
jmp
pushl
pushl
pushl
call
mov
mov
xor
xor
or
shl
incl
lea
mov
cmpl
jl
dec
jmp
pushl
call
mov
shrd
shr
mov
mov
mov
adc
xor
cmpl
jbe
and
jmp
call
mov
xor
or
shl
imul
mov
dec
mov
sbbl
shrd
mov
or
mov
xorl
xor
orl
shr
mov
mov
addl
xor
subl
or
shl
sub
mov
movl
cmp
mov
mov
jg
sbb
mov
cmpl
jb
jmp
pushl
push
call
mov
shrd
mov
mov
xor
shl
xor
or
shr
subl
mov
sub
mov
mov
adcl
mov
subl
shrd
adcl
shr
add
mov
cmpl
jg
sbb
jmp
pushl
push
call
mov
mov
xor
xor
or
shl
orl
imul
addl
sub
jmp
mov
or
mov
mov
cmpl
jl
or
jmp
push
pushl
call
mov
shrd
mov
mov
xor
shl
addl
xor
adcl
or
andl
shr
cmpl
jg
jmp
pushl
push
push
push
call
mov
mov
mov
mov
shrd
shr
mov
cmpl
jg
mov
adc
or
jmp
push
pushl
pushl
pushl
pushl
push
call
mov
mov
xor
xor
or
shl
mov
mov
adc
add
add
xor
xor
adc
mov
mov
xor
add
adc
shrd
or
shr
movzbl
adc
mov
mov
xor
sbbl
shl
xor
movzbl
adc
or
neg
mov
add
movl
mov
mov
sub
imul
mov
cmpl
ja
or
jmp
push
pushl
pushl
pushl
call
mov
movl
mov
movl
mov
movl
adc
mov
xor
mov
cmpl
jbe
jmp
push
push
push
pushl
call
mov
shrd
shr
mov
mov
xor
shl
adcl
xor
or
movzwl
sbb
mov
lea
cmpl
jbe
and
jmp
pushl
push
pushl
pushl
call
mov
mov
mov
shrd
shr
mov
adcl
mov
subl
shl
adc
mov
xor
xor
sbbl
or
sbb
mov
or
mov
xor
cmpl
jl
jmp
push
push
push
call
mov
mov
shrd
shr
mov
mov
xor
shl
xor
adc
or
adcl
lea
mov
or
mov
cmpl
ja
add
jmp
pushl
pushl
push
call
mov
mov
shrd
shr
mov
mov
subl
shl
and
mov
xor
adcl
xor
xorl
or
cmpl
jle
inc
decl
jmp
push
call
mov
mov
or
mov
mov
shrd
notl
shr
mov
sub
mov
xor
addl
shl
addl
xor
sbb
or
lea
mov
mov
addl
mov
shrd
shr
xor
add
mov
sub
xor
mov
mov
addl
xor
shl
adc
mov
xor
addl
or
mov
sbb
mov
or
add
cmpl
jle
sub
negl
jmp
push
push
call
mov
mov
shrd
shr
mov
cmpl
jge
neg
jmp
pushl
push
push
call
mov
xor
xor
or
lea
mov
cmpl
jge
jmp
push
push
push
pushl
push
push
push
pushl
push
pushl
push
push
push
pushl
call
mov
shl
mov
shrd
shr
mov
mov
addl
xor
orl
xor
subl
or
xor
mov
shl
incl
mov
adcl
mov
orl
mov
addl
or
xor
mov
mov
andl
shrd
shl
sbbl
shr
mov
mov
or
xor
mov
xor
orl
or
mov
dec
orl
not
xorl
and
xor
or
xor
mov
xor
and
mov
cmpl
ja
sub
jmp
push
push
push
call
mov
xor
or
mov
mov
shrd
shr
mov
sbb
mov
mov
adc
mov
mov
xor
xor
xor
adc
mov
addl
xor
andl
shl
subl
mov
addl
or
mov
mov
cmp
je
xorl
mov
xor
add
mov
sub
and
sub
cmpl
ja
add
jmp
pushl
push
pushl
push
push
push
call
mov
mov
mov
shl
xor
mov
mov
mov
subl
xor
adcl
xor
sbbl
shrd
shr
xorl
or
xor
or
mov
mov
mov
mov
xor
shl
xor
mov
mov
mov
mov
xor
xor
shrd
or
shr
mov
mov
or
mov
cmp
jne
cmp
je
jmp
mov
mov
mov
shl
xor
mov
mov
mov
xor
xor
shrd
xor
or
mov
mov
mov
mov
xor
shr
or
mov
mov
shl
xor
mov
mov
xor
mov
mov
xor
shrd
or
shr
mov
mov
or
mov
mov
mov
cmp
jne
mov
cmp
je
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
shrd
mov
mov
xor
shr
mov
xor
shl
or
mov
mov
mov
xor
shld
xor
mov
mov
shl
mov
mov
xor
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
mov
mov
xor
shl
mov
mov
xor
mov
mov
xor
xor
shrd
or
shr
mov
mov
or
mov
mov
push
pushl
push
push
call
mov
mov
shrd
shr
shr
xor
push
xor
mov
mov
mov
push
push
push
call
shld
mov
xor
or
mov
mov
shl
or
xor
xor
xor
xor
mov
mov
jmp
mov
add
mov
mov
mov
mov
mov
mov
movzwl
cltd
shld
xor
mov
mov
shl
mov
mov
xor
mov
cmp
jne
mov
cmp
jne
movl
mov
movl
mov
movl
mov
movl
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
add
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
xor
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
add
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
or
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
shl
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
add
mov
mov
shrd
xor
shr
mov
mov
shl
mov
xor
or
mov
add
shrd
xor
shr
mov
mov
xor
or
mov
or
mov
mov
shl
shl
mov
mov
xor
xor
mov
mov
xor
shrd
shr
or
xor
or
mov
mov
mov
mov
xor
shl
xor
mov
mov
mov
mov
xor
xor
shrd
or
shr
mov
mov
or
mov
cmp
jne
cmp
jne
jmp
mov
mov
mov
mov
mov
xor
shl
mov
mov
xor
mov
mov
xor
xor
shrd
or
shr
mov
mov
or
mov
mov
push
pushl
push
push
call
mov
mov
shrd
shr
shr
xor
push
xor
mov
mov
mov
push
push
push
call
shld
shl
mov
or
xor
or
xor
xor
mov
mov
mov
mov
mov
mov
shl
xor
mov
mov
mov
xor
xor
shrd
shr
or
xor
or
mov
mov
mov
mov
xor
shl
mov
mov
xor
mov
mov
xor
xor
mov
shrd
or
shr
or
cmp
jne
cmp
je
pushl
pushl
pushl
push
push
call
pop
leave
ret
push
mov
sub
push
movl
movl
movl
push
movl
mov
mov
push
push
push
call
mov
mov
or
or
add
adc
push
push
push
push
call
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
imul
mov
mov
xor
mov
mov
xor
mov
mov
and
xor
mov
sub
mov
sub
mov
imul
sub
mov
movl
movl
mov
mov
or
mov
imul
mov
movl
movl
movl
mov
mov
or
xor
div
mov
mov
sub
mov
xor
div
mov
xor
pop
mov
movl
movl
movl
mov
mov
sub
mov
div
mov
or
mov
sub
mov
mov
movl
movl
mov
mov
xor
lea
xor
leave
ret
push
mov
sub
push
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
xor
mov
div
mov
mov
mov
xor
mov
xor
mov
mov
or
lea
mov
xor
mov
and
xor
mov
div
mov
xor
sub
mov
sub
add
mov
mov
and
xor
div
mov
mov
imul
sub
add
cmp
ja
push
movl
movl
movl
mov
mov
add
xor
div
mov
mov
imul
imul
lea
mov
mov
mov
mov
mov
mov
mov
mov
xor
imul
lea
mov
mov
or
lea
mov
xor
mov
and
xor
mov
div
mov
mov
sub
mov
sub
add
mov
mov
and
xor
div
mov
imul
sub
add
cmp
jbe
pop
pop
pop
leave
ret
push
mov
sub
push
xor
xor
mov
sub
xor
push
push
movl
movl
mov
and
movl
movl
mov
mov
and
sbbl
mov
xor
inc
and
and
add
cmpl
jle
xor
sub
jmp
pushl
call
xor
mov
movl
movl
mov
cmpl
jb
xor
jmp
pushl
call
xor
sub
mov
imul
xor
mov
movzbl
sub
mov
div
mov
xor
or
sub
xor
sub
mov
cmpl
jl
sbb
jmp
push
pushl
pushl
call
movl
movl
movl
movl
movl
movl
sbbl
mov
xor
or
adc
mov
sub
imul
xor
add
mov
sub
or
add
or
and
cmpl
jge
xor
xor
mov
and
and
jmp
push
call
sub
mov
sub
add
mov
mov
orl
sub
or
add
cmpl
jg
mov
sbb
mov
adc
jmp
pushl
call
mov
xor
div
xor
mov
xorl
sub
mov
andl
add
sbbl
mov
movl
movl
not
movl
or
mov
sbb
xor
and
add
add
mov
xorl
xor
subl
div
and
mov
or
sub
cmpl
jl
jmp
push
push
push
push
call
mov
movl
movl
movl
movl
mov
mov
orl
xor
cmpl
ja
jmp
pushl
pushl
push
pushl
push
pushl
call
xor
push
pop
div
mov
xor
div
mov
or
cmpl
jle
or
jmp
pushl
push
push
push
push
call
sub
mov
movl
mov
mov
xor
sbbl
div
cmpl
jg
jmp
push
push
call
imul
xor
xor
imul
xor
mov
movl
movl
movl
mov
and
mov
orl
xor
adcl
div
mov
imul
add
xor
and
mov
sbbl
sub
mov
sbbl
movl
mov
mov
sbb
and
xor
and
sub
or
cmpl
ja
jmp
push
pushl
call
xor
mov
movl
movl
movl
mov
and
or
add
xor
add
or
andl
or
dec
sub
cmpl
jg
inc
mov
sub
jmp
pushl
call
mov
movl
movl
movl
and
mov
shr
sub
cmpl
ja
mov
and
jmp
push
push
call
xor
mov
lea
push
call
mov
or
or
mov
add
or
add
and
lea
adc
mov
and
movl
movl
movzwl
adc
movl
sub
movl
mov
sbb
mov
movl
subl
movl
movl
mov
mov
sub
imul
movl
mov
orl
mov
and
sub
mov
lea
adc
mov
mov
cmpl
jbe
sub
adc
jmp
push
push
pushl
pushl
call
mov
mov
imul
and
imul
or
mov
lea
mov
movzbl
xor
movl
movl
movl
and
movl
or
mov
mov
mov
sub
or
mov
mov
andl
xor
xorl
xor
adcl
mov
subl
call
xor
or
or
mov
mov
mov
mov
cmpl
jle
xorl
jmp
pushl
pushl
push
call
mov
xor
xor
mov
call
or
cmpl
jle
jmp
push
push
pushl
call
or
mov
mov
xor
xor
mov
call
or
mov
cmpl
jb
jmp
push
call
mov
mov
mov
xor
xor
mov
mov
addl
mov
mov
mov
andl
call
mov
adcl
or
mov
or
subl
push
adcl
push
andl
push
addl
push
addl
call
mov
mov
cmp
movl
jne
mov
mov
xor
xor
mov
call
xor
mov
mov
sub
mov
adc
mov
addl
xor
xor
andl
mov
call
or
movl
or
add
mov
adc
mov
xorl
xor
xor
mov
adcl
call
sub
mov
mov
xor
mov
mov
mov
sbb
mov
mov
xor
subl
xor
mov
mov
xorl
mov
decl
call
adcl
or
movl
mov
andl
or
push
subl
push
push
addl
push
xorl
call
mov
movl
jmp
jmp
cmpl
jg
add
jmp
push
call
lea
mov
mov
movl
mov
xor
cmpl
ja
jmp
push
call
shr
mov
xor
shl
or
mov
mov
mov
mov
mov
mov
movl
xor
xor
mov
sbbl
call
neg
mov
mov
adcl
mov
xorl
mov
andl
xor
adcl
xor
mov
movl
call
or
and
or
cmpl
jge
orl
movzbl
xor
jmp
push
push
push
call
mov
mov
xor
xor
movl
mov
subl
call
sbb
mov
sub
mov
xorl
mov
mov
subl
xor
subl
xor
mov
mov
mov
mov
incl
mov
call
sbb
mov
addl
or
sub
mov
or
push
subl
push
addl
push
push
sbbl
call
mov
cmp
movl
je
cmpl
jbe
jmp
push
push
call
mov
mov
xor
xor
mov
call
mov
mov
cmpl
ja
jmp
push
pushl
push
call
mov
mov
xor
xor
mov
call
or
or
sbbl
mov
imul
cmpl
jle
not
decl
jmp
push
pushl
push
pushl
push
pushl
call
add
mov
mov
mov
jmp
movl
jmp
cmpl
jb
xorl
jmp
push
call
mov
mov
xor
xor
mov
call
mov
xor
mov
mov
mov
xorl
xor
addl
xor
adcl
mov
call
subl
or
or
adc
mov
mov
xor
adcl
xor
mov
call
adc
mov
cmpl
jb
jmp
pushl
call
mov
mov
mov
xor
xor
mov
mov
mov
orl
call
or
or
mov
or
push
push
negl
push
push
subl
call
movl
mov
jmp
movzbl
adc
mov
mov
and
mov
xor
andl
xor
movl
mov
addl
call
add
mov
mov
mov
mov
sub
mov
cmpl
ja
movl
jmp
pushl
push
call
mov
xor
xor
mov
call
or
or
mov
movl
jmp
mov
cmpl
jl
jmp
pushl
push
push
call
mov
xor
xor
mov
call
mov
mov
sub
mov
xor
or
or
mov
xor
xor
subl
mov
call
xor
or
xorl
or
xor
mov
mov
add
mov
xorl
xor
sbb
mov
sub
sub
sbb
mov
xor
xor
or
xor
movzwl
and
add
cmpl
jge
jmp
push
call
mov
movl
movl
movl
movl
movl
movl
and
movl
xor
movl
cmpl
jl
mov
mov
and
adc
jmp
pushl
pushl
pushl
push
pushl
pushl
push
push
call
mov
add
mov
sub
cmpl
jbe
jmp
push
push
push
push
call
xor
push
pop
div
mov
xor
add
mov
xor
mov
xor
div
dec
or
sbb
mov
cmpl
jg
orl
jmp
pushl
pushl
call
xor
mov
sub
mov
mov
sub
cmpl
jle
xor
jmp
push
push
pushl
call
mov
xor
mov
div
mov
xor
sbbl
div
orl
mov
sub
mov
mov
add
lea
mov
movl
movl
movl
movl
movl
movl
movl
mov
or
mov
xor
div
mov
xor
div
mov
lea
mov
mov
sub
mov
xor
mov
div
mov
imul
add
xor
mov
add
mov
and
xor
mov
mov
add
add
mov
movl
movl
movl
movl
movl
movl
movl
mov
mov
imul
imul
mov
imul
mov
sub
add
mov
and
mov
sub
imul
mov
mov
or
sub
xor
mov
div
xor
mov
mov
add
add
mov
andl
jmp
mov
inc
mov
mov
mov
cmp
je
mov
mov
mov
add
mov
mov
mov
mov
mov
movl
movl
movl
movl
lea
mov
mov
movzwl
xor
movzwl
sar
mov
movzwl
xor
movzwl
shl
or
movzwl
mov
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movzbl
push
lea
push
call
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
add
mov
mov
cmp
je
mov
mov
movzwl
xor
movzwl
sar
mov
mov
movzwl
xor
movzwl
shl
or
movzwl
mov
mov
mov
movzwl
xor
movzwl
sar
mov
mov
movzwl
xor
movzwl
shl
or
mov
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
or
je
lea
mov
mov
xor
mov
call
mov
mov
mov
xor
mov
call
or
or
xor
xor
mov
mov
mov
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movsbl
cmp
je
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
movsbl
cmp
je
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movsbl
cmp
jne
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
add
mov
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
cmpl
je
mov
mov
movzwl
mov
mov
mov
jmp
jmp
cmpl
jne
xor
jmp
mov
add
mov
movl
cmpl
je
cmpl
je
mov
shl
mov
movl
sub
mov
movl
mov
cmp
je
mov
mov
mov
mov
mov
mov
mov
inc
mov
jmp
movl
push
jmp
push
mov
sub
push
movl
movl
movl
mov
mov
add
xor
mov
lea
mov
add
mov
movl
movl
mov
mov
add
xor
div
mov
xor
push
sub
imul
xor
lea
mov
movl
movl
movl
mov
mov
shr
sub
mov
imul
div
xor
or
xor
mov
movl
movl
movl
mov
mov
or
sub
or
mov
lea
mov
movl
movl
mov
mov
add
imul
xor
and
mov
movl
movl
mov
mov
and
sub
add
mov
movl
movl
mov
add
pop
div
mov
sub
add
imul
mov
movl
movl
movl
movl
movl
movl
mov
mov
mov
sub
mov
sbb
mov
mov
add
mov
adc
mov
or
or
add
mov
adc
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
or
mov
sub
mov
imul
mov
sub
imul
xor
add
xor
push
mov
add
imul
mov
div
mov
lea
push
mov
mov
mov
mov
push
push
push
push
call
mov
mov
xor
sub
and
xor
mov
mov
lea
push
mov
push
pop
xor
div
mov
sub
add
and
lea
call
mov
mov
imul
mov
sub
add
mov
xor
sub
cmp
jne
mov
mov
sub
mov
sub
add
xor
xor
lea
mov
push
mov
and
xor
imul
mov
div
push
mov
add
push
mov
mov
imul
and
mov
imul
mov
xor
pushl
call
mov
mov
lea
mov
incl
mov
mov
xor
shld
shl
mov
mov
xor
xor
cmp
jne
cmp
jne
mov
mov
jmp
lea
mov
mov
mov
mov
mov
sub
mov
mov
mov
sub
mov
movl
movl
mov
mov
mov
mov
pushl
pushl
pushl
pushl
pushl
push
push
pushl
mov
call
mov
mov
pushl
call
mov
push
add
push
push
call
mov
jmp
mov
mov
pop
leave
ret
push
mov
and
sub
push
push
lea
mov
mov
mov
mov
sub
sbb
mov
orl
orl
lea
push
lea
push
call
mov
mov
pushl
mov
pushl
mov
pushl
pushl
pushl
pushl
pushl
call
pop
pop
mov
pop
ret
push
mov
and
sub
push
push
push
mov
pushl
pushl
call
test
je
movl
movl
movl
push
movl
adc
mov
andl
mov
andl
push
addl
push
push
adcl
call
push
subl
push
xorl
and
sbbl
and
push
push
orl
call
xor
xor
and
mov
cmpl
jbe
and
jmp
call
mov
xor
or
mov
xor
or
notl
mov
xorl
movl
movzbl
and
mov
movl
add
movl
movl
sub
movl
adc
movl
cmpl
jb
adcl
jmp
pushl
push
push
push
call
mov
mov
mov
mov
or
mov
or
mov
mov
sbb
mov
adcl
sub
mov
movl
sbb
mov
xor
xor
subl
and
sbbl
and
cmp
movl
jne
movl
cmp
movl
jne
sub
movl
sbbl
movl
adc
movl
cmpl
jl
sbbl
xor
jmp
push
push
pushl
pushl
push
pushl
call
movl
movl
mov
mov
sub
adc
mov
subl
imul
adcl
and
negl
imul
mov
addl
pushl
imul
incl
xor
mov
adc
mov
sbbl
div
xor
mov
adcl
xor
sbb
mov
sub
or
xor
sbbl
pushl
addl
pushl
call
andl
pushl
call
andl
movl
movzbl
sub
movl
cmpl
jge
negl
jmp
pushl
push
push
push
call
movl
movl
movl
movl
mov
mov
sub
mov
mov
add
mov
adc
cmpl
jge
and
jmp
pushl
push
pushl
push
pushl
push
call
mov
add
adc
and
mov
and
orl
mov
movl
decl
movl
addl
movl
xorl
movl
subl
dec
cmp
jne
movzwl
or
movl
mov
xorl
mov
movl
addl
mov
call
xor
lea
mov
mov
sub
sub
mov
lea
adc
mov
mov
cmpl
jbe
jmp
pushl
push
push
call
mov
mov
mov
xor
shl
shr
or
xor
mov
add
mov
or
mov
and
mov
xor
or
xor
or
sub
sub
mov
cmpl
ja
andl
jmp
push
pushl
pushl
call
mov
mov
shrd
shr
mov
mov
subl
xor
sbbl
xor
xorl
or
cmpl
ja
subl
jmp
push
push
pushl
push
pushl
pushl
call
mov
push
pushl
lea
push
shl
call
adcl
lea
subl
push
mov
mov
andl
lea
andl
push
adcl
mov
subl
lea
notl
mov
mov
orl
mov
push
xorl
call
xorl
push
addl
push
pushl
addl
call
mov
cmpl
ja
mov
xor
jmp
push
pushl
push
push
push
push
call
mov
mov
mov
shr
shl
or
mov
mov
sub
sub
mov
xor
xor
mov
or
xor
mov
lea
mov
cmpl
jle
adc
jmp
pushl
push
push
call
lea
mov
mov
sub
lea
xor
sbb
movl
movl
mov
sub
movl
movl
orl
mov
adcl
mov
sub
add
mov
mov
movl
adc
xor
cmpl
jb
and
jmp
push
push
push
call
xor
and
mov
and
mov
movl
movl
movl
movl
sbb
movl
add
movl
andl
mov
sub
mov
adc
mov
cmpl
jl
and
jmp
push
call
mov
push
push
or
or
push
addl
push
xorl
call
mov
negl
mov
sub
mov
movl
sbb
mov
mov
cmp
jne
cmp
je
and
movl
movl
movl
xor
add
mov
sub
xor
movl
mov
mov
sub
xor
mov
mov
mov
cmpl
jb
jmp
pushl
pushl
pushl
push
pushl
call
mov
add
adc
xor
xor
and
mov
and
mov
movl
movl
movl
and
movl
sub
movl
cmpl
jl
add
jmp
pushl
call
movl
movl
movl
mov
mov
push
push
xor
adcl
xor
push
push
call
addl
mov
andl
mov
push
push
push
sbbl
push
call
cmpl
jl
subl
jmp
call
mov
mov
push
push
push
push
andl
call
mov
sbb
mov
mov
mov
andl
add
movl
mov
adc
mov
cmp
movl
jne
movl
cmp
movl
je
xor
mov
xor
mov
addl
xor
adcl
shld
mov
and
shl
mov
mov
sbb
mov
sbbl
xor
subl
xor
mov
movl
cmp
movl
jne
movl
cmp
je
mov
mov
cmp
je
cmpl
jl
sub
jmp
pushl
call
mov
mov
mov
shl
xor
mov
mov
cmpl
jle
and
jmp
pushl
push
push
call
mov
xor
xor
shrd
xor
shr
or
or
mov
movl
mov
movl
cltd
movl
cmp
movl
jne
cmp
movl
jne
movzwl
add
movl
cmpl
jge
mov
add
jmp
push
push
call
movl
mov
mov
mov
xor
orl
shld
adcl
shl
movl
mov
mov
xor
sbbl
xor
mov
cmp
jne
movl
cmp
movl
jne
movl
mov
mov
shrd
shr
mov
mov
mov
mov
mov
shl
mov
xor
xor
or
cmp
jne
mov
mov
mov
mov
mov
mov
movzwl
mov
and
mov
or
mov
add
or
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
or
mov
or
mov
sub
mov
sub
mov
cmp
jbe
mov
mov
mov
mov
movzwl
mov
or
mov
sub
mov
or
imul
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
xor
mov
imul
mov
and
mov
and
mov
cmp
ja
mov
mov
shrd
xor
mov
shr
mov
xor
or
push
push
shl
push
lea
push
lea
push
call
pushl
pushl
pushl
pushl
call
mov
mov
mov
mov
shrd
shr
shl
xor
mov
xor
or
mov
mov
mov
mov
shrd
xor
mov
shl
shr
mov
xor
or
mov
mov
mov
mov
mov
cmp
jne
mov
mov
mov
cmp
jne
movb
movb
movb
movb
mov
mov
or
sub
mov
sub
movzbl
movzbl
cltd
idiv
movzbl
or
mov
movb
movb
movb
movb
movb
mov
mov
or
and
mov
imul
mov
movzbl
movzbl
and
mov
movzbl
cltd
idiv
mov
cmp
je
lea
push
lea
call
cmp
jne
cmp
jne
xor
jmp
xor
inc
jmp
mov
mov
mov
mov
add
adc
mov
mov
jmp
mov
push
push
lea
push
call
mov
push
pushl
lea
push
call
mov
mov
mov
mov
mov
mov
mov
lea
mov
add
movl
movl
mov
and
add
and
sub
and
mov
movl
mov
mov
or
add
cmp
je
mov
mov
mov
xor
shld
shl
xor
xor
cmp
jne
cmp
je
mov
mov
mov
mov
xor
shr
shl
or
xor
shld
shl
xor
xor
cmp
jne
cmp
je
mov
cltd
mov
mov
cltd
shld
shr
xor
shl
or
or
mov
mov
xor
xor
mov
cmp
jne
cmp
je
pushl
pushl
mov
mov
pushl
mov
call
mov
mov
mov
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
mov
pop
ret
movl
cmp
movl
jae
movl
cmp
jae
shld
movl
shl
ret
mov
addl
xor
and
shl
ret
xor
xor
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
and
and
or
mov
sub
mov
mov
sub
add
add
mov
xor
cmp
jne
mov
mov
xor
div
push
push
push
xor
mov
mov
mov
mov
mov
imul
mov
div
mov
sub
xor
shl
imul
sub
xor
mov
mov
add
mov
add
mov
mov
mov
xor
and
mov
imul
mov
sub
or
mov
pop
xor
pop
pop
cmp
je
mov
jmp
mov
mov
sub
or
imul
add
jmp
movl
movl
movl
mov
mov
add
imul
mov
or
xor
mov
div
xor
leave
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
xor
sub
and
sub
push
movl
movl
movl
movl
mov
mov
imul
mov
imul
xor
div
mov
mov
push
shr
and
xor
mov
sub
mov
mov
mov
and
imul
mov
imul
add
mov
sub
mov
mov
add
xor
pop
div
mov
push
and
sub
xor
add
mov
mov
and
imul
mov
imul
or
xor
pop
sub
mov
mov
or
mov
or
mov
add
or
mov
or
lea
cmp
jbe
pop
leave
ret
negl
subl
movl
cmpl
movl
je
cmpl
jbe
xor
jmp
push
pushl
pushl
pushl
push
push
push
pushl
push
push
push
push
pushl
push
call
add
mov
mov
pop
pop
pop
leave
ret
mov
mov
ret
orl
mov
mov
notl
or
mov
movl
jne
mov
sbbl
mul
ret
xorl
push
mul
and
mov
add
mov
mull
add
mov
mul
add
pop
ret
incl
push
mov
sbb
push
mov
andl
or
movl
jne
mov
mov
sub
imul
mov
mov
xor
div
andl
mov
and
mov
movl
div
not
mov
jmp
and
mov
andl
mov
movzbl
xor
mov
cmpl
jge
jmp
pushl
pushl
call
mov
shr
rcr
shr
rcr
or
jne
div
mov
mull
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
xor
mov
pop
pop
ret
