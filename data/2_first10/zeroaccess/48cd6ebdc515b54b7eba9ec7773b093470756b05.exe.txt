push
mov
sub
xorl
push
subl
push
xor
andl
inc
push
sbbl
push
adcl
call
test
movl
je
xor
movl
jmp
push
sbb
mov
push
andl
push
sbbl
call
movl
test
movl
jne
push
adcl
push
call
sbbl
test
jne
xorl
push
adcl
push
push
call
addl
test
movl
je
xor
movl
jmp
sbb
movl
and
mov
mov
sub
mov
mov
sub
movl
sbb
lea
mov
adc
lea
xor
or
and
mov
sbb
mov
mov
mov
sub
sub
mov
mov
mov
movzbl
add
mov
xor
andl
mov
add
mov
movl
mov
cmp
movl
jne
mov
mov
mov
xor
add
addl
mov
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jne
pushl
push
call
cmpl
jne
xor
add
inc
mov
jmp
mov
andl
mov
inc
mov
cmpl
jne
push
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
and
xor
movzbl
sub
mov
add
movl
cmpl
je
cmpl
jne
push
push
call
mov
dec
mov
jmp
mov
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
pushl
call
cmpl
jb
mov
mov
adcl
mov
andl
xor
or
inc
mov
cmpl
jne
pushl
push
pushl
call
cmpl
jne
xor
xor
inc
mov
cmpl
jb
movl
cmpl
je
cmpl
jne
call
xor
or
dec
mov
jmp
sub
push
or
mov
andl
mov
inc
mov
cmpl
jne
call
cmpl
jne
xor
xor
inc
mov
cmpl
jb
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
push
pushl
push
pushl
call
jmp
adcl
mov
sub
mov
movl
cmpl
je
cmpl
jne
pushl
push
call
cmpl
jne
mov
dec
mov
xor
or
dec
mov
jmp
mov
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jne
push
push
push
pushl
call
jmp
mov
xor
mov
movl
movl
andl
mov
mov
xor
or
and
mov
sbbl
xor
andl
xor
subl
add
sbb
mov
xorl
xor
xor
orl
add
lea
notl
mov
movl
cmp
ja
jmp
mov
mov
sub
and
mov
mov
subl
xor
lea
orl
push
subl
mov
andl
xor
xorl
lea
orl
push
orl
mov
andl
pushl
xorl
call
addl
mov
or
mov
neg
xor
sub
lea
mov
xor
mov
xor
addl
xor
adcl
add
mov
xor
lea
movl
mov
movl
cmp
movl
jbe
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jb
mov
sbb
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
push
push
push
pushl
call
cmpl
jb
mov
sub
mov
andl
mov
inc
mov
cmpl
jne
call
cmpl
jb
add
mov
orl
mov
sub
negl
xor
movl
mov
mov
movl
mov
movl
cmp
jne
xorl
lea
adcl
mov
xorl
lea
subl
mov
mov
test
movl
je
xorl
mov
mov
mov
adc
mov
not
mov
mov
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jb
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
jmp
mov
negl
mov
sbb
cltd
adcl
mov
movl
cmpl
je
cmpl
jne
pushl
push
push
call
xor
or
dec
mov
jmp
movl
cmpl
je
cmpl
jne
push
push
call
xor
xor
dec
mov
jmp
and
mov
add
inc
adc
movl
cmpl
je
cmpl
jne
pushl
push
pushl
call
xor
xor
dec
mov
jmp
movl
cmpl
je
cmpl
jne
push
push
pushl
call
mov
dec
mov
jmp
andl
sbb
xor
xor
mov
adc
mov
mov
mov
xor
dec
add
mov
mov
adcl
orl
xor
addl
mov
mov
xor
mov
movl
cmp
jne
movl
mov
cmp
je
mov
mov
mov
xor
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
xor
mov
mov
mov
add
jmp
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
pushl
mov
pushl
add
mov
mov
pushl
call
mov
mov
mov
jmp
mov
mov
xor
add
cmp
jne
mov
mov
mov
xor
add
cmp
jne
push
mov
xor
add
push
push
pushl
pushl
call
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
mov
movl
mov
xor
add
mov
mov
mov
mov
mov
mov
push
pop
sub
add
movl
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
lea
mov
mov
xor
add
mov
lea
push
mov
xor
add
push
mov
push
pushl
call
mov
mov
mov
mov
xor
mov
add
jmp
lea
mov
mov
sub
mov
mov
mov
mov
movl
mov
movl
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
ja
mov
mov
mov
sub
xor
xor
add
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
mov
mov
movl
movl
mov
mov
xor
add
jmp
mov
mov
xor
add
imul
mov
movb
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
jmp
mov
mov
xor
lea
lea
xor
cmp
jne
mov
mov
mov
xor
mov
xor
mov
xor
mov
mov
xor
mov
mov
mov
xor
add
mov
mov
xor
add
mov
lea
mov
lea
mov
mov
test
je
movl
movl
movl
movl
call
mov
mov
mov
mov
mov
mov
mov
mov
cltd
mov
mov
add
adc
andl
xor
mov
mov
mov
mov
xor
add
mov
adcl
xor
mov
mov
xor
mov
cmp
jne
mov
cmp
je
mov
mov
mov
xor
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
xor
mov
mov
mov
add
mov
mov
mov
xor
mov
add
xor
add
adc
xor
xor
xor
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
leave
ret
xor
andl
inc
ret
push
mov
sub
andl
mov
inc
mov
cmpl
jne
call
cmpl
jne
mov
inc
mov
cmpl
jb
movl
cmpl
je
cmpl
jne
call
mov
dec
mov
jmp
movzbl
sbb
mov
andl
mov
mov
sub
mov
movl
mov
andl
mov
inc
mov
cmpl
jne
push
push
push
push
push
push
push
call
cmpl
jb
push
mov
xor
movl
cmpl
je
cmpl
jne
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
and
mov
push
mov
add
cmp
je
mov
mov
xor
xor
add
add
adc
xor
mov
push
xor
xor
mov
add
adc
xor
xor
cmp
jne
cmp
je
jmp
mov
mov
mov
xor
add
mov
imul
mov
xor
add
mov
mov
mov
mov
xor
xor
add
adc
lea
xor
xor
xor
mov
add
adc
xor
xor
cmp
jne
cmp
jne
mov
pop
pop
pop
leave
ret
push
mov
push
and
movl
adc
mov
addl
mov
add
adcl
xor
movl
cmp
movl
jne
movl
cmpl
je
cmpl
jne
push
push
pushl
pushl
call
mov
dec
mov
jmp
mov
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
push
push
call
jmp
mov
add
mov
mov
mov
xor
push
mov
mov
add
cmp
pop
je
mov
jmp
mov
xor
add
jmp
mov
xor
add
leave
ret
push
mov
sub
push
addl
push
adcl
push
adcl
push
lea
orl
push
push
subl
call
push
call
and
movl
andl
mov
inc
mov
cmpl
jne
pushl
push
push
push
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
movl
cmpl
je
cmpl
jne
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
movl
mov
andl
xor
add
inc
mov
cmpl
jne
push
call
cmpl
jb
mov
sbb
mov
xor
mov
or
mov
mov
decl
add
andl
mov
xor
xor
adc
mov
test
movl
je
sub
mov
mov
or
mov
andl
mov
imul
orl
mov
add
xchg
mov
orl
sub
mov
mov
or
mov
movl
cmpl
je
cmpl
jne
pushl
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
xor
add
mov
sbb
mov
xor
or
add
orl
mov
movl
cmpl
je
cmpl
jne
pushl
push
pushl
call
mov
dec
mov
jmp
sub
mov
mov
xor
xor
add
mov
sbb
mov
mov
xor
adc
add
mov
sub
movl
lea
orl
xor
subl
xor
cmp
movl
je
mov
andl
xor
add
movl
cmp
jne
addl
pushl
call
mov
mov
xor
xor
xor
add
sub
or
mov
add
xor
mov
add
movl
cmp
movl
je
addl
pushl
pushl
negl
call
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
xor
mov
adc
jmp
rcrl
mov
jno
sti
inc
scas
dec
imul
jp
or
jp
sub
and
and
imul
xor
fsub
push
dec
imul
pusha
insl
pop
iret
pop
dec
and
jg
jo
jg
mov
fdivr
push
jg
in
cmp
mov
mov
mulps
fldl
push
cli
sbb
imul
adc
cmpsb
jmp
enter
cli
js
arpl
cwtl
pop
mov
repz
cmp
jae
fisubrl
push
jecxz
mov
mov
in
push
dec
or
repz
rolb
push
push
movsl
stc
push
fimuls
mov
xor
int3
pminsw
dec
ss
and
insb
das
ss
hlt
xor
iret
jl
sbbb
arpl
jmp
scas
emms
pop
add
andb
aaa
cltd
jge
dec
std
mov
cmpb
js
je
xor
fimuls
mov
gs
or
aad
rcr
sbb
dec
int
repnz
ret
movsl
into
je
idiv
sub
lcall
jp
add
ss
jle,pt
xchg
mov
or
jne
sarl
in
xchg
out
mov
dec
shll
hlt
pop
cmpsl
shll
ret
les
sbb
xchg
mov
adc
xchg
cmp
and
repnz
mov
sub
add
push
jge
cmp
cmpsb
dec
push
add
in
xchg
inc
sbb
xchg
jge
sub
rcl
test
pop
hlt
pop
xor
in
and
sbb
imul
in
mov
loopne
sub
jae
add
mov
aaa
xchg
cmp
adc
sub
and
dec
jae
dec
daa
les
out
xchg
cs
stos
or
and
in
nop
out
mov
scas
mov
xchg
cmc
sbb
mov
xchg
xchg
adc
sub
bound
push
jb
jno
popf
jecxz
mov
ds
mov
iret
aas
sub
adc
dec
rorb
and
cltd
icebp
or
fsubs
pop
dec
dec
mov
int3
rclb
clc
pop
rcll
insb
adcb
cld
push
fmulp
das
test
lock
sub
adc
aas
jmp
mov
pop
insl
jge
push
push
xor
in
adc
fcoml
std
imul
and
imul
xor
push
sbb
rol
cmpsb
enter
push
ds
jnp
test
lahf
dec
xchg
xor
pop
jg
push
and
xor
or
and
sub
inc
insl
scas
and
out
add
testb
mov
xor
jne
scas
jmp
mov
pop
aaa
shr
std
mov
pop
jecxz
aad
lods
ret
inc
sbb
pop
xchg
push
add
jp
aaa
ficoms
sbbl
in
pop
lret
das
lds
jb
mov
adc
imulb
mov
fdivs
xor
sbb
les
mov
and
inc
cmpsl
lock
or
lea
idiv
sahf
jle
scas
das
loope
insb
lret
mov
shll
add
dec
mov
rcrl
mov
dec
outsl
ljmp
xchg
jp
mov
mov
pop
push
dec
jmp
mov
lods
sub
test
xchg
sbb
sub
adc
daa
sbbb
movsb
sbb
mov
imul
and
lret
shl
adcb
lods
mov
pop
fisttps
pop
inc
cmp
or
cmc
dec
xchg
mov
js
jecxz
jnp
nop
icebp
test
rcrl
pop
mov
mov
rcll
xchg
or
add
movsb
cmovl
or
fnstenv
int
insl
cmp
mov
mov
xchg
cwtl
leave
loop
mov
jmp
imul
imul
and
sbb
mov
clc
cmp
aaa
mov
int
pop
jnp
push
pop
push
cmpsb
sbb
adc
and
cmp
add
push
sub
and
xor
inc
dec
sbb
lcall
ds
pop
or
fsubs
mov
mov
lret
scas
loopne
push
dec
push
mov
pop
mov
adc
or
pop
cmpsb
or
mov
lods
pop
clc
mov
add
add
scas
sbbl
adc
ficoms
out
movsl
imul
cli
bound
loope
mov
adc
lret
cmp
stos
aaa
faddl
xchg
sub
mov
test
xor
inc
lods
dec
push
xor
mov
xlat
pushf
xor
imul
stos
ret
cltd
psadbw
or
or
std
dec
adc
pushf
sbb
bound
test
nop
push
das
outsb
sti
or
loopne
dec
pop
adc
subb
cmc
ljmp
test
in
js
xlat
ret
sub
in
addl
call
gs
lret
std
ficomps
inc
dec
inc
cmp
inc
lcall
std
sub
add
mov
cli
mov
xorb
mov
or
xor
cmc
xlat
dec
cmp
fbstp
push
in
xlat
sub
roll
sub
scas
mull
add
ja
hlt
jl
cwtl
cli
and
rolb
outsl
leave
in
mov
out
imul
xchg
mov
push
push
push
inc
add
inc
lods
insl
push
pop
cmp
mov
xchg
lahf
xchg
and
pop
sub
or
sub
lret
and
mov
inc
add
dec
pop
push
bnd
rcll
sbb
jae
cli
cwtl
je
sbb
lods
enter
mov
sub
hlt
sub
push
xchg
mov
push
loopne
xchg
pop
aam
pop
jo
or
in
mov
sbb
xchg
mov
lcall
push
sub
and
pop
je
and
mov
add
inc
xchg
and
mov
popf
icebp
push
int
mov
lods
pop
fwait
jae
xchg
sub
adcb
cmpsb
mov
dec
mov
dec
pop
mov
lds
stos
cmp
das
lock
xchg
outsb
stos
idivb
jg
dec
loop
gs
jecxz
imul
xor
push
loope
inc
leave
insb
mov
xchg
xchg
sbb
jp
mov
jae
jmp
test
mov
std
mov
ds
mov
push
js
adc
mov
mov
xor
hlt
hlt
addr16
cmp
stc
or
jbe
sub
dec
push
aas
xor
jmp
cmpsl
jb
out
dec
pop
or
xchg
mov
sub
scas
add
push
dec
jecxz
inc
daa
cmpsl
sub
mov
negb
cmpsb
in
sub
push
out
dec
stos
dec
jae
xor
mov
mov
jnp
mov
dec
stos
loopne
loop
sub
mov
lret
rolb
or
xchg
jl
dec
xorl
jp
sbbb
mov
sub
enter
add
xor
out
es
jge
inc
sub
outsb
fcmovne
mov
inc
das
nop
push
outsl
fwait
sbb
lods
mov
pop
shlb
and
pop
cs
testb
pop
fs
ds
cmp
test
cmpsb
outsb
outsb
xor
inc
jg
sbb
loopne
mov
xor
jns
sarb
out
pop
xchg
cmp
sbb
psubw
bound
add
or
sub
insb
dec
ss
cmp
dec
pop
xor
test
sub
ss
mov
dec
jae
sarl
dec
mov
adcb
out
into
iret
inc
mov
and
in
in
pushf
mov
outsl
inc
lret
dec
adc
dec
cmc
or
pop
jle
xchg
or
notl
inc
test
lods
enter
incb
cmpsl
test
mov
fisttps
mov
jmp
pusha
gs
repz
add
sub
add
out
push
push
lea
xchg
add
ds
lea
in
xor
add
sar
sub
pop
mov
dec
xchg
cmc
icebp
aas
xlat
insl
jp
and
out
outsl
jnp
pop
stc
jmp
sarl
aad
pusha
fistps
sbb
ljmp
sub
lods
loop
pop
aaa
leave
xchg
mov
dec
dec
jmp
adc
ret
cld
xchg
roll
ljmp
negl
outsl
pusha
ret
test
or
mov
jbe
xchg
add
ds
mov
hlt
fs
inc
jp,pn
xchg
dec
xchg
ja
pop
and
fmul
dec
shrl
add
push
imul
dec
ljmp
jbe
add
mov
cmp
fnstsw
inc
dec
out
push
xchg
dec
js
mov
cli
fdivrl
adc
xchg
adc
cmp
sub
movsl
iret
dec
loop
lods
call
add
hlt
push
movl
push
out
repz
call
in
jmp
cltd
ret
cmp
jp
sbb
push
sbb
scas
imul
inc
icebp
icebp
fistl
mov
push
out
aad
test
xor
mov
inc
xor
mov
mov
push
imull
adc
pop
push
fcomps
pop
dec
bound
addl
int3
clc
pop
dec
test
push
jns
push
jp
cld
out
mov
pop
outsb
xchg
lret
insl
lds
mov
mov
mov
jb
push
jbe
adc
xchg
scas
movsb
shll
add
loopne
sbbl
enter
test
cmpsb
test
adc
xchg
test
test
or
fistpl
int3
mov
lock
pop
pop
shrl
seto
and
cmpl
jle
cli
fstpt
pop
fidivrs
inc
neg
shlb
jns
ljmp
adc
nop
add
test
mov
and
push
lds
clc
cwtl
test
jecxz
lock
ret
add
add
movsb
xchg
push
push
mov
dec
js
faddl
hlt
or
xor
daa
fxch
jecxz
xchg
outsb
std
pop
movl
or
xor
xchg
mov
push
shll
dec
scas
pop
xchg
push
ret
push
jle
lods
addr16
mov
add
fisubrs
xor
bound
pop
in
push
stos
scas
cmpsl
out
mov
aad
subb
inc
std
push
or
cltd
ss
dec
pop
sbb
sbb
fbld
aad
out
ret
repz
xor
popa
test
inc
inc
fisubrl
adc
incb
xorl
leave
icebp
mov
xor
jno
imul
pop
pop
int
getsec
popf
fcmovnb
or
punpcklwd
push
in
mov
andb
in
add
add
jmp
cli
xchg
adc
mov
dec
aas
inc
push
mov
xchg
in
mov
icebp
leave
mov
popa
js
ret
pop
mov
mov
sub
dec
vpsrlq
add
leave
and
add
cwtl
std
push
pusha
testb
adc
dec
shrb
xchg
dec
dec
loopne
mov
repz
inc
cwtl
pusha
push
lcall
decb
aam
outsb
jl
out
ficoms
jne
arpl
push
call
sbb
cmp
aas
xchg
cmpsb
push
push
xor
mov
add
inc
iret
sbb
ret
dec
sub
pushf
xor
jmp
stos
mov
dec
xchg
ret
ljmp
shlb
cmpl
sub
push
mov
jno
loope
cmp
cmp
xchg
fs
test
mov
cmpsl
aad
xchg
and
add
sbbl
dec
pop
orl
or
sbb
daa
xchg
rclb
sbb
push
insl
add
fcomp
jb
cmp
lret
in
xchg
leave
pop
scas
popl
sub
cmpb
test
xor
or
jmp
adc
scas
or
sub
loop
daa
sbb
in
shrb
push
jmp
sbbl
les
pop
pcmpgtw
push
lock
das
sub
fsubp
sbb
or
fcomi
call
orps
xor
loop
cli
mov
test
fnsetpm(287
add
or
pop
sbb
sub
mov
xchg
jno
arpl
ficoms
cmp
mov
enter
mov
aas
test
cwtl
pop
jne
and
mov
inc
and
dec
cwtl
mov
lcall
dec
cmpsl
and
leave
or
pusha
pslld
jle
inc
pop
ljmp
aad
shlb
xlat
lahf
imul
adc
int3
xchg
xchg
insl
insl
dec
add
lods
jecxz
adc
iret
imul
cmp
ret
aam
inc
pusha
mov
call
lret
inc
jge
dec
cltd
loopne
pop
and
dec
push
movsl
push
sbb
adc
sub
fildl
fldcw
jnp
xor
arpl
mov
mov
xor
xchg
lahf
dec
mov
dec
cmp
adc
mov
mov
cmp
add
mov
mov
aas
pop
clc
loope
aad
or
inc
sub
cmp
sub
sub
ja
xor
aad
das
nop
mov
fwait
bound
sub
cwtl
xchg
mov
mov
cmp
shlb
sub
jmp
cs
subb
pop
lret
dec
mov
mov
push
or
xchg
iret
lahf
adc
and
cmc
lahf
insl
aas
adcb
lods
mov
jge
incb
imul
push
sub
outsb
divl
js
adc
ljmp
cltd
mov
dec
add
scas
dec
pop
in
leave
dec
push
lahf
lea
aam
into
push
mov
lret
and
xchg
mov
ficomps
cli
pop
pop
pop
in
dec
jge
stos
out
mov
xor
sti
pcmpeqw
and
push
cltd
shll
sbb
push
call
ret
test
popa
fisubs
scas
dec
xchg
mov
mov
roll
std
cmpb
and
test
daa
xchg
push
mov
xchg
push
adc
movsb
bound
xor
mov
or
arpl
xchg
push
fcompl
mov
int3
out
aas
cli
xchg
scas
sub
cmp
sbb
fmull
sbb
lea
incb
pusha
arpl
pop
fadds
lret
xchg
lret
push
pop
cmp
sub
dec
popa
pushf
sbb
mov
dec
in
pop
push
por
arpl
xchg
dec
fwait
mov
pop
sahf
sub
sbb
into
call
es
jmp
pop
ficomps
push
xchg
and
repnz
movsb
xor
out
aas
loopne
int3
xchg
mov
sub
nop
inc
fstpl
jmp
and
scas
add
inc
lret
mov
mov
inc
decl
cli
call
addr16
xchg
ret
call
dec
shr
lods
xor
lods
push
ljmp
or
lret
rolb
enter
ljmp
mov
repnz
js
test
bound
mull
repz
adc
mov
xchg
xor
pop
push
lock
xor
xchg
mov
dec
and
rorb
jne
sub
dec
push
in
daa
push
sbb
jecxz
mov
dec
popf
lds
dec
imul
rcll
fadds
out
pusha
cmp
movsl
adc
loopne
sub
mov
push
int
sub
or
jno
mov
ds
into
sbb
arpl
aad
mov
flds
mov
push
push
js
iretw
test
adc
pop
sub
xlat
in
inc
and
bnd
add
lods
xchg
xchg
xchg
fidivl
dec
push
sub
imul
adc
mov
fmuls
inc
dec
push
shll
jecxz
mov
ret
pop
addr16
inc
push
pusha
pop
adc
pop
jmp
stos
loop
lods
pop
ss
mov
jmp
shl
sarl
sahf
xchg
push
test
fldpi
mov
daa
movsb
addb
outsb
cmc
fcmovnb
out
add
inc
cmp
sti
scas
push
jge
dec
push
mov
pop
es
aad
mov
xchg
sahf
sti
pushf
push
bound
ret
scas
fiaddl
lahf
aad
push
arpl
js
test
push
daa
inc
ds
mov
mov
movsl
lock
sub
rcll
or
aad
lret
mov
mov
mov
icebp
ljmp
out
leave
lods
or
xchg
fstl
push
or
cmc
fisttps
mov
mov
jno
mov
call
inc
lahf
dec
mov
loopne
daa
cmp
xchg
js
cld
pop
fsubl
mov
dec
into
dec
sub
mov
mov
sub
negb
popa
pop
push
xchg
inc
daa
mov
cmp
push
setno
in
out
loop
ljmp
cltd
push
push
mov
push
lret
lret
pop
roll
cmp
sub
push
add
rcrl
mov
lods
cmp
out
cmp
push
ljmp
ds
dec
cli
nop
ja
xchg
inc
lcall
daa
dec
xchg
in
clc
inc
pop
fisttpll
inc
pop
aad
mov
cwtl
outsb
xchg
dec
sub
dec
loop
cmc
aaa
cld
data16
xor
add
mov
fldt
stos
xchg
sti
sbb
lds
lcall
sar
aas
scas
adc
cld
push
mov
aas
push
mov
data16
cmp
nop
pop
jne
jle
xor
es
mov
sub
jo
lea
sub
in
cmp
push
test
stos
and
adc
lcall
jecxz
sub
push
push
cmc
sbb
sub
sbb
or
sub
sub
pop
adc
ficompl
lret
jl
out
dec
adc
sbb
jns
stos
aaa
pusha
out
imul
loop
push
inc
push
mov
aad
bound
test
lds
or
push
call
cmp
lods
xchg
pop
mov
or
or
cmpl
call
popf
stc
jb
adc
test
das
jmp
leave
or
mov
popf
xchg
or
imul
sti
xchg
les
push
inc
test
inc
jle
in
pop
lods
loope
inc
mov
subb
xchg
arpl
aaa
ss
das
xor
add
xor
jnp
iret
push
cld
loope
je
xor
pop
mov
sbb
push
lods
movsl
push
gs
aad
add
inc
adc
loope
push
xchg
or
sub
scas
frstor
hlt
sub
dec
imul
xchg
fisttpl
sbb
cwtl
xchg
addr16
xchg
rcrl
ljmp
xchg
cmp
cmc
inc
jb
dec
cmp
push
fadd
pusha
stos
clc
addl
mov
test
out
js
stc
push
cmp
jbe
xor
pusha
cli
adc
inc
stc
out
jmp
xor
mov
test
xor
out
sub
test
mov
pop
dec
mov
cmp
movl
sbb
in
mov
out
fistl
roll
xchg
xor
mov
je
rcr
sub
sub
jecxz
or
inc
mov
inc
jns
andb
aas
stos
stc
dec
mov
inc
or
arpl
mov
insb
mov
mov
push
mov
fimuls
jg
test
or
dec
xchg
jge
es
scas
mov
jmp
mov
lods
fsubl
add
std
mov
cmpb
jmp
pop
push
sub
cmp
ljmp
jno
and
leave
adc
jg
ja
push
insb
xchg
cs
arpl
lahf
fistps
mov
rorb
bound
ljmp
mov
mov
inc
mov
scas
adcb
lods
push
scas
mov
andl
xor
outsl
jbe
lcall
adc
adc
les
cmp
inc
or
sarl
inc
inc
mov
mov
inc
dec
mov
pop
iret
lods
in
jmp
mov
cmp
insl
add
cmp
icebp
flds
enter
stos
jecxz
in
sub
and
pusha
push
leave
sub
lret
dec
pop
in
ficomps
xchg
and
adc
lret
inc
sti
lock
ret
jp
fnstcw
dec
lods
fsub
mov
adc
mov
cmp
sbb
mov
fwait
enter
lret
cmpsl
mov
jp
xchg
aas
aad
ljmp
and
lahf
or
inc
fcmovb
dec
add
mov
fnstcw
mov
mov
push
mov
or
cmp
jge
scas
mov
adc
xor
add
aaa
lods
pop
push
mov
jp
loope
vpunpcklqdq
jge
cltd
std
adc
or
lea
xchg
mov
les
mov
stos
mov
mov
stos
xchg
in
sub
into
stc
test
rcll
pop
and
pushf
mov
bound
sarl
xchg
sbb
rcl
arpl
lds
mov
push
xor
movsb
pusha
inc
xchg
push
xor
cmp
or
push
push
pop
add
xor
btr
in
pop
sahf
mov
loope
dec
xor
adc
cwtl
movsb
xchg
jecxz
add
data16
out
mov
test
in
insl
mov
dec
pop
mov
dec
out
aam
daa
pop
sbb
in
xchg
mov
aad
mov
cmp
xor
shll
xchg
iret
push
ja
sbb
push
mov
lods
into
lret
inc
mov
rol
mov
pop
xor
push
outsb
lock
imul
push
jle
test
js
shlb
mov
mov
in
shl
outsl
sbb
in
test
popa
pop
jp
mov
daa
xchg
cwtl
push
jne
mov
sub
add
add
lods
and
xchg
pop
cmp
sub
cld
mov
sbb
pop
lcall
xor
push
adc
inc
mov
sbb
jmp
jnp
lods
and
stos
pop
test
in
or
int
icebp
lods
cmp
lds
mov
inc
movsl
fidivrs
dec
hlt
jno
cmc
or
mov
jns
mov
pslld
xchg
xor
addl
adc
lret
stc
mov
daa
mov
cmp
call
mov
mov
out
cltd
inc
sub
push
push
negl
sub
ret
fstl
push
mov
mov
mov
imul
sub
frstor
cwtl
aaa
push
sub
jb
mov
pop
mov
arpl
mov
mov
call
lea
mov
bound
ljmp
jbe
jno
je
inc
add
and
sub
sbb
pop
imul
push
lock
filds
test
xchg
subl
adc
lods
insb
inc
iret
push
into
pop
movsb
rolb
es
les
and
iret
push
mov
mov
jg
fcmovbe
sti
jbe
js,pn
mov
mov
xchg
mov
cld
pop
cmp
imul
and
dec
lahf
lret
dec
fisubrs
adc
dec
sbb
pop
push
xchg
push
jbe
push
mov
in
pop
rorb
pop
xor
shlb
and
and
leave
mov
scas
jle
addb
out
je
jg
mov
es
inc
xorl
addr16
mov
scas
mov
jo
scas
sti
in
es
int
inc
cltd
push
mov
push
push
xchg
call
sub
cltd
xchg
shl
loop
stos
xorb
dec
into
rolb
cli
movsb
jbe
pop
adc
mov
clc
dec
popa
ja
pop
xchg
daa
lock
push
pop
cwtl
xchg
fsubrs
push
flds
pop
xchg
pop
push
cmpsl
ljmp
jbe
and
popf
push
lds
ret
mov
or
into
or
or
push
adc
aaa
inc
decb
fsubs
mov
jecxz
mov
jp
xor
adc
xor
aam
and
add
insb
pop
imul
adc
negb
push
mov
in
lods
dec
fimull
pop
xchg
outsb
add
xlat
stos
imul
insb
adc
lods
pop
lret
dec
mov
xchg
in
dec
push
jg
jle
js
xchg
and
mov
xchg
pop
push
ret
dec
or
outsb
mov
jnp
outsb
dec
push
bound
ret
fistpll
sub
cmc
lret
xchg
adc
mov
sbb
out
jp
rorl
movsb
dec
mov
add
cmpsb
notb
lahf
lcall
test
ljmp
sbb
and
adc
jbe
scas
or
xchg
rolb
lock
or
jno
int
test
sbb
test
or
xor
sub
push
and
mov
hlt
scas
ret
dec
sahf
mov
popf
pop
xchg
testl
ror
xor
or
xor
cmp
pop
adc
mov
sub
into
mov
jp
add
mov
aaa
je
aaa
test
fcmovnu
movsb
cld
out
rcrb
dec
in
out
test
dec
mov
leave
imul
jns
add
insl
jecxz
cmp
and
int
stos
xor
int
push
xor
jb
das
es
jo
cmp
ljmp
push
repz
lahf
adc
fsubrl
adc
cwtl
cmp
mov
add
jp
jns
xchg
add
push
in
orl
sbb
test
out
jns
data16
test
pusha
fdivl
sbb
sbb
push
imul
pop
xor
int
or
lret
mov
inc
test
mov
cs
mov
sbb
adcb
add
out
rolb
and
cmp
and
popf
sub
ret
xchg
fnstsw
int
in
dec
mov
jbe,pt
fcompl
cld
push
fwait
gs
jnp
lcall
xchg
scas
xchg
dec
arpl
or
sub
add
adc
push
cmpsb
in
ret
push
push
test
xor
lahf
jle
mov
cltd
in
and
lcall
std
fdivs
mov
mov
jp
push
in
ret
adc
ljmp
mov
popa
dec
pop
xchg
js
sti
loope
mov
adc
and
xlat
fadd
push
inc
lock
test
bound
cmpsb
lret
addr16
aaa
mov
in
push
cmp
int3
mov
idivb
pushf
jmp
mov
mov
push
inc
aam
lret
out
loop
sbb
jmp
xor
push
or
fdivr
xchg
scas
xchg
fidivrs
ret
cmpsb
int
or
fdivrl
jl
outsb
sub
pop
mov
cmp
pop
dec
add
push
idiv
iret
xrelease
inc
sti
push
ret
in
aam
mov
fdivrl
ja
add
test
lcall
sub
fimuls
jge
insb
cli
sbb
dec
cmc
lods
xchg
ret
mov
stc
sbb
push
mov
sub
adc
fistps
sub
cltd
add
in
inc
fimull
add
out
jecxz
cmpsb
inc
in
push
adc
mov
mov
add
and
jno
mov
sbb
xor
pop
jecxz
stos
mov
push
dec
push
popa
insl
lcall
jb
sbb
aad
lock
inc
xchg
pop
jmp
iret
add
pushf
es
test
subb
div
xchg
lret
test
mov
arpl
into
lret
in
mov
lods
cmc
xchg
int3
dec
xchg
mov
decl
loopne
pop
outsl
jae
jnp
data16
test
nop
test
jbe
xchg
les
adc
jno
fldcw
stos
push
xor
mov
sbbl
jno
ds
cmp
lea
mov
mov
lahf
jg
loope
inc
push
in
adc
repz
fwait
aas
in
add
scas
cmp
aas
pop
movsb
or
dec
mov
ret
fldenv
lcall
jo
stc
sbb
push
pop
mov
pop
nop
inc
mov
sbb
icebp
mov
lret
popl
mov
scas
pusha
push
ret
push
or
stc
xchg
jno
sbb
push
sbb
sub
add
mov
cmpsb
fistps
bnd
nop
es
iret
sbb
sti
int3
push
aas
pushl
or
mov
jno
jle
lds
fistl
mov
jle
cltd
pop
adc
shl
ds
xor
mov
adc
in
sahf
idivb
testl
or
shrl
js
mov
icebp
inc
or
jae
out
dec
add
idivb
cs
dec
xor
daa
pop
pop
sub
lods
pop
sub
cs
jecxz
or
or
loop
xor
shrb
scas
sub
pop
sub
div
pop
xchg
jge
testb
dec
and
mov
mov
sahf
test
sbb
cmp
cmpsb
nop
cld
add
stos
ret
aam
enter
mov
fsubl
cmpsl
add
sub
mov
sbb
sub
mov
ds
es
into
push
jg
or
xchg
les
xor
data16
repnz
loope
cwtl
cld
mov
and
mov
jge
lea
inc
sbb
sbb
pop
push
sub
cmpsl
cmpsb
stos
in
loop
lcall
sahf
loop
cmc
cld
add
adc
add
jg
xor
loop
hlt
push
cmp
adc
pop
loop
dec
fsubrl
xchg
mov
iret
or
xchg
in
and
cs
push
out
push
sarl
push
push
jmp
bound
movsb
mov
fst
jae
jl
push
pop
in
data16
sbb
ljmp
fstps
mov
je
and
or
dec
jle
out
pop
fldenv
xor
jnp
jns
sub
and
push
sbb
pushf
fcmove
adc
jb
stos
hlt
das
movsl
or
jbe
sbbb
mov
inc
push
jb
dec
mov
bound
push
pop
lock
jp
repz
xchg
scas
popa
into
push
iret
inc
scas
pusha
lea
push
push
movsl
es
jno
out
sbb
in
xor
add
adc
shl
dec
lea
pop
mov
xchg
push
push
rol
shr
cmc
pop
mov
cmp
jle
test
inc
scas
es
lock
add
int3
cmpsl
movsl
jbe
gs
ficompl
pop
fwait
andb
sbb
pop
and
addb
mov
aam
dec
add
cld
scas
iret
int3
push
gs
cvttps2pi
sahf
jbe
xor
push
sub
cld
inc
xchg
mov
cmp
cmp
cld
mov
xor
add
cmp
je
mov
sbb
mov
mov
mov
decl
mov
mov
xor
mov
mov
add
mov
or
mov
mov
xorl
add
xor
add
xor
mov
mov
mov
xorl
add
mov
mov
movl
mov
movl
jmp
movl
cmpl
je
cmpl
jne
pushl
pushl
pushl
call
cmpl
jne
xor
add
dec
mov
mov
dec
mov
jmp
mov
xor
mov
addl
add
mov
movzbl
or
mov
mov
adcl
xor
add
cmp
movl
je
jmp
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
je
lea
push
pushl
pushl
call
mov
mov
mov
xor
add
cmp
je
mov
movzwl
mov
mov
mov
jmp
mov
xor
lea
jmp
mov
xor
add
jmp
mov
xor
add
jmp
mov
add
mov
mov
test
je
movl
push
xor
pop
add
push
pop
push
dec
pop
dec
xchg
sub
xchg
dec
mov
imul
sub
mov
mov
mov
jmp
lock
inc
push
mov
mov
fs
push
dec
adc
or
jp
pop
jp
pusha
mov
stos
lods
out
mov
cmp
xor
daa
push
push
mov
or
fcmove
leave
mov
rolb
cltd
dec
fwait
aas
and
cmp
daa
xor
pusha
or
fistl
xchg
es
gs
setnp
jbe
dec
jg
hlt
fsubs
xchg
push
xor
lods
out
add
xor
and
ror
pop
gs
sbb
das
cld
test
sbb
mov
pop
inc
rcl
or
cmp
xchg
fnsave
jp
xchg
imul
jne
jnp
xchg
mov
mov
mulb
pop
lods
cmpsb
jge
sub
xchg
xchg
cld
xor
inc
jge
jne
mov
or
nop
mov
or
jle
les
push
aaa
pop
mov
adc
adc
ret
pop
jbe
add
mov
stc
mov
lcall
xor
and
in
or
mov
xor
stos
mov
fstpl
dec
jbe
fsts
arpl
mov
fs
ja
hlt
xchg
mov
aas
icebp
push
lock
sub
xor
mov
sub
lock
andb
push
sbb
sub
test
rolb
mov
or
std
xchg
std
jae
imul
neg
push
cli
add
cmc
sub
shrb
repnz
ljmp
scas
or
cld
call
inc
das
mov
in
xchg
lods
pop
and
push
adc
pop
jecxz,pt
inc
jbe
jns
push
cmpl
pop
mov
jmp
leave
lcall
in
add
mov
pop
inc
sti
sbb
add
ljmp
sti
shll
fsub
xor
mov
sub
les
mov
shlb
fldl
inc
lods
xchg
inc
or
xor
fidivs
dec
sub
out
cli
in
scas
mov
scas
adcl
fst
sub
pusha
push
mov
mov
jecxz
and
pop
out
je
push
push
stc
icebp
nop
dec
test
ljmp
mov
inc
inc
jno
loop
imul
jl
insb
imul
or
repnz
dec
in
adc
es
jp
push
repnz
push
or
stos
notl
xor
shlb
and
fistpll
fs
push
aas
cmp
mov
addr16
cmpsb
cltd
pop
xor
insb
xchg
nop
loop
stc
jle
out
addr16
enter
mov
repnz
cmp
mov
inc
enter
jmp
jno
add
popf
clc
xor
into
push
lret
fistpll
jae
rcl
imul
into
sar
fsubp
test
jb
add
imul
aaa
xor
aas
mov
xlat
mov
mov
lcall
cmp
cmp
and
xlat
sbb
fldt
adc
outsl
fs
xchg
adc
push
mov
sbb
xchg
add
jecxz
int3
addb
insl
mov
cmp
or
sub
jecxz
jbe
mov
push
lcall
clc
out
push
daa
sbb
and
sbb
dec
mov
cmp
xor
or
js
cmp
pop
pcmpeqb
and
push
or
addr16
int
leave
inc
adc
mov
insb
mov
push
xor
into
add
aaa
mov
aam
ret
mov
mov
adcl
movsb
ds
pop
dec
or
xchg
push
jmp
aas
lods
mov
nop
add
frstor
fwait
pop
cwtl
dec
pushf
decb
iret
notb
adc
pop
sbb
sub
out
or
dec
inc
dec
fadds
mov
and
cwtl
xchg
dec
add
rcrb
xorb
lret
jmp
xor
ret
pop
out
dec
cmp
dec
aaa
stc
rorl
repz
enter
test
in
mov
push
shll
xchg
xchg
outsb
xlat
inc
hlt
aad
repnz
sbb
int3
je
xorl
push
out
dec
idivb
aaa
lds
add
push
mov
lods
add
stos
mov
cwtl
in
ss
mov
gs
cmp
pop
lret
or
push
in
add
mov
test
movsl
std
add
jmp
sub
test
push
popf
clc
push
jecxz
inc
ret
sub
jno,pt
imul
xor
les
arpl
xchg
cs
shll
pusha
aas
jbe
inc
in
or
lret
adc
mov
cmp
ja
fsubp
xchg
add
insb
or
cld
jne
xchg
fisttpll
xchg
in
jnp
sbb
aaa
xorb
mov
orb
cld
mov
test
in
sarl
inc
jp
out
pop
cmp
inc
inc
call
pushf
mov
rcr
dec
in
mov
test
mov
in
and
adc
outsb
mov
xchg
sub
xchg
scas
mov
popf
das
sub
pusha
adc
xor
stos
popf
sub
inc
lret
repz
xor
insl
mov
les
sub
gs
push
pop
cmpsl
mov
cli
mov
ret
bound
imul
xchg
ret
adc
mov
mov
sbb
push
in
mov
push
xchg
cli
lods
iret
or
jo
les
stos
testl
popf
mov
push
int
mov
bswap
aam
dec
cmp
lods
inc
xchg
divl
mov
shll
pop
loopne
jno
rorb
adc
cmp
lret
dec
insl
pusha
out
movsb
inc
adc
mov
jecxz
cs
adc
loope
adc
sahf
negb
inc
adc
imul
stc
bound
inc
mov
pop
push
push
ret
xchg
test
pop
aad
mov
lret
std
cld
jae
sahf
sub
popf
int
sbb
pop
repnz
loop
outsb
pop
mov
jne
loopne
and
jno
jle
insb
push
inc
lret
ja
in
subl
scas
sahf
das
daa
jne
sbb
sbb
lret
push
sbb
lds
mov
aad
lea
mov
or
rcrb
pop
mov
in
pop
ss
ret
mov
inc
mov
ficompl
jo
xchg
mov
call
into
cmc
out
imull
cmc
jo
aaa
sbb
mov
sbb
repnz
insl
cmp
lret
jne
sbb
add
cmp
inc
pop
in
jbe
push
mov
add
jecxz
xor
adc
push
out
enter
jnp
nop
jle
push
sbb
mov
xor
jno
cld
mov
cld
ss
push
mov
sti
add
sub
bound
sub
pop
mov
dec
enter
je
inc
cwtl
and
xchg
daa
xchg
imul
pop
xor
inc
jns
pop
nop
rclb
xchg
dec
leave
add
or
lods
mov
adc
adc
xor
cmc
cwtl
fldcw
pop
push
mov
test
inc
or
es
out
adc
cmp
or
icebp
mov
add
outsb
sbb
pop
inc
das
movsl
pusha
lods
loope
xchg
xor
push
in
outsl
pop
pand
fld
mov
ss
adc
or
out
repnz
push
cmpsb
lcall
add
or
push
data16
and
stos
push
insl
mov
jbe
lock
xchg
je
cmp
mov
ss
adc
in
sub
add
imul
movsl
lret
sub
out
nop
dec
aad
inc
js
jbe
xchg
lret
push
outsl
fwait
cmp
mov
aaa
lret
mov
lahf
inc
mov
jmp
mov
in
shll
sub
pop
je
jecxz
jnp
add
loop
jmp
sar
lods
jns
or
inc
jp
push
popf
icebp
shlb
sbb
xor
sub
lahf
pusha
mov
adc
sub
ret
xchg
in
inc
jb
inc
sbb
out
inc
cmp
pop
cmp
inc
xchg
inc
fs
mov
mov
arpl
test
xchg
jmp
jne
mov
popf
dec
jns
imul
mov
lret
call
stos
test
xchg
jb
adc
adc
xor
mov
adc
fisttpl
cltd
sbb
and
out
jo
pop
or
and
leave
jecxz
fnstsw
imul
jns
pop
mov
pop
xchg
inc
int3
rep
lret
test
enter
mov
xchg
jle
inc
cmp
rcll
or
ja
scas
mov
xchg
mov
gs
xchg
add
les
inc
test
jbe
and
cmp
in
movsb
pop
icebp
das
in
inc
inc
cli
cld
rolb
mov
mov
outsb
push
outsb
outsb
sbb
push
push
test
mov
out
cmpsb
sbb
pop
sar
fisubs
lahf
loopne
in
clc
das
xlat
les
pop
ja
mov
push
jns
decb
jno
cmp
addb
xor
mov
push
mov
adc
rorb
mov
jae
xchg
jmp
lret
pop
insl
scas
stos
xchg
pop
sub
mov
jo
in
lret
push
add
rolb
hlt
out
adc
cwtl
int
lahf
test
mov
add
popa
jno
jnp
xchg
lahf
xor
rclb
fiadds
testb
out
jg
mov
fsts
inc
dec
dec
xchg
cmp
jl
insb
mov
sub
jne
das
in
bound
nop
push
into
push
push
scas
jo
ljmp
adc
and
or
xchg
dec
push
loop
lcall
sbb
push
movsb
repz
fsubr
sar
cmpsb
lahf
push
mov
or
sahf
pop
xchg
inc
sbb
stc
leave
test
aaa
push
pop
fcmovne
jmp
popf
dec
inc
std
imul
leave
outsl
outsl
add
sbb
negl
mov
imul
mov
js
rorb
test
pop
xor
mov
mov
arpl
mov
lret
in
sbb
add
cltd
int3
pusha
dec
xchg
dec
adc
mov
aas
cltd
lahf
mov
daa
fildll
push
inc
mov
and
inc
jle,pt
push
test
xchg
arpl
cmp
pop
mov
sub
pusha
mov
nop
mov
std
jp
cmp
jb
outsl
or
sub
test
fisubs
jae
call
sub
adc
inc
add
adc
ja
idivb
js
sahf
dec
daa
test
ljmp
sub
push
stos
and
cmpb
mov
les
pushf
sub
insl
cmpb
imul
ret
cwtl
push
adcl
mov
dec
aas
xchg
in
sub
sbb
divb
mov
ljmp
or
add
inc
adc
sbb
dec
subb
sti
pop
stos
test
inc
dec
hlt
sbb
cmpsb
xor
xor
in
insl
xchg
sbb
xchg
or
jge
mov
movb
mov
push
iret
rdpmc
sti
fisttps
notl
push
jo
mov
lods
das
popf
out
scas
xchg
pushf
xchg
xor
mov
jg
pop
out
icebp
test
dec
add
loop
add
jnp
add
orl
push
pushf
mov
and
int
or
add
xor
movl
sti
mov
mov
sbb
adc
imul
mov
stos
mov
scas
xorl
cmp
outsl
andl
cmp
ds
mov
pop
test
lahf
lods
cs
push
pop
xchg
mov
cmc
stos
in
push
unpcklps
stos
inc
insb
jnp
cltd
ret
call
mov
mov
or
inc
addr16
lds
enter
mov
in
add
mov
xor
pop
or
xchg
dec
orb
es
mov
push
add
subb
out
xor
prefetch
or
mul
cltd
push
repz
xor
fwait
or
jg
xlat
or
jecxz
cmp
and
shlb
fcom
mull
out
cmpsb
ja
sub
gs
loopne
adc
jb
xchg
dec
je
mov
dec
adc
adc
pop
fwait
into
mov
sbb
movsb
es
neg
mov
mov
in
js
sbb
pop
inc
dec
cmp
mov
mov
das
mov
pop
lods
add
ljmp
subb
jbe
adc
fwait
and
push
sub
int3
cmp
popa
shrl
inc
inc
sub
xchg
push
adc
sub
cmc
pop
aam
dec
mov
xchg
add
jnp
push
xchg
dec
rorb
push
add
mov
imul
mov
mov
mov
jge
jne
ret
es
fucomp
into
cwtl
rcrb
sub
aam
xor
push
fwait
loopne
inc
or
mov
pushf
mov
les
cmp
adc
mov
in
cmpsb
jecxz
fwait
pop
test
test
dec
cmp
cmpsb
sbb
add
imul
push
outsl
lret
jns
fwait
cwtl
fnstsw
pusha
shll
add
mov
sbb
rcll
xchg
jge
cmc
pop
test
xorl
mov
jmp
mov
mov
lahf
imul
jl
adc
pop
das
mov
jmp
nop
lods
js
lea
inc
mov
add
aad
mov
sbb
jne
jae
jnp
push
pop
cwtl
out
ss
incb
jae
inc
pop
and
into
xchg
fisubrl
fiadds
push
mov
mov
xor
int3
leave
mov
test
icebp
punpcklbw
mov
dec
dec
es
fptan
jmp
mov
stos
push
pop
mov
jl
xor
popf
xchg
stos
hlt
mov
out
xor
pusha
mov
lock
in
ret
in
dec
rcl
aam
mov
mov
xlat
lahf
aas
xlat
es
int3
mov
dec
ret
inc
xor
stc
xchg
icebp
scas
push
inc
cwtl
dec
pop
sub
std
hlt
lahf
push
repnz
cmp
bound
mov
call
ss
dec
cs
cwtl
mov
js
aam
insl
jp
mov
push
loop
mov
mov
xchg
mov
jmp
fdivrl
lock
je
sbb
jo
or
out
mov
cwtl
cli
shrb
cmp
es
mov
pop
jbe
xchg
test
xchg
xchg
adc
int
je
jne
leave
jmp
cwtl
or
push
daa
popf
pushf
mov
inc
fcmovu
cwtl
test
inc
cmc
insl
arpl
in
sub
icebp
dec
rolb
dec
ss
sbb
mov
pusha
inc
mov
or
xor
pop
push
popa
pop
test
cmp
dec
dec
or
cmp
jecxz
into
add
sub
lret
cmp
cmpl
test
fstl
jge
dec
sub
xchg
push
xor
mov
ss
sbb
pop
xor
jo
dec
lock
sbb
gs
daa
iret
mov
popa
and
cmp
mov
imul
lds
push
test
cmpsl
fnstcw
sbb
dec
jne
pop
and
jbe
aad
scas
add
xchg
mov
cmp
popf
lock
movsl
or
fbstp
leave
jae
jecxz
jo
jmp
ds
jns
jmp
call
lret
add
test
jne
and
enter
mov
sub
fistpl
sbb
sbb
in
push
lahf
jecxz
repnz
aas
outsb
dec
bound
mov
adc
lods
mov
out
in
jecxz
push
cs
adc
cli
jo
and
xchg
xchg
out
mov
jno
mov
jmp
fwait
jb
dec
cltd
imul
aas
xor
jae
out
mov
shr
ret
jno
and
inc
and
and
addr16
pop
shrd
adc
pop
mov
mov
add
out
stc
push
imul
xchg
fadds
das
ret
jp
lcall
push
in
and
and
stos
mov
mov
inc
jle
jno
pop
in
xchg
mov
popa
int3
push
outsb
add
dec
sbb
sbb
mov
test
mov
push
sarb
repz
jae
cli
jl
pop
test
add
in
xchg
or
imul
inc
mov
adc
cld
pushf
pop
push
xlat
cmp
mov
imul
les
mov
push
int3
movsl
out
inc
xor
hlt
mov
andl
mov
test
pop
pop
sbb
xor
sbb
jno,pt
sbb
imul
or
jne
iret
mov
adc
push
jl
mov
mov
lods
xor
jmp
out
in
mov
pcmpeqb
fildll
cwtl
jp
xchg
rorl
lret
jo
js
cmp
sarl
add
xor
fs
xor
loopne
adc
pop
xorb
iret
xor
out
xor
das
test
add
cmpsb
imul
lea
sub
push
fcmovu
int
or
and
test
push
adc
mov
sub
or
dec
ljmp
mov
addl
int3
dec
xchg
movsl
jl
test
aad
inc
mov
sub
into
push
xor
aas
dec
jmp
ds
add
cld
jns
mov
fisubrs
out
push
rcl
or
sti
fsub
push
dec
sbb
out
data16
cld
fistl
stos
fldlg2
push
mov
adc
fsubs
out
mov
push
inc
mov
out
fiadds
push
iret
frstor
mov
rclb
and
cmc
loop
jecxz
mov
je
push
mov
and
add
iret
jecxz
scas
jl
push
imul
mov
sub
cmp
lods
ljmp
or
leave
mov
push
adc
inc
movsl
jp
gs
mov
filds
jmp
push
push
adc
mov
cmc
push
xchg
jp
mov
xchg
daa
and
lahf
ret
jp
mov
insb
push
cmpl
xchg
push
mov
outsl
push
out
mov
rcll
adc
fidivrl
ljmp
ds
xchg
xchg
add
in
dec
int3
mov
xacquire
jmp
insb
jbe
loopnew,pn
mov
pop
test
loopne
imul
ds
les
mov
push
pop
adc
cmpsb
dec
mov
pop
push
jnp
ret
scas
stc
sbb
xchg
mov
and
pop
mov
xchg
mov
ret
ds
bound
or
dec
and
mov
movsl
jl
aaa
add
dec
cmpsb
jecxz
cmp
fidivrl
clc
and
cmp
in
mov
lock
xchg
daa
push
dec
sbb
jno
mov
mov
mov
bound
pop
fildll
fwait
std
adc
adc
sub
loopne
xchg
jge
or
xor
or
mov
lods
mov
xchg
dec
push
jno
inc
lahf
mov
xor
clc
aas
push
sub
rclb
das
jnp
nop
fs
lods
enter
xchg
mov
ds
inc
fldcw
pop
fsubrl
outsl
jbe
ss
xchg
and
cmp
pop
jbe
fwait
fwait
cmc
sahf
movsb
xchg
clc
lods
out
inc
aas
movntps
inc
inc
pop
iret
xor
lret
xchg
sbb
and
cmp
push
repz
adc
notl
pop
enter
cli
aad
out
push
adc
mov
sti
outsb
xchg
sub
daa
in
cmp
aad
add
mov
or
shrd
dec
lea
fst
fpatan
xchg
std
cmpsl
ret
int
sbb
nop
scas
xor
jg
cld
xchg
insl
inc
bound
int3
cmp
pop
fwait
inc
xor
cli
fnstsw
sbb
add
cmp
icebp
ret
ffree
xor
and
and
gs
inc
shl
jno
mov
pop
sbb
adcl
sub
jl
mov
sbb
pop
fisubrl
pop
or
lock
fidivl
out
sahf
push
sub
add
movsb
push
lods
repz
lock
enter
ret
int3
in
mov
scas
adc
add
mov
push
dec
dec
inc
ret
and
cmp
inc
inc
jl
cmc
test
adc
jecxz
dec
mov
lds
and
mov
in
inc
or
out
mov
test
jns
pop
divb
pop
call
das
aam
jbe
lret
cmp
and
pusha
mov
faddl
mov
icebp
mov
and
jns
and
jnp
lret
mov
jb
sahf
nop
jle
out
xchg
iret
pop
jns
out
ljmp
test
or
loopne
cmc
call
repnz
xchg
or
js
or
loopne
cli
dec
sbb
adc
xlat
xchg
scas
in
fstpl
xor
mov
pop
dec
inc
cmp
push
test
add
hlt
xchg
adc
gs
sbb
jmp
or
xor
lea
add
xor
adcb
xchg
mov
jle
jae
jmp
sbb
jle
call
sbb
and
test
bound
or
jo
push
test
mov
sbb
fistpl
mov
fwait
mov
out
or
mov
dec
jl
pop
in
aas
ffree
decl
sub
lea
dec
jmp
pop
jg
inc
mov
jmp
dec
rorb
out
daa
sub
into
dec
sub
test
push
outsl
nop
xor
scas
gs
jae
inc
lea
and
mov
or
jns
xor
and
dec
aam
cld
jno
pop
call
xchg
cmp
xchg
mov
cld
movsb
add
fstp
das
rcll
adc
std
jno
lds
push
mov
sub
cltd
nop
int3
xor
rclb
mov
push
cwtl
jne
fwait
into
insb
cmp
daa
out
popa
fistps
mov
std
pusha
xchg
push
or
fists
inc
adc
mov
jge
lods
rolb
xor
test
mov
mov
aam
sbb
lret
push
sarb
sti
rclb
fists
sub
push
je
loop
ja
test
and
in
mov
cmp
adc
mov
rcrb
add
mov
in
gs
sbb
or
jno
add
dec
lahf
mov
xor
push
stc
in
or
xlat
daa
call
or
dec
xchg
and
mov
xor
inc
xor
push
outsb
pusha
xchg
mov
pop
jle
sub
repz
outsl
aam
add
xor
push
call
sbb
jne
push
pop
stos
cltd
mov
sti
hlt
sbb
mov
sbb
pusha
pop
or
or
and
mov
repnz
inc
aam
js
or
repnz
sbb
or
xchg
cwtl
cs
mov
push
xchg
or
in
insl
push
or
cmp
and
in
pop
cmc
jge
mov
add
fildll
dec
mov
push
xorb
mov
or
lods
loop
inc
mov
xor
mov
shll
stos
mov
and
jns
adc
cli
cmp
lock
or
jae
mov
xor
cltd
shl
xor
fs
shll
mov
push
add
mov
push
adc
aaa
sub
sub
out
shll
pop
adcl
jmp
xor
dec
sub
push
fistpll
and
push
arpl
sbb
int3
and
sbb
mov
xchg
inc
std
xor
mov
sub
fldenv
sti
nop
hlt
push
fsubs
adc
iret
mov
inc
add
fwait
movsb
sbb
sbb
stc
in
pop
jp
or
xchg
xchg
sub
fsts
stc
adc
dec
pop
xor
and
inc
test
mov
cmp
mov
gs
mov
fmul
ss
sti
subb
loop
icebp
pop
jle
jl
jo
out
adc
test
sub
je
fs
xor
insb
ret
stos
data16
push
mov
fcoms
cmp
pusha
mov
aaa
fs
jecxz
xchg
lret
je
pop
xor
cs
jne
push
mov
jno
cltd
inc
jo
inc
sub
fiadds
xchg
xchg
adc
mov
cld
lcall
ljmp
fidivs
repz
sbb
test
cmp
jb
faddl
adc
test
pop
push
js
push
mov
cmp
mov
mov
push
daa
xor
pop
gs
stos
test
push
jp
inc
fistl
sub
cwtl
adc
jo
pop
fisubl
adc
fwait
push
jb
xchg
or
jge
inc
aaa
aas
cmpb
pop
pop
sub
std
sbb
jmp
jecxz
and
xor
das
cmp
clc
mov
fistl
cltd
lods
pop
orl
xchg
adc
dec
add
mov
push
shrl
cmc
inc
gs
sbb
mov
or
sub
pop
jp
out
jno
popw
add
dec
jae
lods
pusha
outsb
pop
sbb
mov
sbb
mov
or
addb
lret
jmp
pusha
imul
sbb
or
pop
sub
jg
movsl
mov
loop
in
lahf
or
lods
cltd
xchg
lcall
aad
fstpt
xor
mov
out
xor
nop
int3
mov
jae
add
xchg
lea
dec
mov
dec
insl
mov
int
add
ss
push
iretw
inc
and
add
clc
add
pop
stc
add
loope
addr16
mov
aas
lock
xchg
adc
push
jb
dec
ljmp
sbbl
xchg
dec
sub
scas
shll
js
push
lret
jle
insb
gs
inc
dec
mov
imul
outsb
dec
fistl
push
add
xor
repz
ljmp
mov
shl
cmp
mov
popf
adc
test
xchg
push
sahf
xchg
js
jmp
dec
adc
xchg
mov
stos
mov
aad
sti
or
outsb
aam
push
sbb
pop
insl
jo
ja
jle
jae
sbb
aam
outsl
dec
int3
fildll
nop
mov
and
inc
dec
sbb
pop
inc
jbe
or
jmp
xorb
add
xor
jns
pop
dec
adc
inc
testb
dec
sbb
shlb
jl
sar
xchg
sahf
push
scas
int3
fstps
pop
ja
in
dec
das
cmc
cmp
lds
lret
or
cli
jo
cs
subl
push
int3
fsubrl
inc
loope
stc
pushf
daa
stos
je
iret
lret
aas
add
inc
mov
ljmp
sub
mov
cmp
sbb
lret
hlt
negl
shl
sub
insl
shll
push
loopne
inc
shlb
or
popa
xor
sub
mov
sub
mov
ret
push
int
test
stos
cmpb
mov
fucom
mov
sbb
sub
rcr
jle
aam
push
and
mov
push
dec
dec
xor
mov
xchg
cmp
test
loope
cmp
loope
mov
push
push
fiadds
jno
out
cli
add
mov
adc
sub
nop
push
dec
test
mov
mov
xchg
outsl
cmp
in
rorb
mov
jl
jmp
mov
pop
push
popa
arpl
push
aad
imul
out
push
jb
movsl
cmc
les
sbb
mov
pusha
fisttpl
ss
inc
pop
push
mov
pop
and
and
mov
mov
and
pop
fs
xchg
cmp
sti
jge
lcall
or
lds
ret
push
sti
scas
or
sub
jl
in
and
xchg
mov
cli
out
shrb
xor
push
pop
push
push
push
add
enter
in
add
adc
flds
xchg
or
cli
cld
mov
adc
pop
fs
push
cmc
sti
loopne
out
mov
fidivs
mov
call
insb
repnz
ficomps
adc
pop
mov
pop
lea
and
sahf
cmpsb
add
aad
add
lcall
cmp
sahf
xchg
call
adc
in
xchg
add
sub
jb
xchg
icebp
incl
cmp
fs
test
mov
jae
jg
pop
push
fistpl
jbe
xor
mov
xchg
int3
inc
jge
mov
lds
inc
add
data16
mov
sbb
jns
sbb
push
mov
sti
cmp
sbb
xor
fimull
mov
jae
enter
arpl
push
inc
mov
jno
in
cmpsb
add
pop
sbb
and
sbb
push
jae
or
jle
adc
mov
in
push
repz
gs
add
and
push
aam
adc
jo
pop
decb
dec
pop
and
sub
clc
mov
sbb
lock
jo
push
xorb
dec
dec
inc
push
insl
push
pop
cmp
add
add
lds
cmp
aaa
xchg
jecxz
cmpsl
inc
push
popf
adc
lods
push
jae
mov
dec
mov
sbb
jb
mov
imul
dec
dec
rcr
cmc
adc
sub
add
sbb
mov
mov
cltd
loopne
inc
push
ds
xor
pop
jns
es
add
cwtl
xorb
test
sbb
adc
icebp
lods
nop
lcall
pop
stos
adc
push
lahf
imul
pusha
mov
jle
xchg
sahf
mov
add
sti
fnstsw
jle
sub
push
xchg
pop
in
inc
repnz
lods
in
and
in
or
or
loopne
icebp
daa
test
sbb
movsb
and
add
loope
movsl
pop
paddsb
add
imul
int3
sti
pop
test
mov
fcmovb
scas
jae
lcall
or
lds
lret
inc
or
call
pop
jo
add
shld
adc
cs
dec
sar
clc
in
mov
pop
cmc
mov
or
mov
fwait
nop
cmc
push
shll
push
mov
push
ret
sti
les
xchg
inc
xchg
mov
in
dec
push
pop
mov
dec
lahf
popf
sbb
mov
mov
jecxz
clc
fidivrl
inc
dec
dec
dec
pop
daa
cmp
int
in
aad
test
outsb
and
in
shlb
imul
add
or
movsl
cmp
mov
lock
adc
or
pop
xor
mov
add
mov
mov
xor
add
mov
imul
mov
xor
mov
lea
cmp
je
mov
mov
mov
mov
mov
xor
xor
mov
add
div
mov
xor
lea
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
imul
mov
xor
mov
lea
cmp
jne
mov
jmp
mov
mov
mov
xor
add
mov
mov
add
xchg
xor
push
mov
pop
mov
add
lea
add
add
push
inc
pop
dec
xchg
dec
xchg
dec
xchg
dec
push
mov
pop
dec
call
cmp
je
xchg
push
pop
push
pop
inc
xchg
sub
xchg
dec
dec
mov
imul
add
xchg
push
xor
mov
dec
inc
add
dec
xor
add
pop
mov
pop
pop
pop
leave
ret
push
mov
sub
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
pushl
call
jmp
movl
cmpl
je
cmpl
jne
call
mov
dec
mov
jmp
adc
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
call
cmpl
jne
mov
inc
mov
jmp
sbb
push
mov
movl
cmpl
je
cmpl
jne
push
pushl
push
push
pushl
pushl
pushl
call
mov
dec
mov
jmp
mov
mov
xor
mov
and
andl
and
movl
adc
movl
mov
mov
sub
sub
mov
or
mov
andl
xor
xor
inc
mov
cmpl
jne
pushl
push
call
cmpl
jb
sub
andl
xor
or
inc
mov
cmpl
jne
push
push
pushl
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
jmp
mov
xorl
mov
mov
sub
mov
orl
mov
mov
sub
mov
orl
mov
mov
sub
mov
orl
mov
mov
sub
mov
mov
mov
mov
xor
mov
add
or
mov
mov
mov
sub
mov
orl
mov
xor
add
push
mov
xor
add
push
mov
xor
add
push
lea
push
pushl
pushl
call
test
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
lea
mov
mov
test
je
lea
mov
mov
mov
mov
mov
sub
mov
mov
xor
mov
sub
add
mov
mov
mov
mov
pushl
movb
mov
pushl
pushl
pushl
pushl
pushl
pushl
pushl
mov
call
mov
mov
add
pop
pop
leave
ret
push
mov
sub
movl
lea
mov
jmp
das
or
mov
in
sbbl
sbb
jp
leave
mov
add
push
xchg
mov
sub
mov
push
jns
sbb
mov
cmp
into
and
imul
inc
xchg
push
cwtl
xor
xor
adc
imul
lcall
adc
arpl
cmp
add
daa
xchg
xchg
js
out
dec
push
aam
adc
xor
int
or
loop
out
mov
loope
add
jl
cmp
push
mov
loopne
xor
sub
add
jne
iret
sbb
or
inc
arpl
mov
cmp
scas
fincstp
adc
pushf
ret
and
add
fisttpll
js
cld
mov
jmp
std
fildll
loop
fwait
es
fucomip
enter
orb
ficoms
mov
mov
in
in
adc
es
sbb
add
cmc
sbb
jno
mov
xchg
xor
hlt
lock
gs
push
enter
jle
push
jo
jmp
cwtl
mov
mov
and
in
inc
pop
sbb
xor
cmpsb
ljmp
jns
jbe
fwait
push
aaa
add
in
popa
lcall
or
popa
inc
ficoms
out
scas
fidivrl
sbb
and
mov
stc
icebp
mov
scas
les
cmp
push
jae
mov
je
lret
enter
jge
or
ss
test
arpl
xor
cmc
add
push
je
jb
aaa
add
inc
jmp
into
mov
push
adc
dec
add
adc
adc
adc
adc
push
mov
shlb
adc
or
xchg
sub
xchg
movsb
lods
ret
push
inc
outsl
sub
sub
add
add
into
je
mov
inc
popf
out
mov
mov
ja
push
iret
mov
sbb
jnp
cltd
jge
jl
mov
xor
adc
sub
xchg
repz
pop
pop
popf
inc
stc
repz
cmc
test
push
or
dec
hlt
fisubl
out
jo
pop
sbb
mov
addb
mov
xor
mov
sbb
xchg
xlat
sub
or
dec
sbb
icebp
fwait
outsl
icebp
push
and
adc
cltd
int3
loop
jno
push
movsb
stc
mov
aas
mov
and
adc
fnstenv
xchg
push
aam
repnz
pxor
and
xchg
lods
mov
pop
outsb
fidivrs
ss
push
adc
int3
xor
xchg
mov
mov
les
shrb
sub
mov
mov
lock
adc
out
xchg
adc
cmc
mov
mov
lahf
mov
aaa
shrb
jae
xchg
sub
lock
mov
iret
xchg
jmp
or
jno
hlt
inc
les
dec
pop
jmp
dec
push
pop
add
rcrb
and
fsubs
mov
and
cmpsb
xor
xchg
mov
fdivs
ds
lret
mov
fdivl
rolb
cwtl
lds
outsb
outsb
push
sbb
rclb
repz
or
push
or
nop
data16
pop
dec
push
sub
cli
jp
pop
movsl
into
mov
xor
imul
jno
cmp
cmp
and
cs
lea
into
jo
add
sbb
ss
xchg
push
mov
outsb
xchg
adc
cld
xchg
xchg
pop
inc
es
push
mov
fwait
dec
jmp
inc
ret
pop
ja
repz
mov
dec
and
sbb
mov
mov
out
iret
enter
mov
sbb
jl
pop
loope
cmp
stos
mov
pop
popa
fs
into
dec
rcll
jg
insb
imul
fadds
jl
dec
sub
test
out
into
shll
out
add
jnp
cmp
pop
adc
inc
aad
dec
and
push
mov
mov
or
fsts
jge
insb
xor
in
pushf
or
inc
das
jecxz
mov
inc
in
xchg
icebp
fmulp
push
fcomps
xchg
dec
movsb
imul
jno
pop
test
xlat
xchg
jle
sbb
aas
mov
push
sbb
mov
add
in
test
fdivl
mov
mov
popf
outsb
fdivr
push
jbe
xchg
and
sbb
mov
dec
stos
add
dec
stos
pop
sub
jbe
stos
insl
adc
and
and
stc
lea
pop
adc
lahf
adc
gs
les
push
cmp
mov
add
stos
out
push
or
xlat
dec
aam
and
testb
stc
sbb
add
cld
push
push
popf
mov
sbb
pusha
dec
arpl
mov
xchg
in
movsb
jl
into
inc
mov
lret
inc
inc
xor
jbe
or
lret
outsl
iret
sub
shrl
jg
out
clc
iret
out
bound
cmp
xor
stos
daa
pop
out
mov
jg
push
add
shrb
sbb
jmp
mov
pop
cmpsl
mov
inc
add
jns
mov
arpl
imul
push
jne
and
sbb
jge
rcll
jno
outsb
rclb
daa
mov
mov
mov
adc
adc
jbe
push
int
sti
pop
shll
inc
and
in
addl
xor
dec
mov
push
mov
mov
fisubrl
loope
fidivs
mov
arpl
movsb
mov
outsb
mov
lcall
hlt
or
mov
and
push
stos
outsb
shll
add
lahf
and
test
sub
xor
loop
call
sub
xchg
xor
cmp
les
sub
gs
aad
jecxz
mov
enter
test
test
xor
arpl
sbb
data16
add
addr16
push
les
xchg
jp
push
jae
jmp
add
xlat
push
ss
xor
or
or
aaa
mov
inc
mov
pusha
repnz
add
cwtl
or
mov
or
jb
push
ret
or
xor
sbb
mov
xor
cmp
cmc
jle
outsb
mov
movsb
clc
inc
mov
sub
fdivrl
iret
mov
push
pop
fnstcw
sti
lret
fistpll
jmp
sarl
lods
sbb
mov
lahf
jbe
mov
in
dec
jne
shrb
mov
add
or
dec
mov
xor
loope
sbb
mov
lds
push
ret
icebp
push
ljmp
wbinvd
shll
daa
cmp
int3
insl
fsubl
lods
loope
pushf
push
pushf
add
movsl
or
push
int
adc
sub
call
mov
filds
mov
shrb
sub
icebp
push
into
outsb
cmp
jae
push
sbb
int3
gs
test
adc
fcompp
pop
clc
gs
xchg
in
dec
test
sbb
in
push
and
mov
mov
add
je
lcall
fstl
add
nop
jno
sub
push
jp
add
subb
sub
jg
fdivrs
out
mov
inc
mov
lret
int3
dec
xrelease
cmpsb
and
test
dec
pop
arpl
mov
and
push
mov
jle
pop
inc
into
mov
sub
sub
jbe
in
rolw
adc
lahf
xor
stos
loop
dec
sub
xchg
test
scas
movsb
xorl
fnstenv
push
stos
test
lds
gs
and
pop
dec
push
adc
xor
loopne
outsl
sarl
inc
sbb
lret
xchg
loope
mov
add
sbb
aas
sbb
iret
sahf
lds
sbb
cmpsl
xchg
fidivs
mov
mov
or
adc
repz
int3
inc
xor
jb
cwtl
adc
repnz
push
push
movsw
adc
fmull
jno
add
push
shlb
sub
jmp
insl
and
ja
push
adc
ja
sub
inc
pop
adc
stc
mov
pop
push
sub
mov
or
push
fdiv
lock
aaa
aaa
push
mov
sub
sub
cmp
mov
jns
mov
test
xlat
es
xchg
idivl
adc
mov
in
outsl
xor
les
add
fimull
call
mov
and
sub
lret
outsl
and
dec
push
and
jg
nop
push
jle
aas
lcall
outsl
ficoms
push
sahf
lea
push
lds
dec
sub
jmp
mov
mov
mov
push
dec
fadds
es
mov
ror
sub
jmp
das
inc
testb
int
scas
pop
dec
mov
xlat
cmp
dec
add
rclb
mov
mov
dec
les
or
inc
ds
cli
nop
scas
and
out
loope
inc
insb
mov
or
inc
aaa
cmp
cmpsb
pop
sub
mov
add
push
xchg
std
and
data16
daa
fs
mov
in
cmp
cmpsb
fldt
test
pop
push
in
dec
inc
data16
insl
int3
stos
and
subb
sar
incl
inc
ja
loopne
hlt
sub
into
push
and
ficoml
mov
in
and
dec
inc
and
inc
mov
mov
ss
xor
int
xor
or
cwtl
test
insb
fnstcw
test
lcall
pushf
notl
dec
cli
push
into
mov
mov
jb
or
mov
imul
das
stos
stc
or
mov
pop
pusha
adc
mov
pop
xchg
outsl
mov
pop
xor
repz
pop
in
mov
aam
adc
push
shrb
jg
push
cwtl
rorb
cli
not
mov
jne
sub
lds
inc
xor
pusha
arpl
sti
inc
shlb
adc
outsb
stos
fimuls
jecxz
ret
sti
push
or
pusha
push
in
xchg
test
mov
sbb
int3
push
xchg
mov
dec
mov
mov
ljmp
loop
pop
sbb
cltd
dec
push
mov
mov
xchg
negl
push
add
leave
scas
lods
xor
cwtl
int3
and
fldenv
pop
add
sub
imul
repnz
inc
shll
cmp
mov
adc
shlb
dec
cmpsb
movsl
cmp
in
dec
mov
insl
mov
int3
adc
adc
subl
lahf
pop
std
cltd
jbe
movl
pop
fsubrl
sbb
ljmp
and
sahf
xlat
and
loopne
mov
xor
js
leave
sbb
inc
dec
fcomps
rolb
mov
outsb
or
in
cmp
cmp
jl
pop
xchg
and
adc
fwait
inc
add
inc
lea
ret
lds
pop
push
fnstsw
fs
test
lods
jns
lahf
test
outsl
bnd
test
and
out
imul
ljmp
scas
inc
sbb
xor
je
insl
imul
mov
push
in
mov
adc
jg
push
invd
imul
and
lret
xor
mov
xchg
shrb
xchg
pop
xor
pop
inc
rolb
or
inc
mov
sbb
adc
cmpsb
icebp
push
out
icebp
inc
dec
xor
inc
pop
ficoml
divl
imul
mov
iret
shl
push
mov
decl
aad
mov
inc
jae
inc
popf
xlat
imul
ss
jg
push
out
fs
loopne
mov
sub
fstpl
in
jge
out
xorb
imull
dec
bound
inc
inc
rcr
xorb
insl
int3
xor
enter
sbb
xor
leave
test
xor
pop
rolb
ja
into
sub
xorb
pop
jge
lods
ljmp
mov
xor
and
cs
clc
lret
ds
popa
andl
dec
and
std
inc
fwait
jne
movsl
enter
sti
in
jne
xchg
loope
fildll
push
imul
out
mov
idivb
xor
jae
stos
popf
insl
mov
outsb
add
lods
dec
add
iret
inc
or
and
stos
imul
sbb
mov
jg
stc
insl
add
or
pop
mov
sub
sbb
or
or
mov
cmpsl
push
push
insb
mov
mov
out
or
jae
sti
cmp
in
ret
fadds
stc
insl
dec
xor
pop
and
push
lret
push
addr16
jecxz
push
cwtl
loop
mov
pop
popa
mov
sbb
ficoms
mov
lret
sub
and
test
mov
popf
fdivrs
nop
push
jns
push
movsl
push
xchg
jg
je
rcll
imul
jecxz
inc
and
jb
scas
lods
adc
lret
add
jle
jno
xchg
lods
leave
adc
arpl
sub
imul
xchg
call
xor
push
jb
jae
ss
sub
push
cmp
push
lods
sbb
sbb
cld
gs
jbe
lret
mov
ret
xchg
outsl
xchg
xor
lret
sbb
shl
and
sub
cmp
sbb
cwtl
fs
out
pop
lods
call
or
cmp
cmp
sub
xchg
lods
push
mov
out
es
xlat
out
and
push
into
ss
es
lock
ljmp
mov
sbb
cmp
nop
mov
cmp
xchg
mov
repz
sub
in
fdivp
cli
push
mov
mov
aam
push
iret
jae
mov
and
or
loopne
xchg
lds
mov
fadd
xor
in
nop
arpl
dec
daa
jb
aam
dec
mov
jmp
lds
inc
xchg
dec
lret
aad
mov
cmp
sub
gs
loop
loope
popf
push
clc
jl
inc
stos
push
fldl
add
in
aas
aam
jo
xor
dec
mov
jg
rorb
xor
mov
dec
jecxz
mulb
mov
jge
sbb
jne
fiaddl
xchg
imul
test
shrb
and
push
sub
loopne
push
mov
daa
clc
xchg
or
test
pop
xchg
std
mov
movsb
in
pop
cmp
imull
fwait
test
cs
stc
loopne
dec
arpl
inc
xchg
xor
lret
xchg
shll
or
je
lcall
cltd
aas
cltd
pop
inc
mov
out
mov
xor
daa
ljmp
repz
mov
mov
imul
aad
das
pop
mov
clc
push
inc
fstp
js
jge
sub
ja
and
sbb
xlat
ret
mov
mov
scas
fdivr
pop
inc
mov
in
jp
adc
xchg
dec
fs
cmp
cs
je
jl
jo
xor
frstor
dec
pop
mov
into
lfs
cmpsl
add
lea
je
loope
outsb
xchg
and
mov
mov
pop
mov
in
mov
ret
xchg
mov
test
lcall
inc
cmp
jns
leave
shrb
test
add
pop
mov
rcrl
jmp
push
mov
out
je
in
lea
cmp
mov
in
pop
or
add
push
ret
adc
mov
adc
int3
xchg
ret
data16
mov
jns
mov
adc
mov
movsb
mov
lds
sub
cld
test
cli
adc
pop
mov
dec
jg
fcom
push
adc
inc
imul
cld
mov
dec
aaa
jb
loop
into
int
cmp
sbb
jl
js
mov
xchg
decl
push
ror
push
movsl
jmp
mov
add
shll
push
mov
cmpsl
nop
xchg
and
xor
xor
outsb
dec
repz
add
arpl
lods
mov
rclb
loopne
jecxz
mov
xor
pop
cmp
stos
add
pop
add
in
fs
xchg
push
pop
lahf
scas
mov
xor
test
repz
jl
aaa
sarl
shrb
les
push
fcoms
jns
out
mov
in
xchg
adc
mov
in
aaa
push
mov
fisubs
cmc
jno
mov
ret
and
push
inc
sbb
icebp
repnz
add
fstpl
scas
ja
xor
add
fcmovbe
rcrb
or
fisubrl
push
daa
pop
push
js
push
lods
pop
or
sub
in
xchg
add
insb
xor
stc
sub
aas
das
aaa
sbb
jb
xlat
aaa
in
lock
and
pop
xor
stc
xorb
xchg
inc
xchg
imul
or
jge
daa
repnz
fidivl
mov
adc
sub
jl
push
xchg
xor
je
lahf
pop
xchg
mov
or
insl
test
mov
adc
call
dec
and
aam
and
adc
inc
in
nop
push
insb
mov
mov
mov
lock
ret
pop
aas
repnz
pusha
stos
xchg
dec
imul
sbb
sub
cmp
pop
dec
test
mov
inc
xor
sub
jl
sbb
imul
jecxz
loope
sub
adc
xor
mov
dec
fidivrs
pop
sbb
es
ret
xor
and
in
pop
xorb
data16
addr16
or
sbb
rorb
push
stc
fsts
or
lea
sub
jns
scas
mov
das
mov
pop
jae
int
fsubs
jge
xor
addr16
mov
fs
xorb
cmpsl
lock
and
push
cmp
sub
scas
stos
cld
pop
jb
subl
fwait
vpand
repnz
lock
and
mov
and
rorl
dec
cltd
insb
je
mov
jne
add
ja
sub
loop
jmp
daa
dec
mov
bound
and
mov
bound
fs
pop
jnp
sti
shrb
or
loop
shrl
add
cmpsb
jp
movsl
fwait
dec
add
mov
mov
xorb
add
data16
mov
mov
in
repz
mov
pop
arpl
xchg
push
pop
out
popa
ud2
or
jge
mov
es
jl
push
hlt
or
imul
ds
mov
adc
jp
mov
xor
movsb
jp
int3
cmpsl
popf
sbb
mov
aaa
jge
add
push
loope
loopne
and
cmp
insb
cli
out
sub
mov
mull
mov
ret
jns
hlt
out
test
lahf
movsb
pusha
dec
mov
xchg
je
sbb
fstps
xor
fsubrl
dec
shrl
dec
jg
sub
add
add
mov
jne
cli
cld
mov
xor
shll
lea
cmp
stos
jg
mov
xchg
enter
cmp
fisubrs
dec
stos
inc
ljmp
adc
mov
sbb
ja
mov
outsb
and
pop
notb
aad
cwtl
daa
add
fwait
jns
pushf
inc
std
add
sbb
xor
fstpt
hlt
std
ja
test
xlat
mov
mov
jmp
fndisi(8087
cltd
negb
lret
cmpl
jg
sub
pop
mov
adc
test
fidivl
ja
fsubrl
rcl
mov
lret
push
addr16
adc
add
test
ja
insb
or
inc
outsb
mov
dec
movsb
jp
bound
icebp
cmp
cmp
cmpsl
push
lea
and
adc
sti
add
push
in
dec
iret
push
dec
fsubr
movsb
in
dec
sbb
in
out
adc
xchg
mul
loop
pop
out
pop
int3
daa
sbb
test
jmp
pop
jg
add
dec
test
push
test
loopne
ljmp
sbb
xor
add
jo
sub
xchg
insl
stos
fcmovnu
outsl
insl
out
insl
aam
mov
jae
scas
loop
popa
pmulhuw
sbb
lds
sub
pop
enter
test
mov
cwtl
icebp
mov
stos
jo
into
or
ret
dec
movl
insb
stc
int3
jo
test
jne
cmp
outsl
sub
xchg
arpl
sbb
loop
leave
movsb
mov
inc
cmc
fcmove
loope
mov
insl
daa
inc
xchg
or
aas
cmc
scas
aas
jg
cmp
test
push
xchg
in
sbb
ss
gs
stc
or
js
adc
push
xchg
xor
fs
jmp
repz
mov
cli
clc
jbe,pn
in
leave
movsb
add
ficoml
shll
cmp
out
test
lcall
in
xor
aam
pop
imul
popf
adc
or
aas
out
mov
pop
jge
jnp
out
sbb
lret
mov
pop
test
mov
sub
pop
stc
or
jge
fdivrl
shlb
test
scas
jmp
loop
insl
xor
add
xchg
fcomps
jmp
cmp
pop
push
push
loopne,pt
outsl
add
incb
out
xchg
fstl
int3
cmova
dec
loop
mov
cwtl
mov
insb
aam
mov
aas
push
xlat
mov
jb
adc
sub
add
out
imul
jno
fs
mov
sub
push
std
add
out
sub
int3
shll
push
inc
cmp
or
and
pop
ljmp
mov
dec
mov
leave
les
push
addl
mov
adc
inc
push
cmc
sbb
sub
sbb
pop
lret
mov
stc
aad
pop
fcomp
xchg
sbb
ret
xor
mov
in
pop
in
and
mov
fwait
ret
dec
dec
sub
out
dec
mov
leave
arpl
inc
hlt
and
dec
mov
dec
repnz
imul
shlb
xor
sub
repz
jns
push
push
mov
gs
pop
mov
data16
shlb
stos
pop
mov
add
or
pop
mov
cltd
popa
mov
mov
inc
scas
mov
aad
cmp
xchg
sti
dec
adc
or
les
lret
outsl
or
shrl
jg
test
sbb
and
push
cwtl
jno
pop
mov
pushf
mov
lret
fisttps
and
lret
add
je
sbb
push
stos
dec
sbb
push
rcr
jmp
push
xchg
and
pop
inc
iret
jo
adc
jl
cli
sub
xor
dec
dec
xchg
push
push
pop
push
sti
bound
mov
add
fiaddl
cmp
mov
dec
ja
adc
dec
scas
jmp
sbb
xor
loopne
add
and
outsl
sub
xorb
inc
xchg
sti
inc
test
scas
fsub
popa
sub
dec
push
imull
imul
cli
dec
mov
xorl
icebp
sbb
mul
mov
js
jl
frstor
cmpsb
jno
scas
pop
icebp
push
sbb
dec
test
and
jno
cmp
mov
subb
outsb
fldl
rcrb
cmpl
movsl
cwtl
mov
scas
gs
jnp
cli
ficoms
sub
xlat
cmp
mov
sub
sub
out
loop
sahf
jbe
add
pop
inc
cmpsl
out
movsb
cmp
xlat
into
mov
sub
xchg
sub
sub
lret
adc
fcomip
push
shl
bound
mov
clc
sbb
pop
sbb
iret
lahf
sbb
add
scas
push
xlat
sbb
cmp
lahf
jo
sub
das
in
fnstcw
cmp
xor
mov
pop
sbb
jbe
sub
js
inc
mov
sbb
and
pop
push
sbb
lock
sub
mov
adc
rcrl
fistl
aaa
out
gs
mov
and
sub
mov
sub
sahf
and
sahf
mov
repnz
hlt
dec
or
push
iret
push
pop
subb
push
add
xchg
pop
add
jl
push
mov
popf
mov
out
std
mov
mov
addl
push
in
sub
out
mov
adc
push
in
ljmp
push
jmp
ret
sub
xchg
lcall
xchg
sti
test
out
dec
mov
mov
imul
pop
shl
push
cmpsb
in
xchg
xor
jno
mov
mov
iret
push
cmovl
repz
adc
and
fdivl
adc
in
cmpsb
jmp
cltd
les
xchg
adc
mov
dec
test
sbb
xor
lock
cld
ret
push
icebp
cmc
dec
stc
push
pop
out
jo
lods
fs
mov
pushf
jnp
out
push
sti
sbb
mov
jge
repz
imul
xor
lock
inc
addr16
sub
test
dec
out
add
push
testl
fildl
loopne
sbb
jge
arpl
fsubp
pop
out
mov
pop
mov
and
fmuls
cmp
test
testl
out
inc
jbe
xor
stos
lahf
loope
gs
lock
fbstp
xchg
push
in
test
dec
out
bound
xor
lock
movl
fmul
pop
and
mov
in
filds
nop
addl
xchg
outsb
inc
xchg
push
nop
out
ds
mov
push
arpl
sbb
mov
pop
cmp
push
lds
loopne
aam
xchg
xor
daa
mov
add
sub
xchg
test
nop
jge
sahf
ss
xor
mov
inc
xchg
in
out
filds
mov
mov
fdivs
pop
fmuls
inc
xchg
cmp
lea
aam
jge
push
aad
movsb
push
incb
inc
les
mulb
cmc
gs
fsubl
cwtl
mov
jno
shlb
movsb
es
add
stos
mov
pop
inc
sbb
mov
mov
icebp
je
notl
into
sbb
mov
push
xchg
adc
sbb
or
jb
in
dec
andb
sbb
rcl
repz
aad
ljmp
push
fcompl
ficomps
std
jmp
sbb
inc
and
fmuls
iret
shrb
mov
push
fisubrs
ss
ret
adc
rorb
push
xor
xor
aad
cmpsl
mov
adc
xchg
push
pop
jp
pop
outsb
jle
jp
jg
adcl
and
gs
out
pop
sub
push
aam
pop
addr16
sub
inc
mov
ret
lock
arpl
je
mov
or
popa
int3
pop
pop
lcall
cmp
jge
lret
dec
xchg
aad
lahf
or
xchg
mov
int3
in
aam
scas
std
inc
mov
xor
mov
aad
loop
cmc
jbe
sub
arpl
xchg
pop
jno
out
jmp
loope
mov
or
int3
jg
out
cmc
movb
jecxz
mov
stos
xchg
aaa
test
repz
jne
popa
add
push
addr16
jnp
scas
orl
sub
mov
ficoms
and
lret
dec
xchg
icebp
push
lret
fisttps
inc
jmp
adc
push
ficoml
sbbl
xchg
in
lods
jb
mov
ja
jmp
outsl
mov
adc
gs
cmp
jge,pt
repz
sbb
gs
scas
mov
sub
jmp
mov
inc
sub
push
push
les
rcl
pop
push
pop
jle
xor
ds
and
outsb
sub
sbb
pop
pop
push
inc
push
mov
jle
arpl
xchg
loop
push
addb
stc
imul
in
daa
pop
daa
jnp
xor
mov
mov
sbb
imul
testl
loope
in
aad
ds
lods
test
mov
aas
push
or
les
or
mov
cmpsb
cmpsb
mov
ljmp
sub
mov
cwtl
pop
mov
push
outsl
add
shlb
sub
lahf
mov
xchg
int
call
inc
lods
dec
mov
in
orl
push
jo
loope
shl
les
xlat
sub
mov
fsin
dec
pop
ja
adc
adc
jecxz
pop
rcrb
ret
lret
mov
pop
or
xchg
testl
stc
mov
or
mov
jp
add
insb
inc
or
inc
daa
rcl
out
ret
push
lods
movsl
ror
fsubs
mov
pop
sti
adc
movsl
jg
push
xchg
fwait
and
cltd
aad
sub
sub
or
test
cmp
imul
mov
sbb
push
jge
test
adc
divl
pop
hlt
pavgw
xlat
push
test
add
mov
addr16
je
lods
dec
scas
out
test
and
and
inc
stos
mov
jns
jo
rcrl
push
test
dec
cld
mov
jae
inc
push
cmp
or
or
push
xchg
outsl
lcall
mov
mov
stc
je
push
pop
fdivr
cld
mov
xchg
push
xor
mov
add
dec
xor
pop
add
push
add
lock
dec
dec
nop
dec
in
ret
inc
leave
jb
lcall
int3
inc
mov
and
jecxz
or
jl
fbld
jo
scas
push
cmp
mov
insl
sbb
pop
jno
test
xlat
dec
adc
lods
pop
lds
imul
mov
dec
roll
sbb
insl
xchg
rolb
mov
mov
rcll
aaa
clc
and
mov
mov
repz
cmp
fisttpl
dec
decb
inc
xor
and
shll
insb
clc
test
mov
adc
xlat
imul
jo
out
xchg
fcom
ja
aam
nop
xor
movsl
lahf
std
pop
lret
and
xchg
and
adc
xor
mov
or
jo
mov
ja
cmp
aam
pop
das
inc
sub
push
add
sarl
shl
out
rclb
jns
rclb
in
push
stos
test
mov
scas
or
fdivrl
and
mov
jg
into
adc
testl
cwtl
fs
sarl
in
xchg
inc
stc
arpl
rolb
dec
jge
lret
adc
mov
mov
movsl
fwait
and
cmpsb
ljmp
out
push
xchg
pop
jmp
ficoms
push
cs
mov
add
mov
mov
mov
mov
mov
sub
sub
lea
or
mov
mov
mov
sbb
mov
xor
add
mov
mov
sbb
mov
mov
sbbl
mov
orl
add
push
mov
jmp
popa
dec
jmp
mov
jnp
js
btr
cmp
jp
pop
jp
mov
xchg
rolb
insl
and
cmc
fiadds
push
add
mov
addr16
daa
pop
test
daa
test
and
add
sbb
wbinvd
mov
clc
dec
int
cli
fcomi
push
or
sub
fs
ja
loop
movsb
ljmp
adc
outsl
out
sub
push
jb
enter
lahf
sub
cmpsl
fbstp
repnz
stc
notl
movsb
push
sahf
xor
gs
frstor
jae
stos
or
or
xchg
xlat
and
ret
and
lret
push
or
mov
movsl
jle
push
xor
xor
inc
jmp
stos
adc
scas
or
cmpsb
aad
cld
dec
xchg
les
mov
jle
hlt
xchg
repnz
lods
jbe
inc
pop
xlat
lods
fdivl
add
pop
mov
add
fstpl
testl
xchg
pusha
insl
ret
imul
add
rorl
fnstsw
out
das
sbb
sbb
daa
cmp
fsubl
cmpsb
ljmp
xor
loopne
cmpl
xchg
push
pushf
jne
mov
push
mov
xchg
sbb
icebp
mov
mov
mov
jb
iret
mov
mov
jne
daa
imul
or
lcall
cltd
idivl
aad
outsb
sub
and
lods
cmp
add
fidivl
and
scas
lds
or
out
test
dec
divb
add
mov
cmp
push
mov
jge
sbb
sbb
pop
pop
jo
add
popa
je
mov
incl
inc
xchg
pushf
fsubrs
loopne
push
jge
adc
jne
adc
xor
mov
jmp
dec
test
sbbb
push
or
push
loope
cmpsb
or
xlat
add
rcr
je
dec
inc
pop
xor
xchg
mov
cmp
inc
test
scas
pusha
fimuls
xchg
adc
mov
sbb
mov
roll
ret
push
hlt
daa
ror
mov
daa
and
popa
clc
ficoms
popa
sbb
lcall
jno
push
pusha
xchg
inc
shrl
cli
mov
sub
insb
pop
inc
imul
gs
aas
xchg
ret
andl
in
pop
jae
xor
nop
xchg
mov
or
pop
fistps
mov
jmp
shll
add
xor
mov
mov
lods
dec
call
pop
lods
jb
popf
sub
add
cmp
sbb
push
scas
int
xlat
fsubs
std
imulb
xor
inc
dec
ret
mov
insb
pushf
cmp
adc
jp
nop
push
cmp
push
pop
cmp
adc
shll
lock
inc
cwtl
sbb
add
and
mov
jbe
hlt
test
in
mov
push
ret
pushf
imul
mov
popa
dec
jg
sbb
cmp
inc
xor
jmp
jmp
js
aam
or
pop
mov
push
or
pop
lcall
movups
jp
or
or
sti
pop
aad
in
mov
es
int3
mov
inc
orb
rcrl
orl
xchg
movsl
clc
xor
das
cld
out
addr16
in
and
pop
inc
push
bound
dec
test
mov
lds
dec
push
mov
jb
jns
mov
xchg
ret
adc
or
cs
ret
add
mov
pusha
sub
and
and
out
xchg
aad
lods
mov
test
out
inc
aam
jp
mov
dec
mov
jne
add
icebp
ljmp
das
lock
xorb
inc
lea
pop
cmpsb
xor
add
cld
dec
and
jb
xor
rcl
rcrl
xor
stos
shll
push
ror
ss
sbb
mov
div
and
loope
iret
mov
outsl
repnz
roll
sub
into
movl
jns
sub
sub
cwtl
ja
and
and
fldenv
adc
pop
movsb
xor
test
jo
in
or
icebp
mov
sbb
pop
xor
push
push
cli
lcall
dec
test
xchg
mov
xchg
std
cwtl
and
push
xor
sbbl
addr16
test
lock
pop
push
call
sub
lret
push
jae
mov
test
std
std
push
insl
sub
inc
roll
mov
sbb
dec
jno
mov
idiv
jo
popa
mov
je
fxch
mov
std
mov
lret
mov
fcmovbe
aam
push
dec
ja
js
or
loope
push
pop
push
loop
jo
push
ja
mov
pop
es
imul
mov
test
adc
adc
repnz
push
subb
ficompl
jo,pn
mov
test
ljmp
sbb
xor
adcb
imul
xchg
dec
mov
pop
mov
shrl
jne
sbb
jp
fisubrs
out
stos
rorl
loope
and
loopne
outsl
dec
push
aam
add
sti
les
dec
cs
lahf
nopl
mov
pusha
and
pop
cmp
inc
mov
cmp
in
mov
je
pop
arpl
adc
sbb
sub
loop
test
cs
stc
enter
sub
xor
stos
inc
add
xchg
fistl
xchg
aaa
daa
sahf
push
and
add
pop
shll
icebp
jmp
int3
repz
roll
fs
mov
mov
sub
pslld
and
lret
arpl
dec
pushf
stos
lods
jbe
jo
fiadds
dec
das
adc
mov
mov
jno
mov
push
and
les
inc
aas
cwtl
das
mov
aam
scas
push
imul
mov
lods
ficoms
cs
dec
test
jmp
or
dec
add
or
mov
mov
and
addr16
or
das
fdivl
in
inc
and
xchg
jo
mov
push
push
incb
jns
mov
dec
cli
mov
add
and
or
popf
mov
mov
int3
mov
test
daa
jmp
sbb
in
roll
dec
and
mov
mov
ret
add
das
cmp
test
dec
movl
xchg
pop
test
les
scas
push
xchg
shrl
mov
pusha
jo
mov
or
push
mov
cmp
jno
inc
mov
cli
xorb
hlt
fs
cmpsb
jne
sub
ret
je
ljmp
outsl
push
jno
or
pop
mov
inc
jg
pop
mov
xchg
arpl
mov
mov
jmp
subb
and
inc
jge
dec
xorb
xlat
repz
movsb
add
push
xor
push
daa
stc
pusha
and
dec
fcmovnu
fnsave
push
jnp
ret
xor
xor
les
scas
dec
xchg
insl
gs
xchg
adc
add
std
mov
inc
and
out
cmp
or
dec
dec
shr
lea
repz
sub
inc
data16
arpl
mov
sub
movsb
rorl
push
mull
jo
dec
int
pusha
das
repnz
shl
push
es
push
dec
push
push
dec
dec
cmp
nop
int
push
and
add
xchg
divb
in
jecxz
xor
nop
mov
idiv
ja
fs
sbb
sub
insl
loopne
in
testl
in
out
mov
xchg
stos
dec
sbb
loope
mov
sub
mov
sbb
stos
fnsave
cli
mov
lods
dec
cltd
add
loope
enter
insb
dec
mov
add
lret
gs
cwtl
or
add
sbb
pop
inc
fdecstp
push
pop
ficompl
xor
jg
xchg
cs
out
stos
repz
cmp
sbb
test
out
jp
dec
push
lcall
or
sbb
popf
push
outsb
outsl
in
push
ret
ret
adc
adcl
adc
push
lret
sub
xor
into
and
ljmp
pop
dec
sahf
ficoml
jo
sbb
enter
es
or
adc
inc
sub
dec
test
dec
in
enter
push
cmp
clc
add
outsb
adc
int
fstpt
mov
mov
xor
add
ffreep
dec
shr
repnz
pop
mov
aam
inc
sub
or
xchg
shrl
in
push
lret
cmp
stos
mov
xchg
negl
in
lcall
inc
pop
jae
scas
cli
add
fnstenv
loop
testb
ffree
add
into
mov
mov
or
mov
loopne
pushf
pop
sbb
scas
push
xchg
lock
push
cwtl
in
mov
ljmp
adc
scas
or
add
mov
push
jbe
mov
sahf
jmp
adc
pop
jnp
and
mov
mov
pop
push
xchg
push
dec
call
inc
inc
aad
or
faddp
mov
or
mov
outsb
sub
xor
shll
lahf
dec
test
jns
xor
sub
fs
rclb
in
jg
jmp
aaa
add
xor
lds
dec
cwtl
add
inc
fnstsw
shl
popa
sub
cld
mov
mov
movsb
lods
insb
idivl
or
pop
pop
lahf
loope
adc
push
inc
fbstp
xor
icebp
ret
fwait
das
mov
outsb
xchg
lahf
add
sub
call
scas
xchg
int3
cmpsl
xor
and
dec
repnz
call
jle
lds
cmpsl
lsl
insb
jnp
xchg
mov
roll
loope
rcrl
out
and
xchg
pop
or
jno
stos
cmp
pop
fstps
pop
and
dec
cmpsl
or
jp
pop
sbb
loopne
or
mov
cmp
out
rcl
xchg
mov
mov
mov
mov
aam
adc
lret
stc
dec
or
lcall
cmp
in
in
lods
adc
add
lahf
xchg
pop
sub
cs
or
fnstcw
loop
or
inc
mov
int3
dec
sub
lahf
sub
pop
pusha
or
jmp
mov
repz
xchg
adc
cmp
jne
into
mov
jp
push
push
jno
rcr
mov
inc
push
fsubl
pop
xchg
push
rcl
popf
cmc
je
in
hlt
cmp
imul
pop
hlt
jmp
sub
ss
push
bound
sbb
into
test
mov
lcall
push
pop
cmp
push
mov
nop
xchg
rcll
jp
mov
dec
adc
inc
xor
pop
inc
add
xor
add
lret
push
ds
cld
repnz
sbb
testb
mov
out
icebp
test
divb
cli
mov
int3
and
sbb
dec
push
push
mov
pop
imul
insl
mov
pop
out
xchg
inc
les
sbb
mov
sub
lods
pop
and
sbb
mov
mov
loope
xchg
outsl
sbbl
cmpsb
mov
or
addb
and
call
cmp
push
mov
sub
ficomps
aam
loope
jmp
cmp
mov
out
and
xchg
das
int
test
fwait
dec
in
inc
imul
sarl
sub
mov
xor
jmp
adc
enter
add
cltd
unpckhps
cs
push
in
add
cmp
xchg
cmp
jg
xor
jne
and
das
xchg
out
test
enter
xchg
out
xorl
aad
test
push
cld
xor
sahf
mov
jmp
idivb
pop
stos
xor
pop
stc
mov
pop
mov
inc
fs
pop
lret
imul
dec
bound
stos
lods
cmp
cwtl
push
xchg
inc
pop
cltd
int3
push
es
pop
dec
out
push
or
jbe
in
ror
and
xchg
add
jo
ds
mov
sti
pop
xchg
inc
nop
xor
adc
daa
pop
insl
sbb
lods
pop
es
xor
push
js
add
add
jns
bound
sbb
in
push
outsl
dec
inc
test
dec
nop
inc
pop
out
sbb
cmp
sub
xchg
add
xchg
lcall
or
dec
inc
jle
dec
les
inc
scas
nop
and
adc
jmp
cli
sbb
lods
je
mov
aam
cli
test
mov
addb
push
jl
inc
jno
cmp
xchg
pop
pop
push
subb
pop
jae
cmp
scas
inc
jmp
in
das
push
bound
cs
push
roll
add
sbb
jns
pop
fmull
mov
pop
fdiv
push
aad
cld
outsl
and
lea
xor
cmc
xchg
cmp
lahf
insb
out
inc
jae
push
inc
xlat
add
pop
pop
inc
std
mov
clc
adc
cmc
jo
test
cmp
inc
icebp
je
jb
aam
push
aas
mov
stos
xchg
mov
add
ficomps
sbb
jmp
xchg
in
cmp
xchg
cli
push
ret
mov
cmp
clc
xor
dec
inc
orb
out
xchg
daa
xor
sarl
mov
cli
push
aam
in
out
xor
repnz
xchg
imul
neg
mov
popf
adc
push
jg
lret
cld
or
mov
lock
mov
jle
dec
mov
push
sbb
mov
clc
rcrb
cmp
mov
jns
or
add
and
sub
adc
jmp
cmp
cmpsl
jne
cmpsb
and
pusha
enter
dec
jg
xor
push
pop
popa
movsl
loop
in
xchg
cmp
and
mov
aad
roll
sub
ljmp
lods
sahf
popl
aas
insb
in
test
in
inc
jo
and
das
popa
xor
loope
pop
push
jp
add
xor
pop
pop
out
dec
into
fwait
mov
cmpsb
mov
cmp
cmp
lahf
push
ds
pop
repz
and
fdiv
sbb
out
dec
stc
or
enter
push
jp
stc
sbb
push
lods
sbb
sub
push
cltd
aad
mov
enter
mov
pushf
cmp
dec
nop
or
ss
push
push
and
dec
pmaxsw
out
mov
jne
out
push
cmp
jg
add
xchg
out
stc
cli
inc
pop
push
sbb
movsl
dec
mov
popl
leave
xchg
std
and
mov
ljmp
mov
and
xor
cmpsb
imul
lds
in
jns
sbb
mov
movb
loop
lds
jb
bound
mov
dec
mov
mov
sub
lahf
mov
insl
jle
and
into
into
push
cs
rcrb
rorb
xor
clc
xor
imul
mov
pop
outsl
inc
lret
rcrb
jno
inc
bound
sub
dec
pop
adc
stc
cmove
in
or
es
mov
outsb
cli
fwait
nop
pop
in
sub
movb
mov
loope
std
jo
jge
mov
idivl
stos
cmp
pusha
or
mov
in
push
xchg
sahf
popf
addb
es
std
dec
push
push
push
adc
adc
fdivrl
adc
es
push
push
xchg
jl
xlat
lds
fcomi
push
xchg
jecxz
jno
pop
fildl
mov
jbe
test
es
push
mov
rcrl
loopne
or
cmp
orb
mov
mov
stc
cmp
call
aaa
and
fstl
call
fdivrs
stos
into
lods
push
std
inc
jg
lret
sbb
outsb
cmp
mull
cltd
xchg
jmp
scas
lea
mov
shrb
mov
repz
scas
add
aam
jne
jl
addr16
xor
in
shrb
popa
sub
fdivl
int3
xor
pop
out
cwtl
das
push
push
adc
mov
stc
dec
pop
lock
adc
push
xchg
icebp
repz
ljmp
mov
orl
repnz
xchg
les
imull
imul
inc
es
xor
push
xchg
rolb
ja
jb
pop
pop
clc
jle
lds
push
scas
mov
or
mov
stos
sbb
repz
enter
sbb
loope
xchg
cmp
imul
xchg
jns
das
jge
popf
xor
xchg
enter
out
sbb
lret
jp
mov
gs
popa
push
xor
adc
mov
add
insb
adc
cmp
pop
movsb
jo
xor
fidivs
dec
iret
lea
dec
mov
fbstp
pusha
sub
fistpl
fsubrs
xchg
dec
fistpll
loope
inc
xor
shrl
fcoms
cmp
mov
out
lds
and
cltd
das
sub
ljmp
xchg
xchg
pop
lods
lret
lea
lea
add
dec
jle
test
adc
ja
in
das
mov
movsb
rcl
scas
pop
ret
jl
aaa
and
aad
mov
mov
fwait
push
sbb
jg
add
stc
jle
fwait
pop
adc
in
mov
push
outsl
jb
je
fwait
jecxz
push
xchg
push
fiaddl
push
fimull
mov
data16
pop
or
push
and
inc
lea
dec
xor
aad
pop
fwait
push
inc
or
mov
inc
iret
pop
cmp
cmpsb
and
add
in
shr
pop
fcoms
jp
mov
scas
xchg
inc
jle
inc
push
dec
xchg
pop
mov
xchg
pop
cmp
cltd
jne
int
loop
cltd
mov
stos
les
mov
mov
inc
xor
jle
mov
mov
jno
and
push
xor
cmc
push
adc
or
icebp
jo
test
or
fdivs
jbe
jne
or
out
mov
sahf
fdivs
jne
jae
mov
nop
rol
pop
fisubl
dec
dec
and
and
fmul
pop
pop
or
ret
sub
cld
xlat
cwtl
mov
pop
or
icebp
out
lods
out
daa
scas
and
xchg
xchg
adc
movsl
in
mov
or
pop
testb
lret
scas
lea
insl
jne
add
sub
push
mov
addr16
movsb
arpl
ret
push
mov
sub
hlt
add
dec
add
mov
inc
xchg
sub
and
pop
fldl
jecxz
adc
mov
jns
jmp
push
sub
fcomi
pop
dec
inc
jmp
cld
lret
outsl
xchg
mov
mov
jno
mov
cmp
inc
mov
jmp
sahf
sbb
and
lea
inc
push
adc
cli
das
dec
lahf
outsb
push
lock
mov
xor
lahf
cmp
xor
insb
lds
cmc
movnti
aad
jae
mov
adc
cmp
or
pusha
push
popa
jb
mov
test
mov
mov
mov
lcall
jno
mov
outsl
cmp
cld
adc
xor
lahf
push
pushf
dec
scas
insb
sbb
hlt
mov
xchg
pop
mov
addr16
jle
in
add
test
test
sti
movsb
mov
jecxz
cmp
xchg
mov
sub
icebp
fcomip
mov
in
jnp
insl
xor
fmull
sbb
fimull
mov
test
mov
mov
push
inc
sbb
pop
pop
leave
jle
dec
push
loop,pt
mov
subl
mov
imul
dec
clc
xor
dec
movsb
es
pop
sub
xchg
dec
inc
add
repz
jns
sahf
out
dec
iret
pushf
roll
js
mov
adc
mov
outsb
xchg
jae
pop
fsub
or
pop
fldenv
mov
xor
xorb
movsb
inc
pop
adc
inc
push
mov
dec
and
data16
jle
outsl
repnz
ss
mov
fistpll
sub
data16
pop
mov
out
pop
mov
fcoml
pop
push
mov
addl
xor
sub
add
jp
fmull
xchg
icebp
inc
lcall
or
push
mov
mov
inc
dec
addr16
das
cltd
lret
shlb
aam
in
outsb
bound
push
aad
jge
xor
xchg
insl
mov
stos
mov
pushf
xorb
lcall
jmp
sti
sbb
pop
ror
inc
push
jge
inc
sahf
mov
mov
fwait
sub
add
das
pop
das
jae
cmpsb
ret
lcall
in
jle
in
add
jo
xchg
clc
mov
mov
ljmp
cmp
xor
call
xchg
mov
cltd
xchg
les
in
subl
aas
lods
outsb
lock
pop
jge
pop
fsubl
dec
ficoml
pop
fwait
xor
jns
lods
mov
xchg
testb
cmp
aam
xchg
insb
fbld
push
sarl
cmc
inc
push
pusha
scas
push
movsb
ljmp
mov
jbe
mov
lods
lea
sub
insl
rolb
enter
mov
ljmp
sub
gs
jmp
mov
push
jl
pop
pop
inc
push
xchg
mov
adc
jbe
jle
orb
or
add
ret
cmp
aaa
mov
push
push
and
pusha
sbb
add
out
ret
enter
idiv
pop
repnz
xchg
out
ja
xor
adc
push
out
xor
and
push
andb
in
sub
outsb
ret
mov
dec
mov
cmp
imul
push
pop
ret
roll
or
cltd
dec
adc
cs
sub
sbb
jae
subb
sbb
loope
dec
insb
mov
lret
jo
cs
xlat
stc
shr
xchg
lods
aam
dec
sbb
mov
insl
rcrl
or
data16
xor
jne
and
lret
rcll
xlat
ss
dec
mov
pop
sub
rorb
stc
xor
stos
pop
mov
test
decl
pop
cmpsb
nopl
or
jp
pop
push
aas
lcall
cmc
js
imul
cmp
lods
fidivrs
pop
mov
aad
subl
sbb
jge
fwait
inc
rolb
jno
jns
push
rcrb
jo
jnp
add
das
jle
in
fwait
stc
int3
jge
jno
leave
cmp
ss
lret
int
mov
cwtl
sub
push
pusha
sbb
jmp
imull
push
lahf
mov
cmc
mov
or
in
cmp
arpl
pushf
xor
push
or
jb
sub
stos
or
sub
xchg
and
sub
dec
mov
insl
push
ss
cwtl
fstpl
fcom
inc
or
aaa
mov
push
xor
out
mov
and
les
ja
push
pusha
movq
fsubrl
and
out
and
pop
subb
loop
jnp
xchg
icebp
cmp
test
sbbl
mov
dec
cmp
pop
lahf
comiss
rcrb
add
adc
add
inc
and
xor
pop
mov
cltd
clts
fld
jmp
or
mov
xor
iret
xor
xchg
std
mov
sub
testl
ss
popf
xchg
jge
out
mov
jp
out
mov
sbb
out
and
push
push
mov
and
fwait
jge
pushf
adc
mov
and
rcl
call
jecxz
cmp
cmp
cmpsl
sti
pushf
ds
jmp
packuswb
push
pop
addb
sub
fwait
ljmp
repnz
jbe
shrl
popa
sti
outsb
adc
shll
mov
add
mov
test
imull
fadd
es
lret
outsl
out
xchg
arpl
enter
sub
jmp
pop
arpl
xor
loopne
scas
adc
fcmovnb
mov
inc
jnp
fnstsw
mov
inc
test
mov
sub
in
sbb
ljmp
or
inc
mov
test
sbbl
std
push
dec
cld
inc
inc
pusha
shlb
fildll
stos
or
or
repnz
pop
inc
in
nop
mov
ja
into
mov
rorl
mov
sbb
outsb
cmp
jno
out
mov
push
add
and
dec
or
shll
stc
or
push
sub
leave
add
cs
push
repnz
mov
cld
adc
lea
fbld
jle
cld
movl
fimull
mov
cmp
xlat
hlt
xchg
cmp
push
out
dec
adc
pushf
and
mov
jo
cmp
pop
subl
stc
push
je
out
xor
xchg
xchg
cld
and
out
lods
jns
inc
mov
xor
sub
sub
outsb
jno
scas
nop
outsl
sub
xchg
loopne
shrb
fcmovne
inc
sahf
sub
and
sahf
sti
add
xor
fisttpll
stos
fs
or
insl
mov
inc
jnp
test
push
jbe
xlat
pop
rcl
xchg
ja
sahf
mov
cmp
popf
push
or
mov
testl
daa
outsl
adc
jge
es
or
push
or
sub
cs
xlat
mov
scas
sub
xor
aaa
pusha
dec
fisubs
cmpsl
mov
jp
addr16
ds
sbb
js
lods
and
lret
movsb
add
imul
inc
dec
sahf
adc
icebp
inc
hlt
sbb
push
push
jo
addr16
and
gs
adc
addl
dec
loop
dec
sahf
sbb
cmp
jbe
scas
sbb
cwtl
sub
outsl
repnz
ljmp
jae
dec
mov
js
cmc
push
mov
add
ret
loope
int3
idivb
dec
sub
fwait
test
js
lods
pop
loope
pop
pop
xor
sub
addl
jle
js
sub
repnz
cmpsl
mov
movsb
pushf
xchg
sbb
shrl
nop
cli
adc
scas
mov
test
ss
in
aam
sbb
les
jb
daa
fcmovnbe
sub
mov
popa
inc
mov
movb
and
fdiv
rol
mov
sarb
jne
mov
add
add
fldcw
lret
push
cs
mov
jb
cld
fwait
test
jne
aad
mov
jne
mov
jno
push
test
sub
test
iret
js
test
push
shlb
fsubr
xor
jnp
xchg
mov
xchg
repnz
xor
aaa
xchg
dec
push
push
push
in
push
dec
test
call
lods
lods
sub
mov
cmc
inc
ss
sub
xor
das
ret
pop
cmp
cmpsb
mov
mov
cmp
push
dec
int3
dec
mov
fdivrl
dec
jno
add
std
fldl
mov
mov
ja
andb
jmp
dec
add
mov
lods
inc
or
or
mov
lret
popf
scas
lods
sahf
mov
cmp
and
sbb
push
pusha
dec
cmp
divl
sbb
and
inc
inc
mov
in
sbb
shl
movnti
xor
aaa
sbbb
sahf
push
sahf
cli
aam
pop
adc
jge
stc
rcll
xchg
adc
xchg
xor
and
out
mov
push
int3
mov
jbe
mov
cmp
pop
sarl
and
sbb
cmc
jnp
cmp
hlt
mov
xchg
pop
scas
dec
mov
sahf
add
inc
lcall
xchg
cli
and
mov
stc
adc
jg
jmp
mov
pop
sbb
mov
test
cmpsl
leave
inc
fwait
adc
test
rcr
jmp
mov
sub
addr16
xlat
jl
cld
mov
cwtl
adc
cmc
mov
call
in
mov
xchg
std
lods
loop
insl
jno
enter
lea
xor
dec
gs
fimuls
cmp
pop
fucompp
int
outsb
test
inc
adc
inc
xchg
fdivrl
ret
ss
mov
xor
or
xchg
xchg
ret
mov
xchg
data16
subl
xchg
jns
pop
ja
xchg
fstl
or
iret
mov
popf
adc
push
fstl
orps
test
outsl
pop
lret
fwait
pop
icebp
shll
push
mov
ja
push
and
jb
idivb
sqrtps
outsl
icebp
lock
mov
inc
sub
imul
fisttpl
mov
aaa
cmp
inc
sbb
lret
inc
jnp
push
iret
jge
lds
loopne
and
xor
mov
and
xor
or
pushl
or
dec
jl
loop
mov
repz
mov
lcall
daa
push
pop
sbb
mov
mov
test
icebp
jno
cs
and
dec
lods
pop
mov
rcll
mov
pop
sar
das
sti
sbbb
mov
lock
lret
in
xchg
push
cmpsb
pop
mov
lods
cli
inc
insl
sbb
std
js
and
lods
push
in
addr16
inc
and
stc
push
jmp
xchg
out
shlb
inc
sti
add
push
sti
push
or
nop
jg
cmc
inc
push
jg
cmp
sbb
outsl
out
inc
adc
mov
cmc
bound
mov
stos
jecxz
mov
imul
int3
out
xor
mov
loope
add
push
int
lret
sub
or
fld
xchg
pop
mov
loopne
mov
mov
lahf
neg
adcl
outsl
gs
lcall
test
ljmp
stc
xor
cmpsl
inc
pushl
test
push
sub
out
mov
stos
mov
into
push
sbb
mov
hlt
jmp
and
adc
dec
in
adc
or
repz
lret
ljmp
insb
inc
sti
mov
ljmp
pop
movsb
dec
inc
or
test
xor
dec
shrb
repz
cwtl
arpl
in
push
stc
mov
pop
xor
fwait
icebp
xor
flds
mov
fdivs
insb
inc
jno
std
inc
push
les
out
xchg
jp
mov
cmc
cmpsb
push
in
or
loope
imul
push
les
fucom
jns
sar
cmc
rcrb
mov
lcall
je
jb
cmc
lret
sbb
xchg
jmp
call
push
sbb
popf
pop
cmp
jno
inc
pop
adc
inc
dec
mov
adc
dec
out
xchg
leave
outsb
push
aaa
rorl
mov
mov
push
xchg
fidivs
adcb
fnstenv
ja
xor
jg
or
xor
jb
cmp
popf
je
mov
jl
mov
das
sbb
filds
pop
push
xor
push
xchg
cmpsb
gs
movsb
std
das
dec
imul
call
cmc
sbb
cmp
and
mov
addr16
cwtl
mov
push
or
fisubrl
jge
mov
movl
cmpl
je
cmpl
jne
pushl
push
push
push
pushl
pushl
call
cmpl
jne
xor
xor
dec
mov
mov
dec
mov
jmp
mov
or
xor
xor
mov
orl
add
movl
cmp
je
movl
mov
jmp
movl
mov
cmp
movl
jne
push
jmp
mov
mov
movl
cmp
jne
mov
or
mov
mov
xor
subl
add
mov
and
mov
neg
mov
mov
xorl
xor
sbbl
jmp
push
mov
notl
int3
or
pushf
aam
jp
sbb
jp
out
cmpsb
arpl
and
pop
cmp
cs
xor
jno
repnz
mov
or
mov
jge
lock
or
pop
imul
fwait
mov
lods
jg
inc
imul
add
pop
inc
pusha
dec
movsl
xchg
push
or
ret
fidivl
cmpsb
gs
mov
rcrb
cli
mov
push
pop
sbb
mov
mov
idivb
xchg
sub
pop
fcompl
fidivs
jmp
out
repnz
lahf
popf
push
push
rcrl
sbb
shl
aad
sub
adcb
mov
mov
testl
sbb
sbb
insb
arpl
dec
addl
das
ret
nop
sub
sbb
dec
movsl
fs
imul
sbb
push
stos
xorb
in
aad
test
cwtl
inc
xchg
add
inc
movsl
add
adc
sub
adc
fdivl
push
bound
andl
lods
mov
dec
lcall
sbb
pop
mov
scas
sbb
push
lcall
jge
adc
into
clc
jecxz
mov
mov
in
jle
jmp
sbb
loope
fbstp
xor
xor
int3
pusha
xor
sbb
fwait
inc
sub
insl
sti
stos
dec
ret
nop
jo
sbb
rcr
cmp
cmc
pusha
fnsave
adc
push
scas
pop
fcmove
cli
int3
xchg
int
mov
xchg
repz
lahf
lock
or
inc
arpl
sbb
lahf
pop
mov
dec
add
push
adc
repz
aam
and
lea
insb
mov
pop
jo
pusha
jae
das
sbb
fsubrl
subl
mov
add
faddp
or
out
sahf
fwait
sarb
imul
jge
pushf
fwait
jnp
inc
adc
add
lods
and
call
movsl
movsl
inc
in
jno
ret
adc
stos
daa
cmpsb
fidivl
inc
sub
pop
aas
mov
test
lods
jno
push
jl
sbb
pop
daa
mov
ficoml
lcall
scas
mov
push
sub
push
inc
bound
out
out
mov
dec
loope
mov
pusha
push
ds
push
mov
xor
out
lcall
pop
mov
sbb
notl
jp
stos
xor
cmp
cmp
jae
aas
mov
sbb
fcmove
sub
fmull
pop
jne
call
addb
aas
shrl
outsl
add
decb
leave
cmp
divl
xor
stc
mov
popa
fcoml
int3
scas
lret
push
icebp
lret
add
cli
ror
xchg
out
das
adc
add
and
push
inc
sbb
xor
inc
mov
scas
push
pop
js
mov
loopne
xor
shll
je
add
and
push
or
dec
jae
jnp
mov
shrl
jle
imul
out
outsl
mov
sarb
mov
in
test
int3
jne
js
das
nop
inc
repz
lcall
ret
xchg
lret
in
xchg
xchg
or
mov
dec
push
add
and
inc
xor
repz
jo
jae
inc
test
cmp
and
pop
sub
mov
push
jmp
cmc
lahf
mov
push
add
and
test
outsb
ret
cmp
fwait
xor
pop
test
push
add
mov
test
ret
add
add
mov
je
repz
mov
or
dec
mov
bound
pop
or
and
xor
mov
cmc
cmp
sbb
adc
mov
cmp
rorl
lods
hlt
sub
lock
dec
push
stos
int3
mov
mov
add
cmp
pop
xor
fwait
pop
stos
lahf
nop
iret
cli
sub
add
dec
dec
sub
cli
call
push
sti
mov
dec
jb
mov
mov
and
mov
jns
sahf
jbe
and
mov
imul
fs
mov
mov
incl
xchg
test
mov
in
jmp
xchg
insb
notb
repnz
test
xlat
jge
push
xor
push
js
movsb
pop
push
mov
lea
jb
test
inc
dec
repz
incb
in
push
fdivrl
dec
push
popa
xchg
addr16
lret
decl
repnz
loope
pop
jp
out
ja
addb
rol
mov
clc
lret
mov
je
sarb
xchg
popa
ss
sbb
fiaddl
push
jg
xchg
xchg
testb
out
xchg
sbb
shll
out
popa
loope
js
std
fisubrs
mov
out
leave
and
icebp
lods
movsb
ret
enter
aad
jmp
xchg
test
push
shll
pusha
jle
test
jle
mov
xor
cmpsb
cmp
inc
xchg
cwtl
arpl
adc
ss
pop
xchg
or
adc
fs
in
push
and
jae
mov
adc
lret
adc
xchg
mov
arpl
pop
push
dec
push
sbb
push
adc
jp
movsl
mov
mov
sbb
xor
in
mov
push
mov
mov
jmp
negb
jno
cld
mov
mov
cwtl
daa
cmpsb
pop
push
mov
pop
std
inc
jecxz
enter
fldcw
rcr
les
add
dec
sub
inc
jg
pop
mov
test
movsb
mov
push
in
push
into
xor
outsb
pop
sub
mov
leave
fstp
lret
adc
jecxz
pop
xchg
movsl
jl
push
cmp
imul
jbe
rolb
xor
fcompl
sub
pop
inc
inc
cmp
pop
fstpl
xchg
xchg
pushf
arpl
mov
adcl
cwtl
mov
lods
repnz
aad
bsr
addr16
adc
cmp
mov
or
jb
xor
inc
pop
sub
add
pop
add
pusha
addr16
xchg
pusha
cmp
add
sahf
cmpsb
cmc
lds
movsb
push
or
aad
in
mov
inc
and
mov
repnz
or
dec
js
arpl
hlt
fdivrs
cmp
lcall
les
jno
jecxz
jle
xchg
and
jmp
loopne
sahf
jno
shlb
ret
inc
popf
cmp
mov
inc
jmp
in
jecxz
mov
xchg
sbb
sahf
dec
out
shlb
xchg
lret
insl
pop
inc
push
or
add
enter
and
hlt
dec
test
inc
mov
xchg
cmp
and
ljmp
jmp
push
xchg
mov
mov
test
sbb
or
int3
xor
sub
pusha
scas
jae
scas
int
mov
jns
pop
push
sahf
xor
orb
mov
add
and
insb
adc
mov
xlat
imul
enter
bnd
adc
arpl
cmp
inc
add
jno
sub
mov
loop
inc
dec
mov
in
jnp
xor
sbb
les
fdivs
xchg
mov
stc
inc
mov
gs
inc
pop
scas
add
dec
in
and
sub
ret
xchg
and
push
dec
fmull
cmp
pusha
stos
insb
and
or
mov
jle
sub
pop
jns
and
lea
insb
jle
movsl
jge
jno
mov
add
sub
xchg
adc
cmp
outsb
cltd
mov
mov
loopne
subb
orb
dec
sbb
sarl
aas
test
xor
jle
out
sbb
lock
les
push
pop
je
sbb
inc
inc
push
sub
sahf
adc
dec
popf
mov
push
lahf
test
scas
mov
cmp
subl
jp
adc
addr16
nop
jg
pop
sub
popf
lea
jns
mov
and
mov
add
je
mov
dec
and
fstpt
out
fimuls
inc
or
and
icebp
push
xlat
cmpxchg
enter
addr16
add
ret
cmpsl
jbe
loop
pop
and
fcmove
pop
ja
test
outsb
cmp
lcall
inc
cmpsb
icebp
lret
addl
xchg
movsb
add
mov
add
je
mov
vpshufd
les
or
arpl
mov
cmp
call
je
inc
out
mov
mov
shlb
inc
stos
jge
outsb
aam
xor
loopne
popa
mov
or
xlat
mov
xchg
push
xchg
mov
fsubrl
fs
push
jbe
mov
in
in
lea
negb
jnp
mov
test
lahf
inc
add
dec
cltd
fs
add
pop
fiaddl
pusha
mov
jg
popf
test
xchg
cmp
cmpsl
sarl
in
push
lret
inc
call
add
dec
sahf
dec
cmpsl
pushf
gs
mov
or
push
jbe
fdiv
dec
call
addr16
arpl
add
dec
enter
xor
dec
ljmp
repz
hlt
ljmp
mov
loope
and
push
mov
lds
cmp
jnp
int3
mov
insl
sub
arpl
adc
in
psrad
and
or
xor
ljmp
movsl
adc
lcall
lcall
leave
sub
xchg
lds
sbb
ror
nop
fists
mov
es
rolb
mov
mov
movsb
xchg
mov
loope
pop
imul
pop
jmp
insl
in
sub
jb
andb
out
jne
push
mov
add
lods
mov
nop
sbb
aad
add
test
pop
rcrb
adc
int3
or
pop
push
addr16
pop
cmp
mov
dec
insb
pop
sahf
mov
bound
aad
add
iret
add
fcmovne
mov
lods
popa
add
push
pop
and
mov
aas
or
jae
cli
sbb
xor
add
or
fmuls
sub
inc
mov
xor
pop
fdivrs
inc
mov
xor
sub
stos
mov
test
sbb
scas
push
xor
out
sahf
mov
mov
inc
dec
mov
or
xor
popa
adc
jo
or
into
and
addb
push
xlat
add
inc
inc
rcrl
sbb
cli
into
je
je
nop
mov
inc
or
ja
cmp
in
fisttpll
xchg
mov
jnp
test
addr16
out
js
jp,pt
pop
mov
cmp
adc
mov
ss
sub
in
xor
int
sub
fisubs
stos
sub
sbb
push
cmpsl
sub
xlat
les
popf
push
sarb
int3
repz
dec
and
mov
add
rcrb
xchg
jl
sbb
push
cmp
adc
adc
sbb
pop
xlat
jecxz
sub
stc
sbb
push
jne
push
jnp
jl
add
mov
xchg
insl
enter
in
outsl
fwait
js
movsl
lods
roll
and
sbb
and
cmp
and
rcll
or
xorb
inc
loopne
pushf
out
loop
pop
popa
pop
into
pop
jae
xor
xor
aad
jg
jle
popf
pop
adc
loop
arpl
sbb
dec
xchg
xor
push
scas
sub
aas
stc
or
repnz
sbb
mov
push
popa
popa
mov
into
xor
jns
cmp
ss
jbe
out
pop
leave
lods
insb
jns
xor
leave
loop
push
call
mov
ret
outsb
mov
sbb
out
push
fdivl
outsl
sbb
inc
and
pop
popa
sahf
aas
es
xchg
ret
xchg
fstl
lods
pop
dec
outsl
pop
and
clc
dec
in
push
pop
adc
adc
stos
jns
fdivrs
mov
add
pop
sarb
icebp
dec
jbe
nop
push
repz
xchg
imul
dec
subb
and
shl
lds
jbe
inc
dec
sbb
out
pusha
xor
out
leave
or
test
xorl
sbb
jne
dec
push
or
jbe
mov
icebp
in
cmc
jecxz
jp
sbb
mov
xor
push
into
int3
lret
in
outsl
call
stos
mov
and
and
pop
aam
subl
fdivl
push
into
js
xchg
cltd
mov
pop
jns
rolb
or
mov
ret
xchg
fildl
pop
enter
in
mov
mov
testl
data16
test
sbb
mov
add
add
mov
mov
in
push
xchg
dec
stc
in
pop
pop
pop
shrb
dec
mov
xchg
lods
sub
sahf
fs
addb
jecxz
lcall
fwait
add
jl
scas
dec
xor
popa
jmp
adc
add
jae
test
sahf
add
and
repnz
lcall
leave
xchg
inc
bound
stos
enter
mov
repnz
fnstenv
aad
addr16
jge
imul
and
stc
out
pop
popa
sub
pusha
jno
adc
roll
in
jmp
or
inc
in
or
xchg
les
icebp
or
and
scas
js
jno
mov
pop
outsb
sbb
lret
out
aaa
xchg
ja
dec
jmp
push
and
pop
loop
mov
mov
rolb
jmp
in
dec
shl
dec
mov
adc
popf
nop
ret
push
fmull
test
aas
xchg
adc
rolb
imul
adc
outsl
add
filds
shr
loope
xchg
and
add
dec
loope
inc
xor
roll
out
fs
nop
pop
push
add
pushf
cmp
lahf
mov
mov
adc
sbb
xor
popa
test
clc
xchg
pop
std
sahf
ja
mov
rcl
or
xchg
notl
sub
pop
fiadds
sbb
inc
inc
sub
or
pop
lahf
mulb
leave
xor
aad
imul
in
fisttps
mov
jge
and
or
cs
adc
cltd
jle
lcall
es
sti
sbb
adc
jae
imul
mov
inc
lock
stos
add
sub
mov
pusha
mov
or
lahf
pusha
sbb
add
in
mov
dec
dec
xor
cwtl
aam
movsb
paddsb
pop
aaa
cli
xor
mov
inc
mov
xor
pop
push
testb
cltd
and
xor
adc
rcr
xor
addb
pop
pop
fucom
push
and
shrd
xor
jle
adc
cmp
sbb
js
out
jbe
pop
adc
push
cmp
jnp
mov
inc
cmp
dec
and
jbe
sub
fnstsw
inc
mov
sbb
rol
in
mov
jl
or
mov
fcompl
notb
dec
sti
lret
orb
out
shlb
popa
add
sbb
jnp
rcl
adc
pop
dec
in
pop
mov
xchg
cmp
mov
add
repnz
jno
xor
stos
stos
or
xchg
dec
jmp
pop
and
test
pop
cmpsl
pop
or
repnz
jge
inc
cltd
cmp
dec
sub
pop
ret
or
jge
mov
je
pop
add
leave
dec
les
movsb
xor
aam
in
cld
int
inc
xorb
sbb
leave
cmpl
mov
into
in
popf
popf
daa
xchg
cmp
jbe
adc
pop
and
pop
in
sbb
cmpsb
or
mov
pusha
pop
mov
loop
add
lock
mov
push
out
inc
subb
jbe
adcl
and
cwtl
pop
add
test
jb
ret
in
adc
aas
mov
lcall
inc
mov
aam
add
push
push
cmpl
aaa
or
mov
sbb
dec
xchg
mov
or
and
pop
sarb
test
xchg
inc
adc
fldt
testl
jmp
push
cmpsl
std
xchg
inc
mov
pop
mov
in
sub
xchg
jle
cmp
popf
pop
xchg
sub
jmp
repz
xchg
aaa
inc
sbb
out
movsl
sbb
loopne
add
mov
ss
sbb
lahf
jb
or
push
mov
mov
cmc
xor
xor
js
push
xchg
sub
dec
adc
fs
jg
adc
test
inc
in
lods
mov
clc
enter
ss
mov
sti
sbb
adc
push
mov
imul
jae
fadd
xor
lods
adc
in
mov
and
sub
adc
and
sahf
out
mov
lods
popf
mov
shl
cwtl
je
mov
mov
pop
or
pop
mov
cwtl
out
addr16
mov
sbb
sbb
xlat
mov
xor
xchg
fildll
aas
mov
arpl
push
cmc
iret
movsl
mov
and
iret
xchg
fxch
test
inc
mov
push
dec
cmp
adc
jl
out
sarl
xchg
adc
cmpsl
nop
std
imul
jne
fwait
test
jp
pushf
in
push
push
rcrb
gs
mov
add
jae
jae
shlb
frstpm(287
push
outsl
test
shlb
mov
sbb
ss
sub
in
mov
inc
pop
scas
repnz
xchg
xor
dec
cmpb
cmp
xchg
jg
and
mov
cmp
pushf
das
ja
mov
insl
sub
cli
bound
in
scas
jae
cmc
dec
xchg
pop
cmp
cmp
sbb
adc
lock
dec
xchg
xchg
outsl
scas
push
xchg
imul
les
push
jns
mov
decb
sbb
and
jle
js
xchg
mov
dec
ret
mov
stos
and
gs
in
xchg
push
xor
jle
shrb
inc
fistps
xor
mov
jae
movsb
push
mov
lods
inc
jl
repz
out
mov
enter
and
add
dec
mov
mov
push
data16
and
xorl
lds
inc
ljmp
test
inc
fdivr
xor
out
jnp
rep
xor
clc
je
xchg
filds
cli
cli
loop
cld
cmp
mov
andb
jle
stos
xchg
push
push
mov
and
jne
or
inc
and
cmc
xchg
pop
adc
in
xchg
movsl
pop
fldl
dec
pushf
xlat
dec
out
pusha
cwtl
or
dec
movsb
sbb
pop
pop
sahf
dec
cmc
adc
outsl
push
arpl
aaa
jg
cmp
ss
outsl
jp
push
ss
mov
dec
jle
mov
fisubs
and
cmp
lock
mov
mov
adc
movsb
push
push
mov
sarb
or
fidivs
xor
mov
mov
enter
popf
imul
bound
fdiv
adc
xchg
mov
sbb
lds
pop
outsl
mov
add
sbbl
fmulp
push
outsb
push
or
insl
xor
jne
and
cmp
out
inc
inc
mov
mov
pusha
mov
in
and
xor
adc
jecxz
leave
mov
ds
mov
jo
mov
aad
mov
dec
pop
shll
std
bound
jge
popa
fcompl
inc
in
pop
mov
mov
in
loopne
or
add
imul
mov
jge
push
icebp
icebp
arpl
dec
push
out
mov
push
in
mov
ja
fisubrs
xchg
outsb
lahf
inc
xor
xchg
jl
push
loopne
push
inc
jp
stos
adc
insb
ret
negb
pop
xchg
push
fs
cmp
lcall
and
xchg
adc
jp
aad
push
dec
sarb
rol
or
out
mov
jns
cmp
push
cmp
cld
xor
into
cmp
and
mov
jmp
mov
in
mov
pop
push
movsl
cmpl
push
cmp
in
mov
std
cli
adc
bound
clc
rolb
push
cmp
xchg
adc
sbb
and
ss
or
jmp
ds
outsb
cwtl
in
mov
bound
test
icebp
outsb
in
jmp
fwait
dec
cmpb
cmc
sbb
clc
adc
and
mov
dec
ror
pushf
movb
es
mov
lods
pop
add
gs
cmp
mov
adc
mov
test
cmpsl
pop
mov
aam
dec
mov
xchg
js
adc
mov
sub
arpl
call
inc
fidivrl
mov
aas
mov
std
fmull
les
and
pop
dec
mov
pop
mov
cmc
jp
mull
mov
int3
imul
jno
out
out
jno
inc
popf
mov
mov
cmp
pop
pop
sbb
sub
outsb
mov
pop
test
jae
xor
je
add
outsb
mov
cmp
aas
or
jmp
push
stc
sub
inc
enter
add
dec
inc
jae
lcall
dec
pop
imul
sahf
or
loopne
lds
sbb
inc
jne
lock
int3
lret
inc
mov
test
mov
inc
gs
jne
loop
scas
cmp
adc
loopne
sub
aaa
cmpsb
push
dec
jge
pop
nop
cld
inc
fbstp
repnz
insl
xlat
cmp
cmp
mov
fiadds
adc
cmp
lea
mov
mov
xchg
iret
inc
dec
outsl
out
adc
jge
add
std
cltd
pop
or
sub
pop
sbb
fcomp
jl
je
cwtl
lahf
fwait
hlt
add
lret
mov
mov
loopne
mov
cs
out
std
pop
into
rcr
outsb
mov
movsl
out
pop
xor
rorl
or
lcall
adc
push
in
pop
pop
add
cld
rcrb
push
push
imul
jmp
cli
mov
stos
push
ds
sbb
mov
xchg
not
xchg
dec
gs
lretw
jnp
pushf
sbb
lea
adc
jge
push
dec
cmp
cld
ds
mov
out
in
pop
push
movsb
scas
jno
sub
shll
sub
and
push
xorb
cmp
push
jnp,pn
lea
lret
cmp
lret
xor
je
sub
fildl
jmp
lret
aaa
mov
cmp
mov
lods
lahf
sub
shll
movsl
add
pop
fadd
pop
lods
mov
lock
adc
lock
fwait
rcr
popa
repnz
hlt
insl
faddp
mov
pop
addr16
sub
leave
and
icebp
sub
cld
xchg
or
xor
insb
pop
cli
sbb
rol
push
lret
mov
das
into
sub
jl
movsb
dec
int
cmc
loope
or
sub
xor
aaa
insl
icebp
ja
aad
es
popa
jmp
dec
sarl
mov
pop
mov
mov
xor
fidivrl
fwait
sub
jle
xorl
les
ja
xchg
lods
cmpsb
push
sbb
fcmovnb
add
push
loopne
push
xchg
mov
lret
dec
pop
adc
adc
dec
orb
adc
imul
daa
mov
dec
pop
jmp
test
scas
add
popf
iret
cmp
jmp
iret
cltd
xlat
add
mov
sub
jecxz
dec
out
push
xchg
pop
btr
jae
roll
sub
pop
ret
sarl
in
pop
imul
mov
and
push
cs
andl
jecxz
pop
add
outsb
jl
adc
mov
cs
decb
data16
pop
xor
xchg
test
mov
arpl
sbb
lret
mov
std
or
cmp
fidivrl
push
dec
loope
adc
movl
lret
out
dec
mov
loopne
js
push
test
imul
and
adc
sbb
fdivl
lcall
add
and
dec
arpl
lock
cmc
leave
dec
loop
add
lcall
es
push
jne
adc
pop
and
test
jle
ds
imul
cwtl
adc
stc
jge
cli
movsb
ds
mov
jns
and
jmp
ret
cmp
lock
mov
pop
insl
xor
test
icebp
test
jno
pop
and
add
outsl
xchg
and
mov
in
mov
xorb
aas
mov
xchg
stos
lea
test
ss
daa
lret
xor
test
xchg
sub
mov
adc
xchg
xchg
sub
int3
enter
sub
stc
pop
out
fwait
gs
cmpsl
push
daa
cli
sbb
out
or
icebp
cltd
pusha
add
enter
or
test
xchg
out
adc
rcrl
movsl
pop
adc
stc
sub
adc
mov
daa
lret
push
je
sbb
sub
or
inc
decb
adc
push
cld
xchg
push
rorl
pop
adc
cld
sbb
push
xchg
insb
xchg
pop
sbb
roll
es
call
dec
inc
and
sahf
mov
mull
pushf
sub
mov
mov
rcr
stc
aam
int
loopne
aam
and
into
or
xlat
js
cmp
shrl
mov
sbb
push
das
mov
push
push
imul
dec
clc
pop
xchg
cltd
mov
pop
lock
lret
mov
repz
cwtl
cwtl
call
scas
stos
mov
adc
push
xor
loopne
adc
xchg
adc
notb
sbb
and
push
add
test
scas
push
mov
xchg
pusha
and
sub
test
js
das
loopne
and
xchg
sub
xchg
mov
stos
sub
stos
adc
lret
xlat
cld
dec
mov
cwtl
sbb
insl
fsubl
mov
adc
or
sub
xor
loop
mov
xchg
sbb
mov
jl
in
outsl
jmp
mov
imul
push
fcoml
imul
dec
add
js
ljmp
jbe
lods
call
lret
or
pop
sbb
mov
lock
cwtl
push
dec
stc
loop
pop
xchg
je
xchg
pop
xor
mov
inc
or
aad
jp
out
mov
dec
pop
inc
mov
jo
mov
loopne
xchg
out
adc
sub
push
xlat
loope
cmp
xchg
cmpsw
jl
insl
sar
imul
ja
xchg
mov
mov
xor
pop
cmp
adc
dec
aad
repz
fs
daa
fstps
test
adc
lds
cmp
xor
scas
pop
mov
fstl
push
dec
out
repnz
cli
lea
js
imul
sahf
rcrb
lahf
jo
xor
mov
jl
and
fs
and
cld
add
cmpsl
mov
jb
mov
cmpsb
ss
cs
dec
jmp
dec
adc
pop
fwait
jp
cmp
lods
cmc
jo
and
dec
jge
int
push
in
cmp
pop
mov
xchg
insl
fs
push
fs
sbb
sub
adc
lods
mov
shrl
and
fucomip
inc
lret
and
jg
cmp
mov
push
sbb
movsl
and
mov
adc
mov
add
jb
inc
jae
fnstcw
and
cld
adc
sbb
sub
inc
push
arpl
es
dec
popf
pop
loope
pop
add
repz
loope
or
aaa
sbb
or
sbb
jmp
mov
rolb
xchg
push
sub
dec
pop
cmp
jb
shll
es
sub
push
xor
push
mov
sub
bound
popf
adc
hlt
sub
jne
ja
push
pop
enter
pop
insb
bnd
enter
orl
jp,pn
out
int3
shll
mov
aad
andl
mov
adc
push
lods
add
push
flds
adc
add
stos
jbe
mov
cmp
movl
movsl
ret
andb
dec
addr16
lock
adc
popw
xlat
pushf
jp
pop
add
push
push
fcomps
add
add
lods
jae
into
out
movsl
xchg
icebp
push
mov
push
cmp
xchg
push
fidivl
pop
add
std
adc
in
sub
outsb
loopne
mov
push
adc
and
pop
adc
pop
ljmp
iret
add
mov
movsl
fwait
inc
jl
aas
inc
jb
or
lcall
sub
xor
pop
xchg
aaa
or
and
das
fwait
pop
sub
mov
int
es
insb
outsl
push
xor
adc
cmp
stos
loope
int
or
sti
lea
add
scas
mov
pop
or
pusha
and
sahf
xchg
dec
sti
mov
push
imul
push
jno
in
inc
sahf
sbb
inc
push
cmp
repnz
jge
xchg
inc
nopl
aas
popf
aaa
cmp
ret
das
call
cs
xor
mov
aam
insl
jb
xor
sbb
mov
loopne
jecxz
arpl
add
in
bound
or
mov
addr16
push
out
aam
push
xchg
lods
add
mov
and
push
push
jnp
cmp
or
aad
xchg
mov
inc
pop
mov
lds
jnp
inc
pop
loop
sbb
mov
dec
push
ret
cmc
andb
add
mov
push
aas
xlat
das
xchg
cld
or
sub
out
pushf
test
push
fs
rep
push
pushf
gs
dec
fmuls
or
dec
lds
iret
out
mov
shrl
test
mov
mov
and
popf
jecxz
inc
add
daa
test
cmpsl
mov
mov
faddl
fmuls
outsb
in
fisubl
enter
movsl
das
ret
cld
xchg
inc
dec
inc
clc
sahf
adc
xlat
mov
dec
gs
mov
xlat
or
bound
test
mov
xor
ret
in
lret
stos
and
xor
and
xor
add
in
clc
cwtl
cmc
pusha
dec
mov
push
fldcw
mov
popf
xor
movsb
loope
pop
enter
mov
xor
sarl
shrl
mov
popa
mov
pushf
jne
insb
popf
lahf
pop
inc
adc
xlat
jle
aad
push
subl
lds
stos
jge
sbb
das
test
jl
xchg
pop
xor
lea
rorl
in
into
sbb
sarl
and
shl
push
in
outsl
mov
inc
fsts
vpcmov
pusha
les
add
imul
or
mov
orl
xor
andl
add
movl
cmp
mov
mov
push
movl
je
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
call
jmp
mov
add
add
mov
sub
mov
xorl
xor
add
sbbl
imul
movl
mov
movl
jmp
mov
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jb
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
xor
adc
mov
mov
mov
mov
sub
add
xor
mov
add
mov
inc
mov
sub
add
adc
mov
mov
xorl
add
mov
mov
mov
xor
xor
lea
mov
xor
add
imul
mov
xor
sub
mov
add
cmp
mov
mov
jg
xor
mov
sub
add
jmp
xor
add
add
mov
mov
mov
xor
add
not
and
movsbw
mov
sub
mov
xor
mov
cmp
jne
movsbw
mov
sub
mov
xor
mov
cmp
je
mov
xor
mov
sub
add
jmp
mov
mov
mov
lea
mov
mov
mov
xor
add
mov
mov
mov
xor
add
pop
cmp
jne
mov
xor
mov
add
imul
mov
pushl
jmp
mov
add
mov
mov
mov
movsbw
mov
sub
mov
xor
mov
jmp
stc
add
pop
push
sti
or
mov
xchg
lret
sbb
jp
fdivs
inc
pop
jg
or
and
mov
cmp
ds
cmpsb
inc
dec
mov
inc
inc
or
loopne
push
mov
xor
gs
lock
sbb
cmc
mov
push
jg
mov
data16
jge
call
lods
mov
push
aad
cmpsb
aaa
clc
adc
and
mov
mov
mov
push
fisubrs
shrl
mov
data16
aad
out
xor
pop
push
or
subl
mov
lret
mov
xchg
pop
aam
push
movb
fwait
pop
jl
aad
lods
cs
cld
pop
push
scas
sub
xor
aam
jb
pop
mov
clc
call
xor
jp
mov
jnp
xor
mov
and
dec
and
jmp
cmp
xchg
dec
jl
xchg
aaa
aas
push
inc
xor
mov
leave
xchg
lahf
mov
loop,pn
roll
or
out
pop
movsb
cld
es
sbb
aas
xchg
mov
ficomps
int
sub
lods
insl
inc
jg
scas
xor
neg
movsb
mov
ret
mov
lds
push
or
pop
loope
jbe
inc
xor
pop
sbb
lahf
mov
aam
sbb
and
cmp
sarl
sbb
fwait
dec
sbb
insb
or
cmp
mov
mov
push
sbb
and
fwait
xlat
mov
test
test
mov
rclb
scas
add
clc
xchg
stos
mov
bound
mov
fisubl
or
pushw
fcmove
and
and
ret
imul
lcall
mov
rcll
mov
int3
enter
inc
xchg
inc
and
inc
aas
mov
in
xor
dec
xchg
aam
dec
sahf
loopne
xchg
ficoms
hlt
xor
test
loop
xor
jnp
pop
lahf
pop
int
xchg
lret
leave
xor
daa
and
fidivrs
xor
leave
test
flds
in
pop
daa
test
xchg
jnp
inc
mov
js
jns
out
test
sbb
jne
add
jmp
push
inc
push
inc
or
or
stc
pop
add
mov
xchg
inc
loop
imul
adc
imul
push
add
mov
shrb
mov
fildl
popa
adc
fwait
xchg
mov
jbe
and
rcll
push
or
mov
aas
cmp
cli
jp
pop
dec
arpl
mov
inc
addr16
gs
dec
xchg
or
jb
cld
call
fwait
out
out
ja
inc
les
cmp
in
aad
nop
pop
cli
outsb
lods
inc
ds
push
divb
js
dec
or
lods
pop
or
scas
sub
in
data16
pop
testl
lahf
mov
jnp
pop
xchg
popa
aad
out
loop
jg
fisttps
mov
inc
sbb
mov
arpl
mov
and
adc
xchg
out
jp
inc
int
pop
gs
jae
mov
loopne
xchg
loop
shl
push
and
mov
add
movhps
jb
enter
sbb
or
adc
cmpsb
lea
sub
lods
and
lock
movsl
xchg
shlb
cmp
mov
fildll
repz
jae
cltd
in
notl
pusha
mov
adc
sbb
mov
jb
out
test
sti
test
push
mov
cmpsl
das
sub
jno
jns
push
sahf
mov
sub
pop
hlt
fcoms
testb
stos
or
sub
jge
into
add
out
loopne
call
in
imul
repz
mov
scas
mov
cmpsb
es
cmp
sbb
jae
lock
clc
in
aaa
outsb
call
lods
sub
jge
js
pop
lcall
fldt
repz
ret
adc
loope
xchg
test
popf
pop
mov
cld
adcl
adc
movsb
inc
dec
sbb
push
out
add
sub
mov
stc
mov
jle
jecxz
in
cmp
push
pop
loope
sub
pop
sbb
outsl
clc
fdivrs
rcrl
insb
push
loop
inc
adc
xor
aam
mov
push
xor
xchg
fs
pop
cmpsl
stc
call
mov
mov
xchg
jmp
flds
aas
jo
stos
xchg
outsl
inc
inc
inc
jb
scas
sub
ds
out
insl
filds
pop
or
cmp
pop
sub
aam
or
andl
mov
pop
in
mov
lret
in
lret
pop
jg
xor
into
js
inc
push
outsl
sbb
icebp
lods
mov
push
inc
sbb
sub
les
mov
dec
imul
xor
dec
enter
into
sbb
std
aad
cs
push
fisubrs
out
ljmp
repnz
pop
adc
xchg
and
fstpt
cmp
xchg
inc
loopne
fwait
dec
sahf
rorl
jmp
fcmovnu
sbb
adc
out
push
leave
in
lods
mov
lods
cmpsl
loope
cmp
xor
add
ss
pushf
fisttpl
shl
xor
ret
dec
mov
push
pop
movsb
sbb
shll
loop
int3
inc
xchg
pusha
das
add
lcall
leave
sbb
dec
hlt
fisubl
cmp
sbb
stos
push
mov
jb
push
pop
cltd
loop
out
jl
pushf
mov
inc
pushf
sub
rclb
arpl
jecxz
sub
or
mov
hlt
or
outsl
cs
adc
jle
pop
lods
sub
icebp
je
sub
ss
mov
call
pop
loopne
dec
add
dec
clc
jl
push
iret
rcll
cmp
cmp
call
es
or
mov
push
popa
inc
stos
adc
or
jl
aad
out
dec
mov
mov
orl
dec
loope
adc
clc
fnstenv
xchg
movsl
mov
lock
in
dec
test
cltd
pusha
stos
add
pop
sti
or
out
ret
ljmp
stos
add
cltd
std
xchg
divl
jl
lds
and
int3
add
inc
xchg
adc
cwtl
mov
fdivs
test
mov
enter
adc
test
add
js
ret
jmp
inc
inc
dec
out
or
outsb
mov
inc
fwait
dec
in
mov
inc
rorb
adc
pusha
fstpl
hlt
push
sarl
xchg
movsb
xchg
out
test
cli
outsl
xor
js
outsl
inc
aam
out
ficoms
int3
add
add
loope
sti
or
jno
jne
fstpl
jl
xlat
inc
out
clc
push
sar
push
js
sub
jge
push
sub
sbb
ret
fxtract
cltd
mov
inc
imul
xor
faddl
nop
loopne
mov
aas
or
mov
push
data16
sbb
adc
ficoms
mov
imul
rcll
ret
cs
lret
adc
idivl
jb
cs
add
sbb
add
in
mov
sbb
adc
loope
pop
ljmp
mov
add
push
popf
out
push
jle
or
or
imul
repz
leave
xor
pop
fstl
xor
stos
repz
xor
sub
mov
stos
add
mov
mov
outsl
sub
jmp
push
push
in
aam
add
add
in
jno
fwait
test
add
or
out
popf
push
inc
adc
xor
cmp
faddl
cmp
mov
jns
mov
mov
dec
cmp
fsub
inc
push
sub
pop
xor
sahf
xlat
mov
imul
adc
movsb
scas
inc
mov
shlb
push
pop
dec
loopne
mov
fucomp
mov
mov
push
lods
int
or
int3
cmpsl
fadds
and
das
add
mov
shl
mov
lcall
loopne
call
fisubrs
xor
adcl
push
and
int
aam
inc
in
daa
stos
ljmp
xor
adc
lds
clc
mov
mov
push
jb
fdivrs
mov
xchg
in
xlat
nop
scas
aaa
mov
sbb
std
js
cmp
nop
dec
fdivrs
xor
lret
sti
adc
sub
adc
dec
dec
add
lds
push
xor
imul
sub
mov
jmp
subl
mov
lret
ljmp
insb
fsubrp
cmc
mov
push
clc
movsb
test
jne
loope
les
ret
mov
xor
push
iret
cltd
mov
jne
stos
insb
sbb
sub
cld
inc
fnstsw
mov
fsubrp
js
push
adc
mov
or
or
inc
dec
adc
dec
loopne
cli
add
insb
popa
and
add
and
outsb
gs
or
dec
xchg
icebp
pusha
mov
pop
in
jg
jp
mov
punpcklbw
insb
sti
mov
into
push
divl
or
mov
pop
xchg
or
or
scas
and
sbb
fisubl
movsb
inc
int
rcrb
inc
aam
adc
pushf
pop
roll
push
lahf
sbb
lahf
imul
or
adc
leave
jns
sahf
jmp
push
stos
cmp
pop
dec
push
ja
inc
mov
push
mov
out
or
out
fs
movsl
fdivr
ljmp
or
mov
cltd
clc
jp
xlat
sar
ss
stos
jcxz
loop
push
cmp
in
sbb
std
cmpsl
adc
out
je
xchg
test
shll
test
dec
mov
fisubrs
gs
sub
xor
jl
xchg
imul
and
ret
sti
sbb
in
fwait
in
cld
jle
pop
sbb
mov
fwait
cltd
daa
sbb
add
jbe
or
pusha
sub
movsb
loop
ljmp
fwait
dec
pop
push
push
mov
inc
je
negl
fistps
add
add
data16
sbb
xor
mov
std
jge
xchg
xchg
push
mov
push
popf
xor
repz
rclb
fcoml
xor
mov
sbb
sub
dec
pop
xchg
mov
pushf
pop
clc
and
lods
mov
xchg
jbe
sar
mov
inc
repnz
pop
jbe
dec
mov
pop
pop
frstor
pop
cmp
mov
fstpl
push
mov
mov
aaa
das
gs
xor
rclb
lds
mov
jge
cmp
push
imul
std
mov
loope
pop
pop
icebp
shl
jle
xor
cld
dec
out
mulb
js
nop
imul
mov
xchg
mov
and
popf
fwait
mov
adc
cmp
leave
or
dec
fsts
adc
xor
mov
mov
aas
cmpsl
stos
mov
mov
mov
push
inc
fnstenv
sub
sub
loop
sbb
mov
ret
xor
out
mov
add
and
jge
rclb
jns,pt
sbb
sahf
adc
scas
adc
mov
push
insl
push
pop
test
cltd
loope
jl
fists
repnz
sub
jg
mov
fs
or
icebp
imul
inc
jle
clc
scas
adc
popa
pop
xchg
mov
movsb
mov
iret
repnz
inc
push
or
or
ds
aad
xchg
arpl
dec
add
mov
pop
mov
xor
sbb
sbb
insl
jo
lock
sbb
lods
mov
dec
xor
sbb
xor
push
pop
setno
xchg
into
ret
mov
data16
add
ja
jbe
jae
jl
xchg
adc
mov
popf
daa
hlt
dec
xchg
mov
and
mov
push
xor
fistpll
lea
mov
sbb
xchg
push
outsl
adc
inc
pop
dec
rorb
adc
xlat
std
lds
outsl
mov
cmp
popa
int3
les
inc
and
aas
xchg
jle
inc
dec
mov
mov
cmp
or
movsl
pop
sahf
dec
or
in
imul
fwait
jg
xor
push
mov
cwtl
push
push
mov
pop
incl
movsb
clc
sbb
call
adc
cmpsb
push
adc
add
xor
rorb
leave
mov
adc
fldenv
push
inc
mov
in
mov
std
aam
mov
bound
xor
mov
mov
mov
xchg
imul
xchg
dec
sahf
sbb
int3
outsl
pop
xchg
gs
cmp
and
or
notl
cld
add
pop
fistpl
adc
movsl
or
push
adc
sub
push
loopne
jp
push
insb
sahf
scas
je
or
sahf
push
call
stc
jg
and
mov
mov
jno
jmp
popf
mov
mov
add
sahf
mov
push
xor
mov
stc
pop
out
scas
jae
inc
inc
pusha
call
jns
ja
out
or
and
aas
inc
das
mov
mov
out
inc
xorb
push
out
mov
out
adc
jns
iret
or
jg
add
cmp
repz
mov
daa
imulb
jne
pusha
cs
loop
push
enter
adc
jecxz
xchg
dec
lret
push
push
jle
or
test
into
inc
mov
movsl
inc
inc
inc
shr
push
ljmp
lock
stos
adc
lcall
adc
test
inc
push
pop
fldenv
mov
dec
mov
ret
mov
cmpsb
mov
scas
rcrb
lea
iret
or
dec
dec
andl
mov
inc
cmp
and
xchg
xor
or
and
mov
outsb
sub
and
jno
xchg
inc
jne
fwait
aas
pushl
push
xor
push
insb
andl
leave
inc
jg
enter
dec
les
ja
push
adc
cltd
pop
ljmp
loopne
nop
cmc
cltd
int3
pop
ds
jmp
adc
cmp
icebp
push
cmpsb
sbb
inc
add
aam
dec
int
icebp
sbb
ret
adc
or
sbb
ret
xor
sub
std
sbb
gs
ss
and
dec
jl
outsl
jl
test
and
sahf
or
lret
and
aam
stos
ss
lock
mov
lods
jnp
jecxz
dec
add
push
mov
icebp
adc
jne
push
movsl
xchg
jne
ja
je
int3
xlat
movsl
sahf
fnstcw
xchg
fistl
cmpsl
fimull
inc
fsubrs
cmp
stos
fistps
dec
lret
adc
xchg
fadd
outsb
insb
popf
dec
mov
aad
adc
and
pop
pushw
movsl
or
frstor
and
push
xor
outsb
shl
shll
adc
popf
adc
popa
sub
push
inc
mov
mov
dec
leave
sbbb
in
imulb
push
leave
mov
insb
jo
aas
cs
pop
test
adc
lock
mov
xor
pop
outsl
jecxz
imul
sarb
fidivrs
insl
xor
push
xchg
jnp
iret
bound
jge
iret
pusha
iret
leave
mov
xchg
call
pop
movsl
ds
xor
xchg
test
sbb
xchg
xor
outsb
popf
in
pop
bound
sub
dec
inc
push
lcall
aad
or
pop
in
adc
das
dec
js
shlb
add
outsl
rcl
data16
mov
insl
mov
xor
dec
push
fbld
in
movzwl
repz
mov
lret
push
loop
sbb
push
mov
ljmp
adc
repnz
adc
push
enter
lods
xor
cmpsl
stc
lret
lret
out
add
xchg
mov
push
sbb
std
xor
bound
xor
leave
xchg
insl
pop
sbb
pop
and
aaa
cmc
clc
adc
pop
xor
and
xchg
movsl
mov
addr16
push
pushf
in
inc
mov
mov
mov
and
out
in
test
out
jb
stos
jb
jo
xchg
pop
out
fwait
pusha
inc
ffreep
or
lahf
mov
lret
cmp
push
push
out
jp
in
dec
lret
inc
cmp
pop
arpl
xor
out
movsl
push
jne
fwait
or
mov
aas
adc
mov
adc
jno
inc
xor
inc
imul
jmp
je
stc
test
bound
push
jp
pop
test
mov
push
mov
and
fists
cmpsl
cmpsb
mov
pop
mov
cmpsl
add
pop
into
inc
inc
mov
dec
scas
outsb
cmp
movsl
or
gs
ss
push
icebp
inc
mov
ja
xchg
pop
or
ljmp
push
mov
and
maskmovq
negl
inc
push
clc
jge
push
stos
sbb
cmp
test
mov
fisttps
xlat
xor
cmp
jbe
adc
rorb
shl
dec
jnp
into
cs
pop
jmp
dec
adc
out
and
dec
add
or
mov
cs
inc
jae
mov
adc
insb
jg
cmp
call
jb
insl
cmc
jnp
pop
dec
movsl
into
ss
cmc
pop
negb
push
cld
cmc
cs
push
mov
xorb
add
in
int3
mov
add
push
testb
cwtl
adc
loope
fisttpl
insb
mov
in
xchg
cmpsl
lods
mov
pusha
pop
and
pushf
je
lcall
aaa
jne
lcall
push
nop
fidivrs
cmp
add
sub
notb
insl
add
les
imul
iret
xor
mov
aas
mov
sub
test
inc
mov
xor
rcrl
pop
jne
inc
mov
sahf
or
out
sub
loopne
lahf
insl
jne
cmp
lea
les
or
mov
dec
test
dec
insb
mov
or
and
xchg
xor
mov
xorl
insl
clc
jge
cmp
cmp
mov
dec
ds
and
fidivs
xchg
aad
dec
or
sub
sarl
sbb
mov
cmp
movsb
xchg
cmp
push
jg
loopne
pop
xor
mov
lahf
mov
sub
add
leave
imul
adc
pop
gs
sbbl
xor
mov
lods
inc
cli
adc
js
inc
lods
cmp
inc
sbb
int3
and
mov
xchg
mov
sub
jne
sahf
xchg
imul
into
pop
push
mov
adc
loopne
hlt
jmp
sub
push
pushf
mov
mov
xor
daa
bound
shll
sti
dec
sbb
movsb
mov
sbb
pop
xchg
sti
arpl
inc
outsb
cwtl
lods
push
sahf
idivb
pop
scas
sti
mov
cwtl
dec
shl
pop
std
sub
cs
sbb
dec
push
fisubrl
fidivrs
in
or
movsl
rep
jb
xchg
push
dec
mov
dec
mov
pushf
sbb
sbb
cld
rcrl
or
test
push
cwtl
cmc
and
xor
xor
out
ret
insl
int3
aam
dec
lahf
or
dec
jne
push
ss
int
inc
outsl
xchg
and
jle
hlt
jnp
xchg
ljmp
in
rolb
lea
sub
and
pop
lret
test
aad
lds
test
scas
sub
fwait
and
test
jp
sbb
pusha
push
push
aad
sarb
inc
mov
jbe
jne
sti
sbb
jecxz
sub
nop
xor
or
icebp
sub
mov
bnd
pop
fbstp
push
push
aaa
or
ret
gs
push
je
loope
loopne
jb
pop
inc
xchg
nop
bound
ljmp
push
pop
fisubrl
pusha
testb
test
fwait
inc
sti
push
shr
pop
jo
mov
and
movsb
jbe
sbb
pop
lcall
xor
sbb
sbb
rcrb
out
jl
in
int
js
insb
fiaddl
call
jecxz
push
lds
jle
iret
loop
leave
adc
loop
push
scas
and
rcr
movsb
sub
fcmovbe
cmp
in
mov
mov
rcr
cmp
ja
fbstp
add
jle
push
inc
cmp
xor
dec
xchg
add
rcrb
das
sub
cmp
or
add
and
mov
lea
enter
pop
ss
loop
pop
sub
mov
stos
leave
inc
into
rcll
movsl
dec
dec
inc
and
push
aad
int
pusha
xchg
jbe
notl
inc
outsl
add
stc
cltd
mov
sbb
adc
sbb
stos
add
out
inc
into
call
mov
cmpsl
ficomps
and
mov
movsl
and
icebp
mov
inc
xchg
call
push
ds
data16
jnp
aad
or
and
fs
push
inc
mov
jg
pop
in
pop
push
mov
loope
push
fbstp
out
push
cmpb
loopne
fdiv
fimull
mov
add
xor
out
mov
addb
xchg
mov
sub
ret
mov
xchg
into
mov
jnp
jg
inc
clc
mov
fdivr
jmp
vphaddubw
loopne
aam
push
and
ret
mov
out
insl
lcall
ljmp
imul
mov
or
mov
xchg
fisubl
dec
je
jb
mov
push
pop
sbb
xor
in
movsb
mov
arpl
jb
pop
and
mov
sahf
adc
negb
and
std
sbb
adc
xor
gs
inc
test
icebp
mov
out
pop
lods
inc
out
push
adc
in
enter
add
inc
adc
shlb
add
pop
fistl
lahf
mov
lret
dec
inc
in
pop
loop
pop
inc
std
rcl
push
sbb
or
das
push
outsb
stos
setno
fcmovbe
fcomip
or
in
sub
jne
xchg
adc
pusha
adc
popa
mov
and
cmc
mov
inc
leave
icebp
lock
lea
pop
rcrl
je
leave
imul
xor
rorb
aad
xor
or
mov
jo
jl
sbb
sahf
xor
clc
xchg
daa
fmull
ret
pop
mov
lret
mov
jg
mov
fmull
lahf
inc
in
dec
into
xchg
xor
jo
test
sbbl
xchg
lcall
fidivrs
ret
lds
mov
inc
ja
lret
cmp
popf
in
aad
es
mov
fildl
mov
loopne
aas
call
push
push
scas
sbb
inc
jne
fprem1
frstor
inc
je
sub
and
addl
push
jo
loop
jg
jp
xchg
mov
nop
icebp
fistpl
push
jae
push
cmp
sub
cmp
sbb
pop
out
icebp
ret
lock
mov
loop
in
lcall
mov
ss
fnstsw
cmpsb
ror
pop
mov
scas
sbb
movsl
xor
dec
mov
test
lock
inc
sub
inc
jmp
dec
or
inc
dec
test
out
jb
pop
cltd
lock
sahf
push
insb
scas
hlt
addr16
adcl
fistl
inc
xchg
aam
mov
arpl
cmc
mov
mov
vmovhps
inc
popa
in
push
ds
movsb
cmp
js
dec
outsl
and
ret
jo
add
cmp
mov
test
pop
icebp
mov
sarb
bound
sub
or
ja
addb
mov
pop
xor
push
sub
and
adc
roll
movsl
pop
sbb
push
sub
dec
add
into
je
push
lods
mov
icebp
ds
lret
adc
hlt
mov
push
daa
inc
movsl
cli
movsb
push
or
repz
mov
add
lcall
sub
mov
js
mov
sbb
jge
popf
and
daa
adcl
shl
pusha
xlat
mov
jle
mov
xlat
inc
xchg
cld
addl
lds
mov
shll
out
push
pop
xchg
ja
cs
add
adc
jle
sub
jb
sarl
aas
mov
ljmp
xchg
movsl
mov
push
pop
xor
ret
and
xchg
repnz
jno
jecxz
jae
sbbb
fadd
sub
test
mov
cs
inc
xchg
mov
int
leave
sub
ret
into
pop
add
icebp
jno
cmpsl
fldt
xor
push
push
aad
mov
jbe
push
push
fnstenv
xlat
jecxz
in
lcall
je
xlat
or
shll
repz
xchg
sub
daa
dec
cmpsl
leave
dec
or
pop
add
aam
adc
or
cmp
cld
sbb
mov
or
pop
dec
outsb
lcall
in
in
sti
arpl
push
leave
shll
mov
inc
mov
fstp
inc
xchg
mov
or
adc
mov
push
push
nop
rorl
scas
in
in
fsubl
loope
adc
es
lods
imul
xchg
mov
cmp
mov
cmpsb
test
adc
lret
push
out
adc
in
xchg
frstor
repz
pop
jecxz
scas
xchg
aam
out
mov
mov
jl
jo
sbb
jp
rcr
jmp
sub
pop
into
in
dec
cmp
push
adc
push
ja
adc
iret
add
shlb
cmp
cmp
push
and
dec
aam
mov
hlt
mov
addr16
adc
aam
mov
jb
cmp
push
into
aaa
pop
dec
js
cmp
jp
or
pop
xor
or
or
mov
out
mov
dec
lock
mov
cmc
bound
inc
rcrl
cld
rcrb
mov
movsl
setae
pushf
inc
sub
ja
aaa
dec
adc
jo
aas
in
loopne
aaa
ret
xor
sbb
xchg
lret
out
adc
shrl
int3
mov
daa
mov
xchg
and
loopne
insb
jl
dec
aaa
sbb
dec
fstl
or
in
cmc
xchg
lds
test
mov
lods
lods
daa
cmp
cmp
jb
cmpsb
rclb
mov
mov
inc
nop
das
pop
push
iret
adc
cmp
ljmp
fldcw
pushl
lds
mov
fidivl
inc
dec
jne
and
faddp
inc
test
push
dec
outsb
mov
mov
jnp
data16
lea
repz
mov
and
cld
adc
dec
mov
les
roll
sub
xlat
repz
sbb
sahf
mov
sahf
stc
xor
mov
icebp
mov
sub
dec
mov
cmp
mov
mov
mov
xchg
fdivrs
push
mov
cmp
or
test
xchg
arpl
popf
aam
mov
inc
and
cwtl
loopne
icebp
xchg
out
jl
aad
and
cmp
add
outsb
push
xchg
sub
pop
adc
popf
pusha
iret
call
mov
mov
mov
xchg
mov
lcall
jo
mov
lahf
cmp
lret
jmp
push
xlat
mov
pop
clc
cmc
push
inc
pop
outsb
aad
mov
fistps
shll
es
pop
adc
mov
xchg
cmp
pop
imul
fidivs
int3
sbb
sub
pop
loop
add
mov
sbb
loope
inc
mov
mov
xchg
aad
add
push
xchg
lods
push
and
loope
dec
stos
or
sbb
enter
mov
push
push
daa
enter
jne
mov
sub
cwtl
cmpsb
or
pop
push
insb
clc
ljmp
and
add
and
push
scas
daa
dec
add
mov
push
pop
ja
mov
mov
mov
adc
pop
dec
sar
jbe
xlat
dec
pop
sbbl
ficomps
roll
ss
testb
xchg
movsb
out
dec
adc
or
xchg
fsubl
popa
dec
inc
test
lods
stc
ret
fs
dec
js
mov
in
push
add
call
add
in
sub
imul
cmpsb
bound
imull
int3
test
mov
mov
inc
ljmp
ljmp
jge
ds
pop
les
push
fs
push
lret
and
negl
loop
pop
lods
mov
rcl
mov
add
lds
lea
mov
push
jbe
dec
fwait
push
clc
xor
subl
repnz
jmp
es
cmpsl
pop
shr
fcoml
xor
pop
mov
fwait
xchg
xchg
cmp
mov
int
je
mov
add
sti
lock
xorl
or
sbb
fidivrl
jns
jnp
jge
ss
xchg
rcll
cmc
pop
adc
mov
xchg
xchg
insb
roll
mov
jle
ret
cmc
cs
ss
outsl
mov
add
jge
scas
ljmp
jne
adc
and
sarl
pop
mov
pop
fists
mov
add
div
add
pop
mov
ret
pop
dec
movsb
lea
pushf
push
popf
clc
jl
add
aaa
int3
aam
pop
ret
or
push
inc
dec
push
dec
loope
icebp
int3
push
jge
jo
call
stc
xor
xchg
subb
loop
xor
xchg
jno
mov
mov
cmp
sahf
shrl
or
cmovge
mov
mov
mov
mov
xchg
stc
rorb
add
pop
cmp
push
std
mov
ret
cmp
cmpsb
cmpsl
or
add
sbb
and
push
mov
dec
in
pop
retw
mov
mov
xor
mov
test
aad
call
push
lock
gs
fidivl
xor
mov
cmp
gs
jns
lret
mov
mov
adc
xchg
mov
dec
leave
cld
push
pop
xor
and
lret
popf
inc
jmp
lret
outsb
jb
imul
jl
cs
or
inc
xchg
cmp
std
inc
das
sub
pop
mov
pop
push
daa
cld
cmp
mov
pop
pop
das
sbb
out
int
inc
addr16
inc
xor
adc
push
ss
dec
in
mov
je
dec
ss
icebp
fsubrl
imul
pop
aam
pop
mov
ja
inc
mov
lea
adc
ret
sub
add
push
cmp
jne
mov
mov
mov
jmp
mov
cmp
jne
push
pushl
pushl
pushl
pushl
call
pop
pop
leave
ret
push
mov
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
push
call
cmpl
jne
xor
add
inc
mov
jmp
xor
push
movl
xor
xor
adc
movl
neg
mov
mov
adc
push
mov
mov
mov
sub
xor
mov
movl
cmpl
je
cmpl
jne
push
push
call
xor
or
dec
mov
jmp
xor
xor
mov
add
add
imul
mov
cmp
jne
mov
mov
xor
xor
add
add
imul
jmp
mov
mov
mov
mov
mov
xor
xor
add
add
imul
mov
cmp
mov
je
xor
add
mov
imul
add
mov
mov
pop
leave
ret
push
mov
push
andl
mov
inc
mov
cmpl
jne
push
pushl
pushl
call
cmpl
jne
xor
or
inc
mov
cmpl
jb
orl
movl
mov
mov
sbb
mov
mov
mov
sub
mov
xor
add
mov
mov
xor
push
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
pop
leave
ret
push
mov
sub
or
mov
mov
xor
mov
andl
add
movzwl
andl
mov
inc
mov
cmpl
jne
pushl
push
pushl
call
cmpl
jne
xor
add
inc
mov
cmpl
jb
mov
movb
sub
lea
andl
xor
or
inc
mov
cmpl
jne
call
cmpl
jb
mov
or
mov
sub
mov
xor
sbbl
sub
addl
mov
sbb
movl
neg
push
and
movl
not
mov
andl
mov
inc
mov
cmpl
jne
call
cmpl
jne
mov
inc
mov
cmpl
jb
or
push
mov
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
pushl
push
push
pushl
call
jmp
xor
mov
push
adcl
add
jmp
movl
mov
mov
inc
movl
cmp
movl
jb
mov
adc
mov
addl
xor
orl
add
movl
jmp
mov
adc
mov
mov
neg
mov
movl
xor
xorl
mov
sbbl
add
addl
movzwl
subl
mov
mov
addl
movzwl
xor
andl
add
mov
movl
mov
inc
mov
mov
movl
cmp
movl
jne
mov
add
mov
sbbl
xor
andl
add
jmp
lods
mov
jae
sbbb
shrl
scas
jp
or
jp
aam
cmpsl
fiaddl
fistpll
je
sti
mov
xchg
adc
fs
sbb
push
inc
lock
jo
es
sahf
imul
addr16
and
lret
lods
sbb
xchg
push
and
lods
imul
pop
add
loopne
mov
or
cmp
jl
daa
pop
mov
in
inc
jecxz
pop
fisttpl
lret
icebp
dec
clc
xor
bound
sub
jnp
xchg
mov
mov
dec
mov
out
mov
stc
sub
daa
or
and
inc
mov
cmp
cwtl
nop
imul
or
push
div
pop
cltd
fucomi
jno
insb
sbb
arpl
iret
mov
popf
outsl
scas
dec
push
xchg
stos
mov
data16
ds
xchg
lods
mov
and
movsb
rcrb
ja
sbb
test
xchg
cwtl
jle
cmc
or
jno
idivb
arpl
sub
push
loope
push
push
push
sbb
jb
jg
mov
sarl
inc
mov
pop
fistps
sti
mov
adc
in
mov
les
je
cmp
pop
inc
push
adc
out
cli
es
popf
movsl
and
cmp
push
push
inc
jp
jns
ss
xor
inc
push
loope
jne
lods
pushf
or
fisubrs
out
data16
daa
mov
sub
xchg
mov
push
or
fidivrs
sub
sbb
aas
push
sbb
rcrl
in
ret
and
aas
lcall
inc
cld
cmpsb
popf
aad
idivb
mov
sbb
loope
inc
femms
pop
std
fmull
xor
es
aam
fcomip
movsl
stos
sbb
imul
popf
inc
cmp
gs
adc
ss
inc
jns
lods
frstor
icebp
mov
xchg
or
dec
and
xor
jle
icebp
xor
inc
mov
out
xchg
or
aad
out
out
insb
jecxz
mov
sub
xchg
lock
scas
inc
mov
jnp
iret
mov
mov
es
sbb
ljmp
rclb
fwait
pop
pushf
enter
push
inc
js
sarb
cmc
mov
aaa
cmp
mov
insb
mov
or
arpl
scas
mov
xor
mov
ds
dec
jo
rcll
out
xor
pop
xor
movl
out
jecxz
fnstenv
add
bnd
cmp
mov
inc
cmp
push
mov
adc
inc
add
jg
repz
adc
js
cmp
adc
sub
mov
dec
and
sub
mov
jg
jnp
mov
imul
insb
push
cmp
mov
and
jo
shlb
into
cmp
adc
jge
ss
sub
jmp
scas
iret
aad
clc
sub
mov
mov
pop
jmp
push
fimull
adc
sbb
inc
xor
sub
fstps
enter
adc
pop
dec
std
sbb
push
adc
push
clc
test
sub
add
stos
jl
mov
mov
jbe
mov
jl
cmp
imul
ss
outsb
inc
stos
mov
test
leave
cmp
mov
out
inc
insl
sub
jns
mov
cs
cwtd
sbb
sbbb
mov
add
add
xor
aad
or
mov
cmp
jb
cmp
push
das
cmc
jae
mov
jp
daa
pop
mov
movsb
dec
orl
in
xor
adc
roll
out
out
mov
addr16
roll
das
fidivs
jge
dec
in
xor
les
lcall
jo
cltd
xchg
lock
xchg
outsl
repz
xchg
fucomip
push
lock
lret
sbb
fdivrl
test
mov
insl
movsl
iret
je
fsubrl
sub
or
adc
xchg
dec
mov
cmp
popf
and
inc
movsl
std
cwtl
jge
lcall
push
xchg
mov
mov
mov
in
fidivrl
jnp
mov
push
mov
das
mov
clc
push
lahf
mov
pop
add
rolb
fsubl
pop
hlt
push
push
xchg
incb
xchg
test
jae
jmp
mov
xchg
dec
enter
mov
sbb
add
lock
mov
cwtl
js
in
addb
jecxz
inc
enter
jo
push
sbb
daa
hlt
sbb
dec
pop
fistpll
xchg
cwtl
dec
jo
pop
jno
sbb
jo
fsubrs
push
aas
and
imul
out
imul
and
test
fwait
in
push
add
nop
push
aas
inc
push
clc
mov
sti
mov
xchg
pop
lock
aas
mov
nop
inc
inc
xchg
xor
fbstp
cwtl
enter
ljmp
sbb
push
mov
nop
es
xor
aas
xchg
popa
pop
iret
and
dec
and
lds
push
cmp
lock
je
pop
push
mov
popa
jp
daa
cld
fildl
sbb
add
repz
jl
pusha
leave
xor
lock
dec
scas
iret
jecxz
into
xchg
adc
dec
jecxz
or
push
fidivs
lret
mov
insl
xchg
or
dec
decl
into
leave
test
imul
sbb
ljmp
fwait
mov
stc
mov
int3
dec
xchg
jmp
jl
pop
sarb
gs
mov
outsb
push
gs
jge,pn
outsb
lret
push
stos
jnp
sbb
movsb
pop
scas
jns
mov
bound
in
add
or
lea
gs
push
sbb
push
je
sub
orb
sahf
xchg
cmp
push
aad
int3
repz
cld
hlt
movsb
jnp
outsl
mov
jno
mov
daa
sub
pusha
jl
adc
cli
xor
in
leave
aam
jmp
mov
dec
push
cmp
add
out
mov
xor
sbb
lock
jae
jne
adc
fldt
mov
rorl
sub
jnp
push
outsb
push
mov
shrl
pop
test
push
add
fimull
jg
shll
loopne
inc
cltd
scas
mov
loopne
rolb
push
test
scas
mov
xorb
add
inc
add
jmp
std
push
xor
loop
mov
push
hlt
jo
sbb
jmp
ja
cmp
push
clc
not
fstl
lock
cltd
adcl
sub
aaa
adc
lcall
fs
and
jle
push
or
sbb
cwtl
jns
fsubs
loopne
inc
pop
mov
jbe
gs
idivb
jnp
test
pushf
or
inc
imulb
sub
dec
cs
pop
jae
aad
sub
sub
aas
insl
or
sbb
mov
sub
pusha
mov
pop
incb
gs
xchg
cmp
jg
into
lahf
into
xchg
out
jp
int
mov
idivb
mov
xchg
jle
dec
or
cmp
jg
xchg
dec
sahf
imul
xchg
imul
cmp
jns
mov
ret
lret
mov
leave
sbb
cmpsl
xchg
adc
dec
inc
adc
jbe
cmp
pop
in
imul
outsl
add
jbe
imul
inc
testb
aaa
xchg
mov
aam
mov
adc
in
inc
lock
mov
mov
movb
inc
fildll
fs
jg
sub
insl
push
pop
pop
int3
sbb
popa
jmp
aaa
in
pop
inc
js
jmp
clc
aam
adcl
repz
sbb
clc
sti
fisubrl
mov
inc
ja
movsl
cmp
mov
mov
xchg
call
arpl
adc
jns
inc
lods
repnz
sub
idivl
jle
adc
lret
hlt
test
pushf
int3
insb
cmp
aas
or
inc
inc
jge
push
mov
jno
scas
jmp
jg
rorb
jbe
dec
sbb
xor
sbb
popf
shll
adc
jecxz
std
mov
call
cmp
or
or
xchg
movsb
inc
cld
push
sbb
stc
out
sahf
insb
inc
in
xchg
dec
pushf
test
xlat
sarl
adc
lods
xor
lds
les
jge
orl
cmp
adc
sub
push
pop
pop
or
mov
sub
pop
pop
pop
scas
mov
mov
push
cmp
pop
into
push
test
lods
dec
push
inc
into
xchg
das
sarl
arpl
mov
xchg
jns
cld
loop
mov
xchg
outsl
jle
dec
sbb
push
repnz
mov
sub
mov
aam
pop
test
out
les
cli
mov
outsb
shll
sbb
sub
call
add
mov
pushl
shr
mov
out
cmp
add
mov
dec
ficompl
sub
icebp
outsl
flds
movsb
sbb
dec
pop
inc
jo
and
ret
adc
inc
ror
or
cmp
lods
add
fs
or
mov
xlat
int
rcrl
je
inc
cmp
fsub
js
gs
xlat
std
pop
loop
push
push
cmp
hlt
inc
adc
loope
inc
cmc
adc
sbb
add
or
pop
mov
mov
mov
ss
repnz
iretw
jmp
adc
xor
add
rorb
adc
stc
movb
clc
cmp
add
adc
mov
lods
push
fisttpl
dec
mov
jle
nop
adc
or
daa
roll
dec
push
mov
dec
dec
test
jno
xlat
jp
cmp
sarb
and
xchg
mov
mov
pushf
shll
jae
rcr
jae
shll
or
popa
and
icebp
cwtl
loopne
enter
pop
mov
jno
cmpb
fistpl
jl
add
or
pop
push
inc
or
aas
xchg
imul
or
lcall
scas
mov
outsl
push
call
icebp
lret
cmp
je
leave
mov
lds
xchg
inc
and
mov
shll
or
cwtl
fldpi
ja
mov
lock
pop
out
cmpsb
jns
jp
mov
lret
mov
hlt
in
insb
mov
xchg
jge
js
pop
loope
lcall
in
cmp
ja
xor
push
ss
add
ds
dec
mov
test
inc
jle
pop
add
xchg
imull
fs
fstps
aad
cwtl
imul
fs
xchg
test
mov
dec
jo
xlat
arpl
mov
mov
arpl
psubd
pop
int3
ss
sub
jge
jecxz
sub
xor
adc
int
pushw
sbb
push
cmc
xchg
mov
inc
cmpsb
or
jecxz
push
inc
jae
loopne
xchg
jge
and
andb
shl
sbb
jbe
mov
leave
jl
adc
daa
fs
lcall
ret
sub
push
xor
popf
scas
jno
movsb
fdivrs
scas
cmpsl
gs
sbb
mov
out
pop
addl
daa
adc
scas
insb
mov
orl
jns
xor
mov
mov
fisubl
pop
or
rol
and
jle
push
lahf
inc
and
std
xchg
jnp
xchg
jge
ja
or
cmc
js
sbbl
jnp
add
xchg
sbb
push
mov
mov
rcrb
fisubrl
jne
arpl
cmp
mov
lcall
pop
dec
out
idivl
out
hlt
outsb
stos
imul
addr16
in
ret
add
ljmp
stos
int3
out
imul
jle
push
mov
push
cli
push
mov
clc
lahf
jo
jno
push
sub
imul
jns
sub
jne
mov
mov
sarb
icebp
pop
cltd
maxps
daa
or
divl
adc
clc
cmpsb
scas
rcll
popa
shlb
andl
mov
addl
and
std
sub
xchg
loop
and
jno
aaa
movl
shll
mov
mov
test
xchg
jl
jmp
outsb
cmpsl
xchg
ds
cmp
sahf
data16
xor
jmp
inc
add
imul
mov
and
pop
clc
add
push
fwait
and
ret
xchg
push
enter
inc
lcall
cmp
mov
ljmp
dec
mov
mov
jbe
divl
sub
retw
sbb
stc
add
aaa
cmp
sbb
push
jecxz
mov
pop
mov
ja
divl
pop
ss
sbb
imul
inc
mov
adc
dec
sub
sbb
pop
mov
in
dec
inc
mov
mov
add
cmpsb
mov
test
jo
and
push
jecxz
cmp
orb
ds
or
lds
loope
insl
movl
cs
stos
jae
add
sub
test
fs
ret
push
dec
jp
push
mov
jnp
adc
or
out
adc
test
outsl
xchg
clc
mov
dec
inc
pop
gs
scas
adc
adc
mov
addb
fcomps
fiadds
dec
mov
jl
mov
sub
mov
sarb
inc
or
sbbb
adc
add
fcmovne
nop
dec
insb
int3
lock
jbe
pop
in
mov
arpl
pop
movsb
adc
push
loop
dec
pop
shlb
or
lret
stos
jmp
cltd
pop
or
fsts
insl
adc
cmp
mov
pop
and
and
adc
sbbl
dec
push
dec
mov
inc
cmp
inc
dec
push
gs
jp
mov
loopne
push
cli
scas
jg
fistpll
outsl
loope
std
xor
mov
sbb
fmull
xchg
mov
dec
xchg
in
xchg
cld
jmp
mov
fcoms
cmpsb
add
push
xor
pop
outsb
xchg
addb
gs
xchg
mov
mov
and
mov
dec
xchg
push
js
jbe
adc
mov
call
fwait
test
sub
lcall
push
mov
dec
push
test
inc
scas
out
mov
cmp
sahf
in
push
jo
pop
mov
stc
movsb
lret
adc
push
and
pop
das
jb
sbb
in
sub
out
sbb
xor
jns
jp
sbb
mov
pop
cmp
repz
repnz
mov
loop
and
sbb
or
jnp
push
imul
adc
jae
jg
sub
jnp
mov
stos
les
dec
sbb
pop
movsl
mov
fbld
les
ljmp
nop
sub
insl
les
add
jl
out
mov
mov
popf
addl
pop
sub
aaa
xchg
xor
add
ds
addr16
insl
xchg
fstpt
out
fldcw
fisttps
mov
fs
outsl
inc
sbb
cmpsl
jmp
popl
addb
repz
das
push
and
push
xchg
mov
lcall
into
call
inc
pop
imul
pinsrw
lcall
or
lret
add
orb
adc
insl
fistpl
mov
sbb
cwtl
je
inc
and
subb
dec
cmpl
ss
and
xor
dec
cmpsb
cmp
dec
test
ret
jno
xor
xchg
aas
imul
sub
inc
xchg
outsl
xchg
and
or
enter
add
or
addr16
sbb
lods
cmpsl
cmpsl
faddl
cmc
shr
test
mov
jne
fwait
or
and
xlat
pushf
rolb
or
sub
push
push
jecxz
mov
mov
mov
add
popf
cltd
pop
cmp
or
push
adc
cmp
mov
in
lcall
adc
and
fwait
mov
clc
leave
cmp
mov
jb,pn
jge
xchg
pop
inc
out
inc
jmp
sbb
sbb
nop
js
fistl
jnp
sahf
in
popf
push
xchg
mov
mov
cli
dec
in
mov
mov
lcall
es
dec
jge
push
jge
pop
inc
shr
dec
imul
push
mov
repz
xchg
out
add
fxch
gs
shll
pushf
lcall
out
inc
fisubl
xor
gs
test
sub
fld
loope
xchg
inc
xor
nop
ja
call
pop
test
cmp
push
mov
sbb
cld
xchg
xor
fs
add
into
xchg
pop
sti
mov
sbb
aam
xor
and
jo
fwait
jmp
ljmp
mov
xchg
icebp
sub
jg
mov
bound
into
lahf
inc
mov
pusha
imul
jns
inc
add
sub
std
sub
sbb
xorb
sarl
lahf
aaa
and
js
jl
mov
andl
xchg
hlt
sbb
mov
fidivrs
cmp
lcall
dec
fbstp
mov
push
push
stos
inc
sub
frstor
xor
mov
in
sti
mov
mov
in
sub
sub
push
xchg
cld
dec
xchg
sub
fists
mulb
mov
fucomi
inc
mov
and
std
outsb
sar
mov
inc
cld
ljmp
or
xlat
sub
jmp
add
cmp
insb
push
add
xor
out
dec
mov
in
sahf
lds
mov
pop
pop
inc
dec
or
int3
movsl
ss
or
add
aam
inc
push
mov
into
cmc
dec
push
or
mov
icebp
jmp
sub
lods
inc
pusha
cmp
sub
sbb
fists
dec
sbb
xor
jne
push
pop
jge
bound
stc
jnp
pusha
jb
insb
xor
push
sbb
dec
ja
std
test
pusha
fdivrl
fldl
lock
fistl
sbb
jecxz
insl
dec
mov
int
in
xor
shlb
shll
dec
ret
imul
fstl
or
scas
pop
cmp
sub
sahf
into
dec
aad
xor
rcl
mov
push
arpl
sub
gs
cmp
ljmp
fwait
adcb
add
or
cmpb
movsl
sbb
jmp
arpl
imul
out
mov
adcl
xchg
pop
lock
das
mov
js
aas
inc
out
sub
add
mov
add
mov
iret
rcrl
xchg
mov
and
arpl
pop
dec
dec
pop
mov
sbb
inc
out
and
fstpt
pushl
push
push
cs
pop
xor
push
sbb
sbb
mov
sbb
bound
push
jnp
icebp
dec
pop
pcmpeqb
imul
pop
mov
lcall
mov
ss
add
in
call
sub
push
dec
cmp
jo
leave
xor
mov
das
lret
lcall
and
arpl
xchg
jg
jb
loope
xor
rsm
sbb
xor
cmp
repz
subb
mov
insl
movsl
fdivs
pop
in
aas
aam
das
ss
pop
ss
pusha
or
test
add
lods
dec
push
xor
and
sub
nop
lods
mov
cmp
pop
pop
fidivrs
pop
add
add
fcomps
dec
nop
inc
or
push
pop
lret
mov
aaa
inc
cli
lea
adc
std
push
int
mov
mov
icebp
push
mov
lret
stos
sar
arpl
mov
hlt
stos
push
or
dec
cs
sbb
out
adc
adc
imul
xchg
cmp
inc
xchg
insl
rcl
fisubrl
add
cli
imul
xor
sbbb
push
divb
inc
xchg
in
push
mov
pop
jp
arpl
mov
pop
movsb
scas
jns
dec
mov
mov
test
mov
dec
fwait
loop
or
jno
sbb
adc
orl
add
cmp
xor
aad
mov
popfw
add
push
dec
cld
fs
outsb
add
repz
bound
adc
or
orl
fistps
sbb
pop
push
add
int
int3
mov
std
push
sbb
dec
pop
iret
sub
mov
arpl
adc
bswap
fnstenv
jle
mov
enter
orb
movsl
mov
pusha
and
mull
push
fwait
jnp
xor
adc
dec
in
or
push
rcrl
cs
mov
mov
jle
dec
sub
dec
movsl
es
xor
nop
xchg
mov
jnp
in
shlb
fildl
ret
sbb
mov
jmp
fcompl
jg
or
ja
push
insl
hlt
inc
popa
pop
xor
movsb
push
cmpl
sbb
fistl
loopne
stos
push
mov
cmp
rcr
repnz
push
mov
sbb
cmp
int3
cmp
lcall
fcmovnb
fldenv
fnstcw
orl
pop
ljmp
mov
popa
jno
roll
pinsrw
arpl
inc
and
pop
pop
in
scas
mov
jns
pop
cs
pop
movsl
cltd
ret
inc
sbb
pop
pusha
mov
mov
sti
shll
mov
mov
mov
cmp
xor
pop
adc
mov
mov
ret
dec
enter
xor
mov
aam
test
aam
xor
mov
out
shrb
fs
fwait
test
mov
xor
mov
cmp
test
cmp
dec
ret
fwait
cmpsb
jge
aaa
inc
inc
push
cmc
push
out
repz
adc
xchg
and
shr
in
mov
jecxz
lds
mov
mov
cmp
sub
ja
lea
mov
out
pop
adc
aas
repnz
imul
adc
ret
pop
movsb
stos
int3
mov
xchg
movsl
jge
lea
push
sti
jle
cmp
int3
gs
adc
mov
cmp
std
sbb
add
push
xlat
cmp
adc
add
jns
jge
xorb
leave
xchg
pushf
or
loopne
add
repz
jnp
subb
aaa
cli
pushf
scas
add
add
mov
push
jbe
test
lods
add
mov
es
leave
rol
cld
mov
push
mov
daa
mov
enter
xor
xchg
addr16
pop
ljmp
sarb
jno
loop
cmpl
inc
fsubrl
xchg
push
mov
outsl
jno
ret
das
sub
pop
inc
fidivrl
pop
jl
mov
lods
push
clc
sub
adc
sti
lret
enter
and
orb
jns
push
xor
lds
jle
repz
test
cmp
and
xchg
loope
sarl
fiaddl
ficomps
fisttpl
jbe
jbe
and
loop
push
cli
enter
mov
ret
push
out
push
test
jmp
cwtl
lods
push
dec
cmp
stc
std
push
mov
add
dec
out
push
jne
pusha
out
sbb
pop
dec
inc
bound
mov
pusha
flds
adc
jg
sbb
pop
and
pop
imul
test
ja
sbb
ds
inc
sti
aam
lods
and
fs
pop
push
add
xlat
mov
js
fmul
pop
test
popf
xor
sub
push
call
addr16
xorb
in
cltd
add
test
shll
rorb
push
out
ljmp
fstpl
push
int
or
sbb
test
xor
xor
jmp
push
mov
push
adc
push
mov
std
mov
pop
cli
xchg
push
push
pop
jl
mov
pop
das
pusha
lret
les
fisubs
sbb
or
pusha
jmp
lods
testb
adc
mov
pop
arpl
call
lret
cmp
ficoms
sbb
mov
dec
push
dec
push
cmpl
jle
mov
push
out
fdivrs
jmp
mov
lods
aaa
pop
fcoml
insb
cwtl
or
add
dec
in
mov
cmp
mov
bound
cltd
cmpsb
sti
sahf
mov
sbb
shlb
sarb
lods
push
test
rep
fdivrp
add
adc
scas
imul
pop
xor
xor
sub
mov
jb
add
dec
out
pop
cmpsl
sbb
adc
cmp
je
aas
jae
rol
push
daa
push
bound
jecxz
sbb
inc
ret
jae
xchg
shl
addb
jmp
xor
adc
aaa
sbb
mov
cmp
and
jmp
xchg
sub
mov
repnz
les
adc
mov
push
pop
xor
insb
cltd
sarl
cmpl
pushl
iret
sbb
push
pop
jne
mov
call
inc
xlat
pop
ds
or
lods
loop
and
js
push
sti
inc
sub
add
jp
push
jno
and
cmp
pop
outsl
cld
sbb
adc
outsb
pop
aam
pusha
js
mov
in
cmp
stc
or
mov
jbe
ds
daa
xchg
push
fwait
movsl
mov
xchg
addl
arpl
movsl
lret
jnp
int
int3
imul
mov
jp
and
dec
dec
cmp
mov
push
sbb
outsl
les
add
test
cmp
stos
cmp
aam
jb
repz
das
sub
sub
punpckhdq
push
bound
jp
sub
sbb
in
add
ficoml
dec
mov
fs
mov
mov
jge
loope
push
pop
and
popf
into
lods
stos
std
and
scas
js
call
jle
mov
leave
stos
inc
mov
jb
cltd
xchg
scas
xchg
hlt
sti
pop
pop
aam
mov
xor
jo
push
mov
and
jecxz
cmp
dec
lock
dec
insb
sub
lock
aam
pop
hlt
outsl
jno
insb
add
bound
mov
lds
fsubs
aaa
stos
inc
add
mov
cmp
mov
sahf
jne
jge
push
pop
dec
xor
mov
add
push
iret
push
andb
jb
dec
mov
int
inc
add
push
ljmp
jne
cmp
mov
in
gs
jmp
xchg
mov
inc
int
sub
mov
pop
cli
pop
repnz
cmp
pop
out
mov
add
fsubrl
cli
jmp
sahf
dec
mov
popf
xchg
negb
leave
ja
call
fucomi
or
ret
stc
das
sub
hlt
push
adc
outsl
push
lods
shrl
xor
push
testl
nop
loope
lcall
jns
shlb
or
mov
push
rcll
out
dec
fs
push
dec
ljmp
ret
popaw
lock
mov
shll
xchg
das
xchg
in
js
js
dec
cmc
lcall
xlat
pop
push
push
or
fisubs
adc
mov
pop
leave
hlt
mov
jle
and
add
sbbl
dec
orl
mov
push
push
loopne
out
adcb
lret
rolb
mov
sti
repnz
mov
fmull
push
movsl
xchg
mov
add
idivb
mov
mov
inc
in
pop
mov
add
cld
popa
jo
jl
loopne
cmp
imul
gs
mov
cli
nop
cmp
adc
mov
sub
mov
jae
lret
ljmp
aad
ret
sti
lods
pop
fcoms
xor
adc
mov
stos
xchg
adc
ds
ljmp
rorl
xchg
sub
cmp
jo
sbb
cmp
mov
dec
xlat
and
scas
gs
stc
imul
sub
mov
dec
mov
pop
pop
pop
decl
iret
mov
fwait
and
in
mov
jo
ret
jo
cld
insl
cmp
ds
inc
lds
sbb
int3
push
xchg
push
repz
mov
adc
in
bound
xor
std
stos
mov
pop
ja
pop
shlb
mov
pop
stos
call
hlt
aaa
cmp
aas
push
test
mov
aaa
dec
adc
int3
push
mov
add
pop
sahf
mov
xor
testb
js
in
push
fisubs
lret
cmpsl
movsl
cmpsl
pop
mov
div
aad
mov
subl
sahf
dec
mov
mov
sarl
jl
lahf
cwtl
cs
sub
jno
enter
mov
xor
cmp
mov
push
push
cmp
cmp
ljmp
cld
fnstsw
shll
mov
sub
or
pop
mov
sbb
imul
mov
je
mov
push
mov
push
push
ja
sbb
dec
shll
or
movsl
nop
ja
lahf
rcl
imul
stc
push
inc
and
sbb
lods
pop
inc
pop
or
mov
and
push
xor
ljmp
js
xchg
movsb
in
push
movl
jne
fmul
into
mov
addr16
mov
dec
cli
adc
or
shrb
add
dec
int3
adc
nop
cld
fadd
fists
out
jne
xchg
mov
ret
xchg
aad
ljmp
push
addr16
pusha
js
jb
xchg
cmp
dec
jno
pop
jae
lock
add
loope
call
test
jmp
xor
dec
sub
or
jmp
outsl
xor
notl
inc
loopne
jnp
jo
mov
int
mov
dec
rorl
push
push
insb
call
fstps
pop
ljmp
dec
add
cmc
cld
adc
sub
inc
sbb
or
and
daa
jns
fstps
repz
sbb
nop
push
xlat
cmp
into
inc
fisttpl
div
iret
and
xor
mov
and
mov
pop
sti
les
pop
push
sub
adc
sbb
inc
punpckldq
imul
movsl
dec
mov
cmp
ss
popf
mov
adc
fsubrl
js
sub
xchg
fiadds
data16
dec
insl
loope
cmp
pop
pop
mov
scas
inc
fsubrl
ficompl
cltd
repnz
orb
ljmp
xchg
faddl
mov
push
movsl
in
lds
subb
mov
adc
out
add
jmp
xchg
jae
mov
daa
mov
push
inc
adc
loope
ucomiss
push
push
jecxz
cmp
mov
out
lods
jmp
jecxz
dec
insl
mov
and
dec
mov
leave
cmc
and
mov
or
inc
inc
xor
xor
scas
lods
pop
imul
cs
sub
adc
cmpsl
dec
je
pop
aad
fxch
lret
sub
and
jae
std
jae
push
aaa
dec
push
sub
cmp
fisttpll
push
inc
add
add
add
add
je
cmpl
jne
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
sbb
mov
andl
xor
adcl
add
mov
movl
mov
movl
movl
mov
mov
mov
movl
jmp
xor
mov
subl
mov
subl
xor
sbbl
xor
xorl
sub
sub
xor
andl
mov
inc
mov
cmpl
jne
push
push
pushl
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
dec
mov
add
mov
addl
lea
andl
mov
inc
mov
cmpl
jne
push
pushl
call
cmpl
jb
orl
mov
mov
mov
lea
mov
mov
mov
adc
mov
sbbl
lea
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jne
pushl
push
pushl
push
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
neg
mov
andl
mov
inc
mov
cmpl
jne
call
cmpl
jb
adc
mov
mov
lea
xor
mov
mov
xorl
mov
lea
add
mov
or
mov
mov
incl
lea
andl
mov
inc
mov
adcl
xor
andl
add
movl
jne
jmp
mov
mov
mov
sub
mov
xorl
xor
xor
sbbl
sub
xorl
sub
xor
mov
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
imul
xor
add
lea
mov
add
mov
mov
xor
jmp
js
inc
iret
aaa
jae
test
outsl
flds
jp
pop
jp
addr16
ds
or
fbld
in
aaa
pop
xlat
loop
pop
and
negl
pop
push
add
mov
ds
cmpsb
gs
leave
pop
fimull
jnp
sbbb
lea
inc
push
dec
xchg
pusha
xor
inc
pop
pop
push
scas
cwtl
dec
mov
dec
sub
pop
mov
or
sti
adc
push
mov
clc
sahf
mov
xorb
cmp
xchg
sbb
insb
test
ljmp
insl
loopne
mov
jecxz
mov
xchg
adc
and
scas
push
push
les
ret
fists
dec
test
inc
loopne
add
mov
idivl
cmp
add
push
dec
ja
pop
mov
scas
out
adc
mov
aam
shl
xchg
push
and
and
call
movsl
pop
aam
cs
pop
jo
sbb
cltd
stc
add
inc
sbb
cltd
sbb
scas
pop
mov
xor
lret
push
lea
jns
xchg
scas
aam
lcall
inc
push
push
call
pop
push
inc
imul
test
int3
inc
cld
in
jmp
and
fwait
movsb
and
ljmp
sahf
sahf
jle
shlb
nop
aad
test
outsl
push
and
xchg
movsl
sub
sub
scas
call
and
mov
adcl
jecxz
adc
push
imul
or
nop
cmovbe
dec
mov
push
repz
add
ja
push
bound
ljmp
jmp
cs
xchg
mov
enter
pop
test
jnp
mov
jbe
test
inc
pop
inc
xchg
rcl
xchg
orl
ljmp
cmp
jo
aaa
subb
add
mov
testl
pop
iret
shrb
cwtl
dec
adc
pop
outsl
xchg
sbb
outsb
das
inc
pushl
fldt
arpl
cmp
pop
mov
test
sub
cs
cmp
jmp
fldl
push
push
cwtl
push
mov
adcb
loop
mov
mov
mov
lods
adc
cli
shl
fcomip
cmp
pop
enter
dec
les
repnz
xor
inc
inc
jnp
push
jnp
cmp
xchg
pop
mov
mov
fidivrl
out
cmp
mov
push
scas
and
dec
xor
push
mov
jle
fs
movsl
lods
icebp
dec
mov
cltd
out
sbb
movsl
inc
or
imul
mov
inc
fwait
imul
mov
mov
aaa
add
pop
lcall
gs
fldenv
jg
mov
subb
push
lret
or
mov
outsb
pusha
jl
add
cmp
sbb
sub
pop
cmp
cmpsl
jne
adc
ja
push
stos
cmp
dec
or
inc
jb
ffree
shr
or
cmp
inc
xlat
inc
fistps
push
xor
xor
clc
sub
push
aad
cmp
cmp
dec
adc
addb
movsl
sti
or
and
call
add
stos
inc
sbb
xor
sbb
mov
inc
and
xchg
dec
gs
ficompl
sub
fsincos
lahf
test
or
xchg
fisubrs
jb
sub
inc
lock
addb
cwtl
or
test
dec
movsb
dec
or
dec
lods
inc
push
stos
jbe
lods
jmp
outsb
jmp
nop
jbe
pop
pop
cltd
inc
bound
push
xor
add
aad
fmul
ja
add
xorl
repnz
mov
popa
cli
lret
add
mov
mov
icebp
pop
or
mov
fadd
out
pop
mov
call
lods
js
dec
mov
test
dec
int
pop
mov
btr
in
adc
ret
in
xchg
jge
sbb
insl
pop
ficoms
inc
imul
cmp
or
mull
cs
loopne
pop
test
sti
hlt
test
lahf
mov
movsl
sti
push
movsb
xchg
or
mov
and
data16
mov
cmp
fcmovnbe
das
in
fsts
xor
sub
aad
mov
ror
out
mov
sbb
and
or
sub
scas
in
or
stc
mov
xchg
std
fs
bound
jns
out
xchg
or
jg
roll
mov
rorl
and
xor
cld
shlb
rorb
jg
sub
push
mov
rcll
iret
jmp
lock
mov
mov
push
mov
jmp
fwait
std
mov
jle
in
stc
test
into
repz
pop
inc
pop
pop
sub
lods
mov
sbb
push
jmp
xor
daa
mov
shll
pop
ss
fstpt
xchg
push
add
ds
dec
test
jne
lea
xchg
sbb
test
pop
cli
js
ds
inc
jno
xor
in
shr
jne
mov
xor
add
je
jno
sbb
dec
push
xchg
push
xchg
jne
pop
enter
dec
dec
dec
mov
xor
cmc
add
mov
pop
sti
lock
lahf
dec
mov
adc
notb
sub
jns
pop
adc
lock
jae
imul
push
mov
in
cmc
push
mov
and
inc
jge
jge
stos
xchg
push
icebp
in
out
fxch
push
mov
xor
or
mov
dec
addr16
jl
adc
dec
add
pop
pop
xchg
jnp
push
mov
sub
cli
inc
push
jno
or
push
lret
mov
cmp
dec
popf
sarl
rol
hlt
mov
push
outsl
jns
cmpsb
xchg
adc
lahf
xchg
imul
mov
jle
mov
test
fidivl
addr16
cltd
dec
adc
aaa
sbb
aaa
data16
inc
aad
mov
dec
stos
fbstp
mov
xchg
daa
cmc
aam
jl,pt
mull
or
sti
mov
aad
sbb
fdivrl
pop
jne
rcl
push
popa
jecxz
cmc
adc
out
insl
es
mov
cmp
push
je
insl
divl
lods
insb
jp
sbb
addl
loop
jns
cltd
jns
mov
icebp
ljmp
mov
in
mov
lock
mov
aaa
cmp
ljmp
mov
push
divb
mov
arpl
mov
loopne
aas
pop
nop
xor
jmp
mov
push
pop
fstl
push
pop
icebp
mov
pop
fbstp
jae
push
dec
pushl
andl
and
and
dec
xchg
add
mov
insb
sti
pop
test
int
adc
cmp
test
dec
or
jg
enter
mov
mov
movsb
mov
pop
add
jae
inc
rcll
mov
dec
lahf
cltd
popa
jmp
adc
js
dec
adc
mov
loope
fnsave
ds
mov
aas
loope
mov
jp
shll
stos
push
pop
push
pop
hlt
adc
jle
rcrb
std
adc
sbb
loopne
xchg
adc
mov
mov
lea
or
mov
cmp
stos
jae
imulb
ja
jbe
mov
movsl
pop
push
ljmp
and
outsl
and
xor
mov
cmpsb
fimull
adc
push
mov
or
add
imul
cmp
out
in
pop
push
or
sbb
rcl
mov
pop
mov
add
jp
loop
scas
loope
xor
mov
jmp
inc
jno
cmp
xchg
xchg
data16
adc
rolb
push
movsb
mov
sbb
mov
jb
inc
add
pslld
xchg
icebp
pop
cld
add
or
mov
les
imull
out
adc
lahf
push
cmp
xchg
lret
scas
int3
test
popf
or
or
add
sbb
scas
sbb
pop
dec
cmp
fsubl
sbb
mov
sbb
inc
add
cs
adc
lods
cmp
sub
mov
dec
pop
into
fcmovu
dec
mov
arpl
mov
mov
fisttpll
adc
jne
adc
dec
xor
test
into
test
push
xchg
lahf
arpl
in
jmp
fadd
sahf
test
mov
sbb
xchg
cld
pop
out
xchg
dec
add
clc
mov
xlat
jb
pop
sbb
or
pop
xchg
mov
jnp
int3
int
sub
sar
ret
out
popf
jbe
push
add
sbb
sti
inc
mov
add
mov
imulb
cltd
inc
std
mov
je
mov
push
mov
sbb
and
out
jge
sub
add
push
sub
jle
sub
ds
or
cld
xchg
mov
js
aaa
outsb
xor
dec
push
xchg
jnp
xchg
jne
pop
or
push
mov
scas
xchg
adc
imul
aas
jnp
iret
push
or
lahf
adc
div
dec
dec
jne
out
adc
test
mov
repz
scas
xlat
lods
test
cwtl
jecxz
movsl
add
push
aas
and
int3
push
out
inc
xchg
fisubl
cmpsb
sarb
inc
pop
jmp
mov
push
xor
out
jo
adc
jns
es
sub
pusha
pop
sbb
ret
fsubs
int
mov
lret
std
mov
push
adc
mov
aad
repz
arpl
stos
sub
mov
test
imulb
out
xor
lods
into
xchg
add
jp
cmp
ja
jno
fcoms
rclb
inc
cmp
outsl
sub
inc
jp
pop
iret
or
mov
rcr
jecxz
jo
lcall
jg
incb
and
xchg
lcall
negb
cmp
incl
addr16
addb
int3
xor
push
dec
jp
cld
popf
xchg
iret
scas
cmpsb
dec
std
mov
shr
cmp
rorb
jmp
push
mov
in
adc
pop
cmp
sarb
or
in
dec
loope
lcall
dec
sub
xchg
arpl
xor
dec
aam
mov
sub
scas
stos
test
mov
or
xchg
lret
in
ljmp
fwait
in
add
js
pop
gs
jae
sbb
push
pushf
jle
add
jno
out
daa
xchg
jg
push
ds
add
or
adc
dec
sub
jno
andl
adc
movsb
push
jg
hlt
lcall
push
js
fcompl
mov
mov
repz
lods
and
jno
pushf
xor
push
divl
test
out
sub
movsl
add
xor
xchg
mov
inc
cmpsb
push
out
jne
xchg
lock
xor
and
stos
push
mov
lret
lea
das
jle
sbb
shld
xor
jae
xor
cltd
push
inc
fnstcw
pop
xchg
adc
add
loope
addb
imul
jmp
sbbb
push
jno
std
mov
jecxz
les
and
jp
jno
mul
cmp
adc
inc
jnp
jo
sub
cmc
dec
jle
adc
mov
testl
outsl
mov
jns
mov
out
mov
shl
xchg
jb
fisttpll
outsb
inc
lods
push
jb
in
fisttps
mov
out
dec
cmp
jo
test
faddl
sbb
inc
mov
and
repz
nop
movsb
push
daa
mov
std
pop
inc
dec
imul
mov
ret
add
lahf
test
inc
jae
pop
or
cltd
cs
dec
push
and
out
clc
dec
test
pop
repz
ljmp
push
cmp
iret
pop
into
jmp
cmp
pop
pop
sahf
mov
fsubrs
fdivl
lods
xchg
push
jl
shrb
push
xchg
call
aaa
mov
cwtl
ss
mov
outsl
int
insl
mov
clc
lahf
cs
rorb
cmc
dec
or
xor
mov
push
or
sbb
jge
sub
sbb
cmp
out
pop
pop
icebp
mov
dec
sti
or
fwait
xchg
xlat
popa
mov
pop
outsb
mov
adc
test
cltd
dec
je
pop
and
lock
insl
pop
and
popa
into
fistl
pop
je
jp
pop
dec
insl
pop
jp
je
mov
test
loop
lahf
push
jne
mov
cmc
adc
or
test
mov
jg
xchg
loope
add
loope
loope
dec
inc
push
ss
repnz
out
sbb
in
ficompl
adc
out
sarb
inc
sarl
sub
fldenv
jbe
xor
scas
add
iret
cmp
xorl
pop
daa
test
test
jl
push
into
adc
mov
xor
adc
pop
roll
mov
jno
pop
gs
insl
std
fs
cmp
or
insl
mov
divb
xchg
cmp
mov
outsl
arpl
xchg
enter
dec
add
and
movsb
ror
cmc
rcr
add
stc
negb
fisubs
movl
cmc
mov
repnz
mov
mov
and
pop
add
addb
imul
lcall
sub
mov
int
mov
imulb
pop
iret
mov
mov
dec
shrb
xchg
inc
mov
loopne
push
mov
aam
jg
dec
out
pop
popa
mov
xchg
cmp
outsb
mov
je
cmpsl
sarl
test
mov
ljmp
cmp
and
popf
pop
mov
mov
js
out
xchg
jecxz
ret
adc
sbb
xchg
mov
cmc
jge
aas
xchg
xor
jmp
shrb
into
int
stos
jns
outsl
push
pop
out
push
add
js
dec
inc
dec
mov
inc
call
sbb
aaa
adc
mov
lret
mov
das
insb
sahf
jns
lock
stc
push
mov
in
lods
jns
rclb
orl
adc
and
jae
pop
ss
mov
sbb
loope
cmp
inc
dec
arpl
shll
mov
add
and
xlat
add
out
iret
inc
push
mov
jno
mov
jbe
mov
sub
lea
imul
dec
in
daa
xchg
lock
lods
fildl
mov
aas
repz
jge
jb
jge
mov
cltd
cmp
inc
xor
mov
cmp
push
stos
fstpl
push
push
fcmovnu
add
fs
pop
inc
jnp
or
sbb
stos
addb
lahf
pop
shll
xchg
cmpsb
or
mov
out
movsl
rolb
pop
les
jns
xchg
popf
in
mov
push
jbe,pn
jne
mov
in
imul
mov
mov
inc
sub
shrb
or
mov
or
mul
jl
or
test
clc
outsb
mov
pop
movaps
mov
sbb
sti
mov
test
shll
jle
in
mov
jno
or
mov
jae
sub
or
pop
and
xchg
adc
mov
outsl
xor
mov
ret
pop
pop
ret
jle
xor
xchg
jae
push
cltd
cmpsb
jmp
mov
addr16
xor
pushf
shl
fstp
imul
outsl
push
repnz
out
push
popf
lock
or
test
fisubl
jns
pop
jno
subb
cmc
call
inc
xor
jae
fsubrp
stos
xchg
scas
dec
mov
or
xor
xor
popf
pop
mov
sbb
mov
sbb
shl
dec
mov
xor
test
dec
mov
stos
pop
cld
xchg
pop
cmp
dec
push
jmp
mov
dec
cmp
sub
dec
test
stc
pushf
in
mov
xchg
adc
mov
int
xchg
cld
in
test
mov
shrl
add
aas
sub
cs
dec
out
mov
lret
dec
and
movsl
ficoms
lods
inc
jb
or
das
fst
mov
lahf
mov
cmp
push
filds
rol
gs
mov
test
mov
imulb
je
in
sub
xlat
mov
push
pop
sub
push
lahf
pop
insl
fildll
icebp
mov
pop
sbb
xor
mov
and
cmp
fadds
mov
rorb
add
cmpsb
pop
push
adc
dec
outsb
cltd
jg
arpl
add
add
xor
cmpsb
inc
mov
mov
jge
sub
fsubrp
sbb
pushf
dec
imul
xchg
decl
movsb
inc
pushf
dec
and
hlt
std
mov
repnz
arpl
xlat
sub
jecxz
ja
xchg
fstps
nop
aad
lods
std
out
es
add
add
repnz
push
lahf
mov
or
std
jl
loope
mov
dec
xchg
pop
mov
sbb
jne
cmp
jno
stos
sub
xlat
push
and
shll
jo
xor
scas
loope
push
sbb
rorb
je
aas
call
push
addl
movsl
outsb
pop
xor
and
dec
jb
test
or
mov
enter
dec
lods
jae
mov
scas
xchg
sbb
jne
mov
fcomps
stos
mov
jae
repz
test
loope
sahf
dec
sub
and
fisttps
push
repz
pop
aaa
jp
lret
inc
iret
int
xor
mov
aam
mov
inc
imul
int
jo
jb
sti
mov
mov
adcb
cmpb
sbb
in
mov
push
outsb
imul
adc
pop
ret
cmp
in
scas
in
sbb
jge
out
pop
movsl
into
cli
mov
mov
pop
mov
mov
js
inc
xor
cmpsl
popf
jae
pushf
jg
jbe
std
shll
popf
outsl
repz
and
pop
clc
daa
fmulp
je
add
pushl
jns
movsl
loop
fs
sub
pop
daa
pop
adc
dec
bound
fnsave
sub
push
pop
dec
inc
shll
jns
pop
lret
iret
mov
icebp
jns
pop
mov
addl
inc
cld
movsl
sub
mov
lods
test
xor
jae
mov
or
inc
inc
mov
out
pusha
arpl
cmc
rcl
popf
adc
cwtl
push
ljmp
iret
dec
xchg
fld1
xchg
fldenv
sahf
out
mov
sub
mov
ljmp
and
mov
xor
test
sahf
jl
lret
loopne
jnp
cmpsb
xlat
jmp
mov
or
roll
xchg
jo
sbb
es
fldl
xchg
xor
sub
cs
sahf
loopne
dec
es
js
mov
adc
push
adcb
jbe
adc
stc
arpl
ret
lea
js
fstpl
xchg
pop
movsb
pandn
ss
dec
sub
mov
jl
test
aad
dec
xor
push
fstl
int3
mov
lods
pop
cmp
cld
jb
cmp
repz
cli
push
pusha
sub
mov
mov
sub
sub
lods
inc
push
aad
clc
lcall
xor
std
mov
xchg
rolb
mov
out
add
xchg
mov
add
mov
jb
bound
jae
inc
lret
sub
adc
jo
xchg
out
js
dec
mov
inc
pop
enter
pop
adc
sub
inc
sbb
not
scas
inc
pop
xchg
inc
pushf
or
popf
xor
addr16
jmp
dec
mov
adc
rcrb
dec
fwait
adc
adc
jecxz
pop
iret
xchg
loop
pop
idivl
flds
jno
pusha
sbb
sub
fists
or
fsubs
mov
inc
cld
stc
push
daa
mov
jnp
or
push
repz
jp
push
lock
mov
mov
fnsave
in
mov
jmp
mov
pop
or
sub
inc
rcl
sub
jae
shlb
int3
ljmp
cmp
jg
mov
shlb
jnp
mov
jecxz
push
mov
or
add
mov
mov
stc
insb
cmpsb
jp
xor
adc
xchg
mov
mov
mov
insb
mov
cli
sub
in
jnp
add
push
cwtl
mov
into
inc
repnz
imul
mov
repz
xchg
mov
mov
insb
cmp
sub
out
and
imul
ljmp
mov
jno
jo
jl
jp
and
lahf
sahf
xchg
cmp
insl
and
mov
mov
loopne
and
xorl
mov
mov
jb
cmpb
dec
inc
or
adc
jge
pushf
lock
dec
sti
pop
ret
lret
hlt
jnp
dec
push
lods
sub
mov
movsb
mov
inc
sub
add
push
inc
add
push
cmp
andl
jnp
mov
fucomi
out
std
and
mov
pop
je
add
outsb
outsb
cs
and
jl
into
sub
jge
jbe
sub
pop
lods
and
mov
pop
flds
mov
push
cmp
cmp
mov
mov
xchg
pop
adc
push
cmpsl
inc
cld
mov
arpl
out
lds
xchg
lret
fstl
inc
addr16
mov
adc
lods
jecxz
decl
pop
jns
xor
js
insb
lret
xchg
addl
shll
mov
lahf
mov
aam
mov
lahf
xor
imul
js
fisubrs
xlat
bound
fstl
xchg
out
out
addb
sbb
scas
add
and
xor
data16
adcl
ljmp
lahf
inc
popf
aaa
mov
leave
mov
not
push
xor
and
nop
lcall
push
push
pusha
xor
jne
and
sub
xor
cmc
ss
xchg
xor
ja
xor
scas
jns
xor
add
sub
pop
xor
orb
cmc
arpl
sarl
and
lock
or
mov
insl
inc
stos
and
das
mov
dec
divb
and
xor
adc
cwtl
xchg
loop
into
mov
std
cmp
and
pop
shl
mov
jmp
mov
add
test
addr16
fucom
mov
ret
test
addl
jge
das
sbb
dec
lods
xorl
xor
fstpt
xchg
sbb
test
xor
mov
sti
dec
cli
dec
in
jge
cwtl
push
fcompl
cmp
out
adc
js
mov
int
sbb
pop
fmull
add
add
cli
loopne
pop
rcrl
inc
imul
mov
andl
stos
daa
fnstsw
sbb
inc
sbb
movsb
cmp
cli
push
and
add
std
lret
pushl
cmp
inc
outsl
das
fldl
pusha
cmp
mov
inc
adc
fwait
mov
mov
push
ret
cmpsb
and
insl
mov
cmpsb
shl
xor
xorl
jle
pop
adc
cmp
cmc
mov
lcall
inc
int
sbb
dec
mov
int3
and
add
les
and
and
fiadds
or
pushf
xchg
jl
jb
xchg
xor
mov
sub
pusha
sahf
jge
add
aad
jae
mulb
jae
test
fstpt
out
test
shlb
repnz
test
dec
dec
popa
pop
inc
in
lods
loope
ds
fcmovnbe
scas
subl
repnz
das
test
out
adc
or
cwtl
cld
xlat
arpl
popa
mov
add
ret
pop
fs
cltd
mov
adc
mov
out
les
jg
sbb
push
les
xchg
cwtl
shrl
dec
repnz
cmp
sbb
out
in
ljmp
fdivrl
in
sbb
loope
rorb
cld
jmp
jg
fdivrl
jae
test
and
dec
nop
fsubrp
lret
push
inc
cmp
dec
sub
in
or
pop
or
js
loopne
sbb
or
dec
or
into
ret
aas
pop
push
jmp
pop
data16
dec
leave
aad
mov
les
mov
jecxz
sbb
inc
repz
mov
push
dec
adc
js
jbe
jae
or
ljmp
add
jnp
pop
inc
jmp
or
pop
aad
mov
mov
test
push
jae
jo
pop
std
pop
push
mov
dec
lea
push
stos
cmp
pushl
cmpsl
in
sub
int3
js
fcomp
insl
push
bnd
leave
jb
ss
jg
int
lret
cmp
insb
mov
call
sbb
cltd
xchg
add
jne
fwait
std
mull
arpl
sbb
sub
xor
jns
xor
adc
ficoml
jg
push
adc
push
xor
pop
push
inc
stos
lods
xchg
inc
rcrb
adc
lcall
movsb
and
xchg
sub
push
sbb
cmpl
lcall
sub
jae
dec
aam
mov
int
outsb
jo
stos
sarb
cli
pop
mov
cli
dec
scas
xchg
stos
xchg
xor
pop
mov
test
pop
out
or
jns
dec
mov
jmp
mov
mov
es
xchg
jg
imul
mov
xchg
movsl
mov
and
stos
cs
pop
cmc
popf
leave
mov
mov
xor
pop
inc
xadd
js
dec
cmp
push
aas
push
outsb
rcrb
movsb
mov
out
add
jmp
xchg
sub
xchg
dec
mov
jge
xchg
adcb
and
push
ds
or
stc
or
mov
mov
and
sahf
dec
jno
sub
lods
sbb
add
out
push
inc
pusha
jb
mov
movsl
and
nop
dec
sbb
js
in
sub
in
popa
daa
imul
ret
roll
adc
mov
pushf
outsl
sbb
fbld
loopne
cltd
enter
sub
sub
push
sbb
push
inc
mov
jne
mov
jl
movsb
inc
add
sub
arpl
push
xorl
lret
mov
sub
sbb
sbb
dec
out
clc
in
mov
xchg
pop
pushf
repnz
jge
lahf
dec
push
inc
pop
xchg
jb
or
dec
data16
ss
pusha
fistps
mov
sub
ret
ret
test
and
pop
outsb
lds
push
jle
push
and
pop
fwait
inc
pop
jne
pop
stc
stos
or
cli
mov
insl
cwtl
pushf
int
pop
or
add
mov
lea
repz
jmp
incb
xorl
sti
cmpsl
xchg
addr16
cld
lahf
js
push
jmp
fs
aam
pop
inc
dec
or
add
cmp
xor
decb
jo
ret
lcall
jnp
lret
mov
dec
jmp
int3
adc
dec
or
aam
jnp
xor
jb
sub
mov
lahf
test
cli
jg
xor
inc
orb
push
lahf
repz
lret
cs
ja
into
fdiv
daa
xchg
add
lea
add
push
lret
sub
enter
mov
mov
mov
cmc
loopne
xchg
lods
mov
mov
adc
std
fsubr
jg
cli
xor
paddw
ret
pop
mov
out
add
cmp
in
mov
daa
dec
push
dec
adc
std
and
dec
xor
pop
adc
cmp
repz
mov
sbb
cmp
je
movsl
iret
emms
outsb
in
jecxz
pop
subb
stc
aad
jns
sti
aad
test
scas
push
sbb
in
cmp
sub
and
cmp
inc
jne
or
in
or
popa
dec
xchg
and
outsb
ret
xlat
bound
orl
lock
ret
or
vcmppd
sbb
cmp
inc
pop
add
sti
xchg
out
out
fs
dec
sbb
jns
jb
in
add
lahf
pop
out
inc
push
adc
sub
push
cli
icebp
out
adc
cmp
fcmovnb
mov
push
inc
dec
mov
testb
inc
push
cmpsb
jg
add
pop
call
jne
pop
leave
popa
movl
sbb
call
repz
shl
pusha
pop
lds
and
mov
jmp
roll
es
ljmp
orl
mov
popf
cmc
cmp
jno
mov
movsl
push
mov
push
je
sbb
mov
pop
aas
mov
fdivr
loopne
lds
int3
loope
push
popf
xlat
lahf
movsl
pop
ss
push
outsl
jp
mov
jns
xchg
pop
mov
aaa
lds
jb
outsb
xchg
lret
popl
mov
mov
jns
out
pop
mov
repz
adc
sbb
push
mov
dec
adc
testb
sahf
pop
cmp
mov
out
iret
xor
sti
xchg
in
or
and
jb
cli
loop
das
in
movsb
mov
fiadds
out
inc
inc
std
pop
js
lcall
mov
cltd
clc
clc
into
mov
cmp
mov
or
imul
xor
sti
testl
xor
dec
roll
or
dec
mov
pop
mov
repz
add
mov
gs
or
dec
mov
hlt
fildl
lock
fadds
outsl
xchg
push
jg
in
enter
out
cmpsb
add
jl
pop
movsl
xlat
and
repz
subl
mov
das
mov
cmpl
cmpsl
xor
cli
inc
cli
or
out
mov
sbb
dec
cmp
xor
lret
es
push
adc
xchg
test
mov
xorl
test
loop
push
add
mov
test
fwait
aas
xor
repnz
cltd
xor
jmp
js
out
push
out
mov
test
repz
push
pop
mov
das
mov
inc
push
jae
je
push
xor
decb
or
mov
js
add
outsl
mov
pop
mov
insb
mov
mov
jnp
packsswb
add
sbb
sbb
dec
sub
and
and
jge
dec
pop
scas
mov
imul
imul
ja
mov
call
mov
mov
mov
dec
pop
pop
loope
in
push
scas
clc
lahf
or
jno
mov
test
arpl
cltd
cs
subb
xor
and
sbb
fistpll
idivl
repnz
cmp
arpl
push
lea
cmc
dec
mov
pusha
out
and
add
jne
mov
mov
mov
cmp
je
jmp
jb
or
mov
push
lret
dec
push
jge
or
jp
data16
in
add
xchg
lcall
xchg
push
or
out
lock
jno
jae
aaa
fcompl
sbb
mov
fstps
nop
pop
mov
stos
das
scas
cmpsl
or
mov
push
negl
mov
loopne
sti
jne
or
pop
and
test
into
gs
sbb
mov
insl
dec
out
adc
mov
cmp
jae
push
cmp
adc
std
xchg
enter
jns
jns
push
cmpb
add
adc
sbb
jle
dec
daa
pop
inc
push
jmp
xor
mov
rcl
cmc
cld
mov
cmp
jbe
pop
jae
fists
sbb
mov
stc
xor
mov
fsub
pop
insl
andb
inc
sti
push
sti
dec
mov
daa
dec
in
xchg
xchg
es
lret
dec
lahf
shll
fsubrs
mov
aaa
add
add
adc
notl
push
xchg
jmp
push
negb
push
or
sarl
sub
sbb
jle
xor
addr16
outsl
or
lods
mov
mov
push
pop
stc
mov
cmp
dec
lret
scas
cmp
lgdtl
push
push
fucomip
insb
sarl
mov
scas
inc
repnz
pop
dec
out
xor
inc
pop
dec
arpl
inc
jmp
iret
or
jne
adc
scas
rcll
les
out
test
push
cwtl
adc
push
push
xor
jp
test
cmp
aam
jecxz
xlat
fs
mov
shrb
push
sub
scas
jnp,pn
or
inc
insb
xchg
add
pop
outsl
test
imul
testb
mov
je
aas
or
mov
lret
daa
mov
mov
das
mov
in
dec
adc
mov
or
inc
mov
dec
dec
jae
test
out
nop
lods
ja
out
out
pop
shlb
test
and
sbb
add
jle
in
pop
cmp
ja
add
out
and
in
add
push
into
mov
and
cmpsb
or
or
dec
mov
mov
pop
aam
push
iret
repnz
dec
adcb
push
jp
mov
push
icebp
mov
pusha
adc
leave
mov
mov
add
popf
adc
mov
pop
ss
shll
fcomi
inc
sub
push
add
popa
das
outsb
scas
mov
and
test
jno
dec
loopne
es
pop
pop
insb
or
push
jae
loope
cmpsb
rorl
mov
cmp
dec
fldcw
popf
aad
lods
repnz
cwtl
std
sarl
mov
push
adc
inc
std
cli
adc
gs
mov
xchg
cmc
or
pusha
fcompl
cmp
fisttps
addb
jp
je
in
mov
adc
je
es
cmp
iret
adc
and
xchg
aam
dec
into
lea
fcmovne
dec
fsubs
icebp
cmc
popa
fisubs
inc
ljmp
xchg
jne
nop
sarl
pop
test
lret
imul
push
pop
or
aaa
ds
cmp
inc
notl
stos
mov
into
jecxz
mov
cmpsb
lahf
add
stc
orb
mov
enter
stos
imul
inc
lahf
pop
movsl
mov
mov
or
sub
mov
adc
in
mov
ljmp
adc
push
inc
jmp
jne
test
pop
or
mov
sub
pop
or
shll
arpl
lahf
adc
or
sbb
fsubl
test
sbb
ret
or
cli
push
jg
ffreep
loop
lds
into
insb
mov
aad
add
dec
xor
dec
push
mov
lds
pop
scas
movsl
idivl
movsl
cli
jl
or
pop
jb
add
out
cld
call
out
dec
inc
xchg
lods
mov
std
and
add
dec
pop
add
fidivl
imul
mov
rolb
sub
xchg
and
xor
test
iret
sbb
or
pop
out
stc
mov
mov
sbb
pop
loopne
outsb
mov
fisttpll
push
fadds
cwtl
nop
mov
xchg
into
inc
roll
dec
lods
xchg
nop
es
sub
fdiv
insb
pop
loopne
push
adc
ds
mov
jae
dec
cmp
mov
jb
pop
popa
sub
frstor
data16
mov
mov
cmp
pop
lcall
cmp
push
sti
dec
sub
aas
mov
scas
mov
aad
fistpll
xor
inc
push
fwait
pop
lret
xchg
ret
or
cmp
movsl
bound
mull
jb
jmp
and
dec
das
mov
test
rcr
cld
out
mov
jne
mov
dec
outsb
dec
sbbl
xchg
sub
aas
testb
ss
rcll
inc
mov
das
fs
and
nop
inc
imul
iret
push
add
aad
pop
cld
sub
jp
and
shrl
movsb
divb
cmp
pop
pop
pushf
je
mov
sub
insb
add
incb
sarb
sub
test
leave
movsl
loopne
sbb
adc
sbb
push
insb
jns
aam
sbb
inc
cld
mov
dec
sbb
xchg
or
sbb
or
cli
xchg
imul
pop
jns
or
pop
loop
loop
xor
mov
sahf
pusha
loope
xchg
sbb
es
push
in
dec
adc
push
bound
sub
adc
dec
data16
out
leave
dec
outsl
sub
sbb
pop
cld
shll
sti
inc
loopne
shr
nop
popf
pop
pop
xchg
xchg
xlat
or
xor
fidivs
adc
aam
dec
mov
adc
mov
cwtl
imul
mov
mov
cli
mov
cltd
dec
dec
sbb
sub
in
jp
inc
mov
mov
adc
sub
pop
xor
sbb
jne
arpl
or
cmp
cmp
and
lahf
sbb
mov
adc
lods
sti
out
jecxz
pop
stos
popf
and
imul
or
and
mov
imul
fucomi
push
pop
add
xchg
jg
mov
adc
sbb
xchg
int3
rcll
add
insb
fldt
outsb
mov
jge
loope
aaa
add
add
pop
loope
mov
jmp
lcall
cmp
fdivrl
rorl
iret
dec
in
pop
xchg
leave
mov
mov
loop
pop
push
xchg
pmaxub
pop
inc
pop
or
outsl
mov
cmp
mov
fldt
mov
stc
shl
add
jo
out
sahf
jo
xor
adc
in
and
clc
pop
add
mov
push
and
mov
jne
push
and
or
lahf
add
dec
out
mov
cmpsl
mov
scas
and
loope
sbb
mov
and
stc
xor
inc
mov
ret
cmpsl
dec
jp
push
outsb
rcrb
ss
shlb
adc
out
pop
test
adc
dec
repz
mov
jecxz
xchg
jnp
mov
push
or
lea
cmpl
add
xchg
js
sbb
cld
imul
inc
sbb
inc
add
pop
pop
adc
mov
sbb
and
loope
pop
xchg
gs
and
sbb
push
test
int
pop
movsl
or
inc
mov
fists
mov
testb
pop
xchg
jb
push
push
sarb
popf
xor
call
xor
mov
pusha
movsl
jae
mov
scas
into
out
stos
pop
inc
out
pop
insl
jbe
insl
in
pop
add
push
outsl
and
pusha
sub
loopne
and
lods
or
push
xlat
es
jecxz
enter
ljmp
stc
sahf
inc
bnd
push
or
mov
jge
ret
cs
lea
pop
out
jae
mov
add
sub
or
cmpb
inc
push
arpl
push
jle
cmp
sub
cmpl
and
xlat
or
fwait
mov
imul
or
sbb
cmpsb
and
popa
flds
and
xorl
movsl
imull
add
fs
mov
mov
mov
add
aaa
lock
inc
or
iret
leave
fdiv
mov
jp
in
call
fnstcw
add
sub
das
xor
cmp
jne
jnp
and
jle
dec
or
push
jmp
push
xor
dec
jb
shll
sbb
andb
xchg
mov
xchg
xchg
repnz
je
dec
lods
or
in
mov
inc
dec
cmp
mov
inc
and
test
outsb
in
xor
dec
into
xchg
dec
cwtl
nop
inc
cmc
xchg
xchg
sbb
out
stos
push
adc
sbb
mov
xchg
out
enter
or
push
outsl
lock
das
xor
mov
jp
es
cld
xchg
cs
or
mov
imul
repz
inc
int3
aad
cmp
shrl
cs
icebp
pop
pop
cmp
jno
mov
sahf
aaa
push
pushf
xor
add
imul
aam
sahf
xlat
xchg
sub
enter
push
jne
adc
je
popf
ret
fcomps
push
aad
pop
mov
and
mov
xor
fisttpll
out
lret
sbb
pushf
sbb
cmovs
loopne
in
insl
fs
cmpsb
bound
mov
ss
into
or
sub
test
repnz
xchg
insl
lret
fcomp
cmp
jmp
outsl
push
jne
out
xchg
cmp
or
mov
dec
or
fdivl
out
xchg
dec
adc
dec
movsb
or
aad
xor
inc
xor
add
out
inc
inc
loope
jl
mov
cmc
pop
rep
loope
call
pop
out
ds
outsb
add
rorb
add
xor
dec
fs
popf
pusha
sub
out
push
inc
or
bound
fldl
iret
or
jg
aam
into
or
test
lds
into
mov
pusha
cmp
outsl
popf
xchg
add
pop
mov
mov
out
xchg
xor
and
adc
pusha
mov
jp
jecxz
mov
push
pop
xchg
sbb
push
shrl
aaa
imul
and
ret
test
mov
hlt
xor
xor
adc
mov
sub
inc
mov
dec
mov
repz
jle
cmp
enter
sub
daa
push
loopne
sbb
imul
mov
lock
push
into
and
outsb
test
andl
test
xor
ljmp
cmp
call
xlat
in
into
movsb
rcll
test
and
es
push
jg
inc
int3
cmp
pop
jge
stos
fnstsw
jbe
insb
inc
rorb
lods
mov
shr
pop
shrl
pop
leave
add
cmp
jb
mov
fdivs
pop
jnp
add
add
mov
push
jle
mov
ds
icebp
fs
insb
addl
fidivrs
adc
cli
push
stos
loop
andl
stc
nop
mov
push
scas
mov
mov
cmpsb
mov
jle
or
dec
fistpl
fisubrl
mov
pusha
pop
out
pop
clc
jle,pn
pop
adc
dec
mov
or
lahf
jp
mov
repz
jae
test
dec
in
lock
fs
dec
dec
xchg
insl
pop
out
int3
out
add
pushf
outsl
mov
shl
fsubrs
jmp
push
divl
mov
mov
mov
arpl
jle
adc
sbb
xchg
shll
xchg
push
inc
lods
das
aaa
and
dec
cltd
push
ds
fdivs
pop
jg
addr16
lret
inc
addb
pop
jecxz
iret
es
cmp
sbb
rclb
pop
pop
adc
sbb
push
and
mov
ljmp
and
das
push
jne
in
shll
cmp
inc
aam
sub
test
jge
pop
xor
in
and
dec
push
lods
cld
leave
mov
pushf
cmc
lods
sbb
dec
push
adc
aam
je
mov
pop
or
lret
mov
mov
rcrb
pop
cmp
ret
rcll
xchg
jmp
inc
aas
jb
pusha
inc
popf
fmuls
push
lods
scas
mov
lods
popf
fsub
cmc
cltd
xlat
or
cmp
outsb
or
mov
xchg
xor
and
adc
lret
outsl
push
mov
push
inc
xor
inc
dec
movsb
les
jo
sbbb
sub
push
pop
lea
ficomps
mov
and
mov
sbb
xor
sbb
int3
std
mov
mov
mov
rcll
popa
loopne
lcall
mov
fistps
pop
add
lods
xor
and
outsb
outsb
push
repz
daa
cmc
lret
lret
dec
mov
dec
test
add
les
andb
jae
and
shl
aad
push
jo
and
dec
pop
int3
xor
enter
sbb
mov
mov
jns
add
mov
leave
inc
in
mov
sub
add
mov
fbld
test
cmpsb
adc
and
mov
dec
dec
mov
sarl
lock
cwtl
push
hlt
adc
daa
sub
rcll
cli
push
inc
outsl
adc
cmp
jmp
stos
push
iret
adc
dec
cmp
ret
pop
movsb
scas
sbbb
aas
xor
cmp
jns
cwtl
mov
shlb
arpl
add
xor
xor
les
adc
stos
jmp
addl
and
add
test
imul
shll
lods
mov
xchg
in
sub
arpl
cmp
mov
pop
lahf
loope
fldl
imul
pusha
movl
das
aas
xchg
push
clc
pushf
pushf
adc
lock
push
xchg
cmpsl
mov
loope
add
jns
aam
pop
mov
scas
push
pop
pop
mov
inc
adc
inc
gs
dec
inc
or
jo
sub
fcmovnu
adc
iret
out
movb
and
icebp
cmp
dec
dec
scas
mov
dec
adc
aaa
sub
inc
insl
dec
add
fs
popf
jecxz
ljmp
iret
lods
mov
sub
insb
leave
xor
aaa
pushf
and
nop
dec
and
pop
sbb
fcoml
and
dec
test
xor
lcall
push
cmpsb
repz
mov
mov
sbb
jge
cmp
dec
faddl
fildll
cmc
cli
mov
xchg
xor
dec
loopne
dec
cmp
cld
xor
dec
test
mov
xor
cwtl
cmpb
mov
pop
into
xchg
xor
mov
int3
aad
xchg
cmp
mov
mov
outsl
pop
inc
pop
and
nop
push
xchg
out
je
push
cmc
dec
jo
sub
ret
inc
in
push
or
js
loop
dec
lock
xor
push
negl
and
cmp
pop
adc
and
popa
sbb
insb
cmp
pop
pop
dec
pop
xor
xor
pushfw
js
sub
mov
test
mov
mov
jno
or
fnstsw
cwtl
mov
ficomps
loopne
pop
repz
das
jle
jnp
cmp
dec
add
xchg
stos
fcompl
pop
add
sub
ss
push
test
push
adcl
dec
inc
pop
cmpsb
stos
xor
lock
insb
inc
adc
imul
cmp
mov
adc
pop
bound
hlt
jae
jno
add
aam
mov
mov
fs
repz
sahf
inc
repnz
mov
mov
push
pop
xorl
insb
dec
scas
cmpsb
dec
out
shrl
inc
dec
lods
insl
jle
mov
adc
pop
mov
mov
and
add
loopne
inc
rol
sbb
jmp
out
sub
repz
and
fdivrl
xor
xor
fwait
stc
jge
lea
shrl
fwait
or
mov
xor
hlt
mov
lret
xor
add
rclb
and
ds
push
dec
push
mov
fmull
aad
enter
or
and
sub
push
and
push
imull
cmc
xor
lods
enter
mov
pop
ret
add
in
nop
out
mov
mov
jne
test
insb
inc
sarl
stos
shlb
sub
jmp
rolb
push
xlat
test
out
add
pop
and
sbb
xor
push
or
out
xchg
dec
xchg
fcomps
mov
cld
imul
data16
pop
inc
sub
cmc
dec
dec
lahf
imul
out
testb
dec
rcr
sub
test
dec
xor
mov
mov
cmp
dec
sahf
aas
mov
and
or
push
xor
js
inc
pop
fidivl
cmc
dec
and
cmc
and
fisttpl
dec
ljmp
push
pop
push
dec
jl
stos
dec
dec
je
jmp
divb
popf
adc
fnstsw
popf
push
dec
aas
insl
sub
arpl
inc
jmp
aad
aam
loop
sti
andl
pushf
in
xchg
mov
out
sbb
les
loopne
enter
mov
cmp
addr16
lahf
or
loope
pop
sbb
insb
and
pop
popf
push
mov
and
bound
mov
push
mov
push
sub
push
repnz
xlat
rcrb
shlb
inc
dec
add
sub
or
sub
fsubl
inc
pop
cmp
rcrl
repnz
loop
xlat
int
iret
xchg
adc
jl
mov
daa
scas
and
rcrl
in
push
ret
lcall
fadds
cvttps2dq
jecxz
lret
pop
lods
pop
imul
sub
shl
jae
sbb
mov
jmp
inc
jmp
pop
sub
adc
jecxz
outsb
mov
sbbb
mov
hlt
fmuls
add
and
aad
sub
adcl
sub
mov
cs
pusha
jae
add
cltd
and
aam
loopne
pop
xor
jge
ret
addl
sub
sub
or
xchg
and
xor
scas
leave
or
adc
pop
je
imul
dec
shll
pushf
dec
dec
inc
push
and
cmc
dec
jge
jne
rorb
cs
mov
cmp
cwtl
pop
fdivl
jg
xchg
inc
aas
xor
test
enter
push
insl
mov
cmp
add
cmp
xchg
or
xchg
and
xor
sbb
xor
jbe
mov
scas
popa
push
cmp
lds
loopne
mov
mov
xlat
movsl
pusha
gs
dec
pusha
xor
xlat
add
ret
popf
lods
pop
lods
test
sbb
hlt
sbb
popf
scas
roll
sub
popa
rcl
cltd
jle
xchg
sub
and
mov
mov
push
sbb
pop
test
pop
sti
and
inc
mov
iret
call
jmp
out
outsb
push
add
cmp
mov
rolb
data16
aad
push
adcb
fiaddl
dec
das
dec
mov
shlb
xchg
and
jge
shrb
jp
daa
and
push
mov
sbb
push
adc
mov
mov
sar
mov
sbb
int3
jbe
mov
jle
cli
not
ret
sub
je
inc
testb
jp
popf
xchg
in
mov
out
cmpsb
sbb
cmpsl
cwtl
scas
iret
dec
int
mov
lock
add
or
aad
push
push
rclb
test
lds
sahf
mov
in
fiaddl
jp
mov
xchg
inc
jae
xchg
loopne
xchg
leave
cs
and
pusha
icebp
mov
inc
cs
dec
jmp
stos
pop
das
cmp
lret
ficoml
or
fdivr
pop
dec
cmpsl
shll
sub
fdiv
pop
cs
mov
push
inc
fldl
ret
xor
pop
push
sub
lock
mov
testl
push
fldcw
addb
push
inc
mov
pop
aad
mov
sub
push
mov
pop
and
movsl
movsb
add
shll
push
add
sahf
push
call
cmp
cmp
out
mov
mov
mov
dec
xchg
mov
mov
xchg
sbb
sbb
push
or
rcll
xor
pop
jle
cmc
icebp
and
cs
das
out
fcom
lds
or
and
aaa
test
cwtl
push
mov
pop
jmp
adcb
mov
test
test
lret
dec
imul
insb
insl
test
jmp
hlt
cmp
fiaddl
mov
insb
es
sbb
movsb
shrl
inc
icebp
neg
insl
dec
mov
jl
mov
cmpl
push
lock
mov
cmpsb
mov
xor
in
jp
movsl
and
add
sub
or
xchg
xor
push
sub
xlat
cmp
leave
pop
push
mov
lock
out
bound
sbbb
push
call
push
dec
inc
mov
xlat
mov
test
push
jb
inc
jmp
mov
stos
inc
testl
or
sarb
cli
sarb
mov
sub
dec
outsb
sahf
fs
adc
int
adc
aad
sbb
stos
nop
insb
sti
cld
adc
push
cld
mov
in
ret
into
cld
imull
hlt
add
cmpsb
adc
popa
mov
sub
in
andl
push
and
xchg
mov
sub
int3
ret
mov
dec
mov
mov
shl
jp
or
or
insl
xor
xor
jbe
push
or
jmp
sbb
xchg
outsl
mov
rcrb
scas
mov
mov
mov
pop
push
push
or
sub
testl
jbe
cmpsl
pop
push
lock
or
movsl
sbb
sub
insb
mov
addr16
fiadds
adc
mov
jl
stc
mov
leave
adc
dec
mov
nop
das
aam
stc
sub
in
call
rcrb
cli
add
sbb
popa
outsb
sahf
cmpsl
in
pushf
sbb
popa
cmp
out
mov
mov
faddl
jmp
movsl
cmp
ret
mov
push
sbb
sahf
adc
adc
cwtl
adc
movsl
cmpsl
pop
xchg
cmpsl
cltd
into
jecxz
rolb
rclb
push
add
mov
dec
notb
cmc
jnp
pop
in
or
and
test
fld
mov
mov
shll
pushf
xor
loop
ss
stc
fsubrl
dec
scas
adc
push
mov
ja
mov
push
add
or
cli
loop
mul
jle
arpl
jl
jae
xor
leave
pop
outsl
mov
outsb
jns
cmp
daa
mov
sbb
inc
rcl
pop
and
sbb
imull
mov
rorb
je
cmp
add
adc
std
cmpsb
mov
ret
adc
sarl
jns
lods
add
inc
sub
adc
mul
out
xchg
pop
scas
rolb
dec
pop
pop
shll
iret
fwait
popf
dec
and
pop
lahf
cmp
cwtl
jne
pop
sbb
popf
push
adc
test
aad
xchg
jb
inc
pop
lods
stos
aas
xacquire
shlb
outsb
stos
stc
xor
pusha
nop
or
push
dec
cmp
cli
sbb
sub
jg
rcrl
pop
mov
and
daa
mov
adc
ret
adc
mov
pusha
bound
gs
mov
jnp
testb
lods
cwtl
cmp
push
pop
adc
jmp
push
imul
outsb
and
add
mov
jns
mov
mov
mov
int3
pusha
dec
dec
xchg
gs
sub
cli
cwtl
leave
and
or
xchg
rorl
clc
inc
push
lock
inc
cmp
inc
invd
std
add
mov
pushf
outsl
xchg
sbb
sbb
cltd
jp
icebp
js
stc
int
insl
cmpsl
int
stos
fwait
lcall
and
cmp
push
jg
jmp
icebp
or
jp
fucom
jnp
repnz
insl
in
out
bound
dec
pop
jbe
outsl
shll
gs
lods
xchg
xor
push
stc
ret
ljmp
cld
cs
jge
push
aaa
or
mov
test
lahf
cmpsb
dec
adc
sub
mov
popa
outsb
adc
jmp
lea
ljmp
test
into
mov
pop
sbb
adc
shll
push
jle
sbb
dec
or
mul
mov
dec
std
fnstenv
hlt
inc
fimull
adc
outsl
bound
lock
mov
stos
data16
mov
dec
inc
pop
dec
add
hlt
fdivrl
xchg
or
fcomps
pop
negl
loop
dec
pusha
movsl
sub
insb
pop
xchg
cli
aaa
xchg
jle
pop
mov
sub
orl
pop
xchg
lods
cmpsl
add
lods
mov
adc
xor
xchg
repnz
dec
loop
scas
hlt
mov
out
jae
outsb
cmp
jo
pop
fisttpl
leave
sub
xchg
xabort
inc
dec
iret
mov
push
pushf
push
jecxz
mov
and
fiadds
out
mov
ds
in
inc
clc
aad
xor
adc
adc
jb
add
push
mov
cli
clc
dec
fisttps
roll
jmp
in
mov
lret
pusha
cmp
adc
xor
call
in
jns
add
inc
imul
and
push
mov
mov
sar
ja
rcrb
lock
cmp
mov
adc
scas
roll
fwait
dec
pop
out
pop
imul
dec
cld
lahf
out
jecxz
lods
pop
xor
aam
ds
iret
adc
sub
xor
push
cld
sub
enter
lcall
mov
adc
jge
cmc
mov
dec
pop
insb
loope
shlb
stos
int
push
xchg
daa
dec
icebp
std
mov
jle
into
push
cmpsb
dec
int3
xor
fs
pop
fildl
test
xchg
loop
cmp
sub
inc
stc
dec
out
aam
loopne
int3
jge
lcall
lea
enter
mov
fwait
out
pop
xor
lods
repnz
aad
bound
mov
loop
scas
repz
mov
loope
or
push
adc
dec
sub
pop
push
lds
sbb
mov
js
add
pop
pop
rclb
dec
and
mov
push
and
in
in
xor
pop
icebp
out
mov
mov
icebp
popa
scas
xchg
test
dec
mov
cmp
xchg
xor
daa
outsl
in
out
inc
daa
jecxz
sbb
outsb
ljmp
push
pop
mov
cmpsb
fstl
fwait
push
xchg
pushf
mov
jle
mov
sub
push
fidivrs
xor
mov
add
cmp
cmp
jge
pop
popa
shl
adc
testb
aas
fcomps
adc
inc
fidivl
or
dec
or
push
xchg
xorb
sbb
repz
jmp
out
sbb
in
cltd
cmp
mov
nop
stc
fwait
sbb
xchg
mov
jl
insl
sti
jo
rcrb
or
push
mov
dec
and
cld
es
inc
aam
clc
aad
lret
rcrl
mov
hlt
push
mov
ret
cmpl
sbb
jp
rclb
lds
xchg
or
cmc
bnd
dec
sbb
mov
outsl
pop
add
enter
sahf
nop
aam
scas
jae
sbb
arpl
mov
testl
addr16
cld
icebp
xchg
cmp
insl
and
pop
xor
push
mov
lock
or
insl
pop
xchg
addr16
cmpsb
sub
dec
sub
fcomp
imul
fstpl
in
and
outsl
into
das
hlt
xchg
dec
test
dec
mov
xorl
jle
adc
inc
cs
pusha
or
rcr
insb
inc
sbb
icebp
aam
xchg
lret
jecxz
and
mov
loopne
movl
aaa
mov
push
or
xlat
dec
loop
adc
into
enter
fcoms
jno
jge
addr16
mov
pusha
outsb
mov
lock
pop
mov
arpl
cmp
shll
ja
pop
and
xlat
bound
cmp
imul
adc
pop
xchg
stos
popf
js
sbb
pop
jae
mov
rcll
dec
or
jl
jae
jmp
lret
stc
shlb
and
dec
popf
mov
out
sbb
insb
test
xlat
dec
jmp
adc
popa
cwtl
aam
rcll
cli
add
pop
sbb
aad
call
lods
dec
es
dec
addr16
push
cmp
cmc
inc
insl
cmp
arpl
cmp
pop
rcl
pusha
iret
cmp
jne
mov
imul
pop
dec
sub
xchg
mov
js
jae
stc
adc
insl
pop
popf
ror
cmpsl
sbb
or
cmp
or
jmp
mov
or
jge
mov
jg
add
mov
stos
insl
lods
out
insl
lods
add
jae
dec
adc
or
lret
insl
call
sbb
and
pop
outsl
ja
mov
push
mov
inc
add
inc
pop
insl
cli
mov
adc
pusha
sahf
mov
pop
cmp
scas
xlat
mov
push
call
xor
sub
mov
jecxz
adc
or
fistpl
pushl
in
mov
mov
cmp
rolb
icebp
mov
or
repnz
xor
lret
iret
ds
pop
out
ss
js
out
out
fstp
push
aam
movsl
sbb
cli
mov
push
dec
cld
push
cli
fwait
dec
ror
jle
icebp
adc
and
cmp
add
xor
sbb
lret
pushf
dec
cmp
or
jg
leave
mov
shrl
sub
pop
xlat
scas
push
mov
add
mov
or
mov
rcrb
sub
ret
wbinvd
pop
mov
inc
dec
pushf
ds
dec
lret
adcb
and
je
sbb
fdiv
dec
loope
xchg
xchg
sti
icebp
scas
stc
cltd
lcall
int3
adc
mov
xchg
mov
mov
gs
ja
js
xor
sahf
mov
mov
mov
cmp
jne
mov
mov
movsbl
xor
add
jmp
cmp
mov
stc
mov
fnstcw
cmp
or
jp
push
dec
repnz
stc
sti
lea
out
cmp
sub
mov
add
and
sbb
mov
pop
cld
push
pop
mov
and
loop
ret
sti
into
adc
cmp
pop
jb
cltd
inc
pop
out
sbb
addr16
adc
jp
cmc
xor
add
std
inc
dec
stos
push
jne
mov
test
xlat
or
and
mov
xchg
xchg
mov
movsb
sub
jns
xlat
scas
push
jns
sarl
xor
sti
cmpsb
sbb
fists
cmpsb
pop
shl
push
or
xchg
xchg
cmc
stos
pop
mov
outsl
add
ret
xor
mov
fidivl
inc
mov
add
adc
scas
data16
mov
cmp
iret
mov
jno
xor
call
push
cld
cmp
mov
add
or
pop
mov
movsl
leave
mov
mov
mov
fnsave
in
lock
jp
adc
mov
and
int3
inc
sti
push
mov
mov
mov
stos
movsb
outsb
stos
fmuls
stc
lahf
mov
sub
out
jmp
xor
mov
movsb
lods
or
ljmp
inc
jmp
xor
cmpsb
add
shrb
add
and
repnz
aam
mov
add
push
stc
cwtl
dec
mov
and
mov
mov
mov
jb
or
xor
push
and
cmp
adc
add
iret
rclb
jb
pop
sub
push
inc
or
push
inc
outsl
testl
inc
out
iret
xchg
adc
mov
and
dec
pop
rolb
pop
popa
ds
add
bound
rcr
mov
lret
pushw
in
rorl
pop
inc
jmp
push
icebp
lock
jns
stos
mov
sbb
xor
xor
sub
fs
dec
and
fdivl
and
mov
pop
add
int3
and
jns
fs
mov
push
sti
mull
xor
adc
js
pop
ret
sbb
xchg
bound
pop
add
pop
jno
jns
adc
addr16
adc
inc
xchg
pop
jg
sbb
imul
sbb
push
pop
loope
adc
pop
loopne
sbb
cwtl
xor
push
fisubrs
mov
test
in
scas
xchg
out
mov
dec
mov
and
decb
in
sub
jnp
lret
inc
aas
xchg
or
mov
stc
aam
loopne
addr16
sub
pop
inc
xlat
jbe
push
mov
out
sub
lret
stos
mov
xor
xchg
movsb
fistpll
popa
sahf
xor
jb
inc
cwtl
push
and
mov
and
in
gs
jle
scas
adc
in
cmp
adc
insb
jmp
in
push
mov
add
stos
add
pop
enter
stos
or
jp
cmc
aas
std
out
mov
scas
inc
repz
cmp
jp
cmp
dec
mov
test
sbb
shll
stos
test
int3
lahf
xchg
or
lahf
xchg
cli
dec
push
dec
mov
rorl
imul
push
jnp
xlat
lahf
es
movsl
dec
mov
xchg
or
mov
call
lock
sbb
scas
xchg
out
cltd
push
xchg
add
mov
inc
sub
vmread
mov
rclb
xchg
fs
cmp
inc
mov
idivl
add
and
rclb
and
mov
out
sbb
inc
pusha
add
mov
mov
inc
add
imul
dec
xchg
es
jge
fwait
fwait
jg
pop
in
popf
xchg
push
negb
rclb
lds
push
es
push
and
and
xchg
push
pusha
jle
mov
movsl
xchg
jg
jno
pop
in
xor
add
es
dec
arpl
inc
enter
jbe
fsubrp
sub
sbb
mov
hlt
ja
sbb
test
xor
into
push
fsubl
mov
jmp
mov
cmp
and
pop
push
jae
push
cmp
mov
cmc
loop
stc
gs
fists
dec
cmp
xor
sahf
stos
add
or
dec
ret
xchg
shl
or
mov
out
add
jnp
in
jb
dec
cmpsl
hlt
outsl
or
aas
inc
sub
xchg
pop
xor
test
outsb
sbb
pushf
enter
cmp
pop
add
ss
lds
sub
fiadds
loop
dec
pop
or
cmpb
xor
inc
inc
imul
xchg
cmp
or
stos
inc
inc
add
scas
add
lea
cltd
add
fidivs
mov
sti
push
push
mov
pop
popf
xchg
cli
inc
add
sti
pop
dec
mov
jmp
xchg
fisttpll
jmp
scas
aam
fistps
xchg
lods
rcrl
inc
fldl
inc
sarl
ljmp
js
sub
jge
cltd
leave
lods
test
xchg
lods
inc
sbb
mov
xor
int
adc
add
mov
data16
dec
jne
bound
dec
xor
call
outsb
xor
sahf
mov
jae
push
xchg
push
xor
mov
or
gs
pop
dec
sub
sub
shl
mov
sbb
ljmp
insl
jp
in
xor
cmc
lret
icebp
ljmp
rcll
pop
jmp
xor
jle
lret
mov
xchg
and
aad
push
fldenv
jecxz
mov
mov
jl
cld
imul
jmp
imul
push
ret
cmc
push
arpl
mov
in
pop
pop
xlat
icebp
pop
mov
jl
or
adc
cmp
adc
out
imul
out
or
sub
lds
ret
mov
test
adcl
mov
xlat
shlb
mov
pand
das
mov
xchg
repz
shrl
fisttpll
jne
out
push
dec
dec
xor
fstp
and
movsb
sahf
rclb
sub
mov
pop
add
div
jg
sbb
mov
pop
sub
mov
sahf
mov
add
mov
repnz
cmp
cmp
mov
mov
daa
cmp
push
and
cmp
outsb
cmp
imul
psubb
inc
adc
sbb
sub
outsb
aaa
pushf
mov
pop
inc
jg
aaa
add
mov
pop
sbb
jmp
mov
mov
xchg
dec
push
and
xor
lcall
enter
roll
rclb
mov
add
pop
mov
sbbb
xchg
inc
and
mov
pop
out
push
ljmp
fisubs
fstl
in
jle
xchg
add
cmpsl
repz
lret
cmpsb
ja
mov
out
jmp
mov
rolb
sarb
imul
cmc
mov
adc
pop
aad
mov
int3
bound
shr
mov
xchg
xor
pop
jmp
loop
jp
pushf
loopne
sbb
add
and
rcrb
cmpsb
add
xchg
xor
icebp
or
js
mov
movsb
sub
push
std
test
xchg
cmpsb
xchg
and
adc
aaa
popf
cli
nop
mov
mov
adc
pop
sbb
out
mov
and
and
cmc
push
or
sub
aam
add
mov
sbbl
fadd
fistps
ja
push
and
push
mov
mov
push
mov
mov
or
test
lahf
ret
icebp
leave
sub
enter
mov
mov
sbb
mov
repnz
std
jne
sbb
cltd
mov
xchg
sbb
inc
dec
insb
ds
arpl
sbb
sub
mov
leave
stos
and
lret
cmc
enter
popf
arpl
roll
inc
les
mov
mov
mov
mov
ret
jl
loopne
sbb
and
or
xchg
mov
adc
test
nop
in
sbb
mov
sub
stc
push
std
inc
pop
pusha
xchg
stos
fs
inc
jno
cmpsb
daa
jne
jae
movsl
adc
outsl
or
or
enter
sub
je
jb
mov
leave
xchg
sbb
or
fadds
inc
lods
mov
orb
cmp
or
mov
pop
xchg
mov
lahf
jnp
cmpsb
mov
sbb
lods
and
mov
pop
sahf
dec
gs
mov
push
sub
pop
test
jbe
jb
movsb
mov
mov
cs
mov
xchg
fadds
sub
or
push
and
cmp
icebp
or
cmpsb
mov
hlt
mov
call
inc
rcr
sub
adc
jecxz
adc
add
bound
std
pop
jmp
jge
aad
jecxz
sbb
and
push
pop
or
jno
enter
lea
gs
push
insl
cwtl
in
mov
dec
sub
fadd
add
jae
sbb
nop
ja
push
lea
cmp
popa
daa
repnz
push
and
xchg
mov
bndldx
push
ljmp
push
xchg
pushf
push
in
int
int
fildll
lock
sub
cld
mov
dec
pop
xor
mov
cmp
pop
ljmp
cmpsl
aam
fistpl
adc
and
lods
cli
push
test
sti
wbinvd
pop
movsb
and
sbb
xchg
push
enter
and
cltd
mov
xorl
xor
stos
hlt
lods
out
adc
mov
dec
pop
xchg
setns
sbb
ret
ljmp
leave
adc
test
jae
xchg
outsl
arpl
add
add
flds
mov
or
loope
gs
cmpsb
ja
movsl
pop
in
inc
mov
pop
sti
dec
sti
cmp
cltd
xor
pop
or
testl
xchg
mov
imul
xchg
mov
in
ja
mov
jg
sub
sub
movsl
jg
cmp
clc
stos
jo
push
push
popl
push
jne
repz
mov
xor
out
testb
or
sbb
repnz
mov
xor
int
adcl
lds
adc
mov
xchg
cmpsb
and
cltd
stos
push
lds
mov
in
lahf
dec
push
mov
insb
pop
fidivrs
pop
sbb
push
and
out
mov
and
push
push
insl
cld
pusha
out
adc
xor
xchg
mov
xchg
roll
add
out
jns
cmp
repnz
or
fnsave
push
aam
adc
lock
arpl
out
adc
cmp
jge
jmp
fimuls
mov
inc
add
xchg
push
cmp
das
xor
adc
mov
cmp
in
mov
mov
xchg
sub
stos
hlt
xor
jg
repnz
flds
jno
sar
mov
leave
movsl
or
in
sbb
test
cmp
aam
sbb
lock
aaa
xchg
sbb
enter
ret
ret
add
cmp
mov
mov
inc
mov
mov
inc
jge
out
sbb
sub
push
mov
add
stos
mov
js
pop
xchg
and
mov
pushf
js
ljmp
add
mov
mov
xor
stc
jnp
push
push
fdiv
inc
in
inc
mov
inc
sbb
dec
inc
sahf
or
pop
jge
arpl
dec
jnp
jg
std
inc
popf
jo
dec
adc
lret
loope
push
add
mov
loopne
lret
push
jno
push
jmp
sub
mov
out
mov
pop
cltd
hlt
pop
mov
repnz
adc
gs
aam
cmp
out
xorb
dec
pop
sub
movsb
stc
pop
cmpsl
addl
xchg
lods
addr16
scas
add
outsb
mov
xor
mov
int
mov
aaa
cmpsb
mov
divps
push
out
xchg
dec
mov
sbb
pop
in
aaa
dec
push
pusha
inc
subps
insl
das
push
push
addr16
test
shll
sbb
nop
sub
mov
push
imul
cmp
jnp
mov
repz
shrb
divb
xchg
inc
inc
xchg
xor
cld
cld
mov
mov
mov
jmp
shlb
lods
aam
add
jge
out
pop
dec
imul
pop
xchg
fsubs
xchg
int
mov
sti
sub
arpl
orl
test
idivl
fisttpl
xlat
int
add
aad
pop
jl
daa
mov
lret
ljmp
lahf
sbb
leave
mov
push
arpl
sbb
add
fidivl
addr16
mov
into
xchg
dec
popf
pusha
out
add
movsb
mov
das
pop
cwtl
xor
dec
imul
or
lcall
inc
xchg
jge
aas
dec
mov
push
loop
inc
cmp
cli
mov
adc
cld
push
clc
arpl
in
xchg
jmp
aad
mov
mov
mov
mov
jg
mov
jg
ss
mov
sarl
stc
data16
repnz
cmpl
sbb
mov
std
add
push
mov
cmp
mov
push
mov
dec
push
movsl
mov
xchg
ret
cmpb
lea
aaa
sti
xor
xchg
or
and
in
push
jmp
add
cmpb
repz
int3
xchg
fiaddl
xchg
cmp
lret
fcomps
aam
and
and
and
sbb
mov
sbb
in
mov
push
movsb
cwtl
cmc
lahf
mov
iret
mov
xchg
int3
je
outsl
inc
dec
lods
lods
lret
jl
pushf
fisttpll
enter
mov
mov
push
fldl
mov
pop
dec
adc
inc
bts
jge
repz
and
jecxz
sub
adc
add
pop
jp
mov
or
inc
mov
outsb
or
cmp
jns
mov
out
loope
repz
lret
out
sub
cmp
outsl
js
inc
push
les
movsl
xchg
or
fdivrs
and
out
lret
lds
sub
jo
push
cltd
es
and
sbbl
xchg
je
jo
or
inc
xchg
fdivs
das
popl
int3
ficompl
adc
sub
inc
jp
and
nop
inc
pop
or
jecxz
std
loopne
jns
leave
decl
cltd
loope
ss
inc
and
pop
gs
jg
mov
or
jge
pushf
out
out
int3
arpl
rolb
xor
movsb
inc
ljmp
out
nop
mov
mov
sbb
out
into
jne
scas
add
shlb
aaa
cmpsl
ret
and
mov
push
das
jp
out
stos
lods
sbb
sbb
pop
xlat
sti
lods
insb
lods
xlat
ds
rorb
pop
out
mov
mov
mov
jae
xchg
dec
mov
jo
push
or
pop
xchg
sahf
xchg
imul
jmp
imul
dec
pop
call
add
popa
jbe
in
loope
jbe
adc
pop
jge
addr16
push
add
xchg
xchg
loope
test
mov
aaa
bound
push
rcrl
jl
pop
cmp
inc
ds
add
repnz
mov
push
push
ja
out
decl
mov
mov
push
sub
xor
add
or
int3
repz
mov
pusha
inc
lods
mov
adc
inc
stc
je
pushf
push
rolb
and
cld
shlb
dec
dec
arpl
mov
es
add
inc
jae
stc
mov
fistl
lods
jle
jle
cmpsb
fwait
mov
fldcw
loopne
xchg
or
fcomi
mov
mov
cmp
inc
ss
mov
stos
in
xchg
push
mov
fldcw
ret
adc
pcmpeqb
sti
cmp
lea
movsb
dec
in
enter
jg
enter
insb
les
adc
daa
das
jae
or
mov
mov
test
xchg
push
outsl
mov
and
in
push
mov
xlat
imul
mov
dec
scas
xor
pusha
jnp
add
pop
sarl
pop
fstpl
push
jecxz
stc
dec
mov
lcall
jle
fadd
add
sti
outsb
or
das
adc
divb
mov
rcrb
jnp
xchg
aad
push
test
jae
out
sahf
fs
in
or
sbb
popl
sbb
mov
inc
addl
inc
enter
push
jb
or
ljmp
inc
or
adc
sub
add
bsr
cmp
and
or
or
push
sbb
dec
sti
test
outsb
add
insl
xor
mov
sarl
fists
or
adc
aas
push
sbb
incb
cmp
mov
lock
movsb
mov
stos
jbe
lret
popa
pop
es
mov
push
decl
fimull
mov
add
add
mov
mov
mov
mov
xchg
pop
fists
shl
outsb
cld
fisttpl
rcrl
mov
or
xchg
jbe
ljmp
loopne
pop
add
xchg
mov
push
and
push
push
test
xor
fdivrl
call
pusha
dec
pop
add
aad
cmpsl
add
loope
mov
mov
inc
jp
inc
jbe
dec
js
das
test
lret
sbb
mov
sub
xor
xchg
aad
ficoms
daa
dec
mov
mov
loop
xor
insl
and
repz
jecxz
int
inc
out
xchg
jle
mov
sub
mov
imul
cmp
lds
cmc
jg
negb
pop
leave
lahf
rol
sahf
mov
movsb
adc
das
popf
ficoml
mov
outsb
mov
es
insb
adc
mov
mov
inc
push
inc
push
sub
loopne
ret
xlat
je
xchg
push
xor
popa
rclb
lea
mov
push
lock
mov
xor
cld
arpl
popa
repz
insl
cmpl
push
outsb
loopne
std
inc
mov
and
xchg
rolb
and
enter
jmp
and
mov
scas
ss
jecxz
or
aam
dec
je
addr16
or
inc
data16
orb
lock
popl
mov
iret
dec
mov
adc
jb
push
movsb
mov
out
inc
aad
and
and
mov
or
repz
pop
sbbb
not
je
clc
fidivrl
mov
pop
adc
mov
ret
or
adc
and
cmpsb
xchg
adc
adcb
pop
jmp
add
movsl
push
lods
rcrl
xchg
dec
inc
fucomp
leave
jle
mov
pop
mov
ror
adc
sti
fdivp
bound
outsl
inc
xlat
std
sbb
xchg
add
ljmp
jae
jnp
fcmovu
arpl
addr16
cli
or
mov
cmp
add
shl
adc
fisttps
or
mov
push
and
hlt
jl
mov
fmulp
mov
mov
ds
fsts
cmpsb
data16
adc
jle
addr16
xor
fs
pop
dec
mov
test
lcall
insl
gs
add
jb
in
add
mov
cmp
jnp
jnp
popa
inc
pop
cli
mov
test
mov
rclb
stos
out
push
ljmp
jle
fs
stos
push
cmp
or
pop
lods
call
xchg
dec
xchg
or
stos
push
jge
std
mov
add
sbb
push
xchg
clc
mov
cmpsb
push
mov
mov
icebp
mov
dec
divb
push
pop
inc
push
pop
lds
push
lock
in
data16
jb
stos
pop
fisttpl
loope
or
add
lret
aaa
fmuls
in
pop
imul
xor
pop
outsl
imul
arpl
sbb
and
fiadds
sub
les
insl
cmp
sarl
cmpsb
dec
xlat
push
or
das
gs
test
mov
dec
lcall
lods
xor
xchg
or
cmp
fwait
shll
xchg
cmpsl
repnz
xchg
nop
es
roll
pop
adc
and
std
dec
cmp
jge
push
pop
add
cld
sbb
xchg
popf
inc
ret
xor
jp
cld
or
fdiv
add
mov
jmp
mov
and
mov
fsubrs
rclb
dec
in
js
ror
inc
jl
cs
test
fldcw
push
cwtl
cmp
adc
jnp,pt
nop
mov
ja
outsb
mov
shll
and
and
lcall
in
jne
and
jp
loopne
xchg
dec
sbb
pop
add
outsb
aam
aaa
in
test
movsl
lahf
imul
inc
dec
inc
xor
push
ret
sahf
adc
loop
clc
cmp
add
das
cwtl
iret
cli
jp
xor
fucomip
jae
push
dec
xor
sbbl
and
rcll
mov
cmpsl
adc
or
aam
cmp
jne
bound
jbe
cld
inc
sbb
popa
aad
popa
je
mov
in
pop
cmpsl
mov
or
jle
mov
pop
sbb
mov
mov
cwtl
cld
ret
leave
mov
pop
pop
mov
fs
repz
adc
into
shrd
rcrl
xchg
mov
movsl
adc
das
outsl
mov
lret
xor
cmp
fs
fiaddl
cmpsb
aaa
repnz
out
mov
mov
pop
imul
pop
aaa
cmc
push
aaa
jae
mov
pop
cmpsb
jo
fs
rolb
pop
adc
jns
ss
aas
mov
pop
and
lea
dec
leave
sub
hlt
mov
adc
pop
mov
push
xchg
lcall
ss
dec
mov
ds
dec
call
sahf
ret
push
and
sbb
data16
push
mov
pop
mov
pop
test
pushf
push
jno
cmp
jno
repnz
hlt
adc
cmp
sub
out
fidivrs
mov
out
push
and
dec
xor
add
pop
push
and
cmp
adc
movsb
sbb
inc
fldenv
adc
test
loope
ja
cmp
jle
lcall
dec
push
and
dec
jbe
sbb
inc
jno
mov
push
xchg
sbb
xchg
add
mov
scas
call
repnz
xor
ror
push
and
into
pop
cld
mov
js
lahf
out
aad
aaa
out
out
ds
push
jmp
loop
and
and
and
das
stos
dec
imul
pop
call
and
pusha
sbb
mov
or
cmpb
dec
sub
or
dec
xchg
mov
aam
pop
shrl
pop
fisubrs
stos
sub
cmp
mov
xorl
or
rcrl
shl
outsb
mov
mov
adc
in
bound
cmp
inc
jmp
and
leave
jo
mov
out
push
pushf
mov
mov
shlb
aam
das
mov
mov
cltd
fdivp
out
push
push
ljmp
mov
addb
sub
jne
mov
mov
cmp
jmp
movsb
mov
addb
fidivs
or
jbe
pop
lods
and
mov
xor
fwait
mov
les
inc
pop
jae
ret
xchg
and
mov
stc
pop
das
sahf
pop
mov
dec
jg
pop
ja
mov
pop
xchg
popf
xorl
xor
stos
negl
daa
cld
sti
testl
daa
adc
in
adc
jne
mov
sub
int3
sbb
jge
mov
lods
sti
mov
mov
and
add
or
lcall
sbb
addr16
dec
popf
subl
push
rorb
clc
jo
sbb
movl
sub
pop
ficoml
lret
cmp
mov
add
loope
les
mov
jns
inc
fs
push
mov
addr16
je
jne
outsl
pop
loope
ret
push
mov
pop
sahf
sbb
lods
in
ret
js
nop
shll
push
cld
das
inc
mov
dec
or
arpl
sahf
lahf
test
and
push
xchg
add
xor
stc
cmp
add
xchg
push
ljmp
lcall
rcrl
xlat
lahf
bound
cmpb
jmp
sub
fisubs
xchg
or
pop
loopne
adc
pop
add
push
arpl
mov
or
aaa
mov
daa
negl
in
sub
clc
rcrl
loopne
stos
fistpl
mov
adc
jle
hlt
or
inc
dec
in
cmc
sub
or
cs
dec
hlt
pop
sbb
nop
notl
pop
jmp
inc
ljmp
ret
fdiv
cmpl
add
sbb
sahf
je
mov
pop
popf
pop
or
mov
aaa
les
push
mov
addr16
dec
xlat
xchg
sub
sbb
mov
pop
into
add
aam
outsl
pop
sbb
xchg
or
hlt
out
sub
movsb
dec
jnp
add
adc
and
scas
mov
push
jnp
xchg
dec
stc
leave
loopne
out
push
pop
jae
jle
cmp
sbb
popf
jmp
push
mov
mov
jae
jnp
pop
repz
push
sbb
push
dec
push
xor
jno
add
ss
adc
xchg
mov
rcr
and
sahf
pop
sub
and
and
in
rorl
or
popa
adc
cli
cltd
mov
std
out
test
sub
xchg
outsl
insb
mov
popa
ds
push
sti
mov
aad
pushf
icebp
add
sub
inc
cmp
les
sbb
adc
sbbb
outsl
lods
sub
in
ret
xor
mov
dec
jbe
inc
into
adc
into
pop
mov
ja
loope
sbb
leave
adc
aas
addb
cltd
xor
imul
push
ss
adcb
or
push
pushf
dec
shlb
jbe
inc
sub
sahf
xlat
movb
push
aaa
pop
or
jno
or
int
jno
std
xchg
loopne
outsb
sub
sarl
int
ds
jp
repz
mov
mov
lahf
cmc
push
and
jecxz
adc
dec
pushf
mov
mov
ret
int
cltd
int3
cmpsl
fmulp
cwtl
jbe,pt
lcall
imul
mov
test
call
cmp
pop
out
jb
in
and
enter
loop
dec
or
sub
sub
jcxz
pop
sub
and
jle
ljmp
cwtl
fisubrs
mov
mov
mov
pusha
xor
push
adc
clc
icebp
push
int3
outsb
mov
scas
mov
ret
outsl
xor
aaa
mov
mov
jns
mov
pop
dec
stc
flds
mov
dec
fmull
int
adc
jnp
lock
pop
or
adc
nop
inc
int3
mull
xor
jg
or
out
mov
push
jle
and
out
pop
push
cmp
rol
or
pop
mov
or
mov
orl
adc
and
and
pusha
fstps
sub
shr
pusha
stos
outsb
cmp
lock
adcl
data16
loop
ficoml
dec
les
mov
sub
ret
pop
cmp
and
sarb
pop
adc
fsub
and
mov
xchg
in
es
insb
xor
lock
jmp
dec
lahf
xor
out
loopne
test
dec
jbe
insb
cltd
out
fnstcw
mov
xchg
lods
push
roll
cltd
cmp
and
add
pop
adc
out
shll
daa
xchg
cmp
cli
cmp
fisubrs
arpl
call
push
xchg
xchg
jmp
push
nop
pop
cli
pop
and
sub
ficompl
jmp
cld
push
mov
cltd
int
fisubrl
ret
mov
cmpb
mov
dec
push
dec
icebp
das
and
stc
clc
or
sub
ret
mov
pop
pop
mov
sahf
ds
mov
jnp
mov
or
cmp
pop
test
test
js
push
pop
icebp
arpl
xchg
push
into
ljmp
in
push
rclb
sbb
xor
dec
mov
push
push
fistl
loopne
negb
outsb
pop
imul
and
lcall
lds
push
in
std
sbb
lods
or
data16
test
outsb
add
in
into
cld
call
jmp
rep
movsb
repnz
mov
jae
scas
and
xchg
cmovno
xlat
mov
xchg
jbe
pusha
cmp
sub
mov
mov
lds
lds
dec
xchg
cld
sarb
push
clc
fmul
ds
add
cmpps
add
sub
xchg
gs
pop
xorb
jge
pop
fwait
das
in
push
aas
sub
or
mov
cmc
out
ret
add
xor
mov
mov
scas
pusha
mov
test
daa
loop
inc
sub
cmp
popa
idivb
jne
mov
pop
xor
xchg
and
dec
dec
sarl
lret
insl
cltd
leave
jg
arpl
jg
jnp
cmp
adc
pop
cmp
idivb
inc
adc
in
xor
lret
xor
cli
sahf
out
out
xchg
les
cmpsl
es
push
scas
leave
arpl
mov
les
dec
clc
dec
xchg
fisttpl
popa
sti
fwait
lret
scas
sub
add
mov
push
pop
andb
iret
jp
jo
addb
push
jmp
int3
xor
sarb
mov
bnd
clc
adc
loope
push
repz
xchg
jne
cs
mov
adc
add
stc
jne
sarl
es
aaa
mov
push
mov
js
and
imul
movl
ss
fisttps
and
pop
lret
mov
fadd
jbe
aaa
loope
arpl
sbb
jne
xchg
imull
clc
test
cmpsl
daa
sub
int
aaa
repnz
dec
pop
push
sub
and
cs
aas
xor
repz
pop
pop
sahf
es
sub
test
xor
jno
push
add
xchg
sub
jns
cs
int3
sti
test
jns
or
cmp
mov
lds
sbb
sub
xchg
sbb
repnz
mov
mov
jmp
mov
sub
rclb
dec
xchg
jp
xchg
dec
pop
inc
pop
ja
nop
push
xchg
insb
shl
jl
cwtl
add
ret
cmpl
jne
inc
out
cmp
sub
mov
cmp
mov
mov
mov
je
jmp
mov
mov
jmp
cmp
ja
ja
xchg
xchg
sub
into
or
cltd
outsb
sbb
jp
pop
jp
aas
lcall
pop
push
mov
jns
int3
repnz
fisubrs
push
lret
push
das
call
push
jp
push
aaa
pop
dec
je
xchg
and
insl
cli
testl
ret
mov
mov
rorb
pop
or
stc
std
sub
dec
cmp
fstpl
fldenv
adc
in
das
cmpb
ret
xlat
pop
and
mov
lret
xor
add
jmp
scas
xchg
and
push
mov
pop
push
sub
sub
aad
lcall
inc
mulb
pop
idivl
pusha
cmovl
sub
xchg
push
hlt
sub
outsb
scas
sub
neg
stc
mov
push
lods
jg
rcrb
push
or
cwtl
lret
stos
xor
in
mov
jge
cmp
das
push
adc
cmp
cmpsb
pusha
mov
push
mov
sub
cmp
xchg
push
and
push
push
mov
loopne
fsub
mov
mov
jnp
das
mov
xor
lds
outsl
mov
cld
leave
push
testb
pop
fldenv
vcvtdq2ps
imul
push
ss
fwait
pop
repnz
cmp
sub
add
and
mov
mov
pop
movsl
insb
mov
out
roll
inc
sarl
xchg
push
lret
pop
out
fdivr
sbb
ljmp
pop
in
mov
sub
or
imul
sbb
jp
mov
jp
insl
push
push
pop
xor
les
stos
das
clc
pushf
push
mov
sbbb
bnd
ficoml
movsl
rclb
xchg
jb
in
ljmp
lea
sub
arpl
mov
int
pop
jbe
push
add
mov
or
push
sub
and
push
jmp
adc
sub
and
fnsave
aam
push
mov
ror
dec
sbb
int
in
imul
test
mov
scas
cmp
scas
and
xchg
clc
cmp
push
jne
dec
fcoms
repnz
in
popf
inc
xor
cmpsb
loope
arpl
imul
add
rcrl
out
jle
mov
out
fstpl
mov
dec
xlat
and
dec
sbb
lock
pop
insb
enter
or
sub
pop
jo
cmp
adc
dec
xlat
sbb
mov
in
jns
xor
or
lret
dec
loope
push
xor
nop
and
adc
mov
adc
jecxz
or
sub
push
or
cmpsl
xchg
data16
hlt
pusha
aas
adc
or
cld
psubusb
lret
cli
loopne
shrl
mov
push
outsb
xor
hlt
movsl
push
mov
std
sbb
out
lret
fnstcw
clc
into
xlat
out
ret
jge
ret
sahf
sub
or
push
inc
in
gs
inc
int3
push
outsb
lahf
adc
jg
stos
jg
pushf
imul
daa
stos
outsl
lock
xor
mov
es
fidivrl
incb
mov
popl
lock
pop
sub
lods
rol
pop
pop
fcomip
mov
cmc
or
andb
iret
aas
mov
dec
jo
sbb
sub
sti
enter
mov
cltd
mov
xchg
mov
mov
add
inc
mov
fldt
and
jp
xchg
xor
adc
mov
and
pop
nop
scas
cmpsl
cwtl
jmp
js
jg
dec
cmp
and
fucomip
cs
jno
adcl
mov
stos
inc
stc
rol
xchg
mov
xchg
and
fwait
mov
repnz
or
inc
add
xor
pusha
lahf
adc
push
testl
xor
fisubrl
fidivs
cmp
lcall
icebp
jne
mov
aas
ja
xchg
adc
lret
rcrb
out
out
inc
pop
sub
ret
loopne
cmc
mov
cwtl
inc
cmpsl
sub
gs
mov
jmp
iret
hlt
cld
scas
cmp
stc
sbb
inc
outsl
idivb
sbb
inc
sbb
add
add
jb
xor
cmc
popa
call
jle
mov
adc
or
test
jmp
dec
cli
loope
je
xor
pop
or
subb
inc
test
cmp
dec
dec
int
sub
push
mov
test
xchg
jmp
repz
insb
cmpsb
test
rcll
rol
push
or
addr16
jbe
mov
mov
mov
lock
scas
js
dec
int3
jne
sub
data16
leave
mov
xor
loope
fimuls
pop
mov
pop
cld
scas
or
dec
lods
xlat
and
xchg
xchg
jge
mov
sub
jle
mov
add
scas
jb
loope
out
gs
addb
iret
daa
rcll
and
dec
sbb
mov
into
pop
jecxz
shrl
rolb
fs
xor
sbb
addl
push
push
pop
leave
shlb
or
ret
push
adc
jge
mov
or
sbb
pop
xor
enter
cmpsl
sbb
dec
push
mov
cli
dec
aam
mov
mov
and
and
xchg
mov
cmc
jnp
andl
push
jb
in
xchg
and
mov
popf
inc
aaa
ret
cmp
outsl
in
sbbb
add
xchg
pop
pop
out
inc
enter
rcr
stos
cmc
jns
sbb
mov
lahf
mov
rcll
xlat
inc
orl
add
mov
ss
sbbl
or
lea
mov
test
jmp
scas
xchg
cwtl
pop
jno
sbb
test
pop
int3
xchg
sbb
mov
popa
mov
jbe
xchg
cltd
add
dec
inc
loope
xchg
mov
cmpsb
aad
mov
fwait
les
jns
dec
pop
mov
outsb
mov
mov
pop
inc
sarl
js
xor
aas
cmpsl
out
daa
push
call
imul
sbb
cmp
fisttps
xlat
pop
movsl
adc
xchg
jbe
lock
cwtl
mov
xchg
mov
aas
push
cmp
inc
xchg
cmp
arpl
arpl
sbb
dec
xchg
dec
mov
stos
mov
jg
push
sub
or
out
cmpsl
mov
inc
sbb
sbb
jp
dec
cltd
mov
lds
insl
sub
push
pop
push
jne
sti
sbb
test
cltd
mov
xorl
or
aaa
clc
mov
dec
in
xor
jno
xchg
fsub
xchg
jb
or
lds
nop
xor
push
test
mov
jp
rcrl
jbe
adc
mov
cmp
xor
jmp
fmull
aas
sbb
sub
jp
lods
xor
lret
popf
dec
js
cmp
fidivl
ror
lahf
jle
test
jae
pop
xchg
mov
clc
jecxz
inc
push
sbbl
jo
and
cwtl
dec
adc
loope
push
pop
adc
sub
es
sbb
out
pop
push
fwait
in
inc
or
bound
adc
scas
fcoms
and
shlb
inc
ret
mov
inc
dec
jg
lds
xorb
push
fisttps
mov
inc
icebp
jno
dec
lods
out
mov
sbb
fidivl
into
gs
pop
divl
test
outsl
mov
sbb
or
fcmovnb
int
sarl
push
mov
div
jle
mov
test
pop
push
sbb
daa
int3
mov
push
and
push
gs
frstor
fsubs
jo
sbb
push
jnp
fldcw
mov
dec
cmp
mov
scas
xor
pusha
inc
cmp
jle
popa
icebp
xchg
push
addr16
push
call
or
mov
rcrb
fs
fs
lods
lods
lock
cwtl
or
jl
rcr
jge
movb
icebp
hlt
punpcklbw
pop
ficompl
mov
das
mov
in
in
add
ficoml
and
movsb
lea
in
in
data16
and
xchg
ds
sub
pop
xor
xchg
push
scas
test
jnp
mov
mov
inc
jecxz
fbld
insb
insl
fbld
test
iret
xor
lcall
cmp
xlat
pop
mov
add
mov
test
push
out
fistl
cmpsl
dec
mov
jl
jns
adc
xor
lret
or
outsb
out
rolb
subl
loop
adc
cli
mov
in
testb
lock
andb
xchg
mov
lret
fidivs
inc
lock
sub
test
pop
loope
stos
test
fbld
aas
xor
daa
inc
mov
icebp
int3
mov
fwait
jo
and
test
aad
in
pushl
lahf
and
sbb
sub
jo
inc
lcall
sbb
xchg
or
lret
jmp
test
xor
out
cmp
jne
shl
mov
aad
pusha
lahf
dec
iret
flds
lods
stc
shll
das
xor
stos
insb
dec
sarl
dec
mov
mov
cmpb
movsb
add
into
mov
ret
stos
pusha
push
mov
lds
fmull
decl
push
mov
decl
std
inc
cmp
mov
jge
icebp
inc
xor
adc
rcll
ss
adc
xchg
insl
jle
aaa
stos
gs
sub
test
and
loopne
cmpsl
stos
stc
jg
xchg
sub
push
adc
xchg
jge
mov
xchg
dec
aaa
aas
sub
xchg
pop
dec
out
cltd
in
popa
scas
dec
cwtl
cmp
pop
outsl
scas
ffree
flds
push
pop
lcall
push
xchg
pop
xchg
js
or
push
mov
cmp
jae
mov
ja
mov
push
hlt
push
push
inc
jb
rcll
repz
imul
imul
add
pop
xor
ds
sub
xor
dec
jmp
aam
or
int3
test
negl
loope
int
fwait
inc
sbb
sbb
or
sub
adc
mov
cmovg
mov
sbb
add
dec
test
pop
xchg
movsb
and
pusha
xor
test
out
loope
cmc
addl
subb
mov
jg
and
je
jno
fidivrs
pop
jle
add
sbb
xor
jle
je
outsl
aaa
loop
xor
push
dec
es
movsb
cmc
push
jno
mov
xchg
xchg
mov
lret
shll
aad
cld
je
cld
andl
and
ds
mov
vmaxpd
and
enter
fwait
and
sub
clc
popf
mov
scas
xor
adc
xchg
dec
mov
and
inc
dec
idiv
fs
cmc
jo
mov
inc
sar
ret
aam
sbb
mov
out
inc
jb
testl
jl
push
inc
xchg
jbe
enter
fisubrl
lods
arpl
aad
popf
adcb
xchg
lea
stc
dec
mov
cmp
test
enter
push
inc
xchg
aas
xor
aad
push
mov
adc
sbb
mov
sbb
cli
inc
mov
cmc
xor
xor
push
loopne
push
pop
jae
pop
xchg
push
test
jae
push
xchg
pop
mov
mov
mov
add
mov
das
movsb
mov
loope
sub
push
cli
push
arpl
shl
and
push
cmovno
dec
sbbb
loop
rorl
test
push
push
jmp
xchg
inc
fld1
dec
ljmp
dec
dec
pop
repnz
dec
jo
cmc
add
jnp
pop
fwait
pop
testb
dec
test
ljmp
cmpsb
scas
and
add
add
lds
push
iret
adc
jmp
lea
aad
xor
mov
or
push
push
roll
mov
push
hlt
ror
xchg
adc
repnz
mov
xor
or
test
movsl
inc
jns
cld
cli
push
add
ja
fs
cmp
xor
cltd
int
or
hlt
test
dec
addr16
aas
mov
jle
mov
mov
outsb
mov
cmp
cmp
sbbl
fiadds
inc
mov
mov
pop
stos
cmp
add
sub
jno
mov
mov
and
test
xchg
enter
test
out
icebp
inc
pop
sub
and
or
fdivs
inc
jns
aam
pop
mov
das
push
push
repnz
cmp
or
rclb
insb
std
add
dec
clc
stos
push
inc
mov
adcb
mov
ja
dec
je
cmp
mov
testl
not
sbb
or
lahf
hlt
icebp
jmp
inc
in
adc
jne
mov
xor
mulb
xchg
lret
push
cltd
cmpsb
stc
enter
popa
mov
mov
lret
and
shrb
mov
mov
scas
lahf
dec
sarl
in
mov
mov
xchg
add
mov
mov
fdivr
mov
mov
push
sbbl
lret
adc
add
nop
dec
adc
mov
sbb
dec
sub
cli
jno
sbb
push
sarl
fstl
mov
call
gs
fwait
pop
sbb
lock
add
and
mov
xor
mov
in
inc
cmp
dec
shll
xorb
sbbl
inc
addb
ret
jmp
mov
push
push
out
cmpsb
in
cmp
pop
stc
or
ffreep
push
fdivrl
dec
pop
push
pop
add
iret
add
loopne
push
lods
lds
dec
pop
pop
imull
divl
js
pop
or
aaa
dec
shl
testb
je
xor
jae
push
adcl
or
stc
xorl
fdivl
dec
arpl
int
jo
dec
popa
cwtl
sbb
ds
jbe
dec
sub
pop
sbb
popf
inc
in
jmp
imul
sub
sub
ljmp
mov
push
cmpsb
into
jl
pushf
dec
jp
and
loope
cld
fstpt
sub
fiadds
fcmovbe
and
pop
inc
cmc
jge
push
loope
sub
push
xchg
mov
push
xlat
fnstcw
fidivrl
ds
xlat
pushl
mov
cmp
mov
dec
out
xchg
pop
xchg
cmc
and
push
add
ja
adc
fldcw
ds
dec
cmp
shlb
data16
lcall
pop
gs
jnp
dec
test
lret
out
inc
pushl
push
cmpsl
xchg
xchg
fsubr
push
xchg
lods
pop
jg
mov
dec
repnz
orl
add
imul
cmpsb
mov
pop
fucomi
in
mov
jne
inc
xchg
inc
inc
nop
and
inc
jno
mov
test
inc
jne
std
pop
test
xor
je
bound
mov
fdivrl
sub
les
neg
cmp
or
scas
add
testl
clc
nop
and
adc
dec
or
lcall
cli
fwait
dec
mov
push
inc
lock
xchg
sub
pop
mov
dec
xchg
xor
cli
popa
in
cld
sub
call
das
out
loop
arpl
js
push
push
inc
sbb
pop
jg
scas
nop
pop
push
outsl
jecxz
js
scas
add
xchg
jae
sub
ljmp
daa
fisubl
pop
lock
fnsave
mov
jg
ds
in
out
arpl
push
jne
scas
aad
cmp
call
test
sub
loop
add
fdivr
mov
xor
xor
in
cmp
iret
lea
pop
sbb
cmpsl
jmp
inc
sbb
fsubrl
xor
rclb
adc
jo
loopne
fistl
rolb
test
jg
imul
jbe
ljmp
test
mov
rcrb
inc
xchg
push
mov
pop
mov
inc
push
xchg
int3
adc
jmp
cmp
sbb
jns
movsb
iret
int3
push
in
adc
mov
loopne
xor
andb
push
dec
out
pop
sbb
psubb
mov
jle
int3
jo
jl
jae
hlt
xchg
jae
cmpsb
sbb
mov
mov
aam
in
dec
mov
and
mov
cmp
lock
mov
cmpsb
dec
or
into
xlat
hlt
dec
sub
fs
orl
aas
pop
push
je
or
aaa
sar
xchg
mov
aad
push
push
inc
mov
and
cmp
mov
xchg
xor
dec
mov
cmp
push
iret
add
jns
mov
outsl
cltd
outsl
push
xor
mov
stos
inc
ljmp
into
sub
add
mov
mov
dec
pop
scas
ljmp
imul
adc
in
cld
xchg
ss
ret
cli
adc
mov
inc
cltd
dec
push
xlat
lock
flds
mov
ja
sbb
shlb
test
jle,pt
and
mov
lock
xor
mov
or
hlt
xor
xor
xor
or
fwait
xchg
ret
jbe
rolb
inc
push
cltd
mov
sti
stos
icebp
jle
sub
pop
xchg
xchg
data16
movsl
ffree
les
out
fisubrl
mov
pop
pop
mov
jmp
add
inc
fsubp
lods
out
push
aaa
sbb
cmpsb
adc
jns
pop
push
outsb
fprem1
roll
jg
add
sub
or
enter
sti
sbb
xchg
pop
divb
pushf
mov
insb
inc
jb
mov
popf
and
xchg
xor
sub
mov
int
lret
mulb
xor
xchg
repz
mov
out
int
loopne
pop
nop
cwtl
inc
out
lods
add
aad
dec
jmp
cmpsb
loop
pop
push
or
popa
sub
mov
sbb
and
in
xchg
xchg
das
fiadds
ret
shll
fildll
imul
mov
notl
sarb
stos
testl
or
nop
or
xor
lea
mov
pop
fists
movsb
sbb
push
jl
cmpsl
push
arpl
je
inc
jnp
dec
cmpsl
iret
adc
adc
push
mov
push
stos
xor
pushf
rcrb
repz
mov
jbe
jne
or
fsubrl
aaa
dec
cmp
sub
in
pop
xor
insb
add
adcl
xchg
or
cmpsl
movsb
mov
stos
shll
cmovp
jecxz
fsubrl
out
loope
inc
fists
aas
pop
dec
cltd
out
mov
mov
divl
mov
inc
and
clc
mov
push
inc
test
in
pop
adc
adc
mov
cmp
loop
movsb
sarb
pop
push
add
loope
sbb
arpl
cmc
mov
or
jg
mov
das
stos
sub
inc
out
inc
sahf
inc
add
pop
incb
lea
repnz
in
xchg
pop
jnp
getsec
mov
arpl
cmp
ljmp
rol
mov
ljmp
xchg
jmp
popf
xor
push
jg
jns
mov
jl
test
add
jo
cmp
cmp
sub
jo
sti
js
inc
gs
nop
hlt
bound
pop
nop
fwait
push
jge
or
mov
jg
pop
sarb
sbb
enter
popf
loopne
fs
pop
xor
adc
mov
push
inc
or
in
pop
lret
pop
aaa
cmp
cmp
movsl
getsec
pusha
push
pop
jae
pop
outsb
gs
adc
and
push
sub
pop
fldl
aaa
fstpl
add
into
cmp
mov
mov
or
pop
fdivp
cmp
and
inc
in
mov
int
cld
dec
adc
push
xchg
mov
mov
pop
and
push
idivl
das
mov
sub
add
fdivrl
or
pop
stos
pushf
or
xor
adc
pop
inc
or
stos
enter
inc
xchg
cli
pop
cmpsl
xor
movsl
pop
outsb
sti
std
inc
jae
clc
adc
dec
jge
mov
dec
mov
jns
push
and
push
js
xchg
fwait
in
or
sub
mov
and
out
std
test
mov
sbb
push
mov
cmp
pop
lods
add
scas
and
addr16
mov
sub
mov
sbb
jns
cmpl
add
lods
push
xchg
test
and
jge
mov
xchg
int
movsl
outsl
cmp
inc
stos
and
jp
out
push
xchg
jg
dec
mov
out
mov
shlb
stos
fs
xchg
and
jno
cmp
dec
sti
adc
leave
aas
pop
aam
pop
pushf
jge
dec
cmp
insb
stos
jle
insl
cltd
mov
cmp
lock
sbb
js
in
sub
scas
lds
negb
cmp
js
adc
notb
and
lods
mov
rcrl
mov
sbb
jl
popf
xchg
out
mov
mov
push
shrb
aad
cmp
shlb
insb
sbb
mov
adc
xor
gs
int
mov
sbb
xchg
dec
data16
sub
adc
xchg
mov
cmp
mov
repz
xor
lcall
push
pop
adc
xchg
es
xchg
adc
adc
sub
inc
jmp
fs
or
inc
test
das
cmc
dec
shl
cmp
jecxz
sub
pop
movsb
sbb
mov
movsb
push
rcll
repz
pop
lcall
pop
xor
or
call
ja
and
insl
inc
nop
mov
fsts
xor
cltd
add
call
fisttpll
adc
jmp
xchg
jl
pop
in
ja
cmc
dec
shr
cltd
scas
jge
dec
jp
dec
push
xchg
dec
xor
aad
stos
int
dec
dec
fnstcw
jno
shrl
xchg
jns
dec
outsb
cmpsl
or
cmp
and
dec
push
mov
sub
sahf
ret
popa
fldt
push
sub
inc
cmpsl
div
mov
aad
nop
jmp
std
sahf
out
cs
hlt
sub
adc
and
pop
das
std
in
aas
jno
sub
jne
sub
ret
imul
mov
out
mov
stos
inc
arpl
hlt
imulb
pop
mov
sbb
xchg
sub
adc
ja
ljmp
inc
call
stos
inc
xchg
dec
xchg
in
sahf
lcall
mov
dec
shlb
sub
dec
iret
andl
inc
shl
pop
xor
push
adcl
mov
shr
in
adc
sbb
or
cltd
dec
dec
fmul
mov
jns
mov
or
xchg
enter
popa
fwait
sbb
ds
out
enter
insl
xor
loope
dec
movsl
stos
jb
lds
xchg
sbb
adcb
movsb
pop
xchg
mov
stos
call
clc
addb
int3
std
or
push
adc
adc
mov
insl
mov
push
out
xor
fwait
inc
adc
jp
push
scas
cmc
and
adcl
movl
enter
test
mov
out
push
divb
sbb
push
and
xchg
dec
jno
mov
xor
out
sub
mov
mov
and
orb
push
cmp
push
out
fisubs
sub
rorl
xlat
sbb
jae
pushw
cs
mov
pop
mov
dec
or
or
mov
sub
divl
jae
scas
jle
shll
xchg
aaa
xor
jl
ret
sahf
sbb
sbb
repnz
mov
xchg
dec
movsb
fimuls
or
bound
jne
lahf
out
adc
addr16
push
or
xchg
cmc
pop
dec
cmp
test
mov
scas
sbb
dec
xor
jnp
cwtl
xor
scas
pop
iret
aam
gs
jp
xor
out
cmp
xchg
icebp
in
in
pop
sub
lcall
push
cwtl
jmp
js
lahf
mov
dec
push
lret
mov
mov
cs
or
sbb
ret
stc
scas
outsb
punpckldq
pop
adc
xlat
mov
lret
in
icebp
add
insl
mov
nop
sahf
or
cmpsl
add
jp
icebp
dec
push
jl
clc
or
add
fstpt
loop
pusha
xor
idivb
xchg
lcall
push
xor
popf
ja
insl
es
dec
push
dec
out
int3
repz
mov
xor
xor
scas
pop
inc
movsl
sub
lahf
subl
pop
jns
lea
pushf
jecxz
and
lods
fisttps
lcall
xor
loop
call
or
pop
pop
sub
cmp
mov
pop
fstpt
jecxz
lods
push
loop
ret
dec
sub
mov
mov
xchg
adc
mov
and
mov
dec
mov
jge
jp
dec
int3
or
push
mov
pusha
xchg
and
daa
daa
leave
dec
aaa
stc
sbb
adc
or
mov
dec
imul
adc
pop
stc
loopne
repnz
das
scas
xchg
jno
or
lret
adc
pop
ljmp
cs
inc
inc
ds
stos
in
xor
jne
shll
push
sbb
mov
mov
ja
inc
mov
idivl
add
lock
ljmp
jae
fsts
fnstenv
out
out
jae
inc
imul
paddb
pushf
pushl
fidivs
sbb
pop
je
adc
mov
add
into
in
mov
xchg
pop
and
xor
outsb
or
aam
cmp
mov
test
clc
nop
fmul
xor
stc
mov
jno
test
cld
pop
popf
inc
sub
jnp
test
popf
adc
mov
in
sti
sarl
add
adc
and
lock
push
pop
dec
cmp
cs
dec
addb
push
int
dec
gs
or
fs
stc
xchg
int
and
js
push
cmp
add
icebp
inc
addr16
aas
shlb
dec
fstpl
dec
push
aas
cli
and
hlt
and
ss
dec
pop
or
or
adc
push
fwait
and
add
adc
sbb
adc
and
int
aam
clc
pop
mov
popa
aaa
gs
fldlg2
inc
pop
xlat
inc
out
inc
push
mov
jnp
int
cli
jmp
push
fistpl
lods
pop
adc
fmulp
add
imul
push
dec
sbb
orl
mov
dec
imul
mov
fnstsw
fiadds
dec
sub
mov
add
movsl
pop
test
cmp
out
sub
scas
test
sub
push
jb
test
pop
mov
incb
or
mov
in
jne
xlat
rcll
cmpsl
xor
fsub
rclb
movsl
lret
int3
mov
das
push
hlt
mov
out
push
inc
inc
adc
int
jge
mov
sar
in
loop
int
cmc
xchg
les
arpl
sbb
sub
jle
dec
repnz
gs
enter
cmp
ss
repz
fimuls
arpl
rorb
popf
arpl
fists
aam
leave
pop
outsl
das
push
sub
and
outsl
add
mov
test
push
mov
mov
xchg
notb
data16
fcmovnbe
adc
js
sti
and
dec
sbb
sti
push
je
pop
xchg
mov
xchg
nop
jb
dec
lret
cli
mov
test
lods
lret
cs
and
xchg
jns
or
loop
adc
mov
lds
sub
fwait
or
mov
dec
push
rcrl
or
sub
mov
pop
dec
xor
test
cld
mov
pop
sub
sbb
popa
mov
or
fstps
jo
loopne
cld
pop
dec
lods
call
ds
and
jns
mov
or
xchg
ret
push
shrb
xchg
jl
test
fs
mov
mov
cli
iret
or
inc
popf
pop
mov
and
sub
push
pop
dec
push
mov
loopne
mov
mov
out
aad
push
divb
enter
bound
cmpsl
lcall
push
inc
out
out
addl
push
inc
loop
cwtl
push
jno
je
adcb
add
shlb
jne
lret
in
sbb
out
xchg
outsl
jnp
std
ss
pop
je
sarb
loop
sbb
push
push
gs
cmc
shll
fiadds
jmp
in
adc
sbb
cmp
outsb
push
jle
jns
and
dec
test
pop
popf
lcall
cld
xor
pushf
call
bound
or
dec
or
movsb
lahf
ljmp
mov
sarl
lock
cmpsl
xchg
push
cmp
loopne
ja
cmp
js
jns
adc
add
imulb
jg
cmp
push
xchg
outsb
hlt
mov
addr16
jmp
outsb
out
jl
leave
fisttpll
cmpsb
mov
sub
adc
ja
add
lea
fmuls
pop
fidivl
out
leave
xchg
jge
mov
push
dec
xchg
xchg
scas
lret
les
je
push
sti
push
aam
adc
adc
cmp
pop
push
out
shll
sub
jb
adc
jl
mov
sbbb
sahf
lret
sbb
adc
push
xchg
inc
pop
add
pop
xor
adc
mov
pushf
mov
push
mov
mov
or
imul
push
sub
ds
push
or
pop
pop
push
out
mov
dec
adc
and
and
test
dec
jns
xorl
mov
push
pop
imul
mov
jnp
jbe
jne
mov
adc
fs
sub
mov
lds
out
stos
jno
jb
bound
lock
lods
and
sub
aad
bound
mov
into
lods
or
mov
cli
jmp
loopne
or
xor
mov
mov
pushf
xchg
shll
xchg
out
sbb
inc
adc
test
mov
mov
mov
leave
xchg
sbb
aad
add
push
js
dec
dec
movsl
lods
inc
loop
jno
addl
push
aaa
stos
inc
iret
aam
jecxz
mov
out
push
dec
add
js
rcrl
loop
cmp
or
es
in
or
int3
sub
sahf
adc
shrl
xor
mull
mov
cmp
push
rclb
fsubs
je
inc
adc
ljmp
repz
mov
mov
adc
pcmpgtd
ljmp
xor
cmc
ret
mov
or
or
add
add
mov
adc
sarb
push
arpl
push
dec
iret
pop
pop
adc
adc
adc
iret
movsb
sahf
fistl
inc
rorl
lds
add
mov
inc
inc
mov
jecxz
out
stc
lea
lods
sbb
mov
insl
xor
xor
sub
sub
xor
mov
mov
mov
xor
imul
add
lea
mov
add
mov
mov
xor
add
jne
mov
mov
xor
jmp
js
pop
out
jnp
rep
pop
jns
mov
loope
jp
pop
jp
mov
rep
xchg
mov
add
addr16
daa
mov
cmpsl
sub
dec
pop
sub
pusha
xrelease
pop
pusha
iret
jns
in
sub
bound
popa
jbe
dec
scas
cmp
mov
mov
dec
out
add
js
sahf
jno
mov
jg
push
out
lcall
xchg
out
loopne
xchg
mov
jp
int3
mov
jmp
movsb
and
jae
mov
mov
addr16
leave
lret
lods
push
sahf
adc
xchg
xchg
jo
flds
sarl
xor
enter
ret
dec
int
inc
orb
sub
sub
mov
sbb
mov
push
pushf
cmpsl
jecxz
xchg
loop
into
adc
pop
scas
push
aam
xchg
shll
clc
hlt
outsb
loope
shrb
dec
lock
jne
cmp
or
push
sub
mov
add
jo
xchg
aad
sahf
int
out
jge
sub
jo
aam
xchg
into
sub
sarl
std
sub
js
sahf
fnsave
packsswb
push
lret
subb
test
jbe
enter
push
sbb
ja
sub
mov
fcomps
imulb
mov
push
mov
sti
xchg
adc
aam
cmpb
pop
ret
cmp
stos
gs
daa
add
push
push
aam
mov
clc
test
cs
mov
mov
cmp
and
pop
xor
imul
es
jge
mov
cmp
add
int3
jo
std
pop
sbb
fmuls
sub
js
fldl
inc
mov
andl
subb
cltd
ret
loopne
fistpl
mov
dec
lcall
inc
mov
jne
lods
loopne
insl
call
sti
push
test
mov
mov
fwait
mov
mov
adcb
aad
push
stos
aas
inc
inc
outsb
adc
scas
loopne
out
pop
hlt
ljmp
aas
add
sub
xchg
mov
into
std
add
push
fdivs
pop
and
loopne
movsl
fwait
mov
scas
sbb
in
or
xor
jb
div
mov
xchg
xchg
ret
out
jns
popf
mov
mov
test
cmp
cltd
out
stos
leave
pushf
popf
push
and
mov
icebp
mov
cmp
adc
or
fldcw
add
stos
test
mov
or
jp
ret
inc
sti
pop
xor
gs
adc
fcom
add
cmp
test
out
jg
iret
stos
xor
sub
stc
movsl
movsb
cmp
sub
mov
xchg
xchg
ret
rclb
test
sbb
and
inc
push
mov
gs
daa
loop
out
jbe
iret
xor
sbb
repz
in
and
xchg
shl
clc
jle
dec
xchg
push
rcr
push
cmp
or
repnz
repnz
insb
jne
cmc
popa
cmpsl
pop
fldt
adc
mov
ss
inc
and
out
add
push
arpl
push
aas
mov
loopne
mov
sbb
cmp
shrb
and
push
and
mov
adc
data16
adc
ret
lret
add
out
xchg
in
inc
sub
jbe
adc
lret
mov
in
in
popf
rolb
adc
and
adc
mov
idiv
fs
sub
lods
mov
dec
xor
pop
cmp
int
add
xor
cltd
sub
adc
add
bound
inc
jns
xor
dec
sbb
mov
inc
push
je
sbb
movsb
lods
mov
cli
pop
xchg
jg
xor
add
adc
in
mov
mov
adc
xlat
push
outsl
and
mov
jbe
js
arpl
jge
xchg
push
mov
pop
push
out
push
call
jle
daa
repz
inc
jge
adcb
not
inc
mov
mov
mov
pop
push
mov
pop
adc
adc
in
jge
jbe
pusha
mov
ljmp
sbb
dec
xchg
daa
sbb
repz
mov
xchg
cmp
repz
jbe
mov
sub
ljmp
cld
pop
mov
loopne
add
add
push
cld
rorl
inc
das
add
mov
lahf
push
sbb
inc
aaa
sahf
pop
mov
jns
fstl
arpl
das
hlt
sbb
mov
jb
shll
push
adc
movb
or
lods
lret
sub
je
insl
fucom
pop
cmp
inc
jge
mov
inc
mov
cmc
mov
lods
call
test
pop
enter
lds
jle
pop
jbe
or
decb
scas
mov
jl
scas
pop
xor
arpl
or
stos
jae
and
test
jne
push
inc
pop
mov
jg
jmp
lds
add
cltd
enter
push
cs
mov
clc
ret
sbb
imul
stos
push
inc
mov
mov
dec
push
fwait
xchg
push
push
mov
shll
mov
ret
fidivl
pop
or
adc
pop
xlat
jmp
jecxz
aaa
inc
in
or
sbb
ficompl
mov
std
sbb
pop
fistpll
push
mov
and
pop
ss
xor
pop
in
sbb
jns
insb
mov
pop
dec
mov
pushl
mov
lret
adc
ljmp
push
xor
adc
loop
sahf
push
add
jb
dec
enter
jle
js
mov
pop
sbbl
lea
leave
mov
fwait
repnz
dec
outsl
add
fistl
rcrb
rclb
adc
inc
jmp
cmp
test
xchg
loopne
in
fsubs
push
arpl
sbb
js
adc
jnp
pop
fcmovnbe
pushf
daa
ss
push
mov
ret
loope
adc
ret
inc
push
sbb
in
jbe
sub
stos
in
push
dec
add
lret
or
fwait
or
les
pmuludq
das
addr16
xchg
sbb
sbb
adc
mov
iret
sub
jle
into
mov
xchg
xor
sub
aas
cmp
hlt
test
ret
loope
or
add
sahf
loope
pushf
and
rorl
xchg
sbb
jecxz
mov
loop
scas
xor
add
sub
mov
popa
ja
adc
inc
arpl
mov
jecxz
xchg
add
xor
jns
repnz
movlps
test
mov
jo
adc
imul
cld
sub
aaa
cmp
mov
lds
mov
nop
insl
add
in
movsl
js
cmpsl
imul
imul
dec
push
movl
add
notb
movsb
pop
sbb
fisttpl
push
testl
int
mov
adc
add
mov
cmp
insl
sbb
mov
push
add
shl
push
xor
decl
or
adcb
jae
loop
xchg
shl
adc
icebp
inc
inc
pusha
imul
adc
ja
int3
rcrb
sbb
int3
sub
test
notb
fildll
pop
mov
sbb
mov
mov
lret
jae
lock
out
xchg
mov
fmul
mov
dec
pop
xchg
sub
xchg
push
pop
xor
jmp
push
lds
mov
mov
addr16
mov
mov
and
out
add
loop
add
pop
cmpsb
test
js
fstpt
int3
popa
jb
inc
sbb
fwait
sbbb
ds
jg
insb
lds
mov
into
movsl
xchg
lcall
fcmovu
mov
imul
clc
popf
push
pop
cltd
insb
cmp
popf
sbb
cmpsl
jnp
mov
and
fsubrl
test
jns
out
daa
lods
mov
dec
mov
mov
xchg
test
jnp
imul
mov
lahf
sub
pop
bnd
mov
enter
or
pop
mov
sub
push
lods
pop
sub
sbb
aas
fsubrs
cmp
popa
sub
mov
repnz
mov
or
add
mov
xchg
jno
or
cmpsb
cltd
mov
lret
shll
mov
pop
test
cmp
gs
mov
fwait
dec
fwait
jb
fwait
mov
lock
ss
pop
adc
sub
fiadds
mov
lods
lcall
xlat
mov
jbe
dec
mov
shrb
mov
out
pop
xor
sub
sbb
xchg
adc
pop
movsb
sub
mov
out
test
push
daa
adc
int
repz
mov
shlb
xchg
in
sbb
add
sub
outsb
mov
mov
push
ss
pop
stos
xorb
pop
mov
stc
adc
add
mov
cltd
icebp
es
lea
mov
fisubrl
ret
sbb
or
cmp
pop
lock
cmc
cmc
jle
xor
out
lea
sub
ret
mov
std
into
mov
int
dec
mov
iret
daa
inc
pop
sbb
insl
loopne
and
push
aad
mov
fistpll
and
dec
mov
or
pop
lods
lret
or
xchg
or
or
ret
stc
mov
insl
loop
sbb
adc
xchg
add
mov
sbb
in
aad
inc
jg
shl
outsb
je
fs
sarb
cld
arpl
mov
adc
cld
push
icebp
imul
jge
jne
mov
loopne
push
cmp
out
cwtl
pop
xchg
rorb
mov
jo
pop
or
shll
popf
and
dec
add
cmp
outsl
jge
andl
fcomp
inc
mov
xor
test
or
push
xchg
xchg
ss
cmc
out
sub
loope
rcl
cltd
mov
sbb
jg
daa
xchg
xchg
push
repz
mov
push
movsl
adc
fldt
test
hlt
or
sahf
inc
mov
stos
cmp
icebp
sub
out
pop
mov
and
mov
test
add
fdivl
ss
cmc
scas
in
cld
fsubrs
cmp
push
out
sti
cmc
lea
movsb
movsl
shl
icebp
and
lods
mov
jle
jb
aam
sbb
dec
and
pop
imul
pop
push
imulb
stos
clc
cmp
out
es
aaa
mov
push
dec
gs
pop
sub
jmp
lcall
jno,pt
adc
orb
std
cwtl
adc
sbb
push
inc
adc
mov
dec
iret
leave
outsb
lcall
aad
xor
je
mov
push
adcl
int
lods
fiadds
jle
cmc
cmp
or
lods
and
fildll
mov
fninit
jge
adc
mov
das
cmp
adc
inc
push
test
mov
dec
push
fst
cmp
cmp
mov
dec
xchg
xchg
jle
and
sbb
pop
int3
rcrb
xchg
jae
push
jge
shrl
movsb
ret
xor
shlb
enter
xor
sub
cmc
adc
sti
loopne
je
jbe
ss
call
std
pop
daa
xchg
push
mov
mov
jo
es
mov
cmp
sub
stos
stc
minps
or
mov
repz
insl
ret
xorb
add
jno
je
adc
inc
ja
xchg
jmp
loopne
sbb
andl
sub
mov
leave
push
dec
in
xor
in
jnp
or
jne
push
loop
pop
adc
rcr
lods
inc
cli
pop
int
popa
insb
xchg
xchg
ds
std
mov
cwtl
mov
sub
xchg
jns
ds
std
adc
dec
jno
ds
xchg
add
dec
mov
rcll
cmp
push
faddp
dec
stos
add
in
popl
outsl
push
mov
clc
outsb
push
je
mov
or
in
sub
clc
xchg
nop
adc
sub
test
xchg
fcoml
mov
hlt
arpl
repnz
mov
xchg
sbb
mov
in
or
pop
shlb
loop
and
scas
pop
fldenv
xor
ds
in
inc
mov
rorb
insl
repnz
and
push
jl
in
test
jp
fdivs
cmp
insb
outsl
jmp
das
push
push
ja
aam
jge
sbb
mov
sub
sbb
pop
aad
push
mov
fs
lcall
mov
cld
adc
xchg
adc
xor
fstps
pop
fisubl
cmp
cmpsb
and
push
lea
outsl
ret
lods
negl
shr
mov
jg
ds
and
add
adc
stos
xlat
xchg
push
ds
insl
push
hlt
rcll
mov
sub
mov
jle
xlat
out
gs
lock
mov
cs
imul
sahf
ret
stos
subb
je
add
out
pop
lock
mov
fmull
mov
mov
sahf
jb
stc
mul
or
mov
pop
or
jae
xor
jge
sub
rcll
cld
inc
shll
icebp
sub
mov
cmp
mov
psrad
lcall
xchg
sub
rorl
adc
pop
inc
sbb
inc
cmc
lcall
or
mov
mov
xor
popa
jle
push
bound
js
mov
faddp
jmp
xor
pop
cmp
jl
mov
fsubp
cmp
imul
push
cltd
lea
jg
lahf
cld
inc
sahf
in
fucom
cmp
adc
sahf
xchg
mov
jp
or
mov
test
pop
push
sbb
push
xchg
and
xchg
xchg
in
jge
adc
sar
or
outsl
cmpsl
jnp
int3
mov
xchg
pushf
push
gs
or
push
push
push
cmc
mov
divl
or
enter
or
push
cmp
sti
push
ljmp
daa
aaa
jbe
xor
stos
sbb
outsw
adc
sbb
xchg
push
push
jnp
xor
xchg
test
inc
push
dec
ror
sti
sub
pop
push
mov
cwtl
xchg
adc
cmp
pop
pop
and
xor
mov
mov
sbb
movsl
aam
ja
outsl
fs
hlt
ja
repz
jg
js
outsl
adc
sbb
stc
enter
mov
in
mov
adc
xchg
jle
sahf
or
inc
es
mov
pop
add
add
sahf
js
jbe
xor
fldenv
cmp
popl
xchg
mov
mov
xor
push
mov
out
idivl
imul
lea
adc
stos
add
jle
sub
out
add
and
xor
xchg
add
mov
lods
pop
or
test
insb
ja
pop
ffreep
in
test
xor
inc
inc
nop
lret
jbe
sarl
dec
mov
ljmp
popf
fwait
daa
daa
cmpl
xor
xor
dec
sbb
mov
pop
in
jmp
push
ret
mov
fcomps
daa
push
mov
inc
add
xchg
and
jns
jp
and
push
xchg
mov
jns
mov
mov
jecxz
push
push
pop
cmpsl
divl
jg
call
sbb
test
xor
xchg
fisubrs
sub
push
test
mov
jns
cltd
jge
xchg
adc
lcall
loope
imul
clc
scas
jnp
cmp
jmp
cmp
fidivs
cmpsl
aaa
shlb
push
or
arpl
into
push
adcb
pop
int
aam
aad
push
xor
pusha
and
sarb
popl
pop
fistpll
pusha
jno
adc
std
add
xlat
jp
mov
in
cs
mov
xor
int3
xchg
jle
lds
in
mov
xor
sbb
out
sub
sub
jno
add
sbb
rsm
and
fnsave
daa
add
push
sti
ljmp
jle
leave
mov
add
loop
inc
cld
add
mov
lcall
add
leave
dec
cmp
xor
push
into
cmp
add
iret
or
mov
and
out
jmp
mov
rorl
bnd
aas
mov
iret
lods
xchg
lea
call
cmc
movsb
pop
out
inc
scas
mov
pop
adc
mov
sahf
adc
mov
out
out
fnstsw
lcall
inc
in
sbb
mov
xchg
push
fsubrl
in
int
xchg
push
imull
rcl
jbe
cmc
jae
lods
test
and
pusha
mov
loop
stos
mov
aam
mov
mov
mov
ja
mov
sbb
jmp
into
push
arpl
sub
rcrb
loope
test
sahf
inc
adcl
mov
cmpsb
pop
mov
frstor
mov
xchg
call
fimuls
jge
sbb
lds
sbb
sbb
jns
push
das
cmp
addr16
mov
sarl
pop
rcrb
aam
les
mov
out
icebp
and
xchg
dec
mov
aaa
into
shlb
inc
add
int3
testl
lea
js
push
adc
movsb
dec
fnsave
xchg
dec
jmp
jns
or
jnp
cmp
fsubrs
pop
ja
int3
pop
ds
xlat
jp
mov
sbbb
sbb
mov
pop
cmp
sarl
mov
fcomps
test
add
mov
pop
stos
push
or
insb
jne
adc
pop
and
jmp
aas
loope
loopne
out
add
fisttpll
or
cmpsl
insb
outsb
out
lods
or
lods
push
fisttps
mov
sbb
outsl
pop
imul
lahf
scas
and
add
jp
inc
stos
dec
xor
je
aam
fistl
cmp
sbb
daa
aas
inc
push
mov
movsb
mov
je
sti
mov
xchg
test
sbb
rol
test
jae
iret
mov
shrb
jns
cmpsb
sbb
mov
pop
test
pop
nop
sbb
pop
leave
std
add
sub
mov
fstpt
pushf
loopne
bound
adc
or
push
mov
xchg
fs
cli
jno
pushf
and
aad
aas
add
dec
enter
xor
add
int
push
cli
pushf
add
jp
pop
idivl
movsb
mov
mov
push
shl
xchg
mov
jnp,pn
inc
bound
in
mov
or
xor
or
cmpb
in
jecxz
outsb
es
dec
sbb
xor
loope
xchg
jp
push
mov
repnz
jp
and
mov
lahf
pop
add
and
push
lcall
pop
cmp
stos
out
or
popa
push
cmc
fcom
jb
dec
pop
dec
sbb
push
in
or
mov
push
gs
mov
dec
jge
ja
adc
popa
jb
xor
ret
jmp
mov
hlt
cmp
addl
inc
popa
flds
xor
mov
cmpl
les
inc
ljmp
dec
fwait
orb
mov
or
sbb
xchg
cli
test
out
xchg
in
in
sub
adc
mov
iret
aaa
push
fidivl
dec
es
push
repz
shr
push
push
into
xchg
push
repz
or
mov
movsl
push
add
negb
leave
ret
roll
sbb
and
mov
sbb
lds
arpl
iret
push
cltd
popa
sbb
jg
cmpsl
add
jl
or
imul
ficoms
inc
loope
mov
sarb
das
scas
in
jno
stos
adc
stos
aam
js
icebp
sti
add
xchg
in
mov
loop
pop
cli
mov
outsl
lds
insl
push
popf
inc
pushf
pop
cmp
fwait
jo
in
add
pop
xchg
lahf
pop
mov
push
xchg
and
ret
dec
stos
dec
insl
lea
lcall
nop
inc
mov
mov
mov
stos
pop
cwtl
out
lea
gs
jno
lock
jg
pop
mov
fstps
xchg
adc
add
repz
push
ljmp
bound
adc
adc
dec
and
mov
repnz
xchg
idivb
jecxz
in
loope
movsl
rorl
dec
repz
enter
addb
bound
pop
sahf
out
xlat
or
inc
mov
bound
pop
jl
dec
pop
int3
andb
push
aam
out
decb
push
adc
sub
mov
sub
jp
mov
sub
inc
rclb
xor
fsubl
push
jecxz
inc
es
sub
sbb
sarb
stos
and
sub
repz
cltd
xchg
cmc
lock
fimuls
int
pop
cmp
pop
dec
push
push
psrld
fisttpl
pop
push
clc
xor
jmp
jg
aad
and
jne
mov
rclb
jg
int
fildl
xchg
mov
stos
and
push
sub
data16
sbb
hlt
jle
ret
push
cli
inc
adc
xchg
adc
out
adc
and
mov
sti
xchg
mov
insb
add
cwtl
sbbl
mov
int
xchg
adc
test
sbb
pop
and
pop
js
cmp
fmull
int3
pushf
loopne
or
outsb
movsl
sbb
negb
jo
and
in
mov
push
int3
mov
lods
sbb
and
and
dec
icebp
inc
test
xchg
mov
pop
in
sbb
dec
push
movb
or
pavgw
movsb
dec
mov
and
rorl
mov
sbb
mov
adc
add
addr16
ret
jbe
mov
adc
push
mov
ljmp
add
cmp
dec
push
test
hlt
jo
cmp
outsl
shrb
fsubr
jge
push
cmp
jecxz
and
and
data16
cmp
scas
addr16
idivl
mov
loop
sub
xchg
pop
outsl
pop
ret
or
adc
lret
mov
fsubrs
mov
test
int3
add
lods
adc
lret
dec
es
movsb
adc
cmc
mov
data16
aas
push
lock
fimuls
mov
push
daa
lods
lds
lock
add
in
mov
add
dec
inc
pop
shll
pusha
scas
cmp
daa
xor
sub
js
inc
pop
sbb
mov
sub
cmp
int
xor
test
push
inc
dec
test
sbb
roll
push
popa
add
mov
int3
lahf
xchg
xchg
adc
mov
int3
xor
sysret
dec
sub
mov
mov
mov
push
mov
fistpl
adc
repz
add
jmp
xor
repnz
inc
xchg
int3
lea
fstpl
mov
dec
aam
mov
add
inc
jl
sbb
test
add
addb
clc
cmpsb
lea
test
mov
test
sub
jns
dec
in
aaa
and
sbb
mov
mov
repnz
mov
out
into
repnz
add
jl
leave
je
mov
xchg
pop
jno
cld
or
aas
lods
aad
cmp
xchg
outsb
leave
insb
aaa
cmp
in
fxch
pop
mov
jle
sbb
mov
stos
movsl
rcrb
jno
jbe
mov
cmp
xchg
pushl
push
jns
or
jle
lods
cmp
xchg
jno
out
faddp
fldl
mov
fdiv
pushf
test
out
cmp
pop
loope
out
cmp
lret
out
and
jecxz
les
cwtl
sahf
les
sbb
filds
xchg
mov
hlt
bound
jg
pop
shll
js
int3
mov
mov
out
cmp
mov
dec
add
fucompp
cmpsb
sbb
ret
fwait
xlat
fcomps
test
int
or
in
sub
sub
dec
and
mov
lahf
mov
int3
dec
bound
daa
inc
lods
mov
icebp
imul
xchg
aaa
cwtl
inc
jbe
cltd
repz
scas
mov
scas
faddl
adc
repz
jg
dec
pop
in
adcl
or
incl
jg
in
or
ljmp
inc
fld
into
or
fxch
data16
fisttpl
in
test
pop
ja
inc
inc
or
lret
pop
fidivs
xchg
dec
and
and
push
or
push
or
cmp
je
mov
sub
push
mov
xchg
loop
adc
jo
stos
xchg
and
aad
mov
shr
fistpl
sti
ret
lahf
mov
int3
inc
fwait
push
rcrl
xchg
int
data16
iret
lcall
pop
adc
pop
pop
xor
repnz
and
lret
cmc
jle
add
mov
push
push
jl
nop
lds
aaa
repz
ljmp
lock
imul
lods
dec
clc
xchg
adc
push
repz
jp
iret
inc
or
insb
push
push
ret
jo
icebp
pop
push
pushf
jge
in
sbb
jp
js
pushf
stc
push
jno
xor
hlt
ret
sub
cmpsl
pop
pop
in
clts
cmp
jge
ret
jmp
cwtl
add
mov
push
add
or
sbb
inc
adc
dec
cmp
rolb
mov
rcrb
or
add
xor
push
pusha
js
loope
dec
jns
sub
dec
pop
cmpsl
push
mov
repz
xchg
cwtl
loopne
push
or
es
add
adc
in
iret
inc
xchg
arpl
shl
testl
xchg
adc
adc
scas
lcall
jp
sti
popa
cmp
jecxz
cmc
inc
inc
into
dec
sti
add
subb
adc
mov
sbb
sar
mov
bound
outsb
adc
into
sub
addr16
popa
mov
lahf
stos
mulb
xchg
jo
jb
bound
cmpsl
push
adc
cmp
lret
test
push
sbb
sahf
mov
jmp
int3
jbe
ret
cmp
xchg
xor
mov
dec
sbb
movsl
mov
or
dec
movsb
dec
fnsave
push
sub
cmp
ror
xchg
or
or
and
scas
dec
mov
jae
add
mov
mov
cmp
jns
dec
pop
jo
icebp
call
pop
int
aad
in
fs
inc
out
into
ja
jne
or
repnz
pop
push
cmp
jge
je
adc
jns
sbb
lret
pop
pop
movlhps
cmp
mov
and
rclb
daa
rolb
incl
in
mov
fwait
xor
scas
xor
and
pop
add
mov
enter
jne
out
cmp
sub
or
insl
adc
cmpsl
jnp
mov
push
bound
into
fcmovnu
call
loop
dec
mov
js
stos
cmp
negb
inc
cld
jns
sub
dec
rcrl
mov
movsb
decl
aaa
addr16
scas
or
adc
pop
and
dec
mov
pop
xor
mov
mov
cli
ja
fs
enter
arpl
mov
pushf
pop
insb
xchg
out
push
cmovno
inc
xor
mov
adc
xchg
jb
cwtl
out
sub
jnp
add
mov
inc
jae
jmp
sub
mov
jbe
or
push
outsl
xchg
subb
dec
mov
adc
rorb
mov
mov
add
and
jge
sub
add
adc
or
add
ljmp
jl
mov
fisubrl
or
sbb
test
pop
sub
dec
ja
push
fldl
outsb
mov
in
loopne
fnstenv
jecxz
rclb
mov
lea
int
mov
out
xchg
iret
je
mov
sub
fs
cld
cmpsl
pop
cmpl
push
test
cmp
and
dec
cmpl
xor
dec
cli
adc
push
fcompl
inc
xchg
inc
xor
sub
out
pop
in
pop
adc
pop
push
xchg
sub
ja
and
jne
cs
repnz
pop
inc
and
xchg
mov
shlb
adc
stc
push
stc
fldt
sub
test
scas
push
sub
lods
mov
ficoml
cmp
dec
sbb
mov
sbb
stos
cmp
cmp
inc
push
pop
and
lss
das
dec
push
push
and
cmp
aaa
mov
outsb
jp
popf
popa
or
mov
mov
cli
js
adc
inc
stos
or
ds
add
mov
inc
xchg
fisttpll
xor
push
jle
mov
mov
shrl
movsl
add
push
jge
mov
sub
scas
cmpsl
mov
inc
das
dec
jl
fbld
or
adc
pop
iret
dec
or
lods
sub
testb
push
imul
inc
movsl
das
xchg
push
jb
addr16
mov
pop
push
popf
pop
jle
sbb
pop
mov
mov
gs
lahf
in
fldt
popa
xchg
adc
adc
adc
and
popf
jl
jne
or
push
mov
add
push
dec
pop
inc
lods
movb
aaa
fldt
adc
in
aad
push
popf
popf
mov
xchg
adc
flds
int
in
movsb
leave
fdivr
stc
inc
int3
outsl
and
cmp
mov
jp
cmp
pop
das
dec
data16
or
cmp
sub
mov
das
insl
mov
out
inc
add
pop
push
xor
stos
push
xchg
jg
out
push
sbb
sarl
ret
or
xchg
sub
mov
std
inc
pop
adc
sub
push
jb
frstor
imul
push
or
and
insl
bound
pop
pop
mov
int3
pop
sbb
mov
ror
test
hlt
add
or
mov
mov
cs
fdivp
pop
xor
lcall
cmp
jno
in
in
pop
inc
aad
das
mov
cmovo
jl
out
mov
xchg
dec
pop
iret
xchg
aad
sbb
fnstsw
mov
dec
dec
mov
scas
les
or
xchg
adc
adc
clc
imul
sub
dec
fmul
stos
add
loop,pn
arpl
jbe
cs
fdivrl
jnp
mov
in
push
rcll
int3
pusha
fwait
sbb
push
es
xor
fldenv
dec
dec
and
fidivrl
test
rcrb
pop
sub
aas
xor
push
pop
ficompl
mov
jne
fldenv
lcall
push
xchg
int
jno
xchg
push
jge
popa
push
fmull
xchg
roll
loopne
fidivs
pop
xchg
stos
mov
adc
xlat
xchg
xchg
stc
fs
sub
sarl
out
je
out
and
adc
inc
mov
sbb
sti
and
push
gs
pop
dec
inc
loope
ret
iret
je
jb
adc
sbb
lods
pop
repnz
mov
adc
mov
push
sbb
sub
daa
xchg
les
xchg
out
test
pop
jg
mov
andb
jo
into
xor
add
add
cmp
jae
lea
mov
mov
movl
lea
mov
mov
addl
mov
xor
add
lea
mov
jmp
add
jnp
jnp
jbe
cs
fs
xor
pop
jp
adc
xor
lods
insb
mov
push
push
icebp
hlt
sbb
xchg
movsl
mov
xchg
cmp
cmp
pop
shlb
adc
mov
lods
and
ret
lods
inc
cmpsb
fbstp
sbbb
loop
ljmp
rorb
or
bound
jecxz
and
pushf
sub
mov
push
jae
daa
int
cmp
out
mov
xchg
shr
pop
mov
in
lods
jmp
imul
jl
adc
xchg
mov
scas
lock
pop
and
das
adc
aas
rorl
fs
insb
push
pop
jo
add
dec
pop
or
xchg
adc
imul
mov
push
or
sub
cmp
xor
out
pop
push
jno
std
cmp
gs
jo
scas
in
fadd
add
test
pop
je
lock
lods
mov
enter
dec
dec
mov
dec
and
imul
int3
addr16
insl
in
sub
add
xchg
pop
mov
cmpsb
xor
sbb
es
daa
inc
pop
inc
clc
jecxz
and
jecxz
add
pushf
or
sbb
hlt
cmp
mov
sub
add
test
inc
loope
xor
shrl
test
jbe
incl
dec
test
shlb
fisubrs
sahf
bound
add
and
scas
bound
xchg
test
or
hlt
cs
ret
and
aas
xchg
rorb
xor
lock
jno
adc
mov
xor
ficoml
push
roll
jge
inc
mulb
xor
loop
mov
mov
inc
stos
mov
cmp
sub
inc
in
and
jb
push
add
add
xchg
rorl
inc
ljmp
out
inc
mov
scas
imul
cmp
les
mov
or
pop
jns
xchg
negl
adc
decl
sub
cmp
and
daa
stc
mov
pop
cmp
dec
xchg
mov
push
aad
add
xor
pop
sbb
insb
arpl
cmc
test
out
js
and
xchg
mov
dec
pusha
cmpsb
lret
imul
jmp
mov
sub
mov
xor
add
jg
out
xchg
adcb
out
xchg
push
cwtl
sbb
inc
cmpsb
fidivrs
fsubrl
arpl
lcall
sbb
lret
add
mov
fsubrs
pop
mov
dec
imul
les
frstor
fisubrl
ljmp
int3
imul
push
out
fistps
and
mov
mov
loope
lcall
push
int
das
add
jno
aaa
pop
and
and
orb
loope
push
inc
jp
inc
lahf
dec
mov
dec
cmp
mov
lods
add
mov
dec
inc
sbbb
fbstp
fldt
and
cmp
addr16
scas
mov
dec
sbb
sbb
popf
data16
stos
std
add
lds
sbb
sub
fdivrs
push
inc
push
mov
xchg
lea
rorl
fisubrs
pop
test
push
pop
cli
idiv
pop
cli
int3
repnz
mov
lret
daa
xchg
add
sbb
jb
xorl
stos
inc
pop
out
cmp
push
push
mull
imul
sbb
jmp
xor
push
ljmp
fwait
ret
sbb
jg
pop
or
and
les
add
jbe
mull
push
repz
adc
sarb
cmp
jecxz
sarb
loopne
fcmovnbe
dec
inc
adc
nop
xorb
mov
shrb
stos
nop
cltd
pop
aam
push
in
pop
gs
and
pop
jecxz
jg
add
nop
push
je
pop
push
cld
mov
icebp
mov
mov
popa
movsl
stc
mov
xor
xchg
js
xchg
push
push
mov
lods
add
scas
push
cmp
pusha
and
add
ret
xchg
or
xchg
xor
mov
fcmove
loop
sub
cltd
test
ja
cmp
xchg
push
push
lahf
mov
adcl
pop
lahf
scas
popa
mov
cmp
dec
or
das
sub
add
or
inc
data16
and
jb
and
sub
mov
mov
xchg
imul
insb
xor
cwtl
push
or
idivb
sub
test
nop
hlt
jecxz
jo
popa
icebp
mov
push
dec
cmp
xchg
lods
mov
sub
mov
cli
dec
add
mov
push
pop
shr
sbb
dec
nop
xchg
addb
inc
daa
jp,pn
inc
sbb
std
jmp
pusha
stos
repz
js
jbe
mov
jmp
lcall
cmpsl
arpl
and
and
ficoml
clc
loopne
adc
add
fdivrp
repnz
call
add
cltd
mov
imul
movsl
call
sar
push
jns
loopne
push
bts
aaa
jno
mov
ja
fnstsw
mov
cmp
cmp
pop
ja
cwtl
imul
mov
out
xchg
mov
outsl
xor
ds
sbb
pop
lret
repnz
xor
xor
adc
popa
ljmp
mov
insl
add
out
inc
lret
cmp
push
lcall
cmp
lret
xor
outsl
or
mov
inc
add
push
jns
sub
push
mov
xchg
mov
add
daa
test
dec
sbb
ficoml
popa
xchg
aaa
je
in
in
lods
or
xor
xchg
pop
sbb
push
call
xor
sbb
movsb
cmpsl
shlb
xor
or
push
xor
fmul
sub
push
popf
imul
arpl
mov
incl
insb
cmp
jmp
lods
and
sbb
stos
jne
sbb
inc
aas
push
js
das
test
popf
ror
add
jmp
sbb
pop
sbb
pop
mov
loope
xor
mov
cli
adc
sarb
cmp
sub
pop
push
jne
adc
sbb
cmp
cld
pop
out
xchg
ret
mov
lret
xor
fisubl
push
mov
sub
dec
in
jno
xchg
fnstenv
pop
or
xor
sbb
pop
mov
dec
mov
push
lret
mov
nop
int3
popf
lea
jbe
mov
adc
mov
inc
or
push
ja
cmp
mov
inc
push
or
xchg
mov
repnz
out
jnp
adc
inc
test
imulb
jmp
inc
mov
shrb
adc
jecxz
mov
imul
pop
xchg
or
int3
repz
addl
lods
pusha
int
pop
lds
xor
mov
sub
add
in
push
in
dec
xlat
cmc
sahf
and
add
rcrl
ja
xchg
xchg
daa
mov
fldl
lds
mov
rclb
push
clc
push
nop
leave
xchg
cmpsl
out
pop
push
dec
test
call
pop
mov
mov
lea
je,pt
out
mov
sub
aas
push
adc
dec
pop
mov
jo
jg
push
xlat
aas
push
pop
mov
and
and
fldenv
rcrl
add
cs
pop
pop
dec
iret
and
frstor
push
push
rol
test
cmp
scas
gs
mov
clc
fmuls
iret
xor
and
in
adc
xchg
xor
mov
aad
cmp
push
insb
pop
xchg
add
out
add
sarb
loope
pop
insl
xchg
add
call
ds
popa
jno
fs
pop
loopne
mov
pop
jno
push
inc
leave
cwtl
inc
repz
jns
push
fnstsw
cmp
ret
or
jae
xchg
and
pop
sub
xor
pop
adc
ss
mov
jb
lahf
jbe
sub
sub
adcb
loop
dec
mov
mov
add
fdivrs
xchg
leave
icebp
add
sbb
call
pop
shr
pop
lock
jno
cmp
push
xchg
rcrl
sahf
sahf
jbe
stos
adc
shl
mov
pop
push
cmc
and
push
xor
mov
sbb
lea
inc
ljmp
arpl
imul
sub
or
stos
dec
aad
mov
mov
pop
pushf
sub
inc
mov
and
daa
or
imul
and
test
js
cmp
out
and
xor
xchg
cs
jae
sub
dec
sbb
sub
mov
mov
leave
xor
jne
adc
xchg
js
js
subl
jae
add
xchg
sbb
mov
idivb
push
jnp
test
loop
dec
aaa
or
push
loope
mov
test
mov
xor
ret
pusha
sub
push
sub
daa
shlb
out
psrld
sbb
sahf
scas
cmp
xchg
push
pop
dec
jecxz
test
adc
sbb
pop
jmp
loopne
pop
daa
xor
imul
mov
inc
orb
jne
inc
cmp
out
add
pop
outsb
pop
xchg
insl
scas
push
rcll
dec
imul
popa
stos
xor
mov
loopne
xchg
jnp
stc
fs
lret
pop
fwait
sbb
rolb
mov
cmp
and
movsl
fwait
imul
sbb
stc
and
iret
xor
adc
jl
movsb
inc
sbb
out
icebp
dec
adc
sbb
nop
mov
sub
iret
enter
jae
xorl
inc
cmc
loope
mov
pop
pop
shl
test
xchg
push
push
popf
and
add
mov
cmp
mov
push
mov
mov
fwait
sbb
jo
fimull
pop
or
dec
lock
test
inc
dec
ja
add
idivl
push
mov
clc
lds
cmp
push
mov
fnsave
pop
xchg
pop
add
pop
mov
in
push
js
loop
and
test
int3
ret
mov
imul
mov
cmp
inc
push
fldt
cli
dec
lds
inc
jle
sbb
mov
mov
sbb
mov
or
jae
nop
in
xchg
dec
test
xorl
cmp
xchg
arpl
sub
jg
pushf
push
or
mov
test
jmp
lock
bound
mov
and
cmpsl
adc
mov
xor
push
lea
jo
pushl
xor
and
add
fisubrs
bound
movsl
inc
icebp
and
test
call
aas
xchg
insb
fs
jo
nop
loopne
ret
sbb
bound
hlt
lock
xlat
fwait
leave
add
paddd
mov
inc
and
adc
fsubrs
cmp
inc
int3
inc
bound
jno
sahf
jmp
je
scas
push
push
inc
je
mov
sub
mov
or
mov
mov
and
pop
inc
or
mov
das
cltd
cmpsl
aaa
mov
scas
dec
mov
inc
outsl
xor
pop
xchg
cli
dec
cwtl
mov
addr16
push
test
sub
pop
daa
mov
lcall
inc
cmpsl
or
jbe
cmp
mov
enter
jne
or
loope
mov
lods
movsl
insb
js
mov
add
enter
sbb
inc
mov
sub
sbb
mov
xor
daa
in
dec
nop
xchg
std
sub
jmp
pop
std
ds
dec
popf
mov
xchg
push
cmp
mov
inc
rcr
jo
fs
movl
push
ret
mov
iret
stos
call
adc
cltd
adc
jg
or
mov
pop
add
xchg
lcall
jbe
inc
mov
orb
enter
push
pushf
outsl
inc
in
fsubr
iret
out
push
lahf
sbb
ljmp
jo
cwtl
shll
add
in
adc
sub
hlt
xorb
aaa
push
cld
sub
mov
mov
sub
sub
lds
jb
arpl
scas
mov
adc
pop
dec
lret
cld
rolb
ret
das
popw
cmp
test
test
std
or
and
xchg
xorb
jo
out
outsl
xchg
js
dec
js
int
std
cmp
aaa
popf
jle
push
out
adc
leave
or
mov
test
jne
stc
aad
push
mov
xchg
dec
mov
fs
movsb
shr
sarb
test
jno
push
inc
mov
scas
mov
jo
comiss
les
adc
cmp
pop
pop
xor
sbb
mov
add
psubsb
sub
mov
lret
rorb
ljmp
push
mov
adc
test
orl
lcall
std
inc
lods
mov
call
adc
push
imulb
or
mov
cmp
jb
mov
dec
push
addr16
inc
fists
or
mov
jns
and
xchg
push
popw
rclb
cmc
and
sbb
sub
das
imul
icebp
faddp
mov
xorb
or
mov
mov
rcrb
push
out
adc
mov
pop
xchg
insb
jmp
dec
lret
aad
inc
add
jl
fistpll
mov
xchg
mov
es
cmp
xchg
pop
scas
push
lret
lods
xor
adc
testb
out
push
xor
pushf
mov
push
imul
in
mov
shlb
jb
aaa
std
mov
gs
xlat
std
add
dec
and
je
negw
xchg
out
mov
dec
push
xchg
xorb
push
mov
in
and
fdivrp
cmpsb
hlt
mov
xchg
enter
adc
shrl
sti
int3
sarl
dec
mov
cmc
pop
shrl
xor
pop
mov
popl
adc
mov
sub
sub
sti
rcl
inc
mov
jae
aas
pop
data16
test
push
push
sbb
mov
xchg
fldz
lods
sub
lret
dec
jg
imul
enter
sub
data16
xor
sti
sbb
pop
or
mov
clc
sub
pop
jae
jle
dec
lea
pop
je
out
mov
cli
cwtl
ss
test
stc
or
jb
pop
push
movsl
push
mov
lds
not
nop
cmp
in
add
cmp
adc
cwtl
stos
cmpl
inc
aad
adc
loop
jl
mov
ljmp
lret
mov
mov
in
cmp
and
lret
xchg
mov
idivl
pop
push
or
outsl
call
xchg
mov
loope
mov
adc
fisttpll
sahf
add
sub
sub
jo
xchg
xchg
mov
insb
cmpsb
fsts
xchg
pop
and
xchg
jb
in
jns
movsb
rorb
inc
or
clc
mov
nop
mulb
stc
nop
scas
loope
pop
cmpsb
inc
or
inc
pop
jle
adc
jle
xchg
dec
mov
scas
or
in
mov
adc
pop
bound
leave
sahf
bnd
jge
pop
bound
inc
sbb
and
and
lret
push
in
fnsave
dec
pop
mov
sub
mov
cmpsl
pop
xor
pop
or
mov
mov
dec
jmp
push
pop
js
xchg
je
xor
std
fadds
shll
mov
fisttps
pop
gs
adc
mov
js
pushf
mov
icebp
movsl
popa
push
sub
jo
push
cmp
leave
mov
pop
movsl
pusha
iret
jp
das
jp
mov
sub
adc
jge
daa
sub
and
pop
scas
dec
test
or
inc
dec
cltd
add
dec
ret
inc
or
flds
scas
sahf
lcall
xor
rorb
and
xchg
dec
lret
pop
xor
insb
sub
push
xchg
mov
stos
dec
inc
jns
jno
ja
pop
and
xor
push
fistpll
jge
inc
les
cmp
in
mov
pusha
adc
in
test
test
adc
jbe
repnz
push
inc
clc
dec
loopne
jge
add
imul
mov
sbbb
cltd
adc
dec
sub
lods
imul
stos
sahf
je
cmp
cld
mov
add
inc
out
scas
mov
cmp
jg
cmp
xor
aas
mov
jge
subl
fimuls
mov
popf
fs
leave
aaa
mov
and
scas
jo
mov
mov
xor
call
xchg
cli
rcl
enter
xorps
pusha
jge
or
sar
aaa
fwait
mov
stc
push
fldenv
push
mov
imul
dec
push
lahf
inc
movsb
sub
cs
mov
fmuls
lock
pop
mov
sub
mov
in
mov
sub
inc
icebp
jmp
popa
and
mov
jp
lods
adc
enter
push
leave
cwtl
pop
lods
testl
rclb
or
jg
fs
jb
add
fwait
leave
orl
nop
pop
mov
mov
aaa
cmpb
fs
outsl
xor
xchg
adc
imul
sub
aam
std
loope
mov
cmpsb
fwait
lods
lods
mov
outsl
or
cmp
or
das
cmc
xchg
outsb
repnz
hlt
xlat
pop
jnp
mov
inc
daa
mov
xchg
and
sub
xchg
test
iret
push
lahf
add
jl
dec
sub
je
sub
and
fisttps
test
sahf
adc
xchg
out
lods
loopne
jmp
ljmp
scas
aas
out
mov
push
data16
scas
ljmp
inc
lcall
mov
dec
sub
dec
movsb
push
lahf
pop
aaa
dec
loop
outsb
xlat
bound
mov
jnp
jmp
nop
mov
inc
and
pop
sub
push
jns
scas
cld
mov
xchg
adc
aam
jns
cwtl
push
cmp
mov
clc
cmc
bound
in
shrl
mov
xchg
clc
gs
mov
cmpsb
sub
jmp
inc
pop
jl
xor
push
push
lcall
cmp
lods
addl
inc
rcrl
notb
lods
adc
push
insl
sahf
inc
sahf
mov
push
push
ljmp
shrb
scas
cmpsl
cmp
xorl
lock
push
fcoml
mov
jmp
addr16
adc
cmp
lret
pop
gs
movsl
cld
pop
aad
cmp
adc
mov
fldl
dec
xlat
and
inc
push
in
loop
aas
int3
push
stos
sbb
cmp
jp
xor
aad
cmp
in
andl
cltd
or
js
popa
cmp
aad
jae
fs
add
jne
frndint
mov
fisttpl
mov
addr16
movsl
iret
les
std
negb
ds
fcompl
jmp
adc
shl
pop
in
sbb
jno
test
cltd
push
or
jmp
mov
not
pop
dec
loop
imul
rcll
jg
insb
add
loopne
add
jmp
cmp
push
xor
mov
inc
dec
sbb
movsl
xchg
push
fstpt
add
mov
into
pop
repnz
cwtl
and
in
pop
mov
xor
adc
add
cwtl
std
pop
and
push
xchg
mov
mov
pop
sub
sub
lea
mov
mov
adc
push
cmp
inc
mov
ss
bound
sbb
pop
cwtl
aad
arpl
jl
xor
sub
test
fcmovbe
adc
fbstp
movsl
jge
gs
add
cmp
dec
mov
mulb
and
jnp
pop
xchg
cmpsb
adc
jo
out
jno
outsb
arpl
mov
xlat
xor
inc
push
arpl
add
pop
adc
push
cltd
movsb
notb
push
outsl
or
test
sub
lahf
dec
adc
fmul
fistps
ljmp
stos
inc
or
es
sbb
xlat
test
xchg
int3
push
loopne
jmp
loope
push
into
xorb
inc
cld
sbbb
mov
mov
gs
clc
xorb
sub
dec
adc
in
jae
jecxz
push
mov
arpl
out
mov
rclb
ret
dec
in
xchg
sub
lret
ret
in
xor
mov
ret
loopne
or
xchg
mov
das
or
push
fs
insl
jne
pop
aaa
int3
xlat
loop
or
sahf
and
addr16
fnstenv
ja
pop
in
fnstsw
adc
xchg
inc
in
adc
push
mov
or
movsb
jbe
fadds
leave
scas
jp
gs
or
repnz
and
lret
aas
inc
repz
adc
insb
mov
sbb
cwtl
stos
movsl
mov
jg
movsb
insl
mov
insb
insl
scas
jns
nop
xchg
sbb
fsub
ja
xor
jmp
pop
fcmovnb
xor
mov
mov
or
mov
and
push
cmpl
jg
out
or
sbb
mov
ja
clc
cmp
adc
mov
cmp
xchg
push
xchg
add
sub
imul
cld
int3
leave
add
xchg
and
aaa
dec
lcall
dec
pop
push
inc
in
jle
stos
cmpsl
add
sti
mov
add
adcb
adc
in
mov
lods
sbb
insl
dec
les
xchg
leave
gs
lea
jns
dec
dec
jnp
xchg
push
cltd
mov
xor
mov
fstp
cltd
sarl
loopne
add
jns
stos
pop
xor
fiadds
lock
in
sub
aad
data16
push
sbb
adc
pop
dec
push
and
icebp
lds
or
adc
push
faddl
cmp
pop
mov
xchg
pop
stc
sbb
in
mov
dec
test
nop
lcall
jge
cmc
xlat
sti
int3
xchg
lcall
aas
ffreep
jae
lret
cmp
mov
push
mov
aaa
sub
add
ret
ret
js
fnstsw
fsubr
fsubs
jne
xchg
push
inc
push
arpl
arpl
aam
adc
cwtl
mov
test
aam
fsincos
test
int3
xchg
xchg
aam
je
or
mov
mov
push
mov
mov
mov
adc
movsb
movsb
sub
pop
xorl
pop
push
or
fdivs
daa
mov
insb
or
xchg
xchg
lods
cwtl
gs
and
flds
in
xchg
fsubrl
into
pop
push
fsubs
in
pop
dec
les
fdivrl
sbb
shrb
roll
sub
in
negb
dec
add
adc
lods
jmp
sbb
cmp
por
xchg
jae
repz
scas
sti
ljmp
adcb
scas
jns
or
push
mov
iret
push
fdiv
jnp
cmp
jbe
xchg
xorb
gs
fadds
pop
push
mov
icebp
dec
mov
scas
mov
jnp
sub
dec
xchg
sub
push
data16
ja
add
mov
adc
scas
movsl
lret
ss
xchg
inc
mov
aas
fisubl
das
inc
sbb
out
mov
and
leave
addr16
les
das
xchg
cmp
clc
cmp
inc
jle
xchg
out
lods
xchg
and
mov
jb
mov
rorb
push
rcrb
jg
dec
cmp
rorl
test
and
bound
xor
cmpsl
popf
add
xchg
popa
add
dec
fdivs
ficoml
adc
loope
xchg
jp
dec
mov
gs
mov
daa
je
and
dec
sar
or
pop
mov
mov
xchg
xchg
push
clc
dec
popf
in
rclb
fisubrl
stc
push
jp
cmp
int
fcmovb
sub
xor
sbb
xchg
jl
insl
mov
pop
adc
pop
xchg
cmp
mov
add
adc
pusha
pop
mov
sub
les
sbb
imul
cltd
inc
les
fildl
ja
mov
repnz
adc
ss
pop
pop
loopne
ret
into
mov
or
enter
jl
add
loop
test
cmpsb
jb
fdivl
push
iret
pop
negb
push
cmpsb
inc
push
cmc
repz
pop
popf
xor
mov
inc
add
fiaddl
xor
sub
int3
jb
inc
js
and
sub
xor
and
dec
sbb
popa
out
insl
rcrb
aaa
dec
pop
pop
out
sbbb
cmp
mov
mov
push
xor
mov
lods
push
gs
jl
lods
mov
in
pusha
and
fidivrl
ljmp
leave
imul
repz
push
cmpsb
ret
into
mov
cmp
fadds
push
mov
iret
enter
in
out
insl
sbb
test
int
repz
popa
xorl
push
jb
add
int3
lret
dec
into
insb
push
mov
sbb
cmp
imul
out
jl
incb
push
dec
das
ja
fwait
hlt
in
add
add
movsb
dec
inc
cmp
jae
cli
gs
add
inc
in
mov
insb
xchg
dec
jae
and
adc
cld
xchg
mov
idivb
ss
add
pop
test
into
es
das
sti
fldt
imul
mov
mov
sbb
push
fdivrs
pop
jae
push
fadds
idiv
xor
fcmovb
int
roll
pop
das
add
icebp
xor
push
arpl
dec
sub
dec
cmp
rorl
in
sub
lds
in
pop
xlat
sbb
dec
fsubrl
mov
xchg
out
xchg
jo
popf
xchg
lahf
aad
test
subb
adc
push
cmp
cld
add
push
cmp
les
jbe
repz
jnp
jl
push
outsb
xchg
mov
or
xchg
mov
push
jbe
mov
cld
xchg
js
cmpb
sti
inc
cld
mov
aad
mov
hlt
mov
pushf
xchg
cmp
bound
stos
es
scas
inc
divl
std
push
cmp
xchg
daa
dec
pop
in
mov
in
sti
cltd
out
mov
imul
jno
sbb
ja
rcrb
mov
push
clc
pushf
jno
inc
int
push
xchg
inc
push
nop
sbbl
cli
push
jecxz
jg
jns
add
pop
sbb
lret
jmp
jp
leave
pop
pop
push
daa
aas
jl
mov
std
mov
outsb
inc
xchg
jmp
aaa
aam
push
lea
mov
pushf
movsl
shrl
mov
pop
mov
jmp
test
mov
aaa
xor
das
push
mov
lahf
js
sub
nop
jle
cmp
das
movsl
aas
call
cmp
mov
loope
mov
sub
bound
jnp
pusha
or
xchg
inc
mov
xchg
fwait
mov
xor
sbb
or
sbb
pushl
je
jo
mov
pop
mov
and
xor
mov
jb
in
fsubr
mov
cmc
scas
pop
fcompl
xor
push
cwtl
js
dec
rcrl
iret
lock
stos
call
jecxz
push
mov
cli
lods
test
jecxz
dec
inc
ffree
add
ja
xor
adc
jmp
sbb
nop
imul
push
stos
std
lea
inc
std
hlt
dec
xor
xchg
mov
subb
push
mov
mov
outsl
rolb
add
in
cli
and
ret
jae
out
and
popl
mov
repnz
mov
dec
icebp
and
mov
xchg
push
xor
push
cmpsb
mov
repnz
loop
test
stc
dec
scas
sub
xchg
test
xchg
push
insb
push
inc
es
rorl
aas
ds
aam
in
fsub
rol
mov
testb
dec
lcall
stos
jno
inc
sbb
mov
push
jecxz
icebp
mov
pusha
sbb
movsb
push
xchg
pop
addb
test
test
xor
mov
popa
nop
fsubrp
dec
jbe
inc
adc
jno
loopne
pop
shl
out
mov
gs
imul
fucom
add
pop
arpl
mov
sbb
mov
jbe
lods
std
movsl
jge
icebp
out
add
shl
imul
jb
shr
pop
cmp
xchg
mov
jp
cld
mov
inc
imul
or
fs
fmul
insl
push
pop
ss
pop
jb
and
insl
sbb
or
scas
inc
insl
sub
shrb
ljmp
xor
mov
dec
xchg
sub
scas
pop
push
lret
pop
out
add
push
mov
xor
cli
fiaddl
mov
js
outsb
imul
pop
inc
lahf
add
inc
inc
ret
enter
cwtl
int
dec
xchg
mov
cmp
out
pop
test
adc
cmc
jp
push
pop
and
lock
jg
enter
lds
cwtl
inc
stc
adc
inc
into
inc
lret
adc
mov
nop
mov
adc
inc
and
dec
mov
fsub
imul
mov
rclb
xchg
ljmp
mov
sahf
ja
sbb
push
subb
jl
jbe
paddsb
data16
aas
adc
fbstp
popa
dec
movsl
lcall
dec
mov
cmp
clc
xchg
push
cli
inc
mov
clc
scas
cli
jge
shrl
cmp
or
push
adc
in
pushf
and
adc
sahf
out
in
imul
lds
rcll
dec
adc
cmpb
xor
mov
fbstp
jns
pop
scas
insl
data16
imul
mul
insb
add
jb
adc
rolb
cmpsb
aad
ja
xchg
jne
jl
dec
std
mov
lock
scas
dec
cmp
ds
jbe
jbe
xchg
fwait
imul
es
punpckldq
add
out
insl
aas
jmp
clc
push
test
ljmp
cmpsb
mov
pop
sub
icebp
flds
dec
lds
cltd
pushf
icebp
pop
fcompl
mov
jp
pop
inc
sbb
push
jne
shrl
jnp
push
ror
push
aam
dec
xchg
scas
or
int3
sti
loopne
pop
or
and
and
push
clc
into
xor
sub
dec
ljmp
fildl
cld
adc
inc
outsl
push
es
jne
jns
sub
jp
nop
mov
dec
stos
fadds
mov
push
jmp
movsl
or
push
lea
sub
dec
mov
ss
arpl
xchg
mov
push
enter
dec
push
repnz
xchg
cmpsl
mov
movsb
jg
lods
mov
cmp
push
or
cmp
adc
pop
xchg
or
repz
popf
lods
decl
inc
ljmp
xchg
add
lods
and
xchg
and
mov
stos
lods
mov
in
out
mov
mov
fidivs
and
loope
fisubs
jae
cwtl
jl
mov
mov
cs
xor
mov
repnz
mov
jg
shlb
inc
inc
or
cmp
pop
test
aad
mov
mov
inc
out
jecxz
add
mov
adc
pusha
jns
repz
repnz
jge
push
imul
pop
les
xorb
cwtl
mov
mov
in
jbe
adc
data16
sbb
clc
xlat
mov
and
sub
cs
js
divl
mov
sti
mov
mov
xor
inc
incl
add
cmp
jb
jmp
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
imul
xor
add
lea
mov
add
mov
mov
xor
add
jne
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
imul
xor
add
lea
mov
add
mov
mov
xor
add
jne
mov
mov
xor
lea
mov
incl
mov
xor
add
jne
jmp
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
imul
xor
add
lea
mov
add
mov
mov
xor
add
jne
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
xor
imul
add
lea
mov
add
mov
mov
xor
add
jne
mov
xor
mov
add
mov
pop
pop
pop
leave
ret
dec
and
adc
call
add
adc
cld
insb
adc
movsb
js
add
adc
dec
jae
add
sub
adc
cmp
adc
cwtl
cmovb
pushf
cmovb
mov
cmovb
test
inc
add
inc
add
dec
aam
dec
add
add
add
add
cmp
lar
rolb
add
adc
pop
sbb
add
sub
adc
mov
push
adc
ret
add
inc
add
inc
add
push
inc
add
push
inc
add
push
inc
add
push
inc
add
cmovb
pop
cmovb
pusha
cmovb
cmovb
push
cmovb
jo
inc
add
add
cmp
add
adc
fldt
adc
xchg
sub
add
aaa
adc
and
xor
add
push
inc
add
push
inc
add
push
inc
add
push
inc
add
push
inc
add
cmovb
add
inc
add
cmovb
adc
add
push
adc
xchg
xor
adc
stos
jo
add
inc
adc
pop
pop
adc
fildll
adc
push
push
inc
push
add
and
insb
pop
inc
test
mov
add
add
inc
cmp
jb
outsb
je
popa
je
pop
dec
outsl
imul
insb
imul
dec
gs
add
add
add
add
mov
add
add
xor
add
add
add
add
add
add
add
sub
add
sub
add
xor
add
mov
adc
add
add
insl
bound
imul
inc
insb
outsl
jae
push
imul
popa
je
outsl
outsb
inc
insb
outsl
jae
push
.byte
