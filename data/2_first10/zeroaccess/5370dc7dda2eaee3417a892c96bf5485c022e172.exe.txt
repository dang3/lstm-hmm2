push
mov
jmp
cwtl
jb
inc
pop
pop
cltd
lret
inc
scas
loope
mull
jno
jle
xor
xor
ja
or
hlt
or
cmp
int3
adc
sbb
mov
or
rorl
out
mov
or
dec
sbb
loopne
add
mov
xor
jbe
fisttpl
jecxz
and
xchg
dec
incl
mov
loope
pop
sub
jae
lret
lcall
mov
loop
cmp
sub
or
sbb
outsl
insl
je
cmp
jns
popl
shll
movb
sahf
mov
daa
sbb
addr16
in
test
mov
test
add
cmc
xor
mov
fstps
xchg
adc
ja
nop
lds
jl
add
call
lret
sub
mov
dec
movsb
mov
imul
inc
cmpsb
jb
loope
or
repz
adc
dec
or
xor
lret
stos
xchg
enter
mov
sub
aad
sbb
addr16
scas
popf
jge
or
sbb
popa
cmpl
cmpsl
and
in
in
dec
xchg
ret
mov
arpl
sbb
adc
stos
cmp
test
lcall
cmpsl
xor
mov
shrl
mov
pop
das
dec
movsb
add
repnz
insb
call
aas
pushf
jb
mov
xor
xlat
sub
aad
testl
sub
add
mov
mov
adc
or
mov
sub
pop
repnz
imul
adc
mov
enter
inc
ja
pop
jge
mov
inc
or
xor
xor
cmp
push
add
js
iret
mov
ret
fcmovb
or
inc
pop
add
jecxz
jl
xor
idivb
cmp
stc
and
xchg
and
inc
ja
jp
subl
cs
sub
inc
lcall
lret
add
mov
movsb
pop
sarl
mov
in
jns
and
jge
jge
lret
add
xor
xor
rcll
aaa
jmp
mov
icebp
mov
fistpl
dec
std
or
xchg
fidivs
inc
mov
jo
xor
pop
xor
xchg
and
cld
subb
fstl
enter
jg
sbbb
inc
sahf
cmpsl
xor
andl
movsl
jl
cmp
sarl
inc
jae
push
test
xchg
cmc
jmp
sub
into
rcl
xor
add
xor
mov
sbb
add
xchg
lret
pop
movsb
out
fsubl
or
outsl
xor
sbb
mov
dec
sub
sub
fmul
js
mov
push
push
pop
sub
add
outsl
mov
es
stos
aad
ljmp
fisttpl
repnz
pop
movsl
dec
cwtl
pop
fs
ret
cmp
push
lock
adc
xchg
sbb
jecxz
in
jp
add
mov
add
pusha
fistps
shrd
inc
movsb
stos
clc
mov
ja
adc
push
jne
push
mov
sbb
sbb
pop
arpl
test
subb
cli
call
mov
sub
inc
clc
xor
push
push
inc
add
inc
in
xor
enter
add
mov
movl
cmpl
je
cmpl
jne
pushl
call
mov
dec
mov
jmp
sub
lea
movl
cmpl
je
cmpl
jne
pushl
push
push
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
and
mov
and
mov
jmp
sub
ljmp
fcomi
fadds
jno
jle
mov
pop
and
push
and
loop
jmp
mov
inc
mov
inc
or
bound
mov
adc
mov
or
lods
jne
and
push
cmp
add
mov
movsl
pop
aas
pop
test
sub
jmp
add
adc
jo
mov
xor
fsubrs
movsb
int3
jg
pop
pusha
int
inc
jnp
js
sbb
fsubrp
jle
pop
icebp
scas
or
mov
or
xor
aad
loope
aam
popa
fmull
jp
iret
mov
sub
xor
sub
adc
inc
aaa
mov
sub
mov
fadds
outsb
leave
push
ds
inc
in
ss
fidivrl
xchg
or
dec
adc
jns
out
push
inc
or
aad
push
sbb
loope
sbb
nop
or
es
scas
scas
mov
inc
cmpsl
imul
push
rcll
pop
xchg
jb
jae
push
pop
dec
push
pop
popa
outsb
and
or
push
cmp
jns
std
loop
scas
loop
add
enter
cmpsl
or
shlb
xlat
fcomi
negb
rcrl
sub
out
lret
pushf
cs
mov
into
out
xor
outsl
sub
stos
mulb
test
popf
das
sub
dec
pop
pop
inc
xor
xlat
cmp
xor
pop
stos
push
mov
mov
jo
sbb
or
insb
mov
movsl
fistpl
or
push
fst
dec
outsl
and
xchg
mov
inc
push
das
gs
test
bound
lea
fstpl
shlb
inc
add
std
pop
xchg
mov
push
add
mov
sbb
sub
xor
and
imul
pop
sub
dec
shll
test
or
xchg
lea
leave
in
push
xchg
sub
cmpl
jae
aas
imul
ds
add
lahf
xchg
pop
outsb
bound
and
adc
imul
aaa
rcrb
add
pop
in
sti
dec
outsb
in
or
dec
sahf
sbb
push
fs
sahf
test
and
mov
pop
loopne
xor
inc
xor
mov
lahf
inc
xor
jp
lds
cmpb
adc
cmp
push
inc
test
fisttpll
lods
mov
cli
aaa
cmc
push
push
repz
fnstsw
or
xor
jmp
or
sbb
sub
loope
sub
arpl
jl
dec
into
add
mov
dec
icebp
clc
dec
push
xor
push
clc
gs
sub
pop
and
and
jl
jp
in
leave
into
sub
stos
ljmp
fwait
movb
sbb
inc
in
sub
push
inc
mov
aas
fisubrs
roll
xchg
lock
mov
cmp
imul
dec
in
out
lea
lret
shl
inc
xlat
ret
idivl
and
imul
pop
cwtl
xor
sub
lret
fs
shr
push
lods
in
outsl
cmp
shrb
out
repnz
idiv
sbb
adc
gs
cs
sub
data16
fisubrl
inc
rcrb
inc
loopne
sbb
push
lea
xor
mov
mov
xor
push
sbb
push
adc
mov
mov
movl
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
addl
mov
or
mov
mov
xor
mov
sbbl
xor
xor
xorl
add
add
sbbl
jmp
ret
imul
mov
out
dec
push
jne
jle
jno
jle
pop
jno
iret
iret
jle
aam
mov
push
push
mov
aad
cmp
or
ret
hlt
add
or
fistps
in
iret
cmpsl
jne
out
add
sbb
or
cmp
fmulp
push
popa
bound
lret
mov
push
or
fs
cwtl
xchg
xchg
ja
jge
push
xor
mov
inc
sbb
add
mov
mov
mov
and
out
jnp
add
jg
insl
movzbl
fs
mov
dec
dec
hlt
sti
sub
call
daa
cmp
mov
and
adc
rclb
sub
jae
mov
add
xor
xchg
push
les
jbe
sub
rol
adc
ljmp
imul
int3
int3
shlb
sub
sub
cmp
push
aam
mov
mov
sub
push
je
push
addl
dec
dec
pop
fcom
sbb
pop
addl
pop
and
xor
iret
jp
xlat
dec
loope
mov
mov
data16
pop
jo
xchg
add
dec
xchg
pop
loop
or
call
stos
int
fstl
repnz
cltd
cmp
mov
sub
sub
jecxz
insb
in
loop
nop
inc
inc
jno
es
into
imul
mov
xchg
mov
int
pop
xchg
pop
or
and
inc
xchg
dec
dec
adc
sub
or
mov
xlat
adc
pop
mov
jnp
add
cmp
mov
jg
adc
jp
test
xchg
fistpll
subl
dec
out
cmp
push
incb
mov
adc
jg
out
lock
pop
mov
inc
outsl
repnz
movb
push
stos
jns
mov
pop
sub
mov
enter
out
mov
pop
xlat
sub
jl
faddp
mov
mov
and
dec
mov
jns
orl
xchg
ljmp
shrb
sub
cmp
pop
sub
mov
mov
scas
mov
push
jae
xchg
sbb
cmp
stos
popa
insl
jle
or
push
add
sub
and
dec
add
jns
jl
test
push
mulb
stos
jle
push
jge
push
sub
andl
rcrb
and
cltd
push
push
sti
pop
pop
insb
pop
int
mov
out
call
xchg
fisubrl
inc
xchg
dec
out
das
dec
cmp
mov
and
xchg
pop
movsl
repz
cltd
mov
roll
shll
inc
or
or
lret
repz
mov
fcoml
std
dec
dec
shrl
add
pushf
add
jmp
call
in
test
shlb
lahf
jl
lods
or
push
cwtl
cmp
ja
mov
sub
sbb
add
cli
push
cmp
js
sbb
jge
and
pop
sub
mul
lcall
addr16
push
fsts
cmp
imul
stc
inc
hlt
ja
jg
cmp
aam
cmc
xchg
mov
movl
xor
lea
add
idivl
mov
xrelease
jmp
pop
nop
jl
jge
and
jns
add
jle
jno
jle
fldl
and
inc
and
mov
in
lea
or
add
sarl
movsl
sbb
arpl
in
aaa
sbb
mov
mov
xor
mov
mov
xchg
sub
sbb
negb
das
inc
sbb
push
pop
jl
adc
loop
and
aaa
cltd
leave
mov
sbb
mov
sub
jne
mov
hlt
in
data16
pushf
push
mov
xchg
rorl
push
stos
xor
fidivrs
pop
fdivrl
or
lds
es
ds
nop
xchg
movsl
xor
sub
aam
movsb
cwtl
pop
ja
mov
add
jmp
mov
cmc
push
lea
mov
gs
out
leave
hlt
sub
and
out
les
xor
out
cmp
xchg
into
mov
lret
in
sbb
loopne
aas
add
or
xchg
cwtl
xor
incb
arpl
cmc
lcall
dec
lret
dec
add
sub
nop
int
aaa
std
in
nop
xchg
pushf
enter
and
int3
inc
jnp
div
jbe
pop
dec
jo
add
popf
cmp
clc
sbb
inc
and
adc
pop
adc
mov
repz
repnz
repz
sarb
lods
int3
dec
add
jbe
jge
cltd
fwait
push
jb
je
fdiv
mov
insl
rol
rolb
leave
adc
push
scas
cmpsl
aaa
daa
dec
adc
push
inc
fmuls
dec
or
aam
inc
cmp
fs
ljmp
sub
add
and
cltd
add
dec
lds
loope
mov
shrl
ja
push
mov
fimuls
mov
js
nop
xchg
loop
das
mov
xor
mov
scas
repz
stos
mov
aam
repnz
bound
xor
inc
jp
inc
fldl
int
mov
jae
mov
pop
cs
xchg
notl
lahf
fs
mov
mov
pop
mov
int3
sti
fs
cmp
add
mov
mov
xor
jge
icebp
lret
jno
push
in
lock
ljmp
mov
repz
cmc
xchg
jb
jecxz
cmp
pop
sbb
inc
add
and
and
std
mov
insb
scas
rolb
in
shrl
jmp
cmc
mov
xorb
pop
leave
add
mov
sub
dec
imul
lods
ret
push
xchg
shl
shlb
xlat
mov
int
xor
gs
dec
push
aam
int
data16
mov
test
insl
out
std
iret
fstps
jbe
inc
das
maskmovq
cmpsl
or
xor
cmp
jae
sub
dec
pop
lock
daa
mov
testl
data16
push
lock
jnp
jo,pt
sub
or
sti
mov
pop
cmp
mov
xchg
lcall
in
ljmp
adc
insl
xor
repnz
jae
sub
mov
fldl
and
and
and
sub
mov
scas
in
scas
mulb
inc
jnp
mov
movl
movl
cmp
movl
je
movl
sub
lea
mov
sub
mov
not
jmp
inc
test
xchg
mov
rorb
into
or
jle
jno
jle
push
or
rorl
insl
repz
jno
inc
mov
lds
lahf
in
clc
outsb
jecxz
mov
push
int
dec
fnstcw
mov
cmp
xchg
push
out
push
and
mov
push
in
adc
sub
pop
fs
and
int
mov
jle
push
cmp
fidivrl
aam
fstps
and
mov
movsl
into
js
mov
out
mov
loop
jg
fwait
loop
jle
dec
xor
icebp
adcb
add
pop
jecxz
dec
adc
gs
in
sub
out
push
push
jns
mov
pop
xor
cmp
and
out
xchg
cmp
push
xchg
jno
add
dec
xor
xchg
inc
jl
stc
movsl
or
in
dec
das
mov
jne
adcb
dec
shrl
add
lret
out
push
sub
push
stos
in
or
sub
cmp
sbb
jmp
popa
nop
mov
jp
or
rcr
outsl
fwait
insb
sbb
push
addr16
mov
fwait
jb
lock
sbb
add
push
add
push
add
push
repz
es
aad
test
insl
pop
dec
in
push
pushl
arpl
loope
xchg
mov
rclb
movsb
adc
ljmp
mov
jg
fdivrl
cli
push
icebp
push
pop
sub
add
mov
rorl
leave
push
mov
mov
cs
or
fcoms
or
jge
pop
cmc
dec
dec
and
mov
jmp
clc
popa
sbb
jge
pop
dec
neg
mov
cmpsb
and
or
lahf
scas
push
inc
and
xchg
test
aad
jl
sbb
push
test
lret
cmp
clc
jge
cwtl
fcoml
rcr
addr16
inc
pop
je
insb
jp
push
dec
push
fdivrl
bound
sbb
sub
dec
pop
sub
sub
add
pop
ljmp
adc
jle
jbe
lret
cmc
iret
mov
xchg
mov
int3
sbb
es
dec
fsubrl
fidivrl
and
test
mov
pop
adc
stos
lea
fdivl
inc
xor
mov
or
sarl
rclb
pop
jle
mov
inc
xchg
xorl
enter
sbb
inc
add
inc
test
inc
aaa
les
mov
push
dec
nop
aas
std
neg
xchg
insb
aas
push
or
and
fisubl
xlat
mov
cmp
repnz
mov
int
add
mov
pop
aam
or
insb
pop
fwait
pop
fsubp
jno
xor
mov
add
ret
dec
movsb
sbb
movsl
js
fwait
popf
aad
xchg
and
xlat
enter
push
mov
lods
lock
cli
pop
sbb
jae
fwait
inc
push
jl
popa
push
jae
dec
inc
push
pop
mov
mov
outsb
aad
je
xor
or
movsl
movsl
imul
sub
sub
add
sarb
call
xchg
and
xor
pop
ds
jo
xor
jbe
inc
xor
stos
shlb
hlt
rcll
mov
imul
movl
mov
movl
mov
cmp
movl
je
and
mov
jmp
inc
xchg
ljmp
dec
xchg
sub
loop
push
movd
jno
jle
push
std
adc
sub
adc
xor
in
inc
test
adc
or
iret
arpl
outsb
xchg
out
out
aad
pusha
fnstcw
std
mov
pop
cmp
icebp
fisubrs
mov
lcall
sahf
imul
aad
push
ljmp
push
inc
loope
adc
xchg
pop
inc
lea
mov
cli
push
out
push
push
jp
aaa
xor
lret
cmc
xor
sub
sbb
arpl
cmp
out
mov
loope
or
das
push
jns
jle
push
js
xchg
xchg
loop
popf
jno
pop
test
popf
pushf
cmp
xor
mov
push
outsb
mov
push
sbb
mov
int
mulb
test
fs
pop
dec
xor
dec
stos
test
mov
les
mov
imul
mov
xor
dec
scas
xchg
push
or
popf
xchg
jno
sub
jo
jmp
jns
or
outsb
push
add
pop
mov
fiadds
aaa
mov
lds
xchg
movsb
push
cwtl
sub
ss
sub
int
xlat
lcall
pop
jb
aad
ror
lods
mov
mov
xor
aas
dec
test
cltd
jns
aam
in
sbb
dec
and
and
test
xor
dec
adc
fistpl
mov
sub
pop
pop
pop
cmp
cmp
lcall
outsl
dec
mov
jecxz
lds
pop
mov
popa
int
inc
push
dec
add
pop
fucomi
in
jp
jno
adc
fmul
gs
or
sub
push
xchg
bound
scas
cmp
cmp
insl
sub
fistps
sub
mov
sub
pop
jne,pn
mov
sub
jge
cmp
out
jbe
fwait
xor
xchg
add
fs
aad
adc
mov
inc
pop
jmp
mov
push
jnp
lret
lcall
pop
xchg
movl
mov
jno
push
mov
jo
arpl
iret
fstl
repz
loopne
divb
and
stc
ja
or
ss
sbb
push
xor
sbb
stos
mov
out
movsl
lahf
stc
movsb
vrcpps
sub
add
jl
inc
addps
mov
jl
push
ss
cmp
int3
mov
in
ret
pusha
mov
jns
movsl
shlb
and
mov
or
aad
pop
and
dec
mov
push
xchg
inc
xlat
xor
jbe
mov
inc
dec
or
xor
sub
fs
out
inc
adc
je
mov
decl
out
jp
adc
inc
outsl
jns
jmp
out
lods
cli
jns
clc
cmp
add
sbb
lret
adc
xor
cs
jle
mov
xchg
int
mov
hlt
out
add
testl
cmc
nop
shr
out
repz
cltd
add
sbbb
std
dec
negb
jmp
lret
fcomip
push
lods
and
ss
jg
push
repnz
movsl
cld
cmp
pop
push
mov
sti
push
or
jge
inc
lahf
in
pop
orl
movl
cmpl
je
cmpl
jne
pushl
call
cmpl
jne
xor
xor
dec
mov
mov
dec
mov
jmp
mov
xor
add
pop
pop
pop
leave
ret
mov
add
cmp
je
jmp
clc
inc
adc
xchg
jge
pop
movsl
pop
dec
push
jl
mov
jle
jno
jle
and
insb
dec
nop
push
lock
mov
lret
movsb
lahf
movsl
or
pop
imul
fidivs
or
popf
mov
dec
cli
insl
es
out
mov
or
test
mov
repz
lock
repz
in
fdivrl
sahf
fisubs
bnd
inc
mov
mov
dec
cltd
jg
inc
mov
test
dec
fiadds
je
pop
push
pop
ret
gs
adc
shl
pop
adc
ja
js
fisubrs
adc
fmull
shll
inc
adc
arpl
mov
clc
or
jnp
pop
testl
fsubr
add
ret
xchg
fldenv
imul
pop
aad
sbb
pop
outsb
add
in
dec
xor
push
push
pop
inc
ret
fsts
and
cmpsl
aaa
pop
or
push
jae
addr16
test
pop
adc
jae
xor
xchg
sub
inc
xchg
mov
insb
leave
jge
jecxz
or
pop
lahf
mov
xorb
or
inc
mov
and
hlt
jge
mov
sub
xchg
popf
or
scas
inc
sub
pop
lods
sub
jmp
inc
mov
notb
arpl
out
rcrl
cli
jne
dec
pop
sbb
pushf
outsb
mov
cs
and
pop
xchg
jne
lret
stc
dec
lret
das
aaa
sbb
daa
dec
scas
mov
testl
in
popa
outsl
hlt
or
int
in
aas
xchg
jecxz
imul
xor
push
loopne
xchg
mov
pusha
and
inc
std
add
lods
push
push
mov
test
out
mov
rorb
stc
cmp
ret
pop
pushf
dec
mov
scas
sbb
sub
daa
xchg
push
fcom
sbb
sbb
test
ficompl
enter
pop
mov
mov
xor
sbb
data16
call
push
mov
mov
lahf
jae
stc
icebp
sbb
cmp
and
or
xlat
lods
xchg
leave
stc
test
pop
imul
sbb
xor
rclb
sahf
jmp
inc
jp
push
and
pop
sti
fdivrl
inc
sbb
pop
out
je
leave
sub
imul
shr
lock
pop
mov
push
and
jl
test
pop
aad
outsb
bound
mov
pop
aad
int
mov
xchg
jns
aam
and
mov
lahf
rclb
push
xchg
call
mov
fs
int
or
cmp
push
mulb
push
call
test
pop
ss
outsl
jmp
call
cmp
add
or
test
divl
mov
orb
int
dec
lret
mov
inc
pop
ret
sarl
fbld
xor
jbe
or
insl
js
sub
pop
lcall
adc
ss
std
push
jbe
push
data16
fidivs
mov
dec
movsl
xchg
jo
mov
mov
test
xchg
mov
dec
iret
outsl
test
psubsb
jecxz
jmp
cmp
xlat
jmp
fstl
sub
jne
cmp
int
pop
inc
mull
adc
es
mov
cmpsl
daa
or
jb
mov
xor
and
push
lret
loop
jns,pt
lahf
outsb
pop
cvttps2pi
sub
mov
and
lret
decl
call
sub
mov
inc
lock
jmp
jmp
adc
repnz
mov
test
inc
mov
pop
jle
xorb
xor
dec
sub
jns
jl
hlt
mov
jle
movsb
sahf
pop
rorl
imul
and
leave
xor
mov
xor
out
cmc
scas
ret
mov
repnz
xlat
test
sub
mov
gs
sarl
mov
jbe
jns
out
leave
arpl
cmp
rcl
add
out
add
pop
test
cld
es
out
push
mov
imul
jp
dec
outsl
fbstp
mov
into
aam
mov
and
dec
ss
mov
sti
enter
div
lret
dec
cmp
mov
aam
dec
inc
lcall
lret
pop
out
jg
pop
rol
dec
mov
movsw
int3
xchg
sub
mov
adc
mov
mov
push
lret
mov
and
inc
push
cmp
gs
push
sbb
test
add
push
aaa
xchg
sbb
xor
arpl
stos
cmp
mov
jmp
xchg
pop
orl
jecxz
cmp
pop
in
jmp
xchg
iret
das
lea
inc
mov
dec
pop
testb
jnp
xor
lock
aad
cmc
xchg
iret
scas
inc
and
test
arpl
mov
push
jne
mov
adc
add
sti
jmp
das
and
mov
test
pop
xor
mov
imul
mov
orb
shr
cld
lods
shrb
iret
or
rcrl
sbb
xor
sbb
shrb
cmpsb
stc
sbb
ja
push
cwtl
xor
add
fidivrs
pop
hlt
pop
push
cmpsb
pop
cmp
aaa
mov
shl
mov
cvtps2pi
push
dec
mov
icebp
pop
lret
mov
dec
test
mov
lock
lock
push
or
mov
ds
stos
sub
inc
mov
xchg
enter
and
and
mov
mov
pusha
push
in
jb
lret
sub
adc
pop
decb
push
in
inc
dec
test
pushf
pop
cld
dec
push
pop
scas
hlt
mov
cmp
push
popa
inc
pop
jnp
xchg
movsl
out
push
enter
jae
fsubs
push
dec
mov
aam
fcmovne
push
or
cmpl
mov
lock
push
dec
inc
push
sub
add
scas
mov
jecxz
or
fidivs
push
scas
xor
xchg
sbb
cltd
lods
xor
xor
cltd
dec
fdiv
sub
push
gs
outsl
outsb
cmp
jecxz
cmp
dec
sub
test
adc
cmp
int3
sbb
xchg
outsl
loop
dec
xchg
dec
outsb
mov
pop
int3
data16
cmp
add
jno
mulb
mov
pop
fwait
es
inc
loop
sub
div
xchg
movsb
outsb
gs
dec
cmpsb
mov
push
lods
jae
fisubrl
mov
mov
stc
shlb
jns
test
sub
push
cmp
sbb
test
pop
movl
dec
cmp
xchg
cltd
push
or
add
ljmp
push
cmp
adc
cwtl
mov
test
ret
repnz
mov
and
xlat
push
imul
cs
pop
mov
jmp
jl
sub
jge
jge
inc
sbb
fstpt
popf
sahf
sbb
xorb
push
xchg
lods
sbb
pusha
test
mov
shll
sub
mov
xchg
sbb
fcoml
test
jns
daa
rcrl
mov
lds
sti
clc
in
shr
test
loopne
mov
inc
pop
and
cmp
sub
out
pop
jae
mov
cmp
push
xchg
mov
repnz
or
jecxz
pop
mov
aad
push
inc
xor
sub
sbb
push
and
add
lret
fcompl
sub
in
loop
jge
mov
pop
xchg
add
repz
repnz
mov
inc
sbb
out
loopne
adc
or
dec
pop
push
imul
cmp
sbbb
lahf
jb
jb
idivb
lret
cmc
sbb
ret
sub
test
xchg
xor
xchg
mov
xor
scas
insl
aam
cmp
shll
adc
pop
sub
jo
divl
mov
adc
rcr
jecxz
jl
mov
repnz
cltd
push
movsb
push
xor
mov
pop
scas
cbtw
and
xchg
sbbl
mov
sub
addr16
mov
clc
ret
out
mov
dec
cli
pop
and
subb
cltd
and
punpckhbw
lcall
mov
loope
dec
push
push
add
cltd
enter
inc
test
iret
mov
popf
cwtl
or
fldt
mov
andl
sti
add
femms
sti
cwtl
xor
movsb
clc
ficomps
cmp
fisubs
fdiv
mov
aad
push
dec
stc
fs
jbe
movsb
xchg
jne
cmp
cmp
pop
ljmp
push
jge
push
mov
sub
push
or
mov
mov
mov
mov
negb
lret
xlat
sub
mov
das
rcr
mov
rorl
sub
loope
push
sub
sub
adc
cmpsb
cmpsb
fldl
and
in
in
mov
push
push
mov
rclb
outsl
mov
ja
icebp
sbb
adc
divb
mov
shrb
xor
push
mov
cltd
sub
xorb
lods
xchg
lock
movsl
jno
fstpt
popa
push
popa
ret
sbb
mov
sbb
pop
fs
mov
lret
xchg
or
popf
imul
pop
mov
or
fists
shlb
jle
loopne
jmp
test
xchg
hlt
cmpsb
push
sbb
mov
inc
push
cmpsb
mov
xchg
mov
mov
jle
push
pop
pop
pop
js
je
xlat
addr16
lods
kmovb
fldt
mov
add
lock
arpl
dec
and
xchg
pop
cs
push
adc
cmc
aam
ljmp
data16
in
rol
cwtl
pop
nop
cmp
loope
out
jecxz
das
pop
pusha
inc
dec
sbb
aad
push
pop
mov
loope
adc
and
fldl
jne
jp
in
jge
popa
pop
leave
mov
les
cmp
mov
sbb
adc
push
mov
mov
mov
xor
jmp
nop
cltd
fstl
xlat
push
mov
xor
out
and
jle
xorb
sbb
in
xor
lods
push
sub
hlt
mov
bnd
or
sub
jbe
push
je
mov
inc
mov
lea
xchg
out
testl
jle
pop
cmpsl
fisubrs
adc
push
js
orb
outsb
and
fnstcw
cmp
xor
popa
lods
sub
inc
jns
test
std
inc
daa
pop
mov
test
and
add
or
xlat
ret
xchg
fs
dec
pushf
cmpsb
push
imul
sbb
push
pop
sbbb
lea
dec
xchg
mov
inc
mov
fisttps
sbb
cmp
int3
or
repnz
adc
or
and
mov
add
dec
jp
sbb
push
jnp
ljmp
add
inc
leave
ds
add
iret
push
xor
xor
lock
xchg
pop
xor
sub
data16
sbb
fisttpl
cmp
fs
movsl
mov
mov
shl
pop
imul
movsl
adc
lahf
sti
loop
stos
les
insb
shrb
sbb
dec
mov
arpl
xor
int3
test
cli
daa
sub
ret
xor
aam
jp
mov
fs
sub
jp
mov
and
xchg
xchg
in
xchg
negl
sti
sbb
into
stos
jecxz
jecxz
pop
test
mov
mov
sub
push
xor
mov
sub
inc
dec
scas
data16
lods
stos
or
xchg
xor
mov
fsubrs
xchg
jb
ret
sub
out
mov
js
aas
add
call
icebp
and
pop
xor
pop
jne
hlt
or
lds
adc
sbb
pop
loopne
sti
xor
lea
push
mov
pop
loop
aas
loopne
mov
or
dec
test
loope
daa
lea
aad
adc
ljmp
inc
lds
xchg
addr16
pop
jo
push
mov
icebp
dec
sbb
or
into
xchg
or
aas
xchg
pop
sbb
pop
mov
fiaddl
dec
or
aam
dec
mov
lods
sub
push
pop
cs
clc
jbe
jecxz
test
aas
adcl
shll
fildll
loop
mov
mov
xor
add
shlb
or
or
cltd
push
dec
mov
movsb
push
shlb
push
mov
adc
pop
movsb
cs
sarl
push
inc
dec
mov
hlt
xor
push
cmpsb
icebp
mov
cmc
in
lret
cld
imul
rcrl
fnstcw
dec
mov
add
adcl
pop
lret
je
call
icebp
push
or
mov
rcl
jne
sahf
sub
aam
jmp
in
sbb
aad
sbb
cs
pushf
and
jno
popf
mov
push
mov
in
scas
pop
enter
je
mov
les
cmpsb
out
and
pop
cli
jb
ficomps
pop
adc
fwait
shrb
dec
lds
mov
dec
shr
xchg
pop
arpl
repnz
adc
add
popa
leave
in
pushf
lcall
jecxz
push
cmp
add
ret
pop
je
mov
xor
add
mov
mov
mov
mov
xor
add
movzwl
mov
xor
lea
add
mov
mov
mov
xor
add
imul
sub
mov
jmp
mov
mov
xor
cmp
je
mov
addl
jmp
mov
cmp
je
mov
jmp
push
mov
sub
push
mov
andl
mov
mov
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
pushl
call
cmpl
jne
mov
inc
mov
jmp
movl
movl
mov
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
add
mov
xor
mov
xor
mov
or
add
adc
mov
mov
movl
cmpl
je
cmpl
jne
pushl
call
mov
dec
mov
jmp
adcl
xor
xor
add
mov
movl
movl
movl
andl
mov
inc
mov
cmpl
jne
push
push
push
call
cmpl
jb
adc
movl
or
movl
movl
xor
movl
mov
xor
mov
add
cmp
movl
je
movl
push
movl
jmp
mov
mov
sub
or
mov
sub
mov
xorl
sub
andl
mov
inc
mov
cmpl
jne
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
movl
mov
andl
xor
xorl
add
movl
cmp
movl
jb
addl
mov
add
mov
xor
add
and
mov
xor
andl
mov
inc
mov
cmpl
jne
pushl
push
call
cmpl
jb
sbbl
xor
add
movl
cmpl
je
cmpl
jne
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
sbbl
add
sbbl
imul
xor
mov
add
mov
sub
movl
cmp
movl
ja
mov
xor
orl
add
jmp
mov
mov
xor
xor
mov
adc
add
add
imul
mov
sbb
mov
or
mov
sub
cmp
ja
jmp
ljmp
insl
imul
out
adc
mov
jle
push
fs
inc
loop
shll
loop
aad
sbb
push
fdivs
push
lea
jmp
mov
add
adc
xor
lods
sub
pop
mov
xor
adc
js
js
adc
fcmovu
gs
sbb
rclb
stos
sbb
das
mov
test
fnstsw
clc
es
xchg
test
pop
dec
sub
addl
fwait
mov
mov
fstps
in
mov
adc
paddsw
and
push
clc
mov
push
pop
bound
and
or
or
pop
cmp
addr16
inc
sbb
popf
and
cmc
push
call
aam
adc
inc
nop
repnz
in
and
add
in
jo
cmpsb
ror
mov
push
cmp
sbb
mov
xchg
mov
das
push
push
addl
fsubr
add
sub
hlt
push
das
jae
daa
sub
addr16
pop
or
inc
pushf
popf
mov
sbb
push
mov
inc
push
addr16
inc
and
hlt
jo
and
mov
scas
cmp
pop
push
add
adc
es
aam
mov
in
iret
add
lea
pop
and
in
mov
into
adc
lods
and
in
inc
adc
shlb
push
ss
cmp
xor
sbb
mov
and
mov
pop
add
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
jmp
rorb
push
mov
push
stos
mov
xlat
jl
ret
adc
mov
jle
nop
mov
sbb
loop
inc
stc
lea
mov
lret
daa
repz
push
ja
fidivrs
xorl
push
inc
push
push
mov
std
dec
daa
rcrb
addb
pushf
inc
dec
adc
and
loop
imul
fwait
xchg
stos
mov
inc
les
adc
inc
loopne
ficoml
mov
pop
cld
cmp
inc
push
inc
testb
add
push
int
iret
add
inc
pop
fcmovne
inc
insl
hlt
dec
xor
sarl
ret
xlat
adc
add
pop
xchg
jo
ss
ss
lret
mov
andb
in
inc
pop
pop
lret
inc
out
ljmp
repz
and
dec
inc
pushf
jmp
cmp
into
outsb
cltd
push
hlt
out
pop
fldcw
dec
or
push
jg
xchg
mov
fucomi
pushf
in
xchg
dec
loope
lcall
push
lds
fs
or
mov
pop
inc
fdiv
pop
mov
adc
fcoms
jae
imul
iret
pop
or
call
aad
inc
cmp
loope
repnz
out
imul
and
lret
add
fisubrl
test
inc
cmpb
adcb
xchg
ja
shll
cltd
xchg
repnz
cwtl
pop
pop
mov
ss
sub
repz
dec
sbb
push
adc
repz
mov
jmp
mov
mov
jmp
fs
popf
insl
pop
gs
xchg
popl
push
adc
jle
jg
jle
sub
mov
jae
and
cmp
mov
jg
mov
dec
cmpsl
mov
push
bound
leave
lret
js
pop
gs
fsubrp
xor
rcrb
dec
adc
scas
sub
shrl
or
pushl
cli
lahf
stos
add
dec
and
xor
mov
jnp
mov
pop
inc
dec
adc
cmp
test
pop
cltd
adc
dec
mov
std
pop
jecxz
and
ret
xor
sbb
syscall
test
adc
cmc
adcb
sbb
adc
dec
lock
xchg
imul
shl
or
fstpt
das
inc
cmp
sbb
mov
cmc
push
pop
pop
jmp
push
or
repz
cli
add
dec
push
mov
pop
lea
mov
push
or
jbe
cmc
inc
cwtl
out
je
dec
xchg
lahf
xchg
das
lea
shll
loope
in
aas
or
sahf
iret
lods
jecxz
data16
ret
mov
push
or
addr16
je
scas
lods
push
cmp
int3
add
sbb
cmp
lock
mov
cmp
not
xchg
es
mov
xor
cmpl
xchg
dec
pop
xchg
mov
daa
lcall
jns
fdivr
aam
les
fisttps
lea
adc
xchg
mov
das
jge
xchg
lea
jge
sbb
movsb
test
jno
xor
xor
jmp
xchg
push
int3
jns
imul
mov
push
jle
mov
jle
xor
lahf
enter
jle
add
lcall
enter
test
and
jle
cmp
dec
arpl
lret
fnstenv
jg
xchg
adc
jbe
pushf
mov
sbb
mov
lret
push
pop
sub
cld
out
push
add
xor
cs
lcall
loope
mov
jmp
call
ja
push
adcb
imul
cmp
pop
xor
sarl
xchg
enter
push
dec
xor
mov
push
jo
lcall
sbb
int
movsl
push
fisubrs
pop
fldenv
repz
or
pop
cmpsl
adc
push
mov
movsb
mov
testl
adc
jle
testl
pop
adc
cmp
push
test
pop
clc
jmp
inc
aaa
roll
sbb
cmp
add
cmp
mov
mov
adc
mov
push
sbb
xlat
dec
loopne
mov
adcb
sub
js
pushf
mov
dec
orb
cmp
ja
nop
jo
add
mov
xor
lea
fldl
add
testl
int
mov
test
mov
ret
jo
mov
cwtl
imul
mov
mov
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
jmp
hlt
mov
add
pop
mov
adc
jle
mov
jle
orl
dec
rorb
pop
out
daa
fbld
add
lock
ret
les
fdivrs
push
es
aas
mov
pop
cmpsl
sarl
adc
mov
add
lcall
cmp
aas
push
popa
sub
add
loope
test
mov
flds
sbb
faddl
inc
clc
rorb
test
fnstcw
push
bound
in
popa
inc
imul
sbb
xchg
dec
imull
aaa
js
cmp
adc
xchg
pop
mov
xchg
imul
push
jmp
inc
lods
mov
jnp
pop
xor
xchg
jo
ljmp
adc
and
nop
jne
pop
mov
pop
repz
mov
push
adc
jne
push
fcmovnb
data16
ja
outsl
dec
data16
cmp
pushf
adc
inc
popa
imul
pop
xor
mov
or
xor
inc
arpl
push
mov
pop
pop
jnp
cwtl
out
aas
jno
aam
lret
mov
adc
fst
sub
lret
test
shlb
test
sbb
push
and
mov
and
jecxz
aaa
leave
or
pop
jmp
inc
cmp
and
xchg
xchg
andl
pop
sub
pushw
fwait
into
lret
mov
push
int3
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
mov
jbe
mov
mov
xor
xor
add
add
imul
mov
mov
mov
mov
add
movl
mov
movl
movl
mov
xor
add
jmp
mov
jmp
dec
push
dec
push
cmpsl
xor
movsl
maskmovq
imull
jle
mov
jle
lea
fcoml
sbb
das
cmpl
cmp
sar
mov
sbb
mov
xchg
cmp
mov
dec
dec
add
push
lahf
cmp
jge
clc
sbb
pop
cmp
adc
pop
call
dec
push
imul
lret
xchg
dec
out
popf
fcompl
or
sarl
or
xchg
and
or
mov
push
jecxz
sub
and
inc
cmc
ja
mov
rcr
aad
mov
movb
cmpsl
push
data16
mov
or
lds
scas
arpl
or
add
aas
sbb
arpl
lea
out
pop
cltd
pop
push
push
and
psllw
adc
bound
aaa
xor
or
pusha
les
add
in
add
orb
outsb
add
or
data16
xor
out
cltd
rcr
and
insl
mov
jmp
loope
loope
sbb
xlat
sarl
dec
mov
inc
clc
mov
mov
out
push
movsl
jne
xor
jb
fcmovnb
cmpsb
mov
or
cli
shlb
jge
into
subb
mov
mov
mov
fsub
out
dec
mov
add
xor
fs
xor
jno
aaa
movsl
dec
test
and
mov
lret
mov
in
mov
mov
mov
mov
jmp
andb
addw
fiaddl
jle
mov
jle
pop
shrb
clc
dec
xor
pop
mov
adc
out
es
dec
repz
dec
leave
push
mov
sub
sbb
mov
cmp
std
mov
dec
xor
movsb
cmp
daa
mov
xlat
or
fdiv
daa
scas
je
xor
sub
cltd
xchg
jecxz
push
hlt
dec
push
das
addr16
xor
fucomp
mov
or
push
push
mov
push
rep
or
dec
add
mov
aam
shl
outsb
sbbl
push
push
push
push
movsb
fst
jb
mov
fisubs
out
cmp
pop
daa
and
in
sub
add
pop
jb
nop
xchg
pop
int
nop
lods
movsl
or
xchg
outsl
ja
cmp
sub
mov
cmp
push
push
insl
cmpxchg
fs
and
aam
fwait
shrb
sbb
mov
lret
xor
sub
dec
repz
lea
jnp
sub
xor
xor
repnz
loopne
jne
xchg
ficoml
jnp
clc
insl
cmpsb
mov
shll
scas
imul
enter
out
dec
cmp
add
xchg
mov
repnz
lods
push
roll
loopne
data16
ja
jmp
jge
xlat
pop
dec
mov
rdtsc
xchg
shll
xchg
mov
mov
dec
jne
sub
int3
lods
mov
daa
rcr
test
pop
xorl
add
jmp
test
xor
push
mov
xor
popa
pop
sbb
jg
jle
outsl
add
and
fisubrl
dec
rcll
rol
inc
enter
sub
jns
jg
aaa
in
mov
ja
push
outsb
into
pop
xorb
icebp
jne
loopne
and
lea
cmc
jb
xor
xchg
fmuls
addl
sbb
add
add
ja
leave
pop
sahf
jle
out
ljmp
in
repnz
jp
jecxz,pn
movsb
test
jmp
sbb
add
dec
inc
dec
push
xchg
push
pushf
test
int3
hlt
mov
in
inc
push
out
sbb
leave
ret
rol
nop
fcmovb
mov
lret
fmuls
loop
xchg
xor
shrb
jge
rcrl
and
jmp
paddsw
push
sub
fwait
aam
rclb
jmp
jb
and
into
mov
or
add
mov
test
mov
push
inc
loopne
xchg
xlat
dec
ror
into
xchg
stos
fisubrs
cmp
fdiv
pushf
cwtl
call
dec
sub
sbb
data16
outsb
clc
jns
iret
orl
popl
jge
mov
adc
pop
sub
sub
pop
inc
imul
or
fs
sub
icebp
loopne
jns
pop
aad
jb
adc
insb
add
and
aad
lock
out
lret
dec
inc
in
mov
dec
sub
ja
mov
mov
mov
mov
mov
xor
add
jmp
in
push
adc
movsl
aas
push
insl
cmpsb
jge
cs
mov
jle
jmp
and
xor
pop
pushw
fidivs
mov
hlt
movsl
lcall
sbb
xchg
rcll
sbb
dec
cmp
rcrb
xor
dec
pop
je
pop
fmull
or
hlt
in
test
dec
or
lods
sahf
jne
add
bound
stos
enter
les
xchg
sub
jl
loop
ret
add
cltd
mov
mov
into
roll
xchg
inc
cmp
jp
call
ret
or
outsb
je
xchg
and
cvtps2pi
fisubrs
movsb
in
sarb
scas
mov
roll
ss
mov
daa
push
adc
fldenv
sub
add
fidivl
orl
shrl
and
int3
push
iret
ljmp
ficomps
inc
adc
sub
cmp
or
insl
shlb
jbe
frstor
pop
mov
imul
ja
inc
jl
add
adc
loop
testl
mov
mov
xor
push
movsb
sub
outsl
aaa
std
jle
push
cmp
pop
mov
fstl
pop
repz
bound
ficoms
jnp
adc
stos
add
push
mov
test
shll
call
push
fst
dec
pop
push
mov
pop
sti
jecxz
dec
je
test
pop
adc
inc
sub
std
inc
shrb
in
xchg
pop
popf
jb
add
call
in
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
xor
add
imul
mov
xor
sub
mov
mov
jmp
testl
xchg
and
xchg
roll
mov
jg
jle
addr16
push
mov
cmp
in
mov
jo
movsl
lret
iret
out
shll
mov
add
ja
shll
xor
mov
lea
lcall
outsb
loop
or
rolb
push
stos
mov
stos
mov
stc
sub
fxch
in
insb
push
dec
adc
sub
nop
or
push
fmul
shr
push
lahf
push
aam
adc
insb
or
adc
mov
and
dec
cltd
xor
outsb
push
pushf
sahf
insb
push
xchg
pop
add
xlat
lahf
dec
leave
lods
cld
enter
and
inc
sbb
push
mov
mov
cmp
and
mov
jbe
xor
dec
cmp
lcall
loope
jns
leave
push
adc
vaddsubps
repnz
test
pop
jae
ds
sub
mov
sahf
sbb
aam
outsl
mov
loope
xorb
and
pop
jo
ret
add
mov
fdiv
sbb
cs
or
sub
pop
test
inc
xlat
or
mov
pusha
cmp
inc
cli
mov
and
add
mov
inc
inc
jp
or
dec
stos
mov
xchg
bound
inc
lcall
push
fsts
add
mov
sbb
pmulhw
jl
or
mov
push
rcrl
ror
push
fwait
les
cmp
sbb
repz
push
sbb
ret
mov
clc
add
imul
jmp
mov
jns
dec
mov
xchg
enter
mov
jle
mov
or
outsl
xor
jb
ret
lret
fs
xchg
cmp
cmp
cld
cwtl
lret
ds
adc
cmpl
aas
sbb
pop
arpl
sbb
andl
inc
icebp
sbb
jns
xor
aaa
mov
test
sbb
jmp
adc
icebp
sub
ss
ficoml
cltd
addr16
xor
adc
lods
push
pop
loope
cmp
pop
or
or
stos
xor
cmp
outsb
fimull
fwait
and
jge
cmp
push
sub
mov
xlat
mov
dec
out
cltd
or
ror
xor
leave
sbb
lret
jb
xchg
dec
loopne
lods
sub
aam
xchg
push
test
sbb
clc
jae
cmc
sarl
mov
fwait
xor
aaa
leave
mov
and
out
mov
xchg
mov
add
stos
mov
lods
xor
sub
lods
hlt
repnz
mov
fmul
mov
cmp
nop
dec
js
call
inc
cwtl
inc
sti
arpl
roll
cld
jle
cmp
lahf
xchg
scas
imul
sub
pop
sub
je
push
lret
mov
and
aam
mov
sti
stos
out
adc
mov
jns
aad
iret
cwtl
push
sbb
mov
imul
jae
sub
cmp
shll
pop
call
lea
cmp
jbe
mov
mov
xor
add
jmp
pop
mov
sbb
or
dec
ja
xor
jle
mov
jle
icebp
add
xor
xor
scas
jo
test
pop
nop
pop
inc
insb
or
outsl
push
pop
imul
dec
mov
lret
lods
loope
cmp
pop
flds
pop
fistl
call
push
in
into
jnp
pop
and
int3
repnz
push
insb
adc
xchg
mov
aad
ja
icebp
repnz
xor
cmpsb
stos
mov
push
mov
fstps
sbb
notb
test
xchg
sbb
xchg
mov
outsb
int
xlat
sbb
cmpsb
sbb
sbb
jo
push
pop
ljmp
xchg
gs
rcl
xchg
mov
cmp
ss
sbb
adc
xor
hlt
push
mov
sbb
enter
movsb
mov
pop
test
fldl
xchg
fsubl
sub
xchg
mov
push
add
inc
insl
fbstp
sub
push
sarb
jecxz
ss
lret
daa
jae
out
and
adc
loop
push
shrl
nop
int
jmp
mov
push
xor
sbb
adc
div
jl
xor
dec
inc
lea
jbe
sbb
rcr
xchg
inc
les
std
xor
sub
ljmp
xor
dec
fld
fmul
mov
rcrl
lea
and
fimull
aad
scas
dec
loope
loop
jp
push
enter
xor
add
mov
data16
scas
xlat
mov
xor
add
mov
lea
mov
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
pop
pop
leave
ret
push
mov
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
pushl
push
pushl
push
call
cmpl
jne
mov
inc
mov
jmp
mov
xor
add
sub
or
push
or
mov
sbb
mov
movzbl
add
movl
andl
mov
inc
mov
cmpl
jne
pushl
push
call
cmpl
jb
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
push
mov
xor
mov
push
mov
add
jmp
sub
in
cmpsl
insl
ret
mov
and
and
jle
jno
jle
popf
xor
sub
mov
sbb
hlt
ss
mov
push
cld
lds
xchg
out
arpl
pop
test
ds
adc
int3
dec
add
test
sbb
adc
insl
jo
inc
sbb
enter
sub
insl
cmp
pop
mov
shrl
sub
cmp
mov
mov
pop
loope
ret
es
mov
lods
and
das
mov
aaa
ds
xor
and
enter
rcrl
cmp
mov
negl
iret
lods
ljmp
cmpsl
lahf
jmp
test
dec
out
xor
xor
cmpsl
cmp
imul
dec
push
adc
dec
cmp
movsl
cmp
daa
insl
mov
ds
ja
jno
mov
insb
dec
loope
repz
sbb
ljmp
inc
mov
xlat
xchg
lretw
jns
loop
mov
out
adc
mov
clc
dec
clc
push
popa
add
push
sbb
test
stos
lret
pop
push
sti
adc
sarl
xchg
ja
cmp
jg
dec
push
and
xor
add
jno
pop
shl
les
xor
push
ja
and
xor
mov
pop
movsb
movl
adcl
bound
lcall
mov
ret
push
jmp
push
adcb
push
sub
mov
push
and
inc
jecxz
xor
bswap
cmp
mov
xacquire
mov
imul
or
leave
popa
push
clc
cmp
push
scas
das
sub
mov
or
mov
out
and
gs
lret
jge
inc
addr16
sbb
cmp
jnp
outsb
sub
icebp
pop
pushf
fs
cwtl
mov
and
lret
filds
mov
rclb
nop
mov
push
out
mov
cmc
je
out
xor
jp
push
or
fmuls
mov
lahf
mov
fcomps
sahf
push
loopne
mov
dec
xchg
lods
lea
shl
mov
sub
push
xlat
jo
pusha
add
popl
decb
fwait
push
sbb
xor
dec
gs
pop
mov
prefetch
or
mov
into
push
xor
iret
jnp
int
cli
out
xchg
mov
int
jp
shl
xor
jge
inc
jb
lods
fsubrs
xchg
fiadds
lret
mov
jae
xchg
mov
pop
sbb
js
mov
add
xor
in
outsb
mov
or
jae
add
mov
pop
es
sbb
sbb
xor
int
mov
aad
sub
popa
fimuls
add
shrb
jnp
jge
dec
lahf
add
push
nop
out
sbb
push
pop
mov
adc
cmp
and
push
and
cmp
ljmp
popl
gs
lods
stos
sbb
mov
lods
pusha
cmp
popa
mov
mov
or
xor
mov
imull
movsl
insl
push
aad
mov
add
and
mov
inc
jecxz
mov
and
pushf
enter
inc
xchg
mov
dec
jbe,pt
mov
into
add
dec
and
sbb
jne
sbb
rorl
fwait
jno
cmp
je
mov
mov
xor
mov
jmp
cmpsb
loop
fmuls
jge
xor
inc
adc
jle
mov
xor
inc
subb
aad
or
insb
dec
jmp
sbb
xor
or
xchg
out
sahf
out
sti
shll
pop
idiv
push
cmp
inc
dec
shlb
adc
test
fwait
lret
adc
ficoml
mov
clc
fiadds
mov
loop
adc
mov
inc
js
fistpl
movsb
lret
cmp
ds
add
mov
inc
stc
cltd
pusha
cmp
lret
jge
or
or
bound
xor
mov
stc
push
ja
mov
enter
sub
jo
xchg
adc
mov
std
loope
stc
inc
mov
shll
xor
sub
fldcw
xor
loope
jb
mov
mov
and
shlb
imulb
xchg
lret
or
jae
mov
mov
mov
cmpsl
jno
pop
leave
les
pop
je
mov
xchg
or
push
lock
jg
fldcw
std
cmp
add
mov
leave
mov
stos
lahf
cmp
inc
cmpsl
lods
mov
hlt
adc
int3
in
cmp
outsb
cs
push
push
mov
ja
scas
stos
inc
or
jno
jno
fisubrl
cld
jmp
push
stos
push
out
nop
dec
stos
mov
inc
pop
into
mov
mov
mov
inc
lret
sarl
aam
mov
sub
in
pop
in
fwait
adc
cmp
sbb
jmp
xor
ret
sbbl
pop
pop
out
ret
jb
jmp
xchg
add
mov
loop
loopne
fistpl
bswap
adc
push
push
out
int
bound
adc
daa
cmc
cmpl
cmp
pop
sti
out
inc
pop
cs
aas
or
inc
push
sarb
sub
pushf
test
xorb
fwait
out
fsubrs
ret
lahf
pop
mov
cmp
dec
sti
mov
and
or
and
ud1
push
add
outsb
mov
scas
sbb
rol
aad
cmp
scas
xchg
push
out
dec
pop
mov
jns
arpl
xchg
dec
scas
sub
mov
pusha
push
mov
push
movsl
decb
imul
push
pop
cmp
cmpsl
fisubs
dec
jge
lret
lods
sbb
adcb
stos
mov
int
out
add
iret
sub
jb
xor
or
cmc
mov
popa
adc
jge
mov
push
jmp
and
pop
add
pop
cmp
jmp
stos
xor
decb
sbb
outsb
and
and
lret
mov
jmp
call
shlb
psllq
cmp
adc
movsb
lret
hlt
add
nop
and
rorb
inc
dec
adc
pop
cmp
or
xchg
sbb
xor
addb
inc
pop
adc
enter
out
or
xchg
dec
pop
repz
sbb
test
pop
push
mov
iret
pop
pop
and
int
ficoms
test
mov
dec
jno
mov
mov
pop
test
pusha
out
mov
stos
fisubs
and
sub
aad
sbb
lret
mov
lea
pop
movsl
xchg
scas
fsubl
xor
xchg
xchg
mov
sub
add
xor
add
cmp
ja
push
jmp
mov
mov
mov
xor
jmp
testl
arpl
push
cmp
mov
inc
mov
adc
aad
mov
iret
mov
xchg
sub
lahf
add
jecxz
std
test
cli
in
in
js
mov
adc
cmpsl
and
movsb
mov
lods
shll
mov
jle
push
call
subl
and
push
sub
xor
push
lret
add
xchg
mov
pop
sub
xchg
pop
hlt
jmp
or
out
xchg
rclb
push
xchg
pop
shl
je
int
xlat
mov
xchg
rorl
add
push
fstl
dec
dec
adc
inc
hlt
xor
fistpl
iret
lcall
out
jns
jne
inc
mov
in
fdivl
xchg
lret
sti
stos
xorl
fs
mov
pop
into
jg
stc
push
hlt
bound
adcb
or
ret
push
outsb
adc
pushf
dec
dec
outsl
jne
mov
sub
shrl
or
xchg
or
dec
pop
pusha
mull
mov
mov
jmp
xor
xor
push
push
ss
ss
inc
jmp
dec
xchg
push
adc
fisubl
ret
out
push
pop
rcll
aad
out
sub
ror
movsb
xchg
push
imul
jmp
fcoml
push
inc
dec
or
arpl
pop
aaa
arpl
pushf
jp
stos
mov
push
xor
inc
dec
xor
mov
fld
fbstp
dec
hlt
test
dec
fiadds
orb
sub
or
movsl
jecxz
popl
dec
jmp
arpl
add
mov
mul
scas
insl
repz
sti
enter
addr16
dec
adc
cmp
and
pushf
inc
mov
es
stos
sbb
dec
cli
outsl
es
pop
jle
cs
lahf
imul
lcall
xor
push
out
jnp
push
add
insl
aaa
push
in
arpl
sbb
imul
jl
aas
fwait
dec
push
je
add
push
or
xchg
cmpsl
cmp
mov
jbe,pn
sbb
add
dec
jbe
and
and
mov
ljmp
testb
xlat
dec
or
lods
test
and
jno
or
sbb
andl
add
scas
cwtl
pop
es
pop
repnz
arpl
push
mov
xor
inc
fnsave
dec
in
fcmove
push
sub
cmp
les
add
or
inc
std
outsl
sbb
repnz
xchg
insb
sbb
mov
xchg
adc
enter
popf
cwtl
hlt
mov
stos
mov
aas
mov
iret
sbb
hlt
fnstcw
leave
inc
pop
xchg
pop
sbb
shlb
mov
mov
xor
mull
jmp
push
xlat
faddp
ljmp
sub
mov
ret
fucompp
mov
or
imul
adc
lret
pop
es
sbb
sub
ret
mov
push
mov
lcall
jecxz
addr16
inc
push
jns
out
test
xchg
or
ror
scas
mov
push
lcall
gs
adc
iret
dec
mov
lods
hlt
mov
ret
dec
test
les
cmp
dec
ss
jecxz
orl
ds
test
addr16
jne
in
dec
jbe
dec
lods
pop
movsb
jne
and
pop
in
ss
inc
sbb
imul
scas
and
cli
shl
inc
add
mov
imul
mov
xor
add
mov
mov
mov
xor
lea
mov
xor
mov
sub
add
cmp
jmp
fdiv
es
jge
jge
jae
dec
pusha
sbb
lahf
aas
jle
mov
arpl
xchg
jp
dec
dec
out
mov
mov
add
rorl
or
or
sbb
mov
fadds
nop
jbe
mov
and
mov
cld
push
pop
xor
mov
fistpl
and
xor
iret
mov
ret
add
add
sbb
cmp
sub
jl
mov
jp
scas
jg
test
jge
pop
rcll
rcll
pop
sub
mov
sbb
pop
stos
sar
or
mov
cmp
mov
sbb
mov
arpl
dec
cmp
pop
das
sub
or
ror
pop
push
pop
negb
xchg
shll
or
fstl
and
js
xor
loopne
xchg
mov
sarb
pop
mov
fcompl
enter
cmpsl
sti
cmp
bnd
je
jl
or
jmp
pusha
nop
les
inc
pop
xor
xlat
jne
jmp
inc
mov
or
dec
pop
cmp
mov
pop
loop
sbb
arpl
movl
stos
mov
jge
cli
insb
outsb
fst
jle
pop
insl
sub
movsb
adc
arpl
test
sbb
imul
inc
xor
mov
cmp
sub
leave
and
inc
ja
int
push
int3
in
sahf
je
xor
inc
add
imul
jp
mov
mov
jo
push
popf
adc
xchg
jecxz
push
add
movsb
gs
push
cmp
jecxz
push
sub
imull
xchg
int
mov
ror
pop
dec
insl
aam
pop
pmaxub
mov
popa
cmpsb
mov
call
dec
xor
shrl
popa
in
cmp
push
jle
mov
xlat
cwtl
hlt
mov
and
dec
movsl
rorl
scas
js
movsb
mov
fimull
daa
dec
mov
fldl2t
dec
lahf
xchg
mov
mov
aaa
mov
jbe
outsl
mov
nop
ljmp
xchg
test
dec
stc
and
test
or
popa
mov
cmc
xchg
cmpsb
adc
rcrb
and
lock
add
xor
adc
mov
sub
xchg
dec
out
or
inc
inc
sub
cltd
sahf
add
mov
lds
jge
xchg
mov
dec
adc
lods
repnz
dec
aad
jae
jmp
scas
jl
or
addl
sbb
mov
imul
repnz
ds
add
scas
push
aad
sub
scas
in
in
fildl
shl
push
jmp
pop
push
mov
subl
and
int3
dec
and
push
mov
cmp
dec
shll
hlt
push
das
out
out
xor
xlat
sub
iret
fcmovbe
sbb
mov
bound
jno
mov
or
cs
cmp
cmp
adc
imul
lods
and
or
stos
and
mov
shrl
aam
or
sbb
pop
cmp
pop
mov
cmp
sub
dec
adc
lea
mov
xor
adc
movb
jne
lcall
and
pop
xlat
dec
cmp
sbbb
fwait
cmc
mov
lcall
xor
leave
ret
push
mov
mov
add
mov
xor
sub
incl
mov
push
sbbl
mov
xor
movl
cmp
movl
je
mov
decl
jmp
fcmovnb
dec
filds
jnp
cmp
fidivs
jle
jmp
jle
mov
mov
sahf
pop
clc
test
flds
test
sti
shr
pop
mov
in
lock
fsubr
inc
dec
xor
xchg
and
add
jo
jo
push
jmp
incb
push
inc
and
sbb
inc
pop
cmp
in
inc
mov
mov
shlb
sbb
push
arpl
dec
fwait
add
adc
lcall
inc
pop
pop
ss
rorb
mov
jae
xchg
imul
leave
xchg
mov
ret
add
add
push
dec
dec
mov
xchg
bound
popa
or
mov
fildll
xlat
test
cmpsl
in
or
sub
cmp
data16
cmc
fwait
add
cmp
add
and
icebp
mov
mov
andb
stos
stc
js
in
mov
mov
sbb
push
push
mov
cmp
out
add
cli
jb
lret
cmp
enter
mov
mov
xor
mov
sbb
pop
jo
or
mov
add
in
notl
pop
pop
testl
fwait
loope
inc
pop
mov
adc
ds
fldz
lds
lret
jg
sbb
lea
jae
je
pop
ss
mov
dec
inc
subb
sbb
pop
out
jne
dec
in
ja
scas
scas
mov
das
or
push
xchg
pop
adc
lock
mov
xor
push
subl
push
xor
mov
xor
stc
rorl
adc
add
push
and
jg
mov
imul
mov
mov
sub
inc
jecxz
hlt
or
pop
ret
pop
out
fstpl
insb
pop
int
out
popf
js
and
shll
lahf
ret
or
sub
neg
inc
jbe
jmp
sbb
and
loope
adc
pop
push
jp
mov
add
xchg
movsl
mov
mov
mov
adc
mov
sbb
aam
mov
jns
sub
adc
push
mov
push
push
dec
bound
pop
jmp
sahf
push
inc
add
add
push
jno
fildll
scas
fiadds
lods
popf
cmc
mov
xor
mov
mov
sbb
or
xor
ljmp
js
push
aas
push
dec
sub
bnd
into
push
imul
jmp
roll
pop
stc
adcl
arpl
mov
inc
lods
jns
or
add
cmc
fucomp
push
mov
aaa
mov
pop
pop
inc
or
xor
imul
xchg
adc
add
leave
dec
sbb
leave
outsl
adc
pop
pop
sub
adc
mov
dec
or
hlt
mov
dec
out
gs
xor
and
pop
out
adc
push
inc
loopne
andb
mov
push
jb
or
mov
sbbl
sub
xor
movl
cmp
movl
jne
add
mov
add
movl
jmp
mov
xorl
xor
add
movl
jmp
xchg
fcmove
pop
fstpl
dec
inc
sub
dec
ss
jmp
jle
sbb
jo
loop
add
aaa
push
jo
ds
push
inc
mov
cmp
mov
jae
mov
xor
pop
hlt
movb
sbb
pop
push
lock
xor
fsts
sub
out
mov
push
cmp
xchg
cs
xchg
outsl
xchg
repz
fldl
cmpsb
idivl
jl
mov
xchg
lods
jnp
loopne
aad
xchg
push
out
mov
xchg
push
pop
mov
fadd
addr16
aam
sub
xlat
leave
and
mull
dec
shll
xor
mov
and
clc
sub
in
mov
pop
mov
lahf
and
ljmp
rolb
jl
add
add
subl
scas
mov
mov
mov
push
or
mov
fisubl
aam
movsl
stc
cli
xlat
test
pop
cmpsl
fs
xchg
imul
fisubrl
fisttpl
rcrl
aam
icebp
aaa
mov
fmuls
ss
and
outsb
movups
pop
jmp
es
dec
in
rorl
pop
ficomps
sbb
sahf
out
jnp
mov
push
imul
push
lret
pop
sbb
insl
enter
pop
icebp
mov
cli
mov
push
mov
xor
loopne
xchg
ljmp
inc
mov
pop
push
imul
arpl
ljmp
cmpsl
mov
mov
cmc
fstpl
aam
mov
addb
lret
jecxz
sbb
dec
add
ljmp
test
dec
xlat
xchg
mov
xchg
loopne
shl
push
aam
sbb
bound
imul
push
mov
iret
xor
adc
inc
imul
aad
adc
loope
hlt
lcall
and
mov
adc
nop
add
add
inc
jmp
jle
mov
or
loope
push
adc
arpl
int3
mov
popf
ljmp
push
lahf
or
push
mov
fs
loop
and
imul
out
inc
push
xor
shrb
jbe
outsb
mov
and
mov
sbbb
cs
pop
ljmp
in
negb
xchg
scas
rorl
pop
testb
aas
inc
dec
inc
aaa
movb
cmpsb
xchg
adc
dec
bound
les
mov
jne
cs
les
xchg
dec
cmp
cld
in
scas
adc
andl
dec
push
test
sbb
jbe
lock
xchg
or
outsw
and
inc
push
sub
bound
fstl
mov
pop
jno
cmp
imul
add
daa
scas
xchg
mov
mov
fwait
nop
pop
aaa
ficoml
sti
pop
xchg
pop
or
insb
sbb
stos
stos
mov
dec
outsl
hlt
shll
fcompl
dec
stos
std
lods
stc
add
addl
jbe
or
xorb
roll
pop
out
mov
inc
mov
imull
in
in
mov
dec
jle
add
pop
cltd
mov
push
mov
mov
iret
sbb
xchg
rcrl
inc
add
jmp
repz
inc
or
pop
inc
and
sub
stos
pop
xchg
add
lret
jmp
jle
xor
mov
cmpsb
fmul
mulb
decl
sub
xor
pop
stos
or
sbb
rcl
in
mov
aam
push
pusha
enter
es
sbb
mov
jmp
jno
sarl
lcall
pushf
and
clc
mov
mov
pop
out
cmp
idiv
xchg
mov
jl
shl
in
or
mov
xchg
lret
imul
shr
rclb
xlat
jl
or
lea
loopne
xchg
or
fldt
enter
sub
sub
enter
sbb
pop
pop
adc
icebp
cmp
ret
sti
sahf
adc
fcoml
imul
xchg
mov
or
xor
push
ss
xor
loope
subl
sti
adc
cwtl
jle
clc
cmpsb
out
cmp
xchg
and
ret
and
test
jp,pt
adc
adc
scas
xchg
mov
cmc
inc
outsb
out
lahf
cmp
xor
jle
inc
stos
cmpl
xor
inc
mov
imul
sub
dec
gs
pop
pop
dec
mov
insb
xlat
inc
lea
pop
cmpsb
cmpsl
xor
rcrl
sub
cbtw
cmp
in
adcl
push
jge
bound
xchg
pop
push
roll
push
push
dec
adc
mov
imul
sbb
into
pop
jb
dec
nop
pusha
inc
stos
push
mov
insb
push
xchg
stc
dec
or
xchg
jg
xchg
fsubrl
or
and
sbb
mov
imul
test
push
add
add
cmp
inc
or
push
ja
cmp
mov
imul
pop
xchg
add
jl
add
test
gs
ret
and
and
ss
dec
adc
fmul
les
ret
je
out
sub
add
ja
es
inc
pop
push
ret
out
add
std
icebp
sbb
pop
aad
cltd
push
jge
test
sbb
sub
lahf
xlat
in
mov
dec
jecxz
mov
dec
mov
stc
shll
and
cld
xchg
test
and
push
nop
mov
cltd
out
push
aaa
loope
push
orl
sub
sahf
push
add
mov
mov
sbb
adc
or
jmp
in
inc
push
xlat
gs
mov
lret
jne
adc
push
jp
fwait
rol
addr16
mov
add
ret
jnp
sti
mov
push
outsb
pop
das
mov
push
das
mov
inc
jl
mov
pop
aaa
pushf
mov
dec
xor
sub
inc
shl
xchg
enter
sar
fsubr
ljmp
jae
sbb
or
pop
cwtl
jp
inc
stos
fstl
mov
popf
sub
stos
adc
xor
lods
mov
add
test
push
mov
stos
in
cmp
adc
mov
sub
movsb
loope
mov
pop
in
adc
push
insb
xor
stos
shlb
inc
gs
cmp
ret
and
jmp
mov
mov
mov
mov
mov
add
pop
pop
ret
push
mov
sub
movl
cmpl
je
cmpl
jne
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
mov
xor
sbb
mov
xorl
add
addl
movzwl
mov
xor
movb
lea
andl
xor
or
inc
mov
cmpl
jne
push
pushl
pushl
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
sub
mov
adc
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
push
call
jmp
mov
xor
sub
negl
mov
movl
cmpl
je
cmpl
jne
push
push
call
xor
xor
dec
mov
jmp
movl
add
movl
jmp
rclb
cmpsb
js
pop
mov
xchg
int
jle
jg
jle
pop
data16
gs
and
out
dec
and
jbe
cmp
out
filds
aaa
pop
ret
sub
divl
push
cltd
sub
jmp
jnp
pop
insb
imul
sbb
fimuls
popf
dec
add
cmpsb
scas
lea
pop
imul
adc
fnstsw
repz
dec
aaa
add
mov
sbb
xor
mul
nop
sub
je
adc
pop
fadds
or
imul
xchg
mov
xchg
ss
mov
rcl
orb
js
or
and
or
rcl
mov
rolb
sub
sbb
jo
mov
xchg
das
or
fstp
mov
sahf
dec
jne
mov
pushf
mov
pop
popa
or
out
int
adc
pop
jecxz
out
add
push
mov
jo
adc
add
in
cmpsb
test
xor
xchg
inc
push
lods
gs
add
sbb
sbbb
xor
sub
dec
push
dec
sbb
shrb
pusha
cmpb
jmp
xor
les
movsb
mov
rcl
sub
daa
push
mov
and
mov
push
mov
sub
xor
mov
subl
add
jmp
mov
mov
movl
inc
jmp
mov
jbe
pushf
pop
dec
fsubs
aad
sub
iret
jle
sarb
jle
inc
and
iret
repz
fiaddl
rcrb
jle
mov
lret
cmpb
in
test
je
xchg
mov
lock
nop
sbb
aam
xchg
mov
ret
insl
in
pusha
sub
cmp
stos
xchg
mov
dec
sbb
push
push
mov
test
mov
fcompl
xchg
in
pop
jbe
xchg
or
test
outsb
stos
test
xchg
shl
mov
mov
das
mov
lods
push
lret
das
and
dec
xlat
dec
push
jnp
sti
cwtl
ficoms
inc
add
xlat
dec
inc
adc
lods
outsb
test
test
pop
iret
lds
and
jp
dec
or
leave
pop
movb
cld
shr
clc
dec
int3
lock
ljmp
movsb
and
push
into
popf
push
nop
inc
ljmpw
out
jge
vpaddusw
loopne
push
or
sbbl
movsb
in
lcall
imul
cmp
mov
inc
jp
pushf
jmp
jmp
cmp
sahf
inc
xor
lret
push
inc
pop
sbb
sbb
lahf
movsl
mov
int
clc
out
in
mov
push
sub
les
fwait
xchg
fistps
rorb
sbb
or
mov
mov
shrb
ret
js
cmp
jb
mov
mov
xor
add
cmp
je
push
push
jmp
insb
lds
cmpb
xchg
or
jle
sarb
jle
cmp
ret
mov
cmc
roll
push
scas
dec
repz
nop
mov
xor
setns
xchg
add
jp
adc
and
iret
pop
aaa
pop
mov
inc
xchg
fldt
xchg
cmc
jb
mov
xchg
jge
jbe
repz
push
sub
outsl
dec
xchg
pop
lret
fisubs
dec
clc
xor
imul
ret
adc
mov
adc
je
das
in
and
mov
and
daa
ret
cli
sbb
xchg
ja
adc
mov
or
mov
mov
movsl
fimull
cmp
fidivrs
push
adc
sbb
cmc
xchg
imul
push
jl
fimuls
xchg
arpl
push
pop
mov
cmp
cs
pop
push
test
jns
in
addr16
mov
ljmp
int
into
mov
decl
xlat
jl
ds
test
mov
prefetch
xchg
jp
mov
aad
pop
in
jo
shll
sbb
jno
scas
loopne
cltd
fidivrl
scas
divl
lods
jg
sahf
jg
jecxz
sub
call
xchg
xor
test
dec
daa
ret
test
jge
inc
cld
xor
fcmove
stos
xchg
out
pop
imul
test
add
xor
mov
jl
add
jae
cmp
cli
vpaddw
incl
dec
sub
inc
sarl
jg
jle
mov
into
popa
mov
ss
sahf
out
mull
sub
enter
jb
push
imul
outsb
insl
loopne
mov
dec
fs
lds
ret
push
je
in
ficompl
xchg
pop
push
repnz
imul
sbb
jnp
int3
leave
pop
loopne
pop
nop
mov
popf
inc
xorl
repnz
cmpsl
or
sub
fadd
dec
and
repz
cmp
mov
mov
cmc
sahf
push
ss
fs
pop
and
bound
dec
ss
mov
adc
pop
add
jg
jo
cmp
push
enter
imul
cmp
jmp
rcll
sub
cltd
sbb
setnp
push
mov
call
xor
sub
in
int
popa
daa
in
and
sbbb
stos
cmc
push
pop
xor
js
push
in
push
inc
jbe
push
cmp
inc
mov
jae,pt
outsl
shll
out
and
xor
add
insl
shrl
xchg
xor
jne
mov
popf
inc
cmpsb
jne
add
out
inc
add
or
xchg
arpl
aam
mov
fimuls
dec
mov
pop
jecxz
jg
add
and
jle
inc
inc
add
mov
xor
mov
add
jmp
push
fsubs
pop
xchg
push
test
jle
sarb
jle
leave
jmp
pop
jl
or
test
in
je
mov
mov
scas
inc
or
mov
pop
xchg
inc
fmull
xor
adc
push
stc
or
push
adc
pop
pop
mov
pusha
fcmovne
stc
lock
xor
daa
addr16
jge
xor
mov
push
hlt
dec
pushf
cwtl
aaa
aaa
jmp
cltd
int3
jmp
xchg
dec
in
and
call
stos
dec
sub
in
inc
push
dec
dec
mov
les
sub
push
xchg
mov
inc
fstpt
cmp
mov
add
sub
mov
decb
sbb
pop
xor
mov
fiaddl
sub
adc
jge
roll
test
and
test
cmc
cmp
leave
xor
mov
and
cld
movsl
adc
sbb
out
cmc
notb
sub
push
mov
aaa
shlb
adc
mov
dec
xor
sub
jnp
fidivs
bound
imul
mov
test
inc
fnsave
adc
lds
sub
lcall
pop
stos
movsb
mov
int
mov
jo
stc
mov
mov
jmp
xchg
sbb
cmp
inc
push
cwtl
pop
dec
imul
sarb
jle
pop
dec
xor
push
in
fisubl
cmc
shrb
test
xchg
divl
jp
mov
or
xchg
xor
in
out
mov
outsb
scas
pop
xor
xor
inc
hlt
xchg
ret
xlat
js
dec
jns
ss
into
out
xchg
fiadds
fstl
mov
stos
in
dec
dec
idivb
sbb
mov
pushf
sti
jl
add
bound
mov
hlt
call
and
jle
and
inc
mov
jb
adc
addb
jb
mov
fsubrp
dec
push
fidivs
pop
push
sbb
movsb
mov
gs
inc
aaa
cld
cltd
lea
mov
push
sbb
imulb
sbb
arpl
mov
aam
mov
cltd
dec
in
mov
pusha
adc
int
xchg
jae
sbb
in
sbb
inc
lock
shlb
push
xchg
enter
fcompl
scas
lods
push
out
out
test
pop
sub
cmp
xchg
dec
mov
pop
repnz
out
out
scas
fsubrp
rcll
popa
xchg
pop
jb
lcall
or
pop
xor
imul
subb
mov
movzwl
xor
add
mov
mov
mov
inc
cmp
jne
pop
pop
jmp
fistpll
aas
or
or
jmp
jle
dec
jle
jle
jge
jle
sarb
jle
sbb
xchg
jns
stos
outsl
aad
shrb
pop
push
mov
xor
jo
repz
push
dec
cmpsl
push
jmp
lahf
iret
or
sub
and
movsb
push
repz
adc
sti
dec
mov
and
je
insl
cs
push
pushf
and
jmp
jl
mov
aam
xor
sbb
and
push
imul
sbb
mov
jmp
ss
je
push
push
mov
dec
add
and
sbb
imul
fwait
lods
scas
in
cltd
or
or
sbb
xchg
rclb
dec
mov
mov
addl
adc
cs
in
push
enter
add
xor
pop
sub
sbb
out
or
jp
outsl
adc
jmp
in
sbb
imul
lds
fcom
sbb
mov
out
cmpsb
stc
aas
sarb
dec
fisubs
dec
mov
aam
cltd
movsl
adc
jae
movsb
xor
mov
jae
hlt
dec
and
pop
xlat
pop
pop
mov
sub
sbb
push
push
xchg
test
cli
xor
xchg
sbb
adc
mov
sti
xchg
stc
xor
mov
xchg
lds
push
cmpsl
push
mov
mov
xor
add
mov
mov
xor
add
jmp
mov
rorl
dec
rorl
cmpsl
and
jle
sarb
jle
mov
adc
adc
loope
aaa
ja
cmc
or
xor
cmp
sbb
dec
jl
mov
cmc
or
mov
repz
push
testb
aaa
jecxz
push
fld
push
add
aad
lret
pop
add
in
repz
in
pop
cmp
aad
add
pop
cmpsl
inc
mov
xlat
leave
jmp
sub
mov
sub
inc
ja
push
jmp
xor
bound
mov
push
rol
push
or
and
test
cli
aaa
adc
daa
xchg
sbb
add
add
push
arpl
jnp
test
or
ljmp
sub
pop
mov
sbb
adc
mov
xchg
out
xor
imul
dec
sub
pusha
int
adc
xchg
inc
cmc
lock
mov
inc
mov
ficoms
aaa
pop
nop
push
mov
pop
or
mov
and
pop
and
dec
adc
jb
push
clc
inc
jge
adc
test
loopne
add
fldenv
sarl
jne
rcrb
out
or
jl
pop
jnp
lds
push
loop
fildl
iret
fwait
int
jle
iret
sarb
mov
mov
mov
cmp
je
mov
mov
mov
cmp
jne
mov
mov
movsbl
xor
add
cmp
je
movl
lea
jmp
xchg
mov
or
mov
mov
int3
dec
es
jle
sarb
jle
add
add
mov
mov
sarb
pop
jns
pusha
push
adc
rcll
push
cli
xor
xchg
or
xor
pop
shlb
daa
loop
adc
push
stos
cmp
sub
inc
roll
rorb
out
clc
fwait
test
mov
adc
cltd
add
push
lret
jg
cmp
test
outsl
adc
mov
cmp
inc
int
es
int3
pop
mov
test
aam
mov
or
jle
jp
inc
push
in
mov
fwait
jl
idivl
scas
mov
ret
in
push
mov
mov
mov
or
shll
daa
mov
jne
mov
daa
outsb
push
jne
inc
bound
ja
movaps
push
cli
dec
or
jle
sahf
mov
sahf
arpl
jno
add
fs
sbb
mov
mov
push
mov
nop
inc
cs
push
pop
add
stos
dec
inc
popa
pop
and
cmp
cmpsb
das
ret
inc
int3
iret
push
mov
scas
lret
ds
sbb
lret
xor
xor
sub
test
ds
sbb
ret
sarl
sbbl
in
addl
jmp
test
cmp
jge
xor
imul
sarb
jle
mov
aas
push
shrb
sbb
or
punpckhdq
je
add
les
nop
adc
inc
mov
pop
aas
xor
xchg
adcb
inc
les
mov
or
outsl
out
stc
inc
hlt
mov
mov
es
and
pop
cs
in
add
mov
cmp
cmpsl
ss
arpl
mov
lret
sub
test
movd
imul
in
bnd
sub
sub
or
xchg
popa
mov
int3
add
and
inc
adc
xor
push
mov
mov
sub
shll
clc
sti
cltd
add
pushf
inc
outsl
mov
push
mov
addb
fcmovb
jle
arpl
fdivr
rcrb
push
stos
push
pusha
int3
mov
gs
lret
addr16
xchg
cmc
mov
cmc
mov
js
cmp
loopne
cld
in
outsl
in
xorl
add
jae
sbb
dec
push
mov
xchg
inc
cmpsb
cwtl
shl
in
fs
dec
enter
jae
shl
dec
popa
ljmp
jp
bound
leave
jno
in
mov
test
push
push
lahf
in
imul
add
sbb
add
mov
xor
jmp
dec
sbb
fstpl
inc
inc
jmp
mov
jg
jle
ret
rcrl
mov
push
or
adc
repnz
fs
scas
in
mov
popa
popa
call
es
push
hlt
sbb
inc
push
movsl
nop
mov
jnp
add
cwtl
push
addr16
popa
mov
in
push
lret
mov
popa
mov
sbb
inc
fdiv
cld
mov
add
pop
cmpsl
sti
jecxz
xor
ret
sbb
mov
and
add
sti
and
dec
outsb
xchg
or
test
stos
push
sub
add
cmp
sbb
lods
sub
adc
push
pop
loope
filds
lods
not
bound
je
push
mov
stos
enter
test
stos
dec
daa
test
push
mov
pop
add
pop
push
dec
xor
push
dec
outsl
insl
aam
dec
inc
movsb
mov
xchg
or
repnz
cs
fiadds
push
xchg
dec
mov
inc
pop
ja
nop
rcrl
jnp
adc
mov
ret
jns
fldcw
and
mov
fisubrl
rcr
add
cmpsl
sar
pop
std
scas
sbb
and
mov
jle
xor
pop
sbb
mov
xchg
out
jne
adc
xor
subb
pop
adc
inc
ror
lea
mov
incl
jmp
mov
xor
mov
add
mov
pop
leave
ret
push
mov
push
movl
neg
mov
movzwl
adc
mov
mov
subl
xor
add
adcl
mov
mov
adc
xor
or
push
movzbl
or
mov
adcl
mov
add
mov
xor
mov
mov
mov
or
mov
dec
mov
sbbl
mov
mov
adc
mov
orl
mov
adc
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
pushl
pushl
pushl
push
call
cmpl
jb
mov
xor
add
pop
leave
ret
push
mov
mov
jmp
cs
orl
cmp
insb
popa
fdivrl
push
jo
jle
push
xchg
enter
icebp
aas
push
mov
andl
push
mov
jl
xchg
push
ret
addr16
push
jb
mov
xchg
xor
add
test
push
sub
jp
sbbb
out
cmc
xchg
ret
lods
push
outsb
fadds
sub
jmp
add
cmp
into
inc
mov
pop
ror
sbb
mov
shll
testb
and
push
repz
pop
fadd
sub
or
jl
aas
pop
fsubrl
adc
test
push
int3
inc
push
push
idivl
push
mov
push
or
xor
xor
roll
cpuid
jg
pop
repnz
test
out
sub
jnp
and
cmpsl
add
jae
movsb
add
xor
pop
add
fnstcw
incl
hlt
or
andb
jo
scas
pop
xchg
jecxz
or
sbb
mov
sbb
rcll
jl
or
add
loop
imul
sub
push
mov
cmpsl
xchg
lock
or
xlat
inc
mov
mov
repz
outsb
and
mov
repnz
rorl
cmp
js
inc
push
test
sub
sbb
out
inc
fdivrs
stc
and
bound
jns
or
das
add
add
int
xchg
jecxz
jecxz
test
out
int3
lods
out
daa
aad
stos
xor
aad
inc
lret
add
mov
cmp
sahf
and
push
mov
fnstenv
lcall
lock
pop
mov
push
mov
xor
adc
or
mov
hlt
or
clc
shlb
out
in
test
xor
aas
aas
inc
xor
push
out
je
arpl
int3
mov
hlt
and
daa
mov
add
mov
decb
jne
test
cmp
ljmp
cmp
in
push
add
dec
andl
data16
movsl
push
add
loope
dec
popa
mov
lods
fidivl
icebp
cltd
push
movb
hlt
rcll
mov
xor
xor
or
fstpl
push
or
sar
leave
lret
ljmp
cmp
push
in
sub
cmp
imul
jp
or
sahf
sub
loope
mov
jp
es
test
and
ja
shll
ljmp
pusha
mov
inc
fstpl
popf
stos
mov
and
jp
push
adc
sbb
sub
lret
sbb
lret
pop
add
dec
xor
push
cmc
or
cld
fs
icebp
mov
and
jmp
out
xchg
imul
bound
fistpll
push
jo
jle
into
inc
jp
bound
cmp
test
jno
addr16
jae
push
loope
cwtl
ljmp
arpl
jg
and
je
sar
dec
adc
repz
out
js
mov
outsl
mov
xchg
sti
mov
sub
jmp
sbb
mov
das
inc
and
shll
inc
pusha
fcmovne
ret
and
cmpsb
push
mov
test
cwtl
mov
dec
mov
jns
add
push
push
mov
pusha
lods
lods
rorl
mov
or
sbb
test
jns
std
jp
mov
aaa
xor
divb
arpl
adc
sbb
lods
push
ret
cli
jne
ret
mov
loop
loopne
and
into
inc
add
and
or
add
cmp
or
sbb
sbb
xor
inc
out
std
jno
push
sub
adc
sahf
and
xor
mov
jne
fimull
push
mov
mov
push
cwtl
mov
mov
xor
mov
and
std
adc
cltd
xor
outsl
out
cwtl
add
push
mov
mov
sbb
add
movsb
xlat
test
jl
arpl
into
rorl
mov
icebp
xchg
jp
dec
daa
movsl
sbb
sti
xor
ret
rcrl
in
jbe
ljmp
cmp
notb
scas
aas
cltd
and
out
stos
enter
jl
pop
out
add
mov
push
inc
incl
xchg
ret
pop
js
xor
add
push
cmp
push
inc
cmp
mov
jmp
lahf
and
std
add
mov
xchg
dec
sbbb
pop
mov
ljmp
lret
add
dec
inc
mov
jg
xor
insl
mov
xlat
sub
hlt
fwait
test
pop
je
dec
cwtl
stos
std
xor
mov
pop
gs
adc
subb
jbe
xchg
mov
mov
cltd
cli
lahf
xchg
ds
sub
jno
mov
js
pop
std
insb
mov
popf
ljmp
in
cmp
jbe
fnsave
rcrl
shl
xor
mov
fildll
dec
cmc
and
xchg
lock
push
cmpsb
mov
inc
fildll
pop
xchg
fwait
ds
mov
lahf
push
dec
popf
xor
inc
test
sbbb
dec
mov
sub
dec
mov
push
shr
inc
insb
lock
pop
push
pop
cmp
ficomps
dec
andl
or
mov
mov
mov
push
orl
push
movl
cmpl
je
cmpl
jne
push
push
push
call
mov
dec
mov
jmp
adcl
movl
mov
sbb
mov
xorl
mov
xor
jmp
jno
test
gs
or
movsb
outsl
popa
insb
scas
pop
movsl
sarb
inc
jg
jle
cmc
sbb
pop
shlb
xor
mov
negl
rcll
mov
mov
and
cmp
insb
ret
push
cmp
outsl
mov
jmp
xor
les
mov
ret
test
sbb
dec
mov
daa
and
loopne
rorb
repz
and
leave
mov
daa
imul
sbb
lods
in
bound
popf
push
cmc
test
loope
or
js
sbb
mov
cwtl
in
pop
nop
cmpsb
test
push
mov
lea
in
xchg
inc
sbb
test
js
cmp
pop
stos
cmp
jecxz
and
loope
leave
rclb
dec
mov
sti
or
stos
in
es
pop
mov
sub
mov
aas
leave
and
call
sbb
out
mov
push
or
out
shrl
pop
leave
lods
pop
lret
xor
repz
xor
popl
xchg
inc
push
mov
sbb
mov
mov
les
pop
mov
decl
test
pop
dec
out
sub
bnd
rcrl
jg
cmpsl
jno
iret
je
cwtl
aad
mov
mov
jb
jbe
jmp
int
inc
mov
push
fmul
lcall
pop
movsl
pop
fnstenv
mov
or
push
push
nop
and
mov
sbb
push
lahf
cli
and
jg
bound
js
fs
sbb
je
xchg
mov
mov
pop
jg
std
add
mov
mov
mov
sub
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
test
mov
jne
mov
jmp
test
pushf
dec
pushf
inc
pop
cwtl
mov
aaa
push
sub
inc
jg
jle
xor
sbb
call
dec
sbb
ja
sti
adc
jle
xor
loope
xchg
repz
pop
popf
stos
loopne
loope
jo
adc
gs
imul
cmc
cmpsb
jnp
mov
into
and
ds
adc
pop
fwait
pop
fdivl
push
mov
cltd
das
sbb
call
in
sahf
sbb
mov
movsb
aad
pop
dec
pop
mov
mov
fmuls
mov
jmp
shrl
mov
repz
out
add
in
fnstsw
sub
int
pop
ja
inc
jne
push
fcoms
movsb
fs
add
popf
lcall
enter
sbbl
imul
cmp
jl
int
in
les
adc
mov
xchg
or
pop
xchg
mov
je
sahf
bound
cs
stos
sub
rorl
mov
and
jecxz
aad
std
hlt
icebp
push
imulb
adc
and
fimull
stos
dec
push
mov
mov
jmp
cs
dec
lds
mov
inc
dec
pushf
shll
imul
mov
cmp
jb
addr16
fsubrp
cltd
aas
xchg
xchg
rolb
xchg
imul
pop
pop
in
roll
fs
mov
xor
xor
xchg
sub
in
aaa
sbb
hlt
xlat
and
push
aas
xchg
repz
sub
cltd
mov
jno
lock
or
fsubl
adc
jmp
dec
jbe
roll
inc
or
repnz
mov
jmp
xchg
ret
addr16
insl
ds
add
leave
ret
push
mov
sub
push
sbbl
push
push
xorl
push
sbbl
call
sbbl
test
je
orl
xor
jmp
orl
push
call
sbbl
test
movl
je
push
push
adcl
call
jmp
subl
call
cltd
cmp
movl
jne
cmp
movl
jne
subl
push
call
jmp
negl
push
adcl
call
test
jne
andl
xor
xor
inc
mov
cmpl
jne
pushl
pushl
call
cmpl
jb
mov
and
mov
movzbl
sbb
mov
mov
andl
mov
inc
mov
cmpl
jne
push
push
push
push
call
cmpl
jb
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jb
adc
movl
andl
mov
inc
mov
cmpl
jne
push
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
sub
lea
mov
add
lea
inc
mov
inc
mov
mov
orl
mov
add
mov
xor
xor
adc
mov
xor
xor
mov
add
mov
mov
mov
cmp
mov
movl
je
mov
xor
adcl
add
imul
movl
mov
jmp
xor
adc
add
mov
mov
mov
sub
or
mov
xor
add
mov
subl
mov
add
mov
negl
xor
decl
add
movl
cmp
jne
mov
add
mov
mov
movl
cmpl
je
cmpl
jne
push
push
push
call
mov
dec
mov
jmp
add
mov
orl
mov
mov
not
mov
xor
add
adc
mov
mov
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
call
cmpl
jne
xor
xor
inc
mov
cmpl
jb
xorl
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
call
cmpl
jne
mov
inc
mov
jmp
movl
cmpl
je
cmpl
jne
push
call
xor
or
dec
mov
jmp
and
add
mov
lea
and
mov
mov
adc
mov
mov
sbbl
mov
sbbl
xor
add
movzwl
and
mov
addl
mov
or
lea
mov
sub
mov
mov
movl
cmpl
je
cmpl
jne
pushl
push
call
xor
xor
dec
mov
jmp
movzbl
or
mov
xor
xor
add
mov
mov
sbbl
movl
mov
sbb
mov
movl
cmpl
je
cmpl
jne
pushl
pushl
push
pushl
pushl
pushl
pushl
pushl
push
pushl
push
push
push
call
xor
xor
dec
mov
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
jmp
mov
movzwl
add
xor
movl
mov
mov
add
mov
xor
xor
sub
mov
orl
xor
movl
add
movl
cmp
jne
movl
cmpl
je
cmpl
jne
pushl
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
jmp
or
mov
movl
cmpl
je
cmpl
jne
push
pushl
push
push
call
xor
or
dec
mov
jmp
mov
xor
adcl
add
movl
cmp
jne
xor
add
sub
mov
xor
mov
incl
xor
andl
mov
inc
mov
cmpl
jne
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
add
sbb
mov
movl
cmpl
je
cmpl
jne
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
mov
adc
xor
xor
mov
andl
sub
add
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
not
mov
mov
subl
mov
andl
movzwl
add
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jne
push
push
call
jmp
adc
mov
subl
mov
xor
add
xor
mov
mov
xor
sbbl
add
andl
xor
subl
sub
orl
mov
subl
movzwl
sub
movl
cmp
movl
mov
movzwl
movl
jg
xor
sub
adcl
sub
mov
jmp
notl
xor
lea
mov
mov
mov
not
mov
movl
cmp
movl
je
movl
mov
movl
movl
movl
jmp
mov
cmp
jne
mov
mov
movl
movl
mov
movl
mov
mov
mov
mov
mov
mov
mov
movl
cmp
movl
jne
addl
mov
sbb
mov
xor
xor
mov
add
mov
movzwl
subl
not
sbbl
and
mov
movl
mov
jmp
andl
xorl
mov
notl
pushl
adcl
call
xorl
test
movl
je
jmp
movzwl
mov
cmp
jne
movl
mov
movl
movl
movl
jmp
movl
mov
movl
cmp
jne
sbb
mov
andl
mov
movl
xor
xorl
add
cmp
je
mov
mov
mov
mov
lea
add
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
xor
add
cmp
je
mov
mov
add
mov
mov
mov
mov
mov
mov
add
xor
cmp
je
mov
mov
xor
add
mov
jmp
xorl
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movl
cmp
jne
mov
mov
xor
mov
add
mov
movzwl
not
and
mov
mov
jmp
xorl
mov
pushl
call
test
je
jmp
mov
cmp
jne
mov
movl
mov
mov
mov
mov
mov
mov
movl
cmp
jne
mov
mov
xor
mov
add
mov
movzwl
not
and
mov
mov
jmp
xorl
mov
pushl
call
test
je
mov
cmp
je
mov
mov
mov
mov
mov
mov
mov
mov
mov
movl
mov
movl
mov
xor
add
jmp
mov
xor
lea
push
mov
xor
lea
push
mov
pushl
call
mov
xor
lea
mov
mov
xor
xor
add
mov
xor
lea
cmp
jbe
mov
mov
mov
mov
mov
mov
sub
xor
mov
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
pushl
mov
pushl
add
mov
mov
pushl
call
mov
mov
mov
jmp
mov
mov
xor
add
mov
cmp
jne
mov
xor
add
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
mov
movl
mov
xor
add
mov
mov
mov
mov
mov
mov
push
pop
sub
add
mov
mov
movl
mov
mov
mov
mov
mov
xor
add
mov
lea
mov
mov
xor
add
mov
lea
push
mov
xor
add
push
mov
push
pushl
call
andl
mov
sub
push
mov
add
push
call
incl
cmpl
jb
mov
mov
mov
mov
mov
movl
movl
mov
xor
add
mov
movl
movl
mov
movl
mov
xor
add
mov
movl
movb
mov
xor
add
mov
mov
xor
add
push
mov
xor
add
push
mov
xor
add
push
lea
push
pushl
pushl
call
test
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
cmpl
lea
mov
je
lea
push
mov
xor
add
push
mov
xor
add
push
pushl
lea
push
pushl
pushl
call
test
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
xor
mov
sub
sub
mov
add
mov
mov
mov
mov
xor
sub
mov
lea
incb
inc
push
pop
dec
xchg
decb
pushl
mov
mov
pushl
lea
pushl
lea
pushl
lea
pushl
lea
pushl
xchg
inc
inc
sub
push
pop
call
mov
mov
mov
pushl
lea
push
call
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
leave
ret
push
mov
push
and
movl
mov
orl
mov
adcl
add
sbbl
xor
movl
cmp
movl
jne
xorl
jmp
lods
inc
movsl
es
lods
inc
pop
push
cmpsb
mov
rcl
jle
fbstp
jle
in
cmp
mov
int3
inc
dec
pop
ds
xchg
pop
addr16
shrb
pop
test
fsubl
and
sub
lahf
arpl
lods
lods
ljmp
mov
hlt
test
mov
rolb
mov
xlat
rcrb
inc
fistpll
jnp
xchg
mov
call
xchg
insl
jo
into
int3
shll
sbb
xor
xchg
adc
dec
add
inc
cmc
gs
pop
push
jb
fnstsw
adc
add
sbb
pop
and
nop
pop
sub
jge
inc
aas
sarl
xor
call
bnd
out
les
sbbl
sbb
pop
fildl
das
in
rcr
int3
or
movsl
pushf
scas
lods
mov
inc
popa
pop
out
shlb
mov
sub
mov
pushf
sub
dec
pop
imul
enter
les
or
test
xchg
add
push
je
push
into
inc
mov
in
push
xchg
push
pop
repnz
pop
jmp
addb
adc
push
jle
jb
dec
dec
adc
js
push
dec
cmp
pop
push
cmpsl
adcl
lret
xchg
cmp
scas
dec
ret
fcmove
bound
leave
xchg
inc
pop
jmp
jno
fidivl
sti
popw
sbb
icebp
loop
xor
add
dec
stos
cmp
cmpl
mov
in
xchg
test
add
push
in
js
jmp
pop
xchg
insb
ss
ror
scas
jnp
out
pushf
jecxz
mov
adc
jmp
dec
orl
outsl
test
test
repz
or
jb
rcr
push
xor
sbb
mov
shrl
inc
add
or
adc
aaa
test
ret
dec
lret
sub
es
mov
mov
test
pop
adc
popf
iret
ret
xchg
out
dec
loope
inc
lcall
mov
adc
sti
leave
lods
jecxz
dec
jo
adc
or
lahf
push
adc
in
movsb
call
add
es
add
pop
jg,pt
inc
or
add
pop
add
add
add
je
cmpl
jne
pushl
call
mov
dec
mov
jmp
mov
sub
add
and
mov
mov
mov
xor
push
mov
mov
add
cmp
pop
je
mov
jmp
mov
xor
add
jmp
mov
xor
jmp
mov
pop
outsb
adc
jnp
xor
inc
or
jle
das
push
hlt
fcomps
sub
add
push
adc
inc
lea
add
add
or
mov
mov
add
movsl
inc
xor
and
pop
jp,pn
rcl
fnstsw
sti
mov
xchg
xchg
dec
js
sub
xor
sub
jge,pn
jle
cmp
fwait
jne
aam
push
xchg
dec
cmp
pop
xor
insb
add
loop
xchg
and
sbb
addr16
dec
add
mov
out
push
addr16
fiaddl
daa
cmc
fsubrl
mov
or
pusha
test
mov
adc
clc
cltd
clc
movl
aam
roll
xchg
or
jae
lret
xchg
int
imul
cmpsl
and
in
sbbb
imul
mulb
xchg
sub
pop
inc
xchg
repz
mov
shll
add
rolb
jno
in
sahf
and
mov
fwait
adc
and
lret
jae
adc
pop
fs
leave
mov
loopne
sti
arpl
push
add
insl
leave
cwtl
and
dec
fidivrl
movsl
pop
inc
pushf
loopne
pusha
out
adc
cmp
cmc
sarl
push
mov
push
outsl
and
and
fisttps
mov
xor
mov
in
cmp
daa
scas
or
aaa
mov
mov
lret
fdivrs
movsl
mov
and
mov
insb
mov
imul
inc
sti
add
cmp
push
shll
push
test
jge
repz
and
cmp
cld
or
push
mov
mov
push
mov
push
cli
and
pop
jmp
and
pop
push
push
push
adc
lea
bound
aas
lret
ja
pop
icebp
add
mov
gs
xchg
rorl
lods
out
mov
decb
or
test
imull
mov
adc
mov
and
jg
mov
jo
lahf
jp
fwait
adc
sub
insl
rcl
into
mov
stos
inc
aam
shlb
jmp
jnp
stc
outsb
pushf
enter
inc
add
std
aam
and
inc
mov
cli
test
xor
leave
ret
push
mov
push
inc
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
xor
add
sub
xor
movl
sbb
jmp
imul
jge
dec
jb
jmp
mov
ficoml
jg
jle
cmc
push
inc
xchg
loope
out
sub
and
dec
loope
aad
shll
ss
loop
in
push
lahf
mov
imul
mov
lret
cmp
add
xor
jns
fs
mov
inc
ret
stc
insl
fistpl
cmc
int3
cmp
sbb
lods
std
push
frstor
jo
and
out
fadd
mov
xchg
sbb
cli
cmpsb
pop
sbb
pop
jmp
cmpsl
sbb
nop
xchg
mov
ss
inc
xor
jbe
jb
mov
movsb
loopne
ljmp
fsubrs
jecxz
aad
dec
cmovg
cwtl
stc
stos
or
adcb
mov
mov
sub
pop
icebp
mov
imul
inc
fnstcw
in
inc
mov
andb
add
jle
and
ja
icebp
xor
loop
xchg
popf
mov
jg
dec
sbb
out
mov
dec
nop
mov
xsave
cli
inc
jne
call
out
mov
outsl
sbb
mov
mov
lcall
inc
out
inc
inc
mov
movsb
inc
xlat
adc
fcmovu
mov
cmp
inc
mov
out
xchg
mov
mov
sub
pop
push
sbb
ss
test
push
pop
sbb
iret
repnz
icebp
sub
adc
adc
mov
jp
mov
and
mov
jno
sbbl
mov
xor
lods
push
stos
dec
jne
jle
adcb
mov
sbb
enter
add
sub
and
out
leave
call
test
out
cltd
mov
push
dec
lret
loope
movl
or
mov
push
or
mov
add
mov
xor
xorl
xor
dec
mov
add
addl
add
imul
mov
movl
cmp
movl
jne
mov
mov
jmp
fisubrl
cld
mov
adc
nop
add
jle
pop
jg
jle
inc
xor
push
mov
push
pusha
mov
ljmp
scas
frstor
rcr
call
xchg
and
mov
mov
enter
lret
lea
popf
mov
fwait
or
jo
daa
popf
lret
inc
incl
push
mov
arpl
xchg
mov
adc
adc
and
mov
or
mov
cmp
lcall
pop
sbb
jecxz
mov
adc
push
aas
mov
sbb
repz
xor
and
cmp
shlb
inc
push
imul
mov
xor
popf
and
aad
addr16
xchg
adc
div
xchg
inc
xor
adc
mov
imul
push
xor
out
cmc
xchg
jmp
faddl
adc
dec
cmp
std
loopne
ret
scas
adc
test
rcrb
mov
movsb
insl
test
sbb
repnz
inc
cmp
xchg
negl
inc
lock
cmp
jl
scas
mov
sub
aaa
push
in
xor
aad
jb
mov
or
fisubs
mov
in
leave
push
in
sub
rcll
mov
call
cmpsl
xchg
fidivl
pop
and
pop
sbb
cli
int
outsb
fiaddl
jb
jo
xchg
fldcw
jo
push
dec
pop
pop
fwait
or
jne
push
and
leave
xor
pop
fstps
int
inc
ljmp
nop
out
cli
xchg
sbb
movsl
cltd
loop
int
leave
and
push
xchg
inc
movsb
and
mov
xchg
push
imul
sbb
stc
add
adc
jbe
ret
add
jmp
pop
icebp
lds
fs
xchg
imul
outsl
push
out
jle
pop
jg
jle
mov
popl
jbe
lods
mov
cltd
je
mov
jbe
mov
xchg
in
lret
push
push
rol
inc
les
push
push
pop
iret
mov
xchg
loopew
and
cmpsb
adc
imul
mov
adc
lahf
cmp
scas
cmp
bound
cmpsb
ss
mov
jno
mov
insb
negl
mov
mov
fnstcw
push
xchg
les
push
data16
stos
cmpsl
xchg
jp
adc
dec
lods
je
sub
call
or
cmp
push
mov
ret
cmpsl
out
cwtl
test
add
dec
popa
out
rcrl
ja
pop
enter
loop
xchg
les
pop
addb
aas
out
pop
jmp
fdivrl
rcrb
fistpl
mov
inc
inc
adc
fsubrs
fisubl
push
lods
xchg
lods
push
push
mov
add
out
adc
incb
stos
cli
arpl
pop
nop
dec
lcall
xchg
xchg
xor
or
int3
test
sbb
pop
addl
mov
mov
mov
pop
mov
pop
mov
jmp
add
call
cs
aad
cli
xchg
sbb
insl
pop
es
mov
adc
or
mov
sbb
sub
adc
xorl
xor
mov
xchg
sbb
mov
cmpsl
mov
fwait
bound
stos
fwait
or
xchg
and
pop
lcall
adc
cwtl
jne
cld
push
push
pop
gs
xor
int3
pop
cltd
fldenv
lret
mov
push
pushf
popl
test
add
imul
jmp
mov
mov
mov
mov
mov
jmp
aad
outsl
mov
std
jge
outsl
stos
lock
lret
loopne
jle
jg
jle
add
push
jmp
pushf
xbegin
nop
outsb
mov
divb
inc
int
pop
hlt
xchg
clc
adc
lret
mov
xchg
lock
adc
test
xchg
or
xor
or
sarb
test
jns
pusha
sbb
push
pop
or
pop
cwtl
mov
dec
sbb
or
adc
xor
movsl
add
outsl
ret
push
pop
or
cli
dec
mov
pop
mov
add
cwtl
loope
sahf
addr16
or
inc
inc
jnp
pop
ds
add
mov
dec
scas
std
jl
adc
push
sbb
sti
mov
push
xchg
fs
fwait
mov
fwait
sbb
mov
mov
mov
enter
clc
xor
adc
inc
les
push
jnp
xchg
lret
xor
mov
fucomp
in
xchg
pop
xchg
mov
pop
sbb
lods
cmp
mov
fisubs
xchg
mov
inc
pop
insl
mov
add
sub
shll
xchg
xchg
xchg
imul
and
lods
cmp
xorl
pop
ret
dec
mul
nop
jne
rorb
out
dec
push
cmp
mov
loope
mov
cld
scas
jno
push
push
push
jl
or
inc
mov
cmp
cmp
xchg
mov
subb
test
jl
jne
mov
arpl
mov
sbb
mov
lret
data16
cmp
sbb
arpl
stos
adc
iret
xchg
cmp
inc
add
popa
or
jns
push
bound
in
cmpl
aaa
cmpsl
xchg
xchg
pushf
xor
xor
add
add
imul
mov
cmp
mov
je
xor
add
mov
imul
add
mov
mov
jmp
faddl
insl
jns
pop
xchg
xor
loop
jle
jg
jle
xchg
adc
scas
xchg
lret
jbe
and
pop
pop
dec
fwait
jns
cli
mov
push
xchg
mov
xor
aad
repz
add
imul
ss
enter
pop
test
leave
mulb
leave
ficomps
outsl
cli
mov
adcb
jecxz
sub
stc
pop
in
stos
andb
jge
mov
mov
push
outsl
push
aaa
cmp
or
in
pusha
mov
cmp
nop
icebp
imul
sti
mov
ficoms
loope
dec
dec
movsb
inc
fmul
lret
and
cmpl
dec
clc
popf
fnstcw
insl
and
insb
push
or
or
dec
sbb
sbb
mov
es
data16
mov
jge
mov
sub
mov
mov
lret
and
icebp
lods
inc
or
stos
sbb
jae
aaa
xor
das
push
cmp
repnz
mov
xchg
fmull
and
scas
and
cwtl
push
push
mov
in
jbe
iret
negl
lahf
out
sar
mov
lret
push
push
hlt
out
cmp
pop
fsubrp
sbb
jp
popf
stos
mov
xor
mov
push
or
mov
sahf
lock
movsl
clc
hlt
mov
mov
sub
pop
and
cmp
cli
add
jae
aam
out
sub
mov
mov
rcr
add
mov
mov
add
mov
mov
dec
out
jle
outsl
cmp
sahf
icebp
scas
ja
mov
nop
roll
in
addr16
inc
int3
in
imul
shrb
cmp
add
push
lods
pop
lock
ficomps
ret
push
mov
sub
mov
mov
sub
imul
jmp
adc
inc
and
scas
pop
lret
mov
sti
in
jle
jg
jle
xchg
push
stc
mov
stc
cwtl
fisubl
or
mov
outsb
add
xchg
test
ss
rorb
leave
sub
add
pop
sbb
jo
sub
xchg
jnp
test
adc
xchg
insl
in
xchg
cld
dec
loopne
jo
pushf
push
test
pop
mov
jo
or
lret
mov
loop
test
inc
test
mov
xlat
imulb
dec
out
or
inc
adc
repnz
leave
push
insl
out
test
or
push
lret
ss
xchg
mov
in
xchg
dec
sub
sub
mov
arpl
stos
outsl
int3
jo
xchg
sarb
xchg
adc
out
inc
lcall
and
fadds
cmc
sub
jae
cmp
ret
xorl
push
stc
dec
stos
adc
inc
sbb
mov
pop
push
mov
call
outsl
enter
inc
xchg
inc
inc
dec
loope
stos
mov
mov
movsb
sub
loope
call
ja
test
cmovg
push
inc
ljmp
in
shll
sub
test
pushf
clc
movl
cmpl
je
cmpl
jne
pushl
pushl
push
call
mov
dec
mov
jmp
movl
or
mov
push
add
mov
mov
sbb
xor
mov
sub
mov
xorl
add
xorl
mov
mov
xorl
push
subl
push
andl
test
movl
je
add
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
jmp
and
mov
mov
movzbl
xor
imul
or
mov
xor
add
mov
andl
mov
inc
mov
cmpl
jne
push
push
push
push
push
push
call
cmpl
jne
xor
or
inc
mov
cmpl
jb
dec
mov
xchg
sub
xor
jmp
mov
add
aad
jl
mov
or
jle
jg
jle
cld
xchg
cmpsb
imul
pop
stos
iret
dec
xchg
push
bound
cmp
cmp
cli
or
and
outsl
icebp
sbb
jl
push
insl
int
pop
sbbl
fidivl
mov
mov
ss
pop
mov
loopne
into
xchg
jp
lock
sub
mov
push
and
or
and
xchg
out
mov
jo
das
cmp
adc
sbb
incb
sub
mov
dec
out
fisubl
ja
outsb
mov
push
cld
xchg
add
mov
repnz
enter
mov
mov
mov
out
lcall
iret
mov
ljmp
sub
out
adc
dec
lret
sbb
jmp
std
dec
fstps
mov
or
cmp
jbe
pop
jmp
dec
out
loop
mov
loopne
adc
cmp
cmp
loopne
lahf
adc
xor
mov
out
loop
adc
repz
ljmp
sbb
or
cmpsb
jns
cmp
dec
rcrl
pop
mov
and
mov
or
jmp
gs
xor
pop
xchg
lods
mov
cwtl
jge
jle
aas
jg
jle
cmpl
into
or
xchg
test
add
add
data16
jp
add
enter
mov
cmc
in
in
loop
in
pop
jge
or
push
add
dec
adc
xchg
mov
out
out
aam
xchg
dec
jg
sub
pushf
pop
inc
inc
ljmp
sub
sbb
and
nop
and
lret
std
sub
subb
lahf
call
popa
mov
icebp
testl
xchg
inc
outsb
xor
xchg
xlat
test
shrb
aad
mov
xor
daa
jmp
nop
xchg
inc
pop
xlat
inc
mov
mov
pop
jge
ficoml
cmp
cmp
ret
and
mov
cmp
rol
inc
xor
outsl
cmp
jno
sbb
adc
adc
int
rolb
stos
xchg
call
cmp
xchg
push
adc
outsb
aaa
je
add
orb
ja
mov
mov
mov
inc
pop
or
and
jno
jae
inc
out
loopne
push
cmp
fcoml
mov
jno
lods
scas
and
scas
cmp
xor
or
fcoms
cmpsl
pop
cmpsl
mov
sbb
mov
xor
mov
negl
xor
sbbl
xor
add
mov
mov
mov
je
xor
mov
xor
xorl
jmp
mov
inc
aam
push
mov
and
pop
mov
aas
jg
jle
dec
aas
stos
xor
sahf
xor
jnp
outsb
xor
add
daa
adc
loope
ret
cmpsl
fcom
stos
inc
adc
arpl
dec
xor
loop
mov
mov
push
movsl
xchg
adc
leave
in
cwtl
mov
ret
jl
pop
sahf
mov
mov
add
inc
shlb
das
mov
insl
mov
hlt
outsb
push
or
stos
lods
push
dec
xor
fs
addr16
mov
bound
pop
push
pop
pop
outsl
and
or
jbe
xchg
mulb
push
or
stos
test
mov
add
ret
mov
cmp
add
andb
ja
idivl
lea
jno
out
inc
and
fstl
iret
mov
call
dec
sahf
ss
push
mov
xor
and
adc
cwtl
pop
loope
scas
sahf
mov
movb
xor
fs
sub
xor
push
pop
movsl
mov
scas
pop
mov
scas
inc
cmc
popa
fwait
xor
mov
and
cltd
push
xor
pop
aad
fwait
add
movl
cmp
movl
jne
orl
pushl
call
mov
mov
mov
andl
mov
inc
mov
cmpl
jne
pushl
pushl
push
call
cmpl
jb
mov
xor
mov
addl
xor
jmp
jns
mov
pop
insl
jns
lods
iret
loopne
mov
xor
stc
jle
aas
jg
jle
outsl
inc
inc
ljmp
mov
movsb
pop
cs
inc
lahf
add
cli
mov
sub
data16
inc
lea
dec
pop
scas
clc
mov
out
mov
mov
jo
or
sbb
loope
rcrl
dec
jle
inc
push
cmp
and
sahf
inc
push
les
outsb
or
dec
and
neg
outsb
imul
fcomps
mov
not
xor
xor
sbb
sub
xchg
inc
mov
mov
jae
mov
lods
or
in
lock
outsb
popa
dec
dec
xor
push
adc
mov
test
cltd
dec
enter
or
push
dec
push
dec
xchg
pop
sub
sub
in
pushf
xchg
mov
mov
mov
push
sbb
dec
fdivrp
mov
push
es
outsb
es
rorb
xchg
push
jnp
out
sub
cld
popa
xchg
fsubrp
add
xchg
cmp
bound
and
mov
popf
cmp
push
and
shrb
fadds
ljmp
sub
jp
sti
inc
sahf
mov
incl
inc
daa
jmp
imul
mov
test
add
cmp
movl
je
sbbl
pushl
andl
pushl
call
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
push
call
cmpl
jne
xor
add
inc
mov
jmp
mov
xorl
mov
add
mov
xor
orl
add
cmp
movl
je
add
mov
movl
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
mov
sub
mov
jmp
fldl
xor
cmp
outsl
dec
fs
jle
aas
jg
jle
add
jl
pop
jo
xchg
ret
add
fwait
mov
sbb
testb
inc
cmp
cmp
and
mov
cltd
jae
mov
clc
or
mov
xchg
jg
mov
push
inc
mov
or
orl
in
mov
sbb
nop
rcl
nop
push
rorl
mov
out
push
mov
jae
out
inc
add
outsb
imulb
popa
jnp
daa
pop
dec
mov
flds
sbb
jge
aaa
inc
cmc
mov
in
xor
mov
in
dec
cmpb
sbb
jne
cmp
negb
push
push
mull
stos
pop
or
sub
inc
or
push
jb,pn
addl
pop
jp
jge
xor
je
push
scas
fldenv
or
insl
push
mov
fstl
daa
imul
inc
or
lret
gs
add
mov
xor
cmp
je
mov
and
adc
cltd
xor
popa
jae
add
and
inc
xor
fbld
in
mov
sbbl
jmp
fmull
cld
popf
mov
scas
xchg
shll
cld
jle
aas
jg
jle
lret
cmpsb
dec
push
fiadds
dec
inc
std
jecxz
inc
test
dec
mov
leave
rolb
divl
add
pop
lods
pop
jl
xor
push
imul
mov
xchg
dec
xor
mov
or
sub
int
adc
pop
lods
pop
test
mov
test
sbb
inc
mull
call
mov
fwait
push
or
inc
push
psadbw
cmpb
jo
popf
and
push
aas
push
pop
lret
push
inc
mov
pop
fcmove
mov
inc
cwtl
mov
dec
and
loopw,pn
pop
or
js
rcrb
stc
lret
dec
mov
icebp
xchg
mov
xor
stos
scas
jne
arpl
in
in
loop
mov
push
adc
aas
inc
jb
add
jbe
cmp
sbb
xor
call
mov
loopne
pop
stos
cmpsl
orb
push
daa
xchg
mov
sub
ds
cmp
ret
into
clc
aam
dec
lea
insb
pusha
ret
push
in
pop
vcvttsd2si
movsb
dec
icebp
sahf
jecxz
push
mov
mov
jge
add
mov
or
mov
mov
mov
orl
mov
add
mov
xor
mov
mov
andl
mov
inc
mov
cmpl
jne
push
push
pushl
push
pushl
push
pushl
push
call
cmpl
jb
mov
mov
add
xor
jmp
xchg
leave
popa
jge
jge
fldenv
test
push
mov
jle
aas
jg
jle
addr16
dec
icebp
outsb
jge
mov
filds
mov
pop
lock
mov
popa
mov
sbb
dec
dec
add
cld
out
arpl
jp
fcoml
outsb
push
push
je
sbb
outsb
cmp
insl
stos
xchg
mov
repz
add
call
std
sbb
sub
cmp
fsubl
jnp
xor
lods
mov
adc
dec
mov
in
insl
dec
ret
int3
hlt
or
mov
fucomip
fwait
push
mov
divl
lahf
jecxz
lret
les
ja
push
pop
adc
add
sub
stc
popf
cmp
mov
call
mov
ficompl
mov
pop
outsb
out
adc
sub
or
mov
lret
addr16
movsl
mov
cs
test
and
xchg
xor
aas
jmp
sarl
pusha
fistpll
cmp
leave
pop
mov
xlat
mov
cmc
bound
mov
pop
mov
fisttps
mov
dec
sbb
out
pop
out
and
mov
iret
inc
inc
xchg
aas
mov
sbb
fs
dec
xor
repnz
push
cmp
cmpsb
mov
adc
mov
mov
mov
add
jmp
lea
pop
imul
jle
aas
jg
jle
mov
inc
cli
cmp
int3
testl
push
fs
lret
jns
xchg
lahf
mov
or
and
xchg
push
dec
push
fisubs
les
shlb
ret
mov
and
and
jge
push
or
clc
jnp
cmpsl
popa
enter
adcl
lret
xor
daa
sahf
add
and
les
out
dec
jge
repnz
and
dec
lock
mov
fwait
pop
add
bswap
mov
push
mov
sub
and
xchg
das
les
cmp
in
scas
cmp
adc
inc
jecxz
push
xor
sub
ret
mov
notl
push
add
test
addl
push
push
jecxz
mov
clc
ss
sbb
xchg
add
xor
addr16
or
shlb
stos
inc
jmp
in
aam
bound
fidivs
pop
mov
and
jnp
push
cmp
dec
inc
or
cmpsl
mov
and
xchg
popf
popf
fistpll
xchg
jg
lea
lea
jmp
and
and
sti
sub
jle
aas
jg
jle
and
rcll
inc
pushw
fldenv
hlt
add
mov
xchg
loope
inc
add
and
xor
and
pop
pop
arpl
lock
test
push
loop
and
dec
mov
pop
gs
sti
shll
std
push
mov
aaa
fldt
mov
iret
pop
movsb
add
sbb
rep
mov
sbb
pushf
inc
pop
iret
xchg
in
ja
mov
xchg
add
popf
mov
cmpb
push
cmp
scas
rorl
hlt
sarl
fstpt
imul
mov
call
pop
cmp
inc
inc
add
std
adc
pop
lds
and
fimull
rclb
bnd
mov
sarl
mov
jl
imul
add
mov
movsb
into
inc
pop
out
pop
jmp
fisttps
push
or
mov
into
dec
or
and
les
dec
mov
inc
sub
lahf
test
mov
mov
mov
pop
mov
mov
and
loopne
daa
lds
inc
mov
dec
rclb
jne
pushl
call
mov
jmp
push
sahf
sbb
fdivrl
or
cmp
jne
jle
aas
jg
jle
jl
mov
mov
fsubrl
outsl
xchg
jecxz
inc
sahf
ror
mov
and
les
and
testb
sbb
inc
sub
cmpsb
cmpsb
out
aad
mov
jns
add
jbe
movsb
pop
dec
xchg
jno
dec
test
cmp
dec
mov
jmp
adc
mov
ss
ljmp
mov
lds
sbb
mov
push
cmp
int3
test
inc
push
push
inc
mov
repz
jno
cmp
insb
stos
push
int3
push
ss
push
mov
dec
and
pop
push
push
fs
imul
and
popa
mov
in
mov
push
or
sub
add
lret
dec
cmc
aam
xor
mov
xchg
pop
push
xor
mov
int3
sbb
xor
inc
test
das
push
xchg
mov
lock
je
rcll
xchg
sti
fdiv
cmp
repnz
enter
xor
nop
xchg
ss
test
pop
cmp
pop
sub
mov
in
out
or
leave
icebp
pop
jo
xor
sub
in
sub
scas
imul
divl
insl
mov
push
mov
xor
add
cmp
jne
mov
inc
cmp
jb
jmp
mov
xor
add
jmp
mov
movzwl
mov
mov
mov
mov
mov
xor
add
cmp
jne
mov
xor
jmp
jmp
pop
mov
jl
xchg
movsb
jmp
pushf
addr16
aas
jg
jle
sahf
movsb
or
push
push
add
sub
sbbb
outsb
or
scas
cmp
stos
cwtl
push
dec
jb
mov
cmp
ljmp
fimull
cmp
cmp
jns
lods
fsubrs
stc
pop
jp
sub
imul
lea
and
sti
int3
dec
addr16
or
out
aam
je,pn
jne
in
inc
cmp
das
or
jle
dec
inc
add
imul
push
mov
dec
lods
cmpsb
cltd
lock
das
and
sbb
out
mov
or
push
xchg
xor
push
test
das
cwtl
frstor
and
mov
fistl
xor
fcmovne
sbb
jae
insb
insl
lea
jae
pop
add
push
aam
test
sbb
movswl
add
dec
in
push
ss
dec
xorl
or
jp
hlt
data16
jp
aas
daa
arpl
push
jle
lock
xchg
insl
adc
pop
aas
dec
subb
inc
mov
cmp
cs
xor
fimull
or
jmp
jg
test
insb
pop
or
in
rorb
jbe
add
mov
push
pop
push
jmp
stos
xchg
fwait
adc
hlt
lcall
jle
aas
jg
jle
add
jns
cmc
mov
shl
mov
stc
hlt
aas
inc
js
cmpsl
push
push
sbb
cld
push
adc
jg
inc
ret
lcall
ds
push
inc
xorl
pop
enter
lds
lods
pop
mov
add
xchg
mov
add
dec
addb
je
push
mov
pushf
leave
adc
fsubl
and
pop
imul
push
cmp
loopne
mov
jmp
mov
rolb
adc
jns
insb
test
lret
int3
pusha
test
mov
sbb
ficoml
push
mov
icebp
shlb
mov
xchg
scas
xchg
adc
mov
sahf
pop
popa
dec
test
and
jne
pop
dec
dec
subl
fsubrs
fs
cmp
mov
push
xchg
xchg
pop
and
jge
mov
inc
xor
dec
lods
mov
xchg
scas
btr
adc
lock
js
xor
fisubrs
jb
mov
jne
push
cmpl
mov
sti
adc
ljmp
jmp
and
lods
lret
movsl
sub
ret
dec
hlt
jle
aas
jg
jle
mov
jnp
inc
mov
repz
cmp
testb
xchg
mov
and
std
notb
adc
icebp
jb
mov
xor
sub
pop
mov
insl
cmpsb
mov
cld
cmp
inc
push
sbb
sub
shlb
push
inc
rclb
lock
push
dec
push
jg
or
push
lea
sbb
insl
xchg
cmp
stc
xchg
mov
loopne
jp
sbb
cmc
sahf
dec
push
mov
xor
push
or
add
add
rclb
mov
bound
enter
imul
fs
inc
push
insl
and
mov
push
icebp
mov
arpl
mov
lods
fsubp
or
adc
pop
or
cmpsl
cli
out
in
out
clc
ret
xchg
ljmp
adc
scas
mov
mov
xchg
or
jmp
mov
inc
and
fistpl
cmp
push
call
sarl
in
push
mov
fisttpl
pop
xchg
adc
push
cld
les
push
mov
lea
and
and
lret
sub
xchg
dec
mov
imul
sub
mov
jmp
jp
rcr
std
jnp
mov
jl
icebp
push
sub
aas
jg
jle
inc
das
fdivs
xchg
and
enter
test
fwait
cmp
mov
inc
or
in
jo
loop
adc
adc
int
mov
inc
and
hlt
pop
jge
incb
ficoms
adcb
pop
push
and
stos
push
cmp
movsb
jmp
mov
inc
fcoml
mov
xor
jnp
insb
push
jo
sbb
pop
cmp
xor
sti
aaa
adc
mov
enter
push
inc
fnstsw
xchg
and
jns
cld
mov
scas
ret
push
je
xor
ljmp
cmpl
and
sub
xor
mov
and
cli
add
aam
push
cwtl
push
rorl
pop
mov
test
xor
fldcw
adc
sbb
push
call
shrl
aaa
js
mov
mov
mov
hlt
outsb
push
or
push
in
cwtl
mov
lahf
mov
or
xadd
or
pop
fidivs
test
sbb
int
mov
out
lods
enter
lret
sarb
cmp
adc
inc
cld
mov
jmp
test
test
jge
cmp
and
lret
jle
jg
jle
out
mov
shrl
xorb
insl
rcr
jmp
mov
stos
sbb
pop
xor
das
or
ds
mov
xor
adc
lret
sub
xchg
divl
notb
xlat
cli
daa
inc
jne
mov
sbb
pop
xor
mov
cmp
enter
push
movsb
cmpsl
push
jmp
pushf
or
and
int
sahf
cld
sbb
imul
fisubl
je
xchg
pmulhw
sub
gs
jle
jl
dec
push
xchg
push
outsb
mov
xchg
orl
mov
inc
scas
jge
fildl
mulb
cmpsb
or
mov
and
divb
negl
xor
or
adcb
cltd
mov
jge
mov
pop
lret
stc
in
insl
mov
aaa
pop
xor
cltd
orl
fimuls
xor
scas
iret
mov
mov
mov
push
dec
fwait
testl
stos
add
addb
sub
xor
mov
add
jmp
mov
or
lods
jge
out
mov
mov
jle
jg
jle
push
shl
cs
push
dec
int
fadd
push
decb
lock
pushf
jle
into
or
leave
inc
cwtl
arpl
pop
sub
jo
out
push
push
cmpb
repnz
push
mov
imul
xor
sub
push
cltd
dec
mulb
fistps
xor
dec
pop
mov
aam
push
shll
sbb
daa
popf
dec
fistpl
arpl
jmp
les
std
inc
pop
or
hlt
jae
jne
sub
jae
sbb
scas
cmp
pop
clc
aam
jno
and
out
and
cmpsb
filds
jmp
lret
data16
inc
jle
push
movd
outsb
sub
mov
mov
scas
mul
pushf
cmp
les
inc
jp
sbb
add
repz
mulb
ret
les
adc
sub
std
mov
xchg
in
adc
push
push
mov
sub
hlt
lcall
xchg
test
and
outsl
cmp
inc
xchg
rorb
testb
ret
inc
jbe
push
jmp
fmull
push
ret
adcb
mov
xchg
in
or
lods
xchg
mov
lret
jecxz
mov
mov
xor
add
mov
imul
mov
jmp
inc
sbb
gs
jae
cwtl
sbb
cwtl
dec
mov
aas
jg
jle
lock
mov
outsb
pop
mov
mov
outsb
jb
lret
sub
addb
cmpsb
lret
sub
and
lret
mov
in
ret
sbb
stos
pushf
aaa
int
and
xor
imul
jno
test
insl
in
ret
sub
mov
cwtl
sub
cli
test
out
inc
ja
mov
jno
cmpb
adc
outsb
dec
imull
insb
fsubrl
pop
and
in
aad
in
lods
pushf
lcall
aam
popa
jae
hlt
jg
enter
cs
pop
rcr
das
push
sahf
sub
inc
rcll
rol
dec
lahf
add
in
cmp
ss
jmp
rcl
pop
xchg
into
jne
arpl
int
cmpsl
xchg
lods
mov
mov
pop
and
fnstcw
inc
ror
sub
pushf
ljmp
lret
adc
movsl
pop
and
and
dec
loopne
iret
pop
dec
insb
inc
sbb
mov
test
mov
inc
daa
and
or
out
mov
pop
movl
push
pop
mov
xor
mov
lea
cmp
je
mov
mov
mov
mov
mov
xor
xor
mov
add
div
mov
xor
jmp
jno
cmp
jge
in
pop
xor
add
sbb
mov
aas
jg
jle
adc
mov
insl
imulb
int3
in
outsb
xor
pop
push
pusha
fnstcw
inc
cmc
inc
cli
scas
cltd
add
adc
fsub
mov
push
push
cmc
roll
or
in
lret
sub
popf
lcall
in
fwait
scas
mov
mov
fistl
into
icebp
dec
mov
xchg
insl
push
testl
sbb
jle
add
cmp
or
inc
mov
add
xchg
out
mov
dec
std
sti
sbb
push
adcl
movsb
ss
nop
data16
addr16
ficoms
sub
sbb
gs
xchg
pop
repz
int3
cmc
loop
jbe
and
sub
cmp
imul
or
sub
ret
test
inc
xchg
sti
pop
xchg
jl
xchg
cmp
negl
add
xchg
js
xchg
mul
in
jp
sub
ds
sub
adc
fs
rorb
cmpsl
notb
pusha
xor
xchg
adc
shrb
aam
sbb
push
xchg
outsb
sahf
jo
jns
pushf
imulb
stc
mov
add
test
popf
jb
add
fmull
call
rorl
add
call
add
adc
jecxz
jnp
aad
lock
inc
in
fs
mov
aas
jg
jle
or
sub
sub
jbe
dec
loope
sbb
js
push
cld
cmp
lock
pop
sbb
scas
pusha
pcmpgtw
mov
pop
push
sub
mov
outsb
cmp
dec
or
mov
push
sbb
imul
aas
pop
outsb
pusha
adc
or
push
sub
pop
test
xchg
jno
aas
cmp
pop
jnp
aam
xchg
xchg
jno
xor
insb
mov
sub
imul
stc
push
cmp
cmp
jge
inc
stc
push
test
push
push
out
jl
testl
push
fbstp
sbb
pop
faddl
or
sub
mov
push
jle
and
icebp
loop
js
jmp
xchg
int
aaa
mov
dec
inc
xchg
pop
iret
stos
divb
iret
mov
push
stos
subl
mov
mov
sbb
or
mov
and
sbb
mov
add
and
add
daa
and
mov
sbb
inc
add
int3
push
in
js
mov
adc
and
sar
mov
xor
add
imul
jmp
into
jb
pop
inc
pop
fisttpll
mov
jle
aas
jg
jle
push
fldcw
jae
je
sub
xchg
mov
and
xchg
sbb
rorb
into
dec
xchg
mov
loope
clc
jl
imul
dec
sub
push
cld
xor
fdivs
cmp
sub
in
es
aad
pop
push
jl
push
sub
pop
xor
aam
pop
loope
cltd
xor
push
cmpsl
mov
cmc
pop
into
mov
mov
outsl
cli
into
call
ljmp
xorl
adc
cmp
sti
mov
lea
vxorpd
or
or
cmp
outsl
sub
and
out
bound
xchg
push
inc
outsl
lods
dec
inc
test
inc
inc
jge
aad
mov
push
mov
push
and
push
pop
mov
push
rep
mov
shll
xor
jno
aaa
repz
jg
stc
outsl
jmp
out
icebp
ret
sarl
sbb
mov
mov
fstpl
push
icebp
stc
mov
push
cmp
push
mov
mov
std
mov
jmp
out
cmp
jp
sti
inc
aaa
mov
not
inc
mov
aas
jg
jle
fdivl
in
pop
push
mov
cmp
or
add
jle
mov
popf
rorb
inc
imul
pop
mov
cmp
lods
push
into
adc
mov
arpl
andl
pop
jnp
sahf
in
cmpsl
pop
cs
mov
decb
xorb
pop
inc
fcomp
jp
pusha
push
lret
lcall
or
sbb
mov
ret
sub
push
imul
popf
pop
cmp
adc
jns
mov
pusha
inc
xchg
ljmp
outsb
mov
adc
ret
out
jmp
jp
incl
or
xchg
inc
outsl
imul
mov
in
or
lret
les
jmp
sbb
xchg
sbb
fdivrs
xor
add
cmp
fldl
or
jp
xchg
mov
repz
pop
cmpsl
adc
sub
dec
imull
dec
mov
test
jno
xor
inc
xor
stc
cwtl
stos
jae
inc
sbb
xor
mov
lea
cmp
jne
mov
jmp
mov
mov
xor
add
mov
xor
lea
add
jmp
xchg
pop
mov
cmp
mov
mov
jle
jg
jle
pop
mov
mov
leave
popf
clc
pop
jge
scas
sub
jno
push
in
into
xor
icebp
leave
pop
or
out
adc
cwtl
in
loopne
mov
push
and
mov
es
dec
or
aas
rclb
jns
das
fnstenv
fisubl
pop
mull
dec
jmp
jb
add
mov
cs
mov
arpl
outsb
push
cs
fsubs
shrb
dec
stos
aas
jmp
int
mov
add
inc
cmp
cs
sahf
sahf
add
repnz
push
mov
fsubrs
data16
mov
inc
inc
push
pop
pop
fbstp
sub
enter
je
clc
addr16
push
cltd
or
pop
pop
adcl
shll
pop
out
jne
out
in
jge
sbb
fs
into
idiv
repnz
jmp
sahf
bound
pop
jg
incb
cmpsl
cmp
jp
lret
and
xchg
imul
fimuls
mov
aaa
mov
and
jns
mov
xchg
mov
xchg
into
pop
test
mov
adc
movsl
mov
jge
push
push
clc
popf
jae,pt
add
out
rcrl
mov
cld
call
xor
jmp
mulb
jne
lds
mov
cmpl
cmpsl
int3
in
push
xchg
outsl
call
mov
push
sub
ds
inc
mov
loop
ret
sub
and
jle
mov
pop
stc
jmp
adc
or
out
dec
cmp
xorb
add
or
jbe
test
in
xchg
and
pop
test
mov
jmp
lods
int3
ror
mov
rcll
add
lahf
cld
dec
out
add
xor
aas
movsb
repz
pop
ss
push
mov
mov
or
xchg
sti
mov
icebp
aad
push
shll
mov
scas
nop
out
imul
pop
push
xlat
rcll
mov
les
add
and
xchg
int3
pop
clc
sbb
scas
add
out
mov
adc
data16
les
sub
push
popa
or
rcll
cmpb
add
jmp
jbe
pop
daa
dec
jne
jp
mov
loopne
xchg
daa
stos
jb
add
sbb
sbb
popf
or
das
xchg
repz
jmp
pop
mov
ss
loop
ss
sbb
xchg
mov
jne
push
test
dec
cmpsl
mov
pop
xorb
push
inc
jmp
jae
aas
mov
cmp
stc
frstor
cmpb
jg
jle
fbld
mov
out
xchg
loopne
adc
pop
push
or
jns
inc
rol
push
and
xchg
or
cmp
jg
repnz
daa
adc
jl
ds
or
xchg
and
jno
mov
in
jns
jnp
data16
dec
mov
mov
imul
cmp
inc
push
mov
dec
add
sub
and
cmpsl
gs
imul
dec
lods
repz
adc
sbb
ret
add
pop
push
sbb
push
mov
and
fimull
test
adcb
lahf
mov
jl
and
xchg
lods
pop
loopne
mov
scas
lea
movl
cmp
xchg
jbe
lods
lret
lret
scas
push
ret
sub
inc
test
aas
jge
jmp
scas
addr16
jecxz
call
pushf
push
ss
sahf
mov
mov
push
sbb
imul
shrl
sub
xchg
or
sub
sbb
stos
ss
jle
xchg
cmp
je
jmp
xchg
mov
mov
fsubl
adc
jle
jg
jle
and
push
or
subb
outsl
enter
aas
dec
test
xlat
inc
outsb
dec
and
lods
rcr
sub
notb
leave
adc
je
insl
imulb
pop
shl
imul
xor
push
add
jmp
mov
adc
call
pop
fisubs
movsb
mov
call
pop
outsl
adc
and
jb
adc
pop
in
out
jbe
insl
mov
sbb
int
cmc
pop
add
add
sbb
fimull
mov
aam
in
mov
cmp
add
xchg
pop
arpl
filds
inc
inc
ret
repnz
cmpsb
cmpsb
cmp
xchg
xchg
leave
fildll
sarb
ret
pushl
outsb
out
mov
cld
popf
dec
jmp
xchg
into
mov
mov
lock
add
fwait
mov
xchg
das
out
imul
outsb
test
fldcw
mov
mov
xchg
inc
stos
mov
rclb
rcr
push
cmpsb
dec
testl
test
lahf
dec
or
fs
jmp
dec
adc
jns
rclb
mov
jle
jg
jle
bound
jb
or
divl
xor
cwtl
xor
out
ja
push
mov
mov
fldenv
iret
fisubl
movl
insb
int3
rol
jmp
add
je
push
ljmp
jl
repnz
jg
xchg
push
pop
dec
jbe
mov
mov
mov
inc
loope
data16
cmp
pop
movsl
in
cmp
adc
mov
sbb
movsb
pop
dec
bound
scas
sbb
fistpl
push
dec
push
data16
add
ja
stos
cmp
out
cmp
inc
nop
imul
inc
repz
sarl
add
rolb
xlat
jno
push
mov
jge
cltd
outsb
aam
fldcw
jmp
mov
xchg
loopne
es
sti
add
out
pop
out
cli
sub
fnstcw
ljmp
js
mov
stos
inc
addl
ljmp
hlt
dec
lods
cs
mov
aas
and
sarb
call
pop
inc
jne
or
outsl
das
jbe
inc
or
dec
gs
cwtl
mov
fwait
xor
test
test
fsubl
push
fnstsw
loopne
sub
jb
scas
xchg
pop
push
pop
inc
xchg
jmp
ss
or
mov
jmp
push
movb
jle
daa
jmp
mov
bound
insb
sti
rorb
adc
pushf
mov
or
mov
inc
mov
or
loopne
jg
mov
pop
pop
jg
lods
lret
cwtl
mov
jns
pop
in
adc
cli
dec
lds
xlat
mov
or
mov
xor
pop
mov
and
cltd
es
xorl
ret
mov
adc
imulb
mov
insb
mov
sub
imul
arpl
mov
lds
cli
fidivrl
cs
popa
addr16
cmp
ret
dec
jb
pusha
cmp
mov
mov
ficompl
jmp
stos
jnp
scas
call
out
cmp
ds
xchg
dec
mov
push
cmp
stos
mov
ds
xchg
mov
cmp
mov
inc
or
xor
xchg
test
popa
iret
loope
sbb
and
adc
xchg
movsl
jbe
jno
imul
ds
shl
lock
cmpsl
push
pushf
dec
sub
xor
sbb
adc
in
dec
in
cmpsb
stc
test
mov
dec
mov
imul
add
xchg
push
xor
mov
dec
inc
add
dec
xor
add
pop
jmp
mov
pop
pop
in
pop
sarl
xchg
aas
jg
jle
jae
daa
je
jbe
add
mov
gs
lahf
es
or
stos
shl
sub
es
xor
out
and
cmp
xor
daa
and
lods
xor
xlat
incl
cmp
sbb
mov
mov
shll
push
mov
cmpl
jmp
test
fstps
sbb
push
or
lods
imull
loope
pop
mov
cwtl
mov
bound
out
dec
scas
mov
xchg
imul
adc
xchg
or
mov
jns
jb
imul
pop
outsl
add
push
cli
mov
insl
add
addr16
pop
xor
and
dec
dec
lds
repz
adc
popa
loopne
cmp
icebp
nop
or
fcmovu
cld
call
rcr
inc
hlt
loop
pop
sbb
and
mov
and
pushf
mov
xchg
cli
inc
add
cli
mov
into
jg
andl
mov
push
andl
mov
mov
ss
stc
xchg
fisttps
mov
pop
pop
pop
leave
ret
dec
push
mov
mov
or
dec
add
add
add
movl
xor
hlt
clc
lret
enter
mov
hlt
test
pushf
enter
movl
inc
inc
cld
xor
or
mov
call
pop
mov
dec
mov
pushl
or
ljmp
dec
loopne
rorb
add
mov
hlt
add
enter
dec
add
mov
orl
xor
lret
enter
mov
lea
push
mov
fs
decl
push
and
pop
inc
mov
push
pop
cld
dec
lea
mov
add
movl
decl
xor
cld
dec
jne
lea
push
mov
or
add
sub
add
rolb
inc
add
add
mov
incl
lea
call
add
jne
decl
dec
add
xchg
loopne
inc
incl
mov
xor
add
enter
mov
hlt
add
mov
add
add
incl
sbb
jne
mov
mov
movl
incl
rorl
test
inc
aas
inc
lea
pushl
mov
mov
loopne
ljmp
mov
add
incl
xlat
lea
inc
ljmp
incl
aaa
add
repnz
ffreep
aas
add
mov
incl
or
mov
xchg
roll
mov
cmp
dec
lds
add
adcb
add
add
mov
cld
push
decl
push
mov
call
mov
add
test
ljmp
mov
fcom
add
mov
add
add
add
add
push
inc
push
fisttps
test
add
jecxz
roll
inc
jle
test
jmp
incl
loope
jne
mov
cld
incl
mov
mov
add
call
int3
mov
add
add
xor
mov
cld
jle
push
add
add
inc
inc
mov
decl
add
inc
lret
cld
push
mov
add
mov
mov
inc
sub
add
rolb
jne
xor
incl
call
mov
call
xor
push
adc
loopne
ret
loopne
xorl
cmp
bswap
rolb
jmp
mov
add
cld
jne
xor
pusha
add
add
inc
add
mov
test
add
incl
jmp
adc
mov
popf
mov
lea
xor
call
call
jne
xor
add
pushl
call
int3
incl
mov
xor
add
xchg
in
add
add
or
mov
mov
or
inc
test
je
mov
xor
push
or
inc
in
mov
mov
fmul
add
mov
cld
loopne
inc
push
cmp
movaps
cld
fadds
jne
push
in
jne
lea
xor
jmp
mov
xor
adcl
rclb
inc
lock
inc
xchg
ud0
incl
adc
adcb
or
inc
lret
inc
iret
jb
mov
enter
xor
mov
pushf
lea
add
inc
mov
xor
add
mov
fmuls
xor
mov
aad
pushf
xor
mov
clc
enter
mov
test
clc
incl
mov
test
cmp
pushf
inc
mov
popf
push
add
mov
sarb
adc
dec
adc
add
jmp
jb
add
xor
xor
add
clc
enter
pop
mov
push
push
xor
xor
add
add
lret
repnz
cli
fdivr
test
dec
inc
xor
add
mov
mov
clc
jne
mov
into
into
scas
dec
mov
sub
cmp
mov
mov
mov
add
xor
xor
rdtsc
lret
mov
inc
add
mov
lods
test
xor
mov
lock
bswap
lret
test
jmp
add
push
mov
test
push
clc
xor
xor
add
add
push
dec
mov
stc
roll
scas
mov
xor
xor
add
mov
clc
lret
into
mov
mov
mov
int3
add
xor
xor
add
mov
lock
stc
mov
or
jmp
dec
dec
mov
clc
test
clc
rorl
mov
call
les
lret
ja
mov
dec
xor
mov
clc
push
lret
mov
adc
jb
add
call
cmp
movsb
popf
inc
xor
mov
clc
dec
lret
mov
call
scas
mov
popf
sub
cmp
lods
xor
add
mov
mov
cmp
jb
add
dec
scas
mov
shrl
into
cmp
mov
dec
dec
mov
lret
xor
add
imul
mov
xor
mov
add
mov
inc
sysexit
xlat
pushf
jge
xor
sub
cmp
jb
add
rorl
xor
add
jmp
mov
dec
into
mov
popf
shll
lret
or
add
in
push
mov
arpl
int
sub
dec
xor
jge
mov
add
dec
decl
adcb
add
jge
push
push
shlb
xor
xor
inc
add
dec
or
jbe
mov
ror
enter
decl
push
lret
push
mov
mov
cld
subb
sti
add
push
lcall
mov
int3
pop
inc
decl
push
xor
movl
aas
push
inc
xor
add
mov
jmp
mov
rol
mov
mov
mov
cmp
mov
add
xor
popf
lret
cmp
call
inc
inc
mov
mov
add
add
clc
enter
push
pushf
mov
int3
or
test
clc
gs
add
push
xor
sub
dec
add
mov
or
cmp
dec
out
xor
mov
dec
add
push
push
add
sbb
mov
xor
dec
inc
xor
add
push
dec
mov
lret
into
sub
dec
adc
inc
push
test
unpcklps
jmp
add
movl
xor
rolb
clc
arpl
mov
xor
sub
mov
add
sub
mov
mov
clc
addl
lcall
inc
decl
test
decl
push
add
dec
or
rorb
into
add
mov
sar
adc
clc
fadds
mov
push
adcb
add
lret
mov
cld
mov
into
add
jne
incl
rclb
push
mov
mov
sar
or
push
add
pushf
xor
test
clc
inc
inc
mov
sub
mov
dec
arpl
inc
add
dec
arpl
inc
add
inc
add
movsl
pushf
inc
dec
lea
push
xor
pop
lods
incl
mov
rcrb
test
inc
inc
add
pushf
orb
xor
add
adc
add
jmp
add
mov
dec
push
cmp
unpcklps
jne
decl
mov
shlb
inc
add
lret
decl
stc
in
or
dec
clc
xor
mov
rolb
inc
add
clc
inc
lret
mov
in
lret
into
into
scas
dec
mov
sub
cmp
mov
int3
test
xor
xor
rdtsc
lret
mov
inc
add
mov
xor
mov
call
lret
test
jmp
add
push
mov
mov
lret
xor
add
add
push
dec
mov
stc
roll
scas
mov
xor
xor
add
mov
clc
lret
into
mov
test
push
jbe
mov
mov
push
add
rdpmc
lret
add
dec
stc
mov
or
jmp
dec
dec
mov
clc
test
clc
rorl
mov
lock
inc
mov
hlt
pushf
jge
sub
cmp
ja
mov
dec
xor
mov
clc
push
lret
mov
adc
jb
add
lock
sub
mov
mov
mov
mov
lock
ror
push
scas
mov
popf
sub
cmp
movsb
xor
add
mov
mov
cmp
jb
add
dec
scas
mov
shrl
into
cmp
mov
dec
dec
mov
lret
xor
add
imul
mov
xor
mov
add
rolb
sysexit
xlat
pushf
jge
xor
sub
cmp
dec
xchg
incl
jmp
mov
dec
into
mov
popf
shll
lret
or
add
in
push
mov
arpl
int
sub
dec
xor
jge
mov
add
dec
decl
inc
push
decl
lea
push
mov
push
mov
les
add
incl
mov
cld
lret
add
jne
in
ror
clc
into
add
not
adc
inc
push
mov
push
mov
fdivr
sti
sbb
pop
xchg
leave
popf
add
push
cmp
sqrtps
decl
push
cld
xor
lret
clc
xor
add
hlt
or
mov
hlt
dec
add
leave
mov
push
roll
mov
mov
lar
push
lret
jne
mov
or
mov
cld
inc
mov
add
loope
inc
call
inc
mov
cld
mov
clc
xor
mov
loopne
mov
mov
clc
jne
call
sub
test
je
mov
cld
or
push
add
add
inc
push
mov
pop
mov
ret
push
mov
clc
lock
jne
jne
mov
rolb
jne
cmp
pop
mov
push
inc
lea
inc
inc
rorl
xchg
mov
mov
or
inc
inc
mov
cld
jmp
mov
mov
rclb
iret
inc
leave
decl
mov
mov
mov
push
nop
incl
push
leave
iret
add
push
in
push
push
incl
mov
loope
sbb
add
mov
cmp
jne
push
pop
push
mov
or
add
sub
ret
add
sbb
mov
lea
push
enter
testl
enter
negl
or
inc
in
in
sub
inc
in
push
add
push
push
imul
adcl
add
lea
mov
cmp
jne
mov
loope
inc
stc
xlat
ss
aas
in
ret
lock
and
mov
call
push
add
ud0
hlt
add
cmp
flds
out
call
cmp
shr
pop
fisttpll
push
add
add
push
add
sub
jne
lods
mov
dec
out
into
push
loopne
shrb
xorl
roll
mov
cmpl
mov
push
push
push
sub
push
adc
insl
mov
add
inc
mov
pop
addl
add
add
roll
cli
push
pop
lret
add
decb
sub
and
dec
inc
shll
add
pop
add
pop
dec
jmp
and
push
out
jmp
jmp
mov
decb
add
pop
icebp
mov
insb
adc
mov
or
mov
cld
jge
aas
and
adc
mov
and
dec
add
add
fadds
stc
enter
sbb
sbb
in
in
add
jne
cmp
jb
jmp
mov
add
add
jb
pop
faddl
or
inc
or
xlat
dec
push
add
leave
roll
add
mov
int3
jmp
mov
jne
mov
call
pop
add
pop
or
push
mov
int3
add
jae
int
enter
add
mov
push
pop
add
push
lea
mov
jb
mov
push
add
add
add
int3
jne
movsbl
add
add
mov
add
add
mov
sub
jb
add
jge
add
addl
jne
je
mov
rorb
orl
mov
mov
fadds
inc
pop
lea
push
out
add
add
mov
jb
add
push
call
add
jae
icebp
inc
mov
int3
out
loopne
sub
push
pop
push
jl
add
xor
mov
rcrb
rorl
inc
shr
orl
push
pop
add
jmp
mov
fdivrl
push
pop
call
mov
in
rolb
call
pop
enter
repz
xorl
je
or
jne
jmp
pushl
push
pop
cmpl
jge
mov
sub
pop
inc
mov
sub
lods
add
enter
repz
stc
jge
jnp
call
fadd
dec
insb
stc
cmp
push
mov
jne
mov
mov
add
sub
and
cmp
sbb
pop
call
fsubr
sti
add
add
add
roll
mov
clc
jne
mov
loopne
loopne
lods
int3
inc
mov
add
sub
shrb
add
call
add
dec
insl
in
lea
inc
inc
sub
orl
and
rorl
or
mov
stos
adc
inc
add
jne
mov
cmp
sub
sar
ljmp
sub
mov
mov
and
jne
sub
sbb
dec
push
add
ret
mov
leave
sub
ret
pop
push
rolb
addl
jb
ret
in
jecxz
push
xchg
jne
cmp
jne
mov
rorl
mov
pop
nop
mov
les
add
inc
mov
mov
cmp
or
inc
inc
xor
insb
cld
add
add
add
sbb
dec
je
mov
add
and
jae
mov
incl
push
shr
in
push
add
add
inc
mov
add
push
cmovne
xor
push
pop
xor
add
sub
aad
inc
add
add
xlat
insb
inc
inc
and
dec
add
inc
fnstcw
leave
add
lea
ret
mov
xor
mov
sbb
stc
mov
les
mov
add
add
or
mov
add
add
push
movb
or
dec
lea
or
movsl
fiadds
jae
or
loope
inc
xor
pop
inc
shr
inc
and
inc
add
add
out
clc
inc
ret
inc
mov
leave
sub
add
add
sbb
stc
test
lea
mov
dec
int3
mov
movb
dec
ljmp
or
jge
shl
xor
add
rdpmc
sbb
mov
in
cmovne
jecxz
inc
mov
sbb
mov
add
loopne
inc
dec
and
inc
mov
leave
movl
inc
add
inc
xlat
sbb
xor
dec
mov
mov
fadd
inc
rcl
inc
push
movb
xor
lea
inc
jae
ficomps
addb
test
incl
inc
add
mov
cld
mov
mov
pop
sar
cmp
jne
mov
loopne
pushf
jae
add
add
add
jmp
mov
pop
add
add
decl
mov
mov
data16
mov
add
add
data16
ljmp
pop
jle
inc
sbbb
test
jmp
push
jne
lea
movl
sar
mov
loopne
rol
ljmp
push
inc
inc
mov
cwtl
movl
add
add
call
incl
xor
jne
mov
ret
out
mov
push
xor
mov
mov
mov
lcall
and
push
mov
decl
mov
jp
mov
mov
jl
decl
mov
push
decl
orb
xor
call
test
mov
into
xchg
loop
xchg
lods
ret
in
inc
dec
in
xor
add
mov
mov
incl
jno
data16
add
mov
fmull
aam
call
push
mov
xor
add
subl
mov
add
pushl
push
lea
mov
sar
orl
fs
add
add
adc
add
test
inc
incl
dec
mov
mov
push
xor
push
inc
xorl
mov
push
inc
adcw
movl
clc
push
inc
data16
push
pushf
data16
dec
in
test
xor
in
add
decl
mov
lea
push
push
test
inc
inc
mov
push
shlb
test
cs
incl
data16
test
incl
incl
mov
lcall
leavew
xchg
inc
pushl
call
lea
mov
enter
mov
xor
sbb
sbb
dec
mov
mov
movl
mov
mov
sar
sub
mov
add
inc
mov
or
addb
xor
pushf
js
add
mov
inc
xor
lcall
cmp
movl
lcall
dec
inc
mov
mov
mov
nop
ret
add
jne
test
jne
decl
call
sbb
stos
mov
mov
inc
cmp
push
cwtl
inc
add
lcall
test
mov
adcb
add
add
movl
mov
inc
add
cmp
incl
inc
push
xor
add
mov
and
incl
lea
pushf
or
jmp
decl
mov
loopne
movl
sbb
out
mov
push
push
test
mov
cwtl
inc
add
movl
add
add
pushl
or
rorb
cld
sbb
inc
mov
movsb
add
push
movb
jmp
mov
clc
mov
incl
mov
cmp
push
add
xor
add
mov
mov
mov
hlt
movsb
add
add
mov
dec
inc
mov
add
add
add
mov
mov
push
decl
decl
xor
add
push
xchg
inc
incl
jnp
mov
pusha
add
test
decl
ret
add
mov
cli
incl
test
add
or
cmp
add
sub
mov
mov
add
inc
dec
mov
add
mov
inc
push
push
mov
mov
adcl
add
push
add
push
test
decl
mov
sbb
incl
movl
add
add
mov
push
push
test
decl
inc
push
xor
and
call
test
incl
decl
inc
decl
arpl
int
xor
mov
cwtl
pushf
add
mov
mov
incl
adc
addb
adc
push
inc
add
mov
mov
push
adc
mov
mov
addl
incl
inc
cmpsl
mov
add
mov
cmp
movsb
mov
sbb
addb
hlt
add
mov
hlt
pop
inc
xor
pushl
mov
pushl
mov
sub
add
mov
mov
ret
mov
ret
mov
add
mov
sub
sar
test
inc
add
testb
push
add
add
add
add
add
mov
mov
sbb
jne
mov
xorb
add
cld
add
mov
cld
add
lret
add
sbb
dec
or
dec
sbb
inc
dec
mov
sbb
nop
scas
add
add
mov
add
mov
cmp
xor
gs
je
push
sarb
mov
push
cmp
add
dec
mov
in
adc
pop
inc
leave
or
gs
add
into
in
enter
push
xorl
or
jnp
test
add
mov
ltr
decl
clc
out
add
cmp
jge
jb
je
pop
push
mov
in
roll
orl
cmpl
hlt
mov
push
jns
lock
ror
test
dec
rcpps
mov
inc
test
je
mov
adcl
and
jp
rcpps
add
sbb
add
je
cmp
js
add
jns
vmread
add
adc
jge
mov
add
or
push
push
mov
add
pop
add
mov
inc
pop
xorl
add
push
clc
mov
jp
add
divl
test
je
mov
or
decb
jbe
mov
add
cmp
add
je
mov
mov
hlt
orb
jb
jmp
xor
pop
pop
pop
ret
ret
mov
xorl
cld
cmp
xor
cld
or
ret
mov
pop
dec
jne
xor
inc
dec
jbe
inc
pop
add
push
dec
push
mov
and
jo
mov
sbb
mov
nop
or
jne
cmp
cld
xor
add
cmp
js
jae
xor
jmp
mov
fdecstp
test
add
add
mov
cmp
adc
jge
mov
jl
clc
dec
jge
mov
jb
mov
mov
xor
add
mov
inc
pop
jge
cmp
mov
imul
fimuls
fists
in
jne
mov
imul
fdivrp
filds
test
inc
mov
mov
adc
rcll
mov
fiadds
mov
mov
xor
mov
xlat
into
ffreep
lret
iret
dec
inc
mov
fmull
dec
jnp
add
mov
inc
dec
lea
add
jb
add
inc
imul
cld
clc
mov
incl
or
sbb
lret
add
dec
add
enter
inc
pop
decl
add
add
mov
xor
or
pop
cltd
push
clc
mov
xor
add
cmp
hlt
cmp
or
mov
loopne
mov
cld
pushf
pop
popf
mov
lock
adc
orb
xor
dec
mov
iret
inc
jne
mov
cmp
je
add
or
dec
inc
mov
cld
add
cmp
mov
or
mov
test
pushf
call
jne
mov
fcomps
add
incl
cld
add
mov
cld
inc
fidivrs
fbstp
mov
adc
fadd
add
mov
inc
mov
loopne
sbb
sbb
pushf
add
mov
cwtl
inc
inc
jne
mov
clc
add
mov
or
inc
lea
add
inc
rorl
add
shufps
jmp
xor
hlt
mov
fadds
xor
add
cmp
pmuludq
jmp
mov
or
inc
mov
jne
mov
clc
add
xor
jne
pushl
add
mov
cld
add
xor
lea
adc
sub
lea
add
jb
add
inc
add
inc
mov
or
mov
in
scas
inc
mov
in
add
mov
dec
mov
mov
cld
push
dec
add
mov
in
cmp
mov
mov
mov
xor
cmpl
xor
jmp
add
xor
add
cmp
mov
mov
adc
jmp
mov
cld
mov
push
jne
dec
or
push
inc
in
add
or
dec
cld
mov
xorl
pushf
decl
mov
mov
xor
mov
inc
mov
mov
call
add
mov
or
jo
push
xor
pmulhuw
test
mov
mov
xor
xor
xor
add
inc
mov
movl
sub
lock
mov
mov
or
ja
mov
cld
cli
mov
cmp
bswap
mov
mov
clc
repnz
push
xor
xor
pop
jmp
mov
xor
lea
xor
neg
insl
test
clc
pop
inc
or
xor
add
jne
mov
in
push
xor
add
cmp
add
mov
mov
add
mov
mov
popf
pushf
xor
jne
mov
icebp
icebp
shl
mov
pusha
jne
mov
in
jmp
add
mov
or
inc
jne
mov
ret
or
jge
sub
xor
add
mov
clc
negl
xor
cmp
repz
xor
add
mov
mov
cld
lock
test
clc
add
fdivrp
test
jnp
add
jae
sub
shll
leave
call
in
in
add
mov
in
test
mov
xor
pushf
jnp
xor
push
loopne
jne
mov
add
xor
mov
cld
jb
add
jne
mov
jge
mov
lock
xor
mov
lock
jge
xor
dec
mov
loopne
jge
add
cmc
add
dec
hlt
xor
mov
in
jge
mov
dec
xor
inc
hlt
xor
add
icebp
add
mov
cmp
test
fistps
inc
mov
add
inc
test
add
add
ret
jnp
inc
inc
xor
add
xor
add
mov
cmp
setge
mov
call
or
inc
mov
and
lock
movl
mov
clc
xor
mov
inc
mov
mov
mov
mov
hlt
inc
rorl
mov
push
mov
in
jne
mov
addl
clc
mov
clc
add
rolw
mov
jne
incl
inc
push
test
sub
add
and
add
mov
and
inc
adc
inc
inc
push
push
jne
push
enterw
mov
add
add
str
lea
sbb
dec
cmp
inc
push
mov
push
add
mov
inc
add
xor
add
mov
loopne
dec
mov
cld
push
xchg
add
add
or
dec
loopne
xchg
push
add
dec
jmp
mov
sbb
inc
xor
add
push
divl
and
add
jno
incl
inc
push
push
mov
mov
push
inc
enter
push
call
pop
push
mov
mov
push
jo
incl
or
call
fmull
mov
mov
adc
dec
xor
mov
mov
mov
push
lret
movb
inc
movntps
lret
into
dec
lret
mov
mov
fdivl
mov
push
mov
sbb
dec
sarl
push
jne
mov
lea
call
sbb
add
push
mov
push
mov
test
xadd
pop
add
mov
or
push
add
add
and
call
add
mov
add
xor
add
inc
je
push
push
dec
mov
or
inc
add
data16
subl
add
add
enter
int3
loopne
rolb
lea
data16
add
sbb
inc
inc
lldt
xor
sub
mov
or
ror
dec
inc
cmp
cld
or
lret
lret
dec
mov
in
and
or
in
xchg
add
add
push
inc
xor
add
push
push
inc
jmp
push
inc
sbb
rorb
addb
ljmp
xor
mov
fmuls
add
lea
add
popl
add
push
incw
mov
add
xor
test
inc
mov
add
or
or
inc
mov
jne
mov
add
add
adc
adc
push
mov
mov
inc
mov
or
push
jne
call
inc
shlb
add
add
and
fs
inc
test
leave
scas
inc
add
orb
call
shr
xchg
add
add
dec
and
push
decl
mov
mov
lea
mov
add
mov
push
shlb
inc
in
jno
push
mov
mov
je
mov
sbb
popl
add
add
adc
jmp
sub
jne
mov
in
popl
push
incl
adc
add
call
and
and
inc
test
sldt
xor
pushf
jmp
mov
or
inc
call
mov
loopne
inc
add
mov
add
add
cmp
test
sbbl
jne
call
leave
rcrb
add
add
add
inc
mov
fcom
add
lea
pushl
call
mov
fstps
push
pop
mov
addl
mov
xor
xor
pop
or
inc
push
in
or
movsl
xbegin
clc
adc
divb
or
test
add
add
adc
xchg
test
clc
data16
orl
rolb
mov
mov
push
add
push
jge
add
jne
mov
jmp
xor
pop
cvtdq2ps
ret
mov
xor
add
push
rdpmc
out
add
mov
ret
sbb
cmp
or
or
pop
inc
add
add
invd
jge
mov
cli
xor
mov
ret
mov
sub
inc
xor
inc
mov
hlt
test
mov
xor
dec
or
jne
mov
call
inc
mov
add
add
inc
mov
addl
inc
mov
lock
jge
mov
cli
xor
add
test
add
cmp
xadd
test
mov
xor
add
pop
loopne
inc
clc
xor
add
data16
mov
hlt
xor
add
data16
inc
cmp
ja
psubq
ltr
add
add
data16
mov
jge
data16
data16
mov
fdivl
data16
mov
mov
pop
or
clc
mov
lock
jge
invd
pop
add
cmp
data16
mov
pop
fbstp
test
add
add
jge
data16
pop
stc
bsf
mov
in
test
mov
call
inc
popf
add
mov
call
add
mov
jnp
mov
mov
call
mov
data16
xorl
fisttps
cld
jne
xor
mov
sti
repnz
data16
push
xor
mov
popf
data16
mov
mov
fisttps
or
mov
hlt
mov
add
dec
or
mov
or
mov
fdivrl
xor
pop
lock
lea
icebp
jb
add
jge
mov
fsubr
pop
mov
in
rcrl
jb
add
jge
mov
in
pop
data16
cmp
mov
fdivrl
cmp
mov
mov
lock
mov
pushf
idivl
cmp
je
push
loopne
dec
mov
int
mov
movlhps
add
jmp
mov
lock
rorl
or
jb
add
loopne
jne
data16
mov
inc
icebp
add
add
mov
mov
enter
pop
jne
mov
pushf
mov
sub
cmp
jne
xor
in
xor
movl
clc
add
ret
decl
ss
dec
push
jle
popa
data16
into
arpl
add
mov
push
cld
add
inc
pushf
add
into
ret
pop
push
mov
jne
lea
mov
sarl
test
mov
push
xorb
mov
xor
cmp
pop
mov
je
xor
mov
cmp
pop
cmp
jne
mov
cld
push
pop
inc
stc
xor
pushf
clc
mov
test
cmp
fs
or
push
mov
push
push
lret
xor
pushf
mov
mov
dec
mov
push
add
xor
cmp
je
mov
push
lea
push
cmp
mov
add
sub
add
mov
jne
mov
xor
mov
push
cmp
jne
sbbl
clc
dec
pop
sti
add
cld
xor
mov
roll
mov
inc
in
add
mov
mov
push
mov
test
xor
sub
inc
sub
mov
inc
add
or
cmp
mov
cmp
je
push
dec
str
cmp
int
mov
mov
add
data16
push
add
jne
movl
clc
xlat
inc
mov
push
pushf
in
add
push
push
add
add
add
lret
lock
inc
lret
xor
pushf
jge
xor
pushf
test
je
xor
rorb
push
add
jb
add
dec
mov
push
push
adcl
xor
mov
scas
mov
in
cld
add
mov
dec
or
ret
lock
mov
or
mov
xorl
mov
adc
iret
inc
movl
incb
mov
adc
dec
fisttps
add
ret
lea
add
xor
add
inc
test
xor
push
popf
push
xor
inc
cmp
or
inc
test
xor
in
hlt
push
push
push
push
mov
popf
popf
xor
mov
or
mov
clc
jb
add
orl
addl
mov
or
inc
dec
mov
orw
xor
mov
mov
mov
mov
inc
dec
add
add
mov
clc
or
mov
clc
popf
incl
ret
adc
mov
hlt
test
clc
or
xor
pushf
jb
add
inc
daa
inc
inc
xor
dec
popf
add
clc
cmp
or
add
xor
or
lea
add
mov
cld
dec
push
sub
add
or
add
or
add
mov
inc
mov
cmp
xbegin
clc
or
xor
adc
lea
add
inc
add
add
je
push
or
dec
std
mov
mov
mov
or
inc
clc
mov
hlt
call
push
or
push
xor
mov
xor
mov
or
add
inc
mov
or
inc
push
jmp
mov
mov
jne
jmp
mov
clc
lret
push
mov
mov
sub
decl
or
pop
ds
pushl
mov
mov
jmp
leave
jne
call
in
dec
add
add
inc
cmp
or
add
or
adc
enter
rolb
mov
or
rorb
jmp
push
mov
cld
inc
inc
orl
push
push
mov
add
test
add
mov
mov
lock
fcoms
mov
push
enter
cmp
add
mov
call
cmp
jmp
push
call
mov
cld
or
call
add
xor
jne
cmp
jne
mov
or
pop
into
je
mov
or
mov
mov
mov
or
sar
xor
xor
pop
adc
ret
cld
inc
mov
cld
mov
push
pop
or
xorps
test
add
adc
addl
jmp
ror
inc
leave
xor
and
add
xor
xorl
mov
pcmpgtw
add
leave
mov
push
dec
mov
lea
xor
sysret
dec
rorb
pushw
jne
ud0
mov
iret
and
cli
inc
cmp
add
inc
pop
lea
mov
add
mov
mov
add
inc
data16
clc
int3
cmp
je
push
pop
xchg
data16
lea
jb
jmp
call
clc
xchg
mov
or
lea
push
inc
jge
mov
fdivs
incl
xor
xchg
ret
xor
cmp
data16
rolb
add
dec
xchg
push
jmp
push
add
add
mov
clc
dec
xchg
cmp
jne
xor
jmp
add
jne
call
clc
xchg
sti
add
add
xor
pop
mov
jmp
mov
cmp
cmp
lea
jle
jae
mov
lcall
inc
push
lea
mov
int3
push
xchg
add
add
inc
add
cld
mov
aam
xchg
mov
testb
mov
hlt
add
mov
decl
incl
mov
call
je
js
lock
mov
mov
sbb
clc
add
mov
rorb
dec
xchg
mov
in
jge
cmp
clc
pop
fistl
clc
add
mov
mov
mov
adc
add
adc
pop
sbbl
ret
cmp
mov
add
add
sub
or
add
mov
push
push
clc
addl
out
add
jmp
cmp
jmp
je
mov
inc
add
add
add
pop
pop
push
inc
in
pop
in
cmp
xor
leave
call
in
in
dec
push
test
add
leave
inc
test
add
add
dec
push
mov
hlt
push
dec
leave
mov
clc
cmovge
mov
clc
popl
push
add
push
xor
cld
push
inc
add
pushfw
add
add
int
mov
add
cmp
jne
xor
jmp
add
mov
or
mov
mov
mov
or
shl
icebp
addb
or
or
stc
shll
xor
inc
xchg
add
add
mov
test
sub
jmp
mov
lock
lea
mov
or
leave
add
dec
dec
test
paddb
add
dec
mov
mov
or
dec
xor
mov
adc
mov
call
mov
push
clc
or
push
lret
mov
mov
xor
cmp
lsl
call
or
dec
or
inc
xor
in
add
inc
pop
xor
testl
dec
adc
inc
xor
jne
mov
mov
movl
clc
dec
push
ss
pop
aad
xlat
orb
mov
push
clc
ret
xor
xor
js
dec
push
mov
lock
lret
jne
mov
enter
lret
into
out
dec
dec
jmp
xor
xor
mov
sub
add
or
dec
mov
xor
jb
add
dec
pop
mov
cld
mov
call
stc
add
pop
leave
add
in
mov
xor
movl
mov
xor
pushf
inc
cmp
clc
mov
ljmp
push
push
push
push
push
xor
mov
add
mov
clc
lret
cmp
clc
cld
jne
xor
xor
or
add
hlt
dec
dec
je
xor
xor
add
add
rol
mov
in
inc
enter
icebp
mov
clc
lock
enter
lret
inc
jne
mov
cld
dec
enter
popf
sti
xor
mov
mov
xor
xor
mov
mov
push
shr
in
cmp
add
pushf
mov
call
xor
dec
inc
mov
pushf
into
mov
in
call
pop
or
or
or
push
inc
cmpxchg8b
leave
loopne
test
mov
aad
xlat
xor
add
and
mov
leave
sti
inc
decl
mov
clc
dec
iret
xor
jb
add
inc
mov
xabort
loopne
ljmp
mov
clc
lock
dec
mov
loopne
incl
mov
hlt
jne
mov
in
dec
or
jb
add
xor
add
mov
mov
sbb
nop
mov
addl
mov
jne
mov
pushf
push
mov
xor
add
lret
add
rorl
mov
mov
mov
fimuls
mov
xor
mov
or
dec
add
or
out
loopne
jmp
lret
xor
je
mov
mov
sbb
mov
fmuls
mov
mov
mov
sbb
sbb
add
movl
leave
mov
push
mov
add
mov
or
mov
or
inc
add
in
add
mov
adc
xor
adc
inc
popf
mov
push
add
cmp
pushf
mov
dec
fwait
dec
jmp
or
sbb
or
dec
lret
dec
rcl
lret
inc
or
sar
lahf
inc
mov
inc
or
iret
add
mov
adc
inc
add
add
dec
mov
mov
ret
inc
add
push
or
test
test
clc
pushf
inc
mov
lock
inc
mov
test
mov
mov
sbb
scas
dec
mov
xor
jb
add
add
add
mov
or
mov
adc
inc
mov
or
inc
inc
cmp
hlt
inc
jne
mov
inc
bound
clc
push
inc
inc
cmp
cmp
dec
mov
push
idivl
or
inc
inc
add
push
loopne
mov
or
xbegin
mov
or
mov
hlt
inc
inc
mov
xor
add
adc
inc
clc
xor
add
or
dec
test
clc
jb
mov
clc
pushf
inc
mov
xor
shr
add
hlt
mov
push
xor
test
clc
mov
mov
clc
mov
xor
mov
hlt
shlb
clc
fmull
mov
in
icebp
dec
decl
loopne
test
clc
dec
inc
mov
in
dec
push
xor
push
mov
push
mov
clc
cmp
inc
test
add
add
jne
lea
cmc
adc
inc
inc
xor
jb
add
inc
rorl
xor
mov
adc
mov
ret
push
push
lea
cli
add
or
mov
xor
mov
add
jne
lea
lods
psubsb
cmc
lret
inc
xor
add
inc
inc
mov
xor
test
clc
dec
inc
xor
setl
lret
int3
rorl
add
add
lea
lea
mov
xor
bswap
rorb
roll
add
xor
pushf
inc
jnp
mov
lock
lret
xor
mov
loopne
test
xor
mov
mov
mov
ret
add
dec
adc
add
inc
rcll
mov
xor
jb
add
mov
or
add
cmp
jne
mov
mov
xor
mov
mov
mov
xor
jb
add
add
mov
xor
mov
or
xor
mov
mov
xor
jb
add
enter
add
add
inc
mov
mov
add
dec
mov
add
cmp
add
mov
call
xor
mov
in
rorl
iret
mov
xor
add
enter
inc
mov
or
or
mov
cmp
add
roll
mov
or
xor
mov
mov
xor
mov
xor
mov
in
or
mov
xor
inc
or
iret
add
cmp
jge
mov
in
add
mov
mov
clc
test
std
iret
decl
xor
mov
in
enter
inc
mov
or
jmp
push
decl
xor
push
jne
mov
in
add
dec
test
dec
add
cmp
or
mov
dec
push
lea
xchg
mov
call
inc
mov
or
mov
iret
movsb
mov
push
xor
cmp
jne
lea
lods
dec
call
cmp
cmp
decl
add
fadds
mov
lock
inc
test
xor
add
sbb
xor
rdpmc
testl
or
mov
rolb
iret
cmp
cmp
xor
decl
mov
add
mov
jmp
orl
pop
inc
pop
mov
loopne
mov
push
rorl
push
add
inc
push
popf
dec
xor
add
adc
adcb
add
or
fadds
call
cmp
dec
mov
ret
mov
adc
add
add
mov
movsb
push
inc
add
adc
xor
add
add
mov
incl
mov
push
inc
decl
call
mov
mov
xor
lea
adc
add
dec
xorb
add
pcmpeqw
mov
pop
push
leave
or
xor
in
adcl
xor
push
dec
in
or
inc
inc
mov
push
and
mov
jb
add
inc
mov
or
jl
sbb
dec
xorb
add
xor
mov
add
dec
dec
adc
push
sbb
inc
push
decl
mov
or
mov
test
jge
xor
pushf
or
push
or
inc
or
jb
call
mov
mov
adc
and
lea
or
ret
je
sbb
mov
mov
je
pop
and
push
and
and
incb
and
pop
adc
in
ret
mov
pushf
incb
jge
mov
cmp
adc
push
decl
adc
mov
into
scas
mov
das
inc
jne
and
and
lea
jb
xor
adc
xor
jne
sbb
.byte
inc
pop
pop
