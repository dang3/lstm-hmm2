push
mov
sub
xor
mov
xor
mov
mov
or
mov
movl
jmp
mov
ja
jno
mov
js
repz
jl
jl
jle
jl
xlat
cmp
ffree
pop
push
add
lcall
adc
inc
pop
add
fcmovnbe
add
adc
out
outsl
or
test
sub
ds
add
rorl
jmp
mov
dec
in
dec
call
mov
and
jnp
ret
nop
sub
out
bnd
popa
xlat
and
add
sbb
outsl
insl
jp
cmp
jno
cmp
or
mov
pop
push
adc
jge
inc
dec
aaa
adc
ja
sbb
cmp
ljmp
mov
fiadds
inc
les
xchg
add
and
addl
sub
xchg
out
adc
out
or
jo
shlb
hlt
cmpsb
inc
in
addb
mov
mov
es
outsl
test
add
loope
out
popf
out
and
or
mov
xlat
mov
mov
int
out
fadds
mov
repnz
and
imul
sbb
loope
xchg
out
jbe
jle
mov
nop
mov
push
pop
sub
dec
mov
dec
pushl
cmp
cmpsl
jo,pt
push
push
and
mov
adc
mov
testb
out
jbe
and
mov
jl
jmp
into
sbb
jle
pusha
mov
or
lods
lret
add
jp
outsl
mov
daa
push
popa
jb
mov
fidivrs
xor
cli
jmp
xchg
imul
jnp
sahf
mov
rcll
hlt
ss
xor
mov
xchg
lods
xor
push
scas
ret
lods
xchg
movsl
int3
stos
lret
lret
sub
inc
sbb
xchg
stos
scas
fs
daa
and
mov
call
mov
push
add
shlb
incb
mov
adcl
or
xchg
shlb
sub
pop
fcoml
repnz
outsl
outsb
pop
fdivrs
xchg
negl
sti
insl
mov
adc
subb
add
test
push
call
or
ds
pop
lods
cli
call
and
arpl
int
xor
lret
aaa
je
lret
jae
sub
adc
xchg
aad
loop
pop
sti
pop
lcall
pushf
add
lds
mov
push
adc
inc
mov
lahf
jb
nop
or
cwtl
std
leave
sub
dec
sub
add
jnp
inc
jecxz
push
add
adc
es
xor
cli
sti
mov
into
mov
mov
push
or
push
add
mov
and
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
push
push
call
jmp
push
or
mov
not
add
adc
mov
sbbl
lea
mov
mov
xorl
mov
xor
add
movl
cmpl
je
cmpl
jne
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
orl
movl
xor
lea
neg
mov
mov
mov
xor
neg
add
mov
andl
xor
add
inc
mov
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
mov
sbbl
mov
decl
mov
mov
movzwl
sbbl
jmp
mov
adc
adc
jne
arpl
insl
adc
jl
addr16
jl
mov
pop
mov
add
js
pop
loopne
inc
aaa
ja
mov
sub
stos
lods
jne
sub
add
adc
push
test
jns
cmp
cs
add
aam
adc
mov
xchg
mov
push
adc
jo
jecxz
imul
mov
sahf
mov
out
repz
jecxz
icebp
push
xor
and
inc
cmp
and
fisubrs
xchg
dec
and
fiadds
cli
pushf
pop
mov
lds
mov
pop
add
lods
pop
push
inc
shlb
xchg
int3
aad
cmp
xlat
dec
sbbl
arpl
aas
xchg
mov
push
incb
mov
or
mov
cmp
fwait
dec
insb
js
pop
mov
popa
rclb
push
insl
ja
ja
cmpb
push
repnz
movsl
push
int3
cmpsb
add
cmpsl
cmp
jecxz
out
adc
pusha
inc
adc
insb
mov
dec
outsl
mov
fcoml
mov
pop
dec
outsl
int
push
leave
jecxz
adc
mov
and
xlat
xor
inc
xlat
in
push
inc
pop
mov
mov
mov
xor
mov
cmp
clc
test
shll
mov
push
push
mov
sub
and
daa
jge
add
pop
out
insl
inc
pusha
mov
jo
push
xor
jmp
jb
fs
sahf
mov
inc
mov
lds
pop
rolb
gs
das
sbbl
mov
loop
push
push
sbb
and
inc
lods
test
jbe
out
mov
add
in
cmpsb
shlb
xchg
arpl
dec
sbbb
repz
insb
pop
and
lock
dec
loope
lahf
pop
imul
ss
ret
ret
repz
repnz
dec
xchg
inc
call
adc
xor
negl
mov
inc
fldl
mov
adc
cwtl
das
dec
sahf
das
and
flds
and
push
mov
inc
pop
push
jnp
punpckhdq
inc
rorb
sub
lods
push
cld
jg
arpl
lcall
fcoms
xchg
gs
mov
loop
fdivrs
jae
cmp
push
and
jae
ja
aad
clc
xorb
scas
cli
jb
clc
aad
push
sahf
and
add
pop
lcall
pop
pop
call
pushf
test
add
xchg
xor
cmc
aaa
ja
or
sub
das
dec
pop
xor
cltd
adc
scas
les
pop
je
mov
ss
popf
xchg
sub
adc
cltd
push
aad
push
add
mov
add
mov
mov
xorl
mov
xor
add
cmp
movl
jne
mov
add
mov
orl
xor
add
cmp
jne
sbb
mov
movl
cmpl
je
cmpl
jne
pushl
pushl
push
push
call
xor
add
dec
mov
jmp
adc
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
pushl
call
jmp
xor
add
mov
mov
mov
jmp
xor
stos
cmc
pop
push
mov
lret
inc
adc
dec
jnp
jl
jle
jl
lds
aad
dec
push
push
push
stc
and
int
add
adc
cmc
ds
and
dec
lcall
loopne
mov
inc
vcomiss
sub
mov
loop
pushf
in
shrl
mov
fdivrs
call
test
and
jmp
aad
dec
and
iret
lock
out
xchg
cmp
sub
pop
adc
imul
mov
and
push
gs
mov
dec
insl
aam
loopne
test
push
xchg
aas
xchg
leave
test
push
out
jb
fldt
or
bound
adc
add
push
jns
or
lahf
mov
pop
arpl
loopne
jns
mov
fcmovnb
pop
ss
sub
mov
sub
ficoms
adc
aaa
out
xchg
add
call
iret
adc
loopne
cmpb
out
xchg
sti
insl
push
inc
imul
ljmp
js
jp
pop
cmp
fwait
out
pop
jmp
push
push
add
push
lret
mov
dec
movsb
xor
es
inc
mov
lea
jnp
ret
and
push
mov
push
fwait
cmpsl
add
pushf
cmp
cmpsl
stos
add
pop
shlb
popa
cli
mov
dec
std
and
js
adc
enter
loope
xor
cmp
test
pop
je
xor
lock
lds
sbb
jmp
cmp
and
fists
jecxz
push
pop
sbb
imul
lods
ret
adc
aad
jg
jl
fimull
push
mov
cmp
out
sahf
scas
mov
clc
xor
xchg
xor
pop
fnstsw
dec
mov
out
ss
test
popa
xchg
out
test
push
xorb
adc
push
dec
jno
insb
adc
rol
fisubl
add
shll
divb
jl
imulb
xchg
vmaxpd
mov
stos
push
sahf
push
lcall
dec
push
sahf
aaa
arpl
adcl
xchg
pop
push
sub
es
push
sarb
aaa
jne
pop
pop
ja
cmp
pop
or
shlb
dec
mov
dec
sbb
push
mov
add
dec
mov
inc
and
test
jo
or
cld
and
call
ljmp
sbbl
jbe
push
int
ljmp
cmp
leave
lods
mov
test
and
mov
add
add
sub
xor
ds
push
ja
test
pop
xor
mov
sub
add
jmp
call
addr16
jb
popa
xchg
and
mov
jl
addr16
jl
push
xchg
shl
jg
xchg
and
xor
inc
mov
out
jmp
sbb
jae
mov
loopne
fldcw
das
jae
sbb
mov
insb
sbb
int
insl
insb
and
pop
outsb
aam
daa
adc
cmc
in
and
stos
stc
scas
out
jp
xchg
sub
mov
ss
ss
push
dec
pop
pop
push
stos
jno
stc
pushf
outsb
sbb
sub
les
test
xchg
or
inc
mov
subb
add
or
mov
repnz
jns
add
in
sub
test
cmp
jecxz
pop
add
je
ljmp
mov
cmpsl
cmp
or
aam
inc
fstpl
add
shrb
ret
push
aad
inc
in
add
sub
rol
sahf
or
mov
iret
roll
test
cmpsl
mov
sti
or
je
movsb
adc
cwtl
push
mov
or
mov
jne
xchg
mov
fwait
stos
mov
mov
insb
outsl
es
pop
sahf
mov
cmp
sarb
inc
xor
enter
lret
dec
out
outsl
and
or
outsl
sti
mov
mov
shlb
ds
ja
jno
or
lods
fcomi
mov
sbb
pop
outsl
nop
in
mov
push
mov
pop
xchg
pop
and
add
arpl
or
sbb
fs
mov
jne
and
cmp
insb
adc
mov
mov
out
mov
scas
cltd
mov
les
pop
mov
or
push
or
sub
rcrl
sti
add
scas
lret
cmp
imul
xchg
leave
pop
push
and
movsb
jno
add
and
sub
mov
mov
fnstsw
xchg
and
lret
cmpsl
mov
push
cmpsl
pmullw
and
test
mov
lea
jp
clc
sub
cwtl
cs
inc
push
xchg
xchg
lea
fisttpll
shrb
push
mov
cmp
or
dec
inc
ss
cmpb
pop
mov
addl
inc
aad
pop
and
sbb
add
sbb
push
in
inc
out
pop
push
push
lret
pop
fadd
inc
mov
push
es
das
ret
bound
xchg
add
decl
out
call
push
adc
push
int3
sarb
jno
mov
cmp
jmp
inc
fldcw
cmpsb
in
je
fisttpl
and
cmc
push
and
test
mov
mov
mov
movzwl
add
mov
mov
jmp
adcb
pop
andl
push
cwtl
add
jle
jl
test
cmpsl
push
mov
aam
adc
aam
fst
shrl
cmovle
push
loope
outsl
sbb
insl
inc
push
cmp
iret
jecxz
mov
shll
add
pop
movsl
stos
fsub
and
and
out
cld
dec
stos
fwait
jmp
in
push
cmp
lods
data16
test
ret
sub
add
dec
mov
cmp
jb
cmp
mov
addr16
inc
sbb
mov
mov
push
and
adc
pop
aad
pop
aad
in
loopne
cmp
aas
lock
mov
mov
sbb
sbb
push
pop
xlat
and
jbe
or
cmp
cmp
push
and
cmp
pop
rorl
inc
out
dec
pop
xlat
test
fs
sub
pushf
cltd
arpl
dec
outsb
push
rcrb
icebp
inc
sbb
xor
scas
mov
inc
sti
cltd
pop
js
stc
dec
repnz
add
in
mov
loope
in
lret
fwait
fs
jbe
popl
push
fs
sbb
cwtl
mov
lods
outsl
add
sub
ja
enter
pushf
xchg
in
jne
push
imul
sub
mov
mov
lret
fadds
xchg
call
cmp
sbb
sti
repnz
jno
mov
sub
mov
repz
cli
ficompl
cmp
pop
mov
lret
jnp
jmp
aam
fldl
and
fisubl
push
pushf
popf
rcrb
cltd
test
mov
pop
sub
scas
push
sub
xlat
dec
popa
and
enter
push
std
out
out
adc
aad
rcr
pop
xor
sbb
nop
dec
in
pop
cmpsb
xor
aas
push
push
test
jno
pop
cs
xor
and
gs
lock
lahf
jle
inc
jae
cld
sbb
mov
inc
xchg
insb
outsb
fdivl
mov
in
and
into
hlt
sbb
push
adc
mov
mov
enter
sub
cwtl
sub
movsb
test
fs
inc
into
loope
mov
outsb
pop
mov
out
repnz
mov
sbb
es
test
test
bound
add
push
and
cmp
pop
mov
adc
xor
and
sbb
lret
int
pusha
cmp
and
add
adc
out
fisttpll
ss
fwait
adc
mov
jo
lcall
inc
jbe
aaa
lods
mov
fadds
loope
cmp
add
jmp
pop
pop
mov
xor
lea
xor
sub
mov
movzwl
cmp
mov
movzwl
jg
xor
sub
sub
mov
jmp
jmp
pop
pop
dec
pop
push
xor
push
sti
rcrl
addl
jl
jle
jl
mov
add
pop
fs
mov
xorb
pop
and
xchg
push
outsl
int
mov
les
and
ret
mov
mov
mov
add
pop
aas
outsl
pop
xor
mov
cmp
aaa
and
inc
lret
out
mov
add
mov
sub
dec
xchg
mov
xchg
push
out
divps
inc
cmp
je
rcll
mov
je
and
sbb
mov
insl
pop
jo
lret
xor
and
mov
lea
in
pusha
jno
jo
mov
and
daa
cmpsb
xchg
into
gs
dec
data16
pushf
mov
add
shlb
rorb
test
xor
cs
and
or
mov
das
add
pop
xchg
jge
mov
into
xor
jge
mov
xchg
mov
push
xor
xor
sub
lods
cmp
xchg
mov
jl
pop
scas
inc
shlb
and
movsl
xor
pop
scas
imul
jo
adc
daa
movsl
mov
inc
in
push
inc
add
add
fcompl
leave
daa
sub
push
jl
sub
pop
imul
xchg
inc
push
scas
pushl
lahf
js
mov
int3
stos
mov
movsb
dec
test
fimull
dec
sub
and
and
push
mov
leave
mov
cmp
cli
add
addb
addr16
in
mov
insb
stos
test
mov
mov
loop
mov
lret
mov
mov
sbb
negl
mov
dec
call
and
inc
je
movswl
mov
jle
cmpsl
xchg
aad
pop
mov
sbb
jnp
mov
movsb
stos
dec
aam
loope
jnp
pop
push
or
and
dec
push
out
lods
inc
sti
mov
bnd
pop
test
xor
ljmp
xor
jns
aaa
cld
loope
sbb
test
insl
sub
aas
mov
add
mov
call
pusha
and
sbb
xchg
test
jge
adc
cmpl
and
insl
mov
hlt
add
inc
icebp
in
movsl
repz
mov
push
lea
outsl
pop
aas
xor
xlat
inc
cltd
insl
sbb
cwtl
xor
mov
push
data16
in
cmp
cmp
aaa
fwait
fs
aaa
out
and
push
inc
out
and
mov
dec
cwtl
adc
xor
daa
mov
cs
mov
dec
sub
insl
sbb
xor
lea
mov
mov
cmp
jmp
mov
jne
adcb
test
jl
jle
jl
dec
sub
pusha
push
mov
xor
cltd
fstp
push
daa
imul
mov
call
xchg
ret
jl
jae
int3
imul
add
test
fiaddl
je
dec
and
stos
jne
mov
pop
jo
out
pusha
cmpsl
fs
jg
mov
mov
mov
inc
out
hlt
add
dec
jg
or
std
sbb
lret
bswap
je
mov
jl
lret
insb
mov
fstps
push
out
mov
in
adc
jo
fcoms
sub
lret
shrl
loope
popf
in
nop
dec
push
sbb
test
cld
fwait
pop
ret
inc
cld
inc
or
nop
lcall
popf
xor
mov
sbb
andb
add
aas
fwait
das
jmp
mov
out
inc
add
cmp
dec
negb
mov
inc
lods
mov
or
xchg
mov
addr16
xchg
sbb
pushl
mov
add
fstpl
inc
mov
pop
dec
je
pop
popa
pop
inc
lock
jno
mov
inc
mov
jg
stos
inc
dec
jnp
sbb
push
fs
hlt
sub
pop
jns
mov
inc
adc
out
sahf
inc
std
or
add
test
pushf
sub
or
inc
mov
jno
mov
stos
push
sbb
fwait
and
insb
cmp
push
aad
sti
and
xchg
jecxz
lods
mov
pop
es
dec
pop
inc
in
push
sahf
out
and
sbb
pop
shrl
mov
push
push
sbb
sarl
xchg
leave
and
lock
fistpl
pop
ss
jae
sub
dec
mov
or
and
pop
mov
dec
xor
test
les
arpl
imul
insl
imul
arpl
data16
pop
popf
jl
mov
and
pop
and
mov
rorb
sti
mov
and
and
jbe
das
inc
sbb
mov
aas
adc
push
subl
pop
sbb
gs
pop
loopne
xchg
xor
jns
loope
fcomps
or
adc
les
call
lahf
es
and
mov
adc
inc
mov
aas
pop
mov
mov
push
popa
lahf
cmp
jb
mov
pop
aad
in
cmp
movsb
add
int3
mov
add
or
mov
ret
xor
xchg
jo
rorl
rcrl
and
push
mov
fwait
mov
out
push
jp
pop
sar
in
hlt
call
xor
pop
loope
mov
and
or
inc
pop
inc
mov
push
je
mov
movl
jmp
mov
mov
xor
add
cmp
je
mov
mov
mov
jmp
in
outsb
out
jae
std
jne
lds
int3
xchg
repnz
pop
fisttpll
jl
addr16
jl
cmp
aaa
adc
jmp
add
test
inc
enter
push
rorl
pop
push
mov
xor
shr
pop
push
sub
jb
mov
pushf
sub
dec
push
add
xchg
jb
xchg
sbb
xor
repz
idiv
sti
popa
loop
into
push
mov
mov
imulb
repnz
mov
sarl
mov
mov
stc
dec
push
imul
int3
inc
into
mov
in
xchg
inc
push
lcall
sbb
jg
push
pushf
out
je
sarl
dec
mov
add
add
popf
stos
cli
jno
pop
stos
pushf
inc
arpl
push
in
loop
jg
ret
adc
xchg
or
inc
push
inc
adc
aam
sbb
jmp
jbe
sbb
call
aas
movsl
cmpb
mov
leave
cmp
dec
xchg
fwait
pop
js
add
pop
jp
sbb
lcall
movsl
xor
shll
mov
mov
gs
or
je
inc
pop
ds
stc
icebp
jmp
fwait
sub
fbld
jns
sub
jmp
in
and
jg
cmp
adc
lret
scas
int3
or
ret
xchg
jg
adc
sahf
in
xchg
add
cmp
sub
or
mov
sub
cmpsb
sbb
hlt
jecxz
xor
sbb
sbb
inc
jecxz
jle
fsubl
clc
sub
into
pop
xor
inc
psubb
mov
into
test
lock
sbb
add
and
inc
insb
jae
or
or
jmp
in
mov
cmp
jmp
push
pop
insl
lcall
mov
xchg
push
pushf
fsubs
add
jne
sub
rcll
xchg
pop
inc
mov
and
lods
push
xchg
mov
leave
pop
adc
fistl
lds
jl
out
fs
jecxz
cmp
pop
iret
popf
jb
orl
imul
fnstenv
cmp
not
stc
jno
cmp
lret
push
mov
ss
xchg
pop
sbb
add
pop
pushf
cld
jmp
sbb
scas
inc
add
and
shlb
mov
ficomps
stos
movsb
xchg
sub
stos
out
sub
mov
les
push
pop
sub
in
in
repz
add
pop
sub
xchg
mov
dec
cwtl
cli
xchg
or
xor
add
outsl
mov
push
insl
mov
sahf
add
pop
xchg
mov
mov
mov
loope
jecxz
xchg
mov
inc
mov
frstor
or
js
add
add
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
xor
add
cmp
je
mov
mov
add
mov
mov
mov
mov
mov
mov
add
xor
cmp
je
mov
mov
xor
add
mov
jmp
xorl
jmp
mov
mov
mov
mov
mov
mov
jmp
add
and
std
bound
or
sub
push
les
jl
jl
xor
pushl
iret
jns
popa
xchg
sbb
mov
adcl
xchg
sub
iret
inc
inc
pop
cmp
lcall
adcb
adc
push
add
mov
dec
cmp
jo
stos
js
cmpsl
rolb
subl
loope
push
shll
test
test
cwtl
push
dec
in
mov
test
adc
test
dec
fxch
cs
negl
and
cmp
loopne
loopne
cmp
lahf
mov
mov
pop
cmpsl
cmpsb
aas
mov
mov
call
divb
loopnew
sbb
cltd
sbb
std
add
sbb
xchg
jns
cld
jmp
aam
rorl
mov
testb
pusha
out
test
and
mov
imul
push
mov
mov
pop
push
pop
fsts
sub
inc
int3
prefetch
or
jecxz
add
nop
mov
mov
dec
ret
in
lea
xchg
lods
les
xchg
nop
xchg
pop
les
add
jne
outsb
xor
jp
sub
or
cs
mov
pop
ss
ja
xchg
fcoms
and
test
addb
pop
jmp
sbb
xlat
xchg
fiaddl
xacquire
sub
xor
pop
push
fmul
insb
scas
sub
add
mov
jo
ficomps
scas
xchg
fwait
dec
ss
jmp
fidivs
stos
pop
stc
lods
xchg
lock
inc
lret
js
jns
aam
test
insl
jecxz
insb
daa
dec
mov
and
pop
pushl
leave
jns
loope
insl
jbe
ljmp
orb
enter
and
and
jo
lods
lret
insl
mov
imul
adc
mov
dec
xor
mov
das
stc
jge
push
movsl
xchg
push
test
rcrb
fcomip
cwtl
mov
sarb
sbb
nop
mov
mov
jno
and
lcall
arpl
dec
loopne
fimull
sbb
xor
cmpsl
lret
xchg
fcoml
lcall
movsl
jbe
movsb
mov
jp
call
outsb
sub
push
out
adcl
leave
rorb
ret
dec
pop
insb
and
xchg
xchg
push
cmp
mov
mov
out
ljmp
dec
cmp
xchg
test
arpl
add
xchg
imul
pop
fucomi
xchg
jecxz
sbb
icebp
ja
sub
xchg
sahf
sbb
adc
pop
sub
adc
or
mov
scas
fisubrl
inc
sbb
adc
testb
sub
jne
call
mov
cmp
je
mov
mov
pop
pop
jmp
imul
cmc
push
jge
lcall
mov
das
push
jl
addr16
jl
sub
and
inc
sahf
push
inc
faddl
inc
adc
lods
loope
enter
sbb
addr16
insb
push
movsb
sbb
pop
xor
mov
inc
cmp
jmp
lahf
stc
int3
aam
int
lcall
pushf
or
xchg
adc
adc
shll
and
push
xor
and
mov
out
int
das
mov
cmp
call
sub
aas
mov
mov
popf
pop
jmp
push
adc
lods
sub
add
int3
outsl
or
dec
mov
clc
mov
stc
fwait
cmc
mov
and
aad
iret
or
aad
movsl
pop
mov
cmpsb
clc
push
sarl
mov
and
or
or
imul
mov
mov
enter
inc
xchg
sahf
sub
cmp
nop
sbb
repnz
pop
mov
jb
and
pop
xor
adc
mov
sbb
inc
jecxz
xor
shlb
in
mov
push
int3
and
dec
cmpsb
loop
negl
insb
out
lret
and
insb
inc
sub
jle
cwtl
in
inc
std
into
into
stos
pop
es
lods
mov
cli
cmp
ljmp
adc
cwtl
push
jl
mov
repnz
cmp
pop
adc
test
das
mov
or
popf
adc
pop
jo
mov
xor
xor
sbb
jmp
sahf
xchg
dec
jecxz
hlt
mov
pushf
les
push
daa
sbb
movsb
hlt
fld
jge
sub
lods
fs
enter
jmp
mov
mov
sub
mov
out
cmp
lret
testb
dec
imul
sbb
adc
in
cmp
test
bound
arpl
cltd
add
aas
pushf
push
xchg
xor
mov
jmp
je
insl
out
xorl
into
jo
lds
fdivrp
fs
mov
incl
adc
jae
mov
jge
xlat
sub
pop
arpl
cmc
mov
pop
sbb
rolb
pop
loope
xchg
adc
test
sti
test
adcb
shlb
test
add
or
mov
lods
push
aaa
mov
push
mov
loopne
ret
dec
or
or
repnz
out
cs
mov
xor
and
movsb
addr16
and
ds
pop
add
loopne
mov
lds
and
ret
ret
sahf
mov
push
lock
leave
ret
push
mov
sub
leave
ret
push
mov
push
push
neg
mov
andl
mov
inc
mov
cmpl
jne
push
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
sbb
movl
movl
mov
andl
xor
or
inc
mov
cmpl
jne
push
push
pushl
push
push
push
call
cmpl
jb
movl
cmpl
je
cmpl
jne
push
call
cmpl
jne
xor
xor
dec
mov
mov
dec
mov
jmp
and
push
mov
xor
mov
adcl
push
subl
mov
add
cmp
je
jmp
adc
icebp
popa
mov
push
inc
rcll
jl
jg
jl
inc
test
sbb
inc
cld
mov
sub
xor
test
out
sbb
movsb
sbb
push
les
cwtl
mov
outsb
fldt
ja
fucomp
add
in
in
insl
xchg
jno
insb
lsl
aas
dec
scas
dec
fs
xchg
xchg
in
fwait
xlat
or
inc
loope
insl
jle
mov
inc
aas
pop
stos
adc
inc
arpl
add
psllw
stos
adc
bound
in
nop
popa
cli
insl
pop
sub
sbb
test
loope
out
mov
and
xchg
mul
jae
and
mov
adc
push
mov
outsl
mov
int3
mov
add
pop
pop
test
cmp
lods
xchg
add
mov
stos
mov
out
add
enter
mov
ret
les
popf
dec
mov
in
lods
pop
inc
mov
mov
arpl
inc
mov
jge
pop
outsb
nop
pushf
fsubl
cld
xor
gs
xchg
jno
mov
inc
sbb
add
pop
push
ror
adc
xchg
xchg
sbb
sub
stos
or
push
xchg
jnp
sbb
mov
decb
cmc
xor
pop
mov
dec
mov
jle
jb
mov
jne
sbb
popf
dec
inc
mov
mov
cs
clc
xchg
xchg
in
push
test
mov
arpl
inc
jb
aaa
xchg
lret
xchg
push
cmp
add
xor
push
idivl
add
ljmp
shl
mov
out
mov
jno
add
sub
aas
inc
mov
sbb
or
xchg
inc
pop
aaa
cmp
push
or
imul
adc
mov
mov
xor
mov
sub
add
xor
add
cmp
ja
push
jmp
mov
jmp
sbb
mov
outsl
call
ja
sbb
jl
cld
adc
mov
lds
pop
mov
push
mov
in
daa
or
sbb
push
jle
pop
push
into
test
into
js
frstor
cli
sbb
decb
les
stc
mov
decb
inc
mov
test
hlt
pop
push
push
xchg
inc
aaa
lahf
test
cltd
aas
in
sbb
mov
insb
jle
and
sbb
xchg
xlat
pop
adc
insb
jmp
xor
sbb
lods
je
jp
push
pusha
mov
hlt
scas
pop
push
out
data16
test
and
xchg
pop
xchg
push
xchg
sahf
fidivs
mov
lds
shrl
add
xchg
in
fwait
repz
mov
stos
cli
into
movsl
call
fldcw
dec
mov
aaa
loop
je
repz
enter
mov
xchg
dec
jmp
mov
jp
cmp
stc
movsb
rcl
jns
scas
and
mov
inc
test
and
xor
xor
pop
mov
fistpl
inc
andl
mov
dec
nop
rclb
hlt
in
sub
jnp
jne
pop
inc
jae
clc
mov
jge
sarl
mov
fcmovb
gs
outsb
jbe
adc
cmc
mov
gs
inc
adc
arpl
dec
in
clc
std
ficoms
int3
jns
sbbl
add
push
mul
popa
enter
lcall
rcrb
fiadds
xor
cs
jle
test
cmpb
dec
xor
mov
lods
and
int
je
jp
adc
stos
in
mulb
roll
and
cli
adc
mov
inc
shll
fisubs
add
sub
inc
mov
popf
dec
sbb
cltd
jp
popa
adc
jne
inc
clc
jmp
sarb
sarl
sti
lahf
jae
je
jl
insl
jg
jl
xchg
dec
push
add
ret
push
mov
fmull
cli
mov
in
int
mov
mov
insb
add
inc
arpl
fisttps
xchg
add
cmp
pusha
lret
hlt
pop
loopne
clc
xchg
out
pop
faddp
mov
push
cmpsl
lahf
aas
pop
add
pop
fwait
call
ss
rolb
push
ljmp
sub
adc
lds
sbb
xor
movsb
les
adc
sbb
outsb
nop
pop
jmp
xchg
add
push
imul
icebp
dec
mov
fidivl
jae
mov
std
mov
dec
xchg
ja
fcomp
mov
icebp
rcr
not
mov
and
icebp
xchg
dec
xor
imul
scas
mov
xchg
mov
jae
mov
xchg
mov
mov
cltd
jmp
lea
jge
cwtl
mov
gs
out
jo
js
add
cmp
bound
sub
mov
cmc
sub
cmp
scas
aas
mov
pop
retw
stos
filds
pop
adc
xor
mov
jge
mov
xchg
sub
decl
inc
jno
imul
cmp
aam
repz
mov
leave
and
or
sbb
fdivl
inc
lret
outsl
out
sub
mov
pop
mov
mov
or
push
or
pusha
and
cmpsb
jecxz
cld
dec
xor
clc
insl
mov
cmp
es
movsb
in
jb
jmp
or
leave
xor
mov
shlb
inc
push
ret
loop
les
divb
data16
iret
call
jl
sub
push
sub
lods
xor
test
mov
jmp
addr16
or
arpl
aas
cwtl
pop
shrb
gs
jl
insl
jg
jl
sarb
cmpsl
out
xor
outsl
and
pushf
pop
sub
fnsave
and
inc
mov
add
orl
push
ret
pop
arpl
dec
mov
cltd
pop
or
clc
adc
inc
and
ret
ja
arpl
mov
scas
mov
ss
sbb
adc
inc
gs
add
fildl
cmp
mov
mov
xchg
and
add
push
bound
dec
pop
jnp
xchg
lahf
mov
pop
dec
adc
jo
add
mov
fbstp
jnp
xchg
enter
neg
imul
mov
mov
stc
into
mov
mov
jbe
sahf
xor
pop
stos
mov
test
fs
and
inc
rorl
ret
out
xchg
ja
and
jbe
int
xchg
int
mov
mov
or
pop
in
jo
sahf
xchg
rcl
and
ficoms
mov
adc
sbb
icebp
adc
or
xor
and
repz
sub
sub
jns
mov
je
mov
xchg
sub
mov
xor
bound
push
stos
or
lods
or
pop
pop
mov
lods
test
jg
inc
sbb
rcrl
or
push
sbb
xor
cwtl
push
addr16
add
pop
shlb
testl
shlb
in
icebp
inc
sti
dec
pop
mov
mov
sub
adc
insb
cmc
stc
fstpt
mov
call
cmp
outsb
mov
mov
mov
add
lods
mov
les
xchg
jle
bound
xor
add
jl
into
data16
mov
inc
aaa
out
scas
push
pop
jno
ret
dec
push
adc
js
jmp
pop
xor
add
mov
imul
mov
xor
add
mov
mov
mov
xor
lea
mov
xor
mov
jmp
dec
push
sbb
jae
sti
adc
sti
dec
sbb
jg
jl
push
mull
les
stos
cmp
adc
iret
dec
mov
adc
push
xlat
dec
mov
xor
mov
jnp
push
fnsave
and
enter
inc
stos
shl
mov
addr16
push
popf
stos
mov
mov
fildll
or
push
nop
pop
and
cmp
fistpl
sbb
xchg
sbb
sbb
test
pusha
leave
cwtd
adc
lcall
xchg
xor
out
cmp
outsb
in
jbe
ret
repz
xor
enter
loopne
inc
and
push
loopne
clc
outsb
mov
add
dec
cmpsl
push
lret
stos
mov
adc
scas
jnp
leave
lock
mov
dec
xor
add
lock
or
popf
xchg
dec
dec
sbb
cmp
cmpsb
fwait
jbe
push
stc
daa
pop
add
pop
cmp
frstor
and
repz
mov
in
xlat
pop
je
mov
cwtl
xor
mov
or
test
jg
adc
jne
call
mov
lods
lret
dec
adc
adc
popa
ljmp
mov
and
std
pop
add
fldt
andb
lret
add
pop
ds
fidivrs
ljmp
xchg
jo
std
jl
jmp
out
xchg
pop
notb
fisttps
push
bound
fcomps
das
aam
cmpsb
add
or
dec
fsubrs
push
fsubs
fwait
inc
sti
loope
ret
outsb
bound
mov
shlb
test
rcrb
cmp
dec
insb
and
and
jb
push
inc
xchg
cwtl
and
mov
lret
sahf
mov
psubb
mov
mov
fwait
xchg
pop
inc
sub
push
mov
sub
add
cmp
jbe
pop
mov
pop
pop
leave
ret
push
mov
mov
xor
mov
div
mov
and
jmp
addr16
icebp
jb
insl
add
pop
push
mov
jg
jl
jp
cs
call
mov
insb
mov
jb
ljmp
cmpsl
mov
in
daa
or
mov
adcl
out
mov
mov
in
popl
outsl
cmp
and
lahf
and
push
fs
dec
adc
mov
sub
adc
test
cmp
ret
or
pop
mov
pop
push
dec
adc
jb
jnp
mov
mov
adc
mov
gs
and
insl
push
in
xor
lcall
ss
sbb
aam
jp
sub
xor
loope
rcr
xor
cmp
add
imul
ret
jge
fidivl
sub
inc
data16
mov
aad
xchg
popl
mov
fs
ds
adc
out
mov
das
rcrb
pop
in
jp
in
add
dec
and
mov
rcll
mov
ret
leave
mov
out
cmc
push
and
pop
push
dec
loopne
xor
jnp
xor
mov
ss
bound
push
andb
add
fisubs
fnstcw
cmpsb
push
mov
inc
pop
aam
push
mov
sbbb
dec
pushl
push
adc
or
jge
sti
push
into
lcall
pop
rorl
and
mov
sub
cmp
les
outsl
cmpsl
outsb
orl
es
stos
repnz
lods
push
inc
leave
lea
mov
scas
pop
sbb
xchg
push
push
dec
adc
dec
sub
aas
sub
mov
push
test
sti
mov
mov
pushf
inc
push
and
int3
fistps
aas
hlt
mov
xchg
cli
or
mov
pop
ret
push
mov
sub
xorl
mov
sbb
mov
subl
xor
sub
mov
xorl
add
movzwl
mov
mov
and
movb
sub
lea
mov
adc
mov
movzwl
or
mov
mov
xor
subl
sub
mov
movl
movl
add
mov
sbb
mov
jmp
mov
inc
addl
and
dec
sbb
stos
jg
jl
xchg
jle
loopne
loope
int3
add
cwtl
sti
add
test
repz
pusha
xchg
daa
fpatan
dec
adc
xor
bound
sbb
cmpsb
movsb
inc
fidivrl
push
icebp
xchg
imul
cmp
pop
xchg
xor
or
icebp
addr16
mov
cwtl
rcrl
sub
fimuls
cmpsl
ja
push
int3
in
loope
and
ret
push
pop
nop
decl
and
mov
sub
inc
rol
cmpsl
xor
cmp
mov
xorl
das
mov
sub
je
ds
popa
aam
cmp
insl
scas
jle
push
js
mov
cmp
gs
and
pop
into
push
sub
inc
inc
call
test
lret
nop
and
insb
ss
push
pop
jns
shrb
ljmp
and
or
test
stos
dec
xchg
and
push
lret
addr16
inc
mov
lods
mov
jbe
divl
push
jns
jl
mov
jl
cmp
rorb
lds
and
jno
push
popa
and
mov
loop
jo
int
ret
push
dec
stos
sub
loope
call
dec
pop
mov
aam
adc
imul
je
in
cmp
aam
and
bound
push
iret
push
jbe
mov
push
adc
dec
add
cwtl
ljmp
cmp
xor
jbe
pop
in
lcall
or
inc
inc
add
xor
addl
mov
orl
jmp
sub
mov
mov
cmp
mov
es
stos
jg
jl
and
out
push
adc
idivb
lret
cmp
adc
push
out
push
testl
dec
cwtl
out
psubb
divl
mov
push
pop
imul
pop
lahf
adc
test
addr16
xchg
out
aas
daa
insl
jbe
add
in
rcl
add
adc
call
inc
pop
jg
sbb
mov
daa
sub
and
mov
fs
test
push
test
adc
push
ret
pop
iret
pop
sahf
sbb
push
clc
or
nop
test
add
idivb
cmp
dec
push
popl
lock
xor
jp
aam
jne
xor
fbld
ret
fidivrs
addr16
popa
mov
sub
cltd
icebp
adc
xchg
and
lret
repnz
cmpsb
stos
sarb
scas
ret
out
mov
jno
addr16
lods
sub
mov
test
cmp
dec
jecxz
or
pop
repnz
das
stos
adc
jge
jmp
dec
test
fidivrl
sbb
out
in
push
fnstsw
fsub
stos
inc
loope
fs
ret
loop
dec
aas
push
ja
sti
push
push
or
inc
mov
clc
lods
sub
imul
xchg
cmp
add
sbb
push
push
negl
and
mov
mov
test
jecxz
repnz
dec
in
cmp
lret
dec
sub
cmp
cmp
outsl
in
inc
jecxz
mov
adc
add
add
add
bound
add
push
xor
add
jmp
roll
push
aad
ror
mov
sbb
jl
jg
jl
andl
mov
cwtl
mov
lock
pop
jecxz
xchg
aas
in
mov
fstpl
xlat
out
inc
jg
fmul
and
es
iret
adc
push
addl
data16
aaa
aaa
cmp
pop
out
idiv
push
test
mov
test
sub
fcoml
push
cli
jecxz
jle
in
push
mov
gs
into
shl
icebp
xor
inc
mov
cld
or
fmul
icebp
mov
push
or
sbb
dec
push
jae
outsl
mov
mov
pop
jp
inc
or
mov
enter
mov
mov
mov
mov
mov
pop
mov
or
pushf
xor
loope
xlat
mov
adc
sub
lods
mov
cmp
jo
adc
pop
gs
fwait
jo
call
and
andb
daa
xor
out
jbe
rol
cmp
or
lret
jge
int
fisttpl
sub
mov
das
test
xor
or
nop
mov
cs
jle
std
or
daa
jns
or
xor
sub
loopne
mov
adc
sbb
cwtl
mov
enter
mov
lahf
and
or
das
je
mov
inc
and
mov
in
jnp
add
push
std
dec
pop
in
xor
repnz
adc
pusha
les
mulb
pop
pop
or
rolb
icebp
xchg
cmp
add
dec
xor
add
cmp
jb
sub
mov
movl
cmpl
je
cmpl
jne
pushl
pushl
push
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
orl
mov
xor
xorl
add
cmp
movl
je
sbb
push
or
jmp
and
sbb
push
loope
sbb
mov
stos
jg
jl
sub
lea
push
or
xchg
xchg
push
iret
frstor
adc
test
pop
aad
rcrb
mov
add
jne
scas
and
into
jl
cmpsl
mov
push
inc
jge
adc
push
ror
add
sub
pop
push
xchg
pushf
stos
dec
out
ss
pop
jae
pop
xchg
push
mov
es
push
outsl
pop
sub
scas
popf
mov
cmp
aad
cmp
cltd
cmp
addb
cwtl
jns
push
xchg
fiadds
add
je
pop
cmpl
inc
inc
cs
adc
jg
mov
add
push
js
mov
imul
cmp
cmpsl
xchg
mov
fstp
mov
sub
lahf
xchg
inc
xor
int
popf
repnz
mov
push
cli
add
mov
pop
dec
push
jle
das
add
scas
mov
icebp
pop
mov
inc
push
cltd
lea
ss
lahf
dec
inc
mull
sbb
push
dec
cmp
push
inc
inc
jmp
aam
jle
sub
adc
push
test
jne
mov
movl
in
lahf
ret
jae
fisubs
cmp
hlt
mov
fiaddl
fiadds
fildl
leave
cli
imul
nopl
xchg
das
cmp
xlat
dec
mov
jbe
or
inc
je
cld
das
lret
lods
lcall
int
jge
jns
inc
inc
and
mov
sbb
mov
xorl
xor
movzwl
sbb
mov
addl
add
movzwl
mov
mov
movzwl
xor
xorl
add
mov
mov
mov
inc
cmp
jne
pop
pop
mov
mov
xor
add
mov
mov
jmp
das
or
pop
out
sub
inc
pop
or
jl
or
pop
pop
push
mov
push
lods
mov
push
xor
push
cwtd
outsb
jbe
fwait
dec
movsl
movsb
vmovapd
mov
jnp
inc
pusha
scas
not
jno
push
xchg
addr16
ss
jg
ret
ficomps
dec
push
jno
imul
sub
mov
imul
jb
sbb
repnz
mov
sbb
sub
sbb
packuswb
test
sub
les
fdivrl
out
cld
les
sbb
aas
inc
lods
push
jle
jmp
repnz
pop
lret
cld
cmpsb
push
sbb
cmpsl
add
and
mov
or
mov
add
stc
shl
sti
push
nop
sti
jmp
pop
popf
mov
mov
aam
jecxz
adc
add
cld
imul
add
insl
pop
test
jns
mov
sti
inc
lcall
repnz
inc
fs
test
mov
inc
and
pop
mov
push
ret
sub
add
vpsubusb
jle
add
mov
or
sub
sub
and
pop
mov
sub
sbb
outsb
cltd
imul
mov
sbb
inc
shl
mov
sub
fcomps
cmp
and
sub
mov
jmp
jp
insl
inc
sarl
pop
mov
loope
xor
add
pushf
and
jecxz
mov
push
popf
adc
dec
scas
sti
mov
ror
daa
mov
imul
repnz
mov
xor
hlt
addr16
add
insl
push
or
xor
add
mov
mov
mov
mov
cmp
je
mov
jmp
adc
mulps
pop
jbe
sti
lahf
dec
xchg
mov
sub
das
jl
stos
jg
jl
cmp
pop
mov
fnstcw
enter
mov
xchg
push
adc
lock
nop
push
push
aas
xor
aas
jb
push
enter
mov
pop
imul
popl
jns
pop
outsb
mov
xorb
and
sbb
call
ret
in
jo
aas
jne
mov
push
fdivs
das
cld
push
or
inc
jno
cmp
pop
sbbb
rcrl
hlt
xlat
mov
mov
in
dec
xor
xchg
jecxz
ds
and
mov
je
lret
in
rcrb
mov
outsb
loopne
jno
mov
lods
mov
inc
out
icebp
lahf
push
xor
inc
icebp
enter
push
insb
shll
jo
push
loop
mov
adc
lret
test
pop
cmp
xor
push
in
add
aas
int
notl
and
cmc
cmp
addr16
icebp
in
fcmovnu
lret
xchg
inc
dec
ret
jns
jns
leave
sub
lds
std
ljmp
sub
pop
pop
jne
out
dec
mov
aas
add
ljmp
push
mov
inc
jecxz
mov
outsl
and
popa
lret
fisubrs
cmp
inc
push
dec
add
pushf
push
xchg
add
cmp
into
cmp
xor
scas
inc
push
in
or
jle
mov
jbe
push
inc
outsl
arpl
push
adc
fldcw
ficoml
sub
out
dec
xchg
jo
fidivrs
pop
cmp
cltd
adc
movsb
daa
mov
xor
sbb
mov
mov
cmp
jne
mov
mov
movsbl
xor
jmp
test
xchg
jge
int
add
outsb
jl,pn
stos
jg
jl
push
js
jle
sub
cmp
movsb
repz
imul
dec
ds
mov
xchg
scas
xor
dec
sbb
shll
add
adc
clc
xchg
jmp
cmp
and
cwtl
jno
lcall
int3
pop
push
xor
push
lret
outsl
je
xor
mov
or
xchg
ret
into
xor
cmc
xchg
sub
ret
sbb
cmpsl
addr16
mov
daa
and
and
sbb
xchg
fisubl
pop
scas
test
scas
dec
test
fdivrl
test
mov
xchg
or
cmp
add
mov
pop
imul
lret
jmp
stos
arpl
in
push
dec
mov
dec
out
iret
sbb
sub
sub
cltd
rcrb
orl
test
pop
xorb
mov
push
ja
cmp
or
mov
xchg
pop
sti
cmp
or
mov
das
sbb
jecxz
inc
je
mov
sub
sub
pop
jl
out
lds
addb
sub
add
jg
push
cmp
lods
sub
out
out
xchg
mov
cmpsb
dec
xor
jo
lret
mov
push
pusha
adcl
loopne
cmpsl
stos
push
iret
jl
in
and
sbb
fsubr
adc
push
xchg
xor
push
mov
fldt
jnp
insb
xor
and
mov
dec
adc
in
adc
add
inc
xor
into
mov
cmp
je
movl
lea
mov
mov
addl
mov
mov
xor
jmp
das
dec
sbb
pop
imul
adc
stos
movsl
sub
jg
jl
pop
or
mov
push
sub
jle
push
sarb
pop
cmp
cwtl
pop
bound
ret
xor
in
inc
insb
mov
inc
in
cmp
and
jg
adc
mull
cli
sub
addr16
inc
cmp
push
mov
pop
mov
pop
push
push
aaa
inc
fidivs
fnstcw
jp
mov
decb
decl
mov
push
xor
out
pop
xlat
jp
dec
push
cltd
sbb
dec
scas
push
inc
sub
jge
add
pop
outsl
jbe
pusha
jbe
lret
in
ret
xor
sar
ret
lret
test
add
data16
cld
pop
jmp
loope
jns
cmp
mov
fwait
int
jecxz
jno
repnz
outsb
jecxz
scas
js
jp
test
xor
pushf
popa
jg
and
popa
xchg
sti
insb
xor
fucomp
xor
mov
fmull
pop
xorb
pop
inc
addr16
jae
mov
add
pop
dec
pop
jnp
addr16
out
mov
pop
dec
sarb
jne
ljmp
xchg
sub
movsl
fidivrs
scas
mov
xchg
inc
pop
inc
mov
push
call
je
jno
pop
xor
mov
lahf
addr16
into
pop
sbb
cld
dec
das
pop
push
adcl
in
sbb
adc
lock
sbb
leave
jae
pusha
xlat
arpl
lret
sahf
jnp
in
ret
rolb
jg
pushf
sti
cs
dec
rorl
xor
mov
incl
jmp
mov
xor
mov
add
mov
pop
leave
ret
push
mov
jmp
orl
mov
push
mov
sub
jns
jl
out
lds
xor
fucomp
sbb
in
inc
lods
or
inc
pop
data16
je
addb
push
jb
pop
cmp
cmp
pop
add
icebp
sub
dec
cmpsl
pop
in
pop
xchg
xchg
out
mov
aam
imul
cli
mov
cmpsl
adc
pop
aam
cmp
rol
and
cmp
cmp
jnp
ret
jnp
adc
mov
adc
pop
insl
or
inc
js
imul
add
mulb
lcall
xor
jne
or
inc
cmpsb
dec
neg
cwtl
xor
cmp
mov
sarb
mov
jne
out
xor
pop
pop
fstpl
add
divl
sub
int3
cmp
dec
xchg
nop
fmuls
pop
xchg
shrl
push
sbb
cmc
cmp
mov
xor
jp
ret
xchg
ss
adc
int3
mov
sub
shl
fidivrl
adcl
ljmp
fs
sub
bound
movsl
std
xor
repz
push
pop
call
scas
pop
pop
negl
dec
ret
pop
pop
pop
in
iret
dec
mov
movsl
sub
adc
mov
xor
stc
mov
mov
mov
fldt
and
pop
mov
setbe
push
mov
mov
inc
cmp
cld
js
std
in
dec
fldt
vpcmpeqd
and
notl
mov
xor
adc
xor
adc
dec
aad
lock
xor
xchg
pop
out
adc
or
cmp
imul
incl
popa
andl
push
lea
xlat
es
jmp
into
mov
xlat
jmp
ds
aas
mov
mov
enter
pop
dec
xchg
jle
int3
pop
fwait
movsl
idivb
imul
and
outsb
xor
in
fstpl
pop
dec
sbb
sbb
mov
sub
into
sub
loope
leave
push
inc
outsl
out
iret
sbb
xor
stos
push
mov
mov
jb
sub
in
sub
je
test
cmp
cmpsl
cmpb
mul
sub
popl
cmp
mov
jns
ljmp
inc
cmpsl
outsl
mov
jns
push
xor
out
cmp
xor
or
mov
lahf
test
call
movsl
mov
ljmp
in
test
cmp
addr16
pop
movsl
and
test
adc
test
xchg
adc
shlb
jb
add
xor
inc
cmc
mov
cltd
sarb
pop
in
enter
stc
adc
repz
mov
or
fldl
or
cmpsl
xchg
adc
dec
mov
or
sti
insl
lods
jb
xchg
imul
ljmp
dec
movsb
jmp
inc
iret
fiadds
sti
es
daa
adc
dec
or
insb
fisttps
jp
aas
inc
xchg
xor
sbb
std
arpl
mov
aad
scas
and
sbbl
daa
mov
push
sbb
and
in
aas
inc
ljmp
int
into
clc
inc
push
mov
jle
adcb
push
sti
rcl
xchg
ljmp
pop
ds
in
pushf
xchg
fst
fisubl
cmp
hlt
sub
sub
inc
push
push
andl
mov
inc
mov
cmpl
jne
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
sbb
movl
jmp
xchg
dec
xor
dec
rcll
push
movsl
andb
ss
mov
jl
out
inc
mov
xchg
aas
mov
jb
loopne
push
insl
push
ja
mov
or
das
aaa
sub
scas
or
int
pop
leave
les
inc
test
mul
lds
outsb
xlat
rcr
or
mov
icebp
rcrl
ds
test
sbb
or
dec
test
adc
mov
xor
xchg
and
std
daa
enter
pop
mov
insb
lret
repnz
arpl
push
faddl
adc
lods
sub
or
cmp
popf
lcall
in
inc
pop
pusha
jp
icebp
sti
add
lcall
enter
and
cmpsl
xchg
int
jno
ljmp
pop
in
lods
ja
leave
int
jl
jge
pop
jnp
out
pop
mov
pop
mov
add
xlat
xchg
mov
jo
hlt
mov
jbe
adc
xchg
rorb
mov
call
and
dec
iret
and
jne
push
mov
aad
push
stc
mov
jno
mov
sub
jne
ja
bound
add
mov
sub
cmp
push
stos
gs
data16
fdivl
adc
jg
scas
popa
mov
mov
divb
fs
pop
pop
push
mov
popa
sbb
dec
lods
je
repnz
cld
mov
aaa
daa
fs
pop
mov
mov
cmp
mull
arpl
out
mov
push
mov
add
mov
cwtl
push
xor
rcll
cmpb
stos
fstpl
push
nop
adc
adc
negl
mov
addr16
xchg
out
jge
aas
adc
mov
adc
cmp
out
subl
or
jecxz
cltd
jg
ror
test
sub
mov
das
dec
push
push
lock
mov
in
pop
sbb
jl
mov
inc
data16
cli
xchg
xchg
dec
xchg
inc
ljmp
popf
cltd
add
adc
out
cs
ja
pop
andl
stos
lret
push
int3
lahf
push
add
xor
mov
ljmp
jg
inc
pop
popf
mov
and
scas
aas
test
xchg
daa
dec
cmc
xchg
outsb
out
stos
lods
in
adc
mov
rcl
adc
pop
inc
js
enter
pop
push
icebp
smsw
ret
cli
inc
dec
sub
xor
ljmp
or
sbb
cli
lods
mov
add
or
xor
inc
out
mov
scas
lea
repnz
pusha
xchg
cmpsb
pop
test
xor
push
dec
lret
cs
mov
sbb
push
ret
fmul
xlat
test
sbb
push
fists
or
jge
nop
or
mov
mov
call
or
mov
pop
sub
repz
adc
stos
mov
sub
add
and
test
jne
data16
dec
cwtl
xor
fildl
ds
jbe
fisttpll
out
push
xchg
lcall
xor
jp
or
dec
push
and
adc
repz
insl
and
jno
pop
jl
sti
sbb
mov
pushf
nop
mov
cmp
inc
cld
xor
pushf
clc
and
mov
mov
xor
push
movl
mov
mov
and
xor
andl
mov
inc
mov
cmpl
jne
pushl
pushl
call
cmpl
jb
xor
add
mov
sbb
xor
mov
add
jmp
aam
in
insl
jb
imul
xor
jns
jl
fstpt
sbb
lods
cmp
rcrb
je
ds
add
mov
ret
daa
cmpsl
mov
jo
xor
push
push
sub
xchg
inc
shlb
hlt
test
outsb
xchg
adc
inc
or
test
fldcw
sbb
dec
push
jno
ds
push
mov
fimull
pop
sub
lock
xlat
mov
and
vandps
ud2
add
pushf
cltd
es
inc
ja
in
push
aas
out
xchg
dec
mov
push
jle
sahf
fs
push
subl
add
sub
idivl
pop
fs
jo
pop
in
pop
dec
cmp
cmpl
lock
test
pop
sbb
adc
pop
and
ljmp
inc
aam
xchg
out
test
inc
loope
sbb
jb
xor
pusha
xlat
add
insl
out
in
push
das
xor
jmp
lds
loop
mov
xor
pop
les
pop
rclb
cli
fadd
jle
mov
inc
push
lret
mov
jae
adc
mov
in
push
rorl
test
mov
in
hlt
jbe
pusha
and
divl
ss
sbb
xor
mov
inc
test
jp
fiaddl
js
cli
push
and
jmp
in
ss
lahf
pop
lods
pusha
in
sbb
decb
addr16
xchg
xor
sub
jne
and
cli
js
push
push
inc
loop
cmp
inc
out
xor
adc
adc
ja
pop
pop
dec
in
and
dec
inc
xchg
pop
pop
jp
movsb
jo
xor
out
loop
out
cmc
xchg
cmp
pop
sbb
inc
daa
sti
scas
cmp
dec
mov
cmp
push
mov
sub
push
ljmp
or
loopne
and
loope
mov
popf
fnsave
and
nop
push
cltd
addr16
push
pop
mov
cs
pushf
dec
and
cmpsb
mov
test
xchg
adc
push
shlb
dec
xor
jae
cmp
pop
pop
xchg
insb
inc
repz
sbb
push
adc
aad
lods
loope
jae
into
jb
testl
in
out
cmp
push
sbb
pop
push
aad
sti
xchg
adc
fcoml
hlt
and
icebp
xor
xchg
inc
out
pop
rcll
mov
repz
or
mov
je
popf
inc
push
cmp
jnp
imul
pop
dec
pop
data16
loope
xor
xor
dec
sub
and
cmpsb
data16
aas
movsl
xor
pusha
mov
ret
das
ljmp
jle
fnsave
jp
jno
push
xor
push
mov
push
ret
pop
push
outsl
push
sbb
out
adc
bound
test
push
push
leave
sub
in
sbb
addr16
rdmsr
sbb
test
test
fucomi
leave
pop
mov
outsb
aam
inc
push
cmp
fldcw
sarl
adc
mov
into
mov
and
inc
mov
dec
outsb
push
shrb
push
inc
ljmp
adc
cmp
nop
fcmovne
imul
iret
xor
add
scas
cwtl
jno
jle
aad
in
clc
adc
sbbb
daa
cmc
pop
mov
jecxz
push
cmc
data16
add
imul
mov
cmp
jne
mov
mov
xor
xor
add
add
imul
jmp
mov
mov
mov
mov
jmp
bound
jge
pop
jo
mov
aas
jl
mov
jl
or
icebp
jle
jo
dec
sub
lock
stos
jle
leave
insb
pop
frstor
push
outsl
xchg
cmp
or
cli
popa
lcall
rolb
pushf
mov
rcll
cs
loopne
pop
sub
sbb
in
cltd
scas
or
jecxz
jnp
push
jge
fwait
dec
repnz
minps
loop
nop
pop
fwait
test
mov
rcrl
sbb
call
lahf
rolb
xchg
fwait
das
adc
je
xchg
sbb
pop
fbld
test
xchg
xlat
icebp
sub
jb
inc
into
jne
adc
shrb
xor
adc
mov
jo
insb
cltd
xor
and
add
sahf
out
mov
push
xor
aaa
mov
jg
pop
cld
movsl
ret
mov
sbb
imul
cmp
jo
jecxz
shlb
mov
sbb
fnstcw
xchg
or
in
mov
icebp
stos
push
fcomi
and
test
sub
call
ds
lcall
push
xchg
add
adc
fstpt
inc
nop
lds
push
push
push
add
push
xlat
jns
jecxz
xor
sub
jge
or
xchg
sbb
stos
cmp
jecxz
push
and
loopne
jg
or
lret
mov
sub
int3
push
jg
pop
mov
rolb
out
ljmp
lods
and
es
scas
mov
loopne
ret
testl
rcr
mov
push
test
in
out
arpl
cmp
mov
sub
mov
push
cli
fisubs
pop
cmpb
mov
jo
shrl
jg
xor
mov
mov
insb
jae
sbb
aas
lret
xchg
jno
movsl
fisttps
mov
popf
xchg
fucomi
lea
push
out
dec
pusha
mov
and
cltd
or
jb
ret
lcall
scas
imul
dec
fcmovne
inc
in
scas
mov
add
mov
sbb
mov
in
leave
jo
xor
hlt
dec
stos
mov
sub
mov
into
cmpsl
jmp
icebp
sti
add
or
xor
and
scas
mov
jae
lock
xor
mov
roll
lock
inc
pop
push
push
adc
vpshab
xchg
fstpt
movsb
mov
xchg
movsb
arpl
sarb
lretw
aad
call
mov
inc
dec
lret
arpl
xchg
int
pop
mov
movl
mov
cmpb
jle
stos
dec
stos
rclb
test
imul
xchg
pop
pusha
or
jnp
xchg
sti
mov
pushf
nop
in
pushf
ljmp
cld
cmp
sub
mov
sub
cmp
out
jo
xor
pop
shll
pop
jmp
in
jecxz
cmpsb
mov
popf
int3
data16
jnp
adc
xorl
insb
adc
xchg
ret
mov
push
cld
pop
jbe
push
aad
adc
pop
ret
enter
fisubrl
test
icebp
scas
sti
xchg
lods
js
add
in
je
scas
pop
inc
and
mov
out
aad
dec
imull
push
cmp
cmpsl
sbb
testb
xchg
stc
cmp
push
test
jae
inc
xor
jmp
leave
mov
inc
hlt
mov
cltd
loopne
jne
xor
xor
add
add
imul
mov
cmp
mov
je
xor
add
mov
imul
add
mov
mov
pop
leave
ret
push
mov
push
movl
jmp
fwait
dec
jge,pt
push
mov
jmp
divb
jl
xor
jl
dec
mov
cmc
inc
jg
sti
sub
push
xchg
inc
push
jo
push
data16
and
outsl
lea
xor
pop
scas
sub
xor
xchg
mov
add
jle
fistpl
ficoms
pmulhuw
add
dec
notb
xor
test
loopne
sub
jnp
or
in
in
test
jns
outsb
int3
les
lods
rclb
test
pop
pop
dec
mov
mov
jmp
idivb
cmc
push
rorb
pop
popa
mov
sahf
mov
or
loop
jp
les
push
dec
scas
sbb
ljmp
repz
push
aam
andb
repnz
rolb
aas
cmp
sbb
ss
push
fs
fwait
pushf
movsb
cmp
mov
mov
ss
push
loop
cmp
lods
push
popa
outsl
sbb
or
xchg
xchg
or
fs
loope
sub
out
xchg
mov
jmp
push
push
test
xor
jg
mov
jl
pop
fisttps
xchg
cs
mov
dec
jecxz
insb
add
adc
push
sbb
pop
adc
movsl
ds
lock
add
int
shrl
mov
dec
mov
imull
dec
add
pop
and
shrl
jecxz
aam
mov
stc
mov
les
add
cmp
lahf
popf
ret
mul
xchg
dec
pop
jbe
ljmp
mov
lahf
dec
mov
iret
pop
insb
in
dec
xchg
fists
fbld
js
cwtl
lret
pop
xchg
daa
incl
xchg
mov
clc
dec
pop
cwtl
loopne
adc
fstl
jno
test
int3
fdivr
leave
cmpsb
out
out
data16
imul
inc
cmovns
sub
hlt
stos
adc
push
ret
cmp
xorb
mov
jnp
hlt
test
pop
and
xchg
adc
fxch
push
jae
or
push
aam
test
in
loopne
out
xchg
insb
xor
lret
xchg
xchg
mov
loop
fidivrs
xchg
mov
bound
clc
mov
add
mov
mov
mov
movl
movl
movl
cmp
movl
jne
mov
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
jmp
fld
addr16
outsb
jno
add
jae
jb
lds
jle
jl
and
push
std
mov
call
or
pop
xor
inc
sbb
in
jle
mov
cmp
dec
mov
xchg
xchg
mov
xchg
add
clc
shlb
inc
insb
pop
std
mov
jge
fdivrp
ret
les
test
arpl
mov
je
sub
cmp
cmpsl
cwtl
xchg
mov
or
and
pushf
call
jbe
jno
inc
jp
cmp
mov
mov
js
sbb
mov
xchg
push
lods
mov
xor
shll
arpl
flds
mov
loop
popf
icebp
adc
lock
xchg
ret
fidivs
mov
dec
cmpsl
cmp
push
cmp
sbb
das
test
icebp
test
mov
dec
leave
jo
push
sub
inc
push
mov
cmpsb
mov
jne
fistps
scas
jne
mov
or
push
lcall
jle
movsb
mov
das
rcrb
pop
xchg
push
pop
jo
aaa
add
ja
sahf
push
cmp
sub
jno
adc
daa
pop
ficoms
sub
inc
fimull
ficompl
fadds
popf
insb
inc
and
mov
or
xchg
xchg
icebp
scas
ds
adc
enter
stos
out
cmp
xor
cs
xlat
shll
pop
pop
addb
in
push
in
lret
adc
mov
mov
add
push
cmpsl
jge
nop
xor
adc
add
cli
mov
iret
adcl
mov
ljmp
push
adc
xor
sbb
bound
popf
add
push
cmp
sahf
inc
insl
mov
mov
mov
mov
in
cmp
mov
xor
cmp
mov
dec
ja
test
lret
addr16
pusha
xchg
les
faddp
xor
mov
cmp
or
adc
inc
int
sbb
mov
xchg
fcomps
lock
jmp
or
mov
jo
xchg
jmp
push
test
call
xor
jl
xor
push
adc
jl
cmpsl
ret
mov
in
jecxz
xchg
dec
outsb
sub
in
mov
imul
or
lcall
movsb
mov
daa
ljmp
lods
ret
jo
add
dec
int
xchg
mov
mov
rorl
mov
cmp
lods
popf
out
loope
in
push
push
int3
js
and
pop
cltd
mov
jg
mov
in
jmp
xor
fcomps
add
adc
out
mov
mov
movsl
xor
lret
sti
mov
and
vmovupd
stos
icebp
std
leave
sub
xchg
push
push
jp
cmp
inc
std
or
mov
mov
pop
sti
inc
lods
pop
add
mov
sub
mov
xchg
cmpl
mov
sbb
push
out
gs
push
push
ror
add
mov
int
mov
jp
push
and
out
push
dec
mov
int
shlb
cmp
dec
popf
aad
adc
push
mov
adc
xchg
and
sbb
faddl
pop
sahf
pop
jp
push
popa
int3
xor
cmp
cmp
lods
cmpl
adc
dec
out
mov
xor
call
js
mov
das
lret
push
test
xchg
xchg
or
lock
idivb
jl
lds
leave
xchg
jl
sarl
cmc
les
lods
fwait
dec
or
jmp
lcall
std
sbb
fnclex
test
negb
out
aam
stos
mov
in
aas
push
cli
cmp
test
or
and
shrb
frstor
mov
sub
lret
test
testb
fildl
clc
add
lcall
in
push
cwtl
mov
push
mov
repnz
xchg
pop
sti
ja
mov
push
jecxz
push
lcall
inc
fmuls
fwait
xchg
out
adc
pusha
mov
adc
cmp
rorl
pop
in
testb
aas
scas
xor
add
add
add
mov
movzwl
not
and
mov
mov
jmp
xorl
jmp
mov
stos
gs
js
pusha
sarl
jl
mov
xor
mulb
or
ds
enter
adc
push
sbb
aaa
sub
hlt
sbb
out
pop
jb
js
mov
xchg
dec
mov
dec
jne
sbb
or
sbbb
lods
add
fwait
sarl
pusha
mov
testl
sbb
push
jge
inc
not
jge
out
inc
sub
push
jno
pop
fwait
mov
xchg
jmp
dec
push
jmp
add
nop
test
mov
xor
push
fdivrl
call
rcll
mov
mov
sub
aad
adcb
push
insl
inc
pop
xchg
movups
xlat
adc
pop
fwait
xor
fsubrs
sbb
and
inc
cmp
sti
push
rorl
and
jmp
sbb
sub
adc
repz
adc
iret
rcl
repz
insl
fildll
mov
dec
xchg
add
mov
in
xchg
inc
mov
lds
fiaddl
sub
lret
sbb
cmp
inc
jmp
addr16
lahf
test
dec
push
stos
mov
pop
stos
jmp
inc
ds
xlat
push
sbb
mov
sbb
push
mov
sbb
and
pop
xchg
enter
and
shll
ja
aad
out
add
movsl
sbb
ja
mov
iret
out
pusha
and
call
mov
mov
fistpl
rolb
out
enter
sbb
outsb
jp
xchg
stc
xlat
jb
jg
movsb
jl
loope
sbb
std
insl
pop
call
mov
xchg
in
loop
sbb
jge
mov
add
and
xlat
pop
mov
mov
mov
fidivrl
div
adc
mov
cmpsl
out
gs
push
out
sbb
jne
pop
or
xchg
dec
fsubrp
ss
popl
js
aas
jae
rolb
dec
mov
lock
jb
or
fimull
mov
popa
mov
pushl
call
test
je
leave
ret
push
mov
sub
mov
mov
or
movl
movl
xorl
mov
movzbl
or
mov
andl
lea
adc
jmp
mov
in
xchg
insl
mov
mov
jno
pop
and
jl
xlat
jns
jl
dec
stc
test
loope
shrl
fldenv
insb
sub
shlb
dec
iret
imul
enter
adc
je
fidivs
jecxz
push
mov
nop
into
sbb
movsl
call
test
repz
xchg
shr
std
sbb
mov
rorb
daa
xchg
loopne
movsl
repz
inc
jne
inc
scas
rorb
sbb
mov
rolb
mov
or
frstor
das
add
rcrl
imul
sbb
lods
mov
test
mov
cmc
lods
outsl
mov
add
push
lret
js
in
ja
adc
std
mov
push
sbb
rdmsr
les
xor
pop
lahf
jno
arpl
aaa
add
lret
add
movq
in
push
add
mov
sub
lcall
or
popa
sub
add
add
sub
test
pushf
fstpt
dec
cmpb
arpl
pop
inc
dec
in
mov
out
dec
in
mov
jl
inc
push
jecxz
or
and
addb
pushf
cld
pop
jmp
sub
lods
rorb
or
enter
jecxz
pop
dec
adc
fistpl
faddp
xlat
push
or
jbe
loop
dec
sub
cmp
pop
lret
divb
sahf
aaa
cmc
xor
xor
sahf
mov
lods
lret
dec
add
push
mov
xor
pop
mov
xchg
cld
mov
sub
jmp
sbb
ds
fiadds
neg
push
sti
sub
mov
aas
jle
insb
inc
imul
test
mov
xchg
fwait
mov
jns
repnz
rclb
cmpsb
mov
mov
xchg
fs
xchg
pop
fnsave
or
loop
sbb
xor
hlt
stos
mov
add
repz
cmc
in
je
jne
mov
je
imul
out
adc
xor
fcomip
cmp
out
or
jmp
mov
sahf
cmp
pop
push
xchg
mov
mov
pop
imul
cmp
shrb
lcall
das
cmpsb
ret
xchg
lods
mov
xchg
mov
push
mov
lret
mov
fidivl
mov
pop
or
mov
inc
lret
lock
aas
jle
adc
sbb
adc
push
cs
cmp
into
je
int3
jp
jmp
testb
ljmp
push
outsb
sub
sarl
push
fisttpl
mov
pop
mov
sbb
lds
testl
mov
adc
loopne
je
mov
stos
cmp
es
xchg
test
out
hlt
imul
pop
add
test
adc
addl
mov
push
aam
mov
js
into
or
xor
inc
fadds
add
add
mov
mov
xor
xor
add
mov
jmp
ret
and
paddw
int
xchg
inc
imul
jns
jl
adc
add
jge
imul
mov
dec
icebp
out
or
cmp
inc
je
repz
mov
jmp
movsl
or
out
cli
pop
call
loop
adc
repnz
xchg
mov
adc
pushf
push
scas
xchg
les
mov
aas
push
test
ret
add
push
sbbb
sbb
sub
test
push
mov
rcrl
or
mov
rorl
mov
push
lahf
xchg
pop
mov
in
push
push
dec
or
adc
daa
int
sbb
mov
xor
sbb
or
push
scas
mov
cmp
cmc
fwait
push
leave
jns
mov
fdivrs
mov
sub
or
cmp
clc
dec
xor
push
imul
cmp
mov
popf
jns
push
int3
mov
mov
enter
out
nop
shll
sbb
popf
out
stos
in
cmp
subb
dec
loope
cmp
popa
push
sub
fisubrs
dec
shl
int3
scas
imul
pop
add
outsl
mov
mov
inc
cmc
mov
xchg
movsl
out
inc
xchg
push
ficoms
add
fists
xor
iret
sbb
mov
adc
adc
mov
sbb
cmp
jbe
jae
loope
add
sub
fs
cmpxchg
addr16
sub
xchg
cs
mov
nop
mov
sub
loop
out
and
sbbb
cld
call
mov
mov
ja
mov
push
rclb
outsl
stos
xor
inc
sti
or
or
addr16
cmpsl
add
pop
stc
js
xchg
mov
roll
in
adc
push
stos
xor
sbb
mov
jg
and
dec
push
cmp
mov
in
insl
xchg
fiadds
mov
jg
jecxz
mov
jns
adc
bound
mov
movsl
ljmp
movsl
push
jle
inc
mov
sub
adc
pop
insb
outsl
lods
pop
movsl
out
xor
enter
stos
fstl
sub
jp
add
push
test
dec
cmc
gs
push
mov
pop
ss
int3
lods
icebp
mov
mov
jne
cli
mov
cs
loop
jae
lret
or
sbbb
insb
stos
mov
mov
out
rclb
lret
xor
andb
add
aam
cli
add
jno
test
mov
inc
lret
movsl
cmpsl
ss
sbb
adcl
test
push
pop
inc
int
pop
stc
adcl
xor
xchg
and
popf
or
and
cmp
lcall
xchg
stos
lcall
shll
mov
push
scas
push
stos
pop
cmpl
push
arpl
sub
addb
adc
arpl
pop
cltd
push
movl
cmpl
je
cmpl
jne
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
lea
notl
mov
add
jmp
xchg
je
cwtl
outsb
mov
mov
movl
jl
jns
jl
movb
mov
vmovaps
push
cli
jbe
cli
xor
jb
push
add
fsubl
iret
push
xor
ljmp
out
sbb
mov
stos
movsb
dec
inc
mov
or
sbbb
aaa
notb
fisubs
fisubrl
sbb
sub
out
adc
mov
aas
xchg
mov
push
sahf
fnsave
adc
insb
adc
icebp
int
mov
add
jae
jmp
bts
fs
cmc
jmp
lcall
push
out
mov
aam
mov
push
js
add
cli
test
jle
sub
and
pop
mov
lods
adc
cltd
jge
mov
adc
rorb
cmp
and
ror
xlat
inc
iret
outsl
push
cli
and
cs
lcall
jl
stos
test
mov
int
xchg
or
fidivrs
bnd
addb
push
add
pop
xor
int3
shlb
loop
and
fwait
std
and
ljmp
xchg
psadbw
out
in
jp
push
sbbb
sub
mov
jae
mov
pop
pop
mov
or
pushf
sbb
incl
jge
jbe
xor
into
lcall
in
enter
stc
testb
popf
pop
call
mov
lahf
testb
std
jbe
sbb
das
mov
or
adc
pushf
mov
xor
leave
or
sbbl
mov
mov
cwtl
jl,pn
add
sub
and
sarb
out
aad
pop
inc
test
push
or
jmp
bound
pusha
test
pop
dec
sub
jge
adc
xor
inc
movsb
adc
jl
or
rclb
sub
jmp
idivb
les
fbstp
in
and
call
push
in
cmp
movb
add
rorb
sbb
rorb
hlt
int3
xor
imul
hlt
orb
rcr
outsl
mov
aas
inc
imul
adc
aad
fsubrs
xor
mov
mov
inc
in
xchg
leave
and
fbstp
ja
inc
inc
mov
mov
jns
movsl
mov
cmpsb
aaa
mov
lock
in
repnz
addb
int3
clc
mov
pop
fcoms
xchg
push
sbb
cmp
fnstenv
scas
cmpsb
inc
and
jp
jno
or
push
xchg
and
mov
ja
and
cmpsl
popf
xchg
cmp
adc
popa
pop
in
pop
test
test
lds
xchg
fsubp
dec
mov
testb
sub
cmpsl
mov
std
mov
mov
sub
pop
cld
or
cmc
popf
daa
cs
mov
xor
cs
cmp
icebp
or
dec
idivl
mov
pusha
jge
inc
negl
push
xchg
push
jns
xor
push
fsubrs
mov
andl
mov
inc
mov
cmpl
jne
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
push
and
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
push
push
call
cmpl
jne
xor
xor
inc
mov
jmp
movl
cmpl
je
cmpl
jne
pushl
push
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
xor
add
or
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
call
jmp
mov
mov
mov
mov
xor
mov
xor
xor
add
add
div
mov
movl
cmp
je
movl
lea
mov
mov
mov
jmp
sub
imul
or
or
sub
jl
xlat
jns
jl
inc
pop
inc
jnp
outsl
out
cmp
stos
cmc
sub
lock
ret
pop
sbb
adc
andb
fwait
push
js
enter
dec
pushf
in
ficomps
xor
pop
ds
jp
sub
and
in
pushf
mov
stos
xor
adc
inc
into
cmp
sbb
aam
fsubrl
dec
test
ljmp
ss
mov
lods
xor
lock
jle
imul
xor
cmc
mov
nop
in
dec
mov
and
scas
imul
imull
test
dec
jnp
stos
pop
jge
aas
ja
sub
ffreep
xor
xchg
mov
sahf
mov
sbb
mov
fucomip
cmp
in
mov
lea
je
mov
ja
imul
stos
lods
inc
pop
stc
jb
out
addl
adc
ja
out
in
add
sbb
inc
repnz
jl
cmp
push
sub
xchg
xchg
sarb
xchg
mov
ror
pop
iret
inc
iret
mov
addl
mov
stos
mov
aam
into
shll
inc
push
sahf
outsb
push
int
adc
jbe
cmp
jne
cs
pop
push
mov
test
hlt
leave
add
mov
lds
cwtl
jl
stos
ss
jl
or
jp
pop
leave
cmp
arpl
pop
cmp
or
mov
inc
adc
into
cmc
mov
mov
xchg
jne
mov
xor
in
cmp
call
add
test
nop
sarb
ret
add
cmp
out
daa
insb
push
pop
dec
mov
and
adc
push
and
push
ljmp
xlat
cld
or
and
sti
cmp
or
dec
sti
fwait
in
fldcw
notb
sbb
sub
jne
xchg
pop
cmp
test
jns
adc
in
fldl2t
jge
jmp
or
or
sbb
or
inc
cmpsl
fbstp
inc
pop
popf
aas
mov
jmp
stc
imulb
ja
repnz
pushf
lret
int3
push
inc
out
aaa
and
nop
filds
cli
out
orps
jb
inc
or
cmpb
cmpsb
mov
out
cmpsl
gs
push
pop
mov
xor
js
and
lods
stc
js
mov
pusha
mov
sti
cmpb
subb
fcmovnbe
jo
inc
lret
inc
sahf
add
sahf
mov
jno
jns
pandn
adc
mov
push
mov
sub
test
js
and
add
push
sarl
je
or
and
add
aaa
jns
jp
shll
enter
or
jns
mov
mov
ss
cltd
fmull
in
rorl
mov
xor
sub
sti
dec
rdmsr
adc
fadds
adc
dec
xor
ret
xchg
ret
lock
and
mov
and
mov
push
or
jl
fidivl
or
cmpsl
pop
imull
call
adc
xor
pop
jmp
cwtl
mov
mov
or
xchg
jl
adc
jl
jns
jl
xchg
fcmovb
iret
and
sbb
xor
aas
mov
cld
mull
add
mov
stc
subb
xor
lds
out
mov
adc
pop
lret
out
mov
xor
cmp
push
sub
daa
cmp
in
cmp
es
mov
fimull
repz
jge
stos
shlb
mov
stc
clc
hlt
cmpsl
or
add
jae
xchg
insb
out
xlat
sahf
adc
in
cwtl
or
std
jo
fs
pop
push
sar
call
or
outsl
sbb
and
jnp
stc
xchg
cmp
cmpsb
xchg
lods
sbb
fildl
test
cmp
dec
cmc
mov
inc
gs
out
stos
cwtl
into
sahf
je
inc
movb
lods
dec
push
pop
ror
jmp
cs
or
jb
pop
mov
fsubl
mov
stc
cltd
call
fldl
test
cmp
shl
cmpsl
jle
mov
jl,pt
inc
xchg
je
lods
jg
and
loope
jmp
stos
mov
mov
sbb
shlb
inc
mov
and
sbb
mov
cld
ficomps
in
andb
push
fcomps
push
sbb
xchg
dec
push
fwait
cmp
imul
hlt
divb
pushf
xchg
cmc
out
or
stc
sub
rolb
xchg
shrl
mov
imul
push
mov
sbb
push
mov
rolb
mov
dec
aam
sti
push
insl
mov
sbb
int3
jge
js
int3
aaa
xor
sbb
xchg
cmp
dec
sti
xchg
cpuid
push
cltd
loopne
mov
add
ds
fwait
lret
shrb
int
cld
in
decb
aas
push
notb
sbb
or
mov
push
addb
adc
sbb
inc
test
out
inc
lret
cs
push
xlat
cwtl
fimull
cmp
jmp
dec
pushf
pop
fnop
mov
std
popf
mov
dec
pop
sbb
lds
fnsave
jbe
xor
in
sub
ja
and
scas
out
sbb
std
and
arpl
dec
loop
xchg
sbb
inc
fldcw
mov
jne
sbb
jecxz
push
xchg
mov
popf
outsb
arpl
dec
aas
and
push
jg
and
mov
mov
sub
inc
fisttps
cmp
push
aas
push
test
aaa
adc
imul
xor
dec
push
dec
jecxz
lods
pop
cltd
add
popf
inc
push
xor
sub
pop
push
adc
ret
daa
rcl
je
xchg
adc
sub
leave
xchg
data16
or
fimull
lods
and
movb
jb
stos
hlt
cmp
jae
pusha
sbb
pushf
lock
call
mov
jns
xchg
nop
data16
push
pop
sub
push
adc
je
mov
orl
jmp
pop
jns
fs
add
push
sbb
lea
xlat
jns
jl
pop
push
pop
sub
xchg
jp
xor
psllq
out
push
xor
or
into
xchg
cmp
into
aad
cmp
std
arpl
sbb
in
into
add
sbb
popa
andl
cmp
mov
sahf
pusha
dec
stc
mov
mov
xor
pop
roll
loopne
ss
sub
cmc
hlt
and
adc
xchg
test
xlat
and
out
fistps
xchg
pop
jne
or
ljmp
push
jb
shlb
mov
mov
xchg
mov
push
mov
and
push
and
int
dec
test
arpl
fmuls
xor
test
pop
mov
pop
jge
dec
mov
bound
fidivl
and
popa
fnstsw
pop
js
ja
xor
mov
xchg
mov
cmc
pop
inc
scas
rorb
sbb
insl
loop
cmp
outsl
je
jl
lea
loopne
cld
adc
xchg
inc
orb
inc
das
out
mov
sbb
xchg
into
bnd
loope
aam
pop
movsl
fisubrl
cmc
ljmp
cmp
sbb
jp
fwait
sbb
sub
lea
and
dec
in
mov
push
jnp
inc
xchg
pop
in
inc
and
fdivrs
iret
popa
clc
je
inc
inc
cmpsb
add
xor
incb
test
shll
mov
jg
push
nop
cmpb
js
push
dec
shl
aad
loopne
inc
lods
xor
lcall
xor
mov
ds
adc
and
pop
mov
in
pop
je
fwait
ds
inc
in
or
pop
add
mov
iret
pop
inc
sub
mov
int
lcall
call
lds
mov
xchg
adc
rol
insb
adc
cmp
lock
jo
ficoms
pop
push
or
pop
jb
ljmp
pop
mov
dec
stc
xlat
loopne
inc
jnp
sahf
jecxz
pop
popf
stos
pusha
add
jne
push
jl
je
negb
cmc
sub
in
data16
jae
nop
xor
pop
jb
sbb
lret
cmp
rclb
push
and
pop
xor
adc
mov
adc
xorb
jo
inc
mov
in
pop
xchg
xchg
adc
iret
lret
pushf
push
xor
addr16
xor
fsubrs
imulb
test
aas
imul
cmpsl
mov
cli
mov
cltd
push
mov
pop
pop
out
sti
dec
lea
call
sbb
jno
push
push
leave
inc
and
ss
pop
fbld
sub
cmp
sub
in
stos
mov
add
ficoml
and
mov
aad
fldl
into
push
inc
pop
xor
sarb
stc
cmp
fimuls
sub
pop
and
adc
adc
cmp
jns
add
imul
xchg
jg
out
les
adc
jecxz
insl
aaa
jb
sbb
xchg
les
mov
xor
add
pop
pop
pop
leave
ret
mov
add
cmp
je
mov
andl
jmp
mov
mov
or
cmp
je
mov
jmp
pop
sahf
pop
pop
pop
shll
cltd
outsb
pop
xor
fidivrs
jns
jl
sti
rcll
mov
mov
and
mov
adc
popf
push
loope
dec
jg
out
rcl
aas
push
mov
mov
repz
bnd
sub
lret
fistpll
pushf
xchg
sub
cmc
dec
hlt
fdivrs
jl
lahf
ret
sti
pop
mov
cltd
ja
push
inc
int3
push
push
std
xchg
jb
pop
xchg
addr16
daa
imul
std
cmp
inc
push
xchg
fildl
pushf
out
xor
and
les
aas
cmp
and
test
push
dec
repnz
and
xchg
mov
idivl
cmp
xlat
jns
insl
jp
incl
inc
aam
pop
mov
nop
pop
mov
iret
mov
and
cmp
jl
mov
lret
xrelease
out
outsb
or
mov
inc
fidivrl
inc
imul
xlat
sbb
in
aam
sub
mov
insb
mov
inc
je
add
add
and
lcall
jg
sbb
ret
push
popf
sbb
jp
test
sub
inc
aas
xor
mov
test
das
mov
xor
push
cmp
xor
inc
add
data16
test
xor
ja
jge
repz
lret
mov
inc
roll
sub
lods
jmp
imul
out
nop
cmp
test
dec
cmp
mov
fists
ds
repz
insl
mov
aas
enter
arpl
dec
xchg
rorl
cmp
es
ss
sti
negl
mov
ljmp
aaa
mov
fmull
mov
mov
scas
out
js
dec
repnz
cld
push
cmp
mov
mov
add
sub
aaa
sbbb
out
lds
outsl
subl
push
xchg
cs
enter
ret
ja
adc
pop
out
leave
icebp
or
sahf
sub
ds
add
push
popw
sbb
outsb
sub
clc
inc
and
sbb
and
push
or
xchg
mov
dec
mov
jbe
sub
mov
sub
cld
mov
fdivr
lea
xor
ljmp
xor
test
jb
mov
adc
movsb
rcrl
rcl
into
mov
mov
outsb
mov
insl
sub
xchg
xor
pop
add
xchg
xchg
pop
sub
mov
fmuls
pop
lds
jge
xor
loopne
mov
add
pop
jmp
mov
es
cld
xor
cmc
sub
cltd
arpl
xchg
mov
ret
das
cld
pop
repnz
push
fidivrs
les
add
mov
dec
pop
xchg
lods
xlat
iret
inc
pop
cmp
jge
push
in
aas
xor
inc
mov
stos
leave
and
mov
and
add
orb
and
roll
rcll
add
cmc
out
call
js
sub
jmp
xorl
jmp
mov
mov
mov
mov
xor
mov
add
cmp
je
mov
xor
add
mov
mov
mov
mov
xor
add
movzwl
mov
xor
lea
add
jmp
add
loop
insl
test
loop
add
push
fldcw
fstpt
jns
jl
and
loop
repnz
and
adc
sub
push
test
add
ljmp
fwait
scas
jle
mov
jb
pcmpgtw
divb
mov
call
pop
jge
or
dec
sbb
loop
lret
add
dec
bound
sub
add
jo
fwait
insl
adc
xorl
sub
dec
mov
mov
add
adc
xor
insl
sbb
mov
or
sbb
mov
sahf
dec
mov
mov
or
out
mov
xchg
loopne
pop
and
mov
xchg
mov
aam
push
adc
int
jp
add
cmp
or
adc
mov
hlt
in
dec
icebp
div
xor
xor
aad
and
lcall
or
or
fistpl
dec
jle
rcr
sbb
and
shl
pop
pop
test
push
sbb
orl
movsb
scas
xchg
mov
inc
pop
scas
cmpw
mov
inc
cmc
dec
lds
xor
push
mov
std
in
rclb
hlt
in
mov
sbb
sbb
pusha
pop
das
mov
inc
jl
mov
out
into
mov
and
in
pusha
enter
fs
pop
pop
ljmp
mov
insb
or
aas
popl
daa
mov
ds
stos
adc
xor
aas
mov
sbb
stos
aas
push
dec
insb
adc
loop
pop
popf
inc
pop
xchg
fldcw
mov
cmpsl
dec
jmp
mov
outsb
scas
xchg
jns
push
stos
jl
cmp
pop
repz
imul
orl
aam
add
loope
sti
jg
imul
jns
fwait
inc
mov
loopne
mov
cld
push
frstor
test
icebp
jb
js
lods
out
stos
pusha
test
mov
lods
ds
loope
das
add
sbb
adc
and
mov
dec
push
pop
add
fcomp
fidivrs
cli
dec
mov
dec
jg
sbb
outsb
scas
cltd
inc
rclb
xchg
dec
repz
sbbl
cmp
mov
and
divl
sarl
xor
loopne
popa
pushf
fisubrs
push
adc
rolb
arpl
jae
das
rorl
fdivr
add
leave
rclb
sbb
insl
cmpsb
mov
aaa
adcb
bound
xchg
out
cmp
mov
shl
or
adc
or
and
sub
cli
cmpsb
dec
push
ljmp
orb
add
or
mov
add
pop
icebp
js
adc
jmp
jns
movsb
cltd
sbbb
sahf
pop
loop
stos
mov
in
sub
cmp
cmp
and
push
in
dec
stos
mov
call
jae
push
cmp
mov
lret
pop
popf
mov
sbb
cmp
cmp
mov
scas
mov
dec
lock
xchg
out
out
inc
or
in
aas
mov
ds
fbstp
repnz
imul
stos
roll
mov
xchg
sbb
loopne
push
clc
mov
xor
jmp
inc
pusha
sub
sub
push
mov
mov
in
jl
jns
jl
test
je
in
xchg
ror
jl
cmp
lock
lcall
hlt
or
cmpsl
jns
mov
imul
movsl
neg
push
stos
mov
and
inc
add
nop
lret
in
cld
sub
sbb
inc
xchg
jmp
lret
enter
nop
push
in
jo
xor
adc
pop
sub
ret
test
sub
or
in
rcll
push
dec
imul
push
xchg
push
fidivrl
lahf
mov
out
mov
movsb
mov
mov
shrl
in
loop
push
fstps
xor
sbb
roll
sub
dec
jae
inc
loopnew
push
xor
call
sub
mov
in
ja
jl
aas
jno
push
add
mov
lds
cwtl
imul
stos
xchg
cmp
jge
test
jp
cmc
loope
add
fnstenv
cmp
into
adc
scas
rcl
jmp
lahf
movsl
xor
mov
cltd
inc
psrlw
lret
sub
or
fs
cmpsb
les
mov
negb
or
mov
out
shr
push
lret
es
pop
sbb
addr16
sbb
push
out
loopne
xor
jne
scas
mov
stos
cmpsb
in
mov
push
mov
cmp
cmp
sbb
and
sbb
pusha
addr16
jno
adc
inc
ficompl
ds
mov
pop
sub
and
retw
out
dec
rorl
adcl
sbb
iret
sub
xor
mov
test
inc
jg
mov
out
aam
xchg
xchg
rcrl
pop
jge
cmp
mov
adc
pop
push
push
adc
rol
xchg
jbe
inc
enter
ljmp
js
pop
add
std
add
outsb
imul
and
ss
out
dec
mov
mov
pop
xor
stos
sub
or
arpl
mov
mov
mov
mov
js
pushl
leave
cmpsb
mov
jne
repz
ror
roll
les
sbb
mov
pop
inc
inc
mov
or
mov
and
cmp
scas
sbb
sub
lods
jns
pop
out
shlb
mov
jecxz
mov
leave
jmp
xchg
mov
xchg
fsubl
scas
je
fidivrl
add
jge
push
aam
test
out
lret
xchg
jl
dec
stc
inc
stc
xchg
jo
lcall
mov
sahf
cld
jecxz
pop
mov
sub
cmp
int3
jp
pop
les
dec
shlb
dec
xor
or
mov
adc
in
stos
jnp
mov
fwait
and
inc
imul
ficompl
mov
cmpl
mov
or
jge
and
mov
sarw
lds
cli
xor
pop
stos
mov
cmc
and
sbb
test
mov
les
or
sbb
orl
xlat
sub
jmp
or
jb
mov
push
sbb
cld
jb
loopne
jl
jns
jl
test
mov
bound
push
shrb
pop
arpl
inc
sbb
cmpl
shl
cmpl
xchg
movsl
loopne
xchg
push
mov
cmp
or
sbb
in
and
jns
add
cmp
mov
daa
mov
cmp
sarb
mov
sub
cli
xchg
shll
pop
push
push
mov
aad
xchg
into
pop
mov
jecxz
push
push
stos
dec
adc
call
addr16
gs
andb
xor
pop
push
xchg
push
inc
fmuls
insl
rorl
mov
andb
push
push
ret
mov
push
xor
dec
lock
ss
out
push
mov
cmp
jmp
dec
in
movsb
adc
dec
inc
dec
pop
daa
mov
into
xchg
out
int3
push
xchg
cmpsb
pop
icebp
pushf
xchg
cli
cwtl
outsl
nop
or
jnp
aam
lret
insl
test
dec
adc
stc
push
and
adc
daa
lret
aam
subl
mov
imul
clc
arpl
out
push
loope
test
jle
test
shll
or
add
lods
nop
addr16
int
notb
inc
popf
cmp
ja
and
in
shrl
and
mov
jnp
sub
mov
pop
das
inc
xlat
divw
daa
sbb
cltd
and
call
gs
push
pop
ret
xor
xor
push
test
pop
mov
fcomps
dec
sarb
cmpsl
cmpsl
push
or
mov
jl
nop
fnstenv
adc
cmpsl
add
lods
cs
ds
sti
sub
dec
mov
cmp
ds
sub
mov
adc
nop
push
loop
xor
adc
pop
xchg
push
push
cwtl
shll
lea
mov
ret
rcrl
pop
push
adc
pop
insb
dec
inc
xor
ficoms
inc
and
cwtl
pop
pusha
jb
fstl
cmp
mov
inc
xor
das
aas
lock
cmp
mov
add
test
pop
aaa
sbbl
cmp
jo
jp
push
ss
ljmp
jb
jp
ss
push
mov
adc
rcrb
mov
jo
mov
xchg
mov
stc
rorl
xchg
lea
testb
cmp
in
iret
lods
insb
sbb
arpl
dec
repz
mov
sub
sbb
fimuls
inc
pop
fldl
in
add
xor
pop
lods
lret
mov
cltd
into
shlb
mov
lods
jbe
push
xchg
xchg
xor
mov
cmp
pop
hlt
jno
mov
sub
scas
cs
xlat
leave
inc
push
push
or
sub
pop
xor
cmp
mov
loop
daa
scas
push
popf
test
rorb
adc
cmpsb
shl
loop
arpl
cmp
testl
dec
inc
mov
xor
jle
sub
fcompl
push
test
stos
clc
nop
or
nop
dec
sahf
sbbl
clc
ret
jno
xchg
jnp
popf
cmp
out
ret
add
dec
mov
jmp
mov
mov
xor
cmp
je
mov
addl
jmp
mov
cmp
je
mov
jmp
push
mov
sub
adc
jmp
add
js
inc
push
push
dec
xor
in
les
or
jl
jg
jl
lods
je
xchg
sti
jg
fsubl
sarb
pop
mov
cmp
rcrl
jl,pt
jl
mov
mov
sti
scas
aaa
and
jns
xchg
xor
lahf
pop
lods
mov
je
mov
inc
jb
xor
jno
loopne
inc
and
loope
ss
vpmaddwd
adc
pop
insb
inc
ds
dec
pop
xlat
mov
arpl
loopne
mov
xor
scas
push
and
xchg
daa
cmpb
js
jmp
add
rcrl
je
negl
fimuls
jbe
and
inc
popf
mov
inc
push
dec
nop
xchg
pop
mov
adc
in
sbb
cmpsl
mov
repnz
lock
int
push
xor
xor
out
hlt
lahf
insl
push
jne
cmpb
shrb
scas
rolb
jnp
arpl
test
dec
int
js
mov
sbb
pop
addb
jne
jp
in
mov
subl
orl
push
adcl
push
mov
addl
xor
and
mov
andl
add
adcl
push
or
mov
andl
mov
xor
sbbl
movl
orl
movl
addl
add
jmp
movl
cmp
movl
jne
mov
mov
mov
movl
mov
mov
movl
mov
mov
jmp
movl
jmp
and
popf
les
lahf
jmp
sar
testb
jg
jl
xchg
xor
xchg
xchg
popa
or
inc
mov
lret
dec
movb
jg
push
rcr
adc
sbb
dec
or
outsb
mov
imull
pop
xor
das
jmp
lea
mov
xchg
sbb
lret
cmp
pop
add
rcpps
pop
in
mov
sbb
push
test
movsl
mov
loop
dec
add
bound
pusha
jl
adc
sbb
sbbl
pop
fldenv
cmp
jnp
xchg
fcmovbe
cmp
cmp
mov
sub
test
mov
pop
dec
sub
cmp
popf
or
es
pop
and
push
cli
ljmp
mov
mov
outsl
into
sub
mov
xor
xchg
inc
add
xor
sarl
outsb
pop
xchg
cs
stos
push
jmp
testl
scas
mov
sbb
add
lcall
test
push
add
movl
jne
andl
mov
orl
sub
push
mov
or
mov
addl
add
subl
push
decl
call
movl
incl
cmpl
movl
jb
jmp
movl
cmp
movl
jne
movzbl
and
movl
add
mov
xorl
mov
sub
mov
mov
mov
xor
andl
add
andl
mov
sbbl
lea
addl
mov
sub
mov
orl
xor
add
mov
lea
push
mov
jmp
xchg
fs
andl
or
stos
lods
dec
out
jl
adc
inc
pop
xchg
pushf
push
xchg
sub
pop
fisubl
adc
or
mov
cmp
jp
cmp
jbe
mov
dec
hlt
jg
push
shlb
out
fidivrs
subb
fsubrl
push
and
xchg
cmp
clc
jmp
add
push
and
idivl
test
or
sub
cmpsb
xor
xchg
xchg
pop
lods
imul
mov
mov
cmc
and
adc
jmp
lret
pop
cmpsl
mov
lods
out
xor
leave
jge
into
pop
fiaddl
aaa
jecxz
imul
sub
ret
adc
imul
pusha
andb
imul
xchg
lahf
cmpsl
iret
or
ja
sbb
fs
insl
aaa
test
inc
inc
nop
mov
ljmp
cmp
dec
stos
xlat
xchg
dec
insb
int3
hlt
jns
stos
jo
xor
mov
popa
pushl
inc
xchg
fnstcw
xor
add
push
mov
push
pushl
call
jmp
cmp
jne
mov
xor
add
mov
mov
mov
mov
mov
mov
push
pop
sub
add
mov
mov
xor
lea
cmp
jne
mov
pop
xor
pop
add
pop
leave
ret
push
mov
sub
neg
push
mov
mov
sub
mov
andl
mov
movl
and
movl
or
mov
add
mov
mov
movl
cmpl
je
cmpl
jne
pushl
push
push
call
mov
dec
mov
jmp
sbb
xor
andl
mov
xor
add
adc
mov
movl
cmpl
je
cmpl
jne
push
push
call
cmpl
jne
xor
add
dec
mov
mov
dec
mov
jmp
addl
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
cmpl
jne
xor
xor
inc
mov
jmp
orl
xor
or
add
xor
add
or
mov
mov
andl
movl
xor
xor
and
mov
movl
movl
cmpl
je
cmpl
jne
pushl
pushl
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
pushl
push
call
jmp
movl
movl
jmp
push
jle
and
jecxz
push
inc
push
imul
jns
jl
mov
out
inc
xor
daa
nop
cmc
data16
cmp
adc
inc
or
lret
out
mov
orb
mov
adc
lret
push
cmc
mov
test
xchg
ljmp
add
and
sbb
xchg
xchg
pop
xor
inc
mov
enter
gs
or
shl
xchg
mov
xor
imul
lcall
mull
popa
xchg
add
sti
sbb
adc
stc
push
int
notb
stos
push
cmp
je
arpl
aad
test
outsb
mov
add
add
jge
daa
mov
or
cmp
cli
sti
movsb
daa
in
lods
lock
rcrl
xchg
es
xchg
pop
inc
imul
xchg
xor
les
mov
sub
aaa
adc
dec
add
add
cmc
mov
mov
clc
jns
ss
inc
sbb
jb
sub
pop
ja
xchg
enter
and
int
or
lea
xchg
mov
sbb
inc
push
and
add
jle
jp
mov
gs
mov
sbb
push
shl
mov
adc
out
xchg
sbb
adc
sti
daa
std
shl
lods
lret
mov
fiadds
mov
test
imul
or
ficoml
push
ret
cmp
sbb
sbb
ja
and
pop
sbb
cmpsb
jp
sbb
xor
push
sti
mov
inc
call
dec
loopne
enter
pop
repnz
aas
je
jecxz
std
movsb
adc
cmc
sti
and
push
shll
mull
fabs
ljmp
or
rcll
outsb
mov
ljmp
test
mov
ljmp
imul
popa
dec
sbb
push
scas
adc
inc
mov
pop
stos
sub
outsb
nop
mov
test
xchg
cmpsb
das
push
lock
bound
jmp
loop
xor
inc
clc
adc
mov
xchg
lds
add
in
ret
xchg
fsts
leave
fs
cltd
or
shll
es
and
daa
icebp
clc
test
jne
int
scas
xor
mov
mov
and
xchg
pop
cltd
icebp
adc
fwait
hlt
dec
aaa
pop
push
les
xorb
out
xchg
call
adc
std
inc
fs
cmpsl
sub
jnp,pn
out
and
call
push
cmpsb
pop
pop
fisubrl
inc
jecxz
clc
test
xchg
hlt
jle
in
subb
aad
adc
or
fs
jbe
inc
insb
mov
sub
icebp
popf
mov
lcall
pop
dec
mov
mov
fwait
in
or
adc
adc
sahf
fimuls
jge
inc
aam
jl
in
adc
cmpsl
dec
inc
sub
sub
decb
mov
push
ds
outsb
js
jno
pop
insl
insl
lret
std
sbb
pop
data16
xlat
adcb
movl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
movl
movl
movzbl
adc
mov
mov
xor
mov
add
cmp
je
movl
push
jmp
movzbl
xor
mov
mov
subl
sub
movzwl
xor
jmp
push
mov
sti
std
movsl
push
jb
xor
jecxz
les
lret
jl
leave
mov
mov
sub
jne
or
sbb
or
pop
decb
cld
xchg
out
lret
outsb
jmp
test
jmp
je
insl
add
pop
jge
dec
das
int
pop
mov
sub
popa
xchg
out
add
jg
bound
arpl
int3
adc
mov
mov
shr
loop
fildll
adc
dec
sub
dec
ss
mov
jmp
iret
sbb
adc
notb
mov
xor
xchg
out
enter
or
adc
mov
add
mov
pop
pop
push
inc
fdivrl
jp
cwtl
in
scas
jmp
je
sti
addr16
sub
mov
mov
push
movl
mov
ficoms
pop
stc
inc
cmp
shl
inc
loop
xor
mov
js
cld
imul
push
jno
push
fidivl
orl
scas
xchg
in
adc
aas
stos
mov
ret
les
mov
dec
loopne
sub
adc
mov
in
pop
add
imul
adc
stc
xchg
xchg
inc
out
lcall
fcomip
mov
adc
in
ret
jmp
idivl
xchg
xor
ret
cmp
nop
adc
dec
jno
inc
into
addl
mov
xor
or
jecxz
jmp
jb
xchg
int
push
dec
enter
popa
push
adc
sub
scas
xor
out
push
push
lock
mov
test
inc
clc
js
dec
cmp
dec
push
ds
sbb
sub
mov
sub
jecxz
sarb
in
mov
aad
sbb
xchg
xchg
stc
xchg
xor
sbb
fwait
daa
cmp
lret
scas
mov
adc
mov
dec
dec
mov
jmp
bndstx
mov
cmc
add
xchg
out
std
add
pop
jae
and
adc
insb
mov
scas
out
jg
or
out
movsb
or
flds
es
aam
mov
or
inc
movsl
xchg
outsb
push
sarl
stc
dec
in
sub
scas
add
pop
or
ds
addb
cmpsb
adc
repz
cmp
sbb
jne
jmpw
or
xor
adc
addr16
push
push
mov
jg
call
nop
pop
cmp
test
stos
imul
addr16
jns
or
stos
and
and
insb
jae
sub
test
dec
pmullw
mov
and
sbb
cmp
cmp
mov
xchg
mov
and
hlt
mov
jo
xorl
std
mov
call
fwait
dec
rclb
insl
sbbl
icebp
fldl2e
or
cli
jo
cmpb
pop
ljmp
jb
sti
inc
add
adc
fimull
aaa
cwtl
jns
push
cld
xor
adcl
add
movl
cmp
jb
mov
mov
xor
xor
add
and
xor
movzwl
sbb
add
addl
add
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
sbbl
jmp
shlb
bnd
lahf
inc
sbb
push
fisttpl
jns
jl
lret
icebp
shrb
mov
sbb
and
adc
xor
inc
jns
xor
outsl
xchg
jbe
in
leave
mov
jl
mov
pop
add
sub
sub
adc
jb
pop
lret
xchg
push
fs
jb
xchg
dec
out
xchg
cmpsb
mov
mov
je
sbb
addr16
nop
jge
inc
cmp
int3
insb
jae
sbb
cs
mov
arpl
dec
and
push
push
and
lea
clc
out
mov
xchg
imul
ror
pop
ja
in
stos
cmc
mov
je
lods
lods
push
test
mov
mov
stc
add
ds
dec
rolb
mov
cmp
popf
and
lret
out
sbb
dec
pusha
and
xchg
pop
adc
mov
jecxz
sub
into
dec
aad
loopne
jecxz
adc
icebp
lcall
cmp
xchg
jo
push
jle
pcmpeqw
mov
aas
jecxz
cmc
xor
mov
outsl
push
lock
or
ja
jb
ret
mov
add
and
enter
roll
mov
pop
iret
insl
xlat
dec
fstl
jne
xchg
jns
cmp
popf
cmp
inc
fadds
sub
out
stc
xchg
addb
movsb
loop
cmp
mov
ljmp
outsl
adc
pop
repz
mov
and
mov
lea
push
daa
cmp
jge,pt
in
loope
mov
cmc
call
test
xlat
popa
cmp
jne
imul
lret
mov
iret
mov
pusha
xchg
repnz
and
pop
pop
jge
fnstenv
inc
daa
adc
sbb
dec
sbb
data16
testl
out
sub
push
loope
inc
insl
mov
test
push
mov
xchg
inc
pop
or
out
ret
fldt
lahf
inc
mov
ret
mov
jno
xor
cmp
jb
mov
cmp
jg
push
sbb
mov
fisubrl
pcmpgtw
push
divl
add
stc
inc
mov
dec
out
hlt
rcr
cli
sbb
sbb
icebp
dec
mov
push
adc
and
popa
xor
outsb
cmc
hlt
and
popa
lea
out
insl
aam
sbb
mov
cld
in
fcompl
sub
daa
push
lds
mov
mov
jnp
xchg
lcall
sbb
lock
es
scas
fisttpl
inc
loope
sbbl
in
inc
and
into
and
shll
push
leave
pop
pop
lock
fistpll
xor
rcll
lods
arpl
push
jl
insb
adc
push
jo
jae
ljmp
adcl
cltd
ja
mov
je
inc
xor
push
cli
pop
push
xchg
ret
cmp
lcall
gs
iret
mov
icebp
xchg
rep
arpl
scas
xlat
adc
mov
or
mov
sub
cmp
movl
ja
xor
mov
sbbl
xor
add
movl
jmp
mov
sub
mov
mov
mov
or
xor
xor
movzbl
adc
add
add
imul
adc
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
jmp
call
jge
pop
jno
aad
or
jo
lock
lret
jl
out
sbb
je
pop
mov
push
xchg
mov
mov
push
loop
push
and
inc
cmc
or
mov
xor
ret
mov
and
outsl
test
lret
data16
mov
sub
cwtl
test
push
sbb
cmp
mov
pushf
adc
scas
aaa
jns
jmp
mov
lock
ss
push
mov
int
mov
imul
test
push
inc
insb
adc
data16
bound
pop
mov
dec
leave
loop
repnz
add
pop
popa
xchg
icebp
adc
push
in
sub
daa
ret
pushf
fcmovnbe
scas
nop
mov
push
inc
mov
call
xchg
sub
addr16
mov
jnp
stc
mov
iret
add
decl
lret
int
pop
cmpsb
mov
test
dec
fcomi
sub
ja
mov
cmp
sahf
rorl
stos
aaa
inc
nop
mov
fwait
call
es
add
loop
cmpsb
xor
js
je
mov
mov
mov
mov
testl
mov
cli
and
outsl
dec
roll
clc
movsb
push
int
jp
daa
or
out
cwtl
fisubl
push
or
stc
dec
fstp
jmp
mov
insb
test
outsl
mov
popa
mov
xchg
sub
ljmp
sub
imul
test
and
mov
icebp
sbb
add
mov
adc
stos
sub
xor
leave
xchg
xchg
test
cmc
inc
fs
push
loopne
insl
pop
popf
dec
nop
leave
stos
push
dec
mov
jnp
incb
xor
mov
xor
fld1
incl
sub
pop
les
comiss
pop
inc
dec
out
adc
cmc
andnps
pop
or
mov
pop
cmp
pop
sbb
test
adc
pop
clc
es
test
mov
mov
movsb
mov
mov
add
das
xchg
sbb
mov
in
mov
nop
xor
hlt
pop
mov
adc
sbb
lret
rcrl
sarl
and
dec
push
and
clc
popa
cmpsl
insl
fmull
lock
dec
insb
and
test
rcll
push
xlat
dec
cs
jno
pop
xchg
stc
mov
push
mov
ds
xor
shrb
mov
lcall
mov
aaa
call
or
jle
jle
fisttps
mov
pop
sub
push
cmp
mov
lcall
decl
js
rorb
mov
pusha
or
lcall
mov
sub
sub
call
ffree
insb
hlt
gs
aad
cmp
pop
int3
mov
stos
sub
nop
js
pop
dec
jo
mov
jnp
adc
iret
inc
sahf
push
fs
dec
mov
pop
sbb
pop
jg
mov
test
inc
add
rorl
scas
xlat
mov
jmp
icebp
cs
ja
jno
mov
jbe
iret
cmp
jns
jl
dec
cmp
call
shll
stc
or
xchg
imul
jnp
cwtl
xor
loope
fdivrp
sti
cwtl
cli
and
jecxz
lret
in
sbb
cmc
mov
fmul
dec
inc
ljmp
call
sbb
fwait
adc
jno
mov
int
out
inc
inc
int3
pop
dec
jle
mov
push
shlb
xor
push
loope
pop
fstps
sarb
jge
loope
inc
test
leave
xor
sbb
jb
fs
xchg
in
jnp
addb
out
adc
lret
push
jae
data16
dec
sahf
cmpsb
cmpsl
cmp
jmp
enter
icebp
int
xor
dec
jo
fldcw
call
pop
dec
shrl
aam
xor
fstl
pop
roll
pop
not
loope
jmp
ljmp
repnz
gs
jae
rorl
sti
inc
mov
sbb
fstps
xchg
cmp
pop
jns
lret
insb
popf
dec
dec
push
outsb
pop
sub
test
int
les
cmc
int
fldl
hlt
stos
stos
popa
aas
aam
inc
jmp
xchg
pop
ljmp
and
cmpsb
lock
movsl
jmp
or
mov
or
jo
dec
inc
icebp
popf
and
xchg
enter
jo
add
out
mov
or
shlb
je
mov
pop
lea
loope
mov
out
in
popa
dec
fs
dec
insb
arpl
and
out
mov
in
rorl
add
fcompl
rcl
repz
add
fmulp
notb
hlt
es
add
jo
inc
pop
inc
xchg
rorl
rorb
and
add
sbb
jnp
inc
stos
sbb
stos
sbbl
repz
mov
mov
add
dec
fs
addr16
addr16
jmp
xlat
or
roll
mov
pusha
jns
js
mov
stc
push
xor
dec
push
mov
pop
repnz
clc
fsts
mov
cwtl
int
adc
jmp
nop
fcompl
int3
xchg
sub
and
pop
cmc
cld
jne
or
jle
adc
adc
ljmp
adc
repnz
insl
std
push
sbb
movsl
enter
mov
jae
mov
pop
jmp
add
push
cmpsl
addr16
ss
and
loope
jns
jne
shlb
xchg
test
inc
xchg
mov
out
cltd
lods
lcall
xchg
icebp
sbb
push
jnp
dec
ljmp
cwtl
pop
ja
aas
push
arpl
orl
leave
sub
jns
mov
jge
enter
in
mov
pop
mov
add
cwtl
pushf
cld
sbb
sbb
lret
pop
sub
imul
mov
push
inc
cli
cmp
add
fs
push
or
dec
sbb
jb
outsb
je
mov
mov
or
cmp
xchg
add
sbb
xchg
jb
js
insl
cmpsb
or
xchg
jnp
pop
lock
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
jmp
rcrb
mov
jecxz
fcoms
sti
stos
bound
jns
jl
imul
sub
cli
add
icebp
popa
lcall
jge
ss
dec
ss
les
shlb
xchg
mov
xor
fisubl
lret
dec
push
loop
outsb
push
and
add
or
mov
mov
imul
cmp
outsl
neg
adc
jae
adc
pop
cli
jne
push
mov
mov
add
sbb
cmp
movsl
testl
mov
flds
es
or
and
shl
fnsave
adc
iret
push
es
out
test
mov
sub
cmp
inc
and
sbb
mov
icebp
xchg
push
imul
fldt
shll
inc
js
std
test
call
pop
mov
fmulp
mov
mov
or
pushf
xor
push
rolb
lods
movsl
dec
mov
sbb
adc
mov
cmp
mov
rclb
xor
test
addr16
sbb
push
icebp
in
jecxz
movsb
fucomip
repnz
adc
mov
subl
lods
jge
stos
dec
and
clc
ret
jmp
jg
stc
sbb
jne
mov
xchg
cmp
aam
dec
pop
nop
xchg
mov
and
jno
add
shl
mov
and
rorb
hlt
call
sbb
loopne
imull
add
sbb
cmpsl
and
push
ljmp
jo
cmpsl
movsl
pop
dec
sub
cwtl
push
rclb
movsl
mov
mov
add
call
lock
lret
ds
push
cmp
fwait
clc
ljmp
xchg
in
das
imul
es
ret
or
pop
inc
out
and
repz
lds
scas
inc
cmpsb
out
cld
arpl
jbe
dec
dec
vpaddusb
cmc
leave
xlat
cli
jmp
inc
add
mov
test
push
jle
pop
adc
mov
pop
ja
xchg
fistpl
or
ja
out
ret
add
mov
sahf
cmp
movsl
jae
cmp
and
repz
inc
mov
mov
leave
or
pop
cmp
je
sub
inc
shll
and
inc
jecxz
andl
inc
lahf
push
lret
cli
xor
add
push
cmpsl
mov
insb
pop
icebp
ljmp
je
fisubs
fwait
cmp
hlt
or
roll
and
mov
dec
sub
xchg
mov
leave
mov
rcrb
dec
lods
xor
bound
adc
subb
mov
pop
sahf
sub
in
cltd
shll
incb
mov
pop
pop
jmp
pop
fsubr
das
test
loopne
xchg
adc
mov
jnp
jp
or
in
sub
add
mov
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
jmp
ret
dec
icebp
dec
insl
mov
test
jl
lret
jl
mov
fistpl
push
sub
and
xor
jecxz
jae
mov
add
dec
lret
push
leave
in
push
repz
and
stos
ss
movsb
icebp
lret
ret
push
jb
xchg
push
out
enter
mov
xor
mov
ss
jmp
inc
cmp
dec
out
pop
pop
adc
std
sub
das
pop
mov
or
mov
scas
xor
sbb
dec
inc
das
mov
cmp
jle
repz
dec
mov
out
jno
mov
xor
jo
data16
pop
adc
xchg
xchg
scas
or
add
in
mov
test
out
movl
pop
imul
sbb
scas
sub
cmp
adc
and
cltd
arpl
popf
dec
and
fwait
rcrl
mov
push
cmp
les
jge
ror
push
std
call
dec
push
mov
inc
dec
adc
jle
pop
xor
jg
out
mov
dec
lret
shlb
push
mov
outsl
adc
lcall
addr16
xor
lock
mov
pusha
mov
enter
lahf
popf
pop
and
dec
jp
inc
cmp
push
lea
dec
aad
pusha
je
jp
arpl
notb
and
dec
or
cld
dec
out
fdivr
mov
mov
dec
insb
out
test
enter
and
lea
and
sub
sub
xchg
jg
ljmp
mov
scas
lea
mov
pop
jnp
sti
dec
mov
inc
hlt
in
outsb
shlb
and
add
push
and
mov
mov
call
mov
cmpsl
or
call
add
pop
lods
shlb
cmp
outsl
add
stos
lods
int
mov
sbb
cmp
xor
mov
inc
aad
out
add
inc
jmp
pop
test
mov
cmc
push
jo
loop
sbb
jns
push
mov
ljmp
ret
std
dec
adc
and
andl
imul
loopne
sbb
jg
dec
ds
ret
lds
jmp
test
ds
out
pushf
cld
push
fistpl
inc
sbb
fcoms
pop
adc
adcb
and
ja
loopne
jbe
pop
push
lods
rol
lea
pop
xor
subl
add
out
shrl
fs
adc
xor
and
inc
inc
fisubl
jmp
pop
inc
lock
lret
and
mov
or
imull
push
and
pop
into
ja
sub
fildl
mov
sub
xchg
pushf
push
mov
sub
dec
mov
out
lcall
ret
ret
mov
inc
xor
pop
xor
daa
inc
pop
add
lret
mov
push
sub
or
mov
shlb
clc
add
add
imul
mov
mov
sub
cmp
mov
jbe
jmp
dec
mov
cwtl
hlt
insl
push
jge
loop
loope
mov
das
aas
xchg
jns
jl
mov
cli
out
mov
jmp
shlb
xor
mov
pop
xchg
mov
xchg
add
cli
outsb
mov
sarl
cmp
and
fwait
cmp
or
in
and
mov
push
cmpsb
rcrl
mov
add
push
jl
jns
fidivrl
lcall
ret
pop
inc
ljmp
mov
fldt
dec
pusha
js
rorb
pop
push
sbb
nop
sub
loopne
sbb
in
mov
push
mov
pop
mov
xchg
hlt
andl
mov
out
lret
fcmovbe
jne
xchg
into
mov
fnstenv
push
dec
dec
leave
mov
push
pop
cmp
mov
sbb
push
or
dec
adc
lret
sub
mov
fistpll
xchg
sub
push
push
in
push
addr16
xchg
sub
or
loope
subb
mov
mov
scas
xchg
push
inc
sbb
xor
cwtl
sub
lock
fdivrs
push
scas
cmpsl
mov
scas
icebp
aam
mov
and
adc
pop
or
lods
test
mov
xlat
pop
cmpsl
roll
mov
push
jbe
mov
mov
dec
lock
mov
xchg
adc
jle
inc
jg
jecxz
imul
push
test
or
scas
aam
push
pop
shrl
aaa
mov
sub
cmc
lods
mov
jp
and
into
pushf
out
pop
rcrb
add
add
test
lret
adc
mov
cmp
mov
dec
stc
adc
xchg
pushf
rorb
push
mov
or
adc
jle
lds
xor
inc
rclb
or
and
lcall
push
jg
or
fs
dec
sub
dec
outsl
jb
mov
shl
mov
mov
pop
xor
pop
leave
adc
push
dec
xchg
test
push
cmp
cld
mov
popf
and
cmp
rorb
shr
adc
mov
int3
aam
cmc
sub
aaa
inc
pop
outsl
cli
and
mov
inc
or
push
mov
add
int
push
in
popf
inc
lcall
lods
jae
addl
mov
xchg
push
lods
ss
test
pop
push
dec
fs
data16
ja
xor
lock
movsl
sub
lret
jo
mov
adc
rorb
or
adc
add
aam
dec
inc
stos
psubsb
mov
addl
mov
push
and
aam
lock
dec
mov
xchg
push
xchg
outsb
push
pop
adc
mov
adc
ljmp
es
mov
cmpsb
xor
push
inc
dec
dec
mov
pop
icebp
fldl
dec
jecxz
cmpsb
mov
pop
mov
add
add
pop
fstl
dec
les
cld
xor
xor
add
add
imul
mov
mov
jmp
cmp
lret
jge
dec
jo
add
xchg
jns
jl
push
test
sbb
cmp
cwtl
jge
and
ret
cmp
sbbb
mov
sbb
mov
imul
pop
daa
aas
or
dec
icebp
mov
outsb
mov
or
mov
adc
rorl
addb
dec
jmp
aaa
pop
sahf
and
aas
pop
inc
in
mov
call
testl
lds
test
les
dec
or
mov
hlt
push
out
push
cmpsl
loopne
inc
xchg
inc
hlt
and
test
push
sbb
sub
push
lret
fdiv
test
fistpll
mov
cs
dec
jo
lds
or
decl
xchg
ljmp
mov
lret
in
sbb
lea
pop
stos
pop
push
pop
inc
int3
das
inc
bound
fwait
push
cmpb
sbb
mov
push
mov
xchg
add
xchg
insl
mov
adc
jle
jnp
mov
nop
cmpsb
movsl
mov
xchg
mov
das
int
jns
sub
arpl
adc
xchg
daa
or
push
adc
inc
js
or
xchg
fcmovne
mov
mov
jbe
outsb
es
fisubs
dec
lea
lret
inc
xor
mov
inc
jecxz
dec
aas
aaa
xor
add
cmpsb
pop
bound
fisubrl
shr
sub
mov
arpl
enter
jle
sbb
ss
cmp
fs
sbb
aad
sti
fmul
adc
ficoml
jb
jl
dec
popf
andb
mov
sahf
xor
sti
mov
jmp
imul
sub
sub
inc
inc
aam
mov
lcall
inc
inc
inc
xor
mov
add
pop
test
sbb
insb
ficoml
int3
mov
sbb
jo
ret
call
idivl
jnp
dec
cmp
lcall
jnp
mov
cmp
ja
and
fnstenv
imul
push
or
movsb
js
sbb
mov
and
insb
cmp
arpl
jle
call
inc
scas
hlt
insl
push
push
test
outsb
xchg
out
add
out
sbb
inc
and
jno
push
gs
push
movsl
jno
std
decb
or
adc
daa
mov
ds
mov
jbe
and
dec
jmp
push
rol
push
mov
fs
in
mov
je
test
and
jns
loope
mov
sub
icebp
dec
pop
or
push
lahf
adc
or
cltd
loopne
jbe
gs
mov
add
xor
les
inc
push
mov
inc
dec
push
pop
add
mov
push
dec
jo
fisubl
enter
sbbl
mov
subb
je
and
jmp
cmp
addr16
fs
dec
dec
cmp
pop
xchg
mov
push
fmull
rol
call
mov
movl
movl
mov
xor
jmp
adc
mov
jge
repz
push
add
xlat
xchg
in
arpl
jl
repz
mov
jl
inc
int3
cmp
sbb
push
and
add
repz
mov
fldenv
shrl
push
aad
arpl
or
sbb
mov
cmp
ror
mov
push
inc
das
enter
stc
into
push
or
imul
pushw
xchg
sbb
das
bound
xlat
call
orb
mov
stc
imul
add
sar
movsl
insl
cmpsl
cmp
mov
fbstp
mov
cmp
add
jbe
in
mov
pop
add
inc
mov
ror
pusha
xchg
rcll
push
shrl
stos
push
je
add
push
hlt
in
inc
push
mov
out
ljmp
dec
arpl
and
sub
mov
shlb
xchg
and
cmp
scas
jo
movsl
push
adc
int
outsl
iret
pop
movl
imul
sub
sbb
mov
push
lods
movsb
mov
in
mov
divl
arpl
inc
mov
mov
xchg
adc
push
sbb
out
mov
jge
js
mov
rolb
cmp
lock
lcall
sbb
lret
stc
cmp
jae
and
ret
hlt
pop
ja
enter
scas
or
sub
mov
push
jbe
fsubs
das
insb
dec
bound
xor
and
add
mov
ficompl
test
mov
dec
push
or
clts
cmp
add
push
dec
mov
out
stc
adc
cwtl
sarb
or
sub
lcall
mov
sbb
mov
addb
add
in
movsb
lea
mov
test
ds
loope
cmp
mov
mov
and
out
pop
jne
in
stos
les
andb
stos
je
aaa
push
rorb
adc
mov
mov
sbb
mov
cmp
mov
cmp
pop
mov
lods
pop
cmp
mov
rcl
dec
scas
add
inc
sub
or
xor
pop
jp
cltd
aas
aaa
out
mov
nop
sub
add
lret
and
adc
cwtl
aad
mov
xchg
sahf
dec
push
jae
push
jne
popa
jmp
push
repnz
and
cltd
adc
loopne
and
cwtl
insl
add
std
pop
sbb
insl
pop
test
xchg
imul
xor
fs
cmp
mov
fnstcw
call
or
xchg
cmp
in
pusha
pop
aaa
mov
mov
fldt
mov
cmc
lret
hlt
sbb
push
mov
notl
cld
or
push
xchg
mov
xchg
outsl
pusha
jp
mov
movsb
push
jnp
jns
jnp
push
lret
jno
and
in
outsb
sbb
inc
cmpsb
adc
lods
xor
aam
inc
test
push
sbb
lea
call
mov
rorl
add
outsb
add
add
daa
inc
imul
xchg
popf
cmp
test
cmp
jl
lret
fdivrs
pop
inc
adc
les
xor
in
or
cli
roll
scas
cmp
cmpb
loop
add
or
push
add
dec
bound
lcall
or
cmp
push
stos
sub
sub
or
fmull
jg
ffreep
mov
stos
stos
nop
pusha
xor
mov
push
sbb
xor
sti
jnp
rorb
xor
mov
lret
out
add
xor
mov
pop
les
jae
jge
add
orl
sub
sub
mov
mov
sbb
mov
dec
les
cwtl
xorb
push
push
sbb
sub
jbe
mov
enter
dec
jne
push
dec
jae
cmp
addr16
cld
cld
cmp
jmp
mov
daa
xor
jns
push
movsb
stos
dec
xchg
push
xor
jns
cld
daa
dec
add
or
jle
aas
xchg
mov
iret
lds
popf
and
xor
into
sti
es
inc
xchg
jae
mov
sbbl
mov
xor
hlt
movsl
mov
pop
xchg
fucomip
dec
shrl
inc
mov
push
xchg
addr16
mov
out
push
rcll
mov
or
aad
push
jge
mov
scas
nop
das
sub
fildll
lock
loope
jb
cmp
xchg
ljmp
lcall
cmp
ss
sbb
std
adc
adc
sub
fmulp
mov
adc
mov
push
xor
in
pop
pop
stos
stos
dec
cld
roll
call
jmp
push
xchg
pop
lahf
stos
xchg
arpl
and
cmpsl
popf
fdivrs
clc
add
and
add
outsl
mov
add
ss
mov
pop
ds
dec
scas
add
jno
cmpsb
arpl
popl
add
ljmp
int3
dec
and
cmp
mov
pop
dec
aad
xor
sbb
dec
jae
pop
and
mov
jo
adc
mov
lret
mov
subl
stc
jo
cmp
or
mov
adc
flds
lods
dec
pop
mov
pop
adc
pop
in
hlt
push
movsb
or
test
sub
std
push
into
xchg
imul
in
jl
lea
rclb
lods
lds
and
leave
pop
inc
or
stc
push
mov
xlat
fs
jmp
push
cmp
cwtl
pop
enter
cs
call
subl
nop
jns
sub
or
xor
add
hlt
push
push
cmp
das
pop
jg
or
scas
pop
sarl
add
adc
push
mulb
je
leave
lods
cld
lock
cmp
or
sub
lahf
add
hlt
pop
adc
divl
mov
dec
push
xchg
in
pop
xchg
insl
cmovs
mov
xor
add
mov
jmp
push
pushf
scas
stos
jbe
pop
arpl
adc
mov
xchg
jl
lret
jl
je
outsb
mov
lcall
cmp
sbb
loop
movsl
popl
gs
push
loop
mov
jmp
and
in
adc
xchg
pop
or
ds
cmp
out
and
fwait
gs
push
push
mov
pop
les
in
xchg
ret
shlb
cmpsb
push
lds
sbb
dec
add
mov
xchg
pop
push
mov
pop
inc
nop
faddl
iret
aas
outsl
inc
icebp
loope
push
test
imull
pop
shl
lret
cmpsb
xchg
stos
orl
mov
dec
jne
pop
enter
out
lock
movsl
divl
xchg
jg
mov
lods
cmpsl
adc
icebp
mov
inc
mov
outsl
fisttps
xchg
push
pop
xchg
sub
cmc
sub
loop
sub
pop
fs
dec
popa
pop
fwait
add
xor
or
dec
out
or
xlat
and
pusha
sub
insb
aas
push
sub
outsb
xchg
dec
je
scas
push
inc
into
fnstenv
sub
jo
pop
out
repnz
outsb
push
fsubl
popa
pop
and
or
xchg
ljmp
leave
in
mov
mov
arpl
and
xor
push
push
lret
mov
xchg
in
xchg
cli
jmp
and
data16
in
add
es
mov
or
rcll
shll
cmp
out
sub
popf
test
cmp
mov
xchg
sub
dec
cli
adc
data16
add
inc
cmc
or
das
mov
test
pop
cmp
fisubrs
lods
imul
add
test
cmp
push
add
test
sbb
adc
shlb
sbb
push
ret
subb
ret
lods
push
push
xchg
into
xchg
dec
pop
jp
cmp
js
je
pushf
inc
jle
ss
and
test
aad
push
repz
loopne
je
lock
gs
sub
lahf
out
inc
cmp
sbb
inc
clc
mov
push
jb
xchg
sbbl
xchg
mov
xchg
daa
test
repnz
xor
cmpsl
dec
cmc
push
sub
js
add
mov
in
ror
mov
xchg
push
jge
lret
xor
icebp
jne
push
mov
mov
xchg
xlat
inc
mulb
jge
pop
jnp
imull
into
mov
ficoml
sbb
cmp
sbb
mov
mov
adc
pop
out
push
dec
jecxz
or
xchg
sub
call
fbstp
lret
out
xor
pop
inc
push
pop
jbe
cmpsl
pusha
sbb
add
aas
adc
mov
in
mov
fucomp
or
fmul
lret
add
push
push
xor
shlb
pop
jbe
dec
jnp
int3
jl
ljmp
mov
addr16
adc
xchg
cmpps
mov
add
cmp
scas
mov
in
rcll
cmp
mov
xchg
mov
aas
sub
cld
rcrl
rcll
jb
pop
scas
cmc
mov
hlt
repnz
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
xor
xor
jmp
dec
mov
mov
dec
imul
rcll
insl
xchg
jl
lret
jl
jmp
fsubl
mov
xchg
dec
les
insb
pop
insl
xor
mov
decl
mov
jae
mov
movsb
movsl
inc
sbb
xor
jl
jnp
sahf
rcll
xchg
adc
pop
mov
pop
ljmp
repnz
in
cmpsb
and
xor
std
pop
das
addr16
jp
outsb
pop
and
subb
push
rolb
xor
dec
out
push
fidivl
into
pop
mov
repnz
sub
std
inc
das
sahf
inc
dec
or
xor
or
pop
in
divl
fildl
jge
sti
loop
mov
mov
in
and
sub
lret
test
lret
aaa
cwtl
sub
jge
es
pop
stc
imul
push
jno
rcrb
mov
cmp
add
jl
push
shll
repz
push
mov
cmpsb
int3
push
push
push
and
stos
ds
mov
adc
pop
andl
ficomps
fsts
pushf
movsb
fld1
insl
loope
pop
xchg
subl
popf
out
xchg
in
aas
and
inc
mov
cmpsl
lret
in
stos
jae
mov
addr16
mov
pushf
xor
pop
arpl
adc
mov
stc
add
dec
fcomp
insl
out
cld
iret
mov
adc
je
sbb
into
stc
lds
mov
or
jbe
repz
and
lods
sub
xchg
hlt
or
call
out
lds
xchg
xor
sbb
xchg
lods
int
sbb
movb
pop
leave
lret
pusha
sbb
xchg
xchg
bound
mov
movsb
lret
ljmpw
test
fdivrp
fsubl
sub
dec
outsl
jle
lds
pop
jnp
mov
lea
les
notb
stos
jle
push
pop
cmpsb
incb
jnp
in
sbb
nop
ror
mov
dec
arpl
stos
outsl
cltd
push
add
enter
int
push
jne
arpl
mov
cmpsb
neg
gs
mov
xor
cmovg
xchg
nop
jbe
pop
addr16
repnz
xor
sbb
rolb
sbb
sti
pop
jmp
push
in
imull
and
das
or
and
loopne
and
shlb
add
fstl
in
insl
ljmp
das
mov
gs
leave
cmpsb
outsb
iret
xchg
imul
test
test
cmp
pop
imul
ucomiss
lea
lods
fmuls
mov
subb
push
js
add
xor
pop
iret
leave
jg
lds
jno
or
loope
mov
sahf
push
jbe
adc
pop
push
xchg
push
stos
rcrb
fcoml
pop
hlt
aaa
cld
pop
out
jg
xchg
sbb
mov
xchg
xchg
fidivs
cmp
ja
orb
mov
add
mov
sub
int3
scas
rcl
mov
aaa
stc
push
and
repz
add
je
outsl
mov
stos
insl
mov
loopne
add
clc
inc
inc
xchg
dec
or
leave
mov
stc
scas
mov
stc
imul
add
mov
mov
jmp
movsb
loopne
mov
mov
pop
push
loope
je
cmp
jl
cld
xchg
add
repnz
fcmovu
loopne
inc
push
and
js
adc
pop
cmp
fsubl
test
add
mov
icebp
cmp
mov
sub
mov
cmpl
inc
lods
outsl
shll
xchg
inc
outsl
cmp
inc
filds
popa
or
out
add
shlb
mov
xor
ror
jbe
or
std
iret
pop
ja
add
cld
ret
lods
add
xchg
mov
shlb
es
pop
movsb
inc
inc
ffree
pop
loop
lcall
fs
xchg
cli
jae
mov
cmp
xor
push
dec
sub
mov
adc
out
js
jle
stc
xor
and
sub
xor
jne
mov
popf
outsl
lods
fwait
enter
hlt
xor
mov
dec
mov
lahf
jnp
leave
sti
add
scas
mov
fs
push
push
imul
add
push
xchg
dec
xchg
jecxz
ja
mov
mov
je
dec
daa
cmp
loope
rorb
pushf
cwtl
jge
mov
xlat
or
cmpsb
mov
cmpsb
jns
dec
outsb
sub
cmp
xor
adc
mov
ror
out
dec
jnp
push
or
in
lret
test
test
mov
mov
mov
out
dec
sub
test
les
inc
cmpsl
xor
sub
xchg
stos
lds
rcrb
mov
daa
push
ret
mov
fstps
pop
mov
push
xor
cmc
cmc
aas
dec
cmc
jecxz
out
and
cmp
in
xchg
jbe
xor
inc
insb
sbb
push
lcall
cmp
jmp
xor
scas
mov
bound
lods
and
rep
xor
cli
sbb
mov
mov
xor
push
jo
mov
gs
mov
mov
sub
rclb
sar
out
add
sbb
cmp
repz
mov
push
xchg
dec
jb
push
cltd
dec
sbb
inc
dec
pop
jbe
jno
pop
push
imul
insb
push
test
xorl
mov
pop
mov
aas
inc
imul
sti
cmpsb
sub
imul
movaps
and
cld
imul
xchg
shlb
or
pop
xor
mov
cmc
jg
and
popa
lds
inc
cli
push
stos
inc
xor
mov
ja
ss
mov
dec
push
mov
ds
aam
dec
and
in
sbb
cmc
pop
or
icebp
pop
lcall
es
add
mov
ss
lahf
into
int3
xor
xchg
subl
push
or
xor
rclb
sbb
push
add
mov
sbb
mov
loop
jg
mov
lea
add
imul
jmp
lret
jo
or
jmp
sahf
xor
insb
xor
inc
sbb
jns
jl
ret
adc
pop
test
lret
orl
xchg
push
dec
sbb
lods
jbe
and
int
test
inc
into
mov
mov
push
push
cmp
fwait
sbb
call
add
loop
imul
lods
imul
xchg
pop
jecxz
and
dec
pop
cmp
lock
push
sub
push
rcr
popf
sti
and
add
es
pop
push
mov
mov
push
rorl
stos
gs
dec
xchg
ret
rol
movsl
push
repz
mov
std
mov
aad
insb
stos
je
out
mov
mov
xor
es
dec
testl
ret
jg
jge
fadd
and
adcb
pop
test
rcll
adc
lock
xor
add
cmp
and
lds
jns
mov
adcb
push
pop
dec
jecxz
out
jbe
push
in
xchg
mov
andb
mov
sub
nop
je
pop
add
or
pop
fcompl
lahf
jmp
xchg
mov
mov
and
jecxz
imul
je
add
sub
push
fadds
pusha
mov
cmpsl
pusha
inc
xchg
lahf
mov
and
das
mov
andl
into
add
sub
mov
inc
inc
movsl
sbb
mov
pop
add
std
jg
ljmp
mov
stos
jb
push
mov
xchg
js
lds
dec
stc
addb
xchg
xor
ficomps
pop
dec
dec
fstpt
std
xchg
lods
ljmp
adcb
int
dec
fs
add
jle
dec
pop
cld
aas
std
sbb
sbb
lea
sahf
pop
cmpl
fwait
stos
and
fs
scas
push
dec
jl
gs
push
dec
push
lret
sbb
push
pushf
cmp
fs
ss
and
jecxz
mov
cmp
push
pushf
pop
sbb
mov
inc
push
mov
sbb
ficomps
in
into
movsb
repz
imul
shlb
add
or
cld
scas
clc
dec
and
fwait
sbb
and
push
test
insl
gs
jp
and
mov
and
jo
outsl
mov
fs
xchg
popl
arpl
movsl
pop
push
je
dec
lods
add
cs
std
in
icebp
pop
sbb
and
mov
sbb
sahf
loopne
jl
adc
cmp
or
mov
sarl
cli
adc
xlat
mov
mov
jl
enter
push
in
ds
int3
add
sahf
shrl
sub
push
xchg
das
sbb
sub
test
bound
loope
lret
mov
int3
stos
xor
repz
inc
push
loope
jo
sub
call
mov
loop
mov
xor
jno
lods
push
fsubrl
mov
pop
sbb
add
add
insb
mov
xor
sub
mov
mov
xor
add
imul
mov
xor
sub
lea
cmp
jbe
mov
mov
jmp
mov
popf
dec
pop
stc
ss
xchg
xor
xchg
jl
lret
jl
mov
xlat
bound
pop
lret
and
dec
lea
fistl
movsb
cmp
push
fwait
xor
imul
loopne
push
ret
xor
je
pop
push
std
and
sub
push
dec
cwtl
xlat
sti
lea
mov
sub
sub
or
mov
rcrl
mov
test
pop
push
cmp
fwait
lods
pop
fldcw
adc
mov
lcall
jae
dec
rol
dec
push
lock
mov
jmp
jno
jb
aas
add
push
call
add
mov
test
popf
jg
ret
popa
call
xor
push
xor
pop
inc
adcl
add
into
adc
pop
mov
sub
sub
rorl
xor
cmc
xor
fisubs
adc
sbb
je
aad
in
mov
xor
stc
sbbl
cmp
test
sub
push
and
pushf
or
js
inc
aaa
rdtsc
and
mov
push
sbb
sbb
jge
cmp
and
adc
lret
pop
fcmovu
mov
pop
mov
xor
jecxz
fcmovb
daa
out
push
add
fnstenv
push
hlt
sub
push
je
or
mov
fsubs
adc
push
lds
push
stos
or
jo
sahf
and
mov
push
xor
pop
stos
loop
cmp
add
cmp
cmp
outsb
test
sbb
outsl
xlat
adc
pop
pusha
hlt
pop
cli
mov
sahf
mov
out
jmp
mov
push
sbb
outsb
mov
fstl
sbb
add
sub
jecxz
imul
push
add
xor
in
loopne
imul
imul
iret
push
ja
jmp
loopne
add
fwait
push
and
mov
imul
pop
es
pop
pop
popa
mov
sub
inc
push
mov
cmp
aas
lret
sti
popf
add
shll
pop
xor
jne
xlat
les
pop
push
hlt
cmp
pop
aad
jecxz
pop
mov
rol
mov
decl
push
push
fisubs
push
ds
lods
mov
pop
or
sub
xchg
cmp
xchg
xor
movsb
jp
insl
fsubl
add
pop
jle
outsl
popa
pop
sbb
and
push
cltd
inc
mov
mov
loopne
nop
leave
dec
pop
imul
mov
lretw
adc
dec
std
mov
je
jbe
or
lret
iret
cld
inc
xchg
stc
xor
fisubrl
je
nop
and
sbb
or
dec
mov
enter
mov
xor
sub
test
push
mov
clc
out
xor
lea
mov
inc
and
test
push
shlb
nop
loope
rolb
rorl
scas
xlat
mov
xor
add
mov
lea
mov
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
pop
pop
leave
ret
push
mov
sub
andl
push
adcl
push
push
sbbl
push
subl
call
push
subl
call
test
je
push
pop
jmp
andl
xor
xor
inc
mov
cmpl
jne
pushl
pushl
push
pushl
call
cmpl
jb
orl
movl
dec
movl
add
lea
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
xor
add
add
mov
lea
inc
mov
mov
and
mov
mov
sbb
mov
mov
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
mov
sbbl
mov
movzbl
and
mov
xor
movl
cmpl
je
cmpl
jne
push
pushl
push
push
call
cmpl
jne
mov
dec
mov
xor
add
dec
mov
jmp
xor
mov
add
mov
mov
mov
cmp
mov
mov
mov
mov
je
sub
mov
xor
add
imul
movl
mov
movl
jmp
xor
movzwl
sub
add
mov
xor
mov
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
call
cmpl
jne
mov
inc
mov
jmp
sbb
add
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
push
pushl
pushl
push
push
call
jmp
mov
mov
orl
mov
adcl
xor
adcl
add
cmp
movl
jne
push
pushl
pushl
call
orl
mov
mov
mov
or
mov
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jb
mov
sbbl
mov
movl
cmpl
je
cmpl
jne
push
push
pushl
call
cmpl
jne
mov
dec
mov
xor
or
dec
mov
jmp
xor
mov
andl
xor
or
inc
mov
cmpl
jne
push
push
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
and
mov
mov
sbb
movl
andl
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
call
cmpl
jne
xor
add
inc
mov
jmp
xor
or
sbb
mov
movl
mov
or
mov
sbb
mov
mov
and
mov
xor
xor
add
mov
xor
xor
add
movl
lea
movl
mov
movl
cmp
movl
ja
jmp
sbbl
mov
and
mov
orl
xor
adcl
lea
andl
push
mov
xor
andl
lea
push
mov
or
mov
pushl
adcl
call
addl
mov
mov
sbb
xor
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jb
lea
sbbl
mov
mov
xor
addl
xor
xorl
add
and
mov
adcl
xor
lea
mov
cmp
movl
jbe
mov
mov
mov
mov
mov
mov
pushl
sub
pushl
xor
mov
pushl
call
sub
xor
mov
mov
mov
xor
add
xor
div
mov
cmp
jne
mov
mov
mov
mov
movl
movl
movl
movl
movl
movl
mov
xor
add
mov
movl
movb
mov
xor
add
mov
mov
xor
add
mov
mov
xor
add
mov
mov
xor
add
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
cmpl
je
lea
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
test
mov
jne
mov
xor
add
test
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
xor
mov
sub
sub
mov
add
mov
mov
mov
mov
xor
sub
mov
lea
incb
inc
push
pop
dec
xchg
decb
pushl
mov
mov
pushl
lea
pushl
lea
pushl
lea
pushl
lea
pushl
xchg
inc
push
pop
call
lea
mov
mov
push
add
push
lea
push
call
mov
mov
mov
mov
mov
mov
sub
xor
cmp
je
mov
mov
sub
xor
cmp
jne
mov
add
jmp
mov
xor
add
mov
mov
xor
add
mov
jmp
mov
mov
mov
mov
add
mov
mov
pop
pop
pop
leave
ret
push
mov
push
push
movl
mov
mov
movl
push
mov
mov
mov
push
movl
mov
mov
mov
cmp
movl
je
andl
mov
inc
mov
cmpl
jne
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
or
mov
mov
sbbl
xor
add
cmp
je
and
mov
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jb
xor
add
push
pushl
pushl
mov
call
mov
mov
jmp
cmp
mov
lret
out
dec
lds
jl
mov
cmp
hlt
and
fldcw
dec
jmp
mov
inc
pushf
cltd
dec
inc
icebp
inc
fs
xchg
fcomip
cmpsb
dec
mov
clc
imul
mov
pushf
jecxz
lea
out
push
mov
sub
inc
jnp
test
ja
fsubrs
add
push
dec
inc
mov
loope
dec
lcall
inc
cmpsl
into
movsl
add
push
mov
mov
or
cmp
imul
sbb
jnp
nop
das
pop
jg
xor
int
add
movsl
fwait
stos
xor
hlt
jbe
inc
pushf
dec
into
jne
xchg
les
sbb
mov
cmp
ret
imul
xor
fidivl
dec
jb
lds
pop
mulb
dec
or
testl
pop
and
or
mov
int
add
mov
sarb
in
adc
mov
sbb
cmp
mov
inc
xor
xor
mull
loop
test
jns
sbb
out
sahf
push
xor
adcb
lods
cld
cmpsl
mov
rcll
xchg
ljmp
adc
and
mov
pop
test
sbb
jl
pushf
lret
mov
nop
lds
pop
xchg
dec
or
imul
lahf
push
pop
jecxz
dec
xchg
inc
pop
nop
pop
js
cmp
add
xor
jb
mov
ja
fucom
ds
cmp
sub
push
adc
call
movsl
sti
popf
pop
into
adc
mov
repz
divb
or
pop
pop
sub
imul
stc
movsl
mov
inc
ja
cmpsl
clc
cmpsl
loopne
mov
mov
ret
fsubs
test
xchg
and
stos
adc
adc
fldt
push
in
test
xchg
mov
cmp
mov
push
jae
xchg
loop
xchg
ds
xchg
dec
enter
adc
rorb
flds
ret
adc
push
pop
in
cwtl
aad
pop
lock
jecxz
andb
xor
xchg
lods
fmuls
in
xchg
dec
pop
push
test
mov
aam
push
jno
xor
pop
addb
mov
clc
fstl
and
popa
push
sbbl
inc
das
loopne
pop
sbb
jmp
mov
js,pn
xchg
adc
ficoms
xchg
repnz
bound
xchg
sbb
mov
dec
test
xchg
cmp
pop
imul
xor
xor
test
sub
in
leave
push
xchg
out
pop
adc
cli
stos
xchg
rol
insl
test
and
int
call
mul
pop
ds
mov
cwtl
and
jne
test
outsb
inc
mov
mov
movl
jp
push
push
lret
sub
adc
jns
cmp
pop
pop
insb
ret
xchg
push
outsl
mov
bnd
aas
arpl
mov
lods
ljmp
sub
lock
test
cmp
insb
add
adc
scas
dec
xchg
test
cld
cmp
inc
or
fimuls
enter
jb
in
mov
sbb
mov
inc
push
jne
jae
cltd
fsubrl
daa
movsl
jg
jne
cmc
mov
jmp
or
aam
jns
mov
jl
cmpsl
jns
jl
fiaddl
aam
mov
lods
pop
loop
sbb
cmp
test
bswap
fsubrl
ret
test
push
xchg
and
xchg
xor
mov
cmp
enter
sub
pop
and
add
iret
je
xchg
mov
testb
arpl
mov
sbb
fcmovne
mov
pop
mov
dec
or
push
adc
and
jno
jle
and
ljmp
imul
test
push
loop
movsl
or
cmpsl
lcall
mov
lret
loope
xlat
into
mov
inc
push
gs
sti
mov
pop
clc
hlt
and
sub
pop
jmp
xchg
into
mov
mov
sub
andb
and
pop
out
ljmp
or
pusha
or
pop
cltd
and
jecxz
vpsubusb
adc
push
js
sub
addr16
popf
or
sub
dec
rcrl
test
xor
xor
cli
adc
ja
ljmp
dec
sub
dec
in
or
xor
pop
pushf
push
xchg
mov
mov
and
sbb
adc
inc
mov
xchg
ficoms
loopne
xor
pop
push
push
test
stos
in
push
aad
stos
sub
xstore-rng
cmpsl
inc
sbb
outsb
test
out
or
adc
vphaddubd
cmp
mov
shlb
lret
ret
data16
sbb
test
push
cld
int3
loopne
cmp
jge
sbb
leave
xor
sbb
push
sti
mov
xchg
mov
lahf
pop
pop
mov
call
dec
add
push
mov
xchg
int3
xor
ljmp
push
out
adc
cli
lods
xchg
mov
pop
ss
dec
test
icebp
push
mov
mov
cmp
xchg
adc
or
outsb
push
dec
movsl
add
cld
stos
scas
or
in
aam
in
imul
or
jns
sub
push
push
add
mov
push
jmp
xchg
subb
dec
call
push
inc
cmp
outsb
cmp
mov
in
push
mov
loop
lods
jge
xchg
pushf
jne
mov
sub
jbe
jns
cmpsb
cltd
loop
cmc
pop
pop
xorl
negb
fst
or
lretw
and
push
xchg
dec
or
inc
popf
pop
loope
into
movzwl
pop
insb
push
das
add
jg,pt
sub
adc
xchg
mov
mov
mov
and
add
adc
push
aaa
adc
cwtl
dec
cmp
xor
stos
pop
mov
xor
adc
xor
sarl
mov
cmpsl
mov
jecxz
nop
pop
push
in
test
jno
sbb
sub
fs
stos
adc
jl
jp
add
mov
mov
xchg
sahf
lret
push
xor
dec
push
cmp
out
stos
repz
inc
jge
ljmp
out
xchg
xor
xchg
jle
mov
ds
sub
popa
or
inc
mov
fsubrp
cmp
lods
sbb
imul
sbb
jmp
mov
mov
xor
add
cmp
jne
mov
xor
add
jmp
icebp
jmp
imul
add
xchg
lods
jl
cmpsl
jns
jl
mov
imul
out
xchg
lcall
loopne
lods
adc
push
add
inc
xchg
push
fisttpl
cmp
das
fisubrs
cwtl
das
fxch
push
or
in
push
and
inc
add
ljmp
iret
movsl
addb
xchg
ret
es
cmp
subb
scas
movsl
outsb
inc
sbbb
outsl
push
lea
divl
ror
mov
call
insb
js
mov
push
xchg
adc
enter
and
cmp
in
mov
xor
mov
jo
icebp
inc
push
add
mov
xor
stos
and
pop
or
cmpl
iret
lods
sub
jl
xchg
pusha
cmp
icebp
mov
lcall
inc
movsl
push
fs
or
in
or
adc
xor
sbb
jo
das
loope
cld
pop
sub
iret
inc
das
test
dec
xchg
push
insb
mov
adc
cli
inc
insl
imul
scas
xor
or
in
adc
cmp
dec
add
push
dec
mov
jnp
repnz
sub
outsl
or
push
push
gs
lcall
sbbl
pop
xchg
pop
decl
hlt
xor
enter
dec
cmpsl
and
xchg
mov
dec
pop
xor
mov
inc
loop
xlat
out
lret
pop
add
mov
inc
iret
loopne
jo
add
cli
dec
ret
push
adc
stc
adc
sti
dec
popa
pop
pop
nop
sahf
cwtl
scas
insl
pop
pop
stos
dec
inc
insl
pop
es
add
push
bound
mov
pop
out
pop
push
sahf
jno
in
or
push
aad
lahf
pop
jbe
adc
popa
pop
add
fists
insl
rclb
int3
adc
aam
in
sub
ds
add
je
ret
je
das
xchg
cmp
int
in
lahf
out
cmp
mov
cltd
ret
sbb
aaa
daa
lea
dec
dec
add
mov
jne
dec
mov
repnz
cmp
test
pop
mov
daa
ds
imull
jb
aas
add
mov
push
fcomip
out
jle
jecxz
and
pop
xchg
gs
push
cwtl
xor
add
xorl
loop
xchg
cli
and
fistps
xorl
test
mov
sub
les
test
dec
fiaddl
xor
or
sub
das
inc
andb
sub
adc
pop
adc
out
pop
frstor
jecxz
jnp
aas
popf
push
stos
inc
mov
mov
jne
in
dec
pusha
or
ja
add
mov
lock
test
cmp
test
xlat
andb
out
cmp
jecxz
out
ror
scas
sub
cld
pop
aaa
jne
scas
enter
punpckhwd
out
dec
mov
nop
jle
jmp
adc
or
adc
mov
sub
xchg
pop
mov
ficompl
xor
outsb
and
popa
pusha
jp
push
xor
lahf
push
mov
rcrb
push
scas
jl
sub
sbb
ret
jl
imul
call
adc
xchg
dec
cmp
ljmp
inc
cld
xor
add
mov
jmp
push
mov
test
adc
test
jl
sbb
fldt
ret
add
test
inc
stos
or
daa
sbb
mov
dec
push
xor
mov
nop
mov
pop
jbe
mov
mov
movsb
dec
clc
cmp
mov
push
xor
or
push
cld
arpl
sbb
inc
xor
scas
or
cmp
mov
jns
popa
or
pop
fildll
addb
xor
mov
adc
jb
inc
mov
lret
fldt
iret
outsb
pop
push
xchg
mov
ja
push
mov
lret
push
shlb
adc
and
sti
mov
dec
mov
pop
add
dec
or
xchg
inc
cmp
mov
ja
out
loope
je
fidivl
mov
jbe
adcb
or
loop
or
xchg
push
stos
push
in
jge
hlt
scas
xchg
sbb
clc
adc
and
and
loop
fisubrl
jno
and
xor
mov
pop
into
and
cmp
hlt
pop
rorl
fidivrl
xchg
neg
xchg
push
and
fbstp
aam
clc
push
jg
fisubs
ja
pop
test
and
jne
adc
loopne
pop
les
insl
inc
call
add
and
mov
clc
lahf
add
imull
ret
mov
and
movsb
es
adc
mov
and
pop
push
cmp
pop
push
mov
push
out
xor
jmp
popa
adc
aas
pop
push
jae
roll
mov
mov
sar
test
loopne
mov
pop
int
mov
popf
xchg
popa
push
add
or
fnsave
sub
lcall
inc
xchg
jno
add
xchg
jl
int3
xchg
out
and
xor
or
push
adc
mov
jno
in
mov
inc
loop
adc
test
fsubp
pop
add
lret
xchg
loopne
fwait
push
nop
pusha
push
and
dec
jge
je
pop
pop
jge
enter
jbe
add
inc
mov
into
mov
xchg
xchg
fiadds
sbb
mov
shrb
test
lea
xor
das
and
ja
out
sub
jae
fs
sbb
popa
int
cmpsl
ljmp
xchg
pop
cld
sub
into
aam
add
add
cmp
sub
imul
fistpll
mov
add
std
lahf
jb
mov
sub
int
xchg
jle
jmp
sub
dec
mov
xchg
xor
rcrb
cltd
ret
dec
mov
repnz
sub
lret
fsts
clc
push
out
je
pop
adc
mov
ds
mov
mov
fmuls
or
lea
adc
sub
cli
cs
push
or
push
es
insl
ss
mov
and
es
xchg
bound
ja
lods
jno
sub
sub
sti
mov
add
bound
ret
cmpsl
cmc
sub
dec
cs
sub
fs
imul
inc
ret
xchg
lds
cmp
aad
gs
pusha
or
int
out
xchg
mov
sahf
lds
ljmp
repz
lods
scas
pushw
pushl
call
mov
xor
pop
add
jmp
xchg
pushf
out
icebp
jbe
popa
out
bound
mov
jl
cmpsl
jns
jl
nop
movsl
mov
out
ss
addr16
pop
andb
leave
rcll
jne
out
shll
sub
js
adc
es
mov
in
ret
pop
dec
pop
or
inc
int3
popl
mov
cmp
addb
jb
or
cmp
insb
dec
call
push
push
or
scas
push
mov
push
jns
pop
stos
lods
dec
aam
outsb
cmpsb
roll
add
mov
dec
ret
xor
pop
xor
negl
cmpsl
repnz
in
add
dec
mov
outsb
jbe
pop
stos
inc
cmp
sbb
pop
shl
pop
xchg
hlt
loope
pop
sub
imul
jb
jl
cld
jmp
js
inc
shrl
int3
hlt
cmp
aam
lahf
sbb
aam
or
int
sub
push
sub
pop
jmp
cmp
sub
into
loop
push
cmpsb
mov
fwait
sbb
add
pop
out
lahf
jp
push
mov
bound
jbe
enter
inc
loop
cmp
mov
lock
push
cmp
aam
ds
mov
pop
ljmp
test
fiadds
mov
inc
test
roll
sti
or
dec
sub
dec
jl
adc
add
add
jmp
cmpsb
pop
xchg
daa
inc
cmp
dec
cmpsl
repz
lret
pop
mov
or
rcrb
mov
inc
fisttpll
push
test
out
adc
lock
orl
cmpsl
iret
mov
mov
dec
in
add
in
jl
mov
scas
xor
int
xchg
sbb
inc
mov
jl
cli
mov
jmp
jb
in
mov
xchg
pusha
mov
sub
in
imul
push
sbb
mov
and
mov
mov
test
popf
jo
test
adc
adc
mov
mov
sub
inc
jl
mov
cltd
dec
mov
loopne
lahf
loop
xchg
mov
lods
add
int
xchg
dec
dec
arpl
cmp
dec
xchg
mov
into
push
psubb
mov
stos
rclb
roll
repz
sti
out
mov
fidivs
rsqrtps
scas
inc
jo
pop
jae
test
mov
shll
mov
lods
je
into
xchg
xchg
dec
movsl
and
fsubr
fiadds
cld
or
push
loope
fldenv
xchg
in
js
jno
fucomip
mov
xor
pop
lods
ret
loop
cli
xor
in
jo
ret
sti
xchg
xor
add
jns
xchg
movsb
arpl
mov
aad
fnsave
pop
fwait
pushf
jp
mov
and
test
jo
xchg
shrl
insb
inc
mov
test
lahf
inc
mov
test
inc
packuswb
cmpsb
icebp
xchg
xchg
pop
sbb
sbb
nop
or
mov
fnstenv
sub
ja
mov
fcoml
pop
cs
jmp
sbb
fsubl
fwait
xor
lret
dec
mov
mov
push
cmp
pushf
jno
lahf
lcall
daa
pop
mov
in
fcoms
mov
xor
mov
sub
xor
popl
xor
leave
ret
push
mov
push
movl
mov
sbbl
mov
andl
jmp
pop
sbb
pop
xor
popa
inc
cmpsl
push
lcall
jl
mov
mov
lds
mov
gs
inc
xchg
mov
sub
lret
xchg
adc
decb
dec
dec
pop
loop
dec
andl
insb
cs
push
mov
ljmp
cmp
xor
sbbb
out
jnp
add
sub
or
repnz
add
scas
sub
mov
push
and
jmp
aam
push
jmp
adc
jo
jno
out
mov
fistl
cmc
adc
fsubp
gs
mov
outsb
pop
loop
aam
push
fs
push
sub
xchg
mov
imul
fchs
int
pop
rcll
cmc
or
je
inc
ret
movl
push
cmpsb
mov
mov
mov
bound
xor
aad
test
xor
inc
mov
ret
stos
inc
fxch
enter
mov
cmc
xchg
sub
mov
sbb
or
lock
outsb
xor
rorl
dec
push
and
xchg
pop
dec
mov
cmp
or
lods
addb
cmc
pop
pop
cmp
lcall
clc
sub
inc
and
xor
xchg
mov
aaa
repz
or
inc
subl
push
xchg
mov
jne
or
cmpsl
divb
iret
sti
pop
xlat
test
adc
or
scas
jecxz
lret
repz
lods
mov
push
leave
adc
dec
cmpsl
in
gs
sub
mov
and
in
mov
movsb
sub
fnsave
adc
call
mov
adc
mov
cmpsb
pop
outsl
or
mov
sbb
pop
and
cmp
sub
dec
mov
mov
ss
adc
add
xchg
or
sahf
or
out
aaa
test
pop
jge
jl
push
push
sbb
test
mov
mov
sub
xchg
push
inc
jnp
or
gs
jge
add
rcll
popf
icebp
sub
ds
xchg
sub
ss
fnsave
and
adc
stos
or
xlat
mov
adc
and
clc
cmp
mov
loope
pop
cmpsb
icebp
and
mov
lds
xor
aaa
inc
sub
test
lret
jb
xchg
mov
clc
popf
push
in
into
sub
dec
add
andl
xor
cmp
jne
adc
mov
movzwl
add
mov
add
subl
mov
addl
mov
adc
mov
movzbl
adc
mov
xor
push
xor
mov
mov
add
cmp
pop
je
mov
jmp
mov
xor
add
jmp
mov
xor
add
leave
ret
push
mov
push
mov
mov
orl
xor
addl
add
movl
mov
mov
movl
movl
mov
mov
movl
push
mov
movl
mov
cmp
movl
je
mov
sbbl
xor
xorl
xor
lea
xorl
xor
cmp
jne
jmp
add
add
xor
mov
orl
xor
movl
add
mov
or
mov
xor
xor
mov
jmp
daa
movsl
or
scas
add
clc
mov
mov
jl
jle
jl
dec
ret
ret
and
stos
fwait
pop
mov
stos
into
lock
mov
test
and
sub
pand
xchg
xlat
outsb
out
dec
call
and
daa
ficompl
jecxz
out
ret
pop
add
pop
push
out
cld
cmp
xor
call
push
jp
pop
jecxz
sub
sti
outsl
shll
cmpsl
mov
mov
mov
loop
jne
fst
cltd
loop
cwtl
or
inc
aam
cmpsb
jg
icebp
pop
ja
repnz
shr
sbb
xor
jl
jnp
scas
inc
lret
xor
pop
xchg
sub
inc
notl
dec
jbe
mov
and
xchg
push
fmul
int
fsubs
in
scas
in
push
sub
data16
cmpb
pop
es
pop
aam
test
mov
lret
mov
lret
ret
jne
mov
and
sbb
adc
jge
and
inc
lfs
xor
dec
adc
sbb
leave
or
dec
loop
xchg
bound
dec
and
jbe
fwait
pop
mov
popa
sbb
es
push
xor
pusha
mov
lcall
enter
out
fstps
test
int
in
fmulp
loop
aam
jns
data16
vmovq
push
push
test
jne
movsl
cld
ficoms
add
ljmp
mov
outsl
push
dec
imul
inc
outsb
xchg
stos
jo
ja
add
shr
shrl
loop
jb
imull
push
and
push
fisubrs
outsb
insb
cmp
and
push
mov
mov
xchg
add
repnz
and
lcall
into
out
outsl
mov
adc
mov
cli
push
movsb
int
pop
enter
dec
xchg
pusha
push
sbb
outsl
rol
cmpl
pop
mov
adc
mov
cmpsb
out
aaa
jb
dec
gs
fcmove
mov
and
push
imul
mov
orl
stc
fs
mov
dec
sbb
adc
movsb
in
pop
mov
pop
add
in
mov
ret
jo
stc
fcompl
hlt
sar
or
loope
out
cmp
add
fildll
add
xchg
cmp
rclb
out
rorl
fsubrs
cmpsl
sbbb
pop
adc
mov
adc
cmp
cmp
sbb
jp
lea
pop
insb
sahf
push
and
cmp
xor
cmp
inc
or
add
mov
mov
jmp
in
jae
jge
bound
pop
sbb
int3
outsl
mov
jl
call
mov
or
dec
push
insl
mov
sbb
xor
push
pop
data16
rcll
pop
mov
daa
inc
inc
movsl
sbb
mov
pop
ja
mov
adc
inc
outsl
mov
inc
iret
cmp
inc
popa
adc
mov
adc
or
jnp
or
cltd
or
imul
into
add
cli
int
aaa
xor
sbb
and
shlb
ja
xor
sti
lds
nop
jne
nop
adc
lods
les
xor
mov
out
rcll
pop
add
dec
jecxz
test
dec
movsb
pusha
fs
push
imul
out
xchg
lea
sbb
mov
aaa
cmp
lret
in
push
mov
fidivrs
xchg
mov
push
push
or
shll
mov
repnz
sbb
cmp
leave
insb
or
push
insb
les
adc
lret
scas
sahf
sbb
lock
cmp
add
xchg
adc
test
fwait
jbe
jbe
fimuls
loopne
lahf
xchg
adc
movsl
lret
pop
xchg
and
rol
cli
cli
out
jle
iret
sar
dec
xor
orb
das
xchg
xchg
rcr
pop
add
popl
bnd
push
iret
test
mov
sbb
and
testb
fldl2e
cwtl
adc
out
sbb
mov
dec
inc
adc
add
je
mulb
push
xchg
loope
test
xchg
mov
cmc
push
adc
mov
xchg
xchg
ret
xchg
push
pop
xchg
popf
andb
and
pop
loopne
cmp
aam
stos
dec
jmp
add
leave
out
add
xchg
jg
xor
mov
dec
jae,pn
push
dec
sub
jle
dec
dec
push
aam
push
push
mov
imul
mov
mov
jl
mov
inc
movsb
cld
jbe
out
loop
mov
repz
add
or
js
jmp
fsubs
fbld
pop
sbb
xor
mov
add
push
mov
in
popf
repnz
xor
fnstcw
lock
push
or
popa
mov
sarl
data16
out
sbb
orl
cmpsb
jb
inc
push
js
and
insb
fs
cmp
test
adc
rorb
push
add
add
xor
pushl
mov
pushl
mov
call
jmp
mov
leave
ret
push
mov
sub
movl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
call
cmpl
jne
mov
inc
mov
jmp
movl
sbb
mov
push
mov
dec
xor
orl
mov
sbbl
add
andl
mov
mov
subl
push
push
sbbl
test
je
movl
mov
mov
and
mov
addl
imul
add
mov
xor
or
mov
sub
xor
add
subl
mov
mov
xchg
andl
mov
inc
mov
cmpl
jne
push
pushl
pushl
push
push
push
push
push
push
pushl
pushl
pushl
push
push
call
cmpl
jb
sub
adc
xor
andl
mov
inc
mov
cmpl
jne
pushl
push
call
cmpl
jne
xor
xor
inc
mov
cmpl
jb
inc
mov
not
mov
andl
xor
xor
inc
mov
cmpl
jne
pushl
call
cmpl
jb
add
mov
mov
subl
mov
xorl
xor
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
xor
xor
mov
sbb
mov
add
movzbl
mov
mov
movl
je
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
call
cmpl
jne
mov
inc
mov
jmp
movl
cmpl
je
cmpl
jne
pushl
push
push
call
cmpl
jne
mov
dec
mov
xor
add
dec
mov
jmp
mov
xor
subl
add
movl
cmp
jne
subl
pushl
call
inc
mov
adcl
jmp
sbb
jge
fsubs
adc
mov
mov
jl
scas
hlt
jae
enter
xchg
mov
stos
mov
cmp
dec
sbb
and
pop
jmp
and
stos
cmp
int3
in
mov
fimuls
mov
cmpsl
insl
add
and
test
mull
mov
call
cmpsl
push
add
xchg
add
cli
sub
aaa
in
sbbb
and
loop
arpl
shll
xor
aas
or
loopne
xchg
jb
stos
push
loop
push
scas
adc
inc
jo
shll
xchg
mov
xor
cmpsl
xchg
or
int
xchg
fdivs
xor
lahf
das
jp
and
lds
push
fiadds
cmp
out
pop
jno
jle
fsts
fstps
out
mov
imull
icebp
cmp
and
ss
gs
sti
xchg
sbb
in
lret
sub
sub
push
mov
mov
jl
test
inc
push
mov
test
cltd
or
and
sbbl
mov
adc
mov
xor
decl
add
cmp
je
addl
pushl
pushl
call
mov
adc
mov
and
jmp
pop
imul
loope
mov
inc
mov
jg
jl
sub
xchg
cmp
outsb
shlb
ss
mov
enter
div
out
cwtl
enterw
inc
mov
scas
or
mov
out
scas
and
cmpsb
inc
rcl
sti
inc
int
jle
movsb
ljmp
and
mov
sbb
test
xchg
cmp
adc
adc
inc
test
in
hlt
out
xchg
loopne
fimull
into
lcall
aas
or
lret
mov
pop
int
aaa
andl
sub
jns
in
mov
push
pop
les
test
fs
mov
push
add
lahf
out
mov
sarl
inc
cli
std
add
push
inc
sahf
jge
inc
cmp
cmpsl
popa
pop
jge
or
cld
cld
icebp
xchg
or
or
dec
pop
pop
aad
mov
inc
add
das
out
jle
dec
das
shll
lret
movsb
fmuls
dec
outsl
movsw
or
sbb
push
sub
sbb
adc
add
mov
add
xor
sbbl
add
cmp
je
mov
xor
mov
sub
mov
mov
mov
add
mov
mov
mov
add
mov
mov
mov
add
xor
mov
mov
jmp
push
xchg
insb
stos
jae
push
jbe
mov
sub
pop
mov
jl
mov
xor
movsb
jno
or
mov
sub
popl
in
movsl
faddl
mov
pop
int3
cwtl
adc
push
jmp
mov
jo
call
mov
mov
scas
push
call
mov
mov
or
outsb
daa
test
pop
stos
or
pop
xor
jle
aam
scas
add
xchg
dec
aaa
mov
sub
jo
pushf
push
cmpsb
dec
cmp
arpl
leave
push
icebp
and
jmp
mov
add
jno
lahf
dec
mov
fst
mov
sub
jae
fnstenv
ret
mov
addl
push
rolb
inc
mov
jl
dec
mov
inc
jbe
sub
mov
xlat
addl
ret
adc
out
inc
stos
inc
mov
sbb
aad
mov
in
ljmp
outsb
inc
mov
cmc
cmp
sub
mov
pop
insl
std
loop
pop
inc
dec
das
rorl
mov
dec
rclb
jne
pushl
call
mov
mov
xor
add
cmp
jne
mov
inc
cmp
jb
jmp
mov
xor
add
jmp
mov
movzwl
mov
mov
mov
mov
mov
xor
add
cmp
jne
mov
xor
jmp
mov
jmp
inc
fs
fwait
imul
or
jg
int
mov
jl
lret
cltd
pop
pusha
and
cmp
and
movsb
mov
fdivl
pusha
push
add
pop
mov
in
jle
mov
mov
inc
and
and
adc
bound
add
lods
aad
lods
cmp
ja
mov
sbb
dec
dec
clc
mov
gs
das
xchg
sub
jle
movsb
mov
jg
sbb
outsb
idivb
ds
movsb
fwait
ds
jl
inc
mov
insl
cmp
cli
pusha
xor
inc
arpl
shl
xchg
lea
adc
xor
push
lret
inc
cmp
imul
lret
xchg
xchg
fimull
popf
mov
pop
cmp
movsb
lds
push
sub
aaa
xor
orb
xor
jb
mov
cmpsl
test
pop
es
in
mul
xchg
jno,pn
or
out
pop
scas
push
cld
insl
cmp
shrb
ds
mov
rolb
or
sub
cmp
imul
mov
pop
ljmp
inc
lock
test
je
mov
push
pop
push
jmp
jbe
inc
xchg
jbe
and
movsb
fcoml
shl
adc
jl
jg
jl
imul
sti
lret
push
cmp
mov
jno
mov
jl
pop
xchg
xchg
jp
xchg
jae
outsl
jbe
popf
add
bound
int3
push
and
nop
mov
pusha
inc
nop
imul
shll
sbb
xlat
and
jne
imulb
lds
repnz
fldenv
test
insl
add
xchg
inc
sub
push
adc
mov
dec
iret
lds
shrl
ds
stos
jge
cmp
sub
and
sti
out
inc
mov
push
std
into
sub
dec
mov
mov
or
in
push
inc
jle
mov
inc
call
pop
ss
jbe
mov
inc
call
pop
xor
outsb
insb
int
adc
jae
jnp
jae
pop
and
pop
push
and
sbb
xor
out
loopne
and
pop
sbb
push
mov
xor
and
pop
fcoms
pop
xchg
sub
xchg
dec
mov
imul
sub
mov
mov
mov
xor
mov
add
mov
mov
xor
add
mov
imul
mov
xor
mov
lea
cmp
je
mov
mov
mov
mov
jmp
sbbl
jae
jb
pop
inc
pop
dec
mov
adc
jl
sbb
fs
jg
lcall
sbbl
pop
in
enter
aaa
add
in
mov
inc
mov
imul
or
xchg
fwait
pop
mov
test
ja
test
aaa
mov
sarl
adc
inc
imul
sbb
sub
sub
dec
pop
lahf
cmp
roll
and
pop
pop
repnz
cmp
cmp
outsb
clc
rolb
push
sarl
mov
lahf
dec
add
ljmp
push
ret
xchg
stos
jmp
adc
fistl
cmp
add
mov
xchg
in
pop
xor
out
pop
lock
or
out
mov
in
pop
cmp
pusha
scas
fwait
fs
mov
in
sbb
push
jmp
inc
adc
pusha
cld
and
jmp
xchg
jle
lock
xchg
or
mov
aad
jmp
cmp
sbb
rclb
popf
arpl
push
pop
xor
xor
mov
add
div
mov
xor
lea
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
jmp
mov
or
push
sbb
stos
aad
jl
adc
jl
add
in
dec
pop
sahf
sti
shll
sbb
rcrl
adc
add
fists
aaa
lcall
jp
or
scas
sub
jmp
add
fidivrl
insl
pop
jae
mov
sub
iret
jne
leave
add
inc
mov
stos
sub
adc
mov
xchg
pusha
and
sbb
push
neg
sarb
inc
dec
pop
xor
call
mov
cmp
push
nop
test
addb
outsb
xor
out
or
pop
add
jge
stc
jg
add
jmp
out
mov
mov
cmp
xor
ss
adc
pop
xchg
movsl
add
jg
cmc
fcmovu
push
inc
xchg
arpl
push
int
push
dec
rcr
cmpsl
ret
mov
cltd
jno
rcll
icebp
in
mov
dec
push
push
cmp
push
push
jbe
sub
sbb
xchg
addl
jae
mov
stos
fimuls
movsl
jo
add
imul
mov
xor
mov
jmp
pop
shlb
mov
cmp
lret
sub
jl
jg
jl
mov
pushf
ds
lds
fwait
pushf
pop
adc
xchg
mov
cmpsl
into
push
rcrb
faddl
pop
repnz
sbb
fmulp
fldcw
push
cltd
iret
jmp
popf
xor
xchg
cvttps2pi
mov
popa
mov
out
rcll
xchg
cmc
out
hlt
mov
ret
arpl
aam
movsb
xor
bound
in
push
and
in
jmp
mov
fbstp
jb
int3
sub
fists
inc
pusha
and
lea
test
shrl
xchg
fdivl
add
push
pop
push
xlat
pop
cmpsl
ja
popa
lret
cltd
inc
out
mov
fisubs
mov
jo
add
test
xor
cmp
jno
rorb
sbb
data16
add
in
cmp
sub
outsb
insb
outsl
rcrl
or
pop
xchg
pop
jp
xchg
add
movsb
mov
jbe
outsb
iret
loop
fmul
mov
cltd
cmp
sub
fnstsw
mov
jb
and
out
lock
rorl
xor
cmp
jne
mov
jmp
mov
mov
xor
add
mov
xor
lea
jmp
into
aas
in
cmc
jne
mov
aam
imul
sub
mov
sbb
insl
xor
ss
insl
nop
data16
test
push
arpl
repz
ljmp
lahf
lds
es
xor
push
dec
les
inc
scas
adc
insb
sbb
adc
jne
dec
adc
and
data16
push
inc
enter
outsl
and
mov
nop
std
cmpsl
stos
in
fs
fs
mov
mov
std
test
or
mov
imul
test
add
les
cmc
and
stos
js
sbb
xchg
scas
pop
jle
mov
je
mov
sub
mov
mov
mov
jmp
pushf
cmp
repz
cli
mov
pop
das
jb
lahf
divl
sbb
push
mov
adc
dec
fsub
and
sbb
cli
fsubl
add
call
lret
cli
sub
bound
mov
xor
dec
mov
lret
lret
insl
sti
addb
inc
mov
jb
in
jo
push
pop
inc
and
les
and
in
sahf
xlat
pop
fadds
push
imul
sbb
shll
fildl
pop
adc
test
add
xchg
jmp
push
fsubr
imul
enter
and
jl
jg
jl
iret
pop
movsl
bound
dec
lea
cli
sub
js
ret
loope
jle
add
inc
mov
push
lds
test
xchg
cmp
or
in
andb
jb
imul
or
mov
jle
not
int3
out
ljmp
xor
testb
stos
sar
xchg
mov
popa
nop
or
inc
and
mov
sub
pop
lret
sbb
xchg
or
lahf
ss
jp
sub
enter
incl
jae
cmpsb
rolb
mov
out
insl
icebp
stc
mov
mov
sbb
popa
mov
ret
cld
into
cltd
pop
inc
push
scas
shll
fstp
xchg
mov
mov
mov
mov
je
push
movl
sahf
jle
fadd
gs
sbb
mov
cmp
movsl
loopne
jbe
loope,pt
and
popa
mov
push
pop
push
pop
inc
xchg
sub
xchg
dec
mov
imul
add
xchg
push
xor
mov
jmp
sub
xor
into
jge
icebp
xchg
and
adc
jl
or
jo
jle
dec
fldt
lahf
in
pop
arpl
rcll
jns
push
in
dec
cmpsb
push
in
add
ficoml
enter
inc
scas
shll
push
mov
cmp
xchg
in
subb
rcr
das
or
test
mov
subb
dec
addr16
ret
dec
pop
rcr
jbe
pop
sti
pop
mov
inc
out
xchg
cmp
pushf
shl
lock
cmp
cmp
ret
lods
mov
fisubl
jno
xchg
inc
fldl2t
jns
inc
aad
std
mov
pop
xchg
fstpl
xor
inc
pop
lods
mov
das
popa
mov
sub
or
xchg
sub
adc
sub
outsl
into
lods
bound
test
ljmp
add
adc
xlat
fwait
pop
sub
in
fadds
hlt
xlat
pop
xchg
sub
ucomiss
faddp
or
ret
sbb
push
lock
fiadds
push
scas
push
das
inc
std
int3
xchg
rcr
int
aad
dec
inc
add
dec
xor
add
pop
mov
pop
pop
pop
leave
ret
and
add
sub
add
xor
add
inc
sub
add
add
pop
sub
add
add
je
add
jle
add
mov
add
xchg
sub
add
sub
add
add
aam
add
loopne
add
ljmp
add
sub
add
sub
add
add
and
add
sub
add
xor
add
inc
sub
add
add
push
sub
add
add
data16
add
add
jp
add
subb
add
sub
add
sub
add
add
lret
add
sub
add
sub
add
sub
add
sub
add
add
add
sub
add
sub
add
sub
add
add
add
push
sub
add
sub
add
add
loopne
add
in
sub
add
sub
add
sub
add
sub
add
sub
add
add
pop
sub
add
add
jle
add
mov
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
and
add
dec
sub
add
push
add
jp
add
xchg
sub
add
mov
add
sub
add
loop
add
hlt
sub
add
push
add
push
add
sub
add
add
add
dec
add
add
add
push
add
mov
add
lcall
add
add
fsubrl
add
call
add
adc
add
push
das
add
xor
add
inc
das
add
push
das
add
data16
add
jbe
add
mov
add
xchg
das
add
cmpsb
das
add
mov
add
enter
loopne
add
hlt
das
add
add
add
sbb
add
xor
add
xor
add
add
push
xor
add
add
jbe
add
mov
add
pushf
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
push
xor
add
add
jbe
add
xorb
add
xor
add
xor
add
xor
add
add
add
xor
add
add
xor
add
inc
xor
add
add
pusha
xor
add
add
test
add
xchg
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
inc
xor
add
add
push
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
cmp
add
add
data16
add
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
sub
add
dec
xor
add
fs
add
jl
add
xchg
xor
add
mov
add
ret
add
xor
add
divb
add
push
add
sub
add
cmp
add
push
add
pop
add
push
add
jbe
add
test
add
xchg
add
mov
add
shlb
add
add
fdivl
add
call
add
add
add
adc
add
es
add
cmp
add
inc
aaa
add
push
aaa
add
fs
add
jbe
add
test
add
cwtl
aaa
add
mov
add
les
add
aam
add
call
aaa
add
or
add
push
cmp
add
add
inc
cmp
add
add
add
nop
cmp
add
add
mov
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
add
cmp
add
add
dec
add
add
add
add
dec
add
add
cmp
add
and
add
add
dec
add
add
pop
and
add
add
add
add
add
add
add
add
add
pop
and
add
and
add
add
jae
bound
push
inc
popa
xor
je
jo
aas
dec
imul
gs
jb
imul
inc
inc
dec
push
inc
dec
push
inc
inc
cmp
add
add
add
add
add
push
sub
add
and
add
and
add
add
add
inc
add
mov
add
mov
add
pop
add
je
add
nop
add
clc
xor
add
add
add
jb
add
dec
and
add
sub
add
sub
add
add
inc
sub
add
add
pop
sub
add
add
je
add
jle
add
mov
add
xchg
sub
add
sub
add
add
aam
add
loopne
add
ljmp
add
sub
add
sub
add
add
and
add
sub
add
xor
add
inc
sub
add
add
push
sub
add
add
data16
add
add
jp
add
subb
add
sub
add
sub
add
add
lret
add
sub
add
sub
add
sub
add
sub
add
add
add
sub
add
sub
add
sub
add
add
add
push
sub
add
sub
add
add
loopne
add
in
sub
add
sub
add
sub
add
sub
add
sub
add
add
pop
sub
add
add
jle
add
mov
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
and
add
dec
sub
add
push
add
jp
add
xchg
sub
add
mov
add
sub
add
loop
add
hlt
sub
add
push
add
push
add
sub
add
add
add
dec
add
add
add
push
add
mov
add
lcall
add
add
fsubrl
add
call
add
adc
add
push
das
add
xor
add
inc
das
add
push
das
add
data16
add
jbe
add
mov
add
xchg
das
add
cmpsb
das
add
mov
add
enter
loopne
add
hlt
das
add
add
add
sbb
add
xor
add
xor
add
add
push
xor
add
add
jbe
add
mov
add
pushf
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
push
xor
add
add
jbe
add
xorb
add
xor
add
xor
add
xor
add
add
add
xor
add
add
xor
add
inc
xor
add
add
pusha
xor
add
add
test
add
xchg
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
inc
xor
add
add
push
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
cmp
add
add
data16
add
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
sub
add
dec
xor
add
fs
add
jl
add
xchg
xor
add
mov
add
ret
add
xor
add
divb
add
push
add
sub
add
cmp
add
push
add
pop
add
push
add
jbe
add
test
add
xchg
add
mov
add
shlb
add
add
fdivl
add
call
add
add
add
adc
add
es
add
cmp
add
inc
aaa
add
push
aaa
add
fs
add
jbe
add
test
add
cwtl
aaa
add
mov
add
les
add
aam
add
call
aaa
add
or
add
push
cmp
add
add
inc
cmp
add
add
add
nop
cmp
add
add
mov
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
add
cmp
add
add
add
add
jb
jo
add
or
gs
add
pop
add
gs
jb
jb
add
sub
arpl
arpl
add
add
outsl
outsb
je
outsl
insb
data16
add
insb
outsl
arpl
add
gs
popa
jo
pop
je
jo
add
add
jns
je
insl
add
mov
pop
pop
insw
outsl
fs
pop
add
insb
insb
outsl
arpl
add
pop
pop
arpl
insl
outsl
fs
std
add
jb
outsl
jne
add
add
jae
jb
outsb
je
add
sub
ja
jae
bound
add
add
insl
jae
pop
gs
je
add
imul
add
popa
insb
outsb
jne
add
data16
add
insl
bound
gs
add
pop
add
gs
jb
push
je
arpl
add
push
add
arpl
inc
imul
jae
jb
outsl
insb
insb
add
add
imul
insb
outsl
arpl
je
insl
add
add
arpl
outsl
jne
add
add
arpl
jo
add
enter
je
push
add
jne
arpl
sbb
ja
jae
popa
je
add
add
jb
jae
outsb
add
imul
add
jae
outsl
ja
jae
add
add
outsl
ja
outsl
ja
jb
add
add
outsl
jb
add
add
ja
arpl
data16
add
js
je
ss
arpl
outsl
insl
bound
add
add
gs
je
add
add
arpl
arpl
add
jb
outsb
je
mov
pop
pop
jae
je
jae
jb
popa
je
gs
add
sbb
jae
jo
imul
pop
pop
addr16
popa
imul
dec
push
push
inc
push
push
cs
insb
add
faddl
push
gs
dec
inc
inc
outsl
insb
outsl
jb
popa
bound
add
add
je
jb
jae
dec
jb
inc
js
addl
imul
add
inc
gs
imul
gs
add
insb
arpl
insb
gs
add
popa
je
inc
jb
jae
dec
outsb
imul
add
gs
je
push
outsl
insb
jns
outsl
outsb
push
outsb
add
mov
popa
je
dec
popa
je
push
push
inc
gs
jns
je
insl
push
popa
insb
gs
gs
jae
add
popa
je
inc
outsl
outsb
je
add
popa
je
inc
outsl
outsb
je
outsb
imul
mov
push
outsl
insb
jns
imul
inc
gs
gs
dec
gs
imul
push
jb
outsb
jae
popa
je
inc
push
je
outsb
outsw
add
lar
jb
popa
insb
imul
arpl
add
je
gs
arpl
popa
jo
add
inc
gs
dec
push
xor
les
inc
outsb
jne
inc
outsl
outsb
je
popa
insl
imul
add
je
inc
imul
bound
imul
push
gs
dec
inc
imul
insb
gs
inc
inc
add
mov
inc
gs
imul
dec
jb
inc
js
add
inc
gs
jns
je
insl
push
popa
insb
gs
gs
outsb
je
imul
imul
add
inc
gs
bound
arpl
add
push
gs
dec
gs
imul
inc
gs
imul
add
insl
outsl
jbe
inc
outsl
outsb
je
gs
jne
arpl
add
je
imul
pop
add
je
popa
jo
outsl
fs
push
add
jb
je
push
add
inc
gs
gs
jb
jae
push
popa
insb
gs
gs
outsb
fs
add
add
je
dec
inc
imul
imul
gs
popa
jns
jne
add
add
je
gs
inc
outsl
insb
outsl
jb
add
popa
je
inc
insb
insb
imul
outsb
dec
outsb
imul
add
je
gs
inc
outsl
insb
outsl
jb
add
push
gs
inc
popa
arpl
add
movsl
add
gs
je
push
popa
insb
gs
gs
add
je
imul
add
je
bound
je
jb
arpl
add
add
arpl
gs
insb
imul
mov
imul
push
gs
jp
push
popa
insb
gs
gs
add
insb
arpl
imul
add
insb
jns
outsl
outsb
add
popa
je
dec
popa
insb
data16
outsb
gs
popa
insb
gs
add
dec
xor
cs
insb
add
popa
je
inc
imul
jae
add
dec
push
inc
push
dec
cs
insb
add
inc
imul
outsl
push
jns
je
insl
push
imul
dec
jo
outsb
inc
imul
gs
jb
push
inc
add
add
gs
inc
jb
je
arpl
push
arpl
outsb
add
add
je
jb
outsl
jb
je
inc
insb
popa
jae
add
cmpsb
add
outsb
arpl
push
popa
imul
insl
gs
dec
add
insb
outsb
inc
add
mov
inc
gs
je
insl
dec
popa
insl
gs
add
xor
push
push
inc
data16
dec
popa
jae
add
bound
inc
insb
insb
outsl
arpl
sbb
dec
popa
outsb
fs
gs
outsl
jne
je
add
inc
gs
gs
jo
popa
je
push
add
xchg
add
outsl
bound
inc
gs
je
insl
dec
popa
insl
gs
add
lret
jb
popa
je
inc
jbe
outsb
je
add
dec
add
jne
jo
outsb
fs
push
add
inc
gs
push
inc
outsl
outsb
je
js
add
ret
add
jae
jb
insl
jo
add
lret
add
inc
popa
fs
gs
fs
je
add
int3
add
jae
jb
jo
outsb
push
add
add
gs
je
push
gs
outsl
je
push
push
add
lret
add
je
jne
jb
outsb
je
imul
jns
add
inc
add
je
push
popa
je
dec
popa
insl
gs
add
add
gs
je
inc
imul
outsb
jne
push
gs
jne
arpl
popa
insl
gs
add
or
inc
gs
outsl
fs
gs
imul
add
ret
add
insb
push
outsb
ja
outsb
add
add
popa
insb
inc
insb
insb
outsl
arpl
add
js
arpl
or
inc
gs
outsl
fs
gs
popa
outsb
fs
gs
add
sti
add
je
popa
jae
inc
jb
outsl
jb
add
inc
outsl
insl
jo
je
jb
popa
insl
gs
add
add
je
push
dec
outsl
arpl
gs
add
je
jne
insb
push
popa
je
dec
popa
insl
gs
add
mov
push
gs
outsl
jbe
inc
imul
jns
add
and
dec
popa
jo
imul
insb
add
push
gs
imul
jne
push
imul
add
je
popa
outsb
fs
gs
outsb
outsw
jb
popa
je
outsl
outsb
add
ljmp
insb
gs
je
jb
bound
gs
js
add
pop
add
imul
add
mov
inc
jb
inc
imul
dec
push
dec
add
inc
imul
jne
arpl
js
add
inc
imul
add
dec
popa
imul
outsw
add
gs
imul
js
push
gs
fs
imul
gs
push
push
jb
outsl
jb
je
add
inc
gs
gs
jo
popa
je
inc
add
or
inc
gs
arpl
outsl
inc
outsl
outsb
je
outsl
insb
add
inc
imul
outsl
dec
outsl
arpl
inc
imul
repnz
gs
je
push
popa
imul
insl
gs
add
jns
inc
gs
gs
imul
push
dec
inc
dec
xor
cs
insb
add
cmp
inc
push
outsb
jne
popa
imul
add
push
gs
outsl
jb
addr16
jne
fs
imul
add
je
arpl
insb
insb
push
outsl
jae
add
add
jo
imul
arpl
add
popa
outsb
addr16
outsb
jne
add
add
je
insb
popa
jae
dec
outsl
outsb
addr16
add
add
jo
imul
gs
js
add
loop
inc
imul
outsl
ja
js
add
jo
je
push
popa
addr16
add
mov
dec
jae
push
jo
popa
dec
jne
gs
arpl
push
add
gs
je
inc
popa
jb
je
mov
inc
jb
ja
jb
insl
gs
outsl
outsb
je
outsl
insb
add
inc
add
outsl
jae
inc
gs
je
jo
add
insb
outsl
addr16
outsl
js
popa
jb
insl
push
add
add
jb
outsb
addr16
arpl
imul
ja
add
fldl
inc
jno
popa
insb
push
arpl
add
fs
je
imul
push
gs
jae
addr16
add
cmp
inc
push
jo
jb
add
adc
inc
gs
outsl
jne
insb
gs
insb
imul
add
mov
imul
jae
bound
mov
ja
gs
push
add
ja
outsb
jne
popa
jb
jle
dec
imul
jne
je
insl
add
mov
push
imul
ja
add
add
popa
jb
outsl
ja
jb
jne
push
add
bound
inc
jb
popa
je
push
imul
inc
add
push
gs
imul
js
inc
add
pop
add
je
arpl
jo
jns
add
add
popa
insl
gs
arpl
add
je
gs
popa
addr16
js
jb
dec
outsb
outsw
add
push
gs
jae
jb
bound
arpl
outsw
jb
popa
je
outsl
outsb
push
add
je
outsl
jns
arpl
insb
gs
je
jb
popa
bound
xor
inc
gs
outsb
jne
je
insl
inc
outsl
jne
je
add
bound
jbe
outsb
je
call
outsb
dec
arpl
add
das
add
je
arpl
gs
imul
add
je
jns
inc
outsl
insb
outsl
jb
add
mov
dec
outsl
popa
fs
outsb
jne
add
jb
gs
push
add
add
jae
popa
addr16
outsl
js
add
jae
popa
je
inc
arpl
insb
gs
je
jb
add
inc
jb
insl
gs
jb
arpl
test
push
jns
je
insl
push
popa
jb
insl
gs
jb
dec
outsb
outsw
inc
add
imul
popa
jae
push
add
iret
add
jae
popa
addr16
outsl
js
js
add
add
popa
jb
outsl
ja
jb
add
pushf
add
insb
outsl
addr16
outsl
js
popa
jb
insl
inc
add
add
je
gs
popa
addr16
add
push
gs
jb
jo
add
loope
inc
imul
outsl
ja
add
imul
jo
inc
arpl
insb
gs
je
jb
popa
bound
add
add
popa
bound
imul
pop
add
je
arpl
insb
insb
dec
outsb
outsw
add
push
je
imul
inc
push
dec
gs
push
add
incb
inc
gs
insb
imul
jb
dec
add
je
outsb
jne
gs
jne
je
je
insl
add
mov
dec
outsb
jbe
insb
imul
je
add
fs
imul
add
je
outsl
jb
addr16
jne
fs
imul
add
ja
je
je
push
add
xchg
add
outsb
jae
popa
je
inc
arpl
insb
gs
je
jb
add
imul
and
fs
outsb
jo
je
cmpsb
add
insb
insb
push
imul
dec
outsl
popa
fs
insl
popa
addr16
add
daa
add
je
gs
outsl
popa
jb
push
jns
add
ja
arpl
add
mov
push
popa
bound
fs
gs
dec
jne
push
add
push
push
imul
add
data16
popa
je
push
arpl
add
jae
popa
addr16
outsl
js
add
add
je
jne
jae
jb
mov
push
outsl
push
outsb
imul
add
arpl
jo
jns
clc
add
je
insb
popa
jae
dec
outsl
outsb
addr16
add
imul
popa
bound
add
arpl
outsl
push
push
outsb
outsl
ja
add
add
je
inc
inc
js
stos
add
fs
jne
jae
jb
add
popa
insb
imul
add
imul
imul
add
data16
je
arpl
cmp
arpl
popa
imul
outsb
add
adc
push
imul
outsb
outsl
ja
gs
popa
addr16
add
or
push
imul
je
gs
add
gs
arpl
arpl
add
outsb
dec
outsb
jo
je
gs
je
jo
add
add
imul
popa
jae
inc
add
jno
push
gs
imul
outsb
add
mov
fs
outsb
jne
add
dec
outsb
jne
push
popa
jb
inc
imul
outsb
jae
add
push
imul
outsl
arpl
add
add
push
jae
push
imul
arpl
add
add
outsl
ja
gs
outsl
jb
addr16
jne
fs
imul
ja
inc
gs
imul
js
dec
outsb
addr16
push
add
pushf
add
dec
arpl
imul
gs
outsb
jne
je
insl
dec
outsb
outsw
push
add
dec
add
je
outsb
jne
inc
add
imul
jb
add
add
imul
arpl
dec
fs
jb
insl
inc
imul
jns
add
popa
jb
jo
gs
add
mov
imul
outsl
ja
jo
popa
je
add
cmp
inc
gs
outsb
jne
je
imul
add
jo
imul
imul
inc
gs
outsl
jo
imul
pop
add
gs
je
inc
imul
jb
insl
push
add
inc
add
je
gs
inc
insb
addr16
jb
jne
dec
je
insl
add
add
dec
outsb
push
arpl
push
push
inc
push
xor
cs
insb
add
jns
pop
je
push
jp
jae
push
dec
push
jne
fidivrs
inc
add
cmp
out
or
dec
ja
cmp
dec
cmp
jb
xor
dec
ss
jnp
xor
dec
push
push
pop
push
cmp
dec
ja
cmp
dec
cmp
jb
xor
dec
ss
insl
dec
xor
dec
push
bound
arpl
dec
push
cmp
dec
cmp
dec
cmp
dec
push
jb
jae
orl
nop
jge
aas
dec
jbe
cmp
dec
ds
dec
dec
cmp
dec
cmp
dec
push
sbbb
setae
jl
jge
aas
dec
jbe
cmp
dec
ds
dec
dec
cmp
dec
cmp
dec
push
xchg
pop
xchg
bt
jl
jge
aas
dec
insb
dec
cmp
dec
cmp
dec
cmp
dec
cmp
dec
push
mov
or
jl
jge
aas
dec
insb
dec
cmp
dec
cmp
dec
cmp
dec
cmp
dec
push
mov
mov
ret
or
jl
jge
aas
dec
insb
dec
cmp
dec
cmp
dec
cmp
dec
cmp
dec
push
ret
psrlq
jl
jge
aas
dec
insb
dec
cmp
dec
cmp
dec
cmp
dec
cmp
dec
push
rcrb
rorl
jecxz
loopne
lock
aas
dec
imul
dec
dec
dec
ds
cmp
dec
push
loop
jecxz
repz
jl
jge
jl
jge
ds
jg
cmp
dec
cmp
dec
ds
dec
dec
xor
dec
xor
add
add
adc
jl
jge
aas
dec
add
sahf
cmp
xchg
cmp
lcall
add
inc
add
cmp
inc
add
inc
add
cmp
inc
add
pushf
clc
xchg
cmp
or
inc
add
cmp
inc
add
cmp
lcall
add
cmp
out
cmp
pushf
clc
cwtl
or
andl
or
inc
add
fnstsw
xor
inc
inc
cli
jne
in
incb
mov
cmp
xor
pushf
clc
xor
pushf
clc
cmp
pushf
clc
cmp
pushf
clc
aas
xchg
pushf
clc
ds
pushf
clc
cmp
xchg
pushf
clc
and
stc
add
cmp
push
add
pop
dec
imul
push
pop
arpl
add
mov
inc
add
adc
cmp
inc
add
add
add
add
outsl
add
dec
add
add
add
inc
add
imul
add
dec
add
add
imul
jo
outsl
add
insl
add
add
insb
add
data16
imul
add
imul
outsl
add
add
push
add
add
add
add
fs
push
imul
imul
fs
addr16
push
add
add
add
dec
dec
dec
dec
inc
inc
push
insb
dec
cmp
imul
fs
imul
push
outsl
dec
dec
inc
inc
insb
imul
imul
imul
push
push
add
add
add
dec
pop
dec
dec
dec
push
dec
pop
dec
push
dec
or
dec
cmp
add
pop
dec
push
dec
or
dec
cmp
dec
dec
dec
pop
dec
dec
dec
or
dec
cmp
add
push
dec
push
dec
dec
dec
pop
dec
dec
dec
push
dec
cmp
add
add
outsb
lea
outsb
lods
outsb
mov
outsb
in
outsb
std
outsb
or
outsb
cmp
outsb
jb
jae
jo
jno
jbe
ja
je
jne
mov
outsb
mov
outsb
mov
pop
jge
jge
jge
jge
mov
bound
add
mov
mov
jle
jno
mov
imul
xlat
aad
dec
adc
jge
faddp
leave
xchg
pusha
icebp
push
aad
aad
add
add
out
ljmp
and
add
outsl
push
cmpb
add
cmp
in
adc
imul
pop
outsb
jbe
jns
push
imul
je
inc
jo
data16
jp
insb
je
jns
popa
push
push
push
add
add
dec
push
jne
popa
jp
arpl
push
imul
push
imul
push
jb
add
insb
pop
ja
je
bound
jb
inc
push
push
inc
insb
inc
inc
jae
add
imul
popa
push
push
add
in
jnp
jnp
cmc
fcomps
lods
imul
add
pop
add
add
ror
sahf
jae
xchg
pop
es
popa
mov
jbe
fsubr
aad
push
insb
push
sbb
divb
ds
loop
add
xchg
mov
or
setb
ficoml
sahf
rol
icebp
cmp
push
out
mov
xchg
cs
iret
cli
in
mul
xor
inc
xor
pusha
mov
pop
out
or
addb
lahf
xchg
test
jmp
mov
rolb
gs
out
pop
lods
cmpsl
repnz
iret
xchg
adc
pop
push
lret
or
xor
test
scas
xchg
mov
and
pop
push
cltd
adc
pop
mov
fwait
popf
xor
cmp
fidivrl
test
xor
mov
clc
hlt
fsubp
cmp
subb
or
aam
insl
dec
jno
adc
mov
mov
add
push
and
lods
cmpsb
aas
push
ja
mov
add
in
xchg
xchg
push
hlt
lea
pop
sbb
pop
ficoml
in
jle
mov
cmp
fcomip
iret
add
pop
add
add
xchg
mov
ds
imul
jle
loope
cmpsl
cmp
xlat
subl
test
jae
and
adc
fxch
push
jmp
jp
into
fistpl
imul
pop
fadds
pop
loop
inc
push
inc
sarb
sub
leave
iret
cmpsb
cmp
sub
jg
xchg
inc
inc
test
or
fistps
pop
out
mov
adc
icebp
ja
repnz
in
sub
inc
lea
daa
sbb
add
sbb
sub
mov
cli
jae
mov
jnp
mov
out
cwtl
std
lds
xlat
lcall
mov
push
mov
leave
fwait
out
loop
test
mov
mov
xor
dec
loop
lock
or
hlt
and
cmp
mov
mov
jbe
add
add
push
add
ljmp
add
pop
adc
pop
fldcw
stc
iret
out
cmpsb
xor
xor
ljmp
aam
nop
mov
rorl
cmp
sub
insl
inc
cli
mov
cltd
in
sbb
data16
addr16
and
mov
icebp
cmpsb
push
arpl
jns
scas
xlat
xor
cmc
or
mov
and
mov
fmul
stc
push
dec
dec
gs
jl
fnsave
mov
mov
and
stc
mov
dec
pop
add
sti
dec
jmp
cwtl
int3
sbb
push
pusha
cmp
lods
cmp
dec
xchg
mov
push
sti
adc
inc
push
ret
mov
xlat
popf
xor
loopne
sub
jecxz
dec
mov
loope
sahf
fisubrs
les
sahf
jns
bound
mov
pop
adc
xchg
jae
sub
cmp
adc
popa
xchg
inc
adc
jl
jp
mov
dec
test
and
cmpsl
addr16
xchg
rorb
add
add
mov
idivb
mov
add
add
pop
add
add
fs
xor
insl
fsubrs
push
int
stos
repnz
xlat
pushf
push
adc
fists
mov
mov
inc
pop
das
neg
inc
mov
jne
lock
jo
sbb
sub
and
mov
ljmp
sbb
push
gs
cmp
xor
push
mov
mov
mov
xor
mov
or
mov
out
mov
sub
fld
ja
mov
mov
imul
std
and
das
jno
call
mov
push
add
cs
lods
ljmp
or
sub
jmp
mov
imul
aaa
jae
cltd
dec
sbb
dec
sbb
enter
push
movsl
bound
xor
test
aaa
push
adc
xchg
and
mov
pop
cmp
dec
mov
nop
adc
jp
mov
sbb
rol
jmp
pop
jae
or
ss
pop
xchg
jb
rcl
or
add
pop
add
add
shlb
pop
loopne
dec
sbb
lahf
in
jge
cld
jmp
cli
xor
and
pop
push
push
test
ret
stos
sbb
mov
lahf
add
mov
add
pop
ret
sub
repnz
rclb
stos
aad
imul
mov
mov
data16
andb
es
insb
shrb
cs
mov
xchg
cmp
mov
add
test
push
lock
dec
sbb
fcomps
into
sub
xorl
mov
adc
movsl
rcl
push
stos
popa
lea
jle
scas
lret
movsb
add
popa
xchg
popl
lret
addb
aaa
inc
push
mov
ret
and
xchg
jge
push
orb
sub
xor
cmpsl
jmp
shll
imull
int3
pop
push
frstor
sar
inc
jg
imul
mov
mov
add
add
cmc
insl
cmc
out
lcall
mov
jl
adc
add
pop
add
add
xchg
in
sub
incl
ja
ret
jecxz
imul
loop
cli
iret
bound
pop
mov
pop
insb
lret
je
iret
out
lcall
add
dec
inc
insl
pop
add
lcall
mov
js
mov
shl
mov
push
lds
je
aad
sahf
repnz
sub
push
mov
and
pop
sub
sbb
xchg
or
mov
test
out
add
js
cwtl
pop
in
outsb
cwtl
cmp
inc
rep
movsl
pop
call
popf
or
es
jl
mov
fisubrl
push
or
loope
sti
xor
inc
in
punpckldq
push
and
movsb
push
sti
int
xchg
xor
push
adc
or
mov
cwtl
pop
push
js
cmp
into
leave
lahf
fisubs
add
add
outsl
jle
aam
aam
cltd
adc
pop
aad
add
add
add
aas
sbb
pop
leave
ljmp
mov
loop
mov
dec
mov
fcoms
jge
adc
test
roll
sbb
pop
jmp
sti
push
mov
xchg
mov
outsb
and
outsb
and
divl
jecxz
mov
or
scas
jmp
aas
sub
inc
xchg
pop
out
mov
jle
pop
jnp
and
xor
mov
mov
and
pushf
mov
test
daa
sbb
jmp
dec
aad
imul
aam
outsl
push
ret
movsl
shlb
movsl
xchg
decl
enter
inc
out
test
out
mov
jbe
jo
sahf
in
sub
mov
dec
push
icebp
jmp
orb
iret
and
adc
shlb
mov
jmp
jl
adc
jl
arpl
adc
sbb
sub
add
or
and
scas
sti
jle
sbb
xchg
add
pop
add
add
into
andl
cmpl
ret
mov
out
or
mov
jno
sub
xorb
test
gs
test
repz
lret
dec
sbb
mov
arpl
add
cmpsb
imul
mov
add
push
cmpsl
jno
ret
xchg
cmp
mov
mov
adc
mov
cmp
ret
test
subl
fdivl
imul
mov
pop
repz
stos
out
sti
repnz
sub
or
fwait
jae
inc
or
mov
outsb
enter
xor
mov
xchg
mov
repnz
sahf
decb
xchg
dec
fwait
popf
jo
jg
test
mov
pop
xchg
fdivrl
push
int3
and
push
push
rcrl
addb
xlat
je
inc
test
inc
xchg
aas
or
mov
xchg
into
out
fidivl
rcll
sbb
push
inc
dec
rorl
add
negl
sbb
data16
xlat
add
pop
add
add
sub
push
mov
sti
push
gs
insb
pop
je
sbb
mov
dec
jge
xchg
enter
sub
imul
cmp
dec
movsb
ljmp
or
or
ss
je
add
int
inc
xor
jmp
lret
jle
mov
xchg
pop
shll
inc
pop
aad
and
imul
mov
add
and
enter
mov
cld
add
adc
test
jnp
mov
jl
hlt
jbe
fcmovnu
and
fcomip
jne
shr
mov
push
aaa
pop
imul
pop
pop
sti
imulb
push
push
and
push
lcall
mov
and
popl
mov
mov
aad
pop
repnz
jno
gs
scas
push
out
and
fwait
jmp
add
cmpsb
fs
call
inc
inc
lcall
iret
clc
mov
jmp
das
repz
mov
add
add
push
jl
jle
insb
inc
xor
push
out
push
push
and
pop
add
add
xchg
pop
hlt
das
add
lods
inc
outsl
xchg
dec
mulb
add
stc
push
shl
mov
addr16
orb
sbb
push
dec
in
mov
idivl
scas
mov
maxps
lret
inc
cmp
out
into
lret
jbe
dec
icebp
les
xor
pop
xor
mov
ret
cmp
std
mov
stc
cld
movsl
cld
addl
ret
sbb
jb
enter
adc
mov
and
jb
xor
ret
xor
mov
repz
mov
popa
inc
fcoms
xor
sahf
test
add
inc
leave
mov
enter
pusha
cmp
sbb
xlat
sub
jae
jbe
lods
jecxz
inc
jge
xor
or
mov
pop
lret
push
push
push
adc
fisttpll
or
xchg
and
lods
popa
push
clc
mov
ja
test
add
mov
adc
sbb
stos
xor
add
pop
add
add
rclb
mov
fwait
pop
lock
ds
inc
dec
icebp
dec
mov
pop
inc
test
lahf
lock
cltd
dec
filds
xchg
push
mov
push
mov
pop
testl
mov
lahf
inc
add
jg
xor
aad
jae
pushl
pusha
or
dec
insb
or
das
dec
rcl
adc
cltd
jo
clc
cld
test
mov
fidivl
fisttpll
add
repz
test
cmc
fwait
addr16
push
mov
or
mov
pushf
stos
or
add
clc
daa
add
es
pop
fisttpl
cs
movsb
cmp
xlat
pop
cmp
sbb
sbb
adc
sbb
mov
and
jge
fcompl
xor
lods
mov
lods
es
push
sarl
mov
idiv
dec
push
ds
scas
fs
lahf
dec
pop
mov
mov
aaa
data16
jne
mov
xchg
dec
cld
pushf
push
fiaddl
add
add
add
shll
iret
imul
add
shlb
in
sbb
das
sbb
sub
loop
push
inc
jnp
in
mov
or
mov
mov
cmp
mov
inc
pop
lcall
das
jno
pushf
pop
inc
xor
imul
push
sbb
inc
lahf
pop
sti
sub
gs
les
fsub
add
xchg
mov
pop
popa
jg
push
mov
lods
sbb
sub
loope
jge
pop
jnp
mov
in
pop
jb
mov
inc
hlt
ret
mov
in
xor
jns
and
lret
fs
pop
hlt
sub
pop
pop
andb
xor
xchg
idiv
jbe
jnp
les
sub
pop
jge
inc
mov
push
or
and
fisubrs
jbe
sub
arpl
testb
or
arpl
inc
push
sub
jp
add
add
jnp
sti
xchg
and
pushf
test
inc
fildl
add
add
add
les
cmp
and
jno
jne
xchg
xchg
les
or
sbb
sub
inc
lods
nop
icebp
js
mov
cwtl
cmpsl
sub
mov
ret
jge
cli
mov
inc
add
dec
pop
rcll
int3
int3
outsb
and
test
mov
pop
popl
lds
inc
insl
push
push
test
es
das
push
inc
pop
jle
lea
hlt
pop
mov
cmpsb
adc
int
repnz
arpl
stos
gs
repz
clc
pop
arpl
mov
jbe
jno
and
adc
sbb
shrl
stc
jns
xor
out
sbb
fisubrl
cld
inc
insl
and
dec
movsl
inc
fs
punpcklbw
cli
cmp
cli
test
imul
jnp
mov
cwtl
ljmp
mov
push
add
push
les
outsl
arpl
add
inc
push
mov
scas
jp
dec
cltd
cmc
dec
jge
ret
into
lcall
xor
add
pop
sarl
lods
std
mov
dec
mov
dec
faddl
add
add
add
dec
gs
xchg
les
push
stc
or
push
je
fildll
imul
into
gs
sbb
in
fldenv
fidivrl
mov
push
mov
popf
int3
jge
rcr
xchg
xor
xchg
push
cs
pop
ret
cltd
idivb
in
icebp
inc
inc
icebp
outsl
mov
pop
jmp
or
mov
ds
pop
ljmp
inc
mov
add
xchg
jge
fcom
pop
sbb
imul
mov
cmp
adc
mov
jno
xchg
repz
jne
mov
sub
and
sub
pop
sbb
cmp
mov
inc
jns
jbe
adc
std
inc
mov
popa
or
lods
pop
cmp
push
or
dec
sub
jno
nop
jo
cmc
std
fildl
insl
lock
std
repz
mov
add
pop
add
add
cli
out
imul
movsb
rorl
mov
adc
jns
mov
js
cmp
push
rcl
xchg
pop
test
pop
jno
mov
test
paddsw
add
das
lods
dec
mov
scas
pop
xor
shrl
icebp
xchg
mov
hlt
inc
daa
and
jbe
lods
or
popf
cmpsb
inc
xchg
sub
xor
lods
pusha
outsl
out
inc
dec
adc
lds
out
inc
repz
jb
jo
jno
cwtl
dec
fwait
jae
dec
push
add
dec
push
nop
lcall
data16
test
int
cmp
mov
mov
std
in
xor
dec
mov
jae
dec
inc
push
jmp
cwtl
lahf
jo
and
in
push
scas
inc
fisttpl
xchg
mov
hlt
sub
sti
in
sub
inc
pushf
xchg
inc
pushf
sbb
mov
mov
pop
mov
out
aad
push
idiv
mov
std
bound
movsb
cmp
mov
add
and
in
sub
cmp
cmp
pop
push
outsl
clc
cld
push
fiadds
add
add
add
ret
or
loop
in
adc
push
sbb
in
stos
nop
xor
pusha
imul
lcall
xchg
mov
ja
cltd
inc
sbbb
jb
dec
adc
xor
rol
lds
dec
dec
mov
dec
add
nop
push
xchg
pop
outsl
pusha
jecxz
adc
mov
or
pop
mov
add
sbb
pusha
enter
sbbb
jp
mov
hlt
xor
fwait
lods
dec
xchg
add
outsb
outsb
rcrb
push
dec
pop
cli
sub
in
movsl
imul
push
adc
cmpsb
daa
ss
out
jb
call
imul
lret
inc
jae
pop
dec
sbb
lahf
sub
push
jnp
hlt
jb
imul
and
loop
icebp
pop
gs
xlat
in
dec
aaa
mov
outsl
das
inc
jnp
mov
add
mov
mov
scas
stos
jbe
pop
filds
add
add
add
ljmp
outsb
fndisi(8087
repz
iret
test
dec
lods
fs
xor
in
jnp
stc
mov
imul
cmp
or
jb
cmp
lret
jmp
inc
inc
sbb
mov
sahf
enter
push
inc
pushl
xor
or
xchg
iret
push
jae
sub
inc
pop
adc
jno
xor
es
out
mov
inc
mov
test
int3
int
outsl
mov
cli
fmuls
inc
movsb
inc
jne
ljmp
cld
jp
stos
enter
std
call
inc
add
push
stos
push
mov
push
pop
mov
aad
mov
es
dec
push
mov
add
or
xor
popa
std
jp
mov
jae
mov
es
icebp
fstps
push
pop
xchg
in
push
or
add
add
add
xchg
in
mov
incl
cmp
fs
add
add
add
lret
inc
jno
adc
mov
ffreep
and
subb
popf
jne
in
pop
gs
scas
dec
int3
jl
sti
pop
std
jo
lock
xor
dec
jg
fisubrs
add
cmp
in
out
jns
mov
xor
cmp
xor
sub
xchg
jnp
and
movsb
cmpsb
lods
bound
movsl
push
lea
dec
inc
popa
inc
sub
mov
inc
cmp
cmp
push
mov
mov
in
cwtl
clc
pop
cmp
jno
imul
push
ret
sarl
imul
jae
mov
lahf
xor
loop
adc
xchg
stc
xor
add
inc
push
cmpsl
mov
shlb
mov
and
test
add
mov
scas
cmpsl
cli
xchg
fbstp
add
sub
push
lahf
mov
adcl
xor
sub
cmc
cmp
addb
add
sub
in
negl
es
int
mov
imul
add
add
add
sub
pop
add
sar
or
mov
aam
cmpl
hlt
add
xchg
ja
jmp
in
mov
push
sbb
xor
and
dec
mov
adc
lret
ffreep
pop
es
fwait
mov
das
push
jns
jne
push
les
fidivrl
jbe
clc
mov
shlb
push
fdivl
lret
jne
inc
fisubs
jl
call
adc
push
mov
pop
lock
test
outsb
jle
mov
scas
imul
mov
push
push
mov
add
push
inc
in
sbb
int
ds
aaa
inc
std
sbb
adc
mov
enter
cwtl
or
mov
inc
into
daa
add
push
and
jge
andb
imul
inc
fistpl
xor
lret
movsb
cmp
add
mov
jge
nop
mov
jb
add
pop
add
add
or
mov
daa
popf
mov
cmpsl
xchg
imul
mov
adc
shrb
mov
xchg
mov
in
ljmp
clc
sbbb
push
xlat
pop
jbe
mov
jle
push
incb
repnz
les
pop
jo
lods
jecxz
jp
mov
sti
mov
pop
adc
lahf
dec
jns
sarb
lock
rorb
push
mov
out
jbe
fwait
ja
add
imul
mov
cmp
pusha
sti
inc
and
or
sub
mov
and
mov
mov
mov
dec
push
push
rol
sub
popa
loope
adc
mov
das
popa
imul
mov
or
inc
ja
lock
jmp
sub
cmp
push
xchg
mov
cld
add
add
test
mulb
adc
fdivrs
cwtl
add
adc
push
jno
mov
imul
add
add
add
pop
gs
adc
or
and
ljmp
cmp
or
or
jo
jb
mov
test
or
call
adc
pop
fidivrl
mov
cmp
sbb
pop
ret
les
lret
sub
and
pop
in
cmp
inc
xor
daa
repnz
push
test
aad
pop
stos
mov
jmp
cmp
push
dec
bound
in
out
mov
mov
pushf
or
lret
shll
mov
popf
pop
insl
adc
fisubl
stos
scas
cmp
mov
and
xor
in
jne
mov
test
mov
mov
cld
xor
test
nop
or
inc
pop
jnp
mov
adc
aam
push
fs
add
xchg
fldenv
sub
sti
testb
cmp
cmpsl
sahf
rol
pushf
pop
arpl
pop
loop
inc
outsb
dec
and
push
arpl
add
repnz
add
pop
call
mov
xchg
adc
add
add
adc
loop
sub
mov
fidivl
fcompl
or
test
sub
jne
jge
add
icebp
cmp
cmpsl
repz
jl
sti
pop
cli
pop
pop
sbb
pop
mov
sub
divl
and
jge
sarl
cmp
add
sub
pop
shrl
test
push
fimuls
inc
std
jmp
dec
adc
push
push
mov
ror
adc
sarl
push
imul
iret
test
stos
jns
mov
push
sub
int3
lahf
mov
lock
dec
pop
push
mov
add
xchg
inc
mov
lods
cmp
sbb
call
xchg
fcmovne
ljmp
jbe
hlt
test
or
sub
mov
push
sub
ret
or
sub
mov
and
mov
sbb
add
mov
push
decl
mov
in
add
add
add
out
aam
mov
sub
arpl
jno
sar
bnd
nop
les
and
mov
adc
sbb
ds
imull
sbb
mov
xchg
pop
sbb
pushf
adc
outsb
pop
popa
pushf
mov
cmpsb
setns
lret
sub
pop
das
push
inc
sub
cld
mov
add
in
and
pop
or
add
test
shr
sti
xchg
mov
idivb
subl
ss
cmpsb
scas
pavgb
inc
mov
jmp
js
into
sub
push
in
xor
jle
scas
xor
inc
sahf
mov
jge
jecxz
shlb
mov
push
cmpsl
mov
gs
xor
dec
pop
add
lea
pushf
xchg
push
enter
pop
pushf
mov
jl
and
and
xchg
sbb
or
dec
aad
cltd
mov
imul
std
fildl
and
cmp
sti
fsubp
jmp
fwait
xchg
iret
dec
std
adc
out
add
add
add
icebp
jbe
xor
adc
adc
fimull
push
mov
jo
mov
ljmp
call
ret
cmp
and
mov
cmpsb
inc
mov
sub
push
jecxz
push
jle
mov
sbbb
jmp
rorb
inc
or
push
mov
push
add
shrl
push
push
adc
sub
in
icebp
mov
push
cmc
xor
cmp
lods
rcr
mov
cmp
int3
pop
arpl
lods
psubw
and
bound
xchg
jnp
pop
dec
jns
adc
add
je
lss
mov
cmpsl
cli
dec
adc
add
xor
xchg
iret
mov
ret
ret
bound
mov
movl
bound
shr
add
and
lock
push
sbb
sub
dec
pop
mov
add
outsb
xor
test
adc
out
add
add
add
orl
cmpsl
mov
andl
xchg
aaa
and
leave
test
inc
cltd
inc
mov
insl
add
jge
aam
aaa
xchg
and
les
push
ret
dec
daa
cli
js
daa
fiadds
xor
sbb
lahf
mov
xchg
scas
out
jmp
in
adc
leave
push
mov
les
xor
cltd
les
pop
mov
mov
push
adc
jno
rcll
push
aam
mov
sti
pop
hlt
pop
leave
pushf
cli
and
jns
in
mov
xchg
mov
pushf
pushf
inc
mov
cmp
inc
xchg
xchg
outsl
adcb
movsb
cmp
jb
scas
sarb
lods
jne
push
into
pop
aas
stos
or
xor
mov
ds
mov
cs
xchg
out
sbb
mov
cli
or
repz
ror
lock
jnp
xchg
cmp
pushf
call
add
dec
mov
mov
sahf
in
cmc
jno
popa
gs
xchg
cmp
shlb
mov
push
add
aas
test
lcall
mov
and
test
jmp
cld
es
add
hlt
sbb
mov
lock
inc
outsb
fildll
std
sbb
xor
lahf
bound
icebp
loope
mov
sbb
push
stc
loope
bound
ds
cs
inc
fcmove
loopne
gs
cmp
lret
xorl
adc
inc
dec
scas
xchg
jne
sub
call
add
movsb
xor
add
mov
cmp
add
je
adc
sbb
lock
add
cmp
insl
inc
cmc
mov
xchg
movsb
or
test
insl
aad
jmp
jno
addb
pushf
or
dec
neg
push
fimuls
push
mov
push
mov
lret
add
repz
fisubrs
jno
pushf
aas
ljmp
add
push
cmp
call
data16
hlt
mov
faddl
lock
lcall
inc
test
xchg
ret
insb
fisubl
inc
push
mov
cld
jo
incb
inc
loopne
add
scas
fdivl
adc
in
and
arpl
out
stos
mov
call
jbe
jnp
inc
sub
imul
xchg
sbb
jge
xor
test
mov
mov
mov
jae
fiadds
jl
mov
sbb
clc
jnp
mov
push
xor
orb
hlt
pop
add
sbb
cmp
out
push
mov
dec
adc
push
dec
les
pop
sub
jns
ficompl
arpl
mov
cmp
out
cmpsl
hlt
popf
adc
xchg
and
or
and
and
jle
test
or
in
fcomps
xor
push
test
out
mov
mov
out
mov
mov
jnp
adc
stos
ljmp
xor
in
mov
pop
adc
stc
mov
daa
aaa
mov
xor
jle
fisubrl
enter
ret
dec
sub
adc
jmp
movsl
xchg
arpl
arpl
pop
adc
filds
xor
das
ret
dec
leave
imul
jmp
mov
ljmp
jmp
inc
lcall
dec
add
add
mov
dec
push
ljmp
arpl
xchg
mov
out
lret
mov
ja
pop
or
push
incb
mov
mov
dec
or
sub
ret
pop
xor
popa
outsb
dec
jl
fldl
out
mov
repz
fsubr
cld
xchg
ret
mov
jmp
test
mov
loop,pn
jbe
insl
aas
jo
xlat
out
imull
push
pop
inc
mov
mov
sub
imul
shrl
cmc
scas
cwtl
sub
repnz
pusha
aam
mov
add
pop
add
add
lea
pop
mov
pop
lods
add
fcoms
mov
mov
pop
ljmp
jbe
daa
cwtl
xor
and
test
cmp
pop
mov
pushf
xor
pop
ds
hlt
xchg
push
xchg
and
aam
sti
lock
or
sbb
xchg
cli
shl
and
jecxz
xor
les
mov
fmull
inc
adc
inc
insl
mov
aaa
mov
clc
add
push
push
movsb
adcl
mov
fwait
pop
inc
jnp
mov
push
and
and
push
xor
cli
jne
test
adc
jns
dec
in
cmp
sub
pushf
jb
cmp
push
in
sub
mov
push
lods
cmp
outsl
dec
lds
stos
adc
and
pusha
jmp
lcall
aaa
sbbb
add
pusha
rorb
enter
shrb
in
mov
add
add
sti
sub
or
inc
decb
push
sbb
out
jns
daa
test
cmp
lea
inc
cltd
cmc
in
add
mov
fld1
adcl
pop
push
mov
lret
mov
js
lea
mov
daa
arpl
inc
adc
fcompl
xor
stos
mov
dec
icebp
js
shrl
mov
aad
imul
adc
push
insl
mov
sahf
sahf
hlt
mov
stc
push
fwait
and
movsb
mov
stc
out
divl
dec
push
popa
fbstp
dec
mov
pop
stos
sbbl
js
xchg
mov
fdivrl
lret
aas
mov
roll
fisubrs
push
pushf
bound
aaa
popa
mov
loop
sarb
pandn
xor
sub
xchg
push
es
fst
cmp
imul
bound
add
push
sub
mov
add
gs
testl
xchg
jno
in
add
pop
add
add
test
fldcw
adc
lds
sub
fwait
in
sbb
cmc
adc
cltd
out
shlb
jp
movsb
addb
fists
lods
mov
dec
mov
dec
mov
stos
test
mov
int3
outsl
lret
jne
xor
rorb
sub
add
jge
les
mov
rcrl
fxch
mov
inc
dec
xchg
sbb
ja
in
rorl
test
xchg
inc
mov
leave
pop
shlb
mov
outsl
fcomi
push
sahf
and
add
mov
enter
out
xor
lds
xchg
cwtl
push
cmp
int3
loope
test
jge
push
jg
aaa
xchg
cmp
jle
test
xor
jno
test
xchg
das
aam
jecxz
icebp
aas
fldpi
insb
sbb
mov
adcb
rol
adc
add
cmp
sub
loop
and
daa
lahf
or
je
out
add
pop
add
add
cltd
push
lods
shl
xor
or
outsl
lock
in
mov
es
aad
mov
sbb
dec
mov
push
shll
fcmovne
aad
mov
dec
nop
fmuls
aas
test
call
jb
cmp
rol
movsl
rcll
outsb
out
jno
movsl
arpl
in
into
pop
cmp
xchg
mov
cmp
or
mov
inc
jbe
lods
mov
scas
sbb
jl
mov
xor
mov
ljmp
sarl
xor
mov
cmc
cmpsb
lds
mov
cltd
in
cmpsb
sub
xchg
dec
inc
pop
outsb
out
push
or
jmp
test
aas
sbb
xchg
das
out
cmp
js
adc
test
jns
cmp
test
js
sub
inc
pop
popw
das
nop
dec
test
int3
jne
pop
je
mov
jo
out
cmp
jne
dec
xchg
lods
std
jo
lock
out
jg
and
add
add
fstpl
int
add
pop
add
add
jns
jae
or
mov
push
mov
push
add
jns
xchg
xchg
jmp
add
adcl
pusha
out
mov
mov
insb
mov
jb
push
xchg
mov
fsts
bound
js
adc
cmp
loope
add
pop
lahf
test
mov
inc
xchg
sbb
mov
aaa
xchg
mov
xchg
and
cld
and
les
xor
movsl
movsl
pop
jo
sub
adc
mov
out
lcall
aad
cmp
mov
jmp
rorl
jae
adc
rcl
xor
jle
push
jl
lods
outsb
cmp
jno
pop
fstpt
mov
ljmp
push
es
outsl
jno
ljmp
call
mov
imul
mov
and
insl
lea
add
fcmovnu
mov
and
imul
add
push
inc
pop
jns
aas
lods
fmull
sbb
add
add
add
inc
inc
sub
jmp
mov
popf
xor
test
leave
ljmp
insl
fdivl
ds
cmp
cmc
outsb
pusha
jne
movsb
sbb
adc
jmp
mov
adc
mov
mov
mov
mov
fldcw
dec
jno
cmpb
jns
cli
fsubr
xor
xchg
dec
ss
lcall
add
xor
enter
lahf
and
xchg
adc
ret
xor
mov
mov
mov
cld
sbb
sahf
add
xchg
jb
ret
fistpl
test
xchg
push
xor
pop
lret
js
movsl
xor
jmp
nop
inc
dec
rcrb
pop
xor
push
mov
push
or
jns
xlat
pop
ds
mov
sub
test
add
rclb
lock
mov
test
jecxz
mov
mov
out
movsb
mov
lcall
jp
xor
add
push
jns
cmpsb
sbb
jnp
mov
dec
test
cld
fcomi
add
pop
add
add
inc
out
cmp
push
and
dec
push
lcall
imul
cmp
dec
fsubl
adc
pop
lcall
or
xchg
mov
cmp
jno
push
or
fs
test
inc
dec
insl
mov
or
nop
hlt
mov
rcrl
xor
mov
pop
jp
inc
clc
mov
or
in
dec
repz
sbb
push
adc
mov
adc
jl
and
popa
xor
mov
jne
inc
testb
sbb
push
pop
or
cmp
jp
push
mov
push
sbb
hlt
imul
cs
or
packssdw
test
adc
push
cmp
push
mov
inc
inc
mov
divl
jg
int
sub
cli
add
popa
push
sub
cmpsb
push
clc
icebp
imul
std
ds
add
xlat
pop
xlat
jg
mov
insl
sub
shl
add
pop
add
add
mov
mov
arpl
pop
insb
push
dec
dec
cmp
stc
jmp
xlat
xor
xchg
imul
inc
popf
xor
cmp
enter
sub
xor
daa
pusha
ljmp
outsl
inc
dec
push
xchg
pop
mov
and
or
movsb
xor
outsb
or
insl
xchg
lock
ss
roll
or
xchg
sahf
mov
insb
jo
lret
stc
movsl
idivb
jb
xchg
cmc
fsubr
es
inc
mov
or
xor
fidivrs
test
lret
sbb
or
cmp
repnz
mov
jle
xor
into
sbb
lret
shll
xchg
sbb
in
test
add
ja
dec
mov
pop
add
jge
sub
or
mov
mov
push
sbb
fs
xor
lahf
or
cs
add
fdiv
mov
mov
repz
pop
add
add
jbe
jp
fcomps
inc
arpl
adc
stos
sti
dec
xor
pushf
aad
add
adc
jae
push
sub
dec
loop
sub
cmp
jmp
test
push
icebp
push
inc
cmpsb
das
pop
pushf
pop
ss
lea
fdivrs
dec
lds
js
jge
aaa
cld
jl
and
cmc
xchg
inc
jnp
jo
lods
adc
hlt
xor
les
addr16
pushf
outsb
push
imull
fisttps
fwait
jmp
movsb
sti
jbe
dec
inc
jp
mov
mov
loope
mov
inc
inc
jo
mov
incl
push
and
mov
push
je
mov
jp
into
fstps
fdivs
test
in
sub
xor
mov
ljmp
mov
adc
fucom
enter
sbb
icebp
or
jno
xor
xor
dec
push
movsb
adc
outsl
add
mov
fcoms
mov
lock
add
pop
add
add
or
pop
lea
cld
sar
cltd
mov
icebp
shrb
pusha
mov
sub
cmc
gs
and
push
mov
mov
mov
cmp
xchg
inc
sahf
imul
sbb
push
ljmp
dec
shll
sub
out
cmp
lret
mov
pop
sbb
or
xchg
stos
adc
lods
jns
out
mov
dec
mov
addr16
scas
icebp
test
mov
fisubs
jmp
inc
cld
test
mov
adc
push
imul
es
adc
mov
aam
lock
daa
cmp
ret
std
jne
mov
imul
in
sub
insb
std
loop
adcb
loope
test
cmc
mov
icebp
inc
push
inc
lock
ret
cmp
andl
mov
mov
xor
inc
cmpsl
outsb
mov
jmp
add
push
pop
push
jmp
sbb
mov
div
add
pop
add
add
in
mov
test
hlt
test
mov
lcall
jg
mov
pop
jle
mov
decl
xor
dec
mov
mov
repnz
adc
aam
lcall
dec
lret
cwtl
push
std
xchg
cs
xor
or
inc
mov
pop
clc
add
xchg
jmp
enter
jne
pop
pop
mov
inc
out
shrb
adc
mov
inc
adc
arpl
pop
pop
rcrl
test
fistps
add
shr
dec
ljmp
pop
push
addr16
jno
and
sub
add
xchg
cli
arpl
or
xor
adc
test
out
pushf
xor
adc
idivl
stos
push
repz
rolb
scas
pushf
popf
insb
mov
cld
jl
adc
hlt
add
xor
arpl
dec
das
xor
adc
add
pop
inc
pop
lods
pop
cli
cmc
mov
and
int
testb
pop
add
add
mov
or
adc
in
pop
out
in
arpl
sub
and
aas
jno
adc
mov
add
and
cltd
sbb
sbb
fstpt
das
inc
stos
je
in
xor
inc
inc
xchg
sub
notl
test
mov
xchg
jge
and
scas
in
pop
lret
iret
jo
ds
mov
data16
dec
loop
div
xchg
cmp
fldl
push
rcl
push
roll
divb
ja
jne
test
js
pusha
mov
popf
mov
in
xchg
or
mov
stos
and
sbb
shlb
sbb
mov
dec
jg
sahf
out
push
aaa
repz
jg
cli
mov
fwait
lret
es
pop
sbb
lock
sti
in
mov
sub
add
pop
fsubrl
pop
xlat
xchg
jno
or
scas
push
inc
inc
stos
lahf
inc
push
push
sbb
das
stos
cltd
inc
popf
jae
out
pop
dec
add
pusha
out
add
add
add
iret
xorl
fimuls
test
xor
jmp
outsl
es
jnp
mov
mov
push
bound
mov
and
testl
and
mov
ficompl
cmpsl
pop
adc
int3
jecxz
jl
xchg
or
adc
js
mov
mov
fdivs
cs
outsb
dec
call
add
push
mov
adcl
or
mov
ja
popf
mov
ljmp
test
dec
mov
dec
inc
jge
push
mov
fists
mov
pop
mov
jp
mov
aam
insl
repnz
push
mov
scas
sbb
pop
out
push
push
icebp
cmp
mov
lahf
jl
pop
aas
or
mov
inc
xchg
hlt
pop
repz
outsb
icebp
mov
fimuls
adcl
cmpsl
push
cli
outsl
inc
add
aam
int
mov
mov
repz
or
add
pop
add
add
punpckhwd
sahf
sbb
cmpl
sbb
mov
imul
aam
xor
mov
jmp
jmp
das
mov
jp
mov
mov
shll
jg
jo
xor
pop
jne
inc
mov
or
stc
pusha
test
mov
repnz
jno
inc
fdivrs
sbb
inc
movsb
jmp
les
jl
insl
je
add
cmp
leave
jmp
in
xchg
movsl
push
or
dec
add
pushf
inc
jmp
add
push
push
xchg
jnp
xchg
jae
mov
and
fidivl
lods
push
fmull
push
mov
inc
popa
and
in
lahf
mov
xor
rorl
jl
sbb
and
arpl
mov
add
inc
faddl
testb
cmp
das
fcoms
push
test
inc
orb
add
arpl
addr16
add
mov
jno
xchg
adc
add
pop
add
add
test
movq
push
insb
push
and
xchg
push
push
sahf
lods
and
add
jp
sahf
ret
ss
jae
mov
xchg
iret
test
outsl
lds
stc
inc
adc
push
mov
push
inc
movsl
clc
mov
dec
aad
rcrl
data16
mov
loop
mov
mov
test
call
pop
leave
clc
xchg
mov
or
jno
jle
test
fimuls
xor
loopne
int3
xchg
mov
add
mov
mov
addr16
pop
lods
repz
es
pop
sbb
inc
mov
in
push
xchg
mov
pop
es
sub
fwait
mov
test
mov
mov
dec
imul
and
cli
fsubrs
xchg
xor
push
mov
popa
callw
xchg
and
and
repz
add
add
out
out
pushl
ja
enter
sbb
add
pop
add
add
pushf
dec
cmpsb
and
shll
or
lret
xchg
sbb
int
and
inc
adc
popa
dec
xor
fiadds
aam
inc
ret
mov
dec
cmp
xlat
cli
dec
sbb
jo
movsb
hlt
test
pop
xchg
xorl
jmp
push
push
inc
rclb
add
xchg
mov
insl
ljmp
xorl
sti
int3
and
jle
stos
scas
cs
jmp
pop
jb
or
sub
lods
lock
xchg
loope
sbb
xchg
dec
fs
cli
scas
adc
in
xchg
rcl
negl
push
pusha
mov
pop
xor
xor
xchg
enter
aas
fistpll
sub
aam
ret
lock
into
dec
ret
mov
adc
lahf
dec
orb
les
ljmp
lds
rorb
fs
or
test
add
test
push
scas
decb
dec
fwait
int
cld
add
pop
add
add
jge
stos
mov
push
mov
orb
fucomi
push
mov
inc
cmp
pushf
daa
test
xchg
xchg
popf
dec
sbb
nop
xchg
out
faddl
shr
repnz
jecxz
mov
mov
loopne
cmp
or
idivb
mov
sbb
push
jmp
loope
add
sbb
cli
mov
incl
popl
xchg
inc
dec
mov
shlb
push
sbb
mov
dec
mov
sbb
dec
sarl
dec
adc
jmp
mov
push
or
gs
mov
xchg
out
aam
aad
scas
je
enter
out
cmp
enter
cmpsl
aam
jle
pop
fisttpl
add
lea
inc
rorb
imul
inc
fadds
addr16
and
adcb
mov
inc
cld
fwait
mov
adc
repnz
sbb
xor
scas
xor
addb
add
add
xchg
and
movsl
mov
mov
mov
mov
jns
sub
add
pop
add
add
sub
lcall
adcb
push
aad
mov
mov
call
mov
addr16
lcall
aas
fcompl
sbb
outsl
repnz
fdivl
aam
sub
xchg
sbb
xchg
mov
lods
xorb
orb
push
pmulhuw
fnstenv
cltd
call
das
call
insb
mov
push
outsl
mov
or
addr16
adc
in
pop
cs
add
cwtl
cmpsl
fcoms
or
add
adc
cmp
mov
jle
cmpsl
push
sbb
daa
getsec
mov
push
sarl
adc
jle
cld
push
ret
or
mov
dec
sbb
stos
icebp
iret
inc
push
xor
lahf
data16
adc
jbe
jg
testl
and
clc
pop
aad
ret
sbb
mov
je
loope
adc
jne
push
fdivl
mov
je
push
add
add
add
sub
addl
adcb
adc
mov
inc
lcall
jmp
mov
out
add
xchg
pop
hlt
cwtl
cwtl
mov
mov
cmp
repz
ret
xchg
inc
mov
jb
cld
pop
jno
mov
test
xchg
sbbl
in
decl
push
lock
sub
mov
mov
inc
sub
sbb
cmp
idivl
xchg
scas
int3
loopne
fildll
push
cld
xor
or
cmp
xor
icebp
lahf
lods
in
addr16
sbb
jb
sub
inc
xchg
dec
add
mov
and
or
push
and
fchs
mov
fldt
clc
dec
es
mov
pop
lds
ss
dec
decl
add
js
cmp
cmp
insl
in
sub
test
or
int3
add
mov
mov
xchg
mov
incl
add
add
add
in
scas
xlat
xchg
or
sbb
jg
sbb
jecxz
ret
scas
lods
push
pop
aam
outsl
mov
inc
pop
push
push
aam
adc
mov
lock
mov
sub
cmc
fidivs
into
push
repz
mov
pushf
popf
aaa
sub
sahf
or
mov
add
or
sub
das
or
sub
cmp
in
or
jae
sub
or
mov
inc
xchg
inc
shlb
mov
ss
insb
rcll
mov
lret
movsb
dec
dec
cltd
repnz
bound
cwtl
enter
push
adc
pop
mov
lcall
hlt
lock
pop
inc
bound
cmpsb
pop
mov
and
cld
sbb
mov
and
mov
add
push
push
cmp
jo
mov
jae
rolb
lds
add
xchg
sub
scas
pop
mov
shrl
add
add
add
add
test
dec
dec
add
adc
les
mov
jge
in
lock
out
loop
imul
xchg
inc
xlat
pop
cli
dec
push
into
pop
mov
sub
dec
fwait
testb
ds
cmp
lcall
aaa
jo
loopne
imul
sub
add
ds
jno
rcrb
out
mov
mov
adc
mov
dec
repnz
add
dec
jle
and
mov
call
and
xchg
dec
dec
enter
push
adc
fwait
je
dec
dec
mov
xor
inc
mov
lcall
shlb
push
adc
adc
test
or
xchg
adcb
ds
or
sbb
push
test
jp
dec
fs
jmp
jmp
or
outsl
or
test
xchg
shll
addb
add
hlt
fisttps
test
lods
mov
pop
add
add
movsl
ficoms
iret
sub
mov
sahf
jmp
sbb
les
push
mov
mov
mov
sub
insb
jge
or
xor
inc
or
cmp
mov
cli
sbb
dec
repnz
shll
ffreep
leave
je
test
int
push
inc
imul
xor
or
add
or
push
mov
or
jb,pt
loopne
jno
jns
movsb
sahf
push
dec
jo
xchg
popa
nop
adc
insl
stc
xchg
rorb
sti
dec
sub
rcl
aam
sbb
add
out
outsl
push
push
jecxz
pop
push
adc
dec
out
lods
cmp
mov
fildll
mov
aad
std
imul
lret
xlat
out
in
aad
leave
nop
adc
pop
aad
inc
scas
mov
sub
xchg
sbb
add
into
fwait
cmc
pop
sub
dec
add
add
add
add
pop
imul
fldcw
mulb
hlt
fcom
lret
add
jno
outsl
mov
push
pop
or
std
nop
pop
pop
mul
add
mov
xchg
repz
in
add
lret
loope
scas
stc
pusha
pop
mov
rcr
insl
ss
addl
adc
xchg
stos
cmpsl
mov
addr16
dec
dec
hlt
push
adc
cmc
adcb
mov
mov
mov
ds
add
idivb
lcall
sub
cmp
repz
sahf
jp
stos
mov
sbb
xchg
ja
fidivl
inc
insb
pop
sub
and
push
inc
mov
cs
in
sbb
sub
and
mov
fadds
rcll
pop
xor
test
sbb
and
outsb
pushf
outsl
mov
fcoml
rclb
pop
cltd
or
pop
test
adc
jo
ficompl
add
xor
mov
pop
mov
aas
pop
jg
add
add
add
add
lods
roll
sub
movsl
push
mov
jp
pop
jmp
sbb
sbb
push
fsubrs
jo
xchg
xor
sbb
mov
xchg
sub
ret
inc
cmpsb
dec
outsl
repz
out
pop
not
sbb
inc
jno
in
xchg
jmp
scas
xchg
adc
mov
xchg
xor
jns
repz
push
push
sub
pop
and
ficompl
pop
mov
cmp
subl
inc
push
jae
dec
fcoml
or
pop
rcrl
sbb
pop
cmpl
add
psubusw
mov
xchg
dec
jb
xchg
call
iret
ds
loope
sub
sub
mov
test
lock
mov
jmp
jb
cltd
stos
lods
fstpl
add
out
jmp
out
stc
adc
ljmp
mov
insl
pop
push
neg
pop
inc
rorb
ja
sti
inc
out
aas
mov
scas
adc
outsl
jo
pop
add
add
add
add
push
sbbl
or
push
dec
test
cwtl
outsl
push
push
aas
xchg
int
and
xchg
fisttpll
mov
insl
outsl
lret
shll
sub
mov
mov
or
test
cmp
pusha
clc
rcrb
push
mov
inc
mov
adc
and
or
sbb
jbe
mov
pop
pop
lahf
shlb
mov
pop
ret
loope
add
arpl
les
mov
repz
dec
mov
icebp
sub
ficomps
mov
js
movsl
add
ds
pop
sbb
outsb
test
adc
repnz
shll
std
sbb
fadds
pop
fdivr
dec
cmp
aaa
inc
push
sbb
pop
jp
iret
and
mov
out
out
push
cmp
or
push
inc
xchg
add
bnd
jl
movsb
mov
pusha
add
add
xchg
pop
jge
pop
sbb
dec
leave
sub
sub
cmp
test
xchg
sbb
sbb
cmp
inc
lret
fstpl
push
in
sahf
pop
aad
dec
push
dec
xchg
dec
sub
sti
fnstcw
out
pop
jmp
or
sub
jbe
jle
scas
lods
mov
out
in
dec
dec
adc
aam
pop
repnz
inc
ss
cmp
gs
jno
inc
sub
daa
fmull
rcll
andb
push
jge
std
in
jns
mov
adc
testl
je
imul
xor
add
cmp
jne
ss
push
inc
decb
inc
ljmp
and
scas
dec
pop
pop
push
adc
pop
js
dec
inc
pop
xor
stos
imul
or
jne
xorb
or
mov
pop
sub
add
lahf
dec
add
add
subl
fisubrl
ret
add
add
in
out
ja
fists
and
loopne
push
add
pop
add
add
cwtl
jl
mov
mov
andb
sub
cmp
mov
mov
lods
adc
fwait
sahf
dec
andl
and
adcb
in
addl
mov
mov
rcrl
lret
mov
jnp
add
fidivrs
xchg
outsl
daa
cmp
jle
adc
cmp
shrl
ljmp
cltd
sti
addl
sbb
cmp
jb
jle
inc
mov
int3
push
aaa
mov
scas
jbe
push
jne
sahf
cmp
mov
mov
aas
inc
sahf
cmc
dec
mov
and
jp
aaa
xchg
out
pop
push
push
shrb
in
pop
ret
xchg
push
adc
scas
rolb
xchg
sti
pop
push
jb
mov
cmpsb
testl
repnz
jmp
adc
inc
push
dec
pop
loopne
push
inc
fidivrl
fstps
add
scas
test
in
daa
jle
add
pop
add
pop
add
add
dec
scas
mov
icebp
lock
mov
cmc
mov
adc
sbb
xchg
cld
outsl
outsl
add
out
stos
push
push
aas
das
adc
int
cmp
popf
outsb
scas
arpl
cmpsl
xor
lods
movaps
out
clc
imull
out
out
subl
mov
outsb
lods
aas
mov
mov
in
loopne
je
xchg
mov
clc
ret
loop
out
jl
neg
test
add
movsb
mov
adc
inc
jecxz
push
xlat
xchg
adc
les
adc
mov
xchg
and
sti
push
push
fs
cmp
sbb
les
xor
mov
mov
push
fsubs
push
push
lods
enter
repz
sub
adc
mov
jns
mov
mov
jnp
cmp
or
jp
inc
rclb
lds
and
outsb
mov
and
fstps
loop
out
sar
add
jg
idivl
mov
adc
add
pop
add
add
ret
adc
mov
imul
cmpsb
inc
test
pop
inc
scas
inc
dec
cwtl
adc
pop
pop
dec
xchg
and
fst
xor
int
mov
pop
lods
das
jns
mov
dec
xchg
mov
cmp
push
mov
in
jae
decl
mov
mov
bound
fcomps
pop
std
or
cmp
mov
jo
lret
jp
in
mov
aam
dec
push
mov
mov
pop
jp,pt
dec
mov
xchg
or
rcl
push
pop
mov
mov
xchg
js
sub
pop
and
mov
inc
mov
in
mov
sti
pop
leave
fildll
xlat
sub
xchg
push
xchg
lods
scas
push
loop
fsts
leave
popa
stc
jmp
mov
adc
jne
push
xchg
test
pop
jno,pn
mov
lods
div
adc
cli
iret
pop
test
jne
cmpsb
lock
push
pop
sbb
cmp
sti
jg
les
movsl
jl
add
pop
add
add
call
mov
xchg
jl
inc
mov
cmpsl
mov
xchg
shll
or
mov
mov
test
jns
shll
clc
dec
shl
push
push
or
dec
and
or
adc
divb
cmp
cmp
mov
leave
lods
sub
aas
in
or
outsl
repnz
cmpsl
push
mov
cltd
cwtl
nop
sub
int3
add
std
int
mov
or
add
dec
cmp
mov
lods
testb
xchg
aas
inc
xchg
dec
cli
insl
rcrb
ret
ss
cmpsl
jne
push
loopne
mov
mov
out
aam
sbb
cld
aam
adc
adc
lcall
adc
dec
movsb
imull
out
fcmovb
dec
mov
push
ficomps
cmp
shlb
xchg
push
push
test
ss
leavew
adc
xor
xor
fcoms
add
add
jnp
fnsave
xchg
mul
rcrl
orl
add
add
add
daa
jp
js
fwait
add
je
add
xchg
in
sbb
cs
mov
je
xor
inc
orb
xor
mov
icebp
xrelease
pop
push
jnp
sti
xchg
mov
xlat
inc
cld
aam
cmp
jnp
gs
popf
sub
adc
decb
insl
add
mov
jae
lds
sbb
loop
cli
loopne
pop
popa
arpl
stos
push
add
cwtl
aad
pop
inc
push
bound
in
repnz
mov
mov
and
dec
out
repnz
jb
fmull
lock
cmp
xchg
xchg
ret
dec
repz
xor
sbb
mov
xchg
dec
mov
xchg
scas
sbb
mov
lcall
xlat
fsubrl
mov
in
inc
gs
outsb
jp
mov
in
or
or
hlt
cmp
in
xor
pusha
lods
pushl
add
outsl
mov
inc
loop
dec
loopne
pop
jg
or
add
add
add
cli
mov
into
push
aad
addr16
ljmp
mov
add
in
divl
mov
mov
scas
xor
int
imul
repnz
xchg
or
pop
lea
dec
xor
inc
mov
xchg
pop
outsl
xchg
sti
sbb
popf
cmp
imul
xor
push
adc
sub
mov
hlt
adc
outsl
jae
jg
psubsb
jmp
pop
and
fndisi(8087
imul
dec
fisubrs
loope
out
scas
scas
push
jmp
xor
arpl
or
mov
ja
cmc
xorb
add
mov
test
loope
jnp
inc
shlb
mov
mov
sarl
popf
imull
and
xchg
arpl
fbld
scas
mov
mov
sub
dec
adc
shr
lods
mov
cli
enter
pop
adcl
add
add
jmp
ficompl
or
add
add
add
push
out
mov
movsl
xchg
repnz
push
lret
and
and
mull
jmp
sub
mov
jp
add
push
leave
sbb
mov
mov
cmpsl
les
scas
in
dec
sub
lea
ds
adc
dec
scas
into
fimull
jne
xchg
inc
or
push
leave
dec
cmp
enter
test
mov
push
ret
hlt
cld
popa
fbstp
repnz
sahf
or
adc
push
or
dec
shrl
icebp
imul
out
dec
fbld
xchg
sub
scas
pop
xor
xchg
xchg
inc
push
or
mov
xchg
pop
ror
dec
jg
test
dec
repnz
roll
clc
sbb
test
sub
or
dec
or
andb
insl
mov
push
xchg
daa
mov
pop
out
es
adc
and
inc
sub
push
mov
add
add
xor
negl
mov
dec
cwtl
or
add
xchg
and
stc
push
in
cmp
addr16
inc
push
jecxz
sbb
clc
mov
mov
xchg
mov
iret
testb
cld
mov
rorb
add
sub
insl
repnz
mov
pusha
push
daa
push
sbb
and
pop
xorl
lods
popa
call
sbb
dec
repz
sbb
sbb
jl
jle
mov
loope
shlb
orl
mov
int
jmp
stos
shlb
aad
cli
sbb
dec
cmp
rcrl
cmp
push
xor
out
xlat
cmpsb
and
daa
inc
dec
rclb
xor
or
hlt
mov
mov
sti
les
scas
push
or
jecxz
and
fisubl
es
add
andb
test
cmc
bound
cmpsl
repnz
mov
mov
xchg
test
push
lahf
xor
sti
mov
movl
dec
cli
inc
jg
int
cs
mov
add
pop
add
add
aam
jecxz
les
nop
jbe
loope
lret
add
mov
rcl
ds
push
ja
pushf
or
mov
xchg
cld
or
adc
xchg
fidivs
adc
arpl
mov
inc
in
mov
xor
icebp
sub
int3
inc
inc
mov
dec
shll
repz
repz
scas
and
ds
jmp
gs
dec
cmp
add
cmc
sahf
inc
sub
cli
out
jmp
mov
orl
inc
jp
mov
divl
mov
testb
es
out
push
jmp
xor
sbb
mov
cmpl
imul
inc
xchg
jo
sar
mov
push
fcomps
pusha
fisubrl
sub
mov
xor
lret
jne
in
mov
cmc
push
cs
aam
xorb
fcmovbe
mov
mov
test
lock
std
cmp
jle
fistps
push
and
pop
add
add
mov
gs
loopne
jmp
rcll
jecxz
jl
cmp
pusha
cmpsl
jl
ficoml
les
jae
movsb
push
cli
or
push
in
movsl
fisubs
mov
xor
rcl
jo
pop
or
cltd
push
or
xchg
mov
insl
or
fcmovne
aas
sbbb
pop
lret
mov
lret
mov
leave
rclb
roll
fs
mov
push
add
dec
pop
cmp
xchg
je
adc
roll
push
das
adc
pushf
lahf
jp
inc
sub
imul
mov
fildl
sbb
int
mov
sahf
dec
lcall
nop
cmovbe
test
hlt
cmp
cltd
or
xor
cmp
xchg
push
test
cmp
mov
mov
xchg
pop
lds
xlat
fimull
mov
add
add
add
into
fxam
ljmp
test
outsb
mov
mov
push
sti
sub
dec
push
mov
jle
leave
call
dec
adc
adc
lods
mov
int3
idivl
adc
f2xm1
inc
xchg
cmp
jecxz
adc
cs
jo
in
push
aas
cmp
dec
and
mov
lea
pop
lahf
fsubs
pop
push
cmp
fcompl
cmp
xlat
inc
sub
xchg
cltd
jmp
lods
sti
xor
addl
daa
daa
mov
loopne
mov
inc
aaa
bound
push
mov
clc
mov
je
pop
cmpsl
imul
xorb
jl
xchg
rorl
sar
mov
dec
fbld
ljmp
pop
xor
lret
outsb
sahf
repz
inc
pop
mov
hlt
adc
push
cmp
or
xchg
mov
popf
inc
out
xchg
push
mov
cmp
testl
add
add
sub
iret
outsb
jmp
in
pop
outsl
pop
adc
mov
add
pop
add
add
and
and
push
jbe
pop
stc
pop
lds
mov
inc
add
movb
sub
sub
ret
cmp
and
push
push
les
dec
xor
out
loopne
push
dec
add
bound
lea
je
xor
out
shll
adc
mov
fnsave
outsl
jecxz
push
xchg
pop
inc
xchg
mov
rcrl
insl
jno
mov
lret
mov
and
pop
popf
gs
dec
push
inc
and
xor
aaa
jo
shr
aad
ss
movsb
fdivrs
loopne
leave
mov
pop
inc
mov
mov
pop
lds
or
movsl
dec
cmpsb
push
jno
pop
mov
pop
cmp
cmc
repnz
jns
fcmovbe
pop
sbb
out
lcall
nop
push
movb
out
lock
outsb
ss
and
lret
sbb
std
sbb
stc
cld
or
inc
inc
sbb
add
add
popf
lods
mov
insl
sub
rcrb
call
push
or
fadd
or
in
add
daa
xor
movsb
pxor
int3
or
cmpsb
pusha
xor
repnz
jno
push
push
sub
sub
cmc
and
pop
popa
les
and
cmp
shrl
data16
sbb
lock
fimuls
adc
add
and
call
push
mov
or
push
pop
pop
pusha
sub
or
pusha
rol
push
pop
adc
aas
cmp
fwait
dec
cmp
jmp
add
out
insl
cmpsl
ljmp
mov
lods
jo
inc
sub
xchg
addr16
clc
decl
clc
iret
lahf
pusha
cmp
sbb
adc
out
jae
popa
sub
and
fsubl
pop
imul
dec
aam
push
mov
jp
roll
xchg
push
mov
add
negl
adc
fadd
mov
sbb
xor
pop
add
add
push
aad
jl
mov
push
adc
ror
xchg
adc
je
add
jo
inc
or
mov
fs
movsb
mov
and
std
sub
lret
cmp
stos
push
lcall
xchg
jns
push
scas
imul
or
mov
add
aad
sub
or
push
xchg
push
fmul
mov
mov
push
out
pop
sti
outsb
and
int
andb
mov
stos
outsl
gs
lea
xchg
sarb
icebp
sti
outsb
repnz
imul
inc
cmp
dec
pop
pop
iret
imul
mov
cmp
lock
negb
cmpsl
xchg
add
loop
xor
cld
mov
lods
nop
adc
cmp
in
loopne
xchg
cmc
dec
lds
adc
js
mov
cltd
cmc
mov
mov
dec
pushl
adc
add
pop
add
add
lret
outsl
pop
xchg
pop
mov
or
xor
add
in
cli
mov
int3
push
lahf
aam
shl
mov
leave
jae
dec
or
xor
out
inc
pop
stc
jo
push
lret
jecxz
pusha
mov
lahf
shll
xchg
fiaddl
shrl
pushf
iret
cmp
clc
sub
repz
xchg
mov
cmpsb
lock
add
sbb
lret
dec
dec
lahf
lock
cmp
push
int3
adc
mov
add
push
lds
xchg
cmp
cmp
pop
loopne
add
push
sbb
and
sbbb
adc
sbb
jbe
mov
inc
bound
cmpb
lds
jmp
sub
push
sbb
iret
std
jae
cs
leave
inc
and
notb
jns
xchg
stc
push
sub
mov
jne
outsb
push
repz
xor
mov
fisubrl
dec
fimuls
lahf
icebp
pop
fisttpl
jbe
cwtl
sub
scas
icebp
lahf
jg
sbb
pop
sub
inc
ja
pop
aas
pop
jmp
mov
rclb
add
mov
adc
jle
test
push
dec
imul
daa
jp
ljmp
xlat
add
adc
xor
pop
bswap
std
dec
in
jecxz
or
mov
aam
mov
cmp
shrb
jl
jne
sbb
addb
insb
push
mov
xchg
push
adc
jl
adc
mov
adc
xchg
pop
add
stos
rcrl
xchg
sbb
push
loop
push
imul
lret
fwait
fwait
adc
gs
sti
push
lret
xor
dec
pop
test
push
dec
out
test
jne
add
je
js
mov
xchg
daa
mov
loop,pt
les
xorl
xchg
movsl
pop
jo
daa
gs
ret
or
xchg
sub
pop
loop
in
shlb
daa
and
and
fst
stc
dec
mov
aam
cmpsl
and
insl
cld
into
aad
mov
cmc
lcall
les
cld
je
add
xchg
jae
ja
div
fisttpll
sbb
xlat
push
add
pop
add
add
xchg
or
lahf
outsl
fsubs
scas
mulb
sub
ja
es
flds
dec
fmuls
inc
cmpsl
adc
push
aas
lods
int
xchg
xchg
pop
cmpb
aaa
or
and
rcl
shll
enterw
xor
mov
adc
icebp
jl
int3
push
or
dec
inc
sub
mov
int3
dec
cltd
jnp
stos
cld
pop
pop
pop
fmuls
sub
ss
ds
mulb
pop
cltd
sbb
aam
insl
mov
jns
arpl
xchg
rcll
xlat
jno
and
in
cmp
jp
pop
xor
data16
jg
loopne
mov
decl
call
lds
jns
push
enter
mov
stos
loopne
sub
int3
xchg
or
push
fcmovnu
lods
sbb
call
mov
cltd
or
sub
cmp
add
cli
std
jg
mov
lret
dec
ficoms
add
pop
add
add
sbb
or
push
cmp
pop
xchg
mov
mov
adc
sub
xchg
xor
fistps
xchg
sub
add
push
negl
sbb
mov
iret
sub
lods
mov
loope
stos
lret
fucompp
and
adc
jl
notb
inc
mov
sti
inc
push
add
pop
icebp
out
push
addl
fbld
mov
mov
mov
sub
adc
fsubr
xlat
in
in
adc
insl
push
adc
rclb
mov
popf
sub
lock
in
movl
scas
jge
push
fwait
dec
int
xchg
les
in
test
pop
lea
popf
add
ss
inc
mov
hlt
sbb
nop
shlb
pop
repz
sbb
nopl
inc
sub
dec
pop
mov
jno
push
loope
mov
dec
mov
testl
incl
mov
sub
in
add
pop
add
add
enter
popf
push
addb
sbb
out
mov
inc
cmp
adc
cmp
stos
push
hlt
inc
jecxz
xorb
push
cmp
pop
in
icebp
rol
insl
sub
inc
jnp
pop
in
in
je
idivb
fdivl
push
jbe
fwait
mov
or
sbb
popf
mov
pushf
jecxz
rorl
xchg
int
out
dec
inc
mov
cmp
mov
add
inc
dec
imul
clc
push
cwtl
aam
xor
cwtl
rorb
sbb
les
lods
xor
clc
pop
pop
fstpl
mov
je
pop
mov
jg
in
fstps
imul
mov
rorb
or
sub
mov
xchg
popa
xor
adcb
pushf
imul
push
mov
fdivr
dec
push
xchg
decb
push
es
jg
pop
pop
mov
cmp
add
add
add
pop
mov
mov
sbb
push
mov
out
mov
push
dec
arpl
sbb
xor
cmp
rolb
jecxz
in
shlb
mov
out
lret
mov
addl
nop
lock
fs
sbb
cli
cltd
out
test
cltd
mov
inc
rorb
push
idivl
lea
push
mov
xchg
dec
jne
dec
cmp
xor
and
mov
sub
fnstsw
cld
push
outsl
loopne
int
xor
xchg
iret
cmp
data16
jbe
xchg
sbb
sar
pushf
cld
xchg
jbe
xor
int3
jnp
mov
fildll
scas
test
adc
sub
rcl
jae
shrl
movsl
iret
inc
mov
jg
clc
mov
dec
pop
movsl
decb
repz
in
dec
jl
lret
add
dec
mov
xchg
xchg
pop
pop
push
sbbb
mov
dec
sbb
sbb
dec
mov
xchg
jle
push
clc
or
mov
add
fs
or
sbb
add
add
add
test
sbb
jb
mov
and
test
add
mov
ret
es
lahf
icebp
scas
sbb
enter
mov
dec
repnz
aaa
mov
sahf
pop
adc
scas
add
cld
insb
jl
int3
pop
and
mov
outsl
loop
out
mov
stos
xchg
imul
mov
jo
iret
mul
ret
stos
push
and
fists
pusha
clc
js
or
sub
into
insb
jp
scas
mov
bound
sub
add
cmpsl
js
notl
cwtl
pop
popf
or
xor
fstl
lahf
inc
sahf
dec
or
iret
test
mov
xchg
stos
mov
fisubrs
mov
mov
jmp
xchg
aaa
movsl
and
xchg
and
jmp
pop
sbb
cmp
mov
mov
dec
add
adc
popa
xchg
sub
movb
pusha
and
xor
or
imul
add
stc
lods
xor
xor
loop
pop
out
sbb
add
add
add
sbb
adc
cmp
add
fstpl
mov
push
mov
dec
cmpsl
or
orl
sar
push
fidivs
jnp
lahf
inc
imul
iret
dec
xchg
inc
lea
stc
xlat
sarb
jp
jle
mov
jge
lock
or
mov
jmp
popa
push
or
mov
mov
ret
push
nop
nop
sub
xor
pop
loop
inc
cmp
cmpl
pop
adc
daa
out
cs
and
jecxz
jge
lea
into
pop
xlat
movsb
jbe
mov
mov
mov
inc
insb
shrl
mov
pusha
fdivrl
bound
add
popf
mov
mov
cltd
push
cld
movsl
inc
sub
dec
and
xor
adc
enter
dec
mov
ja
test
mov
mov
stos
mov
jmp
and
sbbb
ficoms
stos
sbb
jmp
ljmp
mov
pop
add
add
push
add
scas
xchg
sub
fucom
push
push
pop
pushf
ds
mov
mov
pop
lea
xchg
or
aas
mov
or
adcb
xchg
jnp
lret
adc
xchg
jmp
bsr
cltd
mov
cld
lret
add
mov
cmp
dec
rorl
test
scas
cli
lahf
arpl
xchg
sbb
cmp
scas
test
xchg
out
arpl
sbb
sbbb
icebp
fistps
lret
pop
cli
xchg
push
lahf
sbb
call
stos
js
fwait
lret
push
mov
scas
add
push
mov
push
sub
ja
loope
loopne
divl
rcrb
sbb
sub
mov
dec
mov
arpl
imul
subl
test
xchg
pushf
shll
cmp
and
popf
cltd
std
inc
dec
mov
add
add
add
in
out
arpl
aas
jns
xlat
or
add
pop
add
add
lods
das
push
repz
lahf
or
pop
aaa
mov
xchg
jge
ret
in
dec
mov
push
adc
out
mov
cld
das
sub
pop
lret
mov
add
repnz
mov
cli
int
inc
aam
push
dec
les
mov
leave
mov
loop
fstpl
sbb
fcomps
sub
imul
mov
rorl
pop
nop
xchg
push
or
cmp
inc
inc
pop
xor
divl
mov
pop
push
pop
jp
out
fmuls
rolb
fistpl
lock
xchg
mov
push
das
int
push
pushf
mov
push
cmp
movsl
testb
arpl
jb
icebp
mov
pusha
jle
test
sbb
jp
xor
mov
mov
in
popa
jne
ds
mov
repnz
push
mov
loope
call
lfs
mov
add
adc
ljmp
loop
sti
enter
add
dec
or
out
cld
mov
xchg
nopl
add
add
add
mov
dec
imul
mov
adc
jns
mull
adc
sub
xchg
mov
icebp
mov
call
daa
aad
stc
ja
mov
jecxz
mov
add
pop
mov
xchg
repnz
ret
sbb
clc
ret
pushf
cltd
testb
mov
dec
lcall
out
jnp
inc
lods
sbb
sub
jge
dec
sub
add
aaa
ljmp
iret
int3
cmp
and
push
jnp
loop
lcall
ja
outsl
add
xor
into
je
lods
mov
xlat
cmc
xor
sub
inc
adc
scas
cmp
shl
inc
stos
popf
xor
push
sub
je
mov
pop
sbb
sti
sbb
popf
jmp
jg
pop
add
cwtl
mov
pop
or
mov
imul
push
popf
cmp
movsb
add
in
add
cmp
out
lock
push
jecxz
outsb
push
and
add
add
add
inc
clc
inc
pop
gs
int
push
lds
and
rclb
adc
aad
test
xchg
xchg
clc
rcrb
sbb
pop
bound
xchg
fisttpll
pop
data16
jge
vsubpd
in
mull
or
adc
inc
fsubs
sub
negb
dec
fs
adc
scas
mov
ret
test
loopne
and
inc
data16
mov
mov
push
xor
mov
xor
iret
pop
mov
clc
mov
ljmp
dec
mov
jg
rcrl
in
shlb
mov
xchg
loope
mov
and
xchg
mov
mov
sbb
cli
add
lret
mov
fidivl
out
imul
pusha
pop
cmp
nop
scas
mov
int
outsb
add
push
sahf
lds
add
lods
jg
sub
add
out
jg
and
add
add
add
outsb
add
pop
mov
imul
pop
scas
adc
arpl
jmp
hlt
xchg
cmp
aam
les
mov
lods
xchg
adc
xor
imul
sub
push
jmp
push
push
aam
fs
fisubs
mov
mov
mov
imull
mov
and
or
dec
push
sub
cmp
in
dec
xor
mov
xor
sbb
hlt
movsb
jae
movsl
jmp
jg
and
pop
adc
xor
out
sbb
mov
jnp
mov
jecxz
mov
and
ret
xor
fwait
into
dec
in
scas
pusha
dec
xchg
cltd
xor
out
fimuls
clc
pop
stos
push
jb
and
lcall
xlat
xchg
push
and
cmp
roll
cli
ds
adc
iret
and
sub
fwait
dec
cmp
das
jbe
jmp
dec
sub
cli
add
jg
cld
fcmovbe
out
inc
jg
and
add
pop
add
add
ss
andb
fstpt
sbb
mov
xlat
mov
xor
push
in
xchg
mov
in
lods
sbb
in
repz
mov
sbb
pop
inc
outsb
incl
jns
adc
int
xchg
or
mov
xor
cli
sbb
enter
mov
mov
and
nop
sahf
dec
adc
nop
pop
cwtl
mov
sbb
popf
or
aam
push
mov
sbb
cmp
notl
outsb
iret
jle
arpl
push
pop
ss
loope
inc
out
in
or
and
xor
pop
movsb
push
roll
into
adc
mov
xchg
xchg
jno
adc
shlb
addb
xor
and
sub
rclb
repz
idiv
xchg
mov
test
jns
jmp
xor
jne
mov
lahf
icebp
sbb
ret
mov
iret
mov
test
stos
ljmp
add
out
stos
shrb
fnstenv
hlt
jno
or
xorl
fs
push
loop
ljmp
pop
lcall
ds
icebp
test
mov
and
mov
cli
push
pop
inc
lea
pop
loop
sub
jle
mov
mov
dec
and
push
xchg
push
pop
sub
add
mov
pop
insb
mov
mov
fchs
lock
je
out
insl
jmp
push
leave
or
dec
mov
xchg
icebp
and
out
xchg
inc
cmp
add
xor
push
scas
stos
hlt
sti
adc
imul
pushf
cmpsl
jle
jno
movsl
inc
sbb
out
xchg
mov
mov
push
inc
sbb
out
and
sub
xlat
out
add
nop/reserved
cmpb
arpl
loope
sub
add
add
add
mov
lahf
and
or
mov
pop
add
add
cmp
push
subb
sub
je
cmpsb
cmpsb
inc
dec
mov
repz
push
popf
aam
or
jae
jmp
sbb
dec
adc
add
lcall
outsb
mov
js
aad
pop
add
mov
cmp
in
enter
into
repz
call
xor
nop
in
repz
xchg
mov
lods
sbb
ret
orb
insl
mov
test
pop
jne
push
repz
jecxz
imul
hlt
into
gs
scas
cli
cmp
imul
mov
xchg
xchg
push
stos
mov
dec
js
addb
jno
jnp
jnp
cs
loopne
push
jg
inc
dec
fcmovnu
dec
or
repnz
je
shlb
lahf
mov
cli
xchg
std
ficompl
dec
ss
int3
add
or
iret
dec
jmp
movsl
pop
nop
and
xchg
sahf
add
aam
dec
scas
jmp
push
jne
vmwrite
add
xor
clc
cli
clc
sarb
js
xor
cmp
add
imul
mov
mov
mov
xchg
icebp
dec
movsb
into
xchg
movsb
lret
cltd
inc
std
test
xchg
out
or
repz
adc
and
sbb
lret
iret
scas
bound
or
and
pop
sub
fnstsw
into
lret
cmp
imul
cmp
mov
scas
mov
fldt
fs
aas
push
movsb
dec
nop
pop
jl
mov
jns
dec
aad
sahf
shll
stc
push
pavgb
nop
mov
cmp
mov
cmp
mov
jae
ss
sar
repz
sub
mov
lods
pop
sbbl
jbe
mov
mov
push
std
lret
jbe
inc
aad
dec
jb
dec
sti
dec
mov
insb
rep
push
in
and
movsl
mov
inc
dec
mov
cli
cltd
add
inc
jmp
stos
rorb
adc
inc
dec
rcrb
lods
add
jnp
out
add
push
stos
clc
mov
add
add
add
arpl
hlt
mov
mov
xlat
mov
in
pop
imul
dec
and
inc
add
idivl
mov
sub
mov
jbe
shrb
mov
mov
dec
mov
test
inc
fistpll
inc
mov
sbb
jbe
jo
ss
inc
jo
scas
xor
shlb
movsb
fisubrl
sbb
decb
jmp
xchg
xchg
xor
lods
inc
jle
sub
xchg
js
and
aad
out
xor
lret
inc
mov
out
pop
gs
data16
aam
cmp
outsl
mov
cli
push
dec
cmp
mov
push
jnp
mov
cltd
sub
push
pop
sbb
stos
js
dec
stos
lahf
xchg
cmp
cld
fiaddl
jns
addr16
sbb
push
fmuls
insl
mov
inc
int
inc
in
in
in
push
mov
mov
rcrb
xor
enter
stc
jb
sbb
popf
adcl
add
es
data16
pop
sub
daa
fadds
add
pop
add
add
aaa
mov
les
jmp
add
stc
xor
les
jae
rcl
repz
ss
or
and
xchg
sbb
or
add
push
iret
mov
dec
ret
mov
push
aam
pop
cmpsl
cmp
cli
rorl
test
pop
push
mov
push
inc
sbb
pop
icebp
sbb
inc
mov
mov
pop
aas
add
cmp
push
imul
lock
test
dec
mov
dec
jo
popf
aam
in
daa
add
jge
aaa
adc
in
les
popf
inc
mov
loope
int3
daa
lods
leave
cld
mov
movsl
lahf
sti
jecxz
outsb
movhps
adc
shll
inc
in
mov
fnstenv
jns
cli
mov
jge
gs
fmuls
aaa
push
cmp
pop
movsb
iret
add
mov
hlt
mov
add
dec
mov
imul
clc
test
sub
add
add
add
jmp
lods
jecxz
pop
jecxz
xchg
mov
inc
sbb
jp
ljmp
cmp
adc
xchg
ds
ja
lcall
push
adc
mov
cltd
add
rol
mov
repnz
jo
lret
dec
mov
loope
ficompl
mov
cwtl
and
leave
imul
cmp
cmpl
in
stos
mov
cmpsl
ficomps
mov
sbb
ret
vcvtps2dq
mov
jp
cmp
mov
test
xchg
shll
adc
jno
push
loopne
mov
int
sbb
icebp
adc
aaa
cmpsl
or
stos
fstpt
jns
xorl
insb
dec
adc
js
xchg
xor
les
sub
adcl
jne
mov
je
cmp
imul
xchg
or
sbb
pushf
add
and
push
sti
cmpsl
push
mov
and
sub
add
add
add
cmpsl
jo
mov
mov
aas
setg
mov
push
mov
fs
mov
pop
ss
dec
mov
push
aaa
lods
lcall
cmp
enter
jo
pop
sarb
sub
pop
ja
mov
dec
and
xor
or
lret
lods
or
pop
mov
stos
jbe
mov
lea
inc
cmp
jmp
les
lret
aad
sub
xchg
in
in
es
xchg
dec
jle
std
xor
jo
fwait
add
push
lods
dec
out
ljmp
filds
lods
sub
int3
mov
aaa
sub
daa
push
push
xchg
lcall
lret
out
ljmp
shll
jbe
mov
jae
js
jmp
cmpsb
inc
call
xchg
out
shrl
ljmp
cmpsb
cmpsl
add
lcall
add
add
mov
std
mov
ljmp
sarb
pop
add
add
sub
push
rorb
lods
cmp
cmpsb
imul
push
cmpsl
loope
mov
pop
cltd
dec
cld
and
inc
hlt
jno
std
xchg
scas
mov
lods
insl
orl
sbbl
lock
push
insb
push
int3
pop
rcl
adc
push
lock
lret
dec
sub
xchg
inc
mov
enter
mov
inc
int
outsb
iret
cld
cltd
gs
out
daa
inc
jno
jne
jmp
push
cmpl
add
sar
jns
xchg
roll
rcrl
sbb
lret
jp
ds
adc
dec
nop
inc
repnz
loop
orb
idivb
lret
mov
sbb
pop
jno
inc
shll
cmp
push
pop
mov
inc
mov
gs
mov
iret
rorb
sbb
ljmp
inc
xor
pop
xor
pop
and
xchg
inc
lret
xchg
pop
jo
aas
loopne
cld
data16
fcmovnu
push
mov
sahf
cltd
jp
dec
add
and
jecxz
push
stc
mov
and
add
pop
add
add
out
mov
xlat
testb
insl
andb
pop
cld
popa
icebp
mov
leave
repz
or
loope
sub
xchg
es
push
leave
xor
push
shrl
iret
xchg
sbb
jge
shr
andl
stc
jp
pop
xchg
mov
bound
arpl
jl
jle
rolb
mov
push
cld
add
mov
adc
es
pusha
sbb
inc
in
scas
pop
aas
out
xor
shl
push
rcrl
aas
inc
in
cmp
xchg
pushl
push
lods
and
pop
jl
inc
repz
into
and
sbb
popf
aad
into
jb
and
fmul
push
out
dec
jp
pushf
xchg
sbb
adc
xchg
xchg
je
cld
push
mov
push
sahf
sub
stos
push
mov
rcrb
je
xlat
orb
test
lret
shl
cmp
jg
jp
lret
add
add
xchg
ficomps
cmp
test
sub
add
add
add
adc
mov
cmpsb
adc
and
push
fidivrs
pop
mov
mul
fldt
mov
insb
std
pop
sbb
and
mov
jbe
int3
jae
andb
sub
gs
ds
das
push
xchg
jmp
pop
sbb
add
pop
cmp
push
ffree
xchg
repz
in
lods
fst
ret
jp
mov
int3
cmp
out
cltd
ror
nop
imul
xor
jmp
cmpsl
aad
data16
aam
adc
mov
loopne
inc
mov
add
push
scas
or
lods
jae
imul
int
je
out
sbb
push
lcall
mov
xchg
mov
add
jl
popf
mov
ret
fcmovbe
imul
mov
scas
daa
ja
mov
adc
cld
popa
cmp
and
cli
mov
andb
dec
nop
sub
scas
or
arpl
ja
js,pn
or
sub
add
test
jne
lds
pandn
mov
and
dec
leave
inc
xlat
and
loop
push
xchg
in
cmp
imul
sub
mov
mov
fadds
stos
and
xchg
inc
and
pop
aas
into
lods
sbb
mov
cwtl
loop
jns
mov
and
or
outsb
callw
test
pop
outsl
jmp
test
out
stc
jb
mov
dec
push
shrb
cld
pop
lret
roll
shl
aam
aam
xchg
add
ja
push
mov
sub
call
fcmovne
sbb
sub
mov
adc
dec
hlt
push
fucomp
sub
ficomps
pusha
hlt
sti
sahf
and
shr
lods
stos
hlt
insl
push
cwtl
push
add
inc
pop
push
push
popa
jbe
rcrb
xor
stc
addr16
jns
dec
add
lret
mov
sub
test
js
add
pop
add
add
mov
aad
fs
sub
xchg
adc
lcall
adc
sbb
scas
imul
cmc
and
pop
inc
test
dec
inc
pop
jne
aad
clc
pushf
faddl
iret
pop
es
sti
rclb
mov
add
ffree
dec
out
pop
jb
adc
imul
stos
push
xchg
cmc
ret
repz
imul
jmp
sbb
mov
sbb
xor
vprotq
xor
into
pop
sub
mov
negb
xchg
sub
add
lods
xchg
adc
daa
and
push
call
lcall
nop
cmp
sub
ret
mov
xor
xchg
push
cwtl
ret
sti
xor
cltd
fisttps
adc
mov
inc
lds
mov
call
in
mov
inc
pop
or
je
in
push
shlb
push
sub
add
add
sti
pop
jge
divb
mov
add
pop
add
add
stos
push
sti
add
mov
fimull
imul
out
aaa
push
and
ret
inc
mov
xor
inc
popf
test
xchg
scas
test
daa
mov
call
xor
lods
lret
in
mov
out
rorl
xchg
or
hlt
movsb
subb
icebp
add
xchg
scas
sbb
int3
pop
iret
add
sbb
and
add
push
mull
loopne
dec
dec
pop
aas
pop
push
and
lret
addr16
arpl
push
cltd
pop
inc
in
fadds
out
icebp
push
bound
and
cmp
adc
xchg
mov
push
xor
scas
out
pop
ljmp
cmp
imul
xor
pop
sbb
or
jbe
and
rcrl
mov
mov
sub
int
sub
jmp
test
lods
dec
test
mul
in
add
fsub
std
in
popf
dec
int
hlt
mov
add
add
add
inc
iret
stc
mov
arpl
ficoms
pop
inc
int3
sbb
and
int3
cmp
icebp
mov
or
dec
push
push
aas
pop
inc
cmp
aas
jle
mov
add
scas
sub
add
icebp
pushf
cld
jns
pop
push
int3
movsl
and
push
mov
in
mov
dec
push
or
repz
dec
push
daa
lods
xchg
iret
sti
inc
push
xchg
adc
aad
sbb
xchg
rclb
push
lock
or
xchg
outsb
and
xchg
pop
outsb
adc
out
xor
in
pop
pop
sahf
xchg
test
inc
adc
mov
or
testl
sbb
add
mov
test
lret
jg
mov
into
cmpsb
int
inc
test
sub
push
mov
jbe
sbb
xchg
adcb
mov
push
add
add
jp
jnp
sti
xchg
jle
imul
lea
add
pop
add
add
cs
fists
int
adc
mov
out
and
mov
shlb
mov
nop
or
cmpsl
arpl
loopne
sub
and
orl
mov
jne
subl
nopl
pop
repnz
aam
pushf
cmpsb
or
xchg
dec
fsts
inc
add
xor
rolb
cmp
sahf
in
out
sbb
jmp
inc
jmp
inc
dec
mov
fdivs
mov
xchg
es
jb
add
dec
push
cmp
movsb
jne
movsl
xor
lods
fsubrs
dec
jne
xor
pop
mov
mov
jb
xchg
sbb
test
push
add
xor
mov
fisttps
sbb
or
sub
aas
frstor
mov
or
adc
loop
cmpsb
loopne,pn
filds
movb
das
mov
adc
gs
out
aam
lahf
sbb
pop
aad
int3
inc
inc
ret
adc
add
push
sti
das
ret
lods
daa
jle
mov
add
shlb
jge
cmp
out
and
sti
roll
sub
push
ffree
mov
push
stos
push
push
adc
lcall
mov
sbb
int3
mov
inc
fdivrl
fistpll
loopne
xchg
adc
xor
push
lods
cmpsl
xchg
cmpsl
xchg
push
ret
call
push
jnp
lods
adc
ljmp
mov
mov
pop
inc
push
pop
mov
lock
pop
cmp
xchg
adc
fs
nop
xchg
pop
mov
loop
fwait
mov
mov
push
cli
js
add
je
test
inc
inc
mov
cmp
test
jg
bswap
xlat
bound
xor
push
add
enter
lcall
repnz
insl
xlat
cmp
mov
test
popf
or
ficompl
rcl
fadd
push
cmp
mov
call
cld
leave
out
outsb
cmp
sbb
repnz
mov
add
cmp
sti
aad
loopne
sbb
add
pop
add
add
mov
aad
pop
mov
pop
jbe
jnp
shlb
imul
or
inc
and
push
cltd
insl
insb
cltd
xor
std
mov
outsl
mov
jnp
push
push
andl
mov
add
dec
sarl
ficomps
xor
stos
pop
dec
es
cs
sti
ret
xor
cli
mov
sarb
sub
inc
or
cmp
mov
lock
ds
stc
imul
mov
dec
push
mov
adc
jge
xchg
mov
hlt
cltd
adc
cltd
test
add
ror
or
xor
lods
data16
push
push
jns
insb
outsb
push
ss
cmp
lcall
mov
pop
sub
lods
push
and
push
call
jp
loop
movsb
xchg
stc
push
jne
mov
jecxz
xor
sub
mov
lods
sldt
add
add
cmp
jge
stos
sbb
xchg
adc
xor
add
add
add
push
movd
mov
or
add
xchg
popf
cltd
adc
js
fisttpl
dec
pop
fcoml
popf
dec
inc
add
int3
inc
rol
in
pop
push
stos
cmp
out
cltd
mov
inc
std
pushf
movb
inc
adc
data16
xor
inc
lret
pop
test
packuswb
dec
sbb
repz
push
pop
mov
lret
push
popf
in
lret
sbb
cmp
repnz
xchg
stos
mov
jl
jle
push
or
push
add
in
in
mov
mov
into
lret
mov
cld
or
in
incb
shrb
sbb
fidivrl
clc
or
pop
inc
dec
neg
repnz
mov
sbb
cltd
pop
lods
jno
int3
rol
or
dec
jnp
aam
inc
xchg
out
mov
xor
clc
mov
push
call
xor
fs
sbb
pushf
dec
mov
divb
rclb
fwait
aad
add
clc
test
add
add
mov
push
xlat
leave
mov
xchg
aad
sbb
jno
adc
mov
fnclex
sar
insb
jno
loope
pusha
sarb
in
out
enter
xlat
sub
addr16
in
mov
sbb
in
sbb
out
scas
push
int3
cld
in
loope
stos
test
push
lcall
cmpl
pop
and
ret
adc
mov
cwtl
lret
clc
lods
or
popa
imul
dec
fldl
dec
gs
xchg
xlat
fnstenv
sbb
incb
out
cli
dec
xlat
imul
push
mov
scas
shr
shll
mov
add
notb
push
inc
cmp
cmp
popf
dec
pop
ret
mov
pop
dec
cmp
inc
dec
rep
ljmp
xchg
cmp
mov
mov
push
adc
xchg
jl
jl
dec
jbe
idivl
mov
sub
add
add
lcall
jmp
pusha
fs
loope
mov
inc
loop
ss
xor
clc
sbb
stos
and
xor
push
rorl
mov
faddl
inc
sbb
andl
jns
or
repnz
jle
fmul
stos
dec
and
daa
ds
push
inc
xor
sbb
push
xor
fidivrs
push
pusha
mov
add
repnz
push
mov
dec
mov
inc
jb
add
in
test
int
pusha
adc
cld
mov
lret
xchg
cmp
cmp
add
loope
and
into
aaa
sahf
popf
jecxz
sub
xor
push
mov
pop
shlb
lods
fwait
xchg
mov
roll
pop
repnz
push
cmp
or
dec
inc
lret
mov
mov
incb
push
ljmp
xor
movsl
push
hlt
sub
jmp
push
enter
jecxz
scas
orl
and
outsb
sub
stos
fs
push
pop
or
cmp
dec
addr16
add
pop
add
add
pop
mov
mov
aaa
mov
in
popf
fsubrs
and
cmp
inc
aas
cli
xchg
pop
loopw
jecxz
push
daa
pop
cmovs
in
xchg
or
sbb
and
mov
imul
inc
outsb
scas
std
test
frstor
xrelease
insl
unpcklps
aam
ds
jo,pn
adc
rclb
js
pusha
push
push
scas
lahf
push
lret
cmpsw
dec
inc
cld
scas
in
jno
mov
add
stc
int
fwait
rcr
mov
push
mov
dec
adc
dec
jmp
mov
inc
jo
rcrl
insl
mov
mov
jne
ja
or
xchg
fistpll
pop
push
jge
dec
mov
stos
aam
jnp
clc
xchg
push
into
ret
add
daa
or
push
nop
jne
sub
jp
fs
inc
mov
pop
mov
push
xorps
sub
mov
ljmp
add
insb
pop
pushf
scas
fistpll
inc
ljmp
add
pop
add
add
mov
js
stc
into
lahf
mov
push
sub
sub
adc
pusha
mov
pusha
mov
pop
int
inc
jae
cmp
js
out
xor
inc
cmpsl
adc
pop
adc
lret
les
fistpl
cmpsb
sbb
popa
sub
xor
jns
fstpt
push
mov
scas
sub
mov
jno
lahf
lock
fisubs
cmc
dec
movsb
mov
mov
inc
inc
adc
sbb
ja
inc
add
push
or
lret
lahf
or
jg
sbb
subl
add
adc
push
pop
sub
movsl
xchg
dec
cli
jecxz
fidivrs
cmc
push
fimull
test
mov
cmc
int3
std
mov
jae
pop
add
or
enter
mov
sub
fildl
adcl
dec
sub
inc
dec
pop
cmp
pop
xchg
and
inc
cmp
add
add
cmp
out
lahf
push
pop
jecxz
sub
add
add
add
sbb
push
jmp
add
lock
mov
je
lret
inc
adc
shr
cmp
adc
loopne
cld
subb
loopne
jmp
push
jecxz
cmp
xchg
jbe
repz
mov
cmpsb
lret
adc
mov
xchg
scas
shrb
je
push
addb
int3
jp
and
test
js
sub
push
imul
mov
push
loope
cmpsb
loope
sarb
or
mov
ret
pop
aas
sbbb
pushl
add
xchg
cmc
iret
jno
jle
popf
fwait
insl
dec
repnz
mov
push
and
inc
imul
int
fcmovnbe
inc
movsb
xchg
pop
test
pop
cmpsl
push
je
lcall
sub
inc
inc
xor
stos
mulb
outsl
dec
aam
jbe
shll
test
das
adc
shrd
push
shl
ffreep
cmc
cs
xchg
cld
add
adc
dec
ja
aas
popa
daa
addr16
int3
cmp
add
add
add
pop
mov
hlt
add
rcr
mov
push
adc
cld
adc
jbe
insb
movsl
jnp
push
dec
out
jns
mov
sub
adc
xorb
adc
je
lock
int3
dec
mov
sahf
push
jb
cmp
inc
clc
push
sarl
push
cmp
fucom
xor
sub
nop
lea
fnsave
jp
or
jne
add
mov
sub
cmp
sub
mov
or
inc
jge
mov
add
nop
and
sahf
push
insl
jmp
icebp
sbb
push
sahf
lahf
rorb
fistpl
aad
popf
sbb
xchg
sub
push
clc
into
aas
std
loop
ret
and
sub
aaa
push
mov
pop
gs
xor
sahf
fiadds
adc
sbb
add
ficoms
add
repz
cmp
lods
repz
jbe
inc
sarl
add
pop
add
add
sub
dec
jle
cmpsb
jp
xor
xor
ret
sub
add
pop
je
xchg
sbb
mov
addr16
sbb
repnz
push
cmpsl
aam
mov
sbb
mov
andl
push
icebp
lret
pop
jl
xchg
mov
sbb
mov
fucomi
shlb
xchg
fdiv
mov
mov
mov
cmpl
pusha
arpl
aad
and
xor
faddp
fbstp
stos
test
out
dec
xor
cmp
cmp
mov
lods
into
jnp
imul
insb
jbe
jle
orb
xor
outsl
lcall
popa
stc
and
es
pop
jno
aas
fildl
scas
jbe
cmp
aam
and
cwtl
ficoml
xor
fs
mov
and
jecxz
push
subl
xlat
das
jl
incl
aas
daa
push
cld
push
std
jmp
pop
adc
xor
fidivrl
add
add
add
jecxz
jne
cld
push
aad
hlt
cmp
push
movsl
push
jle,pn
adc
in
clc
sub
imul
sub
push
iret
xor
mov
lcall
jbe
adc
jecxz
aas
jno
cltd
cmp
jno
addr16
cli
cmpsb
mov
xor
outsl
popa
aad
mov
mov
jne
mov
jo
outsl
push
test
std
jnp
pusha
popa
and
pushf
mov
scas
imul
ljmp
test
out
rcrl
add
fbld
leave
or
arpl
movsb
jmp
jnp
inc
cmpsb
test
int3
or
sarb
fidivl
scas
js
add
inc
mov
test
mov
lret
or
std
push
dec
sbb
fiaddl
xchg
imul
les
adc
mov
int
sub
scas
inc
mov
add
pop
out
cmp
add
fwait
push
fnstsw
add
add
add
sbb
dec
push
out
jge
jno
lret
cmp
add
dec
jo
lret
adc
xchg
rolb
add
add
test
jmp
xchg
push
fwait
fistpll
push
out
xlat
adc
and
push
adc
dec
adc
cmp
pop
cld
push
repz
cmp
imul
loope
mov
out
xor
sbb
cmp
lock
dec
add
mov
fidivl
push
and
ret
aad
pop
inc
push
mov
repnz
bound
mov
jp
mov
sub
fiadds
fmuls
dec
xchg
ss
lods
jp
push
jge
cmp
daa
hlt
aam
cmp
lds
adc
and
out
sbb
jno
pop
scas
push
adc
lahf
mov
push
fsts
mov
jle
lods
mov
mov
ss
push
repnz
jne
fdivs
je
in
lods
xchg
fcompl
xchg
xchg
mov
andl
sub
push
add
stos
add
push
mov
mov
inc
mov
pop
add
add
xor
aad
movsl
or
sbbb
adc
xchg
fwait
loop
xchg
xchg
ret
or
out
enter
or
sbb
adc
decl
clc
dec
js
push
repz
sbb
xchg
pushf
sbb
pop
push
fisubl
dec
push
xchg
scas
pop
cmp
cmp
and
and
test
push
repz
add
jmp
outsb
sbb
push
sbb
cmp
push
add
mov
pop
insb
scas
int
dec
rorb
rcrl
mov
cmp
pop
push
and
jg
cmp
mov
aaa
in
das
add
arpl
aam
hlt
clc
push
xchg
sub
test
cmp
insl
mov
cmp
sub
mov
add
cs
call
mov
mov
in
cld
cmp
loope
inc
clc
dec
adc
lods
cmp
fwait
scas
xor
add
mov
ja
jg
xchg
cmp
mov
xchg
out
aas
add
pop
add
add
mov
sub
das
punpcklbw
out
in
jnp
leave
pop
test
repz
pusha
lods
movsb
jge
sub
or
je
xor
pop
and
fisubrl
jle
push
rcrb
in
je
nop
sbb
jnp
push
lret
inc
adc
and
push
imul
in
nop
add
push
pop
pop
out
mov
mov
cmpsl
jp
ret
imul
jno
dec
orb
and
jno
out
cmp
into
mov
ret
jle
cmp
cmpsl
in
ljmp
or
daa
dec
shlb
sbb
daa
aas
mov
or
adc
in
fwait
lahf
xor
adc
imul
leave
mov
sub
ret
loopne
outsl
mov
fdivrl
imul
hlt
xor
icebp
dec
insl
lret
adc
cmp
mov
xchg
in
xchg
ficomps
insl
ss
sbb
and
dec
lret
jmp
imul
push
dec
mov
fdecstp
inc
add
pop
add
add
dec
stc
pusha
aad
inc
fmull
jae
or
aad
fistpl
pop
cmp
xchg
or
or
mov
jmp
iret
sbb
out
add
pop
sub
xchg
in
xor
lds
repz
xchg
dec
int3
popf
pop
jge
rcrl
adcb
repz
enter
repz
mov
fstpt
mov
jnp
xchg
cld
or
dec
pop
push
jo
xor
inc
jmp
xchg
pusha
cli
add
mov
popf
sub
pusha
or
mov
pop
into
stc
dec
pushf
out
add
ret
push
call
jb
shll
int3
inc
bound
mov
popf
sbb
jne
sbb
pop
imul
mov
jns
repnz
sti
aam
add
push
cmp
cltd
xor
scas
push
sbb
add
mov
das
mov
popa
or
inc
fs
xchg
inc
pop
sbb
add
cwtl
loope
std
jge
cwtl
xchg
fmul
mov
std
inc
add
pop
add
add
outsb
and
out
cmp
xor
dec
push
lock
out
add
pusha
stc
das
in
adc
inc
stos
sub
cwtl
in
stos
cmc
nop
inc
mov
pop
daa
mov
lcall
cmp
push
pop
mov
sub
mov
ret
sbb
mov
test
in
daa
cld
repnz
mov
les
enter
adc
das
sbb
test
push
pop
pop
test
or
mov
les
sub
jns
mov
mov
test
cld
or
fsubrl
xor
mov
divb
inc
pushf
stc
sub
xchg
in
out
scas
xchg
sub
aas
cld
jmp
adc
mov
lahf
inc
std
push
idivb
xor
jae
or
data16
clc
sub
cmp
in
jae
pop
xor
xchg
and
mov
adc
add
jns
imul
fld
ds
add
pop
add
add
pop
shll
jae
fwait
mov
int3
sub
js
pop
inc
jp
cli
and
inc
pop
iret
sbb
das
mov
jb
pushf
test
cmp
dec
pop
jmp
imul
dec
stc
and
inc
stc
push
mov
cmp
cmp
push
mov
jle
rclb
ret
and
insl
loopne
xchg
add
sub
add
push
int3
dec
js
aam
push
jb
rclb
mov
int3
scas
mov
sbbb
jge
loopne
sbb
mov
cmp
jmp
and
es
fs
adc
dec
add
in
push
outsb
repnz
gs
gs
in
inc
mov
mov
mov
cmp
adc
dec
out
call
jae
dec
adc
sahf
test
or
loopne
aaa
or
add
ret
jg
jmp
repnz
fwait
hlt
push
adc
inc
add
pop
add
add
cltd
fs
clc
jge
jb
sub
cmpsb
ret
xchg
popf
xor
fwait
cmp
adc
int3
das
pop
test
jbe
fsts
pop
je
hlt
hlt
mov
sub
filds
test
dec
mov
cmc
push
testb
pop
mov
jle
pop
popa
sub
icebp
dec
inc
fdivl
push
aas
sub
xor
sub
cmp
or
cmpsb
out
adc
push
push
or
js
xchg
ljmp
inc
or
subb
dec
lahf
std
xor
jmp
dec
scas
adc
mov
push
inc
cmp
cltd
out
add
sbb
push
fsubl
lret
mov
xchg
sbb
inc
mov
mov
adc
subb
sub
dec
cmpsb
ss
push
es
cld
xlat
jno
fnsave
cmp
or
and
cmp
dec
cli
mov
add
add
das
mov
and
fstps
aad
adc
add
add
add
testb
and
pop
xchg
leave
mov
int
push
xchg
and
cmp
pusha
arpl
in
fldt
js
push
ss
cmp
mov
test
cld
fisubrl
outsb
ret
push
xor
in
mov
xor
or
cltd
cli
lcall
pop
cmp
clc
jb
adc
gs
lahf
cmpsl
imul
xor
js
divb
dec
cltd
sbb
repnz
jmp
push
fdivrs
pop
popa
int
jmp
pop
clc
inc
add
and
or
hlt
incb
hlt
dec
jb
sbb
jle
notl
xor
lods
sti
je
lds
and
push
xor
cmp
inc
addr16
sbb
sbb
xchg
aas
movsl
popf
arpl
inc
and
mov
jmp
xor
dec
les
stos
mov
mov
loope
ret
add
hlt
gs
adc
ficoms
mov
inc
add
pop
add
add
adc
rorl
jbe
jnp
sbb
xchg
jb
aas
pop
xorl
jmp
mov
js
push
ficoml
cmp
adc
push
sarb
xchg
and
jo
mov
decl
jmp
sub
bound
cltd
stos
outsb
dec
mov
bound
mov
xchg
enter
add
add
ja
xchg
test
fdivs
and
cmp
inc
mov
add
dec
adc
jmp
sbb
hlt
inc
sbb
gs
jb
add
dec
pop
mov
dec
cmp
lock
or
loopne
sub
imul
pushf
fwait
push
pop
and
add
adc
idiv
mov
jg
mov
cld
cmp
enter
ret
fcomp
fstpl
add
aas
gs
mov
jne
aas
and
add
add
add
imul
mov
pop
insb
pop
mov
loopne
lret
mov
fisttpl
lods
movsl
ret
mov
pop
cltd
push
in
xchg
xor
je
loop
lods
lret
out
mov
addr16
sti
aaa
rcl
mov
adc
or
ds
xor
sbb
cmp
pop
dec
cmp
in
dec
popa
cld
sub
adc
inc
xor
popf
adc
mov
test
aas
clc
call
sub
jg
xor
insl
inc
imul
xor
repz
fiadds
push
pop
ss
sub
sub
test
pop
xchg
add
xchg
sub
outsb
clc
rol
lahf
push
in
pushf
cmpb
mov
mov
cltd
not
xchg
mov
add
xchg
arpl
pop
mov
and
orb
stos
sub
mov
out
fnstsw
outsl
mov
add
add
add
rol
ret
cmp
cmpsb
lcall
clc
inc
gs
imul
mov
test
ss
adc
mov
test
push
mov
push
jle
test
mov
rcl
aam
mov
jecxz
imulb
or
xlat
fs
mov
aaa
sti
mov
mov
daa
lock
add
or
jb
cmpsl
xor
call
mov
xchg
aad
adc
mov
xor
or
jl
loope
add
adc
add
mov
sbb
pop
in
mov
outsl
andb
dec
inc
int
into
pop
pop
repnz
pop
pop
outsl
int3
into
je
mov
cltd
and
cmp
dec
xchg
imul
push
jge
cltd
testb
int3
sti
add
cmp
outsl
js
pushf
lret
int3
push
push
leave
mov
add
mov
sub
cs
add
pop
add
add
icebp
outsl
mov
adc
lret
incb
ss
jns
jge
lret
and
nop
mov
xchg
cwtl
test
imul
jmp
pusha
out
dec
outsl
add
iret
loop
fisubl
ljmp
sbb
add
repnz
jnp
cmp
xchg
decl
pop
frstor
xor
pop
mov
mov
nop
repnz
in
and
lcall
ds
popa
add
xor
sbb
imul
lret
push
mov
sahf
inc
cmp
sub
ljmp
pop
and
push
aam
push
and
loop
sub
int
rorl
pop
jnp
out
xchg
dec
fistl
mov
sub
loopne
pop
dec
pop
jge
gs
xor
push
insl
test
fcmove
push
imul
cli
mov
rorl
mov
cmc
push
fildll
aas
les
add
jmp
out
aas
push
xor
xchg
mov
jno
dec
add
pop
add
add
pop
fucomip
dec
negl
mov
lret
fimuls
ljmp
aad
and
std
adcb
mov
pop
les
repz
inc
jecxz
adc
movl
adc
cmp
fsubl
leave
mov
lcall
faddp
push
push
jg
shrb
sub
leave
lds
add
aam
lcall
dec
outsb
mov
adc
add
cmp
adc
cmpb
ret
orb
adc
aas
ds
cmpsb
sub
outsl
push
scas
bndstx
lods
and
das
jae
adc
sbbb
xchg
movb
jmp
xchg
test
rorb
imul
arpl
push
sbb
ret
adc
fucomi
stos
push
stos
jb
push
xor
andb
inc
mov
mov
loop
mov
pop
xchg
dec
adc
add
cmp
imul
out
mov
xchg
mov
inc
push
dec
add
pop
add
add
sbb
jecxz
mov
in
adc
xor
outsb
sarb
outsl
xchg
in
xor
incb
dec
pop
sbb
loopne
hlt
aam
rcrb
scas
inc
cmp
jbe
popa
add
hlt
fwait
int
icebp
jmp
dec
mov
aam
sbb
mov
xchg
xchg
pop
xchg
lea
lret
xchg
jge
cmp
jnp
insb
jbe
cmp
and
and
subb
inc
pop
test
lock
nop
fcmovnu
mov
xor
push
int
adc
jne
adc
push
jle
cltd
cs
xor
nop
mov
out
sub
call
das
sbb
push
or
fwait
sub
cmp
imul
insl
loopne
push
cmpsl
pushf
push
aaa
pop
xlat
ljmp
sub
push
jmp
clc
pop
mov
mov
scas
ret
in
push
out
les
andb
rcrl
inc
ss
mov
inc
mov
add
add
dec
stc
mov
pop
sub
pop
cli
sub
pop
add
add
cmpsl
shrb
adc
jns
flds
sbb
out
idiv
adc
fsubr
mov
mov
and
sbbb
push
pop
push
enter
mov
jecxz
and
test
push
push
and
cmc
sarl
seta
sbb
sub
jmp
xchg
mov
mov
xchg
inc
mov
in
adc
sbb
into
int
and
outsl
push
arpl
mov
add
cmp
xchg
addr16
mov
je
data16
sti
inc
inc
or
fdivrs
cmp
sub
ret
bound
mov
ss
push
aas
hlt
in
std
pop
inc
cmp
aam
xor
mov
mov
loopne
in
push
inc
xchg
adc
jmp
ja
pop
mov
jbe
stc
addr16
sub
adc
movsb
cli
insl
add
inc
fcmovne
push
stos
add
jg
cld
dec
loope
sbb
add
pop
add
add
jp
jecxz
or
xor
mov
test
push
push
or
es
inc
jne
out
jle
gs
mov
jns
mov
je
fists
dec
mov
jb
lahf
cld
popa
aaa
lods
dec
push
rorl
cmp
inc
das
dec
push
int3
aam
insl
xor
daa
push
cmp
jecxz
cmpsb
and
and
mov
jne
ja
outsl
mov
imul
cmp
in
xchg
inc
pop
push
xchg
repnz
pop
sarl
cmp
cs
inc
insb
mov
adc
cwtl
jnp
popf
push
cmp
sub
fsubrl
xchg
push
dec
sub
add
adc
nop
ljmp
test
sbb
xchg
sub
add
mov
dec
xor
repnz
mov
sub
or
push
std
clc
stc
and
std
std
mov
out
ljmp
add
ret
icebp
add
sbb
dec
rcrb
add
xchg
mov
mov
push
movsb
push
dec
add
pop
add
add
int3
out
ds
lahf
cmpsl
and
push
arpl
or
adc
ja
pop
xchg
sbb
and
sub
jne
and
mov
std
loope
jns
rorl
test
cmpsl
aaa
pop
jecxz
mov
sbb
mov
lret
push
fists
daa
dec
cwtl
ja
aaa
inc
sub
xor
hlt
frstor
addr16
add
adc
inc
aad
sub
cmp
adc
addr16
pop
sbbl
imul
mov
jle
imul
out
add
loopne
popa
movsl
jg
and
or
aaa
int
push
loop
stos
mov
loopne
loope
call
jp
es
push
cwtl
jbe
orl
cmpsl
cmpsl
lea
outsl
ja
inc
adc
adc
cld
and
add
jp
mov
movsl
dec
mov
sti
fnstsw
add
inc
mov
push
push
jmp
mov
inc
sbb
add
pop
add
add
fdiv
roll
mov
or
mov
popa
add
int3
pusha
mov
and
sbb
fisubs
xchg
pop
inc
ljmp
lret
divl
gs
mov
shr
shll
sub
loopne
xchg
ficomps
loope
mov
xchg
fimuls
pushf
jb
inc
clc
imul
or
mov
jl
sub
outsl
insb
lods
sub
lds
push
stos
jle
aam
outsb
je
and
adc
mov
sub
mov
enter
test
fwait
out
outsb
jle
in
lods
not
aam
xorl
mov
mov
or
cwtl
rclb
sub
add
pop
ret
push
dec
adc
inc
mov
and
cwtl
loop
gs
decb
clc
or
pop
pop
mov
outsl
movsl
and
inc
jp
fnstcw
add
sub
cmp
cmc
push
adc
sub
add
add
add
loop
and
cmpsb
push
adc
das
or
lods
andl
imul
mov
pop
cmpsb
outsl
cmp
pop
or
dec
lds
push
xlat
xlat
jo
pop
iret
add
enter
xor
jns
lods
inc
pop
fldenv
mov
mov
cmp
scas
push
repnz
sub
adc
sarl
pop
mov
mov
loop
sahf
aam
or
inc
cld
mov
hlt
adc
jg
ds
fists
mov
iret
cmp
outsl
add
add
push
sti
xchg
pop
pop
jle
push
mov
lret
aaa
lret
out
sarl
sub
lret
xchg
mov
hlt
or
aad
adc
pusha
fnstenv
lods
cmp
lds
or
inc
nop
push
cmpsb
dec
and
inc
pop
xor
sub
cmp
jo
aaa
arpl
add
push
shll
out
je
pop
inc
adc
push
add
pop
add
add
cld
ret
outsb
add
mov
or
sbb
cwtl
imul
insb
sbb
daa
pop
cmp
dec
jbe
xchg
leave
push
add
ljmp
jecxz
out
add
or
sub
mull
jb
and
lahf
cmp
xor
cmp
pop
xchg
xchg
addr16
adc
clc
imul
repz
pop
ss
outsl
mov
dec
mov
pop
ljmp
pop
push
or
outsb
add
arpl
ja
fistpl
mov
imul
xchg
inc
mov
mov
xor
das
enter
inc
xlat
testb
movsb
jl
mov
lods
fwait
ss
jg
stos
lock
xor
pop
mov
cmp
mov
test
mov
cmovg
jo
pop
fistpll
test
pop
cmp
lods
dec
add
out
lcall
lock
sub
push
add
pop
add
add
xchg
xchg
adc
divb
mov
test
sbb
dec
mov
loop
add
imul
adc
aam
les
and
cltd
out
pop
into
iret
ds
jb
test
pop
adc
xchg
add
and
call
stos
cmp
mov
dec
arpl
sub
repz
jae
fldenv
push
pop
xchg
int3
and
mov
mov
lret
mov
xchg
dec
inc
outsb
leave
push
insl
pusha
clc
add
fisubrl
mov
not
aaa
xchg
sbb
mov
pop
pop
sbb
shll
add
lods
adc
mov
sub
xchg
adc
fnstenv
pop
sarl
out
fistps
lds
adc
xor
sub
mov
jecxz
and
sbb
mov
adc
inc
lahf
fwait
pop
jnp
push
jmp
ret
add
jbe
idiv
imul
ljmp
pop
add
add
jge
stc
push
jne
xlat
push
push
jl
stos
pop
pushf
je
mov
dec
mov
xchg
mov
mov
cmp
mov
fidivrl
inc
mov
mov
jge
lods
cmp
cmc
in
pushl
xor
mov
cmpsl
les
stos
das
xchg
xor
cmp
mov
into
fwait
sbb
mov
and
jle
jns
pop
pop
mov
es
xchg
ja
sub
fstpt
add
and
sub
imul
jge
loopne
pushf
into
mov
inc
popa
ja
xchg
xlat
je
xchg
cmpsb
xlat
outsl
fisubrl
aad
pusha
mov
cs
adc
pop
aaa
xor
insl
addb
sbb
lods
test
cmp
add
dec
jno
imul
and
sbb
pop
int3
fimull
jp
sbb
aam
sbb
add
fwait
cmp
xchg
xchg
dec
fiaddl
jnp
add
pop
add
add
jnp
cmp
xchg
jecxz
js
mov
roll
inc
jnp
mov
xchg
mov
xor
pop
out
adcb
dec
mov
jns
push
ret
mov
sub
add
mov
stos
jg
cmp
pusha
cmp
cmpsb
insb
adc
jno
fiaddl
xchg
mov
mov
into
push
out
sbb
push
sub
ds
adc
imul
fldcw
lret
je
mov
pushf
push
lea
mov
jnp
xor
mov
adc
mov
add
fldenv
fs
and
fs
jecxz
inc
jg
sarl
cmp
mov
and
out
adc
add
adc
repz
push
lret
ret
sub
inc
fmuls
xor
sub
repz
jbe
push
dec
dec
hlt
and
shl
pop
leave
add
dec
mov
add
clc
mov
mov
pop
fistpll
mull
adcb
pop
add
add
popa
cld
xor
and
xor
pop
xchg
xchg
cmpsl
inc
dec
mov
inc
aam
add
cmpb
jp
mov
xchg
cli
in
aam
loop
adc
out
adc
add
sbb
push
add
adcb
adc
mov
cmp
jb
or
xchg
fiadds
rcl
or
lods
insl
cmp
lds
and
lock
lods
imul
adc
ja
push
js
push
ja
aad
cmp
mov
cmp
pop
inc
mov
mov
mov
push
sahf
jp
ret
or
mov
dec
outsb
add
jne
adc
pop
xchg
mov
dec
push
and
push
jg
lea
cmpsl
mov
pop
div
pushf
xchg
mov
xchg
and
inc
std
rclb
dec
xchg
repz
xor
xor
outsl
sub
dec
xlat
sbb
test
scas
xchg
push
adc
out
mov
inc
pop
sbb
add
add
adc
mov
pop
enter
push
and
cs
lds
mov
sub
in
pop
scas
jmp
jns
scas
loop
jmp
test
pop
mov
popa
adc
or
push
add
mov
sbb
rcrb
mov
addr16
jl
xor
loopne
fldcw
sbb
out
shrb
mov
and
jnp
push
icebp
lcall
push
push
lea
mov
shr
pop
xchg
pop
dec
pop
adc
pop
and
ficompl
mov
jp
sbb
and
test
mov
daa
test
sub
inc
je
aas
mov
lcall
xor
stos
xchg
daa
jno
and
xor
mov
mov
mov
std
movsb
mov
xor
add
mov
btc
mov
nop
push
add
pop
add
add
push
leave
mov
adc
xchg
lahf
add
push
mov
lret
xor
and
sbb
shll
arpl
sub
pop
lods
xor
lds
pop
adc
in
enter
jne
lock
xor
loope
xchg
dec
mov
addr16
mov
push
popf
jle
mov
lock
pop
fstl
dec
imul
ret
mov
fucomp
jne
clc
push
mov
lods
xor
jbe
jp
dec
fs
mov
ficompl
cmp
icebp
call
mov
cmp
insl
xchg
pop
flds
mov
pop
movsl
bound
jle
mov
cltd
lods
push
clc
dec
fsubrs
ret
in
loope
push
aam
jle
aaa
mov
cwtl
inc
nop
xchg
hlt
fmuls
push
mov
call
adc
xchg
arpl
gs
push
cmp
call
pushf
add
mov
sub
in
in
out
pop
add
pop
add
add
pop
sub
in
dec
mov
lret
add
aas
and
insl
repz
rcl
pop
fisttpl
cmp
sub
int
loope
or
sbb
das
aad
lods
inc
dec
and
leave
adc
ljmp
push
add
cli
icebp
lahf
gs
mov
out
aam
add
mov
push
pop
inc
push
mov
test
sbb
aad
cmc
push
jp
mov
jge
push
aam
mov
push
xor
xor
pushf
ja
fwait
inc
mov
cmp
xor
lods
adc
add
inc
pop
adc
mov
inc
inc
xchg
icebp
and
mov
fwait
mov
push
inc
hlt
int
lcall
mov
popa
and
std
xor
inc
mov
outsb
addr16
cs
lock
mov
push
fcompl
ljmp
test
pop
mov
clc
mov
add
push
jl
fsubl
mov
jne
ret
push
stc
sahf
pop
add
pop
add
add
jb
adc
mov
jp
push
mov
aaa
insl
ds
cmp
pop
jne
call
mov
jle
aas
loopw
jae
gs
out
out
dec
pop
movswl
or
idivl
sbb
jne
adc
in
jno
dec
push
push
cmp
inc
inc
rclb
negb
imul
pop
cwtl
std
xchg
sbb
ljmp
daa
out
pushf
sbb
and
and
inc
cmpsl
mov
flds
mov
lods
bnd
imul
and
stc
aam
inc
pop
out
js
fsubl
mov
test
ljmp
mov
repnz
jns
adc
or
leave
and
ret
ss
cmp
icebp
xor
jno
lret
mov
xchg
test
stos
pop
aaa
fldcw
fisubrl
mov
popl
jne
sahf
mov
fbstp
scas
adc
lahf
std
test
cli
rep
pop
add
pop
add
add
mov
popf
dec
fiadds
adc
call
or
out
pop
cmp
in
inc
std
sbb
cmp
jae
jns
xchg
push
mov
repnz
mov
cmpsb
lahf
jo
or
push
adc
fdivrl
xchg
insw
mov
in
adc
arpl
inc
imul
dec
xchg
imul
adc
and
das
mov
in
pop
les
adc
sbb
cltd
jae
cmp
add
pop
mov
xor
sbb
push
pop
xlat
lcall
xchg
outsb
in
pusha
stos
rcrl
adc
push
faddl
mov
jb
cld
lret
cmp
or
aad
ja
push
cmp
inc
push
addr16
cmp
sbbl
or
les
icebp
or
daa
pop
inc
scas
and
dec
push
sub
inc
loope
rcrl
add
mov
pop
stc
and
pop
add
pop
add
add
sub
mov
pop
fwait
clc
jb
int3
movsl
lea
dec
mov
and
push
jecxz
jecxz
imul
faddl
insl
dec
add
aas
addb
movsl
push
mov
pop
hlt
xchg
sbb
xlat
fsts
fldcw
sbb
sub
scas
lods
leave
scas
pop
add
mov
and
scas
xlat
xor
adcb
cmp
test
mov
mov
push
into
mov
mov
pop
fcoms
std
and
adc
adc
mov
pusha
jo
das
fs
mov
mov
inc
inc
add
push
pop
cmp
out
scas
ficompl
sti
nop
adc
mov
mov
iret
das
lds
sti
std
push
mov
gs
lea
inc
sbb
insl
and
mov
lock
mov
idivl
inc
stc
sbb
aas
ficoms
test
dec
sub
pusha
mov
mov
inc
mov
add
push
into
push
mov
xor
add
pop
add
add
and
push
xor
clc
mov
jnp
fsubrl
in
cmp
mov
out
insb
xor
adc
gs
sub
push
inc
adc
push
jb
inc
add
jmp
jmp
mov
mov
mov
xor
popf
dec
lret
jmp
and
pop
lock
fistl
push
jnp
clc
mov
xor
sub
lods
mov
adc
icebp
inc
hlt
mov
ss
or
inc
mov
aam
xor
stos
inc
dec
inc
test
test
lods
mov
or
fmuls
mov
mov
orb
jl
pop
lock
xor
pop
and
fsubl
out
clc
fisubl
lahf
inc
mov
sahf
and
adc
jne
lret
sub
scas
sbb
dec
in
das
mov
stc
mov
dec
fs
and
mov
sub
xor
sti
mov
add
add
pop
aad
cmp
pushl
mov
test
loope
dec
adc
ficompl
xor
repz
push
into
xor
popf
sub
or
sbb
rorb
cmpsb
jb
sub
dec
mov
inc
arpl
mov
xor
aas
mov
iret
repz
inc
leave
int
sbb
mov
pop
call
jbe
mov
adc
sbb
jl
mov
or
mov
push
leave
icebp
mov
cmc
aad
fs
addr16
mov
inc
movsl
mov
movsl
das
out
push
cwtd
mov
cli
or
pop
adc
iret
push
mov
mov
or
addl
mov
cld
xorl
dec
mov
in
sarl
mov
data16
cmpb
movsb
rcll
outsl
sub
xor
inc
iret
js
lahf
pop
fcmovb
fcmovnb
lahf
pop
lret
inc
and
aas
rcrl
pop
add
add
outsb
stc
imull
pop
pop
mov
mov
fwait
popa
and
loop
mov
je
push
adc
dec
movsb
mov
cmp
dec
fiaddl
fwait
ds
add
mov
fldl
pop
outsb
pop
repz
pop
lret
ds
mov
ret
xor
out
jge
push
mov
int
jo
pop
test
mov
push
jbe
jp
xor
shrl
jno
jnp
ja
fsubl
mov
jmp
movsl
dec
inc
jo
or
int3
jg
and
push
sub
adc
push
loope
roll
fisubs
mov
shrb
jo
jae
jle
lds
movsl
pop
xchg
push
mov
call
inc
sar
and
xchg
mov
xchg
in
out
ds
loopne
jbe
lods
sub
add
idiv
jg
pop
and
sahf
or
add
add
add
in
pop
nop
jg
scas
mov
or
pusha
cld
xor
xor
std
fcoml
xchg
push
mov
jnp
push
xchg
or
test
scas
push
dec
rcrb
movsl
aas
gs
neg
add
xlat
clc
cltd
push
mov
jnp
arpl
es
in
xchg
pop
add
mov
popa
jb
cmp
popa
test
loop
imul
lds
sub
inc
adc
push
test
dec
pop
in
into
ret
cmp
add
test
adc
les
adc
xor
and
jno
dec
cltd
or
jge
mov
ds
bts
test
scas
jge
mov
out
insb
pop
sbb
jne
fistl
negl
xor
mov
sti
iret
mov
push
jmp
fisubl
cmp
or
sarl
shll
int
xchg
lret
mov
shrb
sbb
hlt
rorb
add
pop
mov
mov
push
sub
pop
add
add
xor
std
inc
mov
push
xor
push
sbb
push
scas
jge
adc
sub
popa
xchg
ja
insb
in
pop
rol
jne
mov
dec
mov
push
cmp
cmp
in
ret
lret
mov
push
outsl
jne
dec
mov
fmuls
cmc
popa
lea
les
out
mov
sub
jno
dec
inc
enter
pushf
pop
jmp
mov
sub
mov
out
or
dec
sbb
fisttpll
bound
and
dec
cmp
cltd
sub
mov
push
loopne
mov
jmp
mov
inc
test
jns
xchg
pop
or
cmpsl
mov
add
hlt
das
add
scas
sub
push
lods
mov
mov
xor
imul
mov
jle
adc
mov
push
pop
xchg
int
add
repnz
movsb
jle
stc
test
popa
out
insb
popa
add
pop
add
add
mov
lea
push
test
hlt
sub
ja
cmc
mulb
xor
ja
out
adc
adcb
xchg
movsl
xchg
sub
jle
imul
pop
popa
stc
cmp
mov
ljmp
fsts
pop
add
lahf
jnp
int
or
add
mov
push
cmpsb
sbb
out
shll
dec
sahf
enter
cltd
push
inc
cltd
shrb
adc
cmp
xchg
call
pop
mov
xor
and
dec
ds
push
out
aad
ret
adc
dec
call
sahf
mov
in
or
and
loopne
jp
ljmp
inc
das
test
insw
push
or
jg
mov
in
or
cmp
hlt
inc
mov
sub
bound
dec
push
mov
pop
xchg
divb
xor
jle
daa
xchg
sub
jle
cmp
and
repnz
push
cltd
lret
add
jmp
sub
or
add
frstor
add
add
add
test
iret
mov
in
inc
insb
ja
in
daa
adc
jne
add
popa
lds
push
xchg
add
dec
add
or
inc
push
mov
pop
aad
ljmp
and
negl
ja
loope
fdivrs
xchg
add
xor
dec
cmp
cs
rcll
jecxz
pop
jmp
xchg
sub
mov
push
int3
jo
sub
rorb
pop
insb
insb
fists
and
fs
inc
int
nop
pushf
pusha
adc
push
rcrl
dec
xchg
loop
inc
mov
push
test
adc
hlt
dec
adc
pop
add
repnz
scas
and
push
xor
or
mov
mov
mov
add
dec
data16
or
add
and
mov
xor
out
fsubr
xchg
xor
lcall
cmp
adc
add
mov
fnstenv
or
sub
in
add
pop
add
add
jp
jno
cmpsl
mov
addr16
sbb
jge
addl
add
sub
pop
or
ffree
das
xchg
dec
jp
jmp
push
pop
gs
sahf
mov
ds
jl
sbb
hlt
xor
or
push
cmp
xchg
jbe
aam
into
data16
rcrl
mov
or
cli
loopne
cmpsl
xor
cmpsb
ljmp
push
mov
mov
add
out
mov
aam
mov
add
movsb
dec
mov
lahf
inc
and
sahf
jle
jns
cmp
mov
call
scas
jecxz
jo
das
add
test
mov
sbb
or
dec
je
mov
jge
sbb
mov
ret
xor
sub
dec
jae
sbb
ss
or
sbb
rcrb
sub
inc
movsl
cwtl
add
cld
je
jbe
decl
rcll
add
pop
add
add
les
fwait
pop
lods
lcall
and
in
out
xor
pop
aad
test
jge
fiaddl
gs
pushf
inc
xchg
call
cmp
lods
xor
cmp
into
push
pop
iret
cmp
movsl
es
push
fisubs
add
movb
rcl
inc
and
dec
leave
scas
xchg
lcall
insl
dec
std
rorb
xor
hlt
pushf
mov
aas
xchg
xor
and
xor
lock
adc
push
out
cltd
clc
outsl
and
push
pop
mov
fucomi
dec
aam
ljmp
lock
sahf
mov
jl
xchg
fstl
repnz
inc
leave
movsb
out
jge
inc
jae
sti
cmp
push
cmp
dec
popa
sahf
out
aad
adc
add
or
sbbl
xchg
movsb
dec
xor
scas
sub
push
jmp
lea
icebp
lods
pop
enter
or
push
cltd
jmp
fcmovnu
sahf
testl
pop
add
add
lds
xchg
repnz
xchg
and
xlat
lahf
and
outsl
in
mov
fnstsw
add
fcoms
out
addb
xor
jo
mov
pop
nop
mov
ss
rcll
insb
and
jns
inc
dec
imul
loope
orl
fs
lahf
mov
cmc
jle
or
mov
xor
dec
js
and
sub
or
shrb
sahf
pop
sbb
arpl
dec
pushf
loop
push
pop
or
repz
xlat
push
inc
fcomps
cli
dec
loop
mov
fs
ret
in
pop
cmpsb
xchg
pop
das
adc
dec
sbb
mov
xlat
fildl
clc
out
lahf
cmp
adc
adc
sub
dec
es
mov
xchg
and
leave
mov
loop
xchg
out
fisttps
scas
into
mov
scas
xor
push
popa
push
add
push
jg
shll
stc
add
pop
add
add
sahf
inc
outsb
xor
xchg
loop
out
hlt
insb
pop
stos
lcall
mov
movsb
jg
and
int3
fucom
hlt
push
mov
ror
fisubrl
push
rcll
fstl
xchg
sub
dec
xor
inc
jae
fcmovu
jnp
jmp
inc
and
xor
mov
shrb
nopl
sbbb
sbb
lret
call
mov
sub
mov
clc
push
rorl
xchg
and
loop
outsb
pop
enter
movsl
sub
xlat
cs
sbb
dec
mov
hlt
push
fldt
mov
adc
mov
mov
jp
sbb
dec
mov
gs
lods
push
incl
sbb
push
inc
xor
xchg
gs
test
adc
cltd
cli
push
pop
sbb
aam
loopne
fs
jmp
mov
cltd
cmp
add
cmp
sbb
jo
out
xor
add
mov
fucomip
lock
cmp
xchg
test
push
add
push
imul
adc
notl
aam
or
dec
cmpsl
outsl
sub
out
push
cld
aam
mov
sarl
popf
mov
aas
xchg
jge
test
loop
cwtl
and
ficoml
or
pop
lods
pop
ret
loop
xor
jb
test
out
xor
or
push
inc
jmp
push
adc
mov
js
xlat
push
pop
jb
sarl
shr
iret
mov
jp
fcompl
cld
sbb
mov
fucomp
mov
and
push
sahf
negl
xlat
pop
arpl
outsb
pop
pop
add
push
arpl
cmp
push
pop
in
jnp
cmp
mov
mov
add
dec
out
sbb
outsb
jg
jb
or
les
push
or
enter
subb
mov
pop
scas
imul
loopne
adc
cld
adc
jo
int
add
dec
out
iret
jmp
das
mov
cmp
imul
add
xchg
pop
sub
bound
mov
push
sarb
cli
pop
je
lods
cmp
xchg
mov
repnz
mov
scas
pop
loopne
pop
in
gs
stos
sar
ss
aaa
dec
and
addb
or
dec
mov
enter
jne
mov
mov
and
adc
fistpll
or
pushf
and
outsl
fdivrl
out
fidivrl
int
cs
in
pop
add
push
loopne
test
sub
dec
shlb
repnz
ljmp
popf
les
jae
and
mov
icebp
shlb
push
mov
pop
xor
out
roll
jp
jns
cmpl
cmpsl
ret
mov
pushf
cvttps2pi
sub
sahf
lds
fs
lock
and
mov
jae
roll
aad
fwait
nop
fstpl
shr
lods
jno
ss
aad
cmpsb
push
jnp
std
cmpsb
pop
or
lret
jno
push
push
push
add
add
add
xchg
fbld
cmp
vmovhlps
hlt
repz
je
xchg
ljmp
lods
and
mov
xchg
push
dec
mov
push
out
test
xchg
cmpsl
mov
push
out
jmp
or
sti
add
xor
scas
cwtl
xchg
sbb
mov
dec
add
mov
jno
lret
enter
lea
fildl
and
push
cmpl
xorl
imul
das
lahf
cwtl
loope
pop
loopne
sti
dec
sub
jbe
cmc
mov
xor
ljmp
mov
movsb
nop
adc
cmp
out
xor
filds
xor
dec
inc
sbb
cmp
test
sub
sbbb
cmpsl
adcb
pop
inc
rcrl
pop
mov
out
repz
shrb
dec
push
mov
adc
or
dec
je
pop
mov
negl
test
in
lods
imul
neg
std
fsubrs
adc
fs
adc
add
add
cmp
les
scas
inc
arpl
negb
xlat
mov
ficoml
sub
fldl
inc
jbe
or
loope
jl
adc
adc
jge
push
mov
xor
jno
push
gs
loope
loope
pushf
or
roll
stos
xor
dec
int3
shll
lods
aaa
int3
dec
mov
add
and
test
mov
and
bound
in
sub
mov
inc
inc
push
in
mov
ljmp
je
lock
in
push
mov
sbb
ds
inc
push
cmp
xchg
dec
cli
jmp
jnp
sub
inc
pusha
inc
inc
insl
cmp
mov
push
xor
loop
pop
jo
push
xor
pop
mov
inc
jle
mov
test
pop
lret
mov
add
xor
mov
lahf
sbb
push
subb
in
push
mov
ret
outsl
pop
sbb
add
pop
add
add
mov
fimuls
cmp
cmp
push
or
test
jb
into
rcr
roll
out
or
es
or
dec
ss
jns
cmc
mov
in
xor
es
add
or
cmp
add
bound
loopne
stos
mov
jne
adc
add
in
and
jb
test
mov
fwait
rcrl
scas
sbb
scas
mov
scas
imull
add
dec
jne
aam
and
mov
push
and
push
in
xor
and
mov
and
add
xor
lea
fcmovne
leave
push
jle
push
shlb
jp
cltd
lds
scas
dec
xchg
dec
sarl
push
cld
aad
ljmp
dec
pushf
mov
xorl
int
sub
xchg
xor
mov
sbb
pop
dec
adc
inc
add
ja
out
and
outsl
fmuls
sub
stos
and
add
add
add
mov
js
dec
xor
clc
jg
call
dec
leave
ret
fdiv
jmp
cmp
in
int
push
xorl
push
mov
add
xchg
mov
add
daa
lock
rep
fidivrl
in
jnp
mov
in
sbb
arpl
popf
sbb
icebp
pusha
ja
je
mov
popf
lock
inc
sub
rcrl
cmc
subl
dec
mov
aad
jmp
lcall
push
stc
in
adc
jno
and
sbb
jae
xchg
in
dec
dec
dec
repnz
loop
inc
clc
xchg
mov
cli
rol
xlat
push
push
loopne
xlat
gs
xor
jle
les
pop
inc
xchg
cwtl
lcall
shlb
mov
rolb
push
jmp
aaa
cmc
popa
stos
fxch
lds
cli
iret
dec
or
pop
xchg
out
bound
lret
into
cmc
mov
add
daa
sub
ja
aad
add
jns
or
outsb
add
pop
add
add
pusha
popl
jbe
aas
adc
inc
pop
adc
mov
arpl
mov
out
je
cmp
xchg
cmp
xchg
stc
pushf
rcrb
sbb
mov
pusha
mov
mov
mov
scas
mov
and
add
ds
pop
fmull
cmp
push
jp
xchg
lea
pop
int
dec
xchg
lahf
dec
cltd
loopne
xchg
pop
pop
mov
mov
adc
or
mov
push
data16
repz
jle
bound
stos
aaa
rcrb
or
push
pop
out
pushf
or
scas
mov
jmp
mov
mov
repz
jecxz
push
jecxz
xor
cmpsl
mov
into
sbb
dec
sti
out
xchg
or
pushf
dec
lcall
in
or
xchg
test
stos
data16
jmp
push
pop
loop
add
popf
xchg
pop
cmpsl
clc
cli
inc
add
jp
int3
mov
add
cmp
jnp
inc
cmp
fisttpll
xor
add
add
add
push
mov
sbb
mov
scas
js
std
sahf
xor
nop
push
dec
jp
mov
and
lret
fs
rcrl
mov
mov
mov
adcb
sbb
mov
pop
add
stc
adcb
mov
mov
pop
pop
aas
cmc
fldt
jmp
push
lea
cwtl
scas
lahf
adc
cmpsb
rolb
mov
popa
mov
cmpsb
xor
sub
dec
ljmp
movsl
je
push
sar
and
mov
ds
arpl
rolb
popf
pop
push
psrlw
adc
xchg
push
into
test
pushf
lods
insb
dec
test
xchg
pop
out
jne
test
and
insb
pop
rclb
dec
enter
sbb
outsl
push
mov
push
pop
dec
add
xchg
daa
icebp
imul
adcb
xchg
push
mov
cli
xchg
jle
rol
call
cmp
add
add
add
push
lret
lret
add
scas
lret
push
push
dec
scas
mov
fwait
jle
leave
push
or
decl
mov
jmp
dec
push
mov
clc
inc
pop
and
jg
inc
inc
data16
movsl
sub
das
sbb
jne
out
mov
gs
xor
mov
pop
fwait
mov
xchg
rorb
sub
and
pop
sbb
pop
idivl
fwait
lret
cltd
pop
int3
xor
jne
mov
cmp
imul
add
outsl
in
lcall
nop
mov
sbb
ds
addr16
mov
adcl
pop
mov
fidivrl
fcoml
nop
sub
push
sbb
inc
addr16
sbb
inc
adc
andb
dec
icebp
xchg
inc
and
cmp
lret
inc
es
sub
jns
fcoml
mov
faddl
add
fwait
jnp
aad
push
adc
popf
aas
jno
add
add
add
add
cli
subl
call
cmpsl
lods
jo
pop
or
cmp
lret
xchg
xchg
lds
js
das
es
inc
dec
dec
fsubp
stos
push
push
inc
mov
clc
fldt
push
inc
popl
xchg
or
push
popa
and
xor
dec
xchg
jnp
daa
es
cmp
mov
aas
lcall
ror
in
sbb
ljmp
adc
out
aam
mov
daa
sub
push
push
sbb
in
jbe
sbb
and
lcall
stc
lahf
or
clc
cwtl
dec
add
fildll
pop
iret
ja
or
scas
jle
jg
outsb
mov
ss
xor
mov
enter
dec
js
movsb
mov
shll
add
pop
jb
out
jg
and
mov
cmc
xchg
jno
sahf
cmp
xchg
sbbb
repnz
movsl
push
jmp
in
imul
pop
jecxz
mov
call
mov
std
mov
fucomip
push
test
add
add
add
xchg
xor
shll
pushf
cld
stc
jbe
dec
fiadds
addr16
cmc
jle
in
jnp
add
insl
pop
pushf
out
out
jo
xor
dec
adc
jnp
cmp
sbb
cld
sub
rorl
insb
push
add
jb
or
lcall
fwait
cmp
mov
in
movsl
popw
mov
sti
dec
sub
sbb
dec
adc
fldenv
jo
cmp
out
cli
fwait
xchg
lock
pop
dec
roll
sub
test
roll
mov
lcallw
cli
mov
fisubrs
in
sbb
inc
xchg
loopne
dec
xchg
and
stos
leave
imul
lods
xor
leave
aas
add
sbb
mov
push
xchg
lds
sti
cmp
mov
and
jbe
sub
add
add
fstl
mov
dec
jae
add
add
add
shll
xchg
scas
xchg
xchg
jp
cmpsb
or
xchg
mov
pop
movsb
push
adc
xor
into
or
and
lret
and
je
loopne
rcl
add
jl
sbb
mov
xchg
and
ficoms
lcall
adc
xchg
mov
and
test
hlt
data16
jl
and
icebp
leave
dec
pop
rolb
push
fs
sbb
mov
sbb
jbe
repz
push
add
jns
cmp
jl
fcoms
push
mov
pusha
push
cmc
bound
repnz
das
xchg
adc
or
test
mov
pop
subb
adc
adc
dec
loope
cmp
push
xlat
xor
dec
xor
xchg
xor
xchg
mov
jb
sub
and
jmp
test
js
inc
in
mov
mov
out
lahf
aaa
inc
or
je
add
add
add
xchg
aad
iret
mov
pusha
mov
jp
pop
mov
jmp
in
add
jb
js
dec
sub
cld
sbbb
mov
or
aam
mov
dec
jbe
mov
pop
add
fmuls
arpl
and
mov
inc
cld
dec
and
dec
xor
aad
jmp
in
pop
add
or
jo
or
ret
xchg
fmuls
pop
fstpl
push
das
lods
sub
jno
mov
jecxz
inc
repnz
or
lods
int3
dec
mov
adcl
xchg
inc
mov
mov
test
pushf
and
inc
divb
jb
popa
dec
mov
jl
shlb
nop
es
movsl
int3
ja
cmpsb
cmp
pushf
push
int
sub
mov
pcmpeqw
and
adc
loop
jne
and
or
cmp
test
cmpsb
push
fstpl
jg
jns
divl
dec
jno
orb
pop
jne
add
add
add
imul
lock
push
cmpsb
and
clc
cmp
adc
lea
jecxz
xchg
push
stos
push
add
imul
test
mov
inc
dec
pop
push
out
fmuls
mov
cmp
fisttpll
aas
mov
or
in
cltd
xchg
push
push
pop
test
into
into
sbb
mov
pop
sbb
jns
ret
dec
lar
int3
jge
cmp
jo
sub
in
into
inc
pop
cwtl
daa
arpl
pushf
in
mov
dec
pop
imul
mov
ret
pop
int3
cmp
divb
push
mov
xchg
ljmp
je
push
pop
xor
add
push
scas
in
or
mov
mov
je
out
mov
arpl
jl
rcrb
mov
jnp
lret
out
movsl
imul
popa
ficompl
add
fisubs
mov
xchg
inc
lock
lret
fsubs
add
pop
add
add
addr16
jb
iret
xor
dec
push
inc
mov
adc
xlat
sbb
jno
push
and
fnstenv
cld
insb
jmp
insl
nop
pusha
xor
pop
sahf
cltd
int3
push
outsb
sub
dec
es
sub
push
cmp
push
fidivl
mov
icebp
jbe
xchg
sub
mov
rorb
arpl
mov
jnp
mov
les
mov
inc
push
iret
sub
mov
jne
sub
movb
sub
pushw
fstpt
fistl
xchg
cli
pop
sbb
sub
dec
jecxz
test
ds
imull
movsb
adc
out
arpl
push
inc
or
mov
cmp
ljmp
mov
mov
aad
push
push
divps
pop
outsb
bound
cmp
lea
sbb
fdiv
addb
mov
outsl
lea
jg
cmp
pop
xlat
into
xchg
imul
shlb
mov
ss
add
ja
add
add
add
sbb
or
pop
loope
pminub
dec
sbb
pop
roll
insl
inc
ja
scas
mov
stc
scas
in
popl
lret
and
outsl
cmp
test
out
or
mov
adc
xchg
jg
lcall
inc
jecxz
cmp
mov
aam
dec
dec
adc
shrl
cmp
jnp
inc
jmp
fabs
in
xor
imul
add
push
pop
jae
fidivrl
add
inc
xor
cmp
cmp
fmuls
mov
cs
sub
mov
add
mov
mov
shl
dec
mov
bound
lcall
push
andl
stos
sti
and
inc
sub
sbb
shlb
call
iret
sub
sbb
lods
xlat
notl
adc
popf
test
movb
dec
and
orb
decl
push
cmp
js
add
add
add
aaa
in
stos
xor
or
cltd
jo
sarl
adc
dec
lahf
add
shl
rcrb
dec
pop
imul
ds
mov
lock
add
lret
or
sub
xorb
jmp
call
imul
mov
negl
adc
test
fists
lret
data16
leave
or
jl
mov
pop
repnz
dec
mov
cs
cmp
imul
pop
jae
sub
divl
pop
imul
div
ljmp
cwtl
jo
adc
mov
sub
aas
cmp
lods
ja
pop
xchg
xchg
sbb
rorb
fwait
sbb
jmp
sbb
adc
pusha
cli
fs
fldl
xchg
and
into
in
ret
popf
xchg
fsubr
xlat
xchg
cwtl
js
fwait
push
inc
popf
repnz
adc
stc
out
testl
int3
stos
loop
into
jnp
push
shlb
add
jo
ja
std
stos
inc
push
cli
test
ja
add
pop
add
add
jg
xor
je
add
jb
fs
push
xor
push
cmp
sbb
mov
xor
push
call
inc
push
incl
movsl
push
mov
pop
xlat
push
mov
mov
ja
ret
shrb
adc
xchg
or
cmp
imul
jl
push
sbb
aad
cmp
in
outsb
sbb
jl
insb
jmp
sub
arpl
popa
mov
sub
out
adc
mov
mov
inc
xor
sbb
add
bound
or
stos
xchg
inc
pop
jbe
fnstenv
lret
and
mov
dec
int
mov
push
mov
fs
adc
and
shll
mov
lock
cmova
aaa
std
jg
mov
cmp
xor
add
add
cmpsb
lods
rcrb
cmp
dec
cmp
pop
add
add
add
jmp
mov
bound
push
xchg
pop
jno
in
lds
fcmovu
mov
test
jp
xor
mov
jnp
lods
out
out
pop
addb
aam
test
dec
dec
mov
in
cld
pop
cmp
leave
lods
lea
sahf
fadds
repz
dec
cmp
sbb
icebp
push
mov
and
mov
pop
dec
xadd
fnstenv
jl
sbb
add
imul
inc
scas
jmp
ss
mov
mov
ds
loop
stos
cmp
out
add
inc
add
fs
xchg
jl
fisubrl
dec
jns
xchg
and
adcb
and
mov
fs
shll
lods
jl
mov
xchg
adc
sbb
cli
mov
repz
cmp
ficoml
push
ret
mov
sbb
mov
insl
out
imul
jp
mov
xor
cli
mov
push
xor
add
pop
add
add
add
pop
and
mov
xor
in
stos
insb
or
mov
lret
cmpsb
inc
mov
and
mov
out
dec
pushf
popf
loop
insb
sub
push
inc
cmp
sti
sarb
bound
and
jge
mov
mov
cmp
jns
inc
cmpsb
scas
mov
idivl
inc
and
das
iret
std
mov
or
rcr
add
iret
mov
jo
shll
xchg
mov
std
orl
pop
cmpsl
xor
add
jp
and
mov
dec
hlt
sti
jb
sbbl
push
push
sub
push
xor
and
add
aad
or
shlb
stc
jno
mov
pusha
data16
das
jmp
out
adc
and
in
and
out
fcompl
mov
fwait
shlb
sub
or
mov
add
std
test
inc
jbe
stc
jno
sbbl
add
pop
add
add
sti
mov
and
aaa
and
sub
inc
xchg
or
jle
dec
insb
data16
scas
sub
das
test
sbbl
cmp
mov
push
aad
mov
aaa
es
xchg
cmpsl
add
filds
inc
cmp
xor
sbbl
or
pop
push
adc
add
pop
loop
jge
mov
sbb
xor
out
fsubrl
mov
sbb
and
push
ror
dec
adc
pop
int
in
adc
dec
lods
cmc
mov
shr
push
jg
sbb
adc
jbe
popa
in
out
adc
sub
and
ds
add
in
push
mov
inc
lahf
test
into
add
pop
mov
pusha
daa
and
push
jg
stc
cmp
inc
insl
dec
lods
faddl
add
testb
iret
out
movsb
pusha
repnz
add
add
add
mov
and
or
mov
aad
or
in
add
fisttpll
mov
repnz
sbb
dec
jae
out
out
jo
iret
shll
outsb
movsl
adc
mov
push
popa
mov
test
push
add
stos
jl
and
sub
mov
lcall
lahf
xor
mov
cs
stos
sbb
iret
adc
repz
jle
sub
jno
dec
push
xlat
es
xor
out
mov
inc
nop
dec
mov
xchg
cmp
sbb
shlb
dec
push
mov
jb
pop
shld
cmc
push
dec
fwait
xchg
jle
mov
pop
outsb
push
sub
push
push
out
out
mov
xor
and
jo
ja
cld
pop
jmp
dec
sarb
inc
cmp
adc
dec
push
ja
rolb
or
pop
cmc
inc
and
cmp
dec
pusha
outsb
inc
push
pop
add
lcall
aad
pusha
lcall
add
lret
sahf
movsl
add
sub
addl
and
push
das
repnz
lret
je
loope
imul
xor
sub
cmp
das
mov
xlat
jno
cltd
push
push
jg
mov
mov
push
in
cmp
jle
mov
xchg
jl
lods
lock
and
scas
add
sbb
jo
mov
mov
mov
push
les
or
add
jl
mov
call
insb
lcall
pusha
shlb
sub
push
xchg
push
es
dec
push
sub
sbb
sub
pop
pop
cld
xor
mov
or
jns
mov
mov
ja
pop
mov
jp
xor
test
jne
dec
push
push
shll
xlat
and
xchg
scas
fmull
xor
xchg
sub
mov
adcb
jl
cs
idiv
fnsave
sub
mov
add
add
adc
sub
push
inc
lds
out
mov
add
rolb
jne
or
out
ret
pop
and
inc
or
scas
jo
xor
mov
sbb
xchg
imul
test
fistpl
leave
inc
pop
imulb
lds
dec
nop
insl
mov
mov
add
adcl
iret
dec
sub
inc
xchg
pop
stos
or
jae
jle
dec
lock
lods
out
sub
jne
add
mov
sub
icebp
leave
stos
xor
sub
imul
inc
mov
mov
lret
in
mov
jecxz
out
mov
es
cltd
fnstcw
jecxz
insl
jge
dec
test
shl
movsl
mov
add
ret
mov
lods
in
add
pushf
xor
inc
pop
cmp
adc
fldenv
outsl
mov
in
and
movsl
mov
xchg
call
movsl
pushf
test
add
pop
add
add
xchg
pop
fisubl
inc
push
lock
mov
adc
mov
push
lds
cmc
frstor
or
ja
enter
xor
push
or
ds
xchg
or
inc
dec
sub
ficoml
int3
outsb
ds
cmpsb
lret
pop
loopne
add
rcrb
mov
adc
mov
xor
and
aad
sub
call
ret
lods
rorl
dec
lret
xchg
cmp
bound
aad
dec
xchg
addr16
and
inc
xorl
mov
cmp
movsb
mov
push
es
cwtl
cld
and
dec
push
xor
mov
or
inc
sub
nop
cli
out
jecxz
sahf
test
es
cmp
jmp
mov
sub
scas
push
cmp
sub
movsl
imul
mov
pusha
lret
mov
jnp
pop
rcrl
sbb
lea
addb
add
add
sti
iret
test
sub
lret
in
addl
add
add
outsb
js
mov
mov
je
lcall
xchg
sbb
dec
pop
adc
mov
loope
push
rol
add
cli
xlat
jnp
or
decb
dec
std
lds
push
and
arpl
or
lods
popa
adc
pop
sub
adc
xor
test
mov
sub
cltd
ss
loope
adc
loop
xor
std
pop
das
xor
mov
cld
inc
dec
cwtl
or
mov
jae
push
push
das
imul
int
repz
idiv
cmp
jecxz
cmc
push
jno
mov
std
insl
hlt
je
lahf
xor
dec
or
jg
cmp
add
xchg
xchg
or
lds
push
mov
cs
xor
pop
push
stc
addb
sub
or
sahf
stos
repz
push
add
xor
addr16
jmp
movsl
adc
loopne
add
outsl
xchg
inc
lahf
sti
hlt
out
mov
jp
ljmp
add
repz
imul
push
enter
ret
xchg
and
call
xor
mov
ss
call
xchg
xchg
cmp
adc
sbb
testl
jae
mov
inc
xor
mov
push
sbb
mov
add
das
pop
push
cmpsb
add
pop
xchg
outsl
cld
jg
test
ja
loope
data16
popl
mov
je
sbb
xchg
mov
stc
lret
pop
pop
pop
adc
mov
in
dec
mov
sbb
pop
push
nop
push
sub
clc
sub
ja
xchg
popf
xchg
or
add
adc
push
sbb
neg
inc
inc
or
je
or
cmp
andl
lret
push
push
dec
xchg
rcr
jns
pop
add
and
out
mov
cmp
add
mov
cmp
das
loopne
mov
add
add
push
movsb
movsb
sarb
dec
fs
adc
mov
inc
aad
ret
outsb
push
aam
dec
shl
out
inc
popa
das
scas
mov
mov
out
adc
mul
add
jo
outsl
xchg
mov
fistpl
jmp
inc
subb
xchg
movsl
mov
pop
fldcw
cli
jge
fsub
pop
aaa
dec
jmp
fs
sbb
outsb
shlb
fldt
pushf
loope,pn
mull
push
fwait
orl
or
in
adc
jecxz
stos
ljmp
pusha
sti
jae
pop
or
test
jo
push
pop
scas
mov
test
cmc
dec
mov
out
scas
les
into
pop
push
fisttps
xlat
cmp
incl
cltd
inc
arpl
push
mov
aas
cmc
imul
adcb
shl
adc
sub
out
mov
lahf
decb
jp
cmc
inc
mov
xlat
and
sub
mov
add
pop
test
ljmp
roll
adc
test
add
add
add
and
add
test
jge,pt
enter
adc
or
mov
and
push
in
pop
and
ss
fistpll
fsubs
jl
ja
test
cmp
mov
cmc
xchg
lret
hlt
push
movsb
sub
inc
rol
xchg
xchg
or
adc
sti
fstp
mov
cmpb
mov
insb
and
adc
mov
subb
bound
rcrb
mov
lret
push
rorl
jl
in
frstor
imul
fisttps
aaa
pop
push
cmpsl
and
xchg
add
into
add
xlat
imul
push
sub
xchg
pushf
xor
addl
push
enter
in
sbb
dec
stc
icebp
in
imul
push
xor
adc
pop
push
lret
inc
insl
sub
adc
or
add
sub
cwtl
mov
add
add
arpl
jnp
sbb
adc
aam
lret
test
add
add
add
mov
or
xchg
jp
sub
decb
and
pop
jne
out
cmp
dec
fwait
adc
lock
jp
push
jbe
lea
pop
pop
xor
cmp
jbe
jmp
xorl
iret
xor
je
insb
dec
incl
popa
movsl
sbb
sbb
andps
adc
fsubl
jb
fnstenv
daa
inc
inc
xchg
jg
or
mov
rcrb
fmulp
test
stos
subl
fcompl
test
gs
xchg
repnz
sbb
mov
mov
out
adc
in
mov
cwtl
pop
dec
stc
adc
lds
xor
xor
mov
xor
testb
xlat
mov
xchg
imul
mov
aaa
xchg
xchg
mov
cli
dec
push
cmc
repz
fidivrl
xor
push
loop
xorb
push
jbe
lret
notb
push
or
jge
add
aas
or
mov
fiadds
add
add
add
xchg
adc
movb
sar
scas
sub
pop
add
cltd
js
fisubl
jbe
mov
push
xor
fnstsw
or
xor
and
fcmovu
add
rorb
popf
imul
inc
mov
in
cmpsb
lods
add
cmpsl
xchg
and
mov
jge
cmp
add
sbb
mov
stos
notl
cli
jl
insl
mov
sub
mov
xchg
pop
push
stos
and
push
or
cmpb
test
xchg
stc
leave
and
das
add
fiaddl
fiaddl
xchg
inc
outsl
shlb
hlt
out
adc
pushf
roll
xchg
xor
imul
in
or
andb
jmp
xchg
outsb
jae
test
adc
xchg
test
fs
push
cmp
out
jecxz
out
push
hlt
or
dec
outsb
push
sbb
jg
jno
or
scas
mov
stos
sbb
int
lods
aad
insb
fidivl
sub
inc
adc
flds
add
or
notb
leave
xchg
sbb
out
mov
imul
add
sbb
jecxz
test
iret
icebp
leave
mov
xchg
cli
xor
loope
add
sbb
mov
in
cltd
add
jnp
bound
cmc
dec
cmp
test
mov
cmpsb
pop
push
pusha
and
int
lods
pushf
jae
inc
scas
fincstp
das
xchg
test
inc
jbe
sub
dec
ja
fcmove
testb
testl
testb
jmp
mov
sub
fs
fisubl
lods
and
add
mov
arpl
adc
push
xor
mov
pop
sbb
scas
xchg
cmpsl
sbb
sbb
mov
xchg
ljmp
xchg
loop
fsubrs
inc
loope
in
jb
ss
test
in
lcall
add
mov
xchg
push
loopne
add
pop
add
add
mov
and
es
pop
dec
or
inc
and
sub
ds
jns
addr16
jno
into
pop
jl
shl
inc
call
fwait
ljmp
fs
dec
imul
fucomp
mov
imull
xor
test
inc
jae
push
cmp
out
jb
jo
inc
jg
mov
out
or
xchg
mov
cmpb
and
sbb
and
mov
das
push
sbb
insb
dec
xor
leave
arpl
or
mov
ds
cmp
scas
ret
pop
fst
pop
pushl
xchg
ja
sbb
ret
ja
test
mov
scas
int3
pop
cmc
ss
fbstp
mov
out
jnp
mov
or
ret
orl
sahf
or
loope
jg
and
dec
ret
inc
outsl
adc
aas
mov
test
jo
push
cld
movsb
loop
mov
orb
cld
ds
dec
xchg
dec
push
int
fstp
iret
push
xor
rorb
out
add
pop
add
add
pushf
fistpl
jns
out
stos
cld
popf
mov
in
inc
pop
pop
xchg
or
das
jp
mov
loope
push
aas
data16
nop
test
pop
pop
fdivrl
aad
idivl
daa
sbb
lea
add
ret
push
cmp
mov
mov
cmc
adc
enter
mov
aas
cmp
jnp
jo
das
in
jbe
stos
aam
sahf
pop
lds
cli
xor
mov
adc
in
aad
imulb
ja
cmp
pop
js
and
jns
mov
filds
sbb
ja
xchg
xchg
dec
or
jp
fidivl
mov
rcll
and
in
dec
and
dec
push
xchg
pusha
push
cltd
outsl
mov
push
sub
lcall
sub
jo
mov
in
xor
bound
pusha
mov
leave
or
and
xchg
xorl
pop
pushf
stc
add
adc
std
and
xchg
sarb
sarl
out
mov
add
add
add
pop
loop
xor
sub
and
test
sti
dec
pop
fdivrs
cli
xor
pusha
shll
dec
pop
in
cmp
leave
hlt
cli
lods
and
and
mov
jmp
and
push
xchg
mov
je
fstp
lret
xchg
pop
or
dec
arpl
add
mov
scas
or
lods
mov
mov
sbb
insb
xor
mov
lret
mov
push
aad
add
jbe
push
sub
loopne
aas
aaa
and
jmp
adc
inc
push
push
leave
ljmp
mov
xor
nop
pop
aas
inc
out
js
lahf
imul
out
pop
in
dec
inc
cmp
push
out
or
addl
arpl
inc
adc
xchg
or
insb
mov
push
sysret
stc
ds
adc
sub
sbb
movsb
add
mov
add
cmc
mov
add
add
add
incl
ja
or
rclb
mov
push
fsubs
fwait
inc
insl
pushf
and
push
scas
lahf
dec
scas
fwait
outsl
add
sbb
int3
mov
push
cltd
push
popa
xchg
test
ret
sub
xchg
cmpsl
push
mov
sbb
add
sbb
add
or
insl
repz
inc
cmp
hlt
jge
or
inc
push
push
dec
outsb
scas
pop
jecxz
mov
jo
pop
inc
push
mov
stos
mov
inc
mov
inc
scas
jae
scas
xchg
xor
fsubl
xchg
aad
scas
insb
int
mov
mov
cmc
mov
inc
jg
xor
xor
and
inc
hlt
cld
aam
enter
pusha
imul
adc
cmpl
jo
sbb
insb
es
out
xchg
mov
sub
scas
inc
mov
or
ds
fistl
xchg
mov
adc
cs
pop
setae
jns
mov
mov
cmp
sub
inc
or
test
out
xchg
push
cmp
daa
cld
mov
add
add
add
mov
arpl
insl
push
out
incl
pop
leave
mov
jge
dec
xchg
lret
lcall
adc
lahf
aam
inc
fsubl
mov
imul
and
jle
jns
push
cmpl
lock
mov
inc
fmul
sahf
nop
pop
mov
push
cmp
stos
and
pop
mov
les
xchg
sub
pop
dec
js
cmp
cltd
fimuls
or
rorl
add
pusha
and
mov
sti
cmp
aad
call
pusha
jbe
dec
add
adc
daa
xor
mov
sub
insb
cmc
push
sbb
jecxz
test
js
sub
sbb
fisttpl
loopne
leave
mov
pop
hlt
ret
fsubl
std
pop
and
mov
or
daa
lods
mov
int
cs
xchg
pop
fs
iret
fcompl
push
mov
add
ljmp
dec
push
ret
js
add
pop
add
add
test
pop
mov
outsb
shr
popf
loop
jae
add
sahf
add
push
sbb
push
dec
inc
jbe
sub
repnz
pushf
cmpsb
loope
jg
cmpsl
ljmp
dec
jne
lods
int3
popl
clc
push
out
cmp
scas
cli
dec
fwait
arpl
cmp
mov
inc
and
bound
mov
fistl
lods
daa
push
push
pop
div
and
jecxz
stc
pop
pop
push
les
stos
push
jecxz
xchg
and
out
test
mov
fstps
out
std
push
test
push
pop
je
sub
xchg
jecxz
nop
dec
fmul
ljmp
push
inc
sub
cmp
xor
adc
jbe,pt
outsl
scas
dec
cli
fldenv
pop
xchg
int3
lock
jge
xchg
sub
pop
pop
mov
js
fs
stc
movsb
shl
subb
add
add
aaa
shlb
cmc
div
mov
shrl
or
add
adc
xor
sbbb
cli
js
int
aad
sbb
into
mov
push
mov
jno
sub
stos
test
jns
lods
pusha
mov
outsb
jbe
push
xchg
data16
aad
lea
lods
test
dec
ret
push
add
jl
xchg
scas
dec
int
push
test
xchg
sub
inc
shl
pop
inc
cmpsb
push
xchg
jmp
mov
jae
in
mov
cmp
dec
push
push
and
xchg
push
xchg
sub
ficomps
adc
cltd
mov
rorl
inc
mov
out
cwtl
mov
lock
mov
cmpsl
popl
mov
outsb
fsubrl
dec
inc
mov
pop
inc
adc
push
popf
idivb
inc
xor
or
mov
jmp
cltd
adc
in
xlat
in
jae
out
xor
shl
and
push
inc
dec
cmpsb
jbe
scas
int
adc
add
push
sahf
rcr
pop
inc
scas
stc
mov
adc
add
shlb
insb
ret
mov
imul
leave
mov
dec
mov
sti
mov
jp,pt
push
sbb
test
stos
jnp
sub
cmpsl
mov
popa
es
cs
orb
repnz
inc
cwtl
fmuls
movsl
pop
jne
rcr
push
cmp
arpl
loopne
adc
xor
aad
aas
inc
insb
test
dec
inc
mov
scas
xor
adc
js
lcall
xchg
cmpsb
in
sbb
mov
adcl
jl
lods
fnstenv
jg
cmp
xlat
xchg
xchg
test
sar
xchg
jle
mov
mov
out
xchg
jge
ret
sahf
movsl
lcall
ljmp
add
imul
sbb
js
mov
sbb
clc
shll
test
jno
add
loopne
xchg
mov
cmpb
add
add
arpl
cmpsb
jcxz
mov
sub
sbb
add
and
push
cmp
lahf
dec
push
test
xchg
xchg
mov
dec
sti
in
push
gs
sti
inc
jp
fcmovb
xor
popf
cltd
xchg
mov
adc
lock
mov
lahf
loopne
jecxz
stos
in
test
popf
adc
mov
fstps
jle
xchg
notl
mov
std
cmp
jmp
mov
shr
mov
addr16
fcoml
push
movsl
cmp
jnp
or
pop
inc
movsb
xor
push
lahf
xor
insl
rorl
ljmp
sbb
data16
notb
aas
data16
sub
inc
jb
dec
repnz
and
cld
pushf
fdivl
adc
testl
mov
and
jb
cmc
sub
sahf
in
in
addr16
ds
and
loope
cmpsb
lret
shlb
test
xchg
rcrl
mov
into
or
clc
jnp
jg
in
cli
push
push
add
pop
add
add
movsl
ja
cmp
imul
add
cmp
lods
sbb
add
push
and
fwait
xlat
xor
fisubrl
mov
daa
cld
jg
cmp
bound
push
dec
inc
ret
add
push
xchg
nop
lea
aam
ja
mov
sbbb
push
dec
adc
mov
ret
xor
inc
sahf
pop
push
rolb
and
inc
out
fs
xor
pop
sahf
notl
mov
pop
in
stc
fsubrs
pop
imulb
adc
daa
pop
std
lods
pop
mov
dec
pop
xlat
call
lret
lahf
in
jb
mov
and
adc
xchg
push
xchg
inc
sahf
fxch
rorb
sbb
testl
ljmp
ja
lea
sarl
sub
jb
fdivrs
stos
pop
repnz
add
cmpl
add
add
lods
faddl
fbstp
cld
fidivl
in
mov
add
pop
add
add
mov
clc
dec
nop
push
jg
fs
subl
fdivrl
int3
daa
jae
pop
fwait
je
push
adc
addl
inc
divb
addb
pop
cmp
xchg
arpl
test
add
test
sti
cli
inc
aad
fmuls
or
and
and
mov
lods
in
add
jge
sahf
aad
ja
push
mov
leave
sahf
mov
into
push
aam
inc
dec
jb
jo
sub
xchg
push
mov
fsts
dec
push
movsl
ljmp
pop
sub
es
int3
xchg
xchg
in
inc
mov
dec
lods
mov
popf
pusha
mov
xchg
pop
das
xchg
notl
loopne
punpcklwd
lock
dec
loop
push
mov
sub
mov
mov
mov
or
pop
xchg
es
movl
sbbl
push
in
cmp
movsl
sub
pop
add
jl
sar
std
jle
testb
dec
in
add
pop
add
add
xchg
mov
add
gs
negb
je
mov
sbb
xchg
gs
out
push
jl
stos
inc
pop
push
in
mov
mov
add
rclb
mov
add
xchg
les
push
mov
out
lods
and
mov
pop
add
out
sub
scas
pop
rorl
inc
iret
hlt
int
mov
mov
push
test
repnz
cmp
inc
dec
or
mov
pop
outsb
lock
jne
pop
enter
mov
pushf
xor
jecxz
addb
dec
ret
scas
dec
gs
rorl
ja
dec
cmp
das
addb
cmpsl
inc
xchg
mov
dec
pusha
lahf
add
out
fstpt
loopne
add
jo
cmc
dec
mov
testb
sub
sbb
push
into
pushf
addr16
mov
cmp
dec
fs
pop
mov
cmp
cmp
mov
xor
add
pop
add
add
outsb
daa
dec
inc
sbb
sbb
sbb
pop
call
insb
sbb
jecxz
int
sahf
cmpsl
sub
stos
aaa
inc
mov
enter
pop
shr
jnp
int
jno
outsb
iret
mov
lea
mov
adc
push
dec
mov
inc
mov
cmp
mov
nop
xor
pop
pop
dec
push
pop
pop
lret
es
lock
out
jb
fs
subb
enter
mov
and
notl
xchg
sahf
stos
push
jecxz
popf
mov
rorb
xchg
inc
enter
notb
push
clc
addb
and
test
in
or
inc
add
sub
push
mov
mov
inc
and
cmc
inc
pop
divb
lea
stos
stc
cmpsl
jge
push
movsw
push
call
sub
lret
jo
cmp
mov
add
insb
cwtl
jnp
fwait
and
popa
mov
sub
lret
add
pop
add
add
xor
ret
and
ja
mov
or
in
es
pop
xor
inc
mov
lahf
inc
mov
fsubr
adc
cmp
jo
inc
inc
pop
cmp
xor
push
sahf
inc
sahf
mov
in
inc
jae
mov
mov
mov
mov
or
das
rcrl
dec
jge
xchg
xchg
pop
adc
add
fsubs
adc
imul
cwtl
ja
xor
decb
nop
jne
std
subl
lods
loope
out
cmp
imul
insl
mov
out
cmpsb
pop
mov
jge
jo
fstl
and
jbe
mov
clc
inc
dec
aaa
cld
mov
sahf
jp
xor
jns
jbe
pop
pop
add
fdivl
jo
insl
adc
je
or
pop
fiaddl
loopne
punpcklbw
push
jnp
in
je
or
test
data16
lahf
add
dec
std
out
xlat
aas
insb
lods
ret
arpl
add
pop
add
add
flds
adc
ss
cld
imulb
stos
and
inc
cmc
addr16
rol
je
and
sub
xchg
shr
mov
jle
sahf
out
test
testl
jne
jae
aam
add
mov
mov
cmp
cmp
mov
pushf
jne
sar
test
push
sar
leave
cmp
lods
mov
mov
test
mov
sbbb
iret
sub
lret
dec
cltd
add
es
outsb
dec
lock
pusha
cmpsb
jp
and
xchg
cmp
jle
xchg
iret
adc
xor
sbb
push
daa
int3
or
in
aaa
mov
jge
mov
push
cmp
add
paddb
xor
or
je
adc
push
insb
int
lock
test
cld
insl
dec
test
fisubl
inc
push
test
lds
js
push
aas
mov
stos
inc
fsubrl
ret
imul
outsl
fistpll
mov
cwtl
add
pop
add
add
movsl
xchg
clc
lret
addr16
mov
arpl
out
inc
mov
dec
push
pop
push
flds
fdivrs
mov
addr16
rorl
xchg
sbb
xor
call
in
sub
out
mov
mov
out
lock
mov
mov
in
in
mov
mov
fimuls
cmpsb
push
inc
sub
jle
sbb
repz
out
insl
fwait
add
or
addr16
sti
inc
es
sbb
mov
out
xchg
incb
sub
in
clc
int3
mov
or
push
lret
daa
gs
cs
repnz
aam
pop
jge
mov
std
int3
mov
enter
lret
push
add
adc
incl
shrl
mov
inc
push
sub
and
and
repnz
pushf
in
add
in
sbb
mov
or
xchg
bound
jp
rol
cmpsl
mov
xchg
or
push
sub
add
lret
sbbl
xorl
mov
add
add
add
xchg
dec
enter
jmp
mov
in
push
cmpsl
repnz
inc
xchg
sub
xor
xchg
call
bnd
inc
into
ror
sub
loop
sbb
ret
aaa
push
repz
adc
or
sbb
lods
or
pop
sbb
aas
pop
clc
mov
out
imul
dec
stos
mov
or
enter
lret
stc
dec
addb
popf
jb
xorl
push
jmp
push
out
sarl
push
mov
xor
mov
test
aaa
xor
jae
cmpl
shrb
gs
bound
mov
fstl
repz
lret
cltd
lret
fsubrs
fstpl
jo
out
jge
pop
or
mov
shll
fs
and
sub
pop
clc
mov
outsl
lds
mov
ret
add
add
imul
sbb
leave
dec
cmpsl
setp
lcall
mov
daa
incb
or
nop
sbb
loop
out
into
dec
leave
das
aam
mov
test
repnz
mov
lds
and
adc
cld
push
rcr
fidivrs
fnsave
xlat
arpl
pop
dec
hlt
push
call
xlat
stos
sbb
sti
in
xchg
adc
xor
call
push
jg
hlt
loope
pop
cltd
xor
nop
cli
aaa
pop
push
jne
push
dec
fidivs
mov
or
push
and
inc
jne
int
mov
jle
jnp
loope
inc
rclb
and
pop
xchg
sbb
inc
add
jmp
pop
and
rcll
xor
mov
or
fidivl
leave
les
hlt
cmpsl
xor
fwait
test
xchg
stc
push
fdivrs
jae
ficoml
cmpsl
mov
mov
mov
hlt
rolb
cwtl
jnp
int3
mov
ss
stos
cmpsb
pop
dec
filds
mov
jge
jg
ljmp
out
stos
adc
jge
fwait
add
pop
add
add
mov
mov
push
sbb
addr16
cmp
jbe
aaa
sbb
icebp
movsl
adcb
test
mov
or
jo
nop
pop
push
add
repz
push
and
cmc
adc
das
push
inc
sub
mov
out
mov
add
out
adc
in
inc
adc
push
xchg
xchg
in
test
lret
frstor
in
out
pushf
inc
lods
into
or
inc
mov
pushl
aad
mov
addr16
sahf
pop
pop
xchg
sub
sub
pop
sub
or
je
mov
fcmovnu
mov
sub
xor
and
push
call
mov
out
mulb
je
cmp
xchg
xlat
pop
js
lret
adc
mov
pop
imul
testl
add
addl
sbb
mov
add
faddp
push
in
adc
pop
mov
or
adc
cltd
sub
out
xor
cld
push
imul
pop
add
add
fsubl
call
push
movsl
lret
loope
cld
lret
xchg
lcall
mov
pop
dec
in
int
jnp
stos
daa
cmpsl
and
fcoms
std
or
inc
leave
je
adc
out
inc
jno
in
fs
jg
test
adc
mov
sti
push
inc
in
in
and
ret
repnz
mov
out
imul
repnz
fistpll
mov
imul
dec
sub
and
nop
testl
in
inc
jnp
xor
mov
xor
test
loop
inc
add
jno
cwtl
rorl
xchg
jae
dec
push
sub
roll
inc
rorb
mov
sub
jmp
push
dec
mov
inc
add
testb
jl
call
or
fildl
mov
not
mov
mov
loop
test
je
push
push
rol
insb
popf
add
pop
add
add
es
call
mov
les
jno
es
sub
pop
mov
sub
repnz
jne
mov
ja
cmp
mov
or
or
fs
adc
ds
out
je
cmpsl
lahf
loop
jmp
outsl
sahf
mov
lahf
sbb
pusha
pop
add
cmp
mov
test
adc
jns
scas
pushf
dec
sub
pop
lods
xlat
clc
dec
aaa
inc
and
mov
scas
andb
cmp
fcoms
cwtl
xchg
or
pop
shrl
sub
adc
cmc
in
mov
mov
lahf
fs
mov
rcrb
loope
push
in
movsb
shlb
movsl
xchg
xchg
imul
jp
js
loope
and
push
sub
pop
mov
lea
loop
xor
jg,pn
mov
fistl
cli
mov
push
ja
pop
rolb
xor
add
lods
add
in
add
mov
repz
repz
rol
jae
add
pop
add
add
add
enter
pushf
popa
cmp
stc
mov
loope
in
fs
repnz
imul
cwtl
aam
push
in
cli
fidivrs
jb
out
faddp
or
std
imul
inc
inc
mov
jno
ficomps
mov
push
lret
je
mov
sub
add
aad
rorl
mov
fwait
popa
clc
xchg
or
es
movsl
scas
andb
sahf
push
add
imul
cs
cmpsb
mov
ret
mov
insl
cld
outsb
jg
lock
sub
rcrl
add
icebp
jae
int
jae
rolb
cmp
in
push
xchg
jle
sub
cmp
mov
mov
mov
ds
sbb
pop
xchg
aad
inc
bound
sbb
aad
push
jp
xchg
mov
fcoml
inc
sbb
test
mov
xchg
testb
cmp
movsb
mov
mov
pop
or
jp
add
pop
add
add
dec
jne
lock
fs
repz
int
test
mov
adc
mov
repnz
fisubl
dec
gs
mov
xor
icebp
mov
mov
add
outsb
xor
sub
pop
mov
lcall
pop
loopne
lds
in
mov
rcrb
pop
jne
jae
cld
add
mov
pushw
inc
cwtl
fnstenv
mov
es
addr16
fstl
or
push
ja
inc
mov
fwait
jae
addl
insb
in
aad
mov
clc
jl
aam
jle
movsb
inc
shr
push
inc
dec
ficompl
imul
leave
sbb
aas
push
push
sub
xchg
xor
jecxz
dec
rol
mov
and
cmp
or
subb
and
les
push
jmp
xchg
lcall
sub
xchg
mov
fucom
pusha
lea
add
std
stos
sbb
sub
add
add
mov
outsb
sbb
lods
addr16
sbb
fisubs
insb
jbe
test
int
js
cld
cmp
add
or
mov
pop
fwait
out
nop
add
lods
int
pop
dec
out
shr
fldl
mov
xchg
adc
mov
imul
enter
xor
pushf
addr16
pop
push
jae
cltd
cmp
xchg
mov
hlt
or
add
pop
dec
stos
jne
push
cmpsl
xchg
or
popf
jl
mov
test
cmc
mov
jg
inc
fsubl
divb
int
add
xor
cmp
push
and
in
xor
repz
test
je
mov
nop
sbb
popa
cmpb
arpl
lahf
xor
jne
cmp
and
inc
int3
movsb
xchg
cmp
fdivs
inc
inc
jbe
lods
outsb
add
mov
sti
add
add
add
inc
fdivl
push
fists
add
add
mov
and
mov
jo
pop
pop
rcl
cmpsl
mov
and
mov
adc
out
or
call
add
sahf
pop
pop
sarl
jmp
jbe
or
shl
sbb
mov
bound
lcall
add
fldt
mov
push
test
mov
outsb
and
jl
sub
hlt
rcrl
mov
pop
cli
push
and
push
scas
in
mov
pop
jl
jmp
add
add
mov
ljmp
xor
adc
inc
jmp
push
cmc
mov
pop
insb
jae
test
jg
adc
or
repnz
xchg
sbb
adc
addl
add
adc
rcl
pop
ss
popa
mov
inc
jae
scas
xor
mov
sub
out
stos
pop
or
hlt
ja
fst
mov
add
sbb
cmp
je
pop
add
sbb
mov
push
icebp
mov
add
pop
add
add
mov
test
mov
inc
pmulhuw
fdivs
pop
fs
jnp
add
mov
in
in
sahf
test
inc
sub
mov
inc
push
adc
or
mov
mov
out
push
mov
xor
mov
fimuls
adc
push
jmp
call
je
movb
sbb
cmp
sub
fpatan
jp
std
popa
lahf
ret
mov
inc
fstl
mov
and
mov
cmpsl
or
out
inc
insb
repz
clc
cli
sub
arpl
lods
insb
lret
pop
std
and
jge
xchg
loopne
push
xchg
sbb
clc
aaa
dec
jg
cmp
jmp
ror
cmpb
xchg
mov
into
and
add
out
sbb
ja
or
ljmp
inc
mov
jg
loopne
in
pop
test
stos
hlt
jmp
jmp
mov
add
pop
add
add
mov
push
jp
stos
cmpsb
jl
and
jb
stc
lods
push
rclb
mov
jmp
lock
loop
sub
movsl
push
pop
jnp
ret
adc
aad
inc
loope
add
jno
sbb
lods
push
inc
cmp
nop
loop
aas
lds
fcompl
pop
nop
ljmp
aad
sti
xchg
fsubrl
sbb
xor
add
mov
mov
jns
lods
inc
cmc
xchg
ret
sbb
push
lods
fcmovne
fsubs
adcb
pop
mov
aaa
in
movsl
jns
push
test
mov
pop
add
sbb
addr16
aad
pusha
inc
ja
leave
cmp
lret
stos
mov
leave
movsb
sub
fnstsw
call
fs
pushf
pop
scas
cmp
sbb
jecxz
push
out
jmp
js
imul
popf
inc
push
incb
mov
xor
add
out
xlat
out
jg
xchg
in
imul
popf
movsb
add
pop
add
add
xchg
out
out
mov
and
std
mov
push
scas
movq
or
dec
adc
fs
loop
add
adc
xchg
pop
xchg
adc
cwtl
pop
cs
inc
dec
xor
out
cmp
imul
jecxz
lahf
imul
mov
mov
rcrl
gs
pop
inc
loope
and
mul
lods
mov
loope
out
mov
xchg
jo
lods
das
cs
mov
xor
mov
or
mov
out
test
pop
push
clc
jne
dec
icebp
pop
or
fadd
sbb
mov
jae
bound
data16
aad
mov
fstl
xor
lret
aaa
xor
int
pop
popf
movsb
rorl
xchg
in
out
imull
in
xchg
in
jb
call
xor
dec
inc
and
fildl
test
mov
mov
movsb
mov
mov
jle
mov
adc
je
push
sahf
out
leave
ja
addr16
cltd
add
mov
inc
fwait
lds
push
sarl
lret
rep
movsl
add
pop
add
add
xor
std
lret
sub
lods
and
aaa
mov
add
into
int
mov
sbb
dec
loopne
xchg
mov
stc
sbb
xor
mov
cmc
sbb
movsl
call
icebp
imul
jmp
mov
ds
fisttpll
sub
lods
ss
ror
jg
mov
jl
adc
lret
pop
mov
mov
lock
dec
pushf
sarb
aad
push
into
popa
mov
jno
jmp
loope
cmc
mov
aam
outsl
outsl
cmp
push
xchg
dec
and
xor
xchg
dec
loop
jbe
mov
xchg
insb
dec
movsb
xchg
mov
and
loopne
inc
arpl
xchg
pop
daa
adcb
cmp
insb
ds
add
pop
and
push
mov
push
inc
xor
es
lcall
pop
sti
cmp
lcall
std
in
mov
mov
pop
add
add
mov
test
inc
adc
jecxz
inc
push
arpl
in
out
cs
mov
xor
popa
pop
fdivl
mov
mov
jl
test
fisubs
mov
int
inc
aas
jmp
arpl
cld
sbb
scas
insl
scas
sbb
mov
adc
pop
loopne
sub
xor
jecxz,pt
jnp
fldl
xor
jne,pn
cld
mov
mov
dec
ljmp
mov
sbb
fs
aaa
add
je
lahf
inc
scas
dec
in
mov
shrb
xchg
gs
cld
jp
test
cltd
dec
pop
fbld
sbb
bound
sahf
xorb
test
out
mov
outsl
jne
xchg
std
sbbl
fwait
push
aam
mov
push
lcall
jno
or
into
in
daa
in
mov
aam
xor
and
or
mov
add
mov
push
sti
jmp
pop
dec
pop
movsb
adc
nop
mov
add
pop
add
add
lock
mov
sub
jbe
mov
jbe
in
sbb
fwait
daa
push
pop
sbb
lock
clc
adc
shrb
movsl
jl
cli
mov
fisubrl
mov
cs
daa
push
pop
cli
mov
mov
out
adc
add
jne
mov
push
push
sbb
push
in
push
mov
sub
mov
and
out
sub
movl
cmp
icebp
xor
test
fidivrl
xor
or
sbb
add
cltd
test
mov
dec
mov
loope
lret
dec
jb
push
adc
adc
mov
push
rcll
iret
push
push
out
inc
jmp
mov
in
loopne
insb
push
popa
push
dec
pop
outsb
filds
pop
mov
xchg
and
loope
add
or
mov
nop
repz
add
jecxz
lock
fmuls
sbb
add
add
mov
mov
popf
push
out
aad
push
roll
xchg
sbb
rcl
leave
xor
daa
mov
dec
inc
imul
push
das
jns
repz
movsl
push
xchg
mov
push
and
enter
sub
lds
imul
repnz
mov
dec
sbb
popa
aaa
fcompl
dec
xor
movaps
xchg
popf
in
sbb
out
xor
fldcw
fists
inc
add
or
test
mov
xchg
cmp
or
adc
or
or
add
mov
stc
lods
ret
add
daa
push
cs
into
add
mov
mov
dec
mov
icebp
test
scas
mov
push
lods
testb
or
cmp
xchg
data16
sub
add
push
outsb
ja
mov
pop
enter
pop
pop
arpl
add
cld
mov
add
xor
test
add
cmpsl
ret
lds
mov
and
cmpsb
xorb
insb
jl
popl
inc
iret
inc
xor
sub
dec
stc
cwtl
mov
xor
fnstsw
rcrl
jns
jb
cli
dec
das
gs
xor
jae
aas
sub
mov
xor
and
add
fistpl
pop
movsb
jbe
in
dec
int3
pop
test
rclb
and
fbstp
cmpsl
lret
ret
rcll
mov
inc
rclb
fwait
aad
loopne
das
sbb
sbb
push
loope
push
ret
mov
out
stos
sbb
inc
aaa
addr16
cli
inc
ja
jge
ljmp
rcrb
sar
mov
sbb
or
pushf
xchg
sarl
ss
pusha
cmp
jecxz
fs
add
imul
hlt
sub
cwtl
repnz
scas
dec
jae
enter
xchg
and
sub
lahf
stos
jmp
add
add
out
cmc
mov
mov
stos
add
pop
add
add
xchg
lods
sbb
and
outsl
sti
and
lock
cmp
sbb
or
mov
push
xchg
add
sbbb
dec
pop
sub
cmp
aam
mov
ds
mov
mov
xlat
fdivrl
pop
adc
jb
sub
mov
addb
movsl
leave
ficomps
cmpsl
into
mov
xchg
in
fadds
jmp
in
dec
jle,pn
or
andb
pop
lock
mov
inc
inc
in
or
repnz
xor
xchg
mov
inc
sub
mov
rcl
ja
add
in
lods
cmp
pop
jmp
loope
fbstp
jl
mov
mov
pop
adc
mov
sub
add
divl
lods
add
xor
add
dec
adcb
lods
mulb
mov
dec
xchg
mov
inc
mov
movsb
and
xorb
fucomip
std
dec
std
pop
cmp
cmp
xor
outsl
into
stos
add
pop
add
add
mov
insl
mov
lret
inc
mov
arpl
mov
loop
sub
icebp
mov
sahf
push
insl
and
hlt
rcrl
jo
or
outsl
inc
pop
cmc
cltd
pop
addr16
xor
adc
jo
dec
hlt
xchg
sarl
adc
int
sub
mov
sbb
popw
stc
fwait
cld
cmpsb
imul
fists
ret
test
aad
int3
pop
pop
mov
push
in
inc
cmpsl
xor
into
cmc
dec
fisttpl
mov
jb
add
push
loope
push
or
xchg
mov
nop
movsb
mov
add
push
jo
dec
cltd
pop
nop
lods
pop
fidivrl
jae
jae
adc
mov
cmp
cmpsl
clc
adc
std
mov
dec
mov
and
sbb
sti
dec
addr16
sub
jno
sbb
add
fidivs
loop
ljmp
lahf
int
sub
lods
add
pop
add
add
daa
inc
nop
std
ja
fs
cld
pushf
push
stos
stos
jns
stos
std
mov
adc
mov
sub
push
mov
adc
test
sbb
inc
push
int3
mov
jl
push
sub
dec
test
stc
scas
test
cltd
pop
inc
push
inc
pop
add
mov
out
or
cmp
cmp
push
std
xlat
mov
lds
je
std
pop
mov
imul
popa
dec
pushf
dec
pop
mov
cltd
das
aad
das
test
gs
push
and
daa
add
add
inc
bnd
ljmp
outsb
test
inc
insb
iret
addr16
fstps
int
sarl
lcall
leave
std
dec
jno
pop
and
adcl
and
les
or
mov
push
push
pop
out
xchg
xchg
insl
out
out
add
mov
leave
jne
out
push
mov
push
add
cmp
inc
ds
movsb
pop
iret
leave
mov
xchg
in
popa
flds
push
xchg
jg
jmp
std
push
int
decb
lods
add
pop
add
add
nop
rorl
and
fildl
sti
ja
stos
sub
loopne
add
dec
cmp
sbb
cmp
cmp
push
push
nop
mov
sbb
ja
pop
lahf
repz
xor
ficoms
mov
nop
test
fbstp
icebp
leave
test
push
add
aam
lahf
test
push
test
in
push
imul
out
inc
iret
stos
out
sbb
push
rolb
xchg
sub
lret
mov
rorl
mov
sbb
pop
dec
pop
cli
inc
jg
cmpsl
push
outsl
push
loopne
lods
xchg
outsb
jle
dec
imul
xchg
stos
scas
mov
inc
or
out
mov
add
add
adc
or
or
cli
pop
ds
inc
bswap
inc
cmpl
xor
fwait
mov
xchg
and
fldcw
stos
daa
dec
jecxz
stos
mov
dec
data16
loope
jle
lcall
push
add
xor
dec
sarb
inc
fldl
add
add
add
leave
cmp
sarl
xchg
sbb
sbb
imul
push
adc
jmp
mov
inc
mov
sbb
outsl
mov
push
push
pusha
pushf
lahf
shlb
cmpsb
dec
paddd
xchg
adc
pop
and
push
push
in
cmp
add
cmp
sub
sbb
jno
lahf
adc
movsb
pop
je
fucom
cmp
movsl
sbb
nop
push
cmp
std
mov
and
and
mov
sbb
push
scas
jecxz
mov
cmp
sub
std
xchg
mov
mov
mov
pop
sbb
ja
adc
pop
ja,pt
mov
xchg
sub
fsts
je
cmp
in
stos
addr16
add
mov
repnz
sbb
xchg
xor
sub
stos
aad
inc
inc
push
cmp
std
cli
adc
mov
inc
push
add
xor
cmp
or
ljmp
add
ret
lods
stos
sbb
fbld
movb
sbb
xor
xlat
addr16
sbb
inc
mov
shl
jge
sbb
pop
aaa
dec
call
pushf
test
xchg
cmp
std
add
or
cwtl
xchg
sub
pop
sahf
insb
rorb
or
dec
test
xlat
cmpsb
and
ds
mov
popa
mov
jecxz
out
cmp
fwait
aam
add
mov
jnp
sarl
mov
fcmovbe
add
pop
ss
shll
cmp
add
jmp
xchg
mov
sbb
mov
or
andl
mov
dec
popf
lahf
add
in
loop
sti
mov
movsl
mov
loope
das
loope
push
or
jge
mov
shrd
rorb
sahf
aaa
mov
cmp
imul
xchg
ds
incb
es
les
mov
ret
ja
test
out
das
icebp
mov
add
add
add
jbe
xchg
cld
adc
jp
repz
std
popa
cld
sahf
inc
inc
imul
shrb
jo
pop
vpmadcswd
mov
addr16
nop
out
xchg
nop
lret
leave
inc
out
inc
inc
pop
jmp
cmpsl
jle
aam
loope
xchg
cmp
call
adc
or
hlt
int
movb
sub
jp
lret
sub
sbb
push
add
mov
mov
mov
pop
shrl
push
sbb
out
push
jmp
jns
adc
or
add
ror
sbb
outsl
add
mov
pop
out
pop
or
cli
stos
hlt
icebp
aas
xchg
push
adc
int
cli
jp
pop
xor
push
jo
hlt
or
inc
pusha
mov
cmp
test
pop
add
jbe
jge
push
inc
push
jmp
mov
mov
mov
in
js
and
and
stos
add
clc
pop
stc
out
push
push
xchg
data16
jb
mov
add
add
pop
and
sub
lcall
lret
in
outsb
sbb
insl
rorl
mov
xchg
cmpsb
mov
sub
repnz
lret
push
push
pusha
movsl
shlb
xor
leave
idivl
or
cmpsb
lahf
sahf
jle
negl
inc
sbb
or
adc
rcrb
push
mov
adc
adc
adc
sub
inc
push
push
stos
mov
sbb
movsb
sbb
popf
sbb
jno
inc
clc
jnp
mov
push
or
mov
rorb
test
jo
fwait
loop
cmp
ret
push
adcl
pop
and
cmc
push
stos
inc
sti
fs
mov
test
push
push
imul
adc
scas
cltd
fistps
mov
adc
pop
ret
lahf
mov
push
dec
mov
adc
les
mov
repnz
dec
cld
ss
test
sbb
gs
ss
popl
lds
cli
lcall
test
pushl
add
sbb
add
sahf
adc
out
or
cmp
dec
jle
cmp
inc
mov
std
divb
ds
push
cmc
addb
shlb
mov
cmp
maxps
sub
sbb
or
and
jmp
fisttps
shll
movsb
fistpl
lret
mov
es
mov
ljmp
bound
into
mov
jmp
out
das
enter
rorl
jle
rcrl
aaa
out
inc
xchg
dec
cltd
xchg
scas
mov
xor
dec
daa
je
bound
sti
call
push
pop
xchg
pop
enter
xchg
arpl
push
jge
inc
adc
sbb
test
sub
push
ds
loop
and
out
inc
fsts
addb
inc
es
pop
loopne
or
fldl
add
pop
pop
loope
xor
jp
sbb
sub
inc
add
jne
mov
xchg
movsl
jns
pop
adc
add
pop
add
add
sub
mov
mov
mov
aam
add
xchg
dec
or
adc
sbb
data16
mov
cmpsb
divb
fs
adc
sbbb
sbb
inc
inc
test
cmp
adc
idiv
and
sbb
sub
inc
outsb
and
jge
push
adc
mov
mov
pause
dec
cmp
push
aaa
stc
sub
sti
ret
pop
mov
aam
ss
loop
sbb
test
gs
add
sbb
scas
cld
arpl
push
push
cmc
shll
mov
dec
xor
mov
push
add
imul
ret
test
pop
sub
push
jg
inc
scas
movsl
stos
jmp
mov
push
loope
sub
movsb
or
loope
sbb
stos
ja
mov
inc
adc
iret
adc
scas
ja
lea
pop
or
mov
mov
adc
adc
dec
pop
pop
sbbl
cli
test
push
cmp
cmp
add
add
dec
push
adc
mov
push
mov
pop
push
xor
cli
mov
and
in
xor
in
xor
or
addr16
xchg
adc
stos
test
mov
fstpt
xchg
loop
mov
sarb
movsb
ja
lret
test
mov
inc
jb
push
add
adc
xor
and
sub
into
fwait
cld
lret
std
push
dec
test
negb
add
pop
outsb
sub
xchg
mov
leave
and
iret
xchg
mov
mov
nop
imul
out
insb
arpl
or
std
xchg
dec
rcl
push
xor
or
nop
in
sub
jae
sub
aas
jne
mov
insl
adc
mov
adc
lods
mov
adc
push
adc
fiadds
jb
aas
test
fcmove
xlat
or
push
jg
jmp
pop
dec
jmp
xor
and
add
in
mov
jecxz
out
arpl
sbb
mov
add
add
add
add
mov
arpl
dec
or
mov
cmp
loop
push
jl
test
jb
sbb
jle
xor
add
pop
sub
jmp
shrl
mov
in
push
push
push
sub
lcall
inc
xor
das
shlb
testl
pop
inc
xchg
insb
xchg
shll
addr16
adc
sbb
push
xchg
jge
or
adc
lret
rolb
leave
test
repnz
sahf
adc
mov
out
mov
hlt
cmp
call
push
ljmp
xor
lock
jmp
jbe
mov
mov
andl
pushf
mov
mov
cmpsl
inc
push
cs
sbb
dec
mov
adc
std
das
push
es
xchg
scas
pushw
pop
mov
xchg
pop
and
add
add
std
test
jg
xor
stos
add
mov
add
add
add
out
inc
mov
xor
fildll
popf
inc
lds
gs
aaa
add
sbb
dec
ss
es
popf
push
inc
leave
insl
fbstp
lcall
xor
sub
cmp
push
push
cltd
inc
popf
jmp
mov
out
lret
xor
imul
and
push
pop
or
cs
fdivrl
fs
fists
mov
add
push
out
ljmp
jl
mov
adc
jno
push
cs
imul
or
xor
inc
lcall
mul
aam
mov
adc
mov
push
in
cmp
cli
out
shlb
mov
ficoml
ss
leave
bound
dec
push
add
mov
cmp
mov
push
lret
inc
cmp
loopne
bound
add
enter
das
sbb
out
lock
in
lcall
xor
fs
fildl
add
add
add
push
mov
mov
sub
adc
bound
mov
fimull
pusha
imul
mov
mov
push
mov
ret
mov
and
adc
stos
punpckhwd
int3
addb
cmp
popa
jb
push
in
sbb
jns
mov
ja
mov
push
outsl
test
cmp
adc
adc
dec
xchg
xchg
inc
mov
or
jmp
xchg
or
push
jo
adc
ret
std
cmpb
fdivrs
adc
decb
mov
es
dec
int3
test
testl
pop
fistps
add
stc
shl
jmp
inc
jns
lret
aad
fbstp
jl
out
dec
or
cmp
xchg
pmulhuw
cmp
dec
jg,pt
jg
jnp
shlb
ret
test
jge
cmp
pop
jecxz
add
cmpsl
push
xor
jbe
mov
cmpsl
leave
sub
add
sub
jg,pt
adc
outsl
xlat
sub
sub
add
movsb
add
cmp
pop
not
insl
ljmp
push
pushf
sub
ds
shrb
js
pop
into
add
ljmp
add
push
nop
jg
movsl
aas
scas
and
pop
out
jne
sbb
push
test
sub
insb
shll
hlt
pop
or
lds
sub
shl
sub
shrl
xchg
mov
jg
dec
sbb
outsb
stc
test
lods
sahf
cmp
or
xchg
push
mov
ds
xchg
jns
les
clc
enter
cmp
scas
pop
frstor
into
adc
daa
adc
sub
icebp
sbb
clc
add
fistpll
repnz
cs
cmp
call
test
loopne
sti
sub
cs
test
jg
mov
addr16
test
jge
mov
jno
lcall
jmp
in
out
dec
push
mov
add
add
out
idiv
outsl
mov
cmp
daa
outsl
xor
add
add
mov
scas
jmp
loope
cmp
lods
cli
jmp
sti
lahf
xchg
fdivp
mov
and
jl
inc
mov
fldenv
scas
jle
out
cmp
insl
int
dec
fisubrs
sub
pop
pop
mov
xor
adcb
sub
dec
mov
add
sahf
mov
je
adc
repz
je
adc
jbe
sahf
and
lcall
pusha
mov
leave
jle
cmpsl
xorb
scas
cmp
sbbb
loop
mov
shrb
and
mov
cwtl
xorb
pop
or
push
rcrl
iret
jmp
sub
pop
xor
pop
mov
and
adc
push
mov
enter
sub
mov
mov
jmp
mov
pop
out
adc
or
int3
lret
and
add
fcompl
js
xchg
ljmp
lock
ja
add
inc
fbld
mov
verw
outsl
aaa
mov
add
jp
out
das
lods
push
cmpsb
arpl
cmp
xlat
lods
mov
out
test
xchg
aaa
scas
ret
push
sbb
mov
adc
mov
push
mov
mov
es
inc
jg
cld
insl
pop
or
xchg
out
jnp
repnz
sub
xor
out
or
arpl
jmp
into
jns
push
lods
mov
imul
mov
cld
jns
lds
movsb
das
lahf
xchg
xchg
movsl
int3
xor
lcall
das
adc
and
lcall
pop
adc
rcr
inc
lods
mov
lret
jge
mov
adc
fdivp
outsl
fwait
sbbb
clc
call
fbstp
mov
inc
mov
mov
jecxz
push
mov
lret
jmp
enter
push
out
in
in
jnp
push
add
mov
sbb
push
in
xor
shl
add
divl
movsb
and
and
push
push
call
pop
jne
lahf
ds
add
and
xor
stc
push
cmp
pop
mov
pusha
rol
cs
andb
shlb
pop
int
add
push
sbb
inc
ror
lods
cltd
stos
outsl
out
arpl
jecxz
in
test
out
mov
pop
mov
add
pop
imul
shlb
or
movsb
add
sahf
aam
test
jbe
and
aam
leave
into
jl
mov
and
mov
int
js
sbb
dec
jns
xchg
add
add
cmp
jns
in
arpl
mov
mov
rclb
jl,pt
or
sbb
cmp
icebp
std
jp
jmp
shl
sub
jmp
cmp
jmp
sbb
mov
mov
jae
and
xor
movsl
out
mov
shll
ja
sti
jl
mov
insl
jae
test
add
add
std
sti
leave
sti
iret
jmp
dec
mov
into
inc
mov
add
ficoml
jl
jmp
sbb
rcl
jne
cwtl
mov
test
sbb
sar
sti
imul
pop
dec
xor
icebp
sbb
data16
out
add
fdiv
push
in
imul
popf
push
cli
cmp
mov
and
adc
les
adc
imul
pop
mov
mov
lock
sub
jne
out
push
fs
dec
cmp
fists
sahf
dec
jno
movsl
scas
cs
sub
lds
dec
add
mov
push
jg
faddp
daa
pop
cmp
push
mov
pop
dec
shrb
aam
cs
jns
push
movsl
adc
test
call
xchg
repz
sub
aad
inc
jecxz
aaa
fmull
sub
aad
into
addr16
mov
sub
mov
mov
xchg
pop
scas
pop
les
add
add
add
imul
vpsrlw
or
xchg
jl
lret
dec
mov
clc
nop
mov
sarb
cmpsl
lds
adc
lcall
scas
jg
cmpsb
push
or
mov
xchg
int
push
jg
mov
fucomp
add
fisubs
popa
mov
bound
mov
and
jae
dec
add
pop
aas
add
roll
mov
clc
movsl
or
fcomps
popf
fisubs
sbb
loopne
or
xor
scas
mov
mov
ljmp
pop
mov
fildl
sbb
sub
fmuls
push
test
or
mov
repnz
xchg
fcomps
pop
cmp
inc
xlat
mov
cmpsl
test
pop
mov
jp
mov
pop
xor
test
aad
add
jle
scas
scas
into
cmpsb
pushl
aaa
adc
add
jg
mov
xor
sub
push
mov
add
fnstcw
pusha
sbb
xchg
repz
rcr
fstl
imulb
dec
mov
jg
mov
inc
jb
iret
xchg
mov
aam
inc
jmp
inc
cltd
call
push
push
ficoms
push
mov
xchg
and
dec
inc
add
in
pushf
lock
iret
cmc
fstps
mov
divb
loopne
adc
push
hlt
call
shl
xchg
xchg
es
xor
idivl
gs
test
pop
jbe
clc
test
cld
and
mov
mov
sub
sbb
call
pusha
lret
in
int3
inc
push
xchg
sbb
fadds
cmp
mov
sub
or
ret
mov
dec
loopne
push
inc
add
inc
sub
leave
adc
int
in
inc
sub
add
sbb
dec
outsb
mov
add
in
jmp
add
xor
push
cld
pushl
into
fnstcw
pop
rolb
pop
add
add
push
insl
dec
out
sub
rorb
addr16
clc
push
jns
and
das
or
hlt
jge
lahf
xchg
aam
in
xchg
lcall
sbb
out
jne
lret
or
aam
aas
ss
imul
inc
and
iret
shlb
hlt
mov
jbe
inc
loope
lods
das
lods
out
xchg
in
pop
into
frndint
cmp
mov
sti
sub
adcl
out
imul
sbb
ds
orb
in
out
pop
outsb
fwait
aad
dec
add
mov
inc
add
inc
test
xchg
add
cmpsl
jmp
nop
data16
sub
mov
jge
inc
xor
xor
imul
mov
pop
mov
pop
fsubrl
sbb
fwait
sbb
xchg
add
pushf
shrb
xchg
mov
stos
popa
roll
pop
add
add
addr16
pop
data16
dec
adc
lahf
lret
jecxz
push
stos
ret
int3
fsubrp
sub
mov
jmp
mov
push
das
je
lcall
mov
test
les
push
and
sbb
xor
xor
adc
loope
leave
push
pop
push
sub
mov
adc
shrb
cltd
dec
inc
idivb
ss
sbb
jae
push
sahf
dec
cmp
decl
sub
fcmovbe
mov
mov
inc
out
cwtl
shll
orb
or
cltd
inc
push
sbb
sahf
repz
push
fsubp
cmp
jmp
xchg
fucomip
or
imul
mov
test
fld1
xor
push
push
or
mov
addl
adc
mov
dec
hlt
mov
out
icebp
addb
add
add
test
mov
fucomip
imul
add
add
add
xor
push
fcoms
sahf
xor
mov
jmp
outsl
sbb
sub
xchg
sbb
push
ret
test
loopne
mov
mov
mov
loop
xor
sahf
xor
outsb
out
out
loope
sub
inc
dec
movsl
pop
decb
jo
dec
xchg
mov
jbe
int3
pop
leave
iret
adc
xchg
dec
mov
shlb
sahf
dec
daa
fcmovb
insb
pop
cld
sbb
lahf
andb
jmp
inc
or
fs
add
ljmp
inc
pop
addr16
push
insb
fnstcw
adc
mov
fmuls
mov
cmp
int
pop
sbb
dec
ljmp
popa
pop
icebp
xchg
pop
in
xchg
jns
xlat
scas
xor
cmp
mov
rorb
or
xchg
adc
or
add
pop
in
icebp
aad
push
xchg
test
pop
pushf
out
ljmp
adc
xor
jnp
das
add
jne
jne
jg
loop,pt
lret
and
outsl
ret
add
pop
add
add
fwait
lahf
pushf
test
insl
shr
fwait
loope
aad
sbb
cmp
cmp
add
mov
movl
imul
cmpsb
insb
icebp
sbb
xlat
mov
cmc
lret
and
sahf
dec
fs
xchg
imul
nop
jg
or
sbb
shrb
cmp
cmp
jnp
mov
pop
mov
stc
xchg
mov
inc
mov
daa
movsl
dec
shll
jl
add
pop
xor
ss
sarl
pop
push
xor
add
ss
pop
push
cli
insb
mov
mov
add
xor
cmp
scas
and
jge
xchg
sub
pop
arpl
test
std
ja
sub
push
jl
mov
ljmp
test
inc
roll
loopne
aam
xor
clc
test
dec
inc
cmp
sarl
add
dec
pop
mov
mov
dec
add
inc
fdivs
add
pop
add
add
data16
fisttpl
jbe
imul
adc
mov
mov
jne
lcall
jg
pop
dec
fidivrs
daa
test
or
xchg
rcr
adc
test
inc
sbb
dec
std
sbb
inc
fs
imul
inc
scas
jb
sahf
fisubrs
or
cmp
xchg
inc
in
add
push
gs
jle
loop
mov
mov
jle
mov
sti
aas
hlt
loope
cmp
mov
movsb
add
jno
lret
xchg
sub
sub
aam
inc
bsf
pusha
in
adc
out
sbb
add
cmp
lock
shr
xchg
dec
jmp
nop
jle
lret
mov
enter
fisttpl
push
repnz
insl
cld
push
or
sub
and
fimull
lods
pop
dec
inc
lahf
dec
jp
jg
lds
xchg
insb
jnp
mov
call
sahf
out
test
test
add
add
outsb
jle
lods
testl
xor
xor
add
pop
add
add
and
rclb
mov
lcall
shll
fistl
mov
sub
mov
int
test
int
cwtl
popa
mov
mov
popa
pop
and
dec
mov
shl
lock
add
inc
ret
in
imul
push
ljmp
jecxz
adc
rcrl
inc
inc
or
lods
inc
or
mov
mov
dec
scas
pop
fbld
and
int3
cmp
adc
imul
or
lea
stos
rsqrtps
pop
mov
ret
leave
fdiv
fwait
cmpsb
lcall
and
sub
ljmp
pop
fisubrs
daa
add
jl
cmpl
dec
push
adcl
stos
jns
pop
xchg
sti
add
mov
or
push
push
mov
outsl
xor
push
fildl
mov
mov
jp
arpl
iret
xchg
mov
test
add
pop
add
add
jno
push
adc
xor
push
pop
xlat
fidivs
cs
mov
jno
sub
outsb
or
jns
and
cmp
and
jmp
fmuls
fwait
aaa
mov
push
je
sub
cmp
dec
jg
popa
data16
rcrl
inc
ja
das
daa
sub
sbb
mov
xchg
mov
lock
ret
jb
jae
cmp
fs
jb
addr16
sti
movsl
test
scas
icebp
mov
pop
test
inc
pop
fcoml
inc
sbb
subl
idivl
imul
loopne
shl
call
rcl
cld
sbb
mov
fbld
out
xlat
push
sbb
mov
dec
popa
mov
mov
lock
aad
fisttps
fdivs
xchg
push
adc
xorb
cli
jne
add
push
out
insl
push
loop
inc
mov
ljmp
dec
add
out
sti
xlat
push
aam
or
sub
testb
add
xor
push
cmp
add
jg
jecxz
add
adc
test
inc
mov
jl
sub
fwait
test
aad
movsl
dec
pop
clc
inc
pop
inc
add
xor
pop
movsb
test
jge
mov
inc
test
mov
jge
imul
icebp
inc
sti
or
arpl
sbb
add
and
sbb
sub
mov
out
nopl
xchg
bound
testl
loop
subl
lea
sti
sub
cs
ret
xor
dec
fisubl
jmp
out
mov
lds
lods
jns
jnp
jo
scas
jmp
pop
movsb
dec
xor
dec
in
in
push
or
int3
std
lret
xchg
or
jnp
sbb
dec
pop
ja
push
ljmp
pusha
lods
and
cli
cmp
sbb
out
jns
data16
iret
dec
fildl
daa
add
jle
push
push
sub
testb
add
add
push
sub
cmp
jg
dec
das
pop
mov
enter
add
add
xor
je
mov
inc
mov
loopne
jbe
ret
adc
je
or
lea
ss
push
out
cmp
inc
ret
jnp
in
hlt
push
push
mov
mov
mov
cli
mov
mov
in
stos
es
inc
mov
test
pop
mov
insl
loopne
xchg
mov
pop
in
cmp
mov
popf
mov
inc
pushf
jp
addr16
mov
add
cmp
cs
mov
enter
aad
dec
jmp
jmp
ret
in
sbb
lcall
repz
out
and
or
mov
mov
fwait
adc
xchg
xchg
cmp
xor
dec
inc
push
adc
mov
movsb
aas
pop
add
xor
out
mov
out
cwtl
into
jle
lret
jecxz
or
jo
jecxz
nop
pop
fs
add
xor
fistpll
out
repz
cmp
add
add
add
daa
mov
outsl
shll
jecxz
cmpsl
gs
cmpsl
outsl
pop
dec
mov
les
loop
test
mov
sti
cmovle
std
push
and
or
aam
cmpsb
mov
push
icebp
sbb
push
outsb
aas
out
hlt
out
fistpl
or
iret
xor
add
inc
fstps
movsb
jns
mov
test
lret
pushf
into
push
out
jecxz
imul
dec
fists
and
fimuls
shll
mov
das
mov
xchg
lods
push
imul
test
fmull
lret
adc
sbb
pop
test
sbb
jb
int3
les
push
or
iret
mov
rcrb
sbb
outsb
add
cmpsl
mov
enter
shlb
sbb
out
sbb
call
add
outsb
imul
xchg
mov
pop
jecxz
pop
pop
push
sub
scas
cmc
push
add
mov
and
lret
pop
add
add
test
cmpsb
mov
push
cmc
sbb
adc
outsl
je
dec
adc
and
sub
cmpsl
adc
repnz
jb
adc
or
push
sbb
mov
pusha
outsb
movsb
inc
insb
push
dec
push
outsb
out
loop
jle
dec
mov
imul
dec
pop
ret
test
int
mov
rorb
mov
loopne
jge
ret
imul
flds
loope
ret
sub
dec
in
lds
adc
sub
xor
xor
adc
fcmovbe
inc
sub
out
cmp
sub
and
push
mov
dec
pop
ret
mov
jg
push
inc
bnd
lcall
lea
add
or
mov
mov
in
push
push
dec
rclb
rorb
loopne
sub
pop
int3
add
enter
in
adcl
cmpsl
lret
add
pop
add
add
testl
mov
lods
add
fs
in
xor
clc
xlat
test
nop
mov
jmp
pause
lret
add
js
push
stos
rolb
fistl
jmp
cmp
inc
out
xor
sbb
push
call
lock
cmp
pop
faddl
lods
outsb
cwtl
add
cmp
cld
xor
xor
jnp
mov
lods
scas
rorl
push
dec
add
lock
in
in
jmp
test
test
lods
mov
inc
bound
sub
adcb
int3
push
xorb
pushf
clc
mov
test
or
lods
outsb
dec
jl
pop
push
mov
sub
in
jg
push
stos
cmpsb
sub
pop
test
fs
scas
push
jle
cmp
lods
test
lret
mov
btc
sbb
int
dec
aaa
xchg
loopne
rcrl
xlat
xchg
pop
icebp
add
popl
icebp
in
add
imul
cmc
decl
add
scas
int3
add
pop
add
add
xchg
push
xlat
enter
and
cmp
push
iret
iret
fdivl
pop
out
mov
lret
mov
imul
xor
test
push
mov
xchg
fdivs
adc
fcmovbe
mov
mov
xor
in
cmpsl
cs
xchg
rcl
sbbl
inc
jge
out
add
mov
cltd
mov
fsubrl
sbb
stos
aam
sbb
jmp
imul
mov
mov
out
testl
push
jecxz
lret
leave
jg
fsubl
cmp
and
imul
popf
mov
pop
xchg
negb
popa
lret
pop
popf
cmpsl
shrb
jle
imul
insl
inc
jg
test
jae
pop
fwait
mov
jle
jl
jnp
sti
and
subl
sub
mov
dec
push
or
jl
xchg
jp
lds
or
repz
dec
cmp
arpl
dec
jle
aas
adc
movsl
mov
iret
arpl
or
pop
xchg
mov
add
pop
add
add
sti
cmp
push
rcl
xor
sbb
xchg
test
loopne
sub
shll
test
aas
jno
mov
adc
jne
lods
rclb
cmpsl
mov
or
fmull
xlat
lds
pushf
mov
bound
xor
mov
fldl
xor
fwait
ljmp
mov
ja
popa
sbb
fwait
js
jp
adc
xor
sub
ret
sbb
xor
aad
or
xor
mov
xor
dec
aam
stc
fstps
adc
pop
loop
out
and
movsb
add
xchg
pushl
clc
leave
pop
mov
mov
mov
or
pop
pop
add
ficomps
mov
add
add
cmpl
shufps
fstpt
loope
popa
pop
cld
push
pop
add
out
into
shlb
or
mov
add
add
sub
push
test
cwtl
jg
or
mov
xchg
mov
call
mov
push
push
xchg
mov
adc
or
pushl
inc
mov
scas
cmpsb
ret
add
ficoms
sub
mov
outsb
loope
lea
je
push
jg
push
in
pop
in
dec
push
stc
inc
int3
and
mov
es
stc
dec
lahf
pop
test
enter
xor
dec
je
sbb
push
scas
dec
xor
mov
xorl
add
mov
pop
popf
pop
mov
mov
dec
adc
xchg
mov
lret
ficoms
or
inc
xor
sub
pusha
mov
fmull
mov
fists
aad
add
leave
out
orl
ljmp
add
movsl
cmp
pop
push
mov
sbb
mov
add
xchg
and
je
out
mov
in
jns
jg
iret
add
pop
add
add
dec
lods
idivl
mov
in
xor
adc
popf
daa
jo
add
adc
rorl
repnz
push
sarb
aam
stc
sbb
jbe
mov
add
add
and
jno
xchg
inc
adc
rcr
mov
xchg
push
cs
dec
popa
dec
ds
push
mov
xchg
or
xor
pop
rol
inc
outsl
addr16
lock
data16
inc
dec
cmovp
ret
jnp
cs
xchg
push
lock
fisubs
or
or
movsb
sbb
movsb
out
pop
loop
js
mov
sub
push
in
inc
jecxz
dec
mov
inc
xchg
cmp
enter
loope
int3
stos
mov
inc
and
shlb
inc
mov
push
popa
fdivrs
int
sbbb
xchg
loope
push
cmp
add
add
dec
daa
dec
das
outsb
imul
sub
adc
lret
add
pop
add
add
rolb
popa
rolb
or
mov
adc
in
dec
cmp
push
mov
cmp
jg
movsb
ds
mov
jle
rcrl
add
bound
or
xor
fdivl
and
and
out
repnz
push
dec
jbe
mov
mov
test
and
xchg
imul
cmp
adc
bndstx
pop
cli
in
mov
xor
adc
in
push
adc
xor
adc
mov
jo
mov
push
dec
out
stos
mov
call
cmc
lret
scas
sbb
aaa
mov
test
std
insb
fdivp
sub
test
adc
xor
ret
lock
push
clc
sbb
sbbb
fldenvs
dec
mov
add
sbb
fnstsw
aad
sub
dec
jecxz
out
ret
mov
add
add
popf
mov
lahf
xor
add
rcl
add
pop
add
add
and
xor
xor
loopne
push
int3
inc
dec
mov
test
add
test
jbe
cmp
insl
in
jae
rcr
xchg
add
in
push
dec
pop
outsb
sub
xchg
jne
pop
cmp
in
sbb
jbe
xor
lds
clc
jne
loop
or
aad
mov
je
jnp
dec
pop
out
in
dec
inc
add
daa
dec
dec
or
bound
fistl
mov
imul
lods
nop
fcompl
xor
stos
mov
mov
test
mov
popf
cmp
push
mov
mov
loop
ds
push
ljmp
stos
dec
icebp
pop
xor
les
subb
push
fistpl
arpl
sub
dec
xchg
mov
out
daa
adc
sub
lret
push
or
imul
mov
add
neg
outsl
xor
fsincos
adc
sbb
add
add
sbb
xor
push
pop
fistl
aam
cwtl
out
mov
and
inc
lods
push
add
inc
inc
jo
sub
push
and
out
incb
sub
rorl
or
mov
in
and
push
push
mov
repnz
stc
ljmp
adc
adc
push
xchg
gs
push
dec
dec
adc
push
inc
mov
and
rol
xor
xchg
adc
xchg
dec
cs
sbb
icebp
xchg
inc
push
cmp
cmp
pop
push
and
loope
xor
mov
jne
mov
xor
and
fucomip
mov
and
adc
push
adc
push
std
mov
andb
jg
loop
push
xlat
jno
pop
fbstp
mov
push
push
sbb
in
xchg
mov
sbb
pushf
mov
es
xor
add
sbb
in
and
xor
xchg
add
pop
add
add
xchg
lcall
or
adc
cmp
stc
mov
mov
insb
pop
and
outsb
bound
cmpsb
lods
insl
dec
add
test
dec
js
push
lods
sub
aam
out
or
imul
idiv
inc
js
jne
mov
jle
adc
lock
pop
sarb
jge
loop
sbb
scas
sarl
push
and
clc
pushf
and
jnp
jns
jmp
dec
dec
lret
bound
push
mov
jmp
nop
aam
pop
dec
pop
xor
adc
mov
je
ret
cwtl
ljmp
mov
rcll
sbb
inc
cmp
dec
push
mov
test
stc
pop
add
loopne
or
adc
pop
sbb
inc
mov
stc
jno
dec
test
xor
fdivrp
pop
sbb
in
stc
add
loopne
inc
mov
mov
pushf
adc
ds
stc
or
ja
out
add
pop
add
add
mov
dec
ret
fsub
negl
sarl
ljmp
push
mov
popf
jbe
xchg
mov
jb
jo
jbe
cmp
fistpll
mov
jns
icebp
pop
clc
jo
ja
or
xlat
bound
pop
test
inc
dec
pop
outsb
cmp
jbe
sub
jecxz
xchg
in
aaa
inc
add
mov
imul
mov
pop
adc
fisubs
js
mov
push
bound
fwait
dec
stc
sbb
jecxz
or
cs
imul
out
jmp
and
xor
add
mov
jo
shrw
cmp
pop
mov
fmuls
std
pop
or
push
or
ficompl
adc
fs
push
or
iret
xchg
jp
push
sbb
sbb
add
imul
or
cwtl
js
push
sbb
gs
xchg
add
lcall
fldl
jno
in
aad
add
add
add
or
dec
popa
inc
pop
xchg
sti
repnz
push
pop
mov
xchg
cmp
popf
cmpsb
shrb
inc
lods
cli
sub
adc
pop
in
mov
cltd
pop
or
sbb
inc
cmp
pop
inc
fcomps
sbb
jnp
cmp
outsl
mov
pushf
push
outsb
cmp
xchg
vpsubusw
add
inc
clc
hlt
jge
mov
push
loope
push
and
pop
loope
dec
mov
aas
int3
adc
xor
push
adc
fadd
ljmp
mov
jns
out
lea
clc
daa
xor
mov
fistl
andb
xchg
fwait
adc
arpl
xlat
stc
pop
xchg
inc
and
test
jno
in
lock
pushf
push
add
jl
inc
repnz
mov
outsl
cltd
jo
loop
add
adc
push
insb
add
xlat
push
and
test
mov
jge
jmp
add
xchg
ja
push
jg
xchg
mov
mov
hlt
add
pop
add
add
adc
pusha
lds
pop
pop
lods
das
add
inc
add
adc
inc
ja
mov
dec
scas
mov
fiadds
mov
out
into
and
or
loopne
lcall
std
dec
mov
jmp
loop
dec
pop
or
inc
push
lods
cmp
lret
dec
in
dec
adc
shll
fstpl
push
idivb
cmp
add
test
loope
push
inc
pop
inc
cs
dec
xor
xor
jg
adc
xchg
mov
cwtl
or
cli
enter
and
jbe
xor
jge
cli
ret
pushl
popf
sbb
sub
popa
sub
insl
sub
test
shr
and
mov
inc
fcomps
mov
mov
or
and
out
sbb
xchg
pop
jl
pop
aam
outsl
dec
fldl
fwait
loope
inc
int
aas
add
int
out
out
imul
aas
cld
push
js
jnp
sti
xlat
add
pop
add
add
int
into
push
movsl
push
insl
push
jmp
mov
add
shrb
xchg
dec
and
lret
sbb
dec
fdiv
cmpsb
push
sub
pop
push
mov
xchg
lods
jo
cmpl
cmpb
and
push
inc
dec
dec
adc
orl
inc
ljmp
ss
aam
or
loope
fidivrs
mov
mov
fsubrl
dec
xchg
test
cmp
ret
mov
xchg
in
and
push
cli
fistpll
xorl
pop
pop
lret
cmp
lahf
mov
dec
xchg
mov
xor
in
in
call
inc
or
mov
ds
push
dec
xor
sbb
fimull
out
ret
and
or
cmpsl
jg
mov
or
push
scas
xchg
push
rcrl
mov
jle
cmpsl
popf
popa
push
movsl
or
lret
add
psubusw
push
adc
xchg
sbb
dec
jns
flds
add
add
add
mov
fisubs
pop
jl
cltd
sahf
ret
mov
push
or
jbe
call
xor
jg
or
stc
mov
adc
adc
xor
adc
pop
sbb
dec
rcll
repnz
adc
cmp
sbb
mov
push
or
or
xor
shll
dec
in
dec
inc
xor
mov
xchg
pop
sub
pop
les
jp
sbb
mov
lcall
stos
xlat
inc
inc
mov
sbb
mov
mov
inc
mov
lods
cmp
mov
adc
xchg
inc
les
pop
pop
insb
cmpsb
or
scas
push
xor
jno
shrl
sub
hlt
fwait
sbb
jecxz
adc
lods
dec
xor
insb
scas
in
lahf
xor
hlt
xchg
adc
xor
xchg
or
rorb
shll
lods
dec
xor
cs
add
jno
push
pop
test
cmovnp
mov
adc
add
add
sbb
sahf
cmc
fsubrp
jnp
push
xor
stos
or
add
pop
add
add
hlt
push
adc
xor
out
rcr
or
inc
jl
pop
inc
es
add
rcl
bound
es
push
jg
test
pop
aas
mov
xor
sahf
je
loopne
push
hlt
add
cltd
out
or
xor
test
adc
mov
pushf
cmc
jae
pop
and
inc
sbb
out
sarl
jecxz
rcrl
xchg
push
adc
pop
shl
fbld
dec
push
mov
adc
dec
roll
call
mov
pop
insb
xchg
les
dec
mov
test
iret
xor
jle
inc
and
fs
and
mov
lret
xchg
xchg
lahf
sbb
mov
int3
pop
xor
mov
cltd
cmp
cmc
shlb
and
xor
mov
xchg
mov
cwtl
fisttps
xor
xor
nop
mov
outsb
push
sub
fstpt
pop
dec
jle
jg
std
fisttpl
inc
push
dec
lret
add
pop
add
add
mov
adcb
mov
addl
pop
add
sbb
outsl
out
sahf
dec
cmp
insl
fisubrs
push
dec
pusha
mov
out
ror
sbb
mov
cwtl
test
ljmp
pop
inc
adc
test
cmpb
xchg
fs
pop
push
pop
ret
push
and
dec
out
mov
add
paddusb
and
adc
dec
in
in
xor
sub
jg
int3
mov
mov
or
into
cmp
push
es
sar
in
les
inc
call
movsl
inc
icebp
jo
or
fcomps
das
sub
lods
jns
dec
call
mov
push
jle
fisubrs
xchg
subb
cltd
aad
inc
push
cs
jae
and
and
adc
mov
cmp
aas
sbb
in
mov
test
popa
incl
add
mov
sti
idiv
lods
push
mov
push
add
add
add
cwtl
and
adc
clc
mov
mov
jmp
mov
dec
idivb
daa
popa
movsl
cmp
jmp
push
sbb
dec
mov
jnp
arpl
fs
mov
cmpsl
cmp
aad
add
jbe
clc
cmp
mov
lea
popa
aam
inc
adc
loop
xor
sbb
mov
pmaddwd
or
and
in
push
js
xor
add
cmp
mov
in
popf
and
and
int
mov
push
jno
insl
hlt
or
cmp
fstl
cmp
aam
sub
cmp
decl
mov
or
mov
mov
andl
sbb
outsb
in
int
mov
mov
mov
xchg
vmulpd
jno
inc
ror
jl
fsubrs
inc
lcall
in
sub
mov
add
adc
leave
jmp
addr16
icebp
gs
movsb
push
fldl
add
add
add
fcom
push
dec
mov
and
xchg
adc
mov
in
loop
xchg
and
das
sbb
xchg
adc
mov
mov
inc
xchg
mov
jb
xor
sbbb
xchg
lods
jge
sub
rorb
mov
lcall
jp
inc
cmpsb
adc
mov
into
int
movsl
cmpsb
pop
and
fstps
fisttps
pop
mov
orb
das
jl
mov
xchg
mov
js
xchg
mov
enter
push
aas
pop
add
and
dec
loop
xchg
sub
scas
scas
xchg
xchg
test
mov
lock
pop
in
std
dec
xchg
out
and
stos
xlat
xor
sahf
out
or
xor
icebp
fcoms
stos
int3
xchg
repz
data16
fidivs
movsl
adc
andl
je
xor
sub
fwait
lods
sub
lds
add
push
out
jb
shrl
and
add
add
xchg
sub
stos
pop
out
fs
ret
push
js
push
inc
mov
jne
movsl
int3
mov
mov
sub
pop
fs
xchg
mov
ds
sub
adcb
adc
shrl
jp
and
cmp
std
push
sub
es
pop
lods
daa
cmpsl
stos
push
adc
adc
les
dec
and
or
xchg
cmp
push
cmc
adc
pop
sub
cmp
push
popf
sahf
mov
inc
fstpt
cmpsl
sub
push
in
repz
inc
loope
and
adc
jge
pusha
negb
add
enter
dec
dec
outsb
sbb
das
pusha
in
stos
scas
mov
cmpsb
add
leave
out
aam
xchg
loope
jp
int
pop
adc
or
add
sti
addr16
sbb
cli
cli
adc
gs
xchg
insb
cmp
mov
lret
sbb
lods
cli
add
mov
lcall
iret
mov
stc
xchg
mov
add
add
add
aas
std
cmp
movsb
js
add
rorb
jbe
pushf
pop
mov
mov
xor
js
push
in
outsb
dec
mov
or
mov
push
lahf
shlb
xor
imul
add
stos
cwtl
in
subl
xor
or
mov
pop
test
push
scas
ss
push
xchg
cmpb
mov
popf
es
or
sbb
xor
sbb
mov
in
fbstp
push
out
dec
stc
outsb
fiaddl
data16
push
jae
push
or
js
mov
ja
das
mov
rolb
push
pop
push
mov
int3
cmp
shrl
xchg
mov
dec
insl
test
ficoms
data16
inc
call
sbb
jb
add
mov
mov
ret
es
sbb
fs
testb
dec
cmp
add
add
mov
jns
in
xchg
jmp
fbstp
loopne
add
add
add
rcr
ss
lock
jbe
xchg
dec
push
shll
jmp
xor
es
aas
sbb
cmp
pop
mov
mov
in
out
jbe
idiv
sbb
out
push
imul
outsb
rorb
sarl
inc
fsubr
test
out
mov
test
inc
adcl
xchg
xor
mov
lods
mov
or
xor
mov
in
dec
jmp
push
ljmp
pop
sbb
js
or
push
stos
sbb
or
cmp
mov
inc
scas
jl
cmp
ja
sbb
pushf
imul
imul
dec
sarb
pop
inc
fcmovb
push
add
xchg
inc
and
dec
jno
xchg
and
jae
pop
loope
xchg
incb
imul
out
cmpb
inc
lret
adc
and
mov
hlt
imul
mov
shl
jge
mov
jae
fadd
fsubp
jnp
mov
mov
cmp
add
pop
add
add
mov
stc
out
lods
mulb
into
pop
xor
out
push
sub
sbb
js
ds
arpl
inc
push
add
and
sbb
xchg
lahf
std
xchg
scas
rcll
lcall
jmp
test
movsl
jp
fldenv
aam
scas
push
dec
jle
shll
push
inc
mov
pop
cmc
adcb
popf
inc
xchg
dec
data16
aaa
jmp
cmc
xchg
mov
aas
xlat
push
jno
and
mov
out
sbb
or
ljmp
or
jle
rcrl
jno
es
cld
fistpl
jbe
in
icebp
adc
push
adcb
cmc
jae
pop
add
aam
cmc
and
push
inc
sbb
xor
mov
and
push
cmpsl
cmp
pop
dec
int
pop
jae
lret
aas
pop
xor
outsb
addl
mov
or
jne
fistpl
jle
in
add
sub
cld
cli
jle
fmuls
push
add
inc
loop
add
add
add
mov
xor
mov
or
sarl
ds
pop
in
in
fldt
pop
xlat
aad
imulb
aaa
clc
push
jp,pt
or
sub
dec
test
outsl
sbb
jp
ss
out
out
stos
mov
adc
sub
je
mov
xchg
lods
leave
mov
insl
loope
lahf
adc
xchg
sbb
lcall
push
mov
mov
adc
push
outsl
jb
divl
int
in
out
sub
clc
stc
sub
sbb
ret
sti
sub
int
mov
stos
sbb
sarl
cmpsb
movsl
push
dec
iret
cmpsl
pop
rcrb
or
or
loop
cmp
fs
xchg
adc
and
cwtl
repz
out
pusha
xlat
ds
sarl
push
jb
movsl
xchg
lock
movsl
lds
sbb
cmpsb
andl
xor
roll
adc
je
pop
rolb
add
ja
sti
ret
or
pop
dec
imul
add
pop
add
add
mov
pusha
xor
push
adc
insl
sub
fadd
cmp
xchg
in
sub
incb
jno
xchg
aam
test
inc
sub
jne
add
lea
ja
push
and
lods
insb
jb
fs
iret
or
and
lcall
cmpsl
xor
lock
cmp
dec
imul
arpl
fstpt
xor
cmp
repz
fisubs
aad
xchg
jo
test
sbb
outsl
add
test
addb
pop
dec
sub
mov
lret
repz
mov
imul
cmpsb
inc
inc
out
ds
and
xchg
cmp
jo
rcll
or
fistps
mov
shrb
jp
xchg
adc
lods
mov
dec
inc
adc
add
int
xor
pushf
clc
mulb
dec
int
sar
or
in
pushf
inc
fsubs
pop
add
or
adc
add
ror
cltd
outsl
mov
int3
pop
and
lods
test
pop
add
add
inc
mov
xor
bnd
test
adc
xor
xchg
cld
cmp
jnp
cltd
ret
jmp
cld
mov
dec
mov
ss
and
es
jmp
or
xor
jno
or
sti
mov
xchg
xchg
lret
mov
scas
lds
or
icebp
outsl
movsb
push
stc
lods
sti
into
int
jo
pushf
das
bound
ret
xor
pop
push
daa
cmp
push
xor
cmp
fists
push
add
and
lock
mov
idivb
std
pop
repnz
lret
cmpsl
je
xchg
insl
adc
cmpl
mov
ss
aaa
inc
xor
and
push
cwtl
mov
sbb
sti
jnp
cmpsb
mov
dec
adc
jge
outsb
sbb
test
jo
push
decl
jl
adc
lret
ret
mov
test
outsb
sarl
popf
fnstenv
int
push
sbb
les
cltd
cmc
adcb
fcos
add
nop
repz
adc
push
in
add
add
add
dec
ret
test
pop
pushf
push
out
mov
aam
arpl
ret
dec
sbb
rcl
icebp
xlat
repnz
sub
inc
imulb
mov
ljmp
dec
push
pushf
xlat
mov
mov
dec
mov
mov
lea
dec
pushf
stos
lea
xor
jo
mov
push
dec
adc
mov
std
mov
inc
or
or
inc
hlt
scas
div
adc
mov
bound
std
mov
mov
mov
jo
stos
jne
cwtl
add
inc
gs
lret
test
or
mov
fbstp
push
mov
xchg
add
mov
mov
loop
les
insb
sbb
dec
xorb
popf
lahf
rcl
sbb
fxch
mov
imul
cwtl
pop
xchg
cmp
popa
rcr
mov
and
aam
dec
xchg
and
repz
lock
jg
mov
clc
sub
add
pop
add
add
jno
xchg
mov
xor
out
mov
loopne
js
dec
dec
cmpsb
cli
loopne
add
ret
jnp
push
mov
insl
in
or
stos
mov
xchg
aad
jecxz
inc
jbe
xorb
push
lods
mov
or
pushf
outsl
jb
dec
loope
push
stc
int
aas
push
rcrb
cmpsl
and
push
pop
divl
test
in
add
popa
jecxz
into
push
mov
or
pop
push
mov
pushf
xchg
mov
sbb
daa
add
clc
push
jae
mov
push
jmp
sub
mov
jno
icebp
and
imul
xchg
ret
movsl
xchg
xor
fdivrs
nop
jae
jl
rcll
in
xlat
clc
and
ljmp
adc
cmp
mov
ret
sub
int
cmp
test
push
mov
gs
lahf
mov
add
pop
xlat
fldt
push
mov
add
add
add
xor
lret
push
and
test
push
mov
aad
je
xor
cmp
lret
push
out
shrl
add
mov
and
out
or
nop
int
add
shr
sahf
sub
repnz
jg
or
fbstp
popa
inc
dec
cmpsl
les
push
mov
pop
or
or
cmp
in
inc
pop
push
sbb
adc
clc
je
gs
push
cmp
push
mov
out
sbb
xchg
in
lret
cwtl
sahf
in
out
fists
fadds
ror
loop
sbb
leave
mov
jmp
pop
and
xchg
popa
jle
sbb
push
mov
xor
cltd
fildl
fnsave
pop
aam
add
in
push
cmp
adc
mov
subb
xchg
mov
add
add
mov
dec
js
stc
mov
mov
sbb
add
pop
add
add
mov
xor
pop
xchg
push
jb
cs
sahf
subl
pusha
pop
test
or
cld
mov
jo
xchg
lcall
fwait
enter
call
lods
repz
ljmp
in
nop
aaa
mov
mov
pop
fmuls
insl
daa
das
js
fcomp
mov
clc
mov
or
test
or
icebp
sbb
in
cmp
pusha
cltd
or
paddb
out
into
sarb
lcall
lcall
icebp
stos
sbbl
xor
dec
repnz
dec
dec
jb
mov
mov
push
and
ljmp
movb
mov
and
mov
cmp
sub
sub
lods
sbb
or
pop
fs
jle
dec
xchg
icebp
aam
mov
data16
mov
shufps
add
add
insl
repz
jae
jg
dec
xlat
adc
jmp
add
mov
pop
pop
adc
jecxz
or
push
and
fwait
pop
xor
aam
bnd
es
imul
jp
inc
jp
dec
xchg
or
sub
in
lds
mov
adc
sub
cmp
out
cmp
gs
es
sti
push
out
mov
aam
adc
fldcw
cld
inc
push
shrl
notb
jae
outsb
mov
xchg
xorb
das
sbb
xchg
inc
nop
insl
lds
mov
jge
push
rcr
in
pop
test
arpl
popa
mov
ret
fcomp
loop
dec
sbb
outsb
clc
movsb
std
pop
out
int3
outsb
repnz
pop
xor
push
popa
jecxz
mul
outsl
cmp
sbb
cmpsb
add
push
inc
ss
adc
sbb
adc
lcall
jnp
fs
mov
cmp
sahf
popa
ljmp
sub
add
add
mov
pxor
jnp
es
and
jns
add
pop
add
add
rcll
std
in
xor
add
mov
xchg
cmc
pop
cmp
jae
ss
adc
inc
pop
repnz
out
push
cltd
mov
dec
mov
rcr
cmp
sbb
loop
xchg
and
arpl
push
inc
fildll
push
ret
test
loop
xor
dec
adc
arpl
rcr
sti
imul
call
push
sbb
push
hlt
les
cmp
sti
xchg
lea
mov
push
jl
push
arpl
addr16
out
scas
jbe
aas
int3
ss
sub
repnz
mov
dec
push
push
popf
inc
mov
dec
in
scas
cmp
movd
insl
mov
sbb
inc
in
cli
sbb
imul
decl
in
push
popf
dec
sub
movsl
jle
stc
jo
adcb
imul
cltd
and
push
cwtl
cs
das
lods
mov
add
add
subb
jns
mov
xchg
add
add
lock
into
add
push
xchg
adc
push
xchg
jge
cmp
fcomps
cld
je
dec
pushl
sub
push
rol
cmp
rol
shl
loop
lret
xor
pop
xor
imull
lods
fsubrs
data16
cwtl
mov
loopne
imul
mov
pop
xor
in
shll
pop
push
cmp
mov
call
jbe
xor
xchg
les
ljmp
enter
mov
stc
test
dec
leave
jno
mov
sub
stc
push
push
cltd
adc
push
lret
rolb
xchg
xchg
cmp
mov
rcrl
mov
xor
cmp
popa
shl
enter
push
cld
add
fwait
leave
xchg
mov
mov
and
jo
push
test
jmp
xor
add
add
jb
scas
incb
out
dec
out
aas
pop
std
loope
in
add
pop
add
add
ficoms
ds
sahf
loop
outsb
into
js
inc
dec
xor
sti
and
cmp
add
push
sub
sti
repnz
mov
mov
je
outsb
mov
inc
fcomi
inc
pop
mov
cmp
jmp
clc
pop
push
hlt
movsb
movsb
jp
lea
xchg
jmp
sub
add
push
mov
mov
xlat
mov
xchg
insb
sti
ficoml
fst
pushf
jnp
rep
stos
aam
pop
ja
sub
jecxz
jno
iret
in
jnp
mov
cmp
sti
mov
fsubr
sbb
xorl
loopne
mov
mov
scas
mov
clc
and
fbld
inc
and
scas
pop
xlat
xchg
std
or
lret
jecxz
sbb
fidivl
insb
or
lcall
loop
sbb
pusha
ret
inc
sbb
or
scas
add
cmc
add
xlat
mov
lahf
ljmp
pop
add
add
daa
push
and
and
lcall
inc
arpl
sbb
mov
das
xchg
sarl
jo
cmpsb
notb
cli
int
out
pop
pop
add
adc
imul
push
fists
jo
sahf
mov
xor
inc
setns
cmpsl
cld
or
fisubrs
mov
popf
pop
mov
data16
aaa
and
sti
jl
mov
insb
dec
in
das
popf
or
mov
rol
inc
sbb
je
mov
xor
sub
and
testb
cmc
cmpb
movsb
shlb
inc
out
cmp
and
popf
or
cli
xchg
and
mov
data16
movsl
xchg
orb
lcall
fucomi
jmp
stos
mov
push
cltd
cmp
cld
test
mov
rclb
sub
inc
repz
stos
mov
mov
pop
adc
push
or
dec
add
mov
aas
mov
mov
inc
xchg
out
add
pop
add
add
pop
mov
xchg
test
data16
lds
test
loopne
fidivs
jmp
jg
outsl
add
pop
inc
push
stos
mov
outsb
inc
mov
inc
xor
mov
aam
shrd
push
push
popf
inc
xor
mov
push
push
icebp
repz
or
sbb
je
jle
jl
ljmp
cmovns
insb
add
mov
push
xchg
xlat
and
mov
mov
pop
hlt
xchg
adc
mov
inc
rcll
fistl
insl
inc
stc
xchg
pop
jne
int3
push
pop
inc
jge
cli
popf
sub
adc
dec
out
jecxz
dec
sbb
xchg
sbb
hlt
pop
jl
fcmovnbe
and
or
lods
inc
xchg
dec
jge
xchg
bound
jbe
pop
sbb
adc
inc
sbb
ret
lcall
sbb
cli
popa
cmp
jl
out
jp
inc
sub
push
andb
add
lods
inc
jge
fcmovnu
gs
js
add
mov
sti
mov
test
add
pop
add
add
add
or
adc
cli
sti
jb
push
mov
repnz
lcall
jmp
sti
push
test
or
pop
pop
imul
and
mov
xlat
adc
outsb
pop
jecxz
cmp
and
or
sub
push
addb
jno
imul
insl
cltd
jp
imul
xchg
or
test
pop
aas
dec
fstpl
inc
adc
gs
out
xor
or
punpckhwd
dec
jno
aaa
insl
mov
ljmp
sub
stc
mov
popf
mov
into
sbb
movsb
fcoms
out
mov
cmpsl
das
sarb
add
mov
adc
or
outsl
inc
xchg
mov
lods
notb
jb
dec
sti
push
lea
lea
dec
jmp
cmpsl
jle
sbb
js
jl
mov
jbe
cltd
jg
and
pushf
adc
sarl
xor
add
add
into
adc
neg
jge
mov
stc
hlt
in
ja
lock
pop
add
add
not
xchg
ss
ljmp
jo
notl
cwtl
cltd
adc
pop
stos
pop
pop
add
rol
pop
in
mov
xchg
insl
xlat
mov
push
fdiv
dec
insb
mov
mov
aad
cmpsl
dec
xchg
mov
cmp
add
clc
adc
jge
xchg
loop
stc
cmc
iret
sub
inc
pop
rclb
andb
test
sete
or
es
sti
fcoml
or
sbb
jecxz
lahf
cmp
pop
negb
loop
out
or
hlt
in
sti
jbe
fldcw
inc
add
cmp
in
repnz
insb
sbb
sub
mov
add
inc
lahf
lds
fnstcw
push
and
inc
fisttpll
out
adc
pop
bound
sub
arpl
jno
lahf
int3
cmc
out
jl
es
pop
aaa
ja
dec
out
or
into
cmpsb
cmc
mov
push
leave
or
add
scas
add
add
pop
cmp
outsl
jg
jg
xor
xchg
jne
xchg
stos
icebp
add
pop
add
add
fnstenv
mov
xchg
into
in
addr16
push
push
jecxz
call
jmp
mov
loopne,pt
sub
mov
lods
sti
mov
jp
cmp
jns
xchg
sbb
inc
outsb
mov
add
pusha
fs
divb
imul
lret
mov
sbb
loop
add
adc
divb
adc
fisubrs
lret
test
test
pop
mov
push
cmc
pop
enter
pop
pushf
out
aaa
roll
xor
mov
add
jecxz
pop
add
and
es
sahf
arpl
mov
shrb
in
sbb
pop
xchg
push
jns
bound
xor
jl
pop
addr16
insb
sub
dec
test
subb
inc
lods
pop
mov
leave
out
push
mov
stc
in
push
sbb
xchg
add
ja
and
aaa
divl
in
xchg
aas
mov
add
pop
add
add
shrl
sub
rcrl
imul
push
lcall
leave
cld
xchg
nop
in
mov
push
in
or
outsb
xor
mov
pop
xchg
cmp
popa
mov
mov
test
dec
adcb
stos
dec
xchg
mov
xchg
js
mov
repz
rolb
out
push
push
das
xor
mov
xor
imul
lcall
mov
xchg
int3
in
mov
push
pop
jg
outsb
sbb
out
ljmp
cmp
cmp
pop
subps
pop
out
push
icebp
jmp
int
test
popf
mov
push
pusha
js
mov
mov
mov
mov
inc
xchg
adc
cmpl
imul
sub
lcall
mov
mov
nop
pop
xchg
jne
dec
dec
loop
mov
mov
inc
scas
xchg
in
add
mov
cmc
mov
dec
xchg
add
add
add
aad
icebp
jecxz
cmp
fisttpl
js
int
sbb
mov
fimuls
int3
ret
adc
popf
add
pop
sub
mov
sbb
les
in
orl
sub
push
xor
sub
int
movsl
push
cmp
xchg
pop
mov
push
xlat
dec
push
aad
xchg
imul
pop
outsl
or
push
popa
xor
aad
stos
push
mov
xor
mov
jmp
inc
jbe
mul
and
adc
dec
inc
clc
or
sub
scas
push
xchg
lods
fistpl
loop
inc
sub
xor
sbb
xchg
mov
mov
mov
or
in
sbb
loope
or
lock
les
or
xor
rcll
scas
xor
lahf
in
out
cltd
fbstp
pop
xor
dec
mov
push
addr16
je
add
jne
add
push
outsb
mov
add
add
cmpsl
mov
xchg
out
push
xor
mov
popf
push
cld
test
xor
jbe
xor
imul
mov
inc
xor
popa
adc
sarl
xor
fs
shrb
movsl
outsl
xchg
sub
dec
and
add
adc
movsb
dec
jns
push
sbb
pop
aad
imul
data16
cmp
lret
aad
iret
imul
jmp
mov
xor
adc
push
adc
pop
into
sbb
pop
sub
stc
add
out
iret
mov
and
pop
jae
xor
fcompl
iret
stc
xchg
fwait
xchg
inc
mov
xor
stc
dec
push
rclb
push
sysexit
xor
or
jbe
push
jge
movsb
xchg
mov
sub
mov
pop
inc
push
fldenv
aam
rcr
sub
in
push
adc
push
pop
dec
push
add
imulb
idivb
inc
out
lcall
add
xchg
test
sarl
hlt
pop
addb
jbe
movsb
les
xchg
sbb
fnstsw
mov
sbb
jbe
pop
jns
mov
sbb
xor
push
leave
leave
loop
out
jb
push
repz
cmp
fldenv
pop
push
mov
sub
lods
ret
sbb
dec
push
mov
cmp
add
mov
push
push
jp
pop
test
mov
xor
dec
mov
loopne
jge
into
ficompl
aas
dec
adcl
add
jno
fldl
std
sahf
pop
sub
jno
call
mov
out
shlb
popa
mov
jno
cmp
loopne
pop
sbb
inc
dec
aas
inc
je
lret
mov
dec
test
pop
xor
pushf
push
rol
cmp
add
and
push
adc
cmp
push
jmp
fisubl
sub
or
jb
in
mov
test
add
add
add
xor
sub
lds
testb
pop
add
add
repz
adc
cmc
stos
aad
fstps
inc
xor
sub
pusha
xor
fdivl
jns
jge
adc
arpl
sbb
xchg
pop
lods
sbb
add
push
fldl
rcrl
xor
jno
and
push
cmp
jle
xor
lds
dec
pop
fld
pop
inc
imul
je
dec
sub
shlb
ljmp
xchg
cmc
sbb
test
sbb
jge
into
std
pop
push
fcomps
push
sahf
gs
push
add
xor
mov
jns
cltd
sub
adc
test
jecxz
push
or
xor
push
jmp
xlat
mov
jo
fistpl
out
shrl
cmpsb
cwtl
out
mov
stc
push
jnp
jo
sbb
test
or
lods
and
outsb
mov
insb
cmp
push
sarl
rcrb
adc
int
in
idivl
call
sbb
test
pop
add
add
dec
test
movsb
inc
loope
enter
lahf
imul
xor
mov
mov
cltd
dec
or
mov
dec
cmp
icebp
out
and
xor
clc
add
andl
mov
mov
cmp
imul
stos
mov
jne
jnp
jno
jb
andl
mov
ds
lcall
lcall
loop
jae
fildl
sbb
test
xchg
mov
adc
test
sti
inc
shll
fistl
add
cmp
test
iret
jge
inc
mov
or
mov
pusha
pop
jecxz
out
push
out
inc
jge
shlb
lret
or
pop
rorl
xorl
xor
sub
dec
xchg
cmpsl
pop
mov
cmp
ficomps
std
aaa
adc
orb
mov
daa
jne
rcr
pop
or
mov
add
jecxz
inc
cli
aas
clc
fdiv
jne
push
fldenv
add
pop
add
add
add
lcall
mov
ss
pushf
push
mov
imull
ret
std
jb
int3
dec
adc
ss
and
jl
ljmp
sbb
fwait
and
push
cwtl
jl
xor
dec
mov
or
insl
test
pop
icebp
jne
or
inc
mov
jmp
adc
adc
sub
dec
pop
or
push
inc
push
xchg
enter
lock
mov
adc
adc
rclb
jns
stos
cmp
jno
jp
xchg
xor
lahf
lea
negb
addb
imul
adcl
mov
dec
sbb
jle
stos
cmp
test
inc
add
jmp
mulb
insl
rol
xor
test
push
xchg
inc
inc
mov
loope
lret
pop
push
add
lcall
jns
outsb
sub
pop
add
add
int
sbb
cwtl
orl
push
out
aad
dec
mov
mov
xchg
jns
loop
cmp
int
cmp
mov
jae
adc
adc
dec
int3
or
pop
clc
inc
sti
sub
add
pop
jg
ss
in
out
cmp
pop
stc
push
jb
mov
scas
mov
arpl
push
add
cwtl
movsb
sti
or
push
jl
lock
sbb
pop
enter
imul
in
push
outsl
cwtl
mov
push
leave
mov
pop
out
popf
adc
jae
jmp
dec
decl
inc
in
repz
sbb
out
jecxz
adc
stos
mov
leave
mov
dec
adc
in
mov
aam
inc
test
xor
pop
mov
in
outsb
mov
popf
jecxz
movsl
pop
mov
or
jecxz
push
inc
push
jnp
add
jae
cltd
dec
mov
jge
inc
ret
jmp
add
add
jns
shr
in
ficompl
iret
pop
xchg
in
adc
mov
push
leave
jns
shrb
sarl
or
lret
lcall
cli
dec
or
inc
je
mov
sub
cmp
loope
or
mov
sti
mov
je
clc
test
pop
stos
or
sahf
lods
minps
push
hlt
sbb
inc
popl
jge
loope
in
andb
mov
adcl
xchg
mov
or
stos
cmp
pop
adc
pop
movsb
repz
pop
adc
mov
mov
mov
xor
test
add
sbb
jmp
sub
ljmp
ja
fmul
cmp
inc
mov
pop
lret
lahf
js
mov
xor
add
adc
and
frstor
mov
fimuls
pop
aaa
movsb
inc
jg
mov
push
flds
inc
pushf
or
ds
into
nop
out
cwtl
jle
pop
or
aaa
stos
fcomip
sti
add
pop
add
add
sbb
xchg
fisubrs
mov
ja
push
adc
or
adc
jl
jo
lret
aaa
nop
stc
sub
cmp
test
gs
ss
push
mull
pop
cs
scas
fmuls
add
movsl
jns
mov
sub
loop
insb
adc
push
aad
jmp
je
in
in
out
adcb
inc
pop
sub
ss
adc
add
push
xor
ss
sub
pop
outsb
lahf
dec
cmpb
mov
pusha
lock
pop
fstp
xchg
pop
es
sub
fwait
pop
hlt
ficoms
add
dec
sub
inc
xlat
les
jno
cmp
add
fsubrp
and
or
iret
icebp
mov
imul
jo,pt
sbb
je
push
ss
sub
and
jl
out
imul
inc
cmp
aam
ds
lcall
and
add
test
jg
in
jmp
pop
test
add
pop
add
add
inc
jecxz
cmp
xchg
xor
pop
dec
sub
popa
or
outsb
jmp
int
neg
into
fwait
sub
dec
dec
and
or
fimull
cli
sti
xlat
xchg
lcall
cmp
sti
add
dec
movsl
popa
or
sahf
xorl
gs
and
sbb
es
inc
movsl
and
bound
out
inc
jg
div
popa
xchg
fiadds
mov
mov
test
lods
push
dec
sub
pushf
sbb
mov
or
cmp
fisubrl
dec
and
add
scas
jl
cmpsl
xor
sbb
cmp
mov
cmpsl
in
jb
sbb
dec
xchg
cmp
or
out
fdivr
int
jl
cmp
stos
inc
out
lds
mov
and
xchg
shl
cmpsb
adc
aad
pop
push
or
or
pusha
neg
fs
loopne
xchg
mov
lods
fwait
sti
mov
lods
push
pop
dec
popf
stc
pop
das
pop
mov
add
add
movsb
push
in
cmc
jne
rorl
loop
std
add
pop
add
add
mov
push
aas
dec
popl
in
fmuls
je
and
mov
ficoml
inc
xlat
fmull
push
aad
push
mov
adc
daa
push
shll
pop
pusha
jl
push
ljmp
in
jnp
push
insl
insb
inc
mov
push
xor
icebp
inc
or
xor
sub
or
cmp
mov
sti
pop
dec
les
gs
in
das
femms
mov
cmp
inc
clc
push
cmpsl
adc
roll
lods
jl
cmp
orb
iret
or
or
jns
lcall
or
mov
jmp
cltd
xor
icebp
cltd
fisubs
sbbb
fsubrl
xchg
lea
lock
sbb
outsl
xchg
minps
sti
movsl
fwait
ja
call
push
aaa
jp
test
jmp
clc
jmp
out
push
add
cwtl
dec
sub
jno
gs
je
xor
sbb
shlb
aas
out
sbb
stc
rolb
pop
add
add
fwait
test
inc
mov
out
adc
sub
push
sbb
push
ret
push
call
mov
out
in
lea
stos
xor
xlat
xor
iret
add
fistl
fcmovne
cmpsb
in
xor
jecxz
sub
cli
pop
mov
shrl
popa
add
cwtl
inc
lret
adc
xchg
or
add
repnz
ret
filds
inc
cmp
sub
push
xor
push
mov
inc
mov
jmp
cmpsb
dec
push
out
add
push
popf
lret
icebp
pushf
mov
sbb
pop
jge
pop
jmp
add
jle
inc
ffree
sub
fildll
out
pop
test
out
mov
jecxz,pn
inc
mov
inc
jecxz
xlat
xor
aaa
jo
push
int
roll
in
call
fiaddl
and
int3
les
sbb
mov
sbb
xor
ja
add
mov
lcall
jnp
or
add
pop
add
add
dec
pop
insb
loope
in
repz
sub
stc
jae
push
jb
rcl
xor
cmp
dec
popf
cmc
sbb
dec
adcl
xchg
mov
testl
mov
push
adc
adc
cli
roll
xchg
mov
in
add
jo
movsb
outsb
rclb
test
add
xor
mov
and
sub
inc
pop
sbb
inc
push
mov
cmp
int3
and
mov
cli
rol
add
addr16
stc
aad
xor
push
test
stc
cwtl
inc
or
mov
push
popf
pop
jmp
jae
lret
insb
sub
dec
sti
cld
pop
addr16
ret
in
push
std
mov
adc
sbb
adc
mov
sbb
jbe
movsl
imul
enter
mov
shrl
mov
out
sub
cmpsl
add
ret
bnd
int3
jae
adc
jns
cwtl
adc
add
pop
add
add
add
into
pop
ret
pushf
and
daa
out
call
mov
add
dec
and
or
addr16
sub
pop
insl
add
mov
pop
pusha
fcoml
jbe
clc
mov
add
pop
stc
data16
xor
in
sbb
shrl
addr16
scas
cld
jns
sub
cmp
xchg
jl
aad
jns
mov
lds
xor
inc
or
jge
xchg
mov
push
call
adc
mov
je
push
or
pop
or
xchg
out
pop
aas
outsb
fimuls
jp
daa
jo
les
dec
pop
sbb
pop
int
mov
xor
xchg
sub
dec
js
mov
or
sub
insl
test
fcomip
xor
jne
repnz
push
mov
dec
sbb
mov
addl
and
push
sbbb
dec
imulb
fwait
adc
jecxz
aam
push
or
xchg
mov
xchg
add
add
std
aaa
mov
mov
dec
mov
add
popl
add
push
les
fs
pop
aaa
cmp
fimuls
cltd
jg
stos
outsb
imul
add
out
outsl
ds
popa
pop
mov
cwtl
imulb
ret
fcmovbe
and
fnclex
repz
mov
mov
push
lcall
push
xchg
popa
fs
dec
mov
adc
pop
or
lcall
dec
test
mov
repnz
dec
mov
inc
inc
ror
or
testb
clc
cmpsb
shrl
or
add
mov
mov
or
dec
add
add
add
movl
xor
hlt
clc
lret
enter
mov
test
pushf
enter
movl
inc
mov
dec
mov
call
mov
call
pop
ljmp
lcall
lcall
dec
or
inc
mov
xor
lret
ret
add
enter
dec
sbb
add
decl
test
dec
incl
inc
enter
ljmp
cld
decl
push
mov
and
pop
inc
mov
push
pop
movsb
dec
add
jne
lea
fs
decl
mov
test
add
xor
add
mov
or
inc
mov
popa
mov
cld
inc
cmp
lea
and
incl
mov
cld
add
xchg
sar
inc
incl
mov
xor
add
nop
inc
add
mov
add
add
incl
sbb
jne
mov
mov
movl
incl
test
inc
aas
inc
lea
inc
mov
mov
out
cld
loopne
inc
in
fisttps
jecxz
out
incl
out
aas
call
add
add
test
wrmsr
jae
add
mov
add
add
mov
addl
mov
mov
dec
nop
mov
fadds
add
inc
push
call
mov
mov
cld
mov
add
cmp
mov
mov
push
nop
incl
cld
add
mov
cld
push
nop
inc
add
add
call
cmp
movntq
movl
test
jmp
int
sub
add
filds
cmp
je
movl
jne
mov
cld
jl
cmp
inc
call
add
add
add
xor
inc
add
mov
add
fmuls
cld
call
decl
add
push
es
inc
mov
decl
mov
call
inc
mov
add
mov
cld
mov
call
sub
cld
movb
xor
push
inc
mov
in
inc
lea
dec
lcall
xchg
incl
call
add
jge
mov
cld
lea
call
push
incl
mov
xor
add
cmp
jne
movl
add
mov
cld
test
mov
xor
test
mov
mov
mov
add
add
mov
add
test
je
mov
cld
sarb
pcmpeqw
xor
lea
add
cmp
mov
test
clc
pushl
lea
int3
inc
call
jne
xor
jmp
mov
mov
incl
pushl
xor
mov
mov
cld
clc
ret
test
pop
xchg
add
inc
decl
pop
sub
add
push
mov
or
inc
enter
inc
mov
int3
add
xor
xor
lea
add
fadd
rolb
inc
fmull
inc
test
lcall
inc
inc
cmp
pushf
mov
test
clc
dec
inc
mov
or
test
clc
testl
enter
xor
mov
lock
ret
push
idivb
cmp
add
jmp
les
mov
lock
clc
inc
add
jge
xor
cmp
paddb
mov
test
dec
test
pop
xor
add
add
psraw
sub
mov
lock
shl
rolb
movl
jmp
pushf
inc
mov
xor
add
mov
enter
xor
add
sub
cmp
aad
pushf
test
mov
lods
inc
dec
cmp
pushf
xor
add
inc
dec
cmp
mov
inc
inc
jmp
mov
dec
xor
add
add
dec
test
out
rolb
add
dec
mov
mov
ret
xor
add
add
dec
inc
mov
ror
add
scas
mov
xor
xor
add
mov
clc
rol
mov
mov
dec
jbe
mov
call
rdpmc
roll
add
inc
rorb
jmp
inc
inc
mov
clc
test
clc
lret
inc
into
mov
clc
enter
sub
ret
mov
addr16
clc
add
loopne
dec
into
mov
or
inc
push
mov
in
cmp
ja
mov
inc
lcall
lret
inc
into
mov
in
scas
lret
mov
mov
sub
mov
mov
clc
loopne
push
lret
mov
adc
jb
add
in
sub
cmp
mov
mov
add
mov
in
into
dec
xor
roll
xor
sub
add
mov
inc
xor
lret
inc
xor
pushf
adc
jb
add
enter
incl
jmp
mov
inc
mov
lcall
lea
xor
add
inc
dec
mov
data16
inc
sub
inc
xor
push
mov
add
inc
decl
add
inc
mov
lcall
add
xor
xor
add
mov
call
mov
add
mov
in
ret
iret
enter
in
or
adc
push
dec
inc
mov
jb
mov
cld
scas
orb
movb
push
push
xor
mov
call
mov
in
jge
mov
int3
add
xor
dec
pushf
xor
add
mov
aam
aam
add
jmp
mov
add
mov
jmp
mov
rolb
add
xor
rorl
jb
add
clc
inc
jb
mov
xor
add
push
inc
jne
push
inc
adc
inc
test
mov
cld
orl
jbe
mov
dec
mov
mov
mov
or
dec
int3
xor
add
mov
xor
add
adcb
add
inc
mov
xor
dec
mov
hlt
add
push
inc
dec
aam
aam
lret
mov
adc
inc
and
cmpl
cmpb
mov
cmp
jne
mov
mov
rcrb
or
dec
inc
add
or
test
xchg
mov
movsl
inc
cmp
pushf
orl
mov
into
decl
push
lret
inc
into
decl
push
into
call
lret
add
add
mov
clc
inc
inc
mov
push
push
add
mov
cld
mov
into
rorb
xor
jne
call
mov
mov
call
add
rolb
add
add
inc
push
cmp
mov
test
clc
test
addb
jmp
in
or
xor
hlt
mov
xor
add
inc
adc
pushf
inc
add
movsl
test
clc
incl
cmp
push
movsb
jne
push
clc
test
cmp
pushf
mov
les
inc
push
sbb
dec
add
inc
add
enter
add
add
out
sbb
dec
mov
sub
mov
add
cmp
or
incl
mov
mov
lret
inc
into
mov
int3
scas
push
mov
call
sub
mov
mov
xor
mov
clc
mov
in
ret
add
add
mov
in
ret
mov
in
inc
rol
sar
or
add
add
test
clc
lret
inc
into
cmp
pushf
scas
mov
inc
cmp
ja
mov
mov
clc
mov
mov
in
lret
ret
into
mov
scas
cmp
add
jmp
mov
mov
inc
enter
xor
add
cmp
shufps
add
dec
sub
cmp
ja
mov
lods
mov
inc
dec
mov
lret
rol
or
inc
scas
xor
add
add
inc
mov
inc
lret
mov
clc
lret
scas
ret
mov
hlt
push
scas
sub
mov
add
mov
movsb
inc
dec
xor
add
add
xor
pushf
dec
mov
rolb
xor
jmp
mov
xor
mov
rolb
test
lcall
in
inc
shll
rolb
add
mov
add
inc
xor
rdpmc
roll
loopne
push
in
mov
adc
jb
add
jmp
mov
test
dec
dec
xor
add
dec
mov
dec
in
xor
xor
add
jbe
mov
test
dec
mov
loopne
inc
add
rol
scas
mov
mov
hlt
dec
inc
mov
loopne
lret
test
clc
scas
inc
mov
fdiv
roll
lcall
fcomps
inc
mov
inc
dec
xor
add
loopne
dec
rorl
add
lock
rolb
xor
call
enter
mov
fmul
push
dec
xor
ret
xor
dec
jne
mov
cld
loopne
push
add
incl
incl
mov
lock
lret
add
xor
inc
scas
mov
shl
inc
decl
call
ud0
adc
inc
xor
lock
add
ud0
sbb
xor
sub
push
add
mov
cld
inc
xchg
mov
xabort
icebp
mov
lret
or
dec
pop
or
jb
add
inc
mov
fadd
ret
add
int
sub
add
inc
inc
mov
cld
scas
loopne
mov
mov
clc
push
pushl
movb
int3
or
lea
insb
incl
push
movb
leave
les
in
call
inc
cld
mov
cld
xor
sti
mov
clc
test
je
mov
cld
add
add
fadds
movb
push
push
mov
pop
lea
ret
mov
xchg
mov
push
clc
jne
mov
push
or
cmp
pop
or
inc
leave
call
iret
inc
leave
jmp
mov
jl
inc
nop
loop
ret
mov
add
push
pushl
mov
or
pushl
cmp
pop
ret
or
inc
push
jl
inc
inc
leave
add
and
inc
jne
add
enter
mov
clc
enter
divl
mov
roll
divl
cmp
pop
decb
in
inc
sub
inc
push
add
push
add
leave
adcl
add
inc
rorl
add
add
jmp
jne
mov
or
inc
stc
jmp
jge
mov
lock
and
add
aad
add
clts
call
hlt
iret
jge
roll
cmc
or
out
mov
pop
push
cmp
sar
incl
inc
loop
push
push
push
add
add
push
add
sub
jne
lods
mov
dec
out
into
push
loopne
shrb
andl
roll
mov
cmpl
mov
push
push
push
sub
push
adc
insl
mov
add
rorb
add
add
roll
pop
or
cli
add
lea
mov
dec
inc
shrb
and
jne
pop
mov
call
and
push
add
dec
mov
jmp
mov
call
shrl
lock
adc
out
cmp
pop
or
push
cld
mov
and
xorb
add
mov
psubsw
add
rcr
mov
and
add
call
add
mov
aam
or
jne
mov
aam
dec
jne
cmp
jb
jmp
mov
int3
dec
orl
mov
cmp
jb
pop
push
cli
pop
mov
jb
addl
mov
int3
add
jmp
mov
call
add
pop
or
pop
inc
xor
push
mov
call
int3
sbb
inc
add
call
or
cmp
mov
jb
mov
push
add
add
add
int3
jne
movsbl
add
add
mov
add
add
mov
sub
jb
add
jge
add
addl
jne
je
mov
rorb
orl
mov
mov
fadds
inc
pop
lea
push
out
add
add
mov
jb
add
push
call
add
jae
icebp
inc
mov
int3
out
loopne
sub
push
pop
push
jl
add
xor
mov
rcrb
rorl
inc
shr
orl
push
pop
add
jmp
mov
fdivrl
push
pop
call
mov
in
rolb
call
pop
enter
repz
xorl
je
or
jne
jmp
pushl
push
pop
cmpl
jge
mov
sub
pop
inc
mov
sub
lods
add
enter
repz
stc
jge
jnp
call
fadd
dec
insb
stc
cmp
push
mov
jne
mov
mov
add
sub
and
cmp
sbb
pop
call
fsubr
sti
add
add
add
roll
mov
clc
jne
mov
loopne
loopne
lods
int3
inc
mov
add
sub
shrb
add
call
add
dec
insl
in
lea
inc
inc
sub
orl
and
rorl
or
mov
stos
adc
inc
add
jne
mov
cmp
sub
sar
ljmp
sub
mov
mov
and
jne
sub
sbb
dec
push
add
ret
mov
leave
sub
ret
pop
push
rolb
addl
jb
ret
in
jecxz
push
xchg
jne
cmp
jne
mov
rorl
mov
pop
nop
mov
les
add
inc
mov
mov
cmp
or
inc
inc
xor
insb
cld
add
add
add
sbb
dec
je
mov
add
and
jae
mov
incl
push
shr
in
push
add
add
inc
mov
add
jmp
pushf
dec
push
and
xor
add
in
inc
add
mov
insb
movl
dec
xor
fxch
sub
add
mov
xor
push
fimull
orl
xor
mov
jmp
mov
add
add
sub
inc
or
add
cld
mov
xor
add
prefetcht0
xor
mov
pop
mov
or
cmpb
movb
add
mov
xorl
mov
sbb
inc
fcmovb
fxtract
mov
in
call
inc
inc
les
push
adc
out
inc
cmp
incl
inc
jne
mov
testb
add
xorb
inc
test
add
add
mov
jl
add
mov
mov
cld
movb
cmp
imul
shll
mov
mov
data16
add
in
test
jmp
inc
test
incl
cmc
rolb
test
in
incl
out
inc
test
incl
data16
xor
add
inc
inc
sbb
test
cmp
decl
dec
cmpl
add
lea
enter
inc
pushl
add
incl
mov
mov
add
pop
addl
mov
add
inc
mov
add
lea
add
test
loopne
data16
in
cmpl
pop
push
jmp
mov
lea
insb
incl
mov
adcl
mov
ret
add
call
inc
mov
mov
add
add
stc
incl
or
test
outsb
popl
adc
test
mov
add
mov
mov
data16
test
dec
mov
ret
inc
push
mov
mov
pushw
lea
mov
xchg
in
cmc
xchg
inc
iret
fisttps
rorb
orb
repz
mov
jmp
incl
addl
mov
cmpsb
pop
inc
lcallw
dec
push
inc
jge
mov
mov
add
add
test
incw
mov
call
mov
clc
ret
rol
mov
mov
pushf
pop
jmp
add
inc
test
push
mov
mov
push
add
decl
add
cmp
decl
jmp
push
hlt
data16
dec
ret
mov
lea
jne
decl
decb
mov
push
jmp
inc
sbb
movsb
inc
test
inc
decl
test
mov
lods
push
inc
jne
decl
mov
sbb
mov
mov
inc
test
decl
xor
add
inc
xorl
mov
lea
inc
lcall
pushf
roll
add
add
test
decw
mov
lea
push
add
xor
test
fdivr
add
data16
lea
decl
decl
cltd
incl
ja
lea
push
mov
jmp
mov
pushl
incl
push
push
push
test
mov
clc
lret
push
jmp
push
jae
add
mov
cld
mov
incl
inc
test
inc
dec
test
cmp
mov
mov
lcall
incl
mov
jmp
test
decl
inc
or
sbb
rcrb
add
add
inc
mov
data16
inc
dec
cmp
lock
xor
hlt
cld
mov
mov
cld
into
dec
lcall
mov
add
mov
lea
test
jne
pushl
mov
call
mov
decl
cmpb
add
test
je
decl
dec
or
cld
dec
orb
add
add
icebp
ret
dec
inc
xchg
jne
mov
cld
xor
push
xor
add
add
add
add
or
jmp
nop
test
cmp
mov
mov
add
decl
add
decl
movsl
add
add
rdpmc
addb
mov
add
decl
decl
push
jne
mov
cld
add
push
incl
add
add
mov
sbb
leave
test
jne
call
xor
mov
enter
mov
mov
cld
add
inc
dec
mov
inc
decl
add
xchg
ret
add
add
mov
lea
add
mov
inc
rdpmc
jne
add
inc
clc
add
mov
mov
in
add
test
incb
add
cmp
pushl
add
test
je
mov
sbb
test
js
add
sub
mov
add
dec
push
mov
mov
mov
sbb
or
dec
incl
push
add
mov
orl
add
push
cmp
inc
mov
in
add
xor
add
ljmp
decl
call
mov
lock
mov
mov
mov
mov
addl
mov
inc
push
ljmp
mov
clc
cmp
jne
mov
add
int3
inc
cmp
add
adc
add
mov
cmp
jmp
mov
inc
or
decl
jne
mov
mov
in
xchg
jmp
adc
inc
mov
push
sub
push
test
inc
dec
mov
movl
add
add
mov
push
roll
bound
xor
add
mov
test
call
loop
jnp
mov
cmp
cld
shr
add
push
lea
mov
cwtl
cli
add
or
inc
dec
incl
add
call
add
push
adc
mov
mov
addl
incl
inc
stos
mov
add
mov
cmp
movsb
mov
cld
jae
add
clc
add
mov
clc
pop
inc
xor
pushl
mov
jae
mov
sub
add
mov
mov
ret
mov
ret
mov
add
mov
add
incl
lea
hlt
sar
test
inc
add
testb
push
add
add
add
add
add
mov
mov
cld
fidivl
mov
xorb
add
sbb
jne
mov
sbb
mov
add
ret
dec
or
dec
cld
cmovne
add
seto
inc
adc
mov
cmp
xor
gs
je
push
sarb
mov
push
cmp
add
dec
mov
in
adc
pop
inc
leave
or
gs
add
into
in
enter
push
xorl
or
jnp
test
add
mov
ltr
decl
clc
out
add
cmp
jge
jb
je
pop
push
mov
in
roll
orl
cmpl
hlt
mov
push
jns
lock
ror
test
dec
rcpps
mov
inc
test
je
mov
adcl
and
jp
rcpps
add
sbb
add
je
cmp
js
add
jns
vmread
add
adc
jge
mov
add
or
push
push
mov
add
pop
add
mov
inc
pop
xorl
add
push
clc
mov
jp
add
divl
test
je
mov
or
decb
jbe
mov
add
cmp
add
je
mov
mov
hlt
orb
jb
jmp
xor
pop
pop
pop
ret
ret
mov
xorl
cld
cmp
xor
pushf
add
ret
mov
pop
dec
jne
xor
inc
dec
jbe
inc
pop
add
push
dec
push
mov
and
jo
mov
sbb
mov
nop
or
jne
cmp
cld
xor
add
cmp
js
jae
xor
jmp
mov
fdecstp
test
add
add
mov
cmp
adc
jge
mov
jl
clc
dec
jge
mov
jb
mov
mov
xor
add
mov
inc
pop
jge
cmp
mov
imul
fimuls
fists
in
jne
mov
imul
fdivrp
filds
test
inc
mov
mov
adc
rcll
mov
fiadds
mov
mov
xor
mov
xlat
into
ffreep
lret
iret
dec
inc
mov
fmull
dec
jnp
add
mov
inc
dec
lea
add
jb
add
inc
imul
cld
clc
mov
incl
or
sbb
lret
add
dec
add
enter
inc
pop
decl
add
add
mov
xor
loopne
cltd
push
clc
mov
xor
add
cmp
hlt
cmp
or
mov
loopne
mov
cld
pushf
pop
lcall
add
dec
iret
xor
dec
mov
iret
inc
jne
mov
cmp
je
add
or
dec
inc
mov
cld
add
cmp
mov
or
mov
test
inc
xor
mov
jne
mov
fcomps
add
incl
cld
add
mov
cld
inc
fidivrs
fbstp
mov
adc
fadd
add
mov
inc
mov
loopne
sbb
sbb
pushf
add
mov
cwtl
inc
inc
jne
mov
clc
add
mov
or
inc
lea
add
inc
rorl
add
shufps
jmp
xor
hlt
mov
fadds
xor
add
cmp
pmuludq
jmp
mov
or
inc
mov
jne
mov
clc
add
xor
jne
pushl
add
mov
cld
add
xor
lea
adc
sub
lea
add
jb
add
inc
add
inc
mov
or
mov
in
scas
inc
mov
in
add
mov
dec
mov
mov
cld
push
dec
add
mov
in
cmp
mov
mov
mov
xor
cmpl
xor
jmp
add
xor
add
cmp
mov
mov
adc
jmp
mov
cld
mov
push
jne
dec
or
push
inc
in
add
or
dec
cld
mov
xorl
decl
mov
mov
xor
mov
inc
mov
mov
call
add
mov
or
jo
push
xor
pmulhuw
test
mov
mov
xor
xor
xor
add
inc
mov
movl
sub
lock
mov
mov
or
ja
mov
cld
cli
mov
cmp
bswap
mov
mov
clc
repnz
push
xor
cmp
pop
jmp
mov
xor
lea
xor
neg
insl
test
clc
pop
inc
or
xor
add
jne
mov
in
push
xor
add
cmp
add
mov
mov
add
mov
mov
lcall
jne
mov
shl
mov
dec
jne
mov
in
jmp
add
mov
or
inc
jne
mov
ret
or
jge
sub
xor
add
mov
clc
negl
xor
cmp
repz
xor
add
mov
mov
cld
lock
test
clc
add
fdivrp
test
jnp
add
jae
sub
shll
leave
call
in
in
add
mov
in
test
mov
xor
pushf
jnp
xor
push
loopne
jne
mov
add
xor
mov
cld
jb
add
jne
mov
jge
mov
lock
xor
mov
lock
jge
xor
dec
mov
loopne
jge
add
cmc
add
dec
hlt
xor
mov
in
jge
mov
dec
dec
xor
inc
hlt
xor
add
icebp
add
mov
cmp
test
fistps
inc
mov
add
inc
test
add
add
ret
jnp
inc
inc
xor
add
xor
add
mov
cmp
setp
mov
call
or
inc
mov
and
lock
movl
mov
clc
xor
mov
inc
mov
mov
mov
mov
hlt
inc
rorl
mov
push
mov
in
jne
mov
addl
clc
mov
add
rolw
mov
jne
incl
inc
push
test
sub
add
and
add
mov
and
cmp
add
inc
push
add
push
enterw
mov
add
add
str
lea
sbb
dec
cmp
inc
push
mov
push
add
mov
inc
add
xor
add
mov
loopne
dec
mov
cld
push
xchg
add
add
or
dec
loopne
xchg
push
add
dec
jmp
mov
sbb
inc
xor
add
push
divl
and
add
jno
incl
inc
push
push
mov
mov
push
inc
enter
push
call
pop
push
mov
mov
push
jo
incl
or
call
fmull
mov
mov
adc
dec
xor
mov
mov
mov
push
lret
movb
inc
movntps
lret
into
dec
lret
mov
mov
fdivl
mov
push
mov
sbb
dec
sarl
push
jne
mov
lea
call
sbb
add
push
mov
push
mov
test
xadd
pop
add
mov
or
push
add
add
and
call
add
mov
add
xor
add
inc
je
push
cli
dec
mov
or
inc
add
data16
subl
add
add
enter
int3
loopne
rolb
lea
data16
add
sbb
inc
cmp
add
xor
sub
mov
or
ror
dec
inc
cmp
cld
or
ror
lret
dec
mov
loop
cmp
inc
daa
loop
out
add
add
push
inc
xor
add
push
push
inc
jmp
sbb
rorb
addb
ljmp
xor
mov
fmuls
add
lea
add
popl
add
push
incw
mov
add
xor
test
inc
mov
add
or
or
inc
mov
jne
mov
add
add
adc
adc
push
mov
mov
inc
mov
or
push
jne
call
inc
sarb
out
add
add
and
fs
bswap
scas
inc
add
orb
call
shr
xchg
add
add
dec
and
push
decl
mov
mov
lea
mov
add
mov
push
shlb
inc
in
jno
push
mov
mov
je
mov
sbb
popl
add
add
adc
jmp
sub
jne
mov
in
popl
push
incl
adc
add
call
and
and
inc
test
sldt
xor
pushf
jmp
mov
or
inc
call
mov
loopne
inc
add
mov
add
add
cmp
test
sbbl
jne
call
leave
rcrb
add
add
add
inc
mov
fcom
add
lea
pushl
call
mov
fstps
push
pop
mov
addl
mov
xor
xor
pop
or
inc
push
in
or
movsl
xbegin
clc
adc
divb
pushf
add
jne
addl
add
adc
xchg
test
clc
data16
orl
rolb
mov
mov
push
add
push
jge
add
jne
mov
jmp
xor
pop
cvtdq2ps
ret
mov
xor
add
push
rdpmc
out
add
mov
ret
sbb
cmp
or
or
pop
inc
add
add
invd
jge
mov
cli
xor
mov
ret
mov
sub
inc
xor
inc
mov
hlt
test
mov
cmp
dec
or
jne
mov
call
inc
mov
add
add
inc
mov
addl
inc
mov
lock
jge
mov
cli
xor
add
test
add
cmp
xadd
test
mov
xor
add
pop
loopne
inc
clc
xor
add
data16
mov
hlt
xor
data16
data16
cmp
add
psubq
ltr
add
add
data16
mov
jge
data16
data16
mov
fdivl
data16
mov
mov
pop
or
clc
mov
lock
jge
invd
pop
add
cmp
data16
mov
pop
fbstp
test
add
add
jge
data16
pop
stc
bsf
mov
in
test
mov
call
cmp
sti
call
add
mov
jnp
mov
mov
call
mov
data16
xorl
fisttps
cld
jne
xor
mov
sti
repnz
data16
push
xor
mov
lcall
or
add
push
push
mov
or
mov
hlt
mov
add
dec
or
mov
or
mov
fdivrl
xor
pop
lock
lea
icebp
jb
add
jge
mov
fsubr
pop
mov
in
rcrl
jb
add
jge
mov
in
pop
data16
cmp
mov
fdivrl
cmp
mov
mov
lock
mov
or
clc
cmp
je
push
loopne
dec
mov
int
mov
pcmpgtd
add
jmp
mov
lock
rorl
or
jb
add
loopne
jne
data16
mov
data16
add
data16
data16
add
data16
enterw
pop
jne
mov
call
xor
lea
repnz
add
xor
in
xor
movl
clc
add
ret
decl
cmp
add
data16
into
data16
add
cmp
add
add
add
cmp
pop
adc
add
add
jne
lea
mov
sarl
test
mov
push
xorb
mov
xor
xor
fs
mov
je
xor
mov
xor
fs
mov
pop
cmp
jne
mov
cld
push
pop
inc
stc
test
clc
test
jmp
or
add
lret
add
clc
add
dec
mov
push
add
xor
cmp
je
mov
push
lea
push
cmp
mov
add
sub
add
mov
jne
mov
xor
mov
push
cmp
jne
sbbl
clc
inc
pop
sti
add
cld
xor
mov
roll
mov
inc
in
add
mov
mov
push
mov
test
xor
sub
inc
sub
mov
inc
add
or
cmp
mov
cmp
je
push
dec
str
cmp
int
mov
mov
add
data16
push
add
jne
movl
clc
xlat
inc
mov
pushf
in
add
add
push
add
cmp
add
lret
lock
lret
cmp
pushf
jge
ss
pushf
test
je
xor
rorb
push
add
jb
add
dec
mov
push
push
adcl
xor
mov
scas
cmp
add
mov
cld
add
mov
dec
or
ret
lock
mov
or
mov
xorl
mov
adc
iret
inc
movl
incb
cmp
add
data16
dec
fisttps
add
ret
lea
add
xor
add
inc
test
xor
push
lcall
xor
cmp
or
inc
test
cmp
in
hlt
push
push
push
push
mov
lcall
clc
icebp
pop
or
mov
clc
jb
add
orl
addl
mov
or
inc
dec
mov
orw
xor
mov
mov
mov
mov
inc
dec
add
add
mov
clc
or
mov
clc
popf
incl
ret
adc
mov
hlt
test
clc
or
xor
pushf
jb
add
inc
daa
inc
inc
xor
dec
lcall
or
inc
sub
inc
or
lea
add
mov
cld
dec
push
sub
add
or
add
or
add
mov
inc
mov
cmp
xbegin
clc
or
xor
pushf
or
lea
add
inc
add
add
je
push
or
dec
std
mov
mov
mov
or
inc
clc
mov
hlt
call
push
or
push
xor
mov
xor
mov
or
add
inc
mov
or
inc
push
jmp
mov
mov
jne
jmp
mov
clc
lret
push
mov
mov
sub
decl
or
pop
ds
dec
mov
jmp
leave
jne
call
in
dec
add
add
inc
cmp
or
add
or
adc
enter
rolb
mov
or
rorb
jmp
push
mov
cld
inc
inc
orl
push
push
mov
add
test
add
mov
mov
lock
fcoms
mov
push
enter
cmp
add
mov
call
cmp
jmp
push
std
lock
inc
call
add
xor
jne
cmp
jne
mov
or
pop
into
je
mov
or
mov
mov
mov
or
sar
xor
xor
pop
adc
ret
cld
inc
mov
cld
mov
push
pop
or
xorps
test
add
adc
addl
jmp
ror
inc
leave
xor
and
add
xor
xorl
mov
pcmpgtw
add
leave
mov
push
dec
mov
lea
xor
sysret
dec
rorb
pushw
jne
ud0
mov
lods
add
data16
iret
and
cli
inc
cmp
add
inc
pop
lea
mov
add
mov
mov
add
inc
data16
clc
int3
cmp
je
push
pop
xchg
data16
lea
jb
jmp
call
clc
xchg
mov
or
lea
push
inc
jge
mov
fdivs
incl
xor
xchg
ret
xor
cmp
data16
rolb
add
dec
xchg
push
jmp
push
add
add
mov
clc
dec
xchg
cmp
jne
xor
jmp
add
jne
call
clc
xchg
sti
add
add
xor
pop
mov
jmp
mov
cmp
cmp
lea
jle
jae
mov
lcall
inc
push
lea
mov
int3
push
xchg
add
add
inc
add
cld
mov
aam
xchg
mov
testb
mov
hlt
add
mov
decl
incl
mov
call
je
js
lock
mov
mov
sbb
clc
add
mov
rorb
dec
xchg
mov
in
jge
cmp
clc
pop
fistl
clc
add
mov
mov
mov
adc
add
adc
pop
sbbl
ret
cmp
mov
cld
add
add
add
sub
or
add
mov
push
push
clc
addl
out
add
jmp
cmp
jmp
je
mov
inc
add
add
add
pop
pop
push
inc
in
pop
in
cmp
xor
leave
call
in
in
dec
push
test
add
leave
inc
test
add
add
dec
push
mov
hlt
push
dec
leave
mov
clc
cmovge
mov
clc
popl
push
add
push
xor
cld
add
cmp
add
add
int
mov
add
cmp
jne
xor
jmp
add
mov
or
mov
mov
mov
or
shl
icebp
addb
or
or
stc
shll
xor
inc
xchg
add
add
mov
test
sub
jmp
mov
lock
lea
mov
or
leave
add
dec
dec
test
paddb
add
dec
mov
mov
or
dec
xor
mov
adc
mov
call
mov
push
clc
or
push
lret
mov
mov
xor
cmp
lsl
call
or
dec
or
inc
xor
in
add
inc
pop
xor
testl
dec
sub
add
push
sub
mov
or
mov
xor
inc
cld
cmp
cmpb
in
xchg
aad
xlat
rol
mov
or
mov
or
push
mov
dec
enter
lret
ret
mov
or
into
add
add
bswap
ror
dec
add
mov
hlt
inc
inc
ret
mov
or
dec
xor
jne
inc
inc
mov
clc
pop
ret
mov
call
dec
add
adc
push
ret
in
call
push
add
xor
jmp
xor
add
shr
mov
mov
pushf
ret
fcomps
inc
in
xor
cld
fmul
sbb
ljmp
jbe
mov
clc
add
mov
lea
mov
call
hlt
xor
mov
xor
mov
hlt
into
inc
scas
mov
cld
add
add
inc
shrl
xor
mov
clc
dec
inc
decl
ret
movb
scas
inc
jmp
mov
pop
xor
mov
clc
test
mov
cld
call
xor
add
fdivl
lret
in
inc
or
into
mov
call
cld
mov
xor
lea
mov
add
inc
mov
dec
mov
cld
xor
sub
int
sub
add
mov
call
incl
mov
cld
jne
mov
aam
dec
or
jb
add
rorl
xor
xor
sub
mov
xchg
inc
xor
clc
mov
nop
faddl
xchg
jmp
mov
fadds
inc
or
dec
add
dec
mov
inc
push
mov
xor
rolb
ret
inc
inc
mov
xor
add
mov
cmp
dec
inc
xor
inc
mov
clc
lea
add
xor
mov
push
enter
mov
mov
loopne
ret
push
enter
inc
cld
mov
clc
ret
ret
mov
cld
pop
mov
mov
dec
xor
mov
inc
mov
adc
inc
mov
adc
cmp
inc
add
dec
pushf
mov
mov
nop
add
inc
mov
add
cmp
mov
clc
inc
inc
add
mov
in
jne
mov
clc
add
mov
in
mov
xor
cmp
inc
fmuls
lea
clc
mov
cmp
test
inc
mov
ret
inc
decl
push
dec
test
dec
mov
mov
mov
fadds
dec
inc
sub
inc
xor
faddl
inc
or
dec
add
mov
mov
mov
mov
lock
inc
add
fsubr
test
clc
push
cmp
pushf
inc
push
fsubs
clc
mov
mov
mov
clc
mov
cmp
mov
in
les
mov
or
dec
mov
in
dec
decl
fmuls
inc
mov
faddl
dec
push
xor
push
mov
push
mov
lock
inc
test
add
add
jne
lea
div
incl
xor
jb
add
mov
xor
mov
adc
mov
ret
push
push
lea
sti
add
or
mov
xor
mov
add
jne
lea
mov
call
shll
rolb
mov
pushf
mov
add
clc
dec
inc
xor
setl
lret
rol
dec
test
inc
lea
lea
mov
xor
bswap
rorb
roll
add
cmp
pushf
inc
jnp
mov
lock
lret
xor
mov
fmul
test
xor
mov
mov
mov
ret
add
dec
adc
add
inc
rcll
mov
xor
jb
add
mov
cld
mov
or
cmp
jne
mov
mov
xor
mov
mov
mov
xor
jb
add
add
mov
xor
mov
or
xor
mov
mov
xor
jb
add
enter
add
add
inc
mov
mov
add
dec
mov
add
cmp
add
mov
loopne
add
dec
or
in
or
mov
xor
add
enter
inc
mov
or
or
mov
cmp
add
roll
mov
or
xor
mov
mov
xor
mov
xor
mov
faddl
call
dec
dec
xor
or
loopne
or
iret
ret
mov
mov
call
lcall
add
push
test
dec
add
cmp
dec
mov
xor
mov
in
or
dec
xor
lea
or
ja
sbb
cmp
jne
mov
faddl
mov
fadds
mov
in
or
iret
add
xor
sbb
decl
mov
in
mov
dec
mov
fmull
jne
or
add
cmp
jne
lea
inc
mov
mov
jne
mov
test
inc
mov
loop
pushl
mov
add
mov
lods
dec
inc
mov
lret
mov
adc
std
ret
ljmp
hlt
rol
ret
cld
enter
inc
pop
mov
ret
test
jmp
push
call
in
addb
add
add
icebp
mov
cld
pop
dec
shll
add
cmp
je
mov
inc
or
ljmp
sti
cwtl
call
or
push
sub
push
inc
mov
mov
test
inc
push
push
xor
add
dec
add
inc
add
push
decl
add
or
call
mov
mov
inc
dec
add
push
call
incl
mov
mov
or
cmp
cmovne
adc
adc
inc
adc
jne
call
dec
inc
mov
add
mov
push
or
dec
xorl
cmp
mov
pop
adc
ret
mov
clc
mov
pop
mov
mov
push
push
lock
mov
adc
or
push
ret
xor
add
or
jge
mov
and
cmp
mov
xchg
dec
add
mov
add
dec
into
mov
mov
das
add
add
mov
and
mov
and
xor
lea
xor
add
cmp
orl
cmp
pushf
mov
or
jne
call
adc
mov
adc
movl
pop
jmp
and
and
or
and
incl
pushf
decl
pop
inc
in
ret
mov
and
mov
clc
cli
lcall
decl
adc
jl
adc
dec
or
jmp
adc
xor
and
add
dec
jne
jne
lcall
test
and
cmp
pop
sbb
add
cmp
add
adc
mov
push
adc
cli
push
adc
lahf
adc
add
add
inc
adc
jge,pt
add
xor
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
jno
add
adc
ja
adc
xorb
loopne
adc
cmp
add
xor
inc
add
xor
inc
add
xor
inc
add
add
add
pop
adc
add
adc
xchg
adc
ja
adc
add
adc
jle
adc
xlat
xor
inc
add
xor
inc
add
xor
inc
add
xor
inc
add
adc
stc
push
adc
cmpsl
xor
add
adc
stos
push
adc
inc
adc
add
adc
pop
and
add
ss
add
ss
add
ss
add
ss
add
ss
add
ss
add
ss
add
ss
add
adc
cmp
add
adc
jno
adc
pop
outsb
adc
mov
add
adc
lret
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
xor
push
xor
add
push
pop
ss
ss
xor
add
pop
dec
dec
dec
xor
pop
xor
add
push
xor
dec
inc
dec
cmp
pop
inc
add
dec
pop
push
push
inc
xor
push
add
push
pop
dec
dec
dec
dec
dec
add
cmp
aaa
dec
cmp
push
inc
add
inc
pop
dec
xor
xor
push
xor
push
xor
dec
push
inc
xor
cmp
add
dec
xor
xor
xor
xor
inc
add
xor
dec
push
xor
dec
xor
dec
xor
dec
inc
push
pop
inc
xor
add
inc
ss
push
inc
dec
inc
add
inc
xor
dec
pop
cmp
cmp
push
pop
push
pop
dec
push
dec
dec
inc
pop
dec
xor
push
inc
pop
xor
add
push
pop
inc
push
dec
xor
pop
dec
xor
inc
inc
dec
pop
push
dec
xor
dec
ss
aaa
aaa
dec
dec
add
ss
inc
inc
xor
dec
ss
pop
dec
dec
inc
inc
dec
xor
xor
xor
xor
inc
dec
xor
add
xor
xor
pop
add
cmp
inc
dec
inc
xor
pop
inc
inc
add
dec
pop
dec
xor
dec
xor
dec
pop
push
dec
dec
cmp
xor
pop
inc
pop
push
pop
cmp
pop
dec
dec
pop
add
pop
pop
push
xor
xor
xor
push
push
add
dec
add
add
dec
add
inc
add
add
xor
pop
add
add
add
add
add
push
add
xor
pop
add
inc
add
add
push
add
add
xor
xor
xor
xor
pop
add
add
add
inc
add
add
dec
add
add
add
add
add
add
cmp
dec
add
add
pop
add
dec
add
add
dec
add
dec
add
add
inc
add
add
dec
add
pop
add
pop
add
add
dec
add
add
aaa
add
xor
inc
add
pop
add
add
inc
add
push
add
pop
add
xor
push
add
add
dec
add
add
inc
add
inc
add
add
add
cmp
push
add
pop
add
add
inc
add
add
push
add
add
add
add
add
xor
cmp
dec
add
dec
add
cmp
inc
add
add
inc
add
dec
add
pop
add
add
xor
add
inc
add
add
pop
add
cmp
push
add
pop
add
add
add
add
add
push
push
inc
push
mov
lds
scas
cmpsb
mov
adc
add
dec
cmp
inc
jp
jb
addr16
jns
jbe
push
push
jns
inc
insl
jbe
popa
pop
je
pop
data16
ja
push
bound
pop
dec
jae
insl
imul
jo
bound
