add
add
adc
add
add
add
cmp
add
add
add
add
in
sub
movl
mov
adc
mov
movl
xor
mov
push
andl
xor
add
inc
mov
cmpl
jne
pushl
pushl
pushl
push
pushl
pushl
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
add
mov
xor
xorl
mov
notl
jmp
dec
dec
xor
fcoms
jp
testl
jl
jl
mov
xor
xor
ja
or
add
bswap
adc
sbb
mov
or
rol
or
sbb
out
outsl
add
mov
mov
je
fisttpl
jecxz
and
aam
dec
incl
mov
loope
pop
sub
jae
lret
cwtl
sub
mov
loopne
cmp
sub
or
sbb
outsl
insl
jb
cmp
jns
cmp
add
movsb
add
rol
add
jge
mov
daa
sbb
addr16
loop
xchg
xorl
ficoml
adc
lret
adcl
mov
xorl
mov
adcl
jmp
inc
in
xor
inc
in
xchg
scas
mov
jl
jl
xchg
inc
push
push
test
xchg
cmpsl
push
es
push
fisubl
sub
popa
inc
scas
testb
push
mov
mov
xchg
jmp
repnz
mov
lcall
hlt
or
clc
jl
mov
divb
fs
sti
mov
mul
inc
cwtl
dec
and
ds
pop
mov
icebp
enter
fcomp
mov
mov
dec
popf
inc
push
dec
or
fbstp
sarb
xor
lcall
adc
jnp
xor
mov
fidivs
pop
adc
dec
push
jne
add
mov
ds
repnz
push
test
movl
je
and
mov
and
jmp
xchg
or
mov
dec
popa
enter
dec
inc
call
jl
jl
sbbl
jmp
cmpl
jl
es
test
mov
adc
ss
pop
aaa
mov
fiaddl
fisubl
xchg
fstpl
sub
inc
imul
inc
mov
sbb
ret
pusha
lods
scas
pop
mov
shrl
xchg
rcr
lret
adcl
insb
jl
xor
cmp
sub
and
mov
pop
mov
mov
stos
xchg
ja
or
and
inc
sub
adc
jecxz
cmp
mov
jne
and
inc
notb
add
xor
mov
into
dec
jae
xor
and
dec
push
ja
aad
mov
sub
mov
sbb
imul
andl
mov
movl
cmpl
je
cmpl
jne
pushl
call
xor
or
dec
mov
jmp
xor
add
inc
mov
add
mov
subl
xchg
xor
sub
or
xor
mov
movzwl
xor
mov
or
mov
mov
xor
jmp
ficoms
loop
sbb
movsb
out
mov
jle
jl
jl
jl
mov
cmp
pop
les
bound
push
adc
push
scas
addr16
repnz
push
push
inc
lea
adc
add
in
out
addb
aas
mov
daa
hlt
lea
adc
jne
cmc
fbld
pusha
push
mov
xor
pusha
mov
clc
int
test
push
dec
mov
jo
outsb
int
sti
adc
push
inc
out
dec
xchg
mov
xor
mov
cmp
cmc
cmp
or
outsl
adc
mov
inc
jae
and
mov
and
shrb
fisttps
push
xchg
leave
xchg
mov
inc
pop
add
mov
jmp
add
repz
lods
addr16
jge
stc
icebp
sahf
or
insb
sbb
jl
jl
jl
clc
ds
sub
into
out
dec
das
loope
movsl
jns
push
scas
mov
jg
lcall
sbb
scas
add
cmp
outsl
sub
insl
loop
xlat
pop
mov
mov
adc
fucomp
push
inc
mov
sbb
das
push
inc
popf
jne
mov
jno
cmp
aam
inc
adc
das
adc
or
mov
xor
dec
movsl
push
scas
ret
sub
cld
lret
stos
jne
ret
pop
jmp
add
sbb
push
xchg
mov
cmp
rcrl
inc
jno
adc
shll
inc
js
dec
call
inc
add
inc
add
enter
pop
inc
add
add
add
add
je
cmpl
jne
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
xor
add
mov
mov
mov
movl
je
mov
xorl
xor
jmp
in
iret
lcall
mov
push
mov
jl
jl
jl
insb
mov
push
sub
std
push
imul
cs
adc
sbb
and
movsb
or
jne
shl
dec
in
in
sbb
or
mov
cmpsb
lret
sbb
rcrb
and
mov
rcr
not
sbb
dec
mov
add
xlat
sbb
push
mov
add
push
adc
or
movsl
insl
xchg
lahf
or
hlt
leave
fsubrs
dec
cmc
dec
pop
and
xchg
outsb
sti
sarl
or
popf
imull
addl
out
dec
sbb
ret
gs
and
inc
aam
push
movsl
outsl
mov
dec
aas
addl
inc
add
out
cld
sbb
out
inc
dec
incb
ret
movl
cmp
movl
jne
pushl
addl
call
movl
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
call
jmp
jmp
fdivr
ljmp
into
outsl
inc
ret
push
mov
mov
add
mov
cmp
enter
xchg
inc
rclb
dec
xchg
and
add
rcrb
inc
in
or
ljmp
cmp
std
sbb
sbb
icebp
adc
mov
add
test
lods
or
push
mov
cmpsb
les
push
adc
mov
stc
dec
mov
cs
xor
js
adc
adc
mov
cwtl
aad
sub
push
jecxz
mov
mov
pusha
inc
adc
mov
in
insb
xchg
cwtl
rcr
xor
test
push
sub
add
sbb
rcrb
jp
and
mov
xor
mov
adc
mov
xor
adcl
add
movl
cmp
movl
je
subl
pushl
jmp
js
dec
mov
jnp
hlt
push
cmpsb
imul
xchg
jl
mov
dec
add
stc
dec
movswl
dec
xlat
fadd
insl
int
xor
stos
test
cmpsb
int3
dec
stos
pushf
or
fisubrl
push
in
lret
cmpsb
stos
mov
mov
or
dec
mov
jno
test
imul
andl
cwtl
sbb
mov
mov
mov
cmp
notl
xor
push
and
mov
imull
inc
int3
stc
xchg
stos
mov
jns
sub
sbb
mov
aas
int3
das
arpl
xchg
mov
cmp
dec
sbb
jne
call
jmp
cld
mov
mov
dec
mov
aad
xor
jl
jl
jl
add
and
aaa
pop
cltd
cld
jl
sbb
mov
xchg
add
insl
dec
in
inc
dec
clc
rcrb
xchg
pop
mov
jbe
cmc
testl
mov
mov
or
mov
pop
insb
aad
push
outsl
addr16
flds
sahf
in
dec
in
and
jb
ja
add
aas
cwtl
sbb
sarl
stos
and
pop
daa
pop
xor
sti
sbb
xor
mov
add
mov
ret
sub
mov
lret
out
or
stc
mov
lcall
cmc
dec
mov
stos
shrl
pop
pop
out
aaa
pop
repnz
ret
mov
mov
add
mov
xor
add
movl
cmp
movl
je
mov
mov
andl
xor
add
inc
mov
cmpl
jne
push
push
pushl
call
cmpl
jne
xor
xor
inc
mov
cmpl
jb
subl
jmp
inc
adc
jns
lret
push
insb
jno
mov
int
jb
jl
jl
jl
mov
cmp
out
lea
sti
sub
sub
dec
out
mov
xchg
and
inc
sub
into
xchg
loop
pop
mov
stc
jl
pop
jnp
inc
aad
mov
mov
pop
push
sahf
sbb
addr16
jle
divb
cld
cmpsb
jge
sub
stos
and
or
and
xchg
adc
sbb
decl
jnp
xchg
loopne
popa
adc
pusha
jge
movsl
ja
call
out
sub
cmc
cmpsb
pop
fidivrl
stc
aaa
sbb
or
idivl
mov
das
xchg
or
daa
sbb
pop
mov
and
mov
mov
andl
add
movzbl
and
mov
mov
sub
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
push
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
notl
add
xorl
mov
jmp
cmp
mov
cmp
and
jl
mov
or
and
and
push
js
fstps
pop
xchg
call
iret
dec
and
ss
xlat
adc
xor
mov
fbld
fcomps
mov
mov
adc
xchg
cmp
xlat
mov
shlb
loop
rorb
push
es
scas
insb
jbe
filds
daa
adc
aad
clc
push
cmp
in
sbb
mov
dec
fsubr
scas
popf
mov
insl
lret
lock
lock
dec
push
fldl
xor
aas
insb
ds
adc
cli
mov
jle
test
test
loop
push
mov
outsb
ret
pop
xchg
in
repnz
mov
movl
cmpl
je
cmpl
jne
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
add
xor
mov
jmp
xor
mov
sub
orb
dec
jne
jl
jl
jl
mov
out
sbb
push
jge
lock
pop
jns
std
cmp
lock
mov
gs
sbb
pop
sub
rcrb
out
pcmpeqw
xlat
sti
test
repnz
nop
sbb
ja
fldl
inc
outsl
push
mov
adc
mov
mov
pop
out
aad
xchg
and
mov
andb
into
lret
xor
das
adc
aaa
sub
dec
loopne
test
imul
xor
rcrb
cmp
pop
hlt
faddp
mov
call
jle
cmc
jle
leave
sub
and
mov
mov
add
lea
mov
push
pushl
jmp
pop
jecxz
xchg
mov
jb
daa
loop
push
hlt
je
jl
jl
jl
rclb
das
jnp
shll
jo
pop
inc
jl
push
ret
sti
pop
push
pop
mov
mov
jns
daa
mull
mov
scas
push
loop
ror
pop
stc
pop
sub
enter
mov
jb
in
fcomp
test
lods
cmp
push
pop
adc
cmp
mov
popl
gs
add
sbb
lcall
sbb
test
mov
fbstp
aaa
aad
mov
imul
mov
cli
xchg
push
or
mov
jnp
lret
adc
xor
cmpsb
cmpsb
movsl
add
data16
mov
mov
jne
jmp
or
mov
mov
push
int3
xchg
xchg
int
sub
lret
cmp
jl
jl
jl
std
cmc
aas
mov
mov
les
inc
or
add
mov
and
adc
fdivrs
test
jecxz
lcall
out
xchg
fildl
test
aam
mov
sbb
adc
or
bound
sub
xorl
icebp
mov
sbb
rol
add
mov
push
push
fstpl
jo
in
popf
push
inc
sbb
jecxz
adc
adc
fcoms
addl
das
xor
cs
into
aam
xor
push
pushf
adc
test
mov
frstor
pop
add
call
inc
cld
mov
xor
add
cmp
jne
jmp
dec
xchg
pop
add
arpl
adc
xchg
pusha
ja
jl
jl
jl
fwait
pusha
fisubrs
mov
fisttpll
mov
push
jno
xorb
ja
xchg
adc
sbb
xchg
inc
clc
cmc
shll
sub
jle
js
mov
jnp
nop
mov
jae
pop
ficoms
mov
dec
cmpsb
sub
je
call
in
cmp
test
aas
rol
cmpsb
mov
mov
clc
push
rorb
lret
adc
out
hlt
das
pop
in
imul
test
rclb
and
cmpsl
cmc
rcr
push
pop
pusha
aaa
push
adc
loope
pop
pop
mov
mov
xor
xlat
pop
inc
pop
sarl
sbb
clc
jb
jmp
mov
xor
add
jmp
mov
movzwl
mov
mov
jmp
lods
adc
ljmp
imul
stos
lahf
xchg
xor
mov
sbbl
repnz
lds
ja
jbe
aam
arpl
cmp
movsl
pop
pop
cli
mov
std
lcall
dec
jb
mov
sti
mov
lahf
xor
jecxz
fimuls
cmc
enter
das
imul
pusha
cmp
pminub
aam
or
jecxz
push
lds
cmp
or
sarl
push
mov
in
pop
xchg
dec
xor
test
mov
loop
xchg
jl
and
adc
mov
lods
sub
mov
scas
outsb
add
je
dec
iret
inc
xor
jecxz
mov
mov
mov
jmp
xchg
sub
cltd
cmp
mov
dec
sbb
fmull
jl
mov
sahf
pop
mov
xchg
mov
mov
hlt
fdivl
cwtl
jne
cmp
pop
mov
mov
inc
push
and
cmp
pusha
inc
insb
sahf
inc
outsl
sahf
jno
sub
lods
sbb
xchg
dec
mov
cmp
fists
xchg
data16
jge
lods
pop
xor
mov
arpl
add
rol
lret
push
mov
pop
loop
mov
xor
pop
jecxz
addr16
in
xor
dec
xlat
jmp
and
xchg
mov
sub
xchg
pop
add
cmp
jle
arpl
and
xchg
imul
add
cmp
jne
mov
xor
jmp
mov
add
mov
mov
test
je
mov
push
pop
push
dec
pop
xchg
sub
xchg
dec
mov
imul
sub
mov
mov
mov
xor
mov
add
mov
jmp
cmp
cli
test
fdivr
or
add
jl
mov
mov
pop
lar
pop
movsl
daa
test
cmp
and
inc
and
jle
test
test
xor
outsb
movl
imulb
lret
mov
movsb
mov
leave
push
jmp
jns
stc
xor
mov
push
add
mulb
ja
push
push
insl
inc
test
lods
fnsave
subb
loope
pop
outsl
arpl
in
das
fisubrs
adc
je,pt
mov
dec
pop
out
mov
jne
mov
insl
out
mov
stos
lea
mov
xchg
dec
shl
adc
jle
and
outsl
pop
jmp
stc
dec
out
mov
xor
add
mov
jmp
and
rep
lods
sti
pop
xorl
inc
je
or
jl
jl
fucomip
mov
cli
es
addr16
mov
sbb
fs
mov
inc
lods
sarl
dec
imul
xchg
cmpsb
or
out
lret
adcb
xor
inc
push
mov
mov
cmp
pop
sbb
scas
aaa
push
xlat
pop
lret
cmp
mov
sub
movsl
movsl
insb
mov
add
rclb
loope
xchg
mov
sbbl
out
sbb
lods
clc
jne
je
aam
mov
lahf
dec
lds
sti
jp
push
leave
pushf
dec
fsub
pop
sbb
and
nop
in
or
cli
add
fidivrs
inc
imul
mov
xor
mov
lea
cmp
je
mov
mov
mov
mov
mov
xor
xor
mov
add
div
mov
xor
lea
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
imul
mov
xor
mov
lea
cmp
jne
jmp
xlat
pop
cmp
pop
insl
jnp
sbb
mov
mov
jl
mov
cld
push
cmp
rep
and
pop
sbb
lcall
add
hlt
incl
pusha
int3
dec
lods
jns
stc
fisubrs
daa
lret
pushf
fdivrs
leave
test
xlat
shll
dec
cs
outsb
push
and
or
mov
xchg
push
test
jbe
test
pop
xchg
loop
add
inc
push
faddl
and
lods
cmpsb
pop
mov
cmp
jmp
insl
cltd
jo
out
xor
imul
ss
sbbb
rcl
and
mov
pushf
adc
cmp
push
test
dec
pop
jbe
xor
mov
or
mov
mov
mov
icebp
mov
jmp
mov
mov
xor
jmp
fsub
mov
clc
mov
inc
cmc
repnz
jl
mov
stc
imul
daa
rorb
mov
int3
push
jl
mov
in
sarb
adc
cltd
test
dec
dec
mov
sub
or
dec
inc
icebp
sub
les
jo
jne
sub
lds
or
mov
push
ret
xor
adc
xchg
dec
dec
clc
in
fs
iret
mov
mov
add
adc
jg
or
icebp
les
push
in
ja
and
pop
jns
ss
cmpsb
mov
and
stc
into
dec
movb
jno
add
and
push
xchg
pushl
shlb
ds
mov
jmp
pop
fimuls
cltd
push
mov
mov
jl
jl
jl
in
and
adc
lret
and
scas
lods
mov
mov
out
pop
cmp
inc
cmc
fmull
jns
mov
movsb
cmp
jp
int
sub
stos
xor
jno
sub
iret
or
sbb
cwtl
and
test
and
pop
fisttpll
in
notl
and
push
adc
iret
rcll
lock
repz
xchg
cmp
push
xchg
je
daa
icebp
sti
push
repz
and
outsb
popa
cmp
mov
hlt
ds
stc
push
mov
cmpb
in
das
loop
arpl
push
mov
fisttps
ret
xor
lea
add
call
xor
inc
cmp
jmp
jmp
inc
insb
jns
jmp
loope
pushf
xorb
inc
sbb
jl
jl
push
f2xm1
popa
mov
data16
xchg
mov
and
xchg
aas
mov
in
xor
mov
inc
scas
les
call
loopne
and
nop
push
int3
and
adc
sub
mov
ss
ret
mov
push
fsubl
inc
imul
dec
and
rorl
pop
inc
jne,pn
jecxz
loopne
daa
stos
lods
lahf
dec
sbb
les
mov
push
inc
fcmovnu
cmpsb
enter
add
cli
inc
sub
ficoms
cmp
stc
les
lods
imul
dec
je
jno
pop
push
cmp
and
pop
andl
jae
aad
lahf
gs
imul
sbb
add
xchg
push
pop
push
pop
inc
xchg
sub
xchg
dec
mov
imul
add
xchg
push
xor
mov
jmp
jns
inc
ds
mov
add
test
or
jl
jl
jl
inc
lods
cmp
fisubl
jmp
inc
imul
je
jne
inc
mov
mov
shlb
in
add
sahf
repz
out
pop
pop
out
jg
inc
arpl
fadd
sub
adc
sub
add
lret
adc
sbb
aam
push
idivl
pop
cltd
test
xchg
popf
shll
fld
xor
pop
or
mov
pushf
push
sub
cld
bnd
xchg
and
or
aad
and
jmp
emms
rcrl
jbe
mov
sub
loop
dec
jmp
jle
shr
orl
sbb
jmp
in
test
sti
mov
aad
adc
or
jl
mov
xor
mov
ret
xchg
mov
xchg
sahf
inc
out
push
test
lods
ljmp
xchg
mov
mov
mov
jp
mov
pop
adc
dec
sbb
lret
imul
loopne
iret
xlat
jno
mov
imul
pop
pop
push
jnp
mov
push
cmp
das
and
adcb
sub
sbb
pop
sub
aam
pop
mov
int
gs
pop
outsl
lahf
or
mov
cmpsb
loop
sbb
mov
scas
popf
mov
jne
mov
sti
and
mov
add
dec
mov
and
dec
scas
daa
or
sub
rolb
pop
hlt
jmp
dec
jge
cmpb
jge
push
loope
xchg
jno
mov
mov
imul
xchg
bound
je
add
mov
jnp
int
cmp
adc
push
cmp
icebp
adc
pop
lret
xlat
rclb
xchg
loope
sahf
cmp
mov
movsb
adc
lods
mov
ljmp
icebp
adc
xchg
sbb
push
xchg
outsl
ds
mov
mov
mov
into
ss
jbe
adc
mov
lahf
int
jnp
lods
cmp
mov
lret
push
pushf
je
js
add
fildl
adc
decl
test
xor
stos
mov
inc
imull
xor
push
push
and
mov
pop
pop
pop
leave
ret
push
mov
sub
leave
ret
push
mov
push
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jne
push
push
pushl
pushl
call
cmpl
jne
xor
add
inc
mov
jmp
andl
mov
inc
mov
cmpl
jne
push
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
push
mov
movl
cmpl
je
cmpl
jne
push
push
push
push
push
push
call
mov
dec
mov
jmp
mov
movl
mov
push
mov
xor
mov
push
mov
add
cmp
je
mov
mov
xor
mov
sub
add
xor
add
cmp
ja
jmp
sbb
insl
std
pop
mov
enter
push
jl
into
jg
jl
je
pop
jns
cwtl
lahf
add
outsl
sti
scas
or
ds
xchg
jecxz
xor
clc
add
aad
pop
sub
ljmp
stos
cld
mov
daa
pusha
dec
bound
mov
dec
iret
jmp
push
cli
test
leave
sub
mov
pusha
xor
and
pop
sti
enter
dec
mov
inc
pop
ljmp
jl
test
mov
push
dec
dec
add
pusha
pop
mov
dec
push
sbb
jnp
dec
jmp
icebp
xchg
ja
std
push
int
jmp
ficoms
mov
sbb
inc
adc
fbstp
pop
push
movsl
mov
adc
imul
fiadds
push
inc
mov
adc
jns
push
sbb
xlat
xor
sbb
out
test
cmp
enter
fxtract
sbb
cld
pop
sub
adc
imul
clc
mov
lods
es
sub
xor
ljmp
loope
push
out
dec
inc
cmp
sbb
and
les
cmpsl
arpl
inc
xlat
test
push
imul
lds
sbb
jmp
jnp
sub
dec
aad
xchg
pusha
xchg
pop
pop
add
push
push
jmp
mov
mov
mov
xor
add
mov
imul
mov
xor
add
mov
mov
mov
xor
lea
mov
xor
mov
sub
add
jmp
jp
pop
cmp
jge
mov
push
pop
pushf
add
dec
add
jg
jl
imul
adc
loopne
ja
lds
jbe
sub
cmpsb
jge
mov
das
dec
pop
fsub
lods
int
lock
lods
cmp
fmull
movsb
shl
jae
pop
push
into
inc
or
xor
testl
xchg
push
cwtl
outsb
push
pop
mov
divl
std
xchg
outsl
mov
pushl
mov
imul
jb
or
loope
ret
popa
fnstenv
xchg
ret
clc
or
cmpsb
sub
push
mov
cmp
adc
add
cmp
fs
int3
loope
lods
mov
cld
inc
or
adc
xchg
add
loop
adc
sti
test
ds
cmp
out
inc
push
je
inc
mov
mov
fdivrl
xchg
push
test
ret
aas
pop
cmpsl
adc
repnz
cli
jb
sbb
clc
lods
cmp
jnp
out
clc
push
inc
xchg
repnz
aam
ret
sti
inc
mov
push
and
aaa
mov
aam
gs
push
mov
cmp
cmp
dec
sahf
stc
jle
cmp
sbb
test
push
xor
add
xor
jbe
pop
mov
jmp
jno
in
cli
insl
cmpl
int
out
sbb
jl
into
jg
jl
or
into
pop
cmp
test
daa
fwait
inc
mov
or
or
add
test
dec
enter
or
sbbl
jp
push
neg
nop
ljmp
std
ja
scas
data16
movsb
ret
inc
inc
test
mul
fildl
pop
sub
mov
jp
pusha
pusha
mov
out
sub
mov
or
adcb
out
rcll
dec
dec
inc
mov
mov
push
int
popa
mov
mov
push
xor
mov
call
decb
fistpl
jo
mov
xor
fcomps
inc
sbb
movd
shll
outsb
data16
out
test
ret
sub
loop
pop
cmpsl
adc
mov
loop
lods
outsl
sbb
jo
rclb
adc
push
xchg
subb
dec
mov
sbb
loopne
pop
ss
jno
push
pop
push
inc
push
inc
loope
sbbb
and
push
aad
or
lahf
jecxz
ja
adcb
es
mov
out
dec
sbb
sub
inc
jbe
sub
jge
jo
ficomps
insl
xchg
lret
adc
add
in
cmp
adc
cld
iret
aam
pop
leave
ret
push
mov
mov
add
mov
movzwl
or
sub
mov
or
mov
andl
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
pushl
pushl
pushl
call
jmp
mov
addl
xor
cmp
je
mov
xorl
jmp
rolb
loopne
dec
push
mov
jle
into
or
add
jl
jl
mov
arpl
je
pop
shll
outsl
ds
dec
add
jae
test
jmp
fs
mov
jmp
xchg
sahf
push
cltd
cmc
repnz
movsb
push
popf
addb
cmp
in
pop
sahf
cld
push
outsb
aam
into
popf
and
xchg
xor
mov
adc
ss
or
xchg
add
mov
or
cmp
mov
xchg
push
int3
sbbl
jmp
sahf
and
cwtl
inc
js
cmp
fucomp
xchg
shll
jl
hlt
jl
jl
sarl
fs
lods
ret
inc
mov
outsl
jns
ja
loopne
mov
cmpsl
sub
cmp
mov
sub
shll
fs
and
fucom
or
mov
mov
mov
cmpsl
push
aaa
add
mov
js
je
dec
test
sti
adc
fwait
cli
lea
add
cld
xor
or
jmp
xchg
mov
outsb
ss
cmp
jne
mov
add
jmp
mov
xor
jmp
ficomps
mov
adc
and
incb
jl
push
sbb
mov
idivl
or
imul
ja
dec
dec
mov
js
pop
sub
call
mov
bound
inc
adc
pop
inc
pop
std
daa
movl
lods
mov
dec
ss
sub
cmp
lods
dec
jp
div
push
push
xor
aas
xor
sub
cmp
ja
loope
and
add
pop
bound
call
dec
jae
adc
adc
inc
add
add
mov
jmp
mov
mov
mov
mov
mov
add
pop
pop
ret
push
mov
sub
push
mov
and
mov
movl
cmpl
je
cmpl
jne
push
push
call
mov
dec
mov
jmp
xorl
mov
movl
mov
xor
movl
xor
mov
and
jmp
loopne
enter
sti
in
cmp
jg
ss
inc
jbe
jl
xor
jl
mov
cmp
arpl
mov
push
jl
lock
sub
loope
dec
lahf
aad
xchg
bound
sbb
sub
fwait
xchg
sti
popa
jl
cmp
pusha
adc
rcr
shlb
sbbl
push
lret
mov
ds
cmp
cmp
out
adc
cli
dec
add
test
mov
aaa
in
out
loopne
mov
test
pop
pushf
insb
lea
lahf
jecxz
aam
pop
lcall
sbb
mov
stc
aas
xor
sbb
adc
pop
mov
adc
mov
inc
subb
or
or
pop
nop
pop
stos
cmpsl
xor
pop
in
ljmp
pop
lods
notl
and
es
xor
adc
jns
dec
pop
sbb
ljmp
scas
ror
xchg
rorb
mov
mov
ljmp
cmp
adc
push
add
sti
ljmp
dec
les
xchg
dec
push
cs
pop
mov
xor
rcl
test
add
push
icebp
lds
sar
jae
xchg
mov
insb
js
push
pop
ja
pusha
popf
scas
and
sarb
sarb
add
adc
mov
mov
mov
sub
xor
mov
xor
not
add
add
mov
andl
mov
inc
mov
cmpl
jne
push
pushl
push
call
cmpl
jne
xor
xor
inc
mov
cmpl
jb
adc
movl
adc
movl
movl
movl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
jmp
or
movl
movl
movl
or
mov
movl
xor
or
mov
add
cmp
movl
je
movl
push
movl
jmp
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
jmp
movl
mov
orl
jmp
std
xor
mov
add
test
ja
jmp
jl
jg
jl
shll
jae
fisttpl
mov
push
adc
lods
aaa
in
fnstenv
sbb
lods
xlat
lahf
push
pop
loop
lahf
mov
mov
sub
icebp
dec
into
add
pop
mov
pop
cltd
dec
sub
bound
ljmp
imul
in
jp
fdivrl
sub
test
pop
push
in
or
xchg
jne
imul
mov
insb
add
dec
out
bound
pop
ljmp
les
in
inc
push
das
hlt
aam
sbb
bound
xchg
popa
xchg
sub
in
and
push
or
cmp
xor
inc
ret
lock
fmul
cmp
test
adc
jg
mov
cmp
add
xchg
sub
or
mov
jo
sbb
lods
out
adc
add
mov
mov
inc
inc
cmp
mov
insl
adc
in
xlat
int
lock
repz
cmp
xchg
jno
pop
dec
scas
frstor
fcmove
and
repz
sub
xor
shrb
push
inc
aad
ds
cli
lret
push
cmpsl
inc
repnz
jmp
ret
inc
cwtl
mov
mov
cli
adcl
mov
xorl
xor
xorl
add
movl
cmp
movl
jb
xor
mov
mov
xor
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jne
pushl
call
cmpl
jne
xor
xor
inc
mov
jmp
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jne
pushl
push
push
push
call
jmp
xor
mov
mov
sbb
add
jmp
jno
movsl
imul
pop
clc
push
fistl
xchg
jl
xor
jl
sti
pop
icebp
data16
jg
das
test
aaa
js
test
jb
push
jge,pn
or
and
dec
popf
popa
shld
pop
cmp
lock
mov
push
outsb
xor
mov
nop
sub
stos
stc
push
les
mov
xor
sbb
in
aas
lods
xchg
in
sbb
add
repz
fcomip
pop
jnp
or
lods
cmp
in
or
mov
sub
pop
icebp
sbbb
div
imul
mov
mov
dec
or
sub
dec
loop
mov
repnz
out
lret
mov
cltd
int3
mov
push
sbb
mov
jo
aas
pushf
cmpsb
cmp
jno
pop
mov
mov
in
or
stos
dec
adc
fcomps
mov
mov
das
nop
jl
iret
pop
fidivrl
dec
and
xor
jne
mov
xor
fcmovbe
mov
scas
jo
pop
hlt
and
sub
adcb
arpl
std
cmpsb
dec
test
in
pop
jae
inc
cltd
roll
loop
mov
dec
inc
add
add
add
add
sbb
cmpl
jne
pushl
call
cmpl
jb
add
imul
mov
mov
sbbl
sub
cmp
ja
add
mov
xor
notl
add
movl
jmp
movzwl
or
mov
movl
cmpl
je
cmpl
jne
pushl
push
call
mov
dec
mov
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
pushl
push
push
push
push
pushl
push
push
call
cmpl
jne
mov
inc
mov
jmp
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
jmp
dec
xchg
call
sub
adc
scas
or
xor
jl
ja
xchg
add
in
imul
iret
push
fsubrl
xchg
test
push
fbstp
icebp
ret
jp
in
pop
mov
scas
xchg
aad
loop
cltd
mov
ja
test
xchg
test
sahf
dec
setg
leave
sbb
cmp
mov
push
stc
and
sbb
into
pop
hlt
icebp
push
out
cmp
jmp
mov
dec
mov
test
loopne
push
inc
loopne
leave
andl
test
mov
sbb
leave
data16
lahf
scas
xchg
dec
icebp
pop
mov
pop
jle
xor
repnz
out
pop
dec
pop
gs
xor
cmp
and
stc
mov
jno
add
aas
push
sbb
pop
or
mov
ret
push
pushf
ficoms
push
jmp
cltd
jae
pushf
xchg
xchg
orl
add
scas
stc
outsl
push
inc
fstl
jae
dec
and
pop
int3
shrb
lret
jl
mov
pop
push
and
loopne
popa
sub
clc
fists
hlt
mov
jno
fstp
jge
cs
pop
add
xchg
xchg
push
cld
test
sbb
leave
sbbb
shlb
clc
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
jmp
sbb
cs
mov
cmovae
dec
rclb
jl
xor
jl
mov
lahf
fbld
test
rcrb
pop
repz
and
es
adc
mov
cld
andb
jge
arpl
outsb
gs
sbb
push
jo
sbb
fiaddl
xchg
in
xor
stos
push
mov
clc
pop
pusha
das
mov
xchg
outsb
xor
jp
das
pop
mov
mov
xchg
jmp
xor
mov
hlt
xchg
push
pop
rcrb
push
mov
iret
loopne
or
shll
nop
leave
pop
push
push
incl
adc
push
add
cmp
pop
cli
cmp
mov
lret
shrb
cwtl
mov
out
pop
bound
fistps
in
mov
push
push
xor
pop
lds
stc
lock
pop
mov
and
mov
lret
inc
fdivrs
insb
movzwl
std
and
imul
push
in
push
mov
or
insl
idivl
or
sbb
mov
bound
xchg
jl
adc
int
lock
sarb
sbb
xchg
cmp
sub
vmovaps
data16
dec
out
sub
daa
dec
sub
cmp
or
add
mov
jmp
mov
mov
xor
xor
jmp
dec
inc
fdivr
fidivrl
gs
shr
mov
sbb
jg
jl
in
mov
cmp
mov
nop
mov
loopne
lret
jge
xchg
push
xor
sbb
cmp
lds
sub
into
push
fsubrl
sub
lcall
pavgw
inc
fwait
jmp
push
cmp
add
imul
testb
in
xchg
mov
inc
out
and
mov
outsb
fwait
push
out
addr16
aaa
sub
fistpll
xchg
cltd
es
fmul
aaa
mov
sub
popa
or
jnp
or
inc
scas
into
jae
dec
jnp
or
cmpsl
out
xchg
add
cmc
mov
adc
int
cmp
out
dec
jno
sbb
dec
fsub
out
and
and
mov
imul
lahf
inc
cmp
pushf
jecxz
in
cmp
popf
lcall
sti
mov
and
or
movsb
gs
out
dec
push
sbb
jmp
ret
xlat
or
mov
cmp
jnp
pop
inc
sti
push
arpl
rcll
adc
jmp
sbb
xchg
dec
jns
arpl
in
dec
sbb
repnz
fidivrl
inc
sti
dec
aaa
popf
ret
push
stos
imull
add
stc
add
imul
mov
jmp
fwait
bound
pushf
stc
insl
fwait
jge
les
and
jl
jg
jl
cld
das
andps
lret
dec
xchg
dec
jmp
bound
js
mov
mov
adc
into
fildll
mov
ljmp
adc
int3
lret
fs
cltd
jmp
sbb
popa
inc
icebp
clc
push
xor
mov
enter
inc
ss
repnz
add
sbb
push
out
aaa
push
popf
enter
jmp
add
ss
cmp
and
dec
dec
add
push
ret
int
mov
sbb
jo
mov
inc
orb
ret
sbb
dec
push
sub
jae
adc
or
test
xchg
mov
stos
cld
jp
dec
ja
sbb
add
stc
adc
push
in
sti
cmc
loopne
shr
outsl
cli
test
cmp
lcall
or
ja
call
lcall
jno
mov
add
imul
inc
sub
test
mov
into
jp
faddp
lahf
sub
add
sbb
cmc
aam
outsl
pop
popa
mov
add
lea
jb
mov
ret
das
inc
sti
jo
jne
fistpl
sub
mov
insb
inc
aam
sbb
add
add
jno
adc
sti
frstor
jo
jo
jle
jl
xor
jl
mov
mov
rclb
xor
jo
push
sbb
mov
or
out
xchg
and
sbb
cmpsb
ret
mov
leave
movsb
call
fs
lcall
mov
aaa
in
mov
dec
mulb
sbb
inc
mov
int
inc
jne
test
mov
lcall
sub
bswap
movsb
mov
test
scas
or
out
repnz
cmp
and
lock
lods
inc
or
in
dec
cltd
enter
adc
sub
cmp
rcll
cmc
iret
dec
mov
nop
inc
inc
insb
jo
sbb
xchg
mov
out
das
popl
outsb
popf
daa
sbb
mov
adc
add
es
test
jbe
lock
pusha
idivl
sub
cmp
sahf
xchg
iret
aaa
push
mov
cs
sbb
outsb
lock
pushf
and
sub
sarb
and
jae
fistl
loop
add
stos
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
mov
jbe
mov
mov
xor
xor
add
add
jmp
mov
dec
stos
lcall
ss
jl
xor
jl
push
mov
scas
mov
cmp
fstl
ror
leave
pusha
mov
xor
gs
insb
xor
fbstp
mov
or
aas
loop
mov
push
cmp
stc
pop
dec
cli
add
push
lret
or
rorb
fcmovnbe
cmp
push
mov
sub
loopne
ds
and
mov
jnp
mov
add
inc
push
sbb
rolb
jp
in
xchg
movsl
jne
and
mov
popf
fmuls
xchg
mov
pop
mov
scas
mov
jns
add
repnz
push
inc
add
pushf
iret
call
sbb
xor
dec
in
or
dec
sub
jge
aas
mov
les
mov
sbb
xchg
xor
jmp
cmp
hlt
cli
mov
in
popf
jne,pn
das
jg
xor
lods
dec
inc
popa
iret
push
cld
add
and
xchg
pop
gs
sbb
jp
mov
jp
push
jge
nop
mov
fs
roll
sti
add
gs
cmp
stos
adc
pop
push
pop
std
fdivs
push
push
test
mov
mov
mov
mov
add
movl
mov
movl
movl
mov
xor
add
jmp
mov
xor
add
mov
mov
mov
jmp
int
mov
mov
and
adc
jg
jl
or
pop
repz
rorl
test
pop
loop
xchg
leave
xor
ja
sbb
icebp
mov
leave
out
push
mov
sbb
rcrb
adc
insb
or
jl
cmp
inc
ljmp
iret
cwtl
jg
orb
mov
sbb
stc
adcb
out
aad
ds
movsl
cmp
mov
pop
lret
rcrb
xor
mov
jl
push
adc
xchg
or
push
repnz
repz
sahf
test
movsb
inc
or
icebp
ja
jg
cmp
push
enter
xchg
lcall
mov
lahf
movsb
and
popa
adc
or
xchg
ja
fistpl
dec
or
movsb
ret
push
add
xor
enter
lcall
cmp
imul
mov
push
jge
flds
ja
jl
mov
mov
adc
jns
jecxz
movsl
mov
pop
imul
arpl
and
or
fwait
bound
es
push
and
push
hlt
xor
add
mov
mov
mov
mov
mov
xor
add
mov
mov
jmp
adc
iret
sbb
and
inc
adc
jg
jl
xchg
mov
dec
jb
cmp
jb
aam
sub
out
cmpsl
out
pop
fwait
add
xchg
add
jecxz
fbstp
mov
xchg
and
and
shlb
jne
push
pop
xchg
inc
mov
mov
pop
add
inc
in
mov
push
inc
jmp
stos
repz
shl
xor
dec
add
sarb
jmp
and
shll
cmp
stos
out
mov
bound
jno
cmp
sbb
lret
call
mov
imul
adc
loope,pt
mov
fadds
rolb
test
fisttps
fldt
inc
out
sbb
aad
add
sahf
pop
xor
out
je
mov
in
das
lahf
adc
jle
js
in
mov
pop
inc
lret
notb
mov
and
cmp
bound
aad
cmpl
add
fs
or
nop
inc
add
cmpsb
in
addb
mov
ret
or
daa
cmp
dec
mov
punpckhbw
mov
or
add
mov
mov
mov
mov
xor
xor
add
add
imul
add
jmp
stos
outsb
cmp
fnstsw
lods
sbb
push
adc
jg
jl
int3
pop
jecxz
cmc
je
jl
push
sub
lret
jbe
cmp
fisubl
pop
adc
testb
mov
add
mov
xchg
or
lock
xchg
mov
sub
cs
mov
mov
test
sbb
repz
dec
sbb
stos
or
sarb
jbe
test
adc
rcl
shll
cwtl
loope
xchg
out
into
lods
xchg
repz
rorl
pop
icebp
sarl
pop
movsl
test
pop
cmpsb
mov
test
mov
lret
dec
cmp
dec
mov
cltd
lock
in
popf
jmp
cwtl
mov
mov
arpl
cmp
mov
es
add
pop
stos
and
push
insl
push
or
mov
lds
aas
jnp
sub
cmp
in
sub
loopw
dec
adc
out
ss
imul
dec
mov
loope
pop
adc
push
lret
lods
fcmovu
jae
repnz
inc
xor
jbe
dec
inc
cs
add
cli
test
nop
aad
push
mov
push
in
mov
mov
jmp
or
push
cmp
dec
rcl
jo
adc
jl
cli
xor
adc
rcll
sub
in
sub
daa
insl
jmp
sub
mov
outsl
movsb
pop
aas
mov
xor
ss
cmp
int
es
enter
mov
or
pop
sbb
js
addr16
nop
push
insl
add
lock
pop
pusha
lods
adc
adc
xchg
jo
dec
iret
xor
jo
aam
push
sub
mov
inc
or
std
jp
sbb
psadbw
or
add
mov
xchg
in
jns
lods
pushf
mov
filds
fs
dec
ss
and
add
dec
xchg
fistl
mov
enter
pusha
imul
add
js
adc
cmp
dec
jne
fistl
or
or
or
sub
pop
mov
ljmp
std
sti
adc
push
and
stos
sub
sarl
stc
ret
and
add
lds
leave
jg
cmp
jnp
movsb
mov
stos
cmp
adc
jmp
test
fcmovbe
jp
repnz
push
and
jge
insl
sarl
cwtl
mov
dec
mov
add
imul
mov
xor
sub
mov
mov
jmp
push
pop
inc
cmpl
jb
fisubl
scas
adc
jl
jg
jl
and
push
lea
aas
outsl
cmp
std
outsb
xor
cmc
cwtl
jbe
sbb
and
mov
and
mov
jmp
jl
into
in
repz
inc
stc
mov
movsl
mov
dec
pop
ret
xchg
scas
push
andb
and
push
mov
cmp
nop
jp
sub
push
lds
hlt
push
popf
or
outsb
int
mov
fimuls
lods
sub
int
xchg
test
leave
scas
scas
sub
repnz
jp
push
xor
dec
sub
movsb
sbb
cmp
mov
push
xchg
push
das
mov
std
or
dec
sub
fcoms
add
xor
cwtl
xchg
out
hlt
dec
movsb
mov
out
mov
pop
xchg
int3
cwtl
xchg
xchg
push
add
cmp
lcall
repnz
fsubr
push
jno
jb
mov
jg
scas
jbe
scas
test
cmc
aas
push
sub
popf
mov
mov
push
mov
loope
xor
adc
mov
pop
out
cmp
mov
dec
dec
ljmp
inc
xchg
xor
cltd
das
stc
lahf
fwait
cmp
clc
add
imul
mov
xor
sub
lea
cmp
jbe
mov
mov
xor
add
imul
mov
xor
add
mov
lea
mov
jmp
jecxz
out
jge
sti
mov
pop
cmp
popw
jl
xor
jl
pop
sub
mov
jae
inc
in
xorl
jge
jge
mov
inc
push
movsb
push
pop
lcall
or
aam
mov
ret
cmovle
xchg
jecxz
movsb
cmpsb
movsl
jp
cmpsl
mov
ret
rclb
push
xchg
in
mov
xchg
mov
add
jb
mulb
movsb
push
adc
jle
jl
idivb
shrb
mov
push
dec
popa
inc
push
adc
pop
rorb
sub
push
cli
loopne
push
mov
pop
xchg
dec
daa
jmp
adc
neg
ret
xchg
jne
adc
or
push
push
into
lock
lods
into
idivl
mov
fisttpl
daa
mov
cmpsl
pusha
add
mov
jl
cmp
enter
xlat
inc
xchg
jmp
xor
dec
mov
push
xchg
out
mov
dec
pop
xor
gs
jae
in
dec
xchg
loope
jae
inc
aam
xchg
cmpsb
or
daa
test
mov
sub
jnp
ja
or
lcall
mov
fisttps
sahf
jns
jno
repnz
xchg
dec
xor
popf
sub
mov
nop
mov
mov
add
push
loopne
sarb
sub
add
mov
mov
xor
add
imul
cmp
jbe
pop
pop
leave
ret
push
mov
push
adc
movl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
push
pushl
call
jmp
movzbl
adc
mov
adc
jmp
shrl
sti
insl
fs
push
test
sub
jl
jl
xor
sti
aas
dec
mov
cli
out
sbb
stos
fimuls
mov
pop
pop
xlat
sbb
sub
fucomi
sbb
mov
push
imul
cmp
outsl
adc
aad
je
cs
call
je
mov
in
xor
mov
imul
jae
aaa
and
mov
pop
push
xor
mov
dec
mov
or
pop
adcl
leave
notb
push
lret
cmp
nop
and
andps
lea
dec
mov
jecxz
ja
fdiv
pop
mov
jns
xor
cs
outsb
repnz
sbb
mov
test
sub
cmp
loop
orb
xor
int
mov
pop
lds
insl
ja
jne
cmp
ds
je
fbld
mov
push
adc
push
add
add
icebp
in
fs
jns
adc
jne
jne
add
jl
bound
xor
push
jp
pusha
outsl
gs
mov
xchg
add
mov
addl
or
gs
outsl
mov
pop
mov
mov
push
cmpsl
push
mov
mov
and
lds
adc
pusha
inc
aad
pop
add
std
cltd
in
adc
roll
mov
mov
push
fnstsw
cmp
in
or
sub
iret
cmpsl
mov
dec
inc
mov
incl
xchg
mov
jecxz
std
stc
xchg
inc
addr16
cwtl
dec
pop
dec
push
fld
bound
adc
fldcw
leave
mov
add
mov
pop
icebp
mov
mov
jg
dec
out
pop
das
lock
cli
frstor
ror
test
jnp
push
add
push
jbe
mov
sub
ret
sbb
loope
add
sub
inc
test
fistl
xchg
jnp
movsl
lahf
subb
push
or
xorl
xor
add
subl
mov
mov
xor
push
addl
mov
mov
subl
add
xorl
mov
movl
cmpl
je
cmpl
jne
push
push
call
mov
dec
mov
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
pop
leave
ret
push
mov
mov
xor
mov
jmp
enter
inc
lea
mov
sub
xor
jl
bound
outsl
xchg
push
call
pop
cli
dec
xchg
add
imul
stos
pop
push
nop
lock
push
and
inc
out
pop
out
push
leave
lock
mov
das
sbb
cmpsl
ret
jo
mov
out
je
cmpsb
jno
inc
pop
es
cmovp
dec
sub
fdivrs
shl
fidivrs
sub
inc
lea
jmp
outsb
sbb
mov
sub
mov
mov
push
call
and
inc
cltd
shl
or
arpl
inc
outsb
dec
adc
outsb
outsb
pop
fildl
push
xchg
jp
mov
into
jno
fcomps
mov
and
adc
add
xchg
xor
loope
ja
cli
hlt
and
add
popl
cs
mov
adc
mov
push
div
mov
and
or
mov
pop
ret
push
mov
push
xor
xor
xor
or
sub
sub
movl
movzwl
adc
jmp
insl
je
xchg
jge
fs
mov
js
sub
jg
jl
dec
xor
aad
lcall
sbb
fwait
xchg
and
inc
cmp
aam
mov
fs
shll
xor
stos
add
mov
test
out
dec
mov
add
sub
in
call
mov
out
pop
or
adc
mov
push
jnp
sbb
or
fadds
leavew
movsl
fistl
stos
cmp
into
mov
dec
xor
jmp
pop
sbb
bound
push
insl
and
push
pushf
jmp
adc
and
jge
mov
mov
jg
mov
pop
adc
into
adc
nop
mov
adc
jbe
mov
jge
call
repz
lods
cwtl
mov
adc
sbb
mov
inc
ficoms
xchg
or
xchg
lds
shrl
add
sbb
neg
xchg
in
lret
subb
test
movsl
ficoms
adc
rcr
arpl
sbb
sbb
mov
or
mov
notl
jmp
xor
push
jp
fnstsw
mov
loopne
cmp
jl
sbb
jl
mov
dec
lods
inc
fldt
lea
jae
mov
sub
inc
dec
ret
gs
fs
xchg
jp
dec
mov
mov
cld
push
sbb
jmp
xchg
mov
lea
mov
mov
test
imul
lods
call
hlt
cmp
push
jbe
mov
into
imul
std
fs
clc
das
xchg
std
cld
lods
cmp
add
cmpb
jb
push
scas
pop
sub
mov
inc
mov
int
out
xchg
dec
fsubs
cmpsb
bnd
push
jg
pusha
jnp
jle
inc
cmp
pushf
sub
mov
xchg
fwait
cmp
xlat
pop
pop
add
push
fwait
push
sub
mov
shll
je
imul
call
in
ljmp
cli
repz
xchg
adc
sub
mov
jmp
jno
push
jo
hlt
xor
ljmp
outsb
xchg
out
inc
mov
mov
adc
fmuls
pop
adc
and
jle
jb
fidivs
cmp
xor
add
orl
mov
neg
mov
andl
xor
add
inc
mov
cmpl
jne
pushl
push
call
cmpl
jb
mov
mov
mov
mov
mov
mov
mov
jmp
in
insl
push
jge
imul
mov
mov
sub
jl
jg
jl
in
fisttps
dec
dec
dec
ret
adc
cmp
lods
fdivp
sub
pushf
adc
inc
pop
fildll
add
fdivrs
call
aas
pop
jbe
xor
leave
arpl
jae
adc
cmc
cmpsb
push
mov
jo
icebp
mov
aad
test
cmc
and
inc
cmpsl
dec
fstl
push
outsb
js
idivb
mov
add
test
xchg
cmp
push
xchg
out
movsb
cmp
imul
jle
insl
sbb
aad
jne
dec
sub
xchg
incb
cmp
cmpsl
adc
lahf
jmp
push
dec
test
mov
out
int3
add
dec
xor
jbe
loopne
mov
loope
lods
ljmp
fsubl
test
mov
mov
xchg
and
rcl
stc
adc
out
mov
ret
mov
out
push
xchg
adcl
inc
outsl
xor
mov
xor
cmp
ss
inc
pop
lock
lods
add
inc
dec
push
pop
dec
cmp
mov
mov
mov
mov
mov
test
jmp
pop
loope
sbb
lret
mov
cli
push
sbb
jl
jg
jl
movsl
adc
and
jo
fsubl
test
outsl
and
push
cmpsb
mov
pop
pusha
aas
iret
jne
adc
dec
or
xchg
call
leave
push
pop
es
mov
dec
inc
test
inc
repnz
inc
inc
and
mov
movsl
pop
data16
cmp
dec
shlb
orb
jg
or
inc
cmp
cmp
and
or
push
cmp
xchg
or
popa
loop
or
bound
fcmovne
mov
or
std
push
nop
in
xor
fsubr
inc
xchg
lods
test
sub
or
bound
enter
mov
imul
adc
mov
pushf
mov
xchg
push
jmp
xlat
mov
cmc
arpl
push
or
das
sub
shlb
sarb
scas
mov
jo
pop
test
and
jbe
xchg
jle
jno
aas
sub
cwtl
or
push
sub
les
dec
mov
inc
or
test
add
add
add
leave
ret
push
mov
sub
adcl
jmp
or
dec
or
dec
aad
aas
adc
push
sbb
jl,pn
or
push
and
and
push
mov
lea
xchg
aaa
test
pop
xor
dec
rcll
pop
push
fwait
xchg
shrl
fcompl
js
lret
sahf
cmp
mov
cwtl
lret
inc
mov
into
adc
out
fdivs
pop
jns
adc
push
xchg
add
push
sbb
aad
lods
nop
sti
je
push
jo,pn
mov
cmp
clc
inc
mov
out
jecxz
test
mov
clc
sub
call
repz
inc
ror
movsb
into
mov
mov
xchg
sub
arpl
shlb
dec
ret
lahf
inc
cmc
nop
cld
xchg
jbe
adc
inc
adc
jb
jle
xor
out
ja
adc
dec
and
outsb
mov
out
addl
push
in
jno
xor
xlat
stos
mov
and
outsl
jns
or
shrl
aas
imulb
sbb
or
cli
pop
inc
add
sbbb
andb
or
mov
mov
mov
subl
mov
neg
movl
adc
movl
mov
xorl
push
orl
push
adc
push
movl
cmpl
je
cmpl
jne
push
push
pushl
call
cmpl
jne
xor
xor
dec
mov
mov
dec
mov
jmp
andl
jmp
out
sub
sub
jmp
mov
dec
push
and
jg
jl
lret
pop
xchg
ffreep
inc
stc
lret
mov
and
pop
jb
adc
push
fimull
insl
out
aam
mov
in
scas
xchg
and
sti
leave
iret
jae
inc
add
jg
mov
push
aad
in
pop
ret
inc
xor
push
push
fiaddl
lcall
xchg
hlt
push
sub
sbb
sbb
mov
repnz
lods
test
pop
inc
mov
add
push
fstpt
jae
popl
cmp
insb
cmp
xor
imul
leave
mov
ret
repz
push
adc
push
push
mov
icebp
in
sub
cmp
or
lods
sarl
mov
andl
outsb
lods
scas
or
dec
sarb
jno
fbstp
jge
sti
xor
xchg
xor
xlat
lcall
lods
outsb
add
imul
and
clc
fcoml
ljmp
sbb
cmp
mov
xor
movzwl
xor
mov
jmp
icebp
popa
jno
loope
mov
add
xor
xchg
ret
jl
or
mov
scas
add
and
in
jl
mov
sarl
xor
hlt
adc
shrb
push
dec
ret
mov
xor
jg
movd
inc
and
or
jns
inc
cwtl
bound
lea
cmp
jg
jge
add
jb
xor
cwtl
rcll
and
adc
xor
add
inc
adc
adc
clc
push
jmp
test
inc
pop
mov
ja
pusha
popa
loop
ljmp
add
imul
jp
dec
sahf
flds
daa
out
nopl
shll
mov
adc
cmpsl
and
sub
or
jno
aaa
out
hlt
fs
mov
andb
sbb
mov
push
in
or
imul
pop
and
jo
out
orb
sub
lcall
cmp
lods
mov
mov
mov
fwait
adc
inc
loopne
add
adc
cmp
add
test
add
add
add
jne
push
call
xor
or
dec
mov
jmp
movl
movl
movl
movl
or
movl
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jne
push
push
push
push
push
call
jmp
xor
mov
addl
xor
sbbl
add
mov
orl
movl
movb
or
mov
xor
add
sbbl
mov
decl
mov
xor
adcl
add
xorl
push
mov
xor
sbbl
add
xorl
push
andl
mov
inc
mov
cmpl
jne
push
push
pushl
pushl
call
cmpl
jne
xor
add
inc
mov
cmpl
jb
movzbl
xor
mov
negl
xor
add
orl
jmp
sarl
sarl
sub
cwtl
ds
jg
jl
dec
aam
sbb
fs
inc
pop
leave
out
mov
adc
adc
scas
dec
mov
shl
push
inc
xor
fdivp
cmp
cmp
repnz
movsb
sub
adc
mov
sbb
cmpsb
and
mov
test
sbb
xor
bound
std
ja
xorb
push
mov
mov
mov
cmp
sub
inc
dec
dec
stc
dec
and
sub
lcall
mov
jmp
jle
mov
adc
stos
and
sub
test
add
out
test
das
into
cmp
add
xor
loope
jae
xchg
in
cmc
gs
sbb
rcrl
xchg
push
xor
mov
jmp
es
adc
xor
mov
ret
mov
ljmp
hlt
pop
xor
out
push
sbbl
pop
popa
push
lea
addl
push
orl
pushl
addl
jmp
push
repz
adc
xchg
xchg
dec
and
jg
jl
or
cmp
mov
mov
cmp
sbbb
xor
dec
pop
pop
daa
rclb
xchg
jp
mov
lcall
ss
add
mov
das
sbb
fdivr
push
sub
or
jbe
lods
cltd
push
push
lods
cmpsl
jp
lcall
mov
add
cs
inc
mov
pop
mov
arpl
out
imul
pop
cmp
push
pop
push
test
add
jo
call
adc
mov
mov
jge
imul
mov
insb
mov
fidivrl
movsl
sahf
xchg
les
nop
popf
pop
loopne
xchg
or
sbb
xchg
jmp
mov
push
mov
push
aam
out
lret
dec
out
pop
mov
fnclex
or
mov
xchg
pop
add
or
mov
adc
sbb
rclb
stc
outsl
mov
sbb
mov
in
jmp
xchg
pop
cmpsl
inc
adc
sub
jle
outsl
pop
and
jl
add
push
sbb
cmp
jl
test
dec
fs
xchg
adc
jecxz
mov
daa
rcl
test
mov
adc
lock
popl
mov
popa
fildll
cs
je
dec
pop
pop
mov
dec
sub
dec
sarb
xor
mov
adc
jecxz
sti
mov
mov
dec
out
je
pop
iret
hlt
test
std
jb
sbb
add
es
cmc
scas
rcrb
imul
pop
xchg
mov
fdivl
aas
es
in
sti
and
jle
push
sbbl
inc
adc
adc
push
sbb
das
or
clc
fmuls
adc
pop
inc
test
cmc
mov
fs
sbb
rcl
aam
popf
mov
movsb
lock
lods
fbld
stos
mov
arpl
insl
adcb
jne
in
shr
or
add
mov
sahf
neg
out
call
test
je
sbbl
lea
push
mov
xor
add
push
mov
jmp
dec
add
cmpl
fnsave
xchg
mov
rcll
addr16
jl
or
hlt
cmpsb
dec
jbe
outsb
mov
dec
mov
in
ds
xchg
mov
adc
mov
in
in
adc
shl
cld
xchg
movl
or
popa
pop
lea
in
rolb
xor
sti
jp,pn
in
sub
mov
mov
std
pop
rolb
pusha
mov
nop
push
dec
daa
jle,pn
test
ss
xchg
cmpsb
jne
and
lret
nop
add
xor
repz
lcall
mov
divl
cmpsb
flds
xor
pop
inc
xchg
in
mov
xor
xchg
inc
fmul
ror
and
sbb
pop
push
gs
movsl
push
push
dec
push
xor
jne
xlat
cmc
or
fidivrs
leave
gs
stc
xchg
push
xor
add
rorb
xor
outsl
insl
jecxz
stos
incb
addl
outsb
mov
push
jmp
sub
jge
jge
fnstenv
pop
aaa
jnp
jl
or
push
and
shlb
xor
mov
inc
jbe
call
ret
mov
out
aam
in
xor
xchg
mov
movsl
lret
cld
cmpsl
jae
imul
push
fs
aaa
js
icebp
sub
xchg
in
pop
ljmp
js
cltd
add
inc
xchg
push
loopne
icebp
out
push
xchg
cmp
stos
push
fdiv
imul
mov
inc
add
pop
pop
xor
dec
add
and
cs
xchg
sbb
cmpsb
mov
push
sub
clc
adc
pop
xor
shr
fstp
xorb
or
jmp
sbb
aas
jne
or
movsb
frstor
test
cmpsb
sbb
and
std
add
outsb
jge
insl
stc
lock
add
fsub
push
in
faddp
jl
bound
xor
push
mov
sub
adc
xchg
int3
repz
call
andl
pop
mov
sub
mov
mov
jmp
shr
dec
pop
pop
jns
insl
adc
out
mov
or
push
aad
loopne
push
das
mov
xchg
mov
sub
popa
push
icebp
popf
not
scas
xchg
lret
pop
dec
and
test
cmp
rcl
sbb
js
fdivs
cmpsb
popl
std
cltd
xor
repz
push
push
pop
sub
movsb
addr16
xchg
in
add
lods
mov
pop
adc
cmp
sub
jnp
dec
test
js
das
sub
in
out
or
fsts
stc
adc
ret
nop
cs
clc
mov
push
enter
lds
repz
loopne
aam
lock
mov
pop
jbe
aad
mov
shl
jecxz
fwait
xor
mov
mov
pop
lock
lods
lods
or
incb
pop
sub
icebp
ja
jno
imulb
clc
ss
dec
xchg
sub
jnp
inc
jae
in
adc
jae
cmpsb
rcrl
out
bound
push
pushl
call
mov
cmpl
lea
mov
je
lea
push
mov
xor
add
push
mov
xor
add
push
pushl
lea
push
pushl
pushl
call
test
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
jmp
xor
mov
and
ja
int3
pop
sbb
jl
or
dec
adc
stos
adc
nop
imul
jae
cmpsl
and
adc
adc
cmpsb
imul
aam
aam
rorl
sbb
imul
pop
sub
add
sub
mov
test
mov
sub
fsubrl
cmp
mov
fs
push
push
test
or
rcll
subb
lods
jo
and
mov
xchg
shll
jge
xorb
scas
mov
push
outsb
ret
mov
mov
loope
lahf
jl
mov
or
leave
or
stos
out
add
xchg
or
sbb
stos
mov
in
dec
ss
inc
insb
pushf
int3
add
clc
add
imul
and
js
xchg
js
mov
inc
jp
fcmovne
xchg
mov
inc
mov
xorl
daa
arpl
pop
idivb
mov
ljmp
adc
pop
nop
adc
xchg
mov
push
call
mov
xor
mov
sub
jmp
or
and
jnp
jnp
gs
push
and
mov
jl
jg
jl
xchg
insb
dec
mov
or
mov
vmovaps
test
fcoml
scas
out
stos
pop
fbstp
loope
ret
fwait
cmp
repnz
and
pop
jno
fcmovnb
lret
jno
fldcw
mov
lods
sub
mov
push
xchg
mov
jg
mov
setbe
fisttpl
mov
dec
xor
test
add
xlat
rcrb
lods
inc
sbb
je
pop
pushf
in
sbb
addr16
pop
iret
pop
inc
in
sbb
test
adc
mov
out
and
xchg
cli
pop
hlt
adc
movsl
mov
xchg
dec
cmpl
mov
ss
pop
rorl
xchg
ja
inc
addl
pop
aas
pop
jbe
movsb
je
push
in
adc
dec
and
jns
js
sahf
push
lcall
pop
test
stc
fbstp
jg
cmp
inc
clc
mov
add
jmp
xchg
out
std
push
gs
repz
mov
daa
cmp
jg
jl
mov
fildll
movnti
cmp
jge
jle
hlt
pop
bnd
enter
sub
ret
rorb
int
fisttps
jg
and
xor
dec
add
cld
xchg
rclb
xchg
out
mulps
add
mov
mov
push
adc
inc
mov
fdivr
imul
lds
pop
mov
sbb
out
dec
lret
add
nop
push
jne
dec
nop
jns
cli
push
dec
jae
jg
mov
cltd
adc
inc
sbb
inc
add
lods
ret
sbb
fwait
ss
push
test
xchg
fst
clc
inc
mov
pop
add
movntps
clc
out
push
fidivrl
cvtps2pi
lea
mov
or
push
inc
lods
cltd
mov
cwtl
adc
leave
mov
mov
xorb
mov
lahf
jp
insb
fsubr
xor
mov
jmp
fstpt
dec
pop
dec
sub
mov
mov
mov
mov
xor
sub
mov
lea
incb
inc
push
pop
dec
xchg
decb
pushl
mov
mov
pushl
lea
jmp
scas
stos
fs
js
addr16
add
xor
jl
or
inc
or
ret
sbb
loope
dec
flds
enter
push
call
pop
add
in
inc
mov
dec
dec
dec
mov
lds
jecxz
out
mov
icebp
gs
pop
dec
jg
and
cmp
add
dec
orb
xchg
pop
lods
not
shll
jmp
fdivl
jecxz
push
pusha
pop
mov
adcb
adc
mov
add
rorb
lods
nop
or
add
push
push
mov
roll
cmpl
dec
cmpsb
ficoml
mov
push
xorb
pop
je
pop
mov
mov
sbb
out
test
sarl
mov
mov
scas
test
ret
adc
dec
daa
xchg
lods
sbb
mov
ljmp
test
shr
add
imulb
repz
adc
and
inc
movsl
mov
xor
add
xor
add
xor
add
xor
daa
add
add
lret
mov
insl
lods
test
orl
jg
jl
lea
and
pop
mov
adc
xorl
or
adc
cmp
xchg
inc
test
ss
cmp
shrb
adc
add
mov
mov
addr16
scas
push
shr
dec
aas
into
decb
icebp
fsubrp
cli
mov
push
xor
das
and
arpl
cmp
dec
in
ret
bnd
ret
push
bound
repnz
shrb
enter
xchg
mov
enter
cmp
jl
adc
push
aaa
dec
sbb
hlt
mov
pop
sub
ret
or
or
xor
inc
add
pusha
dec
dec
loop
js
inc
jae
xchg
cmpsb
sar
jnp
adc
mov
sub
imul
fldl
and
ret
insb
ret
cmc
nop
push
ja
popf
sub
mov
test
xchg
jl
mov
push
cmpsl
subb
push
iret
sub
push
pop
call
mov
mov
jmp
gs
add
jge
jecxz
stos
insb
lds
mov
jl
jg
jl
xlat
sbb
mov
mov
loope
clc
clc
fidivrs
mov
aas
sbb
mov
scas
cmp
xor
pop
inc
test
cli
hlt
outsb
aad
loop
jnp
mov
ljmp
movsl
mov
pop
jnp
stc
mov
sbb
or
xor
xchg
movsb
les
xchg
subb
test
and
adc
jns
cmp
test
xor
add
enter
xor
inc
or
in
ds
cmp
mov
out
xchg
xor
mov
rorb
adc
in
ret
pop
or
stos
fstpt
arpl
jnp
shl
xchg
pop
in
je
test
loope
cmp
addb
jo
addr16
or
mov
repnz
enter
and
test
roll
or
popa
fldl2e
lods
mov
add
idivb
in
xor
cli
mov
outsl
sub
add
pop
pop
pop
leave
ret
push
mov
sub
xor
movl
movl
orl
jmp
push
repz
pop
stos
lea
nop
push
jae
cmp
jecxz
jl
push
jg
jl
or
les
testb
gs
sub
and
xchg
cmpsl
lahf
pop
jnp
pop
ja
cltd
cmp
lock
pop
jmp
fnstcw
add
add
das
fldenv
xchg
popf
imul
pop
push
mulb
enter
jo
jbe
into
cli
sub
loopne
cmp
in
mov
vpaddq
sti
push
and
mov
adc
push
cmp
add
inc
xor
out
jge
fstps
push
adc
jecxz
cmpsb
xchg
and
sbb
mov
movsb
add
and
adc
ret
add
add
and
test
pop
dec
cwtl
pop
xchg
cmp
pop
lcall
dec
push
or
jne
or
loop
sub
shr
push
xchg
xlat
adc
adc
mov
inc
rorl
neg
jne
and
xor
xchg
fisubs
jmp
fnsave
push
sub
stc
fadds
jp
mov
rcrb
pop
movl
cmpl
inc
add
add
add
add
or
cmpl
jne
push
call
cmpl
jb
orl
mov
xorl
lea
and
jmp
divl
test
pop
jnp
js
ds
mov
lea
jl
push
jg
jl
repnz
test
sbb
push
dec
fldt
dec
jl
jmp
push
sub
cmp
or
mov
sub
fistl
sub
jecxz
mov
mov
mov
stos
iret
mov
fisttps
mov
out
pop
shrb
pop
imul
jb
sbb
clc
mov
out
loopne
imul
sbb
movsl
adc
insl
mov
pushf
movsb
pop
xchg
ret
inc
les
and
imul
sub
mov
js
hlt
ret
cltd
dec
mov
movl
mov
cmp
ret
adc
les
and
test
ror
adc
pop
sahf
sbb
mov
shl
mov
xor
mov
mov
mov
mov
add
lahf
fcmovne
out
add
mov
xchg
jbe
mov
pop
fcomip
insl
pop
xor
andl
fcom
lods
hlt
push
jne
shll
xor
mov
jmp
movsb
flds
xor
rorl
xchg
xor
jg
jl
out
lea
mov
int
pop
mov
insl
inc
ja
pop
dec
mov
mov
call
lahf
lahf
ret
ret
cmp
loopne
ljmp
fistpll
jmp
stos
dec
int
jns
sbb
lahf
push
out
movsb
into
add
fdivrl
bndldx
sub
cmp
ror
push
popa
lahf
mov
test
lods
add
mov
push
notb
inc
sub
cmovns
cltd
push
cs
or
and
cmpsl
data16
pushf
lock
mov
push
aaa
cmp
push
cmp
mov
rorb
pop
cmp
jmp
inc
jl
daa
cmc
rolb
loope
sbb
popf
mov
xchg
jnp
mov
imul
pop
xor
sbbl
cmp
and
dec
les
gs
add
dec
pusha
mov
jl
repz
push
hlt
dec
shll
mov
sbb
inc
or
or
mov
sbb
push
lea
mov
mov
adc
push
push
mov
orl
mov
mov
mov
and
mov
xor
andl
xor
or
inc
mov
cmpl
jne
push
call
cmpl
jb
mov
adcl
jmp
adc
in
data16
mov
mov
xor
jg
jl
pop
and
iret
xor
cwtl
test
pop
cmp
or
push
inc
add
mov
adc
xchg
mov
xor
dec
stc
ja
dec
adcb
fisttps
or
pop
repnz
cmp
xchg
and
mov
pop
mov
filds
cmc
mov
or
ret
fstps
jne
and
dec
shll
idivb
in
stos
fidivrs
inc
test
std
push
out
test
push
lods
sti
sbb
das
mov
inc
mov
outsl
mov
push
add
pop
adc
inc
ja
pop
mov
stos
xchg
lcall
cli
mov
ss
inc
mov
ds
ja
jo
jmp
inc
adc
and
imul
lret
add
stos
xchg
addr16
aaa
pop
clc
xchg
cmc
mov
test
push
push
push
in
inc
mov
sub
push
xor
out
xchg
scas
ljmp
std
add
test
dec
popf
mov
mov
fld
add
sbb
rolb
add
push
add
add
andl
add
movl
jmp
ss
call
pop
fcom
xor
ret
bound
pop
xor
jg
jl
std
cmp
jb
loope
nop
fcomip
cmpsb
or
addr16
ficoms
mov
rcrb
lock
lock
pop
adc
adc
sbb
mov
outsb
aad
sbb
add
bound
add
lret
and
test
fs
mov
add
fidivs
ljmp
rcr
mov
inc
scas
test
push
dec
repz
out
adc
mov
dec
adc
out
stos
pushf
mov
es
push
jnp
pop
xor
scas
mov
mul
outsl
or
mov
fisttpl
dec
and
push
popf
fbld
xor
mov
sbb
mov
xor
mov
mov
sub
divb
jl
aad
push
xchg
push
pusha
dec
adc
sti
aam
dec
iret
nop
das
and
adc
daa
fcoml
pop
jmp
or
mov
iret
mov
mov
stos
cmpsb
pop
into
push
nop
push
push
mov
inc
adc
mov
sub
mov
mov
movl
movl
cmp
je
mov
and
movl
andl
mov
inc
mov
cmpl
jne
pushl
push
push
pushl
push
push
pushl
call
cmpl
jb
lea
mov
xor
xor
mov
sub
xor
jmp
lea
mov
std
inc
nop
mov
jl
push
jg
jl
lods
lock
rol
lock
std
sub
stc
adc
dec
outsb
mov
aaa
xchg
sub
icebp
mov
in
enter
test
or
popf
push
aaa
xor
push
mull
lods
ret
out
test
adc
cmpsb
cmp
test
adcl
cltd
mov
push
or
into
sbb
pop
aas
jb
mov
pop
enter
std
add
xorb
repnz
test
pop
mov
xor
sbb
cmp
scas
adc
xchg
outsb
mov
and
js
pop
dec
jno
mov
cld
iret
test
mov
das
js
pushf
adc
mov
mov
bswap
xor
cmpsb
es
push
std
cs
cmp
mov
lahf
or
mov
cs
fsubrs
repz
push
jge
mov
push
mov
sub
add
or
push
pop
mov
inc
lock
cmpl
je
cmpl
jne
pushl
pushl
call
cmpl
jne
mov
dec
mov
xor
add
dec
mov
jmp
mov
imul
mov
mov
cmp
je
mov
jmp
fsubs
jp
jp
mov
xchg
rcrl
jl
jg
jl
mov
cmp
mov
push
dec
cmp
arpl
in
dec
add
ret
pop
cmpsb
out
pop
lret
aad
mov
push
cs
cwtl
jp
shlb
popf
iret
jp
mov
fnstenv
mov
cmp
lret
outsb
and
fstpt
xor
fs
sti
loop
sub
lret
pop
int3
popf
jmp
or
adc
lahf
pop
pushf
sbb
add
push
and
cld
out
push
cmc
push
sahf
aad
movsl
fstpt
or
xchg
and
add
mov
roll
pusha
mov
aaa
jo
mov
fisubl
cmp
xlat
adc
daa
dec
repnz
out
sbb
add
or
pop
cmp
inc
lcall
ds
add
sti
pop
jg
rcr
fdivp
cs
jns
or
outsl
mov
jmp
and
mov
add
in
mov
pop
push
sub
pop
jmp
jnp
xor
or
lcall
mov
xor
add
pop
pop
pop
leave
ret
mov
add
cmp
je
mov
andl
jmp
jmp
jnp
lds
cmp
adc
sub
jl
push
jg
jl
inc
xchg
sbb
fwait
dec
xor
adc
jmp
in
sahf
xchg
in
mov
adc
lock
jmp
sub
jle
or
dec
ss
shrb
addr16
xor
ret
stos
and
in
lods
mov
or
shll
ss
cmp
add
insl
or
or
push
fs
mov
cmc
push
sbbl
xchg
jae
fwait
js
movsl
jle
push
fcmovu
aaa
insb
and
cmp
or
cmp
movsl
dec
xor
and
enter
fisttpll
push
cmpsb
cwtl
cmp
sub
inc
ss
scas
dec
stos
fnstcw
out
mov
imulb
enter
fcomps
sbb
scas
ljmp
jns
jg
repnz
jno
cld
lahf
mov
dec
sub
inc
add
cld
hlt
mov
ret
gs
mov
loopne
mull
fsubrs
xor
mov
dec
fcomi
lea
jns
lods
je
pop
das
inc
into
dec
mov
mov
or
cmp
je
mov
jmp
push
add
jge
jnp
and
sub
leave
jl
push
jg
jl
dec
pop
sub
out
andl
inc
add
insl
into
mov
repz
mov
hlt
test
xchg
and
pop
sub
loope
mov
jmp
pop
imul
fs
es
repz
push
push
push
decb
dec
and
scas
ds
loop
pop
lcall
jae
add
lcall
add
pop
loopne
mov
das
inc
jg
cld
sbb
inc
dec
shll
or
mov
ds
mov
inc
pop
das
xor
jmp
arpl
pop
lock
data16
ja
jecxz
orl
cmp
mov
and
idiv
sub
fistpll
mov
pusha
cmpsb
and
fprem1
popf
lods
sbb
rcr
lea
add
xchg
inc
push
mov
xlat
cmp
mov
movl
fcom
lahf
sub
test
mov
icebp
arpl
xor
inc
std
jmp
inc
cld
mov
mov
mov
xor
mov
add
cmp
je
mov
xor
jmp
pop
fst
jge
out
jnp
inc
sub
jl
push
jg
jl
mov
dec
add
cmc
addr16
mov
push
aas
ret
test
inc
lret
sub
cmp
shrl
cmp
dec
ljmp
das
loopne
int
inc
cmp
mov
add
out
push
mov
loope
cs
cmp
imul
shlb
in
out
aad
push
dec
xchg
mov
mov
ret
ret
push
cmp
fiadds
jo
jecxz
movsl
jmp
inc
popf
xchg
mov
scas
shlb
mov
add
rorl
fucomp
lret
inc
arpl
je
aas
sbb
cmp
push
shll
inc
nop
cs
adc
add
shl
rcr
push
imul
jb
and
pop
mov
icebp
lcall
jecxz
sub
icebp
andl
push
cmp
inc
scas
mov
dec
xor
cs
test
rol
lahf
jle
mov
xchg
add
mov
mov
mov
mov
xor
add
movzwl
mov
xor
lea
add
mov
mov
mov
xor
add
imul
sub
mov
jmp
mov
mov
xor
cmp
je
mov
addl
jmp
mov
cmp
je
mov
jmp
push
mov
push
xor
push
movl
sub
movl
xor
or
sbb
mov
mov
decl
push
addl
mov
xor
mov
xor
adcl
xor
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jb
mov
add
jmp
xchg
and
and
out
mov
sub
jl
mov
sbb
cmpsl
mov
adc
and
sbbl
push
bound
jmp
dec
das
adcl
xchg
sub
fldenv
je
outsb
shr
les
mov
and
cmp
inc
push
jbe
lcall
aam
gs
lock
sbb
stos
pop
push
clc
lahf
fists
and
xchg
dec
out
lods
xlat
push
addb
fstps
adc
daa
dec
jns
fsts
push
mov
addl
mov
movl
cmp
jne
movl
cmpl
je
cmpl
jne
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
mov
xor
xor
add
add
imul
jmp
mov
mov
mov
mov
mov
xor
xor
jmp
mov
jns
std
ficomps
jo
fs
jl
jl
jl
push
sub
jb
xchg
ja
in
clc
incb
imul
call
cmc
sub
cs
sbb
xor
add
and
push
dec
scas
out
cmp
shrl
and
pop
pop
inc
insb
inc
sub
or
adc
add
bts
sub
jmp
mov
dec
arpl
inc
aad
add
xchg
sub
addr16
ret
fwait
mov
ret
jb
cmp
std
add
add
imul
mov
cmp
mov
je
xor
add
mov
imul
add
mov
mov
pop
leave
ret
push
mov
sub
push
xorl
call
adcl
test
movl
je
orl
xor
jmp
subl
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
orl
mov
movl
push
push
push
call
movl
cmp
je
orl
push
addl
push
adcl
push
adcl
push
sbbl
push
push
call
jmp
or
mov
and
mov
sub
movl
lea
adc
mov
add
lea
mov
movl
cmpl
je
cmpl
jne
push
call
cmpl
jne
mov
dec
mov
xor
xor
dec
mov
jmp
sbb
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
call
jmp
movzwl
sbb
mov
mov
xor
mov
movl
mov
andl
xor
add
inc
mov
cmpl
jne
push
push
push
call
cmpl
jb
andl
xor
add
inc
mov
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
orl
push
movzbl
sub
mov
mov
movl
xor
subl
push
movl
cmpl
je
cmpl
jne
push
push
pushl
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
sbbl
add
mov
movzbl
mov
cmp
movl
mov
movl
je
neg
mov
xor
add
imul
mov
jmp
xor
xor
add
andl
mov
inc
mov
cmpl
jne
push
push
pushl
push
call
cmpl
jb
mov
mov
xor
inc
add
movzbl
sub
mov
mov
mov
orl
mov
sbbl
xor
sbbl
add
movl
cmp
jne
mov
sbb
mov
xor
add
mov
sub
add
mov
mov
mov
andl
mov
inc
mov
cmpl
jne
push
pushl
pushl
call
cmpl
jb
movl
cmpl
je
cmpl
jne
pushl
call
cmpl
jne
xor
xor
dec
mov
mov
dec
mov
jmp
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jne
pushl
call
cmpl
jne
xor
or
inc
mov
jmp
xor
mov
mov
orl
mov
mov
xor
xor
dec
add
sbb
mov
add
lea
dec
mov
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
push
push
pushl
push
call
cmpl
jne
mov
inc
mov
jmp
mov
and
mov
adc
mov
sub
xor
movl
cmpl
je
cmpl
jne
pushl
pushl
pushl
pushl
pushl
call
cmpl
jne
xor
xor
dec
mov
xor
add
dec
mov
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
movzwl
and
add
adcl
mov
mov
lea
or
mov
add
mov
sub
mov
xor
adc
add
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
adc
mov
subl
mov
sbb
movl
xor
mov
xor
mov
movzwl
xor
add
movl
mov
sub
mov
xor
mov
andl
mov
inc
mov
cmpl
jne
push
push
push
push
pushl
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
mov
xor
add
movl
cmp
movl
jne
movzbl
adc
mov
mov
mov
orl
xor
orl
add
movl
cmp
jne
dec
mov
sbbl
mov
adc
xor
xorl
add
movzwl
sbb
mov
dec
mov
mov
sbb
xor
adc
mov
sbbl
sub
add
movl
cmpl
je
cmpl
jne
pushl
push
pushl
pushl
push
push
call
cmpl
jne
mov
dec
mov
xor
or
dec
mov
jmp
mov
mov
mov
movzwl
add
mov
mov
mov
xor
lea
xor
sub
mov
movzwl
cmp
mov
movzwl
jg
xor
sub
sub
mov
jmp
xor
lea
mov
mov
mov
cmp
je
mov
movl
jmp
mov
cmp
jne
mov
movl
mov
mov
mov
mov
mov
mov
movl
cmp
jne
mov
mov
xor
mov
add
mov
movzwl
not
and
mov
mov
jmp
xorl
mov
pushl
call
test
je
jmp
mov
cmp
jne
mov
movl
jmp
mov
cmp
jne
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
lea
add
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
xor
add
cmp
je
mov
mov
add
mov
mov
mov
mov
mov
mov
add
xor
cmp
je
mov
mov
xor
add
mov
jmp
xorl
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movl
cmp
jne
mov
mov
xor
mov
add
mov
movzwl
not
and
mov
mov
jmp
xorl
mov
pushl
call
test
je
jmp
mov
cmp
jne
mov
movl
mov
mov
mov
mov
mov
mov
movl
cmp
jne
mov
mov
xor
mov
add
mov
movzwl
not
and
mov
mov
jmp
xorl
mov
pushl
call
test
je
mov
cmp
je
mov
mov
mov
mov
mov
mov
mov
mov
mov
movl
mov
movl
mov
xor
add
jmp
mov
xor
lea
push
mov
xor
lea
push
mov
pushl
call
mov
xor
lea
mov
mov
xor
xor
add
mov
xor
lea
cmp
jbe
mov
mov
mov
mov
mov
mov
sub
xor
mov
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
pushl
mov
pushl
add
mov
mov
pushl
call
mov
mov
mov
jmp
mov
mov
xor
add
cmp
jne
mov
xor
add
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
mov
movl
mov
xor
add
mov
mov
mov
mov
mov
mov
push
pop
sub
add
movl
mov
movl
mov
mov
mov
mov
mov
xor
add
mov
lea
mov
mov
xor
add
mov
lea
push
mov
xor
add
push
mov
push
pushl
call
xor
mov
sub
push
mov
add
push
call
inc
cmp
jb
mov
call
lea
mov
mov
mov
pushl
lea
push
call
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
add
mov
sub
mov
addl
xor
andl
mov
inc
mov
cmpl
jne
pushl
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
add
movzwl
sub
mov
movb
lea
mov
and
jmp
mov
icebp
test
stos
mov
cmp
daa
jg
jl
add
jg
cmp
and
cld
cwtl
xchg
scas
popf
xchg
inc
cli
js
and
test
jmp
push
push
inc
push
mov
pop
or
rclb
test
push
mov
rcl
ss
push
outsb
push
pop
pop
add
or
icebp
cmc
popf
pop
pop
add
pop
inc
sub
add
test
mov
mov
sub
popa
cmp
mov
dec
rclb
ds
sub
rcll
jae
lods
lea
push
ja
xchg
int3
and
aam
add
and
add
out
xlat
mov
cmp
pop
push
int3
pop
push
push
outsb
jnp
mov
fsub
jbe
lds
mov
leave
jl
test
sti
lds
mov
cli
add
and
push
or
xchg
in
gs
xchg
xchg
sub
mov
mov
mov
dec
xlat
in
jge
into
inc
scas
pop
int
mov
gs
test
adc
jo
fildll
or
and
or
sub
mov
xorl
mov
andl
xor
sub
movl
mov
sbbl
movl
movl
or
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
push
push
call
cmpl
jb
xor
mov
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
pushl
push
call
jmp
xor
mov
add
jmp
movl
mov
movl
mov
inc
movl
cmp
jb
mov
xorl
mov
addl
jmp
cmp
bound
push
pop
jmp
adc
jp
je
mov
jl
daa
jg
jl
push
ret
ffree
sbb
sub
mov
xchg
cmp
cltd
pop
adc
mov
in
scas
mov
mov
xor
lret
sahf
outsl
pop
ret
mov
lret
push
imul
add
push
pop
arpl
sub
jecxz
push
pop
and
xorl
adc
pop
inc
popf
push
fcompl
mov
push
aaa
cmovle
mov
jno
call
mov
out
cwtl
pop
dec
adc
call
mov
inc
dec
xor
dec
sbb
jno
inc
cmp
mov
pushf
int
popf
mov
dec
dec
cmp
xchg
push
jecxz
cmpsl
sub
pop
out
push
imul
cmp
inc
les
add
js
stos
repnz
mov
les
xor
test
cmpsb
xchg
mov
cmp
aad
mull
sbb
mov
pop
lret
cli
imul
jg
mov
or
inc
pop
inc
xor
inc
rolb
cmpsb
push
inc
jecxz
ret
pop
jle
inc
sbb
sub
roll
movl
cmp
movl
je
addl
push
andl
mov
inc
mov
cmpl
jne
call
cmpl
jne
mov
inc
mov
cmpl
jb
push
jmp
push
ss
std
push
jge
pop
add
or
outsb
jno
jl
daa
jg
jl
or
sbb
fwait
lods
dec
lods
aaa
pop
and
or
sti
push
jmp
adc
cmpsb
cli
or
sbb
mov
sub
adc
std
fisttps
loope
fadd
fadd
push
add
sti
sahf
orl
sbb
jl
jo
adc
jecxz
sbb
outsb
mov
pop
in
rolb
mov
int3
ffree
clc
pop
imul
add
mov
sbb
repnz
lock
jnp
movsb
add
decl
iret
sbb
fs
mov
or
mov
lods
lret
xchg
jo
adc
add
fiaddl
xor
fistl
pop
sbb
and
stos
sbb
movsb
inc
jp
adc
aad
pop
jmp
sub
int
mov
addr16
dec
jae
or
sub
xor
imul
or
adc
inc
and
or
pop
das
roll
jge
inc
jns
lret
dec
push
sarl
jno
xchg
and
push
xchg
adc
dec
sbb
ljmp
aam
jno
jge
mov
xor
mov
add
movzwl
mov
mov
movzwl
xor
add
mov
mov
mov
inc
cmp
jne
pop
pop
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
mov
cmp
je
mov
mov
mov
cmp
jne
mov
mov
movsbl
xor
add
cmp
je
jmp
add
clc
pop
clc
sbb
sti
insl
sbb
inc
mov
sub
into
jl
daa
jg
jl
dec
jge
test
fcoms
inc
div
cmp
cmc
lods
rorl
movsl
leave
xchg
leave
inc
xchg
cmpsb
and
dec
cmp
sub
call
mov
xor
or
push
mov
pop
add
scas
dec
cmp
mov
mov
mov
sub
int3
in
dec
test
stos
xor
pusha
and
les
popf
mov
xor
push
into
in
adc
sub
mov
int
cli
sbb
sbb
and
jnp
aas
repnz
enter
loope
jno
outsl
arpl
or
scas
jecxz
fisubs
or
sbb
lods
aad
les
adc
push
push
xchg
and
out
test
sbb
clc
test
push
scas
cmp
int
sysexit
lds
push
pop
test
test
setl
mov
iret
std
jp
scas
and
mov
dec
pushf
test
sub
fnstsw
int
test
jmp
jo
mov
dec
push
xor
jp
dec
imul
xor
neg
icebp
lcall
std
add
mov
mov
addl
mov
mov
xor
lea
mov
incl
jmp
mov
xor
mov
add
mov
pop
leave
ret
push
mov
push
movl
sub
mov
jmp
push
xchg
fs
fs
data16
pop
lds
sarl
jl
add
xor
jne
push
out
sbb
sub
add
loope
stc
jg
repnz
fwait
jae
pop
sbb
lret
scas
outsb
rclb
mov
push
bound
mov
push
dec
insb
insb
popf
test
push
adc
clc
loopne
sbb
xchg
fildl
sub
cmp
pop
xlat
loopne
test
pop
jp
mov
insl
add
xchg
mov
call
push
push
cmp
sub
test
ljmp
int
mov
subl
push
pop
or
enter
fistpl
addr16
les
push
popl
scas
add
loope
sbb
cltd
xlat
jbe
jp
popa
fisttpl
xlat
fs
loop
jmp
xchg
and
enter
scas
repnz
add
sbb
data16
stc
out
data16
sbb
sbb
cmc
ss
leave
lods
cmp
cmpb
xchg
icebp
rol
inc
cmp
int
shrd
je
imul
adc
xor
jmp
iret
mov
pop
pop
lods
xlat
jmp
outsl
outsl
pop
pushf
lret
fmul
xchg
ljmp
mov
pop
xchg
shll
xchg
es
insl
mov
fiaddl
and
mov
adcl
add
xor
jmp
add
in
arpl
cltd
jp
fldenv
mov
jl
lret
jl
adc
ds
js
rcll
sub
adc
leave
pop
mov
scas
and
cmp
insb
sbb
in
sub
dec
jp
fstpl
mov
dec
push
repz
sbb
add
xor
lret
bound
add
mov
dec
stc
inc
loope
das
sbb
out
test
mov
fsubs
movsl
cmp
and
loope
mov
lds
fistps
rolb
shl
push
lods
and
push
mov
cwtl
aad
dec
imul
pop
popf
dec
shl
and
lock
push
sbb
and
push
mov
addr16
rorb
adc
frstor
dec
xchg
pop
js
jae
insb
test
push
addr16
ret
pop
xor
enter
loope
fcomp
popf
cmpl
pop
out
sbb
je
repz
pop
rclb
aad
arpl
jnp
inc
xchg
inc
pop
push
dec
adc
push
cli
negb
or
sub
out
cltd
fnstenv
xor
push
push
loope
out
xchg
mov
loop
in
mov
mov
stc
sbb
mov
cmp
movl
jne
or
mov
mov
adcl
add
mov
xor
or
sub
and
mov
movl
cmpl
je
cmpl
jne
pushl
pushl
pushl
push
push
pushl
call
mov
dec
mov
jmp
mov
mov
xor
push
mov
mov
add
cmp
jmp
mov
mov
test
cmpps
jl
inc
inc
and
stos
sub
inc
sahf
jmp
or
mov
sbb
ret
mov
add
mov
lcall
and
jns
cli
lea
frstor
dec
jbe
aaa
inc
mov
cltd
mov
cmpsb
iret
cwtl
test
call
incb
xchg
repnz
sbb
inc
nop
adc
dec
dec
cs
pop
jo
mov
inc
jge
fwait
sbb
adc
cmp
push
repz
test
andb
andnps
movsb
jmp
ret
fcomps
jbe
mov
lods
outsl
lea
or
bound
pop
jne
mov
test
and
aas
xchg
xchg
dec
stos
in
pop
repz
fnstenv
mov
std
cmpsb
leave
or
cmp
push
std
gs
push
stos
js
xchg
cmp
js
dec
push
push
sti
mov
movsb
mov
xchg
rorb
inc
mov
inc
add
xchg
sub
dec
rcl
mov
in
mov
lret
adc
mov
dec
jne
xor
repz
mov
push
xchg
sub
sub
pop
je
mov
jmp
jmp
xchg
test
loopne
bound
add
sbb
ffree
jl
lret
jl
enter
in
stc
adc
mov
cmp
jnp
movsb
dec
sbb
xchg
dec
cmc
ja
sub
aad
icebp
and
faddl
dec
cmc
sub
fdivr
sbb
lock
add
xor
ljmp
cmc
adc
nop
xor
pop
cmp
loope
push
scas
test
daa
adc
fcmovnbe
icebp
sbb
cld
in
xchg
mov
mov
xor
mov
sub
jmp
lea
mov
out
adc
fmul
jge
lcall
xchg
repnz
jae
mov
cmp
cmp
inc
pop
ss
xchg
xorl
andl
inc
lock
jmp
fs
adc
mov
ds
fs
rclb
xchg
or
inc
adc
mov
cmp
jmp
fwait
adc
punpckldq
in
mov
adc
cmc
arpl
dec
fcmovnbe
out
jne
test
lea
stc
jnp
jnp
jp
push
lret
imul
dec
sub
push
ljmp
add
xchg
movsb
iret
lret
jg
std
call
jge
sub
cmpsb
cmp
inc
test
xor
inc
cld
jmp
aam
rolb
pop
fs
jge
fisubrs
sbb
jg
jl
lret
fs
fldcw
adc
cwtl
cmp
xchg
sub
adc
cld
loop
repnz
push
lret
cmp
mov
clc
stos
and
fwait
lds
add
pop
call
mov
jecxz
lods
inc
test
cltd
fldpi
xor
mov
or
bound
cmpsb
mull
dec
sbb
inc
in
add
mov
fsts
add
sbb
inc
ljmp
push
push
inc
cmp
jp
add
cs
rorl
fwait
xchg
mov
mov
rcrb
orb
xchg
mov
push
dec
roll
pusha
out
xlat
mov
dec
mov
mov
fisubrs
xlat
pop
push
imul
ja
add
data16
cld
pusha
dec
fldenv
imul
lods
push
mov
mov
jg
std
inc
pop
dec
xor
xor
movsb
mov
add
mov
lods
lods
insb
lret
test
xchg
inc
rcrb
andb
pop
aaa
fimull
mov
lods
pop
test
mov
cmp
pop
or
jbe
loop
stos
xor
add
jmp
mov
xor
add
leave
ret
dec
push
mov
mov
or
dec
add
add
add
movl
xor
hlt
clc
lret
enter
mov
test
pushf
enter
movl
inc
inc
cld
xor
or
mov
call
pop
mov
dec
mov
pushl
or
ljmp
dec
loopne
rorb
add
mov
hlt
add
enter
dec
add
mov
orl
xor
lret
enter
mov
lea
push
mov
fs
decl
push
and
pop
inc
mov
push
pop
cld
dec
lea
mov
add
movl
decl
xor
cld
dec
jne
lea
push
mov
or
add
sub
add
rolb
inc
add
add
mov
incl
lea
call
add
jne
decl
dec
add
xchg
loopne
inc
incl
mov
xor
add
enter
mov
hlt
add
mov
add
add
incl
sbb
jne
mov
mov
movl
incl
rorl
test
inc
aas
inc
lea
pushl
mov
mov
out
cld
call
fisttps
jmp
out
incl
xlat
lea
inc
ljmp
incl
aaa
add
pop
movl
ffreep
aas
add
mov
incl
or
mov
xchg
roll
mov
cmp
dec
lds
add
adcb
add
add
mov
cld
push
decl
push
mov
call
mov
add
test
call
jge
mov
fcom
add
mov
add
add
imul
push
fisttps
test
aam
lret
add
rcl
movl
jl
test
jmp
incl
loope
aam
test
out
mov
mov
add
call
lret
cld
incl
out
xor
mov
cld
jl
mov
add
mov
decl
add
inc
xor
inc
add
mov
mov
inc
sub
add
rolb
jne
xor
incl
call
mov
call
xor
push
adc
loopne
ret
loopne
xorl
cmp
bswap
rolb
jmp
mov
add
cld
jne
xor
movl
inc
add
mov
test
add
incl
jmp
faddl
jge
adc
mov
sahf
mov
lea
xor
call
call
jne
xor
add
pushl
call
int3
incl
mov
xor
add
xchg
in
add
add
inc
add
mov
mov
or
inc
test
je
mov
xor
push
or
inc
in
mov
mov
fmul
add
mov
cld
loopne
inc
push
cmp
movaps
cld
fadds
jne
push
in
jne
lea
xor
jmp
mov
xor
adcl
rclb
inc
lock
inc
xchg
ud0
incl
jl
add
mov
inc
lret
inc
iret
jb
mov
enter
xor
mov
pushf
lea
add
inc
mov
xor
add
mov
fmuls
xor
mov
aad
pushf
xor
mov
clc
enter
mov
test
clc
incl
xor
test
test
ds
pushf
inc
mov
outsl
push
add
mov
sarb
adc
dec
adc
add
jmp
jb
add
xor
xor
add
clc
enter
pop
mov
push
push
xor
xor
add
add
lret
repnz
cli
fdivr
test
dec
inc
xor
add
mov
mov
clc
jne
mov
into
into
scas
dec
mov
sub
cmp
mov
mov
mov
add
xor
xor
rdtsc
lret
mov
inc
add
mov
lods
test
xor
mov
lock
bswap
lret
test
jmp
add
push
mov
test
push
clc
xor
xor
add
add
push
dec
mov
stc
roll
scas
mov
xor
xor
add
mov
clc
lret
into
mov
mov
mov
int3
add
xor
xor
add
mov
lock
stc
mov
or
jmp
dec
dec
mov
clc
test
clc
rorl
mov
call
les
lret
ja
mov
dec
xor
mov
clc
push
lret
mov
adc
jb
add
call
cmp
movsb
sahf
inc
xor
mov
clc
dec
lret
mov
call
scas
mov
sahf
sub
cmp
lods
xor
add
mov
mov
cmp
jb
add
dec
scas
mov
shrl
into
cmp
mov
dec
dec
mov
lret
xor
add
imul
mov
xor
mov
add
mov
inc
sysexit
xlat
pushf
jge
xor
sub
cmp
jb
add
rorl
xor
add
jmp
mov
dec
into
mov
sahf
shll
lret
or
add
in
push
mov
bound
int
sub
dec
xor
jge
mov
add
dec
decl
adcb
add
jge
push
push
shlb
xor
xor
inc
add
dec
or
jbe
mov
ror
enter
decl
push
lret
push
mov
mov
cld
subb
sti
add
push
lcall
mov
int3
pop
inc
decl
push
xor
movl
aas
push
inc
xor
add
mov
jmp
mov
rol
mov
mov
mov
cmp
mov
add
xor
sahf
lret
cmp
call
inc
inc
mov
mov
add
add
clc
enter
push
pushf
mov
int3
or
test
clc
gs
add
push
xor
sub
dec
add
mov
or
cmp
dec
out
xor
mov
dec
add
push
push
add
sbb
mov
xor
dec
inc
xor
add
push
dec
mov
lret
into
sub
dec
adc
inc
push
test
unpcklps
jmp
add
movl
xor
rolb
clc
bound
mov
xor
sub
mov
add
sub
mov
mov
clc
addl
lcall
inc
decl
test
decl
push
add
dec
or
rorb
into
add
mov
sar
adc
clc
fadds
mov
push
adcb
add
lret
mov
cld
mov
into
add
jne
incl
rclb
push
mov
mov
sar
or
push
add
pushf
xor
test
clc
inc
inc
mov
sub
mov
dec
bound
inc
add
dec
bound
inc
add
inc
add
movsl
pushf
inc
dec
lea
push
xor
pop
lods
incl
mov
rcrb
test
inc
inc
add
push
in
inc
push
mov
cld
add
adc
add
jmp
add
mov
dec
push
cmp
unpcklps
jne
decl
mov
shlb
inc
add
lret
decl
stc
in
or
dec
clc
xor
mov
rolb
inc
add
clc
inc
lret
mov
in
lret
into
into
scas
dec
mov
sub
cmp
mov
int3
test
xor
xor
rdtsc
lret
mov
inc
add
mov
xor
mov
call
lret
test
jmp
add
push
mov
mov
lret
xor
add
add
push
dec
mov
stc
roll
scas
mov
xor
xor
add
mov
clc
lret
into
mov
test
push
jbe
mov
mov
push
add
rdpmc
lret
add
dec
stc
mov
or
jmp
dec
dec
mov
clc
test
clc
rorl
mov
lock
inc
mov
hlt
pushf
jge
sub
cmp
ja
mov
dec
xor
mov
clc
push
lret
mov
adc
jb
add
lock
sub
mov
mov
mov
mov
lock
ror
push
scas
mov
sahf
sub
cmp
movsb
xor
add
mov
mov
cmp
jb
add
dec
scas
mov
shrl
into
cmp
mov
dec
dec
mov
lret
xor
add
imul
mov
xor
mov
add
rolb
sysexit
xlat
pushf
jge
xor
sub
cmp
dec
xchg
incl
jmp
mov
dec
into
mov
sahf
shll
lret
or
add
in
push
mov
bound
int
sub
dec
xor
jge
mov
add
dec
decl
inc
push
decl
lea
push
mov
push
mov
les
add
incl
mov
cld
lret
add
jne
in
ror
pop
into
add
not
adc
inc
push
mov
push
mov
fdivr
sti
sbb
pop
xchg
leave
sahf
add
push
cmp
sqrtps
decl
push
cld
xor
lret
clc
xor
add
hlt
or
mov
hlt
dec
add
leave
mov
push
roll
mov
mov
lar
push
lret
jne
mov
or
mov
cld
inc
mov
add
loope
inc
call
inc
mov
cld
mov
clc
xor
mov
loopne
mov
mov
clc
jne
call
sub
test
je
mov
cld
or
push
add
add
inc
push
mov
pop
mov
ret
push
mov
clc
lock
jne
jne
mov
rolb
jne
cmp
pop
mov
push
inc
lea
inc
rorl
xchg
mov
mov
or
inc
inc
mov
cld
jmp
mov
mov
rclb
iret
inc
leave
decl
mov
mov
mov
push
nop
incl
push
leave
iret
add
push
in
push
push
incl
mov
loope
sbb
add
mov
cmp
jne
push
pop
push
mov
or
add
sub
shlb
add
mov
lea
push
enter
testl
enter
negl
or
inc
in
in
sub
inc
in
push
add
push
push
imul
adcl
add
lea
mov
cmp
jne
mov
loope
inc
stc
xlat
ss
aas
in
ret
lock
and
mov
call
push
add
ud0
hlt
add
cmp
flds
out
call
cmp
shr
pop
fisttpll
push
add
add
push
add
sub
jne
lods
mov
dec
out
into
push
loopne
shrb
xorl
roll
mov
cmpl
mov
push
push
push
sub
push
adc
insl
mov
add
inc
mov
pop
addl
add
add
roll
cli
push
pop
lret
add
decb
sub
and
dec
inc
shll
add
pop
add
pop
dec
jmp
and
push
out
jmp
jmp
mov
decb
add
pop
icebp
mov
insb
adc
mov
or
mov
cld
jge
aas
and
adc
mov
and
dec
add
add
fadds
stc
enter
sbb
sbb
in
in
add
jne
cmp
jb
jmp
mov
add
add
jb
pop
faddl
or
inc
or
xlat
dec
push
add
leave
roll
add
mov
int3
jmp
mov
jne
mov
call
pop
add
pop
or
push
mov
int3
add
jae
int
enter
add
mov
push
pop
add
push
lea
mov
jb
mov
push
add
add
add
int3
jne
movsbl
add
add
mov
add
add
mov
sub
jb
add
jge
add
addl
jne
je
mov
rorb
orl
mov
mov
fadds
inc
pop
lea
push
out
add
add
mov
jb
add
push
call
add
jae
icebp
inc
mov
int3
out
loopne
sub
push
pop
push
jl
add
xor
mov
rcrb
rorl
inc
shr
orl
push
pop
add
jmp
mov
fdivrl
push
pop
call
mov
in
rolb
call
pop
enter
repz
xorl
je
or
jne
jmp
pushl
push
pop
cmpl
jge
mov
sub
pop
inc
mov
sub
lods
add
enter
repz
stc
jge
jnp
call
fadd
dec
insb
stc
cmp
push
mov
jne
mov
mov
add
sub
and
cmp
sbb
pop
call
fsubr
sti
add
add
add
roll
mov
clc
jne
mov
loopne
loopne
lods
int3
inc
mov
add
sub
shrb
add
call
add
dec
insl
in
lea
inc
inc
sub
orl
and
rorl
or
mov
stos
adc
inc
add
jne
mov
cmp
sub
sar
ljmp
sub
mov
mov
and
jne
sub
sbb
dec
push
add
ret
mov
leave
sub
ret
pop
push
rolb
addl
jb
ret
in
jecxz
push
xchg
jne
cmp
jne
mov
rorl
mov
pop
nop
mov
les
add
inc
mov
mov
cmp
or
inc
inc
xor
insb
cld
add
add
add
sbb
dec
je
mov
add
and
jae
mov
incl
push
shr
in
push
andl
lret
mov
add
lret
pushf
and
pop
rcr
test
clc
add
xor
pushf
add
add
inc
push
rcrl
inc
fsts
mov
nop
rolb
mov
add
pop
add
or
mov
add
call
add
add
push
inc
orb
leave
dec
dec
add
call
clc
inc
inc
mov
enter
mov
xor
xor
or
sbbb
int3
test
clc
inc
mov
fmuls
sub
add
leave
xor
jl
add
add
or
test
clc
or
xor
inc
sbb
mov
xchg
pop
add
mov
add
mov
mov
mov
xor
add
inc
jge
mov
xor
add
push
jne
mov
decl
add
cmp
push
inc
inc
add
add
mov
mov
mov
sbb
inc
add
push
clc
add
mov
jne
mov
add
add
lea
lea
xor
ret
mov
add
push
inc
inc
add
test
jne
mov
mov
push
pop
inc
decl
rclb
xor
addl
mov
push
jbe
mov
ret
dec
inc
jmp
mov
cld
push
mov
add
push
push
inc
jmp
add
add
inc
ret
mov
mov
sub
mov
mov
rolb
inc
add
inc
add
clc
inc
ljmp
xor
add
mov
mov
inc
fdivs
loop
add
add
ljmp
add
add
add
mov
dec
incl
test
sbb
add
mov
add
and
dec
mov
dec
call
inc
add
cmp
inc
add
jb
mov
cmp
lret
mov
test
andnps
decl
inc
add
mov
inc
hlt
mov
xchg
add
xor
add
mov
mov
mov
push
push
inc
mov
call
inc
adc
decl
aam
push
add
xor
lcall
cmp
test
clc
inc
and
mov
cmp
je
mov
add
sbb
dec
dec
mov
mov
add
add
jne
mov
cmp
jb
mov
mov
mov
inc
je
push
add
push
mov
in
shlb
test
call
inc
inc
rorb
jmp
mov
mov
loopne
sbb
inc
inc
push
lea
lea
or
js
mov
incl
call
inc
add
decl
test
mov
add
add
incl
add
data16
push
call
mov
cld
inc
test
inc
mov
sbb
inc
test
rorb
add
add
add
popw
test
cmp
jbe
lea
add
mov
sub
mov
mov
in
mov
jb
incl
mov
sbb
push
mov
movl
add
mov
mov
pushf
mov
lea
decl
movb
pusha
jmp
mov
xor
xor
add
in
mov
addl
mov
data16
addl
push
loope
inc
add
mov
out
incl
and
test
incl
jl
leave
add
test
outsl
fiadds
mov
test
in
incl
loope
inc
data16
inc
call
add
filds
inc
inc
xlat
xor
pushf
jl
leave
icebp
inc
add
mov
fdivp
mov
in
test
inc
inc
mov
cld
inc
out
rclb
inc
mov
mov
and
inc
cmp
jne
movl
lret
inc
add
lea
xor
add
inc
adc
test
add
movb
jl
add
mov
mov
sbb
add
loopne
adc
or
inc
loop
xor
or
jl
inc
add
adc
repnz
xorb
adc
dec
repnz
mov
adc
call
adc
inc
push
flds
mov
fcmovnb
xor
sbb
addl
inc
mov
sbb
xorb
add
decl
add
incl
mov
lret
enter
inc
jne
mov
mov
mov
mov
ud2
xchg
xor
dec
mov
sbb
cmp
push
pop
adc
andb
mov
push
mov
adc
in
inc
inc
fildll
mov
inc
subb
ljmp
lea
xor
mov
stos
mov
push
test
mov
push
ret
mov
sbb
rcl
inc
inc
into
mov
cwtl
movl
call
add
jmp
inc
or
rol
dec
adc
incl
add
push
push
add
test
or
out
pushl
add
push
out
xor
jmp
andl
mov
sbb
addb
mov
incl
push
pop
clc
mov
orb
mov
lea
inc
ljmp
pop
inc
mov
mov
rclb
incw
lea
stos
add
mov
adc
pushl
decl
dec
push
loopne
adc
call
mov
sbb
loop
ds
dec
mov
sub
inc
mov
xor
decl
add
push
add
mov
jbe
test
inc
push
addl
pop
add
ret
decl
mov
mov
cwtl
mov
test
rorb
lea
mov
push
decl
pushl
call
lea
mov
mov
mov
inc
dec
mov
xor
decl
call
lea
incw
cmp
decl
jmp
inc
jmp
dec
lea
jge
mov
lock
mov
mov
roll
push
str
xor
add
add
inc
rdpmc
mov
dec
inc
add
mov
data16
jne
push
adc
jne
ljmp
call
or
mov
mov
addl
mov
add
push
xor
dec
mov
mov
jl
push
mov
rcl
mov
mov
push
ret
push
pop
leavew
inc
sbb
in
xchg
push
shl
addl
mov
cwtl
or
setl
inc
add
test
xor
add
xor
mov
test
movb
adc
add
roll
mov
incl
ljmp
adc
jne
call
mov
pushl
inc
test
dec
add
dec
inc
mov
add
add
adc
and
jp
sysret
pop
add
cmp
sub
dec
mov
ret
clc
mov
addl
jnp
pop
add
xorl
adc
jge
mov
cld
test
add
add
negb
add
pop
add
add
inc
test
mov
fisttpl
mov
push
add
test
add
add
mov
add
add
mov
call
or
dec
or
inc
dec
addl
scas
dec
add
lock
mov
call
rclb
xor
adc
mov
mov
nop
rolb
mov
push
or
xor
sti
cmp
dec
test
or
ret
or
pop
add
xor
inc
mov
push
inc
mov
or
sti
dec
sub
cld
mov
mov
add
jne
cmp
jns
pop
jge
cmp
cld
inc
iret
or
jae
xor
jmp
mov
lea
mov
in
testb
jge
add
mov
cmp
hlt
adc
jl
clc
js
pushl
mov
clc
add
mov
call
inc
popa
jge
cmp
xor
rcrb
push
or
push
sub
in
add
fistl
sbb
test
inc
mov
cld
je
cmp
rorb
adc
mov
sbb
push
inc
mov
add
or
cld
mov
jge
xor
mov
hlt
iret
pop
inc
jbe
cmp
adc
push
add
dec
divl
sbb
mov
test
je
mov
or
cmp
jbe
mov
or
jg
add
dec
add
je
mov
mov
mov
adc
jmp
xor
pop
rcrb
ret
cmp
push
xor
sar
xor
xor
pushf
or
add
pop
mov
push
add
push
adc
push
xor
mov
in
dec
add
nop
iret
add
push
dec
sahf
mov
add
add
cmp
je
add
mov
pop
mov
sahf
fbstp
add
pop
pushf
mov
xor
ud0
add
add
or
dec
inc
mov
xor
mov
mov
fdivs
push
or
inc
imul
loopne
sbb
jg
inc
jne
mov
adc
fiadds
jne
mov
clc
test
xor
xor
mov
cld
jb
add
adc
rcr
add
add
pmaxub
dec
decl
xor
add
cmp
hlt
mov
faddl
xor
add
cmp
clts
jp
decl
xor
add
jne
mov
xor
lea
jb
add
add
add
add
adc
pop
mov
hlt
add
jmp
incl
xor
in
push
inc
mov
hlt
add
mov
dec
mov
fcompl
enter
add
mov
in
and
mov
mov
cld
pushf
dec
sahf
xor
add
mov
cld
add
xor
pop
mov
cld
sbb
dec
mov
jne
mov
fadds
mov
push
fdivs
decl
lcall
inc
inc
xor
add
cmp
mov
fadds
mov
test
sahf
push
xor
out
mov
or
in
sbb
add
jne
mov
mov
cld
test
sahf
fbstp
ret
call
xor
add
mov
cld
dec
mov
cltd
inc
inc
mov
cld
lea
xor
add
inc
je
mov
cwtl
movb
add
sub
lock
mov
aam
ljmp
mov
in
inc
mov
cld
jmp
rorl
mov
fadds
add
xor
add
pop
hlt
pop
push
ret
mov
mov
xor
add
rolb
mov
or
inc
mov
xor
add
clc
jne
add
xor
lea
add
jb
add
inc
jne
add
or
inc
scas
xor
in
jne
mov
or
icebp
sahf
shll
mov
lsl
cmp
cltd
mov
add
mov
call
jge
sub
xor
jge
xor
add
mov
xor
add
jne
xor
jmp
mov
cld
mov
clc
leave
xchg
or
push
mov
cld
in
icebp
jnp
add
jae
sub
inc
call
push
call
xor
add
ret
xor
inc
loopne
jne
mov
push
jge
xor
in
test
add
mov
xor
xor
add
cmp
mov
xor
add
cmp
mov
add
add
or
ja
mov
cld
pop
stc
mov
in
jge
mov
or
icebp
add
jae
add
push
jne
mov
add
icebp
jmp
cmp
xor
clc
pop
repnz
out
pop
testl
pop
add
pop
jge
xor
add
xor
xor
repnz
clc
mov
rcll
stc
or
mov
in
sahf
jne
mov
or
sahf
xor
add
mov
mov
lock
push
inc
jne
mov
in
mov
clc
repnz
decb
mov
cmpl
clc
call
hlt
add
clc
inc
jne
mov
clc
test
xor
mov
in
xchg
roll
sbb
cld
clc
pop
pop
xor
add
inc
hlt
mov
or
add
test
add
mov
sbb
rclb
add
add
mov
and
data16
pushf
or
rcll
xor
mov
add
inc
inc
mov
add
cmp
inc
push
mov
mov
lock
xor
mov
xor
pushf
aam
xabort
dec
inc
xor
inc
add
add
dec
mov
cld
mov
xor
pushf
dec
mov
xor
mov
xor
push
xchg
xor
add
incl
mov
in
inc
or
rclb
add
push
inc
call
leave
push
add
mov
or
jo
cmp
add
add
mov
or
mov
cmp
roll
mov
dec
dec
sbb
cld
mov
test
cmovne
test
add
into
xor
add
mov
faddl
mov
nop
into
add
mov
mov
invd
mov
mov
mov
push
push
cmp
fmuls
call
rcl
rcl
call
inc
jne
jmp
sbb
dec
or
mov
sbb
dec
and
push
add
cmp
je
push
and
add
or
inc
adc
inc
and
push
push
sub
push
mov
sbb
dec
mov
add
jge
add
mov
mov
cmovne
xor
xor
or
roll
dec
add
dec
jbe
mov
cld
mov
bswap
push
lret
xor
mov
and
or
daa
xchg
push
push
adcl
push
xor
add
decl
sbb
rolb
and
mov
enter
mov
push
add
add
addl
mov
rorl
mov
inc
dec
mov
inc
mov
call
or
mov
inc
push
mov
into
mov
mov
lea
mov
push
xor
mov
sub
mov
loopne
lret
push
dec
mov
lods
xor
add
mov
xlat
dec
sarb
jne
mov
fsub
add
xor
out
mov
hlt
mov
mov
in
jb
push
inc
push
jl
leave
cmove
lods
add
mov
or
xor
or
into
in
lret
xchg
gs
add
mov
fsubs
inc
lea
push
lea
fadds
mov
inc
add
mov
fmul
rorb
add
inc
inc
je
mov
sbb
add
add
jmpw
or
lret
jne
mov
in
add
enter
sbb
inc
ljmp
and
inc
test
add
rorb
data16
call
ret
test
inc
orb
sub
stc
test
mov
lea
call
pop
add
xchg
add
add
push
cmp
fdivs
add
lea
test
je
mov
decl
push
add
inc
sbb
push
or
mov
cmp
mov
inc
pop
add
add
push
decl
or
adcl
push
jno
add
push
clc
sar
xchg
add
jne
mov
mov
sub
rolb
loopne
dec
mov
mov
call
add
add
add
add
jmp
xor
pop
lcall
ret
mov
mov
add
push
and
adc
add
dec
or
sbb
cmp
pop
push
add
mov
and
xchg
add
add
cli
loope
shlb
dec
ret
sub
pushf
inc
mov
and
incl
xor
pushf
jb
add
add
mov
hlt
inc
data16
mov
jmp
mov
or
inc
add
mov
mov
mov
add
sbb
jne
sub
sahf
mov
and
add
lock
test
add
push
inc
in
mov
ret
push
test
add
inc
shlb
pop
add
loopne
inc
pop
xor
mov
fdivrp
pop
mov
hlt
addl
cmp
lock
add
add
push
or
add
data16
lock
jge
mov
test
sbb
mov
inc
jge
pushaw
xor
data16
jne
mov
inc
or
lock
mov
mov
in
or
mov
call
sbb
push
mov
lock
pop
jne
mov
retw
minpd
str
jne
xor
mov
cld
add
add
sar
mov
mov
lock
es
mov
clc
jne
jge
mov
or
add
push
xor
add
add
mov
or
mov
add
mov
mov
or
fisttps
clc
ja
mov
or
sahf
sti
add
add
fbld
pop
mov
or
mov
hlt
add
mov
or
mov
or
mov
mov
adc
stc
mov
mov
or
mov
or
add
cmp
mov
xor
mov
add
jge
mov
pop
clc
cmp
data16
mov
xor
pop
jge
mov
lock
jge
ltr
add
hsubpd
data16
jge
mov
dec
xor
minpd
data16
jmp
mov
sarw
mov
jb
add
pop
mov
clc
jne
data16
jnp
pop
inc
add
data16
mov
data16
icebp
sbb
jne
mov
call
mov
in
data16
repnz
xor
inc
mov
call
add
ret
jge
mov
mov
add
data16
mov
add
mov
data16
pop
test
pushf
add
into
fistps
push
mov
mov
mov
push
repnz
lock
jne
mov
cld
mov
xor
mov
mov
push
sub
mov
mov
add
dec
cmp
jne
mov
mov
stc
jge
data16
xor
data16
lock
ds
pop
add
rorb
inc
mov
in
sarl
pop
or
push
mov
mov
or
cmp
je
mov
mov
add
push
mov
mov
pushf
sub
add
xor
dec
str
cmp
int
mov
xor
mov
xor
lret
push
add
push
add
cmp
sti
mov
mov
cld
add
data16
roll
mov
lret
in
add
pop
lret
ret
enter
pop
movl
pushf
call
add
in
add
mov
clc
xor
add
cmp
je
push
pop
sysexit
leave
dec
bound
mov
int
mov
lret
add
jne
lea
add
ret
inc
xlat
add
add
or
ret
add
jne
lea
add
lret
mov
cmp
fs
ss
je
xor
inc
inc
add
ss
pushf
push
je
xor
mov
andl
add
in
push
mov
pushf
cld
mov
mov
or
ret
or
or
lret
add
mov
adc
iret
mov
dec
push
mov
mov
rclb
add
ret
jne
mov
xor
callw
cmp
fs
mov
pop
sub
add
xor
cmp
cmp
jne
cmp
clc
pushf
pop
mov
push
xor
mov
psubsb
icebp
lea
clc
pop
inc
mov
push
xor
mov
adcl
add
inc
sub
mov
addl
orl
cmp
mov
decl
dec
mov
mov
mov
xor
mov
push
leave
mov
push
test
sahf
in
xor
mov
clc
test
xor
pushf
dec
mov
in
mov
push
icebp
add
roll
add
roll
xor
pushf
dec
movl
clc
or
xor
pop
dec
dec
lea
add
dec
inc
sub
orl
cld
adc
scas
or
pop
xadd
jb
add
inc
sub
mov
lock
icebp
add
clc
pop
mov
data16
add
xor
add
lea
add
add
inc
adc
dec
mov
mov
mov
lea
add
inc
in
incl
leave
add
push
roll
sbbl
sarb
jbe
mov
or
push
mov
mov
jne
jmp
mov
push
push
mov
add
xor
sub
mov
inc
inc
mov
dec
sahf
xorl
orl
leave
jbe
mov
in
inc
in
mov
or
dec
inc
xor
mov
mov
cld
test
push
inc
mov
sahf
pop
xor
mov
inc
or
sar
dec
lea
in
decl
mov
cld
inc
inc
inc
mov
jmp
mov
mov
push
sahf
xor
add
inc
xor
pushf
std
xor
inc
fadds
inc
mov
inc
sahf
xorl
cmp
mov
clc
sub
inc
call
pop
inc
sahf
pushl
adc
std
dec
decl
inc
push
call
add
xor
add
add
inc
cld
add
mov
orl
test
clc
inc
inc
mov
pushf
or
inc
adc
jne
xor
xor
pop
add
ret
je
push
mov
mov
mov
in
inc
orl
push
test
xor
mov
add
add
mov
or
add
xor
inc
inc
add
xor
add
mov
sub
lret
mov
jae
lea
xor
jne
or
or
pushw
jne
cmpxchg8b
mov
jne
call
cmovge
xor
add
sub
or
add
inc
cmp
mov
subl
enterw
shlb
pop
or
mov
dec
inc
data16
push
jb
jmp
incl
mov
or
jo
test
jmp
incl
mov
pop
lock
push
dec
mov
dec
ror
rolb
dec
lock
pop
in
cmp
clc
xchg
cmp
jne
xor
jmp
mov
jne
call
mov
add
inc
jne
mov
mov
mov
add
stos
add
mov
les
xchg
iret
add
inc
jl
out
cld
add
xchg
add
push
pop
add
paddq
xchg
add
adc
test
incl
incl
rorb
decl
inc
inc
incl
data16
rclb
mov
lock
jle
mov
mov
jge
mov
adc
enter
dec
or
mov
lods
ja
mov
pop
lea
inc
clc
inc
outsb
lea
push
inc
mov
pop
mov
jae
cmp
adc
pop
inc
sbb
mov
or
cmp
mov
cld
xchg
add
add
lea
adc
or
faddl
push
add
push
inc
add
push
adc
mov
fdivr
cli
dec
add
add
add
xor
cmp
mov
lock
rcl
pop
add
pop
dec
cmp
mov
add
push
dec
in
mov
push
pop
mov
add
add
add
inc
mov
hlt
push
decl
push
add
pop
or
jns
ret
jmp
mov
in
jge
sysexit
cmp
cmp
sbb
pop
add
jae
mov
lcall
mov
mov
fdivs
xor
movl
add
push
ret
mov
jne
mov
faddl
xor
push
or
icebp
incl
rolb
inc
stc
mov
lock
add
dec
add
mov
call
sbb
mov
pop
jge
lea
decl
or
leave
fadds
dec
add
xchg
add
mov
mov
or
dec
pop
mov
in
pushf
mov
push
call
add
cmp
add
add
mov
mov
mov
sub
add
clc
mov
add
dec
push
xor
xor
in
add
inc
jmp
xor
mov
adc
xor
jne
mov
mov
hlt
pop
add
in
push
in
dec
push
xor
mov
mov
in
dec
addb
add
mov
test
dec
push
mov
mov
clc
into
dec
lret
lock
test
push
jge
push
enter
dec
cld
jmp
pushf
inc
mov
sub
int
mov
mov
adc
enter
jmp
xor
mov
or
call
cmp
fs
add
leave
rorb
push
inc
in
mov
or
lock
test
clc
rolb
xor
pushf
add
mov
cmp
sub
jmp
mov
lock
mov
push
icebp
xor
mov
enter
add
cld
scas
add
dec
mov
xor
xor
add
add
test
mov
adc
je
xor
xor
add
add
rorl
enter
icebp
or
lock
enter
lret
or
mov
cld
bswap
pop
mov
in
hlt
pop
jne
xor
xor
jbe
mov
clc
pop
mov
mov
clc
mov
adcl
inc
in
xor
inc
cld
xor
add
inc
test
clc
hlt
inc
test
inc
inc
aad
xlat
pushf
mov
mov
xor
mov
xor
add
pavgb
test
dec
inc
mov
cld
xlat
enter
lret
add
leave
jne
mov
enter
lret
scas
out
jmp
mov
cld
add
xor
jmp
xor
add
rorl
dec
mov
cld
lea
mov
mov
xor
enter
stc
add
call
pop
xor
sub
enter
inc
in
xor
clc
xor
pushf
ss
pushf
call
mov
loopne
inc
test
clc
add
push
mov
push
inc
push
mov
mov
mov
xor
dec
cld
mov
or
into
inc
iret
or
add
mov
xor
xor
mov
hlt
bswap
roll
xor
mov
xor
call
enter
mov
lock
inc
mov
inc
inc
enter
inc
mov
mov
roll
add
push
into
in
movb
dec
or
xorb
add
add
in
push
inc
mov
adc
push
xchg
popa
iret
dec
sahf
mov
clc
add
cmp
jne
addl
or
or
push
dec
jnp
dec
xlat
mov
call
lsl
cld
sti
lahf
mov
mov
clc
iret
dec
lret
xor
lea
dec
inc
mov
mov
int
sub
lock
mov
in
xor
pushf
xor
jne
mov
in
dec
mov
nop
add
pop
mov
mov
ret
mov
mov
mov
dec
add
jo
push
inc
jne
mov
push
push
ret
push
inc
xor
add
jnp
jg
ljmp
inc
mov
push
cmp
dec
xor
cmp
jne
orl
jmp
mov
push
add
add
add
cmp
mov
sbb
mov
xor
mov
xor
pushf
test
clc
adc
test
xor
lock
xor
add
mov
sbb
mov
rolb
iret
or
cmp
xor
or
xor
add
mov
inc
inc
mov
mov
mov
cmp
dec
decl
inc
mov
or
sbb
inc
inc
mov
or
dec
push
dec
inc
rclb
push
inc
decl
rolb
inc
inc
mov
sbb
inc
push
xor
lea
cmc
xor
add
mov
inc
inc
mov
ret
inc
add
adc
test
clc
inc
inc
mov
loopne
enter
inc
test
mov
sbb
dec
ret
sub
add
xor
lea
lods
jb
add
sar
xor
inc
int3
xor
xor
pushf
adc
inc
les
test
clc
inc
inc
pushl
hlt
pushf
jne
mov
or
bound
clc
lea
cmp
shl
mov
or
dec
imul
incl
inc
add
pavgb
movl
clc
iret
inc
lock
lret
fmull
mov
test
mov
loopne
inc
loopne
inc
loopne
xbegin
adc
jb
mov
inc
inc
push
mov
incl
mov
loopne
rol
test
dec
push
decl
push
mov
add
cmp
add
call
clc
test
xor
pushf
mov
or
iret
test
mov
in
pop
dec
add
add
dec
mov
in
dec
or
iret
add
testl
test
add
add
mov
or
add
cmp
add
mov
mov
lock
dec
test
dec
add
cmp
or
mov
dec
push
lea
lods
mov
clc
cli
or
iret
inc
mov
or
or
xor
cmp
je
mov
mov
xor
mov
mov
xor
bswap
rorb
add
mov
xor
or
mov
xor
bswap
rorb
add
add
xor
mov
add
dec
dec
xor
mov
clc
rorb
iret
rorl
inc
mov
iret
add
xor
mov
or
dec
shll
cmp
in
add
add
mov
in
mov
or
dec
enter
add
mov
xor
or
mov
mov
xor
mov
cmp
jne
lea
cli
or
cmp
je
mov
ret
or
lock
add
mov
add
cmp
mov
xor
mov
add
roll
cmp
lock
rorl
jb
add
ja
sbb
xchg
enter
inc
decl
loopne
jb
add
dec
adc
add
inc
rcll
mov
xor
jb
add
jne
decl
add
repnz
inc
mov
mov
shll
mov
movsb
add
push
adc
inc
pushl
mov
add
mov
test
inc
mov
lret
mov
sbb
inc
mov
xor
enter
inc
add
cld
test
sahf
jne
mov
fsubrs
decl
hlt
xor
sbb
call
pop
or
dec
adc
push
add
cmp
je
mov
or
push
lea
clc
or
push
inc
or
pop
call
test
jne
mov
movsb
xlat
inc
push
push
or
push
decl
dec
adc
roll
sbb
dec
je
push
call
test
inc
iret
add
clc
jmp
mov
test
or
add
inc
mov
mov
and
push
mov
rolb
iret
orl
push
clc
jmp
add
mov
jmp
addl
pop
inc
pop
sbb
inc
add
clc
and
mov
and
mov
and
mov
and
xor
push
mov
xor
mov
mov
mov
push
add
mov
cmp
mov
dec
add
push
adc
push
cmp
and
mov
and
xor
jb
add
inc
and
lea
and
push
jmp
cli
and
clc
and
call
jmp
dec
aas
or
cmp
bswap
mov
add
and
mov
mov
or
inc
jmp
addl
push
inc
sbb
dec
test
movb
xor
pushf
inc
jmp
addl
jne
or
or
jne
call
mov
add
adc
add
add
add
incl
push
cli
add
shll
inc
jmp
xor
test
cli
incl
incl
and
mov
or
and
and
add
push
and
and
add
ss
incl
xor
mov
and
pushf
pushf
clc
decl
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
in
jp
jp
jnp
adc
cmpsl
adc
and
add
shrb
dec
es
js
cmp
ret
movsl
xor
xchg
mov
sbb
add
fsubl
mov
sar
fmull
stos
pop
xor
cmc
lds
xor
in
fnstenv
das
int
mov
mov
lcall
inc
sbb
imul
xchg
rcll
push
hlt
in
out
fsubl
enter
sbb
test
push
je
push
add
or
mov
aaa
lahf
push
test
dec
or
xor
push
sub
sbb
jp
adc
mov
test
mov
das
mov
inc
inc
xchg
scas
cmp
mov
add
dec
pop
es
addr16
mov
xchg
and
pop
or
into
addr16
sbb
cmp
push
or
jns
sti
add
and
fstpl
xor
rcrl
popa
sbb
insb
dec
fdivrs
jmp
hlt
inc
adc
jmp
xor
imul
out
dec
mov
mov
xor
jge
bound
jns
ret
dec
and
push
fsubrs
inc
mov
or
sahf
xorb
adc
loopne
in
aad
push
dec
add
cmp
or
dec
bound
sbb
xchg
enter
shll
add
xchg
add
shl
push
jae
add
xchg
mov
jb
sbb
hlt
fcomip
push
jnp
dec
push
fstpl
mov
xchg
xor
add
mov
movsb
push
insb
add
and
jae
push
inc
and
mov
outsb
inc
pop
enter
out
fistpll
ret
sub
cmp
jnp
dec
icebp
jns
outsl
imul
out
xor
pushf
mov
jb,pt
sti
repz
mov
pushf
lods
add
jecxz
push
sub
outsl
scas
decl
cld
iret
mov
inc
movl
notrack
push
dec
and
mov
xchg
mov
rorb
pop
hlt
xlat
out
popa
push
xchg
lahf
inc
lret
or
add
push
sbb
sti
std
push
xchg
arpl
push
mov
lahf
sub
xchg
inc
jecxz
mov
dec
push
gs
shl
inc
stos
je
je
and
jae
inc
sti
popf
mov
mov
call
aam
mov
repnz
sti
movsb
loopne
movsb
into
dec
xchg
xchg
shrb
orb
ljmp
cmp
cltd
fimull
sub
xchg
sbb
test
cmp
sbb
call
mov
jne
mov
and
jnp
nop
fnsave
mov
adc
movsb
xchg
mov
push
daa
mov
scas
push
sub
stos
subl
orl
pop
aad
push
adc
mov
mov
aad
das
iret
idivb
leave
add
aam
leave
fstpt
fld
test
in
hlt
sub
mov
mov
stos
adc
outsl
pushf
sub
fcmove
bound
in
loop
jb
push
repnz
fildll
cli
outsb
cld
sbb
dec
cmp
sbb
jl
and
fdivrl
popa
dec
jno
lcall
jo
jp
mov
xchg
in
lods
int
push
pushf
sarl
xchg
mov
es
es
stos
orl
and
in
xor
outsb
cmpsb
push
bound
std
stos
leave
xchg
xchg
inc
push
in
pop
and
aam
repnz
add
cmpsl
clc
or
cltd
or
inc
push
das
xchg
xchg
test
lret
cli
out
push
jge
pushf
jg
cmp
jp
mov
cwtl
pop
xor
mov
movsl
lret
decb
mov
xchg
xchg
and
mov
sbb
and
mov
dec
lahf
push
xlat
xchg
addr16
xor
xchg
fnstsw
pop
lock
mov
mov
or
lcall
mov
data16
into
adc
xchg
in
xor
mov
pslld
cmp
rcll
inc
icebp
xor
pop
fs
xchg
mov
gs
mov
jmp
sahf
test
push
insb
aam
pop
ljmp
pushf
fisubrl
sub
popa
xchg
mov
and
dec
cmpsb
std
jmp
xor
enter
test
imul
cmp
outsb
add
gs
mov
xchg
push
or
mov
mov
test
sbb
iret
jne
pushl
mov
push
pop
call
rolb
rolb
push
cmp
inc
movsl
mov
leave
scas
fisubs
push
xor
adc
int3
cmp
jmp
pop
push
leave
into
dec
sbb
mov
cmpsb
pop
mov
call
cmc
pop
aas
push
loope
or
mov
cld
int
aas
mov
orb
aad
mov
cmp
jnp
cmp
ljmp
cwtl
sub
sbb
adc
xor
xchg
sahf
test
mov
cmc
arpl
in
aad
enter
pop
xchg
sub
push
inc
sub
and
movsb
mov
dec
cmpl
fs
in
ficoms
or
mov
addr16
into
mov
imul
and
inc
lret
pop
test
mov
mov
fwait
mov
ja
inc
pop
xor
mov
pop
leave
nop
test
xchg
jb
je
stos
add
cli
out
fs
cmp
lods
das
ret
js
je
out
bound
push
mov
and
mov
or
movsb
sti
clc
mov
sbb
mov
jne
and
push
push
jne
push
inc
xchg
lahf
les
icebp
xchg
fldenv
fsts
out
xchg
out
pop
mov
xchg
push
xlat
in
cmp
shlb
mov
xor
aad
and
jle
cmp
out
xchg
push
dec
sti
insl
mov
mov
sub
xor
mov
dec
jbe
sub
insl
mov
pop
arpl
lcall
xor
mov
xlat
xchg
cmp
aad
mov
dec
ljmp
xchg
push
dec
add
das
jo
lods
pop
or
push
add
shrb
jl
rcrl
es
or
or
push
xchg
push
aam
sar
vpsubusw
sahf
and
cmp
data16
loop
es
xor
xor
adc
out
inc
mov
xchg
mov
add
xchg
mov
sbb
daa
loope
call
add
arpl
xchg
dec
sbb
out
mov
sub
mov
xor
or
mov
jne
in
xor
leave
xor
fmulp
sbbb
xor
out
push
idivl
f2xm1
adc
dec
sub
lods
jecxz
pop
pop
mov
scas
loop
sar
jae
and
shll
aam
ja
add
inc
xchg
push
into
mov
sub
test
mov
and
pusha
ljmp
push
cmc
in
sub
inc
popf
xor
pop
andb
jle
sahf
bound
mov
xchg
xchg
test
add
out
sub
jae
negl
int
lods
shll
mov
jns
in
pop
fidivl
sub
pop
mov
sahf
adc
sbb
cmp
outsl
leave
jmp
int
adc
and
cmp
or
xchg
lcall
sbb
mov
es
gs
dec
lods
loop
std
mov
inc
aad
in
dec
lret
dec
jbe
mov
xchg
dec
fwait
and
or
sahf
mov
ljmp
sbb
dec
mov
fstpt
inc
jno
dec
mov
mov
lret
shlb
adc
ret
cltd
pusha
push
imulb
jp
and
std
repz
lock
mov
das
mov
or
sbb
sub
call
clc
jge
out
jl
sbb
adc
xor
add
cmp
movsb
leave
adc
inc
jo
sub
rcrb
mov
cltd
lods
dec
insl
push
hlt
in
sbb
push
std
add
add
push
test
mov
mov
ds
cmp
and
fildll
lods
inc
dec
push
jecxz
pop
mov
and
mov
pop
fcomp
andl
adcl
xor
jo
jb
dec
stos
jno
call
mov
dec
scas
lds
or
test
dec
bound
push
shlb
cmp
leave
mov
or
mov
mov
sub
scas
xor
mov
pop
stc
inc
fs
xchg
imul
jmp
mov
or
stos
loope
jns
out
data16
int
push
rcl
dec
jp
fwait
push
mov
lcall
adc
sahf
dec
call
sbb
mov
cs
popa
and
test
aad
mov
push
cmp
movsb
lds
test
push
aad
dec
jae
jnp
call
adc
in
adc
sub
xor
divl
pop
lret
stos
add
inc
mov
adc
data16
mov
pop
pop
rolb
push
mov
inc
inc
lock
cmpsl
sub
push
bound
dec
addb
push
inc
sbb
rcrl
mov
or
in
push
data16
shr
push
or
xor
xchg
jmp
rcrl
dec
rclb
andl
sbb
mov
test
int
pop
adc
inc
mov
jno
push
pop
jmp
add
dec
in
mov
xlat
cmp
call
sub
jne
inc
pop
jb
sbb
loope
sub
fstps
pop
jne
pop
jns
js
bnd
inc
and
dec
mov
jmp
pop
test
mov
inc
ss
cmp
mov
pop
mov
loope
movsb
xor
rcrl
lock
mov
pop
or
out
into
loop
dec
pop
mov
scas
mov
popa
mov
test
call
sti
les
bound
test
xchg
call
imul
mov
dec
mov
add
sub
repnz
insl
mov
fisubrs
clc
cmpl
cmc
sub
push
fistpl
jae
cltd
loope
ljmp
and
repnz
cs
mov
int
adc
lahf
adc
jno
push
push
cmpl
mov
data16
jno
and
add
xor
jmp
and
cmpl
ror
test
xchg
mov
iret
stc
in
shll
jg
sbb
and
push
jmp
mov
inc
mov
stc
mov
or
testb
test
push
data16
push
and
add
jmp
fnstsw
dec
xchg
fbld
xchg
or
push
mov
inc
aam
push
inc
mov
dec
sahf
icebp
sub
xchg
adc
mov
ficompl
into
push
sbb
test
out
or
lods
adc
pop
and
loope
cmp
mov
adc
inc
jge
out
cmp
in
sti
dec
xor
pop
inc
adc
xlat
ss
aam
push
push
daa
scas
mov
fbstp
jb
popa
mov
int
push
cmp
mov
dec
pop
jmp
or
dec
cmp
pop
mov
push
or
cld
icebp
mov
cli
shll
cmpl
xor
mov
jle
lods
adc
or
xchg
dec
cwtl
pop
push
movsb
sbb
int3
ss
sub
xor
inc
xor
push
add
rorb
movsl
add
jle
sbb
cmc
les
sub
rclb
movsl
fldcw
pop
iret
lods
xchg
int3
add
sbb
les
xchg
outsb
sarb
push
bound
or
xlat
cmp
mov
push
fucomi
mov
push
jg
sarl
dec
pop
pop
inc
sbb
rorb
mov
sbb
xor
pop
push
out
and
sub
mov
daa
mov
push
xchg
jl
movsl
jl
clc
mov
mov
test
sub
and
ljmp
mov
dec
icebp
cli
subl
jnp
sbb
stc
in
aam
js
lock
and
xor
adcl
test
arpl
fdivrs
data16
stos
mov
jle
jecxz
loope
popa
mov
sub
jae
lret
xorb
jmp
test
imul
sti
pop
xchg
lcall
dec
ror
pop
lcall
imul
je
push
dec
test
add
and
test
out
pop
movsb
xchg
xchg
mov
pop
repnz
add
fs
mov
aam
cwtl
pop
out
mov
and
add
xor
faddl
lret
or
daa
xchg
mov
xchg
lea
xor
cmpl
rorl
cmpsl
shl
fcmovnb
daa
leave
add
cmc
sub
pushf
push
pop
arpl
imul
adc
lock
cmp
or
and
or
push
in
inc
leave
xor
test
popa
push
iret
mov
push
imul
sub
mov
xor
inc
mov
stos
into
cwtl
sbb
shll
stos
mov
jo
push
shrb
sbb
aam
add
into
sub
jo
add
push
sub
je
les
jmp
jg
push
and
sub
xor
int3
mov
arpl
fcoml
mov
in
jb
scas
popf
dec
call
dec
mov
add
lods
lds
imul
test
mov
jne
add
jns
maxps
call
cmp
imul
fldt
shr
push
xor
andb
rclb
lret
aaa
ret
fsubs
xor
icebp
stc
lods
cwtl
push
mov
sub
sub
push
jl
push
push
or
scas
sbb
sbb
dec
pop
fwait
pusha
mov
pop
mov
lock
jl
sbb
rcl
iret
adc
xchg
inc
pusha
cld
sub
xchg
imul
adc
mov
cltd
xchg
xlat
sub
mov
mov
add
addr16
test
leave
stc
or
stc
iret
push
adc
jne
jmp
push
ljmp
sub
or
and
aaa
ss
or
or
das
add
pop
dec
out
cmp
cs
outsl
cld
pop
xchg
sbb
lods
je
idiv
add
xor
sbb
mov
les
mov
scas
lods
andb
adcb
push
daa
aad
push
pop
addr16
or
xchg
add
lods
pop
mov
mov
cmpsl
cmpsl
pushf
and
jnp
fisttpll
xchg
negl
rcll
insl
scas
rcrb
fsubp
or
cmp
push
mulb
mov
xor
jl
lahf
inc
lcall
lret
jae
pop
mov
bound
inc
cmp
xchg
dec
daa
cmp
mov
daa
push
mov
cwtl
sub
out
xor
xor
movsl
mov
aaa
pop
lret
orb
or
insb
out
aaa
pop
sub
aad
mov
lret
pop
add
cltd
ret
mov
cwtl
scas
pop
jae
inc
cld
mov
cli
in
sbb
in
xorl
test
jmp
pop
test
repz
push
push
loopne
subb
pop
inc
jg
je
mov
push
push
icebp
and
xorb
push
add
outsb
rcrb
mov
aam
std
xor
out
je
fs
bnd
sub
test
push
mov
in
les
sub
arpl
ds
pop
lock
ljmp
fs
test
jmp
xchg
add
mov
xchg
rol
aad
enter
insb
nop
cmpsl
or
push
leave
int
lea
dec
subl
lret
out
enter
jecxz
lcall
cmc
ja
or
cmpsl
sub
sbb
leave
inc
push
sbb
cld
inc
or
adc
pop
inc
cli
and
inc
mov
dec
popf
dec
daa
fnstenv
adc
aas
mov
xor
into
mov
das
xchg
cmp
dec
addb
sti
fadds
dec
or
mov
ss
mov
xor
xchg
or
stc
ret
push
push
sub
cmp
fdivrp
mov
out
cwtl
jb
add
lea
sbb
xchg
mov
hlt
pop
and
push
jecxz
sbb
xor
loop
push
sub
mov
jns
inc
pop
mul
jno
mov
lods
mov
imul
fwait
mov
lahf
stc
pop
xor
xchg
ss
testl
loope
loop
outsb
push
push
add
mov
xchg
xor
daa
push
cmp
mov
dec
mov
mov
inc
cmp
inc
lock
jle
cmp
repnz
push
lcall
stos
movsl
inc
mov
aam
xor
cmc
daa
lahf
mov
adc
enter
push
adc
inc
stos
clc
or
js
adc
shlb
in
xchg
push
cmp
or
push
or
xchg
imul
sub
cmp
inc
ljmp
or
sub
add
push
lret
jle
pop
or
push
xlat
mov
jne
push
scas
fldenv
pop
and
xlat
inc
push
popa
mov
inc
and
push
ret
sub
call
sti
add
mov
mov
outsl
add
and
mov
xchg
lods
es
push
add
or
xchg
test
hlt
pop
push
inc
fdivrs
or
xchg
outsl
call
push
jle
xchg
ja
popa
ljmp
test
fstpt
fcompl
in
repz
jae
call
ss
jae
pusha
out
jb
insb
jno
outsl
cmc
lock
notb
lahf
sbb
fnstcw
fdivrs
daa
repz
sbb
mov
fidivs
test
xchg
fadds
cmp
clc
cltd
punpcklbw
imul
fiaddl
or
sub
and
imul
dec
add
scas
add
mov
pop
pop
mov
inc
mov
ja
bound
pushf
mov
xor
xchg
inc
aam
push
and
push
mov
dec
mov
repnz
jno
popa
or
mov
push
pushl
xor
test
add
shll
cmpsb
cld
inc
insb
push
push
pop
mov
ja
lret
xor
clc
filds
cmc
jb
icebp
xor
jmp
repz
clc
imul
pop
adc
and
cltd
lock
outsl
adc
leave
mov
mov
pop
xchg
sbb
sbb
pushf
mov
inc
push
je
adc
jmp
cmp
jle
shrb
inc
adc
lock
in
xor
mov
outsb
fs
push
cmc
cmp
pop
repz
dec
xchg
cmpsb
inc
jmp
or
dec
or
movsb
cmpsb
into
xchg
pop
xor
xchg
mov
add
ss
or
pop
in
testl
or
add
pop
add
decl
pop
pop
aaa
fcomi
testl
or
js
inc
stos
ret
lretw
pop
or
cmp
add
inc
cmp
sub
scas
mov
push
pop
cmp
cld
mov
mov
add
push
mov
loopne
jnp
cltd
or
movsb
sahf
repz
stc
fwait
jmp
push
pop
rol
push
mov
add
addl
outsb
mov
mov
sub
cmp
rcrl
cmp
mov
repnz
aaa
and
jns
mov
inc
rol
push
cmpl
and
adc
push
pusha
decl
sbb
test
das
outsb
mov
fidivs
dec
mov
div
pop
jmp
dec
ja
xadd
aad
pop
scas
xor
mov
test
shrl
shlb
mov
repnz
adc
xchg
push
cli
cmpsb
mov
xchg
in
das
push
and
outsb
xchg
daa
fimull
inc
test
iret
jecxz
mov
mov
in
sub
adcl
fcmovne
adc
lods
mov
jmp
aad
pop
sahf
push
push
clc
jb
mov
xchg
xor
sub
sarl
jnp
loop
xorb
mov
cli
iret
xchg
scas
fistpl
loope
iret
movsb
xor
mov
dec
pop
inc
ljmp
sar
insl
sbb
sub
sbb
mov
loope
jae
jle
test
movlpd
and
and
ljmp
xchg
cwtl
xor
fs
sub
cmp
and
pop
pushf
xor
jne
lods
pop
repnz
dec
inc
loop
cmp
mov
test
fiaddl
add
push
adc
inc
rorl
or
or
jno
inc
xchg
jge
ficoml
repnz
jae
inc
adc
add
lret
inc
into
push
ret
shrb
daa
xchg
cmpsb
ja
fbld
lret
mov
ds
inc
dec
jp
nop
lcall
adc
adcl
pusha
xchg
jne
push
rorb
sbb
mov
gs
add
pop
jl
sub
push
dec
dec
mov
sbb
mov
xor
xchg
jbe
dec
cli
cwtl
lcall
daa
mov
scas
arpl
mov
push
mov
jg
mov
xor
je
mov
in
adc
maskmovq
testl
and
cli
push
jo
mov
lods
daa
out
sub
xor
add
push
xor
movsbl
lds
cmc
loope
push
pusha
outsb
and
sub
mov
mov
shll
cwtl
adc
pushf
sub
imul
push
lods
lret
lods
cmp
lock
sub
icebp
jge
icebp
jge
sub
jae
lret
fwait
xor
scas
jnp
mov
jmp
fs
mov
pop
xchg
push
mov
js
inc
dec
adc
fdivrl
xchg
and
xchg
call
mov
outsl
mov
negl
xor
sbb
dec
loop
mov
leave
mov
cld
push
jl
lahf
push
fistpll
dec
repnz
es
dec
rcrb
xchg
cmp
xchg
lret
sub
dec
mov
xchg
mov
push
pop
mov
int
mov
fwait
push
sub
fistl
cmp
dec
test
imul
rorl
and
or
xlat
cmpsb
jnp
outsl
mov
cmc
push
imul
add
loopne
mov
pop
shl
xchg
in
adcb
pop
and
fdivs
cwtl
add
sub
out
cmp
jne
stos
adc
mov
mov
cmp
dec
add
or
into
shlb
mov
xchg
add
fwait
movb
into
mov
or
cmpsl
ja
dec
int
xchg
jne
in
js
dec
cmpsl
mov
test
sbb
sbb
cltd
mov
xchg
rol
loope
sub
sahf
loop
test
mov
rcl
aaa
sahf
xor
rcrb
xor
insb
stc
mov
xchg
jmp
dec
cwtl
adc
xchg
mov
pop
jmp
lods
shl
add
enter
jle
adc
cmp
sub
pop
push
clc
rcr
cld
int
cmp
fmuls
xchg
sub
sbb
jne
divl
outsl
sbb
add
push
loop
xor
jle
ret
mov
fwait
push
jge
test
ljmp
je
or
lods
cmp
add
mov
jge
cmpsb
mov
xchg
sub
call
and
push
out
and
jb
jecxz
rorl
shlb
lds
popf
arpl
xchg
lods
push
stos
add
loop
xchg
xchg
movsb
in
adc
adc
pop
push
test
dec
rorb
in
imul
or
sbb
ret
popl
and
jne
mov
inc
insl
popa
push
mov
pop
jecxz
push
adc
add
int
pop
dec
dec
cltd
add
mov
in
xor
inc
push
out
jle
push
pop
cmc
loopne,pn
loopne
push
ljmp
subl
inc
pusha
adc
popl
aad
shlb
or
out
dec
xchg
add
addl
adcl
into
or
mov
cmp
jmp
xchg
or
lock
dec
mov
je
xlat
mulb
mov
push
loope
and
or
adc
shrl
xlat
scas
add
jb
pop
push
das
add
cmpsl
aad
hlt
lods
sbb
pushf
stos
pop
mov
mov
mov
xchg
cmp
in
lret
outsb
fidivl
dec
out
lret
mov
cmp
fstpt
mov
mov
mov
pop
repnz
and
ja
xchg
ljmp
imul
daa
push
sbb
lcall
xor
inc
push
incl
les
insl
cmpsb
jne
ja
rcr
dec
ljmp
notb
sbb
mov
adc
fstpl
push
push
insl
inc
cmp
dec
push
mov
cmp
add
lcall
repnz
jnp
xor
mov
out
dec
mov
pop
dec
in
cmc
mov
or
sub
testl
aad
popa
lcall
leave
in
outsb
daa
shlb
filds
adc
jnp
int
ficoms
stos
mov
incb
add
pop
add
leave
jb
pop
mov
repz
gs
jnp
dec
cwtl
inc
or
in
xchg
loop
mul
jp
ret
cmp
inc
int
mov
int
mov
popa
cmpsl
dec
es
inc
nop
out
xchg
add
pop
loop
ret
loopne
jecxz
xor
adc
fistl
xchg
rep
mov
ret
sbb
pop
jae
clc
push
push
mov
lret
scas
fninit
shll
pushf
push
xor
dec
test
arpl
shr
pop
test
iret
cmpsl
fistpl
arpl
fcmovb
adc
jl
mov
test
in
hlt
xlat
mov
clc
xor
ja
and
aam
and
andl
hlt
mov
and
nop
inc
mov
sbb
inc
cmp
fisttpl
jbe
test
dec
test
add
and
push
loope
push
jmp
dec
adc
stc
jge
sub
insl
int
push
jbe
cmp
pinsrw
ds
in
lret
xor
jmp
xor
xor
sub
xor
push
iret
push
xchg
and
sbb
daa
fsubs
movsl
xor
imul
xor
movsl
sbb
sarb
test
ljmp
pop
stos
mov
inc
mov
test
aad
jp
push
and
sbb
sti
sub
add
add
icebp
fdivp
xchg
sub
loop
add
pop
popa
mov
popf
push
pop
pop
inc
xor
mov
adc
inc
bound
js
in
inc
xor
sub
or
cmp
pop
cmp
inc
popa
decb
pop
pop
int3
scas
notl
loop
clc
jns
pop
clc
and
add
cwtl
ret
sbb
xchg
icebp
mov
jo
call
add
push
add
outsl
adc
in
loop
push
insb
or
dec
xchg
pop
pop
mov
push
mov
mov
mov
rcl
inc
outsl
scas
push
xor
inc
leave
add
pop
fcomps
shrb
std
jl
loopne
push
mov
pop
dec
in
xor
pop
jge
roll
push
nop
outsl
mov
rcr
fidivrl
add
pop
out
and
and
mov
xchg
lock
movsb
hlt
test
cmp
lahf
nop
lds
dec
dec
in
inc
sbb
adc
pop
test
movsb
notl
xchg
int
fldcw
cmp
test
cmc
and
inc
ljmp
cmp
out
pop
fidivrl
mov
add
cmc
add
or
aam
mov
mov
dec
mov
push
push
stc
xor
clc
mov
mov
repnz
push
ror
add
out
push
mov
inc
fbld
jp
fisttps
outsl
sub
jmp
sub
inc
dec
mov
sbb
jae
xor
adc
xchg
push
jg
pop
cmp
cmp
dec
push
xor
loopne
subb
imul
in
int3
mov
mov
out
outsb
pop
lods
sub
xchg
in
jns
rorl
or
fidivs
push
sti
jbe
xor
sub
fwait
push
xor
xor
jno
pop
test
ffreep
sahf
adc
jb
push
sub
sub
xchg
sbb
nop
push
movsl
inc
xchg
mov
xchg
push
push
cld
and
es
shl
add
adc
add
fldcw
and
or
inc
lods
daa
cmp
push
aam
stos
loop
pop
addr16
xchg
xor
add
push
or
out
sub
pop
jg
loope
pop
xchg
xchg
cmpsl
pop
mov
mov
push
jl
xchg
sti
cmpsl
or
cmp
clc
cltd
sub
sbb
ficoml
test
dec
fists
fcmovnu
jns
mov
dec
mov
jp
cltd
cmc
sti
inc
dec
adc
pop
shlb
push
or
cmpb
push
xor
movsb
push
stos
adc
push
jbe
adc
arpl
and
inc
inc
xchg
mov
sahf
add
or
xchg
popf
or
jle
lret
mov
frstor
mov
pop
pushf
ljmp
outsb
push
sub
inc
les
or
mov
mov
mov
addr16
testl
lea
mov
push
pop
mov
fists
es
sbb
cwtl
cmpsb
inc
and
movsl
cmp
xor
testb
jae
dec
clc
fldcw
jno
or
pop
xor
mov
jmp
inc
cmpb
mov
sub
dec
inc
fnstcw
xor
cmp
cs
mov
test
ja
xchg
xlat
jo
shll
push
cmpsl
cmpsb
cmpsl
mov
stos
sub
inc
cmp
xchg
popf
sbb
sarl
mov
lods
ret
cmpsl
cmp
addr16
call
jne
popa
adc
cmp
mov
cmpsl
test
das
push
imul
mov
movb
push
std
mov
dec
stc
cmp
jb
ret
mov
lcall
inc
inc
mov
push
jp
adcl
int3
mov
mov
push
in
out
mov
mov
and
scas
and
inc
sub
nop
xchg
xor
shll
adc
ret
dec
xorl
out
mov
xchg
lret
xchg
adc
inc
icebp
flds
adc
das
cltd
cld
mov
xchg
mov
les
xlat
js
pop
cltd
aas
insb
xor
push
leave
shrl
fs
mov
sete
ret
push
adc
adc
dec
add
outsb
dec
jg
stos
pop
xorb
hlt
pop
mov
js
mov
aam
lcall
pop
ja
add
pop
loope
adc
mov
mov
and
popf
xchg
jne
xor
xchg
ds
lret
daa
xchg
mov
push
pop
dec
xor
sbb
jecxz
lcall
pop
hlt
mov
lcall
lods
xchg
add
movsl
push
sub
cmp
push
push
leave
pop
cltd
iret
cmp
gs
sbb
or
xor
mov
scas
add
cld
or
std
adcl
ljmp
loope
jno
jmp
mov
push
shlb
push
aas
adc
sub
lcall
ficompl
out
roll
outsl
movsb
daa
jbe
idivl
mov
fdivrs
cwtl
inc
add
add
call
lock
xchg
xchg
pop
or
inc
jmp
add
push
fisubrl
cmpsb
in
into
fistl
jb
out
lretw
shll
dec
scas
adc
xchg
lea
jg
fcmovnb
icebp
iret
cmp
fstps
or
add
or
cld
pop
cmpsl
pop
and
std
push
dec
add
clc
mov
xor
mov
xchg
dec
data16
inc
push
mov
and
into
popf
add
mov
add
shlb
dec
xor
or
ret
adc
hlt
dec
test
test
mov
jo
mov
and
cmpsl
or
push
push
lea
xlat
xchg
stc
xchg
adc
xor
add
xchg
sbb
mov
testb
iret
call
xlat
add
sahf
fiaddl
cmp
fstpl
cli
dec
mov
xchg
nop
cs
lret
xchg
ds
push
jne
sbb
mov
cmc
jne
xchg
aaa
xor
shll
mov
arpl
sub
pop
call
jns
fidivrl
clc
xor
rcrb
push
cmp
fisubrl
adc
cmc
mov
push
cmp
adc
addr16
cwtl
sbb
mov
movsb
or
ljmp
sbbb
imul
cmp
pushl
jp
sbb
dec
jmp
leave
mov
imul
popf
je
gs
mov
leave
pushf
dec
lds
test
jns
inc
pop
dec
fmuls
and
aaa
shl
aam
aas
mov
insl
lds
stos
sbb
hlt
loopne
test
jp
test
stos
inc
test
cld
add
add
pop
stos
cwtl
inc
cmp
cli
dec
sub
xor
push
push
add
pop
shrl
or
inc
mov
xor
mov
sbb
mov
fdivrl
sub
push
mov
mov
push
pop
push
adc
nop
sahf
push
aas
fwait
daa
ret
cmp
and
dec
xchg
adc
fs
push
mov
sub
pop
ds
mov
or
in
push
in
push
mov
ja
push
push
in
adc
stc
dec
mov
add
push
cmc
jo
lods
dec
mov
in
xchg
xlat
mov
mov
call
pop
adc
jecxz
adcb
outsl
inc
lods
mov
xor
out
sub
inc
orb
lret
inc
aad
test
mov
es
add
adc
orb
inc
nop
jg
icebp
filds
inc
and
fsts
lahf
cmpsl
cmp
push
cltd
out
dec
sbbl
dec
iret
mov
push
add
insb
fidivrs
pop
dec
lss
movsl
icebp
lahf
mov
push
mov
cltd
js
jne
aas
add
incb
adc
xchg
in
mov
minps
sbb
inc
lods
xchg
rol
pop
shrl
inc
adc
cmp
insb
mov
xor
and
roll
push
leave
push
lds
test
gs
dec
aaa
stos
cld
mov
loopne
mov
mov
dec
cltd
xchg
push
pop
cltd
fisubs
outsl
repz
jecxz
adc
in
call
in
out
or
fcom
push
ss
cld
stc
add
ret
dec
mov
das
push
sub
ds
inc
sub
inc
popa
mov
mov
aaa
pcmpeqb
inc
aam
xor
arpl
pop
mov
in
imul
lods
mov
pop
or
sahf
loop
stc
pop
mov
test
or
xor
cli
sbb
daa
sbb
adc
pop
mov
movsl
outsb
and
inc
sub
jns
mov
mov
xchg
mov
sbb
sub
ss
cli
mov
loop
add
sbb
dec
jae
dec
outsl
jmp
inc
mov
repz
lret
pop
fcomps
push
ficompl
xchg
addr16
pushf
push
inc
xchg
adc
lcall
sbb
lock
mov
out
sub
add
popa
data16
jp
mov
push
cwtl
and
cmp
fs
adc
xchg
jns
idivb
ds
or
add
les
lahf
inc
fldcw
jne
repnz
pop
int
inc
repz
sub
aam
mov
inc
inc
or
inc
pop
xchg
icebp
xor
arpl
jmp
sahf
repz
cmp
not
mov
sub
test
sbb
xor
add
dec
into
push
out
or
loope
scas
add
imulb
je
in
cmp
sbb
rcrb
or
sub
jne
or
aam
idivb
js
stos
jnp
pop
insl
adc
jae
icebp
nop
mov
pop
nop
or
pushf
cwtl
jo
lods
sub
js
mov
call
outsl
test
lds
dec
scas
add
cwtl
bound
lods
mov
daa
mov
jne
addr16
iret
cltd
dec
mov
mov
xchg
dec
lcall
mov
sbb
pusha
lock
hlt
in
dec
push
clc
jae
mov
mov
xchg
sub
and
jmp
arpl
popa
shrb
or
xor
jmp
stc
and
mov
inc
mov
inc
das
add
loop
xlat
mov
les
int
pusha
and
jnp
dec
inc
out
push
mov
jo
dec
movsl
push
xchg
ds
inc
lods
adc
adc
cmc
xor
add
xchg
int
in
push
and
or
xor
iret
ret
xlat
dec
inc
scas
ret
in
pop
adc
insb
out
shrl
add
or
xor
lds
sbb
mov
or
stos
jae
sbb
es
aam
cwtl
pop
js
insb
mov
pusha
cwtl
and
imul
pop
adc
jecxz
fs
push
fcomps
inc
mov
cmp
mov
mov
incb
cmpl
jmp
dec
add
sub
out
lds
sub
xchg
data16
push
scas
cwtl
into
dec
outsb
mov
fmulp
movsl
movsb
mov
mov
shlb
enter
cld
sub
jns
mov
insb
jge
xor
fst
xchg
add
jnp
adc
lods
push
adc
punpcklwd
add
adc
shlb
add
js
add
xor
aaa
add
push
pop
inc
dec
xor
inc
ss
xor
pop
dec
inc
add
pop
xor
dec
inc
pop
xor
push
pop
xor
push
cmp
add
push
xor
dec
inc
pop
xor
dec
inc
aaa
add
push
xor
pop
inc
inc
push
pop
inc
pop
push
add
xor
xor
inc
add
xor
xor
xor
push
pop
inc
add
push
pop
inc
pop
push
xor
add
xor
inc
cmp
push
cmp
push
xor
cmp
pop
push
dec
dec
add
pop
pop
dec
cmp
cmp
add
xor
dec
inc
xor
pop
cmp
add
xor
push
push
inc
pop
push
xor
push
inc
push
pop
dec
xor
cmp
inc
inc
pop
push
pop
push
dec
pop
push
xor
pop
push
push
cmp
dec
push
push
dec
xor
dec
dec
xor
push
dec
cmp
pop
inc
dec
pop
inc
push
push
pop
inc
add
xor
dec
cmp
push
push
add
dec
xor
xor
inc
dec
xor
ss
dec
cmp
push
push
aaa
xor
xor
pop
push
push
push
dec
pop
inc
add
pop
xor
pop
xor
inc
xor
xor
xor
push
xor
dec
xor
push
add
pop
add
push
add
xor
pop
add
add
push
add
add
dec
add
xor
pop
add
push
add
add
xor
pop
add
add
add
xor
inc
add
inc
add
xor
add
inc
add
add
inc
add
pop
add
add
push
add
pop
add
dec
add
add
inc
add
xor
add
inc
add
add
add
pop
add
xor
pop
add
add
push
add
add
pop
add
dec
add
xor
add
dec
add
add
aaa
add
inc
add
add
inc
add
xor
add
inc
add
dec
add
push
add
inc
add
add
add
pop
add
add
dec
add
add
cmp
xor
pop
add
add
pop
add
pop
add
add
add
push
add
add
xor
pop
add
inc
add
push
add
dec
add
cmp
aaa
add
add
dec
add
pop
add
inc
add
xor
dec
add
push
add
add
dec
add
dec
add
xor
add
add
or
add
rolb
add
or
add
xor
add
pusha
pop
add
loopne
add
adc
add
sub
add
pop
or
adcb
cmpb
add
mov
or
adc
add
lock
addb
add
add
add
add
add
add
add
in
push
add
in
push
add
add
addb
add
add
add
add
add
add
add
sbb
add
add
add
add
add
dec
pop
add
add
add
add
pop
add
test
add
lcall
xorb
add
loopne
add
add
add
add
add
add
add
incb
add
insb
adc
add
add
subb
add
add
add
add
add
add
add
mov
add
addb
add
add
add
add
add
add
add
inc
or
sbbb
addb
add
add
add
add
add
add
add
outsb
or
xorb
addb
sbbb
cmpb
add
mov
add
add
add
add
add
add
add
rorb
add
jae
add
call
add
add
add
add
add
add
add
jmp
add
add
add
add
sbb
subb
add
dec
add
addb
add
add
add
add
add
add
add
repz
add
add
js
add
add
add
add
add
add
add
or
adcb
add
test
add
rolb
bound
add
fadds
addb
add
add
add
add
add
add
add
or
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
or
add
add
add
add
add
add
or
add
add
add
add
add
add
or
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
add
or
add
push
add
add
add
add
add
or
add
push
add
add
add
add
add
or
add
push
add
add
add
add
add
or
add
push
add
add
add
add
add
or
add
add
add
add
add
add
or
add
add
add
add
add
add
or
add
add
add
add
add
add
or
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
or
add
add
add
add
add
add
add
add
or
add
push
add
xor
add
adc
add
in
add
add
add
inc
sbb
add
or
add
add
add
add
add
add
or
add
add
add
add
add
add
testb
add
add
add
add
add
add
pop
or
add
add
add
add
add
add
or
add
add
add
add
add
or
add
add
add
add
add
or
add
add
add
add
add
or
add
add
add
add
add
add
in
add
add
add
iret
insl
add
pop
or
add
add
add
add
add
jbe
add
or
add
add
add
add
add
jg
add
or
add
add
add
add
add
add
wbinvd
add
in
add
add
add
sbb
add
in
add
add
add
and
add
in
add
add
add
sub
or
add
add
add
add
add
add
in
add
add
add
dec
mov
add
or
add
add
add
add
add
add
pop
or
add
add
add
add
add
add
wbinvd
add
in
add
add
add
je
add
or
add
in
add
add
add
jg
add
or
add
in
add
add
add
mov
add
adc
add
in
add
add
add
popf
in
add
adc
add
in
add
add
add
mov
add
wbinvd
add
in
add
add
add
mov
or
add
add
add
add
add
pop
add
sbb
add
in
add
add
add
in
add
pop
or
add
add
add
add
add
sbb
add
or
add
add
add
add
add
add
pop
add
inc
add
xor
pop
add
pop
add
aaa
add
add
xor
dec
add
cmp
push
add
add
dec
add
add
add
push
add
or
inc
add
add
add
dec
add
push
add
add
add
aaa
add
add
add
cmp
cmp
inc
add
xor
dec
add
inc
add
dec
add
add
add
push
add
pop
add
add
or
dec
add
push
add
push
add
add
xor
or
inc
add
push
add
xor
add
add
add
push
add
add
add
inc
add
add
add
xor
push
add
dec
add
add
inc
add
add
xor
pop
add
inc
add
add
pop
add
add
or
push
add
push
add
add
add
dec
add
push
add
push
add
or
pop
add
dec
add
xor
aaa
add
inc
add
add
add
cmp
dec
add
xor
inc
add
add
cmp
pop
add
dec
add
add
add
dec
add
pop
add
add
xor
dec
add
add
dec
add
pop
add
dec
add
push
add
xor
inc
add
add
pop
add
add
add
cmp
cmp
push
add
add
add
push
add
pop
add
xor
add
add
add
push
add
add
dec
add
xor
xor
pop
add
add
pop
add
aaa
add
add
add
add
add
add
inc
add
add
inc
add
pop
add
add
cmp
cmp
push
add
xor
add
pop
add
push
add
add
add
push
add
push
add
add
add
add
add
push
add
inc
add
pop
add
push
add
pop
add
add
xor
inc
add
pop
add
pop
add
add
push
add
xor
inc
add
inc
add
add
push
add
xor
pop
add
or
push
add
add
xor
pop
add
push
add
inc
add
pop
add
add
add
dec
add
pop
add
push
add
push
add
add
xor
pop
add
push
add
dec
add
inc
add
dec
add
add
jmp
jle
js
aam
push
rorb
xchg
jle
add
pop
add
lods
repz
mov
stos
push
xchg
jge
dec
mov
adc
xchg
and
out
cmp
pop
sub
lods
cs
movsl
inc
jl
stos
movsb
or
bound
mov
in
rcll
fadd
test
hlt
or
icebp
mov
faddl
dec
or
lcall
lahf
loope
sub
mov
cmp
and
lds
xchg
inc
shll
sarl
outsb
loopne
fld
je
pop
mov
test
loope
and
aam
mov
imul
push
sahf
push
in
adc
jp
jmp
ja
ret
pop
and
aad
mov
push
test
ljmp
sbb
sahf
in
or
and
test
int3
mov
xchg
loopne
mov
pusha
xchg
pop
jge
test
mov
pop
imul
pop
aaa
jb
adc
sbbb
fsub
ljmp
pop
adc
lock
decb
fisubl
loope
jb
ret
add
ss
inc
add
loop
xor
std
lods
notb
cmpsl
mov
pop
iret
cvtdq2ps
cmp
jno
mov
and
fsubp
or
mov
scas
cltd
repnz
leave
pop
out
mov
cwtl
jne
into
ja
inc
popf
das
sub
addr16
and
or
ret
ss
inc
xor
adc
mov
icebp
imul
push
push
out
mov
icebp
shll
shrb
jae
dec
fdivs
stc
add
cmc
decb
xor
add
mov
pop
cmp
push
and
jnp
dec
xchg
add
add
pop
lret
adc
cmp
jmp
faddl
data16
loopne
mov
cmp
inc
mov
adc
or
mov
cmpb
imul
xchg
divb
pop
scas
in
lret
popf
mov
mov
lea
mov
or
daa
cmp
xchg
jge
xor
sub
xchg
xchg
sbb
test
imul
mov
xor
cmp
fnstsw
pop
aas
iret
jle
popa
fildl
xchg
pusha
mov
xchg
jae
int3
or
out
imul
cld
rorl
or
test
pop
ljmp
xchg
pop
inc
out
cltd
jae
sub
inc
inc
inc
out
sbb
push
jmp
fstps
enter
add
jb
jb
std
or
test
inc
inc
and
jmp
pop
scas
data16
roll
cmp
lahf
hlt
repnz
mov
xchg
popf
imul
xchg
and
shlb
cmp
and
gs
inc
cwtl
dec
xchg
stos
lahf
rclb
mov
sti
xchg
mov
jmp
adc
imul
scas
popa
out
std
cmp
stos
cmpsb
push
mov
stos
outsl
ret
lar
daa
dec
xor
cmp
shll
fcomps
in
jmp
or
push
idiv
fadd
mov
gs
movb
jecxz
mov
jmp
jbe
pushf
mov
push
xchg
sbb
ja
inc
add
lods
sbb
ljmp
test
bnd
sbb
add
push
cwtl
cmp
mov
lcall
in
or
dec
sbb
int
out
cmp
jge
outsb
sub
mov
or
or
shrb
xchg
mov
or
rolb
into
or
mov
test
push
xchg
xor
mov
lock
mov
push
lods
inc
dec
jle
push
hlt
sbb
xchg
imull
sahf
sub
xchg
adc
dec
push
sbb
sub
sub
fdiv
imul
aam
push
mov
inc
sbb
xor
xchg
mov
inc
jo
adc
pop
lahf
pop
push
adc
pop
jecxz
push
cmpsb
lods
cmc
or
xchg
mov
gs
sbb
mov
fcos
gs
stos
sub
je
pop
and
imul
inc
add
xchg
sub
ret
xor
xchg
imul
mov
push
dec
les
or
xchg
sbb
nop
or
jo
dec
scas
enter
jbe
push
test
repz
repz
xchg
mov
filds
lock
pop
test
sbb
dec
lods
aaa
jb
mov
xchg
movsb
repz
pusha
fs
mov
cmpsl
push
mov
jmp
cmp
insb
jae
xchg
cltd
aam
iret
subb
imul
dec
nop
movsl
jmp
inc
repnz
adc
nopl
mov
pop
in
mov
dec
jl
jae
into
xor
mov
outsl
fdivs
jo
shr
imul
repz
into
lea
jmp
bound
std
popa
cmp
pusha
sub
addr16
sub
in
jmp
dec
aad
inc
loopne
dec
cs
mov
jae
sbb
dec
xchg
mov
pop
hlt
test
sbb
pop
les
loopne
out
sub
xor
mov
outsl
aaa
push
mov
shlb
lock
mov
jg
dec
dec
jno
xor
mov
in
and
mov
dec
sbb
stos
arpl
adc
outsl
mov
int
mov
sub
jl
dec
stos
lods
scas
aas
in
push
in
hlt
lret
in
pop
mov
repnz
sbb
fucomp
mov
sub
inc
cmp
pop
stos
mov
in
decb
jno
in
fcoms
jbe
outsb
xor
gs
call
add
xor
fimull
aad
out
ret
addr16
mov
loope
xlat
rcrl
out
in
jp
adc
in
push
and
mov
leave
mov
test
push
pop
ja
jae
outsl
fstps
movsl
sbb
mov
xchg
xchg
insl
inc
mov
dec
mov
lcall
xor
lods
leave
pop
xor
test
movsb
push
loopne
xchg
push
call
sub
rorb
jp
pop
jnp
and
xchg
add
jae,pt
mov
cli
or
sbb
sbb
rcrl
aad
insb
ss
shll
in
mov
pop
pop
jno
fdivrs
bound
testb
pop
xchg
cmpsb
jno
lahf
fs
in
xchg
cmpsl
loope
mov
mov
add
add
and
mov
pusha
cmpsl
and
fnsave
add
and
add
lret
inc
jl
jae
push
fstps
push
stc
sarb
out
aaa
je
lds
fnstenv
mov
jbe
fldt
or
xchg
xchg
test
fdivl
xor
sbb
das
pusha
in
outsb
sbbb
fdiv
out
call
sub
loope
add
lcall
add
adc
movsl
daa
lahf
mov
out
lcall
xlat
or
and
push
push
add
test
jp
add
mov
in
pop
ljmp
push
pushf
decl
mov
sbb
cwtl
mov
ret
test
mov
addr16
dec
or
out
inc
popa
push
insl
push
pop
rorb
daa
add
jne
das
lds
push
in
in
jno
jmp
cmc
xchg
ss
loope
jne
pop
lret
cmpsb
sarl
mov
add
cmp
roll
fwait
xor
outsb
pop
mov
add
outsl
push
lods
pop
bound
adc
push
mov
out
mul
xchg
xchg
stos
lret
jne
cwtl
jge
out
pop
cmp
pop
loopne
ret
data16
fsts
dec
add
mov
and
jnp
ror
push
mov
or
das
jecxz
and
fcmovu
js
xor
jl
dec
mov
or
hlt
repz
push
in
imul
add
xor
xor
stos
jnp
clc
cmp
xchg
jne
push
stos
jae
adc
or
test
cld
lahf
fcoml
les
or
out
jle
mov
lret
insb
nop
jecxz
jo
out
orl
add
pop
xlat
xor
mov
mov
inc
adc
gs
repnz
inc
stos
ret
jno
jne
mulb
fcmovu
cmp
lcall
insb
add
sub
popl
add
out
andb
mov
test
lods
popa
repz
loopne
pop
scas
int3
xor
lock
pop
movsl
mov
and
jne
insb
addr16
jns
andb
repnz
pop
cmc
mov
movsb
iret
sti
and
test
sbb
inc
rcrb
inc
sbb
jecxz
pushf
mov
lret
lret
sarb
mov
fidivrs
insl
mov
jl
hlt
inc
fdivl
jns
and
mov
stos
sbb
mov
push
xchg
insl
sub
dec
lock
dec
mov
nop
inc
dec
mov
pop
test
and
mov
or
dec
into
xor
inc
cld
pusha
loopne
out
testb
push
xorl
sahf
aad
inc
mov
xlat
jnp
stos
fsubrs
fisubs
stc
aaa
and
sub
jno
ret
mov
mov
push
bound
xor
pop
sti
test
xor
mov
rorl
add
sub
popa
negl
subb
rorb
sbb
mov
adc
jp
test
dec
mov
sub
lock
clc
stc
add
pop
dec
orb
push
xchg
inc
movsl
xor
fisubs
nop
popf
add
fmul
rclb
fmull
out
inc
jnp
mov
jmp
sbb
movsl
inc
pushf
gs
mov
sarl
roll
pop
les
outsl
les
pop
mov
lea
jno
ljmp
push
call
xor
push
scas
jecxz
xchg
sbb
flds
insl
je
add
imul
sbb
lret
js
xchg
jno
inc
push
dec
jnp
clc
mov
arpl
lods
pop
push
mov
adc
adc
pop
inc
push
sbbb
mov
fistps
push
mov
lret
lods
mov
enter
and
and
xor
cmpb
mov
leave
iret
add
xchg
int3
adc
leave
push
inc
ja
lahf
dec
gs
loop
mov
daa
sbb
gs
mov
lea
push
loop
lret
sti
xor
int
jmp
js
and
fstl
mov
pop
push
fsub
ret
out
int
cld
xlat
adc
mov
sub
shll
adc
push
lret
test
push
push
fistl
cltd
xor
dec
adc
inc
dec
sub
jbe
jmp
pop
inc
jne
leave
mov
jecxz
pop
lea
xchg
or
mov
xlat
lods
imul
mov
cld
jnp
je
sbb
subl
xchg
jg
push
mov
or
jno
enter
xchg
mov
cmp
jns
mov
sbb
pop
int
and
ret
in
les
lods
jmp
xor
imul
fwait
movsb
addr16
fdivrl
dec
dec
iret
fs
icebp
movsl
mov
aas
jae
or
sbb
push
in
jbe
inc
popf
lcall
setle
mov
je
mov
adc
sbb
fdivs
and
add
out
shlb
push
xor
and
das
addl
dec
jnp
pop
mov
and
adc
sub
outsb
pushf
rol
ss
xchg
movsl
cmp
jle
pop
cmp
jno
mov
pop
push
dec
lahf
iret
daa
xlat
pop
adc
mov
ret
or
mov
jg
cmc
inc
jl
lahf
cmp
mov
adc
mov
das
push
push
pop
mov
inc
ret
lahf
push
call
or
mov
add
mov
push
inc
outsl
xchg
pop
xor
mov
mov
jmp
dec
xor
shlb
imul
mov
jecxz
mov
mov
xor
xor
push
dec
xchg
dec
jno
pop
add
mov
mov
aam
rcr
mov
lcall
mov
je
pop
xchg
xchg
pushf
lods
notb
flds
cli
mov
inc
pop
je
sbb
ds
out
pop
leave
pop
pop
dec
stos
data16
sub
push
jge
jae
lock
pop
stc
mov
cmp
and
dec
mov
in
pop
and
fildll
out
push
push
loopne
mov
movsb
xchg
aaa
out
inc
xor
jp
gs
pop
pop
mov
add
daa
lahf
xchg
rcll
stos
cmc
add
mov
arpl
xor
gs
inc
and
mov
int3
ror
cmp
and
xchg
hlt
pusha
and
lds
add
add
pop
mov
cmp
loop
add
pop
add
push
mov
insb
jns
jno
or
movsb
add
dec
clc
pop
dec
jp
mov
popa
arpl
jecxz
mov
or
pop
sub
fcmovne
pop
lret
xor
xor
pop
fdivrl
flds
xchg
pushf
in
sub
in
jge
sbb
xchg
mov
repz
in
push
xchg
pusha
cmp
les
mov
sahf
imul
cmp
push
data16
fs
pop
mov
mov
incb
fnstcw
stos
mov
jp
push
cwtl
es
xchg
sbb
aas
pop
and
jl
or
push
mov
outsb
aaa
scas
and
into
out
jge
outsb
es
nop
or
sub
and
stc
mov
xchg
dec
cltd
aam
std
sahf
mov
and
cltd
test
mov
in
mov
lock
xor
inc
dec
dec
pop
jbe
enter
daa
lret
or
push
mov
add
sub
and
adc
dec
sub
mov
cmp
subl
mov
dec
push
push
fmull
roll
fsubl
fs
mov
sub
jae
adc
lods
mov
les
lret
sub
lods
imul
adc
pop
cli
insb
xor
pushl
xchg
cmp
pop
les
inc
push
or
cmc
push
daa
mov
add
inc
lahf
mov
aas
ds
fucomi
out
mov
sub
adc
pushf
fs
pop
cltd
inc
pop
hlt
pop
out
push
in
xor
xor
sbb
idivb
mov
lret
andb
repnz
xchg
sahf
arpl
int
mov
lock
jecxz
mov
test
push
movsl
das
adc
add
sbb
sbb
cltd
inc
imul
sbb
outsb
jge
stc
popf
sub
dec
jl
xor
dec
stc
hlt
out
mov
cmp
pop
mov
loop
stos
dec
sahf
xor
loope
mov
mov
iret
cmp
mov
sbb
movsl
das
addb
popf
nop
jnp
xchg
push
push
mov
xor
call
mov
or
push
mov
jns
cmp
add
xchg
stos
xor
fcompl
cmc
mov
cmc
cmp
aam
and
xor
inc
aaa
aaa
pop
dec
icebp
and
mov
inc
or
inc
into
icebp
cli
scas
jp
and
test
mov
fsubr
ljmp
popa
aas
imul
dec
pop
cmpl
pop
es
movsl
xor
sahf
out
loopne
jmp
jnp
ljmp
lret
push
movsb
dec
add
adc
test
ds
ds
in
orl
repnz
in
push
les
ss
cs
xchg
add
and
pop
mov
loop
mov
xchg
or
ljmp
sbb
jne
jo
test
adc
pop
lock
pop
ljmp
sbb
outsl
rcr
sti
mov
adc
jae
jecxz
je
ret
pop
xlat
inc
into
add
cmp
je
cmpsl
inc
jp
mov
fbstp
jl
mov
imul
jl
sub
gs
out
pop
adc
mov
aad
fdivr
sarb
bound
cltd
lea
pop
xor
cld
js
adc
jns
or
xor
std
jne
push
jae
xchg
mov
pop
adc
popf
or
popa
push
arpl
xor
int
rcr
bound
shll
out
pop
out
in
jp
adcl
out
outsl
pop
movsb
into
mov
sbb
enter
add
mov
test
aaa
pop
divb
jnp
cwtl
cwtl
repnz
mov
add
push
push
jle
in
pop
mov
aad
mov
roll
pop
push
jmp
iret
in
in
ficomps
sub
inc
jo
jle
out
inc
lcall
and
cmp
mov
jmp
dec
add
aam
jmp
jbe
sbb
push
or
jb
and
push
lret
call
adc
stc
aad
int
dec
sub
add
xor
mov
cmpsb
cld
pop
imul
outsl
jne
fwait
shlb
rolb
pop
loop
nop
dec
nop
std
sub
add
icebp
cwtl
push
ljmp
push
loopne
das
dec
inc
sti
sbb
or
cmp
jp
mov
jnp
cwtl
rcr
fdivr
enter
mov
pusha
push
mov
rolb
insb
fwait
in
adcl
xchg
imul
fsubs
jb
push
testl
test
xchg
aam
and
push
bound
fsubr
adc
fisubrl
xor
push
mov
fwait
notb
test
sbb
sbb
sarb
out
and
lods
sbb
add
cmpsl
push
dec
js
cmp
ror
enter
mov
or
shll
mov
pop
push
movsl
pop
xchg
ja
and
lods
or
test
mov
jo
std
jbe
push
test
shrl
gs
sbb
sub
jo
push
or
or
ret
rorl
or
test
movsb
or
and
xchg
jmp
adc
inc
pop
jl
cmc
sbb
lahf
gs
cmpsb
repz
add
pop
mov
scas
pushf
inc
cmpsl
insb
mov
fnop
lcall
mov
mov
ja
cmc
mov
fs
dec
aaa
cwtl
orb
xchg
jl
call
jae
and
inc
mov
test
stos
jo
and
mov
cmp
and
cld
and
push
lods
mov
in
xchg
xchg
mov
add
push
cmp
leave
roll
scas
add
outsb
mov
fisttpl
divb
dec
dec
pop
call
mov
inc
fwait
out
or
call
push
xchg
int3
sub
rolb
int3
rcr
hlt
jns
repnz
and
fadd
es
mov
xor
xchg
pop
jmp
test
xchg
sbb
adc
jbe
mov
neg
xlat
divl
leave
sbb
push
clc
cmpsl
inc
jl
addb
fwait
ret
sahf
test
out
lock
or
pop
hlt
push
mov
push
jge
jae
inc
outsb
push
fists
call
mov
add
mov
mov
out
subb
push
mov
gs
adc
mov
add
add
repz
movsb
adc
movsb
pop
in
sub
add
pop
add
dec
fldcw
cmp
jecxz
xor
lds
add
decb
xor
push
sbb
mov
sbb
cmp
nop
in
daa
adc
mov
mov
pop
pop
and
xchg
xor
loopne
shlb
jl
aas
roll
jbe
xor
aam
push
es
cmp
mov
test
pop
push
dec
ljmp
leave
cmpsb
imul
les
dec
scas
repnz
and
addr16
shlb
push
lods
cmpsl
push
mov
sbb
out
jbe
push
jp
add
lret
divl
and
in
ficomps
test
jmp
jb
leave
int3
out
add
fs
jl
scas
cmp
out
leave
mov
popf
add
add
pop
std
cmpsl
jo
adc
in
xchg
lahf
jmp
arpl
xchg
enter
add
cmp
sbb
or
jmp
movb
add
inc
cmpsl
jg
jp
push
push
inc
dec
icebp
sbb
mov
cmpsl
lds
mov
or
pop
in
insl
loope
inc
test
lahf
mov
mov
and
sbb
outsl
insb
packuswb
dec
dec
pusha
push
mov
sbb
ret
out
mov
mov
push
cmp
xor
pusha
xchg
xlat
xor
pop
icebp
and
and
and
repnz
mov
in
fistps
sub
stc
cmpsb
aaa
push
testb
daa
rorb
repnz
notl
or
mov
pause
sub
xchg
add
sub
into
loopne
loopne
pop
stos
cld
sbb
adc
in
mov
shrb
dec
mov
mov
or
mov
js
inc
nop
push
fwait
jne
push
fidivrs
mov
aas
out
push
popa
adc
dec
out
jne
add
and
jge,pt
lods
jecxz
sbb
xlat
or
mov
sahf
xor
and
movsl
test
lret
cmpsl
rcrb
loope
mov
xchg
xchg
or
pusha
adc
fidivl
and
mov
jnp
jbe
inc
mov
std
cmpsb
divps
lretw
out
and
and
pop
in
outsb
dec
jns
pop
jg
js
scas
call
or
cmp
pop
jno
and
sbb
xor
out
adc
sub
pop
lods
pushf
add
leave
rcl
stos
sbb
rolb
in
imul
pusha
shlb
pop
ljmp
mov
leave
sub
mov
add
into
or
mov
sbb
ret
mov
dec
pop
sbb
mov
lcall
mov
test
inc
mov
push
ss
sti
mov
out
cli
aam
sti
push
aas
nop
and
adc
mov
mul
pop
xor
popf
in
mov
jg
push
scas
aam
lret
fildl
xchg
aaa
out
ret
popa
pop
jle
insl
inc
sub
dec
push
outsb
test
push
xor
pop
push
push
sbb
push
dec
aad
lret
xchg
cmp
inc
or
adc
jmp
adc
adc
mov
inc
add
inc
dec
mov
xor
inc
cmp
xchg
sub
icebp
leave
push
push
lret
shlb
addl
ss
loop
mov
xor
push
test
testl
push
fdivrp
xchg
dec
mov
push
out
jle
mov
js
jne
jae
and
cld
and
es
adc
inc
add
xchg
push
xchg
mov
sbb
dec
loope
int3
sub
jmp
sub
ficompl
jge
cmp
and
dec
xlat
pop
outsl
xchg
push
or
xor
dec
ds
sub
imul
pop
cmpsb
add
fldenv
sbb
lods
nop
js
scas
adc
out
pop
insl
xchg
pusha
adc
rorl
cli
out
imulb
and
fdiv
mov
pop
stos
out
sbb
imul
dec
aaa
xchg
in
cwtl
out
lock
push
shll
mov
mov
movsl
xchg
dec
mov
jnp
cmp
pop
in
inc
xchg
js
push
lcall
or
test
xchg
inc
mov
dec
and
pop
xchg
jmp
or
rcl
add
fsts
jle
div
cmp
iret
xchg
out
inc
pop
pop
jae
push
imull
sub
or
in
push
lret
mov
stos
jmp
mov
cmp
inc
lock
enter
ret
mov
cwtl
out
int
cmp
sub
cwtl
add
lods
sub
push
inc
orb
add
fsubl
fcos
jge
out
sbb
cmp
xchg
jle
dec
out
jl
decb
fistl
pop
pop
into
inc
fdivp
int3
mov
lea
bound
mov
xor
sub
pop
cmp
icebp
out
sub
ja
sbb
repnz
fcoms
xchg
inc
and
scas
je
xor
repz
push
lock
nop
rclb
repnz
sbb
bound
in
cmp
mov
icebp
test
mov
add
jb
repz
mov
stc
ja
dec
jnp
jnp
int
jg
sarl
adc
adc
std
out
adc
data16
stos
and
cmpsb
popf
shrb
loopne
fwait
push
int
cmp
push
cmpsl
xchg
mov
xor
push
add
cmp
sub
jbe
and
or
sub
fxch
lret
jp
jnp
fdivrp
or
sub
cld
mov
adc
jnp
mov
in
pusha
or
and
frstor
jp
arpl
xorb
aas
aam
pop
adc
dec
push
cmp
shll
sbb
or
ret
das
jno
insl
daa
outsl
iret
int3
lea
dec
lcall
std
daa
or
stos
xor
jb
push
je
mov
je
fwait
in
mov
jbe
iret
sub
or
shll
xor
sub
inc
inc
mov
data16
and
sbb
push
push
and
testb
xchg
repnz
cmp
ret
jmp
fs
and
mov
ljmp
add
shlb
jg
stc
ficoms
inc
and
lock
rcll
add
and
add
arpl
sub
cmp
enter
icebp
xor
mov
movsb
mov
cmp
mov
cwtl
pushf
stc
xchg
or
inc
add
ss
nop
scas
adc
xor
inc
repz
dec
outsl
sub
enter
push
push
inc
scas
dec
pop
xchg
mov
iretw
cmp
aas
cmpsl
das
adc
pop
jmp
clc
and
push
lds
dec
daa
mov
cli
xchg
add
vmovsldup
pop
inc
pusha
xor
daa
push
jb
stos
ret
jo
test
cmp
jge
addb
dec
addb
xchg
pushf
std
insl
mov
push
mov
fisttpll
mov
hlt
jbe
push
aas
adc
stos
jns
push
and
mov
cmp
jmp
mov
or
cmc
sbb
les
rorb
push
add
je
mov
sub
jnp
sub
xor
iret
push
ja
push
dec
ficoms
daa
add
pop
or
xor
in
cmp
sub
add
sahf
inc
mov
negb
arpl
jns
iret
pop
inc
negl
cmp
js
rorb
outsb
jmp
test
test
mov
mov
adc
sbb
mov
mov
out
loop
movsb
xchg
addr16
addb
and
int
push
lods
pop
loope
push
xchg
jae
pop
push
jg
sbb
idiv
or
mov
insb
push
mov
push
test
jmp
cwtl
pushf
sti
add
push
orl
push
push
repz
cmpsl
pushf
mov
or
sub
daa
sub
aas
ds
mov
xchg
std
dec
pop
mov
cmp
enter
stc
ja
nop
sbb
repnz
or
add
out
pop
or
aam
mov
stc
jbe
mov
lahf
cmp
xor
xlat
ret
push
sub
push
add
cmp
in
sbb
roll
or
sti
pop
pop
sbb
stc
pop
adc
cmp
xlat
jo
js
adc
jg
sub
sahf
scas
push
lahf
iret
hlt
aad
das
adc
icebp
push
out
movsl
in
lcall
jo
pop
inc
cltd
mov
dec
xlat
inc
push
adc
add
sbb
jp
hlt
aad
sub
inc
xor
and
mov
add
push
sbb
mov
rcll
xor
xchg
lock
cli
mov
outsb
loop
das
fnstenv
into
test
pop
push
int
sub
push
pop
in
imul
cs
add
xchg
mov
cmp
mov
aam
adc
xor
aas
rclb
xor
xchg
repz
aas
dec
xchg
addl
jl
mov
lods
popf
mov
fwait
dec
loop
jecxz
js
mov
mov
outsl
and
mov
dec
int
xchg
sahf
dec
clc
push
aad
repz
jmp
out
or
mov
pop
xor
outsb
data16
cli
icebp
mov
push
mov
sti
nop
popa
jno
push
pop
mov
sar
xor
jp
jl
pop
pop
jmp
repnz
stos
pop
mov
push
bound
cmp
stos
adcb
mov
and
mov
mov
mov
adc
aas
add
inc
pop
push
sub
pop
in
cmp
cmp
or
mov
sahf
mov
in
push
xchg
or
adc
jae
push
stos
push
mov
arpl
addr16
loope
adc
dec
lock
std
jne
stc
aad
shl
push
gs
clc
out
notb
neg
les
aas
in
push
jp
int3
mov
call
and
cmp
jmp
cmpsb
adc
xchg
outsl
fs
inc
or
ret
cmpsb
push
sbb
popf
pop
pop
and
and
ror
pop
dec
mov
daa
dec
sbb
dec
in
pop
and
or
mov
dec
mov
lock
jecxz
insl
xchg
loope
inc
test
in
pop
arpl
xchg
or
jl
loopne
out
inc
xorl
imulb
fstpl
movb
jmp
pop
sbb
xor
ret
cltd
popf
ss
lret
outsb
loopne
cmpsl
testl
es
push
mov
mov
lcall
lret
or
jno
adc
into
bnd
cmp
scas
jns
add
inc
add
jns
jl
out
fcomp
sbb
shrb
adc
cmc
sub
and
mov
out
lahf
jnp
orb
xchg
xchg
pop
cmp
adc
test
test
xlat
push
lods
les
cli
hlt
xchg
push
clc
xchg
xor
sub
cmp
cmp
pop
das
cs
jle
imulb
fdivrs
mov
test
jne
jo
pop
fistps
jmp
pop
repz
xchg
les
jo
dec
in
sbb
shll
fwait
xor
sbb
adc
fidivrs
adc
add
sarl
adc
push
xor
ljmp
xor
dec
int3
test
adc
push
push
outsl
pop
dec
int3
ljmp
xor
les
pop
push
paddsw
lret
ret
push
in
jl
ret
pop
dec
jmp
mov
sub
adc
fsubr
add
jno
cmp
mov
mov
add
push
mov
push
pop
inc
mov
cld
fs
movsb
ds
mov
cmp
outsb
push
subl
or
pop
fs
xchg
fidivl
les
enter
xchg
mov
mov
mov
inc
lret
mov
ss
xchg
xchg
xor
insl
xor
in
mov
add
insb
sub
ffree
lods
das
sbb
pushf
int3
push
xor
iret
and
scas
cmc
shr
inc
xlat
jg
jae
mov
cmp
mov
jp
test
jmp
int
rcll
rep
imul
pop
sahf
clc
pop
xor
adc
xor
repnz
cmpb
jmp
mov
cmc
test
xor
and
into
cmpsl
lods
mov
sbb
lods
jno
adc
mov
enter
mov
sub
sub
cltd
enter
inc
mov
sub
jnp,pt
stos
dec
hlt
fldl
mov
aas
cmp
xchg
xor
test
sbb
push
jbe
ja
mov
imul
das
stc
dec
pop
xor
xlat
inc
std
lds
out
std
lods
adcb
in
cwtl
clc
and
xor
push
inc
or
pop
cltd
sar
out
les
add
pop
add
sub
repnz
sar
add
jbe
into
pushf
push
scas
dec
into
push
xchg
inc
push
rorb
adc
aaa
xchg
jno
xchg
xor
and
idivl
jns
mov
push
aad
add
push
or
aam
xor
or
sub
pop
loope
aas
add
sub
ds
xor
xor
push
loopne
les
and
mov
sbb
xchg
xchg
mov
xchg
fs
push
mov
pop
imul
mov
stos
test
jne
and
movsl
js
push
add
pusha
push
push
cmpsl
cmp
pop
std
inc
enter
mov
out
inc
mov
sbb
adc
mov
cld
cmpsb
push
repz
mov
and
bnd
cli
popa
inc
jg
lock
or
loope
add
cmp
in
xchg
and
pop
dec
test
mov
jb
call
jbe
popa
stc
and
sub
out
insl
lret
negl
adc
in
lods
and
jl
test
movsl
je
cmp
mov
inc
imull
jnp
scas
mov
imul
mov
pop
js
js
mov
add
cmp
jbe
shrl
jne
jae
mov
dec
mov
int
adc
xor
push
out
mull
sbb
adc
cs
xchg
mov
stos
cmp
push
sahf
insl
incb
xlat
in
mov
xor
in
push
sbb
xchg
gs
cmp
das
jl
or
icebp
imul
jg
int3
jecxz
into
push
sbb
aad
push
push
mov
push
mov
add
dec
inc
lret
jo
adc
cmp
pusha
inc
add
ret
int3
pop
pop
sahf
out
xchg
jl
cmp
mov
ret
xchg
add
scas
in
xchg
push
ret
nop
gs
std
cmpsb
mov
shll
jge
dec
cmp
loopnew
pop
hlt
jmp
jmp
lret
mov
xorb
adc
add
or
xchg
les
xor
out
pusha
sub
jns
mov
mov
lret
insl
popf
shrl
icebp
adc
mov
cs
xchg
mov
xor
shlb
cwtl
idivb
jb
je
push
push
loop
and
loope
and
out
movsl
adc
mov
or
cmp
xchg
lea
dec
add
aas
divb
call
xor
stos
xchg
pop
cmp
aad
les
je
add
cmp
aaa
cmc
mov
jmp
push
shll
sbb
sbb
sub
mov
test
icebp
mov
pusha
mov
inc
mov
sar
or
dec
and
mov
daa
push
jb
dec
adc
add
hlt
je
jnp
stos
jg
icebp
dec
dec
push
xchg
rorb
xchg
leave
adc
dec
pop
js
push
fisubrl
cs
loopew
mov
add
test
mov
shrl
push
test
add
cwtl
std
adc
push
xor
jns
movl
mov
mov
mov
leave
faddp
xlat
in
jae
adc
or
sub
sub
lock
jge
mov
add
push
xor
test
mov
xor
sub
jno
or
or
mov
xor
cmpsb
imul
dec
lods
imul
push
lock
popf
xorl
int3
add
pop
mov
push
fimull
cmp
dec
sub
pop
push
dec
sub
adcl
mov
jnp
arpl
and
inc
fwait
adc
mov
arpl
jg
into
int
arpl
push
fsubs
lret
test
subl
sub
cwtl
push
enter
xor
es
popf
and
sbb
pop
adc
add
lock
adc
dec
sbb
adc
imul
insl
orl
jecxz
jo
loopne
mov
pop
loop
xor
std
xor
popf
sub
les
dec
sbb
data16
orl
or
popf
scas
pop
mov
add
fwait
sti
sbbl
mov
inc
addr16
lock
insl
mov
cwtl
notb
and
jp
cli
add
sarl
or
push
movsl
or
dec
pop
push
adc
add
int
lods
or
sahf
jo
rcrb
ret
cmp
cld
cmp
cmp
add
xchg
and
neg
dec
outsl
pusha
lea
mov
int3
xchg
aaa
fstcw
es
pop
sbb
sbb
je
ffreep
pusha
outsb
or
cs
mov
outsb
daa
cmp
mov
sub
pop
inc
xchg
cmc
xchg
cmp
std
push
push
adc
in
dec
dec
lcall
cli
cmp
lds
push
clc
movzwl
pop
jb
dec
lds
lret
mov
mov
jbe
push
push
adc
outsb
xchg
arpl
cmc
inc
mov
mov
adc
sub
and
cmp
inc
adc
add
mov
xor
jg
add
cmpl
mov
jbe
mov
mov
mov
xor
add
lcall
pop
jno
movsl
stc
or
xchg
outsb
lret
mov
jg
ret
adc
cwtl
sub
xchg
pop
mov
inc
gs
mov
subb
dec
sarl
mov
xchg
and
int
jg
mov
xchg
insl
cmp
xchg
xchg
mov
sti
loop
jb
mov
dec
mov
leave
xchg
adc
inc
out
leave
stos
cmp
scas
mov
mov
mov
mov
jnp
ret
sahf
movsb
imul
ret
out
es
sub
cmpl
xor
testl
mov
je
sub
inc
push
jb
stos
pop
mov
push
das
mov
in
dec
outsl
lret
out
out
xor
in
pop
mov
cltd
dec
sbb
push
in
jle
ret
repz
std
jle
loope
mov
into
and
add
pop
add
shll
xchg
xchg
rol
pop
scas
ss
sbb
test
hlt
rorb
nop
sub
lock
leave
adc
and
jns
push
xchg
inc
ja
dec
push
insw
aas
fwait
ret
adc
dec
stos
outsl
sahf
out
push
ret
imul
frstor
decl
cmp
lea
jp
jne
dec
aam
jecxz
into
dec
mov
pop
push
fxch
loop
loopne
jb
jns
test
and
clc
inc
or
jmp
insb
sub
data16
enter
push
repnz
mov
sbb
inc
lcall
dec
push
add
xchg
push
add
jne
cmp
cltd
pop
subl
mov
push
dec
cmpsl
bnd
sbb
xor
fstps
mov
pop
mov
add
daa
mov
fwait
mov
sub
fwait
addr16
xchg
or
test
imul
incl
cmp
or
add
nop
mov
std
aaa
push
pusha
ljmp
shrl
bound
prefetch
inc
js
sbb
test
popf
fsubrl
arpl
je
sub
jl
lret
mov
shlb
mov
imul
roll
outsl
xor
ficompl
int
mov
in
aas
setb
inc
cmp
jae
jecxz
push
push
dec
push
hlt
outsl
pop
fsts
dec
mov
push
jmp
mov
leave
xchg
subb
in
lock
adc
daa
jl
push
pop
push
stos
fisttpl
negb
pushw
out
or
and
or
aaa
dec
movsl
xchg
rorb
jp
fiadds
inc
mov
inc
out
stos
and
loopne
jmp
and
xchg
aas
cmp
stos
add
cmc
into
jns
lret
mov
aam
mov
int3
add
pop
inc
fcomps
cmc
jne
iret
cld
cmp
int
mov
inc
inc
insl
mov
lds
jno
push
stos
mov
popa
shrl
lods
ret
in
sarl
fs
bound
jae
fsubrl
imul
xor
push
cmc
sti
cmp
jnp
inc
adc
test
mov
sarl
xor
or
iret
pop
movsl
ffreep
push
inc
addr16
xor
sub
pushf
lret
mov
mov
popf
adc
jg
clc
xchg
mov
out
pop
mov
ds
sbb
sbb
cmp
popf
push
out
adcb
insl
dec
pop
cmp
jns
cmp
icebp
push
inc
xchg
inc
jns
imul
cmp
jg
call
ss
fistpll
int
inc
call
xor
xchg
jb
jo
adc
or
cmp
mov
jmp
cs
mov
xor
push
fists
mov
xor
fisttps
xchg
jmp
xchg
xor
push
repz
jge
and
and
mov
pushf
add
inc
fwait
sbb
aad
bound
movsb
in
pop
mov
or
fidivs
in
sub
rcll
adc
rcll
cld
or
sbb
mov
stos
push
scas
out
and
mov
or
scas
or
out
add
ja
cmp
sti
stos
mov
mov
inc
imul
lock
cltd
fwait
lea
sbb
cmp
rcrl
stc
or
sti
xchg
push
subb
iret
mov
add
imul
testb
or
leave
in
fnstcw
jbe
cld
sahf
or
adc
mov
icebp
pop
mov
and
ljmp
xchg
insl
add
mov
dec
mov
jg
aas
mov
in
in
pushf
push
shlb
push
addl
cmp
push
push
jecxz
pop
sub
xchg
sub
stos
mov
xor
xchg
popf
test
stos
das
in
insb
xchg
sahf
xchg
clc
lret
sbb
aad
mov
ret
pop
adc
or
dec
call
adc
aad
xor
out
sub
ret
xor
pop
es
ret
jne
cvttps2pi
mov
cmpsb
test
dec
sub
and
inc
fisttps
mov
call
cmp
xor
jmp
aaa
cltd
scas
jns
jecxz
sub
mov
inc
in
outsl
dec
imul
mov
repz
xor
lret
or
dec
lcall
fdiv
fldt
stos
xchg
xchg
xchg
stos
push
in
push
and
sbb
or
nop
test
and
into
sub
xor
push
and
mov
xchg
mov
int3
xor
or
mov
jnp
jge
cmp
xor
add
xchg
mov
stos
stos
jmp
lods
jb
bound
sbb
iret
mov
test
dec
mov
and
nop
mov
int
push
cmp
out
jnp
test
stc
add
dec
loopne
sbb
cmc
in
dec
jns
clc
add
dec
mov
xchg
sub
sbb
pop
mov
pop
dec
sub
push
jmp
jg
push
cld
and
mov
cwtl
cmp
ljmp
mov
pop
dec
or
lods
out
in
xor
ja
and
dec
xchg
lds
pop
and
and
push
mov
mov
add
lock
sarl
movsb
jne
mov
movsl
in
fcompl
sbb
mov
addr16
mov
pop
jge
push
sub
or
mov
sub
sbb
lahf
pushw
push
and
outsl
mov
daa
or
push
xor
cmpsb
mul
fsubrs
mov
xor
xchg
int
shll
mov
mov
xchg
push
leave
mov
imul
subb
cmpsl
leave
iret
flds
movsb
and
fnstsw
or
push
xor
and
nop
and
ficoms
xchg
test
shll
test
dec
cmp
and
adc
aam
pop
test
lea
mov
enter
int
push
xor
inc
outsb
mov
aad
and
outsb
mov
sub
fstl
and
stc
dec
pop
mov
in
ss
fisttps
pmaddwd
fdivl
stos
lds
mov
mov
push
int
add
add
sub
jmp
mov
orb
pop
mov
add
pop
add
push
pushf
test
idivb
inc
stos
movsb
xchg
push
ja
adc
jne
dec
sbb
lods
mov
pop
aas
cmp
test
xor
xchg
lods
dec
and
insl
sub
mov
xlat
mov
push
dec
cmp
test
imul
icebp
sbb
in
push
xor
pop
jmp
adc
push
sbb
add
hlt
rorl
push
mov
cld
xlat
and
xchg
addr16
push
or
mov
add
adc
jle
pop
shl
pop
cmp
push
aaa
mov
and
ss
pushf
inc
push
loopne
pop
mov
in
cmp
cltd
cmp
sub
mov
lret
and
test
add
sbb
aad
test
clc
in
js
push
test
ss
xor
add
imul
in
mov
js
push
shll
pop
mov
jne
mov
mov
in
xor
in
mov
rclb
dec
fs
in
pushf
push
mov
mov
cmp
push
mov
negb
jb
rcrl
mov
cmp
loop
outsb
lock
inc
xlat
filds
or
sub
call
aad
lock
push
fs
aas
inc
pushf
ds
jl
xchg
pop
add
inc
xor
mov
rcl
mov
addl
in
pusha
jae
mov
mov
or
lahf
dec
cmp
mov
inc
lahf
cmc
stos
or
int
sbb
out
jp
or
and
movsl
and
adc
or
adc
stos
jns
dec
mov
mov
pushf
mov
test
test
cmp
out
clc
ficompl
std
out
push
push
cmpsl
sbb
inc
sub
and
adc
movsl
cmp
or
pop
sbb
ror
and
add
fdivl
adc
push
xor
push
or
je
xchg
jae
out
out
mov
sub
aam
mov
xchg
sub
aam
mov
sti
or
adc
xor
vmread
std
sahf
insb
test
jae
xchg
fistpll
jbe
or
testl
inc
ss
aad
int3
cmp
add
sub
pop
xchg
xchg
cwtl
jno
xor
imul
fidivs
xchg
push
jno
cmp
mov
hlt
mov
or
push
scas
pop
pop
add
pop
in
pop
xchg
push
sub
mov
insl
or
cmp
pusha
mov
sub
inc
cmp
pop
or
adc
dec
cmp
fsts
xor
cmp
jle
negb
mov
jo
mov
mov
push
push
sbb
es
push
imul
mov
inc
or
jbe
pop
lret
sbb
out
jae
lea
push
loope
pop
fidivrl
or
clc
repnz
push
push
xlat
in
or
jg
xor
frstor
ds
test
dec
pop
ss
push
or
in
loope
or
push
sub
and
push
pop
push
cmp
mov
mov
jmp
push
sbb
scas
mov
popa
leave
enter
xor
xchg
xor
jle
mov
inc
popf
out
aad
sbb
ja
pop
mov
pop
test
mov
sub
rolb
stc
inc
das
mov
test
clc
or
insb
repz
sub
dec
aad
lds
mulb
hlt
enter
adc
out
cmp
rcrb
pusha
adc
xchg
mov
fstpl
cli
fwait
add
gs
pusha
jge
xor
push
xchg
sub
addr16
mov
mov
scas
pusha
ret
inc
addr16
pop
push
ficoms
pop
pop
push
and
jns
xchg
and
ja
loopne
arpl
addr16
mov
std
mov
pop
adc
in
ret
inc
xchg
jg
out
movsl
cmpsb
xbegin
je
xor
lea
and
imul
push
pop
mov
push
lret
outsl
lgs
icebp
dec
jne
idivb
inc
cmp
fwait
push
mov
adc
lret
or
xor
jg
ljmp
ja
nop
cmp
sub
daa
jae
and
iret
cmp
fs
in
mov
fstpl
or
push
jecxz
xchg
jo
add
daa
jbe
ret
xchg
inc
out
and
mov
ja
outsl
outsl
adc
cmp
mov
push
lods
jge
adc
jl
jmp
in
pop
jb
repnz
mov
jecxz
in
mov
faddl
mov
and
inc
xor
cld
ret
call
push
dec
pop
ret
dec
popf
cli
sbb
push
mov
jns
inc
test
xor
adc
loope
adcb
scas
inc
xchg
sub
cld
fpatan
dec
scas
mov
pop
xchg
jmp
cltd
mov
or
or
sbb
lds
js
cmp
xor
mov
push
or
cwtl
xchg
and
fwait
cld
jnp
imul
icebp
push
out
xchg
loop
cmp
popf
cwtl
inc
scas
xor
and
les
pop
test
popf
outsl
cli
push
lret
popa
rcrl
outsl
addr16
mov
xchg
in
pop
daa
mov
loop
dec
fmull
jmp
lret
ss
pop
int3
dec
cltd
pop
sbb
pop
outsb
imul
jae
test
aaa
rcl
cli
stos
jp
test
jno
adc
xor
sbb
test
jmp
pop
sub
xchg
cmp
or
pop
mov
inc
gs
ficoml
outsb
push
jmp
push
out
add
mov
clc
ljmp
pop
les
cwtl
test
jno
cmpsb
jne
jbe
jne
cmp
jbe
test
mov
pop
pop
jnp
out
mov
loope
lcall
fisubrs
sub
pop
je
sbb
icebp
add
mov
add
das
inc
ror
mov
sbb
test
mov
std
pop
incl
std
mov
pushf
push
push
std
aad
enter
out
pushl
cli
insl
add
jbe
int
xor
mov
or
pop
and
push
xchg
xor
mov
cmp
xchg
sbb
xchg
dec
idiv
sahf
out
or
sbb
mov
imul
add
insl
out
rorl
push
push
sbb
fsts
and
pop
pop
stc
inc
lret
xchg
add
add
dec
adc
mov
adc
xchg
jp
mov
fdivrl
movsb
jecxz
addr16
sub
add
cmp
popa
mov
jbe
inc
jg
les
out
outsb
add
mov
icebp
mov
xchg
not
inc
inc
sbb
mov
test
xor
jecxz
push
lcall
push
ljmp
or
pop
inc
push
jecxz
mov
dec
dec
cwtl
or
andl
inc
in
or
pop
sbb
push
cmpsl
xchg
sbb
jns
pop
pushf
std
hlt
nop
ret
inc
or
xor
popa
ja
add
lea
fcompl
or
and
int3
dec
jae
mov
jp
sub
adc
cmp
push
loopne
mov
inc
push
imul
fcompl
mov
aam
xor
mov
mov
xchg
or
push
stc
lahf
out
clc
cmc
fcomi
popa
mov
lds
aam
jnp
arpl
cmp
pop
xor
ret
js
mov
lods
loop
cmpsl
dec
xlat
fisttpl
stos
shlb
nop
inc
sahf
lret
mov
sbb
ljmp
repz
rcll
pushl
cld
pop
lods
cli
pop
xor
fisubs
push
and
nop
mov
mov
outsb
aad
rcrb
pop
aas
mov
add
in
cmp
mov
in
negl
mov
xor
out
adc
push
push
add
xchg
adc
dec
lods
add
mov
xchg
mov
ds
sarl
in
and
cmp
es
push
pop
loope
mov
adc
mov
xchg
pop
sub
test
pop
sbb
xchg
movsb
test
cmc
outsl
mov
cld
or
or
mov
or
cld
ja
xor
mov
cmp
mov
mov
pop
adc
fisubl
cmp
cld
dec
jge
jecxz
pushf
add
mov
sbb
mov
mov
add
fs
jb
scas
test
adc
test
cs
push
lret
mov
add
or
xor
repnz
mov
xchg
push
add
xchg
repz
lods
addr16
mov
push
sbb
shrl
ljmp
mov
xor
test
push
cmp
jle
cmpsb
cmp
mov
rcr
and
add
inc
jno
inc
mov
dec
test
push
movsl
adc
out
push
test
inc
pop
hlt
cmp
call
jl
jle
sbb
aam
fstpl
movsl
rclb
lcall
mov
das
ffree
dec
or
cmp
inc
test
cmp
dec
add
ficoms
hlt
mov
sbb
test
mov
fistpl
inc
mov
pusha
lods
leave
cmp
stos
pushf
fbld
cmp
mov
cmp
nop
fists
pop
mov
mov
fcoms
iret
mov
jle
dec
mov
xor
in
aad
mov
push
hlt
mov
gs
cld
mov
cmp
out
sahf
mov
data16
cmpsl
mov
xor
mov
push
add
out
cmp
dec
fistl
aam
xchg
rcrb
pop
inc
ljmp
dec
mov
stc
ret
lret
pop
lds
mov
sbb
test
rorb
fldl
mov
push
push
cmp
pop
popa
adc
lret
push
movsb
test
enter
outsl
jecxz
fs
jmp
push
mov
clc
stos
mov
in
cmp
sbb
testb
push
enter
push
sbb
mov
fs
add
shll
sub
jmp
add
cltd
mov
adc
sub
cmp
sub
lock
xchg
sbb
push
scas
arpl
xchg
dec
pop
lds
xchg
stos
enter
mov
sub
jo
inc
aad
je
dec
or
or
out
insl
dec
lahf
lea
xor
xchg
test
cmp
fidivrs
gs
xor
dec
inc
cmc
lds
fisttps
inc
fs
adc
out
jnp
mov
loope
js
or
push
inc
push
inc
dec
cmp
mov
js
jmp
mov
inc
push
hlt
lea
sbb
mov
push
cli
cmp
ret
je
xchg
pop
jno
dec
je
add
xchg
dec
aaa
jae
jmp
pop
jbe
cmpsl
ffreep
jle
jns
insb
add
daa
push
or
call
xchg
mov
inc
sbb
pop
cli
dec
shlb
mov
and
fsubs
pop
jne
push
imul
cmpsb
icebp
mov
into
inc
push
mov
bound
dec
sar
testb
mov
sbbl
int
jecxz
fstps
jnp
stc
ret
mov
addr16
shll
inc
cmp
adc
push
rclb
daa
sbb
outsb
jg
in
fstps
dec
inc
xchg
mov
jb,pn
loopne
imul
in
ret
mov
movsb
mov
outsl
aad
cmp
mov
enter
cmp
mov
dec
sbb
sbb
mov
les
jnp
subb
outsb
and
push
incb
lret
pop
clc
mov
lods
pop
lret
push
sbb
lcall
inc
xor
dec
push
aam
sub
addr16
xchg
adc
loop
out
push
pop
cmp
jmp
xchg
jae
lea
and
sub
imul
insb
push
outsl
pop
xchg
repnz
addr16
loope
xor
shlb
lea
insl
sub
into
fwait
div
enter
mov
fdivr
ret
in
popa
xchg
sbb
sub
dec
fnstenv
dec
cmpsl
aad
add
gs
scas
aad
jle
mov
cld
aaa
jle
xchg
push
std
add
les
cmp
lret
divl
pop
push
push
in
adc
sub
mov
jbe
in
hlt
jg
cmp
out
xchg
icebp
mov
out
aad
adc
add
and
add
rcrl
inc
fmull
jecxz
jno
adc
packsswb
jmp
xor
sbb
outsb
mov
in
mov
cmp
dec
inc
push
lret
cmc
adc
dec
push
mov
xchg
insl
mov
jb
xor
int3
clc
rcl
jge
and
outsl
std
mov
pop
fnsave
cmp
fucomp
das
arpl
jb
loope
mov
mov
push
std
cmpsb
test
jg
popl
cmp
test
adc
sub
out
movsb
mov
xor
ljmp
pop
jno
mov
subb
repnz
pusha
xchg
xchg
mov
push
nop
outsb
sub
pusha
testb
out
adcb
push
orb
leave
jno
insb
rolb
sbb
pop
push
mov
rcrb
cmp
xchg
sbb
inc
mov
sahf
das
add
cld
xchg
cmp
stc
add
aam
or
pop
xor
jb
jb
in
sub
xor
pop
inc
testb
add
test
mov
pop
movl
fwait
enter
gs
jbe
inc
xchg
mov
jecxz
cs
xchg
cmpb
fwait
cmpsl
mov
int3
mov
sub
and
test
mov
mov
js
xchg
pop
sbb
mov
fs
insb
xor
sub
cs
pop
adc
sbb
jecxz
ret
inc
push
mov
outsb
push
pusha
sti
cmc
loopne
or
xchg
xorb
pop
call
xor
push
mov
jbe
in
iret
push
cli
inc
and
push
mov
pushf
xchg
xor
arpl
inc
dec
out
push
add
add
cs
fisttpl
cmc
xorb
dec
test
inc
out
sar
dec
fsubrp
mov
iret
lahf
int3
or
pusha
xlat
test
jns
xchg
adc
adc
add
fildll
push
xlat
and
cli
enter
push
mov
and
rcrb
scas
xchg
ficompl
pop
xchg
pusha
inc
imul
popf
push
lret
pop
xchg
shll
stos
push
push
or
jne
jb
push
insl
jo
and
inc
and
push
xor
mov
lahf
in
mov
outsl
ja
rolb
cmpsb
xchg
xchg
test
xchg
jge
pop
das
lock
jbe
adc
mov
mov
jnp
fadds
xor
das
sub
insb
lret
cmp
push
xor
mov
sub
inc
dec
test
bound
pop
scas
cli
push
les
xor
fisubrl
mov
push
inc
or
xor
push
dec
dec
xor
jnp
mov
adc
sub
loop
dec
inc
enter
jo
movsb
push
and
cmpl
pusha
sub
inc
pop
fidivrs
xchg
lcall
cmpsl
pop
imul
pop
into
xor
adc
pcmpeqd
out
test
jmp
sub
in
out
jle
xchg
add
pop
shrl
ds
adcl
pop
fcmovnbe
mov
push
lret
push
xchg
add
cli
lahf
and
and
imulb
clc
stc
or
lahf
pop
ja
pop
fildll
xor
mov
adc
and
mov
test
dec
shr
push
hlt
pop
and
sbb
adc
mov
rorb
dec
cmc
jb
insl
cld
stos
xchg
lock
in
lock
in
xchg
xor
es
cmp
jg
adc
lret
mov
mov
out
mov
fmuls
iret
push
imul
xchg
add
lods
xchg
cmpsl
mov
test
test
ficoms
insb
xor
stos
jle
jge
cs
and
or
inc
mov
in
lret
inc
mov
cmp
xor
sub
xor
shlb
inc
shll
sub
mov
pop
sti
les
mov
movsl
jns
add
in
xor
pop
push
leave
sbb
loope
jnp
pop
outsb
mov
mov
mov
cmc
push
mov
scas
dec
push
or
dec
cmp
sbb
and
mov
repz
pop
bound
aas
aam
jl
mov
xchg
pop
call
jg
push
mov
jb
stos
xchg
lods
loopne
sbb
sbb
jg
xchg
aad
dec
xor
dec
fcom
adc
mov
mov
dec
cwtl
and
jecxz
lods
xor
stos
icebp
and
dec
je
mov
cmpb
xchg
xchg
xchg
aaa
enter
mov
iret
ret
lds
cmp
lds
sahf
push
sbbl
aas
fisttps
leave
push
in
dec
sti
testb
mov
movsb
aam
aas
cmc
stos
and
test
notl
aaa
enter
shrl
and
fiadds
dec
aam
jae
cmpsl
addb
or
push
or
ficompl
enter
jo
dec
in
sarl
dec
pop
adc
dec
insl
mov
inc
cmp
push
pop
sub
xchg
out
jmp
push
mov
ds
je
or
mov
std
or
aad
mov
inc
jmp
and
test
adc
in
sti
int
adc
in
movsb
not
add
push
test
sub
dec
out
iret
lods
pop
jmp
inc
movsl
push
mov
mov
mov
and
jp
and
xor
cmp
or
mov
jb
fxch
and
scas
in
subl
pop
push
rorl
jbe
jne
leave
sub
jmp
cltd
sete
pop
pusha
lock
xor
or
mov
out
xchg
outsl
loopne
enter
je
mov
or
mov
dec
in
imul
ret
or
cmp
test
out
jne
sub
cmp
sub
out
rcl
cltd
cmp
xor
xchg
push
loopne
mov
aaa
xchg
mov
fs
mov
out
jl
outsl
js
push
pop
adc
outsb
pushf
adc
pop
aam
mov
or
aam
mov
lret
pusha
faddl
mov
out
das
adc
jl
and
cld
inc
lea
cmpsb
inc
cmpsb
cwtl
mov
add
bt
inc
dec
xchg
rcrb
push
jmp
ret
loopne
jb
or
sub
adc
das
les
inc
ret
mov
adc
sarl
or
into
lods
out
add
jnp
es
in
or
pop
out
mov
mov
adc
add
add
loopne
mov
aas
stos
in
cmpsl
test
mov
pop
add
jmp
test
pop
dec
dec
gs
mov
inc
push
adc
fdivrs
pop
fstl
adc
loope
add
or
mov
xor
mov
inc
adc
lods
scas
js
pop
daa
gs
loop
mov
sbb
imul
stos
lret
jbe
and
rcrb
scas
shlb
out
xor
push
pop
scas
int3
out
jnp
xchg
mov
es
jge
lret
inc
adc
loopne
mov
cmp
inc
pop
test
xor
and
cltd
inc
ss
test
std
cmpsl
movsb
xor
lea
push
push
push
cmpsb
aam
lcall
cmp
hlt
xchg
jo
dec
das
pop
push
or
fnstcw
imul
mov
jge
pop
xchg
inc
mov
add
mov
dec
xor
jnp
gs
bound
out
jne
notb
ja
sbb
movsl
sbb
mov
dec
mov
jge
push
ficomps
stos
xlat
pop
push
inc
dec
imul
mov
xchg
sub
cmc
enter
mov
push
and
call
stc
sub
jle
lret
cld
les
mov
lret
repnz
pop
sbb
add
orb
bound
sbb
sub
or
push
push
mov
arpl
adc
out
mov
nop
inc
je
cmpl
lahf
jno
dec
cmp
imulw
inc
and
pop
sub
xchg
xchg
jno
sti
idivl
shrl
cmpsb
cltd
or
mov
xchg
mov
mov
push
in
inc
fadds
enter
in
arpl
pop
ss
dec
mov
push
adc
repz
addr16
lahf
pushl
pop
xchg
subl
adcl
jb
rcl
jbe
add
insl
xchg
rorb
sbb
and
das
icebp
inc
mov
and
popf
ja
stos
dec
stos
mov
fcomi
rorb
jl
mov
ficomps
ret
push
pusha
test
dec
inc
fs
xor
adc
or
pusha
mov
dec
sbb
rcrl
sub
ljmp
pop
sahf
es
mov
pop
shl
ja
sbb
adc
mov
or
dec
insl
mov
nop
mov
decl
or
sub
rcll
adc
xchg
ss
jo
out
xchg
lods
push
loopne
pop
dec
lahf
leave
xor
pop
fistpll
sbb
xor
pop
sbb
or
inc
inc
and
es
loopne
mov
fwait
sbb
inc
xorl
in
ljmp
adc
cmp
vsqrtpd
jmp
cmpsb
inc
imulb
arpl
repz
xchg
mov
testl
xchg
add
cmpsb
pop
mov
pop
int3
add
sub
xlat
lret
dec
ljmp
je
notb
les
cmp
std
mov
idivb
cmpsl
dec
or
outsl
sarb
insb
inc
mov
mov
imul
outsl
fwait
into
or
fwait
cs
cmp
xchg
fldz
outsb
das
and
lods
mov
mov
lcall
dec
fisttpl
nop
loope
out
and
lds
int
insb
mov
cmpsb
xor
pop
loopne
insl
ja
stos
dec
add
or
adc
movsb
cli
enter
adc
lock
mov
not
adc
inc
sub
cwtl
orl
aaa
mov
push
call
cmp
rorb
cld
mov
mov
and
sbb
int3
pop
or
lahf
pop
filds
jo
or
jle
ljmp
add
mov
mov
lret
cli
inc
lcall
xor
sub
sbb
push
mov
fimuls
push
test
sub
sub
xorb
in
and
mov
mov
call
mov
pop
fs
adc
push
mov
mov
xchg
mov
jns
xchg
loope
sbb
outsl
sbbl
push
stos
sti
loope
mov
cmp
pop
push
inc
or
test
pushf
sub
sub
jno
xor
jno
sub
aad
pop
xchg
mov
jnp
sub
adc
idiv
jo
cmp
jnp
xchg
out
or
mov
inc
jl
scas
in
in
add
int3
mov
jmp
push
aas
pop
mov
roll
lcall
in
mov
jge
xchg
xor
fsubrl
aas
xor
clc
sub
inc
push
sbb
daa
cmpb
inc
push
push
out
adc
outsl
mov
movsl
scas
and
sub
xor
std
outsb
mov
inc
test
popf
rcl
sbb
adc
mov
data16
xor
add
shrl
jmp
mov
xchg
cmpsl
fisttpll
cmp
jae
shll
call
sahf
xlat
in
add
cwtl
xchg
sub
cmp
inc
pop
xchg
in
xor
sub
sarl
dec
or
es
sbb
and
andl
add
or
int
imul
loop
jmp
repnz
pop
inc
sbb
cltd
push
out
ss
mov
outsb
jecxz
sbb
cmp
push
rcrb
call
loope
cmpsb
outsl
push
comiss
sub
mov
ss
push
xor
mov
imul
ja
ljmp
das
loope
jbe
xchg
rol
fucomp
push
cld
inc
jae
sub
cmp
jle
mov
shl
pop
orl
mov
adc
jl
ljmp
in
dec
push
loopne
movsl
add
xbegin
rorb
pop
add
pop
and
lods
pop
xchg
mov
mov
je
incl
and
ljmp
sti
adc
movsb
pop
cmp
rclb
sub
xor
test
push
xchg
mov
leave
in
cwtl
sub
mov
add
pop
test
popa
ficompl
cmp
insl
pop
lock
data16
adc
mov
fdivrl
or
shlb
jne
dec
in
xchg
add
sub
xchg
cmp
adc
xor
add
mov
jns
mov
lods
cmp
add
push
fs
rcr
xor
cli
cmp
xor
ud0
sbb
sbb
xchg
push
ds
ljmp
adc
inc
inc
dec
sub
mov
xlat
mov
rcrb
pop
jmp
pop
add
roll
jg
aad
test
ficoms
dec
bswap
cmp
out
push
xor
int3
or
mov
imul
jl
and
into
sbb
insb
loope,pn
sub
loop
ret
jge
pop
fisubs
dec
mov
xchg
ret
pop
xlat
pop
xor
ss
fmul
mov
inc
mov
std
mov
jne
pusha
mov
mov
outsb
pop
xor
sub
fisttpll
mov
inc
inc
jb
push
xor
push
test
nop
gs
out
inc
ret
pop
sbb
sbbb
add
ret
sti
mov
lret
xor
add
and
loopne
xchg
mov
iret
cmp
cwtl
jmp
mov
inc
inc
test
xchg
push
jge
dec
int
sbb
jo
xor
das
mov
xor
in
in
mov
mov
cmpsb
mov
testb
pop
mov
data16
push
movsb
pop
inc
xchg
cmp
scas
inc
fsubs
xchg
push
mov
lds
out
mov
jmp
mov
test
movl
dec
pop
loop
int3
outsb
xor
into
mov
stos
ljmp
sub
popa
jmp
ja
inc
es
mov
loop
repz
push
add
dec
jbe
jecxz
sahf
jmp
mov
cmp
and
mov
mov
enter
push
in
sbb
jecxz
test
xor
mov
leave
adc
popf
scas
xlat
adc
popa
and
in
ret
mov
scas
sahf
sub
sbb
sub
or
jne
aas
fwait
inc
xor
xchg
inc
outsl
popa
inc
push
or
sub
mov
js
mov
xor
rorb
cmp
rcll
mov
call
sti
testb
dec
xchg
mov
push
pop
sub
sub
cmpb
dec
pusha
js
test
add
jne
cmp
clc
mov
dec
sbb
shll
frstor
jmp
cmp
cmpsb
dec
lcall
pop
push
pop
roll
pop
rorb
fsts
mov
repnz
mov
and
ds
and
ret
inc
xchg
mov
mov
icebp
enter
add
sbb
mov
adc
imul
mov
sub
mov
adc
dec
testl
xor
push
repz
jmp
mov
sbbl
fisttpll
es
pop
cmc
sub
xor
movsb
add
push
out
add
jns
stos
push
xchg
ss
sti
cmpsb
pop
dec
test
aam
add
or
outsl
shrl
fidivs
and
mov
jo
fisubs
pop
jp
scas
loop
sub
out
and
dec
push
fcompl
inc
pushf
bound
scas
imul
sbb
iret
push
push
xor
xor
cltd
xor
popa
imull
subb
sahf
test
aam
aad
push
sub
sbb
mov
ja
int
mov
dec
call
and
iret
cmpsb
cmp
xor
pop
orl
pop
add
test
mov
aad
adc
inc
cld
and
js
insb
mov
lcall
sub
mov
int3
fnstsw
mov
jg
cwtl
js
movsl
xchg
fwait
out
sub
imul
xor
push
or
imul
push
xor
insl
cmp
aas
inc
pop
test
jo
pop
ret
out
les
cmp
lret
and
idivb
mov
jle
cmp
and
sbb
out
dec
imul
sub
negb
sbb
jle
jecxz
jg
push
fucomp
pop
jecxz
mov
xchg
xor
pop
add
gs
icebp
outsl
lea
das
fst
je
mov
lods
mov
dec
inc
push
jns
jnp
or
mov
incl
push
mov
lcall
dec
je
jmp
jmp
xchg
aaa
cmp
and
icebp
push
inc
sub
scas
fs
sub
xchg
loopne
popf
or
mov
pop
push
cs
mov
sub
test
rclb
mov
mov
dec
sub
movsl
xchg
lret
push
cmpb
je
push
xlat
scas
jge
push
nop
pop
lods
and
jne
dec
in
and
xor
in
sbb
sbb
ja
ds
push
push
movsl
fstpt
and
dec
cmpsb
dec
mov
cmp
mov
xchg
add
or
cmp
movsb
xor
sbb
bound
cmp
pop
stos
popa
bt
push
mov
roll
daa
stc
jne
push
add
or
dec
dec
push
rcrl
lods
lea
mov
clc
lds
fimull
into
inc
dec
push
xchg
pop
xchg
stos
mov
scas
call
addr16
pop
xor
shrl
fsts
mov
xchg
xchg
mov
mov
and
mov
add
insb
lock
mov
cs
xor
mov
or
xchg
mov
jp
or
mov
or
cmc
mov
pop
inc
adc
sub
adc
lock
jno
or
or
pushf
test
aaa
es
hlt
cmp
sub
pop
std
insl
and
xor
mov
pop
push
and
in
jne
es
pop
js
hlt
adc
adc
addr16
and
iret
outsb
loope
movsl
mov
es
cli
or
push
aam
loop
bound
or
enter
mov
inc
inc
cmpl
xor
mov
jle
mov
push
in
cmp
dec
iret
and
mov
xchg
adc
xlat
in
dec
inc
and
lods
mov
insb
nop
ljmp
sub
dec
xchg
pop
andb
pop
notl
or
cwtl
rcll
imul
add
lret
jl
sbb
mov
icebp
push
pop
add
pop
cmpb
test
dec
js
ret
cld
and
mov
mov
cmpsb
mov
test
mov
xor
les
jg
cwtl
popf
dec
loopne
push
or
add
add
pop
mov
pop
es
lcall
pop
add
dec
fs
popa
int
shlb
jecxz
clc
pop
rolb
scas
int
stc
or
decb
or
sub
sbb
dec
mulb
aas
ljmp
inc
pushl
fs
jbe
sub
test
jecxz
or
push
mov
jmp
das
outsb
das
push
xor
jo
fs
sahf
cmp
cmp
jmp
stc
jge
xlat
sbb
iret
cmpsl
std
decl
test
sub
in
jo
int
test
adc
iret
pop
js
mov
rcrl
fstpt
loopne
xchg
mov
lea
sub
imul
outsb
imul
shl
cmc
sti
mov
punpcklbw
push
jmp
out
pop
ljmp
daa
push
mov
es
scas
lea
rolb
daa
mov
xchg
mov
clc
jge
push
mov
push
cld
and
inc
sarl
jno
sub
dec
hlt
pop
scas
mov
es
stos
out
ss
or
out
inc
pop
and
mov
adc
push
nop
js
or
adc
push
jg
sub
imul
inc
adc
mov
icebp
aaa
in
jnp
loopne
test
cmc
repnz
pop
inc
cmp
pop
cli
int3
icebp
cmp
mov
ljmp
insl
out
bound
dec
sarl
stc
sti
cmp
pop
jmp
ljmp
sbb
sbb
push
inc
xchg
cld
nop
push
sahf
ficoms
push
xlat
mull
nop
idiv
jae
and
out
mov
sbb
jns
jmp
enter
sub
mov
push
push
je
lods
imul
sbb
adc
fistpll
stos
outsb
pop
push
xchg
imull
sar
mov
fstpl
dec
and
mov
dec
push
fsubr
pop
dec
xchg
stos
or
mov
sbb
rorl
leave
pop
jb
jns
or
xor
xchg
out
lret
adc
jnp
ror
sub
insb
inc
fcomp
xchg
mov
js
nop
adc
adc
test
push
das
sbb
sbb
sbb
sub
pop
adc
adc
test
fildl
xor
pop
fnstsw
push
enter
dec
loope
leave
sbb
dec
xor
scas
sahf
cmpsb
mov
sahf
mov
imul
jmp
into
sub
adc
xor
jp
fsubs
cmp
out
mov
push
sbb
ljmp
loop
mov
push
es
dec
ret
je
mov
ret
ffreep
mov
loope
xchg
cmc
add
scas
bound
jnp
sub
xor
es
sub
shll
cmpsb
xchg
loope
fmul
imul
es
aam
test
insl
repnz
add
dec
js
fistpll
mov
sbbl
inc
int3
aad
push
aam
adc
mov
pushf
insb
mov
aad
xor
out
cmp
shl
cmp
std
cmp
dec
jge
nop
mov
xchg
lds
sbb
jl
xchg
fmuls
sub
mov
dec
jecxz
imul
pop
fwait
jl
and
inc
cs
sub
push
pop
pshufw
ds
jae
lret
movsb
test
jmp
inc
out
pop
jnp
add
cmp
ret
jl
inc
add
scas
pushf
fsubl
xchg
or
rcrb
leave
sbb
arpl
fwait
xchg
in
adc
push
les
dec
add
or
pop
test
dec
xor
inc
sahf
fnstcw
aam
rorl
sbb
int
cld
adc
imul
call
fisttpl
sbb
subl
inc
adc
jne
push
sub
inc
push
shll
ret
ret
call
push
call
adc
xchg
jno
sbb
outsb
cmp
fisubrl
mov
aam
ljmp
push
jo
jnp
mov
in
push
adc
sbb
imul
pop
jb
jp
test
test
cmp
int3
les
or
incb
out
mov
push
call
mov
sub
in
inc
jg
lea
aad
push
jbe
int3
jge
inc
test
pop
stos
movsb
pop
imul
lods
out
push
cld
dec
pop
out
std
pop
data16
pop
sbb
cmc
mov
in
pop
aas
xor
dec
mov
insl
rcrb
data16
add
pop
dec
cltd
scas
std
jns
adc
mov
sub
and
xor
mov
jae
jge
push
xchg
sub
sub
or
sub
lea
jl
fs
sar
out
push
mov
cltd
inc
cmpsl
mov
push
rorb
mov
imul
cmp
push
andl
in
orl
nop
xchg
xchg
sahf
sub
addr16
pop
loope
addr16
or
mov
bound
lds
adcb
jo
insb
mov
movsl
popf
sub
jbe
mov
pusha
insl
inc
pop
xchg
and
fadd
lea
mov
push
dec
and
pop
call
out
ja
sub
dec
ds
jae
sbb
mov
shll
mov
lods
adc
push
dec
stos
jmp
sub
cmc
es
push
scas
ljmp
js
in
xor
inc
loope
push
aaa
jne
lock
in
sbb
ror
cli
sbb
stc
push
leave
fcmovb
sarl
sbb
xchg
sub
push
test
outsb
xchg
mov
dec
jb
cli
push
stos
out
dec
mov
adc
dec
inc
or
lret
lret
push
xor
push
lea
pop
push
xor
or
xor
inc
ret
or
pop
imul
hlt
rcrb
stos
pop
pop
popf
push
inc
sarl
cmpsl
icebp
sub
jecxz
shl
out
repnz
cli
pop
lahf
push
fdivs
mov
xchg
pop
daa
xchg
cli
inc
loop
es
adc
scas
in
jbe
mov
inc
test
out
pop
mov
sahf
mov
or
xor
in
xor
cwtl
mov
fs
jae
ss
cmc
lods
mov
cltd
lret
adc
cmp
mov
and
lcall
xor
insl
int3
cli
jne,pn
pop
mov
mov
imul
mov
pop
add
lcall
sbb
xor
mov
jg
ds
sub
data16
cltd
jo
push
pop
xchg
inc
call
xor
adc
and
popf
scas
cmp
xlat
sti
sub
shlb
cmp
mov
xchg
sub
jne
sub
mov
in
mov
cmp
fidivrs
or
pop
insl
out
inc
stc
sahf
mov
mov
jo
ja
and
sub
insb
lock
stos
cs
adc
push
jge
out
inc
cli
push
in
repz
out
mov
lock
mov
in
add
push
mov
insb
mov
xor
stos
mov
add
mov
jns
mov
mov
fwait
sub
call
outsb
imul
xchg
clc
jge
stos
outsl
or
push
lods
sbb
sub
imul
sti
lret
adc
jmp
sbb
ljmp
jmp
mov
mov
out
sbbb
insl
fdivrp
adc
lea
jmp
xor
mov
testl
jbe
jg
push
or
xor
push
cs
mov
es
aas
dec
mov
xor
jp
push
int3
lret
jp
inc
jecxz
std
into
jbe
mov
sbb
mov
or
sbb
cmp
add
add
xor
in
jne
xor
insl
lret
fmul
out
dec
pop
pop
jg
dec
mov
or
push
cmp
mov
adc
loopne,pt
sbb
pop
in
ret
ret
or
scas
push
dec
sub
push
lds
jmp
adcb
xor
dec
and
incl
arpl
std
cmp
cmpsb
ljmp
js
lods
aad
xor
fistpll
inc
and
adc
rcl
rcrl
andl
iret
and
fistl
xchg
aaa
pop
imul
cmp
adc
mov
leave
mov
jg
cmp
or
jmp
sub
mov
pop
jmp
test
scas
pushf
stos
rcll
add
hlt
mov
push
fsubs
or
test
int
sub
outsb
mov
mov
daa
repnz
add
sub
lahf
push
sbb
lock
push
mov
xchg
shld
hlt
loope
mov
push
or
xchg
jbe
daa
mov
sub
jmp
xor
mov
or
cs
dec
push
push
inc
pop
jl
dec
jge
dec
adc
and
and
aaa
into
sbb
cmp
mov
stc
inc
out
push
repz
sbb
arpl
in
sar
lret
push
mov
aad
rorb
popf
enter
shrl
gs
pusha
push
xor
push
inc
sti
mov
popa
pop
mov
fisubl
mov
mov
faddp
xor
mov
lsl
shrb
adcb
mov
sub
mov
shll
push
insl
jecxz
push
cmp
mov
movsl
mov
cltd
notb
int3
adc
dec
sbb
mov
lea
out
sbb
jl
mov
fildll
dec
mov
xchg
pop
push
loop
rcrl
stos
pop
adc
sbb
popa
fcmove
xchg
sbb
and
mov
xchg
ljmp
repnz
das
pop
dec
sub
xchg
xor
fstpt
inc
jno
mov
je
clc
lret
sbb
adc
in
or
mov
lds
repnz
femms
outsl
jb
sub
pushf
cmp
loop
mov
jae
mov
int
lds
insl
in
push
cvttps2pi
lock
jno
cli
fcoms
or
sub
or
sbb
mov
ss
lret
mov
fisubrl
jo
shl
fimuls
cmpsb
fnstcw
inc
mov
fiadds
adc
sub
lea
xor
ss
sub
xchg
scas
int
pop
lahf
notl
out
shll
mov
mov
xor
xor
inc
or
sti
popa
mov
or
xor
mov
pop
sbb
inc
pop
cmp
mov
fiadds
xor
in
divl
mov
paddd
dec
repnz
movsl
ficoml
mov
pop
sbb
lea
jge
imul
push
sahf
or
push
andl
lahf
pop
sub
jge
loop
mov
cmp
lahf
jae
xchg
add
fimuls
or
sbb
decb
or
mov
test
cli
ja
push
and
sub
in
xor
cmp
les
jecxz
outsb
aad
mov
push
popf
out
add
xor
lea
pushf
rcr
std
xor
jnp
icebp
xchg
fmul
fs
fs
xchg
xchg
les
sub
adc
cmpsl
daa
movsl
ret
movb
sarb
pop
imul
gs
cltd
mov
xchg
sbb
jg
mov
mov
addl
int
sbb
xlat
das
lock
jne
test
stc
mov
mov
pop
sub
xlat
and
and
push
xlat
lock
sahf
pop
pop
mov
pop
add
out
data16
insl
aam
add
es
pop
xchg
dec
add
mov
cmp
test
lret
jbe
je
aam
ja
nop
movsb
rol
jae
test
jl
fsts
cmp
dec
push
dec
cltd
add
les
repz
mov
sbb
into
or
mov
and
aaa
pop
in
pop
das
std
sbb
cltd
mov
sub
push
fs
xor
jmp
mov
scas
xor
cmpsl
cli
adc
cmp
jb
sub
and
xchg
shll
sbb
adc
js
mov
sub
cmp
mov
jo
loope
sbb
jp
cmp
jge
and
enter
scas
hlt
push
jle
rcrl
adc
and
mov
inc
jno
lds
lods
and
and
je
pop
test
dec
cmp
ret
jae
jns
mov
sbb
cmp
mov
imul
ret
test
shrl
in
dec
imul
add
add
aas
pop
push
jb
stc
cmp
add
and
add
inc
jnp
mov
testb
fsubrs
loope
xor
mov
cmp
xor
mov
xor
mulb
jl
pushf
or
outsb
call
in
and
inc
or
lea
out
imul
pushf
cs
out
int3
jbe
das
push
mov
mov
imul
mov
pop
xor
inc
fcoml
pop
fistpl
and
sub
dec
fcomps
imul
lock
or
pop
das
xchg
lret
xchg
lock
out
adc
shll
dec
xchg
dec
pop
sub
movsl
lahf
jae
adc
aad
pop
fnstenv
dec
mov
push
mov
scas
and
icebp
lods
jbe
or
inc
stc
fsubl
sub
rcr
in
cmp
and
jecxz
mov
xor
or
jge
cmp
dec
and
insb
inc
sub
xchg
adc
dec
mov
leave
in
xchg
icebp
jl
dec
mov
das
lock
cltd
leave
gs
jae
or
ret
xchg
pop
ret
cltd
hlt
cmpsb
out
inc
mov
mov
add
sub
pop
adc
pop
adc
pop
loopne
add
or
or
aaa
pop
push
hlt
add
inc
or
idiv
ds
gs
mov
ja
dec
xor
sub
scas
adc
inc
sbb
dec
mov
mov
loop
lret
pop
mov
mov
enter
into
jo
xchg
cmpsb
ds
or
jge
mov
cld
loopne
push
in
push
in
jmp
pop
pop
jbe
sub
les
bound
stos
mov
cs
movsb
int3
gs
mov
das
inc
repnz
adc
add
lds
pusha
sub
stos
dec
cmc
std
leave
mov
mov
pop
adcb
sahf
mov
test
icebp
lret
jp
and
jb
imul
sub
add
mov
mov
cld
sub
test
mov
insl
sbbl
nop
pop
push
clc
mov
je
xor
into
pop
addb
fiadds
jmp
xchg
and
pop
or
das
mov
sub
fnstcw
jmp
push
pop
push
fidivrs
inc
pop
clc
push
test
sbb
add
xorb
les
and
cmp
fwait
and
lahf
ficomps
lret
mov
xrelease
xchg
orl
inc
test
push
test
adc
sub
mov
adc
mov
xor
xor
test
movsb
jmp
lods
mov
insb
fldcw
xchg
jg
subb
test
aad
cwtl
loopne
xor
rorl
enter
loopne
cld
mov
sub
jp
pop
push
cmp
daa
pop
xor
or
sbb
push
ss
sub
je
dec
pop
inc
push
xchg
sbb
out
push
mov
outsl
sub
pop
pop
and
pop
inc
push
aaa
adc
or
adc
pop
dec
fisttpl
mov
jp
lock
and
dec
xchg
adc
jo
test
push
xchg
cmc
inc
dec
cmpsl
ret
sarb
iret
sbb
aad
fsubs
dec
cmp
or
jno,pt
sar
dec
and
adc
rcrl
xor
popf
imul
jecxz
jg
xor
push
jp
xchg
cltd
mov
stc
cmpsb
mov
pop
push
xor
sbb
mov
lds
mov
decl
xlat
iret
add
pop
fdivrl
popf
sbb
xor
add
dec
fdivrp
stc
hlt
icebp
pop
lea
jo
cmp
sub
stos
xchg
xchg
sub
test
lcall
aaa
imul
cltd
data16
xor
cmp
xor
mov
mov
xor
push
cmc
lods
xor
dec
xor
cwtl
imul
pop
adc
pusha
cmc
push
in
push
stos
push
cwtl
mov
mov
imul
test
ds
xchg
inc
jle
xlat
sahf
faddl
xchg
push
xchg
and
and
loopne
xchg
cmp
stc
push
xchg
lret
leave
mov
pop
in
jmp
cmc
cmp
pushf
es
es
dec
int
or
sbb
mov
push
iret
sub
push
add
stos
cmc
lock
pop
aas
jmp
cmp
aam
das
xchg
xor
mov
xlat
jno
and
and
pop
and
flds
inc
adc
inc
or
cmp
adc
sbb
xchg
or
xlat
mov
pop
push
push
rorb
js
or
inc
fdivrl
cli
xor
inc
xchg
push
and
mov
inc
cmpsl
nop
mov
cld
sti
mov
inc
inc
mov
mov
lcall
out
push
fsubs
faddp
pop
in
xchg
pop
xchg
rclb
push
sbb
xchg
cs
arpl
aam
mov
push
mov
in
jb
fiadds
dec
sar
pop
adc
mov
inc
cli
cmp
mov
stos
or
cld
mov
mov
sbbl
in
pop
imul
adc
stos
loop
outsb
mov
dec
cmpsl
icebp
lods
hlt
lcall
or
stc
lret
scas
in
andb
hlt
xor
mov
imul
mov
mov
dec
sti
push
pop
push
sub
xor
fsts
pushf
mov
stc
jle
or
mov
int
mov
ss
loop
orl
into
jg
movsl
ret
push
adcb
fsts
dec
testl
mov
into
mov
enter
or
pop
pushf
cltd
scas
pop
popa
push
inc
orb
sub
xor
xor
lods
orb
jge
hlt
lret
push
adc
xchg
rorl
add
loopne
push
mov
insb
std
or
cmpsl
lock
adc
sub
xor
dec
xor
out
lret
aam
icebp
ret
movsl
shrl
cltd
inc
dec
out
pop
mov
dec
rcr
negb
add
sarb
sub
xchg
aad
enter
adc
mov
mov
cmp
dec
jle
repnz
sub
popa
sbbb
call
out
out
test
cmp
jg
mov
scas
aam
pop
sub
push
push
test
push
loopne
addl
add
add
lea
into
out
popf
adc
xchg
add
and
add
jp
fldt
jae
or
mulb
sub
hlt
insb
pop
mov
pop
add
movsb
xor
scas
inc
sarb
adc
mov
stos
imul
das
sbb
xchg
cltd
icebp
das
adc
cmc
mov
mov
inc
shll
lahf
jp
mov
fidivs
cmp
xor
xchg
gs
mov
mov
jbe
xchg
pop
xlat
pop
pop
add
ja
shlb
popf
adc
les
and
mul
fwait
es
adc
add
xchg
into
dec
jmp
pop
cmp
and
in
test
shll
out
fdivp
or
lahf
aam
out
int
fnstsw
dec
or
push
loope
add
mov
loope
addr16
jl
jno
jo
jne
adcb
fsubrs
xchg
imul
out
fsts
bound
scas
pop
iret
repnz
in
cmp
add
mov
stos
add
cs
cmp
sub
inc
inc
inc
xor
sti
and
imul
adc
inc
ds
ljmp
inc
lea
test
fists
xrelease
sti
aad
ja
aad
leave
or
fsts
repnz
push
mov
inc
xchg
clc
or
dec
push
jecxz
pop
lcall
addb
out
imul
dec
je
mov
lret
ljmp
cmp
sbb
je
insb
adc
jno
and
inc
mov
test
mov
adcb
fs
iret
pop
dec
adc
pushf
mov
idivl
loopne
rorl
mov
pop
xor
and
jae
int3
lcall
push
test
xchg
fwait
notb
cltd
es
inc
enter
push
sbb
cmp
pop
daa
push
sti
add
jnp
xchg
push
in
pop
dec
fwait
neg
scas
scas
pushf
hlt
js
mov
and
adc
scas
in
and
sub
xchg
and
icebp
cmp
test
adc
stos
push
push
out
lods
mov
push
xchg
sbb
pop
test
cld
in
jnp
mov
cltd
mov
mov
pushf
push
ficoml
bound
jle
lret
outsb
and
and
inc
roll
imulb
add
inc
inc
cmpsb
mov
jl
cmp
mov
mov
xchg
insb
loope
ljmp
push
stos
add
or
rclb
jbe
dec
sbb
out
inc
sbb
mov
call
dec
ret
outsl
mov
das
mov
dec
lea
sbb
cmp
loop
push
daa
out
add
mov
inc
sbb
rcrl
or
add
mov
mov
repz
sbbb
cmpsb
lret
inc
push
out
rorl
outsl
movsl
mov
rorb
sbb
rolb
out
pop
mov
cmp
cwtl
sub
ss
shlb
shll
sbb
les
test
sub
pop
js
xchg
cmp
sub
adc
mov
orl
pop
jnp
mov
loop
dec
dec
int3
push
fldenv
pop
inc
popa
out
xchg
stos
in
cwtl
mov
and
xchg
scas
dec
jmp
mov
mov
cmp
sub
xchg
mov
outsl
jmp
div
inc
idivb
imull
call
mov
fisttpl
shl
adc
mov
cmp
hlt
hlt
jecxz
dec
orb
xchg
xchg
lahf
dec
push
inc
loop
push
sti
inc
jecxz
jp
sbbl
les
sbb
stc
sbb
ja
or
aaa
inc
into
repz
mov
sub
xchg
pop
mov
push
xchg
add
jns
into
test
bound
mov
lret
rorl
and
ja
movsb
in
jbe
jns
push
mov
lcall
or
repnz
icebp
mov
xor
fidivl
sub
sti
jnp
cmp
ret
sti
fadds
icebp
add
nopl
lret
sbb
sar
jbe
mov
lods
mov
mov
adc
cmp
lods
std
rol
test
add
xchg
call
or
fwait
and
cmp
int3
sbbb
add
and
add
cmp
scas
es
ret
dec
jge
dec
adc
int
int3
mov
lret
push
and
jbe
pop
rolb
inc
ja
inc
iret
lods
repnz
popa
in
push
xor
pop
dec
mov
dec
iret
cmp
mov
insl
push
push
pop
pop
ljmp
and
dec
xchg
push
xchg
popa
shrd
jle
xor
inc
sub
bound
outsl
arpl
cmp
jb
fucomip
sub
and
das
mov
xchg
cmp
mov
pop
jae
ss
repz
lods
repz
inc
adc
mov
aam
in
pop
pop
js
and
arpl
xor
cmp
imul
inc
jmp
popf
fbld
arpl
push
scas
push
xor
dec
lock
pop
std
adc
aaa
mov
mov
mov
lods
scas
jo
inc
cmp
inc
jmp
sub
insb
cltd
mov
inc
xchg
pop
aad
out
or
scas
addr16
sub
and
insb
aad
mov
pop
rep
fxch
cmc
stos
ljmp
add
lods
dec
pop
jp
mov
dec
sbb
sub
mov
cmp
scas
insb
mov
mov
out
dec
out
shl
cmc
inc
sub
gs
lcall
cmpsb
invd
aaa
iret
stos
ret
cmp
and
adc
aad
icebp
int3
jne
fldcw
push
or
or
std
ret
fcomps
out
fs
lcall
icebp
popf
ds
cmp
dec
adc
mov
insb
in
adc
mov
test
data16
jp
shrb
jns
clc
mov
mov
xor
push
mov
movsl
sub
add
fwait
rcr
xor
add
rolb
insl
or
sbb
mov
mov
xchg
sub
sub
push
dec
popf
mov
call
es
mov
aam
or
adc
add
popf
xchg
ret
aas
aas
sahf
cmpsb
add
push
cmc
roll
add
frstor
pop
sti
or
xchg
dec
jnp
sti
mov
ds
ret
mov
add
pop
add
movsl
sbb
pop
mov
into
wbinvd
xchg
scas
push
sub
push
inc
insl
pusha
andl
inc
push
or
add
inc
mov
and
inc
loope
insl
push
sbb
and
sbb
fld
inc
mov
outsb
stc
sub
ret
pop
xor
xor
pop
sarl
sub
and
std
cld
in
push
mov
adc
inc
jne
popa
push
jmp
xchg
cmp
mov
jae
pop
orl
das
out
and
movl
subl
sti
pop
jl
pop
pop
xchg
std
xor
stos
or
popf
inc
repnz
push
push
xor
pop
pop
lcall
cwtl
repnz
sbb
xchg
add
rol
pop
bound
jns
cmc
dec
lock
push
clc
fmuls
push
test
mov
ficompl
pop
arpl
inc
ja
rolb
leave
xor
dec
inc
repnz
add
or
xchg
mov
cmp
lahf
mov
and
adc
test
cmp
cmp
mov
dec
pop
movsl
sub
repz
adc
fwait
sbbl
cs
jne,pt
cmc
movl
rolb
mov
add
mov
inc
addl
cmpsl
in
out
push
fcom
shl
inc
ds
mov
das
or
push
xorl
cmp
inc
sahf
push
in
bound
xchg
stos
jno
ret
inc
xchg
push
lret
sub
mov
inc
cli
inc
loopne
gs
or
mov
mov
bound
aaa
test
and
fdiv
aam
jae
pushf
fbstp
idivl
adc
mov
pop
das
ljmp
xor
inc
jbe
sbb
jg
push
jnp
jp
int3
dec
pop
popa
xlat
push
mov
cmp
ficompl
xchg
add
mov
sbb
bound
sbb
movsb
fcoml
sub
or
inc
movb
dec
shlb
neg
pop
out
lea
cmp
dec
xor
inc
sbb
jmp
and
cli
pusha
push
in
aas
add
xchg
das
fidivrs
lods
js
sarb
add
push
xchg
xchg
pop
and
jp
jg
cmpsl
cmc
sbb
jmp
fisttpll
xchg
cmp
ret
mov
push
arpl
push
sub
push
sbb
repnz
fwait
lods
pop
and
pushf
stos
cmpsl
imul
std
mov
jg
mov
fsubrs
adc
lock
jp
out
test
inc
mov
lahf
adc
cmp
adc
adc
pop
test
aaa
lods
aad
pop
jns
mov
jb
xchg
push
pop
sub
xchg
mov
mov
mov
mov
daa
bound
adc
or
cmp
push
loopw
add
repnz
add
rcll
jmp
repz
pop
push
lahf
loop
push
mov
pop
insl
mov
lahf
nop
test
jb
or
aad
stos
ret
cltd
sbb
insb
jge
pop
sub
in
inc
loop
test
jae
cmp
data16
pop
xchg
jmp
repnz
icebp
cmpsb
dec
dec
push
mov
ds
mov
fnstsw
jp
pushf
jecxz
rorl
cmp
mov
repz
lds
sbb
decl
nop
cmp
aad
inc
inc
sub
mov
pusha
sub
repz
cltd
mov
test
jo
sarl
js
stos
mov
popa
xor
fmull
adc
ljmp
sub
mov
cmpsb
loopne
popa
xor
pop
add
pop
push
ljmp
dec
xchg
mov
icebp
cmp
test
sbb
pop
ret
iret
fsubs
mov
mov
push
push
jmp
aas
sub
ret
stos
fnstsw
add
hlt
push
lock
pop
jp
cmp
ljmp
lea
int
outsl
mov
jb
es
jl
fwait
push
or
mov
leave
or
mov
jb
fcompp
inc
pop
rcrb
cmp
dec
add
js
inc
jbe
and
gs
cmp
imul
lock
jnp
mov
sbb
mov
mov
addb
add
sub
mov
pop
lock
mov
dec
jnp
inc
jno
sub
insb
fdivl
hlt
in
pop
insb
add
rcll
rcll
sub
imul
inc
push
xor
or
xor
mov
mov
add
fimull
lret
ds
jb
data16
shr
out
add
xchg
in
and
or
jl
lahf
xor
addr16
pop
and
jp
scas
jo
pop
lock
xor
in
jmp
dec
imul
mov
test
push
mov
je
sub
dec
push
add
add
pop
cmpb
jle
call
push
adc
lret
cmc
lds
in
jno
xor
mov
jge
add
cwtl
xor
clc
xor
ret
cld
pushf
xchg
lods
xchg
and
jle
pop
out
sub
insl
mov
ljmp
aaa
pop
ja,pt
es
jae
add
daa
dec
xchg
cld
lret
dec
scas
or
test
loop
xor
xor
mov
mov
pop
or
jecxz
push
adc
mov
pop
das
sbb
paddusw
jbe
jns
add
mov
out
or
cld
out
mov
pusha
sarl
in
sbb
xor
mov
or
std
push
add
sti
xor
clc
mov
in
mov
jecxz
arpl
mov
cmpsb
outsl
mov
push
loopne
je
addr16
cmp
mov
fsubs
jnp
lods
test
xchg
add
icebp
pop
cmp
mov
adc
adc
cmc
pop
cwtl
sbb
jb
inc
std
lods
add
sbb
dec
pop
ret
mov
mov
adc
mov
pop
add
xor
push
movsb
ljmp
pop
cmp
xchg
fsin
dec
test
sub
jge
push
clc
xchg
and
ds
jne
inc
imul
cmp
inc
mov
shlb
nop
dec
arpl
fsin
mov
xchg
add
outsb
test
cmpl
inc
incb
push
jecxz
arpl
ds
mov
pop
add
fs
bound
mov
cli
mov
movsb
cwtl
rolb
jno
jg
cwtl
inc
fisubrl
lods
jl
aad
push
xchg
je
je
arpl
js
decb
popa
jo
jne
dec
dec
nopl
xchg
sub
and
cmp
imul
arpl
test
cmpsl
mov
mov
pop
mov
in
rcl
ds
sub
movsl
push
xor
outsl
cmp
fldl
shlb
or
decb
test
mov
jo
insb
sbb
shr
insb
ret
fistpl
adc
and
lret
mov
pop
mov
sub
das
mov
leave
ds
rorl
mov
jge
sbb
ret
jno
test
pusha
mov
pop
mov
xchg
xor
pop
faddl
xor
sbb
lcall
xor
test
notl
outsb
pop
or
filds
into
push
lcall
mov
ljmp
cmp
mov
sti
pusha
cmpl
sbb
push
xchg
in
repz
loopne
sbb
call
xchg
sbb
loop
sar
mov
mov
pop
dec
jg
pop
cmp
shl
aam
xchg
stos
outsl
in
jge
lahf
inc
cmp
xchg
add
jp
mov
outsb
xchg
inc
adc
xor
fucomip
aaa
ficomps
push
mov
lock
push
stos
pop
lcall
out
add
jge
pop
jg
shrb
adc
es
loope
pushf
test
test
jbe
cmp
jp
mov
inc
jae
add
clc
clc
test
cmp
stc
and
sbb
call
insb
insl
inc
jl
mov
push
aaa
in
inc
outsb
sub
dec
add
loope
cmp
ljmp
sub
adc
push
movl
rcr
das
cltd
inc
lock
xchg
call
mov
pop
fcomps
xchg
inc
fildll
push
jne
aas
inc
sbb
pop
ret
mov
test
sub
pop
paddsw
bound
xlat
xchg
repz
xchg
addb
cmp
jns
cmpl
adc
xlat
jns
mov
jp
dec
push
push
loopne
and
iret
call
loopne
push
fcmovnbe
push
mov
jae
mov
nop
in
jg
sbbb
cmpsb
pushf
mov
push
cmp
jecxz
sbb
fimull
dec
je
adc
mov
cli
inc
jg
mov
or
aaa
cli
xchg
or
or
mov
into
dec
jnp
push
orl
gs
leave
cli
out
jl
loop
push
ds
add
jne
push
cltd
jae
xlat
out
shrl
daa
or
in
jmp
push
xor
stos
shlb
fwait
lret
mov
loopne
shrl
ljmp
mov
push
enter
jmp
and
mov
mov
inc
or
movaps
in
or
js
pop
jecxz
mov
fildll
jns
std
add
pop
push
push
cmc
movsl
fsub
mov
mov
rol
pushl
add
cmc
fidivrl
jb
dec
int
cmc
adc
icebp
xor
jg
nop
in
xchg
inc
pop
xor
sub
mov
jecxz
cltd
xor
or
mov
out
out
xor
mov
test
ret
pop
imul
mov
jmp
ret
pop
leave
or
xchg
andb
sti
push
adc
je
ret
mov
sahf
out
jge
jno
jp
or
pop
insb
je
push
idivl
fsubp
test
in
mov
out
inc
rep
cmc
dec
jno
imul
and
es
mov
imul
lds
jae
shll
mov
xchg
mov
mov
dec
shll
test
inc
xor
pop
movsl
inc
lcall
mov
dec
imul
lods
adc
mov
ja
in
push
jp
mov
xor
int
push
mov
pop
xlat
lret
in
pushf
mov
inc
shrl
push
outsb
iret
sbb
iret
addr16
jl
ds
jge
jmp
mov
mov
in
lcall
inc
pop
xchg
xchg
loopne
sub
push
pop
inc
loope
lret
jge
mov
test
cmpsl
outsb
add
jb
loop
mov
mov
repz
stc
js
adc
lret
ja
jnp
sar
leave
mov
rorl
xchg
cmp
and
and
jnp
cmpb
xor
or
adc
aas
in
aam
dec
ljmp
daa
cmp
xchg
into
pop
out
jmp
mov
dec
data16
mov
test
pop
jae
loop
xchg
dec
ss
lea
xchg
cmpsb
sbb
dec
fisubrl
stc
test
adc
push
imul
mov
jmp
sbb
add
out
idivl
test
in
push
sub
popa
ljmp
fwait
pusha
jmp
jl
pop
push
nop
rcl
in
or
xchg
mov
loopne,pn
pop
jecxz
adc
cmp
sub
dec
lock
inc
shrb
lahf
xchg
sub
xchg
rcrb
cwtl
cmp
add
adc
cmpsb
inc
and
repz
cmpsl
into
divb
data16
xor
xchg
pop
sbb
adc
inc
fcmovnbe
fldcw
fxch
cmp
dec
stos
pop
aam
sbb
out
mov
cmp
out
xchg
inc
sub
out
dec
js
fdivl
and
stc
movsb
cli
movsl
cmp
mov
mov
xor
cmp
pop
fbstp
stc
mov
jbe
jl
mov
cmpsb
xchg
pop
push
push
jno
mov
mov
or
loop
push
jmp
xchg
inc
adc
dec
popl
ret
dec
sbb
xor
cltd
push
fdivrs
xor
push
or
cmp
sbb
addr16
test
cmc
cmp
fxch
adc
insb
call
mov
sahf
lock
adc
or
nop
add
push
cmp
jns
ja
pop
cmovns
mov
xchg
adc
add
push
add
push
in
imul
mov
push
pop
fwait
scas
mov
aam
add
push
fdivr
loopne
ss
fistpll
out
push
push
and
adcb
xchg
xor
jns
shl
add
sbb
ret
or
or
add
sub
pop
cmp
scas
or
mov
jecxz
cmpsb
adc
mov
test
testb
cmp
add
and
add
leave
aad
adc
or
adc
popa
xchg
jno
scas
push
sub
cmp
adc
sub
lcall
inc
nop
add
shld
xchg
mov
out
scas
ret
push
inc
cltd
out
test
in
xor
test
call
inc
stos
lret
sahf
adc
mov
popf
add
cmp
into
inc
jle
icebp
mov
or
dec
aad
push
popf
shlb
pop
aaa
mov
dec
add
lcall
mov
mov
mov
add
data16
mov
dec
add
push
inc
lock
sbb
imul
cwtl
mov
lods
ret
in
inc
inc
dec
stos
jae,pn
je
or
repnz
iret
sarb
sarl
dec
mov
out
xor
fsubp
sub
popa
adc
pusha
cmp
jbe
shrb
popa
fnstsw
mov
dec
test
outsb
cmp
mov
scas
cmp
mov
addr16
pop
emms
lods
dec
movsb
lcall
test
mov
or
iret
ss
mov
sub
adc
cmp
push
jl
sub
mov
xor
mov
out
xchg
dec
push
and
inc
push
jle
fldenv
jo
lods
jmp
jb
add
sub
outsb
je
mov
in
movsl
dec
sbb
bound
jae
xchg
hlt
idivl
clc
xchg
sbb
xor
inc
jge
sub
or
outsl
mov
in
rorl
jo
mov
mov
mov
idivb
mov
je
scas
je
scas
out
mov
and
adc
loope
cmpsb
js
js
int3
movsb
or
bound
jb
loop
mov
stos
push
mov
push
or
push
lock
push
push
notl
xlat
ja
xor
stos
and
leave
int3
aam
std
adc
jge
sbb
pop
jl
ret
pop
ds
call
sarl
sbb
les
mov
pop
xchg
inc
fdivr
add
and
pushf
mov
imul
fisubrs
imul
lret
add
mov
mov
xchg
add
pop
shr
lahf
cmp
lods
and
jle
imul
outsl
xchg
push
jg
cmp
lcall
mov
jne
mov
popa
xor
jae
cmp
int
mov
add
mov
test
fwait
jg
int
xchg
cmpb
pop
sbb
data16
and
mov
mov
nop
inc
jmp
mov
sti
sbbl
rcll
adc
addr16
sbb
inc
jl
jmp
aas
add
jmp
outsl
lea
jnp
cmp
sub
or
jge
push
test
xor
inc
and
xchg
pop
dec
je
subb
jne
hlt
lret
add
push
aam
push
aaa
movsl
xor
cwtl
jo
dec
sbb
jmp
mov
lea
cwtl
popa
xor
adc
pop
fcmovb
cmc
mov
add
loopne
lea
push
cmp
mov
add
jb
fcoms
pop
adc
xchg
bound
mov
dec
xor
dec
nop
xor
pop
arpl
mov
imul
or
jne
call
jge
stos
inc
adc
stc
xchg
push
mov
xor
cmp
aaa
xchg
sbb
pushf
ja
mov
mov
pop
rep
xor
cmp
inc
insb
hlt
frndint
hlt
aas
jle
xchg
scas
ds
push
mov
shrl
popf
xchg
xchg
pop
int
fwait
dec
ss
loope
fisubl
cwtl
lds
jnp
or
pop
pop
nop
gs
fcomp
clc
mov
ja
ret
aad
sbb
add
sbb
fs
rclb
jns
icebp
push
sub
int3
xor
nop
pop
dec
inc
add
mov
cmp
aad
sbb
pop
mov
dec
or
nop
pop
lea
adc
lret
xchg
inc
in
imul
rep
lods
mov
sbb
cld
fwait
cmp
sahf
hlt
mov
dec
daa
or
jbe
push
ss
xor
add
mov
test
inc
int3
and
adc
lcall
shl
aam
data16
cli
xor
call
jo
lods
mov
cwtl
int3
movsl
push
or
push
and
clc
jmp
xchg
mov
cs
icebp
fucomp
insl
push
rclb
mov
addr16
lods
and
push
int3
in
negl
jne
daa
daa
sarb
mov
stc
mov
bound
push
mov
sti
jecxz
xchg
das
mov
mov
jbe
jno
pop
sti
mov
jle
lea
out
add
xchg
into
mov
dec
xorb
cmp
add
push
pop
push
pop
push
sbb
sbb
mov
sbb
cmp
shll
out
push
daa
mov
push
adc
jae
lds
add
ss
popa
lret
ja
jns
inc
out
adc
jl
mov
adc
fnstcw
leave
movb
sti
out
mov
pop
push
rcll
sbb
mov
sti
fs
out
sub
aad
imul
popa
sub
out
cmp
sbb
sbb
pushl
xchg
lahf
in
bound
fwait
xchg
test
jmp
out
jo
fsubl
jmp
or
push
arpl
add
or
jne
adc
sahf
aad
dec
xchg
es
dec
jno
jmp
nop
mov
cmp
popa
xchg
push
in
push
loopne
cmp
arpl
inc
cmp
cmc
fldcw
cli
xor
mov
xor
and
lahf
inc
outsb
xor
loope
fidivrl
pushf
lahf
out
mov
jmp
into
mov
shll
jp
dec
loope
jecxz
push
std
aad
mov
mov
jp
clc
addr16
cwtl
add
add
and
mov
rcrl
aam
dec
inc
jno
cmp
jg
pushf
mov
stos
sub
push
dec
pop
cltd
or
cmp
int
repz
js
in
shrb
bound
shl
stos
or
and
push
push
stos
lods
cmp
int
out
arpl
enter
insl
add
test
std
pop
pop
jno
lds
fildl
or
in
icebp
enter
outsl
mov
stos
cmp
push
clc
adc
jge
rorl
mov
sub
cs
rcrl
std
push
xor
jns
outsb
addl
add
push
lea
sti
pop
lods
into
fisttpl
mov
xor
add
pop
add
in
or
sahf
pop
int3
jno
mov
pop
inc
push
leave
push
mov
pop
jle
sbb
xchg
mov
adc
sub
mov
in
mov
in
mov
jg
inc
or
mov
aaa
sbb
test
cld
movsl
test
mov
xchg
les
aad
mov
inc
dec
cmc
lret
insl
sahf
int3
or
cmpsb
js
inc
adc
insb
stc
fidivrs
xchg
in
popl
mov
scas
jns
lahf
adc
in
movsl
inc
lret
inc
xorl
adc
adc
call
and
mov
and
inc
xor
ror
mov
test
and
dec
rclb
sub
pop
mov
or
sahf
dec
je
int3
jne
inc
insl
dec
and
mov
and
mov
lods
or
xor
in
sarl
ret
outsb
repnz
js
js
adc
mov
mov
loop
lods
clc
arpl
sub
stos
fistpll
inc
and
mov
or
sahf
into
inc
gs
lret
pop
cltd
xchg
sub
adc
xchg
mov
lods
mov
cs
or
loope
xor
xchg
jl
xor
inc
xor
and
jbe
call
mov
int
jnp
mov
push
call
pop
add
call
cltd
out
cmp
movsl
pop
enter
sahf
push
shrb
jbe
fsts
mov
fsub
call
jg
cmpsb
enter
dec
pusha
xorl
add
mov
ret
and
cmc
in
jl
outsb
add
ds
and
push
dec
subb
scas
push
mov
hlt
cmp
std
ficoms
jl
xchg
ljmp
pop
mov
int3
push
das
cmpsl
mov
daa
out
test
sbb
lret
inc
or
les
xchg
jne
imul
movsb
iret
and
loope
mov
sbb
pop
mov
dec
pop
xor
outsb
fcoms
jg
adc
jbe
mov
gs
xor
mov
scas
shlb
pop
sti
pusha
push
mov
into
ficompl
push
leave
shlb
testl
push
es
out
mov
arpl
sbb
fucomp
sbb
mov
xchg
mov
pop
fdivr
mov
adc
popa
lret
add
sub
sbb
out
add
adc
jo
xor
cmp
inc
repnz
jnp
fadds
cmp
xchg
inc
das
sbb
out
pop
test
xor
inc
aam
xchg
adc
cmp
arpl
adc
rol
scas
nop
insl
lahf
movsl
sbb
adc
push
pop
mov
adc
fsts
fcmovbe
inc
inc
jbe
adc
loope
jo
or
aaa
push
clc
fidivrl
lods
out
popa
fimuls
iret
test
push
mov
daa
xchg
scas
in
hlt
ds
adc
cmc
out
repz
add
stc
jg
jecxz
iret
inc
shrl
mov
out
es
sahf
mov
fiadds
fisubrl
dec
iret
sbb
push
sbb
dec
into
mov
add
mov
cltd
mov
into
std
sub
add
les
mov
inc
mov
push
push
fnstsw
sarl
hlt
jmp
jle
push
pop
add
pop
out
dec
iret
imul
leave
cmp
inc
imulb
jp
push
inc
in
mov
fs
dec
pop
pop
xor
call
and
rcr
pop
lods
mov
test
sbb
mov
push
cmc
mov
cmp
ja
bound
cmp
add
insl
stos
sub
cmp
fdivrs
xchg
subb
cli
rorb
mov
lods
js
push
sti
add
out
and
out
hlt
xchg
into
sbb
cmp
sbb
bound
sub
test
sahf
push
clc
sub
addr16
stc
out
cmp
je
or
push
jnp
cmpb
test
cwtl
jo
ss
aad
cmp
lret
pushf
pop
test
mov
mov
mov
outsl
sub
mov
sub
mov
imul
or
push
dec
inc
cmp
enter
push
cmpsb
mov
fwait
pop
cld
push
mov
push
das
cli
add
aaa
cwtl
push
dec
negb
cmp
je
adc
xor
lret
aam
sar
inc
lahf
and
pop
sub
pop
and
movsb
push
out
test
ficompl
dec
jmp
add
inc
jno
fdivrs
and
ljmp
cmpsl
popa
mov
pop
fidivl
cltd
imul
xor
std
jns
push
mov
inc
fdivrs
dec
movsl
mov
adc
pop
loope
jle
mov
mov
or
mov
sub
fdivrl
pop
mov
fstp
stos
adcb
cmp
xor
in
sbb
ljmp
add
jnp
rcrb
ja
fcoml
pop
in
outsb
mov
ss
jl
pop
mov
test
sub
fsubr
jp
pusha
mov
lods
cmp
nop
pop
or
ficompl
pushf
das
sti
jle
jbe
pop
stos
mov
lock
ja
push
call
fsubs
xchg
adcl
loop
mov
shrl
mov
sbb
or
xchg
inc
test
push
cmp
jb
lret
imul
insb
cmp
xchg
inc
xor
in
shll
out
loope
dec
gs
xchg
jbe
pop
push
sbb
xor
and
dec
ret
mov
repz
mov
xchg
dec
dec
movsl
clc
mov
pop
testb
jl
xor
or
mov
pop
xor
pop
sbb
lret
insb
pusha
gs
sub
stc
pop
adc
xor
pushf
js
cmp
pop
adc
sbb
rcrb
and
out
sbb
and
js
jge
rep
ffree
in
mov
stos
fs
cmpsb
and
shrl
aaa
shrl
imul
sarl
mov
jno
mov
fs
push
out
popf
inc
pusha
jp
int3
lret
and
incb
setg
shlb
cmp
arpl
and
rorl
movsb
jge
sub
cmpsl
shrl
dec
xchg
out
inc
mov
dec
xor
rolb
pushf
sbb
push
sahf
fidivrl
add
inc
inc
divl
mov
add
pop
add
inc
fdivrp
jnp
or
pop
xor
js
lods
and
push
xor
push
pushl
test
mov
mov
pop
mov
out
in
cmp
jge
popa
inc
push
sbb
sbbb
leave
sbb
addr16
cld
pop
xlat
sahf
shll
rcr
or
outsl
pop
pushf
xchg
add
subl
xor
sub
xchg
and
enter
and
inc
movsb
leave
inc
mov
mov
push
lock
or
cmpsb
enter
inc
ljmp
nop
jnp
or
pop
pushf
sbb
daa
pushf
cmp
push
mov
jecxz
sbb
subb
bound
and
movntps
xlat
lret
mov
stc
popa
xchg
bound
dec
sub
add
xchg
ss
fidivs
xor
outsl
jnp
xchg
and
cld
in
jle
loop
stc
push
fucomip
push
mov
push
icebp
addr16
arpl
add
dec
sbb
xchg
jecxz
imul
inc
int
lods
dec
sbb
roll
add
les
push
into
sahf
or
jp
roll
pusha
loop
xchg
je
in
push
and
orl
outsb
flds
sarl
xlat
out
shlb
les
xchg
adcl
insl
out
cli
popf
mov
mov
pop
divb
mov
leave
sbb
cmp
jae
xchg
cmp
out
jge
pop
mov
aas
fsubrs
pop
or
inc
lahf
pop
cwtl
xchg
idiv
aas
push
mov
mov
mull
scas
xlat
mov
or
push
mov
xor
in
sub
jb
add
push
pop
mov
out
dec
es
jne
roll
daa
gs
push
movsl
mov
sbbb
lock
push
jnp
pop
push
mov
sbb
cwtl
xor
repnz
and
cmpsb
sub
sbbb
test
leave
pop
xchg
pop
mov
cmp
add
bnd
mov
cli
cmp
fnstsw
rcll
test
loopne
and
fistpl
pop
rcl
ret
sahf
jge
lods
jo
sbb
mov
dec
sbb
pop
and
pop
icebp
mov
or
or
and
dec
mov
das
loope
dec
iret
inc
repz
pop
lcall
scas
xlat
scas
test
and
ja
dec
mov
inc
mov
shrb
ljmp
push
add
pop
inc
sub
jne
inc
or
rcr
std
scas
aad
add
ret
inc
fdivr
ror
jns
fucomp
bnd
ret
fdivr
or
out
sub
adc
inc
shll
inc
lds
arpl
cmpsb
adc
into
repnz
cld
add
mov
ficompl
sbb
test
pusha
mov
push
stos
lods
or
or
daa
addw
dec
xchg
in
jp
popf
xor
sbb
inc
repnz
push
or
dec
mov
pop
lahf
faddl
dec
push
jp
or
scas
dec
sbb
jge
push
sbb
mov
lret
cmp
lods
in
cmp
lds
and
out
ret
out
cmc
jmp
fiaddl
jae
lret
or
xor
xchg
and
int
jle
mov
fidivl
cmp
daa
add
pop
xor
in
jecxz
dec
loopne
cmp
xor
lods
ret
xor
lcall
sub
fsubr
jg
mov
lods
daa
inc
mov
outsl
push
lcall
hlt
mov
ret
dec
in
pop
addr16
out
lock
sub
adc
js
fucomi
mov
out
ret
je
in
aam
mov
and
dec
ret
test
les
jb
aad
mov
xchg
dec
mov
fimuls
out
fistl
push
pop
xor
xor
sti
push
lret
pop
add
sbb
dec
cmp
test
xchg
dec
rcrb
test
mov
push
or
jge
shll
sahf
cmp
movsb
xlat
sahf
jo
in
insb
stos
jnp
faddl
out
rcr
dec
mov
xchg
jle
fildl
sahf
icebp
mov
or
push
xchg
mov
in
and
xchg
sbb
out
ret
push
aaa
pop
push
adc
and
fcom
lcall
nop
sarl
sahf
sbb
pop
push
aas
fnstcw
add
cmp
shl
add
mov
shll
stos
lods
sub
sahf
bound
or
jno
xor
ret
out
jmp
ljmp
jbe
adc
push
or
outsl
arpl
jns
xchg
mov
add
ja
lahf
repz
push
daa
lret
fs
cmp
fdivrs
decl
les
jmp
cmpsb
pop
addl
ss
lret
xchg
nop
sub
pop
lea
and
sbb
repz
std
in
sbb
sub
xor
cmp
sarl
popf
jecxz
out
pop
ljmp
mov
fwait
inc
mov
in
push
into
sbb
out
pusha
push
icebp
xlat
push
xchg
loopne
fld
int3
mov
mov
lret
sahf
call
mov
jecxz
xor
mov
xor
sub
add
aam
xor
out
inc
or
inc
call
lods
xchg
push
push
inc
test
xor
fcomi
mov
nop
xchg
dec
or
dec
aam
lret
lea
jp
sub
pop
cmc
repz
push
pusha
dec
shll
xchg
jmp
fwait
xor
out
jl
cmp
dec
push
insl
scas
jmp
repnz
add
aaa
push
loop
mov
jle
fwait
mov
mov
movsb
adc
outsb
das
inc
into
leave
xchg
push
add
push
push
dec
xor
adc
or
outsb
shrb
aas
movsb
sahf
test
mov
mov
sub
fcomi
shrl
test
xor
jbe
push
imul
dec
inc
insl
adc
push
inc
push
pop
mov
scas
jbe
lods
div
mov
push
test
aad
mov
jge
or
xchg
out
xor
add
test
xchg
insl
es
lock
and
mov
outsl
pop
inc
or
fsubrs
lret
add
cmp
orl
cmp
push
cmp
outsl
scas
add
add
jecxz
add
ja
xchg
popf
mov
push
add
pop
add
mov
ds
popa
lret
or
xchg
push
das
jne
mov
adc
dec
int3
sub
add
aam
mov
push
mov
push
repnz
cmp
jmp
lahf
mov
cwtl
inc
lret
pop
push
movsb
shll
mov
xchg
fwait
xchg
mov
cld
je
jno
cltd
sub
jle
dec
mov
cmc
mov
minps
jno
cmc
lock
or
insl
movsb
add
das
xor
scas
jmp
sbb
pop
xchg
mov
jle
ret
arpl
jl
mov
add
mov
adc
pop
xor
test
jle
sbb
xchg
mov
dec
gs
popf
daa
push
and
nop
jge
lret
dec
xor
lods
xchg
or
loope
hlt
test
outsb
xchg
stos
arpl
pushf
in
lret
jnp
fldcw
shl
cld
cld
and
cmp
nop
test
mov
ret
testb
sti
mov
fidivs
test
test
mov
push
lods
add
add
mov
dec
mov
sbb
inc
insb
stos
loopne
inc
sub
jle
inc
dec
sbb
mov
push
mov
div
icebp
lahf
lahf
addr16
aaa
int3
gs
cmp
inc
leave
inc
movb
and
mov
sub
repnz
fsubl
adc
xchg
mov
fdivs
mov
dec
out
add
lods
nop
stos
adc
cmc
pop
jmp
push
mov
sub
xor
nop
and
mov
cmp
repnz
mov
and
mov
mov
shlb
sbb
mov
inc
and
cmp
sub
push
sub
add
mov
mov
and
inc
pop
sub
xor
mov
imul
ds
cmp
std
pop
lret
movsb
fbld
stos
dec
pop
xchg
movsb
jns
js
shll
pop
add
das
loopne
add
mov
inc
or
and
push
jb
rcrb
jg
loop
sub
scas
xchg
out
fsubr
sub
idiv
mov
sub
das
loopne
cmp
dec
hlt
sbb
cmp
outsl
mov
lcall
push
or
mov
or
add
xchg
lret
cltd
in
cltd
cs
mov
mov
lock
js
insb
jmp
repz
in
push
test
xor
pop
cmp
sbb
outsb
push
pushl
imul
rorb
xchg
dec
mov
test
push
push
add
xlat
cmp
enter
mov
mov
cmc
cli
pop
mov
push
add
stc
lods
push
sub
or
cmp
cmpb
aad
push
test
cmp
or
xchg
mov
cmp
call
inc
loopne
mov
pop
dec
pusha
push
fs
add
shr
addr16
or
fnstsw
and
mov
lret
pop
or
fsubr
cmp
push
mov
inc
inc
xchg
mov
in
add
mov
add
scas
add
leave
xor
gs
ljmp
cmp
push
addr16
add
xchg
test
popw
or
jecxz
add
das
lea
and
jmp
das
pop
and
shl
popf
fnstsw
lods
insl
std
xor
xor
or
mov
scas
aas
add
push
arpl
dec
xor
nop
shll
in
insl
in
int3
inc
or
pavgw
adc
cmp
nop
mov
stc
sub
push
outsl
pop
jg
shlb
mov
cmp
and
mov
adc
sar
loop
add
bound
daa
imul
inc
repz
sti
dec
arpl
lret
inc
imul
loope
or
pop
testb
in
inc
sbb
mov
jno
scas
in
pop
xor
imull
shll
shlb
jbe
stos
int3
psubq
adc
pop
sbb
adc
inc
jge
int3
nop/reserved
cmpsb
or
pop
cli
add
roll
inc
mov
shrb
testl
pusha
ret
push
sahf
bound
cs
out
test
jg
adc
jne
xchg
inc
clc
mov
xchg
cmc
sbb
push
pop
xchg
dec
in
es
stos
mov
sarb
dec
out
xor
pop
in
dec
dec
sti
xor
cmp
mov
add
mov
orl
lea
inc
cmpsl
adc
xor
pop
cmp
ljmp
sub
or
cmp
outsl
loop
sbb
push
ret
mov
xchg
rcrl
sbb
xlat
aas
out
stc
js
hlt
imul
cmpsb
jb
adc
jbe
adc
mov
in
mov
push
sbb
adc
lock
es
push
pushf
push
pop
pop
filds
fdivl
fldenv
cmpsb
bound
bound
or
jmp
push
nop
sub
rolb
jb
inc
test
mov
add
lods
mov
xor
fsubrl
add
int
fadd
arpl
fsubr
scas
sbb
push
fldt
shrl
repnz
pop
mov
gs
mov
sahf
mov
push
insl
dec
popf
insl
scas
mov
insb
int3
into
stc
scas
fistps
outsl
fistpll
pop
fcomi
or
inc
xor
mov
and
pop
movsl
fidivs
and
insb
xchg
into
sub
ret
ret
add
hlt
xchg
fiadds
fisubrs
cmpsl
inc
jb
icebp
xchg
sahf
iret
inc
mov
outsb
pop
lcall
cmp
cltd
pop
cmc
jle
add
aam
jge
cmpsb
fadds
pop
mov
and
lods
inc
mov
in
push
adc
xchg
popf
test
pop
or
outsb
imul
mov
aaa
pop
scas
jo
jg
or
jnp
inc
jbe
je
stc
push
adc
xor
pop
mov
xchg
pop
notb
in
dec
pop
test
jg
cmpsl
mov
jle
cmpsb
adc
mov
mov
jae
jge
cmpsl
scas
mov
inc
mov
and
pop
and
mov
lock
fcmovbe
pop
mov
in
cmpsl
scas
and
push
xchg
out
sbbb
jmp
inc
cmc
pop
das
mov
inc
cmpsb
test
iret
out
jecxz
mov
mov
sarl
dec
and
jnp
arpl
lcall
popw
btc
pop
add
pop
xchg
mov
gs
xchg
cmp
icebp
ret
aas
data16
inc
mov
leave
xor
outsl
leave
sub
int3
pop
add
jbe
std
pushf
jp
cmp
rolb
cwtl
adc
and
rcl
into
adc
adc
mov
ftst
divl
mov
mov
dec
sbb
sub
cmpsb
jecxz
pop
test
xchg
sbb
push
lea
mov
lret
lret
xchg
add
mov
cs
iret
xchg
mov
popa
aas
pusha
fdivl
sub
xchg
and
cmp
sahf
xor
or
dec
add
xchg
je
adc
adc
rorl
cmp
cmp
shr
inc
jns
mov
mov
lcall
repz
cmp
push
lods
cmpsl
out
mov
jb
mov
push
sub
inc
jb
aas
imul
shrl
add
or
adc
mov
sbb
cmp
or
stos
dec
imul
add
mov
sbb
cmc
mov
sbb
imulb
mov
sub
lds
cmpsb
mov
lods
sub
mov
mov
inc
push
mov
out
imulb
aas
lea
xchg
pop
mov
lods
sti
jmp
sbb
xchg
mov
sub
and
pop
mov
push
ss
js
and
and
cwtl
shr
xor
dec
test
mov
mov
sub
xor
jns
pusha
push
inc
repnz
jne
add
push
mov
xlat
pusha
mov
lcall
hlt
shrb
inc
mov
xchg
or
pop
xchg
xor
jae
jl
lahf
pushf
cwtl
ss
nop
xor
push
push
leave
popf
mov
mov
iret
in
jmp
or
sahf
icebp
sahf
xor
mov
js
lods
or
push
push
sbb
jp
hlt
andl
insl
and
aas
bound
xor
outsb
clc
shlb
mov
mov
pop
push
xchg
shll
xor
adc
pushf
dec
inc
mov
leave
dec
xchg
ss
xchg
jge
in
das
inc
and
fsubp
or
lds
lock
stc
xchg
mov
sub
mov
jae
jb
sub
iret
lret
test
stos
jne
mov
sub
mov
scas
or
test
inc
cmc
pop
scas
cmpsb
cld
push
add
jmp
jl
setle
pop
lahf
mov
dec
mov
mov
fwait
popa
notb
xor
add
sbb
sub
pop
pop
jno
adc
cmp
ja
push
adc
mov
xchg
cmp
cs
repnz
ljmp
pushf
adc
xchg
lret
addr16
dec
adc
cmpsb
cs
stc
jo
dec
jl
ja
arpl
adc
sbb
xlat
cltd
dec
lds
ljmp
int3
clc
mov
out
pushf
clc
mov
inc
jl
loopne
pop
xor
or
aas
in
mov
cmp
xchg
fistl
pop
movnti
in
mov
mov
nop
movl
out
out
outsb
lods
stos
add
lock
loopne
out
pusha
dec
iret
out
xchg
xchg
sbb
popa
decl
addl
scas
jmp
xchg
and
fisttpll
adc
negl
scas
pop
lock
xchg
leave
scas
arpl
scas
lea
scas
lea
insb
xor
sbbb
stos
mov
push
or
mov
fmull
jae
scas
mov
scas
test
popf
adc
inc
jge
jb
add
sub
jae
xchg
pop
rcll
popf
or
mov
xor
or
call
sub
sti
enter
and
sbb
mov
cmp
jge
push
mov
mov
dec
in
loope
dec
push
scas
sbb
rorb
add
pop
cmp
hlt
cmova
addr16
ljmp
lret
imul
sub
loope
or
negb
lret
popa
xchg
mov
push
sti
jno
jnp
pop
aam
pop
sbb
lcall
iret
ret
repnz
imull
xchg
loop
mov
ret
adc
stc
pushf
jecxz
sub
jmp
add
cmp
leave
mov
fdivrs
ds
dec
jno
sti
cwtl
test
mov
stos
movsb
xchg
int
push
pop
in
adc
ret
cmpb
cmp
mov
xchg
js
scas
sub
lds
xchg
leave
push
mov
inc
and
in
sti
repz
push
jmp
push
ljmp
lcall
xchg
cs
dec
insb
xorb
xchg
add
sahf
and
in
lea
and
lods
xchg
add
rcrb
repnz
test
dec
sti
into
fcmove
mov
xchg
pop
sub
cli
loope
mov
call
and
mov
out
xchg
icebp
or
push
movsb
jne
data16
ljmp
mov
aas
jge
mov
dec
ja
xchg
push
ljmp
int3
ss
or
mov
rcrb
mov
inc
jbe
mov
sub
dec
inc
jo
xchg
xchg
jb
and
push
lahf
test
adc
sub
in
xlat
xor
sbb
push
cwtl
jg
dec
cmp
jnp
jns
adcl
dec
pop
pop
mov
insl
hlt
or
inc
ss
pop
in
testl
sbb
scas
enter
mov
jne
add
cld
add
xlat
jne
dec
int3
int
xchg
dec
out
fsubl
cmpsl
fstps
bound
xor
dec
pop
inc
rcll
stos
mov
dec
mov
testb
inc
cld
sub
lcall
dec
into
rorl
xchg
leave
xchg
movsl
jb
push
andb
mov
xchg
fwait
mov
mov
pop
add
or
es
mov
das
adc
insl
or
movsb
and
lret
outsl
push
sbb
or
cli
xchg
or
movsb
pop
aaa
iret
add
pop
dec
inc
xchg
lods
stc
inc
cmc
sub
inc
cmpsb
pop
dec
stc
out
mov
mov
jge
cli
insb
jecxz
adc
add
adc
mov
cli
cmp
mov
cmp
imul
add
pop
add
mov
dec
push
jp
rclb
aad
mov
lcall
ds
xchg
mov
pop
pop
dec
mov
loop
lods
jo
fmuls
insb
gs
test
cwtl
rcl
rorb
mov
mov
repz
push
movsb
adc
sbb
hlt
in
add
xor
xor
inc
icebp
dec
jns
inc
adc
leave
les
dec
xchg
ljmp
es
in
mov
or
insb
in
pushf
dec
rclb
xorb
cli
jbe
idiv
mov
pop
mov
pusha
adc
mov
lock
out
sbb
mov
ret
push
mov
out
pop
inc
mov
icebp
push
add
sub
in
inc
cmc
scas
ret
sbb
std
out
jbe
rclb
jo
roll
mov
and
inc
cmc
ljmp
mov
movsb
jmp
cmp
adc
mov
push
dec
int
sbbb
cmp
lea
xchg
mov
xchg
dec
ljmp
mov
dec
cli
jbe
imulb
push
aad
rorl
jmp
cmp
xchg
dec
and
push
push
mov
xchg
sub
outsb
into
int
fcomps
movsl
out
fcmovu
lods
lahf
pop
or
inc
inc
lods
imul
das
inc
dec
les
mov
push
mov
and
jb
jne
pop
add
shl
mov
outsl
test
fadds
std
dec
mov
and
lods
sub
leave
test
mov
push
daa
and
repnz
add
arpl
or
sahf
jbe
xlat
lock
xor
adc
add
stc
adc
mov
ret
or
mov
mov
add
pop
fdivrs
data16
mov
mov
inc
das
cmp
sbb
pop
fwait
cmp
mov
and
mov
fwait
shr
insb
add
cltd
out
xor
jnp
popf
out
imul
inc
xor
rol
lock
jmp
ja
jne
xchg
and
insl
adc
rclb
jmp
push
mov
mov
out
mov
orl
mov
int
adc
adc
fistpl
add
les
insl
add
push
popa
mov
lea
mov
inc
nop
or
leave
inc
movsb
lock
mov
testb
adc
js
pop
cli
mov
lock
hlt
mov
fwait
pop
mov
movsb
pop
push
nop
test
popf
and
imul
inc
aam
repnz
test
icebp
cmp
or
mov
xchg
leave
in
int
mov
int3
xor
sub
lock
xchg
mov
call
inc
pop
or
and
mov
add
jp
in
fwait
xor
cld
je
ljmp
push
mov
rcrl
fistpl
inc
mov
lcall
pop
aaa
mov
outsl
dec
xchg
arpl
adc
pop
sub
call
and
adc
dec
movsl
shll
ljmp
jl
fs
mov
add
ret
repz
or
mulb
mulps
jns
sbb
dec
das
xchg
aas
test
iret
inc
jmp
or
mov
xlat
mov
in
cwtl
xchg
xor
mov
rolb
push
xor
adc
scas
stos
insl
xchg
out
nop
mov
mov
shrl
lods
add
ljmp
and
sub
cmp
mull
ja
pushf
xchg
clc
cltd
push
and
pusha
in
test
scas
mov
xor
imul
rcrl
dec
push
mov
and
adc
nop
in
fists
outsb
rcl
ljmp
ljmp
jge
adc
mov
push
mov
mov
andl
cs
test
cmp
sbb
cmc
sub
pop
cmpsb
scas
mov
scas
or
xchg
fsubp
out
mov
pop
pop
dec
sar
out
nop
rcrb
shl
addr16
rclb
sub
jns
jnp
mov
fmuls
mov
or
pop
gs
mov
stc
movsl
xchg
insb
fwait
jecxz
aam
ret
insl
mov
pusha
mov
lods
xlat
dec
sbb
push
js
jge
xchg
out
dec
adc
mov
push
mov
adc
jge
outsb
ja
mov
aas
jmp
jae
aam
ds
cmp
clc
bound
mov
lock
leave
xchg
cld
imul
dec
sub
jle
shl
mov
xchg
add
es
or
in
inc
pop
pop
out
mov
fiaddl
push
clc
leave
jle
and
les
xor
inc
loopne
jmp
fldcw
in
loope
xor
mov
xor
les
sub
test
ret
rorl
movsl
jnp
cmp
mov
adc
pushl
push
mov
sbb
dec
sub
imulb
lea
push
insb
inc
mov
mov
mov
mov
jnp
mov
sbb
dec
mov
xchg
mov
shl
mov
mov
decl
sbb
jmp
push
int
shl
out
push
addl
mov
insb
in
ret
jle
push
inc
test
pop
mov
pop
outsl
and
sbb
pop
mov
jp
lret
push
movhps
cltd
jle
jae
sub
sbb
xorb
pop
lahf
dec
data16
scas
test
sub
nop
mov
sub
pop
inc
out
es
shrl
jne
je
pop
out
fdivp
lret
cmc
jge
frstor
addb
cmp
in
shll
test
scas
or
push
test
jne
ss
movsb
jmp
pop
pop
fistl
ja
jbe
fwait
imul
and
fbld
pop
imul
cli
mov
negl
testb
mov
cmp
mov
xchg
jo
inc
xor
jp
stos
pop
fnstsw
and
int3
jae
push
add
addr16
subb
aad
loope
adc
xchg
enter
mov
jl
mov
adc
bnd
push
jo
cmp
add
cmp
adc
dec
add
ss
fistl
roll
mov
pop
lods
jbe
mov
and
out
mov
pop
sarl
add
pop
add
xchg
jmp
add
jmp
loope
mov
out
cmovge
and
out
fldenv
ljmp
mov
pop
mov
out
inc
ja
push
jbe
mov
cs
xchg
inc
mov
xlat
dec
mov
das
repnz
and
adc
ljmp
popa
mov
lods
imul
loop
dec
xor
int
ficoml
in
xchg
cli
in
jg
dec
xchg
xchg
pop
pop
int
das
dec
fwait
ja
inc
ret
xor
mov
add
xchg
movsb
int
lea
mov
mov
mov
fldt
add
das
scas
stos
mov
xor
in
sahf
daa
fs
add
dec
jo
stos
out
in
pusha
mov
inc
mov
imul
cmp
ljmp
fmul
lock
test
jecxz
in
add
push
add
loope
shll
sbbb
inc
sub
out
jmp
dec
addr16
mov
inc
or
pop
sbb
lods
xor
sub
xchg
xor
jnp
hlt
shrl
add
or
sbb
lret
lea
icebp
dec
pop
loope
test
mov
addr16
sub
mov
adc
arpl
mov
icebp
test
pop
inc
cmpsb
mov
outsl
mov
dec
icebp
pop
fidivl
fistps
lods
out
imul
cmp
aas
lds
int
test
das
pop
arpl
outsb
addr16
push
inc
xchg
dec
xchg
loopne
test
push
lret
fidivrl
pop
or
pop
bound
test
mov
mov
adc
xchg
rclb
mov
inc
stc
jno
mov
lahf
rclb
xchg
fists
clc
out
xchg
loop
add
dec
stc
sub
sbb
insl
lret
jae
cltd
dec
pop
mov
repnz
loopne
jge
lods
cmp
or
sti
or
iret
or
cltd
dec
movsl
mov
dec
fdivrs
adc
jge
mulb
mov
loop
pop
iret
mov
pop
icebp
pop
or
mov
roll
call
lret
loop
fs
stc
mov
xor
in
cmp
nop
sti
arpl
shrl
shl
out
imul
xchg
jbe
dec
in
mov
stos
test
int3
push
mov
mov
pop
mov
in
xchg
es
out
ss
stos
xchg
cmc
cmp
xor
mov
psraw
pop
and
iret
iret
mov
int
fdivs
loope
inc
push
pop
inc
inc
inc
aaa
fsubrp
addr16
jns
nop
and
sub
sub
in
add
cmp
push
dec
or
mov
mov
sahf
pop
cwtl
shlb
mov
jns
mov
cmp
push
mov
jae
into
cmp
mov
cmp
into
jmp
xchg
nop
cmpsl
sub
mov
ja
adc
test
mov
dec
outsb
cmp
cmp
iret
dec
rolb
repz
lods
mov
lods
and
fistpll
xchg
xchg
xchg
daa
rorl
int3
hlt
shll
in
xor
pop
stos
ror
movsl
adc
hlt
push
ret
incl
test
jmp
lcall
add
dec
jle
out
data16
fs
push
imul
mov
test
cmpsl
lods
inc
push
xor
cmpl
jns
adc
push
push
dec
enter
ss
push
fstps
test
rclb
xchg
mov
mov
negb
dec
or
fidivrs
push
lret
test
aam
call
mov
push
inc
cmp
pop
xor
icebp
sbb
sarl
dec
lods
imul
and
fidivl
inc
hlt
jbe
inc
mov
daa
scas
mov
mov
jg
int
loopne
sti
inc
and
push
push
sub
jg
movsl
or
sbb
jmp
rcrl
pop
mov
push
add
jecxz
jb
add
cs
rcr
push
cmpsl
and
add
lock
jne
in
clc
mov
ror
mov
push
pop
dec
push
cmp
loop
push
outsl
out
jno
cltd
and
scas
add
cmpsb
imul
xchg
lret
jb
test
and
int
out
adc
aaa
lea
jae
lds
mov
lock
jmp
sub
ret
insb
js
sbb
or
rcr
int3
daa
jbe
sbb
push
and
push
push
pop
dec
fdivrs
mov
das
ja
mov
divl
aaa
test
loopne
and
jbe
rcrb
push
cmc
push
mov
sarb
aam
pop
jle
xor
lret
loopne
fs
and
push
mov
loope
inc
push
out
fwait
dec
mov
fists
es
mov
scas
icebp
jnp
pop
sub
orb
and
jle
adc
or
sbb
loop
aad
or
andl
inc
fists
sub
fildl
call
cmp
out
fcompp
jmp
jno
lods
push
sbb
pop
jmp
dec
stos
cli
mov
ljmp
hlt
jnp
adc
ljmp
xchg
out
inc
xchg
xchg
flds
sub
sahf
ja
test
orl
jne
pop
pop
subb
jno
cwtl
je
jg
adc
sti
pop
ljmp
gs
repz
add
cli
shrb
mov
pop
out
add
pop
add
addr16
lods
cmpsl
pop
into
pushf
pop
mov
inc
lahf
addr16
xchg
lods
mov
mov
adcl
push
push
dec
subb
cmp
stos
sbb
ficomps
les
in
xchg
and
mov
pop
sbb
ja
fistpll
movsb
lcall
in
in
sub
inc
xchg
jp
or
clc
add
mov
aaa
sub
pop
aad
sbb
rolb
mov
ljmp
xchg
aas
push
mov
mov
fptan
scas
cmp
lock
imul
orb
enter
jbe
sub
frstor
adc
cld
push
add
xor
fcomi
fnstsw
jae
stos
rcl
shlb
mov
add
insl
les
mov
jae
xor
mov
add
and
add
or
lret
add
mov
aaa
and
xchg
arpl
in
lret
xor
add
xchg
mov
jbe
adcb
aam
inc
cltd
sbb
into
and
adc
jb
imul
inc
hlt
push
ret
repz
cs
mov
mov
stos
inc
jo
mov
in
cmp
dec
xchg
sets
dec
push
lahf
dec
lret
and
dec
orl
sbb
lods
test
inc
xchg
sbb
or
divl
mov
test
cltd
popa
inc
jecxz
jnp
jbe
pop
mov
insb
out
ffree
mov
out
xor
pop
push
in
pusha
cli
and
mov
xor
mov
pushf
mov
and
pop
cmpl
mov
leave
aad
sbb
sub
and
cmpsl
cmpb
shl
dec
nop
out
movsb
xchg
mov
mov
jg
adc
divl
lcall
push
mov
adc
js
sub
pop
shlb
jbe,pn
minps
jbe
divl
test
add
xor
xchg
nop
sbb
fisubrs
inc
push
loop
repnz
dec
inc
or
rol
mulb
lods
bound
sahf
mov
fildll
popf
imul
push
test
cwtl
mov
or
stc
das
push
ret
adc
sub
aam
or
rcrl
pop
pop
testl
lret
loopne
jns
xor
xchg
cs
nop
nop
xchg
in
sbb
sbb
in
jge
jnp
sti
call
mov
pop
mov
popa
lret
jmp
fdivs
mov
sub
imul
sbb
dec
or
adc
leave
in
sbb
mov
cmp
leave
in
ss
cwtl
iret
sub
mov
xorb
mov
jmp
xor
dec
mov
dec
sti
mov
mov
push
dec
inc
bound
outsl
xchg
push
int3
add
test
sub
add
imul
xor
jb
and
es
xchg
clc
push
inc
or
mov
sbb
outsl
movsb
mull
sahf
push
imul
in
jne
stc
pop
rclb
repz
ret
pop
adc
dec
lahf
in
mov
add
fs
test
push
mov
int
mov
xor
dec
mov
movsl
pop
loope
xor
cmp
add
jne
cmp
pusha
jbe
adc
inc
pushf
cs
inc
and
repz
add
pop
test
xor
xor
aaa
xchg
repnz
xor
add
jp
inc
and
sbb
mov
mov
daa
push
mov
adcl
mov
xchg
call
imul
inc
cmpsl
cld
pop
js
sub
insl
mov
lahf
xor
roll
mov
xchg
cwtl
mov
jp
add
xchg
pop
lock
inc
stos
mov
aad
mov
out
shl
in
ret
pop
iret
lahf
lret
add
xlat
shr
cli
push
test
sub
or
and
xor
bound
ds
cmp
sub
mov
out
mov
mov
or
sub
xchg
sbb
ljmp
dec
dec
sub
lods
out
mov
adc
mov
stc
dec
dec
cli
mov
ljmp
fisubrs
adc
clc
pop
cs
loopne
adc
jp
testb
rcrl
push
fidivl
in
jge
repnz
pop
xchg
cmp
loope
insb
mov
test
jge
outsb
mov
dec
pop
neg
push
xchg
into
sub
and
bound
fnstcw
scas
outsb
or
lahf
jp
iret
adc
popa
ret
daa
and
sbb
fs
pop
push
int
fucomp
cmp
add
inc
jecxz
xor
mov
pusha
in
std
mov
cmp
lcall
and
push
and
and
and
xor
dec
test
fwait
jne
and
mov
int
add
or
push
xchg
jle
inc
lods
data16
rolb
lods
in
xchg
inc
fimuls
lods
or
pop
mov
jo
movb
adc
daa
adc
cmpsl
scas
xor
cmpsl
daa
cmc
into
inc
dec
std
sahf
add
popf
cmp
or
dec
in
fisubl
sarl
imul
sub
dec
adc
lahf
push
icebp
add
icebp
popf
lea
jbe
movsl
xchg
inc
pop
lret
orl
xchg
push
push
pusha
pop
in
push
jns
fwait
adc
jae
jbe
fcomps
jp
mov
popf
cmp
in
test
test
dec
fldcw
xor
pop
jl
out
popf
cmp
sbb
das
int3
or
std
add
jb
inc
lret
mov
call
int
test
fdivrl
sbb
jo
mulb
adc
pop
mov
faddp
sarl
xchg
int3
inc
dec
jno
out
popf
push
xrelease
dec
sub
mov
orb
cld
int3
or
push
inc
pop
nop
or
fists
cmp
mov
aaa
test
loopne
jle
inc
imul
mov
pusha
jecxz
loop
jae
sub
inc
or
inc
add
gs
call
es
pop
lcall
push
mov
das
jb
push
fcoml
shl
sub
jg
sub
clc
xchg
mov
cli
pop
push
sbb
sbb
cmpsl
arpl
xor
jmp
add
bound
test
outsl
cmp
xchg
push
scas
push
mov
push
loope
rcll
sbbb
rolb
scas
add
xor
loope
mov
js
sbb
in
push
aad
pop
push
bound
mov
addb
fadds
mov
push
jnp
jecxz
iret
dec
mulb
mov
scas
cli
cwtl
push
xchg
fidivrs
add
dec
or
fnsave
jns
int
sbb
ret
int3
mov
out
jp
nop
fldl2t
cld
adc
int
dec
jecxz
cmp
add
add
add
cld
jg
and
pushl
and
add
into
imul
mov
mov
cmp
adc
pop
push
icebp
loop
xchg
roll
mov
fidivrl
push
mov
push
xchg
out
pop
sbb
xchg
mov
jo
jbe
or
mov
lcall
xor
add
cmp
mov
jl
xchg
jo
inc
sar
add
dec
xor
mov
or
stos
mov
icebp
sbbb
dec
imul
lods
mov
xchg
fcomi
scas
clc
clc
daa
dec
ret
insb
sub
sbb
ficomps
imul
ljmp
add
shrb
inc
shll
and
aad
fucomi
jnp
jne
les
jae
sub
push
imul
and
scas
push
xchg
jecxz
bound
push
in
sub
movsb
sub
pop
outsb
xchg
xor
fldcw
imull
sbb
xchg
mov
sub
mull
addl
xchg
dec
or
push
movsl
jmp
outsl
iret
xchg
xorb
aaa
call
cmpsl
std
pop
and
xchg
hlt
cmp
scas
lods
add
dec
xor
addr16
inc
je
or
ljmp
mov
jno,pt
arpl
faddl
dec
inc
int3
mov
mov
and
adc
xchg
in
jecxz
fistps
stos
push
dec
pop
or
pop
stos
mov
sub
cmp
pop
cmp
push
cmpsb
and
add
imul
out
push
cmpsl
je
and
jno
xchg
adc
nop
ret
mov
ror
scas
mov
pop
and
repz
push
adc
mov
jnp
leave
pop
cmp
pop
cltd
cmp
jp
push
lock
test
aam
insb
loop
adc
or
insl
out
mov
xchg
and
pop
inc
loope
xor
xlat
lahf
out
mov
test
out
inc
jne
or
xchg
pop
movsl
pop
sbb
pushf
in
push
dec
popa
sbb
cli
dec
bound
je
out
sub
inc
xchg
gs
rcl
push
lret
add
fwait
pop
test
xor
repnz
lret
aad
fnstcw
stc
jp
int3
push
jl
insb
push
out
and
add
xchg
mov
and
xor
popa
mov
or
jge
seta
mov
push
sbb
shrb
pop
inc
jbe
aas
jp
rcl
jmp
add
and
pop
gs
jnp
test
mov
mov
lds
ret
fwait
mov
sub
negl
cmp
arpl
mov
pop
fsubr
test
xchg
sub
mov
push
pop
and
push
data16
or
aad
adc
orl
imulb
jno
loop
ljmp
enter
out
dec
fstpt
jno
and
sahf
sbb
lds
daa
sbb
xchg
fldt
loope
mov
ficoml
fistpll
xor
push
ja,pn
inc
dec
lods
mov
add
addr16
pusha
negl
sbbl
xor
push
inc
aaa
les
outsb
push
or
fistps
lcall
addl
pop
inc
mov
mov
orl
dec
fldenv
xor
setge
mov
scas
jecxz
out
aas
pop
aam
add
fldenv
andl
test
cmpsb
nop
stos
cmp
jbe
stos
jge
xor
icebp
adc
shrb
pop
repz
stc
int
aas
fwait
test
call
cmpsb
pop
ja
rorl
add
jno
imul
mov
add
xor
adc
sub
call
je
arpl
or
ds
and
and
cmove
nop
dec
sub
fcompl
push
imull
in
cmp
stos
and
push
inc
fs
dec
inc
mov
ds
sbbl
mov
mov
scas
pop
rcl
rol
or
jmp
xchg
sub
xchg
pop
test
sarl
adc
jbe
adc
stos
inc
in
into
push
gs
adc
imul
pop
pop
xchg
jmp
and
shll
aam
popf
sbb
jmp
push
daa
dec
bound
mov
or
inc
fcoml
sbb
test
lcall
mov
sti
cmp
insb
jbe
sbb
xor
icebp
xchg
in
and
mov
xlat
push
repz
ljmp
imul
sahf
xchg
inc
leave
in
cld
xchg
mov
cmpsl
fwait
pushf
cmp
pop
dec
fadds
ljmp
ja
mov
sub
sub
aam
cld
ret
mov
cli
popa
fsubs
outsl
or
xchg
sub
lods
push
push
in
push
repz
cmp
js
movb
popa
sbb
cmp
pop
cmp
push
mov
push
mov
cmpl
pop
sbb
mov
movsl
movl
jg
and
inc
sarl
or
jns
arpl
and
add
inc
jo
imul
dec
scas
in
jg
in
cmp
inc
andl
fadd
or
arpl
std
repz
add
dec
fwait
add
loope
xchg
addl
jno
jl
lock
xchg
sbb
jecxz
icebp
js
mov
cmc
xchg
adc
xor
mov
dec
mov
lds
cmp
out
test
fisttpl
mov
xor
or
inc
sar
pop
sahf
xor
dec
in
out
cmc
nop
loopne
xor
cltd
mov
stos
sbb
movl
mov
rcl
xchg
test
mov
ficomps
add
cmpl
dec
into
or
cmpsb
cld
sbb
add
movsl
mov
leave
jne
gs
rcrl
inc
xor
jae
scas
adc
scas
xor
mov
movsb
stos
mov
aam
ss
negl
rcrl
roll
test
cmp
and
mov
xchg
insl
dec
push
xor
mov
je
leave
int
inc
bnd
mov
call
dec
clc
pop
daa
xor
mov
stos
into
mov
scas
test
out
add
popa
stc
outsb
dec
scas
push
adc
pop
jb
xor
dec
stos
aad
imul
add
add
stc
out
inc
std
fidivrs
movsb
dec
pusha
inc
ds
mov
add
fisttpl
dec
jecxz
add
dec
in
add
outsb
je
jg
pop
sub
or
mov
sar
out
je
adc
mov
popa
das
test
cwtl
and
xchg
or
inc
icebp
cmpl
pop
fisubl
icebp
push
aam
enter
mov
and
mov
test
loopne
mov
aas
imul
lret
frstor
fstps
rcrl
je
adc
adc
jns
lahf
fiaddl
fdivr
aad
sahf
mov
add
pop
sub
cs
sahf
mov
outsb
lods
out
cli
les
xor
outsl
inc
push
test
pop
sbb
loope
add
jno
test
push
dec
push
dec
pop
xchg
test
or
adc
adcl
fistpll
or
stc
inc
leave
ret
clc
sub
comiss
sub
xlat
cwtl
pop
jbe
mov
push
jb
push
lret
lret
fwait
stos
and
gs
adc
aam
and
jae
lret
ret
cmp
add
mov
lods
jb
adc
aaa
and
test
push
je
fwait
jbe
or
test
jecxz
cmpsl
push
jnp
fistpl
xorl
and
mov
jb
cmp
nop
test
popl
aam
fsubs
mov
loopne
jg
aad
cmp
je
push
mov
lods
enter
in
ret
push
jecxz
sbb
pop
or
jbe
jge
mov
addr16
push
pop
xlat
dec
jmp
sub
cltd
push
pop
lret
cmpsl
push
ror
pop
insl
pop
arpl
cmp
xchg
xchg
add
add
es
dec
mov
int3
jg
jp
inc
shrb
xchg
scas
ljmp
add
push
flds
jo
out
jbe
dec
add
xorb
ficoml
push
mov
add
shll
outsb
stc
fcom
out
mov
mov
fdivrl
inc
cmp
outsb
xchg
add
insl
dec
fs
jge
cmp
cltd
jle
inc
test
fprem1
xor
mov
pusha
subl
push
scas
mov
pop
add
fcompl
pusha
mov
inc
sub
sbb
jg
fstps
and
repnz
dec
outsl
cmpsl
ljmp
test
out
in
dec
stos
jl
pop
mov
out
in
inc
fdivrl
cwtl
pop
ljmp
pop
test
mov
data16
adc
jnp
mov
dec
add
jns
fsub
mov
sub
mov
rcll
negb
insl
int
fldt
or
ret
sbb
mov
push
cwtl
sub
xchg
int3
rcl
insb
inc
stc
jge
rorb
adc
push
add
cld
mov
adc
pushf
mov
cld
xchg
sbb
std
call
mov
das
add
fdivs
daa
lcall
icebp
push
jnp
sub
les
pop
leave
fimull
imul
mov
fisubl
je
xor
test
das
add
adc
popa
sahf
xchg
ds
test
dec
sub
lds
xor
outsl
and
jle
fwait
jle
ds
adc
xchg
das
jb
pusha
or
push
mov
push
repz
jo
sbb
stc
cmp
adc
xchg
push
jp
int3
shll
cltd
push
cmp
sub
inc
mov
addl
data16
push
push
push
jns
scas
pop
movsl
xor
ret
cmp
pushf
mov
push
pushf
stc
std
lahf
movl
out
pop
test
idivb
das
or
jmp
js
gs
ficompl
mov
pop
aam
icebp
fwait
inc
pop
jae
idivl
movsl
sbb
sbb
push
jle
mov
incb
mov
xor
outsl
cmpsl
mov
jae
jl
cli
stc
pushf
data16
repz
pop
mov
cmp
adc
mov
imul
cmc
scas
and
ret
icebp
icebp
pop
add
dec
and
imul
push
jns
lods
xchg
gs
fildll
pop
insl
fldt
xchg
arpl
lcall
mov
jnp
jecxz
xchg
sti
or
mov
scas
les
jne
insl
and
cmp
mov
clc
mov
dec
aaa
lahf
loop
pop
stc
movsl
xlat
jb
push
loop
loopne
cwtl
outsl
inc
add
inc
xchg
aas
mov
add
or
xchg
popf
adcl
pop
push
sti
mov
fbstp
pop
xchg
clc
push
pop
xchg
and
jo
cmp
dec
pop
aam
sub
out
fs
jae
push
xchg
out
or
add
dec
pop
aaa
es
sub
add
dec
fbstp
jb
pop
ja
data16
push
mov
sbb
add
ss
in
sub
jp
push
les
xlat
xor
push
lret
je
pop
ljmp
push
mov
cmp
call
lods
xor
jle
and
push
add
jb
jg
or
imul
xor
xor
movsb
add
idivb
or
movsl
xchg
xor
aaa
popa
jg
cmp
in
mov
mov
lods
gs
sbb
sahf
sub
shlb
push
aad
pop
lods
mov
movsb
dec
jmp
push
nop
mov
rclb
lock
loopne
adc
in
and
sub
int3
stc
sbbb
outsl
push
aas
inc
push
rcrl
add
leave
scas
mov
fsubrl
push
mov
mov
in
lock
loopne
mov
mov
iret
lods
push
rcrl
insl
push
imul
or
dec
ds
pop
cmp
sub
pop
test
dec
hlt
rorb
xchg
ret
in
pop
dec
mov
lds
cmp
dec
mov
adc
imul
fcmovbe
insl
aaa
or
push
xlat
inc
sub
xchg
adc
shlb
jns
pop
and
into
test
inc
push
add
sub
sbb
jge
sub
ret
int3
aam
mov
lods
jns
push
jbe
jle
push
test
or
push
out
out
and
mov
push
nop
iret
dec
push
mov
mov
adc
jmp
es
xchg
or
add
rorl
fdivrp
mov
add
push
ja
daa
inc
call
sbb
and
add
or
pop
cli
arpl
dec
xor
and
and
fxch
orb
fucomip
repz
adc
xor
fchs
sub
jmp
loope
bound
mov
push
cwtl
inc
mov
addb
cltd
or
sahf
push
in
jb
clc
int3
std
test
ljmp
cltd
dec
popa
jl
mov
xor
gs
test
imulb
loop
or
pop
cmp
xor
pop
sbb
stos
mov
lods
sub
push
inc
pop
inc
mulb
dec
je
push
sbb
inc
sub
and
pop
dec
pop
xchg
repnz
outsl
aad
pop
fcomps
xor
jae
or
jbe
xchg
pop
cli
in
push
cmp
add
sbb
xor
cld
adc
imul
jge
test
ljmp
pop
and
mov
jecxz
lock
sbb
rcrb
les
pusha
add
mov
sub
scas
pop
shll
mov
mov
mov
add
mov
mov
xor
jecxz
mov
dec
xchg
cmpsl
inc
loopne
adc
dec
sbb
inc
cmp
sbb
test
fisttpll
mov
in
push
divl
insl
stos
aas
push
lea
sbb
adc
lds
stos
push
dec
out
movsb
cld
daa
in
mov
jb
arpl
xchg
xor
add
jmp
pop
and
out
mov
arpl
ljmp
je
jns
mov
arpl
add
shr
aas
cli
bound
mov
and
ret
arpl
aam
icebp
jns
dec
mov
cmp
inc
nop
jle
inc
hlt
in
cmp
mov
mov
fimuls
aaa
push
mov
lcall
pop
in
and
insl
push
mov
test
mov
sbb
iret
mov
jne
push
inc
mov
pushf
call
pop
cmp
or
jnp
xchg
mov
das
pop
xor
and
out
shlb
jmp
mov
or
stos
pop
lret
mov
jl
bound
int
pop
fwait
pop
fstpl
xchg
xorl
xchg
and
sub
jb
and
xchg
std
lahf
inc
mov
push
mov
int
mov
test
adc
lock
pop
sbb
insl
xor
aam
sub
call
push
lahf
loopne
je
in
mov
in
cmc
repnz
add
jno
in
lock
push
cmp
leave
xchg
cmp
inc
inc
mov
fimull
test
repnz
movsl
aad
dec
int3
cmp
in
lea
push
or
jae
sub
xlat
xchg
ljmp
repz
stos
cmp
cmp
sub
mov
sti
hlt
sbbl
aas
testl
add
xchg
add
jmp
pusha
and
and
jecxz
and
mov
jbe
ja
out
sub
pop
dec
dec
jecxz
mov
jl
ffree
sbbb
mov
out
dec
insl
dec
data16
aaa
stc
icebp
xor
scas
add
arpl
scas
shlb
jp
fbstp
test
stos
movsb
aas
push
sti
rclb
jb
inc
ret
lods
push
imull
test
cmp
lcall
shrb
dec
imul
out
sub
mov
repz
xchg
in
jle
pop
scas
dec
jb
or
jecxz
popa
pop
imul
mov
ljmp
inc
je
inc
jns
pushl
mov
jecxz
es
xor
cli
mov
cwtl
in
enter
xchg
test
arpl
sbb
les
sbb
cmpsl
cmp
pop
clc
addr16
jl
and
and
pop
xor
jns
cmc
fs
pop
rcr
mov
je
mov
adc
clc
stc
les
jecxz
xorl
mov
lret
xchg
push
ficoms
or
out
je
fldl
cli
stc
loope
inc
fwait
or
sbb
lods
pop
cltd
in
dec
cmp
pop
jle
ret
sub
mov
jbe
jb
js
lds
in
xchg
pop
out
xor
mov
popa
add
incl
add
adc
imul
pop
jle
dec
lahf
mov
pushl
outsl
rol
rclb
ljmp
sub
shrb
hlt
out
lahf
inc
xor
lret
xchg
pop
cmp
fs
leave
xchg
jnp
leave
lods
int
and
mov
sbb
stc
push
ja
outsb
ficomps
loopne
roll
cmp
mov
ds
out
or
push
fcmove
ss
sbb
push
les
jbe
and
and
adc
icebp
lahf
shl
jp
ret
dec
shrl
inc
jo
push
xchg
dec
mov
and
loope
stos
push
das
mov
andb
add
mov
stc
xchg
fwait
test
jnp
stos
xor
mov
fcos
xchg
cwtl
sub
jecxz
in
stos
push
es
cmp
popf
std
clc
cmp
push
insl
lods
sub
mov
dec
sub
sbbl
std
stc
inc
and
pusha
fcmovnbe
or
push
jo
out
scas
call
xor
cs
push
and
test
fisubrs
in
lock
rorb
je
orl
lret
or
xchg
cmpsl
lods
push
loopne
xchg
dec
incb
negl
jmp
or
and
jo
dec
xchg
and
lret
repz
fiaddl
movsl
mov
pop
icebp
fiaddl
xor
fildll
lahf
inc
fyl2x
lcall
aad
jo
pop
in
jb
clts
dec
inc
mov
push
push
fwait
sti
fisttpl
jle
adc
shll
lods
adc
mov
adc
int
sbbl
sub
sbb
xchg
insb
xlat
xor
gs
pushf
xrelease
adc
leave
cwtl
xor
out
push
ja
mov
dec
in
bound
jmp
lret
adcb
push
stos
hlt
lcall
enter
cmpsb
or
jbe
shll
mov
pushf
repz
xchg
fs
das
cmpsb
push
ljmp
cld
adc
cwtl
xchg
shr
and
aas
fcomip
out
or
or
add
pop
add
sbb
push
mov
fistps
push
and
push
jne
cli
and
movsb
dec
lods
outsb
xchg
pop
push
cs
push
iret
cmc
jle
inc
adcb
sub
push
adc
adc
xchg
cmp
jecxz
fdivrs
xor
sbb
int3
dec
movsb
lds
in
or
xchg
fwait
push
mov
jle
sub
or
mov
push
push
out
mov
insl
mov
into
imulb
sub
adc
into
mov
movsb
icebp
out
lcall
sub
jle
in
out
cmpsl
push
test
pop
es
in
or
inc
sub
dec
insl
into
stc
push
popf
jns
dec
or
xor
cwtl
pop
mov
in
jp
jne
push
xor
adc
scas
ss
lret
adc
jecxz
xor
je
mov
ret
push
push
cld
sub
cmp
fsubp
pop
push
and
insl
test
movsb
mov
gs
cwtl
mov
lcall
push
push
repz
or
adc
les
and
jg
out
imul
push
mov
pusha
mov
enter
imul
cmp
add
dec
lods
test
mov
ds
out
jne
fistps
and
fwait
push
mov
fisubrl
fsubs
roll
fstpt
sbb
mov
fsubp
movsl
bound
in
aad
nop
dec
cmp
jg
lret
fstpt
arpl
into
push
fisubrl
push
xor
aam
pusha
scas
sar
out
add
pop
inc
ud1
and
mov
clc
js
sbb
or
pop
in
pop
inc
jb
stc
pop
xchg
xchg
notl
je
out
lods
outsb
aaa
pop
mov
sub
jg
add
fcmovb
mov
arpl
sbb
idivl
out
inc
mov
mov
mov
cmp
and
addl
fisttps
leave
push
out
push
movsl
test
mulb
into
repz
fcmovbe
mov
dec
xor
xchg
jge
push
in
andb
jle
xor
ljmp
jns
pop
push
dec
je
mov
jne
pop
cli
sub
out
mov
jp
out
and
aaa
pop
mov
dec
roll
add
aas
loop
mov
out
popa
cltd
jg
xor
adcb
pop
in
and
popf
insl
daa
mov
lods
adc
js
xor
pop
mov
out
mov
push
bound
push
inc
in
sub
out
fwait
sbb
add
mov
pushl
cld
mov
fistl
dec
iret
xorb
sbb
fildl
lcall
sub
xchg
xchg
jbe
lock
jno
imul
mov
dec
dec
sub
movb
sub
cmp
mov
imul
sbb
jb
js
ja
jne
pusha
adc
jo
out
test
lds
mov
cmp
xchg
add
push
xchg
loopne
in
push
insl
mov
sub
pop
dec
addr16
fwait
and
incb
add
xor
enter
movsl
xchg
mov
jmp
and
pop
jmp
dec
testl
pop
iret
lock
dec
adc
nop
jns
add
mov
clc
add
push
jne
mov
push
loopne
jecxz
xchg
push
lcall
cmp
inc
mov
and
fsubrs
je
test
mov
inc
les
lret
jp
mov
loope
xor
mov
mov
movsb
inc
xchg
shll
mov
ljmp
xor
mov
loope
out
sbb
loop
stc
adc
adc
fldenv
push
scas
jns
jno
mov
sahf
pop
push
sub
nop
push
xorl
outsb
pop
testl
sub
pop
lea
icebp
aas
das
loopne
push
das
pop
add
insl
inc
adc
cmpsl
adc
cs
iret
scas
loop
mov
xchg
testl
xorl
push
es
mov
push
aaa
add
loop
je
in
lcall
jl
dec
xchg
arpl
test
mov
testl
in
cmp
jo
das
dec
sbb
push
sub
xchg
cmp
push
enter
fildl
roll
or
add
pop
pop
pop
lea
cmp
ret
arpl
pop
and
jmp
push
cld
or
jne
or
cmpsb
aad
push
out
out
inc
fmull
std
xchg
and
pop
dec
mov
jle
xor
mov
push
jg
push
dec
adc
adc
mov
lcall
stos
clc
int3
test
repnz
inc
sbb
inc
cmp
jl
out
movsb
xchg
cltd
adc
add
inc
insb
gs
lock
cs
mov
sbb
xor
test
sub
push
push
fcomi
xor
and
loop
out
cli
ljmp
es
out
mov
test
push
push
ret
or
adc
xchg
in
js
fisttps
popa
xchg
mov
lret
and
jbe
xchg
or
pop
pop
xchg
cmp
and
pop
push
xchg
mov
aaa
pop
fisubl
mov
popa
insb
orb
adc
sub
out
sbb
mov
push
popa
cmp
add
clc
or
mov
js
push
or
fisubl
sahf
or
push
mov
sahf
pop
je
arpl
or
xchg
push
pop
jmp
add
popa
das
fisubrl
cmpl
jmp
or
icebp
inc
pop
sub
dec
mov
cltd
mov
les
inc
sahf
aaa
push
insl
aaa
jbe
outsl
dec
jp
mov
cmp
int
inc
or
outsb
push
enter
inc
mov
jne
js
xchg
jg
mov
mov
cwtl
out
test
data16
ret
lcall
mov
pop
pop
insl
movsl
pusha
cs
jbe
test
popf
or
in
sub
movsl
out
into
mov
scas
aam
jmp
iret
test
nop
mov
mov
mov
repnz
dec
push
movq
stos
dec
inc
add
dec
inc
add
dec
inc
add
dec
inc
add
dec
inc
add
mov
xlat
lea
mov
fwait
cmp
and
add
loopne
fcoml
es
ja
sti
nop
push
negb
jb
adc
pop
cmp
mov
fidivl
lock
stos
into
bound
inc
xlat
enter
enter
jbe
pop
enter
fdivs
adc
imul
adc
mov
pop
andl
dec
sbb
push
fs
in
lds
inc
cmp
loope
outsl
push
call
xchg
adc
sbb
sub
xor
mov
mov
sub
clc
aaa
pop
cmpsl
je
out
add
and
xor
clc
cmp
ss
in
add
or
movsb
mov
imul
packuswb
mov
movq
popf
clc
aas
sahf
out
lcall
scas
fmuls
or
mov
imul
xor
out
dec
mov
and
jae
push
dec
shl
out
ret
add
imul
icebp
aam
fs
ret
shll
test
jmp
xchg
test
shlb
pop
jb
stos
mov
cmp
adc
fs
pop
push
cwtl
adc
loopne
icebp
cmpsl
lcall
imul
test
and
sbb
sub
call
imul
cmp
cmpb
adc
clc
lock
js
cld
repz
fists
and
popf
loope
fnstenv
out
add
cmp
mov
in
dec
ss
stos
push
sub
es
in
sub
lahf
mov
arpl
jbe
inc
mov
mov
pop
les
out
pop
pop
icebp
inc
xor
ss
popa
movsb
mov
fwait
inc
ret
sbb
fwait
in
clc
mov
dec
aas
cmpsl
pop
mov
push
lahf
jmp
ss
roll
fldl
xchg
ja
sbbb
fcmovne
jmp
and
dec
pusha
push
mov
xchg
adc
sub
sti
push
inc
pop
adc
sbb
shlb
bound
or
cmpsb
sub
mov
icebp
inc
ffree
mov
jns
mov
jmp
in
jl
and
gs
xlat
xchg
insl
cmp
popf
and
add
xchg
lds
fwait
adc
nop
jns
enter
out
push
int
cmp
jae
inc
pushf
adc
sub
sbb
fwait
sub
dec
jbe
int
push
imul
xor
sti
xchg
int3
or
int
stos
daa
scas
xchg
xchg
lds
outsb
jne
outsb
repz
pusha
xchg
sbb
jno
sbb
cli
pop
jbe
movsl
cltd
mov
sbb
add
push
pop
add
dec
std
dec
push
xor
es
ja
icebp
scas
mov
test
lret
adc
fistpl
inc
inc
lret
inc
popa
rcrl
icebp
stc
inc
sahf
outsl
leave
es
xor
mov
dec
jno
loop
mov
cmp
lret
shr
xor
adc
cmp
cli
pop
fisubrl
xchg
decl
push
jb
cmpsb
ret
test
lahf
in
sahf
push
outsl
lret
pushf
mov
mov
sub
call
pop
mov
cmp
mov
add
sbb
ss
mov
bound
repnz
cmp
ljmp
adc
push
add
cmp
in
arpl
push
and
jp
inc
push
inc
repz
sbb
adc
dec
sahf
jns
nop
incl
push
mov
ret
outsl
adc
cmp
jmp
fistps
in
repz
pop
add
dec
rcrb
sub
inc
out
mov
daa
cmp
mov
std
lret
xor
xor
adc
lahf
scas
fstps
xor
sub
mov
pop
popa
add
mov
xchg
aas
pop
jecxz
and
mov
fsts
add
inc
xchg
jle
orb
aam
xor
sbb
xchg
movsl
aas
test
stos
jge
data16
sub
jne
mov
test
cmpsb
or
mov
mov
push
iret
jl
rcrl
cwtl
or
sub
xor
dec
in
push
xor
add
fidivs
sub
mov
lret
pushf
in
mov
mov
icebp
scas
loopne
cmp
notb
cli
adc
repz
dec
or
xchg
mov
mov
jb
jge
xor
daa
mov
add
jae
adc
jl
jle
push
mov
cld
enter
mov
mov
push
and
jb
inc
loopne
enter
pop
test
out
sub
fdivrs
in
mov
xchg
and
stc
and
pop
scas
sti
mov
fmuls
jne
xchg
test
pushl
xchg
aam
xor
lods
adc
xchg
es
sti
push
mov
push
xor
outsb
cmc
sbb
cmc
pushf
cmp
lret
mov
daa
shll
stos
lret
inc
or
js
inc
repz
xlat
fwait
jb
cli
lret
dec
adc
testb
adcl
mov
xor
ja
int3
add
iret
add
pusha
add
xchg
pop
push
xlat
xchg
xchg
pop
sar
mov
lds
mov
mov
popw
std
cmp
cmp
xchg
mov
push
andb
inc
les
mov
fucomip
es
scas
xor
inc
in
cltd
nop
and
ja
pop
add
xchg
int3
out
mov
adc
sbb
xor
sub
sub
sbb
and
in
add
jb
push
or
outsl
movsl
mov
dec
mov
sub
mov
fisubrl
adc
outsb
push
xchg
fwait
test
loop
sbb
dec
ret
imul
in
add
push
push
mov
mov
movsl
cmp
push
dec
inc
xchg
mov
mov
pop
xchg
stos
xchg
ljmp
dec
fstps
ror
xor
ja
pop
push
xchg
jmp
jbe
lea
pop
aas
je
or
enter
fcomps
pop
aas
inc
lret
xor
rorl
ljmp
xchg
das
xor
xor
add
dec
out
test
testb
adc
cmpsl
mov
repz
sbb
sti
mov
icebp
inc
test
sub
xchg
shlb
repz
or
shl
xchg
je
mov
stos
mov
push
dec
ljmp
test
sub
fimuls
popf
insl
adc
cmp
ds
scas
mov
and
nop
addb
cmp
add
jg
stos
mov
fwait
xchg
pop
add
pop
fcompl
push
leave
mov
pushf
cs
or
scas
cltd
and
pop
mov
daa
mov
out
mulb
icebp
popa
cmpsb
lock
sub
shll
mov
add
mov
cs
ja
pop
mov
fcmovnu
mov
push
ficompl
mov
add
add
push
jg
sbb
enter
sub
mulb
cmp
xor
sub
xchg
sbb
jae
push
or
addr16
push
popl
lock
call
stos
repz
sbb
pusha
insb
test
loopne
pop
mov
push
xor
lods
cld
and
stc
mov
dec
xchg
repnz
cwtl
loop
mov
pop
and
fbstp
or
jmp
push
adc
xchg
dec
scas
xor
xor
xchg
mov
sbbl
mov
popf
mov
nop
inc
sarb
jmp
arpl
push
sti
cmp
ss
decb
push
dec
or
and
dec
cmp
out
cmp
addr16
bound
ud0
cmp
cmc
movsl
ds
and
sub
mov
cmp
aaa
sbb
jo
fadds
out
adcl
or
jp
adc
bsr
outsl
xchg
mov
sahf
out
neg
cld
in
ljmp
xor
cld
leave
daa
xchg
xor
fiadds
xchg
repnz
sbb
xlat
fwait
pop
lahf
push
mov
insl
jecxz
movsb
outsb
clc
filds
arpl
icebp
insb
mov
push
adc
test
lcall
imul
and
adc
jl
mov
das
lret
push
xchg
inc
sub
xor
mov
mov
scas
imul
aam
movsb
mov
xchg
fbstp
push
xor
int
jb
lods
xchg
std
xor
ret
inc
push
or
add
insl
jo
mov
dec
test
push
out
xor
or
mov
lahf
fs
mov
push
aaa
xchg
jecxz
jle
inc
ja
mov
adc
pushf
sti
inc
outsl
test
mov
adc
repz
adc
jns
mov
mov
sbb
into
mov
dec
or
idivb
aad
stos
test
mov
rcll
adc
in
fidivs
jle
out
mov
iret
mov
jne
sub
inc
sbb
mov
jge
sub
pop
push
aaa
adc
sub
jne
das
daa
push
cmp
or
ret
xchg
insb
in
sbb
out
sahf
cltd
cmp
pusha
or
subl
or
sbb
xchg
lock
mov
sub
jl
xchg
push
mov
and
add
outsl
cmp
int
cli
fisubl
push
repnz
mov
mov
pop
test
xchg
or
push
sub
loopne
test
xchg
adc
cmp
pop
cmp
fs
cmpsb
or
loop
out
outsl
sub
arpl
jmp
pop
lret
je
or
and
xchg
or
pop
mov
leave
jne
mov
lahf
andb
sbb
xor
stos
addr16
enter
pop
fcmovb
jmp
arpl
sbb
dec
or
jbe
jecxz
push
sbb
sbb
xor
jp
jmp
xlat
in
mov
or
adc
add
inc
out
mov
pop
rorl
dec
std
push
inc
or
test
divl
std
call
jne
int
pushf
sbbl
push
jg
lock
and
stos
or
or
mov
cwtl
sbb
xchg
xlat
fbstp
aam
das
sub
es
jns
sbb
test
out
fnstsw
sub
test
imul
pop
sub
mov
add
and
pop
jge
jmp
enter
cmpsb
decl
fisubs
leave
push
sub
xchg
ja
mov
jbe
or
xchg
jmp
iret
xchg
jl
mov
and
mov
out
adc
xchg
in
xor
popa
dec
lds
mov
mov
and
mul
inc
cwtl
enter
pop
push
leave
add
ret
dec
lret
mov
inc
sbb
and
sub
xchg
inc
sub
test
sbb
dec
pop
dec
cmpsb
dec
jo
rolb
xor
sbb
outsl
add
sahf
and
mov
push
outsb
dec
add
add
movb
ret
or
insl
jge
cmp
out
lcall
jae
repnz
lds
jecxz
sub
imul
or
xchg
inc
push
rcrl
in
sti
pop
add
cmp
sbb
pop
iret
pop
add
push
sub
sbb
cmp
outsl
jmp
add
pop
cmp
addb
daa
aas
dec
add
mov
sub
inc
jo
xor
xchg
int3
arpl
scas
mov
mov
in
sbb
mov
xchg
std
je
lds
cmpl
ret
sub
aas
mov
shll
lret
inc
xchg
pop
xchg
lock
xchg
pushl
scas
xchg
push
or
jp
sub
push
mov
and
es
test
call
jl
ljmp
adc
test
jno
add
or
inc
and
loopne
mov
mov
inc
fistpl
pop
test
scas
mov
xchg
sbb
xor
andl
imul
fmuls
ss
push
sbb
mov
xor
je
fisttpll
or
xlat
icebp
mov
lret
cld
fucomip
adc
sub
lock
pop
in
pop
ret
or
adc
inc
fdiv
dec
push
dec
bound
rol
es
mov
ds
inc
mov
lock
fs
mov
arpl
sbb
into
cmp
out
ret
es
test
cwtl
cs
mov
dec
mov
sbb
lods
insl
pop
pop
mov
mov
dec
andl
cmp
push
mov
push
aaa
inc
std
push
fwait
stc
mov
mov
add
mov
and
cmpsl
outsb
insb
sub
sbb
adc
iret
mov
imul
es
mov
cmc
sbb
out
adcl
add
je
out
cmp
repnz
mov
ljmp
add
lret
sub
mov
sub
adc
out
ja
mov
pop
cmp
or
les
sbb
dec
mov
fsubr
and
aas
stos
lret
cwtl
mov
jmp
xchg
pop
test
sarb
div
sbb
inc
jmp
pop
lea
push
into
xlat
shl
in
jp
iret
pushf
xor
sub
popa
xor
push
pop
stos
cli
jle
repz
xchg
jecxz
push
mov
imul
call
std
xchg
jmp
incl
lds
jge
aam
mov
sti
jle
pop
and
fneni(8087
or
test
repz
jns
test
mov
stc
jne
mov
mov
mov
jno
mov
mov
test
push
jecxz
addl
jecxz
scas
dec
pop
cmp
loop
das
xchg
lret
scas
adc
jecxz
add
loop
rcr
insl
adc
scas
fisubrs
dec
xchg
stc
cwtl
shr
mov
ljmp
sub
and
jecxz
jge
pop
jnp
out
pop
sarb
dec
dec
jns
or
mov
mov
sbb
mov
test
xor
dec
ss
dec
push
lea
sub
clc
sbb
cmpsb
lods
outsb
mov
cmp
testb
rol
mov
mov
and
cli
test
cs
out
ljmp
xor
shr
ds
sbb
inc
cmpsb
sbb
and
xor
sub
push
jmp
fwait
sbb
mov
add
loop
push
xchg
or
mov
mov
pushf
lock
sbb
andb
lret
pusha
and
popf
fwait
sbb
xchg
push
lret
fcmovnu
and
cmp
and
add
outsb
sub
dec
push
jnp
pop
test
mov
test
and
fdivrs
shl
inc
pop
js
push
mov
cmpsb
lahf
or
test
andl
mov
pop
dec
ds
pop
enter
out
lret
pushf
or
or
sti
push
roll
mov
xlat
jge
jb
rcrb
call
mov
push
sub
mov
mov
jae
sub
dec
and
test
imul
mov
hlt
lret
lods
orl
cs
outsb
or
orl
pop
dec
or
lcall
lea
out
jle
mov
xor
into
cmp
dec
scas
push
mov
push
mov
mov
fsubrp
xlat
push
sub
mov
lcall
pusha
je
lret
arpl
mov
cmc
hlt
mov
aad
sbb
je
test
mov
adc
cmp
mov
xor
mov
outsb
int3
jo
mov
iret
or
loope
add
cld
pop
push
out
mov
jae
shrb
add
cwtl
lea
dec
lret
pop
and
add
stos
push
pusha
shll
push
inc
dec
outsb
jb
in
dec
adc
movl
cmp
xchg
add
dec
loope
mov
and
fdiv
jae
enter
cmp
call
xor
sbb
hlt
inc
stos
push
out
and
inc
test
and
push
and
popa
push
cmpsb
stos
jp
or
pop
lret
jge
push
fsubs
in
cs
out
cmpb
pop
scas
mov
pop
out
lds
test
cmpsl
mov
pop
aas
lea
imul
ret
cmp
loope
loopne
iret
rep
into
dec
pop
cmpsb
pop
adc
inc
addl
mov
and
fstpt
sub
enter
aaa
inc
pop
jae
insb
sub
push
in
hlt
in
popa
f2xm1
sbbl
or
fsubs
push
sbb
js
mov
daa
cmc
inc
ss
sub
fisubrs
lret
sti
sbb
mov
lds
lods
test
push
sub
ret
cmc
add
mov
out
add
push
into
movsb
cmp
sbb
and
lds
cmp
xchg
das
xchg
and
pusha
clc
pop
bound
stos
clc
cli
movsl
push
pop
out
sbb
adc
movsb
hlt
out
insl
js
arpl
xor
fwait
pop
add
js
mov
add
jmp
push
mov
mov
push
and
add
inc
xchg
xor
imulb
mov
jle
shlb
pusha
sub
push
sbb
icebp
dec
scas
dec
out
xor
push
or
add
out
xchg
cmp
stc
inc
sbb
ret
jmp
cmpsb
int
sub
jns
inc
rcrb
das
pop
arpl
pop
into
outsl
cmp
imul
mov
lea
sub
adc
es
and
push
mov
lods
stc
test
mov
push
pop
shl
jle
loopne
aas
dec
or
ret
sub
fimuls
icebp
mov
xchg
xchg
mov
mov
jbe
stc
and
decb
adc
leave
cwtl
lcall
daa
leave
and
adc
loopne
pop
fsubrs
aad
arpl
xchg
fistps
sbb
cmp
rcr
lret
dec
sub
or
xchg
ss
mov
push
push
mov
das
test
xchg
push
shll
insb
pop
bound
je
pop
xchg
shlb
fwait
addr16
rol
xchg
sbbl
cwtl
dec
or
inc
pop
in
cmp
dec
cli
sub
inc
mov
mov
cmp
stos
sarb
or
sahf
fwait
movsb
bound
lret
lea
push
sbb
xchg
dec
cltd
inc
lcall
fisubl
jcxz
adc
jmp
push
xlat
cwtl
pushf
fidivs
jns
or
push
mov
push
push
push
aaa
mov
in
push
adc
xchg
mov
jb
stc
xchg
sahf
dec
cs
aad
das
loopne
add
ror
flds
clc
lods
lret
and
ds
lahf
test
push
inc
addr16
and
mov
jns
addb
scas
inc
and
out
sbb
add
in
and
jle
dec
lret
lods
jl
jmp
mov
pop
je
in
inc
push
fs
push
insl
shrl
loopne
iret
sub
nop
push
add
jo
dec
sbb
hlt
mov
xor
pop
inc
mov
or
outsl
lods
inc
pop
inc
loope
mov
add
andb
cld
cld
repnz
iret
and
add
pop
add
mov
pop
cltd
pop
movsl
loopne
repz
lret
arpl
adc
aaa
push
or
pop
or
adc
or
jecxz
sbb
icebp
repz
inc
rclb
jns
jbe
addr16
mov
outsl
lds
test
jbe
sub
into
mov
out
popa
dec
adc
cld
inc
gs
sbb
adc
xlat
jbe
xchg
pusha
call
cmp
mov
in
mov
inc
outsb
push
jns
fistl
fld1
loope
xchg
or
fdivs
lods
loopne
adc
popa
and
cmp
adc
fsubp
xlat
xchg
out
dec
test
aaa
push
dec
xchg
sahf
aas
lret
pusha
std
lcall
fstps
daa
mov
adc
imul
sarl
mov
pushf
int3
mov
test
and
int
jge
push
pop
adc
outsb
sbbl
mov
pop
mov
fimull
push
ja
dec
xchg
cmpsb
push
aad
jns
jl
sub
fiaddl
dec
loop
or
add
add
test
mov
sbb
std
jmp
out
pop
ljmp
jno
and
insl
cmp
shll
orb
outsb
cli
xchg
inc
aam
xor
xor
inc
out
push
and
call
and
push
cli
mov
sbb
sarl
adc
mov
cs
cli
sahf
cmp
lock
sub
aam
out
cmc
mov
and
and
insl
or
subl
mov
inc
dec
fsubp
mov
inc
fisubrs
test
shl
pop
jne
jecxz
xchg
cmc
xor
push
ljmp
ja
cmp
pop
inc
sub
xor
push
inc
xor
or
xchg
popf
cmc
dec
in
and
leave
lea
xchg
pop
add
jl
dec
jns
addr16
outsb
out
call
xor
leave
pop
inc
stos
inc
dec
loop
dec
adc
adc
push
push
pop
dec
cltd
sub
sub
and
jno
inc
movsb
or
leave
mov
rolb
cwtl
rcr
test
stos
xor
pop
xchg
ljmp
xchg
mov
adc
pusha
lret
xchg
mov
dec
dec
movsb
cmp
jae
cmpl
lods
and
dec
scas
jecxz
xchg
xor
mov
cmovo
mov
cld
and
mov
push
mov
cli
mov
push
jmp
popa
xchg
call
pop
les
add
aas
cmp
add
dec
mov
int
lods
aad
stc
test
jl
cmc
mov
adc
xor
fisubl
es
arpl
cltd
or
and
mov
sbb
pop
ffreep
cmpl
test
sbb
std
adc
jecxz
test
or
mov
pop
fildll
out
ret
mov
clc
cs
ljmp
pop
hlt
pop
mov
movsb
xor
push
jne
aad
sbb
js
pop
aas
lods
int
pop
fcmovnbe
cld
out
scas
sub
push
daa
xor
jnp
xchg
rcrb
mov
cmp
push
movsb
push
xchg
pop
js
mov
push
notb
push
loop
inc
test
lods
lahf
mov
jle
jmp
inc
fldt
xchg
xchg
mov
and
pop
or
sub
jb
or
lret
cmpsb
data16
xor
out
xor
push
cli
test
imulb
push
mov
ret
xchg
out
jnp
jmp
test
push
es
mov
mov
fidivrl
mov
xor
repnz
mov
cwtl
inc
mov
sti
cmpl
lods
push
fisttpll
mov
cmpsb
fsts
fsts
add
fldenv
dec
inc
clc
jmp
jge
loope
in
test
js
loop
shlb
mov
pop
fcompl
pop
mov
addr16
jae
mov
add
mov
or
adc
mov
cmp
adc
into
xchg
lea
iret
jns
fucomp
dec
pusha
cmp
decl
je
cmp
or
sbb
or
mov
jg
icebp
lahf
pop
insb
mov
in
dec
xchg
mov
rolb
sarb
pop
push
ret
sub
jne
mov
leave
inc
orl
popa
repz
stos
push
test
bnd
cmp
dec
cwtl
pop
in
imul
mov
int
push
mov
or
pop
fwait
push
inc
add
iret
notl
mov
fisubl
lret
pop
sub
jp
ljmp
mov
movsl
dec
pusha
fs
lret
int
lock
mov
lea
xor
mov
cltd
add
mov
insl
lods
loopne
mov
repz
pop
xchg
popf
icebp
in
rcrl
jno
mov
xchg
sbb
data16
adc
inc
out
js
enter
cltd
gs
in
mov
rcr
sub
clc
sbb
call
xor
jmp
sti
ja
push
ret
push
push
adcb
mov
mov
stc
daa
fcmovu
xor
ret
add
mov
inc
cmpb
jae
sti
dec
xor
pop
dec
incb
rolb
jl
in
rcrb
jle
add
pop
fsubr
nop
popa
cmpsl
and
test
xlat
pop
xchg
pop
out
das
loope
sahf
mov
aad
sbb
mov
push
push
push
test
xlat
fcomp
jl
mov
dec
sub
out
jo
cmp
push
inc
nop
jecxz
mov
mov
cmpsb
push
hlt
or
and
sbb
adc
jl
inc
out
lcall
adc
cmp
into
push
hlt
fdivs
addl
in
push
cs
sarb
pusha
out
push
jne
pop
dec
rcrl
mov
xchg
mov
and
mov
xor
shrl
mov
fdivp
fs
push
scas
ret
or
sbb
flds
xor
push
iret
lods
and
adc
xchg
add
or
outsl
xor
repz
addl
fnstcw
jae
xchg
idivb
cld
jae
cmp
stos
insl
xor
pop
xchg
dec
int
sbb
mov
mov
mov
dec
jecxz
cmp
jno
mov
add
mov
mov
repnz
add
pop
add
rolb
leave
int3
xchg
stos
mov
xor
in
mov
imul
addl
mov
jno
fsubrl
es
loopne
jecxz
add
pop
push
add
push
add
stos
inc
stc
mov
fbld
cmc
push
roll
xchg
mov
mov
rcll
mov
jo
jecxz
adc
adcl
subb
push
mov
adc
sbb
jl
mov
test
xchg
pop
movsb
ret
mov
push
add
lods
ret
shl
mov
push
push
mov
mov
movsb
lds
cmp
sbb
daa
sbb
cmpsb
sbb
jge
repz
jl
xlat
scas
inc
je
sti
adc
xchg
inc
ss
inc
lret
jae
test
push
fsubr
test
add
ret
dec
push
into
imulb
pushf
dec
inc
push
xorl
adc
les
fcomps
cmp
push
into
mov
cli
push
mov
scas
xor
pop
dec
sti
call
dec
inc
leave
dec
and
movsl
add
mov
fmuls
add
mov
nop
jae
les
out
or
fsub
int
rcrb
mov
mov
add
cmp
repz
or
loopne
scas
mov
dec
loop
mov
popa
popl
lret
popf
ret
and
mov
jmp
dec
adc
dec
push
addr16
cmc
insl
punpcklbw
jmp
or
push
push
out
nop
mov
test
dec
lret
push
std
arpl
mov
in
repz
xchg
cmp
jp
out
dec
cmp
fisttpl
jle
xor
mov
out
sub
fisttps
imul
fisubrl
mov
fcomps
sub
stos
jge
push
test
mov
inc
push
into
jns
sahf
in
xchg
and
ljmp
xchg
add
jo
push
vmovhpd
lcall
sub
push
fldt
mov
jg
push
and
ljmp
popf
push
or
add
scas
loop
idivl
mov
or
or
roll
add
test
xor
pop
mov
into
sbb
loop
jle
cmp
and
orb
rcll
mov
sub
out
sbb
nop
dec
mov
in
lret
mov
mov
jp
add
mov
jae
icebp
push
sbb
add
adc
and
insb
xchg
and
ss
cwtl
fs
ljmp
jno
bound
inc
and
lock
mov
inc
sarb
jb
pop
inc
jo
push
cmp
enter
scas
ds
jnp
rorl
loop
movsl
lcall
push
xor
pop
jns
rol
mov
jecxz
inc
int
cmp
cs
jmp
icebp
cmp
scas
fadd
xor
pusha
push
push
lock
mov
lea
add
add
mov
negb
hlt
pop
pop
lea
pop
in
xchg
sub
addr16
les
mov
out
pop
add
adc
dec
push
movsl
mov
testl
sbb
call
int3
xor
pop
mov
out
rclb
ret
or
cmp
call
adc
stos
jecxz
mov
or
jae
aad
inc
xchg
pop
cmp
fcmove
fwait
mull
push
loop
fidivrl
sub
fbld
push
rcl
mov
sub
jp
ret
in
mov
outsl
test
dec
pusha
mov
js
jmp
jp
adc
push
push
insl
ljmp
rorb
adc
pop
cmpsl
xor
imul
adc
jbe
xor
das
pop
lahf
popf
mov
inc
push
inc
pop
sub
xchg
inc
mov
xor
stos
lret
ja
gs
movsl
push
pop
jmp
jns
sub
sahf
inc
or
rorl
aas
add
pop
js
add
or
xchg
mov
inc
pop
push
xor
push
push
dec
loop
mov
sbb
shrd
inc
icebp
jmp
stc
dec
int
lcall
imul
jg
and
fs
pop
fisttpl
pop
mov
or
int
ficoms
fstl
test
pop
sbb
mov
xchg
dec
cmp
lea
iret
movsl
push
xlat
xchg
mov
fwait
cmp
stos
in
inc
dec
sbb
push
jmp
push
aad
or
shlb
mov
push
adc
dec
jbe
mov
lcall
or
pop
repnz
cld
stos
pop
lds
addr16
paddusw
xor
test
lret
mov
mov
ficomps
out
sbb
insl
dec
cmpsb
dec
test
push
int
or
lcall
lcall
mov
cmp
adc
and
pop
xor
xlat
test
mov
adc
jp
sbb
xchg
push
or
and
xor
in
lret
add
ljmp
inc
lret
xchg
adc
xor
adc
aas
cld
aam
xlat
or
stos
pop
sbb
cmp
jge
pop
cmp
jae
jle
xor
fldenv
dec
or
and
clc
and
or
gs
mov
mov
leave
lahf
dec
mov
push
shrb
jae
out
sbb
cmp
xor
dec
xchg
or
out
dec
insb
or
leave
subb
jl
push
cmp
jg
sti
jecxz
inc
mov
inc
hlt
aas
mov
aam
push
test
clc
xor
pop
arpl
or
xor
push
loope
leave
inc
jne
stos
or
sarl
inc
fcmovne
xlat
out
cltd
lods
subb
cli
inc
inc
iret
das
jl
xor
jbe
sub
addb
dec
les
jp
xor
cmp
repnz
outsb
leave
pop
data16
stos
cli
in
push
sub
dec
sbb
addl
ficoml
pop
jno
mov
fnstsw
dec
pushf
jnp
into
out
jo
push
repnz
xchg
lcall
loopne
push
jge
divps
mov
ret
stos
loope
fidivl
negl
pop
xor
sti
dec
ficomps
call
mov
fstpl
inc
add
add
add
push
adc
and
cmp
add
adc
add
add
in
add
add
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
push
sbb
sub
xor
cmp
ss
ss
ss
ss
aaa
imul
aaa
xorb
aaa
lcall
aaa
ret
aaa
shll
mov
mov
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
adc
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
loope
out
hlt
cmp
or
add
add
dec
add
add
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
sub
xor
inc
cmp
pop
cmp
add
or
add
push
xor
xor
jae
jns
test
mov
xor
xor
xor
xor
xor
xor
xor
addr16
xor
cmp
arpl
xchg
xchg
xor
mov
xor
pop
aaa
jb
jnp
test
mov
xchg
aaa
sahf
aaa
lods
aaa
mov
shll
aaa
into
aaa
call
cmp
cmp
cmp
cmp
cmp
pop
cmp
mov
xchg
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
idivl
cmp
adc
and
daa
cmp
cmp
cmp
cmp
xchg
cmp
cmp
sub
cmp
jae
jle
xchg
movsl
cmp
lret
cmp
fidivrs
cmp
dec
ds
ds
ds
add
xor
xor
dec
xor
pop
xor
ja
xorl
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xlat
xor
jno
jle
mov
xchg
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
xor
dec
cmp
lahf
movsl
loope,pt
jmp
clc
aas
add
add
add
add
or
adc
sbb
xor
inc
xor
pusha
xor
insb
xor
mov
lahf
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
dec
xor
pusha
xor
xor
xor
xor
repnz
xor
xor
xor
xor
jl
dec
cmp
nop
ds
fstpt
add
add
add
add
xor
pushf
xor
xor
xor
xor
xchg
xor
scas
xor
int3
xor
sbb
daa
aaa
sub
xor
jbe
xchg
cwtl
cmp
cmp
in
cmp
cmp
cmp
push
cmp
push
cmp
cmp
sbb
add
mov
mov
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
dec
xor
xor
je
js
xorb
xor
lods
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
sbb
xor
inc
xor
pop
xor
xchg
xor
scas
xor
into
xor
in
xor
or
adc
sbb
sub
xor
ds
ss
ss
ss
jo
jnp
xchg
mov
xchg
ss
ss
fdivs
fbstp
in
in
divl
add
or
push
aaa
and
aaa
aas
aaa
inc
aaa
push
aaa
pop
aaa
data16
imul
aaa
xorl
aaa
mov
mov
aaa
aam
out
in
aaa
stc
aaa
or
push
cmp
sbb
and
sub
xor
cmp
cmp
data16
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
outsl
cmp
cmpl
mov
sarb
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
dec
cmp
bound
jle
test
xchg
cmp
cmp
sarb
fnstsw
out
cmp
cmp
cmp
cmp
cmp
dec
cmp
pop
cmp
cmp
jle
test
xchg
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
sbb
cmp
jno
ja
jg
test
add
add
cmp
xchg
xor
xor
xor
xor
xor
xor
xor
xor
jne
nop
xor
xor
xor
movsl
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
pop
xor
ss
push
xor
jl
xchg
xor
xor
cmp
inc
aaa
push
aaa
pop
aaa
push
aaa
xorl
cltd
aaa
lahf
aaa
xor
test
lods
cmp
xor
aas
ds
ds
ds
jnp,pt
sahf
mov
rolb
add
add
add
cmp
cmp
cmp
cmp
cmp
cmp
cmp
cmp
and
add
add
add
xor
xor
xor
xor
xor
xor
xor
xor
push
add
push
xor
and
mov
xor
mov
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
adc
sub
pop
xor
je
lods
xor
sbb
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
add
addb
add
add
mov
cmp
cmp
cmp
mov
add
add
add
ss
ss
ss
add
add
or
