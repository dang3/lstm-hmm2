push
mov
sub
xorl
push
movzwl
sub
mov
push
push
andl
call
test
movl
je
adcl
xor
jmp
push
push
xor
andl
inc
push
push
call
xorl
test
movl
je
xor
movl
jmp
sbbl
push
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
push
subl
push
movl
push
call
andl
test
jne
push
push
adcl
call
test
movl
jne
push
push
call
xorl
test
jne
addl
push
andl
push
addl
call
test
movl
jne
push
xorl
push
push
subl
call
notl
test
movl
jne
push
push
adcl
push
call
test
jne
xorl
push
andl
push
subl
call
subl
test
jne
push
push
andl
call
test
movl
jne
andl
push
sbbl
push
addl
call
test
movl
jne
push
andl
push
push
call
orl
test
jne
addl
push
andl
push
push
andl
call
xorl
test
jne
push
push
xorl
call
movl
test
movl
jne
subl
push
xorl
push
andl
call
test
movl
jne
subl
push
adcl
push
xorl
call
test
movl
jne
push
xorl
push
push
decl
call
test
movl
jne
push
push
adcl
push
sbbl
call
xorl
test
movl
jne
push
orl
push
call
test
movl
jne
andl
push
push
addl
call
adcl
test
jne
push
push
orl
call
test
jne
push
push
addl
push
call
subl
test
movl
jne
push
addl
push
push
xorl
call
movl
test
jne
push
push
call
andl
test
movl
jne
orl
push
push
negl
call
orl
test
movl
jne
subl
push
push
call
test
jne
xorl
push
push
sbbl
push
adcl
call
xorl
test
movl
jne
sbbl
push
push
xorl
push
addl
call
sbbl
test
jne
orl
push
push
adcl
call
test
jne
sbbl
push
adcl
push
xorl
call
test
movl
jne
addl
push
subl
push
xorl
call
addl
test
jne
xorl
push
notl
push
andl
push
call
test
jne
push
push
push
xorl
call
sbbl
test
movl
jne
movl
push
addl
push
call
test
jne
andl
push
xorl
push
call
subl
test
movl
jne
push
push
call
orl
test
jne
subl
push
adcl
push
push
andl
call
addl
test
movl
jne
addl
push
push
adcl
push
call
adcl
test
movl
jne
subl
push
push
subl
call
subl
test
movl
jne
adcl
push
adcl
push
call
orl
test
jne
subl
push
push
call
orl
test
movl
jne
push
push
push
orl
call
test
jne
push
movl
push
movl
push
call
test
movl
jne
movl
push
xorl
push
call
test
movl
jne
push
subl
push
subl
call
addl
test
movl
jne
subl
push
push
call
subl
test
movl
jne
sbbl
push
adcl
push
adcl
push
xorl
call
andl
test
jne
movl
push
xorl
push
xorl
push
andl
call
adcl
test
movl
jne
subl
push
addl
push
subl
call
xorl
test
jne
addl
push
push
adcl
call
test
jne
push
addl
push
call
orl
test
movl
jne
subl
push
push
andl
push
xorl
call
adcl
test
movl
jne
push
movl
push
push
call
addl
test
movl
jne
movl
push
subl
push
call
test
movl
jne
push
push
call
addl
test
jne
addl
push
subl
push
call
test
movl
jne
sbbl
push
xorl
push
addl
push
addl
call
movl
test
movl
jne
andl
push
push
push
call
sbbl
test
movl
jne
xorl
push
adcl
push
adcl
call
addl
test
movl
jne
adcl
push
adcl
push
call
test
movl
jne
adcl
push
xorl
push
subl
call
xorl
test
jne
push
adcl
push
push
andl
call
andl
test
jne
push
push
subl
push
call
test
jne
push
push
sbbl
call
test
movl
jne
subl
push
push
call
test
movl
jne
adcl
push
subl
push
andl
call
test
movl
jne
andl
push
orl
push
orl
push
adcl
call
andl
test
jne
orl
push
push
push
call
sbbl
test
movl
jne
sbbl
push
push
call
sbbl
test
movl
jne
sbbl
push
orl
push
call
test
movl
je
subl
xor
movl
jmp
or
movl
movzbl
add
mov
dec
mov
mov
mov
mov
sub
imul
mov
movl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
pushl
call
jmp
sbbl
lea
mov
mov
and
mov
lea
mov
subl
mov
mov
orl
mov
mov
mov
adc
xor
mov
add
movl
mov
mov
mov
cmp
jne
xor
mov
mov
orl
mov
or
xor
and
add
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
jmp
sub
mov
sbb
mov
movl
cmpl
je
cmpl
jne
push
push
pushl
call
mov
dec
mov
jmp
andl
mov
inc
mov
cmpl
jne
pushl
push
pushl
call
cmpl
jb
xor
xor
add
mov
sub
mov
mov
sbb
mov
mov
orl
mov
mov
decl
mov
subl
mov
andl
mov
mov
addl
movl
adcl
mov
andl
xor
add
movl
jmp
add
mov
adcl
mov
xor
subl
lea
push
movl
cmpl
je
cmpl
jne
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
xor
add
sub
mov
adcl
xor
lea
push
addl
mov
pushl
xorl
call
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
call
jmp
mov
mov
andl
mov
inc
mov
cmpl
jne
pushl
pushl
push
push
pushl
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
call
jmp
xor
lea
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
push
call
cmpl
jne
mov
inc
mov
jmp
andl
mov
inc
mov
cmpl
jne
push
pushl
call
cmpl
jb
andl
mov
xor
mov
addl
xor
xor
andl
add
mov
negl
xor
lea
movl
mov
movl
cmp
movl
jbe
mov
mov
mov
mov
mov
mov
sub
xor
mov
mov
cmp
jne
lea
mov
lea
mov
mov
test
je
mov
mov
mov
mov
mov
mov
mov
mov
cltd
mov
mov
add
adc
andl
xor
mov
mov
mov
mov
xor
add
mov
adcl
xor
mov
mov
xor
mov
cmp
jne
mov
cmp
je
mov
mov
mov
xor
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
xor
mov
mov
mov
jmp
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
pushl
mov
pushl
add
mov
mov
pushl
call
mov
mov
mov
jmp
mov
mov
xor
add
cmp
jne
mov
mov
mov
xor
add
cmp
jne
mov
push
xor
add
push
push
pushl
pushl
call
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
mov
movl
mov
xor
add
mov
mov
mov
mov
mov
mov
push
pop
sub
add
movl
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
lea
mov
mov
xor
add
mov
lea
push
mov
xor
add
push
mov
push
pushl
call
mov
mov
mov
mov
xor
mov
add
jmp
lea
mov
mov
sub
mov
mov
mov
mov
movl
mov
movl
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
ja
mov
mov
mov
sub
xor
xor
add
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
mov
mov
movl
movl
mov
mov
xor
add
jmp
mov
mov
xor
add
imul
mov
movb
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
jmp
mov
mov
xor
lea
lea
xor
cmp
jne
mov
mov
mov
xor
mov
xor
mov
xor
mov
mov
xor
mov
mov
mov
xor
add
mov
mov
xor
add
mov
lea
mov
lea
mov
mov
test
je
movl
movl
movl
movl
call
mov
mov
mov
mov
mov
mov
mov
mov
cltd
mov
mov
add
adc
andl
xor
mov
mov
mov
mov
xor
add
mov
adcl
xor
mov
mov
xor
mov
cmp
jne
mov
cmp
je
mov
mov
mov
xor
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
xor
mov
mov
mov
add
mov
xor
mov
add
xor
add
adc
xor
xor
xor
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
leave
ret
xor
adcl
inc
ret
push
mov
sub
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
pushl
push
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
movl
movzwl
xor
mov
mov
sbb
push
mov
sbb
mov
mov
mov
add
xor
add
mov
subl
push
mov
add
movl
cmp
movl
je
inc
mov
andl
mov
inc
mov
cmpl
jne
call
cmpl
jb
mov
sbb
mov
xorl
xor
xorl
xor
addl
add
add
movl
adc
xor
mov
push
xor
xor
mov
add
adc
xor
xor
cmp
jne
cmp
je
jmp
mov
jmp
jmp
iret
push
jae
lret
xchg
mov
shrl
jp
pop
jp
adc
and
imul
xor
fsub
push
dec
imul
pusha
insl
pop
iret
pop
dec
and
jg
jo
jg
mov
fdivr
push
jg
in
cmp
mov
mov
mulps
fldl
push
cli
sbb
imul
adc
cmpsb
jmp
enter
cli
js
arpl
cwtl
pop
mov
repz
cmp
jae
fisubrl
push
jecxz
mov
mov
in
push
dec
or
repz
rolb
push
push
movsl
stc
push
in
loope
xchg
sahf
js
add
pop
addr16
jg
push
test
add
popa
push
push
adc
test
ds
loope
lret
pop
and
rcl
inc
or
or
fsts
cmpsb
scas
pop
or
fwait
ljmp
outsb
lea
mov
and
mov
mov
lock
dec
lcall
adc
pop
inc
adc
mov
out
xchg
pop
xchg
cmp
xor
mov
mov
jb
xorl
jecxz
in
cmp
pop
jle
mov
adc
fs
scas
mov
repz
adc
jl
test
outsl
push
mulb
push
pop
push
sbb
fdivl
lods
cmp
cmp
mov
xchg
fisubrs
lods
sub
imul
sbb
mov
push
sahf
push
xor
sub
cmp
fucomi
pop
je
mov
loopne
adc
stc
xor
inc
xchg
sub
xchg
dec
push
mov
push
jno
jns
js
lods
xor
out
xchg
aam
fisttpl
mov
lcall
aam
lahf
inc
vsubsd
test
add
sbb
add
push
das
push
mov
jne
pop
inc
push
push
or
stc
mov
adc
ds
das
pop
mov
bound
jne
mov
lahf
push
sahf
mov
or
pop
mov
fwait
sbb
cmp
repnz
sbbb
imul
lret
aaa
add
jge
sti
cmpsl
cwtl
rorl
push
jmp
mov
adc
jb
pop
movsl
pop
notb
sarl
jns
mov
pushf
loop
loop
stos
loope
js
or
into
rep
and
bound
dec
dec
popa
scas
dec
fndisi(8087
test
sub
hlt
push
cmp
xor
push
adc
pop
or
js
fcoms
call
jmp
ja
xor
inc
cmp
push
getsec
mov
ret
test
mov
enter
cs
mov
rcrl
fs
mov
idiv
aaa
fidivl
inc
xor
adc
mov
mov
ds
pop
jl
dec
sub
mov
arpl
adc
iret
loope
insb
inc
int3
lahf
mov
dec
sti
icebp
repnz
add
aaa
mov
dec
adc
jecxz
mov
xor
hlt
ficompl
xchg
mov
sub
inc
pusha
push
cmp
je
jg
movsb
out
shll
outsb
cmp
enter
dec
ja
jp
inc
pop
aam
push
outsb
lret
stc
add
imul
xchg
dec
jl
test
mov
push
div
push
jecxz
mov
jae
repz
mov
cmp
add
dec
dec
jl
ds
lods
xchg
or
and
push
mov
dec
cmp
ljmp
aas
lcall
add
repnz
bound
cmp
xor
cmpsl
ffree
fdivr
addr16
add
xchg
out
jno
imul
jmp
into
add
in
cltd
mov
sahf
xor
or
add
lods
or
in
mov
sti
xchg
jge
ds
mov
mov
jecxz
out
sub
add
sub
jae
mov
lret
sub
mov
push
scas
fsubrl
mov
lret
pop
lret
arpl
test
pop
lods
sub
adc
int3
mov
dec
je
xor
aam
push
push
or
jge
dec
mov
add
test
stos
xor
std
jne
cld
int3
adc
cmc
push
xchg
pop
jl
arpl
xorl
movsl
mov
lock
or
inc
sbb
jl
add
pop
dec
in
adc
xchg
or
adc
lcall
fldenv
mov
pop
ret
imul
loope
movsl
js
lcall
pop
xor
fidivs
push
sbb
xor
mov
arpl
add
ret
jnp
pop
nop
cmp
xchg
and
scas
in
sbb
in
leave
adcb
adc
jnp
mov
dec
push
sbb
pop
call
shrb
add
jle
mov
lea
cmp
decl
push
out
fidivl
dec
xchg
dec
cmpsb
jne
dec
test
jle
insb
clc
adc
imull
and
std
sarb
push
adc
pop
or
pusha
pushf
dec
fiaddl
icebp
popf
mov
push
push
clc
fnstsw
mov
push
push
movsl
cmc
lret
mov
and
test
and
jne
jge
or
mov
jecxz
shlb
xchg
adc
js
push
pop
push
movsl
xchg
stos
ja
inc
js
add
dec
push
add
push
mov
gs
mov
pop
popa
push
scas
xchg
jg
adc
lock
ds
jmp
jg
pop
iret
mov
in
and
in
sbb
loop
jecxz
and
ja
mov
dec
sub
pop
adc
pop
xchg
lcall
push
ja
jecxz
and
andl
or
mov
add
std
jg
push
add
loope
in
shrl
lcall
mov
pushf
sbb
dec
jl
fcmovb
lahf
xchg
xor
popf
stos
fbstp
lcall
add
or
mov
cs
add
mov
rcl
bound
call
out
iret
pop
or
pop
jge
popa
push
mov
leave
mov
push
cltd
int3
ret
icebp
cmpsb
pop
into
xchg
jge
push
test
iret
fcomps
movntps
stos
mov
scas
mov
xchg
imul
popa
repz
add
xor
push
push
jmp
stos
aad
mov
fnsave
aad
fbld
les
sbb
fdiv
mov
adc
les
icebp
inc
adc
ja
std
cmc
cmp
repnz
aas
add
mov
mov
mov
cltd
fstpl
cmp
iret
inc
mov
pop
in
mulb
xchg
push
pop
lds
push
sahf
jecxz
mov
dec
lock
jno
adc
sbb
pop
out
notb
cmp
addr16
dec
out
xor
sub
jnp
adc
xor
repnz
subl
stc
push
stos
movsb
add
push
lock
add
ret
jnp
in
pop
fcompl
incl
je
lds
fwait
aad
or
fcompl
sbb
dec
rcll
lds
pop
ja
sbb
xchg
aaa
adc
addr16
ja
jp
aaa
pop
add
mov
mov
mov
sub
sbb
test
incl
and
mov
inc
rcrl
mov
rclb
into
iret
cs
ljmp
push
pop
jne
add
push
fucom
sub
inc
pop
jl
mov
lods
xchg
mov
xchg
test
jp
out
popa
scas
into
jb
ja
out
mov
dec
mov
add
int
pusha
dec
pop
or
sti
pop
mov
adc
jne
lret
jmp
and
cmpsb
cmp
or
pop
es
ds
mov
fdivrl
rcll
ror
loope
mov
call
pop
lods
push
jae
mov
lock
mov
cltd
pop
cltd
mov
dec
sahf
insb
sahf
and
inc
ror
lock
fnstsw
dec
scas
andb
xor
mov
testb
push
lock
mov
jg,pn
sub
xchg
xchg
lods
dec
out
adc
xchg
in
xchg
les
xor
and
mov
pusha
jmp
mov
xor
repz
mov
push
jl
and
outsl
dec
fldenv
cld
ja
clc
movsl
xor
sbb
adc
enter
je
mov
movsb
daa
outsb
fmuls
stos
adc
jg
jmp
inc
roll
pop
lock
add
or
sbb
lea
jne
cs
xchg
and
loopne
xor
sbb
test
push
push
push
jp
jg
mov
mov
xchg
jne
stos
mov
in
ja
push
cli
dec
aad
out
push
xor
push
cmpsl
scas
ds
xor
adc
out
repz
sub
scas
ss
aaa
sarb
add
jbe
ja
dec
daa
mov
push
push
jecxz
shrb
dec
push
sub
xor
test
in
jle
loopne
pop
push
or
cmp
mov
adc
push
xchg
and
fidivrs
imul
add
or
sbb
out
int
ja
fnsave
xchg
inc
and
sub
xchg
popf
fisubl
pop
stc
loopne
in
or
fs
pop
popf
popl
bound
lahf
cmp
mov
add
rcrl
jl
insb
jg
mov
jb
mov
outsl
and
fidivrl
insl
adc
cmp
sbb
fwait
cli
fwait
sbb
dec
xchg
jle
cmp
outsl
ja
jo
xor
lret
and
push
sbb
inc
cli
dec
inc
xor
cld
test
dec
std
fwait
cs
dec
jecxz
loopne
cmc
pop
lock
stos
and
insl
inc
adc
sahf
mov
imul
outsb
pop
add
orb
cmp
xlat
lahf
mov
insl
lahf
sub
xor
insl
jne
jle
cs
or
jle
movsb
push
pop
scas
add
icebp
mov
fsub
pop
dec
movsb
push
mov
mov
subb
add
test
in
mov
es
mov
cmp
and
cmp
cmp
out
aas
mov
sub
lods
lock
and
add
rcl
into
pop
in
mov
dec
les
cltd
int
outsb
lea
cmp
adcb
xor
test
arpl
fwait
cmpsl
out
pop
aam
push
and
cltd
aas
pop
insl
jmp
int
xor
out
cmp
cmp
js
cmc
sub
lods
sahf
push
cmc
jl
mov
cmp
sbb
lods
outsb
sub
xchg
mull
dec
cmpsl
sbb
jnp
xchg
mov
dec
dec
sub
iret
cmp
cltd
inc
loope
cmc
xor
loop
adc
loop
sbb
shll
movsb
in
inc
sbb
hlt
hlt
clc
leave
push
xor
mov
cmp
mov
rol
insb
inc
pop
xchg
call
repz
xchg
xchg
mov
daa
vcvtps2pd
and
cmpsb
popa
push
mov
xchg
daa
sti
jmp
enter
cmp
in
jo
clc
cmp
outsb
pop
pushf
mov
mov
adc
mov
add
hlt
or
loope
and
mov
xorb
sub
mov
arpl
inc
mov
and
loopew
sbb
pop
test
xchg
and
rorl
adc
in
fs
or
rcrl
and
in
pop
daa
inc
sbb
nop
cmp
stos
and
push
outsb
push
out
fsts
xchg
jge
jecxz
imul
loop
out
test
add
aaa
out
xorb
shr
lods
sarb
push
loopne
lods
push
fcomps
sbb
xlat
shll
lods
inc
addb
int
aas
xchg
pop
adc
mov
mov
fdivrs
cmp
int
lret
loop
jb
lods
movsb
xor
jno
repz
mov
shrb
loope
js
add
pop
and
iret
jl
cmpsl
les
inc
and
in
cmc
sub
lods
pop
dec
jg
xchg
popa
dec
lret
shl
aad
jns
jmp
and
int3
scas
lods
add
out
mov
in
inc
sub
mov
mov
sahf
mov
loope
dec
fwait
mov
cmp
jg
or
xor
pop
inc
jns
int3
mov
jge
add
imul
roll
stos
adc
cmpsl
xchg
int3
sti
hlt
std
mov
std
xchg
add
xchg
dec
xlat
fnstsw
sbb
notl
lock
repnz
les
clc
inc
shr
stos
add
or
mov
inc
and
adc
btr
push
and
popa
or
pusha
popf
popf
enter
divb
xor
les
adc
hlt
jnp
or
test
cltd
out
lahf
push
popf
cltd
or
fldcw
adc
and
out
in
sub
add
gs
xor
lods
cld
data16
push
lcall
mov
fmuls
jns
jge
adc
xchg
movb
shlb
jmp
mov
int3
push
stos
jae
xchg
test
stc
in
loopne
adc
std
addb
mov
sidtl
cmc
mov
pop
jo
iret
fcoms
in
sbb
mov
cmpsb
rcrl
xchg
push
clc
test
pushf
mov
repnz
xor
xchg
xchg
xor
push
xchg
repnz
or
push
inc
test
pop
mov
ss
mov
mov
movsl
add
ljmp
xchg
add
cltd
mov
ret
and
subb
pop
mov
mov
aad
lcall
jge
add
shlb
fs
mov
and
push
cmp
ret
pop
xchg
xor
jge,pt
clc
sub
sub
insb
lret
jb
call
outsb
mov
push
adc
push
lods
ficomps
aam
rcl
adc
sub
pop
mov
repz
sbb
and
test
sahf
mov
lods
xor
out
daa
out
fwait
bound
aad
hlt
pop
pushf
rdmsr
lock
fldenv
out
gs
inc
mov
add
pop
or
sbb
je
sahf
pop
jns
shrl
out
aas
popf
cmp
adc
dec
sarb
ja
outsl
inc
pop
aaa
cmp
inc
fwait
and
sbb
mov
mov
test
xor
stos
dec
fldl
push
sti
push
stos
rcrb
mov
pop
push
mov
sub
fistpl
pop
cmpsb
mov
add
xchg
pop
ja
out
in
push
hlt
andl
test
adc
dec
outsl
test
cmp
dec
popf
movsl
jge
sub
in
mov
nop
inc
adc
leave
jp
inc
mov
mov
push
push
cmp
sub
inc
jae
and
jmp
dec
and
test
aas
nop
jl
data16
ret
mov
rcrl
sahf
std
aad
cld
pop
bound
mov
push
dec
add
push
jecxz
fcompl
popf
xchg
scas
hlt
inc
add
pop
out
xchg
ljmp
dec
adc
imul
in
clc
lock
mov
adc
push
dec
iret
nop
stc
das
les
mov
or
mov
clc
dec
inc
or
mov
les
inc
xlat
in
fidivrl
jecxz,pt
push
stos
test
jns
inc
inc
fstps
or
jns
bound
arpl
jno
xlat
and
push
or
and
testl
push
inc
and
in
pop
sub
jo
and
cmp
push
mov
adc
jp
lret
jl
loop
jo
test
fadd
iret
fmull
in
sbb
push
or
adc
lea
mov
lods
or
jae
jp
or
loope
cmp
aad
outsb
add
xchg
mov
mov
jl
dec
icebp
dec
daa
leave
in
shlb
stos
popa
jae
insb
dec
adc
pop
sub
clc
mov
or
pop
mov
or
lret
sub
push
adc
into
iret
jbe
dec
cmp
out
sahf
aam
xchg
and
std
cwtl
mov
mov
sbb
cmp
ficomps
lock
fbld
std
pop
pop
xchg
ret
out
dec
mov
and
cltd
add
and
jno
lock
ljmp
sub
dec
and
daa
in
mov
pop
jge
mov
or
cmpb
repz
push
lahf
ja
xchg
rcrb
in
inc
xchg
mov
and
mov
cltd
jle
adc
movsb
xor
shrb
shll
jmp
jnp
mov
jmp
xchg
mov
cmp
add
scas
shrb
jb
call
scas
fxam
movsb
lea
xor
dec
inc
push
out
cmp
cmpl
jo
sub
sbb
nop
cltd
push
dec
fimull
mov
call
js
lahf
cli
das
sbb
fstps
stc
iret
loope
inc
xor
jmp
ret
mov
push
mov
add
dec
sub
cld
jle
xor
cld
cmpsl
jle
push
add
loope
out
jo
mov
jl
cmp
pop
repnz
dec
int3
movsb
fwait
call
jnp
movsb
mov
mov
or
or
cmpsb
push
movzbl
loope
add
data16
inc
sub
fmull
scas
lcall
pop
sub
adc
pop
add
jge
push
inc
mov
stc
paddsb
lahf
mov
sub
pop
mov
andl
push
cmpsb
movl
dec
aad
in
jmp
sub
jae
pop
jle
rep
add
or
sahf
stos
lock
push
in
push
in
sub
repnz
adc
lahf
add
je
negb
bound
and
je
sti
dec
adc
bound
clc
mov
out
ja
sbb
jb
ljmp
xchg
mov
in
or
test
dec
test
loop
cld
jmp
or
mov
popa
add
adc
cltd
aad
aad
cltd
fidivl
inc
cmp
push
out
incb
and
jno
jns
out
sub
out
test
sti
push
jbe
or
mov
sarl
cmp
pop
jno
in
sub
and
xor
xor
mulb
lcall
jne
cli
xchg
adc
dec
test
mov
push
pop
fidivl
xlat
mov
bnd
mov
cmc
jecxz
mov
scas
inc
and
dec
in
mov
cmpsb
push
hlt
xor
cmp
jp
dec
rcll
cmp
test
fcompl
testl
ret
push
repz
and
adc
aad
dec
adc
cld
sbb
popa
xchg
push
pop
inc
inc
fcompl
xchg
pop
ss
fstpt
rolb
sbb
pop
or
outsl
sub
sti
pop
pop
dec
popa
adc
cmp
cli
fildll
out
jns
add
xor
mov
insb
out
mov
in
inc
sbb
jbe
xchg
xor
fnsave
mov
vpunpckhbw
sbb
pop
add
fwait
rorb
js
inc
aam
int3
or
cmc
and
scas
mov
lods
mov
or
dec
push
sbb
out
mov
cmpl
xor
cltd
popf
jbe
dec
les
xor
add
clc
push
mov
out
jbe
into
out
clc
cmp
inc
test
xlat
cmc
mov
mov
fistps
insl
xor
pop
push
push
pusha
fidivs
enter
movsl
in
cwtl
movb
jne
push
dec
pop
fnstsw
or
stos
mov
sub
add
push
add
hlt
lds
xchg
mov
dec
adc
in
pop
lods
or
test
cmp
mov
fcomps
bound
jg
std
and
pop
mov
adc
lcall
jecxz
sub
sahf
mov
and
xor
xchg
push
sbb
or
jmp
mov
in
fs
sti
popa
ja
je
cltd
in
divl
lods
lds
pusha
adc
mov
inc
adc
xor
out
fldt
imul
cmpsl
outsb
ja
cld
es
clc
out
lcall
sub
mov
out
push
nop
or
out
test
add
xchg
push
xor
shr
repz
push
loop
or
fs
fnstenv
cmp
jp
mov
aad
push
lret
lds
pop
mov
sub
and
jbe
int3
js
loopne
dec
pop
rorl
push
xchg
mov
mov
jne
sbb
and
setne
sbb
xchg
jnp
movsl
mov
dec
mov
push
test
inc
shlb
loopne
fldl2e
in
xchg
mov
jns
xchg
mov
lods
es
adc
faddl
fucomp
mov
iret
xchg
std
mov
pop
lods
fildl
out
js
sbb
and
sbb
je
sub
push
aas
mov
lret
pop
out
add
loop
lock
sbb
jnp
xor
fcompl
sbb
xorb
enter
into
inc
lock
push
sub
mov
test
jnp
inc
cmp
sbb
in
mov
and
push
fbld
or
outsl
and
add
mov
outsl
icebp
aaa
cmpsb
loopne
stos
inc
mov
mov
add
notl
sbb
popf
cmp
mov
sub
shlb
pop
sbb
imul
xor
adc
testb
je
dec
xchg
test
cmp
push
pop
dec
cmc
gs
fincstp
inc
jge
sahf
or
xchg
js
mov
xchg
stos
add
lahf
roll
jmp
sbb
stos
sub
out
mov
mov
mov
std
in
int
dec
jbe
jnp
fsubrs
xchg
test
xor
leave
repz
jnp
out
pop
add
pop
xchg
les
ret
fidivl
pop
add
cmpsb
fs
mov
icebp
jo
mov
dec
xor
or
add
jecxz
ds
pop
inc
enter
popa
lahf
jae
mov
cli
ret
adc
push
ret
std
cmpsl
repz
sbb
flds
test
adc
xchg
push
xchg
cmpsl
js
fwait
ljmp
mov
imul
add
xchg
test
clc
sahf
cmc
fs
das
loopne
test
movsl
js
scas
std
cmpsb
popf
and
lret
jle
mov
jg
xlat
mov
aas
arpl
das
jp
repz
push
clc
add
repnz
pop
or
int3
sub
int3
adc
push
pop
sarb
push
sub
clc
cmpsl
and
cmp
dec
add
mov
xor
jecxz
pop
cmp
loop
clc
sub
mov
cmp
and
jne
in
mov
in
daa
sbb
fisubrl
fsubl
and
cmpsb
xchg
push
andl
jb
data16
shr
jno
nop
shl
in
mov
repnz
js
cmpsb
rol
mov
pop
leave
mov
push
mov
mov
adc
and
ljmp
push
cmp
sub
stos
sbb
sbb
pop
pop
mov
or
cli
adc
mov
xor
pushf
xchg
add
mov
fs
inc
mov
adc
loope
or
sub
adc
mov
mov
add
scas
sub
mov
enter
mov
sub
mov
inc
cmpl
add
lcall
jle
pop
rcrl
xchg
loopne
jnp
mov
not
dec
lock
and
adc
out
out
mov
xor
stos
hlt
jge
outsb
or
sub
xchg
dec
int
jmp
sbb
out
mov
sub
pop
outsl
xchg
cwtl
xor
out
pop
lock
push
sub
adc
adc
call
ljmp
jle
in
popf
and
push
les
xchg
data16
pushf
lea
push
sub
pop
sub
add
pop
stos
lret
inc
jle
aam
hlt
inc
imul
fldl
cmp
loope
aaa
jo
notb
mov
cmp
testb
sbb
adc
add
inc
adc
mov
sbb
mov
ljmp
dec
sub
adc
push
in
sahf
shll
scas
stos
jb
and
scas
ret
mov
jp
xchg
sub
and
add
cwtl
inc
cli
daa
or
rep
push
mov
push
mov
adc
xchg
gs
inc
or
std
dec
fisttps
lcall
push
out
xor
in
mov
std
scas
or
in
xor
jg
jae,pn
push
pop
cmc
orl
or
push
mov
sub
mov
inc
in
xlat
frstor
cmp
cmp
fldcw
jb
sti
rolb
mov
xchg
mov
lock
orb
push
mov
cmp
jmp
xchg
bound
inc
stc
add
sar
clc
and
push
pop
sbbb
sbb
stos
inc
lcall
push
inc
pop
out
roll
lret
ja
xlat
mov
pop
sub
add
push
int3
mov
dec
out
xor
mov
inc
sti
dec
lcall
xor
inc
insb
ja
loope
cmpsl
cs
adc
mov
mov
cmp
es
stos
gs
or
add
inc
fwait
dec
push
push
mov
jne
and
lods
fdivp
fmuls
mov
test
or
add
cmpl
stos
movsb
pop
test
call
cmpsb
sbb
aam
aad
sub
rol
roll
aam
sar
cld
push
mov
inc
out
inc
bound
push
add
mov
ficoml
jle
and
repz
je
scas
mov
mov
mov
mov
and
jb
mov
aaa
mov
dec
fld
mov
and
popf
shll
dec
imul
std
mov
bound
icebp
in
in
add
inc
cmc
test
push
insl
sahf
lahf
into
cmp
jp
and
popa
lret
outsl
xlat
ja
jo
mov
and
fdivrs
dec
push
mov
jno
mov
out
jbe
das
mov
js
daa
mov
push
xchg
sarl
inc
jns
sbb
jbe
sti
lods
and
push
int3
xor
or
cmc
call
dec
loope
inc
add
mov
test
scas
outsl
lret
push
and
stc
cmp
push
sbb
and
mov
rcr
ljmp
movsl
loop
push
imul
ljmp
rcll
mov
rcr
mov
cmp
pop
adc
test
loop
cmp
push
adc
and
test
sub
jne
jg
xor
or
mov
add
dec
xchg
xchg
in
push
out
pop
jecxz
adc
mov
add
mov
mov
in
mov
in
cmp
jp
mov
jb
push
jge
mov
xlat
js
fadds
mov
in
dec
lret
push
fwait
loope
int3
loop
mov
std
xor
push
std
push
mov
or
imul
ss
insl
cmpsb
jo
test
lea
in
sahf
push
imul
or
outsl
xchg
in
adc
addr16
jp
xor
jge
mov
add
mov
imul
ljmp
inc
add
ljmp
insl
add
fwait
test
sub
in
sbb
lock
imulb
adc
dec
add
inc
test
insb
sub
jecxz
push
mov
mov
jge
or
scas
push
dec
pop
sahf
arpl
sbbl
es
push
adc
xchg
int3
mov
inc
pushf
in
add
test
test
stos
jge
xlat
rcrb
adc
fistpll
pop
clc
or
mov
sub
and
cli
hlt
out
fs
loope
push
mov
mov
cmp
xor
ja
pop
pop
mov
imul
fwait
lret
sbb
int3
or
mov
mov
inc
aas
data16
loop
push
xor
jl
xchg
cltd
pop
out
cli
cmp
nop
rcll
into
lret
inc
pop
std
or
sahf
jnp
es
pop
out
mov
je
inc
mov
xlat
test
cli
int3
cmp
xor
mov
inc
dec
in
cmpsl
add
les
xchg
jbe
mov
adc
inc
outsl
cmp
push
adc
divl
jnp
addb
dec
add
adc
xchg
imul
das
pop
out
pop
push
stc
test
les
xor
or
ljmp
cmpsl
xor
push
clc
and
js
inc
and
jge
jecxz
divl
add
scas
popl
push
cld
dec
icebp
add
jl
insl
lods
hlt
or
std
int
xchg
jmp
repz
mov
add
jmp
shr
out
pusha
aas
fs
push
lahf
cmp
inc
pop
mov
aaa
add
cmovns
orl
fcoml
jb
fidivrs
sub
mov
jge
adc
sub
mov
dec
cmp
mov
xchg
call
push
push
fdivl
sbb
xchg
fwait
push
das
ret
enter
andl
jnp
jge
xor
ret
mov
icebp
repz
insl
dec
imul
out
nop
push
loop
add
mov
lcall
aad
jge
dec
imul
and
and
ficoml
push
inc
mov
imul
loop
cwtl
insl
cs
mov
cmp
repnz
mov
or
and
lcall
pusha
ss
adc
push
daa
dec
idivb
xor
lret
add
jp
mov
nop
iret
and
dec
insb
repnz
jns
pop
cmp
ljmp
into
call
cmc
jbe
idivl
into
pusha
test
std
xchg
into
lcall
push
pop
lods
jge
sbb
mov
dec
and
je
lret
scas
shll
or
leave
mov
movsb
xor
and
mov
insl
xor
dec
xchg
mov
js
mov
xchg
lock
pop
push
ficompl
dec
adc
sub
pusha
dec
fldt
and
pop
inc
jbe
mov
add
xor
ja
int3
daa
cmp
sbb
into
stos
cli
mov
xor
jno
popa
or
adc
test
ret
stos
lahf
push
lock
mov
int
push
stc
popf
stos
clc
pop
lock
popa
xchg
pop
call
scas
inc
popf
mov
jmp
test
ret
es
push
cmp
bound
jmp
cmp
jle
push
inc
cmp
jmp
cld
add
jge
std
xor
and
jno
gs
rep
xchg
popf
mov
and
in
xchg
xchg
shl
imul
stos
mov
xchg
adc
sub
test
aam
jmp
idivb
mov
in
push
sub
ficoml
and
mov
pop
push
mov
popf
shr
testb
hlt
fnsave
push
cli
js
adc
or
icebp
inc
stos
lds
xor
add
scas
fcmovnbe
fxch
lcall
hlt
push
js
popf
clc
xor
outsl
pop
or
sub
aad
repz
push
adc
sub
jnp
inc
lods
lds
add
clc
xor
add
mov
imul
mov
xor
add
mov
mov
mov
mov
xor
xor
add
adc
lea
xor
xor
xor
mov
add
adc
xor
xor
cmp
jne
cmp
jne
mov
pop
pop
pop
leave
ret
push
mov
push
add
movl
sbbl
mov
xorl
mov
add
xor
cmp
movl
jne
mov
or
mov
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jb
orl
add
mov
mov
mov
xor
push
mov
and
mov
mov
add
cmp
pop
je
mov
jmp
mov
xor
add
jmp
mov
xor
add
leave
ret
push
mov
sub
push
push
push
push
lea
xorl
push
push
movl
call
addl
push
call
adcl
movl
movl
mov
mov
addl
xor
orl
mov
add
mov
notl
mov
test
movl
je
inc
mov
andl
mov
dec
mov
add
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
jmp
xor
imul
movzbl
xor
mov
add
andl
mov
inc
mov
cmpl
jne
push
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
cmpl
jne
xor
or
inc
mov
jmp
adcl
xchg
xor
mov
sub
sbb
mov
sub
xor
mov
and
mov
add
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
xor
add
andl
mov
movl
cmpl
je
cmpl
jne
push
push
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
or
mov
xor
add
sub
mov
dec
mov
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
call
cmpl
jne
mov
inc
mov
jmp
or
xor
dec
add
mov
andl
sub
orl
lea
addl
xor
adcl
xor
cmp
je
mov
orl
xor
sbbl
add
cmp
movl
jne
andl
pushl
addl
call
mov
sub
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
call
cmpl
jne
mov
inc
mov
jmp
movl
cmpl
je
cmpl
jne
push
push
push
push
push
push
push
call
cmpl
jne
mov
dec
mov
xor
add
dec
mov
jmp
adcl
mov
dec
xor
sub
mov
movl
add
movl
cmp
movl
je
addl
pushl
pushl
call
mov
sub
mov
mov
mov
movl
xor
orl
add
movl
cmp
movl
je
mov
mov
sub
sub
mov
mov
mov
and
mov
andl
xor
xor
inc
mov
cmpl
jne
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
add
mov
mov
mov
add
mov
mov
mov
add
mov
mov
jmp
mov
mov
add
mov
mov
mov
xor
add
cmp
je
jmp
mov
mov
xor
add
cmp
je
jmp
or
xchg
loop
movsb
emms
adc
add
pop
jp
aaa
pop
jp
sti
jnp
xor
jo
mull
int3
bound
xchg
std
clc
adc
xchg
notl
push
cmc
outsb
imul
scas
ja
js
hlt
push
push
jle
les
lods
jg
arpl
jns
outsl
cmp
stos
scas
ret
pop
jle
cmpsl
push
outsb
cmp
mov
or
push
adc
dec
rcrb
mov
xchg
cmc
icebp
outsb
stos
mov
imul
inc
ss
mov
dec
add
popf
pop
or
popf
sar
sbb
pop
inc
inc
xorb
xchg
jnp
cmp
mov
fsub
test
or
cwtl
dec
fdivl
imul
add
mov
cmp
enter
lods
push
fs
into
sbb
roll
mov
fdivs
mov
push
jae
add
and
push
dec
in
pop
xor
lret
in
daa
sbb
cs
fdiv
hlt
out
xchg
xor
inc
arpl
fmull
pop
jb
sub
mov
xchg
ret
test
test
adc
sbb
popf
test
stos
pop
ret
push
mov
lds
out
popa
fcmovbe
push
or
loope
rolb
lahf
sub
daa
test
push
leave
push
xchg
adc
push
adc
push
sub
popf
xchg
push
and
dec
iret
test
lret
into
and
mov
scas
cs
sahf
jo
mov
ljmp
xchg
call
popf
imul
pop
adc
lret
loopne
pop
or
push
out
insl
out
or
sub
mov
sbbl
pop
add
mov
shrl
shl
sub
test
fstps
cmp
sub
push
hlt
add
push
adc
gs
mov
sti
scas
push
divl
sahf
je
in
push
xor
pop
clc
lock
and
int3
pop
mov
mov
in
xchg
into
jle
cmp
push
inc
jmp
or
inc
sbb
shlb
jge
xchg
and
stc
mov
idivb
inc
std
out
test
and
test
call
in
cmc
or
jl
in
adc
stos
es
sub
dec
push
cmp
in
daa
push
dec
das
add
int3
mov
bswap
pop
and
adc
jge
scas
dec
stc
mov
ret
stc
push
scas
fcompl
test
stos
mov
xlat
mov
mov
stc
xchg
aas
or
xor
jmp
stos
lods
test
and
lods
inc
rolb
and
sarl
and
dec
aas
xor
fildll
imul
out
xchg
cmp
cli
or
jl
lods
pop
stos
xchg
call
mov
js
lea
data16
rclb
cmc
cmp
push
inc
mov
in
addr16
imul
aad
pop
inc
xchg
cmp
push
sub
mov
addr16
mov
dec
sub
mov
xchg
push
xchg
cmp
sbb
insb
rcrl
leave
sahf
call
push
pop
mov
lods
aaa
inc
mov
adc
sbb
push
sbb
xor
mov
cmp
xchg
lods
leave
push
stc
movsl
jecxz
lret
into
jo
sbb
sub
test
mov
loopne
adc
lock
ds
sbb
ror
gs
cltd
sbb
sbb
loop
and
stc
push
ret
loop
cmpsl
mov
insb
cltd
fcoms
xor
dec
dec
sub
loop
leave
jbe
inc
jg
mov
lret
pop
jne
sub
je
cmpsl
cli
xor
mov
inc
push
mov
fisttpl
mov
add
pushf
pop
mov
add
js
nop
push
jb
jg
sub
xor
fdivl
outsl
xor
cmpb
sti
mov
imul
aaa
push
and
sub
cld
push
adc
jns
test
lds
dec
clc
xchg
orb
dec
jle
sub
lret
movsl
mov
inc
cmp
out
jg
mov
leave
dec
stc
mov
icebp
jns
sbb
imul
jecxz
add
xchg
pop
pop
out
jmp
mov
stos
inc
xor
popa
clc
or
jl
lcall
xchg
xorl
cmpsl
movsb
aaa
add
fstps
pushf
jecxz
sbb
mov
mov
pop
adc
push
in
dec
sbb
push
cs
rclb
jb
fsubs
std
cmpsl
aaa
test
cltd
inc
ja
leave
dec
cmc
or
jno
inc
cmp
shll
dec
inc
les
inc
dec
fimuls
sbb
sbb
stos
ds
push
stos
movsb
xchg
adc
leave
fildll
or
stos
push
cmp
mov
sbb
rolb
fs
mov
ss
out
fcomps
add
sub
xchg
rolb
push
ljmp
fisttpll
test
lret
inc
sbb
aad
pop
inc
jno
cli
fldt
fmulp
and
pop
out
inc
jecxz
cld
pop
adc
cld
faddl
inc
xor
leave
jp
push
xchg
outsl
xor
xchg
jle
jmp
rol
pushf
push
rcrl
iret
and
cli
mov
fildl
les
xchg
sbb
cmpsb
push
rolb
int
push
cld
movsb
add
stc
scas
aam
push
cmp
add
movsb
shlb
xchg
out
sbb
adcl
aas
js
outsl
lock
incl
je
mov
fwait
push
fs
mov
adc
add
ret
mov
loope
mov
and
adc
fs
insb
sub
push
mov
movsl
in
ds
sbbl
fistpl
rol
xor
test
cmp
sbb
into
xchg
test
pop
sbb
pop
in
jnp
repnz
sahf
mov
scas
mov
lods
fdivrp
push
in
lea
sarl
add
daa
sahf
dec
rclb
jnp
fs
pop
cmp
push
mov
xchg
cmp
sub
fstl
clc
dec
div
xchg
or
inc
imul
dec
adc
jl
push
push
aas
jl
sub
push
inc
mov
icebp
enter
cmpsb
cmp
mov
gs
jge
or
aam
and
inc
dec
pop
jmp
ds
sub
je
mov
mov
mov
aam
mov
add
pusha
adc
pop
test
cmp
sbb
cmp
in
add
jle
movsb
pusha
clc
jle
inc
ret
popa
iret
mov
mov
fdivp
and
fnstcw
popa
aam
pop
testl
faddl
repz
push
scas
sbb
mov
cwtl
fmul
add
cltd
faddl
sub
in
adc
pop
lea
dec
xor
lcall
adc
cld
sub
xor
jb
xchg
mov
in
fs
pop
lds
sbb
push
add
xor
aam
aas
cmp
mov
mov
adc
loopne
xor
jae
pop
push
fisubrs
ja
pop
lahf
xchg
push
push
mov
in
dec
mov
lahf
push
cmpsl
inc
imulb
scas
in
mov
sbb
ljmp
or
pop
mov
adc
jmp
icebp
lds
loop
add
mov
out
add
mov
mov
cmp
push
or
jmp
cwtl
mov
pop
call
jecxz
loope
inc
dec
fneni(8087
shl
lods
mov
icebp
and
add
and
and
xor
stc
push
notl
push
mov
jns
cmc
inc
loope
jne
xor
pop
pop
lods
add
mov
into
in
mov
inc
xchg
bound
or
cwtl
push
icebp
mov
mov
push
push
xor
mov
neg
sub
xor
adc
loope
daa
push
loope
cwtl
cli
xchg
xor
out
mov
xchg
mov
imul
out
dec
pop
xchg
mov
clc
mov
cli
outsb
and
xor
xchg
pop
movsb
or
cwtl
fs
jb
pop
lahf
fisttpl
fdivp
pop
fsubl
or
or
pop
push
sub
lods
test
jmp
adc
test
lcall
add
subb
xchg
xchg
xor
pop
push
rcrb
loope
insl
mov
nop
or
cmp
test
movsb
mov
add
subb
jge
rolb
sub
fisubrl
mov
xlat
adc
popf
or
sbb
fisubl
fnsave
mov
rclb
frstor
cld
and
mov
das
and
or
test
mov
hlt
push
push
push
sub
push
mov
jbe
nop
lods
jl
jns
mov
push
lock
adc
stos
in
sub
jae
aad
mov
fbstp
xchg
lock
jg
mov
jno
mov
cmp
inc
fwait
pop
lea
cli
or
pop
pop
mov
xlat
mov
enter
out
inc
das
pop
scas
fldl
std
and
cld
mov
add
push
out
xchg
push
add
mov
mov
dec
pop
sub
push
push
mov
pushf
add
inc
in
jnp
ss
int3
xchg
mov
cmpb
lret
mov
inc
mov
inc
test
mov
movsl
int3
cwtl
aas
push
out
push
lahf
pop
xor
mov
aas
scas
lea
pop
ljmp
jg
jne
inc
aam
cmpsb
test
stc
enter
push
and
ret
std
loopne
mov
shrb
pusha
jne
arpl
movsb
ja
push
repnz
or
stos
fwait
xchg
rcrb
xor
aad
rorb
push
dec
iret
mov
fcmovnb
pop
shlb
push
mov
sbbb
mov
xor
lcall
mov
xchg
pop
and
std
or
mov
dec
jb
divl
and
sahf
bound
pop
jb
gs
mov
aad
fisubs
aas
xlat
mov
mov
sti
jne
mov
popa
fwait
call
cmc
cmp
sbb
mov
sarl
ljmp
test
sub
jbe
cltd
mov
daa
imul
pop
rclb
mov
push
les
add
cmp
cwtl
leave
xlat
mov
fistpl
aaa
jbe
nop
mov
and
sub
cwtl
leave
ret
fnstsw
popf
xor
aam
insl
sub
fcomi
dec
hlt
aaa
and
test
lcall
insb
imulb
fldenv
jmp
cmp
rorb
push
loopne
cltd
lret
mov
and
addr16
jecxz
xchg
push
out
aad
add
cld
sub
nop
lea
sbb
popf
movsb
les
or
lods
js
nop
inc
daa
pop
aam
adc
pop
sbb
dec
les
sub
std
jnp
adc
xchg
popa
movsl
and
jmp
pop
sarl
adc
iret
shl
andb
shrl
inc
mov
push
test
insb
mov
sub
xchg
lret
mov
add
inc
fimuls
inc
adc
sbb
dec
xchg
loopne
movb
lods
dec
jl
and
out
ret
push
aam
data16
cmpl
sub
xor
das
inc
loope
fs
mov
dec
movsb
rcrl
sbb
xchg
ror
jnp
out
push
cmpsb
mov
sub
mov
fiadds
sub
inc
rol
cmp
push
sbb
add
jne
lret
movl
and
mov
aad
add
sub
mov
xor
mov
imul
cmp
xchg
push
pop
test
in
ret
cmpsl
stc
mov
cltd
sti
jbe
fiaddl
xchg
in
or
xchg
jns
adc
shlb
cmp
sbb
ret
sbb
test
aaa
jge
pop
cmp
mov
mov
stos
add
ret
push
jbe
dec
jp
fstl
nop
sub
sbb
inc
movsb
out
pop
cwtl
adc
movsl
pop
or
daa
sub
inc
repnz
insl
mov
push
cmp
stos
hlt
xchg
xor
daa
int
repz
repz
cmp
add
sub
sbb
cvtps2pd
mov
xchg
cltd
mov
call
insb
mov
and
jae
inc
shll
push
jb
fldcw
mov
mov
hlt
jp
loope
repnz
arpl
mov
sbb
cmp
pop
shl
adc
int3
xchg
mov
xchg
cmpsl
and
jmp
es
fidivrs
add
scas
inc
adc
push
add
lds
dec
fwait
xchg
mov
add
mov
adc
push
jo
mov
cltd
pop
jb
xadd
shufps
nop
cs
sbb
iret
push
cmp
stos
cld
div
shrb
sub
mov
out
xor
popf
dec
add
popf
push
das
xor
in
push
stos
pop
lock
popa
xorb
pop
shrb
mov
and
jl
mov
jo
xchg
push
mov
mov
cmp
bound
jbe
pop
mov
cmp
mov
pop
push
mov
ret
cmp
out
push
mov
dec
mov
pop
xor
jg
inc
lahf
sub
fsts
xchg
fidivs
or
mov
mov
push
push
sahf
jb
lcall
push
shr
mov
pop
ror
pop
pusha
pop
xor
ret
xlat
cmp
adc
cmpsl
cld
mov
sub
add
jo
pop
pop
addb
insb
mov
popa
push
and
ffree
and
lahf
push
in
das
sub
test
enter
mov
aad
jge
cmpsl
mov
loope
lret
je
and
sub
test
lods
enter
int3
jnp
aad
repnz
arpl
xchg
cmp
movsb
xor
pop
test
nop
sub
sub
jnp
inc
das
mov
cmp
pop
mov
into
scas
stc
sub
push
xchg
imul
mov
aaa
aam
cli
dec
cmp
jnp
and
jb
push
pushf
adc
and
push
sub
das
aad
add
cmp
addr16
adc
cltd
mov
mov
cmp
rcrl
cli
sub
test
mov
gs
int
cmp
ja
mov
ficoms
and
shlb
cmp
sbb
dec
inc
xor
in
rcr
loope
mov
cmpsb
jmp
jb
and
jle
call
sbb
imul
pop
pop
and
cli
add
fildll
sbb
lods
sbb
aas
mov
in
movsl
push
fldenv
outsl
lods
pop
dec
add
xor
mov
push
push
mov
push
leave
mov
dec
xlat
lahf
lods
inc
call
outsl
movsb
cli
push
lret
add
in
shlb
dec
or
into
jae
adc
loopne
shrb
rcrb
sti
sub
movsb
ljmp
push
push
jno
lds
cmp
imul
loope
fcomp
pop
into
cmp
xchg
inc
icebp
mov
pushf
imul
sub
mov
adc
call
cmpsl
pop
fistl
out
jae
dec
xchg
add
fidivl
sahf
and
enter
push
icebp
mov
mov
jle
sub
cwtl
out
sarl
out
jmp
outsb
stc
sahf
fs
out
shrl
mov
mov
push
mov
in
mov
lcall
lods
lahf
scas
pop
ja
adc
inc
sbb
fstps
nop
xchg
xor
nop
and
xlat
iret
dec
mov
push
inc
xchg
es
addr16
push
cmc
push
mov
or
add
leave
dec
inc
jns
dec
lea
mov
imul
sub
insl
and
mov
mov
sbb
mov
add
cmp
xchg
push
cmp
je
dec
test
mov
repz
std
pop
fwait
inc
stc
cmpsb
sub
inc
push
push
mov
in
insb
fstpt
xor
dec
mov
loopne
femms
rcll
xor
lods
stc
fs
faddl
iret
mov
push
jns
aad
xor
and
ret
mov
sub
sbb
pop
test
xchg
adc
jp
iret
mov
int
in
cld
test
mov
lods
jecxz
push
adc
pop
mov
fsubrp
dec
movsb
or
xchg
sub
mov
add
dec
out
incl
fildll
adc
popa
sbb
popf
mov
push
xchg
iret
icebp
imul
push
popf
sub
lds
test
and
and
adc
and
cmpsl
clc
jo
sarl
pop
or
cmp
sbb
repz
stos
cmp
sahf
in
mov
xorb
sub
or
ss
mov
inc
push
sub
movb
push
fstpt
cmpsl
xchg
mov
inc
sbb
mov
lock
ss
xchg
repz
icebp
push
mov
xchg
mov
push
push
inc
push
cmp
je
mov
hlt
fwait
lea
mov
and
addr16
call
sub
mov
dec
ret
xor
sub
loop
sbb
cli
loope
xor
xor
jbe
out
jns
out
push
lds
mov
mov
or
inc
movsb
jno
mov
cmp
inc
in
mov
xor
sahf
adc
fdivp
test
enter
je
or
adc
xor
push
push
or
or
ljmp
repnz
dec
arpl
outsl
ss
js
jmp
or
dec
jl
mov
lret
or
push
sbb
jg
jns
ret
inc
loop
pop
xchg
das
cmp
and
bound
dec
lcall
ja
shrl
lcall
mov
add
or
push
xchg
iret
scas
xchg
push
lea
fdivs
imul
iret
mov
shlb
cltd
insl
mov
bound
in
insb
adcb
rep
add
pop
std
lods
sub
das
xor
xor
into
mov
std
xor
rorb
pop
int3
daa
jg
in
and
flds
clc
or
mov
hlt
and
pusha
loopne
ljmp
int
push
sub
xchg
fimuls
pop
xor
into
inc
fwait
jbe
mov
cmpsl
lock
lods
lahf
mov
mov
xchg
mov
dec
dec
push
test
movsb
mov
or
push
jno
xchg
push
fs
add
in
lea
lea
rcrb
adc
fnstsw
add
sbb
add
mov
or
fidivl
sub
mov
xchg
dec
xchg
add
icebp
mov
add
xchg
cs
jge
nop
jmp
jl
hlt
mov
in
pop
shr
mov
call
mov
jl
xor
negb
mov
imulb
cmp
popa
fbld
push
dec
jns
xor
mov
sbb
cmpsb
clc
jle
mov
adc
stos
xchg
sbbb
inc
in
dec
popa
dec
in
dec
jecxz
pop
xor
xchg
inc
jno
rcrl
dec
lret
inc
cmp
int
mov
movsl
or
ljmp
iret
xchg
inc
xchg
xor
popa
out
jl
in
imul
cmp
cs
jb
pop
imul
xchg
popa
aad
sub
shll
loopne
ficompl
mov
or
outsb
sbb
inc
xorl
cmp
sub
out
movsl
inc
js
jp
mov
ret
inc
inc
jg
cmp
push
pop
pop
mov
pop
out
cs
mov
repz
and
adc
jns
dec
adc
es
dec
out
jnp
lods
push
mov
popa
or
cld
popa
pop
jle
push
fidivs
insl
or
jecxz
xchg
addr16
in
adc
cmpb
pop
test
push
int3
dec
inc
or
jl
lock
rcl
xor
xchg
je
clc
jo
aaa
imul
push
xchg
mov
dec
cmovne
mov
adc
popf
fnstsw
fisubrl
adc
hlt
push
arpl
in
adc
and
je
cmp
mov
xlat
push
loope
repz
jle
data16
leave
and
daa
adc
adc
jle
cld
imul
cmp
std
int3
adc
adc
fmull
jno
dec
or
js
mov
jp
bound
inc
repz
fstpt
dec
roll
inc
pop
or
cmpsl
pushw
mov
push
adc
out
inc
repnz
fisubs
jmp
mov
sub
push
fisubrl
cs
pop
inc
test
jle
or
and
adc
mov
push
enter
sub
pushf
push
jmp
fimuls
add
aas
test
or
fbstp
lock
cli
enter
mov
jno
cmpsb
add
test
arpl
pop
andnps
xor
das
cmp
pop
bndldx
pop
and
jg
cmp
pop
inc
pop
sub
push
xchg
sbb
stos
inc
or
lods
xor
ret
shlb
aaa
mov
fwait
cmp
xchg
icebp
xchg
iret
cmc
data16
pop
inc
es
pop
pushf
out
fidivs
daa
sar
sbb
imulb
into
daa
sbb
push
push
shrb
pop
mov
dec
mov
dec
mov
sub
mov
pusha
lods
add
pop
cmp
insl
xlat
loopne
ds
lcall
mov
push
xor
stos
in
fbld
xlat
add
xchg
js
out
cmp
enter
repnz
ret
sahf
es
repnz
xchg
pushf
loop
jne
mov
psraw
lock
mov
ja
push
iretw
scas
fstpt
push
add
pop
out
sub
ss
sub
dec
xor
cli
scas
mov
push
into
fbstp
jg
pop
add
mov
jecxz
mov
scas
int3
mov
cld
test
push
mov
iret
imul
ds
sbb
add
mov
or
xlat
xchg
xorb
mov
mov
and
dec
nop
fnstsw
xchg
add
cltd
imul
adc
shl
lahf
inc
lea
jle
popf
or
fs
popf
or
and
pop
mov
cs
mov
jg
int3
clc
pinsrw
loopne
sbb
mov
loop
lcall
xchg
xchg
out
sub
lret
clc
push
lret
jno
sti
push
add
out
fisttpll
mov
leave
leave
mov
pop
inc
mov
mov
mov
test
xor
push
pop
jnp
dec
pop
repz
aas
stos
mov
mov
test
sub
xor
adcl
inc
cmpsl
fs
dec
pop
ljmp
or
inc
stos
mov
aaa
call
sbb
adcl
fsubrs
fidivl
fdivrs
pushf
mov
insb
mov
cmp
lahf
lods
jmp
sub
xchg
cld
pusha
jnp
orl
sbb
and
jae
std
cmpsb
push
cmpsl
test
insb
cmp
insl
mov
xor
adc
lock
gs
dec
ficomps
adc
inc
mov
movsl
aas
cmp
sub
sub
mov
dec
ret
test
leave
pop
xchg
mov
mov
cmpsl
jg
push
rorl
nop
js
fdivr
sub
enter
sarl
mov
cwtl
dec
cmpsb
ret
in
xor
adc
inc
sub
inc
ret
repnz
push
jmp
mov
xchg
adc
imul
popf
inc
sbb
mov
xorb
sti
and
inc
jg
inc
xchg
fidivl
jo
pop
adc
dec
imul
mov
xlat
loope
cmp
sub
std
xchg
adc
jecxz
insl
in
sub
es
imul
pushf
push
push
rcrb
lock
cld
nop
call
mov
je
fsubr
jmp
add
outsb
call
arpl
call
daa
pusha
dec
push
popa
sbb
pop
mov
mov
inc
jg
push
popa
notb
adc
xor
scas
adc
cmp
enter
push
cmp
mov
cmp
sub
sbb
xchg
in
cmp
in
push
inc
inc
jbe
in
dec
cld
psubq
pop
mov
sti
leave
jno
sbb
ds
dec
daa
mov
add
cld
lahf
iret
in
xchg
jb
frstor
mov
xchg
imul
pop
add
aad
movsb
lods
xchg
insl
mov
inc
push
dec
cli
mov
inc
imul
sub
les
lods
jle
cmp
stos
xchg
lods
test
cmpsb
pop
int
hlt
jle
aaa
cmp
nop
pusha
scas
sbb
sub
dec
jbe
int
xchg
mov
mov
mov
xchg
mov
jmp
test
lahf
sub
imul
jg
mov
cs
int
xor
dec
cwtl
mov
mov
test
insb
imul
inc
fwait
sahf
sub
outsl
pop
add
push
outsb
das
sbb
imul
movsb
lret
leave
add
xor
repz
lcall
mov
push
or
xchg
leave
gs
pop
lods
lret
lahf
adc
mov
mov
cli
mov
and
idivb
lds
dec
or
leave
mov
jns
lods
je
xor
cld
fwait
out
insl
pop
cmp
xor
jnp
pop
add
xor
cld
pop
pop
std
mov
or
mov
jmp
cmp
inc
movsl
push
in
pop
inc
mov
stos
pop
lock
xchg
jo
sbb
mov
push
stos
mov
loop
xchg
or
add
dec
and
push
fimull
in
adc
sbb
mov
add
shll
daa
pop
lds
data16
clc
enter
shlb
out
xor
cmpsb
out
enter
add
stc
stc
xlat
scas
daa
dec
dec
xchg
push
xor
or
inc
push
mov
sbb
fdivrs
in
or
sub
and
cmp
ds
out
addr16
aaa
xchg
jae
rol
jbe
scas
xchg
ss
test
imul
sbb
cld
jmp
mov
dec
jecxz
sub
mov
sbb
adc
adc
insl
fidivl
pop
in
mov
and
xchg
dec
movsl
xor
shl
test
into
lods
adc
mov
sbb
xchg
loop
mov
sub
cmp
lea
iret
dec
push
jmp
sub
loopne
xor
rcll
aaa
xchg
inc
jmp
test
jns
icebp
or
push
mov
test
inc
and
push
stos
loope
jg
scas
sub
sbb
scas
jp
out
and
ret
adc
jbe
jo
mov
inc
fsubr
sbb
dec
std
dec
add
lea
and
xchg
mov
xlat
fcmovbe
dec
orl
add
inc
mov
add
movsl
loop
loop
jne
push
out
adc
fcmovb
xorb
xor
int3
dec
jnp
pusha
sub
loop
outsl
fsts
lret
dec
sbb
jecxz
or
add
lock
into
cmc
pop
shrl
or
pop
mov
or
and
mov
sbb
mov
out
and
xchg
leave
and
icebp
cmp
xchg
ja
cmpsb
push
lds
scas
mov
lods
popa
dec
push
push
movb
or
push
pop
je
and
shlb
adc
sub
cwtl
push
ret
stos
repnz
cmpsl
mov
sbb
out
or
mov
movsl
adc
mov
in
or
dec
sbb
adc
mov
mov
push
dec
xor
fwait
add
xchg
std
test
xor
pusha
cmpsb
mov
ret
mov
push
mov
shlb
out
es
scas
dec
jne
lahf
xlat
sahf
fcoml
push
push
push
cwtl
mov
cmpsb
mov
lds
jecxz
and
and
push
imul
mov
push
lods
pushf
test
jbe
cmpsb
mov
cmp
and
rep
jg
bswap
mov
cli
repnz
inc
or
into
bound
pop
dec
add
in
das
loopne
subl
mov
out
fs
dec
xchg
jmp
aam
adc
cwtl
scas
adcb
fimull
cmp
xor
jnp
out
or
clc
outsb
test
dec
sbb
dec
xor
jns
xor
pusha
xchg
out
add
cmpsl
fwait
out
arpl
jno
das
cmp
mov
rcl
jb
das
rcl
mov
ss
xlat
inc
mov
jge
popf
xor
sub
inc
out
divb
add
jge
add
movsb
sahf
add
mov
rolb
pushf
adc
aad
pop
imul
stos
sbb
addl
fidivrl
push
xor
lds
pop
into
in
push
push
sti
adc
cmp
aad
clc
xor
push
inc
out
mov
cmc
jne
inc
subb
movsl
xor
das
sub
movsb
xchg
aad
mov
subb
stc
add
cmc
cmp
dec
repz
mov
addl
fsubrl
es
jg
jne
pop
ret
out
jl
and
push
jg
insb
dec
mov
scas
sub
mov
inc
stc
jp
shll
test
mov
js
mov
lret
jge
and
inc
push
mov
icebp
pushf
lcall
in
cld
mov
in
pop
pop
cmp
jp
test
and
movsl
mov
mov
mov
jne
out
mov
or
mov
dec
pop
out
xor
jle
nop
pusha
push
add
adc
loop
add
push
aad
addr16
icebp
lods
xchg
adc
jno
jg
mov
lods
jg
out
xor
es
xchg
jne
sbb
and
shrl
pop
leave
call
dec
lret
mov
in
add
test
ret
pop
fstps
cwtl
lock
or
pop
cmc
popw
cs
jb
jmp
fisttpl
gs
loop
fbstp
push
lret
sarl
es
pop
push
add
ds
sbb
pop
jp
ficoml
push
adc
sub
movsb
jnp
pop
sub
mov
rorb
fmuls
mov
dec
and
int3
loopne
pop
cmc
adc
cltd
enter
and
leave
push
mov
lea
mov
in
inc
cmpsl
sbb
push
push
mov
xor
add
ret
mov
xlat
mov
mov
jo
sbb
xchg
xchg
jmp
xor
and
es
mov
push
jge
scas
outsb
fsubs
movsl
stc
outsl
movsb
and
inc
testl
push
jb
jae
push
shrl
add
int
clc
and
mov
mov
cs
clc
call
call
inc
movsl
out
adc
cli
pushf
xchg
lock
mov
mov
xor
add
cmp
je
lea
push
pushl
pushl
call
mov
mov
mov
xor
add
cmp
je
mov
movzwl
mov
mov
mov
jmp
mov
xor
lea
jmp
mov
xor
add
jmp
mov
xor
add
jmp
mov
add
mov
mov
test
je
movl
push
xor
pop
add
push
pop
push
dec
pop
dec
xchg
sub
xchg
dec
mov
imul
sub
mov
mov
mov
xor
mov
add
mov
mov
xor
add
mov
jmp
push
or
xchg
xchg
xor
nop
and
aaa
pop
jp
jg
lods
mov
movsl
push
pop
icebp
lahf
roll
leave
mov
inc
dec
leave
orl
jns
inc
les
lahf
jmp
idiv
in
pop
dec
stos
dec
push
and
rorb
mov
and
mov
xor
xchg
lock
lock
notb
fdivl
dec
mov
mov
jp
push
in
inc
push
jge
cmp
pusha
pop
inc
xor
repz
mov
das
pop
std
or
iret
inc
std
out
shrb
add
jnp
cli
js
push
or
scas
jbe
xor
jg
jo
pop
aad
test
int3
sbb
les
jp
je
lret
pop
test
push
shlb
cmp
clc
or
sub
jg
push
pop
mov
cmp
xchg
loop
fldl
test
insb
popl
shrb
jecxz
iret
pop
sub
or
jp
ret
cli
jbe
fldenv
adc
dec
push
pop
rcrb
mov
sub
dec
jno
sub
adc
psubusb
popa
out
inc
inc
push
fucomip
jmp
fcmovnu
jns
loop
in
adc
ret
jmp
mov
xchg
int3
xchg
or
in
xchg
mov
jo
lods
jns
inc
xchg
lret
xor
mov
nop
cltd
inc
lahf
lock
cmovns
in
push
jbe
sbb
push
pop
cmp
jmp
sub
and
pop
fs
scas
xchg
pushf
shrl
mov
popa
test
int3
aad
cs
and
stc
cmp
push
ljmp
adc
or
cld
aas
bound
sub
repz
push
push
jmp
cli
sbb
sti
shr
fwait
aad
cs
mov
push
das
pop
adc
pop
dec
cs
cmp
or
add
mov
lds
repnz
shrl
imul
icebp
ljmp
insl
enter
cli
sbb
shl
repnz
sub
mov
int3
int
xor
repz
dec
xchg
je
push
lcall
loopne
push
inc
shll
stos
mov
insb
lods
es
add
popf
dec
fs
fcmove
mov
pop
call
test
dec
inc
adc
mov
test
popf
subb
push
popf
mov
int3
jnp
adcl
es
out
push
les
sahf
sti
fwait
xor
dec
pop
xor
pop
fs
mov
int3
mov
cli
mov
fsub
sbb
mov
mov
loope
push
dec
imul
add
test
adc
adc
js
mov
jae
jmp
xchg
sbb
lock
push
xchg
call
mov
mov
fcomps
inc
add
dec
popa
mov
stc
addr16
inc
in
popf
push
mov
mov
fbstp
xor
jno
add
bnd
das
adc
jp
in
dec
lcall
and
bound
jmp
adc
cmpsb
or
popl
and
adc
jo
gs
xchg
imul
and
add
push
jnp
leave
dec
pop
adc
or
imul
jle
dec
mov
subl
mov
dec
or
jle
xchg
xor
adc
lock
or
mov
xchg
or
leave
mov
xor
stos
icebp
data16
movsl
enter
pop
pop
cmp
pop
dec
fdivs
cmp
adc
shlb
cli
mov
lcall
shrl
test
es
popf
dec
or
cmpsl
dec
andl
daa
xor
stos
jmp
rcrb
and
repz
aad
mov
add
push
xchg
jle
xchg
lds
std
gs
lods
stos
in
out
or
fisubrs
sbb
pop
repnz
or
mov
xor
mov
mov
xchg
and
mov
es
mov
mov
fidivrs
insl
mov
ficoms
adc
out
mov
data16
adc
mov
int
push
mov
cmp
pop
sub
xchg
mov
rolb
ds
fsqrt
aad
les
mov
push
mov
movsb
add
jle
cltd
or
xor
fldl
mov
insl
jo
sbb
sbb
test
je
mov
and
and
sub
push
addb
cmp
mov
cltd
repz
push
aas
sub
adc
jmp
pop
add
xor
cli
cmp
push
mov
repnz
mov
adc
iret
dec
xor
mov
mov
dec
push
mov
sub
pop
inc
push
outsl
movsb
les
cmp
sub
dec
fwait
jne
inc
lods
mov
inc
pop
add
addl
cltd
or
fs
and
jp
mov
stos
adcb
cli
sbb
jmp
xor
mov
mov
pop
inc
and
cmpsl
in
insl
pop
into
mov
push
idiv
fnstsw
jbe
lods
pop
insl
daa
and
call
outsb
fcoml
sbb
cmc
icebp
cwtl
mov
stos
xchg
int
cmpb
add
xlat
loop
mov
repnz
fimuls
dec
arpl
fidivrs
sub
sub
negb
add
mov
call
shlb
pop
jno
dec
inc
mov
dec
pop
pusha
cld
je
sub
sub
and
mov
sbb
adc
mov
lods
imul
faddl
int3
inc
cmpsl
ret
dec
arpl
jno
repz
mov
cmp
inc
adc
pop
pop
dec
push
or
ja
pop
mov
imul
dec
mov
mov
xchg
sbb
loop
or
fucomi
bound
cmp
and
ret
push
cltd
shll
cmpsl
test
or
dec
sbb
call
xchg
jo
imul
mov
jnp
cli
cli
dec
jmp
jge
les
data16
mov
dec
inc
xor
and
or
jns
pop
mov
test
sbb
pop
mov
jns
outsl
inc
in
mov
test
jae
test
push
jmp
sarb
add
or
jp
or
add
xor
insl
and
jl
dec
fisubrs
clc
loop
aam
mov
add
fcoml
aas
pop
popa
adc
or
fcmovbe
xchg
loop
adc
popf
mov
testb
add
ret
addb
adc
cmp
cmpb
repz
mov
inc
pusha
inc
in
insb
jns
stc
or
adc
jae
xlat
mov
xchg
aas
and
jmp
and
mov
repz
ljmp
cmp
jl
ja
stos
dec
lcall
andb
popa
leave
lock
loopne
mov
data16
lret
mov
lock
pop
arpl
test
xchg
xchg
push
ljmp
sub
push
mov
fcompl
int
arpl
xchg
push
loope
movsl
stos
daa
lea
lods
insl
xlat
rcll
xor
xor
jne
mov
mov
sub
cmpsb
pop
rcll
jg
addl
js,pn
or
sbb
repnz
js
aad
bound
shlb
movsb
adc
push
cmp
jl
notb
hlt
jne
jb
aas
mov
push
push
jle
lea
in
push
cli
pop
pop
in
jo
mov
jmp
rorl
shlb
lds
popa
divl
xor
icebp
cwtl
frndint
mov
ret
cwtl
sub
pop
inc
xchg
xlat
lock
mov
loopne
mov
lret
or
fst
imulb
jb
and
aaa
pop
aad
mov
aam
aaa
mov
pop
mov
add
push
scas
cmp
mov
push
aas
xor
aaa
jnp
hlt
add
stc
inc
hlt
mov
int3
aam
jp
in
ljmp
xchg
lock
add
jb
out
stc
repnz
pop
lcall
rclb
outsb
sbb
mov
enter
popa
inc
xchg
ret
inc
mov
imul
outsb
ror
or
jp
fdivrp
jb
gs
scas
cld
mov
call
jne
cmp
jmp
adc
dec
cmp
mov
outsl
sbbb
adc
dec
mov
pop
loopne
or
adc
mov
repz
push
sbb
mov
addl
mov
scas
cmpsl
adc
mov
mov
inc
insb
ret
and
and
mov
jle,pn
adc
cmp
add
cmp
jae
in
addr16
xchg
adc
push
stos
adcl
add
jp
icebp
shrl
sarl
pop
sbb
in
scas
shlb
dec
push
jg
jle
mov
xor
ljmp
das
mov
cmpsb
push
clc
add
dec
push
push
imul
repz
out
mov
push
jle
inc
cwtl
es
mov
fcoms
mov
into
subb
loop
mov
es
mov
xor
ljmp
stc
jl
pop
lret
and
adc
xchg
and
cmp
xor
scas
loopne
push
mov
mov
or
pop
dec
adc
or
jo
mov
xchg
inc
sub
stc
dec
rcl
inc
push
mov
jge
inc
mov
ftst
sbb
sub
data16
jns
sti
jns
xchg
and
push
arpl
add
mov
xlat
mov
pop
jp
lcall
mov
aad
lea
sub
sbb
jle
iret
xor
add
bound
notb
inc
lahf
sub
sub
adc
mov
test
push
test
jns
cmc
dec
sti
scas
dec
mov
sbb
mov
lcall
out
adc
sub
popf
dec
xchg
push
lods
sub
pop
ror
jns
sub
mov
sbb
movsl
je
aad
mov
or
popl
dec
push
adc
cli
loopne
addl
jp
pop
mov
push
sbb
andb
mov
pop
pop
jg
out
push
and
and
rcll
bound
xor
sub
std
enter
shll
cmp
and
jne
fildl
cmpsl
sbb
shll
mov
pop
push
fcom
ljmp
add
nop
pop
divl
or
pop
push
pop
push
cltd
hlt
aad
rcrb
in
movsl
mov
cmp
push
inc
push
mov
mov
pushf
or
push
jns
insl
xchg
or
int3
sbb
pusha
hlt
sbb
call
xchg
lods
mov
mov
pop
inc
jnp
bound
fnsave
ja
or
and
rol
push
cmp
outsl
iret
pop
jle
add
iret
mov
sub
sbb
xchg
pop
pusha
loope
clc
mov
out
adc
inc
pop
outsb
dec
adc
or
lds
divb
inc
idivl
adc
and
xchg
enter
xor
push
dec
divl
cmp
movsb
push
push
push
stos
pop
adc
cmp
inc
and
inc
cld
testl
mov
shrb
or
insb
add
inc
xor
jae
scas
lods
bound
xchg
fildll
shll
int
je
push
pop
out
push
out
mov
sub
add
push
in
shll
add
jae
or
pop
sub
shrl
addr16
mov
sarl
test
jecxz
mov
xchg
cmovs
dec
jle
sub
mov
lcall
mov
mov
dec
cmp
add
inc
ja
sahf
mov
jmp
xor
add
testb
sbb
cmp
inc
xor
adc
aad
sbb
pop
add
lret
sbb
and
gs
inc
je
imul
jg
insb
mov
mov
leave
dec
jmp
or
sub
cmpsb
mov
mov
adc
sti
repz
add
mov
inc
mov
stos
mov
js
dec
dec
mov
push
inc
push
xor
xor
lcall
xor
inc
dec
pop
out
aam
mov
stos
arpl
xchg
sar
daa
inc
mov
insl
cli
pushf
enter
clc
test
add
insb
mov
fsubrp
xchg
out
rol
movsb
dec
unpckhps
dec
sub
pushf
je
sub
leave
lahf
pop
jge
xor
outsl
mov
jb
sbb
dec
xor
outsb
imul
mov
xor
mov
xor
neg
in
ja
add
xchg
inc
gs
adc
bound
inc
or
scas
jo
push
icebp
test
addl
cltd
xchg
data16
sub
jmp
shlb
mov
into
mov
outsl
inc
pop
jmp
push
arpl
int
bound
lret
cmp
imull
pop
mov
jmp
lds
in
cmp
cld
pop
xchg
imul
cwtl
sbb
xor
sub
mov
xlat
jle
movsl
dec
daa
jnp
inc
loope
gs
ret
jmp
xchg
mov
lds
cmp
mov
es
int3
xchg
cmpsl
pop
leave
xchg
lahf
pop
add
xchg
test
push
cmpsl
lret
fsincos
fadds
lahf
pop
mov
repnz
push
pop
insb
cmp
stos
test
out
je
jp
jno
orl
iret
dec
dec
sbb
jo
scas
lea
mov
les
incl
mov
pop
ds
daa
mov
fldenv
inc
stc
xchg
sahf
push
push
cmpsb
mov
outsb
aad
lret
inc
sbb
mov
adc
ja
mov
adc
fs
mov
aaa
std
push
mov
stc
loopne
loop
inc
or
aam
dec
movsb
mov
dec
mov
add
lods
mov
or
pop
sub
aad
adc
mov
pusha
mov
jno
pushf
insl
test
mov
std
cltd
push
or
fists
xchg
or
loop
out
imul
daa
adc
inc
sub
loopne
push
bndldx
lret
sub
aam
jb
xor
mov
push
adc
xor
popa
push
enter
mov
sbb
cld
negl
and
or
xor
adc
sbb
out
add
loopne
popa
mov
lods
mov
sbb
cmpsb
dec
iret
mov
xor
pushf
inc
sub
aaa
mov
sub
bound
fnsave
jae
daa
add
add
inc
popa
xchg
lcall
fwait
aaa
gs
cmp
push
lea
mov
jb
xchg
mov
out
test
cmp
clc
push
fdivl
js
in
bound
dec
xchg
jl
pop
mov
loope
mov
xor
sbb
rcrl
push
js
je
dec
cmpsl
pop
mov
popf
rorl
push
inc
mov
jle
xor
sbb
cld
mov
dec
add
push
inc
inc
and
push
rcrb
jecxz
repnz
mov
lahf
mov
fstps
fdivl
xchg
push
neg
adc
or
int
shrb
mov
jecxz
mov
push
int
xchg
rcrb
adc
mov
or
add
adc
call
inc
test
mov
push
adc
xor
sbb
dec
mov
bound
addr16
push
nop
mov
in
mov
pop
sub
out
mov
dec
xchg
inc
push
pusha
pop
stos
sbb
sbb
enter
and
ja
dec
mov
lds
dec
lahf
inc
push
mov
fnsave
inc
loopne
mov
add
xor
cmpsb
sbb
pusha
mov
shll
repz
cwtl
add
pop
and
pop
loopne
int
push
pop
mov
xor
or
add
cld
pop
and
and
xchg
adc
out
aaa
inc
pusha
sti
nop
or
push
xchg
jecxz
dec
insb
sbb
pusha
shlb
sub
sbb
push
insb
repnz
or
les
jnp
cmp
lods
mov
sti
andb
xor
orl
cwtl
and
jle
iret
jnp
jnp
cmpsl
pop
out
pushf
pop
pop
xor
jmp
inc
outsl
sahf
xchg
in
int3
vmovsd
and
data16
insl
lahf
cmp
addr16
fildll
enter
ss
or
jge
xchg
in
jno
and
push
ljmp
push
leave
mov
std
add
movsl
pop
mov
jg
rcrb
sti
adc
adc
jecxz
fwait
mov
call
int
add
adc
repnz
daa
inc
outsl
std
mov
test
popf
test
call
xor
mov
pop
iret
or
andl
stos
shll
jae
dec
jbe
orl
lret
pop
sub
fistpll
push
stos
xchg
js
fdivs
and
jo
or
fstps
xchg
cmp
sub
or
inc
out
pusha
mov
je
adc
add
sub
cmp
pop
sbb
adc
loopne
fcmovb
pop
out
inc
rcl
mov
jno
and
inc
pop
neg
inc
hlt
in
jno
push
out
sub
xor
fstpt
test
add
jno
arpl
mov
lret
lcall
cli
loop
and
mov
pop
stos
insb
mov
mov
jnp
sbb
mov
rcrl
adcb
divb
sar
mov
insl
test
lret
mov
scas
pop
repnz
push
cltd
jne
out
xchg
sub
aam
push
out
pop
adc
mov
add
aam
xor
notb
push
dec
imul
dec
mov
out
iret
dec
pop
jne
movsl
sub
lods
icebp
mov
lret
gs
mov
flds
mov
gs
int
pop
shr
mov
je
ret
ror
loopne
push
es
fstpl
lret
hlt
pop
push
loop
jo
test
test
sti
stc
sbb
xchg
push
adc
fistl
pop
xor
fisubl
cmp
sub
jbe
xchg
jg
jmp
test
lds
mov
das
addr16
aad
pop
gs
int
push
mov
shr
leave
mov
sbb
popa
and
mov
sub
add
jmp
ret
dec
dec
mov
gs
xorl
jl
xchg
out
inc
aad
test
jnp
mul
stos
add
repnz
dec
scas
mov
mov
ret
mov
pop
sar
jnp
adc
xchg
imul
ljmp
repz
daa
adc
mov
lea
jns
mov
cmp
icebp
adc
xor
dec
shlb
and
dec
push
dec
es
adc
fidivrs
insb
jnp
pop
push
shl
mov
adcb
jl
into
sbb
loop
push
cmc
inc
lods
dec
jecxz
jle
dec
out
test
bound
push
cli
push
repz
bnd
and
cmp
sub
mov
inc
clc
sti
mov
lds
movsb
dec
andb
push
add
std
push
fistps
mov
mov
mov
xor
lods
sub
cs
add
pop
ja
in
daa
add
xor
push
sbb
push
jmp
test
or
roll
push
sub
mov
and
or
dec
cli
cmp
push
adc
scas
mov
push
ret
loop
in
andb
ja
cltd
sarl
in
ss
clc
push
mov
in
pop
outsb
fstl
inc
jb
iret
andl
xlat
scas
mov
popf
imul
mov
mov
ret
cmp
out
cltd
mov
lret
rcll
in
inc
out
xchg
dec
push
inc
pop
rorl
or
mov
adcb
mov
pop
insl
fwait
cmp
lcall
xlat
and
push
imul
add
fdivrl
daa
inc
inc
popf
jnp
add
dec
out
stc
les
jno
lods
pop
jns
sbb
add
adc
out
std
and
fwait
hlt
divl
cmp
dec
shll
mov
xchg
push
mov
outsb
leave
mov
aaa
adc
inc
inc
adc
pop
add
cs
cmp
sub
addr16
jge
push
je
rolb
outsb
fstps
int3
push
xor
in
inc
mov
mov
inc
cmpsb
xchg
rcll
ficompl
xor
or
pop
jmp
in
outsb
loope
das
adc
fstl
cmp
enter
ljmp
adc
mov
cmp
or
adc
movsb
sahf
mov
icebp
sub
fcoms
pop
outsl
rcrl
dec
mov
loop
sub
dec
es
and
cltd
xor
stos
ret
int
jb
es
gs
ja
lcall
cld
mov
sbb
sub
jnp
aas
cmpsb
out
mov
dec
jnp
push
jo
mov
aas
push
sbb
xchg
mov
sbb
das
or
push
shll
and
inc
bound
lret
mov
mov
jb
mov
popa
ds
ss
jo
sub
sub
test
icebp
mov
jp
sub
mov
and
out
xor
stc
xor
aam
push
push
sbb
xorl
das
push
outsb
dec
clc
mov
mov
cli
jg
sahf
mov
cmc
popf
push
andl
xor
pop
rorb
ljmp
inc
push
mov
fs
push
aaa
cmp
faddl
bnd
fs
sbb
mov
and
add
dec
hlt
cmc
push
mov
fcom
mov
sub
xchg
xchg
orl
stos
xchg
xor
movsb
dec
and
das
and
aad
clflush
outsb
add
inc
push
ss
mov
pop
stos
push
addl
test
cmpsb
jmp
dec
dec
out
repz
or
mov
push
lret
push
jae
lea
mov
mov
or
pushf
shrl
or
shr
arpl
out
fs
sub
jo
mov
mov
int
or
adc
ficoms
incl
mov
jbe
sti
ja
inc
icebp
insb
test
das
and
jg
adc
xor
jbe
mov
and
xchg
nop
loop
mov
ss
je
movsb
jl
lret
mov
push
lcall
inc
pop
test
inc
mov
xlat
inc
stos
loop
mov
aad
nop
mov
rcll
add
iret
xor
pop
jbe
fbld
jge
lcall
adc
pop
and
push
dec
dec
lock
dec
mov
mov
mov
sbb
enter
sbb
and
and
sti
sbb
or
cli
mov
daa
pop
xor
cmp
ficomps
mov
lods
dec
adc
dec
shl
cmp
fstl
jg
dec
iret
test
fidivs
shll
clc
addl
int3
dec
sahf
pop
dec
test
cltd
jb
mov
add
pushl
mov
xchg
xchg
pop
stos
popf
jg
mov
sub
int
sbb
push
cltd
or
stos
jg
pop
call
xor
xor
sbb
push
fmuls
pop
out
les
out
adc
jp
jl
mov
and
sub
mov
js
xor
sti
adc
add
arpl
mov
hlt
ds
push
sbb
inc
in
dec
daa
pop
cli
pushf
subl
cli
test
sbb
aam
out
data16
sti
xor
push
fs
call
fwait
scas
and
mov
or
pop
inc
push
push
jno
mov
mov
lods
inc
bswap
out
scas
xchg
cmp
ja
jns
aas
in
lds
or
popa
icebp
sub
popl
out
jne
or
cwtl
push
lret
sub
mov
sti
cmp
jbe
mov
js
ss
loopne
fwait
sub
cmp
push
lods
stc
sub
mov
and
lahf
shll
mov
mov
xor
imul
xor
inc
sub
or
push
inc
mov
loope
dec
and
sbb
adc
jl
stc
push
mov
stos
jb
in
std
or
repz
and
jge
stos
dec
or
scas
nop
out
sub
lock
inc
jmp
jo
add
cmp
arpl
aas
mov
aaa
les
xchg
loope
addr16
es
clc
mov
pop
loope
dec
outsl
hlt
adc
dec
inc
and
mov
mov
push
imul
inc
std
cmp
insb
jae
fcompl
jbe
jg
in
inc
mov
pop
lds
sub
sbb
in
cld
mov
jge
jmp
cmp
ja
and
push
and
jbe
xchg
outsb
mov
fwait
sub
or
jge
fdivl
shlb
out
mov
lods
std
jp
or
sbb
xchg
sub
mov
pop
sub
xchg
pop
and
mov
dec
dec
mov
inc
xchg
outsb
mov
mov
pop
pop
rcrb
mov
xchg
andl
call
mov
sbb
test
add
cmp
mulb
fs
ds
adcl
scas
push
or
aam
push
mov
inc
adc
test
gs
out
lods
lcall
pusha
mov
dec
testl
iret
aad
xor
mov
dec
or
jnp
pop
jmp
mov
xchg
cmpsb
pop
pop
add
adc
pop
out
aad
push
inc
insl
test
dec
out
icebp
fiaddl
mov
push
adc
xor
lock
push
mov
test
mov
jae
cmp
inc
ja
cs
push
loop
push
push
cmp
push
stos
mov
push
das
popf
ror
jge
cvtps2pd
pop
inc
mov
push
adc
gs
mov
test
adc
and
and
shlb
sbb
aam
mov
cwtl
push
or
jnp,pt
sub
inc
addr16
sbb
mov
inc
sub
bound
je
adc
loope
stos
cmp
dec
push
test
jno,pt
imul
xchg
scas
add
outsb
in
in
stos
test
push
sahf
xor
mov
or
xor
add
test
aad
mov
mov
xor
bound
adc
inc
push
xor
jmp
enter
dec
jge
out
in
es
or
int3
nop
sarb
mulb
repz
inc
sar
jle
add
in
mov
std
mov
dec
pop
adc
pop
push
pop
mov
outsl
xor
push
xor
sarb
fs
add
push
mov
int3
fldenv
stc
jne
lret
xchg
jnp
mov
int
pop
mov
outsb
mov
clc
mov
or
or
or
jecxz
aad
in
ljmp
fwait
adc
into
and
xor
outsl
js
add
jge
ss
in
int
js
das
in
stc
lea
out
mov
daa
inc
xchg
sbb
jl
lock
sub
dec
cld
add
or
jle
fsubrl
sbb
idivb
push
into
ret
daa
lcall
les
enter
int
ret
gs
add
jge
push
xchg
mov
mov
movsb
pop
test
ljmp
cmp
xchg
and
sub
out
mov
jb
bound
dec
cwtl
pop
xor
pop
add
js
mov
int3
sbb
int
mov
mov
xchg
inc
pop
mov
test
js
scas
lock
pop
cmp
jno
cmp
jle
popa
push
jle
int
popf
je
stc
sbb
pop
lea
push
or
rorl
add
sub
sub
shll
filds
fisttpl
xor
push
mov
push
xchg
cltd
jmp
mov
and
fwait
jns
mov
cmc
repz
pusha
std
lods
cmp
dec
paddw
xchg
jno
sbb
stc
xchg
mov
test
idiv
aas
add
lcall
arpl
cmp
mov
cmp
mov
stos
or
sub
clc
mov
cmpsl
xchg
xor
insb
jo
lds
pop
mov
iret
into
adc
dec
cmp
in
jo
dec
inc
jae
and
test
lret
mov
dec
repnz
xchg
pop
sti
mov
cs
xchg
roll
fiaddl
push
test
xor
xchg
xor
movsb
rcrl
cmp
xor
les
jb
mov
movsl
ret
pop
push
test
shr
pop
incb
stc
or
adc
push
movsl
movl
jl
int3
call
cwtl
sti
pop
imul
test
lahf
and
sbb
bound
push
rorl
int
stos
xor
in
aad
xchg
call
mov
addb
sti
fmull
jge
xchg
jp
mov
xchg
lods
cltd
dec
inc
mov
rcr
scas
xor
imul
rol
jecxz
ret
fidivl
in
call
sub
loopne
bound
inc
and
xchg
xchg
loope
push
pop
and
fwait
mov
mov
adc
in
xlat
in
jge
adc
pop
enter
pushf
mov
insb
pop
imul
xor
ss
jp
dec
je
out
jns
shl
pop
dec
bound
xchg
cmp
mov
insb
repnz
cmp
pop
imul
jno
xchg
xlat
cwtl
sbb
filds
aas
mov
enter
add
mov
inc
add
cmp
mov
pop
jo
ret
xchg
adc
int3
rorl
jp
test
mov
orb
shlb
adc
incb
sub
inc
mov
add
adc
adc
inc
inc
lret
and
into
aam
sub
mov
xor
inc
test
mov
xor
shl
nop
or
movsl
cltd
ret
add
lret
insl
dec
inc
outsl
pop
push
jecxz
xor
adc
cmpsb
in
pop
cmp
mov
nop
or
pop
xor
orl
mov
xor
mov
ret
add
shrb
mov
loopnew
addl
and
or
jns
or
push
ficompl
mov
js
cmp
lds
push
cld
xor
mov
lea
cmp
je
mov
mov
mov
mov
mov
xor
xor
mov
add
div
mov
xor
lea
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
imul
mov
xor
mov
lea
cmp
jne
mov
jmp
mov
mov
mov
xor
add
mov
mov
add
xchg
xor
push
mov
pop
mov
add
lea
add
add
push
inc
pop
dec
xchg
dec
xchg
dec
xchg
dec
push
mov
pop
dec
call
cmp
je
xchg
push
pop
push
pop
inc
xchg
sub
xchg
dec
dec
mov
imul
add
xchg
push
xor
mov
dec
inc
add
dec
xor
add
pop
mov
pop
pop
pop
leave
ret
push
mov
sub
xor
xor
xor
push
push
movzwl
adc
mov
mov
or
mov
mov
mov
or
andl
xorl
movl
movl
mov
mov
sub
mov
xorl
andl
xor
or
inc
mov
cmpl
jne
push
pushl
pushl
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
sub
mov
mov
sub
mov
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jne
xor
or
inc
mov
cmpl
jb
and
orl
mov
mov
or
sub
xor
xor
and
mov
sbbl
orl
adc
mov
mov
xor
xor
mov
sub
and
sub
andl
mov
inc
mov
cmpl
jne
push
push
push
push
push
push
call
cmpl
jb
add
mov
adc
orl
mov
mov
movl
cmpl
je
cmpl
jne
call
mov
dec
mov
jmp
sub
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
mov
mov
xor
mov
add
or
mov
mov
mov
sub
mov
orl
mov
xor
add
push
mov
xor
add
push
mov
xor
add
push
lea
push
pushl
pushl
call
test
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
lea
mov
mov
test
je
lea
mov
mov
mov
mov
mov
sub
mov
mov
xor
mov
sub
add
mov
mov
mov
mov
pushl
movb
mov
pushl
pushl
pushl
pushl
pushl
pushl
pushl
mov
call
mov
mov
add
pop
pop
leave
ret
push
mov
sub
movl
lea
mov
add
push
and
mov
mov
lea
mov
mov
mov
mov
andl
xor
subl
add
adcl
mov
dec
mov
sub
mov
mov
andl
add
push
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
push
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
andl
mov
xor
mov
andl
add
movl
cmp
je
movl
mov
jmp
mov
mov
cmp
movl
jne
movl
push
movl
jmp
mov
mov
mov
cmp
movl
jne
mov
xor
mov
dec
xor
adc
add
xor
or
adc
mov
mov
adcl
mov
xor
addl
add
imul
mov
orl
xor
movl
add
movl
cmp
mov
mov
push
movl
je
movl
mov
orl
add
movl
cmpl
je
cmpl
jne
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
movl
cmpl
je
cmpl
jne
push
push
push
call
mov
dec
mov
jmp
subl
mov
addl
xor
xorl
add
xorl
imul
mov
movl
jmp
and
mov
xor
sbb
mov
movl
cmpl
je
cmpl
jne
pushl
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
xor
mov
mov
sub
jmp
inc
sbb
fwait
jnp
mov
mov
add
jp
pop
jp
adc
scas
mov
xor
fmuls
or
mov
cmpsl
fdivrs
subb
out
test
es
testb
insb
fmuls
pop
push
outsb
pop
std
mov
sub
cmp
stos
mov
lret
lcall
jo
mov
icebp
cmpsl
test
sbb
sbb
test
imul
gs
addr16
popa
mov
xor
cmp
cmp
jle
jle
xchg
leave
cmp
test
adc
test
in
and
mov
sub
mov
pushf
push
inc
pop
loopne
xor
lret
fbstp
scas
fcomps
nop
jno
mov
mov
outsb
dec
jno
orb
jnp
jmp
int3
call
sbb
loopne
stos
mov
jl
sub
xor
dec
cmp
xchg
mov
pop
hlt
xchg
loope
pop
xor
loope
mov
popa
les
loope
out
jnp
adc
insb
nop
imull
and
in
movsb
push
jnp
test
data16
sbb
cmp
outsl
mov
pop
fdivrp
mov
sub
popf
jns
dec
add
lret
pop
adc
cmp
lea
jnp
jmp
call
mov
adc
ficompl
inc
in
test
mov
lods
lcall
je
pop
sbb
mov
xor
ljmp
adc
cmpsl
mov
jb
insb
and
or
push
out
outsb
xchg
cmp
mov
push
inc
jp
loopne
add
ja
outsl
mov
cld
push
loopne
adc
cmc
ja
sti
out
loopne
xchg
imul
jno
mov
or
fsubr
mov
iret
subb
pop
jp
enter
test
adc
mov
dec
ss
mov
je
in
out
lds
inc
xor
add
dec
push
xor
rorl
repnz
mov
jmp
test
das
add
xor
fsubrl
test
imul
jg
scas
jbe
leave
or
dec
cmp
call
or
mov
orb
fsubrp
pop
mov
gs
add
cmp
and
cmc
shlb
lea
stos
es
inc
push
in
stos
test
push
in
or
xchg
sbb
jle
or
push
stos
out
clc
dec
out
data16
in
cmp
mov
push
push
adc
cwtl
dec
lds
and
es
scas
mov
das
jmp
dec
out
sub
adc
pop
sub
dec
jns
insl
sahf
pop
in
push
cmp
sub
loope
and
adc
or
or
lret
ret
mov
nop
mov
mov
out
fcmovbe
repz
add
std
sub
lods
or
enter
xchg
cli
inc
sti
cmpsl
push
or
cmpsb
jbe
or
and
data16
rorl
xchg
popf
imull
movsl
xor
push
popa
sbb
dec
sahf
add
inc
adc
sub
add
mov
sub
xor
mov
fimuls
jne
fldt
pop
inc
mov
jl
fdivr
pop
add
sub
das
add
mov
ret
scas
and
or
inc
push
push
push
xchg
aas
sbb
jmp
mov
fnstcw
mov
xchg
dec
add
mov
pop
dec
mov
shl
or
or
arpl
sub
movsl
sarb
and
scas
jno
mov
out
in
mov
repnz
in
cmovge
cwtl
js
push
lds
aas
jle
or
imul
mov
fldt
jne
push
cmp
sbb
sub
pop
shll
pop
sub
mov
out
jge
stos
or
sbb
mov
dec
ret
add
inc
mov
call
in
call
leave
std
push
out
loop
in
scas
scas
movsl
jb
mov
stos
inc
enter
inc
addr16
mov
lods
mov
mov
sub
mov
scas
sahf
leave
es
mov
inc
bound
push
xchg
add
pop
cmp
pop
dec
fbld
or
add
cwtl
fsub
inc
mov
subb
xchg
pop
scas
xchg
jnp
mov
mov
rorl
mov
pop
enter
int
pusha
in
sbb
mov
jecxz
stos
testb
or
mov
out
aam
enter
shr
mov
dec
and
push
test
out
bswap
dec
mov
xor
xchg
rcrb
mov
leave
adc
jbe
push
shrb
loop
cli
rolb
stos
adc
inc
adc
adc
cmp
cmp
mov
fdiv
push
add
push
dec
ja
fcmovu
mov
dec
sti
xchg
or
enter
les
mov
lret
dec
mov
lock
mov
xlat
loopne
push
es
ret
push
pop
push
nop
fsubrs
sub
adc
rclb
lods
lahf
jg
adc
dec
pop
in
lods
sub
push
or
test
xchg
nop
scas
popf
std
mov
lds
push
pop
addr16
std
lea
mov
and
jge
mov
mov
jmp
jmp
sbb
sub
int
cmp
mov
sub
pop
cmp
test
sub
cmp
mov
or
push
imul
jnp
nop
push
lock
jle
scas
lret
xor
daa
test
mov
xchg
mov
mov
mul
push
mov
sub
pushf
inc
fiaddl
dec
fnsave
cld
cmp
std
jmp
cmpsl
scas
mov
adc
fst
fdivs
sbb
cli
cltd
xchg
xor
adcb
push
mov
aad
adcb
adc
cwtl
std
pushf
push
xchg
jecxz
outsb
aas
jp
je
mov
and
lea
pop
fdivrs
push
dec
inc
shr
jnp
call
mov
arpl
ljmp
adc
push
cmpsb
push
add
dec
add
cmp
test
add
cltd
and
inc
sub
out
out
or
idiv
mov
fists
std
out
popa
lahf
into
ret
rolb
fs
ret
jmp
adc
pop
mov
mov
xchg
mov
loope
cmpsl
sbb
sub
dec
cmpsl
and
into
andl
sub
outsb
arpl
mov
jmp
out
add
int3
add
or
xor
insl
sub
mov
enter
bound
mov
cli
pushf
aam
push
pop
xchg
mov
mov
mov
mov
lods
jbe
mov
xchg
ss
stos
gs
cli
ljmp
cmp
xchg
lahf
aam
pushf
cld
jp
dec
repnz
call
inc
mov
fimull
xchg
arpl
outsb
arpl
lds
cmc
stc
mov
movsl
out
and
divb
add
xchg
cld
daa
cld
sub
in
sub
and
xlat
sbb
les
inc
lea
pop
jle
add
cli
inc
inc
testl
addr16
dec
pop
or
xchg
roll
xchg
cmpsb
mov
pop
pop
sbb
pushf
mov
inc
lret
add
add
rclb
pop
push
nop
jo
dec
in
push
outsl
pop
mov
cld
js
ret
push
imul
dec
idivl
aas
add
call
sbb
stos
scas
ss
ficoml
pop
jmp
add
pinsrw
rcrl
adcl
cltd
cmpsb
or
hlt
push
add
stos
addb
push
lret
in
je
xlat
mov
push
leave
movsl
aam
aas
pusha
ret
add
daa
sub
int3
sbb
xchg
stos
fisttpll
addl
dec
mov
xor
andl
nop
cmp
arpl
ja
mov
push
add
in
pop
jb
mov
lret
jle
repz
hlt
lcall
push
mov
xchg
nop
mov
scas
in
or
push
push
jmp
into
sbb
cwtl
scas
push
xchg
imul
ret
pop
jnp
cmp
sbb
pop
lahf
pop
sti
mov
pushf
std
xchg
and
or
idivb
iret
or
jb
jnp
rolb
xchg
dec
and
bound
sbb
cmp
mov
or
and
or
clc
fcmovb
push
loop
std
jmp
adc
dec
cmp
jmp
push
aad
push
int3
mov
jb,pt
leave
aas
xchg
out
mov
mov
cli
and
nop
pop
xchg
test
mov
dec
imul
mov
pop
inc
or
jne
xchg
push
aas
add
inc
arpl
sbb
out
rcrl
ret
xchg
pusha
rclb
pop
xor
jge
out
dec
and
xchg
gs
push
gs
inc
push
insl
jp
xor
pushl
xchg
subl
and
xor
lods
repz
lods
fisubs
xchg
cmovb
rolb
jno
lods
mov
shrl
xor
int
cs
cmp
sahf
jne
cmp
cwtl
push
out
xlat
pushf
xor
jns
test
xor
sti
idivb
pushf
xchg
in
movsb
frstor
flds
xchg
xchg
stos
das
inc
and
cmp
sub
mov
cmp
jle
insl
sub
icebp
and
or
xor
sub
pusha
push
push
cmpsl
rorl
mov
xchg
mov
pusha
jae
adc
lahf
faddl
mov
aam
add
cld
fcoml
loop
jg
pop
fstl
shl
imulb
test
push
jb
add
jb
notb
dec
scas
push
lods
sbb
push
shrb
rol
xchg
mov
fcmovnb
pop
in
mov
push
sbb
push
repnz
mov
xchg
xchg
nop
pop
cmp
and
xor
mov
adc
ja
inc
xlat
sub
or
fwait
xor
stos
jmp
mov
ror
xchg
cmc
cmp
pop
outsb
add
pop
bound
subb
inc
sbb
jmp
ret
mov
out
std
incl
ds
inc
push
ja
adc
fisubrl
repnz
xchg
cmpsl
mov
div
pop
cmp
jnp
out
xchg
sahf
out
push
mov
lret
mov
mulb
sti
call
jge,pn
int
fisubs
int3
ret
std
mov
cld
jl
repnz
jg
push
icebp
test
mov
xor
test
xor
adc
push
mov
lcall
mov
loop
imul
mov
ljmp
inc
sbbb
rcrl
sub
pop
fwait
pop
mov
or
and
mov
pop
cmpsl
out
cmp
cmpsl
xchg
insl
or
and
test
cld
inc
or
call
out
test
shll
pusha
adc
dec
push
xor
push
test
sub
mov
mov
inc
or
add
adcl
lock
or
jl
and
sbb
mov
inc
dec
xchg
sbb
mov
scas
sti
cmp
xor
inc
aam
mov
adcb
sbb
mov
mov
add
sti
pusha
loop
lock
mov
and
sbb
clc
mov
push
sub
stos
imul
out
xchg
clc
outsl
cmpsb
mov
outsl
inc
jae
mov
es
cmp
ss
movsb
or
mov
sbb
outsb
sti
imul
arpl
test
jl
stos
cs
mov
sbb
outsb
inc
fcoml
or
cld
pop
fwait
xor
negb
dec
xor
iret
sahf
jns
cltd
add
mov
bound
pop
pop
inc
imul
pushf
pop
int3
hlt
jg
pop
add
shlb
lds
or
clc
xchg
in
inc
cmc
je
xor
orl
adc
mov
jae
adc
aam
lods
jns
out
mov
adcb
lea
pop
into
push
inc
and
pushf
mov
sbb
iret
push
pushf
push
sbb
mul
push
cmc
out
mov
xchg
fisttpl
or
or
int3
push
mov
xchg
call
pop
and
leave
scas
xor
pop
repnz
stc
data16
icebp
jns
rolb
sbbl
pop
ficompl
pop
std
add
movsb
scas
addr16
push
push
icebp
in
incl
jp
push
inc
imul
add
lods
mov
jg
dec
into
fsubl
pop
testb
faddl
pop
repz
ret
and
or
bound
dec
insl
push
mov
push
fsubl
test
sbb
xor
pushf
addr16
mov
dec
cli
pop
sbb
dec
adc
pushf
stc
fisubl
std
cmpsl
sub
cmpsl
xchg
insl
imul
mov
neg
out
std
cld
push
popa
out
adc
cmp
mov
subl
daa
mov
pop
ret
mov
add
jle
fldt
into
adc
xchg
rorl
fnop
and
test
mov
jle
cmp
jae
mov
inc
out
divl
pop
mov
int
mov
rorl
sahf
inc
lds
mov
sahf
out
mov
pop
lods
add
sbb
lahf
sar
xlat
je
mov
scas
fmull
xor
out
dec
xor
outsl
lds
dec
imul
stos
fxch
xor
push
pop
shrl
cmp
sbb
mov
and
push
jns
cmp
or
sub
push
inc
das
mov
out
or
mov
mov
or
int
jge
mov
stos
pop
sub
mov
xchg
jno
inc
or
scas
aaa
cmp
out
sbb
iret
jae
sbb
lods
std
mov
push
inc
mov
out
push
int
fdivrp
stos
mov
inc
jg
push
inc
jbe
flds
cmp
inc
pop
rcr
xor
outsb
shlb
pop
insb
and
inc
ror
push
adc
test
in
insb
xor
icebp
xchg
adc
mov
ds
xchg
ljmp
sub
aad
fsubrs
fs
and
cmp
ljmp
insl
or
clc
sub
fstl
in
jecxz
leave
sbb
clc
sbb
inc
adc
xchg
sub
mov
rolb
in
outsl
and
jae
cld
mov
mov
and
imul
mov
push
int3
or
and
into
stc
adc
dec
pop
in
inc
andl
imul
aam
das
cmp
sub
loopne
xchg
jbe
inc
pop
mov
insb
movsl
sub
mov
xor
shll
adc
out
cmp
push
pop
loop
mov
sub
hlt
or
fisttps
mov
mov
inc
mov
xor
fwait
push
clc
sub
orl
add
das
mov
xor
outsl
add
cmp
mov
ret
or
lcall
or
in
ss
aas
bound
inc
adc
mov
pop
scas
jge
push
aas
test
movsl
cmpsl
cmp
nop
xor
xor
popf
sub
nop
ds
mov
test
xchg
add
cmp
jno
cmc
mov
je
adc
repnz
jmp
mov
lret
ss
inc
test
call
sbb
insb
neg
xor
bound
cmpsl
sub
fstpl
sti
int
inc
addb
pop
stc
orl
stc
sbb
sbb
ss
hlt
scas
repnz
call
adc
insb
mov
pop
and
pop
dec
lods
sub
xor
jmp
push
mov
inc
sbb
xchg
mov
rorl
cmpsl
es
ss
dec
out
mov
ljmp
mov
xorl
mov
inc
jg
jl
sarb
dec
cmp
lret
out
fcmovnu
fistpll
leave
enter
xor
add
sub
popf
repnz
test
cmpsl
adc
cmovnp
aam
subl
ret
pop
dec
mov
fmul
push
xchg
and
loopne
ret
dec
sahf
scas
fwait
je
out
loopne
lret
dec
stc
cmp
mov
iret
xchg
ss
inc
mov
inc
dec
in
shll
shrb
inc
adc
jne
int3
aam
popf
cmpsl
in
out
clc
xchg
mov
clc
mov
cmpsb
mov
and
loope
xor
adc
std
in
inc
fldenv
inc
lods
push
pop
xor
or
adc
dec
pop
aad
or
dec
test
cmpsb
hlt
pop
arpl
outsl
call
negl
out
jno
adc
dec
pushf
pop
shlb
adc
in
push
xor
jle
loop
jno
stos
aas
movsb
sahf
sbb
repnz
lahf
or
sub
fidivrs
mov
push
lsl
jb
hlt
ficoml
sub
push
lret
pop
ds
sarb
imul
shll
fidivs
push
pushf
add
cmp
bound
mov
cmp
test
test
or
fisubrl
xchg
lods
aaa
outsb
push
ret
jae
jne
push
inc
enter
dec
fs
jp
jle
adcl
sbb
xor
flds
mov
ds
ja
shll
leave
lret
mov
inc
fbstp
repz
ret
pop
loope
bnd
in
sub
mov
ss
or
sbb
pop
inc
dec
cmp
pop
or
jbe
push
add
cmp
inc
inc
test
push
shl
movsb
in
and
push
or
push
push
in
lea
gs
lea
add
jmp
mulw
cmp
in
rorl
and
cmp
sarb
lret
fnstcw
adc
dec
sub
adc
push
xor
xlat
in
jmp
outsl
insb
ret
cmp
cmc
movsl
push
lret
into
mov
push
xchg
dec
in
sub
mov
xchg
add
add
lcall
push
scas
sub
stc
sti
data16
mov
sub
negl
inc
inc
pop
dec
das
fstl
mov
mov
mov
xor
dec
or
xor
movsl
ljmp
push
push
adc
in
adc
ljmp
sti
out
js
iret
cs
and
inc
pop
aam
push
xbegin
and
pusha
addb
icebp
jno
xchg
ljmp
push
clc
push
cmp
sub
fistpl
pop
shlb
mov
dec
mov
mov
and
mov
daa
lds
loopne
adc
xchg
adc
xchg
jmp
mov
xchg
sub
cmp
push
popf
push
dec
lret
adcl
push
es
inc
jo
xchg
or
sar
jecxz
jg
inc
add
push
mov
mov
push
xor
repnz
das
leave
out
xor
and
add
insb
xor
jle
das
jns
mov
hlt
stc
jns
mov
fsubrp
gs
lock
jnp
mov
mov
mov
out
leave
bound
cwtl
ljmp
sbb
mov
pusha
xor
inc
gs
cmp
pop
ss
pop
cmc
or
nop
jbe
jbe
das
cmp
repnz
and
ja
push
or
xor
dec
test
cs
xor
sub
xchg
sub
mov
rcl
dec
or
or
push
rol
mov
ret
pop
sbb
jno
push
mov
cmp
int3
add
loop
or
jecxz
sti
sahf
mov
lea
test
push
ficoml
mov
sbb
xor
in
das
in
jg
in
xor
fstl
in
mov
sub
inc
rol
mov
adc
lods
fisttpll
xor
rclb
mov
and
push
shll
push
lret
sti
inc
sub
dec
push
pop
fnclex
sbb
es
adc
jnp
inc
nop
mov
adc
fidivl
popfw
and
inc
rcrb
mov
fs
dec
cld
adc
sarl
movl
fisubl
aaa
jle
sbb
sbb
sub
cmc
jl
rcrb
sti
loope
mov
mov
pop
dec
jle
jmp
mov
mov
inc
mov
sbb
pop
in
sbb
push
in
ficomps
inc
sub
cmp
js
jb
xor
loope
mov
inc
cmp
aas
sbb
ja
jmp
movsl
rolb
fwait
mov
inc
inc
jge
xor
jle
adc
or
jbe
push
loop
lret
std
or
xor
pop
mov
inc
push
push
sbb
fdivrl
push
pop
mov
cmpsb
flds
aaa
ds
xchg
or
mov
jl
pop
in
ret
test
das
and
nop
pop
inc
cwtl
std
sbb
call
mov
adc
insw
or
stos
cmp
test
adc
mov
mov
pushf
cmc
push
inc
inc
jne
mov
push
mov
ljmp
mov
inc
xchg
mov
jle
sub
mov
adc
jnp
nop
dec
mov
std
leave
jmp
movsb
inc
fildl
rcll
xchg
jne
lock
push
stc
dec
mov
ljmp
pusha
mov
ror
fisubrs
adcb
jae
mov
jl
lret
sub
iret
sbb
mov
js
mov
shr
cmpsb
lods
insb
mov
mov
lahf
ljmp
dec
insl
cmp
test
pop
int
adc
fimull
add
sbb
nop
mov
sub
xor
daa
adc
clc
out
inc
out
out
sub
imul
xchg
cmp
movsl
imul
lahf
push
out
in
mov
push
jg
sub
push
lret
pusha
cmc
movsb
push
push
dec
add
pushf
roll
pushf
add
or
test
sbb
xor
loopne
push
sbb
cmpsb
xchg
xor
insl
xorb
shll
dec
data16
mov
xorl
and
dec
dec
out
mov
out
pop
xor
push
push
js
inc
pushf
lahf
xor
in
ret
adc
jns
or
negb
push
gs
adc
arpl
aaa
xchg
xlat
std
bound
bound
orl
cmpsl
testb
xchg
push
ljmp
scas
xchg
jl
insl
mov
loop
dec
push
ret
orl
repnz
mov
mov
daa
push
pop
cmp
daa
cmpsb
sub
cmp
push
sbb
jp
xchg
addl
rorl
ds
push
push
and
rcrl
mulps
daa
pop
outsl
xchg
mov
or
xor
inc
mov
jbe
mov
or
jb
mov
cwtl
dec
sub
pop
cmpsb
inc
add
mov
aas
sbb
sbb
jne
scas
push
sbb
sti
cmc
test
aas
mov
pop
mov
xchg
arpl
pop
mov
out
idivb
fs
jp
jle
cmpl
adc
mov
es
imul
std
xchg
fisubl
sub
jp
cltd
and
ret
jmp
leave
jno
push
test
in
das
fdiv
cmp
daa
roll
lret
xchg
mov
imul
sbb
lds
lds
sub
mov
les
insl
xchg
call
jmp
inc
sub
or
jp
stc
cs
mov
jge
add
repnz
mov
mov
and
and
xor
leave
jb
dec
rcl
enter
loop
adc
dec
pop
outsl
ret
jb
in
push
or
movsl
mov
das
aas
scas
inc
test
test
pushf
jns
fadds
in
sub
sbb
mov
sub
stos
mov
ror
in
out
cltd
push
add
sbb
pop
jl
adc
xor
repz
add
and
mov
cmpsb
test
pop
lcall
pusha
push
push
ret
jbe
ds
insb
mov
mov
daa
cli
loope
xor
push
dec
xchg
pop
in
into
rol
shrb
add
pusha
inc
in
fldl
dec
shlb
add
test
in
lea
scas
filds
gs
push
cmp
gs
mov
push
dec
les
or
mov
push
cmpsb
xlat
jl
jecxz
repnz
jno
out
jno
push
push
insb
pop
pusha
addb
ficomps
jp
outsb
lods
addl
jae
pop
ja
adc
imul
out
cmp
pop
xor
imul
inc
cli
cwtl
mov
pop
pop
jo
in
or
dec
mov
jl
pop
fldenv
dec
mov
loopne
mov
cmp
sub
sub
idivl
cltd
daa
push
fdivrp
test
push
out
rcr
lret
jns
and
jmp
dec
sub
dec
jl
or
xor
cli
addr16
shr
enter
pop
fisttps
in
add
repz
fs
call
call
mov
add
aas
and
dec
mov
mov
sub
xchg
in
es
data16
clc
jge
jp
pushf
push
add
mov
jae
lahf
xchg
inc
insb
sbb
aam
imul
xor
loop
cmp
xchg
mov
add
loope
daa
in
add
push
xchg
lahf
pop
jnp
sub
jecxz
stos
ljmp
rcrb
xor
sub
adc
mov
pop
mov
push
push
cmp
and
test
and
daa
out
mov
imul
stos
insb
xchg
cmp
mov
jle
inc
stc
mov
mov
or
es
inc
mov
cltd
adc
inc
cltd
or
movl
jge
sbb
fiadds
adc
std
loop
push
jp
dec
leave
iret
loop
les
xor
scas
movsl
movb
mov
mov
jne
scas
mov
jno
cmp
lods
inc
mov
inc
js
cmp
or
dec
addr16
sub
mov
jle
xchg
std
xor
adc
push
in
in
sub
mov
jno
in
cmp
mov
orl
and
mov
mov
push
or
xchg
js
xchg
fwait
stos
push
cmp
jle
xorb
insl
and
in
jecxz
ds
mov
bound
mov
lret
jbe
push
lret
sbb
shlb
ret
into
clc
fdivrl
add
pop
jns
mov
arpl
jle
cmp
lret
inc
gs
push
jecxz
xlat
jecxz
test
mov
push
mov
sub
mov
shlb
scas
pop
sub
imul
rolb
mov
dec
jo
lea
mov
and
jp
subb
push
fxtract
add
jno
dec
jo
lahf
jns
loope
aas
cmp
lret
mov
loop
popa
dec
nop
out
addb
fidivrs
jae
ljmp
or
aas
popa
loop
adc
pop
shl
loop
je
inc
pop
outsb
shll
pop
add
inc
dec
out
je
aaa
xchg
je
xor
outsl
cltd
mov
repnz
inc
or
aas
rorl
popa
scas
cs
inc
jl
nop
aas
enter
dec
mov
js
lock
aas
cli
nopl
inc
add
dec
adcb
ljmp
xor
mov
mov
cmp
push
pop
mov
scas
sbb
out
icebp
outsl
aad
mov
pop
in
sub
repnz
mov
stos
imul
push
dec
adc
test
insb
jge
adc
jle
lea
mov
pop
jle
adcb
xchg
sbb
in
ss
mov
xor
xlat
xor
int3
pop
ror
mov
repnz
cmovge
sahf
push
jl
movsb
inc
in
xchg
psrld
andb
mov
sahf
dec
orl
pop
nop
jnp
stc
ss
xchg
stos
aad
fdivrs
or
xorb
fcmovbe
fcmovbe
mov
push
dec
pop
movb
fdivrl
decb
int
mov
xchg
or
jo
mov
push
stc
imul
jo
add
test
insl
in
stc
mov
cmp
inc
mov
stos
in
cmp
pop
mov
in
sahf
lds
mov
loope
or
sub
out
inc
inc
pop
inc
dec
fs
test
jbe
outsb
cli
loope
sub
inc
pop
pop
push
es
repz
ret
aas
cmp
ret
lods
jl
push
xchg
ljmp
fsubs
daa
cmc
ret
and
pop
dec
inc
mov
addr16
les
ljmp
xchg
in
aad
add
or
movb
lods
pusha
push
cmc
shll
in
negl
pushf
int
adc
add
sahf
test
jnp
sbb
pop
lock
popa
test
cmp
dec
cmpsl
and
loope
addr16
jo
add
cltd
inc
js
dec
loope
test
add
xor
mov
loope
scas
mov
test
shl
movsb
sub
jb
fldcw
cmc
fsubrs
nopl
out
sub
add
aam
inc
fwait
xchg
pusha
push
pop
lods
das
gs
push
adc
xchg
loop
lea
or
jbe
sub
pop
fwait
sbb
mov
pop
ret
rcrl
mov
pop
arpl
dec
and
out
das
pop
ror
out
jg
rorl
call
xor
inc
jno
jle
call
cli
mov
jle
aam
es
mov
adcb
jns
fnstsw
nop
lds
inc
and
scas
sub
loope
jb
iret
xor
ss
int
cltd
jl
fsubrl
ja
aad
mov
dec
cmpsb
rorl
add
sub
dec
inc
jle
arpl
adc
mov
dec
xor
or
mov
xchg
imul
inc
pop
or
out
push
mov
in
gs
outsb
stos
aas
cmpsl
mov
std
dec
daa
dec
addb
ds
push
les
cld
movsb
vmread
repnz
adc
xchg
divb
shrb
cmp
cmp
xchg
xor
push
imul
mov
movsb
mov
cmp
aad
mov
into
fnsave
pop
in
jbe
push
inc
inc
cmpsl
int
or
fwait
lahf
mov
decl
data16
gs
cmp
mov
jne
out
faddp
push
int3
popf
adc
test
stc
out
and
nop
add
mov
ja
pop
ret
xorb
jge
int3
divb
pushf
mov
sub
mov
jne
mov
rclb
out
adc
mov
aas
lcall
test
cmp
scas
push
mov
jg
xor
or
jns
mov
in
shrl
fidivrl
xor
repz
int
push
out
or
mov
pop
mov
stos
es
test
out
iret
call
cmc
pop
je
xchg
out
mov
mov
bnd
out
pop
and
adc
mov
insl
mov
xchg
jns
jnp
jmp
sub
popf
pop
icebp
das
sahf
push
out
stos
inc
lock
xchg
bound
rolb
sbb
clc
add
mov
mov
mov
xor
xor
lea
mov
xor
add
imul
mov
xor
sub
mov
add
cmp
mov
mov
jg
xor
mov
sub
add
jmp
xor
add
add
mov
mov
mov
xor
add
not
and
movsbw
mov
sub
mov
xor
mov
cmp
jne
movsbw
mov
sub
mov
xor
mov
cmp
je
mov
xor
mov
sub
add
jmp
mov
mov
mov
lea
mov
mov
mov
xor
add
mov
mov
mov
xor
add
pop
cmp
jne
mov
xor
mov
add
imul
mov
pushl
jmp
mov
add
mov
mov
mov
movsbw
mov
sub
mov
xor
mov
cmp
jne
mov
mov
mov
jmp
mov
cmp
jne
push
pushl
pushl
pushl
pushl
call
pop
pop
leave
ret
push
mov
push
push
add
movl
subl
movl
and
mov
adc
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
call
jmp
sub
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
sub
xor
xor
movl
cmpl
je
cmpl
jne
pushl
push
push
push
pushl
pushl
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
add
add
imul
mov
cmp
jne
mov
mov
xor
xor
add
add
imul
jmp
mov
mov
mov
mov
mov
xor
xor
add
add
imul
jmp
push
pop
rcll
fwait
pop
push
outsb
adc
fldl2t
jp
sbb
jp
nop
inc
enter
xchg
pop
push
push
push
xchg
call
or
int
push
mov
loopne
xor
and
add
inc
or
loope
sbb
int
jmp
or
cs
xchg
orl
xlat
mov
push
repz
xchg
mov
jmp
scas
and
insb
negb
popf
jl
testl
and
sbb
cltd
push
es
ret
cmc
ds
imul
shrb
mov
sub
insl
push
lret
in
iret
in
int3
or
pop
fsubrl
push
adc
scas
cmp
data16
xchg
cli
int3
pop
dec
lahf
lahf
inc
sbb
sbb
cld
mov
gs
jmp
push
mov
int3
inc
xor
xchg
repnz
inc
out
jg
ss
mov
cmpsb
rcll
ds
and
pop
jns
or
cmc
xorl
dec
shrb
popf
mov
lods
mov
mov
sbb
xorl
pop
aam
cli
mov
mov
icebp
ja
xchg
push
xor
mov
or
dec
inc
adc
pop
sbb
adc
iret
xor
and
cmp
xchg
in
and
arpl
js
rcll
mov
outsb
out
xchg
in
adc
jno
dec
mov
lock
push
xor
loopne
inc
xchg
cli
frstor
insb
out
jae
pcmpgtb
add
xchg
clc
popa
and
call
aas
aam
cmpsb
xchg
dec
loope
outsb
icebp
pop
cmp
dec
mov
mov
xchg
xchg
push
sbb
and
jns
nop
adc
test
je
inc
jnp
xchg
inc
lret
data16
in
cmp
mov
ja
xor
rclb
adc
or
fisubl
inc
test
pop
lret
mov
shlb
nop
sub
lret
repz
insl
sub
sti
or
shll
negb
xchg
shlb
ret
lods
outsb
imull
pop
or
or
scas
lcall
imul
enter
pop
cld
arpl
fldcw
aad
sbb
mov
stos
ret
lret
clc
dec
inc
and
dec
lcall
and
cli
fnstenv
xchg
testl
out
je
sbb
pusha
pop
push
data16
les
pop
cmp
xchg
mov
fisubrs
jne
add
mov
hlt
push
or
repz
std
daa
hlt
jne
mov
jg
inc
sbb
in
fisttps
std
lret
rcl
negl
pop
or
out
mov
not
out
insl
sub
setne
jo
add
and
cld
dec
push
pop
js
movsl
dec
dec
pop
mov
cmp
jo
mov
mov
insl
jnp
jns
ret
repz
dec
mov
jl
daa
loop
pop
lock
frstor
testb
mov
ss
add
add
jg
das
je
enter
leave
rolb
sbbl
push
mov
sbb
js
inc
pop
or
xor
outsb
movlps
xor
insl
sub
mov
cmp
and
adc
mov
pop
dec
das
shl
lret
cmc
imulb
add
adc
inc
xchg
es
pop
int
lock
cmp
mov
stc
sbb
add
fcomi
or
cld
cmc
mov
dec
add
pop
mov
mov
jbe
mov
addr16
popa
adc
jb
xchg
xchg
sbb
lret
aam
scas
pop
lcall
sbb
pop
xchg
fstl
push
sub
ror
pop
mov
xchg
mov
pop
mov
bound
sub
cld
lret
dec
cmp
pop
arpl
push
jne
ds
jp
xchg
xchg
push
cld
add
movsb
xor
push
inc
addr16
sete
test
es
ret
pop
loopne
xor
inc
add
imulb
frstor
or
cltd
bound
movsb
pop
xor
ja
adc
fistl
jae
cltd
lds
aam
ja
jo
fisubl
incl
and
testl
or
rcrl
or
cs
stos
jecxz
es
out
call
in
aas
ss
mov
jb
and
lret
cmp
cld
int
movsl
scas
sahf
fcmovnu
pop
movsb
dec
mov
sub
sub
inc
inc
fwait
stc
test
dec
stos
mov
aad
fidivrs
sub
adcl
push
pop
fisttpll
pop
jp
jmp
mov
shl
fnstsw
dec
jl
lds
jge
sti
inc
jns
mov
out
into
rcl
adc
sbb
bound
adc
sub
lds
mov
dec
iret
pop
xor
fincstp
test
jle
xchg
fidivrs
xchg
xchg
fcmove
ds
sbb
xchg
cmp
fisubs
popf
adc
lods
xor
btr
fsubl
jns
iret
je,pt
sti
pop
adc
xchg
xchg
add
lock
jg
pop
add
pop
mov
dec
mov
sub
fmull
and
andb
xchg
mov
aad
mov
jno
sub
pop
mov
mov
mov
mov
mov
sarl
jmp
das
mov
int
or
notb
rol
push
mov
stos
nop
andb
in
jne
add
psubd
lock
xchg
push
xchg
rcll
jecxz
rdpmc
jns
lds
xor
xchg
fisttps
mov
cmp
pusha
xchg
stos
aad
add
aaa
in
das
mov
dec
imul
xchg
aas
shl
and
adc
mov
push
ret
and
sub
mov
cmp
xor
das
jecxz
je
mov
add
cld
push
fnstenv
xor
sarb
jp
xor
add
push
movsb
mov
mov
dec
cmp
notb
dec
mov
andl
and
add
incl
ds
mov
bound
cmp
in
rclb
pusha
push
push
ds
and
pusha
addl
cmp
cltd
mov
mov
mov
xor
xchg
lea
dec
mov
pop
jge
jmp
shll
or
lcall
pop
out
ss
push
movsb
jge
in
das
clc
lds
mov
imul
test
shl
stos
pop
add
insl
es
jae
push
xchg
imul
bound
adc
dec
shr
out
aam
xchg
push
mov
dec
inc
hlt
iret
cwtl
xlat
mov
outsb
gs
mov
and
movsl
jb
iret
or
mov
pop
sub
mov
dec
adc
in
sub
nop
sub
jns
mov
xchg
xchg
add
pop
int
imul
or
lret
or
mov
push
or
jmp
xchg
js
xchg
or
pop
push
push
mov
ret
dec
jge
imul
xchg
nop
jno
jae
mov
scas
iret
mov
inc
inc
lret
adc
test
and
insb
je
lret
dec
rclb
in
in
test
inc
fistl
decl
jge
xchg
pop
fs
imul
loop
and
fidivrl
push
aam
sbb
or
xor
popa
mov
pusha
stos
lahf
fs
iret
out
test
orb
insb
inc
lods
ss
gs
inc
int3
sahf
jl
sbb
notl
push
cmp
and
lahf
aad
and
ss
mov
ja
xlat
mov
daa
dec
aad
or
ret
and
add
in
inc
inc
jge
xor
out
push
cmp
mov
dec
lock
add
or
mov
test
repz
pop
and
jns
sbb
clc
adcl
pushf
sbb
push
jg
scas
mov
jmp
sti
shl
mov
inc
sbb
ljmp
dec
xchg
push
push
mov
add
icebp
scas
dec
push
add
jno
cmp
cmp
fcoml
inc
repz
add
nop
or
jmp
sbb
xor
jmp
sub
mov
mov
xchg
xor
add
mov
mov
movzwl
mov
mov
repz
movsl
push
xor
shlb
xchg
xor
jmp
popf
jae
hlt
arpl
xor
jo
cwtl
xchg
cs
jbe
sbb
cmc
sahf
xor
pop
cmpsl
imulb
pop
xor
insl
push
cltd
in
shll
xchg
lock
pop
or
je
fstpt
push
scas
aam
push
sub
nop
stos
push
cli
aad
cmc
lods
outsb
push
insl
pushf
mov
ljmp
pop
shlb
sub
pop
pop
jnp
in
mov
jg
jl
jne
add
ja
adc
insl
movsl
ficompl
incl
xlat
ss
cmpb
jne
push
dec
shrb
jnp
inc
push
cmp
cmpsl
addr16
lea
lea
fcoml
push
push
and
pop
addr16
in
jmp
fisubrs
pusha
movsl
enter
sub
out
adc
in
jo
in
sbb
ja
push
xlat
aam
jns
lret
pusha
sub
lods
loop
gs
mov
arpl
push
inc
subb
or
stc
xchg
jns
loope
jns
daa
xchg
mov
or
push
mov
sub
xchg
cmp
and
test
repz
dec
or
xor
in
jmp
mov
test
shr
cmp
popa
and
stc
mov
shl
xor
or
adc
and
mov
or
xor
cmp
into
sub
xor
adc
cmp
jmp
into
lcall
lea
sahf
clc
mov
jo
rcll
ljmp
sbb
dec
fcmovne
and
sti
shlb
imulb
sub
xchg
rorl
dec
fcompl
lret
pop
imul
fucomi
aas
mov
adcb
push
aaa
test
test
test
push
sub
jns
mov
jmp
popf
sub
fstl
shr
mov
adc
dec
hlt
dec
xchg
pushf
pop
lret
fistl
xor
lea
bound
or
sub
xchg
cld
pop
add
mov
adc
pop
stos
or
sub
mov
or
movsb
in
aad
clc
fisubrs
sub
out
icebp
sbb
mov
imul
sub
mov
mov
imul
push
cmp
jp
insb
dec
dec
adc
mov
mov
jl
cmc
gs
mov
loop
loop
xchg
es
cmpsl
jmp
dec
and
cs
inc
mov
ret
dec
icebp
inc
sbb
jno
dec
enter
inc
adc
and
in
add
or
lret
and
xor
pop
pop
inc
adcl
and
jmp
add
clc
repnz
xor
pop
data16
push
cmpsl
dec
cmp
mov
jno
pop
xchg
shrb
pusha
xchg
sbb
loop
xchg
lcall
adc
jnp
repnz
jbe
mov
je
xchg
xor
out
jmp
fdivrs
orl
push
sub
out
leave
es
mov
outsl
test
out
mov
repnz
int
push
xlat
fistps
bnd
dec
jecxz
xchg
mov
push
or
in
sar
inc
xor
rolb
es
jns
dec
aad
ficoml
xor
iret
inc
insb
lock
push
mov
cmpsl
or
xor
mov
arpl
imul
add
outsl
insb
push
mov
iret
xchg
dec
outsb
loopne
xchg
ljmp
pop
loopne
cli
xor
mov
mov
lods
sub
jecxz
mov
pop
push
mov
sub
sub
dec
lahf
cmpsl
clc
jne
pop
pop
adc
sbb
cmp
sub
imul
jo
mov
or
inc
into
fsubr
cmpsb
lods
jmp
je
gs
xchg
lods
sbb
test
pop
dec
iret
mov
cmp
int3
xchg
add
mov
js
dec
lidtl
cmpsl
popa
scas
inc
jg
mov
jmp
dec
inc
add
mov
daa
roll
out
aad
jmp
push
test
in
adc
inc
push
mov
mov
and
ds
lds
sbb
fsubrl
add
sahf
mov
pop
aad
in
fcoms
xchg
in
imull
cmpsb
mov
dec
lea
in
arpl
mov
inc
pusha
adc
push
bound
ror
mov
inc
xor
push
or
mov
push
pop
fcoms
mov
jp
add
std
ss
ret
addb
mov
add
mov
push
sub
mov
mov
lea
cmpsl
popf
out
mov
add
arpl
scas
mov
stos
xchg
jns
mov
addl
mov
mov
leave
and
cmp
and
mov
leave
lcall
xchg
loop
insl
inc
loope
and
sub
and
push
les
in
cmp
mov
in
loope
aas
repz
jge
dec
nop
or
pop
pop
pop
pop
pop
rcll
xor
adc
cmp
inc
test
pop
imul
pop
dec
jle
cmc
xchg
arpl
adcb
jl
pop
pop
inc
push
in
push
jl
rolb
cwtl
imul
mov
push
push
mov
cld
jle
pop
jae
cmp
xchg
and
jnp
stos
mov
sub
pop
mov
aam
pop
cmp
ret
xlat
test
jp
out
mov
jns
dec
out
sbb
mov
cwtl
xlat
fwait
aad
sbb
add
sbb
stos
into
and
lods
repz
pop
sub
jae
push
fldl
or
sahf
fiadds
inc
xor
outsb
cmp
loopne
dec
inc
cmp
adc
xchg
pop
fstl
and
cmpsb
push
ror
mov
pop
arpl
mov
pop
test
push
xlat
ss
mov
shll
inc
js
or
clc
xchg
inc
xchg
sbb
cltd
fs
inc
pop
mov
imul
pop
mov
movsl
lea
xchg
xchg
int3
inc
lods
pusha
ja
jp
movsb
repnz
cmp
push
mov
ljmp
sub
xchg
test
pop
mov
push
cli
mov
adc
lock
mov
into
dec
jg
or
dec
jmp
movsb
rclb
aas
inc
xor
pushf
lcall
ret
pusha
push
push
xor
mov
popf
imul
jbe
pop
jo
inc
cli
addr16
shll
rorl
pop
push
pop
lea
cmc
gs
lcall
cmpsb
inc
movsl
daa
dec
mov
test
in
aam
and
jle
idiv
repz
mov
roll
mov
push
xchg
shlb
xor
push
sub
scas
scas
push
pop
xchg
sar
inc
mov
in
pop
nop
adc
into
enter
inc
mov
jecxz
jae
jmp
scas
cmp
sbb
sti
pop
dec
fnstsw
in
cs
push
js
bound
lock
test
jo
xchg
sbbl
mov
lock
and
icebp
adc
outsl
out
inc
imul
or
push
mov
sbb
shl
cltd
inc
fisubrs
mov
dec
or
mov
jbe
lea
mov
das
fmull
rcl
cmp
test
cmp
lock
test
inc
dec
pop
stos
std
sub
adc
out
ret
push
or
push
clc
lahf
mov
sahf
mov
xchg
jl
inc
pop
inc
cs
push
xor
jb
add
inc
pop
shlb
ss
adc
out
xor
sub
in
dec
repz
in
aaa
orl
imul
cmp
outsl
shlb
shr
cmp
out
mov
jno
cld
xchg
addb
jnp
cmpsl
mov
add
mov
jecxz
push
iret
in
sarb
cs
push
repz
push
aam
sbb
mov
or
sub
jae
scas
dec
pop
push
push
add
mov
cmp
test
subl
mov
xchg
les
in
xor
shl
fs
scas
repz
shll
xor
push
jge
in
mov
add
and
add
mov
fistpl
jmp
mov
or
mov
add
inc
cmc
das
aaa
cmp
les
subl
jb
add
je
adc
xor
fcoml
nop
sbb
sub
sahf
add
lock
test
imulb
leave
mov
xchg
sub
adc
mov
mov
scas
dec
pop
xchg
cmpsl
mov
sbb
rcrl
out
mov
arpl
jns
aad
inc
outsb
addr16
outsb
jbe
mov
inc
std
push
inc
out
jo
ror
test
ljmp
mov
rcrb
jle
inc
sbb
mov
scas
lcall
imul
in
mov
push
mov
ret
fisttpl
das
test
jb
test
adc
mull
filds
cmpsb
cmp
fs
lahf
stos
push
inc
int3
mov
mov
inc
loope
out
orl
sbb
scas
lcall
add
dec
push
mov
dec
jge
pop
jp,pn
adc
add
dec
or
sbb
dec
mov
hlt
adc
sub
inc
push
xor
lret
and
lret
cmp
add
mov
lods
adc
into
dec
aad
test
mov
fisubrl
mov
dec
inc
sbb
jecxz
mov
dec
stos
loope
mov
mov
ret
leave
call
pop
and
xor
icebp
fdivrl
ja
inc
cmp
push
push
mov
jne
jne
ret
or
mov
shrb
es
stc
pop
fs
adc
ljmp
xchg
xor
cmp
cld
data16
rcll
mov
mov
bound
sub
call
xchg
xchg
pop
mov
mov
dec
push
jmp
mov
test
push
decb
sbbb
sbb
arpl
mov
mov
push
add
adc
cmp
out
ss
mov
lgdtl
ja
sub
add
in
or
aam
add
xor
sbb
jbe
cmp
add
and
push
es
sbb
clc
shll
mov
and
jne
xor
jae
dec
push
frstor
stos
pushf
scas
jbe
dec
xchg
push
sbbb
in
or
sbb
loop
cmpsb
dec
cmpsb
ss
adc
push
mov
les
cmp
aas
subl
and
mov
push
add
in
mov
imul
mov
enter
jl
dec
push
inc
add
adc
pop
jne
bound
imull
inc
mov
in
pop
inc
and
sbb
sbb
daa
mov
xchg
ss
fstps
rcll
mov
pop
out
divb
push
test
or
je
shlb
xchg
mov
shll
outsb
hlt
mov
mov
in
aaa
cmp
lds
ja
xchg
inc
aaa
push
sarl
jno
out
imul
push
mov
add
mov
dec
xorl
shll
add
lcall
sbb
push
push
pop
addr16
xor
cmp
ljmp
aad
inc
fistl
jnp
ret
pop
dec
out
sarl
mov
test
jb
push
mov
cs
arpl
sti
fldenv
xchg
stos
fdivrs
iret
jl
movsl
jge
lea
mov
in
jg
pop
jns
add
iret
das
int3
xor
inc
lods
push
sub
or
notb
outsl
rcrl
mov
mov
in
mov
rorl
ljmp
jle
mov
mov
outsl
lret
fimuls
xchg
pop
test
sub
imul
fistpl
sub
test
lret
or
or
cmp
push
or
inc
dec
xchg
sub
push
adc
add
icebp
cltd
out
ja
cwtl
inc
or
fsqrt
clc
push
je
xchg
and
cmp
jle
jge
les
push
lcall
push
outsb
and
jle
arpl
dec
mov
or
push
dec
dec
push
sub
jo
pop
jbe
js
xor
mov
aaa
lret
cltd
orb
popa
mov
shrb
mov
jno
mov
loope
aas
test
pop
or
sbb
jp
imul
and
ret
call
lcall
push
mul
push
pop
push
cmp
mov
stos
dec
xchg
mov
dec
lods
mov
adc
or
inc
mov
andl
test
mov
testl
addb
and
or
popa
mov
inc
jb
add
iret
cmpsl
test
ret
in
sarb
mov
dec
or
data16
cmp
xchg
lcall
cmpsb
mov
mov
mov
xchg
jp
lret
clc
lcall
out
xchg
add
addr16
jns
es
dec
enter
add
scas
fsubrp
pop
xchg
xchg
inc
int3
push
xchg
iret
imul
stos
lds
roll
xor
mov
adc
xchg
xor
gs
sub
out
sub
jecxz
add
inc
into
cmp
fisttpl
sbb
shl
mov
add
push
out
pop
in
push
jae
pop
and
adc
cmpsb
bnd
daa
add
or
dec
mov
cs
xchg
imul
les
movsl
ret
xchg
scas
shl
add
dec
mov
leave
hlt
cmc
aam
or
xchg
adc
imul
add
xor
or
loope
neg
and
jb
and
sbb
mov
jb
mov
cs
mov
movsl
and
in
xchg
gs
fucomi
adc
mov
loope
pop
sub
mull
add
inc
push
jo
imul
sbb
sub
sbb
fsub
sbb
int3
adc
mov
xchg
sub
mov
ss
std
mov
mov
pop
push
push
sbb
or
int
test
pop
xchg
aas
xchg
test
and
xor
lret
mov
add
data16
out
push
nop
in
std
xor
jmp
sub
stc
out
add
or
xor
call
dec
data16
xor
dec
add
push
mov
in
push
shl
push
xchg
lock
adc
cmp
lods
ret
cmpsl
dec
xor
jl
jno
lret
jmp
add
rol
add
inc
mov
dec
pop
xchg
mov
shrl
mov
cmpsb
sub
mov
xor
fsubp
imul
stc
sbb
js
mov
test
cmc
bound
xchg
js
mov
jnp
movsb
xchg
mov
push
pushw
cmpsl
dec
mov
jne
cmovnp
push
add
xorl
fucom
jb
imul
pop
loop
dec
loope
aaa
adc
jg
test
or
push
subl
je
add
shrb
mov
imul
pop
out
das
test
adc
sbb
xorb
bound
sub
ja
xor
xchg
shll
sbb
inc
sti
fwait
push
xor
or
xchg
inc
pop
mov
sbb
or
jae
sti
test
mov
test
gs
lods
adc
mov
in
mov
mov
lcall
push
mov
mov
int3
sar
cmc
adc
loop
push
hlt
fidivs
adc
repnz
std
xchg
movsb
fidivrl
pop
out
push
pop
jnp
xor
iret
orb
std
cmpsb
xor
xor
loopne
incl
xchg
mulb
cmpsl
sub
in
mov
sub
jg
ret
out
sbb
aam
fstpt
or
std
psubsw
push
dec
jle
mov
in
and
adc
fiaddl
cmp
sarb
orb
ret
xchg
shl
mov
push
and
jb,pn
xor
sub
jmp
mov
jne
and
cs
lods
sti
add
mov
or
mov
jge
push
mov
fimuls
imul
push
int
mov
cmp
mov
out
fstl
imul
mov
lret
jg
mov
inc
and
pop
lcall
adc
inc
cmpsl
lret
daa
push
push
dec
popf
and
pop
pop
mov
fimull
mov
jno
adc
clc
mov
push
and
mov
orb
mov
sti
in
gs
ret
push
fldenv
sbb
jae
jp
sbb
push
jb
add
push
sbb
mov
xchg
adc
mov
in
push
adc
sub
aas
inc
push
push
add
fwait
loop
push
sbb
in
call
mov
add
sbb
in
and
adcl
dec
or
or
dec
mov
sbb
cmp
and
es
mov
rclb
es
mov
dec
nop
ret
mov
sub
add
out
mov
pop
shl
sbb
loope
xorb
jb
jne
jno
insl
mov
mov
sub
in
jb
and
adcl
jl
fsubrs
inc
fwait
mov
lret
jo
jno
jo
aad
cltd
addr16
cmc
lock
jg
bound
std
fists
lods
loop
jae
inc
or
cmp
xor
xchg
cvtpi2ps
out
mov
shr
adc
jle
fcmovbe
dec
push
sbb
mov
sahf
in
stos
sbb
push
out
frstor
and
lret
sahf
mov
int3
jns
mov
and
jbe
shlb
cld
xor
loop
sti
inc
rolb
sbb
lcall
dec
idivb
scas
xchg
mov
ret
xchg
jno
pop
sbb
pop
and
jmp
xchg
pop
lret
fnstenv
nop
mov
ljmp
test
imul
lds
dec
fldenv
repz
pop
inc
aad
sub
std
mov
sbb
adc
and
fsubs
in
push
popf
addr16
mov
jb
outsb
lret
lock
test
add
enter
adcl
and
cmp
xor
nopl
mov
dec
clc
push
dec
shlb
or
cmp
xchg
mov
mov
aas
lds
and
in
xor
cmp
adc
cmpl
jne
es
xor
inc
fmuls
push
shlb
les
mov
dec
insw
mov
add
mov
scas
pusha
inc
addr16
jle
jl
adc
adc
lcall
addr16
mov
aam
loope
inc
push
and
sub
cmp
inc
idiv
cs
std
scas
lahf
xchg
add
push
divb
and
jno
and
xchg
sbb
lcall
leave
or
aad
jg
stc
add
dec
pop
leave
add
inc
mov
push
in
xor
xor
das
mov
pop
pop
cmp
scas
inc
sbb
xor
adc
gs
stc
and
jmp
sbb
call
and
pop
outsl
sarb
outsb
jg
mov
and
stc
xorl
sbb
xor
xchg
add
lods
dec
cmpsl
sbb
insl
dec
and
bound
pop
sub
jb
daa
addl
or
mov
cmpsb
ret
push
lcall
loopne
xchg
aam
add
ret
sbb
loope
ret
nop
or
movsb
mov
shrb
xchg
cmpsl
jecxz
daa
sbb
lds
mov
xor
es
inc
add
repz
sbb
adc
or
fidivl
scas
xchg
call
mov
fidivrs
pushf
push
push
xor
push
add
insb
or
push
dec
add
pop
psubq
xchg
lcall
mov
outsl
push
jno
inc
cmp
fmull
popl
and
subb
and
pop
push
aam
jle
pusha
lahf
jl
cmpsb
sbb
mov
mov
push
fcomps
xchg
sub
adc
std
in
arpl
push
addr16
outsb
outsb
push
test
dec
sti
jg
mov
int
push
inc
adc
mov
mov
fs
push
push
xchg
xor
bound
xor
popf
outsb
out
cmc
pop
push
filds
sbb
xchg
jl
les
pop
maskmovq
imull
orl
add
ret
mov
and
mov
mov
lods
ret
jne
or
aam
cmpsl
leave
mov
xchg
sub
mov
js
cmp
lods
xor
mov
inc
pop
shll
sub
and
push
shl
mov
bound
hlt
push
popf
and
push
push
pop
out
push
add
xlat
fnstsw
cwtl
xor
sub
mov
fists
fdivrl
addl
cs
jno
out
ret
into
into
jecxz
jb
out
int3
xor
inc
xchg
cmpsb
in
and
es
testb
xorb
sbb
or
pushf
sub
adc
or
leave
xchg
jo
sar
cmp
icebp
mov
cmpsb
push
and
divb
rol
mov
std
dec
inc
lock
push
cmp
xchg
enter
mov
in
mov
in
or
int3
daa
sahf
loopnew
dec
jge
fwait
movsb
adc
xchg
adcb
mov
dec
push
and
mov
mov
movsl
ret
sub
les
les
imul
mull
mov
movb
jns
push
or
inc
pop
ret
das
mov
mov
jne
pop
mov
jns
in
push
in
in
jno
call
cmp
jg
gs
inc
cmpsb
lods
mov
push
call
cmpsl
daa
les
pop
mov
mov
outsb
inc
out
mov
or
arpl
out
pop
inc
dec
or
cmpsb
out
loope
bound
or
sahf
push
imul
push
and
repz
js
dec
inc
xchg
and
cmp
dec
push
xchg
mov
idivb
push
push
clc
sub
loopne
xlat
popf
fldl
and
stc
dec
call
or
lock
je
xor
add
mov
imul
add
mov
mov
pop
leave
ret
push
mov
push
or
movl
adcl
mov
mov
mov
add
mov
negl
xor
add
andl
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
jmp
mov
or
xor
push
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
pop
leave
ret
push
mov
sub
adc
mov
adc
mov
adcl
xor
mov
and
mov
decl
add
movzwl
add
mov
movb
mov
mov
adc
lea
subl
mov
mov
inc
mov
xor
adcl
sub
adcl
mov
movl
cmpl
je
cmpl
jne
push
pushl
push
push
call
mov
dec
mov
jmp
sbbl
movl
push
movl
mov
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
jmp
andl
xor
or
inc
mov
cmpl
jne
pushl
push
push
push
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
xor
xor
mov
or
mov
sbb
xor
or
mov
push
add
jmp
movl
mov
mov
movl
inc
cmp
jb
movl
cmpl
je
cmpl
jne
call
mov
dec
mov
jmp
not
mov
subl
xor
adcl
add
movl
jmp
decl
mov
adc
mov
xor
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
adcl
mov
subl
add
movzwl
negl
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
jmp
or
mov
movzwl
movl
xor
add
movl
mov
movl
mov
mov
inc
mov
movl
cmp
jne
mov
mov
adcl
xor
movl
add
subl
mov
add
mov
addl
xor
add
movl
mov
mov
movl
movl
movl
movl
movl
mov
mov
movl
mov
movl
jmp
sbbl
mov
and
mov
xorl
xor
xor
sub
sub
sub
xor
mov
mov
mov
subl
lea
movzwl
adc
mov
sbbl
mov
dec
mov
lea
mov
sbbl
mov
add
mov
lea
mov
incl
mov
sbb
mov
andl
lea
dec
mov
movzwl
adc
mov
mov
addl
lea
mov
xorl
mov
andl
mov
orl
lea
addl
mov
or
mov
xor
add
movl
jne
jmp
negl
mov
mov
subl
xor
xor
sbbl
sub
orl
sub
xor
movl
mov
movl
mov
movl
mov
jmp
mov
mov
xor
adc
xor
xorl
sub
sub
or
xor
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
call
cmpl
jne
mov
inc
mov
jmp
andl
mov
mov
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
imul
xor
add
lea
mov
add
mov
mov
xor
add
jne
mov
mov
mov
cmp
je
mov
mov
mov
cmp
jne
mov
mov
movsbl
xor
add
cmp
mov
mov
mov
je
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
xor
imul
add
lea
mov
add
mov
mov
xor
add
jne
mov
mov
xor
xor
add
add
cmp
jae
lea
mov
mov
movl
lea
mov
mov
addl
mov
xor
add
lea
mov
xor
mov
mov
xor
inc
incl
add
jmp
fstps
sti
sarl
jnp
inc
xchg
or
add
lret
sti
pop
jp
leave
mov
push
clc
das
push
pop
ficomps
stos
push
insb
jp
mov
fwait
mov
mov
pusha
push
pop
fisubs
pop
cltd
push
push
and
jl
push
pop
sbb
lods
add
xchg
shl
imul
iret
ret
bound
fdivrl
repnz
xor
out
ja
pop
lcall
add
lahf
int3
imul
out
lret
jb
jge
add
nop
jbe
or
ror
xchg
xchg
pop
test
xchg
xchg
mov
xchg
out
push
nop
out
in
pop
and
xchg
sbb
jecxz
mov
aam
cmp
mov
fsts
rorl
inc
jnp
insl
jecxz
jp
push
mov
xor
push
fstpt
daa
sub
stos
push
nop
push
sub
in
sti
ljmp
cmp
cmpsl
das
imulb
add
push
sbb
std
cwtl
or
jl
sbb
lret
dec
cs
ret
sti
in
fs
insl
cmpsb
adc
imul
jo
roll
add
add
bound
ljmp
dec
mov
negl
iret
pushf
add
and
insb
xchg
in
mov
xchg
cld
fdivs
pushf
jmp
movsb
push
sbb
add
and
mov
and
jb
lea
push
add
addr16
addb
pop
xchg
push
aam
sti
inc
loopne
inc
inc
fsubl
mov
xchg
call
dec
pop
es
adc
in
add
ret
pop
dec
mov
fs
fisubl
pop
push
ja
das
dec
push
jnp
lret
jp
jnp
ja
push
sub
push
push
leave
rolb
and
mov
in
adc
jae
mov
mov
insb
push
out
outsl
dec
inc
test
push
std
xchg
fucomp
cld
stos
jb
sbb
dec
scas
cmp
jmp
dec
test
xor
xchg
rclb
jbe
xchg
mov
xchg
xchg
das
push
sbb
jns
inc
in
fidivrl
pusha
jnp
dec
fwait
jge
xchg
xchg
les
lcall
sub
mov
adc
icebp
lods
out
inc
pop
pop
mov
cmp
cmp
push
add
mov
xor
sahf
aaa
mov
pop
add
mov
scas
jbe
mov
sahf
sbb
or
cmp
outsl
imul
lods
imul
test
lods
jg
rol
shlb
sub
sbb
in
addl
sbb
push
push
mov
inc
movsb
push
mov
add
mov
inc
pusha
shll
popf
insl
mov
imull
pop
adc
jge
dec
ffree
add
sub
shll
loop
sti
mov
lcall
add
xchg
scas
lret
jge
dec
jl
rcll
lret
mov
and
sub
push
cmp
dec
sbb
outsl
inc
movsb
pop
iret
mov
shlb
cld
into
arpl
pusha
repnz
mov
jl
pop
in
cmp
sub
jp
push
arpl
and
mov
add
push
shll
mov
sbbl
lds
fimull
lods
lret
xchg
dec
fisubrl
jb
ss
jo
mov
cmp
jl
or
dec
pop
mov
lcall
scas
shlb
dec
dec
jge
outsb
out
sbb
stos
lods
fidivl
adc
xlat
ret
cwtl
in
mov
inc
push
dec
mov
mov
aas
ljmp
pop
popa
add
js
pushf
pop
int3
push
rorl
push
cltd
loop
or
mov
movsl
sub
pop
daa
jns
js
repz
adcl
test
push
lds
repnz
in
aaa
daa
cmp
rorl
out
adc
push
push
movb
pop
mov
lahf
adc
pop
fdivl
mov
inc
jns
mov
fidivs
push
and
push
xchg
aam
les
sub
hlt
aas
repnz
push
and
js
lcall
cmpsl
dec
rorl
pop
lods
cmpsb
add
ret
jbe
imul
adc
andl
mov
xchg
sub
push
adc
push
sub
xchg
push
cli
inc
and
lds
cwtl
mov
ror
cmp
call
jbe
mov
lahf
mov
xchg
pop
sub
and
nop
fs
iret
add
mov
adc
push
xchg
fildll
pop
lock
addr16
lods
sub
cmp
int
push
push
fucompp
adc
repz
rorb
rcl
add
nop
orb
bound
jmp
lret
int3
inc
jne
mov
add
dec
enter
cmp
mov
push
fstp
rolb
add
pop
icebp
and
adc
ds
pop
adc
xorb
cli
inc
andb
pop
repz
jecxz
pop
cmpsb
push
repz
xchg
push
fistps
add
and
int
and
jp
out
push
mov
push
arpl
out
notl
and
cmp
xor
adc
loopne
push
pop
ret
pop
jae
pushf
pusha
into
pushf
lret
jl
scas
hlt
push
jne
mov
or
dec
push
push
loop
lea
callw
cmp
or
mov
fiadds
mov
into
into
out
cmpsb
shrl
pop
inc
xorl
add
jo
pop
test
mov
aas
repz
scas
sbb
call
addr16
outsb
jle
aas
insl
shrb
cmpb
fsubs
mov
out
out
es
inc
gs
adc
aas
adc
pop
push
pop
dec
mov
je
arpl
jae
stos
or
out
lock
sbb
cwtl
subl
insl
push
inc
push
addr16
sti
jle
cmp
outsl
pop
outsb
test
clc
mov
lods
les
mov
xor
pusha
test
popa
push
subl
mov
push
std
and
jge
inc
push
stos
mov
hlt
incb
rcl
in
or
mov
test
movsb
sub
orb
int3
leave
inc
cmp
arpl
fimull
dec
test
push
jle
mov
fcmovne
sbb
pop
jne
adc
stc
orl
mov
dec
pop
stos
fisttpll
hlt
push
xchg
in
xchg
and
addr16
js
sub
adc
shll
cmpsl
ss
sbb
mov
mov
push
xchg
ret
mov
ss
insl
xor
outsb
and
inc
and
scas
add
push
jbe
mov
fdivs
movsl
hlt
test
lcall
out
rcr
in
mov
clc
pop
add
ja
push
loop
dec
ret
jae
jnp
inc
dec
pusha
xor
mov
push
xor
fwait
xor
leave
mov
lock
jge
pop
daa
int3
xor
push
ljmp
ret
imul
outsl
leave
outsb
lret
or
sub
cmp
jns
mov
lret
lcall
sub
pop
imull
in
je
or
ljmp
and
sub
pusha
push
in
cs
inc
adc
push
ror
sahf
or
mov
jmp
dec
add
in
adc
addr16
cmpsb
jns
jle
ror
pop
outsl
lock
sub
and
jne
adc
mov
mov
and
lahf
push
mov
arpl
pop
movsl
dec
xchg
ds
push
loope
lea
or
aam
inc
mov
jnp
xchg
dec
test
mov
rcrb
and
mov
xchg
pop
fmulp
faddl
mov
ja
shlb
fs
test
hlt
arpl
lcall
jmp
pushf
xchg
fists
call
gs
fstp
sub
cmp
mov
popa
dec
dec
ja
insb
btc
cmp
test
add
cmpsb
faddl
decl
cld
xor
jp
std
ss
xchg
enter
enter
sub
pop
mov
dec
add
imul
loopne
jmp
xchg
mov
mov
lcall
out
fsts
lds
fistl
dec
jp
les
loop
and
xor
cmp
push
and
imul
push
outsb
adc
mov
cmp
inc
or
mov
mov
sub
int
sub
test
inc
fimull
pop
out
mov
fldcw
dec
xchg
xchg
sub
inc
cltd
out
mov
push
pop
xchg
imul
cmp
mov
mov
mov
int3
mov
fstpl
push
imul
mov
lods
cmp
jl
clc
jo
decb
dec
aas
pop
addr16
cwtl
sbb
pop
test
xchg
xchg
xor
pop
adc
or
jl
add
jmp
std
add
pop
adc
sub
xchg
rclb
dec
test
pop
or
mov
mov
cmpsl
outsb
push
scas
ja
std
outsb
xchg
leave
ficoms
adc
sub
ret
cmp
lcall
shll
or
dec
in
inc
data16
push
insl
test
pop
fninit
movsb
mov
testl
push
flds
test
lret
jbe
inc
adc
bound
nop
push
imul
sbb
rep
daa
add
jle
lods
jl
pop
scas
add
ret
roll
data16
pop
out
movsl
add
pop
lret
outsb
mov
mov
adcb
dec
jns
fidivl
lcall
das
cmp
mov
add
bound
sbb
xchg
sti
sbb
xchg
lret
mov
inc
mov
inc
pop
jle
stos
ja
mov
iret
pop
call
out
lret
mov
mov
push
decb
push
inc
fnstcw
cltd
fstpt
push
mov
xlat
sub
adc
mov
jae
gs
sub
dec
mov
pop
icebp
sub
push
out
lods
iret
outsb
mov
faddl
push
loopne
shlb
lret
lock
bound
dec
sti
out
scas
lahf
sbb
adc
jns
cli
sub
lfs
loop
cmp
mov
xchg
imull
add
mov
push
lahf
jb
pop
inc
std
mov
adc
test
addr16
adc
dec
pop
loope
fwait
in
xchg
sbb
pop
adc
loop
push
adc
decb
xor
out
and
sub
cwtl
xor
mov
jmp
movsb
aaa
pushf
pop
inc
roll
mov
cmpb
mov
inc
mov
sbb
xor
sahf
add
inc
push
dec
or
sub
xor
ret
out
sbb
cmp
test
enter
add
aaa
jle
sar
fcomps
xor
into
xlat
push
arpl
add
sarl
enter
scas
dec
jbe
xor
jecxz
cmp
es
iret
push
fmulp
out
cmp
out
pusha
dec
movsb
mov
loopne
lock
insl
lds
xchg
jmp
adc
sbb
and
mov
stc
push
stos
dec
cwtl
and
push
xchg
repz
dec
lods
shll
or
jns
out
test
add
cltd
in
jl
popf
scas
nop
inc
js
xchg
data16
fs
cltd
repz
mov
xchg
loope
stos
bnd
cmp
nop
and
xchg
repnz
popa
mov
insl
inc
sbb
xor
lods
xor
addr16
xor
shl
xor
into
lock
scas
cmpsl
in
cmp
push
push
cmp
jmp
out
mov
mov
cld
enter
add
adc
lock
divl
sbb
jbe
movsl
js
xchg
push
test
cltd
aam
fwait
incb
stos
adcl
mov
push
fistl
movsb
daa
push
adc
adc
fbld
inc
push
adc
cmpsb
cmpb
lret
clc
sub
xchg
sbb
notb
push
mov
or
mov
add
mov
lods
pop
fdiv
movsl
mov
or
cmp
fcmovnb
push
rclb
in
insl
jmp
out
sarl
cs
mov
mov
push
add
add
and
xlat
hlt
int3
in
pop
xchg
mov
push
xor
jnp
call
pop
mov
int
xchg
aas
mov
addr16
sub
push
pop
push
cmp
jg
cld
loop
test
call
movsb
pushf
in
and
cmpsb
outsb
flds
or
aam
call
sub
mov
popa
outsb
push
fistps
xchg
in
mov
push
loop
jb
xor
mov
sub
je
loopne
jg
inc
imul
test
mov
and
ja
arpl
jns
lea
ss
lods
inc
pop
icebp
xchg
sbb
punpckhwd
sub
xchg
pop
jbe
pop
adc
gs
repnz
xchg
cltd
or
xchg
out
gs
sarl
sub
cwtl
pop
pop
xor
lahf
test
or
clc
xor
add
jg
rolb
mov
mov
popf
test
pusha
stos
out
or
jmp
lret
push
mov
cmp
mov
test
push
loopne
xor
fisubl
sub
jp
mov
jecxz
or
push
pop
aad
mov
pop
aaa
mov
dec
jb
bnd
shrb
sbb
xchg
cmp
adc
and
cmp
enter
lds
arpl
cmpsl
jmp
sub
ds
sub
add
lahf
cmp
inc
mov
xchg
mov
mov
and
inc
sbb
adc
mov
add
xchg
and
add
sub
movsbl
icebp
xchg
inc
loop
pop
sbb
sub
cmp
mov
enter
mov
mov
add
shlb
fdivrl
insb
pop
cmc
int3
cwtl
lods
lret
sbb
add
test
jbe
push
push
sti
pop
ret
mov
lods
mov
out
pop
push
ss
gs
push
adc
push
lret
dec
rcrl
addb
rcrb
or
inc
ficoml
or
rcrb
or
dec
xchg
scas
inc
mov
mov
cli
dec
push
cli
or
cmp
xor
hlt
loope
sbb
mov
out
xchg
setbe
test
mov
inc
jp
cwtl
call
xor
mov
sbb
rorl
mov
mov
push
add
sbb
or
lods
push
fcoms
dec
mov
data16
xorl
shlb
mov
jmp
outsl
push
pop
adc
mov
out
mov
int3
xor
xchg
idivl
or
into
fwait
adc
adc
jns
in
pop
mov
inc
rolb
and
mov
pop
add
jecxz
mov
pushf
xor
arpl
adc
mov
stos
out
dec
inc
mov
sti
ret
sbb
mov
popl
or
dec
cmp
jmp
fcoms
pop
popa
inc
sahf
mov
pusha
ret
jecxz
add
bound
fucom
test
dec
stos
inc
aad
je
leave
cmp
xor
cwtl
mov
pop
insb
jmp
push
andl
fs
mov
adc
nop
dec
xor
push
or
js
pop
mov
or
adc
dec
sahf
xor
inc
pop
in
or
pop
cmp
testb
and
dec
mov
lcall
stos
jle
sbb
std
notb
in
stos
sbb
sbb
sarb
sub
fldcw
jle
aaa
fimull
test
sarl
adc
mov
test
lea
pop
aaa
jle
fdivrs
loopne
cmp
test
mov
adc
stos
jmp
xor
sahf
rorl
into
cmp
sub
in
fiaddl
mov
or
sti
movsl
push
test
int3
aad
sti
dec
lods
or
faddl
push
adc
mov
sub
add
cli
adc
sbb
push
loopne
sti
xchg
arpl
ret
popf
jne
adc
mov
jle
aas
ror
cmp
fdivrl
loop
cwtl
cwtl
sahf
push
shl
sbb
mov
test
sbb
cmpb
pop
es
sub
sarl
mov
lea
xchg
cmc
push
push
push
dec
out
mov
jle
and
bound
lea
mov
jne
sarb
in
fwait
push
cmpsb
xor
mov
clc
xchg
lret
negb
jns
lds
scas
inc
xor
arpl
lock
push
sbb
enter
pop
mov
into
adc
negb
repnz
daa
es
pop
inc
mov
popa
cmp
adc
imul
lret
dec
iret
cmp
and
in
ret
cs
mov
push
sbb
push
in
cld
popf
add
lret
push
sti
cmp
std
fwait
ja
ljmp
dec
popa
pop
mov
mov
adc
mov
ficoml
dec
popf
mov
fisubrs
add
cli
sbb
out
xor
daa
or
mov
sub
jg
adc
push
movb
rol
aaa
xchg
pusha
cwtl
sbb
stc
movsl
dec
mov
push
std
shrl
daa
es
adc
mov
mov
rol
dec
fldcw
sub
inc
nop
cmpsl
or
repz
movsb
test
push
cmp
test
cmp
and
mov
xchg
inc
jle
push
and
aaa
ds
jb
outsl
cmpsl
sub
or
and
in
cwtl
aaa
mov
ror
pop
les
imul
repz
push
testb
pop
xchg
xchg
jne
pusha
inc
mov
cmp
pop
ret
push
jns
jbe
stc
jb
ss
fcmovu
push
imul
jne
scas
sbb
xor
cmpsb
in
lods
call
xchg
jp
or
ror
mov
fidivs
jmp
or
loopne
sbb
loopne
xor
mov
ljmp
in
jp
inc
xchg
inc
push
gs
pop
stos
aaa
aas
lret
shrw
push
and
push
cli
sbb
jmp
std
mov
movsl
movsl
lods
xor
pushf
lahf
pusha
jae
idivb
mov
xchg
lock
mov
clc
test
test
mov
push
fsubr
cmp
jl
stos
leave
rorl
mov
cwtl
adcb
sbb
movsl
movsl
loopne
jo
mov
shl
dec
mov
pop
lea
mov
rcrb
outsl
push
insl
inc
movsb
jb
cs
xchg
add
imul
arpl
lds
dec
rcrb
mov
js
mov
stos
sti
scas
cmpsb
mov
lret
adc
pushf
cmc
je
subb
jmp
hlt
adc
enter
lods
cmp
out
lret
jns
xchg
xchg
pop
mov
out
and
add
clc
mov
mov
sub
pop
and
sbb
and
icebp
fidivrs
sbb
push
rcll
lret
mov
inc
jns
out
in
lahf
enter
sar
fidivrl
xchg
and
je
ja
inc
stos
sub
cmp
mov
scas
sub
aam
rclb
lods
push
jmp
dec
mov
rolb
sub
mov
jmp
cltd
pushf
pop
sub
repz
xchg
out
loopne
cmp
dec
outsb
icebp
xchg
xchg
adc
mull
ficoms
xchg
jecxz
shll
pusha
mov
js
fsts
add
pop
icebp
aam
pop
dec
jp
sub
jne
sub
in
fsubs
xchg
inc
popf
mov
dec
scas
hlt
jns
xchg
iret
in
xchg
ljmp
dec
sub
shlb
lea
push
icebp
mov
aad
mov
adc
imul
rcl
jne
adc
hlt
inc
xchg
pop
cltd
jp
dec
ja
jne
sahf
in
mov
adc
stos
bound
jl
negb
out
lods
lcall
fs
gs
test
scas
xor
negl
movsl
shll
test
sarb
cmp
cli
dec
cmc
inc
shlb
clc
jle
add
test
scas
cmp
clc
int
cmp
dec
sbb
mov
fistpll
repz
mov
shrl
scas
in
dec
jb
sbb
ljmp
push
aaa
stos
dec
push
push
pop
mov
xchg
mov
je
xchg
loopne
pop
addr16
rol
cmp
aam
mov
cmpsl
push
jmp
mov
loope
pop
mov
push
dec
cmp
jo
imul
testl
daa
and
mov
and
dec
push
jne
stos
imul
mov
iret
or
psllw
cmp
dec
divb
sbb
xchg
or
pop
dec
fsubs
cmp
cmp
out
fldl
push
cmpsl
stc
dec
out
sbb
addl
mov
popa
out
lret
test
cmc
xchg
cmc
fisubrs
scas
je
inc
mov
cmp
cmp
push
sub
push
or
fisttpl
icebp
jae
mov
mov
iret
mov
mov
arpl
rolb
stos
std
jnp
rclb
cmp
mov
enter
push
cmpsl
imul
inc
inc
add
jecxz
pop
and
in
mov
les
sahf
cmc
pusha
inc
les
adc
aas
inc
cvtdq2ps
fadds
pop
dec
lods
loope
in
inc
adc
dec
mov
inc
outsb
pop
popf
clc
push
jmp
mov
jg
loop
stc
cmpsb
ja
cmp
in
jg
xchg
pop
aas
xchg
outsl
movsl
out
add
sub
add
sbb
dec
pop
cmp
fstl
mov
adc
push
mov
fcoms
fwait
inc
jle
push
imul
mov
movsl
int
cmp
loope
jbe
lods
sbb
cmp
fdivl
inc
mov
sub
push
jl
jmp
push
jnp
stos
in
add
das
out
test
xchg
push
or
or
rorl
mov
dec
jae
in
dec
dec
dec
scas
in
push
mov
dec
ficompl
subb
pusha
mov
in
push
xchg
loopne
jle
cmpsb
sub
icebp
mov
inc
fistps
jecxz
xchg
retw
in
cmpsl
pop
ljmp
outsb
sbbb
and
adc
push
push
scas
popf
inc
sbb
jnp
test
sub
out
xchg
movsb
mov
sbb
std
dec
dec
add
sub
ret
mov
or
ljmp
lock
dec
pop
mov
pop
push
push
out
mov
mov
pop
xor
fists
test
add
sub
adc
jl
es
and
mov
stos
bound
fsubrs
fisubrl
and
jg
leave
and
jne
pop
pop
xchg
mov
pop
push
nop
clc
hlt
shlb
inc
mov
mov
xchg
fadds
stc
shr
xchg
sahf
sbb
int3
and
jge
xchg
es
xchg
inc
xor
add
cltd
js
mov
xor
rolb
and
mov
sbb
mov
adc
xor
test
aas
pop
fldcw
int3
das
push
and
adc
jnp
decl
or
pusha
fsub
loope
cwtl
cwtl
pop
cld
fwait
rclb
cmp
popa
leave
sbb
xchg
cmp
mov
mov
aad
in
and
sbb
sarl
les
inc
sbbb
clc
or
sbb
inc
scas
and
es
jbe
aas
xchg
cmp
ds
xchg
movsl
jle
xor
push
fdivrp
ds
les
lds
push
rclb
pop
xor
icebp
insl
ror
push
or
mov
in
test
scas
lds
add
mov
push
mov
insl
lahf
adc
clc
jae
cmp
movsb
shl
xor
mov
shrb
and
hlt
push
insb
ret
aad
inc
mov
adc
mov
xchg
sbb
fs
test
sub
or
bound
mov
out
dec
push
push
fwait
out
push
pop
add
add
aaa
xchg
lret
nop
adc
lock
xchg
aaa
mov
push
sub
jo
add
imul
ja
push
jo
test
fs
mov
imul
inc
cmp
or
cmpsb
aaa
inc
aas
jo
sbb
cld
cs
lea
sar
call
cmpsb
jbe
push
int
sbb
xchg
jle
sub
out
push
shrb
shrb
mov
sbb
push
cmp
jne
xor
clc
xchg
bound
aad
jns
fs
mov
leave
insl
es
lahf
filds
pop
mov
movsb
pop
rol
jl
pop
sub
dec
adc
adc
mov
and
mov
ret
cmpsb
test
sbb
push
mov
pop
mov
outsb
jge
lret
fs
lret
mov
xor
jecxz
cli
lcall
sub
xor
leave
mov
push
test
sti
xor
loopne
and
xchg
loopne
xchg
xor
mov
or
arpl
pop
testb
inc
adc
aam
xchg
fadds
push
adc
insl
cmp
sub
push
sbb
xor
mov
xchg
pop
push
rol
stc
or
mov
test
in
jecxz
ja
cmpsl
inc
iret
pop
cmpsb
ret
xchg
sbb
or
loopne
imul
sbb
and
push
push
dec
test
mov
adc
cmp
cmp
rolb
sbb
adc
pop
sub
std
xchg
das
pushf
cs
jnp
scas
push
pop
push
push
cmpsl
push
xchg
dec
add
dec
mov
push
jae
sti
out
ja
cmp
ror
orl
cmp
mov
cmpsl
sub
nop
add
insb
adc
xchg
mov
inc
jp
and
inc
bound
aad
mov
mov
inc
popf
mov
enter
dec
dec
imul
movsb
mov
jmp
add
pop
xchg
mov
loope
daa
imul
lea
orb
scas
imul
sbb
stc
xor
mov
pushl
add
mov
bnd
icebp
adcl
dec
or
and
arpl
jne
cmp
push
out
push
add
push
adc
outsl
imul
into
in
leave
mov
popf
xor
in
lds
mov
outsb
sarb
jae
ds
daa
jno
decb
and
insb
add
outsb
or
mov
push
push
fsubrs
outsb
cltd
jne
shr
lret
pop
movsl
jbe
rcrl
push
popf
fidivrs
leave
lahf
mov
int3
pop
mov
push
inc
lods
icebp
push
sbb
jl
ficoms
jae
mov
push
jno
add
daa
or
xchg
dec
inc
push
and
stc
adc
fcmovnb
das
loope
aas
ds
bound
or
stos
jecxz
cmp
int
fiaddl
dec
jge
adc
push
mov
xchg
mov
stos
cmp
jmp
mov
scas
inc
adc
cmpsl
xchg
daa
mov
pop
call
dec
cmp
scas
inc
dec
lcall
int
inc
subl
shll
in
xor
mov
pop
jge
adc
xor
jecxz
mov
mov
repz
pop
cmpsl
or
push
xor
das
fs
andl
adc
adc
add
mov
iret
pop
mov
or
mov
sbb
insb
dec
lods
cmc
inc
push
xor
xor
adc
daa
or
xchg
cmp
mov
xor
mov
xor
mov
loope
push
inc
outsb
push
sub
inc
ljmp
rorb
sub
pop
aas
sbb
jb
mov
scas
push
adc
push
cmpsb
adc
inc
mov
mov
push
stc
movsl
adc
inc
pop
push
push
mov
dec
mov
repnz
mov
or
jnp
cli
out
mov
pop
dec
les
in
test
dec
ja
mov
jg
sub
out
push
test
jge
inc
pop
xlat
int3
mov
popa
mov
lods
out
dec
jg
cli
dec
repnz
popf
xchg
jae
jge
cli
sub
xchg
push
inc
push
movsb
mov
xor
std
jno
icebp
sarl
mov
mov
subl
fdivl
sbb
bound
clc
xchg
sub
mov
cmpsl
stc
jecxz
push
clc
ret
xor
push
pusha
outsb
and
fildl
in
mov
mov
mov
mov
movsl
aas
adcl
inc
xchg
mov
pop
aam
scas
and
pop
mov
xchg
testl
sbb
inc
push
push
xor
icebp
stc
fwait
cmc
enter
repz
adc
lahf
call
push
adc
leave
pusha
sbb
into
mov
aaa
or
xor
mov
mov
pop
mov
ret
pop
mov
jns
lods
add
out
aaa
jecxz
sahf
push
adc
mov
les
pop
adc
das
out
jmp
outsl
mov
bound
mov
imul
jnp
out
lock
sub
jmp
dec
push
jb
cmpsl
je
leave
mov
lods
or
rolb
xlat
xchg
cmp
sahf
xor
data16
pop
mov
push
mov
xchg
add
sbb
jns
mov
iret
mov
shrb
mov
scas
mov
in
repz
xchg
push
lds
xor
xchg
add
shll
negl
ss
leave
jl
mov
sbb
pop
outsb
push
lahf
test
sti
lods
hlt
mov
xor
cmp
inc
ret
jle
cwtl
ljmp
lret
gs
lods
xlat
pop
cmp
adc
inc
pop
cltd
dec
aad
dec
inc
cld
aaa
int3
rcrb
sub
fsts
sbb
adc
divl
xor
xor
adc
stos
call
out
stos
and
repz
cmp
adc
pop
push
call
mov
fistl
daa
xchg
cmp
cmp
scas
mov
mov
stos
mov
push
sub
adc
out
gs
xchg
clc
ret
repnz
jae
dec
adcl
pop
mull
pop
popa
ret
adc
lock
push
imul
mov
les
inc
or
xor
cmpsl
pop
repnz
jecxz
loop
call
xchg
pop
push
cmp
lea
xchg
mov
pop
bound
pop
push
mov
repz
sub
push
mov
stc
and
into
jg
sub
jns
arpl
in
add
andb
hlt
and
cmp
enter
fisttpll
jno
push
ret
fnstcw
dec
jbe
push
fldt
insb
imul
sbb
mov
add
lret
adc
and
pop
cwtl
mov
adc
mov
mov
xchg
outsl
ss
push
add
out
int
in
movsb
push
xacquire
jbe
popf
push
out
jle
xor
int3
jmp
ds
fs
pushf
and
jl
or
pop
je,pt
pop
rcll
sbb
insl
scas
nop
shll
xchg
int
inc
xchg
cmp
jb
jmp
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
imul
xor
add
lea
mov
add
mov
mov
xor
add
jne
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
imul
xor
add
lea
mov
add
mov
mov
xor
add
jne
mov
mov
xor
lea
mov
incl
mov
xor
add
jne
jmp
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
imul
xor
add
lea
mov
add
mov
mov
xor
add
jne
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
xor
imul
add
lea
mov
add
mov
mov
xor
add
jne
mov
xor
mov
add
mov
pop
pop
pop
leave
ret
add
pop
mov
add
xor
add
add
add
add
add
add
add
sub
add
sub
add
xor
add
test
pop
add
add
push
jns
bound
imul
inc
insb
outsl
jae
push
imul
popa
je
outsl
outsb
inc
insb
outsl
jae
push
imul
mov
inc
add
inc
add
mov
inc
add
mov
inc
add
rolb
add
inc
add
rolb
or
inc
add
rolb
adc
inc
add
rolb
sbb
inc
add
rorb
add
add
add
add
and
add
adc
add
nop
inc
add
inc
add
nop
inc
add
inc
add
nop
inc
add
inc
add
nop
inc
add
inc
add
nop
inc
add
inc
add
nop
inc
add
mov
add
inc
add
mov
add
inc
add
mov
add
inc
add
mov
add
inc
add
rolb
rolb
rolb
rolb
rolb
rolb
rolb
rolb
add
add
add
add
inc
push
sbb
push
pop
push
inc
cmpsl
jmp
movsb
cld
adc
loopne
add
add
pop
inc
jne
jb
outsb
je
popa
je
pop
dec
outsl
imul
insb
imul
dec
gs
mov
sub
push
mov
xchg
mov
cmp
jne
mov
cmp
jne
mov
mov
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
push
movb
movb
push
movb
movb
push
movb
xor
movb
xor
pop
mov
lea
movzbl
xor
add
inc
mov
cmp
jb
xor
lea
movzbl
xor
add
inc
mov
cmp
jb
xor
lea
movzbl
xor
add
push
mov
inc
pop
cmp
jb
lea
mov
mov
mov
mov
mov
cmp
jne
movl
movl
mov
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
lea
mov
mov
mov
lea
mov
add
mov
lea
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
lea
mov
movl
movl
lea
mov
xor
sub
mov
inc
dec
jne
lea
mov
lea
push
mov
mov
xor
mov
add
push
mov
add
push
mov
mov
movl
pushl
mov
call
mov
xor
add
mov
cmp
jne
mov
or
mov
add
mov
mov
mov
mov
add
mov
mov
lea
mov
add
mov
lea
mov
add
mov
lea
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
lea
mov
add
mov
lea
mov
mov
mov
mov
movzwl
xor
add
xor
mov
mov
movzwl
xor
add
xor
mov
xor
mov
mov
mov
lea
lea
movl
mov
call
mov
lea
push
mov
xor
add
push
lea
push
pushl
mov
call
mov
lea
lea
mov
call
mov
lea
push
mov
xor
add
push
lea
push
pushl
mov
call
mov
pushl
pushl
pushl
pushl
pushl
pushl
pushl
call
add
mov
mov
mov
mov
mov
mov
lea
mov
cmp
jb
mov
mov
mov
add
cmp
jae
sub
add
mov
pop
pop
pop
leave
ret
push
push
push
push
mov
mov
add
push
cld
mov
add
push
mov
lods
xchg
push
mov
or
shl
not
push
mov
or
shl
not
push
add
mov
sub
sub
inc
push
push
push
push
push
push
sub
push
or
mov
shl
lea
mov
shr
rep
push
pop
call
loop
lea
lea
mov
mov
sub
and
mov
mov
call
jne
mov
and
shl
sub
neg
shr
pop
add
pop
lea
shl
cmp
pop
lea
push
push
mov
push
mov
jb
mov
sub
movzbl
mov
shl
mov
and
add
lea
call
mov
shr
and
cmp
mov
jne
cmp
jb
jmp
mov
call
inc
inc
sub
sub
cmp
jb
pop
inc
cmp
dec
mov
jb
inc
cmp
dec
mov
dec
jb
mov
dec
sub
push
jmp
mov
dec
call
jne
pop
pop
pop
pop
pop
pop
pushl
push
push
mov
mov
jmp
mov
dec
call
jne
mov
dec
call
jne
pop
cmp
mov
jb
mov
push
mov
sub
cmp
jb
lods
mov
stos
jmp
mov
call
mov
je
mov
call
mov
je
mov
mov
mov
mov
mov
mov
mov
mov
pop
pop
pop
mov
mov
add
push
push
cmp
mov
jb
add
push
mov
call
jne
mov
mov
shl
sub
push
pop
lea
jmp
mov
add
call
jne
mov
mov
shl
push
pop
push
pop
lea
jmp
mov
add
push
pop
mov
mov
sub
inc
mov
call
mov
sub
jb
add
cmpl
jae
addl
mov
cmp
jb
push
pop
mov
shl
sub
inc
push
pop
lea
mov
call
mov
sub
jb
mov
mov
cmp
jb
mov
andl
shr
orl
dec
cmp
jae
mov
sub
mov
shlb
add
shl
add
mov
jmp
sub
call
shr
shll
cmp
jb
incl
sub
dec
jne
mov
add
mov
shll
push
pop
sub
inc
mov
mov
call
test
je
or
shl
dec
jne
jmp
incl
mov
add
mov
mov
sub
cmp
ja
mov
sub
mov
lods
stos
cmp
jae
dec
jne
mov
movzbl
cmp
jb
call
sub
lea
mov
mov
sub
mov
mov
mov
sub
mov
leave
pop
pop
pop
ret
pop
pop
sub
inc
jmp
cmp
jb
ret
shl
push
mov
cmp
jae
mov
shl
lods
mov
mov
pop
ret
mov
movzbl
shl
add
add
jmp
movzbl
add
mov
lea
sub
lea
cmp
jae
mov
shll
cmp
jae
mov
incl
shl
mov
mov
movzwl
shr
imul
cmp
jae
mov
mov
sub
shr
add
add
lea
ret
shr
sub
sub
sub
add
add
lea
ret
push
mov
sub
push
push
push
movl
movl
mov
mov
mov
mov
xor
mov
add
mov
mov
xor
add
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
movl
push
pop
mov
mov
push
pop
mov
mov
movl
movl
mov
xor
add
mov
mov
xor
add
mov
movl
movl
movl
lea
lea
call
decl
jne
decl
jne
decl
jne
movl
mov
xor
mov
add
mov
mov
andl
xor
add
mov
mov
mov
mov
mov
mov
mov
mov
lea
mov
mov
lea
mov
mov
pushl
lea
mov
call
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
add
mov
mov
lea
push
mov
mov
mov
add
push
pushl
push
call
pushl
mov
mov
mov
movl
movl
movw
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
call
push
mov
mov
pushl
call
test
jne
mov
mov
mov
add
mov
mov
mov
call
push
mov
call
test
jne
mov
mov
mov
add
mov
mov
mov
call
push
mov
call
mov
mov
xor
add
cmp
je
mov
xor
mov
sub
add
mov
cmp
ja
movl
pushl
mov
mov
mov
call
push
mov
mov
pushl
call
mov
mov
mov
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
mov
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
andl
mov
and
add
push
call
test
jne
and
jmp
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
mov
incl
cmpl
jb
mov
mov
xor
mov
add
lea
call
push
mov
mov
xor
add
lea
call
push
call
mov
xor
add
cmp
jne
movl
mov
mov
xor
lea
mov
mov
test
je
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
cmp
jbe
mov
mov
mov
cmp
jne
pushl
lea
push
call
mov
jmp
mov
mov
xor
add
xor
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
je
mov
xor
add
jmp
mov
mov
and
or
sub
add
mov
xor
lea
mov
cmp
jb
mov
mov
mov
movl
mov
mov
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
jmp
mov
mov
mov
sub
xor
xor
add
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
movl
mov
movl
mov
mov
xor
add
jmp
mov
mov
xor
add
imul
mov
movb
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
mov
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
push
mov
mov
xor
add
push
call
mov
mov
xor
add
cmp
je
mov
jmp
mov
xor
mov
mov
mov
xor
lea
xor
mov
sub
xor
cmp
jne
mov
mov
mov
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
mov
mov
mov
xor
mov
add
movl
movl
jmp
xor
mov
xor
sub
mov
movsbl
movzbl
cmp
jne
mov
mov
xor
lea
xor
cmp
jne
jmp
mov
xor
add
mov
xor
add
cmp
je
mov
movl
movl
movl
movl
mov
mov
mov
xor
add
push
mov
mov
xor
add
push
mov
xor
add
push
mov
xor
add
push
call
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
mov
pushl
xor
add
push
call
mov
xor
add
mov
cmp
je
mov
xor
add
cmp
je
movl
movl
mov
xor
sub
mov
mov
xor
sub
mov
mov
xor
sub
mov
andl
andl
lea
push
pushl
push
lea
push
mov
pushl
mov
add
push
push
call
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
push
call
mov
add
xor
cmp
mov
mov
mov
jne
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
mov
jmp
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
movl
mov
mov
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
jmp
mov
mov
mov
sub
xor
xor
add
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
movl
mov
movl
mov
mov
xor
add
jmp
mov
mov
xor
add
imul
mov
movb
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
pushl
mov
pushl
lea
push
mov
mov
pushl
mov
mov
pushl
pushl
pushl
call
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
xor
add
push
mov
xor
add
push
pushl
call
pop
pop
pop
leave
ret
push
mov
push
push
lea
mov
push
mov
mov
mov
mov
cmp
pop
jne
movb
movb
movb
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
mov
movb
movb
movb
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
movb
mov
movb
movb
leave
ret
push
mov
push
push
lea
mov
push
mov
mov
mov
mov
cmp
pop
jne
movb
movw
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
mov
movb
movb
movb
leave
ret
push
mov
call
mov
mov
movb
call
push
mov
movb
call
push
movb
call
movb
mov
jmp
push
mov
push
mov
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
movl
mov
movzwl
xor
add
pop
test
je
mov
movl
leave
ret
push
mov
sub
andl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
push
mov
mov
mov
mov
mov
push
mov
test
jne
pushl
mov
call
mov
mov
add
mov
mov
mov
mov
xor
mov
add
cmp
jne
mov
mov
mov
mov
mov
mov
xor
add
mov
mov
andl
xor
add
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
movl
pushl
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
lea
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
movl
pushl
mov
call
test
je
andl
cmpl
jbe
mov
mov
sub
mov
incl
mov
mov
inc
cmp
jb
mov
mov
add
mov
mov
add
sub
add
mov
mov
mov
movl
jmp
add
shr
mov
je
lea
mov
mov
mov
mov
movzwl
mov
and
mov
mov
shr
add
xor
cmp
jne
mov
add
mov
cmpl
je
mov
add
mov
mov
mov
mov
addl
decl
jne
mov
add
mov
cmp
jae
add
mov
mov
test
jne
mov
mov
movl
mov
mov
mov
xor
add
mov
lea
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
mov
call
mov
mov
add
mov
pushl
mov
pushl
pushl
call
mov
add
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jb
mov
mov
mov
lea
mov
add
cmp
jae
mov
mov
mov
sub
add
mov
mov
jmp
pushl
call
mov
mov
mov
xor
add
mov
jne
mov
mov
pushl
mov
call
jmp
mov
mov
lea
add
xor
pop
pop
pop
leave
ret
push
mov
sub
push
mov
mov
cmpl
je
test
je
test
je
mov
test
je
cmpl
je
cmp
je
mov
andl
mov
sub
add
movzwl
mov
movzwl
add
je
lea
push
mov
mov
push
test
je
mov
andl
and
add
movzwl
movzwl
add
je
lea
mov
test
je
mov
andl
and
add
movzwl
movzwl
add
je
lea
mov
mov
mov
test
je
mov
add
movzwl
movzwl
incl
addl
add
cmp
jb
movzwl
movzwl
mov
incl
add
add
mov
cmp
jb
mov
movzwl
movzwl
incl
add
add
mov
cmp
jb
pop
pop
xor
inc
jmp
xor
pop
leave
ret
push
mov
mov
mov
sub
push
xor
push
push
cmp
je
cmp
je
cmp
jne
xor
inc
jmp
mov
add
mov
mov
mov
mov
add
add
mov
cmp
ja
mov
mov
cmp
jbe
cmp
jae
movzwl
jmp
mov
lea
mov
test
je
add
mov
cmp
jbe
mov
mov
add
cmp
jae
mov
jmp
sub
mov
mov
test
je
mov
inc
mov
cmp
jb
jmp
xor
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
movl
mov
mov
mov
mov
mov
mov
push
mov
push
mov
movl
mov
mov
push
mov
xor
xor
add
add
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
je
add
mov
mov
xor
add
mov
mov
cmp
je
mov
mov
imul
xor
add
cmp
jne
mov
mov
imul
xor
add
cmp
je
mov
mov
mov
imul
add
mov
add
xor
mov
mov
mov
xor
add
xor
mov
mov
add
add
cmp
je
add
mov
mov
xor
add
mov
lea
mov
movl
mov
pushl
mov
call
mov
xor
add
mov
cmp
jne
mov
pushl
mov
call
mov
movl
movl
mov
xor
add
cmp
jne
mov
mov
xor
xor
lea
mov
mov
add
imul
push
call
mov
xor
add
cmp
jne
mov
xor
add
cmp
jbe
mov
xor
add
cmp
jne
mov
mov
xor
lea
mov
jmp
movl
movl
mov
xor
add
jmp
mov
xor
add
mov
mov
xor
add
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
mov
xor
add
cmp
je
mov
mov
xor
add
shr
cmp
je
mov
mov
mov
movzwl
push
pushl
call
jmp
mov
add
mov
mov
add
push
pushl
call
mov
mov
mov
xor
add
cmp
mov
jne
mov
xor
lea
mov
jmp
mov
xor
add
imul
mov
mov
mov
xor
lea
mov
mov
xor
add
cmp
jne
mov
mov
mov
sub
xor
jmp
mov
xor
add
cmp
mov
jne
mov
jmp
mov
xor
add
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
mov
mov
push
mov
mov
mov
mov
xor
mov
add
cmp
je
mov
mov
add
push
mov
movl
mov
mov
mov
xor
xor
add
cmp
je
mov
mov
add
mov
mov
sub
mov
xor
add
mov
cmp
je
mov
xor
add
mov
push
movl
jmp
mov
xor
lea
add
shr
cmp
jae
sub
lea
mov
movzwl
and
mov
mov
mov
sub
add
movzwl
shr
xor
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
cmp
jne
mov
mov
add
add
decl
jne
mov
add
mov
mov
mov
xor
cmp
jae
add
mov
mov
xor
add
mov
cmp
jne
pop
mov
pop
jmp
mov
xor
add
pop
leave
ret
push
mov
sub
movl
movl
mov
push
push
mov
xor
mov
add
mov
mov
xor
add
mov
push
mov
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
mov
test
je
mov
test
je
mov
test
je
mov
mov
xor
mov
add
mov
cmp
jne
mov
mov
mov
add
mov
mov
test
je
movl
mov
xor
add
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
cmp
jne
mov
lea
push
mov
xor
add
push
pushl
pushl
call
mov
mov
mov
sub
add
push
push
call
mov
mov
mov
mov
pushl
pushl
push
call
mov
mov
add
movzwl
lea
mov
mov
movzwl
xor
add
mov
cmp
je
mov
xor
add
mov
mov
movzwl
xor
sub
sub
cmp
ja
mov
add
mov
jmp
mov
mov
lea
mov
mov
test
je
not
and
add
push
mov
add
push
call
mov
mov
mov
xor
add
cmp
je
push
mov
add
mov
add
push
push
call
mov
mov
mov
add
xor
lea
mov
mov
mov
movzwl
xor
sub
mov
sub
mov
cmp
jbe
mov
mov
xor
add
mov
mov
cmp
jne
mov
lea
push
mov
xor
add
push
mov
pushl
push
call
test
je
mov
mov
mov
xor
add
je
andl
mov
mov
add
mov
mov
mov
add
andl
mov
mov
mov
mov
mov
mov
lea
mov
xor
mov
add
incl
cmpl
mov
jb
movl
movl
movl
movl
movl
movw
movb
xor
lea
mov
xor
sub
inc
mov
cmp
jb
mov
lea
push
call
mov
lea
push
push
call
lea
push
mov
pushl
call
mov
test
je
mov
jmp
mov
mov
cmp
je
mov
mov
cmp
jne
mov
mov
cmp
jne
mov
mov
mov
add
mov
mov
push
push
pushl
call
test
je
pushl
mov
pushl
call
test
je
mov
mov
mov
call
test
je
push
pushl
call
test
je
mov
mov
cmp
jne
mov
lea
push
pushl
mov
pushl
push
call
mov
mov
mov
xor
add
je
mov
mov
movl
mov
pushl
xor
pushl
add
or
add
push
call
movl
jmp
mov
mov
add
call
mov
mov
mov
mov
movl
cmpl
jne
andl
mov
jmp
xor
pop
pop
pop
leave
ret
push
mov
movzwl
movzwl
push
push
xor
lea
test
je
mov
lea
cmp
jb
mov
add
add
cmp
jb
add
inc
cmp
jb
xor
pop
pop
pop
ret
push
mov
sub
movl
movl
movl
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
push
mov
xor
push
mov
mov
add
push
cmp
je
mov
mov
xor
add
cmp
je
mov
xor
add
mov
mov
xor
add
mov
movzwl
movzwl
mov
xor
mov
xor
mov
add
add
sub
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
mov
mov
je
cmp
je
mov
mov
xor
mov
add
cmp
jb
mov
mov
xor
mov
add
cmp
ja
movzwl
movzwl
add
mov
mov
mov
xor
mov
add
cmp
jb
mov
mov
xor
mov
add
cmp
ja
movzwl
movzwl
add
mov
mov
mov
cmp
jne
mov
mov
xor
lea
mov
mov
mov
xor
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
cmp
jne
mov
xor
mov
add
imul
mov
jmp
mov
xor
mov
lea
mov
mov
mov
mov
mov
sub
mov
xor
mov
cmp
jne
mov
mov
mov
sub
xor
cmp
jne
xor
jmp
xor
inc
jmp
mov
xor
add
pop
pop
pop
leave
ret
push
mov
push
mov
push
mov
sub
mov
xor
mov
movl
mov
cmp
je
push
push
movzwl
mov
mov
mov
cmp
jne
mov
lea
xor
mov
xor
mov
mov
sub
mov
xor
mov
cmp
jne
mov
pop
pop
cmp
je
xor
lea
pop
leave
ret
push
mov
push
push
push
movl
mov
call
mov
mov
add
xor
cmp
je
mov
mov
mov
push
mov
mov
sub
mov
xor
mov
cmp
jne
mov
lea
xor
mov
xor
lea
mov
add
xor
cmp
jne
mov
pop
cmp
je
xor
xor
mov
mov
pop
pop
leave
ret
push
mov
push
push
movl
mov
call
mov
mov
sub
mov
xor
mov
cmp
je
push
push
movzwl
mov
mov
mov
cmp
jne
mov
lea
xor
mov
xor
mov
mov
sub
mov
xor
mov
cmp
jne
cmpl
pop
pop
je
xor
inc
jmp
xor
pop
leave
ret
push
mov
push
mov
movzwl
push
lea
mov
push
xor
mov
mov
cmp
je
mov
sub
mov
jmp
mov
mov
add
movzwl
mov
add
xor
mov
cmp
jne
xor
pop
mov
mov
pop
leave
ret
push
mov
sub
movl
movl
mov
xor
add
mov
movl
movl
movl
mov
xor
mov
lea
mov
xor
add
mov
imul
cmp
jae
mov
mov
sub
mov
xor
add
cmp
jbe
mov
add
mov
add
mov
mov
mov
mov
mov
xor
mov
lea
mov
jmp
mov
mov
sub
mov
xor
add
cmp
jbe
mov
add
mov
add
mov
mov
mov
xor
mov
lea
mov
jmp
mov
mov
sub
mov
xor
add
cmp
jbe
mov
add
mov
add
mov
mov
mov
xor
mov
lea
mov
jmp
mov
add
mov
add
mov
mov
mov
inc
mov
jmp
leave
ret
push
mov
push
push
movl
movl
xor
inc
je
mov
xor
add
cmp
jne
jmp
mov
xor
add
mov
sub
mov
mov
xor
add
mov
add
mov
jmp
leave
ret
push
mov
sub
movl
movl
mov
mov
mov
push
push
mov
xor
mov
add
cmp
mov
jne
xor
add
jmp
mov
xor
add
cmp
jne
mov
jmp
lea
mov
mov
mov
mov
xor
add
mov
mov
push
call
mov
mov
mov
jmp
mov
sub
mov
mov
mov
call
mov
pushl
mov
call
mov
xor
add
cmp
jne
mov
call
mov
xor
add
push
pushl
pushl
call
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
add
cmp
jne
mov
xor
add
pop
pop
pop
leave
ret
mov
mov
jmp
push
mov
mov
sub
cmpl
push
push
push
je
test
je
movzwl
mov
mov
xor
and
mov
xor
add
mov
andl
xor
push
pop
cmp
jae
lea
xor
movzwl
mov
lea
cmp
jne
movzwl
mov
cmp
jne
mov
movzwl
cmpb
je
mov
movzwl
movsbw
mov
sub
xor
cmp
je
push
pop
incl
mov
cmp
jb
jmp
incl
push
pop
mov
movzwl
cmpb
je
inc
cmp
jne
xor
pop
pop
pop
leave
ret
mov
add
xor
xor
cmp
sete
jmp
push
mov
sub
push
mov
mov
cmpl
jne
xor
jmp
push
pushl
call
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
push
mov
mov
call
push
mov
pushl
call
mov
test
je
mov
push
push
mov
add
mov
mov
mov
mov
add
mov
mov
add
add
mov
mov
mov
cmp
ja
mov
xor
mov
cmp
jbe
jmp
mov
mov
movzwl
cmp
jae
cmp
jae
mov
mov
mov
mov
lea
add
add
sub
movl
mov
mov
cmpl
jne
mov
pushl
push
call
mov
test
je
mov
mov
mov
addl
decl
jne
mov
inc
mov
cmp
jb
pop
pop
pop
leave
ret
push
mov
mov
push
pushl
lea
mov
call
mov
mov
mov
xor
cmp
pop
setne
mov
pop
ret
mov
push
jmp
xor
add
mov
add
add
movzwl
mov
cmp
jne
xor
mov
mov
pop
ret
push
mov
mov
shl
add
jmp
xor
sub
mov
inc
inc
mov
cmp
jne
movb
mov
add
pop
ret
push
mov
sub
push
mov
mov
lea
push
mov
mov
mov
mov
push
xor
mov
add
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
movl
mov
mov
mov
movl
mov
mov
xor
mov
sub
add
mov
movl
jmp
mov
mov
xor
xor
lea
mov
xor
div
mov
mov
xor
xor
sub
cmp
jne
mov
add
mov
mov
mov
xor
xor
add
add
cmp
jae
lea
mov
mov
xor
add
lea
mov
mov
cmp
jbe
addl
jmp
addl
mov
xor
inc
incl
add
cmp
jb
mov
mov
test
jne
xor
sub
jmp
mov
xor
mov
sub
add
mov
xor
sub
ror
xor
mov
add
mov
mov
mov
sub
xor
cmp
jne
mov
mov
xor
xor
sub
sub
xor
mov
mov
xor
mov
sub
add
jmp
mov
xor
mov
sub
add
mov
mov
cmp
jne
mov
jmp
mov
xor
add
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
mov
mov
movl
push
push
movl
mov
mov
mov
xor
mov
xor
add
add
imul
jmp
mov
mov
xor
xor
add
add
test
mov
mov
je
xor
xor
add
add
shr
mov
xor
add
xor
jmp
xor
xor
add
add
shr
mov
mov
xor
lea
mov
mov
xor
xor
sub
cmp
jbe
mov
pop
mov
mov
pop
leave
ret
push
mov
sub
movl
movl
movl
push
movl
mov
push
mov
push
xor
mov
add
mov
movl
movl
movl
mov
mov
mov
xor
xor
add
add
imul
jmp
mov
sub
xor
mov
lea
call
mov
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
xor
sub
mov
cmp
jbe
mov
xor
add
mov
movl
mov
jmp
mov
mov
xor
add
shr
mov
mov
mov
mov
mov
mov
movzbl
xor
mov
mov
mov
xor
add
and
mov
mov
xor
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
pop
pop
xor
pop
leave
ret
push
mov
mov
mov
mov
mov
mov
sub
push
push
push
mov
xor
mov
add
cmp
jne
orl
jmp
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
sub
mov
mov
mov
mov
dec
test
mov
je
mov
mov
mov
dec
not
and
mov
mov
add
jmp
mov
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
xor
add
mov
mov
movl
movl
movl
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jae
mov
xor
add
mov
mov
add
mov
pushl
mov
mov
call
mov
movl
mov
xor
add
push
lea
push
call
mov
test
je
mov
xor
add
push
pushl
lea
push
call
mov
mov
mov
mov
sub
mov
mov
mov
mov
add
mov
cmp
jb
mov
mov
mov
add
mov
sub
jmp
push
pushl
lea
push
call
mov
mov
movl
movl
movl
lea
mov
lea
mov
lea
mov
lea
mov
mov
xor
add
mov
jmp
cmp
je
mov
xor
mov
add
mov
mov
xor
lea
mov
mov
mov
xor
add
cmp
jne
mov
xor
add
push
push
lea
push
call
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
lea
push
call
mov
cmp
je
mov
xor
add
mov
mov
xor
lea
xor
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
jne
mov
mov
xor
lea
jmp
push
pushl
lea
push
call
mov
mov
xor
add
cmp
je
mov
xor
add
push
push
lea
push
call
mov
add
mov
pushl
pushl
mov
add
push
call
mov
mov
xor
add
cmp
je
push
pushl
mov
add
push
call
mov
mov
add
mov
add
mov
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jb
mov
mov
mov
jmp
mov
mov
xor
xor
add
add
cmp
jne
mov
imul
mov
jmp
mov
xor
add
cmp
je
subl
jmp
andl
pop
pop
pop
leave
ret
push
mov
and
mov
sub
push
mov
push
push
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
mov
add
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
push
push
pushl
push
call
mov
mov
pushl
xor
add
mov
lea
push
push
pushl
pushl
pushl
call
mov
mov
xor
add
cmp
je
mov
mov
xor
add
imul
mov
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
pushl
pushl
push
pushl
pushl
pushl
call
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
mov
mov
movl
mov
xor
add
mov
mov
push
mov
pushl
lea
pushl
push
pushl
pushl
pushl
call
mov
mov
leave
ret
mov
popa
test
cmc
aaa
push
shrb
or
pop
aas
jns
add
repz
add
je
add
mov
ret
cmpsl
into
fcompl
cmp
adc
xchg
pop
fcmovne
ja
mov
and
adc
push
sub
lds
mov
xchg
or
mov
mov
push
jg
popa
mov
xchg
fildll
fsts
stos
sbb
and
sbbl
dec
std
mov
notb
sbb
sbb
mov
dec
ss
ret
fmull
cmp
notb
pop
sahf
sbb
lods
popf
xchg
cmpsl
jns
push
ret
lods
loop
pop
rol
push
mov
push
sub
data16
push
add
test
and
lret
pop
int
sbb
or
pop
push
lahf
ljmp
aad
imul
sbb
enter
cmp
das
adc
insl
rorb
cltd
push
mov
and
add
jmp
sub
enter
test
jl
add
jno
daa
fnstcw
mov
mov
xor
xor
mov
movsb
jns
les
enter
sbb
adc
fwait
scas
mov
pop
push
cmp
mov
in
and
or
call
adc
adc
mov
inc
fmuls
mov
std
pop
xor
push
movsb
push
adc
xchg
mov
add
and
in
and
scas
mov
jmp
xchg
adc
das
jae
mov
lcall
int3
test
cmc
mov
pop
or
cmpsl
mov
in
add
push
lods
add
xchg
xchg
repz
lahf
inc
cmp
adcb
clc
push
outsl
xchg
aas
push
mov
mov
ret
loopne
popf
mov
gs
sub
mov
movsb
cli
cwtl
xchg
pop
je
test
int
push
mov
inc
inc
lret
pop
outsb
sbb
adc
stc
dec
lea
mov
test
pop
fmull
loopne
loop
and
mov
insb
add
push
repnz
inc
lcall
mov
outsb
cmp
sub
test
add
loopne
mov
xchg
data16
mov
mov
add
adc
f2xm1
ret
scas
lods
aam
cmp
and
jo
sbbb
nop
jl
xor
mov
in
lahf
test
mov
jle
jo
inc
sub
jno
jo
sbb
jns
sub
incb
cmpsb
out
lahf
shl
adc
adc
mov
ss
pop
in
adc
addb
inc
pop
pop
int
nop
dec
insb
jb
lods
out
push
negl
pop
ret
popa
push
inc
push
mov
test
ljmp
cmp
jmp
in
rcrl
pop
clc
out
loop
cld
movsl
and
mov
fcmovnb
das
and
xchg
pushf
sbb
push
test
std
jecxz
cmp
push
cli
xchg
jmp
dec
scas
jl
pop
xchg
pop
lods
and
fidivrs
xchg
push
lret
xchg
jmp
mov
gs
loop
inc
cmpsb
in
stos
flds
dec
rol
cmpb
mov
insb
sub
rcrb
or
add
hlt
adc
pop
pusha
repz
or
lods
xchg
shl
shrl
pop
add
mov
or
pop
inc
push
fdivs
or
cmp
inc
aaa
pop
push
into
sub
test
adc
jne
cmpsb
shlb
arpl
rcrb
bnd
je
adc
mov
and
sbb
rolb
add
push
popa
hlt
dec
mov
ljmp
ja
mov
sbb
cwtl
dec
aas
movsb
std
mov
pop
incb
mov
int3
inc
fiadds
dec
mov
lds
mov
push
add
xor
daa
adc
mov
movsb
or
std
add
sub
jl
out
and
inc
mov
mov
pushf
orb
mov
repnz
jns
lahf
es
mov
sbbb
jg
xchg
aam
cli
xchg
div
call
mov
loop
jo
cmp
cmp
std
sbb
jmp
xchg
out
insl
dec
js
xchg
lahf
aaa
and
out
test
rcr
rol
cli
fbld
cmp
mov
push
add
enter
mov
leave
jle
mov
adc
jns
bound
loopne
sbb
or
je
in
sbb
popa
add
add
add
push
sbbb
fistpl
stos
cmp
insb
flds
add
add
add
sbb
outsl
sub
xchg
divb
jb
js
sub
pop
ret
aad
rcrl
jmp
push
jle
mov
push
in
sbb
je
jae
inc
mov
fiaddl
mov
imul
push
loop
mov
mov
sbb
mov
xchg
adc
jns
dec
gs
sbb
pop
lahf
push
inc
scas
jae
add
mov
push
test
pop
push
outsl
fcompl
jo
xchg
inc
cwtl
cmc
mov
inc
xor
mov
scas
andl
push
into
mov
loop
pop
jbe
push
or
mov
push
push
cmc
mov
pop
loopne
xchg
rorl
and
inc
iret
push
cmpl
fildll
fadd
outsb
xchg
mov
icebp
ret
mov
and
rclb
leave
xor
lcall
std
ret
jne
lea
idivl
aam
cmp
loope
cmp
pop
sahf
mov
subb
ds
jno
dec
cmp
dec
mul
sbb
mov
test
mov
mov
mov
pop
test
loop
jo
mov
mov
fdivrp
mov
cwtl
js
lret
pop
adc
pop
pop
pushf
js
adc
popf
mov
loope
or
repz
inc
mov
xor
data16
addr16
pop
dec
xchg
push
add
int3
repnz
jmp
jmp
popf
mov
mov
xchg
pusha
jp
sub
in
in
pop
push
in
daa
add
jge
dec
cmc
pop
jbe
add
pusha
pushf
mov
shll
xor
pop
in
mov
popa
ljmp
daa
or
cmpsl
cmp
mov
mov
or
mov
xor
fidivrs
data16
or
test
cwtl
jb
sbb
sbb
xor
in
mov
test
push
pop
xor
mov
int
fcom
cmpsl
mov
lcall
jp
outsb
inc
sbb
cmp
add
flds
jl
push
test
mov
pop
insb
jp
lds
or
adc
mov
jbe
cmp
mov
lea
mov
mov
and
popl
add
bound
adc
push
pop
sbb
pusha
pop
inc
dec
sbb
cwtl
xchg
int3
loop
and
or
cmp
xchg
mov
out
mov
imul
mov
lcall
sub
or
mov
notb
sahf
lret
js
fwait
sbbb
int
add
or
push
fwait
cmpsb
jg
mov
sbb
leave
ds
adc
pop
hlt
and
fwait
out
int3
cmp
push
cs
add
sub
dec
rcl
and
lock
or
shlb
mov
cwtl
cmp
mov
cmp
pop
push
and
cwtl
push
mov
jmp
pop
cmovb
lret
inc
add
bound
bound
test
adc
shlb
out
cmpsb
leave
sahf
pop
int3
int3
pop
outsl
mov
push
icebp
xchg
outsb
sub
pop
daa
pop
sahf
jns
repnz
jecxz
push
fs
pop
rolb
mov
int3
cmp
in
dec
pop
rcll
cmp
sub
and
xchg
push
aad
dec
int
test
jg
inc
pushf
pop
ret
inc
pop
mov
mov
inc
sub
dec
lock
addb
scas
cwtl
cmp
xchg
out
lahf
in
adc
mov
jp
outsl
into
mov
in
xor
out
sub
xchg
pusha
pop
stos
fisttpll
mov
and
inc
ret
jecxz
mov
mov
xor
rcl
aam
leave
enter
mov
fistps
repnz
test
jne
push
and
into
outsl
or
pop
jns
in
fdivl
inc
pusha
cs
sub
lahf
stos
cltd
es
xchg
sarl
shr
mov
paddusb
pop
add
jle
jb
jae
hlt
fidivrs
mov
fucomip
add
jmp
pushf
dec
or
cmp
notl
nop
sub
inc
sbb
xchg
ja
test
sti
repnz
add
push
arpl
sub
cld
int3
or
or
test
mov
cld
sub
xor
dec
xchg
jnp
bound
clc
mov
gs
int
stos
push
push
daa
add
test
outsb
mov
jl
test
sbb
add
add
jne
cmpsb
jg
mov
jae
or
scas
pop
fiadds
add
add
add
maxps
sub
jbe
jmp
js
outsb
pop
cmp
gs
adc
lods
mov
icebp
insl
add
insl
dec
and
sti
sbb
into
jbe
push
cmp
pop
push
push
jmp
int
dec
mov
cmp
iret
xchg
mov
jb
sbb
xor
pushf
jl
orb
orb
mov
dec
mov
adc
push
inc
cmp
pop
pop
dec
xchg
fucom
test
ds
in
das
sbb
mov
cmp
xor
lods
fsubrl
fcoml
loop
dec
add
mov
push
xchg
xor
jl
cli
dec
inc
sarl
test
pusha
call
mov
mov
cmc
les
and
insb
jno
push
sub
push
inc
or
nop
movsl
paddusw
rolb
aad
mov
call
lret
sbb
jns
mov
and
add
out
in
imul
cmp
bnd
dec
dec
mov
or
push
and
in
cli
ds
sbb
mov
push
sbb
and
out
andb
data16
fldcw
imul
in
and
sbb
pop
fdivs
js
movsl
push
stos
sbb
shl
daa
inc
dec
adc
dec
adc
mov
fisubl
rep
push
inc
lods
fiaddl
dec
pop
xor
adc
lcall
push
in
das
idivl
cmp
mov
jmp
add
loope
xor
mov
cmp
mov
icebp
add
fisttps
push
inc
hlt
popa
lds
push
test
cmc
inc
cmp
xchg
jle
dec
dec
fabs
out
cmp
jbe
leave
clc
into
dec
sbb
lret
fidivrl
pop
orl
push
xlat
mov
adc
push
mov
hlt
dec
je
cmpl
mov
icebp
push
sar
pusha
test
daa
lock
adc
jno
jns
in
jne
jmp
scas
sarl
add
mov
scas
mov
es
jnp
sbb
jnp
push
inc
divb
ret
outsl
out
xchg
in
arpl
jb
pop
jmp
pop
cwtl
in
push
mov
jb
aaa
sbb
addb
mov
mov
js
jne
sbb
pop
in
push
fwait
mov
and
mov
or
mov
arpl
cmp
inc
xchg
iret
movsl
je
xchg
push
mov
jo
sbb
sbbl
daa
fsubrl
movsb
mov
or
int3
sti
dec
jle
push
cmp
scas
or
push
and
in
fbld
leave
xor
inc
dec
cmpb
fsubl
int3
call
aas
pop
sub
adc
and
loop
and
mov
scas
rorb
out
xchg
sub
lds
movsl
dec
nop
add
pop
lretw
cmc
sbb
out
mov
insl
push
xor
push
jmp
fdivp
mov
pop
xor
sub
mov
lods
or
pop
in
lock
out
int3
int3
mov
inc
inc
insb
in
fildll
fs
cmpl
push
pusha
hlt
or
inc
mov
subl
adc
adc
push
pusha
xor
ss
xor
data16
adc
loope
add
movsl
out
and
pop
addl
das
lret
bound
jns
dec
add
pop
push
adcl
roll
and
pop
imul
hlt
xor
inc
dec
ud2
push
lea
movsb
sbb
mov
inc
lods
ret
popa
inc
gs
push
rolb
xchg
js
pushf
scas
scas
aaa
insl
sub
push
pop
out
stc
and
xor
push
pushf
mov
ja
lock
sbb
outsb
push
dec
lods
pusha
push
adc
push
mov
lea
mov
and
jmp
sub
pop
adc
scas
outsl
xchg
je
and
pop
outsl
adc
add
and
jns
addr16
jmp
addl
add
add
mov
unpckhps
shr
je
inc
jo
xor
icebp
pop
or
inc
sub
aad
jmp
scas
es
dec
shl
dec
jle
dec
dec
shll
xchg
or
adcl
cmpsb
mov
xor
xorl
pop
cltd
xchg
add
add
add
pminsw
idiv
repz
lret
or
add
repz
add
mov
scas
jnp
jae
dec
pushf
or
inc
push
jle
aad
test
cmp
popa
fs
jle
push
cmp
xor
ret
lret
lcall
cmpsb
pop
adc
sbb
pop
test
and
push
test
insl
daa
cmc
sub
bound
jno
sub
pop
jnp
ljmp
cld
mov
js
or
adc
repnz
xchg
inc
xchg
fidivrl
and
out
sub
sbb
rol
in
mov
pop
or
xor
inc
cmpsb
outsl
sbb
or
idivb
mulps
push
scas
xchg
mov
push
out
ss
je
xlat
jge
mov
cs
inc
shl
dec
push
mov
or
addl
adc
daa
pop
ljmp
sbb
gs
cli
pusha
dec
repz
fdiv
xchg
sub
pop
mov
xlat
hlt
pop
pop
sbb
aad
test
scas
pop
cmp
int3
lea
dec
icebp
sub
cmp
mov
jmp
inc
rcrb
mov
sub
lds
mov
add
mov
cmp
cmp
xchg
scas
lahf
mov
jmp
jle
cmp
pop
adc
cmpsl
sbb
jg
mov
add
pop
inc
bnd
mov
dec
shlb
inc
xchg
inc
and
shll
xor
lods
add
sub
lock
jbe
mov
testl
pop
in
add
sbb
sahf
cmp
loope
pop
aam
outsb
loope
stos
xchg
cmp
nop
push
lahf
int3
mov
mov
sub
mov
xchg
in
cmp
push
testb
movsl
jge
and
imul
das
inc
ficoml
es
mov
mov
iret
in
lods
jle
pop
mov
mov
dec
mov
pop
jne
jnp
aas
sets
jmp
xor
jmp
cld
lods
mov
js
mov
push
adc
xor
scas
xchg
push
or
sbb
repnz
mov
inc
sub
xchg
jmp
call
lds
add
cmpsb
or
cwtl
cmpsl
cmpsb
cmpsl
inc
ret
dec
mov
sbbb
fs
negl
and
cmp
pop
fsubr
sbb
or
sub
mov
mov
adcl
rcr
mov
lret
lahf
pop
imul
cmp
or
imul
test
clc
xchg
jle
dec
addr16
jne
punpckhwd
jbe
fstl
mov
push
sub
pop
incb
xchg
add
mov
cmp
jno
adc
push
sbb
mov
sbb
push
lret
xchg
shlb
addr16
and
dec
movsb
add
scas
push
jb
add
imul
add
dec
fadds
xchg
popa
sub
cmpsb
sub
add
out
mov
rolb
pop
iret
sub
mov
fcomps
repz
or
loop
arpl
mov
xchg
out
inc
or
and
cmp
sti
jmp
popf
mov
sbb
mov
nop
vmwrite
mov
pop
or
xorb
push
push
ja
push
and
cmp
xor
popa
push
mov
loope
aas
out
das
sbb
pop
insb
and
xlat
iret
pop
cmpsl
xor
fcomps
jno
xlat
and
sub
cmc
xlat
sub
mov
iret
insl
mov
loop
je
xchg
stc
lods
rclb
jb
jmp
leave
fisubrl
xor
ljmp
fs
jmp
mov
dec
ljmp
mul
cmp
xor
sub
js
stc
out
mov
dec
pop
sarl
xchg
push
push
mov
and
out
fldt
lods
arpl
dec
xchg
xor
lock
xor
jb
jbe
inc
divl
or
pop
or
repz
dec
push
in
xor
push
jne
mov
addr16
sbb
adc
mov
jne
int
xchg
mov
les
lods
rcrl
hlt
xor
sarl
cli
jo
xchg
inc
dec
inc
js
out
std
mov
mov
dec
mov
icebp
pop
arpl
add
stc
loopne
mov
orl
fwait
pop
jecxz
mov
les
aas
inc
jns
mov
jle
add
add
call
jnp
sarl
lret
jno
inc
call
add
add
sub
ljmp
jns
jbe
ret
cmp
pop
jbe
cmp
ret
add
mov
les
cmpl
cmp
or
lret
sbb
cmp
imul
outsb
mov
aad
sub
jge
sub
out
dec
cmp
sub
repz
ret
sub
push
pop
push
xchg
out
mov
stos
stc
rol
jno
out
out
push
add
sti
sti
or
pop
fwait
add
fidivl
pop
adcl
stos
insb
in
test
ss
sbb
movsl
scas
sub
mov
mov
mov
mov
lcall
ljmp
push
imul
out
xor
pop
es
inc
ret
mov
sbb
ret
fmuls
rcr
ja
or
pop
enter
testl
inc
inc
cs
push
shlb
pop
push
stos
lret
scas
fsubrp
and
xor
insb
jbe
das
dec
daa
mov
dec
fnstenv
mov
push
mov
das
je
or
shll
addr16
repz
data16
jb
popa
or
pop
jb
fsubs
jns
inc
xor
sub
loope
repz
pop
rclb
xchg
lahf
aaa
jne
cli
cmpsl
rcrl
mov
aas
cmp
xchg
sub
cmpsl
mov
test
mov
mov
pop
call
pop
lcall
loop
je
int
pop
insb
or
mov
imul
sub
dec
mov
daa
mov
add
dec
mov
mov
dec
mov
popf
mov
idivb
push
or
into
and
adc
xchg
lods
mov
xor
aam
shrl
cmp
lock
mulb
add
push
cld
pushl
rolb
mov
sbb
lret
mov
push
inc
sbb
mull
sub
lock
sbb
idivb
cmpl
push
test
jne
cmp
stc
cs
adc
xchg
aas
lds
nop
jne
sti
jl
mov
inc
or
mov
or
inc
jno
sbb
push
movsb
xchg
dec
roll
outsb
xchg
pop
dec
stos
test
in
in
jo
pop
mov
popa
cmc
dec
mov
mov
ret
pop
dec
hlt
movsb
int3
jno
loope
nop
xchg
rcr
xchg
xchg
ds
xchg
movsl
add
jmp
je
dec
test
dec
xlat
fwait
mov
mov
sub
pop
xchg
dec
lds
addb
jbe
bound
add
fmul
cltd
fs
ja
xchg
pop
jbe
int3
test
adc
inc
jbe
or
out
cmpsl
mov
sbb
dec
xchg
xchg
fstpt
add
mov
xchg
jge
pop
inc
add
pop
jne
xchg
out
aam
sbb
sbb
adc
add
fdivrl
insb
outsb
sbb
sbbb
cmp
int3
pusha
pop
lcall
push
ds
cwtl
push
aas
mov
in
lock
mov
sub
mov
jno
aam
pop
jge
leave
mov
adc
jae
faddl
jb
cmc
push
clc
dec
cmc
add
sub
jmp
iret
mov
cltd
lret
out
pop
insl
pop
sti
test
aad
inc
pop
adc
xor
cmc
stos
or
push
stc
jecxz
cli
mov
inc
aaa
inc
xchg
stc
xor
push
sbb
iret
movb
test
sub
mov
or
lods
or
mov
loop
flds
jne
mov
lock
repz
pop
or
out
inc
adc
in
aad
inc
adcb
leave
lcall
lds
stc
in
inc
out
rorl
ret
in
stc
subl
jo
pop
pusha
mov
pop
fcom
iret
xchg
mov
cmc
mov
aas
icebp
test
jo
aaa
rclb
ret
dec
xchg
loope
inc
mov
stc
nop
stos
pusha
cs
imul
jg
inc
mov
inc
lcall
push
cmp
insb
mov
inc
push
std
shrb
push
pop
leave
fmull
movsl
in
es
xor
cli
xchg
outsl
xor
sbb
and
or
hlt
xor
cltd
lock
out
jo
pop
xchg
jae
dec
inc
in
xlat
pop
rcl
in
jmp
in
sub
xchg
icebp
lret
idivb
and
and
clc
out
add
xor
pop
imul
notb
loope
rcl
jle
and
inc
or
adc
or
mov
add
add
push
sub
test
adc
repnz
add
repz
add
scas
inc
ds
popw
shrl
add
sbb
in
xchg
mov
mov
dec
into
add
shlb
int
mov
and
add
mov
cmp
push
rorl
ja
stos
sub
push
decl
inc
dec
jnp
cmpsl
mov
mov
mov
in
and
add
mov
push
repz
sub
je
cmc
cmp
cmpsl
cmp
inc
jnp
mov
test
andl
jnp
sahf
mov
cmp
call
add
ljmp
and
data16
cmc
inc
mov
adc
ret
xlat
jno
sub
dec
dec
fs
lcall
insl
ret
push
aaa
sub
pop
jp
push
sbb
outsl
lds
faddl
mov
xor
sub
mov
ret
add
notl
jb
mov
mov
xor
xchg
add
test
mov
sarl
es
cmc
dec
jecxz
ficomps
inc
mov
mov
movsl
mov
or
mov
lret
inc
stos
dec
scas
inc
stos
shll
jmp
fisttps
shlb
xor
pop
in
iret
movb
push
jmp
xor
mov
insl
mov
cmp
jbe
mov
andb
mov
ret
dec
sub
xchg
loope
out
call
mov
sarb
lret
sti
pslld
rorl
in
mov
adc
fwait
ss
repz
inc
pop
mov
lret
mov
xchg
xchg
pop
cltd
lret
jne
sbb
inc
fnstenv
dec
add
xchg
sub
aam
test
inc
and
enter
mov
ljmp
jmp
adc
fimuls
sub
jno
fadds
out
push
xor
adc
add
or
mov
hlt
call
xchg
pop
add
sbbb
dec
push
xor
mov
sub
jmp
in
jae
mov
or
cmc
loope
cmpsl
mov
mov
mov
arpl
std
shrb
dec
call
ljmp
test
out
out
lret
test
mov
jnp
data16
pop
jmp
mov
mov
push
pop
fs
sub
jnp
pop
lea
dec
lahf
lds
xchg
enter
iret
push
test
and
addr16
or
dec
test
push
outsl
fnstcw
out
cmp
sub
dec
push
loope
or
cmp
ret
sbb
insl
fistps
dec
ja
enter
and
mov
je
fxch
ss
pop
pop
rclb
dec
lock
lahf
jmp
frstor
mov
and
xchg
lahf
push
loopne
bound
jmp
mov
add
sub
sbb
push
sbb
jb
cmp
push
call
and
aas
js
clc
mov
sti
fldl
inc
mov
inc
ss
mov
pushf
pop
cmp
lret
jecxz
ljmp
mov
push
push
fsubrl
jno
rolb
fsubrs
xchg
iret
sti
out
divl
cmp
pusha
push
hlt
sub
cmpb
inc
and
aaa
sub
outsl
and
mov
in
enter
mov
jmp
dec
ss
fdiv
pop
ror
xor
nop
xor
mov
mov
addr16
int
push
and
or
adc
add
xor
mov
or
dec
jbe
inc
and
jnp
jecxz
adc
jnp
cmpsb
push
xchg
imul
and
ret
adc
xor
fcmovnb
xchg
outsb
cmp
mov
nop
and
push
das
aaa
stos
and
ds
test
adc
mov
out
mov
push
inc
pop
or
aas
jle
inc
pusha
loope
jge
sbb
nop
dec
stos
pop
inc
divb
aam
out
push
dec
imul
and
cmp
inc
icebp
push
xorl
xor
daa
and
lock
sahf
lock
push
aad
call
or
jecxz
mov
and
cltd
xor
adc
les
add
frndint
hlt
into
mov
clc
punpckhwd
sub
sbb
or
jle
lahf
pop
divb
or
lahf
dec
imul
lcall
lcall
gs
fcomps
sub
add
add
add
dec
lcall
adc
lret
lahf
cmp
repz
add
and
mov
xor
adc
aas
int
jg
jmp
cmpsl
or
cmpsl
xchg
out
jnp
loop
and
repnz
jmp
jmp
inc
lods
dec
inc
dec
sub
shll
repz
out
aas
dec
in
mov
lret
push
lods
add
or
xor
fstp
pop
and
jmp
inc
cmp
cmpsl
into
pop
push
push
sbbl
cmc
add
xchg
pop
lods
dec
or
lea
dec
jno
sbb
mov
xchg
cmc
sti
inc
jns
in
pushf
insl
sti
dec
sbb
fdivp
out
mov
jge
jne
sub
sbb
hlt
jnp
repnz
add
aas
test
shl
nop
shll
jle
aaa
inc
into
dec
push
mov
xor
mov
int3
adc
lret
mov
and
mov
test
lods
xchg
sbb
int3
shll
sub
xor
lock
mov
sahf
mov
cwtl
fstpt
in
mov
cs
cld
mov
pop
xchg
ret
mov
out
push
imul
dec
fildl
dec
pop
cld
jbe
xchg
mov
movsb
pop
or
ds
pop
pusha
dec
mov
outsl
mov
adc
in
mov
dec
imul
outsb
rcrb
pop
mov
cmpsl
dec
jecxz
cmp
or
add
leave
mov
cmpxchg
fldenv
pop
das
adc
push
push
mov
pop
add
push
mov
adc
stos
repnz
pushf
icebp
mov
push
into
ret
loope
std
fwait
xchg
mov
fistpll
clc
int3
sbb
xor
dec
cmpsb
ljmp
cwtl
loop
ljmp
insb
fwait
out
mov
push
out
xor
sbb
xchg
inc
xchg
ja
outsl
dec
aaa
xor
test
inc
sbb
add
and
xor
sub
jnp
xchg
sarl
fadds
sub
ret
adc
lahf
je
or
jl
in
lods
dec
push
pop
push
lock
sub
add
aam
jo
inc
sub
imul
fcmovnbe
xchg
cmc
add
sub
jbe
test
addr16
repnz
ss
and
adc
fldt
rcrb
and
movsl
pusha
inc
mov
pop
pop
arpl
mov
xchg
inc
jae
xor
push
push
cs
lods
xor
mov
jbe
push
dec
cmp
dec
ret
adc
xor
in
xchg
outsb
push
mov
mov
in
in
shll
js
adcl
dec
in
icebp
aam
sbb
pop
enter
add
push
xor
mov
in
test
imul
add
subb
push
adc
pop
jnp
cmp
mov
sbb
jge
mov
aam
out
xor
jmp
ss
imul
lret
push
mov
outsb
rclb
testl
xchg
fcmovne
jns
ret
or
movsl
std
add
xor
aaa
daa
sub
sahf
jmp
jg
shlb
loopne
cmp
out
fistpll
dec
sahf
out
dec
fcoms
into
dec
ljmp
clc
ficompl
jns
inc
adc
out
xor
pop
inc
sub
lcall
and
push
push
cmp
sub
jle
lods
mov
nop
loop
fidivl
ds
push
cs
dec
xchg
data16
fs
inc
push
adc
push
pop
add
sbb
mov
repnz
imull
scas
push
mov
enter
mov
xchg
xchg
adc
ficoms
in
ljmp
out
sub
scas
loop
xchg
bound
sahf
imul
pop
or
mulps
adc
mov
xor
cmpsl
push
into
cli
mov
mov
shrl
icebp
ljmp
stos
pusha
dec
xor
xor
ljmp
mov
and
jb
cli
push
dec
adc
xchg
push
insb
pop
xchg
inc
pop
mov
cli
loopne
test
out
mov
sbb
fisttpl
add
sub
adc
insl
xor
into
stc
inc
inc
mov
pop
mov
mov
push
push
ret
mov
and
jge
cwtl
mov
pop
movsb
ficoms
mov
popf
out
aaa
sub
fs
xchg
add
add
add
mov
jno
cmc
divl
mov
scas
push
testl
add
mov
scas
mov
lds
out
sub
mov
and
mulb
pop
or
xchg
insb
stc
popa
sub
out
ret
lea
adc
xor
in
in
and
mov
xchg
dec
hlt
out
push
icebp
ss
jle
jmp
mov
xor
test
jb
pop
sub
mov
push
iret
jbe
rol
xor
stos
into
popf
cs
fwait
subb
mov
pop
push
adc
inc
pop
sbb
mov
gs
ss
or
dec
outsl
mov
cmpsl
dec
xor
out
or
hlt
push
cwtl
and
aas
int
sbb
fbld
and
mov
adc
jecxz
xor
jns
in
ja
xlat
dec
fists
push
ret
out
daa
ljmp
cmp
pop
test
push
daa
push
test
push
push
push
inc
xchg
test
or
popf
xlat
pop
inc
addb
sbb
nop
repz
imulb
jb
adc
cli
adc
add
sub
jns
xorl
jl
add
mov
add
ret
cmpsb
jnp
xchg
jp
adc
cmpsl
out
add
dec
inc
push
xchg
shlb
mov
xchg
std
outsl
movsb
stos
push
jb
xchg
jl
sub
lods
stc
sub
cmp
cmp
dec
cmp
push
jne
outsl
popf
fiadds
out
int3
dec
movsb
inc
pop
push
pushf
divb
and
xchg
jbe
mov
in
popa
xchg
and
or
ja
fstpl
aam
nop
mov
or
loop
addr16
pop
fnstsw
in
int3
fisubl
pushl
insb
scas
sbb
sub
or
aam
lahf
sbb
je
inc
mov
cltd
and
inc
xor
sub
push
sub
outsl
sbb
cmp
cmpsl
rol
lock
cmpsl
lahf
push
insb
mov
sub
icebp
sbb
xor
bound
out
leave
in
dec
mov
ljmp
cmp
push
or
fwait
pop
mov
cmpsb
inc
stos
ss
aaa
int3
xchg
xor
movl
insl
fistl
inc
lret
jns
mov
lds
pop
fs
mov
push
xor
jp
hlt
inc
ret
into
fisttps
dec
pop
push
loope
push
int
jl
add
and
add
jb
push
arpl
dec
lock
xor
jb
jo
mov
andl
push
test
std
add
pop
pop
cmp
push
mov
test
cmovb
sbb
jge
fists
gs
imul
in
bound
or
jae
sbb
pop
in
fstpt
lret
jmp
es
movsl
sbb
inc
push
pop
mov
push
xor
xlat
cmpsb
mov
jb
mov
fmull
xchg
jp
xor
cmp
flds
mov
push
fstps
hlt
sub
xlat
nop
cmp
mov
sub
xor
dec
lods
jno
popa
xchg
ud2
sub
movsl
call
push
adc
xor
adc
or
cltd
jmp
dec
sbb
xlat
int3
fs
jae,pt
mov
pop
das
mov
mov
js
jg
mov
push
sahf
icebp
jno
dec
inc
aad
test
repnz
rcrl
les
mov
ss
out
mov
inc
cmp
rolb
lret
stc
and
out
push
xchg
in
dec
ja
mov
shll
pop
push
sbb
mov
lods
or
push
data16
scas
inc
xchg
insl
lret
jo
sub
shll
xor
scas
mov
inc
mov
pop
aas
pop
lahf
mov
add
mov
add
adc
and
jmp
ret
sbb
psrlq
mov
mov
shll
das
shrb
insl
sbb
test
jle
mov
push
or
loopne
repz
and
inc
cmpb
adcb
or
push
lcall
dec
test
push
hlt
sbb
aam
repz
mov
mov
fcomps
mov
icebp
int
cld
fwait
add
sbb
imulb
mov
dec
dec
popf
jmp
scas
jb
xchg
cmc
es
test
and
lret
enter
movl
fisubrl
and
push
lahf
outsb
jl
shrl
add
add
add
sahf
xchg
inc
fisttps
lahf
int
push
cld
mov
adc
add
repz
add
movsl
loop
scas
shrb
jb
imul
push
aaa
fldenv
xor
adc
out
call
mov
pop
inc
mov
mov
pop
lahf
lahf
aam
cmp
es
movsl
and
xor
mov
aaa
push
push
mov
fwait
sub
pop
sbb
adc
frstor
xchg
aam
pop
add
popf
fdivr
rcrb
and
mov
fiaddl
or
and
dec
inc
inc
aad
pop
adc
fldt
daa
and
std
loope
out
arpl
xor
movsl
stos
mov
in
sbb
dec
ljmp
mov
and
push
mov
sbb
iret
stos
xlat
stc
push
lods
or
test
clc
icebp
pop
out
pushf
call
loopne
adc
pushf
aas
out
ret
and
jmp
mov
out
pop
testl
cmp
jecxz
inc
dec
fcomip
sub
xchg
dec
jns
daa
mov
adc
push
fisttpl
mov
and
lfs
aas
inc
and
cmpsb
loope
inc
inc
mov
cs
outsl
sti
lock
int
adc
outsl
cltd
hlt
and
js
add
movsb
enter
xchg
mov
in
sub
test
pop
ja
lcall
aam
push
stc
or
dec
mov
adc
pushf
loop
or
aas
xchg
xchg
lahf
mov
add
aaa
adc
fisubrs
push
fistl
les
mov
xor
inc
mov
cmp
dec
cmp
aas
das
inc
push
aas
jecxz
add
cltd
dec
pop
sti
push
int3
sbb
and
sub
std
js
lcall
lods
popf
jecxz
add
sbb
mov
jmp
rcrl
adc
mov
ss
mov
or
mov
cmc
pop
mov
cmp
decb
popa
movsl
iret
shlb
mov
jnp
adc
dec
push
repz
jo
cmove
fstpl
aaa
sti
hlt
std
mov
adcl
aaa
stos
popa
mov
adc
fbstp
cmc
mov
scas
xorl
loop
shl
test
xchg
adc
and
sub
outsl
push
repz
jge
adc
int3
mov
ss
out
out
push
cltd
aas
dec
insb
loop
aaa
mov
mov
icebp
and
push
lock
test
add
rcrb
fadds
maskmovq
negl
scas
scas
sbb
fisubrl
push
insl
pushf
idivl
xchg
paddusb
or
enter
lods
jae
mov
pop
cld
outsb
pop
cld
sarb
mov
lret
jno
inc
stos
jo
movsl
cltd
dec
adc
add
mov
popf
dec
dec
stos
or
ja
cmpsb
mov
cmp
data16
mov
cmp
push
shrl
lcall
ror
xchg
int3
cmc
jns
xchg
jnp
iret
or
pop
in
or
lds
sub
movsb
gs
xor
cmp
push
in
inc
jae
clc
pop
scas
mov
in
pop
push
add
fimull
jbe
fmull
xor
xchg
jg
push
xsavec
push
sub
sub
mov
push
dec
push
or
sbb
out
cs
adc
push
xchg
xchg
test
jae
jle
loope
xlat
xor
xchg
fldt
mov
or
arpl
add
lcall
jae
lea
addr16
test
lahf
push
inc
xor
add
lret
xchg
add
insl
mov
jl
cmpl
ss
pop
bound
push
daa
jo
inc
push
and
cmp
cmpsb
loope
out
pushf
icebp
mov
into
and
add
mov
fisttpll
and
rorl
aam
fnsave
xor
push
dec
sub
test
stos
imul
sub
push
push
add
inc
add
mov
out
push
mov
lahf
inc
pushf
dec
or
or
fldl
xchg
orb
mov
pop
xor
mov
adc
mov
adc
mov
push
jge
loopne
fnsave
inc
xchg
sbb
dec
bound
mov
jmp
stos
lock
cmp
xchg
sub
pop
dec
xchg
jle
inc
cmpsb
and
jns
sbb
imull
ds
mov
dec
mov
push
pop
insl
sub
inc
scas
and
repz
mov
lds
xchg
ja
mov
add
xchg
cmp
xlat
aas
popa
adc
andl
ds
add
repz
add
int3
mov
fdiv
inc
pop
push
inc
jae
out
jl
mov
daa
mov
stos
shlb
dec
fwait
lcall
insl
pop
dec
das
lea
fwait
and
cmp
mov
rolb
mull
mov
jp
in
movsb
pop
fldt
pop
cwtl
rclb
cld
insb
add
xchg
std
es
adc
popa
int
inc
dec
out
lock
or
arpl
sub
rolb
xor
inc
std
pop
xchg
mov
mov
neg
in
and
jmp
xor
jl
add
xchg
js
adc
adc
pop
adc
nop
sub
add
jecxz
shl
mov
sbb
ret
insb
push
cs
and
daa
popf
pop
push
push
call
sub
xor
adc
aam
int
lret
std
pop
jo
fidivs
fsincos
data16
mov
ja
mov
mov
fcmovu
je
out
or
out
and
xchg
repnz
ret
inc
fdivs
test
mov
cld
mov
ja
iret
sti
xchg
xorl
mov
add
lcall
and
xchg
cwtl
mov
pop
sub
mov
jl
fdiv
jno
pop
jns
pop
loopne
sbb
subl
mov
aas
lea
jmp
push
xor
jns
jo
pop
loope
push
daa
push
pop
sbb
inc
jnp
mov
lods
push
mov
popa
js
cmp
xchg
push
xor
aam
dec
out
xor
mov
xchg
fisubl
inc
mov
jmp
stc
mov
add
inc
xchg
sub
das
xchg
test
cmp
xor
out
push
push
ss
add
jb
push
dec
pop
out
loop
jle
sub
inc
aaa
inc
addl
aad
andl
sbb
and
xchg
dec
xchg
or
test
shl
add
scas
xchg
xchg
inc
or
lret
lods
jo
icebp
dec
std
or
test
jnp
inc
push
sub
sbb
add
xchg
jb
inc
lea
mov
in
fistps
sbb
adc
xor
xchg
xor
xchg
test
insb
ljmp
rol
sub
xchg
aad
mov
fmuls
aaa
jb
mov
js
sub
push
pop
dec
cmp
das
sub
inc
call
fmull
popa
and
add
jb
pop
enter
sub
sti
inc
stos
aaa
je
xchg
cmpsl
stos
push
push
cmc
pushl
pop
imul
enter
or
or
aad
xchg
adc
push
test
jbe
notb
xor
cli
sbb
adc
mov
arpl
adc
arpl
out
dec
test
loop
mov
cmc
pop
lahf
xchg
ret
mov
scas
sti
popa
repnz
in
cmp
push
add
gs
movsl
xchg
inc
outsl
loope
mov
pop
sbb
outsb
decb
sbb
test
pop
add
addl
jl
loopew
lods
sbb
sub
aas
pop
cmp
pop
rolb
aaa
push
out
lock
rorb
sub
sub
lods
sbb
imul
jo
push
repz
bound
filds
mov
sbb
ret
inc
and
test
movsl
cmp
sub
mov
sbb
sbb
imul
inc
shrb
cmp
aad
jo
arpl
cltd
jno
sbb
popa
jo
or
cmp
aad
mov
repnz
imul
jge
hlt
dec
sbb
lods
sar
mov
sahf
adc
cwtl
pop
mov
lock
fcmovu
add
or
lcall
jmp
insb
shrb
icebp
fucomip
push
pop
mov
and
cmp
movsb
sbb
fldcw
sub
dec
popa
jnp
pop
mov
inc
test
icebp
ljmp
aad
pmuludq
sti
stc
mov
or
cmp
cmpsb
mov
ss
add
inc
pop
orl
push
scas
les
leave
int3
jns
test
xor
add
dec
clc
fsubrs
dec
inc
or
out
insl
dec
in
ret
stc
test
outsb
pop
loopne
pop
nop
or
add
fidivrs
int
inc
sbb
repz
add
shlb
imul
cmpsb
out
js
jecxz
jmp
push
mov
inc
push
in
sub
icebp
dec
mov
dec
pop
fmulp
sbbb
fnsave
xor
dec
jl
mov
sub
xor
dec
cmp
pusha
fcoml
xchg
mov
mov
sub
arpl
jne
jmp
mov
cmpsl
mov
out
inc
lcall
icebp
pushf
fisubrs
sub
pop
mov
test
mov
mov
out
adc
xchg
xchg
and
pop
push
sahf
cmpsb
inc
push
sub
xor
jnp
aam
pop
or
movsb
mov
pop
inc
data16
aam
xchg
cmp
pop
inc
mov
add
ret
push
push
rolb
into
repnz
add
jmp
lea
shlb
aam
ficoms
cmovb
mov
std
sub
xchg
frstor
sub
repz
xor
mov
sbb
addr16
inc
andb
and
out
je
stos
mov
or
push
jge
jle
filds
nop
rcr
pop
lret
bound
inc
mov
xchg
inc
and
inc
lret
cs
insb
cwtl
cld
loope
dec
mov
push
pop
sbb
inc
out
jno,pn
adc
jae
add
and
inc
cmp
pop
rorl
dec
out
sbb
pop
adc
or
pop
sub
mov
sbb
xchg
out
outsb
mov
xchg
pop
pop
stc
inc
adc
stos
movsl
inc
je
mov
mov
mov
cmpl
ja
bound
lcall
push
loopne
mov
addr16
cmc
fimull
adc
dec
cmp
popa
cld
pop
add
cmp
mov
mov
jecxz
iret
jecxz
pop
xchg
pop
pushf
aam
xchg
testb
cmp
lods
pop
loop
pmovmskb
add
sub
mov
xorl
dec
mov
lahf
sbbl
shll
in
les
test
cwtd
pop
ljmp
mov
fwait
and
jno
outsl
into
in
insb
xchg
fiaddl
inc
fldl
inc
xchg
push
test
and
lret
adc
xor
xchg
sub
test
es
jno
or
pop
sub
ljmp
mov
imul
jg
aas
sub
pop
divl
mov
jp
imul
cmp
cmp
push
or
ret
lea
bt
neg
lds
bound
stos
test
adc
cwtl
arpl
fwait
mov
xor
nop
or
sbb
inc
leave
mov
dec
lcall
lahf
sahf
mov
cmp
test
cwtl
cmp
arpl
ret
ljmp
ret
out
and
jb
ja
insb
jns
call
movsl
jno
or
ss
or
dec
cmc
jmp
cmp
inc
addb
sub
dec
pop
dec
inc
int3
inc
aas
jbe
sbb
push
outsl
lods
pop
insl
pushf
aam
adc
and
pop
sbb
sub
xchg
pushf
xor
movsl
mov
xchg
jnp
lahf
push
sub
xor
xlat
in
das
daa
xchg
or
jne
push
movsl
faddp
xchg
dec
cmpsb
dec
jns
lcall
mov
pop
std
test
sbb
fst
cmpsb
mov
mov
stos
pusha
add
mov
push
ret
es
push
cli
clc
in
rorl
clc
ljmp
mov
lahf
lods
ret
ss
ss
rcl
mov
inc
push
mov
fcomps
scas
push
push
push
jp
pop
fcmovbe
cmp
icebp
dec
mov
push
and
mov
enter
jae
or
xchg
rcll
or
and
xchg
push
notb
dec
jecxz
inc
push
lods
xchg
mov
out
sbb
inc
mov
pop
repz
push
mov
pop
idivl
ffree
mov
or
pop
xchg
mov
cs
adc
bound
or
inc
fidivl
hlt
cmp
cs
shl
js
daa
imul
mov
test
insb
lods
imull
test
lods
xchg
or
incb
push
or
dec
adc
push
lds
stos
fistl
xor
adc
jnp
sub
je
and
popf
jg
int3
fcoms
es
fisubs
adc
cmp
movsb
inc
mov
fisttps
mov
jmp
leave
scas
dec
ficoml
in
jmp
add
add
add
std
mov
push
jg
mov
ljmp
add
outsl
scas
xchg
push
das
aad
arpl
test
xchg
les
mov
loope
push
rol
shrl
sbb
cmpsb
movsl
push
cmp
jno
dec
push
adc
out
js
fwait
imul
adc
sahf
jae
aas
jne
mov
dec
xchg
pop
stos
out
aaa
jne
aas
es
mov
xchg
in
cmp
mov
or
cli
mov
outsl
pop
pop
scas
dec
mov
lock
inc
add
popa
inc
loopne
dec
scas
mov
testb
sbb
imul
stc
mov
jle
icebp
dec
mov
push
ss
in
mov
cmp
imull
mov
dec
lcall
insl
bound
pop
sub
push
js
sbb
mov
or
adc
rcrb
addr16
push
inc
mov
shll
js
xchg
inc
leave
mov
in
insb
xchg
std
mov
mov
out
xor
sub
pop
or
pop
add
xchg
cmc
and
std
push
enter
shll
xchg
cmp
mov
das
insl
pop
xor
and
mov
add
int3
lock
push
sbb
xor
xor
push
rcr
dec
sbb
cld
scas
pop
insl
mov
xorl
dec
out
xor
gs
ret
cli
sbb
in
jno
dec
jmp
mov
insb
loope
pop
push
add
fcomps
xor
push
inc
mov
int3
fistpl
outsb
sbb
xor
in
add
mov
aad
or
xchg
leave
xchg
fisttps
aam
icebp
mov
and
mov
pop
out
lahf
mov
push
push
lds
mov
bound
xchg
jno
stc
fwait
adc
les
xor
loop
scas
jno
push
mov
imul
dec
push
and
mov
add
dec
pop
out
fwait
out
sub
or
aad
sbb
scas
push
and
rcl
fs
sbb
mov
mov
fcmovu
outsb
rcrb
into
pop
jg
jl
cmp
and
xchg
dec
push
or
faddl
push
mov
sub
imul
call
loopne
dec
or
inc
push
ds
aas
std
lods
scas
mov
adc
push
shl
outsb
sbb
mov
shl
das
cmp
loop
jg
leave
sub
adc
lock
in
fimuls
inc
add
adc
mov
mov
sbb
jp
andb
scas
pushf
mov
xor
dec
sahf
dec
mov
xor
into
sahf
lods
push
adc
ljmp
lods
xor
inc
add
jno
mov
and
lahf
mov
adc
dec
cmp
jg
inc
sub
push
shrl
dec
lods
out
movsl
sbb
negl
fdiv
sarl
pop
pop
or
gs
popa
mov
mov
pop
orl
gs
mov
daa
lahf
insb
mov
stos
js
or
or
mov
or
mov
popa
lret
lea
loopne
push
out
jno
xchg
scas
pop
jge
incb
ds
pop
jnp
out
je
xor
inc
mov
jns
imul
rcll
inc
leave
adc
aad
test
cmpl
or
pop
mov
xchg
scas
aam
dec
cmp
data16
xchg
js
push
add
imul
pop
mov
fs
mov
nop
sbb
jge
sbb
shlb
nop
pushf
add
in
in
jle
imul
pusha
push
es
adc
sub
loopne
insl
mov
pop
or
imul
leave
icebp
mov
jle
inc
or
pop
out
adc
mov
mov
inc
and
xor
xchg
fimuls
or
imull
jecxz
iret
add
push
paddusb
gs
push
pop
int
pop
scas
push
add
loopne
dec
jns
scas
loopne
sub
sbb
movsl
out
mov
and
cltd
ds
movsl
mov
loope
sar
test
mov
adc
gs
jns
out
pop
lret
lea
fidivs
adc
xchg
es
mov
and
mov
dec
push
sbb
or
xchg
rol
mov
mov
mov
cmpsl
test
js
sbb
push
xor
adc
xor
js
shll
push
leave
loopne
mull
push
out
sbb
lods
jo
inc
das
add
add
add
lret
in
out
dec
add
cmp
repz
add
and
pop
mov
push
xchg
sub
decb
addr16
fmull
jl
sub
xor
nop
js
int
and
dec
cmp
icebp
insl
popf
lret
adc
sub
gs
mov
mov
cmp
cli
scas
sub
sbb
xor
or
daa
push
hlt
cmc
jnp
jno
ds
addr16
into
cmp
push
cs
adc
and
sub
ja
xchg
lods
mov
cwtl
xlat
sub
xchg
pop
cmp
scas
jecxz
repnz
cmp
xchg
sbb
jmp
push
fldcw
and
mov
leave
xor
dec
mov
add
mov
clc
mov
xor
std
or
aas
mov
mov
aaa
aas
dec
subb
and
dec
clc
mov
jns
out
xchg
shrb
pop
add
xor
pop
cltd
mov
lods
mov
cmpb
test
pusha
addr16
push
pusha
shlb
xchg
insl
scas
xchg
push
or
icebp
repz
adc
aaa
jbe
aas
push
sub
jno
fwait
mov
data16
push
scas
adc
iret
xor
mov
in
or
mov
loop
xchg
push
insb
mov
cmp
jno
ljmp
or
jno
mov
xlat
inc
out
popl
mov
xorl
or
mov
hlt
scas
xor
mov
das
in
sbb
sbb
repz
scas
and
jno
aad
scas
addb
sbb
jecxz
int
push
pop
xor
test
mov
in
data16
dec
imul
sub
std
int
mov
push
repz
mov
add
mov
nop
in
sbb
add
xchg
inc
aam
or
ret
cmp
dec
outsl
mov
out
scas
lret
in
dec
or
jne
mov
inc
in
cmp
dec
lahf
and
inc
movsl
sti
jp
ret
test
mov
push
lock
cmp
in
cmpsb
mov
dec
add
in
jecxz
mov
pop
loopne
cmp
mov
repz
and
cmpsl
push
or
dec
mov
enter
cmpsb
mov
lea
or
setb
mov
out
xor
push
cwtl
push
and
xchg
test
push
nop
das
push
push
andl
jnp
cmp
and
adc
or
cltd
mov
js
or
pop
lahf
mov
mov
shrb
mov
lods
xchg
inc
jo
sub
cmc
bound
jl
pop
xchg
fistpl
add
xor
xorl
cli
xor
fdivs
and
xor
lret
ja
nop
add
push
xor
jo
lds
push
sbb
add
mov
nop
popa
stc
xor
lret
inc
ret
mov
aad
rolb
mov
outsb
sbb
or
fcoml
repz
add
dec
test
dec
push
mov
add
lods
call
pushf
mov
leave
xchg
or
fbstp
cmpsl
mov
cmp
mov
and
incb
mov
pop
mov
outsl
pop
in
push
addr16
push
fwait
adc
jae
pop
or
cmp
leave
sahf
dec
daa
loop
aam
ficompl
js
leave
dec
aam
fsubrl
mov
pop
adc
mov
xlat
test
test
je
mov
and
incl
int3
aad
xorb
call
or
fsubrl
cmp
mov
xor
aam
mov
rcr
cmp
mov
addr16
mov
xor
lret
in
cmp
mov
adc
pop
pop
mov
mov
add
out
inc
adc
cmp
and
and
cmp
sbb
xor
hlt
movsb
nop
push
aas
je
clc
cwtl
mov
scas
lods
cmp
dec
repz
xchg
inc
pop
pop
xchg
cmpsl
pop
int3
add
inc
aas
lcall
out
les
shl
inc
mov
out
mov
push
xchg
ja
push
mov
xor
mov
xchg
mov
jp
loopne
mov
test
add
aaa
lods
int3
jno
mov
jb
mov
popf
and
xchg
mov
add
sti
mov
ret
mov
aas
stc
bound
jp
jbe
std
rorb
add
je
std
mov
rolb
adc
add
add
add
loope
stos
sti
test
push
clc
add
fisttpl
test
dec
lock
sbb
push
enter
addr16
mov
jmp
aaa
pop
inc
lahf
xor
mov
fidivrs
cltd
aam
mov
mov
sub
adc
loopne
cmpb
push
addr16
out
out
jo
fistpl
pop
adc
cmp
and
daa
mov
mov
outsl
or
xor
pusha
push
jnp
sbb
push
push
inc
xchg
js
mov
shll
jecxz
sub
sbb
insb
js
sbb
dec
cltd
cmp
xchg
pop
sub
or
pusha
lods
dec
in
sub
sub
adc
mov
je
loop
xor
mov
dec
xchg
jl
shll
push
decl
pop
and
lods
gs
pxor
sbb
inc
dec
push
mov
mov
inc
jmp
jl
insl
push
pop
orb
aas
mov
iret
lods
dec
out
lret
shl
mov
cmp
std
adc
mov
cmc
loope
insb
std
cmp
xorl
repnz
ret
xchg
mov
push
jns
in
ret
outsl
mov
pusha
inc
or
lahf
inc
xchg
test
iret
cmpb
cmp
clc
in
inc
in
addb
sub
jmp
sub
rclb
out
loope
fiadds
add
or
xchg
movsb
jmp
mov
repnz
lock
in
cs
addb
fs
pushf
and
lcall
iret
xor
int
inc
mov
in
pop
inc
into
jle
int
mov
cmpb
and
jmp
jne
lods
adcl
les
cwtl
ss
adc
inc
enter
int3
rcl
sub
cld
cli
dec
mov
mov
xchg
loop
lods
mov
movsb
jne
push
cmp
lcall
lea
cmp
inc
dec
ficompl
mov
bound
jbe
mov
xchg
mov
jno
imul
xlat
ja
lahf
fisubs
mov
jl
das
sub
fnstcw
icebp
cld
fsubp
push
rcrb
stc
xor
pop
adc
mov
jnp
movsb
add
push
hlt
lea
and
adc
and
sarl
mov
jae
shlb
addl
pop
mov
cmp
js
pop
inc
test
addb
inc
leave
out
cmc
cmpsl
icebp
repz
inc
jmp
stc
sub
fistpll
enter
fs
fiaddl
inc
repz
lods
xchg
mov
pushf
repz
add
push
add
ss
push
push
mov
call
add
and
ljmp
jb
dec
loopne
adc
xchg
test
popa
out
and
sti
mov
lret
sbb
add
or
icebp
icebp
pop
inc
cmp
pop
inc
cmp
dec
inc
lods
jp
adc
xor
imul
mov
inc
and
pushf
loope
pop
push
insb
sub
jl
mov
stc
push
fldt
les
and
loopne
loopne
mov
push
inc
adc
int
das
mov
pop
sub
pushf
mov
xlat
mov
aam
pop
in
inc
push
adc
les
push
sbb
sahf
cmp
insl
mov
jecxz
lods
inc
xchg
mov
cmpsb
jp
jl
xchg
orl
or
jp
ljmp
arpl
lcall
sbb
rorl
lods
andb
mov
jne
div
fsubr
daa
pop
scas
stos
or
test
cmp
jge
fdivs
imul
lahf
cmpsl
dec
push
sahf
lods
imul
loop,pn
jmp
loop
gs
mov
push
or
aas
scas
jo
xor
lret
imul
pop
or
lods
test
sub
lds
ret
pop
fldt
adc
push
out
mov
jge
scas
dec
jno
jmp
fdivs
out
or
mov
fsubrp
pop
and
fisubrl
add
jnp
inc
lcall
js
adc
in
into
inc
out
mov
adc
scas
cmpsb
test
stos
mov
fldl
pop
and
mov
sub
adcl
cmp
test
cmpsb
jnp
add
add
add
in
in
or
fwait
stc
ret
sbb
add
add
add
in
mov
jnp
fs
mov
jp
xlat
lds
rcll
mov
fisttps
call
mov
mov
mov
mov
dec
cmpsl
mov
stc
push
outsb
mov
push
mov
ljmp
jl
pop
xchg
popf
out
inc
add
loopne
in
mov
xor
xlat
rcrb
sub
lahf
cld
shl
ja
or
lret
out
mov
or
cld
ljmp
mov
fyl2x
jae
js
pop
inc
fwait
xor
add
xor
imul
adc
mov
adc
subl
xchg
or
aaa
dec
enter
in
movsl
loope
and
fs
cli
and
pop
pop
jbe
lds
imul
add
adc
es
sahf
test
iret
mov
mov
fists
xor
cmp
and
imul
shr
push
dec
rcrl
fbld
jle
hlt
dec
pop
xor
dec
mov
sub
lahf
es
push
mov
inc
shll
popa
repz
pop
mov
ljmp
sbb
notl
enter
push
je
add
aas
push
insl
loope
gs
mov
in
cs
and
hlt
pusha
ss
mov
cmp
mov
fnstcw
pushf
roll
ja
and
push
or
pop
or
xchg
mov
notl
push
or
jno
ret
negb
add
sbb
call
jae
pushf
adcl
xor
inc
fs
xor
lds
xchg
sub
sub
and
sub
xchg
push
das
fs
ds
seta
test
mov
inc
ficoml
fsts
push
shrl
mov
iret
cmp
jmp
push
orb
fwait
pop
scas
repnz
fstl
push
cmp
addl
test
or
test
call
inc
outsl
push
div
lock
and
add
sub
cmp
add
add
jmp
ja
inc
mov
iret
cld
inc
in
clc
jl
adc
sbb
in
inc
sti
dec
sti
mov
jb
movsl
call
pop
iret
fisubs
jge
mov
imul
jnp
and
clc
outsb
inc
sub
inc
xchg
arpl
je
dec
test
add
push
push
aaa
cli
fnstcw
stc
jae
mov
mulb
mov
sub
cwtl
sbb
sub
cmp
fisttpll
push
in
pop
bound
xor
xor
xchg
enter
les
scas
sbb
cli
jg
dec
nop
jo
add
add
jp
pop
je
out
and
jle
bound
out
ds
insb
inc
mov
dec
jmp
or
repnz
test
push
sbb
ds
mov
pop
ficompl
je
xchg
cmpsl
dec
inc
mov
inc
or
aas
add
test
orb
jae
mov
push
or
outsb
sub
and
pusha
mov
pop
cmpsb
or
mov
fdivr
xchg
push
inc
mov
inc
adc
pusha
push
cli
es
sbb
pop
push
xor
icebp
sarb
push
jle
aaa
jo
idiv
xchg
or
or
jle
inc
mov
js
repz
rcrb
popa
addl
mov
mov
fimuls
mov
jle
add
xlat
xchg
aam
sub
mov
or
fdiv
into
test
gs
mov
das
outsb
gs
stos
xor
dec
inc
fwait
mov
stos
mov
xor
int
pop
cwtl
pop
in
in
jns
xor
xorl
adc
imull
xchg
divl
mov
xor
xor
xlat
mov
mov
xchg
mov
cmp
adc
data16
xchg
shll
sbb
std
mov
or
inc
adc
mov
int
push
ss
or
xchg
popf
add
pop
jmp
iret
add
push
xchg
pop
jns
nop
ljmp
fnstsw
push
fwait
jb
jle
repz
les
xor
popa
sbb
push
sbb
movsb
cmp
mov
arpl
clc
pop
and
ja
lds
in
add
add
sbb
add
lods
test
gs
jae
pop
mov
add
repz
add
je
aad
inc
adc
cld
cli
out
pop
dec
jg
mov
cltd
push
sub
shrl
mov
rolb
leave
movsl
cmp
lods
sub
mov
fists
jne
or
push
push
fistps
int
push
and
mov
adc
ljmp
adc
jnp
pop
mov
mov
xor
popl
lcall
icebp
out
jnp
outsb
repz
mov
test
aam
cmpl
push
pop
outsl
jmp
imul
adc
in
int3
mov
mov
js
mov
pop
sub
rcrb
mov
or
mov
cli
dec
xchg
nop
dec
adc
loop
arpl
dec
push
mov
jae
xor
ret
ror
loope
out
scas
stos
notb
adc
pop
ljmp
leave
addl
das
sub
inc
outsl
es
stc
mov
inc
mov
loope
negl
insb
jnp
xor
movb
adc
test
mov
cmp
push
sub
sub
sub
xor
addb
rclb
pop
js
popf
and
stc
jmp
je
adc
mov
pop
loope
jae
das
dec
push
mov
cmpsl
mov
or
xchg
mov
jns
mov
dec
xorl
cmp
sbb
ret
sub
rolb
fsubp
dec
lods
sub
jp
jecxz
xchg
xorb
mov
sbb
test
pop
sub
ficomps
orl
and
std
push
lods
shld
dec
movsl
xchg
fnstsw
in
mov
cmp
jo
cltd
xor
jle
or
aas
xor
adc
or
int
dec
sbb
mov
test
sub
cld
lahf
sub
imul
lods
cmp
mov
and
and
sbb
pop
aas
inc
imul
cmp
dec
shlb
jecxz
xchg
and
mov
xchg
and
mov
in
rorl
cld
lods
dec
inc
idivl
es
pusha
adc
loop
xchg
inc
xchg
ret
mov
stc
sbb
aad
inc
xchg
cltd
mov
xor
add
lods
lods
mov
sub
xchg
dec
call
xor
pop
inc
sahf
gs
mov
mov
mov
pop
sti
pop
cmovs
inc
outsl
or
jne
cwtl
mov
inc
sub
loop
leave
sbb
nop
insb
or
iret
lods
scas
inc
add
hlt
push
inc
mov
pop
jecxz
xchg
andb
mov
inc
sarb
loop
or
popf
inc
jmp
cmpsl
and
fidivs
mov
inc
dec
mov
sub
xchg
inc
cmpsb
inc
aad
cmpl
mov
xlat
mov
jg
jecxz
adc
dec
pop
xor
and
dec
nop
sahf
xchg
or
push
mov
das
pusha
div
xchg
loop
inc
shll
xor
adc
dec
push
jmp
orl
jmp
daa
jbe
int
in
cmc
repz
mov
jge
pop
or
or
and
jmp
inc
mov
jno
nop
mulw
dec
xchg
movsb
cmp
jns
lock
sbb
lea
fs
cmp
jb
jl
sti
dec
jmp
int3
out
in
dec
and
jp
shll
cli
add
mov
jg
cwtl
sbb
mov
call
stc
or
dec
out
inc
dec
mov
cli
mov
add
popf
dec
jb
rcrl
ja
mov
aad
data16
mov
jo
push
jnp
jne
ror
aad
push
mov
mov
js
rcrb
dec
das
cmc
movd
mov
jle
addb
xor
dec
or
out
push
mov
cmpsb
ret
pop
ljmp
popf
sbb
rorb
xchg
or
outsl
mov
arpl
adc
cmp
xor
xchg
leave
scas
scas
ljmp
je
jo
arpl
add
mov
dec
or
idivb
rcr
mov
stc
mov
or
lds
or
rcr
sar
imul
pop
iret
xchg
cli
fisttps
int
or
rolb
jecxz
cmp
aad
push
push
jp
inc
iret
vpshufd
jnp
pop
xor
cmpsl
jne
sbb
aad
pop
idiv
cs
dec
add
add
add
je
jne
pop
outsl
out
aaa
jae
mov
add
repz
add
jl
mov
call
or
mov
int
jl
ljmp
jbe
in
leave
xor
jae
scas
mov
mov
hlt
xchg
push
out
jle
lods
pop
das
jge
or
icebp
push
dec
out
mov
or
orb
sti
scas
jl
divb
ret
pop
aam
push
ss
loopne
cltd
out
pop
or
flds
ret
add
sbb
push
sahf
mov
test
mov
xchg
das
ds
cmc
movsb
sbb
push
in
jb
cmp
into
stos
nop
sbb
out
aad
sbb
mov
sub
pop
enter
sub
cmp
cwtl
fidivrl
xor
jle
or
jmp
sbb
push
call
mov
ret
push
lret
fdivl
orl
int
pop
adcb
mov
sub
out
jp
int
lahf
sbb
add
je
sbb
dec
xorl
pop
adc
sti
loopne
jmp
out
in
dec
jg
test
test
outsl
push
push
mov
inc
lods
imul
adc
arpl
imul
mov
call
mov
cltd
outsl
in
and
sbb
xor
add
mov
sbb
test
sbb
mov
sub
sub
fwait
out
dec
je
xlat
dec
repz
add
xchg
mov
clc
mov
fadds
arpl
shrl
or
out
sbb
mov
sbb
cmp
fildll
mov
mov
dec
out
pop
scas
imul
addl
mov
mov
rcl
ret
and
outsl
addr16
inc
lret
cmpsb
mov
sub
divb
cmp
push
cwtl
fmul
sub
sub
iret
pop
pop
dec
inc
nop
adc
in
push
out
mov
sarb
jmp
clc
jge
push
xor
jbe
sub
jmp
adcb
cmp
or
movsl
aam
sub
in
or
and
jnp
push
scas
lret
pop
les
cmp
mov
add
insb
dec
sahf
orb
lcall
scas
bound
in
aas
push
or
scas
or
lea
bound
jle
rol
fstps
decl
mov
dec
ret
je
xor
int
maxps
mov
xchg
mov
aad
dec
add
or
ja
cmp
xchg
xlat
es
stos
insb
fcmovnb
sbb
add
adc
rcl
mov
stos
fmulp
mov
test
xchg
mov
sbb
adc
mov
mov
int
push
push
test
mov
mov
ds
mov
mov
or
dec
mov
jnp
scas
gs
int
push
test
cmpsb
add
and
adc
or
xor
or
sub
adc
and
lret
pop
data16
std
popf
loope
repnz
ja
cli
jle
cli
fnstcw
int
pushl
push
scas
mov
jb
imul
mov
and
cltd
cmp
lret
dec
aaa
cltd
and
pop
decl
in
jp
jle,pt
mov
push
pop
ss
aam
repnz
adc
cmp
stos
sbb
pusha
out
and
dec
or
xor
popa
cmp
cld
push
faddl
pushf
xor
inc
pop
test
imul
mov
rolb
sbb
bound
dec
pop
jecxz
add
bound
sbb
xor
fisttps
insl
mov
mov
xor
jmp
xchg
sub
imul
xchg
adc
out
sbb
xchg
push
inc
push
jae
xchg
sub
sub
rcrb
out
movsb
out
lods
pop
or
lds
jl
mov
adc
jns
mov
sub
int3
sti
xchg
call
dec
hlt
jmp
adc
xchg
cld
cwtl
or
sub
outsl
sub
jl
mov
das
lea
fistpll
ret
fiaddl
lret
loop
pop
aaa
inc
daa
sub
call
lret
inc
add
pop
mov
scas
pop
mov
test
cld
cmpsb
xor
das
cwtl
sahf
xchg
mov
pop
outsb
loopne
lret
lods
fs
xlat
lods
sub
push
pop
xor
lea
fsubs
outsl
ja
enter
add
add
ss
std
iret
cmp
cld
mov
sub
add
add
add
dec
mov
and
mov
dec
enter
aaa
test
pop
add
aad
pop
scas
loope
imul
mov
fdiv
mov
mov
pop
out
mov
push
inc
jg
xor
jecxz
xor
jecxz
jg
sbb
add
adc
inc
mov
aad
std
mov
jecxz
mov
cmpsl
inc
arpl
lods
loopne
lcall
loop
fucomi
or
sub
fbld
inc
subl
or
mov
push
mov
cltd
ds
xor
xchg
add
push
cmpsl
jae
inc
add
out
push
insl
push
cmp
mov
mov
and
in
ficomps
stos
cmp
sub
sbb
and
outsl
lds
pop
dec
xchg
jne
les
xchg
push
adc
and
inc
das
cmp
into
call
jbe
imul
sub
mov
mov
out
in
shl
cmp
push
inc
dec
scas
push
ja
pop
fisubrs
sbb
fistpll
and
mov
inc
jne
int
iret
xor
cli
mov
in
repz
xchg
dec
out
jne
push
fdivs
sub
xchg
int3
das
dec
cltd
mov
loope
xor
or
inc
ret
or
dec
adc
add
outsl
mov
sub
stc
mov
sub
outsb
jmp
sbb
jo
mov
pop
mov
icebp
fbld
repz
xchg
mov
repnz
sti
and
cmpsl
subl
lods
lds
or
ret
idivl
xchg
adc
sbb
push
les
adc
stc
push
ret
inc
aam
vpcmpgtd
popf
lret
mov
dec
bound
add
pop
add
xchg
and
pop
testl
fstps
mov
push
pop
lds
mov
inc
sbb
sbb
lock
push
sub
cld
mov
adcb
cwtl
mov
test
repz
mov
shll
out
push
imull
mov
stos
leave
sbb
mov
jnp
fldl
out
js
jg
xlat
or
pop
push
sub
inc
cltd
lret
pop
enter
daa
fnstenv
aaa
inc
inc
push
ret
jbe,pn
pop
cmp
mov
sbb
into
push
popf
pop
aaa
nop
call
scas
pop
ficomps
mov
pop
jo
shll
sub
mov
pop
dec
xor
outsl
push
mov
mov
into
pushf
and
lahf
andb
ljmp
movsb
imul
fwait
pop
out
dec
stos
lahf
pushf
negl
cli
mulb
cmp
shrb
pusha
sbb
push
dec
jnp
sbb
std
inc
jae
loop
xchg
push
nop
aas
pop
xor
fldl
push
icebp
int3
add
mov
sub
call
push
add
test
mov
push
push
sbb
test
cld
push
xlat
stc
or
fcomp
add
mov
out
push
pop
test
jle
into
mov
sbb
test
adc
sub
fsubs
js
pop
lret
cmp
mov
sub
add
sahf
sub
andl
stos
dec
mov
xor
cld
push
jae
les
push
aas
es
daa
inc
out
clc
mov
outsl
inc
int3
insl
pop
mov
addr16
nop
ret
pusha
cmpsb
cmpsl
mov
cmp
mov
test
jb
sub
les
and
loop
lea
dec
inc
jns
je
cmp
adc
shlb
in
leave
pop
dec
jecxz
mov
sbb
jecxz
mov
push
lods
daa
mov
sbb
cmc
mov
aad
popf
iret
das
xchg
xchg
jg
sub
or
inc
dec
movsl
pop
mov
mov
jecxz
push
sti
fwait
inc
imul
in
lahf
push
insb
cmpsb
pop
aad
fists
gs
popf
push
ds
hlt
add
and
jp
sarl
adc
sub
and
mov
scas
mov
fsubrl
gs
hlt
movsl
push
pushf
push
imul
add
call
repz
lcall
cmove
adcl
imulb
cmp
out
mov
cmp
jbe
scas
or
mov
jb
leave
out
test
out
dec
or
mov
add
add
add
add
es
mov
jmp
fdivrp
mov
mov
add
add
add
aad
jb
cmp
adcb
push
mov
and
add
xor
sbb
mov
iret
mov
jg
int3
mov
jne
or
imul
shlb
repnz
stos
ret
pushf
inc
sahf
pop
ret
dec
fwait
out
push
jmp
lock
lret
adc
daa
idivb
xchg
sub
inc
mov
inc
and
ret
push
mov
in
aad
scas
test
ljmp
movsl
cmp
sbb
outsl
pop
testb
pop
inc
mov
fwait
jl
pushf
mov
mov
fs
sub
loopne
push
cli
lret
xorb
push
out
add
push
sbb
lret
scas
iret
cmp
sub
dec
xor
stos
in
push
fsubr
mov
adc
les
cmp
out
dec
and
and
roll
cwtl
add
sbb
psubq
pop
mov
inc
call
cmp
cmp
push
out
push
adc
add
data16
ss
xchg
fwait
ds
pushf
int3
mov
outsb
add
cltd
mov
cwtl
adc
aaa
leave
sub
stc
adc
sbb
push
cmp
xor
rclb
xchg
ror
mov
xchg
pop
scas
cmpsl
iret
testb
adc
jne
es
push
lds
daa
jl
mov
push
call
dec
and
push
aad
push
jne
test
or
pop
xor
mov
xor
movsl
int
repz
fcoml
fiadds
push
mov
popa
movsb
hlt
fsts
xor
aam
add
or
add
insl
ljmp
arpl
sbb
lds
dec
add
xchg
dec
mov
hlt
aad
push
ficoms
loopne
jbe
mov
stc
out
jo
adc
aad
jb
shll
popa
xor
cmp
lods
imul
mov
sub
fs
inc
fidivrl
jg
mov
lcall
fnstcw
or
push
adc
xlat
clc
jo
and
and
in
pop
pop
inc
mov
xor
push
dec
adc
xchg
xchg
in
repz
xorb
icebp
pop
mov
inc
mov
lds
imul
or
shlb
movb
lea
imul
add
daa
jae
push
imul
popl
cmp
shll
sbb
inc
xor
mov
xchg
xor
jns
in
cmp
imul
push
addr16
out
and
test
pushf
inc
out
jmp
fwait
mov
in
stos
jecxz
mov
int3
adc
xor
jle
or
push
mov
fwait
push
dec
mov
mov
lods
pop
scas
mov
xor
cltd
mov
pop
inc
call
int
sbb
sub
push
xchg
test
mov
or
loopne
lret
fs
inc
inc
mov
and
ja
add
cli
and
jle
daa
subb
xchg
pop
outsb
test
sub
xchg
ret
cld
pop
or
dec
in
mov
mov
rcl
sub
test
jnp
into
in
jl
push
sbb
mov
pop
int
das
loopne
xor
dec
mov
push
repnz
fldenv
lock
mov
cmp
repnz
shlb
jb
mov
push
imull
mov
dec
push
inc
cmp
xlat
sbb
imul
adc
mov
jmp
push
sbbl
loope
xchg
mov
jnp
in
mov
pushf
mov
xchg
mov
dec
xchg
xor
push
arpl
sbb
rcll
mov
dec
shll
push
adc
loope
fstps
dec
push
sti
mov
fidivrl
sub
cmc
dec
mov
cwtl
xchg
xor
mov
mov
inc
hlt
icebp
xlat
push
push
data16
fbstp
sbb
push
mov
movsb
cmp
leave
add
movsl
inc
xor
mov
repnz
movsl
mov
add
mov
ret
loop,pt
rcrl
cs
shrb
push
sbb
clc
sti
scas
xchg
sub
push
adc
fwait
orl
or
in
outsb
icebp
pop
test
mov
jp
sbb
ja
mov
ljmp
add
aaa
sti
addr16
out
fidivs
cwtl
hlt
ret
test
add
add
xchg
test
in
loop
repz
mov
cmp
push
jecxz
out
std
or
push
pop
dec
dec
in
notl
push
xchg
fistps
insb
and
rolb
inc
pop
jmp
xchg
ljmp
push
inc
ds
dec
stos
clc
sahf
jb
and
out
imul
inc
pop
push
addr16
arpl
sar
fcomp
mov
cwtl
movsb
adc
pop
or
lea
dec
mov
dec
pop
xor
mov
xchg
rcrb
jb
test
cmp
jbe
mov
mov
sbbb
pop
push
clc
stos
xor
push
je
daa
add
aam
sarb
push
bound
in
addb
fmuls
mov
xor
fisubrs
mov
fcmovnu
cmpsb
mov
xchg
pop
xchg
cltd
movsl
xorl
push
pop
xlat
push
data16
fimull
mov
fiadds
les
sti
pop
adc
adc
clc
pusha
sub
push
cmpsl
xor
es
xor
pop
and
dec
or
loop
ljmp
cli
test
fcmovnb
subl
dec
sub
and
in
ret
inc
dec
xchg
out
loope
and
mov
cmp
dec
imul
cld
add
orb
bound
lcall
jmp
imul
in
into
or
xchg
cmc
sub
sub
cltd
sti
pop
xor
or
xor
push
sub
into
int3
fstpt
jne
insb
out
cld
push
iret
xchg
and
jecxz
mov
xor
push
fcompl
jmp
shrl
sub
pop
mov
dec
stc
gs
pop
mov
cmp
in
cld
hlt
jo
jmp
arpl
repnz
push
mov
out
and
pop
and
sbb
data16
aad
sbb
icebp
ud2
pop
sub
decb
sub
jg
call
xor
pop
add
jmp
sbb
dec
push
and
jmp
icebp
insb
std
mov
cltd
sbb
mov
outsb
roll
push
test
in
mov
lahf
jno
dec
push
xor
bound
push
dec
cmovbe
movsb
pop
in
xchg
int
push
jp
popl
imul
xorb
inc
mov
das
outsl
inc
out
inc
scas
iret
mov
sub
sub
push
xchg
pop
xor
adc
push
bound
push
test
or
jecxz
test
in
xor
imul
xor
shrl
ror
data16
outsb
pushf
sub
clc
push
aaa
mov
mov
mov
subl
inc
cmpsl
shl
das
hlt
icebp
lock
inc
add
out
sbb
adc
out
jecxz
insl
adc
or
imul
repnz
sub
cs
xchg
inc
add
pop
stos
imul
xor
pusha
xchg
push
into
push
inc
xor
inc
inc
es
int
dec
imul
sbb
sub
sbb
mov
pusha
test
dec
ljmp
cmpsl
dec
mov
xor
jns
pop
mov
mov
mov
xlat
mov
jb
pop
mov
stc
shll
hlt
mov
mov
adc
add
cli
xchg
lds
dec
ljmp
shlb
sub
pop
nop
popf
pusha
or
or
cwtl
mov
mov
nop
add
lret
mov
sbb
mov
push
mov
mov
cmp
and
mov
scas
pop
inc
xor
fiaddl
sbb
shl
in
decb
pop
mov
mov
push
jg
dec
ret
arpl
test
or
pop
mov
mov
add
jmp
aad
andb
xchg
pop
or
popf
cmp
pminub
jle
fwait
pop
cmp
dec
mov
cmp
or
cmpl
insb
mov
push
addl
mov
push
out
xchg
or
cmp
and
aam
stos
std
movsb
lret
fsubs
test
adc
xchg
into
lahf
sbb
leave
add
fdivr
shl
mov
mov
les
and
jo
loopne
outsb
pop
js
imull
sarb
ret
out
xchg
stc
jno
imul
inc
sbb
repz
dec
fxch
jne
add
repz
add
mov
pusha
addl
mov
aaa
mov
fdivs
adc
cmp
lea
imul
xchg
test
dec
lock
jecxz
mov
sbb
bsr
mov
jbe
pop
jp
out
addr16
sbb
nop
xor
push
dec
mov
add
das
lods
cmc
sbb
add
push
ds
stos
xor
xchg
andl
test
add
rcll
clc
mov
xchg
insl
sub
popf
dec
jecxz
mov
cmp
loopne
pusha
inc
push
adc
das
sbb
fdivl
dec
lods
adc
pop
push
int
outsb
shll
push
imul
cld
aad
call
stc
test
mov
sub
out
jne
push
jecxz
shlb
imulb
xchg
cwtl
shufps
mov
xchg
inc
and
mov
dec
sbb
xchg
mov
rclb
pop
pop
pushf
sbb
aad
fwait
or
adc
pusha
pop
push
inc
pop
push
pusha
pop
sbb
xchg
and
sti
inc
jle
cmp
mov
loop
xchg
inc
std
test
dec
insb
cmp
jle
lea
sbb
lahf
cmpsl
adcb
movsb
mov
xchg
jl
xchg
lock
int3
insb
xchg
mov
pop
mov
stos
xchg
pop
mov
shrl
stc
in
cli
pop
mov
nop
cltd
scas
adc
mov
movsl
addl
push
dec
jno
sub
daa
pop
popa
pop
dec
addr16
lds
jle
imul
mov
fisttpl
push
ja
jmp
inc
into
mov
insb
add
inc
xchg
maskmovq
imull
mov
test
mov
insb
jo
call
cli
fadds
shll
insb
add
fwait
xchg
lods
lret
inc
adc
fildl
adc
inc
push
sbb
decb
mov
lret
in
mov
sub
pushf
cmc
mov
aaa
jnp
push
and
mov
mov
or
mov
sarb
fnstsw
data16
inc
or
sbb
pop
cmc
mov
jnp
mov
jl
dec
mov
lods
shl
and
adc
fistl
sbb
int3
daa
cld
push
sbb
mov
sbb
sub
lret
and
pop
je
das
mov
xlat
aaa
jmp
adc
pop
mov
lret
fcomip
lret
je
ja
in
cld
stos
xor
cld
and
jno
fs
jge
hlt
xor
sbb
addb
lods
mov
sarl
pop
add
popa
cmp
lds
pushf
push
sbb
leave
das
xchg
or
inc
mov
data16
loope
inc
clc
ds
pop
inc
push
test
mov
mov
stos
popf
fwait
push
mov
neg
int
ret
cmp
and
xchg
cmp
xchg
les
iret
test
leave
sub
jecxz
imul
jg
pop
call
xchg
hlt
shlb
les
pop
bound
add
mov
lods
cmp
push
les
mov
rorl
xchg
divl
inc
in
nop
or
insl
rol
imul
icebp
rclb
mov
add
cltd
or
enter
xchg
mov
cmp
dec
lods
iret
and
addb
push
dec
aam
sub
std
push
stc
cmp
jae
push
fadds
outsb
cmpsl
add
loope
loopne
adc
ljmp
fisttpll
add
rorb
xor
mov
pop
fidivs
lds
les
sbb
psubsb
lods
addr16
pop
imul
stos
jnp
ret
lock
lds
xacquire
pop
ja
fidivrl
scas
in
in
sbb
jmp
orb
cmp
dec
pop
mov
xorb
popa
aam
addl
push
and
cmp
cmp
mov
scas
bound
mov
or
cli
out
dec
mov
xor
popa
fsubrs
mov
fimuls
lret
scas
rsqrtps
pop
push
lahf
or
push
dec
pushf
fildll
inc
inc
out
xchg
aad
and
or
aaa
icebp
cmp
frstor
sub
mov
lret
inc
cmpsb
test
shlb
sbb
mov
add
ds
pusha
loope
mov
inc
js
sahf
and
das
jmp
and
sbb
dec
xor
lods
and
jle
sbb
aad
jl
add
add
mov
out
out
mov
push
test
push
add
add
rclb
dec
mov
in
sahf
arpl
and
xchg
push
jecxz
aas
mul
mov
fdiv
pop
jmp
int
loopne
stc
loope
xor
cmp
test
and
clc
testb
fldln2
arpl
sbb
mov
or
push
and
int3
movsb
push
popf
arpl
mov
dec
pusha
sub
jle
jb
push
xlat
stos
daa
inc
lea
sbbl
mov
imul
push
in
add
fsubrs
mov
inc
out
inc
sub
lods
mov
faddl
xchg
push
loop
call
test
jmp
hlt
ja
inc
adcl
pop
pop
lret
jne
add
dec
cltd
daa
lds
ja
mov
addr16
stos
and
add
ljmp
sub
je
mov
lods
out
cltd
adc
dec
cld
push
and
aaa
cmc
fbld
and
out
mov
xchg
push
mov
add
or
mov
sbb
sbb
pop
xchg
mov
jo
xchg
iret
mov
testb
xor
adc
push
test
jns
xchg
imul
lcall
fadds
xchg
cmpsl
jbe
and
imul
aad
adc
sub
adc
test
mov
fs
mov
add
xchg
aaa
adc
jl
xor
pop
clc
rcll
test
pop
adc
jmp
cmp
repnz
adc
mov
sti
lds
lahf
adc
push
jne
dec
ss
xor
stc
das
out
es
test
xor
sbb
xor
cs
in
sbb
xor
xor
ret
jge,pn
mov
push
sub
andb
into
inc
and
cld
jp
in
popa
insb
xchg
imul
daa
push
fst
mov
jb
push
pop
push
pop
jge
ds
jns
inc
push
pop
mov
insb
les
rol
xor
int
scas
je
inc
stos
int
or
movsl
rcrb
or
movsb
cmpsl
sub
and
adc
push
push
add
sub
xor
mov
push
shlb
ss
mov
in
push
inc
fcmovnu
loop
pop
mov
aam
mov
lcall
imul
mov
and
sub
mov
jns
dec
loop
daa
push
inc
push
sarb
popf
loop
add
dec
xor
out
or
add
aas
sub
iret
icebp
fwait
cmp
or
jae
inc
xchg
sti
sbb
mov
add
mov
mov
repz
out
arpl
repnz
mov
je
xor
pop
outsb
mov
inc
rorb
lcall
xchg
push
test
sti
sbb
jg
dec
fdivp
lods
in
lcall
and
lea
fmul
cltd
cmp
in
int
clc
ja
sub
jns,pt
or
dec
cmp
ljmp
aad
cmpl
xor
imul
aad
andb
sbb
push
inc
add
adc
cmp
loope
mov
filds
aas
mov
fcoml
inc
or
push
int3
stos
aas
mov
decb
pop
out
popf
in
or
cmp
fcoml
inc
jnp
lea
mov
pop
cs
mov
jl
das
fidivrs
sub
mov
adc
sub
jp
popa
adcb
imul
popa
xor
fdivrl
xchg
aam
arpl
add
into
xchg
lret
xchg
inc
jge
mov
sub
scas
repz
mov
dec
hlt
andb
and
fsubrl
cmp
sbb
inc
lret
xor
icebp
mov
jb
mov
gs
pop
in
loope
mov
mov
dec
mov
ror
mov
or
ret
test
jg
add
add
jns
mov
mov
test
sbb
inc
ljmp
jae
fdivrl
mov
mov
cmpsb
loopne
mov
mov
dec
xchg
mov
into
sub
mov
push
dec
dec
push
icebp
lret
aad
and
mov
loopne
rcr
sbb
mov
ret
mov
sbbl
test
cli
out
pop
adc
add
add
adc
dec
negl
mov
popf
pop
lret
inc
add
repz
add
sub
xchg
cmp
pop
aaa
mulb
shlb
or
lahf
movsl
add
sarb
xchg
les
repz
mov
sbb
hlt
dec
push
dec
sub
outsb
mov
push
push
inc
adc
cmpsb
ja
mull
pop
fsubrl
jge
mov
mov
mov
popa
hlt
and
movsb
neg
js
or
pop
sahf
jb
mov
inc
out
mov
xchg
mov
dec
in
hlt
sbb
adc
mov
fwait
stc
mov
int3
xor
xor
pop
adc
aaa
popa
and
jbe
sub
add
outsl
outsb
add
jns
mov
cld
jg
mov
and
push
cmp
push
mov
add
push
fistl
push
xchg
add
pop
xor
mov
mov
xchg
xchg
xor
mov
or
int
popf
hlt
jbe
add
daa
xchg
inc
mov
inc
or
fisubs
fwait
es
push
push
inc
add
je
xor
subb
and
imul
test
jmp
add
sarb
push
xchg
mov
mov
into
leave
dec
es
inc
fwait
xchg
aad
test
or
mov
int
mov
jno
loop
xchg
ss
mulb
push
in
push
adc
sbb
mov
imul
out
jnp
out
mov
push
lcall
mov
mov
mov
stos
xor
std
pop
xchg
and
stc
mov
sbb
shr
in
jmp
push
ds
xor
fld
jp
fstpl
lods
and
in
js
xor
imul
mov
scas
out
jge
or
daa
mov
nop
inc
repz
out
imul
lods
and
movsl
push
leave
mov
fsubrs
inc
dec
add
inc
dec
jmp
push
imul
mov
iret
out
roll
pop
fdivp
popa
into
std
bound
xor
jo
push
push
shlb
add
jle
mov
or
ljmp
mov
into
sbb
testl
cmpsl
aaa
fidivs
int
sbb
and
and
stc
push
pusha
mov
pop
fstl
popf
adc
and
xchg
push
leave
clc
gs
pop
ss
fistpl
shlb
mov
xlat
lret
aas
dec
add
fstl
xchg
pop
jle
sub
mov
loop
cmp
insb
jle
cmpsb
insb
adc
ret
xchg
push
jp
or
dec
lret
cld
sahf
addr16
mov
adc
xchg
fisubrl
sbb
xlat
push
pop
lret
mov
lods
dec
lcall
sub
mov
ror
push
pop
popf
inc
jo
inc
pop
lcall
fisttpl
pop
imul
lret
mov
es
popf
adc
jno
aaa
loope
xchg
jle
mov
mov
mov
and
pop
popa
jmp
xchg
xchg
addb
mov
push
pop
aad
dec
xchg
in
cmp
in
mov
jl
add
std
sub
std
rcrl
pop
ret
and
jns
mov
fnsave
aaa
out
and
lcall
inc
test
lret
or
js
outsb
adcb
sub
mov
arpl
into
loopne
jmp
enter
mov
ljmp
xor
cmp
and
scas
push
imul
lahf
xor
jge
and
stos
sbb
pushf
inc
shll
cld
mov
cmp
mov
test
mov
xchg
or
dec
rcll
test
out
jecxz
test
ret
clc
pop
mov
call
int3
sbbb
in
push
add
xchg
or
lcall
call
push
sbb
mov
cmp
fistps
cmpsb
mov
ja
pushf
fildl
cld
test
cwtl
fsts
or
and
sub
xchg
mov
xchg
imul
and
mov
shlb
jecxz
ret
and
push
dec
hlt
in
add
lahf
mov
mov
push
dec
add
outsb
lock
inc
movsl
pop
test
stos
rcr
outsb
xchg
mov
fimull
in
std
je
in
sub
push
sbb
out
jge
icebp
cmp
adcb
mov
je
into
repnz
pusha
jo
fcmovu
out
mov
pop
mov
sbb
lcall
ds
fdivp
cld
ds
daa
cmp
pop
popa
orl
add
add
add
mov
adc
sti
mov
or
push
sahf
fdivrl
dec
dec
xor
xor
xlat
push
xorb
mov
and
imul
mov
fs
rcrl
clc
fucom
xchg
into
xor
rcrl
cli
ljmp
push
mov
pop
aas
mov
push
jae
sarl
xor
inc
sub
dec
or
rorb
and
movsb
add
fisubl
jnp
jmp
jne
sahf
into
pavgw
mov
cmp
aad
jecxz
push
cmp
mov
sub
xchg
loope
mov
inc
mov
das
xchg
adc
insl
loopne
inc
push
repz
jmp
push
jmp
sub
lea
mov
dec
neg
sub
jp
fbstp
inc
inc
faddp
sbb
mov
loop
aad
fucompp
popf
jnp
dec
pop
mov
inc
push
lea
xchg
leave
xchg
lock
xlat
dec
test
jg
xor
and
xchg
rclb
cmpsb
lret
push
rorb
call
aad
lock
fisubs
es
cwtl
jbe
sub
fsubrl
imulb
out
pop
rcl
out
sub
jb
fxtract
push
dec
mov
push
sub
jne
shll
xor
aam
sbb
shr
in
sbb
lods
adc
xchg
fisttpl
mov
aad
sub
outsl
cmp
js
outsb
xchg
mov
push
je
scas
push
cmpsb
pop
mov
ss
jae
mov
push
movsb
subl
clc
xlat
add
sub
sahf
mov
rolb
xchg
jecxz
pop
add
pushf
aaa
stc
mov
je
mov
sub
out
dec
mov
mov
cwtl
mov
push
daa
and
inc
pop
mov
ret
scas
and
cltd
das
shrl
mov
stos
in
mov
movsb
mov
push
pop
add
ljmp
push
lret
rclb
inc
cwtl
jg
xchg
jno
pop
fwait
test
or
pusha
lret
imul
sarl
adc
inc
ljmp
add
sti
xchg
xor
mov
xchg
add
stos
and
insb
xchg
movb
xchg
cmp
xchg
inc
es
movsb
enter
data16
aaa
lahf
sbb
repnz
inc
in
pop
jl
sub
jmp
aas
lret
or
jnp
das
pusha
dec
xor
pop
dec
mov
jne
fidivrs
mov
neg
xor
mov
push
outsl
add
stos
xchg
out
dec
mov
fdivrs
xor
out
mov
sub
mov
jp
in
vfmadd213sd
jmp
clc
and
in
out
pop
imul
adc
outsb
push
xchg
test
add
ds
jmp
enter
push
mov
jge
jo
xchg
dec
pop
inc
andb
jns
rorl
testl
cmp
jno
jl
cmp
cmc
push
cmp
ljmp
in
adc
dec
xchg
xor
pusha
xor
push
mov
popf
xchg
or
mov
sbb
jecxz
out
negl
out
daa
jle
xchg
rcrb
inc
jo
xchg
xchg
scas
jmp
imull
lahf
int3
into
das
sub
jns
adc
add
cli
stos
xchg
fcmovne
or
cs
call
push
rcrl
sub
sbbb
adc
mov
imul
aam
dec
sub
pop
shll
inc
pushf
dec
aad
dec
adcl
sbb
mov
mov
push
mov
in
xchg
movsb
cmpb
ds
movsb
loope
sbb
popf
enter
clc
jge
push
ret
into
dec
jecxz
inc
cmpsl
pop
jbe
loop
add
and
and
jecxz
mov
xor
xchg
sbb
fnstsw
mov
push
cld
mov
loope
dec
sarb
das
dec
rcrb
push
push
in
js
ljmp
insb
push
and
pop
mov
xchg
ss
cld
sbb
mov
mov
inc
lods
cs
imul
xor
lods
mov
sbb
lcall
cld
xchg
inc
in
scas
shl
into
pop
movsl
lea
mov
xchg
sub
cmp
dec
cmp
cmc
dec
add
mov
add
add
add
xor
jg
sbbl
inc
dec
add
repz
add
cmp
test
adc
sub
lcall
inc
ds
and
dec
adc
icebp
xlat
es
and
arpl
ds
and
push
sarl
add
insl
cmp
jg
xchg
sbbl
imul
cmc
dec
or
dec
xor
cmp
inc
lret
sbb
sbb
sbb
mov
fcomip
xchg
push
or
push
inc
movsl
sub
shlb
jae
xlat
add
mov
movsl
mov
js
xchg
xchg
xor
inc
and
sub
cmpsb
sub
mov
jp
adcl
jge
shrb
cli
mov
adc
mov
adc
push
jmp
ret
push
cmpsl
adc
testl
out
or
cmp
cwtl
and
push
pop
xor
daa
sti
clc
dec
adc
push
loopne
mov
mov
in
lock
xchg
call
push
push
aad
fimull
inc
es
adc
mov
out
sub
adc
sub
xchg
jno
stc
jns
lea
je
jmp
mov
jb
fidivs
or
ret
leave
in
sbb
pop
repz
pusha
aam
icebp
cltd
std
clc
nop
orb
add
ljmp
adc
xchg
gs
lahf
or
sub
and
push
push
ret
cmpb
mov
scas
pop
aam
xor
mov
movsl
or
das
scas
mov
dec
jnp
cld
lahf
mov
jecxz
daa
and
inc
or
pop
daa
lods
test
mov
fdivrl
ljmp
pop
cld
dec
inc
fwait
rolb
push
jecxz
or
xor
into
jecxz
es
out
jnp
inc
jl
mov
push
or
sarl
xlat
fisubl
pop
pop
mov
lock
mov
idiv
ljmp
jp
pop
test
sub
push
inc
lahf
xchg
loop
push
jae
add
push
add
cmp
int3
dec
push
insl
bound
inc
inc
push
xorb
sub
in
or
cmp
lahf
mov
jnp
lea
push
cmpsl
sub
loope
push
pop
cmp
repnz
bound
xlat
dec
or
xlat
imul
cmpsb
sbb
pop
mov
push
aaa
mov
testb
notb
lret
and
adc
daa
popf
push
cmpsb
cmpsb
stc
ret
mov
test
xor
ret
sub
push
xchg
push
mov
xchg
in
rol
cmpsl
fsub
sbb
lods
pusha
leave
xor
mov
rsqrtps
cmp
test
or
loop
lock
jmp
sarl
mov
pushf
les
cld
xlat
sub
int
add
lock
add
xor
loopne
jg
dec
sbb
mov
push
add
adc
ficoml
fdivs
adc
sbb
sbb
sahf
popf
jno
es
outsb
mov
sub
pop
dec
or
mov
in
dec
cmp
jmp
pop
movsb
push
mov
aaa
pop
fmul
sbb
pop
xlat
or
jno
pop
ret
and
out
repz
rorl
mov
mov
jno
iret
add
xor
sub
push
pop
push
sbb
and
sbb
dec
outsb
mov
lret
add
bound
and
scas
iret
sbb
aad
jge
pop
xchg
adc
pop
push
js
jbe
and
sub
or
xor
jl
les
add
inc
xchg
mov
push
sub
and
xor
jmp
add
sbb
mov
push
rorb
scas
mov
ret
cwtl
mov
jns
enter
loopne
test
nop
fcoms
or
fsubrl
xchg
stc
idivl
outsl
scas
xor
push
pop
orl
icebp
xchg
adc
gs
out
loop
cmp
in
adc
jbe
fwait
jbe
loope
cmp
xorb
pushf
jp
sbb
cli
jg
mov
int3
mov
cmp
dec
cmp
pop
mov
insl
loopne
adc
jne
in
scas
xor
popl
es
push
adc
pop
fcomps
mov
out
fsubl
xor
lds
and
mov
xchg
sub
mov
inc
xor
push
lcall
push
xchg
dec
fstps
in
jnp
push
cmp
xor
pop
sub
sbb
inc
sbb
into
nop
or
add
add
add
or
xchg
jmp
adc
pop
mov
pop
push
xor
add
repz
add
addr16
ss
push
das
das
stos
mov
cmp
sub
int
sbb
ss
jge
out
mov
push
push
sub
adc
negl
mov
je
sub
mov
inc
inc
cmp
dec
std
out
imul
stos
jmp
cmc
sbb
insl
stc
cmc
sub
sub
bound
loopne
sti
push
push
ss
mov
push
dec
sbbb
pushf
fisubl
popa
idivl
push
xchg
lret
mov
pop
shll
fs
sbbb
data16
out
adc
imul
push
push
inc
adc
mov
jg
cmp
icebp
dec
mov
stos
and
mov
enter
xchg
pop
dec
lcall
mov
lret
cmpsl
mov
out
pop
arpl
aam
data16
imul
imul
daa
mov
jo
frstor
adc
inc
mov
add
jge
xorl
decb
pop
ficoml
insb
push
mov
inc
jmp
xor
push
pusha
imul
lcall
test
je
dec
sbb
push
dec
shll
push
ja
jno
sbb
fldl
ja
or
xor
stc
and
in
inc
in
push
cmp
adc
mov
mov
lcall
loop
cwtl
cli
fcoms
bound
sbb
loop
in
incb
je
lret
lods
xor
in
xchg
cs
shlb
sahf
lahf
mov
cmpsl
shll
or
mov
shlb
es
lahf
imul
clc
push
push
cmp
mov
jp
movsb
pop
fwait
pop
mov
repz
popa
pop
stos
mov
dec
and
mov
xor
mov
testl
and
mov
or
inc
adc
xchg
pop
and
push
sbb
jge
mov
in
jmp
int
stos
lahf
into
inc
cmpsl
or
mov
and
xchg
xchg
adc
ret
in
add
sbb
or
lea
inc
jns
add
test
mov
jmp
addr16
rcrb
push
jnp
jne
je
jnp
dec
bound
inc
sbb
sub
pop
mov
aaa
dec
inc
xlat
fistpll
lret
sbb
adc
xchg
das
lahf
mov
ljmp
sbb
ret
push
xchg
push
jbe
lret
out
mov
jbe,pn
cld
clc
leave
sbb
cmc
and
or
outsl
xchg
pop
arpl
imul
es
pop
es
loope
mov
mov
test
addr16
shlb
jb
and
cmp
sub
lcall
lret
sub
push
mov
nop
mov
push
inc
pop
xor
jns
push
aad
mov
cmp
lret
dec
jo
out
test
stos
ficoms
add
push
cld
fwait
out
sub
push
fists
push
mov
jne
adcl
inc
adc
lea
ret
sub
mov
inc
xchg
and
xor
insl
mov
ss
mov
mov
or
out
cli
dec
arpl
in
and
aad
push
xchg
lds
add
sbbb
push
rol
mov
sub
stc
mov
lea
mov
fwait
ds
add
cmp
adc
mov
in
lret
mov
mov
sbb
flds
es
jg,pt
mov
dec
insl
out
lock
push
adcl
jecxz
cmpsb
mov
fisttps
arpl
test
cmpsl
cmp
loop
pop
leave
outsb
addr16
in
loopne
mov
test
sub
push
rep
mov
jo
rorl
in
push
repnz
cmpsl
or
or
push
mov
ljmp
sub
jl
data16
mov
pop
js
arpl
or
das
dec
subb
ds
jo
cmpsl
ljmp
dec
pop
jo
sbb
jnp
push
imul
add
stc
add
outsb
lahf
mov
xlat
inc
call
ja
cmp
and
pop
cmp
pop
into
outsb
pusha
xor
push
or
rolb
mov
pop
in
scas
loope
loope,pt
ret
and
or
xor
mov
cmp
insl
add
add
add
loope
loope
fistpll
adcl
inc
pop
push
pop
daa
push
add
repz
add
sub
dec
popf
imul
adcl
inc
pop
cmpsb
and
adc
mov
es
sbb
xlat
and
mov
mov
ljmp
mov
dec
mov
cmp
pop
shr
cmp
inc
cltd
dec
les
push
push
out
nop
jge
xchg
repnz
hlt
and
push
mov
nop
cmc
add
adc
add
add
mov
push
mov
loopne
sbbb
sahf
into
aam
and
pop
mov
sarl
inc
dec
mov
hlt
dec
bound
dec
xor
out
popa
inc
sbbb
icebp
cmp
cmp
enter
loopne
ss
dec
xchg
pusha
push
sbb
imul
out
test
inc
and
inc
cmp
and
adc
movsb
ret
jbe
inc
dec
insl
fstpl
push
xchg
adc
nop
into
leave
add
test
aas
dec
lods
adc
xchg
jns
mov
test
or
jl
xchg
outsl
subl
sub
stos
jbe
sbb
and
mov
dec
outsl
jno
adc
stos
gs
pop
push
fsubs
scas
jo
add
lock
sbb
jl
cld
push
addb
fsubrs
ss
data16
sub
pop
xchg
es
sbb
inc
mov
mov
lods
push
insb
jg
adc
mov
pushf
std
cmp
dec
pshufw
sub
leave
cli
xlat
rcl
cmp
mov
cmpsb
dec
xchg
jmp
mov
push
pop
loop
mov
inc
or
adc
enter
jno
add
mov
hlt
enter
add
jle
clc
push
mov
xor
pushf
jecxz
popa
test
movsb
or
in
or
sub
std
push
inc
cmp
dec
mov
leave
xor
shrb
sbb
push
mov
loop
lea
loopne
hlt
sub
jbe
cmp
sub
jecxz
mov
in
jbe
pop
pop
imul
mov
xor
mov
lret
cmp
outsl
scas
in
inc
scas
xchg
rclb
pop
into
push
mov
push
rcll
pop
sbbb
stc
mov
or
out
and
push
mov
or
sub
mov
mov
xchg
and
daa
sub
bound
jmp
push
dec
daa
jae
jb
test
insb
repnz
and
ficoms
dec
push
push
fbstp
mov
addl
decb
mov
mov
add
push
adc
xlat
mov
inc
xchg
mov
push
in
cmp
cmpl
dec
loopne
loopne
fwait
and
adc
popf
ja
bound
sbbl
cld
ret
mov
les
sbb
pushf
mov
jecxz
test
add
mov
adcb
mov
in
jae
rcrw
dec
out
xlat
or
sbb
push
cmp
xchg
scas
push
mov
or
push
pop
inc
inc
pop
mov
mov
jmp
repnz
xlat
cmpl
lret
and
lock
push
mov
mov
iret
jle
jno
scas
xchg
call
inc
mov
xchg
mov
add
fwait
int3
test
insl
mov
push
sub
xchg
rolb
adc
inc
push
outsb
pop
mov
sub
jmp
sbb
jns
cmpl
or
push
rorb
jo
lcall
and
int
lea
inc
clc
and
dec
ss
fcoml
loopne
lods
cmp
movsb
loop
cmp
mov
shll
cmp
mov
stos
and
mov
push
test
dec
pushf
stc
in
jl
jle
out
cltd
dec
pusha
fsubrs
mov
sub
cld
fdivp
repnz
ret
sbb
imul
or
sub
push
ficoms
ss
dec
adc
dec
popa
xor
sbb
dec
into
push
mov
push
daa
jns
jg
inc
rcr
lea
sbb
lock
sti
jecxz
lss
mov
cmpsb
pop
jns
push
jae
jp
imul
xor
xchg
xor
loope
mov
xorb
push
dec
jecxz
add
outsb
addr16
add
add
add
test
xchg
and
cmp
adc
lret
jno
pop
add
repz
add
ror
ret
add
lret
mov
or
inc
mov
xor
sub
pop
mov
xchg
lods
or
mov
loope
fcoml
mov
jge
ret
add
test
dec
fadds
test
cltd
sbb
sub
fnstcw
dec
call
pop
arpl
pushf
adc
or
mov
imul
xchg
mov
lods
mov
lcall
lret
fsubrl
fs
lock
cwtl
push
jg
cwtl
negb
in
mov
add
pop
jl
cmp
or
xor
nop
nop
pop
add
xor
pusha
add
lea
out
push
lods
insl
lock
pop
sub
sub
pop
movsb
negl
inc
js
mov
imul
inc
aam
shll
and
orl
pop
add
xor
adc
xor
adc
jmp
fmull
sub
bnd
push
idivb
jo
jnp
mov
int
popa
out
stos
fnstcw
pop
ss
shrb
or
jl
test
xchg
mov
mov
cmp
scas
mov
inc
pop
xchg
dec
xchg
adc
sub
jmp
inc
mov
hlt
xor
push
push
jns
out
push
shll
cmp
jns
push
jb
out
lahf
fistpll
mov
loop
sub
adc
and
or
decb
mov
push
push
dec
idivb
mov
or
test
test
mov
cmpsb
push
or
mov
mov
leave
mov
adc
cmpsl
jg
mov
ja
and
inc
aam
push
fcmovnb
js
cmp
pop
inc
add
ror
add
out
test
out
dec
xorb
and
popa
push
mov
imul
addr16
cmc
mov
cmp
add
pop
mov
push
inc
dec
clc
shlb
sbb
mov
inc
add
nop
xor
pop
xchg
mov
inc
pop
loopne
cli
das
inc
mov
sub
clc
in
bound
xchg
cmpsb
std
mov
sub
leave
mov
cmc
inc
int3
adc
and
sbb
sub
pop
int
mov
xlat
sahf
pop
ficoml
add
mov
mov
insl
test
jecxz
push
jae
lea
xor
mov
addr16
pushf
mov
cmp
std
jae
testb
jle
loope
out
jge
dec
or
sub
adc
xor
iret
pop
xchg
js
lds
mov
dec
lock
nop
xchg
lods
fucomip
cmp
ret
cmc
inc
cmpsb
frstor
or
mov
je
into
loope
push
incl
jae
adc
sbb
loope
xchg
xchg
mov
xor
inc
in
adc
pop
xchg
arpl
std
ss
test
out
dec
movl
fmull
popa
pop
popa
stos
fsubl
jbe
ja
xor
shl
cltd
lcall
movsb
int3
xor
xor
xor
insl
xor
pop
push
add
es
out
popf
test
mov
test
jbe
pop
movsl
xchg
ret
inc
inc
push
loop
scas
repnz
or
pop
lds
stc
ja
mov
mov
bound
and
out
cmc
jecxz
inc
pop
xchg
push
xor
call
out
cmpsb
sub
jl
jmp
scas
cmc
fs
jcxz
mov
pop
dec
lds
loopne
sub
addb
mov
dec
rcl
mov
int3
mov
dec
xor
and
rorb
dec
mov
fsubrs
inc
dec
repnz
mov
or
jge
push
lret
stos
leave
lods
push
fsubr
fdivl
test
mov
push
add
mov
out
mov
jge
insl
add
andl
sbb
aam
fistpll
ret
insl
es
imulb
jl
mov
inc
rcll
pop
inc
in
xlat
in
sbb
jl
jle
into
imull
js
sub
mov
jp
cwtl
icebp
mov
cmc
sub
add
inc
inc
mov
or
sub
jns
mov
and
and
shlb
jmp
mov
mov
cli
ja
ret
pop
xorl
jecxz
fbld
add
add
add
cmp
loope
mov
mov
repz
add
mov
cmpb
outsl
pop
rol
mov
xchg
mov
out
popf
mov
gs
pop
data16
fidivrl
popf
or
mov
in
and
mov
push
mov
fbld
scas
aad
mov
ja
rcrb
push
push
sbb
insl
xchg
jle
js
nop
and
pop
out
mov
sbb
push
jbe
mov
aad
sub
hlt
xor
mov
aaa
test
fsubl
or
xor
xchg
ljmp
cmp
cmpsb
mov
mov
and
test
jle
stos
and
pop
movsl
dec
cmpsl
pushf
mov
aad
rcrl
inc
mov
sbb
mov
into
mov
jb
lock
mov
add
jge
pop
dec
repz
imul
xchg
xlat
xorb
sahf
loopne
ret
jge
lea
mov
mov
addb
sub
nop
and
push
leave
adc
shl
dec
bound
sub
add
jno
movsb
insb
add
cmp
or
ljmp
int3
call
jae
jne
dec
pushf
adc
std
or
inc
shl
fisubrs
call
xchg
push
out
jmp
aam
or
xor
sbb
sbb
cld
pusha
push
stc
cmpsb
sbb
inc
add
into
push
scas
je
add
and
jmp
out
mov
rorl
add
js
xchg
loop
loope
frstor
mov
xchg
and
inc
test
ret
daa
sub
inc
pop
mov
fs
jne
sbb
jmp
jae
out
jb
lret
cld
add
and
push
sub
lcall
sub
aaa
out
xor
in
push
imul
cmpsl
push
pop
jae
xor
hlt
and
xchg
rcll
jmp
aam
sarb
add
hlt
and
pusha
gs
movsl
test
jbe
adc
xlat
into
push
or
aam
mov
dec
add
std
xor
call
popa
xchg
rcrl
loopne
push
ss
and
inc
jnp
jns
flds
lcall
pop
nop
shrl
insb
out
arpl
add
bound
xchg
push
iret
arpl
rorl
jns
ret
mov
cmp
push
and
call
push
cmp
std
push
jmp
cmp
jnp
arpl
int
repnz
and
xor
ret
sarb
mov
xor
add
adc
cmp
pusha
jo
aaa
mov
mov
dec
cmpsl
sbb
push
mov
aam
outsl
in
std
adc
pop
adc
rcrl
lods
ljmp
sti
lret
xchg
sbb
adc
and
data16
push
inc
inc
ja
sub
in
xor
push
outsl
int3
jno
mov
dec
in
mov
and
leave
push
stos
jg
add
mov
scas
or
fistpll
out
xlat
fsub
add
inc
fcomip
enter
mov
jo
add
jno
push
incl
out
out
int3
fmuls
cmpsb
mov
xchg
push
jne
out
xchg
out
jg
ljmp
pop
xor
ds
sarl
add
clc
sbb
jge
ffreep
push
inc
xor
mov
fistps
jecxz
pushf
fdivrl
cmp
mov
mov
shlb
pop
jg
in
push
jge
push
lock
mov
mov
pop
ret
xchg
inc
dec
adc
or
push
pop
push
lret
xor
aas
pop
ficoml
and
dec
hlt
push
adc
dec
test
divl
jo
xchg
fs
aam
jmp
cld
add
enter
cmp
lods
lock
push
mov
add
xchg
jge
adc
mov
sub
sbb
add
fdivrs
insl
xchg
fsub
je
lock
stos
insl
xor
inc
call
bound
xchg
jmp
xchg
mov
fdivr
cld
inc
cmp
int
mov
ljmp
dec
out
and
stos
test
sub
add
lock
push
add
push
dec
movl
push
dec
dec
into
fs
mov
jge
xchg
shlb
orl
cli
aad
mov
ret
pop
dec
mov
jg
insb
and
int
push
add
add
jg
mov
jp
ret
push
inc
push
adc
add
repz
add
jg
lods
jae
and
ss
jne
leave
dec
leave
adcl
insl
popf
dec
arpl
mov
gs
loope
sbb
xchg
mov
in
push
in
sbb
mov
enter
dec
xor
aam
xor
xor
out
jo
mov
cmp
xor
dec
scas
sub
and
cwtl
fwait
addb
scas
ds
sbb
mov
and
loopne,pn
clc
jnp
dec
repnz
cli
subl
jns
ret
lods
add
cmpsb
add
or
and
mov
nop
xor
dec
ss
lods
sbb
lods
or
das
cltd
push
push
cmpsb
mov
cli
movsl
cli
adc
js
in
jno
dec
movsl
sbb
icebp
mov
lret
lods
and
cmpb
fucom
mov
lock
stc
or
push
add
insb
cmc
xchg
mov
ror
lods
stos
mov
xchg
inc
pop
adc
in
push
rolb
mov
push
repz
cmp
cmp
jnp
es
jl
mov
test
inc
jae
fcoms
mov
lcall
jbe
lock
jge
stos
imul
xchg
add
lret
push
mov
addr16
nopl
lods
xchg
sbb
sarl
mov
pushf
sub
mov
pop
rolb
loope
push
jnp
addb
fiaddl
cli
cli
dec
fscale
in
xchg
cmpsb
imul
bound
lcall
push
push
test
out
sub
jecxz
fucom
call
xor
mov
adc
jne
out
add
int
or
gs
mov
aas
and
popa
mov
mov
jae
popf
lock
mov
dec
push
fiaddl
push
addr16
dec
sub
stc
sti
and
sbb
out
sbb
repz
cmp
outsl
rcr
imul
mov
outsb
cmp
ss
push
and
js
cmp
push
adc
mov
outsb
outsb
addl
sbb
adc
aas
out
in
jns
sbb
sbb
inc
pop
test
stos
stos
push
push
out
add
cmpsl
xor
mov
xorl
fidivl
ret
rorb
inc
and
loop
shrl
ror
aam
dec
push
sub
xlat
scas
pusha
flds
sbb
or
in
pusha
jno
xchg
xchg
sbb
hlt
mov
test
cmp
jmp
jl
push
add
xor
outsl
cmpsb
lcall
into
pop
and
pop
fwait
pop
cld
or
jecxz
sti
inc
aas
repnz
push
js
push
dec
mov
xor
cmp
mov
xchg
gs
cmp
fdivrp
pop
in
scas
lcall
cmpl
fisubrl
fldt
sub
xlat
shl
xor
fmul
xor
loope
jmp
es
aad
test
jecxz
mov
adc
pop
gs
js
xchg
mov
mov
jo
in
imul
push
in
cli
out
aam
pushf
adcl
push
pop
fisubrs
call
pop
xchg
mov
pop
cmp
movsb
scas
in
leave
shrb
mov
push
push
xchg
push
mov
test
iret
icebp
or
cld
fwait
lret
mov
pushf
into
movsl
je
inc
mov
mov
mov
xor
dec
into
or
or
cmp
test
dec
xor
nop
pop
pop
inc
es
push
pop
or
inc
adc
xor
inc
loop
push
push
nop
outsb
sbb
cli
inc
add
scas
inc
xor
inc
mov
xchg
jg
adc
pop
aad
or
mov
hlt
and
fsts
pop
or
lods
cmp
add
mov
test
and
sub
mov
out
pusha
sarl
xlat
movsl
jae
mov
dec
jl
cwtl
xor
ret
mov
xchg
filds
push
popf
push
loope
sub
xor
dec
sub
aad
sbb
xor
add
loopne
fcmovnu
xchg
out
mov
mov
ds
ja
and
or
sarl
cmp
dec
mov
lods
jmp
push
push
add
test
push
lahf
stos
fs
daa
mov
push
fmull
rcll
cltd
ja
aad
stos
sti
clc
mul
mov
lock
in
push
mov
sbb
fcoms
dec
push
cmp
xorl
pop
lret
add
add
add
add
cmp
cmp
push
pop
mov
lahf
testl
add
adc
cwtl
test
and
fsubrl
mov
and
test
fwait
cmpsl
into
sub
adc
adc
push
in
in
out
popf
adc
sbb
insl
pop
int3
mov
mov
imul
pop
dec
and
movsb
adc
scas
jae
mov
xchg
in
add
test
test
inc
cld
bound
push
test
mov
lods
push
mov
xchg
pushf
xor
out
idivl
mov
mov
bound
jae
mov
jae
inc
cmpsb
lock
mov
push
je
repz
jmp
imul
add
mov
popf
mov
ffree
icebp
fwait
push
xchg
dec
cmp
inc
xor
xor
pop
repnz
or
loope
sahf
iret
icebp
in
adc
sub
add
jb
and
aad
je
sub
sbb
daa
mov
lods
adc
sub
push
or
rcll
insb
nop
cmp
ret
xor
jge
shr
pop
loop
jnp
xchg
int
sub
or
mov
stos
push
lret
rcrl
cmp
jbe
mov
cs
and
iret
fwait
jp
and
mov
idivl
mov
xchg
out
cmp
push
jmp
jno
xchg
int3
and
xchg
push
lds
adc
add
scas
jecxz
fildl
or
mov
xor
mov
or
into
fimuls
sub
or
jne
mov
fsts
div
aad
sub
in
lds
fcomps
inc
je
xor
roll
mov
pop
enter
pushf
test
xor
jno
ja
cmp
push
push
xor
ss
mov
mov
stos
imul
movsb
out
rorb
cwtl
jb
in
lock
shl
mov
sahf
pop
outsb
jno
sbb
cmp
ja
pop
jl
mov
in
push
jo
sbb
mov
jo
shlb
repnz
pop
pushf
repnz
cld
fs
adc
sarl
pop
pop
mov
push
iret
mov
lret
cmpsb
or
xadd
mov
sbb
pop
aad
dec
out
outsl
xchg
add
add
dec
push
cltd
idiv
sbb
testl
dec
lea
sbb
inc
dec
rcrl
mov
pushl
fmulp
outsl
cmpsb
xchg
push
clc
addl
push
clc
sub
mov
xchg
push
sbb
mov
sbb
aad
inc
ljmp
cmp
ret
cld
adc
adc
mov
aas
lcall
mov
mov
and
fcmove
aaa
fwait
pop
sar
push
aam
je
sub
or
mov
iret
stos
push
sti
js
loop
sahf
jae
mov
into
jl
dec
mov
xchg
stos
loop
ret
mov
fisubrs
cmp
push
mov
iret
outsl
mov
cmp
in
cmc
mov
ljmp
jmp
fwait
sbb
sbb
push
mov
nop
dec
mov
loope
push
or
inc
cmp
or
push
cmpsb
repz
rcl
sbbl
outsl
adc
cmc
xchg
gs
cmp
or
cmc
push
leave
or
cmp
cltd
pop
leave
stc
dec
out
dec
scas
dec
in
add
jnp
inc
cmp
lock
sbb
in
iret
hlt
fiadds
mov
insl
adc
repnz
shll
jle
pop
rorl
icebp
push
and
push
mov
inc
bound
xchg
add
jg
sti
ljmp
sahf
cmp
cli
insb
das
cmp
fistl
dec
mov
stc
aas
sbb
dec
cmp
mov
cmp
shll
mov
mov
outsl
push
daa
add
rcll
mov
data16
in
push
int
add
sub
xchg
mov
lods
je
mov
inc
les
ljmp
aam
xchg
pop
ret
xor
mov
dec
decb
sub
sbb
ja
cld
dec
push
popf
mov
mov
sbb
pop
adc
inc
lret
ja
adcb
cmp
cli
cmp
shrl
sub
mov
jo
push
mov
add
push
push
iret
aaa
popa
dec
cli
dec
mov
js
push
dec
cmp
rorl
jae
aaa
addb
lock
mov
jnp
mov
enter
bound
add
add
add
mov
jg
test
out
cmp
les
out
add
repz
add
jge
scas
mov
btc
dec
jge
hlt
push
mov
pop
loopne
xchg
cwtl
sbb
sub
outsl
or
js
or
mov
or
cmp
ja
pop
push
jle
adc
inc
test
mov
jb
and
xchg
sarb
push
sbb
pop
push
mov
std
cmp
jecxz
or
mov
dec
daa
fdivrs
movsb
cmp
push
lods
pop
or
push
push
mov
sub
mov
jge
je
loop
cmp
push
iret
js
push
or
push
inc
mov
pop
test
jg
sbb
loop
loop
je
out
shrb
mov
std
push
arpl
aam
push
sub
and
fs
pop
xor
jp
lret
xor
dec
mov
xchg
or
pop
and
test
cli
mov
in
jb
mov
and
sub
mov
xor
and
jmp
sbb
in
out
and
dec
lret
scas
jae
mov
adc
loop
and
cltd
or
pop
xchg
aad
sub
dec
sub
adc
call
add
push
shll
inc
and
cmp
mov
inc
inc
ljmp
imul
and
pop
adc
subb
and
jmp
sub
adc
sub
inc
xchg
jne
sbb
ja
out
aaa
fistl
push
mov
dec
movzbl
icebp
test
int
les
dec
pop
ljmp
in
test
mov
dec
xor
lcall
movsb
xlat
xor
xchg
scas
sbb
mov
jg
cmpsb
test
adc
xchg
sti
ss
shrb
adc
and
inc
and
pop
sub
out
pusha
stos
cli
fwait
pop
push
pop
xlat
xchg
inc
mov
xor
das
push
leave
pandn
lea
cwtl
ficoml
jecxz
ret
stos
test
mov
adc
add
cmpsb
fcmovb
jae
sahf
fwait
inc
xor
scas
mov
adc
cmpl
into
xchg
xlat
inc
pop
mov
mov
jne
fabs
mov
outsl
mov
xor
lcall
rclb
push
mov
inc
mov
xor
xchg
enter
jle
adc
in
shlb
or
mov
xchg
or
loop
dec
data16
scas
test
xor
pop
pop
mov
mov
lods
mov
sti
jmp
cli
and
mov
adc
jbe
aad
adc
xlat
fsub
dec
push
test
cltd
js
cs
xchg
imul
iret
subl
sbbb
inc
dec
addr16
imul
ret
mov
xchg
fs
or
adc
jae
and
lea
mov
sub
fisubrl
aam
les
in
iret
shl
jo
mov
mov
incl
and
aad
mov
addr16
ss
sahf
stos
repz
xlat
mov
and
fiadds
ret
and
adc
xor
xlat
push
push
push
xchg
cmc
pop
cltd
out
shlb
jno
repz
std
shlb
ret
xchg
sub
fbld
repnz
xchg
push
fdivl
pop
cmp
mov
xor
imul
jne
loop
dec
cmpsl
add
in
dec
mov
pop
mov
xor
xchg
loop
rcll
add
stos
jp
mov
push
jmp
mov
inc
inc
pop
cmp
and
outsb
or
jns
add
sar
out
pop
lods
mov
and
mov
es
rorb
sbb
push
push
adc
lods
adc
dec
pop
data16
sub
mov
dec
adc
push
or
nop
cli
xor
jl
mov
pusha
daa
orb
stos
mov
out
gs
mov
and
cmp
sub
lods
in
cmpsl
fdivr
or
pop
call
or
sub
push
or
mov
sarl
push
mov
adc
in
jmp
add
stc
or
fcomps
xchg
cmp
xchg
xlat
and
push
sbb
pop
sbb
pop
or
and
insl
notb
sub
jge
leave
mov
les
lds
dec
cmpsl
sar
sbb
and
xchg
or
add
add
dec
mulb
repnz
out
jmp
jb
add
add
add
ss
xlat
add
or
or
cltd
fisttps
icebp
adc
loop
stc
and
je
sub
pop
stos
into
and
repnz
mov
xlat
mov
mov
jecxz
cltd
lods
push
clc
mov
fwait
popf
ljmp
insl
sbb
cmp
in
xchg
std
idiv
or
bound
rcr
sbb
ja
inc
ja
xlat
fs
jb
xchg
sub
aas
inc
and
mov
in
jecxz
aaa
xor
push
cmp
jbe
test
jge
or
repnz
faddl
dec
lea
xchg
mov
dec
xchg
fnsave
cmp
imul
cmovnp
jp
imul
sub
outsb
popa
jg
push
cld
jg
jecxz
stos
jg
inc
jo
dec
out
insl
mov
in
mov
les
jae
mov
add
test
std
cli
pusha
je
pop
push
fisubrs
clc
push
jne
sub
fstl
pop
sbb
fiadds
dec
mov
dec
cmpsl
jae
fdiv
hlt
dec
int3
sbb
mov
outsl
stos
repz
call
push
mov
sub
test
js
sbb
das
in
repz
fsubrs
icebp
sub
andb
fwait
jo
fdivr
dec
into
sub
push
sbb
jg
cmp
cmp
jo
cmp
movsl
xchg
sbb
cmc
mov
arpl
pusha
pop
pop
js
sbb
enter
out
das
loopne
test
cld
dec
pop
out
imul
xor
enter
cmp
faddp
aaa
add
hlt
imul
adc
ljmp
add
xlat
inc
fsubs
dec
outsb
dec
xchg
inc
rol
ss
gs
iret
in
dec
lcall
mov
or
aam
negl
test
push
cltd
loopne
in
scas
in
jno
mov
push
cmp
mov
and
pop
add
movsb
in
rclb
xchg
inc
mov
mov
xor
or
and
jb
mov
push
push
mov
jl
out
inc
sub
je
mov
aas
pop
jp
leave
xchg
jge
xchg
jecxz
fadd
jecxz
lock
rcl
mov
es
cld
dec
mov
incl
xor
popa
in
inc
xchg
and
jae
fidivs
or
lods
mov
in
aas
cmp
data16
rorb
leave
je
ficoms
lahf
mov
adc
testb
imul
xor
push
mov
aad
add
int
stos
fnstenv
fstpl
jns
mov
pop
test
std
loop
aaa
mov
add
pop
pop
xchg
pop
mov
lods
mov
xor
pusha
pop
aas
aaa
or
pop
popa
lock
jbe
sbb
test
mov
cmp
adc
test
xor
cmpsb
movsl
inc
hlt
imul
jbe
ljmp
inc
inc
les
and
rcr
out
ret
jbe
and
enter
int3
pop
int
ror
ret
pop
xchg
int
inc
cmp
lds
gs
fcmovnb
cld
sarl
mov
idivb
test
inc
jge
data16
xchg
mov
inc
push
leave
mov
sbb
or
xor
in
sti
out
jo
orb
lahf
jecxz
imul
imul
dec
adc
sub
test
xchg
xorl
sub
xlat
es
cmp
in
xlat
adc
xlat
lea
loop
xchg
mov
das
int3
test
xchg
sbb
std
inc
jl
lcall
mov
imul
pop
jp
mov
aas
rorb
or
popl
sahf
sbb
fldcw
pusha
sub
xor
cmp
pop
orl
inc
ss
mov
ret
mov
je
pop
xchg
add
lahf
xchg
mov
jmp
imul
jl
mov
mov
pop
fs
add
int3
insb
xor
fnstenv
scas
dec
lods
cmp
fiaddl
pop
mov
rorb
into
add
imul
sub
push
lcall
gs
out
adc
mov
inc
fdivrs
sbb
in
lret
sar
aam
pop
fists
add
add
mov
mov
mov
add
xchg
int3
ja
add
add
add
and
inc
movsl
inc
cmp
repnz
xorl
add
cmpsl
add
lea
lds
popa
xchg
push
les
jl
jg
bound
jbe
jl
pop
repz
popf
mov
and
dec
and
xchg
adc
cmp
stos
stc
fisttps
popl
es
fidivrl
jge
push
pop
imul
ja
xor
lods
fiaddl
arpl
add
inc
mov
popa
stos
addr16
hlt
sub
cmp
cld
inc
inc
test
dec
roll
pop
stos
icebp
dec
cmc
ds
mov
push
cmovns
enter
sub
ret
cmc
data16
mov
cmp
cwtl
ret
mov
mov
sti
jle
loopne
ret
test
inc
int3
xchg
lea
dec
xchg
fdivp
fstps
hlt
or
rol
cmp
andl
adc
out
js
movsl
mov
cmp
push
out
adc
lock
daa
push
xchg
in
adc
xor
and
pop
push
hlt
mov
sbb
std
xor
hlt
and
sub
cmp
adcb
add
bound
pop
outsl
xchg
test
fiadds
mov
test
addr16
mov
push
sbb
lods
rol
popa
or
out
adc
adc
inc
cmp
cwtl
jbe
xchg
int3
scas
sarl
xchg
cltd
mov
ret
enter
cmp
jns
addr16
dec
xchg
bound
sub
hlt
iret
insb
mov
into
pop
dec
dec
mov
lret
add
mov
idivl
in
cvttps2pi
xchg
lds
in
outsl
mov
sbb
out
orb
mov
movsb
movsb
ja
xlat
sub
mov
push
aad
jl
push
stc
hlt
je,pn
imul
ja
or
xor
addr16
dec
lds
mov
mov
jno
stos
outsb
int
jno
lock
test
inc
dec
pop
or
idivb
mov
nopl
add
push
dec
lock
mov
mov
inc
xor
das
popf
mov
jnp
dec
push
shl
loope
cmp
push
sbb
sub
aaa
or
jmp
out
cmp
out
pusha
pushf
lahf
dec
sbb
inc
hlt
jne
sarl
jmp
jle
fsubs
call
not
scas
pop
imul
int
pop
std
cmp
aad
outsl
mov
mov
jae
test
fdivs
test
mov
test
xchg
icebp
hlt
aam
popa
sti
xor
jge
iret
lret
inc
int
mov
xor
das
jge
rorl
pop
adc
aam
or
mov
cs
cld
pop
and
frstor
sub
int3
mov
and
pop
cli
mov
xor
andb
push
vmread
daa
lret
leave
call
mov
stos
loop
push
loopne
cs
mov
cmp
jo
add
or
sbbl
cli
mov
in
pop
out
xlat
std
adc
xchg
pop
mov
inc
fisttpll
jno
pushf
test
inc
pushf
fildl
mov
pop
fsubs
mov
xchg
pop
fldl
mov
adc
popa
pop
aad
idivb
mov
jmp
mov
gs
mov
inc
jb
push
movsl
inc
bound
jns
pop
je
outsl
mov
pop
lar
cmp
fstpt
je
addr16
push
fwait
xchg
jns
loope
ljmp
add
mov
addb
cwtl
test
sbb
insb
inc
les
gs
popa
cwtl
in
pop
imul
xchg
add
jbe
cmp
jb
loope
pop
sar
add
roll
popf
sub
scas
lea
out
fadd
push
fcoms
mov
xor
adc
sub
adc
push
xchg
sti
cmc
pop
data16
xchg
daa
fstpl
xor
insl
and
insl
push
gs
adc
shlb
adc
xchg
ret
sbb
shlb
movsb
popa
fsubs
in
pop
jns
aaa
ss
adc
mov
sub
das
lods
imul
push
sbb
mov
pusha
or
pop
arpl
loope
call
je
hlt
cmp
das
mov
insb
arpl
rcrb
dec
xchg
adc
outsb
into
and
jle
repz
into
icebp
popa
xchg
inc
aaa
inc
fldt
dec
outsb
enter
ret
cld
xor
adc
adc
mov
in
stos
movsl
adc
das
imul
add
add
xchg
test
push
mov
and
mov
mov
add
add
cmp
sub
insb
test
mov
mov
aad
mov
sar
dec
rcr
cmpsb
pop
outsl
sub
inc
das
pop
std
adc
fwait
mov
sahf
scas
loope
lcall
xor
mov
aaa
jbe
pushf
test
dec
inc
test
mov
cmp
fisubrl
push
push
xchg
testb
outsb
imul
les
inc
outsl
cmp
inc
mov
lret
gs
ja
mov
out
adc
inc
push
arpl
int
pusha
sbb
lods
inc
ja
fs
mov
mov
xchg
xchg
pop
sahf
loopne
ljmp
adc
jb
arpl
aam
add
cmp
xor
lods
jecxz
pop
imul
pop
test
pop
xchg
jbe
jle
xchg
push
testb
sub
mov
inc
cmp
mov
push
imul
aaa
pop
inc
scas
pop
leave
pop
stos
neg
mov
inc
mov
jle
xchg
mov
dec
jno
int
mov
scas
sbb
adc
mov
push
roll
stc
sub
call
lock
insl
mov
push
xor
pop
mov
ret
mov
or
push
add
push
data16
cmp
sub
sarb
loopne
cmc
popf
jle
bound
ret
ds
jmp
aad
insb
fwait
and
pop
mov
mov
gs
pop
mov
mov
mov
je
mov
inc
clc
inc
loopne
je
lods
xchg
adc
pusha
out
cmp
lods
mov
aad
inc
jg
stc
in
xorl
cmp
cmp
xor
outsl
fdivl
ss
jae
xor
mov
inc
outsl
arpl
scas
fcomip
xchg
stos
or
add
ret
push
mov
sub
and
lahf
sbbb
lret
int
shlb
push
iret
dec
cmp
mov
mov
fs
shll
aaa
movsb
movsl
roll
std
movsb
stos
ljmp
idivb
cmp
xchg
lock
jno
mov
xor
movsl
xchg
imul
jl
pop
int
insl
xlat
pop
cmpb
cld
mov
sbb
inc
je
sbb
movsl
mov
pop
push
aas
lret
push
std
lret
popf
jg
cld
adc
push
fcoms
int
addr16
jmp
push
ja
mov
jns
and
fs
push
fldl
enter
jmp
imul
and
outsb
xchg
push
das
insb
test
or
lea
scas
and
sarb
mov
cmp
push
mov
pop
xlat
std
pop
mov
push
je
and
sub
inc
or
test
push
pop
or
lret
sub
cld
mov
inc
lahf
insl
dec
mov
cmpsl
dec
sbb
arpl
mov
xchg
adc
and
push
dec
rclb
decl
aad
mov
in
in
jp
mov
mov
loopne
enter
ja
mov
imul
fisubrs
sub
fyl2xp1
ret
inc
ljmp
lcall
cli
sub
mov
xchg
cmp
out
sbb
pop
dec
mov
mov
je
pop
add
sub
pop
jmp
mov
push
jg
push
clc
filds
or
ds
or
adc
inc
xor
mov
mov
lcall
mov
data16
in
mov
sar
ljmp
cmp
out
or
cmp
daa
repnz
ds
pushw
ss
push
mov
cltd
jmp
daa
xchg
pushf
dec
mov
adc
inc
inc
testl
clc
push
loop
add
sub
jp
out
jno
push
in
into
sbb
scas
ljmp
pop
xchg
ljmp
loop
jns
lahf
shll
adc
imull
mov
mov
std
movsb
aas
jo
mov
pop
inc
jne
lretw
movsl
push
jae
dec
es
push
outsl
repnz
xchg
out
xor
fadds
mov
mov
mov
adc
js
fstl
dec
adcb
dec
inc
notb
mov
rcrl
ret
bndldx
dec
imul
ret
sbb
test
loopne
es
cli
fucom
mov
xchg
xchg
in
bound
push
outsl
pusha
pop
daa
mov
inc
adc
add
and
fldl
inc
sti
aas
jb
add
mov
addl
add
test
jbe
stc
out
xchg
push
or
mov
inc
ficoms
mov
xchg
xor
mov
dec
push
cmp
pop
popf
xor
loop
test
add
or
lahf
jbe
dec
sbb
ljmp
cltd
jg
mov
addr16
sbb
popa
incb
pop
add
push
lcall
mov
test
add
jo
ljmp
push
adc
mov
lret
aaa
call
sarl
xor
mov
or
enter
negl
pop
lods
fisttps
mov
xor
int3
cmp
cld
xchg
dec
fmul
or
repnz
cmp
jae
ret
neg
dec
pop
fdivl
cmc
scas
cmp
sub
sbb
mov
outsl
pop
stc
popf
xchg
xchg
fcmovnu
lock
add
scas
and
sti
sahf
fsubrl
cmp
lods
jl
aaa
loope
mov
ja
aam
cld
loopew
dec
push
pushf
push
aaa
loop
cmp
popf
xor
sub
xchg
je
mov
mov
and
push
cmp
movsl
jne
pop
jle
pop
dec
cmpsl
push
push
scas
mov
call
rcrb
jmp
sbb
push
and
sbb
xlat
nop
lahf
xor
lcall
jo
push
inc
jnp
inc
loope,pt
and
int
mov
push
ljmp
popf
sub
add
mov
pop
inc
or
xchg
jle
jbe
into
mov
mov
jb
cmp
cmp
mov
xchg
cmpl
pop
imul
aas
fs
pop
cli
bound
sbb
inc
xor
les
inc
pop
out
dec
adc
int3
imul
movsl
insl
mov
push
push
out
or
push
sub
sbb
test
insl
mov
in
push
or
mov
jae
dec
in
cmovg
daa
jle
or
pop
push
inc
popw
sbb
xorl
push
or
and
and
sub
nop
popl
mov
or
sub
jb
mov
inc
jp
and
jb
jp
fistps
cld
fs
in
bound
aaa
cmp
mov
add
cmp
push
push
dec
das
push
mov
mov
cmp
sti
std
test
popa
xchg
mov
inc
ljmp
pop
inc
test
or
stos
add
movsb
add
popa
test
push
aad
test
cmp
bound
add
lods
adc
mulb
sub
jbe
lcall
add
sub
dec
addr16
sbb
pop
addr16
xchg
add
fnstsw
xchg
mov
push
mov
cli
test
out
out
scas
sahf
cmpsb
inc
test
cld
pop
mov
or
mov
stos
pop
clc
into
adc
fwait
inc
loope
pushf
das
inc
add
mov
sbb
or
fisubrl
push
lock
pop
movsb
call
pop
sub
test
jl
jge
jmp
and
ja
aas
lods
cwtl
cmp
xchg
push
ja
add
push
sbb
jecxz
add
mov
cmp
cmp
test
jo
cltd
ret
into
xchg
lods
cmp
fdivr
mov
dec
imul
xlat
test
loope
cwtl
leave
or
push
mov
aad
sub
mov
lods
or
adc
mov
push
xchg
push
mov
push
pop
btr
sbb
push
add
xor
pop
or
in
enter
or
leave
push
ret
fisttps
jno
fst
adc
sarl
sub
movb
and
hlt
mov
inc
int3
std
xchg
cmpl
std
lds
pusha
je
xchg
dec
int3
test
fnsave
clc
pusha
and
ret
je
pop
cld
dec
loopne
mov
push
cmp
mov
mov
ja
jae
jbe
fnsave
lock
or
xor
sub
fiadds
addr16
push
ss
mov
add
cli
mov
dec
es
push
adc
xor
test
mov
in
adc
cmp
sahf
test
test
or
jnp
arpl
cld
xlat
clc
fs
clc
sbb
mov
xor
xchg
xchg
push
add
fwait
shll
out
push
int3
sbbl
addr16
data16
add
add
jge
mov
or
xor
xchg
add
add
add
inc
mov
dec
push
out
out
mov
lea
mov
mov
outsl
adc
stos
inc
push
xchg
add
cli
sahf
and
sbb
or
mov
insb
sar
sub
test
test
push
stc
dec
sbb
arpl
cld
pop
popf
dec
inc
in
pop
push
adcb
test
aam
dec
xchg
in
pop
jae
ss
add
or
aas
es
es
fildll
sub
pop
xor
sbb
dec
outsl
in
lahf
cmp
cmp
iret
shl
pop
or
mov
in
sub
aas
mov
mov
xchg
mov
add
push
jbe
stos
mov
lret
xor
add
in
jns
mov
cmp
enter
cli
mov
outsl
or
jl
or
dec
cs
push
inc
xchg
shr
xchg
ja
imul
out
loope
ss
es
aad
loopne
clc
pop
push
mov
subl
scas
xchg
and
test
imulb
or
mov
add
int
push
or
jl
je
lods
js
sahf
roll
jnp
push
mov
sbb
inc
cmp
pop
pop
inc
add
and
flds
shll
ret
test
add
and
leave
outsb
aaa
loopne
sbb
daa
cmp
icebp
pop
sbb
jge
testb
nopl
dec
jl
icebp
out
pop
pop
adc
das
adc
mov
jle
pop
mov
addr16
test
dec
add
out
fistpl
push
and
cmp
std
and
in
jno
dec
fs
int
xorb
aaa
imul
shl
jge
mov
out
mov
inc
lea
or
loope
add
gs
enter
in
push
jno
cli
fidivs
rclb
outsb
aad
aaa
pusha
jb
fs
out
mov
or
mov
sub
xchg
sbb
sbb
xor
enter
mov
sarl
shlb
jne
pop
and
in
test
daa
xchg
gs
mov
cmp
pop
or
jmp
xchg
ficoms
sarb
push
add
push
enter
sub
imul
test
shll
es
iret
iret
icebp
fcomps
clc
ret
mov
jns
stc
sbb
ret
pop
xchg
sbb
dec
test
addr16
addps
xchg
push
les
imul
mov
loope
and
aaa
dec
sub
pop
mov
push
fcompl
into
jbe
xor
in
xchg
dec
es
or
adc
inc
enter
sub
ret
fnsave
lret
dec
repnz
or
xor
das
inc
sub
jbe
test
imul
mov
jg
pop
cmc
jno
lods
shlb
mov
sub
rclb
xor
or
cli
cmp
daa
movl
iret
cmpsl
fs
push
cli
inc
inc
mov
fiadds
mov
xor
inc
fdivr
repnz
js
push
out
mov
mov
mov
out
and
xor
icebp
lock
and
gs
and
das
xor
mov
arpl
stos
lcall
pop
mov
loopne
cmp
test
jb
jns
sub
and
pop
mov
jmp
hlt
inc
shrl
add
add
inc
inc
stos
mov
std
scas
stos
ret
test
fisttpll
jne
pushf
lock
and
push
pop
or
sub
and
mov
in
cmp
cli
sbb
mov
mov
jnp
cmp
jns
jl
pushf
cld
or
xor
jecxz
int3
not
xchg
add
mov
pop
fsubp
ret
fs
lahf
xchg
push
xor
mov
stos
and
and
inc
inc
insb
insb
or
mov
or
in
fidivl
mov
jge
repz
fs
push
fsts
div
lahf
pop
mov
orl
lret
inc
ds
ret
push
xchg
lods
out
andl
cltd
mov
dec
lret
xor
outsl
dec
lods
enter
scas
frstor
jecxz
fnstsw
jbe
js
add
jns
sbb
rolb
cmpsl
cmp
sub
sub
sub
add
add
add
mov
cmp
lcall
repz
add
adc
loope
movsl
mov
push
sahf
int3
sbb
pop
sbbb
lcall
les
sarl
shlb
popf
in
push
js
jp
cmp
and
jno
popa
inc
jmp
xchg
cmc
dec
xor
adc
adc
mov
fcomps
daa
cmp
cwtl
jp
mov
mov
lods
push
push
cmpsl
add
dec
aas
fwait
sub
xor
xchg
stc
sub
cmpsb
outsl
inc
push
jle
std
mov
sti
ret
xor
mov
push
mov
sbb
pop
push
or
repz
out
orl
pop
inc
push
ss
sub
or
dec
lcall
sub
xchg
inc
movsl
pop
iret
adc
cmp
pushf
bound
mov
xchg
shll
popa
pop
and
dec
jnp
shrb
test
insl
jae
push
outsl
stos
mov
pop
dec
adc
cmpsb
test
jae
pop
addl
ja
mov
dec
cld
hlt
fwait
or
daa
loope
sub
lds
call
jae
mov
mov
push
test
jmp
movsl
in
xor
out
and
insb
leave
sub
pop
dec
mov
jecxz
jl
jle
shlb
and
cmpsb
scas
mov
mov
and
scas
or
lcall
loop
ss
movsb
es
add
fisttpll
ss
dec
hlt
lds
cltd
test
arpl
fsubrs
push
sbb
cmp
aad
in
xchg
ss
mov
and
pushf
inc
xor
insb
into
out
fdivl
imul
xchg
and
dec
jno
xchg
pop
and
lock
push
inc
add
ficompl
lahf
sub
sbb
mov
and
jbe
in
nop
or
dec
adc
and
dec
cmp
ja
add
xchg
gs
ljmp
filds
xor
rcrb
sbb
movsl
jl
push
outsb
or
popa
xor
and
scas
ja
call
fsubp
mov
icebp
mov
aad
mov
stos
xor
sbb
out
imul
xor
mov
add
rolb
mov
adc
pop
subl
cmp
in
nop
adc
loope
lcall
xchg
sub
nop
xor
xor
mov
push
inc
int3
cli
out
push
daa
pop
push
fsubrs
in
iret
sub
lods
pushf
or
adc
sarb
jle
cmpsb
insl
push
aad
fs
leave
jae
pop
adc
lds
test
cmp
mov
push
push
and
mov
mov
pusha
gs
sub
pop
test
das
int3
push
adc
loope
push
jg
fisubrl
xor
shlb
int3
shrb
xor
movsl
nop
sbb
jle
fbstp
push
std
repz
cmp
xorb
cltd
addr16
adc
mov
mov
mov
sahf
gs
das
xor
scas
mov
cmpsl
test
sub
xor
pop
sbb
cmp
cmp
sub
loop
jge
stos
jp
imul
xor
cmc
xlat
jno
push
and
imul
dec
pop
enter
xlat
popf
call
ret
adc
mov
cmp
push
add
neg
jne
ret
pop
shrb
and
repnz
pop
stos
in
xor
repz
fiaddl
cmp
cmp
pushf
loopne
xchg
aam
icebp
pop
lahf
sbb
pop
out
and
out
inc
mov
push
leave
fimuls
stc
mov
jecxz
daa
cmp
adc
ljmp
xchg
adc
notl
push
hlt
and
scas
daa
scas
stos
mov
lds
subb
daa
or
cmp
lods
sbb
sarb
mov
movsb
out
ss
cmpl
shlb
xchg
jbe
daa
into
sub
add
inc
mov
adc
orb
and
sub
test
push
pop
push
test
enter
gs
and
fs
in
es
or
cld
dec
push
or
movsl
mov
loop
push
jne
cli
pushf
mov
lret
jl
test
sub
clc
pop
subb
xlat
test
cwtl
es
and
movsl
adc
ffreep
sbb
add
fstpt
testb
jge
add
add
sti
and
es
sti
std
sbb
adc
decb
add
add
loopne
gs
subb
cmc
add
sarl
inc
ror
hlt
sub
and
cmpsb
pop
cli
ret
test
pop
sti
mov
fcmovne
ss
es
in
adc
pusha
ret
mov
sbb
leave
mov
xor
pushf
jae
pushf
mov
jno
push
outsb
outsl
imul
inc
inc
push
xchg
nop
mov
fnstsw
push
ret
or
imul
cli
jb
stos
mov
cld
pop
dec
pop
sub
pusha
jo
cmp
mov
and
insb
movsl
aad
mov
sbbb
imul
dec
std
pop
test
movsb
xchg
cltd
and
push
fcoml
je
rorb
es
scas
cli
outsb
add
test
jne
cmpb
adcb
jb
stos
mov
cmp
mov
and
adcb
sbb
jo
push
mull
stos
mov
jmp
std
sub
outsl
addr16
aam
sbbb
sahf
and
inc
or
test
adc
lods
cld
out
in
mov
and
ljmp
les
mov
sti
inc
sti
ret
divb
or
loopne
dec
sti
fldcw
pop
scas
inc
xchg
iret
cmp
cmc
xor
or
out
lret
and
mov
iret
dec
or
pop
and
stos
pop
mov
call
cmc
cmp
xchg
stos
cwtl
xchg
scas
dec
lret
jae
inc
jmp
nop
pop
add
dec
ss
mov
or
xchg
mov
sahf
in
subb
jge
pop
insb
fisttps
pop
cli
repnz
and
mov
sub
imul
jmp
fsubs
loop
pop
add
add
push
imul
ret
fstpt
mov
cmp
mov
cld
daa
ret
sub
xor
pop
cmp
loope
jnp
divl
test
pushf
jmp
jl
outsb
adc
jbe
jg
lahf
sub
and
mov
addr16
lods
sbb
push
and
mov
es
pop
cmp
sarl
std
dec
jmp
mov
fwait
pop
out
push
pop
xchg
mov
ss
insl
xchg
out
push
mov
pop
rcll
aaa
pop
fs
pop
jo
clc
or
cld
push
js
das
pop
fisubrl
mov
jns
mov
into
fwait
xor
sub
push
stc
pop
pop
stos
sub
stc
js
repnz
xchg
in
or
out
push
aaa
sarl
mov
or
mov
aas
lock
outsb
jb
pop
mov
pop
cmp
xchg
in
push
sbb
orl
scas
stos
rorb
and
insl
add
mov
and
mov
push
mov
shr
add
out
pop
fcoml
sbb
adc
std
jne
imul
jge
stc
or
imul
jae
xor
out
dec
das
add
test
mov
outsb
xchg
test
loop
cltd
and
or
orb
mov
push
sahf
adc
or
rcll
call
mov
xchg
jmp
outsl
scas
out
xchg
dec
icebp
mov
dec
xchg
in
xchg
fistpll
inc
dec
jns
inc
mov
in
inc
dec
lret
mov
adc
add
xor
lret
scas
ret
mov
lock
pop
in
in
adc
mov
int3
inc
test
sahf
mov
ljmp
adc
lds
sub
pop
xor
pushl
popf
or
xlat
sub
mov
add
pusha
lret
xor
icebp
sahf
jne
int
or
xchg
pop
ss
adc
int3
js
dec
loop
xor
stc
xorb
mov
in
push
pop
and
out
or
bound
adc
out
inc
sbb
movsb
pop
mov
add
pop
cmp
pop
add
mov
sub
ljmp
xor
loopne
and
lods
xchg
push
cmp
insb
pop
add
xchg
dec
ret
test
mov
lock
in
ds
mul
fisubl
das
pushf
out
shr
or
inc
pop
out
mov
mull
jp
sub
popf
pop
mov
mov
sbb
jmp
frstor
ret
pop
mov
xor
dec
lea
rcr
sub
mov
in
add
add
sbb
jg
lcall
cmp
add
repz
add
add
pop
pop
pop
adc
sub
test
in
pusha
pop
inc
out
loopne
leave
xchg
sti
adc
pop
xchg
mov
shlb
mov
mov
ret
out
dec
daa
cs
or
outsb
adc
jnp
call
cmovl
or
cmpsb
xor
outsb
mov
nop
fld
loope
inc
clc
mov
jg
insl
jmp
jp
sbb
lods
mov
mov
sti
inc
push
sub
inc
shlb
mov
mov
repnz
add
push
xor
jle
xchg
mov
pop
xchg
mov
mov
out
xor
dec
loop
aad
repz
push
dec
shlb
mov
mov
adc
xchg
fistps
call
test
dec
std
mov
jns
andl
cltd
ja
enter
cmc
pop
lret
xor
clc
pop
mov
jb
jnp
dec
pop
sbb
int
pop
in
ss
xchg
sub
push
pop
mov
negb
push
sbb
faddp
push
stc
xchg
pop
icebp
fwait
rorb
push
ret
sahf
addr16
mov
mov
mov
testb
xlat
mov
sbb
fisubrl
sub
stos
out
stc
xchg
jo
and
cmp
lcall
jg
mov
jb
inc
mov
frstor
repnz
shrb
xor
xchg
popa
push
fwait
test
mov
jbe
and
xchg
in
inc
cmpsl
fldcw
sub
insl
adc
insl
jle
inc
or
xchg
or
test
sarl
aam
cwtl
icebp
cmp
sbb
jb
mov
loope
xchg
xor
out
add
push
rol
or
cmp
test
and
insb
shrd
sub
je
jle
adc
ret
icebp
repz
push
ret
insl
out
add
fidivrs
imul
in
insl
clc
sbb
sahf
and
lcall
mov
sbb
es
mov
and
iret
loope
in
pushf
push
lcall
push
pop
jnp
xchg
imul
enter
das
je
xor
cs
mov
aaa
mov
mov
cmpsb
jne
stos
mov
dec
popa
push
mov
fists
insb
fmull
and
clc
bound
pop
lret
mov
sbb
ret
aad
daa
jecxz
inc
push
jno
imul
jns
push
stos
jle,pn
in
push
arpl
adc
pop
or
sbb
mov
clc
in
sub
inc
in
mov
sbb
mov
loop
incl
mov
dec
iret
cmp
xor
in
cmpl
stc
or
and
dec
sub
sbb
stos
or
shrl
and
es
shlb
aaa
push
lds
jmp
movsb
jl
mov
add
ljmp
pop
lret
sub
xchg
cmpsb
cltd
sbb
xchg
push
mov
shrb
mov
dec
arpl
push
jae
xor
pop
fcomp
push
cmp
xor
sbb
repz
pop
pop
pop
xor
out
or
mov
fcoml
sbb
loopne
in
adc
out
add
insb
popa
sbb
dec
xchg
rcrl
jg
hlt
mov
xchg
dec
dec
cmp
or
outsb
bound
pop
js
aaa
jns
or
outsl
jo
pusha
dec
jp
lock
adc
lock
mov
jns
pop
lock
dec
in
repz
xor
sarb
jmp
xchg
rcr
add
jmp
cmp
or
fcmovnb
rorb
or
cmp
mov
aad
sbb
sbb
cmc
sbb
shll
push
daa
xchg
test
aad
add
mov
out
mov
aaa
cmpsl
imul
insb
mov
mov
cmp
push
cmp
rcll
enter
mov
out
imul
or
mov
inc
cs
jae
inc
sub
mov
xchg
push
sti
xlat
shll
sub
xor
popa
push
inc
lcall
and
xor
fcomip
iret
mov
jmp
flds
push
ljmp
push
movsb
adc
inc
mov
dec
jmp
sbb
rdpmc
and
ror
sub
scas
icebp
lods
xchg
cmp
sbb
add
add
add
stc
pop
sub
stos
jns
dec
sub
xchg
xor
ljmp
add
xor
push
in
push
rorl
rcl
xor
cmpsl
lcall
jae
dec
into
xchg
ffreep
lods
sub
in
sub
je
inc
pop
xor
nop
pop
rolb
sar
cwtl
aaa
dec
xor
add
hlt
lods
mov
jnp
cmp
repz
jae
mov
ds
sub
xor
nop
lahf
inc
sbb
or
inc
es
loop
test
in
dec
and
or
pop
push
lea
push
or
dec
mov
test
stc
and
push
jbe
xor
lret
pop
and
pop
dec
push
xchg
jmp
rol
pop
or
xor
cmp
jae
sbb
and
jge
jnp
or
inc
push
arpl
popa
popf
insb
mov
sub
shrb
jno
push
div
test
and
push
sti
jno
jae
cwtl
std
jb
cld
mov
xor
nop
iret
or
and
sub
lahf
ret
and
neg
xor
jae
fs
sub
aad
sub
test
adc
pop
jbe
imul
cmp
stc
incl
jge
sbb
xor
loop
clc
fnstcw
je
add
push
push
xchg
out
cmpsb
push
sbb
push
lods
bound
adc
xchg
sbb
idivb
adc
and
jbe
inc
push
sub
popa
xchg
push
jnp
es
inc
mov
rep
add
push
jecxz
aam
xor
mov
pop
add
pop
ds
or
and
and
cli
mov
lret
or
mov
sti
adc
jecxz
sbb
jae
pslld
cmp
mov
sbb
int3
push
call
sbb
cmpsl
lods
push
mov
popa
and
inc
sub
dec
or
mov
xchg
jbe
les
clc
dec
mov
test
insb
add
pop
pusha
loope
jp
add
mov
jae
fistpl
fstpt
cmpsb
inc
je
das
adc
inc
push
dec
clc
sbb
xor
xchg
mov
shlb
pop
push
loop
push
insl
in
fs
das
xor
ret
in
inc
push
cmp
fstl
incb
insb
mov
dec
push
hlt
cli
addb
jbe
into
fistps
das
xor
jae
pop
clc
mov
and
xchg
jnp
xchg
xor
push
ret
sub
cltd
mov
xchg
int
dec
cmp
pop
lods
jb
sub
sub
clc
add
adc
mov
int
pop
scas
add
and
xor
pop
pop
and
jecxz
sub
cmp
xchg
mov
jmp
scas
inc
push
sbb
sub
imul
js
lock
xchg
lcall
and
adc
fildl
insl
cmp
jg
out
shlb
push
les
iret
inc
dec
push
cmp
lret
xchg
leave
dec
jo
and
xchg
imul
and
xor
daa
xchg
insl
pop
sarl
out
scas
lods
fcmovnb
dec
movsb
inc
or
or
jo
xor
mov
aad
inc
pop
sub
pop
pop
sub
mov
add
outsb
dec
and
mov
clc
mov
out
jbe
mov
inc
arpl
mov
shlb
sbb
push
push
clc
sub
ret
mov
popa
popa
fwait
popf
mov
ret
aam
push
stos
and
clc
mov
ss
gs
lret
movsl
inc
lods
stc
adc
pop
add
push
fsubr
and
jle
mov
test
jl
jo
mov
or
rcll
sti
mov
mov
jo
sub
out
int3
xor
jne
cmp
push
mov
push
dec
sub
cmp
addr16
aad
adc
sbb
cmp
or
or
nop
inc
lds
xchg
pop
push
insl
loope
cmp
add
aad
outsb
outsl
gs
pcmpeqb
mov
mov
std
mov
les
sbb
cs
enter
cs
cmpsl
and
mov
xor
popa
mov
rorl
negb
sbb
xor
xchg
and
shl
jp
scas
mov
sub
leave
inc
pop
out
stc
xor
inc
xor
js
fnstsw
sub
ret
pop
outsb
and
push
dec
inc
xchg
cmpsl
sub
dec
pop
sahf
aad
mov
sti
xlat
pop
lods
stos
push
or
loop
sub
fldl
addb
add
add
adc
dec
jge
xchg
outsl
jge
lcall
add
repz
add
cmp
cld
add
stos
divb
pop
or
add
inc
lods
mov
mov
test
push
mov
rorl
and
insl
mov
adc
jmp
cmp
adc
sub
outsl
cmp
outsl
mov
popf
xchg
xor
mov
lea
jno
cmp
and
pop
mov
ja
mov
mov
xlat
jg
xchg
out
sub
pushf
divl
mov
dec
cmp
mov
xchg
xchg
mov
ljmp
loope
ret
xchg
jne
add
repnz
xchg
and
sub
inc
movsl
xor
sub
mull
push
sbb
ret
orb
jnp
xchg
sarb
and
and
out
adc
sub
jmp
jbe
fists
das
jo
add
inc
jmp
mov
scas
adc
cmp
mov
js
xchg
adc
movsb
dec
adc
mov
or
xchg
cltd
xchg
cli
inc
test
aas
not
adc
xchg
cmp
sbb
xchg
jnp
fildl
shrb
sub
mov
push
add
jge
fnstcw
lods
ja
test
fstl
add
clc
push
lock
pop
fadds
xor
lret
mov
daa
clc
sub
insb
sbb
jg
das
pop
mov
add
in
gs
sbb
lea
adc
fsubl
es
das
lret
fstpl
lods
jp
insl
cmpsl
int3
roll
push
push
cli
adc
mov
aad
mov
jmp
loop
xchg
cmp
ret
adc
mov
lds
sbb
in
dec
outsl
lcall
mov
popa
push
rcrb
in
scas
pop
cmp
mov
or
push
roll
test
mov
inc
es
fcomps
adc
pop
pop
cld
jo
mov
push
lret
fdiv
xchg
mov
adc
xor
movsl
dec
sbb
insl
sub
and
outsl
adc
adc
inc
fidivrl
imul
fcmove
mov
jbe
sub
cmp
cwtl
ljmp
sti
jle
mov
dec
pop
inc
pusha
xchg
xchg
out
daa
movsl
daa
test
imul
mov
jg
mov
xor
sbb
mov
jl
popf
cwtl
mov
xchg
sub
sub
lcall
leave
scas
lahf
call
mov
cld
setb
popa
icebp
je
dec
shll
pop
sti
cmp
cs
jns
frstor
and
hlt
fs
and
sub
xchg
add
add
push
jns
mov
jo
fstl
xchg
cmp
popf
xlat
sbb
bound
push
mov
mov
cmp
or
add
lea
imul
xchg
pop
lret
cmpsb
pushf
dec
push
jmp
sub
clc
lahf
jmp
jae
outsl
ficoml
add
ret
mov
xor
jbe
pop
outsb
fstps
scas
pushf
lret
les
pop
dec
inc
sahf
gs
or
pushf
ret
lahf
add
scas
jae
hlt
inc
jno
push
lret
rclb
jg
call
mov
scas
pop
loope
rcrl
and
mov
sbb
js
xchg
cmp
push
gs
xor
xchg
mov
hlt
mov
pop
pop
jo
inc
sub
dec
jl
or
push
cld
cli
sbb
jecxz
xchg
mov
xchg
jp
imul
lods
nop
popf
int3
outsb
fwait
gs
aaa
scas
sbb
ss
lods
lret
lret
pop
rcrl
sbb
stos
sbb
or
cmpsl
or
paddb
iret
es
aaa
lret
push
or
push
fcmovnu
aam
sbb
lock
cwtl
push
loopne
test
sbb
stos
stc
shll
rcll
push
or
mov
test
mov
push
mov
jbe
xor
mov
mov
sbb
cmp
mov
cwtl
sub
orl
mov
mov
push
jb
mov
aas
lock
imul
nop
mov
adc
xor
sbb
or
test
cmp
cwtl
cmp
les
mov
or
enter
call
xor
push
jnp
or
jae
js
mov
and
add
add
xlat
hlt
push
ljmp
sub
cmp
push
movsb
add
repz
add
push
mov
ds
pop
es
and
les
inc
inc
cmpsl
je
rolb
add
jne
add
adcl
jge
cs
mov
xor
push
or
pop
pop
xchg
mov
mov
ret
pop
mov
dec
outsb
mov
mov
std
outsl
out
push
and
fstpl
and
jl
push
ss
gs
dec
xchg
mov
or
push
dec
jo
and
fcomps
lcall
in
and
pop
jl
aaa
divl
mov
lea
cltd
xchg
and
mov
ja
dec
lock
pushf
ljmp
pushf
scas
mov
pop
ja
cld
test
dec
imul
mov
mov
clc
dec
xchg
lret
sbb
xchg
cli
dec
fadds
xchg
or
inc
dec
iret
or
outsb
js
and
dec
adc
testl
jb
add
inc
lret
addl
mov
xchg
in
mov
pop
cmc
and
push
fistpl
stos
add
ficomps
pop
js
ret
jbe
lods
pop
add
icebp
pusha
inc
in
dec
cmpsb
lock
ficomps
push
addr16
and
shufps
sbb
push
pop
je
inc
out
imul
cld
out
xchg
and
pop
imul
add
xchg
push
sbb
js
sub
inc
jge
rorl
add
xor
icebp
sub
add
lret
stc
notb
add
xor
aam
add
xor
mov
inc
addl
dec
inc
mov
or
mov
leave
jne
in
sub
lock
bound
jnp
pop
sbb
mov
xor
testb
pop
enter
cmc
dec
push
or
frstor
stos
push
dec
addr16
push
mov
ficomps
pop
inc
cmp
add
add
fwait
or
imul
out
sbb
ret
inc
add
stc
cmpsl
pop
mov
aad
mov
xor
movsl
pop
cmc
int
mov
leave
mov
pop
lcall
jle
mull
xchg
push
lods
jp
jo
mov
sbb
and
daa
fnstenv
or
cmp
sbb
cmp
cmp
fcomps
push
or
adc
fdivrl
sub
hlt
mov
arpl
mov
push
pop
cmp
mov
mov
js
lods
test
mov
sbb
mov
fidivrl
std
xchg
enter
xor
out
cmp
fsubrl
cwtl
dec
out
adc
and
add
dec
jg
bound
shlw
cli
lcall
inc
imul
movsl
jle
stc
push
jns
aad
je
arpl
xchg
hlt
lods
test
or
shrl
bound
xor
mov
in
mov
pop
or
mov
loopne
dec
fisttpl
mov
mov
mov
xchg
mov
dec
mov
jmp
aas
cmp
inc
mov
sub
cmpsl
daa
and
push
xor
jo
enter
in
stos
sbb
mov
sti
and
add
ja
lods
shrb
lret
subb
and
sub
testl
inc
xchg
int3
out
pop
shlb
jbe
add
add
sub
jge
pop
loopne
inc
dec
stos
pop
test
push
xchg
xchg
or
cli
in
idivb
pushw
sti
add
nop
das
iret
in
daa
cld
fiaddl
or
push
sti
xor
out
pop
lret
imul
sub
jle
push
add
lock
cli
xor
pop
sub
hlt
popf
inc
cli
ds
out
aad
mov
test
xchg
jno
push
xchg
cmp
cli
repz
das
adc
lods
xor
pop
xor
xchg
xor
xchg
jl
inc
int
mov
gs
sub
cli
xchg
stc
in
call
cli
jo
int3
out
in
leave
mov
in
imul
pop
xchg
push
orl
xchg
ja
lods
jl
pop
ja
pop
mov
es
add
xchg
mov
xchg
out
aad
cmp
xor
push
fisubrs
mov
sub
xlat
sahf
dec
sbb
jo
dec
adc
aad
fldl
popf
add
add
add
pop
test
aam
lahf
pop
dec
sar
adc
jp
cld
dec
test
add
xchg
and
or
int
xlat
mov
mov
push
inc
sub
lahf
aam
mov
lret
ljmp
or
mov
cmpsb
in
fcompl
ffreep
aam
cli
pop
dec
push
mov
sub
sub
xchg
popa
pop
jmp
insb
mov
mov
fcmove
cmp
nop
mov
cli
jge
imul
mov
pop
arpl
cmpsl
sbb
sbb
movsl
xchg
js
fidivrl
aas
or
popf
outsl
scas
js
xlat
rcl
sub
push
xchg
add
movsl
push
imul
jmp
in
mov
jp
xor
bound
dec
jg
dec
mov
xor
lods
jmp
inc
xchg
and
jecxz
jne
push
pop
ljmp
and
movsb
adc
data16
dec
adc
pop
cmp
pop
push
adc
iret
std
negb
pop
xor
dec
clc
jl
cld
inc
sbb
rclb
icebp
fbld
and
lea
movsl
inc
mov
dec
in
fsubl
dec
movsl
cltd
inc
popa
mov
cmp
mov
cmp
adc
out
dec
pop
or
movsb
push
xor
fidivl
dec
pop
je
out
jle
cmc
ret
outsb
pop
std
sub
fcomp
add
or
and
cmp
sbb
cmp
mov
fcmovbe
sbb
test
inc
enter
addl
fildll
push
ss
pushf
fs
lahf
mov
push
push
ljmp
or
stc
sub
adc
pop
cmpl
mov
pop
in
cmpl
xchg
and
adc
jmp
lcall
jne
mov
fisttpl
pusha
movsl
sarl
cmpsb
cmp
fwait
popa
mov
xor
pop
sbb
add
pop
ss
inc
loope
pop
mov
inc
xchg
insb
daa
rorb
add
rcll
aad
jmp
add
cmp
nop
or
pop
mov
or
inc
call
lods
call
adc
cltd
test
test
rorb
push
cld
sbb
lcall
sub
fwait
dec
jne
scas
xchg
xor
cmp
dec
jle
ja
movl
inc
jmp
jns
pusha
mov
and
out
cmp
notb
les
add
bswap
iret
pop
mulb
mov
repz
pop
adc
cmpsb
test
sarb
insb
jae
jne
dec
lcall
mov
leave
es
push
lret
pop
jno
pop
push
lds
ficoml
mov
push
dec
mov
dec
and
outsl
repnz
rorl
imul
aam
adc
xor
jmp
push
jmp
xor
mov
dec
sbb
mov
aas
jle
leave
aad
lgs
shll
aaa
out
retw
jnp
aas
mov
sub
cld
popf
dec
lea
jno
punpckhdq
lods
mov
mov
aam
inc
xchg
and
hlt
outsb
mov
test
loop
lea
inc
subl
xlat
leave
sbb
lock
test
mov
popl
shl
dec
cmpsl
mov
push
push
out
adc
sub
bound
xor
pushf
or
jns
jno
jle
mov
aam
sbb
in
mov
addr16
rcrb
xchg
sbb
sbb
push
mov
fs
rorl
dec
cli
imul
test
in
sub
adc
xchg
mov
out
cs
enter
cmpl
imul
rolb
mov
sub
or
and
imul
jp
pop
lea
dec
jae
outsl
aas
mov
cmp
mov
repnz
in
pop
std
inc
fcmovne
sbb
lods
popf
mulb
lret
mov
ds
insb
xlat
dec
pop
aad
push
int
mov
pushf
aas
lock
ds
clc
seta
dec
cmpsb
pop
shll
sub
jns
adc
cmpsl
loop
xchg
and
mov
lahf
in
loopne
out
mov
adcb
adc
push
dec
ja
in
xchg
stos
inc
inc
inc
test
subb
push
loop
loop
add
arpl
and
negb
orb
adc
out
sti
dec
test
fsubs
lods
xchg
push
add
add
add
push
push
lret
mov
movsl
inc
or
add
add
add
ficompl
ja
subl
popf
inc
filds
lods
movsl
gs
inc
sbb
rorl
xor
addl
mov
hlt
xchg
mov
mov
out
dec
sbb
adc
adc
mov
fildll
incl
ljmp
or
or
mov
sub
out
aaa
jmp
push
cli
mov
and
jl
ja
and
inc
test
add
sbb
scas
es
jg
pusha
out
loopne
jae
shrb
pop
bound
mov
dec
cmp
xchg
mov
add
addr16
dec
notb
ficompl
int
xor
mov
xor
xchg
jbe
es
pop
mov
sbb
sbb
push
cs
jo
pop
push
je
imul
negb
out
iret
loopne
enter
repz
pop
adc
xchg
sbb
ds
xchg
test
outsb
out
orl
jle
pusha
ljmp
adc
xchg
sbbb
pop
shr
mov
and
std
pusha
jmp
jns
cltd
mov
and
ds
mov
ljmp
mov
shr
mov
aas
int3
jmp
fs
push
pusha
cmc
jmp
sti
stc
mov
lcall
sbb
cmp
lea
xchg
out
sbbl
push
pop
push
cmc
cli
fwait
subb
push
lock
sbb
jmp
fadds
test
jo
test
mov
mov
xchg
add
cmpsl
into
mov
cmp
sub
add
xchg
lock
jae
fdivs
and
fsub
jne
mov
imul
push
jp
and
fisttps
or
cmp
mov
cld
pushf
add
imul
cli
mov
cmp
xchg
mov
adc
jnp
fcmovnu
cltd
and
inc
cmpsb
ret
das
int3
push
adc
fs
jbe
pop
icebp
sub
push
sub
rorb
push
dec
jb
cmpsb
xchg
jle
dec
hlt
ds
in
or
jle
sub
imul
and
push
imul
dec
or
pop
push
mov
lods
jbe
cld
mov
cmp
fcoml
xchg
xor
sbb
in
popa
js
ret
dec
test
xor
cmp
insb
subl
cmp
mov
iret
dec
pusha
xchg
in
dec
ret
mov
cli
jno
or
repz
fsubp
pop
pop
jbe
lret
mov
xor
clc
aad
ret
mov
rcr
add
mov
xchg
add
frstor
cmp
xchg
mov
pop
xchg
fldenv
aad
fcomp
iret
mov
aad
push
mov
mov
scas
mov
inc
mov
mov
std
ljmp
pop
push
and
pop
fcomps
jae
je
jnp
cmp
jp
dec
cld
xor
negb
xchg
js
cli
pop
xchg
dec
rcrl
iret
sarb
cmpsb
add
stos
dec
add
mov
jmp
add
xor
add
jle
sub
repnz
jmp
mov
std
test
dec
pop
pop
cmc
cmp
xlat
rol
fsts
xor
pusha
push
into
or
push
adc
je
inc
dec
push
mov
cmp
sub
shrb
push
xor
sub
or
test
aaa
xchg
mov
ja
add
inc
jecxz
or
cld
jns
fadd
jnp
mov
fsub
xchg
push
sti
out
call
xchg
inc
mov
das
pop
and
inc
xor
stos
xor
aaa
into
dec
pop
lock
std
add
loopne
lods
pop
sub
or
xchg
adcb
push
rcrl
mov
dec
ss
dec
mov
test
push
xor
ss
cmp
fnstenv
or
stc
or
fistl
fs
call
aam
xlat
mov
dec
and
sub
sub
mov
sbb
xor
repnz
les
xor
addr16
or
lock
xchg
cmp
insl
cli
jbe
inc
std
outsl
xchg
popa
icebp
es
jbe
sbb
cmp
jp
outsl
pop
out
subl
pop
mov
outsb
movsb
or
outsl
jg
and
dec
addr16
mov
jb
adc
inc
int
addr16
or
in
xchg
add
in
arpl
aas
mov
dec
mov
mov
xchg
lret
or
faddp
xchg
idivb
adc
lcall
mov
add
add
inc
xchg
daa
cmp
mov
and
xor
add
pop
jecxz
lods
add
repnz
js
jle
cld
dec
mov
sbb
divb
mov
rolb
sbb
cwtl
jbe
sbb
int
js
or
popf
cmp
mov
shlb
aaa
or
cmc
cmpsb
fldcw
fidivs
popa
cs
bound
rorb
or
testb
add
into
adc
and
and
pop
ret
inc
push
sub
pop
icebp
push
and
loop
and
scas
jne
pop
cmp
subb
jno
call
mov
sbb
cmp
or
notb
mov
push
mov
test
insl
enter
adcl
mov
cli
test
lods
out
adc
sahf
push
jbe,pn
mov
fbld
pop
divb
in
pop
cmp
add
push
xchg
inc
pop
mov
shrl
xor
or
into
and
daa
and
adc
xchg
rolb
pop
add
adc
adc
sbb
into
inc
mov
in
cmp
clc
mov
mov
xor
loopne
adc
out
bound
je
xor
inc
pushf
aaa
or
lret
out
push
or
roll
movsb
test
loope
out
xor
fwait
aam
push
jbe
cmp
bound
enter
rorb
dec
cmp
repnz
ljmp
mov
ss
ret
xchg
cmp
pop
out
es
sbb
jmp
fwait
out
das
xchg
push
jns
ret
das
addr16
arpl
mov
xchg
imul
mov
pop
inc
je
pop
lea
out
fstpl
fidivrl
lods
imul
sbb
add
and
repnz
push
sti
ret
lea
lret
and
add
mov
test
jg
xchg
adc
and
push
xchg
in
std
stos
mov
mov
icebp
call
fdivl
adc
xchg
es
sbb
orl
fwait
loopne
ret
and
mov
sub
addr16
push
lea
adc
jl
movsl
std
xor
mov
push
outsb
int3
mul
push
ficomps
lock
xchg
jge
nop
icebp
push
adc
jmp
xorb
or
aad
lahf
cmp
or
pop
lods
iret
mov
inc
mov
lret
xchg
dec
inc
repnz
std
mov
repnz
push
cmpb
sub
scas
xchg
xchg
dec
inc
mov
mov
test
xor
sub
sahf
push
inc
sbb
push
jne
xor
out
mov
adcl
lret
mov
cmp
leave
jns
dec
push
xchg
sbb
adc
mov
mov
cmpsl
xor
mov
into
push
push
cltd
jecxz
movsb
or
xor
enter
outsl
pop
call
sahf
pop
iret
mov
xor
fldcw
jo
lcall
enter
jne
dec
sub
aaa
cld
inc
add
popa
adc
rol
mov
leave
sbb
pop
pop
xor
cmp
push
popf
and
jb
dec
mov
mov
mov
mov
and
fimull
lahf
subb
mov
push
xlat
ja
fdivr
out
push
push
add
js
insb
cmpb
outsl
sbb
mov
jb
dec
mov
ds
aad
dec
push
cmpsl
loop
mov
jge
push
or
out
jecxz
aaa
scas
sbb
hlt
mov
sbb
pop
movsb
xchg
roll
int
in
shrb
add
je
jo
sub
push
jmp
ret
sub
mov
out
xor
repnz
push
pusha
fcoml
fcoml
sub
icebp
dec
xchg
mov
pop
test
jbe
fs
inc
nop
jl
pop
mov
adcl
xchg
aad
or
mov
arpl
xor
sbbb
insl
out
std
lea
sub
in
push
jg
add
pop
mov
std
or
data16
repz
cs
fcmovbe
cs
adc
shll
sub
mov
fimull
out
sbb
push
or
fimuls
jns
or
aas
jbe
in
mov
lock
dec
push
mov
hlt
sub
sbb
imul
push
mov
add
clc
data16
mov
out
ficoml
lahf
and
add
icebp
fnstsw
jmp
mov
ret
in
je
test
push
insb
push
mov
push
jle
dec
cmc
push
add
xchg
rcll
xchg
mov
mov
add
rorl
lret
sbb
adc
rcll
lods
lcall
cmp
jnp
mov
xor
rcrb
push
cmpb
pop
sbbb
hlt
popf
sbb
in
enter
cmp
lahf
mov
xchg
shl
movsb
or
rorl
bound
cwtl
loope
cmp
jp
add
push
je
call
pop
xor
rclb
mov
bound
pop
mov
xchg
std
repz
or
mov
lcall
pop
fildll
xlat
lock
mov
xlat
add
jp
mov
je
dec
dec
mov
push
cltd
lahf
mov
imul
shl
inc
aam
aad
and
xchg
mov
dec
dec
dec
ret
and
out
lea
push
js
xor
xchg
in
mov
lcall
pop
add
xor
loop
sbb
pop
out
pop
xorps
insl
call
mov
lods
pop
ljmp
out
push
dec
mov
popa
ret
fwait
lcall
sub
push
or
cld
or
mov
pushf
loop
or
fsubrp
pop
sbb
mov
mov
xchg
jmp
lcall
mov
mov
or
je
sbb
fxch
lret
stc
and
jae
in
jecxz
aad
fs
fstp
xor
shlb
jae
sub
dec
xlat
out
inc
insb
aaa
lret
sub
or
or
push
adc
ja
movsl
sbb
mov
lret
xor
imul
in
ret
les
call
popa
mov
fs
fcomp
std
or
fwait
inc
mov
mov
bound
test
sbb
cmp
or
fdiv
add
fnstsw
xor
and
jle
fdivrp
dec
inc
outsb
xlat
and
shlb
jb
mov
pop
ret
js
mov
xchg
or
mov
call
cmp
mov
cmc
pop
add
xlat
jae
movsl
sarl
or
cmp
loope
mov
pop
in
call
xor
mov
mov
mov
mov
out
adc
fprem
div
sub
arpl
imul
xlat
ficoms
sub
inc
loopne
add
pusha
mulb
mov
and
dec
mov
adc
aas
sub
inc
stc
movsl
clc
xchg
addl
jmp
insb
addr16
sub
mov
ret
imul
xor
popl
aas
imul
dec
mov
cmp
jae
sub
push
cltd
adc
arpl
xchg
and
sub
std
in
jo
cmp
idivb
mov
sub
mov
dec
adc
xchg
sbb
in
rcll
push
ja
jns
popa
repnz
add
pop
stos
arpl
shl
cmpl
shrl
xor
xchg
jg
je
xchg
sub
daa
lret
push
data16
pushf
mov
mov
out
inc
cmp
sub
ljmp
lds
shlb
push
sbb
std
and
cmp
test
push
cli
cltd
fucomi
sbb
rorb
adc
jl
addr16
and
incb
inc
out
fists
inc
sbb
mov
xchg
mov
xor
mov
in
inc
push
scas
lea
sbb
cmp
test
shll
inc
icebp
mov
inc
lahf
inc
push
lahf
mov
xor
rcl
pusha
fimuls
dec
test
popl
iret
sub
inc
xor
dec
inc
test
ljmp
xor
js
jmp
push
cmp
clc
or
call
push
lcall
pop
mov
adcl
enter
xchg
pop
cltd
inc
popa
hlt
cmp
mov
xorl
nop
jae
dec
sub
imul
inc
mov
push
jbe
and
adc
aas
or
and
push
push
iret
sub
add
add
sub
iret
cmp
outsl
jecxz
push
insl
pop
iret
xor
mov
add
vcvtsi2sdl
mov
cmpsb
jb
push
mov
in
insb
pop
repnz
pop
les
mov
cmp
pop
push
cmp
jecxz
scas
repnz
adc
or
mov
fs
cmpsb
push
stc
in
sbb
cmp
in
fdiv
push
mov
sub
push
jo
das
int3
cmp
lcall
push
in
jns
jae
cmpsl
sub
inc
daa
xor
aaa
mov
push
insl
aam
jnp
mov
movsb
dec
daa
xchg
mov
push
cmc
xor
xchg
pop
push
in
adc
into
adc
inc
jle
lcall
adc
jl
or
cmp
movsl
and
pop
test
and
cmpsl
adc
pop
dec
xchg
sbb
faddl
jmp
stos
sahf
inc
and
popf
enter
sub
out
pop
aad
out
xorb
push
mov
mov
push
jne
fisttpll
into
xchg
test
sahf
idivb
lcall
xor
pop
les
cli
adcl
fldenv
stc
dec
mov
xor
adcl
aaa
adc
lcall
lahf
int3
mov
mov
jp
adc
inc
pop
cli
cmp
les
xor
xor
inc
sbb
push
push
scas
std
mov
test
mov
movsb
push
out
ljmp
js
mov
mov
js
pop
mov
sub
mov
xchg
fs
setnp
loop
lock
adc
cmpsb
movsb
jp
sbb
hlt
imull
jno
aam
outsl
pop
or
pushf
cmpsb
jle
jnp
inc
sbb
adc
and
int
add
and
das
jge
dec
adc
and
call
adc
daa
cltd
fwait
push
icebp
fidivl
add
xchg
mov
xor
push
inc
int
or
stos
shll
iret
in
dec
std
sub
idivl
lcall
pushf
fists
mov
pop
or
jae
js
mov
push
imul
xchg
cmp
in
pop
fisubrl
iret
adc
xchg
and
rcrb
ljmp
push
bt
sub
push
mov
push
xor
call
adc
sbb
push
push
mov
mov
mov
aaa
inc
lcall
into
pop
mov
mov
iret
sarl
xchg
cmp
jecxz
fsubl
mov
gs
mov
fs
jae
dec
out
mov
outsl
push
out
and
test
mov
lods
repz
and
cmp
pop
shrl
dec
mov
or
jmp
rorl
stos
insl
xor
arpl
xchg
out
push
pop
xlat
push
lcall
mov
or
pop
push
cli
inc
lods
loope
insl
fdivr
cs
test
dec
mov
nop
cltd
jecxz
mov
mov
pop
pop
push
jge
leave
add
xlat
jge
dec
hlt
les
xor
cmp
shl
rol
fstl
gs
push
dec
pop
and
mov
push
or
cmc
dec
mov
lds
scas
mov
adc
inc
sub
jmp
pop
inc
inc
scas
fisubl
clc
or
cmp
xchg
stc
xor
jbe
aaa
jne
popa
outsb
jno
iret
dec
sbb
push
movsl
aaa
shll
scas
or
mov
xchg
mov
rcll
inc
jnp
jle
mov
xchg
xlat
or
aaa
je
ret
pop
rorb
inc
dec
pop
adc
rep
ljmp
xor
lahf
pusha
mov
add
mov
out
xchg
test
rorl
push
enter
sub
sub
add
cmovle
or
or
cmc
ss
out
imul
push
or
jne
jae
jae
pop
mov
or
pop
je
cmp
jae
or
stc
xor
or
dec
and
loopne
jns
mov
js
mov
push
lret
or
popa
imul
into
aad
insb
push
mov
sub
jle
push
or
fidivrs
lcall
cmpsb
enter
pop
aad
mov
lock
loope
mov
sbb
add
inc
pushf
pop
add
add
add
lea
imul
fcmovnb
bound
add
repz
add
ret
sub
lds
mov
add
lret
cmp
out
je
sbb
insb
push
and
cvtpi2ps
xchg
xchg
movsl
test
lods
lcall
or
push
xchg
or
mov
and
jecxz
or
mov
and
and
leave
into
cmp
test
add
cli
js
xor
imul
aaa
ljmp
push
dec
xchg
incb
cmpsl
loope,pn
cmp
data16
enter
inc
lahf
cs
xor
aad
fisubrl
call
jmp
mov
pop
adc
jb
movsl
lds
sbb
popa
sti
cmp
sahf
rcr
movsb
insb
sub
xor
mov
fwait
sub
lcall
sbb
xlat
scas
or
imull
inc
add
outsb
mov
jae
sub
mov
push
jo
jge
or
xor
xchg
arpl
ljmp
push
sbb
xchg
in
cmp
and
pusha
xchg
in
sbb
cmp
jns
out
aam
insl
ret
test
jbe
mov
lock
mov
mov
xor
subl
std
mov
aas
pop
lock
xor
pop
push
sbb
mov
ja
fisttps
lea
mov
xchg
pop
cmp
add
std
mov
adc
mov
mov
jmp
repz
aaa
jg
repz
sbb
fisubrs
ss
dec
and
push
sti
xchg
cmpsl
inc
pop
add
or
mov
jl
and
xor
mov
push
addl
lret
popf
and
dec
mov
cmpsl
mov
mov
shrl
or
repnz
mov
rorb
jge
popa
lods
out
stos
jae
mov
adc
mov
sti
dec
in
push
mov
xchg
mov
testb
loope
cmp
sarb
data16
cmp
bound
mov
cmp
mov
ret
fstps
xchg
pop
fisttps
cmpsl
or
fisttpll
add
roll
aaa
enter
testb
xor
mov
push
mov
fwait
sub
mov
stc
xchg
pop
sub
or
fnstcw
mov
outsl
std
push
iret
xor
xchg
ljmp
pop
icebp
int
inc
fsubl
out
ja
xor
sbb
pop
xlat
mov
stc
bound
arpl
cmp
das
clc
dec
mov
add
pushf
push
dec
lret
addl
and
inc
mov
mov
scas
movsl
clc
xchg
cli
hlt
sbb
imul
in
push
out
fisttpl
mov
testl
xor
test
jae
mov
xchg
pusha
mov
mov
fidivl
sbb
add
out
ret
rorb
xchg
xchg
insl
push
xor
adc
repnz
das
dec
cmp
outsl
cld
mov
out
std
mov
sub
cmp
insl
pop
jo
jno
sti
ret
mov
lahf
pop
jg
icebp
repz
mov
add
inc
dec
in
sub
sub
insb
cmpsl
leave
das
xor
mov
push
inc
std
jnp
mov
pop
scas
adc
movsl
lcall
adc
mov
mov
mov
cmp
cmp
pop
stos
dec
popf
fs
xor
sahf
inc
pop
sbb
mov
push
mov
popl
loopne
lods
fcoml
push
mov
sahf
mov
mov
dec
stos
adc
mov
out
inc
lods
xchg
or
pop
push
adc
mov
fnsetpm(287
mov
testb
es
andb
mulb
fdivl
lahf
or
sti
daa
into
push
add
cmpsb
sub
adc
dec
icebp
push
scas
sub
sub
add
cmc
scas
fwait
test
sub
mov
in
sub
or
jnp
neg
imul
mov
and
sahf
dec
xchg
popf
cmp
leave
adc
imulb
mov
cmpsl
ret
jae
fsub
rol
add
loopne
outsl
add
out
jmp
test
add
mov
cli
dec
push
lock
cmp
daa
pop
test
pop
stos
fs
xor
adc
test
mov
mov
jl
add
add
addb
bswap
test
dec
or
movb
repz
add
sbb
adc
push
sub
push
out
outsb
fcmove
adc
jmp
out
mov
sub
lret
arpl
dec
pop
imul
setno
fs
call
adc
subl
jae
cmpsb
decl
bound
mov
add
dec
xor
mov
fiadds
pop
in
dec
iret
or
xchg
xchg
or
movsl
and
es
loop
outsb
pop
repnz
inc
movsl
stos
jo
push
fsubr
out
fldenv
add
mov
scas
cwtl
inc
lea
mov
aam
lcall
mov
cmpsb
popa
add
mov
xchg
iret
xchg
xchg
xlat
adc
imull
mov
pusha
sbb
stos
loopne
imul
or
or
mov
xor
in
dec
inc
shll
fidivl
xchg
pop
cs
sbb
shl
sub
mov
outsb
lods
insb
xchg
dec
outsb
lods
test
mov
cmc
pop
enter
mov
mov
cli
mov
pop
xor
ss
cltd
xor
lss
dec
xchg
cmp
cmc
pop
or
inc
add
dec
cmp
and
imul
adc
clc
push
jmp
xchg
add
mov
aam
aaa
fisubrl
xchg
lods
sub
push
jbe
aaa
adc
add
fsubs
test
and
jle
pop
in
jnp
inc
xchg
sbb
cmpsb
cmpl
pop
mov
adc
xchg
lods
gs
push
dec
or
insl
xchg
cld
repz
adc
push
pop
or
rorb
inc
int3
mov
sbb
sub
in
pop
cmp
dec
mov
xor
js
and
mov
pop
and
inc
ficompl
rolb
push
pop
add
cmc
push
dec
iret
inc
jle
cmp
add
dec
push
ja
shrl
ds
fcoml
and
pusha
mov
mov
xchg
daa
pop
hlt
out
sub
and
adc
scas
push
mov
inc
ja
sarb
ljmp
xor
adc
mov
and
xchg
fwait
dec
jle
std
ficompl
mov
push
sub
fcmovne
sub
adc
out
lods
nop
cwtl
mov
aad
subb
xchg
sbb
lds
dec
addb
or
jecxz
push
adc
lea
xor
xchg
xchg
test
xor
subl
inc
adc
movsb
shlb
shll
jns
jle
stos
push
push
loopne
sbb
xorb
test
arpl
insl
mov
shll
inc
cmp
jno
pop
dec
inc
out
xor
cltd
cmp
movhps
xchg
sbb
xor
xorl
fcmovnu
lret
mov
dec
js
and
mov
popa
sub
loope
jns
mov
jnp
sbb
mov
and
clc
imull
nop
pop
push
cmp
lret
fmull
mov
dec
roll
jo
xchg
xor
daa
adc
shll
xchg
enter
mov
jnp
enter
add
cs
mov
dec
mov
negl
inc
std
out
dec
mov
lcall
xor
adc
es
ffreep
clc
add
xchg
mov
and
push
shlb
lds
cmp
in
and
mov
push
mov
adc
je
xchg
jnp
ljmp
jns
mov
pop
mov
mov
es
pop
mov
xchg
adc
add
ss
inc
sbb
fs
push
notl
inc
test
test
pop
ret
add
push
and
pop
out
adc
ss
lahf
rorb
call
std
subb
pusha
push
mov
inc
dec
mov
aas
into
push
lods
xchg
ss
dec
push
and
push
fisubrl
adc
aad
cmp
scas
push
movsb
xorps
and
mov
call
add
mov
sbb
mov
fwait
pushf
aaa
sbb
int3
jle
xchg
adc
xchg
inc
ss
rclb
cmp
sbb
and
lahf
mov
push
aam
inc
pop
bnd
jo
xchg
xchg
mov
xchg
mov
xor
adc
adc
ret
sbbb
stos
adc
loop
movsb
aad
jle
dec
lahf
fildl
jns
mov
lret
enter
add
add
fwait
push
pusha
outsl
out
jg
cmc
or
pop
jp
out
lret
add
repz
add
stos
and
jecxz
cmp
pop
adc
inc
je
cmpsl
push
sarl
fisubrs
xchg
push
push
stos
jbe
iret
jg,pt
dec
add
push
daa
test
inc
das
js
rcrb
add
add
mov
ljmp
outsb
ror
push
mov
cmpsb
fistl
lret
mov
stos
fiaddl
inc
cltd
sub
or
or
mov
push
push
lods
imul
push
pop
jns
mov
neg
pop
ret
cmp
mov
push
push
dec
pop
and
pop
dec
cmovae
fstp
inc
push
add
xor
outsl
jbe
push
sub
push
stos
aas
into
push
out
outsl
addl
sub
mov
push
xchg
outsl
jmp
pop
leave
sub
addr16
or
and
sbbb
xchg
inc
mov
xchg
xor
lcall
imul
cmpsl
xchg
gs
in
add
fistps
push
inc
in
mov
and
add
cmp
sub
ret
into
adc
out
sbb
fidivs
subb
rcrl
outsl
or
or
xchg
cs
push
jns
and
insl
aaa
test
inc
add
scas
rorl
clc
cmp
cmp
lret
or
mov
xor
inc
icebp
mov
dec
call
jecxz
ret
xchg
movsb
stc
pop
pop
jmp
jl
sbbl
hlt
or
cs
jae
ficoml
ds
push
aaa
jbe
dec
cli
jo
rcrl
test
ljmp
out
add
jb
outsl
push
xor
and
cli
das
sbb
inc
test
shl
xchg
icebp
add
jmp
push
xor
nop
jp
cmpsb
mov
mov
sub
cltd
and
ret
pushf
cmp
adc
xchg
xchg
push
fs
pushf
in
lahf
jp
mov
ret
pop
mov
push
ss
clc
lods
pusha
mov
mov
cmp
ret
out
mov
jo
cmp
push
push
mov
rcl
sar
push
mov
sbb
in
imul
or
push
shlb
lahf
cmpl
dec
dec
repz
pop
adc
testb
in
gs
outsl
sbb
fisttpl
adc
movl
xchg
add
popf
inc
and
jnp
xor
leave
in
daa
pop
lock
xor
dec
scas
aad
das
pop
xchg
adc
pop
pop
fwait
or
mov
outsb
pop
and
sbb
inc
mov
fildll
bound
aaa
sub
push
jle
xchg
cltd
adc
sub
iret
aas
outsb
std
mov
movsb
dec
cmpsl
testl
clc
arpl
mov
push
cmp
xor
call
mov
xor
jb
addr16
loope
shrb
jg
in
in
ja
imul
mov
pop
push
std
mov
sahf
mov
sti
jmp
gs
sub
fwait
outsl
movsb
mov
std
xchg
xor
aad
push
jle
mov
xlat
hlt
jns
xor
push
push
roll
add
ret
push
xchg
das
mulb
jge
mov
je
sub
xchg
sub
es
mov
daa
dec
cmp
jo
push
arpl
lret
insb
dec
xlat
nop
and
enter
push
addr16
mov
mov
mov
dec
mov
in
mov
mulb
out
loope
inc
xchg
xor
cs
sbb
add
int3
fcmove
popa
sti
and
xchg
orb
movsb
pop
or
sub
mov
int3
pop
cli
shlb
push
test
int3
nop
xchg
int
sub
cli
or
iret
gs
pop
aas
inc
popf
jge
inc
icebp
and
sbb
mov
lods
cli
xchg
shr
push
push
cmp
mov
mov
sub
fcomi
cmpl
repz
mov
and
test
mov
inc
add
js
mov
sub
bound
inc
pushf
adc
scas
xchg
icebp
imulb
mov
mov
lret
aaa
loop
lock
cltd
and
xchg
pushf
push
and
xor
repz
lcall
leave
pop
enter
ret
push
das
int3
and
sub
stos
aas
mov
popf
popfw
dec
cmp
mov
popf
sbb
aam
cmp
add
hlt
add
mov
add
lahf
gs
icebp
add
push
mov
int
mov
mov
std
dec
pshufw
mov
add
add
add
outsb
out
lds
xchg
add
add
add
mov
popf
and
clc
xchg
and
sti
push
mov
in
dec
jne
push
dec
push
jle
and
cmpsb
inc
add
xchg
mov
lods
in
or
push
cmp
pop
sbb
dec
and
fistps
sbb
xor
pusha
sub
dec
sbb
addl
xor
jb
sub
jp
push
inc
subl
xchg
xor
roll
hlt
cmp
add
dec
or
in
stc
xchg
aad
sub
into
jg
stos
scas
sbb
sbb
and
ja
inc
into
int3
sbbl
push
mov
xchg
ret
fldenv
push
push
fimull
sahf
xor
sti
mov
jne
mov
lds
mov
or
mov
xor
pop
repz
push
sub
mov
out
stc
gs
rolb
dec
std
xchg
mov
sbb
mov
pop
mov
cmpl
xchg
rorb
mov
fdivs
jecxz
mov
arpl
jo
dec
call
insb
cmc
mulb
aaa
push
or
jo
lahf
lds
lret
inc
cmp
mov
mov
test
jb
fs
jge
rcll
stos
dec
sub
cmp
sahf
icebp
ds
or
iret
push
xchg
xor
inc
mov
inc
jne
dec
xchg
push
or
and
adc
test
sbb
add
insl
rcrb
pusha
scas
pop
or
xchg
cmc
mov
cmc
pop
ss
shrl
inc
xlat
mov
inc
cmp
movsl
mov
pop
push
sarb
jb
push
xor
xor
popf
in
jp
inc
adc
sub
cmp
jmp
inc
rcl
xor
mov
std
sub
sbb
insl
je
test
sbb
lea
jnp
jns
stos
ljmp
lods
dec
movsl
lea
jle
mov
jge
mov
sbb
test
pop
sub
sbb
and
dec
outsb
sub
jp
mov
imul
xor
incl
pop
gs
and
out
push
addr16
push
push
xor
xor
enter
inc
popa
lcall
iret
rclb
ret
xchg
test
jbe
subb
lret
dec
sub
iret
push
outsb
dec
xor
sbb
frstor
sub
sub
adc
fldl
xchg
out
clc
leave
cli
dec
xor
cli
in
xchg
lahf
test
xchg
xor
es
add
push
sti
cwtd
lods
ds
xor
xor
jb
rcll
pop
dec
push
lret
loopne
adc
hlt
inc
outsb
push
or
adc
and
lret
adc
ds
pop
mov
lock
loope
test
mov
int3
mov
sbb
push
in
pop
pop
aaa
push
ret
dec
xor
and
inc
lods
sbb
out
nop
sbb
xchg
xlat
jo
sahf
das
pop
test
xchg
sbb
mov
nop
xchg
cltd
or
out
cld
push
push
or
data16
xchg
and
fists
hlt
cmpsl
inc
push
test
lahf
adc
or
in
adc
pop
cmc
pop
popf
sub
addb
mov
js
std
pop
mov
jmp
push
out
and
push
sbb
pop
sbb
xchg
rorl
stc
cmp
gs
push
mov
jg
xorl
cld
dec
fistpll
jecxz
mov
sti
jo
insl
ds
lret
or
fsubrs
psrlq
test
dec
mov
aas
xchg
mov
adc
cmp
sahf
lret
pop
test
xor
lock
out
icebp
push
test
dec
dec
pop
jge
je
repz
jle
sbb
xchg
cmp
in
out
pop
notl
and
pop
aad
push
sub
pop
fstps
or
aam
sub
xor
xor
ljmp
stc
gs
push
push
test
insl
ror
rcrb
mov
int
addr16
imul
shll
mov
lods
add
jg
in
ret
sub
lods
push
nop
add
lret
fstpl
add
mov
xor
gs
adc
jae
lods
xchg
mov
jno
test
sbb
out
xchg
mov
fs
pushf
sub
sbb
add
add
out
lret
lods
xlat
sti
mov
cmpsb
dec
aad
add
repz
add
xchg
sbb
fists
iret
mov
push
xchg
test
pop
int
iret
movsb
popf
clc
xchg
and
adc
loopne
fisttpl
xor
ret
push
das
lret
jne
adc
fsubr
aam
pushf
mov
mov
pushf
clc
sub
inc
aas
mov
sub
mov
pop
adc
dec
test
movsb
add
jns
ja
je
repz
test
push
imul
push
jnp
dec
xchg
aad
into
lcall
sbb
dec
sbb
ljmp
mov
inc
sahf
jl
cmp
out
and
cli
mov
in
xchg
xor
orl
or
cmp
pusha
fwait
in
sub
inc
lcall
jbe
and
fcoms
xchg
mov
imul
ja
jne
outsl
dec
imul
jg
vmaxss
adc
gs
mov
mov
mov
jbe
add
cs
addr16
jl
sbbb
mov
push
jg
sahf
dec
jae
xchg
xchg
je
aam
repnz
pcmpgtd
in
xchg
cmp
fdivrl
cmp
sbb
push
mov
mov
xor
scas
shrb
cmp
lds
pop
jmp
adc
in
rorl
sbb
pop
arpl
push
inc
mov
adc
add
jg
xchg
cmp
jmp
xchg
cltd
dec
cli
sbb
sub
xlat
in
add
push
adc
call
ret
test
push
enter
lret
in
scas
pusha
into
stos
push
add
out
xchg
mov
cmp
inc
sub
stos
sub
sbb
fwait
dec
scas
mov
int3
pusha
in
int
lahf
push
sub
pusha
xchg
fcompl
mov
inc
mov
imul
pushf
gs
push
cmp
push
rcrb
xor
repz
lret
jge
add
add
gs
std
jmp
sbb
pusha
mov
scas
sub
popf
subb
adc
mov
mov
xchg
out
adc
and
std
bound
test
xchg
shrl
pop
push
outsl
pushf
mov
adc
in
fs
icebp
fs
movsl
pop
jle
fldenv
jmp
mov
aaa
lcall
push
inc
ret
push
into
fistps
or
dec
jp
pusha
insl
and
and
data16
push
imul
jle
cmpsb
fwait
mov
dec
cs
dec
xor
aas
out
push
mov
inc
jne
aaa
jbe
cwtl
sub
mov
cmp
inc
inc
and
andb
cmpsl
inc
sub
mov
bound
xchg
in
cmp
jnp
gs
and
mov
lret
mov
pop
sbb
inc
nop
jecxz
cmp
ljmp
int
in
dec
out
xchg
aaa
sbb
in
add
out
xchg
stos
jb
cmp
out
sbb
inc
inc
pushf
push
dec
cmc
jnp
and
int
xchg
repz
clc
mov
scas
add
push
xor
mov
pop
or
jmp
nop
mov
int
cmpsb
addps
mov
jb
push
mov
push
mov
mov
sub
popa
jle
sarl
dec
sbb
mov
inc
xchg
jecxz
fidivrs
popa
pop
mov
popf
insl
inc
cmp
pop
aad
dec
aaa
arpl
div
hlt
fldt
inc
lret
int
or
mov
dec
cmp
and
jno
xchg
loop
and
sbb
addr16
addr16
pushl
cwtl
out
mov
stc
sub
stc
lret
jl
inc
and
jecxz
xor
and
nop
mov
popf
adc
out
add
cmp
mov
mov
call
inc
roll
mov
sub
push
mov
dec
hlt
pop
cmpl
fs
test
ss
loope
lcall
out
mov
jle
shr
mov
inc
fisubrl
xor
mov
retw
mov
or
adc
inc
leave
test
in
shrl
arpl
rorb
cld
and
ret
push
sti
jle
cmpsb
dec
jle
add
inc
aaa
mov
jecxz
je
cmpsb
push
xchg
mov
int3
wbinvd
cmc
pop
fistpl
add
add
add
loop
bnd
fcomi
mov
dec
sub
add
add
add
ret
inc
pop
mov
adc
push
and
sbb
clc
scas
gs
fnstcw
inc
repnz
push
lret
xchg
jae
push
movsl
push
cli
adc
stc
mov
enter
mov
mov
lcall
sbb
mov
dec
lret
cmpsl
inc
push
out
xchg
cld
pop
call
push
cwtl
jnp
testb
das
insb
sahf
inc
adc
std
adc
mov
cmp
jecxz
je
mov
cmp
jb
stc
and
shll
sub
push
or
xchg
dec
or
fwait
les
jo
movsl
xor
jmp
jb
push
ljmp
mov
xor
movsb
jecxz
or
es
aaa
lret
adc
aam
mov
pop
inc
cwtl
dec
or
inc
push
fistps
insb
scas
inc
iret
mov
sahf
mov
mov
jb
in
sub
mov
aam
pop
pop
inc
int
mov
enter
push
sub
pop
nop
inc
sahf
lret
cmp
es
imul
rcrl
sub
in
in
jno
bound
outsb
aaa
or
sub
in
pop
jb
into
lcall
add
push
dec
xchg
int3
fs
insl
mov
jbe
test
ja
insl
cli
add
inc
fwait
gs
cmpsb
sbb
roll
pop
lret
or
in
outsb
xchg
adc
mov
mov
sbb
popf
lea
cmpsb
es
push
mov
lods
add
jecxz
pop
loope
and
lret
icebp
test
pusha
iret
and
jge
push
and
repnz
xchg
and
push
push
test
fsubrl
jle
leave
popf
pop
test
repnz
jo
mov
adc
and
inc
cmp
pushf
xor
adc
mov
xlat
jno
mov
orb
aas
mov
pop
pop
xchg
sbb
inc
orl
xchg
pop
andb
push
shlb
mov
int
mov
icebp
adc
mov
inc
aaa
push
in
sahf
push
decl
lods
cmpsl
std
into
sbb
in
hlt
cmpsb
push
xchg
sub
outsb
push
push
sti
or
in
stos
and
les
mov
sbb
push
je
sahf
cmpsb
or
loop
inc
sub
xor
mov
hlt
sub
lahf
add
loope
pusha
adc
adc
pop
pop
sbbb
fldt
mov
sti
sahf
add
icebp
cwtl
push
fsts
and
pop
imulb
inc
pop
dec
cmovae
mov
repnz
filds
ret
xchg
cmp
sub
pop
add
fdivl
and
dec
lds
pop
cli
jnp
mov
pop
and
sbb
fs
in
in
jo
cmp
cmp
pushf
mov
mov
fisubs
mov
test
hlt
and
ret
into
sub
enter
ss
inc
adc
jge
pop
fisubs
adc
sbb
mov
jnp
in
insb
popf
insb
push
das
pop
push
jnp
je
orl
gs
jno
call
cmp
cld
dec
or
test
or
cltd
fmul
out
enter
adc
sub
or
mov
pop
inc
lcall
lret
add
sbb
mov
sbbb
cld
fcomip
lds
push
stos
push
mov
xor
sbb
xor
negb
dec
cltd
cmp
jp
out
push
enter
add
adc
insb
ret
cmc
add
cmpsb
clc
hlt
xchg
or
push
sti
les
fincstp
ret
aas
sub
xchg
jmp
jne
andl
mov
ljmp
adc
push
cmp
cmpsb
xchg
xchg
pop
das
dec
cwtl
cwtl
mov
mov
push
lods
fsts
daa
sbb
out
fistl
pop
lods
sbb
call
std
cmp
lret
movsl
jge
ret
dec
adcb
mov
and
cmp
scas
dec
xchg
and
bound
lds
xor
push
jnp
xor
aaa
mov
scas
mov
shlb
outsb
xor
jle
jae,pn
push
fldcw
femms
mov
mov
cltd
push
or
and
imul
xor
repz
jne
xchg
fisttps
in
jns
mov
adc
add
add
add
ss
in
inc
lcall
add
add
add
gs
push
jmp
push
mov
adc
fildll
inc
inc
aad
mov
dec
sub
mul
jns
sbb
push
cmp
shrl
dec
inc
or
push
fnclex
out
loop
in
fs
fsts
xchg
popf
nop
lret
test
outsl
push
leave
jns
out
into
inc
mov
in
adc
xlat
loop
inc
into
movsb
pop
sti
rolb
xchg
dec
pusha
gs
les
cmp
cld
pusha
pop
sub
sub
call
push
push
out
xchg
sbb
aad
cmpsl
mov
lds
jb
mov
cmp
mov
push
cmp
jns
test
je
movsb
push
fsubr
pushf
adc
push
mov
fisubrl
test
adc
sbb
or
pop
adc
shlb
ffree
adc
out
sahf
in
test
xor
xchg
xchg
sub
cmpsl
sub
cmp
fidivrs
jg
ret
into
inc
scas
jmp
xor
jp
pushf
dec
dec
mov
push
insb
inc
push
push
bound
sub
stos
push
rcrb
loop
inc
sub
sbb
mov
or
movsb
dec
fildll
scas
mov
lods
mov
mov
xlat
cltd
inc
dec
sbb
push
add
js
outsl
adc
or
rclb
push
inc
movsl
add
xchg
adc
leave
adc
lock
add
sub
xor
inc
daa
test
pop
sub
lods
testl
icebp
xor
xchg
aas
enter
sbb
movsl
cli
fsubrl
lods
imul
loop
lea
lds
les
mov
xchg
and
iret
xor
push
push
and
dec
xor
jns
pusha
xor
jmp
dec
test
fiaddl
stc
test
ret
lds
jl
sub
sub
pop
divl
gs
leave
inc
into
aad
xor
adc
stc
mov
std
out
ljmp
sub
sbb
movl
movsl
and
loop
je
lods
mov
xchg
jge
xchg
pop
inc
outsl
push
jl
test
adc
mov
xchg
sub
lret
push
push
ja
gs
push
mov
loop
mov
push
and
ss
ss
cmpl
movsb
xchg
pop
fmul
mov
aad
mov
sub
ret
test
in
pop
mov
in
dec
sub
push
lds
xchg
faddl
cs
test
pop
sbb
lcall
gs
jg
jp
jmp
clc
mov
mov
movsl
loopne
test
adc
xchg
cmp
inc
scas
cmp
iret
aam
decl
divl
push
sub
shll
test
jb
test
cltd
mov
std
xchg
sbb
jp
xchg
aaa
popa
jge
mov
mov
mov
popf
aas
mov
mov
pusha
sub
out
adc
shlb
pop
fwait
inc
sub
das
mov
xor
ret
mov
mov
xor
or
xchg
sbb
cmc
adc
loopne
rcll
xlat
pop
out
xor
mov
mov
xorb
cmp
pop
sub
push
dec
testl
dec
pop
gs
xor
rcrb
xchg
movsl
xchg
popa
add
mov
mov
dec
mov
mov
sub
popa
lahf
enter
iret
add
mov
ds
xchg
leave
in
cmpsb
xor
sarb
in
mov
imul
fldl
cmpsb
push
xor
into
lret
inc
dec
leave
mov
add
mov
xorl
dec
push
sub
and
xchg
sub
out
ljmp
sub
cmp
dec
mov
imul
cmp
push
icebp
xchg
mov
adc
push
daa
out
jbe
jp
mov
shlb
cmp
jle
jmp
stc
sbb
icebp
sub
repnz
int3
sbb
test
aad
inc
aas
sub
pop
cli
daa
test
push
test
popf
imulb
and
incb
cwtl
out
lea
lock
mov
push
mov
in
popf
popf
fnstcw
popf
cmpsl
or
in
cmc
lret
sbb
mov
pop
push
add
rcr
int
lahf
and
sbb
adc
fisttps
push
cltd
out
xchg
xchg
outsl
dec
add
adc
pushf
fs
test
inc
out
add
add
add
roll
scas
mov
add
add
add
pop
xor
jbe
fs
mov
adc
and
pop
sti
movsb
add
cmp
mov
hlt
xor
adc
jne
out
nop
addr16
mov
lea
mov
enter
call
fnsave
xor
fwait
mov
and
xchg
jno
daa
aaa
lret
test
iret
sub
xchg
sbb
xor
in
addb
and
add
inc
dec
les
inc
mov
aas
sarb
addr16
cmpl
sbb
aaa
jle
adc
xchg
push
or
inc
sti
cltd
aam
xchg
inc
jl
gs
pop
outsb
mov
add
loop
rorl
jns
sbbl
adc
scas
cmp
mov
push
jno
cmpsb
jno
sbb
push
pop
or
jmp
call
cld
lds
sbb
outsl
dec
enter
pop
scas
and
popa
pop
push
fisubs
inc
sub
or
flds
dec
push
xor
add
ds
pop
jne
stos
gs
out
repnz
jb
int
xchg
or
add
xorl
xchg
loop
call
sbb
lock
or
sub
adc
pushf
ds
dec
or
push
mov
sarl
xorb
fs
fisubl
test
dec
push
push
mov
lcall
adc
add
xchg
xchg
xchg
mov
xor
xor
rcrb
fdivrs
xor
paddsb
mov
add
pop
js
or
pop
in
xchg
pop
xor
mov
sub
xchg
int3
inc
or
gs
sbb
jl
enter
into
jbe
scas
adc
inc
push
add
mov
mov
mov
jp
jp
mov
mov
cltd
cmpsb
mov
jge
mov
cmpl
int3
rorl
fildl
or
pop
pop
adc
lret
insb
xchg
fcmovnb
jnp
xchg
or
mov
xor
leave
xor
dec
adc
sbbb
sbbl
ss
mov
sbb
push
mov
pusha
add
mov
lret
mov
cwtl
call
sbb
xchg
jae
xorb
cwtl
shrb
mov
cmp
cmp
adc
cli
ret
jecxz
cwtl
pop
stos
sbb
jge
mov
outsb
push
movsb
cmp
dec
jge
mov
ja
jmp
pop
push
mov
icebp
out
imul
add
jae
bound
or
xchg
outsl
sub
aas
mov
inc
mov
or
dec
jl
outsl
adc
xchg
fisubrl
jb
mov
arpl
mov
sti
stos
mov
fcomip
hlt
jp
pop
jp
out
int
std
pop
fs
nop
pop
cvtdq2ps
es
cmc
cmp
xchg
push
incl
aaa
cmp
cld
sbb
loope
jecxz
es
xchg
mov
jo
xchg
add
add
mov
and
fcoml
les
and
pop
xor
xor
jns
pop
or
ja
sbb
outsb
jmp
movsl
daa
jnp
sbb
mov
xor
and
pop
push
pop
in
mov
fdivrp
mov
pop
dec
in
icebp
jge
xchg
leave
mov
jns
outsl
inc
bound
and
xor
pop
ja
out
add
int
jnp
jns
inc
add
xchg
xor
pushf
flds
mov
aam
or
or
loope
insl
sbb
hlt
mov
cmp
and
pop
imulb
les
ss
aam
aaa
lret
jne
jnp
insb
or
roll
in
jge
jbe
sub
or
pop
mov
sahf
mov
xor
jle
shlb
movsl
sbb
xorb
push
in
mov
in
jg
push
mov
push
sub
jecxz
xor
and
lahf
adc
out
sub
stos
sub
iret
or
outsb
mov
mov
cs
mov
add
xor
shrl
add
stos
mov
cmp
inc
pop
sbb
aad
test
test
sti
push
add
mov
fldt
mov
jl
subb
cmc
add
aam
sub
inc
rorl
add
sbb
add
add
add
xchg
std
repz
inc
les
lret
ja
jmp
add
shl
cmp
adc
out
les
clc
add
and
gs
and
imul
mov
inc
sahf
xchg
call
mov
sarb
lret
xchg
push
ljmp
mov
ja
xlat
sub
jnp
mov
mov
push
jb
sti
stos
pop
xlat
and
add
add
mov
jl
inc
movsl
rcll
cmp
pop
fsubrs
mov
outsl
mov
outsl
add
cmpb
mov
ljmp
cmc
pop
rorl
xchg
scas
mov
add
jo
stc
or
arpl
outsb
jmp
rcrl
pop
dec
push
mov
fs
inc
cwtl
pop
add
test
fnstenv
jne
loopne
es
cmove
cmpsl
cmp
pop
in
je
pop
ret
jbe
push
inc
lods
lds
sbb
inc
jle
pop
jl
es
outsb
ficompl
push
clc
outsb
popa
lea
out
and
sbb
jbe
sbb
repnz
xchg
aad
sbb
lcall
in
insl
js
movsb
enter
jle
jae
push
mov
outsl
dec
shrb
mov
xchg
mov
fstp
cltd
pop
sbb
aaa
mov
ja
stos
dec
add
dec
loopne
fwait
cld
insb
ss
or
cmp
movsb
jl
mov
iret
or
sub
out
or
xchg
insl
imul
jmp
aam
es
scas
add
adc
cld
jg
xchg
push
pop
sbb
fwait
dec
jb
dec
pop
lds
inc
xor
lods
divl
push
mov
jmp
dec
sub
xor
and
xor
adc
cmp
push
dec
and
push
movsl
cmp
cmp
mov
aam
push
inc
repnz
jb
lea
jo
xor
jmp
dec
clc
sti
loopne
insl
popa
sbb
pop
push
popa
inc
movsb
xchg
push
cmp
scas
in
or
pop
mov
sbb
mov
lock
out
leave
mov
jecxz
push
out
add
mov
inc
inc
sbb
mov
test
sub
sbb
lods
adc
mov
in
icebp
out
push
inc
mov
fmuls
xchg
seta
xchg
adc
sbb
push
jns
data16
leave
inc
imull
hlt
and
enter
movsl
sti
lret
cmp
adc
leave
popa
hlt
insl
cmpsl
aaa
jle
out
je
xchg
jp
mov
cwtl
ss
mov
push
inc
pop
xchg
ss
jmp
and
mov
arpl
imul
mov
inc
shl
inc
cmp
mov
mov
mov
clc
cmc
dec
ds
call
mov
inc
test
jno
and
fdecstp
cwtl
push
push
jecxz
sbb
lea
loopne
mov
stc
arpl
adc
fwait
test
mov
sbb
push
mov
jl
jp
icebp
inc
arpl
les
les
dec
ss
test
add
iret
push
pop
test
mov
in
push
pop
and
sub
cmc
inc
dec
insl
xchg
mov
rclb
dec
push
mov
sub
and
push
cmpsl
cmpsl
add
decl
mov
fwait
stos
xchg
and
mov
mov
sub
dec
cmpsl
adc
rolb
cmp
mov
jg
pop
shll
insl
stc
test
ss
out
cld
call
xchg
dec
testl
adc
scas
scas
stos
lcall
mov
sarl
cmp
fwait
sub
pop
pusha
stos
jmp
xchg
push
arpl
scas
popf
mov
test
push
and
ja
mov
cmp
fcomi
dec
outsl
pop
sub
or
mov
push
jmp
add
xchg
and
push
je
jbe
sub
inc
pop
scas
mov
repz
jnp
inc
stos
ja
cwtl
enter
mov
adc
loopne
dec
faddl
rolb
js
stos
jg
fs
push
shr
mov
jp
dec
scas
mov
in
outsb
sbb
cmp
enterw
insl
lods
add
loop
push
mov
loope
sbb
push
cli
mov
fldl
xor
fistl
pop
imul
jge
movsl
xchg
arpl
fistpl
addr16
sbb
pop
cmp
lret
popf
sbb
jg
nop
in
shlb
cld
cmc
or
pop
sub
enter
aaa
dec
add
add
add
les
std
mov
gs
add
add
add
mov
movsl
fcmovb
xchg
lds
mov
xchg
arpl
xlat
sbb
fcomi
test
adc
icebp
jb
adc
popa
push
mov
aaa
mov
inc
inc
mov
mov
in
pop
jge
pop
inc
jns
dec
or
rol
shll
aad
inc
jb
xchg
pop
xchg
adc
jge
rorb
shll
xchg
mov
nop
jbe
push
cmpl
sbb
and
ja
imul
or
inc
add
jb
shlb
pop
mov
lods
push
xchg
dec
rorb
sub
add
jb
fs
cs
scas
rol
inc
subb
pop
dec
insb
sub
or
inc
loop
dec
or
jecxz
or
jle
dec
push
leave
pop
jns,pn
hlt
enter
cmp
lret
push
std
stos
pop
jle
je
mov
les
sbbl
outsb
add
mov
stos
and
sbb
xchg
das
xorb
rcrb
in
mov
out
mov
dec
mov
scas
pushf
push
add
cmp
les
popa
ja
xchg
je
pop
aaa
sahf
and
add
call
into
scas
mov
pop
adc
pop
outsb
popa
mov
jne
cli
aam
loopne
scas
sbb
lcall
scas
cmc
fldl
movsl
pop
sbb
push
mov
dec
xlat
xchg
int
imul
mov
mov
inc
dec
in
adc
loopne
add
lahf
pop
bound
loop
add
or
out
int
push
sahf
jno
je
pusha
bound
in
les
aaa
pop
push
outsl
in
jbe
sar
outsb
cld
rcrb
stos
rorb
repz
mov
xchg
push
push
ds
stos
addr16
pop
movsb
sub
das
aaa
insl
std
les
add
enter
fisttpl
mov
fists
inc
xchg
mov
fdivl
or
xchg
rclb
cli
add
cmp
lret
mov
gs
push
daa
add
inc
cmpsb
jl
lret
hlt
les
xchg
rcrl
int
jmp
in
lea
xlat
jb
mov
pop
pop
cmpsl
cmpsl
push
pop
cmp
adc
inc
push
mov
fistpl
add
xlat
mov
mov
sbb
stos
sbb
setnp
lcall
out
push
rcl
adc
addr16
fcoms
mov
fidivrl
sub
mov
sbb
fsubl
mov
jg
pop
fs
add
mov
xchg
test
jb
adc
xorl
je
addr16
pop
sbb
pop
les
in
pushf
addr16
xchg
pop
popf
sub
push
lea
inc
pop
shl
and
movsb
mov
xor
pushl
fisubl
ss
pop
inc
push
jb
sub
cmc
pop
aam
imulb
in
lds
dec
push
xlat
inc
outsl
je
int3
pop
int3
scas
cmp
test
pop
pop
xchg
inc
jmp
mov
in
lods
fsubrl
mov
push
ss
add
movsb
aas
dec
iret
xchg
jb
in
fucomi
loop
jecxz
add
dec
adc
xor
inc
dec
test
insl
and
xor
xor
xchg
mov
mov
mov
or
orl
add
jmp
sbb
cltd
mov
loop
insb
jmp
xchg
sbb
add
in
js
jo
out
mov
aad
or
xchg
sub
xchg
loop
or
add
clc
cld
xor
push
ret
inc
xchg
lret
jbe
cmp
xchg
or
clc
out
sub
mov
xlat
sub
lret
js
inc
xor
int3
or
ds
mov
scas
push
lock
fcmovb
or
mov
mov
in
popa
xchg
sbb
cwtl
add
lock
cmpl
push
es
sarl
xlat
pushf
js
xchg
xor
sbb
fdivrl
mov
or
mov
loop
rclb
dec
jecxz
popf
and
lods
popa
les
add
inc
and
or
movsl
pop
sbb
outsb
fsubs
aam
jae
sub
jg
dec
xchg
xchg
inc
hlt
xchg
fstpt
enter
movsl
ficoms
rcrb
push
ret
js
popa
mov
mov
and
push
mov
cmc
or
lret
dec
inc
add
outsl
xor
push
mov
lret
mov
or
mov
pop
mov
add
add
add
push
dec
shr
jg
push
mov
adc
xchg
add
repz
add
enter
movsb
adc
mov
adc
andb
scas
mov
std
into
mov
imul
add
push
int3
xchg
popf
and
pop
dec
add
add
icebp
cmp
stos
leave
into
or
ja
pop
inc
dec
jno
mov
in
imul
cli
fiadds
arpl
movsb
daa
jecxz
mov
pusha
or
xor
shlb
push
lret
iret
add
into
push
mov
sbb
outsb
sub
ss
fstp
dec
pop
leave
leave
out
pop
lcall
shl
mov
iret
xchg
inc
mov
inc
push
jns
popa
cmp
push
outsl
jmp
or
arpl
mov
sub
jno
cmpsb
xchg
xchg
dec
out
push
and
xchg
jp
std
cmpsl
loop
mov
pop
and
sbb
jp
sbb
and
mov
xor
sub
rorb
mov
mov
and
pop
dec
aaa
jmp
sbb
leave
ss
pop
mov
mov
ja
inc
jle
and
into
nop
sbb
icebp
mov
pusha
insb
mov
imul
pop
inc
add
cmc
fisubs
adc
cld
idiv
mov
and
fadds
dec
sub
arpl
in
pop
out
cs
nop
sbb
sub
fisttps
sub
mov
and
push
sti
out
pop
xor
imul
outsl
neg
adc
adc
push
lea
mov
in
outsb
mov
hlt
push
test
out
testb
mov
outsl
adc
sub
or
loopne
leave
sub
dec
sarl
aad
clc
loopne
test
push
push
ja
dec
movsl
sub
push
lcall
dec
ja
leave
loop
adc
movsl
mov
or
mov
mov
pop
sub
sbb
sub
xchg
mov
push
pop
jns
mov
xchg
mov
mov
mov
das
lods
jbe
insb
inc
xchg
or
subb
push
and
shl
daa
pop
orl
push
rcrl
mov
out
mov
push
dec
hlt
dec
ds
dec
test
jecxz
loope
rol
lret
sbb
arpl
and
insb
and
popf
fisubs
jns
cmc
int
push
add
notl
mov
ss
sbb
test
adc
jp
insl
lds
inc
lods
bswap
add
test
jp
jle
mov
rolb
inc
pop
sbb
jno
fldcw
movsb
rolb
jmp
add
mov
enter
clc
mov
xor
adc
push
sub
lcall
and
adc
movsb
sarl
adc
fcmovnbe
mov
movsl
enter
jp
je
and
ja
scas
in
out
repz
fimull
popf
cmc
outsl
hlt
cmp
cmpsb
adc
adc
jp
pop
ret
hlt
xor
jecxz
pop
mov
push
test
ret
mov
call
cmp
mov
or
sbb
imul
pusha
loop
jecxz
mov
test
icebp
aaa
test
mov
outsl
jge
mov
push
xchg
xchg
out
repz
pusha
shll
fwait
iret
cmc
push
jae
push
dec
ljmp
sub
iret
cmpb
outsb
lahf
pusha
xchg
xchg
aad
pop
je
loope
sbb
xor
jge
shlb
imul
mov
inc
decl
outsl
in
push
mov
sbb
daa
les
scas
lods
dec
mov
pop
mov
in
adc
ret
xchg
imul
movsl
xchg
aad
les
loope
es
mul
sbb
jge
xchg
sub
jo
add
movsb
mov
in
mov
rcrl
and
movl
cmp
mov
inc
ss
push
dec
mov
xchg
push
mov
inc
push
int3
repnz
or
push
push
inc
push
js
push
lret
in
shll
ret
repnz
add
cmp
xlat
cmc
repz
sbb
rcl
fisttpl
clc
lds
push
jnp
jge
cld
adc
into
pop
mov
inc
xor
in
xor
js
inc
fisubl
inc
sbb
arpl
clc
dec
dec
insl
push
cmp
sti
insl
out
repz
adc
cmc
mov
or
jp
push
pop
mov
dec
je
fildll
inc
aas
pop
cmp
xchg
xchg
lahf
mov
dec
cmp
pop
inc
mov
ja
add
add
movsl
push
movsl
shl
divl
fwait
mov
add
add
add
adc
lahf
repz
cmpsb
jne
shlb
mov
xchg
fcom
dec
andl
push
and
adc
sbb
and
popa
imul
jmp
stc
in
mov
test
lret
test
into
pop
cmp
inc
in
iret
cmp
adc
lret
cltd
sbb
sub
inc
inc
jnp
cltd
xchg
fidivl
aad
inc
pushl
mov
loop
sub
pop
stos
cmp
addr16
dec
pop
dec
xlat
bound
daa
mov
mov
xor
push
loop
push
inc
sbb
cmp
push
pop
dec
mov
sbb
sub
aad
pop
lea
xchg
sahf
fbstp
lock
dec
jbe
or
mov
shll
or
or
mov
cld
cli
jecxz
out
add
cli
mov
mov
int
testb
adc
xchg
or
ret
movsb
je
cltd
cmc
in
lret
dec
mov
std
hlt
aad
push
cmc
adc
cli
cli
jle
sbb
sub
jns
sbb
insl
xor
sub
mov
mov
add
loop
std
pop
xlat
les
mov
leave
lahf
jecxz
and
test
shll
mov
test
js
or
ss
dec
mov
repz
sub
jmp
cli
pop
loopne
lods
ss
cmp
sbb
mov
ljmp
xor
ljmp
xor
adc
cltd
cs
mov
in
in
icebp
xchg
push
in
outsb
mov
xrstor
mov
push
int
xchg
push
sahf
xor
hlt
or
add
jno
sub
divps
test
push
dec
push
mov
xlat
ja
jmp
test
mov
in
sti
cmp
shrb
fldenv
jo
inc
gs
insb
jae
mov
leave
stc
inc
call
mov
mov
jns
xchg
add
inc
push
cs
out
dec
outsb
in
test
shll
jne
movl
cmp
js
mov
dec
inc
outsl
jo
movsl
xor
push
ss
xor
jge
cltd
loopne
lahf
cmpl
cmp
push
cmpsb
dec
pushl
ljmp
dec
add
sbb
sub
or
jmp
jnp
dec
inc
pop
rclb
push
sarl
xchg
repnz
lret
pop
lods
aaa
jmp
push
out
out
add
int
push
rclb
push
cmp
out
outsl
pop
rcr
mov
or
lock
rorl
je
xor
cmp
cmpsl
test
push
mov
es
dec
stos
pop
cmp
push
je
lock
cmp
jmp
mov
jns
scas
sub
mov
xor
push
ljmp
jle
sub
push
int3
sbb
mov
mov
lret
pop
cmp
push
fnstsw
pop
sbb
addl
inc
sbb
sub
xchg
or
cmp
sbb
in
push
add
call
mov
jno
mov
inc
xor
lds
pushf
imul
dec
push
cltd
pop
mov
por
icebp
loop,pt
mov
cmc
sbb
insl
ret
mov
jmp
cltd
lods
or
lret
hlt
lcall
stos
lea
jge
sbb
or
out
pop
call
data16
es
push
cltd
xchg
pop
mov
in
jge
aam
xchg
jecxz
jno
cmp
sti
xchg
jl,pn
into
call
loop
cmp
popa
jmp
fadds
jo
daa
mov
popl
mov
sbb
pop
xor
lock
mov
in
out
fcomps
int
xor
mov
daa
dec
sub
fimull
fiaddl
pop
insb
jo
jecxz
cmc
cltd
sbb
fsubl
imul
fs
fsubr
xor
xchg
or
push
subb
mov
add
xor
fbld
sbb
cmc
shll
lcall
pop
sub
adc
mov
or
lahf
pop
repnz
mov
cmpsl
push
pop
mov
je
fcomi
mov
inc
sub
enter
add
add
add
