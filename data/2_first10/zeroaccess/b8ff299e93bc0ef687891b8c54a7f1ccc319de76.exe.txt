push
mov
sub
mov
movl
mov
mov
movl
movl
movl
cmp
movl
jne
mov
push
movl
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
mov
movl
xor
addl
mov
xor
push
movl
cmpl
je
cmpl
jne
push
pushl
push
push
pushl
call
mov
dec
mov
jmp
mov
xor
add
addl
movzwl
add
not
or
and
movzwl
xor
mov
sub
mov
adc
mov
sbb
mov
sbbl
push
or
mov
dec
movzwl
mov
sub
mov
mov
xor
or
add
movl
movl
mov
orl
mov
movzbl
or
lea
mov
mov
mov
addl
lea
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
movl
mov
mov
andl
xor
xor
andl
xor
andl
add
movl
add
div
movl
mov
movl
cmp
movl
je
movl
lea
sbb
mov
mov
jmp
popa
xchg
mov
mov
mov
lcall
in
jo
rcl
aad
ror
rol
pop
push
add
ljmp
adc
mov
add
mov
sbb
lods
sarb
or
sahf
jp
inc
lods
push
sub
mov
stos
js
roll
jmp
mov
dec
fcomps
pop
test
sub
mov
pusha
nop
mov
and
jmp
out
repnz
xchg
xor
jbe
xlat
and
add
adc
xor
or
fldl
xor
pop
push
or
pop
fstps
jno
mov
ja
sbb
xor
int
add
add
and
cmp
int3
sbbb
daa
in
push
xor
push
ja
inc
ds
cmpl
insl
mov
in
xor
out
sub
nop
add
or
push
push
aad
decl
xchg
jl
mov
repnz
xchg
and
sub
sbb
pop
adc
iret
mov
mov
sub
xchg
daa
push
ret
hlt
inc
in
out
mov
dec
jne
cmpsl
daa
loope
fdivs
out
out
les
jo
sbb
addb
lret
cmp
mov
xor
and
jl
leave
and
and
std
sbb
or
mov
imul
mov
mov
cmp
jmp
push
fcmovnb
mov
xlat
les
test
jg
jo
jg
jo
outsb
xor
push
push
stos
int3
lock
fcompl
jge
push
push
cli
lods
pop
jae
into
and
repnz
mov
sub
inc
stos
add
or
sub
popl
out
jne
idivb
pop
adc
test
lods
push
sub
aas
jmp
rorl
fsubp
mov
cli
cwtl
xor
cmp
mov
adc
dec
lock
loopne
mov
es
push
jg
cwtl
dec
cmp
daa
xchg
dec
outsl
push
adc
hlt
lods
pop
pminsw
sbb
mov
ljmp
in
pop
cmp
pushf
pop
scas
scas
rcl
enter
pop
int
ja
fsts
xor
mov
ficompl
hlt
and
jnp
sbb
pop
inc
ret
and
sbb
push
fmuls
in
lahf
jl
iret
das
add
nop
cmpsb
mov
mov
test
jnp
fcomp
push
adc
sub
ljmp
icebp
push
cld
fs
add
cld
sbb
fbstp
jnp
mov
ja
dec
clc
fistl
addr16
out
push
loop
sub
xor
adcb
je
add
xchg
cmp
mov
repnz
pop
je
mov
orl
jmp
mov
add
cmp
je
mov
andl
jmp
mov
mov
or
cmp
je
mov
xorl
jmp
mov
mov
xor
mov
mov
add
cmp
je
mov
xor
add
mov
mov
mov
mov
xor
mov
add
jmp
clc
repnz
icebp
pusha
xchg
rcll
cltd
cld
in
jle
jo
jg
jo
push
mov
jmp
mov
and
mov
js
outsl
imul
sub
bound
dec
xchg
xor
xor
add
icebp
nop
test
stc
dec
pusha
lods
xchg
mov
lea
imul
jle
cltd
jne
mov
fsubs
or
sub
push
or
lock
adc
xor
fs
jmp
push
dec
addr16
mov
lret
in
mov
cmpsb
arpl
fisubrs
pop
xchg
ret
and
mov
int3
pop
adc
dec
loop
out
mov
xchg
iret
jmp
sub
adc
xchg
xchg
fcomi
jle
mov
iret
daa
mov
and
js
xchg
mov
gs
sbb
push
stc
add
scas
stos
dec
mov
popf
adc
mov
sbb
es
mov
ljmp
push
negb
std
je
ss
test
int
out
cmc
jno
test
mov
pop
sbb
or
ljmp
mov
mov
inc
pop
out
gs
xchg
xor
xlat
dec
clc
rolb
sub
cmpsb
dec
cli
stc
test
shll
mov
push
xchg
push
mov
aas
adc
pop
loopne
sub
cmpsb
js
adc
mov
int
jge
mov
xor
lea
add
mov
mov
mov
xor
add
imul
sub
mov
jmp
mov
mov
jmp
pop
arpl
out
xchg
imul
jae
push
movsb
sbb
aas
jl
jo
jg
jo
or
or
sub
arpl
mov
mov
aas
push
xor
cmp
mov
lods
std
mov
sub
sbb
pop
mov
lret
fmuls
mov
cld
xor
ror
mov
loope
inc
imul
or
shl
dec
fistpll
into
cltd
mov
mov
dec
push
add
in
cmp
aam
mov
daa
mov
xor
ret
insb
dec
cmp
sbb
popf
or
mov
or
call
xchg
push
push
out
xchg
scas
or
inc
out
push
outsl
and
xor
fwait
sbb
mov
out
cmp
and
jmp
inc
mov
ljmp
ret
je
adc
and
lock
pop
fdivr
inc
mov
jb
out
aad
cmpsl
cld
fstpl
in
adc
cli
lcall
push
out
push
mov
mov
push
xchg
test
xor
scas
sti
gs
icebp
sbb
jae
inc
std
dec
mov
adc
icebp
fucomp
mov
or
xor
dec
fst
cmp
nop
mov
xchg
scas
xchg
mov
cmc
inc
dec
pop
adc
xorb
cmp
je
mov
addl
jmp
mov
cmpl
jne
mov
xor
add
test
jne
xorl
jmp
pop
pop
pop
leave
ret
push
mov
sub
leave
ret
push
mov
jmp
addr16
movsl
insl
jne
out
cmp
test
dec
movsb
jnp
jo
jge
jo
sbb
sub
cltd
inc
ljmp
dec
mov
cli
cmpsl
xor
and
dec
mov
sbbl
test
sbb
fldt
or
jb
out
inc
and
jo
hlt
pop
sti
test
or
jp
fwait
mov
ret
xor
sahf
inc
inc
incb
faddl
mov
out
jo
dec
sub
mov
mov
lock
and
fisubl
xor
and
pop
cld
inc
out
es
pushf
add
test
sbb
icebp
pop
dec
xchg
js
ret
in
pop
inc
xchg
add
add
mov
mov
push
xchg
fs
dec
pop
incb
ljmp
xchg
adc
xchg
aam
jne
popa
lcall
test
jle
mov
mov
test
and
lea
fs
aaa
jne
jnp
sub
push
es
jmp
or
mov
je
ficompl
fwait
mov
xor
xor
ja
push
lcall
mov
insl
dec
outsl
mov
push
or
cld
dec
lods
ds
ss
mov
pop
adc
mov
pop
nop
add
push
leave
pop
cmp
cmp
mov
inc
das
out
push
jp
cwtl
mov
out
fidivrl
es
or
lret
jnp
xchg
movsb
out
lods
notl
jb
or
ss
adc
sti
lcall
faddp
jmp
fnstcw
mov
mov
je
fcmovne
aas
sub
arpl
mov
hlt
mov
mov
cmp
faddl
cld
add
loop
jno
roll
das
xchg
mul
fcompl
addb
mov
cmp
sbb
cmp
hlt
mov
repnz
xor
or
mov
cmc
xrelease
ds
jmp
add
nop
inc
sbb
mov
jmp
push
add
lock
in
cmp
push
pop
add
adc
fwait
push
mov
addr16
test
inc
lock
cmp
sbbb
mov
inc
popa
jmp
and
mov
dec
rol
inc
push
jnp
xchg
mov
push
xchg
ffree
lahf
mov
movsb
and
bound
idivb
and
stos
cmpsl
xchg
inc
add
dec
in
outsb
jbe
scas
jo
movsb
ret
cmp
xor
cltd
jne
addb
rcrb
les
inc
es
imul
rorb
xorl
xlat
dec
popa
rcrb
repnz
jb
sub
lods
jecxz
test
lock
xchg
es
pop
lret
pop
add
mov
pop
mov
bound
stc
les
xor
push
xlat
mov
mov
cmpl
mov
pop
lret
aad
mov
add
xchg
cmp
cli
sbb
pushf
or
sbb
cltd
call
fstp
sahf
shlb
cmp
and
xor
cmc
shrl
sub
mov
jne
sub
iret
das
push
lret
sub
push
movsb
cmc
rcrl
out
mov
dec
cltd
frstor
sub
rorl
add
mov
cwtl
pop
sub
push
push
xor
mov
sub
mov
sbbl
jmp
add
arpl
dec
lret
cmp
jo
xchg
jge
jo
fdivr
sub
fisttpl
mov
dec
iret
dec
xchg
aaa
cmp
scas
pushf
adc
sbb
jle
add
loop
movsl
nop
lds
mov
cwtl
sub
xor
pop
lret
and
sub
push
mov
ret
adc
push
inc
xor
sub
sbb
cmpsb
sbb
cmp
adc
ret
adc
fcompl
jl
sub
aaa
adc
inc
cmp
repnz
add
push
mov
pop
lahf
pop
push
mov
or
xor
es
inc
mov
sbb
sub
lahf
jno
movsl
cld
rcrb
xor
jae
fmull
mov
jo
adc
jae
movb
pop
mov
into
clc
dec
outsb
xchg
repz
cwtl
scas
addr16
jns
xor
adc
mov
popf
sbb
clc
lret
adc
or
addr16
xchg
jns
dec
jns
jae
jecxz
jnp
mov
jmp
scas
pop
xchg
in
fwait
das
pop
fmull
push
mov
push
notb
popf
ret
sub
ror
arpl
or
in
inc
jle
arpl
gs
mov
mov
mov
jecxz
push
scas
fiaddl
dec
shl
jmp
push
pop
shl
cli
dec
add
ljmp
mov
or
ret
xchg
les
sbb
push
mov
imul
aam
subb
lock
inc
and
lds
std
in
sbb
out
lret
and
enter
add
test
or
fwait
cmpsb
or
mov
dec
or
or
out
out
es
jp
lahf
add
sbb
mov
mov
cld
sti
xor
repnz
xchg
pop
add
das
stc
mov
std
in
inc
fsubl
xchg
xchg
jecxz
pop
cmp
cmp
xchg
push
shrl
insb
movsb
cwtl
dec
and
pushf
sub
sti
cmc
notl
popf
lahf
xor
repnz
or
idivb
mov
sub
cmpsl
jle
push
sub
out
mull
stc
mov
jb
in
mov
gs
in
je
int3
sub
push
mov
push
lret
int
and
aam
aad
dec
cwtl
imulb
mov
xor
popa
in
push
inc
inc
dec
aad
xorl
movsl
fcoml
sub
clc
call
mov
pop
mov
jne
in
add
int
inc
xchg
mov
lds
mov
add
test
into
xchg
repnz
mov
cli
adc
popf
stos
dec
dec
sub
cltd
dec
jmp
dec
push
mov
sbb
inc
push
lahf
in
test
fnstcw
and
dec
pop
aam
sub
mov
addl
test
ret
popf
mov
xor
pop
lods
cwtl
and
jmp
lods
push
repnz
push
pusha
in
lds
jecxz
sub
popf
inc
jecxz
negl
pop
adc
pusha
mov
sbb
mov
cmc
inc
repnz
mov
pop
lock
cmp
mov
mov
mov
cmp
xchg
dec
jnp
clc
and
out
sbb
lahf
movl
mov
mov
sbb
jmp
in
lock
mov
push
scas
int3
cmpsl
cli
mov
int3
push
add
jo
jge
jo
das
int3
sub
stos
lods
outsb
xlat
fbstp
push
into
dec
repnz
mov
lahf
push
rclb
js
push
xchg
mov
in
sbb
add
sysexit
je
sti
jbe
jl
and
inc
in
lea
inc
xor
inc
xchg
add
repz
fidivrs
or
xor
inc
call
je
xor
push
repnz
ja
lods
je
sub
mov
push
dec
mov
add
jg
xlat
imulb
enter
adc
pop
mov
ret
jge
movsb
jmp
jmp
mov
adc
aam
pop
popf
sub
jns
jae
mov
add
cmp
xor
push
adc
out
sbb
and
mov
dec
and
in
gs
xchg
or
imul
push
mov
dec
sarl
dec
lret
lods
mov
fcompl
lahf
add
mov
mov
out
add
adc
mov
sbb
sbb
and
loope
fistl
mov
mov
into
mov
jmp
mov
add
lods
or
je
pop
and
cmp
inc
jp
outsl
data16
sbb
mov
xchg
adc
aaa
cld
add
dec
fsubl
mov
fbstp
dec
fisttpll
insb
fdivs
sub
lods
cmpl
test
ficoms
ret
add
sqrtps
cwtl
test
loop
push
imul
pop
sub
jp
sbb
fstpt
and
cli
in
lds
mov
neg
xor
push
andb
xchg
shrl
mov
fwait
pop
inc
xchg
jb
stos
and
addl
loop
add
pop
xchg
and
cmp
sbb
lds
loopne
icebp
out
popa
push
test
ja
ja
cmp
into
jg
aad
push
lods
sbb
mov
dec
xchg
xchg
sahf
scas
or
arpl
mov
sbb
mov
or
aad
mov
mov
cmp
mov
lods
xor
ds
jns
jle
xchg
jecxz
jecxz
push
mov
add
lock
mov
sarb
lock
leave
stc
es
enter
fsubl
inc
mov
add
add
lret
pop
xlat
mov
ss
punpckhwd
sub
pop
xor
lea
jne
jmp
jecxz
cld
pop
cmpsl
inc
inc
idivl
clc
cltd
frstor
mov
enter
xor
fwait
push
push
lret
push
sub
out
pop
je
add
subl
push
jl
dec
add
and
mov
enter
mov
mov
ds
mov
dec
das
sbb
cmp
and
jns
adc
ja
pusha
push
movsb
ja
lahf
mov
cmp
test
mov
push
insb
mov
jnp
ret
adc
pop
outsb
pop
dec
xor
inc
lret
or
fildll
rolb
pop
sub
adc
stc
mov
inc
add
cmp
xchg
jb
or
mov
sub
push
add
mov
xor
and
mov
push
mov
addl
add
jmp
mov
cltd
or
or
sub
sub
jmp
jge
jo
push
scas
cmp
dec
shrl
pop
cs
das
sub
fidivrs
push
aam
mov
cmc
das
out
mov
call
inc
mov
movsl
xor
test
ja
pop
sub
mov
shll
xor
and
cmp
inc
and
lea
repz
lds
pop
ds
imul
gs
inc
pop
repnz
dec
mov
fs
and
scas
mov
sub
jg
rcrb
bound
and
cmp
pop
loopne
ret
insb
insb
inc
movsb
mov
pusha
cltd
add
packssdw
adc
adc
sti
dec
add
jns
outsb
fdivl
insb
mov
pop
sub
push
inc
gs
lds
sub
pusha
adc
loope
adc
cs
shrb
push
adc
cmp
and
jmp
lock
sub
inc
and
sub
sbb
leave
std
cmc
and
fwait
xor
cmp
pop
jnp
push
push
in
movsl
aas
xchg
sbb
mov
imul
push
imulb
push
or
jo
mov
fnsave
dec
inc
pop
dec
test
pushf
adc
fdivl
scas
std
inc
out
nop
push
mov
xor
fcmovb
out
push
push
xor
sbb
push
sahf
xchg
jg
dec
enter
inc
in
fnstcw
jge
pop
fimuls
push
adc
pop
stos
adc
lods
out
stc
arpl
mov
jbe
mov
out
xchg
xor
pushf
jne
or
fcmovnbe
dec
je
cli
jl
insb
adc
sahf
dec
push
test
or
jno
mov
mov
leave
and
sbb
lret
sub
idiv
inc
jnp
push
out
cmp
in
subb
test
ret
pop
stos
lret
lods
test
xor
or
in
or
mov
in
push
ja
inc
repnz
adc
and
and
and
call
push
mov
adc
or
pop
rcrb
lds
sti
cmp
loop
test
mov
inc
pusha
test
nop
std
pop
sahf
cmp
into
fnstenv
dec
repnz
cmpsl
test
pop
repz
faddl
idiv
add
or
cmp
or
pop
lods
lods
jl
mov
dec
push
aad
sahf
test
clc
pusha
out
jne
ss
fnstsw
push
cmpsl
jno
jge
xchg
loope
hlt
sub
sbb
sbb
inc
out
pop
mov
jno
adc
repnz
push
enter
and
mov
sub
hlt
nop
xchg
xchg
cli
shll
or
xchg
pop
mov
in
es
xor
out
jg
std
pop
jg
jp
dec
jae
addr16
mov
push
scas
rcr
cmpsb
cltd
pushf
fdivl
dec
sahf
dec
int3
and
mov
insl
push
out
jae
push
fidivl
sbb
adc
mov
jle
int3
test
lret
jae
pop
pop
inc
xchg
mov
cmp
add
pop
push
add
je
and
mov
sbbl
mov
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
push
push
pushl
push
call
jmp
mov
sub
add
xor
adcl
add
movl
cmp
ja
push
jmp
mov
mov
jmp
mov
in
inc
sub
or
add
jo
jge
jo
or
iret
jo
or
popa
test
add
cmp
pop
sbb
aaa
mov
pushl
insb
dec
jmp
int3
bound
cld
and
daa
loopne
and
hlt
pop
das
inc
fsubl
or
aad
lea
das
cmp
and
add
xchg
dec
xor
push
int3
shr
fwait
fwait
mov
jp
jl
add
mov
cmp
adc
cmpsb
fnop
pushf
cmp
bound
daa
in
add
lods
jne
inc
push
sub
sbb
add
fwait
jno
push
aaa
call
jno
xchg
inc
sbb
sub
jns
repnz
gs
sbb
dec
jmp
movsb
test
stos
fwait
aaa
mov
test
xchg
jo
aaa
adc
inc
lahf
adc
sbbl
mov
lret
test
jecxz
or
dec
xor
push
xorl
mov
xchg
cmpsl
inc
xchg
cmp
mov
loopne
inc
ret
rorb
arpl
into
push
call
loopne
xchg
test
inc
pop
push
pop
out
lods
std
jle
sahf
into
mov
out
sbb
xor
mov
jmp
fstpt
add
mov
sbb
add
pop
mov
add
sub
pusha
imul
mov
lcall
mov
push
mov
sub
icebp
daa
pop
ja
stos
pop
dec
loope
jge
inc
mov
dec
fs
stos
xchg
xlat
add
pushf
pop
jle
push
mov
fmuls
les
lret
nop
sahf
sbb
test
stos
and
adc
push
in
mov
sub
sarb
jle
lcall
xchg
scas
push
loop
adc
in
add
and
jnp
fadd
shlb
out
cmp
loop
jecxz
movsb
ds
mov
movsl
imul
test
es
xchg
and
insl
cmp
clc
xchg
mov
xor
mov
daa
sbb
int
pop
in
imulb
daa
jecxz
inc
pop
dec
movsl
js
js
jnp
fstl
lahf
add
aaa
inc
push
daa
pop
push
mov
and
loopne
dec
lods
call
dec
pop
push
fcmovb
lcall
popa
xchg
jmp
dec
fcmovb
mov
mov
test
push
outsb
sahf
stc
xor
lahf
aas
inc
adc
jo
push
or
test
fsubrs
imul
pop
or
jge
cmp
inc
int
fwait
fs
ret
inc
lods
push
cmp
jle
jne
mov
xor
dec
mov
xor
xor
aam
jmp
pop
pushf
mov
mov
adc
sub
mov
cmp
inc
add
mov
dec
popf
adc
aam
and
js
scas
xchg
push
loop
mov
xchg
xor
popa
aam
jbe
add
jns
lcall
repnz
nop
or
cld
cmp
dec
add
push
push
lods
roll
in
pop
jmp
sti
ficompl
jmp
sti
stc
push
mov
fistl
fucomi
cmp
ret
pop
cmp
mov
shrb
sub
mov
loop
sbb
test
pop
adc
adc
fisttps
add
add
out
loopne
in
jnp
jmp
push
mov
or
xchg
jge
jo
fdivrl
mov
outsl
add
test
adc
ret
js
mov
pop
jmp
mov
aam
stos
fcmovne
call
test
andl
pop
outsb
xlat
cmp
fists
adc
mov
push
inc
adc
push
inc
pop
xchg
gs
xorl
adc
mov
mov
pop
jl
jnp
lods
idiv
add
mov
out
add
arpl
repnz
dec
mov
xchg
out
xor
cld
es
add
enter
inc
push
push
jecxz
xchg
adc
adcl
fisttpll
sbb
inc
sahf
mov
add
fbstp
cmc
push
sbb
subl
repnz
lods
xchg
xchg
outsl
mov
ljmp
sub
cltd
cli
pop
mov
enter
push
outsl
pop
testb
dec
out
push
repnz
sbbb
push
sub
add
repz
fisttpll
mov
movsb
cwtl
mov
mov
mov
data16
add
jns
jo
add
lea
popa
adc
imul
das
pop
push
or
lahf
dec
es
mov
test
out
popf
xchg
cmpsl
clc
pop
push
fcomps
cmp
rclb
out
mov
ljmp
out
jmp
lock
cmpsb
loope
cmpsb
int3
iret
lds
outsl
je
sub
stos
mov
cmp
inc
push
and
mov
and
std
mov
aad
mov
xlat
insl
xchg
fs
mov
daa
test
mov
sbb
xor
es
aas
jae
in
push
pop
and
repnz
stos
jo
das
xchg
into
fwait
fwait
das
push
fcmove
insl
sub
push
xchg
ret
push
sub
mov
imul
adc
sbb
inc
mov
inc
daa
jnp
leave
and
push
push
cld
cmpsl
mov
sub
fcompl
mov
sbb
mov
ja
je
xor
mov
loope
xor
xchg
mov
mov
icebp
xchg
das
mov
popa
push
stc
pop
jns
test
push
cmp
aam
cmc
adc
lea
mov
and
call
ja
push
cltd
imul
pop
mov
cli
add
inc
inc
push
shlb
aaa
jecxz
cmp
lret
movl
fsts
mov
ret
sub
aas
lds
cmpsb
ret
bound
push
aad
or
add
cmpsl
mov
jecxz
bnd
xchg
adc
adc
jle
push
std
loop
in
je
idivb
push
sbb
psllq
movsl
aam
adc
stos
pop
lock
je
jns
lret
or
mov
dec
pop
xorb
in
sbb
dec
sub
jl
loope
xor
hlt
aad
sub
mov
aam
adc
loopne
loopne
cmc
mov
sbb
mov
add
push
sbb
fistl
clc
inc
dec
mov
pop
dec
int3
popa
pop
mov
mov
jno
imul
lea
mov
xchg
loop
into
stos
cltd
sub
push
sub
and
push
dec
out
jmp
inc
pop
push
rclb
xlat
push
xlat
cmpsl
pop
xor
jmp
data16
in
int3
jne
popa
jno
imul
mov
adc
jo
clc
das
xor
movsb
mov
test
lods
sbb
mov
and
jb
movsl
rorl
fcmovnb
dec
in
mov
xor
adc
data16
sbb
aaa
mov
sbb
cmp
rorb
mov
mov
loope
sbb
adc
aam
xor
mov
adc
rcll
xchg
xchg
xor
cmp
jns
bound
add
mov
pop
cs
aas
jl
mov
icebp
std
fimuls
filds
mov
jae
loope
stos
jne
and
ret
scas
cmp
mov
dec
inc
icebp
aas
mov
cmp
fadd
xor
mov
in
out
sub
mov
dec
es
xor
pop
xor
jecxz
ljmp
call
add
xchg
adc
testb
xor
shlb
outsl
inc
and
cmpsl
sub
fcomps
sahf
adc
movsb
mov
nop
sbb
xor
sub
lea
push
sarl
add
pop
add
jp
push
rcrl
repz
add
mov
pop
sar
stos
aad
pop
test
sbb
sub
jl
inc
or
popa
pop
cmp
mov
lds
addr16
xchg
and
mov
and
and
es
stos
lret
loopne
aam
dec
pop
fldt
mov
xchg
sahf
mov
push
push
fdivl
ret
mov
lret
jnp
jns
xlat
lcall
pop
fimull
pop
fsubs
lcall
arpl
or
mov
cmp
cltd
std
into
inc
rolb
mov
jae
inc
nop
addr16
ja
adc
cs
cli
jo
lcall
xlat
lcall
mov
out
hlt
mov
sub
flds
jmp
xchg
mov
ds
negb
loopne
in
addr16
movsb
or
ss
popa
mov
js
out
dec
xchg
mov
jnp
in
inc
frstor
push
fwait
cwtl
fists
mov
cmp
cmp
fpatan
shlb
fwait
int3
sub
mov
pop
cmp
inc
mov
pop
pop
pop
mov
jl
fldt
pop
cmc
in
iret
ja
mov
push
jne
mov
push
repnz
cmp
mov
jae
hlt
lcall
add
jo
inc
das
mov
xchg
sti
push
fnstsw
dec
jb
clc
aas
dec
mov
jb
loope
idivl
icebp
cmp
add
pushf
dec
xchg
mov
enter
sbb
fisubrl
xchg
pop
add
mov
lods
adc
mov
and
cmp
xchg
test
int
repz
in
cmpsl
jbe,pt
call
inc
in
sbb
inc
xor
int
mov
hlt
mov
je
jne
stos
and
pop
popf
ret
test
fldenv
mov
jbe
mov
and
fs
sahf
mov
mov
xor
outsl
pusha
in
lcall
cmpsb
add
ljmp
in
adc
arpl
shlb
mov
jae
jecxz
imul
gs
fisubs
cs
out
add
mov
imul
mov
jmp
jle
mov
xchg
icebp
repz
sbb
jo
jge
jo
add
or
xchg
mov
cli
ret
mov
pop
cwtl
out
push
dec
dec
shrb
cmp
inc
mov
stos
sbb
aaa
jo
pusha
lods
aam
aad
inc
sbb
jp
ljmp
xchg
mov
mov
jne
add
insb
test
aaa
jle
nop
pop
cmpsl
lds
jo
inc
in
leave
sbb
sar
pop
xchg
in
adc
mov
mov
rolb
sbb
cmp
aas
stos
push
cmp
fmull
faddp
stc
iret
sbb
mov
xor
fcmovu
stos
sub
jmp
lahf
repz
pop
mov
loopne
fwait
add
jbe
and
je
loope
andb
sbb
insb
sub
shll
dec
outsb
add
sbbb
sbbl
xchg
or
test
leave
dec
loope
cmpxchg
mov
ja
jge
jecxz
sbb
ljmp
lock
mov
jmp
orl
add
stos
imul
xor
dec
je
shll
test
pop
xchg
xchg
xor
fsubs
push
aad
lds
popa
cld
cmp
mov
sub
int
sbb
mov
push
inc
jae
test
shl
push
js
rol
xchg
inc
add
fwait
jnp
fstps
push
push
pop
fs
inc
inc
lea
or
and
loop
arpl
test
sub
mov
mul
add
lret
cmp
pop
fmuls
mov
ljmp
mov
sbb
fwait
ss
pop
daa
lods
aad
fbld
mov
add
cmp
adc
and
lods
ljmp
xchg
in
dec
pusha
in
or
adc
sar
push
jae
call
pop
xchg
inc
pop
frstor
insb
add
in
hlt
data16
adc
lcall
enter
xchg
mov
imul
out
push
mov
addr16
mov
or
sbb
xchg
sub
and
xor
rcr
sar
mov
pushf
loopne
bound
sbb
addr16
mov
inc
mov
loop
lods
push
movb
into
push
adc
cmc
sbb
push
imul
test
cmp
ret
stos
push
push
std
iret
fldenv
dec
mov
pop
cmp
movb
and
fmul
adc
out
mov
push
xor
lods
xchg
iret
adc
subb
test
daa
ss
in
ds
ds
icebp
cmc
mov
cmp
nop
pop
ljmp
iret
mov
xor
xchg
jae
mul
arpl
imul
add
mov
cmp
rep
mov
mul
sub
das
mov
mov
out
push
mov
aam
cmp
cmpsb
mov
mov
loope
cltd
mov
ret
add
imul
fisubrs
jmp
inc
push
outsl
pop
inc
ss
mov
lods
jne
mov
xchg
lret
cmp
xchg
int
and
pop
sub
adc
in
add
roll
mov
mov
mov
xor
lea
mov
xor
mov
sub
add
cmp
jbe
pop
mov
pop
pop
leave
ret
push
mov
sub
mov
movl
cmpl
je
cmpl
jne
push
pushl
call
mov
dec
mov
jmp
mov
add
mov
xor
mov
adcl
add
movzbl
sub
movzwl
adc
mov
and
movb
xor
or
xor
mov
lea
movl
cmpl
je
cmpl
jne
push
push
pushl
push
push
call
mov
dec
mov
jmp
mov
mov
adc
mov
xor
sub
andl
mov
movl
cmpl
je
cmpl
jne
push
pushl
push
pushl
call
cmpl
jne
xor
xor
dec
mov
mov
dec
mov
jmp
and
movl
movl
add
mov
or
mov
jmp
and
pop
icebp
jae
lods
imul
cmp
in
push
jo
sbb
jo
addr16
push
movsl
nop
test
push
ret
cmc
mov
mov
and
adc
xchg
inc
jo
loope
push
mov
adc
rclb
call
sub
mov
addr16
mov
ds
mov
jnp
das
mov
xorl
clc
insb
pop
or
pop
ss
decb
hlt
pusha
inc
in
stos
add
es
sarl
pop
bound
mov
mov
sub
jae
adcl
inc
adc
or
sahf
pop
hlt
sub
mov
add
pop
in
xor
out
and
jbe
pop
add
mov
test
sub
rol
mov
jns
loopne
push
hlt
loope
sti
fldt
pusha
inc
push
jecxz
in
jne
es
mov
sub
sbb
push
ljmp
jae
xor
loop
pop
loop
mov
fmull
aaa
xor
mov
sub
xorl
fsubrl
mov
sbbl
add
movl
jmp
movl
mov
mov
inc
cmp
jmp
sbb
movsb
scas
xchg
sub
movsb
push
pop
adc
jo
xchg
lock
adc
jmp
pop
popl
cmp
mov
xchg
add
daa
stos
inc
or
push
loopne
sbbb
fcoml
dec
jb
repz
lods
inc
movsl
dec
es
jle
das
push
int3
dec
mov
push
add
fiaddl
out
inc
pop
mov
movsb
mov
and
sub
pop
ds
mov
inc
add
jne
dec
enter
pushf
and
jno
mov
in
push
pusha
mov
ret
mov
iret
shll
jnp
pusha
stc
push
popf
xor
negb
xchg
push
mov
jp
mov
jns
cltd
fucomp
aad
inc
push
mov
xchg
or
ljmp
jmp
cmp
test
sahf
sub
xchg
leave
repz
iret
dec
lret
pop
mov
out
dec
lret
fnstsw
jnp
jb
jecxz
dec
jbe
and
xchg
faddl
adc
mov
dec
test
xor
pop
and
push
lahf
xorl
mov
xchg
repz
ficompl
mov
sarb
and
jb
mov
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jne
pushl
call
cmpl
jne
xor
add
inc
mov
jmp
mov
xor
add
cmp
jmp
inc
sub
xorb
jmp
inc
mov
cmp
jo
sbb
jo
lods
pop
insb
xchg
sti
jmp
ds
out
jmp
mov
and
popf
int3
ds
push
ret
adc
fsincos
fmull
fistl
int
call
mov
cmpsb
sub
add
div
subb
stc
mov
pop
outsl
test
rorl
lret
inc
mov
cmpsb
insb
fistpll
mov
dec
leave
push
fistpl
aas
dec
pop
cmp
stos
mov
jmp
adc
push
cmpsl
mov
hlt
mov
push
addr16
push
sbbl
cs
inc
sbb
ss
loopne
mov
into
adc
add
push
iret
add
leave
cmp
iret
filds
lcall
ret
jo
mov
enter
lret
lcall
push
push
mov
jbe
pop
and
and
stc
add
pop
addl
movsb
gs
adc
cli
xor
sbb
adc
sbb
mov
adc
dec
ret
mov
popf
xor
add
add
mov
mov
xor
mov
add
movzwl
mov
mov
movzwl
xor
add
mov
mov
mov
inc
cmp
jne
pop
jmp
cmpsb
fisubrl
jmp
dec
insb
or
jo
jg
jo
outsb
in
sub
shrl
cmp
mov
out
enter
aad
cli
pop
cs
ror
sub
test
rcll
push
jb
fistpl
cmpsb
test
loopne,pt
cmp
out
or
shl
pop
push
push
xor
sbb
rcrb
fimull
lock
add
ret
pop
rolb
into
mov
lea
jp
shr
hlt
lret
cli
out
mov
dec
inc
add
sti
mov
xchg
addr16
xor
outsb
lahf
jecxz
jg
lahf
in
mov
dec
inc
movsl
inc
mov
and
jns
push
enter
xchg
push
inc
ljmp
mov
mov
pop
js
inc
cmp
adc
sub
or
cmp
les
push
inc
lret
jl
adc
lret
rorb
int3
rclb
push
jge
pop
mov
dec
sub
mov
push
pop
scas
push
out
xchg
mov
sbb
push
jne
adc
dec
flds
pop
mov
mov
jmp
aaa
insl
pop
int3
push
jb
jno
pop
imul
sbb
sbb
jo
frstor
push
lsl
sahf
sti
rcll
adc
jmp
sbb
orb
fmulp
mov
xchg
mov
cwtl
repnz
mov
mov
test
push
mov
push
imul
xor
stc
mov
sub
outsb
mov
es
mov
jae
mov
cmp
and
lock
stc
sbb
int3
mov
scas
lret
pop
inc
mov
call
jnp
jecxz
cmp
add
nop
sub
or
pop
loopne
adcb
ret
cmpsl
cmpb
ret
test
idivl
inc
mov
xor
jns
inc
sbb
nop
lea
stc
or
push
clc
sbb
gs
sar
pop
push
in
xchg
mov
xchg
pop
sub
loopne
jns
pushf
fistpl
sub
sub
dec
xchg
sbb
es
fwait
into
cmpsb
outsl
les
and
add
mov
mov
xor
add
jmp
ffree
adcb
mov
and
jo
sbb
jo
add
imul
push
adc
add
inc
and
cmp
cs
out
push
push
sub
or
push
push
mov
and
push
inc
dec
stos
add
loope
pop
adc
mov
mov
rorl
arpl
xor
mov
lods
inc
sbb
test
lods
testb
call
cli
sub
cmp
inc
mov
pop
out
cs
sub
and
pop
js
mov
add
or
daa
push
push
dec
in
insb
xchg
inc
shr
mov
loope
or
fwait
mov
imul
loop
pop
popa
pushf
or
pop
hlt
add
ror
addr16
dec
out
lods
enter
das
fbstp
jo
jg
mov
sahf
add
dec
sub
sahf
dec
out
fs
mov
jg
imulb
xchg
into
ret
pop
push
das
int
jae
inc
int3
or
push
or
push
push
sbb
push
sbb
repz
mov
lock
push
mov
mov
mov
mov
mov
cmp
je
mov
mov
jmp
scas
or
repz
test
rorl
test
jo
jg
jo
loopne
xlat
push
xchg
jmp
sub
bound
test
dec
mov
xor
pop
scas
rorb
dec
xchg
or
jns
movsl
sti
and
cmpl
xchg
out
movsb
jb
scas
sbbl
aas
cld
sub
cmpsb
xchg
mov
jb
push
jno
xchg
xchg
push
add
pop
ret
hlt
mov
mov
mov
inc
test
lcall
or
sbb
lret
jg
cs
fcmove
cwtl
scas
pop
jbe
xchg
mov
cmp
dec
lods
insb
mov
and
xchg
add
push
in
lods
push
imul
dec
lcall
lods
or
xchg
and
rolb
cmc
out
mov
adc
jae
aam
inc
je
xorl
cmc
lret
or
lods
pop
xor
fisttpl
dec
pop
in
jecxz
popa
xor
fcoml
inc
adc
rolb
adc
sub
dec
mov
rep
test
enter
and
cmp
add
test
pop
add
mov
jmp
dec
push
test
xor
popa
jns
push
pop
add
jo
push
ds
inc
nop
pop
cwtl
test
insl
lds
das
scas
xchg
insb
xchg
inc
test
fisubs
adc
daa
lds
jg
pop
or
repz
fisubs
out
xor
push
push
sbb
mov
out
movl
ljmp
add
dec
or
sub
aam
xor
loopne
mov
jp
out
not
dec
cltd
addl
rcrl
push
sub
inc
mov
sbb
lcall
arpl
mov
cld
fdivr
mov
sub
outsb
bnd
sbb
mov
repz
in
and
jecxz
orl
movsl
aam
test
sbb
ss
popf
or
xchg
push
xor
repnz
xchg
cli
pop
pusha
pop
jecxz
iret
or
sub
inc
add
mov
xchg
xchg
lds
test
shlb
hlt
sbb
test
lods
xchg
es
jb
pop
mov
cmp
adc
roll
cmp
jmp
mov
gs
nop
sbb
xchg
and
jo
sub
fmull
or
test
cmpl
fidivrl
sahf
cmp
cmp
outsb
dec
jp
lock
or
scas
dec
mov
mov
pop
xor
xchg
inc
fisubl
mov
rorb
xchg
jne
or
jmp
cmp
das
ja
xor
mov
or
push
lds
ljmp
inc
test
mov
nop
gs
cltd
daa
dec
xlat
xlat
xchg
aas
push
outsl
sahf
call
fcoms
lret
int
mov
out
es
and
jl
lcall
push
dec
gs
std
push
in
popf
mov
inc
daa
mov
mov
mov
cmp
add
imul
and
leave
inc
addb
ss
or
jae
shll
addr16
adc
pop
out
jge
fdivl
das
enter
add
arpl
lcall
pop
insl
cmp
and
call
pushf
sub
imul
push
xchg
mov
movsl
cmc
jb
mov
add
movl
jmp
aaa
dec
rcrl
jno
repz
enter
lret
and
clc
push
and
jo
jg
jo
je
jns
push
sahf
dec
mov
mov
test
and
jmp
popa
aas
mov
std
lret
icebp
outsl
popf
pop
test
sub
dec
adc
mov
mov
xchg
sub
inc
dec
sub
nop
outsb
xor
mov
jle
lods
push
addl
pop
in
or
out
add
dec
jmp
shlb
andb
jmp
jbe
jl
negb
mov
add
dec
push
mov
and
jge
rcrl
lea
ljmp
mov
test
jp
or
push
sub
popa
pop
lahf
ror
mov
mov
or
cmp
add
jecxz
dec
fmulp
cmpsb
jmp
gs
push
lahf
pop
fdivrp
rorb
cmp
dec
fisttpl
sti
xchg
mov
cmp
mov
cli
mov
xorb
lods
sub
iret
xorb
cmp
mov
or
and
cmp
inc
xchg
imul
pop
jbe,pt
lea
mov
mov
addl
mov
mov
xor
lea
mov
jmp
mov
addl
jecxz
or
jl
jo
sbb
jo
stos
cmp
cmp
rorl
or
mov
fmul
jb
aad
ret
aad
insb
adc
cltd
cmpsb
jnp
pusha
mov
cmp
mov
mov
je
or
bound
fidivs
jl
xor
orl
add
bound
and
lahf
into
lock
mov
andl
addr16
and
scas
xchg
out
jecxz
clc
into
lcall
fists
aad
lea
into
or
in
cmp
xor
pop
dec
scas
dec
cmp
cmp
dec
les
notb
mulb
xchg
pop
jo
outsl
sbb
xor
adc
sti
addr16
xor
sub
mov
inc
scas
pop
and
dec
ljmp
add
adc
push
xchg
mov
test
loop
adc
popa
imul
lods
jbe
inc
cmp
addr16
push
pop
cmp
leave
xor
pop
jbe
dec
dec
movsl
adc
pop
iret
sub
mov
pop
push
xchg
cwtl
dec
sub
add
inc
or
ds
jmp
cmp
xor
sarl
cld
mov
sbb
jo
pop
shl
xchg
dec
sbbl
fsubrs
out
xchg
push
cli
jnp
pop
int3
icebp
mov
int3
or
cltd
iret
sub
pop
jle
jp
rclb
pop
xchg
icebp
clc
mov
stos
and
sti
mov
mov
stc
xchg
jne
gs
rcll
add
pop
adc
les
pop
pop
arpl
bound
inc
data16
cmp
orb
jle
aaa
in
add
mov
repz
repz
push
cmp
jnp
aad
mov
xlat
popf
inc
outsb
push
jo
pop
je
insl
push
xor
pop
or
and
add
jne
int
pop
ret
jns
mov
add
sbbl
jns
push
jae
sbb
sbb
arpl
bnd
cmp
arpl
fcomps
jae
pop
insb
stos
jbe
or
dec
sub
or
out
test
ficompl
daa
fidivrl
sub
inc
test
addr16
ret
ret
sub
mov
pop
adc
xlat
mov
push
mov
xor
mov
add
jmp
pop
adc
mov
es
xor
int3
and
sbb
jo
cmp
cmp
jno
lds
or
inc
inc
pop
add
jl
jno
push
call
mov
es
pop
xchg
mov
leave
int
sti
lahf
cs
data16
imul
mov
dec
and
xor
sbb
mov
rorb
and
negl
insl
movsb
add
adc
loop
push
and
and
jp
imul
test
test
cmpsl
in
sbbb
xchg
cld
or
hlt
cmpl
jge
adc
mov
es
jecxz
inc
adc
int3
inc
jnp
mov
bound
jecxz
pop
stos
cmp
lcall
test
jne
and
divl
cli
dec
push
pop
adc
rorb
inc
mov
daa
xchg
cmp
clc
cmp
aam
xorb
loope
xor
mov
mov
sbb
rcr
mov
mov
nop
mov
push
push
jg
test
ljmp
sub
mov
pop
leave
ret
push
mov
push
push
subl
movl
movl
andl
xor
add
inc
mov
cmpl
jne
pushl
pushl
push
push
pushl
push
push
pushl
pushl
push
push
push
pushl
call
cmpl
jb
neg
mov
push
xor
mov
mov
xor
xor
mov
adcl
jmp
popa
sahf
cmpsl
mov
jno
mov
ljmp
fnstcw
jo
lods
stos
mov
nopl
push
jmp
mov
mov
enter
lds
fidivl
push
cmpb
jnp
out
mov
cld
and
sbbb
sarl
cmc
sub
imul
arpl
cmc
shrl
bound
sarl
sbb
fimull
ja
jnp
xor
movsb
sub
nop
stc
cmp
jg
add
inc
push
addr16
cli
sbb
cmc
pop
push
test
les
add
iret
fs
in
lret
xor
and
jp
pusha
mov
push
cltd
sbb
push
xor
sub
push
xorb
push
jle
mov
dec
es
mov
or
mov
add
push
out
mov
lock
test
or
movzwl
outsb
aaa
movsl
iret
hlt
jle
mov
adc
in
xchg
cmc
sahf
mov
cmp
fucomp
data16
imul
imul
std
test
xchg
or
stos
cli
adc
jp
mov
test
sbb
stos
push
mov
xchg
dec
xchg
in
sbb
adc
lahf
arpl
ljmp
movsl
mov
xor
push
addr16
scas
mov
sub
adc
insl
out
out
mov
mov
mov
xchg
push
test
pop
nop
in
pop
out
dec
push
iret
sub
subl
cli
inc
cmpsb
rorb
aaa
pop
js
xchg
jb
push
cmp
fisubrl
mov
push
mov
dec
lods
sub
popf
xchg
cs
push
push
xor
sbb
sub
and
jl
std
lods
inc
xchg
sub
adc
push
jmp
ss
mulb
mov
ja,pt
out
ror
dec
flds
xor
xor
dec
es
fucom
push
sbb
ret
enter
out
xchg
fs
pushf
add
enter
sbb
mov
add
mov
mov
test
dec
cmp
arpl
insl
ds
jno
push
movsl
add
add
inc
lahf
aas
test
mov
cmc
push
xor
lahf
push
repnz
lods
sbb
add
xorl
add
imul
movl
mov
movl
cmp
movl
jne
mov
mov
xor
jmp
test
cmp
push
popa
andl
adc
push
add
pop
sub
jo
jecxz
or
xor
scas
add
std
sarl
mov
dec
xchg
and
sub
jge
fwait
mov
xchg
xor
in
cwtl
mov
jl
mov
xchg
cmp
jle
xchg
sub
xor
mov
ds
or
fisubs
jge
mov
sub
cmp
pop
mov
adc
push
add
and
pop
rcll
lods
xor
adc
xlat
ja
adc
xor
inc
rclb
orb
adc
jns
out
inc
mov
or
aad
push
mov
mov
ficoms
push
push
mov
jecxz
dec
and
jo
outsb
cwtl
mov
fs
es
and
or
and
popa
xorl
aad
jb
pop
cmp
and
ror
out
sub
cmc
push
add
js
mov
pop
lahf
or
push
dec
push
arpl
out
pop
dec
in
push
out
stos
enter
pop
xor
push
inc
pop
movsl
push
mov
mov
push
adc
sub
inc
mov
out
inc
aaa
mov
cld
mov
rclb
out
sbbl
mov
sub
das
in
in
cmp
or
lds
int3
jne
insb
dec
arpl
pushf
jmp
mov
or
test
lcall
pop
sbb
je
push
pop
lods
arpl
mov
jl
push
lods
int
mov
arpl
sub
adc
sub
jmp
cmpsb
shll
mov
cmpsb
and
aas
mov
mov
push
cmpl
adcb
pop
test
jo
push
pop
push
faddl
ss
ret
push
les
out
xor
sti
pop
pop
add
ret
mov
bound
xchg
cmpsl
push
xchg
xchg
sti
jns
test
maskmovq
divl
testl
jo
call
lock
jne
dec
dec
imul
jns
xchg
push
jnp
fnstenv
jne
pop
or
add
gs
in
add
clc
test
push
mov
shll
push
fnstsw
ret
mov
jno
pop
shll
repnz
add
imul
jmp
mov
mov
mov
mov
mov
xor
xor
add
jmp
shll
add
ret
loope
and
es
sub
fnstcw
jo
out
in
in
sbb
shrb
test
or
out
and
mov
outsl
xchg
jmp
fsubrl
lcall
dec
mull
mov
fimuls
dec
mov
movsl
ja
mov
adc
adc
xor
cmpsl
push
jmp
or
in
ljmp
xchg
addr16
lea
loope
add
xchg
sub
xchg
mov
mov
mov
mov
xchg
mov
outsl
or
mov
or
sub
outsb
ja
or
out
push
and
xchg
xor
out
add
mov
xchg
subb
push
in
and
pusha
pop
sbb
add
adc
test
jecxz
fmuls
adc
aam
cmpsb
or
jp
and
xlat
arpl
mov
nop
dec
xor
add
in
or
das
jp
jne
xchg
call
cmp
xchg
mov
imul
push
lock
divl
mov
movsb
or
pop
int
jns
repnz
mov
mov
mov
lret
add
iret
mov
dec
xor
out
outsl
cwtl
mov
push
lds
sbb
cwtl
out
bswap
sarl
fstpl
mov
xor
adc
call
cmp
xor
test
js
mov
sbb
mov
aam
xor
ret
push
sub
dec
jg
lcall
mov
or
gs
jp
scas
dec
or
rclb
jnp
ds
adc
xchg
std
lahf
jle
cld
rcrl
sub
js
dec
adc
xchg
sbbl
jmp
cmp
mov
pop
and
cmp
out
loope
jmp
sarb
test
cmpsl
fnstenv
dec
add
mov
imul
jb
int
cmpsl
sbb
pop
test
jae
mov
mov
xor
scas
mov
cmp
mov
je
xor
add
mov
imul
add
mov
mov
pop
leave
ret
push
mov
push
movl
mov
mov
mov
adcl
xor
add
andl
mov
mov
mov
sub
xor
mov
dec
xor
dec
jmp
loope
xchg
fdivs
jno
addl
jne
sub
les
jo
sbb
xchg
push
pop
mov
dec
movsb
int
cmp
rol
sub
cmp
cmp
shl
int
and
test
cmc
aas
nop
ss
jmp
shlb
testl
jl
lock
mov
push
mov
aas
sub
push
mov
popa
rol
cmp
or
fsubs
pop
sbb
sbb
cltd
pop
xchg
aam
js
popa
cwtl
fxtract
and
jb
cmp
jmp
rcr
inc
int
cmp
pop
das
loop
std
popa
pextrw
scas
in
lcall
call
mov
rolb
cmp
int
lahf
jae
xor
leave
xchg
pop
ljmp
aas
dec
mov
in
test
inc
inc
stos
sub
jne
mov
lcall
inc
mov
ljmp
out
sbb
push
push
aam
sub
jb
xor
sub
jg
mull
dec
pop
pop
lret
adc
cmp
adc
mov
addr16
fisubl
fbld
mov
xchg
sahf
pop
sbb
ss
rcll
jae
je
roll
cli
inc
addr16
out
sbb
test
jne
andl
mov
inc
mov
cmpl
jne
pushl
pushl
call
cmpl
jb
mov
adcl
add
mov
movzbl
and
mov
mov
movl
mov
xorl
mov
mov
mov
mov
mov
mov
mov
mov
jmp
hlt
and
arpl
jno
scas
mov
cmc
daa
inc
jae
jo
les
jo
push
inc
push
pushf
loop
xchg
ds
jl
jo
lahf
dec
xchg
push
mov
dec
inc
mov
aad
add
xchg
and
mov
inc
jo
stc
int3
adc
mov
setno
sbb
ret
mov
loopne
nop
xchg
push
xor
or
hlt
pop
add
sar
mov
cwtl
push
xchg
ret
dec
jae
int
leave
js
mov
xor
xlat
jno
shrb
pop
lods
pand
cli
sub
sbb
bswap
ficoms
fcoml
add
push
aas
xchg
cmp
dec
mov
das
lret
xchg
or
xor
pop
mov
and
bound
cld
mov
xor
inc
or
jmp
lea
icebp
xor
pusha
aad
imul
jns
cmp
fisttpll
in
fxch
xlat
icebp
mov
test
push
mov
fistpl
add
test
test
sub
mov
ss
stos
adc
mov
pop
out
and
and
icebp
jno
rcrb
mov
add
fcoms
mov
add
mov
pop
test
add
addb
xchg
rcrl
mov
or
roll
pop
leave
ret
push
mov
mov
xor
jmp
cmpsl
sub
mov
mov
or
les
jo
mov
test
and
xor
xchg
in
cmp
mov
pop
mov
dec
out
jnp
and
stos
icebp
arpl
mov
jp
outsb
or
or
lret
lock
ja
dec
es
notb
add
and
xchg
mov
pop
lock
jg
jg
jbe
int3
inc
adc
ret
clc
enter
leave
mov
mov
lahf
fcmovnu
ds
adc
mov
xchg
dec
inc
jle
dec
add
mov
ficoml
xlat
popl
subl
pusha
aam
push
popf
mov
inc
push
ret
inc
jp
or
jne
inc
sbb
and
inc
and
fs
lahf
data16
ret
loop
mov
shll
mov
dec
adc
xlat
sub
lock
lock
repnz
cmovp
fildll
js
pop
aam
pop
push
ds
cld
cmpsb
mov
jg
in
add
xchg
mov
pop
cmpl
cs
ret
push
jl
outsl
mov
push
adc
mov
pop
sbb
inc
rorl
sti
sub
inc
xchg
and
lcall
sbb
jb
icebp
mov
and
or
mov
pop
ret
push
mov
push
movl
add
mov
mov
mov
mov
add
mov
xor
subl
add
xorl
mov
incl
mov
subl
mov
mov
mov
mov
adcl
mov
mov
mov
subl
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
mov
mov
mov
test
mov
jne
mov
xor
add
leave
ret
push
mov
sub
add
mov
sbbl
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
cmpl
jne
xor
or
inc
mov
jmp
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
adcl
mov
mov
mov
adc
movl
movl
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jne
push
pushl
pushl
push
push
push
push
push
pushl
push
push
push
push
push
call
jmp
sbbl
mov
push
sbbl
push
push
mov
andl
jmp
mov
jmp
sub
movsl
sar
mov
jo
jge
jo
repnz
addl
jo
push
mov
xchg
in
xchg
sbb
jno
shr
mov
scas
cli
mov
je
dec
arpl
mov
or
cmp
mov
sub
insb
or
mov
xor
mov
ss
push
movl
flds
scas
xchg
and
outsl
or
adc
xchg
adc
pop
pop
xchg
sbb
mov
mov
or
pop
adc
andl
inc
jl
mov
fbld
dec
cwtl
xor
cld
add
mov
pusha
fcoms
popf
push
add
je
pop
mov
js
or
ret
push
into
cmp
sub
cmc
in
adc
shrb
shlb
or
loope
and
cmpsl
dec
jge
out
mov
fcoml
mov
dec
ss
cmp
fs
test
push
rorb
mov
add
jne
pusha
bound
jg
jmp
cwtl
lods
lods
add
jnp
or
lret
jb
mov
rcrl
in
sub
test
and
pop
scas
sbb
pop
pop
ret
mov
das
test
mov
add
leave
into
mov
jo
sub
iret
test
mov
jp
sar
add
add
sti
sbb
aad
sti
xor
jnp
shll
fs
shlb
cmc
pop
popf
mov
lds
pop
in
shlb
mov
out
iret
cmp
jno
repz
or
lcall
sub
pop
mov
imul
dec
nop
stos
xor
lods
mov
push
outsb
jp
aam
adc
mov
xchg
enter
pusha
test
sub
sbb
lret
call
ret
faddl
mov
xchg
out
mov
fidivrs
pop
in
dec
ds
cmpsl
pusha
xchg
rcll
cmp
mov
test
xor
adc
dec
imul
sub
mov
dec
movnti
in
dec
mov
push
and
push
lahf
mov
pop
inc
push
in
and
mov
std
inc
pop
ret
addr16
mov
jl
dec
push
mov
pop
lock
sti
aad
mov
and
arpl
dec
loope
adc
bound
jmp
xor
arpl
cli
mov
mov
sbb
mull
xchg
jb
repz
jno
push
cli
jg
std
jge
test
aaa
clc
pop
pop
andl
jmp
lods
rcrb
pop
cld
es
test
inc
sbb
xchg
aas
jne
mov
enter
lcall
add
in
xchg
mov
xlat
cmp
cmp
lcall
add
adc
movb
mov
pushf
jb
add
add
add
add
jmp
xchg
test
xchg
jno
xchg
js
cmpsl
jb
sub
xor
and
jo
sti
clc
fldl
movsl
cmp
out
sbb
enter
cs
mov
test
imul
push
popa
jmp
inc
je
insl
int
jbe
popa
xor
cmp
clc
inc
test
sbbb
popl
mov
lods
imul
push
mov
xor
lock
test
les
inc
mov
cmc
out
je
and
sbb
loop
lret
aaa
mov
das
shr
push
mov
and
jbe
sub
sbb
ficoms
push
inc
fcmovu
and
addb
jge
lock
mov
std
cld
stos
xchg
imul
cmp
pop
push
daa
aas
mov
dec
daa
jle
mov
mov
mov
mov
push
test
cmpsb
enter
fwait
in
fidivl
repnz
in
or
cltd
or
into
shll
arpl
and
xor
mov
cli
mov
rclb
stos
dec
xlat
icebp
xchg
xor
mov
push
lods
xchg
in
mov
sub
sahf
and
rclb
mov
shll
mov
sub
icebp
andl
or
lahf
mov
cmpsl
xor
jg
ret
aam
fldt
add
cmc
fistps
repz
mov
xor
and
test
les
mov
sub
pop
sti
add
insl
stc
adc
popf
jno
out
push
xor
adc
or
ja
lret
shll
lret
mov
cmp
mov
scas
mov
pop
mov
push
add
adc
data16
leave
pop
fs
dec
sbb
inc
and
loope
add
push
jne
adc
movsb
inc
repnz
pmaxsw
push
stos
xor
enter
add
outsb
out
add
pop
cwtl
scas
pop
ja
jne
cmp
hlt
xor
pop
inc
add
scas
add
mov
in
sub
rcrl
jl
ficompl
or
adc
cwtl
mov
inc
jno
or
sarb
mov
orl
lods
sbb
or
test
std
pop
out
push
pop
sti
push
and
imul
mov
std
es
and
inc
dec
decl
lcall
jecxz
cmpsl
push
cwtl
mov
inc
insl
test
lcall
sbb
leave
jmp
pop
adc
cld
mov
and
and
sahf
test
and
cmp
mov
outsl
lret
add
adc
ljmp
frstor
das
xchg
jb
sub
std
lock
iret
mov
aam
lods
xor
inc
enter
ja
fimull
adc
mov
xorl
movl
movl
movl
xor
movl
xor
mov
subl
xor
addl
add
adcl
mov
movl
sbb
movb
or
mov
xor
add
mov
neg
mov
sbbl
xor
add
subl
push
sbb
mov
subl
xor
adcl
add
push
add
mov
addl
xor
add
addl
push
lea
push
pushl
adcl
pushl
call
subl
jmp
test
xor
mov
test
push
fcmovb
fistps
jo,pt
and
jo
out
sub
push
movsb
repnz
mov
push
xchg
fidivrs
pop
jb
je
jo
enter
stc
push
loop
dec
out
add
inc
mov
pop
add
stos
sub
cmp
jp
aam
jne
mov
outsl
mov
inc
insb
push
pop
bound
out
mov
das
pop
xor
adc
stos
push
mov
insl
data16
out
sahf
add
mov
or
lret
cmpsb
mov
mov
and
mov
lods
in
add
dec
inc
xchg
push
add
lcall
xchg
lret
adc
aaa
sub
jns
push
add
xlat
shr
les
inc
cmp
test
daa
arpl
flds
test
mov
cld
cld
cmp
sbb
pop
and
repnz
jno
or
sub
push
inc
dec
les
pop
push
mov
movsb
xor
pop
int3
pop
or
jecxz
fisubs
add
and
lea
mov
scas
cli
fsts
push
lret
pusha
pop
adc
roll
iret
mov
sbb
lods
mov
mov
pushf
adc
mov
adc
mov
lcall
xor
cli
jp
das
inc
int3
jecxz
xlat
or
mov
xchg
lods
pop
call
sbb
add
xchg
cmpb
ds
sub
int
push
ljmp
je
jecxz
xchg
fnstenv
ss
cltd
insb
sub
arpl
jmp
dec
aam
inc
xor
pop
dec
dec
sbb
pop
int
in
or
cmpsb
xor
mov
pop
je
outsl
div
test
repnz
loopne
movsl
insb
fcmovne
pop
pusha
movsb
dec
and
xor
in
mov
sub
inc
or
or
xchg
mov
dec
divl
mov
cmp
outsl
fdivr
popf
ret
pop
mov
cltd
int
in
daa
sbb
adc
fnstenv
xchg
je
dec
xchg
bound
clc
xor
iret
pop
mov
pop
or
mov
bound
dec
scas
int3
inc
xchg
mov
dec
ss
xor
inc
and
sbb
pop
jp
xchg
dec
pop
push
cld
outsb
or
addb
adc
adc
sti
sahf
notb
push
sub
mov
mov
dec
and
push
test
cmpsl
in
test
hlt
les
insl
jns
jl
xchg
and
in
lcall
mov
add
jb
lret
mov
in
pop
mov
or
pop
shll
call
dec
mov
dec
movsb
loopne
mov
push
lcall
aas
adc
jno
xchg
fs
cmp
add
or
adc
repnz
ret
xchg
aaa
inc
mov
cld
stos
loopne
sub
scas
xor
inc
inc
add
add
je
lea
sbbl
push
sbbl
mov
andl
xor
add
push
movl
cmpl
je
cmpl
jne
push
pushl
push
push
call
cmpl
jne
mov
dec
mov
xor
add
dec
mov
jmp
mov
add
push
mov
mov
pushl
call
mov
cmpl
lea
mov
je
lea
push
mov
xor
add
push
mov
xor
add
push
pushl
lea
push
jmp
mov
add
mov
aaa
clc
cs
cmp
and
jo
aas
into
leave
lahf
fwait
das
arpl
sbb
dec
and
inc
xor
cmp
enter
loop
cmp
es
xor
cli
cmc
or
dec
pop
xchg
insb
roll
cmp
push
sarl
test
out
jecxz
inc
dec
test
mov
andl
dec
jl
pop
jg
mov
fs
insb
mov
ss
xchg
jle
cs
adcb
imul
jle
icebp
mov
popa
out
add
sti
sbb
pop
int
movsl
jbe
add
mov
rcrb
call
loopne
cmp
fcoml
and
push
pop
xor
push
lahf
mov
in
cmp
and
imull
outsb
jmp
sub
loop
mov
sub
mov
icebp
xchg
xchg
dec
xlat
mov
jmp
mov
aad
int
fildl
pop
xor
mov
lds
aad
mov
add
sub
aad
mov
sbb
loope
in
cmpsb
add
sub
outsb
imull
cmpsb
mov
cmp
mov
out
xor
loop
hlt
das
cmp
add
es
cwtl
cmp
sub
scas
addr16
ss
insb
out
jecxz
nop
mov
push
lds
shll
sahf
dec
adc
lods
insl
icebp
and
xchg
fwait
xchg
sub
mov
sbb
out
ret
in
faddl
jle
andl
jecxz
ljmp
lea
into
mov
or
xchg
ja
xor
sti
dec
sbb
or
fs
rclb
andl
aas
int
pop
mov
sub
inc
cwtl
cmp
add
sub
sbb
clc
std
xor
and
lock
ret
pop
adc
push
dec
icebp
mulps
in
stos
lret
popa
into
lods
sub
sub
cmpl
leave
xchg
mov
jo
jmp
push
shll
pop
fwait
sbb
out
mov
push
lods
cmc
add
lods
adc
add
mov
cwtl
inc
rorb
popa
push
es
stc
insb
inc
mov
mov
test
push
push
cmpsl
pushf
adc
cs
or
and
in
add
andl
clc
xchg
adc
cmpsl
mov
loopne
flds
les
lods
push
push
mov
cli
orb
icebp
fucomip
and
pusha
mov
fnstenv
out
out
xchg
aaa
mov
mov
jnp
dec
cmovns
inc
sti
mov
cmp
or
add
dec
adc
xor
jg
mov
test
loope
sahf
ss
in
test
addb
push
sarl
stc
je
shlb
insl
pop
into
jns
and
outsb
xor
adc
out
inc
imul
mov
sub
adc
pop
lock
jne
pushl
call
test
je
lea
jmp
enter
outsb
bound
adc
pop
ret
jo
and
jo
mov
cwtl
mov
les
push
mov
rorb
cs
push
add
fwait
sub
imul
lcall
xor
mov
or
test
push
frstor
arpl
test
xor
cltd
ret
mov
fstpt
inc
lock
cli
inc
call
jnp
ret
or
cmp
sarb
mov
pushf
stos
pop
hlt
js
mov
cmp
or
lret
int
mov
jns
adc
sbb
repnz
sub
mov
pop
pop
jge
imul
xchg
fs
ja
mov
adc
loope
xchg
xchg
mov
cmp
pop
mov
mov
jae
cmp
jle
lret
in
sub
andb
and
xchg
test
aas
insl
hlt
jb
cmpsl
cmp
inc
push
jmp
les
add
insl
jecxz
mov
or
mov
mov
push
aam
loopne
cmp
and
xchg
mov
ss
cmp
frstor
mov
cltd
or
pop
fldcw
mov
arpl
mov
int3
push
js
lods
inc
mov
jb
hlt
mov
push
stos
mov
add
inc
sbb
fbstp
push
jge
fcoml
sbb
es
xor
stc
scas
inc
repnz
jb
sub
rcrb
je
mov
rcrb
mov
aas
mov
cltd
push
pop
xchg
into
fstl
int3
js
push
stos
insb
add
inc
jns
loopne
into
push
mov
cmp
sub
sarl
mov
xor
lret
inc
adc
lahf
in
divb
movb
xor
add
xlat
and
ljmp
sahf
pusha
jbe
jmp
cltd
cmp
lods
and
and
int
rolb
adcb
bound
cmp
mov
jg
dec
movsb
cs
mov
xchg
mov
push
nop
adc
dec
ret
mov
repnz
pop
lahf
jmp
mov
arpl
xor
clc
adc
mov
aad
stos
loop
jae
add
adc
mov
inc
js
outsl
outsl
jo
repz
mov
lds
mov
xchg
jo
dec
pushf
mov
adc
pop
cwtl
push
jp
repnz
inc
repz
je
xchg
test
imul
addr16
sbb
inc
sub
or
mov
and
in
repnz
and
xchg
mov
stos
loope
test
testl
mov
pop
test
jle
inc
cmp
int3
loop
shlb
inc
adc
push
add
xchg
clc
jae
rcrl
inc
in
xor
add
push
mov
add
push
mov
jmp
inc
jmp
cwtl
loope
inc
pop
mov
mov
sti
les
and
jo
pop
daa
push
jae
mov
hlt
jl
and
lods
xchg
or
jae
mul
fs
xchg
and
push
or
ja
scas
pop
adc
or
movsb
test
mov
jo
sbb
mov
and
nop
mov
inc
aam
imul
mov
jmp
dec
imul
sahf
mov
adc
lea
cli
push
and
sub
cmpl
xorb
je
xchg
sti
loope
shlb
pop
xor
xchg
icebp
jg
sub
and
pop
xor
push
cmpsb
push
sbb
sbb
lret
jns
xchg
dec
sbb
fildl
cmp
lahf
into
testb
inc
out
int3
mov
pop
cwtl
lods
push
pop
lods
inc
ljmp
push
sub
jae
xlat
and
cmp
icebp
xor
in
sub
mov
jno
adc
dec
adc
sbb
popa
mov
pop
cli
mov
test
in
cli
or
inc
dec
test
fadd
adc
aad
popf
mov
jl
test
mov
inc
pushf
xchg
aas
cmp
insb
or
mov
call
cmp
inc
push
mov
adc
push
push
and
add
iret
ja
push
in
push
cmp
sahf
add
test
insb
jbe
ja
test
aas
sub
repnz
lcall
les
cmp
enter
xchg
es
add
out
mov
or
aam
jno
int
adc
in
dec
mov
fstpl
repz
jae
in
xchg
popf
popl
mov
rcll
add
sbbl
push
inc
and
fists
mov
xchg
test
imul
mov
rcl
es
jmp
loop
inc
or
mov
push
mov
aas
sbb
dec
or
add
filds
and
dec
mov
jnp
into
addr16
jbe
or
mov
jno
daa
sarb
sbb
movsb
mov
negl
mov
or
cmpb
adc
dec
mov
jp
jecxz
nop
jmp
push
jo
popf
stos
lds
xchg
lods
mov
clc
je
fidivl
repnz
cld
sbb
and
insl
popl
pop
notl
das
dec
ljmp
mov
push
es
movb
xor
or
pop
add
pop
stos
ljmp
add
and
je
xchg
int
or
jnp
and
iret
popf
test
lods
xor
mov
push
or
cld
cmp
loop
hlt
ja
dec
mov
lret
fisttps
pop
fcmovu
jge
jae
ja
dec
mov
dec
out
cmp
pop
outsb
imul
cmp
es
call
sbb
add
xor
fstps
mov
xor
mov
sub
sub
mov
add
mov
mov
mov
mov
xor
sub
mov
lea
incb
inc
push
pop
dec
xchg
jmp
sub
cs
cs
mov
sbb
into
and
out
stos
shll
jge
jo
in
hlt
jp
cmp
jl
push
dec
push
mov
leave
xadd
cld
sbb
xor
adc
jecxz
lock
or
xchg
mov
sbb
in
stos
sti
pop
imul
ljmp
xor
sub
cmp
mov
idivb
movsb
and
and
es
rcll
rorl
andb
cmp
subl
xchg
and
mov
adc
jle
outsl
adc
fdivrs
cmpb
bound
pop
leave
and
rorb
fsubrs
xor
push
shl
test
dec
daa
cli
loope
in
data16
cltd
inc
adc
pushf
push
xor
xor
push
pop
std
inc
sub
rorl
xchg
fisubs
inc
fisubl
rol
rorl
cmp
das
popf
inc
push
cwtl
xor
in
mov
pop
sahf
pop
push
loope
or
ret
xor
test
cli
inc
test
push
and
cs
and
pop
in
jmp
jge
subl
adc
aam
scas
xchg
movsb
mov
mov
aad
dec
lret
in
test
out
and
stc
push
inc
sub
idivl
cmp
pop
enter
std
jecxz
sub
xchg
scas
mov
sub
imull
pop
in
cld
aaa
push
aam
nop
adc
sar
jmp
fcoms
movntq
mov
jne
jno
pop
stos
sarb
inc
push
mull
cmp
sbb
xor
cli
mov
and
xchg
mov
mov
dec
xchg
and
or
cmp
jno
pop
ja
jbe
cmc
or
call
outsb
cmp
in
das
mov
sbbb
lods
cmp
mov
jp
mov
cmp
cmpsl
and
call
inc
cmp
pushf
add
shl
sbb
and
loopne
mov
push
adc
out
mov
fwait
mov
pop
jo
and
or
adc
ds
jmp
stos
in
mov
and
mov
stos
cmpsl
jb
aad
cmp
in
xchg
and
mov
push
dec
pop
lods
push
jb
push
and
aad
mov
test
pop
call
loope
lea
roll
mov
mov
jmp
mov
cmp
nop
mov
push
cmp
fdivl
test
aaa
sbb
cmp
pop
andl
std
sbb
fnstcw
mov
leave
into
ljmp
jge
lcall
cwtl
ficoms
sub
mov
stos
sub
xchg
test
sub
js
mov
xchg
cmpsl
adc
out
xchg
in
cs
jbe
addr16
add
or
push
pop
shl
push
fwait
cmp
jg
mov
add
pop
dec
cli
ret
in
cld
in
add
jg
decb
pushl
mov
mov
pushl
lea
pushl
lea
pushl
lea
pushl
lea
pushl
xchg
inc
inc
sub
push
pop
call
mov
mov
add
pop
pop
pop
leave
ret
push
mov
sub
push
sbb
mov
mov
mov
sub
xor
mov
adc
mov
movl
sub
movl
mov
andl
xor
add
inc
mov
cmpl
jne
pushl
push
push
call
cmpl
jne
xor
add
inc
mov
cmpl
jb
mov
mov
or
xor
mov
adc
add
mov
or
mov
adc
mov
sbbl
xor
add
mov
or
mov
mov
inc
movl
movl
cmpl
je
cmpl
jne
call
xor
add
dec
mov
jmp
mov
mov
sub
add
jmp
fldcw
cs
mov
jae
shll
dec
cmp
jo
imul
mov
cmpsb
shlb
mov
out
pop
or
xor
jb
pop
xchg
cmp
adc
lds
pop
sub
imul
int
xor
les
mov
andl
mov
adc
mov
adc
dec
lods
inc
or
and
loopne
pop
popf
subb
clc
leave
and
in
jae
mov
daa
inc
inc
sub
inc
test
dec
lea
pushf
pop
mov
cmp
jle
cmc
xchg
sahf
and
inc
xor
and
lock
divl
in
adcl
push
cmp
mov
mov
push
pop
popf
mov
dec
hlt
lods
cmp
adc
movsb
mov
xchg
mov
test
ljmp
xchg
lcall
mov
mov
jl
popf
add
or
xlat
idivl
cltd
iret
add
dec
cld
clc
pop
mov
mov
and
hlt
insb
test
xchg
or
mov
sub
lret
push
mov
mov
in
rorl
movsl
cli
jecxz
sahf
je
aaa
frstor
sbb
in
out
push
pop
int3
lock
cmp
xchg
pop
call
and
repnz
pusha
mov
fcomip
mov
aam
sub
rcr
push
inc
sub
jle
mov
pop
fmull
inc
adcb
push
in
popf
jns
repz
inc
mov
loopne
out
fildll
dec
push
fcmove
shrb
stos
cld
ds
addr16
jle
sub
lods
movsb
jl
xor
fucomi
shlb
mov
add
hlt
mov
js
xor
ja
cmp
iret
or
mov
pop
mov
cmp
adc
call
push
xabort
inc
fdivs
test
inc
add
inc
aam
test
inc
add
cmp
movl
movl
and
movl
jmp
lods
mov
jno
fidivl
push
lds
jo
jg
jo
lods
mov
adc
addr16
adc
decl
push
insl
lods
cwtl
pop
movsb
inc
xor
push
loopne
dec
outsl
cmp
push
cld
jmp
mov
mov
inc
fwait
pop
loope
scas
mov
cmpsb
or
shrl
cmp
mov
inc
jo
fiadds
xchg
sub
jnp
push
shlb
xor
in
shlb
pop
add
push
mov
xor
mov
out
inc
aam
sahf
pop
daa
mov
fdivl
into
pop
scas
movsl
jb
addb
jmp
push
lods
scas
js
pop
pop
mov
outsl
mov
mov
push
push
xor
test
out
test
cmpb
sub
in
pusha
je
push
sub
dec
cmp
dec
pop
mov
addl
mov
mov
sub
into
push
xchg
add
xchg
and
subb
mov
addr16
in
call
insl
xor
cmp
mov
pop
sub
nop
dec
push
imull
pop
jp
jae
mov
je
jp
xchg
mov
scas
dec
sbb
fisubrl
pop
in
xor
mov
mov
mov
adc
inc
cmp
std
insb
les
sbb
into
push
loopne
lods
or
scas
aaa
rcr
jmp
cld
push
jns
mov
mov
dec
dec
ja
mov
sub
jmp
jmp
adc
lret
push
jl
out
aaa
jnp
ret
popa
sub
cmc
test
iret
stos
mov
fs
outsb
rcrb
pop
and
xor
lea
inc
ljmp
ss
out
fisubs
in
in
enter
outsb
iret
insl
sbb
movl
movl
cmpl
je
cmpl
jne
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
adc
mov
xor
sbb
mov
add
cmp
jmp
mov
jae
xchg
xor
xchg
xchg
sahf
dec
lret
imul
mov
xchg
es
inc
pop
ret
cmp
jge
push
sbb
int3
mov
inc
rcrl
cs
mov
add
mov
stos
pop
mov
les
sbb
aad
lods
mov
mov
xchg
test
cld
push
adc
add
mov
mov
xor
sub
fdivl
mov
ja
jg
sbb
jnp
mov
iret
ret
xchg
fidivs
outsl
insl
in
jecxz
fs
pop
in
popf
xchg
test
or
cmp
faddl
in
or
inc
mov
mov
sbb
xchg
int3
dec
pusha
xor
push
leave
incl
test
mov
lods
mov
add
daa
fimull
inc
push
cltd
outsl
add
and
outsb
mov
adc
pop
jb
sbb
or
dec
jns
out
pop
jns
mov
pop
das
imul
lods
pop
sub
sbb
sbb
mov
sar
shll
jb
mov
cmp
mov
movsb
and
push
inc
jns
movsl
jno
and
inc
loop
loop
sti
mov
fs
ficoms
mov
stos
notb
push
mov
xchg
in
lret
add
cld
jg
inc
ret
shl
repnz
into
insl
or
insb
and
xor
jne
add
sbb
dec
jne
pop
or
sub
jg
loopne
push
inc
insb
addr16
mov
xchg
repnz
sbb
and
ja
pop
sti
es
in
mov
push
sub
lock
daa
iret
add
mov
movsb
xchg
test
cltd
lock
les
push
sarl
popf
or
fstl
inc
cmpsb
je
push
movl
jmp
movl
mov
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
xor
mov
jmp
jmp
adc
inc
jno
pushf
jo
movsl
dec
icebp
mov
imul
cmp
fwait
ret
mov
mov
push
pop
lcall
add
cmp
cltd
mov
sti
or
pop
dec
lock
sbb
fisttps
stos
aad
mov
rol
adc
lret
psubq
pop
xchg
or
or
or
xlat
divb
fmulp
or
add
mov
out
pop
pop
pop
sub
xchg
add
aaa
mov
mov
pusha
nop
ja
pop
push
dec
sub
jns
dec
push
aaa
adc
mov
test
inc
ret
ja
xor
push
icebp
cwtl
mov
add
lea
push
push
cmp
pop
inc
cli
gs
cmc
dec
pusha
mov
inc
je
mov
sahf
clc
push
dec
mov
or
in
mov
aam
cmp
fcoms
rcll
pop
imul
jmp
mov
and
int3
jg
dec
jmp
xor
mov
test
ss
or
dec
or
stc
mov
insb
sbb
pop
inc
leave
enter
out
mov
lahf
push
test
mov
inc
ljmp
ljmp
enter
bound
or
mov
dec
insb
out
xchg
xchg
xchg
inc
mov
lds
sub
and
pop
add
pushf
int3
adc
je
mov
add
das
cmp
js
outsb
mov
hlt
xchg
mov
pop
add
negl
jnp
aam
add
push
lds
ss
mov
les
push
subb
pop
inc
pop
dec
cmc
stc
inc
lret
scas
jno
mov
xchg
rcll
xor
mov
pop
lret
fstpt
movsl
sub
mov
xor
sbbl
add
movl
cmp
movl
jmp
sbb
pop
mov
loope
push
inc
test
rcll
jo
imul
sub
pop
jo
mov
pop
popf
imul
or
orb
xchg
mov
xlat
sbb
jbe
jnp
cmp
hlt
test
insb
test
orb
ss
in
adc
xor
ja
xchg
xor
fld
push
cmp
pop
testl
popl
pop
cmp
cmp
lock
and
push
ror
fistpl
lret
mov
jo
lcall
je
mov
or
dec
jo
and
sbb
pop
scas
xor
xor
sub
lret
ja
mov
and
xchg
das
and
inc
out
xchg
scas
mov
insl
mov
out
dec
jp
push
pop
jl
out
sbb
orl
fwait
call
mov
ss
mov
sti
jecxz
loop
fcompl
dec
or
mov
xor
sbb
dec
mov
fsubs
xor
negb
mov
or
mov
es
mov
shlb
arpl
jae
out
xchg
xlat
test
sbb
push
cs
dec
cli
xor
jnp
cmp
out
jns
or
jle
shrl
sti
stc
call
pop
xor
test
dec
movsl
adc
pop
icebp
pop
daa
mov
cltd
lods
stos
clc
pop
test
push
pop
dec
test
jb
dec
sub
mov
mov
bound
cmp
or
fnstcw
mov
mov
mov
push
cmpsb
dec
cs
push
xchg
jecxz
xchg
sbb
and
ss
sub
ficoms
jge
cmp
add
xchg
lods
and
sbb
cs
sbb
lods
cmp
fnstenv
xor
jmp
jb
mov
sbb
mov
xor
xor
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jne
pushl
call
jmp
xor
add
mov
add
add
add
imul
mov
mov
or
mov
sub
cmp
movl
ja
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
call
jmp
adcl
jmp
rcrl
popf
push
stos
arpl
test
add
test
jo
imul
out
fadd
mov
cmp
pop
mov
clc
pop
or
mov
mov
push
test
adc
mov
push
xor
sti
repz
ret
cli
clc
js
xchg
jo
sub
dec
into
xchg
out
cmp
pop
in
jecxz
fistps
int
outsl
repnz
rcll
std
in
jns
aam
stc
dec
insb
pop
out
jbe
stc
fistpll
jecxz
ljmp
mov
aad
mov
mov
rcr
lock
popf
add
neg
mov
mov
mov
sbb
adc
cli
jp
cs
pop
jns
xchg
ss
les
adc
nop
gs
cmp
cmp
add
int
jb
ret
int3
repz
jae
inc
push
mov
push
fisttps
pextrw
dec
mov
movsl
popf
ret
dec
adc
sarl
add
popa
mov
sub
sbb
adc
sbb
js
outsb
inc
cli
xor
xchg
push
jae
mov
ja
sub
jp
sahf
jae
dec
mov
jl
sarl
outsb
cmpsb
mov
xchg
pop
leavew
sub
push
sahf
cmpsb
add
mov
or
cmp
xchg
flds
cs
stos
test
cmpsl
cmpsb
test
mov
or
jmp
push
adc
loopne
stc
adc
push
loope
pop
and
cwtl
pop
aaa
cmpsb
mov
sarb
les
sbb
and
xchg
aad
push
and
data16
or
mov
sub
out
jg
in
adc
gs
insb
cmp
popf
dec
insb
or
inc
mov
lods
std
stos
sub
xchg
fsts
xchg
cmpsl
cmp
mov
sbb
push
sbb
xchg
rcll
xchg
add
xchg
push
adc
xchg
and
aaa
or
push
cld
xor
add
movl
jmp
and
mov
or
mov
xor
not
xor
subl
add
or
add
or
imul
adc
mov
sub
mov
andl
sub
cmp
movl
ja
mov
movl
jmp
mov
mov
xor
xor
movl
cmpl
je
cmpl
jne
push
pushl
pushl
call
cmpl
jne
xor
add
dec
mov
mov
dec
mov
jmp
xor
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
mov
jbe
mov
jmp
imul
jb
adc
mov
jg
jo
mov
xor
gs
cmp
shrb
inc
pop
je
jnp
adc
inc
js
test
rorb
cmpsb
test
or
in
lea
and
mov
stos
dec
mov
clc
insl
pop
aas
cli
hlt
jg
xor
xchg
insb
adcb
mov
mov
dec
hlt
jno
popa
jno
in
and
or
xor
or
xchg
xlat
cmp
loopne
nop
in
cmp
leave
leave
jge
sbb
icebp
leave
mov
arpl
rcl
jno
sbb
das
add
sub
pop
jge
xchg
lret
add
mov
ret
cmp
and
xlat
pop
pop
push
or
jnp
mov
pop
mov
les
addr16
mov
sub
arpl
mov
or
int
xchg
in
pop
jl
xor
inc
add
jo
arpl
ja
mov
push
cld
xor
cmpsl
clc
out
push
adc
sub
jno
imul
fisubs
out
inc
les
test
popa
lcall
mov
shl
rcl
call
enter
mov
mov
push
ljmp
cmp
repz
mov
ds
mov
sub
movsb
jns
in
inc
notb
pop
mov
inc
xchg
pop
ffreep
out
icebp
cmp
stc
loope
out
mov
fiaddl
enter
popf
jb
add
rcl
push
xchg
push
adc
int
cld
ja
pop
dec
ret
cmpl
mov
pop
sahf
clc
dec
inc
js
lds
dec
mov
shrb
sub
test
xor
xlat
pcmpgtb
pop
mov
mov
lock
jmp
xchg
xchg
mov
xor
xor
add
add
imul
mov
mov
mov
mov
add
movl
mov
movl
movl
mov
xor
add
jmp
mov
xor
add
mov
mov
mov
jmp
arpl
push
out
jnp
stos
stos
in
lcall
jo
inc
int3
jge
mov
xorb
ret
shll
sahf
mov
sub
popa
sbb
repnz
cmp
pusha
orb
mov
or
sub
lods
jg
dec
or
loop
outsl
push
in
xor
push
lds
orb
sub
cmpsb
xchg
pop
inc
or
xchg
or
mov
fstpt
dec
push
add
mov
pop
cmc
and
mov
lods
enter
dec
mov
add
jle
and
dec
mov
iret
pushf
fsts
outsb
std
xor
dec
jns
inc
addr16
into
sub
hlt
test
jo
jb
and
scas
mov
inc
mov
test
xchg
xor
inc
xchg
test
aad
xchg
sub
mov
cmp
cs
rcr
xchg
pop
loop
cli
incb
xor
jge
cmp
orl
adcl
inc
mov
stc
mov
out
jmp
inc
dec
push
mov
adc
and
jp
mov
fildl
sub
leave
in
in
xor
test
sbb
out
stc
add
iret
js
pushf
sti
mov
mov
es
lret
and
xor
daa
adc
add
mov
js
in
mov
mov
lret
jp
xorb
cmpsl
sub
push
jg
sahf
adc
rcrl
dec
push
cmp
sbb
mov
and
jns
in
mov
repnz
pop
jno
rolb
mov
pop
sbb
mov
xor
repz
repz
xor
lods
rol
inc
push
mov
aas
pop
pop
xor
adc
ljmp
adc
out
pop
cld
lret
out
mov
mov
xor
add
mov
mov
mov
jmp
bound
popf
cmc
mov
cltd
insb
xchg
movb
fidivs
imul
pop
mov
push
sub
addb
jae
xorb
mov
ss
mov
or
adcl
xchg
fstpt
push
in
gs
mov
fiaddl
scas
add
lahf
xchg
icebp
les
push
les
mov
and
or
shll
add
repz
sbbb
aam
jge,pt
lret
les
push
imul
inc
lcall
jp
xchg
add
xor
enter
es
es
ss
dec
mov
and
and
xor
and
outsl
fistpl
rcrl
inc
sbb
scas
or
dec
sbb
insb
lcall
jnp
sub
jecxz
xchg
fildll
cltd
xchg
mov
mov
dec
sbb
fidivl
js
mov
mov
mov
push
mov
mov
je
push
orl
out
and
xor
push
outsl
pop
les
hlt
insb
sbb
pop
inc
sti
jne
mov
cmp
inc
out
xor
addr16
into
mov
sahf
adc
sbb
jbe
jno
jle
mov
pop
mov
xor
sub
pop
mov
imul
mov
push
push
xor
mov
arpl
jae
sub
and
sbb
cmpb
daa
popf
test
lret
adc
jne
inc
mov
add
addr16
push
mov
sub
sub
sub
push
push
pop
sub
sbb
fdivs
lock
cs
das
or
mov
cmpsl
lcall
pusha
sbb
or
arpl
js
cmpsb
mov
lahf
std
mov
mov
jge
xor
add
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
xor
xor
add
jmp
or
das
mov
push
test
into
xchg
push
shrb
fdivl
imul
xchg
cmpsb
cltd
test
adc
adc
cmp
adc
mov
ss
enter
mov
inc
jbe
mov
dec
outsl
xchg
in
and
movsl
adc
mov
ss
mov
lahf
cmpl
ret
mov
insl
inc
sub
pop
imul
addr16
mov
push
adc
adc
pop
frstor
out
je
pop
xor
andb
inc
mov
cmp
inc
xor
test
mov
fisttpl
ss
pop
repnz
jbe
iret
add
xor
sbb
jg
adc
mov
xchg
stos
fnstsw
arpl
adc
and
xchg
movsb
xchg
shlb
sbb
jmp
scas
in
ljmp
jns
mov
ds
adc
lock
adc
scas
call
mov
or
jo
out
mov
mov
sub
mov
add
mov
je
add
xor
int3
and
mov
adc
sbb
push
jl
mov
xchg
xchg
cld
sti
push
imul
inc
mov
jg
je
clc
xor
popf
or
lods
xchg
push
leave
fmull
mov
sub
mov
or
adc
popf
mov
pop
mov
test
inc
lods
pop
popa
adc
sbb
mov
sbb
ret
out
inc
xor
jmp
in
roll
sti
dec
cmpsl
pushf
int3
sbbb
inc
sbb
jg
orb
std
push
lahf
orb
inc
push
movsb
cwtl
mov
outsl
mov
out
fidivrs
xchg
fisubl
add
jmp
sbbb
cltd
js
mov
push
jle
sub
jg
jo
push
cmp
sahf
sar
orb
or
scas
cmp
xor
bound
mov
cmpsb
dec
xchg
and
pop
hlt
mov
sbb
lret
mov
sahf
lock
and
xchg
mov
aaa
daa
in
or
arpl
jo
or
nop
sbb
sahf
addl
adc
popf
inc
out
in
aad
add
sahf
mov
xchg
int
lcall
mov
inc
call
fisubrs
mov
xor
push
cmp
mov
inc
xchg
addr16
movsb
fcomip
scas
hlt
mov
pop
mov
mov
fdivl
test
clc
mov
aaa
pushf
mov
push
ljmp
dec
add
test
push
daa
mov
sbb
mov
push
cmp
stos
lods
test
cmp
jbe
push
dec
sti
sbb
test
dec
inc
sub
loopne
inc
popa
lahf
test
roll
in
pushf
jb
ret
movsl
push
xchg
pushf
scas
dec
lea
mov
stc
adc
sbb
pop
std
imul
adc
and
aam
xchg
test
mov
cmp
mov
lea
add
jnp
in
arpl
pop
add
and
or
inc
dec
jae
nop
sub
int
xor
divl
push
test
inc
pop
cmp
mov
out
add
jnp
push
adc
jmp
or
sbb
push
mov
pop
sar
or
pop
or
sbbl
cld
dec
add
pusha
dec
inc
je
lcall
inc
xor
pop
repnz
ret
mov
pop
andl
movsb
mov
shlb
jb
xlat
imul
jmp
clc
icebp
mov
icebp
ficompl
cld
sahf
fdivs
imul
pop
es
daa
sahf
inc
loop
sbb
shlb
shlb
ret
stos
sbb
cmc
sbb
push
out
xor
sahf
popf
dec
push
sahf
and
int3
fs
mov
hlt
les
fs
insb
dec
lds
movsl
mov
hlt
enter
mov
pop
insb
mov
into
test
dec
push
je
pop
into
insb
push
push
xchg
cld
adc
cmpsl
push
jg
iret
insl
xchg
scas
pop
mov
fwait
adc
xlat
or
jne
jp
sahf
cwtl
in
jbe
cmp
mov
pushf
scas
and
insl
cs
jnp
cmp
or
xor
jae
scas
sub
dec
test
add
cmp
pop
rolb
repz
aam
fsubl
ljmp
mov
dec
add
mov
cmp
mov
pop
pop
pop
jno
movsb
lret
mov
adc
push
pop
mov
rcrl
les
sub
xlat
or
std
inc
xor
imul
stos
add
fadd
clc
ss
mov
das
add
xchg
and
jno
stos
aaa
xor
inc
push
jns
jns
insb
insb
aad
jmp
inc
mov
insb
int
out
adcl
test
mov
pop
push
ret
out
mov
aas
out
jp
dec
adc
xor
xchg
sbbb
inc
lret
je
inc
cmp
test
imulb
push
inc
inc
push
push
cmp
stos
adc
jo
jmp
das
addr16
inc
mov
jne
push
es
jle
shll
mov
pushf
mov
adc
nop
pop
adc
movsb
daa
or
or
popf
incl
insl
push
sbb
or
psrld
push
cmp
es
loope
xchg
cli
out
out
push
in
mov
mov
mov
xor
jmp
dec
iret
lods
dec
lods
imul
lock
and
out
jo
jg
jo
movsb
inc
adc
adc
mov
test
into
stc
xchg
inc
inc
jb
inc
inc
mov
cltd
xor
mov
push
sub
mov
inc
xor
shll
mov
mov
push
jne
arpl
mov
sbb
pop
and
cmp
in
mov
out
ja
or
loope
sub
aam
call
sahf
sbb
mov
adc
add
adc
and
clts
in
js
dec
push
addr16
ss
jae
cmpsb
out
dec
popa
push
and
lods
shl
outsl
xchg
loope
jns
push
jb
rcl
fiaddl
loop
mov
out
es
and
cmp
repz
xchg
jp
xlat
adc
mov
mov
jns
or
fisubrs
das
inc
cmp
mov
addr16
mov
inc
add
out
mov
jmp
mov
inc
push
bound
daa
subb
int
bound
dec
push
cli
scas
jae
lret
loopne
insl
push
lret
sbb
pusha
inc
pop
or
adc
push
rcrb
jmp
lret
rcll
jno
je
add
int
mov
add
sbb
bnd
and
test
out
cmpl
cmp
jbe
mov
mov
jb
bound
mov
push
out
mov
imul
rcrl
jbe
xor
dec
cld
daa
arpl
sbb
cmp
mov
lahf
cmp
sbb
xchg
hlt
inc
lock
ljmp
sbb
xchg
dec
mov
or
jb
dec
dec
xchg
in
out
bound
and
adc
test
lock
lds
movl
mov
xor
sub
mov
mov
xor
add
imul
mov
xor
sub
lea
cmp
jbe
mov
jmp
int3
sub
push
mov
jp
mov
in
jo
jg
jo
mov
sub
pop
sbb
mov
jno
hlt
jmp
aad
xor
jne
loop
seto
pop
inc
and
xor
test
mov
lahf
dec
push
mov
lahf
test
dec
xor
dec
jae
push
decb
inc
sbb
sahf
mov
repz
nop
jp
dec
and
sub
and
pop
mov
lret
dec
jl
push
pop
imul
and
xchg
bound
clc
nop
js
out
adc
mov
in
fxch
xchg
sub
hlt
mov
nop
sti
sbb
jle
int
mov
popf
mov
nop
mov
mov
in
sarl
pop
jecxz
cmpsl
xchg
jno
daa
pop
sbb
lock
inc
lods
sbbl
inc
dec
pop
adc
int
stos
stos
hlt
jo
push
mov
xchg
jp
sti
xor
sub
addb
test
sbb
test
pop
mov
push
sbb
inc
jmp
notb
mov
int
cmpb
or
pop
fiadds
cmpsl
cmp
outsl
fidivl
movsb
stos
jb
lcall
sbb
push
stos
sub
dec
call
mov
jmp
jge
inc
fidivs
adc
pushf
loop
gs
sbb
lods
cmp
pop
loopne
ja
add
push
les
icebp
jmp
ret
in
fcoms
pop
stc
lcall
mov
xlat
cltd
add
sbb
mov
mov
pop
pop
shll
lods
dec
clc
out
je
std
add
out
test
fiadds
dec
cltd
and
xor
cmp
aad
inc
lret
in
or
jl
sub
imul
loop
test
rol
cmpsb
pop
mov
enter
mov
xor
add
imul
mov
xor
add
mov
lea
mov
mov
jmp
popa
ja
add
xorl
adc
mov
fdivl
jo
jg
jo
pop
xchg
fidivs
cmp
inc
jnp
mov
hlt
ret
mov
movsb
jl
addr16
cmp
andl
mov
or
push
les
fdivrs
xor
lret
test
addr16
xor
rolb
sub
aad
lcall
fdivrp
cmp
fmul
xor
sbb
add
mov
xchg
push
add
ficoml
inc
stos
xchg
dec
clc
enter
mov
mov
sarb
mov
and
repnz
js
jmp
push
pop
ficoml
or
xchg
inc
pop
add
imul
and
pop
xchg
add
sub
xchg
idivb
pop
hlt
orl
repnz
out
jecxz
leave
es
rorb
andl
dec
mov
mov
inc
mov
cmp
cmp
ja
mov
jo
or
xchg
mov
movsl
hlt
sub
loope
int
repnz
out
mov
into
adc
insb
add
lret
decb
hlt
jle
cmp
rcrl
call
repz
popa
into
cmp
dec
out
push
xchg
mov
push
test
cmp
dec
sarl
sub
jl
sarl
fs
sbb
pusha
fs
cld
push
xchg
xchg
dec
xor
xchg
push
sub
dec
cld
adc
push
in
sbb
add
aam
jb
pop
fiadds
std
cmpxchg
scas
movsl
xchg
xor
xor
sub
pop
mov
test
fisttps
inc
sub
cmpsb
imul
rclb
scas
inc
xor
sarb
outsl
push
dec
hlt
cltd
push
dec
lods
addl
ret
pushf
fidivl
mov
add
repz
sub
subb
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
pop
pop
leave
ret
push
mov
sub
xorl
push
call
test
jne
addl
xor
jmp
call
cltd
movl
cmp
jne
cmp
je
push
subl
call
addl
test
movl
jne
subl
push
xor
mov
or
mov
xorl
movl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
jmp
andl
mov
inc
mov
cmpl
jne
pushl
pushl
push
push
call
cmpl
jb
lea
subl
mov
lea
andl
mov
inc
mov
cmpl
jne
pushl
pushl
push
push
pushl
call
cmpl
jb
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jb
mov
xor
mov
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jne
push
pushl
pushl
push
push
push
pushl
call
jmp
mov
movl
cmpl
je
cmpl
jne
push
push
pushl
push
pushl
push
pushl
push
call
mov
dec
mov
jmp
mov
xor
mov
mov
addl
push
mov
sbbl
xor
sbbl
push
xor
mov
adcl
add
mov
mov
movl
cmp
mov
je
mov
xor
subl
add
addl
imul
mov
jmp
andl
mov
inc
mov
cmpl
jne
pushl
push
push
call
cmpl
jb
xor
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
add
mov
mov
sbb
mov
sbb
xor
not
add
mov
mov
mov
subl
xor
add
movl
cmp
jne
xorl
pushl
subl
pushl
call
mov
mov
xor
mov
sbb
mov
inc
mov
mov
or
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
push
push
call
cmpl
jne
xor
or
inc
mov
jmp
mov
mov
mov
movl
mov
and
mov
andl
mov
inc
mov
cmpl
jne
call
cmpl
jb
mov
xor
xor
add
mov
xor
xor
add
lea
cmp
ja
mov
xor
lea
push
mov
xor
lea
push
mov
pushl
call
mov
xor
lea
mov
mov
xor
xor
add
mov
xor
lea
cmp
jbe
mov
mov
mov
mov
mov
mov
mov
sub
xor
mov
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
pushl
mov
pushl
add
mov
mov
pushl
call
mov
mov
mov
jmp
mov
mov
xor
add
cmp
jne
mov
xor
add
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
mov
movl
mov
xor
add
mov
mov
mov
mov
mov
mov
push
pop
sub
add
movl
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
lea
mov
mov
xor
add
mov
lea
push
mov
xor
add
push
mov
push
pushl
call
xor
mov
sub
push
mov
add
push
call
inc
cmp
jb
mov
call
lea
mov
mov
mov
pushl
lea
push
call
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
xor
or
sub
mov
mov
movl
cmpl
je
cmpl
jne
push
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
add
mov
mov
mov
sub
mov
xor
add
and
mov
mov
mov
subl
push
adc
push
mov
andl
mov
inc
mov
cmpl
jne
pushl
call
cmpl
jb
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
jmp
jmp
cmp
inc
mov
negl
aas
sbb
shl
jo
xchg
jg
jo
add
les
sub
jg
or
popf
lods
pop
pop
lds
out
xchg
daa
mov
sbb
pushf
aad
fs
int3
mov
jle
xor
jns
mov
mov
xchg
lret
jle
das
xchg
dec
imul
xchg
fcompl
ret
ficomps
jae
xor
stc
lods
mull
fimuls
popf
push
aad
push
in
in
movsb
dec
das
mov
cmpb
je
in
sbb
cmp
and
xchg
mov
mov
mov
std
or
jp
jns
loop
sti
lds
shlb
push
xlat
and
cwtl
add
movsl
dec
push
andl
jne
jno
loopne
lahf
int
lcall
scas
adc
push
outsw
ret
sbbb
sub
sarb
pop
sarl
mov
mov
pop
mov
push
stos
bound
out
jb
xlat
adc
jge
clc
scas
xchg
cmp
mov
inc
mov
pop
sub
push
add
sbb
fdivp
dec
lret
xchg
test
mov
mov
push
leave
push
pop
popa
and
fs
xchg
add
xor
jo
call
dec
jp
jne
sub
adc
adc
add
push
pop
cmpsl
mov
adc
icebp
jl
ret
dec
add
fsubrs
push
loop
cmp
dec
aas
sbb
dec
dec
or
xor
lea
jae
outsb
movsl
nop
outsl
sbb
jmp
mov
jae
jno
mov
hlt
or
idivb
ja
jo
xchg
jg
jo
or
testb
pop
notb
int
movsb
cwtl
aam
pop
xchg
out
jae
ret
or
push
test
cmpsl
jp
xor
and
idivl
pop
pop
push
xorb
jo
jbe
jne
ficomps
subb
insb
rcl
add
xchg
mov
push
in
out
jno
lods
xorl
jo
leave
fistl
jnp
int3
scas
rdmsr
dec
cs
push
icebp
je
pusha
ja
sub
mov
cmp
icebp
ret
in
pop
mov
inc
mov
xchg
leave
or
inc
cwtl
adc
mov
stos
lret
sbb
and
push
push
jnp
jne
pop
aad
popf
mov
adc
scas
arpl
push
lcall
inc
jbe
inc
ljmp
ljmp
xchg
stos
in
or
xchg
cmc
pop
lahf
cmp
shll
stc
leave
test
sbb
dec
dec
das
jo
loop
xchg
aad
out
imul
in
ljmp
clc
and
in
cmp
outsb
scas
outsb
mov
fnstcw
push
pushf
lahf
xor
push
nop
lds
xchg
sub
xchg
es
cmp
and
mov
aad
stos
sub
mov
mov
aaa
lods
add
pop
loope
test
dec
pop
add
pop
ret
inc
arpl
sti
and
ljmp
mov
pushf
jb
add
sbb
add
sbb
mov
notl
lea
xor
mov
mov
add
mov
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
add
mov
movl
lea
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
and
mov
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jne
push
push
push
call
jmp
mov
addl
mov
sub
xor
add
add
neg
mov
mov
movzwl
sbb
mov
movl
mov
mov
orl
mov
addl
movzwl
add
movl
mov
jmp
jbe
dec
sahf
jb
jbe
xor
lods
inc
fimuls
jo
or
loope
dec
daa
pop
repz
add
sbb
insl
stc
loop
fldenv
repz
dec
fcompl
fildl
or
push
frstor
cmpsb
or
cs
xor
cs
nop
mov
dec
ja
loope
sub
push
lock
test
jle
cltd
jnp
or
dec
inc
push
jp
stc
movsb
push
lcall
push
test
dec
hlt
stc
xlat
pop
xor
pop
das
out
adc
subl
mov
in
testb
jg
sub
cmp
hlt
adc
sbb
test
pop
dec
jmp
mov
divb
int
out
dec
ja
lea
fcomps
js
push
repz
push
cmp
add
jne
iret
and
cmp
jecxz
xor
xor
les
out
std
jle
mov
out
es
pushf
fists
bound
jo
rolb
mov
fldt
fwait
and
xor
loope
test
xchg
pop
popf
bound
jp
and
lcall
cmp
iret
outsb
out
mov
shrl
jmp
idivb
into
stos
mov
xchg
fwait
and
mov
lods
adc
jle
jecxz
xchg
outsb
loope
sbb
pop
inc
push
fs
adc
add
push
mov
adc
dec
insb
push
mov
jb
lret
hlt
mov
inc
dec
lea
bound
mov
lret
test
icebp
mov
xchg
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
mov
mov
mov
xor
mov
sub
add
mov
mov
mov
movzwl
add
mov
mov
jmp
and
repnz
inc
std
mov
mov
and
jo
xchg
jg
jo
or
cld
dec
push
pop
stos
mov
pop
push
push
jge
cmpl
or
andl
or
mov
and
decb
stos
xor
push
inc
sbb
pusha
add
popa
imul
and
fnstenv
push
cmc
sbb
pop
mov
es
ret
mov
jo
jne
xor
call
pop
mov
test
and
or
adc
pop
sbb
xor
stos
jg
push
xchg
push
xor
bound
add
or
or
les
mov
lahf
shll
es
clc
int3
iret
xchg
pusha
fsubp
dec
xchg
add
jns
jp
ljmp
les
dec
movsl
lret
clc
xor
sbb
and
pop
daa
mov
pushf
jle
ret
dec
add
stos
pusha
inc
addr16
pop
xor
jge
in
mov
pushf
test
mov
incb
pop
jp
adc
jg
testl
push
sub
push
pop
es
dec
fs
xchg
insb
mov
jmp
mov
pusha
sbb
adc
mov
pop
jle
add
pop
lret
pop
dec
and
and
fldl
lods
xchg
lahf
sub
sbb
add
xchg
scas
fs
int
clc
mov
mov
push
test
inc
fcom
out
pop
imulb
mov
pushf
push
add
xchg
push
sbb
dec
or
lea
xor
sub
mov
movzwl
cmp
mov
movzwl
jg
xor
sub
sub
mov
jmp
xor
lea
mov
mov
cmp
je
mov
movl
jmp
mov
mov
xor
add
cmp
je
jmp
icebp
in
popf
adc
xchg
cld
insl
in
cmp
jo
jg
jo
fs
or
loop
in
xor
cltd
inc
lcall
sti
mov
pop
xchg
sbb
mov
sub
imul
adc
mov
jo
out
fcmovnb
inc
inc
or
negb
xchg
inc
dec
push
mov
lahf
jmp
or
mov
inc
xchg
stos
xor
cli
dec
push
sub
adc
xor
divl
addb
mov
jle
xchg
repnz
fsubrl
lahf
pop
and
cmpsb
jle
insb
pop
mov
xlat
and
cld
cmp
fists
mov
dec
fmul
js
mov
push
add
popa
dec
push
dec
in
out
call
cwtl
jbe
test
lock
xchg
mov
stc
call
mov
sbb
push
stos
out
mov
aad
stos
or
cwtl
jne
in
loop
cmpsl
clc
lcall
push
push
mov
and
clc
scas
mov
aam
mov
mov
cld
xor
pop
cltd
and
mov
inc
leave
punpckhdq
jmp
ljmp
mov
movl
aam
int
add
mov
xchg
sarl
aaa
pop
or
mov
sbb
loope
sub
inc
es
sarb
fsub
lods
pusha
lods
mov
push
mov
mov
nop
ljmp
pop
xor
adc
jo
out
pcmpgtd
mov
dec
call
add
int
add
add
rorl
add
mov
mov
xor
add
jmp
iret
dec
mov
mov
icebp
dec
dec
int
dec
xor
js
fucomi
jo
xchg
jg
jo
daa
sub
or
fisubs
add
insl
add
mov
addl
cmpsl
push
add
inc
pop
cmp
daa
sub
aaa
andl
pop
aaa
sbb
or
movsb
inc
loope
popf
pop
xchg
inc
mov
inc
pop
int
mov
pop
pop
out
add
jmp
cs
cmovge
inc
or
add
into
dec
insb
push
jmp
xchg
or
jl
cs
repnz
pop
ret
dec
ficomps
mov
outsl
xchg
js
insb
xorl
push
xchg
enter
sbb
int3
stos
adc
pop
adc
inc
mov
pop
jp
push
and
jae
adc
fisubl
mov
pop
jmp
mov
clc
out
jmp
idivb
push
cmpb
mov
jne
loopne
fstpt
or
push
lahf
loope
std
or
xchg
pop
and
ss
daa
test
mov
lods
mov
fdivrs
and
bnd
addr16
lahf
pop
hlt
addr16
pop
notl
xor
andl
sbb
dec
hlt
xor
xchg
rcrb
movsb
stos
ds
daa
scas
push
xor
cmpsl
cmp
sti
loop
mov
mov
lret
push
bound
inc
repz
lods
lret
sbb
pusha
xchg
add
xchg
and
ror
adc
mov
lcall
xchg
push
mov
into
push
int3
mov
fsubr
mov
add
mov
icebp
in
icebp
mov
push
add
scas
jo
jo
xchg
jg
jo
outsb
les
daa
dec
scas
pop
lds
es
adc
stos
rorl
icebp
jg
in
out
cli
pop
mov
out
mov
inc
movsl
push
std
dec
sbb
sbb
xlat
adc
jg
aaa
add
cmp
mov
xchg
rorb
aaa
mov
loope
outsb
push
mov
pop
mov
xchg
jne
cmc
cmp
push
cmp
fdivs
jne
inc
sbb
lahf
mov
cld
cmp
sti
fmuls
dec
add
aam
adc
push
add
mov
mov
loope,pn
enter
pop
cli
mov
cmpsl
sbb
je
sub
testb
imul
stc
or
pop
in
test
push
jne
push
sub
test
add
sarb
scas
jmp
mov
idiv
mov
mov
jnp
int
sbb
pop
pop
cli
and
mov
jnp
ret
loope
les
ljmp
call
das
fnstenv
fisubrs
push
fidivrs
test
sbbl
xor
lret
rolb
addr16
fstpl
in
mov
mov
dec
lahf
decl
mov
cld
add
mov
test
out
mov
insl
mov
inc
cwtl
inc
jae
lret
adc
and
ss
es
ds
adc
enter
mov
mov
xor
add
cmp
je
mov
mov
add
mov
mov
mov
jmp
dec
push
sub
imul
and
jo
jg
jo
std
mov
sub
jecxz
cmp
xchg
xchg
je
cmp
int
pop
xor
insb
push
test
loopne
sbb
call
das
xor
xor
mov
mov
in
loop
vmovmskps
fwait
push
sarb
clc
sbb
not
mov
js
dec
push
inc
mov
cmc
fcmovb
in
mov
cmp
push
mov
and
out
fnstenv
scas
xchg
sahf
std
pmaxub
and
cmp
das
ss
pop
roll
sub
sub
jmp
shrb
mov
or
call
mov
add
sbb
into
call
lods
mov
pop
mov
daa
leave
dec
mov
push
jno
es
das
fnstsw
cwtl
inc
scas
adc
decb
inc
dec
push
scas
aam
pop
out
es
jle
pop
out
fdivl
and
fmuls
out
lcall
xchg
pop
mov
pop
je
insl
lahf
adc
adc
out
adc
sahf
leave
cs
push
loop
ret
fisubrs
cmpsb
or
cli
out
lock
push
mov
cmpsl
icebp
lahf
mov
imul
pop
pop
enter
sub
lods
mov
add
enter
mov
ss
lret
or
xchg
scas
xor
mov
jecxz
mov
aad
ficoml
loopne
push
push
mov
out
sub
xchg
push
inc
mov
mov
jmp
frndint
std
imul
mov
xor
repz
xchg
jg
jo
push
xor
repz
ficoms
or
out
adc
inc
mov
lock
jl
inc
addr16
jo
add
or
pop
jnp
xor
mov
pop
into
jo
pop
adc
jle
stos
sahf
xor
hlt
or
and
fwait
lds
dec
pop
and
pop
or
adc
pop
inc
mov
mov
jo
mov
mov
pop
and
jmp
aas
lods
test
pop
xlat
sub
xlat
pop
fprem1
mov
data16
mov
or
mov
in
arpl
mov
sub
cltd
and
dec
mov
adc
in
dec
xlat
cwtl
cmp
pushf
hlt
and
in
test
add
dec
fsubs
imul
cmpsb
jnp
cs
pusha
cld
shl
xchg
mov
cltd
lods
repz
fists
xchg
mov
jge
mov
bound
leave
repnz
out
push
or
jge
pop
mov
inc
inc
jmp
xchg
divb
imul
in
loope
loop
xor
xchg
dec
xor
bound
add
xchg
xlat
scas
jbe
sbb
ljmp
mov
push
jmp
inc
fcoml
jp
aaa
outsl
filds
sbb
into
add
xor
and
lock
sahf
hlt
mov
loop
push
xchg
and
mov
add
jmp
hlt
sbb
rep
cmp
aaa
ja
sbb
dec
bnd
xchg
jg
jo
bound
outsb
xchg
dec
adc
cwtl
adc
sbb
or
pop
fstps
adc
imul
or
adc
repnz
xchg
in
mov
and
jp
pusha
mov
lea
lock
or
and
out
andl
xchg
int3
out
sbb
jae
out
jb
aad
push
scas
or
jle
jg
hlt
and
mov
rcrl
roll
xor
jl
sbbb
cmp
cmp
cld
adcb
inc
shrb
adc
lds
in
out
inc
push
add
sub
adc
mov
outsl
jl
mov
testl
inc
cmpsb
xchg
mov
pop
sbb
inc
daa
add
movsl
pop
addl
and
out
mov
imul
pop
push
adc
out
add
jp
sarl
jnp
addl
adc
mov
mov
pop
loopne
mov
and
je
shld
stc
push
dec
push
jo
fcompl
inc
sub
cwtl
nop
cli
dec
xchg
js
dec
mov
fstps
push
push
mov
std
fcomip
fs
sub
pop
pop
shll
fisubrs
orb
int
xor
leave
clc
int3
into
in
mov
pop
imul
jle
js
adc
insl
fnstcw
hlt
add
ljmp
test
add
add
clc
xor
add
mov
jmp
xorl
jmp
mov
mov
mov
mov
mov
jmp
lret
icebp
dec
cmp
mov
xchg
jg
jo
in
sti
lret
movsl
sbb
fdivr
mov
xchg
jg
lods
shlb
mov
hlt
inc
rcrb
outsl
dec
or
popf
shl
xchg
and
lahf
lods
dec
mov
jg
jle
mov
push
pop
cli
cmpsb
jae
in
dec
into
jnp
aas
inc
pop
ficoms
shll
cmpsl
dec
mov
adc
adc
pushf
jg
inc
and
incb
iret
lret
fcoml
and
jb
dec
scas
xor
in
test
in
or
sarl
stos
or
mov
aas
in
insb
adc
mov
pop
xor
jecxz
jg
xor
std
addl
xchg
or
cmpsb
idiv
out
xchg
testl
shlb
xchg
mov
jle
sti
std
icebp
lret
cmpsl
push
pop
stc
and
stos
mov
arpl
add
mov
xor
push
xchg
scas
arpl
cmc
rorl
dec
pushf
ds
ret
jmp
ret
std
in
sbb
cmovno
call
cmpsb
in
int
xchg
loop
adc
in
add
pushf
loope
fsubr
sub
and
fucomip
shll
sti
imul
in
stc
std
ficompl
loopne
flds
dec
sub
popa
sub
aas
xlat
cltd
ret
mov
int3
sar
cltd
pop
aad
repnz
in
or
mov
pop
sbb
cmpsb
aad
add
inc
negl
aas
mov
es
dec
ljmp
hlt
pop
mov
dec
sbb
xchg
mov
inc
or
jne
call
mov
cmp
je
mov
mov
pop
pop
pop
leave
ret
push
mov
push
sbb
movl
sbb
mov
orl
jmp
push
mov
xor
je
stos
aas
lods
and
jns
jo
jb
jo
xor
ljmp
push
xchg
pusha
ja
ja
ret
mov
ljmp
les
fwait
cmp
cltd
out
dec
leave
movsl
jmp
jge
xor
sub
stos
sub
mov
xchg
daa
sbb
mov
repnz
jecxz
push
mov
mov
cli
jmp
sub
push
int
out
jg
and
pop
ss
es
pop
mov
jno
stos
mov
fadds
xchg
movsl
sbb
dec
std
xchg
jp
jbe
fwait
mov
add
les
nop
arpl
movl
cwtl
aaa
jp
test
mov
pop
jl
fisttpll
and
pop
mov
arpl
adc
ret
xchg
add
movsl
sub
jmp
mov
out
add
aam
cmp
add
sub
xchg
jmp
xchg
jns
stos
sbb
or
mov
cs
and
fsts
movsb
inc
push
jae
lret
dec
repz
cmc
add
loop
or
add
stos
sbb
add
daa
dec
add
xchg
pinsrw
push
cmp
xor
mov
in
fst
mov
sub
insl
sbb
negl
outsb
test
stos
mov
sub
sub
pop
movsb
fwait
in
aaa
repnz
pop
movsl
xchg
fdivp
into
add
push
les
jecxz
jle
sub
movsl
rol
and
push
test
dec
aas
ret
mov
fisubs
test
add
mov
insl
jo
aam
cmp
aam
jb
loopne
iret
add
popa
and
dec
in
dec
mov
xchg
or
movsb
jns
and
test
push
xor
cli
sbb
inc
out
loop
lea
fisttpl
pushf
push
sbb
shll
subl
add
andl
xor
cmp
movl
jne
mov
mov
movzbl
xor
mov
add
xor
mov
mov
or
mov
andl
mov
inc
mov
cmpl
jne
push
pushl
push
pushl
call
cmpl
jb
xor
push
jmp
je
test
pop
pop
or
mov
jo
jb
jo
push
xlat
rorl
mov
sbb
js
xor
and
push
sub
gs
sub
xchg
lret
jmp
inc
jo
insl
pop
sub
bound
push
or
dec
sbb
enter
jo
push
mov
scas
and
mov
sub
pop
pop
ficompl
not
in
dec
dec
popa
dec
cmp
xchg
jecxz
loope
nop
lret
popa
es
cmpb
adc
push
inc
loopne
hlt
mov
hlt
ja
mov
lock
movsl
dec
aas
jnp
or
ja
dec
mov
mull
in
adc
dec
dec
adc
mov
fcomp
and
jg
adc
or
loopne
mov
xor
fcoms
adc
cltd
mov
cld
inc
inc
and
adc
jecxz
mov
ljmp
cmp
bound
popa
das
cmc
push
addr16
insl
xor
xchg
jns
mov
and
dec
jp
std
sub
popa
xor
int
ss
repz
adc
imul
inc
add
add
jmp
repnz
jns
test
lods
std
pop
rolb
hlt
xlat
repz
test
jmp
daa
rorl
and
add
movsb
repz
and
movntps
insl
adc
or
repz
insb
sub
shlb
das
jbe
jge
pop
sbb
cmp
outsl
out
call
xor
dec
or
mov
pop
adc
pop
pop
mov
xor
or
arpl
sbb
jl
adc
cmp
into
fcmove
mov
cmpsl
fcmovne
xor
pop
lea
pop
adc
pop
out
ja
imul
adc
sub
dec
sbb
movsl
insl
mov
xchg
mov
mov
add
jmp
cli
cmpsl
push
in
gs
arpl
jge
jo
jb
jo
sbb
stos
aaa
aad
push
push
in
test
cmpsl
mov
in
lds
mov
cwtl
and
cmpsl
jno
xchg
cld
sbb
and
jp
fcmovnu
pop
mov
or
sbb
fidivs
fcmovbe
xchg
icebp
lahf
mov
mov
pop
xor
mov
jmp
mov
cmp
push
add
and
mov
and
in
ret
fisttps
mov
lods
das
jae
nop
mov
xlat
in
pop
popa
out
dec
mov
or
in
mov
sahf
aas
and
mov
cld
int3
push
lea
outsl
lcall
rclb
loopne
fnstsw
adc
aas
push
enter
push
push
sarl
push
fnstcw
arpl
jp
push
lods
mov
cmp
cltd
sti
cld
ficoms
mov
or
test
lea
mov
in
xchg
ret
or
les
mov
cmp
frstor
cmpsl
inc
jl
adc
or
push
popf
dec
pusha
mov
repz
xchg
jb
jle
xor
shlb
call
into
adc
in
ror
push
inc
mov
jg
xchg
cmp
shl
sahf
adc
push
rcll
ljmp
in
test
outsl
popf
repz
lcall
repnz
jae
bswap
stos
pop
shrl
pop
mov
out
fldl
cwtl
daa
mov
jnp
and
xchg
out
inc
mov
jle
jnp
cwtl
test
add
dec
orl
cmp
gs
push
cmpsb
or
mov
push
dec
and
xchg
les
aas
adc
enter
ja,pt
repnz
test
jae
fidivs
nop
add
cmp
pop
je
mov
jmp
mov
xor
add
jmp
mov
jmp
or
scas
shll
jb
loop
lret
xchg
mov
jo
jb
jo
jnp
xchg
bswap
cld
hlt
inc
mov
adc
xchg
mov
lea
call
dec
mov
xorl
xor
mov
inc
push
ja
orl
cli
cltd
inc
mov
test
sub
in
popa
sub
xlat
imul
cmp
repnz
stos
xchg
dec
mov
scas
out
jl
fs
push
xor
enter
mov
hlt
pop
lahf
insb
out
jnp
xor
pop
rol
int3
mov
addl
jae
fs
dec
ret
sti
sbb
pop
insb
mov
mov
inc
loope
in
push
or
mov
in
pop
cli
inc
aaa
or
push
fucomp
mov
insb
and
cmp
mov
push
mov
jo
les
pop
cmp
jnp
sub
leave
hlt
cmp
adc
fwait
aas
pop
cmp
pop
push
cmp
mov
dec
sub
add
mov
stos
xchg
sbb
fsub
stos
lods
dec
imul
fistps
aas
sbb
aad
div
bound
cli
ret
movsl
sub
mov
inc
push
cmp
xchg
inc
mov
xlat
fimuls
sbb
pop
mov
shl
test
mov
cs
pop
add
pop
lret
adc
mov
outsb
sti
mov
clc
iret
xor
pop
mov
bound
lret
xchg
mov
in
js
and
fcmovnu
addr16
test
jg
mov
aaa
jl
mov
jno
jl
fsubp
lahf
scas
xchg
je
cmp
mov
xor
fnsave
mov
in
mov
in
cmpsb
inc
push
xor
scas
mov
in
mov
xchg
cmp
jg
mov
inc
pop
inc
int3
lods
pop
sbb
push
or
jmp
jnp
xchg
les
sub
icebp
push
mov
jo
jg
jo
rorl
inc
test
or
dec
test
test
mov
sbbl
add
inc
xlat
insl
filds
and
fwait
and
and
push
dec
ss
lret
xor
adc
mov
mov
cli
push
cmc
push
pop
mov
nop
mov
inc
leave
enter
movsl
cmc
cmc
sar
aam
push
and
insl
addb
divl
xchg
jnp
mov
test
in
xchg
jp
mov
lret
orl
or
mov
addr16
iret
fidivl
xchg
xchg
jo
pop
data16
daa
arpl
movsl
and
xchg
dec
adc
cmc
sub
mov
pop
push
daa
sbb
inc
mov
push
int
call
popf
ret
icebp
lret
shrl
dec
mov
testb
cmp
inc
out
addl
adc
int
leave
pop
cli
inc
or
in
or
je
and
pop
leave
js
out
ret
inc
push
or
test
dec
lcall
leave
aad
sub
jl
leave
jne
cli
nop
lret
test
cmovp
fistps
xchg
lret
fadds
je
outsb
pop
movsb
xchg
adc
xor
mov
push
dec
mov
les
lock
adcb
mov
popa
mov
inc
loopne
testl
mov
jbe
negb
aam
mov
lea
jne
xchg
xchg
lods
imul
jg
out
xchg
inc
jns
jno
sbbl
xor
test
cmp
sub
inc
jbe
repnz
dec
cmp
repz
icebp
mov
insb
jle
push
xchg
sbb
paddd
pop
mov
add
dec
cmp
mov
push
stc
cmpsl
cmp
xor
leave
ret
push
mov
mov
mov
and
sub
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
movl
cmpl
je
cmpl
jne
pushl
pushl
call
cmpl
jne
xor
xor
dec
mov
mov
dec
mov
jmp
mov
push
mov
xor
cmp
je
mov
mov
sub
xor
jmp
xchg
roll
icebp
lods
add
sarl
jo
leave
jle
jo
sahf
loopne
cld
inc
shl
fisubs
imul
into
cmp
jl
shrl
ja
imul
jns
jp
outsl
dec
mov
arpl
inc
in
sbb
pop
out
dec
push
imul
testb
lret
andl
dec
add
or
sbb
int
lds
daa
sbb
cmpsl
or
shlb
inc
xor
mov
xchg
and
xchg
cmp
sbb
enter
mov
jecxz
mov
mov
jnp
arpl
xor
lahf
fisttpll
cltd
cmc
fdivl
es
std
stc
iret
imul
xor
sbbl
sbb
xor
popf
std
add
dec
cmc
rcrl
xchg
imulb
in
clc
mov
jmp
inc
jmp
dec
inc
dec
gs
xor
in
cmc
mov
cmpsl
js
jbe
test
pop
pop
pop
pop
xchg
mov
fwait
test
pop
or
sarb
fstl
mov
dec
push
and
jns
pop
push
jno
repz
in
call
aam
sti
in
cmp
jmp
inc
or
mov
outsb
mov
lock
lcall
adc
sbb
cmp
scas
jge
push
sub
add
dec
lea
inc
jne
xchg
push
xor
xlat
xor
and
dec
hlt
imul
ja
lock
inc
in
or
inc
lea
fwait
int
sbb
xchg
aad
mov
and
sub
pop
shlb
jmp
push
rcl
addr16
loopne
je
and
pop
pop
movsl
addr16
mov
sbb
andl
dec
call
xchg
ja
inc
mov
jns
sub
xchg
mov
dec
std
pop
fsubrs
mov
sbb
mov
pop
push
in
out
lret
aas
fisttpl
add
mov
and
push
mov
aam
loope
addr16
cwtl
sbb
mov
mov
push
mov
xchg
xchg
mov
fdivrs
jne
mov
add
jmp
mov
xor
jmp
pop
scas
sbb
push
pop
mov
sarl
jo
leave
jle
jo
adc
pop
aas
add
loope
repz
pop
add
or
andl
xor
and
sti
or
pop
push
mov
in
pusha
sar
scas
mov
loope
xchg
xchg
cmp
jecxz
jp
and
xor
movsb
add
cltd
and
lret
push
data16
testl
gs
fldl
lcall
ret
xor
mov
dec
cmp
stc
lret
addr16
push
inc
orb
pop
sub
push
idivl
pop
xchg
mov
xchg
leave
pop
dec
or
xor
xchg
dec
mov
xchg
and
sub
push
cs
pop
xchg
jge
cmp
stos
out
dec
pop
push
dec
xchg
adc
pop
loop
sub
addr16
bnd
dec
jo
inc
jg
enter
into
fisttpl
ret
sahf
stc
popa
pop
push
or
loopne
push
mov
cmp
jae
xchg
call
mov
mov
pop
jae
in
cmpl
adcl
ljmp
lcall
sub
enter
dec
repnz
sarb
adc
push
mov
xchg
in
stos
and
movsb
sarb
lahf
pop
xchg
xorb
mov
jae
push
lea
clc
sub
add
shll
fstps
xor
mov
push
mov
push
out
mov
mov
out
add
push
out
int
mov
push
std
mov
sub
bound
int3
rcrb
dec
aad
jp
fs
lds
cld
and
mov
xor
pop
mov
jnp
loopne
xchg
inc
popa
pop
sti
xchg
movsb
stc
push
fisubrs
dec
push
cmc
xchg
sbb
enter
sbb
pop
js
test
inc
dec
push
in
jle
sbb
adc
pop
push
js
test
mov
je
and
aam
idiv
jne
fs
mov
in
pop
xor
std
mov
sbb
lea
dec
adc
sub
arpl
fs
js
scas
sbb
ret
add
add
and
dec
xchg
psadbw
jle
jo
sub
jmp
mov
jmp
lea
cmp
in
xor
xlat
insb
fcomps
inc
xchg
xor
out
push
xor
out
xchg
aad
ljmp
xlat
push
pop
xor
ljmp
dec
or
pop
fildll
adc
mov
popa
jbe
rorl
cmp
and
in
sub
mov
daa
push
ljmp
xlat
into
sub
adc
adc
dec
add
cmp
adc
or
or
cmc
push
mov
cmpb
dec
daa
cmp
mul
dec
add
gs
cmp
mov
ds
mov
rorl
nop
mov
adc
push
dec
shlb
sub
fidivl
daa
enter
lods
sbb
lea
and
daa
mov
movsl
stc
sub
mov
les
out
xlat
shll
dec
add
test
mov
mov
mov
xchg
sbb
mov
fwait
bound
add
xchg
jle
jge
adc
dec
mov
pop
mov
lock
shlb
aam
add
xchg
mov
and
dec
data16
pop
mov
push
and
or
and
mov
jl
cli
insl
dec
js
xlat
pushf
pop
movsl
sbb
add
sbb
adc
pop
mov
fisttps
xor
mov
sbb
mov
shl
loopne
out
imul
add
push
jbe
fdivr
call
mov
and
mov
jmp
dec
out
xor
xor
jne
fmuls
cs
sbb
and
mov
mov
stos
in
jne
cmp
fucomip
loopne
aad
imul
add
mov
test
dec
mov
or
and
aas
dec
lods
adc
punpckhdq
nop
jge
xor
and
out
aad
es
in
and
mov
rcll
aam
mov
mov
xor
add
mov
jmp
mov
mov
mov
mov
mov
add
pop
pop
ret
push
mov
sub
movl
mov
mov
sub
and
movl
movl
cmpl
je
cmpl
jne
push
push
pushl
call
cmpl
jne
mov
dec
mov
xor
add
dec
mov
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
xor
xor
xor
add
sub
imul
mov
addl
push
mov
sbb
xor
sbb
mov
add
andl
mov
movl
cmpl
je
cmpl
jne
push
pushl
push
call
cmpl
jne
xor
xor
dec
mov
mov
dec
mov
jmp
mov
sub
mov
mov
sbbl
push
adcl
push
adcl
test
movl
je
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
pushl
pushl
pushl
call
jmp
movl
cmpl
je
cmpl
jne
push
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
notl
mov
neg
mov
movzwl
add
mov
imul
jmp
xchg
imul
push
cmpsl
jle
jo
dec
jge
jo
rolb
lods
mov
int3
push
inc
psubusw
jnp
ret
mov
enter
roll
sbb
or
int
ja
dec
bound
cmp
lods
and
fwait
ja
das
mov
outsb
push
ficompl
aas
lahf
daa
rcll
loope
jno
ret
jmp
loope
in
mov
pop
mov
enter
xor
fistl
bound
add
and
leave
xor
inc
gs
leave
bound
adc
cmp
mov
cltd
lretw
orl
divb
xchg
fincstp
in
mov
inc
mov
jmp
add
push
pop
arpl
gs
pop
dec
addr16
and
leave
xchg
mov
popf
mov
cltd
je
adc
cmpsl
pop
jns
xchg
jno
and
pop
cmp
dec
xchg
inc
dec
insb
xchg
sbb
and
mov
mov
pop
cli
sahf
outsl
pop
ret
scas
loopne
cmpsb
adc
cld
loope
xor
cwtl
push
lcall
lsl
jp
and
xchg
adc
insl
pop
lock
pop
mov
arpl
scas
nop
inc
in
cmp
mov
mov
jnp
add
or
pusha
xchg
clc
in
inc
daa
xor
gs
push
test
add
and
sbb
enter
dec
dec
jo
mov
push
jne
cmp
mov
or
or
mov
lods
movsl
cmc
adc
pop
repnz
movsb
jb
mov
fstps
dec
mov
in
movsl
stc
inc
aad
les
sbb
or
leave
add
lds
daa
xor
dec
stos
add
movsl
insl
mov
mov
and
cmp
rcrl
sub
xchg
aad
cld
inc
xchg
or
leave
add
cmp
sti
scas
jg
jl
outsl
imul
push
repz
cli
pop
push
dec
xor
sahf
inc
aam
fsubs
add
ret
mov
dec
cmp
push
jle
gs
cmp
mov
pop
int3
inc
fwait
in
dec
or
test
movl
jecxz
cmpsl
pop
jae
add
add
ds
xchg
daa
shl
subb
cmp
add
or
mov
cmp
les
ret
fs
jg
sbb
xor
and
pop
in
lock
jmp
aam
adc
divl
cmc
sub
cli
and
dec
inc
dec
aas
nop
push
dec
imul
popa
xor
mov
mov
gs
pop
cld
iret
fcompl
jecxz
mov
sub
fs
mov
push
pop
xchg
push
inc
std
jne
insl
pop
jg
subl
in
mov
mov
push
cmp
lret
sub
cmpsb
adc
ss
shll
jecxz
mov
pop
sti
inc
mov
dec
dec
pop
adc
xchg
mov
cmpsl
mov
addl
cmpsb
nop
pop
xor
xor
pop
arpl
pop
sub
outsl
movb
mov
xchg
inc
aas
add
jae
xor
push
inc
test
mov
xchg
xor
jns
inc
or
mov
je
push
daa
inc
adc
mov
sarb
loopne
bnd
popf
push
dec
push
xor
out
cmp
inc
and
dec
mov
dec
xchg
mov
popa
xor
mov
ret
dec
aad
xchg
inc
outsb
fstpt
rcrb
test
mov
add
shl
mov
or
mov
subl
xchg
sub
xorl
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
call
cmpl
jne
mov
inc
mov
jmp
orl
mov
adcl
jmp
addr16
ss
ja
or
in
scas
pusha
das
push
mov
dec
jge
jo
leave
pusha
in
xchg
rcl
mov
and
pusha
push
pushl
ja
pop
rclb
in
cwtl
and
mov
xchg
divb
divb
and
les
fcmove
cmp
out
jo
mov
insb
dec
cmp
add
scas
jg
push
shl
jle
sti
roll
adc
or
lea
jno
ds
push
mov
mov
or
xor
into
xchg
cli
jle
xchg
mov
xor
call
frstor
sbb
pop
xor
call
int3
cs
sbb
jmp
fildll
cwtl
clc
or
and
test
inc
iret
aam
movsl
fidivl
and
rolb
ficompl
inc
nop
cmp
mov
ja
in
jbe
or
sub
stos
sbbb
mov
mov
add
sub
sti
and
loop
pop
adc
sbb
dec
push
popa
stc
jecxz
js
pop
or
and
add
js
add
test
hlt
jp
das
fdivl
popf
cmp
or
js
mov
fdivp
sub
shrl
pop
decb
fucomip
cmp
dec
mov
and
sub
mov
in
pop
jmp
ds
jecxz
outsl
mov
inc
inc
inc
adc
mov
ficoml
mov
lea
mov
jg
lret
and
fmuls
inc
xchg
mov
cmpsl
jo
stos
shll
xor
push
push
sbb
clc
aas
adc
or
imul
xchg
shr
jno
xchg
int3
inc
sub
cmc
jmp
add
dec
xchg
out
xchg
das
nop
punpcklbw
push
pop
mov
ret
jmp
ficompl
push
sbb
mov
arpl
jl
ret
dec
enter
leave
mov
or
push
jns
or
jb
pop
pop
sub
loop
and
les
out
pop
mov
pop
cwtl
fld
mov
sti
mov
fildll
jp
cmp
call
scas
aam
stos
add
push
or
cwtl
pop
bound
dec
ljmp
dec
pop
insb
arpl
push
jp
add
lsl
mov
jle
xchg
dec
xchg
ljmp
push
cmp
pop
repnz
fistpll
outsb
jge
popa
dec
idiv
in
mov
inc
in
cmp
sub
movsb
sub
mov
js
sub
pop
ror
test
ljmp
addr16
xor
jns
fptan
jo
mov
xchg
loopne
ret
imul
lea
enter
daa
in
mov
cmc
fisttpl
dec
mov
fxch
lcall
ds
roll
mov
sub
sub
insl
loope
enter
mov
and
jns
shl
stos
mov
ljmp
push
and
pop
pusha
in
xor
and
or
fsubp
push
and
push
and
add
mov
cs
pop
cs
jns
jne
sub
push
jg
sbb
imul
push
fwait
in
dec
into
sbb
and
adc
pushf
sbb
jecxz
out
inc
fstpl
lds
add
clc
push
mov
jo
cmpsb
dec
test
pop
je
add
pushf
dec
push
sub
adc
push
dec
jge
xchg
xor
sub
xchg
data16
push
es
and
push
mov
add
int
fmul
adc
je
mov
mov
and
mov
andl
xor
jmp
mov
iret
mov
out
fs
call
jo
dec
jge
jo
add
arpl
or
movsb
push
aaa
in
lods
ds
int
inc
jbe
ret
lcall
jae
adc
add
test
pop
xor
stos
fwait
xor
addr16
pop
movsb
push
sub
sbb
xchg
cmc
lcall
test
frstor
lcall
xchg
push
insl
les
add
das
adc
sub
or
loopnew
add
mov
lret
cmp
sub
cltd
xchg
xor
xor
inc
ljmp
push
dec
dec
cmc
fldcw
bound
mov
call
mov
xor
mov
and
ret
in
mov
mov
or
lock
push
pop
mov
pop
mov
out
je
jns
ret
scas
jge
bound
clc
loopne
mov
int
sbb
mov
gs
xchg
push
idiv
sub
add
stos
in
scas
sahf
fwait
push
testl
test
xchg
daa
filds
jae
add
push
adc
pop
xchg
jae
mov
sbb
pop
sub
sahf
lea
mov
jns
in
mov
xchg
loopne
add
lds
sbb
sub
jae
fadds
mov
ss
call
xor
xchg
sbb
enter
cltd
ret
scas
aas
mov
cs
add
fiadds
neg
xchg
xlat
iret
into
mov
aas
in
rcl
xchg
inc
lret
pop
push
lock
mov
ja
js
or
stos
mov
adc
sbb
cltd
ss
and
sub
jo
popa
fbld
jle
cmpsb
cmp
js
xor
sub
mov
dec
andb
sbb
xor
lret
push
mov
imul
iret
cwtl
add
xor
mov
orl
jl
add
movsl
pop
popf
push
int3
fdivl
loope
ret
dec
sub
leave
mov
dec
push
mov
or
fwait
jb
loopne
test
mov
arpl
testl
push
dec
daa
es
sub
fdivrs
mov
out
xchg
ffreep
into
and
add
pop
test
das
sub
dec
dec
sbb
and
xchg
pushl
repnz
push
je
ret
add
adc
dec
jae
loopne
insl
push
pop
mov
out
adc
push
cmpsb
push
adc
mov
cmp
outsl
pop
inc
xlat
inc
les
sti
leave
negl
sub
sub
push
mov
mov
shrl
fcmovb
cmp
std
enter
adc
in
or
in
sahf
lods
fucom
daa
es
or
lock
mov
imul
and
jmp
leave
loopne
pop
std
cmp
rclb
icebp
dec
loop
mov
nop
lret
xor
stc
pushf
sbb
popa
mov
push
ljmp
scas
mov
push
movsl
cmp
mov
cli
fistl
dec
adc
cmpsl
or
pop
cld
or
fdivrl
fwait
ja
lds
mov
pop
fldenv
add
into
mov
add
test
cmp
sub
and
mov
or
jne
pop
mov
dec
loope
xchg
xchg
inc
mov
xchg
ds
fistpll
xchg
dec
es
test
lcall
add
dec
dec
sbb
fidivl
incl
lret
mov
mov
mov
jmp
xlat
frstor
pop
testl
lds
dec
jge
jo
cmp
xchg
adc
xchg
gs
push
or
std
sti
out
movsl
xchg
mov
sub
jecxz
in
std
push
shlb
xchg
cmp
adc
pmuludq
dec
cltd
cmp
xchg
push
jl
cmp
out
insb
push
inc
je
push
ret
or
cmpsb
dec
outsl
scas
push
mov
inc
lret
fdiv
mov
mov
in
dec
fmull
outsb
pop
js
cwtl
jl
dec
sbb
cmc
and
dec
mov
cmpsb
jbe
lcall
mov
test
push
or
mov
mov
adcb
inc
mov
sub
out
mov
and
movsl
sub
dec
aam
mov
data16
lret
xlat
sbb
pusha
dec
gs
mov
es
dec
lods
dec
pop
dec
sub
stc
call
es
adc
test
out
testb
adc
cmp
rolb
cmpsb
and
outsb
and
pop
in
sbb
in
cld
imul
cs
cmc
mov
into
mov
mov
cmpsb
adc
and
insl
mov
mov
iret
push
jl
lcall
adc
push
fdiv
cmpsb
pop
dec
sub
cli
cmp
dec
cmp
adc
mov
lcall
xchg
push
dec
mov
movsb
scas
xchg
lock
xor
or
mov
mov
mov
pop
jp
loope
mov
test
int
shl
fwait
ss
xchg
jecxz
inc
sub
jns
test
inc
ja
pop
adc
push
xlat
pop
or
lret
sbb
xchg
and
inc
stos
sub
orl
adc
push
in
add
sbb
fdivrs
lcall
add
push
inc
pop
loop
jp
xor
sub
inc
add
push
mov
cmc
pop
and
mov
out
das
or
iret
lret
aaa
cli
mov
lea
pusha
mov
mov
mov
cli
sub
cmp
call
sub
jb
xor
aad
stos
and
daa
pop
jecxz
pop
xchg
add
das
xor
ret
push
mov
cltd
shrl
stos
aam
lahf
shl
jecxz
adc
aaa
xor
and
sbb
pop
outsl
xlat
mov
xchg
popf
jb
gs
pop
hlt
jae
push
lods
inc
icebp
mov
cwtl
loop
jmp
testl
fnstcw
adc
sbb
icebp
mov
pop
jle
rcll
mov
xchg
jge
mov
mov
push
xchg
adc
cmpl
or
ret
and
lret
push
add
pop
inc
push
add
repnz
xor
imul
inc
jl
push
lds
adc
mov
cmp
sbb
jne
popa
rorb
inc
or
inc
adc
cmp
adc
call
dec
mov
mov
lods
sub
fwait
xchg
test
bound
pop
push
push
aam
add
push
enter
xor
das
daa
cmpsb
adc
insl
xchg
aas
mov
push
fdivrs
ds
sbb
icebp
ljmp
mov
test
cld
cmpsl
insl
out
aaa
pop
fildll
scas
sbb
je
movzbl
add
mov
orl
xor
add
movl
cmp
jne
pushl
adcl
call
mov
add
mov
jmp
fs
movsl
sbb
popa
push
negb
dec
or
jo
jge
jo
cld
mov
fadd
sahf
mov
fwait
lds
sbb
pop
sub
and
insb
cmp
mov
andl
ds
mov
pop
sbb
push
cmovl
mov
xor
and
adc
loope
xchg
mov
popa
hlt
jle
pop
pushf
addr16
cld
push
movsb
jp
outsb
in
inc
ja
mov
xor
cmp
adc
jecxz
sti
stc
in
pop
xchg
sbb
and
loope
movsl
bound
bound
push
pop
sub
sbb
mov
pushf
pop
lods
jle
jbe
in
inc
dec
add
je
js
nop
jl
mov
insl
mov
mov
inc
mov
mov
mov
xor
push
mov
nop
cmp
ljmp
mov
adc
mov
mov
sub
lock
repnz
lock
sub
mov
xchg
mov
xchg
dec
loop
cmp
push
ja
mov
push
jae
shrl
xor
push
inc
push
mov
add
into
popa
xor
lods
mov
cmpl
sbb
jnp
sbb
mov
jge
sbb
jle
cmp
ja
loop
xchg
test
jg
in
das
mov
lods
arpl
dec
subb
cs
lock
imul
imul
xchg
fwait
ja,pn
dec
cmp
dec
pop
mov
and
rorl
add
sbb
push
inc
negl
push
sarl
pop
test
stos
xchg
gs
mov
push
mov
xchg
pop
lock
in
lret
jo
dec
les
inc
ror
cltd
inc
sub
sbbl
pop
jbe
fimuls
enter
cld
scas
cmp
sub
std
adc
mov
adc
xchg
pop
leave
popf
fistpl
icebp
xlat
ja
xchg
mull
mov
fimull
sti
ja
loop
inc
push
test
sub
push
jno
mov
movsb
inc
jo
cld
shll
insl
insb
dec
fs
nop
fdivrs
xor
xchg
mov
into
das
sub
ljmp
jbe
sti
hlt
adcl
lods
push
cmp
cs
inc
jns
add
push
sbb
inc
sub
jmp
cltd
out
repnz
cmpsl
leave
les
pushf
int3
mov
jno
mov
and
imul
jnp
lds
in
sbb
fcomps
hlt
iret
push
pop
mov
or
arpl
scas
cmc
call
ret
das
movsl
cmpsb
aas
shll
nop
sti
or
pop
cmp
xor
add
es
into
xor
mov
fcmovnb
inc
or
adc
cmp
xchg
sub
add
inc
ss
test
xor
int
fs
sub
mov
inc
lret
and
movsb
popf
pop
ret
add
out
jle
push
out
leave
mov
xor
and
push
adc
xchg
imul
and
cmp
cmp
mov
or
sub
push
xor
sarl
scas
inc
pop
xchg
mov
xor
shll
cmpsb
aas
test
stc
sbb
fiadds
sarb
int
inc
xor
lret
xchg
pop
fcmovne
pushf
dec
push
fldt
jo
dec
cmp
insl
bound
clc
push
fneni(8087
fnstcw
or
negb
and
xchg
pop
dec
or
dec
repz
mov
mov
mov
xor
mov
xorl
xor
add
movl
cmp
movl
je
pushl
adcl
pushl
call
jmp
ret
rcrb
popa
cltd
ret
xorw
fiaddl
and
insb
sub
jo
mov
jle
stos
inc
cmpsl
aam
xlat
jge
out
xchg
jecxz
ficoml
pushf
or
cs
cmpsl
sub
push
xlat
mov
shll
nop
xchg
negl
test
jge
jecxz
inc
jmp
jecxz
outsl
adc
in
ss
addr16
out
jns
lds
and
xlat
jnp
loop
test
cld
mov
adc
jae
stos
hlt
aaa
jno
jne
push
adc
mov
pop
add
outsb
sbb
xor
negl
bound
mov
dec
test
inc
cwtl
repnz
cli
mov
test
cmp
cmp
lods
lret
repz
inc
add
mull
push
mov
push
mov
sub
sub
das
es
mov
ljmp
or
push
test
rol
xchg
sbb
aad
push
rolb
bound
jle
clc
in
addps
ret
fwait
add
lods
int3
sbbl
hlt
xor
shlb
mov
sbb
ljmp
push
pop
data16
roll
or
scas
test
cmp
dec
shl
jnp
lds
cmp
dec
int3
inc
and
dec
jg
jp
dec
or
push
mov
jns
lahf
add
jp
mov
sub
outsl
scas
mov
sbb
dec
xorb
adc
ret
mov
or
dec
xor
jbe
jns
aas
insb
cs
cmp
or
fmulp
inc
out
lock
cmp
adc
fdivl
dec
int3
sbb
shl
push
data16
sbb
test
sub
xor
push
dec
cmp
lret
jo
insb
push
adc
andl
cmp
nop
ficomps
call
loope
pop
insl
jns
cmpsb
xchg
sub
sbb
mov
pusha
ja
jmp
inc
jno
ja
in
imul
cmp
scas
call
and
adc
add
push
sbb
lcall
pop
jle
pop
cmp
mov
xchg
jno
inc
aad
es
jge
push
loop
add
pop
push
ja
sbb
insb
pushf
xor
mov
mov
aad
jmp
dec
mov
imul
pop
jb
mov
mov
fwait
and
shlb
fs
push
aam
mov
dec
mov
pop
pop
inc
dec
les
or
rcrl
dec
xlat
jo
and
jae
jp
mov
sbb
daa
sbb
fists
lds
pop
inc
sub
arpl
addb
out
xchg
rorb
fidivrs
rol
shl
stos
enter
fcos
xchg
sbb
inc
es
test
aas
data16
sub
jle
jbe
push
push
xchg
sbb
jg
pushf
out
sub
mov
movsl
push
xchg
or
fstl
pcmpgtb
rolb
mov
arpl
fstpl
fbstp
mov
xchg
lods
inc
shll
and
daa
add
sbb
ds
fld
js
mov
in
frstor
iret
push
mov
repz
loop
daa
fistpll
dec
adc
push
inc
jb
cmp
fistl
sarb
hlt
push
add
sub
jg
idivb
lods
mov
sbb
sarl
push
in
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
add
mov
mov
mov
jmp
loopne
or
xor
in
rorb
cmp
xor
jo
dec
jge
jo
icebp
das
xchg
push
xchg
sub
repz
je
loopne
push
add
add
test
test
inc
xor
jl
jecxz
jmp
sbb
push
enter
not
in
sub
aad
div
and
or
data16
shrl
out
dec
aam
pushf
loopne
mov
ror
test
sbb
iret
xlat
lock
push
xor
flds
popf
movsl
jno
and
loope
inc
and
push
inc
into
sub
dec
pop
mov
jne
jmp
push
mov
sti
or
dec
dec
fadds
cmpsl
cltd
sub
ret
jne
cmp
mov
mov
lods
sahf
test
push
sub
mov
lock
jle
aam
idivb
mov
pop
inc
imul
test
or
jnp
nop
outsl
dec
inc
or
push
dec
ds
mov
sbb
pop
jmp
add
pop
int
inc
or
add
pop
jo
mov
xor
addl
dec
stos
mov
inc
push
mov
jg
popa
int
int3
dec
imul
mov
nop
mul
mov
pop
sub
sub
cli
push
or
pop
addr16
lret
push
rclw
movaps
gs
inc
cmpsl
rolb
aaa
or
sub
adc
push
into
popf
mov
push
cmp
push
out
stc
fcmovne
cmpsl
add
dec
inc
mov
dec
lea
xchg
mov
and
test
mov
jmp
fcoml
cltd
fxch
out
orl
div
push
fsub
mov
scas
adcl
aaa
sub
je
add
mov
imul
mov
sub
or
mov
mov
mov
jg
and
into
or
cmp
repnz
jae
add
cmp
shr
push
mov
fidivrl
and
insb
pop
jl
fsubs
pop
ret
jg
mov
add
imul
ror
je
cmc
lret
pop
xor
lods
pop
call
pusha
mov
dec
ret
mov
ret
dec
loop
shll
pop
push
inc
fnstcw
sbb
pop
inc
lock
cmpsl
fs
fcmovnu
xchg
mov
js
fsubl
loop
cmp
mov
push
lret
inc
mov
leave
mov
sub
and
bound
orl
or
pop
jns
sub
mov
inc
sbb
lods
loop
lcall
lret
fildll
addb
in
in
fsubr
push
add
mov
daa
loopne
std
sbbb
mov
fstp
jbe
or
lret
jae
arpl
cmpsb
adc
mov
nop
jmp
outsl
mov
fsubrl
push
and
lcall
jp
enter
mov
ret
push
ljmp
xchg
fildll
mov
mov
scas
mov
xlat
dec
out
int
cld
jp
ret
mov
mov
test
push
push
loop
xlat
sti
ret
je
push
dec
lcall
test
lret
sub
rcll
sbb
xor
int3
gs
adc
loope
callw
rolb
cltd
jl
ret
fnstcw
xchg
imul
pop
sub
rclb
shl
out
mov
adc
cld
mov
mov
add
mov
mov
mov
add
jmp
inc
jae
pop
sub
jae
and
mov
jge
lods
pop
mov
jo
mov
push
loope
pop
or
testb
mul
pop
inc
pop
data16
subl
stos
sahf
ds
push
mov
cwtl
in
or
and
inc
fcmove
mov
mov
xchg
mov
sub
xor
mov
std
xor
jbe
movhps
xchg
or
cld
push
xchg
jo
call
add
int
pop
push
lahf
jb
test
clc
mov
ffreep
and
inc
push
mov
and
pop
dec
rclb
je
mov
es
fldcw
or
into
test
push
or
lret
jg
adc
stos
mov
mov
jecxz
fisubrl
and
das
int
mov
daa
sahf
stos
divb
sbb
cmp
inc
add
jae
arpl
fcomps
leave
jle
out
mov
push
shrl
mov
pop
scas
cmp
adc
xor
test
mov
cltd
mov
rorl
sub
dec
push
outsl
push
jae
add
pop
mov
subl
mov
and
in
andb
cmp
mov
cmp
orl
scas
shll
mov
shll
shlb
cmp
cmpsb
call
adc
cmpsb
jne
hlt
adc
shrl
sub
sub
xor
sbb
aas
loopne
or
jge
dec
xchg
roll
jb
popf
mov
popa
cmpsb
mov
sbb
inc
or
insl
ss
test
cmpsl
jmp
std
call
sub
pushf
test
mov
push
gs
mov
outsb
cmp
andb
xchg
cli
push
hlt
mov
mov
mov
outsb
test
lock
fistpll
fcmovne
pop
sub
and
cmp
mov
int
in
xchg
mov
imulb
sarb
push
inc
aas
fstpt
push
jle
stos
lret
pop
dec
std
imul
sbb
jge
inc
push
in
push
je
cmp
mov
aad
dec
cmp
cwtl
jmp
nop
mov
jno
pop
jge
jmp
sub
or
lcall
mov
push
int
pop
xchg
shlb
push
mov
inc
or
bound
out
outsb
jge
hlt
mov
iret
dec
or
shll
lea
jns
ret
outsb
fs
mov
idivb
fucomi
jl
sarb
mov
out
data16
add
leave
das
push
push
or
movsb
orl
push
jp
mov
sbb
mov
cmp
sti
cmpsb
loopne
inc
cmpsb
push
aas
or
dec
mov
stc
mov
sbb
xor
mov
xor
sti
jae
jge
sub
pop
aam
mov
sub
je
ja
gs
pop
dec
lret
cmp
js
cmp
or
pop
js
add
fwait
lods
imul
shl
sbb
js
divb
movsl
sbb
imul
in
jmp
mov
mov
shll
add
out
push
loopne
inc
dec
and
mov
out
mov
and
test
testb
add
hlt
jae
fwait
sbb
push
or
leave
pusha
mov
mov
cs
sbb
pop
pop
rcr
cmpsb
out
ja
push
fbld
in
lret
repz
lcall
das
aas
movl
mov
in
xchg
clc
cmc
es
ret
add
jp
stc
mov
mov
adc
stos
xor
mov
mov
jmp
sbb
sarl
lahf
popa
sti
arpl
test
jo
jge
jo
in
in
stos
pop
gs
iret
loopne
sbb
lock
sub
rol
xor
add
xor
mov
dec
sbb
ljmp
es
aaa
inc
shll
jns
mov
xor
adc
cmp
fistps
jle
push
imul
cld
jo
xchg
stc
into
in
mov
jecxz
xor
push
and
sbb
cmp
sub
fucom
jmp
xlat
bound
xchg
in
leave
clc
cli
mov
cmp
popa
inc
jge
jmp
je
push
mov
push
sub
adcb
xchg
mov
rcrl
cld
rclb
mov
xchg
xchg
mov
xchg
lds
test
cmp
add
in
sti
fistl
xor
les
xor
shll
mov
inc
push
add
jg
and
cmp
sbb
xchg
sub
pusha
arpl
inc
test
mov
xchg
outsb
popa
add
loopne
pop
xchg
mov
loope
xchg
orb
lds
pop
rclb
jecxz
out
stos
shl
or
stos
cmp
pop
das
leave
es
aaa
push
add
arpl
xchg
jo
pop
int3
inc
cmp
mov
mov
andl
or
cmpb
int
les
jns
in
add
divl
inc
xchg
lahf
repnz
or
imul
int
nop
into
inc
fsubrl
stos
ljmp
xchg
leave
dec
inc
test
sub
add
jae
fisttpll
std
aad
cs
jmp
repnz
sub
paddusw
loope
xchg
jge
faddp
out
dec
outsb
out
dec
rcll
xchg
pop
and
pop
jle
lcall
mov
lods
cmp
enter
mov
mov
jae
mov
adc
push
popf
mov
fstps
cmp
ljmp
sbb
aas
mov
nop
push
mov
xlat
iret
or
mulb
cmpsb
sti
hlt
int
mov
mov
loope
add
sti
aas
xchg
and
jle
mov
fwait
xchg
insl
pop
and
icebp
test
enter
aas
shlb
iret
call
sub
scas
insb
cmp
dec
call
cmpsl
jg
and
lret
jnp
adc
lods
test
ja
insl
jbe
scas
ret
push
jle
jns
or
push
leave
sbb
clc
lods
mov
adc
push
jp
imul
ret
pop
jp
push
and
cmp
xor
dec
fiadds
jb,pt
xchg
push
shrb
jge
mov
je
pushf
aad
inc
rclb
fadds
outsl
sahf
pop
push
adc
jp
and
cld
and
andb
clc
pop
in
sub
mov
cmp
jae
icebp
xor
ljmp
loope
ficompl
pushf
inc
lods
pop
in
fld1
add
orl
pop
jmp
and
mov
cmpsb
mov
inc
insl
pop
xchg
data16
addr16
insb
nop
incl
push
push
in
dec
xchg
xchg
sbb
mov
mov
ja
bound
or
daa
mov
outsl
mov
mov
stos
dec
dec
push
xchg
add
insb
xchg
aas
mov
jg
lds
mov
sti
or
popf
jp
pop
stos
mov
xor
jge
insb
out
xor
movsb
pop
repnz
call
xchg
jnp
mov
add
lea
mov
push
pushl
pushl
call
mov
mov
jmp
or
rcl
cmp
pop
jns
popa
cmp
jo
dec
jge
jo
sub
and
cmp
sbb
cs
cmp
je
adc
clc
mov
js
outsb
xor
mov
adc
mov
mov
mov
jp
insb
addr16
xchg
push
pop
sbb
in
or
ret
and
add
jb
mov
pop
mov
repnz
clc
insb
dec
or
mov
or
mov
out
sub
xor
xor
sbb
and
inc
ret
lret
xchg
inc
repnz
mov
xchg
cli
out
jmp
outsl
cmp
dec
push
mov
shl
enter
push
ficomps
sub
push
mov
sub
adc
les
xlat
add
xchg
je
dec
mov
mov
js
inc
push
sbb
gs
sub
in
jnp
mov
dec
cmp
loop
mov
call
xorb
lods
in
sbb
push
popa
pop
das
ds
xlat
rcl
pop
cmpsl
ljmp
cmc
divb
inc
mov
mov
xchg
add
aaa
xor
or
or
mov
loopne
stc
push
repnz
push
dec
mov
cmp
addr16
xor
cmpsl
xor
int3
jae,pt
daa
movsb
push
loopne
imul
int
xor
shrb
mov
js
jns
mov
into
sahf
in
fadds
and
jmp
pop
jecxz
add
out
add
sub
sub
gs
xor
and
mov
adc
xchg
add
add
jae
cwtl
xorb
lods
adc
cltd
xor
xchg
data16
jle
sbb
sbb
cmp
ret
lret
adc
adc
jb
lret
xor
push
push
mov
pushf
adc
insb
mov
cli
cmp
jmp
mov
mov
ret
cmpsb
les
enter
sub
les
jbe
imul
rclb
fsub
lcall
sbb
popa
adc
or
push
lods
sti
sub
imul
mov
in
rolb
push
cmp
das
adc
sbb
aas
push
push
xchg
sub
mov
jmp
adc
jl
ret
lods
adc
jne
fs
mov
mov
push
ret
adc
cmpsb
movsl
jg
mov
and
pop
iret
pop
iret
call
push
inc
mull
lds
repz
ss
push
pop
push
mov
pop
inc
call
mov
push
and
mov
leave
pop
mov
pop
stc
pop
cmc
sbb
in
sbb
cld
dec
ret
mov
xchg
pushf
or
cmpsb
mov
mov
cmpsl
adc
push
xchg
aaa
pop
mov
mov
push
inc
cmc
xor
adc
mov
lds
jg
jmp
outsb
sahf
xor
leave
dec
pop
push
in
test
jo
adc
and
es
push
ja
dec
sbb
sbb
jl
xchg
test
inc
push
dec
outsl
pop
lcall
pop
cmp
mov
mov
jnp
or
push
movsb
hlt
insb
jnp
jne
push
lods
push
bound
sbb
js
ret
pop
mov
push
pop
xlat
jg
mov
xor
daa
and
mov
xchg
dec
mov
push
mov
jne
mov
add
adc
insl
or
ret
push
or
add
cmp
jne
mov
inc
cmp
jb
jmp
mov
xor
add
jmp
mov
movzwl
mov
mov
mov
mov
mov
xor
add
jmp
xlat
and
insb
push
aaa
pop
push
push
sahf
imul
jo
jge
jo
adc
movsl
xchg
xor
xchg
mov
lods
sti
popf
insb
push
pop
inc
sub
popf
stc
fisttpl
stos
dec
or
add
fnstcw
enter
aad
shll
adc
daa
jbe
and
push
dec
push
pop
cli
inc
enter
dec
push
in
jg
dec
mov
lret
add
das
or
dec
jmp
sub
sbb
nop
rolb
clc
popa
adc
push
xchg
jno
push
and
mov
aaa
jbe
or
aaa
and
mov
adc
add
dec
aas
add
es
loop
in
push
inc
mov
outsl
mov
addr16
add
or
jg
cmp
clc
idivb
je
xchg
nop
repz
and
aam
add
push
loope
scas
and
adc
dec
inc
in
rorl
divl
sti
insb
leave
sub
adc
aaa
frstor
cmpsb
outsb
dec
adc
cli
lahf
popf
into
mov
mov
hlt
and
cs
sub
test
cmp
sbb
add
pop
and
and
sub
fsts
xor
xor
movl
inc
in
pop
cmpsl
xchg
cmp
mov
push
jns
in
mov
rclb
inc
out
fists
lret
out
es
jmp
aad
fsubs
mov
cmp
testl
inc
cmp
sub
cmp
loope
pushf
adc
iret
jno
imul
daa
push
fadds
cmp
outsl
mov
xor
loope
fisttps
jb
dec
aam
add
daa
scas
or
inc
les
mov
jecxz
ljmp
pusha
sbb
cmp
mov
push
push
or
push
mov
cmp
dec
or
pop
stc
les
xor
ss
test
pushf
cmp
repz
or
inc
lea
jl
jg
jns
pop
mov
pop
cmp
jp
rcrb
push
cltd
outsl
mov
inc
dec
xchg
ror
rcrl
sub
daa
adc
test
in
lds
jne
pop
loopne
stos
test
and
sub
add
lods
mov
mov
int
and
and
mov
stos
daa
shlb
pop
lret
mov
lahf
xor
faddl
mov
cli
ficoms
fabs
in
in
neg
push
enter
cmp
xchg
mov
pop
sahf
paddb
mov
mov
cmp
jecxz
sbb
cltd
fldt
cltd
rdtsc
xchg
push
mov
cmp
daa
cmp
repnz
outsb
pop
push
sub
fdivl
mov
lahf
dec
enter
test
pop
shrb
scas
mov
or
test
movsl
ficomps
popf
pop
pop
adc
jns
ret
pop
das
sbb
call
dec
push
add
dec
jmp
or
mov
fmuls
lea
das
fsubl
push
jne
mov
mov
je
shr
in
sbb
inc
ss
xchg
and
add
sub
and
mov
mov
mov
mov
movsb
add
js
jbe
pusha
push
test
ss
or
ret
sub
imul
dec
stc
jmp
dec
flds
jg
mov
mov
add
enter
mov
or
inc
cld
xor
jmp
mov
add
mov
mov
jmp
sahf
das
or
mov
mov
pop
mov
dec
jp
iret
xor
jo
mov
call
add
daa
les
xchg
or
mov
sbb
stos
or
or
or
mov
out
inc
mov
dec
add
rclb
cs
inc
xchg
cmp
aas
lds
arpl
mov
xor
inc
cltd
sti
inc
xchg
scas
roll
dec
stc
sub
push
clc
imul
negb
pop
xchg
dec
adc
rolb
mov
jae
push
jl
pushf
sbb
lea
daa
cmpsl
cmp
addr16
jle
mov
inc
lret
or
dec
fsubp
out
mov
mov
xor
ret
inc
je
mov
mov
jg
or
dec
imul
fbld
adc
iret
push
push
xchg
punpcklwd
ja
insb
iret
nop
aas
int
ret
push
sbb
or
lret
sub
add
les
jle
imul
sub
push
push
pop
inc
rorb
sbb
fsubrs
iret
inc
add
pop
add
jno
cwtl
xchg
popf
je
mov
dec
xchg
add
mov
xchg
add
mov
push
ja
mov
divb
xor
push
xor
xchg
sahf
pop
ror
mov
or
pop
imul
mov
sbb
xor
dec
jnp
xor
push
filds
into
adc
cmc
xchg
push
and
repnz
lds
ror
add
adc
xchg
into
mov
pop
xchg
adc
push
fmull
mov
clc
fmull
ds
mov
mov
inc
aad
or
les
clc
xor
leave
sbb
les
inc
scas
fiaddl
inc
mov
add
jg
psubsb
sbb
mov
cmp
mov
fsubl
xchg
jns
arpl
cmp
cmp
out
sarl
sbb
ret
repnz
js
ds
cmpl
xor
jmp
or
fcompl
mov
sub
cmp
xchg
adc
pop
xor
pop
filds
jo
push
aas
add
loope
sbb
jmp
pusha
mov
lods
cmc
aam
xor
lods
mov
add
inc
mov
rcll
loope
inc
jmp
push
sub
lock
jmp
inc
xchg
fsubp
icebp
adc
inc
test
addb
std
xchg
jnp
int
jno
sahf
popf
insb
mov
mov
ret
loope
les
jp
inc
cs
xchg
push
inc
pop
in
jp
mov
xchg
das
aam
popa
rolb
adc
les
mov
ret
push
outsl
scas
ss
sbb
mov
pop
leave
lcall
clc
mov
or
dec
jmp
adc
aad
push
push
pop
stos
fadds
push
les
movsl
pushf
mov
pop
negl
jmp
jnp
jmp
outsl
and
cmp
sbb
jno
je
xchg
not
pop
rclb
add
es
and
lea
jecxz
jnp
or
andl
loop
test
cld
hlt
sbb
xor
push
mov
or
orl
loop
add
lds
pop
or
sub
xor
sub
mov
add
add
add
out
pop
outsl
jne
data16
test
pushf
mov
mov
jo
sub
xchg
mov
dec
aam
xor
into
push
rcrl
and
or
xorl
sbb
scas
push
lods
jnp
in
mov
sub
faddp
cmp
fsubp
shll
mov
xchg
sbb
repnz
xchg
xchg
inc
sub
loope
push
push
pop
out
movsl
mov
pop
xor
xchg
sub
xchg
loop
sub
movsb
out
cmp
and
call
test
jecxz
cli
inc
stos
xor
pop
imul
testl
ss
cmp
push
dec
fidivs
scas
inc
cmpsl
js
loope
xchg
shll
push
mov
xchg
and
sbb
or
shrl
movsb
mov
int
std
cltd
ror
lahf
and
pushf
jnp
lcall
inc
jg
ss
pop
jecxz
xor
int3
cmc
inc
mov
ror
inc
fdivr
std
aad
ljmp
cs
imul
ja
in
loopne
das
clc
jne
imul
xchg
ret
out
push
dec
pop
sbb
pop
into
mov
fs
cmpsl
cmp
andb
cld
jno
or
add
mov
pop
jns
cmp
divl
daa
repnz
mov
mov
fistps
xor
lods
push
enter
es
pop
ljmp
jecxz
leave
jns
outsl
inc
fidivrs
fsub
pop
mov
inc
xor
pop
lcall
aam
or
cmp
sub
lret
js
add
test
testl
inc
int3
in
in
popf
gs
adc
add
das
adcb
jle
add
clc
pop
lcall
stos
inc
test
cli
inc
imul
sub
pop
stos
pop
jp
jnp
adc
orb
sbbb
arpl
adc
dec
xchg
jnp
pushf
mov
pushf
scas
jbe
lret
repz
jnp
mov
cwtl
fsubl
fistpll
clc
push
call
loope
aaa
lahf
xchg
sbb
hlt
test
xorb
pop
in
sub
rolb
or
pop
jle
divl
xchg
lods
fdivrs
cld
out
lahf
mov
cmpsl
faddl
push
cwtl
xchg
xor
and
rcl
out
popl
xlat
cmp
mov
adc
add
adc
and
in
add
mov
adc
dec
xchg
sub
aaa
jb
sub
sbb
inc
jno
xchg
das
dec
or
and
sbb
icebp
mov
scas
jne
jecxz
outsb
daa
divb
push
out
cmpb
jae
mov
xor
jae
pop
mov
jle
idivl
cli
jae
mov
jmp
mov
cs
scas
xor
adc
pop
es
mov
sbb
cmp
or
scas
fisubrs
in
add
shl
lock
iret
jb
fiaddl
ror
fcompp
fidivrs
xchg
aad
test
mov
cmp
xchg
leave
sub
add
scas
cli
cmp
adc
jb
loop
insl
jns
xchg
shlb
aas
clc
mov
scas
mov
add
test
dec
jae
mov
dec
mov
into
popf
mov
loope
ljmp
inc
add
in
add
in
add
mov
and
jge
fs
lret
mov
loop
adc
out
push
stos
mov
push
push
jmp
in
fidivrs
mov
inc
pop
je
mov
mov
mov
fistps
cmp
sbb
cwtl
xor
push
pop
push
dec
pop
xchg
sub
xchg
dec
mov
imul
sub
mov
mov
mov
xor
mov
add
mov
mov
xor
add
mov
imul
mov
xor
mov
lea
cmp
je
mov
mov
mov
mov
mov
xor
xor
mov
add
div
mov
xor
lea
mov
mov
mov
mov
jmp
ja
mov
mov
mov
sbb
arpl
jo
les
xor
cs
cld
bnd
fwait
cmpsb
ds
popf
inc
push
adc
and
mov
rcrb
mov
add
ss
jg
dec
bound
pop
sbb
repz
lahf
adc
lods
mov
mov
paddw
pop
iret
push
jmp
pop
ss
cmpsl
dec
test
fs
in
insl
gs
dec
cmc
cmp
pop
lcall
fs
into
and
iret
arpl
pslld
shll
bound
mov
xchg
mov
aas
aad
or
add
daa
sub
fstpl
aaa
data16
testl
fdivp
stc
mov
popa
push
push
push
xchg
ds
cmovle
rorb
mov
inc
mov
ja,pn
aaa
popf
out
dec
leave
test
or
enter
fimuls
push
push
in
cmp
mov
lret
push
addr16
fistpl
sub
jle
xchg
xchg
jle
es
sub
rcl
mov
push
sbb
mov
mov
jno
inc
jl
imul
int3
cli
pop
dec
mov
xchg
pop
lods
add
mov
rdtsc
pop
mov
xchg
mov
mov
in
mov
pop
insl
aas
sbb
addr16
cmpsb
fcom
flds
pop
mov
es
scas
rorl
sbb
or
mov
clc
xchg
push
push
cmp
add
xchg
sbb
es
pop
leave
adc
addr16
movsb
mov
xchg
jmp
adc
in
xor
mov
scas
sub
je
bound
fsubl
ret
mov
adc
mov
cmovo
cmp
inc
push
jb
mov
jge
pop
push
test
cwtl
in
cs
push
cmp
divl
push
stos
pop
jg
sbb
jp
subl
in
inc
cmc
pop
xchg
ds
cmp
push
adc
pop
or
pop
mov
adc
aam
fwait
jbe
sub
xor
call
aas
adc
push
addr16
hlt
dec
sti
out
push
pop
sub
dec
push
push
jne
lock
mov
mov
dec
push
mov
push
fmul
xchg
jbe
int
sbb
dec
std
sbb
push
jle
and
daa
popf
shrb
add
and
pop
cltd
adc
cwtl
push
lock
sbb
dec
leavew
insb
out
xchg
scas
mov
pusha
jo
sbb
jb
pop
add
int3
clc
sar
popf
ret
mov
push
mov
push
std
hlt
ret
dec
mov
jecxz
ret
addb
inc
mov
jno
dec
stos
jns
movsl
xchg
xor
loop
test
jo
pop
orl
add
bound
scas
jne
mov
mov
add
inc
sbb
test
int3
fdivrs
inc
lods
push
xor
and
sahf
imul
dec
daa
stos
jg
xlat
ljmp
inc
push
lahf
mov
adc
mov
dec
cmp
cmc
movsb
or
cld
mov
sub
int
scas
leave
push
cwtl
jne
sbbl
lret
sbb
out
fistl
fwait
pop
dec
lods
jmp
mov
jno
lahf
stos
fidivs
mov
fildll
loope
push
adc
sbb
sahf
sub
imul
xor
out
add
mov
mov
dec
sbb
ds
lahf
clc
mov
in
repz
adc
push
andl
add
jnp
cmc
fiaddl
pop
cmpsb
or
sbb
mov
jmp
inc
cli
fisttpl
jp
xchg
mov
mov
jge
jo
dec
cmp
test
dec
mov
out
movl
adc
adc
push
pop
push
mov
call
in
xchg
and
cmp
repz
aam
pop
sbb
lret
cmp
mov
mov
out
lret
or
mov
sub
push
out
xchg
dec
test
jmp
mov
fsubl
jnp
dec
icebp
sarl
xor
jp
in
inc
mov
aas
pop
pop
xchg
xchg
inc
jl
imul
inc
in
push
fcoms
cmp
xchg
cmpsl
cmp
int3
dec
in
xor
in
or
subb
mov
jnp
mov
js
xchg
nop
movb
lods
pop
mov
xor
mov
js
call
mov
adc
cmp
enter
dec
jp,pn
js
pop
js
stos
roll
xor
xor
adc
add
lock
mov
inc
movl
jb
inc
sbb
imul
sbb
not
sbb
or
sbb
push
sbb
sahf
pop
xor
cmp
dec
push
add
mov
icebp
rcll
repnz
out
xor
push
pop
pop
xchg
lret
inc
push
imul
jns
mov
je
pavgb
inc
movsb
mov
xchg
in
sahf
mov
jne
popf
add
imul
in
push
pop
sub
lea
xor
mov
pop
lods
repz
mov
inc
pusha
call
push
push
and
hlt
std
loop
fcmove
xor
pop
cmp
xchg
fnstsw
cli
pop
test
iret
and
cs
mov
test
iret
xchg
inc
push
cmp
cmpsl
pusha
cmp
add
jl
imul
lods
stos
out
clc
adc
cmp
rcrb
inc
pop
mov
cltd
leave
pop
test
sub
mov
or
cmp
fmulp
push
call
sbb
xor
ljmp
xor
inc
inc
mov
mov
mov
xor
adc
lret
inc
mov
sbb
inc
std
sub
popa
add
adc
out
das
icebp
add
pop
pop
leave
loope
mov
adc
insb
jg
or
mov
repnz
lret
sub
mov
dec
push
jp
lahf
mov
push
pop
push
mov
js
movsl
aad
xor
sub
test
fldcw
into
into
mov
jo
lds
cmp
pop
icebp
fstl
add
out
sub
movsb
dec
push
lret
mov
jmp
aaa
jno
shll
mov
fadd
xchg
push
ffreep
dec
sbb
lahf
adc
icebp
mov
loop
mov
mov
rorl
sbb
in
lcall
jno
int3
in
enter
into
cmp
jno
out
imul
aam
or
addl
mov
or
fnsave
pop
cs
je
fidivs
dec
fdivrl
sbb
mov
popf
lahf
clc
mov
loope
out
inc
sub
test
jg
push
std
in
into
adc
sbb
mov
in
fcoms
call
push
ficompl
outsl
pop
jbe
jge
mov
push
aad
aaa
and
lret
mov
repnz
mov
and
shrb
aas
in
roll
nop
xor
xchg
out
push
xor
lea
mov
mov
jmp
mov
fwait
xchg
fwait
jae
roll
and
adc
dec
jge
jo
loopne
arpl
xor
cmp
roll
xorl
adc
cmovge
pop
and
idivb
in
jmp
lods
out
push
stc
aad
into
lret
dec
sub
loopne
mov
shrl
sub
lret
mov
xor
loope
dec
cltd
pop
adcl
and
mov
adc
pusha
nop
lods
push
fxch
cmpsb
pop
inc
imul
mov
inc
jmp
and
leave
lahf
push
push
fsub
jb
xlat
mov
push
xor
int
xchg
pop
popf
add
movsl
out
in
cltd
add
push
xor
out
popf
sub
dec
cmpsl
sbb
stos
or
das
push
pop
add
cmp
pop
mov
repz
add
sub
aam
movsl
insl
adc
cli
lds
dec
repnz
out
jbe
mov
mov
les
sub
pop
int3
or
leave
add
cli
fmuls
mov
sti
add
mov
jecxz
jle
adc
out
mov
das
adc
mov
js
cmp
outsl
call
icebp
out
mov
xchg
fisubs
cli
out
fistl
shlb
pusha
call
mov
push
into
ds
push
dec
mov
dec
popa
outsl
mov
test
jae
mov
cs
lods
inc
out
xchg
push
fstl
arpl
mov
cs
cmc
dec
cmp
jae
jg
pop
jnp
insb
arpl
adc
mov
aad
cmp
adc
mov
cmc
test
mov
cli
ss
cltd
in
sbb
or
mov
fidivl
cmc
and
sbb
push
jg
std
andb
sti
and
out
xchg
mov
cmp
pop
sub
decb
bnd
mov
adc
insb
in
mov
xchg
sub
filds
fcompl
mov
insb
fisttpll
jb
lods
imul
pop
xor
mov
fcmovb
and
and
pop
inc
pop
mov
inc
into
inc
enter
mov
ficoml
loopne
cmp
out
xchg
fcoml
lea
sbb
lds
xchg
mov
adc
add
mov
arpl
out
xchg
call
inc
shl
mov
inc
clc
or
xchg
ret
adcb
daa
or
mov
add
dec
nop
imulb
fisubs
xor
push
mov
push
pushf
xchg
out
push
push
repnz
fildll
sub
out
mov
jecxz
int
mov
mov
adc
clc
js
in
mov
mov
lret
mov
jnp
popf
add
push
xor
add
das
int3
arpl
subb
jge
cmc
dec
or
xor
les
dec
addl
test
fs
outsl
mov
fs
dec
std
loopne
sti
sti
movsb
inc
jecxz
orb
iret
testl
pushf
xchg
inc
xor
popf
dec
out
inc
xor
and
push
ffreep
lods
lcall
adc
idivb
cmc
fsubl
jae
jecxz
cmp
dec
aad
xchg
pop
add
or
popa
shlb
lcall
and
lret
pop
mov
aaa
fldcw
lret
in
push
loope
mull
sub
xor
loopne
movsb
add
lcall
adc
roll
imul
mov
xor
mov
lea
cmp
jmp
mov
push
mov
bound
movsl
imul
inc
jo
dec
jge
jo
adc
sbb
aas
into
push
out
icebp
jmp
xchg
nop
sub
outsl
push
push
dec
popf
out
in
lret
and
dec
push
xor
movsb
and
nop
add
leave
mov
add
loopne
dec
ss
cmp
mov
push
cwtl
bound
repnz
daa
sbb
xchg
sub
jecxz
insl
movsl
sahf
out
jno
jne
gs
mov
hlt
cwtl
loopne
sbb
in
cmp
stc
fstpl
iret
xor
in
outsl
jmp
inc
loop
fsubrp
mov
fstl
es
addl
xchg
jnp
or
cs
push
jecxz
insl
jbe
xorb
cmp
inc
sahf
mov
fiadds
push
jno
sbb
mov
inc
call
jge
jo
subb
jp
or
lock
dec
push
rol
push
cmp
sub
cwtl
fcmovne
dec
push
cwtl
mov
ja
sahf
int
sub
jns
test
mov
mov
push
test
adc
es
sub
sbb
add
cmp
dec
lea
insl
subb
jl
mov
push
movsl
std
test
sub
xor
pop
std
mov
jno
ret
jl
imul
pop
and
fdecstp
mov
jns
add
mov
xor
fs
cmc
add
ds
mov
gs
push
negl
lret
jno
mov
cmp
jnp
out
xor
sbb
and
inc
test
xchg
out
mov
nop
xor
sbb
mov
push
ret
and
jbe
sti
faddp
ss
fdivrl
xor
mov
aaa
and
scas
roll
mov
sbb
bound
outsl
mov
pop
testl
dec
test
add
jae
push
pop
repz
clc
ja
hlt
xor
aam
fdivr
jb
push
cmc
test
and
sub
mov
mov
jmp
sub
sbb
lcall
add
jge
jo
in
mov
mov
add
shlb
cmp
ljmp
test
inc
mov
fwait
sbb
cmpl
loopne
pop
gs
push
and
jo
xchg
imulb
hlt
enter
jns
into
and
fwait
test
sbb
js
nop
cmp
mov
jno
repnz
inc
stc
cmp
push
jmp
xchg
in
idivb
adc
cmp
korw
xchg
roll
stc
fildl
sbb
xchg
pop
test
scas
mov
or
mov
je
inc
enter
adc
cld
xor
lods
xchg
cld
jmp
lret
fnstsw
arpl
xchg
dec
and
ja
scas
sti
cmpb
mov
ss
sub
inc
aad
sbb
adc
push
cltd
popl
addr16
cli
inc
sbb
outsb
and
inc
mov
inc
das
ja
push
adc
rcrb
push
js
leave
inc
outsb
mov
movlps
test
add
dec
int
gs
cmp
cmp
jns
sbb
adc
dec
mov
or
push
jns
mov
xor
ror
cmp
cltd
sub
pushf
mov
mov
repnz
inc
sub
adc
movsb
mov
popf
pop
ja
bound
xchg
xlat
inc
xor
add
repz
sbbl
xchg
imul
pop
cmpsb
faddl
jle
stc
sub
jne
mov
jmp
mov
mov
xor
add
mov
xor
lea
add
call
xor
inc
cmp
je
xchg
push
pop
push
pop
inc
jmp
inc
orl
push
ds
dec
dec
jo
dec
jge
jo
cwtl
lcall
push
dec
or
xlat
cmp
stc
ret
imul
popf
sub
inc
and
inc
dec
rclb
jmp
sbb
xchg
loop
mov
or
pop
mov
int3
mov
and
cmpsb
pop
enter
mov
push
add
into
or
es
bound
les
in
or
jbe
push
jnp
push
nop
push
dec
push
push
jbe
popa
jb
add
inc
mov
cmpsw
xchg
test
jmp
cmpsl
xor
xlat
and
aaa
xor
sbb
xchg
inc
inc
int
dec
movntq
cmpsl
imul
pop
inc
dec
and
sbbb
jnp
outsl
pop
ror
or
stos
ret
push
popf
outsb
lret
pop
cli
push
ret
mov
jmp
clc
jb
sub
fdivp
mov
testl
movsb
adc
xor
int3
loop
inc
inc
popa
mov
push
push
pop
or
mov
xchg
inc
cltd
ss
jne
fisubs
lds
mov
jo
inc
iret
jg
iret
jge,pt
sti
sub
pusha
pusha
sbb
pop
popf
mov
call
sbb
test
push
jne
sub
outsl
pop
std
ja
push
pop
stc
jp
lods
inc
loope
pop
cmp
in
adc
cmp
frstor
add
mov
lret
inc
arpl
push
faddl
ds
and
xchg
loop
test
jne
arpl
call
ret
in
xchg
xor
push
jae
cld
push
out
fs
push
jle
mov
adcl
dec
cmc
lret
and
add
jg
mov
and
add
sub
adc
inc
lods
adc
out
stos
ja
scas
pop
add
push
lahf
jg
sbb
mov
jb
ja
icebp
std
mov
jmp
stos
mov
and
pusha
xchg
mov
sbb
lea
jae
or
je
lea
out
push
and
cmp
loope
in
adc
popa
cmpsb
mov
clc
repnz
add
xor
fdivs
mov
aam
scas
inc
cli
shll
xor
nop
movsl
sbb
adc
inc
test
hlt
push
pop
dec
outsl
and
loopne
xchg
jnp
aas
add
aam
push
inc
xchg
jmp
loop
jge
insl
imul
or
stos
arpl
push
jl
mov
in
xor
test
lret
iret
fdivr
pop
fimull
daa
mov
jb
out
ljmp
mov
outsl
ret
rcrl
xchg
imul
and
mov
sarb
xchg
mov
cmp
jle
mov
bound
addb
dec
inc
into
ljmp
xor
push
cmp
stos
adc
jmp
cmp
pop
mov
dec
adc
xor
xchg
inc
xchg
sub
mov
dec
pop
mov
pop
sbb
jno
cmpsb
jl
les
sahf
xchg
mov
xlat
call
mov
xchg
add
popa
inc
xor
jne
into
mov
cmc
pop
mov
gs
nop
test
pusha
push
dec
repz
repz
cmp
dec
mov
mov
in
movsl
andl
lret
in
cmp
xor
xchg
pop
fcompl
test
or
adc
xorb
push
shl
push
sub
ss
or
mov
inc
popa
cwtl
xchg
pop
inc
inc
aaa
cltd
loopne
mov
cld
lahf
xchg
sub
xchg
dec
mov
imul
add
xchg
push
xor
mov
dec
inc
add
jmp
jp
jb
jb
adc
sub
cmc
in
push
or
dec
jge
jo
lcall
in
push
xchg
sub
push
in
roll
push
fsts
sbb
cmp
roll
bound
outsb
insl
push
rorl
in
jae
icebp
cmp
in
std
or
mov
mov
push
cmp
pusha
arpl
flds
and
add
push
jle
lds
sahf
outsb
arpl
cli
mov
push
dec
pop
sub
or
lcall
adc
outsb
jp
push
mov
inc
mov
inc
inc
out
inc
mov
ret
in
mov
stc
sbb
jmp
mov
mov
mov
lret
mov
lcall
sbb
lahf
shr
dec
or
aam
cmp
mov
adc
adc
mov
test
lods
lret
sbb
adc
mov
and
notb
pop
adc
xchg
ja
pop
stc
push
mov
mov
jp
inc
cmc
jae
fldenv
push
int3
clc
lea
js
scas
call
lea
xor
xor
movsb
pop
sbb
ror
or
insl
sub
int
es
cmc
test
fimull
lock
jge
push
inc
fsubp
mov
shll
jl
clc
inc
fwait
inc
ljmp
fcos
push
push
jecxz
pusha
sub
mov
rep
mov
dec
xor
jg
push
stc
mov
in
fcompl
aad
sub
jns
pop
or
push
mov
out
xchg
dec
sub
inc
aad
in
jne
adc
mov
cmpb
fcmovb
adc
add
lahf
adc
pop
sbb
or
jae
movsb
jbe
sbb
sahf
orl
loope
stos
ret
lahf
xchg
lret
sub
stos
movb
arpl
dec
loope
js
adc
push
jge
scas
pop
repz
jb
dec
sti
push
pop
mov
or
and
mov
cmpsl
or
and
add
add
or
popa
cmp
mov
cmp
dec
push
dec
lds
in
lock
imul
outsb
push
data16
xor
hlt
pusha
es
popa
addr16
xchg
insb
cli
jmp
pop
arpl
jmp
das
add
mov
xchg
push
cmp
into
xchg
push
gs
mov
mov
clc
in
add
xor
scas
and
xor
aad
push
xor
xchg
mov
cmp
and
pop
movsb
xchg
xchg
jbe
mov
loope
sub
sbb
int
cmpsl
scas
mov
dec
sbb
fcomip
cltd
mov
add
and
sbb
clc
mov
push
movsl
outsb
mov
insb
lods
xchg
sbb
sub
push
fisttpll
stos
nop
iret
push
xchg
leave
add
fisubs
adc
ljmp
sub
ds
push
lret
xchg
in
push
lcall
outsl
les
push
inc
mov
jns
insl
inc
push
stos
ljmp
mov
shr
inc
mov
cmp
sar
ror
jne
xchg
andl
out
outsb
adcb
test
or
je
mov
enter
dec
stos
mov
push
mov
mov
push
loop
xor
push
mov
cltd
push
popf
mov
das
shrb
je
ds
lret
push
jbe
mov
pushf
movsb
stc
push
rorb
sbb
lcall
std
sbb
rolb
pop
hlt
pop
mov
pop
pop
pop
leave
ret
dec
push
mov
mov
or
dec
add
add
add
movl
xor
test
enter
mov
hlt
test
pushf
enter
movl
inc
inc
cld
xor
or
mov
call
pop
mov
dec
mov
pushl
or
ljmp
dec
loopne
rorb
add
mov
hlt
add
enter
dec
add
mov
orl
xor
lret
enter
mov
lea
push
mov
fs
decl
push
and
pop
inc
mov
push
pop
cld
dec
lea
mov
add
movl
decl
xor
cld
dec
jne
lea
push
mov
or
add
sub
add
rolb
inc
add
add
mov
incl
lea
call
add
jne
decl
dec
add
xchg
loopne
inc
incl
mov
xor
add
enter
mov
hlt
add
mov
add
add
incl
sbb
jne
mov
mov
movl
incl
fisttpll
test
inc
aas
inc
lea
inc
mov
mov
cld
in
inc
jmp
fisttps
jecxz
out
incl
out
aas
inc
ljmp
incl
movl
insb
test
pandn
aas
add
mov
incl
or
mov
xchg
fildl
mov
cmp
dec
leave
mov
fsubrs
add
lea
push
add
mov
mov
add
mov
cld
push
decl
push
mov
call
mov
cld
add
test
in
in
cld
jge
mov
fsub
add
mov
add
add
mov
inc
push
fisttps
test
fadds
jmp
fildl
inc
jo
test
jmp
incl
in
add
jne
mov
cld
incl
mov
mov
add
call
ret
cld
incl
out
xor
mov
cld
jo
or
add
push
add
mov
decl
add
inc
orb
add
mov
mov
inc
sub
add
rolb
jne
xor
incl
call
mov
call
xor
push
adc
loopne
ret
loopne
xorl
cmp
bswap
rolb
jmp
mov
add
cld
jne
xor
push
add
add
inc
add
mov
test
add
incl
jmp
adc
mov
pushf
mov
lea
xor
call
call
jne
xor
add
pushl
call
int3
incl
mov
xor
add
xchg
in
add
add
add
mov
mov
or
inc
test
je
mov
xor
push
or
inc
in
mov
mov
fmul
add
mov
cld
loopne
inc
push
cmp
movaps
cld
fadds
jne
push
in
jne
lea
das
mov
mov
mov
xor
adcl
rclb
inc
lock
inc
xchg
ud0
incl
lret
jbe
mov
push
pop
mov
inc
lret
inc
iret
jb
mov
enter
xor
pushf
mov
xor
dec
add
inc
mov
xor
add
mov
fmuls
xor
mov
roll
xor
mov
clc
enter
mov
test
clc
incl
cmp
pushf
or
enter
xor
pushf
inc
ds
pushf
inc
mov
lock
add
mov
sarb
adc
dec
adc
add
jmp
jb
add
xor
xor
add
clc
enter
pop
mov
push
push
xor
xor
add
add
lret
repnz
cli
fdivr
test
dec
inc
xor
add
mov
mov
clc
jne
mov
into
into
scas
dec
mov
sub
cmp
mov
mov
mov
add
xor
xor
lret
mov
inc
add
mov
lods
test
xor
mov
lock
bswap
lret
test
jmp
add
push
mov
test
push
clc
xor
xor
add
add
push
dec
mov
stc
roll
scas
mov
xor
xor
add
mov
clc
lret
into
mov
mov
mov
int3
add
xor
xor
add
mov
lock
stc
mov
or
jmp
dec
dec
mov
clc
test
clc
rorl
mov
call
les
lret
ja
mov
dec
xor
mov
clc
push
lret
mov
adc
jb
add
call
cmp
movsb
pushf
inc
xor
mov
clc
dec
lret
mov
call
scas
mov
pushf
sub
cmp
lods
xor
add
mov
mov
cmp
jb
add
dec
scas
mov
shrl
into
cmp
mov
dec
dec
mov
lret
xor
add
imul
mov
xor
mov
add
mov
inc
rdtsc
xlat
pushf
jge
xor
sub
cmp
jb
add
rorl
xor
add
jmp
mov
dec
into
mov
pushf
shll
lret
or
add
in
push
mov
fs
dec
sub
dec
xor
jge
mov
add
dec
decl
adcb
add
jge
push
push
shlb
xor
xor
inc
add
dec
or
jbe
mov
ror
enter
decl
push
lret
push
mov
mov
cld
subb
sti
add
push
lcall
bswap
pop
inc
decl
push
xor
movl
aas
push
inc
xor
add
mov
jmp
mov
les
mov
mov
cmp
mov
add
xor
pushf
lret
cmp
call
inc
inc
mov
mov
enter
add
add
clc
enter
push
pushf
mov
int3
or
test
clc
gs
add
push
xor
sub
dec
add
mov
or
cmp
dec
out
xor
mov
dec
add
push
push
add
sbb
mov
xor
dec
inc
xor
add
push
dec
mov
lret
into
sub
dec
adc
inc
push
test
unpcklps
jmp
add
movl
xor
rolb
clc
fs
mov
xor
sub
mov
add
sub
mov
mov
clc
addl
lcall
inc
decl
test
decl
push
add
dec
or
rorb
into
add
mov
sar
adc
clc
fadds
mov
push
adcb
add
lret
mov
cld
mov
into
add
jne
incl
rclb
push
mov
mov
sar
or
push
add
pushf
xor
pushf
mov
test
clc
inc
inc
mov
sub
mov
dec
xor
mov
xor
orl
shll
int3
lea
push
xor
pop
lods
incl
mov
pushf
jo
cmpl
inc
add
push
in
inc
push
mov
cld
add
adc
add
jmp
add
mov
dec
push
cmp
unpcklps
jne
decl
mov
shlb
inc
add
lret
decl
stc
in
or
dec
clc
xor
mov
rolb
inc
add
clc
inc
lret
mov
in
lret
into
into
scas
dec
mov
sub
cmp
mov
int3
test
xor
xor
lret
mov
inc
add
mov
xor
mov
call
lret
test
jmp
add
push
mov
mov
lret
xor
add
add
push
dec
mov
stc
roll
scas
mov
xor
xor
add
mov
clc
lret
into
mov
test
push
jbe
mov
mov
push
add
rdpmc
lret
add
dec
stc
mov
or
jmp
dec
dec
mov
clc
test
clc
rorl
mov
lock
inc
mov
hlt
pushf
jge
sub
cmp
ja
mov
dec
xor
mov
clc
push
lret
mov
adc
jb
add
lock
sub
mov
mov
mov
mov
lock
ror
push
scas
mov
pushf
sub
cmp
movsb
xor
add
mov
mov
cmp
jb
add
dec
scas
mov
shrl
into
cmp
mov
dec
dec
mov
lret
xor
add
imul
mov
xor
mov
add
rolb
rdtsc
xlat
pushf
jge
xor
sub
cmp
dec
xchg
incl
jmp
mov
dec
into
mov
pushf
shll
lret
or
add
in
push
mov
fs
dec
sub
dec
xor
jge
mov
add
dec
decl
inc
push
decl
lea
mov
push
mov
les
add
incl
mov
cld
lret
add
jne
in
ror
scas
into
add
not
adc
inc
push
mov
push
mov
fdivr
sti
sbb
pop
xchg
leave
pushf
add
push
cmp
sqrtps
decl
push
cld
xor
lret
clc
xor
add
hlt
or
mov
hlt
dec
add
leave
mov
push
roll
mov
mov
lar
push
lret
jne
mov
or
mov
cld
inc
mov
add
in
test
fdivr
ret
cld
mov
clc
xor
mov
loopne
mov
mov
clc
jne
call
and
je
mov
cld
or
push
add
add
inc
push
mov
pop
mov
ret
push
mov
clc
lock
jne
jne
mov
faddl
jne
cmp
pop
mov
push
inc
lea
inc
inc
int
inc
cld
jo
inc
xchg
mov
mov
or
inc
inc
mov
cld
jmp
mov
mov
rclb
iret
inc
leave
decl
mov
mov
mov
push
nop
incl
push
leave
iret
add
push
jmp
inc
push
mov
in
push
sbb
add
mov
cmp
jne
push
pop
push
mov
or
add
sub
int3
jne
add
sbb
mov
lea
push
enter
testl
enter
negl
or
inc
loope
sub
inc
loope
add
push
push
imul
adcl
add
lea
mov
cmp
jne
mov
in
add
out
inc
aas
jmp
lock
and
mov
call
push
add
ud0
hlt
add
cmp
flds
out
call
cmp
shl
pop
fisttpll
push
add
add
push
add
sub
jne
lods
mov
dec
out
into
push
loopne
shrb
xorl
roll
mov
cmpl
mov
push
push
push
sub
push
adc
insl
mov
add
inc
mov
pop
addl
add
add
roll
cli
push
pop
lret
add
decb
sub
and
dec
inc
shll
add
pop
add
pop
dec
jmp
and
push
out
jmp
jmp
mov
decb
add
pop
icebp
mov
insb
adc
mov
or
mov
cld
jge
aas
and
adc
mov
and
dec
add
add
fadds
stc
enter
sbb
sbb
in
in
add
jne
cmp
jb
jmp
mov
add
add
jb
pop
faddl
or
inc
or
xlat
dec
push
add
leave
roll
add
mov
int3
jmp
mov
jne
mov
call
pop
add
pop
or
push
mov
int3
add
jae
int
enter
add
mov
push
pop
add
push
lea
mov
jb
mov
push
add
add
add
int3
jne
movsbl
add
add
mov
add
add
mov
sub
jb
add
jge
add
addl
jne
je
mov
rorb
orl
mov
mov
fadds
inc
pop
lea
push
out
add
add
mov
jb
add
push
call
add
jae
icebp
inc
mov
int3
out
loopne
sub
push
pop
push
jl
add
xor
mov
rcrb
rorl
inc
shr
orl
push
pop
add
jmp
mov
fdivrl
push
pop
call
mov
in
rolb
call
pop
enter
repz
xorl
je
or
jne
jmp
pushl
push
pop
cmpl
jge
mov
sub
pop
inc
mov
sub
lods
add
enter
repz
stc
jge
jnp
call
fadd
dec
insb
stc
cmp
push
mov
jne
mov
mov
add
sub
and
cmp
sbb
pop
call
fsubr
sti
add
add
add
roll
mov
clc
jne
mov
loopne
loopne
lods
int3
inc
mov
add
sub
shrb
add
call
add
dec
insl
in
lea
inc
inc
sub
orl
and
rorl
or
mov
stos
adc
inc
add
jne
mov
cmp
sub
sar
ljmp
sub
mov
mov
and
jne
sub
sbb
dec
push
add
ret
mov
leave
sub
ret
pop
push
rolb
addl
jb
ret
in
jecxz
push
xchg
jne
cmp
jne
mov
rorl
mov
pop
nop
mov
les
add
inc
mov
mov
cmp
or
inc
inc
xor
cld
add
add
add
sbb
dec
je
mov
add
and
jae
mov
incl
push
shr
in
push
add
add
inc
mov
add
push
cmovne
xor
push
pop
xor
pushf
add
rcr
inc
add
add
out
inc
inc
sub
dec
and
jo
leave
add
lea
ret
mov
xor
mov
sbb
stc
mov
ss
add
add
add
add
movb
or
dec
lea
or
movsl
fiadds
jae
or
in
pushf
inc
xor
pop
inc
shl
inc
sub
inc
add
add
loopne
inc
ret
inc
mov
leave
and
add
mov
sbb
sbb
stc
test
lea
mov
dec
sarb
add
inc
ljmp
or
jge
mov
clc
leave
inc
add
rdpmc
sbb
mov
cmovne
jmp
inc
mov
sbb
mov
add
out
add
sub
add
jo
leave
movl
inc
add
inc
out
stc
int3
jb
xor
or
dec
mov
movb
loopne
inc
lea
push
movb
xor
lea
inc
jae
ficomps
addb
test
incl
inc
add
test
jne
orl
jmp
inc
jne
mov
mov
shlb
push
mov
gs
add
inc
dec
into
mov
jl
add
inc
mov
add
add
inc
or
inc
in
fsub
inc
add
add
call
pop
test
dec
jmp
pushl
loopne
movl
push
incl
mov
cwtl
movl
sbb
rorb
inc
rorb
test
add
add
push
add
mov
incw
add
xor
push
cli
popw
push
xchg
sbb
test
callw
adcl
mov
mov
push
fsubl
dec
inc
mov
lret
fistl
ljmp
jmp
in
lock
mov
xor
add
stos
data16
incl
data16
inc
shlb
add
addl
mov
add
push
lea
addb
jge
mov
rol
mov
rorb
orb
test
push
mov
orb
push
xor
aam
test
cmp
data16
dec
test
xor
lahf
mov
mov
data16
sbb
dec
mov
mov
add
jne
test
jne
sti
sbb
cld
jmp
inc
mov
data16
push
incl
test
sbb
lock
pushl
xorb
add
xor
movw
mov
sbb
mov
add
add
xor
inc
add
add
inc
jmp
addl
or
jmp
push
in
test
xor
mov
mov
push
add
decl
add
decl
movsl
add
add
push
xor
xor
mov
push
push
jne
mov
sbb
jne
incl
add
add
mov
sbb
leave
test
jne
call
xor
mov
enter
mov
mov
sbb
sbb
mov
inc
decl
add
xchg
ret
add
add
mov
lea
add
mov
inc
rdpmc
jne
add
inc
call
add
orb
ret
incl
add
cmp
pushl
add
test
je
mov
sbb
test
js
add
sub
mov
add
dec
push
mov
mov
mov
cld
or
dec
incl
push
add
mov
orl
add
push
xor
inc
mov
push
incl
inc
add
addb
mov
lea
je
decl
call
mov
hlt
call
mov
cwtl
mov
mov
addl
mov
inc
jmp
ljmp
mov
and
pushl
lcall
add
enter
add
adc
add
mov
xor
jmp
mov
in
inc
or
decl
jne
mov
mov
lock
xchg
jmp
adc
inc
mov
push
sub
push
test
inc
dec
mov
movl
add
add
mov
push
roll
bound
xor
sub
push
lea
jne
incl
jnp
mov
fs
sbb
out
or
ret
inc
decl
test
clc
lcall
or
inc
dec
incl
add
call
add
push
adc
mov
mov
addl
incl
inc
stos
mov
add
mov
cmp
movsb
mov
sbb
addb
call
xor
pop
inc
xor
pushl
mov
pushl
mov
sub
add
mov
mov
ret
mov
ret
mov
add
mov
xor
sar
test
inc
add
testb
push
add
add
add
add
add
mov
mov
sbb
jne
mov
xorb
add
cld
add
mov
cld
add
lret
add
sbb
dec
or
dec
sbb
inc
dec
mov
sbb
nop
scas
add
add
mov
add
mov
cmp
xor
gs
je
push
sarb
mov
push
cmp
add
dec
mov
in
adc
pop
inc
leave
or
gs
add
into
in
enter
push
xorl
or
jnp
test
add
mov
ltr
decl
clc
out
add
cmp
jge
jb
je
pop
push
mov
in
roll
orl
cmpl
hlt
mov
push
jns
lock
ror
test
dec
rcpps
mov
inc
test
je
mov
adcl
and
jp
rcpps
add
sbb
add
je
cmp
js
add
jns
vmread
add
adc
jge
mov
add
or
push
push
mov
add
pop
add
mov
inc
pop
xorl
add
push
clc
mov
jp
add
divl
test
je
mov
or
decb
jbe
mov
add
cmp
add
je
mov
mov
hlt
orb
jb
jmp
xor
pop
pop
pop
ret
ret
mov
xorl
pushf
xor
wrmsr
test
dec
ret
mov
pop
dec
jne
xor
inc
dec
jbe
inc
pop
add
push
dec
push
mov
and
jo
mov
sbb
mov
nop
or
jne
cmp
xor
add
cmp
js
jae
xor
jmp
mov
fdecstp
test
add
add
mov
cmp
adc
jge
mov
jl
clc
dec
jge
mov
jb
mov
mov
xor
add
mov
inc
pop
jge
cmp
mov
imul
fimuls
fists
in
jne
mov
imul
fdivrp
filds
test
inc
mov
mov
adc
rcll
mov
fiadds
mov
mov
xor
mov
xlat
into
ffreep
lret
iret
dec
inc
mov
fmull
dec
jnp
add
mov
inc
dec
lea
add
jb
add
inc
imul
cld
clc
mov
incl
or
sbb
lret
add
dec
add
enter
inc
pop
decl
add
add
mov
xor
or
pop
cltd
push
clc
mov
xor
add
cmp
hlt
cmp
or
mov
loopne
mov
cld
pushf
pop
pushf
mov
lock
adc
orb
xor
dec
mov
iret
inc
jne
mov
cmp
je
add
or
dec
inc
mov
cld
add
cmp
mov
or
mov
or
inc
xor
pushf
call
jne
mov
fcomps
add
incl
cld
add
mov
cld
inc
fidivrs
fbstp
mov
adc
fadd
add
mov
inc
mov
loopne
sbb
sbb
pushf
add
mov
cwtl
inc
inc
jne
mov
clc
add
mov
or
inc
lea
add
inc
rorl
add
shufps
jmp
xor
hlt
mov
fadds
xor
add
cmp
pmuludq
jmp
mov
or
inc
mov
jne
mov
clc
add
xor
jne
pushl
add
mov
cld
add
xor
mov
adc
sub
lea
add
jb
add
inc
add
inc
mov
or
mov
in
scas
inc
mov
in
add
mov
dec
mov
mov
cld
push
dec
add
mov
in
cmp
mov
mov
mov
xor
cmpl
xor
jmp
add
xor
add
cmp
mov
mov
adc
jmp
mov
cld
mov
push
jne
dec
or
push
inc
in
add
or
dec
cld
mov
xorl
pushf
decl
mov
mov
xor
mov
inc
mov
mov
call
add
call
push
xor
pmulhuw
test
mov
mov
xor
xor
xor
add
inc
mov
movl
sub
lock
mov
mov
or
ja
mov
cld
cli
mov
cmp
bswap
mov
mov
clc
repnz
push
xor
xor
pop
jmp
mov
xor
lea
xor
pushf
out
neg
insl
test
clc
pop
inc
or
xor
add
jne
mov
in
push
xor
add
cmp
add
mov
mov
add
mov
mov
pushf
pushf
xor
jne
mov
icebp
icebp
shl
mov
pop
jne
mov
in
jmp
add
mov
or
inc
jne
mov
ret
or
jge
sub
xor
add
mov
clc
negl
xor
cmp
repz
xor
add
mov
mov
cld
lock
test
clc
add
fdivrp
test
jnp
add
jae
sub
shll
leave
call
in
in
add
mov
in
test
mov
xor
pushf
jnp
xor
push
loopne
jne
mov
add
xor
mov
cld
jb
add
jne
mov
jge
mov
lock
xor
mov
lock
jge
xor
dec
mov
loopne
jge
add
icebp
add
dec
hlt
xor
mov
in
jge
mov
dec
pop
xor
inc
hlt
xor
mov
repnz
cmp
test
fistps
inc
mov
add
inc
test
add
add
ret
jnp
inc
inc
xor
fdivl
test
push
add
cmp
setl
mov
call
or
inc
mov
and
lock
movl
mov
clc
xor
mov
inc
mov
mov
mov
mov
hlt
inc
rorl
mov
push
mov
in
jne
mov
addl
clc
mov
add
rolw
mov
jne
incl
inc
push
test
sub
add
and
add
mov
and
adc
inc
inc
push
add
add
enter
mov
add
add
str
lea
sbb
dec
cmp
inc
push
mov
push
add
mov
inc
add
add
mov
loopne
dec
mov
cld
push
xchg
add
add
or
dec
loopne
xchg
push
add
dec
jmp
mov
sbb
inc
xor
add
push
divl
and
add
jno
incl
inc
push
push
mov
mov
push
inc
enter
push
call
pop
push
mov
mov
push
jo
incl
or
call
fmull
mov
mov
adc
dec
xor
mov
mov
mov
push
lret
movb
inc
movntps
lret
into
dec
lret
mov
mov
fdivl
mov
push
mov
sbb
dec
sarl
push
jne
mov
lea
call
sbb
add
push
mov
push
mov
test
xadd
pop
add
mov
or
push
add
add
and
call
add
mov
add
xor
add
inc
je
push
cli
dec
mov
or
inc
add
data16
subl
add
add
enter
int3
loopne
rolb
lea
data16
add
sbb
inc
lldt
xor
sub
add
ror
dec
inc
cmp
cld
or
into
out
lret
dec
mov
loop
cmp
inc
daa
loop
out
add
add
push
inc
xor
add
push
push
inc
in
push
inc
sbb
rorb
addb
ljmp
xor
mov
fmuls
add
lea
add
popl
add
push
incw
mov
add
xor
test
inc
mov
add
or
or
inc
mov
jne
mov
add
add
adc
adc
push
mov
mov
inc
mov
or
push
jne
call
inc
sarb
out
add
add
and
fs
incl
jo
leave
scas
inc
add
orb
call
shr
xchg
add
add
dec
and
push
decl
mov
mov
lea
mov
add
mov
push
shlb
inc
in
jno
push
mov
mov
je
mov
sbb
popl
add
add
adc
jmp
sub
jne
mov
in
popl
push
incl
adc
add
call
and
and
inc
test
sldt
xor
pushf
jmp
mov
or
inc
call
mov
loopne
inc
add
mov
add
add
cmp
test
sbbl
jne
call
leave
rcrb
add
add
add
inc
mov
fcom
add
lea
pushl
call
mov
fstps
push
pop
mov
addl
mov
xor
xor
pop
or
inc
push
in
or
movsl
xbegin
clc
adc
divb
or
test
jno
add
adc
xchg
test
clc
data16
orl
rolb
mov
mov
push
add
push
jge
add
jne
mov
jmp
xor
pop
cvtdq2ps
ret
mov
xor
add
push
rdpmc
out
add
mov
ret
sbb
cmp
or
or
pop
inc
add
add
invd
jge
mov
cli
xor
mov
ret
mov
sub
inc
xor
pushf
inc
mov
hlt
test
mov
xor
dec
or
jne
mov
call
inc
mov
add
add
inc
mov
addl
inc
mov
lock
jge
mov
cli
xor
add
test
add
cmp
xadd
test
mov
xor
add
pop
loopne
inc
clc
xor
add
data16
mov
hlt
xor
data16
data16
cmp
ja
psubq
ltr
add
add
data16
mov
jge
data16
data16
mov
fdivl
data16
mov
mov
pop
or
clc
mov
lock
jge
invd
pop
add
cmp
data16
mov
pop
fbstp
test
add
add
jge
data16
pop
stc
bsf
mov
in
test
mov
call
ds
add
mov
call
add
mov
jnp
mov
mov
call
mov
data16
xorl
fisttps
cld
jne
xor
mov
sti
repnz
data16
push
xor
mov
pushf
data16
mov
mov
fisttps
or
mov
hlt
mov
add
dec
or
mov
or
mov
fdivrl
xor
pop
lock
lea
icebp
jb
add
jge
mov
fsubr
pop
mov
in
rcrl
jb
add
jge
mov
in
pop
data16
cmp
mov
fdivrl
cmp
mov
mov
lock
mov
or
clc
cmp
je
push
loopne
dec
mov
icebp
mov
pcmpgtd
add
jmp
mov
lock
rorl
or
jb
add
loopne
jne
data16
mov
data16
add
data16
retw
ret
lret
enterw
pop
jne
mov
call
xor
lea
repnz
add
xor
in
xor
movl
clc
add
pop
pushf
pop
call
mov
push
pop
mov
push
inc
add
add
into
fs
mov
ret
add
add
add
ds
add
into
ret
pop
adc
add
add
jne
lea
mov
sarl
test
mov
push
xorb
mov
xor
cmp
pop
mov
je
xor
mov
cmp
pop
cmp
jne
mov
cld
push
pop
inc
stc
test
clc
test
cmp
fs
or
add
add
push
lret
add
clc
add
dec
mov
push
add
xor
cmp
je
mov
push
lea
push
cmp
mov
add
sub
add
mov
jne
mov
xor
mov
push
cmp
jne
sbbl
clc
inc
pop
sti
add
cld
xor
mov
roll
mov
inc
in
add
mov
mov
push
mov
test
xor
pushf
sub
inc
sub
mov
inc
add
or
cmp
mov
cmp
je
push
dec
str
cmp
xor
mov
add
data16
push
add
jne
movl
clc
xlat
inc
mov
push
pushf
in
add
add
add
add
add
lret
lock
clc
inc
lret
cmp
ss
pushf
test
je
xor
rorb
push
add
jb
add
dec
mov
push
push
adcl
xor
mov
scas
ret
jns
mov
dec
or
ret
lock
mov
or
mov
xorl
mov
adc
iret
inc
movl
incb
ret
adc
clc
dec
fisttps
add
ret
lea
add
xor
pushf
add
add
inc
test
xor
push
pushf
push
xor
inc
cmp
jbe
mov
or
inc
test
xor
in
hlt
push
push
push
push
mov
pushf
pushf
xor
mov
or
mov
clc
jb
add
orl
addl
mov
or
inc
dec
mov
orw
xor
mov
mov
mov
mov
inc
dec
add
add
mov
clc
or
mov
clc
popf
incl
ret
adc
mov
hlt
test
clc
or
xor
pushf
jb
add
inc
daa
inc
inc
xor
dec
pushf
add
clc
cmp
or
add
xor
or
lea
or
enter
mov
cld
dec
push
sub
add
or
add
or
add
mov
inc
mov
cmp
xbegin
clc
or
xor
adc
lea
add
inc
add
add
je
push
or
dec
std
mov
mov
mov
or
inc
clc
mov
hlt
call
push
or
push
xor
mov
xor
pushf
inc
mov
or
add
inc
mov
or
inc
push
jmp
mov
mov
jne
jmp
mov
clc
lret
push
mov
mov
sub
decl
or
pop
ds
pushl
mov
mov
jmp
leave
jne
call
in
dec
add
add
inc
cmp
je
mov
or
add
or
adc
enter
rolb
mov
or
rorb
jmp
push
mov
cld
inc
inc
orl
push
push
mov
add
test
mov
adc
mov
mov
lock
fcoms
mov
push
enter
cmp
add
mov
call
cmp
jmp
push
call
mov
cld
or
call
add
xor
jne
cmp
jne
mov
or
pop
into
je
mov
or
mov
mov
mov
or
sar
xor
xor
pop
adc
ret
cld
inc
mov
cld
mov
push
pop
or
xorps
test
add
adc
addl
jmp
ror
inc
leave
xor
and
add
xor
xorl
mov
pcmpgtw
add
leave
mov
push
dec
mov
lea
xor
sysret
dec
rorb
pushw
jne
ud0
mov
lods
add
data16
iret
and
cli
inc
cmp
add
inc
pop
lea
mov
add
mov
mov
add
inc
data16
clc
int3
cmp
je
push
pop
xchg
data16
lea
jb
jmp
call
clc
xchg
mov
or
lea
push
inc
jge
mov
fdivs
incl
xor
xchg
ret
xor
cmp
data16
rolb
add
dec
xchg
push
jmp
push
add
add
mov
clc
dec
xchg
cmp
jne
xor
jmp
add
jne
call
clc
xchg
sti
add
add
xor
pop
mov
jmp
mov
cmp
cmp
lea
jle
jae
mov
lcall
inc
push
lea
mov
int3
push
xchg
add
add
inc
add
cld
mov
aam
xchg
mov
testb
mov
hlt
add
mov
decl
incl
mov
call
je
js
lock
mov
mov
sbb
clc
add
mov
rorb
dec
xchg
mov
in
jge
cmp
clc
pop
fistl
clc
add
mov
mov
mov
adc
add
adc
pop
sbbl
ret
cmp
mov
cld
add
add
add
sub
or
add
mov
push
push
clc
addl
out
add
jmp
cmp
jmp
je
mov
inc
add
add
add
pop
pop
push
inc
in
pop
in
cmp
xor
add
push
mov
in
dec
push
test
add
leave
inc
test
add
add
dec
push
mov
hlt
push
dec
leave
mov
clc
cmovge
mov
clc
popl
push
add
push
xor
cld
add
add
pushfw
add
add
mov
cmp
jne
xor
jmp
add
mov
or
mov
mov
mov
or
shl
icebp
addb
or
or
stc
shll
xor
inc
xchg
add
add
mov
test
sub
jmp
mov
lock
lea
mov
or
leave
add
dec
dec
test
paddb
add
dec
mov
mov
or
dec
xor
mov
adc
mov
call
mov
push
clc
or
push
lret
mov
mov
xor
cmp
lsl
call
or
dec
or
inc
xor
in
add
inc
pop
xor
testl
dec
adc
inc
xor
sub
test
clc
inc
add
hlt
leave
test
clc
inc
push
aaa
inc
pop
rorl
orb
mov
push
clc
ret
xor
xor
js
dec
push
mov
lock
lret
jne
mov
enter
lret
into
out
dec
dec
jmp
xor
xor
mov
sub
add
or
dec
mov
xor
jb
add
dec
pop
mov
cld
mov
call
stc
add
pop
leave
add
in
mov
xor
movl
mov
xor
pushf
inc
cmp
pushf
xchg
mov
ljmp
push
push
push
push
push
xor
mov
add
mov
clc
lret
cmp
pushf
mov
clc
cld
jne
xor
xor
or
add
hlt
dec
dec
je
xor
xor
add
add
rol
mov
in
inc
enter
icebp
mov
clc
lock
enter
lret
inc
jne
mov
cld
dec
enter
pushf
sti
xor
mov
mov
xor
xor
mov
mov
push
shr
in
cmp
add
pushf
mov
call
xor
pushf
popa
push
dec
inc
mov
clc
pushf
into
mov
in
call
pop
or
or
or
push
inc
cmpxchg8b
leave
loopne
test
mov
rcll
xor
add
and
mov
leave
sti
inc
decl
mov
clc
dec
iret
xor
jb
add
inc
mov
xabort
loopne
ljmp
mov
clc
lock
dec
mov
loopne
incl
mov
hlt
jne
mov
in
dec
or
jb
add
xor
add
mov
subl
mov
xor
pushf
mov
clc
add
mov
adc
inc
mov
mov
loopne
inc
mov
mov
nop
roll
mov
mov
dec
push
mov
xor
mov
mov
in
into
inc
iret
xor
add
mov
dec
mov
mov
mov
mov
xor
mov
clc
enter
mov
lock
mov
cmp
rol
enter
inc
adc
inc
clc
xor
add
mov
roll
add
push
mov
fsubr
inc
mov
adc
add
inc
test
xor
fmuls
test
cld
or
dec
ret
push
inc
dec
mov
mov
push
jne
mov
call
mov
mov
clc
mov
xor
adcl
inc
push
mov
clc
incl
mov
clc
rolb
je
mov
jne
lea
mulb
decl
fadds
inc
jmp
mov
roll
mov
lock
dec
ret
mov
mov
mov
fadd
enter
inc
cld
mov
xor
add
sub
xor
pushf
add
or
jne
clc
mov
call
jmp
mov
xor
xor
enter
clc
inc
inc
pushl
in
pushf
jne
mov
clc
dec
out
dec
mov
lea
cmp
lea
mov
cld
iret
mov
jmp
test
je
mov
fdivr
movl
lock
inc
lock
lret
imul
testl
dec
mov
fmuls
fmuls
enter
inc
dec
xor
add
mov
inc
inc
push
mov
lock
mov
fadds
rol
test
dec
push
decl
push
mov
add
cmp
add
loopne
add
dec
xor
pushf
mov
cld
iret
test
mov
in
dec
add
add
dec
mov
fmull
add
testl
test
add
add
mov
cld
mov
hlt
mov
add
cmp
add
mov
mov
call
dec
add
cmp
cld
iret
mov
dec
push
lea
mov
call
iret
inc
mov
or
or
xor
cmp
je
mov
mov
xor
mov
mov
xor
bswap
rorb
add
mov
xor
or
mov
xor
bswap
rorb
add
add
xor
mov
add
dec
dec
xor
mov
lock
iret
rorl
inc
mov
iret
add
xor
mov
or
push
shll
cmp
fmull
test
dec
dec
xor
or
dec
enter
add
mov
xor
or
mov
mov
xor
mov
cmp
jne
lea
sti
or
cmp
je
mov
ret
or
call
add
mov
cld
mov
xor
add
dec
jnp
mov
xor
add
mov
mov
xor
rorl
jb
add
ja
sbb
cwtl
enter
inc
decl
fadds
rorl
inc
xor
mov
or
inc
rcll
mov
xor
jb
add
shll
mov
xor
add
repz
inc
mov
xor
inc
mov
mov
jne
mov
test
inc
mov
mov
lea
xor
add
mov
lods
dec
inc
mov
lret
mov
adc
std
ret
ljmp
hlt
push
xor
enter
inc
add
cld
test
pushf
inc
xor
pop
push
incl
in
mov
push
inc
cmpsl
mov
or
add
add
add
icebp
je
mov
cld
rol
ret
add
lea
cwtl
jne
clc
or
incl
cmp
incl
lcall
or
push
mov
test
inc
mov
imul
dec
mov
push
dec
push
xor
add
push
incl
lods
inc
inc
mov
xchg
or
call
adc
orb
inc
inc
add
mov
call
push
push
dec
jo
push
dec
mov
cmp
cmovne
call
mov
lcall
leave
inc
adc
jne
call
dec
inc
mov
add
mov
push
or
dec
xorl
cmp
mov
pop
adc
ret
mov
clc
mov
pop
mov
mov
push
push
lock
mov
adc
or
push
ret
xor
mov
mov
cmpb
add
cmp
mov
xchg
dec
add
mov
add
dec
into
mov
mov
das
add
add
mov
and
mov
and
xor
lea
xor
add
xor
orl
xor
pushf
mov
or
jne
call
adc
mov
adc
movl
pop
dec
and
call
in
call
adc
pushf
pop
mov
and
push
add
mov
test
decl
and
cli
and
or
sbb
adc
jmp
mov
adc
dec
adc
mov
and
xor
add
pcmpeqb
jmp
decl
je
mov
pop
adc
pushf
mov
jge
decl
