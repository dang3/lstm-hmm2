push
mov
jmp
cwtl
jb
inc
pop
pop
cltd
lret
inc
scas
sbb
jle
jle
jno
jle
xor
xor
ja
or
jecxz
bswap
adc
sbb
mov
or
rorl
out
mov
or
dec
sbb
loopne
add
mov
xor
jbe
fisttpl
jecxz
and
xchg
dec
incl
mov
loope
pop
sub
jae
lret
lcall
mov
loop
cmp
sub
or
sbb
outsl
insl
je
cmp
jns
popl
shll
movb
sahf
mov
daa
sbb
addr16
in
test
xchg
jbe
xchg
mov
mov
movsb
jg
mov
cltd
inc
cmovl
mov
dec
in
mov
adc
sub
loopne
dec
mov
jbe
out
cmp
add
adc
rcr
mov
xor
mov
and
fs
out
lds
leave
adc
shlb
jge
cmp
lret
fs
sbb
imul
les
notl
jb
orb
loop
mov
test
dec
movsb
out
push
fcmovbe
es
inc
sahf
les
ficomps
mov
or
or
stc
loopne
jg
jne,pn
mov
outsb
fidivrs
jge
fisubrs
adc
andl
cmc
xchg
adc
xchg
cltd
ljmp
fwait
in
outsl
pushf
arpl
adcl
into
cld
arpl
sub
push
mov
nop
mov
push
jo
add
adc
mov
popa
cmp
hlt
add
in
test
push
mov
dec
mov
jnp
jp
jge
cmp
and
cwtl
lahf
mov
dec
scas
jo
push
hlt
and
incb
jge
dec
xchg
sub
in
lret
or
std
cmp
add
adc
add
push
rorl
dec
test
les
movsl
pop
pushf
es
push
adc
shlb
out
je
mov
jmp
and
mov
xchg
js
pop
xor
fld
outsb
xchg
loop
mov
out
mov
jge
mov
mov
pop
into
ljmp
jnp
push
insl
xchg
leave
loopne
lret
mov
push
or
lds
and
frstor
int
cmpsb
pop
pop
outsl
mov
out
aaa
xchg
push
stos
out
gs
rol
outsb
repz
aam
int3
mov
inc
shrb
push
iret
or
aam
mov
sub
sub
sbb
cwtl
pushf
xchg
xchg
dec
enter
jns
loop
and
fdiv
mov
mov
dec
nop
inc
fwait
xor
xor
adc
test
mov
and
lcall
xchg
cmp
mov
dec
mov
adc
loop
aam
cmp
or
addr16
lock
jnp
sub
inc
adc
push
ss
push
call
in
out
orb
add
sub
push
xor
loop
xchg
jl
and
rcrb
adc
xchg
loop
and
add
cmp
cwtl
dec
leave
jb
mov
sysret
ja
adcb
jne
sub
adc
sub
movl
sbb
movl
sub
mov
mov
movl
cmpl
je
cmpl
jne
pushl
call
mov
dec
mov
jmp
sub
lea
movl
cmpl
je
cmpl
jne
pushl
push
push
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
and
mov
and
mov
jmp
sub
ljmp
addb
xorb
int
cmp
fiaddl
sbb
lcall
push
xchg
cmp
fists
pop
push
pop
popa
add
fld
cwtl
rol
fsub
mov
hlt
push
mov
mov
loopne
rorl
and
sbb
leave
insb
rorb
inc
fwait
inc
xorb
cld
xorl
jmp
les
popa
andl
sub
inc
sbbl
push
xor
fstps
jae
sahf
jo
or
dec
sarl
pop
mov
imul
dec
cwtl
adc
xorl
call
pop
imul
mov
and
push
imul
and
idivb
xor
rcll
loop
jne
push
insb
jae
sbb
or
jg
test
leave
mov
shr
orb
lahf
xchg
dec
out
ljmp
pushf
inc
es
cmpsb
push
inc
aas
push
test
leave
in
sahf
je
cmp
jno
mov
movsb
dec
sbb
xlat
icebp
mov
mov
stos
imul
daa
sub
sbb
jmp
dec
cwtl
inc
mov
pop
insb
rol
addr16
cmpb
dec
rorl
lret
dec
or
mov
out
or
stos
xor
int3
fistpl
cmp
adc
or
adc
mov
xorb
xor
xor
cltd
bswap
jnp
mov
fidivl
int
test
out
sti
daa
add
mov
fsts
push
cmp
fs
xchg
stos
xlat
scas
sub
ret
push
dec
xchg
test
cwtl
adc
mov
adc
mov
int3
adc
jmp
xchg
mov
lret
mov
insb
pop
xor
iret
test
loop
xchg
andl
sub
pushf
daa
ja
cmpl
jns
xchg
add
lods
mov
sub
and
mov
xor
xor
loop
cmp
lret
das
test
sub
mov
add
aaa
xor
cwtl
das
cmc
and
xor
shl
outsl
inc
gs
xchg
ret
inc
mov
dec
xor
scas
adc
cmpsb
mov
popa
pushf
rcl
adc
xorb
dec
lea
pop
cmpsb
lods
pop
jae
adc
push
pop
pop
sahf
faddp
xchg
lahf
int3
lea
mov
push
xor
mov
les
jnp
push
mov
aas
nop
mov
cmp
add
mov
push
stc
or
sbb
adc
shlb
xchg
rclb
sbb
stc
and
add
frstor
mov
loop
pop
jbe
mov
fcmovbe
test
jle
sbb
ret
dec
and
mov
xor
jecxz
sti
mov
std
int
iret
jecxz
push
ret
lret
dec
inc
mov
pop
mov
sbb
les
movsl
or
test
outsb
jmp
sub
pop
xchg
test
leave
inc
fnstenv
push
rcrb
xlat
enter
or
lock
lahf
xor
lock
insb
inc
test
xchg
adc
dec
movsl
cmc
xor
fiadds
cmp
jecxz
mov
cmpsb
adc
loopne
sbb
push
lea
xor
mov
mov
xor
push
sbb
push
adc
mov
mov
movl
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
addl
mov
or
mov
mov
xor
mov
sbbl
xor
xor
xorl
add
add
sbbl
jmp
ret
imul
mov
mov
bnd
push
jne
jle
jno
jle
cld
movsl
dec
jmp
pop
arpl
or
mov
sti
jbe
aas
adc
insl
cwtl
adc
adc
mov
xchg
mov
inc
stc
lods
cs
mov
xchg
inc
jnp
sbb
mov
idiv
int
and
and
test
dec
adc
ja
mov
fsubs
cld
nop
movsl
test
sbb
lret
in
imul
clc
mov
in
mull
fadds
adc
stos
jle
push
and
dec
nop
xchg
mov
cmp
aam
adc
fisubs
or
pusha
xchg
insb
xor
shl
pop
xor
or
pop
mov
inc
pop
jl
pop
push
xchg
mov
mov
jnp
jl
mov
gs
pop
add
mul
addr16
hlt
mov
sbb
xchg
bound
xchg
jmp
add
test
daa
jp
mov
shll
adc
or
cli
sbb
popf
cmp
sbb
pop
jecxz
sub
jb
cwtl
fs
sub
push
add
sti
lods
push
aas
jae
mov
enter
adc
icebp
xchg
out
subb
imul
inc
add
lods
mov
jge
xor
mov
sbb
xor
outsl
popa
mov
jns
stc
or
shl
pusha
add
into
jnp
cmp
and
pop
mov
cmpsl
push
ficompl
mov
pop
xor
mov
jp
and
fnstcw
mov
stc
pop
xchg
inc
insb
subb
pop
or
out
jp
cmp
push
mov
cmp
aad
inc
popf
jb
scas
fstpl
xor
gs
sub
icebp
or
rorl
and
add
and
sub
in
data16
call
add
mov
je
mov
mov
jns
mov
je
xchg
and
dec
push
ljmp
popf
or
loope
cmpsl
in
and
ficoms
sti
movsb
sahf
pop
scas
aad
push
sbb
mov
mov
pop
sbb
nop
mov
test
lret
jae
and
dec
insl
mov
cmpsl
adc
sub
cmc
les
mov
fcomi
js
xchg
xchg
int3
test
pushf
mov
jo
lcall
push
pop
xor
out
push
jge
and
lret
mov
vandps
popa
imul
pushf
repnz
loope
jnp
push
imul
rol
xchg
mov
clc
hlt
mov
mov
lcall
inc
enter
xchg
daa
idiv
mov
xor
daa
lds
sbb
imul
adc
add
jecxz
mov
outsb
mov
lcall
inc
sbb
icebp
scas
jmp
sahf
inc
cmp
jns
inc
dec
sub
mov
sbb
pop
xchg
stos
cmpsb
dec
repz
scas
mov
mov
es
andb
test
mov
inc
sbb
mov
or
mov
xchg
adc
int3
cmc
insl
mov
jae
lret
test
movl
jmp
pop
nop
jl
jge
and
jns
cmpsb
pop
pop
mov
jno
jle
sbb
pop
push
xchg
scas
pop
jl
push
sbb
in
imull
sti
pop
dec
jl
sbb
stos
lds
shl
scas
inc
ss
rclb
pop
cmp
jmp
dec
lret
jno
mov
dec
inc
iret
arpl
je
sub
and
dec
xchg
imull
or
sub
jae
cs
sti
jbe
mov
or
mov
lret
jp
mov
lahf
mov
mov
adcb
or
mov
movsl
bound
cmp
add
pop
xor
mov
inc
jo
sub
mov
shl
jl
iret
movsb
inc
mov
ljmp
mov
cli
add
addl
adc
push
sub
mov
mov
push
ja
sbb
scas
mov
xchg
insb
bound
movsb
cmp
js
sbb
je
or
xchg
icebp
push
jg
mov
sbb
jecxz
and
cwtl
adc
movsl
xor
loop
mov
cmpb
cmp
call
int3
scas
push
pop
pop
repnz
pop
or
push
pop
inc
xchg
push
adc
sub
fstpl
add
int
xor
std
sbb
cmpsl
and
lret
out
js
push
adc
xor
fwait
sub
cmp
cmpsl
or
push
scas
lods
repnz
cmp
sahf
adc
stc
stos
push
bound
pushl
xchg
sub
subl
insb
insl
mov
in
lds
mov
fstpt
loopne
mov
rcrl
push
lods
stc
popa
int
lahf
jle
pop
inc
popa
jne
mov
xor
push
int3
dec
les
cwtl
xchg
lods
loop
ror
aad
jecxz
add
add
rcll
les
push
sbb
pop
leave
daa
sub
add
cs
pushw
mov
lea
pop
js
mov
dec
mov
pusha
cmp
inc
sub
fldl
cmp
adc
ja
or
or
insb
sub
add
ficomps
add
je
movsb
mov
or
clc
int
push
lahf
jg
sub
mov
in
dec
dec
rorl
and
jb
mov
call
dec
dec
cld
push
test
add
xor
fucomip
sub
cmc
jge
aam
test
xchg
lret
adc
mov
addb
add
jb
sbb
test
dec
sti
jns
popf
push
das
loope
or
je
jmp
jg
sbb
dec
loopne
loope
jmp
sub
xchg
jp
wbinvd
leave
iret
pop
ja
stos
lods
aam
pop
jbe
push
iret
add
xor
push
cmp
xchg
addr16
dec
arpl
divb
inc
cli
rcrl
dec
inc
rcrl
out
cs
ret
jge
sub
mov
fldcw
push
xchg
ds
xlat
jb
cmp
sub
pop
inc
adc
leave
push
cwtd
sti
out
push
add
xchg
sbb
fwait
hlt
inc
mov
cmpsl
loopne
push
push
xchg
mov
ds
mov
inc
push
jmp
mov
es
cli
das
shrl
mov
mov
push
jmp
adc
movl
movl
cmp
movl
je
movl
sub
lea
mov
sub
mov
not
jmp
inc
test
xchg
mov
rorb
into
or
jle
jno
jle
inc
add
jge
shl
imul
test
lcall
dec
in
pop
xor
ret
clc
cltd
sbbl
inc
call
ja
and
add
jmp
push
std
xor
lret
js
mov
mov
pop
or
in
sbb
adc
push
mov
lds
lcall
or
push
mov
mov
sub
push
mov
rcpps
mov
in
ss
sbb
lods
insl
and
push
mov
imul
rclb
push
jg
jmp
jbe
addr16
mov
fsubp
in
dec
sarl
orl
sub
ds
lods
rclb
inc
pop
sub
jecxz
jecxz,pt
jmp
add
dec
sub
in
xchg
pop
inc
mov
sets
fwait
gs
jecxz
sbb
test
sub
icebp
xchg
mov
rolb
out
mov
std
push
pop
in
push
lahf
fists
scas
push
xor
popa
push
hlt
ficoms
rorb
mov
inc
lahf
push
pop
and
xchg
xchg
repz
into
std
jae
xchg
scas
lds
lock
in
sbb
add
mov
jno
xchg
cwtl
xchg
popa
jns
ja
cmp
test
cwtl
sahf
xchg
test
lret
sbb
aas
mov
mov
jp
jg
sbb
mov
mov
stc
mov
popf
gs
out
outsb
in
ds
in
icebp
and
imul
inc
push
iret
scas
add
clc
into
inc
push
lock
sbb
int
push
mov
hlt
outsl
inc
test
rcll
cmc
test
data16
jae
rcl
ret
loope
cmp
loope
leave
or
fwait
adc
daa
mov
inc
out
fisttpll
mov
inc
aam
std
lcall
testl
aas
mov
pop
mov
mov
mov
xlat
lahf
int3
add
insl
mov
adc
or
xchg
test
pushf
jge
loope
sar
cs
xchg
add
in
mov
jmp
sub
pop
addr16
xchg
pop
add
rcrb
add
rcrb
pop
adc
xor
sub
scas
outsl
icebp
pop
mov
fmull
shrb
movsl
mov
push
jae
mov
jno
repnz
adc
cs
mov
dec
adc
push
sub
and
fbstp
sbb
ret
mov
inc
inc
mov
sbb
dec
cmpsl
push
dec
fsubp
xchg
or
roll
and
xchg
xorb
pop
adc
shrl
popa
add
shrb
and
inc
gs
negl
sbb
lods
fsts
daa
out
lcall
pop
jb
es
lods
out
mov
inc
sbb
inc
lods
and
pextrw
test
inc
cltd
fcoms
negb
test
test
jp
gs
mov
fisttpl
mov
cmc
mov
mov
shll
lds
inc
cmp
lock
ror
mov
pop
sbb
or
subl
add
push
cmp
sbb
sub
push
or
xor
in
push
jmp
fndisi(8087
or
les
mov
imul
movl
mov
movl
mov
cmp
movl
je
and
mov
jmp
inc
xchg
ljmp
dec
xchg
iret
cmc
test
push
movd
jno
jle
mov
cli
fisubrl
cmp
fcomps
pop
clc
lock
pop
loopne
aad
xchg
insl
mov
mov
lret
andb
dec
pusha
stc
dec
dec
pop
xchg
or
lods
lret
les
push
sub
repnz
in
ret
imul
xor
xchg
inc
adc
push
jge
fcoml
inc
inc
xchg
pusha
mov
mov
add
sbb
ja
inc
dec
fmull
xchg
xchg
pop
or
sub
add
xchg
lock
scas
popa
mov
popf
out
or
push
and
push
inc
xor
pop
sbb
or
movsb
pop
jno
dec
in
mov
or
int3
subb
inc
sahf
imul
addl
aas
addb
dec
mov
enter
fwait
mov
les
xchg
push
popf
loope
inc
mov
fcomps
lock
mov
popa
cltd
xor
fxch
pop
aaa
aam
pushf
fyl2xp1
jl
mov
jo
jle
int3
daa
sbb
sbb
xlat
stc
loop
or
iret
dec
adc
sub
cmp
lods
icebp
and
inc
dec
int
lea
flds
cwtl
sbb
inc
jp
aas
cmc
xor
add
cmp
inc
mov
sub
pop
mov
fwait
dec
mov
outsl
jo
mov
pushf
in
mov
incb
pop
mov
outsb
adc
push
jae
fdivs
lahf
jne
jecxz
mov
and
jp
adc
pop
cmpsl
cwtl
mov
inc
pop
cmp
push
ret
cltd
jb
inc
and
popf
into
roll
lahf
or
xchg
out
test
push
nop
daa
js
mov
les
inc
xor
and
sbb
inc
in
jo
xchg
cmp
jp
jp
xor
js
loope
push
xor
dec
xor
sub
xor
sbb
xor
dec
ljmp
xchg
lahf
sub
sub
adc
leave
push
jne
aas
mov
xor
shlb
sbb
stos
ret
pop
add
adc
nop
or
xchg
cli
outsl
adc
aad
dec
scas
jne
mov
aam
xchg
mov
popf
subl
mov
mov
inc
xchg
test
mov
pushf
dec
inc
mov
sub
dec
push
xchg
and
fisubs
bound
loope
fwait
dec
aaa
or
sbb
frstor
add
xor
jle
and
negl
pop
and
mov
aas
mov
outsb
mov
jle
or
pop
jns
movsb
add
sub
in
cld
push
ds
push
pop
pop
orl
xor
cmpl
stos
jecxz
fcomps
in
adc
lcall
xchg
mov
ret
pusha
dec
movsb
mov
ds
push
data16
out
or
push
data16
push
push
add
mov
call
es
rcl
mov
dec
push
xor
jae
cmp
movsb
xor
mov
cmp
jae
sbb
push
jge
push
inc
sahf
jmp
outsl
ljmp
jno
or
dec
es
daa
aam
les
and
or
add
adc
add
cmpl
je
cmpl
jne
pushl
call
cmpl
jne
xor
xor
dec
mov
mov
dec
mov
jmp
mov
xor
add
pop
pop
pop
leave
ret
mov
add
cmp
je
jmp
clc
inc
adc
xchg
jge
pop
movsl
pop
dec
push
les
push
xor
add
xorb
lea
lahf
push
jle
jno
movsb
jl
mov
xchg
mov
sahf
jmp
jp
loope
xorb
sbb
jp
jae
sub
adc
mov
cmc
out
sub
mov
lahf
addb
add
lcall
mov
mov
test
std
add
adc
stos
and
ret
mov
out
or
dec
repz
push
push
inc
sbb
in
das
fwait
push
cmp
inc
adc
dec
jnp
jle
es
xor
dec
mov
dec
push
jae
pop
aas
or
jle
jnp
pop
lcall
mov
add
inc
xchg
sub
mov
das
jge
add
or
inc
push
in
pop
sahf
or
jl
jecxz
ret
into
xchg
pop
mov
xchg
lods
jns
sbb
outsl
dec
or
jle
xchg
jnp
adc
and
roll
and
ds
xchg
iret
push
cmp
and
in
cs
divw
and
cmp
popa
jg
ljmp
iret
jb
clc
addb
cli
test
or
mov
inc
sbb
add
add
shlb
cmpsl
clc
sub
movsl
inc
sub
test
mov
testl
or
add
and
rol
push
ja
push
mov
xchg
ss
sbb
push
cmp
fdivl
cmpsl
insl
jecxz
jbe
sar
nop
movsl
lock
dec
and
in
stos
adc
push
mov
aam
sub
jmp
adc
scas
cmpsl
sbb
xchg
pushf
lock
daa
adc
lret
mov
dec
cli
or
jmp
and
pop
sub
xor
mov
incb
faddl
push
aam
fcos
cmp
repz
js
xor
cmp
lahf
xor
jge
sub
push
adc
mov
cmpsb
push
mov
and
or
scas
jecxz
inc
jns
adc
imul
mov
ret
pop
testl
jae
add
in
lret
sbb
pop
mull
pusha
loopne
lds
aam
xchg
sub
in
scas
in
adc
jmp
xchg
ret
inc
in
imul
or
flds
xor
ss
rorb
pop
or
inc
fnsetpm(287
jne
mov
jns
pop
js
xor
sbb
sbb
iret
mov
sbb
pop
stc
lods
fadds
cltd
int3
cmp
pushf
mov
movsb
adc
jo
push
stc
repz
cmp
mov
mov
in
movsl
decb
mov
out
or
pushf
insl
divl
shlb
dec
dec
in
push
xorb
xchg
mov
dec
cmp
das
mov
pop
add
ljmp
mov
cmp
inc
push
jae
inc
dec
pop
lcall
push
dec
pop
sbb
idiv
in
mov
cmpl
sub
ss
push
mov
pop
jne
mov
adc
pushf
lds
sub
stos
cli
sarb
mov
stc
imul
cmpsl
xchg
sahf
idiv
sbb
cmpb
mov
xlat
sarl
mov
xchg
push
jmp
adc
inc
lock
jmp
mov
mov
or
cmp
je
mov
xorl
jmp
jmp
adc
repnz
mov
test
inc
test
in
or
xorb
xchg
adc
lahf
and
jnp
movsl
sahf
pop
sub
jge
pop
sbb
or
lea
or
jecxz
push
xchg
jg
jmp
jno
jno
jp
mov
imul
pop
sub
cld
pop
adc
and
inc
mov
xor
loopne
adc
pop
cltd
ljmp
sbb
sbb
dec
ss
mov
lods
push
cwtl
je
cwtl
ljmp
jns
adc
mov
sub
popa
mov
jnp
or
pop
mov
fcmovu
xor
jb
xor
dec
stc
mov
xchg
repz
sbb
lret
ljmp
mov
dec
mov
or
sub
sti
mov
sbb
je
cmp
inc
pop
pop
jno
es
jno
inc
mov
inc
lret
jns
filds
add
xor
sbb
mov
mov
xchg
dec
shrb
sub
push
lret
mov
or
jo
out
and
mov
enter
aam
jbe
add
push
push
jno
lea
stos
cmp
sub
lock
push
mov
out
stc
call
test
or
lahf
mov
mov
xor
xor
lret
stc
cli
mov
sbb
fstl
mov
fsub
adc
sbb
arpl
and
test
es
popw
pop
lcall
aad
or
lcall
mov
push
sbb
jle
rorl
inc
inc
cmp
push
mov
out
sub
xor
pop
addr16
push
test
cmp
lret
call
jge
mov
jae
test
inc
xor
aas
mov
add
mov
xor
xchg
out
adc
loop
icebp
mov
push
cmp
mov
and
or
ret
inc
xlat
sbb
mov
sub
push
or
mov
jle
inc
xor
sub
mov
out
mov
hlt
sub
sbb
stos
ljmp
mov
pop
ss
aaa
xchg
jno
int
in
adc
jns
fidivl
push
inc
lret
out
les
rcl
cmp
cld
insl
adc
lcall
das
lods
enter
push
xor
cmp
lods
inc
ficomps
fwait
inc
std
cmp
add
mov
pushf
clc
mov
jo
pop
lds
mulb
scas
xchg
fdivp
xrelease
sbb
aam
cmp
fwait
push
xchg
cli
dec
push
mov
dec
sub
dec
scas
fs
hlt
pop
loope
xor
and
sub
cmp
sarl
js
inc
sbb
dec
xchg
adc
div
mov
fistl
pop
mov
daa
mov
clc
and
xor
movsl
inc
stos
push
fucomp
aaa
lea
ret
cmpsb
in
pop
bnd
add
and
mov
xchg
dec
pop
lcall
les
out
jmp
inc
pop
js
sub
cmpsb
cmpsb
sub
popa
add
and
inc
in
xchg
arpl
ljmp
lret
push
fcompl
inc
cld
jmp
jl
sub
jge
jge
inc
sbb
jmp
out
sbb
xorb
push
xor
imull
adc
movsl
mov
je
mov
js
cld
pop
subb
mov
sti
fsubr
lock
addr16
stos
mov
xchg
adcl
insb
mov
pop
addl
aam
push
in
daa
into
dec
mov
inc
mov
sbb
popa
scas
mov
dec
dec
push
pop
mov
icebp
imul
push
xchg
inc
scas
adc
xor
sbb
jp
mull
pop
movsl
sbb
sbb
xchg
fdivl
push
sub
movsl
and
jnp
data16
movsl
xchg
jle
push
sbb
repnz
movsb
xchg
fidivs
xchg
mov
dec
cmp
and
pop
addr16
shl
jle
in
sahf
pop
sub
int
and
xchg
inc
push
xchg
mov
add
or
xor
clc
xchg
push
push
ss
les
rorl
pop
adc
ficoml
add
mov
add
add
rcrb
ds
mov
sbb
push
jle
inc
loop
sahf
orl
subb
dec
ljmp
mov
cmp
fwait
jb
sub
jg
mov
mov
cmp
lods
mov
pop
cmp
mov
lds
push
xor
ja
mov
lods
xor
out
pop
fldln2
sub
divl
nop
mov
std
cmp
or
fistl
scas
lret
test
lret
inc
pop
mov
xchg
mov
sub
inc
movsl
dec
jl
mov
enter
cli
rorl
jnp
lods
and
push
xchg
sti
xchg
push
jg
pusha
push
negl
mov
jns
mov
pop
xor
pushf
xchg
addl
scas
xor
cltd
add
loopne
cwtl
icebp
stos
mov
jp
pop
aam
out
push
nop
icebp
mov
dec
lahf
xor
cwtl
pop
test
js
mov
and
shrb
jge
stc
inc
jbe
xchg
xor
jb
sbb
dec
xchg
inc
fisubs
sub
cmp
mov
inc
push
call
insb
repnz
xor
xor
xchg
xor
sbb
xor
or
mov
lret
sbb
clc
rclb
cmp
push
and
cmc
xchg
sahf
mov
mov
add
jb
fcomi
inc
sbb
adc
dec
mov
rolb
jns
mov
sbb
mov
jl
sbb
mov
sti
xor
sbb
movsl
sub
xor
adc
push
push
inc
fistl
cmpsb
mov
mov
cmp
sti
pop
lea
scas
sbb
dec
movsl
mov
cwtl
pop
xchg
aad
sarl
cmp
xchg
xchg
mov
mov
movsb
shrl
gs
jmp
adc
lea
movhlps
in
xor
mov
test
iret
sbb
insl
dec
mov
cmpsb
js
adc
mov
imul
cld
aas
add
out
int
icebp
cmp
xchg
data16
inc
mov
inc
cmp
pop
fdivrs
nop
insb
or
jl
aas
rcl
lahf
xor
dec
pusha
mov
mov
mov
xor
jmp
nop
cltd
fstl
xlat
push
mov
loopne
fst
and
jle
xorb
cwtl
das
push
les
sub
cmp
mov
and
lcall
inc
lret
and
arpl
and
jl
out
mov
ffreep
and
cmpsb
cmpsb
out
push
cmc
aas
fsts
shrl
lea
mov
stos
popa
mov
cs
into
ljmp
jmp
repz
jp
and
jnp
or
fwait
in
and
jo
lea
pop
stos
std
push
daa
addr16
inc
mov
pop
addb
lods
stos
jg
hlt
jl
xor
push
dec
lea
pop
sub
jno
out
cmp
inc
popa
sahf
mull
lahf
inc
fwait
mov
pop
cld
inc
loope
out
add
les
adc
addr16
sbb
cmc
mov
into
or
push
mov
inc
imul
mov
mov
pop
mov
popa
js
or
scas
idivb
or
add
jne
aad
scas
fldl
push
call
sub
pop
sbb
cmp
dec
inc
addr16
adc
subl
lcall
and
adc
xor
adc
sarl
adc
mov
repz
popf
jmp
test
push
or
inc
or
xchg
lods
xor
inc
cld
into
jne
fldt
mov
outsl
pop
ja
jb
sbb
fisubrs
lcall
mov
push
cli
sub
movsb
out
sub
fbstp
sahf
pop
adc
je
push
pop
mov
cmp
jmp
jb
pushf
cmc
pop
out
adc
imul
push
mov
repz
lahf
in
enter
outsl
hlt
push
and
mov
mov
jecxz
sbb
mov
mov
jg
lods
gs
sarb
out
in
mul
test
mov
mov
mov
jnp
daa
inc
ds
pop
das
jb
dec
adc
sbb
dec
xor
and
sub
std
dec
sub
push
mov
jmp
testb
xchg
jbe
cwtl
mov
gs
sub
xchg
add
stc
push
cmc
js
jnp
pop
xor
mov
nop
sub
imul
pop
inc
adc
push
jns
dec
cli
mov
dec
fidivrs
sub
pop
shrb
dec
stc
loope
inc
in
sbb
sahf
add
sbbb
and
mov
negb
aaa
mov
xor
pop
or
jge
pop
xchg
ljmp
mull
add
pop
jo
neg
lahf
inc
dec
aaa
hlt
jecxz
lcall
mov
mov
cmpsl
pop
mov
jbe
rcr
lods
jmp
mov
mov
popf
addr16
mov
pop
fisttpll
int3
sbb
or
lcall
mov
orl
pusha
sbb
or
or
movsl
fbstp
jnp
rcrl
ret
xchg
js
ret
sbb
gs
in
sbb
mov
fnstenv
repz
stos
insb
mov
add
mov
xor
mov
xchg
nop
fidivs
outsl
adc
add
cmpsl
loopne
lods
aaa
test
mov
pushf
std
mov
aad
into
test
popf
inc
repnz
add
ret
pop
je
mov
xor
add
mov
mov
mov
mov
xor
add
movzwl
mov
xor
lea
add
mov
mov
mov
xor
add
imul
sub
mov
jmp
mov
mov
xor
cmp
je
mov
addl
jmp
mov
cmp
je
mov
jmp
push
mov
sub
push
mov
andl
mov
mov
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
pushl
call
cmpl
jne
mov
inc
mov
jmp
movl
movl
mov
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
add
mov
xor
mov
xor
mov
or
add
adc
mov
mov
movl
cmpl
je
cmpl
jne
pushl
call
mov
dec
mov
jmp
adcl
xor
xor
add
mov
movl
movl
movl
andl
mov
inc
mov
cmpl
jne
push
push
push
call
cmpl
jb
adc
movl
or
movl
movl
xor
movl
mov
xor
mov
add
cmp
movl
je
movl
push
movl
jmp
mov
mov
sub
or
mov
sub
mov
xorl
sub
andl
mov
inc
mov
cmpl
jne
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
movl
mov
andl
xor
xorl
add
movl
cmp
movl
jb
addl
mov
add
mov
xor
add
and
mov
xor
andl
mov
inc
mov
cmpl
jne
pushl
push
call
cmpl
jb
sbbl
xor
add
movl
cmpl
je
cmpl
jne
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
sbbl
add
sbbl
imul
xor
mov
add
mov
sub
movl
cmp
movl
ja
mov
xor
orl
add
jmp
mov
mov
xor
xor
mov
adc
add
add
imul
mov
sbb
mov
or
mov
sub
cmp
ja
jmp
ljmp
insl
imul
int
adc
mov
jle
push
mov
xchg
fidivrs
xor
cmpsb
out
fwait
dec
repnz
test
jecxz
mov
mov
adc
fsubr
lea
out
cwtl
stos
sbb
sbb
mov
adc
orl
add
jle
enter
fisubrl
cwtl
cmp
cmp
xchg
sub
jne
mov
sbb
fwait
jecxz
in
pop
sub
adc
test
sbb
push
add
iret
in
mulb
pop
push
push
lret
mov
pop
pop
rcr
add
andl
jl
xchg
lcall
pop
fiadds
in
ljmp
shll
lock
addr16
sbb
call
xor
out
push
push
xor
hlt
negb
and
sub
lea
icebp
adc
and
pop
test
jns
xor
xchg
stc
sbb
xor
fisubrl
mov
or
movsl
xchg
imul
sbb
pop
or
std
sub
orb
gs
sahf
xchg
dec
aam
sub
adc
int
sti
mov
sbb
cmp
jecxz
hlt
fcomps
mov
inc
cmp
lret
cltd
shr
mov
and
and
fdivl
sub
push
sbb
bound
fnsave
adc
test
or
xrelease
fcom
int3
add
insb
mov
enter
inc
or
xor
xchg
pop
add
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
jmp
rorb
push
mov
push
stos
mov
sub
jle
jg
jle
inc
testl
pop
mov
sub
lds
cs
push
jbe
adc
or
dec
push
cmp
aas
adc
aam
aad
mov
loop
cmpsl
xchg
in
lea
test
aam
subl
xlat
sub
xchg
jl
into
iret
mov
leave
aad
jno
and
iret
add
inc
fs
inc
outsl
jb
mov
rcl
pushf
fiadds
push
xor
nop
pop
add
loopne
fstps
lahf
ds
int3
or
xchg
es
loopne
lods
pusha
dec
js
and
push
out
mov
adc
xlat
add
ljmp
dec
adc
xlat
jns
bound
sbb
rcll
loope
repz
xor
sarb
push
pop
jno
fstpl
and
gs
mov
adcb
popf
push
mov
mov
lock
andl
ljmp
mov
addb
test
ss
inc
push
mov
push
std
add
call
mov
sti
out
add
jg
ljmp
mov
jnp
xchg
inc
cmp
arpl
pushf
adc
cmp
cltd
and
xchg
mov
insl
mov
mov
mov
push
sti
shl
or
add
out
jle
sbb
loopne
or
fsubrs
sarb
inc
cmp
ja
add
mov
mov
jmp
fs
popf
insl
pop
gs
xchg
popl
push
adc
jle
jg
jle
ror
adc
xor
cmp
mov
xor
add
ljmp
jnp
jns
xchg
fmul
pop
notl
mov
sbb
lds
cmpsl
add
jb
sar
cld
ret
sti
daa
xor
mov
jl
jo
fdivs
dec
mov
imul
and
aas
lods
jp
sub
and
push
push
mov
popf
cmp
mov
out
jne
jns
and
jmp
scas
mov
adc
pop
or
ss
aam
lock
filds
aam
lock
ljmp
sti
cmp
js
add
ret
xchg
aas
insb
or
call
sbb
mov
rcrb
and
or
jns
lods
pop
push
pop
mov
shr
sbb
mov
inc
xor
pop
xor
movsb
dec
adc
cmp
stc
cmp
push
out
sbb
fdivr
push
std
imul
out
dec
sub
inc
jl
cmp
and
sahf
nop
dec
dec
push
xchg
les
cmpsb
mov
push
jecxz
cmp
xor
popa
pop
rolb
mov
sbb
fdivrs
outsl
inc
or
insb
or
hlt
pop
inc
jb
ret
pop
adc
lcall
adc
cmp
mov
shlb
clc
jmp
xchg
push
int3
jns
imul
fistps
push
in
push
jle
mov
jle
loop
dec
cmp
mov
or
shrb
jge
adcb
cmpb
jo
fldt
mov
fwait
sub
dec
mov
adc
push
add
pop
sub
mov
push
lds
jno
in
jmp
inc
pusha
mov
cs
mov
lds
xor
mov
mov
pop
sub
subl
sbb
push
rolb
xchg
ret
call
movsl
dec
ljmp
sub
push
pop
inc
mov
mov
cmp
xchg
imul
pop
xchg
mov
mov
push
xor
mov
mov
or
or
pop
or
mov
lea
shll
mov
out
inc
jb
lock
mov
and
xorb
scas
jle
push
mov
std
sbb
icebp
test
xchg
sbb
sub
jne
lcall
loopne
or
jl
mov
jl
shll
xchg
xor
into
mov
sti
loope
xchg
jp
cmc
push
std
fildll
cli
push
call
std
mov
lret
cmpsl
cltd
mov
add
or
or
xor
in
out
shl
pushf
dec
mov
fstps
lods
xchg
jmp
es
std
cmp
xor
pop
push
inc
adc
stc
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
jmp
hlt
mov
add
pop
mov
pop
jp
jle
mov
jle
mov
mov
cli
aad
adc
pop
cmp
dec
sub
pusha
push
rclb
pushf
cltd
repnz
push
dec
fildl
push
mov
enter
sarb
mov
push
jnp
mov
pop
imul
push
jecxz
movsl
ret
inc
dec
loopne
pop
pop
mov
xchg
sub
sbb
loop
les
push
mov
andl
dec
cmp
enter
outsl
loope
push
mov
movsl
jno
or
cmp
mov
jbe
xor
inc
es
jno
pop
bound
mov
je
loop
adc
lods
mov
push
popa
inc
pop
es
add
loop
mov
pop
outsl
ja
jp
push
std
das
mov
jb
out
cld
push
xchg
dec
mov
or
xor
sbb
sbb
xchg
mov
xchg
sbb
test
imul
out
jl
xlat
add
push
xor
cmpsb
jbe
jae
rclb
nop
fimuls
sbb
insb
inc
in
xor
rcl
iret
push
adc
orl
push
cli
or
aam
lock
aam
jge
or
push
sbb
shl
sub
clc
cmp
inc
lcall
cmpsl
sbb
push
popf
fldl
xchg
insb
and
ljmp
push
int3
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
mov
jbe
mov
mov
xor
xor
add
add
imul
mov
mov
mov
mov
add
movl
mov
movl
movl
mov
xor
add
jmp
mov
jmp
dec
push
dec
push
cmpsl
xor
int3
sub
sub
mov
jle
adc
add
fldcw
test
bound
nop
imul
sub
test
inc
xchg
xchg
aas
xchg
xlat
jbe
pop
ljmp
mov
insl
xchg
out
out
mov
mov
adc
fsubr
sub
sub
lret
lret
in
xchg
test
lock
shrb
imul
push
rcr
test
push
test
add
adc
test
fmul
imul
cmpsl
idiv
enter
call
cwtd
lds
or
jns
pop
in
int
xchg
in
pop
repz
mov
cmp
xchg
jb
decl
addl
dec
mov
push
lds
sub
insb
sbb
data16
aam
inc
mov
int3
mov
pusha
je
push
or
jp
push
test
fidivs
lds
inc
pop
sarl
xchg
fnstsw
loope
mov
jl
jb
xchg
push
jle
mov
lock
lds
push
add
xor
test
jo
leave
pop
sti
jmp
pop
mov
sub
andb
fst
fstpl
cli
adc
fs
mov
js
mov
subb
stos
xlat
mov
mov
add
or
fists
repnz
mov
mov
xor
mov
mov
rolb
push
in
mov
mov
mov
mov
jmp
andb
addw
scas
add
jle
mov
jle
sbb
imul
popf
mov
mov
scas
outsw
fdivs
and
fwait
movsb
rorl
mov
xor
testl
and
sub
iret
dec
sub
mov
or
jne
mulb
sbb
rol
inc
mov
loop
sub
jecxz
leave
lods
repnz
test
in
xchg
push
or
cwtl
adc
jno
add
sbb
inc
lcall
popf
or
popf
adc
mov
mov
notl
stos
out
push
sub
inc
js
sbb
pmulhw
mov
leave
inc
ds
adc
inc
sti
rcl
loope
loope
shrl
lods
xor
je
cmp
add
shrd
in
adc
sub
sub
adc
imul
sub
jl
aam
dec
push
data16
sbb
imul
pop
rorl
out
add
leave
or
push
sbb
jmp
pop
push
mov
nop
fistpll
popa
pusha
jae
cmp
cmp
addr16
je
roll
arpl
imul
repnz
test
fs
sarb
cmp
jle
xchg
js
addr16
jo,pn
adc
out
fs
iret
lcall
aam
shl
ss
cmpsb
iret
imul
lds
mov
cmp
shll
pop
es
outsb
xor
clc
xchg
rorb
push
in
jmp
test
xor
push
mov
xor
bound
mov
jle
lods
test
jno
or
pop
and
pop
mov
lret
in
sub
xchg
cli
aaa
xchg
out
add
aad
or
xor
and
sbb
mov
aas
test
xlat
fstpt
dec
cmp
xchg
cmp
insb
je
mul
es
shl
jmp
ret
pop
push
inc
xorl
idiv
push
adc
mov
js
sti
push
lcall
es
pusha
dec
out
jbe
aam
sub
das
add
xchg
push
fisubl
imull
clc
and
and
cmp
adc
xor
add
inc
xor
push
pusha
stc
inc
mov
and
sahf
stc
or
inc
call
aas
add
or
xor
inc
out
sarb
xchg
out
loope
add
les
pushf
mov
scas
mov
fs
dec
jmp
daa
fldl
mov
dec
mov
push
mov
cmpsb
fwait
sarb
mov
addr16
shlb
xchg
aaa
mov
and
and
or
or
xchg
stos
jl
xchg
stos
js
inc
pop
mov
xchg
adc
adc
push
je
cmc
mov
sbb
scas
mov
fstl
inc
dec
insb
cmp
lret
bound
movsb
mov
xchg
loopne
out
push
lds
filds
jb
push
dec
lcall
in
mov
mov
mov
mov
mov
xor
add
jmp
in
push
adc
movsl
aas
push
jbe
scas
xchg
cs
mov
jle
sub
xor
subl
cwtl
mov
aad
gs
pop
pop
push
push
add
add
pop
ret
cmp
pop
testb
rcrl
sbb
mov
es
mov
sub
mov
push
js
and
adc
cmp
or
xor
stc
add
ret
push
inc
rorl
push
or
jmp
mov
xchg
imul
cmpsl
fisubs
fs
mov
iret
stos
mov
xchg
mov
xor
xchg
lcall
cmp
pop
or
leave
pushf
mov
repnz
leave
jae
sub
push
sbb
mov
js
sub
out
xor
xchg
add
mov
inc
cmp
test
jge
bound
and
sub
xchg
stos
lea
lahf
movsl
dec
push
mov
inc
push
dec
stos
fadds
sahf
add
int
dec
fidivrs
stos
mov
cltd
push
lahf
or
aad
insl
or
pop
push
and
dec
popa
jo
repnz
jae
inc
in
cmpsb
cli
pop
inc
jns
rorl
std
lret
aaa
or
call
stos
lds
mov
push
outsb
lock
imul
push
mov
cmp
cltd
int3
in
mov
inc
pop
sarb
in
xchg
pop
popf
jb
add
call
in
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
xor
add
imul
mov
xor
sub
mov
mov
jmp
testl
xchg
and
test
jle
jg
jle
xor
cmp
out
push
arpl
scas
push
or
rorl
std
add
or
ret
pop
or
out
out
xchg
ljmp
mov
rcrb
outsl
push
dec
cmp
sbb
add
lock
add
dec
shrl
add
ds
iret
xchg
rclb
insb
test
shll
jmp
jg
inc
pop
sbb
and
dec
push
cmpsb
inc
leave
xor
mov
cmc
adc
in
and
sbb
arpl
enter
pop
jo
ja
ret
stc
call
pop
and
push
daa
push
jecxz
stos
pop
sub
sarl
mov
xorb
lds
mov
inc
lea
stos
and
into
jge
out
jle
testb
daa
mov
lret
sarl
cli
add
insl
push
std
mov
mov
pop
xchg
push
mov
popa
leave
xchg
fdivrp
loope
xchg
xor
enter
sbb
xchg
cmp
xchg
test
in
jno
xchg
cltd
insl
mov
cwtl
arpl
into
fsubrl
adc
and
insb
pinsrw
cs
stc
outsb
test
add
sbb
sub
je
jmp
xor
lods
add
or
lret
xor
mov
push
mov
aad
inc
xor
in
gs
insl
jb
add
lods
mov
clc
add
imul
jmp
mov
jns
dec
mov
lret
repz
enter
mov
jle
ja
outsb
jns
jnp
stos
rclb
test
add
inc
je
xchg
rolb
jge
imul
insl
mov
jg
add
aaa
dec
out
lods
cmp
bts
sub
xchg
sbb
push
or
and
movsl
xor
xlat
test
adc
pop
add
fidivrl
pop
sub
jmp
fiaddl
xchg
mov
pop
jns
xor
sub
adc
call
dec
xor
pusha
in
dec
ret
xchg
xlat
jecxz
xor
push
aad
mov
aas
mov
or
push
pop
jnp
repz
mov
sub
xor
push
pop
daa
inc
mov
lahf
shlb
lds
or
je
xor
pop
iret
lahf
add
ds
repz
push
arpl
orl
fwait
rclb
sbb
nopl
jge
sub
fistl
ljmp
daa
mov
xchg
xor
sub
and
popf
data16
nop
aad
fnstcw
mov
pusha
dec
icebp
or
mov
dec
movsl
cmp
push
mov
sbb
cmc
pop
call
inc
in
andl
add
adc
push
xchg
xchg
movsb
or
ret
push
xchg
sahf
stc
popa
nop
aad
cmpsl
mov
nop
movsb
and
adc
jle
movsl
scas
pop
mov
xor
sub
lea
cmp
jbe
mov
mov
xor
add
jmp
pop
mov
sbb
or
jb
loope
inc
and
mov
jle
dec
sub
hlt
and
loop
call
out
xchg
in
fisttpl
or
aas
fimuls
das
out
nop
sbb
fs
mov
scas
je
sub
dec
sbb
sub
xchg
aam
dec
aaa
aas
js
imul
push
sahf
cmp
pop
ret
js
mov
sub
sbb
or
sub
addl
sub
in
push
and
hlt
stos
rcrl
std
movsl
xor
enter
adc
movsl
pop
insl
pop
add
cld
mov
divl
mov
dec
test
sub
push
scas
mov
pop
sub
mov
pop
pop
fisubrs
subl
xchg
or
push
incb
icebp
test
push
and
cltd
xor
adc
adc
jmp
xchg
sarl
mov
out
dec
or
xor
or
cmp
loop
movsb
xor
lret
ljmp
xor
lods
fimull
cmp
dec
jnp
fninit
out
inc
cld
cli
in
mov
inc
mull
out
cmp
cmp
and
and
insl
ret
int
adc
js
push
pusha
dec
rcl
loopne
imul
cltd
xchg
test
jo
cmp
negl
icebp
int3
xor
cli
ljmp
in
sbb
mov
loop
push
outsl
test
push
lods
jle
dec
rdpkru
mov
jge
xor
add
mov
lea
mov
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
pop
pop
leave
ret
push
mov
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
pushl
push
pushl
push
call
cmpl
jne
mov
inc
mov
jmp
mov
xor
add
sub
or
push
or
mov
sbb
mov
movzbl
add
movl
andl
mov
inc
mov
cmpl
jne
pushl
push
call
cmpl
jb
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
push
mov
xor
mov
push
mov
add
jmp
sub
in
cmpsl
insl
ret
mov
sbb
mov
aaa
aaa
mov
ficompl
daa
dec
rolb
out
movsl
jle
aam
mov
mov
dec
jl
test
cs
mov
pop
push
pop
and
adc
out
push
sarb
test
or
cmp
jmp
xor
add
dec
stos
daa
jnp
sbb
sahf
jbe
stos
push
xlat
push
lods
jecxz
sbb
dec
fcmovnu
aaa
jmp
std
vminpd
cmp
mov
add
sbb
sarb
jnp
mov
push
sub
cld
aam
cmc
test
mov
adc
cmp
dec
jne
and
sbbb
int3
fldt
stos
xchg
or
xchg
out
cmpsb
jo
mov
sub
sbb
ss
cld
or
sbb
push
jmp
test
xor
push
pop
pusha
rclb
and
loopne
mov
cmc
int
push
je
mov
loope
xor
xor
gs
push
aas
xor
stc
jle
mov
out
xchg
jae
push
pushl
sub
add
cwtl
es
mov
mov
aam
xchg
fstpl
lods
fsts
je
sahf
in
mov
pop
loop
lahf
xchg
mov
cwtl
fdivl
xchg
and
mov
js
ja
clc
in
sub
ret
ret
insb
mov
adc
add
push
push
loope
cmp
push
add
jmp
sbb
add
in
testl
std
les
movsb
cmp
insl
xchg
add
mov
dec
in
mov
scas
dec
cmpsl
stos
pop
or
mov
stos
push
add
repz
rol
pop
call
xor
pop
out
loop
test
jbe
ljmp
es
out
cmpsb
xor
mov
lahf
aam
push
stos
cmp
jo
jae
ss
pop
sbb
xchg
js
repz
inc
mov
jnp
rolb
mov
negl
popa
into
test
mov
movsb
jl
stos
mov
je
sub
sbb
mov
es
cmpsl
sub
shl
into
xor
sub
jecxz
or
xchg
push
ffree
mov
pop
jge
mov
xchg
xchg
sub
adc
jp
mov
loop
sbb
jp
mov
mov
test
fwait
cwtl
pop
repnz
inc
pop
cmp
push
ret
hlt
jne
loope
cmp
std
mov
fsubrl
push
icebp
xchg
inc
dec
pop
gs
dec
push
cltd
push
sbb
loope
xor
dec
leave
sti
push
into
jae
push
aaa
in
xchg
xor
lcall
cmp
mov
and
or
int
push
inc
test
pop
outsl
test
imul
sub
outsl
aaa
add
push
lret
loop
cmpsl
in
fimuls
mov
nop
jae
das
xor
mov
ja
hlt
add
adc
ljmp
out
ljmp
cli
cli
lcall
pushf
mov
insl
and
xchg
icebp
or
sub
lcall
ljmp
add
fsubrl
dec
out
pop
stos
ljmp
mov
adc
dec
adc
rclb
jle
dec
cli
ret
cmp
mov
mov
xor
je
mov
mov
xor
mov
jmp
cmpsb
loop
fmuls
jge
xor
out
adc
jle
mov
test
test
or
call
les
cmp
jne
aam
and
cmp
mov
sbb
dec
cmp
inc
sub
cmp
popf
push
stos
jg
addl
pushf
ret
aas
pop
jne
stc
sbb
sub
das
mov
push
pop
sti
cmp
mov
dec
daa
lock
dec
std
je
sub
pop
inc
scas
aam
sti
mov
mov
xchg
adc
cld
dec
sbb
cltd
pop
dec
jge
dec
dec
mov
loopne
xlat
push
jbe
jl
jno
xchg
fadds
shrb
outsl
popl
and
mov
cltd
mov
xor
adc
inc
jg
cld
insb
inc
lahf
flds
iret
cmp
pop
xchg
sub
mov
fneni(8087
out
aad
jp
leave
mov
mov
xchg
enter
leave
jp
add
cmpsl
or
push
stos
mov
adc
das
sub
push
pop
inc
or
lcall
xchg
aas
add
adc
into
fmull
fwait
js
sub
loopne
xchg
add
cmp
ret
mov
rcrl
inc
jge
sahf
cmpsb
mov
dec
ljmp
cld
jb
jae
lret
pop
cmc
sub
ret
mov
loope
inc
or
push
cmc
push
add
and
pop
ss
xor
orb
in
xor
cmpsb
fistpll
push
dec
add
divb
jbe
in
sub
dec
clc
fs
scas
pushf
jp
out
inc
pop
xchg
xor
lods
stos
dec
fildll
jge
xchg
ljmp
adc
adc
and
enter
mov
scas
push
lods
subl
fldcw
add
mov
lret
jecxz
lods
or
inc
aas
inc
insb
inc
sbbb
fiaddl
repnz
fwait
push
and
ljmp
mov
imul
into
dec
in
test
fisubl
ret
jbe
xchg
daa
rcl
loop
sarb
add
cmpsb
jns
mov
sbb
cmp
lock
outsl
insb
push
pop
scas
pusha
sbb
cld
repnz
cmp
rcrl
cmp
std
sbb
rolb
push
and
mov
mov
or
jbe
cmp
outsl
mov
outsb
mov
jl,pt
negb
push
xchg
stc
stos
ret
pop
jecxz
or
adcb
add
push
mov
mov
cmpsl
xchg
das
adc
mov
sub
loope
rcll
arpl
pop
pop
lock
loope
add
dec
mov
stos
fnsave
mov
mov
scas
sbbb
out
mov
pop
push
pop
push
push
push
test
out
mov
mov
push
jne
and
add
sub
les
xchg
adc
inc
xchg
hlt
add
loopne
sbb
inc
out
inc
popf
andl
adc
add
movsl
add
cs
sahf
adc
jg
inc
scas
in
outsb
push
mov
ret
push
jae
ljmp
ret
js
xor
mov
cs
or
popf
xchg
fwait
ljmp
mov
subb
add
dec
out
xchg
inc
cwtl
and
pop
inc
repnz
add
fldl
push
xor
repz
push
jge
fsubrs
clc
dec
stc
or
mov
andb
mov
mov
shl
sti
sbb
pushf
pop
stos
mov
gs
std
cmpsb
push
xchg
sub
add
xor
add
cmp
ja
push
jmp
mov
mov
mov
xor
jmp
testl
arpl
cwtl
ljmp
jno
jle
or
fwait
or
dec
adc
lret
xchg
jge
enter
jp
sti
lret
je
or
inc
aam
add
test
loopne
ret
icebp
inc
pop
xchg
push
movsl
add
cltd
push
mov
repnz
mov
pop
ss
cwtl
pop
adc
repnz
sbb
sar
ficompl
pop
mov
or
and
sbb
cmp
in
loopne
push
jnp
xor
fwait
js
ret
fiaddl
loopne
lahf
sbbb
call
bound
inc
lods
shl
sbb
fcomps
xchg
bound
popf
pop
mov
cmp
or
xchg
repz
nop
mov
imul
inc
jns
xchg
or
xor
addr16
xor
adc
xchg
in
xchg
pop
leave
mov
add
push
fs
sub
mov
pop
cltd
push
test
push
mov
xchg
mov
add
fistpl
push
cmpsb
das
mov
or
xchg
mov
xchg
jbe
cltd
xchg
sbb
add
inc
and
jbe
add
cmp
icebp
mov
dec
lret
jg
jmp
inc
pop
iret
jl
iret
insl
clc
scas
iret
movb
push
cltd
mov
mov
out
mov
xchg
and
add
inc
shrl
out
sub
mov
int3
push
lea
inc
js
add
lcall
xchg
sahf
fnstsw
lcall
imul
sub
ss
add
lcall
jmp
push
test
push
mov
and
pop
arpl
stc
lock
pop
pushf
stc
add
lea
mov
add
aam
push
cmp
push
enter
int
adc
rcl
in
je
mov
dec
or
stc
dec
in
lahf
fsubl
ficoms
mov
insb
loope
xor
xor
sahf
aam
push
dec
cmc
cli
cmp
sub
add
lret
sarl
jbe
pop
rorl
ja
sub
dec
fistl
xor
cld
xchg
call
and
pop
xchg
cs
fnstenv
add
mov
pop
jp
mov
xlat
in
idiv
xchg
mov
or
dec
adc
sub
xchg
and
jl
stc
dec
and
cld
stos
mov
test
sbb
out
cwtl
mov
or
cmc
aas
jo
cmp
pop
cmpsl
adc
pusha
cmp
push
jns
jae
xchg
les
sbb
lahf
mov
mov
sbb
and
xchg
add
jne
cld
xor
jle
xchg
lods
in
jo
mov
int
pop
int3
jno
inc
mov
cmp
clc
jnp
mov
test
cltd
push
std
sub
scas
hlt
jle
lods
sahf
adc
cli
iret
dec
repz
sbb
pop
movsl
sarb
mov
cltd
adc
inc
fimuls
or
adc
lcall
shlb
cmp
jge
xor
test
push
in
push
sahf
pop
add
mov
insb
pop
cmpsl
into
xor
and
or
scas
or
movsb
sub
mov
loopne
and
push
ljmp
aaa
xor
sub
inc
cs
mov
mov
in
pop
sub
mov
pushf
sub
lret
and
sub
or
xorb
xor
or
rcrl
mov
decb
cli
mov
xor
add
mov
mov
mov
xor
lea
mov
xor
mov
sub
add
cmp
jmp
fdiv
es
jge
jge
jae
dec
pusha
cmc
mov
fs
aas
jle
mov
jbe
into
sub
push
push
lret
pop
jl
rorl
xchg
adc
dec
ret
lds
je
xchg
cmpsb
jno
inc
mov
push
iret
insb
cwtl
popf
aam
ret
das
mov
mov
std
or
test
mov
mov
insl
sub
bnd
push
xchg
outsl
ret
or
aaa
xchg
or
or
cld
movsb
inc
nop
cmc
adcl
jle
mov
and
or
dec
push
aad
fnstsw
xor
imul
sbb
fisubrs
in
mov
mov
inc
rcrl
xor
adc
fisubl
dec
notl
int
lock
cs
mov
out
aas
and
push
mov
into
lahf
je
or
xor
sahf
negl
sub
jp
mov
sbb
mov
cmp
add
cs
fisttpll
movsl
xor
nop
push
mov
and
xor
ret
jae
adc
dec
int
fmul
sub
push
stos
cmp
xchg
push
insl
pop
dec
add
dec
sub
adc
cwtl
and
mov
fcoms
cmp
and
mov
xor
mov
stos
pop
xchg
faddl
ljmp
imul
jo
cli
popf
push
adc
and
hlt
add
testb
jmp
pop
out
mov
cmpsl
adc
test
sti
stos
push
push
mov
repnz
xor
cwtl
ret
xchg
sbbl
add
fimuls
push
arpl
jp
push
xor
dec
fstl
out
xchg
push
dec
xchg
loopne
push
outsl
shr
dec
add
inc
mov
and
js
sbb
inc
loope
lock
das
push
test
add
scas
lfs
hlt
jmp
push
inc
mulb
push
fsubrp
jns
imul
inc
mov
aas
pop
imul
mov
jo
notb
sub
std
pop
lret
repz
in
xchg
fisubl
cwtl
cltd
adc
test
jmp
cmp
orb
cltd
jno
cs
adc
mov
and
jecxz
outsb
imul
decb
pop
add
sbb
imul
sub
fdivp
adc
mov
rorb
leave
nop
lret
in
cmpsb
mov
mov
das
fistl
adcl
mov
push
sub
in
orl
dec
cmp
sub
pop
adc
cmp
xor
bound
cmp
out
aam
sub
ret
dec
sub
movsb
mov
add
and
out
in
movb
jne
mov
outsb
mov
jg
iret
cmp
test
inc
mov
sbb
repz
xor
scas
pop
je
lock
test
add
jl
cmp
jmp
pop
aas
cld
inc
add
xorb
js
lcall
cld
inc
popa
test
rclb
pop
fisttpl
xchg
adcl
adc
xor
movb
mov
xor
in
inc
jne
mov
scas
fiadds
mov
adc
add
ret
hlt
fidivrs
jl
addr16
xchg
cld
lcall
hlt
jbe
pop
mov
pop
pop
leave
ret
push
mov
mov
add
mov
xor
sub
incl
mov
push
sbbl
mov
xor
movl
cmp
movl
je
mov
decl
jmp
fcmovnb
dec
filds
jnp
cmp
fidivs
jle
jmp
jle
pop
into
mov
les
adc
mov
stos
xchg
jnp
out
scas
shll
push
adc
movsb
and
lock
lahf
inc
or
sub
aas
cmpsl
push
rcl
mov
xor
pop
xor
or
inc
cs
sbb
ret
in
xchg
test
or
dec
call
mov
in
je
inc
shll
mov
rorb
out
mov
and
pop
sahf
cmpl
inc
lret
push
or
int
std
sar
dec
cmpsb
sub
mov
outsb
out
imul
adc
push
mov
iret
push
stos
arpl
dec
cmp
push
or
push
daa
fimull
pop
int3
push
xor
pop
pop
scas
fs
sub
shlb
jle
addr16
xlat
ret
xchg
xorb
inc
pop
out
fadds
jbe
in
into
and
xchg
loopne
das
sub
jp
cld
pop
mov
in
iret
dec
aas
mov
out
stos
push
pop
enter
iret
out
push
cmp
mov
jle
xchg
lcall
push
adc
rcl
inc
jp
stos
lds
push
or
in
push
add
leave
fisubs
adc
dec
fildll
or
adc
push
les
lods
adc
aas
mov
mov
xchg
cld
test
clc
std
lods
cwtl
pop
cmc
std
das
lahf
clc
cld
mov
mov
pop
mov
sub
push
add
jmp
add
mov
mov
add
pop
mov
and
xchg
jecxz
orb
sbb
xchg
dec
or
jmp
push
jmp
inc
add
addr16
int
jo
jae
push
adc
add
int
cld
movsl
in
adc
pop
sbb
decl
in
dec
cs
cmp
push
cld
push
repz
jg
jg
hlt
sub
inc
xor
fldcw
mov
push
shrb
mov
rclb
adc
inc
or
dec
movsl
ret
push
adc
hlt
push
push
sbb
jb
and
aad
rcrl
mov
inc
ljmp
mov
jge
icebp
xor
scas
lds
bound
cmpsl
mov
pusha
xchg
arpl
xor
pop
xor
iret
sbb
pop
xor
sbb
cmp
cmp
dec
cmc
adc
ja
shrl
mov
sbb
cmp
or
add
sbb
and
stos
aam
in
add
pop
or
rcr
mov
cmp
lret
mov
mov
pop
inc
lret
and
xchg
xor
cmp
pop
outsb
xchg
and
cltd
push
or
push
dec
add
ds
faddl
fdiv
xchg
adc
jg
orb
push
sarl
aam
clc
fldl
lret
ljmp
xchg
lcall
dec
fwait
loope
movb
xchg
jns
mov
or
and
mov
inc
gs
into
daa
sti
mov
sbbl
sub
xor
movl
cmp
movl
jne
add
mov
add
movl
jmp
mov
xorl
xor
add
movl
jmp
xchg
fcmove
pop
fstpl
dec
ds
mov
jmp
jle
divl
popf
cld
ret
push
popf
hlt
or
cmpsl
inc
fistpl
inc
ja
inc
pop
sbb
stos
rcrb
in
into
std
xor
sti
das
pop
push
loopne
jns
jnp
in
out
inc
add
testb
jmp
push
push
mov
ss
and
sub
out
lds
cld
insb
mov
popf
addr16
cmovl
cmp
test
test
pop
xor
lods
call
int
call
mov
pop
dec
mov
test
out
push
dec
add
jnp
es
repnz
xchg
or
mov
inc
push
in
push
dec
mov
pop
cmp
shrb
movsl
ss
test
ds
gs
fidivrl
xchg
sahf
pop
adc
sti
repnz
sbb
and
sahf
jmp
xchg
je
dec
jl
mov
bound
dec
cmp
lods
push
xchg
into
mov
scas
gs
push
mov
out
inc
enter
jmp
jno
dec
xchg
out
xchg
lods
push
jns
add
mov
or
mov
jl
jp
shl
test
mov
aas
and
xor
and
push
mov
leave
arpl
shlb
les
pop
ljmp
int
xchg
stos
xchg
insb
xchg
mov
push
repnz
and
fildl
scas
mov
pop
adc
aam
xchg
sub
xor
jl
dec
jl
lea
cmp
cwtl
inc
and
orb
xchg
mov
aam
stc
mov
cmp
and
or
sahf
add
movsb
out
ret
and
push
aaa
shl
and
jnp
pop
dec
cmc
cltd
and
js
in
cmpsb
pop
outsl
inc
imul
pop
mov
rclb
repnz
rol
cs
in
push
lret
nop
fnsave
loop
xor
cmp
test
jae
dec
cmp
inc
jbe
outsl
mov
aas
dec
lds
enter
lret
sub
ds
adc
pop
pop
mov
je
mov
pop
jp
leave
dec
or
shll
aad
inc
lahf
mov
call
dec
sti
adc
pop
test
das
dec
xor
js
sti
fwait
bound
sub
adc
jg
insb
add
mov
or
push
pop
cld
pop
jl
push
pushf
add
in
arpl
mov
arpl
lds
gs
mov
enter
fcoml
and
push
jle
jp
jge
fcmovnb
dec
pop
dec
test
icebp
inc
pop
push
fiadds
or
daa
leave
dec
rcll
xor
sti
push
imul
sbb
aas
inc
or
cmpl
pop
test
movsl
xchg
add
pop
jle
or
jae
cmpsl
nop
ret
aas
mov
cmp
aam
or
or
stos
sbb
dec
push
push
jmp
mov
cmpl
aad
mov
adc
lahf
shrb
test
cmp
sub
adc
sub
mov
xchg
incl
push
dec
jmp
fldt
sbb
rorb
mov
mov
xor
jmp
repz
inc
or
pop
inc
and
sub
les
jle
jmp
jle
pop
jb
jnp
mov
mov
xor
fsts
or
ss
clc
mov
or
addr16
or
xchg
mov
data16
xchg
lret
rorb
and
lcall
hlt
cmc
xor
mov
inc
imul
insb
sub
mov
sbb
mov
cmp
sbb
js
mov
sti
or
test
inc
outsl
lret
xchg
jo
add
cld
dec
jmp
pop
je
dec
push
ja
imul
sbb
inc
pop
xor
pop
sbb
icebp
roll
mov
dec
xor
dec
dec
jp
add
jae
xchg
add
push
das
sbb
iret
mov
jno
movsl
push
jl
leave
outsl
xchg
repnz
loopne
aas
rolb
inc
mov
inc
inc
andb
in
jg
sbb
imul
aaa
cmp
push
arpl
insb
inc
mov
insl
xor
outsl
push
sub
in
ss
sub
outsb
jge
bound
jb
rclb
xor
xchg
cs
sub
or
fsub
push
icebp
and
sub
xchg
sbb
negb
ret
icebp
inc
jp
mulb
subl
inc
dec
xor
hlt
aam
aam
sbb
inc
dec
pop
imul
mov
sbb
pop
lret
jp
jmp
dec
push
test
cmp
enter
dec
aas
add
or
sbb
mov
pop
pop
aam
hlt
cmp
movsb
pop
cmp
and
lcall
sub
mov
push
push
jmp
xchg
pop
imulb
ss
imul
adc
push
inc
adc
sub
sbb
mov
or
pop
add
ss
xchg
movsl
push
ljmp
fidivrs
cmc
aaa
sbb
lea
fcomps
mov
popl
mov
popa
outsl
pop
jo
mov
stos
test
or
loope
sub
clc
test
cld
popf
adc
cmp
jo
lret
cmp
rcr
cmpsb
into
flds
mov
cmp
mov
and
repz
scas
fs
movsl
jl
mov
fcoml
icebp
dec
jnp
mov
push
jo
jp
mov
gs
pop
inc
out
ret
push
into
loope
dec
push
inc
aam
inc
incb
push
movsl
pop
inc
sub
test
push
mov
adc
mov
push
and
loopne
xchg
fisubs
daa
jge
sbb
mov
aaa
jl
into
leave
pop
clc
lds
ljmp
mov
and
daa
pop
dec
lock
mov
das
and
sarl
push
stc
sub
sti
mov
dec
dec
punpckhwd
outsl
int3
int
jmp
sub
fmul
and
and
and
stos
xchg
shlb
cmc
add
test
sub
leave
or
add
and
sub
and
or
lcall
push
in
rolb
arpl
movsb
subl
shll
sub
xor
lahf
fstl
xchg
mov
out
mov
sub
hlt
out
add
mov
jmp
mov
mov
mov
mov
mov
add
pop
pop
ret
push
mov
sub
movl
cmpl
je
cmpl
jne
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
mov
xor
sbb
mov
xorl
add
addl
movzwl
mov
xor
movb
lea
andl
xor
or
inc
mov
cmpl
jne
push
pushl
pushl
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
sub
mov
adc
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
push
call
jmp
mov
xor
sub
negl
mov
movl
cmpl
je
cmpl
jne
push
push
call
xor
xor
dec
mov
jmp
movl
add
movl
jmp
rclb
cmpsb
js
pop
mov
xchg
int
jle
jg
jle
outsb
jp
mov
xchg
and
jnp
xchg
adc
inc
in
std
add
mulb
push
adc
jle
or
mov
inc
add
jo
add
pusha
jno
outsl
lcall
pop
nop
mov
sahf
xor
lcall
icebp
mov
in
xchg
mov
loop
cmp
sbb
rol
das
nop
ja
xchg
les
lods
sahf
lret
fwait
daa
push
xor
std
mov
or
jne
rorb
mov
xchg
mov
jmp
push
je
xor
and
and
adc
and
jb
pop
or
or
pop
jecxz
jp
cmc
push
lds
rcrl
adc
xchg
fmuls
imul
push
mov
lock
test
daa
mov
int3
lock
test
cmpsb
and
lods
shll
imull
jl
mov
pop
jg
pushf
fsubrl
xchg
dec
fwait
cmc
inc
xchg
aas
std
sarb
fldcw
in
cmp
or
nop
ljmp
xchg
push
jecxz
cld
std
sbb
rorb
xchg
add
cmp
insl
push
push
cltd
push
dec
adc
stc
addl
jl
fwait
ret
lret
jmp
mov
loope
add
mov
push
mov
sub
xor
mov
subl
add
jmp
mov
mov
movl
inc
jmp
mov
jbe
pushf
pop
dec
fsubs
mov
push
or
jle
sarb
jle
cmpsb
test
bswap
xchg
decb
je
and
stc
or
outsb
sbb
sub
mov
mov
push
ret
cmp
xchg
push
dec
in
mov
nop
xchg
out
jae
iret
mov
nop
push
adc
jecxz
lea
lcall
pop
mov
push
xchg
xlat
jne
repz
movsb
test
cmp
test
add
stos
dec
cmp
roll
mov
mov
sub
xrstor
mov
addb
std
xchg
dec
cmp
addr16
sbb
sub
pop
stos
xor
pop
adcl
lret
xchg
insl
stos
jae
repnz
lea
faddl
lock
and
call
cmp
movsb
jno
das
cmp
pop
sti
sti
push
sar
sti
mov
jo
push
sti
sub
ss
adc
sarl
mov
repnz
clc
xor
adc
dec
and
ret
data16
mov
rorl
repnz
aas
sub
repz
dec
popf
or
in
pop
subl
sub
loop
lds
xchg
inc
inc
imul
nop
xchg
in
mov
test
sbb
mov
clc
inc
jb
mov
mov
xor
add
cmp
je
push
push
jmp
insb
lds
cmpb
xchg
sbb
adc
sarb
jg
jle
cmpb
mov
jge
xchg
shr
pusha
mov
mov
jnp
push
dec
lods
xor
lea
in
int3
mov
mov
xor
dec
ret
pop
test
pop
test
adc
sub
jb
cld
cmp
iret
mov
mov
add
xor
int3
sbb
pop
push
push
in
rorb
insl
mov
js
mov
aam
mov
fildll
pop
jle
xlat
push
adc
lret
or
sub
cmpsl
enter
xlat
push
push
fistps
xchg
cli
mov
sti
notb
aad
paddw
fistl
push
sub
aaa
rolb
and
lods
das
cmp
sub
push
aas
mov
inc
cli
add
xor
and
adc
lea
arpl
das
cmp
pop
andl
frstor
insl
add
xchg
scas
xlat
lea
pop
cmp
stos
pop
inc
xor
jno
xor
push
and
jmp
xchg
jp
sub
inc
pop
sahf
mov
inc
cmp
mov
icebp
inc
hlt
sbb
es
loope
jns
mov
and
fdivrl
hlt
dec
mov
icebp
cld
sbb
mov
scas
mov
mov
jmp
jae
cmp
cli
vpaddw
incl
lock
and
inc
sarl
jg
jle
std
fidivrs
outsb
adc
push
stos
sbb
mov
push
and
cltd
test
aaa
push
imul
pusha
mov
loop
dec
push
push
xor
imul
and
push
rolb
push
outsb
push
inc
inc
mov
aas
les
std
jl
xchg
jmp
cltd
call
inc
lret
mov
lock
xor
pop
inc
xor
repz
lods
push
mov
inc
stc
cmc
popa
mov
push
or
scas
stos
mov
orb
push
mov
pop
jae
adc
jle
into
outsl
mov
jb,pn
push
in
dec
andb
cld
std
in
inc
fldenv
int
mov
fnstenv
push
pop
setno
lods
xchg
stos
int
inc
cli
arpl
or
xchg
sahf
test
cmp
loopne
iret
add
cmp
clc
std
mov
xchg
lcall
rcll
fdivrp
or
cld
adc
fidivl
aad
sub
xchg
out
lds
adc
cmp
ds
or
scas
jg
shrb
loope
fnstsw
iret
xor
int
xor
inc
push
aaa
sbb
jge
repz
inc
jmp
push
dec
or
enter
mov
add
inc
xchg
add
add
jmp
push
fsubs
pop
xchg
push
nop
andb
jle
jno
in
adc
push
je
cmc
aad
xchg
icebp
inc
xchg
mov
and
and
enter
add
cmp
shll
rolb
push
dec
push
js
hlt
insb
adc
pop
and
sub
outsl
test
lret
mov
pusha
hlt
fildll
test
sbb
cmp
iret
shlb
out
dec
test
sub
aad
test
orb
add
dec
cli
push
in
stos
dec
jle
pop
push
xlat
arpl
roll
pop
mov
roll
rcll
sbb
add
fdivr
aad
cmc
cmpsl
lret
dec
sub
mov
outsb
adc
xchg
testb
mov
cmpsb
scas
mov
jl
std
pop
jle
pop
xchg
pop
imul
sbbb
sub
jmp
das
out
xchg
icebp
pop
cmp
push
popa
imul
sbb
or
inc
lea
shrl
in
dec
stos
cmp
dec
cmpb
enter
xor
mov
dec
push
lds
inc
fistl
jbe
mov
jb
and
sarb
mov
out
in
fdivp
dec
loope
fwait
jno
jmp
xchg
or
pushf
and
inc
lret
xchg
pop
mov
push
popa
sbb
movzwl
mov
jmp
xchg
sbb
cmp
inc
push
cwtl
pop
xchg
inc
cltd
les
sarb
jle
sub
mov
das
lea
ja
xchg
cmp
daa
shll
mov
xchg
sbb
scas
xchg
sti
gs
or
pusha
bound
into
rcr
jne
aad
add
push
pop
push
xor
subb
ret
jne
push
mov
mov
aam
adc
xchg
int3
push
pop
sbb
mov
sarl
or
jle
xor
shll
mov
loop
mov
adc
in
aad
add
lret
loopne
pop
mov
jmp
imul
fsubrp
sub
sub
js
mov
jnp
mov
pop
test
add
sub
pop
jno
jno
out
out
pop
daa
jl
ss
rcrb
imul
mov
incl
adc
xor
nop
punpckldq
lahf
fidivrs
jle
cwtl
mov
sub
divl
icebp
ret
inc
inc
outsb
lahf
movl
int3
push
shrl
jne
inc
out
pushf
cmp
fsubr
xchg
jne
xchg
jge
int3
and
xor
cmp
and
mov
mov
inc
or
mov
nop
xor
add
mov
mov
mov
inc
cmp
jne
pop
pop
jmp
fistpll
aas
or
or
jmp
jle
dec
add
jo
jge
jle
sarb
jle
ljmp
dec
loope
mov
in
cs
pushf
insl
mov
add
cmp
arpl
pop
test
mov
sbb
mov
lods
xchg
lock
mov
mov
popa
shl
or
and
in
mov
es
sub
dec
enter
xlat
pop
fistps
ret
pop
mov
mov
adc
inc
mov
std
insb
lock
test
push
scas
push
jns
fnstsw
ficompl
xchg
jno
add
in
jp
mov
mov
popa
sbb
jne
lea
outsb
stc
in
xorb
xchg
xbegin
fadd
dec
mov
shll
add
push
cwtl
push
pop
mov
xor
lahf
add
ds
sbb
test
gs
mov
fnstsw
add
inc
inc
push
fsubr
lahf
insb
addb
xor
lea
jecxz
aaa
divl
xchg
mov
fstps
lret
jle
fwait
inc
in
or
jecxz
in
lods
pushf
or
adc
add
test
inc
popf
push
add
add
lods
daa
sub
cmc
mov
vpperm
shlb
testb
dec
jle
outsb
cmp
push
mov
mov
xor
add
mov
mov
xor
add
jmp
mov
rorl
dec
rorl
xchg
aaa
inc
out
jle
sarb
jle
sbb
jecxz
icebp
imul
xchg
aad
outsb
inc
test
pop
jns
or
mov
xchg
jle
mov
das
pop
jecxz
in
incb
ljmp
and
push
push
and
test
sbb
xor
push
imul
mov
and
int
and
pusha
add
mov
test
inc
dec
push
jb
movsb
pop
mov
jne
mov
add
pop
scas
enter
je
jne
jns
add
je
cwtl
cmp
loopne
sbb
fdivrl
xor
inc
aam
lret
mov
cmpsb
jg
mov
mov
and
dec
pop
aam
or
xchg
jcxz
loop
add
movsl
hlt
sub
pusha
movsb
ret
and
mov
push
add
rcrl
push
lds
jnp
mov
les
stos
in
jecxz
lcall
jge
cmp
es
jns
fisttpll
jo
repnz
rcll
bound
pop
lds
xchg
inc
into
data16
mov
xorps
pop
pusha
mov
push
sub
inc
les
in
out
adc
aad
sbb
cmp
push
pop
push
inc
or
add
cmp
je
mov
mov
mov
cmp
jne
mov
mov
movsbl
xor
add
cmp
je
movl
lea
jmp
xchg
mov
or
mov
mov
out
mov
jle
jg
jle
xchg
jecxz
pop
icebp
jmp
mov
xchg
lock
pushf
ds
mov
xor
insb
ret
mov
lret
xor
adc
push
out
sub
repz
sub
mov
scas
bound
pop
mov
sbb
mov
mov
hlt
xchg
push
and
arpl
sbb
les
ja
inc
ret
pushf
lret
filds
dec
es
mov
pop
cmpsl
jnp
pusha
and
xor
dec
adc
dec
adc
jp
jge
aad
test
mov
cmp
iret
lret
inc
mov
cmc
jns
and
lock
add
movsl
cmp
mov
popa
add
mov
adc
pop
hlt
cwtl
stc
aaa
xchg
test
leave
fstps
loopne
in
jl
xchg
mov
xchg
cli
repz
inc
mov
mov
jne
add
cmc
scas
int
sti
mov
bound
cmp
fbld
mov
push
sub
fwait
inc
add
popf
movsl
pusha
mov
mov
gs
cmp
mov
ja
and
sti
lret
in
xor
xchg
popf
cmp
adc
or
add
rcll
in
dec
add
xlat
out
xchg
push
adc
dec
sarl
dec
dec
jge
imul
mov
mov
addl
jmp
test
cmp
jge
xor
imul
sarb
jle
sar
cmp
cwtd
pop
hlt
imull
rcrb
js
mov
popf
les
outsb
in
das
stos
mov
xchg
dec
out
je
jecxz
sub
addr16
in
shll
loope
nop
sub
xorb
and
mov
xchg
push
jns
jo
movsb
pop
mov
xor
out
insb
push
add
xchg
mov
and
or
in
rolb
adc
repz
jl
jl
out
lcall
sub
mov
cli
cltd
ja
pusha
ss
ss
cli
mov
fwait
mov
adc
test
mov
cmp
dec
scas
or
imul
mov
int
dec
sbb
leave
cmp
jno
push
or
jl
dec
mov
mov
push
leave
cmpl
push
aaa
call
mov
cmp
and
fs
cmp
push
pop
int3
decb
xchg
mov
dec
test
movsb
std
and
aad
loopne
or
dec
sbb
xchg
lds
push
scas
cwtl
and
jg
dec
xchg
sar
xor
rcrb
xchg
aam
push
xchg
shll
pop
rorb
stc
cmpsl
cmp
daa
jp
dec
xor
jns
in
and
movsl
int
mov
inc
lock
xor
jmp
dec
sbb
fstpl
inc
inc
jmp
dec
fstpt
sarb
jle
data16
jl
test
pop
mov
cltd
jbe
xchg
lret
in
mull
push
cmpsb
mov
and
addr16
loopne
popl
aam
adc
cwtl
test
cmp
jge
aam
cmp
mov
adc
js
mov
ret
add
out
push
arpl
cwtl
push
xlat
jns
and
sbb
je
out
sub
lock
call
xchg
std
ret
call
outsb
push
insb
call
and
xor
dec
mov
jecxz
dec
mov
jecxz
sbb
outsl
push
mov
pop
or
insb
xchg
jo
adc
sub
sub
outsb
fcomps
adc
call
mov
into
int3
and
int3
pusha
out
fmulp
loopne
add
movsb
cmp
cmpsb
sti
xlat
cmp
arpl
in
jl
jb
xor
iret
mov
cmp
mov
push
push
pop
stc
dec
clc
xchg
mov
dec
test
push
xor
imul
pop
and
movl
nop
add
xchg
xchg
mov
lock
or
scas
in
pop
and
xchg
and
sub
repz
xor
repnz
maskmovq
mull
push
incl
lea
mov
incl
jmp
mov
xor
mov
add
mov
pop
leave
ret
push
mov
push
movl
neg
mov
movzwl
adc
mov
mov
subl
xor
add
adcl
mov
mov
adc
xor
or
push
movzbl
or
mov
adcl
mov
add
mov
xor
mov
mov
mov
or
mov
dec
mov
sbbl
mov
mov
adc
mov
orl
mov
adc
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
pushl
pushl
pushl
push
call
cmpl
jb
mov
xor
add
pop
leave
ret
push
mov
mov
jmp
cs
orl
pop
ficompl
jle
jo
jle
daa
pop
out
pop
addr16
fwait
pop
stos
sub
add
push
sahf
xchg
mov
pop
mov
mov
enter
dec
ret
sarl
shll
xchg
rolb
sub
popa
inc
add
dec
push
xor
lock
xor
ljmp
xchg
fildll
stc
call
aas
or
sub
inc
mov
clc
fsubl
and
mov
cmpsb
scas
test
sub
jp
or
jnp
xlat
sub
add
mov
jmp
repz
insl
inc
fistps
pushf
mov
movsl
or
fdivs
fnstcw
and
pop
fstpt
inc
inc
jge
insb
in
sbb
and
sbb
fwait
shrb
xor
dec
fsub
cli
leave
mov
stos
push
les
sbb
jmp
xchg
and
fdivrl
inc
out
jae
fnsave
scas
mov
cmc
mov
cli
sbb
sbb
cli
fdivrp
ret
sbb
decl
nop
mov
pusha
or
pop
xchg
sub
jl
xor
movsl
lret
xorb
and
push
xor
mov
jmp
repz
insb
mov
mov
dec
mov
push
fsub
std
jne
mov
aad
leave
shll
in
rclb
sbb
cld
sub
lahf
mov
xor
and
sahf
inc
cmp
sahf
xchg
inc
aaa
pop
mov
and
or
int
mov
add
dec
or
jecxz
pop
outsl
mov
xor
xchg
dec
xor
pop
push
test
in
dec
jno
out
leave
pop
dec
pop
inc
jp
fadds
test
movsb
mov
and
pop
xlat
sbb
xor
sbb
rorl
or
sbb
std
ds
mov
int3
imulb
repz
jno
mov
jecxz
aaa
cli
mov
popa
cmp
ds
or
in
addr16
inc
enter
push
repnz
sbb
insl
jnp
adc
enter
dec
mov
lods
mov
and
or
sub
outsb
push
xchg
mov
pop
icebp
pop
adc
iret
dec
mov
aas
fwait
syscall
scas
mov
rcl
or
outsl
mov
lret
out
jmp
mov
mull
and
cmpsl
dec
sbb
dec
and
shl
mov
faddl
out
outsb
inc
test
aaa
jno
pusha
in
rol
cwtl
sbb
dec
mov
cs
mov
mov
ljmp
fdivs
pop
rorb
rorl
xchg
repz
popf
mov
mov
arpl
inc
xor
mov
div
mov
and
jmp
out
xchg
imul
bound
fistpll
push
jo
jle
cmpsb
mov
test
and
in
mov
cld
cmp
imul
movsb
jl
push
cltd
xchg
and
adc
mov
orl
fisubrl
in
sbb
pop
jl
out
mov
adc
sbb
bound
fsubrs
fisubl
sub
jne
in
cmp
shlb
sarb
inc
push
clc
xor
push
jp
jae
cs
xor
pop
daa
call
out
icebp
push
test
xor
dec
fsubrl
add
rcrl
dec
int3
xchg
loopne
sbb
rorl
mulb
add
test
push
xchg
nop
mov
cltd
data16
mov
daa
mov
inc
add
dec
add
jb
je
clc
sar
scas
dec
xchg
xchg
inc
gs
ds
fwait
mov
mov
sbb
lods
jle
cmp
push
mov
in
add
mov
js
jae
je
push
insl
mov
mov
dec
sub
rcr
sahf
js
repnz
jge
outsb
mov
jmp
ficoml
call
adc
mov
in
xlat
xchg
lods
mov
jecxz
sbb
mov
xor
lret
xchg
call
mov
push
je
loope
gs
and
push
hlt
jl
cmp
cmp
pop
mov
jnp
ds
mov
dec
into
push
ds
scas
inc
test
clc
jmp
and
sbb
pop
fistps
push
adc
inc
push
ljmp
jno
push
mov
jb
gs
push
out
repnz
jbe
push
int3
adc
jl
enter
call
inc
clc
adc
stos
xor
nop
inc
out
jge
out
push
lret
xor
jp
jne
dec
pop
repz
jp
push
iret
leave
insl
roll
pop
jg
add
adc
insb
jl
pop
and
push
sahf
add
lea
leave
pop
dec
xchg
cmp
outsb
lcall
mov
ss
sub
stos
bound
jns
ljmp
insb
jno
mov
pop
xor
cmp
fistl
fimull
push
adc
mov
out
cmp
jge
inc
jno
mov
out
push
sub
sub
add
pop
add
lds
in
dec
xor
insl
or
push
in
in
lds
or
iret
push
rorl
fsubrl
in
add
xchg
cmp
jmp
popf
and
sahf
nop
xor
data16
pop
dec
mov
sbb
pop
ret
push
mov
push
movl
cmpl
je
cmpl
jne
push
push
push
call
mov
dec
mov
jmp
adcl
movl
mov
sbb
mov
xorl
mov
xor
jmp
jno
test
gs
or
movsb
outsl
sub
jl
movsl
sarb
inc
jg
jle
dec
enter
pop
dec
mov
push
mov
cmp
push
mov
leave
cli
shl
and
js
and
mov
mov
repz
loopne
pusha
mov
add
xor
adc
shl
xor
mov
xor
loop
add
cmpsl
push
or
cltd
dec
jl
inc
mov
mov
jle
into
pop
dec
jecxz
xorl
movsl
push
push
enter
out
sub
sbb
rcll
ss
dec
sbb
icebp
test
repnz
jecxz
in
inc
pop
shlb
and
lret
jnp
and
mov
xchg
sub
dec
mov
lock
pop
mov
data16
push
adc
les
fdivs
inc
xorl
mov
jle
sub
insl
jnp
pusha
movsl
xor
scas
loope,pn
rcll
cli
lahf
adc
sub
hlt
dec
cmovl
mov
lods
icebp
jmp
fidivrs
fdivs
sbb
xchg
outsl
sub
pop
cltd
mov
int3
inc
cmpsb
scas
test
je
lahf
cmpsb
shrb
test
sti
das
int
lock
mov
scas
push
push
rcll
clc
insl
mov
test
mov
das
inc
mov
nop
or
aad
popa
out
push
sub
jmp
loopne
in
rolb
cli
inc
in
and
jp
and
add
xor
ja
lds
inc
ja
sbb
sub
xor
pop
mov
mov
aam
sahf
cld
sti
mov
out
push
jno
dec
cmc
andb
xor
xor
mov
out
ss
je
sbb
or
add
mov
mov
mov
sub
xor
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
test
mov
jne
mov
jmp
test
pushf
dec
pushf
inc
pop
cwtl
mov
aaa
jmp
aam
jle
jg
jle
sub
in
outsl
mov
add
icebp
mov
cmp
push
or
xchg
in
lret
stc
and
scas
adc
xchg
aam
xorl
into
stos
inc
sbb
rol
add
lret
pop
push
cmp
cltd
ret
mov
fidivrl
mov
stos
sbb
data16
in
js
dec
out
push
loopne
ret
xchg
jge
inc
fwait
sbb
inc
in
mov
push
hlt
int
insl
and
sti
cmc
push
jecxz
jl
test
stos
call
je
push
sbb
and
pop
or
push
jp
outsl
push
pop
push
jp
repz
popa
or
mov
pop
shl
pushf
dec
inc
add
dec
idivb
cmpsl
out
pusha
ljmp
add
repnz
inc
dec
pop
es
fnstcw
cmp
not
pop
mov
int3
pop
adc
dec
repz
cmp
je
les
xchg
aad
xchg
add
add
das
push
push
test
add
dec
jmp
fcomi
inc
outsb
scas
dec
shll
fisubrs
cmp
pop
mov
repnz
fldt
int
pusha
pop
or
outsb
shll
pop
lcall
shll
pop
dec
mov
je
add
loope
mov
into
arpl
fcomps
push
and
add
mov
xor
call
jge
dec
adc
ljmp
sub
add
adc
ja
cmp
int3
icebp
jl
out
fadds
loop
out
xchg
adc
dec
flds
mov
fcomps
xchg
jp
lahf
insl
cmc
cltd
mov
sub
push
push
jecxz
aaa
pop
jecxz
stc
fstps
roll
ret
push
mov
sub
push
sbbl
push
push
xorl
push
sbbl
call
sbbl
test
je
orl
xor
jmp
orl
push
call
sbbl
test
movl
je
push
push
adcl
call
jmp
subl
call
cltd
cmp
movl
jne
cmp
movl
jne
subl
push
call
jmp
negl
push
adcl
call
test
jne
andl
xor
xor
inc
mov
cmpl
jne
pushl
pushl
call
cmpl
jb
mov
and
mov
movzbl
sbb
mov
mov
andl
mov
inc
mov
cmpl
jne
push
push
push
push
call
cmpl
jb
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jb
adc
movl
andl
mov
inc
mov
cmpl
jne
push
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
sub
lea
mov
add
lea
inc
mov
inc
mov
mov
orl
mov
add
mov
xor
xor
adc
mov
xor
xor
mov
add
mov
mov
mov
cmp
mov
movl
je
mov
xor
adcl
add
imul
movl
mov
jmp
xor
adc
add
mov
mov
mov
sub
or
mov
xor
add
mov
subl
mov
add
mov
negl
xor
decl
add
movl
cmp
jne
mov
add
mov
mov
movl
cmpl
je
cmpl
jne
push
push
push
call
mov
dec
mov
jmp
add
mov
orl
mov
mov
not
mov
xor
add
adc
mov
mov
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
call
cmpl
jne
xor
xor
inc
mov
cmpl
jb
xorl
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
call
cmpl
jne
mov
inc
mov
jmp
movl
cmpl
je
cmpl
jne
push
call
xor
or
dec
mov
jmp
and
add
mov
lea
and
mov
mov
adc
mov
mov
sbbl
mov
sbbl
xor
add
movzwl
and
mov
addl
mov
or
lea
mov
sub
mov
mov
movl
cmpl
je
cmpl
jne
pushl
push
call
xor
xor
dec
mov
jmp
movzbl
or
mov
xor
xor
add
mov
mov
sbbl
movl
mov
sbb
mov
movl
cmpl
je
cmpl
jne
pushl
pushl
push
pushl
pushl
pushl
pushl
pushl
push
pushl
push
push
push
call
xor
xor
dec
mov
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
jmp
mov
movzwl
add
xor
movl
mov
mov
add
mov
xor
xor
sub
mov
orl
xor
movl
add
movl
cmp
jne
movl
cmpl
je
cmpl
jne
pushl
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
jmp
or
mov
movl
cmpl
je
cmpl
jne
push
pushl
push
push
call
xor
or
dec
mov
jmp
mov
xor
adcl
add
movl
cmp
jne
xor
add
sub
mov
xor
mov
incl
xor
andl
mov
inc
mov
cmpl
jne
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
add
sbb
mov
movl
cmpl
je
cmpl
jne
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
mov
adc
xor
xor
mov
andl
sub
add
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
not
mov
mov
subl
mov
andl
movzwl
add
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jne
push
push
call
jmp
adc
mov
subl
mov
xor
add
xor
mov
mov
xor
sbbl
add
andl
xor
subl
sub
orl
mov
subl
movzwl
sub
movl
cmp
movl
mov
movzwl
movl
jg
xor
sub
adcl
sub
mov
jmp
notl
xor
lea
mov
mov
mov
not
mov
movl
cmp
movl
je
movl
mov
movl
movl
movl
jmp
mov
cmp
jne
mov
mov
movl
movl
mov
movl
mov
mov
mov
mov
mov
mov
mov
movl
cmp
movl
jne
addl
mov
sbb
mov
xor
xor
mov
add
mov
movzwl
subl
not
sbbl
and
mov
movl
mov
jmp
andl
xorl
mov
notl
pushl
adcl
call
xorl
test
movl
je
jmp
movzwl
mov
cmp
jne
movl
mov
movl
movl
movl
jmp
movl
mov
movl
cmp
jne
sbb
mov
andl
mov
movl
xor
xorl
add
cmp
je
mov
mov
mov
mov
lea
add
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
xor
add
cmp
je
mov
mov
add
mov
mov
mov
mov
mov
mov
add
xor
cmp
je
mov
mov
xor
add
mov
jmp
xorl
jmp
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movl
cmp
jne
mov
mov
xor
mov
add
mov
movzwl
not
and
mov
mov
jmp
xorl
mov
pushl
call
test
je
jmp
mov
cmp
jne
mov
movl
mov
mov
mov
mov
mov
mov
movl
cmp
jne
mov
mov
xor
mov
add
mov
movzwl
not
and
mov
mov
jmp
xorl
mov
pushl
call
test
je
mov
cmp
je
mov
mov
mov
mov
mov
mov
mov
mov
mov
movl
mov
movl
mov
xor
add
jmp
mov
xor
lea
push
mov
xor
lea
push
mov
pushl
call
mov
xor
lea
mov
mov
xor
xor
add
mov
xor
lea
cmp
jbe
mov
mov
mov
mov
mov
mov
sub
xor
mov
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
pushl
mov
pushl
add
mov
mov
pushl
call
mov
mov
mov
jmp
mov
mov
xor
add
mov
cmp
jne
mov
xor
add
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
mov
movl
mov
xor
add
mov
mov
mov
mov
mov
mov
push
pop
sub
add
mov
mov
movl
mov
mov
mov
mov
mov
xor
add
mov
lea
mov
mov
xor
add
mov
lea
push
mov
xor
add
push
mov
push
pushl
call
andl
mov
sub
push
mov
add
push
call
incl
cmpl
jb
mov
mov
mov
mov
mov
movl
movl
mov
xor
add
mov
movl
movl
mov
movl
mov
xor
add
mov
movl
movb
mov
xor
add
mov
mov
xor
add
push
mov
xor
add
push
mov
xor
add
push
lea
push
pushl
pushl
call
test
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
cmpl
lea
mov
je
lea
push
mov
xor
add
push
mov
xor
add
push
pushl
lea
push
pushl
pushl
call
test
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
xor
mov
sub
sub
mov
add
mov
mov
mov
mov
xor
sub
mov
lea
incb
inc
push
pop
dec
xchg
decb
pushl
mov
mov
pushl
lea
pushl
lea
pushl
lea
pushl
lea
pushl
xchg
inc
inc
sub
push
pop
call
mov
mov
mov
pushl
lea
push
call
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
leave
ret
push
mov
push
and
movl
mov
orl
mov
adcl
add
sbbl
xor
movl
cmp
movl
jne
xorl
jmp
lods
inc
movsl
es
lods
inc
pop
push
cmpsb
mov
rcl
jle
fbstp
jle
imul
jp
ja
call
fnstcw
push
push
into
stc
dec
orl
sub
lahf
jbe
aad
shll
jg
dec
cmp
loopne
loop
enter
rolb
mov
imul
add
or
mov
sub
les
icebp
inc
or
xchg
cltd
pop
jp
cmp
test
pop
pop
or
add
js
shlb
lret
mov
jae
push
lahf
xchg
mov
xlat
mov
pop
inc
lret
dec
xchg
push
mov
inc
or
jbe
inc
mov
scas
jbe
into
xchg
fs
fstpt
sbb
addr16
mov
mov
adc
call
xchg
pop
add
test
test
sub
scas
adcb
fidivrl
mov
mov
cwtl
sbb
or
pushf
addr16
dec
add
mulb
stc
mov
sbb
xor
rcr
daa
sbb
js
mov
cmp
jecxz
aas
jb
pop
sahf
movsbl
xchg
insl
mov
scas
lods
dec
dec
mov
mov
and
fidivrl
dec
out
fistpll
sti
loop
push
adc
dec
repz
clc
insb
jecxz
mull
jno
inc
mov
push
das
dec
pmaddwd
add
pop
mov
es
push
fsubrp
inc
outsl
mov
push
das
mov
mov
inc
aad
loope
lock
jo
sbb
ljmp
jb
sahf
pop
outsl
rorb
mov
mov
xchg
mov
or
and
test
mov
idivb
out
test
push
loopne
stos
enter
sub
int
inc
aas
insl
xor
cmp
and
movsl
out
addr16
rcrb
test
icebp
cmp
sub
stos
testl
or
adc
mov
decb
lock
dec
jne
sbb
in
pop
in
adc
jmp
out
or
fst
xchg
cs
jge
lcall
inc
add
add
cmpl
je
cmpl
jne
pushl
call
mov
dec
mov
jmp
mov
sub
add
and
mov
mov
mov
xor
push
mov
mov
add
cmp
pop
je
mov
jmp
mov
xor
add
jmp
mov
xor
jmp
mov
pop
outsb
adc
jnp
xor
mov
mov
jle
fbstp
jle
sbb
jo
out
outsl
test
push
sub
icebp
mov
movsl
insb
sbb
xchg
xchg
xchg
cs
xor
cld
nop
adc
iret
mov
scas
sti
lds
adc
xchg
xorl
aad
nop
das
and
mov
mov
in
shlb
inc
int
pop
mov
test
lahf
push
sbb
sub
test
adc
shrb
aaa
inc
imulb
outsl
shll
or
xchg
aam
rorl
push
mov
out
aaa
int3
jne
cmpsb
and
fisttps
and
shlb
cmp
dec
cmp
sti
repnz
xchg
fmulp
idivl
divl
push
clc
pop
pop
jecxz
roll
test
jg
pop
push
in
fwait
pop
das
rorl
jo
mov
orl
mov
clc
cltd
ret
les
es
dec
es
or
xchg
adc
sub
adc
jnp
in
sbb
adc
and
and
data16
arpl
adc
call
mov
push
adc
sbb
pop
inc
pushf
dec
dec
pop
lods
shll
fildll
pop
cltd
dec
iret
js
xchg
popa
jb
cs
vpsadbw
inc
or
lret
es
pop
jl
push
loopne
sub
ficomps
pop
lahf
aad
push
out
jo
ret
bound
pushf
mov
into
pop
aaa
and
cld
enter
mov
push
xor
ds
mov
mov
mov
jne
insl
pushf
xor
jmp
call
mov
sub
mov
sbb
pop
jmp
mov
imul
popa
and
ds
cmpb
adc
jno
int3
int3
mov
pop
sbb
xor
nop
add
aad
sbb
mov
and
sub
leave
pop
sub
and
hlt
mov
pop
and
and
cmp
cmp
pop
xsaveopt
pop
sub
pop
ret
xchg
data16
dec
jno
mov
pop
push
xchg
push
clc
mov
das
push
call
imul
inc
adc
inc
add
insb
gs
cli
and
inc
add
leave
ret
push
mov
push
inc
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
xor
add
sub
xor
movl
sbb
jmp
imul
jge
dec
jb
jmp
hlt
add
jg
jle
pop
addr16
icebp
dec
push
out
push
mov
mov
mov
mov
xchg
nop
jnp
cmpsb
cld
ret
mov
mov
out
mov
xchg
mov
dec
icebp
mov
jne
add
cmp
notl
and
xlat
cmp
fcomps
inc
scas
shlb
insl
pop
dec
jbe
jo
mov
mov
adc
sub
in
das
imul
std
fwait
pop
loopne
sti
insb
loop
ret
or
ftst
rcrl
inc
mov
lds
inc
das
hlt
and
and
sub
or
xor
testl
fldenv
enter
mulb
mov
fldcw
push
xorl
outsb
or
sbb
call
pop
push
push
mov
mov
or
movhps
loop
hlt
add
or
cs
xchg
adc
int
repz
cmpsb
lahf
nop
lcall
scas
xor
cmpsl
test
and
mov
add
add
add
sub
subl
daa
fistpl
dec
push
xchg
push
cmp
fcomps
icebp
sarl
enter
sub
outsb
aad
jg
push
mov
or
xlat
jle
mov
mov
mov
lea
in
test
mov
jecxz
into
jbe
sti
push
and
cs
pusha
dec
fcmovnb
jne
adc
sub
mov
sbb
cmc
mov
lea
out
ja
cmp
and
lret
out
add
jbe
push
sbb
out
cmp
lcall
cmp
pop
mov
pop
sub
cmp
or
pop
movl
or
mov
push
or
mov
add
mov
xor
xorl
xor
dec
mov
add
addl
add
imul
mov
movl
cmp
movl
jne
mov
mov
jmp
fisubrl
cld
mov
adc
mov
mov
jle
pop
jg
jle
fistpll
das
pop
cwtl
cmp
or
cmpsl
rorl
mov
inc
enter
bound
outsb
and
jp
cmpsb
in
adc
pushf
fiadds
sbb
mov
push
fbld
push
daa
inc
dec
fildl
cwtl
les
movsl
scas
xor
shrl
mov
into
and
addr16
dec
pusha
leave
jmp
rol
test
stos
shrb
out
mov
dec
jb
leave
or
mov
insl
xchg
xor
mov
aad
xor
xchg
pushf
out
ja
push
jge
imul
leave
cmc
divl
mov
fwait
mov
mov
push
stc
cmp
dec
cmp
sahf
mov
lock
sub
lahf
mov
sbb
loop
cs
cmc
xchg
add
jl
cwtl
mov
dec
sbbb
push
fdivs
sti
test
xchg
sbb
jle
pop
cwtl
mov
mov
xchg
mov
lods
sub
test
nop
out
lods
in
dec
popa
cmp
ja
mov
lods
and
add
xchg
or
imul
add
lock
and
shrl
or
sahf
inc
js
mov
out
and
push
scas
cs
xchg
stos
push
sub
dec
outsl
iret
mov
idivl
insb
fldpi
bound
sub
sbb
mov
addl
lds
nop
movsl
xchg
jg
pop
lods
jb
mov
xor
clc
stos
or
jno
cmp
nop
popl
imul
fwait
and
dec
jecxz
jle
ja
mov
pusha
sub
push
test
mov
fstpt
xor
xor
add
jmp
pop
icebp
lds
fs
xchg
imul
add
jle
pop
jg
jle
lea
mov
out
mov
add
je
fwait
sub
pop
mov
mov
push
add
sbb
fst
jno
gs
xor
arpl
in
pop
pop
jmp
sti
loopne
inc
lret
inc
jecxz
cmp
into
adc
xor
hlt
jecxz
push
add
push
loop
sub
shrl
cmp
clc
cmp
push
mov
mov
adc
aaa
mov
or
pop
mov
fs
mov
cmp
fildl
mov
mov
mov
cmp
jno
fidivrs
dec
xlat
es
inc
pop
lds
arpl
scas
sti
pop
das
mov
pop
aaa
cmp
add
mov
repnz
cmpsb
mov
mov
aad
cmp
add
push
fidivs
cmpl
je
fdivrl
clc
mov
xchg
sub
jno
stos
xor
and
aaa
frstor
pop
aas
in
shl
imul
jle
inc
dec
loopne
adc
mov
xchg
cmp
ficoms
dec
cwtl
mov
add
dec
lret
mov
das
pusha
mov
inc
out
das
fs
xor
rclb
dec
xchg
out
das
mov
pop
mov
arpl
or
sbb
faddl
push
jg
mov
and
repnz
js
cmpsl
stos
shrb
dec
xchg
mov
mov
push
or
mov
fcomps
push
inc
jp
out
repnz
or
insl
fadds
mov
lea
ss
gs
sub
scas
xor
imul
jmp
mov
mov
mov
mov
mov
jmp
aad
outsl
mov
std
jge
outsl
stos
lock
mov
mov
jg
jle
rcll
xchg
sub
dec
inc
or
sar
xchg
test
bswap
mov
es
pop
fldenv
das
movsl
mov
push
ds
push
sub
das
jl
lret
inc
sub
xor
rcr
or
cld
add
test
ja
sbb
cld
jl
jle
das
cmp
cltd
inc
test
add
nop
dec
mov
xchg
sbb
and
jle
or
fsubs
inc
imulb
out
nop
cmp
insb
mov
dec
lahf
cmp
pop
mov
push
push
dec
in
shl
dec
hlt
mov
ds
or
insb
sbb
lret
ja
int
std
lea
insb
test
mov
pop
mov
push
or
cmp
rcrl
outsl
lret
pusha
pop
xchg
sub
hlt
mov
fidivrs
outsl
pushf
mov
cmc
pusha
or
jg
ret
add
je
sbb
and
pop
aad
sbb
dec
sub
hlt
push
xlat
loopne
jae
lahf
mov
cmp
mov
dec
decb
dec
fstpt
into
or
push
lock
orb
xor
xlat
fimull
mov
repz
pop
nop
lahf
pop
dec
push
stos
in
dec
movsl
es
jno
addr16
cmp
inc
roll
xchg
sbb
or
mov
fs
fs
mov
stos
sub
repnz
mov
sbb
mov
leave
std
fidivrs
ret
out
inc
std
je
or
xor
sarb
ljmp
inc
dec
and
mov
data16
sbb
ret
add
add
imul
mov
cmp
mov
je
xor
add
mov
imul
add
mov
mov
jmp
faddl
insl
jns
pop
xchg
xor
loop
jle
jg
jle
cmc
adc
es
jo
daa
mov
jnp
xchg
nop
fcoms
sbb
mov
sbb
cmp
and
adc
inc
insb
es
adc
dec
mov
push
mov
mov
aas
xor
sbb
fs
stos
fcomip
push
jp
xchg
jb
mov
scas
jge
add
adc
mov
mov
xchg
loop
punpckhbw
push
mov
jns
mov
aaa
or
and
inc
inc
inc
and
mov
sbb
dec
rcll
add
decb
imul
and
outsl
stc
out
jle
inc
mov
push
mov
ja
jp
cmc
clc
pop
adcb
ss
sub
out
sub
cmp
mov
adc
cmpsl
mov
sub
std
or
jmp
pushl
cmp
imul
lahf
add
lret
pop
pop
scas
lcall
xchg
leave
adc
arpl
pop
mov
pop
leave
jmp
das
adcb
lret
cmc
les
clc
pop
xor
push
mov
mov
fisubrl
cmp
xchg
xchg
addr16
sbb
frstor
mov
push
sub
jne
ljmp
pop
jp
fwait
xlat
xchg
inc
ljmp
inc
inc
sti
pop
in
push
fs
fsubl
dec
out
add
mov
mov
les
cmp
into
and
ficoms
sbb
lock
or
mov
mov
pop
mov
add
cmp
and
ds
pop
dec
cli
aam
insb
stos
fstl
stc
hlt
in
jmp
xchg
sub
and
addr16
jbe
xor
wrmsr
mov
sub
add
jg
repnz
test
leave
ret
push
mov
sub
mov
mov
sub
imul
jmp
adc
inc
and
scas
mov
pop
sti
in
jle
jg
jle
pop
test
mov
xor
add
es
in
rcrl
iret
out
pushf
ja
adc
push
nopl
cmp
jno
adc
jne
pop
jns
popf
repnz
cmpb
dec
in
loope
pop
xor
inc
dec
adc
mov
icebp
and
or
lods
ret
nop
jb
insl
or
xor
test
outsl
or
fucom
or
aas
hlt
mov
stc
adc
std
dec
mov
or
dec
aas
pop
and
out
xchg
adc
arpl
fwait
adc
fiaddl
je
loopne
gs
loopne
xlat
mov
popf
inc
mov
adc
fisttps
inc
push
stos
sbb
dec
fists
jp
inc
dec
lcall
push
clc
ljmp
jo
mov
mov
cmp
push
adc
pushf
adc
pop
int
xor
sti
aas
lahf
adc
int3
lea
push
jl
popf
flds
fidivrs
mov
xor
je
push
cld
and
lcall
movsb
addb
and
inc
out
push
cmpsl
jmp
movl
movl
cmpl
je
cmpl
jne
pushl
pushl
push
call
mov
dec
mov
jmp
movl
or
mov
push
add
mov
mov
sbb
xor
mov
sub
mov
xorl
add
xorl
mov
mov
xorl
push
subl
push
andl
test
movl
je
add
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
jmp
and
mov
mov
movzbl
xor
imul
or
mov
xor
add
mov
andl
mov
inc
mov
cmpl
jne
push
push
push
push
push
push
call
cmpl
jne
xor
or
inc
mov
cmpl
jb
dec
mov
xchg
sub
xor
jmp
mov
add
aad
jl
mov
cli
fwait
mov
jg
jle
sbb
sub
jle
push
sub
popf
sti
mov
xchg
cmpsl
mov
mov
pop
inc
jecxz
ret
repnz
or
movsl
lods
jmp
mov
dec
aaa
mov
inc
pusha
repnz
xchg
repnz
dec
insl
mov
mov
mov
loop
orb
mov
ss
lock
inc
repz
stos
sub
sbb
dec
sbb
lret
mov
adc
mov
cs
into
lea
dec
xor
lods
adcl
add
adc
filds
inc
rolb
int
or
jg
xlat
jl
repnz
xor
add
ret
cmp
clc
pop
push
pop
and
jl
imul
scas
das
sbb
pop
imul
push
lea
ds
andb
xchg
sub
ret
cmpsl
subb
mov
cs
fstpt
lds
xchg
lea
out
subb
out
lods
ss
pop
xor
jge
cmp
imul
pusha
rcll
mov
and
mov
or
jmp
gs
xor
pop
xchg
lods
mov
or
aas
jg
jle
sub
cwtl
jg
pushf
cmp
push
mov
outsl
daa
bound
mov
mov
je,pn
cmp
sbb
mov
rcrb
sarl
sbb
pushf
jp
cmp
inc
xchg
mov
popf
sub
lret
sub
fsubl
fprem1
mov
movsl
adc
jb
stos
imul
addb
add
sub
jns
test
xor
mov
les
xchg
test
pop
xlat
jge
cmpsb
add
lods
pop
rsm
into
and
cmpsb
sbb
pusha
mov
jae
outsb
cmc
adc
jg
stos
push
pop
data16
jmp
mov
mov
lock
pop
sub
std
ret
pop
fwait
lods
call
and
imul
es
test
push
das
mulb
mov
pop
imul
fnstcw
add
inc
int
push
hlt
jbe
ja
call
jle
or
adc
push
out
icebp
or
in
pop
mov
dec
and
inc
ljmp
clc
enter
pop
mov
sahf
xchg
push
mov
enter
fcomip
add
inc
cmc
push
scas
add
in
jne
sbb
mov
xor
mov
negl
xor
sbbl
xor
add
mov
mov
mov
je
xor
mov
xor
xorl
jmp
mov
inc
aam
push
mov
subb
inc
dec
ds
jle
aas
jg
jle
fistl
pop
dec
sbb
aaa
mov
mov
pop
ret
inc
hlt
stos
cmc
shll
sti
adc
adcl
lea
cmpsl
in
repnz
cs
cmp
lret
data16
mov
test
aas
fdivrs
xor
push
and
mov
jae
pusha
bound
es
sbb
imul
cltd
insb
push
or
fisubrs
push
xchg
sub
or
push
xchg
mov
out
push
movsl
sbb
addr16
fsubl
push
dec
ja
out
jae
dec
mov
mov
lock
icebp
adc
mov
xchg
and
sub
xchg
sub
cmc
test
gs
pop
mov
insb
test
nop
fstps
insl
pop
dec
clc
xchg
dec
xchg
jl
popa
mov
xor
imul
sbb
cwtl
jne
rorb
xor
cmc
xchg
xchg
and
sbbl
jnp
cmpsb
cmp
push
cmp
adc
sbb
mov
mov
movsl
cs
sub
jo
ss
xor
std
inc
xchg
in
adc
in
hlt
aad
cmpsl
lea
add
xchg
insb
cli
stos
hlt
mov
add
push
cmp
movl
jne
orl
pushl
call
mov
mov
mov
andl
mov
inc
mov
cmpl
jne
pushl
pushl
push
call
cmpl
jb
mov
xor
mov
addl
xor
jmp
jns
mov
pop
insl
jns
lods
iret
loopne
and
jb
stc
jle
aas
jg
jle
cmp
in
rcrb
jle
mov
jge
test
and
hlt
add
push
sbb
xchg
push
jecxz
push
adc
cwtl
les
fwait
dec
pop
ret
nop
loop
out
movsb
dec
pop
push
cmp
push
out
mov
inc
loopne
and
jns
adc
jg
xor
in
sub
popf
movups
add
cltd
cmp
arpl
clc
ja
arpl
jmp
cli
mov
scas
pusha
add
cmpsl
cmpsl
fdivrl
or
sahf
inc
outsl
jnp
mov
pop
mov
shlb
push
or
repnz
stos
bound
lock
mov
or
nop
dec
enter
nop
jg
out
xchg
pop
out
push
cs
push
fbld
and
inc
jl
adc
mov
mov
push
icebp
into
and
cld
mov
setne
add
push
push
testb
push
inc
sbb
cmpsb
pop
sub
iret
mov
push
xchg
push
sub
mov
inc
jl
push
js
cmpb
adc
mov
out
push
adc
mov
sub
ret
cmp
movl
je
sbbl
pushl
andl
pushl
call
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
push
call
cmpl
jne
xor
add
inc
mov
jmp
mov
xorl
mov
add
mov
xor
orl
add
cmp
movl
je
add
mov
movl
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
mov
sub
mov
jmp
fldl
xor
cmp
or
jne,pt
cli
jle
aas
jg
jle
lea
mov
mov
xor
xor
nop
fsubl
sub
cmp
lods
fld
aaa
aam
aaa
pop
sub
lods
repnz
mov
jp
pop
cmp
inc
out
xchg
cli
sub
sar
insl
fidivrs
arpl
cs
mov
loope
fs
int
bound
jl
fcomip
add
repnz
int
mov
cltd
xchg
stos
xor
aas
xor
xchg
lret
in
jg
push
jmp
cmpsb
sbb
sub
rorl
je
cmp
jmp
rcll
inc
xor
xor
xchg
dec
adcb
xor
mov
aad
jg
ss
cli
add
ds
fisubrl
xchg
inc
xchg
lds
pop
enter
imul
addb
test
cmp
out
nop
mov
test
data16
ja
rcrb
sub
rcll
imul
push
icebp
scas
dec
fisubs
mov
arpl
sbb
shll
mov
mov
sbbl
jmp
fmull
cld
popf
mov
scas
push
mov
jle
aas
jg
jle
xchg
pop
cmp
inc
divl
jns
xor
xchg
jb
loopne
pop
xchg
jne
fucomi
mov
mov
lds
aas
fs
or
push
cmpl
xchg
dec
fmuls
pop
es
cwtl
lock
jg
sub
xlat
out
shlb
dec
ss
and
sub
in
jmp
xor
cwtl
mov
gs
lods
dec
movsl
push
adcb
movups
pop
lds
xchg
cltd
mov
int3
shl
mov
fs
xchg
js
insl
sahf
je
mov
inc
or
mov
pop
xchg
test
and
pusha
dec
aas
out
mov
xor
lcall
in
scas
xchg
pushf
xlat
rcrl
jns
mov
mov
cli
out
cmc
sbb
test
lods
push
cli
push
add
and
mov
jns
addr16
in
push
gs
lods
mov
push
sbb
or
push
les
cltd
pop
jecxz
and
movsl
fisubrs
clc
pop
xchg
mov
mov
cltd
and
pop
testl
mov
dec
and
or
mov
mov
mov
orl
mov
add
mov
xor
mov
mov
andl
mov
inc
mov
cmpl
jne
push
push
pushl
push
pushl
push
pushl
push
call
cmpl
jb
mov
mov
add
xor
jmp
xchg
leave
popa
jge
jge
fldenv
test
lea
jle
aas
jg
jle
sti
mov
lahf
and
xlat
insb
loope
cmp
and
and
add
sbb
fidivs
jno
je
cmp
insb
or
sbb
nop
add
loopne
imul
mov
jmp
imull
and
ds
imul
xchg
mov
mov
loope
loopne
imul
out
jne
cmpb
xchg
cmpsb
gs
es
icebp
xchg
lcall
push
mov
xchg
and
and
pop
jnp
dec
mov
lret
test
test
mov
out
push
hlt
adc
jl
mov
mov
testb
je
lret
push
lea
mov
mov
mov
pop
leave
inc
mov
loope
sbbl
outsb
sbb
in
mov
lcall
test
fs
xchg
push
cmpl
sbbl
jae
mov
iret
jge
sti
sbb
bnd
std
jl
jae
add
mov
out
aas
mov
sub
push
stos
pushf
test
fmuls
mov
add
in
imul
jle
aas
jg
jle
scas
testb
pop
es
fs
lret
sbb
mov
repz
xchg
shl
add
jne
lcall
out
sbb
cld
mov
sub
dec
out
dec
test
lods
mov
sub
xor
and
stc
push
mov
adc
cmpsb
mov
mov
mov
inc
rorb
cmpb
loopne
cwtl
mov
call
xchg
stos
sub
dec
mov
mov
gs
mov
sbb
into
inc
das
mov
scas
ja
push
aam
repnz
mov
outsb
xorl
mov
lahf
mov
scas
add
mov
jne
in
or
xchg
fwait
adc
cmpsb
notl
addr16
arpl
gs
imul
out
add
mov
mov
add
cmp
idivl
sbb
fimull
js
sbb
add
dec
and
xchg
jle
and
mov
orl
push
scas
push
lock
iret
lret
loopne
mov
mov
repnz
adc
ret
inc
clc
jmp
and
and
sti
dec
sub
mov
jle
aas
jg
jle
aas
jb
inc
mov
push
popf
mov
pop
xchg
cli
or
and
xchg
lock
cltd
and
add
mov
dec
cmp
and
ds
adc
test
ficomps
add
push
aad
lock
aad
xchg
cmp
xor
push
and
pop
call
mov
mov
push
imul
xchg
in
negl
or
in
dec
push
stc
sysenter
push
test
cmp
lds
sbb
outsl
mov
pop
fs
jb
and
sbbl
cmpsb
mov
ret
into
sub
popa
outsb
movsl
shll
or
adc
mov
popf
cmpsl
out
xlat
out
mov
gs
pop
pushf
xchg
mov
sbb
mov
mov
cmp
xchg
ret
cmp
push
push
xlat
jp
mov
icebp
bound
lret
movsb
stos
repz
jmp
pop
mov
push
and
mov
and
les
pop
repz
addr16
jo
sbb
or
push
outsl
lahf
popa
jg
lret
lahf
and
push
xchg
and
js
in
cmp
scas
mov
pushl
pushl
call
mov
jmp
push
sahf
sbb
fdivrl
or
cmp
jne
jle
aas
jg
jle
fidivl
dec
lods
jo
adc
mov
xor
add
push
dec
mov
mov
push
bound
or
inc
fnclex
inc
mov
lahf
lea
icebp
stc
out
gs
les
mov
lea
xor
mov
js
jb
xchg
jge
push
jne
add
xchg
ret
flds
imul
xor
fstpt
pop
jle
andl
ret
xchg
insl
sub
fdivs
ds
push
divl
notl
lea
adc
and
jecxz
sub
ror
test
mov
mov
xor
mov
inc
mov
adc
jae
mov
xchg
repnz
cmpsb
cmp
icebp
jecxz
enter
sub
je
push
cmp
lret
push
jns
add
pop
xchg
out
xlat
mov
add
push
xor
sub
pop
aaa
jg
pop
cmpsl
xlat
jbe
fiadds
dec
lock
dec
cmpsl
out
aad
repz
icebp
jns
mov
push
dec
adc
daa
xchg
insb
loop
test
or
cmp
mov
xor
add
cmp
jne
mov
inc
cmp
jb
jmp
mov
xor
add
jmp
mov
movzwl
mov
mov
mov
mov
mov
xor
add
cmp
jne
mov
xor
jmp
jmp
pop
mov
jl
xchg
movsb
mov
aam
ss
aas
jg
jle
xor
sub
or
cmp
fisttps
add
xlat
dec
popf
jmp
mov
sbb
push
add
push
and
add
scas
ds
mov
cli
sti
sarl
and
loope
fdivs
lahf
xor
cmp
lret
pop
mov
movsb
adc
mov
sub
das
repnz
icebp
cmc
mov
dec
push
push
jle
enter
sub
clc
sub
mov
iret
out
mov
cmp
popa
setl
and
sarb
push
jne
lods
insl
inc
jmp
add
pop
mov
in
ja
mov
leave
data16
cmc
mov
adc
insl
lds
or
push
and
pop
addl
out
dec
les
iret
mov
shl
adc
out
xchg
inc
test
aaa
sub
sub
mov
add
push
out
dec
sub
mov
shrb
dec
adcl
mov
out
pushf
push
aas
cmp
pop
or
xchg
pop
mov
inc
or
inc
or
in
rorb
jbe
add
mov
push
pop
push
jmp
stos
xchg
fwait
adc
hlt
lcall
jle
aas
jg
jle
es
out
or
xchg
jbe
andb
ds
fs
bound
into
add
clc
mov
adc
sbb
xchg
and
into
out
push
std
jne
adc
out
mov
pop
dec
fnstsw
into
movzbl
mov
loopne
mov
sbb
popf
mov
fildll
aam
nop
and
push
stos
inc
gs
lret
pop
sub
and
mov
les
dec
and
nop
adc
or
cld
daa
push
ljmp
dec
pop
das
js
mov
fimull
leave
xchg
dec
lret
mov
fisubrs
cmpsb
jge
jb
scas
push
cmp
gs
cmp
stos
pop
imul
stos
sub
jnp
or
int3
pushl
mov
mov
mov
mov
addr16
pop
pop
cmp
mov
pop
aam
xor
je
mov
adc
cwtl
push
push
daa
inc
add
daa
sub
jne
pop
pop
orl
scas
nop
jg
ficompl
and
out
dec
dec
jmp
and
lods
lret
movsl
sub
fmuls
jle
aas
jg
jle
add
jne
or
adc
sbb
add
out
fcomps
push
es
sahf
movsb
push
jns
in
insb
adc
test
ss
xor
jae
hlt
shll
imul
mov
iret
mov
inc
sbb
dec
mov
insb
jl
test
insw
test
add
fs
dec
sub
cmc
push
push
inc
adc
lret
mov
lods
out
push
out
dec
fisttpll
je
jmp
sarb
mov
movsb
fildll
jne
xchg
outsb
mov
mov
ror
in
xor
dec
xor
xchg
ret
and
popf
and
sbbl
pushw
mov
or
sub
dec
add
sarb
jnp
sbb
sbb
fstl
sub
popf
cmp
mov
xchg
pop
mov
sub
orl
cmp
inc
rcrl
push
or
shrl
stc
xchg
stos
inc
aas
cmovo
fwait
iret
sbb
add
xchg
xchg
lds
lock
lea
add
fstps
popa
sbb
xor
dec
or
sub
xchg
dec
mov
imul
sub
mov
jmp
jp
rcr
std
jnp
mov
jl
add
lret
jle
aas
jg
jle
mov
mov
pushf
ss
xchg
roll
cmovle
mov
xchg
or
out
aam
arpl
rcr
in
stos
sbb
jb
mov
adc
cmc
adc
ds
xchg
cwtl
cwtl
ljmp
cmpsl
push
and
test
insb
mov
mov
jbe
ds
jne
movsl
adc
sub
mov
pushf
aam
push
sar
xor
mov
cmp
imul
add
fstps
aad
iret
adc
inc
add
push
xlat
cli
cmp
fimull
pop
mulb
mov
arpl
std
rcrb
imul
mov
stos
pop
ficoms
jnp
cmp
inc
fiadds
push
push
subl
jp
mov
push
xor
inc
or
add
and
cltd
cs
fiaddl
pop
cmpsb
xchg
fdivl
mov
in
lcall
out
sbb
adc
out
out
pop
pop
lret
push
adc
pop
aad
popa
push
sbb
mov
xchg
aas
cmpl
push
pop
jmp
test
test
jge
cmp
hlt
add
idivl
aas
jg
jle
jge,pt
test
rep
cmp
sbbb
push
aad
int
or
loop
push
gs
xchg
shlb
and
inc
add
jnp
adc
fcomps
test
add
jnp
or
mov
popa
jbe
mov
xchg
ret
xchg
cld
repz
int
and
mov
mov
mov
dec
ficomps
mov
xchg
into
add
stos
or
in
imul
js
jge
neg
add
xchg
push
fstpt
cmp
int
stos
icebp
aas
fildll
and
ret
and
cmp
je
mov
cmp
aam
sahf
fcomip
sub
andl
loope
sbb
or
dec
cli
push
xor
xor
fdivrl
sbb
cmp
dec
out
jmp
bnd
cmp
repz
test
cmp
pop
or
or
mov
inc
inc
push
inc
mov
popf
adc
jbe
mov
adc
sbb
scas
jb
mov
clc
fists
movsl
push
xor
mov
add
jmp
mov
or
lods
jge
out
mov
add
jg
jle
repnz
out
call
loope
addr16
std
xor
adc
mov
jle
jnp
nop
lahf
mov
insb
adc
lahf
pop
je
mov
push
sbb
std
lret
cs
aad
outsb
sbb
std
test
or
inc
sbb
xor
gs
jl
push
mov
dec
out
mov
outsb
jp
sbb
cmc
jne
scas
adc
mov
lds
popf
and
push
lret
jecxz
pop
addr16
mov
mov
outsl
in
push
adc
pop
adc
in
mov
and
cmpsb
and
repnz
cld
arpl
test
push
call
filds
add
add
mov
daa
cmpsl
jae
mov
push
mov
adc
xchg
xchg
dec
aad
lcall
xor
jg
cld
jmp
aas
xchg
cmp
iret
push
rol
ja
enter
in
pop
mov
pop
das
out
aaa
mov
and
ds
in
out
cs
add
repnz
dec
in
mov
mov
xor
add
mov
imul
mov
jmp
inc
sbb
gs
jae
int3
inc
testl
aas
jg
jle
pop
mov
xlat
dec
stos
cmp
fdivp
stos
fidivl
inc
scas
dec
mov
lock
xchg
hlt
mov
or
repnz
push
jae
mov
idiv
cmp
nop
leave
mov
insl
pop
pop
push
loop
in
cs
repnz
iret
outsl
mov
xor
movsl
mov
in
ss
inc
in
mov
dec
mov
in
pusha
hlt
cmpsl
fsubrs
mov
mov
cld
fisttps
cmpsl
sub
fwait
out
cmp
pop
cli
imul
iret
fwait
daa
insb
loopne
lock
adc
push
dec
insb
xchg
pusha
pusha
lods
cmpb
sub
mov
sbb
adc
cmp
movsb
mov
out
jns
sub
mov
cmp
popa
dec
aaa
fstps
adc
cwtl
stos
xor
xor
ud2
push
lcall
fisttpll
mov
sbb
add
or
sub
adc
jns
stos
mov
out
lea
push
jb
add
cli
pop
sub
sahf
mov
adc
xchg
in
jns
mov
fdivs
sti
ja
ss
inc
int
sbb
addr16
push
shl
aad
rorl
or
enter
add
call
push
adc
inc
addb
or
xor
xor
mov
add
div
mov
xor
jmp
jno
cmp
jge
in
pop
xor
adcb
jle
aas
jg
jle
pop
lcall
decb
cld
das
pop
mov
pop
ret
aad
pop
fidivrs
fnstenv
in
scas
push
je
jg
pop
arpl
adc
cmp
enter
insb
adc
jp
ds
push
xor
lds
sub
pop
repz
mov
xor
fwait
sub
aas
mov
insb
add
call
sub
jns
jnp
shlb
in
xchg
lods
pop
mov
push
imul
sub
pop
push
sar
mov
fsubr
and
cli
xlat
add
add
pop
std
hlt
mov
fsub
imul
popa
cli
cltd
in
mov
int
pop
mov
fldt
push
stos
es
scas
jmp
lods
test
push
inc
inc
jle
push
sbb
xorl
cmp
mov
add
pop
stc
loopne
out
jo
pop
fmull
testl
cs
pop
cli
lret
pop
sub
lcall
ret
push
call
pop
xor
adc
jg
dec
or
mov
inc
aaa
lea
mov
mov
mov
mov
mov
xor
lea
mov
mov
jmp
cs
jecxz
jnp
aad
lock
pusha
xchg
dec
jo
mov
aas
jg
jle
push
and
fsubrl
outsb
popa
sbb
mov
movl
repnz
jmp
pop
adc
mov
clc
push
dec
cmp
push
dec
xchg
add
stc
imul
ret
xor
add
in
lods
gs
ljmp
jecxz
orl
and
sub
mov
pop
add
testl
sbb
dec
lcall
mov
sbb
mov
push
test
stos
das
mov
mov
jnp
sbb
push
test
mov
ds
add
cmp
and
test
in
mov
fldl2t
add
ds
or
xchg
stos
mov
add
lret
pop
imull
std
pop
int
loop
jg
push
sbb
ds
imul
aaa
xchg
sbb
shl
pop
mov
and
test
rcl
fwait
loopne
inc
jns
sti
jbe
cmp
add
dec
xlat
nop
je
fs
addr16
and
jl
test
jecxz
push
adc
roll
imul
jmp
into
jb
pop
inc
pop
fisttpll
ss
dec
lea
aas
jg
jle
stos
fdivrs
into
movsb
test
and
jmp
lods
pop
or
cmpsb
cmp
mov
movsb
fs
pushf
in
mov
mov
mul
jmp
jmp
xchg
and
cmp
adc
icebp
jmp
cmp
and
fisubrs
or
add
clc
ret
ds
arpl
and
inc
gs
and
inc
fwait
int
xchg
jns
lret
sub
and
arpl
test
push
cltd
inc
out
fs
sbb
adc
jno
push
mov
pop
cmp
jecxz
lods
sub
nop
aas
xchg
nop
jecxz
pop
push
subb
xchg
loopne
mov
lods
scas
ss
test
jnp
loopne
add
ljmp
ret
out
ja
test
stos
xlat
cmpsl
fsub
movsl
and
cmpsb
mov
lahf
jl
add
pop
mov
xor
pop
mov
lret
outsl
jbe
out
ja
or
push
ret
add
into
or
andb
iret
loop
jecxz
dec
push
stos
jmp
imull
aad
popa
mov
mov
daa
cld
add
sub
xor
mov
jmp
out
cmp
jp
sti
inc
aaa
mov
sbb
inc
mov
aas
jg
jle
repnz
adc
or
push
cmp
jecxz
mov
in
cltd
ret
inc
in
test
das
adc
repz
nop
push
shrl
lds
repnz
or
insb
sub
push
nop
adc
push
adc
sbb
stc
or
mov
mov
outsl
sub
xchg
clc
fcom
dec
sub
mov
outsb
push
iret
xchg
std
pop
iret
or
mov
push
fdiv
cltd
inc
out
jmp
jmp
pop
scas
add
sar
pop
add
scas
loop
push
inc
inc
cmp
lds
inc
jecxz
imul
inc
ffree
pop
xchg
insl
xchg
in
xchg
in
pop
ret
incb
into
aam
mov
nop
cmpsl
xchg
aas
sbb
call
les
mov
mov
popf
dec
jbe
xchg
movsl
aad
sbb
sub
stc
notb
and
dec
sub
mov
jmp
out
test
mov
xor
mov
fmuls
push
jae
das
inc
in
mov
adc
and
mov
out
xchg
pushf
std
dec
or
add
in
xor
mov
lea
cmp
jne
mov
jmp
mov
mov
xor
add
mov
xor
lea
add
jmp
xchg
pop
mov
cmp
bound
jle
aas
jg
jle
aam
mov
or
push
jae
popa
mov
adc
je
jge
iret
rcll
imul
scas
outsl
test
js
fmuls
fldl
mov
outsl
ss
insl
pushf
push
sub
shll
mov
rolb
gs
inc
and
rorb
loopne
test
stos
inc
imul
push
fsubl
idivb
pusha
in
orb
xlat
enter
cmp
push
hlt
mov
int
xchg
orl
outsl
daa
fsts
jmp
loop
mov
int
out
movsb
fmuls
sub
add
imul
jno
add
outsl
push
sub
pop
lds
mov
xor
mov
mov
sbb
cmp
imul
test
adcb
adc
adc
mov
dec
scas
aaa
fistpll
inc
scas
call
adcl
inc
and
mov
sbb
rorl
sbb
jnp
lock
mov
das
xor
stos
add
dec
cmpl
inc
stos
call
xor
jmp
mulb
jne
lds
mov
cmpl
jle
leave
ffreep
dec
pop
and
inc
xorl
pop
jne
jno
adcl
pop
cmp
sbb
pop
xchg
adcb
addr16
int
inc
pop
movd
movsl
leave
or
xchg
cli
aad
rep
push
dec
pop
in
test
or
dec
std
scas
idivl
clc
jmp
cli
aaa
mov
inc
mov
xchg
and
mov
ljmp
mov
mov
sbb
push
sbb
int3
je
stc
push
sahf
adc
cmp
mov
mov
fwait
add
jle
ret
jmp
mov
sbb
test
inc
hlt
lds
push
jp
sbbl
pop
repz
mov
jns
sti
jno
test
outsb
mov
add
fstpl
repz
es
lods
mov
lock
ds
xchg
imul
jbe
test
pop
scas
pop
inc
inc
ds
mov
xchg
jp
inc
out
mov
adc
push
or
lcall
out
or
out
push
in
sub
shrb
cmp
pop
xlat
in
inc
sub
movsb
push
mulb
adc
jmp
jae
aas
mov
cmp
push
mov
jle
aas
jg
jle
es
and
and
ret
dec
push
cmp
mov
int3
fwait
rorl
mov
ficompl
mov
xchg
pop
aaa
enter
movsl
mov
dec
sub
xchg
xor
xchg
or
out
add
sahf
test
das
push
or
stc
in
cld
lock
jbe
les
mov
xchg
data16
mov
mov
leave
test
pop
ret
add
inc
sbb
cwtl
popa
xchg
loope
sbb
jae
ss
fstl
jl
loop
pop
fs
pop
sub
dec
jle
mov
out
jo
cmpsb
cmpl
test
negl
scas
insl
jae
lret
out
mov
jae
clc
xor
in
icebp
arpl
outsl
ret
jle
cmpb
lods
mov
bnd
add
pop
in
pushl
es
mov
push
cmp
in
test
dec
mov
fisttpl
daa
ja
in
xor
imul
sti
hlt
jecxz
fcmovnu
cwtl
es
lret
test
insb
push
cltd
movsb
xor
aam
cmp
jmp
movb
out
in
mov
cmpsl
cmp
je
jmp
xchg
mov
mov
inc
push
pop
cmp
cmpl
jg
jle
mov
push
mov
popa
ss
xchg
and
stos
jo
scas
jp
rcrb
data16
jp
dec
jns
lock
xlat
dec
lods
add
xchg
sarb
sub
jne
xor
cmpsl
cmp
out
imul
int3
or
sub
cmc
xchg
jbe
dec
sbb
pop
lods
ss
adc
daa
in
mov
add
jecxz
fstpt
xlat
add
iret
loope
mov
loop
adc
and
jecxz
adc
push
dec
add
ds
cmpsb
cwtl
repz
stos
add
icebp
mov
arpl
cmpsl
and
jl
stc
test
push
sbb
int3
enter
fincstp
fldcw
add
mov
cmc
imul
and
pop
test
jne
mov
adc
sbb
movsl
push
lea
dec
jo
in
cwtl
jnp
jnp
cltd
das
popf
in
out
lahf
out
js
in
pop
sbb
cmpl
dec
sub
inc
pop
inc
add
out
push
test
sub
sub
sti
cwtl
mov
add
add
sti
lret
jns
rclb
sub
aas
jg
jle
rorb
test
mov
fldcw
mulb
and
in
xchg
adc
cmp
add
in
dec
cmp
js
cld
lds
sub
xchg
dec
push
loopne
jnp
jae
cwtl
sbb
lock
adc
add
nop
mov
mov
aas
lock
test
mov
push
sbb
fildl
and
testl
movsl
mov
lods
lret
shl
sbb
sbb
jnp
mov
divl
xlat
int
cmp
and
mov
or
xor
xor
sub
test
xchg
mov
sbb
filds
and
xchg
mov
mov
je
mov
scas
dec
mov
mov
jns
clc
sub
iret
imul
lea
popf
repz
pop
das
jge
xor
pop
xor
mov
call
or
jae
xor
jmp
mov
imull
dec
cmp
icebp
cld
add
adc
lcall
cmpl
push
pop
inc
xchg
jmp
ss
or
mov
jmp
push
movb
jle
mov
ja
cmp
sarb
pop
cmpl
pop
mov
outsl
int
cmc
cmp
int3
xchg
inc
inc
jge
mov
mov
outsb
addr16
js
clc
call
sub
je
aas
or
cmp
inc
decb
mov
shll
ja
and
sti
cmp
adc
jecxz
xor
jnp
adc
insb
pop
into
jmp
out
jne
call
shrb
dec
imul
fisttpll
mov
and
mov
addl
dec
lret
repnz
in
cld
push
jb
mov
lret
loope
aaa
addr16
xor
adc
int3
pop
mov
add
mov
icebp
jle
lea
jb
sarb
push
inc
js
ds
jbe
mov
jbe
mov
cmc
xchg
dec
pop
ds
imul
pop
mov
cmpsl
out
imul
jl
stos
mov
outsb
mov
loope
pop
sub
fisubrs
lret
and
aaa
test
mov
cmpsb
push
jbe
xor
flds
in
scas
roll
xchg
push
xor
mov
dec
inc
add
dec
xor
add
pop
jmp
mov
pop
pop
in
pop
shrl
xchg
aas
jg
jle
sub
xchg
push
or
ret
cwtl
adc
in
clc
dec
xchg
pop
cmpb
mov
mov
jnp
mov
xchg
xchg
dec
pop
jge
inc
je
dec
movsl
mov
cmp
cmp
mov
packsswb
ficoms
cmc
xchg
shrb
push
dec
enter
outsb
and
mov
dec
negb
sub
or
icebp
iret
jae
mov
stos
jl
jmp
mov
lcall
push
cmpb
out
adc
jle
fcoms
jp
sti
xor
add
ret
pop
mov
xor
mov
sbb
imul
repz
leave
movl
sbb
repz
mov
hlt
stc
movsl
push
mov
cmc
cltd
cmp
cli
push
xor
ret
jbe
shlb
sub
xchg
inc
in
fcompl
aaa
cmp
push
or
aas
sahf
xor
mov
orl
dec
iret
fiaddl
jg
jmp
jge
dec
mov
icebp
xchg
nop
clc
push
sub
mov
inc
hlt
pop
pop
pop
leave
ret
dec
push
mov
mov
or
dec
add
add
add
movl
xor
hlt
clc
lret
enter
mov
hlt
test
pushf
enter
movl
inc
inc
cld
xor
or
mov
call
pop
mov
dec
mov
pushl
or
ljmp
dec
loopne
rorb
add
mov
hlt
add
enter
dec
add
mov
orl
xor
lret
enter
mov
lea
push
mov
fs
decl
push
and
pop
inc
mov
push
pop
cld
dec
lea
mov
add
movl
decl
xor
cld
dec
jne
lea
push
mov
or
add
sub
add
rolb
inc
add
add
mov
incl
lea
call
add
jne
decl
dec
add
xchg
loopne
inc
incl
mov
xor
add
enter
mov
hlt
add
mov
add
add
incl
sbb
jne
mov
mov
movl
incl
rorl
test
inc
aas
inc
lea
pushl
mov
mov
loopne
ljmp
mov
add
incl
xlat
lea
inc
ljmp
incl
aaa
add
repnz
ffreep
aas
add
mov
incl
or
mov
xchg
roll
mov
cmp
dec
lds
add
adcb
add
add
mov
cld
push
decl
push
mov
call
mov
add
test
ljmp
mov
fcom
add
mov
add
add
add
add
push
inc
push
fisttps
test
add
jecxz
roll
inc
jle
test
jmp
incl
loope
jne
mov
cld
incl
mov
mov
add
call
int3
mov
add
add
xor
mov
cld
jle
push
add
add
inc
inc
mov
decl
add
inc
lret
cld
push
mov
add
mov
mov
inc
sub
add
rolb
jne
xor
incl
call
mov
call
xor
push
adc
loopne
ret
loopne
xorl
cmp
bswap
rolb
jmp
mov
add
cld
jne
xor
pusha
add
add
inc
add
mov
test
add
incl
jmp
adc
mov
popf
mov
lea
xor
call
call
jne
xor
add
pushl
call
int3
incl
mov
xor
add
xchg
in
add
add
or
mov
mov
or
inc
test
je
mov
xor
push
or
inc
in
mov
mov
fmul
add
mov
cld
loopne
inc
push
cmp
movaps
cld
fadds
jne
push
in
jne
lea
xor
jmp
mov
xor
adcl
rclb
inc
lock
inc
xchg
ud0
incl
adc
adcb
or
inc
lret
inc
iret
jb
mov
enter
xor
mov
pushf
lea
add
inc
mov
xor
add
mov
fmuls
xor
mov
aad
pushf
xor
mov
clc
enter
mov
test
clc
incl
mov
test
cmp
pushf
inc
mov
popf
push
add
mov
sarb
adc
dec
adc
add
jmp
jb
add
xor
xor
add
clc
enter
pop
mov
push
push
xor
xor
add
add
lret
repnz
cli
fdivr
test
dec
inc
xor
add
mov
mov
clc
jne
mov
into
into
scas
dec
mov
sub
cmp
mov
mov
mov
add
xor
xor
rdtsc
lret
mov
inc
add
mov
lods
test
xor
mov
lock
bswap
lret
test
jmp
add
push
mov
test
push
clc
xor
xor
add
add
push
dec
mov
stc
roll
scas
mov
xor
xor
add
mov
clc
lret
into
mov
mov
mov
int3
add
xor
xor
add
mov
lock
stc
mov
or
jmp
dec
dec
mov
clc
test
clc
rorl
mov
call
les
lret
ja
mov
dec
xor
mov
clc
push
lret
mov
adc
jb
add
call
cmp
movsb
popf
inc
xor
mov
clc
dec
lret
mov
call
scas
mov
popf
sub
cmp
lods
xor
add
mov
mov
cmp
jb
add
dec
scas
mov
shrl
into
cmp
mov
dec
dec
mov
lret
xor
add
imul
mov
xor
mov
add
mov
inc
sysexit
xlat
pushf
jge
xor
sub
cmp
jb
add
rorl
xor
add
jmp
mov
dec
into
mov
popf
shll
lret
or
add
in
push
mov
arpl
int
sub
dec
xor
jge
mov
add
dec
decl
adcb
add
jge
push
push
shlb
xor
xor
inc
add
dec
or
jbe
mov
ror
enter
decl
push
lret
push
mov
mov
cld
subb
sti
add
push
lcall
mov
int3
pop
inc
decl
push
xor
movl
aas
push
inc
xor
add
mov
jmp
mov
rol
mov
mov
mov
cmp
mov
add
xor
popf
lret
cmp
call
inc
inc
mov
mov
add
add
clc
enter
push
pushf
mov
int3
or
test
clc
gs
add
push
xor
sub
dec
add
mov
or
cmp
dec
out
xor
mov
dec
add
push
push
add
sbb
mov
xor
dec
inc
xor
add
push
dec
mov
lret
into
sub
dec
adc
inc
push
test
unpcklps
jmp
add
movl
xor
rolb
clc
arpl
mov
xor
sub
mov
add
sub
mov
mov
clc
addl
lcall
inc
decl
test
decl
push
add
dec
or
rorb
into
add
mov
sar
adc
clc
fadds
mov
push
adcb
add
lret
mov
cld
mov
into
add
jne
incl
rclb
push
mov
mov
sar
or
push
add
pushf
xor
test
clc
inc
inc
mov
sub
mov
dec
arpl
inc
add
dec
arpl
inc
add
inc
add
movsl
pushf
inc
dec
lea
push
xor
pop
lods
incl
mov
rcrb
test
inc
inc
add
pushf
orb
xor
add
adc
add
jmp
add
mov
dec
push
cmp
unpcklps
jne
decl
mov
shlb
inc
add
lret
decl
stc
in
or
dec
clc
xor
mov
rolb
inc
add
clc
inc
lret
mov
in
lret
into
into
scas
dec
mov
sub
cmp
mov
int3
test
xor
xor
rdtsc
lret
mov
inc
add
mov
xor
mov
call
lret
test
jmp
add
push
mov
mov
lret
xor
add
add
push
dec
mov
stc
roll
scas
mov
xor
xor
add
mov
clc
lret
into
mov
test
push
jbe
mov
mov
push
add
rdpmc
lret
add
dec
stc
mov
or
jmp
dec
dec
mov
clc
test
clc
rorl
mov
lock
inc
mov
hlt
pushf
jge
sub
cmp
ja
mov
dec
xor
mov
clc
push
lret
mov
adc
jb
add
lock
sub
mov
mov
mov
mov
lock
ror
push
scas
mov
popf
sub
cmp
movsb
xor
add
mov
mov
cmp
jb
add
dec
scas
mov
shrl
into
cmp
mov
dec
dec
mov
lret
xor
add
imul
mov
xor
mov
add
rolb
sysexit
xlat
pushf
jge
xor
sub
cmp
dec
xchg
incl
jmp
mov
dec
into
mov
popf
shll
lret
or
add
in
push
mov
arpl
int
sub
dec
xor
jge
mov
add
dec
decl
inc
push
decl
lea
push
mov
push
mov
les
add
incl
mov
cld
lret
add
jne
in
ror
clc
into
add
not
adc
inc
push
mov
push
mov
fdivr
sti
sbb
pop
xchg
leave
popf
add
push
cmp
sqrtps
decl
push
cld
xor
lret
clc
xor
add
hlt
or
mov
hlt
dec
add
leave
mov
push
roll
mov
mov
lar
push
lret
jne
mov
or
mov
cld
inc
mov
add
loope
inc
call
inc
mov
cld
mov
clc
xor
mov
loopne
mov
mov
clc
jne
call
sub
test
je
mov
cld
or
push
add
add
inc
push
mov
pop
mov
ret
push
mov
clc
lock
jne
jne
mov
rolb
jne
cmp
pop
mov
push
inc
lea
inc
inc
rorl
xchg
mov
mov
or
inc
inc
mov
cld
jmp
mov
mov
rclb
iret
inc
leave
decl
mov
mov
mov
push
nop
incl
push
leave
iret
add
push
in
push
push
incl
mov
loope
sbb
add
mov
cmp
jne
push
pop
push
mov
or
add
sub
ret
add
sbb
mov
lea
push
enter
testl
enter
negl
or
inc
in
in
sub
inc
in
push
add
push
push
imul
adcl
add
lea
mov
cmp
jne
mov
loope
inc
stc
xlat
ss
aas
in
ret
lock
and
mov
call
push
add
ud0
hlt
add
cmp
flds
out
call
cmp
shr
pop
fisttpll
push
add
add
push
add
sub
jne
lods
mov
dec
out
into
push
loopne
shrb
xorl
roll
mov
cmpl
mov
push
push
push
sub
push
adc
insl
mov
add
inc
mov
pop
addl
add
add
roll
cli
push
pop
lret
add
decb
sub
and
dec
inc
shll
add
pop
add
pop
dec
jmp
and
push
out
jmp
jmp
mov
decb
add
pop
icebp
mov
insb
adc
mov
or
mov
cld
jge
aas
and
adc
mov
and
dec
add
add
fadds
stc
enter
sbb
sbb
in
in
add
jne
cmp
jb
jmp
mov
add
add
jb
pop
faddl
or
inc
or
xlat
dec
push
add
leave
roll
add
mov
int3
jmp
mov
jne
mov
call
pop
add
pop
or
push
mov
int3
add
jae
int
enter
add
mov
push
pop
add
push
lea
mov
jb
mov
push
add
add
add
int3
jne
movsbl
add
add
mov
add
add
mov
sub
jb
add
jge
add
addl
jne
je
mov
rorb
orl
mov
mov
fadds
inc
pop
lea
push
out
add
add
mov
jb
add
push
call
add
jae
icebp
inc
mov
int3
out
loopne
sub
push
pop
push
jl
add
xor
mov
rcrb
rorl
inc
shr
orl
push
pop
add
jmp
mov
fdivrl
push
pop
call
mov
in
rolb
call
pop
enter
repz
xorl
je
or
jne
jmp
pushl
push
pop
cmpl
jge
mov
sub
pop
inc
mov
sub
lods
add
enter
repz
stc
jge
jnp
call
fadd
dec
insb
stc
cmp
push
mov
jne
mov
mov
add
sub
and
cmp
sbb
pop
call
fsubr
sti
add
add
add
roll
mov
clc
jne
mov
loopne
loopne
lods
int3
inc
mov
add
sub
shrb
add
call
add
dec
insl
in
lea
inc
inc
sub
orl
and
rorl
or
mov
stos
adc
inc
add
jne
mov
cmp
sub
sar
ljmp
sub
mov
mov
and
jne
sub
sbb
dec
push
add
ret
mov
leave
sub
ret
pop
push
rolb
addl
jb
ret
in
jecxz
push
xchg
jne
cmp
jne
mov
rorl
mov
pop
nop
mov
les
add
inc
mov
mov
cmp
or
inc
inc
xor
insb
cld
add
add
add
sbb
dec
je
mov
add
and
jae
mov
incl
push
shr
in
push
add
add
inc
mov
add
push
cmovne
xor
push
pop
xor
add
sub
aad
inc
add
add
xlat
insb
inc
inc
and
dec
add
inc
fnstcw
leave
add
lea
ret
mov
xor
mov
sbb
stc
mov
les
mov
add
add
or
mov
add
add
push
movb
or
dec
lea
or
movsl
fiadds
jae
or
loope
inc
xor
pop
inc
shr
inc
and
inc
add
add
out
clc
inc
ret
inc
mov
leave
sub
add
add
sbb
stc
test
lea
mov
dec
int3
mov
movb
dec
ljmp
or
jge
shl
xor
add
rdpmc
sbb
mov
in
cmovne
jecxz
inc
mov
sbb
mov
add
loopne
inc
dec
and
inc
mov
leave
movl
inc
add
inc
xlat
sbb
xor
dec
mov
mov
fadd
inc
rcl
inc
push
movb
xor
lea
inc
jae
ficomps
addb
test
incl
inc
add
mov
cld
mov
mov
pop
sar
cmp
jne
mov
loopne
pushf
jae
add
add
add
jmp
mov
pop
add
add
decl
mov
mov
data16
mov
add
add
data16
ljmp
pop
jle
inc
sbbb
test
jmp
push
jne
lea
movl
sar
mov
loopne
rol
ljmp
push
inc
inc
mov
cwtl
movl
add
add
call
incl
xor
jne
mov
ret
out
mov
push
xor
mov
mov
mov
lcall
and
push
mov
decl
mov
jp
mov
mov
jl
decl
mov
push
decl
orb
xor
call
test
mov
into
xchg
loop
xchg
lods
ret
in
inc
dec
in
xor
add
mov
mov
incl
jno
data16
add
mov
fmull
aam
call
push
mov
xor
add
subl
mov
add
pushl
push
lea
mov
sar
orl
fs
add
add
adc
add
test
inc
incl
dec
mov
mov
push
xor
push
inc
xorl
mov
push
inc
adcw
movl
clc
push
inc
data16
push
pushf
data16
dec
in
test
xor
in
add
decl
mov
lea
push
push
test
inc
inc
mov
push
shlb
test
cs
incl
data16
test
incl
incl
mov
lcall
leavew
xchg
inc
pushl
call
lea
mov
enter
mov
xor
sbb
sbb
dec
mov
mov
movl
mov
mov
sar
sub
mov
add
inc
mov
or
addb
xor
pushf
js
add
mov
inc
xor
lcall
cmp
movl
lcall
dec
inc
mov
mov
mov
nop
ret
add
jne
test
jne
decl
call
sbb
stos
mov
mov
inc
cmp
push
cwtl
inc
add
lcall
test
mov
adcb
add
add
movl
mov
inc
add
cmp
incl
inc
push
xor
add
mov
and
incl
lea
pushf
or
jmp
decl
mov
loopne
movl
sbb
out
mov
push
push
test
mov
cwtl
inc
add
movl
add
add
pushl
or
rorb
cld
sbb
inc
mov
movsb
add
push
movb
jmp
mov
clc
mov
incl
mov
cmp
push
add
xor
add
mov
mov
mov
hlt
movsb
add
add
mov
dec
inc
mov
add
add
add
mov
mov
push
decl
decl
xor
add
push
xchg
inc
incl
jnp
mov
pusha
add
test
decl
ret
add
mov
cli
incl
test
add
or
cmp
add
sub
mov
mov
add
inc
dec
mov
add
mov
inc
push
push
mov
mov
adcl
add
push
add
push
test
decl
mov
sbb
incl
movl
add
add
mov
push
push
test
decl
inc
push
xor
and
call
test
incl
decl
inc
decl
arpl
int
xor
mov
cwtl
pushf
add
mov
mov
incl
adc
addb
adc
push
inc
add
mov
mov
push
adc
mov
mov
addl
incl
inc
cmpsl
mov
add
mov
cmp
movsb
mov
sbb
addb
hlt
add
mov
hlt
pop
inc
xor
pushl
mov
pushl
mov
sub
add
mov
mov
ret
mov
ret
mov
add
mov
sub
sar
test
inc
add
testb
push
add
add
add
add
add
mov
mov
sbb
jne
mov
xorb
add
cld
add
mov
cld
add
lret
add
sbb
dec
or
dec
sbb
inc
dec
mov
sbb
nop
scas
add
add
mov
add
mov
cmp
xor
gs
je
push
sarb
mov
push
cmp
add
dec
mov
in
adc
pop
inc
leave
or
gs
add
into
in
enter
push
xorl
or
jnp
test
add
mov
ltr
decl
clc
out
add
cmp
jge
jb
je
pop
push
mov
in
roll
orl
cmpl
hlt
mov
push
jns
lock
ror
test
dec
rcpps
mov
inc
test
je
mov
adcl
and
jp
rcpps
add
sbb
add
je
cmp
js
add
jns
vmread
add
adc
jge
mov
add
or
push
push
mov
add
pop
add
mov
inc
pop
xorl
add
push
clc
mov
jp
add
divl
test
je
mov
or
decb
jbe
mov
add
cmp
add
je
mov
mov
hlt
orb
jb
jmp
xor
pop
pop
pop
ret
ret
mov
xorl
cld
cmp
xor
cld
or
ret
mov
pop
dec
jne
xor
inc
dec
jbe
inc
pop
add
push
dec
push
mov
and
jo
mov
sbb
mov
nop
or
jne
cmp
cld
xor
add
cmp
js
jae
xor
jmp
mov
fdecstp
test
add
add
mov
cmp
adc
jge
mov
jl
clc
dec
jge
mov
jb
mov
mov
xor
add
mov
inc
pop
jge
cmp
mov
imul
fimuls
fists
in
jne
mov
imul
fdivrp
filds
test
inc
mov
mov
adc
rcll
mov
fiadds
mov
mov
xor
mov
xlat
into
ffreep
lret
iret
dec
inc
mov
fmull
dec
jnp
add
mov
inc
dec
lea
add
jb
add
inc
imul
cld
clc
mov
incl
or
sbb
lret
add
dec
add
enter
inc
pop
decl
add
add
mov
xor
or
pop
cltd
push
clc
mov
xor
add
cmp
hlt
cmp
or
mov
loopne
mov
cld
pushf
pop
popf
mov
lock
adc
orb
xor
dec
mov
iret
inc
jne
mov
cmp
je
add
or
dec
inc
mov
cld
add
cmp
mov
or
mov
test
pushf
call
jne
mov
fcomps
add
incl
cld
add
mov
cld
inc
fidivrs
fbstp
mov
adc
fadd
add
mov
inc
mov
loopne
sbb
sbb
pushf
add
mov
cwtl
inc
inc
jne
mov
clc
add
mov
or
inc
lea
add
inc
rorl
add
shufps
jmp
xor
hlt
mov
fadds
xor
add
cmp
pmuludq
jmp
mov
or
inc
mov
jne
mov
clc
add
xor
jne
pushl
add
mov
cld
add
xor
lea
adc
sub
lea
add
jb
add
inc
add
inc
mov
or
mov
in
scas
inc
mov
in
add
mov
dec
mov
mov
cld
push
dec
add
mov
in
cmp
mov
mov
mov
xor
cmpl
xor
jmp
add
xor
add
cmp
mov
mov
adc
jmp
mov
cld
mov
push
jne
dec
or
push
inc
in
add
or
dec
cld
mov
xorl
pushf
decl
mov
mov
xor
mov
inc
mov
mov
call
add
mov
or
jo
push
xor
pmulhuw
test
mov
mov
xor
xor
xor
add
inc
mov
movl
sub
lock
mov
mov
or
ja
mov
cld
cli
mov
cmp
bswap
mov
mov
clc
repnz
push
xor
xor
pop
jmp
mov
xor
lea
xor
neg
insl
test
clc
pop
inc
or
xor
add
jne
mov
in
push
xor
add
cmp
add
mov
mov
add
mov
mov
popf
pushf
xor
jne
mov
icebp
icebp
shl
mov
pusha
jne
mov
in
jmp
add
mov
or
inc
jne
mov
ret
or
jge
sub
xor
add
mov
clc
negl
xor
cmp
repz
xor
add
mov
mov
cld
lock
test
clc
add
fdivrp
test
jnp
add
jae
sub
shll
leave
call
in
in
add
mov
in
test
mov
xor
pushf
jnp
xor
push
loopne
jne
mov
add
xor
mov
cld
jb
add
jne
mov
jge
mov
lock
xor
mov
lock
jge
xor
dec
mov
loopne
jge
add
cmc
add
dec
hlt
xor
mov
in
jge
mov
dec
xor
inc
hlt
xor
add
icebp
add
mov
cmp
test
fistps
inc
mov
add
inc
test
add
add
ret
jnp
inc
inc
xor
add
xor
add
mov
cmp
setge
mov
call
or
inc
mov
and
lock
movl
mov
clc
xor
mov
inc
mov
mov
mov
mov
hlt
inc
rorl
mov
push
mov
in
jne
mov
addl
clc
mov
clc
add
rolw
mov
jne
incl
inc
push
test
sub
add
and
add
mov
and
inc
adc
inc
inc
push
push
jne
push
enterw
mov
add
add
str
lea
sbb
dec
cmp
inc
push
mov
push
add
mov
inc
add
xor
add
mov
loopne
dec
mov
cld
push
xchg
add
add
or
dec
loopne
xchg
push
add
dec
jmp
mov
sbb
inc
xor
add
push
divl
and
add
jno
incl
inc
push
push
mov
mov
push
inc
enter
push
call
pop
push
mov
mov
push
jo
incl
or
call
fmull
mov
mov
adc
dec
xor
mov
mov
mov
push
lret
movb
inc
movntps
lret
into
dec
lret
mov
mov
fdivl
mov
push
mov
sbb
dec
sarl
push
jne
mov
lea
call
sbb
add
push
mov
push
mov
test
xadd
pop
add
mov
or
push
add
add
and
call
add
mov
add
xor
add
inc
je
push
push
dec
mov
or
inc
add
data16
subl
add
add
enter
int3
loopne
rolb
lea
data16
add
sbb
inc
inc
lldt
xor
sub
mov
or
ror
dec
inc
cmp
cld
or
lret
lret
dec
mov
in
and
or
in
xchg
add
add
push
inc
xor
add
push
push
inc
jmp
push
inc
sbb
rorb
addb
ljmp
xor
mov
fmuls
add
lea
add
popl
add
push
incw
mov
add
xor
test
inc
mov
add
or
or
inc
mov
jne
mov
add
add
adc
adc
push
mov
mov
inc
mov
or
push
jne
call
inc
shlb
add
add
and
fs
inc
test
leave
scas
inc
add
orb
call
shr
xchg
add
add
dec
and
push
decl
mov
mov
lea
mov
add
mov
push
shlb
inc
in
jno
push
mov
mov
je
mov
sbb
popl
add
add
adc
jmp
sub
jne
mov
in
popl
push
incl
adc
add
call
and
and
inc
test
sldt
xor
pushf
jmp
mov
or
inc
call
mov
loopne
inc
add
mov
add
add
cmp
test
sbbl
jne
call
leave
rcrb
add
add
add
inc
mov
fcom
add
lea
pushl
call
mov
fstps
push
pop
mov
addl
mov
xor
xor
pop
or
inc
push
in
or
movsl
xbegin
clc
adc
divb
or
test
add
add
adc
xchg
test
clc
data16
orl
rolb
mov
mov
push
add
push
jge
add
jne
mov
jmp
xor
pop
cvtdq2ps
ret
mov
xor
add
push
rdpmc
out
add
mov
ret
sbb
cmp
or
or
pop
inc
add
add
invd
jge
mov
cli
xor
mov
ret
mov
sub
inc
xor
inc
mov
hlt
test
mov
xor
dec
or
jne
mov
call
inc
mov
add
add
inc
mov
addl
inc
mov
lock
jge
mov
cli
xor
add
test
add
cmp
xadd
test
mov
xor
add
pop
loopne
inc
clc
xor
add
data16
mov
hlt
xor
add
data16
inc
cmp
ja
psubq
ltr
add
add
data16
mov
jge
data16
data16
mov
fdivl
data16
mov
mov
pop
or
clc
mov
lock
jge
invd
pop
add
cmp
data16
mov
pop
fbstp
test
add
add
jge
data16
pop
stc
bsf
mov
in
test
mov
call
inc
popf
add
mov
call
add
mov
jnp
mov
mov
call
mov
data16
xorl
fisttps
cld
jne
xor
mov
sti
repnz
data16
push
xor
mov
popf
data16
mov
mov
fisttps
or
mov
hlt
mov
add
dec
or
mov
or
mov
fdivrl
xor
pop
lock
lea
icebp
jb
add
jge
mov
fsubr
pop
mov
in
rcrl
jb
add
jge
mov
in
pop
data16
cmp
mov
fdivrl
cmp
mov
mov
lock
mov
pushf
idivl
cmp
je
push
loopne
dec
mov
int
mov
movlhps
add
jmp
mov
lock
rorl
or
jb
add
loopne
jne
data16
mov
inc
icebp
add
add
mov
mov
enter
pop
jne
mov
pushf
mov
sub
cmp
jne
xor
in
xor
movl
clc
add
ret
decl
ss
dec
push
jle
popa
data16
into
arpl
add
mov
push
cld
add
inc
pushf
add
into
ret
pop
push
mov
jne
lea
mov
sarl
test
mov
push
xorb
mov
xor
cmp
pop
mov
je
xor
mov
cmp
pop
cmp
jne
mov
cld
push
pop
inc
stc
xor
pushf
clc
mov
test
cmp
fs
or
push
mov
push
push
lret
xor
pushf
mov
mov
dec
mov
push
add
xor
cmp
je
mov
push
lea
push
cmp
mov
add
sub
add
mov
jne
mov
xor
mov
push
cmp
jne
sbbl
clc
dec
pop
sti
add
cld
xor
mov
roll
mov
inc
in
add
mov
mov
push
mov
test
xor
sub
inc
sub
mov
inc
add
or
cmp
mov
cmp
je
push
dec
str
cmp
int
mov
mov
add
data16
push
add
jne
movl
clc
xlat
inc
mov
push
pushf
in
add
push
push
add
add
add
lret
lock
inc
lret
xor
pushf
jge
xor
pushf
test
je
xor
rorb
push
add
jb
add
dec
mov
push
push
adcl
xor
mov
scas
mov
in
cld
add
mov
dec
or
ret
lock
mov
or
mov
xorl
mov
adc
iret
inc
movl
incb
mov
adc
dec
fisttps
add
ret
lea
add
xor
add
inc
test
xor
push
popf
push
xor
inc
cmp
or
inc
test
xor
in
hlt
push
push
push
push
mov
popf
popf
xor
mov
or
mov
clc
jb
add
orl
addl
mov
or
inc
dec
mov
orw
xor
mov
mov
mov
mov
inc
dec
add
add
mov
clc
or
mov
clc
popf
incl
ret
adc
mov
hlt
test
clc
or
xor
pushf
jb
add
inc
daa
inc
inc
xor
dec
popf
add
clc
cmp
or
add
xor
or
lea
add
mov
cld
dec
push
sub
add
or
add
or
add
mov
inc
mov
cmp
xbegin
clc
or
xor
adc
lea
add
inc
add
add
je
push
or
dec
std
mov
mov
mov
or
inc
clc
mov
hlt
call
push
or
push
xor
mov
xor
mov
or
add
inc
mov
or
inc
push
jmp
mov
mov
jne
jmp
mov
clc
lret
push
mov
mov
sub
decl
or
pop
ds
pushl
mov
mov
jmp
leave
jne
call
in
dec
add
add
inc
cmp
or
add
or
adc
enter
rolb
mov
or
rorb
jmp
push
mov
cld
inc
inc
orl
push
push
mov
add
test
add
mov
mov
lock
fcoms
mov
push
enter
cmp
add
mov
call
cmp
jmp
push
call
mov
cld
or
call
add
xor
jne
cmp
jne
mov
or
pop
into
je
mov
or
mov
mov
mov
or
sar
xor
xor
pop
adc
ret
cld
inc
mov
cld
mov
push
pop
or
xorps
test
add
adc
addl
jmp
ror
inc
leave
xor
and
add
xor
xorl
mov
pcmpgtw
add
leave
mov
push
dec
mov
lea
xor
sysret
dec
rorb
pushw
jne
ud0
mov
iret
and
cli
inc
cmp
add
inc
pop
lea
mov
add
mov
mov
add
inc
data16
clc
int3
cmp
je
push
pop
xchg
data16
lea
jb
jmp
call
clc
xchg
mov
or
lea
push
inc
jge
mov
fdivs
incl
xor
xchg
ret
xor
cmp
data16
rolb
add
dec
xchg
push
jmp
push
add
add
mov
clc
dec
xchg
cmp
jne
xor
jmp
add
jne
call
clc
xchg
sti
add
add
xor
pop
mov
jmp
mov
cmp
cmp
lea
jle
jae
mov
lcall
inc
push
lea
mov
int3
push
xchg
add
add
inc
add
cld
mov
aam
xchg
mov
testb
mov
hlt
add
mov
decl
incl
mov
call
je
js
lock
mov
mov
sbb
clc
add
mov
rorb
dec
xchg
mov
in
jge
cmp
clc
pop
fistl
clc
add
mov
mov
mov
adc
add
adc
pop
sbbl
ret
cmp
mov
add
add
sub
or
add
mov
push
push
clc
addl
out
add
jmp
cmp
jmp
je
mov
inc
add
add
add
pop
pop
push
inc
in
pop
in
cmp
xor
leave
call
in
in
dec
push
test
add
leave
inc
test
add
add
dec
push
mov
hlt
push
dec
leave
mov
clc
cmovge
mov
clc
popl
push
add
push
xor
cld
push
inc
add
pushfw
add
add
int
mov
add
cmp
jne
xor
jmp
add
mov
or
mov
mov
mov
or
shl
icebp
addb
or
or
stc
shll
xor
inc
xchg
add
add
mov
test
sub
jmp
mov
lock
lea
mov
or
leave
add
dec
dec
test
paddb
add
dec
mov
mov
or
dec
xor
mov
adc
mov
call
mov
push
clc
or
push
lret
mov
mov
xor
cmp
lsl
call
or
dec
or
inc
xor
in
add
inc
pop
xor
testl
dec
adc
inc
xor
jne
mov
mov
movl
clc
dec
push
ss
pop
aad
xlat
orb
mov
push
clc
ret
xor
xor
js
dec
push
mov
lock
lret
jne
mov
enter
lret
into
out
dec
dec
jmp
xor
xor
mov
sub
add
or
dec
mov
xor
jb
add
dec
pop
mov
cld
mov
call
stc
add
pop
leave
add
in
mov
xor
movl
mov
xor
pushf
inc
cmp
clc
mov
ljmp
push
push
push
push
push
xor
mov
add
mov
clc
lret
cmp
clc
cld
jne
xor
xor
or
add
hlt
dec
dec
je
xor
xor
add
add
rol
mov
in
inc
enter
icebp
mov
clc
lock
enter
lret
inc
jne
mov
cld
dec
enter
popf
sti
xor
mov
mov
xor
xor
mov
mov
push
shr
in
cmp
add
pushf
mov
call
xor
dec
inc
mov
pushf
into
mov
in
call
pop
or
or
or
push
inc
cmpxchg8b
leave
loopne
test
mov
aad
xlat
xor
add
and
mov
leave
sti
inc
decl
mov
clc
dec
iret
xor
jb
add
inc
mov
xabort
loopne
ljmp
mov
clc
lock
dec
mov
loopne
incl
mov
hlt
jne
mov
in
dec
or
jb
add
xor
add
mov
mov
sbb
nop
mov
addl
mov
jne
mov
pushf
push
mov
xor
add
lret
add
rorl
mov
mov
mov
fimuls
mov
xor
mov
or
dec
add
or
out
loopne
jmp
lret
xor
je
mov
mov
sbb
mov
fmuls
mov
mov
mov
sbb
sbb
add
movl
leave
mov
push
mov
add
mov
or
mov
or
inc
add
in
add
mov
adc
xor
adc
inc
popf
mov
push
add
cmp
pushf
mov
dec
fwait
dec
jmp
or
sbb
or
dec
lret
dec
rcl
lret
inc
or
sar
lahf
inc
mov
inc
or
iret
add
mov
adc
inc
add
add
dec
mov
mov
ret
inc
add
push
or
test
test
clc
pushf
inc
mov
lock
inc
mov
test
mov
mov
sbb
scas
dec
mov
xor
jb
add
add
add
mov
or
mov
adc
inc
mov
or
inc
inc
cmp
hlt
inc
jne
mov
inc
bound
clc
push
inc
inc
cmp
cmp
dec
mov
push
idivl
or
inc
inc
add
push
loopne
mov
or
xbegin
mov
or
mov
hlt
inc
inc
mov
xor
add
adc
inc
clc
xor
add
or
dec
test
clc
jb
mov
clc
pushf
inc
mov
xor
shr
add
hlt
mov
push
xor
test
clc
mov
mov
clc
mov
xor
mov
hlt
shlb
clc
fmull
mov
in
icebp
dec
decl
loopne
test
clc
dec
inc
mov
in
dec
push
xor
push
mov
push
mov
clc
cmp
inc
test
add
add
jne
lea
cmc
adc
inc
inc
xor
jb
add
inc
rorl
xor
mov
adc
mov
ret
push
push
lea
cli
add
or
mov
xor
mov
add
jne
lea
lods
psubsb
cmc
lret
inc
xor
add
inc
inc
mov
xor
test
clc
dec
inc
xor
setl
lret
int3
rorl
add
add
lea
lea
mov
xor
bswap
rorb
roll
add
xor
pushf
inc
jnp
mov
lock
lret
xor
mov
loopne
test
xor
mov
mov
mov
ret
add
dec
adc
add
inc
rcll
mov
xor
jb
add
mov
or
add
cmp
jne
mov
mov
xor
mov
mov
mov
xor
jb
add
add
mov
xor
mov
or
xor
mov
mov
xor
jb
add
enter
add
add
inc
mov
mov
add
dec
mov
add
cmp
add
mov
call
xor
mov
in
rorl
iret
mov
xor
add
enter
inc
mov
or
or
mov
cmp
add
roll
mov
or
xor
mov
mov
xor
mov
xor
mov
in
or
mov
xor
inc
or
iret
add
cmp
jge
mov
in
add
mov
mov
clc
test
std
iret
decl
xor
mov
in
enter
inc
mov
or
jmp
push
decl
xor
push
jne
mov
in
add
dec
test
dec
add
cmp
or
mov
dec
push
lea
xchg
mov
call
inc
mov
or
mov
iret
movsb
mov
push
xor
cmp
jne
lea
lods
dec
call
cmp
cmp
decl
add
fadds
mov
lock
inc
test
xor
add
sbb
xor
rdpmc
testl
or
mov
rolb
iret
cmp
cmp
xor
decl
mov
add
mov
jmp
orl
pop
inc
pop
mov
loopne
mov
push
rorl
push
add
inc
push
popf
dec
xor
add
adc
adcb
add
or
fadds
call
cmp
dec
mov
ret
mov
adc
add
add
mov
movsb
push
inc
add
adc
xor
add
add
mov
incl
mov
push
inc
decl
call
mov
mov
xor
lea
adc
add
dec
xorb
add
pcmpeqw
mov
pop
push
leave
or
xor
in
adcl
xor
push
dec
in
or
inc
inc
mov
push
and
mov
jb
add
inc
mov
or
jl
sbb
dec
xorb
add
xor
mov
add
dec
dec
adc
push
sbb
inc
push
decl
mov
or
mov
test
jge
xor
pushf
or
push
or
inc
or
jb
call
mov
mov
adc
and
lea
or
ret
je
sbb
mov
mov
je
pop
and
push
and
and
incb
and
pop
adc
in
ret
mov
pushf
incb
jge
mov
cmp
adc
push
decl
adc
mov
into
scas
mov
das
inc
jne
and
and
lea
jb
xor
adc
xor
jne
sbb
.byte
inc
pop
pop
