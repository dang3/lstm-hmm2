push
mov
sub
mov
mov
inc
mov
sbbl
sub
push
mov
movl
mov
sbb
mov
orl
orl
mov
and
mov
mov
cmpl
mov
mov
jmp
mov
jge
push
pushl
pushl
pushl
call
mov
mov
add
adc
movzwl
sub
dec
or
xor
mov
add
adc
mov
cmpl
mov
movl
jmp
movl
jle
push
call
xor
sub
and
movl
movl
mov
add
add
add
mov
add
mov
adcl
sub
mov
sbb
xorl
mov
orl
andl
orl
jmp
loop
jns
cmp
lcall
popf
rep
adc
adc
int
adc
addb
lea
push
repz
lods
or
lea
ret
pop
rorb
mov
hlt
test
popf
fldcw
push
rorb
scas
inc
sbb
scas
ror
arpl
icebp
dec
js
mov
adc
js
dec
cmp
mov
jns
pop
lahf
or
inc
les
call
sub
movsb
fsts
pop
mov
fidivrs
xor
inc
dec
xchg
in
xor
mov
shlb
stos
iret
mov
cltd
cmp
mov
lock
mov
xchg
dec
pop
movsl
pop
xlat
push
testl
inc
cs
imul
fsubs
fdiv
out
call
ljmp
cmp
iret
lret
push
sub
inc
pop
xor
ret
in
mov
sbb
add
fcomip
mull
test
out
mov
in
mov
cli
add
cmp
or
faddp
jge
mov
adc
cmpsb
imul
cs
enter
push
mov
jns
in
es
fnop
dec
add
sub
push
andl
jae
adc
les
mov
mov
dec
stos
sub
jno
sbb
push
test
push
fwait
jp
and
jns
daa
fisubs
push
shll
je
mov
int
aas
pop
add
call
dec
xor
xorb
sbb
notl
ja
movsl
jno
out
sub
ret
cltd
mov
mov
aad
add
jp
inc
andb
shrb
in
xchg
add
and
push
shll
in
shrb
xchg
or
pop
jo
mov
inc
pop
es
sbb
or
xchg
sub
or
test
sahf
repnz
xor
mov
orl
add
fisubs
dec
adc
imul
sub
ds
jns
fstps
ret
or
and
push
cmpsb
push
inc
sbb
ja
sbb
sbb
in
inc
dec
xor
jo
sub
push
push
aaa
mov
pushf
leave
aaa
add
xor
adc
ja
pop
lret
mov
in
cmp
daa
inc
and
sbb
jle
lock
fisubrs
sti
inc
mov
mov
pop
shlb
pusha
pushf
div
inc
sahf
movsl
jae
xchg
or
push
xor
sbb
sbb
in
loope
jnp
jo
cltd
jo
push
negl
sub
bnd
ljmp
clc
push
xlat
xor
sub
lahf
test
cmc
aaa
icebp
lret
frstor
imul
push
hlt
pop
arpl
cmpsb
sbb
and
pop
inc
sub
or
ret
rcr
fisubs
mov
adcl
fcompl
cmp
mov
adc
sbb
sbb
adc
inc
pusha
jl
mov
fistpll
jno
xchg
sbb
jg
fld
inc
jo
add
enter
add
push
aas
rorl
scas
daa
inc
and
std
aaa
fxch
mov
cmp
adc
std
jge
lds
dec
xor
sub
adc
or
cmp
ss
jne
or
sbb
rcrl
sub
hlt
cmpl
mov
mov
movl
mov
jmp
mov
mov
jne
pushl
push
push
call
and
adcl
andl
xor
or
mov
movzwl
and
mov
and
mov
add
movzbl
or
mov
cmpl
movl
mov
movl
mov
jmp
movl
mov
jb
pushl
call
movzbl
adc
and
sbb
movzbl
xor
mov
or
sbbl
mov
cmpl
movl
movl
jmp
mov
mov
jg
push
push
pushl
pushl
call
sbb
dec
xor
sub
or
mov
sub
mov
add
shrd
shr
and
mov
mov
sub
mov
subl
xor
orl
xor
movl
or
xor
jmp
ljmp
cltd
daa
mov
push
iret
cwtl
lods
int
adc
int
adc
jg
sti
xor
sub
ret
lret
jg
std
cmp
and
cmp
or
sbb
stc
mov
and
ret
jg
call
dec
or
and
add
test
cltd
dec
ljmp
in
movsb
push
sbbl
xor
cmpsb
dec
pop
mov
xchg
repnz
ds
add
fcomps
js
mov
sbb
or
mov
mov
movsl
jo
inc
jge
roll
cli
xchg
jecxz
xor
clc
mov
aad
cwtl
add
cmp
out
gs
pop
cmp
sbb
stos
sub
adc
xor
cmpsl
dec
xchg
aas
sbb
add
std
popf
in
adc
loop
repz
jmp
mov
or
cmp
xchg
iret
mov
or
push
bound
pop
dec
lret
push
sub
clc
out
insb
push
xchg
jmp
push
loope
xchg
xchg
mov
sub
sbb
xchg
jnp
movsl
shlb
mov
repnz
outsb
out
adc
adc
push
sbb
adc
mov
movsl
dec
mov
mov
fcmove
shll
aad
jbe
pop
xchg
imulb
pop
mov
or
add
adc
xchg
or
pop
and
push
mov
xchg
cs
gs
aam
inc
test
jns
jns
arpl
clc
flds
jmp
stos
out
mov
cld
jl
mov
mov
cld
leave
xchg
sahf
xor
inc
sub
test
sub
insl
sub
sahf
daa
call
mov
andb
mov
scas
pop
mov
mov
sbb
icebp
aam
imul
mov
orl
jnp
xor
sub
das
fnstenv
mov
mov
adc
pusha
mov
popa
jb
or
xchg
jle
int3
outsl
decb
add
mov
call
mov
xchg
jl
lret
enter
mov
ja
ja
lods
push
push
enter
fbstp
or
cmp
out
sbb
push
jl
sub
out
andl
add
arpl
jb
mov
mov
and
dec
jae
xchg
mov
xorl
or
xchg
jno
sbb
push
loop
dec
pop
out
lds
jp
inc
rcll
xchg
mov
cli
push
int
inc
shll
xchg
jnp
jecxz
int3
les
repnz
mov
fidivrs
adc
mov
mov
and
sub
add
fnstsw
pop
sbb
xchg
inc
pop
pushf
xchg
pop
ret
dec
mull
ja
jp
repnz
add
mov
jne
mov
pop
or
push
jmp
xor
xchg
xor
mov
por
cmp
mov
sub
pop
stos
outsb
test
cmp
stos
aaa
rcl
jecxz
add
mov
mov
sahf
aas
mov
jle
lret
out
xchg
add
addb
jns
mov
xorl
pop
dec
shll
scas
sbb
cld
sti
mov
push
mov
arpl
adc
cmpsb
push
add
icebp
fnstsw
add
add
mov
push
les
add
notl
movl
movl
movl
jmp
mov
jle
pushl
push
pushl
pushl
push
call
sbb
addl
add
xorl
add
movl
sbbl
movl
sub
movl
xor
xor
and
movl
sub
movl
sub
movl
sbb
movl
sub
movl
cmpl
movl
movl
jmp
movl
mov
jb
pushl
pushl
push
pushl
push
call
andl
notl
andl
orl
addl
sbbl
movl
sbbl
movl
xorl
movl
xor
movl
movl
cmpl
movl
movl
movl
jmp
mov
jbe
push
push
push
push
call
subl
adcl
movl
adcl
sbbl
adcl
movl
sub
movl
movl
adcl
movl
negl
movl
cmpl
movl
movl
jmp
movl
jbe
push
pushl
pushl
call
adc
addl
orl
sbbl
notl
adcl
xor
movl
movzbl
xor
movl
cmpl
movl
mov
mov
jmp
mov
je
push
push
push
push
call
xorl
negl
xorl
subl
andl
adc
sbb
movl
inc
movl
mov
xor
mov
xorl
shl
mov
or
mov
mov
subl
push
xorl
push
adcl
push
subl
push
adcl
call
and
mov
sbb
mov
adc
xor
xor
or
add
mov
mov
xor
sub
mov
adcl
jmp
into
mov
and
pop
js
stos
orb
adc
adc
adc
leave
bound
movsb
lahf
pop
int3
ljmp
ss
sub
rolb
pop
mov
mov
loopne
sub
pusha
and
test
adcb
and
loopne
sbb
scas
push
outsb
dec
fadds
and
loope
and
outsl
mov
xor
pop
adc
or
push
popa
fistpl
lret
inc
popf
cmpsl
sub
push
xchg
xor
sub
lea
jecxz
mov
data16
mov
imul
xor
cmpl
pop
loop
push
out
sbb
adc
jg
and
sti
call
ret
ja
dec
fsubl
mov
or
inc
mov
or
mov
pop
mov
out
pop
imul
pop
mov
loop
in
mov
dec
jp
xchg
imul
push
sub
or
cmp
loopne
dec
roll
shll
and
pop
clc
daa
inc
lods
xchg
push
pusha
jmp
stos
push
jl
xchg
cmp
sub
xor
ds
pop
adc
outsl
test
mov
dec
push
push
pop
inc
adc
adc
xchg
movsb
jge
dec
into
ljmp
add
hlt
mov
dec
inc
test
sbb
mov
aam
dec
ficompl
mov
adc
and
div
cmp
jne
pop
aaa
sub
cmp
jmp
mov
imul
ljmp
or
dec
test
jmp
gs
add
lods
orl
sbb
xchg
and
incb
aad
fstl
popa
sub
test
leave
scas
pop
push
fadds
sarb
cwtl
push
sub
xor
mov
inc
ds
test
adc
push
cmp
hlt
push
dec
aas
shrl
adc
xchg
jnp
mov
mov
inc
mov
lcall
icebp
and
rcl
test
cli
mov
stos
sbb
enter
pop
mov
stos
sub
inc
add
notb
lods
cmpsl
jmp
int
stc
test
out
int3
add
pop
ja
rcr
xchg
pop
insl
add
xlat
mov
xor
adc
dec
rep
mov
xlat
lea
push
xchg
mov
sbb
vmovddup
movsb
xchg
xchg
lock
mov
push
mov
rorb
mov
ret
call
pop
inc
ja
inc
pop
xor
imul
push
mov
xlat
dec
sub
rclb
test
mov
aam
xchg
push
fcompl
xchg
jns
pushf
repnz
jae
lcall
outsb
cmp
add
adc
and
and
movsb
add
push
lods
sub
xchg
call
xchg
mov
xorb
ja
nop
pop
adc
jnp
push
cltd
inc
test
js
jae
ret
mov
addr16
mov
push
xchg
call
dec
add
adc
repnz
gs
lock
icebp
in
stos
lock
je
addr16
lock
adc
ret
mov
sbb
adc
dec
loop
fsubs
pushl
ljmp
pop
cmp
jae
lea
mov
orl
mov
or
and
xor
mov
or
andl
xor
movl
cmp
jmp
xlat
test
push
xlat
popa
dec
lcall
cmp
adc
int
adc
idivl
sahf
loope
xchg
sbb
ret
jmp
jecxz
scas
push
jle
stos
sub
lods
jns
dec
add
xchg
cmp
es
xor
mov
mov
mov
add
mov
inc
out
pop
sub
sub
or
rcr
movsl
jle
out
cmp
sub
dec
mov
adc
call
push
xor
cmp
pop
jmp
movsl
int
sbb
aas
mov
and
mov
mov
jl
cmp
mov
aaa
jmp
jecxz
das
push
repnz
or
inc
adc
cmp
adcl
test
jp
dec
jmp
loope
xchg
movsl
pop
lock
or
ffreep
cld
xchg
dec
adc
push
mov
dec
lret
jb
fisttps
ja
cld
xlat
xchg
add
mov
or
xchg
imul
push
adc
stc
rclb
sub
fisubl
sti
sbb
fstl
fwait
and
lock
mov
jno
add
or
xchg
scas
in
int
adc
dec
ret
mov
push
loope
stc
add
adc
mov
jg
int
or
mov
or
xchg
dec
pop
push
mov
imul
mov
test
adc
je
pushf
inc
outsl
fidivrs
jg
sbb
sub
inc
add
cmp
push
repz
add
mov
ss
flds
fbld
js
shl
fistl
arpl
clc
lcall
jne
cmp
mov
pop
mov
jecxz
jp
sti
loopne
adcb
gs
clc
in
shl
loopne
xchg
sub
sbb
jae
jbe
xchg
test
push
decb
xchg
das
and
aam
mov
cli
cmc
jle
rclb
ficomps
mov
fisubl
mov
mov
mov
or
mov
mov
divl
int
das
popw
push
dec
int
sahf
cmc
pop
les
loopne
jne
addl
xchg
test
hlt
xor
jno
sarl
jmp
inc
outsl
leave
ret
sbb
sbb
sbb
pop
fiaddl
xchg
cli
jecxz
sub
inc
jg
inc
sub
icebp
sbb
lret
or
jl
mov
shl
fadd
cmp
or
adc
mov
mov
into
pop
sub
mov
js
jp
iret
jle
inc
mov
push
movsb
cli
imul
test
dec
clc
rclb
xor
fsub
test
mov
into
or
loopne
mov
pop
inc
jle
sbb
outsl
and
cmp
je
cli
out
scas
addl
mov
shr
rcrb
cmp
out
xchg
outsb
or
push
int3
in
push
cld
data16
sbb
xchg
daa
xor
stc
jno
mov
in
mov
ret
fcoms
es
enter
mov
mov
jmp
dec
jnp
aas
filds
outsl
and
pop
xor
xchg
add
popf
adc
jo
and
lret
daa
pop
cmp
loopne
mov
xchg
jno
inc
call
icebp
outsl
lods
loope
dec
fscale
inc
lahf
cmp
shll
pop
sbb
test
pusha
add
add
mov
mov
cmpl
mov
movl
movzbl
jmp
movl
jae
push
push
call
sub
sbb
subl
sbbl
neg
adcl
xor
xor
xor
mov
subl
shrd
shr
add
mov
mov
andl
shl
xor
addl
xor
or
mov
mov
movl
cmp
jne
mov
cmpl
not
mov
movl
jmp
movl
movl
je
push
pushl
push
push
call
adc
xor
or
mov
adc
not
decl
xorl
sub
and
mov
sub
cmpl
mov
movzwl
mov
jmp
movl
movl
jle
pushl
pushl
call
sbb
adc
add
sbb
sbb
movl
mov
xor
mov
mov
sub
mov
shrd
xorl
jmp
lcall
add
js
xor
in
notl
adc
adc
adc
movsl
sbb
lods
test
fdivrs
in
dec
inc
mov
mov
mov
add
std
dec
fistpl
sbb
shlb
push
xor
jp
dec
loop
sub
out
sub
cli
mov
sub
jo
repz
inc
jno,pt
xchg
movsb
addb
stos
or
lcall
popf
ret
mov
add
icebp
mov
insb
jnp
push
bound
inc
stc
pop
dec
mov
clc
cmp
stc
push
xchg
and
cmpsb
xor
lret
mov
push
or
notl
mov
sub
pusha
das
cmp
sti
divb
pushf
adc
repz
and
test
lcall
js
jno
jle
aam
ljmp
jo
daa
addb
mov
or
lea
pop
in
sahf
jae
loopne
ficomps
jge
in
xchg
sti
jmp
aaa
xchg
mov
mov
dec
outsb
movsb
mov
adc
cmpsb
push
xchg
or
sbb
aam
fwait
repz
xor
popf
in
inc
add
sahf
mov
repz
std
popf
mov
pushf
nop
mov
call
jo
mov
jmp
jne
inc
jnp
icebp
jbe
jg
and
mov
scas
sbbb
shlb
adc
pop
xlat
and
aam
jnp
mov
ss
loopne
out
and
push
loop
in
fdivr
and
negl
mov
push
in
lret
xchg
test
shll
cmp
shrb
dec
or
lret
lret
mov
pop
clc
jmp
insb
jae
addr16
xchg
sahf
mov
add
xor
pushf
mov
lcall
xchg
rcrl
mov
xor
sbb
shlb
adc
loope
xor
rcl
out
or
mov
pushf
pop
shlb
dec
push
mov
push
cmpsl
int
test
add
add
jl
adc
push
dec
std
enter
aaa
pop
pop
inc
enter
jecxz
aaa
into
xchg
out
pushl
in
sub
xchg
jbe
cmc
mov
repnz
jb
fistpl
int3
inc
lea
mov
inc
fildl
xor
movsb
jbe
sub
push
aaa
jecxz
lret
push
add
fildl
xor
shll
shrl
push
jb
pop
loop
mov
hlt
jge
int
pop
sti
movsb
push
xchg
mov
pop
or
jo
pop
sbb
pushf
adc
bound
dec
inc
cmp
ljmp
lcall
inc
add
add
xchg
xchg
das
les
outsl
ret
or
mov
xor
and
and
push
fs
pusha
xchg
mov
pusha
repz
xchg
stos
in
sub
sub
cmp
mov
fcmovbe
mov
sub
rcrl
xor
jbe
mov
pop
mov
aas
mov
mov
xchg
add
xchg
or
xchg
fldcw
std
mov
popf
pop
in
repnz
sub
push
int3
xchg
test
add
fsubl
fcoml
xchg
leave
sar
call
or
xchg
mov
jbe
leave
jl
xorb
lods
add
mov
in
cmpl
mov
mov
jmp
movl
jle
pushl
pushl
call
sub
add
notl
sbb
xor
dec
sub
mov
xor
orl
shr
sbbl
mov
adcl
xor
andl
or
shl
cmpl
mov
mov
movl
jmp
movl
movl
je
pushl
pushl
call
notl
and
sub
and
not
xor
sub
mov
mov
cmpl
mov
movl
mov
jmp
mov
jle
push
pushl
pushl
call
sbbl
adcl
movzbl
sbb
mov
movzbl
and
mov
movzbl
sbb
mov
add
add
mov
mov
mov
shrd
or
shr
cmpl
movl
mov
movl
mov
jmp
mov
je
pushl
call
and
and
sub
or
mov
mov
or
sub
and
mov
mov
xor
shl
adcl
xor
or
xor
mov
mov
shrd
shr
mov
sbb
mov
cmpl
movl
movl
mov
jmp
movl
not
ja
pushl
push
call
mov
xor
or
sub
add
mov
sbb
inc
mov
mov
sub
add
or
mov
sbb
mov
xor
xor
or
andl
shl
lea
subl
mov
mov
andl
shrd
subl
shr
cmpl
mov
movzwl
mov
movl
jmp
mov
movl
jb
pushl
push
push
pushl
call
xorl
neg
or
movzbl
sbb
movzbl
xor
mov
xor
xor
sub
mov
mov
cmpl
mov
movl
mov
jmp
mov
je
pushl
call
movzwl
add
mov
add
movzbl
and
or
subl
neg
mov
cmpl
mov
movl
movl
jmp
mov
jge
pushl
call
sbb
xor
inc
mov
sub
mov
adc
adc
cmpl
movzbl
mov
jmp
mov
mov
jl
push
call
movzwl
and
movl
add
sbb
movzbl
sub
sub
xor
mov
xor
subl
or
orl
shl
xor
imul
mov
and
mov
mov
andl
shrd
andl
mov
mov
xorl
xor
shr
subl
mov
mov
sub
mov
xor
adcl
or
sbbl
shl
sub
mov
cmp
mov
mov
movl
jg
or
mov
sub
mov
movl
shrd
mov
xor
mov
sbbl
xor
movl
shl
xor
adcl
or
shr
or
mov
mov
adc
mov
mov
mov
addl
mov
sbbl
shrd
shr
adcl
mov
mov
movzbl
sbb
mov
addl
xor
xor
or
shl
addl
imul
andl
sub
movl
jmp
mov
adcl
mov
notl
shrd
mov
add
mov
addl
xor
movl
shl
xor
or
xorl
shr
xorl
mov
mov
mov
cmpl
mov
mov
not
jmp
movl
mov
jg
push
pushl
push
push
call
xor
xor
xor
sbb
addl
orl
neg
xorl
and
cmpl
movl
movl
jmp
movl
jle
pushl
call
xor
xor
mov
sbb
dec
not
mov
adc
cmpl
mov
mov
mov
jmp
movl
movl
jg
pushl
push
push
push
call
xor
add
or
mov
movzbl
and
notl
adc
or
adcl
sub
mov
shrd
shr
mov
mov
jmp
xchg
icebp
mov
icebp
out
loopne
cmp
sarb
adc
adc
leave
pop
loop
inc
mov
mov
lods
repnz
sub
int3
aad
push
iret
rcrl
sub
je
fisubs
xchg
pop
das
inc
push
lret
pop
mov
add
mov
sbb
xlat
jb
sub
mov
mov
inc
cltd
out
push
or
pop
or
arpl
pop
test
jle
icebp
sbb
imul
outsl
int3
sbb
xchg
push
jno
mov
adc
xchg
imul
dec
mov
lret
scas
pop
inc
out
xor
pop
dec
pop
push
aas
loopne
mov
add
inc
sbbb
cmc
nop
int3
jae
pop
je
test
outsb
fs
mov
or
pop
repz
mov
cli
adc
scas
test
jb
lret
sub
mov
insb
int
notl
add
cmpsb
inc
stc
lods
orb
in
aas
mov
pop
push
mov
push
xor
mov
and
shlb
shl
jg
dec
lods
xchg
clc
sbb
jb
mov
sub
cmpsb
adc
jne
jns
push
sub
adc
and
fwait
repnz
andb
shll
adc
xor
cltd
jge
test
sbb
jns
push
bound
fists
sti
test
pop
scas
cmp
subl
jb
adc
mov
test
pop
or
sub
lods
push
iret
pushf
push
jo
mov
or
mov
xchg
outsb
je
int
add
push
out
popl
xor
and
push
fwait
test
jns
pushf
push
inc
or
cli
int
test
shll
sbb
jns
outsb
or
jae
inc
imul
mov
adc
cli
mov
int
push
mov
shl
arpl
outsb
and
or
sbb
push
addr16
inc
lahf
out
stos
mov
ret
fucompp
jmp
xchg
dec
adc
inc
push
icebp
ror
xor
orl
cmp
jns
ljmp
subb
jo
cmp
into
xchg
mov
ljmp
incb
xor
lcall
and
inc
hlt
xchg
sarb
jp
lock
iret
xlat
jecxz
mov
mov
mov
fimuls
fists
mov
repz
sbb
inc
pushf
shr
mov
sbb
shl
fcompl
hlt
jp
mov
fnsave
fs
js
mov
or
cmp
add
ret
pop
push
aas
out
aad
inc
xchg
aam
cmp
sub
push
push
jmp
push
test
cmp
in
shl
mov
inc
fwait
test
pushf
lret
cwtl
movsb
mov
sub
stc
mov
arpl
sub
ss
addb
loopne
sbb
pop
fiaddl
jne
sbb
add
pop
scas
inc
mov
mov
and
clc
xor
or
xor
outsb
roll
xchg
leave
aaa
adc
jl
dec
call
push
dec
push
loope
jb
jp
cmp
jne
pop
in
jno
popw
cmpsb
movsl
sbb
jecxz
jmp
mov
mov
movsl
and
xor
dec
lret
test
lret
outsl
test
push
cwtl
dec
out
sbb
and
lods
jae
mov
xor
xor
or
shl
add
add
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
movl
mov
mov
movl
jmp
lret
lea
push
push
and
xor
jle
xor
int
adc
mov
mov
int
mov
pop
jns
xchg
xor
cmp
dec
addr16
int3
bound
shll
push
pop
cmpl
pop
pop
jns
mov
jp
push
sbbl
xchg
xor
clc
sbb
out
cmp
in
mov
xor
lret
or
in
mov
adc
mov
aam
xor
push
inc
sbb
lahf
ss
movsl
or
push
aaa
test
pop
fimuls
rolb
rcrb
mov
into
es
imul
outsb
inc
fsubr
push
or
sub
scas
arpl
out
addr16
fwait
push
data16
or
push
and
rorl
pop
mov
and
fsubrl
cmp
cwtl
cli
jl
ljmp
or
mov
jmp
push
cmpsl
cmpsb
cld
outsb
push
cmp
mov
movl
idivl
adc
pop
mov
hlt
and
fiadds
nop
pop
xchg
mov
aad
ret
out
jg
mov
adc
xchg
cs
subb
and
ret
xchg
cs
mov
xchg
loop
mov
push
test
mov
adc
xorb
fnstsw
jno
loope
clc
push
aas
ret
hlt
sbb
jae
ja
movsb
mov
test
or
xchg
add
mov
lcall
lea
pop
test
test
or
shl
cmp
mov
scas
insb
xlat
clc
push
mov
jae
mov
mov
testl
mov
clc
sub
mov
inc
lcall
mov
dec
arpl
and
jnp
xchg
rcrb
xchg
andl
dec
mov
push
testb
jo
loop
jg
xchg
xlat
adc
jo
mov
jae
cmpsl
lcall
push
xchg
mov
dec
aad
fstpl
xchg
jl
push
pop
std
xor
fs
dec
sarl
pop
in
fs
pop
fwait
add
mov
cmp
out
pop
bound
enter
jnp
stos
jo
outsl
icebp
dec
add
lret
inc
jb
mov
cld
adc
icebp
adc
scas
popf
xor
jg
incb
dec
shll
dec
or
dec
mov
pop
lret
add
mov
mov
xchg
clc
xor
cs
mov
sub
dec
xor
lock
jno
pop
cmpsl
pop
pop
in
fidivrs
mov
mov
adc
insb
mov
icebp
fs
adcl
sbb
hlt
adc
out
xor
cmp
adc
and
ret
sbb
roll
sbbl
test
pop
jp
icebp
out
xchg
cltd
dec
int
xchg
stc
xchg
aam
sub
or
pop
jge
inc
jae
mov
xor
fstpt
lds
sub
inc
es
adc
pusha
jb
jl
lock
nop
insl
jnp
incl
mov
fidivl
ljmp
loopne
push
mov
std
bound
add
sbb
lock
push
jecxz
xor
push
imul
leave
loope
insl
aaa
lret
push
cmp
jge
cmpsl
lret
sub
daa
out
or
mov
add
inc
in
inc
lock
imul
inc
mov
mov
mov
mov
shrd
shr
jmp
fsubrs
fldenv
idivb
fdivrl
int
adc
pop
les
ljmp
pushf
jmp
stos
pushw
mov
shl
in
and
xor
in
pop
dec
cmc
and
sub
andb
or
and
iret
cmp
cs
xor
ljmp
jg
mov
sub
sbb
sti
xchg
lret
or
fsubrs
fwait
divps
stc
int
xchg
es
repnz
mov
addr16
pop
inc
out
lret
repz
ss
int
lock
adc
aam
ljmp
sbb
pushf
and
test
call
pop
roll
xor
jo
adc
rcrb
in
fs
inc
lds
in
mov
jmp
imul
push
xchg
inc
sahf
sub
loopne
pusha
neg
cmp
or
mov
es
rolb
push
dec
adc
push
or
jl
outsb
cltd
into
pop
add
pop
mov
std
xchg
rcrb
aas
jge
ficoms
xchg
xor
jnp
dec
mov
lret
je
mov
addr16
cmpsb
scas
popl
sub
xlat
lds
push
jge
add
jecxz
imul
nop
xchg
rorl
mov
sbb
xchg
imul
mov
jecxz
repz
mov
pop
inc
inc
pop
mov
mov
aas
mov
ret
es
jns
cmp
xor
ljmp
adc
jmp
imull
inc
pop
pop
jg
adc
lock
daa
mov
push
test
dec
jo
dec
andps
mulb
sbb
pusha
add
lret
fstps
fisubrs
cmp
movsl
nop
cmp
xchg
fists
negl
pop
cmpl
adc
sbb
lret
lcall
push
cwtl
xor
sub
in
mov
xchg
pop
lods
sub
cmpsl
scas
imul
xchg
dec
movsb
jmp
or
mov
das
xor
fwait
aam
mov
popf
push
jmp
mov
sbb
loope
mov
outsl
mov
push
mov
jbe
cld
push
mov
or
insb
movb
rcll
sbb
sub
fmulp
dec
push
insb
sub
clc
into
xchg
cli
mov
cltd
fisubrs
fadds
jns
push
xor
in
cmp
push
push
fmul
mov
mov
fistpl
in
add
rcll
jne
xchg
xchg
push
arpl
icebp
jns
cwtl
bound
clc
mov
sub
mov
cltd
ficomps
dec
inc
mov
ja
fmull
lea
add
int3
pop
adc
imul
data16
xchg
dec
adc
fstps
adc
push
ds
add
dec
jo
add
mov
jo
and
sarl
xchg
mov
scas
ret
cmp
and
cmp
notb
sarl
and
aaa
and
dec
in
inc
mov
jbe
and
mov
and
push
mov
mov
lds
add
add
mov
ljmp
push
mov
fwait
in
inc
add
fs
lods
sbb
les
sti
push
xorl
adc
mov
rorb
shl
xor
or
lea
mov
mov
mov
shrd
shr
mov
mov
shl
mov
xor
xor
or
mov
mov
xor
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
lea
mov
mov
mov
shrd
jmp
orb
mov
movsl
add
int
adc
out
imul
cmc
js
cwtl
jmp
adc
imul
daa
sarb
and
clc
jg
roll
sub
fistps
lret
jb
cmp
xchg
sub
dec
lcall
lods
xlat
js
or
notl
jb
cwtl
and
sar
inc
sub
push
ret
push
hlt
stc
add
cmc
insl
adc
out
add
adc
xchg
nop
ds
fnstenv
jb
addr16
aad
cmc
popf
out
les
jbe
cmp
mov
xor
add
in
add
push
stos
push
lods
pop
jge
lretw
sub
cld
aaa
cmp
mov
cltd
sahf
inc
lret
movsl
sub
lret
test
scas
je
pop
sub
lahf
add
xchg
call
pop
stos
insb
pop
cmp
lret
inc
mov
or
fcoml
push
xor
mov
push
push
inc
add
jbe
jne
jge
adc
hlt
scas
push
sub
mov
fdivp
fcomps
push
ret
movsb
lret
ljmp
mov
jb
add
cmp
sub
adc
ljmp
je
aaa
in
adc
loopne
fs
lahf
andb
fsubrl
in
adc
loope
mov
or
aas
test
sub
ret
aam
comiss
mov
cmp
mov
xchg
dec
cmp
mov
dec
mull
popa
mov
jno
push
mov
mov
ljmp
cmp
lret
mov
mov
test
push
inc
or
jo
stos
mov
leave
add
mov
add
cmp
mov
ss
xchg
mov
and
aaa
dec
aas
test
test
test
push
xchg
push
mov
pop
lahf
sub
sbb
dec
adc
pusha
add
repz
jge
mov
jge
push
bound
in
adc
sub
js
push
mov
jne
mov
add
mov
enter
mov
je
sub
shll
sub
fiaddl
inc
inc
push
out
push
add
inc
and
sar
cmp
lods
push
jecxz
jb
mov
mov
xchg
mov
aam
add
ljmp
sub
cmp
jae
lret
inc
fcompl
mov
andb
mov
dec
and
test
xor
jne
mov
mov
out
lahf
mov
popa
mov
add
or
dec
shl
dec
adc
inc
pmaxsw
ret
or
outsl
iret
xchg
pop
roll
es
gs
in
fwait
lea
sub
cmc
mov
or
dec
mov
bound
sub
lods
mov
add
pop
jl
and
dec
js
test
js
mov
jecxz
adc
lods
xor
subl
mov
cmp
push
mov
lea
xchg
daa
int3
mov
fcmove
push
ljmp
xchg
mov
jnp
mov
pcmpeqb
and
lret
pop
cmp
je
cmp
adc
sbb
mov
sbb
or
sar
mov
pop
fdivs
iret
xchg
mov
loopne
mov
popa
dec
sub
dec
popf
xchg
jne
gs
jecxz
inc
jne
jmp
mov
shl
jmp
fmuls
sbb
mov
inc
stos
jge
adc
int
adc
push
push
dec
mov
add
adc
push
jno
pop
sbb
ret
sub
shr
xor
das
add
inc
int
mov
xchg
lods
mov
dec
cmp
fsubs
sarl
mov
mov
sbb
adc
inc
prefetchw
jnp
jp
or
pop
push
arpl
add
add
adc
push
icebp
xlat
add
bound
xchg
sti
jno
imul
inc
pop
or
jnp
pusha
je
les
ret
push
push
out
jle
sahf
int
leave
stos
repnz
or
in
sub
stc
mov
les
leave
jle
mov
adc
aaa
sub
adc
push
pop
push
pop
out
cli
sub
stos
sarb
dec
adc
mov
add
jge
sahf
mov
push
sub
jecxz
dec
insb
in
and
enter
cld
mov
stos
push
sub
fidivl
or
dec
clc
push
xchg
test
lcall
mov
or
fsubs
mov
mov
fs
sbb
xor
and
add
popf
lret
subl
sbb
inc
daa
sbbl
pop
pop
dec
or
jne
or
jae
mov
xlat
shll
cmp
out
int3
lock
gs
fistpll
push
pop
cmpsl
cmp
pop
pop
popf
enter
jecxz
jne
addr16
xchg
cmpsl
inc
xchg
sub
fisttps
sbb
push
out
mov
es
adc
sub
and
adc
dec
dec
xor
sbb
pop
push
jnp
cltd
iret
imul
inc
stos
sbb
jbe
aaa
and
jbe
test
call
iret
sbb
cmp
jae
sbb
sbb
out
loop
lds
add
xor
stos
es
mov
dec
and
mov
push
mov
mov
inc
pushf
cmp
icebp
subl
loopne
out
jae
pushl
cld
xchg
or
sbb
nop
test
in
out
jb
push
dec
add
mov
mov
in
pop
jl
jbe
xchg
hlt
in
mov
inc
cmpsb
imul
pushf
mov
into
mov
or
xor
fwait
jl
les
out
cmp
jle
push
sbb
out
inc
jp
mov
les
jnp
fcmovnbe
sahf
daa
popl
shrl
fwait
mov
xchg
ror
daa
fisubrl
ret
in
fisttps
fisubrl
fisttpll
xchg
sarl
push
cltd
loop
lret
xchg
pop
mov
xchg
lcall
aad
rcrb
nop
inc
dec
loop
rcl
pop
es
xchg
leave
push
add
adc
ljmp
test
shlb
addb
movsl
idivl
pop
adc
sbbl
inc
fwait
mov
xor
xchg
push
addr16
push
cmp
imulb
cmp
sub
mov
imul
jmp
int3
arpl
je
imul
mov
mov
addr16
out
push
in
inc
pop
int
cwtl
fcoms
pushf
cmc
adc
test
loope
mov
mov
jecxz
int
xorb
mov
xchg
in
xchg
jg
sahf
jae
test
mov
xor
xor
or
mov
mov
or
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
lea
mov
mov
mov
shrd
shr
mov
mov
xor
shl
mov
xor
or
mov
mov
add
mov
mov
shrd
shr
mov
mov
xor
xor
or
lea
mov
mov
shl
mov
shrd
shr
mov
mov
xor
xor
or
mov
shl
mov
mov
mov
or
mov
mov
shrd
jmp
dec
or
push
sub
loopne
lret
stos
xor
adc
int
adc
seto
cmc
mov
sbb
pop
subb
sbbl
cmp
stc
sub
sarb
add
dec
addb
xchg
scas
fucom
xor
cmpb
ret
in
xor
cmpsl
xchg
cmp
ja
int3
cmp
dec
out
fidivl
lret
pop
inc
add
sbb
mov
mov
jns
adc
sbb
js
add
test
test
andl
pop
mov
leave
pop
and
adc
push
fisubrs
pop
stos
mov
shrb
test
mov
pop
jae
inc
adc
das
add
push
nop
mov
cmp
sbb
or
adc
pop
push
psraw
and
in
jmp
xor
sub
mov
inc
pusha
sti
adc
mulb
enter
cmp
stos
repz
out
lods
dec
lret
mov
out
lods
scas
or
fcoms
xchg
adc
mov
sub
sbb
fucomi
in
xor
mov
jbe
mov
rolb
add
ds
and
pushf
sbb
adc
mov
bound
mov
jnp
mov
bound
xchg
dec
outsb
jp
pusha
mov
jge
in
lret
and
sub
lahf
testb
icebp
and
push
or
adcb
out
es
dec
add
sahf
call
insl
fimuls
sahf
insb
movsl
pop
mov
in
and
aas
or
jmp
cwtl
mov
decb
and
sbb
sahf
pushf
add
pop
adc
xchg
movb
pop
add
into
jg
push
sub
adc
mov
insb
pop
add
dec
cs
inc
jb
mov
test
adc
outsb
push
in
sub
fists
sub
je
pushf
dec
popf
movsl
scas
mov
pop
xchg
jp
or
call
aas
lods
mov
sbb
sbb
aas
pop
popa
leave
fbstp
andb
and
sbb
dec
sub
bsr
mov
test
adc
dec
pop
call
xor
cli
dec
push
cmp
sub
inc
enter
hlt
mov
testb
mov
mov
fildl
sub
jnp
leave
inc
scas
mov
aad
mov
icebp
gs
mov
adc
aas
mov
sub
or
ljmp
or
xor
hlt
pop
and
dec
rcrl
rcrb
push
xor
sbb
sbbb
add
xor
fstpt
insb
jbe
fcoml
sahf
fwait
mov
loopne
pop
mov
das
mov
or
push
repnz
div
iret
mov
pushf
xchg
xor
pop
or
into
or
sbb
push
mov
leave
inc
hlt
aas
test
xchg
xchg
fs
ret
insb
push
sub
stos
int3
and
clc
das
xchg
cmpsl
mov
sahf
jg
out
in
arpl
int3
adc
adc
fnsave
and
incl
ret
test
adc
sbb
lret
in
lock
into
adc
fimull
lcall
cmpsb
stc
mov
cmpsb
xchg
pop
push
mov
shrl
movsl
pushf
jg
mov
ljmp
adc
rorb
ret
cld
dec
not
jmp
adc
push
inc
daa
sbb
lods
insb
shlb
adc
int
adc
call
lods
in
xlat
mov
insl
ret
je
scas
mov
imul
popf
dec
sub
cltd
sub
xor
negl
movsl
mov
or
pop
fistpl
or
add
subl
jmp
rorl
inc
fdiv
ss
dec
insl
mov
xchg
lret
dec
add
cmp
mov
lcall
pop
in
xor
je
jns
mov
adc
nop
jp
inc
xchg
outsb
mov
stc
mov
imul
out
scas
jno
mov
xchg
or
adc
test
xchg
out
dec
aaa
dec
mov
jg
cmp
inc
sti
cwtl
xor
and
shrl
aas
jnp
out
xchg
rclb
mov
cltd
jg
add
xorl
xchg
aas
jo
sbb
lock
sti
sbbl
sti
add
cs
jle
mov
cmp
pushfw
push
cmp
rolb
popa
mov
cli
or
jae
mov
adc
push
orb
sub
subb
lret
arpl
loope
out
mov
je
fs
push
iret
mov
sub
out
outsl
lea
push
iret
test
lret
xchg
push
test
das
inc
jne
icebp
and
insb
lods
out
push
rorb
fbstp
aas
loop
sbb
imulw
mov
jae
inc
jo
daa
dec
inc
setae
mov
mov
xor
push
fwait
lahf
pushf
idivl
or
leave
xlat
jge
mov
mov
testl
dec
ret
jle
nop
test
xchg
hlt
add
cmp
aad
adc
cmp
scas
and
in
hlt
pop
and
adc
mov
ljmp
adc
push
adc
out
xchg
pop
sbb
inc
cmp
dec
mov
imul
insl
xor
cmp
cwtl
test
push
shlb
aam
leave
imul
push
jnp
hlt
into
pmuludq
xor
and
mov
inc
fisubl
and
mov
adc
test
push
daa
repnz
xor
jp
mov
dec
ds
jns
stos
cld
sub
mov
cli
mov
jle
fdivl
into
inc
pop
xor
sahf
in
in
adc
push
fmulp
pop
clc
aas
adc
or
outsl
push
sti
lahf
insl
fcompl
aas
sbb
pop
fwait
fmul
xchg
xor
enter
cmp
imul
adc
hlt
xor
or
stos
mov
gs
negb
scas
xchg
mov
dec
pop
lcall
iret
jg
das
adc
rol
push
push
subb
push
jo
aad
inc
mov
mov
pop
add
and
orl
push
sub
sarb
ret
loop
pop
xchg
out
sarl
push
mov
in
add
fcoms
mov
xor
or
pusha
push
and
sahf
jg
notl
sub
jmp
fildll
push
bound
je
scas
sub
bound
into
cmpl
adc
mov
fld1
loope
or
cmp
scas
repz
shrl
cmc
cmp
mov
movsl
pop
stos
or
mov
sar
insl
jle
scas
mov
mov
and
xor
mov
mov
xor
or
mov
mov
shrd
shr
mov
mov
mov
xor
mov
xor
shl
mov
or
mov
cmp
je
mov
sub
mov
mov
xor
xor
shrd
shr
mov
jmp
jp
lds
sub
jbe
add
int
adc
pop
adc
dec
adc
sbb
sbb
mov
or
adc
pop
nop
mov
inc
outsl
jmp
mov
mov
push
test
add
jp,pt
fs
fildll
mov
cmp
push
adc
addl
or
aad
mov
imul
scas
push
orb
jg
jp
mov
lret
imulb
sbb
cmp
les
mov
sarb
nop
inc
mov
cmpsl
pop
fwait
mov
pop
mov
lmsw
dec
ret
xchg
push
sbb
cmc
scas
lahf
sete
xchg
cmpl
out
cmpsb
jmp
in
dec
mov
or
inc
imul
leave
popa
leave
sub
call
mov
and
cmp
inc
inc
xchg
stos
lods
xchg
push
xor
push
jns
cmc
pop
jae
mov
lods
les
call
xlat
jae,pt
sbb
adc
mov
xor
call
pop
loop
mov
mov
ss
nop
daa
ljmp
add
outsl
int3
mov
xor
add
mov
push
into
mov
mov
xchg
and
and
scas
dec
negb
les
seto
shrb
nop
shlb
mov
pop
jmp
add
xor
in
xchg
bound
and
lret
jbe
sbb
xchg
lcall
outsl
xchg
lcall
out
pop
cmp
shll
retw
push
mov
int3
push
sarl
sbb
stos
xchg
test
fwait
pop
add
negb
jle
pop
test
hlt
pusha
insb
and
inc
sub
cltd
lods
pop
les
adc
cmp
sbb
and
mov
shl
pop
clc
mov
into
test
xchg
cmp
repnz
add
mov
cwtl
ret
idivl
push
sub
cs
dec
scas
xor
sarl
lds
gs
stos
fcoml
out
add
stc
push
dec
xchg
inc
out
dec
int3
pop
adc
pop
in
dec
mov
add
notl
lea
or
orl
jl
xor
aas
addb
pop
enter
xchg
repnz
pop
push
pop
jge
dec
rcrl
xchg
pop
es
pop
and
adc
pop
jecxz
add
jns
jle
into
mov
outsb
les
jo
xor
pop
sbb
cmp
jp
in
int3
fwait
pop
cmp
insl
adc
idivl
sbb
push
phsubd
inc
ds
push
or
mov
pop
jmp
and
stos
mov
add
fisubrs
sbb
idivl
push
mov
ljmp
cwtl
add
out
mov
xchg
call
in
cld
mov
inc
ja
dec
sbb
popa
fbld
inc
cmp
ret
push
adc
and
out
xchg
pop
jb
fwait
daa
jb
ljmp
aas
mov
xchg
adc
push
cld
mov
rorl
sahf
sti
pop
pop
pop
loop
andb
cmp
movsl
pop
es
nop
hlt
test
cmp
and
in
sbb
orl
adc
mov
mov
inc
pop
imul
sahf
adc
imul
notb
mov
jns
or
sub
enter
insb
out
xlat
mov
ja
add
xor
or
mov
mov
mov
xor
xor
mov
mov
mov
shrd
shl
or
mov
mov
mov
shll
mov
mov
mov
xor
or
shr
or
cmp
jne
cmp
je
jmp
mov
mov
xor
xor
shrd
shr
mov
mov
mov
mov
xor
or
shl
or
mov
mov
xor
mov
mov
jmp
imul
sbb
jo
mov
int
adc
adc
loop
inc
pop
hlt
push
jp
pop
sbbb
das
pop
adc
and
lahf
jnp
incb
idivl
xchg
adc
jmp
cwtl
jnp
xor
cltd
jae
test
leave
add
inc
cs
out
shrb
pop
mov
pop
popf
je
enter
inc
popf
mov
xchg
insl
xor
jb
icebp
and
fsubl
pop
ror
jb
loopne
jl
das
dec
movsb
aas
test
je
je
roll
sub
inc
cmpsb
mov
les
aas
call
pushf
cli
fdivrs
pop
fldcw
imul
in
xchg
dec
adc
xchg
in
rclb
aam
pop
aad
push
cmc
cld
cmp
sub
shl
mov
push
pop
ja
adc
enter
add
nop
jle
fcmovne
mulb
js
pop
mov
jbe
popa
aam
into
inc
nop
and
popf
and
and
icebp
mov
fnsave
test
jno
jp
sbb
adc
idivb
rcrb
sahf
in
push
xchg
fdivrl
adc
popf
mov
daa
inc
xchg
jo
sbb
push
pop
push
gs
cmp
enter
mov
lods
dec
stos
stos
dec
imul
aas
mov
into
push
sbb
mov
ss
lret
cs
or
mov
jo
mov
pop
clc
jecxz
push
xor
add
dec
cmp
dec
movsl
gs
call
fwait
pop
inc
mov
xchg
lods
inc
fwait
jns
and
test
sbb
dec
jl
mov
push
dec
xor
jg
imul
ret
mov
pop
cld
add
sbbb
clc
dec
xor
pop
or
sti
and
fcoml
testl
adc
mov
pusha
fisubl
aam
pop
je
jb
xlat
sub
jo
ja
insb
adc
aad
mov
icebp
push
sbb
push
pop
ds
movsb
sbb
push
inc
sub
gs
sbb
xor
data16
test
xchg
mov
pop
popf
fs
pop
push
fldt
fmull
mov
jo
pop
loopne
enter
jg
das
dec
inc
bound
je
mov
ja
mov
loop
cmp
add
lahf
iret
sarb
dec
push
jae
xchg
in
out
nop
cmp
pop
cmpb
pop
into
add
addr16
xchg
mov
clc
mov
addb
inc
and
mov
mov
adc
lea
dec
ficoms
in
vpshad
cmp
push
mov
pusha
or
out
lds
mov
mov
rorb
or
stos
stos
in
xor
jns
xchg
mov
xchg
sbb
out
test
inc
lahf
adc
xor
inc
pop
pop
inc
jo
push
nop
cmp
cmp
cltd
jbe
xor
pop
adc
jecxz
xor
out
lds
jbe
lret
in
clc
sbb
rorb
xchg
dec
adc
imul
pop
add
xor
ja
add
dec
add
jmp
jp
cmc
and
mov
lods
jp
rol
in
dec
or
sbb
xor
push
outsl
leave
xor
mov
mov
cli
pop
pop
ljmp
jo
insl
sub
aas
cmp
push
mov
sahf
cmp
push
mov
mov
xor
mov
mov
shrd
shr
mov
mov
mov
shll
xor
mov
or
mov
mov
mov
or
jmp
repz
mov
pop
pop
lods
leave
jp
mov
int
adc
psrlq
call
mov
dec
pop
es
loop
out
dec
sbbl
adc
adc
cwtl
lret
js,pn
pop
cmpsl
cmp
addr16
pop
fcompl
aad
mov
lret
out
mov
sub
sarl
add
les
cmc
lret
cmp
fwait
popa
sarb
call
dec
rcll
xchg
fimull
push
stc
icebp
fwait
loope
sbbb
sub
addr16
inc
idivb
sbb
jo
ror
mov
cmc
push
pusha
push
daa
lret
aas
inc
out
mov
lahf
inc
cmp
cmp
or
sub
add
std
dec
mov
xchg
aaa
clc
push
xor
aad
mov
in
jbe
xchg
stc
dec
cwtl
pushf
insb
fstl
cli
iret
in
dec
adc
and
xchg
dec
and
add
sbb
insb
lret
mov
or
and
out
loop
jno
mov
int3
mov
add
ljmp
jne
add
push
adc
push
test
shll
pusha
in
fiaddl
std
and
and
int
pop
dec
jl
xor
ret
xor
xchg
out
xchg
insb
xchg
mov
jbe
mov
pop
add
or
movsl
mov
dec
rcll
xchg
mov
xor
in
ja
hlt
fiaddl
insb
std
inc
daa
cltd
decl
mov
xorb
inc
mov
ror
sub
call
or
or
sbb
fldcw
and
pop
or
pop
mov
pop
outsl
in
xchg
fdivrs
lods
mov
inc
inc
inc
and
add
shll
ret
outsl
mov
add
enter
xchg
jns
jg
xor
xchg
xchg
loop
mov
stos
push
inc
adc
or
jl
in
pop
cmpsb
pop
pop
sti
jp
jge
sbb
xchg
xor
xor
sahf
aas
fisubl
jb
push
popf
mov
push
decl
or
xor
adc
lcall
inc
mov
mov
iret
sub
xlat
push
xor
aas
imul
cltd
test
push
cmpsl
dec
je
cmp
sub
xchg
sub
pop
shl
test
lods
or
out
jns
insb
and
xorl
pushf
jecxz
inc
jno
inc
pop
inc
cld
lret
pop
xchg
xchg
popa
cmp
and
cmc
outsl
cmp
js
call
jno
sub
outsl
fwait
ja
pop
lock
jb
sbb
test
in
cwtl
xchg
or
jge
cmp
subl
xlat
or
push
inc
and
xchg
js
subb
fcmovnu
and
add
call
std
sbb
mov
rolb
add
push
push
negb
fsts
jbe
lcall
jle
stos
xchg
pop
or
jae
add
lods
lretw
outsl
dec
push
shlb
cmp
sbb
js
xchg
pop
sbb
pushf
mov
nop
stos
xchg
incb
sbb
cmp
lahf
sub
daa
mov
dec
rclb
fidivrs
or
dec
push
pop
mov
sub
mov
push
imul
scas
sbb
out
lods
aas
pop
inc
sbb
data16
push
in
xchg
aas
mov
add
or
inc
movsb
mov
cmp
jne
mov
cmp
je
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
shrd
mov
mov
xor
shr
jmp
mov
push
jle,pt
int
jle
test
adc
adc
adc
aad
hlt
sahf
dec
sti
cmp
adc
in
jp
mov
scas
adc
out
cmp
inc
sub
sbb
outsl
daa
pop
pop
cmp
add
pusha
fcomps
insb
or
stos
shrb
cld
add
ljmp
add
add
sbb
inc
xlat
sti
jl
xor
push
out
es
testl
jg
push
and
dec
mov
and
mov
xor
shll
test
jge
xor
scas
repnz
xor
mov
jnp
sub
mov
sbb
push
lods
in
push
out
add
dec
lods
std
cmp
add
cmp
call
mov
in
pop
imul
shlb
shrb
in
clc
stos
mov
lods
lea
test
std
sbb
pop
cwtl
pop
ds
lds
ffreep
aam
mov
lods
pop
pusha
ja
dec
lcall
sbbl
cmc
pushl
dec
pop
sbb
lret
arpl
popf
icebp
repnz
shrb
sbb
daa
lahf
cld
sbb
pop
add
mov
into
add
mov
xor
mov
inc
jmp
out
cmp
test
pusha
sahf
jmp
jle
push
mul
sub
xlat
idiv
in
cmp
sub
test
pop
dec
mov
inc
and
out
imull
mov
push
xchg
leave
jg
cmp
pop
imul
jmp
clc
das
adc
subb
out
out
mov
jns
and
arpl
insl
inc
shr
movsb
imul
call
cmp
jmp
pop
and
divb
comiss
scas
xchg
jecxz
mov
and
push
mov
cltd
pop
daa
pop
arpl
inc
xor
stos
mov
filds
xor
xorb
mov
add
cmc
dec
ja
ja
loope
add
pop
outsb
bound
ret
inc
adc
push
jmp
pop
cmp
or
xor
sbb
dec
sub
loope
sub
mov
push
mov
cmc
xorl
repz
jecxz
ret
mov
loope
scas
ret
push
mov
inc
xor
icebp
test
inc
and
xchg
sbb
xchg
adc
cmp
add
pop
and
outsb
xchg
hlt
add
add
pop
mov
adc
mov
mov
mov
insl
mov
jne
push
rorl
push
je
add
cmp
jl
pop
push
and
sbb
dec
mov
jae
ret
mov
daa
stos
sub
xchg
rclb
inc
lahf
or
int
arpl
add
ja
js
xor
mov
push
mov
mov
pop
xchg
xor
hlt
jo
ljmp
shr
jns
xchg
mov
in
lock
sub
cmp
add
mov
jo
and
pop
adc
dec
xor
or
pop
std
sbb
addl
pop
insb
pop
sbb
mov
mov
and
push
pop
bound
mull
mov
mov
sbb
push
shlb
push
testl
or
mov
mov
mov
xor
xor
xor
shld
mov
mov
mov
mov
shl
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
jmp
mov
sbb
sbb
out
stos
sahf
cld
add
adc
adc
adc
jae
daa
mov
pushf
jge
dec
shrl
jbe
mov
sbb
or
divl
call
pop
or
jecxz
icebp
sub
cltd
enter
pop
out
and
or
add
ss
test
shr
jae
call
dec
loopne
adc
add
fbstp
push
xchg
pop
aas
lds
leave
or
inc
mov
or
or
push
rorb
xchg
outsl
sub
or
push
ja
dec
stc
fs
bound
jno
sub
xchg
push
mov
jl
in
repz
mov
xchg
rorb
das
fdivrl
add
lods
and
jnp
lret
mov
mov
out
xchg
push
mov
mov
mov
adc
mov
lea
xor
les
xchg
int3
idiv
mov
out
ret
fistps
lods
repnz
dec
cmp
pop
add
jecxz
test
movl
mov
into
popf
jecxz
adc
mov
sbb
mov
mov
mov
loope
cld
pop
pop
or
xchg
repz
adc
outsl
repnz
rcrl
push
sbb
cmpsl
cld
out
aaa
jmp
and
jge
sahf
jbe
mov
add
rcll
insl
push
in
sbb
les
in
inc
mov
cmp
lods
push
lods
int
pushf
mov
xchg
jb
jp
test
mov
inc
mov
cmp
std
call
iret
test
sub
loopne
mov
es
dec
adc
bound
fstp
adc
in
fstpl
cltd
aad
ret
add
jns
cmp
xor
pushf
mov
stos
or
mov
int3
mov
jge
xor
push
jp
jo
rcrl
jb
subl
pop
ljmp
jne
fcomps
xchg
test
push
stc
lds
mov
mov
inc
xlat
jmp
mov
enter
stos
loop
das
mov
jmp
push
fldcw
in
jp
mov
loop
in
arpl
mov
aas
or
xchg
jp
mov
add
xor
and
enter
scas
push
pop
pop
gs
fistps
mov
loop
rol
repz
mov
enter
push
mov
mov
pop
arpl
mov
add
sub
cs
sbb
cwtl
sub
rorb
push
xor
pop
sbb
mov
daa
push
cmpb
mov
xchg
icebp
add
mov
es
daa
jge
mov
fwait
ja,pn
or
sti
xor
not
xor
jns
push
inc
ljmp
cs
jp
mov
mov
mov
add
mov
fcoml
push
jl
pop
out
icebp
or
adc
cs
xorl
pusha
scas
daa
jns
sub
cmpsl
mov
out
mov
sti
push
sub
nop
dec
in
frstor
mov
push
jmp
test
adc
addr16
mov
xor
xor
mov
mov
shrd
shr
mov
mov
mov
mov
xor
or
mov
shl
mov
mov
or
mov
push
pushl
push
push
call
mov
mov
andl
shrd
shr
shr
xor
push
xor
mov
mov
mov
push
push
push
call
shld
mov
mov
or
mov
shl
or
jmp
adc
jmp
repnz
ret
push
out
mov
adc
adc
aas
lock
push
out
inc
jle
jmp
push
rolb
push
pop
loope
in
lea
movl
dec
push
ljmp
jne
xor
sbb
pop
jecxz
pop
push
push
test
mov
fiaddl
call
fistpll
lcall
sub
loopne
inc
bound
data16
pop
call
sub
cmpsb
mov
icebp
pop
outsb
adc
pop
jb
pop
jo
adcb
insb
adc
insb
lret
and
pop
cltd
daa
aas
push
xabort
mov
fsubs
cmpsl
divb
xchg
movsb
cmp
pop
test
adc
bound
addr16
fdivl
fs
xchg
iret
iret
into
sbb
inc
push
test
ljmp
cmc
std
aaa
jns
jecxz
xchg
call
or
lods
ficomps
std
mov
jo
push
mov
stos
jb
cmp
arpl
pop
outsl
pop
int
nop
jl
sahf
pop
clc
xchg
popa
test
stc
jecxz
jo
into
add
jp
mov
xchg
or
cltd
cmp
or
add
and
mov
adc
fs
out
push
out
insl
clc
popf
mov
sub
or
push
pop
dec
jno
cmpsb
mul
nop
push
mov
ficoml
in
and
insb
sub
sbb
adc
adc
dec
xor
xchg
xor
and
clc
mov
or
mov
and
dec
mov
xlat
fidivrl
fdivl
inc
xor
flds
pop
mov
inc
jge
faddp
inc
sub
add
xor
rcrb
int
cs
inc
dec
pop
test
add
dec
aad
xchg
aaa
jnp
mov
cmp
fbld
cwtl
add
push
pop
inc
iret
lds
add
jl
daa
sub
sbb
inc
je
std
psrld
ret
into
mov
stos
arpl
jns
test
cmp
jns
or
add
inc
mov
enter
xchg
sub
cmpsl
dec
cs
js
daa
shll
adcl
insb
sti
cs
addb
add
push
inc
in
imulb
mov
dec
popf
shlb
test
xlat
rorb
out
xor
xorb
xchg
jbe
popf
jle
mov
stos
pop
popl
je
pop
mov
test
fcompl
iret
pop
mov
jne
push
add
xchg
mov
jns
icebp
mov
jg
pusha
push
xchg
xchg
add
and
jb
mov
andl
xor
add
mov
inc
rorb
arpl
cs
sbb
pop
lret
jbe
mov
add
cmp
or
fbstp
cli
push
xchg
inc
dec
rcll
enter
push
jle
pushf
out
rcl
scas
mov
pushf
insl
dec
adc
ja
mov
dec
and
loopne
mov
iret
sub
xor
dec
jmp
stos
ss
icebp
pop
and
out
out
daa
clc
or
popa
push
das
ljmp
test
in
sbb
rclb
jb
adc
and
pop
jp
adc
jno
xor
or
fcos
push
out
sub
mov
dec
lret
mov
push
bound
add
shll
stos
xor
lret
xor
shll
rolb
lret
fmuls
mov
jmp
mov
jmp
or
jge
pop
push
dec
cltd
cmc
leave
lcall
xchg
adc
int
adc
inc
xorb
mov
or
insl
mov
cmp
repnz
push
pop
out
lret
push
clc
mov
repnz
jecxz
mov
mov
pop
in
mov
rclb
cmp
push
pop
or
arpl
sahf
mov
mov
sti
aad
pop
or
dec
in
sar
xchg
inc
mov
add
icebp
pushf
adc
fcoml
aad
mov
mov
sub
or
cmpsl
sub
push
stos
mov
cmpsb
mov
out
xor
push
in
mov
mov
in
push
sbb
and
arpl
inc
dec
mov
jno
mov
addl
and
mov
sub
jge
cmp
std
test
cmp
sti
mov
jecxz
scas
andb
das
push
fdivl
inc
dec
aam
fwait
hlt
push
inc
ds
mov
pcmpeqd
rolb
xchg
cld
imul
movsl
push
shl
fisttpll
aam
sbb
testl
les
call
add
sub
decb
daa
adc
das
sbb
mov
shll
das
mov
push
or
mov
fwait
dec
cmp
shl
das
cmp
and
cmp
jns
cmpsl
mov
andl
enter
jg
sarl
push
adc
cmp
sti
and
mov
jl
lcall
push
jb
loop
xchg
mov
lds
ljmp
imul
ret
iret
in
jnp
jno
popa
xchg
add
mov
aad
sub
dec
mov
mov
enter
test
pop
lea
daa
pop
or
fldln2
call
xchg
pop
dec
hlt
fsts
mov
scas
push
pop
mov
hlt
jmp
cmpsb
inc
mov
or
ficoml
lods
lcall
xchg
push
inc
or
or
pop
mov
jg
fnsave
lcall
inc
testb
jnp
sbb
or
ja
sbb
loope
dec
fs
rorb
ljmp
push
enter
sbb
in
pusha
and
cmc
dec
mov
cmp
xor
sbb
jb
sbb
out
pop
pop
mov
or
call
sti
mov
pop
or
ja
mov
sub
faddp
sub
and
jno
cwtl
fwait
mov
xor
orl
cmp
sahf
sbb
repnz
addl
je
or
gs
and
xchg
jmp
pop
out
pop
cli
repz
push
pop
imul
pop
mov
adc
addr16
inc
dec
jne
pop
and
daa
out
cmpsl
push
or
jge
fisttpl
sbb
mov
fdivrp
xchg
fsts
push
add
fsubrs
jb
test
mov
aaa
imul
xchg
xchg
gs
lea
xchg
mov
inc
lret
imul
nop
dec
ss
pop
xor
stos
movsb
lret
fisubs
loopne
mov
mov
sbb
cmp
pop
mov
xlat
cli
mov
sbb
or
loope
es
in
pop
push
mov
sub
mov
aas
cmp
int3
in
jl
inc
test
stos
xor
mov
inc
cld
mov
mov
mov
mov
mov
mov
movzwl
cltd
xor
xor
shld
mov
mov
mov
mov
shl
mov
cmp
jne
mov
cmp
jne
movl
mov
movl
mov
movl
mov
movl
mov
jmp
stc
sub
xor
je
lcall
adc
lods
loopne
cmpsb
add
sub
sub
aam
sti
test
push
mov
es
fisubs
stos
shl
clc
push
inc
cmp
lahf
stos
fs
test
ret
add
inc
ret
add
inc
rol
pushf
pop
outsb
push
cmpsl
stc
inc
rclw
xchg
dec
xchg
test
lea
stc
lock
xor
xor
pop
in
aas
cmp
sub
rolb
xor
js
xor
inc
pusha
fisubrl
imul
cmp
aas
jmp
xor
dec
std
cmp
push
rcll
mov
outsb
jl
mov
rcl
insl
das
lcall
push
fisubl
jmp
xchg
or
inc
mov
mov
rol
pushl
cmp
arpl
jnp
loopne
cmp
or
mov
scas
push
push
testb
cld
inc
loope
push
xchg
scas
fisubl
inc
adc
negl
inc
aad
fwait
xor
inc
in
and
jmp
sbb
pop
jbe
in
cmp
loop
xor
mov
pop
sbb
scas
jne
mov
mov
cmp
repnz
push
adc
add
addr16
aam
adc
lea
lcall
mov
adc
push
imul
xchg
and
rorb
lahf
xchg
and
lock
or
hlt
shrl
push
shrl
jo
inc
dec
or
rolb
xor
dec
push
fildll
pop
adcb
cli
add
pop
mov
insb
adc
push
pop
jmp
cmp
adc
inc
je
xor
add
cld
and
enter
jno
mov
mov
jl
pop
pop
sub
scas
fcoml
repnz
test
pushf
imul
pop
pop
jl
push
fbstp
and
out
inc
jg
add
bound
jns
dec
sub
mov
xchg
aaa
cmpsb
pop
inc
outsb
inc
xor
jo
xchg
in
push
sbb
mov
push
add
or
cmpsb
jmp
ret
inc
ret
cmpsl
mov
xor
cs
mov
lods
lar
cli
int3
and
repnz
lock
shrb
pusha
jo
test
int
adc
inc
pop
xlat
lock
jne
stos
xor
adc
or
insb
test
cmp
cmp
mov
inc
mov
add
jne
sahf
inc
outsl
cmp
xlat
mov
incb
mov
sub
adc
add
rol
sahf
in
push
jl
lods
cwtl
js
mov
insl
adc
loopne
daa
cmp
lods
ja
mov
mov
add
push
lock
leave
push
add
outsb
push
rorl
int
pop
aam
and
dec
idiv
jp
in
mov
mov
enter
xchg
xchg
cmp
xchg
scas
pop
sub
and
out
mov
mov
push
rorl
mov
icebp
out
dec
in
hlt
push
je
pop
ret
in
xchg
pslld
pop
add
jl
sub
sbb
or
repnz
loopne
and
cmpsl
jle
dec
push
mov
mov
mov
mov
ret
jg
mov
xorl
fcmovnbe
addr16
sarb
add
push
or
jp
jnp
push
jbe
push
inc
pop
mov
xchg
ret
lea
repz
or
aas
add
dec
or
lods
enter
add
or
mov
or
add
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
jmp
dec
popf
shll
pop
das
popf
ffreep
mov
lds
fidivrs
int
adc
mov
mov
dec
pushf
or
dec
sti
xchg
adc
pop
clc
jecxz
subl
imul
aam
lahf
aam
out
mov
cmc
dec
inc
sub
stos
pop
adc
arpl
out
mov
rcrb
outsl
xchg
add
jge
hlt
inc
in
inc
fadds
popa
mov
sbb
scas
jns
shl
call
mov
xchg
dec
out
insl
jmp
lds
shll
aas
sub
js
inc
pop
mov
sbb
dec
pop
push
or
adc
aad
xor
mov
cmp
sbb
push
leave
shll
inc
lcall
ja
cwtd
and
jecxz
cs
fs
jns
or
shrb
mov
stos
dec
pushf
out
aam
xchg
or
fsubrs
stc
imul
sub
std
xchg
push
fsubl
adc
sub
mov
add
mov
and
jecxz
mov
add
ret
inc
out
in
mov
inc
aas
les
sub
inc
das
cmp
dec
add
fisubrl
outsl
mov
and
rcll
push
int
arpl
jnp
xchg
aaa
push
push
sbb
ljmp
ret
jmp
push
fbstp
jecxz
out
dec
aam
xchg
into
xchg
aam
movsl
es
out
inc
mov
mov
mov
mov
or
daa
in
into
adc
sbb
ret
xor
rorb
ss
out
and
nop
add
fs
leave
lea
adc
enter
cmpsb
subl
lahf
push
and
xor
mov
xor
clc
aas
and
fs
popa
leave
dec
cmc
add
lea
sub
movsl
jbe
rcrl
mov
in
stos
cld
lahf
sub
push
sbb
insb
jne
push
fdiv
jns
cmp
loopne
stos
mov
call
and
jmp
out
mov
inc
pop
shll
and
out
mov
mov
dec
jl
scas
mov
subl
xor
out
and
xor
stc
test
sahf
fisubs
jno
imul
test
repz
cmp
xchg
cmp
fwait
int
dec
shll
gs
xor
iret
mov
ficoms
sub
dec
outsb
mov
ja
mov
lret
fwait
dec
mov
mov
dec
mov
xchg
stc
jns
mov
cmp
imul
shl
aaa
pop
dec
pusha
scas
mov
jbe
jno
push
mov
mov
dec
call
mov
stc
push
jecxz
mov
jnp
clc
jae
jp
outsl
and
stos
xchg
cmp
js
mov
lods
adc
add
les
adc
stos
xor
xchg
add
insb
sar
sub
adc
into
arpl
xchg
shlb
mov
xorl
jp
scas
rclb
push
lahf
push
mov
adc
insb
data16
push
fwait
sub
xor
dec
shll
imul
adcl
and
fcomip
dec
leave
dec
jecxz
sbb
pusha
test
xchg
push
add
aas
inc
rcrl
sbbl
in
jne
mov
in
aaa
loope
out
push
cmp
cmp
shrb
xchg
mov
xor
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
add
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
or
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
shl
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
add
mov
mov
shrd
shr
mov
mov
xor
shl
mov
xor
or
mov
shrd
add
xor
shr
mov
mov
xor
or
mov
or
shl
mov
mov
xor
mov
xor
shrd
shr
mov
mov
mov
mov
xor
or
mov
mov
mov
xor
xor
mov
mov
mov
shrd
shl
or
mov
mov
mov
shll
mov
mov
mov
xor
or
shr
or
cmp
jne
cmp
jne
jmp
mov
mov
mov
mov
xor
xor
mov
mov
shrd
shr
mov
mov
mov
mov
xor
or
mov
shl
mov
mov
or
jmp
imul
imul
add
push
push
jl
adc
adc
adc
cmp
xor
cli
roll
movsb
mov
ja
jg
mov
cmp
inc
and
aas
push
cli
xchg
gs
add
cli
adc
jecxz
fwait
stos
daa
xchg
or
xchg
popa
ret
fnsave
cmc
pop
jo
jbe
xchg
or
sub
in
in
bnd
out
fucomp
stos
sbb
ljmp
sbb
sbbl
push
xchg
popa
addl
mov
aad
lods
popf
leave
cmp
and
ret
fdivs
mov
movb
xor
push
daa
sub
fsubl
movsl
shr
shrb
pop
popa
bound
into
sbbb
jbe
pop
and
pop
pop
xchg
sar
xchg
jecxz
leave
dec
sbb
jnp
jno
iret
jbe
pop
shr
mov
jp
or
icebp
push
mov
mov
lahf
test
sbb
movsl
in
push
xlat
lret
aaa
xchg
enter
or
mov
test
mov
hlt
or
fimull
adc
xchg
sbb
divb
test
fdivl
pushf
and
mov
sub
mov
cmp
pop
jns
push
push
add
scas
fiaddl
mov
cmp
xor
arpl
mov
pop
or
mov
lcall
lahf
int3
cltd
push
ds
pop
std
or
mov
mov
std
cmp
xchg
sbb
cltd
sbb
daa
cli
and
add
adcb
and
fistpl
mov
in
push
jecxz
dec
aas
ret
mov
cli
aad
imul
jmp
adc
jnp
cmp
rcl
pop
fbstp
subl
test
xchg
loope
mov
in
sar
insb
out
inc
sbbb
std
xchg
test
addr16
sahf
cltd
jp
lret
into
std
push
shr
mov
fwait
cltd
jno
mov
push
in
test
mov
push
and
adc
mov
arpl
out
add
mov
sub
push
or
add
in
adc
xchg
mov
popa
xor
cmpsl
inc
enter
aam
les
sbb
ds
out
or
xchg
aam
lods
gs
and
ret
mov
jae
lea
sub
fdivs
mov
push
loope
xorb
xchg
xchg
or
cwtl
rcrl
in
fistl
push
in
sarl
dec
icebp
fsubrl
and
and
lea
inc
add
out
aaa
inc
insl
stos
dec
mov
jne
adc
or
or
sti
dec
lahf
mov
push
mov
faddl
mov
fiadds
dec
insl
xchg
and
push
or
pop
lea
or
push
dec
ja
mov
push
cmp
dec
enter
mov
sarb
mov
mov
pop
ljmp
mov
lret
push
std
cmp
jns
lret
sub
pcmpeqd
sub
icebp
fcmovu
jle
push
dec
pop
stos
in
add
adcb
mov
cltd
cmp
outsl
jno
xlat
mov
sub
sub
adc
bound
insb
inc
push
jns
pop
push
jns
adcl
and
adc
test
dec
fisttpll
dec
cmp
inc
popa
push
mov
push
pushl
push
push
call
mov
jmp
xor
sbb
stos
adc
adc
int
adc
repnz
fsubp
mov
mov
mov
pop
movsb
sbb
cld
test
pop
out
pop
fidivl
js
add
popf
jmp
inc
jl
mov
mov
adc
xchg
shr
mov
std
and
scas
test
cmp
int
xor
lock
in
les
repz
push
mov
fsubr
dec
sbb
imul
or
xor
es
popf
outsl
inc
xor
pop
ljmp
mov
stos
into
mov
out
dec
mov
rclb
in
mov
mov
movsl
cmc
in
cmc
jp
outsl
jp
and
insl
mov
inc
mov
jo
mov
out
mov
inc
insl
sub
out
jnp
pusha
push
scas
jo
imul
xlat
fcmovnu
or
xchg
jae
jo
js
outsl
mov
ret
push
ret
popa
cmp
sbb
stc
cs
pusha
shrl
imul
inc
and
pop
in
fistpll
es
add
xor
inc
mov
out
mov
pushl
mov
jb
sub
pushf
push
mov
lock
inc
jae
fistpl
push
sub
mov
mov
pop
and
add
stc
pop
inc
inc
sbb
inc
or
mov
adc
aam
xchg
pusha
add
pop
push
mov
fsubrl
enter
pop
cmp
xchg
ror
ja
pop
xor
popf
sbb
cmc
pop
lods
adc
and
mov
dec
push
and
outsl
xchg
push
ret
or
fimull
in
out
sub
shll
or
pushf
int3
jbe
add
pusha
addps
mov
mov
jg
mov
mov
sbb
dec
sbb
rclb
movsl
pop
dec
dec
or
push
or
push
mov
or
fsub
add
rcll
lahf
cmc
mov
pushf
cmp
aad
dec
out
int3
imul
push
daa
lahf
mov
xor
clc
daa
popl
sahf
and
mov
inc
mov
or
fwait
leave
daa
mov
lahf
insb
xchg
dec
stos
andl
lods
sbb
inc
cltd
test
dec
sub
xlat
cltd
das
add
xchg
in
mov
push
ja
cmp
fs
push
jno
cmp
insb
scas
clc
icebp
push
inc
in
in
sbb
rorl
jmp
jb
pop
and
das
out
mov
mov
sbb
imul
lcall
or
adc
les
dec
push
jns
inc
adc
cs
pop
add
dec
pop
pop
xchg
test
add
push
push
mov
incl
mov
int
les
xchg
aam
inc
jno
std
pop
push
or
pusha
stc
and
sbb
mov
xchg
aam
cwtl
fxch
mov
out
insl
std
mov
flds
xor
mov
push
add
sub
push
and
lods
gs
xchg
jb
scas
gs
leave
jne
daa
and
pop
pop
dec
cld
or
cld
aas
sub
push
in
cli
jle
rorb
push
test
sub
cltd
mov
push
addr16
and
dec
imul
out
push
xchg
sbb
stc
xlat
loopne
ret
mov
mov
mov
popa
and
enter
and
jge
cmpsl
clc
jmp
gs
shrd
jmp
ja
jle
sub
xchg
mov
cmpsb
je
lods
jno
adc
int
adc
and
xor
dec
xchg
scas
adc
cltd
add
out
test
push
xchg
pop
pop
and
aas
xor
sub
push
and
mov
lds
mov
mov
inc
imul
mov
gs
cmpsb
mov
pop
stos
cli
fbld
and
insl
fadds
ror
ficomps
lahf
je
enter
push
sbb
cld
xchg
xchg
mov
jmp
push
sahf
cmp
leave
stos
mov
popa
rcll
ds
and
and
cmpsb
aaa
cwtl
xchg
scas
fldcw
pop
sub
daa
jb
insb
cmp
lea
mov
fldt
insb
jne
fists
popa
mov
rcr
imul
pushf
push
mov
add
push
jle
lds
sbb
dec
test
out
adc
sub
sub
or
xor
sti
mov
scas
adc
les
out
aaa
fwait
xchg
movsl
ss
sbb
xor
jno
push
jp
ljmp
mov
xchg
xor
stos
jo
mov
add
jge
add
xchg
or
aaa
add
xchg
cmpsb
xor
lea
xor
xor
push
push
sub
mov
lds
pushf
shlb
movb
jb
cmp
icebp
jno
inc
adc
dec
xchg
test
xor
dec
and
and
xor
xchg
push
cmp
jge
lock
fdivrp
xchg
adc
out
sbb
clts
fcom
outsl
mov
xor
aaa
jo
ret
in
or
jno
sub
incl
pop
cltd
fs
mov
mov
or
cmp
lret
or
or
push
xor
imul
int3
push
inc
lods
sbb
adc
push
bound
out
xchg
mov
jne
xchg
pop
and
test
incb
fnstcw
cmp
inc
ja
mov
pop
imul
inc
test
pop
mov
gs
mov
push
loop
mov
cli
pusha
jg
orb
push
cmp
movsl
sub
xor
jno
adc
mov
enter
cli
pushf
fstpl
out
jp
sbb
insl
add
mov
xchg
lds
shll
sub
aam
dec
sti
aas
movsl
jae
int
xchg
decl
fstps
fdivrs
sub
mov
pop
fwait
test
roll
or
arpl
mov
add
mulb
aam
fidivrs
push
push
les
pop
dec
push
arpl
test
out
je
andl
sbb
dec
rcl
pop
call
mov
cltd
testb
jp
mov
adc
jp
sbb
or
je
sbb
lret
stos
lds
movsl
ror
shlb
pop
push
add
push
bound
mov
iret
pop
add
test
pop
push
jecxz
into
xor
sti
jb
adc
push
fwait
pop
jae
adc
ljmp
pop
sbb
and
xchg
jbe,pn
jbe
outsl
popa
mov
push
test
push
mov
fwait
xor
repz
loop
sbb
push
push
push
loope
push
cmp
insl
dec
ljmp
cltd
sub
gs
cmpw
xchg
mulb
cmpsl
add
outsl
int3
test
adc
mov
or
sub
test
jmp
xor
push
xor
mov
mov
mov
push
jmp
bnd
test
mov
mov
int
adc
add
call
jge
stc
push
cmpsb
rcrl
fistl
out
and
icebp
fildl
fwait
push
test
mov
ret
lcall
xchg
rcr
imul
add
jecxz
push
sbb
les
xor
outsl
cltd
adc
dec
aas
inc
cmpsl
or
mov
lret
sar
ja
mov
pushf
mov
loop
xchg
iret
aam
mov
mov
jo
ljmp
mov
shl
dec
movsb
pop
and
sahf
pop
js
test
sbb
in
mov
mov
jne
or
stos
loop
xor
cmc
dec
cmp
push
or
and
lds
mov
mov
lds
ret
pop
rorl
sahf
repnz
xor
mov
push
or
adc
rcll
fiadds
sbb
loop
dec
jbe
inc
xchg
icebp
dec
xchg
lcall
es
xor
insl
rcr
sbb
repnz
xor
jbe
jmp
jmp
iret
jno
scas
mov
adc
or
push
inc
dec
repz
dec
into
dec
je
das
mov
cmp
shr
inc
sub
sbb
dec
mov
in
mov
sub
shrb
mov
mov
dec
sub
dec
adc
adc
pop
stc
or
in
rclb
cwtl
adc
add
nop
pop
dec
xor
cmc
ret
adc
ds
imul
inc
add
mov
jmp
sti
ret
lds
mov
inc
fwait
pop
enter
lds
mov
add
sbb
xlat
xor
adc
sarb
jp
or
push
cmpsb
pop
in
call
dec
sbbb
lock
cmpsb
rorb
fucomi
loopne
stos
call
or
push
sbb
xor
and
aas
jle
add
jmp
adc
xor
mov
das
ret
mov
dec
test
pop
enter
insl
mov
cs
or
xor
or
sti
jo
icebp
jp
in
push
fs
and
mov
pop
pop
jo
dec
gs
dec
push
mov
test
mov
lock
arpl
cmp
adc
jnp
loope
ret
mov
push
sbb
push
or
insl
mov
fdivrs
bound
enter
xchg
adc
mov
mov
xchg
mov
pop
inc
test
lods
cmpsl
enter
or
mov
mov
ret
stos
jb
mov
and
jbe
push
je
mov
repnz
lods
push
push
insl
or
test
jmp
out
dec
flds
ljmp
sbb
xor
lahf
mov
imul
mov
jae
in
adc
add
aas
lock
mov
cld
pop
push
xchg
xchg
xchg
jecxz
jp
xchg
popf
movsl
stc
call
or
sahf
jo
lahf
jle
pusha
loope
loopne
aad
and
fisubrs
xor
insb
push
xor
pop
in
adc
pop
lret
rcrb
or
mov
mov
mov
fadds
fists
inc
movsl
into
add
jle
push
jg
cltd
adc
cs
xor
mov
xor
pop
fisttps
int3
inc
cmp
popf
dec
int
mov
sbb
cmpb
add
shld
or
shl
or
xor
xor
mov
mov
mov
mov
mov
xor
xor
shrd
shr
mov
mov
mov
mov
shl
or
xor
or
mov
mov
mov
mov
xor
xor
mov
mov
mov
shrd
xor
shr
shl
or
or
cmp
jne
cmp
je
pushl
pushl
pushl
push
push
call
pop
leave
ret
movl
cmp
movl
jae
cmp
movl
jae
sbbl
jmp
test
sub
sub
aaa
pushf
mov
adc
adc
ds
xor
sbb
jle
or
cld
jecxz
cltd
sbbb
cmc
test
push
pop
or
int3
lcallw
in
mov
mov
cmp
mov
dec
mov
sbb
mov
xor
test
bound
jle
add
fiaddl
je
jae
cltd
jl
ja
xchg
fiadds
insl
dec
les
arpl
pushf
or
push
stos
leave
rcrb
inc
js
ret
ret
fwait
mov
subb
shlb
stc
test
cltd
add
add
xchg
sbb
xchg
rcrl
lcall
fcoms
sbb
push
shrb
and
dec
push
push
adc
xchg
fsubrl
jl
push
outsb
add
rcrl
ljmp
mov
repnz
inc
inc
bound
pop
dec
or
pop
lds
push
xchg
jp
inc
lahf
sti
dec
sbb
movsl
leave
test
ret
mov
nop
and
xor
mov
jbe
out
aas
pop
xchg
mov
jecxz
subb
pop
cmp
dec
pushf
in
in
push
outsb
idivb
jne
xor
push
enter
cmp
loopne
push
test
jnp
jbe
push
fdivr
or
or
mov
and
scas
pop
orb
ror
popa
pop
jmp
mov
pop
lock
loopne
movsb
into
imul
push
jge
mov
aam
les
add
inc
push
ret
mov
adc
push
xlat
mov
mov
daa
les
push
in
movsb
mov
inc
inc
xchg
lods
dec
cmp
scas
inc
jns
dec
cltd
cmpsb
jo
push
popl
pop
mov
pushf
js
pop
or
sti
rolb
fimull
jbe
xor
aam
inc
pop
mov
cmp
cmpsl
test
clc
mov
fnsave
pop
pop
lret
add
cmpsb
leave
xor
cltd
test
sbb
test
add
arpl
mov
out
imul
fbld
xchg
inc
imul
sbb
aas
sbbl
outsb
aas
call
das
sbb
ret
push
jb
sub
mov
hlt
leave
inc
les
jnp
shl
jbe
cs
pop
ds
push
test
adc
in
and
ud2
decl
test
gs
push
out
inc
fsubrs
out
fildl
lock
sub
sub
xchg
nop
pop
shlb
xor
int
bound
push
mov
dec
sbb
mov
loope
xor
sub
add
sbb
movsl
and
rolb
mov
adc
popa
push
sbb
jne
fucomp
push
in
lret
repnz
sub
jmp
in
xchg
jl
dec
lea
sbb
mov
cltd
jl
inc
pop
movsl
or
or
or
inc
inc
fsubrs
stos
lods
cmpsb
gs
fisubl
xor
jno
ret
mov
and
clc
cmp
negb
lahf
mov
xor
fbstp
int3
fsts
cmp
cmpb
cmp
stc
or
frstor
pop
inc
mov
pop
mov
pushf
mov
pop
mov
xlat
adc
push
das
xchg
jns
jge
mov
xor
popf
loope
xor
int3
sbb
cmpsl
cli
jecxz
loop
shrl
pop
mov
push
mov
jae
mov
outsb
lret
push
icebp
movsl
call
jp
mov
ret
clc
fstpl
in
mov
pop
int
and
mov
add
sbb
scas
shrd
movl
shr
ret
movzwl
sub
mov
xor
and
shr
ret
xor
xor
ret
push
mov
sub
add
movl
or
mov
mov
cmpl
mov
mov
mov
movl
jmp
movl
movl
ja
pushl
push
push
pushl
push
pushl
pushl
call
xor
adc
andl
adc
sub
add
addl
movl
cmpl
mov
mov
movl
jmp
movl
mov
jne
call
or
movzbl
sub
mov
and
or
mov
or
xor
mov
or
movl
adc
movl
sub
movl
push
movl
xorl
movl
and
push
sub
movl
sbb
mov
andl
mov
push
push
addl
push
call
xor
mov
mov
movl
push
movl
or
adcl
push
or
xor
xor
push
andl
push
call
or
mov
cmpl
movl
mov
movl
mov
jmp
movl
not
je
push
pushl
push
pushl
push
pushl
pushl
pushl
push
pushl
push
push
pushl
call
orl
notl
adc
mov
sbb
add
and
inc
mov
addl
push
orl
push
addl
push
push
decl
call
cmpl
movl
mov
mov
jmp
movl
jne
pushl
push
call
add
add
adc
mov
xor
add
sub
or
mov
and
mov
mov
or
cmpl
movzwl
movl
movl
jmp
movl
movl
jae
pushl
call
adc
xor
xor
adc
orl
add
mov
add
mov
subl
movl
mov
xor
movl
mov
xor
add
sub
and
movl
adcl
movl
jmp
fcmovne
mov
test
je
stos
insb
adc
adc
adc
adc
shlb
jnp
and
xchg
or
push
push
pop
jnp
jo
outsb
push
or
mov
aas
pushf
enter
cmp
leave
pop
fstl
stc
pop
pop
imul
das
dec
int
je
push
cmp
mov
outsl
mov
faddl
add
jg
pop
cmp
in
fadd
push
popf
jl
dec
sub
bound
push
or
jecxz
mov
es
sub
scas
xor
loopne
push
mov
call
sbb
bound
jne
pop
mov
popa
int3
sub
repnz
aam
cmp
jb
jns
pushf
mov
pop
ror
and
bound
push
adc
call
adc
or
push
mov
sub
push
daa
incl
in
call
cltd
inc
inc
leave
scas
mov
clc
adc
sarb
push
int3
inc
ljmp
push
scas
inc
dec
ss
bound
imul
jl
sarl
pop
dec
xor
lock
mov
cmp
pusha
cli
cltd
rorl
mov
mov
mov
test
pushf
pop
sar
movsb
aam
add
fisubl
nop
pop
ss
jl
cmp
adc
jbe
ret
ljmp
dec
jne
out
push
cmpsl
shl
adc
jne
out
jne
scas
stos
cmpsl
movsl
mov
iret
cli
ss
scas
stos
push
icebp
in
fstl
lods
je
shr
pop
mov
call
cmpsl
das
inc
add
into
mov
inc
cs
cmp
adcb
mov
mov
mov
adc
cmp
and
mov
xchg
xchg
jle
add
push
shll
shrl
aad
call
std
inc
add
or
test
sub
fisubrl
mov
loope
sub
xchg
sub
int
int3
xor
adc
int3
incb
in
cmp
xchg
sbb
stos
cld
out
stos
mov
icebp
aam
mov
xchg
jle
jno
xchg
out
push
jle
jecxz
adc
pop
mov
xor
xor
dec
and
push
lret
sahf
cmp
pop
cmp
mov
and
scas
ja
fcmovnb
enter
push
pop
es
ljmp
bound
pop
mov
add
add
push
xor
and
shlb
loop
mov
or
hlt
outsl
xchg
aas
xchg
test
imul
sub
mov
dec
ss
pushf
mov
cld
add
out
pop
add
pop
mov
push
xchg
scas
or
pushf
jl
xor
scas
fwait
xor
jge
stos
dec
xor
and
ljmp
roll
add
cmp
add
or
cmp
pop
sub
jl
cmpsl
xor
dec
js
imul
jl
mov
xchg
aaa
aad
jo
inc
xchg
pop
lahf
mov
icebp
inc
cs
jl
mov
outsl
sbb
mov
mov
fs
adcl
and
cmp
pop
xor
aam
leave
in
push
sub
mov
pop
shrl
pop
ret
mov
sar
add
mov
mov
adc
aam
xor
roll
test
ret
aaa
pop
and
fbstp
xchg
orb
mov
xlat
add
fcompl
mov
pop
aam
mov
hlt
int
cmc
fldenv
jg
push
ret
fcompl
and
insb
xchg
lea
cld
movl
cmpl
not
mov
mov
movl
jmp
movl
mov
jg
pushl
pushl
call
add
orl
sub
adc
movzwl
add
mov
mov
sbb
movl
mov
mov
mov
mov
add
adc
or
mov
or
mov
or
mov
or
mov
or
or
cmp
jne
cmp
je
movl
movl
mov
mov
xor
xor
and
and
mov
mov
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
add
mov
adc
mov
add
adc
xor
xor
add
mov
adc
mov
cmp
jne
cmp
je
movl
movl
movl
push
movl
mov
mov
push
push
push
call
mov
mov
push
jmp
in
mov
sbb
sub
jle
sub
xor
adc
adc
adc
mov
xchg
call
adc
dec
aam
mov
add
test
and
mov
enter
sub
loop
mov
test
pop
dec
in
lods
hlt
je
mov
jecxz
adc
sub
pop
shrb
lret
jmp
or
loopne
jl
push
das
jnp
xchg
mov
sbb
adc
mov
jp
push
xchg
ret
mov
fwait
leave
inc
test
lret
xchg
lcall
sbbb
scas
mov
mov
inc
cmp
pusha
dec
push
data16
push
rcrl
lahf
xchg
int
fsts
outsb
push
cmc
sahf
jmp
and
scas
dec
cmpl
rcr
mov
inc
pop
cltd
or
testl
push
dec
in
andl
ljmp
int
or
cmp
imul
call
aam
jmp
and
mov
add
mov
xor
cmp
mov
pop
or
adc
pop
or
nop
or
mov
lcall
dec
adc
in
scas
shrb
divb
in
cmp
or
sbb
repz
sub
lea
rcrb
adc
mov
pop
ss
sub
xor
mov
add
mov
jecxz
mov
loopne
mov
sbb
hlt
inc
xchg
mov
loopne
and
dec
pushf
enter
mov
movsb
or
sbb
sub
or
push
adcb
push
push
mov
add
xchg
aaa
sbb
or
mov
fcmovne
addr16
mov
jno
add
xchg
inc
dec
push
mov
cmp
jae
jmp
ret
xchg
pop
xchg
adc
adc
jbe
add
sub
mov
out
xor
xchg
xchg
mov
test
or
xor
mov
mov
mov
notl
jg
scas
push
lods
call
xor
mov
inc
adc
mov
andl
out
sbb
mov
loop
pusha
xor
inc
adc
in
xchg
gs
flds
jl
loopne
lock
aad
sbb
sub
clc
adc
cli
mov
pop
fdivrp
test
je
aas
insb
and
jg
adc
jge
mov
jb
cmp
mov
imul
xchg
testb
push
sbb
shll
mov
fmull
out
sbb
stos
mov
adc
lods
cld
sub
mov
aam
sti
push
loope
mov
push
mov
xor
imul
jb
cld
pop
hlt
cmc
mov
or
lahf
fisttpl
iret
or
rcll
or
fisttps
adc
pop
lds
into
outsb
jno
fildll
lret
jge
cli
imul
out
push
or
or
xor
lret
or
pop
pusha
push
jmp
xchg
flds
cmp
add
mov
out
cmp
pop
push
movsb
mov
mov
sub
lods
imull
sbb
ret
xchg
repz
jge
mov
cmp
jae
cmp
dec
test
xor
je
hlt
pop
scas
aas
sbb
sbb
push
push
and
mov
int3
mov
js
jo
out
pminsw
mov
adc
inc
dec
sub
cs
outsb
xchg
addr16
push
loopne
adc
mov
fs
cmpsl
inc
lds
imul
addl
and
push
push
call
xor
xor
mov
mov
mov
cmp
jne
mov
jmp
enter
pop
xor
push
push
pushf
mov
adc
adc
cwtl
outsb
in
adc
pop
pop
cmc
aas
and
jns
mov
or
ret
push
adc
popl
sahf
insl
push
mov
pop
sub
sub
mov
lock
pusha
fs
ret
mov
dec
and
xchg
shll
xchg
jle
scas
mov
cmp
push
test
insb
adc
and
dec
xchg
insb
mov
clc
test
sub
dec
test
subb
mov
lret
mov
and
or
enter
dec
mov
pop
cmp
add
mov
adc
fildl
pop
cmp
xchg
push
inc
mov
outsl
mov
xchg
ss
ficoml
xor
lahf
sbb
xchg
inc
in
les
mov
sbb
rcrl
cmpsl
out
pop
push
fadd
add
adcb
and
sbb
push
clc
loop
cmp
out
mov
fiaddl
sbbb
out
push
lcall
test
cli
movsl
das
shll
pop
mov
pop
sti
mov
idivb
pop
xchg
mov
dec
movsl
in
push
sbb
out
inc
jne
cwtl
sbb
arpl
jge
cltd
adc
adc
jbe
mov
cmpsb
js
inc
jb
sbb
jg
sbb
inc
inc
xor
pushf
out
xlat
jnp
loopne
add
addl
aaa
sbb
lea
sbb
jge
icebp
add
inc
mov
pop
stos
stc
sub
fsubs
test
outsb
fwait
jns
ficompl
enter
rol
mov
ss
lcall
jmp
loope
and
inc
pop
xchg
aad
testl
jo
out
push
jno
jge
out
adc
inc
or
jns
pop
rorb
iret
inc
xchg
or
out
sub
icebp
mov
pop
xchg
iret
lock
inc
data16
or
adc
mov
fs
pop
loop
movsb
loopne
cmp
pop
and
and
push
cltd
push
aad
cmp
mov
dec
pavgw
fsubrl
test
mov
jns
push
test
scas
out
jp
mov
cmpsl
gs
xchg
lcall
pop
sbbl
and
mov
cmp
out
add
aad
xor
cmc
push
ds
lcall
cmpsb
xchg
mov
xchg
das
cmp
loopne
pop
cmpsl
xor
divb
mov
shrb
lock
sub
ds
aaa
nop
and
dec
push
dec
popf
dec
test
loope
test
push
push
xchg
std
or
cmp
or
xchg
ret
arpl
into
cmp
subb
out
lret
pop
rolb
ljmp
addb
shlb
inc
push
aam
hlt
mov
ret
int3
loope
or
dec
adc
dec
aas
adc
and
aas
xor
and
add
dec
sub
mov
int
es
bound
push
and
push
push
stos
pop
orps
and
mov
outsl
xor
mov
cli
push
call
leave
cmp
gs
idiv
inc
mov
ljmp
sbb
int
dec
adc
subb
ss
adc
pop
push
add
addl
push
push
sub
outsb
inc
mov
outsb
mov
lock
call
lods
enter
push
mov
mov
shr
xor
mov
xor
or
mov
mov
mov
shrd
jmp
pushl
and
push
mov
gs
adc
xor
adc
mov
fs
mov
outsl
pop
cmp
arpl
mov
jo
mov
pop
mov
popf
push
je
into
shrb
mov
loope
inc
nop
inc
test
call
call
imul
aas
push
dec
cli
bound
hlt
pop
mov
dec
or
jmp
push
inc
rorl
adc
cmpsb
dec
pop
call
sub
sbb
adc
je
pop
movsl
pushf
lret
cmpxchg
aaa
xchg
sub
sub
inc
out
push
lods
xchg
aad
test
inc
cmp
test
mov
xchg
push
mov
sub
pushf
mov
and
ret
xorb
mov
jo
mov
in
mov
popf
dec
out
mov
test
fdivs
dec
cmp
ja
adc
and
mov
pause
fsub
xchg
add
into
popa
loopne
lret
ror
and
mov
push
xor
push
dec
mov
dec
inc
sub
push
and
mov
xchg
ds
fdivr
scas
or
dec
je
xchg
mov
stos
xchg
fists
push
out
ret
sti
test
mov
xchg
test
jo
jecxz
dec
jl
stos
int3
loope
sub
mov
jmp
vaddss
aam
and
jne
and
jns
call
cmovle
call
inc
das
and
dec
subl
adc
inc
cmp
repz
cmpsl
xor
xor
jecxz
dec
bound
lds
and
fs
inc
mov
adc
mov
nop
negl
push
in
push
push
dec
dec
add
jle
add
adc
hlt
call
rcrb
std
out
fnstenv
notb
jmp
stos
mov
shll
push
ret
inc
push
cli
jb
sub
xor
sbb
test
xchg
stc
or
adc
sub
das
inc
arpl
xchg
push
jbe
sub
pop
push
lret
sbb
xor
lcall
popl
mov
mov
cmp
notl
and
pop
out
in
cmp
rorb
pop
ds
insl
fstps
mov
cmpsb
dec
add
push
push
push
lods
xor
push
adc
and
mov
cwtl
orb
scas
jmp
lret
aaa
push
mov
icebp
xchg
scas
sub
out
bound
jle
test
or
inc
inc
mov
pop
push
mov
iret
shlb
adc
jne
mov
sub
jp
outsl
sub
arpl
sbb
dec
or
stc
adc
ds
inc
jo
mov
es
fildll
push
lret
outsl
in
dec
lret
mov
je
push
push
cmc
push
shll
cmp
test
data16
xchg
andb
mov
sarl
test
mov
ret
popa
aaa
jnp
lods
xor
popf
mov
or
les
pop
jle
pop
mov
xchg
repz
xor
fldcw
mov
imul
arpl
pop
insl
outsb
or
lret
push
dec
inc
cmp
ss
jae
jg
mov
ret
out
add
and
mov
call
rorb
cltd
jmp
cli
nop
lds
lahf
mov
jmp
lahf
arpl
les
out
mov
sbb
das
std
in
push
cmp
push
adc
dec
shr
mov
mov
xor
xor
or
mov
movb
movb
movzbl
shl
mov
xor
add
push
add
mov
movb
pop
mov
movb
mov
movzbl
cltd
jmp
adcl
dec
in
enter
std
jle
cmp
adc
adc
adc
fsts
sbb
leave
out
out
adc
mov
or
mov
ja,pn
jl
lahf
lods
sub
sub
inc
addb
sbb
push
sbb
xchg
daa
imul
xchg
xor
andb
andb
sub
push
stos
add
xchg
sti
or
or
jecxz
fwait
hlt
lahf
mov
cwtl
push
insl
lret
jp
push
sti
xor
lock
mov
insl
out
xchg
sub
incl
aaa
bound
lods
jg
loop
fnstsw
dec
sbb
les
dec
in
jnp
cmpsb
push
or
test
mov
fwait
lret
jns
sahf
call
xchg
cmc
pop
pop
jns
shl
add
push
and
fwait
ds
ficoml
and
xor
cmp
pop
hlt
pop
sbb
xchg
pop
std
pop
stos
and
je
mov
xchg
aad
test
loop
sub
and
aaa
cs
xor
andb
jg
scas
mov
push
mov
out
mov
push
movsl
jne
push
mov
jmp
lods
iret
cli
pop
js
inc
es
sub
pushl
fsubs
lea
ret
rolb
scas
push
lock
shlb
xor
add
call
mov
in
int3
sbb
ljmp
mov
imul
ja
cmp
lods
jbe
add
in
in
enter
out
xor
movsb
stc
fimuls
pop
sub
mov
aam
mov
inc
pop
pop
mov
fwait
dec
jge
jb
scas
sub
fbld
mov
xor
mov
das
pusha
inc
insl
push
inc
hlt
or
popf
hlt
shlb
sub
jle
adc
or
push
dec
ljmp
dec
fsts
mov
dec
int3
insb
popf
test
xchg
push
loopne
fwait
push
in
lods
xchg
xlat
pop
pusha
inc
sbb
pusha
rcr
pop
and
sub
repnz
lock
dec
sub
ja
push
mov
push
icebp
hlt
mov
mov
xor
inc
or
aad
loop
dec
add
cli
cmp
mov
leave
fcomp
push
insl
scas
int
cmp
jle
push
mov
jb
fcmovnbe
push
mov
leave
out
pop
js
mov
dec
xor
dec
fwait
out
mov
mov
jle
rcrb
fnsave
sbb
jae
add
mov
pop
sbb
pop
dec
out
je
or
or
push
lcall
cmp
cmpsl
movsb
sub
mov
repnz
mov
adc
mov
mov
lcall
stos
push
nop
mov
xlat
push
cmp
mov
mov
lods
cwtl
sarl
lods
js
movsb
xlat
rorb
xchg
icebp
or
pop
mov
mov
cmpb
imul
sbb
adc
sub
fadd
jno
inc
inc
pop
jbe
xchg
mov
psadbw
into
mov
xchg
xchg
cmp
dec
dec
or
es
pop
sbb
jb
mov
dec
es
and
xor
push
dec
pop
jl
loopne
insb
mov
mov
mov
lods
enterw
aas
sahf
das
sub
mov
daa
inc
dec
cmpsb
js
jmp
adc
mov
cmc
mov
mov
addr16
fs
idiv
imul
cld
int
iret
cmpsl
repz
lods
fisttpl
or
dec
repnz
xor
mov
jno
mov
xchg
sub
jbe
loopne
mov
sarb
add
mov
or
mov
add
cmp
jae
mov
jmp
js
jb
sub
cmp
mov
mov
xor
adc
adc
adc
fidivs
adc
sbb
jb
add
decl
mov
aam
mov
imul
daa
ret
jecxz
ds
pop
xor
push
sub
std
pop
and
xor
hlt
xlat
lret
repnz
gs
xchg
roll
dec
or
out
jnp
jmp
and
lea
les
popa
fadds
cmpb
add
push
mov
mov
jmp
sub
xchg
std
in
nop
cltd
dec
out
inc
sub
jl
mov
lahf
lret
pusha
sbb
stos
xor
sarl
in
pop
test
je
push
mov
xor
scas
popf
xchg
pop
cwtl
out
hlt
xchg
push
sbb
idivl
aaa
push
and
jo
int3
mov
xchg
sub
add
dec
pop
add
stos
or
movsl
fiaddl
lea
mov
cli
mov
jae
pushl
jmp
pop
outsl
les
jg
dec
ja
and
pop
inc
repnz
fstpt
je
repnz
pop
jle
jg
xchg
pop
xor
call
in
cmp
mov
lock
jp
lods
mov
push
jmp
pop
fldcw
in
xchg
scas
stos
enter
scas
pusha
inc
cmpsb
jno
mov
jle
adc
jmp
inc
adc
mov
fsubs
faddp
out
mov
dec
mov
jg
repnz
aaa
jbe
xchg
jne
xor
add
inc
aaa
std
scas
cld
sbb
in
mov
fwait
adc
mov
test
inc
lcall
ret
inc
es
bound
pop
sbb
cli
mov
movsb
lcall
inc
mov
ror
add
push
and
xchg
mov
nopl
les
inc
mov
cmpsb
jae
int
sarl
imul
cmp
cltd
push
iret
pop
xor
aas
push
flds
inc
xor
dec
jno
out
push
xchg
repz
jnp
mov
imul
data16
add
outsl
or
push
pop
test
xchg
and
stc
iret
jno
int3
cwtl
mov
cmp
mov
jnp
lahf
and
xor
add
mov
xor
outsb
addr16
inc
pop
dec
movsl
mov
pushf
sbb
cmpb
gs
mov
push
mov
lock
xor
dec
jecxz
adc
push
arpl
inc
pop
sbb
cwtl
mov
loope,pt
mov
and
cmp
rolb
fstpl
xor
fwait
rolb
mov
in
bound
pop
adc
daa
push
sbb
mov
mov
clc
and
hlt
sub
std
cmc
pop
lock
adc
mov
mov
data16
push
fstpl
ret
xchg
in
insl
xchg
pop
mov
fdivl
sub
loop
and
sti
sbb
and
sahf
dec
aaa
jp
jb
lock
cmp
shr
shll
sarl
mov
call
outsb
cmp
sbb
xchg
mov
push
pop
movsb
in
pop
int
mov
roll
movlhps
xlat
stc
cmp
inc
adc
cmpsb
add
leave
fdivr
push
add
std
cmp
jle
inc
xchg
jmp
insb
mov
or
push
mov
push
lods
add
jno
movsb
and
xchg
or
sub
stos
xor
pop
cmp
jp
jl
lock
stos
orl
xchg
or
xchg
mov
shrd
xor
jmp
mov
popa
lcall
adc
xor
adc
dec
hlt
test
lret
int3
call
inc
test
repz
inc
or
mov
sub
push
clc
push
sarb
push
les
or
cwtl
dec
xchg
popa
cld
das
or
cli
insb
cmpsl
dec
inc
cwtl
push
imul
test
imul
std
adc
pusha
pop
sbb
mov
pop
sbbb
test
into
aad
aas
mov
add
pop
xlat
or
lods
scas
aas
std
push
lcall
mov
adc
cmp
out
mov
mov
inc
inc
fstp
fnstcw
inc
xchg
xchg
xchg
adc
rclb
scas
lret
in
lods
jge
fstpl
push
orl
push
sub
popf
sahf
xchg
xchg
jno
add
mov
cmp
dec
outsb
data16
jl
sub
movsb
ret
test
je
cmpsl
call
bound
sub
cmp
xor
sbb
inc
pop
push
jg
jmp
sbb
sub
daa
push
std
stc
popa
sub
mov
aad
fisubrl
mov
mov
push
std
adc
aad
clc
out
dec
dec
in
and
insl
in
nop
pop
mov
jae
mov
sub
jo
gs
pusha
xlat
je
iret
jb
sarb
mov
test
ficoms
popa
dec
ss
cs
inc
fidivs
nop
fxch
jns
std
popa
imull
cltd
xchg
pusha
push
out
mov
push
cmp
cmpsl
dec
inc
add
pop
push
cli
xor
cltd
shll
orb
sbb
lahf
mov
push
dec
or
mov
addr16
push
mov
out
daa
and
mov
add
or
cmc
fdivrl
inc
add
inc
dec
jno
loop
aad
cmp
loopne,pn
test
add
ds
mov
test
cltd
fldl
fdivrs
xchg
fidivs
push
int3
aas
rcrl
or
les
out
mov
in
jg
pop
mov
xchg
mov
push
sbb
mov
mov
lock
fwait
push
pop
daa
aam
sbb
pop
xor
mov
pop
mov
add
stos
clc
inc
fsubs
mov
pop
push
sbb
xchg
sarb
xchg
xor
cmp
pop
outsb
pushf
cmpl
mov
mov
out
test
sbb
aaa
jb
adc
int
mov
pushf
mov
int3
dec
fists
inc
xor
xor
xchg
inc
fstl
add
dec
icebp
lret
rcll
lods
xchg
xorl
fwait
sub
pop
mov
aas
rclb
out
scas
lret
cmp
movsl
mov
jp
mov
fisubl
add
jmp
inc
cmp
pop
pop
xchg
push
and
sbb
jns
popl
or
movsb
enter
int
andl
bound
xor
xchg
or
xchg
aam
inc
sub
ds
addl
jb
sub
les
aam
dec
and
cltd
or
jo
mov
push
inc
das
js
push
sbb
jge
dec
punpcklbw
push
cmp
pushf
pop
mov
or
mov
mov
outsl
in
aad
loopne
mov
and
addr16
shlb
mov
adc
aam
cmp
dec
daa
sub
xlat
or
sub
jno
cmp
jp
jno
xor
in
vandnpd
sub
fcoml
call
push
xor
lret
mov
les
xlat
and
int
stc
jae
cmp
movsl
cmpsb
sbb
es
jae
inc
lret
ljmp
mov
call
push
in
xor
shl
or
mov
pop
leave
ret
push
mov
sub
push
push
push
movl
jmp
test
sbbl
pop
sbb
jle
cmpsb
sub
int
adc
fmull
adc
lcall
jb
loop
inc
mov
jmp
popa
jg
outsl
sbb
mov
push
sub
sub
iret
adc
inc
fiaddl
mov
mov
jp
inc
data16
notb
out
cmp
imul
xlat
adc
sub
ds
inc
adc
pop
adc
mov
jnp
int3
divb
jns
dec
hlt
stos
sbb
add
xchg
loop
or
adc
or
out
mov
cmp
sbb
push
cmp
jp
push
clc
lock
sub
test
add
mov
in
rcl
xchg
jo
in
fmuls
loop
shrl
leave
icebp
test
ds
dec
dec
inc
dec
cmp
not
in
jmp
data16
test
ficomps
jg
aad
imul
xlat
pop
shl
insl
out
int
fistl
mov
push
testl
sub
or
fstpl
into
addr16
decb
mov
or
mov
xchg
sbbw
xor
jecxz
mov
xchg
jp
mov
inc
push
pop
mov
sti
push
sbb
bound
or
enter
aas
push
ret
sbb
rorb
insb
movsb
mov
out
xlat
xchg
xchg
jno
mov
inc
jnp
bound
mov
inc
cvtdq2ps
popf
orl
mov
inc
push
in
xchg
sbb
insl
lret
cs
int3
and
lods
jmp
mov
jns
xchg
jne
xchg
cwtl
push
es
push
hlt
ret
jecxz
xchg
cmp
incl
and
mov
xor
ja
cld
pop
and
jg
enter
and
jne
sbb
lods
pop
mov
pushf
add
ret
jle
jecxz
inc
sub
xor
or
or
mov
roll
es
add
movl
movl
movl
movl
movl
movl
xor
inc
mov
movl
mov
mov
sub
add
add
imul
add
xor
jmp
xchg
add
cmp
scas
insb
inc
mov
js
sbb
adc
movlps
mov
mov
test
push
into
mov
mov
xchg
dec
rcrl
je
cs
lcall
nop
mov
xchg
out
pop
sub
roll
ret
shll
stc
out
push
andb
xchg
jge
push
icebp
jbe
aam
add
cld
mov
push
cmp
lods
xor
mov
xor
int
mov
jns
mov
xor
mov
cwtl
movsb
push
lds
nop
add
mov
repz
cmpsb
lret
lea
inc
in
xchg
and
ja
clc
sbb
aad
arpl
nop
add
jb
mov
and
pusha
dec
mov
ljmp
push
mov
mov
mov
in
sub
negb
scas
mov
pop
out
xchg
adc
sub
pop
sub
je
cmp
scas
in
cmp
loope
push
lea
dec
iret
xchg
xlat
and
push
stc
lods
in
mov
mov
push
adc
sub
jge
fs
stos
inc
mov
stos
loopne
pop
or
fwait
push
cmp
push
fmull
ss
mov
mov
pop
in
cwtl
pop
add
and
ja,pn
add
sbb
dec
and
mov
iret
mov
out
xchg
and
dec
mov
inc
inc
pmaxub
outsb
sub
sub
dec
inc
inc
hlt
je
mov
pop
or
dec
cmp
mov
xor
out
mov
inc
and
xchg
lahf
and
push
push
insl
test
xor
leave
jmp
pop
mov
add
loope
movsl
xor
push
pop
repz
dec
and
inc
les
mov
jge
xor
sbb
mov
mov
pop
xor
mov
jp
test
aam
fdivrs
adc
add
inc
hlt
popa
cmp
lock
inc
cld
stos
and
add
add
add
stc
or
popa
imul
nop
js
inc
xchg
fmull
adc
mull
je
add
mov
mov
push
adc
rorb
icebp
imul
sahf
inc
inc
lret
and
std
scas
fwait
jl
mov
jbe
add
mov
fs
insl
or
fsts
jge
sbb
adc
out
cmpsl
cmp
stos
into
sub
or
test
lret
or
mov
lock
fmull
daa
cld
xor
nop
lahf
pop
or
aaa
outsb
or
sub
dec
adc
call
movsl
cli
add
pop
add
jno
sub
push
stos
fnstsw
jp
dec
loopne
sbb
xchg
xor
loop
sbb
lahf
mov
add
aas
push
push
cltd
mov
ss
leave
shlb
loope
lret
adc
das
mov
repnz
faddl
rol
or
mov
fcoml
sti
cmc
mov
or
inc
adc
into
jno
cmp
stos
dec
divl
sti
cld
sub
push
mov
pop
ja
mov
gs
cmp
int3
hlt
idivl
loope
stos
pop
sbb
das
ret
leave
cmpsb
sub
scas
stc
mov
int3
lods
xchg
and
into
mov
ret
std
mov
mov
fistps
lock
loope
add
cmp
xchg
pop
mov
jmp
and
xchg
scas
adc
sub
fidivrl
jo
mov
cs
shlb
cmp
into
jl
xchg
es
inc
outsb
lock
scas
jns
add
mov
or
xor
and
call
sub
mov
shll
data16
imull
cld
add
fiadds
loope
xor
faddp
pmulhw
in
jp
aaa
fadds
ja
pop
sub
and
pop
pop
arpl
jo
sub
mov
movsb
sub
ljmp
or
push
dec
cmp
or
add
mov
and
mov
sub
mov
mov
mov
add
or
sub
xor
sub
mov
mov
mov
mov
mov
and
xor
xor
div
lea
mov
add
mov
and
mov
imul
mov
sub
cmp
jbe
push
pop
mov
mov
movl
movl
movl
mov
movl
jmp
and
cmp
aaa
sbb
bound
sarb
stc
test
fmull
adc
push
shll
cmp
outsb
sti
popf
mov
mov
nop
loope
xor
mov
mov
push
add
add
sarl
mov
pop
dec
xchg
scas
and
in
mov
mov
dec
test
popa
cmp
sti
sbb
rcll
bound
push
mov
xlat
cwtl
mov
mov
pop
add
pop
pop
mov
test
cmp
loopne
rolb
xchg
cmpsb
inc
out
xchg
sub
mov
xor
xchg
cmp
mov
enter
cwtl
lret
stos
inc
gs
ret
popa
inc
sbb
push
adc
pop
insb
mov
loop
out
int3
xchg
cmp
fadds
lret
imul
adc
pop
jnp
cs
pusha
mov
shrl
xor
mov
mov
pop
cmc
or
lret
xchg
roll
add
mov
lds
or
adc
mov
push
sub
iret
sub
xchg
inc
jbe
xchg
cmp
cmpl
add
xchg
aaa
push
xchg
pushf
adc
or
jno
or
mov
mov
dec
es
je
inc
adc
cmp
sub
add
jg
mov
les
jno
jp
or
loop
cli
in
push
inc
add
mov
pop
fisttps
xor
je
dec
and
pop
inc
sbb
in
sub
and
push
xor
insb
cmpsl
daa
or
pop
jnp
out
sbb
movsl
cmp
push
into
addr16
xchg
and
dec
push
jp
xor
inc
ja
negl
addr16
mov
lods
cmp
mov
cltd
iret
xchg
xchg
pop
in
out
push
adc
dec
sub
std
sub
cli
iret
sbb
jae
ret
out
sbb
in
jo
imul
sub
sbb
adc
arpl
loope
xchg
jg
and
sub
dec
test
pop
jae
inc
hlt
cmp
add
xor
movl
mov
mov
sub
div
mov
xor
mov
div
jmp
mov
xor
jns
fldln2
jle
pusha
adc
adc
adc
movlps
adc
dec
or
push
mov
movsl
jb
popf
fists
lret
lock
decb
lods
jnp
jno
dec
jnp
mov
mov
repnz
sub
jmp
sub
rolb
adc
dec
lock
adc
daa
scas
adc
inc
cmc
adc
and
iret
aas
fldl
frstor
imul
sub
shlb
mov
push
ljmp
jne
aaa
xchg
stos
jle
add
sti
adc
dec
dec
lods
sbb
push
jo
out
je
pusha
cvtpi2ps
testb
sbb
xchg
inc
jle
sub
popf
iret
rorl
xchg
mov
mov
jae
sbb
cld
into
lods
jge
xor
ret
enter
inc
cmpb
repnz
jg
mov
pushf
test
cmp
mov
imul
cli
in
leave
out
jnp
or
shlb
sub
mov
xchg
leave
test
pop
mov
adc
or
or
aaa
scas
adcl
push
hlt
xor
cmp
arpl
jmp
and
das
inc
pop
mov
popa
xchg
adc
in
cmp
sahf
sbb
shlb
subb
jne
arpl
xchg
pop
stos
cwtl
inc
stos
xor
sbb
sub
or
lods
and
push
jg
lahf
incb
and
andb
test
sbb
imul
mov
push
dec
mov
sbb
out
sahf
pop
sub
ljmp
ret
cltd
xor
mov
aam
jp
es
cld
lret
sbb
and
xor
pop
sbb
mov
ljmp
lcall
sahf
sbb
lcall
std
mov
lea
inc
shr
aas
insl
mov
jmp
roll
mov
cs
dec
jae
mov
mov
adc
fmull
adc
jo
lcall
add
sub
pop
mov
icebp
sahf
test
sub
push
out
inc
ljmp
addr16
fsubs
std
in
jnp
rorl
xchg
mov
cmc
mov
push
insl
bound
adc
retw
int3
pushf
rclb
popf
ret
in
push
sbb
pop
leave
add
sub
out
cwtl
pop
lods
shlb
mov
test
movsb
inc
ljmp
ljmp
xchg
cmp
pushf
shr
xchg
popf
int
jnp
pop
jg
add
mov
inc
sbb
and
aaa
js
aam
pop
scas
insl
mov
or
rclb
mov
fidivl
fistpl
aas
push
push
rolb
mov
aas
lcall
scas
das
mov
xchg
pop
push
lock
movsb
inc
or
popf
sub
pusha
mov
push
inc
mov
xor
cmp
mov
mov
outsb
or
add
cmp
and
sbb
enterw
mov
sub
add
loope
and
lcall
xlat
arpl
div
pop
ret
push
lods
out
loop
push
in
sub
daa
loop
xchg
xor
cld
loopne
adc
cmp
push
xor
cs
clc
or
fldt
push
sbb
xchg
inc
cmpl
adc
sub
xchg
les
xorl
cmpsb
and
popa
daa
add
test
or
out
pop
stos
mov
jnp
icebp
sti
lret
fistps
int3
cmpsl
mov
cwtl
push
sahf
out
insb
test
popa
aad
or
inc
je
adc
sub
pop
push
jb
loope
pusha
notb
test
cwtl
cltd
lods
mov
xchg
incb
outsl
shrl
test
cwtl
aaa
sub
xor
mov
das
mov
shl
icebp
xor
mov
mov
imul
mov
add
div
mov
mov
sub
sub
xor
div
mov
add
cmp
jmp
mov
aaa
cmpsl
sbb
test
add
js
or
adc
movlps
mov
cld
jns
leave
fcoml
pushl
call
aas
inc
stc
aas
lods
mov
or
mov
or
imul
and
push
xchg
sahf
push
xchg
out
mov
movsb
sbb
adc
add
cs
icebp
add
dec
ret
roll
xchg
imul
cld
pusha
ja
enter
je
stc
cmp
js
in
add
mov
movsb
mov
shrl
cld
push
adc
repnz
cwtl
dec
ja
cmp
jg
stc
push
stos
testl
fdivrs
and
add
shl
mov
sbb
jg
pop
sub
mov
sub
jae
test
adc
shr
in
pop
call
in
sbb
and
inc
aaa
insl
es
sbb
pop
push
std
and
add
cmpsb
test
push
repnz
pop
iret
or
mov
out
fsubl
orl
dec
shrb
addr16
mov
aam
pusha
pop
psrlw
sub
sub
mov
movsb
repz
and
xor
fists
cs
pushw
sub
inc
xchg
shrb
xchg
dec
lods
cmp
mov
xlat
call
sbb
jmp
jbe
jne
add
sub
pushf
das
cwtl
jae
je
push
or
adc
jge
rorb
mov
pop
mov
push
xchg
or
jno
xchg
jns
push
fsubr
into
inc
shrl
jno
notb
aad
outsb
ret
push
outsl
mov
xchg
and
in
pusha
bound
cmp
sbb
or
push
pop
xchg
test
hlt
mov
dec
push
mov
enter
sbb
jnp
sub
xor
inc
mov
jbe
or
cmp
pop
movsb
dec
xor
cmp
sahf
das
push
or
push
push
cli
orb
mov
add
xchg
pop
or
lock
push
scas
sub
pop
xchg
aad
fisttps
dec
jae
movl
movl
movl
movl
xor
movl
movl
mov
push
pop
div
mov
mov
mov
sub
mov
mov
imul
mov
xor
sub
add
and
mov
sub
mov
sub
mov
sub
mov
mov
mov
mov
xor
add
xor
and
lea
mov
mov
add
div
mov
mov
sub
xor
jmp
popa
pop
fimull
dec
sbb
dec
neg
mov
inc
push
adc
fmull
adc
outsl
in
sbb
lret
movsl
inc
sub
into
shl
testb
xchg
xchg
addr16
ds
cmp
andb
gs
push
sbb
test
nop
pushl
dec
push
mov
jl
jae
xchg
cwtl
or
pop
mov
fistpl
imul
or
insl
push
mov
push
jne
adc
dec
pop
mov
and
scas
mov
dec
stc
xchg
xor
mov
clc
cmpsb
xchg
inc
mov
sti
icebp
dec
cmpsl
repnz
add
jae
dec
leave
sub
cmp
fisubs
stc
dec
aad
movsb
mov
daa
cmp
and
loopne
mov
push
cmpsb
adc
push
iret
pop
push
jg
popf
decb
or
pusha
push
inc
out
push
xor
dec
xchg
ja
and
adc
ficoms
push
adc
fs
dec
faddl
mov
cli
pushf
pop
add
shll
adc
std
add
jno
sti
das
and
lock
pextrw
pop
push
pop
adc
push
inc
cmp
pop
inc
bound
outsl
fwait
out
pop
aam
sbb
mov
push
insb
in
jbe
or
xor
adc
sbb
inc
pop
out
mov
or
mov
inc
add
cmp
psadbw
inc
int
add
jg
leave
imul
sub
loope
mov
shrd
cmp
iret
sahf
pop
or
sti
jp
paddb
sub
mov
xchg
scas
adc
addr16
popa
aas
push
lea
jns
fildll
scas
clc
mov
pop
mov
data16
fmulp
fiadds
dec
jae
aad
das
repz
clc
and
push
in
insl
repnz
pop
mov
sub
int3
jo
push
add
mov
push
jne
add
enter
sub
push
sahf
fildll
in
push
cltd
add
aas
outsl
imul
div
add
cmp
jb
jmp
add
cmpsb
pop
sahf
aaa
xor
mov
mov
push
add
adc
movlps
and
mov
outsl
cmp
xor
and
cli
pop
sub
xor
sbb
sti
test
jge
push
sbbl
or
jae
icebp
enter
imul
into
mov
popa
pop
fsincos
mov
pushf
mull
mov
push
sbb
pop
mov
jb
jmp
stos
jp
jb
sahf
jns
xchg
clc
hlt
xchg
scas
jne
stos
push
inc
jmp
icebp
cmc
hlt
in
scas
inc
iret
shll
test
lahf
lret
das
loope
negb
ret
sarb
jp
popa
mov
in
je
inc
lods
mov
jg
out
xchg
jle
pop
push
push
lea
push
rcrb
movsb
outsl
lret
int3
dec
cltd
xor
cmp
adc
adc
xor
xor
xchg
lcall
mov
pop
add
pop
rorl
fdivrs
add
xor
sub
mov
dec
popa
jns
push
dec
addb
xchg
xor
es
stc
sub
lock
addb
push
adc
jae
jnp
outsl
xchg
sub
fildl
or
je
dec
mov
mov
pushf
inc
jnp
and
mov
imul
push
loope
mov
das
bound
jnp
lret
and
mov
dec
mov
jb
push
lea
in
loopne
sub
in
ret
mov
loope
mov
mov
mov
fldenv
or
inc
repnz
int
xchg
test
jecxz
mov
sahf
sbb
jbe
mov
sub
or
add
xchg
fcoms
je
jb
jl
movsl
daa
dec
imul
jle
mov
jno
and
aaa
sarl
xor
popa
dec
ljmp
push
push
popa
and
je
insl
xchg
adc
mov
inc
xor
inc
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
add
and
xor
jmp
ja
fistps
pop
ja
outsl
popa
ss
pop
xlat
add
fmull
adc
aaa
dec
arpl
bnd
add
xchg
fadd
add
inc
hlt
pop
insb
cs
add
cwtl
sbb
outsl
notl
testb
inc
iret
test
test
cli
idivl
sub
xor
inc
mov
push
or
push
jo
jge
popf
cs
adc
adc
outsb
jns
pop
adc
lds
or
adc
pcmpgtd
sub
or
leave
pop
fildll
lret
mov
and
jmp
bound
imul
enter
inc
and
test
aaa
mov
sub
or
mov
mov
sub
sbb
rorl
push
lret
push
xchg
mov
insl
stos
mov
push
lods
icebp
je
lret
dec
outsb
jae
test
fldenv
rorl
nop
das
frstor
inc
adc
wbinvd
dec
cmp
pop
mov
sbb
mov
lea
mov
jnp
jns
and
fwait
fwait
icebp
mov
pushf
lret
fisubl
mov
jnp
fsts
xchg
xor
addr16
mov
imul
jns
nop
or
mov
sbb
push
pushf
call
sub
or
pusha
std
pxor
nop
scas
pop
sub
push
and
mov
adc
xchg
mov
pop
ret
sbb
dec
outsl
push
clc
shll
inc
rorl
fs
mov
mov
inc
incb
mov
fisttps
jmp
xchg
cmp
xor
inc
mov
icebp
roll
in
adc
sub
movsb
dec
aam
jns
pop
jo
test
sbb
push
out
jo
pop
fs
mov
stc
add
fwait
mov
cmp
jns
pop
in
lret
jge
pop
mov
lods
push
je
add
rcrb
inc
mov
sti
in
or
in
inc
std
out
test
stc
sub
test
add
enter
rorl
add
movl
mov
movl
movl
mov
mov
imul
xor
or
xor
mov
sub
mov
mov
jmp
lock
clc
test
inc
imul
mov
ljmp
movlps
push
mov
cmp
ret
push
ljmp
pop
into
sub
popf
popa
popf
sbb
int3
jbe,pn
cld
ret
sti
in
push
mov
and
sbb
mov
addr16
push
das
outsl
mov
jl
add
fisttpll
test
xlat
ss
bound
out
jo
adc
pop
adc
popf
clc
push
inc
mov
adc
subb
sub
pop
lods
jb
popa
mov
das
push
sub
mov
cltd
jmp
xor
sbb
adc
and
subl
pop
nop
jae
ljmp
insb
sub
addr16
push
je
inc
enter
lods
sbb
cmpl
push
lock
insl
lea
in
mov
pop
fnstenv
ja
in
jns
push
inc
loopne
mov
or
rclw
mov
movsb
fld
xchg
adc
mov
adc
mov
sbb
lods
add
clc
cld
aad
pop
jne
popl
mov
scas
add
pop
out
cmpsb
lret
xor
shl
mov
lds
push
mov
dec
xor
cmp
jne
pop
out
sbb
and
mov
adc
xchg
cmp
sar
repz
sub
hlt
push
and
or
push
inc
repnz
es
int3
xchg
jecxz
cli
fwait
jmp
cmpsl
mov
insb
jbe
mov
cli
mov
ret
mov
cltd
shll
lret
notl
or
xor
xor
ret
hlt
enter
fnstsw
das
roll
mov
push
xor
jg
dec
cmp
cli
mov
dec
xchg
or
and
push
or
mull
mov
pop
xchg
fcompl
stos
mov
pop
push
outsb
pop
jmp
cmp
pop
adc
push
inc
ret
loopne
ret
add
ret
div
mov
mov
sub
mov
mov
mov
mov
mov
imul
mov
imul
or
mov
or
xor
lea
mov
and
jmp
mov
pop
mov
insb
test
fdivrl
fmull
adc
lahf
push
ljmp
sub
popf
sar
jmp
icebp
es
lcall
jp
shlb
loope
xor
mov
xchg
mov
cmp
jmp
mov
arpl
sub
imul
in
fimuls
call
inc
es
xor
cld
push
cmpsb
jge
outsl
repnz
jecxz
test
sbbb
scas
clc
out
pop
je
adc
test
push
jecxz
and
sbb
jl
into
imul
push
fmuls
leave
or
jae
addb
pop
js
cmc
ret
mov
mov
mov
int
pusha
icebp
jno
pushf
mov
and
lds
and
mov
sahf
add
outsb
inc
and
push
xchg
stos
add
add
jbe
loope
ja
push
test
leave
mov
sbb
and
push
jle
cwtl
stos
das
sbb
ljmp
jmp
clc
popa
mov
subb
and
das
and
loop
sbb
xchg
or
cmp
movsb
ljmp
push
jbe
pusha
inc
push
xchg
cmp
jp
pop
pop
mov
popf
lcall
mov
mov
in
mov
mov
rorl
lds
cld
andl
aam
movsl
test
inc
ljmp
xchg
cmp
out
dec
addl
int
jecxz
or
orl
nop
xor
xor
xchg
stos
shlb
test
in
repnz
int3
add
aaa
add
dec
pop
fldenv
fidivl
mov
int3
push
jno
aas
mov
inc
call
cmp
imul
adc
push
pop
into
std
and
xor
mov
cs
xchg
push
leave
dec
mov
push
cmp
sub
clc
dec
pushf
loop
add
xor
add
cmp
jne
pop
pop
pop
leave
ret
push
mov
sub
push
push
movl
movl
mov
mov
add
or
mov
lea
mov
movl
movl
mov
mov
and
xor
mov
imul
xor
lea
mov
movl
movl
mov
xor
push
pop
div
mov
xor
push
jmp
push
jb
adc
mov
xor
cmpsb
dec
mov
sub
adc
adc
js
and
pop
mov
dec
or
mov
xchg
repnz
xor
push
sbbl
cltd
jns
addb
mov
lds
xor
sub
xchg
mov
mov
jo
adc
call
cmc
pop
fstps
xchg
add
dec
scas
scas
pushf
adc
push
inc
jp
cli
leave
psubusb
decb
out
movsl
pop
cmp
push
into
cmc
test
loopne
pop
sbb
in
arpl
xor
into
dec
scas
jl
or
sbb
adc
xor
daa
into
cli
cmc
je
lea
or
enter
push
stos
out
dec
inc
inc
jo
outsl
lcall
dec
mov
jp
pop
pop
mov
mov
test
dec
sbb
lahf
ret
outsl
xor
imul
das
xor
rol
stc
mov
into
cwtl
pop
push
jmp
mov
nop
adc
lahf
lret
in
inc
mov
sub
mov
inc
xor
sub
int3
shll
rcrb
inc
sub
xchg
hlt
in
cli
shll
sahf
cmpsb
or
pop
les
push
out
das
sub
pusha
in
push
jle
aad
daa
jo
sbb
add
push
ret
lret
lcall
pop
das
jns
test
xchg
mov
outsb
adc
push
mov
lret
cwtl
or
ud1
jge
loopne
and
xchg
subl
out
shrl
add
mov
ss
enter
push
fldt
adc
mov
jns
cmp
aad
lods
inc
fs
jmp
sbb
vmovhpd
shl
push
pop
jae
push
std
dec
cmc
movsl
push
xorb
inc
push
jl
fld
push
push
inc
hlt
in
mov
das
popa
in
cmp
fwait
lahf
push
mov
jo
xchg
cmp
xor
sbb
loope
orl
pop
out
inc
sti
je
aaa
adcl
insb
pop
movsb
push
hlt
mov
add
stc
test
in
fisttpll
ret
sahf
enter
adc
lods
jo
lcall
lea
outsl
push
movsb
sbb
jb
inc
xchg
mov
ds
or
hlt
in
imul
das
insl
cmpsl
inc
sbb
jns
insl
nop
jecxz
cmpsl
outsb
fldcw
call
adc
sbb
dec
mov
dec
fisttpl
mov
mov
mov
xchg
leave
call
imul
xor
pop
cmp
out
push
push
ss
stos
pop
lds
jo
mov
add
add
and
jmp
lds
add
jge
in
or
shrl
popf
les
fisttpll
pusha
loop
fstpl
cmpsb
ret
dec
mov
hlt
test
xor
out
shll
push
adc
push
jb
xchg
pop
cmc
das
jecxz
inc
xor
mov
push
mov
lahf
push
xchg
add
enter
lret
inc
and
xchg
cmp
lahf
dec
shll
decl
icebp
add
and
mov
sub
mov
movl
movl
movl
mov
mov
lea
mov
div
mov
lea
mov
movl
jmp
imul
in
push
pop
loop
xchg
js
icebp
scas
insb
mov
adc
jo
adc
shll
scas
jno
sbb
shlb
mov
sbb
pop
es
jl
cmpsl
adc
sbb
dec
add
call
mov
aas
call
cmp
inc
je
arpl
imul
je
sub
push
dec
sbb
adc
aaa
stos
sub
insl
je
push
sbb
lret
mov
shlb
mov
cmp
data16
cmp
mov
je
sub
xchg
lcall
pop
and
dec
ja
nop
lods
sbb
out
or
xor
xor
push
jecxz
ficoms
dec
test
xchg
mov
xchg
cmp
or
jne
call
clc
add
dec
ds
daa
xor
daa
in
ss
add
push
in
jge
andb
sarl
aam
and
xchg
mov
cmpsl
stc
ja
ret
jl
xor
mov
idivb
mov
orb
or
sbb
xor
jno
dec
jl
and
out
add
test
mov
xchg
imul
ds
xor
addr16
ja
stc
sbb
mov
push
in
xchg
ficoms
js
movsb
adc
add
xor
sub
xchg
and
loope
push
fwait
sub
and
xor
insl
cmp
scas
mov
shll
data16
inc
in
nop
or
rcrl
adc
mov
pop
outsl
inc
sub
sbb
jmp
stos
cli
push
repnz
push
test
pop
mov
mov
outsb
push
enter
cs
and
dec
jge
pop
cmp
out
sbb
pop
or
je
adcb
pop
decl
lods
int
clc
sbb
dec
jecxz
out
lock
xchg
xchg
jle
mov
xor
jae
pop
nop
mov
mov
repnz
call
pop
adc
daa
das
test
mov
fstpl
cpuid
cmpsb
scas
inc
xchg
testb
xorl
stos
xchg
popf
out
cmp
fadd
mov
inc
push
enter
adc
pop
dec
mov
adc
mov
cltd
inc
repnz
arpl
inc
stos
rclb
fcoml
loopne
cmpsb
int
lds
sub
in
mov
lcall
dec
lods
leave
frstor
js
push
icebp
sub
cmpsb
sub
push
mov
jae
sub
repnz
mov
fisttpl
mov
sbbl
je
add
out
xchg
idiv
mov
cmp
cmc
cmp
dec
mov
dec
stc
jnp
push
and
fistpl
adc
add
in
and
dec
imul
jo
je
push
cld
push
add
push
inc
or
mov
xchg
sbb
cmp
sti
and
inc
hlt
stos
cmp
mov
sub
sbb
stc
jp
xorb
xchg
and
sbb
jbe
outsb
movl
movl
mov
mov
xor
sub
mov
sub
xor
mov
movl
pop
mov
movl
movl
mov
mov
mov
xor
xor
div
mov
and
sub
mov
movl
jmp
mov
jo
pusha
popf
sbb
mov
pop
mov
adc
adc
ja
mov
int3
add
daa
inc
xchg
fisubl
notb
test
sub
push
add
scas
add
mov
repnz
movsl
cltd
and
add
dec
test
push
mov
int
inc
cmpsl
adc
pop
popa
sub
inc
jmp
mov
repz
rorb
cmp
out
ret
inc
and
pop
adc
inc
pop
sub
inc
sbb
or
and
movsb
sub
mov
xchg
cmp
cmp
xor
mov
mov
xor
icebp
pop
or
pop
cwtl
push
test
loope
and
adc
push
mov
mov
loop
fwait
mov
stc
and
sbb
xlat
xchg
fwait
test
inc
cmp
xchg
out
jmp
in
or
jl
xor
in
test
mov
inc
fwait
les
nop
cld
icebp
add
or
add
stos
mov
and
ret
aaa
int
int
addr16
mov
pop
loope
shr
aad
adc
loopne
and
hlt
jle
out
inc
xchg
test
inc
or
cmp
dec
js
sub
mov
lcall
scas
jp
sbb
pop
cmpsb
bound
dec
popf
sub
adc
jle
js
sub
inc
cltd
daa
pop
nop
outsl
or
out
cwtl
mov
mov
xor
push
pop
push
push
mov
bswap
xchg
lock
jmp
pop
jns
xor
lock
mov
rcr
aad
dec
inc
mov
js,pn
pushf
arpl
das
into
mov
xchg
cli
jno
in
dec
fiaddl
cmc
cmp
mov
gs
fwait
mulb
out
mov
pop
sti
cwtl
dec
pop
xchg
and
orb
cmp
push
add
push
int
insb
xchg
or
int
jmp
cmp
mulb
push
data16
into
xchg
shlb
test
pop
repnz
inc
sub
mov
movsl
mov
test
mov
sub
and
cmp
and
lret
jecxz
mov
sub
ret
mov
add
xchg
mov
addr16
lods
inc
out
adc
cli
nop
lock
lods
push
sub
xor
pop
mov
fwait
cltd
call
call
fwait
or
cmp
popa
notl
outsb
pop
stos
or
stos
mov
push
mov
sub
cmp
aas
and
test
push
or
sub
je
ds
sbb
lock
sub
test
fs
mov
mov
loop
sub
sahf
imul
mov
cs
leave
pop
sbb
sarb
cld
push
and
mov
data16
popf
adc
data16
mov
scas
cmp
jbe
aam
pop
xor
ss
fcomps
out
xchg
adcl
or
inc
lret
movl
movl
movl
movl
movl
mov
add
mov
xor
mov
or
mov
or
mov
and
mov
sub
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
jmp
sbb
or
jmp
bnd
adc
push
fstl
adc
adc
repnz
sbb
lahf
mov
push
or
sbb
adc
sbb
pop
push
and
das
repnz
repnz
adc
adc
aas
cmp
cmp
xor
outsb
aas
insb
jno
adcl
jns
cld
test
test
nop
fwait
mov
and
out
lret
and
addb
incl
or
and
xchg
movsb
out
or
push
lock
in
test
mov
pop
add
lods
push
add
cmp
pop
in
dec
cmp
imul
shlb
dec
push
call
mov
sub
jbe
push
out
jne
das
aas
push
pop
or
lds
leave
dec
fisubrs
xchg
adc
add
mov
jnp
mov
dec
and
out
leave
push
cmc
lods
cmp
mov
xor
push
push
loop
push
xchg
mov
push
jp
xchg
dec
loope
sub
lcall
push
subb
mov
mov
enter
add
clc
das
xchg
pusha
mov
mov
aaa
out
inc
iret
adc
and
movsb
popf
xor
mov
mov
dec
mov
cmovno
into
aad
repnz
or
sub
aas
movsl
cmp
insl
out
les
int3
cmp
mov
mov
add
divl
xchg
stc
adc
sahf
cmp
adc
jp
hlt
push
pop
fwait
sbb
sub
xchg
mov
and
iret
bound
stc
fwait
mov
fsubrl
mov
mov
jns
imul
insl
cmp
cs
aam
stos
mov
arpl
lods
push
test
sub
fwait
movsl
inc
out
and
mov
movsb
ret
mov
inc
jl
testb
push
sub
jno
ss
cli
dec
pusha
dec
xchg
and
ret
jg
or
in
fdivrl
nop
fwait
pop
mov
out
lds
fs
popa
add
in
jl
loop
mov
sub
mov
jmp
je
pop
or
insl
cmovge
movsl
xor
int3
test
sbb
lea
xchg
dec
das
add
sub
test
or
mov
add
pop
scas
scas
inc
das
popa
imull
mov
test
pop
xor
ret
pop
lock
dec
loopne
jbe
mov
xlat
mov
mov
mov
shll
out
repnz
pop
mov
jno
iret
js
stos
or
sti
stos
add
insl
pop
inc
inc
es
ljmp
pop
jecxz
or
movsl
mov
fwait
cmp
sti
add
loopne
cmp
ja
sar
aad
sbb
inc
and
cmp
push
aam
jne
mov
xor
mov
cld
mov
mov
mov
fucomip
arpl
cmp
xorl
sub
inc
push
pop
cmpsl
dec
ss
les
aad
sub
jle
lods
or
push
outsb
and
test
push
scas
popf
cwtl
lret
inc
in
jno
add
in
outsb
add
add
inc
dec
and
cwtl
lods
iret
push
cmpb
adc
adc
in
loopne
lret
sub
aad
lea
pusha
mov
ja
adc
ljmp
aaa
js
cwtl
jge
push
es
mov
int
dec
xchg
xor
mov
or
xor
sub
mov
std
xlat
ret
xor
ljmp
outsl
ljmp
ss
mov
jl
sub
jg
pop
ja
xchg
popa
std
gs
mov
les
xorb
mov
or
fsubr
or
adc
and
stc
bound
sbb
inc
orl
fs
out
xchg
data16
xchg
insb
mov
cmpsb
jp
jecxz
pusha
jle
pop
lods
xchg
test
mov
ja
mov
insl
testb
jbe
cs
mov
xor
ret
pop
push
inc
xchg
int
outsl
xchg
lods
dec
inc
nop
xchg
movsb
idiv
nop
mov
mov
pusha
icebp
cs
int
add
jecxz
sub
jecxz
jmp
xor
imul
adc
sub
and
mov
iret
push
ja
cmpsb
test
mov
and
ds
pop
dec
dec
lahf
or
sbb
dec
adc
gs
jg
or
je
repnz
push
mov
cmp
xor
es
pop
inc
test
pop
iret
mov
loop
mov
insl
push
dec
jbe
push
and
mov
sahf
mov
stc
insb
rorb
cmp
sti
dec
fstpt
dec
inc
pop
clc
xchg
inc
jg
cmc
imul
adc
push
dec
inc
inc
repnz
pop
test
mov
dec
mov
iret
aas
repnz
push
xor
sub
rcl
mov
jb
lar
jmp
roll
pop
jmp
pop
imul
mov
push
ljmp
das
loope
dec
ss
test
fisubrl
je
inc
fidivs
pop
pop
add
ds
es
mov
mov
inc
pop
jg
in
hlt
dec
lret
pop
dec
lea
xlat
lret
push
pop
sbbl
ss
add
icebp
inc
push
mov
xchg
and
mov
jmp
add
lock
sbb
push
loopne
cmc
mov
popf
cmc
add
xor
bound
xchg
stos
or
cmp
pop
xchg
xchg
mov
int
jbe
shll
and
jo
jle
insl
mov
call
or
jnp
arpl
adc
cld
call
push
xlat
add
push
add
mov
push
dec
xor
pop
std
cwtl
mov
fcompl
int
pop
mov
and
cs
daa
pop
sub
subl
or
adc
mov
test
inc
push
lods
adc
loop
pop
inc
incl
fcompl
out
sub
pop
stos
mov
mov
add
adc
or
mov
or
jmp
xchg
decl
cmp
adc
stos
in
ret
lret
adc
jo
adc
pop
sub
loop
xchg
mov
mov
push
icebp
xlat
lcall
stos
adc
out
push
clc
sbb
xchg
cmc
arpl
clc
sub
or
in
or
iret
jl
shrb
aam
rcll
out
sbb
jecxz
popa
jnp
jp
into
xchg
call
ret
push
fildll
xor
lds
mov
cwtl
inc
inc
xchg
push
daa
flds
mov
push
scas
jae
out
jne
out
sbb
insl
stc
mov
and
fcompl
sbb
inc
std
xchg
arpl
adc
fnstsw
adc
mov
cltd
ja,pt
and
repz
imul
mov
and
jnp
fildl
push
clc
xchg
dec
arpl
pop
fiaddl
mov
cmp
mov
xor
aad
scas
fs
mov
mov
mov
loope
loop
dec
daa
mov
mov
bsf
xorb
mov
in
pop
in
xchg
out
ret
jmp
push
cmp
sbb
fdivrs
dec
in
fisttps
xchg
mov
cltd
cmp
jle
mov
pop
idivl
fisttps
repnz
fstps
scas
leave
out
fistl
repz
pusha
push
sub
les
stos
sub
xlat
xchg
xchg
push
pop
xor
push
cmp
pop
and
lret
jne
inc
inc
loop
dec
sub
sub
gs
pop
xor
sub
push
mov
mov
std
mov
inc
jno
inc
pusha
ja
test
jmp
cmp
push
dec
xchg
mov
mov
or
dec
and
imull
cmpsl
and
mov
add
jmp
and
inc
dec
insb
movsb
and
movsl
shlb
scas
mov
lods
cltd
scas
les
lret
fs
jl
add
out
andl
xor
pop
lret
dec
sub
or
jge
add
lret
jns
pop
push
ficomps
dec
mov
or
js
inc
mov
out
jg
sub
xchg
out
sub
dec
fcmovnbe
xlat
jne
ret
mov
lock
lods
add
int
dec
pop
in
jg
push
je
lds
rcrb
out
push
cmpsb
mov
mov
cmpsl
add
in
jmp
addr16
mov
pop
and
mov
lret
sub
xor
adc
push
push
sti
pop
xor
jbe
lds
movsl
pop
cmpb
pop
orb
mov
psubsw
or
insb
jle
jnp
cmpsl
add
push
data16
mov
callw
mov
inc
pop
fstps
inc
sbb
inc
nop
cmc
iret
sbb
imul
stc
aas
icebp
push
aam
mov
ss
xor
sbb
aam
jne
adc
mov
imul
decl
mov
test
mov
sbb
mov
jp
mov
std
enter
roll
mov
mov
or
mov
sub
mov
sbb
mov
or
or
add
mov
adc
mov
movl
movl
movl
movl
movl
jmp
sub
cmp
mov
push
leave
adc
jo
adc
leave
jo
fcomip
push
cmp
mov
adc
and
out
sbb
out
call
mov
lret
shlb
ljmp
repz
fisubl
insb
test
mov
aad
lret
mov
cli
movsl
inc
mov
dec
idivl
int3
dec
dec
loope
sub
and
mov
xchg
fdivrl
pop
jae
or
mov
mov
mov
xchg
or
adc
push
sti
test
add
pop
icebp
inc
popa
rcrb
je
sub
sbb
es
push
mov
lock
es
lds
adc
cmp
inc
and
ret
out
pop
cwtl
inc
movsl
cmp
andb
dec
cs
xchg
adcb
add
fwait
xchg
lock
or
pop
aad
dec
insl
cli
sub
cmpl
out
mov
and
sub
dec
leave
xlat
data16
sub
push
xchg
xor
stc
or
mov
mov
lock
sbb
add
out
xor
int3
and
outsl
sub
sahf
or
jo
or
mov
es
arpl
das
scas
jnp
mov
pop
dec
jle
push
mov
inc
sub
push
pop
jge
fisubrl
fucom
adc
or
sub
and
adc
or
movsl
ret
cmp
add
int
mov
cmp
jb
push
jnp
adc
add
push
adc
pop
sahf
lcall
scas
in
pop
sti
sbb
les
ret
pop
lahf
xlat
xchg
clc
push
mov
std
decl
test
cmpl
stos
cmp
je
sub
xchg
mov
push
subl
movsb
data16
addr16
out
mov
cmc
stos
lret
leave
call
pop
mov
fsubrl
mov
and
pusha
or
pop
cmp
cmpsb
or
rolb
push
xor
sar
in
js
stos
pop
or
popa
push
in
mov
mov
mov
add
std
mov
sbb
imull
ret
jae
add
aam
cs
fldl
pusha
mov
arpl
scas
pop
lods
test
adc
mov
outsl
inc
ss
jns
std
push
fidivrl
sti
and
jbe
sub
push
rolb
aam
push
lahf
and
cwtl
mov
lea
fidivrl
cmp
mov
sti
xchg
insb
cmp
dec
cltd
aas
dec
or
jp
test
sbb
sti
inc
mov
faddp
addr16
xor
adc
test
aam
decb
sub
repnz
xchg
popa
jmp
mov
jns
movsl
fldenv
int3
adc
popf
jbe
out
jb
icebp
pushf
xchg
cmp
push
xchg
je
pop
andb
inc
and
pop
cmc
mov
imul
stos
sub
cwtl
sar
aad
shll
add
xor
test
lcall
add
test
call
inc
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
movl
mov
movl
movl
mov
or
add
mov
or
mov
sub
mov
sub
imul
add
mov
push
mov
lea
mov
xor
div
mov
lea
push
mov
mov
push
push
push
push
call
mov
mov
push
push
or
or
push
push
call
mov
mov
xor
mov
mov
mov
and
add
lea
xor
push
lea
call
mov
mov
mov
sub
xor
imul
add
xor
xor
mov
div
cmp
jne
mov
xor
mov
div
mov
mov
xor
sub
mov
xor
sub
or
lea
push
mov
push
pop
div
mov
xor
div
mov
mov
xor
xor
div
imul
sub
push
mov
add
push
mov
sub
mov
pushl
call
mov
mov
lea
mov
incl
mov
mov
xor
mov
xor
xor
and
cmp
jne
cmp
jne
mov
jmp
lea
mov
mov
mov
mov
mov
sub
mov
mov
mov
sub
mov
movl
jmp
xchg
xorb
daa
cltd
sbb
lcall
adc
adc
push
mov
ljmp
mov
clc
orb
scas
mov
repz
sbb
into
jb
sarl
in
xchg
cmpb
repz
push
scas
cmpsb
adc
jecxz
mov
incl
inc
lds
mov
das
adc
add
sub
out
pushf
mov
cmp
mov
xchg
daa
xorb
sahf
jmp
in
cltd
jbe
inc
aad
js
add
fcomp
jb
and
pop
push
mov
out
outsb
fldcw
clc
push
sti
push
shl
lods
jecxz
or
cli
mov
xor
sub
mov
data16
push
jp
shr
lds
cmp
pop
clc
adcl
and
shrl
pop
sbb
test
sbb
lahf
jp
repz
arpl
sub
or
shlb
jge
rol
aad
xchg
and
rcrb
jl
add
cmp
iret
xchg
sub
adc
sbb
sub
pop
cmpsl
add
into
outsb
out
jg
inc
sub
movsl
jge
bound
lods
push
or
pop
xchg
push
push
enter
ljmp
sub
int
imul
xchg
jae
adcl
mov
inc
sbb
xchg
lods
ja
sbb
jmp
int3
or
movsb
enter
lods
dec
or
sub
dec
lret
xlat
cs
stc
push
jo
push
stos
mov
stos
push
cmp
rcl
cmp
mov
out
push
ss
sti
mov
cmc
dec
xchg
lds
or
scas
movsl
into
cmp
sub
in
cmp
es
hlt
ret
fisttpl
mov
dec
movsb
and
push
divb
xlat
mov
mov
xor
mov
ffreep
cmp
fstpl
lock
xchg
cmp
stos
lods
imul
xor
negl
jecxz
adc
mov
push
mull
js
sub
das
and
orb
sbb
cmpsb
jmp
xchg
sub
pop
inc
dec
mov
xchg
daa
insb
xchg
cltd
jg
push
lods
push
mov
mov
or
sbbb
sub
int
idivl
mov
enter
pop
ret
addr16
mov
cmp
mov
jmp
hlt
out
xchg
or
imul
add
ss
dec
lret
xor
mov
dec
mov
ds
outsb
xor
lcall
fisubrl
shll
sahf
lcall
out
dec
rclb
lea
ja
aad
push
sub
adcb
push
jge
push
or
mov
inc
out
lods
lock
dec
pop
enter
das
lea
xchg
lods
dec
sbbl
pop
dec
shlb
cmpsb
sarb
stc
ror
cli
stos
mov
popa
mov
and
jno
movsb
pop
and
inc
andl
dec
out
adc
insl
cltd
pop
inc
add
gs
mov
mov
mov
mov
pushl
pushl
pushl
pushl
pushl
push
push
pushl
mov
call
jmp
jmp
dec
test
lods
std
adc
adc
adc
mov
fisubrs
shl
adc
push
add
jp
out
push
cmp
outsl
xchg
nop
subl
pop
dec
lret
jp
enter
lss
sarb
cmp
in
daa
shr
mov
cmpsl
adc
pop
sbb
in
pop
outsb
pop
adc
add
cmp
adc
xor
mov
je
push
into
imul
sub
aam
adc
addb
fisubrl
movsl
ljmp
mov
mov
and
rcrb
jno
pop
pop
cmp
sahf
push
cltd
das
push
movsb
ss
pop
jns
sub
divl
jg
cmp
pop
or
push
pop
scas
in
pop
lods
mov
xchg
cmp
repnz
sub
out
into
jno
nop
fbld
paddd
aas
add
sub
nop
sbb
iret
pop
cltd
mov
into
pop
scas
mov
dec
pop
dec
dec
shrw
lea
sub
and
xor
and
xchg
cld
mov
adc
and
jae
push
fldcw
mov
in
pushf
fisubrl
mov
cmp
or
mov
push
pushf
push
imul
cwtl
sbb
dec
out
mov
mov
inc
push
out
xchg
dec
cltd
and
inc
mov
xchg
lcall
mov
js
cltd
daa
sti
fcoms
pop
inc
dec
xchg
insb
inc
test
movsb
and
sahf
rolb
jnp
cmp
and
xor
in
pusha
aad
adc
xchg
push
jg
sub
and
push
or
xor
bound
stos
gs
loopne
clc
in
mov
or
orb
into
xchg
scas
adc
pop
pop
xor
sub
jle
mov
push
mov
xor
outsb
dec
hlt
xor
push
or
lcall
shlb
fs
mov
sbb
es
and
push
outsb
sbb
jle
ljmp
or
push
imul
push
fcmovu
ret
ja
inc
jmp
or
push
in
cmp
mov
adc
cmp
mov
sub
mov
adc
popl
dec
jge
outsb
mov
out
das
shl
into
lcall
scas
repz
sub
sub
mov
lcall
inc
xchg
test
mov
push
loope
inc
jnp
fcom
add
imul
shr
mov
jo
jo
loop
pop
mov
sub
out
das
sbb
aam
fsubs
mov
add
repz
rcr
pop
mov
ljmp
nop
hlt
aaa
adc
movhps
mov
out
loop
jno
ret
mov
ret
lock
js
mov
mov
push
add
pop
adc
mov
inc
cltd
popa
mov
xor
xchg
and
mov
mov
dec
out
enter
jg
cmpsl
gs
test
data16
inc
or
xor
sub
mov
inc
add
add
push
push
call
mov
jmp
mov
pop
mov
pop
leave
ret
push
mov
sub
push
push
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
push
push
push
call
mov
mov
add
adc
and
push
and
or
push
or
xor
xor
push
push
call
mov
movl
movl
movl
movl
xor
movl
push
inc
mov
mov
mov
push
jmp
dec
pop
divb
inc
and
mov
imul
loop
push
outsl
out
jb
pop
ret
push
cmp
pop
lahf
xchg
sub
cmp
adcb
and
cmp
or
in
pop
out
aam
mov
filds
jmp
inc
xor
stos
xchg
jle
fwait
shlb
adc
gs
xlat
push
mov
scas
jb
mov
cmpsl
fwait
sbb
sbb
cs
lret
std
nop
add
xchg
jg
test
sbbb
jb
or
cli
fcmovnu
push
jns
in
xchg
inc
sarl
or
pop
jo
mov
scas
bswap
aad
std
add
sub
dec
pop
pusha
fmull
jmp
sub
or
pop
add
sbb
into
fdivr
int
out
jmp
call
xchg
mov
sub
pop
das
cmpl
dec
inc
mov
sub
fsts
adc
cltd
mov
jbe
lods
aad
aad
into
push
cld
stos
mov
addb
sbb
mov
push
outsl
and
negl
scas
jb
cmp
mov
lock
repnz
jb
push
inc
and
inc
sbb
insl
xchg
push
stos
push
pop
jne
xchg
or
push
jb
cmp
pop
mov
es
sbb
lock
lret
mov
mov
stos
sub
in
cmpsb
push
mov
test
je
or
mov
ds
scas
push
and
lea
mov
fs
pop
push
cmp
xlat
fldenv
inc
jno
inc
jb
inc
ret
fisubrs
enter
xor
ja
aas
push
xor
pusha
aad
sub
and
add
xorb
insb
xor
mov
jmp
mov
cmpsl
jmp
data16
fisttpll
sbb
push
insb
stos
xor
mov
in
push
add
sub
notl
push
cmp
pop
arpl
push
mov
mov
sub
xchg
add
xchg
imul
sub
push
call
mov
mov
or
or
push
add
push
jmp
push
pop
push
js
fldt
jle
stos
adc
stos
movlps
cmp
out
outsl
pop
sub
das
fisttpll
enter
mov
mov
adc
inc
imull
imul
cmp
push
cmp
aam
mov
pop
jnp
fisttpl
sbb
inc
sub
and
testb
sarl
and
sub
jb
xchg
ret
outsl
sbb
imul
mov
sbb
nop
inc
cmpsl
push
pop
xchg
cli
xchg
inc
inc
je
xchg
lods
cmc
fildl
out
out
rolb
repz
cmpsb
dec
inc
mov
es
or
push
sti
xor
push
ret
pop
ds
xorl
inc
jp
lods
divb
add
pop
inc
ljmp
ljmp
pop
ret
scas
pop
mov
ljmp
mov
jae
xor
fdivrp
lock
aas
pop
xchg
mov
xor
mov
or
cmp
pop
fs
push
scas
lds
jecxz
add
pop
test
xchg
inc
jne
and
imulb
decl
call
test
imul
xor
push
add
fcomps
mov
adc
addr16
out
mov
aam
mov
pop
shll
enter
ficoml
xor
out
or
xchg
ljmp
sub
test
std
jb
dec
call
and
int3
dec
mov
das
dec
sub
shlb
fs
notb
jno
xchg
inc
cmp
lods
retw
push
mov
cwtl
mov
cli
jno
mov
and
lock
int3
xchg
jmp
mov
addr16
ja
or
stc
xchg
xchg
push
jb
pop
and
mov
push
xor
mov
or
dec
popf
fwait
js
jne
sahf
fadd
adc
xlat
in
mov
or
push
or
push
jecxz
sahf
jl
adc
push
push
call
mov
lea
xor
mov
div
mov
sub
mov
movl
mov
movl
mov
mov
sub
mov
xor
div
mov
xor
or
or
mov
mov
movl
jmp
cltd
sbb
sbb
cltd
sbb
xchg
bound
nop
sarb
cmpsl
adc
stos
movlps
mov
sbb
jnp
xor
jnp
out
scas
add
rolb
and
xor
outsl
aaa
les
popf
jp
add
mov
les
xchg
inc
addr16
fwait
xor
xlat
jnp
jne
scas
daa
test
scas
dec
adcb
arpl
pop
push
call
mov
dec
push
push
fmul
push
mov
sub
or
xchg
jnp
pop
xchg
and
cmc
aam
xor
xor
shlb
ja
test
mov
lcall
test
in
jne
lock
push
xchg
mov
mov
inc
int3
outsb
lret
or
in
cmc
jb
dec
std
xchg
pop
jno
mov
jae
inc
jae
mov
jnp
xor
data16
cmp
sbb
cld
cmp
int
fdivr
dec
jnp
sub
lds
std
sti
xor
stc
int
into
mov
incb
in
stos
adc
test
jp
add
cli
sbb
xor
scas
jno
sub
lods
add
mov
pop
sub
test
inc
call
mov
es
adc
mov
mov
mov
fwait
push
leave
or
stc
lock
lret
in
loopne
aaa
vmread
cmp
cmpl
jae
out
jb
fstps
roll
sbb
stos
shrb
xorl
jge
xor
or
daa
aaa
push
inc
mov
xor
cmpsb
or
mov
mov
mov
adc
mov
jecxz
push
call
cs
in
mov
xchg
imul
fildll
mov
movb
or
pop
test
pop
add
add
filds
shrl
sub
insl
mov
inc
push
add
push
aas
cmp
stos
sahf
arpl
inc
fwait
and
jb
dec
fcoms
xchg
and
or
dec
jge
out
cmp
lcall
add
movl
mov
add
mov
and
lea
mov
mov
mov
movl
jmp
pop
mov
pop
mov
test
or
adc
mov
pop
sti
aam
push
and
cmpsb
mov
push
into
je
push
mov
or
jge
imul
mov
mov
dec
pop
lea
fdivrl
mov
inc
mov
mov
adc
fildll
push
add
movsb
mov
add
mov
inc
or
mov
icebp
out
in
into
or
sub
lcall
mov
ss
rorl
gs
cmp
lock
adc
lods
pop
push
pop
jp
xlat
icebp
into
pusha
imul
mov
lds
add
push
clc
rcll
inc
ficoms
ss
cmp
push
ljmp
mov
aam
pop
inc
loopne
stos
repnz
ds
test
push
scas
xor
xor
or
adc
addl
mov
sarl
sub
and
fists
mov
addb
out
xchg
and
mov
in
push
sbb
rorl
pop
fnstcw
xor
push
xlat
jg
or
mov
lock
es
gs
sub
sub
out
adc
mov
sub
out
mov
pop
aas
xorb
jns
bound
cltd
out
repnz
sbb
pop
or
test
push
jno
repnz
fsts
sub
add
jno
lret
stos
dec
add
movsb
les
mov
cmp
shr
sbb
cmp
cmpsb
inc
insl
fisubrl
xchg
imul
repnz
jge
popa
test
mov
popf
rcrb
adcb
loop
lods
jp
or
loop
xchg
adc
sub
xor
lea
mov
ret
mov
adc
or
xchg
and
aad
add
shll
int3
inc
mov
xchg
add
fsubp
mov
jg
xor
mov
lcall
jbe
lcall
fildl
add
movl
movl
mov
mov
sub
add
xor
add
mov
div
mov
xor
pop
pop
or
mov
movl
movl
jmp
xchg
sub
subl
in
ss
adc
xor
jo
out
mov
pop
fimuls
xchg
dec
test
and
jg
jno
pop
clc
les
out
jno
movsl
or
cld
fstpt
lahf
enter
sbb
mov
push
mov
in
rcll
movsb
mov
aam
push
aam
pop
out
and
adc
out
lahf
out
mov
xlat
sub
pop
aad
jecxz
lret
and
push
xchg
jo
add
in
sbb
aas
stos
out
dec
cltd
popf
testb
mov
mov
enter
hlt
xchg
and
lods
in
mov
mov
mov
jecxz
jecxz
cwtl
xor
arpl
xor
pop
jo
leave
in
dec
dec
ds
fcmovnu
repnz
pushf
icebp
jno
inc
mov
lahf
outsl
xchg
or
cld
or
sahf
inc
notb
cwtl
xor
mov
xor
xchg
sti
fwait
mov
icebp
out
xlat
adc
in
add
mov
into
fst
lods
add
push
or
es
icebp
addl
out
push
nop
adc
jl
xchg
icebp
push
adc
imul
xlat
es
into
xor
repnz
ja
pop
pop
test
outsl
xor
xchg
mov
popa
pushf
mov
test
cs
add
or
pop
call
mov
lcall
push
loope
mov
fisttpl
imul
mov
sbb
jno
outsl
adc
mov
xor
pop
rcrl
inc
stos
shrb
nop
mov
sarb
sti
mov
and
cltd
std
or
sub
mov
sbb
cmovg
mov
lea
sub
scas
outsl
scas
pop
xor
dec
shl
and
xchg
push
bound
mov
jnp
imul
cld
add
sub
roll
mov
inc
mov
mov
dec
mulb
mov
mov
xchg
scas
mov
sub
stc
push
or
hlt
aad
test
movsl
std
or
inc
or
dec
or
shrl
sub
or
mov
imul
mov
jmp
loope
mov
and
les
aas
fwait
adc
stos
movlps
lahf
sbb
xor
or
fisttps
ljmp
jo
xchg
and
dec
xchg
jmp
les
and
lahf
ret
mov
lods
lods
daa
xor
lods
jmp
iret
inc
imul
xchg
pop
aaa
mov
je
xchg
xchg
daa
add
leave
out
dec
out
lea
mov
lret
lods
dec
cmpsl
aas
outsb
and
push
or
adc
inc
daa
xchg
pop
push
mov
adc
call
pop
fsubrs
out
jle
in
sbb
dec
or
push
testb
cmpb
mov
push
ja
out
and
mov
int
fildll
xor
scas
jg
mov
pushf
iret
xchg
push
sbb
cltd
scas
subl
jne
faddl
ja
or
hlt
cmp
aad
gs
cmc
leave
std
iret
ror
out
and
out
test
filds
lcall
fs
out
es
xchg
push
ja
and
cmp
insl
js
inc
mov
int
rolb
lods
mov
inc
aaa
mov
dec
jnp
nop
xor
push
in
inc
pop
inc
int3
mov
js,pt
xor
inc
test
cmp
pop
sti
add
jle
adc
cld
fs
in
pushl
jecxz
mov
mov
lahf
in
cwtl
mov
mov
into
pop
pop
mov
inc
adc
add
std
pop
ret
cld
dec
add
sbb
or
popa
sub
pop
shrl
and
je
add
mov
das
xchg
push
jno
inc
call
out
xchg
and
inc
pop
mov
xchg
xchg
or
mov
bsf
xor
fcmovnu
push
xchg
addr16
xchg
movl
mov
bound
arpl
jl
lea
loope
add
cmpsl
in
imul
mov
test
pop
sub
punpckhbw
scas
pusha
std
out
jp
push
dec
fimull
fildll
shlb
or
icebp
leave
ret
push
mov
sub
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
push
movl
mov
mov
push
push
push
call
mov
mov
xor
mov
mov
mov
xor
mov
xor
or
mov
mov
mov
xor
or
add
cltd
adc
cmp
jne
cmp
je
mov
mov
mov
mov
add
adc
or
mov
or
mov
push
push
push
push
call
mov
mov
and
mov
mov
mov
and
xor
xor
xor
cmp
jne
cmp
jne
mov
mov
add
or
mov
or
xor
lea
xor
mov
and
add
mov
xor
xor
div
mov
mov
xor
imul
mov
push
push
xor
mov
lea
mov
mov
lea
mov
mov
or
xor
div
mov
add
xor
add
mov
add
mov
mov
jmp
inc
or
pushf
ds
fdivrs
cltd
adc
pop
adc
adc
adc
insl
outsl
hlt
xchg
and
push
popf
movsb
mov
rorw
push
jp
adc
cld
jge
dec
out
into
fstl
sbbl
jp
jge
mov
repz
imul
rcrl
push
cld
scas
sbb
add
in
pop
pop
dec
imul
arpl
adc
push
aad
fwait
subl
cmp
xlat
jge
xchg
int3
adc
ret
out
into
mov
cmp
or
or
mov
into
incl
sbb
jmp
mov
push
mov
inc
mov
out
xor
pop
jb
ja
adc
mov
jge
in
lahf
ja
push
mov
rorl
sub
roll
mov
outsl
out
inc
mov
fistpll
mov
jge
mov
push
adc
mov
jo
jle
arpl
mov
ret
mov
or
loop
sbb
or
xor
call
mov
add
leave
sahf
sti
fstpl
lock
jg
mov
mov
pop
pusha
lea
inc
loop
mov
out
imul
or
jle
incb
rcrb
loop
mov
test
sbb
pop
out
mov
ret
dec
pop
ror
cmp
std
jb
shrb
leave
stos
jle
dec
movsl
movsb
test
movsl
jle
push
imulb
rcl
and
in
jge
stc
loop
adcb
inc
add
inc
jns
pop
or
aam
dec
cmp
je
push
sbb
rcl
cmpsb
jecxz
dec
sbb
inc
dec
inc
pop
pop
in
pushf
mov
mov
and
int3
test
fisttpll
pop
push
sbb
xchg
mov
pop
in
push
jecxz
cld
orl
sahf
mov
jbe
sub
js
leave
inc
roll
lods
or
lods
sub
push
popl
sbb
mov
dec
aad
addl
cmpsb
out
loopne
int
or
lock
ss
push
test
xor
lds
inc
idivl
xchg
push
jns
sarl
sar
sbbb
pop
jmp
call
cmc
or
cld
add
xlat
cmp
data16
test
mov
push
imul
in
inc
dec
shlb
insb
mov
inc
xlat
push
clc
mov
sub
xchg
dec
cmpsl
mov
jne
inc
and
push
mov
test
or
or
xor
out
mov
adc
dec
cmc
jl
xchg
mov
pop
mov
xchg
and
fwait
repnz
inc
adc
inc
inc
cmpl
rol
xchg
or
cld
mov
xor
sub
in
push
adc
inc
in
dec
cmp
cwtl
xchg
xor
les
and
lea
aaa
cli
adc
mov
stc
scas
mov
push
jnp
pop
dec
xchg
dec
stos
jae
mov
insb
adc
jmp
enter
mov
mov
cmp
enter
stos
inc
mov
js
fwait
icebp
in
dec
inc
xchg
aad
lret
sbb
sbb
add
fs
pop
jmp
addr16
sbb
rclb
gs
notl
inc
repnz
jmp
and
movsb
add
fwait
mov
add
inc
ss
jne
cltd
rcr
repnz
xor
icebp
test
sbb
add
xlat
add
stos
fnstenv
repz
shrl
pushf
insl
pop
push
or
inc
aaa
push
adc
adc
das
inc
lods
mov
xor
adc
jmp
adc
sub
decl
ljmp
rorb
lcall
icebp
mov
xor
mov
xor
mov
add
jmp
pop
pop
scas
outsb
scas
pop
sbb
cmp
push
push
ss
mov
pop
adc
adc
data16
mov
adc
scas
mov
outsl
pushf
test
sti
jle
aam
add
pop
xor
sbb
push
dec
xchg
mov
lret
xor
icebp
mov
pop
enter
enter
xchg
sbbl
mov
test
mov
fnstenv
inc
stos
inc
dec
push
movsb
shrl
cmc
inc
push
ret
imul
mov
mov
mov
cmp
mov
sub
incb
mov
mov
cld
cmp
fists
jmp
loopne
gs
jne
call
mov
popa
jl
cmp
mov
mov
insb
out
scas
addr16
rcl
push
movsb
rcrl
loop
rorl
pop
shl
push
fidivs
int3
adc
mov
mov
mov
ret
clc
cmp
std
dec
push
lds
mov
aas
mov
lea
or
daa
xor
bound
repz
mov
repz
jge
lods
sbb
mov
mov
outsb
mov
cmc
mov
std
cmpsb
push
mov
push
sbb
scas
xorl
adc
fstl
and
or
push
pop
in
dec
cmp
add
mov
scas
cmp
out
popf
pop
adc
aam
xchg
push
mov
fdivs
add
fidivs
rcrl
sub
xchg
dec
movsl
xor
jmp
xlat
dec
jmp
lods
dec
pop
stos
push
sub
mov
push
psubw
jae
fsubrs
fistpl
jmp
jl
xchg
cmp
ja
adc
push
xchg
je
inc
pop
fildl
leave
and
js
js
adc
jbe
pop
mov
pop
pop
and
fstpt
repz
stos
sbb
and
pop
repnz
push
cmpsl
cltd
inc
pop
movsb
outsl
adc
orl
cwtl
dec
sub
ret
cmpsb
lret
ds
ret
xchg
or
pop
pusha
sub
arpl
in
in
sub
add
shrl
daa
scas
adc
ficomps
rcl
xchg
push
int
call
cld
xor
pusha
mov
or
or
adc
sbb
jmp
pop
cltd
scas
lods
adc
clc
add
fimull
icebp
push
xor
pop
and
stc
sti
push
mov
jge
mov
xor
dec
inc
lds
stc
mov
pop
cmp
bound
shlb
pusha
adc
ja
pop
test
xor
add
pop
add
pop
cmp
fs
pop
mov
dec
in
push
mov
mov
push
loop
cmp
pop
shrl
push
mov
popf
fcom
bound
fcomp
inc
lds
lea
xchg
fmuls
mov
pop
int
push
sbb
cli
mov
fistps
paddsb
and
xorl
movsl
hlt
mov
cwtl
push
scas
mov
insb
or
cs
cmp
cmp
fdivrs
push
dec
ds
xchg
addl
gs
mov
mov
aas
enter
jo
test
pop
loope
cmp
or
cmp
push
fimuls
xor
pop
xor
cmp
xchg
xchg
daa
xor
xor
sbb
push
enter
mov
inc
dec
icebp
lcall
in
push
sub
sub
or
or
loopne
cmp
or
push
sti
ret
addl
xlat
test
push
aam
test
sarl
mov
shll
dec
pop
std
imul
adc
adc
fmul
pop
and
ret
add
adc
push
push
call
mov
sub
push
pop
sbb
mov
xor
cmp
jne
cmp
jne
mov
mov
add
shr
or
mov
xor
xor
add
mov
pop
leave
ret
push
mov
sub
push
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
jmp
ret
loopne
icebp
xchg
stos
mov
stos
daa
out
add
and
adc
mov
sbb
or
insl
xor
psadbw
or
arpl
inc
out
adc
ja
sbb
mov
popf
mov
jge
pop
loopne
inc
cmp
dec
aam
loop
mov
out
cmc
jl
sbb
outsl
fwait
push
cltd
push
jg
lret
in
pop
pop
xor
jb
sahf
cltd
xchg
aam
and
inc
addl
xor
les
cs
mov
xor
dec
push
or
pop
test
push
outsb
sti
fsubrl
loopne
mov
jnp
or
insb
outsb
psubusw
pop
sub
aam
nop
xlat
xchg
push
adc
fwait
or
xchg
inc
cmp
pop
nop
insb
pop
out
sahf
jg
cmp
dec
pop
xor
jo
rcrl
je
test
lret
xchg
cmp
add
add
pop
pop
push
divl
xor
mov
xor
and
mov
and
stos
dec
mov
jmp
xor
mov
fsubs
pop
mov
repnz
mov
lea
outsl
not
lret
test
xchg
fstpt
stos
mov
jo
gs
repnz
repnz
repnz
pusha
repnz
mov
sbb
ret
lret
cmpsl
fcomps
pop
push
or
sbb
push
adc
mov
das
inc
dec
mov
cmpsl
and
aas
sbb
int
and
lods
pop
stos
xor
sub
popa
jge
fwait
clc
push
in
mov
movsl
sbb
xor
pop
aaa
insl
cmc
mov
adc
fnsave
and
sub
cmp
lahf
pop
je
mov
xor
xlat
mov
sub
add
lds
xchg
mov
dec
in
testl
sbb
enter
mov
scas
aas
je
repnz
mov
pop
loope
cs
push
in
lahf
inc
xlat
out
test
mov
sar
out
shlb
xchg
add
or
lods
or
cli
data16
ja
insb
push
cld
outsl
rcll
mov
shlb
scas
mov
roll
lods
adc
push
mov
lret
add
int3
loop
das
outsl
fcompl
incb
out
jnp
gs
cli
jl
dec
push
cmp
aam
das
and
jne
adc
add
je
push
in
adc
mov
push
xor
add
lods
push
movsl
pop
cmp
aam
out
dec
xchg
nop
push
scas
add
fwait
mov
mov
iret
dec
sub
add
ret
cmpsb
adcb
mov
pop
les
and
sbb
enter
les
add
inc
enter
add
inc
int3
cmp
movl
mov
mov
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
adc
mov
push
push
or
or
push
push
call
mov
mov
and
or
mov
mov
and
or
xor
xor
shld
shl
shr
xor
or
or
xor
mov
mov
xor
mov
mov
mov
mov
mov
jmp
cmp
iret
sbb
pop
push
lret
test
repz
adc
movlps
imul
aad
clc
in
xchg
xor
mov
sub
outsl
in
popa
movsl
xchg
push
rcl
jg
jmp
inc
push
sahf
out
fldenv
or
mov
pop
ljmp
and
xchg
jecxz
inc
loop
lahf
xor
js
mov
dec
push
add
add
int
scas
ljmp
mov
enter
mov
or
pop
clc
pop
lods
or
xchg
and
mov
jge
stos
sahf
mov
movsb
icebp
rcrb
dec
pop
xor
pop
inc
in
add
movsb
sub
or
lock
in
mov
loop
mov
xchg
pop
mov
add
and
xchg
in
jb
pop
sbb
fidivl
sahf
popa
jp
iret
mov
xchg
into
lea
js
jmp
ss
mov
mov
xor
mov
ret
loop
add
iret
pop
cltd
dec
lret
int3
mov
ret
inc
push
data16
sbb
and
out
ja
adc
jge
push
cmp
mov
mov
sub
or
cwtl
loope
aas
jbe
int3
pop
cli
sub
cwtl
sub
push
js
pusha
xchg
sbb
lret
cmp
lret
cmp
jle
sbb
lods
ret
mov
or
xchg
xor
adc
pop
in
insl
test
repz
push
adc
dec
mov
cmc
stos
xor
mov
xchg
jno
jmp
loope
mov
xor
mov
mov
in
lret
sbb
push
or
sub
mov
int
fcmovnbe
and
add
andl
sub
add
xor
mov
jne
enter
push
jg
ljmp
fdivrs
cltd
mov
lods
popa
lea
pop
adc
out
and
jp
push
bnd
sub
fwait
jno,pt
push
dec
ds
addb
cmp
mov
xchg
sbb
movsb
cmp
popf
in
push
mov
and
mov
lock
gs
divb
cmpsb
leave
push
lret
sub
add
shl
repnz
orb
or
inc
dec
js
push
aaa
and
addr16
jo
and
lcall
rol
xor
add
xchg
add
orl
sbb
xchg
js
subl
mov
rorl
or
pop
stos
and
les
adc
jmp
push
push
ret
or
pop
je
stos
jo
push
into
pusha
roll
jbe
adc
push
xor
mov
fisubs
or
mov
inc
stos
sub
sub
sbb
dec
hlt
decb
add
push
push
call
add
push
adc
push
push
push
call
mov
mov
mov
xor
jmp
inc
in
sbb
sbb
fisttpl
cmc
stos
add
adc
movlps
rcrb
and
cmp
fdivrs
push
scas
into
mov
loop
aas
icebp
mov
cmp
mov
push
jno
outsl
xor
xor
or
cld
lock
loop
icebp
mov
sub
jne
cmp
and
or
push
outsl
in
test
sti
lcall
xor
std
sbb
xchg
pop
fs
mov
negb
gs
sub
mov
fcoms
xchg
xchg
pop
call
mov
dec
mov
jmp
movsl
xor
scas
shlb
fdivrs
mov
add
in
lods
loope
test
subl
sahf
jbe
hlt
testl
das
in
mov
mov
xor
fistl
fs
mov
fsub
ret
aam
sahf
loopne
inc
fld
jp
icebp
xor
imul
cmp
shlb
and
sub
nop
sbb
push
jmp
sbb
sbb
sbb
cld
pusha
jnp
cmpsb
push
lods
inc
cmp
cmpb
push
out
enter
testl
insl
es
jb
push
lret
das
hlt
mov
out
dec
sti
inc
inc
and
xchg
cld
or
xor
push
jg
xor
mov
and
pushf
dec
lods
pushf
inc
xchg
xor
pop
out
cmpsb
data16
xchg
push
adc
and
rorl
lcall
ja
mov
test
fbstp
sbb
adc
xor
mov
add
aam
outsl
sbb
dec
push
popf
sub
fnstcw
mov
mov
lahf
adc
stos
and
xor
aas
push
icebp
or
jmp
push
jp
loopne
movsb
fimull
mov
ja
jae
enter
ret
xchg
cmc
push
sub
sbb
push
popa
out
xor
orb
aaa
jg
stos
add
jl
dec
dec
lods
jge
lds
jno
bound
jb
mov
lcall
push
sub
xor
lahf
iret
aaa
jg
push
in
dec
lea
mov
sub
mov
mov
add
das
repnz
xor
push
imul
lcall
ss
jl
jo,pn
das
movsl
cmp
add
push
movsl
pop
stos
std
adc
xor
add
movb
jbe
lahf
xor
xchg
jl
in
mov
iret
pop
dec
fdivrs
arpl
cmpl
sub
sbb
jno
out
mov
xor
sub
out
inc
add
cwtl
mov
mov
mov
push
cmp
and
jg
pop
aad
adc
pop
test
stc
cmp
and
cmp
add
enter
adc
mov
mov
mov
mov
mov
sub
mov
mov
sbb
mov
sub
mov
sbb
add
mov
adc
push
xor
mov
pop
sub
mov
sub
mov
mov
mov
add
xor
shrd
xor
shr
or
shl
or
mov
push
mov
mov
mov
push
push
push
call
mov
mov
mov
or
mov
or
mov
add
mov
adc
mov
add
mov
adc
add
adc
pop
mov
mov
pop
leave
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
and
add
mov
and
mov
sub
and
mov
mov
imul
jmp
and
sbb
loope
stos
lock
adc
or
mov
sbb
and
je
aam
enter
cli
ss
mov
iret
mov
sbb
inc
inc
xchg
movb
xchg
mov
bound
or
xor
out
push
ret
jl
pop
fnstenv
ja
in
scas
mov
sub
cltd
and
add
push
sub
call
stos
mov
out
repnz
test
adc
mov
push
xchg
mov
add
inc
repnz
pop
std
ljmp
adc
jp
lcall
in
aam
out
imul
lock
pop
inc
xor
jecxz
add
hlt
aad
push
ret
pushf
jns
rorl
in
cltd
cli
stos
pop
nop
outsb
insb
daa
leave
cmp
lods
hlt
loope
add
sub
mov
imulb
mov
pushf
fnstenv
pop
add
adc
ficompl
enter
cmpl
bswap
rcrl
aaa
xchg
rol
cmp
popf
fnstenv
addl
dec
cmpsl
mov
jae
adc
adc
xchg
dec
loope
ljmp
icebp
ss
orl
sahf
dec
push
shll
int
ret
lock
and
aas
gs
push
mov
push
lods
int3
subb
ljmp
push
pop
cmp
cmp
sarb
jne
loope
jo
dec
shrb
jbe
jno
lods
es
mov
add
sbb
xchg
push
repnz
adc
dec
ret
cmp
xor
push
out
rcrl
pusha
inc
cwtl
sbbb
inc
cmp
jno
movsb
aaa
inc
cmp
loopne
lcall
pushf
mov
xchg
lret
fwait
stos
jae
push
push
add
xor
jae
inc
arpl
int
sbb
testb
push
lods
or
out
jnp
fsubrl
and
jo
je
std
aaa
jmp
shl
lods
ss
outsb
insl
dec
ss
push
mov
clc
or
sti
cli
lahf
sbb
mov
cmp
fstpt
fisubrs
cs
jno
gs
mov
pop
or
or
daa
sbb
clc
lret
inc
push
out
mov
ret
dec
in
test
sub
jmp
test
flds
mov
dec
subl
sti
shl
xor
push
sahf
stc
sub
jg
inc
mulps
rcrl
arpl
cmpsl
and
or
pushf
test
push
stc
pop
inc
adc
in
xchg
inc
dec
movsb
mull
ret
sbb
dec
and
mov
ja
dec
jmp
or
repnz
dec
jo
cmp
sahf
loop
mov
jmp
jmp
mov
ret
ds
test
les
push
cmc
test
add
xchg
push
int3
mov
xor
add
shrl
pop
add
xor
cmp
jne
mov
mov
mov
sub
add
mov
or
mov
imul
sub
add
mov
or
mov
jmp
push
daa
sahf
xchg
sbb
add
lahf
mov
mov
add
adc
sti
or
sarl
gs
pop
clc
jns
mov
lods
xchg
jp
lds
mov
cmp
push
mov
and
mov
call
mov
cmp
ds
in
in
mov
mov
insl
sbb
enter
push
xchg
cmpsb
icebp
pop
adc
xor
fisttpl
cmpsb
pop
mov
test
xchg
andb
sub
nop
rorb
dec
mov
daa
jl
jne
ficompl
and
daa
call
inc
jne
aam
xchg
and
xor
sub
loop
imul
sub
das
xchg
inc
je
push
push
mov
outsl
lods
adc
sbb
pusha
jbe
popf
push
push
test
push
es
push
je
xor
sub
xchg
xchg
mov
sbb
xchg
in
bound
mov
push
ficoms
pushl
shll
stc
mov
mov
dec
xor
loope
pop
popf
cltd
sub
and
push
loop
outsl
xor
je
scas
sbb
sub
lcall
lret
push
or
add
sahf
mov
push
in
mov
and
int3
aam
jge
adc
or
cmp
pop
dec
xor
cs
aad
loope
mov
ret
enter
and
es
push
neg
in
add
add
pop
sbb
gs
pop
movsl
seta
fnstcw
imul
sbb
mov
add
add
ja,pn
loop
mov
jl
pushf
pop
decl
sbb
push
lods
jl
ud0
xor
adc
aam
adc
fwait
adc
sbb
les
xor
mov
pop
mov
mov
xchg
mov
ror
pusha
in
ljmp
mov
pop
int3
or
scas
xor
popf
adcl
mov
sub
mov
pop
push
cmp
shlb
mov
jb
or
andb
mov
outsl
mov
mov
jge
rol
out
test
in
cmp
push
mov
sbb
into
adc
cmp
mov
inc
mov
ret
xchg
xchg
sub
outsl
inc
fnstsw
pushf
les
xchg
jb
sbb
stos
lods
xlat
and
push
outsl
adc
pushf
ja
or
sbb
xor
clc
aaa
je
push
xor
pop
mov
push
fst
cli
push
push
int
nop
pop
jl
adc
xor
add
sub
inc
inc
mov
popa
sbbb
jae
sbb
xorl
push
xor
jle
add
int
mov
mov
sbb
hlt
nop
adc
push
xchg
inc
stos
fdivrs
stos
pop
or
jne
dec
hlt
dec
pusha
mov
add
imul
add
mov
add
mov
mov
mov
and
mov
and
mov
imul
mov
or
mov
imul
mov
sub
cmp
jmp
pop
mov
sbb
sbb
mov
hlt
jl
insl
push
sub
adc
or
movsl
mov
outsb
in
ljmp
insl
movsl
out
movsb
mov
stos
push
pop
int3
and
xor
addr16
das
push
push
sub
adc
js
in
add
fstpl
ret
or
add
negb
cmp
nop
pusha
scas
jns
std
cli
imul
hlt
push
push
stc
jge
arpl
xchg
test
sbb
adc
xor
jg
hlt
loop
sbb
arpl
mov
stos
or
into
shll
xchg
imul
outsb
fldenv
fwait
rcll
ss
ds
jb
xor
xchg
out
mov
xor
scas
xor
jns
pushl
mov
inc
stos
or
jns
data16
sub
pop
cmp
xor
imul
mov
rcl
add
repnz
into
test
mov
mov
and
stos
add
pop
cmpsb
push
movsl
jne
bound
sbb
mov
inc
fs
mov
mov
sti
ret
imul
test
jge
fs
nop
int
aas
fwait
mov
in
adc
je
stos
icebp
int
std
xchg
movsb
sub
int
add
jae
pusha
incb
call
add
push
je
add
mov
call
shrl
repnz
mov
cs
sbb
fisubs
mov
add
sub
dec
sub
rclb
push
ljmp
jne
adc
stos
dec
movsb
pop
fcmove
nop
sbb
cwtl
ja
cwtl
pop
repz
add
sub
and
insl
sbb
jo
data16
and
inc
xchg
movsl
xchg
cs
fstpt
or
test
mov
orl
enter
fistpl
pop
fstpt
mov
sub
gs
addb
fnstsw
adc
inc
imul
inc
sub
or
push
into
jle
testb
mov
jge
loopne
xchg
mov
fcompl
sub
cmpsb
ret
psubq
mov
idivb
add
pop
adc
leave
sub
mov
cmp
and
js
lahf
ljmp
cmpsb
cmp
jbe
mov
stos
mov
xor
cmp
xchg
fs
mov
bound
mov
aad
popl
jnp
hlt
hlt
xor
not
and
mov
or
or
dec
push
mov
jb
scas
push
hlt
mov
fstpt
clc
cmp
popf
push
adc
movsl
mov
jae
sbb
jns
inc
clc
out
push
dec
scas
repz
stc
movsb
test
cmpsl
ljmp
mov
cmp
pop
sub
aaa
jno
les
jecxz
push
dec
fwait
mov
xor
dec
push
xchg
pop
into
cmc
mov
mull
add
add
add
add
push
add
xor
add
jmp
movl
movl
mov
mov
imul
add
and
add
or
sub
leave
ret
push
mov
and
jmp
xchg
mov
ret
sub
lcall
adc
jb
adc
clc
test
push
xchg
mov
sub
add
pop
adc
push
cmp
cmp
mov
mov
cmp
xchg
int
orb
push
or
or
cwtl
pop
aad
xchg
jp
rolb
xchg
sub
out
dec
sbb
addr16
out
notl
cli
enter
ss
adcb
inc
adc
insb
bound
enter
jnp
lcall
dec
incl
cmp
ja
xchg
pushf
sbb
leave
inc
mov
pop
dec
outsb
aas
adc
dec
dec
movsb
push
stc
pop
imul
ja
xchg
pop
adc
or
imulb
xor
and
decb
cwtl
mov
aad
shll
sub
sub
mov
add
adc
ud1
mov
jecxz
call
cmpsl
dec
test
cmc
rorb
fwait
cmp
mov
dec
xchg
ds
mov
aam
mov
stc
sbb
jns
xchg
fstpt
and
mov
pop
ljmp
lock
jmp
rcrl
xchg
gs
shrb
bound
movsl
pop
lcall
jecxz
dec
cmc
or
adc
xor
jb
add
shll
movsb
outsb
xchg
mov
jnp
push
cmp
arpl
dec
xchg
aas
jmp
cmpsl
cmp
xor
sbb
sbbl
adc
dec
dec
shl
movsb
and
inc
pop
out
inc
sbb
sbb
push
and
ds
push
cli
outsl
subb
ja
cld
inc
lret
outsb
fidivl
jmp
cmp
xor
loop
es
or
sbb
mov
jl
sub
xorb
test
sbb
lods
or
aam
scas
stc
shrl
jne
dec
cmc
ljmp
scas
lods
iret
mov
xchg
or
jae
cmp
xchg
popa
push
jle
add
pop
sbb
decb
sbb
stc
sub
sub
andb
les
xlat
cmpsb
cld
mov
mov
pop
pop
push
clc
std
cmpsb
imull
dec
and
add
jne
xchg
mov
scas
scas
icebp
stos
and
or
es
or
nopl
sub
cld
sti
inc
lods
mov
adc
movl
leave
decl
movsl
pop
test
adc
add
pop
sbbb
iret
jecxz
pop
fidivs
arpl
fistpl
xor
movsl
les
and
mov
rcrl
or
imul
add
xchg
int3
and
mov
push
and
cmp
mov
loopne
mov
dec
out
int
sarl
pop
addl
fdivs
and
movsb
inc
popa
xchg
loop
cmpsb
insl
scas
out
nop
lock
sti
jo
mov
ljmp
int
or
dec
int3
push
jmp
mov
jmp
leave
jge
das
xor
jbe
push
inc
jno
daa
shlb
and
lea
mov
mov
mov
mov
sub
sbb
mov
orl
orl
lea
push
lea
push
call
mov
mov
pushl
mov
pushl
mov
pushl
pushl
pushl
pushl
pushl
call
pop
pop
mov
pop
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
add
xor
mov
and
imul
xor
jmp
movsb
pop
rclb
push
cmpb
mov
adc
jp
adc
add
fistpll
pop
xor
sarb
nop
iret
enter
dec
outsb
adc
mov
jo
or
out
hlt
jle
jbe
xchg
mov
push
mull
inc
jecxz
ss
scas
mov
addr16
repnz
sub
lcall
cmp
lods
lahf
cmp
push
adc
pusha
or
add
xor
dec
cmc
mov
mov
fmulp
mov
mov
jbe
pop
rcrl
popa
jg
jmp
xchg
lods
mov
xchg
lea
add
aas
das
inc
dec
add
mov
xor
sub
cwtl
fstpl
fimull
mov
push
clc
mov
mov
in
push
pop
sbb
sbbl
xchg
in
es
mov
jbe
lahf
imul
lds
gs
sahf
scas
cmp
ret
test
inc
add
adc
xor
or
jecxz
inc
jno
sti
fisttps
dec
shlb
dec
scas
test
sahf
call
and
mov
adc
mov
ret
in
loopne
jnp
dec
movsb
loopne
xor
jne
lcall
cmc
fidivl
test
mov
je
enter
mov
pushf
mov
lret
push
in
add
jge
push
jne
mov
rcl
js
push
pushf
mov
sub
or
fiaddl
and
sahf
loopne
pop
shl
push
mov
and
fcoms
add
sub
inc
mov
xchg
push
xchg
cmp
dec
out
inc
jmp
test
xchg
cmp
xchg
test
imul
fwait
dec
adc
jbe
in
cmp
les
ds
sub
inc
mov
pusha
sbb
push
dec
cs
in
filds
fs
or
dec
inc
push
aas
vpsadbw
in
ja
adc
push
push
dec
push
pop
mov
sbb
adc
ss
inc
loop
shlb
sarb
movsl
xchg
cmp
int3
mov
movsb
int
jmp
stos
lahf
les
jecxz
sbb
scas
pop
pop
cld
test
lcall
loopne
xbegin
or
stc
aaa
mov
mov
dec
bnd
ja
push
or
cmpsl
pushf
std
cmpsl
mov
inc
inc
out
mov
insb
cmp
mov
jge
and
push
mov
in
bound
pop
out
out
sub
sbb
addr16
faddl
xlat
fmulp
dec
ret
ss
lock
mov
scas
mov
sub
xchg
repz
out
ljmp
or
and
cld
mov
xchg
fldcw
ror
orl
mov
sub
add
jns
and
cmpsb
aaa
and
mov
enter
adc
into
cwtl
jnp
addl
ficoml
sub
jge
fldenv
mov
jb
cmp
jmp
aas
popf
pop
sbb
push
nop
insb
mov
sbb
jnp
js
movl
pop
fxch
mov
iret
add
ljmp
movl
movl
movl
mov
mov
xor
sub
div
mov
mov
or
xor
mov
sub
mov
mov
mov
mov
mov
mov
mov
mov
imul
and
or
xor
add
mov
mov
sub
add
mov
xor
mov
and
mov
xor
sub
jmp
jecxz
in
bound
pop
jne
inc
stos
jp
xor
jp
adc
iret
imul
adc
dec
xchg
shr
mov
outsl
ret
rcr
jae
inc
fsubrs
dec
test
xor
mov
or
inc
push
mov
out
mov
xchg
fisubrs
or
bt
call
fstps
mov
adc
add
cmp
pop
mov
sbb
mov
and
mov
xchg
imul
mov
inc
insl
xchg
pop
and
sbb
or
jmp
leave
and
addr16
fdiv
in
and
fmull
out
icebp
add
mov
sub
pop
push
and
cmp
jg
into
jl
ss
mov
ljmp
loope
add
mov
int
adc
test
jo
repnz
out
xor
mov
cmc
inc
mov
sahf
loopne
pushf
js
cli
mov
mov
mov
dec
test
adc
sarb
inc
jmp
mov
arpl
ja
mov
and
sub
jp
scas
mov
ret
xchg
and
or
repz
cwtl
jbe
xchg
or
mov
mov
add
add
lret
into
in
pop
jg
dec
int3
mov
and
pop
jne
js
rorb
and
ja
repnz
sbb
daa
insb
mov
cld
inc
pop
adc
sbb
add
mov
test
movsb
add
pop
jo
ds
and
hlt
push
mov
adc
inc
sar
daa
sbb
cs
jae
ffreep
adc
lahf
ret
dec
mov
mov
jo
jnp
cmp
push
dec
pop
jmp
pop
push
cli
add
inc
sbb
and
mov
sub
ret
loope
fdivs
aad
dec
aas
jle
pop
or
pop
sub
jmp
je
test
pusha
aam
mov
stc
es
xchg
cwtl
ljmp
fs
pop
sbb
pop
xchg
popa
bound
and
jo
mov
sbb
popa
in
xchg
xchg
aad
out
popf
xchg
int3
mov
fcom
push
or
and
and
push
xchg
jl
fs
notb
pop
xchg
xor
out
int3
cmp
das
cmp
outsl
push
add
pusha
sbb
addr16
jp
mov
pushf
repnz
sub
jnp
adc
mov
pop
movsl
adc
and
inc
add
pop
mov
fwait
mov
cltd
ljmp
adc
mov
xor
jnp
ret
mov
fidivl
inc
inc
std
inc
out
es
out
lcall
cmc
orl
cmc
push
push
jmp
cs
sbb
imull
cwtl
in
cmpsl
fcmove
xor
mov
jno
inc
push
add
es
sub
lahf
cmpsl
inc
int3
sahf
jge
push
push
dec
out
mov
xchg
mov
xor
fdiv
mov
and
lea
mov
shr
or
mov
jmp
pop
pop
mov
push
fisttpll
mov
adc
adc
in
dec
xor
jo
loopne
mov
and
dec
lock
enter
fdivr
dec
addr16
test
iretw
cs
sub
cld
add
lcall
sbb
ret
repnz
mov
pusha
imul
cmp
daa
or
mov
fmull
stc
push
in
ljmp
stos
in
fmuls
pop
cmpsl
mulb
movsb
sub
stos
insb
mov
and
push
jge
je
lods
dec
imull
mov
test
mov
loopne
xlat
mov
adc
fdivp
out
dec
add
incl
sbb
stos
cmp
push
push
das
xchg
inc
add
adc
call
add
hlt
cmp
push
dec
notl
lock
xchg
push
cmpsl
add
and
rol
push
inc
pop
lret
clc
ret
aaa
inc
outsb
jnp
arpl
xchg
pop
mov
mov
or
call
pop
dec
inc
mov
outsb
adcl
dec
xor
mov
sub
in
xchg
mov
imul
repnz
jl
sub
ret
mov
outsl
lret
adc
or
call
sbb
ret
cwtl
mov
mov
xor
cli
ret
inc
mov
mov
add
lds
lods
les
push
sahf
mov
enter
jle
fbld
aam
push
insb
repz
xchg
ds
inc
mov
cmpsb
mov
cld
and
es
jbe
mov
std
fstps
mov
repz
xor
push
int3
sbb
imul
mov
out
inc
jp
std
movsb
sbb
push
cmp
testl
lret
sbb
sbb
push
shll
adc
imul
push
sub
jae
mov
lods
aad
sbb
mov
jo
ljmp
popf
mov
pop
sub
jmp
dec
xlat
mov
popa
xchg
lahf
rorb
mov
mov
ret
inc
ss
jmp
outsl
scas
lea
sbb
push
xchg
movsl
int
in
scas
test
add
push
repnz
xor
add
sub
ds
pop
mov
mov
push
mov
add
ljmp
mov
sbb
inc
cmp
aas
sub
mov
jno
in
push
sbb
push
cmp
jmp
dec
inc
mov
mov
mov
pushf
cmc
adc
mov
pop
sub
cmp
push
pop
insb
je
fisubl
jo,pt
clc
mov
add
movsl
sbb
mov
pop
scas
aas
dec
sub
and
mov
mov
xchg
and
pop
adc
pop
subl
pushf
ficomps
mov
or
insb
cmp
movb
push
mov
mov
shr
jo
andl
roll
mov
xlat
aas
popf
call
aam
adc
or
call
add
leave
mov
xchg
popf
mov
sub
add
cmp
jbe
pop
leave
ret
push
mov
sub
mov
add
push
push
add
push
or
mov
sbb
mov
shrd
cmpl
movzbl
movl
mov
jmp
mov
mov
jne
push
push
push
pushl
push
pushl
call
orl
and
mov
mov
sbb
sub
negl
shr
cmpl
movl
mov
jmp
movzwl
jg
push
push
pushl
call
add
movzbl
adc
mov
adc
movzbl
sbb
xor
xor
xor
mov
sub
sub
mov
adc
mov
movzwl
or
mov
mov
movzbl
xor
xor
xor
mov
xor
mov
or
neg
mov
mov
sbb
shl
mov
sbb
shrd
sub
xor
adc
shr
xor
or
add
mov
jmp
jnp
add
mov
ficoms
push
xorl
outsb
inc
adc
lea
adc
popf
mov
inc
xchg
push
cmp
xchg
mov
adc
leave
inc
add
xchg
jns
mov
hlt
inc
cmc
cmp
insl
pop
in
fidivrl
sti
xor
xor
fwait
psrad
gs
lea
inc
xor
jns
mov
cmpsb
and
mov
mov
fsubs
lods
inc
lea
adc
popa
pop
lret
ret
dec
adcl
jl
add
jbe
pop
fcmovnb
pop
les
bound
jnp,pt
js
lods
ja
inc
inc
outsb
add
push
mov
mov
adc
mov
inc
jbe
inc
lds
adc
jbe
aam
bound
lock
bound
loope
addr16
sbb
popf
mov
stc
stos
xchg
daa
mov
sbb
out
or
test
push
sahf
mov
iret
mov
mov
xchg
sbb
sbb
push
in
aam
push
rcll
cltd
imul
cltd
cmp
fs
adcl
push
and
and
repnz
jle
aam
add
jg
mov
lahf
add
xchg
mov
enter
mov
cmp
mov
add
test
mov
xchg
mov
mov
jnp
mov
sub
sbb
gs
or
cli
mov
mov
ljmp
sub
push
dec
pop
jno
mov
loopne
leave
adc
sbb
push
aaa
inc
mov
inc
jmp
hlt
fdivrl
adc
sbb
mov
adc
inc
or
popf
sbb
pop
or
mov
and
xor
sbb
xchg
sahf
addr16
or
push
adc
cmp
jge
pop
and
pushf
jecxz
sbb
or
imul
mov
mov
push
or
or
adc
je
mov
push
lods
and
jle
ret
sbb
mov
cmp
mov
lods
arpl
pusha
sbb
iret
xchg
bound
or
out
data16
inc
dec
adc
pop
add
dec
in
out
popa
and
mov
cltd
bound
push
xchg
fcoms
out
ja
aas
adc
add
dec
mov
jl
xor
rclb
dec
dec
pusha
inc
addr16
clc
sub
mov
add
insb
dec
and
movsl
enter
movsb
loop
jg
jne
aam
add
test
jle
mov
or
jbe
ret
push
movsl
inc
or
dec
or
add
loope
add
xchg
mov
sub
les
loopne
adc
lea
adc
jb
shr
iret
jae
ja
fisubrl
cmp
xchg
ja
mov
and
lods
push
insb
push
xor
frstor
mov
iret
xchg
mov
or
cmpsb
push
jo
pop
out
mov
sub
or
lods
test
pop
cmp
adc
pop
mov
inc
xchg
lock
mov
pop
add
jg
fwait
insl
xor
mov
sbbl
dec
lods
adc
dec
mov
pop
xlat
and
push
movsl
loop
std
aam
jne
ret
hlt
jp
ja
mov
cwtl
imul
inc
push
pop
lock
rcll
pop
jl
andl
test
insl
and
shll
sahf
ja
fidivrs
fidivrs
rcrb
jae
nop
sti
repnz
bound
aaa
in
xor
repz
cmp
jmp
and
in
push
gs
sarl
es
dec
movl
fs
pop
jnp
mov
pop
jp
jns
aas
mov
mov
jbe
push
pushf
adc
mov
inc
and
imul
pushf
xchg
push
inc
arpl
or
outsb
popf
add
mov
icebp
inc
cwtl
je
mov
ret
sahf
mov
lods
inc
pop
push
mov
adc
sbbl
fdivrl
stos
pop
movsl
imul
push
repnz
sti
cmc
push
and
aaa
ljmp
adc
lods
popf
ret
rcl
insb
daa
push
xchg
xor
pop
fimull
jp
insb
xchg
push
bound
repnz
sarl
jecxz
or
inc
pop
sub
jne
pop
adc
jmp
jbe
mov
imul
mov
rolb
fists
pop
test
fdivr
test
adc
rorb
mov
jl
jnp
pop
pop
mov
and
movsb
cmp
scas
mov
gs
call
mov
mov
stc
push
push
and
inc
mov
and
fiadds
rol
loopne
test
and
cmpsb
jle
fidivl
hlt
pop
jae
fwait
cld
lahf
sub
call
adc
icebp
ss
adcb
std
sub
pop
outsl
mov
incl
in
fsubrp
fstpl
mov
not
xchg
dec
sarb
leave
repz
rolb
js
int3
pop
jo
or
jg
pop
xchg
subb
das
xor
rorb
iret
imul
clc
inc
daa
pop
scas
in
fisttpll
jb
shrb
cwtl
ficoms
mov
cmpl
movl
not
mov
jmp
mov
jg
push
push
push
call
sbbl
adc
andl
mov
mov
xor
xor
or
mov
adc
adcl
neg
xor
or
mov
mov
sub
or
mov
mov
xor
or
mov
sub
sub
mov
xorl
mov
or
mov
xor
mov
movzwl
sub
mov
cmpl
mov
mov
mov
jmp
mov
jle
push
call
sub
and
subl
or
or
adc
mov
mov
cmpl
movzbl
mov
jmp
mov
jb
push
push
call
mov
xor
xor
sub
or
xorl
adc
sub
sbb
mov
shl
mov
sub
xor
or
xor
sbb
mov
xor
adcl
shld
shl
mov
mov
movl
movl
movl
cmp
movl
jne
movl
cmp
movl
je
xor
mov
xor
mov
xor
xor
add
sbb
xor
xor
mov
cmpl
mov
mov
mov
mov
jmp
movl
movl
jg
push
call
movl
and
sub
subl
movl
mov
shld
movl
shl
cmp
movl
jne
movl
cmp
je
and
mov
xor
or
and
mov
push
movl
pop
or
xor
shl
mov
addl
xor
adcl
shr
addl
or
mov
or
mov
mov
mov
mov
cmpl
movzbl
mov
jmp
mov
mov
jl
pushl
push
pushl
push
call
mov
add
inc
mov
and
sub
mov
jmp
add
int3
sub
inc
les
pop
inc
adc
lea
adc
jo
add
je
test
out
loope
mov
add
bound
ret
sub
cli
xchg
ja
sbb
lcall
das
jl
mov
sbb
imul
push
lea
dec
jbe
aaa
add
pop
mov
cmpsb
or
and
jge
jl
ja
cmp
adc
jle
xchg
outsl
push
loope
out
repz
xor
pop
out
push
pushf
sub
sarl
das
jp
adc
or
sub
daa
dec
mov
inc
popa
loopne
lds
int
sub
mov
sbb
add
fmuls
inc
inc
inc
idivl
out
dec
scas
xchg
aaa
lret
dec
movsl
repz
or
scas
sub
cltd
adc
mov
loope
mov
mov
jmp
jl
push
inc
or
inc
cs
push
pop
sbb
and
cmp
jg
into
push
scas
and
fidivrl
lock
mov
push
pop
js
movsb
push
xchg
jae
xor
mov
aaa
outsl
out
add
mov
inc
mov
aas
mov
mov
imul
fwait
mov
mov
mov
jmp
inc
cmpsl
pusha
add
shrl
das
notl
and
lret
loope
mov
fnstenv
dec
in
in
push
dec
stos
test
jno
xchg
imul
sub
sarl
sbb
es
add
xor
fidivrl
rclb
imul
cwtl
mov
insl
sub
movsl
imul
jno
cmpsl
lock
rolb
add
push
repz
sbb
xchg
data16
pop
cmp
mov
fbld
push
cmp
lret
xchg
xchg
aas
pop
sub
pusha
imul
incb
enter
out
sbb
lock
sbb
movsl
cmc
xchg
rolb
ret
mov
insl
push
dec
xlat
jbe
in
add
or
out
lods
fucom
jbe
sub
adc
and
insb
lahf
fstp
test
and
sti
xchg
jecxz
and
xor
jno
adc
ljmp
jecxz
inc
mov
lods
push
add
sbb
aaa
das
jl
mov
sahf
pushf
pop
gs
dec
in
mov
fwait
loop
mov
out
rcrl
pop
or
and
movsl
sub
addr16
mov
ss
dec
push
pop
sub
mov
subl
add
mov
cmpl
movzwl
movzbl
mov
mov
jmp
movl
movl
ja
pushl
call
or
and
or
xor
mov
adc
adc
mov
xor
mov
lea
andl
mov
addl
mov
xor
mov
xor
xorl
xor
addl
shr
subl
shl
or
mov
movl
add
mov
mov
xor
xor
andl
shr
addl
shl
sbbl
or
subl
push
lea
push
subl
lea
push
call
cmpl
mov
mov
jmp
mov
movzwl
ja
pushl
push
push
call
adc
movzbl
sub
and
mov
xor
adc
or
sub
xor
xor
mov
and
mov
cmpl
movl
mov
mov
jmp
movl
movl
jae
push
pushl
pushl
pushl
call
sbb
sub
adcl
or
sbb
xor
add
mov
sub
and
mov
xor
xor
shr
shl
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
lea
push
shl
call
mov
mov
xor
xor
shr
shl
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
lea
push
shl
call
mov
mov
xor
xor
shl
shr
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
shl
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
lea
push
shl
call
mov
mov
xor
shl
xor
shr
or
push
lea
push
mov
mov
shrd
shr
jmp
mov
pop
cmp
shlb
notb
fidivrs
lea
adc
pop
fistl
ljmp
pop
xchg
ljmp
dec
sub
push
add
in
hlt
imulb
lcall
xchg
push
xchg
fwait
add
push
xor
fildl
xchg
inc
out
popf
or
mov
inc
into
push
int
subb
ret
out
dec
out
pop
scas
adc
mov
xchg
aam
in
insl
sub
insl
push
inc
test
jne
inc
mov
sub
dec
clc
push
lret
dec
push
sbb
insb
outsb
sub
xchg
dec
cli
pop
push
pop
push
lahf
adc
jg
jne
inc
out
jg
xchg
call
gs
jmp
xchg
jns
insb
lods
lret
loope
mov
push
popa
nop
mov
iret
sbb
sbb
push
pusha
add
pop
xchg
testl
mov
into
dec
movsl
dec
lcall
sti
lret
mov
js
adc
mov
xchg
sbb
scas
cmp
cmpl
into
push
outsb
pop
inc
xlat
push
loop
enter
cltd
das
push
push
push
jge
xchg
cli
addl
pusha
pop
ficomps
pop
jl
lahf
popf
cmp
inc
popa
jecxz
push
insb
outsl
in
mov
sbb
insl
outsl
std
sarb
shrl
sti
or
popf
shll
idiv
adc
sub
push
mov
jns
adc
dec
std
aaa
movsl
loop
lods
mov
add
xchg
lds
sbb
rcrb
xor
mov
imul
dec
daa
xor
repz
icebp
into
cmpsl
fnstenv
or
jbe
mov
mov
inc
adc
scas
call
cmp
push
lods
add
lods
xchg
std
aas
cmpb
jge
inc
xchg
xchg
jmp
inc
notb
adc
sub
xor
andb
nop
jp
adc
mov
loopne
int3
jecxz
jg
push
mov
test
jns
xchg
sbb
dec
and
add
call
inc
mov
mov
xchg
jno
jg
jo
dec
rcll
add
cmpsl
xchg
push
fcomp
mov
rorb
outsb
inc
imul
fistpll
mov
xchg
inc
lret
push
mov
mov
cmpw
mov
stos
fbstp
fbld
ret
add
shlb
sub
xchg
test
ret
xor
and
sub
fstpl
xchg
mov
inc
xchg
movl
adc
shl
mov
xor
or
mov
shrd
shr
mov
mov
xor
xor
or
shl
add
mov
mov
shrd
shr
xor
mov
mov
xor
or
add
lea
push
shl
call
mov
mov
xor
xor
shr
shl
or
mov
lea
jmp
xchg
sbb
sbb
sub
mov
lea
adc
xor
loop
roll
int
inc
sub
mov
fldcw
sub
out
insl
imul
imul
loope
lds
pop
mov
sahf
push
dec
addl
and
xor
cmp
dec
mov
and
divl
testl
or
pop
int3
popf
mov
jecxz
xor
pop
movl
cmp
xchg
mov
aas
dec
xchg
int3
mov
pop
dec
leave
bound
jmp
aad
iret
insb
pop
loopne
sub
pop
pusha
loopne
into
push
pop
cmp
ja
dec
xchg
xchg
pop
fnstenv
push
mov
jne
or
enter
mov
and
out
mov
mov
popw
jl
lret
mov
sahf
sub
mov
sub
mov
pop
hlt
pusha
jg
push
mov
pop
addr16
test
daa
add
es
adc
lea
dec
jae
outsl
loope
bound
jo
pop
mov
daa
adc
mov
dec
test
outsl
lret
scas
popa
cwtl
movsb
cmp
and
leave
ds
lahf
rorb
cmp
mov
push
cmc
pop
lds
jp
pop
pop
jbe
add
lret
bnd
sbbl
push
push
cwtl
jge
loop
inc
out
enter
and
jb
mov
iret
lret
and
icebp
cmp
pop
mov
int
out
pop
inc
out
sar
imul
add
js
aad
inc
gs
fldcw
xchg
aad
ret
push
mov
insb
jmp
jle
push
cltd
push
aaa
mov
in
or
data16
aaa
fldcw
scas
adc
dec
pop
hlt
movsl
mov
xlat
and
enter
xchg
mov
xchg
pop
and
pop
adc
std
mov
popa
inc
fisubs
or
mov
sbb
push
test
nop
adc
loope
jnp
cmpsl
mov
faddp
cwtl
daa
clc
push
cltd
sub
stos
inc
sub
add
ret
mov
adc
mov
icebp
dec
mov
out
pop
cmc
mov
std
in
inc
cmp
pop
inc
sub
jp
lds
xchg
lea
popf
mov
add
push
and
cmpsl
pop
cwtl
das
inc
cmp
push
sub
jge
arpl
push
ficoml
insb
int3
cmp
mov
pop
pushf
xchg
push
mov
cmp
or
nop
scas
mov
adc
add
mov
cmp
pusha
fxch
cmp
sub
cmpsb
cmp
or
test
mov
sub
repz
mov
shrd
shr
mov
mov
xor
xor
or
push
mov
mov
push
pushl
shl
call
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
mov
push
pushl
shl
call
mov
mov
mov
mov
mov
mov
rol
mov
xor
cmp
je
mov
mov
xor
test
je
mov
mov
movzbl
sub
mov
rorb
mov
mov
inc
cmp
jb
dec
jne
mov
mov
shrd
shr
jmp
mov
add
sub
jle
sub
and
adc
lea
adc
sbb
cmp
mov
jae
test
push
cli
mov
inc
push
sbb
pop
xchg
cwtl
adc
xchg
cld
xchg
lods
hlt
ret
pop
jae
jl
movsl
cld
fimuls
mov
call
or
pop
xor
mov
loope
insb
mov
in
jecxz
mov
adc
mov
xchg
dec
pop
repz
pop
scas
incl
xor
or
cmp
sbb
mov
push
sbb
jno
fs
out
faddl
jo
sub
cld
add
cs
and
mov
fcmovnbe
xor
out
shl
or
rol
inc
stos
imul
cmpsl
sbb
jge
xchg
int
sbb
mov
jg
test
mov
sub
jle
repnz
add
test
loop
and
leave
or
jb
in
xlat
je
mov
cwtl
jnp
push
loop
cmp
mov
addr16
dec
jp
je
mov
pop
dec
dec
push
into
mov
cmp
or
jecxz
adc
and
loope
and
adc
mov
pop
outsl
add
ss
and
sub
out
and
pop
fcoml
push
loopne
aad
imul
dec
scas
repnz
inc
mov
mov
into
sbb
lret
push
cmpsl
pop
jns
pxor
adc
hlt
xchg
imull
mov
mov
mov
fnstenv
pushf
xchg
pop
sbb
das
je
mov
and
fwait
cmp
shrl
and
add
das
test
inc
mov
push
mov
pop
and
repz
test
pushf
add
lcall
sub
ret
adc
scas
and
inc
jecxz
inc
mov
pop
lret
fimull
pop
std
xchg
jbe
jb
sbb
into
mov
aam
or
xchg
cmpsb
jne
in
dec
mov
in
mov
fiadds
push
aaa
cmp
cmpl
ret
adc
push
test
push
movsb
into
pop
xor
bnd
pop
mov
add
hlt
in
aaa
aas
sbbl
xchg
dec
enter
enter
loopne
jae
in
jbe
inc
push
lret
mov
js
gs
lret
jmp
xchg
stos
ds
fidivrs
jmp
repz
and
xchg
inc
cmp
xchg
lret
stos
xor
mov
pop
stc
test
outsb
adc
push
xchg
test
push
mov
mov
xor
xor
or
push
add
jmp
and
lods
and
js
jmp
adc
lea
adc
mov
and
lods
inc
gs
sub
pop
sbbb
push
mov
popf
fcompl
dec
sbb
filds
mov
or
sub
les
hlt
faddl
xlat
lods
rcrb
scas
sbb
and
mov
lahf
sysenter
rolb
sti
imul
mov
hlt
jne
cwtl
cmp
sbb
sub
jecxz
lods
pop
movsl
push
xlat
cld
stos
hlt
or
stc
cwtl
sub
movsl
shlb
call
sbb
ret
mov
adc
mov
movsl
movsl
mov
ret
in
test
daa
repz
loop
xlat
mov
push
dec
jns
push
add
rorb
insb
xchg
pusha
sbb
mov
imul
adc
push
pop
loop
sub
adc
pusha
mov
jl
ljmp
mov
mov
or
mov
movsl
ret
sbb
sarl
nop
cli
in
jne
and
xchg
mov
xor
lods
mov
sahf
lds
xchg
push
xor
push
pushf
add
push
jne
ret
aam
lret
scas
call
mov
push
push
push
test
sub
add
xchg
stos
add
sbb
fidivrl
cmp
push
xor
add
ds
mov
test
jmp
lds
ficomps
mov
or
dec
repnz
sub
fwait
int
adc
cmc
mov
lea
sub
xchg
inc
xor
sbb
mov
jb
jl
push
sbb
mov
push
and
or
loopne
or
jmp
jle
je
xorb
pop
xchg
rorb
jno
cmpb
aas
lods
daa
jle
mov
fisubrs
xchg
cmp
xchg
add
dec
add
sbb
mov
scas
mov
hlt
sbb
mov
enter
push
cwtl
in
xlat
mov
pop
sub
xchg
outsl
cmp
cmp
outsl
sti
xchg
jne
mov
stc
add
sub
xchg
jae
xchg
mov
pusha
int
loopne
mov
push
xor
lcall
dec
mov
push
cmp
xchg
add
rclb
xor
push
mov
and
popf
pop
mov
mov
cs
or
icebp
lds
xchg
and
inc
push
shl
call
jmp
outsl
xchg
pop
test
add
mov
movlps
pop
sarl
cmp
add
jnp
lret
mov
rcll
rcrb
hlt
mov
hlt
jmp
jb
sub
cmp
enter
pop
rorl
and
pop
sti
dec
ret
ret
subb
xor
stc
xchg
and
mov
roll
pop
mov
jmp
iret
in
loope
sbb
test
mov
nop
jg
add
loope
fdivs
fsubrs
call
ja
sbb
xchg
dec
movsl
arpl
inc
and
dec
jg
xor
je
jecxz
xchg
add
shlb
cmc
dec
adc
stos
mov
in
scas
mov
jg
inc
or
pop
adc
pop
lods
std
outsb
or
adc
lods
dec
cltd
inc
inc
inc
mov
lea
sub
pop
std
push
cmc
scas
mov
push
cmp
hlt
sub
xchg
mov
mov
xchg
ja
pusha
in
mul
scas
lret
sbb
pop
cli
push
dec
js
aaa
cmpsb
add
mov
cli
lret
ds
cmp
out
sbb
sbbl
ret
dec
ds
lahf
and
jecxz
push
add
nop
aas
pop
adc
ret
aad
mov
stos
xorl
fildll
xchg
jno
je
xor
insl
xor
loopne
imul
popf
inc
cmp
daa
ja
aas
pop
mov
and
mov
push
push
inc
int3
xor
subl
and
pushf
ror
jae
xor
iret
dec
mov
lcall
pop
pop
jecxz
call
dec
js
pop
stos
daa
movsl
sub
sub
rorb
mov
loop
imul
scas
xchg
loopne
dec
cli
ljmp
sti
outsb
dec
push
dec
cmpb
addr16
popf
fiaddl
in
mov
sub
insb
inc
xor
mov
mov
adc
xchg
cmc
sub
hlt
movsl
sbb
pushf
minps
cmp
imul
loop
or
jb
gs
mov
mov
mov
cmp
out
inc
js
adc
daa
mov
mov
inc
inc
adc
inc
movsb
adc
push
imulb
jecxz
sub
jge
adc
inc
scas
adc
scas
ret
xor
shll
out
popf
adc
xlat
xor
arpl
xor
or
jns
xor
inc
test
mov
mov
shll
mov
in
sub
lcall
push
fdivs
cmpsb
std
cmp
lods
mov
test
lds
adc
lods
enter
add
adc
xor
or
add
push
push
mov
shl
mov
shrd
shr
mov
mov
xor
xor
or
add
jmp
jge
jbe
jne
jge
das
adc
out
stos
push
sbb
adc
aas
xchg
sbb
mov
sbb
loop
mov
fists
popa
pop
jle
aaa
mov
mov
mov
sub
dec
xor
aaa
outsl
push
jns
xor
sbb
mov
pushf
outsb
jo
push
call
mull
fisubs
cmp
sub
clc
sub
insb
or
sub
mov
and
aas
push
insb
movntq
incb
adc
sub
insl
lea
jns
ret
jno
inc
call
mov
cmc
or
pushf
nop
bound
push
add
mov
mov
lock
shlb
mov
and
gs
cmpl
adc
cmp
xchg
sub
lods
in
mov
sbb
mov
sbbb
and
sbb
or
sbb
ss
jecxz
mov
jl
pop
dec
sbb
jmp
mov
push
and
xchg
add
std
sbb
movsl
xchg
pushf
sub
lds
mov
fwait
lea
fsubl
out
movsl
mov
lds
insl
push
and
push
lds
leave
xor
into
lret
loopne
xlat
jmp
dec
xchg
fsubrs
icebp
popa
shl
and
pop
int
stos
js
fs
jne,pt
lods
lea
ss
shrb
je
adc
test
cmpsl
push
lret
movb
pop
js
add
push
out
xor
mov
push
test
mov
sub
adc
ja
mov
add
jns
ja
jge
push
push
lock
les
cld
imul
in
ret
mov
xor
push
sub
mov
mov
les
mov
push
add
dec
fimull
cmp
mov
add
scas
jno
and
popa
lcall
lret
iret
inc
repnz
sbb
fwait
dec
jnp
ljmp
stos
cmpsl
mov
inc
cvttps2pi
not
movq
ret
pop
push
int
lock
ret
cmp
les
pusha
aaa
push
rcrb
hlt
ljmp
cmp
push
mov
arpl
pop
in
mov
addr16
cld
adc
les
and
dec
movsb
ret
inc
testb
enter
subl
ljmp
shll
nop
inc
inc
iret
loop
sub
aam
lds
movaps
mov
dec
sbb
shl
call
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
push
shl
call
mov
mov
shrd
shr
mov
mov
pop
xor
xor
pop
shl
or
pop
leave
ret
mov
mov
adcl
or
mov
mov
jne
cmpl
movl
movl
movl
jmp
mov
mov
jne
push
pushl
pushl
push
call
adcl
sbbl
add
orl
xorl
subl
mov
mul
ret
push
mul
mov
mov
mull
add
mov
mul
add
pop
ret
push
mov
sub
push
push
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
jmp
mov
fs
push
stos
sbb
dec
loop
adc
adc
mov
adcb
sub
jl
fldenv
lock
add
notb
lcall
test
xor
sub
adc
xor
js
inc
xor
add
xchg
adc
inc
or
enter
jnp
movsb
scas
lahf
je
fld
push
rorl
add
lock
fcomi
ret
mov
cmp
sub
mov
jp
sbb
add
lret
mov
lret
lcall
mov
stc
into
ret
dec
sbb
rcll
dec
sub
arpl
lods
pop
aam
jge
mov
add
mov
or
mov
mov
push
pop
push
mov
bound
lea
inc
in
testl
dec
push
popf
mov
sbb
add
dec
ja
add
pop
sub
push
push
cmp
push
fxam
fildll
mov
inc
fs
cmpsb
mov
fisttps
push
cltd
scas
out
ja
in
jo
sti
cmp
rolb
jno
pop
jge
push
aad
orb
test
inc
dec
cltd
cmp
and
rcrb
loop
call
into
mov
idivl
jecxz
or
icebp
roll
ret
es
pop
stc
and
push
ret
or
dec
push
jnp
orb
scas
mul
int3
sub
ret
mov
and
imul
shrl
jmp
sub
sbb
jnp
mov
sub
imul
adc
mov
mov
outsl
push
or
add
dec
lock
xor
andl
and
daa
cmp
inc
xchg
or
repnz
jbe
sbb
sbb
shlb
into
pop
imul
mov
jg
int
imul
les
punpckhdq
or
and
ficompl
inc
sbb
xchg
es
dec
data16
cld
cmp
or
xorl
jo
pop
inc
adc
push
repz
adcb
mov
mov
loopne
aaa
add
lret
pop
cs
inc
cmp
xchg
mov
shlb
scas
and
mov
jo
sar
or
push
jle
xchg
lds
lods
and
repz
subb
xorl
cmp
in
mov
jbe
push
adc
jne
mov
xlat
adc
mov
jmp
cmp
ret
fldl
jno
mov
xchg
sbb
mov
pop
mov
fwait
sbb
and
and
fisubrl
dec
jo
cmp
outsb
xchg
or
jb
xor
pop
stos
xor
cmpl
mov
pushf
imul
pop
in
push
into
cpuid
or
lods
inc
fdivrs
testb
cld
jge
sub
push
dec
std
inc
lahf
stos
ret
and
mov
xchg
sbb
js
adc
fwait
xchg
lock
icebp
mov
scas
dec
divb
lock
push
or
dec
imul
mov
sub
rolb
pop
lcall
jne
dec
mov
popf
jl
popf
cld
or
mov
cld
sbb
xchg
sub
sahf
pop
mov
push
jg
sub
jp
movl
movl
movl
movl
movl
movl
movl
mov
mov
xor
div
mov
xor
mov
push
div
mov
xor
xor
sub
mov
lea
mov
mov
sub
xor
mov
xor
jmp
imul
scas
std
dec
and
mov
adc
adc
enter
inc
int
leave
add
je
inc
mov
mov
cltd
mov
xor
loop
add
js
bound
jcxz
cmpsl
jnp
cmp
fbstp
push
aad
clc
mov
repz
xlat
mov
mov
scas
sbb
xchg
shrl
shrb
xchg
stos
inc
mov
add
mov
adc
imul
test
sbb
push
jns
xchg
jmp
push
cwtl
fdivl
mov
cli
and
add
xchg
leave
push
dec
lret
shll
sbb
pop
cwtl
or
dec
push
sbb
lret
movsb
and
out
stos
mov
into
push
arpl
out
loopne
mov
push
cli
mov
iret
lock
ljmp
sbb
cli
pop
push
enter
test
mov
pop
add
or
sti
cmpsb
dec
cs
add
rolb
movsl
sti
jle
aas
lahf
sti
adc
mov
cmp
cmpl
adc
test
lret
scas
push
pop
stos
and
div
inc
aaa
push
fildll
pop
mov
mov
aad
xor
mov
pop
fmulp
loopne
pop
clc
jae
push
mov
repnz
pushf
out
out
sbb
imul
inc
repz
insb
dec
mov
sub
cmp
aaa
xor
push
mov
int3
sub
and
and
lret
ds
iret
shlb
inc
icebp
icebp
icebp
fwait
dec
cmp
mov
cmp
pushl
mov
cmp
loope
test
cmp
xor
mov
lcall
sbb
sbb
sarl
pushf
sub
les
xor
jnp
add
cs
imul
push
mov
aad
inc
pop
push
xor
ljmp
les
std
xor
lea
add
pop
dec
inc
cltd
sub
sahf
sbb
in
cld
or
insl
popa
imul
inc
or
out
rcrb
push
push
in
fnsave
fsubrl
add
pop
hlt
push
mov
leave
and
gs
xchg
inc
adc
ret
cmp
sbb
aaa
jnp
movsl
pop
add
ja
inc
push
int
mov
rorb
sub
dec
cmp
mov
mov
cmp
mov
mov
pmovmskb
jb
mov
pop
sub
xor
sub
in
sub
sbb
stos
inc
cmovp
cmpsb
into
lahf
mov
sub
push
push
popl
lret
sti
lcall
mov
mov
outsb
sub
cmp
adc
js
dec
outsl
inc
das
jg
in
ss
and
mov
pop
inc
divl
dec
in
mov
sti
sbb
cmc
inc
test
test
cmp
repnz
out
lods
xor
cmpsb
cmp
or
add
dec
into
les
pop
mov
inc
stos
daa
call
mov
insb
inc
scas
pop
pop
insl
or
mov
gs
xor
jbe
sub
addl
xchg
and
adc
jge,pt
or
icebp
jne
fistps
mov
mov
inc
sti
cmp
jecxz
dec
mov
leave
jnp
add
mov
sub
mov
mov
xor
mov
sub
div
mov
pop
xor
sub
cmp
ja
jmp
mov
movl
movl
movl
movl
mov
mov
mov
sub
imul
xor
xor
div
mov
mov
push
and
mov
sub
sub
mov
mov
mov
xor
mov
xor
and
add
add
mov
mov
add
mov
xor
mov
xor
mov
sub
mov
add
mov
sub
xor
mov
xor
or
xor
mov
sub
mov
mov
mov
xor
jmp
lret
lahf
push
pop
sbb
leave
pop
jmp
call
lods
filds
adc
adc
add
repz
mov
ds
fists
and
clc
cld
sub
repnz
and
mov
cmp
cmp
sbb
imul
or
xor
cmc
bound
fiaddl
mov
xchg
jnp
cltd
lret
fstps
ds
mov
int3
mov
cltd
lds
ljmp
xor
int
inc
bound
inc
push
dec
mov
xchg
rcl
sahf
add
fucomp
fwait
mov
adc
and
cmp
mov
dec
scas
xchg
cmp
jns
lea
imul
insl
lods
inc
shlb
adc
popa
lea
jecxz
sub
fbld
int
jl
ss
ja
adc
sub
and
insl
flds
enter
pop
icebp
inc
push
repz
imul
addr16
and
and
xor
jae
push
sub
leave
cmpsb
ja
cltd
gs
in
mov
or
daa
inc
cmp
arpl
lahf
les
mov
cmpsl
subl
std
lret
push
mov
sub
es
sbb
mov
aaa
mov
sub
sub
ret
js
push
push
bound
aad
mov
into
pop
jle
and
xor
scas
insl
cltd
mov
pop
icebp
cli
ljmp
daa
fwait
dec
mov
add
pop
ret
faddl
dec
sub
out
xchg
cld
xchg
cmovl
push
inc
jecxz
push
dec
loop
inc
movsl
stos
inc
xchg
orl
stos
enter
dec
or
xchg
dec
lret
ret
jns
mov
sti
imul
aad
movsl
mov
sub
ss
dec
cmp
and
mov
stc
aaa
xchg
data16
or
jo
js
inc
les
pop
pop
and
cwtl
sbb
push
sar
push
mov
fmulp
xor
inc
sbb
xchg
cmp
out
aad
pop
dec
jge
sbb
push
rcll
xchg
nop
fidivs
add
cmp
dec
dec
inc
bound
inc
add
std
inc
mov
into
dec
mov
fstps
call
mov
incb
mov
fisttpll
pop
mulb
je
sbb
cmc
popl
leave
rorb
jns
inc
addb
ds
mov
cld
push
lock
push
mov
sub
xchg
mov
in
push
dec
mov
lcall
out
filds
push
jl
cmc
jb
inc
pop
add
xchg
sub
rcrl
cmp
inc
jge
dec
test
or
addr16
jp
out
jge
lea
cmp
test
es
cmp
scas
xor
les
idivl
pusha
outsb
jb
gs
out
xlat
popa
adc
xor
inc
adc
int3
push
outsb
in
enter
int
adc
fwait
repz
add
adcl
sbb
loopne
pop
dec
push
jl
mov
and
ret
lods
jb
fucomip
jmp
xor
cwtl
icebp
rclb
mov
xorb
ret
xor
pop
imul
repnz
pop
test
gs
and
data16
idivb
mov
sub
ret
or
out
lret
test
fucomip
jp
lahf
cs
movsb
xor
sub
div
pop
xor
sub
cmp
jbe
pop
pop
pop
leave
ret
push
mov
and
sub
push
push
push
push
call
mov
movzbl
push
call
test
jne
xor
jmp
adc
mov
cmpl
movl
movl
movl
jmp
movzbl
jbe
pushl
call
orl
addl
adc
sbbl
andl
mov
xor
mov
jmp
xor
push
or
cli
sbb
mov
call
adc
and
lea
les
les
fstpl
dec
sub
xor
pop
sbbl
mov
movsl
sbb
imull
push
cltd
push
cmpsb
mov
fadd
push
rolb
dec
cmp
dec
pop
inc
test
sub
clc
iret
lods
pop
ds
les
mov
mov
and
push
jp
in
je
dec
adc
inc
mov
mov
lods
std
out
cmp
sbb
and
jb
inc
test
das
aam
js,pn
xor
loopne
pop
out
pop
xchg
inc
leave
lcall
fmull
das
push
movsb
mov
mov
imull
pop
push
xor
ret
inc
je
loop
sbb
cli
jecxz
scas
cmp
test
add
cwtl
xor
nop
pop
sub
xchg
ffreep
lcall
xor
lcall
and
or
mov
popf
xor
pop
jmp
bound
sub
stos
cmp
enter
pop
orb
bound
adc
and
jne
lods
sub
addr16
pop
and
push
negl
scas
and
repz
insl
es
ret
testl
rclb
xorl
cmc
sar
pop
scas
add
inc
jmp
jle
or
shl
das
xor
shll
fscale
mov
test
add
xchg
cmpsb
xlat
xchg
in
sub
cs
test
jo
xlat
push
xchg
push
rcrb
sahf
xor
bound
cltd
leave
ds
mov
or
dec
repz
xlat
sbbb
push
or
inc
xorl
loopne
cli
dec
fimuls
pop
sbb
cmp
fistpll
and
sahf
push
leave
lock
and
jne
iret
xlat
and
or
lcall
cmp
and
dec
fcmovbe
and
clc
sti
enter
dec
movsb
ljmp
cld
or
mov
aas
mov
test
pop
mov
iret
aad
mov
jge
fnstcw
jge
mov
add
push
scas
cmp
inc
gs
cmp
insb
xor
lods
fadd
mov
sbb
mov
xlat
adc
iret
arpl
cmpsl
mov
mov
fnsave
sbb
push
mov
notb
in
sub
mov
lock
cli
out
out
cmpsl
insl
xchg
push
in
fwait
mov
jne
sti
cmpb
mov
cmpl
movl
movl
jmp
movl
mov
je
push
call
addl
subl
and
andl
movl
orl
movl
adcl
push
mov
add
pop
mov
cmpl
movl
movl
movl
movl
jmp
not
movl
jl
pushl
push
push
push
push
push
push
push
call
subl
subl
addl
adcl
andl
neg
mov
xorl
mov
movl
mov
movl
mov
andl
movzwl
or
cltd
movzwl
xorl
idiv
cmpl
mov
movl
mov
mov
jmp
movl
movl
jne
pushl
push
push
call
xor
xor
mov
and
or
mov
mov
sbb
movzwl
sub
sbbl
movzbl
sub
mov
sub
mov
movzwl
addl
or
mov
or
mov
cmpl
movl
mov
mov
mov
jmp
movl
movl
jae
push
pushl
push
pushl
call
sub
sub
adcl
mov
or
addl
mov
mov
mov
movl
mov
mov
adc
mov
sbbl
sub
sbbl
mov
andl
xor
sbb
jmp
mov
sbb
push
and
mov
xchg
movlps
xchg
sub
loop
jge
shrb
lock
fcmove
addb
or
mov
mov
movsl
mov
xor
jge
daa
fucomp
rcrb
fldenv
mov
lret
or
repnz
sbb
and
fcoml
aam
insb
pop
mov
mov
push
hlt
push
rcrb
pop
int3
jmp
aam
into
or
dec
lcall
je
divl
in
cmp
add
js
aas
jp
adc
jb
negb
push
inc
fidivl
sahf
fcmovne
pop
add
iret
cmc
leave
adc
dec
ret
lods
imul
sar
and
in
inc
add
inc
fisttpll
push
lods
xchg
ss
cmc
cli
add
inc
add
insb
inc
push
pop
lock
shll
out
cmc
bound
push
pop
bound
xor
iret
hlt
push
sti
lcall
sub
repnz
mov
adc
std
int3
pushf
pushf
jne
int3
push
and
push
xchg
sub
jle
decl
push
adc
movsl
cmp
fistpl
mov
lods
xor
loopne
jp
jnp
lods
sub
nop
inc
call
shlb
es
push
lret
aam
add
mov
in
aad
pushf
lods
out
sbb
shrb
mov
scas
pop
out
push
or
aas
iret
xor
test
fs
mov
imul
stos
pop
pop
aas
adc
xchg
mov
jp
lea
and
int3
lcall
jmp
adc
das
mov
loop
or
pop
pop
cmpsl
jo
pop
stos
rcrl
mov
pop
shll
es
add
dec
mov
loopne
out
outsb
in
jp
outsl
and
sbb
dec
aaa
popa
or
mov
jae
mov
sbb
jbe
not
mov
hlt
fs
add
adc
imul
je
sbb
fadds
sub
pushl
arpl
xlat
sahf
enter
aad
xchg
stc
lcall
movsl
shlb
ss
xchg
outsb
out
push
push
addr16
test
jge
mov
pusha
call
fs
fimull
sbb
mov
addr16
lods
scas
iret
mov
ds
xchg
push
and
sub
insl
inc
cmp
test
lret
out
sbb
adc
push
loope
das
movsl
mov
idivw
pop
ret
push
and
jmp
mov
int
inc
loop
jae
or
js
mov
es
je
out
mov
add
fdivrl
sub
movl
mov
movl
cmp
movl
jb
sbb
movl
movl
movl
cmpl
movzbl
mov
jmp
movl
mov
jbe
pushl
call
sbb
mov
sub
mov
and
inc
movl
and
mov
cmpl
mov
movl
movl
mov
jmp
mov
jb
pushl
pushl
push
push
call
andl
sbbl
mov
sbb
movzbl
or
xor
xor
xor
xor
orl
add
mov
orl
xor
sbbl
div
mov
add
sbbl
and
pushl
pushl
call
movl
movl
mov
adc
movl
cmpl
movl
mov
mov
jmp
movl
movl
je
push
push
call
adc
xor
xor
mov
sbb
xorl
or
mov
xorl
mov
adcl
and
addl
or
mov
subl
and
xor
adcl
pushl
pushl
addl
call
not
pushl
dec
movl
movl
xor
movl
subl
movl
or
movl
cmpl
mov
mov
not
mov
jmp
movl
mov
jl
pushl
push
push
push
push
call
xor
and
sbb
adcl
movzwl
or
movl
movl
xor
movl
mov
dec
mov
andl
sub
sbb
mov
or
orl
and
xor
jmp
or
ja
mov
jle
add
adc
adc
mov
sub
inc
and
mov
cmp
cs
fwait
inc
adc
push
in
mov
leave
xchg
mov
aad
ljmp
std
dec
mov
dec
nop
test
stos
into
pop
cld
aas
test
jb
mov
sub
push
cmp
mov
pop
shll
jecxz
cmpsl
xor
pop
mov
pusha
pop
or
jl
orl
cs
sbb
mov
jmp
ljmp
cmc
fs
data16
je
nop
into
xor
jne
aad
mov
push
pop
in
xchg
hlt
or
xchg
xor
add
jbe
or
add
mov
lea
push
xor
pop
xchg
pop
add
dec
popf
cmp
int3
mov
pushf
xchg
into
fiadds
in
fnstenv
std
mov
fnstcw
jno
mov
xor
loop
mov
imul
ss
mov
bound
sbb
je
mov
adc
xor
cmp
sarl
and
andb
sub
repz
enter
mov
clc
jge
roll
sahf
sbb
pop
roll
xchg
ljmp
push
mov
mov
ret
pop
iret
mov
fnstcw
sub
scas
push
xor
cld
das
push
cmp
pushf
cmp
cs
and
sbb
jae
orl
imul
jge
pop
hlt
adcl
jns
push
ljmp
xor
xchg
fsubl
test
loopne
std
mov
ja
pop
mov
mov
push
pop
and
and
loopne
sbb
dec
idivl
add
idivl
mov
repnz
fdivrs
ret
push
jae
stos
sarl
sub
push
mov
dec
sub
outsb
mov
mov
mov
idivb
aaa
and
fiadds
jo
lcall
int3
aas
dec
xlat
ret
pusha
add
out
mov
insl
outsb
movsl
xchg
push
lahf
mov
sub
stos
xchg
inc
cmc
add
and
lock
xchg
ljmp
adc
gs
or
dec
pusha
sbb
jp
mov
roll
das
or
fimuls
mov
js
or
idivb
jmp
dec
jnp
push
adc
and
push
test
xor
test
jmp
add
pop
mov
addl
sub
movl
pushl
xor
mov
mov
andl
add
xorl
and
cmpl
mov
movl
jmp
movl
je
call
or
or
not
or
mov
sub
mov
xor
and
pushl
sub
mov
mov
andl
imul
xor
or
mov
movl
sub
pushl
sbbl
call
adcl
dec
movl
jne
movl
cmpl
mov
movl
mov
mov
jmp
movl
movl
je
pushl
push
call
or
xor
mov
and
mov
sbb
mov
add
movl
mov
mov
movl
mov
xorl
call
lea
mov
cmpl
movzwl
mov
mov
movzbl
jmp
movl
not
jb
call
and
xor
or
sbb
neg
orl
mov
mov
sub
and
neg
lea
mov
mov
mov
sub
mov
mov
cmpl
movl
mov
movl
jmp
movl
jge
push
call
add
xor
neg
xor
add
mov
adc
xor
xor
xor
add
sub
sub
xor
xor
mov
sub
xor
sub
cmpl
mov
mov
jmp
movzwl
movl
jbe
push
push
call
sbb
sub
mov
mov
add
adc
addl
xorl
xor
sbb
xor
add
shl
shr
or
and
mov
dec
mov
orl
mov
mov
sub
mov
xor
mov
mov
shrd
shr
cmpl
movl
mov
mov
jmp
movl
movl
jae
pushl
push
push
call
adc
sbb
sub
adc
movl
mov
adc
mov
mov
xor
orl
xor
or
and
mov
addl
push
xorl
pushl
addl
lea
adcl
push
subl
shl
call
addl
lea
andl
push
mov
subl
mov
lea
push
andl
mov
movl
lea
sbbl
mov
xorl
mov
mov
adcl
push
call
orl
push
sbbl
push
pushl
sbbl
call
and
mov
xor
mov
inc
mov
mov
add
shr
cmpl
not
movl
movl
movl
jmp
movl
jg
push
call
inc
sbb
adc
add
sbb
cmpl
mov
mov
jmp
mov
ja
push
call
and
adc
sbb
sbb
mov
xor
add
sub
or
shl
cmpl
mov
mov
mov
mov
jmp
movl
jne
push
call
add
mov
sbb
adc
sbbl
sbbl
adcl
or
mov
cmpl
mov
movl
movl
jmp
movl
jle
pushl
push
pushl
pushl
pushl
call
adc
xor
xor
add
xor
or
sub
xor
mov
sub
xor
add
adc
and
or
xor
mov
sub
mov
lea
mov
lea
mov
mov
sub
lea
xor
movl
movl
movl
movl
mov
mov
mov
mov
add
adc
xor
xor
and
mov
and
mov
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
push
or
or
push
push
call
mov
mov
sub
mov
sbb
mov
cmp
jne
cmp
je
movl
movl
jmp
incb
dec
dec
cmp
or
adc
push
out
adc
adc
hlt
shrl
shlb
pop
pop
in
subb
insb
add
mov
in
iret
daa
fstpt
sbb
mov
ret
mov
jmp
dec
das
movsl
and
jmp
xchg
stos
test
sti
pop
pusha
gs
xchg
mov
add
rclb
sbb
mov
imul
cmp
idivb
iret
xchg
fildl
jge
aad
movsb
loop
testl
push
dec
test
sub
lahf
sub
lret
fxch
arpl
jns
outsb
rcrl
repz
out
call
xchg
hlt
jae
mov
push
lds
lahf
mov
mov
out
jns
xor
pop
xchg
dec
inc
or
cs
ficoms
cmpsl
dec
or
pusha
iret
mov
in
fwait
mov
fs
xrelease
dec
xor
mov
aam
sbb
cltd
popa
inc
in
xchg
dec
dec
loope
repnz
xchg
and
or
lahf
jo
icebp
popa
fcoml
jle
push
pop
cmpsl
ja
clc
sti
push
js
mov
les
xchg
xchg
jne
cmp
mov
in
ds
pop
rcll
aaa
mov
and
inc
rcrb
cmpsb
sub
call
or
std
jle
shll
loope
dec
ja
pop
jb
hlt
pop
jg
and
cld
mov
in
scas
xchg
xlat
ljmp
cmp
test
xchg
lods
pop
imul
fiaddl
or
daa
popf
popf
push
pop
sub
lcall
or
mov
sub
ja
jns
cmp
cltd
xor
shlb
fcomps
lods
lret
imul
adc
cmpsl
ljmp
dec
fsubs
jbe
ss
adc
fcmove
pusha
mov
xor
out
test
movsb
adc
mov
xlat
shl
mov
inc
mov
bound
rorb
sbb
test
int
cwtl
je
imul
aas
aaa
repz
xchg
mov
xor
test
adc
idivb
daa
lock
dec
jg,pt
aaa
test
jg
add
jbe
sbb
dec
pop
inc
xor
stc
arpl
lahf
loope
and
xchg
ret
cmp
jb
leave
xchg
lcall
scas
sub
mov
pusha
out
inc
jecxz
pop
xchg
in
clc
mov
ja
or
gs
or
inc
arpl
adc
adc
and
and
add
dec
and
mov
mov
add
adc
xor
xor
and
mov
and
mov
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
push
push
xor
xor
push
push
call
mov
mov
push
push
push
push
call
mov
mov
push
push
push
push
call
mov
mov
add
mov
adc
mov
cmp
jne
cmp
je
mov
mov
mov
xor
xor
xor
shld
shl
cmp
jne
cmp
je
mov
cmp
je
mov
mov
mov
mov
xor
xor
shrd
mov
shr
shl
or
mov
xor
or
cltd
cmp
jne
cmp
jne
movl
movl
mov
mov
mov
mov
xor
xor
xor
shld
shl
cmp
jne
cmp
jne
movl
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
cmp
jne
mov
mov
mov
mov
mov
mov
movzwl
mov
and
mov
or
mov
add
or
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
or
mov
jmp
ss
adc
sub
xchg
mov
insb
enter
in
adc
adc
pushl
inc
xchg
sbb
mov
lds
sub
xor
sbbb
mov
lods
testl
sbb
add
inc
sbb
pop
cmp
jmp
push
fcomps
lock
or
cs
jns
in
inc
inc
mov
dec
imul
jo
pop
inc
leave
insl
xchg
cmpsb
fisubs
into
lods
ret
hlt
daa
xor
inc
pop
xchg
in
repz
add
inc
jp
xor
lea
sbb
sub
fimull
lock
int3
sbb
sub
adc
mov
dec
add
dec
pop
pop
cmc
xchg
dec
fisttpl
dec
lods
mov
push
and
jl
lods
testb
lahf
mov
mov
ror
sbb
stc
xor
stos
out
cltd
jno
data16
in
int3
scas
mulb
icebp
int
popf
leave
mov
lds
sub
and
and
aas
aam
pop
les
sub
sub
pop
stc
add
lea
cmp
dec
insl
jns
test
inc
jns
dec
fcmovnu
inc
xor
inc
clc
adc
jecxz
pushw
ret
in
or
add
stos
nop
sub
sbb
js
inc
imulb
cmp
cmp
xchg
rclb
mov
push
lods
push
ljmp
jp
adc
or
and
fcompl
sahf
shlb
js
jge
aam
gs
lock
pop
nop
jecxz
dec
js
push
nop
pop
sbb
popf
cmp
mov
pushf
test
push
sub
ficoml
cwtl
mov
mov
cmp
xor
adcl
xchg
ret
sbb
push
inc
dec
aad
pop
adc
mov
xlat
and
testb
lret
sbb
dec
pop
xor
or
fwait
add
cli
mov
xchg
inc
adc
cld
pushfw
lods
adc
cmpsl
shrb
pusha
mov
add
stos
mov
push
push
in
shrb
mull
fsubs
les
lock
jns
leave
mov
mov
ret
test
mov
jle
inc
adc
sarl
mov
mov
pop
aas
or
cmpsl
rclb
xchg
push
divb
inc
xchg
out
aaa
fs
test
sti
pop
ja
inc
mov
cmp
int
cli
sub
fistpll
mov
fdiv
sbbb
cli
imul
mov
fidivrs
fdivrl
outsl
sub
out
cwtl
outsl
call
repz
cmpsb
outsb
ja
mov
sub
sub
or
mov
sub
mov
sub
mov
cmp
jbe
mov
mov
mov
mov
movzwl
mov
or
mov
sub
mov
or
imul
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
xor
mov
imul
mov
and
mov
and
mov
cmp
ja
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
push
push
lea
push
lea
push
shl
call
pushl
pushl
pushl
pushl
call
mov
mov
shrd
shr
mov
mov
shl
xor
xor
or
mov
mov
mov
mov
shrd
shr
mov
mov
shl
xor
xor
or
mov
mov
mov
mov
mov
cmp
jne
mov
mov
mov
cmp
jne
movb
movb
movb
movb
mov
mov
or
sub
mov
sub
movzbl
movzbl
cltd
idiv
movzbl
or
mov
movb
movb
movb
movb
movb
mov
mov
or
and
mov
imul
mov
movzbl
movzbl
and
mov
movzbl
cltd
idiv
mov
cmp
je
lea
push
lea
call
cmp
jne
cmp
jne
jmp
mov
mov
mov
mov
add
adc
mov
mov
push
push
lea
push
call
mov
push
pushl
lea
push
call
mov
mov
mov
mov
mov
mov
mov
lea
mov
add
movl
movl
mov
and
add
and
sub
and
mov
movl
jmp
cmpsb
xchg
mov
jns,pt
sahf
lods
testl
adc
call
cmp
inc
fildll
jmp
cld
or
add
mov
xor
in
inc
xor
and
push
xchg
sbb
popf
cmp
lea
adc
jmp
lds
xchg
movsl
mov
mov
outsl
test
inc
outsl
cmp
cs
and
jb
lods
cmp
gs
sbb
xchg
inc
mov
leave
repz
mov
mov
cmp
mov
xchg
mov
adc
notl
fstps
sbb
pop
repz
push
stos
aad
cmp
dec
xchg
test
inc
mov
cmp
lahf
xor
in
mov
xlat
shlb
jo
push
lock
jmp
dec
lds
clc
sub
icebp
add
mov
jcxz
adc
mov
sbb
adc
lret
pop
aad
rolb
les
rcrl
mov
lods
ds
mov
inc
pop
cltd
mov
mov
shrb
rcl
xlat
and
lds
test
shrl
dec
mov
lods
inc
cmp
push
aas
jecxz,pn
insl
ret
sub
adc
aaa
hlt
push
and
roll
cmc
sahf
xor
addb
push
in
loop
dec
rclb
xor
data16
inc
sbb
call
pop
test
jle
out
aas
xchg
paddb
sbb
out
js
mov
mov
loopne
mov
mov
pop
mov
cmpb
or
mov
lock
mov
iret
fxch
mov
xlat
mov
jecxz
sbb
fdivp
fs
stos
cmp
dec
mov
dec
push
fisubl
fs
nop
es
mov
aam
lea
inc
js
jle
pop
test
inc
loopne
int3
sub
rcll
cmc
jnp
or
fs
pop
loope
dec
mov
pop
inc
bound
jecxz
dec
shl
pop
imul
loop
push
sbbb
fbld
das
enter
inc
iret
sti
pusha
daa
jo
add
ljmp
faddl
or
push
push
test
movsb
repnz
pop
fcmovne
pop
aaa
test
into
push
xor
add
lds
je
fwait
or
mov
movsb
mov
notb
xor
mov
stos
fisubrl
jmp
lret
repnz
pop
xor
mov
enter
add
xor
add
adc
outsl
leave
and
fwait
mov
mov
or
add
cmp
je
mov
mov
mov
xor
xor
xor
jmp
cltd
add
cltd
fstp
jmp
lods
in
push
push
loopne
adc
int3
push
pop
mov
mov
lods
add
loop
aad
stos
jb
or
push
cmp
add
lods
roll
mov
cmp
mov
sbb
inc
in
ja,pn
bound
push
inc
add
test
cs
cmp
cmp
in
int
dec
jg
es
dec
jbe
pop
pop
jnp
inc
dec
mov
and
cmp
cmp
add
sbb
xor
xor
loope
mov
sbb
and
out
sti
insl
cmp
dec
fisttps
sti
aas
jmp
sti
mov
icebp
aas
lods
test
lret
arpl
ret
and
repnz
loop
cmp
shl
dec
mov
rcrl
or
in
fiaddl
adc
cmpsb
roll
iret
jb
pop
add
cmpsl
push
inc
sub
inc
lods
fldl
shll
ljmp
ror
jno
mov
sub
mov
js
xchg
push
scas
ss
out
sub
cli
outsb
stos
mov
outsb
xor
xchg
out
cmp
pop
pusha
data16
fcomps
pop
inc
jecxz
lret
add
mov
and
fiadds
repz
mov
sub
cwtl
xchg
adc
push
test
dec
rorl
inc
and
stc
es
push
add
pop
cld
arpl
fdivl
test
addr16
mov
fwait
add
outsl
dec
dec
push
pop
mov
inc
mov
enter
repz
call
adc
andl
stos
in
sub
or
imul
repnz
leave
mov
bound
fwait
cmpl
mov
jge
mov
cmp
mov
and
js
pop
xchg
ror
xor
sbb
push
xor
jge
sbb
leave
mov
xor
test
hlt
xor
sbb
cli
xchg
and
and
jmp
mov
inc
pushf
push
scas
rorl
adc
andl
push
call
mov
sbb
cs
lods
or
es
scas
cs
fs
mov
cld
imul
dec
jne
adc
pop
out
jno
mov
ds
cmpsl
andnps
out
lds
dec
sbb
dec
sub
pusha
hlt
mov
inc
cli
pop
imul
shl
cmp
jne
cmp
je
mov
mov
mov
mov
xor
xor
shl
shr
jmp
cmp
cltd
fistps
sbb
js
ficoms
adc
sub
outsb
mov
push
mov
push
jmp
sub
js
mov
mov
cmp
ret
jle
mov
sub
loop
lret
fstps
cmp
push
or
pop
outsb
stos
loopne
jecxz
push
inc
xor
adc
sbb
aaa
hlt
out
pushf
and
inc
mov
push
and
and
sti
shrb
cltd
aas
and
cwtl
scas
dec
movsl
add
cwtl
dec
clc
sub
imul
xchg
xchg
inc
mov
cmc
ret
pop
inc
mov
add
lods
xchg
js
sub
fbld
out
les
stos
cs
les
pop
sub
nop
in
jl
cs
ret
push
movl
sti
mov
loope
mov
adc
scas
inc
hlt
jb
mov
pop
adc
jmp
pop
js
jle
mov
cmpsb
mov
fsub
xchg
sti
xchg
lods
out
scas
daa
add
fldenv
js
aam
fmull
jb
in
icebp
rorl
mov
stos
sahf
gs
adc
sub
stc
mov
xor
test
lds
mov
mov
fistps
mov
and
sub
lds
ljmp
sti
jg
or
popa
push
jp
pop
sahf
pusha
or
jl
and
cmpsb
loopne
sahf
xchg
jo
andb
xlat
insb
cltd
dec
shll
pop
xchg
jmp
cmp
mov
xor
mov
dec
leave
std
imul
and
negl
lods
test
das
arpl
mov
jbe
mov
insb
adc
sahf
lods
or
addl
sbb
lret
sbb
mov
pop
sub
add
mov
test
sbb
js
cs
xlat
adc
addr16
inc
fnop
sub
dec
jbe
test
stos
cmp
jae
xor
inc
sbbl
pop
jg
out
inc
push
push
fldt
std
popa
cmpsb
ljmp
pop
and
ret
icebp
mov
dec
or
adc
aaa
jp
push
cmp
cli
jnp
and
nop
fwait
inc
and
pushf
inc
mov
repnz
arpl
mov
inc
call
mov
xor
in
cmpsb
fbld
jp
enter
inc
stc
out
adc
xchg
and
inc
sub
aaa
in
jno
mov
enter
orl
cmpsb
test
std
std
mov
jnp
out
pop
sbbb
push
push
cmp
xor
xor
xor
and
cmp
jne
cmp
je
mov
cltd
mov
mov
cltd
shld
shr
xor
shl
or
or
mov
mov
xor
xor
mov
cmp
jne
cmp
je
pushl
jmp
pop
xor
jge
cmp
loopne
xlat
adc
aam
adc
fldt
sub
jb
fs
mov
push
test
arpl
imul
movsl
cmp
ljmp
xor
test
sbb
fs
pop
adc
jbe
sub
add
js
ljmp
idivl
in
jp
int
data16
push
lds
pop
lods
adc
iret
pop
sbb
push
mov
mov
hlt
push
sbbl
cs
test
add
or
adc
bound
in
pop
jns
inc
mov
addb
jge
mov
insb
xchg
dec
iretw
xchg
sub
jb
and
mov
fistl
pop
xchg
ljmp
out
repz
lahf
or
scas
inc
pop
test
xchg
add
cld
dec
shll
jnp
fmull
stos
adc
fcmove
or
xlat
cld
fucomp
test
jp
stos
add
aas
mov
xchg
dec
inc
icebp
mov
or
jmp
outsl
sbb
inc
cmpb
sbb
mov
push
aad
test
jae
push
xlat
mov
push
sbb
jp
pop
ss
es
sbb
fdivs
repz
out
xchg
and
jne
inc
sbb
fldenv
test
or
mov
aas
int
icebp
out
pop
push
xor
out
push
shll
xchg
and
and
mov
mov
ds
jmp
pop
dec
fdiv
cwtl
scas
mov
ja
adc
jl
or
adc
cld
inc
movsb
sub
adc
pop
sahf
push
jl
sbb
into
out
cmp
push
mov
int
cmpsl
es
inc
outsb
loop
fcoml
imul
testl
xor
dec
neg
add
out
pop
or
pop
mov
inc
fnstenv
mov
call
insl
mov
test
cld
mov
mov
and
mov
cmp
outsb
popa
mov
lcall
in
or
popf
in
imul
cli
stc
repz
xor
or
pop
jge
scas
loope
xor
sahf
mov
scas
sahf
cmp
push
in
dec
push
lea
out
leave
inc
mov
mov
jno
mov
xchg
jg
add
out
adc
arpl
push
leave
xchg
jne
xchg
mov
jle
rol
adc
insl
je
push
inc
push
lahf
lock
fdivrs
inc
stc
imul
aas
js
push
int
or
jecxz
jno
icebp
jns
pop
xor
xor
mov
mov
pushl
mov
call
mov
mov
mov
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
movl
push
mov
mov
and
push
sbb
push
movl
movl
sub
movl
or
mov
movl
mov
xor
andl
div
imul
sbbl
mov
xorl
xor
and
mov
mov
sbb
mov
xor
orl
div
add
sub
mov
movl
cmpl
movl
not
mov
mov
jmp
mov
mov
jbe
push
call
adc
movzbl
sbb
mov
mov
or
and
mov
mov
sub
or
inc
sub
movl
cmpl
mov
mov
mov
jmp
movzwl
ja
call
adc
sub
sbb
inc
xor
movl
mov
orl
add
xor
cmpl
mov
movl
movzwl
jmp
movl
notl
jae
pushl
pushl
pushl
push
push
push
call
or
and
or
incl
mov
mov
and
and
xor
sbb
imul
addl
mov
and
sub
mov
mov
mov
and
movl
orl
movl
adcl
movl
movl
mov
sub
imul
mov
andl
imul
cmpl
mov
movl
mov
jmp
movl
movl
je
push
push
call
orl
xorl
xor
or
mov
or
mov
xor
xor
sbb
mov
jmp
pop
sahf
and
out
scas
sarb
rclb
adc
movsb
daa
wrmsr
in
dec
or
sub
adc
xchg
in
push
fldl
mov
into
mov
sub
or
xor
outsl
movsl
imul
push
hlt
out
int3
push
repz
xchg
push
xlat
shlb
mov
inc
ret
rcl
xchg
or
mov
aad
push
pusha
rorb
imul
call
or
es
out
mov
test
daa
adc
xor
repnz
stc
pop
addr16
mov
std
dec
fsubrs
xor
movsl
xor
sbb
mov
pop
int
push
divb
jp
lea
pop
out
lahf
xchg
push
iret
roll
repz
push
insl
out
jnp
mov
scas
lret
inc
imull
scas
and
movsb
cwtl
inc
xor
lock
cmp
push
mov
cld
lds
push
lret
mov
jge
and
bound
mov
pusha
lret
cmpsl
in
sbbl
jg
cltd
xor
push
scas
repnz
xchg
call
jge
lret
fucom
rol
jg
into
push
cld
jo
in
cltd
pop
pmaxub
cmp
in
jae
flds
cltd
pop
sub
test
ja
out
fistpll
inc
imul
fisubl
fcoml
adc
xor
mov
xor
int
pop
xor
jns
add
push
ss
cmp
leave
jo
nop
pop
mov
xor
mov
cli
mov
mov
mov
push
in
rorl
outsb
or
mov
int
xchg
and
iret
ficoml
out
pusha
dec
cmpsl
pop
fisubrl
cmpsl
imul
lock
xchg
dec
dec
call
aas
xor
int3
inc
jle
inc
movsb
or
shlb
shrb
mov
cs
sbb
rolb
xlat
inc
inc
scas
mov
and
jae
insb
sbb
leave
inc
je
add
incl
add
inc
add
lret
leave
and
add
xor
mov
subl
xor
cmpl
movzwl
mov
mov
jmp
mov
mov
jg
push
pushl
call
add
adcl
adcl
add
and
mov
add
orl
mov
mov
sbbl
lea
mov
or
movl
movl
sbb
movl
mov
or
xor
cmpl
notl
movl
not
jmp
movl
movl
jbe
pushl
call
or
xor
andl
movl
add
adc
mov
orl
or
and
add
cmpl
movl
mov
mov
jmp
movl
mov
jbe
push
call
and
add
xor
subl
and
add
xor
cmpl
mov
mov
mov
jmp
movl
jb
push
call
add
xor
add
sub
sub
xor
add
mov
add
subl
or
xor
mov
or
add
cmpl
movl
mov
movl
mov
jmp
mov
mov
jge
pushl
pushl
call
andl
sbbl
andl
movzbl
sub
add
adcl
xor
mov
movl
orl
movl
adc
movl
mov
and
add
cmpl
movl
mov
mov
mov
jmp
movl
movl
jle
push
call
xorl
xor
and
orl
orl
inc
mov
sub
mov
subl
lea
movzbl
sbb
mov
or
sub
xor
or
or
mov
mov
movl
movl
mov
or
add
xorl
imul
mov
imul
xor
movl
mov
div
sub
movzbl
or
mov
xorl
movl
sbbl
movl
movl
mov
mov
addl
xor
movl
div
sub
imul
adc
add
mov
orl
xor
xor
sbb
mov
div
xor
mov
movl
cmpl
movzwl
movl
jmp
mov
jge
pushl
call
not
or
adcl
adc
dec
add
movl
and
movl
cmpl
movzwl
mov
jmp
mov
movzwl
ja
push
push
push
push
call
adcl
adc
and
and
addl
mov
mov
sub
movzbl
xor
shr
and
sub
and
mov
imul
mov
subl
and
mov
adcl
jmp
cltd
adc
xor
sbb
js
mov
mov
enter
pusha
lods
loop
nop
dec
rorb
add
or
into
cmp
cmp
and
pop
mov
add
mov
xchg
in
mov
iret
test
jnp
aas
push
inc
cwtl
sti
inc
jo
leave
mov
xchg
push
std
mov
and
or
or
jmp
xor
out
adc
adc
inc
cmpsl
into
daa
shrl
icebp
or
adc
mov
jns
sahf
xchg
je
sub
jg
stc
pop
addb
xor
lret
in
je
adc
mov
inc
add
dec
call
mov
ds
outsl
popa
dec
inc
xchg
repnz
sbb
pusha
pop
sub
mov
arpl
cmpsl
push
in
inc
das
pop
aam
jmp
repnz
test
pop
stos
jae
xchg
movsb
or
add
jl
and
and
pusha
pushf
and
mov
xchg
into
adc
inc
test
test
scas
xchg
xor
push
jmp
mov
jae
jmp
mov
or
shrd
stos
lods
push
fimull
imull
add
push
push
cmp
ret
outsl
rcrb
icebp
push
inc
test
ss
addb
mov
sub
in
lock
dec
xchg
test
pop
popa
jne
pop
ds
dec
je
and
cmp
xchg
je
mov
ret
popf
les
test
dec
and
sbb
cmpb
out
sub
jle
jne
mov
mov
jno
icebp
mov
lcall
out
push
inc
stos
xchg
popf
aad
jno
dec
inc
jmp
aad
xchg
int3
repnz
mov
inc
or
negb
and
lcall
popf
mov
test
sbb
xor
sbb
dec
fs
push
cmp
inc
add
sbb
out
lock
stos
stc
inc
fisubrl
mov
flds
jge
rcl
imul
mov
movsb
test
lret
mov
push
inc
sub
and
mov
or
movl
cmpl
mov
mov
mov
mov
jmp
mov
jne
pushl
call
notl
addl
orl
andl
and
movl
mov
sbb
or
mov
or
sub
adcl
mov
cmpl
mov
movl
movzwl
jmp
movl
mov
jg
pushl
pushl
push
push
call
add
sub
adc
movzbl
sbb
adcl
and
or
movl
mov
sbb
movl
addl
movl
cmpl
movl
movl
jmp
notl
jne
push
push
call
sub
xor
xor
mov
adc
or
orl
adc
andl
adc
mov
adc
movl
adc
movl
xor
xor
add
movl
movl
mov
add
or
mov
movl
sub
xor
mov
addl
imul
add
imul
or
mov
or
cmpl
mov
mov
mov
jmp
movl
jbe
pushl
push
push
pushl
push
call
or
or
xorl
sbb
xor
xor
subl
mov
lea
addl
push
call
and
mov
mov
jmp
test
mov
jbe
inc
xchg
js
lret
enter
mov
lods
xchg
movsb
fiaddl
sbb
lock
lods
call
mov
lds
out
add
mov
cmpxchg
lds
pop
adc
adc
arpl
testb
lret
ss
fwait
incl
inc
ret
loopne
aam
inc
shll
loop
mov
mov
pop
pop
in
add
jnp,pt
repz
stc
popf
sbb
enter
mov
inc
cmpb
xchg
cs
fildl
out
data16
in
psubusb
sub
sub
gs
or
popl
outsb
add
and
push
jns
mov
lret
icebp
mov
out
mov
jge
push
xchg
add
add
outsl
xor
or
dec
mov
adc
mov
jmp
pop
mov
and
xchg
test
jge
insb
add
es
out
sbb
dec
fistl
sub
lret
xlat
sub
cmp
inc
cwtl
hlt
or
and
ss
pushf
popa
es
in
scas
mov
fisubrl
push
jmp
mov
sbb
push
ret
mov
mov
cld
xchg
mov
xor
or
fsubl
nop
xor
push
pop
or
lods
lods
push
pop
xlat
pop
dec
adc
cmp
js
and
subl
jl,pn
jge
rcrb
sbb
mov
inc
test
mov
sti
into
jp
adc
arpl
pop
dec
xlat
cmp
mov
and
mov
mov
sub
fbstp
adcl
flds
mov
jmp
leave
mov
xchg
push
fwait
stac
jmp
add
sbb
lret
nop
push
or
and
arpl
cli
iret
ss
dec
lret
movl
adc
cmpsb
add
inc
insb
iret
imul
add
cmpl
mov
mov
jmp
movl
movl
ja
push
call
add
add
dec
orl
addl
adc
and
cmpl
notl
mov
movl
jmp
movl
je
push
call
sub
xor
adc
mov
mov
sub
sbb
sbb
sub
xor
xor
mov
xorl
div
cmpl
movzwl
movl
jmp
mov
jbe
push
push
push
pushl
call
adc
movl
orl
sbb
adcl
xor
mov
mov
sbb
add
xorl
jmp
pop
and
and
cmpsb
js
push
or
enter
loopne
dec
ljmp
pop
and
in
cli
jbe
stc
mov
mov
addr16
jl
pop
push
int3
inc
iret
ret
das
int
mov
sub
or
test
pop
cmpsb
imul
dec
and
adc
mov
repnz
fists
frstor
mov
inc
mov
xchg
enter
call
mov
fld
andb
push
ljmp
mov
add
daa
mov
ret
or
add
push
adc
jbe
pop
fwait
and
aam
decb
or
and
mov
fwait
das
pop
jne
mov
lods
and
mov
aas
sarl
sbb
push
mov
out
pop
nop
inc
aas
adc
and
mov
lea
cs
jg
rcrl
xchg
pop
repz
in
dec
fimull
jg
jnp
ret
iret
xchg
js
addb
mov
lcall
lcall
xchg
bound
sub
daa
popa
pop
shlb
lcall
dec
int
dec
xchg
stc
pop
jg
adc
jle
mov
cmpl
sahf
jbe
mov
aad
push
movsb
sbb
jae
dec
test
decl
shll
dec
add
sub
push
dec
sub
jg
xlat
rorb
sub
cmp
bound
add
and
iret
fdivrs
and
shrl
mov
sbb
jge
jle
int
and
cmp
lods
scas
add
pop
jb
mov
insb
or
sbb
mov
cld
pop
repnz
lahf
popf
pop
mov
push
mov
dec
xchg
jno
dec
xchg
int
pop
mov
je
mov
add
test
cmpsb
jmp
fwait
jp
sbb
mov
je
lahf
mov
inc
dec
add
mov
test
test
aam
inc
test
nop
add
mov
lea
push
fadd
test
pushl
jp
add
inc
mov
movl
movl
adc
movl
or
movl
xor
movl
movl
xor
add
sbb
mov
movl
cmpl
movl
not
jmp
not
jbe
push
push
call
xorl
or
subl
add
adc
sub
addl
movl
movl
cmpl
mov
movl
mov
jmp
mov
mov
jae
push
push
call
mov
or
xor
sbbl
neg
mov
or
movl
movl
add
mov
cmpl
movl
mov
jmp
movl
mov
jae
push
call
or
movzwl
or
mov
sbbl
sub
inc
xor
add
sub
xor
mov
add
mov
movzbl
or
and
movzbl
sub
mov
sub
sub
jmp
xor
es
and
jmp
js
jl
lods
leave
ret
enter
idivl
test
adc
add
push
icebp
dec
outsl
xchg
scas
sbb
and
inc
push
inc
cs
lock
scas
push
sub
jl
negb
addr16
cwtl
xchg
and
mov
ss
pop
movd
pop
dec
mov
subb
sbb
push
or
pop
sub
lea
in
out
xchg
cwtl
stos
mov
ljmp
xor
mov
ret
pop
sbb
inc
popf
dec
mov
lock
mov
add
adc
ret
sub
add
push
fisttps
in
pop
std
cli
and
xchg
imul
call
sub
ss
rclb
in
jecxz
lock
dec
sub
fldz
jnp
fwait
bound
inc
shrb
sbb
ljmp
imul
std
outsb
dec
push
rcll
push
mov
inc
push
xor
jg
scas
in
loop
jmp
test
cwtl
jmp
mov
shll
notl
fildll
mov
mov
gs
pop
lods
push
sbb
jl
mov
fwait
or
mov
mov
fld
sahf
fs
push
jecxz
adc
push
add
mov
mov
and
lret
flds
add
xchg
dec
push
mov
negl
pop
pop
pop
xor
xchg
inc
mov
repnz
or
xor
jae
loopne
rclb
iret
adc
ret
outsb
daa
cmpsb
test
mov
pop
xor
inc
negl
arpl
or
lcall
repnz
mov
loope
mov
clc
ret
adc
pop
dec
adc
and
or
loope
pop
inc
sub
push
jecxz
or
push
push
push
jp
mov
ljmp
fsubrl
xor
ja
or
adc
sbb
lcall
sub
cmpl
mov
mov
movl
jmp
movl
jle
push
call
and
subl
adcl
movzwl
adc
xor
sub
cmpl
movl
mov
mov
movl
jmp
movl
jb
pushl
push
push
call
sub
and
adc
adc
imul
xor
jmp
nop
push
push
sub
sbb
jle
pop
cmp
mov
adc
mov
in
fimuls
mov
jb
jo
insb
inc
jne
sbb
xor
jne
arpl
sub
cs
ret
cmp
jno
out
push
out
jp
les
ja
pop
and
mov
test
add
cmp
pop
pop
test
xchg
xlat
inc
sar
or
mov
lret
or
leave
aad
addb
cmp
imul
das
dec
test
into
js
inc
int
loope
rcl
scas
pop
mov
in
neg
out
clc
dec
nop
fisubrs
scas
push
mov
sub
and
xchg
out
faddl
jne
lods
and
in
inc
movsl
sub
cmp
cmp
and
imul
add
mov
dec
fcomi
jl
mov
lock
pop
ss
inc
popa
cmp
sbb
movb
loope
inc
cwtl
aam
mov
movsb
jo
xchg
aam
movaps
call
pop
sbb
mov
adc
imul
icebp
adc
inc
and
pop
fs
cwtl
mov
mov
jl
jmp
adcl
mov
into
cmpsb
inc
int3
push
add
pusha
addr16
ljmp
xchg
jbe
pop
faddp
jecxz
xchg
dec
jmp
pop
xchg
cmp
fmull
mov
mov
add
adc
xor
shr
mov
popa
rolb
aad
jg
les
fstpl
call
inc
cmc
add
mulb
pop
test
in
out
aaa
fdivr
xchg
xchg
jbe
daa
dec
sub
mov
jo
fnstsw
js
inc
sub
rolb
or
push
outsl
outsb
sbb
add
sarl
push
adc
cmp
mov
mov
fs
jmp
and
leave
sti
add
lret
imul
gs
mov
pop
xlat
mov
ret
mov
cmpsl
or
out
pushf
bound
xchg
mov
pop
bound
repnz
xor
xchg
mov
test
incl
testb
adc
test
sub
inc
add
xor
inc
add
notl
not
jmp
movl
je
push
call
movzbl
adc
mov
sbb
sbb
xor
subl
mov
mov
sub
or
or
mov
jmp
loop
out
cmpsl
inc
sbb
inc
mov
pusha
js
mov
adc
add
pop
xchg
fistpll
and
inc
xchg
cmp
push
pushf
mov
ret
into
out
rcrb
push
xchg
int
test
popa
out
pusha
sub
jg
inc
cmp
outsl
movsl
dec
sub
adc
or
jno
xchg
in
jno
out
xchg
fsts
pop
dec
pushaw
cwtl
sub
pop
aam
aad
jmp
sbbl
push
arpl
sbb
pop
add
add
addb
xor
nop
popf
cmp
stos
sub
push
jbe
add
lcall
fisttps
sub
mov
sbb
sti
pop
xor
xchg
ljmp
sbb
sub
jle
jns
jns
or
inc
in
in
js
jmp
data16
lret
cmp
lods
xor
fmulp
mov
outsl
das
xchg
mov
push
cmp
js
pop
xor
cmp
dec
mov
mov
jne
stos
jb
and
jo
or
insl
aam
das
imul
pop
pop
fidivs
or
std
outsl
enter
stc
test
je
dec
xor
pop
outsl
les
es
scas
push
sbb
cmpsl
mov
sbb
push
and
sbb
or
dec
or
dec
or
test
popa
data16
xor
cld
dec
xchg
mov
jns,pt
pushf
push
pop
int3
push
pop
test
jp
pop
mov
sahf
xorb
sbb
int3
adc
and
pusha
imulb
add
sbb
out
or
loopne
xor
mov
sub
cmc
xor
push
dec
stc
sbb
jecxz
stc
mov
xchg
aad
fsts
pop
xchg
pop
xor
rcl
in
sub
scas
ja
pop
xchg
inc
rorb
out
and
or
mov
mov
into
ljmp
jecxz
into
inc
lea
dec
repz
gs
mov
xchg
call
es
and
cmp
or
rorb
cwtl
jle
dec
repnz
ret
mov
adc
pusha
pop
add
xor
or
add
xor
or
mov
sub
sub
mov
adc
lea
andl
and
movzbl
add
mov
mov
sub
add
mov
movl
adc
movl
cmpl
mov
notl
jmp
mov
jg
push
push
call
sbb
or
or
add
inc
sub
subl
movl
andl
movl
mov
cmpl
movl
movzwl
mov
jmp
mov
jge
pushl
pushl
call
add
xor
xor
and
and
movl
sbb
mov
mov
adcl
xor
andl
xor
xorl
mov
call
mov
mov
decl
mov
addl
mov
addl
xor
xor
adcl
mov
subl
call
decl
or
dec
or
add
mov
sbb
mov
xorl
xor
xor
mov
call
cmpl
mov
movl
mov
mov
jmp
mov
ja
pushl
push
push
push
push
call
subl
mov
or
or
and
mov
xor
or
mov
mov
decl
mov
add
mov
xor
andl
xor
subl
mov
cmpl
movl
movl
mov
jmp
mov
movzwl
jne
push
push
pushl
push
pushl
push
call
andl
subl
addl
subl
sbbl
subl
movl
mov
sbb
mov
notl
mov
mov
addl
call
adc
mov
adcl
or
sbb
mov
addl
or
incl
push
sbbl
push
sbbl
push
andl
push
call
mov
cmp
jne
sub
mov
mov
subl
xor
andl
xor
andl
mov
movl
call
sbb
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
jmp
inc
adc
cmp
pop
pusha
js
lcall
enter
scas
push
cmp
xor
lock
push
cmpsl
ret
push
out
sub
gs
clts
int
fadds
cwtl
cmp
jns
subl
ljmp
add
inc
out
xchg
push
in
sbb
xor
mov
push
xchg
sbb
cmc
push
inc
sahf
mov
cltd
les
mov
popa
pop
pop
sub
ficoms
fsts
mov
or
xor
mov
in
sbb
jg
pop
cld
jnp
push
jnp
inc
sbb
or
jae
sub
add
out
imul
scas
sbb
sub
or
push
decl
pop
lret
in
jnp
and
cmpsb
mov
sub
jbe
out
sbb
mov
dec
lcall
lock
or
dec
mov
outsb
jmp
movsb
and
std
xchg
adc
pusha
in
scas
nop
call
xchg
xchg
mov
cmp
daa
cwtl
ja
filds
xor
lds
lcall
fwait
int
test
jne
repnz
push
xor
jl
jmp
pushf
jecxz
pop
stc
add
mov
push
cs
loop
hlt
push
call
inc
mov
out
scas
aam
jmp
mov
xor
gs
inc
icebp
add
pop
pop
arpl
push
dec
fs
lret
push
adc
push
into
cmp
daa
ret
pop
jecxz
mov
and
lock
pop
and
aam
ds
jno
xchg
lret
ss
or
inc
sbb
popa
sahf
shll
add
adc
or
mov
push
hlt
bts
pop
sub
jae
loope
movsb
hlt
xor
shlb
test
pop
call
and
or
adc
push
pop
out
cmc
push
scas
ss
pop
push
out
stos
mov
jg
jne
lcall
mov
shll
scas
pushf
dec
mov
repnz
fdivr
decl
pushf
inc
add
or
mov
or
push
push
push
push
call
mov
jmp
jmp
lea
mov
mov
movl
mov
xor
shr
mov
jmp
leave
out
loope
pop
sub
push
out
stos
lcall
adc
and
in
rcrb
shrl
leave
adc
mov
jns
iret
test
out
mov
popa
test
fsubrl
rclb
pop
clc
scas
dec
sbb
mov
lret
and
or
mov
jno
scas
jns
fcom
jl
push
fbstp
test
das
sysret
sbb
cs
pop
xchg
shrl
cld
dec
movsl
xor
popf
xor
mov
xchg
imul
fcoms
pop
pop
test
dec
outsb
jae
cmp
ja
jae
xor
insl
shll
sub
mov
nopl
fs
cs
or
cmp
adc
mov
sahf
hlt
cwtl
add
push
mov
or
xchg
out
outsl
clc
push
sub
cmpsl
loopne
lahf
sub
aas
cmpsb
shl
sub
lods
lock
cmpsb
sbb
repnz
cmc
add
in
xor
sub
je
int3
ret
nop
pop
push
pop
mov
or
jne
sub
pushf
lea
add
test
sub
and
push
sub
push
jo
loopne
mov
cmc
dec
inc
jbe
inc
bswap
mov
or
xor
jmp
das
loop
xchg
inc
push
cmp
cmp
cmp
out
pop
scas
popf
push
jo
test
or
cs
jge
adc
nop
mov
sbb
and
push
dec
mov
sbb
mov
lea
dec
arpl
sub
not
fcmovnbe
jns
xchg
test
lahf
cltd
imull
decl
sub
cmp
repz
push
mov
sub
push
mov
xlat
in
jnp
lcall
mov
sub
ficomps
push
mov
gs
cmp
xchg
add
rorl
gs
sbb
jb
jae
idivl
outsl
in
insl
es
jp
pop
jmp
mov
stos
stos
cs
imul
mov
ljmp
push
ss
stos
xor
shl
or
mov
mov
mov
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
xor
xor
mov
jmp
mov
popa
sahf
sbb
lods
insb
push
inc
stos
dec
test
adc
movlps
pop
sbb
adc
and
movsl
sbb
push
sbb
das
das
jmp
icebp
enter
scas
inc
into
iret
repz
int
push
cmp
int3
out
std
or
cmp
movb
push
sbb
stos
rcll
aaa
pushf
mov
pop
addr16
outsb
shl
in
imul
sbb
cmp
or
imul
dec
iret
mov
pop
into
adc
adc
test
lock
pop
daa
out
pop
adc
mov
lea
or
or
popf
jns
call
cmpsl
aas
mov
scas
data16
das
sub
sub
push
sbb
out
lcall
cmc
pop
lahf
and
aad
fadds
je
mov
xchg
jo
mov
es
adc
insb
enter
add
cmc
cmpsl
or
cmp
inc
jg
mov
sub
mov
int3
xchg
mov
sub
aam
or
pushf
sbb
sbb
aas
jmp
test
or
and
mov
sub
lods
in
lods
testb
test
orb
repz
cmpsl
js
ret
cs
lcall
dec
xchg
test
in
lahf
cmp
sbb
add
adc
inc
cltd
cmp
icebp
jae
pushf
enter
jmp
shrl
test
mov
mov
scas
ljmp
dec
stos
nop
mov
test
sub
fs
daa
cmp
pusha
inc
pusha
int
jnp
jl
lret
pop
repz
in
sbb
jle
push
pop
xchg
push
shlb
sub
sub
ret
insl
cmp
mov
jne
and
cmpsb
cmp
add
mov
or
int3
enter
add
mov
pop
loopne
int
dec
xchg
push
push
xorl
cmc
adc
loop
out
sbb
movsb
sbbb
mov
xor
sub
dec
cs
scas
fwait
pop
ss
in
mov
sbb
aaa
add
decl
decl
decl
incl
lret
fmuls
aam
decl
sar
pushl
add
mov
or
mov
or
push
push
push
push
call
mov
cmp
je
mov
mov
xor
jmp
add
xor
and
aas
loope
xor
js
cmpsl
add
enter
mov
jle
cmp
sti
repnz
repnz
mov
in
shrb
lea
aad
mov
lds
loopne
adc
push
add
xchg
cmp
mov
repz
inc
outsl
mov
xor
sub
inc
mov
sti
mov
mov
mov
sub
add
push
jnp
rorb
and
or
pop
lock
fsubs
insb
cwtl
popa
out
sbb
imul
iret
popf
jnp
inc
test
in
inc
bnd
pop
push
out
mov
je
mov
das
mov
in
daa
dec
ret
fdivl
or
mov
pop
pop
cmp
sbb
cmp
inc
sub
adc
or
jae
popa
imul
jp
cmp
push
iret
pop
cwtl
test
cmpsl
scas
rcl
inc
or
jbe
addb
and
or
adc
or
push
adc
pop
cmc
xchg
pop
sbb
add
jge
out
adc
insb
in
or
lock
adc
xor
pop
std
inc
lahf
add
pop
ficoms
divb
cli
lcall
sti
loopne
dec
inc
jle
ret
popf
bound
dec
sti
fcompl
lret
xor
jne
rcl
cli
iret
inc
cli
movsl
stos
addr16
gs
and
sbb
test
cld
push
sti
jg
mov
cmp
mov
popf
fildl
add
mov
out
out
pop
sbb
or
xor
mov
mov
mov
cld
jmp
sub
das
sbbl
sbb
rcrl
fisubrs
mov
xor
inc
test
movsl
hlt
jp
xchg
mov
es
int
push
jbe
arpl
and
and
sahf
dec
iret
cmp
fwait
xchg
outsl
push
imul
adc
aam
add
hlt
ja
xchg
jno
push
xor
adc
add
and
int
hlt
repz
imul
gs
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
imul
add
mov
mov
mov
jmp
jmp
mov
mov
xor
xor
mov
jmp
insl
xor
jb
push
sub
jp
jle
mov
adc
rcl
jmp
idivb
in
insb
rcr
loopne
lcall
std
cwtl
jg
jl
mov
mov
push
pop
fs
xor
stos
hlt
dec
push
test
xchg
adc
fmuls
inc
sbbb
or
push
icebp
add
push
leave
cmp
adc
xchg
lret
imulb
lcall
lret
mov
mov
clc
and
dec
and
mov
jl
mov
cli
and
ss
xchg
test
jl
imul
movsl
insl
adc
push
int
in
loope
mov
dec
hlt
dec
adc
sub
jne
dec
pusha
pop
cs
movsb
setg
sti
in
cmp
inc
icebp
add
mov
fists
inc
sbb
in
xor
and
jno
sahf
test
outsb
imul
jecxz
stos
push
sahf
adc
cmp
or
cmp
ljmp
cld
inc
loope
sub
fstpt
pop
mov
lret
jno
pop
xchg
fisubrl
inc
bound
sub
cld
into
imulb
mov
cmpsb
aam
adc
adc
clc
cmp
and
mov
lcall
rolb
xchg
ja
loope
out
xor
fsubrl
mov
cmp
push
and
mov
jae
push
jecxz
dec
add
xorb
add
aaa
mov
dec
outsb
mov
cltd
xchg
xchg
jmp
cld
in
push
mov
hlt
push
rcrl
stos
fucomi
xchg
or
xor
mov
int3
push
sbb
jge
pushw
dec
pushl
mov
adc
lret
decb
leave
dec
push
cmp
dec
sbb
xor
jmp
mov
push
mov
rorl
jb
popa
cmc
pop
push
lock
xchg
imull
adc
push
xor
in
imul
scas
push
decl
test
mov
pushl
xor
mov
call
or
or
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
mov
mov
call
or
mov
or
push
push
push
push
jmp
pop
cli
xchg
ret
xchg
jle
pushf
adc
adc
cmp
jmp
push
or
dec
mov
push
mov
sbb
mov
dec
cltd
sbb
imul
das
iret
mov
push
je
sahf
ror
mov
idivl
sub
cld
xchg
jle
adc
lret
mov
leave
adc
jo
xchg
fsubr
mov
imul
hlt
andb
xor
lods
jae
push
dec
jge
mov
jno
jae
adc
add
inc
test
mov
aas
ret
shr
lahf
and
nop
xorl
inc
ffree
inc
mov
cmp
pop
mov
jle
pop
sub
enter
pop
xchg
and
aas
push
jp
push
and
xor
pushf
mov
js
outsb
pop
xchg
jb
bnd
test
lret
fnstcw
pop
inc
xchg
and
mov
mov
shl
cmc
push
outsl
pop
sub
xor
gs
pop
mov
cmp
cwtl
not
and
fidivs
cltd
js
outsl
ret
xchg
xor
push
push
or
inc
xor
sub
movsl
pop
cwtl
mov
sbb
jle
push
in
pop
add
xor
xchg
fidivs
cs
pop
mov
insb
sbb
cs
iret
mov
ret
adc
fstps
push
jl
addr16
xor
add
add
aam
inc
xor
bound
imul
add
adc
fisubrs
jg
js
je
aad
enter
iret
xchg
jnp,pn
mov
mov
shr
subb
adc
or
push
das
sbb
insl
adc
jns
sahf
and
loop
push
addr16
lret
mov
xchg
mov
lret
cmp
frstor
scas
scas
neg
and
lock
in
mov
inc
push
xor
cmp
push
pop
arpl
adc
add
adc
aaa
ljmp
negl
ja
push
cmp
jmp
jmp
xchg
lea
pop
jb
mov
test
cltd
add
add
decl
pushl
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
xor
div
mov
and
add
mov
lea
xor
add
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
xor
div
add
mov
and
xor
add
mov
mov
sub
mov
or
mov
and
mov
xor
mov
mov
sub
mov
imul
xor
xor
mov
mov
add
add
mov
movl
movl
movl
movl
movl
movl
mov
xor
mov
imul
mov
lea
mov
and
and
xor
push
pop
div
imul
jmp
stos
cmpl
and
sahf
sarb
imul
or
das
leave
aad
cmp
mov
mov
int
xchg
pusha
mov
stos
pop
push
test
sbb
fdivrp
inc
je
ret
aad
popw
mov
fsubrl
shrl
std
inc
pop
dec
popf
aas
jb
jg
dec
bound
push
cmp
dec
or
push
data16
xchg
rorl
shll
and
jne
into
loope
orl
push
inc
lea
xor
cmp
iret
into
mov
add
push
add
ret
sub
pop
inc
mov
and
add
sbb
inc
lea
fwait
mov
pop
leave
adc
push
cmp
push
pop
xor
hlt
nop
insl
sbb
les
sub
subb
or
imul
fnstcw
or
lock
aam
mov
pop
ja
ds
repz
add
packuswb
pop
cltd
pushl
cwtl
adc
lcall
repz
lahf
rcll
popl
leave
daa
out
pushf
sub
arpl
xor
leave
push
mov
aad
jo
fs
cmc
pop
sbb
cmp
dec
iret
sub
cwtl
mov
inc
jge
in
mov
mov
dec
xchg
pop
mov
xor
cmp
enter
xor
mov
repz
clc
or
fs
mov
and
pushf
insb
out
and
mov
leave
ss
imul
mov
jbe
inc
mov
nop
gs
or
std
and
mov
scas
jle
inc
fcompl
add
adc
sarb
lret
mov
jmp
pop
mov
xchg
add
jp
and
leave
add
mov
les
push
adc
inc
pop
mov
popa
push
xorl
inc
xlat
stc
clc
mov
clc
aam
int3
sbb
mov
dec
xchg
add
xor
jp
rcll
or
adc
adc
test
jmp
cwtl
jnp
fs
xchg
je
mov
and
mov
or
add
imul
mov
xor
xor
mov
mov
add
add
mov
movl
movl
movl
movl
movl
movl
mov
xor
push
pop
div
mov
or
mov
xor
div
imul
mov
lea
mov
and
and
sub
xor
mov
xor
mov
and
and
or
mov
mov
add
lea
mov
andl
jmp
mov
inc
mov
mov
mov
cmp
je
mov
mov
mov
add
mov
mov
mov
mov
mov
jmp
and
lret
sbbl
js
mov
rclb
adc
clc
adc
sbb
jno
pop
lret
inc
ficomps
and
xchg
out
mov
ficomps
lods
mov
out
shl
sbb
jns
aas
and
xchg
xor
jecxz
push
cmp
jno
cli
inc
cmp
mov
mov
andb
inc
ret
add
push
andl
mov
add
insl
push
std
in
sbb
lret
jns
add
add
xor
sub
mov
inc
or
pop
push
dec
rorl
scas
push
jne
loop
xor
imul
xor
mov
xchg
xchg
insb
iret
mov
xchg
repz
loopne
icebp
repz
in
xchg
insl
sub
sbb
loopne
insb
adc
pop
mov
loop
mov
stos
cwtl
dec
pop
call
fbld
adc
inc
cli
adc
mov
sbb
cmc
or
lea
out
mov
sahf
fstpt
sbb
adc
outsl
lret
lahf
or
push
enter
adc
lret
add
jns
mov
inc
adc
xor
inc
mov
cwtl
xchg
fdivp
hlt
fwait
scas
jge
sub
in
imul
out
nop
xor
shll
jmp
push
mov
mov
addb
jmp
adc
sti
cmpsb
xor
and
mov
sahf
cmpl
icebp
jg
xor
mov
and
jo
add
out
in
push
or
fists
pop
xchg
je
aam
jg
xor
jb
test
sbb
pop
iret
daa
leave
sti
cltd
xlat
lods
aam
pop
stos
or
sahf
daa
mov
lock
pop
aas
lods
ja
ret
add
xor
leave
int
xor
shl
iret
mov
enter
jne
call
pop
lret
jle
push
cmp
mov
loop
and
arpl
lret
xchg
add
pop
ficompl
fimuls
sbbb
movl
movl
movl
movl
lea
mov
mov
movzwl
jmp
pop
pop
lods
mov
and
pop
mov
dec
js
xchg
adc
adc
adc
loope
cmc
insl
hlt
mov
push
lret
and
loope
and
popf
lea
pop
cmp
scas
sub
test
push
lcall
fcoms
mov
push
fldt
jns
jno
fsts
int
or
jno
xor
mov
xchg
mov
add
fs
into
xor
pop
movsl
int
stc
lret
out
push
aaa
movsl
or
lock
pop
popf
lahf
fmull
insb
jbe
inc
mov
pop
out
mov
ss
ja
sub
dec
mov
nop
in
xchg
mov
std
sbb
inc
loope
test
sub
mov
andl
sbb
pusha
xor
dec
divb
adc
cmp
sub
jnp
adc
shll
int3
mov
add
or
sbb
pop
fists
lret
jnp
adc
fimull
fistpl
ja
inc
cmc
lods
adcb
ficoms
adc
orb
push
testl
imul
adc
std
cmp
repz
sbb
push
or
push
add
xorl
mov
sbbb
movsl
mov
std
out
mov
push
cmp
adcb
cwtl
lret
es
lds
in
or
sbb
ds
push
shrb
mov
into
mov
lods
add
sbb
fcompl
adc
dec
dec
add
ret
cmp
lock
inc
mov
jns
and
adc
push
adcl
adc
and
xor
out
lahf
inc
jno
loope
xor
and
cwtl
cmove
jmp
pop
icebp
mov
in
xchg
in
movsb
dec
jo
jns
mov
and
insb
test
jb
aaa
or
xchg
mov
rep
rol
aad
push
add
repz
add
verr
es
xor
movzwl
sar
mov
movzwl
xor
movzwl
shl
or
movzwl
mov
mov
mov
mov
jmp
dec
sbb
sbb
sbb
sbb
scas
sbb
add
xchg
enter
xchg
sbb
push
pusha
aad
jno
mov
fst
and
inc
sub
sar
out
out
es
cmpsl
cli
cmp
scas
pop
push
fwait
call
lret
in
ljmp
dec
dec
imul
mov
lcall
loopne
add
fcom
call
jae
mov
call
inc
rcll
lret
dec
int
sub
cmp
xchg
adc
lret
call
xchg
ja
ret
dec
rcll
jnp
pop
lods
mov
inc
pop
je
in
std
jmp
cld
pop
xchg
repz
fisttpl
shll
push
cwtl
mov
sbb
call
inc
aas
push
or
gs
pop
or
pop
cltd
jle
cmp
sub
add
out
mov
xorb
mov
test
push
cmp
sbb
pop
ficomps
out
pop
sub
test
sub
mov
enter
pop
mov
in
mov
daa
test
out
sbb
fcom
jl
xchg
push
imul
mov
lods
notl
cmp
repz
das
stos
loopne
fsubr
int
enter
push
dec
xor
lock
cmpsl
loop
dec
push
cld
fwait
mov
scas
dec
adc
xorl
and
sbb
andl
push
mov
aad
pushf
jle
and
lcall
sti
shrb
cmp
repnz
cli
jnp
jg
ret
dec
gs
lds
pop
pop
lahf
and
dec
adc
push
lock
jo
and
outsb
adc
ret
push
cmp
cltd
cltd
cmpsl
in
fwait
inc
jp
and
in
popf
pop
sbbb
cli
andb
movsl
std
xchg
test
dec
out
jg
add
test
test
pop
sbb
push
fwait
cmp
test
mov
mov
pop
mov
rcll
scas
and
push
lods
inc
loopne
sub
out
push
dec
sub
es
cmpsb
push
sub
shll
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movzbl
push
lea
push
call
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
jmp
push
pop
inc
ficomps
clc
les
out
mov
adc
subb
sbb
test
inc
shlb
loop
clc
cmp
or
pop
dec
mov
fcomip
mov
lret
ret
loope
cmp
mov
mov
aam
push
cmp
fldt
ret
sti
xchg
mov
dec
je
ror
stc
and
pop
push
test
sub
cmpsl
add
xchg
aaa
fdivs
sbb
push
icebp
inc
pop
ret
popf
lahf
cmp
adc
jl
sub
nop
lods
repz
cmp
jno
call
popa
leave
mov
jmp
mov
sbb
sti
fs
scas
inc
xchg
sbb
testb
pop
adc
inc
sub
xchg
or
lds
jp
popl
adc
dec
sub
popa
mov
and
xchg
das
mov
inc
imul
test
and
lea
jle
mov
xchg
xchg
mov
negl
adc
jb
dec
pushf
les
jb
vphaddwd
lods
out
dec
pop
scas
adc
mov
aad
imul
je
xchg
fimuls
mov
imul
lcall
inc
xchg
call
sbb
adc
or
xorb
mov
int3
into
rcll
mov
xchg
inc
mov
enter
adc
xor
test
loop
arpl
fistpl
aas
pop
push
cld
and
xchg
in
ffreep
xchg
sub
insl
mov
sbb
sbb
sub
push
fldenv
or
add
and
aaa
jno
ja
jle
cwtl
test
mov
sbb
xor
mov
push
jl
data16
add
jecxz
xchg
adc
outsl
xchg
cmp
push
rolb
test
xor
jb
pop
stc
or
fdivr
jb
push
fsubp
cmp
stos
push
add
das
jns
insb
aas
into
jae
push
inc
nop
sub
push
xchg
pushf
jnp
out
shll
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
jmp
out
add
popa
cmpsl
aad
stos
arpl
add
enter
pop
movsl
imul
jmp
mov
mov
jbe
xchg
scas
push
mov
lcall
cmp
in
pop
rorb
push
repnz
scas
mov
cmp
bound
dec
xchg
lahf
dec
int3
and
cmc
cmp
js
mov
jge
mov
jns
inc
add
insb
jno
dec
out
xlat
push
xor
ss
mov
je
jl
loop
inc
test
xchg
xchg
inc
fldt
clc
out
test
mov
scas
imul
aad
xlat
pop
and
subl
push
push
or
xlat
or
ja
push
xlat
mov
sub
stos
ja
jle
shlb
jge
into
imull
xor
outsl
enter
xchg
mov
xorl
pusha
imul
sbb
daa
inc
pop
adc
int
mov
test
pop
gs
jl
and
adc
and
hlt
pop
mov
test
xchg
xor
pop
addr16
mov
fdivr
add
adc
stos
insl
test
lods
arpl
cmp
and
fldenv
adc
scas
mov
popf
or
jno
cmp
or
mov
xchg
fcmovu
flds
fisubs
mov
sahf
pop
scas
fldl
mov
lret
sbb
inc
pop
push
es
jbe
add
xchg
pusha
dec
cld
jp
push
dec
loopne
dec
inc
pop
lods
dec
mov
xorl
mov
or
add
lods
lret
pmulhuw
fs
dec
cmp
xlat
fs
pop
dec
mov
pop
ds
mov
cmp
fldt
cmpsb
push
pop
mov
sbb
adc
fldl
mov
gs
shlb
and
mov
fs
adc
js
push
push
dec
or
push
mov
add
icebp
insl
enter
gs
popf
cmc
push
or
xchg
and
mov
insl
mov
mov
mov
xor
xor
mov
call
or
jmp
mov
or
mov
push
push
mov
push
adcb
or
subl
stos
xchg
xor
jle
loope
mov
dec
mov
orb
sub
mov
sub
xor
cmp
cmp
or
insb
pop
mov
pop
inc
add
in
dec
pop
aaa
dec
jge
mov
rcrl
jno
fistpll
mov
icebp
or
int3
inc
scas
fsubrl
mov
rcll
jg
cwtl
out
and
aad
mov
push
xchg
mov
rcr
inc
and
rcr
orl
arpl
shlb
inc
aaa
add
dec
xchg
mov
sbb
cmp
gs
imul
loope
and
sub
and
sbb
cmp
jl
jp
adc
lcall
fmul
inc
jge
pop
in
jbe
sub
sbb
data16
mov
inc
scas
dec
sub
les
push
push
mov
clc
adc
inc
bound
fwait
adc
xchg
mov
add
add
pop
cmpsl
es
pop
cwtl
jge
xor
fistpl
mov
pushf
push
jl
push
jbe
cs
mov
jo
cli
lahf
movsl
jo
jne
jp
mov
iret
rcrb
nop
lds
mov
mov
lcall
jae
mov
in
mov
fsubp
xchg
cmc
mov
fs
fsubp
sub
into
jo
pop
outsb
jnp
inc
push
lock
adc
fsubrs
or
adc
cmp
cmp
dec
push
jbe
xchg
scas
fcmovnbe
cmp
sahf
and
pop
pop
es
cmp
test
xchg
xchg
push
mov
add
pusha
jecxz
mov
mov
inc
ret
adc
mov
es
pop
xor
mov
clc
in
push
pop
jl
aam
push
inc
lock
fwait
notb
out
xchg
test
lea
add
test
popa
lcall
out
out
xor
repz
cli
add
mov
mov
cmp
jmp
stos
js
pop
and
mov
cmp
mov
enter
rolb
int
sahf
mov
inc
mov
jge
addr16
jp
decb
xor
sub
adc
or
ret
cmp
movl
daa
mov
movdqu
clc
pop
mov
sahf
dec
cltd
pushf
dec
mov
xor
mov
out
arpl
mov
push
xchg
dec
mov
jge
or
and
push
pushf
push
popa
popf
jecxz
cmc
xchg
loopne
fnstenv
dec
xor
adc
mov
add
pusha
loope
add
fmuls
cmp
or
xchg
jne
cltd
movsl
sbbl
scas
push
ffreep
add
xor
sarl
fs
lret
pop
push
sub
sarb
out
das
push
insl
in
mov
icebp
pop
adc
lahf
sub
push
pop
jl
or
xor
inc
mov
jb
rcll
mov
ret
call
fnstsw
ficompl
jb
pop
ds
pop
adc
movsl
aad
lods
mov
sarl
xor
ljmp
ja
mov
add
and
add
testb
xor
add
frstor
xchg
sahf
gs
repz
dec
push
jae
in
bound
cmp
addr16
jo
sub
dec
mov
or
mov
adc
mov
jl
xchg
stos
fimull
das
andb
xor
aas
and
xchg
test
lock
adc
popa
mov
nop
mov
clc
sub
sub
inc
mov
sbb
movsb
lcall
mov
pop
clc
jp
xchg
das
in
inc
pop
xlat
mov
sbb
mov
xor
pop
jp
aas
into
add
sbb
popa
pop
add
cmpb
out
jle
jne
mov
xchg
fs
dec
push
test
out
daa
arpl
inc
je
mov
mov
movzwl
xor
movzwl
sar
jmp
ds
in
mov
xchg
js
jg
jle
je
adc
movlps
leave
lods
xchg
out
mov
arpl
inc
nop
aaa
inc
add
or
sub
clc
mov
pop
add
cmp
nop
insl
in
sub
dec
adc
mov
sti
gs
pusha
adc
repz
rcll
enter
adc
jne
aas
aas
and
call
imul
test
test
xor
inc
lcall
out
push
jl
sub
and
add
and
xchg
test
and
jl
dec
mov
hlt
pop
or
or
and
inc
adc
rcl
rcll
pop
mov
cld
dec
cli
loop
test
out
imul
int3
xchg
or
cltd
xor
aas
shll
xadd
xlat
push
out
push
mov
test
cltd
mov
xchg
push
jecxz
push
out
and
xchg
dec
cmpsb
out
push
movsb
push
cmp
sub
inc
icebp
xor
push
lock
inc
not
jmp
enter
jns
mov
test
sbb
sub
lock
cli
testl
mov
push
xchg
ss
daa
decb
int3
fsubs
xor
adc
loopne
xchg
lahf
in
pop
loop
sbb
mov
movsb
pop
sub
call
dec
test
adc
add
loopne
out
jbe
pop
imul
comiss
add
mov
mov
push
mov
inc
js
push
rcr
mov
jmp
and
or
icebp
fwait
jmp
jne
sub
or
packuswb
push
mov
xchg
flds
push
call
mov
sbb
in
sbb
lods
xchg
adc
outsl
inc
lret
dec
hlt
inc
sub
xor
ret
push
mov
enter
loop
xchg
xor
das
lahf
mov
sub
sbb
idivb
out
xor
lret
mov
mov
std
jmp
cmp
sbb
and
filds
fcompl
push
or
mov
mov
mov
movzwl
xor
movzwl
shl
or
movzwl
mov
mov
mov
movzwl
xor
movzwl
sar
mov
mov
movzwl
xor
movzwl
shl
or
mov
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
xor
xor
jmp
jns,pn
xchg
pop
subl
js
and
adc
adc
or
jno
mov
push
sbb
inc
fbstp
lods
stc
pop
sar
into
mov
pop
xchg
xlat
es
xor
mov
and
mov
xchg
data16
daa
orl
add
pop
aam
add
das
flds
push
mov
sbb
inc
xor
dec
and
push
sti
repnz
dec
js
cli
cmp
xchg
cs
dec
les
sbb
ss
mov
mov
loopne,pt
ficoml
ss
pop
daa
or
sbbb
xchg
loop
xchg
lds
stos
dec
and
xchg
mov
movsl
mov
fisubrs
push
mov
orb
imul
jle
xlat
mov
fnsave
dec
cmp
xorb
in
jae
xor
insb
add
cmp
inc
push
mov
jge
std
in
mov
popa
sub
dec
add
cs
mov
insl
sub
jl
adc
pop
inc
iret
aam
test
mov
dec
cmp
sbb
jmp
sub
repz
xchg
sbb
or
dec
mov
sbb
std
inc
int
call
dec
xor
mov
das
sahf
sub
iret
mov
loopne
insl
ljmp
hlt
lahf
mov
mov
outsl
sahf
fisubrs
xor
cmpsb
notb
add
xchg
das
je
xchg
xchg
arpl
xor
mov
sub
push
daa
mov
das
jno
cmp
push
xchg
adc
push
ss
bswap
cmp
lahf
dec
fdivl
dec
lcall
out
in
or
mov
popf
test
in
mov
movb
mov
lahf
xor
xor
dec
imul
ret
outsb
push
subb
mov
sti
cltd
mov
cli
sub
xchg
mov
inc
clc
out
xchg
idivl
pushf
pushl
mov
ret
jp
adc
lahf
decl
test
decl
pushl
xor
mov
call
or
or
mov
mov
mov
or
je
lea
mov
mov
xor
mov
call
mov
mov
mov
xor
mov
call
or
or
xor
xor
mov
mov
mov
mov
movsbl
mov
mov
xor
xor
mov
call
jmp
arpl
or
push
jl
nop
js
insb
adc
adc
inc
shlb
out
xor
push
push
ja
or
sarl
imul
mov
cs
icebp
imulb
out
inc
dec
push
dec
imul
mov
fwait
enter
add
xchg
adc
and
jmp
cmpsb
int
jne
fadds
jne
pop
cmp
or
ljmp
orb
cmp
push
xor
push
and
or
inc
sbb
xor
and
xor
clc
jge
jg
int
clc
pop
sub
scas
and
mov
push
movsb
pop
loop
leave
test
sbb
xchg
xor
shll
aas
fstl
outsl
les
in
jg
inc
push
int
gs
mov
pusha
push
push
xor
mov
xorl
push
loopne
movsb
sub
fisubl
sbb
sbbb
sti
and
mov
in
xchg
pushl
jmp
and
xor
nop
or
dec
push
dec
sbb
test
lock
pop
pop
and
sahf
cltd
mov
test
pop
mov
cmpsb
xor
lret
and
mov
fnstsw
mov
inc
inc
les
ret
or
push
cmp
sbb
lret
xor
loopne
push
dec
fsubrs
lahf
pop
insb
lock
or
xchg
imul
arpl
xchg
clc
mov
jne
cmpsb
out
popa
xchg
enter
lods
inc
mov
ja
push
push
mov
call
xlat
cmp
dec
jge
and
arpl
addr16
jnp
pop
std
or
cmpsl
dec
cltd
sbb
lock
std
call
or
xchg
icebp
push
arpl
xchg
push
add
mov
and
aas
push
or
push
xchg
out
push
ds
imul
mov
std
jg
fwait
data16
lcall
loop
mov
mov
mov
mov
xor
xor
mov
call
or
or
movsbl
cmp
je
jmp
xorl
jns
sbb
pop
lods
adc
stos
fldcw
adc
movlps
lock
jbe
xor
push
repz
and
or
jle
int
js
add
aas
mov
cs
outsl
dec
xchg
dec
cmp
sub
in
mov
push
test
movsl
xchg
cmp
sub
lea
std
rclb
xchg
mov
cwtl
fsts
hlt
pop
pop
and
fnstcw
mov
jmp
sti
shll
xchg
cmp
scas
inc
repz
jle
aaa
mov
out
out
add
cmpsl
dec
add
mov
jns
into
jns
sub
cmp
pop
mov
mov
iret
jbe
mov
outsl
scas
lret
mov
push
movsl
in
roll
pop
dec
pushl
inc
enter
push
test
mov
add
pop
jb
cli
mov
dec
cmp
mov
ljmp
cwtl
push
repnz
adc
push
inc
adc
test
sub
or
inc
push
cmpsb
cmp
es
xlat
repnz
push
lods
push
and
loopne
dec
jne
jb
xchg
or
pop
jmp
insb
nop
test
test
mov
jnp
inc
pusha
nop
stos
in
fcoml
and
in
inc
in
andl
cmp
scas
rclb
adc
inc
fistpl
mov
jne
adc
lret
pop
mov
push
mov
dec
jge
cmp
ja
pop
cli
popf
sub
mov
mov
arpl
fucomip
ret
xor
loop
in
mov
shl
inc
ret
adc
loope
in
xlat
bound
inc
push
jnp
rolb
mov
ja
movsb
pusha
ret
xchg
xor
bound
sbbl
push
mov
and
lock
push
xor
imul
out
aad
and
add
and
cmova
fcomip
fsub
fildll
pop
fildll
out
leave
sub
and
fbstp
popa
jg
push
mov
js
xchg
jae
mov
loope
add
das
mov
pop
je
dec
mov
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
movsbl
cmp
je
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movsbl
cmp
jne
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
add
mov
jmp
jmp
mov
mov
xor
xor
jmp
adc
fldl
out
cli
pop
push
sbb
lea
enter
xchg
dec
or
rclb
int
mov
dec
xchg
call
std
fnsave
cmpsl
addr16
adc
push
xchg
lock
inc
mov
hlt
sbb
cltd
out
or
in
and
dec
pop
adc
fs
adc
addr16
jl
fistpl
loope
push
insl
in
and
shl
bound
enter
fisttpl
xchg
sbb
dec
movsl
mov
xchg
cmp
sahf
loop
arpl
pop
push
out
push
and
add
add
outsb
jle
xor
jl
dec
adc
inc
jg
jo
int3
addr16
adc
mov
mov
pop
movsb
inc
outsb
dec
mov
testl
mov
sbb
pusha
dec
add
ja
mov
aaa
popf
int3
adc
adc
daa
imul
js
xchg
out
out
test
and
lods
loop
mov
repnz
leave
repz
js
mov
add
test
xchg
mov
jge
inc
push
pop
in
mov
push
loope
lret
pop
mov
call
sub
flds
cmp
push
aad
int
lret
sbb
mov
iret
imul
mov
das
stc
or
jne
push
movsl
outsb
jnp
sbb
sub
pop
in
or
mov
dec
aad
inc
mov
shll
das
stos
cmp
or
out
stc
adc
fstpl
pop
stos
ret
and
cmc
mov
es
movsl
clc
lret
addr16
pop
inc
aas
insb
mov
test
arpl
js
mov
ret
inc
insl
or
xchg
packssdw
clc
xchg
into
les
push
cld
hlt
xor
test
cmp
test
push
sub
cltd
pop
xor
jae
mov
rolb
xchg
jecxz
clc
in
or
inc
jnp
mov
popa
mov
scas
push
sub
test
fnsave
decl
test
decl
pushl
xor
mov
call
or
or
mov
mov
mov
cmpl
je
mov
mov
movzwl
mov
mov
mov
jmp
jmp
cmpl
jne
xor
jmp
mov
add
mov
movl
cmpl
je
cmpl
je
mov
shl
mov
jmp
out
in
in
mov
mov
inc
pusha
adc
adc
sahf
sbb
lcall
ds
daa
pop
mov
ret
xchg
mov
leave
in
repz
cmp
pop
hlt
xchg
jno
mov
les
push
cmpsb
fldl
daa
inc
mov
xor
insb
mov
add
sub
fwait
pop
xchg
mov
mov
or
pop
dec
and
lret
ficompl
ret
stc
push
pop
ret
xchg
bound
xchg
and
fwait
lret
and
push
cmp
divl
ja
cmp
in
cmp
xchg
cmc
ja
push
jmp
aam
lahf
and
add
and
gs
mov
mov
sbb
fs
negb
push
dec
roll
js
xor
inc
ja
jecxz
adc
xchg
loopne
pop
push
add
roll
mov
adc
inc
cmp
adc
jle
add
leave
push
fsubs
fs
xchg
out
and
jl
and
imul
testb
and
ror
pop
xchg
fists
cwtl
sub
rcr
push
in
popa
sbb
and
add
ljmp
loop
test
pop
xor
out
imul
cmpsl
dec
test
repz
push
inc
rcll
pop
rcrb
dec
pavgb
ds
jle
hlt
jge
test
shrl
xchg
shlb
sub
mov
xchg
fiaddl
cmp
push
fstps
lds
jl
xor
dec
sar
cmpsl
dec
into
jmp
sbb
repz
adc
jns
mov
xchg
cmpsl
mov
adc
xchg
sbb
std
xchg
ret
sahf
insl
pop
jp
sti
jle
mov
adc
dec
mov
data16
dec
sbb
in
call
pop
lods
jbe
jmp
aaa
cmpsl
out
fdivs
jl
and
pop
call
push
jae
inc
lret
inc
jo
popf
test
add
sub
mov
movl
jmp
adc
add
jnp
bound
ss
cmp
and
cmc
pop
adc
adc
lea
dec
shlb
xchg
loope
mov
jg
sbb
cld
daa
les
cmp
inc
xor
xor
pop
fisubrl
lret
add
out
pop
insl
push
jne
mov
xchg
rcrb
popf
mov
gs
mov
fdivrs
jne
scas
sarb
test
int3
xor
add
cmp
loopne
cmp
adc
xor
cmp
push
pop
jmp
stos
adc
mov
push
sbb
mov
push
or
loop
orb
lds
cmpsl
stos
popa
out
mov
gs
imull
cmc
pop
pop
popa
das
loop
vsubps
aad
mov
xlat
lret
into
fsubl
rol
test
clc
inc
jo
mov
mov
pop
movsb
xlat
ret
popa
mov
fdivr
repnz
or
pop
xchg
jae
in
xor
sub
xor
fidivs
int3
jno
pop
push
rclb
cmp
pop
inc
into
mov
adc
sbb
ret
xlat
jnp
sbb
and
out
push
popa
aaa
xor
xchg
pop
jp
aas
sti
jg
rcrb
pop
adcb
adc
jecxz
pop
mov
test
cltd
jge
lcall
out
dec
pusha
loope
rol
mov
scas
inc
sub
das
loopne
push
or
out
sub
ss
pop
outsb
js
loop
cmc
aad
xchg
add
xor
pop
scas
fwait
in
das
enter
mov
aas
or
clc
popf
add
hlt
andb
add
or
pop
in
rcr
mov
jne
data16
pop
test
xor
inc
int
sub
mov
push
add
cs
dec
mov
stc
aam
outsl
dec
lcall
push
out
dec
jmp
xchg
sbb
xor
test
rcrb
pop
test
lcall
pop
mov
cmp
je
mov
mov
mov
mov
mov
mov
mov
inc
mov
jmp
movl
push
jmp
mov
mov
ret
push
jmp
or
addl
leave
pop
pop
cwtl
cmp
ret
insb
push
push
pop
adc
adc
mov
mov
sub
leave
mov
fdivl
movsb
mov
xor
popa
call
repz
xchg
and
int
jne
mov
adc
lahf
nop
test
les
add
movsb
or
fiaddl
inc
lahf
cmp
ljmp
jmp
flds
xchg
adc
testb
insl
mov
into
mov
adc
dec
cmp
jnp
add
xchg
imul
sbb
push
lods
ds
iret
jecxz
jle
pop
push
or
pop
or
nop
sbb
das
inc
push
mov
lock
sub
xchg
mov
mov
roll
cmp
cli
mov
add
sbb
dec
push
push
stos
adc
xor
ds
shll
enter
dec
adc
adc
xor
sub
std
mov
bnd
loop
ret
int3
ds
lret
insl
adc
leave
adc
jp
xchg
sbb
dec
and
xor
adc
jmp
js
mov
leave
test
imul
repnz
fs
rorl
sarb
movb
sbb
addr16
scas
adc
push
jne
jb
cwtl
aad
sahf
cld
ljmp
or
fdivr
cltd
cli
xchg
push
or
or
and
movsb
xor
imul
ljmp
test
js
ds
ja
mov
adc
jg
jecxz
sub
sbb
mov
shl
xor
aad
pop
push
adc
testl
inc
es
mov
push
push
add
push
push
dec
ret
in
mov
sarl
adc
lods
mov
jmp
popf
mov
int
mov
out
push
pop
cmp
addr16
nop
addr16
xchg
mov
lods
cmp
pop
shll
cmc
pop
out
mov
jns
cmp
pop
jnp
add
data16
add
adc
ljmp
sti
popa
cld
ljmp
or
into
jl
dec
xor
mov
jne
sub
leave
ljmp
jnp
pusha
in
xor
jo
dec
into
push
pop
xor
iret
cmp
sbb
adc
push
adcl
test
aad
rclb
data16
mov
pop
divl
pop
jb
xchg
inc
xchg
outsl
cmc
cmpsb
pop
rcr
xor
movsl
mov
not
add
or
adc
adc
add
ss
pop
adc
jns
or
sub
pushf
loop
dec
lret
lret
mov
lahf
bound
xor
add
mov
pop
ds
out
cld
lahf
fwait
jecxz
loope
pop
nop
cmpsl
sbb
lahf
mov
push
jecxz
loopne
push
inc
lahf
mov
pop
cwtl
and
and
or
movl
jne
mov
xor
mov
sbb
xor
movzbl
adc
div
xor
xor
sub
mov
mov
movzwl
sub
mov
xorl
div
mov
mov
movl
jmp
sbb
mov
xor
mov
mov
add
mov
adcl
shr
movl
rcr
shr
movl
rcr
or
jne
div
mov
mull
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
xor
mov
pop
pop
ret
adcl
subl
movl
cmpl
je
add
jmp
fwait
mov
xchg
sbb
push
stos
push
adc
adc
cwtl
sbb
pop
mov
outsl
pop
cmpsb
loope
inc
data16
ret
sbb
es
and
inc
sbb
push
or
out
adc
repz
add
je
mov
cmp
push
fsubrs
sbb
sbb
mov
iret
pmovmskb
mov
test
push
jne
out
dec
mov
sub
push
shll
cmpl
lcall
scas
hlt
aas
push
jne
sarl
sbb
cmpsb
or
clc
sub
pop
jae
pop
fcmovu
push
push
pop
inc
loopne
mov
fistpl
hlt
cwtl
stos
shlb
bound
push
pusha
and
pop
lds
jns
lcall
inc
sbb
rorl
loop
jl
and
sub
imul
sahf
andb
cmp
sar
push
inc
push
push
rclb
cmc
jbe
js
pop
pop
ds
dec
push
and
sti
xor
jns
pop
mov
rcrl
pop
pop
push
das
sbb
push
movsb
out
test
int
dec
jp
mov
insb
sub
push
xlat
stc
xor
lds
mov
sbb
sub
inc
pop
out
sahf
mov
mov
repz
and
dec
push
push
fsubs
cmp
xor
call
clc
scas
loope
and
or
int3
test
orb
xchg
adcb
lcall
in
pusha
and
es
add
mov
fistl
out
popf
push
add
mov
add
sbb
std
jo
push
or
test
jmp
daa
out
inc
sub
lock
and
or
jo
jo
pop
add
sbb
in
pusha
fadds
xchg
mov
jmp
cmp
shlb
xorb
ss
leave
or
cmp
sahf
fstl
mov
push
jp
mov
jl
lods
cmp
incl
pop
mov
inc
mov
mov
imul
jle
adc
mov
pop
jne
js
sub
push
roll
fwait
ja
aad
mov
mov
mov
jns
cld
lods
lret
xor
push
ljmp
sbb
mov
sbbl
pushf
std
movswl
inc
notb
mov
xchg
jno
dec
aad
mov
sub
adc
mov
cmp
jne
mov
add
add
mov
dec
or
mov
pop
mov
jp
cmp
jmp
push
mov
xlat
push
jecxz
popf
ljmp
std
mov
inc
in
mov
sub
cmc
bound
jp
pop
xchg
aas
jl
loopne
fsub
ja
std
cmp
add
adc
xchg
sahf
add
outsl
mov
test
sbb
jnp
stc
fst
repz
mov
mov
nop
and
push
cld
pop
sub
jle
shrl
inc
out
inc
lea
xchg
mov
sbb
xchg
mov
ret
and
xchg
jg
popf
setg
scas
fs
fs
push
rorb
lcall
add
cmp
add
leave
ret
movl
cmp
jae
movl
cmp
jae
sbbl
shld
shl
ret
mov
orl
xor
adcl
and
shl
ret
xor
xor
ret
