push
mov
sub
xor
mov
mov
cmpl
movl
mov
mov
mov
jmp
movl
jne
push
push
push
push
push
push
pushl
push
call
xor
subl
sub
neg
movzwl
sub
mov
mov
sub
inc
push
mov
mov
sbb
addl
mov
orl
movzwl
adc
mov
orl
and
mov
cmpl
mov
mov
not
jmp
movl
mov
jl
push
push
pushl
pushl
push
push
call
xor
dec
add
sbb
mov
add
add
mov
sub
mov
cmpl
mov
mov
jmp
movl
mov
jb
pushl
push
call
andl
mov
mov
or
sbb
orl
mov
sub
mov
sbb
add
mov
orl
orl
dec
lea
mov
mov
xor
mov
mov
add
mov
sbb
mov
and
mov
and
mov
and
shrd
shr
mov
xor
mov
adc
mov
jmp
stos
xchg
sarl
cmp
and
dec
rep
insb
adc
adc
movlps
add
das
fisttpl
lds
lods
push
push
in
lea
ret
pop
rorb
mov
hlt
test
popf
fldcw
push
rorb
scas
inc
sbb
scas
ror
arpl
icebp
dec
js
mov
adc
js
dec
cmp
mov
jns
pop
lahf
or
inc
les
call
sub
movsb
fsts
pop
mov
fidivrs
xor
inc
dec
xchg
in
xor
mov
shlb
stos
iret
mov
cltd
cmp
mov
lock
mov
xchg
pushf
mov
mull
in
push
dec
imul
dec
stos
sarb
scas
pusha
pusha
jmp
jmp
rcrb
and
popa
enter
es
aas
lahf
outsb
add
insb
jle
movsl
mov
rol
mov
clc
popf
fidivrl
and
dec
in
shl
iret
mov
rclb
cmp
adc
neg
xor
jl
scas
sbb
mov
stos
enter
pushf
xor
add
gs
fistpl
mov
movsb
das
lret
sbb
fcoms
xor
xor
xchg
push
mov
inc
pop
jle
jo
mov
jge
cmc
xchg
jmp
sbb
mov
sbb
adc
rcrl
push
jl
movsl
push
fisubs
pop
push
inc
in
cmpsl
mov
jb
lcall
jecxz
jp
push
push
mov
inc
out
pop
mov
mov
jecxz
out
int
cmp
lods
aad
fs
popa
adc
daa
mov
inc
pusha
mov
inc
pop
mov
sub
sbb
gs
sub
int
stc
das
mov
and
outsl
xchg
fwait
inc
inc
sub
mov
lods
push
pop
fadd
jle
dec
mov
fs
ja
movl
add
shr
push
add
add
push
mov
push
xchg
mov
movlps
movlps
adc
dec
ret
add
test
andl
scas
jle
add
push
aas
mov
addr16
sub
in
cmc
ficompl
int3
imul
jg
out
outsb
pushf
lea
shll
mov
pop
mov
mov
lret
xchg
rcrb
popf
in
xor
mov
iret
jno
or
cmc
cltd
scas
add
popf
xlat
sbb
sub
or
mov
push
sbb
jp
fidivrs
je
clc
es
insb
dec
mov
dec
aaa
rcrb
xchg
jp
sbb
mov
jge
pop
mov
pop
in
cli
mov
mov
shrb
xchg
mov
mov
adc
inc
mov
lock
dec
cmp
or
negb
adc
repnz
lahf
and
cld
stos
and
outsb
or
lahf
fs
mov
shrb
cmpsl
aam
xchg
lods
mov
mov
mov
int3
pusha
jp
sub
cmp
loopne
insb
std
adc
comiss
out
dec
sub
loope
xchg
data16
xchg
mov
fs
xor
das
sub
add
aad
mov
rcll
cmp
adc
push
and
mov
cltd
jns
das
mov
xchg
fcompl
sbb
aaa
stos
jo
jl
test
jge
test
inc
pushf
adc
cmp
inc
aaa
xchg
push
aaa
add
xchg
or
inc
sbb
rcrl
dec
rclb
cmp
and
fstl
jns
mov
jmp
loop
mov
adc
jne
cmp
mov
rorl
dec
fs
movsb
rorl
cld
cmpsb
jno
imul
mov
testl
sbb
rclb
jns
jb
sbb
mov
movl
movl
adcl
movl
movl
and
movl
movzbl
xor
movl
subl
movl
cmpl
mov
movl
mov
movl
jmp
mov
je
push
push
push
call
andl
andl
orl
andl
sub
adcl
cmpl
movl
movl
movl
jmp
mov
jne
pushl
pushl
call
subl
orl
or
xorl
andl
sub
adcl
xor
dec
movl
and
movl
movl
mov
add
movl
movl
movl
movl
and
movl
cmpl
movl
movl
movl
movl
jmp
mov
mov
jb
pushl
push
call
addl
adcl
addl
andl
orl
neg
movl
xor
movl
adcl
movl
sbb
movl
movl
movl
sbbl
movl
adc
mov
orl
shl
mov
adcl
push
push
push
push
subl
call
mov
xor
mov
negl
xor
cmpl
mov
mov
jmp
movl
mov
ja
push
push
pushl
pushl
call
adc
adcl
adc
or
mov
subl
jmp
jno
sub
cmp
push
pop
js
xor
or
adc
movlps
xchg
jbe
das
xchg
shrl
iret
faddp
or
bound
ret
and
push
div
out
xor
xor
add
dec
mov
stos
xor
cmc
cmp
into
push
mul
mov
cmp
std
sbb
add
bound
mov
adcb
dec
lds
pop
and
orb
pop
push
cmp
aas
loopne
fmull
xor
push
lret
inc
lods
sub
pop
aas
jbe
sbb
neg
pop
xchg
mov
loopne
sub
add
inc
push
cmp
scas
mov
mov
mov
adc
jge
add
xchg
cmp
scas
and
divb
jno
inc
sub
jns
arpl
pop
test
shll
add
sbb
ja
fwait
push
sbb
and
adc
push
jmp
pop
repnz
int
scas
leave
in
fwait
nop
and
xor
repnz
sub
lds
jbe
xor
popa
inc
and
cltd
mov
adc
pusha
xchg
add
cltd
push
xchg
xor
mov
pop
out
cld
popa
ljmp
bound
rcll
je
repz
mov
mov
xchg
mov
mov
mov
xor
les
mov
mov
je
mov
add
mov
loopne
cld
mov
insb
lock
je
repnz
cmp
add
std
sbb
cmc
jp
xor
in
sub
aas
fidivrl
xor
pusha
out
cmpsl
insb
subl
jae
mov
xor
mov
xor
sbb
mov
push
out
pop
xchg
jge
aaa
and
dec
lret
in
psubb
and
mov
sub
cmpl
notl
mov
jmp
movl
movl
jbe
push
pushl
pushl
push
pushl
call
adc
add
movzbl
xor
mov
sbb
adc
sbb
xorl
mov
lea
sbb
mov
mov
adcl
or
andl
and
cmpl
movl
mov
mov
jmp
movl
jg
push
push
call
adc
xor
xorl
and
orl
cmpl
movl
mov
movl
jmp
movl
jb
pushl
push
pushl
push
pushl
pushl
call
dec
movzwl
adc
addl
add
and
movzwl
or
mov
inc
not
mov
xorl
or
notl
xor
movl
cmp
jne
mov
adc
mov
jmp
push
sbb
xor
fsubl
mov
movlps
aaa
xchg
call
inc
aaa
cmc
lods
lcall
std
mov
mov
xchg
out
jl
add
cmp
std
or
push
push
pop
push
mov
faddl
push
cmp
lods
mov
inc
inc
push
jne
xchg
sbb
or
mov
fimull
out
je
pop
mov
lcall
aad
adc
mov
or
cmp
mov
in
add
mov
inc
xlat
mov
jp
jp
subl
jecxz
add
pop
cltd
xor
stos
shlb
in
js
pop
out
imul
scas
or
mov
inc
xchg
ret
int
add
addr16
or
aaa
xor
sub
outsl
aad
fwait
xchg
outsl
or
jecxz
jbe
add
and
or
xor
int3
jmp
mov
out
stc
movsl
sti
insb
jge
subb
fadds
sub
inc
js
rcll
sbb
test
sbb
iret
imul
pop
jle
sub
test
call
xor
add
xchg
outsb
inc
cmpsb
sbb
jecxz
push
lock
xor
sub
in
mov
inc
or
loop
popf
addr16
push
aad
and
je
push
dec
cmpsb
fistl
or
mov
fwait
jle
mov
jne
adc
pop
add
andl
pop
arpl
out
stos
mov
lds
mov
pop
dec
add
shr
jae
xor
sar
push
cmp
outsb
jle
in
sub
pop
and
out
int
xor
or
adc
xchg
mov
jae
inc
stos
rcll
stos
mov
and
lret
andb
mov
lock
stos
jmp
mov
movsb
xchg
dec
xchg
pop
adc
mov
movl
shrd
cmpl
mov
movl
movl
movzbl
jmp
movl
mov
jl
push
push
push
push
push
call
dec
xor
add
xor
xor
adc
and
orl
movl
shr
sub
mov
mov
shl
addl
xor
andl
xor
subl
or
mov
mov
cmp
jne
mov
adc
mov
cmpl
movl
mov
movl
mov
jmp
movl
mov
jle
pushl
pushl
pushl
push
call
add
xor
add
or
xor
adcl
neg
movzbl
add
mov
sbbl
xor
mov
cmpl
mov
mov
mov
jmp
mov
movl
ja
push
push
pushl
call
xor
sbbl
and
movzwl
xor
mov
adcl
sbb
mov
mov
shrd
subl
mov
cmpl
mov
mov
mov
mov
jmp
mov
mov
jge
push
push
push
push
push
push
push
call
adc
notl
sbbl
mov
or
decl
mov
xor
shr
xorl
jmp
and
aaa
and
ljmp
push
add
adc
movlps
pop
bnd
pop
mov
outsl
or
int
pushf
mov
test
dec
cmpsb
int
sub
xor
pop
sbb
ret
daa
fldenv
cmpsl
lret
bswap
mov
inc
push
adc
mov
ret
jb
sbb
ret
mov
sub
sub
insl
aam
popw
sub
cmc
push
lods
adc
push
xchg
push
mov
rcrb
decl
or
test
cli
xlat
test
jbe
cmc
sub
cmpsl
pop
mov
adc
mov
stc
test
stc
mov
int3
sti
sbb
adc
ret
cmpsb
stos
dec
jae
cmpsl
fstps
fisubs
cmp
xchg
repnz
push
mov
sub
mov
adc
dec
xor
pop
cmp
xor
outsl
mov
pop
enter
push
push
bound
and
mov
and
pop
test
shufps
jno
or
xchg
lods
push
push
in
mov
out
mov
and
fimull
inc
lret
or
filds
xchg
mov
scas
or
aam
push
xor
popa
arpl
mov
in
gs
mov
mov
dec
mov
adc
mov
pop
mov
cmp
fcoml
ret
iret
cmp
shrb
fisubl
mov
movsl
adc
mov
out
and
xchg
cmp
jb
adc
xchg
jns
lock
jns
inc
jg
push
xor
sbb
mov
mov
inc
imul
and
mov
lods
xchg
push
not
aas
cmc
add
mov
jbe
out
stos
or
test
cmp
xchg
orl
push
sbb
iret
sub
push
push
imul
je
jns
test
lods
lahf
jge
aas
nop
loop
ja
xor
lret
mov
push
sbb
adc
xor
orl
or
adcl
shl
sub
mov
mov
sbbl
mov
xor
add
mov
mov
cmpl
notl
movl
jmp
mov
jg
push
call
negl
xorl
sbb
sbb
add
mov
or
mov
jmp
test
and
and
test
ljmp
push
call
adc
movlps
xor
cmc
pop
popf
add
inc
mov
and
push
or
mov
jl
pushl
mov
push
lods
int3
outsl
dec
fbstp
lock
sbb
ret
mov
adc
int
and
dec
mov
xchg
lcall
out
addl
mov
outsl
xchg
mov
sub
out
lahf
aam
push
adc
xchg
je
mov
xchg
xor
rorl
aam
jae
mov
nop
hlt
mov
daa
add
mov
hlt
push
xchg
pop
clc
adc
arpl
std
pushf
xchg
sub
outsb
ret
push
shl
cmpsl
inc
movsb
outsb
loop
sarb
sbb
arpl
pop
mov
inc
sbb
cltd
in
repz
fdivrs
mov
mov
inc
jecxz
pop
lcall
lcall
push
nop
lock
sub
in
and
mov
cmp
movsb
les
fldl
and
jnp
and
xchg
scas
xor
daa
or
insl
pop
mov
xor
adc
sbb
rclb
cmp
jbe
xor
ret
sub
lods
stc
leave
mov
push
mov
inc
cltd
roll
dec
imulb
mov
pop
mov
loopne
sub
mov
shrl
push
fs
dec
inc
dec
das
popf
sub
fsubrs
mov
fistpl
adc
pop
inc
push
push
and
or
push
pop
mov
rorl
arpl
outsb
clc
inc
sub
fwait
leave
cltd
pusha
arpl
pop
pop
stos
movsl
fmull
push
les
add
xchg
lock
dec
cmp
mov
mov
xlat
insb
pop
aas
repnz
inc
movsl
push
or
ret
imul
mov
loopne
test
std
jle
push
inc
repnz
xor
int3
insl
out
cmp
mov
mov
sbb
mov
shrd
shr
adc
mov
xorl
mov
dec
xor
shl
mov
adc
mov
xor
cmpl
movl
mov
mov
jmp
movl
movl
jbe
push
pushl
call
add
xorl
or
movzbl
or
mov
mov
or
mov
addl
or
movzbl
and
mov
mov
xor
or
add
mov
shrd
orl
shr
adc
mov
mov
cmpl
movl
mov
jmp
movl
jg
push
pushl
push
push
call
dec
sub
sbb
decl
sbb
cmpl
mov
movl
jmp
movl
jae
push
call
sbbl
and
adc
mov
add
add
or
sbbl
adcl
mov
movl
xor
xor
or
shl
lea
mov
mov
adcl
shrd
shr
cmpl
movl
mov
jmp
mov
movl
ja
push
call
sbb
mov
sbb
inc
inc
sub
subl
cmpl
mov
mov
jmp
mov
jl
pushl
call
xorl
add
xor
xor
xor
sub
or
mov
mov
mov
or
xor
mov
or
mov
xor
or
addl
shl
imul
cmpl
movzbl
mov
mov
movl
jmp
mov
ja
pushl
push
pushl
push
pushl
pushl
push
call
movzwl
sbb
addl
or
sbb
and
mov
cmpl
mov
mov
mov
jmp
movl
je
call
sub
orl
and
sbb
sbbl
decl
subl
xor
mov
shrd
orl
mov
jmp
xchg
arpl
pop
inc
push
pop
pop
adc
in
jle
cmp
jle
sti
adc
movlps
lcall
mov
xchg
pop
sbb
jne
jecxz
push
adcb
add
inc
ds
insl
cmp
hlt
mov
lss
mov
sahf
mov
js
sub
ret
mov
or
ja
stc
mov
xchg
out
sbb
push
fldenv
cmp
adc
addr16
sub
dec
xchg
push
mov
out
lcall
loopne
sti
orl
std
pushf
out
sub
sub
aas
cmpsl
cmp
push
and
xcrypt-ecb
cmpsl
or
mov
jl
pusha
cmp
xchg
addl
xor
lret
and
addr16
out
pop
xchg
pop
mov
fs
pop
mov
sub
mov
je
shll
sub
fwait
pusha
imul
and
mov
mov
push
jno
inc
fwait
ss
cmp
fildl
js
mov
sub
mov
xor
ror
loope
jbe
dec
pushl
sarb
fwait
and
loopne
mov
lea
dec
lahf
mov
xor
pop
or
in
rep
sbbl
mov
dec
inc
nop
sbbb
push
jae
test
ljmp
or
sub
out
add
out
in
xchg
mov
incl
ss
pop
cmc
mov
adc
lret
or
mov
gs
xor
mov
lds
xchg
adc
testb
pushf
stc
mov
ss
push
pop
ja
gs
mov
mov
in
sahf
cli
popa
mov
push
mov
sbb
inc
xor
stc
pop
adc
cld
xchg
enter
in
push
sbb
or
sub
xor
jno
test
sarl
outsl
mov
addl
xor
sbbl
shr
mov
mov
orl
xor
subl
or
addl
shl
negl
sub
movl
mov
jmp
add
add
and
push
adc
movlps
mov
mov
faddp
jle
je
push
add
shlb
loopne
das
lods
jne
fcoml
jns
add
mov
or
push
iret
cmpsl
mov
mov
popa
cli
popa
arpl
xchg
sub
fadd
les
fcoms
jbe
adc
pop
movb
dec
push
push
and
jae
aaa
addr16
out
arpl
in
lahf
mov
rcll
shlb
cmp
push
sub
push
lcall
cmp
sub
test
test
popf
daa
mov
icebp
and
les
je
cmpsb
test
jp
data16
push
scas
xchg
inc
stc
mov
jns
add
lock
subl
popf
sbb
shl
int
cwtl
sahf
subl
fsubs
xchg
insb
shll
rorb
jecxz
je
out
dec
shl
gs
and
iret
inc
or
jae
movsb
adcl
loop
test
clc
addb
xorb
fisubrl
fistpl
pop
push
jbe
pop
ret
pusha
cmp
imul
flds
enter
in
popf
cmpsb
xor
dec
add
cmp
inc
repz
jmp
xor
lret
call
insl
inc
fistps
mov
pop
pusha
aas
out
add
fistpl
repnz
stos
add
jl
cmpsb
add
fisttpl
push
mov
cwtl
dec
dec
loop
inc
fdivrl
xchg
in
cmp
ficoms
dec
loopne
scas
xchg
jns
xchg
or
or
sbb
fs
repz
sbb
inc
jne
cltd
and
test
jnp
dec
push
stc
les
xchg
pusha
mov
xor
nop
hlt
xchg
out
ficompl
xchg
insb
sub
pop
pushf
sbb
icebp
jecxz
lcall
or
add
sub
add
mov
orl
mov
adcl
shrd
mov
or
mov
sbbl
xor
orl
shl
xor
or
shr
mov
cmpl
not
not
mov
jmp
movl
jb
push
pushl
call
not
inc
sub
mov
and
mov
mov
sub
sub
addl
and
movl
mov
sub
mov
xor
mov
shrd
shr
mov
mov
adc
mov
mov
mov
movl
xor
xor
andl
or
shl
imul
sub
jmp
or
mov
mov
xor
mov
addl
shrd
mov
mov
sbbl
xor
sbbl
shl
xor
or
sbbl
shr
mov
adcl
mov
mov
movzbl
sbb
mov
addl
shrd
shr
mov
jmp
cwtl
mov
lcall
iret
xchg
movlps
sub
jae
mov
xor
adc
std
xor
or
push
mov
jmp
jecxz
pusha
adc
or
mov
test
add
lea
sub
std
mov
mov
nop
imul
jne
jae
jge
adc
iret
or
xchg
push
ficompl
cmpsb
lock
in
rcrb
out
popa
mov
jg
lahf
dec
out
es
lahf
pop
pop
stos
das
pop
sub
push
outsl
js
into
scas
test
pop
enter
mov
mov
addb
mov
in
dec
cmp
lock
mov
jl
jae
lret
mov
arpl
push
cmp
add
stc
shl
das
testl
mov
js,pt
sbb
or
mov
leave
jne
loopne
push
fidivrs
les
mov
push
xchg
mov
mov
adc
cmp
jle
xor
iret
sbb
sub
mov
mov
or
nop
nopl
jecxz
cmp
pop
mov
std
in
dec
cwtl
cmpsl
xor
mov
fsts
dec
jge
stos
cmc
xchg
push
jp
int3
enter
divl
mov
xchg
sbb
cltd
stos
mov
insb
out
adc
pushf
mov
and
xchg
outsl
push
fwait
sbbl
js
sub
adc
xor
repnz
clc
jns
xchg
mov
jns
sub
inc
and
lock
das
mov
mov
lock
ficoml
repz
ljmp
lds
pop
jo
xchg
lea
xor
push
dec
cwtl
enter
imul
cmc
push
inc
jle
lods
ret
into
popa
test
mov
mov
pop
data16
dec
fnsave
mov
and
mov
addl
mov
andl
xor
andl
xor
adcl
or
shl
andl
add
cmpl
mov
mov
not
jmp
not
jbe
push
push
call
adc
mov
xor
mov
sbb
sub
xor
add
mov
sub
mov
cmpl
movl
mov
movl
jmp
movl
mov
jge
call
movzbl
sub
mov
mov
add
and
sbb
sbb
dec
shrd
shr
mov
mov
xor
shl
xor
or
mov
movl
mov
mov
movl
mov
movl
mov
movl
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
lea
mov
mov
mov
shrd
shr
mov
mov
shl
mov
xor
xor
or
mov
mov
xor
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
lea
mov
mov
mov
shrd
shr
mov
mov
shl
mov
xor
xor
or
mov
mov
or
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
lea
mov
mov
mov
shrd
shr
mov
mov
xor
shl
mov
xor
or
mov
mov
add
mov
mov
shrd
shr
mov
mov
xor
xor
or
lea
mov
mov
shl
mov
shrd
shr
mov
mov
xor
xor
or
mov
shl
mov
mov
mov
or
mov
mov
shrd
jmp
sbb
sbb
jmp
pop
pop
push
adc
movlps
dec
cmp
insl
shlb
sar
mov
in
movsb
bound
cmpl
repz
stc
loope
sbb
fisttpl
mov
sarb
dec
cmp
or
stos
mov
push
ret
ljmp
and
in
push
mov
and
cmp
lea
add
in
andb
negb
cmp
fmull
pop
cmp
dec
mov
imul
cmp
mov
mov
push
int3
mov
sub
int
cwtl
enter
data16
sub
mov
pavgb
addl
imul
push
jae
pop
xchg
das
xchg
jae
mov
add
push
cli
imul
mov
push
jl
pop
or
jb
pop
adc
mov
push
adc
xor
sbb
pcmpeqw
dec
sub
fidivl
xor
and
lods
pop
jle,pt
in
andl
mov
push
mov
mov
test
xchg
dec
dec
and
sub
xor
cmp
lods
mov
bnd
scas
and
rcll
mov
into
lods
xchg
aaa
ds
int
mov
lods
adcl
push
outsl
dec
fbstp
cli
mov
mov
imul
dec
sub
lods
pop
jae
sbbl
sub
addl
outsb
cmpb
das
sub
sahf
andb
jl
jo
mov
test
cmp
jno
outsb
and
lods
nop
shll
inc
repnz
insl
push
cmc
test
rcrb
pop
jb
loope
sbb
test
push
xor
or
mov
cwtl
add
mov
jge
mov
jb
mov
sub
xor
xor
lea
xchg
push
arpl
push
shr
mov
mov
xor
mov
xor
or
mov
dec
not
and
xor
mov
mov
xor
or
mov
jmp
mov
imul
data16
jmp
adc
movlps
stc
and
ja
cmc
gs
mov
push
loopne
pushf
pop
aam
cmp
cltd
movsl
out
cmovge
loopne
or
movsb
data16
sbb
js
mov
dec
and
fs
cmp
push
cmpb
mov
ljmp
inc
mov
fwait
in
call
or
and
incb
mov
repnz
arpl
cmp
xor
sbb
pop
inc
xor
scas
jge
sub
aad
scas
cmp
inc
adc
xor
js
mov
in
insb
add
xlat
imul
loopne
push
adc
pusha
ret
sub
or
daa
fists
pusha
fwait
pusha
sub
jle
pop
fisttpl
in
and
push
aaa
lret
in
xchg
arpl
inc
and
rcrb
pop
aaa
roll
cld
test
pop
insl
cmp
push
adc
fldenv
add
mov
or
xchg
imul
test
sahf
pop
inc
fs
test
mulb
popf
sub
pop
dec
mov
hlt
jo
cmc
outsb
add
mov
sarl
adc
loop
pop
pop
jle
cmpsl
xor
lods
xchg
stos
xchg
inc
icebp
lds
sub
shl
in
cwtl
je
adc
ljmp
mov
out
loop
push
clc
in
inc
dec
mov
add
pop
xor
adc
mov
addr16
js
sahf
push
loop
sub
inc
lods
xor
nop
or
mov
mov
fs
and
push
sub
xor
inc
sub
aam
mov
sub
dec
shlb
cmp
sbb
adc
jo
jbe
mov
lods
cmp
push
inc
push
hlt
push
call
ljmp
shrd
shr
mov
mov
mov
xor
mov
xor
shl
mov
or
jmp
mov
outsb
mov
fidivrl
insb
call
movlps
orl
pushf
out
in
fidivrl
in
mov
movb
pop
mov
mov
adc
mov
aam
jle
mov
jp
nop
int
jmp
test
mov
xchg
sub
mov
or
int
pop
pop
je
fsubl
rclb
pop
incb
xor
lret
loop
aam
adc
sub
bound
xlat
stc
shll
add
scas
das
in
lcall
push
dec
cs
pop
push
insb
movsb
or
and
in
or
mov
mov
cmpsl
push
push
repz
push
ret
mov
sub
xchg
add
addr16
sbb
mov
adc
and
ds
jge
je
pop
shlb
pop
sarb
adc
jno
sbb
adc
pop
jge
cld
add
add
test
xor
in
shlb
cmc
dec
aad
mov
xlat
add
divl
pushf
imul
lcall
into
mov
and
push
sbb
add
pop
in
cmpsl
cmp
push
rolb
add
dec
jp
call
dec
xor
mov
aaa
adc
jne
push
fidivrl
aam
dec
dec
push
mov
js
push
les
outsl
add
data16
xchg
popf
xchg
xchg
or
inc
mov
jmp
mov
pusha
loop
stc
mov
popf
imul
ret
and
or
xor
and
popl
sub
fsubl
push
or
clc
adc
cwtl
repz
movsl
xchg
pop
pusha
test
movsb
add
jecxz
and
mov
sub
pop
or
lods
imul
inc
mov
cwtl
daa
data16
cmp
movsb
shr
loope
les
cmc
test
add
ficompl
fwait
mov
cmp
je
mov
sub
mov
mov
xor
xor
shrd
shr
mov
mov
mov
mov
xor
or
mov
mov
mov
xor
xor
mov
mov
mov
shrd
shl
or
mov
mov
mov
shll
mov
mov
mov
xor
or
shr
or
cmp
jne
cmp
je
jmp
mov
mov
jmp
adcl
stos
fidivrs
adc
movlps
aas
rolb
pusha
cmp
sub
adc
or
or
xchg
inc
add
dec
jae
jp
jo
ja
sbb
xchg
scas
lds
push
data16
mov
push
sub
jae
jne
or
sub
xor
sub
jns
push
mov
mov
outsl
mov
sti
mov
jno
add
dec
gs
add
insb
mov
sub
outsb
stc
cmpb
orb
push
inc
or
mov
lds
lret
sbb
mov
enter
push
cmp
movsl
inc
sub
ljmp
and
inc
mov
lods
push
fcmovbe
imul
icebp
flds
call
or
cwtl
pop
pusha
ret
loopne
movsl
push
fisubs
stos
xchg
int3
bswap
cmpsb
jge
xchg
cmpsb
cwtl
push
dec
dec
ss
bound
xlat
test
xchg
mov
into
sbb
call
xor
dec
or
in
push
ja
aas
in
sti
xchg
stos
xor
pop
mov
and
cmp
sub
je
imul
fstpt
aad
xchg
int3
cmp
sub
sbb
stos
nop
or
mov
lea
cmp
je
cmp
out
je
push
mov
int
mov
mulb
push
and
push
sub
jge
lcall
std
rol
push
add
or
cwtl
add
xor
mov
inc
jp
loopne
pop
mov
aas
dec
movsl
mov
loopne
push
push
and
fists
sti
sub
pop
jbe
cmp
dec
jae
sub
cwtl
sub
cmp
sbb
dec
cmp
inc
sahf
nop
arpl
add
lods
xchg
js
jmp
mov
fmuls
ja
imul
shr
mov
mov
mov
mov
xor
or
shl
or
mov
mov
xor
mov
mov
mov
mov
xor
mov
mov
shrd
shr
mov
mov
mov
shll
xor
mov
jmp
stc
popa
mov
inc
xor
jle
or
adc
movlps
pop
add
ljmp
pop
sbb
cli
pop
ffree
popf
jne
pop
lds
test
inc
mov
mov
dec
mov
mov
add
movsb
lahf
mov
cmp
nop
xchg
and
or
clc
mov
xchg
in
lds
icebp
mov
cmc
lcall
and
mov
testl
sub
push
dec
and
cmpsl
mov
pop
pop
inc
popa
xchg
mov
pop
push
xor
pop
lock
fcompl
mov
sbb
fsub
sub
add
mov
sbb
loop
ret
xchg
mov
bound
in
test
fdivs
cmp
sahf
mov
add
push
or
jge
xor
pop
xor
jne
ljmp
stos
sbb
cmp
pop
jmp
jnp
dec
adc
xchg
adc
mov
addr16
dec
push
cmp
jae
and
mov
jmp
dec
pop
xchg
stc
insb
xor
lock
insl
xchg
mov
adc
dec
fsubs
cltd
into
sbb
cmc
pop
sbb
outsb
dec
xchg
add
in
stc
pushf
push
pop
adc
fimull
mov
ret
repz
ja
sbb
stc
mov
and
mov
test
xchg
sti
insb
mov
push
je
fisubs
stc
popa
gs
decb
dec
int3
dec
inc
rcrl
clc
out
aaa
ficoml
xor
inc
gs
out
pop
ds
js
dec
sub
insb
ss
xor
test
mov
enter
pop
xor
sbb
fstpt
das
jo
jmp
leave
cld
clc
out
jmp
fucom
adc
rorb
mov
sbb
mov
repnz
cld
sahf
insl
cmp
sub
nop
mov
sahf
pop
test
cmpsl
ja
push
sbb
fwait
pop
xchg
scas
repz
jno
jbe
inc
nop
mov
mov
mov
or
mov
mov
cmp
jne
mov
cmp
je
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
shrd
mov
mov
xor
shr
mov
xor
shl
or
mov
mov
mov
xor
xor
xor
shld
mov
mov
mov
mov
shl
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
mov
xor
xor
mov
mov
shrd
shr
mov
mov
mov
mov
xor
or
mov
shl
mov
mov
or
mov
push
jmp
mov
pop
lahf
push
or
lods
out
movsl
dec
mov
movlps
jg
cmp
in
ret
ds
mov
or
xchg
int
in
jle
cmp
and
loop
xchg
xchg
xor
cmpsl
roll
fisubs
jnp
call
jecxz
mov
xchg
repnz
jle
cmp
jl
jne
adc
dec
leave
dec
adc
mov
es
jns
addb
lods
insb
scas
cld
test
in
pushf
lret
mov
sub
nop
xor
dec
push
bound
fwait
jecxz
mov
mov
fistpl
scas
shl
xchg
bound
sub
mov
sbb
cltd
and
jb
test
adc
hlt
jb
mov
popa
movsb
pop
mov
jmp
scas
iret
add
jp
enterw
jle
shrl
lret
dec
sbb
pop
in
insb
xchg
jl
or
xor
xlat
jbe
je
mov
shrl
sub
sbb
add
add
pop
out
or
nop
and
fs
ss
xor
jl
xlat
testb
rolb
mov
ss
ret
stc
mov
adc
dec
mov
les
scas
test
cmp
lock
mov
inc
pop
int3
ljmp
lret
cmp
cli
outsb
out
sub
fcompl
dec
pop
addr16
jo
sarl
sub
aad
repnz
lock
jle
call
adc
ror
cmp
aas
cmpsb
pushf
or
mov
inc
xor
pop
sub
out
cwtl
sbb
outsl
sub
aam
hlt
mov
notl
mov
and
std
xor
cmp
jl
jle
inc
sbb
or
clc
jae
sbb
jb
inc
ret
out
sbb
lds
call
sub
fsubrp
pop
push
mov
inc
lds
lock
sbb
arpl
std
and
jne
push
push
call
mov
mov
andl
shrd
shr
shr
xor
push
xor
jmp
push
shl
dec
jne
sub
lods
and
sbb
movlps
sbb
call
add
and
add
movsl
es
cwtl
jns
and
ret
xchg
inc
test
mov
ss
into
repz
pusha
lds
push
cmp
test
fldl
popa
adc
lods
repz
out
decb
enter
rorb
xchg
adc
or
lods
repz
dec
jge
cmp
jge
push
fnclex
sbb
jge
dec
out
subl
sbb
cli
lock
data16
sarb
cmpsb
push
xor
rorl
icebp
fwait
push
or
aas
daa
ret
mov
xchg
adc
sbb
adc
xorb
mov
popf
ror
sbb
jb
mov
out
outsl
or
jne
jbe
add
stc
fsubs
lea
jp
and
std
sbb
shrb
dec
popf
push
mov
insb
ljmp
cmpsb
jns
inc
and
pop
pop
pop
mov
xchg
in
arpl
push
dec
movsl
xor
cmovae
inc
inc
scas
movsb
mov
das
pop
mov
pop
fwait
dec
mov
cmp
lock
adc
je
xor
rolb
imul
inc
pop
test
and
scas
inc
adc
outsl
lods
mov
xor
push
adc
mov
ret
fmull
dec
int
sbb
das
pushl
pop
and
xchg
or
insl
xor
xor
jmp
ljmp
dec
xchg
in
idiv
mov
mov
pop
fiadds
insb
pop
out
subl
fmuls
out
xor
and
sbb
pop
loop
mov
xlat
cltd
pop
push
lcall
mov
vsubps
or
adc
sub
or
and
mov
sub
rclb
out
flds
mov
loop
es
push
adc
push
add
add
fstpt
push
pop
lods
aam
adc
movlps
xchg
push
xor
mov
sub
mov
add
in
cmpsb
pop
xor
xor
inc
test
imul
das
fisubrl
fdivr
xor
lock
pushl
mov
xchg
xor
push
push
lret
hlt
aad
push
shrb
lcall
sbb
clc
inc
loopne
addr16
lods
imul
inc
loop
dec
out
or
enter
mov
decb
test
into
out
enter
xchg
add
pop
cmp
sub
mov
pop
xchg
adc
clc
mov
sti
inc
pushf
fbstp
jb
push
mov
xorl
int3
jl
and
dec
jb
or
inc
test
xchg
call
mov
inc
imul
stc
fsubr
cltd
clc
out
imul
sbb
mov
mov
scas
cmpsl
inc
push
mov
cmp
popf
loope
sbb
fstl
inc
test
int3
incb
sbb
clc
aam
loop
jmp
push
stos
hlt
call
cmc
dec
dec
and
aad
cmp
pop
push
push
adc
aas
mov
cld
jp
dec
inc
jl
mov
ret
push
roll
jmp
nop
jae
inc
out
xorb
shr
jg
add
pushf
fnstsw
add
push
mov
or
mov
push
pop
or
add
cmp
cli
les
int3
adc
mov
movsl
push
xchg
rcr
ljmp
out
adc
adc
es
xchg
xchg
adc
pop
test
test
cmp
pushf
or
xchg
sub
lock
sub
cmp
cmp
testl
and
inc
and
jle
sete
sbb
push
mov
mov
push
push
push
call
shld
mov
mov
or
mov
shl
or
xor
xor
xor
xor
jmp
lods
mov
xor
pop
sbb
js
fsubrl
rcl
adc
movlps
cltd
cmp
leave
in
cmp
and
or
jb
xchg
push
add
scas
ss
sbb
dec
int3
jg
sti
inc
jmp
push
or
xor
pushf
imul
xchg
adc
mov
pop
lcall
jge
in
orb
jle
negb
add
or
dec
pop
sbb
mov
pop
mov
pop
and
mov
js
mov
or
ret
mov
push
ret
daa
fs
jge
pushf
inc
add
movsb
ja
inc
mov
hlt
subb
fldenv
aas
pop
std
cld
cpuid
insb
add
dec
add
mov
daa
aas
hlt
lret
pusha
xchg
lahf
inc
repz
sbb
call
mov
push
jae
or
mov
mov
lea
or
push
test
sbb
rol
scas
roll
fstl
jns
add
data16
or
outsl
jnp
jecxz
outsl
dec
push
xor
xor
das
xchg
mov
xor
les
xchg
arpl
popf
adc
lahf
adc
adc
and
icebp
in
mov
cli
fcompl
sub
pushf
lock
cmp
pop
bound
cltd
lcall
jecxz
leave
inc
mov
aam
std
dec
push
scas
pop
sub
mov
xor
popf
dec
mov
push
xchg
popf
dec
fdivs
aaa
sbb
fsubs
cmp
add
dec
jae
jbe
test
sbb
cmp
adc
xchg
test
xchg
or
inc
pop
outsl
pop
jae
test
xchg
inc
push
xchg
adc
repnz
xchg
inc
dec
arpl
cmp
push
mov
push
mov
jmp
mov
add
mov
mov
mov
mov
mov
mov
movzwl
cltd
xor
xor
shld
mov
mov
mov
mov
shl
mov
cmp
jne
mov
cmp
jne
movl
mov
movl
mov
movl
mov
movl
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
add
mov
jmp
inc
mov
aaa
cwtl
arpl
push
leave
mov
movlps
clc
adc
mov
pop
aad
lods
sbb
ss
shll
leave
lock
sbb
xor
pop
add
out
js
fidivrl
fdivp
mov
add
pop
pushf
test
decl
in
push
mov
arpl
call
sub
cmp
mov
out
or
inc
fdivs
loopne
sub
mov
xor
jbe
push
xchg
and
aaa
pusha
outsb
xor
bound
pop
mov
or
xor
in
and
test
cmpsb
cmp
cmp
add
jl
shll
jno
add
loope
inc
in
push
mov
scas
ds
jb
xchg
adc
mov
out
jecxz
aad
mov
sbb
adcl
xchg
jl
pop
test
cmc
xchg
cwtl
jns
clc
js
and
mov
roll
push
cld
jecxz
lret
test
lret
outsb
aaa
lcall
shll
cmp
xor
lock
vandps
call
into
imul
cmpl
int3
push
inc
popa
dec
ret
sahf
dec
jmp
lret
inc
pop
loope
in
fwait
outsb
dec
mov
stc
ds
mov
out
ret
movsb
and
jecxz
aam
les
in
inc
aam
inc
mov
push
movsb
ja
repnz
pop
push
lcall
aas
dec
fwait
and
add
leave
cwtl
pusha
ljmp
lods
sbb
cltd
cmp
imul
push
pusha
sub
mov
sarl
rcll
in
sbb
test
dec
test
jbe
lea
shlb
pop
cmp
cmpsl
push
into
lods
push
inc
mov
mov
dec
je
icebp
movsl
divb
scas
push
mov
jl
clc
lods
out
inc
push
arpl
daa
sbb
movsb
lcall
mov
test
inc
xchg
or
cmp
dec
fdivrs
adc
scas
pop
sbb
dec
or
lods
enter
add
or
mov
or
mov
mov
xor
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
add
mov
mov
mov
shrd
shr
mov
mov
xor
jmp
add
lret
lret
add
cld
sub
enter
movlps
mov
adc
or
jb
dec
dec
push
dec
pop
popf
insb
arpl
into
xor
int3
sub
cmp
add
cmp
insl
inc
jl
jo
shl
jo
test
fbld
fistpl
xchg
mov
cmp
add
pop
icebp
xchg
jmp
pop
fwait
scas
inc
xor
decb
jns
das
jne
cltd
insl
or
mov
xchg
adc
jg
shl
ret
pop
mov
sub
adc
int
test
imull
repnz
add
es
outsl
aaa
fiaddl
popa
cmpb
xchg
mov
mov
pop
test
xchg
and
mov
xchg
aam
xor
imul
adc
das
cmp
jb
jecxz
addr16
cmp
andb
ja
movb
outsl
or
movl
maskmovq
negl
in
jo
imul
ja
xchg
addr16
test
sub
pop
adc
add
stos
xlat
pop
cmp
add
bound
insb
std
mov
jbe
inc
sti
jge
cmp
mov
movsb
mov
test
xchg
mov
push
cmp
jg
test
mov
mov
test
xchg
push
leave
xchg
insl
repz
int3
les
insl
out
add
outsb
mov
xor
rorl
jnp
pop
mulb
outsl
mov
xchg
mov
inc
xor
adc
dec
mov
test
aad
add
mov
clc
in
movntps
jns
dec
stos
and
mov
xor
push
xchg
mov
adc
loope
mov
int3
mov
inc
aad
movsl
mov
stos
lock
inc
sbb
fwait
in
in
xor
xor
loope
xor
or
mov
mov
or
mov
mov
shrd
shr
mov
mov
jmp
inc
jl
xchg
pop
xor
js
jmp
les
adc
movlps
jb
das
out
loopne
mov
push
cmp
dec
mov
clc
add
sbb
jnp
fcomip
dec
fidivl
jnp
cmpsb
dec
mov
mov
ret
pop
xchg
add
test
xchg
imul
pop
jl
push
jl
cmp
adc
pop
cwtl
push
adc
pop
lcall
adc
cmp
lret
pusha
cmp
test
in
add
xchg
cmpsb
push
dec
or
xchg
pop
mov
push
bound
out
mov
flds
into
lahf
aaa
mov
jnp
xchg
aam
jnp
mov
cmp
cmpsl
daa
and
outsl
xchg
jo
mov
ret
cltd
add
jae
mov
push
out
insl
cmp
int
insb
jbe
fidivl
lods
mov
xchg
dec
mov
outsb
mov
mov
mov
sbb
into
cli
dec
pop
sbb
mov
lock
push
xor
fcmove
pop
push
clc
fildll
dec
test
in
push
into
mov
jo
add
popf
fldt
ss
and
sbb
testl
das
mov
pop
rclb
fsubp
jb
push
rorl
leave
mov
dec
popf
arpl
aaa
sbb
xor
mov
sub
xchg
roll
sbbl
jge
cmp
das
dec
mov
jns
mov
xor
push
test
leave
mov
repnz
aad
pop
cmp
sbb
lret
sub
sub
fdivrp
fimull
sarb
lcall
jecxz
into
insl
mov
fucom
ret
adc
pop
sbb
leave
ljmp
popf
xchg
inc
sti
mov
vcvtps2pd
test
xchg
dec
jno
movsl
xor
xor
or
add
shl
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
add
mov
mov
shrd
shr
mov
mov
xor
shl
mov
xor
or
mov
shrd
add
xor
shr
mov
mov
xor
or
mov
or
shl
mov
mov
xor
mov
xor
shrd
shr
mov
mov
mov
mov
xor
or
mov
mov
mov
xor
xor
mov
mov
mov
shrd
shl
or
mov
mov
mov
shll
mov
mov
mov
xor
or
shr
or
cmp
jne
cmp
jne
jmp
jmp
jb
jecxz
gs
sbb
push
xchg
or
rclb
movlps
add
outsl
sbb
insb
pop
cld
sti
ss
mov
xchg
push
and
xor
mov
cmp
lret
cmpsb
pop
lds
dec
inc
inc
out
jbe
sub
mov
xchg
jns
cmpsb
stos
xor
fmuls
pop
adc
lcall
jge
inc
mov
fdivs
das
xchg
jne
movsb
pop
ds
fdiv
loopne
pushf
jae
or
lret
xor
lods
mov
jne
jle
imul
lods
xor
sub
adc
addr16
sahf
lods
pop
ret
cltd
adc
ljmp
cmp
fistpl
jmp
xchg
jae
mov
shl
lock
cmpsl
adc
in
dec
adc
stos
jmp
call
inc
and
dec
pushw
mov
imul
cmp
xchg
mov
or
jns
sbb
push
andb
xchg
dec
inc
push
aad
mov
jge
fs
shrb
mov
test
cmp
stc
push
jmp
int3
pop
push
test
ret
ljmp
ljmp
call
pop
jbe
test
cmp
or
sbb
add
aad
mov
les
mov
leave
decl
dec
dec
mov
inc
or
nop
das
addb
jnp
test
cmp
adc
pop
mov
aas
pop
jg
sub
add
dec
dec
inc
xor
jae,pn
cmpsb
pop
jo
cli
insl
test
adc
inc
push
test
mov
and
adc
icebp
loop
jg
pop
sub
movsb
inc
arpl
push
push
jle
fcmove
repnz
popa
pop
movsl
xchg
fucomip
xchg
xchg
shr
shl
jo
divl
jb
out
fcoms
xor
add
nop
cwtl
mov
adc
ds
jne
xchg
mov
inc
repnz
push
mov
mov
mov
xor
xor
mov
mov
shrd
shr
mov
mov
mov
mov
xor
or
jmp
imul
xor
and
mov
cmpsb
test
adc
movlps
and
fdivr
mov
mov
mov
jns
xchg
fsts
mov
jp
clc
push
push
dec
stos
mov
clc
lock
add
leave
xor
shll
xor
sub
add
add
ja
icebp
sbb
aad
pop
fildl
sbb
jl
xor
sub
mov
or
fsubs
mov
dec
das
das
ja
adc
mov
jnp
lea
cli
hlt
es
mov
jecxz
inc
mov
cmp
jg
adc
add
or
jno
js
xchg
in
sub
mov
in
push
lahf
loopne
imul
mov
mov
and
popa
daa
dec
jo
bound
shlb
sub
mov
mov
addr16
jnp
cmc
rorb
pop
inc
xchg
fistl
bound
mov
jno
rcl
repnz
mov
mov
adc
dec
cli
mov
insb
fs
inc
sarb
mov
cs
xor
ret
leave
ret
xchg
or
push
cmp
xchg
jg
adc
push
jns
pushf
push
setb
mov
xchg
inc
gs
test
sbb
fs
test
adc
mov
jb
pop
hlt
mov
insl
push
jmp
xor
insl
scas
jb
test
mov
out
lret
jmp
or
pop
push
or
xor
int
out
mov
movsl
scas
add
add
repz
dec
stos
outsl
mov
jne
imul
int3
imul
or
pop
mov
decb
or
lds
add
mov
jge
clc
outsl
lods
in
sub
jmp
cltd
inc
fidivrs
shlb
push
rcr
jo
dec
stos
insl
outsl
jbe
jl
add
popf
iret
rclb
mov
insb
or
xchg
ret
mov
or
loop
mov
mov
or
mov
push
pushl
push
push
call
mov
mov
andl
shrd
shr
shr
xor
push
xor
mov
mov
mov
push
push
push
call
shld
or
shl
or
xor
xor
mov
mov
mov
mov
mov
xor
xor
shrd
shr
mov
jmp
mov
xlat
sbb
mov
mov
movlps
clc
add
inc
sbb
cmp
pop
mull
repz
jg
mov
mov
in
and
sub
jae
or
das
lods
hlt
xchg
pushf
roll
test
adc
xchg
cltd
ja
ficompl
push
lea
cmpsl
dec
xchg
js
stc
loopne
xchg
and
dec
adc
push
cmp
popa
inc
xor
dec
mov
xchg
imul
mov
cli
test
mov
sbb
insb
pop
stos
in
test
shlb
mov
cld
mov
sbb
outsl
mov
jne
xlat
jno
cmp
xor
shlb
popf
inc
mov
in
push
and
gs
xchg
jnp
mov
mov
cmpsb
stc
scas
fwait
mov
mov
adc
mov
mov
outsb
insl
aad
int3
xchg
and
insl
call
jnp
dec
aaa
das
or
bound
or
mov
addb
pop
adc
xchg
sub
push
icebp
pop
or
cli
test
pop
std
xchg
mov
xor
call
xor
xchg
test
add
xor
push
scas
inc
dec
outsl
cmp
cmp
jg
mov
push
jno
lea
test
fstpt
fisttpl
add
popa
cmpsl
mov
lds
mov
mov
mov
rclb
and
dec
icebp
pop
xchg
lret
jmp
and
ljmp
xor
push
add
cmp
pop
xchg
cltd
mov
fsubrs
stc
loop
cmp
fdivp
stos
flds
sbb
pop
pop
xor
in
mov
pop
xor
sbb
xor
jo
mov
push
lahf
das
inc
push
leave
xchg
jl
inc
adc
jb
mov
sbb
iret
mov
mov
mov
shl
or
xor
or
mov
mov
mov
mov
xor
xor
mov
mov
mov
shrd
xor
shr
shl
or
or
cmp
jne
cmp
je
pushl
pushl
pushl
push
push
call
pop
leave
ret
cmp
jae
cmp
movl
jae
subl
shrd
movl
shr
ret
mov
xorl
xor
and
movl
shr
ret
xor
xor
ret
push
mov
sub
and
movl
cmpl
movl
mov
mov
movl
jmp
movl
jae
push
pushl
call
adc
and
mov
sbb
sub
andl
mov
cmpl
movzbl
notl
movl
mov
jmp
notl
jle
push
pushl
push
pushl
call
xor
add
andl
movl
or
add
mov
movl
mov
mov
or
movl
movl
sbb
movl
mov
mov
or
push
and
movl
cmpl
mov
movl
mov
jmp
mov
notl
jge
pushl
pushl
call
sub
and
sub
movzbl
or
add
neg
subl
movl
movzbl
sbb
push
adc
movl
add
mov
mov
push
orl
push
orl
push
sbbl
jmp
shrb
push
sbb
mov
mov
adc
lahf
movlps
popf
mov
loope
sub
lret
and
and
xchg
test
xor
stos
push
loop
pop
mov
and
addr16
hlt
imul
movsl
loope
outsb
js
fldl
sub
mov
mov
add
loop
push
std
clc
fdivs
and
jns
shl
pop
mov
add
inc
aas
and
es
add
pop
icebp
ret
ljmp
inc
enter
lret
pusha
mov
pop
fwait
xlat
xchg
add
imul
and
jns
adc
testb
sub
inc
xchg
mov
lahf
push
lods
mov
cs
mov
pusha
pop
dec
and
push
lahf
jnp
cli
sbb
aas
cmp
mov
or
jmp
sub
pop
cli
leave
nop
and
notb
imul
cs
mov
adc
xchg
mov
scas
loopne
mov
fimuls
push
fsubrl
test
hlt
test
mov
popf
dec
push
ss
arpl
addl
sub
addr16
ds
leave
in
je
loopne
adc
stos
int3
loop
xchg
sbb
rclb
cmp
and
inc
xchg
les
jno
xchg
dec
pop
out
fsub
das
or
daa
and
ficoml
sub
test
ffree
push
push
pop
lgdtl
inc
loopne
pop
pushf
aas
les
xlat
lret
or
mov
nop
push
add
jo
cli
fisttpll
insl
cmp
out
xor
inc
sbb
aaa
sub
mov
outsb
out
push
xchg
repz
int3
shlb
fcmovnbe
pusha
cmp
ret
xor
jb
pushf
dec
movsb
or
mov
pop
fwait
mov
push
pusha
push
fwait
and
xor
cld
mov
pop
test
shll
gs
inc
and
sbb
je
adc
dec
sub
test
lea
jb
xchg
xchg
mov
sbb
jbe
mov
shr
pop
pop
jecxz
in
add
cmpsb
lret
mov
xor
push
pop
mov
mov
addl
cmpsb
lods
je
pushl
outsl
negl
bound
aam
cli
push
pop
cbtw
test
add
cmp
cmp
inc
mov
lods
or
push
cmp
roll
xchg
iret
mov
or
out
add
cmpl
mov
movl
jmp
mov
mov
jae
push
call
mov
mov
sub
xor
andl
sbb
adc
adc
or
mov
xor
mov
mov
orl
push
addl
or
sbbl
push
addl
or
sbbl
xor
subl
xor
decl
push
push
call
not
mov
and
mov
push
push
push
push
call
cmpl
mov
mov
jmp
movzbl
movl
ja
push
push
pushl
call
add
mov
sub
addl
sub
sub
sbb
mov
mov
adc
mov
and
movl
cmpl
notl
mov
jmp
movl
jbe
pushl
pushl
push
call
mov
sbb
andl
subl
addl
and
xor
xor
mov
sub
add
andl
movl
xor
movl
movl
movl
cmpl
movl
mov
jmp
movl
not
jne
push
call
subl
or
sub
sub
add
movl
mov
mov
mov
mov
add
adc
or
mov
or
mov
or
mov
or
mov
or
or
cmp
jne
cmp
je
movl
movl
jmp
mov
and
loopne
mov
mov
adc
push
jo
inc
sbbl
roll
psubd
stos
pop
imul
jae
sbb
inc
jle
dec
stos
lock
sti
xorb
imul
mov
jno
push
int3
test
push
jg
cmc
mov
jnp
or
xchg
sub
pusha
dec
inc
xchg
or
gs
dec
add
mov
insb
fwait
inc
sub
or
adc
push
dec
js
insl
cmova
mov
adc
movsb
mov
add
cmpsl
ljmp
fldl
scas
add
pop
lods
jle
xor
fdiv
adc
cs
aad
je
and
adc
add
lock
mov
adc
in
cltd
jl
stos
outsb
adc
inc
inc
pop
mov
aad
sub
pop
mov
push
in
jge
out
push
icebp
mov
enter
fnstsw
pop
jns
xchg
or
imulb
pushw
test
lret
addr16
in
mov
xchg
dec
xchg
adc
mov
gs
pop
fdivrl
jb
and
lds
jecxz
mov
mov
xchg
inc
jg
push
into
out
mov
xchg
jmp
outsb
lock
lahf
pop
jle
lods
jns
or
mov
jns
add
mov
int3
fisubs
cli
pop
ss
push
inc
ficoms
dec
frstor
cmp
std
out
lcall
call
cmp
shr
imul
cmp
inc
sbb
jae
or
shl
rol
pop
mov
daa
movsl
jne
popa
cmp
or
and
xorl
clc
jg
adc
test
shll
lcall
inc
aam
int
leave
loope
mov
shl
andb
mov
sbb
mov
sub
xor
lahf
in
pop
jecxz
lds
arpl
lds
scas
movsl
xor
mov
lock
inc
test
arpl
fstpt
push
mov
pop
push
mov
inc
lods
lods
lret
jp
push
push
and
int
add
adc
popa
dec
xor
mov
dec
sbb
lahf
sub
or
dec
lock
jne
adc
in
lds
dec
pop
sub
scas
les
cmp
sub
bound
lahf
push
lods
out
pop
xchg
and
xchg
in
mov
ds
push
mov
mov
jno
cld
faddp
jno
enter
mov
js
cs
pop
push
or
mov
mov
add
popa
sub
mov
mov
xor
xor
and
and
mov
mov
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
add
mov
adc
mov
add
adc
jmp
jbe
mov
imul
cmpl
scas
adc
lahf
movlps
inc
cld
inc
xor
mov
mov
inc
and
sbb
fstps
jb
mov
jge
inc
inc
popf
mov
add
jl
mov
dec
mov
cmp
shl
xchg
daa
shrb
rolb
popa
fcmovne
pop
icebp
call
jae
fwait
adc
aas
inc
lret
idivb
dec
popl
add
ss
mov
in
daa
shr
out
mov
add
push
bound
nop
nop
test
int
pushf
sbb
push
and
rcrb
or
push
lret
cs
out
test
fldl
cmpsl
xchg
mov
sub
pop
xchg
dec
daa
xchg
js
daa
aad
sub
xchg
out
test
pushl
sbb
cmpb
shll
ja
mov
aaa
cmp
add
cmp
int
iret
and
lret
dec
inc
imul
imul
xchg
mov
rclb
pop
subb
fs
cmp
sbb
sbb
gs
out
mov
leave
icebp
sub
adc
sbb
sti
mov
inc
jno
dec
sub
les
test
push
out
pop
pop
shlb
outsl
pop
outsl
mov
dec
ds
mov
mov
shlb
scas
aaa
xor
xor
dec
arpl
sub
or
jnp
inc
or
fadd
inc
or
xlat
fcmovb
sub
mov
cmp
leave
insl
imul
lods
mov
call
inc
xor
sub
mov
das
je
aam
repnz
clc
in
dec
adc
sbb
cli
mov
xor
shr
cltd
pop
add
scas
inc
inc
or
imul
push
fs
sbb
xor
adc
xor
jg
fwait
aas
imul
mov
xor
mov
adc
jmp
sub
cmc
mov
aam
je
ljmp
adc
sbb
mov
jle
pusha
in
repz
pop
inc
addr16
mov
sbb
lea
outsb
lahf
and
cs
fmul
movhlps
fiaddl
aas
or
test
mov
push
and
xchg
repnz
xlat
xchg
imul
sahf
cmpsl
fldenv
mov
mov
mov
or
in
aas
cmc
or
or
pop
icebp
or
jns
sub
dec
push
mov
into
adc
add
add
ret
lock
jmp
addl
scas
sbb
pop
add
enter
pop
movsb
adc
lahf
movlps
pop
call
mov
sahf
cmpsb
xchg
out
sub
int3
push
pop
jae
and
in
add
scas
popf
dec
arpl
pop
adc
sbbl
fdivrl
scas
and
sbb
and
addr16
xor
ljmp
sub
outsl
out
std
pusha
inc
jae
dec
in
pop
pop
sbb
movsb
es
repnz
cmc
sahf
inc
push
lea
int3
xlat
loop
cs
inc
fiaddl
push
sbb
js
data16
loop
sub
push
sub
mov
addr16
jnp
shrb
enter
sbb
push
cmpsb
inc
test
push
lea
inc
jmp
rcll
outsl
fld
je
dec
pop
or
stos
xchg
fidivrs
cmp
and
movsb
rcrl
out
gs
xor
out
mov
pusha
push
loop
mov
mov
not
mov
pushf
jno
frstor
fisubrs
pop
fdivl
pushf
loop
inc
mov
pushfw
jo
das
pusha
mov
dec
push
push
dec
das
pop
xor
loop
cltd
insb
sahf
rorb
in
adc
mov
push
movsl
call
push
enter
mov
clc
aam
mov
aad
adc
fucomp
xor
fstp
dec
mov
gs
cmp
out
xchg
jne
add
pop
cs
push
in
mov
push
add
pop
das
mov
mov
inc
adc
int3
push
aam
add
cli
mov
push
mov
imul
mov
and
sti
mov
div
in
xor
sub
cmpb
sbb
enter
pop
dec
add
add
and
ljmp
dec
inc
pusha
inc
adc
cld
sub
test
mov
cmp
jns
adc
filds
mov
js
pop
in
subb
test
int3
mov
rcrb
sub
xor
scas
clc
xchg
add
lret
cmc
int3
fs
pop
int3
and
cmp
xlat
jg
ficoml
scas
mov
pop
andl
icebp
mov
mov
in
data16
sbb
cmp
pusha
inc
pop
sysret
outsb
sti
insb
sub
mov
xor
xchg
orb
cli
subl
sub
shl
pop
cli
ss
rol
inc
push
cmp
fwait
pop
sub
inc
mov
and
daa
sahf
sbb
pop
ja
pop
mov
add
imul
mov
test
dec
xor
dec
push
pusha
insl
in
ljmp
cmp
jne
cmp
je
movl
movl
jmp
pop
repnz
push
mov
call
insb
in
adc
lahf
movlps
cli
out
xor
cmc
inc
cmp
push
xor
jnp
inc
test
lods
clc
bound
rolb
mov
push
test
adc
in
fstpl
and
jb
and
mov
sahf
btr
jnp
mov
ljmp
mov
ljmp
imul
sub
into
fcmovnu
fidivl
sub
fs
mull
and
ret
xchg
or
leave
dec
and
xor
outsb
je
in
es
out
cmp
in
push
cwtl
push
dec
sbb
pop
aas
dec
sbb
popf
imul
mov
pop
cmp
pop
aaa
cwtl
xlat
pop
inc
cld
sbb
cltd
out
fsubl
in
cmc
fstps
in
mov
in
push
dec
into
push
adc
in
mov
adc
dec
rorl
and
mov
orb
test
push
cmp
cmp
lods
jle
mov
jmp
test
jmp
test
xor
mov
pop
mov
fldl
out
into
and
fdivrl
insb
add
mov
cmpl
sub
xchg
fidivl
aam
in
int3
stc
mov
test
sub
inc
jae
push
call
repz
cwtl
push
rcrb
sub
fsubl
xchg
fs
push
sub
or
jmp
add
popf
adc
push
pop
subb
sbb
fldenv
mov
mov
add
sub
popf
jg
sub
or
pop
cwtl
sub
mov
ja
mov
movsb
sub
in
mov
mov
pop
push
scas
loop
mov
mov
cli
sbb
dec
pop
sub
std
lcall
pop
fs
mov
inc
pop
leave
popa
adc
xor
loopne
fsubrp
xchg
arpl
jecxz
mov
xlat
les
rorl
pop
roll
cmp
mov
jo
loope
out
insb
push
js
arpl
fisubrs
jg
mov
sub
inc
ficoms
adc
cmp
inc
stos
mov
in
bnd
daa
arpl
add
push
dec
fwait
dec
inc
jle
pushf
dec
jge
rcrb
gs
mov
gs
xchg
and
je
inc
cltd
cltd
xchg
mov
add
push
dec
mov
pop
fstps
xor
sub
push
inc
push
mov
std
sbb
sub
sti
dec
movl
jmp
ja
pop
add
rcll
push
bound
movsb
push
push
sahf
adc
lahf
movlps
push
sbb
pop
pop
or
leave
xchg
cmp
sub
ret
and
test
push
jno
push
outsl
pop
mov
cmc
jbe
xlat
sbb
mov
or
fsubl
clc
dec
add
inc
mov
sub
repnz
mov
inc
outsl
ret
popf
or
cltd
and
aaa
in
subb
mov
push
dec
mov
jae
inc
in
lret
repnz
jp
dec
cmp
lods
mov
jno
cmpsb
xchg
cwtl
int3
sbb
mov
sti
add
cmp
pop
jne
push
mov
imul
mov
pop
jmp
sub
dec
out
mov
std
pop
cmp
and
shlb
loop
out
mov
jge
ret
stos
test
mov
stos
fwait
pop
xor
add
imul
push
inc
adc
outsl
movsl
adc
dec
push
adc
cld
dec
inc
and
mov
pop
and
jge
and
pop
mov
mov
cmp
dec
sbb
repnz
aam
jge
or
dec
jl
daa
mov
mov
out
pop
in
xlat
adc
dec
xchg
cmp
cs
adc
jbe
add
daa
ficomps
aas
cltd
loopne
add
add
paddusb
shll
leave
xchg
xor
dec
cwtl
cmp
stos
in
movsl
cmp
sbb
or
xlat
pop
ror
cmpsl
sbb
pop
and
lcall
call
xor
mov
push
jnp
cltd
dec
ljmp
arpl
cli
sbb
sahf
mov
aaa
rol
xchg
dec
test
push
lahf
std
push
aaa
xor
out
pop
fildll
insl
repnz
mov
rorl
in
adc
mov
enter
pop
sub
ret
insb
push
mov
mov
frstor
xchg
add
pop
cli
dec
lret
movsl
iret
cmp
pop
imul
xchg
test
cmp
rorl
mov
inc
push
or
and
jp
lods
jae
sub
out
loopne
movsb
sahf
adc
mov
sbb
cmp
dec
out
inc
shll
data16
add
aaa
scas
pop
lcall
call
lods
ja
inc
xor
out
inc
jo
xchg
lret
lods
sti
jne
test
mov
out
sub
inc
xchg
lods
imul
aad
xor
pop
popf
fdivl
leave
push
daa
cli
xchg
dec
xor
ret
push
outsb
out
mov
repnz
lds
push
movl
mov
mov
push
push
push
call
mov
mov
push
push
and
and
push
push
call
xor
xor
mov
mov
mov
cmp
jne
mov
mov
mov
mov
shrd
shl
mov
mov
shr
xor
mov
xor
or
mov
mov
mov
shrd
shr
mov
mov
xor
xor
or
mov
movb
movb
movzbl
shl
mov
jmp
sbb
cmp
sbb
notl
pop
lods
cld
xchg
adc
lahf
movlps
push
xor
cmpsl
scas
shrl
fsubrs
aad
cmp
adc
mov
jnp
push
gs
sub
xchg
adc
fisttps
jmp
dec
jl
pop
js
inc
jae
cmp
mov
pop
add
sbb
mov
repz
in
dec
adc
enter
push
pop
fadds
loop
mov
scas
fisttpl
push
sub
clc
testb
fiaddl
iret
lea
adc
sbb
and
aam
adc
aas
adc
out
xchg
xchg
xor
lcall
daa
jns
push
cmp
clc
xor
add
fnstsw
cmc
repnz
test
adc
mov
push
xchg
das
sbb
xchg
in
and
add
lahf
bswap
dec
fstps
push
mov
mov
int
xchg
push
adc
ret
pushf
popa
mov
imul
sbb
adc
out
and
jp
std
aas
ljmp
jnp
fisubrs
pop
js
mov
repz
mov
ja
loope
lods
inc
shll
fwait
cmp
sbb
adc
sbbl
pop
pop
stos
inc
fwait
icebp
adc
mov
in
lds
jae
sahf
inc
adcb
mov
stos
pushf
mov
dec
pop
push
mov
mov
inc
ds
je
cmp
ljmp
out
adc
pop
into
std
cmp
jge
adc
subb
les
fstpl
xor
cmc
and
sub
jne
sbb
les
ret
dec
dec
clc
testl
cld
and
ficompl
mov
clc
jmp
inc
lea
cli
pushf
adc
xor
add
data16
mov
or
ss
push
bound
fwait
in
lods
es
aaa
int3
retw
and
pushf
sub
sbb
mov
inc
cmp
jge
fsubs
out
mov
sbb
rol
push
mov
adc
or
das
push
sub
mov
push
sub
jnp
cli
test
ds
pop
jno
and
imul
insl
das
xchg
movsb
pop
mov
xchg
ret
cld
lods
mov
je
cld
icebp
add
iret
movsb
and
stc
cmp
sub
popf
daa
adc
push
add
mov
aas
adc
push
out
stc
or
sub
cmp
cmpsl
xor
icebp
fcmovu
pop
das
jl
push
jb
pop
popa
lcall
adc
fiadds
stos
and
pop
sbb
loopne
test
push
add
mov
inc
add
push
add
mov
movb
pop
mov
movb
mov
movzbl
cltd
idiv
mov
add
mov
or
mov
add
cmp
jae
mov
mov
shrd
xor
mov
shr
mov
xor
jmp
xchg
jnp
stc
pop
jno
loop
cmp
pushf
pop
lods
mov
adc
idivl
xor
jae
dec
fwait
test
jmp
aad
push
push
pop
addr16
int
es
gs
imul
adc
inc
lret
insl
imul
sahf
idiv
ret
inc
mov
fcomip
mov
rcll
lods
test
and
adc
jmp
in
ja
cmp
sub
lods
jmp
pop
fxam
and
vmwrite
cs
mov
inc
xchg
add
aas
xchg
pusha
aam
pop
div
mov
es
enter
sti
mov
cmpsl
scas
std
out
pop
cld
ficoml
mov
je
test
jae
lahf
dec
push
fs
dec
dec
mov
cwtl
pop
call
push
pop
or
sub
ja
stc
pusha
sub
sahf
inc
test
inc
sbbl
xchg
ret
adc
adc
cmpsb
or
ss
adc
pop
cmp
iret
shrl
inc
and
jo
enter
cmpsl
xchg
mov
pop
lods
jnp
cwtl
jp
call
je
cmp
ljmp
add
adc
add
mov
or
jecxz
push
inc
ljmp
dec
add
xchg
or
divl
es
loope
xchg
jge
enter
int3
and
cwtl
ljmp
lea
sbb
rclb
inc
imul
shlb
or
mov
cmp
xor
daa
in
cmp
push
and
in
pusha
cltd
stc
sub
daa
and
hlt
sub
cmpsb
or
jl
std
gs
push
xchg
arpl
dec
call
lods
addl
cld
sbb
jne
lahf
dec
shrl
sti
jl
sub
or
sahf
xchg
mov
add
sub
inc
xor
mov
decb
sti
inc
in
daa
ljmp
ss
add
xchg
push
xorb
fwait
mov
and
insb
rolb
dec
jg
mov
add
sti
add
lods
push
xchg
leave
gs
and
idivb
add
dec
lret
lods
xchg
cmpsb
repz
repz
mov
or
fs
mov
mov
jp
loopne
mov
iret
sub
out
jge
btcl
popa
mov
sbbb
dec
xor
push
mov
es
imul
add
mov
ret
imul
mov
sub
push
push
push
movl
movl
movl
movl
movl
movl
movl
movl
xor
inc
mov
movl
mov
mov
sub
add
add
imul
add
xor
movl
movl
movl
movl
mov
or
add
mov
and
mov
sub
mov
mov
mov
add
or
sub
xor
sub
jmp
sbb
ja
pop
sbb
lahf
push
insb
adc
adc
sub
mov
xchg
sub
and
ss
scas
lods
imul
add
fiadds
or
push
jno
ret
lock
dec
xchg
add
mov
loop
aam
pop
mov
or
cwtl
incb
mov
push
jns
lds
mov
mov
lret
cmp
xchg
mov
in
mov
cmp
clc
mov
es
pop
enter
and
jp
and
xchg
xor
push
jmp
pop
adc
mov
push
cmp
push
lcall
data16
sbb
xchg
fadds
cltd
outsb
add
enter
mov
pop
and
dec
add
decl
sbb
inc
test
pop
xchg
push
repnz
add
aad
pop
jne
xchg
int
sbb
dec
add
enter
into
xchg
cmpsl
jne
inc
sbb
inc
imul
icebp
jecxz
es
jmp
dec
mov
and
push
pop
mov
out
shrb
int3
jnp
test
or
dec
cmp
xchg
jle
jl,pn
ds
inc
pusha
lcall
out
movsb
push
mov
out
aad
pop
xor
jae
int3
jmp
jbe
div
jno
xchg
mov
inc
push
popf
xchg
adcb
test
or
xor
loope
sub
out
cmp
out
pop
mov
int3
int3
mov
jb
push
inc
pop
dec
mov
clc
adc
cmp
lds
je
inc
mov
pop
negb
jne
aam
lret
push
jns
xchg
push
clc
add
mov
rclb
sub
xchg
and
movsb
and
fmull
xor
call
outsl
jmp
mov
popf
inc
mov
das
mov
xor
pop
fstps
sub
mov
pop
add
mov
hlt
mov
and
pop
ffreep
inc
out
filds
mov
aas
add
fsubl
mov
add
sbb
dec
or
gs
inc
fs
dec
rorb
add
push
mov
mov
and
xor
xor
div
lea
mov
add
mov
and
mov
imul
mov
sub
cmp
jbe
push
pop
mov
mov
movl
movl
movl
mov
movl
movl
xor
movl
mov
mov
sub
div
mov
xor
mov
div
mov
xor
div
xor
mov
mov
imul
mov
add
div
jmp
sbb
sbb
and
xor
pop
test
adc
adc
xchg
jo
fbld
test
sub
pushf
jnp
mov
pop
lcall
loop
inc
xor
lds
outsb
xchg
test
or
inc
fsubr
sub
cmp
inc
addr16
and
add
and
stos
cld
pusha
pop
test
mov
adc
les
movsb
pop
xchg
jp
mov
mov
push
push
or
cmp
xchg
addb
inc
push
lret
cmpsb
or
loope
rorl
or
aad
repz
lods
jno
out
inc
dec
cwtl
imul
mov
xchg
out
push
insl
mov
push
out
sub
inc
push
das
mov
xor
loopne
insb
enter
jo
cmp
pop
add
xorl
jno
xchg
jnp
lds
xor
xorb
test
cli
jb
aad
pushf
lret
lock
pusha
xor
cmp
push
das
jmp
ss
stos
iret
xchg
lds
inc
add
jmp
pop
imul
aas
sti
fstp
out
scas
cmp
dec
push
or
cwtl
push
cld
cld
mov
test
sub
or
mov
gs
sub
cli
nop
sub
xor
movsl
mov
in
adc
xor
mov
sbb
test
add
out
lret
cmp
and
out
and
loopne
int
cmp
je
das
and
cmpsl
push
fisttpl
jp
mov
lods
dec
mov
int
pop
aam
add
addr16
xchg
sbb
ret
sti
mov
shr
into
aaa
xlat
les
dec
adc
dec
mov
mov
cmp
call
pop
jmp
ljmp
sub
mov
and
sub
mov
test
std
ficomps
repz
hlt
xchg
addr16
dec
or
sbb
cmp
gs
das
in
push
in
xor
mov
call
ljmp
out
xchg
fistps
cmpsl
mov
inc
or
jmp
fdivl
fnstcw
sbb
push
xchg
jle
adcb
pop
movlps
sub
aad
leave
hlt
cmp
movsb
inc
jecxz
adc
outsb
rcll
dec
xchg
fs
lock
sbb
and
mov
aaa
mov
xchg
icebp
dec
pop
push
xchg
and
add
adc
xor
jecxz
or
in
ljmp
jns
xchg
mov
push
ja
int
sub
jne
fwait
lcall
es
sahf
mov
cltd
fisttpl
adc
adc
push
ror
mov
frstor
or
ss
jp
fnstcw
dec
xchg
cmc
mov
test
cmp
cmpsl
icebp
insb
sbb
test
jno
or
punpckhdq
out
jb
inc
jbe
stos
push
jg
out
jg
sbb
sub
cmp
inc
pop
xor
ljmp
rorl
out
push
mov
cmp
mov
outsl
dec
aaa
ja
and
xchg
dec
push
cmp
fisubs
mov
imul
vpunpcklqdq
cmc
test
or
mov
push
cmp
js
jle
dec
je
push
sarb
mov
pop
ss
jl
xor
mov
imul
cwtl
xchg
or
lret
jmp
popa
stos
jo
in
dec
les
lea
cmpsl
sbb
fildl
or
and
sub
push
cmc
sbb
lods
add
adc
inc
les
mov
stos
movsbl
pop
sbb
test
daa
mov
roll
add
jp
testb
fstpt
sbb
lahf
int3
pushl
loop
xchg
into
cmpsb
in
jbe
dec
cmpsl
shrl
call
mov
add
adc
mov
lds
out
movsb
in
sarb
test
scas
faddp
rorl
fwait
jmp
mov
sbb
je
and
cmc
cmp
jmp
arpl
mov
mov
xor
mov
bound
push
cmp
inc
xor
js
add
pop
lds
and
push
fildll
dec
pop
jecxz
in
lcall
lret
mov
aaa
lea
lcall
inc
pusha
in
repz
sub
sub
xor
div
mov
add
cmp
jae
movl
movl
movl
movl
xor
movl
movl
mov
push
pop
div
mov
mov
mov
sub
mov
mov
imul
mov
xor
sub
add
and
mov
sub
mov
sub
mov
sub
mov
mov
mov
mov
xor
add
xor
and
lea
mov
mov
add
div
mov
mov
sub
xor
div
add
cmp
jb
xor
inc
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
add
and
xor
mov
sub
movl
movl
mov
movl
movl
mov
mov
imul
xor
or
xor
mov
sub
mov
mov
mov
or
sub
xor
div
mov
mov
sub
mov
mov
mov
mov
mov
imul
mov
imul
or
jmp
nop
xchg
cltd
lret
pop
dec
mov
push
mov
adc
pop
movlps
inc
loopnew
jl
xchg
pop
jle
lcall
nop
ficomps
mov
mov
xchg
cmp
lcall
rorb
jo
push
and
int3
xor
in
fmull
add
sub
and
outsb
jge
mov
push
lahf
xor
cmpsb
test
out
xor
push
or
das
bound
out
imul
add
cmc
xlat
mov
inc
rcrl
push
inc
mov
lods
aaa
fdiv
jo
push
jnp
pusha
mov
add
mov
mov
mov
mov
pop
xchg
sub
jo
adc
js
enter
jl
ds
jbe
add
push
scas
iret
push
push
pop
xchg
pop
mov
xor
mov
inc
adc
outsb
outsl
xchg
enter
sti
loope
mov
inc
mov
mov
sbb
nop
rep
bnd
sbb
sahf
or
outsl
cli
cmp
out
xchg
push
aaa
stos
mov
sbb
mov
jge
mov
pop
stc
jl
xchg
mov
jb
leave
push
mov
out
mov
cmp
adc
xlat
in
lret
ror
or
dec
pop
sub
xchg
pop
dec
push
shl
mov
dec
icebp
and
sub
stc
jo
push
and
sub
mov
cmp
xchg
jbe
movsl
push
int3
xor
aas
out
cli
or
jg
xchg
xor
or
loopne
adc
inc
pop
xor
push
in
test
das
or
xchg
push
pop
test
scas
out
call
sahf
lahf
mov
lahf
jg
mov
ficomps
jl
sub
out
adcb
fnstsw
hlt
decl
cmpb
iret
push
daa
sbb
pop
push
dec
pop
jecxz
mov
stc
hlt
pop
popf
or
bound
outsl
sbb
and
push
push
cwtl
push
notb
adc
pushf
shlb
je
xor
ds
mov
addl
scas
les
scas
jns
jne
fsubrp
cmpsb
xchg
push
cmc
add
ret
pop
add
lea
mov
and
add
xor
add
cmp
jne
pop
pop
pop
leave
ret
push
mov
sub
push
push
movl
movl
mov
mov
add
or
mov
lea
mov
movl
movl
mov
mov
and
xor
mov
imul
xor
lea
mov
movl
movl
mov
xor
push
pop
div
mov
xor
push
add
and
mov
sub
mov
movl
movl
movl
mov
mov
lea
mov
div
mov
lea
mov
movl
movl
movl
jmp
add
popf
pop
sbb
push
mov
adc
ficoms
adc
xlat
mov
scas
jl
icebp
push
mov
aam
add
dec
cld
fsubs
hlt
add
mov
xor
jo
jg,pt
push
lahf
jae
mov
mov
dec
mov
nop
mov
xor
cmpsl
loope
push
xchg
ds
cmc
in
lea
add
cmp
repnz
fs
test
mov
push
loope
fcompl
push
test
jl
mov
mov
nop
pop
out
xchg
out
imul
mov
adc
sbb
arpl
cmp
cmpb
pushf
adc
je
movsl
ja
test
bound
xor
mul
pop
inc
in
cmp
lock
lret
shrl
sahf
lea
inc
xlat
or
xlat
repz
xor
sub
push
daa
mov
popa
clc
lock
rcrb
add
imul
and
popa
sub
mov
mov
sbb
dec
inc
and
mov
decb
mov
shlb
sbb
negb
sub
aam
fldl
out
cmc
stos
addr16
shr
mul
test
cltd
sub
ja
jne
cs
xlat
push
inc
dec
in
mov
adc
mov
movsl
mov
or
lcall
add
mov
sahf
cld
outsl
loopne
dec
mov
xor
or
fidivl
call
aaa
mov
mov
xor
cwtl
addr16
imul
lret
insl
movsb
xor
push
lock
fcmovb
jns
and
xor
scas
mov
call
loop
pop
push
cmp
js
and
push
mov
push
pop
add
sub
sub
mov
sti
cli
inc
inc
es
rorb
ret
cmpsl
dec
jns
icebp
lods
mov
and
cmp
insl
dec
cmp
std
sbb
cmp
xchg
lods
pop
mov
cmpb
and
imul
loope
in
sub
out
enter
fadd
sbb
inc
mov
adc
mov
and
xorb
jmp
nop
or
addr16
lods
jp
and
or
je
cmp
mov
xor
lock
cmpsb
cltd
jne
push
cwtl
std
jbe
mov
xor
incl
add
int
jle
mov
ds
xchg
hlt
xchg
mov
push
sbb
and
daa
jb
inc
jne
or
repnz
popa
decb
cmp
sub
lods
jns
mov
test
pusha
jbe
fists
pop
dec
ljmp
or
mov
mov
inc
mov
std
mov
push
mov
adc
insb
inc
paddq
cmpl
imul
pop
arpl
into
dec
sub
jg
outsl
and
jno
inc
hlt
mov
xor
sub
mov
sub
xor
mov
movl
pop
mov
movl
movl
mov
mov
mov
xor
xor
div
mov
and
sub
mov
movl
movl
movl
movl
movl
movl
mov
add
mov
xor
mov
or
mov
or
mov
and
mov
sub
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
add
adc
or
mov
or
or
mov
mov
or
mov
sub
mov
sbb
mov
or
or
add
mov
adc
mov
movl
movl
movl
movl
movl
movl
movl
xor
inc
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
movl
mov
movl
movl
mov
or
add
mov
jmp
std
push
mov
ja
pop
jmp
mov
jo
adc
adc
adc
add
or
push
sub
notb
inc
xor
pushf
or
out
shlb
pop
push
push
and
in
jl
pop
aas
or
mov
or
xchg
mov
adc
add
jne
sub
mov
loopne
lret
sbb
call
lret
stos
popa
mov
jl
das
and
pop
lahf
mov
xor
cmp
aas
cld
pop
not
roll
sub
scas
jns
ja
and
cli
subb
lods
imul
push
push
outsb
sahf
movsl
sarb
jge
dec
push
jns
fxch
repz
sub
fwait
popa
cmpsb
in
pop
enter
out
daa
aas
xchg
xor
jle
sbbl
fsubrl
jnp
xor
lahf
ss
mov
cmp
dec
xchg
pop
aam
or
xlat
inc
and
xchg
jl
jle
jecxz
in
sub
or
mov
mov
insl
or
scas
cmp
js
out
nop
ljmp
xchg
ss
in
call
test
je
add
and
iret
mov
lcall
cmp
inc
sub
imul
jbe
int
int
inc
mov
into
add
lcall
mov
nop
stos
scas
aad
mov
push
and
add
mov
mov
fcomi
jmp
sub
or
ret
fiadds
movd
mov
jmp
jl
adc
and
xchg
xlat
aad
clc
movsl
cwtl
out
cmpsb
imul
and
into
or
inc
xchg
cmp
and
shlb
stos
or
dec
add
lock
sub
dec
iret
mov
dec
adc
and
cmp
cmp
cmp
inc
out
nop
push
sub
adc
push
leave
pop
mov
clc
lods
push
les
sahf
popf
je
mov
mov
mov
sbb
sbb
rcrl
cmp
xor
mov
pop
mov
pop
lods
fdivs
jle
lods
xor
dec
mov
push
jmp
push
test
jmp
xchg
jne
loopne
imul
sbb
aam
adc
mov
inc
lods
fsts
and
pop
clc
or
arpl
stos
or
xchg
dec
xor
shr
sbb
jbe
or
test
pop
jmp
aad
dec
cmpb
mov
stc
ljmp
loope
jp
and
rolb
cld
roll
fs
out
inc
mov
cmp
mov
mov
mov
sahf
add
jmp
cmpsl
adc
push
aas
call
out
rcrb
or
les
or
sub
dec
mov
das
xor
call
in
mov
fcoml
icebp
cltd
sub
xor
shrb
or
mov
sub
mov
sub
imul
add
mov
push
mov
lea
mov
xor
div
mov
lea
push
mov
mov
push
push
push
push
call
mov
mov
push
push
or
or
push
push
call
mov
mov
xor
mov
jmp
decb
sub
ficoms
insb
mov
adc
ficoms
adc
sub
xor
fs
pop
orl
xor
push
mov
lret
push
dec
es
iret
pop
cmpsl
lock
icebp
insb
lea
hlt
testl
orb
xlat
and
das
mov
jne
push
and
stc
sbb
dec
lock
dec
mov
inc
mov
insb
mov
loopne
loop
jmp
jnp
mov
stc
cmpsb
push
out
pusha
mov
xchg
mov
mov
mov
xchg
add
push
outsl
movsl
and
sbb
lret
pop
fsub
inc
cli
loopne
rol
mov
sbb
cld
cmp
pop
inc
or
repz
mov
push
in
jecxz
outsb
jo
or
addb
imul
bound
pop
dec
mov
imul
push
mov
xor
loopne
add
rcrl
lods
adc
mov
fdivrl
push
or
addr16
xchg
xchg
sbb
movsl
movsb
xchg
sbb
push
dec
test
cmpsl
in
xchg
lock
push
xor
inc
jmp
aad
mov
ret
xchg
cmpsl
insl
push
test
adc
aas
or
jge
test
int
pushf
xchg
rolb
mov
push
fildl
mov
iret
and
pop
inc
sbb
jnp
out
jp
leave
ucomiss
and
xlat
mov
cmp
pushf
xor
cmp
int
out
dec
and
mov
mov
and
das
shlb
outsl
cmc
aad
sahf
dec
jmp
mov
inc
push
push
sub
add
fs
ss
roll
cltd
mov
mov
mov
push
addr16
sbb
pop
xor
cmp
dec
cmp
pop
loope
sbb
fdivr
mov
inc
push
dec
jns
mov
jno
mov
dec
shrb
adcl
xchg
insl
xchg
test
inc
dec
out
mov
orb
mov
inc
nop
pop
insb
sub
outsb
outsb
cmpsb
popf
push
sub
sub
sub
cmp
outsl
inc
inc
sbb
pop
pop
dec
cmpsb
lcall
outsb
mov
add
sub
dec
sub
xor
in
and
addb
in
outsl
mov
call
mov
inc
in
mov
add
ja
mov
inc
mov
jg
push
jb
imul
sbb
lahf
pop
or
cmpsl
jbe
in
shlb
jp
or
adc
movsl
movsb
mov
push
or
push
xor
mov
lret
lcall
sub
clc
push
fdiv
adc
nop
int
mov
and
mov
nop
sbb
lcall
and
inc
cmp
dec
ret
outsb
adc
push
jp
cmp
andl
sub
sbb
or
push
in
jne
and
add
lea
xor
push
lea
call
mov
mov
mov
sub
xor
imul
add
xor
xor
mov
div
cmp
jne
mov
xor
mov
div
mov
mov
xor
sub
mov
xor
sub
or
lea
push
mov
push
pop
div
mov
xor
div
mov
mov
xor
xor
div
imul
sub
push
mov
add
jmp
aam
lock
mov
insb
and
js
adc
ficoms
adc
sub
fstp
nop
jmp
cmpsb
fcompl
jg
outsl
insl
fwait
fs
shl
cmp
lret
mov
pop
inc
cmpsb
ja
jmp
icebp
pusha
push
rcrb
bound
or
mov
aam
jle
jge
xor
lahf
fsubrs
xor
clc
test
subb
mov
add
jmp
arpl
inc
cmpsb
test
unpckhps
and
addl
dec
inc
sub
pop
fnsave
mov
mov
push
ds
mov
cltd
sbb
pop
sub
outsb
jbe
push
jp
sub
xchg
lods
daa
or
adc
lods
add
jnp
mov
ss
movsl
frstor
test
sbb
popf
dec
pop
or
pop
push
adc
ja
js
add
addl
add
inc
shr
addr16
xor
nop
loopne
sub
mov
mov
aad
sbb
jp
popa
lds
repz
les
arpl
and
xchg
ss
sbb
outsl
xchg
jmp
push
lods
and
dec
dec
dec
loop
scas
jno
mov
ljmp
aaa
shll
gs
rolb
mov
push
shlb
xchg
mov
test
or
fwait
mov
int3
push
lods
inc
into
jle
lea
add
test
dec
jle
pop
xor
push
xchg
xchg
add
movsb
or
pop
setnp
jae
pop
ds
in
aam
fimull
jns
bound
test
scas
into
adc
and
jp
jp
insl
and
sbb
fsubrs
movsl
cmp
inc
js
fwait
push
divb
subb
add
inc
shll
mov
pop
stos
enter
cwtl
int3
jo
push
jb
add
jb
add
inc
cmpsl
lret
cmp
jb
mov
notb
or
mov
push
out
or
lret
and
dec
shrb
add
lods
adc
bound
dec
icebp
mov
xlat
adc
mov
cwtl
mov
iret
pop
cld
cltd
mov
sbb
imul
aad
arpl
xchg
ficoms
mov
aam
cmp
jnp
cmp
iret
sbb
test
test
jge
in
out
cwtl
fstpl
add
pop
insb
pop
cmpsb
in
add
icebp
and
adc
or
cwtl
js
mov
roll
cltd
nop
je
xor
add
and
jo
pop
cmp
repnz
mov
je
jae
dec
in
out
das
xchg
cmpsb
clc
shlb
loopne
sbb
add
xchg
clc
push
mov
push
xchg
mov
insl
mov
dec
stos
cmpsb
js
sbb
mov
shrb
cmp
mov
cmp
testl
push
mov
sub
mov
pushl
call
mov
mov
lea
mov
incl
mov
mov
xor
mov
xor
xor
and
cmp
jne
cmp
jne
mov
jmp
lea
mov
mov
mov
mov
mov
sub
mov
mov
mov
sub
mov
movl
movl
jmp
jae
jge
jge
and
jecxz
sub
bound
adc
adc
adc
repz
push
ss
int3
daa
hlt
add
mov
dec
sbb
aaa
mov
fld
outsl
dec
stos
jne
scas
mov
xor
in
xor
rcrb
fdivrl
pop
lock
xchg
adc
shl
xor
lahf
rol
cmpsl
xor
add
stc
insl
jbe
arpl
in
dec
jge
enter
aad
jle
or
imul
adcl
das
mov
lcall
mov
aas
sbb
sub
ret
and
pop
leave
rorb
leave
xor
or
rcll
jo
pusha
aaa
xor
cmpsl
push
mov
fsubs
mov
mov
cwtl
mov
mov
cmpsb
movsl
adc
test
out
push
cwtl
leave
or
mov
pop
pop
jbe
pop
outsb
sub
jbe
fiadds
add
adc
push
repnz
fwait
pusha
xor
nop
and
out
pop
aam
pushf
jmp
cmp
or
cmp
dec
sub
icebp
inc
xchg
movsb
xchg
js
push
fldcw
scas
xchg
cld
in
insb
xor
les
pop
stos
loopne
jg
pop
xchg
clc
call
dec
lods
add
fldz
sub
mov
dec
adc
mov
xlat
pop
fs
movsl
aam
or
data16
or
jge
popf
mov
pop
aas
fsubl
bound
movsb
leave
data16
xor
ljmp
add
out
jo
xor
pop
jbe
inc
xchg
jae
loopne
fnstenv
nop
push
jo
or
dec
dec
in
test
mov
push
dec
pop
rcrb
pusha
mov
in
xlat
negl
xlat
push
push
shrl
insl
fcmovu
lds
inc
in
clc
jle
jne
pop
lret
cmovg
lret
aaa
pop
and
popf
mov
jnp
cli
add
sub
mov
das
mov
sub
sarb
pop
and
loope
popa
cmp
aam
adc
xlat
inc
imul
push
sahf
sub
out
cmp
pop
xchg
mov
mov
out
orb
sub
fsubr
dec
outsl
lods
call
add
pusha
lods
aaa
popf
jbe
sti
int3
pushf
daa
cltd
jo,pn
xor
in
mov
fists
nop
xchg
aas
pop
xor
imul
shlb
jmp
mov
rclb
hlt
stc
mov
dec
movsl
test
xor
xchg
adc
loopne
adc
and
cmpsl
cmp
adc
mov
jne
cmpsb
xlat
in
mov
data16
mov
mov
add
push
out
cmp
xor
into
pop
mov
insb
fs
xchg
daa
pop
push
or
ja
xor
sbb
imul
xchg
sub
lock
mov
and
mov
cs
mov
inc
lock
mov
mov
pushl
pushl
pushl
pushl
pushl
push
push
pushl
mov
call
mov
mov
pushl
call
mov
push
add
push
push
call
mov
jmp
mov
pop
mov
pop
leave
ret
push
mov
jmp
gs
icebp
pop
ficompl
das
mov
xor
xor
adc
mov
lret
sbb
addr16
fisttpll
das
das
clc
loopne
out
lret
imul
popf
andl
mov
enter
or
arpl
outsl
xchg
arpl
mov
xchg
mov
inc
xchg
adc
mov
sbb
xorb
arpl
or
loopne
scas
cmp
adcb
xchg
int3
xchg
add
mov
mov
cmp
out
xchg
negb
loop
out
and
stos
pop
addb
in
push
add
insb
ficompl
ja
inc
cmpb
add
sbb
lret
push
je
outsl
mov
mov
push
mov
mov
pusha
or
pmuludq
repz
cli
or
fnstcw
mov
stc
call
iret
pop
addb
in
insl
mov
fiadds
lods
xchg
push
cmp
rorl
es
mov
or
lds
and
cmp
inc
shll
out
dec
lahf
fsubl
sti
mov
jnp
pop
or
imul
pusha
cs
int3
fsub
dec
roll
fsubrs
xor
lods
in
cltd
dec
ljmp
push
out
mov
pop
add
stos
and
sub
and
mov
adc
or
and
sub
push
mov
lcall
and
ficoml
test
aam
test
lea
icebp
mov
xor
add
cmp
jb
adc
stos
mov
inc
cmp
push
repz
mov
divl
xlat
push
mov
inc
test
sti
push
addr16
sbb
inc
cmp
xchg
or
cmpsl
daa
push
xor
cmp
inc
push
hlt
in
xchg
scas
sub
je
mov
xchg
mov
divl
jl
sub
adc
stc
gs
and
cs
cmp
or
dec
mov
in
stos
push
and
iret
and
outsl
pop
jno
and
addr16
fisubl
cmpl
mov
add
pop
lret
ja
rolb
out
pop
add
in
and
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
push
push
push
call
mov
mov
add
adc
and
push
and
or
push
or
xor
xor
push
push
call
mov
movl
movl
movl
movl
xor
movl
push
inc
mov
mov
mov
push
push
push
call
mov
mov
or
or
push
add
push
adc
push
push
call
mov
lea
xor
mov
div
mov
sub
mov
movl
mov
movl
mov
mov
sub
mov
xor
div
mov
xor
or
or
mov
jmp
sbb
pop
loope
pop
pop
cmp
xchg
mov
sub
adc
movlps
out
stos
loop
lcall
repnz
pop
lahf
jne
je
adc
mov
out
inc
gs
cwtl
xor
rcrl
fcmovnu
ljmp
or
or
sbb
push
or
in
les
adc
ss
clc
ret
add
es
push
inc
pop
mov
gs
into
mov
addr16
xchg
pop
popa
cld
inc
subl
stc
mov
and
jb
stc
out
mov
mov
pshufw
mov
cmp
sbb
mov
faddl
psrad
inc
mov
sub
or
dec
lock
cmpsb
cmp
popa
jae
mov
insl
pop
dec
xchg
addb
push
dec
push
sbb
xchg
jl
cs
sahf
xchg
outsb
test
jmp
jge
imul
push
sub
imul
je
push
xchg
loope
pop
pop
sbb
add
mov
jbe
mov
xchg
js
push
sbb
dec
or
cmc
pop
call
sbb
enter
push
outsl
mov
cs
jmp
add
mov
int3
loop
int
cmp
int
rcrb
jecxz
mov
outsl
fwait
mov
jle
mov
inc
inc
js
cmp
sub
stc
adc
call
mov
cmp
cld
pop
scas
jge
jne
xchg
xor
and
cmp
add
int
pop
out
and
adc
scas
mov
mov
or
mov
sub
cltd
iret
xchg
sub
clc
mov
negb
mov
scas
mov
lret
push
inc
push
ret
ret
and
dec
and
insb
push
cmp
adc
ret
test
cmpsl
adc
mov
sub
mov
adc
es
sbb
daa
pop
out
in
jmp
ljmp
xor
and
clc
mov
aas
inc
mov
sarb
mov
ret
dec
add
xchg
and
push
aam
sbb
test
sub
jp
push
adc
mov
movl
movl
movl
mov
add
mov
and
lea
mov
mov
mov
movl
movl
movl
mov
mov
sub
add
xor
add
mov
div
mov
xor
pop
pop
or
mov
movl
movl
movl
mov
mov
and
sub
or
mov
imul
mov
div
leave
ret
push
mov
sub
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
jmp
lods
mov
lods
cmp
fwait
enter
push
adc
push
adc
adc
or
sbb
pushf
cltd
push
xor
mov
mov
fcompl
popf
testl
sub
push
ljmp
sbb
das
pop
ljmp
and
adc
dec
cwtl
out
fnstcw
mov
pop
push
cltd
daa
xorl
movsl
cltd
or
jnp
and
divb
or
or
or
pop
dec
jmp
mov
int
ja
dec
mov
inc
insb
clc
movsl
xor
xchg
pop
inc
test
ret
js
cmc
movsl
imul
cltd
cmc
push
pusha
daa
cli
mov
mov
fbld
mov
mov
fcmovb
movsl
lret
ljmp
sbb
pushf
fsin
mov
ss
stos
xchg
in
mov
add
mov
shrb
dec
fs
pop
cli
fucomi
or
ret
jns
cld
cmpsb
or
mov
dec
les
test
push
into
xchg
and
ficomps
mov
push
jp
pop
loope
sbb
inc
push
das
rorl
cmp
jns
pavgb
inc
dec
out
push
shlb
das
imul
mul
hlt
jnp
adc
roll
scas
push
iret
push
loop
mov
in
loopne
fistpl
adc
test
loope
adc
enter
dec
mov
fidivrs
outsb
inc
inc
fidivl
push
mov
incb
mov
ja
push
int
mov
mov
push
cmp
fdivp
in
loop
aaa
push
mov
cltd
mov
insb
cltd
mov
out
jle
stc
jno
push
mov
inc
jge
push
and
or
loope
push
jae
push
test
mov
into
xor
fwait
jp
xchg
in
dec
pop
sbb
imul
rol
cmp
dec
in
in
call
push
pop
aas
out
aas
je
mov
je
addr16
in
mov
mov
lea
pop
jbe
cs
add
imull
insl
es
xor
mov
js
mov
out
fwait
pop
sahf
sti
push
xchg
push
ret
xor
jbe
sti
and
in
sbb
or
aaa
push
sbb
jnp
sbbl
dec
loope
cmp
dec
dec
sub
adc
cmp
ds
in
orl
lods
pop
cltd
fs
adc
jo
stc
jecxz
inc
cwtl
rolb
cmp
int
mov
daa
dec
xchg
mov
sub
sbbb
or
or
scas
push
or
mov
and
aad
pop
clc
outsb
popa
jg
or
icebp
sub
sbb
xor
pop
testb
mov
xchg
dec
xchg
push
in
inc
jmp
dec
inc
pop
pop
btr
pop
xor
rclb
mov
mov
jo
jg
add
cmp
pusha
sbb
add
stos
daa
aad
aas
xchg
shrb
pop
test
inc
sub
cmpsl
es
adc
bound
push
ret
jge
cmp
int
aam
es
sbb
pop
shrb
popa
lods
jbe
cmp
out
pushf
push
movl
mov
mov
push
push
push
call
mov
mov
xor
jmp
fcomps
pop
sub
and
jmp
adc
push
adc
adc
xchg
sbb
fidivl
addb
fdecstp
or
mov
in
out
fbld
insl
lods
jl
jne
pop
or
jge
cmp
and
bound
pop
rorl
bnd
dec
add
mov
mov
test
mov
mov
in
icebp
gs
mov
sbb
ja
inc
sbb
call
inc
lahf
into
cmc
xor
or
in
push
lods
arpl
add
cld
sti
or
xor
loop
cmpb
mov
mov
cmp
adc
ja
in
cmp
xchg
mov
int
dec
sbb
inc
ja
sarl
loop
icebp
adc
ljmp
lret
mov
repz
in
es
insl
mov
and
inc
lret
inc
pop
add
push
loope
out
xor
add
sbb
mov
mov
jno
mov
leave
sahf
scas
das
mov
mov
and
push
xlat
pop
mov
mov
cmp
inc
repz
lods
push
pop
stos
jbe
nop
ljmp
arpl
and
in
repnz
into
out
push
pop
sub
mov
aas
jo
add
mov
ss
lret
mov
rcll
stos
cmp
loope
popf
add
pop
mov
aad
sub
fldl
icebp
adc
xchg
js
sbb
int
mov
subl
cmp
cmpsl
insb
mov
jbe
sbb
push
mov
jge
jno
inc
mov
mov
xor
test
pop
std
enter
cmp
or
shll
add
mov
divl
dec
sub
outsb
pushf
mov
mov
hlt
sub
mov
xor
fcmovu
aam
mov
ss
mov
sbb
xor
push
jne
mov
inc
aad
push
xchg
imul
lcall
int3
inc
cmpsl
ljmp
pop
mov
test
push
cmp
lahf
inc
lcall
and
iret
enter
aas
jl
icebp
jbe
lcall
pop
mov
data16
mov
fsts
js
inc
int
add
add
sub
icebp
pop
xor
xor
jg
sub
xchg
jg
cltd
pop
pop
test
icebp
popa
orb
push
iret
in
fimull
xchg
test
sbb
jmp
clc
inc
mov
cltd
inc
repnz
test
stos
mov
data16
dec
sbb
mov
pop
aad
inc
sbb
movsb
lret
pop
shl
je
ja
and
xor
aas
popa
xchg
mov
mov
int3
imull
pop
ds
push
xchg
fisttpl
in
adc
or
idivb
mov
inc
sub
shll
and
dec
in
stos
insl
lea
mov
and
mov
add
xchg
xchg
leave
rorl
out
mov
ss
dec
jp
ret
fistpl
cltd
mov
mov
push
xor
test
xchg
popa
sbb
mov
mov
sbb
imul
mov
mov
xchg
repnz
mov
xor
mov
xor
jmp
sarl
sbb
jbe
stos
pop
pmaddwd
push
adc
adc
scas
sbb
imul
push
push
aad
pop
ds
mov
jne
mov
call
fdivl
inc
lds
ficoml
push
jg
rcrb
push
fstpl
bound
or
xchg
out
repz
fsubrp
cmp
or
lea
aad
mov
bswap
cltd
loop
std
jmp
mov
xchg
aaa
sub
xor
mov
adc
push
and
mov
xorl
fsts
dec
jo
sti
pop
jle
or
mov
pop
push
mov
sbb
dec
into
test
cmp
or
and
sub
adc
sub
mov
add
addl
test
test
popa
mov
and
mov
adc
sbb
and
inc
xor
or
xchg
adc
sarb
inc
mov
sbb
loope
xor
push
or
addr16
lahf
pusha
inc
cmp
mov
insl
leave
mov
push
inc
hlt
cli
shrb
pusha
jl
mov
xor
ss
jecxz
sbb
mov
shl
jle
pop
jle
arpl
push
and
or
push
jmp
dec
mov
or
mov
jecxz
fldenv
int
fiaddl
les
nop
lret
push
jge
inc
movsb
or
adc
xchg
xchg
push
and
rclb
aas
mov
xchg
jge
mov
movb
xchg
jns
es
in
mov
pop
test
mov
in
mov
gs
aad
mov
in
lret
mov
mov
lods
aam
and
clc
lret
gs
cwtl
in
rorl
icebp
fiadds
leave
cltd
popf
xor
mov
inc
test
inc
sbbb
jae
or
mov
jecxz
fstl
fwait
addl
pusha
in
or
xor
add
int3
xor
inc
and
and
push
jge
xor
xchg
pop
or
ret
mov
inc
sub
or
jmp
add
cmp
dec
mov
push
out
adc
pop
dec
inc
inc
dec
shrl
adc
scas
sub
test
ret
dec
mov
xorl
shlb
jl
xchg
fs
test
add
loopne
lods
idivl
pop
add
hlt
xchg
mov
pop
retw
pop
xchg
out
insl
push
sarl
inc
cmp
popf
pop
xor
pop
push
jbe
call
in
loope
push
push
adc
cwtl
mov
and
mov
jge
jbe
push
pop
data16
shll
fiadds
or
inc
or
sarb
imul
cmp
pop
inc
mov
aas
dec
lret
mov
sub
xlat
lret
xor
xor
call
mov
xchg
mov
int3
pop
pop
pop
push
addl
sarl
data16
or
pushf
ds
mov
mov
mov
xor
or
add
cltd
adc
cmp
jne
cmp
jmp
mov
imul
test
stos
sbb
mov
push
adc
adc
xchg
ljmp
mov
sbb
mov
pop
jno
xchg
ret
cmp
mov
xor
jecxz
fisubrs
sub
sub
mov
test
dec
jno
dec
daa
sti
cltd
cmp
ljmp
lods
stos
shrl
dec
inc
movsl
adc
add
jge
mov
pop
lds
jnp
inc
loop
sub
mov
sahf
out
pop
inc
pop
in
pusha
das
push
into
lea
outsb
daa
repnz
adc
stos
inc
testl
xchg
inc
mov
pop
mov
xchg
ja
sahf
ss
push
fs
imul
sbb
sti
xor
into
adc
sub
mov
filds
xchg
rcl
xlat
push
dec
insl
lahf
sahf
jae
arpl
in
sahf
paddw
pop
lcall
shll
mov
mov
xor
shrl
xchg
scas
fabs
push
add
and
xor
mov
pop
repnz
mov
dec
push
pop
jno
cmp
aaa
mov
aaa
rcrb
pop
lea
loop
sbb
sarl
dec
out
xor
jbe
adcb
mov
test
inc
inc
jno
icebp
jecxz
sbb
dec
and
xor
push
dec
fnsave
jg
sub
int
dec
add
xor
and
data16
pushf
in
scas
into
scas
cmp
inc
daa
dec
adc
lods
mov
push
outsl
add
popa
sbb
call
test
ja
loope
xor
lock
lahf
xchg
les
stc
stos
hlt
pop
cltd
out
sbbl
shr
iret
sbb
stos
pop
adc
or
shlb
rcrl
pop
cltd
cmc
mov
out
jb
cmpb
jne
adc
out
adc
dec
fldcw
outsl
out
sbb
adc
loope
pushf
sub
xchg
inc
js
mov
pop
repz
in
and
scas
in
ja
pop
mov
out
mov
fst
rorl
push
in
loope
mov
mov
aas
data16
mov
ja
pop
rcrb
and
add
cmpb
mov
jmp
jnp
and
push
jne
jmp
mov
jecxz
dec
loop
adc
adc
ja
inc
loop
sub
cmp
or
pop
add
add
mov
xchg
inc
inc
out
inc
lock
cmp
sub
cmpsl
cld
jl
jns
jne
in
pop
pop
lods
loopne
xchg
mov
xor
js
lock
in
clc
sahf
xor
in
mov
pop
mov
leave
je
in
popa
lcall
mov
fcomp
or
mulb
pop
addr16
push
ljmp
add
cli
aam
insl
inc
movsl
into
testl
ret
jno
and
push
xchg
adc
fldl
je
rol
sbb
xchg
adc
lahf
cmpsb
push
out
push
ret
jg
cmpsl
in
loopne
test
inc
mov
push
int3
imul
insl
sbb
cmp
call
in
mov
rcrl
aaa
xchg
cmpsb
out
jno
rol
leave
popf
icebp
iret
dec
data16
pop
adc
mov
cmp
test
movsl
add
add
shlb
insb
daa
ret
mov
aad
fidivrl
push
adc
adc
insb
add
jmp
in
cli
xor
push
xchg
in
xor
push
mov
xor
pop
push
inc
adc
mov
push
jbe
xlat
cli
jmp
push
mov
fistpl
insb
push
out
dec
xchg
popf
les
adc
push
pop
pop
hlt
xchg
and
pop
xchg
jb
mov
dec
dec
ret
fdivs
out
xchg
dec
shrl
and
xlat
xchg
push
pop
jg
mov
xchg
push
mov
test
mov
sbb
and
cmp
and
jno
pop
cmp
andl
scas
add
dec
sub
or
adc
std
dec
fisubrs
std
lds
and
jg
push
cmp
outsl
mov
jl
sahf
mov
mov
sub
or
ror
test
inc
xchg
adc
arpl
pop
ja
loop
adc
insl
gs
or
jg
mov
and
mov
or
popa
xor
sub
dec
mov
je
pop
mov
popa
cmc
lea
int
mov
and
into
test
cmpsb
mov
cmp
xchg
sub
sbb
jge
pop
ret
pop
xchg
mov
inc
lods
loopne
mov
adc
es
stos
mov
dec
mov
mov
xor
scas
fs
mov
stos
xlat
daa
mov
out
dec
imull
jge
pop
and
xchg
sub
ud0
pop
in
sbb
cmp
xchg
sbb
sti
jae
push
out
adc
push
in
js
lea
mov
jae
jl
cld
mov
lea
cmp
sahf
push
add
mov
xchg
xchg
sub
int
xor
aaa
dec
icebp
nop
inc
lea
les
ss
aad
out
dec
add
pop
mov
inc
pop
int
push
mov
xchg
outsl
mov
insb
jb
push
jmp
cmp
sti
add
pop
and
scas
popf
je
cmp
lcall
inc
mov
fcoml
lea
out
sub
ret
ret
mov
push
mov
adc
push
gs
adc
jnp
addr16
add
cmc
lcall
push
leave
xorl
pop
mov
movsb
sahf
sbb
adc
sub
xchg
adc
push
shrl
pop
push
mov
pop
cmp
mov
add
add
repnz
call
adc
dec
loop
mov
data16
popf
scas
jl
dec
xor
lods
divb
xchg
jmp
call
sub
iret
pop
sbb
mov
bnd
test
mov
ja
nop
ret
lds
pop
dec
aam
mov
ficompl
in
sub
fninit
mov
aaa
pushf
nop
and
jl
mov
movb
or
std
sbb
call
xchg
addl
idivl
pop
fwait
push
jl
outsb
loopne
sub
add
add
sub
stos
pop
xor
jmp
push
push
mov
sbb
iret
xchg
xchg
and
pop
andl
test
xchg
mov
das
mov
mov
push
mov
sbb
add
add
ret
nop
jmp
les
lds
pop
inc
daa
and
mov
out
adc
push
adc
adc
fcoms
shl
sbb
aam
rclb
jmp
test
cmp
pushf
mov
dec
push
push
push
jns
dec
cmp
inc
inc
dec
mov
data16
push
push
sub
and
into
jl
lds
lret
icebp
xchg
stc
test
mulb
pop
cmp
mov
int
dec
test
lock
sbb
bound
int
data16
mov
pop
cmp
cmp
xor
dec
xor
inc
mov
inc
add
shlb
cmpsl
or
jle
and
and
adc
push
cmp
or
jle
icebp
sbb
mov
fidivs
inc
outsl
rcll
mov
fisttpll
negl
add
mov
dec
leave
mov
xchg
mov
outsl
jmp
popf
mov
das
push
stos
stos
xor
xchg
fnstsw
jle
dec
aam
add
sbbb
xchg
mov
dec
dec
jmp
add
out
inc
lds
sar
fwait
add
test
mov
out
in
mov
sbb
add
push
xchg
testb
dec
fwait
and
cmp
inc
mov
gs
js
cmp
jno
jp
adc
or
lods
sub
ljmp
adc
daa
add
and
cwtl
xor
pusha
mov
adc
ret
in
aam
leave
fnsave
aam
fisubs
pop
and
in
sbbb
imul
sub
or
jge
xor
pop
cltd
inc
and
insb
add
push
push
inc
dec
cld
faddl
rcrb
cmp
jns
js
cmp
jbe,pt
mov
and
xchg
adc
cmpsl
cmc
out
push
fcom
dec
jl
ljmp
jle
pop
jns
pushf
lds
xor
repnz
in
push
lcall
push
adc
mov
ds
fstps
in
lock
mov
nop
stos
test
icebp
or
xlat
in
aaa
dec
fwait
in
add
sub
cmc
jmp
test
ret
decb
jb
hlt
ds
arpl
xchg
lahf
xor
add
adc
mov
clc
repz
adc
xchg
jno
pop
lods
jle
lock
mov
jge
fwait
xchg
cmpsl
xor
push
out
jnp
lods
int3
mov
push
pop
je
adc
or
outsl
test
mov
push
popf
adc
mov
xor
sbb
mov
fidivl
orl
sahf
mov
out
outsb
jae
sarl
addl
xlat
in
mov
xor
add
lahf
test
jp
inc
sbb
push
add
ret
xchg
adc
lcall
nop
pop
outsb
xchg
push
push
loop
loope
loopne
mov
int3
lahf
sbb
or
mov
mov
xor
or
scas
push
shrl
mov
repnz
std
mov
dec
out
movl
and
xor
popa
xchg
jp
adcl
cs
jmp
cld
cli
or
mov
push
push
push
push
call
mov
mov
and
mov
mov
mov
and
xor
xor
xor
cmp
jne
cmp
jne
mov
mov
add
or
mov
or
xor
lea
xor
mov
and
add
mov
xor
xor
div
mov
mov
xor
imul
mov
push
push
xor
mov
lea
mov
mov
lea
mov
mov
or
xor
div
mov
add
xor
add
mov
add
mov
mov
mov
mov
sub
mov
sbb
mov
xor
mov
xor
mov
add
adc
jmp
push
add
aaa
mov
inc
sub
lret
xor
fisubl
adc
push
adc
adc
stc
lods
sbb
imul
gs
mov
stos
rolb
out
dec
fxch
push
cmp
iret
sbb
movsb
gs
push
ja
cli
lea
cld
das
daa
sbb
icebp
sbb
ss
lcall
loope
cmp
test
mov
ret
inc
pop
mov
sti
mov
push
and
adc
jae
dec
es
inc
scas
out
push
lcall
and
pop
push
add
cld
adc
push
call
sbb
jmp
out
jbe
inc
inc
sub
aaa
or
xchg
cmp
stc
mov
jne
jns
adc
add
test
xor
push
nop
cltd
fstl
mov
loop
mov
jle
ret
sbb
push
aas
push
enter
fcmovb
jp
jge
sub
lods
mov
or
data16
jg
and
test
pop
pop
aas
outsl
jl
dec
bound
inc
lock
sub
and
test
sbb
fnstsw
xchg
ss
jb
sbb
aas
sahf
or
jno
cwtl
add
xchg
packsswb
and
faddp
mov
js
adc
sub
adc
and
jns
push
mov
repnz
ret
enter
fidivrl
or
sub
ss
mov
xchg
jle
sbb
out
dec
ror
adc
mov
daa
repz
xchg
repz
lcall
scas
loope
in
adc
fcomps
adc
xchg
push
cmp
xchg
xchg
push
ds
or
push
leave
mov
mov
int
out
dec
jmp
and
or
arpl
aaa
vsqrtps
sbb
xchg
cmp
std
dec
out
or
add
loope
sarb
dec
mov
xchg
pop
mov
scas
mov
imul
mov
xor
add
jns
xor
or
mov
inc
cmp
lret
jle
inc
mov
jns
mov
mov
data16
dec
push
jecxz
out
sub
add
jb
dec
scas
shrb
shll
jge
mov
or
inc
inc
shrb
xchg
jb
push
sub
add
insb
inc
xor
fidivrs
xchg
jmp
hlt
push
jmp
insb
dec
sub
in
push
jmp
cmp
mov
xor
xchg
inc
ds
je
cld
scas
xlat
out
mov
fcompp
jnp
mov
cli
aad
inc
xor
mov
add
sarl
cmc
cmp
shlb
aad
cmpsb
icebp
cmp
mov
mov
out
and
repnz
push
mov
pop
pop
dec
inc
fwait
jg
fisubl
lock
jp
xlat
cmp
stos
push
mov
out
xchg
push
and
jl
scas
sarb
xchg
or
es
repz
mov
push
lea
fst
sbb
push
sbb
cli
pop
pop
push
mov
pop
adc
mov
push
pop
add
mov
stos
in
cmp
add
les
push
sbb
jbe
ret
sbb
hlt
xchg
pop
mov
jg
mov
les
add
adc
push
push
call
mov
sub
push
pop
sbb
mov
xor
cmp
jne
cmp
jne
mov
mov
add
shr
or
mov
xor
xor
add
mov
pop
leave
ret
push
mov
sub
push
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
adc
mov
push
push
jmp
and
pop
sbb
push
lcall
decb
adc
js
clc
ljmp
cmp
cwtl
loop
jnp
sub
push
idivl
testl
mov
or
inc
in
dec
push
jecxz
jp
popa
sbb
jle
mov
mov
xor
test
mov
pop
mov
pop
mov
push
fisttpll
int3
xor
shll
add
lds
iret
xchg
adc
xlat
mov
xor
add
cmp
ja
fcmovbe
in
cmpsl
jge
out
jge
out
xchg
pop
ss
aas
xchg
pop
adc
or
push
jg
mov
call
lret
push
out
rep
orb
dec
ljmp
jo
xor
cs
jmp
inc
pop
inc
roll
je
add
iret
enter
sti
and
iret
cmp
mov
add
push
push
test
pop
dec
pop
int
rclb
inc
jp
stos
je
dec
bound
jae
daa
jmp
or
pushf
jecxz
test
int3
loop
pop
inc
rcrb
das
push
out
jno
inc
aaa
mov
inc
inc
pop
mov
fwait
ret
andl
cmpsl
mov
jb
dec
mov
or
adc
mov
icebp
lds
hlt
xor
daa
or
icebp
call
or
pop
pop
jmp
cmp
sub
add
adc
adc
pushf
imulb
push
cwtl
xchg
and
mov
cld
popf
ret
sbb
dec
aam
cmp
jecxz
sbb
and
dec
into
mov
cs
adc
outsb
xor
js
mov
and
sub
sub
stc
mov
dec
sbb
sbbl
cmc
pop
aad
pop
mov
mov
sub
sbb
sbb
push
jmp
nop
gs
inc
insl
addr16
aaa
lds
jno
cvttps2pi
stc
jb
cli
out
mov
test
lock
mov
icebp
mov
mov
iret
popf
icebp
mov
and
fmul
sahf
mov
aaa
xchg
scas
jo
cmp
sbb
out
cli
mov
in
imull
jbe
sbb
xchg
dec
dec
test
pop
mov
ret
aam
mov
aas
outsl
xchg
pop
cmp
int3
or
or
push
push
call
mov
mov
and
or
mov
mov
and
or
xor
xor
shld
shl
shr
xor
jmp
pop
rolb
sbb
sbb
popf
fs
push
pushf
lods
scas
sbb
adc
movlps
sub
or
nop
test
dec
sbb
xchg
mov
xor
je
jo
pop
test
fidivl
jp
mov
out
fadd
or
popa
hlt
sbbl
cld
cs
fsubs
push
push
lret
lcall
out
ds
dec
pop
pop
mov
and
mov
adc
popa
inc
fcmovne
dec
mov
mov
mov
dec
test
cwtl
in
sbb
jecxz
jl
push
mov
mov
adc
fisttpl
push
push
mov
xlat
mov
and
rclb
xor
push
cmpsl
xchg
repnz
sbbl
mov
nop
into
enter
inc
mov
mov
or
inc
mov
ds
test
sub
addr16
cmpsl
sub
sbb
not
test
sbb
inc
and
adc
pop
stc
pusha
xchg
insl
mov
mov
dec
jne
cmp
push
shlb
aam
ret
data16
cld
push
inc
faddl
xor
fwait
call
add
mov
ret
rol
std
repz
notb
test
mov
arpl
sbb
adc
xor
lods
lods
loop
xchg
lods
mov
mov
xchg
out
push
sbb
dec
aas
imul
lcall
jg
jbe
lock
mov
test
sbbl
in
or
data16
in
mov
or
pop
lea
pop
pop
sub
dec
rclb
jo
icebp
aam
clc
add
test
jns
inc
mov
xchg
mov
gs
and
insl
mov
lahf
adc
inc
or
icebp
inc
js
insl
xchg
xchg
stc
xor
lret
jmp
loope
dec
sbb
xor
pop
jmp
hlt
es
or
jl
sahf
adc
push
lahf
xor
pop
ljmp
test
cltd
cmp
insl
shl
aaa
scas
add
mov
andb
adc
test
mov
shlb
repz
je
sahf
in
or
push
nop
cltd
mov
insb
xchg
xor
and
das
shl
addl
iret
popf
pop
fidivs
sbb
sub
adc
test
mov
sahf
rcr
fucom
lock
loop
or
or
xor
mov
mov
xor
mov
mov
mov
mov
mov
push
push
push
push
call
add
push
adc
push
push
push
call
mov
mov
mov
xor
xor
add
mov
adc
mov
mov
mov
mov
mov
jmp
repz
push
cmpb
adc
testl
adc
adc
cs
dec
mov
icebp
loop
mov
add
xor
mov
jno
mov
mov
ja
insb
pop
pusha
loope
punpckhdq
cwtl
loop
sahf
lret
push
or
jns
sub
dec
push
imul
test
jne
jmp
sbb
xlat
xor
and
in
sub
jg
repz
in
fldt
push
arpl
das
mov
xchg
movsb
pop
iret
repz
sahf
icebp
ror
xchg
mov
leave
push
mov
xchg
or
xchg
adc
sbb
xchg
jns
stos
les
jle
add
cmp
aas
arpl
int3
ds
xchg
cmp
sub
and
jb
repnz
mov
mov
out
cmp
pop
stos
lcall
xlat
push
shll
mov
fwait
xchg
in
pop
jg
mov
jo
mov
sub
push
add
mov
adc
xor
aad
sbb
int
scas
jnp
iret
mov
jb
pop
jno
adc
sub
sbb
pop
fisubrl
outsl
pop
je
ljmp
cwtl
dec
sbb
loop
and
icebp
or
cmp
lods
push
test
xlat
pop
out
mov
dec
cmpsb
sbb
stos
push
xchg
adc
inc
mov
mov
xchg
push
mov
cmpb
inc
or
cmp
data16
lods
add
cs
push
jle
filds
or
sbb
repz
insb
loope
jl
int
cs
adc
sub
not
sbb
xlat
stos
xchg
add
scas
mov
push
loope
cmp
out
pop
iret
jp
mulb
sub
pop
or
cmp
mov
or
les
cmpsb
dec
dec
mov
cmp
les
daa
push
mov
test
push
inc
inc
je
repnz
jne
cmp
gs
ja
push
jns
in
es
ret
ljmp
or
jp
pop
shrl
sub
movsb
xchg
xchg
fwait
and
enter
stc
clc
xchg
fsubrp
out
add
pop
xchg
mov
mov
push
push
dec
xor
cltd
push
pop
sbb
or
out
shl
pop
inc
ss
cmp
adc
mov
rorb
dec
add
sbb
mov
sub
mov
sbb
add
jmp
mov
bound
popa
adc
int3
dec
adc
or
adc
movlps
stc
ljmp
popa
into
xlat
loopne
lds
push
outsb
add
mov
add
ret
jne
enter
out
ja
loop
jmp
jo
jl
cmc
dec
push
aam
ret
sub
xchg
or
xchg
fisubl
cltd
pop
jnp
cmp
imul
pop
rorb
jnp
sub
sub
push
cwtl
mov
push
les
adcl
jle
fistl
daa
or
push
mov
jmp
inc
sbb
and
and
jae
enter
jnp
inc
sbb
repz
cld
mov
ret
adc
mov
mov
mov
sub
push
or
cmp
insb
inc
das
daa
lcall
pop
add
push
scas
test
adc
sbbb
insl
xchg
dec
sbb
sub
mov
insb
int3
imul
or
aad
jns
les
xchg
pop
inc
push
push
aam
iret
inc
loope
fs
add
faddl
dec
test
repz
add
cmp
movsb
ficoms
cmpsl
mov
and
mov
mov
ljmp
adc
imul
sbb
jo
lods
sti
mov
lock
fcmovbe
jns
rorl
test
push
jbe
jl
scas
stos
add
ja
in
cltd
aas
lock
in
add
pop
inc
lea
adc
bound
mov
xchg
testb
inc
jge
loopne
stos
pop
sbb
cmp
adc
test
pop
sbb
pushf
xor
sub
shrl
add
push
xor
jns
cmp
sbb
mov
out
sbb
aad
jl
fwait
dec
test
fiaddl
mov
mov
inc
xchg
test
jle
adc
sbb
adc
fwait
enter
mov
cmp
sub
inc
in
pushf
sbbb
mov
mov
mov
mov
sbb
pop
inc
adc
daa
and
xchg
sbbb
mov
sbb
push
popa
mov
adc
jl
les
mov
call
pop
dec
mov
add
or
fprem
jo
mov
adc
push
xor
mov
pop
sub
mov
sub
mov
mov
mov
add
xor
shrd
xor
shr
or
shl
or
mov
push
mov
mov
mov
push
push
push
call
mov
mov
mov
or
mov
or
mov
add
mov
adc
jmp
jp
push
sub
pop
cmp
add
punpckhdq
adc
decb
adc
mov
pop
sbb
or
jmp
leave
insl
stc
iret
insl
push
call
int
scas
adcb
nop
add
inc
jmp
sub
sti
out
jno
mov
pop
mov
shlb
mov
rcll
mov
and
and
pop
adc
imul
dec
sbb
ret
mov
jge
adc
out
dec
test
sbb
xlat
insl
jg
jno
push
or
loopne
lret
sub
lahf
fsubrs
sbbb
enter
ljmp
sub
mov
fbld
xchg
jg
or
negb
popf
js
and
std
sti
sti
insb
xchg
mov
sbb
cmp
fisubrs
mov
jno
sbb
pop
sbb
repnz
jmp
adc
test
sbb
sub
push
pop
xor
sbb
es
sub
jne
xchg
or
sub
pop
insl
push
jb
lea
mov
cs
jne
ret
adc
xor
stos
imul
in
popf
shlb
ret
mov
imull
pop
nop
mov
and
dec
pop
loopne
push
mov
mov
sahf
pusha
push
inc
sti
and
and
or
push
test
outsb
mov
stc
push
mov
subl
lret
add
add
imul
daa
ret
mov
in
jge
sti
and
movsl
or
jecxz
mov
test
stc
xchg
pop
loopne
sub
push
loope
arpl
cmp
cmc
add
push
push
push
sbb
mov
je
popf
xlat
leave
jnp
sub
je
xor
lds
hlt
jmp
imul
and
push
pop
jle
xor
stos
cwtl
cltd
scas
movsb
movsb
sub
dec
mov
sbb
movsl
sbb
and
int3
seta
subl
popf
bound
out
mov
xorl
sub
repz
pop
cmp
out
inc
push
mov
mov
dec
loop
je
xchg
mov
jp
iret
je
rcrb
in
cltd
or
in
or
mov
xor
add
push
movsl
cltd
add
xchg
daa
pop
mov
push
jbe
lahf
stos
xor
sbb
jne
add
mov
adc
add
adc
pop
mov
mov
pop
leave
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
jmp
mov
call
sub
push
mov
push
adc
rorl
adc
push
aas
xorb
jge
inc
out
xchg
xor
sub
rolb
pusha
icebp
es
mov
ja
iret
jno
cwtl
loope
fisttps
lods
js
inc
add
out
aaa
and
mov
aaa
mov
fdivrp
or
mov
cs
fwait
int
mov
outsl
stos
add
sarb
mov
add
mov
xchg
and
xor
cmp
pop
pushf
iret
repz
popa
pop
mov
loop
fsubrp
dec
jns
xchg
mov
adc
hlt
scas
rolb
and
jl
cs
cmpsb
and
and
in
aaa
rcr
popf
shlb
push
out
or
dec
repz
lock
repnz
add
inc
xor
inc
in
sub
adc
add
lea
repnz
xchg
fwait
emms
adc
not
scas
popf
pop
insl
loopne
dec
pop
sarb
addb
mov
add
arpl
test
push
lds
outsb
shl
mov
call
or
sbb
scas
pusha
popa
xchg
mov
and
cmpl
loope
pop
into
xchg
adc
ret
out
pusha
xor
arpl
out
jl
test
or
xchg
mov
fcomps
jge
mov
hlt
rcrl
sub
push
iret
gs
pop
shlb
inc
sub
sbb
loopne
push
mov
icebp
push
pop
inc
sarl
mov
scas
jle
fsts
and
adc
jmp
movl
bound
lar
cmp
xor
push
mov
push
out
cli
out
pusha
sbb
xor
movsb
hlt
pop
inc
mov
movsl
rcl
lret
out
lahf
xor
nop
xor
pop
push
dec
insb
roll
add
pavgw
movsl
cli
int
inc
pop
pop
xchg
xor
mov
inc
jl
push
xchg
out
mov
loop
out
aad
outsb
fmull
push
pop
outsl
outsl
cli
push
int3
cli
fadds
sub
cs
aas
fnsave
jo
hlt
adc
lret
sbb
cmp
cli
insl
pop
sbb
pop
incb
xchg
repz
pop
out
movsl
pusha
mov
aas
dec
shrb
adc
xor
fidivrs
fcmove
lret
lret
stos
sub
rorb
pop
icebp
jmp
sarb
vpavgb
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
and
add
mov
and
mov
sub
and
mov
mov
imul
add
add
xor
cmp
jne
mov
mov
mov
sub
add
mov
or
mov
imul
sub
add
mov
or
mov
mov
add
imul
add
mov
add
mov
mov
mov
and
mov
and
mov
imul
mov
or
mov
imul
mov
sub
cmp
je
mov
jmp
mov
sub
xor
add
jmp
movl
movl
mov
mov
imul
add
and
add
or
sub
leave
ret
push
mov
and
sub
push
push
lea
mov
mov
mov
mov
sub
sbb
mov
orl
orl
lea
push
lea
push
call
mov
mov
pushl
mov
pushl
mov
pushl
pushl
pushl
pushl
pushl
call
pop
pop
mov
pop
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
jmp
jl
and
pop
popa
loopne
stos
jbe
cmpb
movlps
pop
push
push
loopne
xlat
cld
mov
cld
fistps
push
stos
mov
xor
xchg
repz
movsl
cli
iret
fidivs
mov
jnp
add
aaa
push
movsl
ficompl
xlat
arpl
inc
mov
push
daa
add
and
inc
mov
pop
adc
ret
mov
fldenv
fsubrp
inc
popa
fwait
aas
dec
sub
jmp
adc
mov
stc
inc
in
lret
inc
adc
and
fcomip
push
in
inc
ret
push
ret
sub
mov
das
loope
movsb
stc
lret
shlb
sub
adc
mov
push
movsb
sbb
inc
pushf
neg
aas
jnp
pop
sti
aaa
jb
aas
mov
mov
jo
stos
lea
outsb
aad
mov
int3
xor
and
cmp
mov
jmp
stc
fiaddl
push
int
scas
je
cmp
aaa
in
add
and
add
or
fbld
and
inc
xchg
les
adc
inc
cmp
jnp
mov
ficoml
xchg
and
xchg
fisubs
mov
add
js
pop
cmpsl
lods
pop
fs
neg
adc
sub
or
cwtl
ljmp
mov
popf
adc
inc
daa
hlt
rorb
cli
cmp
jmp
aaa
mov
in
out
shrb
lret
pop
repnz
dec
imul
xchg
xchg
fs
jge
jbe
insl
lret
pop
repnz
lret
mov
mov
xchg
popf
aad
test
sbb
sbb
mov
test
loop
ss
je
add
addr16
xor
pop
xchg
push
push
mov
pop
jp
lret
xor
dec
dec
subb
push
lret
pop
or
xchg
bswap
bound
xchg
mov
xchg
out
clc
int3
je
dec
xchg
inc
mov
or
cli
loop
ret
push
popf
mov
mov
divb
cld
out
or
outsl
or
sbb
jp
mov
sbb
cmp
aad
pop
inc
dec
daa
and
hlt
mov
lock
pop
xchg
insb
sti
pop
imul
sbb
out
sbb
dec
iret
lods
adc
sbb
xchg
xchg
loope
adc
mov
or
lcall
push
jb
bound
ret
add
push
sub
lods
dec
stos
adc
mov
sub
mov
mov
insb
rcr
push
jecxz,pn
sbb
cltd
clc
test
outsl
sbb
adc
cmpsl
push
mov
loopne
push
cmp
sbb
or
and
sub
rorb
jae
inc
dec
mov
lea
call
test
movl
movl
movl
movl
movl
movl
mov
mov
add
xor
mov
and
imul
xor
push
movl
movl
movl
mov
jmp
mov
loop
lcall
stos
outsl
out
call
adc
adc
imul
push
in
aas
mov
adc
sub
add
inc
test
ret
add
or
inc
cltd
dec
stos
mov
mov
inc
sti
movsb
rorb
mov
adc
and
dec
jns
pop
xchg
lahf
add
test
adc
sbb
xchg
je
aam
xchg
sti
movsb
ret
int
ljmp
ds
xor
test
leave
pop
ds
mov
and
xlat
lods
push
or
jnp
clc
fwait
sub
movsl
cmc
aas
inc
push
movsl
pop
or
loop
or
pop
mov
inc
hlt
ss
inc
sahf
mov
sub
arpl
jp
cli
mov
xor
int3
xchg
fiadds
sbbl
out
jae
shr
aam
push
lods
aas
sbb
or
jae
xchg
pop
insb
cmp
xor
in
cmc
std
inc
add
jge
push
daa
add
loop
sub
lods
lret
daa
mov
push
and
xor
idivb
sarb
add
jne
inc
push
mov
pop
sub
sti
rorl
inc
mov
insb
mov
cmp
inc
aad
xchg
icebp
test
or
imul
mov
mov
js
call
push
dec
pop
imul
dec
fnstsw
inc
movsl
or
flds
dec
out
dec
and
pushw
lock
fsubrs
repnz
pop
mov
test
lahf
push
mov
xor
icebp
xor
and
ret
into
call
repnz
xor
cwtl
cmc
jl
mov
pop
cmpsb
and
rorb
push
cmpsb
shr
jno
cld
jo
sub
loope
lret
cmp
movsb
dec
imull
xlat
int3
hlt
stos
cmp
fsubp
and
and
bound
scas
ret
add
sub
gs
adc
fnstsw
lock
ds
popf
push
mov
out
arpl
mov
sub
pop
pop
das
cmp
outsb
mov
sbb
mov
outsb
insb
aad
dec
lds
loope
jp
and
in
and
aaa
lret
jo
std
sub
dec
and
add
loop
std
lahf
sbbb
cmp
fldcw
vmread
cmpsl
cmc
xchg
insb
bound
dec
stc
jno
dec
mov
or
test
xchg
nop
inc
xchg
or
mov
pusha
inc
xchg
push
mov
pop
add
loopne
popa
pop
push
pushf
rcr
sub
aas
jbe
jmp
xor
or
or
popf
mov
jne
xor
sub
div
mov
mov
or
xor
mov
jmp
sti
je,pn
sub
stos
xchg
out
fdivrl
popa
movlps
xlat
test
adc
mov
ret
inc
je
cmp
inc
and
cltd
lock
loope
jle
ret
inc
data16
aad
xchg
or
pop
xchg
pop
mov
jmp
jg
xchg
sahf
mov
fst
dec
cld
push
pop
cs
orb
jp
or
inc
pop
mov
mov
cmp
push
sbb
rorl
pop
stc
xchg
nop
movsl
jg
mov
scas
or
push
insb
cmp
xchg
cmp
in
pop
add
rolb
clc
add
das
in
xor
lods
sar
cmpsl
mov
pop
sbb
jl
mov
pop
sub
outsl
aaa
or
lahf
mov
add
cmp
adc
lahf
xlat
jmp
icebp
int
and
push
or
push
arpl
xchg
bound
mov
clc
cmp
in
push
jns
xor
push
shl
adc
cmp
dec
xor
sub
loope
xchg
int3
push
pop
sbb
ret
mov
sub
fistps
adc
clc
ds
mov
mov
xor
enter
pop
fs
jb
hlt
jb
or
sahf
jb
test
fimuls
leave
mov
rolb
pushf
aad
xchg
adc
sbb
and
mov
lahf
into
stc
lret
adc
mov
and
xchg
xor
xchg
push
stos
mov
adc
idivl
nop
xchg
test
mov
or
jl
stos
sbb
rcll
inc
mov
cmp
and
rol
jle
lret
cmpsl
jecxz
push
jle
pop
dec
sahf
mov
out
and
xchg
jmp
mov
sub
and
cld
jecxz
or
pop
int3
mov
mov
fisttpll
mov
pop
ss
or
shrl
push
repnz
mov
lret
movsl
mov
aaa
fildl
lods
decl
sub
frstor
inc
dec
outsb
imul
in
inc
jbe
mov
bound
sbb
sbb
lcall
fsubs
pusha
jo
repnz
xchg
or
int3
hlt
test
xor
xchg
jecxz
push
icebp
mov
pop
clc
js
sub
aas
and
daa
jecxz
and
pavgw
inc
inc
mov
imul
std
cmpsl
shrb
xor
ret
int3
inc
inc
and
jne
in
jbe
les
cwtl
test
mov
fcomi
in
lahf
insb
in
pusha
jle
nop
pushf
push
in
mov
in
mov
aad
movsb
inc
jge
xchg
jl
push
add
lock
sarb
gs
push
cld
mov
mov
mov
mov
mov
mov
mov
imul
and
or
xor
add
mov
mov
sub
add
mov
xor
mov
jmp
xchg
and
jp
sbb
lods
push
xor
mov
popa
movlps
out
jbe
loop
repz
leave
mov
divl
xor
fsubr
mov
pop
js
add
cmp
out
aam
mov
xchg
rcr
and
mov
fmuls
jl
out
lock
jge
cmp
fdivs
sbb
jecxz
adcl
sti
stc
lea
push
subl
push
cli
sub
rclb
and
xchg
mov
jo
rorb
mov
add
adc
sub
test
push
adc
push
jg
in
out
and
mov
pop
cmp
repnz
inc
push
add
inc
scas
dec
cbtw
and
mov
stos
inc
xor
lods
daa
add
jae
leave
int3
sub
pop
sub
inc
gs
pop
xor
xor
xchg
iret
les
inc
hlt
lret
xlat
std
adc
std
sarl
out
push
pop
data16
mov
out
jg
xchg
sbb
imul
inc
cmp
mov
pop
aaa
mov
xchg
and
popa
xchg
hlt
fists
dec
andb
or
rcl
hlt
xor
jns
add
fidivl
and
clc
stc
outsl
cmp
mov
aam
cmp
sub
xor
push
add
push
ss
mov
enter
sbb
movl
sahf
insl
sub
sbb
shrb
pop
cld
fs
cmp
fimuls
clc
shll
fdivrs
mov
cltd
xor
jecxz
inc
fs
insl
jns
inc
jl
lock
pop
ret
jae
xchg
xlat
push
mov
incl
inc
dec
shrb
xor
mov
sub
icebp
pop
xchg
fiadds
aas
sbb
aam
hlt
cmp
fst
jl
repz
dec
dec
and
test
cmp
scas
push
int
out
orb
orb
jbe
sbb
in
fdivl
out
addr16
repnz
pop
cmpsl
fs
or
repnz
ja
push
pop
mov
mov
sub
daa
jno
jbe
mov
xchg
fdivr
push
je
js
outsb
andl
out
lea
mov
mov
frstor
xchg
fisttps
ror
sbb
jae
xlat
pop
adc
pusha
cmp
mov
or
cmp
int
das
inc
mov
sub
lods
cmp
cmp
fcompl
mov
and
pop
mov
pushf
sbb
jle
not
add
out
lcall
in
sbb
rolb
rorb
adc
ret
fmuls
jnp
add
lea
mov
shr
or
mov
sub
add
cmp
jbe
pop
leave
ret
push
mov
sub
push
addl
push
mov
or
mov
push
mov
sub
mov
shrd
cmpl
mov
mov
mov
jmp
movl
not
jae
push
push
pushl
pushl
call
movl
sbb
xor
mov
mov
sub
imul
add
xorl
mov
or
addl
shr
mov
mov
mov
mov
xor
mov
xor
xor
cmpl
mov
mov
movl
jmp
movl
ja
push
push
pushl
call
or
orl
sub
movl
mov
mov
sbb
sbbl
mov
sbb
mov
or
mov
mov
andl
shl
adc
mov
add
shrd
negl
xor
shr
xor
mov
adc
mov
xor
or
mov
mov
negl
mov
mov
mov
mov
cmpl
movl
mov
mov
jmp
mov
mov
ja
push
push
push
push
push
push
call
mov
mov
sub
sub
and
mov
xor
xor
sub
imul
sbb
add
mov
mov
andl
mov
mov
shl
xor
jmp
filds
scas
pop
sub
out
fcomps
adc
cmp
sbb
imul
sub
jmp
sub
push
sbb
aas
inc
xor
pop
lods
adc
loop
mov
in
dec
pop
scas
mov
jbe
movl
jo
pop
mov
jecxz
mov
push
lods
jnp
pop
idivb
mov
adc
sbb
nop
out
xor
pop
insl
xchg
lds
lods
mov
mov
pop
xor
stos
les
mov
or
into
es
das
pop
es
movsb
xor
stc
mov
mov
push
push
push
aam
icebp
cmp
mov
notl
add
mov
cmpsl
cmpsb
arpl
inc
or
pushf
arpl
cmp
in
sub
cmp
in
push
mov
clc
mov
lods
je
mov
adc
xchg
pop
or
cmp
push
lods
cmpsl
adc
xchg
pop
push
adc
ret
in
add
xor
jge
fisttpl
cwtl
shll
adc
cmp
imul
push
sub
int3
sbb
in
mov
jbe
adc
aas
inc
jmp
ret
jmp
int
mov
push
call
add
and
in
cmp
jnp
push
xorb
adc
jns
enter
push
inc
shl
hlt
jns
inc
xor
xor
mov
mov
add
nop
push
rcrl
outsl
clc
enter
mov
pop
lds
xchg
adc
mov
inc
shll
out
pop
lret
imul
push
addr16
push
sbb
in
seto
mov
or
mov
mov
push
bound
imul
call
add
in
imul
aad
mov
fcmovnb
cmp
jns
aad
test
loop
xchg
cmpsl
ficoms
pop
fs
sarl
negl
repz
decb
pop
aas
jmp
inc
inc
repz
test
xchg
ret
add
pop
jno
lahf
fcmovnu
dec
fistps
lds
sub
ss
subl
fistl
fwait
cmp
add
jae
lods
add
icebp
int3
lock
aad
mov
mov
push
or
mov
rcll
scas
rolb
mov
mov
jle
rcrl
push
pop
mov
push
and
pushf
or
mov
or
fcmovnb
add
adc
add
movb
mov
xor
adc
shld
mov
shl
mov
movl
movl
movl
cmp
movl
jne
cmp
je
mov
cmpl
mov
notl
movzbl
mov
jmp
mov
jbe
pushl
push
push
push
push
call
or
sbb
not
movzwl
adc
xor
xor
and
mov
add
xor
add
xor
add
movzwl
xor
mov
cmpl
movl
movl
not
mov
jmp
mov
movl
jge
pushl
push
push
call
or
or
movl
andl
orl
movzwl
adc
andl
adc
xor
incl
xor
xor
xor
mov
sbb
mov
shld
movl
shl
movl
cmp
movl
jne
movl
cmp
movl
je
cmpl
mov
mov
jmp
mov
jne
push
call
addl
and
and
and
movzbl
or
xor
mov
mov
mov
adc
mov
mov
mov
sub
xor
push
pop
xor
xor
xor
jmp
shlb
jno
jno
stos
sub
cmpsb
js
xor
insb
test
adc
xchg
movlps
push
pop
mov
popf
and
scas
js
in
push
out
test
rolb
fistpl
cmc
adc
push
mov
hlt
les
and
fs
aaa
mov
out
dec
mov
ss
jp
lds
push
aaa
psubusw
jg
sbbl
pop
xor
mov
jo
mov
cmp
ja
in
sbb
rcll
mov
inc
outsb
sbb
andl
inc
stos
or
pop
mov
cmp
dec
shrb
andl
fists
arpl
xchg
adc
fimull
mov
pop
movsb
fnstsw
lcall
in
inc
jge
xlat
adc
out
insb
andb
pop
inc
fnstenv
sub
xchg
ret
xchg
repz
lds
sub
fmull
jl
mov
mov
pop
add
inc
xchg
pop
jmp
jno
lahf
repz
nop
ficompl
test
add
xchg
adc
xchg
lods
cmpsl
push
mov
cwtl
inc
fwait
xor
xchg
add
add
cmp
mov
bound
add
inc
xor
mov
dec
push
lret
mov
dec
cmp
jbe
and
jg
adc
shlb
cmp
push
push
xchg
xchg
js
int3
in
cmp
and
mov
or
lds
mov
dec
pop
aas
jge
stc
mov
call
in
mov
mov
arpl
and
pop
xor
movsl
sbb
aaa
cmovo
aad
and
inc
repnz
push
ss
dec
and
push
sub
je
outsl
rclb
aam
inc
imul
hlt
aad
inc
sbb
clc
fnstenv
pop
ds
xor
pop
fsts
in
pop
imul
lods
call
pop
rcrb
pop
orb
imul
and
mov
stc
les
sbb
adc
test
fdivrp
inc
push
adc
push
pusha
jae
push
mov
xor
gs
push
shrb
fsubs
mov
aad
scas
dec
repz
shrl
mov
lods
fsubs
pop
sbb
mov
fistps
out
jl
pop
call
fdivs
jno
lcall
repz
addr16
xlat
das
push
xchg
mov
sub
inc
sbb
in
loope
out
js
xor
or
popa
xchg
push
pushf
jno
scas
stos
sub
icebp
jp
mull
or
sub
xchg
shl
adcl
mov
xorl
xor
movl
shr
or
cmpl
mov
mov
movl
jmp
movl
movl
ja
pushl
pushl
pushl
push
pushl
call
or
or
xor
add
and
add
xor
mov
xor
mov
mov
mov
mov
mov
push
cmpl
mov
movl
jmp
mov
mov
jae
pushl
call
sbb
adc
xor
movl
orl
add
pop
andl
sub
cmpl
mov
mov
jmp
movl
movl
jne
push
push
push
call
xor
movl
or
or
subl
adcl
mov
xorl
add
addl
mov
subl
lea
mov
mov
mov
xorl
jmp
outsb
xchg
or
pop
pop
stos
adcb
fistl
adc
inc
call
faddl
pop
adc
out
not
cmc
shrl
stos
jmp
cmp
push
lret
mov
or
jle
pop
push
push
mov
shll
pop
int3
mov
dec
stos
xchg
out
push
and
mov
xor
movsb
ja
add
jae
fcmovu
pop
bound
dec
pop
imul
and
test
fisubl
dec
inc
test
mov
lahf
sub
add
cltd
enter
lret
dec
mov
les
enter
xchg
mov
ljmp
dec
or
mov
addr16
xor
push
sbb
pop
mov
jnp
mov
sbb
lock
leave
or
sub
add
dec
or
mov
mov
shlb
iret
outsl
adc
std
and
leave
dec
xchg
bound
lds
loopne
push
out
sbbl
enter
imul
xor
imulb
xor
imul
sbb
sub
fs
and
aas
and
je
lret
xlat
xor
dec
in
pop
in
jnp
cmc
scas
test
cmpsl
por
mov
fs
repnz
sub
push
add
fdivrs
add
mov
jge
adcb
xor
scas
out
rcrl
gs
mov
outsl
sub
pop
cmp
push
mov
fsubrp
ljmp
jle
gs
dec
xchg
ss
sbb
sbb
pop
pop
sbb
ret
cli
and
fbstp
inc
mov
mov
cmp
hlt
in
adc
inc
cli
add
cs
sti
mov
xor
xlat
push
repz
push
add
inc
or
sti
sti
lock
jne
int3
mov
popa
ss
cmp
or
insl
mov
hlt
lds
decl
jb
call
sbb
mov
loope
push
inc
jb
sti
pop
hlt
sbb
in
mov
xchg
mov
pop
mov
es
fldl
out
hlt
adc
test
sbb
and
push
inc
cmp
sub
adc
and
test
jne
fmul
dec
xchg
out
push
testl
lcall
in
mov
adc
pop
xchg
xchg
rorb
mov
insl
and
and
lcall
sbb
mov
dec
xor
mov
lds
iret
xchg
mov
bound
andl
jmp
sub
sbbl
pop
js
lods
xchg
in
jle
fsts
adc
inc
shr
aaa
push
lret
xor
out
sub
arpl
out
icebp
mov
mov
pop
test
mov
xchg
gs
aad
popf
ljmp
sub
sbb
sub
and
mul
cmc
push
sar
jae
lods
mov
jns
jno
mov
cmp
out
roll
cltd
pop
push
xor
or
xchg
dec
adc
dec
jge
out
mov
out
movsb
push
jg
pop
ljmp
mov
sarl
out
push
cs
in
imul
ljmp
lcall
xor
pusha
and
add
sbb
shrb
out
shlb
add
push
cmc
ja
ds
pop
jb
subl
aaa
in
adc
popf
pop
data16
das
popa
in
xor
push
push
sbb
dec
xchg
call
xor
cmpsl
fcoms
push
add
jns
or
inc
ds
repz
add
scas
std
sub
mov
clc
inc
mov
sbb
inc
push
mov
dec
sub
pop
mov
dec
cmp
lods
jns
push
xor
repnz
in
jp
pop
cmp
jbe
push
imul
xchg
cmp
movsb
sub
fildl
sahf
sbb
cmp
movsb
sub
arpl
xchg
dec
sbb
fcmovnu
xchg
clc
and
lret
xor
popf
lods
or
int3
addr16
xchg
out
jp
xorb
in
rol
in
adc
inc
pop
mov
dec
rcll
orb
jne
shll
jbe
aas
push
pop
mov
stc
dec
pop
out
xchg
jecxz
push
xor
add
cwtl
clc
sub
in
and
cwtl
cmpsl
pop
mov
pop
insb
xchg
adc
loopne
addr16
scas
jbe
mov
mov
sub
add
and
sahf
mov
std
dec
xchg
into
dec
add
rcr
cmp
fadds
loop
dec
call
jno
add
fistl
int3
xor
mov
sbb
push
ljmp
or
jbe
es
push
fnsave
sub
enter
mov
imul
fdivl
push
in
pop
outsl
loopne
sar
xchg
lahf
cs
cmp
dec
push
shrl
lock
ljmp
lret
mov
pop
adcb
into
mov
dec
mov
adc
jae
mov
pop
mov
mov
lret
push
in
push
inc
enter
fadd
mov
aas
push
addl
shl
sbbl
or
xor
mov
movl
jmp
test
repnz
cltd
dec
sbb
mov
es
adc
xchg
movlps
xchg
das
popf
cwtl
sbb
sbb
push
shl
sub
mov
repz
xchg
sti
or
or
jg
idivl
pop
sbb
movsl
cltd
adc
shrl
jno
ss
loop
dec
cs
pop
cmp
dec
cmp
mov
loop
xor
imul
subb
cld
pop
xchg
arpl
mov
inc
movsb
lcall
cmp
dec
stos
cld
mov
je
mov
int
add
data16
movsb
add
movsb
sbb
sbb
test
dec
mov
pop
test
sarl
adc
in
add
outsl
push
mov
dec
lret
pop
sar
pop
cmovge
das
mov
pop
xchg
lods
cltd
xchg
fwait
cmp
daa
pop
adc
fucomip
stos
adc
addr16
test
pop
mov
cmp
push
call
cmp
adc
jb
add
adc
test
mov
vpor
test
push
aas
imulb
fldt
mov
outsb
dec
incl
into
add
xor
jecxz
fisttpll
jecxz
hlt
push
shll
adc
stos
inc
ja
into
test
sbb
mov
push
cmp
pushf
cltd
in
in
in
outsb
je
jp
push
lcall
mull
mov
adc
push
cmpsl
pop
clc
inc
fldenv
lds
std
ja
fisubrs
inc
mov
push
fwait
xchg
xor
push
add
pop
loop
mov
cli
insb
jg
dec
push
testl
repz
icebp
lret
imul
mov
lahf
andl
lock
out
int
int3
sbb
or
dec
insl
fnstcw
rcrl
jg
add
shrb
lds
icebp
mov
into
inc
cmp
sub
imul
jp
pop
pop
scas
dec
fdivrl
cwtl
mov
fwait
outsb
inc
fstpt
test
pop
or
dec
loopne
ret
inc
ss
cmp
add
cmp
ret
push
repz
xchg
sbb
int
je
push
mov
xchg
int
inc
jmp
dec
jge
pop
cmp
jge
push
pop
imul
inc
sub
imul
xchg
movsb
cmp
jl
xchg
repz
mov
and
jg
cmp
jne
negb
repnz
loop
les
push
or
push
pusha
add
pusha
and
mov
add
and
sbb
jp
mov
mov
cmpl
mov
movl
mov
jmp
movl
ja
push
push
push
push
push
push
push
push
push
call
addl
and
orl
and
add
movl
jmp
mov
jns
sbb
into
lods
add
adc
xchg
movlps
cltd
test
sbb
pop
cmp
adc
jp
in
test
xchg
fldcw
mov
xchg
das
add
ds
std
divl
cmp
push
sub
mov
jae
fstp
sbb
sub
imul
sub
iret
inc
mov
lret
jl
mov
mov
push
push
pop
mov
faddl
fiaddl
or
sub
divb
ret
inc
adc
movsl
mov
pop
sbb
adc
fstl
xor
mov
add
cmpsb
mov
lea
outsl
pop
aad
clc
or
jne
gs
int
mov
lcall
dec
pop
lods
outsb
sbb
divl
daa
scas
dec
inc
mov
mov
push
cmp
dec
dec
mov
arpl
loope
fsubl
pop
popa
sbb
mov
push
cmpsb
lods
pop
cmc
sub
clc
out
cmp
movsl
sar
mov
or
xchg
dec
insb
pop
into
les
jmp
or
mov
push
jmp
sti
adc
bound
test
out
mov
lods
mov
ljmp
pushw
cltd
or
xchg
sbb
cmp
mov
mov
icebp
xor
bound
or
fdivrs
pop
fdivrl
sarb
sbb
mov
inc
dec
mov
inc
arpl
dec
xor
out
jns
outsb
jo
xchg
and
rcrl
cmp
xchg
mov
push
rcr
jecxz
sub
in
arpl
sahf
push
or
lret
pop
pop
jo
arpl
jl
test
cmpsl
pushf
in
inc
outsb
fcmovne
pop
loopne
iret
jo
std
test
lods
test
fucom
or
add
popa
xlat
jne
sub
jne
cmpsl
movsb
aam
cmc
or
or
shrb
jp
cmpsl
cmp
push
xor
mov
pusha
movsl
addb
mov
stos
sti
inc
addr16
or
adc
je
ljmp
xchg
push
add
xor
dec
call
dec
pop
test
movsl
sbb
inc
add
mov
xor
xchg
shrl
jbe
pop
icebp
andb
imul
add
lock
add
fistl
xchg
push
push
mov
sub
fidivrs
aaa
in
jmp
inc
or
sbb
sbb
sub
dec
adc
or
in
int3
push
test
jecxz
adc
inc
xchg
and
push
xchg
mov
sub
into
in
ja
sti
add
xchg
cmp
dec
repz
push
mov
xor
adcl
xor
shr
adcl
shl
sbbl
or
push
lea
subl
push
lea
push
call
mov
mov
xor
xor
shr
shl
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
lea
push
shl
call
mov
mov
xor
xor
shr
shl
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
lea
push
shl
call
mov
mov
xor
xor
shl
shr
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
shl
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
lea
push
shl
call
mov
mov
xor
shl
xor
shr
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
shl
mov
xor
or
mov
shrd
shr
mov
mov
xor
xor
or
shl
add
mov
mov
shrd
shr
xor
mov
mov
xor
or
jmp
icebp
mov
cmp
pushf
mov
inc
pop
pop
lods
and
adc
xchg
movlps
mov
push
xor
and
mov
xchg
jge
adc
lods
jo
sub
mov
push
pop
jb
jp
sub
fs
xchg
jle
and
jmp
loopne
test
pushf
jge
stos
out
fdivs
pop
pop
push
push
or
or
test
adc
aaa
cmp
adc
push
push
mov
push
test
pop
lahf
ljmp
cmp
jmp
insl
add
andl
adc
sahf
pop
sbb
cltd
xor
rcll
ds
mov
popa
ja
and
clc
add
imul
cmp
dec
mov
push
movsb
mov
ficoml
jge
cmp
sbb
or
inc
xor
sub
push
xor
xor
jge
mov
sub
clc
int3
mov
add
ss
add
xchg
pusha
je
nop
aam
or
clc
fcomip
sub
pop
jnp
mul
xor
loope
fst
int
in
in
imul
dec
test
outsl
adc
es
push
xor
lahf
and
pushf
rorb
lea
xchg
repnz
and
loope
jge
fstp
inc
xchg
sbb
jg
mov
lret
bnd
cmpsb
sub
ret
fwait
or
out
out
sti
shll
iret
popa
in
fisubrs
inc
sub
pop
adc
bound
imul
hlt
or
lret
pop
sbb
stos
shr
mov
mov
mov
cs
adc
in
jl
xchg
push
jns
add
and
ret
inc
pop
mov
nop
jge
lea
mov
jle
cmc
add
loop
fidivl
cmp
pushf
add
xchg
mov
movsl
jge
xchg
push
repnz
add
test
negl
and
aaa
test
in
dec
or
paddd
jge
cmpsb
mov
jg
pop
mov
mov
or
jp
push
shr
push
insl
inc
xor
pop
push
cmp
lods
mov
in
fmuls
cmp
xor
ljmp
mov
cmpsl
sub
fxch
insl
mov
jo
cmp
xor
fsts
cmpsl
inc
pop
rolb
and
lods
mov
jle
cltd
and
outsl
cmp
shr
aas
sub
jge,pn
xorl
dec
push
js
jbe
adc
jg
stos
icebp
mov
mov
push
sbb
sbb
movsl
pop
lret
jns
adc
fwait
cmpsb
outsb
ret
je
insl
add
mov
jmp
int3
lahf
pop
inc
in
and
mov
test
pop
aad
decl
mov
movl
or
mov
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
mov
mov
jmp
iret
xchg
stc
cmp
dec
mov
fwait
mov
adc
pop
test
out
call
inc
push
test
imul
rclb
sahf
out
rcl
hlt
dec
inc
and
lahf
cli
xlat
fcomip
sub
sub
dec
xlat
mov
gs
push
adc
popf
std
mov
push
inc
adc
xlat
jb
inc
cmp
dec
or
jg
sbb
adc
mov
lcall
mov
adc
xor
jnp
data16
mov
mov
pusha
shlb
sub
sub
xorb
mov
jbe
xchg
or
repnz
sub
mov
adc
aas
adc
and
adc
push
and
out
ret
cwtl
cmpb
add
js
fisttps
in
jg
outsb
jbe
xor
lock
pop
mov
cmp
and
jecxz
call
push
mov
scas
sub
pusha
jo
mov
push
xor
jp
adc
or
xchg
lea
les
lret
fnsave
mov
clc
aaa
cmp
xor
pop
push
aas
push
and
mov
sbb
test
subl
adc
adc
sbb
bound
rolb
xchg
and
icebp
push
enter
out
ret
test
dec
lret
sub
ljmp
jno
mov
scas
push
dec
push
clc
pop
add
mov
negl
xlat
pop
cmp
popf
adc
nop
inc
js
xchg
jl
movsl
test
frstor
cltd
jne
in
adc
test
es
imul
lret
lret
and
popa
subb
addr16
xor
sbb
stc
and
cmp
int
fdivrs
inc
lds
pop
jbe
fs
outsl
test
repnz
mov
imul
movsb
xor
push
imul
stos
fsubrl
mov
add
rclb
mov
push
adc
pop
sbb
xchg
xor
push
mov
cmp
jmp
dec
mov
sti
push
call
lods
das
arpl
enter
adc
inc
mov
mov
cmp
sbb
and
cli
icebp
stos
scas
idivb
and
jnp
lahf
lods
orb
sbb
in
pop
or
or
jns
mov
mov
enter
outsl
add
mov
and
lcall
push
pushl
shl
call
jmp
imul
cltd
sbb
imul
test
xchg
movlps
iret
jp
loopne
popa
test
or
dec
push
popa
std
fidivl
push
dec
shrb
adcb
pop
push
scas
fs
sbb
cwtl
bound
lock
adc
gs
lahf
inc
popa
xor
hlt
cltd
sub
sbb
daa
add
addr16
out
dec
mov
movsb
lcall
subb
das
jle
insl
imul
inc
and
std
or
mov
and
jns
in
push
aaa
cmp
iret
or
inc
push
xchg
and
je
dec
pop
sub
push
lea
movsb
jmp
lahf
stc
mov
dec
jp
pop
mov
js
lret
sub
popa
mov
push
ret
inc
nop
test
rorb
add
notl
test
sar
jo
push
lret
sti
xchg
push
insl
pop
dec
ja
lea
mov
loope
clc
fisttpll
testl
pop
movsl
push
aam
cs
lock
mov
fnsave
ret
rcrb
push
pop
fsts
fsubr
repnz
lock
fwait
leave
or
jg
sbbb
mov
adc
or
pushf
outsl
popf
xchg
mov
and
pop
cli
std
mov
push
cli
stos
mov
repnz
add
arpl
ret
sub
cmpsl
pop
into
repz
xchg
jne
xchg
xor
add
rclb
cmp
into
pop
dec
and
mov
pop
movsb
adc
pop
shl
lahf
lret
or
dec
add
jne
push
aam
leave
pop
test
shll
dec
test
push
mov
mov
add
fwait
out
pop
mov
xor
mov
add
push
fistps
imul
jae
imul
mov
or
test
test
xor
hlt
cli
sub
cmp
cmove
cmpsl
push
les
insl
mov
cmp
or
push
je
push
adc
movsl
dec
xlat
dec
inc
mov
roll
dec
cwtl
dec
push
xor
daa
mov
mov
push
mov
into
jne
idiv
sub
inc
and
hlt
push
adc
jb
mov
scas
dec
and
dec
mov
je
push
jle
rorl
fsubl
ret
pop
negl
mov
push
test
sub
jle
aam
mov
repz
xor
pushf
lds
cltd
sbbb
inc
sbb
inc
stos
xchg
push
jge
ret
sahf
std
scas
push
out
cmp
push
dec
push
cmc
lea
push
mov
mov
shrd
shr
mov
mov
xor
jmp
mov
mov
pop
pop
mov
lods
ss
sub
cwtl
mov
adc
jno
out
outsl
pop
enter
test
mov
cmc
inc
mov
ret
popf
ljmp
sub
xchg
fdivrs
adc
add
out
frstor
sub
pop
shl
lahf
cmp
inc
fists
mov
call
mov
lods
imul
push
sub
or
sub
shl
lods
pop
pusha
lea
jae
shr
cmpsb
cmp
stos
bound
sub
lcall
outsl
sti
mov
cmp
jae
and
rolb
inc
leave
push
push
cld
lret
movsb
lcall
scas
es
lea
mov
lret
gs
test
lock
push
out
aad
fidivs
dec
jmp
hlt
cmc
pop
inc
mov
inc
xchg
jle
xchg
ret
ljmp
stos
popf
push
mulb
xchg
sub
ja
shll
cltd
xchg
dec
inc
cmpsb
jbe
mov
or
xchg
cmp
hlt
bound
aam
mov
jb
sub
stos
sub
out
cmp
ficomps
jecxz
arpl
xlat
nop
outsb
cmc
xor
or
add
cmpsb
jne
imul
inc
lock
subl
xor
push
jmp
movsl
mov
sub
faddl
pop
jmp
fnstenv
cmp
lock
out
fnstenv
add
iret
aas
push
pop
push
fldl
ljmp
clc
test
jmp
orb
test
pop
in
jns
xor
mov
mov
ds
push
outsb
mov
ret
daa
js
push
pop
jne
stos
dec
jbe
daa
cltd
rcll
sahf
cmc
adc
inc
pop
aam
iret
ds
xchg
mov
sub
jge
insb
sub
mov
iret
push
loop
aas
inc
shrl
fwait
popf
mov
jns
popa
inc
adc
adc
popf
fistpl
dec
jnp
pop
jmp
jmp
rolb
sbb
stos
push
inc
push
jns
inc
ds
pop
and
jp
or
sub
xchg
sub
pop
stos
sub
cmpsl
sbb
push
xchg
mov
ss
xor
and
lahf
mov
loopne
add
mov
sub
or
push
leave
adc
jne
mov
push
xor
push
xchg
cmp
addr16
add
loopne
cld
pusha
cwtl
mov
jp
cmp
dec
pusha
shrl
xchg
adcb
jecxz
stos
pop
xchg
push
outsb
scas
sbb
jp
jl
popf
ljmp
sub
add
xor
loope
call
mov
mov
mov
mov
mov
mov
rol
mov
xor
cmp
je
mov
mov
xor
test
je
mov
mov
jmp
cwtl
push
cwtl
sbb
mov
mov
xchg
movlps
fcomps
loop
mov
in
cmp
lods
arpl
mov
inc
jecxz
fstpt
mov
lret
mov
stos
mov
sub
jne
test
jbe
js
sti
and
pushf
pop
xor
cmp
push
push
cmp
push
rcl
jp
addr16
mov
xchg
ja
inc
cmpsl
or
aas
ret
push
int3
lcall
cmp
xor
sahf
cmpsl
movsb
stos
sbb
push
sbb
cwtl
nop
shll
xchg
dec
arpl
xchg
out
nop
mov
test
ficoml
stos
pop
dec
ja
mov
jb
flds
cmp
lods
adc
add
es
pop
jnp
in
orb
sar
mov
add
repnz
sub
push
push
push
js
mov
or
jp
xlat
lods
jp
sub
lods
mov
xchg
out
sub
xchg
les
mov
push
les
fwait
ss
mov
cmp
gs
fstp
push
and
pop
cs
inc
cmc
mov
jmp
subl
xor
xor
sti
xor
test
rcrb
xchg
mov
outsb
clc
cmpsl
lods
call
mov
scas
outsl
cmp
jb
or
lock
dec
sub
in
cmp
pop
and
push
and
sub
xchg
ja
cmp
push
in
jns
mov
cli
clc
pop
ljmp
xchg
clc
lds
xchg
popf
mov
jno
stos
mov
movsb
or
mov
and
push
adc
sbb
movsl
fwait
mov
dec
push
js
push
dec
pop
insl
push
xchg
stos
sbb
pop
jle
ss
arpl
bound
mov
cmp
cmp
push
js
out
popf
cmp
lods
xlat
and
or
jne
adc
sub
aas
ss
pop
ficompl
push
addl
sub
push
push
sub
inc
cwtl
fmuls
imul
cmpsb
jp
push
xchg
in
inc
adcl
or
add
cmpsl
fwait
idivl
push
sbb
dec
add
pop
adc
xor
addl
push
dec
insl
ljmp
push
ljmp
cmp
xchg
stc
or
into
and
mov
sub
push
sub
mov
cmp
cmc
int3
ficomps
dec
std
test
mov
incl
add
decl
cmp
rorl
stc
cld
decl
test
cld
decl
or
lods
enter
add
or
xor
or
push
add
push
lea
push
shl
call
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
push
push
mov
shl
mov
shrd
shr
mov
mov
xor
xor
or
add
push
shl
call
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
push
shl
call
mov
mov
shrd
shr
mov
mov
pop
xor
xor
pop
shl
jmp
jno
cmp
cmp
jno
xchg
xlat
test
jae
dec
mov
xchg
movlps
push
jle
call
dec
test
loop
pop
or
int
movsb
push
jo
push
sbb
rcll
loopne
push
lea
rcrl
outsb
cmp
push
dec
add
mov
fstp
sub
leave
lret
pop
mov
cwtl
ret
es
cwtl
adc
dec
fimull
inc
cmp
sbb
je
xor
xor
test
cmpsl
arpl
cltd
dec
mov
les
fnstenv
mov
lock
push
xchg
adc
pop
cs
dec
and
dec
pusha
inc
fwait
adc
pop
mov
ja
push
jmp
mov
jb
push
sub
dec
in
inc
mov
jmp
jecxz
test
xchg
pusha
or
dec
sbb
xor
and
adc
clc
xor
cmpsl
faddl
xor
pop
adc
daa
ror
lea
negl
adc
cmp
mov
xor
lcall
push
es
stos
push
clc
cmpsl
lret
sbb
cmp
ficompl
jbe
lea
out
add
add
stc
repnz
push
add
jno
inc
cld
mov
inc
inc
sbb
loope
and
dec
fisttpll
test
push
mov
test
fidivs
cltd
xchg
adc
les
movsb
mov
jecxz
ret
dec
sarl
into
pop
nop
sub
fldcw
les
xchg
xchg
jns
sbb
push
cmc
dec
jle
jecxz
test
add
mul
ja
addr16
shlb
cld
xor
inc
or
pop
ljmp
cmp
xchg
sub
in
clc
push
jbe
stos
jne
cmp
pop
or
js
mov
cmp
push
in
ret
cmpb
mov
lret
sbb
test
lret
int
loope
dec
daa
or
lea
test
mov
sbb
sub
cmp
cmp
xor
and
mov
fstps
adc
mov
and
mov
push
cmp
jp
mov
inc
stc
dec
insb
mov
mov
pop
bound
mov
pushl
call
data16
jae
loopne
addl
sub
mov
inc
cmp
push
sahf
mov
pop
mov
aam
push
push
xchg
mov
lahf
push
adc
sub
cmpsl
lret
adc
and
mov
cmp
adc
push
stos
cmp
ja
sub
or
pop
leave
ret
mov
and
mov
or
mov
jne
sbb
mov
sbbl
mul
ret
subl
push
cmpl
mov
mov
movl
mov
jmp
movl
jne
push
pushl
pushl
call
adc
not
movzbl
xor
mov
movzwl
adc
or
mul
mov
mov
mull
add
mov
mul
add
pop
ret
push
mov
sub
push
jmp
adc
fscale
fyl2xp1
lock
sub
lods
push
mov
adc
inc
jle
xor
sbb
divb
dec
cmp
xor
stc
jmp
ljmp
push
lock
das
inc
xchg
aad
aam
or
fcoms
pusha
in
adc
add
insb
iret
jp
jb
jg
in
and
jecxz
daa
fwait
xor
xor
adc
bound
inc
roll
mov
sub
jmp
jbe
mov
xchg
bound
or
and
lods
jp
mov
or
xor
sbb
xchg
xlat
mov
test
das
fstps
stc
js
push
outsb
mov
mov
jo
pusha
adc
sarl
je
lds
cmp
lahf
cmp
mov
test
jb
or
ss
scas
jl
mov
cmpsb
ja
xchg
xchg
lahf
push
jl
insb
xor
dec
loope
adc
sbbl
pop
push
jl
pop
dec
test
add
ss
leave
mov
lcall
cmpsb
cmpsb
scas
or
out
xchg
dec
push
mov
inc
das
imul
mov
into
push
aad
aad
adc
push
mov
out
mov
pushf
pop
xchg
call
jl
jge
xor
mov
subl
addr16
repz
je
cld
popf
lret
sub
xchg
add
xchg
push
mov
jns
adc
rolb
dec
movsl
sti
jo
xor
adc
cmpb
outsl
dec
cmovp
sarb
inc
push
or
sub
lret
jle
ret
sbbl
rol
shr
push
js
call
ficoml
xchg
ret
dec
inc
or
inc
int3
adc
sub
loop
call
jp
imull
stc
mov
cmp
and
insb
iret
std
cli
push
test
imul
inc
cmpsb
jb
xor
insb
sarl
pop
push
or
xor
out
or
cmc
stc
outsb
or
and
cmp
pop
std
js
xor
inc
call
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
xor
div
mov
xor
mov
push
div
mov
xor
xor
sub
mov
lea
mov
jmp
pop
mov
push
sbb
loope
push
lea
adc
add
sbb
test
hlt
cmp
mov
test
aaa
and
scas
ja
and
jns
mov
jns
lock
mov
jge
jl
divb
xchg
sub
out
pop
sbb
rclb
fldcw
enter
int3
rorl
aad
hlt
inc
popa
cmpsb
aaa
mov
inc
int
aam
popa
xor
mov
aaa
mov
mov
add
fwait
jle
les
out
adc
add
mov
jmp
sub
sbb
ret
packssdw
into
cli
nop
mov
daa
negb
push
fwait
pop
push
or
and
imul
jns
add
gs
sub
lods
aas
lret
mul
jnp
stos
pop
mov
out
sbb
jl
out
cmp
jo
lea
lahf
xor
bound
push
leave
arpl
mov
jns
inc
enter
das
ds
pop
das
mov
xor
into
jp
sub
pop
and
je
aad
xor
pop
in
adc
and
jo
in
test
imul
pop
inc
xorb
mov
fs
jmp
mov
xor
cmp
cmpsb
dec
xchg
fisubrl
sbb
lret
add
jbe
les
mov
jg
mov
pop
notb
ret
mov
loop
xlat
cmp
stos
push
push
or
lret
fs
or
mov
out
je
or
jge
int3
mov
in
dec
js
mov
dec
sbb
xor
xchg
fistpl
sub
sbb
addl
loop
lods
xchg
xor
cmp
pop
scas
sbb
add
imul
pop
mov
out
push
test
daa
dec
ret
sbb
mov
fistl
lcall
mov
leave
push
push
movsb
stos
outsl
jg
hlt
cli
or
cmp
or
xchg
pop
inc
pop
mov
popf
adc
fsubl
xchg
sbb
aam
cmpb
sub
xor
mov
xor
or
xor
mov
sub
mov
mov
xor
mov
sub
div
mov
pop
xor
jmp
and
popa
and
clc
inc
jbe
and
pop
fwait
adc
mov
stc
mov
in
and
cltd
inc
xchg
fimull
mov
mov
stos
mov
mov
test
jge
mov
xchg
cwtl
dec
mov
xchg
adc
inc
xor
push
jecxz
in
shrb
sbb
shll
test
aam
xchg
daa
cmpsw
dec
push
out
mov
imul
mov
ds
sub
inc
nopl
shr
jnp
push
repz
xchg
jae
out
roll
cmpsl
movsl
add
sub
sub
aam
cmp
in
sbb
jl
and
inc
aaa
lret
je
andb
roll
jb
cmp
and
inc
pop
lea
and
ret
push
outsl
cld
iret
daa
call
lock
adcl
test
data16
or
pusha
inc
sahf
fcmovu
cwtl
or
and
mov
dec
filds
cld
add
lds
movsb
ret
bound
xchg
and
sbb
inc
outsl
data16
js
push
shrd
out
ljmp
dec
jno
lcall
mov
test
jge
pop
push
loop
adc
fiaddl
inc
push
xchg
inc
jae
sub
adc
shlb
stc
int3
idivb
inc
pop
cmc
out
sbb
cmpsb
lcall
cmpsl
dec
data16
xchg
sub
xor
push
adc
add
fcomps
scas
dec
stos
testb
loope
xchg
inc
sub
test
mov
mov
sub
push
daa
push
pop
aam
rcll
movsb
outsl
pop
mov
cmp
push
lods
pop
jb
jo
mov
adc
or
stc
or
dec
or
sbb
jp
mov
mov
mov
arpl
bound
jne
push
pushf
mov
add
xchg
jb
sub
cmpb
inc
mov
jle
icebp
push
inc
mov
mov
fsubr
fisubrs
jl
sub
cmp
ja
jmp
mov
movl
movl
movl
movl
mov
mov
mov
sub
imul
xor
jmp
lret
push
out
sub
rorb
ss
negl
adc
lock
fistpll
hlt
sbb
je
jno
shrl
xor
mov
fdivl
fidivrs
and
outsl
enter
shrl
popf
sar
or
mov
shll
outsb
or
imul
andb
lahf
daa
les
add
aam
add
jecxz
cmp
add
nop
arpl
xchg
scas
sti
popf
pop
ret
push
insb
ret
jle
notb
test
outsb
shlb
mov
adc
bound
jge
aam
push
adc
imul
cmpsl
xor
movsl
popf
lods
testb
jb
sbb
in
call
mov
pop
stos
out
shrl
jmp
xlat
shr
leave
push
jns
cmp
aam
es
cld
imul
mov
adc
cmp
push
pusha
push
inc
andl
cli
lahf
rorl
xchg
jle
cwtl
daa
rolb
bound
push
xchg
ret
loopne
mov
loopne
in
repnz
mov
xor
lods
ds
hlt
shrb
inc
fldl
and
xchg
loope
fs
sti
jbe
xchg
push
xchg
rcl
shrl
enter
iret
pop
push
xchg
jp
pop
inc
orl
sbb
mov
dec
fistl
stos
fs
mov
dec
pushf
cwtl
cmp
into
push
fwait
pushf
push
pop
popa
lods
dec
add
bound
testb
jo
inc
inc
outsl
or
out
shrb
mov
cmp
inc
cwtl
les
jns
inc
call
xchg
adcb
xlat
daa
fwait
or
fisubs
lahf
je
jg
lcall
and
std
add
std
ret
adc
sbb
jp
rcrl
addr16
pop
pop
or
adc
shl
out
mov
sbb
lahf
or
push
lods
mov
pop
sti
cld
loopne
cmp
inc
adc
sub
xor
pop
int3
bnd
cli
lret
xchg
adc
jnp
or
push
xor
div
mov
mov
push
and
mov
sub
sub
mov
mov
mov
xor
mov
xor
and
add
add
mov
mov
add
mov
xor
mov
xor
mov
sub
mov
add
mov
sub
xor
mov
xor
or
xor
mov
sub
mov
mov
mov
xor
xor
sub
div
pop
xor
sub
cmp
jbe
pop
pop
pop
leave
ret
push
mov
and
sub
push
push
push
push
push
call
mov
movzwl
push
call
test
jne
xor
movl
jmp
mov
mov
and
mov
mov
push
cmpl
movl
movl
jmp
mov
movl
ja
pushl
call
addl
subl
subl
orl
pop
mov
mov
mov
mov
mov
andl
movzwl
subl
or
andl
cltd
adcl
movzwl
sbbl
idiv
xor
movzwl
adcl
or
and
mov
and
mov
cmpl
mov
mov
jmp
movl
movl
jne
pushl
push
call
orl
sbb
sbb
xor
add
and
mov
mov
mov
subl
mov
mov
andl
sub
andl
mov
movl
xor
add
mov
sub
movl
mov
movl
cmp
movl
jb
cmpl
movl
mov
mov
mov
jmp
movl
jbe
push
push
call
adc
movzbl
add
mov
adcl
and
add
subl
movl
movl
adc
movl
add
jmp
loope
jnp
cmp
pop
popf
push
xor
stos
cmc
stos
sahf
xchg
adc
pop
adc
adc
pop
scas
sbb
pop
in
mov
mov
dec
cwtl
rcrb
rorl
xor
addr16
cmp
sbb
inc
icebp
fidivl
mov
fildl
or
push
in
push
push
jp
inc
repz
push
test
lcall
cmp
xor
test
jns
pop
aaa
aad
cmp
cmp
rcll
jae
lea
cmpsl
mov
inc
xchg
addb
mov
inc
jb
inc
adc
cld
add
and
sub
insl
int3
inc
mov
sahf
test
pop
cmpsl
jb
lock
ljmp
or
out
pop
mov
xor
or
adc
ret
add
pop
mov
orl
cmp
pop
cmp
jnp
bound
adc
inc
push
mov
insb
loopne
bound
or
js
cmp
jmp
iret
jno
nop
imul
aas
push
shrl
jo
mov
out
mov
ss
inc
mov
rol
mov
loop
xchg
lcall
pop
push
in
lods
dec
stos
pop
jle
dec
mov
push
push
jmp
scas
push
lock
push
push
cmp
push
jle
inc
mov
pop
gs
mov
rclb
or
or
xor
xchg
in
les
jnp
pop
sarl
adc
pop
insb
xor
cmpsb
sbb
sub
mov
xchg
mov
mov
fsubs
jge
inc
inc
mov
jmp
stos
adc
inc
adc
xorl
adc
jnp
xor
rorb
xchg
sbb
jg
iret
cmpsb
sbb
aas
mov
inc
dec
and
jno
or
lcall
loope
rdtsc
lret
xchg
sarl
mov
mov
mov
xchg
addr16
mov
popa
xor
aam
fdivrl
nopl
mov
add
push
popa
cmp
xchg
xor
aad
inc
jb
pop
sbb
pop
inc
pop
inc
cmc
mov
cmp
sub
jle
aam
cmp
xchg
lret
inc
repnz
sahf
iret
imul
arpl
or
adc
mov
rcrl
sbb
fnstcw
or
dec
adc
adcb
mov
jge
pop
push
or
fucomip
or
icebp
fdivrs
jno
or
cli
adc
and
inc
cmp
jle
addr16
or
dec
jbe
out
xchg
sub
int
daa
xor
mov
lods
leave
lock
cmp
jl
adc
jae
xchg
cmp
stos
jecxz
sub
cmp
mov
adc
lahf
outsb
mov
jno
test
pushf
sbb
dec
jae
cltd
push
mov
push
sub
dec
xlat
add
pushf
sbb
das
cmp
stc
dec
jmp
pusha
jle
repnz
fdivs
dec
mov
cmpsl
mov
movl
mov
xor
mov
mov
sub
add
add
mov
xor
incl
div
mov
add
adcl
and
subl
pushl
xorl
pushl
call
movl
cmpl
movl
mov
jmp
mov
mov
jl
push
push
pushl
push
pushl
call
neg
sbb
addl
sbb
addl
sub
adc
movl
sbbl
movl
orl
mov
mov
and
or
adc
mov
and
xor
andl
pushl
adcl
pushl
call
or
pushl
movl
movl
movl
cmpl
mov
notl
jmp
mov
ja
push
pushl
pushl
pushl
push
pushl
pushl
push
call
or
and
xor
add
movl
adcl
movl
sbb
movl
movl
add
movl
xor
mov
cmpl
mov
mov
mov
jmp
movl
not
jbe
push
pushl
push
call
movl
movzwl
or
mov
mov
add
xor
and
andl
adc
mov
sub
mov
or
addl
and
mov
xorl
sub
pushl
mov
mov
incl
add
andl
and
mov
adc
jmp
pop
push
shlb
lcall
jle
adc
stos
in
adc
pop
adc
adc
fldt
sarb
mov
sarb
leave
test
cmp
je
mov
psrld
imul
je
std
or
shrl
mov
sbb
cmp
insb
sub
mov
arpl
cltd
idivl
or
icebp
add
xchg
inc
fsubl
ljmp
pop
stc
mov
aaa
add
mov
cmpsb
sub
das
adc
outsb
adc
mov
dec
or
mov
mov
cld
sahf
jno
push
subb
xchg
in
mov
xchg
aad
imul
jle
cmp
sub
call
fcmovu
cmp
ljmp
sbb
in
pop
xchg
dec
loopne
ljmp
mov
inc
andl
ss
sub
add
mov
call
lds
mov
fld
xchg
and
mov
loopne
stos
call
push
clc
cmp
stos
xor
mov
movsb
dec
jb
insb
mov
add
fisubl
sti
hlt
dec
push
inc
das
mov
cmpsl
sbb
in
xchg
fcoml
arpl
add
sub
inc
jns
leave
push
or
xchg
lock
sub
int
jns
adc
sti
xor
mov
mov
mov
das
loope
mov
sbb
hlt
cmp
mov
mov
fucomi
jnp
sub
cmpl
inc
push
inc
push
xchg
pop
notl
mov
jge
push
in
xchg
mov
mov
out
rclb
and
xor
dec
sbb
cmp
gs
xor
add
pop
mov
mov
iret
mov
cmp
sbb
jae
mov
push
add
or
rorl
sbb
fs
or
in
scas
ja
xchg
aaa
xchg
popf
int3
or
leave
mov
dec
pushf
mov
out
insl
pop
sbb
rcll
mov
add
pop
push
pop
cmpsb
shrb
es
push
pop
lret
dec
mov
pop
inc
mov
loope
jo
fmuls
rolb
sbb
jne
popf
jl
aaa
imul
and
xchg
add
xorl
mov
xlat
add
in
adc
lock
lds
push
dec
pop
xor
test
jmp
pop
test
sbbl
iret
shrb
js
imul
in
imul
adc
pop
jmp
call
pop
lahf
jl
xchg
pushf
testb
hlt
pop
ret
daa
imul
or
mov
in
into
scas
add
xor
andl
test
add
aas
cmp
call
int3
lods
adc
clc
adc
inc
das
mov
icebp
insl
lret
mulb
dec
movsl
push
mov
je
dec
ss
enter
and
jb
jbe
pusha
mov
xor
jl,pt
inc
lods
adc
ret
popf
xabort
out
mov
or
testl
mov
lret
ret
fdivrs
push
xchg
test
sbb
fcomps
aaa
mov
dec
and
sub
mov
orl
xor
adcl
and
pushl
mov
movzbl
and
mov
imul
sbbl
xor
subl
or
andl
mov
sub
pushl
call
andl
dec
movl
jne
sbb
movl
mov
subl
mov
movl
sbbl
mov
call
inc
lea
cmpl
mov
mov
jmp
mov
jbe
push
pushl
call
movzbl
add
dec
dec
sbb
sbb
mov
xor
xor
sub
add
mov
adcl
lea
mov
xor
mov
mov
cmpl
mov
mov
mov
not
jmp
movl
movl
jle
push
push
pushl
pushl
call
adc
sbb
and
or
and
sbb
adc
xor
mov
adc
mov
cmpl
mov
mov
movl
jmp
mov
jbe
pushl
push
call
mov
adc
and
or
orl
sbb
dec
xor
xor
movzwl
xor
shl
adcl
shr
or
movzbl
and
mov
xor
mov
cmpl
mov
movl
mov
movl
jmp
not
mov
jne
push
call
and
movzbl
adc
sub
movzbl
sub
movl
and
sub
mov
xor
mov
and
mov
xor
mov
mov
xor
xor
sub
or
mov
shrd
shr
inc
mov
and
mov
cmpl
mov
mov
movzwl
jmp
movl
mov
ja
push
push
pushl
push
pushl
push
call
sbb
add
mov
xor
mov
not
and
inc
mov
xor
xorl
xor
or
or
mov
adcl
push
sbbl
pushl
incl
lea
andl
push
andl
shl
orl
call
lea
sbbl
push
adcl
mov
orl
mov
xorl
lea
orl
push
mov
lea
mov
adcl
mov
adcl
mov
push
call
push
push
addl
pushl
xorl
jmp
nop
fwait
inc
stos
pop
sbb
dec
sti
adc
scas
std
jle
mov
adc
adc
adc
out
mov
add
int
xchg
sbb
test
and
out
mov
fcmovne
and
push
repz
mov
push
sbb
jmp
sbb
and
dec
jge
lret
fxch
cmc
sarl
mov
nop
and
lret
bndldx
daa
lret
mov
int3
adc
pop
fsub
test
jl
stos
shlb
movsb
and
and
push
push
xchg
cmc
add
lods
dec
stos
mov
cltd
mov
dec
or
push
nop
orb
arpl
sub
xchg
jp
sbb
mov
dec
insl
xor
cmpsb
and
and
push
inc
nop
or
push
arpl
mov
inc
lcall
roll
popa
subl
push
add
mov
jo
int
incb
ja
cmpsb
xchg
ss
dec
cmc
pop
add
lcall
xor
setp
xchg
icebp
jnp
jne
sti
mov
popf
lret
push
and
pop
test
or
idivb
pop
jl
pop
in
out
cld
fisttpl
in
dec
lods
fdivrl
mov
push
icebp
pop
jp
clc
popf
imul
push
dec
mov
popf
icebp
mov
mov
mov
movsb
sub
iret
mov
xchg
out
lret
sub
cmpsb
xchg
pop
aad
adcl
ret
mov
sub
xchg
dec
lods
pop
ficoml
sbb
xor
mov
fisttps
scas
lods
rcl
jb
pop
repnz
pop
rcrb
divl
push
out
mov
jne
outsl
das
push
jp
insb
push
hlt
xchg
dec
or
int3
lods
mov
lret
jmp
int
mov
test
popa
fildl
loopne
das
leave
xor
bound
jmp
test
cmp
insl
xchg
dec
fwait
out
aaa
bound
ja
pop
je
push
pop
cmp
or
xor
sub
add
cmp
ja
lods
sbb
adc
das
addb
jp
mov
jo
leave
xor
fsubs
mov
inc
mov
in
loopne
sar
jne
jnp
mov
pop
jecxz
test
xchg
inc
loop
lcall
movsb
dec
mov
lock
pusha
adc
roll
pop
frstor
xchg
lods
fnstenv
or
aam
scas
test
movsl
jns
incl
dec
mov
pop
js
push
out
int
jg
addr16
sub
imul
mov
cmp
mov
jp
mov
add
ret
out
jmp
negb
inc
sbb
loopne
lcall
mov
imul
ss
pop
xor
cmp
inc
push
in
jb
mov
in
cltd
xor
scas
pop
rcr
jno
inc
shlb
pop
add
loope
leave
push
jno
mov
ja
add
adc
lds
dec
mov
pop
cmpsb
insl
loope
sahf
add
mov
loop
shr
movsb
decl
cmp
add
mov
jmp
mov
jge
push
call
mov
add
add
add
xor
adc
xor
movzwl
and
sbb
mov
mov
cmpl
mov
mov
mov
jmp
movl
jne
pushl
push
push
call
or
mov
add
sub
sbb
subl
mov
adc
shr
adcl
shl
or
adcl
mov
xorl
xor
cmpl
movl
movl
mov
jmp
mov
mov
jb
pushl
pushl
call
not
mov
or
or
add
adc
mov
cmpl
mov
mov
mov
jmp
movl
jbe
pushl
call
xor
inc
add
adc
sbb
sub
sub
cmpl
movl
mov
jmp
mov
movl
jge
pushl
push
push
pushl
call
or
mov
mov
sub
add
orl
neg
movl
incl
xor
lea
mov
adc
mov
lea
mov
mov
or
mov
adc
mov
sub
sub
andl
lea
xor
subl
movl
cmpl
mov
movl
movl
jmp
movl
jle
push
push
pushl
call
sbb
addl
xor
mov
sbb
adc
adc
subl
movl
movl
movl
cmpl
mov
movl
mov
jmp
mov
mov
jl
push
call
and
movl
xor
or
xor
add
sub
add
adc
mov
mov
or
and
mov
mov
mov
mov
add
adc
xor
xor
and
mov
and
mov
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
push
or
or
push
push
call
mov
jmp
aaa
mov
add
aaa
dec
faddl
push
adcl
adc
lods
in
pop
mov
stos
cli
pop
mov
and
testb
sub
xchg
mov
jmp
stc
dec
xor
xchg
xor
mov
mov
jbe
or
sbb
pop
jno
push
jecxz
std
mov
mov
dec
popf
push
inc
in
loopne
shlb
mov
lea
inc
xchg
insb
divl
call
pop
rolb
pop
pop
jge
pop
scas
fisubl
sub
adc
lods
jns
into
punpckhdq
push
jp
es
aaa
push
in
test
stos
into
cmp
inc
adc
addr16
shl
or
lret
dec
fsubl
cwtl
push
mov
movsl
cmpsb
jp
adc
fistpl
lods
cltd
mov
mov
stc
and
enter
push
dec
das
cmp
dec
xor
mov
test
sbb
mov
mov
sub
cmp
popl
cmp
pop
divl
outsb
imul
mov
ljmp
xor
repnz
xchg
movsb
cld
test
mov
fcompl
push
mov
mov
lcall
cli
fisubs
pop
pusha
orl
mov
push
dec
push
loop
aas
push
mov
mov
sbb
inc
das
sbb
js
cmp
fcompl
aas
mov
mov
mov
adc
insl
sub
push
cmp
out
leave
aas
fwait
mov
fwait
imul
or
into
leave
jb
jno
jg
in
fidivrs
add
out
cltd
ja
xchg
pop
add
cltd
mov
sbb
dec
bound
cmpsl
std
jae
jge
shlb
or
fisubrs
add
inc
cs
aad
cmc
aas
jno
cld
sub
push
jmp
push
jno
rcrl
mov
pop
popa
ret
ja
in
sub
dec
mov
fadd
mov
mov
aas
inc
ja
stos
lock
inc
cmp
xchg
movsl
ss
rorb
push
out
fnsave
add
lret
stos
out
push
cmp
cs
cmp
sbb
add
js
fneni(8087
adcl
push
mov
jb
dec
out
jp
xor
cmp
data16
data16
scas
roll
adc
pop
pop
enter
push
hlt
push
fstpl
or
loop
je
adc
sbb
inc
fstpt
shll
jne
out
hlt
mov
mov
imul
iret
jns
xchg
cli
or
jl
jb
loope
sbb
es
test
jl
mov
repnz
jge
inc
fcmove
and
icebp
sahf
push
add
adc
and
arpl
test
std
mov
pop
adc
or
rcrl
add
cmp
add
insl
jmp
arpl
or
loop
test
or
dec
inc
push
fbstp
or
test
out
jg
sub
and
mov
scas
hlt
cmpl
and
dec
jb
mov
sub
mov
sbb
mov
cmp
jne
cmp
jmp
mov
and
fwait
iret
test
xor
mov
adc
adc
dec
stos
sbb
sbb
jle
and
xchg
lock
sub
lret
or
imul
push
sti
sbb
popa
je
lods
push
push
cbtw
lret
cmc
jl
cltd
inc
add
loop
aas
mov
xchg
iret
jb
mov
in
cmpb
push
lock
adc
add
repz
cwtl
loop
stos
xchg
stos
jo
jmp
sub
stc
inc
xchg
xorb
lods
repz
push
lcall
dec
mov
hlt
add
shl
test
cli
cwtl
decl
jnp
xor
inc
gs
fnsave
xchg
sub
mov
repnz
sahf
push
jne
push
mov
fs
mov
sbb
jae
mov
push
sbb
jecxz
or
dec
jge
mov
cld
andb
lret
jge
je
insl
push
lods
mov
fildl
mul
std
ret
mov
sub
jmp
inc
jne
sbb
add
or
shl
xchg
enter
add
cwtl
cld
icebp
xchg
nop
cmp
test
das
jae
xchg
sub
arpl
mov
add
cwtl
mov
mov
cmpb
dec
jle
fisttps
shll
inc
es
mov
fcmovnbe
add
lahf
pop
je
int
jne
inc
jg
xchg
push
mov
xlat
dec
or
adc
rorl
adc
pop
test
sub
int
adc
cwtl
in
roll
jmp
dec
in
in
shrl
or
daa
cli
cmc
and
test
inc
ret
dec
aam
dec
test
dec
inc
add
testb
or
incl
push
sar
add
imul
sbb
mov
xor
cli
imul
sbb
push
ds
mov
cmp
cli
enter
loopne
fs
lcall
filds
cmp
mov
pop
xor
mov
pop
cwtl
jp
or
xor
mov
popa
mov
sub
outsl
pushf
shrl
xor
or
cli
push
push
and
dec
xor
inc
filds
cmpsl
aam
mov
aas
fld1
pop
cwtl
stc
les
or
xchg
ret
scas
addr16
popa
pusha
sub
xchg
push
pop
shr
mov
and
cltd
or
jne
stos
std
inc
out
mov
cli
sub
dec
out
cmp
or
lock
out
sbb
push
sbb
add
mov
pop
data16
popa
add
vpmaxsw
fisubrl
cmc
push
rcrb
mov
inc
xor
les
cwtl
xchg
mov
add
lret
aas
scas
insb
jb
mov
or
dec
and
push
adc
mov
pop
in
hlt
jmp
and
add
push
loop
repz
add
dec
and
jae
adc
mov
jae
je
movl
movl
movl
movl
mov
mov
mov
mov
add
adc
xor
xor
and
mov
and
mov
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
push
push
xor
xor
push
push
call
mov
mov
push
push
push
push
call
mov
mov
push
push
push
push
call
mov
mov
add
mov
adc
mov
cmp
jne
jmp
sbb
je
sub
cmp
and
sbb
pop
adc
adc
ds
call
ret
sbb
mov
outsb
jb
out
fisubrl
in
out
fidivl
fwait
mov
cs
lahf
add
ficoms
sub
lret
sbb
push
jnp,pn
adc
arpl
lock
or
push
fwait
in
fwait
jecxz
fstpl
and
inc
clc
stos
addb
xor
adc
xor
push
jns
jmp
in
mov
divb
add
outsb
out
sbb
fmuls
cmpsb
mov
push
jne
xorl
and
sub
cltd
js
sub
jns
imul
sub
in
jecxz
fcmove
fisubs
ret
and
push
push
sbb
jbe
rcll
popf
fdivs
cmp
lret
pop
sub
les
call
test
sbb
xor
inc
movsl
jmp
ja
cwtl
xchg
mov
pop
aad
add
mov
sub
dec
jl
sub
mov
jno
fsub
mov
in
ss
pop
out
mov
and
outsl
sub
xchg
clc
add
cmc
inc
mov
fmul
pop
ja
data16
mov
xor
ret
cmpsl
mov
insb
lods
notb
sbb
test
mov
stos
in
sub
cmp
xor
mov
sahf
pop
js
call
lcall
xor
adc
pop
out
pop
adc
and
insl
jnp
stc
cwtl
xor
stos
sub
adc
gs
dec
repnz
dec
std
push
mov
sbb
cs
pushf
mov
sbb
rcr
dec
fsts
fldt
or
ljmp
aaa
idivl
scas
adc
push
lods
fstl
idivl
ss
mov
sar
jg
dec
sub
sahf
pop
leave
xchg
sarb
jmp
les
dec
push
lret
add
outsb
add
sub
ss
adc
fwait
xchg
inc
mov
adc
adc
lahf
repz
push
loopne
sbb
mov
lea
shll
sar
in
xchg
push
cmpsb
cmovbe
fidivrl
sub
hlt
xchg
cmp
popf
and
stos
sbb
sub
ljmp
sbb
mov
fsub
and
jb
je
sbb
adc
fst
stos
push
shr
push
push
and
inc
or
dec
movsb
ret
sbb
aad
lret
jno
movsl
pop
bound
jns
cld
lock
jo
pop
insb
sub
aaa
pusha
push
lods
mov
cmp
push
sub
pusha
lds
shr
pushf
shrl
adc
int3
inc
in
pop
xchg
dec
xor
pop
cmp
mov
jge
adc
fwait
xorl
mov
ss
stos
out
push
data16
jl
dec
or
clc
fistpll
rcll
js
pushf
pop
mov
lahf
sbb
fwait
sbb
inc
test
pop
dec
cltd
ljmp
iret
pop
fwait
pop
fcoms
xchg
sbb
loopne
fwait
cmp
shrl
cltd
into
and
cmp
je
mov
mov
mov
xor
xor
xor
shld
shl
cmp
jne
cmp
je
mov
cmp
je
mov
mov
mov
mov
xor
xor
shrd
mov
shr
shl
or
mov
xor
or
cltd
cmp
jne
cmp
jne
movl
movl
mov
mov
mov
mov
xor
xor
xor
shld
shl
cmp
jne
cmp
jne
movl
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
cmp
jne
mov
mov
mov
mov
mov
mov
movzwl
mov
and
mov
or
mov
add
or
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
or
mov
jmp
adc
or
addb
dec
insl
adc
pop
adc
adc
inc
shrd
lret
xchg
jnp
jne
jge
pop
in
inc
push
inc
fwait
in
mov
adc
inc
and
shrb
gs
cmp
xchg
dec
outsb
outsb
add
rclb
sbb
and
sbb
mov
in
cmp
fisttpl
out
mov
xor
and
rcrl
xor
test
jns
roll
repz
pop
dec
push
nop
fcoml
test
hlt
rcrl
cmp
outsb
cmp
pop
jns
cmpsl
out
in
push
ret
fwait
popf
dec
inc
ljmp
jmp
cmpsb
inc
add
inc
sahf
test
popf
jl
enter
xchg
push
push
cmp
xchg
inc
popa
lods
mov
dec
xchg
test
inc
enter
inc
popa
dec
cmp
inc
cmpl
sbb
pop
int
pop
adc
xor
push
pusha
notl
ja
fdivrl
rcll
clc
out
in
mov
xchg
inc
mov
idivb
inc
mov
xchg
fsubrs
sar
cmp
xchg
gs
lret
jno
add
or
insl
mov
mov
std
mov
mov
xchg
popf
pop
insl
imulb
mov
aad
jge
pushf
sub
or
or
mov
jge
int3
ret
popa
jnp
imul
cmp
sub
cmp
sbb
fsub
push
dec
fs
push
int
insl
inc
adc
adc
mov
jno
jns
mov
push
and
je
sub
scas
sti
mov
sub
mov
leave
fnstcw
inc
shlb
cwtl
xor
xchg
mov
gs
push
add
std
rcrb
cld
loope
mov
fimuls
add
jl
jmp
into
cmc
pop
xchg
aam
xchg
out
pop
mov
in
jns
ret
icebp
fs
or
shll
mov
push
je
stos
pop
and
lea
cs
jmp
or
mov
xchg
fimull
incb
repz
in
stc
data16
mov
sahf
xor
rcrl
bnd
push
jae
xlat
add
or
push
test
cld
or
jne
lods
inc
aam
insl
and
adc
into
fstl
shrb
xlat
sbb
push
xlat
cwtl
add
addl
xchg
in
cli
sub
push
xor
test
daa
jge
sbb
mov
test
aad
rcrb
or
sahf
push
xchg
das
mov
add
mov
in
push
dec
out
das
fs
pop
mov
dec
sbb
mov
fildl
movsb
jl
insl
cmp
or
sub
add
in
ret
and
mov
push
cltd
xchg
outsb
popf
cmp
push
insl
ljmp
dec
mov
lock
repnz
mov
and
push
enter
pop
fisttpll
clc
ds
push
cmp
and
and
or
mov
sub
mov
sub
mov
cmp
jbe
mov
mov
mov
mov
movzwl
mov
or
mov
sub
mov
or
imul
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
lods
test
jmp
insl
pushf
inc
fs
xchg
loopne
xchg
arpl
adc
adc
fstps
pop
sbb
mov
inc
lock
hlt
insb
notl
push
cmp
sahf
dec
lock
repnz
fcoml
insb
mov
scas
and
xchg
movsb
or
jl
out
pushf
inc
or
loope
enter
daa
jo
cmp
sub
popf
mov
jno
orl
dec
int3
and
sub
test
xor
cmp
aaa
xchg
scas
push
mov
push
lds
inc
xor
add
jae
pop
push
flds
xlat
push
lret
inc
call
int3
mov
sbb
xor
dec
mov
inc
pop
sub
fsubrl
loop
daa
pop
popf
mov
call
sbb
sub
push
and
xchg
int
jmp
scas
mov
aaa
add
xchg
cwtl
jg
popa
rclb
mov
cltd
movsl
or
loope
sub
inc
inc
mov
stos
xor
push
int
sarb
xor
cld
push
pop
imul
dec
xchg
adcl
sbb
mov
adc
xchg
rcll
addr16
push
cmp
jae
pop
inc
nop
adc
or
daa
ret
leave
sbb
lds
lock
inc
mov
fbstp
or
call
loopne
pop
outsb
mov
cmp
or
mov
jne
push
int3
xchg
fwait
clc
adc
aam
imul
mov
pop
or
push
xor
jl
lock
std
test
in
push
push
mov
lcall
movsb
inc
aaa
in
sbb
shll
push
pop
cs
push
mov
cmpsb
sbb
je
pushf
jmp
sbb
mov
into
push
in
nop
mov
mov
ds
sub
push
dec
jo
dec
test
xorl
lock
lahf
mov
jns
adc
fnsave
jmp
add
push
xor
add
aas
mov
jecxz
and
int3
push
or
dec
sbb
ficomps
mov
lcall
xchg
sub
push
pop
in
in
sbb
and
dec
sub
aas
push
xchg
push
push
repz
jb
fwait
pop
mov
mov
aaa
out
pop
jno
or
mov
xchg
rcll
out
cmpsb
jmp
pop
add
in
inc
pop
push
fisttpl
movsl
jo
cld
das
cmpsl
inc
add
std
arpl
insb
shr
dec
sti
dec
dec
and
cmp
push
lock
in
push
sub
lcall
mov
or
and
cmp
mov
subl
xchg
repnz
movsb
xor
mov
push
lock
xor
inc
cs
fcompl
pop
iret
sbb
int3
adc
addr16
dec
cmp
shlb
flds
sti
ds
aad
ror
mov
cmpsb
cmpsl
flds
dec
ret
ja
mov
sub
mov
xor
mov
imul
mov
and
mov
and
mov
cmp
ja
mov
mov
shrd
shr
mov
mov
xor
xor
or
jmp
mov
test
cwtl
lods
add
pop
adc
pop
adc
adc
dec
pop
lret
push
mov
out
mov
inc
hlt
mov
inc
loope
in
mov
mov
jo
hlt
push
adc
dec
loope
pusha
loope
jge
faddl
pop
jmp
xor
sti
push
nop
icebp
jp
push
cmpsb
or
out
push
pop
lods
repz
fsubl
or
jb
adc
aam
lea
cmp
call
xchg
sahf
inc
mov
in
sbbb
adc
mov
mov
cmp
sub
scas
lock
int3
and
rolb
mov
rorl
push
mov
sub
pop
cmp
dec
dec
lock
adc
and
jno
sbb
pusha
inc
js
adc
mov
xor
jecxz
inc
mov
inc
jecxz
loope
mov
mov
popa
pop
dec
mov
sbb
pop
in
shll
push
sbb
sub
xlat
mov
xor
adc
push
js
jge
mov
add
dec
lock
lcall
fwait
in
and
dec
cmpsl
dec
gs
adc
pop
lds
sbb
xchg
xor
push
das
lock
xor
jo
mov
stc
adc
enter
jmp
or
and
jmp
mov
pop
cs
scas
push
inc
inc
mov
aas
fnstenv
notb
jo
in
inc
xchg
or
mov
mov
into
inc
sbb
sti
ret
in
jp
xor
mov
stc
adc
fwait
inc
sahf
mov
jb
scas
add
add
pushf
repnz
repnz
divb
push
fiadds
imul
xchg
jp
sbb
clc
lret
sub
mov
pop
cmpsb
xor
test
pop
or
cli
xor
jle
mov
psraw
mov
orb
dec
ljmp
push
dec
loope
push
dec
sbb
xchg
aas
push
into
jo
or
xor
pop
push
clc
mov
mov
sbb
loop
pop
gs
dec
pop
jp
adc
mov
adc
incb
sub
mov
xor
pop
aaa
ret
mov
mov
push
pop
mov
pushf
ds
jo
mov
push
pusha
cmp
fstl
out
jno
insb
push
out
xchg
mov
cltd
ja
and
mov
mov
ffreep
les
pop
sbb
arpl
data16
mov
sar
imul
lret
mov
nop
dec
sbb
add
jle
outsl
or
cwtl
les
rolb
mov
cli
sbb
or
out
ret
mov
out
or
cmp
xor
mov
loope
das
jb
in
pop
sub
jge
rolb
mov
pop
push
je
sbb
cmp
out
add
cli
xor
pop
rcrb
xchg
xchg
adc
sbb
in
pop
sub
pop
dec
xchg
das
xchg
pop
fwait
xor
bound
mov
sub
mov
push
push
push
jmp
jne
pcmpgtb
sbb
aaa
data16
sbb
push
pop
adc
pop
adc
adc
xor
daa
pushf
or
popf
loop
fadds
lcall
lret
add
xchg
cld
outsb
push
fdivl
scas
add
xchg
pop
stos
js
bswap
in
and
loop,pt
sub
cmp
fsts
add
rep
loop
js
nop
movsb
mov
pop
add
js
sub
add
lock
out
loopne
call
dec
imul
outsb
fisttpl
mov
scas
ss
sub
mov
mov
add
adc
push
adc
mov
lea
cmp
lea
aas
out
mov
sub
clc
and
mov
adc
lahf
outsl
add
cmc
xchg
in
mov
sub
iret
sti
inc
lods
sub
cmp
push
pop
daa
cltd
arpl
lock
pop
bswap
add
mov
clc
lods
cmp
jp
cmc
out
shl
arpl
je
testl
push
add
push
outsl
pop
ss
rsqrtps
loopne
inc
pop
pop
add
sub
xchg
icebp
xchg
cmc
test
dec
sbb
add
sti
stc
pop
push
pop
cmp
icebp
lret
and
pop
add
into
int3
fbstp
sbb
in
movsb
lea
testb
test
add
inc
cmpsl
dec
lahf
rolb
xchg
xchg
jmp
in
popl
imul
sub
and
mov
cmp
lock
movsl
mov
dec
sub
cs
sbb
leave
jnp
fs
repnz
loop
cmpsl
lods
pop
pop
leave
nop
add
or
repnz
cs
call
es
adc
inc
outsb
insb
cmp
insl
inc
ficoml
sub
outsb
aas
cmp
fstps
lea
je,pn
loopne
mov
test
push
cld
lret
and
sub
test
test
mov
and
lea
fcoms
dec
fnstenv
and
hlt
sub
xchg
fcompl
mov
daa
inc
ret
xor
mov
int3
lcall
sbb
ficoms
mov
xor
jns
mov
es
cli
jmp
jle
fsubr
dec
stos
jecxz
xchg
mov
loope
push
xchg
les
push
andl
mov
clc
clc
jp
mov
push
mov
push
inc
cmp
dec
bound
push
les
cmpb
push
mov
mov
mov
js
movsb
std
lods
imul
nop
outsb
or
push
dec
repz
fstpl
movsl
rcll
insl
inc
sbb
cmp
sub
into
loopne
cmp
pop
fcomps
jle
nop
aad
cwtl
mov
ljmp
xchg
sub
sbb
and
insb
cmp
xchg
and
and
xor
negl
xchg
movsb
mov
sub
xlat
jae
pop
mov
stos
dec
pop
mov
out
data16
inc
xchg
mov
jne
sub
test
lret
cmp
pop
lcall
bound
jns
adc
cmpl
sub
jecxz
and
js
lea
push
lea
push
shl
call
pushl
pushl
pushl
pushl
call
mov
mov
shrd
shr
mov
mov
shl
xor
xor
or
mov
mov
mov
mov
shrd
shr
mov
mov
shl
xor
xor
or
mov
mov
mov
mov
mov
cmp
jne
mov
mov
mov
cmp
jne
movb
movb
jmp
pushf
cmpsb
mov
scas
fwait
cmp
pop
mov
pop
adc
adc
sbb
in
adc
cmpsl
xlat
mov
mov
or
rclb
jp
loope
stos
out
popf
mov
sub
scas
cmpsl
movsl
push
jb
jecxz
out
into
arpl
pop
int3
pop
xchg
add
mov
jge
add
xchg
cltd
dec
fcmove
scas
push
fs
mov
bnd
push
mov
fcomp
lcall
push
fs
fisttpll
sahf
in
lock
dec
ds
mov
fnstcw
push
pop
aam
je
scas
leave
stos
or
ss
pusha
outsb
outsl
mov
jl
push
fisubl
push
in
icebp
add
mov
mov
sub
dec
in
insb
repnz
jbe
jb
jb
aaa
out
push
imul
ljmp
out
shl
test
scas
sbb
sbb
dec
mov
sub
mov
fisubs
adc
js
insb
mov
sbbl
xor
clc
outsb
mov
roll
mov
shlb
insb
aaa
test
mov
ljmp
cmc
cmp
std
out
mov
mov
adc
mov
sbb
mov
das
bound
dec
fwait
pop
and
xor
test
pusha
or
xor
lret
out
mov
sti
add
lret
inc
rcl
shll
dec
cmp
pop
movsb
jle
inc
lods
pop
insl
xor
cltd
insb
mov
cmc
sub
outsl
cs
or
dec
dec
leave
insb
add
shlb
nop
inc
sbb
popf
cmp
stc
fnstsw
pop
shlb
mov
loope
dec
idivl
inc
repz
rclb
xchg
dec
pop
fisubl
fs
pop
jns
flds
push
push
ss
in
mov
dec
and
jmp
inc
push
jae
and
cmp
push
cmp
or
in
insb
sub
pop
cld
test
scas
add
add
mov
inc
fadds
loopne
inc
fs
jp
mov
mov
push
sub
repnz
xchg
int3
jno
ss
or
mov
adcl
lret
add
nop
adc
push
adc
std
loopne
push
testl
mov
pop
cltd
mov
arpl
test
loop
inc
cmc
ss
mov
sbb
test
dec
in
std
iret
or
insb
repz
adc
fisubl
and
pusha
cltd
pusha
lcall
and
pop
ljmp
adc
bound
addb
dec
popf
pop
aas
aam
xchg
cmp
or
cs
pop
movaps
in
and
cmpsl
pop
sub
lcall
xorl
lret
cld
jnp
push
cmp
xor
into
stc
shlb
sub
add
jp
in
xchg
test
push
dec
cmp
mov
inc
mov
jnp,pn
dec
test
cltd
xchg
mov
mov
pushf
in
lret
mov
mov
add
insl
movb
mov
mov
or
sub
mov
sub
jmp
sbb
insl
imull
sub
bound
inc
adc
pop
adc
adc
and
fnstsw
pop
cmpsb
fwait
mov
pop
lcall
lret
int3
gs
xchg
dec
imul
dec
push
jb
or
mov
mov
mov
int3
popf
dec
xchg
push
xor
cmp
jg
lret
mov
jecxz
je
aas
popf
movb
std
int
dec
jne
sti
lcall
xchg
movsl
movsl
adc
les
lret
mov
das
test
mov
test
adc
cmp
in
jg
push
adc
xchg
out
repz
lahf
scas
mov
enter
fdivrs
out
mov
adc
pushf
jo
jle
dec
hlt
test
jbe
shlb
jl
jbe
fadds
push
or
shlb
imul
and
push
push
test
jge
push
scas
jmp
push
loopne
outsl
outsl
stos
mov
lods
inc
dec
dec
addr16
scas
xor
stos
test
cmpsb
xchg
jmp
test
in
sub
leave
push
arpl
aam
std
int
mov
clc
add
pusha
push
xchg
repz
push
dec
mov
mov
aaa
addr16
movsb
xor
add
sub
les
outsl
loopne
insl
cmp
sub
test
mov
int3
or
dec
fisttpl
cmp
inc
mov
cwtl
je
xor
mov
cli
stc
sbb
jns
inc
dec
in
mov
lock
sub
push
cmc
in
fbld
inc
ss
cmp
loope
dec
lods
dec
leave
cmp
in
ja
sbb
add
out
cli
hlt
test
test
xor
mov
adc
cmp
mov
and
lods
push
gs
xchg
out
mov
pop
push
mov
pop
filds
push
cwtl
inc
lods
inc
into
aas
test
lods
push
mov
outsb
mov
push
dec
divb
pop
cmp
imul
sub
inc
push
jo
pop
pop
shrb
sub
cmpb
outsl
out
mov
out
out
cwtl
cmc
pop
aaa
jecxz
rcl
lock
mov
lock
jnp
insl
in
mov
xchg
aad
jne
rsqrtps
mov
scas
loopne
hlt
lcall
hlt
dec
aad
and
mov
pop
loop
loopne
sbbb
cmp
mov
in
adc
callw
xlat
movl
mov
xchg
pop
and
sbb
inc
push
push
sbb
push
test
enter
fidivrl
lea
int
xchg
arpl
add
imul
sbb
test
xchg
xor
xchg
or
jno
loop
xor
mov
arpl
in
repnz
mov
lss
push
mov
es
cwtl
test
jge
mov
inc
push
jl
sbb
shrb
out
jns
xor
dec
subb
mov
sbb
or
sbb
cmp
daa
add
fidivrs
push
movzbl
movzbl
cltd
idiv
movzbl
jmp
rclb
dec
push
add
mov
cli
sbb
js
inc
adc
pop
adc
adc
cmp
pop
ds
rcr
dec
outsb
inc
jg
add
pop
loopne
mov
mov
aad
adc
xor
xor
lods
insb
shrb
ljmp
in
and
mov
ljmp
lahf
in
xchg
mov
pop
dec
shrl
int
pop
or
mov
sub
imul
xchg
push
pusha
roll
outsb
pop
sbb
jo
cwtl
les
outsl
mov
push
jmp
movsb
pop
mov
dec
and
imul
adc
mov
push
lods
adc
scas
mov
faddp
jmp
mov
jo
dec
dec
lahf
and
pop
mov
dec
and
cmp
mov
shlb
test
ja
inc
divl
bound
dec
mov
push
sbb
je
pop
dec
and
stos
or
lret
bound
pop
int
and
xor
xorl
or
inc
iret
jge
and
inc
push
aam
das
cltd
inc
add
pop
jo,pt
jle
push
jge
mov
dec
mov
dec
add
or
lret
xchg
nop
sbb
nop
pop
xor
imul
jg
push
je
push
and
mov
imul
and
idivb
sbb
imul
xchg
adc
cld
loop
aad
js
ficomps
lcall
dec
mov
imul
add
or
pop
inc
sbb
loope
xchg
pop
mov
out
xchg
or
jle
lods
setae
int
dec
push
or
test
pushf
leave
ret
jae
adc
int3
subl
xlat
out
jbe
loopne
pop
sti
sub
pop
inc
es
adc
jnp
xchg
inc
aas
sub
xchg
xlat
lret
jae
mov
cli
cmp
cmp
andb
les
movsb
add
mov
out
or
push
or
adc
ret
mov
dec
insb
insl
sbb
cmp
ljmp
bound
loope
imul
xchg
mov
and
inc
lods
sbb
std
fcoml
in
iret
addr16
inc
adcb
out
pop
jp
int3
mov
lock
xor
out
cmc
mov
aas
ficoml
mov
xor
fildll
cmp
sahf
jo
ljmp
and
test
bound
dec
mov
pop
and
loope
daa
pusha
adc
aam
inc
cmpsl
push
mov
iret
cmpb
sbb
fwait
push
pop
cmp
test
xchg
pop
push
add
xor
xchg
fidivl
clc
dec
jae
mov
cmpsl
mov
add
inc
imul
mov
imull
cwtl
xchg
test
gs
cmp
fwait
sbb
test
dec
arpl
push
test
movsl
movsl
fdivrl
sbb
cmp
stc
sahf
add
or
mov
movb
movb
movb
movb
movb
mov
mov
jmp
iret
xchg
mov
dec
daa
mov
pop
mov
mov
inc
cmp
adc
adc
jno
loop
xor
push
push
add
outsl
outsl
fcmovnb
bound
icebp
and
dec
jo
shrl
mov
in
pop
cli
add
cs
jno
mov
mov
int3
sub
jge
mov
cs
pop
and
mov
insb
jp
ss
cmp
inc
pop
out
push
cmp
pop
addb
outsb
scas
sub
sbb
pop
in
mov
pop
hlt
and
mov
test
and
mov
push
sub
pop
out
fs
sar
fwait
inc
mov
push
aaa
mov
das
ds
stos
mov
fidivrs
sub
sahf
jle
or
jl
push
push
loop
fists
inc
movsb
stos
and
loopne
lds
cmp
add
lahf
dec
xchg
int
add
in
scas
mov
xchg
aaa
pop
pop
lods
jae
mov
inc
outsl
adc
and
jne
pop
outsl
imul
pop
xlat
test
and
inc
jnp
push
dec
inc
bound
inc
mov
push
add
aad
out
popa
aaa
dec
aad
push
outsl
adc
and
jnp
int3
sbb
sbb
lret
jmp
push
test
xchg
cmpsb
loopne
pop
jge
mov
fwait
lds
xchg
bound
inc
iret
sub
aaa
dec
xor
inc
adc
dec
xor
adc
cwtl
cs
loopne
add
dec
and
mov
or
push
cmp
ret
loopne
testl
mov
es
pop
sub
dec
cltd
push
pop
dec
fwait
aaa
rcrb
sub
movsl
in
pusha
sbb
out
dec
cmovg
int
mov
enter
xor
cmpsl
lret
fcoms
aas
fbld
cs
stos
xchg
incb
mov
jno,pt
push
and
add
sti
imul
jnp
or
mov
and
xchg
in
iret
loopne
jecxz
in
and
fnstenv
outsl
jno
xchg
outsl
xor
lcall
adc
pop
cltd
adc
ss
mov
jl
mov
dec
inc
cld
pop
insl
movlps
sarb
cwtl
pop
push
hlt
adc
outsb
cmp
movsl
inc
fdivrl
dec
movsb
lds
inc
out
push
test
pop
sbb
and
cld
xor
movsb
out
add
push
ljmp
add
lea
rclb
push
mov
popf
ficomps
inc
lods
pop
int
loopne
stos
fidivl
or
add
push
icebp
and
dec
icebp
and
pop
out
inc
test
push
cld
push
pop
cmc
push
icebp
bound
jns
dec
rcrl
jo
insl
sub
adc
std
push
xchg
push
jp
xchg
out
xor
xchg
addr16
or
dec
je
xor
andb
pop
sub
shll
cli
pop
xor
scas
mov
push
movsb
cmp
in
mov
and
test
mov
int3
xchg
jnp
loope
pop
mov
add
sbb
cld
ds
and
mov
imul
mov
movzbl
movzbl
and
mov
movzbl
cltd
idiv
mov
cmp
je
lea
push
lea
call
cmp
jne
cmp
jne
jmp
mov
mov
mov
mov
add
adc
mov
mov
push
push
lea
push
call
mov
push
pushl
lea
push
call
mov
mov
mov
mov
mov
mov
mov
lea
mov
add
movl
movl
mov
and
add
jmp
and
mov
mov
dec
fidivrl
mov
adc
pop
adc
adc
pop
jnp
das
and
or
hlt
dec
mov
cld
cmpsl
add
scas
cmp
test
push
mov
inc
test
testl
and
cli
add
mov
cmp
aas
inc
popa
dec
cmp
pushf
fcmovnb
pushf
lahf
inc
outsl
xchg
gs
and
and
mov
mov
cs
stos
add
add
sub
add
fisttps
push
pop
leave
inc
xchg
adc
and
or
repz
pop
gs
and
or
int
xchg
pop
rorl
jecxz
lea
mov
mov
or
clc
mov
or
pop
lods
jnp
pop
mov
xchg
add
push
pushw
mov
xchg
fnstsw
cltd
jle
inc
xlat
loop
push
mov
rorb
xchg
add
push
popf
adc
mov
fs
neg
xor
cmp
rorb
scas
pop
sbb
enter
cmp
popa
adc
je
lock
lock
add
call
scas
scas
sti
xor
xchg
in
fldenv
mov
call
add
adc
add
ja
mov
mov
sub
jno
lret
fsubs
mov
in
cli
out
pusha
cld
lea
divl
out
push
ret
adc
sub
mov
adc
mov
ss
das
in
neg
js
xchg
mov
fcompl
inc
inc
sarb
cs
daa
in
shll
mov
inc
xchg
mov
lods
cmpsl
rolb
ret
push
cmp
xchg
add
add
inc
add
xchg
addr16
gs
dec
test
adc
push
sub
sarl
cmp
jmp
pop
xchg
divb
rorb
mov
xacquire
mov
mov
scas
fcompl
add
clc
dec
int3
sub
aam
or
test
movsb
cmp
jge
arpl
insb
repnz
insl
jno
push
lea
jno
test
pop
lcall
clc
cmp
push
mov
pop
and
push
in
pop
pushf
dec
stc
hlt
mov
or
imul
test
pushf
fnstsw
lcall
xchg
notb
fnsave
push
rol
leave
push
arpl
test
lret
cmp
mov
nop
aam
cmp
dec
cld
aad
ja
cmp
rcll
and
cmc
movsb
xchg
push
jg
or
dec
test
imul
gs
loope
push
testl
sti
cmp
ret
mov
pop
sub
lock
pop
mov
in
lods
adc
stos
leave
xlat
mov
push
mov
lock
adc
in
scas
repnz
dec
pop
loope
aam
xchg
mov
stos
mov
sbb
mov
pop
xchg
ficompl
sti
xor
jg
mov
sbb
inc
xor
nop
xchg
mov
sub
int3
jmp
ljmp
and
mov
movl
mov
mov
or
add
cmp
je
mov
mov
mov
xor
xor
xor
shld
shl
cmp
jne
cmp
je
mov
mov
mov
mov
xor
xor
shl
shr
or
xor
xor
xor
and
cmp
jne
cmp
je
mov
cltd
mov
mov
cltd
shld
shr
xor
shl
or
or
mov
mov
xor
xor
mov
cmp
jne
cmp
je
pushl
jmp
sbb
sbb
stos
int
stos
mov
xor
adc
adc
lret
cld
ljmp
mov
stos
dec
and
xchg
mov
pop
lcall
mov
mov
pop
dec
jge
test
jo
push
movsb
icebp
sbb
cmpsb
mov
mov
mov
dec
ds
push
mov
ret
jae
int
push
movsl
stc
xchg
imul
jl
cmp
pop
mov
cmp
mov
in
leave
sbb
js
fsubrl
add
fnstcw
push
lods
into
lret
sub
cmp
or
loop
out
loop
andb
stos
clc
dec
ljmp
insl
sahf
movsb
lea
adc
adc
sbb
ret
and
xchg
je
xor
sbb
pop
inc
or
pop
cmp
jp
dec
mov
arpl
or
into
cwtl
cli
push
fdivs
repz
out
cmp
sti
pop
and
push
jmp
shl
jno
push
mov
std
add
cltd
sub
or
mov
xor
sbb
or
insl
out
movsl
mov
mov
xor
aad
lock
ftst
jne
fstpl
sub
aad
or
cmp
cmp
out
add
rcll
adc
and
jecxz
inc
jnp
sub
mov
in
adc
roll
popa
mov
fisttps
push
inc
xchg
andb
cs
mov
ret
adc
outsl
jne
imul
fidivs
sub
push
mov
test
pop
sub
mov
sub
and
stos
fstpt
dec
xchg
mov
push
mov
mov
sti
iret
cmp
mov
ficompl
xor
in
sbb
xchg
scas
sbb
add
or
dec
addr16
lods
dec
sbb
sbb
dec
mov
scas
adc
leave
leave
jl
or
mov
adc
xchg
xor
inc
or
int3
int3
lds
mov
cmp
movsl
aaa
jle
das
hlt
add
cltd
loop
test
push
fiaddl
mov
mulb
sti
fdivs
ds
jge
pop
mov
or
push
and
fmull
aas
stos
insl
jno
push
aad
jmp
in
rorb
orb
andb
icebp
mov
mov
mov
insb
mov
stos
fdivrl
movsl
sbbl
push
jnp
or
xor
mov
xchg
or
inc
leave
add
aaa
mov
jle
stos
cmp
bound
push
cmp
cmp
imul
inc
iret
movsl
lds
out
int
inc
dec
addr16
add
lds
sbb
sub
sbb
jbe
xchg
mov
arpl
or
cmpsb
jecxz
sbb
pop
and
lods
jo
push
loope
outsl
ret
or
je
dec
jecxz
or
orb
push
test
rcr
jbe
mov
fisubs
or
lea
inc
mov
pushf
push
jmp
sbb
or
pushl
mov
mov
pushl
mov
call
mov
mov
mov
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
adc
jmp
jne
rcl
cmp
adc
scas
insb
shr
mov
int3
movlps
test
mov
loope
ror
into
sbb
push
ret
loope
or
dec
xchg
and
lock
jmp
movsl
cmp
aam
hlt
mov
bound
sbb
test
mov
out
mov
mov
xlat
or
xchg
dec
pushf
xchg
std
dec
in
mov
jno
data16
scas
jp
jne
lahf
sarl
dec
or
loopne
ljmp
cmp
hlt
mov
adc
jne
mov
jo
out
push
push
popf
inc
or
and
fisttpll
push
cmp
mov
fmull
pop
aaa
lock
xlat
repnz
mov
aad
and
cwtl
sbb
add
addr16
xor
push
movsb
sub
or
push
mov
add
hlt
pop
movsl
adc
push
push
pop
ljmp
jecxz
adc
popa
jno
jno
movsl
cmp
mov
adcl
lods
jge
pop
call
jl
cld
jo
mov
sub
sub
or
ja
stc
imulb
jo
cmpsl
popl
sub
push
jge
mov
stc
pop
inc
movsb
mov
xchg
lret
shrl
mov
cmp
pusha
ja
notl
xchg
insb
lods
das
int3
lret
jmp
xor
rcrb
call
loopne
cli
and
pushf
mov
bound
mov
jne
cmpsb
jnp
xchg
nop
xorb
stos
fmuls
xor
and
jge
test
add
mov
mov
dec
inc
mov
mov
andb
push
pop
outsl
out
adc
xor
adc
add
cmc
xchg
xor
xor
cmpsb
xor
or
icebp
movsl
incl
adc
stc
les
js
jg
lret
sbbl
push
in
lds
xor
mov
enter
and
out
mov
je
jl
cwtl
jae
dec
sub
and
pop
mov
push
adc
jmp
jb
dec
adc
jb
movsl
jmp
and
adc
mov
lret
jmp
xchg
inc
jle
cltd
xor
push
bound
mov
jecxz
sar
mov
push
aam
mov
jb
in
or
loope
pop
or
call
mov
icebp
mov
dec
jo
jmp
mov
leave
sbbl
add
cmc
outsb
xchg
outsb
ss
loopne
ljmp
push
dec
cwtl
fnstsw
mov
and
into
push
xchg
sbb
jge
daa
dec
mov
lcall
sbb
fldcw
loop
jb
fbld
push
outsl
sbb
adc
pop
inc
ret
jae
repz
dec
cmpsl
ret
loopne
xchg
shl
outsb
pushf
and
jle
jae
cmp
xor
stos
pop
xorl
lods
filds
jge
sbb
loope
lcall
movl
loopne
jle
pop
mov
lods
aam
and
xor
pop
sub
push
or
js
jnp
lret
fdivl
and
mov
aam
pop
adc
dec
jmp
outsb
add
popa
dec
mov
push
test
out
aam
mov
ficompl
inc
push
cmp
mov
dec
jae
or
add
ror
stc
mov
push
jle
mov
dec
cmp
mov
outsl
push
pop
add
fwait
es
clc
mov
and
fwait
imul
leave
lcall
jp
je
js
jo
xchg
cmp
cmp
mov
leave
les
and
adc
adc
aaa
ss
pop
jb
clc
sti
and
push
outsb
fisttpl
test
mov
sub
test
mov
xor
sub
sbb
jmp
mov
pop
and
dec
inc
imul
int
jb
xchg
fildll
push
outsb
xor
test
xchg
es
dec
sahf
lret
push
test
lods
out
and
dec
sbb
dec
jl
mov
in
into
add
xlat
push
cmpl
movl
not
movl
mov
jmp
mov
jb
pushl
pushl
call
or
xor
or
sub
mov
mov
sbb
sbbl
andl
push
mov
sub
movl
movl
movl
jmp
mov
pop
test
out
cld
mov
adc
movlps
imul
xor
add
iret
push
out
arpl
sbb
lods
jp
pop
cmpsb
mov
je
sub
xchg
fwait
test
push
add
adc
fstl
xchg
sub
sub
xchg
movsl
xchg
imul
xor
std
cmp
mov
xchg
push
out
aaa
xor
in
ss
mov
ss
out
outsl
mov
decb
push
lods
inc
cmpsb
test
mov
addr16
into
add
int
mov
adc
lods
sbb
xchg
dec
cmp
sbb
sub
fs
incl
dec
stos
insl
jo
lret
lcall
fchs
into
dec
bound
sti
scas
fidivs
sub
ds
dec
movsl
jg
popa
mov
and
mov
ficomps
into
add
loope
push
mov
out
lahf
mov
and
push
fcoml
and
push
sbb
leave
mov
cmp
outsb
push
gs
std
adc
jl
popf
lcall
int
pop
cwtl
ljmp
ret
je
mov
sti
cmc
push
sbb
and
outsb
and
arpl
incl
adc
cmc
inc
push
pop
dec
scas
sbb
arpl
sub
xor
pop
loope
divb
iret
ss
lret
je
inc
das
xchg
ds
ds
pop
adc
cmp
mov
das
in
jle
add
loopne
push
sbbb
push
push
xchg
jno
sbb
pop
or
inc
push
pushf
stos
pop
es
xchg
dec
xor
push
mov
pop
jg,pn
adc
scas
ljmp
sub
fwait
addr16
lea
xor
lcall
push
pop
cli
mov
dec
mov
sti
pop
push
xchg
jl
adcl
add
mov
jbe
dec
inc
arpl
mov
sbb
xor
mov
jb
lods
or
outsl
mov
shll
mov
scas
mov
mov
movl
xor
subl
div
adc
imul
cmpl
mov
movl
mov
jmp
movl
jne
push
pushl
push
call
adc
adc
mov
add
mov
or
xor
sbb
movzbl
xor
mov
subl
xor
add
and
mov
movl
xor
xorl
div
sub
xor
mov
cmpl
movl
mov
jmp
movl
movl
jae
push
pushl
push
call
orl
movzwl
adc
dec
and
cmpl
mov
mov
jmp
mov
mov
jg
push
pushl
call
sbb
and
addl
adcl
adc
movzbl
sbb
mov
mov
or
jmp
bound
adc
popa
add
lcall
sbb
adc
add
sub
nop
mov
sbb
xlat
aad
int3
xchg
pusha
arpl
imul
mov
call
lds
in
scas
xchg
fstps
cmc
jl
mov
mov
aam
pop
sbb
pop
sub
nop
les
pop
sub
dec
pop
cmc
inc
sti
aad
push
shr
xor
adc
xchg
push
movsl
je
pop
pop
je
mov
in
sub
add
xchg
jnp
stos
nop
fidivl
mov
mov
and
cmp
das
adc
inc
or
dec
mov
mov
sub
mov
rcr
adc
mov
dec
inc
mov
xchg
lret
ja
xorb
cli
jo
in
add
adc
cmc
jl
jnp
stc
int3
jb
pop
movsl
xchg
sti
jae
push
dec
push
out
add
mov
ret
in
js
cmp
pop
outsl
ret
lcall
mov
inc
mov
push
inc
movsb
cmp
loop
pop
xchg
add
pop
testb
push
jp
arpl
push
ret
popf
and
lret
fwait
cmp
fadd
or
or
mov
nopl
jno
sbb
mov
out
pop
nop
sub
pop
stos
dec
data16
jb
mov
movsb
aaa
cmpsb
aas
fwait
mov
fdivr
idivl
jge
lcall
cld
cwtl
mov
inc
sub
and
fmul
xchg
cmp
aas
adc
filds
insb
int3
pushf
shrb
mov
jne
mov
add
jne
aam
push
cmp
pop
sbb
adc
adc
mov
testl
cwtl
cmp
mov
scas
and
arpl
fsubrs
ret
adc
rol
lock
mov
xor
fstpl
lret
mov
pop
push
cmpsb
mov
xorb
and
pop
pop
das
xchg
adc
jg
and
lret
jns
mov
in
push
mov
push
jae
jmp
cld
lock
xchg
jbe
xlat
sahf
outsl
shll
loopne
movl
movl
addl
jmp
pop
repz
cmp
pop
data16
ss
sbb
adc
movlps
nop
fdivl
sbb
cmp
sbb
cwtl
lret
or
testl
push
mov
pusha
daa
adc
adc
aas
cwtl
and
ret
movsl
xchg
lods
call
or
xchg
sub
add
push
or
std
cli
jo
cmp
cld
aaa
or
fidivrs
xor
repz
cmp
cltd
push
dec
and
mov
fdivrl
outsl
aas
shl
inc
push
out
and
out
xor
arpl
xor
ret
aaa
cmp
xchg
pop
insl
outsb
mov
or
xor
jle
sbb
cwtl
adc
fbstp
ret
mov
jp
mov
fwait
jge
adc
rcrb
stos
into
push
xchg
nop
add
sbb
sub
mov
xor
jmp
cmp
push
imulb
sub
and
xor
sub
sub
out
fisubs
test
fistps
sub
call
negb
and
pop
bound
leave
add
lods
xor
push
push
add
enter
cmp
aaa
push
xchg
cmp
adc
das
push
fisubs
pop
sub
in
xchg
test
mov
adc
or
test
dec
xor
ss
ljmp
aam
mov
push
lds
icebp
in
mov
cmp
adc
push
andb
orb
xchg
jmp
jb
mov
cltd
iret
les
int
adc
popf
cwtl
repz
lret
pop
inc
jg
mov
xor
jbe
adc
pop
xchg
jp
mov
push
inc
fwait
je
inc
test
mov
imul
push
insl
cmp
xlat
in
ds
in
test
pop
push
xor
pop
mov
in
dec
mov
xchg
negb
enter
call
cmp
decl
ret
fcmovu
push
sbb
lea
sub
movl
xorl
mov
add
xor
or
xor
imul
cmpl
movl
movl
jmp
mov
jl
push
push
pushl
call
not
movzwl
adc
add
sub
xor
mov
xor
add
sub
and
mov
xor
and
sub
mov
mov
mov
sub
add
movl
orl
movl
movl
cmpl
movl
movl
jmp
mov
je
push
push
call
and
addl
orl
xor
add
or
mov
mov
xor
xor
sub
or
movl
and
mov
cmpl
mov
mov
mov
jmp
movl
movl
jb
pushl
push
pushl
pushl
call
neg
xor
sbb
or
neg
subl
imul
mov
imul
imul
mov
adc
mov
adcl
and
or
xorl
mov
xor
mov
add
mov
mov
addl
lea
cmpl
mov
movl
movl
jmp
movl
jae
push
call
notl
or
addl
movzwl
sbb
mov
sub
xorl
neg
inc
mov
cmpl
movl
movl
mov
jmp
mov
mov
jbe
push
push
push
call
and
andl
sbb
neg
movl
movl
cmpl
mov
movl
mov
jmp
movl
jge
push
pushl
pushl
pushl
pushl
push
push
call
neg
or
movzwl
and
mov
movl
xorl
xor
and
movl
mov
xor
jmp
int3
cs
lahf
push
pop
leave
sbb
jb
js
adc
adc
mov
push
test
mov
ret
cmp
in
mov
sbb
push
cmpsl
push
pop
iret
int3
scas
push
lods
or
int3
pop
aas
jecxz
scas
lret
jb
dec
or
lret
inc
test
cmpsl
lea
lret
xor
aas
scas
shr
dec
and
inc
push
mov
inc
and
sbb
mov
and
sub
lea
xlat
jmp
jge
inc
pop
pop
mov
pop
arpl
rclb
leave
idivl
popf
ja
sub
lods
xor
inc
mov
cmp
stc
jo
aam
stc
std
testl
add
cmc
cltd
dec
cmp
aam
dec
jge
int3
push
out
test
adc
sub
fldt
mov
in
les
repz
inc
ljmp
call
jecxz
outsl
ja
lods
mov
sbb
sbb
test
shll
hlt
push
insl
adc
mov
lret
sub
sahf
push
ljmp
ja
das
inc
pmuludq
fistl
inc
cmpsl
pushf
leave
cmc
xor
test
sahf
pop
stos
push
jne
pop
and
push
xor
mov
sub
pushf
add
sub
push
dec
jns
ljmp
mov
jae
mov
jo
aad
mov
cltd
cmp
cmc
mov
stos
arpl
jmp
hlt
mov
movsl
xor
inc
jns
clc
xchg
pusha
loop
nop
movsb
insl
stc
mov
pop
lods
xchg
cmp
loopne
add
adc
xchg
repnz
roll
cmp
gs
aas
jns
mov
or
xlat
jp
xchg
push
xchg
data16
pop
jno
loop
rorb
add
inc
xor
out
aas
ds
push
push
mov
or
mov
sbb
adc
mov
pop
shrl
mov
jle
pmaddwd
adc
ljmp
insb
xchg
sahf
jecxz
xor
dec
add
icebp
stos
insl
into
push
pop
movlps
scas
mov
in
inc
int
inc
aad
lea
incl
add
add
mov
sbbl
or
movzwl
sbb
add
movl
xor
mov
xor
movl
sub
movl
movl
sub
mov
movzbl
and
add
or
mov
sbbl
sub
cmpl
mov
mov
jmp
mov
je
push
pushl
pushl
push
call
xorl
sbb
mov
adc
mov
add
adc
mov
lea
add
or
cmpl
movl
not
movl
jmp
movl
movl
jge
push
call
adcl
orl
xor
or
or
add
subl
inc
xor
xor
sub
sbb
sub
xor
xor
and
mov
mov
andl
movl
xor
movl
incl
mov
inc
add
cmpl
mov
movl
mov
mov
jmp
movl
mov
jb
push
pushl
push
pushl
push
call
mov
adc
mov
negl
andl
movzwl
xor
mov
adc
imul
jmp
aas
mov
cmp
add
stos
add
js
adc
adc
adc
scas
dec
fsubl
jae
subl
xor
rcl
lahf
mov
jbe
out
iret
popa
dec
push
xlat
mov
outsb
mov
pop
push
cld
inc
aad
sub
mov
das
sahf
in
lret
and
pop
scas
xchg
mov
cmp
scas
mov
adc
cs
testl
mov
sub
jae
fmuls
test
sbb
cmpb
push
pusha
xor
adc
inc
jno
jge
insb
in
insb
nop
mov
test
sub
jne
mov
xchg
loope
int
pusha
pop
es
ds
inc
inc
xchg
jne
cltd
movb
xorl
in
scas
pop
jecxz
repz
inc
je
insb
xchg
xor
push
std
aam
sti
push
std
ds
xchg
iret
cmpsb
xor
outsl
out
jae
and
add
and
lret
enter
mov
mov
das
rorl
xchg
pop
push
incb
jge
sbb
xor
andl
sbb
pushf
iret
jae
mov
xchg
pop
xchg
cmc
xchg
lods
addl
icebp
arpl
add
outsb
cld
sub
popf
pop
push
or
movsb
adc
fsubrp
mov
pop
cmp
jecxz
imul
pop
and
ret
fdivrl
in
bound
xor
push
mov
lcall
xchg
mov
jecxz
aaa
jg
pop
inc
mov
push
jae
jno
pop
push
xchg
xchg
jnp
mov
xchg
jle
sub
les
lds
or
out
shr
mov
and
data16
add
dec
pusha
cmp
insb
movsb
cld
pop
scas
push
pop
pop
cmp
or
ss
fiadds
sub
lods
mov
push
ss
adc
cmp
in
mov
lahf
dec
add
je
rol
imul
dec
dec
push
scas
push
imul
adcl
xor
subl
mov
div
sub
mov
sbb
mov
cmpl
mov
mov
mov
jmp
movl
mov
jg
pushl
pushl
pushl
push
call
add
negl
sbbl
and
sub
xor
movl
movl
movl
sub
mov
mov
movl
xor
jmp
jbe
and
sub
pop
lods
and
movlps
pop
hlt
push
xor
dec
imull
add
mov
inc
xchg
mov
lock
fs
and
lret
and
insl
xchg
pop
sbb
fwait
jae
cwtl
leave
je
or
sbb
fstl
sub
push
sub
mov
test
mov
mov
aas
data16
arpl
cli
push
adc
dec
inc
mov
mov
push
mov
jo
xor
dec
sbb
call
cmpb
das
int3
call
iret
ret
pop
cmpsl
into
jecxz
or
cmpsb
pop
jge
pusha
sub
sub
gs
negl
dec
jle
out
push
bound
mov
mov
testb
out
adc
and
loopne
popf
xchg
xor
repnz
adc
xchg
cld
movsb
mov
mov
push
stc
xlat
fisubl
loop
dec
pop
inc
mov
dec
adc
or
xor
cmp
gs
shr
dec
aam
inc
clc
clc
test
or
int
or
sbb
fistpll
clc
push
test
inc
mov
dec
fimuls
aaa
pop
push
mov
xor
mov
outsl
mov
jl
pop
sbb
cmp
loopne
insl
inc
das
xchg
cmp
jno
and
pop
push
enter
loopne
fcmovnbe
xor
nop
xor
cmp
sub
jge
mov
icebp
cmp
xor
scas
push
add
mov
and
jmp
ret
popf
inc
lds
loop
xchg
xor
cld
mov
in
mov
sahf
or
xor
pop
in
jbe
xor
outsb
pop
dec
cmp
addr16
ds
xor
bswap
mov
ss
or
pop
fwait
cld
jge
pop
bnd
jp
call
mov
jns
xchg
pop
movl
fsub
aam
subl
aad
je
and
int3
out
bound
test
icebp
mov
add
imul
add
add
sbbl
mov
xor
xor
xorl
mov
div
xor
cmpl
mov
mov
jmp
mov
mov
jl
push
push
push
push
call
sbb
adcl
movzbl
adc
mov
mov
xor
adcl
mov
inc
movl
sbbl
movl
adcl
movl
cmpl
mov
movzwl
jmp
movl
ja
push
push
call
sbb
and
neg
or
sub
adcl
and
mov
mov
orl
sub
shr
mov
xor
sub
mov
imul
cmpl
movl
movl
movl
jmp
mov
jne
push
pushl
call
sbbl
sbbl
sub
xorl
adcl
cmpl
movl
movl
movl
movl
jmp
movl
mov
jle
push
pushl
call
notl
xorl
sub
xorl
mov
adcl
and
mov
sbbl
sub
add
mov
movl
sbb
movl
mov
add
or
mov
or
sub
mov
or
mov
sbbl
movl
incl
movl
movl
movl
movl
and
movl
sbb
movl
sbb
movl
notl
mov
add
mov
sub
cmpl
movl
movl
jmp
movl
movl
jg
push
call
and
and
andl
xor
negl
and
or
orl
mov
imul
sbbl
imul
orl
mov
sbbl
or
andl
mov
lea
xorl
push
call
mov
orl
mov
or
imul
xor
xor
xor
mov
add
cmpl
mov
movl
mov
mov
jmp
movl
jb
push
call
addl
sub
sbbl
movzwl
adc
adc
movzbl
or
and
sub
jmp
xchg
out
lcall
mov
cmc
stos
dec
mov
adc
adc
mov
mov
fldenv
je
mov
lcall
jnp
jecxz
add
imul
iret
fadds
mov
ja
mov
jle
call
fsubrs
dec
inc
mov
fcoms
xchg
mov
movsb
mov
mov
dec
loopne
xchg
ret
stc
or
jle
mov
repz
or
xchg
xor
jbe
cli
add
fadds
je
pop
ss
cmp
jae
testl
xchg
test
cli
pop
scas
xchg
fmull
stos
addl
push
cwtl
push
lock
pop
lds
mov
adc
mov
mov
xchg
xor
xchg
pop
movsb
mov
jb
sbb
sbb
addr16
dec
enter
shl
int
mov
sub
xchg
add
adc
mov
inc
pop
aas
jg
xor
ljmp
les
stos
popf
lahf
pop
sbb
dec
into
clc
stc
mov
push
data16
inc
pop
jne
popf
sbb
sahf
pop
lret
aam
clc
jae
xchg
mov
pop
lahf
lods
arpl
xchg
aam
sbb
mov
into
je
cltd
test
aad
mov
sub
mov
dec
mov
jp
mov
shlb
fisttpll
push
jp
in
leave
int3
inc
ret
std
and
ret
sbb
je
arpl
and
cltd
jg
in
mov
add
jge
iret
fdivrl
out
mov
pop
pop
in
in
xor
adc
xor
push
push
cld
inc
popf
or
cmc
mov
mov
cmp
cwtl
push
mov
mov
ds
adc
dec
xlat
stos
lock
out
cmp
pop
mov
clc
xchg
lret
mov
and
dec
push
loop
cmp
test
cmp
mov
ret
sbb
data16
sti
inc
cmp
cmpl
mov
movl
movl
jmp
movl
movl
jb
pushl
push
call
xor
subl
movl
add
movzbl
adc
sub
adc
neg
xor
xor
mov
andl
div
xor
sub
add
mov
cmpl
mov
not
jmp
not
notl
jl
push
pushl
push
push
push
call
mov
add
mov
andl
add
subl
xorl
decl
movl
xor
movl
movl
cmpl
movl
movl
mov
jmp
mov
jae
push
call
or
adc
inc
adcl
or
adcl
adcl
movl
movl
xor
or
sbb
movl
movl
movl
movl
not
movl
movl
sbbl
movl
orl
mov
mov
add
mov
cmpl
movl
mov
movl
jmp
movl
movl
jl
pushl
push
push
call
or
or
sbbl
sbb
andl
and
xor
sub
sub
imul
cmpl
mov
mov
movl
mov
jmp
mov
movl
jle
pushl
call
sub
sbb
adc
sub
movzwl
sub
movl
mov
lea
cmpl
mov
movl
jmp
movl
mov
jbe
pushl
call
or
movzwl
or
mov
sbbl
sub
inc
xor
add
sub
xor
mov
sub
mov
mov
mov
sub
sub
mov
and
mov
xor
add
mov
or
lea
cmpl
movl
mov
not
jmp
movl
jle
push
push
call
xor
adc
mov
mov
sub
and
xor
subl
and
sbb
mov
orl
sub
cmpl
movzwl
notl
jmp
movl
jg
pushl
push
pushl
pushl
call
subl
adcl
sbb
xor
add
add
adc
sbb
add
sbb
mov
movl
adc
movl
mov
sbb
mov
movl
neg
movl
mov
xor
mov
sbb
mov
subl
xor
addl
xor
andl
mov
andl
call
mov
cmpl
movl
mov
jmp
mov
jl
push
push
call
xor
or
or
mov
or
sub
notl
andl
mov
and
mov
mov
sbbl
mov
xor
movl
xor
andl
mov
xorl
call
addl
or
xorl
or
mov
adc
mov
adcl
xor
sbbl
xor
mov
orl
call
sub
mov
and
mov
mov
subl
mov
andl
jmp
aam
jle
cmp
xor
xchg
call
adc
or
mov
movsb
mov
ret
mov
dec
cld
xor
jo
mov
mov
dec
std
clc
scas
aad
inc
aaa
jne
xchg
fldt
test
out
pushf
lahf
and
rol
jl
das
fisttps
cmp
rcr
std
mov
int
dec
dec
pop
roll
and
dec
and
cs
rcll
fisubrs
inc
cmc
lahf
ss
clc
mov
and
push
cmpsb
ret
pushf
dec
pop
mov
push
loopne
das
sub
push
pop
and
int
dec
adc
fs
in
flds
clc
pop
lahf
add
push
inc
xchg
mov
mov
mov
sub
mov
xchg
gs
sbb
adc
jl
pushf
pop
lock
mov
or
add
mov
xchg
push
shll
arpl
fsts
pop
loope
push
icebp
je
mov
sub
aaa
cmp
and
divl
xchg
add
xchg
movl
fnstsw
push
inc
sti
inc
ljmp
push
insb
mov
std
jo
sbbb
sbb
in
xlat
lods
xchg
movsl
fwait
int
insb
pop
cmp
jb
and
dec
xchg
jmp
ret
test
dec
xor
adc
pop
jl
cmp
mov
arpl
outsl
ret
loopne
lds
lods
sbb
imul
in
insl
pop
mov
xchg
push
pop
adc
xchg
jmp
cmc
fwait
mov
faddl
push
je
sub
jnp
xchg
jb
pop
mov
mov
or
lods
and
xlat
jno
or
and
pop
and
xchg
push
movsl
adc
roll
cmp
stos
std
sbb
mov
mov
pop
ss
outsb
ljmp
adc
rorb
adc
jge
stos
mov
out
xchg
jecxz
or
push
dec
push
fisttps
jae
xor
xor
mov
xorl
mov
or
mov
orl
mov
addl
mov
call
mov
add
mov
mov
sbbl
or
sub
mov
movl
or
xorl
push
push
push
push
call
mov
cmp
jne
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
mov
mov
call
or
jmp
pop
dec
scas
jns
pop
sbb
stos
test
insb
dec
sti
adc
adc
jo
mov
mov
pop
clc
adc
and
mov
cli
stc
pushf
out
pop
push
mov
xchg
iret
mov
test
push
inc
push
and
pop
xor
pop
and
outsb
adc
and
cmc
jns
adc
fisttpll
xchg
fs
je
popf
adc
rorl
and
jmp
popf
gs
je
cltd
popa
ja
cmpsb
sahf
mov
cmp
jb
test
lds
ljmp
fistl
insl
dec
out
xorl
inc
xlat
sub
fidivrl
cltd
je
sbb
push
mov
imul
popf
jle
mov
cld
stc
daa
dec
shrb
lods
rcr
jo
adc
xorb
clc
mov
sub
out
shlb
xchg
push
add
divb
jns
push
les
sbb
dec
inc
xor
jp
enter
fwait
scas
cmp
loop
add
jmp
aad
out
daa
sbb
mov
addr16
lock
mov
je
lock
in
rcrb
sti
out
jns
lea
psubw
fists
cmc
push
sbb
and
pop
jnp
add
sub
pop
inc
dec
aaa
in
push
shlb
mov
add
addr16
pop
dec
pop
pushf
mov
ss
jb
shrl
fwait
xchg
pop
jae
mov
or
out
testb
jp
dec
mov
cwtl
jle
into
xor
fdivl
je
insb
mov
clc
out
xchg
out
jo
outsl
rcr
push
jb
sbb
pop
pusha
push
stc
or
inc
adc
mov
mov
sbbb
repz
inc
fsubl
cli
mov
inc
int
sub
stos
sbb
or
test
std
pop
imul
push
sbb
or
dec
popa
push
lods
xor
fcomip
incl
fwait
bnd
dec
cltd
inc
test
jp
sbb
aam
mov
or
jmp
movsl
or
add
jo
js
outsb
cmp
push
notl
adc
test
orb
mov
clc
jge
add
xchg
in
outsb
sub
leave
add
mov
aam
mov
aaa
inc
int
add
jo
pop
icebp
inc
jne
loop
sbb
mov
mov
sub
and
push
filds
dec
xchg
in
int3
and
cmp
push
push
fs
mov
orl
daa
ja
fwait
ss
pop
jmp
les
ss
imul
popf
adc
xor
lods
jns
cmpl
inc
add
jmp
dec
add
inc
sbbb
push
mov
lea
insb
lret
inc
mov
mov
fsubr
scas
enter
mov
mov
fwait
cmp
adc
inc
data16
outsb
icebp
in
clc
lret
lock
mov
daa
mov
aas
adc
dec
jl
vpshufhw
shlb
mov
enter
xor
push
or
xchg
aaa
shlb
dec
bound
sub
nop
mov
mov
jae
into
pslld
inc
mov
xor
ja
or
out
icebp
sub
push
psraw
pop
push
pushf
sbb
outsl
dec
xchg
xchg
scas
jg
into
std
imul
and
jecxz
aas
lcall
loop
jecxz
mov
push
sbb
sahf
out
adc
jo
jmp
leave
loope
inc
hlt
xchg
mov
pop
push
sbb
fs
test
decl
pop
js
stc
iret
icebp
dec
ljmp
adc
lea
or
xchg
push
lock
sub
and
and
test
push
loop
or
fsub
pusha
jge
ret
mov
xor
outsl
in
mov
hlt
or
cmpb
sbb
dec
adc
cli
add
and
out
add
adc
ja
inc
insb
xchg
add
in
clc
mov
lcall
xor
sbb
mov
push
push
push
call
mov
jmp
jmp
lea
mov
mov
movl
mov
jmp
ljmp
pop
inc
lea
mov
movlps
xlat
or
outsb
xchg
xchg
cli
jecxz
es
jle
and
scas
dec
ja
or
mov
push
jge
adc
testb
fbld
inc
rorb
cmp
scas
stos
xchg
daa
adc
shlb
add
std
je
repnz
sbbb
mulb
sbb
roll
mov
outsl
pop
push
bound
or
cmp
js
cltd
cmp
push
jno
out
pop
push
shlb
mov
cltd
in
sbb
ret
push
xor
and
js
sbb
cmp
mov
aas
push
fsub
push
les
or
cmc
xor
xorl
loopne
push
xor
repz
filds
dec
fidivs
sbb
mov
imul
std
mov
xchg
lods
test
push
adc
push
repnz
dec
les
xchg
subl
fmulp
cmp
adc
adc
cmp
test
adc
xchg
sbb
mov
and
dec
int
cs
das
add
inc
xor
fs
addr16
out
sbb
cs
in
arpl
push
inc
gs
pop
shll
xchg
iret
cmp
jg
roll
lods
mov
jnp
jno
mov
add
imul
add
mov
add
xchg
cli
lret
or
push
push
shll
dec
in
shr
in
mov
stos
xchg
aam
rcrb
in
dec
adc
cmp
shll
mov
or
mov
sbb
push
orl
mov
and
pop
add
pop
inc
cmpsl
xor
inc
mov
xchg
adc
fs
int3
and
mov
fstl
fnsave
dec
mov
dec
sub
in
movsb
mov
mov
ffree
insl
jo
xor
shr
jmp
cmc
pop
sbb
sbb
ss
cmp
js
jle
out
adc
adc
xchg
mov
shrl
mov
hlt
imulb
jb
mov
repz
adc
push
xor
insb
dec
adc
add
adc
test
outsb
jns
cmpsl
daa
jno
add
insb
push
pop
pop
sub
mov
xchg
popa
rolb
incb
pop
test
stc
mov
rol
lret
test
mov
cmc
out
sbb
xchg
rorl
sar
fisubs
imul
pop
mov
mov
xchg
mov
aas
mov
dec
add
rorb
add
cmpsb
stos
shrl
mov
cs
xor
outsb
push
int3
jbe
mov
push
and
pop
jbe
mov
jmp
inc
and
xor
ret
in
cltd
daa
pop
imul
test
lret
imul
orb
xor
les
out
dec
push
mov
int
and
jnp
movsb
cmp
fnstenv
xchg
cltd
or
frstor
rol
cwtl
mov
jae
xchg
test
mov
mov
loopne
jecxz
pop
cwtl
mov
inc
sahf
sub
fisubrl
mov
sub
push
adc
int
jo
push
mov
nop
sub
negb
adc
cmpl
jb
sti
xchg
xchg
in
sub
aaa
popa
test
lds
dec
or
adc
jnp
out
jb
push
out
lret
and
repnz
das
loop
xor
jne
inc
int
dec
dec
fs
gs
push
push
add
shll
cmp
loopne
stos
rcrl
jge
xorl
add
or
mov
inc
popa
aas
xor
or
pop
in
cmp
dec
nop
pop
mov
inc
je
jne
enter
xor
xchg
icebp
push
lea
push
cmp
filds
scas
mov
hlt
jnp
pop
outsl
cld
cmpsb
stc
push
rorl
xor
aad
in
or
mov
xor
shl
or
mov
mov
mov
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
xor
xor
mov
call
mov
mov
jmp
arpl
das
sub
sub
and
or
sub
movlps
adc
sbb
loop
fcompl
adc
add
cwtl
js
lret
sbb
adc
in
fsubl
push
fxam
pop
xchg
or
loope
ja
cmpl
sbb
inc
or
in
pop
xchg
pop
cltd
lods
sbb
sub
iret
dec
out
push
jmp
mov
mov
int3
xor
cli
xchg
mov
lret
add
inc
push
xor
or
shrb
xor
cmp
mov
sti
inc
push
in
ja
sbb
pop
mov
cs
outsb
pop
jno
sub
jb
dec
stc
mov
dec
add
xor
enter
mov
dec
mov
pusha
in
add
jmp
push
fwait
and
pop
add
jbe
jl
lock
in
cmp
xor
push
jecxz
mov
rcrb
jnp
jno
mov
scas
cmpsb
sbb
inc
jns
sbb
cmpsl
popa
sub
mov
out
push
dec
fidivrl
insl
xchg
adc
xchg
outsl
cs
xchg
mov
data16
call
loope
xor
or
pop
add
jmp
rorb
sbb
repz
jbe
inc
push
lret
and
lret
mov
dec
lock
inc
test
mov
aam
orl
lret
sub
cwtl
out
sahf
jmp
xor
outsl
xchg
sqrtps
mov
jp
lahf
and
out
negl
adc
pop
out
sub
adcb
mov
outsb
bt
sbb
andb
ljmp
fs
lods
mov
mov
pop
mov
mov
out
std
movsb
nop
push
stc
jp
lods
xor
leave
dec
xchg
mov
je
xchg
mov
mov
popf
xchg
pop
sub
test
ret
movsl
test
popa
and
incl
sbb
push
rol
jnp
mov
fdivr
decl
jmp
xor
fisttpll
and
rcrb
insb
out
adc
adc
jle
cmpsl
aad
and
xchg
pop
aas
mov
shl
leave
loopne
daa
pop
int3
imul
xchg
dec
pop
movsb
or
out
je
popa
jnp
std
fnstcw
inc
push
int
bound
bnd
jmp
sub
push
int3
jnp
add
mov
subl
fistl
mov
pop
das
shll
push
popf
fs
mov
aad
mov
jmp
loope
in
jp
mov
test
push
sbb
aad
into
insb
cmp
mov
dec
data16
imul
cmpb
dec
das
loop
xor
jae
sub
xlat
jl
inc
lods
and
or
lcall
lret
mov
cli
or
mov
or
in
mov
pop
in
pop
xor
jle
bound
jmp
lds
sahf
lcall
xor
scas
jl
inc
ja
jmp
sub
inc
mov
cmc
repz
xchg
mov
inc
testb
enter
cltd
and
cmp
mov
cli
sub
sbb
adc
aas
mov
cli
add
in
stos
movsl
shll
int
mov
out
ret
nop
push
arpl
lods
rorl
adc
jbe
push
lcall
dec
pop
lea
ljmp
cvttps2pi
xor
cmpsb
push
ja
sti
movsb
mov
mov
sbb
sbb
pushf
mov
inc
jbe
or
outsl
add
sub
push
inc
fsubrl
push
dec
test
xor
dec
xorl
adc
xor
push
sbb
xor
pop
test
lock
dec
inc
jle
inc
orb
sub
xchg
dec
mov
pop
mov
pop
in
jo
lock
fiadds
pop
sbbb
je
jbe
and
push
xor
xor
mov
mov
mov
mov
mov
call
mov
or
mov
or
push
push
push
push
call
mov
cmp
je
mov
mov
xor
xor
mov
call
jmp
les
jp
pop
test
mov
out
adc
movlps
stos
shlb
mov
icebp
mov
sub
add
cmp
pop
cmpl
add
cwtl
sub
or
jo
jg
jo
mov
jns
loop
arpl
sub
leave
sbb
fsubrl
cmp
cwtl
xchg
lahf
out
aas
inc
jne
imul
lds
xor
arpl
mov
pop
jle
fs
jns
adc
scas
sahf
push
jp
mov
mov
stc
stos
xor
jmp
sarb
mov
jp
in
sahf
js
fldt
and
jge
dec
mov
sarb
shlb
loop
mov
mov
sbb
jecxz
mov
cs
or
loopne
shl
inc
jg
rcl
pop
or
lods
insb
pusha
pop
add
cmpsb
add
push
popf
fsubrl
or
mov
add
test
popa
pop
mov
mov
xchg
mov
sti
shll
push
cmc
adc
int
stos
add
arpl
rclb
std
xchg
mov
mov
push
les
cmpsl
sti
and
pop
into
xchg
sbb
xchg
inc
xchg
adc
adc
inc
call
add
xlat
test
out
aad
repz
lcall
je
movsb
rorl
or
lret
adc
adc
xchg
pusha
stos
outsb
push
mov
pop
sbb
pop
nop
cmp
aam
pop
sarl
jmp
inc
mov
bound
repz
ds
ret
push
mov
xor
cmp
adc
xor
ss
xor
mov
adc
xchg
cmpsl
xchg
xor
js
cltd
push
sbb
out
fcomps
jle
or
sarb
and
or
movsb
ror
push
xchg
jl
mov
pop
sti
add
xchg
or
sub
fisubl
adc
add
lock
mov
mov
xor
xor
mov
call
jmp
cmpsb
test
fistpll
and
jp
js
loop
adc
movlps
roll
xor
inc
xchg
jbe
mov
lret
inc
xchg
inc
adc
bound
adc
into
sti
stos
jmp
or
in
xor
xchg
imul
xchg
gs
dec
jns
shrb
mov
cmp
push
mov
mov
in
add
flds
push
or
aas
mov
incl
jl
lock
cmp
xchg
mov
pop
daa
dec
mov
jb
mov
mov
insl
pop
and
divb
cwtl
xchg
cmp
mov
adcl
mov
cltd
push
dec
inc
cwtl
aas
mov
pop
es
aas
adc
in
mov
les
mov
aas
xchg
lods
inc
ljmp
xchg
and
pop
leave
pop
and
loope
scas
ja
scas
mov
les
mov
pop
push
pop
lcall
iret
sti
jne
shll
jns
inc
lds
pop
ljmp
xchg
jmp
out
adcb
mov
xchg
cs
lods
lcall
xor
rorl
jge
bound
das
cwtl
or
mov
cli
ja
ret
mov
dec
popf
jecxz
in
add
fistl
js
sub
cli
adc
ljmp
arpl
std
lret
stc
mov
inc
add
rorb
inc
pop
mov
jno
testl
dec
stos
loope
xchg
mov
jae
imul
mov
ljmp
ret
xchg
cmp
negb
mov
xor
dec
xor
repz
add
mov
inc
xchg
add
xlat
jno
cmpsl
clc
sti
pop
add
jecxz
in
loope
cmp
mov
add
je
aas
lret
cltd
call
mov
int
pop
push
jg
int
out
push
cmpsl
cmp
shrb
addl
into
mov
push
outsl
mov
push
popa
lods
shll
xor
mov
fisttpll
lock
mov
imul
add
mov
mov
mov
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
mov
mov
call
or
mov
or
push
push
push
push
call
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
jmp
push
insl
mov
pop
mov
sti
jle
pop
jbe
push
ficoms
adc
les
push
hlt
mov
jl
scas
mov
pop
mov
jne
ret
cmc
sbb
pop
push
mov
fs
xchg
aaa
xchg
or
bnd
sub
addr16
pop
push
pop
movsl
leave
push
add
jecxz
push
sbb
xchg
and
mov
mov
sahf
sbb
add
lock
push
fucomi
push
pop
cs
mov
dec
xor
stc
call
sbb
jnp
xchg
pop
xchg
lock
mov
push
enter
push
pop
test
push
inc
mov
lods
xlat
ret
push
in
mov
push
nop
xchg
pop
pop
sub
subl
into
loope
lea
cmp
outsl
scas
adc
push
sub
sti
movsb
xor
add
dec
cmpsb
lahf
sarl
gs
lcall
jp
dec
cmp
jle
es
shrl
shlb
sbb
test
xchg
outsb
nop
add
cmpb
mov
loope
or
cmpsb
fnsave
aad
jns
cmpsb
add
adcl
daa
push
pop
push
lahf
pop
clc
jmp
mov
or
jge
add
inc
test
xchg
fisubrs
adc
fildll
inc
jnp
mov
movsl
je
in
ret
ja
cmc
jae
out
mov
and
sbb
sti
sti
xor
ds
push
repz
jp
rcrl
sub
xchg
sbb
test
loopne
jg
or
in
pop
mov
mov
push
or
ja
jmp
inc
mov
pusha
adc
mov
sub
mov
outsb
insl
jbe
addb
jnp
into
imul
pop
ret
adc
iret
cmp
pop
rolb
cmp
leave
push
aam
rclb
sbb
std
jl
push
push
mov
pop
shrl
sub
or
inc
mov
push
add
mov
adc
imul
orl
inc
xor
or
add
lock
mov
mov
mov
xor
div
mov
and
add
mov
lea
xor
add
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
xor
div
add
mov
and
xor
add
mov
mov
sub
mov
or
mov
and
mov
xor
jmp
adcl
inc
cmp
repnz
lods
vunpckhps
int3
movlps
aaa
outsl
sti
xor
jecxz
lock
popa
clc
fwait
pop
je
loopne
fcom
ret
mov
mov
cmpsb
pop
mov
push
jle
cmp
rcrl
mov
sub
xchg
pop
popa
sub
or
fdivrs
iret
ror
fistpl
mov
mov
popf
insl
pop
hlt
sbb
pop
jnp
pop
or
sbb
rol
pop
pusha
ss
mov
add
lcall
and
fwait
in
push
fstl
sbb
and
and
fwait
pop
jne
push
scas
mov
es
add
stos
imul
xchg
fs
mov
mov
call
xchg
or
push
sub
mov
fldl
in
xor
imul
fs
scas
push
fnstcw
clc
cmp
xchg
and
jmp
gs
inc
les
adc
sbb
sub
jbe
test
pop
jns
fistl
inc
mov
or
lahf
negb
xchg
pop
inc
fildl
mull
js
cld
or
loopne
call
mov
push
and
jbe
inc
or
ror
fisubs
mov
das
mov
int
mov
fs
add
mov
xchg
jbe
inc
cld
out
sbb
test
arpl
gs
loopne
sahf
shll
push
daa
jno
mulb
mov
inc
in
dec
adc
outsb
pusha
mov
sbb
push
daa
inc
dec
jecxz
cld
jns
push
call
or
scas
or
mov
mov
xchg
leave
dec
mov
loop
pop
andl
xchg
es
imul
outsl
ss
or
jmp
fwait
xchg
adc
mov
or
test
inc
add
addb
lods
and
mov
test
cmp
pop
out
mov
add
dec
mov
lcall
stos
ljmp
xchg
hlt
mov
sub
mov
imul
xor
xor
mov
mov
add
add
mov
movl
movl
movl
movl
jmp
stos
in
inc
cwtl
inc
sbb
fidivs
add
jge
adc
adc
popf
lods
push
push
fcompl
cmp
fadd
pop
clc
int
mov
push
icebp
xchg
cmpsb
inc
pop
shlb
pop
dec
adc
es
and
ds
push
push
xor
cmp
sar
mov
adc
dec
cltd
cmp
lock
idivb
push
mov
jno
cltd
pop
in
or
or
mov
push
icebp
loopne
clc
outsb
ficoml
jno
dec
xchg
adc
jne
rorb
icebp
loope
test
inc
loopne
mov
loop
test
pop
mov
shlb
jg
inc
mov
inc
xchg
addr16
add
sub
xor
pop
popf
cmpsl
outsb
out
ss
stos
iret
and
stos
or
cmp
xchg
subb
out
add
aas
xchg
roll
faddp
int3
lret
mov
mov
scas
mov
mov
sbb
stc
push
sub
or
mov
or
movsl
and
imul
clc
outsl
inc
xchg
push
outsl
arpl
daa
ds
aaa
add
negb
push
ja
jg
jl
loopne
pop
pop
push
push
repnz
stos
push
push
jl
mov
inc
sbb
xchg
dec
pushf
mov
xor
dec
pop
movsb
outsb
jp
and
es
push
mov
inc
aaa
or
repnz
pop
mov
repnz
outsb
insb
lods
scas
mov
adc
lret
leave
les
sbb
mov
dec
cmp
addl
or
aad
aaa
pop
js
or
in
push
enter
mov
push
rcr
hlt
nop
test
movsb
stos
mov
gs
test
fadds
cmp
dec
inc
dec
push
lods
decl
lods
xchg
arpl
add
mov
mov
pop
pop
mov
sub
dec
push
sbb
int3
stos
mov
pop
mov
xchg
cmpb
dec
test
pushf
shrl
mov
mov
movl
movl
mov
xor
mov
imul
mov
lea
mov
and
and
xor
push
pop
jmp
enter
cmp
jp
aas
inc
stos
pusha
into
mov
xor
movlps
daa
add
xchg
add
pop
mov
int
scas
scas
ret
icebp
std
add
popf
cmc
xchg
imul
dec
cld
inc
sbb
xor
in
orb
cmc
xor
push
fimull
test
sti
scas
adc
aas
aaa
lcall
inc
clc
lods
push
nop
jg
jb
pop
scas
aaa
xlat
jnp
insb
and
in
scas
xchg
pop
leave
or
ja
sbb
decl
jg
imul
shlb
mov
mov
xor
das
jbe
dec
sti
pop
and
stc
insl
inc
mov
push
push
insl
dec
ds
nop
loope
aas
jmp
movsb
lcall
inc
or
sub
mov
int3
mov
jle
xchg
leave
xchg
inc
fimull
xor
outsb
ss
dec
scas
in
sub
in
xchg
inc
divb
mov
inc
jecxz
fdiv
pop
sub
adc
je
add
sub
jecxz
cmpsb
das
rorl
lds
lret
cwtl
jp
adc
pop
inc
mov
in
divb
pop
fwait
hlt
xchg
ret
xchg
imul
fnstcw
adc
pop
repnz
mov
cli
or
jne
add
repz
cmp
ljmp
cmpsb
int
lahf
push
adc
lret
cltd
pop
outsl
push
mov
ficompl
and
inc
fnstenv
filds
ret
jp
sub
add
or
mov
push
xor
mov
cmpsl
mov
shlb
notl
lea
sarb
or
mov
pop
stos
cmp
sbb
and
stos
into
and
xor
sti
fdivr
xorb
fwait
jl
fisubl
push
test
jno
jbe
sbbb
push
idivl
jo
jbe
stos
mov
imul
sub
ret
sbb
xchg
adc
dec
cmpl
pop
imul
mov
push
xchg
fists
mov
push
xchg
or
add
and
add
imulb
mov
push
les
add
decl
add
imul
mov
xor
xor
mov
mov
add
add
mov
movl
movl
movl
movl
movl
movl
mov
jmp
xchg
sbb
les
ficoms
mov
int3
movlps
pusha
pop
ds
lret
mov
movsl
sub
aas
js
fcmovne
into
test
adc
daa
ret
dec
xchg
cwtl
outsb
mov
sub
and
iret
inc
aaa
cmp
push
cmp
sub
adc
ja
lock
cmpb
and
fs
in
clc
pop
dec
and
lcall
ss
mov
push
mov
jecxz
jno
push
pop
xor
inc
mov
leave
adc
in
movsl
fisubrs
test
int
out
test
movsb
pop
out
imul
jecxz
test
sbb
and
sub
iret
jb
stos
pop
inc
pop
jbe
call
dec
or
in
cmp
ss
fs
mov
daa
and
rcr
hlt
sbb
ss
mov
fisubrs
pop
xchg
sub
in
popf
xchg
call
inc
push
test
hlt
aaa
lods
sub
test
loop,pn
xchg
movsl
in
jns
imul
mov
negl
out
lea
mov
sbb
cmp
pop
pusha
pop
mov
pushf
inc
dec
sbb
push
push
mov
add
adc
iret
dec
cmp
outsb
aam
adc
hlt
insl
mov
dec
dec
subb
lcall
scas
dec
das
adc
dec
daa
sub
mov
icebp
je
icebp
hlt
sub
cmpsl
mov
or
inc
push
ds
arpl
stos
pusha
xchg
mov
push
outsl
in
push
test
xchg
adc
dec
daa
add
dec
aas
xchg
mov
jb
loop
stc
inc
subb
insb
dec
sub
das
movsb
fs
mov
in
dec
cmp
cmp
adc
iret
pushf
mov
push
xchg
mov
inc
iret
sti
scas
cmpsb
cli
fdivrp
sub
jecxz
cwtl
daa
dec
mov
in
adc
add
sub
sarl
add
and
pop
enter
push
adc
xor
push
pop
div
mov
or
mov
xor
div
imul
mov
lea
mov
and
and
sub
jmp
xor
inc
popa
inc
and
sbb
mov
adc
movlps
push
lret
jg
mov
rorb
inc
loope
xchg
inc
lods
sahf
movsl
inc
bound
push
shll
stc
jge
sbb
sbb
jnp
mov
ret
lret
mov
comiss
adc
xchg
pop
jle
and
das
out
scas
pop
mov
mov
add
push
adc
aam
mov
lcall
xchg
and
mov
je
push
push
cmp
mov
lahf
and
and
inc
cmp
jno
jp
pop
stc
or
test
fmul
xchg
add
mov
mov
inc
mov
mov
and
push
mov
sbb
movsl
test
gs
cs
call
gs
lds
xchg
movsb
sub
adc
pop
fbstp
in
addr16
cmp
and
sub
push
or
sbb
ss
push
icebp
xchg
dec
stos
repz
js
cmpsb
push
arpl
nop
pushl
scas
ss
aad
mov
aas
xchg
push
arpl
mov
addr16
lahf
cmp
mov
pop
mulb
sub
out
cmp
fucomp
scas
mov
mov
adc
loop
adc
lret
mov
dec
imul
cmp
pop
lret
dec
xchg
stos
repz
sbb
mov
push
aam
mov
loopne
addr16
jo
and
sub
cmp
jno
pusha
jo
aam
fimull
add
xchg
xchg
je
scas
pushf
mov
shl
pusha
pop
sub
jno
das
dec
movsb
jo
push
add
lock
out
inc
les
cs
xor
arpl
dec
cmp
push
jp
push
les
mov
adc
add
inc
bound
push
push
push
sbbl
out
jne
mov
mov
les
rcr
repnz
inc
sub
jo
lcall
iret
mov
popa
outsl
jb
mov
int3
xor
mov
xor
mov
and
and
or
mov
mov
add
lea
mov
andl
jmp
mov
inc
mov
mov
mov
cmp
je
mov
mov
mov
add
mov
mov
mov
mov
mov
movl
movl
movl
movl
lea
mov
mov
movzwl
xor
movzwl
sar
mov
movzwl
xor
movzwl
shl
or
movzwl
mov
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movzbl
push
lea
push
call
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
jmp
sub
mov
and
fldt
jle
rclb
cmp
aam
xchg
xor
dec
rcl
add
pop
xchg
mov
mov
scas
bound
jmp
jmp
cli
mov
xor
std
xchg
and
lods
pop
aam
popf
add
dec
iret
sub
push
or
aaa
out
subl
stos
push
lods
fldenv
out
pushf
ret
pop
into
push
pop
xchg
lret
popa
xor
sbb
push
xor
and
dec
add
stos
pop
inc
aas
in
and
xchg
fldenv
jp
mov
mov
sbb
cld
pop
in
mov
push
mov
push
sub
imul
fildll
mov
rcrl
stos
test
and
fldcw
sub
dec
and
xor
push
sti
xchg
xchg
fildl
enter
ret
into
jns
out
mov
hlt
scas
cwtl
cwtl
vdivps
xchg
inc
daa
jb
push
add
repnz
pop
stc
pushf
iret
int3
cld
in
rcll
cmp
push
test
mov
mov
adc
scas
call
dec
mov
mov
pop
sbb
pop
bnd
repnz
jp
mov
lods
clc
je
testb
adc
and
xor
mov
jnp
les
jae
xlat
aaa
fcoms
sbb
xchg
mov
xchg
int
sbb
arpl
imul
jae
cmp
icebp
pop
es
mov
pop
test
mov
add
and
push
cwtl
lock
pop
mov
testl
jmp
cmp
mov
sti
jb
dec
aas
or
in
dec
add
dec
push
lret
ficoms
cld
jl
dec
and
push
sbb
ja
sub
shl
fsubp
jbe
adc
add
dec
ret
and
sub
xchg
jle
push
dec
xor
pop
mul
ret
movsl
das
push
cmp
fsubl
fs
lcall
das
sbb
mov
sub
pop
ret
ret
pop
testl
out
add
or
or
add
mov
mov
cmp
je
mov
mov
movzwl
xor
movzwl
sar
mov
jmp
out
imul
enter
mov
adc
ja
add
jmp
cltd
mov
or
xchg
mov
jns
fdivrs
add
xor
or
mov
jecxz
pop
inc
mov
push
push
sbb
jbe
mov
xchg
xchg
mov
addr16
jmp
push
adc
sbb
dec
mov
pop
ucomiss
daa
dec
mov
mov
pop
push
adc
cmp
ret
shl
adc
inc
or
mov
stos
push
clc
loop
cs
sub
mul
push
dec
incl
mov
out
sbb
xchg
bound
add
popf
jae
sbb
pushf
ficoms
repnz
cli
jle
inc
filds
daa
inc
xchg
iret
sbb
mov
nop
jle
jnp
cltd
movsb
insl
xchg
js
xor
jns
bound
push
js
das
xor
movsb
xchg
dec
jo
inc
hlt
mov
jg
adc
mov
rcrb
notl
mov
aaa
add
loopne
movsb
ss
stc
add
jge
add
ret
in
movsl
movsl
dec
cmp
jl
mov
add
adc
insb
jmp
jb
mov
mov
shrb
cmp
and
outsl
bnd
into
fildl
les
rclb
mov
cwtl
aaa
and
jb
outsb
testl
sbb
stc
push
mov
or
enter
push
lea
into
movsb
mov
aad
add
adc
lods
inc
sub
jl
pop
dec
mov
insl
lret
jp
pop
gs
mov
in
and
jb
bound
push
and
push
sub
mov
not
lahf
decb
loope
pop
fidivs
mov
repnz
sbb
push
mov
mov
or
xchg
daa
enter
mov
inc
testb
mov
dec
pop
pusha
dec
or
xor
xchg
decl
mov
mov
xor
movzwl
shl
or
movzwl
mov
mov
mov
movzwl
xor
movzwl
sar
mov
jmp
cltd
outsl
sbb
and
int
js
mov
adc
adc
jmp
mov
cli
pop
or
push
icebp
leave
aaa
lret
push
flds
xchg
dec
xchg
mov
push
decl
stos
mov
nop
push
sbb
movsl
addr16
scas
add
jae
jl
mov
loopne
jae
fcompl
ja
ficomps
and
and
movsl
mov
mov
sub
jo
jge
xor
notb
sub
inc
mov
das
mov
hlt
mov
sub
jo
adc
jb
pop
data16
je
lcall
cmp
negl
fcmovnu
test
sub
outsl
push
aas
or
jbe
out
imul
pop
adc
mov
and
int3
les
xlat
pop
cmpsl
stos
clc
es
test
imulb
pusha
arpl
cld
loop
das
push
cmpsl
cmp
repz
adc
insb
jp
lret
push
stc
movsb
sahf
xchg
das
inc
xchg
sbb
ds
or
addr16
div
cs
and
push
std
jnp
ds
xor
ljmp
mov
pusha
jp
or
stc
lods
sbb
mov
jge
in
rcl
cmovo
xor
lret
jg
xlat
aaa
shl
shl
pop
inc
lods
and
or
out
pop
inc
sub
mov
dec
inc
push
aam
cltd
std
insb
xchg
add
cmpl
mov
cld
add
jnp
xchg
dec
fldenv
push
sbb
push
ret
xchg
mov
push
inc
fldcw
jle
shrl
mov
pop
jle
jge
or
ret
add
pop
in
pop
and
mov
out
xchg
idiv
mov
notl
inc
lea
repnz
jl
jle
jge
lea
movsl
jecxz
das
mov
xor
push
mov
sub
jnp
leave
add
mov
or
xor
mov
div
mov
xor
mov
movzwl
xor
movzwl
shl
or
mov
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
jmp
jg
loope
mov
mov
mov
test
adc
add
cmp
sarb
in
cli
cltd
hlt
xor
inc
popa
sub
pop
mov
mov
xchg
and
xor
jle
cmpsl
add
arpl
in
mov
test
pop
loop
mov
jp
jmp
jne
mov
mov
push
cmovg
loope
mov
adc
mov
add
xchg
sbb
stos
inc
mov
mov
fucomi
rorb
nop
pop
cltd
mov
ljmp
jae
or
xchg
fsubl
or
push
adc
in
inc
or
insb
cmp
inc
xor
xchg
outsb
out
inc
fwait
sub
adc
mov
push
pop
call
sub
cmp
xlat
cs
clc
xor
xor
adc
mov
and
std
or
aas
push
mov
push
or
jge
shrl
mov
mov
inc
movsb
les
fcomps
jne
pop
in
ja
jns
jae
push
push
ret
add
scas
stos
popf
lret
adc
inc
jno
cmc
popf
or
ds
sub
in
jmp
jle
mov
inc
aad
clc
dec
mov
jno
shll
xchg
jg
push
scas
mov
sub
xchg
pop
aaa
jb
data16
push
mov
mov
sti
shll
cs
xchg
in
sarl
mov
xchg
andb
and
fldcw
es
jne
sbb
pop
pop
inc
cmp
jmp
shlb
cwtl
popa
leave
mov
std
sbb
or
jo
push
sub
and
or
sub
jno
out
xchg
shr
mov
iret
insb
jl
pop
push
push
jle
mov
mov
rcrb
icebp
loope
cmp
lods
xchg
push
aam
xchg
shll
xchg
shlb
dec
je
stc
xchg
fdiv
mov
sub
rcrb
jb
push
int
mov
xor
cmp
adc
lcall
pop
imul
and
add
lock
mov
mov
mov
jmp
cltd
jns
dec
and
cltd
pop
sub
bound
mov
adc
movlps
cmp
fists
shll
ror
xlat
int
cs
ficompl
rol
add
das
push
popf
xor
xor
lret
jnp
xchg
add
std
jae
icebp
adc
push
insl
jne
movb
jcxz,pn
or
test
mov
idivb
adc
pop
scas
insb
shrl
or
xchg
loop
jbe
push
subl
pop
popa
dec
pop
roll
add
lock
push
insb
pop
out
in
inc
loop
mov
and
addr16
ret
std
in
adc
pop
jbe
in
fmull
stos
popa
xlat
int3
push
insl
adc
mov
mov
sbb
pop
repz
movsb
fstpl
shr
pop
leave
nop
mov
stos
fcomps
push
mov
jbe
pop
pop
ror
mov
xor
stc
or
test
sahf
mov
fs
dec
movsl
sub
andl
mov
stos
xchg
cmpsl
gs
mov
dec
mov
and
test
push
lods
mov
lret
xor
fsub
jno
cld
filds
sub
push
jbe
mov
dec
data16
fdivs
jo
sub
and
pushf
fbld
dec
push
fs
pusha
lret
out
lods
mov
pushf
sub
and
cltd
mov
icebp
lcall
or
sahf
lret
or
lods
adc
and
dec
in
lahf
jmp
sub
xchg
lcall
sahf
mov
mov
js
sbb
imul
sub
pushf
mov
jns
mov
out
int
mov
xchg
mov
arpl
push
jnp
mov
lock
aad
int3
pop
mov
cli
in
inc
push
add
xchg
rcrl
dec
xor
sub
lds
cmp
das
push
dec
lret
push
jg
mov
pop
add
sbb
in
push
xchg
pop
cltd
ds
js
xorl
repnz
call
mov
mov
mov
mov
jmp
sub
sbb
sbb
cs
icebp
mov
out
stos
cmc
scas
adc
adc
jl
sbb
stc
jbe
push
sbb
pop
jbe
dec
mov
nop
enter
mov
lock
loop
popf
loopne
xor
or
or
fisttpll
xor
test
mov
lret
and
push
jbe
jge
gs
dec
call
mov
pushf
mov
mov
xchg
push
rol
insb
daa
adc
xchg
insl
cmp
inc
cltd
fdiv
rclb
cmpsb
mov
xchg
sahf
pop
and
pop
stos
add
mov
mov
and
xchg
pusha
sub
push
mov
inc
xorl
sbb
jb
popf
js
std
mov
push
xchg
shrb
sbb
and
repnz
jecxz
jno
fcmovnbe
push
das
stos
push
jl
sub
sub
ror
fmulp
cmp
stos
adc
xchg
mov
sub
outsl
outsl
addl
fadd
pop
pop
jle
mov
imul
sub
int
jne
mov
in
lahf
xor
pop
jnp
inc
fwait
push
in
clc
mov
sbb
jbe
fs
pop
gs
fsts
mov
and
insb
cmp
stos
repnz
push
pop
push
aaa
jp
insb
ja
lock
push
popa
mov
mov
cwtl
mov
sbb
jge
rolb
pop
or
cwtl
sahf
sub
jg
test
or
test
push
shr
mov
xchg
fdivl
mov
or
sti
cmc
xchg
add
sahf
int3
inc
push
cmpxchg
xchg
inc
in
hlt
imul
or
in
push
and
nop
popa
xchg
sbb
adc
int
mov
scas
js
inc
xchg
mov
push
popf
push
roll
aas
add
and
mov
mov
data16
lock
out
repnz
mov
push
push
mov
out
mov
ret
scas
mov
xor
xor
mov
call
or
or
mov
mov
mov
or
je
lea
mov
mov
xor
mov
call
mov
mov
mov
jmp
insl
ja
add
popf
sub
xlat
mov
jle
stos
adc
adc
jle
jmp
sarb
push
xchg
cmp
mov
ret
dec
mov
push
inc
test
scas
adcl
xlat
or
inc
ljmp
cwtl
cmp
fs
sub
sarb
sarl
sbb
adc
gs
inc
test
out
add
iret
arpl
push
es
imul
mov
sbb
out
mov
adc
add
scas
pop
lahf
icebp
xchg
cmp
mov
leave
dec
sbb
mov
and
hlt
fsubr
movb
pusha
jnp
inc
fcompl
mov
mov
shl
test
push
mov
in
adc
inc
hlt
mov
adc
repnz
ret
fucomp
in
jnp
test
frstor
aad
mov
sbb
and
jp
lods
push
sbb
imul
mov
addr16
ja
pop
mov
popf
addr16
fsubr
jg
mov
fdivl
adc
out
cmp
aaa
lds
clc
adc
dec
stos
addl
jge
cmpsl
jecxz
out
dec
add
cld
lret
inc
pop
jb
leave
cld
cmp
push
cmp
xchg
cwtl
addr16
cs
std
mov
cwtl
pop
sbb
clc
inc
xchg
cmc
jbe
mov
lcall
or
bound
lods
dec
jb
lret
stos
js
mov
bound
mov
or
dec
or
inc
lret
sbb
iret
ss
sub
mov
sub
xchg
and
lds
add
xchg
inc
fbld
test
stc
and
fwait
jne
mov
dec
and
ret
add
lea
and
add
inc
sbb
mov
mov
lcall
call
push
xchg
ja
pop
push
push
jno
jnp
jecxz
arpl
in
in
insl
cmp
jo
or
jl
shlb
decl
lock
xor
xor
mov
mov
jmp
addr16
pusha
out
sbb
xor
fidivrl
int3
movlps
pop
pushf
push
ljmp
into
sbb
xlat
lahf
xor
pop
sbb
xor
negl
aas
mov
pop
cmp
stos
adcb
xor
fcomp
inc
mov
lret
jle
adc
lea
stos
iret
iret
scas
xchg
dec
sub
push
cmpb
imul
bnd
mov
clc
pop
pop
push
sub
adc
jae
fadd
test
mov
test
add
add
pop
push
imul
std
mov
xchg
sub
cmp
cmpsl
cmpl
inc
popf
rcll
repz
jns
aas
lock
fstpt
pop
lods
mov
xchg
add
push
int
jp
xor
lahf
daa
add
mov
cmp
test
out
cli
xchg
in
test
cmp
pop
fcmovnbe
jbe
inc
add
cmp
inc
pop
sub
mov
pop
in
push
test
mov
cwtl
pop
sbb
and
push
rcll
pop
or
pop
cmp
add
jl
loop
into
scas
and
cmpsb
scas
or
xor
imul
movsb
jp
pop
mov
add
loope
into
out
jecxz
or
pop
inc
sbb
scas
sbb
les
sub
aas
daa
or
adc
push
sub
xchg
dec
insb
pop
jecxz
xchg
add
std
pop
xor
cmc
inc
out
test
out
adc
adc
cmpsl
test
fcmovnbe
adc
xor
aam
imul
out
add
cmp
push
jge
jns
mov
and
mov
push
stos
daa
xchg
cmpsb
loopne
xchg
aas
enter
mov
push
and
jbe
das
fnstcw
and
adc
movsl
cli
jbe
pop
stc
into
cs
and
orl
sti
test
or
inc
sub
mov
xchg
cmp
cmp
add
int
pusha
test
stos
pop
fwait
adcb
test
decl
mov
decl
decl
pushl
xor
mov
call
mov
mov
mov
mov
jmp
ds
jnp
pop
and
popf
cmc
inc
in
roll
cmc
stos
push
mov
adc
out
mov
mov
dec
lds
test
aas
jmp
mov
push
filds
repnz
ret
xor
and
xor
add
icebp
stos
push
insl
xlat
jmp
es
pop
push
and
dec
insb
inc
cmp
lods
and
adc
cmp
cld
aam
sbb
and
sbb
fbld
in
push
mov
mov
sub
cmp
add
push
std
mov
xor
add
jmp
xor
xchg
js
pop
xchg
sub
ja
test
out
cltd
jg
mov
inc
mov
addb
jno
inc
xor
inc
pop
orl
aam
push
popa
dec
push
lret
and
jmp
call
arpl
out
sbb
stos
xchg
das
xor
div
into
iret
insb
mov
pop
insb
stos
jmp
sarl
adc
add
push
or
repnz
mov
repz
push
or
aad
push
jnp
aaa
add
ss
mov
mov
outsl
fld
jns
lcall
ljmp
jnp
jno
and
shlb
fldcw
nop
in
cmpsl
mov
xor
sub
cmp
in
push
dec
pop
push
cmp
cwtl
idivb
push
sbb
and
jb
movsb
pop
in
add
xchg
inc
ljmp
daa
mov
adc
fs
pusha
shlb
fidivrl
jno
cs
adc
jne
sub
lock
pop
pop
adc
push
repnz
std
cmc
pop
lods
push
xor
and
fs
call
in
popa
repz
xchg
xchg
jne
mov
cmpsl
pop
jge
inc
jmpw
jae
fildl
push
in
rcrl
test
jge
loope
leave
push
aas
aad
push
jno
mov
sub
scas
pop
pop
into
lahf
paddsw
xor
xor
mov
call
or
or
movsbl
cmp
je
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
jmp
out
xor
and
mov
inc
rorb
sahf
adc
adc
pop
sti
xchg
fcoml
and
xchg
in
fsubl
xlat
jnp
mov
sub
fisttps
xchg
mov
and
and
inc
test
aaa
cwtl
mov
lods
mov
shll
int
imul
test
xor
mov
jno
jmp
adc
out
repz
or
flds
and
pushf
mov
xor
nop
jecxz
scas
pushf
ret
outsb
cmp
test
jb
mov
cmpsl
inc
cli
mov
jae
mov
mov
cmp
add
dec
in
cmp
insb
out
dec
xlat
jae
imul
repnz
seta
and
mov
or
cmpsl
sbb
dec
push
pop
out
std
jle
pop
out
xchg
aas
bound
add
jnp
dec
and
stos
jo
mov
fiadds
sub
jno
into
jo
lds
popf
hlt
loop
fs
push
js
icebp
push
lds
fdivrl
cmpsb
out
out
dec
xchg
xor
scas
out
and
sub
fdivl
popf
mov
mov
add
hlt
clc
adc
cmpsl
shrb
pop
push
ror
mov
xor
mov
outsl
cld
or
addl
int
mov
mov
sbb
jo,pn
aaa
imull
sub
xlat
jns
or
pop
fsub
or
cmpsl
jge
cmp
dec
dec
lock
xor
cmc
popf
sub
aad
dec
js
xor
jne
pop
dec
sbb
mov
mov
test
add
push
andb
call
adc
ret
mov
pop
push
and
aam
push
shrb
mov
movsb
addb
jge
inc
adc
xor
xchg
mov
or
gs
or
sbb
dec
add
pushf
hlt
mov
xor
xor
mov
jmp
call
push
pop
popa
cwtl
daa
punpckhdq
lcall
add
fcomip
fstps
ss
adc
push
sar
movsb
pop
cmc
idivl
scas
daa
mov
insl
dec
test
add
jl
rclb
and
es
push
aas
negl
fwait
sub
cmp
pop
lea
fwait
mov
mov
data16
jae
popf
test
imul
adc
icebp
add
push
pop
les
pop
data16
jp
push
fstps
out
les
mov
mov
repnz
ja
mov
lret
mov
lods
hlt
icebp
out
add
mov
aam
pop
fnstcw
insl
movsl
stos
xchg
in
fmuls
or
sarl
ret
jb
pusha
ret
cmp
push
or
push
mov
cs
add
rcrl
jb
push
add
test
mov
enter
jns
fdivrs
sbb
and
push
mov
and
xor
pop
or
loop
or
scas
sub
or
out
icebp
repz
mov
adcl
sub
into
mov
adc
jl
aad
aam
adc
inc
or
test
ds
in
dec
cli
xchg
lcall
cmp
fisubs
mov
cmpsl
outsl
out
push
or
xchg
dec
jmp
sbb
mov
lock
mov
rcll
pusha
movsb
fbstp
insl
push
sub
sub
and
cmpsl
ss
in
loopne
adc
aam
add
stc
cltd
mov
ja
repz
fmull
mov
or
popa
adc
mov
adc
ret
and
int
cwtl
sub
mov
mov
shrd
or
in
lock
ja
lods
mov
lret
push
fdivs
pop
or
pop
add
int3
cld
and
shrl
insl
xor
mov
xor
test
xorb
dec
call
or
or
mov
movsbl
cmp
je
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movsbl
jmp
fwait
xchg
out
cmp
aaa
sbb
lods
fists
jle
xchg
adc
adc
sub
outsl
mov
and
xor
jns
pop
sub
mov
shl
lcall
enter
das
aad
sbb
pop
inc
daa
push
xchg
sbb
test
testb
je
lods
add
mov
adc
or
cmp
cmpsl
pop
jl
aaa
xchg
adc
and
inc
jae
sub
nop
mov
pop
and
repz
xor
xchg
sub
lret
lods
and
rorl
push
cmpsb
push
aam
jne
cli
or
sbb
jb
sbb
je
mov
jae
popa
sub
out
ror
and
dec
mov
sbb
jg
mov
lcall
shrb
sub
popa
imulb
loope
in
pop
fldcw
test
hlt
cmp
subb
mov
std
test
and
mov
cltd
frstor
mov
adc
pushl
inc
mul
loop
or
and
adc
inc
icebp
leave
sbb
sub
jecxz
push
loop
cltd
fwait
int3
cmp
adcb
adc
adc
or
pop
mov
sbb
imul
inc
aas
mov
mov
mov
mov
mov
jge
lods
popf
test
adc
nop
mov
cld
ds
sub
rolb
pop
lcall
ss
fistpl
pop
sub
push
push
out
mov
dec
std
outsb
sub
ss
jle
xchg
out
popa
pop
xchg
mov
adc
imul
imul
imul
adc
out
imul
mov
push
rcrl
fidivrl
sub
lret
and
ljmp
pop
shr
in
cmp
das
sbb
fimull
pop
mov
xchg
pop
bound
sbb
xchg
add
add
decl
pushl
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
jmp
stos
f2xm1
mov
sahf
cmpsl
fldpi
xor
stos
jno
dec
mov
int3
movlps
outsl
inc
push
call
adc
adc
dec
test
insb
sahf
sbb
xchg
dec
movsb
cmc
mov
adc
inc
fmull
lea
mov
dec
xchg
imul
xor
aam
mov
dec
mull
jnp
lcall
adc
repz
ret
cld
stos
push
dec
loopne
movsl
push
adc
mov
stc
aas
decl
cmovg
jnp
xlat
dec
sub
mov
add
out
imull
xor
loope
sbb
scas
orb
xchg
pop
mov
inc
cmpsb
test
jecxz
pusha
into
testl
inc
dec
jbe
dec
lds
inc
test
cmp
adc
fistpl
scas
mov
xor
aas
das
hlt
adc
inc
push
loope
pop
les
sahf
arpl
lret
scas
cmc
mov
sub
lock
imull
xor
jo
mov
mov
loopne
cmp
add
push
cmp
fldenv
pop
xchg
push
flds
int3
adc
push
mov
out
pop
in
pop
pop
jmp
mov
movsb
push
mov
sub
lret
dec
or
or
shlb
hlt
in
mov
sbb
xchg
psrld
aaa
cmovno
add
mov
enter
popf
push
mov
push
call
cmp
stc
fld
inc
lock
xor
add
and
aaa
subl
xchg
mov
sub
inc
xchg
dec
lea
cld
hlt
cmpsl
xchg
mov
ss
lds
lock
into
or
in
icebp
push
pop
push
mov
sti
std
pop
ret
cmp
repz
or
inc
pop
les
ss
int
into
or
pop
loop
adc
call
pop
cmp
stos
jnp
aam
jmp
or
sub
mov
mov
jno
xchg
cwtl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
add
mov
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
jmp
push
loope
dec
cmp
push
fsts
fmull
mov
int3
movlps
lock
ljmp
jmp
sar
les
jge
cmp
jne
cmpsl
mov
orl
dec
cld
lret
or
dec
insl
inc
fs
testl
pop
push
cvttps2pi
repnz
outsb
movsb
cli
test
shll
add
movsl
push
mov
adc
addr16
or
inc
rcll
iret
inc
gs
push
pop
or
out
ljmp
inc
cmpb
ja
inc
add
cs
cmp
xchg
push
xorl
into
fistpll
vpshlb
fucom
pop
lahf
inc
jle
mov
and
mov
fsubs
xchg
in
cwtl
jl
aas
sti
icebp
xor
data16
add
xor
ret
push
add
mov
popa
pusha
xorb
cs
xor
dec
pushf
sbb
inc
jb
pushf
sbb
cmp
movsl
cwtl
fcoml
out
jne
or
dec
cmp
cwtl
pop
cltd
jne
call
jbe
xchg
test
dec
mov
jnp
leave
cmpsb
xor
adc
xor
and
jo
jae
arpl
mov
jl
mov
mov
aaa
jae
mov
adc
push
loop
mov
fdivs
popf
add
cmp
xchg
lock
mov
shll
stos
fdivl
inc
pop
push
shrl
into
shl
cli
mov
js
add
paddusw
dec
push
mov
sub
icebp
in
jb
test
cmp
xlat
dec
popf
lock
pop
mov
addr16
sub
add
stc
sbb
or
sbb
divb
and
sbb
push
and
int3
iret
xchg
sbb
xor
jnp
adc
leave
hlt
gs
test
rorb
push
insl
mov
xchg
pop
in
or
arpl
xor
and
ljmp
cmpsb
ja
test
decl
pushl
xor
mov
call
or
or
mov
mov
mov
cmpl
je
mov
mov
movzwl
mov
mov
mov
jmp
jmp
cmpl
jne
xor
jmp
mov
add
mov
movl
cmpl
je
cmpl
je
mov
shl
mov
movl
sub
mov
movl
mov
cmp
je
mov
mov
mov
mov
mov
mov
mov
inc
mov
jmp
movl
push
jmp
mov
mov
ret
cmpl
movl
movl
jmp
mov
jl
push
push
pushl
pushl
pushl
push
push
push
push
push
pushl
pushl
pushl
pushl
call
adcl
orl
sbbl
xor
and
movl
sbb
push
adcl
push
movzwl
and
mov
adcl
or
movl
jne
or
mov
mov
cmpl
movl
movl
jmp
movl
mov
jle
push
push
push
push
pushl
pushl
push
call
sub
and
inc
notl
or
or
xor
div
mov
mov
div
mov
jmp
mov
mov
mov
mov
jmp
mov
sub
push
inc
mov
outsb
test
adc
pushf
sahf
loop
ret
push
dec
lret
inc
mov
lea
sbbl
ja
orb
mov
in
pop
jbe
fs
imul
aas
outsb
dec
out
call
push
clc
jo
lds
jbe
test
test
and
popa
iret
cmpsb
push
out
es
mov
jecxz
pop
out
fadds
dec
movsl
xor
mov
sahf
jmp
push
adc
adc
enter
push
mov
insl
imull
roll
in
fs
and
and
loope
sub
add
cmpsl
gs
inc
xlat
xor
ss
xchg
pusha
out
or
stc
sti
iret
dec
fdivl
or
mov
mov
into
jmp
jg
mov
sbb
into
stos
iret
mov
xchg
pop
add
ljmp
inc
sub
and
sub
ss
mov
jge
pop
sub
lahf
xor
insb
lahf
out
out
xchg
push
adc
sub
scas
push
arpl
imul
inc
mov
dec
adc
xor
xchg
ss
mov
pop
imul
xlat
movsl
add
mov
cmp
mov
mov
aad
stc
insl
aad
cmp
stos
jp
das
xchg
or
fisttps
out
or
pop
pop
out
leave
lods
push
aad
nop
cmpb
push
das
nop
dec
pop
sbb
or
xor
jge
inc
mov
pop
mov
sub
ds
mov
add
loop
mov
cwtl
push
rcll
in
ja
in
jecxz
jae
inc
xchg
data16
xor
lcall
inc
mov
mov
repnz
pop
daa
lcall
daa
jno
jle
mov
push
stc
testl
enter
and
mov
mov
aam
push
inc
add
cmp
jmp
aaa
je
adcl
test
xlat
jns
rolb
sub
lods
dec
cmpb
lods
push
in
popl
push
and
je
loope
sub
cmp
jbe,pt
xor
mov
sub
jmp
or
mov
jae
aad
andl
popa
add
std
idivl
cli
sbb
pop
arpl
aam
push
fs
orb
and
scas
adc
loop
in
xor
scas
mov
loopne
test
jb
je
insb
pop
popf
scas
lcall
mov
and
xor
gs
scas
ds
xchg
mov
dec
adc
test
dec
ret
add
sbb
pop
jns
pop
cmp
push
pop
shll
mov
cltd
popf
stc
jne
ret
das
fwait
pop
xchg
sub
nop
shll
sbb
aas
fstps
shl
and
outsb
inc
xor
and
sbb
push
loope
in
xchg
stos
out
or
push
jb
arpl
adc
sub
lds
push
jmp
sbb
mov
in
fildll
add
xchg
mov
sbb
notl
dec
sbbl
loop
add
fwait
int3
xor
in
pop
cwtl
cld
cmp
scas
aam
mov
dec
inc
shr
jmp
les
jno
sbb
and
lret
push
pop
test
push
adc
adc
insl
loopne
das
divl
test
jnp
pop
sbb
add
mov
popa
adc
push
adc
pop
shr
js
cmp
inc
or
jo
daa
push
mov
xchg
nop
fdivp
add
mov
cmp
insb
lahf
pop
imul
push
clc
jg
push
mov
je
inc
xlat
bound
mov
rcll
mov
pop
push
loop
mov
add
cmpsl
jl
sbb
hlt
mov
outsb
xchg
mov
jg
jb
adcb
pushf
inc
ljmp
pop
sbb
add
mov
dec
adc
and
scas
and
push
cmc
lods
int
loope
xchg
cmpsb
push
into
lods
mov
sub
xor
sub
ja
add
rolb
ja
ret
dec
mov
mov
push
mov
cs
data16
push
fwait
les
pop
in
in
sbb
leave
jnp
cs
sahf
sahf
xchg
popa
mov
jg
xchg
dec
mov
out
iret
xchg
je
aad
jp
cmpsb
cltd
jp
pop
cmpsb
insl
negl
xor
ret
or
stos
loopne
or
mov
jl
jnp
mov
and
xchg
push
outsl
das
sbb
loop
or
call
lcall
hlt
inc
push
mov
test
or
mov
int3
in
aaa
insl
sahf
inc
dec
movl
pop
hlt
xor
jbe
mov
outsb
adc
add
fists
loop
xor
xchg
cmc
shrl
xchg
pop
pop
adc
mov
test
jno
incl
xor
add
aaa
or
xor
or
mov
lret
rol
pop
adc
test
sub
and
adc
xchg
xor
testl
loopne
mov
sub
push
daa
stos
stos
aam
fcoml
int3
adc
jge
test
in
or
clc
mov
inc
int3
int
xchg
inc
pop
lods
mov
jecxz
dec
dec
cmc
shr
and
mov
adc
popa
shr
xchg
mov
arpl
lcall
daa
insb
push
inc
hlt
insl
lods
add
sbb
cmpsb
push
lret
dec
popa
xor
scas
or
mov
popf
addps
lcall
popa
pop
insl
inc
cmp
inc
inc
push
stos
cltd
push
and
out
iret
push
loop
sahf
jg
xlat
mov
arpl
out
loopne
repz
xchg
lods
cs
dec
aam
movb
sahf
adc
mov
xchg
and
jge
sub
sub
pop
mov
xorl
fsin
dec
xchg
lods
push
lea
rol
sbb
cmp
sbb
sub
pop
mov
loop
xor
cmpsb
out
or
or
pushl
bound
cmp
es
mov
push
mov
jecxz
and
adc
insl
cmpsb
cmpsb
in
ljmp
aas
stc
outsl
push
arpl
cwtl
adc
je
nop
clc
push
clc
push
dec
pop
xor
pop
xchg
xchg
xor
repnz
enter
cmp
addr16
push
sub
shr
rcr
or
jne
div
mov
mull
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
xor
mov
pop
pop
ret
subl
movl
cmpl
movl
je
sbb
add
mov
movzbl
mov
pop
pop
pop
leave
ret
movl
cmp
movl
jae
movl
cmp
jae
shld
movl
shl
ret
mov
xor
subl
and
shl
ret
xor
xor
ret
