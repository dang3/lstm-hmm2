push
mov
sub
mov
mov
cmpl
mov
movl
movl
mov
jmp
mov
movl
cmpl
jle
pushl
push
push
push
push
push
call
add
xor
or
adc
mov
adc
movzbl
adc
sbb
orl
xorl
xorl
mov
sub
jmp
mov
cltd
jg
push
int3
mov
mov
mov
ficompl
jne
ficoml
xorb
cmc
fcmovbe
bound
loope
pop
outsl
call
ret
popf
adcb
aaa
ds
mov
adc
fwait
lret
imul
jb
mov
popa
sti
out
aas
imul
das
sub
ret
mov
inc
scas
and
dec
inc
scas
les
fildll
cmp
dec
or
orb
cmpsl
inc
or
mov
mov
inc
mov
imul
and
adc
sub
jnp
cld
jg
mov
cmpsb
push
data16
fadd
aad
jb
mov
pop
into
jl
sti
out
fcmovnu
inc
jecxz
push
call
or
xchg
lods
xchg
loop
jecxz
jbe
or
imul
clc
pop
repz
inc
push
xchg
in
sbb
ds
inc
aad
and
sub
rcrb
xor
imul
mov
cli
mov
int3
dec
fnsave
or
lcall
sub
into
fistpll
cmc
dec
push
int3
cmp
fsubl
lret
popf
cmp
mov
insl
adc
pop
push
arpl
sbb
data16
and
mov
loope
and
sahf
xor
adc
mov
sub
fwait
inc
fcom
jle
or
inc
loopne
push
lss
es
sub
add
xor
popf
cmc
and
inc
iret
pop
sub
inc
mov
mov
in
insb
addr16
jge
push
xchg
loope
lock
push
test
hlt
movsl
mov
fldl
lock
out
dec
cmp
stc
sub
dec
pop
push
ja
js
mov
fldt
clc
test
inc
mov
cmp
das
push
xor
sti
or
mov
icebp
push
push
pop
jge
jb
mov
aam
fwait
add
adc
jnp
std
ljmp
outsl
add
sbb
adc
push
mov
xchg
cmpsb
cmp
pop
push
xor
push
ja
and
cltd
add
fdiv
aaa
or
loop
jnp
pop
cmpsb
fisubrl
sub
ret
insb
scas
push
jecxz
sub
out
or
inc
shlb
clc
imul
mov
pop
sbb
ljmp
add
addb
jge
mov
sbb
movzbl
adc
mov
orl
cmpl
mov
mov
jmp
mov
cmpl
jle
pushl
push
call
sub
add
inc
xor
add
adc
sbb
sbb
adc
orl
mov
sbb
mov
or
mov
movzbl
sbb
mov
sub
mov
sbb
mov
cmpl
movl
movl
movl
mov
jmp
movl
cmpl
jae
push
push
push
push
call
xor
or
adc
xor
and
xor
adc
xor
cmpl
mov
movl
not
movl
jmp
movzwl
cmpl
je
pushl
call
movzwl
add
mov
and
xor
adc
inc
adcl
mov
sub
orl
orl
add
lea
xor
add
add
mov
mov
adc
mov
mov
add
xor
add
mov
sub
add
mov
andl
jmp
das
jp
mov
mov
xchg
sbb
mov
pop
je
pop
jg
idivl
ja
bound
sbb
cmp
xchg
add
jae
enter
xor
js
sbb
and
stos
pop
cld
out
aas
fdivrs
movsl
and
sub
mov
loopne
xchg
nop
adc
pop
iret
pushf
jnp
mov
inc
sub
fisubrl
daa
mov
and
or
test
in
inc
fistpl
jle
lret
lahf
gs
cltd
mov
and
pushf
add
jg
mov
fsubp
popa
lcall
fcompl
dec
rorb
idiv
push
xor
cmp
or
or
ret
out
je
gs
icebp
adc
jecxz
lahf
pop
jmp
ljmp
stos
cltd
push
push
insl
shrl
dec
cld
test
adc
loop
hlt
scas
pop
jecxz
ror
mov
cmpsl
addr16
rcr
hlt
cmpsl
sub
pop
push
ja
mov
notl
pop
pushf
cli
fwait
mov
stos
lds
xchg
inc
mov
pop
scas
sbb
cmp
insb
lret
mov
and
cli
sbb
movsb
mov
in
jb
das
dec
push
pop
stos
das
outsb
outsl
fisttpl
cmp
sti
and
pushf
xchg
pusha
xor
jp
les
cmpsb
lock
dec
adc
daa
cmp
and
sbb
add
mov
or
mov
ds
lret
fwait
les
sbb
mov
jae
adc
jb
sub
loopne
jge
pop
pusha
jle
mov
js
imul
fcoms
xchg
and
ror
sub
jmp
out
lret
xor
add
int
lret
push
mov
pusha
jp
loopne
mov
pusha
iret
imulb
mov
nop
cmpsl
inc
pusha
push
jno
add
pop
lcall
fidivl
enter
repz
insl
jge
movsl
int3
test
sub
js
les
cmpsl
int3
pop
lea
clc
mov
push
or
out
xchg
xor
aaa
xchg
xchg
std
mov
sbb
cmpsl
or
add
xchg
aad
sbb
rcrl
ljmp
out
or
mov
fsubs
icebp
and
jnp
fcmovb
ds
fistl
hlt
cmp
inc
stc
mov
mov
mov
cmpl
mov
mov
mov
jmp
mov
cmpl
jb
push
pushl
call
and
adc
xor
xor
xor
xorl
or
xor
mov
shrd
add
shr
jmp
xchg
cmp
push
mov
daa
cmpl
sarb
mov
jo
add
sub
xchg
sub
push
test
mov
inc
std
inc
mov
xchg
jle
popf
mov
test
dec
in
jnp
fwait
inc
push
dec
cmp
data16
and
add
ljmp
xchg
dec
adcb
pushl
es
jecxz
mov
sbb
movsb
popa
mov
repnz
sbb
xlat
adc
pop
mov
sbb
inc
gs
mov
xchg
adc
inc
jl
jbe
jmp
push
in
and
xchg
and
dec
mov
call
pop
inc
inc
mov
add
xchg
out
xor
mov
outsb
pop
std
lods
loopne
xchg
and
or
or
mov
fisubs
jb
xlat
lock
test
stc
push
fildl
xchg
push
xchg
cli
push
repz
mov
dec
pop
xor
es
arpl
jmp
and
pop
pushf
dec
sti
and
int
lret
gs
jne
cmp
std
mov
sarl
test
sahf
mov
int
xchg
out
push
dec
scas
xchg
inc
aaa
push
ret
pushf
cvtps2pd
mov
pop
jge
lods
sbb
mov
dec
xlat
xchg
sub
sahf
cmp
and
mov
stos
sti
fmul
insl
pop
dec
mov
fidivrl
mov
xor
jae
jnp
xlat
push
inc
xchg
sub
xor
stc
cli
mov
out
out
outsl
and
xor
or
addr16
xchg
xor
xchg
xchg
lock
in
push
arpl
push
sbb
lret
out
fisubrs
iret
push
nop
loop
jns
dec
inc
mov
cmp
hlt
js,pt
cld
mov
divl
sbb
xor
pushf
stos
adc
std
movsb
subb
mov
push
inc
cmc
cmp
les
push
icebp
aaa
pop
xchg
pop
sbb
in
cmc
mov
ficomps
in
lea
leave
adc
or
icebp
test
ss
lods
pop
std
sbb
jg
xor
inc
jecxz
ret
aas
lret
sarl
jns
sub
dec
pop
repnz
in
insl
vorps
dec
stos
movsb
popa
out
jne
sub
cmp
adc
fdivs
insl
pop
in
xchg
mov
mov
lock
or
pop
aaa
test
inc
je
js
pop
and
mov
jno
xor
pushf
xchg
xor
mov
dec
sbb
dec
sbb
adc
mov
xor
orl
xor
subl
or
sub
mov
and
movl
movl
xor
or
sbb
movl
movl
decl
movl
cmpl
movl
mov
movl
movl
jmp
mov
cmpl
je
push
call
xorl
movl
orl
subl
andl
mov
sbb
mov
movl
cmpl
movl
mov
movl
jmp
mov
cmpl
jg
push
push
push
pushl
call
sbb
subl
or
addl
sbb
adc
xorl
movl
cmpl
mov
movl
movl
movl
jmp
mov
movl
cmpl
jge
pushl
push
call
subl
adc
orl
addl
subl
or
movl
subl
movl
movl
movl
sub
movl
or
movl
cmpl
notl
movl
jmp
movzwl
mov
cmpl
jbe
pushl
pushl
pushl
pushl
call
orl
addl
orl
sbb
addl
adcl
movl
dec
movl
sbb
movl
xor
add
mov
and
movl
sub
movl
movl
cmpl
mov
movl
movl
jmp
movl
mov
cmpl
jne
pushl
push
call
xorl
sbbl
and
orl
orl
add
andl
movl
movl
cmpl
movl
movl
jmp
movl
cmpl
jbe
pushl
pushl
push
push
push
call
addl
adc
sbbl
adcl
adcl
movl
cmpl
mov
movl
movl
jmp
movl
cmpl
ja
pushl
pushl
push
call
add
add
sbbl
andl
andl
and
andl
xorl
movzbl
xor
mov
subl
jmp
inc
jb
mov
pushf
pop
add
push
arpl
int
mov
flds
insl
sbb
lret
sbb
mov
out
int3
push
or
inc
repnz
push
dec
sbbb
sarl
inc
mov
fiadds
orl
cmpsl
xchg
mov
mov
and
repnz
sbb
incb
pushf
in
or
mov
pop
jp
xchg
mov
xchg
push
test
sub
dec
sbb
test
pop
jnp
mov
dec
pop
aas
lods
lret
jns
jo
inc
std
mov
call
dec
pop
rolb
adc
add
ljmp
hlt
bound
pusha
sub
adc
cld
pop
add
pop
mov
dec
popa
dec
mov
xor
sub
xchg
push
aam
clc
xlat
cmp
pop
repz
ficompl
xlat
sbb
xor
dec
or
pop
cwtl
hlt
in
das
aad
repz
mov
add
fisubrs
bound
hlt
mov
int
sarl
jnp
xchg
push
push
xrelease
inc
rcrb
call
push
lds
push
test
dec
cltd
fisubrl
sbb
iret
push
adc
jns
es
repz
movsl
jne
jge
es
jg
lds
nop
jle
inc
xchg
rorl
xchg
mov
or
and
les
iret
add
and
xor
pop
add
gs
mov
popf
repnz
xchg
xchg
push
fadds
xor
xchg
or
stos
fistpll
inc
xor
push
mov
mov
xor
or
jmp
cmp
jno
add
sti
push
ret
in
xlat
xchg
add
mov
adc
sbb
pop
lock
adc
pop
jle
repnz
popa
iret
cmp
vmread
outsb
idivb
cmpl
std
mov
jo
loopne
sub
pop
call
jno
lcall
adc
pop
ljmp
lock
push
mov
sub
sbb
fidivs
test
mov
clc
popa
xor
ljmp
in
call
inc
je
insb
pop
jne
iret
adc
cltd
xchg
xchg
fsubp
loopne
loopne
xchg
popf
outsl
in
lea
or
inc
jno
xor
out
lods
inc
or
cmp
add
add
dec
movsb
push
push
push
push
call
xor
mov
mov
cmpl
mov
mov
movl
jmp
mov
cmpl
jl
pushl
call
mov
sbb
xorl
adc
sbb
or
sbb
add
cmpl
movl
mov
mov
jmp
movl
cmpl
je
pushl
push
call
xor
add
adcl
or
adc
subl
and
xor
mov
mov
sub
mov
mov
sub
and
mov
lea
xor
or
mov
sbb
mov
mov
mov
sub
mov
adcl
or
and
movl
mov
addl
or
xorl
xor
cmp
movl
jne
mov
adc
mov
mov
mov
sub
imul
jmp
add
sub
inc
mov
mov
sti
fildll
mov
fwait
or
roll
jg
cmpsb
add
lret
clc
mov
dec
xchg
clc
xchg
inc
add
cmc
insb
fwait
rcrb
xchg
call
adc
push
mov
xor
jne
leave
sub
jmp
daa
jg
xor
add
cs
sub
pop
dec
les
jnp
cmp
jmp
jecxz
jne
pop
dec
mov
mov
lret
inc
add
xorl
gs
or
mov
enter
push
popf
xchg
in
mov
mov
push
sti
mov
pop
out
xchg
push
mov
stc
ljmp
jp
jmp
ret
stos
add
sub
and
sub
xor
test
sub
sbb
jne
fs
int3
in
int3
in
mov
or
or
adc
dec
aas
cli
std
sahf
xchg
or
mov
aas
and
lods
mov
aas
sahf
push
stos
mov
aaa
pop
push
add
cmp
shrl
in
popf
mov
dec
rcll
aas
repnz
rclb
stos
sub
mov
sub
push
mov
fimuls
in
dec
stos
or
jge
push
iret
xchg
mov
or
or
sub
cmp
xor
sarb
xchg
iret
or
pop
mov
mov
add
icebp
sub
out
test
jno
and
pop
into
push
jns
movsl
fcoml
shlb
mov
flds
aad
xor
fmul
hlt
popa
push
rcrl
jo
iret
xchg
pop
fidivl
sahf
call
jne
mov
das
mov
stos
jmp
mov
add
cmp
mov
add
ds
sbb
xchg
sbb
aas
push
and
cltd
scas
jns
insl
insl
cltd
sbb
hlt
xlat
and
mov
movsl
mov
lods
leave
mov
bound
insb
push
cmpsb
pop
fs
cmc
fmull
fs
jp
pop
jno
jmp
fsts
das
cwtl
mov
arpl
push
scas
pop
mov
mov
or
repnz
es
setno
movsb
clc
imul
ret
cmp
xor
push
xchg
cmpsb
popf
mov
xchg
inc
push
gs
xchg
or
ja
fsubl
leave
pop
mov
mov
shrd
addl
shr
andl
mov
andl
mov
subl
shl
xor
xor
or
movl
mov
movl
cmp
jne
cmpl
mov
mov
mov
mov
jmp
movl
movzbl
cmpl
jl
push
call
sub
notl
sbb
sbb
orl
andl
mov
mov
xor
mov
cmpl
mov
mov
jmp
mov
cmpl
jbe
push
call
mov
add
or
add
or
subl
mov
adc
mov
addl
shrd
andl
mov
cmpl
mov
movl
jmp
movl
cmpl
jg
push
pushl
push
call
adc
sbbl
sub
sub
not
and
mov
add
dec
mov
xor
sbbl
shr
xor
mov
movl
xor
or
shl
movzwl
xor
mov
sub
mov
xor
mov
adc
mov
add
mov
add
mov
add
mov
or
mov
neg
shrd
shr
xor
or
mov
add
mov
andl
mov
add
xor
shl
xor
adcl
or
mov
mov
addl
shrd
shr
movzwl
sub
mov
mov
sbb
mov
orl
mov
xorl
xor
xor
sbbl
or
notl
shl
subl
lea
and
mov
notl
mov
movl
shrd
shr
mov
xor
mov
cmpl
movl
mov
jmp
movl
cmpl
jge
pushl
push
push
push
call
sub
add
xor
sub
sub
and
movzbl
or
sbb
xor
mov
xor
xor
mov
andl
xor
or
addl
shl
sbbl
imul
xorl
mov
mov
addl
shrd
mov
xor
mov
subl
xor
shr
sbb
mov
movzwl
or
mov
xor
andl
or
orl
shl
andl
sub
movl
mov
mov
cmp
jmp
sbbl
xchg
popf
xchg
mov
jb
or
sarb
fimull
push
out
xchg
lret
push
int
push
and
clc
das
icebp
fsubrp
pop
cmp
mov
xchg
pushf
and
sub
and
jle
sub
fiadds
sbb
jmp
adc
repnz
loope
dec
sahf
arpl
mov
adc
inc
jge
mov
pop
mov
jnp
enter
inc
int
or
aam
push
out
outsl
push
fs
repz
lret
cmp
mov
mov
pop
and
cmp
push
movsb
jecxz
mov
dec
fistps
and
fisubrs
push
les
add
repnz
outsl
mov
xor
xor
leave
shlb
leave
xchg
not
adc
mov
into
mov
pop
test
sti
cwtl
push
ja
rcrb
push
xchg
cmp
lods
movsl
push
pop
fwait
push
cld
fnsave
scas
mov
mov
pop
jp
pop
and
adc
insb
add
movsl
loop
mov
xchg
in
rcr
cli
add
and
cmp
aad
in
push
xor
aam
push
jbe
cli
lahf
xor
jmp
incl
paddq
xor
in
sub
dec
adcl
out
pop
jne
data16
hlt
lret
cmc
jo
pushf
sub
adc
out
cmp
mov
push
sbb
gs
push
mov
fnstsw
mov
mov
sub
test
mov
clc
dec
push
in
loope
gs
movsl
mov
popa
xlat
add
inc
xlat
xchg
insl
cmpsb
pop
nop
push
sti
xor
mov
call
mov
add
cwtl
add
rcrl
test
mov
repz
or
add
cmp
sbb
lds
ret
ds
stc
lea
rcl
pusha
mov
insb
inc
adc
mov
pop
sbb
mov
pop
jne
repnz
ficompl
jl
es
jno
lods
test
stos
jge
das
and
dec
xchg
mov
push
or
ret
xchg
pop
push
in
movsb
js
lcall
repnz
ret
jb
dec
int3
lods
repz
ret
mov
inc
fmuls
outsl
push
mov
add
in
decb
and
aas
add
mov
mov
movl
jg
jmp
pop
sbb
outsl
mov
nop
pushf
jg
fnstsw
mov
outsb
out
and
daa
out
cwtl
pop
out
adc
adc
fwait
xchg
leave
xor
mov
pusha
xchg
mov
std
loope
inc
iret
pop
add
sahf
add
aas
insl
ret
mov
mov
insb
das
adc
jl
jb
bound
jb
jb
jno
xchg
adc
push
hlt
push
enter
pop
fbstp
inc
in
lods
repnz
pop
mov
outsb
jmp
cmp
inc
fdivrs
lret
stos
fisttps
sbb
mov
lock
sahf
dec
loopne
mov
or
aad
jae
xor
int3
or
roll
mov
pop
and
mov
push
outsb
ret
mov
xchg
sahf
xor
mov
jne
lret
push
in
icebp
call
adc
push
add
push
pop
jg
xchg
in
inc
in
lods
or
sahf
mov
sbb
push
js
cld
sbb
repz
add
pop
inc
lret
movsl
jmp
les
iret
rcrb
scas
dec
dec
addr16
enter
fdivs
cmp
out
int3
xor
ds
popa
jae
mov
mov
cmpsl
arpl
mov
adcb
adc
and
inc
fldl
ss
out
pop
jge
out
push
sbb
mov
pop
mov
cmpsl
ljmp
cmp
repz
lds
mov
sub
in
pop
mov
fsubl
lds
push
add
push
lcall
xchg
add
cli
stc
les
push
xor
mov
shrb
sbb
in
pop
mov
xchg
adc
mov
xor
stos
das
movsl
mov
stos
xchg
fs
cmp
xchg
in
mov
dec
fisttpll
inc
dec
testl
xor
popw
pop
add
lret
out
push
subb
ret
sbb
cmc
sbb
sahf
cmpsb
addr16
sbb
leave
in
clc
xorl
in
cli
lret
out
into
add
adc
cwtl
or
mov
cmp
pusha
push
mov
xorl
es
mov
sbb
mov
cltd
fwait
inc
and
lea
jno
mov
lods
roll
movl
jmp
xorl
mov
sbb
jno
aas
pop
xor
mov
dec
inc
dec
mov
cli
cmp
inc
aas
adc
mov
and
pop
add
push
lods
mov
data16
mov
dec
arpl
and
pushf
and
jno
in
jno
mov
es
hlt
mov
pop
xchg
clc
cltd
mov
jmp
fmuls
adc
sbb
gs
sub
lods
aaa
cmc
arpl
clc
cmp
cmc
imul
inc
cmp
sub
lods
xchg
or
sub
xchg
into
jnp
fndisi(8087
les
ss
add
or
rclb
gs
in
insb
push
mov
in
adcl
pop
mov
ljmp
adc
fwait
mov
push
idiv
imul
sti
lahf
mov
inc
cmp
dec
icebp
ret
sub
xor
gs
mov
loope
je
inc
dec
sahf
sbb
fbstp
aas
cltd
push
pop
loop
pop
mov
and
repnz
jns
cmp
inc
jp
mov
jno
mov
jecxz
test
ljmp
lds
mov
and
mov
insb
retw
xchg
pop
pop
into
xlat
fcoml
mov
aam
mov
lods
add
in
inc
scas
negl
aad
xor
mov
hlt
orl
add
scas
popa
fnstsw
sbb
xor
push
nop
inc
jmp
outsl
lcall
mov
mov
push
mov
lret
nop
mov
fwait
mov
jge
push
clc
dec
insb
push
faddl
cmp
inc
pusha
mov
lret
ss
mov
lea
test
pop
xlat
adc
cmpsb
push
enter
ja
lds
ret
in
pop
movsb
sahf
aam
ret
xchg
lock
je
mov
test
and
inc
lea
cltd
lret
add
fdivrs
lcall
jle
lods
jne,pt
js
and
stos
xor
rolb
add
iret
adc
sahf
mov
scas
sbb
xor
adc
fmull
sub
loope
jp
aam
mov
xor
out
push
vsubsd
fwait
aam
mov
dec
loopne
lds
xor
mov
rcrl
dec
sbb
add
jge
xorl
shl
notl
xor
andl
or
shr
cmpl
mov
mov
movl
jmp
mov
cmpl
jg
push
call
sub
adcl
mov
adc
movzbl
xor
mov
mov
cmpl
mov
movl
movl
jmp
movl
movl
cmpl
jne
pushl
push
push
call
adcl
neg
mov
mov
sbb
sbbl
movl
mov
addl
mov
mov
orl
shrd
shr
mov
mov
xor
mov
cmpl
movl
movzbl
mov
jmp
movl
cmpl
jbe
pushl
pushl
pushl
push
pushl
pushl
call
subl
sbbl
or
adcl
sub
mov
or
mov
addl
mov
adcl
jmp
cmp
in
jmp
mov
movsl
sti
jecxz
and
dec
jecxz
mov
mov
cmp
and
addr16
pop
jge
pop
jne
flds
dec
push
mov
or
add
ret
popa
sbb
xchg
stc
inc
test
push
add
loopne
cmp
cmp
inc
int3
cs
lods
insb
jle
mov
stc
stc
xchg
call
mov
jp
jmp
dec
mov
mov
mul
or
rcll
mov
and
jmp
push
cmp
pop
mov
mov
addl
xchg
push
pop
mov
xlat
pop
pop
cwtl
loopne
sbb
pop
xorb
test
lret
push
ret
call
lahf
dec
js
add
cli
mov
mov
test
std
add
imul
arpl
add
std
adc
adcl
mov
xor
or
pop
mov
xchg
cmpsl
push
push
inc
hlt
mov
rcr
adc
repz
test
add
mov
inc
adc
cmpsb
stos
xchg
jp
jl
mov
clc
sbb
mov
adc
push
sar
test
jle
call
test
push
mov
arpl
scas
popa
repnz
nop
or
jns
dec
test
mov
dec
bound
xchg
inc
adcb
in
btc
add
mov
inc
fisttpll
imul
fnstcw
add
add
loop
inc
loopne
in
test
xorl
xor
dec
roll
rclb
pop
mov
jge
iret
into
push
add
push
mov
push
inc
jb
jge
and
jno
roll
mov
dec
mov
imulb
xchg
pop
dec
ss
push
mov
mov
es
xor
enter
sub
lcall
aas
imul
ja
jg
xchg
div
mov
sahf
cmc
mov
sbb
out
cmp
sub
aaa
xchg
xchg
jmp
and
jne
scas
or
add
notb
adc
outsb
ss
dec
xchg
or
aam
std
jle
fstps
mov
jnp
fwait
xor
pop
xchg
mov
imul
arpl
es
in
inc
and
lret
outsl
xor
push
in
loop
fwait
inc
mov
inc
mov
aas
add
jmp
out
push
lods
mov
mov
rolb
add
inc
add
push
in
add
arpl
add
loope
imul
addl
sub
movl
jmp
shrd
mov
mov
addl
xor
shl
xor
sbbl
or
shr
cmpl
mov
movl
movl
jmp
movl
cmpl
je
pushl
push
call
movzwl
add
xor
neg
xor
sbb
or
mov
jmp
push
cltd
cmpsb
icebp
lods
cmc
popf
mov
add
mov
or
inc
cwtl
or
scas
lock
xor
lret
dec
cmpsb
jmp
shr
jecxz
mov
test
movsb
aam
imul
xorb
mov
test
push
and
mov
cltd
mov
sbb
cmp
gs
pop
mov
or
adc
fisubrs
push
jae
and
mov
je
sbb
jne,pt
mov
idivb
mov
enter
pop
xor
add
roll
inc
adc
jo
push
aaa
lret
push
imul
mov
cli
push
mov
inc
jae
sarb
dec
iret
insl
inc
inc
add
jl
jl
cmp
cmc
stos
jl
adc
dec
iret
fidivrs
mov
shl
sbb
adc
lcall
repnz
push
aaa
cmc
stc
icebp
inc
dec
bound
aam
stos
testl
loopne
mov
xchg
sub
pop
dec
push
jmp
shll
push
dec
test
int3
or
and
dec
and
ljmp
mov
repz
lods
pop
lea
xchg
and
aam
lock
jb
mov
push
and
jg
adc
inc
jecxz
add
mov
xor
loopne
adc
or
repnz
jmp
jl
sub
pop
mov
adc
inc
cli
jno
push
js
pop
jno
stc
popf
dec
or
dec
stos
fdivr
stos
add
inc
pop
in
push
sub
shrb
pop
iret
jle
bound
push
pop
dec
adc
shrl
hlt
test
out
and
push
adc
or
cli
push
mov
out
mov
mov
mov
add
bound
out
mov
adc
repz
mov
nop
js
jo
adc
fldl
popf
push
push
insl
cltd
clc
mov
sub
sub
js
rclb
iret
push
jle
push
sub
mov
dec
and
xchg
mov
jl
mov
scas
ljmp
xchg
bound
lcall
adc
adc
inc
pop
ret
lds
xchg
add
es
divl
cli
scas
cli
dec
icebp
lret
mov
aas
xchg
ja
leave
das
sbb
scas
mov
push
xor
jne
push
push
xor
sbb
dec
aam
push
add
mov
shrd
addl
shr
or
mov
andl
mov
mov
addl
xor
addl
jmp
pop
dec
dec
jo
je
jae
testl
sti
outsb
lock
mov
mov
inc
xor
mov
sub
mov
sub
adc
cmc
push
push
jae
div
mov
cmpsl
xchg
push
and
mov
loop
push
xor
sbb
xchg
out
push
sub
sbb
jmp
pop
rcrl
fdivl
inc
push
stc
lea
js
xchg
ds
pop
mov
fidivl
lret
loopne
mov
xchg
dec
xchg
int3
push
mov
mov
and
add
loopne
jb
cmp
mov
loope
xchg
rclb
cs
mov
sub
inc
fisubs
into
adc
or
cmp
pop
adc
cmp
shlb
or
or
jecxz
sub
adc
jno
xchg
cmp
mov
mov
cmp
jae
cmp
jo
sbbl
sub
imul
aas
lret
cmp
adc
sbb
rcrb
mov
sarl
aad
push
sbb
add
pop
or
push
pop
stc
mov
je
mov
mov
sub
adc
jmp
fcoms
add
into
push
xchg
xor
mov
into
xchg
jp
clc
and
cmp
jecxz
cmp
das
lret
sbb
mov
mov
pop
sub
and
jno
mov
jns
and
stc
xchg
jg
xchg
inc
icebp
fisubrs
jge
call
stos
mov
mov
aaa
jne
jmp
rclb
and
mov
push
add
xor
lock
mov
lea
mov
push
rorl
fs
repz
movsb
lds
popl
pop
sub
outsb
adc
push
xchg
jp
mov
push
xchg
lea
push
test
ds
ja
mov
adc
cmpsl
je
neg
orl
loopne
and
cmc
jmp
adc
pop
daa
daa
xchg
and
in
xchg
and
cmp
pop
pushl
jge
sbb
mov
sahf
cwtl
lret
mull
ffree
and
xor
mov
jae
or
cwtl
push
jne
cmp
jmp
mov
iret
fidivrl
mov
or
dec
int
in
xchg
stos
mov
das
int3
sub
outsb
js
push
sbb
rorb
push
in
xor
xchg
addl
mov
sbb
or
add
sbb
add
cmpl
movl
movl
jmp
mov
mov
cmpl
jne
pushl
push
push
pushl
push
call
xor
or
sbb
mov
sbb
or
subl
mov
mov
or
shrd
shr
mov
mov
xor
shl
xor
or
mov
movl
mov
mov
movl
mov
movl
mov
movl
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
lea
mov
mov
mov
shrd
shr
mov
mov
shl
mov
xor
xor
or
mov
mov
xor
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
lea
mov
mov
mov
jmp
jecxz
mov
mov
test
xchg
sti
test
mov
mov
aas
pop
cmp
push
adcl
rcrl
jne
out
les
or
mov
gs
adc
mov
loope
outsb
push
mov
pop
or
xchg
dec
dec
movsl
adc
add
fistps
sub
fs
test
add
inc
insl
dec
loopne
mov
mov
loopne
sub
in
jbe
and
test
mov
into
cmp
scas
and
ret
es
and
ds
test
lods
lret
xor
sbb
dec
repnz
movsb
stos
insl
and
clc
fsubr
xchg
bound
xor
into
pusha
add
add
in
and
jbe
adcb
sub
nop
jb
and
mov
lods
xchg
sbb
lret
mov
mov
cmc
dec
mov
cmc
inc
cmp
sub
mov
mov
lods
mov
es
inc
jecxz
mov
mov
and
mov
sti
pushf
mov
cli
call
out
shlb
mov
gs
out
sub
or
ja
xor
call
call
imul
or
js
and
rol
lds
jmp
inc
pop
fstsw
mov
pop
add
push
in
icebp
sbb
push
movsl
mov
push
sbb
xchg
mov
mov
mov
lret
rorl
xchg
hlt
stc
mov
test
cmp
add
pusha
dec
mov
sub
shl
mov
mov
mov
sbb
out
mov
mov
mov
mov
cmp
cmp
fsubs
mov
xchg
push
clc
push
push
mov
es
clc
cmpsb
popa
pushf
pextrw
ja
dec
mov
inc
xchg
pop
cmp
popa
inc
sub
jecxz
dec
stc
xor
push
mov
popf
xor
cwtl
fsubrs
icebp
sahf
shlb
cmc
xchg
xorl
dec
in
jnp
cmc
add
sub
aam
inc
clc
cmp
int
fstpt
xor
or
inc
mov
xor
stos
mov
xlat
minps
xor
lods
enter
add
in
loope
mov
xor
xor
or
mov
mov
or
mov
mov
shrd
shr
mov
mov
xor
shl
xor
jmp
in
cli
js
mov
push
or
das
xchg
idivb
mov
sub
ret
xor
inc
inc
or
ss
daa
sub
out
loopne
push
in
xchg
or
jae
cmpsb
lret
cmp
xchg
pop
imul
je
cltd
fcmovnb
pop
ds
xchg
shlb
mov
pop
push
push
stos
mov
int3
imul
push
cmpsl
movups
add
push
and
cmpsl
bound
js
out
in
popa
jecxz
push
and
push
test
in
mov
rcrl
fsubl
sub
xchg
cwtl
add
mov
mov
add
mov
dec
lret
mov
les
xchg
cltd
roll
push
shll
call
mov
shr
pusha
ret
aas
and
jle
jp
les
push
in
mov
add
cmp
pusha
adc
jns
mov
inc
movsl
sahf
push
outsb
mov
pusha
fildll
add
sub
mov
fcompl
jns
cltd
push
mov
pop
xor
cmc
repz
lods
inc
lea
or
mov
ss
leave
lret
push
ds
ss
mov
cmpsb
sub
sub
fsubr
call
adc
push
push
call
loope
pop
xchg
test
out
jbe
pop
jbe
pop
push
pop
jg
les
fidivrs
and
mov
add
mov
or
inc
mov
and
sbb
pop
fdivs
cmp
stc
dec
or
mov
mov
fldln2
lcall
test
ss
cmp
sbb
icebp
push
jp
sarl
lea
ss
mov
cs
cli
sub
sbb
and
dec
ficoml
addr16
dec
cmpsl
idiv
stc
clc
xlat
inc
repz
adc
and
sbb
stos
cwtl
xchg
jae
mov
sub
and
test
dec
jg
jb
mov
insl
adc
jo
ret
nop
inc
out
ret
inc
arpl
decb
repnz
fstpl
mov
test
and
shrl
pop
aad
rorb
fs
pushf
imul
push
mov
cmp
fucomip
outsl
jg
jl
xor
aas
ja
adc
cltd
add
xchg
mov
idivb
xchg
dec
jl
shr
push
pop
ljmp
fnstcw
int
jle
shr
add
xchg
arpl
cli
or
lea
mov
mov
mov
shrd
shr
mov
mov
xor
shl
mov
xor
or
mov
mov
add
mov
mov
shrd
shr
mov
mov
xor
xor
or
lea
mov
mov
shl
mov
shrd
shr
mov
mov
xor
xor
or
mov
shl
mov
mov
mov
or
mov
mov
shrd
shl
shr
mov
mov
xor
mov
xor
or
mov
dec
not
and
xor
mov
mov
xor
or
mov
mov
shrd
shr
mov
mov
mov
xor
mov
xor
shl
mov
or
mov
cmp
je
mov
sub
mov
mov
mov
shl
xor
mov
mov
mov
xor
xor
shrd
shr
or
xor
or
mov
mov
mov
mov
xor
shl
xor
mov
mov
mov
mov
xor
xor
shrd
or
shr
mov
mov
or
mov
cmp
jne
cmp
je
jmp
mov
mov
mov
shl
xor
mov
mov
mov
jmp
and
mov
sarb
xor
mov
mov
push
in
fs
movntps
sbb
push
in
pop
mov
fwait
mov
sbb
inc
dec
pop
mov
sbb
push
jb
lds
inc
popf
lods
std
jnp
imul
stos
or
push
push
mov
rcrl
push
les
cmp
test
cmp
inc
lods
std
fisttpl
shll
into
jg
lahf
test
add
sub
pop
xor
push
pusha
das
lret
ficoml
shrd
push
test
lods
ret
mov
and
xchg
cmp
jae
ss
or
adc
inc
arpl
movsl
jno
mov
pop
es
pop
sub
in
sub
adc
cmp
mov
adc
ss
and
cmp
adc
mov
roll
repz
push
imul
dec
sbb
mov
lcall
add
popa
jbe
cmp
mov
cmp
jp
lcall
daa
imul
jmp
and
mov
in
es
popl
loopne
fnstcw
stos
rcrl
jbe
popf
repz
inc
scas
outsl
add
adc
jno
pop
pop
push
push
jns,pn
std
mov
push
adc
sbb
adc
test
and
aad
sahf
add
test
push
and
sbb
inc
aam
adc
subb
add
nop
fldenv
ret
mov
jb
popl
leave
xchg
inc
mov
lods
int3
sbb
shrb
int
imul
cmp
call
loop
push
dec
adc
test
xchg
into
fsubs
sub
pop
ja
clc
imul
jp
pop
mov
aam
fistl
call
push
data16
lcall
daa
push
add
xchg
repnz
jns
sbb
mov
jae
pop
cmpsb
lret
or
ljmp
inc
in
inc
sbb
xchg
add
cmp
mov
jne
xchg
xchg
mov
lahf
pop
mov
jae
mov
fcoms
xorl
or
int3
lret
adc
movsb
push
lds
jbe
stc
into
adc
jle
jb
sbb
js
xchg
sbb
push
in
sub
icebp
ja
mov
xor
shrd
xor
or
mov
mov
mov
mov
xor
shr
jmp
push
js
jno
mov
sti
jno
pop
stos
cmp
mov
mov
jnp
add
out
mov
pop
lcall
mov
in
inc
je
pop
movsl
shlb
xor
mov
ficoml
mov
or
mov
decb
pop
fadds
std
inc
rol
int
aaa
fs
adc
inc
pop
xor
addl
mov
and
pop
lods
shlb
flds
xor
ret
sbb
sub
sub
or
scas
sbb
push
and
cs
into
xchg
jb
add
repnz
lock
jbe
sbb
push
sub
daa
test
ss
xor
scas
inc
fwait
div
fmulp
mov
fnstsw
mov
jnp
data16
pop
sbb
xchg
bound
mov
push
mov
pop
mov
rorl
std
fisubl
mov
nop
push
mov
fs
xchg
iret
xor
or
add
sti
mov
gs
hlt
inc
pop
sbb
push
add
scas
or
int
or
out
filds
adc
push
mov
mov
fcom
adc
test
aad
dec
cld
aaa
inc
adc
inc
and
test
sbb
test
adc
lret
out
rcrl
int3
adc
adc
mov
loop
pop
jl
fwait
or
xchg
adc
dec
imul
pop
sahf
push
xlat
rcl
outsl
loop
pop
mov
lret
push
in
ror
add
pop
jno
les
sub
and
fs
imulb
inc
dec
stc
inc
pop
dec
rcrb
outsl
and
fs
jl
shlb
sbb
or
out
mov
outsb
stc
shrl
popa
inc
ljmp
cmc
inc
adc
xor
clc
aam
loop
aad
ja
adc
cmp
mov
mov
rcll
push
jp
inc
imul
or
jae
nop
sar
xchg
cwtl
adc
inc
outsb
insl
mov
pop
xor
fnsetpm(287
mov
cmpsb
addr16
xchg
push
sbb
inc
data16
sbb
mov
leave
jmp
inc
mov
sub
mov
cld
pop
mov
sub
addr16
clc
xchg
in
insl
xor
dec
fsub
push
mov
mov
sbb
sbb
fwait
sbb
adc
aam
mov
outsl
or
mov
mov
shl
xor
mov
mov
xor
mov
mov
xor
shrd
or
jmp
jmp
pop
add
sub
cmp
push
mov
mov
loop
and
dec
xchg
in
and
lret
leave
push
xchg
xchg
or
int
fisttpll
imul
insl
push
pop
loop
jp
hlt
out
pop
mov
cmp
stc
stos
dec
mov
xor
inc
fs
scas
inc
xchg
addr16
loopne
jae
mov
cli
inc
xchg
and
lret
sub
jae
jge
cmp
dec
rcl
xchg
test
dec
lock
stc
push
mov
and
pop
lahf
fcoml
inc
in
jecxz
dec
fsub
fsub
imul
jno
scas
scas
xor
sbb
sbb
inc
das
inc
je
pop
loop
imul
push
mov
nop
cmp
adc
mov
sub
nop
mov
sahf
xchg
xorl
dec
mov
jb
xchg
repnz
xor
and
mov
fbld
mov
arpl
mov
mov
mov
push
imul
out
outsl
pop
mov
movsl
repnz
inc
arpl
rorb
loope
daa
lcall
stc
lcall
out
pop
sub
mov
adc
and
ljmp
add
mov
xchg
addl
lds
pop
test
xor
inc
push
inc
rolb
test
lds
jb
xchg
clc
outsw
inc
or
fimuls
sbb
adc
jecxz
mov
pushf
or
xchg
sahf
push
ja
ret
inc
inc
and
scas
push
bound
mov
mov
add
sbb
pusha
xchg
pop
push
cmp
sbb
lret
adc
int
bound
lcall
jbe
push
xchg
adc
sub
mov
inc
xchg
stc
jne
iret
adc
xchg
fimull
cmp
sti
icebp
add
fdiv
cmp
data16
jl
xchg
dec
sub
ss
bound
outsb
arpl
movaps
test
nop
push
insl
mov
das
push
insb
test
out
xchg
cs
inc
mov
pop
pop
xorl
pop
int3
adc
outsl
adc
inc
pushf
stc
test
or
push
lret
or
sub
or
enter
xlat
subl
insl
lods
leave
out
fdivrl
cltd
sub
movsb
cmp
repz
inc
inc
mov
icebp
cmpsb
mov
push
mov
ljmp
or
mov
mov
mov
cmp
jne
mov
cmp
je
mov
mov
mov
mov
lea
mov
jmp
push
push
in
push
jns
in
pop
xor
in
inc
fimull
mov
mov
sbb
loopne
jp
lret
xor
xchg
int3
push
out
push
and
sar
cmp
jl
mov
je
and
out
xchg
popa
sahf
scas
mov
das
adc
jg
insb
xchg
jmp
in
mov
adc
mov
js
cmp
pop
adc
push
add
dec
jg
pushf
out
test
xor
jle
jne
sub
mov
int3
sbb
pop
mov
and
lret
sub
cmp
fs
inc
push
and
jmp
or
adc
lahf
lret
lds
lea
aas
icebp
jp
cld
aad
test
cmp
sub
int3
stos
bound
jb
or
cmp
cltd
cmpsl
cmp
mov
xchg
lds
adcb
adc
jle,pt
ss
sbb
hlt
jne
jmp
push
and
mov
mov
mov
mov
test
jae
int
add
adc
rcrl
jns
enter
imulb
repz
jmp
xchg
ja
dec
lcall
xor
cmp
xchg
cmpl
sub
mov
lds
data16
cmp
xchg
xchg
mov
jo
dec
cmpsl
mov
mov
jecxz
jmp
sub
ror
sbb
popf
pop
adc
notb
int
xor
int3
cmpsl
fcomp
cli
gs
mov
push
imul
test
jl
push
or
lret
cmp
dec
push
ds
repnz
into
mov
mov
sub
decb
aas
ja
dec
mov
jp
mov
js
push
push
sahf
mov
test
adcb
addr16
in
mov
mov
cmpb
sbb
sbb
xchg
mov
dec
jl
andl
cmp
in
int
and
mov
dec
xchg
push
imul
ljmp
pushl
xchg
xor
cmp
fdivs
leave
dec
test
fisubrs
mov
lcall
rclb
jl
xor
fs
mov
fst
cmp
pop
imul
divb
cli
popa
xor
stc
incb
mov
mov
cmpsl
icebp
aaa
call
test
inc
fmull
shrd
mov
mov
xor
shr
mov
xor
shl
or
mov
mov
mov
xor
shld
xor
mov
mov
shl
mov
mov
xor
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
mov
mov
xor
shl
mov
mov
xor
mov
mov
jmp
aas
std
mov
cmp
adc
fwait
sti
lock
mov
lret
sti
inc
or
iret
out
xchg
mov
dec
mov
mov
jo
shrb
fildl
lock
es
or
cmc
clc
inc
shl
cld
push
mov
pushf
ret
jae
fmuls
std
jno
cltd
and
ret
and
cmc
pop
and
jns
out
ja
imul
adc
cmpsb
adc
and
and
push
mov
jo
sti
pusha
pop
jp
icebp
push
sarl
push
mov
movsb
or
je
push
sbb
sub
lret
mov
push
std
call
roll
and
outsb
mov
xchg
xchg
push
sub
cmpsl
dec
into
rcrb
jns
and
mulb
cwtl
inc
in
hlt
gs
or
loopne
xlat
es
xchg
popf
ja
xchg
xchg
mov
push
das
rorl
mov
into
adc
out
and
movb
mov
cmp
mov
mov
dec
sub
add
and
repz
or
xchg
pop
aad
ss
jle
cmc
sbb
mov
xor
int
insb
jnp
inc
repz
push
scas
push
add
das
test
test
xor
dec
cld
xchg
sarb
ljmp
mov
les
cli
dec
cltd
lea
mov
lods
mov
addr16
fstl
pop
dec
mov
cmp
fistps
inc
xchg
mov
xchg
jnp
mov
adc
mov
test
jne
mov
sbb
aam
les
imulb
mov
jecxz
push
inc
push
out
xchg
xor
push
jbe
adc
pop
sbb
xor
fisubl
adc
mov
cmp
add
mov
mov
push
andl
shrl
and
fsubrs
int
inc
xlat
sahf
pop
cmpsl
pop
shlb
imul
rcrl
sbb
or
movsl
sbb
orb
cmp
mov
push
andb
dec
and
in
fcoml
mov
jl
mov
push
xchg
test
popa
inc
push
sbb
les
pop
push
stc
in
mov
sub
xor
jecxz
shll
scas
test
push
daa
aas
mov
dec
fwait
shll
and
push
daa
jnp
aad
ficomps
inc
ret
cmp
sbb
add
cmp
mov
sub
lret
xor
shrd
or
shr
mov
mov
or
mov
mov
push
pushl
push
push
call
mov
mov
shrd
shr
shr
xor
push
xor
mov
mov
mov
push
push
push
call
shld
mov
xor
or
mov
mov
shl
or
xor
xor
xor
xor
mov
mov
jmp
mov
add
mov
mov
mov
mov
mov
mov
movzwl
cltd
shld
jmp
fs
das
ja
mov
outsl
aad
inc
pop
ja
outsl
lcall
mov
mov
sahf
flds
push
mov
movsl
xchg
xchg
add
stos
add
mov
and
cmc
jmp
pusha
loopne
scas
adc
sub
sub
cli
or
and
loop
int
movsl
cmp
std
sti
roll
mov
mov
scas
das
add
lret
sbb
pop
or
aam
repnz
icebp
mov
insb
fsub
ret
jae
cli
mov
add
mov
aaa
and
repnz
data16
fsub
lock
inc
fwait
sub
cmp
cwtl
sbb
jmp
cmpsl
cmc
fildl
and
push
pop
mov
scas
out
cmp
fnsave
inc
shll
mov
popf
add
lret
mov
inc
jp
scas
sysret
pop
mov
xchg
test
movsl
fists
out
cld
fldcw
jb
xchg
fnsave
enter
jo
xchg
scas
xchg
inc
and
outsb
not
adc
jecxz
xchg
or
scas
stos
aas
mov
and
inc
divb
cmp
xchg
inc
es
clc
pop
jns
fdivs
lret
push
iret
pop
jmp
mov
aad
and
sar
jle
xor
lock
iret
out
orl
jp
cmpsb
or
adc
jnp
es
movsb
sbb
jle
xchg
mov
mov
int
mulb
push
testl
popa
popl
dec
jo
mov
pop
ss
cmp
jnp
xor
popa
insl
int
inc
mov
loope
outsl
idivb
fnstcw
xchg
add
movsb
sub
pop
les
and
cwtl
fwait
mov
call
ja
inc
loope
stos
fiaddl
xchg
aas
xchg
xchg
shlb
jb
add
lret
jno
loopne
sbb
dec
xchg
pop
mov
adc
push
mov
icebp
shlb
pop
sub
and
pop
rolb
enter
xchg
lret
pushf
ret
xor
js
sub
dec
push
outsl
cmp
movb
dec
pop
imul
jno
aad
mov
ret
cmp
push
and
arpl
or
ficompl
sub
fisubrs
xor
into
fwait
inc
push
imul
xor
mov
mov
shl
mov
mov
xor
mov
cmp
jne
mov
cmp
jne
movl
mov
movl
mov
movl
mov
movl
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
add
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
xor
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
add
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
or
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
shl
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
add
mov
mov
shrd
xor
shr
mov
mov
shl
mov
xor
or
mov
add
shrd
xor
shr
mov
mov
xor
or
mov
or
mov
mov
shl
shl
mov
mov
xor
xor
mov
mov
xor
shrd
shr
or
xor
or
mov
mov
mov
mov
xor
shl
xor
mov
mov
mov
mov
xor
xor
shrd
or
shr
mov
mov
or
mov
cmp
jne
cmp
jne
jmp
mov
mov
mov
mov
mov
xor
shl
mov
mov
jmp
mov
mov
mov
inc
jmp
daa
inc
adc
mov
mov
add
leave
adc
daa
mov
jo
shll
jns
pop
ja
movsb
scas
mov
gs
aaa
movsl
and
or
imul
dec
mov
sbb
mov
lods
test
sbb
dec
jne
and
mov
loop
jb
xchg
xlat
out
push
xchg
testl
push
sub
jmp
ret
mov
out
xlat
jmp
sbb
mov
or
loopne
mov
incb
mov
mov
add
jb
scas
ret
or
and
lea
xchg
data16
push
cmc
mov
ljmp
jne
xor
push
dec
xchg
pop
mov
stos
xchg
dec
sti
jp
fldcw
rcl
jnp
mov
ret
rol
ret
lret
pop
loop
dec
mov
loopne
mov
mov
outsl
lods
jecxz
cmp
dec
mov
adc
cli
and
cmp
push
xchg
xor
stos
stos
jecxz
daa
add
mov
cmp
jp
lea
adc
cs
inc
cmp
cmpsb
and
roll
xor
xlat
insl
das
jb
cmp
ljmp
into
and
push
sahf
mov
mov
mov
ljmp
aas
ficoml
rorb
idiv
cltd
xor
push
mov
and
fcmovne
call
movsl
pop
cmp
push
sub
mov
fcmovbe
lcall
cmp
jbe
add
in
inc
in
scas
aas
or
cmc
mov
mov
movsl
adc
loope
lods
or
leave
fisubs
mov
fildll
pop
jae
push
fiadds
mov
and
push
out
jmp
fildl
inc
or
shl
ljmp
dec
mov
les
cmp
imul
or
lret
icebp
loope
or
dec
add
xlat
sar
add
subb
out
pop
aas
test
test
jb
cli
xor
pushf
loope
mov
enter
jns
fdivrl
adc
mov
shrb
stos
sub
inc
aaa
push
sbb
cli
aad
xor
sbb
push
inc
lahf
loopne
inc
leavew
ja
inc
jge
add
sbb
and
xor
out
sub
push
enter
movsb
jg
push
mov
xor
mov
mov
xor
jmp
enter
xor
fdivrs
xchg
fldenv
dec
push
mov
mov
call
jb
test
sub
add
jnp
fdivs
mov
mov
push
pop
lock
pop
add
mov
stos
das
dec
dec
adc
mov
and
or
dec
push
mov
jb
pop
pusha
in
stc
pop
aad
jecxz
mov
imul
fwait
je
shlb
sub
pop
flds
sbb
arpl
call
dec
ss
icebp
stc
push
sub
xor
fldl
or
xchg
leave
adc
stos
enter
out
scas
push
add
lock
mov
push
sub
xchg
cmp
test
mov
push
pop
xchg
mov
cld
adc
stos
push
das
dec
xor
add
arpl
and
in
mov
mov
aad
jae
adc
xchg
sub
lock
push
xor
shrl
lea
or
mov
clc
decl
mov
adc
pop
into
xchg
xchg
daa
push
add
or
push
sbbb
dec
dec
xor
scas
jg
sti
xor
or
sub
inc
gs
dec
dec
sub
dec
test
fcom
hlt
insb
sub
iret
cmpsb
inc
aaa
pop
xor
bound
mov
xlat
mov
pop
xchg
test
lods
sbb
repz
ret
loopne
pop
mov
mov
les
sbb
cmp
push
inc
pop
negb
cmpsl
mov
inc
inc
pop
and
dec
daa
xchg
xor
dec
mov
jge
sbb
outsb
sbb
js
xor
js
jecxz
fistl
push
add
bound
mov
mov
mov
hlt
cld
rorl
loopne,pn
ljmp
inc
and
dec
mov
jns
jns
push
push
inc
mov
push
inc
xchg
out
icebp
fs
nop
arpl
in
fcompl
sbb
mov
xchg
mov
sub
add
ficomps
or
adc
dec
insb
sub
sar
or
fidivrs
aam
mov
ja
push
xor
add
adc
cld
mov
sub
push
movsl
insl
mov
cmpsb
jle
mov
pop
in
pop
mov
dec
movsl
test
xchg
jge
push
es
mov
rolb
enter
adc
jmp
mov
or
mov
mov
push
pushl
push
push
call
mov
mov
shrd
shr
shr
xor
push
xor
mov
mov
mov
push
push
push
call
jmp
xchg
cmp
mov
scas
out
cmp
jae
das
cmp
mov
mov
jecxz
jg
outsl
mulb
mov
add
addl
push
aaa
sarl
sbb
mov
repnz
xchg
push
ret
jbe
sbb
pop
adc
mov
or
jmp
xchg
xor
mov
xor
loope
ljmp
aad
mov
adc
loopne
fcomps
stc
mov
push
dec
out
xor
mov
mov
push
mov
jns
scas
dec
insl
add
sub
or
icebp
pushf
xchg
stc
add
mov
push
and
cmp
faddl
jg
adc
pusha
sti
les
nop
pop
aad
cmp
adc
xor
xchg
add
mov
sub
imul
sti
add
ss
lcall
jb
cmp
gs
out
cltd
mov
xchg
mov
bound
mov
jbe
jle
push
xor
arpl
sti
outsb
add
out
mov
movsl
je
sti
push
leave
jo
ds
xor
rolb
iret
add
cmpsb
call
sub
dec
inc
imul
jge
fscale
push
ljmp
cmp
test
out
pushl
adc
mov
stos
fldcw
xor
out
mov
xor
aas
sbb
push
popf
jns
cld
mov
ret
mov
shlb
sub
ret
mov
inc
mov
push
hlt
mov
in
jnp
push
sti
gs
pushf
sbb
popa
cmp
je
mov
in
shl
pop
or
movsb
xchg
jle
lret
stc
ret
lahf
inc
inc
sub
mov
cs
ds
jle
repnz
cmp
out
xor
insl
mull
rolb
sbb
popw
fisttpl
adc
std
cltd
int3
cmpsb
add
arpl
xlat
add
ds
sub
xchg
sub
push
dec
inc
adcb
pop
fnstsw
in
ret
clc
cmpsl
pop
popa
cmp
stc
xchg
popf
ret
add
jp
addb
dec
lods
lock
sub
xorb
jae
or
adc
or
mov
adc
loop
call
mov
adc
pop
mov
cvtpi2ps
cmp
cmp
cmp
movsb
ret
loopne
mov
or
xor
or
xor
xor
mov
mov
jmp
mov
scas
movsb
scas
lods
cltd
cmp
mov
stos
cmp
mov
mov
addr16
ljmp
cmpsl
int
pop
pop
jnp
pop
test
pushf
negl
pop
fs
mov
xor
in
outsb
pop
jnp
jo
outsl
dec
cmp
nop
lods
mov
dec
and
insl
pop
and
jno
cmpsb
mov
add
sbb
aam
stos
sub
push
int3
shll
lods
mov
fcompl
mov
std
lods
and
and
pop
and
jb
or
push
int
sbb
mov
daa
xchg
add
repnz
lock
repz
add
jge
test
jle
int
leave
int3
xchg
mov
movsl
lock
push
mov
push
mov
or
mov
aam
das
xchg
das
mov
xchg
push
mov
sub
cs
inc
fsts
scas
lahf
cmpsb
sub
jmp
inc
push
lods
out
mov
and
orb
sbb
fmull
mov
movsb
lea
push
imul
mov
mov
adcl
movsl
lods
xchg
imul
pop
imul
shlb
int
jbe
pop
movsb
fldcw
sbb
xchg
jg
cmp
lahf
sub
mov
add
jecxz
je
hlt
mov
adc
jp
adc
pop
fstpl
inc
mov
mov
repz
push
sahf
jnp
aaa
sbb
push
imul
inc
out
ljmp
shl
lods
loope
das
adc
mov
fists
insl
sub
mov
sbb
mov
test
mov
push
test
dec
mov
negl
mov
movsl
out
insl
mov
adc
pop
shll
xchg
and
ljmp
sub
jle
mov
jne
jne
nop
mov
test
push
and
push
push
cmp
lea
outsb
iret
or
mov
pop
repnz
sarl
jl
fstpt
jne
cmp
pop
and
and
das
mov
sub
mov
orl
nop
out
outsb
lods
mov
push
pushf
dec
xchg
mov
cmp
shll
mov
dec
cmpsl
sti
aaa
and
aad
lods
insb
shll
push
test
cmc
cmpsl
loope
adc
and
pop
repnz
testl
cltd
and
lret
mov
mov
mov
shl
xor
mov
mov
mov
xor
xor
shrd
shr
or
xor
or
mov
mov
mov
mov
xor
shl
mov
mov
xor
mov
mov
xor
xor
mov
shrd
or
shr
or
cmp
jne
jmp
cltd
add
popf
popf
add
adc
das
pop
cs
mov
lret
xchg
test
inc
pop
mov
adc
sbb
mov
mov
loope
mov
adc
mov
movsb
in
adc
fs
xchg
push
and
sub
mov
inc
mov
fcmovu
inc
mov
xchg
mov
pusha
xor
cmc
sbb
ljmp
call
out
scas
int3
mulb
mov
pop
mov
clc
das
lret
repz
sub
add
mov
mov
xor
xchg
push
insl
inc
pop
cmpsl
clc
sub
lret
add
mov
pushf
jno
jecxz
repnz
and
sbb
shlb
xor
and
mov
mov
pop
cmpsl
push
push
arpl
fisttpll
or
cld
aad
pop
cli
xchg
adc
mov
jle
sbb
jns
push
dec
andb
out
js
loopne
dec
in
cmpsl
inc
mov
mov
push
jl
xchg
outsl
jae
loope
inc
dec
push
iret
push
pop
cld
call
inc
push
add
pop
stos
mov
push
push
sahf
adc
lds
push
je
mov
mull
adc
dec
clc
mov
in
cmp
mov
fwait
mov
lcall
push
lahf
fwait
mov
sub
pushf
ret
imul
mov
stos
xchg
cli
cwtl
in
data16
push
xchg
test
lds
ffreep
mov
or
arpl
push
or
push
inc
push
dec
js
push
or
pop
shrl
inc
push
pusha
aad
cmp
sbb
cmovl
push
cmpb
cmp
dec
adc
testl
fwait
xor
sahf
inc
xor
fisubrs
jmp
adc
mov
cmp
add
or
sub
add
and
das
cld
sub
and
cmp
or
test
xchg
xlat
lret
push
imul
ljmp
ret
adc
mov
ja
mov
pop
rorb
fdivrp
nop
cmp
ja
lret
push
sub
sub
fs
jmp
mov
rorl
lcall
sub
jae
add
cld
scas
xor
xor
out
mov
je
pushl
pushl
pushl
push
push
call
pop
leave
ret
cmp
jmp
adc
out
or
test
out
imul
mov
sub
jb
ret
inc
cld
ret
mov
out
jl
out
outsl
rcll
push
adc
out
ret
enter
cmpb
xlat
lods
xchg
out
pop
pop
ja
ja
sahf
mov
xor
icebp
push
pop
sahf
bnd
push
jecxz
adc
rorb
push
mov
dec
xor
cmp
or
pop
fst
sub
add
push
in
mov
sbb
repz
enter
or
xchg
and
dec
add
xor
push
data16
mov
loope
rclb
fadd
xchg
testb
cmp
ja
hlt
inc
andb
imul
xchg
sbb
xchg
insb
shll
data16
or
mov
mov
push
jns
adc
cltd
or
push
dec
dec
ds
stos
push
nop
cmp
push
fidivrs
xor
daa
cld
call
dec
sbb
mov
mov
call
bndcu
loop
iret
imul
enter
mov
lcall
add
sbb
in
mov
xlat
or
and
shrb
mov
lods
jmp
and
cltd
or
insl
push
push
push
sar
sub
pop
and
mov
in
wbinvd
lods
add
inc
xor
out
loop
adc
xchg
mov
jecxz
mov
fildll
lods
jne
mov
imul
mov
rolb
and
imul
mov
in
fsubs
imul
in
inc
fists
xchg
add
jo
js
rcr
aas
fstl
mov
fidivrl
add
mov
adc
push
cmpsl
mov
mov
xchg
and
and
adc
push
and
ret
ficomps
aad
dec
xchg
lret
jecxz
sbb
or
incl
test
repnz
lea
jle
push
pop
xlat
inc
cmpsl
lods
mov
push
push
jmp
xor
inc
cmc
inc
je
icebp
or
ljmp
mov
inc
data16
cli
shlb
mov
push
mov
add
add
add
stos
adc
add
adc
add
addl
shrd
shr
ret
sub
mov
andl
xor
movl
and
shr
ret
xor
xor
ret
push
mov
sub
cmpl
mov
not
movl
movl
jmp
mov
cmpl
jae
push
push
push
call
add
mov
sub
sbb
movzbl
xor
xorl
negl
push
adc
push
movl
cmpl
mov
mov
notl
jmp
mov
cmpl
jne
push
call
sbbl
movzbl
and
mov
and
addl
sbbl
sub
cmpl
notl
movl
movl
jmp
mov
cmpl
jl
push
pushl
pushl
push
pushl
push
push
call
and
inc
sbbl
movzwl
adc
sbbl
orl
cmpl
mov
movl
mov
jmp
mov
mov
cmpl
jge
push
push
call
and
mov
mov
sub
and
andl
sbb
mov
and
mov
or
jmp
les
mov
out
bound
adc
mov
mov
add
aas
and
adc
mov
in
adc
icebp
pop
in
enter
call
adc
notb
cmp
lret
push
pop
mov
jae
mov
sbb
adc
push
push
jno
pop
movsl
inc
sbb
or
cmp
rcrb
shlb
loope
lahf
outsb
push
dec
insb
out
sti
mov
scas
cmp
and
push
cmp
in
imul
mov
xchg
add
enter
test
in
and
and
jl
jne
push
or
das
mov
cs
mov
les
mov
ljmp
and
pusha
cld
enter
xor
mov
or
and
fldcw
popa
repz
mov
xor
pop
cmc
clc
mov
movsl
movsb
fidivrs
lea
jle
or
ljmp
int
pushf
push
or
pop
test
mov
dec
dec
jbe,pt
cmpsb
push
or
mov
cmc
dec
jp
loope
xor
test
pop
dec
mov
sbb
pop
cmp
jp
push
sub
xchg
mov
adc
adc
lock
pop
arpl
dec
ret
and
inc
and
int
test
divl
scas
lds
sbbl
lock
out
dec
call
or
and
sbb
out
lahf
lret
lods
data16
cld
int
cld
xchg
lock
xchg
outsl
rorb
sbb
loop
push
jbe
sahf
jle
and
add
fisubs
and
pop
das
push
push
dec
and
inc
repnz
xchg
or
pop
stc
out
push
sbb
pop
and
push
icebp
jae
insl
sub
pop
gs
je
aam
push
lds
mov
aam
or
stos
or
cmp
flds
xchg
icebp
es
push
pop
das
pop
xor
std
fiaddl
fsubs
mov
cld
mov
cli
aaa
mov
cmp
fbstp
add
xor
stc
and
mov
and
cld
cmp
sub
jp
adcl
sub
std
jmp
je
adc
jecxz
je
lret
and
jle
xchg
sar
add
mov
sbb
movl
mov
and
movl
andl
mov
adcl
mov
or
decl
and
mov
mov
sub
imul
sub
mov
xor
or
mov
adc
movl
xor
movl
cmpl
mov
mov
movl
jmp
mov
movl
cmpl
je
push
push
pushl
pushl
push
call
and
sub
mov
mov
adc
sub
sbbl
xor
sbb
movl
mov
sub
mov
sbbl
jmp
jmp
sub
sub
xor
fmuls
xchg
cmp
mov
inc
pop
outsb
call
jg
adc
or
insl
mov
addb
ss
imul
pop
call
pop
negb
fpatan
xchg
aam
in
repnz
lds
sub
add
out
jne
movsb
cmp
testl
sbb
fdivs
and
adc
cmp
lods
xchg
inc
push
cmp
cmpsb
sbb
push
sti
js
lods
lcall
mov
lods
clc
out
imul
stos
mov
pop
mov
lods
adc
mov
or
and
xchg
shll
sbb
push
push
xor
cmp
dec
jne
push
xor
mov
fwait
je
or
mov
inc
in
adc
rcl
dec
repz
and
adc
stos
fdivrl
mov
jcxz
fs
and
popf
pop
stc
mov
jns
js
lea
inc
int
mov
inc
jne
fidivrs
hlt
inc
stos
js
sete
adc
dec
subb
lods
outsb
pusha
fdivr
inc
mov
xchg
repnz
dec
sub
lds
sti
dec
dec
es
inc
imul
push
cmpsb
lret
cmp
shll
jnp
mov
or
aas
in
mov
inc
mov
sbb
sti
dec
into
cmp
rcll
pop
repnz
pop
leave
push
cmpsl
sbb
sub
ljmp
fidivrs
xor
pusha
repnz
loope
sbb
scas
arpl
cli
test
inc
out
push
sbb
sub
sub
dec
nop
shr
sub
inc
adc
inc
in
ljmp
and
cmpsb
pop
xchg
pop
scas
popf
mov
cmp
mov
pop
iret
inc
and
push
mov
int3
jne
das
test
push
fnsave
jo
fiaddl
mov
data16
dec
ret
les
pop
adc
call
push
rorl
ds
dec
jmp
fisubrs
adc
sub
mov
arpl
xchg
lret
mov
pop
or
xchg
test
and
xor
hlt
and
das
divb
mov
adcl
and
cmpl
movl
movl
movzwl
jmp
movl
mov
cmpl
jg
push
call
add
sub
or
or
xorl
or
movzwl
or
mov
xor
div
mov
xor
sub
mov
div
mov
cmp
je
mov
mov
mov
mov
movzwl
mov
add
mov
and
mov
add
movzwl
push
xor
mov
mov
mov
mov
mov
mov
mov
xor
mov
imul
mov
sub
mov
movzwl
jmp
sub
push
adc
insl
inc
sarl
sub
mov
stc
andl
cmp
out
rorl
pop
mov
icebp
insl
mov
xchg
push
mov
push
outsl
inc
int
sbb
jnp
sub
les
cs
sbb
enter
xchg
mov
in
fnstsw
mov
pop
enterw
dec
mov
cmp
clc
mov
icebp
cli
and
mov
fidivs
push
das
mov
insb
add
adc
popa
or
inc
loop
lcall
push
xor
push
jle
pushf
pushf
inc
push
inc
cmp
mov
fs
sub
and
dec
push
loop
lock
push
mulb
pushf
lea
adcl
test
cmp
pusha
inc
cmc
fstpl
and
mov
xor
mov
mov
scas
push
daa
outsb
call
ds
test
filds
in
pop
popa
xchg
or
lock
fwait
hlt
jae
jmp
cmp
cld
movsb
inc
and
jp
sbb
hlt
pop
cmc
jle
rol
mov
mov
scas
shll
hlt
inc
jbe
fs
xchg
jmp
jbe
and
mov
subb
out
or
iret
inc
inc
mov
dec
cmp
fsqrt
jnp
mov
fidivrs
dec
wrmsr
mov
clc
shlb
in
lods
fnsave
cmc
das
push
sbb
mov
pop
dec
xor
aad
arpl
adc
aad
sti
hlt
jb
jg
into
dec
push
sbb
negl
xchg
out
je
mov
dec
idivb
cmp
mov
test
test
inc
adc
cmp
or
xchg
cmp
in
pusha
flds
mov
adc
dec
arpl
or
fs
inc
mov
out
push
js
adc
jnp
fbld
lret
loop
jge
xchg
stc
and
xor
mov
and
push
gs
fdiv
loopne
fs
sbb
loope
jl
or
and
add
dec
fbld
xchg
dec
and
xchg
ret
movsb
dec
dec
cmp
push
jae
in
cmp
inc
iret
aaa
dec
in
sahf
out
repnz
add
sbb
aam
pop
mov
pop
shrl
aad
mov
out
jmp
adc
mov
pop
ret
in
pushf
cld
pop
call
rcrl
dec
in
cmp
jb
movzbl
mov
imul
and
or
mov
mov
cmp
jne
mov
mov
shrd
shr
mov
jmp
in
movsb
push
mov
cmp
sti
mov
movsl
sti
sbb
mov
sub
pusha
sub
cmp
popf
rcl
sub
rolb
stos
mov
jbe
inc
jnp
movsb
daa
dec
out
imul
daa
fwait
mov
push
mov
in
pop
mov
push
push
lcall
jge
cmc
adc
hlt
data16
fisubrs
sbb
sbb
fcoms
adc
mov
sar
pusha
in
rolb
mov
sbb
or
movsl
or
es
mov
fisttps
or
mov
mov
ret
add
sub
ret
mov
xor
ja
xchg
pop
xor
dec
cwtl
pop
jnp
aad
das
adc
jle
push
lret
add
mov
pop
dec
in
pop
push
fidivl
add
mov
jp
call
shlb
imul
iret
dec
mov
mov
mov
xor
insl
xor
les
aaa
stos
ljmp
cmp
jno
js
in
jle
std
or
dec
sbb
mov
xor
cmpsl
jmp
mov
jbe
mov
ja
mov
jno
and
in
pop
cmp
ret
push
or
adc
jecxz
cmp
cld
sub
and
out
adc
sahf
jno
inc
lret
sarl
iret
mov
push
push
mov
cmpsl
pop
push
push
or
xchg
xchg
pop
frstor
call
fwait
enter
sbb
out
xorb
pop
jecxz
push
cmp
cli
xchg
cmc
pop
aam
fstpt
or
xchg
dec
sahf
adc
sbb
xchg
cmp
insl
mov
loopne
adc
dec
mov
and
arpl
pop
push
movsb
xor
in
push
inc
or
negb
mov
mov
dec
gs
aaa
push
adc
fwait
push
shlb
pushf
flds
ss
push
insl
and
ficompl
dec
enter
daa
fisubrs
push
imul
add
and
add
fistps
das
push
xchg
fdivrl
or
add
test
gs
imul
data16
bound
lds
fadds
popf
pop
xchg
inc
sbb
inc
mov
adc
pop
push
ljmp
cmc
adc
mov
mov
clc
sub
mov
shl
mov
mov
xor
mov
xor
or
mov
mov
mov
shrd
jmp
push
arpl
sbb
cmp
push
add
stos
mov
in
int
add
addl
and
nop
jne
stos
in
add
loop
inc
enter
movsb
lods
repz
fmulp
inc
sub
das
lods
mov
push
jno
gs
in
mov
call
xchg
repnz
xchg
mov
int
sbb
pop
and
insb
xchg
test
adc
adc
test
push
jo
es
mov
and
mov
jbe
stos
mov
mov
pusha
std
gs
inc
xlat
cmpsb
jecxz
xor
negl
add
or
xchg
pop
xor
testb
cmp
mov
cmc
adc
stc
loope
iret
fidivrl
pop
stos
dec
cmp
je
and
ja
aad
cmp
pop
add
cmp
stos
xor
add
push
add
jl
adc
and
mov
push
or
sbb
mov
add
sbb
imull
mov
lcall
or
push
mov
std
iret
inc
cwtl
push
mov
es
and
adc
and
xchg
outsl
movsb
dec
mov
add
mov
jns
mov
in
cmpsl
xlat
inc
push
sbb
inc
adc
mov
or
loopne
jmp
xchg
mov
mov
es
xchg
arpl
push
testl
cmp
sahf
stos
pusha
movb
jmp
loop
dec
inc
mov
fwait
xor
mov
js
out
inc
push
xor
lea
jns
and
cmp
scas
mov
jns
or
movsl
mov
test
push
out
out
ret
push
mov
or
fwait
inc
mov
mov
xchg
out
ficoml
insb
xchg
scas
cld
pop
pop
pushf
out
loopne
sub
lret
stos
stc
pop
push
lret
or
xchg
lahf
xchg
sub
xor
dec
pop
and
xor
clc
mov
out
and
mov
push
lds
test
loopne
add
push
lods
or
pop
fisttps
sbb
aaa
in
adc
xchg
test
nop
xor
xor
push
jae
shr
mov
mov
xor
xor
or
mov
movl
movl
mov
shl
mov
mov
sub
jmp
gs
pop
mov
mov
xchg
inc
into
jno
xorl
cmp
push
mov
mov
test
cmp
xor
test
pushl
ret
inc
sub
xchg
aaa
xorl
mov
xchg
pop
or
jle
mov
aaa
sbb
lock
adc
imulb
data16
insl
sti
cmpsl
adc
imul
add
push
mov
ret
popf
push
mov
mov
jne
push
js
xor
fistl
jb
fldl
movsb
rclb
dec
add
push
rcl
cmp
sub
jp
sub
push
and
jecxz
sub
and
test
icebp
outsl
adc
mov
xchg
cmp
xchg
movsb
xchg
mov
cmpsl
push
insl
movsb
inc
push
lods
adc
pop
add
int
sub
fcoms
jge
push
dec
repnz
fists
pop
or
out
mov
mov
leave
cvtdq2ps
aas
pusha
push
adc
xchg
pushf
in
addl
pop
sbb
stos
jl
dec
inc
jnp
fildl
mov
nop
fistps
outsl
leave
out
sbb
daa
dec
ret
jno
adc
mov
mov
out
jl
or
xlat
into
xchg
mov
mov
sbb
sbb
ficomps
int3
rcrb
pop
sti
pop
fsubl
sub
mov
xchg
inc
jne
pcmpgtw
push
pmullw
js
lcall
sbb
pop
std
lahf
jb
popa
cmpsb
mov
xchg
loope
adc
dec
hlt
test
sub
popl
int3
xchg
cwtl
pop
add
xor
int
mov
cmpsb
mov
ret
pop
mov
jne
adc
dec
popf
sub
dec
mov
ret
test
fsubs
sbbl
add
mov
int
adc
push
in
mov
dec
fildll
sahf
call
or
fwait
jl
or
cmp
jecxz
mov
sbb
sti
xchg
adc
xor
pop
fbld
xchg
jmp
data16
xor
pop
cld
add
jno
add
lods
daa
pop
jmp
xor
repz
das
lds
cmc
mov
scas
ror
lret
repz
dec
ret
rorl
push
cli
inc
jae
mov
pop
pop
mov
sub
dec
push
mov
push
sbb
push
push
call
mov
mov
jmp
hlt
mov
jae
ja
mov
movsb
sub
jmp
mov
jo
sbb
dec
xchg
pushf
lret
jns
jno
dec
jge
push
inc
mov
mov
xor
mov
mov
and
mov
xchg
lret
sub
repnz
mov
ja
and
mov
mov
jmp
pop
ljmp
test
dec
hlt
jmp
aas
adcb
and
mov
cmp
mov
loopne
pusha
sbb
arpl
mov
aad
adc
mov
pop
and
push
in
test
fmuls
in
mov
sbb
out
scas
inc
push
lret
fidivrs
adc
mulb
xlat
int
ljmp
or
aas
adc
sbb
imul
aas
sti
imul
mov
insb
jle
inc
pop
enter
aam
adc
fisttpl
leave
add
cmc
push
jle
mov
inc
xlat
pop
push
cld
dec
adc
aam
and
push
sub
inc
sbb
cld
sti
in
inc
dec
mov
push
ds
jns
insb
and
cmp
push
cmpsl
outsl
int
push
inc
cmpsb
in
or
xor
aad
out
pop
cmp
into
cmp
aas
xor
rol
sub
cmp
test
pop
in
push
mov
rcll
cmp
nop
pop
pop
pop
outsl
and
stos
sbb
in
scas
jg
mov
xchg
je
sbb
mov
loopne
and
cmc
in
mov
int3
add
and
je
mov
cmp
sar
xor
cwtl
inc
mov
xchg
leave
and
pop
jb
jo
rcrb
adc
mov
and
mov
cmc
lret
push
hlt
std
push
je
test
in
and
sbb
movsb
lret
ja
mov
data16
incb
jl
dec
cld
pop
adcb
xchg
xlat
psllw
push
xor
add
push
lods
or
test
lea
es
xchg
fsubrl
inc
push
push
sahf
jp
inc
dec
je
mov
int
xchg
dec
xchg
lcall
mov
je
jns
out
cmpsl
pop
loope
jecxz
adc
test
stc
test
mov
inc
das
mov
sbb
and
add
push
or
or
push
push
call
mov
mov
movl
movl
movl
movl
mov
mov
push
add
push
adc
push
push
call
mov
mov
and
and
mov
mov
and
mov
and
cmp
jb
ja
cmp
jb
mov
mov
shrd
shr
mov
mov
xor
xor
shl
or
mov
pop
pop
leave
ret
push
mov
sub
movl
movl
movl
movl
mov
mov
sub
xor
add
add
or
push
add
push
movl
movl
movl
movl
mov
mov
mov
xor
and
or
mov
sub
mov
lea
xor
mov
div
mov
mov
push
imul
imul
xor
jmp
lock
lds
dec
sub
das
fcomps
mov
xchg
mov
push
in
into
mov
cltd
clc
mov
in
mov
out
or
mov
repnz
push
pop
xchg
xchg
mov
repnz
lret
jmp
les
adc
pop
jb
dec
les
cmp
inc
cmp
das
push
fdivrs
sbb
test
push
jle
addr16
xchg
pop
repnz
ljmp
stc
add
stos
jle
mov
rcll
xchg
jl
test
lcall
cli
inc
decl
movsb
cmp
lods
xlat
movl
out
ss
mov
lods
ljmp
stos
xor
push
loope
xchg
jo
push
dec
dec
movsl
inc
xor
and
lds
aaa
ror
inc
add
mov
aaa
xchg
in
adc
or
push
or
inc
lods
xor
cli
xchg
mov
xchg
jp
dec
lcall
hlt
in
or
jbe
loope
adc
lret
cs
lret
out
outsb
pop
sbb
and
ljmp
push
cmp
push
or
inc
fstps
xor
leave
adc
add
aaa
aam
mov
fstpl
pushl
jb
xchg
mov
mov
xor
and
and
outsb
pop
xchg
pushf
lock
out
movsl
sub
clc
mov
bnd
pop
es
lods
push
out
divps
pop
inc
lea
or
out
dec
inc
rcll
xchg
pop
add
out
rclb
movsb
pushf
mov
push
and
cli
jbe
ja
idivb
outsb
and
mov
jnp
jne
jns
push
pop
or
fs
pop
cmp
es
test
insl
inc
aam
into
popf
xchg
ja
std
mov
xor
jno
enter
dec
jge
add
incl
aas
or
ret
mov
bswap
sbb
nop
mov
mov
jno
inc
cmp
cmp
cmp
leave
jbe
adc
ret
call
pop
repnz
xchg
add
add
lcall
jne
das
loopne
insb
mulb
mov
clc
mov
mov
das
stos
test
jle
rcll
xor
mov
jp
push
ja
cmp
sahf
cmp
jg
fsubl
jmp
sbb
jle
mov
adc
jmp
subb
fldenv
in
aam
pop
cmp
cmp
sub
insb
subl
fildl
fmull
or
aad
std
mov
pop
pop
aaa
xchg
mov
les
les
xchg
sub
iret
pop
movsb
ljmp
iret
cmpsb
lods
fnstenv
mov
les
xor
push
shlb
cli
outsl
ret
fmuls
or
mov
cmp
sarl
cli
inc
test
fwait
jo
imul
mov
pop
push
lds
or
fldcw
inc
div
mov
mov
sub
mov
mov
mov
mov
imul
and
xor
add
xor
add
mov
xor
xor
pop
jmp
ja
scas
test
fldenv
enter
sti
fs
mov
mov
movl
sahf
sbb
inc
push
pop
in
movsl
push
add
stos
fdivrl
shl
ret
ja
stc
repz
out
fwait
xchg
fsubp
test
les
test
mov
call
movsl
mov
cmpsb
xchg
movsl
iret
dec
xchg
xchg
out
sbb
mov
inc
sub
mov
and
data16
cmovno
pop
addr16
loope
xor
testl
jae
adc
inc
jbe
daa
cld
add
in
mov
call
popa
loop
fsts
subb
add
addr16
pop
or
fmull
push
les
pop
cwtl
daa
add
xchg
icebp
xchg
loop
mov
inc
iret
sahf
stc
xor
xor
in
inc
push
mov
test
mov
xor
mov
movsl
pop
movsl
cmp
andl
loope
xor
mov
or
sbb
aam
out
sti
test
lods
pusha
push
inc
scas
xchg
jmp
pusha
jns
mov
movsl
sarb
lods
das
lcall
jp
cmpsb
mov
rolb
mov
repnz
push
stos
push
cmp
leave
xchg
sub
jae
leave
cwtl
add
mov
dec
inc
add
add
repnz
lea
mov
stos
icebp
adcb
cmp
sti
es
adc
leave
loop
xor
jmp
mov
pop
aaa
push
sbb
pop
insb
orb
add
or
jb
mov
inc
inc
lods
dec
add
mov
rcrl
pop
inc
cmc
lds
xchg
insb
mov
xchg
jo
fists
mov
and
or
dec
xor
mov
xor
inc
inc
cltd
xchg
adc
in
stc
mov
xor
test
sub
add
push
sbb
inc
add
cmp
add
cmp
inc
xor
lock
lods
lods
sub
ja
mov
inc
nop
cmp
dec
adcb
xchg
cli
popf
inc
sbb
xchg
pop
add
enter
sbb
gs
jo
imul
or
out
loopne
data16
loopne
in
fiadds
sub
sarl
clc
insl
out
stos
cmpsl
popa
push
jne
das
roll
movsb
cmpsl
and
mov
cmp
and
loopne
aaa
stc
adc
jmp
add
adc
lcall
outsl
bound
pusha
dec
add
mov
dec
pop
inc
addr16
nop
sbb
imul
cld
jae
jns
push
fcoml
pop
ss
cld
aas
mov
addr16
hlt
fwait
hlt
daa
call
lds
xchg
jne
mov
or
popf
cmp
inc
lret
mov
adcl
xchg
mov
mov
fisttps
das
xchg
xor
testb
scas
rolb
add
add
lret
inc
inc
call
movl
movl
movl
movl
mov
mov
or
mov
or
mov
sub
mov
add
or
mov
mov
add
and
xor
div
mov
xor
xor
or
xor
cmp
jae
push
movl
xor
movl
movl
movl
mov
mov
div
mov
mov
mov
sub
add
imul
xor
jmp
jmp
fdivr
stc
stc
jmp
mov
cmp
mov
rcrl
xor
fildll
sbb
adc
push
in
pop
sbb
lods
inc
adc
outsl
dec
das
idivb
xor
ja
sbb
iret
mov
or
aad
add
jae
testb
push
es
adc
sbbl
fidivrl
stos
jle
and
jnp
rcr
jnp
or
inc
in
mov
jmp
bound
jbe
bound
pop
repnz
loope
push
arpl
icebp
rclb
mov
dec
or
push
pop
pop
hlt
xor
adc
xchg
rcr
pushf
jmp
mov
jnp
bound
fisubl
aad
push
fsts
jp
in
xchg
arpl
out
test
stc
loop,pt
adc
jno
sti
pop
ret
jbe
inc
adc
test
mov
test
pop
pop
mov
sub
cwtl
mov
xor
xor
push
rorb
jnp
aaa
iret
pop
fistpll
into
out
out
movsb
pop
insb
jne
lds
test
push
dec
das
in
gs
iret
push
xchg
cmp
outsl
sbb
out
lock
add
pop
and
sti
sarl
mov
dec
sbb
xchg
jb
mov
andb
push
scas
mov
pop
shlb
or
insb
mov
jp
xlat
add
xor
loope
gs
jle
sahf
or
and
dec
rcrb
rcl
ret
frstor
shlb
sbb
mov
mov
mov
pop
jne
lret
push
fsubr
xchg
mov
xor
out
cmpb
mov
rclb
cmp
inc
inc
pop
inc
jne
enter
xor
fcmovnu
pop
lret
cmpsb
sub
outsb
dec
xchg
add
cmp
mov
xchg
jo
out
std
out
inc
stos
jmp
mov
pop
in
xchg
sarl
jno
nop
inc
scas
cmp
and
popa
mov
mov
jg
shl
xchg
sub
pop
push
mov
loope
and
add
pop
xchg
sub
xchg
xor
cld
or
aaa
xor
jbe
orb
js
mov
sub
movsb
test
out
pop
pushf
sub
push
add
or
xchg
sub
popa
push
mov
pop
aam
sbb
xchg
sarb
jne
sbb
jno
in
data16
lock
jne
pop
filds
dec
ds
xorb
std
sbb
aad
dec
pushf
or
addl
add
xor
sbb
ja
int
xchg
div
xor
mov
xor
sub
mov
div
mov
xor
div
mov
imul
mov
mov
sub
mov
mov
mov
mov
mov
jmp
jl
cli
cmp
inc
add
inc
jo
mov
mov
movsb
and
or
dec
push
jge
and
rcr
xor
mov
xlat
scas
stc
inc
out
mov
mov
pop
subb
xor
xchg
lret
mov
inc
push
jae
mov
or
xchg
pop
leave
ljmp
in
lods
push
xchg
or
inc
pop
xor
in
nop
scas
sub
xor
adc
push
pop
jg
scas
xchg
in
sbb
repz
movsb
xor
aaa
mov
mov
inc
push
addb
or
fmuls
jne
out
jl
aam
pop
xchg
add
jg
test
lea
adc
xor
mov
dec
xchg
stc
dec
in
popf
lods
aam
add
fwait
sbb
mov
es
xchg
andb
psubsw
xchg
push
dec
push
and
lods
or
sub
out
cmp
mov
int
add
xor
mov
into
imul
mov
ljmp
mov
outsl
pop
movsb
mov
nop
icebp
shll
pusha
mov
cmp
popf
in
dec
and
insb
pop
fcoml
loope
sbb
pop
cmp
into
mov
sub
out
lcall
aam
jae
and
ds
rorl
sbb
cmp
ret
sbb
pop
inc
jbe
fsubrl
xchg
outsl
daa
mov
idivl
in
xor
ljmp
cwtl
ja
lods
fldenv
leave
dec
mov
icebp
movsl
adc
imul
mov
data16
aas
hlt
loopne
shll
pop
out
pop
cltd
shr
je
div
jl
and
jle
sub
test
cltd
fwait
xchg
scas
sbb
pop
ret
push
rcll
jne
inc
add
add
inc
mov
dec
loopne
and
mov
in
cmp
nopl
in
outsb
cld
mov
ljmp
adc
mov
loop
shr
cmp
ret
mov
add
push
adc
insl
sub
iret
add
and
das
sbbb
push
jbe
daa
xor
lret
sub
lea
cmpsl
mov
int
or
cmc
outsb
iret
cmp
push
xchg
or
test
inc
cs
decb
dec
xor
mov
test
nop
shll
enter
fcompl
sbb
inc
jne
dec
mov
cmc
xchg
xor
lock
add
xchg
ret
push
sbb
out
scas
dec
jecxz
jmp
sub
pop
loope
aam
sub
sub
mov
outsb
stc
mov
pushf
rcl
out
mov
pop
add
iret
scas
lret
fdivrs
je
ret
daa
pop
int3
push
cltd
out
cmp
mov
push
mov
mov
in
jmp
pop
and
add
and
mov
xor
imul
mov
jmp
add
mov
mov
das
push
cmp
mov
sub
pop
je
push
push
lea
push
das
aam
lods
loopne
mov
cmp
mov
loope
sub
or
fnstsw
movsb
xor
push
loop
int3
and
jns
and
test
movsb
xchg
repz
shl
dec
ja
sub
xchg
and
lea
push
cld
call
sub
inc
mov
lret
pop
dec
pop
outsl
mov
leave
loope
sub
jmp
test
mov
mov
arpl
adc
pop
xchg
or
lret
mov
pop
es
push
adc
out
inc
xchg
mov
xchg
rolb
nop
icebp
xor
add
mov
cli
les
dec
add
into
cmc
mov
mov
add
pop
xchg
xchg
xor
call
insl
mov
aaa
sbb
mov
test
add
sbb
rcrb
loopne
sub
pusha
lret
data16
push
jne
inc
pop
adc
or
mov
sub
jbe
push
jne
push
rorb
fsubrs
jnp
jns
mov
inc
call
xchg
dec
add
mov
andb
inc
or
stos
mov
sbbl
fwait
jae
add
mov
out
mov
into
test
sbb
push
adcb
xlat
dec
push
lock
bound
and
mov
out
nop
rcll
scas
and
jmp
sbb
ds
fadds
pop
xchg
push
cmp
sbbb
mov
lret
inc
fcomi
add
xor
adc
xchg
and
test
xchg
out
inc
pop
mov
cmpsb
ljmp
call
call
xchg
dec
xor
adc
mov
or
sahf
sub
sbbb
cs
jne
aad
xchg
icebp
add
aas
int3
cmp
xchg
cmpsb
xor
repnz
sbb
mov
aam
xor
aad
call
jne
cltd
insl
clc
mov
mov
jmp
or
inc
xorl
je
jae
cli
movsb
sbb
pop
mov
adc
lds
or
sub
js
aam
data16
jns
push
jns
ret
cmp
les
xchg
pop
iret
cltd
add
lea
or
aaa
and
or
add
fsts
shlb
sbb
push
push
sub
outsb
mov
repz
cwtl
pop
int3
hlt
and
add
push
mov
into
and
mov
add
add
out
test
rcl
or
aad
xor
loopne
inc
xchg
pop
addr16
mov
pop
cmpsl
ret
adc
mov
rcrb
jmp
add
mov
xchg
movsl
aas
adc
xor
xor
jl
xchg
pop
and
fadds
repnz
cmc
iret
sub
add
mov
mov
add
and
xor
div
xor
or
xor
cmp
jb
pop
movl
jmp
and
subb
mov
enter
add
jl
mov
rorb
mov
mov
aas
mov
cs
jmp
insb
sbb
loop
adc
sub
sub
adc
push
insb
mov
mov
add
repnz
push
cwtl
sbb
mov
clc
call
stos
clc
lods
jle
test
push
imul
xchg
mov
wbinvd
repnz
dec
test
adc
mov
pop
push
pop
sub
call
fidivl
flds
mov
mov
repz
sub
cltd
ljmp
mov
in
sti
jecxz
jecxz
sti
iret
loop
inc
insl
jg
inc
sub
pop
push
cs
movsb
xor
ds
dec
inc
cmc
outsl
lock
ja
push
aaa
pop
pop
sbb
in
mov
icebp
jecxz
adc
adc
icebp
xor
ds
add
jmp
mov
idivb
ds
pop
je
stc
lahf
pusha
movsl
sbb
scas
dec
push
stc
rorb
cld
sbb
sub
pop
mov
sti
sti
mov
lock
adc
cmp
rolb
in
xchg
jmp
mov
sarb
xor
push
mov
cwtl
add
out
cli
repnz
mov
cmp
roll
rolb
xlat
fs
xor
mov
std
xorl
mov
xor
sbb
xor
push
push
add
add
movsl
lock
rolb
jmp
daa
jmp
cld
sbb
popf
loopne
in
out
and
jnp
inc
mov
fmuls
add
sbb
inc
ficompl
stos
pop
adcl
addr16
test
sub
sbb
mov
repz
pop
pop
aad
cltd
xchg
ret
dec
insb
repnz
imul
push
push
sub
jl
scas
xor
pop
sub
bound
aam
das
roll
daa
repz
aam
inc
and
sbb
pop
movsl
dec
pop
cld
movsb
aam
filds
dec
lret
mov
xchg
stc
mov
ljmp
jle
cmpsb
cmc
push
xor
add
fs
dec
pop
jbe
mov
mov
jne
mov
repnz
icebp
dec
mov
inc
mov
xchg
add
jnp
jmp
aam
push
xchg
pop
jno
or
or
sbb
cmpb
or
xor
sbb
push
in
fcom
ds
sub
xchg
aad
cmpsb
rcrb
fstps
pop
dec
sbb
mov
decb
dec
and
aam
fwait
cmp
jge
xchg
fildl
aad
ljmp
aad
cld
fbld
inc
out
rorb
xlat
stc
test
pop
mov
sbb
mov
cs
addr16
movl
mov
mov
or
mov
or
add
mov
or
mov
xor
xor
movl
mov
mov
or
imul
mov
mov
imul
xor
xor
or
xor
mov
sub
mov
jmp
mov
sub
sub
scas
out
cmp
jle
mov
leave
cwtl
orl
stos
into
jnp
ljmp
fwait
push
cmpsb
pop
mov
add
loopne
ljmp
sub
xor
push
sub
into
xlat
sti
or
xchg
sbb
mov
cmpsb
cwtl
push
jmp
dec
insb
repz
sbb
pushw
push
push
aad
sbb
jbe
sti
pop
cmpsb
dec
ret
out
push
aaa
pusha
test
jae
pop
shll
cmp
xchg
popf
pop
lcall
pop
movsb
mov
mov
adc
mov
cwtl
jge
sbb
dec
pushf
dec
push
add
decl
aas
or
jne
push
imul
mov
push
push
ret
orl
js
pop
xchg
in
inc
sbb
sub
insl
xchg
pop
mov
bound
imul
mov
jmp
lahf
or
lret
inc
mov
stos
icebp
mov
es
imul
mov
loop
mov
jg
stc
dec
addr16
leave
addr16
outsb
pusha
push
jno
shl
sahf
pushf
cld
mov
mov
xor
dec
mov
lcall
repz
mov
test
sti
sbb
or
popa
xlat
pop
xchg
movsl
mov
cmp
ljmp
jge
loop
push
emms
adcl
mov
ja
lcall
ficompl
sarb
outsl
push
jo
jb
fs
sbb
mov
lea
mov
mov
mov
inc
enter
inc
fwait
hlt
rcll
in
xchg
aas
mov
inc
clc
pusha
les
add
lock
nop
jp
bound
lahf
or
dec
sub
aam
sysenter
movsb
inc
in
and
test
inc
jle
jl
dec
pop
mull
pop
faddp
cld
push
pusha
dec
jmp
xchg
rolb
outsb
ljmp
pop
cmp
addl
lcall
jl
mov
dec
mov
lahf
lock
outsb
adc
repnz
in
int
jecxz
bound
call
jl
xchg
fidivrl
mov
and
sbbb
xor
cmp
imul
cmp
sbb
mov
jbe
pusha
scas
cmp
mov
rcl
pushf
push
mov
shrl
fistps
mov
xchg
cmp
cmpsl
stc
mov
loope
div
mov
push
in
xchg
jo
popa
aaa
aas
mov
xor
shll
fdivrl
or
int3
mov
fcmovne
inc
xor
fistl
mov
xchg
xlat
or
mov
mov
pop
dec
faddl
rolb
or
mov
add
mov
mulb
pop
sub
mov
mov
xor
sub
mov
mov
mov
mov
mov
imul
and
mov
sub
lea
mov
jmp
fnstenv
subb
dec
sbb
les
filds
mov
or
subb
dec
sbb
mov
sub
dec
subb
pop
fcoms
jo
sub
mov
push
xor
mov
fwait
xor
inc
cmpb
aam
inc
cmpsb
mov
inc
sbb
inc
pop
or
pop
push
adc
push
mov
out
cmc
cmp
stos
jmp
loope
movups
pop
cmp
ja
imull
pop
lcall
and
lods
pop
or
lret
mov
jbe
mov
mov
cmp
mov
inc
gs
cmp
push
push
rcrb
pop
mov
cmp
repz
mov
arpl
clc
pop
add
or
rol
mov
shlb
lods
or
push
or
outsb
lret
xor
sbb
loop
xchg
insl
aaa
int3
adc
and
dec
test
adc
cwtl
jns
js
inc
mov
dec
syscall
sbbb
repz
stos
add
scas
pusha
out
fsubrs
xor
mov
mov
test
std
dec
lds
mov
inc
lea
push
and
hlt
mov
rcrl
jmp
mov
cwtl
and
das
mov
insl
pop
jg,pt
and
cmp
into
sbb
scas
jne
call
out
insb
and
sub
dec
scas
rcll
ret
ret
cmpsl
cmp
pop
enter
cld
aaa
cmp
insb
jno
pop
jns
lret
std
xchg
push
mov
pop
jecxz
jo
add
jnp
adc
imul
and
ret
push
cmc
xchg
xor
rcrl
scas
cli
loope
push
jb
arpl
div
pop
xchg
lahf
fimull
iret
or
jae
and
pop
stos
mov
addr16
imul
sbb
jne
mov
popa
pop
push
das
xor
leave
lods
fisubrs
inc
dec
and
mov
call
jns
inc
bound
add
mov
xchg
push
xor
shlb
jae
mov
xchg
inc
ljmp
push
xchg
out
out
jns
jmp
shrb
mov
xlat
mov
adc
scas
ret
and
and
aas
mov
rclb
outsb
andl
inc
out
leave
negb
ljmp
sbb
cmp
mov
test
aaa
inc
and
mov
fisubs
inc
pop
pusha
int3
lret
cmpl
jno
sub
sbb
and
xorb
arpl
fwait
int3
dec
mov
xchg
mov
or
nop
jae
js
cli
fisubrl
enter
add
lds
jb
insb
ret
add
js
inc
and
sbb
scas
addr16
cs
inc
xchg
xor
jo
lret
dec
or
ret
pop
add
sub
cmp
jbe
pop
pop
leave
ret
push
mov
sub
push
push
push
movl
movl
mov
mov
and
or
mov
mov
or
imul
imul
mov
lea
mov
movl
mov
mov
shr
and
mov
and
xor
div
mov
xor
xor
lea
mov
movl
mov
mov
jmp
movsl
jmp
add
jl
scas
cmp
adc
or
mov
inc
xchg
lahf
sarb
push
lods
add
fcomi
add
xor
adc
sti
mul
adc
jl
add
fidivl
adc
mov
jecxz
rclb
jle
push
adc
aad
mov
jae
jmp
inc
fs
pop
pop
fdivl
cmc
loopne
rolb
jbe
aad
dec
xchg
xchg
sbbb
ja
dec
scas
in
nop
lret
sbb
call
push
adc
pushaw
loopne
jbe
sbb
inc
cmp
mov
jge
push
xchg
push
pop
push
shl
hlt
or
pusha
adc
scas
push
fadds
push
mov
push
sbb
cltd
les
sub
out
stos
push
mov
jge
shll
cwtl
nop
out
lret
xor
out
aas
mov
mov
inc
mov
pop
cmpb
sahf
shll
jg
lods
jnp
or
or
incb
ret
xor
scas
fcoml
imul
lret
outsl
stos
push
push
push
sbbl
add
xchg
jne
cmp
gs
out
inc
cmovne
sbb
mov
jno
ja
xchg
adc
cmp
fwait
loope
jecxz
aad
jno
push
mov
mov
add
pushf
ja
pop
addr16
jo
clc
in
jecxz
loop
repz
add
xor
mov
stc
or
sub
aad
dec
push
or
inc
jns
or
jne
and
cs
pop
push
lock
xor
adc
popa
clc
xlat
fbstp
cmc
xchg
xchg
icebp
jo
jecxz
mov
add
pop
movsb
jnp
popa
mov
int3
ret
adc
jns
fadds
or
mov
rcrb
mov
pop
int
add
je
jo
push
mov
shll
and
or
movsb
js
xchg
or
mov
and
mov
cwtl
and
int3
xchg
sbb
push
ret
hlt
mov
or
cmp
push
inc
dec
dec
push
jno
cli
sub
mov
dec
adcb
in
outsb
jmp
mov
mov
xchg
mov
pop
sbbb
push
or
les
mov
pop
xchg
xor
inc
push
add
xchg
push
and
push
clc
lret
out
aas
lea
cmpsl
and
pop
andl
call
fmull
lahf
pop
in
hlt
mov
sbb
pushf
inc
xchg
xor
or
inc
adc
fldcw
lahf
daa
pop
dec
sub
push
add
mov
out
dec
lods
int
or
and
xchg
xchg
inc
mov
test
cmp
push
andl
dec
or
data16
fcoms
fldenv
bnd
pusha
rcl
jmp
pop
in
or
jae
jmp
ljmp
adc
gs
push
and
subb
aad
cmp
push
out
and
aas
lcall
push
aas
mov
das
ljmp
mov
xchg
lods
rcr
and
enter
inc
add
rorl
add
and
sub
mov
mov
mov
xor
shr
and
add
mov
mov
mov
imul
mov
sub
and
imul
and
sub
mov
movl
movl
jmp
jne
arpl
ja
jge
in
daa
cmc
cmp
stos
cltd
outsl
mov
mov
mov
jbe
icebp
es
rorl
insl
xchg
jecxz
jecxz
aaa
mov
sbb
inc
sub
rorb
pop
xchg
ja
out
and
adc
dec
push
stos
cld
push
add
jl
lock
or
cmp
pop
mov
adc
cld
pop
cmp
clc
xchg
movq
mov
pop
data16
lock
or
adc
cmp
push
test
subl
mov
bound
mov
dec
jp
sub
js
mov
shrl
scas
adc
jbe
xchg
dec
cmpb
fcmovnb
and
or
xchg
fildl
outsl
xorl
dec
adc
stos
cmp
add
enter
mov
or
stos
fbstp
push
add
mov
jg
push
cmp
inc
int3
push
enterw
ret
repz
mov
scas
add
inc
pop
bnd
pushf
in
icebp
shrb
sti
xchg
xchg
sarb
ljmp
adc
bound
pushl
mov
pop
je,pn
fs
std
cmp
stc
insb
mov
inc
stos
mov
les
add
pop
movsb
adc
dec
mov
jo
lret
jg
stos
xchg
outsb
das
daa
sub
sbbl
cs
imul
pop
xchg
in
jns
inc
cli
insb
div
adc
imul
add
inc
aad
shll
ret
or
sbb
in
jo
jp
popa
mov
fnstcw
mov
dec
inc
mov
mov
lret
xor
test
roll
push
repnz
and
mov
call
sarl
sbb
es
ja
mov
fwait
jns
sbb
xor
mov
sbb
rorb
jno
ds
in
test
shll
mov
jns
add
mov
add
rorb
mov
mov
adc
int3
and
ficoms
xor
sysexit
mov
jge
add
add
adc
push
insl
call
mov
sub
jo
int3
aad
into
imul
adc
cmp
mov
push
mov
xor
mov
mov
dec
sub
sti
testl
xor
add
ds
icebp
cmp
mov
cli
xchg
mov
sti
fidivrs
push
daa
xchg
cmp
out
inc
fstpl
cltd
adc
pop
push
jge
in
mov
jg
jl
mov
in
fsubl
test
movsl
incl
xchg
test
and
and
pop
mov
push
popa
mov
xchg
call
mov
mov
sbb
ret
adc
mov
sub
jmp
aad
aad
cmp
test
andnps
add
movsl
je
enter
inc
push
cmpsl
shll
pop
and
in
jg
mov
mov
and
mov
or
and
mov
sub
mov
sub
mov
sub
mov
movl
mov
jmp
push
jnp
cmpsl
addr16
stos
loopne
xorb
pushf
mov
mov
rolb
sahf
sub
in
fs
test
and
push
cmp
inc
xchg
out
jmp
fwait
inc
icebp
dec
jnp
mov
cmp
add
ss
jns
and
gs
insl
pop
add
mov
das
ss
pop
outsb
pop
cmpsl
in
jl
mov
adc
fcompl
stc
sub
in
mov
out
dec
jp
mov
je
test
dec
fucomi
cmp
aas
cmp
jmp
stos
icebp
popf
dec
stos
mov
pop
sahf
or
mov
daa
test
jne
inc
cmpsl
xor
push
xchg
loope
cmpsl
lods
add
push
enter
jmp
aaa
in
ss
repnz
lods
stc
std
inc
pop
scas
cmp
mov
pop
push
mov
arpl
sahf
inc
push
in
gs
in
jne
pop
xchg
sbb
popa
sbb
mov
mov
or
cmp
cwtl
pop
dec
fldl
jo
movsl
iret
inc
out
mov
movl
mov
fs
push
jecxz
daa
xchg
jnp
mov
mov
and
mov
pop
pusha
or
and
arpl
adc
and
jno
stc
pop
push
mov
mov
push
psubsw
popa
pusha
xchg
push
add
repnz
cld
popl
loop
mov
loope
fldcw
push
inc
ret
mov
hlt
cmp
mov
sbb
cmp
fmul
add
leave
cmc
mov
cmp
iret
or
fisubrs
and
dec
mov
sti
lods
loope
adc
idivb
xchg
inc
movsl
dec
ljmp
or
jne
xor
sub
popf
sbb
cmc
aaa
movsb
xor
pop
jno
xchg
es
jecxz
fiadds
movsb
jb
test
cmpsl
mov
pop
fsubp
jp
enter
inc
nop
jle
clc
shll
cmp
outsb
pop
pusha
imul
in
rcrl
mov
aam
jo
adc
push
add
inc
pop
jge
push
jmp
pusha
mov
push
ss
popa
mov
stc
and
adc
jl
or
lea
rep
or
js
gs
pop
loope
mov
insb
lods
pop
jg
mov
pop
mov
mov
iret
divl
sbb
sbb
push
or
xchg
js
out
scas
loopne
add
push
pop
and
xchg
ret
fisttpl
inc
nop
mov
dec
and
and
and
insb
fcmovu
repz
rcrl
xor
repnz
popa
repz
pop
scas
xlat
or
lret
and
xor
int3
adc
popf
mov
movsb
lret
fnsave
xor
lret
sbb
or
cld
subb
pusha
loope
cmpsl
mov
cs
inc
into
inc
xchg
xor
ja
int
pusha
add
pop
repnz
dec
sbb
out
cli
push
sub
fmuls
movsl
dec
scas
push
cmc
lods
inc
push
dec
int3
fwait
mov
push
subl
test
add
leave
pop
mov
loope
insb
dec
cmc
popf
hlt
cmp
dec
loop
shrl
fs
jbe
iret
push
and
jae
pop
std
xchg
xchg
mov
cmp
add
div
mov
sub
mov
movl
movl
movl
movl
mov
mov
mov
mov
push
push
push
push
call
push
add
push
adc
push
push
call
push
jmp
mov
mov
outsl
pop
pop
adc
mov
andl
mov
in
push
dec
aaa
pop
std
pop
sub
push
cmpsb
fldenv
dec
xchg
enter
mov
in
jl
fldt
xlat
mov
adc
loopne
lods
lods
repnz
aam
push
ds
sub
mov
cmp
cli
aas
cs
cmpsl
movnti
loopne
shrb
hlt
stos
sub
inc
es
dec
jmp
shlb
aas
ljmp
js
scas
pop
mov
mov
jae
cltd
in
xchg
test
leave
add
inc
mov
fistpll
lods
xor
movsl
add
cmpl
pop
pop
xchg
das
mov
aaa
orb
rcrb
test
cli
lea
jb
jne
cs
mov
gs
addl
push
push
inc
pop
mov
cmp
rcll
adc
jb
adc
xor
stc
sbb
test
sbb
jmp
xlat
pop
jo
int3
jno
jbe
jae
jae
repz
push
popa
push
mov
shr
lret
dec
cmp
xchg
ds
pop
rclb
jae
fisubrl
cmp
lret
loopne
in
hlt
and
fs
imull
xchg
inc
shll
out
xor
call
jo
cwtl
jnp
xlat
stos
loopne
mov
fwait
adc
and
add
shl
add
mov
xor
mov
jns
pop
adc
or
lods
lds
cmp
and
push
in
lcall
cli
jo
roll
inc
mov
mov
xor
cmp
loopne
xor
mov
pop
inc
mov
mov
movsb
mov
adc
mov
and
mov
sbb
int3
push
shl
and
or
add
call
jecxz
outsb
cmp
bswap
subb
xlat
jmp
or
pop
rclb
xchg
call
icebp
sbb
dec
insb
and
xchg
adc
push
movsb
cmp
sbb
movsb
xchg
xor
xor
enter
bound
cmc
adc
jns
sub
push
xchg
dec
pop
sahf
movsb
in
add
lret
test
lea
insl
or
lods
xor
xor
lds
lods
add
loopne
bswap
lret
divl
out
loope
shlb
push
sub
scas
out
in
xor
or
insl
inc
pop
pop
mov
stos
ljmp
mov
bound
push
sbb
fisubrl
push
add
push
jecxz
push
sbb
inc
adc
mov
jge
in
ljmp
inc
or
cmp
out
xor
pcmpeqd
adc
jns
mov
shll
scas
imul
mov
xchg
dec
adc
dec
push
je
xchg
repnz
mov
int
xchg
inc
into
push
lahf
add
mov
xlat
push
mov
fsubr
dec
mov
fdivp
pushf
pop
jg
clc
out
mov
loope
leave
pop
icebp
jbe
xor
jg
xchg
dec
add
push
adc
push
push
call
mov
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
xor
div
mov
mov
push
pop
add
and
xor
xor
or
mov
mov
imul
mov
imul
mov
or
xor
div
add
mov
mov
imul
mov
add
xor
mov
xor
lea
push
mov
mov
or
add
push
mov
xor
mov
or
xor
mov
mov
or
xor
add
push
mov
or
lea
call
mov
xor
sub
cmp
jne
mov
mov
or
mov
mov
or
mov
or
lea
lea
push
mov
or
imul
mov
xor
sub
push
add
jmp
dec
xchg
cmp
mov
pop
inc
inc
popa
adc
mov
xor
cmp
js
xor
jl
lock
xor
xchg
fldenv
daa
mov
out
adc
cltd
fsubr
mov
jno
orl
fisubrs
jl
inc
mov
adc
push
pop
dec
adc
mov
subl
dec
mov
push
fnstsw
inc
iret
and
aam
mov
pop
iret
fimull
aam
ret
mov
loope
addl
inc
xchg
test
je,pn
out
jno
sbb
lods
jbe
gs
sbb
adc
xor
das
lahf
test
out
and
test
fistps
cmp
lcall
stc
rorl
je
outsb
xchg
loopne
ficomps
fldenv
movsl
cmp
jnp
fisubl
ljmp
dec
dec
sub
nop
lods
arpl
ret
mov
sub
shrl
xor
or
mov
jle
mov
mov
or
mov
fcoms
in
sahf
movsb
aas
jp
int3
sti
or
mov
xor
shlb
jp
lds
stos
sub
add
mov
js
lret
mov
je
adc
loopne
je
cmc
and
in
and
fisttpl
stc
sub
xor
push
stos
sbb
leave
les
fdivs
mov
xlat
fistpl
popa
push
jle
xchg
scas
pop
arpl
ret
pop
cmp
push
push
push
repnz
and
test
xor
add
aas
out
call
add
pop
cs
mov
lea
xor
xor
inc
or
mov
dec
arpl
add
outsb
push
repnz
lahf
mov
xchg
cli
daa
jg
jge
fists
add
gs
mov
pop
pavgb
scas
leave
add
out
mov
push
mov
push
mov
inc
int
idiv
lret
mov
mov
sub
jne
xchg
scas
xor
rorl
rcll
mov
arpl
or
xor
subb
test
movsl
xchg
clts
lea
mov
cmp
test
lret
outsl
sbb
call
cmpsb
mov
mov
push
arpl
out
add
jle
mov
mov
dec
push
mov
xor
inc
sbb
mov
inc
repnz
insb
test
jae
sub
dec
in
dec
clc
mov
icebp
jecxz
pop
pop
test
addr16
mov
data16
shl
dec
xchg
rorb
aam
mov
and
mov
cmp
insb
ret
mov
fmull
cli
sub
lods
pop
in
pop
in
inc
jo
lret
xchg
mov
adc
call
mov
pop
xor
orb
lahf
enter
mov
inc
cli
mov
pop
hlt
je
scas
stos
xor
sub
in
out
in
shr
call
add
stc
nop
js
pop
insl
aam
mov
mov
xor
sub
xor
mov
div
mov
mov
sub
pushl
call
mov
mov
lea
mov
incl
mov
mov
xor
shld
shl
mov
mov
xor
xor
cmp
jne
cmp
jne
mov
mov
jmp
lea
mov
mov
mov
mov
mov
sub
mov
mov
mov
sub
mov
movl
movl
mov
jmp
aas
or
mov
pop
hlt
mov
xor
mov
mov
cmpsb
add
sub
insb
push
dec
cwtl
insb
dec
mov
inc
sub
xchg
adc
cwtl
test
dec
movsl
mov
cld
aad
pop
jl
hlt
std
in
dec
fiaddl
test
iret
pop
or
lret
cld
mov
mov
lods
rcrb
dec
rcrb
mov
or
adc
cli
pop
repnz
mov
sub
sbb
cmpsb
lret
adc
ret
sbbb
jne
xlat
jne
push
or
xor
sbb
jb
or
lds
mov
xlat
push
lret
or
pop
ds
cmpsb
popf
sti
lret
lock
in
mov
leave
sarb
adc
mov
mov
cmp
arpl
mov
adc
mov
pusha
adc
xor
hlt
push
fldl
fmul
inc
jmp
fdivrl
mov
jns
xchg
test
nop
ljmp
clc
sub
stos
or
movq
push
neg
and
sbbl
jne
mov
xor
dec
outsl
jp
dec
sbb
lds
subb
or
pop
loope
jmp
sbb
hlt
mov
jae
cmpb
jl
aad
mov
adc
jp
xchg
mov
pop
add
rol
push
movsl
pusha
dec
and
cwtl
jecxz
cmp
movsl
and
pop
mull
loop
inc
frstor
es
js
pop
and
push
mov
and
mov
repz
push
xor
sub
add
cltd
xchg
in
push
inc
int3
jecxz
xor
test
mov
lahf
movsb
inc
and
sbb
mov
mov
and
lret
dec
or
xchg
mov
je
loopne
cs
int3
fsts
xchg
xor
test
cmp
jns
test
push
push
jne
mov
in
sbb
fwait
not
mov
mov
sub
out
mov
xchg
adc
sbb
adc
cmc
jg
mov
adc
ds
out
xor
inc
lea
fisubrl
cmp
leave
mov
outsl
xchg
sbb
lods
cli
mov
add
js
lret
sbb
ret
pop
int3
std
ret
push
jmp
sub
fwait
cli
sbbb
push
imul
mov
mov
or
or
jbe
insl
push
and
adc
xchg
adc
shrl
jg
add
push
mov
adc
mov
inc
pop
xchg
inc
pop
jb
mov
in
negb
repz
dec
inc
lods
cmc
fcompl
aad
in
mov
in
and
xchg
pop
scas
sbb
test
adcl
push
insl
mov
testl
mov
pop
nop
data16
xchg
scas
in
inc
add
lret
lods
mov
ret
adc
enter
call
mov
mov
jmp
psllw
jno
pop
stos
cmp
ret
xor
mov
mov
inc
test
jle
outsb
cmp
out
jae
enter
inc
mov
pop
js
jl
ret
aad
fcmovbe
xor
sub
cmc
mov
add
insl
and
mov
movsl
dec
cmp
cmpsb
pop
dec
lahf
jb
sub
mov
fimull
dec
fistpl
push
jns
iret
cli
imul
sbb
arpl
rclb
and
push
sbb
into
adc
icebp
push
jmp
jge
lahf
xchg
mov
fs
push
negl
fmull
rorb
aam
js
lods
sbbl
enter
fdivl
test
xor
mov
ja
or
lods
push
cmp
add
xchg
lds
push
cmpsl
lcall
test
cli
cmp
cs
cmc
in
xor
int3
push
inc
outsl
andl
les
cmpsb
mov
jb
in
inc
sbb
in
xchg
pusha
inc
mov
mov
jmp
cwtl
sub
mov
pop
ror
test
dec
jmp
dec
sarl
je
stos
test
in
inc
cli
lret
adc
je
jmp
outsl
lret
dec
mov
cli
hlt
lds
sub
inc
lcall
in
into
sbbl
test
sti
and
icebp
shl
cmpsb
sbb
jp
dec
pop
cmpsb
or
dec
scas
mov
stc
lods
and
xor
push
test
shr
fcmovbe
lea
dec
fwait
bound
and
dec
ret
push
out
lods
xor
inc
pop
dec
loop
cmpsl
repz
arpl
jmp
jge
push
popf
push
aad
sbb
or
sbb
mov
jecxz
or
cmpsl
movsb
test
fsubl
mov
pop
aam
insb
rcrb
mov
aas
jp
es
adc
adc
jl
fidivs
add
out
mov
decl
ja
stos
cmp
aam
mov
ret
test
mov
and
pop
addl
mov
or
or
dec
and
lea
inc
and
jle
fmull
or
pusha
cltd
les
loopne
xor
dec
mov
lds
test
mov
ja
adc
jl
test
ss
add
stos
xor
adc
jo
pushf
mov
fisttpll
cmp
incb
pop
pop
jl
pop
jle
lods
rol
cmc
mov
push
add
jecxz
sti
cmp
push
sbbl
xor
pop
add
mov
mov
ret
xchg
mov
lret
test
imul
rorb
add
pusha
ficoml
push
aaa
lea
aam
add
add
insl
nop
sahf
gs
fs
inc
subb
fsubl
inc
push
pop
sbb
sar
stc
jns
add
mov
mov
fdivl
test
cmp
addl
lock
mov
mov
pushl
pushl
pushl
pushl
pushl
push
push
pushl
mov
call
mov
mov
mov
jmp
lea
mov
mov
pop
inc
sbb
mov
mov
sbb
call
mov
int3
jnp
test
scas
jne
xchg
aas
fs
out
mov
out
push
adc
sub
loop
fcompl
and
pop
mov
jl
cmpsb
daa
push
hlt
gs
sub
inc
fdivr
stc
sbb
mov
add
ds
sub
pop
scas
pop
cmp
xor
inc
stos
pusha
lods
pop
cmp
fdivs
add
dec
or
adc
pushl
mov
xchg
xor
add
adc
daa
jo
sbb
pop
cmp
xor
cmp
inc
jg
jecxz
es
lock
stos
into
jmp
mov
mov
jge
data16
dec
sbb
rolb
sbb
es
in
and
push
mov
adc
bound
lods
mov
aaa
ret
repnz
negl
popl
mov
inc
jno
test
gs
mov
or
popa
lret
push
jns
loopne
adc
cmp
jmp
ja
pop
jno
mov
mov
shrb
pop
rolb
push
mov
scas
fdivrl
les
xchg
pushf
dec
inc
orl
pop
inc
and
shlb
pop
jecxz
fiadds
or
in
iret
or
pop
shrb
gs
cmp
addr16
fldcw
add
in
inc
push
cmp
outsl
sti
xchg
loop
adc
leave
leave
je
int
sub
pop
mov
mov
rolb
jnp
xchg
mov
cmpsb
inc
lea
xlat
bound
repz
jmp
cmp
jmp
sub
adc
sub
push
sbb
push
test
adc
sbb
push
fdivrs
lods
and
jae
mov
std
movsl
fs
sbb
push
fs
into
movsb
shrl
addb
out
das
lds
push
push
mov
mov
pop
inc
sub
ss
push
outsl
jmp
xchg
jno
mov
mov
cmpsl
in
das
rcll
into
or
imul
cmc
xchg
adc
leave
out
sbb
jb
inc
jmp
mov
ljmp
lods
incb
lock
cs
jne
mov
adc
negb
jns
dec
faddp
pop
dec
pop
xlat
rcrb
push
gs
mov
mov
add
mov
sahf
xchg
in
test
cmpsb
xchg
bound
cld
or
cmp
sbb
mov
aas
mov
mov
push
xor
sub
into
inc
sub
xchg
mov
lods
sbb
inc
les
sbb
shll
inc
fcoml
dec
rorl
or
loop
testl
mov
divb
leave
sbb
pop
jbe
cmpsb
cmpsb
popa
es
lods
int
inc
mov
pop
mov
push
repz
xchg
sbb
dec
mov
sub
and
ffree
lods
pop
sbb
jmp
decl
test
pop
push
add
mov
jmp
dec
cmp
dec
cmp
xlat
jno
cmp
mov
mov
and
and
or
push
jl
mov
daa
lcall
jno
or
ljmp
std
lcall
sbb
pop
inc
mov
mov
sbb
mov
xor
sub
pop
mov
push
ret
icebp
dec
xchg
in
out
sbb
mov
pop
pop
inc
lods
jb
xchg
lretw
mov
test
inc
mov
icebp
cmc
and
adc
xchg
pop
loop
jbe
adc
add
sbb
inc
push
les
and
in
lret
fisubrl
std
fcomip
lret
and
push
pcmpeqw
out
xor
sub
test
sbb
xor
inc
mov
jns
cmpsl
test
inc
or
or
xor
sbb
ja
call
pushf
rcll
jns
push
dec
dec
sti
inc
pop
xor
xchg
cwtl
aaa
fdivrs
mov
jmp
mov
push
pop
cmp
pop
jge
arpl
sahf
outsb
lock
or
movb
mov
lcall
jne
or
push
ret
mov
or
cmp
xchg
cmpsl
cld
or
push
lock
sub
pop
jno
fimull
add
lahf
cmp
daa
rolb
push
je
mov
jecxz
push
and
in
stos
sbb
mov
inc
mov
mov
out
mov
pop
pushf
jnp
cmp
xchg
cmp
outsb
xchg
in
fldl
pop
mov
mov
or
repnz
push
outsl
in
and
sbb
fs
xchg
sub
adc
fidivs
mov
fcoms
cli
ret
or
and
push
pushf
and
ds
enter
xadd
pop
sarb
cmp
mov
sub
adc
or
fildl
sbb
mov
ss
dec
outsb
scas
lret
mov
mov
jb
cmp
mov
or
pop
push
mov
ficompl
xorb
inc
or
mov
testl
gs
sub
jae
pop
sub
popa
sahf
xchg
aaa
insb
sub
out
ss
sub
cmp
jne
lods
sbb
inc
add
test
lea
cmp
std
fcompl
or
pop
sub
mov
pop
loopne
xchg
jg
es
lea
add
sbb
pop
stos
scas
inc
xor
cld
add
pop
add
out
mov
xchg
lret
fstpt
mov
xchg
data16
add
jnp
outsb
mov
mov
jne
add
mov
mov
int
jo
popa
imul
push
add
std
scas
cmp
aas
sub
scas
fs
out
cmp
insl
jmp
in
push
mov
jmp
call
push
loope
fistpl
pop
jmp
dec
fsubl
out
lret
ret
jns
dec
imul
addb
pop
scas
mov
push
call
mov
push
add
push
push
call
mov
jmp
mov
mov
pop
pop
pop
leave
ret
push
mov
push
push
push
mov
mov
mov
mov
add
push
adc
push
and
and
push
push
call
xor
sub
mov
movl
movl
mov
mov
mov
mov
push
push
push
push
call
mov
mov
xor
mov
jmp
jo
fwait
push
mov
add
xor
mov
mov
cld
mov
jb
xor
sti
test
leave
mov
aam
push
shr
jmp
mov
cld
jl
jl
xor
pop
adc
fisubrs
push
xchg
je
add
hlt
pop
lea
mov
mov
jg
mov
cmp
or
es
jbe
pop
xor
mov
cwtl
mov
pop
lock
xor
adc
xchg
xchg
jmp
add
mov
imul
xchg
test
jae
data16
or
xor
mov
sub
pop
ja
inc
push
hlt
enter
nop
cmpsb
lahf
xor
out
pop
leave
push
scas
icebp
mov
sub
push
iret
or
push
or
xchg
jg
mov
repz
popf
cmp
aam
xchg
iret
cld
jecxz
ss
cmc
imul
jecxz
jb
icebp
ror
xor
or
sahf
or
frstor
add
leave
fcmovne
sahf
mov
push
lods
bound
mov
add
jge
mov
sbb
rcpps
adc
movsl
adc
mov
ucomiss
adc
cmpsl
ljmp
daa
inc
scas
out
mov
push
enter
cmpl
out
pop
inc
notb
mov
mov
pop
out
mov
notl
fsubrp
ficompl
jbe
sub
and
test
xor
ss
stc
xor
adcl
mov
mov
fadd
pop
mov
push
add
enter
xor
xchg
jne
jno
inc
cltd
mov
adc
fwait
add
lea
insl
xor
cs
aad
fnstenv
imul
cmp
fwait
insl
lea
fcmovnbe
mov
jo
sbb
cmpsb
cmp
adc
pop
inc
xchg
and
jb
xchg
mov
sbb
adcl
leave
xor
nop
adc
ss
movsl
out
fsubl
in
out
adc
cmp
or
movsb
sti
pmaddwd
shll
mov
jbe
push
dec
pop
pop
gs
aam
jmp
mov
cmpsb
lret
rcrb
mov
sub
cmp
scas
dec
fldl
xchg
mov
push
pop
inc
ret
out
pop
loopne
or
inc
sbb
push
add
add
sbb
xchg
gs
dec
cmpsb
in
ljmp
adc
lds
mov
xor
xchg
pop
adc
xor
es
xchg
outsl
rcrl
ljmp
in
arpl
fwait
cld
pop
aam
adc
mov
mov
fsub
xchg
and
dec
cmp
je
ror
lahf
dec
add
xor
push
in
call
cmp
and
bound
fwait
jbe
mov
jbe
int
jae
sbb
or
mov
nop
pop
push
mov
xchg
jae
pop
xorb
and
and
xor
fisubs
ss
test
mov
pop
push
loopne
push
inc
mov
stc
cmp
lods
jo
repz
popa
jno
jo
jle
dec
lock
ljmp
lods
bound
enter
xchg
outsb
fcomps
inc
mull
sahf
push
in
mov
je
das
js
dec
sbb
push
mov
xor
push
lahf
jmp
pop
xchg
test
inc
mov
or
add
xor
and
mov
xor
mov
movl
movl
mov
mov
add
imul
mov
imul
xor
mov
mov
mov
xor
mov
div
push
xor
pop
sub
xor
div
mov
sub
mov
mov
movl
movl
mov
mov
imul
mov
imul
and
mov
mov
movl
mov
sub
or
xor
pop
leave
ret
push
mov
sub
jmp
movsb
sub
clc
mov
mov
inc
insl
xor
arpl
mov
mov
pop
inc
jno
pop
lahf
data16
ror
add
sub
and
jge
xchg
adc
test
sub
cmp
dec
lock
test
sbb
jmp
pop
mul
push
sbb
repz
incl
adc
jns
cmpsl
mov
or
mov
push
clc
fidivrl
xchg
jp
leave
inc
rorb
sahf
jg
bound
cli
shlb
cltd
pop
ds
mov
dec
fwait
fwait
push
popl
xchg
bound
dec
sub
loopne
hlt
test
add
mov
xchg
cmp
and
sub
cmpsl
test
lret
movsb
and
stos
adc
jge
add
and
mov
scas
out
shll
inc
dec
mov
sub
popa
fildll
bound
jne
stos
mov
jae
pop
cli
push
mov
push
loop
iret
mov
push
test
hlt
jg
fcmovnb
shrb
repnz
repnz
cmp
dec
mov
sbb
add
ret
and
cmpsb
xlat
push
loopne
xorb
jno
mov
fisubrs
or
test
xchg
cmp
mov
pushf
mov
and
ja
out
vmsave
push
jl
dec
lock
ret
mov
jg
loopne
ficoml
ja
cmp
sti
cmp
lea
cmp
sarb
adc
cmp
dec
cmp
pop
pop
cmp
xchg
or
mov
sub
movsl
mov
sub
ljmp
aaa
cs
mov
lock
adc
popf
frstor
cltd
lret
pop
sahf
stos
and
scas
dec
xlat
cmp
mov
das
repz
mov
cmp
inc
xor
rorl
es
adc
aas
rclb
inc
and
fldl
jb
sub
lret
and
adc
add
inc
insb
mov
lahf
push
dec
xchg
mov
sub
daa
les
and
cmp
mov
cwtl
int
cli
cmp
pop
jae
xor
fimull
popa
push
sbb
pop
xchg
call
ss
adc
pop
loope
enter
and
push
aam
xlat
add
stc
jbe
jnp
out
lahf
cmp
pop
aad
ret
cs
ljmp
lret
fildll
pop
pop
imul
sbb
adc
cli
sub
push
mov
orl
mov
sub
aaa
push
fcomip
inc
test
lcall
ds
mov
orb
pop
mov
dec
test
jp
cmp
in
cmp
sbb
std
out
push
jl
daa
mov
ja
inc
pop
or
add
leave
mov
cwtl
popaw
sti
jno
pop
push
stos
jo
cmpsl
fistl
mov
out
or
inc
push
cwtl
fisubs
repnz
dec
mov
add
shlb
jp
jp
sbb
sahf
bound
cmp
xchg
int
insb
jno
xchg
pop
sbb
and
sbbl
ja
adc
push
cltd
cmp
xchg
mov
xor
mov
cmp
or
inc
pop
inc
stos
outsb
mov
pop
xchg
adc
xor
insb
push
sbb
sub
jo
xor
xchg
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
jmp
jo
test
lods
mov
mov
popf
jmp
mov
mov
sbbb
adc
mov
inc
xor
dec
loopne
in
fadds
sub
xor
arpl
or
mov
inc
jge
in
rorb
leave
lret
sbb
push
test
xor
push
test
jbe
xor
adc
std
dec
pop
lcall
inc
mov
pop
std
mov
or
icebp
xchg
pop
icebp
cmpsl
jle
pop
add
cmc
aaa
xor
into
and
lcall
inc
daa
push
cmp
sbb
adcl
incl
loopne
xchg
or
adc
mov
xchg
clc
lret
hlt
fs
out
out
dec
sbb
push
cmp
stos
add
fdivl
ljmp
pop
in
outsb
cmp
dec
mov
repz
push
cmpsl
int
addr16
adc
mov
mov
pop
or
data16
fs
jl
mov
add
jnp
imul
cs
fnsave
test
stos
xor
hlt
jb
mov
fildl
rcl
inc
leave
daa
jle
lock
das
and
xor
pop
andl
div
mov
push
inc
or
sbb
jp
stos
push
popa
test
mov
outsb
push
mov
pop
lret
or
js
xlat
dec
mov
mov
dec
mov
mov
mov
xchg
cwtl
mov
scas
in
leave
jle
jne
cwtl
mov
fadd
jmp
add
cmp
pop
sbb
dec
or
inc
xlat
bound
clc
adc
cltd
mov
in
aas
stos
lcall
sbbb
lret
test
shl
push
jns
enter
xchg
nop
pusha
or
adc
and
setle
pop
cmpsb
das
mov
ret
xchg
mov
mov
outsl
ficoms
jp
pop
pop
pop
sub
fsubrl
cs
icebp
inc
and
cli
inc
shrw
xchg
sbb
xlat
std
mov
xchg
xchg
add
adcb
add
test
mov
ret
lcall
cmp
xor
dec
jmp
iret
pop
jbe
jecxz
sub
mov
cs
xor
xchg
inc
mov
mov
and
jo
sbb
into
or
jo
inc
sbb
inc
sub
add
mov
cmp
add
call
mov
div
mov
pushf
cli
ficoml
dec
fs
mov
pop
int
mov
icebp
in
jle
int
mov
jmp
inc
cmpsl
pushf
test
fiaddl
incb
stc
mov
std
popf
push
xchg
or
leave
mov
int3
aas
xor
sahf
fnstsw
mov
sbb
push
mov
jne
cmp
stos
int3
inc
subl
cmpsb
cld
repz
cmp
test
movsl
call
icebp
gs
sarb
or
mov
repz
dec
testb
xchg
inc
and
dec
push
lods
cmc
or
mov
xchg
ds
mov
push
jp
pusha
lods
push
mov
or
lcall
leave
pop
sbb
lcall
in
shlb
jge
call
sub
lods
pop
add
xchg
push
add
movl
movl
movl
push
movl
mov
mov
push
push
push
call
mov
mov
push
push
push
push
call
mov
mov
mov
mov
xor
xor
add
adc
or
mov
mov
mov
or
add
cltd
jmp
adc
fnstsw
js
xor
mov
mov
daa
orl
mov
add
xchg
aas
dec
leave
adc
aam
scas
inc
cmc
loop
adc
mov
fsubrs
xchg
adc
scas
push
pop
lcall
pop
lea
jecxz
cmpb
pop
mov
mov
xchg
aam
test
cld
test
mov
mov
sub
outsl
outsb
jo
xchg
out
cmp
cmpsl
je
dec
movsb
add
dec
xchg
mov
mov
adc
or
sub
in
test
mov
fwait
dec
mov
loopne
lock
mov
pop
push
cmp
imul
and
mov
and
mov
push
push
push
sub
xchg
mov
sbb
ds
pop
stos
cmp
jle
pushf
dec
clc
fcmovu
insb
lcall
mov
or
aaa
cmp
jo
mov
daa
cmp
mov
rcll
or
adc
popf
call
arpl
mov
sbb
sbb
add
mov
fnstsw
xor
pop
sub
loope
push
les
push
lods
lret
mov
scas
jle
pop
mov
xchg
out
push
and
scas
out
add
icebp
sbb
inc
xchg
mov
xchg
popf
pushf
inc
and
lahf
jo
ret
mov
roll
rorb
sub
movsb
call
inc
popf
inc
out
lahf
pop
jb
xchg
mov
dec
cld
rcrl
xchg
ds
or
sbb
add
in
fsubrl
sbb
mov
test
xchg
rolb
push
cmp
fsubs
in
mov
add
scas
push
dec
push
xor
dec
pushl
and
and
push
fwait
insl
hlt
and
and
nop
push
dec
mov
stos
fs
jno
mov
dec
jmp
push
add
xchg
cmp
xchg
or
scas
xchg
pop
sbb
mov
push
add
rcll
sahf
dec
pop
test
cmp
out
insb
sbb
repz
xchg
mov
ljmp
idiv
mov
into
dec
insl
outsb
push
lds
mov
jne
push
cld
push
mov
fisubrs
cmp
out
push
xor
lcall
and
inc
in
sahf
and
ja
movsb
adc
sbb
jno
mov
mov
fs
mov
push
adc
imull
subl
ljmp
push
inc
pop
mov
xchg
lea
cmp
sub
push
fucomi
mov
pop
push
xchg
inc
dec
data16
cwtl
lea
add
add
jmp
mov
sbb
jg
fwait
mov
cs
adc
xor
jp
sbb
subb
inc
daa
push
jne
es
xor
mov
std
adc
xchg
movsb
xor
testl
and
xchg
ret
cmp
push
fidivl
lods
jle
lods
jle
cmp
adc
pop
test
cmp
scas
or
lret
and
mov
shlb
rcrl
pop
and
out
enter
outsl
cmpl
dec
inc
cwtl
fmuls
test
jle
jecxz
pushf
lret
and
push
push
mov
add
mov
inc
jne
test
cmp
jne
cmp
je
mov
mov
add
adc
xor
push
xor
push
push
push
call
mov
mov
mov
xor
cmp
jne
cmp
jne
mov
mov
xor
add
add
jmp
popf
adc
cmp
fldenv
call
mov
inc
cmp
xor
xchg
sub
and
int3
outsl
adc
loop
jmp
mov
sbb
push
cmp
inc
inc
lea
shlb
pop
outsb
je
push
jbe
mov
ret
js
adc
lock
js
das
mov
leave
xchg
pusha
jmp
cltd
lods
icebp
mov
jae
push
or
js
jno
or
out
arpl
sarb
into
and
jnp
cmpsb
int
pop
mov
and
jecxz
repnz
outsb
leave
adc
fwait
icebp
cltd
rol
arpl
iret
pop
imul
xor
add
cmp
add
clc
cmpl
cmpsl
sbb
push
xor
pop
call
xor
xor
addr16
sahf
bound
dec
jecxz
dec
icebp
outsl
push
pop
insl
sbb
call
jns
xor
add
pop
out
loope
cmpsb
outsl
ds
pop
cmpsl
roll
and
out
xor
adc
outsl
mov
xchg
fwait
cmpb
add
add
adc
js
mov
mov
fwait
imul
rcll
lret
mov
lret
xchg
pop
dec
fldln2
ror
cld
dec
ret
xor
jmp
xor
push
mov
pop
imul
fldenv
cmp
inc
loopne,pn
enter
cli
sub
insl
xchg
out
push
stos
call
in
add
mov
jae
pop
sti
repnz
cmp
inc
xlat
fnstcw
out
pop
shlb
push
inc
int
jne
fsubr
enter
idivl
ljmp
xchg
push
mov
jmp
ljmp
lret
cs
loopne
xchg
xor
loop
outsl
fldt
add
ja
mov
std
mov
ds
and
popa
int
sub
mov
mulb
mov
loopne
mov
enter
mov
scas
movsl
mov
xor
nop
push
cmc
insl
mov
mov
add
push
mov
aaa
repz
add
dec
inc
mov
ret
push
mov
cwtl
and
xor
xchg
jb
and
dec
mov
negl
jbe
mov
jecxz
pop
not
sarb
test
dec
adc
inc
movsl
lret
inc
std
push
mov
hlt
data16
jecxz
enter
clc
lock
nop
imul
cltd
imul
cmp
icebp
jle
ljmp
xchg
incb
dec
add
stos
movsb
or
rcrb
mov
sub
and
cld
xchg
inc
add
sub
sahf
idiv
shll
xchg
add
test
imul
out
jg
idivb
aaa
scas
setnp
push
mov
out
sub
lret
mov
jns
jmp
push
mov
lret
sbb
jg
mov
ja
lahf
push
and
sbb
lret
cmc
push
cli
lods
stos
push
leave
adc
imul
test
mov
aas
cmpsl
ljmp
xchg
mov
shl
aaa
adc
sbb
enter
add
xorb
test
fldcw
je
jl
pop
scas
dec
mov
cs
or
mov
and
mov
ror
mov
xor
mov
lea
xor
mov
mov
jmp
aad
mov
mov
shll
xor
mov
mov
es
jecxz
inc
gs
dec
jp
aad
add
pop
hlt
pop
fmuls
cmp
loopne
dec
clc
test
ss
mov
pop
shll
int3
je
ja
out
cltd
lret
ret
push
inc
aas
sub
shlb
rcrl
das
fnsave
into
jp
cmp
ret
sub
pop
push
fst
cmpsl
fwait
dec
fists
adc
sahf
addb
adc
jecxz
sti
or
pop
xor
es
jg
xchg
in
into
inc
mov
and
xor
inc
jne
adc
pop
out
push
pop
repnz
mov
mov
arpl
xlat
sub
dec
int
cmc
cmc
sub
mov
cld
inc
or
push
dec
mov
push
pusha
shlb
sarb
or
addr16
mov
add
mov
icebp
sbb
out
dec
jecxz
cmp
mov
pushf
add
xchg
into
pop
movl
jmp
jnp
inc
cmp
pop
and
sbb
fisubs
jecxz
ret
stc
dec
scas
push
dec
fcmovb
or
xchg
into
dec
lcall
mov
ja
pop
shll
cmp
icebp
sbb
inc
mov
mov
stc
data16
das
inc
dec
adc
fldt
and
ret
jle
call
je
xor
shll
cmp
aaa
into
sbb
jecxz
dec
jge
rcl
cli
xchg
nop
mov
and
lret
xor
out
movsb
mov
notb
sti
push
pusha
scas
adc
sbb
out
mov
pop
mov
xchg
jns
sahf
scas
leave
adc
ss
inc
movsb
dec
scas
cmp
ds
addr16
adc
into
push
loop
jmp
cmp
loope
xchg
negb
inc
sbb
mov
xlat
mov
jmp
pop
lock
call
adc
dec
sub
inc
cmc
sub
jae
inc
pop
or
hlt
sub
push
scas
mov
xor
jnp
xlat
clc
or
cmp
dec
xchg
push
mov
repz
pop
data16
frstor
movsb
adcb
xchg
mov
and
dec
adc
pop
dec
test
mov
pop
add
inc
adc
loop
dec
dec
or
adc
es
fwait
ja
xchg
push
adc
push
pop
sti
mulb
jne
sub
rorl
ljmp
scas
repnz
and
sbb
aam
subl
push
popa
aaa
fdivs
ljmp
repnz
or
or
and
pop
jnp
xor
jg
mov
in
lods
push
lret
or
jo
mov
sti
daa
enter
inc
cmpsb
mov
push
gs
or
dec
les
outsb
imul
jno
std
cld
lret
or
stos
xlat
or
stc
mov
push
sahf
into
pop
mov
xor
add
ret
mov
fwait
xlat
in
xor
jp
fwait
xchg
mov
mov
push
cmp
repnz
push
inc
iret
mov
lcall
repnz
push
aad
or
jbe
jmp
inc
inc
jne
movsb
jne
push
out
add
xor
out
cmp
adc
divl
lret
js
fisttpll
int3
and
add
and
imul
mov
sub
mov
and
sub
lea
mov
mov
xor
jmp
mov
xchg
mov
add
addr16
mov
sub
fs
inc
mov
shl
push
sbb
fbld
xor
inc
jne
push
cmp
pop
js
adc
push
pop
add
mov
jmp
mov
shlb
aam
pop
in
and
sub
jne
int3
mov
shrl
repnz
stc
sar
ret
push
pusha
add
pop
enter
cltd
adc
inc
sbb
and
push
mov
fisttpl
inc
push
cmp
inc
add
jnp
push
xorb
cmp
stos
or
shrb
mov
push
sbb
leave
push
pop
popa
jle
pushf
lret
addb
in
pandn
ret
inc
xchg
int3
in
sahf
add
mov
mov
pop
push
mov
aad
in
mov
ror
jb
or
or
in
sub
push
adc
arpl
sbb
test
mov
cmp
dec
mov
xchg
into
sub
xor
into
push
outsb
jp
lods
cmp
inc
and
add
or
imul
cwtl
inc
push
loop
mov
sbb
es
pop
test
and
xchg
lret
fsubs
stc
pop
push
adc
push
xor
inc
or
jne
shrl
or
arpl
int3
test
insb
add
fwait
ss
push
clc
mov
gs
fsubs
fnsave
repnz
mov
xchg
mov
popa
dec
gs
push
fxam
jle
mov
ficoms
lods
push
out
xchg
sahf
in
fistps
lret
jno
sarl
mov
jl
mov
aam
sub
xchg
test
rol
dec
out
sbb
fs
loop
jp
fs
xor
mov
data16
and
dec
and
shl
adc
addr16
mov
mov
push
int
fstp
imul
push
dec
sub
push
push
shrb
and
popf
iret
jp
xor
stc
call
roll
mov
sbb
popa
scas
ret
push
cwtl
inc
push
shrl
std
or
pop
lods
mov
movb
daa
sbb
hlt
in
mov
ss
shlb
leave
call
sti
sbb
lret
sahf
xor
pushf
jp
ljmp
push
orb
repnz
mov
jb
filds
push
jmp
jb
adc
sahf
dec
jb
cmp
inc
xchg
pop
jle
mov
xchg
nop
xchg
aam
push
testl
pop
pop
push
cmp
bound
ljmp
sbb
ds
sub
aaa
mov
fprem1
push
pushf
jno
cld
push
std
lds
add
stc
mov
dec
adc
pop
pop
dec
cli
popf
xchg
fisttpl
cwtl
add
cmp
or
shl
sub
rcl
xchg
fs
data16
sbb
push
or
cmpsb
fisubrl
cwtl
inc
inc
js
stc
pop
int3
xchg
rcrl
add
icebp
repnz
jge
jns
dec
mov
sarb
pop
and
cmp
sbbl
jg
fs
jns
icebp
adc
jbe
mov
lods
add
and
daa
inc
mov
mov
xchg
cltd
jle
xchg
mov
pop
insl
lcall
mov
pushf
adc
imulb
push
or
sub
xor
add
mov
add
mov
mov
push
push
call
mov
mov
and
mov
and
mov
add
adc
mov
add
mov
adc
xor
cmp
jne
cmp
jne
jmp
popf
fldt
mov
xor
rorb
mov
mov
lret
mov
lahf
xor
cmc
mov
mov
mov
xor
shlb
imul
xor
out
cmpsl
aas
fstpl
pop
in
stos
mov
int
andb
insb
bound
andl
fimull
xor
push
dec
sbb
jge
push
cmpsl
leave
je
and
push
and
jg
imul
dec
mov
or
inc
call
test
mov
sbb
cwtl
pop
sbb
xchg
sub
inc
mull
fisubs
mov
enter
test
jle
lcall
aas
cli
inc
xchg
out
mov
data16
popf
xchg
sub
xor
push
lds
clc
popa
insb
std
jle
add
pop
jg
push
push
sbb
push
lea
rcrb
push
mov
xchg
push
mov
sbb
pop
mov
repnz
sti
daa
mov
cs
in
sub
out
inc
mov
or
pop
movsb
adc
inc
push
pop
jns
push
aad
jp
cmp
mov
pop
scas
gs
mov
int3
sbb
clc
test
push
xchg
ret
jmp
dec
rorb
fstpl
mov
outsl
xor
ret
imul
or
fists
outsl
add
imul
and
scas
dec
insb
add
jl
inc
pop
jno
imul
lret
jne
mov
stc
cwtl
mov
fcomip
add
daa
fwait
jle
ja
cs
cmp
add
mov
shlb
repnz
scas
out
shlb
fldenv
mov
cltd
in
adc
mov
repz
adc
push
jl
loope
gs
call
stc
jnp
pop
xor
lods
pop
or
cmp
mov
xor
mov
push
divl
and
or
xchg
sbb
js
push
mov
sub
inc
out
mov
lods
test
pop
pop
enter
adc
and
sbb
pop
xor
add
dec
es
sbb
arpl
push
rep
fisubrl
out
loop
jnp
popa
test
imul
dec
mov
cli
xor
or
jmp
test
lock
xor
pushf
lcall
jbe
pushl
test
out
mov
adc
xorb
mov
cli
shlb
mov
aam
cmpsb
rcrb
imul
inc
int
jg
pop
out
or
mov
mov
lret
aaa
cmp
cwtl
add
pop
inc
mov
push
add
ss
lcall
clc
mov
ljmp
aas
adc
mul
dec
bswap
les
dec
jecxz
cwtl
push
dec
cmpsl
mov
repz
lods
insb
cmp
test
lods
fs
int
pushf
loop
sub
test
faddl
stos
add
dec
sarl
clc
je
and
inc
xchg
mull
popa
jp
or
pushf
addr16
adc
adc
mov
mov
cltd
aad
cld
popa
out
adc
push
inc
mov
xor
mov
mov
sub
mov
sub
mov
xor
div
mov
jmp
addr16
jecxz
ja
mov
inc
jns
lea
iret
add
mov
sub
stc
pop
and
flds
shlb
sbb
mov
dec
pop
js
xlat
and
and
cmpsl
cmpsl
or
loopne
fsubrs
jecxz
adc
in
fcomps
shlb
pop
filds
fidivrl
cli
sub
cmc
lods
adc
or
and
and
jmp
sbb
inc
rorl
dec
jnp
xchg
test
inc
mov
out
dec
mov
inc
xchg
int
int
jmp
mov
add
mov
lods
mov
aaa
cmp
cmc
adc
insl
ljmp
dec
pop
outsl
addb
sub
or
and
shl
rorl
jae
pop
jne
mov
xor
aas
ljmp
test
pusha
addr16
cmpsb
dec
fisttps
incl
ret
hlt
mov
fistpl
pop
add
loop
sti
mov
scas
jmp
push
and
push
jae
adc
rcll
lcall
fldpi
jmp
jp
aaa
and
insb
int
repz
jno
mov
or
cmp
nop
inc
cmp
das
jne
push
cmp
inc
push
ja
inc
add
push
shrl
rcll
adc
adc
sbb
loopne
adc
cmp
mov
push
into
mov
mov
fwait
or
sti
mov
xchg
adc
xor
adc
pushf
loopne
and
xchg
fmull
xchg
leave
cmp
mov
sbb
insl
popa
adcl
add
es
enter
jg
fcmovb
negb
or
cmc
inc
push
inc
aam
inc
dec
arpl
dec
ds
dec
cld
mov
test
jno
inc
pop
mov
test
sbb
idivl
mov
nop
mov
sub
scas
loope
lcall
shll
push
enter
cmp
dec
and
dec
jle
jmp
jnp
lcall
pop
repz
daa
mov
pop
shrb
dec
ljmp
out
lods
stos
or
inc
arpl
pop
out
dec
cmp
inc
stos
nop
jl
rol
rorl
shrb
aas
xor
pop
not
test
cld
xchg
dec
and
rolb
lahf
mov
cs
in
cmp
enter
xchg
push
push
pop
outsb
inc
pusha
imul
add
push
pop
mov
or
and
ja
lds
dec
pop
loop
sahf
mov
sub
movl
cs
dec
mov
iret
mov
outsl
inc
jp
inc
das
imul
daa
shl
js
shl
stc
cmp
insb
in
lods
mov
xor
movzbl
shrb
cltd
mov
stc
mov
stos
shl
rorb
sbb
rcrl
push
xchg
xchg
in
in
fnstenv
adc
out
inc
aas
fistpl
hlt
cmp
sbb
pop
fdivrs
pop
jecxz
ret
xlat
dec
push
nop
mov
pusha
dec
mov
sahf
jge
mov
cwtl
lret
cs
fcmovnb
mov
xor
sbb
in
sbbl
xchg
daa
inc
aas
push
mov
mov
cmp
popf
add
jno
mov
lea
xor
add
mov
pop
pop
leave
ret
push
mov
sub
push
push
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
jmp
fs
insb
int3
jl
gs
adc
cmp
or
mov
pop
and
jo
or
cmp
mov
xchg
push
aad
fnstsw
sbb
jnp
sbb
jns
mov
fdivrs
jae
stc
test
xor
les
imul
inc
mov
mov
mov
pop
xor
cmpsl
addr16
scas
div
fdiv
ficompl
pop
push
dec
fs
dec
je
cmp
test
jne
push
cmp
js
xor
add
std
les
popa
dec
xchg
mov
shl
hlt
xchg
inc
and
aad
add
shlb
test
cmp
iret
divl
jno
or
mov
xchg
or
jne
push
add
jae
addr16
cmp
outsb
add
fiaddl
aam
loope
and
jp
add
or
div
lock
loop
or
xchg
shr
adc
fstpt
push
xchg
addr16
out
clc
in
jp
movsl
loop
inc
aad
rorb
in
xchg
fldl
leave
movsb
das
and
int
pop
pop
jns
into
dec
xchg
es
hlt
mov
adc
cli
mov
jo
pop
popa
and
xor
dec
lods
mov
in
inc
or
into
loope
jle
hlt
or
and
inc
xor
cmpsb
dec
jne
repz
insb
ror
pop
cmp
or
adc
push
jge
int3
inc
jg
mov
xor
push
in
lcall
test
rol
and
pop
leave
repz
push
adcb
lahf
sbb
inc
cmp
faddp
xchg
in
flds
push
mov
pop
imul
popa
loopne
dec
mov
fildll
push
out
out
stos
pop
stos
out
shll
cmpsb
cwtl
ds
pop
jg
subb
movsb
loopne
mov
pop
xchg
xor
dec
movsb
adc
mov
push
inc
and
mov
adc
sbb
adc
add
or
ret
cmp
mov
data16
jl
pop
jae
divl
mov
jnp
in
cli
sbb
or
and
fidivrs
loope
and
ret
imul
mov
push
xchg
push
enter
lods
out
fdivp
push
bnd
xor
mov
sbb
jp
sbbb
pushf
lret
pop
inc
sub
and
pushf
data16
jnp
js
fstl
xchg
cmp
fsub
sti
mov
ret
ss
mov
xor
filds
lods
cmpsb
pop
xchg
dec
push
outsb
jge
xorb
sub
aad
movsb
nop
out
in
or
add
xor
loope
inc
sub
xchg
insb
loopne,pt
jns
roll
js
jle
shll
dec
fld
sbb
std
dec
int3
lret
call
jb
aas
std
dec
mov
sub
cltd
adc
mov
fdivrs
inc
aam
pop
and
test
test
insb
inc
pop
movsl
sub
sub
and
scas
pop
aam
inc
scas
fstl
js
and
cmpsl
vpunpckhqdq
add
icebp
inc
mov
push
xor
and
and
push
push
call
mov
mov
shr
shr
xor
mov
and
mov
xor
and
mov
mov
xor
and
mov
push
push
xor
and
push
push
call
mov
mov
and
and
xor
xor
shld
shl
or
or
xor
xor
mov
mov
mov
mov
mov
sub
mov
sbb
and
and
mov
mov
mov
mov
or
or
add
mov
adc
add
adc
mov
mov
mov
mov
jmp
loop
xor
js
jae
movsb
pop
push
xor
adc
mov
inc
repnz
cmp
sbb
mov
cmp
mov
pop
push
cmp
es
adc
loopne
cli
lds
mov
jbe
xchg
jge
xor
aam
xor
scas
sbb
xor
and
jmp
add
pop
sub
push
inc
int3
or
repnz
addr16
xchg
push
loope
push
andb
pushf
jle
cli
xchg
push
xchg
inc
mull
addr16
mov
lahf
or
fimuls
pop
adc
mov
mov
int3
sub
fdivrl
mov
mov
rorl
arpl
in
mov
xchg
adc
je
mov
add
filds
inc
mov
jl
jle
cmpsb
cmpsb
xchg
nop
and
call
pop
push
xor
test
lret
xor
iret
inc
lret
cmp
imul
jp
cmp
pop
aad
pop
insb
hlt
std
and
push
insl
or
jmp
les
push
push
adc
push
xchg
push
and
mov
pop
dec
or
mov
push
adc
sbb
rcrl
inc
fwait
sahf
icebp
sub
push
aam
decb
cmp
in
inc
sbb
imul
test
insl
mov
mov
pop
inc
or
test
shl
add
outsl
je
sti
bnd
and
pop
popa
sahf
jge
pop
repnz
inc
mov
aad
pop
mov
xor
rorl
jne
and
push
pop
jbe
and
sbb
call
lret
push
cmp
push
int3
pop
sbb
ficoms
xchg
iret
cmp
pushf
add
dec
sub
sbb
mov
mov
mov
lea
jo
int
outsb
int
jo
push
fs
sahf
movsl
cmp
rcl
pop
cmpsl
ds
push
enter
pop
nop
ja
mov
add
xor
lods
outsl
fmul
aaa
jbe
mov
test
xchg
enter
and
xor
xchg
ss
pop
mov
insb
mov
leave
cmpb
outsb
mov
or
jno
lahf
xchg
push
xlat
jbe
repnz
ficomps
add
and
bound
out
icebp
imul
int3
or
in
subb
sub
insb
dec
in
pusha
fwait
cmpb
or
arpl
loop
inc
int3
aam
aam
dec
mov
mov
sbb
mov
xchg
pop
xlat
fistps
xchg
xor
lea
sbb
pop
ss
rorl
and
pop
inc
or
dec
iret
cmp
addr16
adc
pop
push
out
ljmp
cld
inc
iret
lods
hlt
jl
cs
jle
inc
jl
xchg
cmp
cmpsb
xchg
add
sahf
fnsave
mov
ret
fdivrs
or
repnz
and
dec
jno
scas
jbe
dec
mov
push
insl
or
mov
scas
fstp
repz
mov
jno
pusha
movsb
xchg
sbb
stos
mov
ficoml
lea
idiv
sub
cwtl
lds
fsubl
shrl
jns
add
mov
or
mov
inc
and
sti
jbe
mov
mov
cmc
or
pop
add
push
inc
jp
js
jl
popf
pop
insb
cltd
aad
insb
add
xchg
out
insb
cltd
add
cmp
fs
insb
out
cmp
jl
pushf
xor
cmp
mov
and
imul
cmpsb
xchg
ret
gs
in
mov
mov
inc
adc
mov
inc
jmp
or
add
sbb
data16
inc
in
aaa
xchg
adc
fcmovne
out
pop
inc
fs
jl
hlt
arpl
lock
mov
pop
out
in
xor
mov
pop
aaa
push
shrl
fcoms
cmp
mov
mov
xor
jp
pop
aaa
xchg
fidivrs
push
inc
stos
add
fsubrl
or
or
add
fdiv
inc
enter
fists
mov
fs
call
popl
loopne
dec
out
push
out
xor
sub
mov
inc
neg
xchg
das
push
mov
sbb
fisubrl
and
cmp
xor
inc
lods
or
mov
add
lods
or
fdivrs
call
test
mov
arpl
and
mov
jno
hlt
out
push
adc
add
sub
ljmp
pop
or
repz
test
sub
and
pop
add
dec
mov
add
stos
out
test
clc
in
cmpsl
mov
mov
clc
fwait
psraw
jae
and
sbb
pop
mov
jo
out
and
pop
ja
pop
push
lret
call
mov
fs
or
gs
mov
mov
xor
mov
bound
les
decb
enter
dec
ret
cmpsl
scas
mov
fmul
jl
xor
mov
out
add
lcall
movsb
popf
ficomps
mov
fstps
xchg
ficomps
pop
mov
sti
js
out
and
push
mov
push
dec
jmp
cmp
jne
push
inc
xchg
lock
push
call
popa
and
and
xor
out
sub
out
cmp
imul
ret
mov
rcrl
int3
jge
insl
mov
cmp
push
and
ret
cmp
ljmp
cmc
test
cmp
int3
jae
adc
js
sbb
mov
jl
enter
jne
or
inc
lahf
roll
mov
mul
in
pop
fsubs
xchg
adc
inc
imul
ds
in
ds
sub
dec
ss
push
xchg
shl
mov
cltd
xlat
mov
mov
mov
insb
fucomi
jge
cmpsb
mov
test
popa
cmpsb
jno
mov
dec
pusha
out
call
or
insl
lahf
push
pop
push
xchg
test
push
add
jle
inc
pop
js
int3
sahf
and
insl
ljmp
fsub
lret
out
test
es
sahf
xchg
cld
outsl
inc
mov
pop
push
leave
leave
gs
mov
add
dec
sub
popa
loopne
outsb
in
out
out
sub
mov
or
and
cmc
and
std
add
into
cmp
xchg
jb
sub
mov
mov
sub
mov
mov
mov
shl
or
xor
xor
inc
shl
add
adc
jmp
pop
loopne
out
cwtl
cmp
insl
inc
sub
sbb
and
mov
sarb
shlb
jbe
scas
jne
dec
add
roll
and
sbb
push
or
push
xchg
xchg
mov
xchg
rcll
jmp
mov
dec
xlat
mov
mov
inc
call
fildl
popf
cmp
inc
in
lds
pushf
lret
fnstenv
loop
mov
icebp
ss
movsb
ja
or
mov
das
sbb
or
stc
xchg
fwait
pushf
fsub
dec
dec
mov
xchg
cwtl
push
mov
xchg
inc
push
outsb
arpl
dec
iret
mov
pushaw
jnp
pop
dec
int3
mov
sub
lods
aad
pop
pop
orl
sbb
fwait
mov
dec
mov
pop
loope
ljmp
aad
push
dec
sub
lods
or
arpl
int3
inc
imul
sbb
mov
testb
mov
mov
dec
xor
push
gs
add
nop
push
mov
adcl
mov
and
dec
loop
pop
push
xchg
and
xchg
jnp
fcompl
xchg
mov
loop
inc
sbb
aad
out
rcrl
in
aad
fimull
clc
push
loopne
pop
sbb
jns
pushl
push
or
aad
jmp
ja
mov
jle
test
incl
pop
sbb
aas
repnz
lea
pop
adc
andb
add
xlat
jnp
cmpsb
sub
cs
mov
cld
insb
and
mov
jg
repnz
outsl
cltd
sti
ja
xchg
and
aaa
popa
or
pop
and
pop
test
dec
inc
mov
pop
arpl
arpl
pop
iret
aam
xchg
lds
inc
call
insl
jge
cwtl
lds
sahf
pop
mov
or
arpl
shll
mov
lds
mov
addr16
xchg
dec
in
iret
mov
mov
mov
jae
jp
pop
or
ds
push
adc
int
xchg
sbb
hlt
loop
cs
sbb
shrb
xchg
xchg
andl
push
fcomps
movsl
adc
inc
out
into
imul
mov
jne
test
jecxz
pop
push
mov
dec
lahf
decb
push
sbb
jmp
jge
rcll
mov
mov
jg
mov
mov
adc
test
jne
xchg
and
sbbl
in
jo
pusha
test
mov
and
jg
cwtl
cmpsl
ds
sub
mov
ret
and
cmp
mov
push
push
pop
xchg
jle
fnsave
push
or
mov
scas
cmpl
imul
xchg
cmp
adc
push
sub
scas
movsl
inc
jb
je
fisubs
jb
les
inc
jle
scas
insb
push
jge
orb
adc
sub
lcall
hlt
lods
cmp
push
cmp
inc
mov
push
lahf
aad
fs
push
imul
shll
inc
loopne
icebp
mov
mov
mov
and
mov
and
mov
push
xor
add
push
adc
push
push
call
mov
mov
add
adc
or
or
add
adc
add
adc
xor
xor
shrd
or
mov
shr
or
mov
mov
mov
mov
mov
or
or
mov
mov
jmp
mov
mov
jno
addr16
aas
jno
sub
mov
cli
aam
addb
pusha
sub
mov
es
mov
mov
std
cli
jg
xor
add
stos
mov
sbb
shll
pop
aaa
jecxz
cld
pusha
pmullw
aad
xor
mov
jle,pn
sub
push
xchg
std
fnstcw
js
leave
cmc
cmp
inc
lods
mov
xchg
sbb
inc
fcomps
fs
push
lahf
lcall
lea
jg
dec
nop
subl
mov
push
push
loop
sbb
loope
repz
push
adc
mov
push
fstpt
jne
repz
rolb
add
push
dec
and
adc
xor
xlat
and
inc
xchg
adc
mov
mov
add
xor
arpl
arpl
scas
xchg
fwait
xchg
adc
mov
insl
pop
jecxz
mov
stos
fwait
cmc
movsb
pop
mov
insl
push
jne
mov
sbb
cwtl
cmpsl
daa
sbb
xchg
iret
mov
stc
stc
cmp
sbb
jo
das
adc
add
push
aad
lret
dec
inc
jmp
xor
pusha
jle
mov
out
cs
mov
mov
jge
movsl
fwait
leave
pop
in
inc
pushf
enter
mov
xor
xor
xchg
icebp
jno
pop
repz
adc
mov
inc
xorl
add
mov
dec
cmp
cld
inc
aad
js
rcr
mov
or
js
sbb
xchg
pop
push
sets
outsb
pop
mov
pushf
call
xchg
push
sub
push
lds
je
ret
jmp
fnstenv
xchg
ja
aas
cmp
inc
popf
mov
push
inc
sbb
push
int3
in
sbb
popf
pop
in
les
mov
adc
or
add
mov
js
cs
lods
mov
mov
dec
negb
arpl
cltd
leave
dec
adc
mov
insl
sbb
insl
mov
fs
pop
sub
sub
sbb
fwait
xor
jmp
fs
int3
leave
lea
jno
and
and
fwait
aam
cwtl
push
fldcw
decb
xlat
push
fwait
mov
imul
pop
mov
xor
enter
or
lcall
pop
push
jp
xor
mov
xchg
loope
inc
adc
leave
leave
scas
or
or
out
loopne
sbb
dec
xor
sar
and
xchg
test
ljmp
in
xor
push
ret
and
cmpsb
xorb
sbb
ss
jnp
int3
idivb
push
mov
mov
sub
cmp
pop
jg
push
or
push
inc
add
dec
pop
ljmp
rorb
pop
sub
popf
inc
pop
sub
jp
mov
xchg
sub
pop
mov
jp
ficoml
cli
adc
xor
rcr
xor
fcomps
call
sbb
clc
lds
shrb
jo
inc
int
fildl
imul
xor
add
mov
push
push
call
mov
mov
xor
mov
xor
mov
xor
xor
add
mov
adc
pop
mov
mov
pop
pop
leave
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
jmp
es
jecxz
jecxz
cmp
xor
pop
pop
add
jmp
mov
or
fs
nop
sbb
pop
in
aam
push
lods
stos
push
adc
les
xchg
and
hlt
adc
das
shll
stos
dec
cli
lods
inc
outsl
std
dec
push
mov
fstpt
or
lret
ss
dec
add
cmp
je
aam
mov
push
sub
inc
out
cmp
fstpt
std
push
xor
mov
xlat
adc
cld
in
imull
sbb
inc
push
mov
daa
push
cwtl
cli
jb
jae
clc
mov
adc
fcompl
xchg
pop
hlt
cmc
loopne
inc
bound
sub
aad
sbbb
xchg
test
cld
mul
push
inc
xlat
sub
add
adc
js
imul
and
jl
push
inc
cmc
push
push
insb
mov
fiaddl
aaa
mov
es
test
ss
push
movsb
adc
into
rclb
sarb
and
scas
sub
sbb
movsl
sbb
pop
or
cwtl
icebp
xchg
dec
mov
push
popf
enter
push
jp
jne
cmp
out
clc
push
mull
xor
fistl
pusha
pop
inc
pop
mov
xor
jp
mov
fistl
or
repnz
leave
stc
jbe
mov
xchg
pop
sbb
xchg
cmp
sbb
mov
push
dec
scas
aas
ret
sub
fldl2t
faddl
dec
adc
jnp
or
or
sbb
hlt
mov
leave
inc
lcall
lret
gs
or
outsb
cmp
dec
xor
add
lods
sbb
pop
lock
mov
gs
xor
jo
sub
add
inc
sbb
pushf
mov
mov
in
ficompl
in
dec
fists
adc
imul
pushf
xchg
negb
inc
or
pop
cs
adc
je
mov
mov
mov
mov
in
stos
xor
xchg
ja
mov
and
pop
mov
ret
mov
inc
call
movl
movl
jmp
shl
sahf
aad
xchg
mov
test
gs
das
mov
mov
fcomps
cmpl
in
popa
dec
xchg
call
inc
cmp
jle
repz
jb
lea
xor
inc
sbb
and
cmpsb
call
adc
in
scas
dec
jns
pop
push
mov
inc
cltd
jne
or
frstor
pop
sub
mov
scas
mov
push
xchg
lods
dec
nop
adc
fistpll
and
inc
jnp
and
subl
hlt
arpl
or
or
pop
jae
pop
push
and
mov
sbb
daa
mov
jle
cs
lahf
jg
add
dec
xor
repz
sbb
cmpsb
cmp
test
lea
lret
sub
test
dec
sub
mov
mov
sarb
or
imul
cmp
ss
stos
ret
mov
cmp
in
aas
insb
sarb
sub
mov
or
sar
mov
lods
pop
lds
pop
sbb
xchg
loope
test
ds
cmp
xchg
push
jg
data16
leave
adc
fsubrs
cli
cltd
xchg
cmp
out
imul
insl
ds
push
fdivrs
ds
cwtl
repz
adc
addl
aaa
idiv
add
lea
jecxz
sbb
pop
pop
cmpsb
loop
cmp
subl
movsb
fistl
shrb
pop
mov
movsl
mov
mov
lods
sub
mov
repnz
sbb
xor
and
cmp
adc
lods
and
mov
shl
mov
ja
lret
aam
jle
sbb
pop
adc
adc
xor
out
cmp
mov
loopne
xchg
mov
ret
scas
dec
stos
sti
movsb
push
mov
add
pusha
pop
daa
or
in
jmp
mov
mov
dec
aam
or
loop
loope
mov
push
mov
cmp
insb
adc
sbb
jecxz
inc
loopne
add
add
add
xor
div
mov
xor
and
div
mov
or
jmp
arpl
push
cmp
sbb
mov
jbe
into
sti
or
mov
mov
xor
dec
lds
stos
shlb
jns
mov
push
testb
shrl
add
mov
mov
cld
mov
mov
sbb
hlt
cmp
mov
xor
pushf
dec
sub
mov
xchg
xor
cmp
add
adc
mov
mov
test
repnz
jne
fmull
imulb
inc
leave
loopne
sub
mov
push
cmp
pop
mov
mov
mov
mov
jge
or
xchg
jl
dec
and
cld
sub
or
jecxz
shlb
or
xchg
fimull
fwait
test
les
ret
fistps
sbb
rcrl
movsl
jo
jg
cmp
sub
sti
jp
mov
inc
test
movsl
jo
lds
ljmp
dec
fisubl
pop
insb
push
or
js
iret
inc
and
cmpsb
stos
push
adc
lahf
pop
inc
fisubrl
xor
sbb
and
lock
sbb
mov
aad
je
pop
ret
push
dec
clc
mov
fistpll
jecxz
add
dec
and
mov
add
rdpmc
out
test
pop
push
rorb
clc
stos
and
inc
or
push
and
ret
jo
sbb
lock
scas
dec
adc
mov
push
or
idivl
ret
jmp
push
mov
xchg
shrl
inc
xchg
enter
rorl
mov
imull
fsubrs
add
cld
test
or
sbb
into
or
sbb
mov
repnz
int3
xor
push
dec
mov
outsb
xchg
inc
scas
push
imul
cmpb
push
sub
push
aam
out
lock
scas
sub
lods
xchg
in
loopne
inc
aad
mov
mov
int3
out
test
in
cmp
iret
daa
cwtl
mov
ret
mov
mov
xor
add
mov
and
sub
mov
imul
mov
sub
cmp
jne
mov
jmp
cmpb
push
inc
mov
add
jmp
mov
adc
call
pop
adc
inc
jecxz
sahf
inc
int
orb
jmp
fdiv
lods
mov
xor
xchg
inc
in
sub
negb
es
cmp
mov
out
mov
cmp
mov
dec
cs
test
xlat
repz
mov
mov
push
mov
add
jno
pop
xchg
dec
sbb
arpl
pop
or
lds
xor
sbb
push
cmpl
mov
pop
loop
test
mov
out
sub
and
push
shrd
js
mov
cmpsw
das
xor
loop
adc
lahf
or
dec
mov
movsb
out
push
cmovp
jne
ret
mov
outsl
test
movsl
sub
test
pop
or
std
test
lret
ljmp
xchg
pop
mov
dec
test
push
stos
adc
or
lds
pusha
in
clc
mov
sbb
out
int
aam
outsl
stc
dec
and
or
inc
cltd
aad
dec
cld
jbe
mov
dec
sub
push
push
push
inc
and
jae
cmp
inc
inc
mov
mov
cmp
movsl
push
pop
lock
add
shrl
sbb
xor
out
sub
jecxz
adc
xchg
dec
adc
movsb
negl
xor
xor
stc
pop
ljmp
jp
popa
in
rclb
jecxz
add
fmull
fistpl
stc
into
test
dec
cli
cli
std
clc
ficoml
dec
push
and
data16
mov
daa
addr16
xchg
cli
pushf
mov
push
jmp
mov
sub
movsl
aam
divl
int3
inc
andb
int
nop
push
adc
out
es
push
push
out
adc
sbb
add
jp
inc
outsl
jbe
lcall
jne
xchg
bnd
mov
pusha
rorb
add
add
es
fnstcw
cmp
mov
mov
mov
decl
cmpsb
inc
inc
jo
push
scas
xor
mov
insl
xchg
lahf
ss
fdivrl
pop
dec
cmp
pop
sub
pop
pushf
push
je
or
into
nop
les
adc
jg
mov
cmpsb
nop
sub
repz
rorb
fwait
mov
je
pop
push
mov
fucom
add
gs
pop
pop
sbb
add
push
std
movsb
int3
jmp
sbb
mov
jmp
push
lds
iret
ja
mov
std
icebp
or
inc
push
das
jmp
imul
jbe
adc
xchg
je
push
cmp
cmpl
sbbl
std
pop
push
add
mov
ds
fldl
mov
sbb
adc
dec
rcrb
test
and
aaa
imul
fldenv
adc
stc
rcll
push
or
jmp
add
hlt
xchg
popf
inc
cmp
or
mov
jne
mov
aaa
mov
lods
adc
outsl
dec
push
je
mov
bound
outsl
lret
imul
fisubl
inc
pop
mov
test
add
lret
inc
mov
hlt
insl
sub
adc
mov
push
add
arpl
jmp
inc
std
fninit
rolb
leave
test
xchg
push
daa
xor
xor
nop
repnz
xchg
mov
push
dec
std
xor
inc
outsl
adc
add
insl
add
mov
add
push
pushf
push
dec
sub
inc
add
sbb
xchg
pop
mov
pop
sbb
xor
mov
inc
fsubs
mov
movsl
loopne
adc
sbb
sbb
lret
lods
in
or
or
cld
pop
push
icebp
orl
mov
fs
call
insl
sub
inc
hlt
or
mov
mov
imul
push
jmp
dec
lcall
cmp
xchg
outsl
test
mov
mov
add
movl
mov
icebp
aad
push
xor
pushf
ss
mov
push
test
imulb
int3
fiadds
nop
xchg
lods
adc
fstl
inc
imul
fdivrl
fisubrs
scas
std
jmp
pop
aad
fistps
aaa
jecxz
xor
jmp
adcb
cltd
xor
push
test
pop
adc
popf
enter
cwtl
push
xor
adc
flds
sbb
sub
xor
cmp
xchg
insl
repz
gs
xchg
out
cld
testb
xchg
pop
frstor
sub
data16
arpl
mov
xchg
sub
push
xchg
outsl
das
jmp
pop
sahf
dec
icebp
add
incb
lcall
es
mov
pushf
movsb
adc
push
mov
jg
stc
outsb
imul
pop
in
inc
icebp
mov
cltd
dec
mov
ds
add
out
orb
icebp
cs
xchg
aaa
stos
in
iret
shlb
push
cmp
ret
sub
cwtl
sub
mov
push
or
movsl
cmp
ljmp
xchg
in
sbb
xchg
imul
nop
jmp
mov
inc
bound
jno
adc
inc
test
mov
scas
xchg
gs
lods
test
rorb
fildll
mov
hlt
or
mov
pop
dec
mov
lcall
cmp
ja
sarl
dec
inc
fcom
jns
mov
inc
clc
mov
add
bound
adc
xchg
fwait
lret
mov
arpl
outsl
sbb
sti
lods
imul
test
stos
std
pushf
jmp
rcrl
dec
sub
jmp
aad
pop
pop
repnz
or
out
jmp
mov
scas
repz
and
mov
fildl
sbb
lea
jne
and
mov
or
mov
imul
mov
and
and
mov
shl
mov
jmp
fstps
lods
mov
repz
scas
jns
leave
dec
mov
mov
adc
out
dec
cld
and
pushf
xchg
or
pop
dec
add
sbb
or
dec
mov
aas
pop
fbstp
mov
jns
xchg
sbb
mov
sub
sub
mov
test
dec
push
sub
pop
add
xchg
decb
jns
in
mov
rorb
lcall
mov
in
jle
fisttpll
push
sub
cltd
shrb
cmpl
jp
hlt
sahf
mov
fidivs
dec
and
add
jp
dec
test
mov
and
sbb
fsts
mov
cwtl
jp
dec
jg
aaa
outsb
sti
add
mov
mov
push
cmp
inc
inc
push
sub
imul
mov
pop
into
adc
cmp
jg
repnz
push
dec
sbbl
push
sbb
inc
lcall
aaa
mov
test
push
int
ret
or
xchg
and
mov
rcll
dec
in
inc
mov
imul
sbb
mov
rolb
popf
xchg
xor
fsubs
and
xchg
jle
mov
jp
iret
mov
je
pop
adc
sbb
movl
mov
dec
aam
xlat
adc
loopne
lock
mov
js
pop
ljmp
dec
sbb
icebp
ljmp
jle
lods
out
adc
jne
scas
xchg
outsb
xchg
push
insb
sbb
jne
cli
pop
or
and
faddp
es
das
xchg
xchg
call
add
inc
push
jnp
push
jge,pn
lock
adc
push
inc
mov
int
lods
pop
aam
repnz
lock
sub
cmp
loopne
adc
xchg
repnz
cmp
push
xor
sub
push
loope
sarb
out
mov
jmp
loop
sbb
mov
inc
clc
dec
mov
mov
shll
mov
add
mov
ljmp
rcl
std
dec
je
cmp
push
push
add
sub
sti
adc
dec
add
mov
or
outsl
mov
cmp
daa
adc
jb
mov
iret
addl
icebp
gs
movsb
or
xchg
out
out
movsb
imul
fldenv
ja
in
dec
sub
xchg
out
xor
je
arpl
push
sub
lods
scas
dec
jp
data16
adc
add
mov
push
cmp
les
inc
sub
xor
lcall
orb
mov
scas
mov
repz
sub
test
jp
pop
cmpsb
mov
dec
pop
test
cld
cltd
lock
dec
jl
fiaddl
stos
dec
adc
leave
jl
sub
fwait
jmp
je
int3
stos
arpl
idivl
movsb
lea
das
or
test
xchg
jmp
mov
cmp
dec
out
xchg
push
repnz
xor
mov
sbb
fistl
mov
add
les
jno
lcall
sub
cmp
inc
mov
out
fptan
cmp
pop
mov
dec
dec
fldenv
adc
test
add
sub
aaa
adc
pop
push
cmp
xchg
jae
mov
mov
cmp
out
xchg
and
mov
push
mov
out
and
in
dec
test
in
sti
repz
pop
xor
scas
jo
mov
test
aaa
dec
int3
or
push
lret
add
in
inc
or
into
and
inc
inc
cld
jp
stos
and
loope
scas
adc
jmp
je
inc
repz
int3
push
fisubl
or
ljmp
loop
sbb
imul
out
sbb
test
push
aad
cmp
cmpsl
test
mov
lea
add
mov
mov
mov
or
mov
or
xor
and
mov
add
pop
cmp
je
mov
jmp
mov
mov
sub
mov
sub
mov
or
mov
and
mov
sub
add
jmp
movl
movl
movl
mov
mov
xor
add
mov
jmp
inc
xor
mov
mov
xor
jns
xor
cmp
push
mov
mov
mov
mov
mov
lods
jmp
and
sbb
dec
call
xchg
xchg
loope
and
jg
and
pushf
pop
sbb
cld
scas
es
mov
fisubrl
nop
and
inc
xlat
jmp
jo
or
mov
push
add
cs
lcall
adc
push
lahf
rorb
adc
sti
adc
roll
cltd
bound
push
xchg
in
mov
xor
sbb
inc
lock
or
fstps
jae
xchg
sub
and
enter
pop
dec
inc
imul
pop
insl
pop
repz
pop
mov
jno
orl
fidivl
ljmp
sarl
loop
push
inc
pop
or
push
push
push
xchg
pop
int3
sbb
sbb
call
sub
scas
mov
xchg
dec
and
ljmp
add
int3
cmp
leave
adc
adc
xchg
jge
sbb
icebp
dec
rclb
in
cltd
cmp
loopne
jnp
fsave
notl
addr16
add
mov
cltd
and
lret
es
loop
jecxz
ss
jle
movsl
cmp
test
cld
mov
xor
pop
hlt
fsubrl
shl
sub
out
addl
xchg
push
mov
mov
loop
mul
xor
pop
pop
mov
sub
popf
cwtl
je
aas
mov
mov
mov
cmovns
cmp
shl
testb
test
loope
add
mov
or
push
or
sarb
xor
sub
stc
mov
les
mov
inc
fistpll
outsb
push
dec
rcll
aam
adc
call
testb
popf
cld
jmp
sub
cwtl
xor
sub
leave
ret
push
mov
and
sub
push
push
lea
mov
mov
mov
mov
sub
sbb
mov
orl
orl
lea
jmp
dec
lahf
and
xor
xchg
outsl
pop
xchg
cmpsl
outsl
pop
push
mov
mov
add
fmulp
lea
xlat
imul
call
mov
cmp
and
xchg
push
enter
push
push
jp
push
and
insb
pop
sarb
xchg
adc
das
fbld
sub
sti
dec
inc
jle
mov
sbb
inc
cs
mov
inc
lds
pop
enter
jl
lret
inc
loop
lock
inc
pop
sub
xor
inc
and
ret
adc
clc
gs
das
push
push
xor
cmp
adc
push
adc
fadds
shl
mov
insb
out
lods
in
out
call
lret
daa
arpl
pop
test
inc
mov
call
xchg
imul
jb
push
cmpsw
xor
dec
repz
xchg
xchg
stc
call
orb
xlat
aaa
mov
jno
sahf
push
inc
pop
mov
divb
int
je
ja
js
and
out
ret
pop
push
ljmp
pop
push
or
or
dec
in
sub
mov
adc
xchg
sbb
add
mov
inc
push
aas
add
test
lods
jo
mov
call
dec
popf
int3
mov
shll
cld
cmp
lea
shlb
xor
and
out
or
jno
mov
imul
js
dec
or
lods
in
dec
dec
pop
repnz
pop
int
cmp
dec
imul
inc
adc
fnstcw
jne
fwait
inc
push
cmp
notb
and
int3
lds
mov
push
outsl
enter
lods
mov
mov
gs
cmp
xlat
jnp
repz
ljmp
fdivrp
pusha
or
pop
or
mov
inc
lret
jnp
aas
mov
add
and
xchg
jg
cmp
test
es
imul
xchg
dec
call
mov
inc
mov
imul
cwtl
flds
sub
sub
push
roll
insl
test
lahf
jb
cmp
jmp
sub
dec
inc
jle
xchg
popl
out
dec
into
icebp
cmp
mov
mov
push
push
jl
mov
jmp
mov
jp
mov
xchg
and
sti
aaa
das
insb
mov
cltd
popa
inc
dec
add
mov
xor
cmp
push
dec
adc
adc
mov
addl
mov
sub
inc
or
jmp
xchg
adc
mov
mov
inc
das
adc
rcr
movsl
testl
fstps
out
iret
mov
mov
mov
lcall
inc
into
sarb
data16
cmp
mov
or
mov
mov
mov
cmp
sub
aas
mov
and
cmp
cmpsl
insl
push
cli
push
sbb
dec
lods
jle
push
iret
inc
inc
mov
pop
pcmpgtd
idivb
cld
or
push
imull
jnp
js
adcl
testl
in
and
add
jne
jl
add
xchg
add
hlt
cs
mov
sub
push
add
add
xor
rorb
mov
pop
in
mov
aaa
xor
inc
andb
and
mov
sub
sarb
jb
push
jg
es
push
jg
mov
push
ljmp
pop
jae
push
lea
push
call
mov
mov
pushl
mov
pushl
mov
pushl
pushl
pushl
pushl
pushl
call
pop
pop
mov
pop
ret
push
mov
sub
push
push
push
movl
movl
movl
jmp
cli
mov
inc
jge
and
je
sbb
icebp
std
das
fwait
push
mov
mov
lods
inc
imul
leave
mov
push
lahf
sbb
int
xor
imul
sub
adc
pusha
bound
pop
add
lcall
fistpll
sub
cmp
sbb
sbb
cmp
std
push
ss
test
or
dec
fwait
cli
dec
into
ja
pop
mov
call
scas
jecxz
push
cltd
fwait
mov
jmp
or
push
xchg
sbb
aaa
cmpsb
push
js
int
rcr
push
sub
sbb
daa
mov
test
or
lods
sbb
jns
and
sbb
dec
adc
mov
nop
xchg
mov
ret
adc
cmp
pop
ret
push
fcoms
aaa
adc
adc
out
inc
and
push
cmp
xor
mov
push
aas
ja
test
cwtl
int
lahf
xor
dec
pop
cmp
or
sub
mov
cmp
cmp
ficompl
add
aad
and
in
popf
jbe
test
repnz
ja
jb
mov
mov
stos
jle
mov
add
jae
push
push
out
lahf
notb
lock
inc
and
mov
push
mov
incb
sbb
les
cmpsl
and
mov
mov
hlt
fmul
dec
dec
pop
mov
pop
fstpt
aam
sub
je
mov
mov
aaa
jnp
dec
sub
test
repz
add
dec
dec
sar
nop
mov
ret
ss
sbb
fcomip
adc
scas
insl
sub
add
dec
aas
jmp
sub
dec
es
inc
test
push
adc
sbb
xchg
idivl
and
addl
mov
mov
pop
xor
mov
inc
ret
shrl
add
pushf
inc
lods
mov
mov
iret
adc
cld
fchs
cmp
loop
and
shll
pop
mov
jbe
sbb
js
mov
movsb
les
pushf
inc
inc
cmp
sub
sub
jecxz
xchg
pop
mov
clc
push
pop
stos
jmp
mov
ss
push
in
or
adc
pop
ljmp
shll
lret
mov
push
and
lret
push
jecxz
push
mov
pop
sbb
shll
fs
and
adc
cmp
jnp
rcll
push
add
add
adc
xor
ss
add
inc
lock
jno
add
inc
in
pop
add
movl
mov
mov
or
sub
or
sub
mov
imul
sub
mov
mov
xor
xor
or
mov
div
mov
xor
push
pop
mov
mov
sub
mov
div
mov
mov
mov
or
sub
or
mov
sub
mov
sub
sub
cmp
ja
mov
mov
add
and
mov
add
mov
sub
mov
sub
mov
mov
mov
jmp
mov
mov
outsl
jno
sbb
cmp
mov
mov
sbb
mov
add
test
jl
test
xchg
pop
out
incl
lock
dec
leave
sbb
sub
xchg
int
ficompl
test
mov
out
mov
pop
mov
lret
enter
jmp
into
mov
lds
sub
fwait
lret
mov
push
push
xor
das
ret
out
enter
ficoml
mov
mov
push
mov
sbb
pusha
in
mov
pop
ljmp
pop
mov
and
inc
jo
ljmp
cvtpi2ps
and
imull
fs
sti
jmp
push
jns
dec
lcall
jb
xor
mov
shrl
cmp
mov
lret
in
sbb
lea
pop
and
cmp
mov
shlb
mov
es
adc
cmpsl
das
addl
dec
fbstp
adc
inc
add
inc
test
and
push
push
mov
mov
or
mov
xor
adc
repz
iret
mov
repnz
das
outsl
and
pop
std
jne
lret
jo
cmp
pop
mov
nop
and
loope
or
dec
in
adc
je
repz
sbb
fcomps
mov
int3
shll
rolb
mov
push
cld
mov
ds
outsl
cmp
dec
int3
pop
mov
dec
out
enter
jl
jge
jns
sbb
jecxz
jl
adc
arpl
and
fidivl
fildll
xchg
mull
jmp
out
fdiv
shll
push
cmp
mov
stos
lds
sub
leave
loope
jns
gs
mov
and
dec
aad
les
sbb
or
inc
mov
jmp
ds
mov
jae,pt
popa
mov
out
call
jno
enter
cmp
sub
jl
cltd
cmpsl
mov
or
shrl
lret
std
xor
js
icebp
pop
lcall
jae
jp
aad
adc
jmp
fwait
push
stos
movsb
xchg
sub
sbb
leave
dec
pop
sbb
xlat
mov
push
fidivrl
xchg
adc
shrb
mov
add
pop
andl
addr16
sub
addr16
std
outsb
lds
mov
mov
lock
push
pusha
jg
notb
dec
mov
sub
adc
adc
and
jne
int
xor
mov
jmp
repnz
mov
ja
add
cmp
mov
push
pop
cmp
pop
xchg
mov
pushf
xchg
ss
adc
dec
inc
or
add
das
aam
push
aam
lds
fdivrp
cmp
aad
call
imul
loope
xor
sbb
mov
ds
daa
mov
lret
movsl
mov
lahf
cld
sub
jmp
push
arpl
jle
pop
arpl
push
cmp
aad
dec
add
jg
imul
out
int3
sbb
push
ds
not
lcall
inc
iret
xchg
std
loope
sbb
or
push
lods
mov
inc
push
xchg
outsl
hlt
pop
out
add
mov
mov
push
test
js
notb
ret
pop
pop
xchg
inc
fs
pop
jnp
and
shlb
xchg
xchg
fisubs
mov
mov
xchg
pop
mov
ror
insl
aas
iret
jge
imul
jp
jnp
dec
mov
mov
xchg
adc
mov
divb
add
int
jne
mov
and
testb
daa
leave
push
imul
cmc
jae
dec
jbe
out
imul
clc
addr16
cmp
cmp
cmpsl
or
push
jbe
cmc
push
lds
ljmp
popf
sub
stos
ja
ljmp
cmp
push
out
mov
mov
jnp
jne
xchg
bound
mov
mov
sbb
dec
pop
adc
xchg
push
lods
xadd
push
shrb
dec
push
xor
xchg
lahf
aas
push
out
es
repz
hlt
jne
jns
lret
push
add
mov
cmp
dec
roll
ja
mov
rcrl
int3
inc
subb
xor
addl
das
jne
push
repnz
cmp
inc
mov
scas
sub
adc
repz
rcll
movsl
jb
movsb
jae
cmc
cmp
push
and
popf
inc
mov
jae
clc
xchg
jne
or
inc
sbb
xchg
push
jecxz
push
xchg
or
rcll
dec
inc
inc
mov
mov
dec
lea
and
and
addr16
hlt
lods
test
mov
mov
push
xchg
pop
add
loop
popa
and
ljmp
cmpsb
mov
neg
stos
inc
orl
inc
into
mov
in
cmp
xchg
vunpckhps
stos
push
dec
adc
jmp
fisubrs
into
imul
xchg
mov
int
lods
dec
stos
out
xchg
imul
pop
out
bound
rorl
sub
add
arpl
flds
popf
push
aaa
mov
add
inc
test
scas
shll
mov
div
jmp
ljmp
mov
adc
enter
int3
insl
mov
mov
dec
and
xchg
shld
imul
or
adc
inc
in
pop
fldl
arpl
jae
xor
mov
mov
pop
and
js
cmp
sub
fwait
pusha
sbb
mov
std
dec
scas
push
jo
cmp
lret
xchg
test
arpl
mov
push
push
mov
loope
mov
xor
and
or
pop
sbb
loope
sbb
sbb
incl
lods
fs
sbb
adc
iret
es
test
or
repz
insb
inc
sbb
test
inc
xorl
jb
mov
mov
xor
cmp
push
int3
fs
daa
arpl
in
aam
dec
or
inc
loopne
and
inc
cltd
inc
xor
xor
pop
stos
std
or
aas
jb
mov
mov
movsl
loopne
mov
lds
mov
nopl
ret
jmp
push
and
pop
mov
mov
sub
mov
or
mov
sbb
out
lahf
mov
popf
dec
pusha
mov
or
push
sti
push
mov
or
imul
sbb
enter
pop
pop
out
and
stos
daa
sub
cmpsl
sbb
adc
or
fmuls
faddl
fisubrl
add
adc
mov
cmp
jb
xchg
and
aad
xchg
xor
rol
ljmp
pop
aam
in
pop
sub
in
xor
jmp
push
or
popf
mov
bound
pop
inc
clc
pop
push
sub
ret
push
sub
push
push
outsl
push
cmpl
inc
fnsave
xor
aas
xor
jge
das
scas
enter
ja
mov
in
ja
pushf
mov
mov
jle
add
shll
in
dec
in
enter
nop
shlb
and
movsl
faddl
inc
dec
jle
dec
sbb
sar
daa
pop
cmpsb
adc
jle
out
fiaddl
repz
xchg
shl
fmull
ret
je
xchg
into
repnz
mov
pushf
in
sti
mov
addr16
sbb
arpl
icebp
pop
jae
sub
aam
xor
mov
jge
stos
ret
inc
or
jo
adc
cld
lock
ret
pop
xchg
ret
sub
add
or
mov
sbbl
cld
imul
es
ljmp
xchg
movsb
dec
inc
sub
call
std
add
cmp
or
or
enter
pushf
mov
push
std
daa
pushf
aaa
jnp
mov
mov
imul
xor
xor
push
add
mov
or
mov
div
mov
xor
sub
mov
mov
pop
div
mov
mov
or
sub
or
mov
sub
mov
jmp
adc
inc
xorl
imul
ret
outsl
mov
mov
push
scas
ret
cltd
shll
xor
aam
mov
cmp
js
mov
ret
push
fdivs
adc
mov
push
jecxz
xchg
hlt
adc
xchg
mov
dec
lock
xchg
addr16
imul
sub
or
xchg
sbb
pop
mov
adc
xchg
push
and
sbb
imul
xorl
dec
shrb
mov
lret
push
popf
in
mov
loop
jbe
lret
push
pop
mov
jmp
test
lcall
repnz
mov
inc
pop
mov
and
insb
mov
pop
jne
add
inc
or
jp
js
or
cmpsb
xor
inc
aam
jg
cmp
gs
popa
adc
enter
jno
jecxz
stos
sar
xor
mov
fcomps
cmp
addl
and
jg
mov
scas
push
push
xchg
xchg
addr16
cmp
popf
pop
pusha
sbb
mov
cmp
fdivp
cmp
mov
add
or
sbb
mov
enter
push
mov
std
mov
pop
ret
push
fcomps
add
pushf
pop
out
into
pop
adc
movsb
mov
adc
jmp
call
jo
mov
arpl
ja
mov
iret
mov
xchg
push
xchg
adc
pop
push
xor
test
out
jns
imul
aas
das
jecxz
nop
data16
out
and
test
jae
dec
daa
or
xor
lahf
inc
mov
dec
in
pop
adc
insl
testb
lea
pop
and
int3
jnp
movsl
pop
sub
fisttps
xchg
cli
daa
jg
mov
js
hlt
adc
stc
mov
add
jg
mov
mov
dec
mov
mov
or
sbb
lods
mov
scas
push
movsl
push
adc
repnz
adc
aaa
fwait
iret
push
movsl
xchg
aad
fs
pop
mov
insl
arpl
or
mov
pop
cmp
mov
lock
in
mov
aad
loope
insb
dec
push
inc
sub
cmpsb
mov
insl
sbb
adc
or
divb
enter
inc
lret
sahf
movsb
or
sub
in
pop
out
or
ljmp
scas
pop
sub
and
mov
xor
addr16
movsl
adc
jns
enter
push
scas
xchg
imul
testl
pop
jo
fsubs
in
out
es
mov
shr
add
add
out
jae
jae
xchg
aaa
xor
imul
stc
das
inc
jns
mov
jecxz
mov
pop
sbb
shrb
adc
mov
inc
jecxz
mov
roll
xor
jp
cmp
je
xor
fistpll
pop
dec
es
cltd
hlt
jmp
cmp
out
fidivs
cmp
iret
mov
ja
jns
push
mov
mov
lods
fistpll
cld
in
jne
sbb
mov
adc
pop
jo
cltd
mov
popf
enter
mov
mov
dec
loopne
inc
outsb
or
add
ss
into
dec
mov
je
mov
jecxz
sbb
imulb
cmc
jecxz
and
lea
divl
jl
add
dec
pop
xor
aaa
jge
imul
xchg
xchg
int
mov
xchg
and
jg
pop
out
adc
es
push
add
mov
cltd
push
xor
stos
and
or
dec
popf
push
nop
test
popf
cwtl
mov
into
adc
lods
enter
adc
jl
inc
mov
or
pop
int
pushf
xor
inc
xchg
stc
ljmp
and
adc
jmp
jbe
inc
jmp
pop
lret
xchg
cmp
pop
xor
sbb
sbb
push
push
mov
rcr
test
ljmp
loope
mov
aad
cmp
sar
dec
aam
mov
mov
popf
enter
pop
aas
cmp
dec
arpl
jo
jge
repnz
rol
stos
sub
lcall
dec
mov
lret
in
push
mov
sahf
hlt
insl
push
mov
xchg
fsubs
pusha
roll
push
movsl
ret
or
ret
xlat
pushf
aas
fcompl
inc
push
setnp
mov
outsb
je
mov
cld
ret
mov
leave
in
icebp
loop
sti
inc
push
ljmp
cmpsl
sahf
inc
push
sbb
pop
cltd
insl
cmp
cmp
mov
clc
scas
fwait
xchg
dec
movsl
jp
nop
jno
and
lods
add
aaa
add
mov
adc
repz
inc
rcrl
rclb
and
add
sbbb
xor
inc
clc
or
dec
out
push
jbe
adc
in
cli
xchg
fwait
imul
adc
adc
push
or
movsl
ret
addr16
test
xor
insl
roll
and
leave
pop
cwtl
filds
out
mov
inc
int3
rcrb
push
mov
mov
cmp
add
xor
lret
dec
mov
xor
xor
mov
inc
loop
cmc
jo
leave
jl
sar
into
shl
pop
mov
es
cmp
jmp
out
cmp
ficompl
push
mov
sti
idivb
mov
jae
pop
or
cmpsb
popf
jp
hlt
jno
cmp
fsubr
mov
iret
adc
clc
fbstp
mov
ja
push
lds
sub
insl
jle
in
cmp
fisttpl
and
mov
push
nop
sub
xchg
sbb
fstl
nop
ss
scas
push
and
out
outsb
sub
data16
or
pop
movsb
scas
push
push
popa
stc
mov
sti
pop
data16
mov
fldenv
mov
pop
jl
add
dec
jmp
js
syscall
stos
mov
sarl
roll
mov
mov
jae
das
or
inc
in
daa
pusha
push
adc
mov
mov
push
js
rcl
movsb
or
add
xchg
mov
jb
popf
test
pop
cmp
mov
repz
or
mov
pop
mov
arpl
cmp
sbb
jbe
fisubrl
pusha
xchg
push
sbb
inc
inc
in
jns
lret
loope
pusha
enter
ljmp
xchg
add
aad
and
jne
repnz
in
insb
fidivl
or
inc
test
int
out
dec
inc
js
jns
popf
int3
jmp
jbe
lea
adc
popf
es
xchg
xchg
inc
pop
clc
cmpsb
jne
mov
int
xchg
pop
divl
jne
or
push
dec
dec
lods
out
pop
xchg
lahf
jl
jns
mov
add
sub
mov
jne
outsb
dec
xor
adc
sbbl
push
sub
or
in
fmuls
sbb
cmp
adcb
outsb
imul
fldcw
int3
cmpsl
add
sbb
sbb
inc
cmc
movl
cmpsb
addr16
hlt
xlat
fmuls
mov
jno
xchg
push
cmp
movd
pop
cmpsb
out
cwtl
aas
jnp
faddl
lods
out
mov
in
adcl
push
fidivrl
mov
sbb
subb
out
mov
cmp
xchg
scas
std
in
add
pop
push
mov
adcl
push
mov
cmp
xchg
mov
xchg
popf
loopne
int3
stos
push
or
xchg
xor
cs
push
mov
popf
cs
and
roll
xchg
imul
mov
xchg
pop
xchg
stc
out
sub
fs
dec
gs
aad
das
and
push
lret
call
popa
fnstcw
divb
rolb
mulb
mov
lcall
dec
adc
inc
and
inc
xlat
fsubrs
movntq
es
jge
cmc
lret
nop
into
sbb
lcall
pop
leave
ret
push
mov
sub
push
push
push
mov
and
mov
and
shrd
shr
andl
mov
or
mov
neg
xor
cmpl
movl
mov
movzwl
mov
jmp
mov
mov
cmpl
jg
pushl
pushl
pushl
pushl
call
or
xor
mov
sbb
mov
xor
mov
xor
or
sbb
mov
mov
jmp
lods
cmp
xchg
dec
mov
popf
outsl
jne
pop
inc
mov
mov
mov
cmp
xchg
mov
cmp
xor
mov
or
std
and
clc
sbb
cmp
and
js
mov
fsubrl
mov
iret
add
jo
add
jno
mov
push
cmp
and
in
sbb
jmp
sahf
mov
lods
or
push
cmc
shrl
scas
bound
add
cmp
clc
push
ror
loope
dec
mov
mov
cli
repz
int3
pop
mov
cld
or
movsl
adc
addr16
xlat
movsb
and
stos
popf
cmpsl
jnp
adc
rclb
mov
js
daa
cmp
insl
loop
cmp
mov
popf
xor
psubusb
aam
pusha
fs
jg
and
loope
xchg
clc
mov
leave
sub
mov
fimuls
sub
or
inc
cmc
sbb
sahf
addr16
jl
pop
ret
mov
or
lds
in
or
xchg
fdivr
iret
mov
cwtl
mov
push
xchg
mov
repz
and
mov
aad
adc
push
jl
cmp
test
add
pop
mov
ss
pop
mov
insl
test
push
or
jmp
popl
sub
sub
add
pop
push
jo,pn
stc
xchg
andl
mov
xor
daa
imul
jbe
inc
adc
adc
lea
mov
mov
pop
inc
ljmp
xchg
arpl
mov
xchg
loopne
adc
cmp
outsb
xor
mov
xchg
movsl
out
fst
sub
cmc
xchg
out
or
aam
sbb
es
call
in
sahf
fldenv
mov
cmp
inc
pusha
ret
ds
dec
pop
sbb
mov
mov
out
cmp
arpl
stos
cmp
jbe
daa
or
nop
ss
jle
jno
mov
imul
out
gs
mov
inc
inc
repnz
adc
mov
movsb
sub
jno
rcrb
aad
icebp
shll
std
lea
dec
inc
subb
sbb
xorb
push
icebp
and
jno
cli
sarl
xor
xor
sbb
sbb
das
outsb
js
cmc
jl
shll
xchg
mov
dec
ret
jmp
mov
ret
les
jl
inc
cmp
hlt
dec
cmp
imul
fcomps
aad
pop
in
lock
jecxz
les
cmp
cmp
adc
addr16
push
inc
xchg
sbb
dec
mov
mov
pop
imul
aas
lcall
or
leave
jmp
add
inc
aad
je
jle
jbe
decl
negl
inc
mov
sbb
das
cmpl
xor
cmp
dec
add
xchg
xorb
xchg
gs
jecxz
scas
mov
imul
cmpsb
or
in
mov
add
xchg
lahf
stos
in
leave
mov
xchg
cs
dec
or
lods
enter
or
shr
and
mov
mov
xor
mov
xor
add
sub
xor
or
add
mov
mov
mov
sbb
mov
mov
add
mov
mov
xorl
mov
adc
mov
and
mov
mov
adc
shl
xor
addl
shld
mov
adc
shl
mov
mov
sub
or
mov
neg
mov
mov
cmpl
mov
mov
jmp
mov
mov
cmpl
jg
push
push
push
call
mov
add
mov
neg
sbb
adcl
xor
add
mov
orl
xor
notl
xor
movl
movl
movl
mov
movl
cmp
jne
movl
cmp
movl
je
cmpl
movl
movl
mov
jmp
movl
movl
cmpl
jg
push
call
subl
sub
xorl
addl
subl
mov
cmpl
mov
mov
movl
jmp
movl
cmpl
jne
pushl
call
subl
movl
sub
adcl
adcl
sub
mov
addl
xor
subl
shld
shl
xor
cmpl
mov
mov
jmp
movl
movl
cmpl
jbe
push
call
sub
and
movzwl
add
dec
and
xor
mov
add
or
mov
xor
mov
mov
movl
cmp
movl
jne
movl
cmp
je
cmpl
mov
movl
mov
jmp
mov
mov
cmpl
je
pushl
pushl
pushl
pushl
call
sbb
inc
sub
and
mov
mov
movzwl
add
push
notl
jmp
xor
je
mov
inc
jno
xor
mov
push
xchg
mov
gs
mov
shlb
loopne
orb
lock
adc
inc
mov
movsb
or
and
aad
or
test
in
cmp
fldl
jne
mov
dec
ret
es
mov
stos
cmp
mov
lods
fimull
dec
test
ss
aaa
xchg
adc
loopne
out
ja
mov
lods
mov
adc
sbb
dec
push
cwtl
pop
mov
lahf
dec
pusha
cmp
daa
pop
ja
xorl
mov
out
fbld
mov
mov
ss
push
hlt
jecxz
dec
pop
fidivl
aas
repz
aad
sbb
or
and
sbb
int
cmp
xchg
push
out
adc
sbb
xchg
push
pop
or
int
imul
cli
ret
mov
xchg
mov
scas
xchg
fsts
mov
adc
lret
cld
jle
cltd
xchg
fidivrs
mov
mov
add
add
mov
stos
mov
mov
cmp
subl
scas
mov
stos
es
inc
mov
cmp
push
sub
ret
xor
in
and
dec
mov
mov
mov
lods
xorb
cmpsl
jge
and
push
mov
and
add
xchg
testb
jae
fidivrs
mov
push
push
in
loope
test
ljmp
xchg
loop
stos
scas
fsubrs
out
in
push
dec
movd
sbb
jmp
push
cmp
ljmp
xor
cmp
and
pmulhw
xchg
xchg
ror
push
dec
inc
fidivrs
popf
in
mov
in
jp
dec
scas
js
movsb
loop
push
popa
add
divl
jp
or
popl
push
cmpl
cmp
dec
jle
stos
xorb
into
fidivl
sti
adc
push
push
xor
mov
fucomi
enter
add
popl
pop
and
ret
cmc
insl
or
testb
mov
push
test
adc
movsl
sahf
jns
rcrb
subb
add
cmpsl
addl
cmpsl
or
fisubs
jle
inc
popf
xchg
movsb
mov
xor
lret
das
sbb
enter
mov
push
shr
gs
mov
test
fstps
dec
xchg
je
mov
adc
repnz
hlt
jge
adc
and
pop
hlt
fidivs
adc
insl
pop
dec
and
mov
push
insl
push
sbb
pop
fsubs
decl
sub
mov
inc
or
scas
cld
gs
iret
mov
xor
jle
fisttpl
bound
pop
mov
jno
xchg
enter
fcomp
dec
xor
pusha
mov
dec
lret
not
es
movsl
lods
cltd
inc
xchg
dec
dec
lcall
cmc
pusha
jbe
or
mov
divb
push
jp
inc
addb
call
sub
or
xor
arpl
negl
pusha
mov
lea
mov
mov
and
cmp
mov
shl
cmpl
mov
mov
mov
jmp
movl
cmpl
jae
push
pushl
push
push
push
call
adcl
xor
xor
sbb
sub
mov
mov
sbb
or
mov
xor
mov
sbb
mov
xor
shr
or
sub
mov
cmpl
movl
mov
jmp
movl
mov
cmpl
je
push
pushl
call
neg
xor
xor
add
xor
add
sbbl
mov
mov
cmpl
mov
mov
jmp
mov
mov
cmpl
jbe
push
push
pushl
call
xor
sbb
xor
sub
mov
mov
and
mov
push
movzbl
adc
pop
movl
jmp
cmc
outsl
mov
loope
jno
inc
jne
pop
xchg
mov
mov
out
mov
test
sbb
dec
xor
lods
or
repnz
shll
sub
xchg
ret
xchg
sub
add
mov
sub
test
push
lea
inc
in
dec
ja
pop
inc
je
sbb
insb
shrb
outsb
hlt
sbb
mov
daa
lods
mov
fists
mov
ret
lods
aad
mov
popf
outsb
cmc
lahf
dec
pop
stc
pop
loop
ffreep
sbb
fists
cwtl
cmp
scas
pop
test
imul
jno
inc
sub
lcall
sbbl
xchg
cld
add
or
inc
mov
std
sub
inc
sarb
int3
cli
mov
cltd
dec
push
pusha
ficomps
pop
inc
mov
or
push
mov
arpl
push
mov
lahf
adc
cwtl
arpl
mov
mov
push
push
ljmp
add
imul
pop
mov
push
sub
or
add
mov
pop
sbb
clc
xchg
pop
and
pop
jl
jl
sub
pop
js
xor
add
cwtl
xor
lea
aam
xor
je
or
fcomps
cltd
leave
sbb
adc
dec
xchg
mov
add
xchg
sbb
pop
idivb
out
jb
rcrb
mov
mov
stc
xchg
ret
btc
xchg
roll
ror
and
std
and
jno
xor
int
fdivrl
fcomps
inc
aaa
pop
mov
xchg
fdivl
cmp
inc
loope
pop
shlb
movb
xor
fisubrs
xchg
sub
subl
push
mov
fs
or
rcrb
mov
xor
punpckhwd
les
clc
fs
fcoml
xchg
roll
adc
dec
mov
hlt
out
pop
jo
jle
cmp
sub
push
mov
mov
mov
lret
mov
aam
shll
insl
hlt
idiv
mov
insb
jae
mov
sti
cli
inc
out
add
repz
push
xchg
pusha
mov
add
mov
mov
xchg
xchg
jne
xor
pop
dec
pushf
push
rol
std
cmp
and
test
pop
xor
pop
in
arpl
movsb
push
fcmovnu
sahf
loope
xchg
es
stos
xlat
mov
dec
mov
xor
and
and
mov
fisubrs
adc
cmp
mov
mov
iret
sbb
out
adc
or
rolb
arpl
lcall
ja
ret
adc
mov
xchg
outsb
je
sti
adc
inc
mov
or
sbb
push
outsl
ret
test
popa
push
lds
add
int
lahf
add
mov
sbb
cmpsb
jns
mov
add
repz
add
mov
cmp
fisubrs
adc
shl
mov
add
mov
movzbl
or
lea
cmpl
movl
not
jmp
mov
cmpl
jb
push
pushl
push
push
push
call
sbb
mov
mov
adc
adc
and
adc
neg
mov
add
mov
cmpl
movl
mov
movl
jmp
movl
cmpl
jb
pushl
push
pushl
pushl
call
and
xor
xor
sub
mov
movl
adc
adc
and
mov
mov
xor
add
sub
or
mov
and
mov
xor
adcl
xor
xorl
shr
andl
shl
notl
or
neg
jmp
xchg
or
adc
test
sti
fstp
out
cmp
cltd
mov
mov
jbe
mov
xchg
add
int3
enter
adc
xchg
fisttps
pop
sub
sbb
sub
shr
sub
dec
pop
mov
out
push
jg
bound
cmc
inc
jle
cs
pop
icebp
cmpsl
sub
sbb
popf
sub
push
xchg
fisttpll
loopne
jecxz
inc
lret
popf
test
popf
adc
add
notl
enter
mov
adc
in
fdivrs
mov
pushf
xchg
fnsaves
in
leave
iret
add
stos
sahf
adc
pop
cwtl
pop
pop
mov
insl
mov
iret
out
flds
jae
xchg
adc
pop
fcomip
sub
pop
cmc
stc
cwtl
leave
sub
or
xor
inc
jns
and
sbb
pushf
dec
stc
add
lods
mov
mov
pop
push
cmp
sbb
pushf
mov
mov
xchg
adc
fisttpll
shll
mov
adc
shlb
adc
cmp
lcall
bound
dec
inc
and
jns
xchg
pop
sarl
data16
out
mov
ljmp
mov
arpl
lods
sub
shll
mov
add
add
ds
xor
pop
int3
mov
sahf
jo
icebp
mov
sbb
and
loopne
ds
inc
inc
test
adc
pop
repnz
shll
pop
add
inc
into
dec
je
dec
rcrl
or
pop
stos
shll
nop
pushf
repnz
leave
xchg
cmpsb
cmp
push
inc
ret
fildl
out
shrb
or
jl
mov
or
pop
call
clc
mov
inc
mov
aas
into
cmpsb
jbe
mov
lea
jo
adcl
out
imulb
mov
dec
jle
xchg
dec
dec
push
js
jmp
mov
stos
dec
mov
cmp
notl
les
push
aaa
push
ja
scas
or
lcall
test
jb
cmp
xchg
jg
nop
testl
sarl
push
cmc
shrb
push
push
pop
ss
and
outsb
test
rclb
lahf
mov
jge
push
jo
cmp
or
dec
test
outsl
inc
loope
or
lret
xlat
popa
dec
in
hlt
loop
mov
pop
mov
jecxz
lcall
fcomps
adc
sbb
push
adc
test
push
mov
pop
cmp
or
addr16
das
insl
icebp
xor
sbb
mov
outsb
daa
daa
mov
or
adc
cmp
and
add
adc
or
fistl
loope
pop
out
mov
jno
pop
test
test
mov
mov
mov
jmp
movsl
xor
outsb
xor
fs
dec
into
push
mov
in
xor
aaa
pop
scas
add
idivl
and
sbb
es
test
mov
ja
pusha
and
sbb
jnp
cmp
iret
int3
mov
pop
pop
jp
dec
and
and
lret
pop
fwait
sbb
sub
clc
scas
mov
cmpl
movl
mov
mov
not
jmp
movl
not
cmpl
jae
push
push
push
push
push
push
call
xor
xor
add
sub
mov
adc
add
or
addl
movl
mov
mov
jmp
xchg
xor
xor
popf
mov
inc
or
add
nop
lds
or
call
fs
cmp
cmp
xchg
lahf
push
push
sbb
cmp
aad
and
xchg
add
jae
subb
xor
inc
adc
jg
rcll
adc
mov
mov
insb
jno
cmp
mov
xor
sub
ja
dec
mov
xor
push
in
lahf
movsb
add
inc
sub
shrb
scas
inc
jnp
jp
mov
insb
xor
lds
xchg
pop
mov
xor
mov
xor
neg
sahf
mov
cli
fwait
push
xchg
lahf
cmc
xchg
ss
pop
mov
pushf
stos
xchg
add
add
mov
xor
xchg
mov
jle
inc
adc
call
mov
lods
pop
ficompl
xchg
push
lods
das
inc
or
addl
test
sbb
cli
mov
test
repz
imul
mov
push
repz
sbb
nop
ret
ljmp
sbb
xchg
in
push
xchg
ret
dec
pop
ss
sahf
mov
inc
sub
mov
lcall
mov
sub
mov
cmpsl
int3
dec
lds
imulb
inc
repnz
or
out
mov
sub
aas
mov
cmp
outsl
cwtl
cmp
rorb
ss
push
adc
push
outsb
xchg
adc
cld
xchg
inc
jecxz
cmp
jle
and
mov
xchg
cmc
xchg
push
mov
adc
in
xor
cli
fsubs
and
mov
xchg
sbb
inc
mov
imul
mov
sarl
sbb
adc
jmp
stos
jg
test
sar
push
shlb
and
ja
mov
cli
mov
cmc
mov
rorl
push
push
fs
std
hlt
lret
pop
arpl
aaa
sbb
out
cs
ds
cmc
xor
imul
push
dec
popf
or
lret
dec
cltd
cwtl
idivb
add
andb
das
mov
loopne
jo
imul
jno
repz
mov
push
and
xor
in
loope
ljmp
fwait
aas
add
push
mov
pop
mov
dec
push
jnp
adc
add
jne
popf
dec
pop
or
fbld
pop
add
mov
nop
jmp
fsubrl
sub
leave
add
sub
je
out
std
out
test
loope
cs
jae
cmp
cmpsl
push
out
imul
insb
xor
test
mov
adc
jg
mov
scas
cmp
jns
arpl
es
rorl
clc
mov
xor
in
ret
int
in
cmp
xor
xchg
pop
out
rcr
call
jne
lds
inc
fcmove
movsl
loopne
or
jne
pop
jae
inc
xor
adc
data16
stos
lahf
dec
xchg
pop
mov
inc
push
loopne
stos
inc
jg
lret
enter
mov
mov
sahf
imull
and
or
or
xchg
dec
es
sbb
jo
mov
int3
sti
lret
loop
pop
repnz
int
or
loop
shrl
das
adc
xor
xor
shr
shl
or
push
lea
push
lea
push
call
mov
mov
xor
xor
shr
shl
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
lea
jmp
and
sub
insb
es
lret
mov
mov
add
mov
test
pop
jae
push
in
lret
jae
and
nop
scas
and
inc
jp
mov
add
sub
inc
shrb
pop
cmp
cld
xchg
mov
fisubrl
std
jno
nop
add
push
test
jmp
jbe
xor
pop
aas
xchg
sub
pop
cmpsb
das
pop
cld
lods
add
pusha
insl
and
mov
pusha
aaa
jno
aaa
or
out
xchg
or
iret
sahf
jp
gs
push
jno
fwait
pop
add
xor
mov
push
in
cmp
call
fsubl
out
mov
sub
iret
sbb
stos
jle
fcoms
mov
jno
cmpsw
outsl
mov
loope
ror
lods
adc
mov
call
add
push
cmp
mov
push
pop
sub
mov
out
ret
cs
loopne
lret
enter
addb
jmp
hlt
ss
add
test
pop
push
inc
adc
jecxz
mov
fadds
jmp
movsl
inc
adc
clc
sub
dec
xchg
and
cmp
je
loopne
sbb
fistpl
incb
cltd
out
rcll
push
test
jbe
lods
push
in
pusha
adc
iret
sbb
lds
lds
lcall
xchg
fildll
movsl
or
mov
and
mov
movsl
xchg
jle
rcl
mov
cmc
sbb
mov
lods
mov
gs
cmpsb
pop
adc
fdivs
pop
je
rolb
xchg
dec
mov
lahf
adc
mov
jmp
jmp
inc
loope
xor
jno
pop
lret
loope
mov
sub
jp
stos
pop
rcrb
push
or
adc
lahf
push
mov
loop
sbb
clc
lods
enter
es
xor
sarb
in
add
mov
call
insl
adc
les
test
rol
aaa
sbb
lcall
adc
mov
repnz
jbe
les
xor
adc
pop
test
xor
adc
mov
pop
lret
xchg
jmp
decb
shl
fsubrs
arpl
lods
sbb
js
xchg
stos
stos
rolb
shll
cli
imul
jae
cli
scas
call
push
dec
or
mov
cltd
cli
sahf
je
lahf
push
test
pop
xchg
cmpb
or
jno
insl
inc
cs
mov
mov
adc
pop
aaa
dec
fistps
mov
xchg
jecxz
pop
movsl
sbb
sub
lahf
dec
in
out
push
add
sbb
push
jl
dec
mov
scas
cmpsl
mov
inc
xor
push
in
mov
test
inc
and
jb
repz
cmp
push
adc
lds
mov
fdivrs
test
std
mov
scas
adc
scas
mov
outsl
iret
sbb
push
repz
mov
testl
xchg
sbb
adc
test
lods
jbe
dec
cmp
pop
push
shl
call
mov
mov
xor
xor
shr
shl
or
push
lea
push
mov
mov
jmp
inc
aaa
mov
mov
mov
inc
sbb
sti
adc
lods
mov
mov
push
xchg
cli
mov
xor
js,pn
sub
xlat
jmp
fsubs
cmpsl
cwtl
call
sub
out
cltd
or
ds
or
pop
jcxz,pt
push
cmpsb
in
mov
or
xor
jp
lods
insl
sbb
daa
and
inc
shr
dec
xchg
sub
cmc
aad
test
xchg
or
or
movsb
add
xor
xchg
jbe
add
outsl
pop
push
ret
xor
out
dec
lock
cmp
jmp
or
xor
stc
movb
cld
insl
and
add
cld
outsl
mov
test
and
test
adc
int3
inc
hlt
jl
adc
inc
sti
pop
xchg
push
out
aam
mov
popa
idiv
jecxz
inc
and
add
ss
fldcw
iret
mov
push
cld
mov
or
xchg
clc
jge
fisttpl
adc
mov
or
mov
push
push
pop
xor
rcrb
movsl
pushl
cmp
xchg
xor
jno
call
cli
dec
mov
mov
cs
mov
inc
fistl
pop
gs
jecxz
test
add
add
jmp
xchg
push
push
call
das
inc
fsubrp
bnd
push
jecxz
dec
dec
jb
int3
arpl
and
add
jge
lea
cmp
jmp
loope
mov
call
mov
pop
adc
jmp
sbb
insb
test
sub
adc
sbb
mov
mov
aad
rorl
arpl
insl
pop
stos
xchg
das
in
add
inc
je
jmp
ror
cmp
and
sbb
sbb
in
fwait
mov
dec
mov
dec
mov
iret
fwait
ret
addb
push
roll
out
add
fldt
mov
push
sub
lahf
jns
cmp
dec
xchg
stos
cmp
orl
test
stc
dec
pushf
out
mov
add
imul
lods
int3
sbb
lret
push
iret
enter
mov
scas
dec
cltd
lahf
stos
xor
sub
jmp
fidivrl
push
in
or
sbb
or
mov
xchg
jns
lret
and
xchg
xor
call
in
aaa
cld
dec
sbb
xor
sub
mov
sub
sarl
sbb
gs
dec
mov
fst
cmp
adc
pushf
or
idivl
in
xor
fsubrp
mov
clc
dec
pop
xchg
jbe
mov
jp
std
inc
lock
mov
jno
or
mov
inc
fucomp
jo
dec
fildl
addr16
iret
loopne
cmp
and
sub
jnp
mov
push
clc
loopne
and
lahf
adc
or
mov
pop
inc
push
aaa
or
jmp
xlat
pop
rcrl
inc
push
incl
adc
in
jmp
testl
insl
add
call
pop
jl
sarb
sbb
push
mov
push
fstl
out
xchg
fbld
and
sub
clc
mov
bnd
adc
fwait
mov
jmp
mov
shrd
shr
mov
mov
xor
xor
or
lea
push
shl
call
mov
mov
xor
xor
shl
shr
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
shl
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
lea
push
shl
call
mov
mov
xor
shl
xor
shr
or
push
lea
push
mov
mov
shrd
shr
mov
jmp
int
adc
cmp
fnstsw
fcoml
cmp
mov
mov
sub
ss
das
xchg
add
movsb
shl
mov
cmp
cmp
and
test
mov
lock
jno
adc
dec
in
jnp
cmpsb
fisttpl
sahf
enter
jg
leave
fwait
testb
int3
out
lea
roll
rorl
add
ret
xchg
or
mov
gs
pushl
rol
jae
mov
pop
in
mov
cmp
cmpl
outsb
sub
sti
loopne
lock
int
scas
hlt
push
pop
mov
in
push
mov
sub
mov
sub
fldenv
mov
mov
cmovno
repz
int
scas
sub
push
lods
inc
ret
lahf
daa
push
dec
and
cmpl
outsl
sbb
imul
jecxz
loope
lds
scas
lahf
lcall
stc
adc
sub
js
aaa
addr16
mov
or
pop
mov
insl
or
ja
push
nop
std
adc
imul
jp
sub
cmp
xchg
aam
arpl
cs
lret
jae
rclb
jle
imul
incb
adc
aam
jnp
xchg
mov
sub
sub
imul
push
mov
lcall
icebp
xchg
scas
rol
jmp
dec
mov
fistpll
movsb
jno
pop
lock
int
jo
xlat
push
es
xlat
loopne
inc
lahf
inc
sub
pop
xorb
jb
sbb
xchg
inc
int
clc
sbb
test
int
cmp
out
sub
and
inc
xchg
fisubrs
insb
repnz
out
xchg
mov
and
test
out
xchg
and
popa
push
sbb
push
sbb
pop
push
nop
pop
mov
sub
in
popa
lods
jno
lods
data16
mov
int3
fwait
mov
shll
jl
lcall
and
stos
dec
xor
push
lret
paddb
mov
xor
call
movzwl
jne
pop
pusha
mov
xchg
popf
sub
outsl
ja
idivl
sub
jne
dec
and
dec
ss
sub
aaa
inc
jne
xchg
mov
dec
jg
pop
xlat
mov
and
xchg
jno
xor
add
test
pop
and
dec
inc
repnz
cmpsl
lods
icebp
mov
mov
addr16
adc
adc
lods
loope
or
call
add
pop
loope
xlat
cmpsl
imul
cmp
fcompl
ficompl
loope
mov
andl
push
ret
leave
out
subb
fisubl
xor
lds
xor
sub
mov
jne
dec
ret
inc
dec
data16
pop
inc
cmpsb
xchg
inc
xchg
stos
pop
mov
dec
out
test
sbb
movsl
xchg
lret
add
mov
pop
loope
and
and
addr16
ffree
es
push
push
scas
lahf
in
or
mov
cmp
imul
dec
int3
sbbl
mov
xor
or
mov
shrd
shr
mov
mov
xor
xor
or
shl
add
mov
mov
jmp
fdivrs
mov
mov
add
mov
adc
sarb
dec
pop
mov
movsb
das
sar
xchg
loop
sub
mov
outsl
xchg
cli
sub
es
movsb
in
es
or
push
jb
inc
xchg
mov
cmc
shll
add
add
sbb
mov
mov
movsb
xchg
or
in
pusha
shll
pop
fdivs
sub
enter
loopne
mov
push
dec
inc
scas
xor
shll
and
adc
clc
sub
adc
lret
cmp
test
out
add
and
mov
xchg
push
sub
test
adc
lods
jno
and
xlat
xor
in
mov
and
rcll
sub
fcmovne
mov
call
jecxz
push
mov
push
add
mov
mov
or
mov
sbb
jns
out
scas
in
js
mov
inc
ja
push
cmp
add
test
jp
adc
aam
je
xchg
xchg
dec
fwait
pop
ret
jae
jne
fsubs
int3
mov
push
outsb
repz
mov
fs
cmp
cmc
and
out
inc
cli
psllw
sbb
movsb
push
pop
or
inc
push
int
mov
push
cwtl
xor
push
jp
cs
notl
sbb
test
repz
shll
sti
cmp
stc
jl
popf
sub
ret
insb
cmc
mov
lds
pop
fistpll
data16
out
fbld
adc
mov
mov
out
sbb
loopne
stos
adc
aad
mov
and
pop
and
jmp
daa
mov
lahf
rorb
sbb
pop
std
inc
addr16
pop
xor
lods
and
jnp
in
popf
mov
xlat
sbb
lods
ret
mov
orl
jae
xchg
fimull
mov
mov
nop
insb
push
mov
xor
cmc
test
mov
mov
xchg
cmp
jno
pushf
loopne
jns
out
movsb
dec
orps
xchg
lcall
mov
mov
or
inc
pop
test
nop
cmc
xchg
test
mov
and
sbbl
lahf
sbb
and
mov
pop
stos
int
dec
das
popa
mov
cmp
das
sbb
es
pop
fiaddl
dec
movsl
jns
xor
jns
in
jno
pop
push
int3
push
jb
les
ljmp
xchg
mov
push
xchg
idiv
mov
nop
mov
mov
sbb
xchg
icebp
ljmp
adc
push
loopne
adcl
push
mov
je
fs
ss
cmp
int
mov
daa
inc
mov
cmp
xchg
inc
sbb
pop
ds
dec
push
lods
stos
clc
call
sbb
pop
cmp
add
xchg
sti
mov
lods
mov
xor
xchg
jo
xchg
scas
jp
dec
jns
push
adc
pop
test
jno
mov
stos
ljmp
mov
xchg
test
adc
xor
dec
add
clc
cs
or
push
addr16
pop
sbb
adc
push
fisttpl
out
mov
cmp
cmp
popa
mov
insb
dec
jnp
arpl
lods
roll
shr
xor
mov
mov
xor
or
add
lea
jmp
and
cmp
andb
insb
cmp
mov
adc
sarl
dec
jnp
fs
jne
cld
jae
sbb
gs
jecxz
in
in
out
sub
cmpb
dec
push
stc
xor
ret
mov
das
mov
adc
or
jp
cmp
fdivl
mov
jnp
pushf
sub
pop
push
mov
cmp
ds
mov
sub
lret
inc
sbb
scas
mov
fabs
jg
test
jmp
cmp
fidivrs
xchg
lock
cmp
out
pop
jge
xchg
or
jns
aaa
push
dec
out
pop
test
ret
sub
aaa
pop
inc
int
data16
outsb
push
fcoms
aaa
mov
inc
loope
push
adc
enter
cmp
gs
sub
nop
pop
and
test
sbb
mov
aam
arpl
fdivs
outsl
xor
xchg
or
inc
js
rorb
dec
xchg
cmp
pop
mov
js
pop
sub
jns
fisttpl
imul
jmp
cmp
in
mul
fwait
add
fwait
jno
pop
leave
cmpsl
xor
clc
cwtl
aaa
sbbl
loope
sub
test
push
shlb
fildll
inc
mov
scas
ret
push
xchg
mov
into
add
xchg
inc
xlat
or
dec
push
movsl
xchg
sahf
inc
bound
in
pop
xlat
xor
mov
fcoml
sbb
ds
push
sti
mov
repnz
rorb
cmp
mov
inc
xlat
sbb
or
and
jo
jl
sub
cmp
mov
fcmovu
sbbl
fldt
out
xor
sbb
les
ficoml
insl
adc
xlat
jo
or
xlat
xchg
fldcw
push
rcrl
dec
clc
jno
movsb
jbe
lret
je
insb
shrb
loope
cmc
or
jmp
loop
mov
cmc
xor
sub
and
lods
rcrl
mov
mov
out
pop
mov
adcb
int
jg
rolb
lahf
cmp
shlb
inc
ret
rorl
pushf
in
test
mov
add
cmp
pop
ret
dec
mov
mov
push
test
push
das
sub
pop
cmpb
sbb
jnp
fisubs
dec
and
dec
add
jecxz
repnz
jmp
scas
cmp
aad
iret
dec
jle
ds
mov
push
inc
jle
repz
jb
test
mov
dec
adc
jl
in
lds
repz
mov
ret
fidivl
daa
push
pop
test
je
inc
rcrl
mov
mov
dec
data16
add
sbb
test
dec
cmc
sbb
mov
cmp
enter
xor
pop
mov
cmp
ja
test
fadds
popa
sarb
sub
lcall
imul
xchg
cmp
in
mov
or
push
test
hlt
fstps
sarb
and
sbb
mov
and
outsl
jmp
jno
mov
cmc
fiaddl
add
cmc
loop
shl
call
mov
mov
xor
xor
shr
shl
or
mov
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
jmp
fbld
pop
mov
mov
leave
sarl
ror
or
das
jae
mov
push
ficompl
xor
aad
inc
int
sbb
sub
mov
sbb
pextrw
pop
sbb
dec
out
push
mov
pop
adc
fcoml
outsl
jns
push
daa
cmpsb
pop
sub
sbb
repz
out
loop
fsubp
xor
je
rcll
and
insl
xor
jp
out
bound
cltd
push
mov
lret
inc
push
adc
inc
pusha
fcoml
and
outsl
fdivrl
mov
and
inc
mov
scas
xlat
loop
pusha
lahf
ljmp
dec
pop
jge
xchg
mov
out
pushf
pushf
xchg
hlt
ja
jle
jno
outsb
jecxz
pop
rorb
jo
adc
sbb
fisttpl
jb
out
lret
and
adc
and
jns
inc
test
or
cmpsl
mov
dec
out
cmp
mov
insb
pop
add
fstps
mov
lcall
dec
je
jns
mov
push
lea
xor
fcoml
inc
xchg
xchg
inc
mov
ficoml
std
fwait
std
push
rorb
ja
pusha
mov
push
push
jns
test
loope
test
dec
xor
add
ffree
push
adc
sbb
push
jp
repz
out
and
int
ds
mov
xor
adc
jg
mov
movsl
and
dec
enter
out
imul
fimuls
jmp
mul
dec
add
sbbl
mov
inc
xchg
call
in
mov
pop
cmpsl
mov
push
enter
test
xor
das
mov
xor
pop
adc
loope
shlb
into
jno
daa
lods
cmpsb
ja
ljmp
sub
sbb
pushf
push
xchg
push
inc
jae
inc
cs
push
pop
xor
jne
test
mov
leave
and
and
add
insl
mov
add
out
xor
aaa
test
scas
hlt
and
negl
stc
mov
lcall
out
adc
test
lock
pop
jbe
sub
xor
out
and
mov
lock
inc
xchg
out
mov
pop
movsb
fucomp
add
add
and
inc
movsl
pushf
or
cmpsb
dec
xchg
insb
out
repz
jg
int
cmpsb
ds
sbb
gs
and
xchg
and
inc
inc
jmp
arpl
xchg
leave
jl
repz
out
lods
add
cmpsb
push
or
mov
js
lret
add
arpl
popl
fidivrs
push
popa
lahf
cmp
cmp
xchg
lock
pop
dec
addr16
push
push
pop
sbb
mov
and
aaa
outsl
fbstp
loop
mov
lret
jle
mov
int3
test
jle
push
in
arpl
pop
sbb
fisubrs
inc
inc
add
dec
dec
xchg
xorb
icebp
mov
dec
lods
push
inc
dec
mov
add
push
add
data16
adc
stc
enter
cmpsl
push
addl
fsubs
inc
add
push
jmp
cmpsb
inc
push
nop
mov
lods
jl
rcrl
xor
sub
sarl
inc
pop
push
leave
adc
inc
push
lods
adc
xchg
jmp
dec
imul
je
andb
adc
pop
ljmp
ret
jp
sti
in
xchg
in
mov
push
cmpsl
pop
sub
mov
test
lret
jge
iret
insb
dec
in
sbb
inc
add
outsl
mov
sub
cmp
inc
loop
jo
je
pop
lret
mov
lods
cmp
jmp
mov
pop
clc
div
sete
push
jp
movsb
mov
mov
lret
data16
jne
add
fildl
jo
mov
cmp
or
cmpsb
invd
sub
enter
sbbl
xchg
sub
jge
rorb
adc
fstpl
xor
fcomp
xor
mov
daa
xor
out
adc
or
shrl
dec
aaa
dec
ja
push
xor
add
or
arpl
stos
xchg
push
push
add
xchg
mov
xchg
sbb
fisttps
icebp
imulb
sub
bound
out
shrl
add
aad
icebp
or
lods
pop
test
pushf
and
aas
add
ljmp
andl
les
or
in
shl
adcb
dec
push
adc
dec
push
in
psubd
pop
mov
jmp
and
mov
jle
mov
mov
sub
jmp
or
inc
adc
movsb
cmp
cmp
add
out
cmpsl
clc
inc
fucomp
pop
add
xchg
loope
sub
out
sub
xchg
lods
or
push
stc
mov
adc
aam
cmp
and
fidivrl
push
aam
sahf
int
js
fucomip
push
sahf
jle
call
hlt
inc
jo
mov
pop
inc
movsl
orb
ret
push
xor
cmp
js
incl
jnp
inc
push
pushf
test
insb
repnz
sbb
lock
dec
scas
sar
pop
jb
cmp
and
cmp
pop
mov
mov
mov
ds
inc
test
or
mov
xor
test
cmp
adc
lcall
sub
xor
sub
xchg
insb
sbb
jl
cltd
shrb
xor
outsl
sti
mov
cmpb
lcall
arpl
push
jno,pn
syscall
jl
mov
out
pop
imul
fmuls
push
mov
dec
sub
pop
sub
stos
xor
es
xchg
repnz
and
pop
insb
ja
cmp
into
sbb
inc
sbb
negb
pop
dec
xchg
movsb
inc
imul
std
xchg
icebp
mov
dec
add
lcall
lea
aad
out
or
jge
xchg
popa
inc
out
mov
jb
mov
sbb
in
jmp
iret
adc
mov
adcb
lds
sarb
mov
jb
add
shrl
shl
call
lea
push
mov
jmp
imul
xor
inc
aad
mov
mov
adc
cli
xchg
cs
xchg
jnp
ds
lock
dec
cmp
or
sbb
lret
js
gs
push
jne
popf
inc
rorb
pop
xchg
out
les
and
aas
shrl
inc
pop
lods
lods
push
shlb
test
sub
push
jb
adc
inc
lahf
cmp
shrl
inc
jo
sti
xchg
cmp
push
lods
mov
in
mov
lock
lods
call
mov
movsb
mov
into
das
movl
jne
stc
movsl
xchg
into
loop
cs
cmp
cmp
notl
out
popa
into
push
push
or
adc
jle
clc
cmpsb
adc
push
xor
mov
movsb
jae
lea
std
inc
out
mov
mov
cli
pop
rcll
data16
mov
push
dec
test
xchg
dec
lahf
inc
mov
lds
and
push
adc
or
pop
movsb
xchg
lods
pushf
insb
dec
xchg
iret
or
and
add
inc
cmpsb
mov
fcomp
lret
mov
and
adc
loop
mov
test
push
or
lock
dec
cwtl
in
repnz
pop
fldt
outsl
mov
add
or
ss
mov
mov
movsb
addr16
std
and
xor
sbb
por
xchg
movsb
pop
inc
jne
pop
mov
insl
iret
jno
push
ds
iret
and
sub
jle
pop
pop
loop
pop
mov
adc
scas
jge
xchg
xchg
pop
popa
adc
inc
lea
imul
lahf
sahf
sub
out
hlt
add
mov
xor
rclb
xor
shrb
mov
mov
xor
addr16
out
jmp
repnz
push
sbb
std
rcl
xor
in
lock
std
cmpsb
adc
jnp
jmp
add
loop
popf
xor
dec
pop
outsl
push
arpl
xlat
push
push
jne
cmpps
push
xor
icebp
daa
push
dec
les
insb
adc
popa
add
fxch
rcll
cld
sub
and
sub
sbb
xor
cld
jmp
jne
jb
add
aam
in
push
and
add
pop
adc
push
ret
mov
hlt
sbb
fisubs
fmull
jo
hlt
xchg
imull
scas
int
imul
dec
repz
jmp
comiss
lock
cmp
mov
out
stc
loop
xchg
mov
push
fcoml
cmp
daa
std
dec
jae
lcall
xchg
sbb
loop
icebp
add
xchg
mov
in
xor
dec
cs
ja
dec
dec
or
shl
ret
cmp
cmp
mov
lock
or
mulb
xlat
pop
mov
mov
aaa
dec
psubsb
aam
inc
mov
lods
fstpt
push
add
mov
cmp
push
push
pusha
mov
sub
mov
pop
insl
sub
inc
hlt
fisubl
cli
sub
outsb
aaa
es
jbe
pushf
fstp
fbld
movsb
jnp
test
iret
inc
int
fwait
pop
repnz
mov
or
enter
add
adc
xor
jmp
mov
cltd
mov
outsl
ds
enter
sarl
rcr
pop
popf
rolb
ret
mov
fstl
or
or
mov
xor
stc
out
add
das
xchg
or
sbb
add
mov
xor
xchg
and
sub
sahf
outsl
imul
and
xor
push
lds
sub
and
or
fwait
sarb
imul
pop
pop
loopne
sti
pop
test
adc
xchg
inc
insl
test
adc
or
scas
xor
push
dec
das
add
push
push
mov
into
xchg
repz
out
rorb
xchg
outsl
adc
jge
int
pop
cmpsl
bound
inc
stc
fs
sbb
mov
call
mov
push
jp
mov
outsl
or
mov
mov
aad
push
dec
in
jl
aaa
xchg
adc
mov
mov
adcb
rclb
inc
dec
int3
mov
adc
push
popf
cmpl
fldcw
in
jae
fsub
cmp
and
fidivrl
jns
cmpsl
cld
ret
in
mov
sub
inc
cmp
add
mov
xchg
jno
les
sub
iret
pop
mov
sbbl
je
or
test
lret
idivb
pop
xor
jno
push
in
orl
jb
insb
sarl
mov
add
jno
and
add
dec
mov
out
out
scas
mov
int3
jle
adc
push
icebp
daa
mov
sub
adc
sub
cmpsl
cmp
mov
jne
aad
add
add
data16
adc
mov
push
jae
ss
aas
pushf
xchg
lret
mov
das
cmpsb
test
ret
jae
dec
mov
mov
mov
adc
mov
push
jns
or
mov
int
out
rclb
mov
subl
add
jle
or
push
xchg
xor
push
ret
out
xchg
test
mov
or
sarb
jns
add
les
and
push
flds
lods
int3
fs
or
iret
stos
dec
aad
mov
cmp
jo
mov
xchg
or
jns
iret
clc
fstl
xchg
scas
mov
imul
mov
inc
pop
leave
aad
lods
inc
out
and
mov
hlt
sbb
dec
or
cmpsb
fsubs
loopne
call
inc
and
xor
mov
or
dec
sti
stos
inc
dec
ret
adc
std
hlt
stc
jne
jnp
ljmp
cld
push
je
add
insb
xor
push
jb
xlat
or
cli
add
lcall
or
fmull
push
fmuls
pop
jp
pop
repz
push
sub
push
int
sub
pop
xlat
xor
xlat
jbe
ret
in
movsl
pop
pusha
adc
sbb
rclb
popa
ret
addr16
sub
clc
mov
loop
dec
pusha
jecxz
mov
mov
inc
and
stos
push
adc
ret
fsubs
inc
add
xor
test
add
lock
ficompl
in
xor
rcr
mov
jno
ffreep
mov
shrb
cltd
inc
ficomps
decb
pop
pushf
sub
stc
dec
ja
mov
aaa
shlb
out
divb
fbld
dec
xchg
mov
fdivrl
rclb
iret
jbe
out
adc
pop
cwtl
xchg
js
jge
push
lods
arpl
lea
nop
lods
outsl
jl
and
bnd
ljmp
and
loope
sub
jg
in
xor
lret
mov
xchg
or
hlt
adc
dec
pop
jp
cmp
adc
mov
jle
and
or
push
outsb
imulb
sbb
outsl
sbb
mov
in
in
xchg
insb
pop
and
ja
stos
mov
sub
xchg
lahf
and
fs
out
add
sti
push
adc
movsb
cmp
je
dec
sub
hlt
movsl
div
and
adc
int
jge
mov
inc
adc
cmp
mov
loopne
jnp
push
insl
and
insb
repz
jno
mov
xlat
hlt
iret
or
dec
add
push
adc
push
or
fisubrs
add
ljmp
loopne
add
sub
pop
cmp
lods
mov
nop
fldl
xchg
stos
and
cmpb
jno
out
cwtl
adc
jnp
mov
rorb
aam
add
xchg
jp
or
cltd
add
pop
insb
jge
xchg
stos
cltd
cli
and
rolb
cmp
fs
je
rorb
scas
inc
push
scas
out
pop
or
ret
jbe
stos
inc
mov
push
sarl
dec
xchg
sbb
or
mov
call
or
mov
imull
mov
jo
sahf
xor
sarl
out
inc
xor
popa
push
cld
shlb
adc
outsb
in
inc
sahf
cmp
mov
out
jecxz
adc
lahf
sbb
mov
clc
add
movsb
leave
sub
sub
xor
int3
push
mov
mov
pushf
mov
and
mov
fldt
push
repz
ljmp
mov
inc
xorl
aad
push
mov
sarl
mov
push
mov
lret
sub
lods
pop
dec
pusha
icebp
in
adc
es
clc
or
in
int
add
jmp
loop
mov
lods
cmp
pushf
push
xchg
pop
mov
dec
fists
inc
testl
shrb
and
ljmp
scas
mov
push
fdivrs
cmp
aaa
je
jmp
fs
dec
stc
pop
mov
insb
divl
pusha
push
insl
test
sbb
shrl
inc
fdivr
lahf
bound
inc
sahf
cmpl
push
mov
add
mov
mov
arpl
inc
dec
xor
out
rsqrtps
dec
addr16
push
scas
loope
ss
add
shrb
cs
jno
scas
cmp
jae
mov
ud0
shl
call
mov
mov
mov
mov
mov
mov
jmp
scas
int
jge
mov
add
sti
out
mov
adc
pop
mov
repnz
mov
sbb
jo
mov
in
pop
sbb
jge
loopne
insl
pop
sub
and
add
xchg
subl
repz
and
aad
cmp
mov
or
jmp
ss
fwait
int
aaa
lods
mov
xchg
inc
jg
jb
cli
xchg
psubusb
in
xor
mov
jp
leave
push
loopne
imul
push
dec
or
movsl
imul
mov
mov
sub
mov
cwtl
nop
mov
sahf
jae
aaa
outsl
jne
cmp
jg
mov
repnz
add
into
fcmovb
push
pushf
mov
jno
pop
rol
add
fcmovb
inc
into
sahf
in
cmp
mov
nop
and
add
adc
pop
and
xchg
push
or
and
sbb
movsb
xchg
inc
mov
ds
adc
add
jg
and
lret
adc
out
mov
xchg
daa
push
flds
push
pop
sub
notl
out
dec
adc
mov
jmp
mov
popa
adc
adc
aas
sub
hlt
popf
stos
dec
outsl
add
xchg
xchg
jecxz
xchg
test
das
rorb
popa
test
int
lock
lds
xor
mov
mov
push
roll
xor
scas
adc
mov
push
ljmp
jmp
jle
and
jbe
mov
insl
cmp
sarb
nop
sub
cmc
leave
push
int
imul
adc
imul
daa
pop
scas
lods
push
cmp
repz
xchg
xlat
inc
in
sbb
push
xchg
js
mov
enter
iret
data16
imul
inc
jne
stos
mov
jnp
and
add
inc
sub
fcompl
ficoms
sbb
lret
rorb
mov
out
xor
dec
call
xlat
pop
hlt
adc
lcall
or
add
sub
push
out
std
sbb
inc
test
addr16
insl
lods
sbb
enter
sbb
xchg
pop
adc
lret
cmc
inc
out
test
push
add
jb
imul
mov
scas
pmaddwd
insl
hlt
cmpsb
mov
add
lcall
mov
nop
jge
repz
scas
dec
xchg
jl
sbb
ret
mov
xor
sub
call
les
or
xor
xor
inc
movsl
dec
jb
mov
aad
xor
repz
es
cwtl
mov
adc
mov
pop
test
mov
movsl
ret
frstor
not
sbb
and
xchg
outsb
iret
subb
mov
pop
shll
lods
loope
and
ja
xchg
cs
cwtl
sub
mov
pop
inc
scas
push
xchg
jns
movsb
clc
mov
jle
cmp
mov
push
or
dec
xchg
lock
mov
cltd
loopne
insl
repnz
outsb
test
push
mov
push
mov
cs
ret
scas
lods
test
cmp
jecxz
sub
adcb
add
xor
cmp
je
jmp
xor
stos
mov
mov
cmp
jne
aam
sarl
and
jl
ss
mov
sbb
stc
or
xlat
das
hlt
sbb
iret
sub
push
xlat
arpl
pop
lea
push
std
xorb
lret
rcrb
fisttpll
leave
ss
cmpsb
and
pop
lcall
je
rcr
stc
inc
push
inc
adc
pop
and
cmc
cmp
stos
add
fnstsw
cwtl
adc
push
jbe
lcall
scas
cld
and
gs
cmp
inc
mov
adc
loopne
je
push
adc
fbstp
adcl
clc
and
pop
mov
mov
mov
inc
fldt
scas
mov
das
les
mov
fs
sbb
sub
and
sbb
in
or
ljmp
ficompl
push
push
sub
or
xchg
stc
aas
shrb
pop
or
mov
test
push
add
dec
loope
shrb
loopne
sbb
jno
xor
mov
test
roll
dec
aaa
cmpsb
push
hlt
xor
add
pop
lahf
in
sbb
je
add
lahf
mov
idivb
sbb
xchg
cmp
fisubl
jl
or
inc
inc
dec
lds
cmc
mov
pop
and
and
imul
and
fadds
cs
stc
adc
cmpsb
jno
cmpsl
sbb
sub
push
adc
and
orw
mov
cmpsl
mov
xchg
fwait
push
or
jae
cmpsl
xor
xadd
or
dec
test
movsb
sub
dec
pushf
fnstsw
insl
aad
sbb
jge
jnp
sub
flds
xchg
pop
loope
sub
add
rcl
popa
nop
pop
jp
mov
cmp
loope
sti
setge
add
ljmp
xchg
jns
and
xor
fdivrs
inc
jbe
lods
es
xchg
cmp
add
jle
ret
xor
mov
xchg
icebp
mov
dec
mov
mov
mov
andb
or
or
ds
and
ret
pop
lret
cmpsb
push
sbbl
mov
sahf
ja
sub
ret
lret
dec
sub
push
jae
and
lret
mov
push
scas
dec
in
fisttpll
dec
lods
mov
bound
xlat
adc
pop
jns
fbstp
mov
loopw
lock
rcrl
lds
int
in
enter
sub
sbb
or
cld
dec
pop
add
push
pop
jbe
mov
mov
mov
sar
and
test
leave
inc
outsl
xchg
cmpsl
mov
cmc
out
xor
adc
cmpsl
decl
addb
sti
fcmovnb
dec
adc
pop
cmp
mov
push
push
inc
sub
push
bound
out
push
xchg
pop
sarl
push
mov
aaa
imul
push
test
into
lods
or
lock
out
inc
sbb
leave
movsb
frstor
mov
mov
dec
jecxz
mov
xor
out
pop
test
inc
dec
ss
sbbl
jb
movl
mov
xor
test
je
mov
mov
movb
movb
movb
movzbl
movzbl
or
and
movzbl
and
mov
movb
movb
movb
movb
movb
mov
mov
or
mov
sub
mov
imul
mov
sub
mov
cmp
jmp
fwait
adc
xchg
mov
lahf
xor
adc
jl
shrb
repnz
cwtl
sub
in
xchg
arpl
xchg
jnp
in
mov
pop
xchg
scas
xor
fbstp
rorl
cmpsl
sbb
in
pop
dec
xchg
add
mov
addr16
call
xor
call
xchg
testb
mov
jecxz
dec
int3
mov
jg
imul
icebp
movsb
repz
bound
mov
mov
push
rcrl
push
lds
adc
mov
sahf
shl
add
aad
mov
dec
ret
call
int
mov
cmp
add
mov
cmp
aam
and
mov
loopne
jmp
call
or
scas
cmp
mov
sbb
fs
push
fsubrs
filds
mov
jae
pusha
icebp
jns
adc
cmp
lods
and
fs
in
cmp
movsb
mov
mov
test
fwait
push
add
dec
ret
xlat
outsl
push
push
inc
fildll
cmp
mov
fisttpll
adc
push
decb
mov
cltd
fdivl
movl
test
or
and
js
ficompl
mov
cs
cld
xchg
popf
xchg
pop
call
pop
jne
sub
fisttpll
pminsw
cmp
sub
xchg
jge
fwait
jecxz
and
stos
and
mov
mov
push
scas
fidivl
cmpsl
sub
mov
push
jo
dec
fwait
addl
lock
adcl
bound
aad
shlb
lret
rcrl
add
aam
stos
andl
stos
movsb
sbb
jge
xor
loopne
mov
filds
pusha
test
mov
push
lcall
add
cmp
push
imul
loop
addr16
xor
popf
sahf
xor
insb
aad
cmp
ret
loope
and
es
mov
jp
mov
cmc
and
mov
rorb
or
push
jg
lret
xchg
scas
mov
adc
mov
add
mov
jae
sbb
nop
cli
cltd
cmp
nop
adc
in
cmp
pushf
lds
pop
loope
jmp
movb
in
mov
push
lea
push
int3
pop
jbe
push
push
push
rcrl
fcmovu
xlat
pop
cmp
ficoms
lods
inc
insl
sahf
add
push
xchg
dec
in
iret
cld
les
outsb
push
repz
enter
stc
lcall
cs
loopne
lock
mov
shll
rcrl
pop
add
xchg
jecxz
je
rolb
mov
outsl
mov
cmp
pop
ret
iret
fcomp
test
scas
mov
pop
scas
add
popa
mov
dec
insb
xchg
out
outsl
in
or
adc
scas
sub
mov
pushf
pushf
cmp
and
add
cmp
jg
test
aad
mov
movsb
lret
test
outsb
addb
mov
sarb
xor
ljmp
push
movsl
xchg
jns
cltd
mov
pop
sbb
loop
inc
pop
dec
jnp
bound
adc
mov
das
lods
jp
inc
mov
jl
leave
sbb
add
add
mov
ljmp
mov
rorb
mov
mov
inc
cmp
jb
jmp
into
or
cmpsb
mov
pop
in
adc
mov
sti
js
sarl
call
dec
cmp
mov
push
into
mov
sbb
cmp
lcall
pop
inc
inc
addl
rcr
push
dec
or
push
ret
mov
mov
out
push
out
ja
clc
daa
cmpsl
ficomps
push
nop
cmp
inc
out
pop
ficoml
movaps
dec
cmpb
pop
xor
jb
in
sbb
sti
rcll
cli
mov
push
cmp
fidivrl
outsb
xchg
or
inc
rcl
test
or
lret
and
push
sbb
jle
lods
adc
sbb
adc
test
fbld
and
pop
pusha
mov
inc
jns
sub
insl
mov
push
ret
sbb
sbb
in
jp
push
lods
fisubrl
mov
inc
push
inc
mov
cmp
sub
pusha
es
fwait
bound
xor
leave
push
test
sbbb
sbb
sbb
push
jne
xchg
sahf
mov
pop
loope
mov
int
xchg
adc
cmp
testb
rolb
sub
mov
mov
into
xor
mov
dec
popf
mov
xor
sbb
dec
popf
mov
add
loopne
jle
dec
push
inc
push
popf
mov
repnz
out
adc
and
mov
sbb
ret
addr16
stos
aad
jno
fistps
xor
inc
or
scas
out
inc
dec
mov
shll
das
addr16
popa
arpl
mulb
clc
mov
push
sbb
ljmp
test
mov
push
leave
loop
outsb
push
andl
stos
sub
pop
mov
ret
fadd
std
shlb
jg
cmp
cltd
xor
scas
push
sub
add
cmpsb
add
fsubl
lret
xchg
lds
mov
or
mov
push
jg
xor
and
mov
pop
push
jle
lock
dec
sbb
inc
les
pop
pshufw
push
fs
xchg
sahf
push
pop
push
add
pop
jb
pop
nop
cmpsb
sub
jns
sbb
clc
jle
sub
jmp
movsl
dec
mov
dec
rcr
sbb
outsb
bound
mov
imul
pop
sbb
hlt
jb
dec
lds
xchg
sub
or
mov
sub
mov
sbb
dec
arpl
cmp
push
jl
xchg
pop
popl
mov
lock
orps
fisubl
sub
stc
or
jae
mov
push
sbb
aas
es
and
pop
outsb
ds
out
gs
xor
jge
lods
cmp
mov
arpl
addr16
jge
ss
sub
sbb
rorb
insb
aas
movsl
jnp
cmp
xchg
fnstsw
xchg
or
loopne
or
arpl
in
movl
popf
sarl
xor
dec
mov
inc
inc
mov
sbb
out
ljmp
or
mov
or
sub
adc
lcall
or
out
decl
jne
mov
mov
shrd
shr
mov
mov
xor
xor
or
jmp
hlt
aam
mov
and
insl
inc
int
rdtsc
inc
add
mov
sbb
adc
adc
jl
icebp
jbe
aas
xor
pop
adc
ljmp
cmp
cwtl
push
or
mov
and
xor
jo
jle
sti
xchg
pop
negb
jmp
xor
xchg
pop
movb
jecxz
mov
in
cmp
sbb
pop
dec
or
out
mov
push
jne
mov
xchg
fsubr
popf
lret
xchg
shll
pop
arpl
aas
lret
fsubrs
adc
mov
mov
dec
xor
ss
and
scas
sub
inc
inc
mov
fimull
fwait
or
xchg
int
mov
lods
inc
mul
outsl
inc
xor
insl
jo
test
xchg
inc
aaa
std
insl
pusha
shlb
nop
mov
call
shlb
add
pop
push
lock
mov
mov
mov
lret
inc
into
sbb
int3
mov
shlb
imul
jbe
ja
jne
sub
cmp
lds
mov
mov
fsubl
lret
movsb
sub
js
das
lock
inc
sub
into
inc
cmp
dec
mov
sub
xchg
jecxz
pop
cld
aas
popf
sbb
decl
xor
lret
jecxz
mov
mov
cltd
lret
adc
inc
aam
push
lds
dec
sub
sarl
jo
stos
ds
pop
pushf
gs
mov
out
lahf
dec
xor
or
mov
mov
add
mov
pusha
mov
call
es
scas
add
test
movsb
jns
add
xor
inc
sbb
imul
cmp
and
insl
mov
mov
or
int
mov
jge
or
scas
imul
and
push
pop
pop
rolb
and
or
sub
and
fmul
out
or
cwtl
cmp
and
in
sub
xorl
icebp
dec
mov
cltd
or
xchg
jle
insl
and
xor
movsl
sub
pop
or
incl
cli
or
pop
ss
bound
ljmp
xor
pop
test
call
cmp
xchg
es
mov
aas
mov
jno
pop
ret
popf
aaa
mov
frstor
scas
insb
fstl
shll
shl
sti
test
jmp
loop
pop
dec
sub
in
mov
femms
sti
cmp
pop
cmp
or
cmp
adc
mov
and
push
cmp
cmp
aam
je
xor
out
xchg
fcmovbe
insb
std
leave
add
mov
jb
out
xchg
xchg
pop
dec
mov
and
movsb
scas
roll
xchg
aaa
mov
adc
int
mov
pop
sbb
sbb
xchg
jmp
fcompl
das
inc
mov
push
xor
scas
icebp
movsl
push
jmp
inc
aaa
jns
dec
mov
loope
fs
mov
subl
cmp
push
movsb
push
lods
cmp
jae
sti
ss
pop
jbe
xchg
jnp
and
dec
xchg
icebp
test
add
push
lea
push
shl
call
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
push
push
mov
shl
mov
shrd
shr
mov
mov
xor
xor
or
add
push
shl
call
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
push
shl
call
mov
mov
shrd
shr
mov
mov
pop
xor
xor
pop
shl
or
pop
leave
ret
not
push
push
sub
mov
orl
or
jne
adc
jmp
enter
lea
popf
pop
cmc
sbbb
sbb
sarl
add
inc
loope
pop
int
or
or
ljmp
movsl
scas
dec
icebp
push
mov
addr16
cmp
lcall
flds
mov
xchg
mov
sub
dec
repz
adc
mov
xor
out
leave
aam
mov
mov
mov
aam
push
stos
test
push
adc
or
pusha
and
out
add
sub
xchg
sub
pop
int
sbb
aas
mov
or
pop
imul
xchg
push
xchg
scas
inc
out
aas
mov
stos
xchg
popa
and
xchg
test
adc
rcl
es
adc
dec
adc
or
inc
ror
dec
ret
cs
test
jns
loopne
ss
insb
inc
xor
jae
loope
out
sahf
into
mov
mov
mov
das
mov
and
lcall
pop
out
wbinvd
mov
adc
in
or
xchg
shrb
dec
loope
inc
ror
dec
mov
and
data16
fistl
jne
xchg
pusha
sub
repz
cltd
int
mov
iret
mov
frstors
cmpsl
les
inc
jne
ljmp
test
xchg
sub
es
mov
xor
mov
ljmp
cltd
xor
into
mov
xor
xchg
aaa
ja
push
outsb
pop
lcall
lods
bound
mov
outsb
out
sub
dec
test
and
inc
cwtl
movsb
popa
fbld
rolb
cmp
push
in
jmp
xchg
or
mov
movsl
mov
testb
pusha
shlb
sbb
ret
ja
mov
jge
cli
dec
and
jnp
fwait
dec
das
ret
push
arpl
xchg
xchg
push
sbb
mov
sbb
out
ss
lea
jne
xchg
mov
cmpsb
push
orb
mov
loop
aas
andl
sarb
xor
in
sbb
shrb
xor
ret
fiadds
and
fidivrl
lret
add
leave
sti
pop
dec
ret
daa
pop
and
lea
add
add
test
aam
es
pusha
fldcw
negl
xchg
jno
push
pop
bound
mov
mov
rcl
add
ds
mov
lea
jle
inc
or
lret
xchg
cltd
cmpsl
push
lcall
test
daa
jmp
out
lcall
xor
push
pop
sbb
enter
adcb
rorb
sbb
mov
or
lods
mov
jl
scas
clc
sarb
adc
xchg
cltd
imul
pop
add
mov
stos
fistpl
sarl
jo
xchg
pop
or
mov
push
push
or
scas
push
push
xor
notb
mov
jecxz
ja
jmp
jge
sahf
cwtl
sbb
test
or
dec
mov
mov
xor
and
div
mov
and
mov
notl
div
pushl
pop
mov
jmp
mov
mov
sub
sub
mov
mov
cmpl
movl
mov
mov
not
jmp
movl
cmpl
ja
push
push
pushl
push
call
sbb
add
xor
mov
sub
orl
sbb
adc
sbb
mov
mov
shr
rcr
shr
rcr
or
jne
div
mov
mull
mov
mov
jmp
in
lahf
shrl
sub
outsl
jnp
sbb
push
sarl
int
or
mov
cs
jae
bound
fcoms
jo
test
mov
inc
int
xchg
rol
xchg
mov
pop
es
sbbl
aaa
add
and
iret
nop
iret
sbb
cli
sbb
ror
lahf
pop
aad
mov
testb
je
cmpsl
xchg
push
jmp
add
test
mov
daa
cmp
dec
push
push
xchg
dec
xlat
pushl
lods
cmpsl
test
loope
decl
inc
xchg
iret
in
push
xor
push
arpl
jg
repz
sub
sub
lcall
fcoms
out
pop
ds
adc
enter
je
push
dec
pop
adc
sub
add
sarl
jnp
jp
add
xchg
mov
addr16
cmp
mov
test
push
fdivl
ret
sbb
test
adc
jo
adc
cs
stc
dec
mov
sub
enter
pusha
mov
mov
sub
mov
add
gs
sub
sub
outsb
data16
les
mov
add
lods
hlt
push
mov
out
push
mov
nop
je
pop
mov
and
dec
xchg
or
or
hlt
mov
movsb
int
or
or
sub
fs
lds
jnp
pop
nop
xchg
mov
cmp
sti
mov
push
cmp
pusha
xor
mov
fstl
add
daa
push
std
lcall
sbb
stos
testb
mov
dec
idiv
mov
rcrb
in
push
mov
nop
jge
test
mov
insl
popa
push
data16
sbb
into
adc
adc
xor
cltd
xchg
incb
imul
cld
inc
negb
in
lock
jnp
sti
inc
jno
jecxz
fisubrs
divl
lcall
dec
les
icebp
imul
sbb
je
push
xchg
test
mul
xor
ja
jno
test
pop
jmp
std
shrl
xor
andl
sbb
jb
and
les
dec
pop
adc
and
lret
js
jp
es
or
jmp
fcoms
or
mov
mov
scas
fsts
movsb
ds
adc
flds
mov
mov
test
xchg
sub
or
mov
mov
cs
test
mov
xor
out
jo
sahf
mov
xchg
imul
lock
addb
dec
fisubl
insb
imull
rorl
out
out
mov
adc
mov
cli
pop
fimull
fsts
cmpsl
sahf
adc
aaa
es
mov
fsubr
out
insb
and
jg
jb
mov
mov
pop
push
test
adc
pop
mov
loopne
ret
mov
push
jne
mov
ja
lods
push
out
rorl
sbbb
add
cmp
ja
jb
cmp
jbe
dec
xor
mov
pop
pop
ret
push
mov
sub
push
push
movl
movl
movl
movl
movl
movl
mov
mov
mov
add
or
mov
xor
or
mov
jmp
add
mov
mov
cmpsl
outsl
jne
in
in
sarl
mov
iret
push
or
push
lods
aam
dec
ret
out
pop
sub
dec
stos
shll
jle
dec
push
mov
cmp
push
xchg
push
jg
stc
mov
sbb
in
lahf
jno
mov
mov
jo
faddp
roll
fmull
mov
add
cmc
sub
inc
pop
xor
fimuls
jno
hlt
inc
jno
adc
leave
int
int3
stos
cmc
inc
leave
adc
mov
mov
cmp
jp
dec
pop
cmp
wrmsr
jp
push
mov
je
jae
test
xor
stc
leave
lea
insl
xchg
sbbl
divb
stos
test
mov
insl
aad
and
push
and
arpl
or
adc
fbstp
sub
mov
insl
xchg
aas
clc
pop
cltd
push
sub
out
mov
mov
outsb
lods
scas
mov
adc
xor
cvtdq2ps
in
mov
pop
inc
addr16
push
push
test
jp
push
and
popa
adc
mov
dec
orb
push
in
sub
fdivs
inc
lret
icebp
push
fstps
adc
inc
movsb
hlt
ss
pusha
cmp
stos
mov
pop
xchg
push
in
pushl
push
jge
xchg
das
ljmp
and
rcrl
jp
jle
cld
mov
fisttpl
fmull
cmpsl
dec
dec
stos
stc
add
lods
mov
aas
movsb
pop
add
popf
xchg
add
lock
push
lcall
or
mov
push
push
sbb
mov
xchg
arpl
push
xlat
clc
in
cmp
test
std
mov
sbb
push
mov
jns
call
andb
loope
jle
sbb
pop
jne
insb
call
out
rcrb
xchg
sti
js
xchg
test
mov
leave
xor
ret
int
or
jnp
or
outsl
sti
mov
lret
std
pushf
fldt
rorb
sbb
fnstenv
in
xor
pop
mulb
cltd
clc
jge
dec
xor
rcrb
mov
jae
std
adc
and
sbb
or
scas
ret
negl
mov
sti
mov
pop
jl
jmp
cltd
adc
adc
xchg
xchg
jge
add
rcr
notb
addl
movsb
mov
ret
jge
cltd
inc
rcll
inc
lahf
dec
or
sub
xor
jno
out
mov
dec
ret
and
pop
movsl
sti
or
in
test
xchg
mov
and
in
and
adc
bound
push
xor
jmp
bound
xor
notl
xor
xlat
push
mov
pop
in
and
fldcw
scas
adc
xlat
ja
nop
push
loope
enter
cmpb
clc
cmc
mov
in
lahf
lret
lock
mov
sarl
in
jo
je
jne
je
shrl
push
mov
jecxz
dec
pop
xchg
inc
sahf
pop
add
mov
xor
div
xor
mov
push
add
xor
or
div
pop
mov
sub
mov
and
mov
sub
add
cmp
ja
push
movl
movl
mov
mov
imul
add
imul
mov
xor
xor
mov
sub
mov
mov
xor
push
jmp
jns
filds
dec
std
dec
test
sarl
pop
clc
adc
cwtl
push
xor
mov
mov
call
jle
sub
xchg
aas
lds
push
orl
aam
scas
xor
sub
cltd
sub
das
xchg
mov
iret
rcrl
mov
loopne
jecxz
icebp
cmpsb
lahf
adc
orl
jbe
xor
lret
lea
lret
jae
mov
test
mov
cmc
fadd
jno
js
mov
fnstsw
inc
out
loope
addl
and
in
add
int
daa
shl
push
test
mov
rcrb
int3
stos
jno
fs
inc
xchg
xchg
push
add
lods
incb
push
insl
cwtl
sbb
xlat
sahf
in
pop
pop
jp
mov
adc
fbld
xor
push
xchg
sbb
fcoml
push
xchg
lea
pop
outsb
jmp
inc
and
repz
push
rcr
xchg
scas
and
scas
rcrl
daa
stos
inc
addr16
adc
jle
mov
push
into
sub
pusha
hlt
subb
inc
pop
daa
repz
rcrl
pop
out
shrl
xlat
jmp
mov
clc
dec
inc
outsb
fwait
scas
cmp
in
in
xchg
cltd
in
xchg
xor
cltd
out
mov
xchg
mov
sub
dec
sbb
mov
sahf
stos
decb
std
fidivrs
mov
sbb
mov
lret
sbb
in
dec
scas
lea
push
mov
mov
xchg
cmc
add
jnp
and
inc
adc
mov
test
aad
sbb
dec
cmp
sbb
jbe
jecxz
ja
mov
lretw
pop
nop
adc
push
lahf
adc
stc
cmp
dec
cmp
sbb
stc
or
mov
fstpl
addb
and
inc
mov
dec
jo
mov
rolb
sbb
addr16
sbb
mov
jmp
jge
fistpll
in
or
ja
cmp
xchg
mov
les
mov
push
rorl
into
mov
imulb
dec
loop
inc
jg
bound
mov
and
stos
bound
hlt
lea
stc
dec
and
lahf
sbb
xchg
js
xchg
xchg
nop
dec
pop
mov
icebp
sub
out
inc
pop
hlt
test
inc
jb
aam
xchg
mov
in
sbb
ret
add
and
mov
cmp
in
inc
push
aam
push
xorb
jp
and
movsl
into
mov
lock
sarl
repnz
jo
bound
push
out
shl
aaa
icebp
mov
pop
popf
sbb
push
push
outsb
arpl
repz
mov
dec
inc
mov
jno
sub
xchg
sbb
mov
sbbb
aaa
and
dec
mov
or
js
mov
xor
shl
inc
add
lcall
pop
div
mov
mov
push
or
xor
add
lea
mov
mov
mov
mov
mov
xor
add
and
mov
xor
xor
or
mov
add
mov
add
xor
div
xor
mov
or
div
pop
sub
mov
and
mov
sub
add
cmp
jbe
pop
pop
pop
leave
ret
push
mov
and
sub
push
push
push
pushl
pushl
jmp
jle
mov
lods
sbb
jge
cld
and
mov
and
scas
adc
cmpxchg
scas
inc
cmp
or
xorl
sbb
inc
mov
dec
add
xor
and
loop
lods
pop
out
icebp
and
jp
mov
sub
filds
push
dec
cmp
and
sub
aaa
gs
fdivrl
filds
push
ret
scas
fwait
or
mov
lods
ret
aas
cmc
dec
in
dec
test
push
lock
sbb
mov
push
insl
mov
xchg
pop
jne
jae
fstp
movsl
push
stc
aam
xor
in
inc
out
testl
xorb
xor
mov
test
mov
push
and
sub
mov
inc
add
sub
xor
stc
push
and
mov
fldcw
sbb
xor
std
stos
add
lods
jecxz
mov
scas
jmp
pop
jecxz
stc
pop
mov
stos
jb
and
nop
xor
dec
fwait
dec
rorb
mov
pop
shl
test
pushf
mov
cmpsb
add
mov
adc
xor
test
mov
push
pop
lret
mov
and
mov
popf
push
add
and
jl
int3
adc
out
push
sbb
fcmovbe
pop
sub
push
fs
je
pop
jnp
lcall
outsb
sub
call
into
inc
pop
gs
das
mov
push
sub
sbbb
cmp
sub
pop
or
cmpsb
and
les
rorb
mov
push
dec
dec
das
jecxz
xlat
sub
xor
shlb
mov
mov
sbb
mov
pop
and
fildl
inc
xchg
test
cmpsb
call
test
push
xchg
shll
enter
xor
sbb
sbb
jp
mov
cld
negb
push
jl
or
pop
inc
inc
and
or
mov
inc
insl
rcr
mov
push
into
or
sub
rol
cmp
iret
mov
jmp
cmp
std
ret
cmp
outsb
shrb
add
lds
push
xor
xor
jb
sahf
push
push
fs
cmpsb
insb
add
int
adc
ficoml
sbb
call
test
je
xor
jmp
mov
xor
pushl
subl
call
cmpl
mov
mov
jmp
not
cmpl
ja
push
call
sbbl
mov
adc
sub
sbb
add
sbbl
or
movl
xor
movl
adc
movl
cmpl
mov
movzbl
mov
movzbl
jmp
not
cmpl
jbe
push
push
push
push
push
push
call
andl
movl
or
add
sub
jmp
dec
mov
insb
mov
les
sarl
repnz
iret
lcall
dec
jb
cmp
mov
inc
pop
jl
movsl
adc
pusha
adc
sbb
out
jmp
cmp
scas
sub
in
jbe
mov
ljmp
sub
mov
sbb
cli
insl
ret
sub
inc
xchg
icebp
imul
cli
lods
sub
int3
fidivs
pop
call
cmp
call
cmp
mov
mov
sbb
xor
mov
dec
mov
push
shll
push
sbb
pop
fisubl
in
dec
decl
rolb
aad
adc
push
cld
scas
sub
jl
mov
sbb
cmpsb
adc
sbb
mov
lret
sti
pop
dec
or
popa
mov
fldenv
sahf
xchg
mov
jge
cmp
dec
mov
lcall
loope
std
mulb
xchg
xor
adc
sub
in
test
fsts
xchg
int
cli
insb
inc
dec
and
stc
mov
imul
sahf
xor
push
sbb
add
shrl
les
loop
jb
add
les
inc
and
sbb
push
das
sbb
mov
pop
xor
cmc
or
insb
or
mov
xor
stos
xchg
js
mov
fldcw
adc
cmp
add
push
and
sub
inc
addr16
dec
stos
pop
mov
lahf
je
ja
mov
jmp
outsb
push
clc
inc
incl
adc
sub
shlb
cmp
dec
pop
and
lret
test
daa
sub
sub
xchg
sub
fmul
jb
push
data16
icebp
nop
mov
dec
movsb
iret
faddl
ja
cmpsl
lret
pop
mov
pop
jg
push
sub
fimull
cmp
mov
push
dec
pop
cmpl
sbb
gs
sbb
push
mov
mov
jnp
jnp
loopne
xor
adc
bound
add
into
outsb
aaa
test
add
repnz
filds
and
repz
or
enter
clc
dec
jnp
movsb
insl
shlb
mov
mov
mov
and
orl
mov
subl
add
or
addl
mov
adcl
xor
xor
mov
and
movl
movzwl
and
movl
subl
mov
sbb
mov
xor
xor
div
adcl
mov
andl
xor
andl
add
movl
cmp
movl
jne
notl
movl
movl
movl
movl
jmp
push
adcl
push
orl
push
call
orl
dec
movl
jne
movl
cmpl
mov
mov
jmp
mov
movl
cmpl
jle
push
call
or
xor
and
or
adc
mov
sub
mov
sbbl
mov
addl
movl
mov
andl
call
lea
mov
mov
xor
add
sub
imul
lea
or
mov
cmpl
mov
movzbl
mov
jmp
mov
cmpl
jae
pushl
call
movzwl
sbb
mov
decl
neg
adc
sbb
xor
xor
xor
sub
decl
mov
mov
and
mov
mov
cmpl
mov
mov
movzbl
mov
jmp
notl
movl
cmpl
jle
push
push
push
pushl
pushl
call
and
adcl
add
sbb
add
decl
xor
jmp
pop
sti
or
cwtl
cmp
cltd
xchg
pop
inc
or
xchg
outsl
shll
sarl
cmp
pop
cmp
jg
popf
leave
dec
test
xor
cli
dec
sti
cmp
rcl
ljmp
sbb
scas
aas
jns
jnp
dec
mov
mov
mov
cli
mov
xchg
loopne
mov
leave
push
jle
or
pop
push
stc
mov
scas
fstpt
out
jne
inc
adc
jb
clc
scas
and
jae
ret
mov
cld
and
gs
and
jg
rolb
rorb
adc
stos
mov
dec
mov
inc
les
int
add
in
xchg
inc
ja
insl
mov
cmp
sbb
repz
or
and
lcall
dec
stos
test
dec
add
mov
jne
lods
nop
pop
jno
in
sbb
adc
movsl
sub
pop
repnz
lods
test
in
mov
add
xchg
dec
sbb
jbe
out
mov
das
jne
xchg
int
cmp
ret
movsl
lcall
adc
adc
jg
test
and
fists
xchg
sti
dec
jg
clc
mov
inc
cmc
cmp
mov
cltd
pop
and
emms
pminub
pop
ja
jo
or
adc
inc
or
into
je
mov
fs
imul
push
cmp
out
bound
cmpsl
sti
cmc
scas
orl
cmp
add
dec
ffree
or
or
ror
test
test
mov
and
cmp
movsb
es
adc
sbb
xchg
adc
xchg
xor
push
aam
sbbb
cld
cmc
mov
and
daa
pushf
in
mov
or
jo
movl
xchg
mov
sub
push
mov
pop
sbb
push
adc
push
ror
hlt
fwait
lret
or
mov
movsb
push
stc
dec
pop
dec
cmp
flds
std
insb
adcl
test
iret
sbb
add
pmaxub
leave
hlt
cmp
sbb
push
inc
xor
xlat
jl
mov
ja
sbb
cmp
jg
daa
addr16
outsb
subl
dec
push
lods
shll
cmp
into
and
jmp
pop
js
enter
test
dec
xor
sub
shl
cmpl
not
movl
jmp
movl
movl
cmpl
ja
push
call
adc
xor
xor
or
xor
or
xor
inc
not
xor
cmpl
movl
mov
notl
jmp
movl
movl
cmpl
jne
push
push
call
or
movzbl
add
mov
add
xorl
add
xor
or
sub
sub
orl
mov
xor
xor
sub
sub
shr
cmpl
movl
movl
jmp
movl
movl
cmpl
jae
push
push
call
subl
xor
adc
xor
or
mov
or
mov
movl
mov
or
mov
cmpl
mov
mov
jmp
not
cmpl
ja
pushl
pushl
call
xor
xor
mov
sub
sub
adc
movl
sbb
xor
subl
and
adc
mov
adc
mov
andl
mov
cmpl
movl
mov
movl
jmp
movl
cmpl
jg
pushl
call
xor
xorl
mov
or
xorl
adcl
xorl
shrd
cmpl
mov
mov
mov
jmp
mov
movl
cmpl
jge
push
push
pushl
call
or
add
movl
mov
add
mov
sbb
subl
and
shr
and
mov
sbbl
mov
xorl
xor
xor
decl
or
mov
adcl
push
pushl
movl
lea
push
andl
shl
movl
call
lea
push
orl
mov
addl
mov
lea
push
movl
mov
orl
lea
sbbl
mov
adcl
mov
andl
mov
push
call
push
push
pushl
call
sub
mov
cmpl
mov
movl
mov
jmp
movl
mov
cmpl
jae
pushl
push
pushl
call
movzbl
adc
adcl
adc
neg
sub
mov
mov
mov
andl
shr
subl
shl
or
mov
addl
xor
subl
mov
adc
lea
cmpl
notl
movzbl
mov
not
jmp
mov
cmpl
jne
push
push
call
movzwl
add
xor
mov
sub
mov
neg
xor
movzwl
adc
mov
mov
lea
xor
mov
mov
mov
sub
and
mov
movzwl
adc
mov
sub
lea
xor
cmpl
movl
movl
jmp
mov
cmpl
jge
push
push
pushl
push
push
call
sbb
sbb
sub
and
orl
sbb
movl
jmp
std
je
mov
mov
cmp
add
test
mov
or
xor
mov
add
pop
aad
jbe
aas
outsb
sti
in
jge
ds
jno
mov
mov
push
fwait
push
jnp
and
lcall
mov
sub
mov
rorl
fidivs
mov
pop
inc
mov
shll
push
xchg
xchg
and
cld
test
push
and
aaa
lods
aam
sub
cmpsb
sbb
dec
pop
or
pop
and
movsl
sarb
xchg
jae
mov
cmp
jbe
fidivrl
fildll
in
ja
mov
cmpsb
push
push
rclb
sbb
jbe
pop
ds
popa
mov
dec
arpl
lret
fptan
push
in
gs
push
mov
and
ja
les
call
pop
jbe
xchg
lret
jle
jbe
jecxz
mov
das
addr16
lret
aam
dec
jge
dec
pop
push
rorb
and
inc
int
jp
std
inc
sub
push
mov
sti
push
cmpl
add
sub
pop
lret
or
loop
in
jne
cwtl
test
push
test
xlat
add
mov
add
and
inc
sub
nop
fidivrl
test
dec
call
push
or
add
xorb
ss
pop
scas
es
pop
fsubl
xchg
jae
scas
divb
mov
xchg
xor
xchg
lods
inc
mov
mov
xchg
repz
jne
dec
xor
jmp
pop
xchg
ljmp
and
call
arpl
psrad
xchg
ja
xor
sbb
jge
nop
je
or
and
mov
jge
sbb
int3
mov
test
ja
in
xchg
in
xor
ret
jl
xor
out
adc
scas
shrl
ljmp
nop
push
repnz
insl
cmp
jne
sbb
jns
pop
sbb
lods
in
dec
orb
clc
popf
gs
test
mov
call
mov
out
xchg
stos
addr16
sub
rcl
icebp
mov
enter
je
jnp
jp
out
pop
std
lcall
lods
iret
lahf
sub
jae
cld
push
cwtl
and
mov
add
sbb
scas
jno
jae
ljmp
rol
and
in
inc
add
and
movl
movl
add
mov
mov
movl
push
subl
push
push
push
subl
call
cmpl
mov
movl
movl
jmp
movl
movl
cmpl
jl
pushl
push
call
andl
xor
and
or
xor
or
sbb
add
mov
xor
mov
sub
movl
sbb
cmpl
mov
mov
movl
jmp
mov
cmpl
jae
call
mov
mov
sub
sub
dec
movzwl
add
mov
andl
mov
add
mov
mov
mov
sub
mov
sbb
mov
sub
sbb
or
or
mov
mov
movl
movl
movl
movl
mov
mov
mov
sub
mov
sbb
mov
mov
push
add
push
adc
push
push
call
mov
mov
or
mov
or
cmp
jb
ja
cmp
jb
mov
mov
mov
mov
mov
mov
movzwl
mov
add
mov
jmp
std
aas
jge
jge
jge
int3
pop
stos
cmp
jno
cmp
mov
inc
cwtl
mov
ja
xor
or
push
sub
rolb
mov
call
outsb
push
cltd
sub
int
imul
or
outsb
into
repz
fistpl
imul
test
out
xor
hlt
cmp
repz
outsb
sahf
jecxz
sarb
xchg
dec
adcl
mov
jnp
repnz
les
sbb
fisubl
andb
jno
or
inc
cwtl
stos
pop
fnstcw
ljmp
notl
inc
dec
repnz
add
mov
sbb
mov
dec
test
notl
mov
pop
or
pop
fs
mov
mov
mov
icebp
cmp
int
xchg
test
dec
cli
mov
repz
repnz
cwtl
gs
scas
dec
mov
out
divb
test
pop
out
fcmovne
adc
cmpsl
mov
cmovae
pop
stos
lods
into
push
xchg
adcl
lret
ret
xor
out
lahf
mov
push
xchg
incb
cmc
add
in
out
adc
loop
aas
xchg
ljmp
aam
shlb
sbb
test
sbb
cwtl
bound
aad
xchg
je
arpl
int
add
push
push
mov
popl
lahf
leave
cs
jge
adc
adc
pop
ds
ja
das
push
fnstcw
jno
jo
cmp
gs
cmp
xchg
sbb
push
xchg
int
jno
mov
or
movsl
mov
mov
push
mov
mov
xchg
in
adc
lods
out
ds
movsb
pop
mov
sub
xchg
negb
int
mov
outsl
inc
stos
jae
sub
clc
jae
mov
in
and
sbb
fimull
imul
popf
mov
mov
ljmp
mov
test
ja
sub
cmpsb
jge
dec
cmp
mov
jo
and
push
movsb
mov
inc
lcall
int
int
mov
ja
fdivrl
outsl
sub
sbb
les
add
movzwl
push
sub
mov
xor
inc
mov
movzwl
mov
and
movzwl
cltd
idiv
pop
movzwl
cltd
idiv
mov
movzwl
movzwl
and
mov
movzwl
cltd
idiv
mov
cmp
je
mov
mov
jmp
jg
xchg
ret
popl
lret
xor
sarl
mov
xchg
jge
fdivrp
mov
bound
adc
mov
push
or
and
sbb
dec
sbb
xor
jle
cwtl
lock
loop
dec
repz
insb
vunpckhps
xchg
mov
and
fdivs
dec
jl
adc
movsl
sub
enter
je
leavew
scas
leave
xorb
ret
sbb
hlt
push
dec
mov
mov
test
jnp
jge
out
test
xchg
cmpsb
test
clc
mov
rdtsc
jecxz
xchg
nop
divl
xor
cs
cmp
and
test
inc
and
andb
das
sub
sub
loope
jmp
pop
sti
fmull
mov
inc
out
or
out
xor
pop
outsb
xor
lret
add
pop
cld
dec
jo
or
sbb
pushf
pop
push
sub
addb
mov
xor
dec
mov
adc
pop
cmpsb
pushf
popa
mov
mull
stos
popf
mov
insl
and
data16
sub
mov
xlat
and
adc
shll
loopne
inc
pop
fiaddl
inc
inc
pop
xchg
sub
cs
into
ret
push
mov
dec
xor
mov
fstpl
xor
xchg
gs
sub
cmc
mov
push
adc
jae
lods
or
shr
add
scas
mov
cltd
xor
and
cmp
push
in
xor
jg
mov
shrb
adc
fwait
incl
movsl
pop
jge
dec
test
roll
fldl
xor
mov
pop
shll
adc
repz
outsb
lret
inc
cmp
dec
xchg
inc
hlt
inc
mov
cmp
arpl
push
lds
pop
es
repnz
or
mov
incb
repnz
add
sbb
pushf
rolb
jns
xchg
ja
subb
jl
mov
pop
dec
loop
mov
sahf
push
int
fcmovu
out
loop
pop
mov
and
sub
push
jge
std
pop
outsb
test
lock
pop
popf
and
nop
outsb
cmp
dec
inc
pop
pop
jmp
cmp
fnstcw
jl
insl
and
sub
in
dec
int3
imul
fisttps
shld
jmp
mov
out
divl
cmp
jbe
inc
jns
sarl
jg
or
rcrl
leave
int3
cltd
js
fcomps
jmp
pusha
jmp
pop
mov
push
sub
out
ss
lret
ljmp
mov
lods
fadds
fwait
test
mov
fmul
out
nop
pop
orl
or
imul
xchg
jbe
fwait
lcall
xlat
mov
insl
cmp
lcall
and
cmp
aaa
xor
jmp
add
icebp
jle
test
mov
mulb
push
pop
xlat
jle
push
mov
push
movsb
sub
in
xchg
shrd
jnp
notl
fldl
add
pop
sti
mov
rolb
push
fsubrs
movsb
mov
fwait
jnp
lods
mov
leave
sub
popa
adc
pop
pop
std
jmp
scas
pushf
pop
hlt
adc
lahf
pop
repnz
mov
dec
loop
jecxz
and
fst
mov
or
inc
dec
adc
and
push
roll
cli
or
lret
xchg
movsb
dec
or
sti
daa
addb
jp
cmp
imul
inc
sub
insl
insl
pop
sbb
push
jne
mov
test
imul
decb
dec
icebp
int3
pusha
shr
jecxz
and
add
inc
lret
sbb
test
xchg
shll
orl
inc
ficoml
jo
push
mov
faddl
adc
cmpsl
and
sub
xchg
in
lahf
xor
imul
movsb
add
mov
mov
movl
mov
mov
adc
xor
stos
or
mov
dec
dec
inc
inc
mov
xor
popa
and
lock
cmp
lret
fstpl
divb
leave
push
cld
icebp
jl
scas
ss
dec
mov
sub
fdivrs
mov
dec
sub
and
cmp
arpl
rclb
xchg
ss
fcoml
leave
test
ret
lret
enter
data16
jmp
push
gs
mov
sti
rorb
sti
aas
sub
mov
stc
cmp
andb
mov
pop
pop
je
loopne
jae
add
loop
jle
loopne
mov
mov
mov
xor
jmp
lcall
mov
add
cmp
cwtl
jnp
pop
dec
sarl
adc
or
aaa
mov
das
mov
mov
jnp
xor
xor
fidivs
outsl
inc
decl
mov
inc
or
xor
pop
int
pop
cli
sub
push
movsb
inc
push
rolb
sahf
out
subb
shld
sub
mov
jge
pop
jno
jae
pop
enter
inc
dec
outsl
cmc
mov
adc
dec
xchg
test
adc
fistpl
leave
das
xor
lcall
rclb
movsb
cwtl
fimull
mov
loop
enter
das
sbb
jl
imul
out
add
adc
mov
leave
cld
loopne
mov
push
repz
adc
mov
cs
lods
and
cmp
mov
fs
add
cwtl
mov
jb
jmp
in
add
xchg
inc
pushf
jl
adcl
jo
data16
je
sbb
leave
push
imul
cmp
imul
sbb
cld
pop
insb
add
lahf
js
mov
add
pop
aam
lret
pusha
mov
push
push
aas
adc
inc
lret
loopne
and
lahf
mov
ret
lret
push
sahf
stos
enter
sub
test
xor
popa
fisttpll
or
orl
bound
jp
jg
in
nop
cwtl
rcl
ret
in
lods
cmpl
idivl
fdivrl
jp
popf
in
mul
xor
push
pop
inc
out
adc
inc
sar
scas
xlat
cmp
push
or
adc
dec
cmpsb
jns
pop
cmpl
orb
movsb
ds
mov
clc
in
xchg
pop
pusha
jmp
xchg
pop
popa
pcmpeqb
jge
imul
repnz
xchg
mov
pop
ss
cltd
inc
ds
addb
dec
aaa
div
push
push
mov
movsl
cltd
test
xor
into
adc
wbinvd
mov
sbb
xchg
cmc
imul
add
jns
dec
std
mov
or
cld
cli
jne
dec
loopne
pusha
cmp
dec
aas
aas
adc
adc
or
mov
lods
mov
movsb
jp
push
and
fildll
clc
xor
lods
jl
cltd
sbb
lods
jne
jb
fwait
pop
stc
pop
cmpb
jnp
into
mov
cmp
jne
cmp
je
jmp
sbb
cmpsl
popf
or
sub
mov
adc
mov
jbe
mov
outsl
fxtract
in
inc
or
mov
adc
jge
push
lods
bt
jmp
pop
sub
sub
arpl
ret
inc
push
std
add
xor
mov
pop
xor
lret
push
push
or
or
lea
mov
fbld
hlt
inc
cmp
es
bound
dec
cs
push
enter
jle
xchg
add
punpckldq
push
lret
pop
popf
jle
or
jae
out
and
jg
dec
push
out
leave
fdivrl
adcb
int3
xchg
xchg
mov
mov
ds
scas
push
mov
mov
xchg
loop
outsl
stos
jle
popl
repnz
sahf
xchg
add
test
xor
js
or
mov
inc
pop
xchg
leave
jnp
adc
sub
cs
and
unpcklps
sahf
cmpsl
outsb
push
xchg
sahf
sahf
addr16
clc
cmpsl
aas
sarl
pop
sbb
dec
aad
inc
push
int
cmp
mov
or
cmp
jle
push
dec
jp
pop
jmp
insl
adc
sbb
jge
xor
xor
enter
subb
fs
pop
das
push
stc
mov
jmp
jnp
mov
call
fadds
push
push
aam
sahf
mov
or
int
idivb
add
ja
outsb
adc
xchg
inc
movsl
or
imull
lret
jmp
cmp
scas
pop
jns
xchg
mov
cmp
es
mov
inc
scas
push
enter
mov
mov
repnz
lods
insl
mov
mov
lret
jle
out
mov
cmp
scas
xchg
mov
push
jb
xor
xchg
dec
lret
out
xchg
jmp
mov
mov
cmpsb
addb
loop
xchg
dec
das
sub
out
rolb
lods
add
and
push
xchg
addr16
add
and
xor
mov
pop
xchg
insb
and
repz
add
int
jl
pop
popa
mov
xchg
lcall
push
or
stos
pusha
mov
cmp
je
mov
mov
xor
jmp
mov
mov
insl
movsb
sub
das
xor
mov
lcall
adcl
clc
push
adc
dec
xchg
xchg
lret
cmpsl
mov
or
insb
loopne
rcl
mov
add
push
dec
shlb
outsb
gs
lret
mov
pop
inc
fdivl
pop
ds
shrb
repnz
mov
jp
sbb
out
int
lock
sbb
dec
push
inc
aam
adc
push
dec
pop
enter
dec
or
inc
imul
jl
enter
loope
sub
lods
iret
inc
mov
outsl
mov
mov
jl
jae
dec
push
ret
sub
and
jo
stc
jecxz
in
dec
lock
cmp
or
dec
ficoml
das
pop
stc
jo
mov
pop
loop
dec
or
nop
testb
into
std
mov
and
sub
scas
cmp
call
les
cmpsb
movsl
jnp
in
popf
cmp
add
pushf
cmpsl
les
mov
mov
outsl
jae
push
xorl
fst
add
xchg
jno
xor
js
pop
pop
sbb
mov
lret
jecxz
mov
cmpsb
mov
hlt
or
pop
pop
mov
insl
and
jmp
xchg
lret
or
jnp
pop
mov
inc
mov
push
enter
sbb
dec
imul
stos
mov
popa
lea
out
notb
cmp
jg
pop
inc
fdivrl
repz
xor
insl
mov
pop
int
mov
inc
mov
push
enter
and
lea
or
xchg
test
aas
les
mov
and
loope
mov
sbb
shl
ljmp
or
or
jp
aad
andb
add
int3
mov
pop
imul
mov
cmp
mov
mov
pop
cs
sbb
xlat
cmpsl
mov
adc
addr16
int3
cmp
dec
imul
sbb
or
pop
mov
add
xor
inc
push
popa
hlt
pop
outsl
cmp
std
dec
aad
sbb
sbb
xchg
mov
arpl
fwait
mov
jge
jle
jle
sbb
scas
mov
xor
shrd
shr
mov
mov
mov
shl
xor
or
xor
mov
mov
or
jmp
out
mov
mov
data16
jno
outsb
pop
xor
push
sarl
fwait
dec
inc
cmpsl
mov
clc
pop
ficoms
imul
inc
adc
fadd
push
push
push
mov
mov
sub
mov
movsb
mov
sbb
add
jge
mov
push
push
insb
test
out
mov
popa
inc
sbb
mov
data16
xchg
pop
pop
xor
mov
jno
push
in
mov
into
inc
jmp
shl
cwtl
std
mov
leave
cltd
test
push
imul
sbb
scas
movsb
imul
xor
out
test
cmp
enter
adc
push
xor
daa
pop
test
sahf
or
jp
aam
pusha
sub
mov
clc
and
mov
imul
or
push
ret
xlat
sbbb
std
fnsave
jg
rorb
out
mov
dec
cmp
movsb
fdiv
mov
jnp
xor
jl
popa
insl
and
push
or
pop
out
adc
fstps
cmpsl
aam
lods
or
dec
pop
mov
sbb
xor
pop
mov
xchg
add
push
fisttpll
stos
add
movsb
mov
in
in
stc
cld
cs
cwtl
cmp
clc
push
inc
out
fcompl
lcall
jns
mov
add
or
leave
pop
out
xor
cmp
lret
test
or
cmp
lods
sbb
adc
jge
mov
xor
or
inc
dec
sub
mov
test
mov
mov
andl
mov
gs
popf
pop
xchg
pop
data16
mov
out
add
test
pop
fcompl
add
icebp
aad
iret
xor
inc
retw
sbb
pop
jecxz
lods
fs
int3
add
mov
push
gs
ret
adc
mov
dec
pushw
xchg
xor
es
mov
push
hlt
adc
ljmp
das
inc
nopl
iret
adc
push
stos
jg
into
int
cltd
cmp
jne
cmp
jne
movl
movl
mov
mov
mov
xor
jmp
mov
std
rcrl
adc
pop
sarl
out
cmp
addl
jno
jle
push
sbb
loop
es
sub
pusha
sub
mov
xor
push
and
cs
lret
mov
movl
or
popa
imul
mov
sbb
insb
mov
jne
ss
scas
test
fcomps
jp
jns
push
xlat
fs
push
lahf
push
mov
dec
scas
xor
jle
enter
sahf
sub
and
imul
sbb
movsb
inc
fadds
sbb
lock
ficompl
sahf
push
push
ds
inc
fs
lods
rorb
push
mov
push
or
call
mov
dec
jmp
out
dec
jb
pop
push
hlt
cmpsb
ficompl
cwtl
cmp
mov
ss
or
or
dec
adc
lea
jge
add
in
or
loop
fld
ljmp
inc
sbb
xchg
mov
lahf
mulps
jnp
lcall
icebp
mov
addr16
ljmp
testl
dec
sarl
not
stos
mov
and
dec
rcrl
fistps
push
lahf
test
adc
mov
or
pop
insl
pop
popf
addr16
mov
mov
or
push
int
xchg
add
pop
sahf
cli
inc
mov
cwtl
ret
xchg
push
and
push
js
inc
pop
sub
sub
cmp
add
mov
gs
stos
mov
and
add
add
xchg
ljmp
jns
jne
jnp
mov
pop
mov
cltd
push
mov
nop
stos
cmp
or
pop
orl
ffree
jecxz
nop
sub
mov
sarb
adc
in
sub
sbb
xor
scas
sub
push
cmp
fisubs
sub
fucom
mov
aad
adc
sbb
popa
adc
pushf
ljmp
add
outsb
push
push
push
sbb
xor
pop
dec
out
pop
dec
xor
or
data16
mov
mov
sbb
push
shld
shl
mov
mov
xor
xor
mov
cmp
jne
cmp
jne
movl
mov
mov
shrd
shr
mov
mov
xor
shl
jmp
cmp
insl
scas
mov
or
cmp
inc
jno
pusha
sarl
xchg
iret
inc
push
lret
mov
iret
sub
repz
nop
push
xchg
sahf
push
fs
sarl
push
insl
fsubrl
inc
out
mov
pop
aas
cmp
lret
out
and
dec
mov
or
jae
mov
adc
cltd
jle
and
fadds
scas
dec
add
jecxz
imul
pop
xor
sbbl
push
stos
sti
faddl
andb
js
xchg
dec
push
jns
lods
ja
pop
call
xor
adc
cmpsb
mov
add
ds
ret
popfw
mov
aas
push
xchg
jo
pop
stos
sbb
scas
sbb
push
sub
dec
sub
gs
fisttpll
jmp
inc
imulb
insl
fsts
add
jns
sbb
xchg
xchg
mov
fwait
add
arpl
lret
adc
push
aas
cmpsl
cwtl
mov
cmpsl
nop
or
xor
cmp
pushf
xlat
add
popa
fimull
lret
sar
cmpsb
iretw
pop
call
hlt
fstpt
fcom
popf
ss
lcall
mov
dec
outsl
xchg
push
adc
jmp
pop
jl
pop
pushf
xchg
aaa
sub
mov
in
cltd
loopne
jo
sub
pop
les
sub
insb
add
xchg
subb
adc
pop
nop
lock
bswap
adc
data16
mov
int3
mov
dec
push
sbb
jg
pusha
cmp
testl
jae
dec
rorl
xor
sahf
mull
lret
scas
mov
mov
into
jg
aam
imulb
pop
jns
dec
push
aas
enter
popf
or
sbb
cwtl
pop
jno
mov
jl
fdivp
les
mov
ds
or
ror
cmp
rcrl
rcrb
inc
and
imul
or
lcall
mov
adc
aaa
xchg
lock
fadds
in
popf
lods
les
repnz
int
js
sub
lret
mov
aaa
lock
xchg
adcb
adc
push
rorb
push
jnp
and
fsubl
dec
or
adc
adc
xor
adcb
jge
into
mov
mov
je
xchg
adc
lods
xor
or
mov
mov
jmp
dec
fistpl
jb
lea
sti
mov
and
fidivrs
push
push
test
jg
ljmp
and
cmc
jae
pushf
adc
mov
repz
cwtl
rcr
dec
ja
sti
cmp
pusha
jg
mov
sub
push
dec
in
and
in
mov
jg
or
pop
rolb
xor
mov
lea
jl
cmc
out
in
fdivrl
xor
jne
pop
and
sbb
shlb
xchg
mov
filds
shl
and
mov
add
jl
push
fldt
fcomps
out
pop
inc
stos
xchg
pusha
push
test
insb
fs
inc
shr
mov
adc
cmp
mov
stc
lock
mov
cwtl
sbb
mov
push
cli
pop
jno
and
or
adc
xchg
dec
repnz
jp
jnp
ja
int
popa
push
jp
push
aaa
jmp
jns
xchg
cmp
mov
and
roll
pop
ret
rorb
ret
and
rorl
shr
add
inc
and
test
push
jg
xor
loope,pt
out
js
add
pop
hlt
cmp
cmp
shlb
dec
cmp
in
mov
jp
roll
int
fstl
daa
xchg
pop
scas
add
mov
pop
cmp
sbbl
inc
aad
jmp
rclb
dec
test
in
or
inc
sub
ja
lahf
push
out
jne
jp
repz
mov
dec
jecxz
gs
cmp
cltd
cmpb
jmp
jecxz
ds
nop
stos
jbe
jo
fisttpl
popf
xor
clc
mov
pop
movsb
add
imul
pop
push
cmp
sbb
push
and
cmpsl
aas
je
add
enter
adc
and
stc
jl
and
fisttpl
dec
mov
and
call
inc
cmp
vpsadbw
jae
xchg
sarl
jmp
decl
inc
dec
sub
dec
xchg
dec
add
or
addr16
gs
sub
push
add
fs
or
push
and
test
and
and
inc
and
or
adc
mov
and
and
or
mov
mov
mov
add
xor
add
xor
cmp
ja
mov
mov
and
sub
add
shr
mov
movl
mov
and
push
xor
pop
div
mov
imul
cmp
je
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
push
push
lea
push
lea
push
shl
call
pushl
pushl
pushl
pushl
call
mov
mov
mov
mov
shrd
shr
shl
xor
mov
xor
or
mov
mov
mov
jmp
in
je
jge
in
jge
scas
or
enter
test
mov
push
shr
imul
je
dec
pop
sub
or
cld
mov
push
pop
outsb
sahf
xchg
outsl
xchg
xor
adc
xor
xchg
repz
jno
xor
cli
jl
jecxz
sbb
icebp
sarl
pop
xlat
sub
cmp
in
cmp
scas
out
xor
and
dec
push
fisubrs
sbb
fmuls
lcall
mov
imul
lret
cmpsb
push
xlat
outsl
jo
fmul
pop
push
jl
jl
lret
and
mov
ret
pop
dec
inc
xor
out
in
and
pop
scas
adc
test
std
scas
mov
out
jp
idivb
push
jecxz
sub
jl
fiaddl
jp
inc
ljmp
mov
not
ja
fnstenv
mov
pop
and
dec
dec
shll
jo
xor
scas
mov
pop
adc
popf
movsb
mull
pop
fstl
decb
sbb
mov
aaa
mov
pop
mov
aas
or
push
jbe
or
jno
movsl
jg
fiadds
sbb
les
push
arpl
and
pop
outsl
sbb
mov
pop
cmp
dec
cltd
pop
sarl
shlb
xchg
or
mov
in
add
mov
int
or
lea
faddl
mov
mov
or
mov
lcall
push
in
mov
pop
rorb
xor
das
pushf
std
fstps
fiaddl
icebp
mov
fs
repnz
mov
inc
iret
xchg
fsubrp
cmpsb
ja
pop
pop
filds
mov
cld
fisubl
xor
sbb
pop
mov
lret
sbb
fucomip
insl
fcoml
xor
pop
push
fists
mov
lret
add
rcll
pop
cs
lods
fs
or
imul
jg
mov
cmpsl
shlb
add
xchg
and
xchg
mov
call
faddl
subl
pop
mov
add
xor
addb
xchg
mov
sub
push
nop
dec
cmc
scas
jnp
xchg
jge
stos
cmpsl
out
cmpsb
dec
push
imul
clc
jne
orb
jne
imul
and
shrd
xor
mov
shl
shr
mov
xor
or
mov
mov
mov
mov
mov
cmp
jne
mov
mov
mov
cmp
jne
movzwl
jmp
jno
lods
bound
mov
adc
scas
push
mov
pop
jl
cmp
pop
jnp
sbb
xor
test
cmp
or
inc
lock
mov
mov
pushl
mov
cld
cmp
dec
pop
repnz
inc
frstor
mov
lcall
jge
je
ja
lret
xor
sub
pop
aas
movsb
lcall
ja
cwtl
push
sub
pushf
push
ljmp
mov
xor
dec
add
xlat
test
decb
addb
mov
imul
stc
adc
adc
inc
xchg
ljmp
jo
mov
loopne
sbb
test
iret
loop
inc
pop
enter
adc
cmp
dec
adc
cmp
inc
nop
xlat
fwait
pop
mov
sub
pop
adc
sub
rcll
fidivrl
fisubrs
sub
out
inc
dec
sbbl
movsb
and
ljmp
jg
or
aas
les
xchg
fstps
xor
dec
int3
popa
sahf
sbb
xor
xor
push
jl
jg
mov
mov
js
push
inc
mov
jg
and
mov
jle
js
fsubrs
lods
and
insl
cmpsl
in
outsl
jb
inc
cmovne
dec
mov
mov
xchg
add
frstor
jmp
pop
xchg
shll
jle
mov
js
loop
push
sbb
int3
and
nop
enter
stos
jl
mov
in
mov
fistpl
fsubrp
mov
lods
or
movsl
add
iret
fwait
mov
mov
gs
ficomps
push
scas
mov
jl
push
jg
push
adc
jnp
mov
cmc
aam
cmp
scas
ds
mov
ss
sub
and
je
inc
je
or
hlt
sub
xor
mov
push
lods
xchg
mov
mov
sbb
dec
adcl
fwait
test
or
insb
jo
sub
mov
sub
aad
ljmp
and
inc
mov
xchg
mov
add
mov
jecxz
test
cmpsl
jne
out
imul
mov
and
mov
xor
mov
imul
mov
sub
mov
add
mov
mov
shr
and
jmp
jbe
popf
test
adc
sti
push
stos
ret
je
mov
mov
push
sahf
mov
clc
or
and
jns
xlat
testb
cli
push
jmp
incb
scas
enter
xor
mov
out
rorl
pop
lods
jecxz
lods
lock
leave
xchg
dec
sbb
cli
cmpsl
push
addr16
jne
mov
pop
and
rol
arpl
sbb
orb
pop
cld
sbb
xchg
rolb
sbb
lahf
out
rorb
adc
xchg
mov
mov
xchg
and
ror
cld
mov
ficompl
bnd
popf
pushf
or
decb
mov
and
negb
inc
pop
and
and
lret
jae
repnz
js
inc
andl
pop
mov
mov
arpl
cmp
imul
add
xlat
cmp
xchg
in
xor
mov
add
xchg
cmpsb
orb
in
mov
pop
subl
outsl
sub
jns
nop
test
lea
lcall
lea
cmp
stc
mov
push
push
or
xchg
dec
dec
repz
sbb
inc
cmp
add
aam
or
xlat
push
in
sbb
rorl
pop
sbb
xchg
dec
or
fsubs
call
sub
pop
scas
not
bound
mov
cwtl
movsb
push
mov
mov
sub
sbb
test
and
cmp
sub
adc
addr16
mov
popa
jb
subb
mov
pop
nop
push
push
lock
in
cmp
xchg
aam
add
jge
jg
pushw
adc
xchg
adc
cwtl
outsl
pop
bound
and
fbld
pushf
in
fidivs
pop
fwait
dec
mov
psrld
outsb
mov
negl
inc
iret
fdivrs
lcall
mov
sahf
ljmp
cmp
mov
int3
rcrl
insl
and
cmp
inc
mov
sub
xor
leave
imul
ljmp
jg
aas
scas
sbb
movsl
mov
js
xchg
pop
pop
outsl
ljmp
push
lret
xchg
push
inc
shr
push
mov
bound
and
push
lcall
imul
pop
daa
inc
add
enter
daa
inc
add
scas
sarl
xor
mov
cmp
jbe
lea
push
lea
push
call
cmp
jne
cmp
jne
jmp
mov
mov
mov
mov
add
adc
mov
mov
jmp
mov
push
push
lea
push
call
mov
push
pushl
lea
push
call
mov
mov
mov
mov
mov
mov
mov
lea
mov
add
movl
movl
mov
and
add
and
sub
and
mov
movl
mov
jmp
inc
cli
add
jno
xor
pop
mov
sarl
loopne
or
loope
xchg
xor
int
sub
into
push
test
inc
dec
insb
add
or
jne
inc
sub
or
pusha
fcomi
mov
or
dec
sti
pop
push
jmp
shlb
pop
push
rorb
dec
lods
out
nop
mov
jae
sub
dec
jmp
pusha
xchg
stos
dec
ret
lea
daa
or
xorb
mov
pause
xchg
cmp
shll
ss
xchg
add
add
and
scas
test
jp
js
daa
push
lods
push
mov
shlb
fnsave
shrl
les
mull
inc
xacquire
scas
sbb
jne
aas
rsqrtps
cmpsl
push
xorb
fisubrs
outsl
ja
cmp
loope
push
cmp
in
cmp
mov
mov
test
hlt
jg
dec
in
lods
adc
and
pop
mov
jo
popf
mov
cmpsb
mov
outsl
js
hlt
pop
mov
inc
fisubl
xchg
je
dec
mov
and
inc
les
ret
int
leave
and
test
jns
decl
je
push
xchg
fisttpl
adc
xor
or
jne
mov
or
and
jmp
pop
sub
scas
add
cwtl
in
shrb
inc
not
mov
js
dec
imul
mov
or
xor
sub
sub
int
in
out
das
testl
lret
mov
aas
or
mov
or
mov
mov
jp
mov
sahf
jns
loopne
rolb
xorl
ret
cmp
or
stc
push
and
insl
out
adc
lahf
add
stc
jge
sbb
or
in
outsl
add
out
jb
xor
mov
pop
das
inc
jnp
push
imul
jmp
pop
fwait
in
push
out
movsl
sbb
je
je
adc
fcomps
pop
xchg
movsb
outsb
rcrl
enter
mov
mov
inc
fcmove
lcall
sub
dec
mov
or
pop
xchg
jns
arpl
jne
imul
mov
sub
add
cli
in
aas
call
xchg
xchg
xchg
fstpl
jno
cmc
shl
mov
or
add
cmp
je
mov
mov
mov
xor
shld
shl
jmp
mov
ja
mov
add
jno
jp
mov
adc
mov
testl
cmp
popa
movsb
xlat
fadds
push
mov
xor
sbb
arpl
clc
adc
push
sbb
pop
leave
or
scas
add
sub
mov
cwtl
aas
mov
push
and
lcall
mov
xor
popf
rorb
aas
jno
aaa
mov
sub
sahf
push
pop
and
mov
ds
inc
inc
cmp
dec
in
mov
fs
add
enter
push
jl
mov
outsl
and
sbb
cld
mov
arpl
aam
sub
ds
cltd
in
mov
pop
lcall
ret
int3
sbb
lret
sbb
add
push
arpl
xchg
jb
pop
dec
fisttpl
lcall
testb
pop
loope
inc
adc
inc
ficomps
scas
aad
inc
jno
pinsrw
xor
in
out
loope
xor
xor
mov
sahf
inc
xchg
jbe
repnz
mov
testl
popa
jbe
hlt
scas
cmp
and
dec
icebp
int3
movsb
and
sub
inc
mov
sti
adc
std
lcall
test
cwtl
lahf
dec
pop
mov
or
push
xor
sub
repz
addr16
in
int
sbb
sbb
popa
mov
stc
or
fidivs
cltd
test
mov
or
daa
push
stos
mov
in
aam
ss
or
lahf
mov
add
ret
andb
push
jl
pop
fistpl
call
hlt
adc
in
sbb
jmp
mov
pop
lock
int
incb
movsl
cmc
pop
cmp
xor
lock
movsb
sti
stos
push
mov
cltd
and
xlat
fs
sahf
xchg
sbb
scas
insb
mov
cmpsb
loope
mov
movsl
sub
enter
mov
xlat
jge
push
jl
push
push
jae
pop
subl
in
add
pop
movsb
mov
imul
sbb
ficompl
and
aam
cmpsb
inc
and
push
testl
outsl
sub
jo
daa
xchg
cmp
push
jb
pop
stos
dec
or
ret
xor
cmp
jne
cmp
je
mov
mov
mov
mov
xor
xor
shr
shl
or
xor
shld
shl
xor
xor
cmp
jne
cmp
je
mov
cltd
mov
mov
cltd
shld
shr
xor
shl
or
or
mov
mov
xor
xor
mov
cmp
jne
cmp
je
pushl
pushl
mov
mov
pushl
mov
call
mov
mov
mov
mov
push
add
push
lea
push
call
mov
jmp
push
sub
stos
scas
sbb
jno
test
xor
sarl
jmp
in
movsb
mov
test
sar
or
jge
xor
or
adcl
loopne
insb
hlt
xchg
sbb
jns
into
dec
jmp
es
push
cmp
outsb
mov
pop
or
dec
pop
xchg
inc
loope
push
mov
dec
cltd
lods
cmpsl
xlat
nop
rorb
lock
mov
or
inc
xchg
stos
movsb
testb
mov
ja
and
xchg
insb
inc
dec
icebp
jg
test
mov
mov
mov
lahf
jb
gs
fisubs
jmp
mov
inc
iret
cmp
clc
mov
xchg
cmpsl
mov
in
rcll
sarb
sbb
mov
inc
and
push
mov
and
jbe
adc
or
cmp
and
fldl
aaa
mov
scas
adc
das
sub
popf
lret
ss
outsl
shr
or
mov
scas
fiadds
mov
add
pop
adc
test
mov
stos
cmp
mov
fisubl
jl
adcl
mov
jo
repnz
dec
cli
int3
mov
outsl
mov
xchg
xor
push
fstps
cld
mov
shll
mov
push
shlb
mov
inc
jns
adc
and
mov
inc
xor
xchg
xor
mov
pop
in
into
mov
sarb
sbb
cwtl
push
scas
or
xor
jb
sbb
bound
cld
jo
add
mov
daa
scas
stos
sub
pop
adc
inc
fisubl
mov
lcall
xchg
cltd
and
ss
xor
sub
int
cmc
mov
xchg
push
out
push
pop
rep
inc
sbb
stos
xchg
stc
inc
add
dec
cmpsb
add
push
stos
stos
stc
xorb
cmp
stos
or
rolb
ret
shlb
sbb
clc
push
mov
filds
and
les
pop
sarb
add
aam
jae
sub
mov
das
stos
adc
jecxz
mov
inc
mov
xor
int
dec
xor
sub
pop
cltd
bound
push
dec
inc
mov
std
loope
xor
push
cmp
int3
push
mov
add
pop
mov
pop
ret
push
mov
sub
xor
push
push
movzbl
add
mov
push
movl
cmpl
mov
movl
mov
jmp
mov
mov
cmpl
jg
call
sub
movzwl
or
adc
add
sbb
movzwl
add
movl
mov
add
mov
mov
cmpl
movl
mov
mov
jmp
mov
cmpl
jae
push
push
call
mov
xor
xor
sbb
xor
or
or
sub
and
add
add
cmpl
mov
mov
mov
movzwl
jmp
movl
movl
cmpl
jbe
push
pushl
push
pushl
call
mov
xor
sbb
mov
sub
mov
mov
sub
and
sbb
xor
addl
add
mov
xor
div
cmpl
mov
mov
movl
jmp
mov
movl
cmpl
jge
pushl
push
call
xor
add
mov
xor
or
sub
imul
sbb
or
sub
subl
not
mov
xor
movl
and
sbb
sub
mov
cmpl
movl
mov
movzbl
jmp
movl
mov
cmpl
jae
pushl
pushl
pushl
call
subl
negl
mov
mov
sbb
and
add
mov
or
movl
movl
and
mov
mov
mov
sub
add
xor
imul
mov
mov
sub
sub
xor
cmpl
movl
movl
movl
not
jmp
movl
cmpl
jge
push
push
pushl
push
push
call
neg
xorl
sbbl
adc
andl
inc
sub
mov
neg
movl
movl
movl
mov
sbbl
mov
xor
mov
sub
mov
xor
xor
cmpl
movl
mov
mov
jmp
movl
cmpl
jge
pushl
pushl
pushl
push
push
push
call
sbb
subl
andl
sbb
or
xor
mov
imul
sub
mov
sub
adcl
mov
movl
xor
mov
notl
xor
incl
jmp
mov
pushf
xchg
add
sti
inc
mov
mov
or
or
in
jbe
xchg
dec
pop
push
add
call
and
faddl
xor
aas
inc
in
mov
ss
in
or
dec
cmc
cwtl
mov
sahf
mov
enter
push
jns
xor
cmp
mov
rcrl
mov
add
sahf
cmp
and
mov
int
or
lcall
jge
popa
stos
insw
outsl
cmp
in
or
out
push
test
and
outsl
inc
xlat
ficoml
fsubrs
sub
sbb
and
cli
and
inc
xchg
add
shll
or
xchg
inc
ds
fdivrl
std
adc
dec
adc
sbb
push
pop
adc
jb
aam
mov
add
push
and
xorb
xchg
lock
adc
shl
cmpsl
rol
negl
cmp
es
imul
clc
xor
int3
mov
jno
sub
jg
jp
jmp
loopne
movsb
ret
repnz
adc
lods
loop
jbe
aam
sbb
daa
les
mov
bound
inc
cmp
mov
nop
or
pop
jg
repnz
outsb
clc
mov
pop
jmp
or
loopne
inc
in
sbb
xchg
xchg
mov
into
push
int
mov
xchg
idiv
inc
in
sub
adc
or
test
mov
int3
leave
push
test
inc
or
fbstp
push
jecxz
jo
nop
mov
enter
inc
mov
fisttps
dec
inc
scas
std
fs
and
and
jp
cmc
call
subl
adcl
jl
mov
pop
aas
je
push
push
jbe
or
add
subl
pop
sbb
sarl
orb
mov
or
sbb
sub
sahf
and
sbb
into
filds
jbe
jle
leave
push
cltd
mov
inc
push
mov
jg
dec
dec
adc
xchg
push
mov
ficompl
mov
xchg
cs
testl
and
cmpsl
adc
aas
or
in
sbb
xor
pushf
clc
and
sub
or
inc
fistpll
push
sarb
div
mov
xor
mov
adc
mov
subl
mov
xorl
lea
xor
or
adc
mov
mov
cmpl
movl
mov
jmp
movl
mov
cmpl
jle
push
push
call
add
orl
and
sub
mov
mov
add
andl
adc
mov
mov
orl
sub
xor
sbb
imul
add
dec
mov
sub
mov
cmpl
not
mov
mov
mov
jmp
movl
cmpl
jbe
push
call
add
add
movzwl
xor
subl
movl
subl
mov
andl
xor
xor
movzbl
or
jmp
adcl
sbb
mov
xor
mov
push
inc
es
je
dec
xlat
in
cmpb
pop
jg
aam
div
mov
adc
xor
iret
lahf
test
jae
pop
push
popl
pusha
and
cli
gs
lods
stos
adcl
jbe
jb
mov
and
pop
in
mov
cld
mov
call
incl
jns
int
sbb
xchg
jp
stos
lock
repz
idivb
dec
mov
test
dec
je
push
push
das
adc
cld
inc
and
rclb
inc
ret
push
push
insl
dec
lcall
xor
ljmp
lcall
and
push
shll
fcmovnu
sub
inc
dec
mov
mov
mov
shrb
and
pushf
outsb
jmp
jae
jbe
negl
jns
iret
sbb
push
sub
inc
dec
jge
pop
ja
adc
push
pop
fwait
adc
xor
add
ret
bound
xchg
push
stos
inc
std
fmull
dec
mov
sub
stos
fnsave
repnz
gs
out
push
push
xchg
and
pop
xchg
jge
pop
dec
imul
mov
in
inc
push
push
repnz
pusha
add
jmp
std
add
outsl
or
sub
xor
pop
outsl
mov
out
push
out
pop
add
jecxz
adc
jmp
pop
data16
neg
pop
jno
cmovno
mov
jno
mov
dec
push
dec
and
and
fmul
sub
inc
lods
and
xor
scas
pop
jne
cld
cs
push
fisttps
fbstp
jmp
lock
fwait
repz
and
xchg
push
add
dec
js
das
scas
inc
pop
cmpsb
leave
push
push
cli
or
pop
mov
scas
cld
xor
les
xor
ss
mov
stos
xchg
in
jb
repz
js
aam
ds
mov
addr16
push
jne
js
ret
insb
sbb
movsl
cwtl
aaa
inc
popf
testl
stc
dec
out
xchg
pop
loope
inc
lahf
push
mov
sbb
inc
mov
je
popf
dec
loopne
dec
fistpl
ljmp
loope
rorb
dec
xchg
dec
nop
aaa
dec
lods
gs
jb
in
sbb
inc
and
in
mov
sub
aas
fistpll
bswap
mov
inc
xor
xchg
and
mov
mov
add
xor
cmpl
movl
mov
not
jmp
movl
cmpl
jb
push
push
call
dec
inc
andl
andl
mov
xor
mov
mov
sbbl
movl
adcl
mov
or
imul
and
mov
sbbl
sub
cmpl
mov
mov
movl
jmp
movl
movl
cmpl
jae
pushl
push
pushl
pushl
call
xorl
not
sbbl
adcl
neg
add
sbbl
mov
andl
imul
add
mov
xorl
and
xor
or
mov
sbb
movl
mov
or
mov
mov
add
mov
addl
xor
subl
div
cmpl
movl
not
jmp
movl
movl
cmpl
jg
push
call
neg
or
add
sub
xor
or
orl
andl
or
mov
sbb
sub
mov
subl
mov
xor
jmp
mov
sbb
mov
cltd
outsl
imul
mov
push
xchg
movsl
or
mov
cmp
imul
sub
das
fimull
mov
test
pop
sbb
aam
jp
lahf
mov
mov
mov
movsl
fisubl
addr16
pop
shl
xchg
jo
mov
jmp
or
sbb
dec
jns
cmp
dec
mov
push
iret
jns
and
jb
fsubrp
outsl
pusha
sub
inc
and
dec
adc
mov
in
and
gs
mov
pop
pop
mov
fwait
cmc
call
and
mov
mov
out
mov
roll
push
sbb
mov
sbb
push
lret
icebp
sbb
mov
xchg
fwait
mov
leave
adc
divl
out
out
cmp
and
lods
out
and
pop
mov
mov
xchg
pop
sub
cmp
les
inc
cmp
push
cltd
mov
sub
xchg
mov
push
fdiv
ret
ficoml
push
out
insb
scas
inc
test
and
pop
scas
cld
lret
pop
jno
mov
push
std
loopne
js
mov
push
cmp
fwait
mov
push
rcll
iret
int
jno
aas
cmpb
jmp
mov
loope
mov
cld
cmp
ds
jo
sbbl
cmp
test
dec
js
test
and
stos
mov
jns
sbb
lret
cmp
je
int
aam
cmp
mov
cmpsb
cli
sahf
hlt
test
mov
pusha
dec
stos
pop
lods
fchs
xor
mov
test
mov
nop
into
mov
lea
fisubs
pusha
jge
push
cmp
or
cmp
cmpsl
jns
notl
push
shl
fsts
push
inc
andl
pop
lret
je
stc
fiaddl
and
inc
ret
ret
jne
mov
shl
inc
loopne
test
sahf
jmp
sahf
icebp
push
shlb
nop
das
int3
stos
pusha
mov
push
insl
scas
mov
push
das
scas
cmpsl
sahf
push
push
jae
mov
loope
aaa
call
ja
push
mov
push
adc
fisttpll
cmp
push
and
xor
cmpsl
sbb
push
mov
mov
adc
sub
shlb
cmpl
mov
movl
jmp
movl
cmpl
jb
push
pushl
push
push
call
xor
xorl
mov
or
mov
mov
xor
mov
xorl
adc
dec
xor
push
pop
xorl
div
shr
and
push
cmpl
mov
not
not
jmp
movl
cmpl
ja
push
pushl
pushl
push
call
xor
xor
add
or
sbb
or
cmpl
mov
mov
jmp
mov
mov
cmpl
jl
push
pushl
push
call
xorl
movzwl
add
mov
adc
sub
adc
sbbl
xor
or
mov
xor
pop
sub
mov
movl
mov
or
and
orl
add
cmpl
movl
mov
mov
mov
jmp
mov
cmpl
jge
push
call
orl
andl
xor
xorl
mov
xor
mov
and
mov
sub
neg
mov
adcl
movl
cmpl
movl
movl
jmp
movl
cmpl
jb
pushl
pushl
call
sbb
subl
xor
xor
and
adc
cmpl
movl
mov
not
mov
jmp
movl
not
cmpl
je
pushl
push
push
call
andl
or
xor
and
xorl
or
xor
jmp
sub
aaa
xchg
dec
aas
adc
push
cmp
xchg
sarl
insl
leave
inc
lret
lock
fcmovu
ret
xchg
push
in
jg
in
inc
mov
pop
das
mov
push
dec
cmp
push
and
aas
adcl
push
dec
sub
movsl
shll
jbe
in
enter
jae
push
cmp
lcall
mov
loop
push
int
mov
or
sar
mov
and
pop
push
xor
push
push
cli
test
ja
sarb
dec
jle
lea
adcl
cmp
add
stc
push
push
push
mov
jle
cmp
imul
lahf
out
push
xlat
ret
or
mov
cmp
lods
xor
loopne
adc
call
out
jae
mov
fs
cmpsb
mov
test
xorl
decl
stos
mov
sahf
fisubrs
ja
fists
cmp
ret
sarl
push
push
cltd
cmc
jge
push
mov
push
arpl
in
inc
jmp
testb
sub
mov
pop
mov
mov
sbb
cmp
add
mov
and
dec
mov
mov
adc
in
js
les
and
xchg
jnp
xor
addb
push
jb
or
aad
sub
dec
roll
mov
cmpsl
dec
push
lcall
or
push
dec
mov
mov
lea
xor
adc
mov
loope
mov
push
mov
pop
js
iret
std
dec
or
xor
lret
push
sbb
or
xchg
popa
leave
push
jbe
and
push
adc
and
arpl
mov
sbb
decl
xor
inc
xor
cltd
addr16
mov
pop
and
xchg
nop
sahf
das
pusha
sbb
push
mov
js
inc
movsb
fstps
xchg
xchg
mov
lret
xchg
lahf
push
in
adc
and
stos
mov
lods
xchg
or
sbb
inc
xor
call
xchg
and
int3
add
adc
and
popw
and
or
aad
in
pop
push
cs
inc
hlt
fiaddl
add
xor
xor
mov
sub
imul
movl
cmpl
movl
not
movl
movl
jmp
mov
cmpl
je
push
pushl
push
push
pushl
call
sbb
mov
add
sub
dec
adc
mov
sub
mov
sub
mov
mov
sub
and
mov
add
imul
imul
movl
mov
sub
subl
add
push
call
cmpl
mov
mov
movl
jmp
movl
movl
cmpl
jae
pushl
push
call
xor
or
or
mov
orl
adc
xor
adc
mov
cmpl
not
mov
movzwl
jmp
movzwl
movl
cmpl
jle
push
pushl
push
push
push
push
call
mov
sbb
mov
or
add
or
sbb
and
mov
mov
or
movzwl
or
mov
subl
xor
subl
div
mov
sub
and
cmpl
movl
movl
jmp
movl
movl
cmpl
je
push
pushl
call
sub
xor
mov
or
add
mov
or
decl
add
lea
sub
mov
sbb
movl
movl
sub
mov
mov
xor
mov
xor
cmpl
mov
movl
movl
jmp
movl
cmpl
jne
pushl
push
pushl
pushl
call
xor
add
mov
or
mov
adc
and
xor
sub
add
mov
sub
adc
sub
xor
or
sub
mov
adc
lea
neg
mov
mov
mov
sbb
mov
or
imul
cmpl
movl
movl
movl
jmp
movl
cmpl
je
pushl
call
xor
or
add
adcl
adcl
dec
xor
or
sub
mov
imul
xor
cmpl
mov
mov
mov
jmp
movl
cmpl
jge
pushl
pushl
pushl
push
push
call
andl
xor
xor
adc
or
or
negl
and
sbbl
mov
sbb
andl
and
cmpl
movl
movl
jmp
mov
movzwl
cmpl
ja
pushl
call
and
mov
mov
sub
add
subl
add
mov
sub
mov
xor
add
mov
movl
cmpl
movl
mov
notl
mov
jmp
movl
cmpl
jbe
push
push
push
push
push
call
add
or
xor
sbbl
sbb
adc
movl
cmpl
mov
movl
movl
movl
jmp
movl
cmpl
jae
pushl
pushl
push
call
sub
or
sub
and
sub
dec
incl
mov
mov
sub
xor
movl
movl
cmpl
movl
movl
movl
mov
jmp
movl
not
cmpl
jg
push
push
push
call
and
xor
adc
or
sbb
add
mov
sub
mov
mov
xor
xor
xorl
mov
orl
call
cmpl
mov
movl
mov
jmp
movl
movl
cmpl
jle
push
pushl
pushl
pushl
pushl
call
adcl
orl
or
orl
dec
sbbl
sub
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
mov
call
mov
or
mov
or
push
push
push
push
call
jmp
negb
mov
mov
or
and
sarl
fmull
or
sub
std
lea
inc
loopne
movsb
popa
ljmp
fs
dec
ret
cmp
stos
imul
mov
loopne
or
pushf
imul
cwtl
or
ret
push
adc
cmp
jbe
or
icebp
sbb
add
cmp
pop
imul
sbb
pop
call
shl
dec
popa
popa
pop
jmp
lds
add
mov
cmp
mov
jbe
xor
or
cmp
mov
dec
and
pop
stc
imul
or
cmp
push
xchg
mov
roll
push
push
sub
sbb
fidivs
jg
jg
mov
out
fmuls
jnp
inc
int
pushf
ficoml
and
pop
sti
sub
call
pop
and
jge
sbb
xchg
and
ljmp
or
xor
scas
sub
imulb
clc
leave
mov
movsl
mov
xor
insb
dec
sub
pop
insl
push
sbb
pop
das
out
add
loop
mov
enter
sub
int3
aam
imul
dec
mov
mov
push
or
fimull
pop
xchg
mov
test
and
inc
movl
lret
or
sub
xchg
das
adcl
bound
je
rcll
aad
sub
pop
and
scas
mov
outsl
nop
ds
and
cmpsl
xor
mov
icebp
in
pop
mov
nop
dec
adc
push
jecxz
pop
call
scas
xor
dec
inc
push
aas
mov
mov
iret
pop
lock
out
dec
push
adc
mov
mov
add
push
mov
mov
add
push
dec
fstps
gs
fwait
sub
in
pop
out
push
jo
mov
aad
xlat
stos
push
lea
pop
ljmp
rolb
lods
inc
push
leave
add
fsubrs
adc
and
mov
jmp
adc
frstor
in
or
lods
movsl
lds
mov
ja
push
movsb
gs
sub
out
push
mov
je
cmp
jne
mov
mov
jmp
mov
or
popf
lea
xor
loopne
sbb
mov
inc
add
aad
xchg
imul
mov
shll
stc
jns
ljmp
or
dec
pop
ror
or
shll
enter
das
mov
and
les
xchg
sub
mov
rcrl
jbe
mov
jle
pushf
jbe
xacquire
andl
xchg
push
loope
xchg
pop
xchg
enter
pop
mov
lods
adcl
ret
js
add
sub
sahf
lock
or
sub
pop
sub
daa
imull
pop
add
cmp
mov
cmc
je
or
cmpsb
jno
mov
jne
or
push
in
cmp
push
sbb
loope
aam
scas
js
mov
xchg
fcoms
repz
mov
jle
repz
or
ljmp
adc
data16
mov
movsb
stc
dec
xchg
and
insb
cmpsl
in
add
int3
xchg
cmp
daa
mov
lods
out
nop
push
lret
aas
xor
add
insb
sub
pop
mov
inc
movsb
push
stc
hlt
inc
test
adc
sub
sbb
xchg
and
cltd
cli
pushf
insl
add
sahf
pushf
leave
cmpl
andb
scas
icebp
dec
cmp
adc
dec
movsl
xchg
jecxz
add
dec
mov
push
sbb
xchg
pop
loopne,pt
jae
and
sbb
hlt
sbb
push
ret
cwtl
pop
cmc
inc
xlat
add
lcall
movsl
mov
adc
cmp
mov
andb
test
dec
cli
popa
stos
push
fistpll
xor
jnp
arpl
xor
jp
sahf
inc
insb
inc
dec
add
jecxz
repnz
rorl
popf
in
bswap
inc
push
push
or
ss
push
subb
ret
pop
mov
ja
clc
jmp
and
lods
dec
loopnew
jge
mov
aas
shlb
sub
xchg
adc
in
popf
sub
insl
test
adc
aad
mov
cmp
inc
jl
xchg
cmp
and
add
dec
inc
push
pop
pop
in
cmpsb
leave
and
adc
or
sbbl
xor
jle
inc
scas
loope
icebp
test
outsb
lahf
mov
cmpsl
mov
jbe
mov
xor
mov
jmp
dec
inc
imull
jns
gs
loopne
cmp
mov
mov
cmp
hlt
mov
mov
mov
push
inc
fsubrs
test
adc
push
leave
pop
xor
push
sub
hlt
std
push
xchg
jmp
mov
fdivl
ja
iret
jae
cmp
and
fisubs
sbb
xor
inc
xorl
push
shrl
lods
sub
xchg
std
pop
addl
push
pop
out
shrb
jbe
xorl
mov
mov
jge
insb
data16
insb
incl
outsb
sti
fadds
and
fwait
lcall
jecxz
insl
mov
inc
out
jl
add
into
in
xchg
mov
sbb
push
sahf
les
lahf
mov
aam
dec
fucomp
dec
push
ja
pop
mov
mov
sbb
mov
sub
mov
cmp
pop
adc
push
rorl
sub
xchg
xchg
arpl
popa
arpl
xchg
cmpsb
divb
ljmp
add
or
xchg
data16
xchg
imul
ja
jo
sbb
push
push
mov
xchg
hlt
mov
mov
js
push
pop
andl
mov
mov
pop
xchg
sarl
xchg
push
adc
and
sbb
aad
shlb
test
ret
pop
dec
cmc
cmovle
push
push
lahf
mov
movd
fs
fsubrs
cmpsl
pop
push
movsb
cltd
add
addr16
int3
popf
cmp
pop
pop
dec
movsb
inc
jb
mov
std
incb
sbb
pop
shl
mov
pop
or
mov
sarb
pop
fidivrs
out
cmp
mov
hlt
lcall
sahf
sub
adc
int3
jg
pop
test
and
rol
push
pushf
pop
push
jae
lret
ret
adc
inc
adc
mov
addr16
pop
add
inc
in
rcrb
leave
addl
cmp
lock
out
cmp
stc
mov
dec
sarl
mov
inc
jecxz
insb
add
cltd
cmp
loop
sub
mov
xchg
int3
jnp
push
in
xor
mov
lahf
mov
mov
adc
adc
adc
ffree
in
stos
adc
pop
popa
xchg
fsub
orl
stc
cltd
sbb
call
mov
jmp
push
push
lods
push
lods
mov
push
mov
push
inc
or
mov
sub
scas
inc
or
int3
rcrb
jno
lods
test
add
mov
pop
testl
pop
sbb
sarb
mov
call
rcrb
aas
pop
cmp
sbb
aas
rcl
data16
sahf
cmp
lcall
es
dec
push
sarb
sbb
in
bound
sahf
adc
mov
sbb
mov
pop
pop
int3
mov
mov
addb
inc
pop
pop
mov
mov
out
or
faddl
mov
aad
inc
scas
mov
es
fistps
decb
mov
jo
xchg
movsb
ret
pop
pop
or
adc
or
and
push
enter
adc
push
pop
ljmp
mov
cmp
aas
mov
daa
gs
sub
in
ret
iret
outsl
movsl
ret
xlat
push
mov
test
and
mov
fsubl
test
and
into
in
mov
ficomps
jb
out
pusha
mov
or
popf
test
sub
jno
arpl
movsb
jmp
sub
push
cmpsl
or
shr
mov
jnp
push
dec
jp
icebp
sbbl
aad
push
fcomps
scas
cmc
lcall
fsubs
jne
jo
iret
mov
popf
xor
mov
loop
pmaddwd
ja
inc
fnstsw
fs
imul
rcll
mov
sub
sbb
pop
hlt
cmpsb
stos
adc
ret
stos
sbbb
cs
out
xchg
test
or
dec
test
fcom
sbbl
call
out
sub
mov
or
jbe
sub
mov
into
inc
clc
rcl
and
aas
mov
leave
pop
dec
daa
xchg
sub
ja
dec
mov
mov
pop
pop
jmp
pop
je
sbb
sahf
movsl
mov
sbb
add
mov
arpl
sti
and
test
sbb
mov
insl
jbe
nop
int3
add
push
mov
push
xchg
xchg
pop
push
imul
in
ds
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
mov
mov
call
or
mov
or
push
push
push
push
call
mov
jmp
jmp
jmp
insl
inc
push
in
js
jge
and
cld
addr16
add
sarl
mov
xadd
sti
or
pop
pop
xlat
cmp
stos
data16
pop
and
mov
jae
hlt
sub
push
jno
notl
test
test
fisttpll
jge
jmp
call
lock
dec
cmp
bound
pusha
sysenter
pop
pop
cmc
pop
mov
int3
aaa
push
mov
out
stos
cmpsb
sti
popf
jg
lds
dec
sbb
xchg
adc
fcomps
adc
pop
and
cmp
aaa
cli
in
xor
mov
in
jo
leave
mov
and
xchg
and
test
mov
insl
xchg
push
int
sarb
jge
aas
lahf
mov
xchg
fildl
insb
cs
dec
xchg
xlat
orl
sub
mov
dec
out
pop
test
sarb
roll
mov
jl
jb
clc
dec
pop
fidivrs
outsb
mov
arpl
or
subl
xor
jle
rcrb
and
and
mov
push
int3
imul
pop
lret
push
mov
pop
mov
adc
inc
adc
sbb
xor
jecxz
sahf
movsl
jb
mov
push
sarl
les
xchg
addb
mov
pop
jecxz
push
fnsave
add
xlat
push
iret
pusha
pop
push
add
scas
mov
sbb
pop
hlt
dec
sub
jae
hlt
sub
xchg
out
cmp
mov
xlat
cmp
addr16
fdivs
push
int3
aaa
jb
jae
daa
scas
pop
movsl
xchg
out
mov
or
in
outsb
push
outsb
in
push
jno
into
ljmp
stos
js
pop
mov
or
mov
dec
push
fprem
cli
and
loop,pn
sbb
cmp
imul
sub
add
jp
jb
inc
gs
lret
ljmp
shr
shrb
outsl
jge
fcomp
cmpsb
cld
mov
leave
push
dec
fsts
out
cmp
subb
dec
sti
addr16
jge
dec
mov
and
movsl
and
pop
pop
mov
mov
inc
jp
movsl
adc
sbb
jae
mov
fwait
out
ret
insl
add
call
pop
pop
outsb
test
cld
dec
stos
mov
movsb
push
sbb
shlb
jbe
or
push
decl
decl
inc
add
test
pushl
shr
mov
xor
shl
or
mov
mov
mov
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
jmp
dec
gs
hlt
addr16
jge
sub
das
std
mov
mov
and
clc
push
xor
push
push
imul
push
xlat
test
lods
fdivl
xor
repz
daa
aam
mov
adc
ss
std
loope
test
jmp
jae
movsb
jne
rclb
dec
cld
inc
ds
in
aas
enter
je
cmpsl
push
mov
jp
inc
add
fs
movsb
sbb
cmp
jbe
clc
pop
jae
jo
call
adc
sti
imul
lret
push
cmp
add
push
dec
test
add
sub
jmp
xchg
mov
xlat
ds
stos
push
push
stos
clc
hlt
lock
fnstcw
out
jg
jmp
pop
or
jmp
lahf
cmc
jb
into
rcl
sti
push
stos
mov
jmp
push
fstp
cltd
adc
sbb
xchg
push
aam
ret
test
cmp
cmp
pop
and
stos
stos
movsb
adc
push
dec
sbb
addr16
cld
mov
in
fisubrs
and
dec
sub
cmp
mov
ljmp
add
inc
fisubrs
mov
fs
and
sub
inc
jns
pop
xchg
adc
mov
sub
jbe
mov
es
push
mov
fbld
add
sub
sub
in
fisttpl
pusha
shr
into
das
sub
mov
mov
imul
xlat
das
jge
pop
leave
push
push
and
mov
xchg
sub
jle
pop
in
adc
cmpsb
and
lret
xor
jle
imul
xchg
sbb
ljmp
addr16
cmp
sub
loopne
cmpsl
jecxz
fisubl
mov
in
out
outsl
pushf
mov
pusha
adc
or
mov
daa
jno
sbb
jno
cmp
sbb
lsl
push
mov
dec
js
sub
add
lds
rcrl
pushf
push
les
jge
cs
xor
xor
push
out
push
mov
pop
dec
dec
repz
leave
addr16
inc
xchg
xchg
inc
lods
clc
repnz
paddsw
jg
arpl
add
clc
push
outsl
mov
jle
add
sbb
adc
push
sub
in
outsl
sub
ds
mov
or
mov
or
push
push
push
push
call
mov
cmp
je
mov
mov
xor
xor
jmp
ret
adc
testb
cmp
sti
hlt
mov
mov
stos
cwtl
cli
add
les
mov
xchg
dec
stos
roll
ret
jl
mov
jns
sbb
cmpsb
inc
push
icebp
lcall
mov
push
fisubrl
sti
shll
bound
out
cmp
in
mov
sbb
pop
or
shrl
sub
in
outsw
sub
adc
ja
push
adc
vpextrw
out
rorl
or
cmpsl
pop
test
mov
ljmp
push
popa
lret
aaa
mov
test
add
pop
sbb
mov
add
clc
iret
pop
xchg
sub
out
pop
push
ret
rclb
aas
repz
stos
mov
mov
or
enter
loope
into
es
xor
clc
add
int3
push
xlat
mov
and
sbb
sarb
mov
mov
lret
push
clc
jno
je
jmp
cmp
test
test
inc
sbb
test
test
outsl
cmc
pop
sub
fiaddl
ds
roll
jle
mov
xorl
pop
aaa
mov
or
push
sahf
rcl
es
xchg
in
or
outsb
lret
push
mov
pop
mov
mov
shl
hlt
push
push
mov
push
inc
aam
xor
inc
insl
insb
mov
stc
or
add
push
or
add
mov
xchg
push
scas
arpl
lods
cli
jmp
sub
mov
and
mov
and
out
lea
js
inc
neg
inc
mov
test
xor
enter
es
cmc
and
adc
jb
aas
test
mov
and
xor
loope
out
loopne
adc
xor
sbb
gs
stc
cmp
dec
mov
cmp
lahf
sbb
fstl
mov
lahf
xchg
xchg
jo
pusha
sbb
mov
jle
jo
mov
push
add
shlb
jg
lods
fsubs
jecxz
sbb
scas
mov
or
lods
test
in
cmp
loopne
add
mov
repz
mov
das
mov
rol
mov
mov
pop
sbb
adc
mov
cmc
xchg
lds
mov
mov
pop
decl
test
decl
pushl
xor
mov
call
or
or
mov
imul
add
mov
mov
mov
jmp
jmp
mov
mov
xor
xor
mov
jmp
lahf
pop
push
leave
push
mov
jge
pop
xor
sti
in
mov
mov
add
xchg
std
ffreep
das
jp
stos
and
dec
mov
out
xchg
cmpl
ss
mov
xchg
es
cmp
xchg
jae
sarl
in
and
pop
test
cli
mov
in
ror
sbb
mov
dec
add
xor
bnd
scas
adc
out
and
add
add
test
sub
xchg
sub
mov
jle
sub
aad
and
jmp
sbb
das
mov
je
sti
mov
inc
mov
aam
stos
jle
and
fisubs
je
or
rorl
or
add
rcrb
add
push
ds
andl
clc
mov
sbb
insb
inc
add
inc
pop
mov
cli
jmp
les
lds
sub
fs
sbb
xlat
js
sbb
in
sti
inc
mov
fidivrl
sarl
lahf
mov
insl
dec
insb
or
repnz
roll
insl
fcoml
mov
lods
imul
dec
shrl
ja
xor
push
lock
push
mov
ds
mov
outsb
loope
roll
or
adc
jae
sahf
fistpl
push
enter
inc
push
js
in
add
sbbb
dec
test
stc
testb
pop
bound
arpl
fisubs
cmp
xchg
push
or
lret
push
stos
in
ret
push
nop
clc
out
xor
out
test
and
scas
loopne
mov
xor
sub
in
out
xchg
cli
dec
xor
dec
sbb
sbb
rcrl
nop
jne
ret
xchg
cmpsl
inc
fdivrp
add
popf
adc
pop
iret
dec
fyl2x
inc
xlat
ja
lds
adc
daa
add
inc
pop
xchg
popa
push
dec
sub
pushf
jg
xchg
sti
stos
leave
in
pop
call
add
sbb
fs
lods
ss
push
inc
into
xchg
jnp
jb
mov
and
cmpsb
push
mov
les
pop
orl
sub
addr16
mov
xchg
dec
in
lahf
call
pop
mov
sub
cmpsb
cmp
xchg
insl
sti
lret
cltd
push
stc
push
outsb
xor
jecxz
add
das
in
xor
xchg
jbe
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
jmp
test
cmp
ljmp
mov
pop
pop
fwait
fs
xor
push
test
lods
outsb
mov
push
and
stc
fcoml
cmc
jle
std
add
iret
mov
fs
popf
test
iret
mov
bound
xor
sbb
xchg
bts
mov
fnstsw
mov
cld
jp
pop
rcll
dec
fs
inc
and
jmp
cltd
lock
int3
imul
outsb
loope
adc
mov
int
shl
mov
or
dec
cmpsl
test
sub
jge
xchg
nop
mov
scas
pop
mov
pop
push
sbb
bound
pop
mov
dec
mov
sub
jae
loopne
sub
mov
push
dec
ret
call
push
push
pop
xchg
mov
stos
mov
push
jge
jl
adc
ljmp
xor
pop
pop
js
lea
sbbb
fmuls
xchg
jns
cld
push
pop
inc
lcall
mov
repz
inc
aaa
or
add
add
mov
popf
cmp
cli
fs
pop
test
jle
scas
xor
pop
push
sub
mov
daa
inc
mov
add
ljmp
shl
aaa
sub
mov
hlt
popa
cld
jge
or
bound
popf
cmpl
adc
loopne
out
adc
xchg
repnz
daa
xor
mov
jns
rclb
dec
mov
test
inc
jecxz
gs
leave
jmp
mov
imul
iret
mov
add
mov
dec
out
pop
mov
shl
shrb
daa
xor
dec
stos
ja
mov
adc
and
adc
sbb
inc
pushf
adc
dec
fnstsw
rolb
das
movsl
push
push
or
cmp
mov
inc
adc
mov
jns
loopne
jno
xchg
xor
or
xchg
xchg
cli
sbb
push
test
jbe
addr16
sbb
gs
and
and
sub
mov
mov
bound
mov
out
cmpsb
aas
cs
je
aaa
push
gs
xor
xor
sub
std
jmp
lea
mov
aaa
adc
aad
mov
and
decl
pushl
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
mov
mov
call
or
mov
or
push
push
push
push
call
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
imul
mov
or
add
imul
mov
xor
mov
lea
jmp
dec
or
popf
lods
scas
mov
mov
enter
sarl
mov
hlt
jmp
pop
mov
cwtl
dec
fsubp
sbb
push
pop
cli
mov
push
and
mov
pop
jns
pop
stc
in
rcll
xchg
cs
adc
cmc
and
iret
andl
ja
les
out
mov
jmp
insb
testl
insl
adc
jmp
in
mov
mov
add
add
mov
movsl
outsl
push
rcrl
pushf
adc
fdivl
leave
cld
cmp
das
sti
jnp
je
std
lret
and
mov
test
int
adcb
lock
cld
in
test
mov
jmp
adc
lds
fidivs
sbb
cli
subb
divl
dec
pop
and
xchg
hlt
push
mov
cmp
out
pop
cld
ret
std
add
push
in
cmp
mov
mov
mov
mov
mov
mov
push
jg
lret
inc
cwtl
mov
jle
loop
cltd
xchg
lods
mov
imul
mov
pop
cli
ret
jmpw
mov
shl
and
mov
sub
nop
jecxz
lret
push
xchg
out
inc
xor
xlat
sub
sub
lods
out
int3
lods
and
neg
loop
adc
mov
call
pcmpeqd
sti
and
in
mov
push
jl
lret
in
popf
pusha
sahf
fldcw
jle
js
add
scas
sub
loopne
pop
rorb
push
mov
adc
pushf
sbb
sti
inc
bound
mov
std
int
stc
nop
iret
mov
iret
scas
in
mov
sub
je
inc
inc
cld
jg
add
movl
movl
movl
movl
mov
imul
mov
xor
mov
sub
mov
lea
mov
xor
mov
sub
xor
push
pop
div
mov
and
mov
or
mov
mov
xor
div
mov
or
xor
push
pop
div
xor
mov
mov
add
add
mov
movl
movl
movl
movl
movl
mov
imul
and
mov
sub
add
mov
or
xor
add
mov
xor
push
pop
div
and
mov
add
or
and
add
mov
mov
add
lea
mov
movl
movl
movl
movl
movl
movl
mov
mov
xor
div
imul
mov
xor
mov
and
mov
lea
mov
and
mov
sub
mov
imul
mov
xor
add
mov
sub
imul
mov
mov
add
lea
mov
andl
jmp
mov
inc
mov
mov
mov
cmp
je
mov
mov
mov
add
mov
mov
mov
mov
mov
movl
movl
movl
movl
lea
mov
mov
movzwl
xor
movzwl
sar
mov
movzwl
xor
movzwl
shl
or
movzwl
mov
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movzbl
push
lea
push
call
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
add
mov
mov
cmp
je
mov
mov
movzwl
xor
movzwl
sar
mov
mov
movzwl
xor
movzwl
shl
or
movzwl
mov
mov
mov
movzwl
xor
movzwl
sar
mov
mov
movzwl
xor
movzwl
shl
or
mov
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
or
je
lea
mov
mov
xor
mov
call
mov
mov
mov
xor
mov
call
or
or
xor
xor
mov
mov
mov
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movsbl
cmp
je
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
movsbl
cmp
je
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movsbl
cmp
jne
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
add
mov
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
cmpl
je
mov
mov
movzwl
mov
mov
mov
jmp
jmp
cmpl
jne
xor
jmp
mov
add
mov
movl
cmpl
je
cmpl
je
mov
shl
mov
movl
sub
mov
movl
mov
cmp
je
mov
mov
mov
mov
mov
mov
mov
inc
mov
jmp
movl
push
jmp
mov
mov
ret
cmpl
mov
mov
movzwl
jmp
movl
mov
cmpl
ja
push
call
adc
orl
add
add
or
adcl
mov
mov
or
mov
jne
mov
mul
ret
push
mul
mov
mov
mull
add
mov
mul
add
pop
ret
adcl
subl
cmpl
je
addl
add
mov
mov
mov
pop
pop
pop
leave
ret
movl
cmp
jae
movl
cmp
movl
jae
shld
shl
ret
neg
mov
adcl
xor
andl
and
shl
ret
xor
xor
ret
