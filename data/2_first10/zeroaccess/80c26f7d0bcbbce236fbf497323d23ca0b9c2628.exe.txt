push
mov
sub
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
cmpl
jne
xor
xor
inc
mov
jmp
adc
push
movl
cmpl
je
cmpl
jne
pushl
push
push
push
push
pushl
pushl
push
call
xor
or
dec
mov
jmp
mov
adc
mov
mov
mov
andl
mov
inc
mov
cmpl
jne
pushl
call
cmpl
jb
mov
and
mov
sbb
andl
or
movl
xor
or
xor
movl
mov
add
mov
add
xor
add
mov
andl
xor
or
inc
mov
cmpl
jne
pushl
pushl
call
cmpl
jb
orl
xorl
mov
sbb
mov
andl
mov
inc
mov
cmpl
jne
push
push
pushl
push
pushl
push
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
subl
xor
dec
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
pushl
call
cmpl
jne
mov
inc
mov
jmp
addl
mov
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jb
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
pushl
pushl
push
push
call
cmpl
jne
mov
inc
mov
jmp
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
xor
mov
mov
mov
mov
xor
mov
add
xor
mov
mov
mov
sub
mov
addl
mov
movzbl
movzbl
sub
mov
movzbl
xor
mov
mov
xor
add
mov
lea
mov
lea
mov
lea
mov
lea
mov
mov
xor
add
push
mov
xor
add
push
mov
xor
add
push
lea
push
pushl
pushl
jmp
mov
cmp
ss
dec
clc
inc
mov
dec
bound
fstpl
bound
sub
pop
add
ja
inc
mov
daa
into
push
hlt
and
xchg
fbstp
icebp
aaa
movsb
add
mov
in
pop
cmp
pushf
mov
addl
scas
sahf
test
js
iret
mov
test
xlat
rcrb
aam
dec
std
mov
in
fbstp
push
pusha
stc
mov
cmp
cmpsb
loope
ret
push
sub
jmp
pop
or
inc
insb
stos
cltd
aad
dec
pop
xor
test
mov
rcrb
out
pop
idiv
xor
lods
inc
xor
cmc
jne
push
push
xchg
dec
cmpsb
ljmp
in
dec
sbb
sub
aad
je
jmp
fwait
test
inc
or
ss
loopne
fimuls
out
test
movsb
fs
cli
xor
stos
rorb
out
stos
add
icebp
shl
lock
and
push
outsl
cmc
adc
call
jg
std
ret
and
test
enter
aad
adc
mov
dec
loopne
jae
mov
int
scas
fdivrp
jmp
daa
fdiv
pop
dec
push
xchg
sbb
popa
nop
pop
jmp
xchg
test
xchg
and
cmp
sub
mov
lahf
cmp
sahf
pop
mov
daa
out
scas
lea
ror
jbe
push
addl
jne
dec
or
push
cmp
dec
inc
pshufw
jne
push
mov
inc
test
sbb
push
push
in
pop
fcmovnbe
sub
jecxz
sub
out
mov
insb
call
xor
psraw
pushf
cmp
fidivrs
daa
xor
lock
movsb
or
ret
jmp
cld
stos
mov
fmull
mov
adc
pop
mov
push
call
sub
stc
or
lea
ret
sbb
cmpsb
xchg
dec
leave
push
and
insb
movsl
fisubs
pop
clc
sub
lods
int
roll
and
xor
jp
mov
stos
push
fisubrl
cli
fsubrl
in
popf
loopne
jmp
add
nop
mov
pop
outsb
push
adc
sub
notb
jb
call
cmc
push
sbb
push
into
mov
jno
mov
cld
daa
mov
jbe
xchg
push
mov
das
add
add
xor
data16
movsl
adc
jae
sbb
sbb
mov
ds
mov
inc
add
add
sbb
sti
aaa
jnp
inc
sub
mov
sub
jno
pop
daa
jle
push
jl
arpl
jge
mov
adc
sbbb
cmpsl
xchg
dec
jne
jg
mov
inc
sbb
add
jnp
mov
cmp
pop
lahf
insb
clc
adc
mov
hlt
pop
daa
fldt
mov
rclb
push
mov
jo
loope
cmpsb
xchg
sbb
push
lcall
ljmp
leave
stos
xor
call
ficoms
in
fidivrl
push
dec
sbb
jae
inc
movsl
ljmp
std
push
psrlq
cmc
shlb
lahf
scas
mov
jbe
dec
xor
pop
ret
lods
lcall
add
je,pt
cmp
subb
mov
inc
pop
mov
fldt
fcompl
cld
pop
in
pop
test
fwait
mov
aad
out
es
sub
sbb
outsl
jne
aaa
rorb
movl
jb
addl
sbb
aaa
ds
add
sbb
iret
lcall
mov
cmc
out
data16
shll
or
add
jb
sub
dec
cmpsl
fucomi
ja
outsl
cs
loop
jl
cs
jmp
jne
jno
mov
pop
cmp
lret
cmp
mov
nop
fnsetpm(287
repnz
jmp
or
ss
pop
mov
insb
stc
or
xchg
hlt
stos
stos
pop
mov
xor
lahf
ret
sahf
cmc
mov
flds
int
jle
pop
fnstcw
jno
out
in
loope
fisttpl
outsb
or
fmuls
fldl
mov
push
outsb
jg
xor
das
mov
neg
sub
pop
add
adc
lods
add
dec
icebp
pop
sbbl
lock
cmp
jl
pop
jbe
cmp
pop
imul
in
or
sahf
jl
jge
xchg
cli
mulb
jb
push
fildll
mov
dec
jno
push
testl
das
jle
loopne
xchg
inc
push
cmp
cld
xchg
cld
and
adc
pop
lcall
lock
xor
sub
hlt
daa
cltd
imul
or
or
xchg
xchg
xor
cld
lock
mov
aam
div
imul
int
or
inc
xchg
stos
daa
aas
pop
mov
pop
dec
mov
lea
loop
jo
add
mov
cld
insl
loope
cli
rcrl
push
or
bound
shr
rcrb
insb
mov
cltd
mov
nop
mov
int3
mov
pushf
mov
inc
or
aam
xor
andl
test
scas
cltd
aaa
cld
sti
xchg
mov
pop
dec
jle
pop
add
jmp
and
ds
xlat
cmp
hlt
cmpb
clc
fisttps
mov
testl
mov
jle
push
movswl
fwait
gs
jne
push
mov
dec
sub
dec
sbb
dec
scas
dec
cli
repnz
cmp
popf
xor
enter
cmp
and
ljmp
mov
pop
leave
lahf
jg
add
mov
pop
mov
sub
loop
cli
cmp
inc
mov
or
sar
bnd
xor
xor
sbb
cmp
hlt
shl
faddl
iret
jecxz
shll
out
dec
mov
push
push
stos
mov
sub
and
stos
add
gs
mov
call
scas
inc
xorl
mov
ljmp
push
cmp
int3
dec
xor
mov
outsb
add
mov
push
negl
add
cmp
int3
in
lret
mov
push
in
fldl
xor
fs
lret
cli
and
mov
lret
outsb
push
xor
push
data16
xchg
sti
in
ljmp
sbb
ret
fstps
mov
into
test
das
lcall
subl
loopne
cmp
xchg
sbb
scas
mov
pop
pushf
adc
stc
jo
addr16
gs
repz
adc
inc
popf
pop
cmp
insl
iret
rorb
in
fwait
mov
ret
push
jnp
jp
std
pop
mov
sub
adc
dec
ret
iret
inc
mov
or
xor
fucomip
lret
or
mov
or
fldenv
enter
repz
inc
addb
and
xor
push
jns
cld
fwait
sbb
mov
push
pop
lret
xchg
mov
mov
pop
and
mov
rclb
out
pop
push
adc
mov
xor
pop
outsb
push
stos
adc
mov
in
cmc
xchg
icebp
jo
xor
and
dec
lret
mov
ret
iret
push
aaa
inc
cmpsl
aas
pop
pop
fs
or
push
sbb
and
mov
les
jg
xor
rcr
aaa
mov
mov
jecxz
std
lret
daa
jmp
pop
dec
pop
sbb
push
sub
orl
push
jg
mov
clc
cltd
stos
push
bound
outsb
pop
int
push
cmpsl
addr16
push
out
mov
dec
or
pop
pop
and
and
cmpsb
addr16
xor
lea
ret
inc
cmpsl
sub
pop
lock
mov
mov
mov
popf
addr16
xchg
fdivs
add
sti
mov
lods
mov
sahf
lret
jne
insb
push
pop
sahf
icebp
das
out
int
add
pop
inc
mov
ljmp
test
dec
xchg
test
fsts
jge
mov
test
ficompl
inc
xor
jae
leave
rcl
xchg
std
push
test
add
rcrl
inc
addr16
jnp
jnp
xchg
jns
add
fidivl
ljmp
popa
xor
adc
lods
loop
cli
dec
stc
dec
outsb
rcrl
sbb
mov
adc
fs
cmpsb
xchg
xor
gs
and
int
vpunpckhwd
add
sub
ljmp
daa
mov
push
nop
enter
nop
decl
enter
inc
stos
xor
pop
jmp
mov
xchg
lea
mov
imul
clc
out
pop
out
ss
mov
mov
je
mov
lds
enter
mov
push
lcall
and
loopne
daa
int
mov
adcb
sub
cs
cmp
jnp
jno
xor
fcmovnb
xchg
mov
or
jmp
popa
js
mov
dec
mov
rolb
mov
fdivl
out
fisubl
ficoml
in
adc
add
loope
shll
insb
test
or
mov
aad
stc
and
jb
fbld
pop
or
pop
or
xor
pop
jae
mov
ss
mov
xchg
repnz
repz
xor
stc
push
push
and
mov
pop
movsl
popa
jl
call
popa
or
loopne
fdivrp
mov
pop
aas
movsb
fdivr
mov
lods
mov
xchg
jmp
aad
icebp
scas
and
sbb
insb
ja
cmp
pop
je
pop
iret
imul
cmp
sbb
cmpsb
mov
aas
mov
sub
ja
mov
inc
or
push
jp
out
pop
stc
andb
jl
xor
pop
call
icebp
aad
insb
mov
cmovle
adc
xchg
adc
arpl
fndisi(8087
lahf
rolb
pop
xor
aam
and
fistpl
inc
icebp
mov
jne
mov
cmp
push
push
mov
imul
and
test
or
ds
or
lret
std
les
imul
or
add
mov
inc
jp
gs
repz
jnp
inc
int3
dec
mov
adc
and
cmpsl
cmp
sub
into
mov
inc
fdivl
push
jl
in
mov
jmp
cmp
lock
lret
fs
fwait
test
xor
mov
cmp
into
sbb
js
imull
in
rol
add
add
subl
adc
adc
xchg
adc
aad
mov
inc
pop
jns
jns
outsl
and
push
test
out
push
xor
sub
cmp
pop
fsubrs
mov
xchg
mov
xor
push
mov
pop
dec
lret
and
into
push
sub
sub
rorl
jb
aad
jne
ljmp
nop
icebp
mov
imul
add
ss
pop
outsb
or
jecxz
ljmp
int3
lcall
sub
out
cld
push
jl
mov
lahf
jno
sub
loopne
pop
je
push
push
pop
push
fistpl
adc
sahf
pop
push
push
mov
scas
ret
mov
mov
inc
aaa
je
subl
dec
daa
or
lret
pop
xor
imulb
or
rolb
mov
in
xchg
push
push
insl
pop
movsb
pop
lret
cmp
and
mov
xor
scas
lret
push
lock
in
xor
xchg
aaa
enter
push
and
cmp
ret
test
test
lds
or
push
pusha
es
xchg
dec
sub
sti
clc
sti
shll
les
mov
leave
nop
and
mov
leave
popf
das
out
cmp
jo
lds
arpl
mov
aas
addr16
xor
mov
jnp
or
loopne
xor
add
pop
testl
mov
lea
dec
fwait
scas
out
repnz
mov
pop
aam
imul
ja
sub
dec
adc
xchg
dec
in
out
xor
cli
cld
es
std
adc
cld
and
hlt
divl
pushf
lret
pop
dec
mov
sti
dec
jne
cltd
jmp
test
cmp
jge
inc
add
and
jp
cmp
pop
iret
in
or
fwait
out
xchg
inc
sub
out
cltd
call
popa
scas
cmp
push
cmc
adc
sbb
stc
repz
outsl
sbb
cmpb
jae
dec
push
push
insb
push
pop
pop
push
fstl
inc
enter
pop
je
adc
lea
cmc
inc
movsb
sbb
push
and
mov
loopne
and
mov
hlt
jmp
dec
jo
mov
pop
repz
lret
dec
in
mov
xchg
in
das
jg
movsl
or
mov
or
xor
lock
and
pop
cmp
add
repz
jae
sahf
push
out
je
dec
xchg
popf
mov
pop
mov
push
aaa
lret
inc
jo
sub
jmp
mov
adc
test
cmp
test
mov
pop
xor
lods
addl
daa
in
jmp
jo
push
jl
dec
jbe
xor
mov
dec
mov
mov
daa
or
xchg
mov
mov
jge
out
dec
scas
mov
cwtl
aad
nop
sub
mov
inc
push
fsubp
lret
inc
mov
xchg
push
cmp
ret
mov
mov
dec
addr16
jmp
call
ss
lods
lcall
imul
int
xor
aam
cld
ret
test
imul
adc
popf
pop
pop
aaa
mov
lods
and
cmp
xchg
testl
xor
out
add
xor
mov
mov
jle
test
pop
loope
lods
psllq
fwait
or
cmp
push
repz
jecxz
cmpsl
notl
pusha
std
push
cmp
jmp
arpl
xor
or
imul
pop
movsl
sbb
stos
fisubs
aas
cltd
lods
cmpsb
fldenv
pop
bound
pop
xchg
xchg
sbb
or
arpl
sbbb
movsl
pop
leave
mov
cmp
je
mov
jno
xchg
mov
pop
addr16
mov
outsl
adc
das
popf
and
jne
sub
fimull
nop
xlat
mov
inc
inc
cmpsl
sub
lcall
push
cmp
dec
sbb
addr16
lret
xchg
xchg
cld
mov
out
cld
in
inc
lcall
dec
dec
ljmp
inc
movsb
push
ljmp
pmaddwd
rclb
push
aad
fimull
add
cmpsb
or
scas
and
sbb
mov
xor
ret
into
push
stc
mov
inc
loope
sbb
mov
iret
or
adc
outsb
fs
jbe
mov
data16
pop
xor
push
clc
push
or
fidivl
into
in
mov
adc
dec
cmc
adc
stos
xchg
icebp
test
repnz
out
lods
sti
xor
xchg
fisubrl
negb
sbb
inc
lds
push
jmp
cmp
adc
jbe
cmp
xchg
mov
mov
rclb
adc
xchg
repnz
jp
cli
xchg
jg
call
aad
orl
out
fdivrl
cmp
push
enter
mov
aaa
push
ja
iret
jbe
ret
adc
xor
stos
mov
outsb
xor
scas
jge
daa
dec
sbb
jo
aaa
jecxz
push
jp
into
lods
lods
ljmp
into
jae
test
into
les
jne
push
push
mov
pop
scas
int
xchg
inc
inc
or
shrb
cmp
push
or
aam
jmp
inc
inc
in
inc
push
fldenv
cs
repz
mov
cmc
es
test
stos
jg
pop
push
das
les
int3
scas
or
dec
hlt
clc
std
xchg
insb
push
dec
dec
flds
push
test
push
cltd
pop
rcl
push
out
ret
push
icebp
mov
in
jg
mov
fwait
and
aaa
shr
fwait
pop
xor
pop
data16
mov
out
pop
dec
and
fistpll
cmp
lods
fs
adc
repz
enter
pop
push
mov
sti
aad
pop
dec
pusha
pop
insl
xchg
lret
in
sub
push
adc
scas
repz
push
insl
loope
sbb
inc
pop
jge
mov
mov
xlat
mov
pushf
pushf
cs
sbb
dec
movsb
pushf
add
mov
roll
movb
mov
pop
jmp
mov
jbe
test
push
pusha
ret
push
jne
jnp
jecxz
pop
push
lcall
xchg
adc
pop
cmp
xchg
decb
fwait
sbb
sbb
sub
insl
and
orb
fistpl
dec
mov
jl
cmp
mull
mov
int3
mov
gs
test
lret
sbb
adc
fs
std
dec
je
push
clc
xor
mov
neg
fwait
stos
adc
mov
lods
or
xor
jmp
pop
push
lods
mov
jp
repz
xor
sahf
fwait
cmp
mov
cmc
adc
aad
jl
fstl
mov
inc
adc
jl
ljmp
xchg
hlt
adc
push
inc
cmp
xchg
jle
mov
mov
mov
icebp
cs
mov
sub
jmp
shl
xchg
popa
les
les
addr16
push
stos
in
sarb
js
and
cmp
sub
shlb
pop
in
js
ss
lock
pop
mov
cli
adc
ljmp
test
fdivrp
inc
pmullw
aaa
or
stc
dec
jns
cmpsl
push
mov
jle
and
les
or
loope
stc
mov
pop
add
jmp
ret
pop
sti
push
push
add
cmc
aam
lods
push
push
or
xor
sub
inc
imul
nop
mov
lds
ljmp
dec
aam
jb
test
int
lods
xor
mov
fidivrs
mov
fs
fwait
adc
mov
in
sti
lds
jns,pt
loop
in
idivb
test
xor
ds
jmp
cwtl
xchg
aaa
xchg
jmp
negb
jp
push
and
push
lahf
xor
mov
bound
movsb
add
cmc
leave
sbb
xor
loop
mov
mov
add
fwait
insl
ret
pop
pop
mov
sbb
cmp
rcll
inc
cld
mov
std
xchg
jns
cmp
sahf
sahf
aam
adc
xor
pusha
cmp
mov
in
pop
jne
jbe
test
mov
pop
push
bnd
pop
dec
in
and
mov
mov
in
push
jmp
mov
xchg
and
sub
and
xor
add
hlt
movlps
push
imul
aad
clc
cmc
mov
and
sbb
or
cmp
xchg
or
or
aam
mov
dec
inc
dec
or
lods
xorb
mov
nop
cmp
fwait
push
cwtl
push
lods
xor
ret
xor
imul
xor
push
cmp
jne
jne
icebp
int3
aaa
xchg
pop
int3
enter
iret
add
pop
pop
xor
scas
or
outsb
dec
out
cli
or
mov
fldcw
xor
insb
sbb
ljmp
pushf
add
imulb
pop
pop
mov
repz
nop
insb
movhps
push
xorb
dec
pop
inc
push
push
fistl
mov
sub
inc
dec
jle
aam
les
test
shlb
mov
or
scas
xor
in
fucomi
jnp
cmp
xchg
mov
xor
orl
jns
mov
xchg
sub
xchg
sub
lds
in
cmpsb
pop
shrb
std
and
inc
call
push
lret
jno
fs
jp
in
inc
inc
adc
xchg
out
sahf
xor
add
or
nop
xchg
adcb
dec
cmova
and
icebp
ds
movb
inc
or
call
mov
add
mov
mov
es
push
mov
jmp
push
and
and
aad
inc
sbb
das
out
and
adc
adc
xor
and
in
loop
pop
cmp
ds
je
sub
scas
in
sahf
or
aad
cmp
rol
data16
pop
dec
push
repnz
xor
inc
call
test
pop
jnp
inc
or
pushf
cmp
ficomps
lds
xchg
jo
xor
cmp
add
sub
cmp
xchg
mov
sahf
movsl
xchg
lahf
shrl
cli
cmc
xor
fadd
pop
jge
sub
lret
mov
mov
mov
push
jl
pop
imul
ds
add
rorl
inc
inc
mov
pop
pushf
pop
mov
or
icebp
je
fildl
jecxz
dec
sbb
das
scas
call
xchg
cmp
pop
pop
mov
mov
mov
mov
sub
mov
inc
sbb
xchg
cltd
adc
stos
cmp
xchg
rolb
sahf
hlt
jg
inc
int
jnp
mov
jns
js
rorb
pop
mov
add
es
fsubs
jecxz
push
inc
mov
mov
jge
leave
xor
add
xor
rcrl
add
or
je
cmp
add
mov
mov
sbb
or
cmp
cmp
pop
arpl
int3
dec
pop
mov
int3
out
add
sub
cmp
push
repz
int3
loop
pop
stos
push
adc
and
bound
js
inc
mov
std
loopne
push
dec
jb
sub
mov
jns
js
loopne
lret
push
or
stc
push
mov
add
outsl
dec
stos
or
cmc
sbb
push
xchg
arpl
adc
add
push
mov
fsubs
dec
push
cmpsl
imul
sbb
fs
and
dec
and
aam
pop
push
gs
mov
sub
cmp
decl
cs
mov
je
jl
add
jae
lods
hlt
jmp
sub
aaa
adc
and
mov
inc
mov
nop
inc
std
loopne
js
push
adc
mov
imulb
pop
sbb
mov
cmpsl
icebp
inc
cmpsb
je
push
sub
out
leave
push
ds
and
mov
pop
sub
mov
iret
imul
cli
cld
inc
cmp
mov
mov
mov
imul
mov
stc
mov
inc
push
movsl
pop
pop
inc
inc
lods
shlb
pop
sub
add
gs
das
test
jno
or
imul
push
leave
dec
fcoml
add
test
int3
push
aam
stos
shrb
sbb
xchg
cmp
fisubl
lea
or
in
inc
mov
mov
enter
adc
adc
add
push
ret
jg
inc
mov
mov
add
cmp
ret
mov
xchg
and
popf
or
add
jle
push
add
jno
mov
xchg
into
push
mov
ljmp
fisubs
or
xlat
sti
xor
test
lds
xlat
adc
outsb
sti
inc
fs
cli
sbb
pop
sbb
cmpsl
stc
cltd
fs
mov
inc
daa
mov
mov
pushf
jae
push
icebp
add
js
inc
mov
ret
adc
lcall
lea
pop
outsl
repnz
aaa
sbb
xorl
xchg
push
dec
lahf
int
jns
pop
mov
and
cmpsb
ret
xchg
and
in
movsb
les
jl
es
sbbb
sbb
repnz
jl
repnz
movsl
sub
inc
jns
pop
jne
adc
scas
lock
in
aad
negl
xchg
jnp
dec
loopne
push
stos
jb
mov
push
mov
lods
mov
cli
stos
push
cmpsb
cltd
repz
jle
imul
in
fidivl
jb
rcrb
add
sub
out
sbbl
repnz
push
mov
cmpsl
test
or
mov
add
jp
lea
jnp
inc
xor
pop
into
outsl
inc
negb
aad
dec
scas
xchg
xor
lods
jne
push
push
mov
push
shrl
out
sti
jno
outsl
mov
pop
pop
xlat
fadd
sbb
push
ret
cli
pop
xchg
and
cmp
pop
cli
or
cwtl
lcall
int
inc
shlb
cmp
jne
mov
inc
sbbb
cmpsl
adc
ss
add
jae
pop
test
adc
sti
test
push
jmp
xchg
stos
mov
pushf
add
sbb
fistps
aas
push
cmp
repz
pop
fcoml
jl
cmp
sahf
mov
push
or
mov
mov
jb
jbe
mov
cltd
movsl
mov
cmp
cmp
or
lods
out
test
repz
sarl
out
cs
rcrb
lods
aad
ror
mov
loopne
lods
sub
test
ljmp
or
lds
sbb
mov
inc
shlb
xor
xchg
and
andb
dec
jbe
cmc
xchg
clc
cmpsl
cmp
ret
fidivl
push
cmp
and
jne
adc
leave
jg
cld
arpl
add
xor
jle
int3
push
popf
std
icebp
sbb
pop
dec
mov
sub
pop
inc
adc
fucom
mov
sbb
aad
enter
ss
je
jg
mov
xor
inc
xchg
sbb
pop
dec
push
mov
icebp
mov
mov
mov
push
jle
add
shrb
lock
fs
jmp
enter
pop
add
mov
dec
out
icebp
test
ss
outsb
sbb
sub
ljmp
cld
addr16
lahf
fsub
add
loop
pushf
jb
push
fmuls
pusha
and
scas
xlat
xchg
cmp
xor
inc
movsb
mov
fcom
aam
jns
gs
inc
loop
or
neg
adc
cs
icebp
sub
xor
cmp
add
cmp
rorb
pop
xor
xchg
mov
aaa
dec
xor
mov
mov
dec
cmp
icebp
pop
xchg
sub
jns
adc
shlb
lret
mov
arpl
and
loope
rclb
fsubs
pop
es
push
hlt
xchg
xchg
jp
movsb
mov
cwtl
xchg
fcompl
pop
test
xor
ret
inc
cwtl
or
aad
mov
loope
dec
fdivrl
lret
arpl
out
in
jl
push
insl
xchg
testl
imul
lock
sub
pop
addb
loop
ljmp
sbb
sbb
ljmp
adc
out
enter
bound
fldt
data16
xlat
fwait
or
aaa
jecxz
xchg
fs
shr
cmc
inc
mov
test
dec
mov
mov
imul
xor
ljmp
and
mov
fdivr
push
xor
scas
and
fsubs
xchg
mov
mov
popf
or
aad
push
outsl
loop
shlb
das
pop
mov
out
and
sbb
mov
into
push
xchg
clc
mov
push
int
dec
shl
mulb
out
fwait
pop
popa
dec
cltd
cmc
push
mov
jbe
js
lock
stos
aad
fistpl
test
dec
out
cmpsb
dec
jecxz
xor
fwait
mov
stos
insl
cmp
or
lds
stos
xor
cmp
fldcw
imul
cli
sub
mov
mov
test
xor
mov
call
adc
or
outsb
arpl
ja
negb
cmc
fisubrs
xchg
lock
insb
dec
fisubs
pop
or
sub
mov
sbb
and
jno
mov
mov
call
mov
in
imull
arpl
mov
test
sub
push
mov
fdivs
fdiv
scas
xor
dec
sub
xchg
dec
dec
fstps
sub
dec
and
int3
mov
jns
add
cld
jp
mov
dec
sub
jge
shlb
xchg
sbb
jle
jmp
push
push
xchg
add
aaa
jg
ret
xchg
cmp
shlb
sti
xor
sti
and
lock
mov
push
nop
popa
call
push
leave
jmp
lds
out
mov
shrb
push
stc
and
add
mulb
pop
aad
lret
jecxz
cmpsb
jb
enter
enter
and
xchg
xchg
in
or
call
push
adc
scas
sbb
mov
dec
add
test
or
fbld
push
addr16
shrl
fsubrl
jne
cmpsl
or
dec
push
rcl
in
and
dec
scas
and
leave
imul
push
and
call
cmc
les
aaa
ss
sahf
data16
fstpl
je
js
scas
pop
xor
mov
fcompl
out
jbe
mov
push
and
imul
xchg
lods
sahf
movsb
mov
sbb
mov
dec
inc
into
pop
jl
sbb
in
mov
stos
das
adcl
jo
movq
cmc
paddq
ljmp
jno
pop
inc
pop
scas
popa
ficompl
mov
leave
jge
dec
sub
mov
vmread
test
xor
cmp
pop
stc
movsl
push
xor
ja
ljmp
inc
stos
sbb
mov
ret
fsubrl
push
pop
xchg
sub
leave
jo
mov
push
rorl
inc
test
mov
mov
sbb
cmpsl
jbe
add
xor
test
push
std
bound
js
das
std
xchg
adc
cmp
ds
movsl
call
shlb
lret
xlat
pop
jp
push
jnp
inc
sub
gs
outsl
mov
push
sbb
dec
add
sbb
stos
pushf
sub
mov
push
bound
or
cld
jp
mov
jo
insb
or
cmp
movsb
cmp
push
in
out
jecxz
fdivr
hlt
mov
mul
inc
xchg
aam
imul
scas
inc
and
sub
cmpsl
xchg
loop
mov
movsb
icebp
inc
outsb
push
add
rorl
fmuls
jnp
jns
insl
stos
insb
arpl
inc
sbb
sub
mov
pop
aas
adc
ret
dec
jg
outsl
out
hlt
adc
xchg
sbb
jmp
inc
pop
cs
leave
cmp
sbb
sbb
mov
fnstcw
sub
dec
and
mov
mov
loopne
in
sub
cmp
sbb
sub
lcall
ja
je
sub
loope
inc
mov
jo
sub
pop
mov
push
push
push
add
adc
jbe
cmpsl
icebp
add
loope
push
add
cmp
ds
sbb
test
lock
mov
push
pushf
push
pusha
fwait
pop
jno
jmp
adcb
iret
mov
imulb
jmp
sbb
pop
movsl
int3
xchg
mov
into
gs
loopne
repnz
xchg
jno
add
roll
cmp
bound
xlat
xchg
rcl
in
cmpsl
fstl
jbe
add
add
add
call
inc
shlb
movb
push
mov
add
push
mov
mov
pushl
call
mov
lea
mov
mov
mov
mov
mov
test
je
lea
mov
mov
mov
mov
mov
mov
mov
sub
mov
xor
mov
sub
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
pushl
xor
sub
mov
jmp
lods
mov
ja
mov
fsubl
pop
bound
pop
bound
pop
pop
and
js
pushf
mov
mov
cs
lret
pop
mov
pop
fs
cld
ret
cwtl
fsubs
mov
orb
sbb
xchg
mov
sbb
dec
pop
fdivp
out
loopne
scas
dec
insb
int3
pop
imul
dec
test
jg
bnd
dec
xchg
sub
and
jo
jbe
scas
mov
enter
aaa
ljmp
sbb
femms
or
rcrl
fiaddl
jg
mov
jne
leave
int3
rep
aad
and
sbb
xor
jb
or
notl
scas
insb
repnz
imul
outsl
fsubl
push
jl
arpl
lret
mov
aam
jo
mov
and
fs
movsl
mov
push
pop
scas
xor
jg
fcoml
sbb
dec
stc
call
fs
bound
sub
fiaddl
mov
sbb
and
ja
in
sub
mov
incb
cmpsl
cld
sub
xor
cmc
pop
clc
in
xchg
testl
cli
sbb
mov
repnz
and
xlat
sub
scas
push
sub
ret
adc
sub
and
leave
ljmp
ja
dec
mov
jmp
mov
in
es
pop
mov
xor
cmp
mov
sbbl
imul
pop
xor
enter
aad
stc
nop
jnp
dec
cmp
fildll
mov
popaw
stos
add
add
jno
mov
cmp
push
out
inc
dec
dec
adc
xchg
mov
imul
and
mov
mov
mov
out
push
jecxz
push
mov
in
insb
push
pop
sbb
fisttps
mov
out
cmp
stos
mov
mov
or
mov
xor
jle
out
fs
sbb
push
int3
cltd
adc
or
push
lock
sbb
and
adc
inc
aam
arpl
packuswb
adc
lret
mov
lds
push
mov
cmp
inc
add
xor
sbb
adc
int
ss
cmpb
or
xchg
std
idivb
int
xchg
out
jbe
arpl
ds
popf
add
sti
lret
mov
mov
mov
icebp
leave
jo
dec
or
roll
out
mov
fcomps
fcomps
push
inc
movsl
jl
les
adc
mov
mov
mov
add
xchg
dec
sbb
jge
cmpsl
jno
ljmp
mov
test
jns
xchg
scas
repnz
xchg
mov
add
shrb
clc
bound
dec
outsl
and
int3
cmp
stc
std
or
mov
sbb
xchg
in
lods
das
ror
sti
rolb
nop
inc
movsl
sbb
enter
jp
xchg
std
les
push
cmp
xor
sub
addr16
cld
pop
test
sbb
rorl
shrb
sar
nop
fstpt
add
push
add
adc
jl
or
fildl
daa
pop
call
add
pop
jb
cmpsb
ss
mov
mov
in
jge
out
data16
or
outsb
and
and
std
jnp
jbe
adcb
out
xchg
mov
cmc
lret
icebp
xchg
mov
rcl
xor
jns
pop
fistps
push
dec
mov
xchg
pop
rol
lods
mov
and
les
or
popa
std
in
mov
popa
mov
sarl
lds
xchg
jno
pop
cwtl
xchg
or
orl
cli
stc
repz
inc
sbb
arpl
and
cmp
mov
cmpsb
cmp
push
or
push
xchg
scas
lret
lahf
nop
mov
aam
rcll
nop
in
js
test
dec
add
mov
mov
jbe
and
sbb
fmull
adc
outsb
aad
mov
scas
xor
stos
lret
pop
and
push
fmulp
inc
into
and
jnp
cmpb
add
push
roll
sub
jbe
repnz
sbb
arpl
sti
jnp
shlb
dec
sti
fucomi
pop
push
mov
xchg
mov
xchg
jl
add
lods
lret
xchg
mov
push
pop
mov
mov
cmp
cs
xchg
cmpsl
arpl
lods
rcrl
fiadds
xchg
sub
lret
in
add
sbb
mov
mov
and
cmp
add
call
in
mov
adc
jb
jg
jno
add
shrb
hlt
negb
or
pop
cmp
sbb
push
xlat
push
jp
push
pop
adc
xchg
cmc
jb
mov
or
mov
pop
adc
pop
in
sbb
push
push
jg
xchg
filds
push
xor
mov
dec
cmp
cli
cmpsl
cmp
outsl
sub
test
jno
add
push
inc
pusha
or
mov
popa
ss
mov
es
loope
sub
xlat
inc
and
mov
xor
sub
shrb
and
lea
mov
push
jb
mov
jp
mov
mov
stos
outsl
call
ror
lcall
jns
xchg
xor
outsb
jmp
add
sub
loopne
clc
repz
mov
adcb
pop
std
sub
push
cmp
lcall
fs
push
xor
loop
jbe
xor
add
and
push
mov
fs
adc
xor
mov
ret
mov
rcr
aam
fists
push
push
mov
sbb
pop
cli
jns
push
icebp
test
aaa
inc
add
pop
stos
aas
lcall
xor
stos
xor
cmp
jne
xchg
xchg
jae
dec
scas
and
cmp
and
mov
jmp
mov
adc
or
test
xorl
stos
push
imul
mov
cld
jns
decl
aam
jmp
and
or
push
and
les
test
pop
pop
out
repnz
or
cmp
lcallw
in
push
xchg
mov
sbb
into
jl
sbb
push
or
and
daa
cs
bound
outsb
nop
add
cwtl
lret
out
leave
jb
inc
dec
mov
inc
in
pop
push
das
mov
ja
xor
aam
sahf
repnz
into
sbb
xor
push
xorl
in
sub
jae
xchg
xchg
push
push
xchg
or
add
pusha
xchg
in
jmp
fdivs
stos
leave
xchg
lock
cmp
lods
jnp
stos
adc
push
mov
lret
and
pop
cmpsl
sub
mov
movsb
xchg
jne
loopne
leave
and
mov
mov
psubb
mov
mov
adc
dec
and
mov
inc
rclb
mulb
or
xchg
fwait
out
mov
jnp
xchg
pop
dec
mov
fdivl
jo
jmp
jle
fsubs
and
call
xchg
movsl
repnz
adc
js
test
dec
or
nop
jo
cltd
xchg
test
jae
aam
pop
rcrb
mov
negb
fiadds
fwait
stc
ss
andb
outsl
adc
sahf
mov
imul
les
pop
sti
movsb
mov
mov
xor
jl
lret
sarl
cli
fiadds
adc
cmpl
lahf
shll
out
jnp
js
inc
cmpsl
mov
lcall
mov
mov
sub
fsubrl
and
fwait
xor
xor
cmpsb
xchg
or
movsb
ficompl
ja
dec
xor
es
jecxz
daa
scas
cltd
add
adc
lahf
fimull
cmp
jmp
and
mov
or
in
ja
mov
and
movsb
and
stos
cmp
mov
mov
ficompl
push
sub
je
jmp
repnz
sbb
sbb
sub
mov
sahf
fmull
pop
lock
ljmp
cmp
cmp
call
pop
jecxz
movsb
xor
adc
test
sub
enter
divl
in
xor
mov
add
push
js
pushf
and
xchg
in
pop
cmp
cltd
insl
cli
jns
sub
punpcklbw
xor
imul
xchg
fcoms
cmpsb
into
int3
mov
xor
mov
adc
test
adcl
add
inc
mov
or
int
add
mov
pushf
test
sbb
dec
push
aas
nop
clc
dec
cmp
shrl
ret
mov
pushf
loopne
jne
jae
popa
dec
imul
scas
mov
sub
scas
push
or
dec
stos
xchg
insb
mov
pop
jp
mov
and
enter
popf
cmp
out
stc
push
cmp
dec
add
in
aad
test
mull
sbb
pop
lock
adcb
ds
insl
xchg
dec
leave
outsb
dec
xor
in
push
sbb
fwait
jbe
mov
fstps
cli
out
cltd
outsb
pop
mov
fcmovb
loop
or
popf
and
or
ljmp
xchg
popa
loopne
push
jp
push
aaa
fisttpl
jbe
js
loope
daa
sbb
pop
outsb
in
jne
repnz
stos
jno
mov
mov
lahf
test
je
iret
xchg
fidivl
mov
lret
shl
adc
lret
and
ds
test
jne
pop
adc
adc
dec
dec
cwtl
and
sbb
rclb
mov
xchg
push
cmp
sbb
xorb
mov
xchg
dec
stos
mov
lods
ret
faddl
add
sbb
dec
cmp
inc
lret
loop
adc
xor
in
xchg
dec
jo
mov
shlb
pop
mov
or
sbb
imul
ds
pop
out
xor
lret
sbb
mov
dec
fimull
ss
iret
fnstsw
outsb
test
mov
and
pop
in
add
sub
jmp
mov
std
mov
mov
sub
out
subb
stos
pop
xchg
cltd
pop
ret
pop
pop
addl
mov
or
pop
je
lret
adc
outsl
jl
add
xor
fs
mov
int3
test
pop
xchg
sub
int3
inc
ret
adc
imul
inc
jmp
out
mov
fsubrs
std
jo
push
je
mov
cmpsb
in
xor
jge
and
dec
mov
adc
iret
shll
dec
int
pop
or
push
sub
sbb
mov
imul
xchg
repz
push
andl
sahf
pop
cmp
hlt
fs
idivb
nop
dec
mov
fmull
mov
mov
ss
mov
xor
mov
bound
js
in
subb
repnz
outsb
hlt
jp
jne
adc
out
outsl
sbb
jno
cli
cmp
std
daa
xor
add
adc
add
add
shl
mov
bound
mov
inc
loop
inc
pop
insb
fistpll
push
mov
xchg
and
shll
pop
aas
cmc
mov
jmp
mov
jo
mov
hlt
aam
or
adc
scas
lock
mov
ret
syscall
ret
mov
mov
jge
in
xchg
push
push
bound
lret
sub
sahf
notl
subb
popa
in
push
sub
icebp
sub
push
pop
xor
andb
xlat
icebp
sub
add
xchg
shlb
mov
sarb
and
sub
lods
vandnps
cmp
stc
movsl
into
inc
int3
inc
lds
ljmp
mov
push
mov
xor
nop
jl
jbe
add
dec
dec
movsl
sbbb
cwtl
ljmp
fmull
fstl
fbld
loope
jge
not
pop
jnp,pt
imul
cmp
popf
pusha
mov
add
or
out
fstl
add
sbb
adc
test
mov
scas
sarl
xor
adcl
add
testl
lock
jnp
xor
xchg
mov
adc
inc
adc
sbb
sub
mov
cld
cwtl
cmc
ljmp
pop
add
mov
fisubs
jg
or
push
push
aam
stc
out
and
stos
xchg
lret
pop
aad
push
mov
repz
ja
sub
mov
cmp
shl
and
sarl
mov
jp
enter
stos
pop
std
cwtl
lds
and
pop
leave
or
ja
and
movsl
adc
arpl
inc
outsl
adc
dec
movsb
hlt
aas
mov
mov
xchg
xor
pusha
adc
lock
mov
cltd
or
jno
mov
xchg
les
jge
mov
aam
xor
imul
sub
shlb
ret
scas
aam
xchg
or
sbb
nop
jmp
inc
mov
and
mov
add
imul
or
pop
sub
and
pop
push
int3
dec
cmp
aas
outsl
add
cmp
int
das
rcrb
sub
cli
sahf
mov
bound
and
mov
sub
mov
sub
push
inc
iret
out
push
and
daa
jno
ficoms
xchg
cld
add
rorl
jmp
and
pop
add
dec
mov
out
les
cmp
out
jge
lcall
out
inc
in
out
inc
xor
jp
mov
lret
or
imull
lcall
mov
aad
dec
mov
pop
inc
fwait
xor
cmp
or
inc
jne
adc
js
adc
iret
jge
sbb
dec
push
mov
cwtl
jbe
jo
jle
jnp
testb
ret
aad
add
popf
test
mov
cmp
push
fwait
lds
stc
into
aas
popf
decb
pushf
or
int
outsl
mov
divl
sbb
cmp
mov
leave
pop
jb
push
aas
inc
ss
sarl
inc
scas
jl
fwait
cmp
xorb
push
dec
imul
inc
adc
enter
sbb
sbb
mov
testb
orl
test
test
cwtl
stos
mov
dec
stos
mov
xchg
xchg
jne
push
lret
fldcw
xlat
cmp
or
lods
sub
push
mov
lahf
mov
pandn
repnz
dec
mov
or
shlb
fstpt
dec
jg
jge
movsl
dec
lret
and
sarb
fsubp
mov
ret
xor
jmp
dec
xor
lret
sub
in
ljmp
mov
pop
adc
cmp
inc
and
pop
fldl
ljmp
fisubs
or
dec
mov
adc
inc
fsubrl
loopne
add
pop
xchg
or
rorl
or
lahf
xchg
mov
sub
cmpsb
cmp
cli
inc
jne
insb
lcall
int
iret
jmp
pop
outsl
inc
in
adc
pop
outsb
mov
pop
out
mov
push
jb
and
sbb
test
xor
mov
in
repnz
ljmp
dec
mov
mov
jae
adcl
xchg
sub
add
mov
fcomi
jns
xor
cmp
imul
repnz
fdivs
cld
data16
adc
out
jmp
pop
aas
jne
sub
jno
sub
shrl
jmp
movsb
inc
mov
inc
or
jp
pop
out
push
loopne
fildl
es
mov
inc
daa
sub
pop
ffree
pop
movsb
es
mov
xor
jbe
sbb
pop
mov
jnp
and
icebp
mov
rclb
xchg
xor
dec
ret
shlb
push
test
jp
xor
rorb
sti
or
ret
xchg
in
imul
cmpsb
push
push
adc
jl
inc
leave
mov
scas
rcr
popa
pop
and
cltd
pop
jb
or
cmpsl
jnp
out
dec
xchg
pop
mov
jae
movsb
insl
add
mov
fmul
or
push
scas
pop
daa
sbbl
xchg
and
pop
outsl
mov
std
sub
sub
aam
xchg
lret
std
fsubl
jmp
pushw
out
xor
add
nop
cmp
jl
mov
mov
push
fisttps
sbb
and
push
in
mov
pmaxsw
test
push
fldlg2
mov
inc
cld
out
sub
rclb
and
pop
mov
hlt
adc
cmc
mov
jno
jg
pushf
sahf
iret
cli
ret
mov
jo
pop
inc
in
pop
jg
loopne
mov
push
and
cmpb
sahf
in
lds
rcrl
dec
movl
mov
sub
aaa
jb
sub
and
xchg
or
jne
push
lret
and
sbb
dec
ret
cmc
sbb
add
nop
jae
pop
stc
add
mov
addr16
into
mov
and
fwait
ret
xchg
mov
lods
outsl
stc
mov
gs
je
fs
push
mov
mov
sub
and
cmp
add
jecxz
enter
push
out
test
aad
cltd
adc
xchg
adc
ficompl
jl
cli
dec
jle
out
loop
shl
sub
in
pop
add
gs
mov
addl
xchg
cld
movsl
rolb
lahf
push
cli
xor
push
addr16
cmp
cmp
and
jmp
divb
movb
inc
gs
iret
cmpsl
cld
mov
sti
data16
xchg
sbb
insb
out
out
pop
cld
jae
xor
test
aas
or
mov
mov
jbe
ret
xchg
test
movsl
out
loopne
hlt
mov
bswap
aaa
out
rol
sarl
out
sub
mov
jae
fwait
xlat
movsb
int3
mov
mov
lcall
mov
push
jg
pop
mov
es
mov
sbb
push
ljmp
jae
adc
btc
push
ljmp
jae
das
imulb
dec
lock
adc
inc
jbe
incl
adc
or
aam
daa
pushf
es
sub
mov
mov
pop
and
dec
pop
lock
push
shlb
jmp
dec
fcompl
out
stos
ret
test
mov
scas
sahf
imul
jae
fists
dec
sbb
ja
int
movsl
jmp
das
pop
in
fistpll
jg
fsubl
call
cmpsb
aad
dec
add
sahf
jmp
sub
mov
in
icebp
cmpsb
cmpsb
ror
pop
ret
and
aam
xchg
mov
lods
popa
inc
dec
or
add
cmp
std
xor
jle
pop
xchg
jb
stos
xorb
fidivs
cmp
es
inc
test
push
out
cmp
cmpsb
pop
xor
scas
stc
les
mov
cmp
dec
fildl
gs
enter
leave
add
outsl
lcall
mov
cli
jno
mov
sarb
hlt
or
jae
adc
gs
sbb
shl
and
ljmp
iret
inc
xor
scas
stos
daa
dec
cmpsb
jo
mov
cmpsb
shlb
cmp
bound
lock
mov
mov
into
add
out
push
sub
sub
imul
loopne
jnp,pt
scas
cmp
xchg
inc
sub
popl
sti
mov
and
jecxz
repz
scas
std
mov
xchg
pop
push
scas
push
xchg
sub
mov
jo
sub
pop
stos
dec
insl
ljmp
frstor
push
push
and
and
sbb
jns
and
incb
dec
xor
push
push
rcr
iret
int3
fstps
je
stos
rcrl
fisttpl
add
add
and
leave
pop
mov
sub
aad
mul
popf
dec
imulb
jg
fs
mov
in
gs
mov
sbb
cmp
lds
fs
loope
push
das
test
in
mov
mov
pop
sbb
mov
lds
popf
xchg
add
sbb
mov
xor
and
fwait
dec
xchg
push
xor
pop
push
jle
les
je
push
jae
test
loope
adc
add
rdtsc
stos
adc
lret
int
jne
dec
adc
sub
push
jae
jbe
push
inc
xor
sub
outsl
lods
daa
adcb
repnz
xor
adc
int
movsl
xchg
dec
and
fwait
cmp
xchg
sbb
ss
dec
repnz
or
loope
orb
cmpl
jae
and
adc
iret
or
fxch
inc
fdiv
mov
and
andb
std
adc
fists
cltd
push
pop
push
sub
xlat
push
jae
mov
pusha
dec
dec
pop
jns
pop
int
xor
gs
cmc
lods
xchg
jle
sbb
and
mov
mov
and
inc
sub
and
push
sti
repz
mov
rolb
loope
inc
sbb
push
mov
xchg
mov
in
sbb
pop
clc
add
mov
mov
rcrb
add
rorl
out
pusha
std
leave
mov
fiaddl
in
testl
sbb
lahf
jp
mov
popl
xchg
mov
loop
inc
jne
push
mov
sub
pusha
mov
sub
jb
xchg
pop
test
lds
pop
lea
enter
negl
or
movsb
sub
jmp
punpckldq
mov
adc
jle
sbb
pause
ja
je
fwait
bound
mov
mov
pop
test
mov
jno
std
add
sub
ja
stc
push
push
cmp
add
inc
xchg
orl
leave
ja
jb
loope
ljmp
push
xor
lods
mov
ja
cmpsl
and
push
out
jecxz
outsl
pop
mov
scas
adc
pop
jg
jle
nop
fpatan
clc
mov
das
or
fs
push
stc
daa
les
rcr
xor
aad
imul
or
mov
dec
add
dec
xor
adc
jg
pop
push
movsl
push
ficomps
rcrl
adc
xor
scas
je
xorb
push
lahf
in
je
mov
add
pusha
mov
mov
cwtl
inc
popf
icebp
adc
js
repnz
and
je
fidivl
pop
mov
inc
in
fs
stc
push
dec
dec
in
xchg
lds
jecxz
inc
lret
xchg
fwait
lcall
and
pop
or
inc
mov
pop
ret
in
pop
jmp
and
add
pusha
dec
xchg
push
mov
dec
fimull
outsl
fcmovbe
mov
sar
lret
cmp
std
xchg
sbb
int
mov
xchg
xor
mov
test
and
jp
xchg
out
push
je
or
lea
mov
aad
orb
cli
sbb
imul
imul
ret
adc
xchg
xchg
cmp
loop
outsl
adc
jo
test
jge
xor
pop
fbstp
mov
mov
pop
ja
les
mov
negb
pushf
sbb
and
add
pop
inc
shll
xor
aaa
dec
sbb
and
jmp
xchg
jp
mov
cmp
fwait
cli
lret
subl
jle
mov
cmp
push
xchg
es
out
andb
xchg
movsb
xchg
mov
push
or
in
aad
movsb
push
mov
clc
xor
and
ss
xlat
jae
xor
in
cmp
adc
push
cmp
dec
xchg
popa
adc
fnstsw
fadd
out
fsubs
adc
jae
arpl
mov
lock
fwait
inc
daa
int3
ficoml
dec
adc
gs
push
sahf
pop
pop
pop
or
arpl
xor
mov
mov
dec
mov
pop
les
jp
push
mov
add
adc
cmp
insb
and
push
imul
inc
dec
mov
shrl
pop
sbb
stos
shll
push
mov
test
sbb
xchg
rcrl
pop
imul
ds
cmp
mov
xchg
pop
pusha
fldenv
lret
cmp
iret
aam
and
fisubl
pop
adc
xchg
mov
std
loope
xchg
adc
fistps
jno
inc
cmp
push
mov
lret
or
cmpsb
sahf
jl
clc
imul
out
inc
inc
stos
dec
lds
daa
ds
out
shrl
ss
pushf
in
mov
jp
mov
add
punpcklbw
into
cmp
mov
jmp
xchg
or
fbld
push
cmp
mov
pop
push
cltd
mov
js
adcl
jmp
in
push
and
mov
add
push
shrb
movsb
mov
sbbb
popa
std
inc
aas
jae
stc
push
or
lds
fldcw
clc
pop
mov
mov
loopne
jle
sub
es
mov
sub
scas
pop
addb
xchg
mov
je
or
int
push
mov
jne
mov
push
and
xor
push
testl
mov
inc
mov
ss
adc
cmpsl
xor
cwtl
mov
jae
arpl
mov
ss
adc
sub
fsubp
mov
cmp
jb
scas
lahf
cmp
cmp
aam
xor
sahf
jle
into
in
faddl
jle
jg
imul
jmp
and
scas
test
mov
pop
pusha
aad
outsl
mov
jge
sub
test
cwtl
cmp
sub
pop
dec
idivb
xor
mov
cwtl
mov
cli
data16
pop
jns
mov
pop
out
xor
cli
inc
loop
jmp
ljmp
adc
push
je
loopne
fnstcw
sub
dec
mov
out
fisubrl
les
test
bound
pop
sbb
je
fwait
xchg
mov
and
or
jle
jb
rcr
add
and
pop
add
std
push
sub
lret
ficomps
or
test
jge
xchg
sbb
lcall
iret
daa
adc
lcall
xlat
sub
clc
adc
idivb
pop
aad
xor
pop
es
xchg
arpl
lahf
adc
inc
add
popf
bound
mov
loope
sbb
testb
push
scas
jo
adc
sbb
inc
lds
push
mov
xchg
rolb
incl
test
lahf
imul
sti
cmp
lds
int
sahf
test
iret
in
push
nop
aam
sarl
in
addr16
roll
xchg
movsb
push
clc
add
dec
aas
mov
adcl
jbe
out
push
inc
in
test
push
sbb
int3
add
pop
jl
inc
pop
and
fs
jno
test
jge
in
int3
adc
repnz
rcll
inc
shr
pop
lret
lret
repz
loopne
dec
mov
and
out
les
sbb
mov
pop
adc
leave
mov
shll
jnp
mov
cs
in
mov
xchg
pop
scas
xchg
fwait
mov
pop
cmpl
mov
and
dec
call
je
jle
adc
out
or
out
insl
inc
cmpb
mov
les
dec
test
add
adc
push
pop
or
imul
sbb
add
and
dec
das
adc
xchg
lds
ljmp
inc
push
sub
or
and
adc
mov
ljmp
jle
jl
or
mov
mov
inc
jmp
add
push
mov
repz
sub
mov
mov
fstpl
pop
cltd
fsubl
icebp
rorl
loope
out
mov
mov
jmp
stos
push
cwtl
xor
rol
add
sti
jmp
out
sub
data16
and
add
mov
pop
and
lret
lcall
pop
aaa
out
dec
push
jo
shrl
cmp
xchg
xorl
xchg
popf
add
out
rcrb
xchg
jbe
orl
jle
in
cmpsl
pop
lea
dec
pop
ret
and
and
adc
push
jbe
xchg
arpl
mov
lretw
xor
mov
pop
dec
or
out
and
push
les
xchg
fcompl
hlt
pop
xor
sub
loope
mov
cmp
cltd
inc
lret
xchg
xorl
sub
sbb
xchg
inc
xor
xlat
push
mov
repz
lods
and
das
mov
lret
or
cmc
and
xchg
test
mov
repz
xchg
inc
add
fistpl
push
add
mov
inc
cmpsl
inc
mov
lods
mov
pop
lahf
in
and
lods
cli
fiadds
shrb
lret
call
fdivr
outsl
addr16
jne
stc
mov
fists
fsubl
cli
adc
push
ljmp
push
rcr
mov
add
inc
cmpsb
jo
jo
pop
clc
arpl
fwait
adc
push
sahf
inc
push
push
jae
cmp
dec
jne
push
gs
mov
pop
cmp
ret
mov
mov
outsl
dec
pop
xchg
mov
shll
mov
sub
adcb
push
dec
sarb
arpl
jge
sub
jo
adc
lcall
jae
jnp
push
aam
cmpsl
sarl
or
iret
in
add
push
outsb
aas
andl
adc
into
add
sbb
adc
mov
cltd
push
xchg
das
push
xlat
daa
mov
xchg
lods
push
std
cmp
movsl
push
push
fdivrl
jmp
mov
push
out
pop
xchg
clc
mov
xchg
insl
and
xlat
sbb
les
sbb
push
mov
push
xchg
sbb
inc
aas
stc
leave
adc
pop
add
xor
or
das
mov
mov
xchg
mov
out
push
int
lods
jno
sbb
push
lahf
in
pop
adc
cmp
push
fbstp
jae
adc
sub
add
and
out
mov
cli
pop
ficompl
stos
xchg
lret
sub
hlt
xchg
cwtl
add
es
push
pop
test
push
les
jae
aad
push
scas
dec
pushl
ja
pusha
ficoms
lods
or
add
sbb
ss
mov
fisubl
mov
pop
test
dec
sbb
lds
xchg
neg
insb
lea
add
mov
add
int3
lret
int3
sar
sub
in
gs
jns
jmp
out
jb
mov
adc
shld
jl
loope
movsb
icebp
iret
mov
dec
sbb
addr16
xchg
jge
sub
ljmp
mov
repz
aad
sub
pop
cs
js
mov
pop
movsl
dec
repnz
mov
sub
cmpsl
test
ror
rorl
xchg
iret
movsl
mov
mov
xchg
pop
and
ds
mov
add
mov
testb
jp
pop
lcall
sub
sub
fsubrp
in
imul
iret
mov
in
js
fsubs
out
insb
imull
lret
insl
stos
aas
jecxz
int
nop
fisttpll
leave
cltd
repnz
mov
pop
xor
xor
dec
push
push
pmulhuw
jmp
loope
and
xchg
push
sbb
mov
fnstcw
scas
js
pop
imul
std
lret
arpl
rol
mov
pusha
bound
add
addr16
xor
imul
xchg
inc
scas
in
ja
rorb
push
imul
cmpsl
mov
mov
sbb
sti
xchg
cmpsb
jp
shll
pop
lds
and
sub
push
sub
jns
mov
loop
inc
add
xor
xor
pushl
pushl
pushl
pushl
pushl
mov
mov
mov
mov
call
mov
mov
add
pop
pop
leave
ret
push
mov
sub
addl
push
adcl
push
push
andl
push
lea
push
adcl
push
subl
call
call
andl
movl
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jb
add
movl
mov
mov
xor
or
mov
add
subl
mov
mov
movl
test
movl
je
subl
mov
mov
add
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
imul
mov
orl
add
sbbl
xchg
xor
mov
sub
andl
mov
xor
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
add
sbb
mov
and
mov
movl
cmpl
je
cmpl
jne
pushl
push
push
call
cmpl
jne
mov
dec
mov
xor
add
dec
mov
jmp
and
xor
add
mov
adc
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
jmp
xor
xor
add
add
mov
adc
mov
xorl
xor
andl
mov
inc
mov
cmpl
jne
pushl
push
push
push
push
pushl
push
pushl
call
cmpl
jb
movzwl
sub
mov
add
mov
sub
lea
xorl
xor
subl
xor
cmp
movl
je
xor
mov
xor
orl
add
cmp
movl
jne
addl
pushl
call
mov
mov
movl
cmpl
je
cmpl
jne
pushl
call
mov
dec
mov
jmp
adc
mov
andl
mov
inc
mov
cmpl
jne
pushl
pushl
call
cmpl
jb
xor
addl
mov
subl
add
movl
cmp
movl
je
pushl
subl
pushl
andl
call
sub
mov
xor
xor
xor
mov
mov
xor
add
cmp
je
mov
add
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
push
pushl
push
pushl
push
call
jmp
andl
mov
inc
mov
cmpl
jne
pushl
push
push
call
cmpl
jb
mov
mov
xor
mov
mov
addl
add
mov
sub
mov
mov
addl
add
mov
inc
mov
subl
mov
orl
add
mov
mov
jmp
mov
mov
add
mov
mov
mov
xor
add
cmp
je
jmp
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
je
lea
push
pushl
pushl
call
mov
mov
mov
xor
add
cmp
je
mov
movzwl
mov
mov
mov
jmp
mov
xor
lea
jmp
mov
xor
add
jmp
mov
xor
add
jmp
mov
add
mov
mov
test
je
movl
jmp
insb
pop
call
xchg
imul
sub
inc
cmp
bound
pop
bound
sbb
loop
loop
testl
out
imul
push
push
fisubs
rolb
test
nop
or
xchg
cmp
repz
sbb
inc
rorl
lcall
jb
loop
dec
lea
sub
sub
adc
notl
int
into
cmp
jg
mov
aaa
and
inc
arpl
cs
dec
and
lcall
pop
arpl
or
sbb
inc
icebp
sbb
movsl
ss
scas
cmp
mov
xchg
ss
dec
push
xor
inc
cmp
jg
insb
and
inc
mov
lea
dec
ja
xlat
and
pushf
xchg
adc
mov
jbe
mov
or
std
cmc
cmp
push
adc
in
insl
stos
stos
cmpsl
sbb
sub
pushf
jbe
pop
dec
and
outsl
jbe
push
call
ror
mov
out
pushf
dec
clc
or
andl
ljmp
adc
sub
mov
sub
scas
inc
dec
subb
call
je
mov
aaa
push
mov
insb
out
push
jp
sub
adc
out
cmovne
dec
stos
mov
sbb
rcrl
xor
xchg
jbe
arpl
or
sbb
pop
addb
mov
cs
ficoms
and
sbb
xor
sub
hlt
test
push
sbb
shrl
loopne
push
adc
pop
and
mov
jno
jp
aaa
incl
mov
movsl
pop
cmp
pop
iret
hlt
das
fdivr
push
or
adc
pop
jns
nop
dec
sub
sahf
xor
push
dec
addl
pop
jo
dec
repz
dec
adc
int3
rcrb
jb
mov
icebp
outsb
jno
outsb
psubsw
lods
test
mov
xchg
mov
mov
mov
sahf
sbb
and
jl
lahf
lret
pop
cmp
cltd
outsb
pop
or
cs
mov
mov
mov
xchg
fsubrl
fistpl
mov
add
or
daa
inc
dec
and
xor
shrb
adcl
jne
ret
mov
cmp
cmpsl
mov
es
dec
sub
mov
inc
icebp
lods
mov
sbb
cs
popf
or
int3
ja
cmpsl
loop
test
cmp
jno
cwtl
inc
jmp
scas
push
mov
mov
out
xchg
cmp
scas
cmp
cwtl
cmp
inc
and
xchg
lahf
test
addl
je
stc
enter
int
jns
mov
and
pop
xlat
ret
pop
in
adc
out
in
and
enter
pop
push
lret
pushf
jne
mov
in
ret
pop
push
or
xor
push
adc
sarl
mov
pop
sti
test
and
rorb
mov
jmp
repz
bound
sbb
movsl
negl
nop
js
cmp
adc
enter
movsl
loop
mov
sahf
jl
mov
jge
pop
xchg
pop
sub
cltd
jg
pop
jnp
push
add
jb
push
jg
push
adc
dec
hlt
mov
jb
jmp
stos
add
out
bound
jge
pusha
adc
adc
movsl
pop
ja
jmp
fstl
push
outsl
xchg
jo
nop
test
jbe
add
cmc
lahf
cmp
cmp
sbb
int3
mov
loopne
mov
insl
loope
nop
cltd
xchg
leave
xchg
into
push
dec
mov
int
in
xor
cmp
inc
mov
sbb
pop
or
jmp
add
sarb
in
in
adc
pop
dec
not
aad
sbb
adc
out
cmp
fmuls
mov
mov
xorb
mov
scas
test
fmull
mov
loope
add
shr
insb
sbb
xor
xor
adc
mov
in
jne
jmp
jnp
mov
inc
loope
cli
dec
jb
xor
mov
mov
rep
shll
ja
pop
mov
out
enter
loop
push
push
xor
cld
movsl
test
sahf
aaa
mov
fcmovbe
inc
xchg
xor
or
lds
fistpll
fldl
xor
sbb
stos
sub
jp
sbb
das
lods
mov
xchg
dec
negl
cmp
scas
add
push
add
add
adc
mov
xchg
rcll
aam
jge
aaa
dec
cltd
push
sub
xor
jl
push
push
fdivl
sbb
dec
adc
mov
das
push
sbb
or
mov
mov
test
ret
pop
out
adc
cmp
pop
fnstcw
ss
std
inc
mov
out
iret
jae
test
xchg
and
in
mov
mov
test
xor
mov
xchg
mov
mov
mov
add
or
cmpsl
push
xor
cmp
cmpsb
scas
lods
iret
out
and
pop
add
sbbb
adc
xor
jg
add
fwait
sub
adc
lods
daa
jnp
mov
scas
mov
fldcw
pop
jg
fadds
adc
mov
scas
scas
jno
push
dec
sbb
jge
mov
call
pop
inc
movsb
xor
cmp
xor
push
in
out
jge
mov
sbb
iret
loop
mov
add
cmpsl
mov
xchg
sbb
mov
js
fcoms
sub
out
jge
xchg
arpl
movsb
arpl
mov
and
daa
adc
popf
mov
call
cld
shrb
arpl
cmc
stos
std
pop
sti
or
popa
sbb
test
mov
ja
mov
in
add
cmp
pop
daa
mov
shl
sarl
cmc
fistl
mov
fcmove
leave
inc
xor
js
push
jbe
sub
repz
hlt
subb
insl
jp
das
das
sbb
leave
sar
cmp
repz
mov
imul
inc
repnz
mov
sub
shll
push
fcomp
pop
aas
mov
das
push
scas
or
fwait
adc
out
shl
xchg
dec
mov
imul
roll
repnz
pop
sbb
jo
mov
loopne
mov
dec
int
xor
add
les
hlt
xor
adc
jne
mov
push
test
mov
mov
sbb
idivl
jle
daa
xchg
jmp
mov
cld
ljmp
cmp
rorl
and
add
mov
xor
shll
sti
inc
lock
fxam
pop
mov
xchg
xorl
inc
leave
roll
fsubrs
adc
mov
dec
sub
or
outsb
jl
rcll
push
push
loopne
pushf
fnstsw
fimuls
xchg
arpl
xlat
std
pop
cmp
je
sub
call
rcrb
lock
dec
mov
test
neg
add
push
leave
cmp
push
je
mov
cli
and
sbb
xchg
aaa
inc
rol
jecxz
or
loop
das
mov
gs
scas
lock
or
pop
adcb
push
frstor
call
push
cmc
push
jp
pop
jbe
sbbb
subl
pop
cmp
repz
imul
cmp
out
cmpb
rcll
dec
imul
add
loop
loop
sbb
mov
xor
cmpsb
imul
and
fwait
push
rolb
or
out
adc
jl
outsb
cwtl
add
and
lods
je
lret
in
and
push
sbb
and
out
and
inc
push
cmpl
scas
loop
push
or
push
or
pop
aaa
dec
pop
lods
icebp
push
fidivl
repz
call
xor
fisubl
jmp
dec
mov
icebp
orl
cmc
mov
flds
dec
jmp
lods
lock
push
dec
cmc
mov
sbb
xchg
jecxz
cmp
out
hlt
hlt
xchg
in
mov
or
mov
decb
in
add
inc
lret
icebp
arpl
or
dec
mov
and
ficompl
xchg
and
and
imul
lods
ja
add
sub
addr16
cmp
lret
push
cmp
cmp
outsl
js
mov
stos
xor
call
shll
stos
mov
je
inc
rcrl
inc
adc
xchg
sub
add
cmc
xor
inc
bnd
fstpt
or
or
pushf
sbb
push
mov
dec
inc
in
aad
bound
or
jp
jmp
dec
cmpsb
inc
mov
icebp
adc
cmp
adc
xchg
push
out
jl
in
out
bound
insl
insb
xchg
int
or
and
call
out
out
loop
mov
sbb
xchg
es
add
jl
sbb
dec
cmpsb
loope
fisubrl
sbb
test
iret
dec
pop
xchg
leave
lret
cmp
repnz
insb
leave
adc
xor
jl
int3
insl
js
push
jmp
fucomp
mov
pop
pop
rorb
mov
cmc
scas
and
inc
stos
ja
mov
adc
and
xchg
sub
jns
lods
cwtl
enter
mov
mov
stc
cltd
repnz
xor
data16
cmp
cmp
jg
push
mov
je
pop
sbb
mov
cmc
adc
fs
inc
mov
cmp
cmp
push
rorb
and
movsl
daa
jle
fsubrl
push
cwtl
sbb
adc
mov
sbb
mov
int3
or
in
int3
iret
adc
jne
mov
xor
mov
or
into
outsb
popa
xor
pop
pop
leave
push
sbb
mov
jg
dec
sbb
shr
jp
les
or
xor
sbb
std
lds
adc
cltd
dec
push
mov
lret
and
push
cmpsl
inc
aaa
jne
push
outsl
push
mov
pusha
add
into
sub
push
add
jle
cmp
sub
sub
imul
adc
mov
jnp
faddp
js
pop
test
xor
mov
rcrl
arpl
mov
mov
inc
sahf
ret
movsb
mov
lcall
outsb
xchg
xor
mov
fmuls
out
lds
xchg
add
ret
cmc
sbbl
and
push
mov
scas
cmp
sbb
xor
fsubrl
mov
cmc
push
inc
mov
movsl
sub
mov
pop
icebp
pop
push
adc
mov
enter
xchg
xchg
push
cwtl
inc
repz
sub
out
dec
jecxz
mov
sub
ret
je
mov
and
adc
mov
xor
in
and
call
mov
lods
test
jmp
and
jecxz
pop
cwtl
repnz
jbe
dec
mov
js
jbe
fimull
cs
xchg
jle
inc
xlat
xchg
rcrb
inc
xchg
aad
pushf
cs
sub
gs
pop
push
hlt
dec
addb
cs
mov
push
bound
insb
and
mov
sbbb
push
mov
xor
stos
mov
lock
mov
xchg
loope
lret
adc
sbb
lret
sbb
into
mov
inc
in
push
mov
enter
cs
stc
sbb
jmp
inc
adc
sbb
jp
mov
addr16
insl
aad
pusha
pop
stos
in
movl
frstor
mov
fstp
xchg
xchg
cmp
je
popf
cmp
std
lret
mov
mov
inc
mov
dec
mov
cli
mov
xchg
int
inc
dec
fcmove
sahf
out
insl
test
cmp
pop
mov
sbbb
jb
daa
jge
xchg
mov
jo
mov
and
adc
or
jns
lret
cli
repz
bound
sub
mov
cmpsl
pop
sub
push
and
enter
mov
xchg
pop
mov
sub
jae
je
sbb
js
mov
mov
inc
fs
stos
clc
mov
sbb
push
sub
lods
dec
lods
dec
adc
movsb
sbb
cmp
insl
sub
gs
aam
in
sti
push
mov
repz
adc
fdivrl
mov
imul
push
hlt
daa
or
popf
stos
incl
imul
cltd
out
xbegin
dec
es
jle
push
push
mov
push
call
scas
loopne
pop
icebp
fwait
movsl
in
pop
push
push
xchg
push
dec
sbb
std
mov
jecxz
frstor
loop
mov
lods
jno
and
add
push
lods
or
fsubl
imul
imul
adc
push
sbb
ror
sub
dec
ret
loopne
popf
std
mov
adc
fimuls
fcmovb
cli
scas
repnz
jg
jnp
int3
mov
sub
fisubl
pop
test
sub
jns
enter
int3
shll
aam
mov
jns
dec
popf
addr16
inc
inc
xchg
adc
jo
push
mov
push
or
or
test
mov
decl
mov
jb
iret
mov
or
ficoml
fldenv
scas
xlat
outsb
mov
sbb
out
push
daa
mov
imul
adc
cwtl
jl
ret
shl
test
lret
aam
sbb
or
cmpl
hlt
inc
loope
mov
inc
mov
scas
out
pop
sub
add
push
add
and
jne
rolb
fisubl
push
inc
adc
cmc
call
ret
cmp
xor
mov
adc
or
in
mov
aas
ja
mov
shrl
jl
sbb
jmp
jmp
stc
jge
stos
imul
mov
mov
subb
test
insl
sahf
cmp
sub
pop
sbb
xor
sub
loope
or
addr16
jne
loopne
mov
mov
pop
mov
dec
and
fwait
jb
sub
inc
push
sub
test
pop
pop
mov
shrb
cmc
dec
int
or
inc
lret
arpl
jp
xchg
test
cmp
xchg
stc
xchg
or
push
stos
test
nop
dec
mov
mov
dec
mov
test
push
repz
xor
mov
insb
sub
insb
jp
mov
or
bound
fs
pop
popf
lcall
lret
xchg
dec
sbb
movsl
mov
addl
mov
lret
aad
lahf
mov
mov
jmp
lods
fwait
das
or
lret
xchg
mov
test
std
mov
mov
fdivs
cmp
cmp
dec
push
mov
cmp
jg
xor
cmp
jge
in
inc
call
push
and
lods
dec
mov
cmpsb
stos
dec
dec
pop
inc
jnp
rcrb
stos
loopne
inc
sbb
sub
sbb
push
dec
into
ficoms
and
xchg
in
pop
inc
frstor
pop
ds
dec
sarl
lcall
enter
mov
bound
add
loopne
mov
ficoms
cmpsl
push
loope
cmp
shl
push
mov
out
cmp
test
insb
sub
push
insl
cli
mov
mov
es
push
sbb
or
adc
gs
jecxz
push
xlat
mov
push
imul
add
fisubl
jge
outsb
hlt
scas
aaa
jmp
out
mov
outsb
sbb
test
int3
lds
inc
inc
pusha
or
dec
lods
xor
xchg
dec
out
cmp
sub
cmp
test
outsb
loopne
jbe
lcall
or
movsl
push
stos
pushf
ss
dec
jg
pop
lea
imul
xor
ljmp
cmp
addr16
or
lcall
lret
jl
mov
add
addl
scas
add
fwait
scas
data16
std
rcll
icebp
addr16
add
jnp
adc
mov
lods
popa
js
adc
push
mov
pusha
push
loop
mov
adc
push
scas
mov
nop
pop
pop
cwtl
sbb
xor
iret
mov
fisubl
mov
xor
xlat
outsl
xor
cmpsb
pop
repz
or
loop
imul
jb
scas
test
hlt
sbb
lret
call
add
xchg
push
pusha
push
orl
xchg
inc
adc
testl
or
lods
mov
je
inc
rorl
cli
sbb
push
adc
xor
ljmp
stc
int3
dec
sarb
jl
shrl
call
in
arpl
xor
inc
sub
mov
cltd
shrb
xchg
sbb
test
popf
and
mov
sub
mov
push
mov
adcl
or
lret
push
inc
cwtl
enter
mov
pushl
stos
mov
jmp
and
and
push
dec
mov
daa
lret
jnp
andb
aaa
fildll
pusha
stc
xor
pusha
sbb
sub
dec
icebp
repnz
or
js
mov
sbb
xor
ja
test
cwtl
push
popf
sbb
or
push
out
cmpsl
je
out
std
ret
movsb
dec
and
ret
loop
sarb
jnp
das
push
xorl
pop
adc
pusha
out
arpl
loop
and
xor
and
in
shll
scas
ja
or
xchg
mov
xor
std
sarb
mov
jne
mov
neg
sbb
outsl
pusha
xchg
xchg
mov
mov
decb
test
push
cltd
push
jnp
sub
mov
sti
cmpl
enter
in
js
push
xchg
pushf
or
sub
push
push
fsubl
repz
jecxz
lds
das
test
mov
mov
mov
fldt
inc
outsl
mov
es
push
push
sbb
test
cld
sahf
and
mov
or
in
into
push
mov
inc
cmp
dec
test
cmp
jg
cmc
add
cltd
pop
dec
xchg
lods
or
rcrb
push
loope
sbb
sub
add
adcl
nop
shll
xchg
dec
leave
js
push
or
or
gs
pop
pop
cmc
sbb
mov
mov
sbb
divl
and
je
mov
push
sub
stos
movsl
jne
push
push
insb
enter
loope
icebp
std
es
mov
int3
xchg
rorl
int
jbe
lods
jb
repnz
xchg
pop
or
fchs
lods
stos
and
adc
cmpl
xchg
push
cmp
testl
dec
cwtl
mov
scas
lods
jmp
cmp
dec
push
pop
add
and
icebp
lods
push
adc
nop
testl
hlt
dec
mov
enter
xchg
dec
or
jns
xor
imul
push
int
push
pop
adc
pop
jl
les
jae
cwtl
rolb
cmpsl
testb
jno
or
mov
jno
jle
dec
push
stc
push
jno
bound
mov
cs
mov
lret
movsl
dec
adc
xor
push
pushw
mov
pop
and
sub
mov
mov
andl
pop
scas
loop
lahf
mov
mov
pop
sub
addr16
lahf
aad
xchg
or
cmp
sbb
mov
dec
insl
adc
mov
shrb
call
push
gs
pop
stos
rclb
or
mov
mov
imul
dec
repz
call
inc
pop
mov
sub
loop
xor
add
xchg
mov
add
jge
movsb
inc
sub
mov
fistps
fdivs
loope
or
push
mov
andb
rcrb
hlt
insl
jg
mov
sub
arpl
push
pop
mov
mov
mov
lea
push
xor
adc
ds
stc
add
les
adc
mov
ret
pop
xchg
loop
mov
and
repnz
dec
inc
xchg
dec
test
inc
push
cmpsl
push
pushf
xchg
shr
scas
loopne
jnp
dec
mov
or
dec
fidivrl
xor
inc
push
outsl
dec
pushf
mov
stos
mov
imul
inc
cmpsl
cwtl
repnz
adc
push
sub
inc
daa
stos
mov
jns
cmp
icebp
sub
fcmovu
sbb
sbb
iret
les
iret
pop
jl
popa
aas
call
fnsave
jo
imul
out
cmp
rcrl
xchg
mov
lret
loope
orl
test
xor
jnp
sti
stc
mov
cmp
cmp
xor
pop
pushf
pusha
and
ror
mov
rolb
into
adc
sbb
lcall
push
mov
nop
sub
xchg
sbb
or
inc
xor
out
add
loope
lds
outsb
sub
ds
pop
push
mov
mov
js
popl
clc
loope
testb
lods
into
dec
sub
je
or
insb
and
mov
mov
lea
jo
test
test
pop
adc
xor
xchg
inc
dec
sub
mov
loop
insb
int3
add
inc
adc
out
sarl
and
repz
mov
or
loop
and
rorl
ret
jo
xchg
jg
hlt
mov
sbb
xchg
in
and
or
mov
sbb
out
loope
rol
pop
add
inc
mov
mov
loopne
add
test
jb
sub
mov
push
add
jmp
sti
adc
xchg
std
xor
pop
xchg
adc
test
call
jo
fadd
inc
clc
mov
sbb
xchg
pop
mov
xchg
orl
push
leave
xor
push
push
cmp
sbb
push
sub
dec
mov
sub
adc
dec
push
mov
in
ljmp
jecxz
lret
into
xchg
xor
repz
mov
adc
push
cmp
movsb
sub
cmc
xchg
insl
lea
mov
xorb
and
in
cltd
shr
sbb
cld
call
mov
jmp
and
mov
adc
sub
inc
mov
int3
mov
adc
stos
stc
mov
jne
lods
int3
pop
xchg
add
divb
dec
cmp
test
xchg
sub
rcrl
into
sti
dec
aam
lret
xchg
sahf
aaa
shrb
sub
std
mov
adc
dec
movsl
addr16
cmp
push
ret
mov
nop
and
subb
mov
nop
cmp
add
fidivs
push
mov
in
mov
dec
aas
js
push
and
sbb
pop
push
stos
mov
lret
dec
mov
cmc
das
aad
mov
ljmp
enter
cmp
push
popa
lahf
push
out
lcall
iret
in
les
enter
inc
jbe
faddl
inc
jnp
sbb
cli
xchg
mov
mov
or
out
inc
hlt
dec
mov
je
mov
shlb
in
mov
cmp
adc
out
push
scas
ret
xchg
push
pop
pop
inc
lods
sti
fisttpll
xlat
fbstp
aaa
cmpsl
sbb
cmc
call
mov
xor
fiadds
push
xchg
inc
in
stc
pop
dec
mov
jbe
sub
shrl
mov
mov
jnp
mov
pop
ljmp
jo
xchg
mov
inc
addr16
xchg
lods
pop
sbb
mov
sub
mov
add
insb
xchg
out
lds
mov
lea
repnz
push
dec
xor
mov
add
pop
sbb
pop
lret
in
ja
add
insb
repz
jecxz
nop
leave
imull
rdpmc
or
cwtl
gs
stos
mov
mov
in
add
mov
add
lock
outsb
fldl
cmp
and
ret
clc
int
jle
aad
sub
xor
stos
push
or
mov
dec
popa
push
jecxz
mov
mov
sbb
or
pop
mov
mov
insl
jmp
jae
sub
cwtl
int3
mov
out
mov
outsb
push
hlt
fisttpl
scas
inc
lds
push
adc
xor
jno
out
sub
lods
shrb
out
push
dec
daa
addr16
loopne
push
adc
out
insb
lcall
das
out
add
xor
adc
and
fistpl
xor
rorb
std
pop
add
cmc
faddl
inc
jne
cmp
arpl
dec
cld
sarb
or
xchg
lea
cmp
mov
aad
repnz
push
jnp
jle
gs
xor
enter
sub
lret
mov
addr16
mov
scas
cwtl
in
lret
outsl
hlt
push
sbbl
or
shrl
arpl
ss
add
dec
mov
push
jge
push
cwtl
ret
mov
mov
sub
mov
lcall
insb
aad
dec
cld
pop
lods
jno
test
imul
iret
dec
xlat
sahf
jnp
jp
nop
fdivr
sbb
stc
push
cmp
mov
and
mov
aam
sbb
adc
test
and
inc
push
adc
sbb
lret
nop
add
sahf
sbb
aad
mov
inc
or
or
cmp
xchg
data16
imul
loopne
cwtl
movsl
test
adc
sbb
or
pop
ja
lret
push
or
lods
mov
fisubrs
xorb
fcoml
add
imul
adc
adc
out
sti
fs
pop
test
adc
and
out
jne
add
inc
ss
movsb
sti
ret
xchg
je
outsl
jb
lock
sub
mov
pop
je
or
js
bound
push
mov
xchg
pop
dec
fisubl
mov
and
ret
sub
out
jmp
cmc
movsl
cmc
mov
mov
scas
jae
rolb
test
imul
dec
sbb
inc
inc
jnp
dec
flds
fimull
fcomp
in
stos
cmp
jo
jno
lock
adc
xchg
out
cld
imul
sub
inc
out
add
call
push
pop
test
clc
lahf
aas
inc
cld
daa
add
pop
xor
pop
or
xchg
xor
push
call
push
faddp
mov
icebp
fcoms
fstpl
mov
and
pop
push
scas
push
shlb
cmp
cwtl
push
scas
pop
cmp
lret
sub
fisttps
lcall
add
sbb
ret
xchg
jae
pop
insb
xor
push
shll
cmc
stos
mov
dec
sub
or
lods
mov
mov
xlat
mov
sub
lret
mov
imul
push
adc
clc
andb
fcompl
xchg
dec
sub
fwait
xor
mov
ret
fmul
mov
inc
xchg
rol
jns
out
sarb
leave
dec
push
dec
scas
roll
mov
and
mov
insl
dec
cmpsl
clc
mov
bound
jl
mov
test
mov
loopne
lcall
push
sbb
push
xor
lahf
inc
popa
sub
inc
and
pop
rcrl
mov
lods
sahf
ret
insl
jne
cmc
movsl
lahf
pop
cmp
fdivs
sub
outsl
push
push
pop
cmp
xchg
movsl
adc
xchg
push
add
ret
push
jo
inc
loopne
out
xchg
pushf
arpl
xlat
add
movsl
adc
jp
jge
jmp
push
xchg
idivl
add
push
addr16
dec
orb
dec
mov
pop
mov
dec
xchg
pop
mov
sbbl
xor
jns
jno
xor
outsl
ds
sbb
stos
cmp
add
sub
sub
test
dec
loope
jbe
lcall
and
inc
scas
push
jbe
add
mov
dec
scas
ljmp
jno
jmp
push
push
add
scas
imull
dec
adc
imull
hlt
cmp
stos
jns
lods
pop
imul
movsl
push
dec
inc
mov
adc
jne
sub
inc
pusha
sub
mov
lock
jg
add
jmp
mov
push
xchg
gs
pop
aas
sub
ret
lret
mov
mov
mov
cmc
push
pop
xor
mull
out
sub
into
lock
es
je
in
fs
aam
xor
xchg
mov
push
pusha
aaa
push
add
dec
mov
pandn
xchg
inc
add
inc
int3
orl
push
stc
dec
xchg
sar
out
sub
mov
addl
cmc
inc
dec
adc
pop
xchg
xor
push
push
mov
out
or
mov
jl
stc
lret
xchg
xor
xor
inc
scas
sbb
movsb
lds
sbb
out
lock
shrl
jo
mov
and
pusha
or
lahf
mov
fisubl
adc
insb
pop
idivb
jnp
std
xor
addr16
insb
adc
inc
stc
or
sar
jecxz
fnstenv
lea
pop
test
mov
mov
cli
pop
arpl
pop
js
add
mov
or
sar
mov
and
or
mov
dec
pop
arpl
fsubrs
dec
int3
fsubr
add
cwtl
outsb
and
sbb
pop
push
cmp
xchg
int
lods
leave
daa
or
xchg
fbld
insl
test
add
nop
mov
xor
dec
shrl
dec
xlat
push
xlat
imul
jmp
das
inc
fidivs
mov
lcall
test
in
inc
mov
dec
push
and
and
adc
mov
lds
jne
and
xor
xor
xor
popa
shll
adc
lret
push
mov
add
add
jno
jns
roll
out
sbb
stos
lds
mull
adc
xor
dec
aam
add
scas
icebp
mov
mov
jbe
mov
mov
movsl
jg
jne
inc
aaa
push
in
cmpsb
mov
adc
mov
stos
xchg
adc
das
fdivl
jne
or
dec
into
xchg
sbb
jg
into
ret
sti
arpl
jl
cmp
cltd
xor
xor
adc
iret
shr
push
adc
arpl
add
lods
and
outsb
pop
rol
iret
add
or
leave
cmc
icebp
stos
ficoml
inc
loopne
cmc
add
adc
enter
andb
clc
rcl
lock
mov
insl
insl
jg
dec
dec
imul
sub
cmp
xor
out
push
cld
mov
mov
mov
adc
add
aas
xchg
shll
test
jmp
addr16
lret
adc
push
fistl
in
lcall
mov
int3
ud1
lret
push
xor
pop
add
push
pop
push
dec
pop
dec
xchg
sub
xchg
dec
mov
imul
sub
mov
mov
mov
jmp
dec
mov
cmpsb
mov
mov
mov
cmpsb
sbb
adc
bound
mov
outsl
es
add
jno
cmp
int3
cld
push
sub
xchg
pusha
cld
fidivl
mov
loope
pop
rcr
mov
jb
loopne
inc
pop
das
jns
out
hlt
jae
mov
mov
test
das
push
add
xchg
pop
mov
dec
sub
sahf
call
aas
out
cmp
mov
jge
ljmp
lods
push
test
inc
imul
adc
lock
mov
gs
in
push
cmc
inc
lock
jl
fsubl
sbb
data16
out
ss
push
sbb
ss
xchg
js
popf
mov
and
cmp
lds
stos
lods
adc
jge
stc
pusha
inc
add
sub
dec
pop
out
add
stos
fucomi
setle
imul
sub
jg
mov
xor
rcrb
psllq
mov
lret
fcmovne
movsb
loope
fmull
xor
sub
xchg
fdivs
mov
scas
sub
fadd
pop
pop
and
jo
scas
fildl
add
hlt
push
or
rclb
mov
aam
imul
in
adc
aam
icebp
sbb
nop
rcrb
adc
nop
mov
ljmp
xor
inc
push
xchg
icebp
pop
mov
push
cmp
adc
mov
js
shrb
sarb
int
jle
ficoms
xor
pusha
pop
dec
push
xchg
iret
mov
div
push
sub
jo
loopne
nop
mov
jnp
push
lahf
xor
xor
or
pop
jbe
leave
inc
jle
ds
fidivl
lods
mov
add
mov
mov
arpl
in
push
jl
aas
rep
aaa
aas
dec
fdivs
jp
sub
dec
or
clc
loopne
jno
xchg
mov
aad
test
inc
popa
hlt
mov
ljmp
mov
cmc
mov
stc
roll
mov
pushl
loop
pop
add
add
cli
lret
flds
ja
in
mov
mov
sub
xchg
imul
mov
sub
mov
mov
scas
dec
jl
mov
lea
xchg
repz
push
out
jle
popf
push
pop
mov
pop
mov
inc
lahf
cwtl
fsub
testb
xor
jl
or
push
dec
andb
pop
jnp
lods
test
cmp
sarb
xorb
es
jg
cmp
xor
scas
fwait
jge
cmp
mov
sbb
jge
movq
mov
fsts
jo
shll
addb
inc
dec
or
cmp
jae
or
jp
xchg
insb
fmuls
ja
int
cwtl
push
shlb
xchg
cwtl
push
dec
sub
dec
comiss
rol
lds
scas
mov
push
mov
inc
mov
stc
repz
inc
lret
rcrl
stos
push
rcl
fildl
sub
pop
cmp
jg
pop
mov
shrb
sti
insb
sub
and
jae
out
aad
jecxz
jo
jmp
into
mov
xchg
jmp
call
lods
mov
lods
int
aas
mov
pop
and
lods
add
jbe
adc
sbb
sub
jne
add
popa
cmp
xchg
inc
shufps
lret
mov
mov
add
andb
fsubp
sub
addr16
jnp
jle
pop
in
rcll
cs
sti
xchg
addr16
stos
jb
inc
out
push
lock
mov
sbb
cmp
das
lahf
ret
aas
pop
cltd
cld
mov
adc
aas
mov
inc
push
loopne
mov
jbe
iret
ss
and
jnp
je
xorl
sub
shll
jmp
pop
bound
mov
imul
in
in
dec
push
push
jns
jg
loop
jmp
loop
daa
xchg
loopne
mov
arpl
int
daa
push
xor
sbb
cltd
add
sub
and
xchg
jg
fyl2xp1
es
ret
mov
rolb
shll
not
jle
lcall
test
mov
sbb
popa
adc
je
ds
in
sub
mov
and
ss
mov
scas
inc
xchg
adc
and
jge
iret
cmp
push
fnsave
enter
mov
int
xchg
mov
dec
push
xor
fcoms
xor
int
adc
mov
mov
inc
pop
adc
mov
xlat
jg
and
add
test
fcoms
lret
cmc
ljmp
push
rcll
ljmp
jmp
notb
jmp
jmp
popa
test
push
fdivrl
je
fcmove
push
inc
dec
pop
pop
iret
mov
cmp
cmp
cmp
and
sbb
rorl
mov
fsubrs
inc
dec
mov
in
or
scas
mov
add
sub
fadds
divps
repnz
aas
jnp
lds
fidivrl
movsl
cltd
inc
cmp
and
inc
jae
dec
xor
jbe
add
flds
sub
push
mull
inc
ret
popa
jecxz
loope
jle
sub
sti
inc
cmp
jge
pop
mov
addr16
data16
mov
in
sub
lret
inc
adc
lret
mov
into
lret
dec
fwait
cmp
cmpsb
hlt
pop
into
cwtl
xchg
rcr
nop
mov
ret
fs
mov
sbb
xor
stos
push
mov
test
fiadds
jmp
popf
jns
subb
xor
fsubp
cld
imul
mov
cmpb
jmp
jecxz
adc
inc
loop
push
inc
jne
les
addr16
mov
int3
fisttps
xor
pop
rcl
jl
repz
mov
sub
cmp
cld
out
mov
fwait
lods
les
stc
andb
sbb
fldlg2
adc
insl
add
repnz
add
out
push
shl
jno
inc
loop
or
cwtl
mov
mov
xchg
lods
pop
cmp
jno
push
mov
cmpsl
lods
mov
imul
fcoml
jb
add
mov
jge
fldcw
insb
lcall
js
in
aad
sbb
inc
sbb
and
aaa
mov
add
xchg
inc
pusha
add
aam
cmp
mov
push
push
pop
daa
cmp
sub
fldl
gs
aam
ds
stc
mulb
mov
xchg
dec
fldl
push
cmc
mov
jno
stc
add
push
dec
lret
cwtl
out
pop
std
dec
cmp
jp
pop
or
push
aad
jp
movntq
jmp
xor
lret
enter
cmp
movsb
jb
int
popf
xchg
data16
out
imul
or
test
insl
adc
rorl
ret
jge
push
mov
lret
jmp
mov
sub
ljmp
inc
adc
fmull
mov
fmul
pop
movsl
aam
shll
iret
lods
jae
iret
mov
inc
int3
cmp
adc
xor
stos
jmp
test
in
inc
inc
imul
dec
push
adc
mov
loopne
xchg
mov
xchg
mov
dec
xlat
rcrl
js
mull
and
jno
xlat
jns
add
fisttps
mov
jno
mov
call
dec
sbb
es
mov
dec
jp
popa
nop
int3
aaa
pop
jmp
leave
mov
lret
dec
jmp
icebp
movl
aaa
or
rorl
stos
jecxz
sbb
es
js
sub
push
adcb
idivb
jae
jbe
dec
xchg
fistl
addr16
and
ds
mov
or
faddl
leave
adc
inc
rcrb
jg
popa
push
aad
inc
cmp
or
cmp
jb
xor
outsb
in
xor
pop
jae
inc
mull
sub
fstl
sbb
fstpl
sub
and
sahf
into
fwait
clc
mov
aas
add
pop
testb
imul
xchg
push
dec
adc
addr16
dec
fs
ror
outsb
push
sahf
pop
ror
pusha
mov
dec
enter
jp
sbb
cltd
or
mov
rolb
lods
and
out
dec
mov
lret
inc
xor
push
loop
push
imul
cwtl
dec
xchg
xor
adc
dec
fldenv
sbb
call
call
mov
imull
in
lahf
xchg
lcall
adc
push
hlt
ret
lea
fimuls
xchg
data16
sub
insb
jp
lods
mov
ds
insb
xchg
xor
filds
inc
cmc
xchg
jae
jl
pushf
rcr
xchg
and
jg
dec
mov
test
push
xchg
bound
lea
mov
adc
ljmp
icebp
popa
pop
add
and
loope
stos
aas
add
fdiv
int3
sbb
fcomi
loopne
mov
adc
repnz
sub
and
push
jnp
insb
add
fbld
mov
ret
lea
outsl
mov
push
jecxz
xor
or
sub
push
mov
pop
push
imul
not
mov
fildl
cli
add
mov
mov
jle
inc
mov
iret
mov
das
sbb
and
xor
or
and
cld
mov
in
inc
inc
mov
sbb
mov
or
jmp
sysenter
aad
sti
aas
sarl
adc
cmp
adc
and
call
das
xlat
aam
fsubs
add
cmp
dec
or
int3
test
mov
cmp
jle
jl
fimull
stos
mov
fnstcw
imul
adc
push
mov
or
inc
fidivrs
outsb
cmp
pusha
xchg
aad
loop
xor
in
push
cmpsl
or
sbb
shlb
leave
lods
adc
sub
mov
jno
sti
pop
sbb
add
jp
or
sahf
dec
pushf
gs
pop
cmc
imul
sbb
mov
mov
push
pop
imul
repnz
dec
adc
iret
and
in
or
pop
xchg
call
dec
xchg
ss
mov
or
fidivs
adc
mov
shll
push
and
sub
divl
sbb
dec
in
stos
lahf
shr
and
jne
ljmp
cmp
setp
fcomps
jnp
dec
out
into
scas
pop
cmp
fwait
mov
fsubs
aad
fisubl
jbe
lret
jno
daa
mov
cltd
cmp
aaa
push
int
ja
adc
mov
sbb
jecxz
inc
insl
push
mov
add
jnp
add
arpl
imul
arpl
fwait
or
push
pusha
scas
dec
fbld
fucomp
mov
or
and
into
mov
pop
test
out
xor
ja
cs
flds
nop
jecxz
inc
cld
inc
xchg
inc
jnp
xchg
jl
xor
sub
xchg
out
inc
or
or
add
roll
pop
loope
adc
jnp
fldt
pop
sbb
and
mov
je
iret
insl
rolb
mov
push
orl
sub
push
inc
lea
shll
clc
in
int3
dec
push
xchg
pop
loop
push
inc
jp
mov
add
mov
pop
outsb
pushf
sbb
cli
cmpsb
adc
pop
fsubrl
mov
clc
clc
push
mov
mov
push
loopne
mov
cmp
pop
adc
mull
pop
outsb
sub
mov
les
and
cmp
adc
sbb
xchg
mov
cwtl
fwait
and
jp
add
adc
mov
daa
cmp
dec
mov
cmc
add
jbe
or
push
or
fstl
mov
ja
outsb
jae
fs
and
push
call
sub
adc
aas
fnsave
int3
inc
pop
sahf
mov
imul
rclb
mov
sbb
xchg
stos
mov
in
cltd
aaa
sub
xor
adc
hlt
mov
pop
test
cmc
cmpsl
rolb
std
lods
lahf
pop
lret
in
dec
imul
add
idiv
pushf
out
repnz
mov
xchg
jns
adc
xchg
leave
call
pop
fs
xor
mov
inc
sbb
sti
mov
clc
sbb
aas
push
mov
mov
pop
mov
mov
in
dec
xor
xchg
or
das
out
in
xor
ds
das
sbb
or
lds
mov
cli
sti
adc
fnsave
fwait
xor
or
lret
bound
pop
or
mov
insl
hlt
and
movsb
filds
push
fwait
aad
add
add
add
jbe
mov
pop
cltd
dec
pushf
lods
xor
dec
int
les
mov
adc
mov
test
mov
fcompl
int
xor
movsl
mov
pop
in
adc
ljmp
outsl
inc
jle
rcrl
sbb
or
pop
xchg
iret
repz
dec
push
xchg
stc
les
int
out
pop
mov
jbe
inc
cltd
push
movaps
sub
mov
add
jns
push
lods
mov
into
pop
mov
insb
test
popa
sub
ret
fistps
cmc
pop
push
add
cmp
mov
add
sub
pop
or
movsl
inc
jbe
pop
add
xchg
ljmp
imul
mov
mov
fidivrs
sbb
lods
mov
neg
insb
call
aas
mov
push
aas
lock
jle
push
out
dec
jle
xor
inc
lds
ss
adcl
xor
insb
xchg
cltd
fcoms
cltd
dec
jns
push
sub
xlat
nop
push
and
shrb
xchg
sub
or
in
jno
test
rclb
lods
rolb
xchg
movsl
pop
pushf
call
mov
cmp
shr
xchg
outsl
insb
mov
cmc
in
sbb
in
cmpsl
fcmovne
sahf
imul
adc
push
sbb
jb
ret
cmc
mov
jl
and
mov
inc
xor
push
jns
push
cmp
lods
inc
mov
ljmp
adc
xchg
das
movl
xor
lcall
or
or
imul
mov
push
shrb
and
mov
fstp
orb
dec
lcall
mov
test
mov
lcall
mov
jmp
inc
insb
sub
and
ds
ret
outsb
scas
and
icebp
xor
fdivl
ja
loope
cli
adc
pop
in
mov
rcrb
outsb
push
push
rcr
mov
or
mov
mov
aaa
mov
and
or
jecxz
jmp
scas
test
mov
cmp
cltd
mov
ja
inc
and
cmp
mov
cs
mov
sbb
out
enter
movsb
sub
xor
testb
pop
popa
inc
popa
jp
inc
ss
fdivl
cmp
mov
mov
movsl
dec
fcmovbe
mov
loope
mov
xor
adc
int3
push
or
mov
jp
sbb
pop
popa
sub
dec
ss
jecxz
lods
add
push
jecxz
mov
jl
in
outsb
in
inc
and
xchg
mov
jecxz
mov
shlb
xchg
push
adc
int
hlt
test
arpl
addl
outsl
xchg
in
iret
mov
pop
jb
or
bndstx
out
cwtl
xchg
cli
imul
push
or
mov
mov
sub
mov
jno
adc
pusha
inc
dec
icebp
and
pop
cmp
pop
dec
fidivrs
jge
mov
jecxz
mov
adc
jge
xchg
xor
cmp
add
and
lds
xlat
data16
sahf
scas
jmp
popf
imulb
inc
lret
xchg
cmpsl
mov
and
xchg
in
cld
mov
bound
lods
lret
xor
mov
pop
leave
push
cmpsb
push
stos
jge
mov
sub
movsb
js
iret
pop
push
lods
icebp
adc
aaa
or
adc
daa
pop
lea
out
inc
cmpsb
pop
out
pop
inc
mov
mov
out
inc
mov
and
xor
mov
xor
paddsw
jns
pop
jno
jno
sub
add
add
loopne
pop
pop
es
scas
or
push
stos
roll
pop
xchg
cmpsl
inc
or
cmc
andl
out
fdiv
pushf
dec
adc
mov
int3
add
mov
repnz
or
lahf
mov
xchg
or
push
push
mov
adc
inc
mov
int
jmp
cmp
or
jb
ds
out
mov
mov
adc
xchg
lret
mov
pop
in
movsb
mov
sbb
jmp
and
repnz
mov
pop
scas
and
mov
ds
outsl
shll
ljmp
scas
mov
lock
jge
in
cltd
and
sti
push
inc
rcl
lods
and
jb
cmp
pop
mov
scas
adc
sahf
rcrl
subb
fsin
scas
and
mov
sbb
adcb
xchg
fs
add
or
cmpsb
pop
adc
in
xchg
jnp
test
push
testb
addr16
mov
pop
mov
or
outsl
sahf
dec
mov
cmc
ret
es
ja
jg
mov
aad
icebp
sub
sahf
push
sarb
lea
jne
or
mov
fwait
push
jp
loope
lock
xchg
test
dec
and
jle
repz
test
pop
inc
xchg
and
imul
dec
and
dec
mov
in
out
stc
ss
xor
push
jmp
mov
in
jle
pop
das
xchg
scas
fldcw
popa
xchg
lock
or
jmp
ret
arpl
ja
leave
stos
sub
call
jg
es
jae
inc
lret
fmuls
fldcw
xchg
inc
sbb
xchg
xchg
cmc
fnsave
sub
sbb
jle
or
adc
and
lret
ret
push
pop
push
inc
subb
push
aad
mov
xchg
mov
lock
sbb
sti
movsl
cld
mov
call
push
dec
jne
push
xor
aam
xchg
xchg
and
fnstenv
aad
add
and
popa
sbb
and
pop
aas
mov
stos
push
lret
push
push
and
lahf
jns
dec
lret
imul
outsb
out
lods
pop
push
mov
js
inc
push
xor
jl
push
repnz
push
mov
in
fwait
pusha
and
sub
cmpsl
mov
mov
pop
fwait
dec
xor
out
out
mov
in
push
pushf
aas
pop
call
sbb
sbb
mov
das
inc
xor
pop
push
cmp
mov
jg
aam
rolb
mov
add
xchg
lds
jne
in
sub
sub
jmp
subb
popf
lret
add
xchg
add
inc
mov
in
pop
aam
xchg
cld
leave
les
test
dec
fsubrs
jno
cmp
add
cwtl
jmp
jns
and
push
in
pop
jl
cmpsb
sbb
push
fidivrl
lret
xchg
mov
sub
dec
xchg
incb
cmpsl
jmp
push
clc
xchg
pop
ss
aaa
lods
push
shlb
fcompl
lods
adc
push
sbb
pop
jecxz
pop
push
movsb
shrb
aaa
popf
jnp
mov
pop
lret
scas
test
jno
push
and
pop
jmp
dec
pop
outsl
dec
movsb
in
movsb
andb
rcl
sbb
cwtl
insb
loopne
int3
jnp
push
pop
inc
ss
mov
push
lahf
int
or
or
mov
xor
iret
fldcw
inc
or
ficoms
jae
je
movsb
cmc
aas
jge
sub
out
mov
xor
ret
into
ja
pushf
mov
and
sti
jge
add
rcrb
das
les
lds
inc
je
add
pop
or
xchg
or
pop
les
in
je
fnstenv
pop
test
push
testb
sbb
pop
xor
push
adc
inc
jle
fbld
adc
or
subl
lret
fisubl
mov
inc
aam
test
xchg
inc
aam
es
inc
adc
outsb
pop
push
in
sti
add
lock
lret
out
cmc
add
fstl
push
clc
loop
xor
arpl
mov
xchg
inc
stc
lock
xchg
repnz
sub
sub
les
or
jb
nop
arpl
imul
mov
cmp
sub
sbb
sarl
mov
cs
xor
jmp
sub
shlb
sub
pop
stos
xchg
xor
mov
push
arpl
push
outsl
pop
sarl
sbb
jb
dec
adc
pop
or
adc
dec
mov
popa
hlt
in
hlt
lret
xchg
cmp
lock
inc
or
ja
jg
and
fistl
scas
inc
inc
mov
mov
test
ja
cmpsl
test
jmp
mov
out
mov
sub
outsl
out
push
mov
fidivrs
jle
push
fs
icebp
inc
xor
dec
rcrb
adc
cmpsb
adc
xchg
icebp
flds
out
push
imul
insb
je
imul
xor
loopne
cmp
mov
push
outsl
outsl
sbb
sbb
dec
jae
movl
sti
jbe
mov
loopne
loopne
lods
inc
testl
pop
fistps
cmp
xor
inc
push
push
jno
and
push
std
or
xchg
bound
cmp
mov
inc
jns
aam
sbb
dec
cmp
bt
rclb
jnp
inc
or
mov
icebp
sti
inc
xor
adc
das
push
mov
ret
push
mov
cmp
and
loopne
mov
adcl
fistpl
jg
jecxz
xor
mov
xor
adc
and
or
adc
ja
dec
dec
into
xchg
jmp
ljmp
fs
xchg
dec
dec
pop
xor
aaa
cmpl
jle
adc
fcmovne
stos
jg
divl
mov
adc
mov
into
bound
push
les
mov
stos
add
xor
daa
sbb
call
add
std
add
out
xor
fildll
stos
push
leave
mov
into
push
mov
mov
pop
icebp
lods
xor
pop
xchg
pop
out
inc
daa
lret
bound
sbb
cld
shrl
mov
es
or
rolb
cs
xchg
jo
gs
xchg
ljmp
scas
loope
ds
and
sub
dec
and
in
mov
xchg
es
cltd
jle
jnp
int3
jns
fs
xor
or
aam
and
push
mov
ret
cld
fwait
outsb
ss
xorps
push
ljmp
push
xor
mov
test
and
jnp
imul
and
loopne
cltd
lret
int
je
or
mov
inc
sub
fldl
mov
or
cwtl
dec
mov
jnp
cmp
xor
rcl
stos
or
push
or
mov
cmpsb
lcall
ds
les
mov
dec
and
mov
int3
arpl
xchg
and
lods
mov
jb
push
jns
fstpl
mov
js
xchg
in
lret
lret
sub
in
cmpsl
fstpl
adc
rcrl
lds
int3
jl
pushf
in
mov
rcl
arpl
push
pop
std
cmp
add
into
jle
xor
sbb
fs
lret
xchg
jnp
es
fidivs
scas
xlat
test
sub
mov
jge
or
inc
cmp
addr16
adc
mov
mov
jle
loop
stos
outsl
stc
mov
stos
mov
enter
scas
mov
inc
sbb
and
xchg
loope
inc
iret
mov
sti
or
sbb
xor
xlat
mov
iret
mov
push
jo
or
pop
adc
xchg
sbb
insb
shrl
les
xor
fildll
mov
hlt
push
test
out
adc
imul
inc
hlt
xor
dec
adc
hlt
fs
mov
fcoms
ja
mov
insb
lea
xchg
push
cmc
movsl
pop
dec
push
mov
xchg
xchg
clc
sub
jno
popa
or
cmp
mov
mov
out
mov
leave
cmc
ret
cmp
mov
lar
pop
sub
adcb
sarb
push
insb
int3
mov
and
enter
andl
cmp
xor
mov
sub
mov
sahf
lods
inc
fdiv
test
xchg
xchg
jo
add
roll
test
cld
inc
idivb
jmp
ss
shl
imul
mov
pusha
sahf
jmp
inc
pop
pop
mov
test
mov
cmp
sub
dec
adc
dec
xor
movsb
fnsave
scas
in
cmp
push
mov
arpl
into
pusha
dec
test
std
ljmp
daa
sbb
cmp
xor
daa
call
dec
into
xorb
jns
in
std
and
and
popa
cwtl
gs
push
cld
mov
std
cmp
pop
and
push
scas
fdiv
inc
rorl
push
or
test
jnp
rcrb
xchg
lea
stos
in
lds
xchg
push
jno
les
sub
out
jmp
fcomps
nop
mov
incb
cmpsl
xchg
std
fisubs
sarb
xchg
jmp
and
sbb
sub
loopne
mov
in
insl
cmp
in
push
push
clc
in
pop
mov
push
insl
out
xor
mov
cli
cwtl
push
sbb
push
loopne
fwait
in
cmp
inc
lds
and
rcrb
pushf
lock
and
out
mov
lods
das
or
and
push
or
int3
sub
decl
xor
dec
fnstenv
or
inc
push
pop
jne
dec
or
mov
jnp
rcr
fdiv
mov
lods
icebp
mov
cmp
cmp
outsl
or
decb
cli
or
out
pop
push
call
loope
iret
sti
inc
dec
or
xlat
xorl
cmpsl
jae
or
lea
mov
push
pushf
jns
loope
shrb
xchg
scas
daa
jnp
fucom
dec
pusha
mov
lds
outsb
jle
orl
xchg
mov
inc
aas
dec
cmp
aam
and
dec
xor
out
sahf
push
sahf
cmpl
into
into
jo
jmp
cmp
xor
out
rcrb
test
test
int
sbb
xor
mov
pop
shrb
rclb
xor
add
repz
xchg
mov
jae
push
sub
out
and
jecxz
pop
or
test
shll
inc
test
ret
cmp
inc
testb
rorb
mov
mov
jle
cmp
mov
pop
dec
not
sti
mov
sub
in
and
or
cs
ljmp
or
sbb
mov
test
movsb
xchg
push
shll
dec
rclb
mov
iret
mov
pushf
cmpsb
mov
fisttpll
mov
lcall
push
test
jne
push
sbb
bound
sahf
cmp
inc
ficoml
cmp
dec
jno
dec
push
cltd
sub
add
cs
add
or
adc
dec
cmp
ja
xchg
sub
ret
cmc
push
mov
sub
mov
jmp
lock
jnp
xchg
sahf
pushf
fstl
inc
add
xor
call
or
mov
dec
dec
pop
and
js
jg
scas
cs
cmp
cltd
testl
imul
mov
mov
sub
xchg
cwtl
xor
fildll
jp
jecxz
inc
adc
sbb
push
sub
arpl
test
mov
add
dec
in
decb
in
imul
fwait
aam
mov
inc
jbe
mov
mov
ss
stos
shr
lret
mov
mov
fisubs
hlt
mov
push
xor
mov
mov
pop
mov
in
testb
inc
sbb
cmp
int3
sbb
jl
push
into
lret
pop
push
or
or
ret
into
dec
add
mov
and
cmpsl
mov
or
hlt
leave
and
jl
leave
adc
lret
and
push
add
repnz
pop
cmpsb
pop
popf
in
out
je
stos
mov
cld
cmp
pusha
push
cmc
add
sub
sbb
ss
jp
sbb
cmc
dec
test
mov
into
mov
shrl
xor
fwait
mul
sbb
push
dec
fimull
add
xchg
adc
or
rcrl
cmp
xlat
cmp
lcall
pusha
inc
xor
xor
fs
and
scas
sub
fwait
jo
add
xchg
test
cmp
and
and
inc
adc
cld
pop
jne
cld
gs
bound
mov
dec
cmp
or
insl
mov
and
outsl
inc
adc
shl
sbb
arpl
pusha
xchg
loope
daa
imul
addr16
mov
push
stos
mov
call
xor
out
dec
push
mov
pop
push
mov
or
sub
cltd
sar
cmp
shlb
and
fs
call
in
aad
je
in
int
xchg
imul
rcr
push
scas
lret
fistpl
loope
lahf
pop
pushf
xchg
cmpsl
mov
fwait
jne
push
xchg
jb
jge
shrl
push
enter
sub
js
and
lods
ja
loope
dec
adc
xchg
push
push
xor
es
or
pop
or
sbb
xchg
pop
pop
mov
loope
sub
fidivrl
negl
mul
cmc
test
mov
pop
dec
xor
adcl
ja
or
popf
shlb
je
ss
mov
pusha
enter
and
fisubl
div
imul
xchg
cs
inc
push
ljmp
xor
sub
inc
fiadds
mov
or
jae
jne
jmp
fsubrs
push
and
outsl
push
mov
test
rorb
add
popf
dec
fcmovbe
rorb
mov
subl
jmp
xor
mov
xchg
faddl
repz
imul
xchg
sbb
outsb
xchg
xchg
adc
sti
in
jge
push
inc
xor
lret
daa
inc
pop
push
cmc
adc
xor
add
nop
jo
cwtl
hlt
push
ss
jb
mov
in
cmp
jae
fimuls
add
cltd
aad
mov
mov
lahf
or
inc
nop
gs
xor
mov
add
mov
mov
xor
add
mov
imul
mov
xor
mov
lea
jmp
inc
outsl
mov
outsl
rcl
mov
andps
bound
pop
bound
popf
dec
imul
or
test
mov
sbb
mov
stos
add
push
xlat
dec
enter
pop
mov
popf
cmp
jo
add
push
mov
cmpsb
es
aaa
mov
clc
jp
push
jmp
xchg
jb
add
xchg
sub
push
repz
lret
and
inc
adc
daa
orb
inc
lea
inc
call
aad
dec
pop
inc
icebp
mov
add
push
daa
sbb
cmp
pop
xchg
int3
cmpsl
test
nop
add
xor
cwtl
adc
inc
mov
cmp
dec
pop
ret
ror
lds
mov
dec
mov
inc
xchg
inc
dec
mov
or
mov
test
jns
xor
sbb
cmpsl
add
shrb
and
sbb
aas
lea
xchg
or
jge
xor
mov
cmc
inc
call
mov
fistl
mov
leave
scas
inc
pop
in
rcrl
mov
sbb
out
cs
xor
imul
movsl
push
in
lock
fists
lret
das
and
add
scas
mov
jmp
jne
fwait
mov
cmpsb
mov
and
cmp
sbbb
mov
mov
call
call
mov
inc
and
pop
gs
rorl
lock
mov
imul
mov
push
and
and
jg
cmc
shlb
es
cmpl
cmp
icebp
add
cmpl
cmp
cmpb
lods
sub
sbb
mov
arpl
loopne
pop
clc
push
aam
lcall
jbe
mov
cld
imul
lock
dec
daa
push
iret
lock
aas
inc
add
in
sbb
jns
jns
xchg
xlat
adc
js
inc
mov
push
push
fwait
push
int
or
or
loopne
or
add
inc
xchg
in
cs
rol
xchg
mov
push
fistpl
sbb
rolb
rorb
clc
aas
jae
jmp
lret
inc
sub
xchg
cmp
dec
jae
jae
movsl
lock
int
test
insb
mov
jmp
fsubrl
xchg
add
scas
stos
insb
pop
jg
inc
imul
inc
cli
stos
movsb
sub
pop
mov
mov
mov
fdiv
mov
or
mov
push
scas
sti
ret
ret
cmpsl
cmp
and
dec
jg
sbb
xchg
stos
stc
and
out
out
cwtl
repz
push
pop
es
and
dec
not
xor
cmp
pop
test
xor
jge
fs
mov
mov
imul
xchg
in
or
push
test
pop
shll
push
xchg
stos
jge
mov
rcl
cs
das
push
leave
test
orb
gs
insb
icebp
daa
cmp
out
enter
dec
cmpsl
adc
jae
testl
lock
push
inc
adc
sub
xor
addl
lcall
mov
xchg
add
in
adc
mov
xchg
stos
fs
ds
movsb
sbbb
movntq
out
xor
fs
sbb
into
inc
in
mov
mov
xor
pop
daa
outsl
push
aad
mov
sub
repz
push
and
or
pop
jge
out
pop
dec
lods
sarl
loope
int
push
mov
mov
icebp
inc
sbb
push
sti
inc
ljmp
add
mov
adc
inc
rcll
popa
xor
lds
nop
xor
dec
cmp
ss
mov
push
pop
cmpsb
ds
mov
sbbb
jl
cwtl
cmpsl
pop
mov
gs
aaa
pop
mov
xchg
sbb
je
jge
add
movsb
andb
inc
cmp
aas
adc
mov
or
sub
mov
lods
mov
jge
jp
shll
dec
imul
xor
bound
ret
mov
aas
xchg
enter
push
dec
mov
imul
sub
add
ret
out
dec
jg
out
fldcw
imul
mov
scas
ss
imul
cmp
sbb
loope
shrb
and
mov
pop
xor
es
jge
daa
cmp
movsl
shl
das
mov
ja
xchg
mov
out
mov
ss
movsb
insb
imul
addr16
sbb
or
jbe
loopne
sbb
pop
mov
mov
sbb
lcall
inc
dec
out
lret
insb
and
outsb
dec
lods
in
mov
jge
aaa
fstp
mov
out
out
data16
inc
rcll
imul
test
fcmovnb
sub
movsl
pop
rorl
negb
pop
jle
cs
jne
fisubrs
pop
fidivrs
mov
adc
push
inc
scas
sub
jecxz
inc
cmpsb
pop
jle
xchg
ja
fscale
inc
xchg
iret
sbb
lcall
jg
mov
inc
jg
in
mov
out
mov
mov
sub
test
mov
test
lret
rcrb
insl
mov
pop
es
out
and
mov
loop
fsubs
push
jge
out
cmp
push
mov
mov
ret
out
repz
lods
in
into
push
push
mov
cltd
xor
inc
pop
pushf
sti
sub
or
xchg
adc
mov
xor
cmp
inc
xor
xchg
daa
pop
jg
add
xchg
sbb
cmc
or
stos
push
pop
pop
cmp
jl
xor
mov
cmpsl
mov
jp
sub
xchg
lea
cs
enter
aas
dec
and
imul
jae
lds
adc
push
outsl
inc
subb
jecxz
dec
out
jns
cmp
into
inc
shll
in
jbe
hlt
inc
arpl
aas
rorb
sar
cmp
outsb
cs
mov
dec
inc
fildll
mov
or
xchg
adc
jp
pop
xchg
scas
inc
je
int3
dec
lret
ja
test
mov
inc
mulb
scas
popf
xor
fcmovbe
in
pop
ret
dec
lahf
insl
inc
dec
mov
pop
add
jns
setno
xchg
mov
sub
jno
adc
xchg
loopne
imul
repz
inc
cld
jbe
push
or
or
test
mov
mov
aaa
mov
jg
inc
sti
rcll
or
pop
cmpsb
test
popf
dec
mov
add
les
ror
xor
movsb
aaa
cmp
loopne
ja
adc
int
loop
out
cs
subb
mov
cmp
fucomp
adc
mov
fcmove
daa
fidivl
sub
pop
mov
mov
cli
pop
jecxz
in
gs
cmp
jne
int3
sahf
loope
jnp
dec
and
ficoml
mov
jge
cmp
les
adc
jle
clts
push
lods
cmp
bound
ja
sbb
mov
cld
adc
dec
leave
cmp
xor
dec
cmpsb
rolb
in
mov
addr16
dec
fidivs
sbb
sbb
mov
test
jg
jge
movsl
outsb
cli
cmp
decb
sbb
test
jns
loope
pushf
xor
repnz
jnp
cmp
mov
xchg
push
lds
jecxz
lods
js
pop
add
dec
stos
dec
movsb
xor
adc
and
dec
movsl
dec
mov
ret
xchg
lret
arpl
dec
jmp
cmp
shlb
cmovo
add
push
imul
nop
or
les
push
cmp
jp
and
mov
cmp
add
adc
mov
inc
lcall
jo
pusha
add
ret
or
xor
sub
pop
jns
pop
jle
test
addr16
pop
inc
push
inc
cmc
aaa
sbb
fwait
lods
pop
in
cmp
or
repz
sbb
mov
xor
mov
cltd
mov
icebp
pop
adc
push
xchg
sbb
xlat
push
sub
daa
cmp
int
jb
icebp
cld
fisubs
pushf
in
sbb
mov
imul
inc
nop
enter
dec
scas
xor
gs
mov
mov
aas
sbb
lahf
bound
add
mov
cmpsl
cli
and
test
out
incb
cmp
sbb
xor
notb
sbb
fcomi
mov
add
aas
inc
add
sub
mov
jb
dec
jg
into
inc
mov
sbbl
pop
mov
lock
addr16
outsb
mov
sub
add
clc
mov
sub
notb
push
ja
or
inc
xor
js
out
cmp
divb
test
mov
jo
mov
lea
mov
hlt
stc
les
and
cmpsb
imul
lahf
clc
cmpsl
mov
and
ret
ljmp
adc
int
push
jmp
ja
xchg
es
scas
push
daa
dec
sub
mov
sub
popf
shrb
sti
movsb
loopne
cmp
orb
xchg
clc
sbbl
pusha
mov
inc
fldenv
bound
xchg
cmp
jg
movsb
mov
mov
out
test
push
jne
push
test
fwait
xchg
pop
repz
or
pusha
sti
and
sub
mov
fwait
loopne
in
ret
fiaddl
pusha
lea
gs
mov
xor
and
push
ret
sub
in
and
xchg
push
orl
push
lds
add
test
outsl
xchg
or
testb
aam
inc
pop
aad
loopne
and
lods
lods
push
fiaddl
and
sbb
mov
jnp
push
push
push
jg
ja
mov
jno
loop
mov
and
loop
sbb
sbb
jae
mov
mov
mov
loope
xchg
sbb
xlat
test
lret
xchg
push
mov
lea
xor
pop
mov
lret
fucomip
in
test
inc
rorb
cmp
insb
gs
push
in
test
sub
pop
pop
jae
ret
scas
mov
jl
aas
loop
lock
rorb
fadds
movsl
jp
inc
xchg
mov
clc
or
and
or
lcall
or
movsl
inc
xchg
aas
shrb
adc
mov
mov
in
fisubrs
rorb
and
sub
gs
test
icebp
xchg
add
jmp
pop
sub
shll
out
sarb
movl
sub
add
jb
pop
shll
sub
jae
lret
xchg
scas
imul
std
pop
xor
popa
insb
rcr
je
mov
or
jp
ret
daa
mov
dec
add
cmc
mov
xor
lcall
xchg
and
xchg
outsl
mov
fisttpll
mov
push
cli
mov
rol
nop
into
mov
and
scas
pop
fs
imul
icebp
mov
fcompl
enter
jnp
in
xor
leave
mov
cwtl
lcall
mov
mov
loop
fdivl
js
test
adc
aam
stc
out
mov
mov
test
cli
or
cwtl
lods
cwtl
adc
pushf
push
xchg
pop
and
fisubl
dec
les
mov
lock
in
jb
xor
cmp
nop
dec
push
mov
ret
stc
and
shrb
sti
nop
dec
mov
dec
mov
mov
jmp
dec
fmul
adc
data16
dec
mov
sbb
scas
leave
jp
xchg
dec
clc
sub
popa
xchg
mov
call
mov
or
and
and
rorb
xchg
jg
jo
insl
push
ja
push
mov
mov
and
loopne
add
jnp
xor
ret
cmovl
mov
mov
daa
xchg
or
dec
in
ja
into
sub
out
cs
or
xchg
stos
push
insl
add
dec
sbb
fldl
mov
je
sbb
mov
ret
loopne
fcoml
arpl
xor
push
fsubr
pop
and
aam
lahf
imul
roll
or
outsl
xchg
adc
adcl
sahf
add
xor
xchg
andb
rolb
xchg
pop
js
adc
dec
jb
mov
es
mov
scas
sub
dec
je
xchg
mov
stc
sbb
sbb
loopnew
out
cli
loopne
in
jge
sub
sahf
out
and
xor
lea
and
sarb
pop
mov
sub
leave
cmc
inc
cmpsb
stc
xchg
gs
aad
pop
rcll
dec
in
cmp
mov
xor
adc
in
mov
adc
jnp
fwait
cld
adc
pop
xlat
dec
or
dec
mov
mov
cmp
jle
mov
imul
push
jnp
icebp
repnz
dec
lods
daa
jbe
xchg
ret
cli
lcall
inc
les
xor
cld
popa
iret
jnp
add
push
test
fistps
clc
pop
sub
insl
fwait
mov
cmp
mov
xor
or
out
push
or
test
lcall
and
les
pushf
mov
ja
sbbl
jo
mov
jmp
pop
xor
clc
paddsb
insb
jbe
push
mov
imul
js
les
fisubs
enter
xchg
ret
cli
bound
leave
push
inc
dec
cltd
xchg
js
dec
je
dec
inc
addb
cmc
inc
daa
imul
out
dec
jo
addr16
mov
mov
stc
fmul
or
loop
pop
xchg
pop
repnz
mov
and
xchg
or
xchg
lcall
add
inc
loope
cs
mov
xor
mov
fadds
inc
inc
push
frstor
popf
das
pop
out
negb
sub
xchg
inc
pop
test
jbe
xor
data16
cmp
and
es
sbb
andl
inc
or
fcmovu
and
pop
jp
movntps
xor
test
pop
dec
test
lret
leave
jge
orl
sbb
sub
sbb
cmp
xchg
shrb
pop
fists
push
fwait
lods
mov
ljmp
sbb
loopne
in
mov
xchg
xor
movsb
add
jno
sub
mov
adc
mov
pop
mov
insl
hlt
lods
xor
cli
jg
movsl
cld
aad
ret
out
adc
std
cmp
and
aaa
pusha
lret
decl
add
push
hlt
inc
sub
lret
mov
insl
leave
repnz
mov
ds
jg
jge
je
arpl
mov
jne
gs
jb
inc
or
and
icebp
mov
pop
test
call
dec
pop
pusha
aad
sbb
jg
dec
xor
and
pushf
mov
add
leave
loopne
cli
icebp
xor
ret
psubq
xorl
cmp
mov
pop
mov
xchg
pavgw
test
jge
adc
jns
dec
ljmp
insb
inc
sub
push
adc
sub
jno
jb
lcall
in
and
shll
cmp
cli
xchg
mov
cmp
xor
mov
sub
sub
mov
mov
ljmp
mov
outsl
or
sahf
cmp
push
pop
repz
gs
fwait
mov
jb
std
adc
adc
adc
icebp
pop
jg
jo
push
cltd
mov
and
and
aam
adcb
push
dec
mov
mov
jbe
fimuls
sti
mov
les
lret
xor
jg
add
or
in
xchg
subl
in
dec
cmp
mov
vcvtps2dq
test
fwait
addb
loope
or
sub
push
cmp
scas
and
idivl
jbe
lcall
fnsave
mov
jle
mov
lret
imull
shrb
jmp
and
testb
lcall
mov
and
dec
fdivrl
insl
movsb
aas
cmc
sub
jae
ret
fs
repnz
inc
decl
loopne
inc
int
sub
adc
jb
and
adc
outsb
add
cmpsb
inc
cmp
push
sub
aaa
xchg
leave
push
test
add
into
add
lret
jbe
cwtl
popf
test
jge
enter
mov
mov
xor
aaa
lcall
cmp
hlt
es
xchg
ret
aaa
sub
rol
ret
and
cmp
ficoml
ljmp
aaa
sbb
inc
xchg
shlb
add
jmp
jl
or
push
mov
rol
jae
inc
loopne
test
lret
out
aas
aas
dec
cltd
and
arpl
lods
movsb
xlat
add
inc
lcall
ficoml
cmp
mov
add
cli
sbb
not
cmpsl
mov
je
loopne
out
mov
xchg
jb
lahf
dec
push
cwtl
pop
lcall
mov
in
fs
andb
cltd
and
insb
popf
jg
cli
or
subl
ret
xor
into
subl
js
leave
sub
int3
fwait
addb
iret
ret
mov
das
addr16
mov
mov
les
mov
xorl
xchg
into
xor
sahf
adc
dec
and
shl
ja
sbb
cmpsb
push
mov
add
in
mov
in
adc
dec
add
clc
push
inc
pop
fcomi
xchg
hlt
mov
jae
xchg
int3
in
movsl
mov
or
mov
out
inc
sti
aam
lahf
adc
sbb
cmc
sbb
outsl
inc
ds
xchg
test
stc
mov
stc
mov
mov
les
push
andnps
mov
pop
mov
pop
ss
push
add
mov
cld
push
sbb
aam
fs
pop
cmpb
pop
aad
sub
ljmp
xor
cli
push
mov
xchg
mov
sub
arpl
sub
ret
ja
js
sbb
mov
sbb
push
test
in
fcomp
xchg
lret
push
movsl
push
lahf
fs
or
icebp
push
cmp
test
stos
in
xor
out
push
scas
sbb
fs
sbb
sbb
dec
xorl
das
daa
mov
std
pop
push
std
fucom
arpl
insb
cs
mov
loope
push
in
enter
mov
cmp
xor
jne
pop
jge
or
xorb
popl
mov
or
out
lahf
lock
jo
or
sub
mov
cltd
sbb
mov
mov
mov
stos
xchg
lret
mov
xchg
or
test
mov
pusha
orb
mov
jne
sub
mov
adc
pushf
ljmp
sbb
add
aas
xor
push
fdivs
clc
mov
cmp
jp
jnp
scas
dec
pop
mov
ss
add
mov
push
and
jecxz
sahf
or
or
mov
mov
xor
decl
mov
xor
sbb
in
or
add
and
mov
iret
movl
imul
mov
in
dec
mov
test
xchg
or
xor
call
inc
lds
jmp
popa
ret
mov
cmp
stos
out
pusha
mov
push
mov
push
cmc
pop
or
std
sub
dec
mov
out
bound
fsubrp
cltd
push
push
pop
mov
das
inc
shl
sahf
pop
bound
stos
xchg
imul
daa
and
in
pushf
xor
jg
inc
sbb
and
arpl
cmp
fistpl
adc
je
out
jg
in
outsb
push
sahf
xor
jbe
cmpsb
in
jbe
xchg
aam
dec
outsl
fs
je
nop
cmp
sub
adc
dec
pushf
pop
cmpsl
in
mov
loopne
sbb
stos
icebp
lahf
clc
pop
mov
pushf
shl
les
sbb
xor
xor
mov
and
mov
cmp
jmp
out
es
xor
mov
int
enter
adc
adc
std
aas
test
negl
push
loop
dec
nop
pop
and
sbb
pop
fbstp
jbe
sub
inc
pop
rclb
add
push
stc
and
cmp
mov
mov
pusha
hlt
jmp
inc
sbb
sbb
adc
xchg
movsl
lock
mov
mov
adcl
addr16
lods
shlb
pop
clc
pop
inc
sub
aas
sti
sbb
dec
enter
mov
sti
push
sbb
dec
jle
jo
lret
cmp
outsb
dec
push
mov
and
dec
lods
xchg
xchg
jle
mov
test
push
pop
or
hlt
push
mov
out
xchg
mov
mov
imul
fmulp
jle
jb
and
int
fldcw
cmp
cmpsl
pop
les
fnsave
push
mov
pop
add
xchg
adc
lea
arpl
icebp
cld
adc
mov
push
data16
add
scas
inc
mov
sbb
fcoml
sahf
sub
enter
jbe
mov
cmpsb
data16
mov
add
call
inc
adc
mov
loop
mov
jmp
sbb
or
add
xor
dec
mov
repz
jp
dec
dec
aas
int
mov
pop
sub
and
stc
sti
xor
xchg
sti
imul
push
or
nop
inc
cmp
les
mov
pop
es
xlat
psadbw
lcall
pop
xchg
fcmovnb
outsb
xor
jno
jle
repnz
ljmp
icebp
add
jg
inc
sbb
jae
sbb
push
fimuls
add
or
jge
sbb
mov
loop
add
pop
and
mov
ja
jg
sbb
sti
cmp
dec
sub
test
clts
push
adc
xchg
pop
int
or
mov
cmpsl
mov
iret
push
pop
cmp
stos
inc
mov
lods
testb
push
popf
decb
mov
les
insb
jge
pop
into
sbb
outsb
adc
mov
mov
mov
mov
push
dec
fs
insb
and
fmull
pop
inc
pusha
stc
add
call
out
js
out
mov
call
incb
and
jecxz
dec
scas
push
mov
shl
ljmp
ficompl
pop
lret
sarb
std
xchg
ret
cmp
push
ja
inc
dec
sbb
repz
movsl
mov
xchg
scas
cmp
push
dec
dec
mov
mov
cmp
lret
xor
jg
loop
mov
and
lods
mov
jbe
inc
outsl
jns
mov
add
pop
sti
mov
in
mov
mov
mov
sahf
jmp
jmp
mov
cmc
rorb
xchg
cmpsb
sbb
jle
mov
out
lret
movsl
xchg
fstpl
cltd
daa
popa
ja
and
mov
shrl
and
xchg
dec
out
repz
mov
lcall
and
fxch
aaa
sarl
mov
mov
sub
ficoml
mov
addb
sub
pop
sbb
ljmp
lcall
mov
out
scas
cmc
idivb
and
mov
call
loopne
push
pop
xor
xchg
pusha
jle
fbstp
jl
imul
fldl
inc
or
ret
sub
cmp
mov
xor
stos
xor
les
inc
fists
jbe
jge
add
push
enter
repz
loope
loopne
or
in
xchg
xlat
cwtl
loopne
jp
push
add
lret
or
imull
je
out
add
mov
xchg
dec
push
sahf
sub
sub
jae
push
xchg
cmp
loop
pop
ret
sbb
test
lret
sbbl
adc
ficoms
in
js
ljmp
out
icebp
and
jmp
neg
inc
pusha
jg
subb
aas
lret
int3
sub
mov
rcrl
shlb
cmp
push
fmull
gs
negl
shll
mov
addr16
and
arpl
stos
jnp
xchg
push
jmp
adc
cs
lahf
aad
clc
jne
cmp
sbbb
pop
lods
aam
call
cmp
imul
push
lea
pop
std
cmpsb
xlat
mov
mov
xchg
adc
add
jge
addr16
imul
adc
push
insl
adc
jmp
pop
push
ret
scas
cmp
sbb
mov
arpl
std
test
scas
sub
insb
mov
sbb
scas
pop
scas
or
cs
xor
xor
idivl
nop
enter
xchg
imul
dec
std
xchg
div
addr16
sbb
outsl
dec
cwtl
sub
add
inc
loopne
test
xchg
or
loope
and
add
je
int
add
icebp
std
mov
inc
enter
xor
xchg
mov
jl
dec
and
add
adcb
jg
xchg
cmp
dec
xchg
jp
aad
inc
adc
sbb
jmp
jnp
pop
stos
xchg
subb
adc
sbb
adc
mov
fcoms
gs
gs
pushf
xchg
js
int
inc
push
lcall
dec
icebp
xchg
push
int
arpl
xchg
sbb
mov
xchg
push
inc
mov
insl
inc
mov
lock
fdiv
mov
movsb
push
inc
mov
or
dec
add
mov
call
sub
enter
insl
rclb
insb
stos
adc
and
repnz
add
outsb
xchg
push
loop
iret
pusha
xor
inc
xchg
or
add
nop
mov
scas
inc
or
test
out
adc
or
int3
fistps
lock
adc
or
bound
leave
iret
cmp
mov
cwtl
sarl
pushf
jb
out
and
dec
mov
not
test
mov
pusha
inc
rcll
mov
sub
xchg
jge
sbb
data16
mov
pop
jnp
inc
loop
clc
inc
clc
mov
cli
test
xchg
loope
xchg
mov
cmp
cmpsb
mov
xchg
mov
mov
mov
movsb
xor
cmp
push
pop
inc
in
repnz
mov
popa
pop
pop
test
int3
rorl
lret
lahf
jb
fcoml
cmp
xchg
jg
jle
push
add
and
aam
jg
mov
jmp
sti
jle
mov
add
xor
push
mov
xchg
dec
les
lcall
push
push
clc
mov
icebp
ret
cltd
ret
popf
outsb
fildl
adc
or
in
push
fwait
imul
loopne
sub
sub
lock
clc
xor
cmp
lahf
and
inc
loopne
aam
cmpsl
mov
lods
and
clc
dec
or
xor
lahf
mov
test
mov
add
adc
hlt
les
and
mov
gs
pop
addb
popa
mov
sub
mov
lcall
ja
aaa
dec
cwtl
mov
jp
adc
mov
pop
fcomps
cmpsb
movsl
lock
aad
pop
push
xchg
icebp
outsb
or
loop
jbe
mov
jnp
pop
movsb
jge
xchg
push
fnstenv
sahf
lret
pop
pop
subb
mov
mov
test
fsubl
push
daa
addb
ret
in
push
aam
sub
int
lods
mov
test
sub
cmpsl
mov
sub
lds
mov
push
cli
xchg
js
mov
and
jmp
xchg
mov
call
jb
int3
push
outsb
mov
addb
popa
imul
popa
push
cmpsl
pop
out
out
pop
insl
or
test
add
push
ss
push
jns
test
pop
xor
data16
add
ret
jmp
add
das
adc
xchg
or
mov
inc
rcrb
lea
xchg
push
sbb
cwtl
leave
pop
daa
push
loope
pop
or
pop
add
cmp
aam
push
scas
sbb
int
xor
jo
sub
dec
clc
repz
push
imul
mov
sti
hlt
jle
mov
mov
test
xor
cld
mov
mov
in
fmull
xchg
sahf
rol
fstps
xor
js
mov
aad
inc
jne
sub
movsl
adc
or
dec
jg
out
out
lcall
lds
mov
ret
das
push
cld
sub
stos
dec
lods
cmp
movsb
jge
cmp
jg
hlt
stos
pusha
sub
mov
insl
cmp
add
je
lds
clc
mov
in
sbb
popf
arpl
call
and
adc
push
cmp
xlat
mov
cmpsl
push
call
push
jne
popf
mov
inc
aad
mov
xor
rorl
add
xchg
lods
add
cmp
int
push
imul
movsl
clc
mov
add
add
cmpb
scas
add
lock
sub
inc
fistl
flds
jmp
mov
cmpsb
outsl
ret
outsl
jl
push
dec
hlt
mov
jle
outsl
mov
mov
aaa
dec
icebp
mov
cmp
push
outsb
stos
inc
hlt
sbb
shr
xor
jle
iret
sahf
xchg
and
inc
xlat
out
ja
psraw
js
aad
pop
mov
xchg
test
lret
add
cmp
push
dec
dec
icebp
cmp
hlt
add
mov
jle
push
das
push
inc
nop
mov
pop
pop
xor
cld
arpl
mov
mov
insl
int
pop
aaa
push
inc
mov
aaa
sbb
mov
dec
gs
sahf
aam
sbb
xchg
clc
mov
adc
dec
mov
xchg
outsb
data16
and
xor
shr
addr16
mov
and
fisttpll
inc
push
jmp
dec
icebp
mov
xor
pop
sbb
aas
cmovs
cmp
and
cmc
xchg
inc
ljmp
jno
add
mov
mov
mov
mov
mov
xor
xor
mov
add
div
mov
xor
lea
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
imul
mov
xor
mov
lea
cmp
jne
mov
jmp
mov
mov
mov
xor
add
mov
mov
add
xchg
xor
push
mov
pop
mov
add
lea
add
add
push
inc
pop
dec
xchg
dec
xchg
dec
xchg
dec
push
mov
pop
dec
call
cmp
je
xchg
push
pop
push
pop
inc
xchg
sub
xchg
dec
dec
mov
imul
add
xchg
push
xor
mov
dec
inc
add
dec
xor
add
pop
mov
pop
pop
pop
leave
ret
orl
xor
addl
inc
ret
push
mov
mov
andl
xor
or
inc
mov
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
xor
mov
add
mov
and
cltd
push
mov
add
add
adc
push
push
mov
mov
sub
or
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
push
pushl
push
push
call
cmpl
jne
mov
inc
mov
jmp
mov
adcl
mov
mov
xor
xor
xor
andl
add
adc
xor
xor
cmp
jne
cmp
je
mov
mov
mov
xor
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
xor
mov
mov
mov
jmp
pop
xchg
add
imul
ja
out
ret
jmp
bound
insl
sti
outsl
sbb
addr16
xchg
push
cmp
push
mov
filds
pop
xchg
aas
out
mov
lds
or
icebp
adc
loope
or
xor
out
jecxz
loope
loope
xor
lods
inc
hlt
mov
mov
mov
divb
dec
aas
lret
cli
xor
iret
repz
pop
push
popa
ret
jnp
mov
dec
mov
inc
push
or
inc
fldcw
or
sbb
xchg
int3
out
addl
sub
data16
lahf
rclb
mov
xor
dec
push
mov
movsl
lret
ss
mov
orl
enter
cs
out
lcall
push
pop
adc
fwait
bound
bnd
mov
cmp
dec
stos
mov
pop
shlb
aad
xchg
shlb
sub
inc
sub
sbb
fldl
mulb
fnstsw
push
loope
and
lea
rcll
add
adc
inc
movb
xor
rorb
xchg
call
inc
inc
adc
imul
aas
int3
inc
or
mov
test
mov
inc
dec
or
add
aas
loop
les
aam
and
fdivl
xchg
mov
orl
pop
call
mov
rorb
scas
pop
adc
sahf
dec
nop
test
inc
jns
stc
sub
pop
lds
insb
fidivl
mov
cmp
jmp
dec
dec
jbe
mov
ja
jae
lcall
das
adc
push
enter
aas
mov
jb
mov
rcll
cmp
repnz
sub
jae
test
push
gs
push
lods
ds
xchg
push
and
aaa
je
dec
xor
jns
out
int
sarb
fiadds
xchg
mov
lahf
cwtl
xor
pop
lret
mov
inc
aaa
in
negl
push
adc
mov
enter
inc
loop
mov
in
or
pop
jl
xor
mov
mov
pop
mov
xor
lods
pop
sarl
ret
mov
xor
xchg
inc
in
and
xor
add
cmpsb
sub
dec
jle
jb
adc
inc
out
mov
jg
test
test
jbe
call
fcmove
and
scas
add
ret
popa
addr16
xchg
push
cmpsb
add
pop
cli
test
push
jmp
dec
loopne
adc
adc
aas
mov
mov
test
popf
insl
pop
repnz
jp
ret
mulb
mov
sbb
mov
add
mov
dec
test
bound
pop
cmp
cli
dec
jns
add
jg
jae
das
outsl
jae
nop
cmpsl
daa
in
fcompl
xor
aaa
popl
movsl
stc
jno
leave
add
dec
mov
scas
push
mov
js
cmp
jmp
sub
jno
dec
in
mov
mov
add
dec
sub
loope
add
std
push
sbb
pop
test
mov
aas
lret
xor
or
inc
push
js
mov
mov
movsl
stos
mov
pop
adc
outsb
sub
mov
loope
jmp
xchg
xor
or
data16
mov
stc
ret
and
in
xor
or
xor
loop
ror
cmovle
ret
jbe
das
sub
xchg
andl
adc
jle
cmpsb
mov
xchg
je
cmp
and
or
sub
imul
sbb
jne
and
mov
inc
mov
icebp
jne
sahf
mov
imul
mov
jle
xor
or
inc
out
sti
setbe
push
lret
rcl
stos
xor
arpl
fcomps
cmpsb
fdivr
push
mov
push
mov
adc
cmp
push
push
inc
jns
repz
nop
hlt
jno
xor
sbbb
xchg
shrb
sub
test
addb
mov
mov
cmp
shl
iret
xor
add
shr
sarb
push
push
pop
xchg
mov
push
add
mov
nop
mov
jecxz
add
dec
repz
jle
xchg
xor
push
arpl
fs
jo
out
mov
mov
jmp
mov
dec
fcmovb
movsb
jbe
pushf
in
in
add
pop
or
test
out
adc
pop
cld
mul
adc
cli
insl
cmp
movsb
mov
ljmp
and
aad
mov
bnd
dec
out
add
adc
cmp
fbld
pop
push
jae
cmp
sbb
lea
xor
popa
lods
add
mov
lcall
cmp
sbb
cmpsb
mov
jecxz
sbb
jge
std
test
xchg
out
mov
sbb
xchg
test
adc
sub
imul
xchg
shll
add
mov
fsubrs
sbb
roll
add
mov
jo
lcall
push
stos
mov
cli
lds
test
adc
xchg
sar
loopne
shrl
mov
aas
push
mov
sti
push
loope
mov
imul
xchg
sbb
shll
adc
iret
stos
cltd
xchg
cmpsl
push
ds
pop
shlb
es
fnsave
push
jge
pop
sbb
sub
mov
ret
jns
call
cmp
jnp
test
or
shlb
adc
repnz
xor
push
mov
out
or
lods
lods
cltd
pusha
mov
dec
cmpsl
stc
mov
rorb
adc
or
lods
in
mov
out
cmc
das
fcoms
in
sti
dec
xchg
xor
pop
jo
jle
cmp
insl
mov
cltd
add
jne
mov
push
jmp
les
mov
call
rcrl
out
idivl
add
mov
lds
cmp
mov
loope
mov
lods
xchg
addl
mov
mov
adcl
aaa
call
sub
lret
inc
add
pop
add
or
aaa
push
test
push
or
addr16
out
push
les
movsb
cmpl
jl
sub
add
jl
lahf
sbb
sub
scas
lods
aas
inc
lahf
jo
test
lods
jo
imul
inc
je
cmp
pop
ret
fs
data16
hlt
stos
imul
andb
pop
push
jb
clc
insl
sub
adc
test
push
or
cs
rorb
lahf
or
xchg
sub
push
orl
xor
cmpsb
lcall
add
call
scas
jmp
jmp
sbb
fisubrl
cmp
movsl
bound
sbb
xchg
or
cmpsb
dec
mov
mov
or
mov
or
movsl
dec
pop
movsl
pushf
jnp
mov
mov
pop
inc
mov
aas
add
clc
dec
mov
ja
repnz
mov
call
mov
into
sbb
sbb
shlb
xor
sub
xor
xor
mov
push
insb
push
mov
mov
pop
cwtl
scas
std
shll
pop
pop
or
dec
js,pn
es
lret
outsb
jl
fwait
mov
fildl
cmppd
imulb
dec
inc
mov
xchg
sub
insl
mov
test
fisttps
ret
xchg
pop
jno
in
mov
mov
mov
or
xchg
cwtl
lods
aad
or
adc
cmpsb
pop
jmp
add
aaa
mov
cmpsb
out
and
add
xchg
insb
addl
inc
lods
push
orl
dec
jl
sbb
pop
mov
push
cmpxchg8b
repnz
dec
push
enter
aad
sub
imul
pop
xor
out
imul
push
push
dec
adc
push
adc
ja
or
inc
mov
add
inc
mov
test
cli
mov
cltd
inc
adcb
pmulhw
lods
add
xor
jecxz
mov
or
test
push
lret
add
and
push
xchg
inc
xchg
bswap
stc
push
ljmp
sbb
in
inc
movsl
mov
out
inc
cs
and
inc
or
mov
addr16
test
inc
enter
ds
sub
stos
jmp
pop
les
cltd
mov
push
or
dec
in
jg
and
ss
cmp
movsl
clc
cli
into
push
lock
arpl
stc
pop
sbb
popf
or
pop
lret
dec
push
adc
mov
xor
out
shrb
mov
das
adc
add
inc
fwait
imul
imul
cmp
push
push
mov
add
jbe
int3
stos
dec
scas
pop
enter
popf
gs
call
hlt
dec
int3
cwtl
pop
gs
lahf
dec
xchg
shll
arpl
or
nop
add
adcl
adc
aas
ljmp
xchg
dec
xor
mov
jl
xchg
jno
mov
xor
add
cmpsb
cmp
in
rcl
in
mov
sub
pushf
sub
sub
push
aas
adc
mov
inc
stos
pop
std
jg
lods
xor
andb
fisubrl
nop
jl
das
rol
sub
sub
jp
in
cmp
call
inc
mov
mov
lock
or
push
xchg
orb
push
jo
repnz
repnz
ja
mov
or
in
mov
add
das
out
push
fstps
mov
pop
call
inc
pop
cltd
push
mov
cs
jb
call
std
sti
fisttpl
xchg
fimuls
mov
or
mov
pop
leave
mov
or
sub
fmulp
int3
shl
mov
adc
xor
bound
dec
xchg
mov
jae
loope
adc
jmp
add
push
inc
sub
xor
aaa
dec
jbe
repz
cmp
pop
incl
jno
faddl
loopne
loopne
sbb
or
out
adc
jbe
cmp
cmp
jne
rcll
clc
inc
mov
inc
and
mov
cmpsl
gs
push
stos
adc
push
mov
dec
leave
cmp
in
mov
neg
inc
mov
inc
and
pushf
aas
shlb
decl
lret
add
loop
jb
sbb
pushf
mov
lods
pop
ljmp
fidivrs
or
rclb
sbb
scas
pop
lret
ja
mov
jge
xchg
mov
mov
dec
push
shlb
mov
push
insl
test
pop
imul
xchg
pop
push
test
dec
rolb
inc
jp
cmp
mov
lods
pop
push
jnp
sub
and
add
or
outsb
jno
xor
cwtl
add
mov
add
adc
push
hlt
push
scas
and
sub
jo
movb
xchg
and
js
jb
push
mov
sbb
or
mov
jns
push
int
repz
imul
jge
pop
inc
or
imul
xchg
in
mov
xlat
jl
mov
mov
sbb
daa
call
xchg
add
in
xchg
xchg
xchg
movsb
outsb
cli
outsl
jp
clc
inc
jns
cmp
and
push
pop
jg
cs
xor
nop
mov
adc
sbbl
test
cmp
xchg
jecxz
out
mov
sub
sub
mov
push
stos
rcrl
es
xchg
leave
or
pusha
popa
in
jg
and
rolb
push
mov
xchg
sbb
mov
inc
js
cmp
cli
sub
mov
jnp
or
inc
adc
stc
add
je
cmp
adc
int
and
push
xor
out
xchg
inc
sti
cmc
cmp
addr16
push
sub
shll
dec
and
mov
shll
jle
cs
mov
mov
out
movsl
notb
and
inc
pop
shll
inc
jno
sti
in
xchg
jp
popf
push
fs
push
inc
aam
jge
int
fnstcw
fwait
inc
out
flds
xor
test
mulb
ret
jns
push
shrb
iret
mov
stos
ret
lcall
jp
mov
roll
arpl
fucomp
in
insb
xorb
adc
mov
sbb
ss
stos
pop
or
iret
popf
dec
cltd
adc
push
scas
xchg
mov
push
sbb
loop
xchg
repz
xchg
sub
adc
jno
outsl
mov
adc
clc
xorb
popa
or
int3
lea
dec
jb
mov
fs
jmp
sub
mov
jbe
push
push
inc
loop,pn
mov
aas
shll
xchg
or
xlat
movsb
dec
jne
push
out
scas
inc
and
sti
mov
mov
aam
xchg
jae
jno
push
or
jb
adc
clc
cmovs
jbe
xchg
scas
sub
sub
es
or
mov
aaa
xor
aad
jno
arpl
aam
stc
xchg
mov
popa
ss
xor
jnp
cld
xchg
adc
add
inc
mov
movsl
fbld
aam
js
push
aad
and
out
mov
ljmp
sbb
mov
adc
xor
test
and
add
fadds
pop
sbb
test
icebp
pop
fdivs
jnp
clc
pop
push
add
inc
mov
loopne
mov
cmpsb
gs
rcrl
aaa
filds
pusha
lahf
pop
mov
jp
pop
and
pop
in
and
outsb
fdiv
pop
js
mov
pop
sbb
sub
test
cli
adc
out
movsl
arpl
into
mov
mov
xchg
cmpsl
and
lret
bnd
adc
gs
inc
enter
mov
outsb
in
std
mov
xor
adc
mov
xor
stos
xchg
pop
jb
int3
fcmovbe
mov
or
ja
cmp
sbbl
popf
dec
fld
aad
loop
xchg
jno
arpl
lds
dec
rorb
loopne
les
add
cld
popa
jb
bsr
or
or
pushl
add
cltd
xor
add
push
add
mov
dec
lods
hlt
iret
fimuls
push
loop
xchg
mov
jns
add
push
stos
fidivrs
jg
or
inc
cmpsl
dec
andb
jmp
cmpsl
shlb
sub
add
in
ljmp
mov
inc
add
pop
movsb
jo
jmp
shl
xor
dec
pop
or
aad
imul
adc
jb
mov
xor
or
aas
mov
inc
je
scas
scas
es
sub
xor
mov
mov
cmp
bound
mov
xchg
mov
pop
jbe
aaa
pop
out
sub
xchg
lods
imul
cmc
push
addb
int
repnz
xor
push
repnz
add
fwait
fs
jno
dec
aas
mov
cmovbe
scas
push
in
mov
pop
xchg
test
test
pop
mov
xchg
jl
xor
ja
call
loop
stos
pop
push
jge
dec
mov
mov
jge
inc
loope
imul
nop
mov
xor
js
scas
mov
jno
repnz
push
dec
loopne
xchg
rorb
out
movsl
mov
inc
sbb
pusha
push
jle
mov
push
xor
push
ret
sbb
data16
push
and
add
std
mov
shll
das
cmp
loope
out
xchg
movsb
sbb
fcmovnu
fidivs
std
cmc
andl
movsb
inc
xchg
mov
int3
loopne
les
ja
add
mov
xchg
inc
and
mov
or
fisttpl
or
lods
pusha
pop
jl
cs
add
xor
mov
and
inc
adc
int
cmp
into
add
add
daa
push
dec
xlat
jae
cmpsb
adc
fwait
push
adc
ss
push
sbb
fadds
xchg
into
ret
add
fwait
xchg
dec
inc
jo
inc
jnp
adc
sub
adc
xchg
out
out
cmp
inc
aam
sbb
movsb
push
or
push
stc
loop
ret
arpl
imul
lcall
into
add
push
dec
outsl
outsl
inc
pop
xor
xchg
test
inc
pop
out
popf
jbe
cmp
loopne
ffree
add
fisubrs
test
adc
inc
xchg
jge
push
xchg
lods
and
ds
stc
dec
mov
mov
cli
sahf
out
pop
daa
lret
jmp
sub
xor
cmpsl
cmp
adc
inc
mov
xlat
push
lahf
jl
loope
dec
dec
add
sub
and
dec
incb
cli
mov
aam
jl
sbb
adc
fdivl
inc
xchg
mov
imul
xchg
sub
mov
ljmp
rolb
push
mov
pop
or
mov
int
mov
cmp
inc
scas
add
popf
and
stos
lahf
push
insl
and
mov
push
les
icebp
cld
inc
repnz
aas
add
push
mov
xorl
mov
jns
mov
and
sub
fistl
dec
jmp
sbb
add
mov
nop
jb
hlt
adc
insb
push
in
sbb
rorl
mov
mov
inc
cmpsl
push
ret
push
movsb
std
xchg
push
mov
sub
mov
mov
inc
test
or
jo
sbb
jns
pop
int3
pop
add
sar
add
jl
scas
insl
jbe
dec
mov
loopne
push
ljmp
int
mov
cmp
lds
leave
out
out
xchg
arpl
pop
adc
sbb
loopne
dec
sub
or
sbb
mov
mov
sbbb
out
out
flds
outsb
negb
aam
in
test
xor
push
mov
rsqrtps
dec
sbb
stos
mov
push
xor
sbb
daa
nop
jg
push
push
js
nop
movsb
jo
sbb
cmpsb
leave
xor
iret
imul
adc
jo
and
xor
pop
leave
push
arpl
lcall
or
loope
adc
add
dec
leave
inc
aam
and
ficompl
mov
push
jg
add
sbb
inc
push
stos
bound
or
jb
push
adc
push
inc
sbb
pop
xchg
jo
enter
mov
dec
incl
ljmp
mov
loop
jb
call
mov
xor
inc
fildl
adc
xchg
adc
inc
pushf
fdivr
dec
jbe,pt
fsubs
in
sbb
int3
idivl
nop
mov
lahf
pop
stc
mov
push
lret
push
repnz
rcrb
rcrl
and
enterw
cmpsl
insl
aad
outsl
insl
adcb
adc
insl
in
sbb
adc
pusha
cmp
fadds
mov
lret
jne
ja
call
mov
insb
xor
mov
jbe
adcl
jle
cmp
mov
scas
imul
imul
xor
aas
fdivp
or
mov
aaa
hlt
dec
mov
subl
inc
in
js
sbb
ffreep
les
and
aas
dec
mov
sarb
inc
jo
adc
mov
mov
cmc
fisttpl
xchg
imul
aaa
fimuls
xor
cmovne
lods
les
cmp
addr16
adc
cmc
xchg
clc
ror
je
xcrypt-ofb
cmpsl
ljmp
idiv
mov
shlb
divl
stos
jnp
adc
test
push
in
sub
mov
imul
mov
test
call
jo
push
pop
push
stos
jne
mov
aad
stos
insb
leave
push
in
je,pt
mov
sbb
fcom
xchg
movsl
cld
mov
cmc
or
inc
test
or
add
test
rorl
and
setge
mov
add
das
stos
je
insl
xchg
xchg
iret
xor
cmp
test
jno
ficomps
pusha
sub
push
and
pop
or
hlt
mov
mov
pushf
xor
add
lock
aaa
sbb
sub
dec
mov
cmp
test
inc
or
xor
inc
pop
test
leave
in
push
and
sbbb
fidivrs
sbb
or
lea
fidivrl
sub
loop
mov
pop
xchg
pop
out
push
xlat
sub
jne
push
xor
in
lds
xchg
pop
xchg
and
aas
dec
adcb
dec
int3
aam
mov
push
ja
xchg
out
aaa
mov
push
insl
mov
dec
push
in
push
lods
jb
xlat
imul
mov
xchg
inc
out
and
pop
dec
outsb
xchg
fwait
xor
cmc
pop
test
mov
ret
xchg
mov
out
bound
lret
in
ss
sbb
lds
push
and
pop
fs
mov
je
or
lea
pop
subl
sbb
pop
and
jle
mov
jnp
or
jnp
jne
insb
push
sbb
cltd
adc
pusha
or
arpl
and
dec
mov
push
adc
mov
pusha
sbb
add
mov
push
shll
push
fildll
add
push
xlat
decb
into
sahf
pop
push
adc
pop
add
incl
sbb
xchg
mov
xor
lea
inc
xor
dec
pop
mov
xchg
cwtl
fisttpll
in
cmc
stos
or
inc
xor
addr16
fstps
daa
push
into
sub
mov
and
jle
mov
cs
adc
loope
movsl
cwtl
jl
or
jno
pop
cli
es
sarb
lock
dec
xchg
ljmp
adc
jl
xlat
jno
dec
and
push
outsl
cmp
sbb
iret
dec
or
xor
and
pop
push
push
fisubrs
inc
and
icebp
inc
in
and
fidivl
stos
adc
xor
push
les
stos
sub
test
fwait
lea
mov
jg
adc
xchg
and
lahf
insl
sbb
xchg
pusha
adc
cmpsl
mov
add
mov
adcl
ss
sub
sbb
call
cltd
mov
dec
mov
adc
cmp
add
mov
cmp
inc
push
lret
xchg
xchg
adc
pop
insb
shll
lds
js
je
mov
xchg
mov
out
es
shll
inc
pushf
xchg
mov
and
pop
push
cmp
jg
cmc
and
mov
xchg
call
jmp
icebp
fldenv
push
jmp
inc
in
cwtl
shll
aas
filds
stos
pusha
aas
xchg
test
test
mov
rcr
shl
das
sbb
push
movl
adc
fcomi
fldpi
dec
les
sar
out
in
fstpt
in
or
cltd
fs
fidivl
mov
adc
xchg
mov
pushf
inc
ret
jmp
hlt
bound
lret
and
sub
fdivs
addr16
popa
in
mov
jo
ret
lcall
and
in
pop
inc
sub
pop
in
mov
call
mov
mov
lret
repnz
pusha
cld
push
mov
jg
inc
bound
push
cmpsl
push
bound
mov
mov
notb
inc
jmp
ret
out
pop
loop
pop
mov
loop
xchg
push
fists
aas
popf
xchg
test
call
ss
scas
incl
decb
mov
cmpsl
scas
jno
loopne
ror
bound
dec
mov
xor
jb
rcll
xor
adc
xorl
rorb
negl
xor
data16
shrl
adc
mov
mov
jle
cmp
cltd
jae
daa
and
sbb
lods
stc
cmp
xchg
repnz
ljmp
mov
jnp
xchg
jns
aas
mov
ja
push
or
sarb
rcrl
cmp
mov
fs
test
bound
test
ffreep
bound
mov
or
ja
dec
push
in
rcr
xor
pop
inc
adc
out
repnz
inc
nop
daa
imul
jle
mov
js
daa
pop
jno
fiaddl
imul
push
cli
test
cwtl
lods
lahf
cmc
notb
sub
test
pop
xor
popa
fwait
sub
add
movsl
push
sub
jne
sub
jp
loopne
imul
pushf
lret
sbb
aaa
pop
pop
adc
mov
rcrl
add
lret
orl
mov
divl
shll
inc
movsb
in
xor
stc
sti
fidivrl
lcall
faddl
sti
lock
sub
xchg
data16
sbb
sbb
iret
rol
ja
clc
lret
popf
insl
loopne
jno
aaa
mov
xlat
jmp
xchg
leave
jp
popa
out
rol
stos
cmp
mov
inc
bound
jl
fiadds
push
sarb
sti
movsb
mov
das
out
in
sub
mov
push
and
icebp
jo
cmc
imul
dec
pushl
outsl
pop
fwait
jbe
add
mov
cmp
pop
mov
and
stos
icebp
or
lods
inc
lret
push
hlt
push
adc
inc
cmp
push
aad
cmpsl
adc
lods
xor
shlb
sbb
inc
inc
xlat
leave
enter
outsl
sbbl
or
fwait
mov
je
mov
jge
inc
and
dec
and
pop
sti
or
cmp
pop
les
test
push
cli
movsl
xchg
mov
mov
bound
mov
xor
enter
push
mov
pop
jl
dec
mov
dec
xor
ljmp
aam
jge
xchg
mov
sti
sbb
pop
shrl
adc
sti
lods
cmp
pop
call
repnz
add
icebp
mov
xor
jbe
in
xchg
mov
ljmp
dec
or
push
jg
jo
rcl
mov
movsb
repz
or
mov
addb
mov
add
lcall
mov
xor
lds
pop
cmp
test
movsb
xchg
add
rol
adc
mov
jns
adc
repz
and
dec
outsb
in
icebp
mov
push
sub
fimuls
jmp
sti
lock
push
lods
inc
xor
push
pop
mov
es
repz
out
call
sbb
nop
sub
cmc
sbbb
repnz
jge
bound
loopne
test
xchg
lods
mov
fsubl
push
xorl
dec
adc
fstp
cs
daa
in
aam
push
sahf
int
out
popf
push
shll
testl
je
inc
xor
lret
sbb
jnp
inc
sbb
scas
xchg
mov
push
mov
data16
dec
lods
or
addr16
push
mov
mov
push
stc
mov
cmc
leave
or
jl
inc
push
lret
jl
outsl
lock
daa
popf
test
cli
jp
ret
sub
sbb
je
stc
jns
pop
idiv
movsl
or
inc
push
jle
stos
repz
push
dec
xchg
shlb
in
rcr
jns
mov
or
mov
add
sahf
adc
lret
test
clc
lds
mov
jno
and
jae
es
mov
es
rolb
cmc
rorl
sbb
loopne
insl
mov
mov
insl
xlat
and
xor
mov
mov
imul
sbb
add
sub
std
outsl
in
ds
bound
mov
mov
out
mov
popa
push
adc
pop
inc
xlat
inc
imul
mov
daa
or
cmp
sti
cmp
mov
stos
int
xchg
aad
in
imul
and
iret
lds
cmp
push
push
or
in
mov
mov
testl
xor
sbb
xor
int3
out
lds
dec
xchg
shll
fdivs
sub
mov
bound
insl
shlb
fldcw
scas
mov
aas
leave
and
sahf
lock
sahf
jle
push
mov
lret
idivb
cmp
dec
hlt
jae
mov
enter
push
push
jp
push
stc
push
arpl
push
shlb
mov
cmp
dec
stc
orl
lcall
call
or
stc
adc
fistpl
movsl
xor
into
add
xchg
imul
and
xor
add
cwtl
movsl
pop
enter
push
loope
xchg
adc
aaa
pop
push
andl
push
push
lock
lds
cmp
outsl
mov
mov
inc
mov
cmp
jno
lds
aas
sbb
sub
pushf
push
in
imul
js
iret
inc
mov
push
rol
repz
inc
dec
sarl
inc
imul
lahf
shl
arpl
xchg
mov
rcl
xor
sub
xchg
addb
cli
sbb
movsb
lock
mov
repz
mov
loope
ljmp
popf
daa
xchg
into
sti
mov
xchg
pop
push
hlt
lea
adc
push
xlat
cmpsl
sub
xchg
stc
mov
pop
xorb
push
outsb
sbb
or
mov
sub
xchg
add
in
sbb
and
or
es
lods
add
ss
scas
data16
sub
pop
out
add
jns
cltd
inc
xchg
xchg
dec
lcall
dec
insl
insb
stos
jecxz
rdtsc
mov
es
sub
dec
pop
mov
je
aas
out
into
int
jp
pop
test
add
iret
add
iret
mov
mov
dec
call
and
pushl
inc
sbb
mov
das
into
jmp
push
adc
pop
cmp
dec
and
ja
jmp
cmp
xor
loope
seta
loop
lea
outsl
mov
push
fwait
jae
scas
cmp
pusha
cs
lahf
xor
sub
imul
mov
mov
xor
cltd
or
ja
pop
repz
mov
dec
add
pop
push
pop
fadds
mov
jo
xchg
into
clc
add
pop
mov
aam
in
iret
dec
and
test
call
sub
push
cmp
jns
push
outsb
inc
mov
inc
add
cmp
pusha
push
lret
jge
test
inc
mov
add
push
mov
pop
dec
mov
jae
fisttpll
into
cltd
inc
aam
out
lcall
dec
dec
ret
xchg
xor
and
mulw
adc
insb
pop
mov
mov
add
mov
mov
xor
add
jmp
jae
mov
xchg
movsl
jecxz
pop
sbb
or
lea
jmp
bound
in
xchg
scas
lods
add
mov
mov
mov
mov
mov
testl
sbb
add
or
fucom
push
inc
mov
call
adc
mov
mov
sub
loopne
lea
xor
jo
jne
push
pop
add
xchg
rcll
or
loopne
mov
xor
pusha
loope
jl
hlt
aas
mov
in
scas
adc
pushf
push
jl
xchg
pop
loopne
xor
js
inc
and
idivb
jbe
into
push
notw
fs
test
and
sti
pusha
mov
das
jecxz
mov
cmpsb
aam
cmp
aas
xchg
lret
out
mov
test
xchg
push
and
xchg
or
cmp
shlb
std
adc
cltd
xor
fwait
loop
inc
adc
insb
loopne
mov
ljmp
loop
cmp
mov
mov
push
pop
xor
xlat
jno
cli
insb
xchg
aad
aaa
jae
aam
and
adc
mov
mov
je
cmc
and
les
and
call
clc
pop
xor
push
fs
xchg
je
dec
mov
xor
push
les
lods
xchg
int3
fs
loop
stos
shl
loopne
fs
hlt
inc
loopne
fdivr
clc
loopne
push
push
loope
and
sub
push
cmpsb
push
mov
movsb
rclb
pop
out
shlb
xchg
mov
mov
jp
rclb
out
jo
adc
test
and
and
dec
xor
or
in
add
data16
adc
and
cmc
push
cmp
outsb
pop
cmp
outsl
daa
ja
leave
sbb
cmp
mov
push
insl
sbb
repnz
sbb
addr16
pop
sub
xchg
adc
mov
jbe
fisttpll
mov
sub
dec
inc
adc
repz
add
and
mov
pusha
repz
xchg
cmpsb
stos
outsl
add
jg
cmp
jp
icebp
cmp
popf
shl
cli
repz
cmpsb
into
loopne
mov
push
xor
inc
enter
push
xor
cmp
daa
js
stc
in
add
push
pop
scas
cmpsb
xor
and
jp
or
push
cmp
add
cmpsl
push
insl
outsl
dec
mov
add
int3
inc
jg
mov
setne
mov
pop
movsl
cmpw
mov
dec
pop
scas
movd
xor
push
popf
dec
sbb
aaa
repnz
xchg
and
int
fiaddl
mov
pop
xor
pop
sub
repz
add
testb
loop
movsb
mov
loop
mov
cli
ja
pop
cmp
adc
pop
leave
imul
es
xchg
lret
xbegin
mov
int3
mov
mov
sbb
adc
aas
ffreep
sub
cmpsb
ljmp
or
mov
shll
cmp
in
mov
inc
cltd
cmc
or
pop
and
cmp
jg
add
lea
mov
lock
sbb
imul
mov
cmp
cmp
mov
faddl
xor
pop
in
out
and
daa
mov
outsl
adc
les
pop
in
sarb
sti
arpl
pop
pushf
cmp
scas
push
cmc
dec
inc
int
fisttpll
xlat
call
xlat
push
nop
cltd
push
push
fnstenv
xchg
or
sbb
adc
cmpsb
lret
xlat
jno
dec
in
lcall
gs
push
xlat
mov
lods
jns
sbb
ja
mov
push
out
pop
dec
jp
dec
repz
test
inc
sbb
std
cmp
pushf
pop
jne
sub
fs
loop
and
inc
fdivrl
add
fs
mov
aam
fwait
push
pop
pop
aad
cmp
fwait
sub
mov
xchg
push
mov
cmp
lds
incl
pushf
xor
mov
add
test
rorl
adc
in
testb
mov
cld
jg
into
mov
in
sbb
fsts
and
push
shrl
pop
push
add
imul
je,pn
jbe
insb
push
daa
pop
jb
test
xchg
cli
jbe
ss
cltd
outsl
test
loop
scas
jp
addr16
insl
pop
pop
push
das
out
inc
aas
hlt
inc
jmp
stc
mov
pop
js
push
lcall
std
adc
or
cld
xchg
push
into
pop
mov
jo
ss
pop
mov
movsl
push
sbb
sbbb
or
jecxz
mov
hlt
aas
negb
pop
aas
jp
or
ljmp
in
pusha
insl
xorb
mov
mov
in
or
push
test
sbb
cmpsb
inc
pop
adc
pop
jns
outsl
leave
shlb
in
sarl
cmp
adc
outsl
mov
test
rorl
inc
insb
sub
out
inc
add
mov
mov
in
inc
lods
and
jbe
cli
sahf
and
insb
clc
mov
cli
mov
jl
loopne
inc
pop
popf
jbe
cmp
inc
cmp
mov
je
inc
arpl
adc
add
lds
xchg
dec
outsl
pop
jl
shll
std
pop
lds
scas
rol
arpl
pushaw
in
jp
mov
sbb
mov
inc
in
dec
pop
cmp
inc
mov
jge
int
mov
and
roll
push
add
shrl
jl
in
lcall
scas
sub
bound
cmpsb
andps
add
cmc
aam
sbb
das
test
adc
push
pop
pop
sbb
fcoms
push
lret
jo
pop
mov
outsb
dec
jmp
enter
insb
adc
push
mov
mov
mov
lcall
fdivrs
int
mov
fsubrl
enter
adc
push
out
push
pusha
inc
inc
imul
daa
push
adc
cmp
rorl
xchg
add
mov
push
lock
es
lods
sbbl
loop
sbb
adc
mov
es
dec
mov
lods
jae
cmpsl
pop
outsl
xchg
into
pop
or
jne
addr16
mov
cwtl
jp
fsubl
pop
jo
adc
sub
hlt
inc
push
cmp
out
pop
dec
popa
push
in
inc
sub
popf
lods
iret
call
test
pop
cmp
out
mov
mov
insl
popf
bnd
out
dec
das
jmp
test
push
in
xchg
jns
jmp
xchg
clc
int
movsb
dec
cmp
fcom
leave
pop
in
cwtl
sbb
mov
xor
mov
aad
iret
mov
jmp
inc
jg
test
pop
shr
jecxz
sti
jg
cmpl
int3
xchg
lock
xchg
and
mov
add
clc
icebp
jne
rorb
lods
push
push
xchg
outsl
push
or
push
aam
push
cmpsb
push
mov
and
jg
cli
mov
out
and
mov
sub
mov
repnz
rclb
xor
xchg
and
in
scas
adc
mov
or
lret
orb
insb
mov
jp
jno
loope
stos
lcall
xor
pusha
fistl
dec
inc
arpl
insb
outsb
inc
jnp
xor
sbb
clc
jbe
mov
fsub
xchg
pop
and
cmc
push
cs
or
jecxz
xchg
mov
and
imul
mov
inc
mov
aam
out
or
pusha
sbb
jae
lret
sbb
lods
aas
push
cmpsl
push
add
mov
push
mov
push
jge
lret
and
stc
push
dec
jnp
or
xchg
jbe
pop
push
mov
sub
mov
xchg
sub
rol
xchg
clc
cmp
outsb
xlat
push
clc
cmp
mov
or
js
negb
fstps
aaa
fimuls
jnp
mov
cmp
and
mov
loop
ficoml
cmpsl
bound
notl
push
aas
push
cmp
xchg
sbb
cmc
inc
pop
addr16
lds
xchg
pop
sub
push
mov
rcll
xchg
inc
xchg
add
push
sub
in
mov
ss
cwtl
and
das
fistpl
xchg
pop
icebp
xchg
stos
fndisi(8087
out
push
mov
bound
sub
jb
test
arpl
aaa
sub
shlb
mov
pop
imul
movsb
add
je
dec
sbb
inc
cli
mov
dec
add
daa
loope
mov
ror
mov
lds
push
mov
cs
cwtl
mov
fldcw
call
jno
mov
fistl
es
xchg
out
insl
loopne
mov
es
mov
push
inc
iret
fisubl
or
inc
jns
jecxz
shr
jnp
and
imul
dec
or
mov
loopne
sub
cltd
or
mov
inc
loop
pop
xor
icebp
lcall
mov
inc
ret
or
lds
jle
movsb
xchg
mov
lret
push
pop
mov
xchg
bnd
add
rcrl
add
mov
data16
jns
out
mov
dec
lahf
jg
sbb
dec
repnz
and
scas
jne
push
std
mov
popa
push
fsubl
ljmp
mov
dec
lahf
insb
or
shrb
xor
fcompl
rcrl
divb
rclb
sbb
xor
cltd
pop
ja
ret
add
push
jne
adc
popf
sub
inc
xchg
xchg
sub
es
bound
stos
sbb
scas
adc
loop
xor
cmp
mov
pop
into
cmp
jns
cmp
sahf
push
lret
push
add
add
inc
insl
mov
jl
ja
fisttpll
push
and
xchg
push
fst
add
xchg
jo
cmpl
das
xchg
xlat
sahf
loopne
out
sbb
mov
subb
scas
fwait
andb
adc
xchg
je
dec
jg
testl
fcoms
cmpsb
fmul
sbb
int
sub
jne
out
mov
mov
jg
pop
adc
sbbb
sar
jl
fdivrp
pop
daa
packssdw
jle
loope
push
aas
jnp
out
sub
cmp
lahf
repnz
das
mov
dec
sub
inc
notl
mov
jnp
sub
decl
dec
jmp
fdiv
fnstenv
mov
sbb
push
loopne
mov
fidivs
orl
pop
xchg
inc
push
addr16
sahf
xor
mov
outsb
xchg
int
and
lock
scas
push
mov
stc
and
push
cs
cmpsl
orb
loop
push
int3
pop
scas
loop
aas
sahf
or
les
test
stc
cmp
jns
mov
xchg
pop
dec
imul
mov
xchg
pop
pop
pusha
lock
out
mov
pusha
jno
xchg
or
add
sbb
imul
mov
test
fsubl
cmc
popf
les
xchg
or
repz
jae
and
loope
rcrb
pusha
sbb
mov
xchg
imul
dec
cli
pop
in
mov
push
mov
in
dec
out
gs
stos
in
jno
push
std
cmpsl
mov
lcall
loopnew
mov
mov
repnz
and
test
pop
jg
cmp
cmp
test
or
xor
out
jnp
push
cs
or
fiadds
and
sbb
subl
pop
xchg
fistpl
inc
movsb
and
cwtl
jo
aad
sbb
or
push
jge
cmp
xor
pop
pushf
test
cmpsb
sti
pop
and
mov
or
dec
mov
add
jmp
add
inc
and
mov
add
flds
test
or
mov
pushl
out
cmp
adc
xchg
dec
push
or
xchg
int3
jmp
jns
jo
fidivl
mov
sahf
test
mov
lahf
xor
mov
cmp
push
jnp
jmp
lds
dec
add
test
cmp
es
inc
dec
push
out
movsb
bound
cmp
enter
ficompl
add
ret
sub
je
lcall
popf
ret
and
pop
insl
or
lock
sbb
xchg
xchg
xchg
imul
lcall
out
addr16
and
notl
cmp
or
outsb
ja
push
jnp
stc
xor
std
imul
pop
and
lret
jo
and
js
movsl
das
pushl
mov
lea
xchg
stc
movl
lahf
dec
adc
push
fbstp
xchg
or
ja
lcall
mov
pop
mov
cltd
lret
mov
cmpsl
lcall
add
and
cmp
les
jno
fdivrs
xchg
pop
iret
xchg
xor
popa
andl
inc
push
cmpsb
lea
cli
xchg
add
in
mov
popf
leave
ljmp
mov
out
mov
sar
jge
lods
and
aas
mov
pop
lret
sbb
or
add
jge
testl
loopne
xchg
push
fwait
out
sub
lea
iret
add
out
xchg
loopne
lds
jbe
dec
stc
stc
imul
dec
cmp
in
push
adc
xchg
into
std
call
ret
pop
dec
imul
out
movsb
xchg
fmul
dec
and
or
push
sti
sahf
cmp
mov
push
rorb
outsl
les
loopne
lods
mov
pushf
dec
test
aam
fnstcw
movsl
mov
mov
jno
mov
adc
sbb
rcrl
bound
mov
stc
loop
push
pusha
outsl
loope
int3
loope
sbb
cmpsb
inc
out
sub
movsb
mov
mov
int3
or
insb
out
insb
icebp
lret
out
sub
iret
stc
movsb
cmpsl
inc
dec
int3
aas
xchg
icebp
xchg
inc
sbb
or
sbb
cmpsb
test
shrl
mov
jecxz
sbb
movsl
pushl
imull
scas
stos
in
fcoml
lret
dec
pushf
addr16
push
repz
sahf
mov
jns
pop
movsb
cld
jne
enter
xchg
push
shll
sti
inc
daa
push
dec
ret
jmp
fs
mov
and
mov
repnz
xlat
lds
clc
loopne
out
pop
out
add
movsl
sub
inc
and
cmpsl
popf
lret
sub
call
mov
pop
ljmp
pop
insb
outsb
push
mov
and
imul
outsl
stc
pushf
mov
pop
xor
cwtl
sahf
cltd
into
sbb
mov
pop
call
into
movsb
movsb
xorb
push
push
or
or
pop
xchg
out
in
jp
inc
iret
ds
mov
repz
xor
mov
push
lea
mov
repnz
push
lahf
xor
arpl
ret
fstp
mov
jne
lods
mov
push
shl
inc
hlt
daa
sbb
or
mov
mov
push
addl
xchg
mov
inc
push
cli
dec
jb
sub
push
add
adc
cmpsb
xor
cmp
inc
test
lods
ds
lock
aad
mov
fmul
mov
out
cmpsb
mov
leave
or
addr16
inc
mov
push
aam
subl
mov
pop
pop
cs
dec
shrl
ret
call
ret
insl
movsl
or
sete
mov
sub
dec
pop
fisubrs
pop
aas
mov
mov
add
mov
cmp
lahf
inc
imull
cmpl
lods
fs
add
xchg
dec
into
or
adc
xchg
mov
arpl
pop
xchg
lods
insb
int
ficompl
loopne
sub
and
cwtl
lret
cltd
shl
jbe
xor
out
sahf
jl
adc
lea
jns
add
gs
lods
mov
hlt
ffreep
cmp
pusha
js
push
sub
movsl
sbb
das
add
in
je
mov
xchg
ss
hlt
cmp
xchg
mov
repz
daa
mov
stc
lods
mov
push
adc
or
dec
xchg
mov
sbb
adc
push
movsl
js
inc
jge
dec
cmp
cmpsb
stos
popf
mov
into
mov
pop
lcall
mov
stos
dec
cwtl
push
icebp
xor
mov
aam
test
or
movsl
add
jbe
add
xor
sub
pop
xor
loop
ja
icebp
mov
push
popa
mov
or
xchg
and
jl
call
and
inc
ljmp
jg
sbb
repz
mov
xchg
insb
lock
in
lret
push
enter
mov
sub
imul
push
imul
test
stos
test
mov
mov
adc
push
mov
adc
lock
fistpl
ja
enter
ja
gs
sbb
jbe
push
dec
xchg
jl
sub
mov
movsl
jbe
mov
stc
cli
lds
jle
sbb
mov
inc
rorl
addr16
fisubl
xor
add
arpl
test
repnz
pop
inc
cmpsb
in
cmpl
js
les
fsts
mov
mov
jo
jecxz
adc
sub
xor
movsl
clc
jecxz
adc
out
mov
mov
sbb
push
je
insb
lds
fldl
outsl
add
pop
mov
xor
insl
mov
roll
fucomi
xchg
ja
xor
cmp
cmp
or
fs
mov
push
bswap
scas
and
hlt
lcall
filds
mov
adc
mov
stos
dec
mov
mov
xchg
fwait
dec
test
shll
pop
mov
fbstp
inc
sti
call
cmp
fdivr
cld
lahf
mov
idivb
icebp
ja
cmp
mov
jp
mov
dec
xlat
rol
sbb
in
sbb
mov
jmp
push
xchg
test
outsl
mov
jle
aaa
fs
add
imul
inc
push
outsb
nop
int
int
ret
lcall
mov
push
and
sub
jnp
mov
test
mov
add
addr16
sub
clc
dec
xor
dec
in
rolb
in
lds
shrl
mov
jnp
jge,pn
in
aaa
out
push
mov
icebp
stc
and
jbe
dec
mov
xor
in
lcall
push
jecxz
jne
pop
mov
xchg
pop
jbe
jecxz
scas
lret
lcall
jb
pusha
popf
xor
cmp
dec
dec
sarl
cld
adcb
stos
jmp
push
mov
sbb
jo
cld
xchg
test
stos
ror
fwait
xchg
cmp
icebp
pop
mov
xor
sub
mov
fwait
imul
andb
jne
mov
mov
pop
popf
jno
cmp
jo
out
mov
push
sbb
insl
inc
pop
sub
cmc
jne
jmp
mov
fwait
add
addr16
in
lret
or
xchg
icebp
inc
jecxz
stos
mov
out
es
xor
mov
xor
cmp
std
sub
pop
bnd
mov
inc
mov
lahf
xchg
xchg
or
and
mov
out
pop
add
shrl
nopl
icebp
jbe
mov
jp
push
jns
adc
mov
xor
dec
push
fbld
jnp
adc
clc
add
mov
push
sarb
pop
mov
int3
out
and
out
or
cli
sti
mov
mov
or
sbb
sbb
jo
lock
in
hlt
ds
or
sub
cmp
sahf
rorl
stos
or
testb
adc
add
push
xor
xor
push
ja
sti
or
sbb
mov
nop
int
lahf
scas
data16
out
popf
lcall
rcl
adc
or
and
mov
pop
push
mov
fs
xchg
inc
add
clc
pop
orl
xchg
xor
rolb
and
cwtl
movsl
cs
aam
lock
xchg
sub
rcrb
push
mov
push
frstor
mov
int3
xchg
push
adc
and
pop
xchg
xchg
stc
dec
jg
movsl
mov
mov
cmp
arpl
mov
mov
outsb
scas
addl
cs
popa
dec
mov
xor
pop
pop
rsm
or
xchg
bound
cmp
rcrb
add
dec
mov
sbb
push
orb
mov
or
out
sbb
shll
dec
push
je
es
mov
imul
insb
mov
xor
jle
inc
cmpsb
sarl
pop
pop
bound
cmpsb
xor
in
lret
rsm
sub
loopne
sbb
cld
inc
bound
test
xor
ds
aas
sub
adc
adc
xor
xchg
add
xor
and
mov
mov
dec
push
xor
dec
push
mov
loope
ret
icebp
xchg
inc
gs
sarl
mov
jg
push
adc
dec
xchg
mov
out
cmp
jle
jbe
fcoml
movsb
and
fistpl
stos
inc
push
jmp
mov
xchg
mov
push
fisubl
or
dec
mov
jp
lahf
das
aaa
adc
popf
mov
nop
jg
xchg
sub
je
mov
cltd
cli
ficoms
jg
sbb
aam
mov
shrb
lods
and
aas
insl
fdiv
pop
pop
in
cmpsl
sti
rol
call
in
mov
or
arpl
mov
and
bound
pop
or
cwtl
pop
xchg
cmp
mov
popa
cld
in
or
mov
sub
outsb
dec
mov
lods
outsl
and
push
in
mov
push
mov
ljmp
in
movsl
dec
jb
xchg
adc
and
adc
mov
lock
lds
xor
out
dec
pushf
movsb
test
out
lcall
mov
jno
int3
in
or
fs
xor
arpl
jp
fcmovb
cmp
pop
mov
fstpt
sub
out
xor
sub
aam
mov
ror
ja
or
cmc
dec
mov
adc
popa
adc
jmp
cmp
scas
inc
sub
inc
das
sahf
inc
mov
je
data16
inc
jmp
and
out
fwait
or
ret
mov
pop
rcr
jb
jo
movsl
and
cmp
or
or
adc
cmp
push
jecxz
xchg
and
inc
jle
add
pop
mulb
push
iret
and
xor
inc
mov
popa
mov
fwait
cltd
wrmsr
push
sarb
push
test
xchg
or
aad
sub
je
pop
xchg
nop
addr16
push
mov
xor
jns
dec
jp
insl
xchg
subb
sbb
into
jo
aaa
clc
xor
mov
ljmp
loopne
insb
push
push
lret
push
pop
jb
nop
mov
or
xchg
pop
ret
inc
test
sti
mov
push
sbbb
mov
cmp
daa
adc
in
imul
push
pop
mov
mov
in
add
movsb
leave
and
pop
fisubrl
data16
popa
or
aas
lods
mov
lods
outsb
outsl
add
decb
rcr
jmp
push
cmp
bound
mov
icebp
mov
faddl
gs
mov
sub
movsb
xor
jne
jmp
inc
xor
sub
lret
xchg
mov
shl
repnz
lods
fdiv
jb
lods
lods
jb
sbb
mov
sub
sub
in
jbe
inc
lods
inc
mov
adc
fildll
divl
push
xchg
jbe
ss
cmc
adc
mov
add
cwtl
sbb
subl
test
mov
decl
mov
xchg
sbb
ja
sub
outsl
jae
cmpsl
lods
cmp
push
rolb
inc
mov
cmpl
or
inc
adc
sbb
std
xor
mov
int
roll
out
in
cmp
push
jmp
dec
inc
lea
imul
adc
in
inc
pusha
adc
or
jmp
cli
mov
sahf
fdivr
adc
or
data16
pop
xchg
pop
mov
xchg
sbb
pop
rcl
inc
mov
adc
inc
add
cmpsb
mov
cmpsb
xor
fldl
push
jp
xchg
inc
xchg
mov
sbb
stc
mov
push
xchg
call
jns
ret
lahf
add
push
dec
pop
push
jb
adc
dec
sarl
jmp
add
dec
xorl
das
out
loop
and
out
outsl
int
in
cmp
jbe
adc
jmp
and
sahf
mov
loope
int3
les
popa
pop
or
push
push
xlat
aas
xor
fimull
push
jle
leave
and
js
add
lret
jl
pop
cli
daa
sbb
lret
jb
js
sub
cmp
movsl
xor
xchg
jl
sti
mov
arpl
addr16
mov
movsb
gs
sbb
fstl
data16
lahf
loope
ret
mov
dec
fldl
nop
aam
out
cmpsl
sarb
and
lret
les
jg
add
hlt
scas
stc
xchg
idivl
push
popf
iret
cmp
into
add
push
add
ss
out
mov
add
push
push
dec
std
lcall
sbb
and
in
and
xchg
cmp
rorl
push
xchg
jecxz
test
sub
lock
cwtl
inc
dec
and
mov
lret
lods
pop
pop
mov
cmpsb
lds
push
pop
in
push
push
push
add
mov
xchg
pop
scas
cmp
push
and
dec
cmp
dec
jecxz
adc
add
mov
popf
xlat
mov
add
movsb
jmp
and
lock
popl
andb
xor
lods
mov
xor
jp
dec
jg
cmpsb
subb
dec
rolb
pop
xchg
in
or
inc
ljmp
ja
mov
jecxz
mov
sub
jnp
test
aad
mov
sub
jns
notb
jmp
cwtl
dec
pushf
pushf
mov
test
inc
xor
pop
repnz
pop
lea
sub
fistpl
inc
lret
jmp
cmc
popa
jae
mov
das
and
adc
mov
sub
stc
pop
aaa
cmpl
clc
xor
cwtl
jecxz
clc
jle
in
sub
es
or
xchg
pop
mov
mov
or
das
mov
lods
ja
add
xchg
mov
fwait
leave
sub
and
push
iret
fnstsw
cmp
jmp
xor
movsb
jo
popf
push
xlat
sub
and
daa
cs
shll
sub
les
mov
mov
sub
sbb
sub
xor
pop
adc
push
fdivr
and
lods
xchg
pushf
popf
adcl
fidivl
mov
lds
xchg
fcmove
lock
cmp
and
adc
cmp
int
aad
or
dec
sti
and
push
pop
cmp
jns
mov
scas
jmp
aam
sbb
imul
mov
inc
cmp
jno
aaa
rcrl
imul
in
mov
movsl
sub
xor
adc
xchg
or
int
push
jecxz
push
cld
test
outsb
pushf
jne
sub
xor
shrw
inc
or
or
mov
or
sub
sub
cmp
nop
les
push
data16
pop
cmp
arpl
add
lods
out
xchg
and
push
ficoml
pop
dec
xchg
jb
imul
int3
int
sub
dec
cli
inc
xor
test
ret
cmp
aas
iret
shrb
stos
mov
jmp
fwait
jle
jo
pcmpeqw
movb
js
sub
or
inc
sub
into
mov
sbb
add
mov
push
and
aam
dec
pop
loope
push
or
and
scas
ficomps
call
adc
and
imul
popf
push
cltd
je
add
xchg
jecxz
aas
xchg
xchg
inc
dec
cmovs
pop
enter
and
push
inc
test
inc
std
adc
outsl
xor
lock
pop
mov
add
add
push
pop
xlat
sbb
ljmp
cmp
push
filds
in
cli
bound
pop
enter
or
xchg
jb
cmp
or
jmp
push
mov
or
rcrb
pop
sub
push
fstpt
popf
lret
push
or
hlt
pushf
mov
lods
es
ret
imul
push
inc
jg
or
mov
in
xchg
and
xchg
insl
gs
sub
mull
das
jb
xchg
ljmp
adcb
jle
inc
cli
jl
loop
xchg
push
in
insb
xor
outsl
hlt
mov
inc
out
and
mov
mov
rcrb
sbb
pop
aad
sub
sbb
ja
dec
pop
cmpsb
pop
dec
insb
mov
and
cwtl
pop
fidivl
push
out
mov
ret
inc
xchg
push
bound
mov
out
lods
hlt
ret
shrl
adc
mov
shlb
adc
push
lret
jne
push
jns
lock
inc
sbb
mov
xchg
pop
add
call
loopne
test
testl
xchg
inc
mov
cmp
rcrl
lods
test
stc
insb
leave
enter
or
sub
pusha
and
pop
cld
mov
mov
jmp
mov
adcl
repnz
enter
mov
lret
lods
jae
sbb
inc
push
addr16
movsb
imul
aam
in
ret
scas
sub
inc
fwait
mov
movl
outsl
aaa
sub
jno
push
adc
js
movsl
adc
aam
inc
lods
mov
subb
mov
add
or
inc
push
cli
mov
adc
aam
lock
lret
xchg
in
insb
call
fstp
pop
scas
dec
mov
loopne
xor
cvtps2pi
es
push
inc
mov
sbb
lds
stc
outsb
sub
xchg
sub
lods
lds
std
int3
mov
pop
mov
aas
cmp
jne
pushl
jo
lds
and
adc
sub
andb
and
sbb
adc
std
mov
push
mov
ss
mov
cmp
sahf
hlt
pop
inc
cmp
int
sub
stc
out
jecxz
push
movsl
jae
rolb
insl
sbb
xchg
adc
push
cmpl
dec
lds
cmp
xor
int
mov
es
shlb
in
mov
ljmp
lahf
outsl
jecxz
aas
jne
push
add
ficoms
push
js
xchg
cmp
sbb
movsb
mov
rcll
cwtl
cmp
mov
leave
pop
into
adc
hlt
mov
inc
or
mov
push
jne
or
idiv
movsb
ret
xor
mov
push
stc
dec
mov
dec
in
fcoms
in
jae
andl
imul
xorb
add
adc
xor
xor
xor
jmp
pop
push
mov
aam
imul
or
hlt
push
jmp
bound
popw
and
insb
lret
adc
mov
pop
jns
or
repz
xor
mov
call
call
jle
sub
icebp
test
lock
int
sub
comiss
cltd
flds
jno
pop
add
inc
and
pop
sbb
das
bound
add
aad
jae
in
pop
mov
ficomps
add
or
lea
mov
jae
jns
lds
mov
cltd
roll
or
rorb
dec
test
divl
sub
fmul
xor
aaa
mov
mov
mov
dec
es
add
push
sub
ret
jle
xchg
icebp
sub
and
inc
out
test
out
dec
call
insl
push
faddp
sbbb
inc
push
dec
ja
jnp
or
scas
dec
pop
lea
stos
in
lds
dec
sbb
subb
cltd
sbb
sahf
mov
in
dec
dec
jnp
push
jbe
fadd
sahf
pop
xchg
ucomiss
cmp
sbb
test
int3
lahf
popf
pusha
lods
arpl
hlt
inc
jmp
std
cmpsl
cmp
pop
cmp
out
adc
sub
pop
push
lret
sbb
insl
ret
popa
sub
mov
xor
fidivrl
negl
jle
push
addr16
inc
scas
or
and
bound
adc
scas
je
daa
cmc
cmp
ja,pt
mov
mov
sub
ret
xchg
lock
jg
adc
test
hlt
in
push
xchg
clc
push
out
inc
mov
mov
fisttpll
mov
out
mov
mov
push
iret
sbb
pusha
pop
orb
jecxz
jns
sarl
jge
outsb
and
push
fxch
mov
sti
xchg
mov
int
xor
call
pop
in
mov
js
mov
pop
test
popf
jns
and
inc
xchg
xor
pop
and
loop
push
popf
jmp
icebp
adc
jp
js
jle
push
dec
pop
sub
adc
shrb
stc
fistpl
lret
sbb
cmpsl
mov
sbb
popa
cli
lret
sub
sbb
std
inc
mov
xchg
jl
fwait
into
dec
jmp
mov
ja
jb
add
sub
jne
fiaddl
mov
mov
cmp
dec
es
shrl
mov
int
jp
mov
push
hlt
movsb
add
cwtl
jns
ss
lret
inc
pop
js
xor
out
adc
add
pop
dec
xor
xor
popf
jo
jnp
jmp
in
or
test
ljmp
aad
arpl
dec
ja
mov
fildl
add
adcb
testb
pop
and
xor
xor
mov
add
fidivl
movsl
inc
dec
lcall
outsb
or
cmpsl
int
stos
scas
mov
cmp
popa
jno
jns
and
cli
xor
fistpl
outsb
mov
sub
cmp
sbb
ret
dec
sub
inc
sub
mov
sbb
sarl
pushf
pop
push
cs
dec
push
int3
mov
pop
inc
xchg
icebp
lods
sub
xchg
sub
mov
pop
pop
sahf
cmc
popf
addb
push
xchg
mov
sahf
mov
push
incl
mov
cmpsl
fimull
and
push
pop
cmp
jnp
jb
jge
jns
sub
js
inc
xor
lods
or
ret
std
test
popf
pop
mov
cwtl
hlt
cltd
aad
ret
testb
xor
pushl
rcrl
aaa
stc
into
aas
or
or
sub
or
ljmp
out
es
pop
inc
push
js
js
dec
lods
mov
or
or
aas
pop
pop
stc
dec
add
lret
out
lods
ja
mov
pop
pop
pop
sbb
je
adc
xchg
or
push
mov
mov
fsubrl
shl
pop
jg
mov
push
addl
dec
add
sub
mov
mov
movsl
pushf
xchg
xchg
scas
in
adc
cltd
mov
repz
sbb
mov
push
out
xorb
repz
and
shll
cmp
lods
test
sar
and
into
and
call
cmp
test
int
aad
xor
or
and
push
imul
ja
lods
xchg
mov
push
or
sbb
cmp
mov
push
aad
test
rclb
lret
cmp
push
cltd
iret
jp
les
sub
outsb
call
dec
addr16
hlt
pushf
mov
xor
inc
fwait
and
xchg
in
and
hlt
popa
adc
dec
iret
lds
test
cmp
jecxz
xchg
cmp
add
cmp
jl
mov
mov
pop
out
and
imul
rcrb
cmp
lret
scas
mov
push
jle
pusha
out
int
clc
loope
mov
sub
mov
pop
cmp
rcr
cmp
jecxz
pushf
and
es
scas
add
mov
inc
aad
aad
dec
fistl
loop
sub
lds
shl
inc
mov
push
mov
jecxz
or
out
cmovb
xchg
mov
lahf
lds
xor
mov
out
mov
je
shlb
or
or
dec
and
hlt
xlat
dec
xchg
in
push
sti
jno
test
dec
mov
cmp
sbb
adc
into
jbe
dec
aad
xorl
adc
incb
jmp
sub
cs
push
lret
add
aad
das
sbbb
insl
out
popa
int3
adc
jno
enter
pop
daa
test
into
fcmovbe
pop
xchg
add
out
lahf
jns
add
xchg
cmp
jle
and
xor
mov
dec
mov
out
in
dec
jne
cmpsb
ficoml
aas
jmp
sahf
sbb
cmp
xor
aad
int3
into
rclb
ss
aaa
ret
push
js
sub
aaa
sbb
into
xor
daa
cltd
pop
das
mov
inc
cmpsl
push
sbb
jno
ret
add
dec
loop
mov
in
int3
ljmp
lods
sbb
outsb
mov
mov
jns
cmpsb
lds
mov
add
inc
sti
outsb
roll
stos
cmp
push
xor
andb
imul
mov
mov
jbe
loop
or
adc
cmp
vpunpckhdq
in
xor
xor
test
mov
mov
push
popl
outsl
repz
xor
and
loope
push
scas
ds
jecxz
ss
fnstenv
repnz
xchg
loopne
pop
popf
fcom
loop,pt
xor
filds
jno
jno
push
mov
std
outsb
dec
pop
or
inc
cld
repz
mov
and
pop
push
or
cli
in
lods
pop
cmp
cli
inc
xchg
mov
jmp
add
or
sti
push
push
jecxz
int3
sub
sub
lods
sbb
sarl
xor
jo
fcoml
data16
or
cld
es
popa
push
shll
or
pop
cli
push
enter
push
cmpsl
and
div
mov
add
mov
mov
dec
aad
lock
mov
adc
sbb
int3
cmpsl
inc
sub
imul
jge
jbe
xor
push
ret
lods
lods
sub
push
and
stos
adc
ljmp
cli
rcll
push
pushf
xchg
inc
sbb
icebp
xchg
add
jp
cwtl
lods
or
push
mov
ss
outsb
rorl
sbb
arpl
subb
out
xchg
bound
push
lea
sbb
inc
fbld
nop
je
xchg
in
pop
loope
pop
mov
cmpsl
inc
sub
enter
test
insb
faddp
push
push
add
fs
jmp
cmpsb
lret
aaa
adc
jg
and
pop
divb
fbld
lea
das
in
sbb
bound
pushf
mov
cmpsb
movsl
jg
es
and
or
in
pop
inc
or
test
stos
mov
cltd
mov
mov
aam
loop
mov
pop
push
xchg
xchg
pusha
movsl
cltd
dec
sbb
add
mov
xchg
xchg
iret
iret
push
jmp
test
or
push
mov
push
mov
inc
mov
shll
pushf
hlt
push
ret
scas
std
dec
dec
clc
or
sbb
mov
das
mov
jle
cmpsb
xchg
adc
jp
test
repz
fldt
lret
repz
das
loope
lods
jmp
out
pushf
or
sub
in
shrl
ret
out
xchg
test
add
test
std
stos
aas
pop
mov
lods
jno
mov
and
jnp
enter
xor
jo
add
imul
inc
jl
in
and
push
lret
cs
mov
mov
jmp
mov
cwtl
mov
mov
inc
inc
scas
pop
mov
ss
sbb
pop
add
sbbl
mov
andb
arpl
mov
lret
arpl
inc
mov
mov
xchg
out
pcmpeqd
pop
or
adc
cmp
icebp
or
add
jb
pop
loopne
data16
test
in
movlhps
pusha
insl
rolb
adc
cltd
mov
hlt
movsb
mov
lret
jnp
in
push
test
add
repz
sahf
push
leave
add
cld
sub
cmp
mov
dec
in
dec
fs
cs
arpl
inc
ds
fnstcw
sub
cmpsb
stos
mov
pusha
or
dec
jae
xchg
out
nop
adc
lret
call
push
xor
jecxz
shr
or
dec
test
jns
enter
fadds
sub
jne
dec
sub
into
scas
loope
sub
loope
in
inc
jo
xor
mov
popa
mov
sub
jnp
in
inc
cmc
lcall
outsb
imul
call
loopne
dec
pop
mov
dec
xchg
bound
or
xchg
in
mov
lock
push
jl
scas
imull
into
addr16
adc
mov
cmpsl
mov
jne
das
scas
push
ss
jge
mov
test
ret
lcall
pushl
inc
xlat
jle,pt
ja
mov
movsl
mov
sub
cltd
loope
ja
lods
cltd
mov
je
mov
mov
jo
sub
aad
add
jmp
sbb
xchg
insl
clc
cwtl
inc
mov
adc
push
fldenv
ret
and
and
jg
test
pop
push
popa
pop
in
push
cmp
pop
jb
sub
hlt
out
sbb
in
sub
pop
or
loopne
and
xchg
cmp
movsl
push
out
std
xor
cmp
lock
mov
mov
movsb
fldcw
mov
cltd
jmp
ret
jle
mov
rcll
arpl
jg
in
jbe
mov
repnz
push
cmp
xchg
fnstcw
outsl
xchg
or
cmpsl
add
aad
lret
pop
mov
mov
int3
cmp
cmp
cmp
sub
and
rcrl
inc
mov
dec
sbb
test
mov
jno
mov
loopne
ds
rclb
dec
cmp
mov
sbb
lods
dec
add
sub
cmp
scas
adc
mull
sti
mov
pushf
cmpsb
stos
mov
popl
sub
push
insb
mov
jmp
arpl
ds
clc
loop
cmp
in
push
adc
push
sbb
test
xor
dec
jmp
mov
mov
and
xchg
xchg
push
mov
sbb
je
addr16
dec
pop
incb
mov
popa
sbb
jb
add
add
scas
les
mov
std
int3
popa
aam
inc
test
and
rcr
adc
dec
ja
mov
xchg
dec
cmp
pop
test
cmpsl
pushf
mov
sbb
jbe
sbb
push
xchg
pop
push
dec
aad
xchg
push
aam
cmp
xor
mov
enter
xchg
icebp
ljmp
sub
pop
sbb
orb
adc
adc
mov
insb
arpl
movsl
sbb
stos
mov
sbb
leave
aad
jg
cld
inc
xor
mov
rcrl
mov
out
push
mov
verw
aam
outsb
pop
ss
xchg
mov
xor
pop
or
xchg
andl
js
mov
cwtl
xchg
loopne
jg
lret
das
pushf
push
push
pushf
cmp
jno
mov
mov
ret
and
mov
test
arpl
push
pushf
cmp
hlt
stos
pushf
and
inc
or
jmp
fmul
inc
popf
xchg
or
stos
dec
cmp
push
xor
adc
dec
mov
test
cld
or
fmul
pop
push
inc
cli
aas
xor
pop
sbb
in
adc
add
mov
or
fcom
push
ljmp
sahf
and
adc
xor
stos
clc
fwait
xchg
cmpsb
bnd
add
ficoms
or
insl
jno
jbe
sbb
mov
xchg
xor
jns
cmp
jecxz
iret
sub
fs
setno
popf
addr16
fldt
xchg
mov
and
shrl
xor
sbbl
cltd
lds
xchg
orb
jbe
nopl
dec
sub
adc
sub
cs
or
cmpsl
sub
test
test
lret
in
mull
cmp
adc
cmc
je
push
shll
cmc
adc
inc
sarl
mov
arpl
enter
aam
jae
and
sub
sbb
cld
lock
scas
mov
sbb
es
fwait
es
pop
movsb
push
push
xchg
add
or
std
add
add
cmp
mov
inc
scas
push
dec
and
insb
push
mov
ffree
test
in
aas
cmpsl
mov
jp
je
int
or
test
popa
mov
ss
mov
xor
lods
fstpt
jle
fbld
std
cmpsl
lock
clc
stc
gs
rcll
rcrb
cmp
mov
and
xor
mov
pop
bound
xlat
rcrl
repnz
push
cmpsb
mov
and
aaa
jge
pop
mov
neg
aam
and
mov
movsb
xchg
call
sbb
add
test
pop
mov
scas
lcall
lods
add
mov
and
dec
xor
or
pop
pop
push
movsl
xchg
xchg
sub
movsl
or
mov
rorb
ss
or
lcall
adc
and
arpl
xchg
dec
std
outsb
lahf
jnp
orb
stos
inc
sub
mov
cltd
imul
movsb
test
arpl
jmp
jae
loope
sbb
add
xchg
ffreep
cwtl
push
adc
cmp
into
test
js
loope
loopne
and
push
mov
sahf
mov
mov
sub
out
lahf
test
cld
repnz
jb
pop
fiaddl
mov
outsl
xchg
sbb
pop
pop
mov
push
call
sbb
jno
pusha
sbb
jbe
xchg
sahf
test
and
xchg
adc
pop
pop
js
inc
sti
cmc
pop
mov
stos
dec
or
idivb
iret
sbb
push
lret
lods
stc
fnstsw
adc
scas
out
jge
cld
lret
vpmacswd
imulb
adcl
cmp
das
push
jns
stos
xchg
jl
insb
jno
fcmovb
shlb
mov
fs
xchg
test
js
out
fisubrl
fsub
out
out
dec
daa
clc
pop
enter
adc
out
in
pop
adc
lret
sub
cmp
jno
cs
pop
jno
add
test
je
inc
jmp
sub
jg
shl
sub
call
pop
pop
jbe
xchg
les
push
test
and
fcoms
aad
es
lret
mov
int
sbb
xchg
lret
out
into
in
mov
repz
fstl
jle
mov
arpl
push
inc
scas
jg
sub
add
xorl
test
dec
mov
daa
mov
pop
sub
jp
mov
enter
in
mov
xchg
movsl
pop
xchg
cmpsl
add
cmp
xchg
xchg
icebp
jns
cld
and
adc
add
lds
mov
sbb
data16
loop
or
mov
add
dec
aaa
dec
add
inc
ret
sbb
sbb
in
push
add
sub
push
adc
add
mov
jae
and
mov
repz
data16
mov
dec
dec
add
out
sbb
lods
mov
xchg
lcall
pusha
or
in
fmuls
test
sbb
mov
movsb
aam
adcb
stc
adc
sti
arpl
jl
aad
jbe
outsl
jl
call
inc
mov
fwait
ret
adc
lea
js
mov
push
int3
or
inc
cmp
mov
addr16
stc
jp
icebp
fdivs
mov
in
jnp
jbe
xchg
mov
aaa
imul
cmpsb
subb
sarb
pop
out
sbb
in
in
mov
push
icebp
das
or
dec
dec
pop
icebp
inc
xor
adc
stc
pop
inc
mov
imul
daa
mov
push
sti
fistpll
icebp
dec
imul
out
cmpsl
shr
movsl
hlt
test
es
popa
dec
push
xchg
test
cmpl
inc
mov
imul
ret
sub
sbb
test
mov
mov
dec
cmp
aaa
ljmp
push
xchg
fisttps
jle
out
lds
lret
insl
xchg
ret
jno
push
jo
jne
lcall
mov
or
shl
mov
and
and
sub
xchg
mov
sbbl
std
repnz
sbb
cmp
mov
outsl
repz
cmp
addr16
mov
dec
pop
scas
xchg
mov
mov
or
sub
js
cmp
sub
cmp
fwait
and
or
jp
lret
fdivrp
jo
out
aaa
lcall
loop
shll
xchg
scas
xchg
cmpsb
out
leave
scas
push
imul
fdivl
mov
jb
sub
push
test
fwait
int3
ljmp
cmpl
clc
cs
xchg
fcoms
testl
push
subb
or
sub
mov
inc
xorl
dec
xlat
lret
xor
test
out
movsb
mov
push
das
aaa
fs
adc
outsl
adc
push
pop
jmp
mov
pop
out
xchg
xor
pushf
std
icebp
loope
sub
test
lea
push
test
scas
sub
idivl
in
xchg
sahf
adc
jne
mov
shrl
scas
xchg
movb
lea
xchg
rclb
xchg
dec
enter
decl
and
push
lea
sbb
sbb
lret
xchg
sti
dec
xor
clc
xchg
cli
push
pop
and
stos
mov
inc
add
loop
test
pushf
jg
test
mov
loope
adc
test
js
adcl
push
mov
out
outsl
shll
add
pop
mov
fs
push
push
clc
xchg
sub
mov
or
jp
lods
sbb
and
xchg
jl
dec
and
cmc
cltd
dec
lea
jle
addr16
sahf
roll
arpl
aaa
push
clc
cmp
xchg
push
or
sbb
cmp
pop
out
mov
cmp
lret
sti
xchg
std
pop
imull
sbb
dec
mov
xchg
sub
popf
std
mov
cmp
jge
push
cli
sub
adc
out
cmpb
pusha
mov
pushf
int
roll
add
mov
or
mov
test
js
dec
jmp
aad
ret
ja
shlb
mov
xchg
xor
push
and
mov
ljmp
inc
fists
fildll
mov
xchg
jne
add
ljmp
push
adc
and
lcall
dec
push
xor
mov
sub
sarb
jnp
push
jle
and
adc
movsl
pop
jo
pushf
jp
aad
mov
mov
mov
and
mov
jge
fidivrl
mov
sbb
xor
cwtl
xlat
xchg
out
mov
pop
arpl
jns
mov
out
xchg
and
xchg
inc
rorb
das
or
sub
outsl
fsubp
dec
or
pop
push
in
stos
inc
stos
and
lahf
aaa
cmp
push
pop
fistps
dec
cmp
rclb
stos
and
mov
pop
adc
jp
mov
bound
movsl
dec
dec
lods
xor
mov
insb
stc
lods
xchg
into
add
fs
imul
sbb
mov
lahf
hlt
xchg
cmp
or
mov
movsb
mov
add
scas
adc
mov
push
in
pop
dec
js
mov
repnz
inc
test
cs
cld
ss
push
subb
add
inc
loope
xchg
shr
dec
inc
xchg
cld
mov
lret
xor
xchg
jge
xchg
mov
xchg
inc
out
outsl
mov
stos
stos
mov
jo
subb
jecxz
cwtl
sub
out
inc
cltd
std
push
xor
loopne
xchg
mov
dec
pop
and
cmc
or
mov
push
jbe
mov
mov
inc
mov
fistps
sbb
mov
lods
int
shlb
cmp
iret
mov
jl
mov
or
pop
mov
cmpsb
rcll
jp
add
cmpl
and
orl
xor
jecxz
push
fildll
adc
jae
mov
das
mov
dec
mov
push
lret
in
inc
dec
hlt
add
imul
sbb
test
test
ja
int3
xor
shrl
or
ds
push
stos
nop
fadds
xchg
repz
or
jle
xchg
jecxz
testb
sub
enter
mov
jg
push
xchg
push
popa
mov
aam
adcb
mov
push
jmp
mov
cwtl
ret
lea
je
inc
mov
cmpsb
add
dec
jl
pop
jmp
idivl
dec
ss
mov
out
dec
scas
flds
lret
xlat
test
addr16
divb
push
adc
mov
add
dec
mov
sub
jo
push
fcmovu
imull
xor
out
mov
dec
test
jecxz
iret
or
sub
scas
dec
std
and
add
xchg
out
add
and
fildll
add
push
jecxz
add
add
sti
or
mov
outsb
cmp
xor
mov
inc
push
lea
daa
int
stos
xchg
jae
xor
loope
mov
add
fcomps
push
sbb
mov
cmpl
inc
mov
lock
mov
mov
rcrb
cs
test
mov
sarl
cmpsl
sbb
mov
in
movsb
sbb
adc
popa
in
sti
and
jb
lods
imul
mov
or
mov
fnstcw
aaa
push
imul
mov
jp
addl
rorl
xchg
out
scas
pop
cmpsb
add
inc
mov
inc
xor
mov
sbb
fcmovnbe
pop
sub
mov
faddp
ror
call
jbe
xchg
jo
sar
ds
repz
int
mov
mov
in
mov
push
out
mov
pop
or
xor
add
in
lret
outsl
adc
inc
scas
js
xchg
sub
or
gs
sti
push
mov
push
pushf
popa
xchg
mov
sub
out
dec
fwait
jecxz
aad
inc
jecxz
mov
inc
dec
sbb
mov
adc
stos
push
or
xor
cmpl
ljmp
mov
xchg
lret
xchg
jecxz
mov
jge
xor
jmp
stos
mov
cld
mov
cmp
lds
lcallw
sub
push
or
adc
call
fwait
das
mov
sbb
loop
insb
jmp
mov
and
jmp
stc
int
fmull
mov
mov
jl
and
add
popf
sub
push
test
jnp
fnstsw
cmp
nop
rcrl
repnz
mov
and
scas
dec
add
js
bound
ja
pop
ds
dec
push
pop
lahf
mov
xor
fnstcw
leave
or
xchg
lret
lahf
mov
dec
test
ss
pop
scas
shll
out
push
mov
ror
adc
call
pop
in
iret
xor
jmp
add
adc
andb
push
pushf
movsb
fistl
xor
inc
jnp
pushf
sbb
mov
dec
mov
sbb
hlt
fistps
jno
sbb
pushf
xchg
sub
call
fildll
fdivrs
daa
jne
cmpsb
dec
push
xchg
shlb
ja
cmc
sti
aaa
inc
mov
mov
and
add
pop
adc
loope
mov
xorl
push
mov
test
mov
jecxz
roll
push
stc
sbb
std
xchg
out
jb
jo
cmp
out
cld
sbb
scas
xchg
lret
xor
push
std
and
in
leave
daa
mov
sbb
in
imul
pop
sbb
mov
pop
mov
inc
sub
lds
mov
leave
in
xor
adc
clc
cmpsl
fmull
push
decb
aas
stos
mov
in
js
loope
adc
int
sbbl
rcrb
sbb
andb
shld
sahf
and
jnp
add
pop
arpl
adc
mov
and
or
push
mov
xchg
lods
add
ret
ret
movsl
push
sub
mov
sbb
sbb
stos
dec
xchg
cwtl
cltd
dec
xchg
ret
cmp
in
pop
and
mov
notb
hlt
sbb
arpl
je
push
mov
in
stos
add
sbb
mov
das
xchg
adc
call
aam
push
mov
jne
pop
nop
sahf
notb
sbb
stos
les
and
jb
xchg
adc
cltd
rol
xor
in
call
lods
mov
call
les
push
jmp
or
out
push
sarb
add
in
sbb
lea
aam
pop
push
push
pop
push
imul
mov
jne
sub
neg
cmp
shl
test
les
int3
cli
cmpsb
adcb
mov
mull
mov
cmpl
mov
push
mov
or
rclb
aas
lods
mov
out
enter
dec
into
mov
lret
pop
lock
push
scas
sub
mov
rcl
jae
mov
andl
ja
pop
in
sub
in
mov
or
lret
movsl
sub
idivl
mov
ds
pop
shl
adc
and
pop
add
arpl
stos
ret
insl
and
movsb
add
mov
pusha
push
imul
pop
cmp
mov
and
fwait
cmpsl
pop
in
int3
call
hlt
jno
jb
xor
jnp
stos
aad
jae
adc
aas
out
out
push
je
aaa
out
jle
loope
dec
clc
xadd
sub
lahf
add
pause
inc
repz
sub
loopne
cli
sbb
cs
mov
fsubrl
sahf
and
cwtl
cmp
fmul
repnz
jecxz
sbb
push
pop
sub
mov
mov
in
jno
jg
orl
jbe
in
mov
jno
shll
cmp
aam
out
jnp
nop
add
adc
stos
or
std
hlt
imulb
dec
push
sub
mov
mov
shrl
loope
push
mov
cltd
adc
stos
cmpsb
mov
sbb
xchg
gs
shrb
leave
dec
push
aas
out
sub
daa
sub
sub
xchg
mov
xchg
or
xlat
cmc
mov
aad
mov
adc
cld
outsl
inc
pop
loopne
add
testl
jp
push
and
and
neg
aaa
add
pop
arpl
repz
clc
dec
das
pop
sub
push
in
xor
mov
mov
psrad
jg
add
xor
pop
js
pavgb
sbb
fnstenv
out
rorl
scas
and
sub
stc
dec
cmove
jno
int
mov
into
mov
add
mov
ret
sbb
test
jo
push
adc
pop
dec
aas
fs
pop
dec
movsl
cmc
cld
ds
fimull
add
push
mov
mov
lods
cmp
sbb
out
stos
sbb
insl
pop
mov
xchg
and
cmp
xlat
jae
mov
adc
xor
dec
icebp
ffree
out
add
cmp
and
pop
pop
es
xchg
mov
and
jnp
jecxz
xor
mov
jmp
jl
or
pop
pslld
ljmp
dec
xor
sbb
pop
mov
sbb
in
cmpsb
insb
lea
mov
jl
setge
js
add
mov
pop
mov
or
ror
pop
sub
fwait
jmp
mov
mov
inc
ss
and
inc
inc
or
mov
jg
adc
mov
aad
pop
ret
stos
aam
idivl
cld
cmpsb
pop
adc
je
push
push
jmp
push
pop
hlt
jle
inc
sti
aad
pop
cmpsb
xchg
and
jo
stos
clc
test
jl
in
pop
push
pop
nop
inc
sub
mov
ret
pop
xchg
sub
or
popa
push
in
mov
ds
repz
loope
js
adc
dec
mov
inc
mov
shlb
and
cli
inc
leave
and
sahf
gs
xchg
movsl
xchg
enter
sti
mov
sbb
insl
cmp
jae
rorl
dec
shll
cmp
mov
mov
xchg
arpl
adc
xor
push
aaa
xchg
pop
or
sub
aas
lock
push
decb
and
nop
idivl
jb
scas
mov
lods
or
push
fisttps
cs
cmp
xor
jmp
dec
or
bound
aam
in
pop
jp
les
aam
data16
dec
adc
imul
int3
dec
jne
lock
mov
lret
jg
sub
repnz
xor
out
in
mov
divl
ja
dec
sbb
mov
pusha
shlb
out
incl
push
dec
pop
pop
lcall
cmp
mov
adc
sarl
loope
roll
pop
in
mov
mov
and
outsl
jno
sbb
rolb
mov
dec
in
xchg
loop
leave
cltd
pop
fidivs
jmp
sahf
fadd
out
movsb
pop
add
jno
push
insl
lea
movsl
or
out
adc
movzbl
pop
test
incb
fucomip
test
cmp
push
cmp
in
das
cmpsl
cmp
sbb
arpl
jns
in
mov
in
push
ss
mov
sbb
cmpsl
cld
mov
lock
inc
jl
call
jg
pop
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
pop
pop
pop
pop
ret
push
mov
push
mov
mov
add
movl
mov
adcl
mov
xorl
add
sbbl
xor
movl
cmp
movl
jne
andl
mov
dec
mov
and
add
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
cmpl
jne
xor
or
inc
mov
jmp
mov
xor
push
mov
mov
add
cmp
pop
je
mov
jmp
mov
xor
add
jmp
mov
xor
add
leave
ret
push
mov
sub
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
jmp
adcl
movl
mov
mov
and
lea
mov
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
andl
mov
inc
mov
cmpl
jne
push
push
push
call
cmpl
jb
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
movl
mov
andl
mov
inc
mov
cmpl
jne
push
push
push
push
pushl
push
pushl
push
call
cmpl
jb
xor
add
adc
mov
lea
dec
mov
mov
adc
mov
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
inc
mov
negl
xor
add
andl
mov
mov
mov
sub
and
mov
incl
mov
andl
mov
andl
add
movzbl
or
push
add
mov
movzwl
sbb
mov
andl
mov
mov
xor
movl
cmpl
je
cmpl
jne
pushl
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
and
mov
sbbl
add
movl
cmp
je
mov
jmp
mov
cmp
jne
movl
push
jmp
mov
mov
mov
cmp
jne
sbb
mov
mov
sbb
mov
xor
movl
cmpl
je
cmpl
jne
push
push
pushl
push
push
push
push
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
add
mov
mov
mov
xor
add
imul
mov
xor
add
cmp
mov
push
je
mov
add
mov
mov
xor
add
imul
mov
jmp
mov
xor
mov
mov
xor
mov
mov
sub
add
mov
mov
add
mov
mov
mov
xor
xor
lea
mov
xor
add
imul
mov
xor
sub
mov
add
cmp
mov
mov
jg
xor
mov
sub
add
jmp
xor
add
add
mov
mov
mov
xor
add
not
and
movsbw
mov
sub
mov
xor
mov
cmp
jmp
out
add
outsb
sbbl
hlt
push
scas
fwait
dec
jge
popa
rcrb
xchg
std
inc
insl
leave
dec
jecxz
jno
dec
sbb
xchg
cmp
or
icebp
mov
in
in
cmpsl
cmp
ror
sbb
cwtl
aas
dec
andb
jae
imul
ja
xchg
mov
stos
ljmp
mov
inc
iret
or
and
test
jmp
jnp
jne
pusha
mov
int3
cwtl
cli
sbb
rcrl
lret
enter
insl
out
sarl
sub
xchg
cmp
add
sbb
popa
aas
and
push
cmp
mov
div
mov
jns
jb
scas
cmp
sub
out
xchg
call
lret
inc
not
add
scas
push
and
ret
cli
pop
mov
into
cmp
lds
fs
pop
pop
adc
cmp
jl
xor
movsb
pushf
mov
xchg
inc
shlb
icebp
aas
and
testb
not
ret
pushf
popa
sbb
mov
or
inc
mov
stos
je
push
js
inc
add
fbld
mov
jmp
jnp
outsl
jl
mov
mov
mov
xchg
in
fstp
jmp
mov
loope,pn
xchg
mov
in
fldt
mov
cmp
insb
xor
inc
insl
or
push
ja
fsubl
xchg
cmp
in
in
mov
mov
jb
mov
ficompl
hlt
daa
aaa
xchg
xchg
into
dec
jmp
adc
out
mov
xchg
cli
cmp
out
cli
or
lock
dec
cmpsl
mov
cmp
sahf
loopne
jae
ror
fcoml
or
mov
mov
fwait
add
and
fimull
loopne
rep
jmp
mov
add
divl
insl
mov
das
ret
add
xor
push
mov
in
push
fwait
stos
loop
movsl
cmpl
add
lds
xchg
outsl
je
std
add
jno
or
jmp
sub
and
in
push
sbbl
jb
in
mov
jge
mull
jns
mov
cwtl
add
iret
mov
repnz
out
clc
ja
mov
mov
cld
adc
jle
int
lret
lahf
fs
nop
cmp
xor
sbbb
ret
test
pop
mov
xchg
adc
sub
xorl
xor
test
out
add
xor
loopne
gs
xchg
inc
pop
push
xchg
inc
add
test
mov
mov
les
icebp
cmp
xor
push
jge
cmp
shll
jno
or
fstpt
mov
insl
xchg
enter
mov
inc
aam
xor
jecxz
ret
fld
xchg
lods
dec
out
int3
jae
mov
mov
push
mov
rorb
push
movsb
scas
xor
fxch
cli
mov
or
xor
movl
sbb
aaa
daa
adc
or
cmp
jle
fmul
cmpsb
rolb
pop
in
jg
insb
dec
inc
shlb
jns
outsl
mov
cld
fstl
mov
dec
cmp
fisubrs
xchg
jge
in
ret
addr16
aaa
ret
ja
or
push
mov
inc
mov
aad
das
bound
pushf
or
pusha
jg
lret
adc
add
pop
leave
daa
pop
les
mov
push
in
hlt
sub
dec
xor
arpl
mov
pop
and
in
push
add
into
lods
pop
into
lret
push
add
faddp
aas
movsb
int
out
or
sub
sbb
mov
scas
subl
xchg
push
loop
mov
xor
lret
stc
jnp
scas
push
fcmovbe
jnp
push
shll
push
scas
in
fisubl
daa
push
ja
iret
inc
popa
push
sub
sub
pop
inc
test
cmp
scas
and
test
or
mov
mov
ja
loop
mov
jo
mov
pop
mov
arpl
mov
jecxz
pop
sbbb
cli
aam
addl
inc
pop
imul
cs
fucomip
in
and
out
pop
arpl
in
xor
in
dec
cld
mov
push
push
test
ss
jo
in
mov
sbb
addl
pop
jg,pt
jmp
jmp
out
or
dec
stos
loop
test
sub
bound
add
stos
enter
push
xchg
cld
mov
je
sti
push
mov
out
inc
push
or
popf
pop
test
icebp
imul
cmpsb
inc
mov
pop
or
push
or
sbb
push
aaa
add
ret
inc
sub
cltd
stc
mov
and
jo
mov
insb
add
cmpb
push
loopne
scas
out
in
lret
sbbl
jae
mov
rolb
cmc
inc
mov
das
scas
add
pop
in
sub
xchg
dec
push
push
push
arpl
mov
mov
pop
inc
xchg
adc
inc
cmp
and
push
and
cmpsl
mov
sbb
sbb
pop
inc
lock
in
daa
inc
push
into
sbb
cmp
add
inc
insb
xchg
loopne
push
test
push
ret
fsubrp
push
fidivrs
mov
cld
pusha
push
mov
jno
or
insb
out
shrl
mov
mov
or
stos
out
ret
mov
adc
jl
push
jle
push
sbb
popf
jle
cmc
call
sbb
xchg
repz
xlat
adc
pop
sbb
lret
jno
jp
lret
add
lds
jbe
das
outsl
dec
sbb
push
jne
call
dec
call
mov
gs
pop
lock
lahf
push
clc
push
sti
dec
inc
mov
push
dec
scas
mov
fwait
sarl
dec
insl
test
push
aaa
jno
xchg
jno
pushf
loopne
fwait
cmp
adc
mov
xor
sub
add
mul
mov
mov
or
push
mov
pop
in
dec
xchg
mov
jp
sub
test
vcmpsd
adc
outsl
mov
lahf
push
cmp
mov
jno
dec
mov
jmp
gs
pop
sbb
aam
out
bound
out
lock
fisttpll
in
pop
jo
jns
inc
mov
scas
sbb
movsb
ret
repnz
in
mov
loop
jle
mov
xor
xor
rcr
lods
in
inc
mov
fxch
lret
in
gs
adc
add
mov
mov
jmp
or
pop
adcl
add
insb
mov
sbb
xchg
cmpsb
hlt
fisubl
jg
pop
out
lea
sbb
test
in
or
cmp
dec
dec
sbb
or
cmp
pop
and
cltd
dec
or
or
addr16
cmp
insl
xor
rorl
repnz
iret
std
lods
into
cmp
dec
adc
cwtl
pop
mov
outsl
lret
dec
push
push
add
jne
repz
cmp
cmp
mov
cmpsb
test
dec
int3
ja
mov
lcall
movsl
les
arpl
jbe
mov
xchg
push
in
and
movsl
push
loopne
lock
ficomps
pop
mov
cmp
test
jae
xchg
aas
lret
lods
loopne
xorl
stos
mov
filds
cmp
dec
repnz
jg
call
cmc
or
jbe
mov
ljmp
mov
push
push
mov
mov
sbb
aaa
pop
daa
inc
aas
add
ja
mov
and
cltd
adc
decl
in
jae
add
shl
dec
cmp
sbb
jg
sarb
mov
mov
mov
xchg
jl
sub
pop
divl
mov
xor
jno
fs
xchg
pop
enter
push
push
bound
add
xchg
push
pop
bound
dec
dec
in
dec
cld
push
lcall
cmpsl
cmp
pop
adc
cwtl
cmp
das
add
jno
rcrl
push
sub
inc
adcb
sbb
bound
cltd
fstpt
xchg
les
xchg
dec
pop
and
jne
out
int
add
adc
adc
dec
pop
push
mov
out
and
mov
or
sub
cld
imul
push
xor
imul
ret
ljmp
push
inc
or
scas
cld
pop
mov
pop
jecxz
inc
cwtl
mov
ja
loop
icebp
pop
add
aaa
sub
arpl
dec
icebp
cmp
pop
adc
adc
cs
negb
sub
add
pop
out
aaa
or
fwait
mov
cmpsb
clc
mov
pusha
mov
xchg
dec
mov
out
aam
inc
jle
test
push
mov
mov
out
xlat
sbb
testl
stos
clc
test
xchg
in
mov
jae
daa
sub
xor
mov
jbe
das
in
repnz
push
sub
mov
or
imul
ja
lods
mov
shl
shlb
test
incw
mov
cltd
fcoms
loopne
test
movsb
xchg
pop
fistl
ret
divl
pop
addr16
int
mov
jecxz
imul
jae
test
out
dec
cli
xchg
cli
jo
aas
les
jge
jo
jle
dec
push
jne
xchg
pop
fisubl
addb
mov
sub
inc
in
fists
pop
test
shlb
les
sub
push
lods
ret
jbe
mov
mov
sti
push
jmp
jo
pop
nop
clc
sub
outsl
sub
les
shl
mov
das
push
mov
jmp
cltd
jmp
pop
test
inc
sub
cmpsl
mov
mov
divl
mov
mov
push
or
add
dec
or
mov
pop
test
call
xchg
out
push
inc
pop
inc
sub
ret
push
or
mov
mov
pop
pop
addr16
fwait
cmpl
lret
rolb
add
out
mov
scas
push
les
mov
and
sti
jb
mov
sub
notl
imul
ret
cld
icebp
pop
enter
push
push
scas
mov
add
and
imul
cmp
stos
push
outsb
int
dec
jo
or
dec
cltd
xchg
xchg
in
scas
lret
dec
jb
push
or
roll
out
lods
pusha
sbb
call
jb
sahf
fcmove
notb
loop
mov
or
inc
fnstsw
outsl
dec
pop
imul
movsl
mov
aaa
in
push
ret
adc
aas
xchg
out
dec
pop
jecxz
cmp
sub
dec
xor
mov
sarb
testl
xchg
mov
fcomps
in
push
dec
inc
push
decb
imul
jo
jnp
data16
fnstcw
inc
icebp
popa
das
es
adc
lea
cltd
adc
push
mulb
iret
in
xchg
jle
movsl
sbb
sub
jmp
jne
rorl
es
lret
mov
test
add
leave
stos
jmp
sbb
sbb
cld
pop
pop
and
repnz
cmp
xchg
sbb
inc
and
push
lret
leave
adc
daa
push
hlt
addr16
pop
mov
addr16
hlt
mov
add
adc
jge
and
mov
out
stos
or
cld
popa
adc
jmp
xor
mov
loop
adc
push
dec
sarl
sti
aam
inc
loop
pop
test
arpl
xor
mov
dec
pop
push
sbb
push
sbb
das
jns
shl
and
add
cmpl
mov
dec
jl,pn
dec
dec
test
call
or
add
mov
iret
xor
into
out
pop
shrb
das
jns
pop
adc
add
enter
fsubs
fnstsw
lret
ljmp
adc
xor
test
inc
fbld
in
cwtl
mov
std
sbb
jns
xor
or
cmpsl
in
scas
dec
push
sbb
enter
out
inc
arpl
inc
mov
sub
daa
enter
rclb
fsubl
mov
mov
cli
ficomps
aam
xor
das
dec
jmp
and
cld
jo
push
jnp
rol
or
les
mov
and
mov
sti
mov
sub
xorb
out
cmpsb
stos
adc
add
jp
push
mov
cmp
jbe
cmp
mov
addl
mov
and
and
iret
jne
in
pop
dec
outsb
mov
mov
shlb
sbb
xorb
std
mov
add
ret
das
add
fimuls
scas
bound
in
lret
mov
inc
faddl
fwait
mov
adc
jbe
mov
mov
mov
xchg
movsl
sarl
sbb
fs
sbb
mov
and
aad
jl
cltd
jno
scas
std
xchg
pop
cmp
cmp
jl
pushf
dec
test
lods
fwait
mov
mov
sti
addr16
xor
ljmp
into
test
mov
out
mov
push
and
clc
adc
stos
fcoms
cmp
push
xor
lea
lock
sub
lret
push
lods
xchg
lock
sahf
xor
int3
rclb
icebp
inc
outsl
shlb
imul
dec
loopne
adcl
xor
sbb
jb
jl
lods
or
lods
push
dec
lcall
add
pop
cmp
jne
xchg
leave
inc
dec
jo
cmp
xchg
pop
xchg
movntq
clc
jae
loope
loopne
cmpsl
sub
push
movsl
rcll
out
jnp,pn
push
lea
lahf
cltd
fidivrl
push
mov
shr
negl
popa
xor
leave
xchg
popf
cmp
jb
jbe
insl
sbb
and
sar
xlat
xor
mov
scas
push
sbb
and
xchg
mov
dec
das
js
push
popl
jno
mov
push
add
mov
xlat
cmpsl
xchg
call
sub
cmp
int
jbe
xor
scas
ds
out
idivl
repz
shll
hlt
pop
pop
data16
int
lcall
cmc
loope
or
xchg
xchg
inc
in
jno
or
fcmovb
lahf
pop
push
cwtl
push
lds
movl
stos
sbb
fistpll
cmc
cmp
sbb
aas
sbb
aad
sub
mov
stc
repz
stc
inc
pop
cmp
lock
jg
mov
sbb
mov
pop
aas
xorl
jecxz
insl
stos
std
and
mov
cmpsl
mov
enter
push
push
pusha
push
cmp
arpl
andl
loope
sbb
in
insb
lret
cmpsl
push
mov
outsl
sbb
addr16
adc
jne
in
inc
cli
mov
add
sub
lods
out
cmp
dec
out
adc
pop
repnz
jnp
jmp
sti
pop
in
test
hlt
dec
enter
test
dec
lret
push
ret
call
leave
dec
inc
xor
icebp
sahf
mull
fiadds
fisttps
add
jnp
lret
fcoms
fstpl
call
mov
mov
inc
xor
add
pop
inc
mov
or
xor
cld
aad
testb
sub
mov
mov
lret
and
inc
enter
inc
call
testl
loop
mov
adc
cmpsl
cmp
ret
lcall
xchg
jecxz
adc
out
mov
mov
in
or
mov
lcall
test
mov
or
dec
pop
xor
addl
mov
dec
repnz
xor
push
jg
mov
pop
pop
cmp
je
dec
mov
mov
test
xor
pop
and
xor
rolb
sti
pop
push
mov
mov
mov
test
or
jae
aas
xor
movsl
daa
push
pop
xor
or
insl
add
and
jg
ret
push
push
sti
jl
push
sbb
mov
and
imull
hlt
call
sahf
push
daa
inc
movlps
div
test
pop
movsb
jo
mov
cli
inc
dec
adc
inc
in
cmp
scas
xchg
es
ss
popa
fidivl
incb
push
sbb
mov
stc
lret
xor
ja
out
movsl
nop
test
sub
adc
fs
push
mov
enter
fldl
jl
insb
cmp
push
push
jo
aaa
inc
mov
or
rcl
or
repnz
push
mov
nop
loop
fs
cmp
inc
mov
fistps
das
jmp
dec
scas
jmp
das
mov
inc
lcall
pop
pop
mov
sub
mov
dec
in
ret
push
adc
pop
ds
lret
push
xrelease
popf
es
out
hlt
dec
rcll
fstpl
xor
jecxz
imul
pop
add
ret
jecxz
add
inc
xchg
adc
and
jge
fistpl
bound
inc
fnstenv
sbb
cmp
in
mov
inc
push
xor
insb
aas
andb
gs
into
sub
lods
dec
call
loopne
insl
lret
sbb
sbb
xor
inc
xor
cmp
add
out
int
stc
lods
mov
sub
daa
sub
inc
lock
dec
stc
pop
pop
mov
cmp
pop
sub
add
imul
test
or
lods
mov
pop
cmp
inc
stc
fsubp
mov
push
mov
icebp
xchg
inc
lahf
scas
push
out
mov
sbb
cmp
int3
pop
es
test
les
push
iret
mov
push
adc
mov
lret
xor
ror
hlt
pusha
fs
push
cld
aam
jg
into
std
sbb
fidivl
cs
std
es
or
test
cmp
in
fidivs
xchg
jg
sbb
mov
pop
clc
jno
add
xchg
cli
inc
addl
mov
or
jecxz
into
mov
insb
lret
dec
xchg
test
sbb
xchg
mov
mov
jbe
dec
ds
mov
imul
adc
pop
xchg
dec
mov
xchg
scas
push
inc
sbb
xlat
stc
sub
lret
add
xchg
in
xor
inc
mov
ret
dec
push
add
and
mov
sahf
cli
sub
and
mov
mov
add
push
cmp
sbb
or
cltd
nop
and
sub
data16
aad
push
push
cmp
sbb
cmpsl
les
add
cmp
jne
loop
insb
jle
push
aas
bound
pop
pop
adc
idivl
pushf
aad
je
or
push
popa
xchg
cmp
es
scas
nop
fwait
xor
test
test
dec
mov
jb
nopl
stos
ja
push
fucomi
dec
pop
cmc
add
imul
add
loope
addl
mov
insb
or
jg
es
lods
push
sub
js
inc
adc
mov
leave
insb
and
gs
sub
jnp
ljmp
lcall
push
imul
cmp
stos
repz
sbb
cmp
shll
in
sbb
ss
push
dec
fs
pop
adc
pop
inc
xor
iret
xlat
sub
sbb
das
les
fadd
pop
gs
lret
sbb
ja
push
jmp
out
or
xor
inc
mov
pop
cmpsl
aaa
xchg
add
jg
ss
and
mov
mov
push
jmp
push
mov
mov
dec
popf
pusha
cmpsl
push
dec
rolb
mov
cwtl
mov
adc
mov
loop
inc
cmp
imul
aaa
fwait
loopne
xor
inc
sub
mov
cltd
sub
push
sub
xor
xor
ss
mov
ret
inc
pop
cli
test
mov
call
loop
into
lock
xchg
aam
insl
movsb
cmp
xor
xor
mov
jmp
repnz
pop
cltd
xchg
cmp
das
pcmpeqd
xchg
rol
movsl
mov
pop
test
jno
inc
aas
cmp
xlat
or
sub
xor
jns
adc
rcrl
dec
popf
jno
ss
dec
sbb
outsl
popa
cmpsb
adc
mov
mov
push
adcb
sub
cs
mov
cmpsl
fsts
icebp
pushf
jae
xchg
imul
rcrl
cltd
in
inc
cmp
loop
cs
fidivrl
loopne
js
xchg
mov
add
shlb
scas
push
jg
cs
cltd
mov
jne
and
and
push
inc
out
jmp
dec
pop
imul
fs
pop
mov
push
jbe
xor
popa
sbb
fiaddl
sub
add
sub
xchg
sub
ss
aad
jbe
in
xchg
sub
aam
out
movsb
ficoms
cmp
in
loop
repz
mov
popa
inc
jecxz
test
push
cmp
inc
fs
lock
fimuls
aam
push
enter
adc
cltd
test
cmpsl
sbb
data16
and
pusha
addr16
push
xor
and
push
popa
dec
shlb
outsb
jge
mov
xchg
sahf
je
loope
push
addr16
push
bound
mov
cmp
mov
mov
adc
notb
das
adc
mov
dec
mov
ret
loopne
or
les
nop
adcl
leave
ja
inc
jo
jle
mov
mov
sub
pop
sbb
int
push
push
out
pop
jmp
fwait
mov
mov
ret
ret
mov
add
mov
cmp
jle
lret
jl
xchg
lea
into
sbb
xor
out
sub
jmp
add
and
in
repnz
jmp
in
outsl
sarb
sbb
add
adc
into
in
jecxz
mov
mov
xchg
pop
leave
mov
fbstp
in
fldl
add
inc
sahf
sbb
loop
push
pop
xchg
push
pop
mov
and
xlat
fcmovne
jbe
jl
mov
lock
xor
adc
push
push
inc
aam
cmovp
stos
sub
stos
in
cmp
setb
int
xchg
fmull
imul
xor
dec
sub
lret
sub
sti
inc
push
in
ud1
test
lret
popf
iret
rol
inc
aaa
adc
pop
pop
pop
inc
inc
imul
xor
push
xchg
jg
mov
ja
jo
and
stc
mov
lcall
mov
insl
mov
outsl
popf
xchg
neg
in
mov
div
push
sub
sbb
cmpl
sub
aam
adc
inc
cs
mov
fwait
pop
xor
push
leave
sub
xor
mulb
mov
pop
jo
push
sbb
jo
pop
adc
cmp
push
lock
cmp
pop
rcrl
out
in
or
and
mov
imul
jmp
shl
adc
es
jle
adc
rcll
dec
cmp
vshufps
cmp
inc
dec
inc
jo
mov
sub
sbb
daa
adc
cld
pop
pushf
int
push
lret
xchg
jns
xor
xor
cmp
and
jnp
test
rclb
pop
push
sbbb
inc
xlat
aam
jbe
aas
arpl
inc
shl
lods
xor
adc
pop
lahf
add
pop
and
pushf
mov
popa
int3
popa
pop
cmpsl
aad
sbb
fs
dec
pop
dec
pop
cmp
or
mov
loope
aaa
fsts
sbb
lds
stc
cld
xchg
lret
sbbb
int
sbb
aaa
loopne
ret
in
mov
repz
and
mov
daa
call
cltd
lods
sbb
xchg
push
insl
out
push
mov
subb
jg
jmp
cmp
xlat
inc
push
adc
cmpsl
shrl
les
sti
mov
inc
idivl
lahf
aad
sub
cmp
sub
je
cmpsl
sub
sub
call
jmp
xchg
or
pop
mov
mov
add
rep
fsubrs
repnz
mov
into
insl
cmp
or
xchg
cwtl
push
cmpl
insl
pop
adc
xor
aaa
push
xchg
push
pop
sbb
sub
inc
mov
dec
pop
mov
mov
stos
pop
fisubrs
and
cld
cmp
dec
and
add
mov
les
push
sbb
pop
lcall
test
push
jnp
shrb
leave
pop
scas
insl
stos
in
ficoms
inc
mov
pop
or
std
jle
xchg
fdivs
aaa
jecxz
push
inc
mov
stc
jno
add
int3
sub
jmp
test
jno
mov
pop
lcall
popa
out
push
push
int3
and
inc
mov
xlat
sub
adc
sbb
xor
adc
pop
xor
mov
shrb
jno
cwtl
dec
xchg
scas
push
pop
fucomp
and
jno
pop
stc
scas
call
fcmovnu
fwait
mov
xor
cld
sub
test
outsb
clc
jae
shl
lock
push
and
rclb
mov
cmp
mov
les
pop
gs
arpl
leave
add
ficoml
mov
pop
lods
fcmovnbe
mov
mov
ret
pop
repnz
cmp
push
idivb
cmp
add
nop
in
std
shll
add
add
fiadds
dec
addb
jle
xor
mov
pop
lret
ja
or
lods
stc
xor
cld
lods
adc
or
inc
fidivl
fs
xchg
sbb
xlat
bnd
pop
ret
xor
sbb
out
pop
loope
lret
jmp
adc
xchg
les
jns
lret
rorb
xlat
mov
or
pop
dec
jle
mov
xchg
adc
in
mov
mov
xor
mov
mov
inc
xor
pushf
shrl
sub
jecxz
jecxz
cmc
push
ss
and
mov
xor
push
fnsave
js
inc
test
popf
xor
das
daa
sti
inc
mov
ss
jge
mov
cmc
call
mov
lods
push
sub
push
jg
xchg
lods
fyl2x
add
mov
test
roll
add
jle
gs
pushf
mov
dec
mov
cmp
out
loopne
xorb
jecxz
inc
sub
jns
lret
and
mov
sub
sbb
mov
mov
clc
movsl
rol
mov
stos
pop
test
adc
add
pop
jo
ds
gs
ljmp
or
outsb
clc
add
sbb
mov
stos
out
xor
in
sub
cmpb
pop
inc
shll
std
and
dec
mov
dec
das
lds
or
jns
pop
cld
sub
inc
push
add
js
popf
xor
pop
cmp
jle
jne
mov
and
or
mov
dec
cmp
in
lock
js
sub
call
add
dec
push
sub
mov
out
jl
pusha
insl
adc
flds
xchg
fcmovu
pop
mov
mov
vcomisd
cwtl
aaa
mov
sub
jl
jle
addl
fwait
call
lcall
js
rorl
mov
sbb
rcrl
rcrb
jp
pop
jae
scas
adc
push
div
and
movsb
add
out
xchg
imul
jle
jb
pop
cmpsl
je
or
mov
push
or
addb
dec
add
repnz
inc
push
jle
or
sub
in
xchg
es
pop
stos
inc
negb
lods
cmp
and
mov
push
sbb
ffreep
xchg
mov
and
fwait
es
fildl
jge
rcl
or
inc
mov
in
push
rorb
mov
xor
movsb
jle
cmpsb
je
notb
sub
rcll
ret
mov
mov
xor
in
lahf
xchg
shl
loop
add
xchg
mov
jb
scas
cmp
add
adc
cmpsl
leave
dec
ret
add
rclb
mov
mov
jb
sub
in
push
jle
pop
mov
jno
mov
loop
xchg
xchg
cmp
adc
rcrl
xchg
ret
sub
and
test
inc
xchg
or
jmp
mov
pop
addb
dec
xor
rcrl
aaa
popa
fdivl
xchg
call
and
or
test
push
shrl
pop
out
mov
sbb
shll
sbbl
ss
push
mov
neg
loopne
or
imul
aam
pop
test
into
pop
xchg
call
mov
nop
adc
addr16
cmp
repz
jbe
adc
cwtl
xchg
je
or
out
or
aad
inc
aam
xchg
data16
or
adc
add
ja
add
adc
imul
shr
mov
in
out
dec
mov
push
jne
sarl
inc
xor
push
adc
test
jl
or
sub
xor
sahf
xor
mov
add
pop
pop
jne
inc
movsb
xor
jecxz
mov
or
jp
push
inc
sub
push
xchg
dec
mov
and
test
insb
call
pop
lods
sarl
fsub
push
movsl
lea
shr
das
out
pushf
and
cwtl
hlt
cmp
in
push
lahf
cmp
inc
cmp
and
adc
cmc
hlt
mov
outsl
mov
inc
sub
jno
or
mov
or
push
jae
mov
push
cmp
dec
xchg
add
mov
leave
lods
outsb
jns
adc
push
mov
dec
test
dec
clc
in
mov
scas
push
insl
cmp
add
divl
adc
dec
xchg
shlb
ret
push
and
dec
pop
shr
std
movsb
fistpll
mov
int
mov
es
dec
xor
inc
jl
fbld
je
and
pop
mov
adc
xchg
lcall
mov
push
scas
sub
hlt
or
jg
mov
mov
ljmp
lock
lea
sahf
or
popa
cmc
sbb
bound
call
lret
cmp
std
fidivrs
mov
inc
mov
mov
testb
fmuls
lods
mov
mov
inc
xchg
lods
or
sbb
stc
mov
call
sub
std
jbe
das
and
xchg
ja
inc
add
adc
inc
inc
mov
push
mov
sub
es
cmp
gs
ss
sbb
lret
call
pop
add
shrb
and
ljmp
pushf
int3
into
mov
sbb
outsb
orb
add
add
mov
add
sub
mov
xor
mov
cmp
je
mov
xor
mov
sub
add
jmp
mov
mov
mov
lea
mov
mov
mov
xor
add
mov
mov
mov
xor
add
pop
cmp
jne
jmp
fnstenv
xchg
gs
test
sbb
dec
push
rcrb
insb
int3
scas
and
cmp
xchg
pop
into
cmp
xor
add
mov
loopne
mov
cltd
push
shrb
cs
lock
nop
aad
fisttpll
fstps
pushf
pop
mov
pop
pop
mov
cmp
movsb
call
fs
xchg
push
cs
mov
add
test
pop
ret
fs
outsl
sub
push
push
nop
repnz
into
sbb
int3
mov
data16
gs
call
outsb
inc
addr16
in
pop
andb
dec
rol
jnp
sahf
in
mov
pop
dec
sbb
adc
fst
jnp
loopne
jp
xchg
jmp
xor
xchg
repnz
mov
pop
mov
imul
out
enter
movsl
call
outsl
sub
sahf
enter
shrl
test
movsb
sub
test
lret
sbb
fmull
push
xlat
jl
mov
inc
call
push
add
jg
hlt
mov
fsubrl
jb
test
stos
mov
push
in
pop
add
jmp
jecxz
adc
cmc
mov
xlat
and
cmpsb
out
lret
movsl
test
push
add
xchg
es
adc
adc
shlb
sahf
push
cmc
pusha
in
push
cmpsb
cmpsb
out
fdivl
pop
cmp
or
mov
and
loopne
stos
fsts
test
pop
ret
leave
lock
mov
fstpt
jns
or
push
arpl
add
add
das
dec
aad
inc
imul
into
incb
pop
and
pop
mov
mov
and
cmp
inc
jae
and
mov
xchg
xchg
inc
insl
hlt
pop
movsl
pop
dec
scas
cs
aaa
out
je
sub
sub
icebp
dec
stos
popa
insl
and
mov
xlat
out
and
data16
xor
xor
jmp
sbb
or
pop
orl
jle
sub
dec
sar
pop
jne
jnp
inc
inc
es
push
rorl
jno
lods
mov
fistpll
pop
sahf
add
xchg
and
popf
pusha
cld
sbb
push
inc
mov
test
sbb
ljmp
loope
cmc
out
dec
movsb
mov
shll
aam
mov
cmp
mov
lret
fstpl
or
hlt
rcrl
dec
mov
jns
into
inc
inc
sub
push
cmpsl
in
addl
pushf
adc
imul
adc
push
stos
cmp
cwtl
ret
jns
jno
add
xchg
in
dec
je
and
xchg
int
out
xchg
cltd
adc
ljmp
out
ja
mov
iret
xchg
test
or
in
icebp
dec
sbb
arpl
call
dec
xchg
mov
adc
sub
fsubl
push
pushf
xor
mov
xchg
pop
shlw
lods
mulps
inc
xor
jge
vlddqu
test
or
adc
aaa
cltd
xchg
xor
inc
mov
fimuls
scas
frstor
sub
movsb
lret
data16
pop
outsl
ds
push
sbb
sti
add
into
sub
mov
lock
in
sub
and
mov
std
and
lahf
lds
divl
mov
outsb
lods
mov
pop
inc
xchg
fidivl
into
cmp
mov
push
xchg
pop
jo
mov
fildl
adc
pop
out
inc
sti
mov
out
das
push
mov
daa
xor
inc
iret
adc
cwtl
in
inc
in
sbb
push
jg
xor
cmp
loop
and
arpl
int3
jnp
add
xor
cli
daa
scas
jns
out
cmp
pop
mov
cwtl
aad
pop
dec
cli
out
add
xchg
pop
iret
dec
fldl
cmp
mov
sbb
stc
ja
push
mov
enter
jnp
mov
jge
mov
pop
lea
mov
adc
ret
pop
pop
int3
jmp
adc
xchg
xchg
stos
mov
dec
jmp
mov
mov
into
mov
lds
pop
sahf
or
fwait
popf
repnz
xchg
inc
add
jno
xor
fdivr
ljmp
pop
and
push
jno
push
outsl
fwait
inc
mov
jle
neg
or
les
dec
jecxz
dec
sbb
sbb
jle
jmp
js
push
cltd
lret
call
ret
push
inc
orb
aaa
lret
pop
dec
out
icebp
testl
cmp
cmp
xchg
out
pop
in
out
movsb
jecxz
and
lret
gs
add
and
or
dec
adc
repz
outsb
adc
inc
insb
stos
xor
vcvtsd2ss
inc
dec
jmp
fptan
mov
es
mov
shl
or
or
int
lret
data16
lea
lock
aam
sub
xchg
mov
bound
mov
push
int
add
in
cld
and
xchg
adc
and
xor
lcall
pop
insb
xor
push
test
repnz
push
or
scas
xor
outsb
fwait
push
fs
aas
sub
adc
mov
push
xchg
fcmovu
std
xchg
imul
sub
idiv
xchg
mov
sub
pop
inc
jb
std
cmp
cmp
push
pop
cmp
push
nop
loop
xor
push
inc
jno
int
lock
arpl
xor
je
ljmp
sub
adc
mov
rcll
mov
pop
loop
movsl
cmp
sub
push
adc
fmuls
imul
and
pop
in
outsl
xchg
inc
pushf
dec
daa
push
inc
mov
inc
push
pop
dec
jno
aas
mov
mov
jb
or
add
adc
enter
cs
andb
jnp
jno
xlat
sti
in
fprem1
push
repnz
das
push
push
mov
out
js
cmc
inc
and
movsb
repnz
cmpsb
mov
js
int3
or
aam
mov
mov
repnz
push
lahf
pop
mov
rcrl
loopne
test
mov
pop
hlt
add
iret
cwtl
repnz
pop
adc
dec
aam
stos
inc
stos
add
push
in
cmp
loop
insl
mov
int3
cmp
push
int
mov
lcall
push
xlat
scas
or
xchg
xchg
push
and
shll
imul
mov
addr16
lahf
ja
mov
fwait
nop
or
into
lahf
mov
mov
outsb
js
repnz
addl
push
aas
sub
xor
cmp
push
leave
in
scas
mov
xchg
loop
pop
and
push
fwait
jne
fmuls
popf
ljmp
cmc
add
cmpsl
inc
data16
pop
pop
js
xor
inc
inc
pop
inc
xchg
imul
xchg
enter
inc
dec
and
jo
adc
xchg
clc
dec
fbstp
ja
mov
scas
pop
imul
test
mov
add
mov
inc
add
sbb
shr
daa
and
adc
xchg
ja
sub
test
jg
fisttps
jns
mov
inc
jbe
lea
cmp
push
mov
add
notl
arpl
in
icebp
push
push
fs
jl
lods
xor
jne
pop
push
xchg
jg
pop
and
arpl
mov
mov
lods
lock
adc
jp
and
lods
les
iret
cmp
dec
cld
xor
push
in
jo
fildll
dec
fcmovb
out
test
ret
mov
mov
jae
icebp
aaa
fisttpl
ret
adc
mov
jne
xor
push
pop
leave
xor
cltd
and
push
sub
mov
test
repz
fs
loope
inc
xchg
es
gs
dec
leave
or
mov
pusha
push
xchg
cs
popf
inc
rcrb
lret
and
fmuls
mov
jl
dec
fsubrs
sub
loope
sbb
and
pop
aad
sub
dec
mov
and
add
popf
push
push
daa
mov
jmp
jl
push
out
push
inc
in
fisttps
and
push
pop
mov
test
setl
jae
aas
cmp
add
lahf
mov
insb
inc
subl
cli
xchg
mov
jb
ret
leave
cld
jne
mov
aad
cmp
jb
adc
sub
lret
jns
or
in
cs
out
xor
ret
inc
add
and
rorl
xchg
repz
push
in
aam
and
push
push
mov
mov
out
lret
and
or
dec
jno
enter
lcall
jno
dec
loop
or
and
jl
movl
cmp
or
add
push
push
dec
icebp
pop
insl
pop
jle
sbb
cmpsb
scas
hlt
hlt
sub
sbb
std
mov
cmp
mov
div
dec
fidivl
lods
dec
gs
cmp
in
pop
xchg
cmp
fstl
ret
fwait
out
add
and
in
fists
adc
inc
or
pop
sbb
sti
iret
push
dec
repnz
mov
push
sahf
popa
out
sbb
dec
cmp
or
cmc
pop
sub
or
or
xchg
in
and
or
daa
jbe
imul
insb
jp
js
push
nop
mov
mov
int3
sti
fcomp
jae
jae
frstor
insb
out
adcl
push
int
insl
aaa
enter
cli
push
ss
out
pop
fldt
jne
outsl
hlt
adcl
push
lahf
cmp
fists
jne
sub
xchg
xor
aad
pop
inc
gs
pop
xor
lcall
inc
xor
daa
mov
das
jle
es
fstpl
mov
adc
inc
push
lea
sbbb
adc
hlt
jns
jecxz
in
mov
cmpsb
adc
sarl
push
lds
loopne
jecxz
js
fwait
outsb
xchg
je
rep
gs
inc
into
xchg
ljmp
mulb
push
jne
xor
repz
cmp
enter
js
mov
sbb
pop
insb
lods
scas
xor
dec
jmp
imul
rcrb
pop
movsb
mov
rorl
pop
in
movsl
add
mov
call
xchg
sbb
xchg
jno
jle
loopne
or
adc
pop
and
cmc
pop
test
pushf
jecxz
fs
enter
add
into
xchg
sti
testl
jne
mov
inc
out
test
cs
push
lods
mov
shufps
and
mov
xchg
cmpsb
gs
mov
pop
pop
cmp
test
xchg
add
jnp
call
negl
fildl
in
insl
adc
inc
xchg
sub
mov
jne
push
mov
mov
push
mov
and
jp
or
and
out
inc
jmp
mov
mov
xchg
mov
mov
ja
loopne
inc
sahf
in
cmp
divl
imul
mov
adc
push
add
jbe
or
pop
pop
inc
jne
lcall
pushf
data16
lret
jecxz
sti
call
outsl
push
movsl
out
cmpsl
mov
cltd
out
xchg
add
push
addr16
test
sub
mov
shll
dec
mov
rol
fsubl
js
sub
jns
mov
or
jbe
lds
pop
popf
push
fwait
mov
loopne
sahf
nop
or
dec
lret
pusha
mov
mov
jge
dec
pop
and
or
jle
pop
push
hlt
insb
cld
inc
jae
imul
mov
iret
push
mov
movb
bound
mov
es
lahf
sbb
mov
mov
jae
mov
decb
nop
popf
ss
xor
dec
dec
mov
leave
inc
adc
repz
test
shll
dec
sbb
ficoms
mov
cmc
dec
sbb
fs
pop
add
mov
mov
dec
test
icebp
sahf
pop
fildl
sbb
subl
stos
aad
incb
cmpsl
scas
mov
fldt
xor
pop
scas
and
push
das
divb
mov
jmp
mov
dec
clc
sarb
lds
je
ss
jl
mov
scas
lcall
sub
and
adc
sbb
push
repz
popf
popa
mov
addr16
movsl
push
cmp
and
jmp
out
mov
inc
das
aam
leave
mov
mov
bound
data16
push
mov
and
and
iret
push
ja
lret
inc
icebp
in
mov
lea
jne
repz
outsl
push
dec
in
sar
fwait
jg
test
mov
mov
pushf
add
out
jnp
dec
add
dec
jb
dec
mov
xchg
call
int3
mov
jp
and
mov
and
push
or
inc
orl
out
push
jbe
add
loop
mov
outsb
mov
fiaddl
mov
mov
sbb
call
jl
jno
or
fmuls
das
or
and
push
pop
imul
jge
mov
cmc
hlt
popf
rorl
jnp
mov
adc
and
lea
mov
ret
in
int
leave
out
cmpsl
xlat
sahf
nop
lcall
pop
loop
cwtl
or
dec
jle
mov
lock
cmc
in
dec
or
in
cltd
fs
leave
sti
ror
mov
ret
in
ret
jg
ljmp
mov
addr16
nop
dec
cld
cmc
js
cmp
add
jge
xor
popl
lea
je
aad
stc
call
mov
out
call
adc
stc
insl
fs
adc
and
mov
out
mov
mov
sbb
mov
out
stos
aad
xlat
roll
scas
add
mov
loopne
sbb
adc
or
sbb
popa
loop
js
or
jecxz
cmc
xchg
jle
jnp
jle
fs
gs
sub
lods
shll
xchg
add
shrl
out
inc
or
negl
lret
inc
stos
aad
push
xchg
pop
pop
sub
frstor
shlb
aaa
jb
pop
mov
arpl
xchg
mov
xchg
lcall
imul
mov
arpl
pop
jl
sub
push
cwtl
popf
mov
cmc
xor
or
cmc
jns
and
sahf
nop
dec
dec
xor
scas
add
out
pop
xor
ds
pop
sbb
cmp
mov
clc
inc
add
cmp
xchg
ljmp
mov
repz
scas
cmpsb
mov
xor
ret
xor
fwait
or
ja
dec
jge
sbb
add
and
inc
cs
ret
lods
xchg
xlat
sbb
cmp
lahf
xor
xor
addr16
ret
aas
les
push
mov
sub
fs
ds
addr16
ds
mov
dec
cmp
xor
cmp
jno
add
lret
mov
adc
push
mov
dec
in
add
icebp
dec
sbb
enter
add
sbb
cmc
shll
inc
iret
inc
and
fisttps
out
mov
into
mov
cmpsb
mov
mov
sbb
mov
pop
dec
jmp
loop
in
subb
xchg
icebp
add
xchg
push
jbe
clc
daa
or
movlps
movsl
enter
fdivl
mov
cmp
push
cmpsl
jo
lea
mov
xchg
sbb
dec
ss
test
cmpsb
xchg
and
out
ficomps
jge
pop
sub
dec
lock
jo
and
xor
adc
int3
rolb
ffree
loop
rclb
pop
and
xor
jns
mov
pop
jae
mov
mov
adc
pop
adc
jno
inc
cmp
call
add
mov
loopne
mov
cs
or
pop
jo
lret
sti
and
mov
lcall
pop
in
lret
ljmp
cltd
arpl
andl
popl
daa
jb
int
sbbb
push
inc
sahf
ss
inc
icebp
or
push
mov
and
mov
adc
lahf
pop
repnz
repnz
cmpsb
insb
add
int
mov
fsubrl
add
add
adcb
cmp
cmp
xor
frstpm(287
pop
sbbl
jnp
push
mov
daa
cmpsl
xor
daa
cmc
popa
inc
mov
pop
ljmp
xchg
jg
pop
dec
dec
inc
cmp
jns
scas
cld
adc
xor
int
xchg
pop
push
ja
out
fwait
add
insl
xchg
mov
sbb
xor
in
jb
jbe
popa
aaa
mov
or
insb
push
mov
add
dec
xchg
dec
mov
sbb
ret
jb
xor
push
int
push
fdivrp
int3
call
loop
outsb
test
dec
dec
push
subl
or
jae
pop
mov
insb
xor
mov
dec
stc
cwtl
xlat
fs
or
push
add
mov
dec
cmp
fdivs
jecxz
subps
lret
xchg
jbe
xor
jle
adc
jne
adc
dec
mov
sub
mulb
cltd
mov
lods
scas
cmp
pop
dec
adc
mov
sbb
aaa
loopne
cmc
movsb
insb
clc
adc
insl
popf
gs
xor
mov
xor
insb
ja
out
dec
stc
inc
mov
cmp
mov
jle
sbb
lock
pusha
inc
scas
push
mov
cmp
cmpb
pop
std
add
sbb
lea
aam
cmp
mov
sub
imul
daa
out
adc
dec
push
test
mov
push
lods
push
xchg
xchg
mov
sub
jo
adc
leave
sbb
inc
in
sub
pop
stc
mov
dec
pop
mov
xchg
leave
sbb
pop
pop
fdivrs
push
rcrl
stos
xchg
mov
mov
cmp
rorl
xor
pop
pop
icebp
pop
mov
out
inc
test
mov
jno
lods
adc
pop
sahf
int3
into
scas
jg
movsb
mov
pop
stc
mov
leave
fs
stc
into
popf
adc
call
pop
push
pop
adc
lahf
mov
pop
daa
cmp
push
mov
jne
hlt
cld
loopne
loope
addr16
hlt
sbbl
cli
mov
sub
mov
mov
cs
inc
loop
lahf
and
int
sub
xchg
or
test
cmp
and
lods
leave
mov
ss
stos
in
push
decb
into
dec
cmp
arpl
rcr
push
out
jb
push
or
xchg
cmc
push
pop
cwtl
or
cwtl
xchg
es
stos
leave
fmul
cmp
ror
sbb
cmpsb
sbb
jae
xor
sbb
pop
or
stos
das
or
pop
xchg
jl
das
or
push
xchg
jle
jnp
outsb
shll
push
cmpsb
xchg
mov
into
lock
call
sbb
enter
std
popw
in
rol
dec
cmp
dec
movl
sarb
xor
fdivrl
scas
pusha
xchg
cmp
loopne
in
cmp
test
fidivrl
jmp
lods
jmp
jmp
std
lods
mov
lret
out
subb
mov
sti
add
and
fisttpll
or
sbb
xchg
adc
jg
out
add
and
cmp
cmp
xor
adc
mov
mov
popf
pusha
lock
or
lds
pop
shrb
std
js
xor
cmc
push
mov
cmp
adc
add
out
push
sub
ljmp
push
xchg
lea
test
lock
bound
or
xorb
lahf
stc
mov
cmp
add
adc
lds
mov
pop
sbb
scas
xor
in
jmp
aaa
xchg
mov
dec
jo
sti
dec
lahf
mov
push
out
stc
pop
or
jno
ds
sub
bound
fwait
stos
xchg
fldenv
scas
cwtl
pusha
bnd
xchg
test
lods
popf
mov
mov
pop
jg
js
and
pop
mov
xchg
movhps
cli
jnp
mov
aam
jecxz
cmp
fwait
xor
sub
mov
adc
sbb
movsl
stos
xchg
jmp
test
testl
cmc
stos
fistpll
out
imull
insl
add
lods
sbb
jns
out
out
mov
pop
in
xchg
fwait
test
xchg
ja
jge
in
mov
stos
mov
dec
popa
ret
stos
fsubrs
rcll
pop
jbe
push
ljmp
cmp
lods
bound
mov
aad
sub
sub
mov
xchg
int3
cmp
add
sarl
popf
repz
mov
popf
ss
mov
ja
mov
movsl
icebp
fs
mov
and
mov
add
lods
jmp
mov
shrd
in
pop
test
sbb
outsl
gs
nop
pop
leave
cmp
mov
sbb
pop
js
pusha
mov
int
sbb
and
and
mov
jnp
xchg
into
loopne
fdivr
shrb
fdivrp
xor
int3
inc
aam
std
ret
test
sbb
push
ss
sbb
in
mov
sub
and
pop
mov
mov
and
ret
mov
or
push
outsl
pop
lods
test
fildll
add
push
inc
test
iret
popf
daa
cmp
out
jns
dec
adc
inc
inc
enter
mov
ljmp
xchg
sbb
adc
push
arpl
jne
insl
sub
cld
in
mov
inc
stos
pop
and
sub
addr16
mov
mov
pop
push
pop
in
mov
or
jno
pop
enter
lret
out
data16
xchg
loopne
jo
mov
sub
jecxz
sbb
jbe
movsb
push
lea
les
sbb
lret
mov
in
out
mov
rorl
movsb
cmp
data16
inc
jecxz
fstpt
mov
cmpsb
and
jp
xchg
popa
cli
in
out
mov
push
adc
into
repz
ss
mov
into
xchg
push
mov
pop
cmp
adc
cwtl
cmpsb
xor
sub
ljmp
into
lahf
mov
clc
adc
bound
mov
pop
dec
dec
inc
arpl
jg
clc
cmp
and
xchg
and
stos
sub
mov
lahf
dec
sbb
lret
add
int3
mov
xor
daa
inc
dec
es
pushf
bswap
stos
mov
jecxz
dec
and
in
popa
push
inc
sub
push
or
test
shrb
push
dec
push
cld
xchg
jns
into
pop
jl
addr16
inc
or
mov
lods
popw
gs
adcl
mov
lcall
mov
cli
mov
xchg
idivl
adc
fsubl
inc
loop
cmp
mov
pop
mov
imul
sti
push
imul
subb
jb
mov
les
jl
sub
sub
xor
dec
inc
clc
test
loope
mov
or
push
sub
lock
pop
and
popf
insb
xchg
insb
cmp
ds
call
negb
or
adc
push
in
in
testl
lods
imul
mov
inc
xchg
bound
cld
jg
das
aad
add
enter
pushf
cmpb
cmp
push
xchg
leave
fnclex
aaa
pop
adc
nop
cmp
add
mov
popf
in
lret
adc
add
xchg
mov
xor
mov
cwtl
cmp
imul
xchg
dec
xorl
and
dec
xlat
add
jb
dec
jmp
add
adc
ficoml
sarb
xchg
cmp
jp
int3
xchg
pop
sahf
repz
mov
and
cwtl
outsb
or
push
mov
mov
mov
cs
aas
sub
adc
sbb
std
dec
mov
sub
pop
dec
daa
out
sbb
and
push
cmp
xor
aam
shll
repnz
dec
std
sbb
lea
push
jp
xchg
scas
fnstenv
add
sbb
sub
sti
sub
lea
adc
mov
push
sub
cmp
inc
je
pusha
mov
push
lret
xchg
mov
stos
sub
ss
push
sub
ret
jns
in
out
mov
inc
ret
fsubl
sub
test
dec
cltd
bound
adc
nop
call
pop
mov
xchg
xor
ds
push
xchg
pop
sub
cli
scas
out
aas
movsl
cmp
mov
push
lods
xor
out
insl
repnz
scas
loope
xchg
and
xchg
inc
enter
jge
jns
orl
setnp
rclb
sbb
fsubr
jbe
loopne
xchg
adc
cmpsb
rorb
shll
mov
fwait
or
mov
inc
dec
cmpb
frstpm(287
leave
xor
shlb
cmp
ds
jp
lock
subl
mov
shl
xor
jbe
xchg
test
clc
inc
sbbb
jo
pop
adc
xchg
insl
ljmp
dec
ja
scas
jg
mov
add
ds
push
adc
dec
outsl
mov
sub
repnz
mov
test
xchg
adc
jo
xor
xchg
mov
push
mov
push
mov
in
clc
jbe
xorb
cli
lret
jp
cmpsb
aas
inc
sbb
out
lahf
mov
es
stc
sti
in
cli
test
std
cmp
jbe
rolb
pop
popf
sbb
xor
lahf
test
out
clc
mov
loop
xor
mov
scas
xor
ret
cmp
fldl2t
fs
ret
daa
add
push
lahf
jle
push
sahf
gs
pop
mov
sub
pop
imul
mov
mov
jns
pop
addr16
cmc
jmp
mov
les
adc
mov
sub
cmpsl
mov
clc
cmp
test
add
inc
repnz
mov
adc
sti
cs
movsb
mov
and
jb
push
push
ljmp
mov
lahf
dec
adc
lcall
pop
jb
pop
push
pop
loopne
xor
and
cmp
push
fldenv
and
leave
shll
jb
fmull
and
pop
or
jb
scas
and
sub
repnz
enter
push
cld
clc
cmp
pop
ficoms
cmpsl
mov
jnp
sub
js
mov
shrl
inc
js
js
and
mov
dec
mov
xor
shl
faddl
sarl
mov
aaa
addr16
cmp
pop
notl
xchg
sti
jb
test
adc
and
push
ds
addb
scas
fs
adc
into
adc
add
out
push
inc
pop
fnstcw
adc
push
out
into
sbb
jns
sbb
outsb
dec
add
push
mul
stos
jb
loopne
imul
ljmp
rcrb
xchg
cwtl
test
fstps
mov
mov
icebp
out
fidivrs
popa
fcmovu
dec
dec
pushf
dec
pop
aad
dec
pop
rorb
inc
jbe
hlt
jp
and
dec
popa
scas
cmpsl
pop
jecxz
clc
in
mov
fstpt
aad
cmp
push
ret
dec
cmpsl
jo
mov
ds
movd
fidivl
call
iret
pop
shll
push
frstor
dec
sub
push
stos
jns
pop
aaa
repz
mov
mov
and
fisubrs
xchg
aad
ja
pusha
stc
sub
in
filds
das
shrb
and
cwtl
dec
orb
jo
cld
fcomi
sub
pop
dec
pop
lods
mov
cld
xor
ror
sbb
stc
or
das
mov
xchg
ljmp
xchg
pop
fptan
push
jnp
xchg
jge
ss
out
or
jge
mov
cmpl
or
or
sti
jno
dec
push
mov
add
sub
ljmp
mov
lods
and
sub
fwait
ljmp
and
pop
xchg
jge
sub
pop
push
aas
int
push
cmp
pop
out
daa
rcr
sub
js
lret
pop
fcoms
inc
xor
mov
push
pushf
aam
and
sub
lds
sub
add
push
cltd
imul
xchg
loop
dec
pusha
push
pop
into
inc
sbb
loope
or
lret
pop
lock
mov
or
jb
mov
push
mov
adc
mov
cmp
fcoms
push
cmpsb
je
dec
dec
xorl
cmpsb
cmp
adc
cld
jp
movsb
in
xor
jns
out
sbb
cmp
pop
mov
pop
movsl
push
fsts
jg
xchg
stc
call
dec
ret
in
popa
push
lods
les
fcmovnu
js
sub
addr16
popf
test
movsb
enter
mov
mov
mov
les
push
fwait
mov
nop
xchg
mov
outsb
cmp
inc
test
push
pop
dec
lret
pop
dec
loopne
sub
sub
mov
pop
sbb
jb
jp
mov
insl
cmc
scas
inc
xor
lods
jg
push
loope
push
mov
xor
insb
mov
cmc
hlt
int3
into
int3
dec
sbb
and
xchg
in
mov
and
jno
sub
out
or
xchg
stos
repz
jb
jo,pn
ret
push
insb
scas
xchg
jmp
adc
adc
out
adc
ret
xchg
inc
lahf
push
mov
aam
sbbb
sarl
jb
xchg
cmpsl
and
push
pop
push
jne
cli
aaa
cld
xchg
insb
push
rcrl
loope
in
dec
rcll
xorb
inc
ljmp
fwait
lods
push
mov
mov
mov
test
fs
fxch
mov
inc
inc
mov
pop
push
xchg
fdivl
adc
push
mov
push
mov
mov
push
xchg
xchg
push
mov
sbb
mov
mov
mov
mov
mov
pop
nop
insb
adc
rcl
or
sub
mov
mov
xchg
mov
aam
sub
sbb
sub
add
pop
addr16
cld
in
in
js
xor
test
rol
dec
idiv
fisubl
scas
jmp
es
mov
leave
aam
sbb
in
insl
adc
pop
fs
cmp
adc
test
xchg
movsl
xchg
jne
in
test
sub
std
sbb
xchg
xchg
in
ljmp
adc
nop
data16
pop
add
stos
ds
sub
jle
ljmp
das
sub
cmp
scas
push
sbb
push
adc
add
mov
dec
sbb
aas
shll
push
sub
out
mov
dec
sub
mov
lods
pop
cs
cli
mov
ds
out
xchg
clc
enter
cmp
outsl
mov
dec
mov
mov
fstpl
test
push
sbb
xchg
dec
das
sahf
nop
movsl
stos
aas
and
cs
repnz
mov
cs
ljmp
movsb
scas
stos
sahf
mov
aaa
jbe
scas
adc
mov
rorb
cld
lods
je
or
push
in
out
mov
pop
xor
in
xlat
cwtl
mov
xor
mov
add
imul
jmp
clc
loope
mov
test
mov
pop
into
in
cmp
popa
rcrb
sub
stc
popa
bound
mov
dec
mov
imul
mov
hlt
fldl
jne
inc
inc
fimuls
dec
sbb
rcrb
lcall
lcall
adc
outsb
psllq
out
pushf
movsb
mov
ret
iret
sub
push
hlt
das
xchg
dec
mov
movsb
xchg
outsb
mov
mov
sub
push
and
fsub
xor
or
push
sub
rcrb
cmp
mov
iret
jp
fisubrs
jb
mov
jle
pop
cld
mov
shlb
jge
or
mov
jb
cwtl
fwait
jnp
aad
lret
popl
shl
push
add
mov
lea
fisubrs
testb
mov
lcall
sbb
mov
jecxz
jno
outsb
fdivrp
insb
enter
sahf
mov
or
in
insl
lcall
cs
in
mov
pop
call
sbb
mov
mov
outsl
imul
testb
sarl
and
push
push
fsubrl
sbb
pop
sahf
mov
push
enter
aas
sbb
jge
jle
test
xor
sub
int3
mov
dec
std
out
int3
sub
insl
mov
cwtl
cld
and
sub
test
loope
xor
or
ss
adc
shl
stc
lods
arpl
orl
sub
aam
cmpsb
cmp
les
fistpll
mov
popa
pop
outsb
out
pop
sub
push
inc
call
shll
xchg
or
add
add
push
or
cmpsl
stc
cmpsl
cmp
in
out
mov
jb
aas
sub
or
and
fidivl
and
mov
cli
inc
sbb
push
sub
lahf
cmp
xchg
pop
and
jb
mov
push
call
dec
and
sbb
popf
pop
cli
dec
in
mov
repz
lods
cld
xlat
mov
inc
pop
test
fiaddl
mov
mov
add
jle
pop
inc
stos
call
push
pop
mov
je
nop
aas
dec
adc
and
mul
sbb
adc
jne
and
adc
adc
aam
sub
inc
mov
xchg
push
pushf
decb
jl
and
test
sub
jecxz
lods
push
xor
pop
or
loop
mov
notb
aad
stos
cmp
sarb
es
test
jb
aaa
mov
test
lret
pop
fs
jp
or
mov
imul
shrl
inc
imul
sbb
cmpsl
rolb
dec
shll
imulb
cmp
imul
mov
addl
lea
mov
push
test
imul
test
mov
call
out
xchg
jmp
cmp
pop
add
sub
or
shr
aas
stos
cmp
and
inc
orb
inc
sahf
push
inc
cmpb
scas
mov
jmp
or
adc
and
je
ds
cld
out
sub
adc
ja
inc
ret
fisubrs
add
sbb
sbb
fdivrl
cmp
push
mov
hlt
loope
aad
nop
sbb
pushf
outsl
adc
insb
ret
aad
loop
pop
aad
adc
and
int3
mov
jg
jne
jecxz
cmpl
stos
xor
push
push
cmp
pusha
mov
pop
iret
gs
xchg
lods
sub
xchg
push
push
aam
sbb
cmp
sbb
mov
cmpsb
xchg
inc
fadds
pop
ret
pop
movsb
mov
sub
scas
loop
push
inc
ja
cmp
outsl
dec
sbb
in
pop
adc
andl
cmp
push
imul
lock
xchg
test
es
push
mov
std
mov
mov
in
xor
icebp
xor
or
fmull
inc
in
or
adc
icebp
adc
js
sub
hlt
mov
das
js
push
push
mov
mov
stc
sbb
imull
mov
xchg
inc
and
in
bound
das
je
mov
jbe
dec
lds
cmp
inc
cmc
in
call
push
cli
rclb
xchg
push
sbb
repz
sbb
je
insl
pop
roll
sub
aaa
popf
jmp
mov
cs
jecxz
inc
push
mov
mov
pop
je
arpl
inc
or
pop
int3
ja
or
pop
xchg
test
iret
sub
push
pop
xor
jno
or
cmp
ret
adc
imul
pop
lods
sbb
pop
mov
dec
pop
inc
mov
ja
xchg
enter
lods
xchg
bndstx
dec
jecxz
fiadds
arpl
mov
dec
cmp
stos
xchg
and
movsl
jbe
xor
scas
into
push
aaa
pop
lods
ds
sti
push
xchg
xchg
dec
mov
pop
adc
stos
xor
das
stos
mov
jle
aas
or
cltd
pop
push
xor
pop
jmp
push
mov
adc
cmp
or
sbb
and
push
addr16
jne
mov
sub
rcl
mov
push
sbb
cmp
stos
pop
in
mov
xor
flds
dec
scas
outsl
int3
xchg
arpl
imull
or
test
in
mov
cmp
or
adc
push
data16
add
loope
cwtl
push
lea
xlat
and
lock
sbb
xlat
ficoms
sti
fcmovu
mov
stos
ja
fimull
into
and
das
rcl
dec
pmaxsw
pushf
repz
mov
icebp
das
xchg
cld
arpl
sub
leave
daa
movsl
or
enter
cld
mov
mov
fimull
cwtl
cmp
sbb
xor
hlt
jns
xchg
mov
out
xchg
fsubrp
mov
clc
clc
cmc
mov
je
ret
push
imul
arpl
gs
push
xor
js
xor
fidivs
cld
sub
jle
adc
imul
jo
jae
inc
lods
add
cmpsb
sub
les
lret
cmpsl
or
stos
sub
mov
shrb
jmp
mov
les
xor
fnstcw
lret
pop
jmp
jnp
jbe
sbb
lahf
dec
gs
rol
dec
dec
nop
and
lsl
cs
imul
repnz
sub
and
mov
push
add
fwait
adc
int3
xor
jl
insl
dec
fcoms
out
mov
lods
int3
sub
outsb
mov
pop
movsb
fcoml
push
arpl
test
loop
cmpsl
cli
aad
jl
inc
lcall
sbb
les
add
mov
imulb
movsb
and
mov
mov
stc
fldt
fwait
loope
jecxz
leave
and
je
test
sub
or
out
adc
push
sbb
stos
lahf
mov
stc
es
sbb
idivl
adc
in
sub
cmpsb
push
xor
jp
dec
mov
add
loopne
xor
push
mov
int
mov
mov
out
test
mov
fcompl
leave
or
adcl
nop
xchg
in
xchg
pop
data16
out
in
sahf
loopne
mov
or
lods
and
test
testb
push
mov
jns
je
data16
and
scas
xchg
pcmpgtd
fists
outsl
enter
inc
in
negb
mov
sub
rorl
lock
xchg
push
dec
notl
outsl
popf
sub
sahf
imul
add
pop
push
andl
aam
jno
daa
pushf
pushf
imul
imul
stc
jo
outsb
sub
rolb
pushf
and
js
xchg
pop
cli
add
sub
rcrb
jbe
scas
mov
or
and
push
xchg
imul
cltd
cld
mov
call
add
andb
xchg
jg
fsub
cltd
sti
jl
gs
fldenv
push
push
sbb
mov
lods
push
inc
cwtl
xchg
mov
inc
xor
aaa
in
sub
mov
mov
or
clc
popa
cmp
dec
xor
dec
fwait
xchg
or
mov
call
pop
xchg
test
sarb
call
imul
mov
addr16
pushf
fimull
inc
or
test
pushf
and
cli
arpl
add
xor
ret
lcall
aad
sarb
insl
bound
notl
push
cld
push
cmpsl
push
jo
sbbb
lahf
sbb
lock
adc
xor
push
push
enter
cmp
out
ljmp
scas
test
or
cmp
adc
mov
push
int
jnp
scas
rcl
mov
push
cmp
sbb
adc
push
fistl
fnsave
pop
ret
sub
push
cmp
xor
outsl
popf
fs
test
mov
and
in
pop
aam
push
ljmp
stos
xchg
lea
lahf
xor
aad
and
outsb
data16
and
push
push
popf
xlat
lret
add
ret
ret
xchg
mov
adc
fnstcw
or
mov
lret
sub
addr16
push
test
jge
inc
fwait
xchg
out
and
pop
dec
pop
out
lahf
dec
mov
mov
push
and
ror
pop
dec
imul
cltd
and
mov
sbb
add
rolb
out
sub
xchg
fdivr
fcmove
push
ljmp
fistps
arpl
mov
xor
xor
sub
sbb
inc
add
pop
fildl
aaa
bound
ja,pt
mov
jl
addb
sub
shlb
xchg
aam
dec
ljmp
mov
jno
push
test
inc
xchg
sub
add
jne
notb
jb
xchg
push
into
sti
mov
out
xchg
push
das
repz
mov
jmp
adc
jge
int
jnp
xchg
mov
pop
jnp
jbe
in
dec
push
jmp
jmp
cmp
lea
mov
inc
push
ds
mov
lret
ds
pop
imul
mov
add
enter
sbb
negb
daa
dec
pop
stc
out
out
fstl
scas
mov
jb
and
stos
test
xchg
push
inc
cmpsb
daa
pop
inc
cld
cmp
int3
jp
shl
frstors
fmuls
divb
jne
add
bound
xchg
pop
sub
lcall
ficomps
stc
fisttpl
mov
in
or
ljmp
xor
xor
cltd
pusha
in
fdivr
dec
mov
mov
cmp
dec
pop
jnp
jp
lret
lret
iret
cwtl
aad
test
es
and
cmp
inc
ljmp
cmp
test
mov
sub
jg
push
jno
mov
movsb
sub
lds
push
inc
stos
dec
xchg
dec
ds
xor
inc
push
shll
sub
ror
push
idiv
xchg
mov
idiv
mov
rcrb
leave
jecxz
mov
jle
aam
sbb
mov
rclb
cmpl
rol
stos
movsb
lahf
jecxz
nop
cli
int
jnp
in
jg
aam
fcoms
and
popf
push
rcr
cmpsb
iret
mov
dec
push
ljmp
int
mov
fs
mov
ret
dec
lods
enter
push
rol
push
pop
andb
mov
dec
mull
add
enter
lcall
sbb
popf
xchg
gs
lret
loope
fs
ret
mov
inc
sahf
mov
js
xor
arpl
jl
adc
dec
lahf
fwait
pop
mov
cmp
movsl
pop
in
out
out
adc
lods
in
jo
pushf
icebp
pop
mov
aas
mov
mov
xor
cmp
out
aad
inc
data16
add
insb
push
int3
mov
dec
clc
and
xlat
sbb
and
daa
out
fidivrl
sahf
adc
into
daa
int3
imul
adcb
mulb
push
mov
fidivrs
push
clc
push
ss
inc
rclb
loop
inc
lret
pop
out
aaa
adc
mov
fmulp
js
add
or
mov
fs
mov
incb
pop
xchg
lahf
cmp
aas
daa
fcoml
aas
lods
mov
cmp
push
icebp
mov
xchg
les
addr16
ret
enter
lods
inc
fistps
push
add
addr16
outsb
out
scas
outsb
gs
aad
push
jo
out
cmp
inc
jbe
jge
fcmovb
leave
or
jnp
jbe
mov
pop
pop
jbe
enter
fbstp
add
movsb
mov
pop
xorb
pop
ret
shl
test
sbb
or
sbb
inc
cwtl
xchg
mov
mov
scas
sbb
repnz
ret
push
stos
addr16
es
or
popa
pop
dec
cmp
test
or
mov
xchg
jno
jmp
cmp
dec
pop
cmpsb
out
mov
mov
popf
sbb
sbb
jnp
mov
sar
mov
inc
test
bound
mov
subl
pop
movsl
mov
lods
int
dec
mov
mov
lret
out
xlat
incl
mov
fidivrl
pusha
shl
fs
scas
push
out
push
mov
cwtl
iret
jne
mov
sti
repnz
aad
jmp
and
mov
ret
dec
int
pusha
fisubrl
in
pushf
insl
insb
push
mov
mov
rorb
fistpl
clc
pop
and
xchg
stc
inc
out
fwait
jl
pop
xchg
push
mov
adc
pop
mov
mov
xchg
and
movsb
xchg
fdivrs
fs
mov
mov
cmp
mov
pop
pop
pop
pop
fcomip
aad
jo
mov
in
add
adc
inc
shrl
mov
mov
jno
inc
cmp
mov
ret
xor
nop
mov
sub
adc
dec
adc
jmp
into
popf
sbb
lea
add
int
fwait
loopne
or
lods
jne
pusha
adc
movsb
xor
jp
and
inc
inc
mov
int3
out
sbb
icebp
push
arpl
ds
xor
mov
rol
jo
mov
mov
es
push
jae
pop
pinsrw
pop
cwtl
add
push
dec
jno
sti
pop
fnstcw
test
inc
xor
sub
sub
loopne
fwait
push
xchg
add
fs
std
dec
jnp
and
xchg
subl
and
pop
jo
test
clts
jne
sbb
or
std
icebp
ret
jo
rcl
and
shll
pushf
dec
and
pop
push
in
xchg
lods
iretw
dec
and
int3
flds
sub
sub
aam
push
movsl
xor
std
sub
test
and
push
cltd
xchg
aad
or
aam
dec
and
or
mov
out
fs
aad
lret
pop
dec
or
xorb
dec
mov
xchg
xor
lods
pop
jo
lods
cmp
xor
add
add
jg
rorl
xlat
xchg
jle
push
and
adc
rep
not
or
push
add
mov
cli
daa
mov
jae
cmp
arpl
adc
dec
sub
push
xor
in
in
out
push
rclb
jo
divl
lea
sub
or
rsm
dec
iret
fstpt
jnp
pushf
loopne
ds
push
jecxz
adc
mov
je
sub
dec
lods
or
addl
sbb
xor
mov
and
repz
js
cwtl
movsl
sbb
and
je
shl
mov
mov
xchg
cmp
inc
jae
mov
dec
pushf
adc
icebp
add
ret
pop
jno
pop
int3
idiv
jno
xor
dec
cmpb
sahf
lea
stc
daa
push
push
enter
in
imul
sub
push
xor
movsl
jg
test
xor
push
hlt
clc
stos
imul
dec
fimull
xchg
add
pop
and
gs
iret
push
xchg
xchg
adc
fdivrl
jno
leave
pop
mov
das
mov
or
sub
aas
xchg
pop
cwtl
dec
sahf
jg
add
or
pop
jae
ja
mov
push
xchg
and
enter
add
clc
inc
and
push
adc
push
mov
dec
loope
adc
mov
mov
hlt
adcl
leave
pop
mov
and
pop
or
stos
fcmovbe
ficomps
mov
andl
movsb
movsb
mov
or
cmp
jns
or
jp
test
fcompl
popa
dec
movsb
xchg
inc
push
ret
inc
push
or
pop
pop
sub
test
ret
xchg
mov
adc
cmp
and
pop
xor
xchg
jp
jns
adc
push
dec
dec
push
adc
sub
lret
outsl
mov
imul
xor
xchg
loopne
jno
inc
out
sbb
pop
xor
and
push
aad
out
push
xchg
adc
in
push
xchg
inc
fimull
or
lahf
pop
call
clc
mov
mov
push
lods
invd
pop
shrl
push
pusha
lcall
test
sub
loope
or
ljmp
inc
or
mov
add
add
bound
ret
ljmp
psrlw
testb
out
jle
sub
idivl
orl
in
cli
scas
jnp
mov
jnp
xor
inc
es
xorb
cmp
push
xchg
int
pop
sbb
ret
arpl
sub
popa
cmp
dec
ret
fwait
mov
or
scas
dec
xchg
outsl
push
lea
addr16
mov
cmpsb
mov
or
xorb
shll
loope
cmp
mov
mov
jp
jb
lcall
out
test
cli
out
out
push
mov
mov
rorl
pop
loop
shll
jae
push
stc
cld
mov
or
adc
jae
push
out
cmpsl
bound
add
repz
mov
adc
lret
adc
and
xchg
jle
arpl
cli
shlb
dec
mov
pop
cmp
jnp
shll
jg
mov
jae
and
adc
jns
add
lret
stc
mov
mov
scas
mov
xchg
dec
sub
pop
sub
insb
or
lds
mov
dec
and
pop
bound
mov
and
or
add
jle
fldcw
repz
test
shll
mov
lock
int3
int
es
cwtl
mov
sub
and
loopne
xor
xchg
mov
fnclex
insb
jmp
ljmp
fstl
je
inc
lret
bound
cld
cmp
dec
sbb
push
loope
aas
cmp
inc
push
lods
mov
or
cmpsb
xchg
cmp
into
popa
fcmovne
div
cmc
dec
cmp
popa
and
cli
dec
dec
aad
js
pusha
adc
hlt
sub
lock
jno
dec
pop
or
and
and
sti
daa
xchg
sub
jne
in
sbb
loopne
addb
int
xchg
or
fwait
push
pop
stos
in
and
popf
out
jecxz
test
int3
pop
jmp
je
xor
sub
or
xor
in
scas
pop
xchg
add
mov
aaa
cmpsb
cmp
fldl
sub
mov
push
int3
and
dec
mov
mov
xor
cltd
sub
xor
pop
fcoms
mov
sub
das
dec
mov
cmp
test
cmp
xorb
fidivrl
outsl
arpl
loop
add
cli
repnz
rorb
daa
repz
and
lods
les
sahf
push
lock
or
add
out
jae
stos
mov
cmp
jnp
inc
mov
stos
mov
fistps
loopne
jge
hlt
repnz
das
pushf
aam
sti
sub
test
pop
inc
cmp
inc
icebp
pushf
out
movsl
ja
jno
or
or
loope
pop
in
add
shrl
jbe
pop
adc
out
pushw
mov
mov
fistpl
out
leave
sti
mov
lar
insl
push
movsb
dec
push
push
xor
pop
into
jo
jl
lods
cmpsb
cmp
inc
sbbl
rorb
pop
inc
adc
ss
jecxz
mov
push
push
mov
stos
jae
jnp
xor
pop
dec
add
xchg
loop
out
stc
push
ficompl
pushf
cli
cs
push
daa
jmp
jmp
mov
or
pop
cmp
mov
sub
or
jle
ret
das
xchg
sbb
push
ds
pop
mov
dec
ljmp
out
and
es
xor
and
xlat
loop
and
rcr
movsl
leave
rorb
dec
push
or
pop
rolb
inc
imul
jb
adc
push
imul
ficoms
jno
jnp
test
add
pop
or
psubb
cmp
cwtl
sahf
pop
das
and
dec
sbb
pop
shlb
rclb
scas
test
dec
ret
push
xchg
clc
rcrl
adc
mov
jl
xor
jnp
popw
and
adc
jl
dec
sbb
popa
mov
icebp
pusha
cltd
mov
mov
loope
cmpsl
or
stc
scas
int
and
xchg
jb
addr16
sbb
xor
push
lcall
lea
mov
test
push
aas
sahf
or
fucomi
fwait
cmp
pop
cmpsb
dec
out
xor
pop
xor
cmp
and
mov
pop
pop
negb
roll
cmp
jbe
inc
dec
call
loop
std
lea
movb
inc
repnz
pushl
movsl
gs
mov
ja
xor
scas
and
in
inc
sub
dec
insb
clc
and
mov
add
in
pop
or
movsb
adc
mov
rcll
cwtl
pcmpeqb
xor
sbb
and
enter
jmp
jge
es
cmc
cmpsb
sub
mov
sahf
sarl
mov
mov
inc
xor
jecxz
jp
int
jl
movl
mov
mov
mov
test
ss
jbe
cmp
gs
jmp
loopne
lret
pop
push
sbb
adc
jle
sub
flds
subb
mov
nop
jb
ljmp
xchg
mov
push
mov
sti
jb
mov
insl
adc
sub
mov
push
mov
aas
aas
jo
sub
push
lret
mov
loopne
cmp
in
jl
fidivrl
sbb
test
in
cwtl
lods
xchg
test
push
pop
xor
icebp
cmp
out
mov
adc
add
daa
imull
jp
lds
cwtl
jnp
imul
xlat
addr16
out
shl
mov
cmpsb
mov
iret
mov
lret
push
cmp
inc
imul
push
pushf
and
dec
push
or
adc
jno
stos
imul
xchg
xchg
pop
lock
mov
sbbb
jg
test
pop
scas
scas
gs
sub
mov
lcall
fidivl
loope
inc
test
mov
pushf
std
jne
into
imul
cli
xchg
dec
lods
xor
and
lahf
sub
and
adc
mov
out
test
imul
loope
dec
or
dec
inc
lds
sbb
int3
call
mov
pushf
loope
cmp
push
xchg
mov
or
outsb
or
jbe
cld
out
daa
es
nop
pop
ds
ljmp
pop
int3
dec
jnp
lods
idivb
inc
mov
lcall
pushf
notl
test
and
add
lods
push
dec
jmp
jne
shll
inc
aam
je
inc
fmuls
add
insb
jb
fwait
lret
movsl
pop
pop
lret
and
or
inc
stos
jecxz
pop
mov
inc
and
add
adc
cmpl
dec
mov
push
popa
adc
sti
lods
bound
cmp
or
push
pop
mov
adc
cmpxchg
mov
mov
iret
inc
mov
icebp
mov
movsl
mov
repz
aaa
push
cmpsb
adc
stos
pop
insl
add
test
jecxz
call
pop
fwait
addb
cmc
inc
paddq
dec
cmp
test
cmp
pushf
das
aaa
mov
sub
rcrl
adc
cld
sbb
pop
divb
stc
jnp
mov
inc
aam
cs
outsb
into
in
les
adc
rcll
pop
int3
xchg
and
xor
xchg
or
push
arpl
inc
sub
jae
mov
cmp
sbb
mov
push
push
fwait
dec
mov
popf
cmpsb
dec
andl
ret
or
xor
push
inc
sbb
add
call
movsl
push
pop
mov
pop
jle
inc
int
in
test
mov
mov
popf
dec
mov
clc
pop
ficompl
dec
gs
neg
pop
outsb
pop
dec
inc
push
icebp
cwtl
clc
jmp
mov
mov
test
andb
loope
mov
xchg
sub
dec
cli
pop
add
mov
loope
imul
clc
out
jmp
inc
push
or
jmp
loope
mov
or
dec
les
jns
and
out
xor
shll
sbb
jno
sbb
pop
push
cmpl
cmpb
in
daa
movsb
jnp
mov
ret
mov
sub
push
mov
mov
xchg
test
jae
pop
mov
je
in
orl
inc
clc
push
push
mov
jbe,pn
mov
jecxz
sbb
test
jge
or
mov
jno
cli
cmp
test
cltd
xchg
fcmove
inc
push
out
in
aas
mov
mov
or
sbb
in
inc
rol
xchg
imul
push
jb
sbb
cs
cmp
jmp
xor
inc
cmp
and
xor
mov
lret
lods
mov
mov
push
out
mov
xor
push
mull
adc
insb
cli
mov
inc
lret
mov
das
sub
sbb
cltd
cmp
mov
mov
ret
mov
ja
adc
sahf
inc
cmpsl
data16
rcrl
push
mov
and
mov
pop
mov
xor
scas
leave
and
cmpb
jb
xor
push
push
out
and
add
test
mov
lahf
sub
in
imull
testb
sahf
xchg
aad
lcall
test
pop
outsb
lret
fisubl
bound
xchg
push
xchg
cwtl
dec
int3
or
jmp
mov
rol
hlt
pop
mov
push
sbb
jmp
popa
mov
adc
and
pop
leave
fimull
add
scas
or
sub
flds
push
rcrl
xor
je
std
mov
cld
pop
loopne
scas
mov
int
nop
cmp
xchg
insl
sbb
loop
mov
sbb
jmp
lods
mov
mov
out
xchg
rol
mov
sti
gs
jne
insb
aad
icebp
adc
ds
pushf
pop
dec
shrl
cs
sahf
lcall
cmpsl
inc
push
jp
ss
mov
and
sbb
test
pop
push
enter
ds
sbb
mov
jbe
gs
aam
movsl
pop
fs
data16
adc
xchg
push
or
sub
mov
sub
out
hlt
js
inc
call
cmp
sbb
pop
rcl
jbe
jmp
xlat
andb
cmp
fidivs
jne
jne
jne
jbe
nop
icebp
lahf
ja
and
inc
outsl
add
insl
mov
or
fidivs
mulb
push
arpl
jl
mov
enter
pop
adcl
test
ja
adc
shll
mov
adc
mov
sub
push
xchg
pop
jns
cmpb
loope
mov
cmpsb
and
es
pop
shrb
pusha
xor
loopne
mov
or
or
sbb
jb
pop
mov
std
test
jns
mov
jo
adc
pop
cmpsb
or
fldt
jno
add
xor
testb
pop
mov
dec
jl
cli
test
xchg
or
sbb
rorb
ja
cmp
adc
mov
sti
sub
inc
sub
cmp
and
subl
shlb
xor
and
mov
sbb
lahf
shll
add
adc
jecxz
les
scas
in
repnz
adc
xchg
outsb
movsl
pop
mov
cmp
stos
movsl
popa
and
fucomip
or
aaa
lock
lea
test
gs
pop
and
into
adc
mov
lods
shll
push
mov
test
inc
out
adc
lahf
negl
mov
mov
jl
mov
push
insl
in
inc
sbb
xor
lret
sbb
nop
jnp
sub
dec
sti
cmp
inc
jl
ja
arpl
daa
mov
int
adc
mov
repnz
outsl
jecxz
sbb
lods
sbb
stc
aas
fsubr
or
pop
incb
push
jle
call
mov
push
cmp
sbb
jns
int
dec
out
and
gs
enter
mov
iret
sbbl
out
nop
and
lds
scas
shll
mov
out
adc
aaa
cmp
popa
arpl
push
stc
arpl
das
sbb
hlt
xorl
mov
aam
push
test
cmp
xor
add
push
sti
jnp
push
aad
addl
out
arpl
imul
stos
rcrl
ss
adc
mov
dec
scas
push
push
out
arpl
loopne
pop
mov
fldcw
jo
popf
std
sub
or
dec
pop
dec
ja
je
adcl
in
adc
cmp
cld
nop
mov
enter
loopne
jp
and
add
repz
ds
mov
mov
stos
loop
pop
xor
aam
ja
xor
fstl
and
or
sub
jo
sub
mov
cmp
and
imul
fiadds
and
xchg
lahf
int
mov
and
adc
pop
and
mov
jmpw
push
push
push
movsl
sbb
cmp
fists
cwtl
mov
into
jns
xlat
mov
xor
lods
inc
jmp
add
or
xchg
xor
test
int3
jb
dec
mov
mov
lds
pop
pushf
jl
mov
fnstcw
pop
push
lock
sub
jae
or
adc
inc
sbb
cmp
lods
mov
jne
gs
jnp
out
or
aas
inc
jp
jae
pusha
popf
xor
push
out
dec
lret
stos
lcall
xchg
jne
es
sub
jecxz
pop
dec
adc
shll
bound
hlt
out
jle
js
icebp
pop
pop
adc
out
pop
outsl
int3
xchg
loope
inc
clc
pushl
jmp
mov
add
mov
mov
mov
movsbw
mov
sub
mov
xor
mov
cmp
jne
mov
mov
mov
jmp
mov
cmp
jne
push
pushl
pushl
pushl
pushl
call
pop
pop
leave
ret
push
mov
push
movl
mov
mov
sbb
mov
movl
mov
sbbl
xor
addl
add
movl
mov
sbb
mov
xor
inc
push
xor
mov
mov
add
addl
mov
mov
mov
sbb
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
pop
leave
ret
push
mov
sub
mov
push
neg
push
adc
push
or
mov
or
xor
mov
add
subl
mov
mov
mov
and
mov
movl
cmpl
je
cmpl
jne
push
pushl
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
add
mov
mov
mov
adc
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
cmpl
jne
xor
xor
inc
mov
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
push
push
push
push
call
cmpl
jne
mov
inc
mov
jmp
movl
cmpl
je
cmpl
jne
push
push
call
mov
dec
mov
jmp
mov
movl
mov
xor
add
sbbl
mov
mov
mov
or
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
call
cmpl
jne
xor
add
inc
mov
cmpl
jb
mov
mov
decl
push
and
pop
sbbl
sub
xorl
add
movl
adc
mov
movl
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
mov
sbbl
mov
dec
mov
mov
addl
mov
xorl
xor
add
mov
lea
orl
mov
mov
xorl
xor
xorl
add
andl
mov
andl
lea
adcl
push
movzwl
add
mov
xor
addl
add
subl
push
mov
adcl
push
andl
pushl
addl
call
or
mov
and
mov
subl
mov
sbb
mov
xor
addl
mov
add
jmp
sub
lea
mov
mov
mov
add
sub
movl
cmpl
je
cmpl
jne
push
push
push
call
mov
dec
mov
jmp
mov
mov
and
mov
not
mov
movl
cmpl
je
cmpl
jne
push
pushl
call
cmpl
jne
mov
dec
mov
xor
or
dec
mov
jmp
movl
cmpl
je
cmpl
jne
push
push
pushl
push
push
pushl
push
pushl
call
xor
add
dec
mov
jmp
movl
mov
movl
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
ja
mov
mov
mov
sub
xor
xor
add
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
mov
mov
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
xor
add
mov
mov
mov
mov
mov
xor
xor
lea
mov
xor
div
mov
xor
add
cmp
mov
mov
jne
xor
add
imul
mov
movzbl
mov
jmp
xor
add
imul
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
sub
sub
xor
xor
cmp
jne
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
jmp
mov
mov
xor
lea
lea
xor
cmp
jne
mov
mov
mov
xor
mov
xor
mov
xor
mov
mov
xor
mov
mov
xor
add
pop
pop
pop
leave
ret
push
mov
movl
pop
jmp
push
mov
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
call
cmpl
jne
mov
inc
mov
jmp
or
push
movzbl
and
movl
movl
movl
cmpl
je
cmpl
jne
pushl
pushl
call
mov
dec
mov
jmp
mov
andl
push
adcl
mov
mov
xor
mov
and
xor
mov
mov
sbb
mov
add
add
imul
mov
cmp
jne
mov
mov
xor
xor
add
add
imul
jmp
mov
mov
mov
mov
mov
xor
xor
add
add
imul
mov
cmp
mov
je
xor
add
mov
imul
add
mov
mov
pop
leave
ret
push
mov
sub
push
push
push
movl
movl
dec
mov
mov
adcl
push
call
adcl
push
push
sbbl
push
movl
push
andl
push
push
orl
call
orl
push
andl
call
push
call
movzbl
mov
cmp
movl
jne
subl
xor
inc
xor
inc
movl
movl
movl
cmp
movl
jne
movl
cmp
movl
jne
orl
pushl
andl
pushl
addl
pushl
call
mov
mov
mov
mov
movl
inc
movl
cmp
jne
movl
inc
cmp
movl
jne
mov
andl
mov
inc
mov
cmpl
jne
push
push
pushl
push
push
push
pushl
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
adc
mov
movl
add
lea
xor
xor
add
mov
mov
lea
or
mov
mov
adc
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
push
call
jmp
mov
xor
or
adc
mov
mov
mov
or
mov
xor
movzbl
adc
mov
mov
addl
add
movl
mov
mov
mov
cmp
movl
jne
or
mov
decl
mov
adc
mov
add
xor
sbb
add
mov
andl
xor
add
inc
mov
cmpl
jne
push
push
call
cmpl
jb
mov
and
xor
xor
add
mov
sub
mov
adcl
mov
andl
mov
inc
mov
cmpl
jne
push
push
pushl
push
push
push
call
cmpl
jb
xor
xor
sbb
mov
mov
andl
xor
xor
inc
mov
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
or
mov
mov
sub
mov
and
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
sub
mov
orl
mov
sub
mov
add
movl
mov
movzwl
add
mov
adc
mov
xor
andl
xor
add
movzbl
and
mov
xor
xorl
xor
sbbl
add
lea
mov
mov
mov
movl
cmp
ja
movl
cmpl
je
cmpl
jne
push
call
cmpl
jne
xor
xor
dec
mov
xor
add
dec
mov
jmp
mov
xor
lea
orl
mov
mov
xor
adc
lea
addl
mov
andl
mov
inc
mov
cmpl
jne
push
push
push
call
cmpl
jb
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
cmpl
jne
xor
or
inc
mov
jmp
adc
movl
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jne
push
push
push
push
pushl
push
pushl
push
call
cmpl
jne
xor
xor
inc
mov
jmp
mov
andl
movl
sub
mov
or
mov
xor
add
cmp
je
mov
mov
xor
xor
add
add
adc
xor
xor
mov
mov
xor
mov
add
adc
xor
xor
mov
mov
cmp
jne
mov
cmp
je
mov
mov
xor
add
imul
xor
add
mov
mov
mov
mov
mov
mov
xor
lea
mov
xor
add
adc
xor
mov
xor
mov
mov
xor
mov
add
adc
xor
xor
mov
mov
cmp
jne
mov
cmp
jne
mov
mov
xor
lea
mov
mov
xor
xor
add
mov
xor
lea
mov
cmp
jbe
mov
mov
mov
mov
mov
mov
mov
sub
xor
mov
mov
cmp
jne
lea
mov
lea
mov
mov
test
je
mov
mov
lea
jmp
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
pushl
mov
pushl
add
mov
mov
pushl
call
mov
mov
mov
jmp
mov
mov
xor
add
cmp
jne
mov
mov
mov
xor
add
cmp
jne
mov
push
xor
add
push
push
pushl
pushl
call
pushl
pushl
call
mov
xor
add
mov
mov
xor
add
mov
lea
mov
lea
mov
mov
test
je
movl
movl
movl
movl
call
mov
mov
lea
push
pushl
call
mov
add
mov
lea
movl
mov
movl
mov
xor
movl
mov
add
cmp
je
mov
mov
xor
xor
add
add
adc
xor
xor
mov
mov
xor
mov
add
adc
xor
xor
mov
cmp
jne
cmp
je
mov
mov
xor
xor
add
add
imul
mov
mov
mov
mov
mov
mov
mov
xor
lea
xor
add
adc
xor
mov
xor
xor
mov
add
adc
xor
xor
mov
cmp
jne
cmp
jne
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
call
jmp
inc
mov
subl
xor
movl
cmpl
je
cmpl
jne
pushl
push
call
mov
dec
mov
jmp
subl
mov
xorl
add
movl
cmpl
je
cmpl
jne
push
push
pushl
push
pushl
push
push
push
call
xor
add
dec
mov
jmp
mov
mov
and
movzwl
xorl
mov
andl
movb
xor
lea
subl
mov
add
mov
and
mov
xor
andl
sub
adcl
mov
add
movl
movl
cmpl
je
cmpl
jne
push
push
pushl
call
xor
add
dec
mov
jmp
sbb
push
sbb
movl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
jmp
mov
push
movzbl
sub
mov
mov
mov
adc
mov
xor
neg
mov
push
add
movl
jmp
movl
mov
movl
mov
inc
movl
cmp
movl
jb
and
mov
sbbl
xor
add
jmp
movl
cmpl
je
cmpl
jne
pushl
pushl
push
pushl
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
orl
mov
movl
cmpl
je
cmpl
jne
push
push
call
mov
dec
mov
jmp
adcl
mov
addl
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
jmp
movzwl
sub
mov
add
movzwl
mov
mov
subl
movzwl
addl
xor
subl
add
mov
movl
mov
movzbl
inc
mov
cmp
movl
jne
and
mov
mov
addl
xor
add
subl
mov
subl
mov
xor
subl
add
mov
mov
movl
movl
movl
movzwl
mov
mov
movl
jmp
xor
mov
mov
add
mov
xor
xor
sub
sub
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jne
pushl
push
push
call
jmp
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jb
and
xor
adcl
mov
andl
xor
xor
inc
mov
cmpl
jne
pushl
push
push
push
pushl
push
push
pushl
call
cmpl
jne
xor
add
inc
mov
cmpl
jb
and
mov
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jne
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
lea
mov
mov
mov
lea
mov
mov
mov
lea
mov
mov
mov
lea
mov
mov
mov
lea
mov
mov
mov
lea
mov
mov
xor
add
jne
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
imul
xor
add
lea
mov
add
mov
mov
xor
add
jne
mov
mov
mov
cmp
je
mov
mov
mov
cmp
jne
mov
mov
movsbl
xor
add
cmp
mov
mov
mov
je
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
xor
imul
add
lea
mov
add
mov
mov
xor
add
jne
mov
mov
xor
xor
add
add
cmp
jae
lea
mov
mov
movl
lea
mov
mov
addl
mov
xor
add
lea
mov
xor
mov
mov
xor
inc
incl
add
cmp
jb
jmp
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
imul
xor
add
lea
mov
add
mov
mov
jmp
mov
enter
imul
ret
int3
mov
cmp
bound
daa
aas
test
jo
sti
mov
xchg
add
add
dec
mov
lea
ret
sub
rcl
and
or
mov
mov
add
mov
es
mov
mov
test
jl
in
mov
dec
clc
dec
pusha
lods
sub
cmc
push
out
xchg
dec
mov
les
xchg
adc
stc
sub
add
negb
inc
jle
andl
push
dec
xor
inc
js
mov
cmpsb
aas
mov
pop
aas
push
xor
adc
mov
mov
sbb
lock
and
jmp
sbbl
outsb
test
xchg
insb
adc
imull
cwtl
xchg
adc
mov
add
call
xchg
xchg
push
jbe
xor
insl
xor
or
lods
mov
movsl
or
lret
movsb
aas
xchg
loop
mov
ret
outsl
mov
in
in
adc
inc
stos
pop
aam
rolb
and
pop
cmpsl
sbb
mov
xchg
push
cmp
data16
test
and
cmp
pop
cld
jo
mov
mov
add
sbb
pushf
das
loope
ss
cmpsl
jno
mov
mov
inc
pop
mov
hlt
lock
sbbl
test
inc
jb
mov
sti
adc
inc
pop
inc
cmp
jns
mov
push
xorl
inc
adc
or
inc
in
ss
cmp
and
and
lret
add
mov
rcr
out
pushf
mov
push
lret
pop
mov
repnz
lret
inc
jne
lods
jae
xor
push
lods
lea
fcmovnu
jb
pushf
adc
cmp
push
add
inc
shl
add
pop
cwtl
fs
stos
in
addr16
mov
es
cmpsl
or
pusha
jp
fisttps
inc
add
sbb
mov
jae
stc
pop
stos
dec
or
and
mov
pushf
ds
mov
es
cltd
shlb
pop
ss
aaa
leave
jge
jp
outsb
adc
insl
lock
xchg
cld
jnp
imul
pop
xchg
sub
jmp
cmpl
jae
xor
stc
jl
sbb
stos
in
cmp
bound
arpl
mull
cltd
sub
arpl
cmpsl
cmc
sarb
inc
and
lods
mov
sub
sbb
sub
ror
and
add
das
and
shl
js
pop
inc
ds
jb
lcall
cwtl
daa
xor
pop
notb
cmp
and
fwait
gs
add
push
leave
dec
jns
dec
jbe
mov
outsl
and
repz
add
pop
mov
addr16
fidivrs
push
cld
cmc
xor
lret
cmpsb
outsb
mov
into
or
insb
in
fsubl
rcll
push
or
xchg
xchg
roll
pop
imul
push
lods
mov
mov
mov
call
or
fwait
pop
div
and
ljmp
jae
mov
mov
xor
adc
outsl
cltd
push
mov
push
dec
call
mov
mov
sbb
pop
lret
push
adc
in
test
jo
xchg
inc
aaa
jp
mov
test
nop
mov
lods
pop
xor
push
push
stc
rcl
add
movsl
sahf
inc
cwtl
inc
jns
outsl
mov
cld
mov
shll
inc
into
jle
mulb
cmp
mov
push
or
fidivs
fwait
jg
insl
xchg
shrd
pushf
pop
ja
sahf
in
xchg
sub
jae
jbe
sub
mov
cmpl
out
push
inc
clc
push
stc
mov
stc
xchg
aas
cmp
pushf
xchg
sub
mov
fldl
repz
enter
mov
out
push
mov
repnz
movsb
aad
sahf
adc
inc
sub
sbb
inc
cmp
mov
pop
mov
and
mov
adcl
adc
cmp
xchg
sbb
xchg
mov
test
add
aam
aam
arpl
inc
ja
mov
lea
or
mov
xchg
and
cld
lea
cltd
in
inc
inc
jl
cltd
add
aam
in
addr16
shl
push
js
mov
in
sub
mov
or
nop
fwait
enter
insb
addr16
add
jl
jmp
movsb
fwait
pushf
or
xor
insb
xchg
dec
cmpxchg
jnp
xor
imul
ret
rorl
addr16
dec
popa
notl
lock
ja
push
sbb
xchg
mov
pop
jne
cmp
mov
bound
out
pop
notb
add
push
sarl
cmp
test
inc
test
add
xlat
jbe
mov
shlb
dec
and
xchg
daa
les
sub
mov
mov
int3
lcall
sbb
sarl
fcomp
fistpll
fwait
lret
push
ss
movsb
pop
mov
dec
out
arpl
mov
mov
add
cmpsb
fs
imul
adc
xchg
dec
repnz
or
sbb
sbb
add
sub
mov
pop
mull
fbstp
sbb
cmp
std
inc
cmp
push
pop
in
jg
out
stos
mov
sub
cmpl
shr
and
pop
dec
repnz
in
ss
xor
hlt
push
rcrb
notl
xchg
xor
test
imul
inc
and
push
inc
aad
out
in
out
sub
push
enter
idivb
movsl
cmp
dec
fdivrl
adc
dec
aas
cmp
push
and
push
and
lds
push
jle
popf
jne
or
xor
lahf
inc
outsl
and
and
mov
mov
push
mov
insb
jnp
inc
sbb
push
pushf
scas
popa
cmp
add
scas
mov
shr
pop
pop
mov
and
sub
sbb
pushf
and
stos
jo
imul
adc
bound
std
or
ljmp
jb
scas
add
adc
pop
les
test
lret
sbb
hlt
jmp
sbb
xchg
aaa
je
repnz
addl
inc
and
stos
ret
lock
das
dec
int
movsl
stos
dec
clc
mov
lds
pop
xchg
jge
idiv
stc
daa
sbb
xchg
cmp
pop
pop
jecxz
jmp
cli
dec
and
jno
and
mov
cmp
int3
pop
mov
outsb
mov
sub
dec
inc
in
in
sti
sub
and
ja
push
pop
cld
sbb
mov
ss
sbb
mov
push
push
int3
inc
sbb
pop
fisubrl
jo
jno
rclb
or
psrlq
push
sbb
cmp
ss
aaa
lods
out
adc
mov
rcrl
sub
push
popa
sbb
fldl
js
and
lret
test
xchg
cmpsl
mov
jae
mov
or
insb
push
pushf
and
inc
mov
iret
out
mov
nop
xchg
shlb
lcall
add
inc
fnstenv
sub
push
add
loopne
and
ja
jbe
jmp
inc
xorl
dec
cld
bound
mov
jae
dec
jge
out
fidivs
sti
sbb
arpl
cmp
out
mov
outsb
dec
test
leave
adc
push
sbb
aaa
stos
or
bound
cs
or
imul
outsb
jp
push
mov
sbb
add
lret
xchg
adc
push
jmp
jns
jbe
stc
xchg
jg
mov
cwtl
cltd
jo
sub
or
clc
jg
add
xchg
imul
aaa
mov
mov
movsb
inc
pop
xor
add
xchg
jl
in
into
adc
jno
in
inc
push
in
sbb
and
cmp
cmpb
out
inc
xchg
xchg
xor
sbb
or
sbb
ret
mov
dec
pop
sbb
in
xchg
sbb
aad
fcompl
cmc
or
sub
in
lcall
fisttpll
je
int
pop
dec
out
pushl
xchg
mov
in
lods
cmp
inc
shlb
and
loopne
loop
jmp
or
pop
mov
movsl
je
loope
jnp
or
out
xchg
lcall
mov
xor
fucomi
je
or
ret
mov
pop
inc
imul
cmc
nop
ja
idivl
mov
iret
or
xor
and
inc
int3
pop
jbe
xchg
fs
iret
xchg
pop
daa
cmc
gs
nop
or
inc
jnp,pt
repz
mov
idivb
pushl
repz
pusha
movsb
dec
es
mov
cmp
push
mov
dec
lods
mov
dec
stos
add
inc
inc
xchg
scas
jecxz
fisttps
dec
jecxz
xchg
push
aam
inc
and
xor
xor
loope
mov
das
mov
push
jmp
mov
sbb
push
pop
mov
mov
fs
out
cmpsl
mov
push
jae
sbb
dec
push
gs
adc
sti
inc
faddp
ss
cmpsl
xchg
dec
push
shlb
mov
mov
mov
jecxz
push
xor
jl
pop
fidivl
sarl
insl
dec
aas
lods
test
adc
xorb
ljmp
popa
mov
orl
outsl
jns
mov
push
mov
mov
outsl
inc
ja
sub
mov
jle
loopne
je
scas
push
inc
add
es
inc
ret
les
sarl
rclb
ds
mov
movsb
test
pusha
mov
or
mov
and
dec
out
cmp
into
mov
sub
adc
sub
rorb
mov
shlb
fmuls
mov
or
or
call
mov
xor
adc
cmc
cmpsl
mov
incl
mov
cli
inc
pop
ret
add
ficoms
or
fcomi
leave
popa
sbb
xorl
std
inc
sbb
dec
sbb
in
adc
ret
jle
push
push
mov
mov
inc
mov
mov
sbb
shll
iret
out
or
adc
int3
inc
inc
gs
int3
xor
andb
inc
incb
xor
dec
idivb
inc
dec
mov
je
aad
add
neg
xchg
push
sbb
add
cwtl
mov
out
iret
repnz
out
push
xor
adc
les
jo
adc
dec
out
add
decb
and
outsl
cmp
pop
xorb
outsb
aam
sbb
enter
cmp
dec
cwtl
or
in
mov
add
mov
sbb
nop
cmc
pop
shr
sub
adc
push
mov
mov
hlt
insl
jnp
and
aas
rorb
scas
sbb
test
sahf
int3
xor
mov
or
enter
int
daa
inc
mov
je
sahf
mov
out
xchg
pop
push
imul
ljmp
ja
mov
into
data16
cwtl
cmp
jbe
lods
insb
fs
cmp
into
cmp
test
push
and
cmpsl
jmp
into
movl
jnp
lods
les
leave
cmc
mov
mov
leave
aam
mov
mov
jg
int3
shlb
repz
adc
cmp
addl
jno
sti
xlat
icebp
clc
leave
mov
bound
decl
mov
push
fwait
cli
ljmp
pop
idiv
mov
ja
int
adc
cmp
mov
dec
push
outsb
fsubs
aaa
cmp
mov
xor
fcomps
lret
out
gs
push
ficomps
pop
popa
rol
pushw
mov
sahf
add
xchg
xor
mov
jno
orl
push
cli
daa
cmpsb
das
mov
out
imul
mull
or
dec
orl
cmp
gs
sbb
cmp
push
test
jge
xor
fidivrl
cmp
sbb
lcall
popa
mov
fcmovb
loopne
cmp
sub
add
mov
cli
jnp,pn
xchg
mov
jb
jmp
sbb
mov
scas
test
scas
xchg
divb
mov
loopne
faddl
push
out
add
sub
out
mov
pop
imul
pop
push
ds
and
loope
pop
or
and
jno
mov
iret
xchg
mov
push
mov
ret
setae
pop
and
idivb
sub
add
fcmovb
sub
xchg
inc
mov
dec
gs
les
jg
add
hlt
add
mov
mov
or
rcrl
insl
fldt
popa
mov
and
and
repnz
cltd
adc
dec
cld
jno
loope
add
cmp
pusha
jmp
adc
push
or
repz
mov
inc
fadds
mov
push
out
sub
xchg
movsb
sti
jle
pushf
test
inc
in
rcrl
scas
cmpsl
cltd
lahf
xor
pop
movsl
iret
push
push
lahf
movsl
sti
or
ds
xchg
lret
das
and
rcr
aas
jnp
and
push
leave
adc
xchg
sbb
les
lock
popf
andl
adc
cmpsb
mov
mov
in
fbld
xchg
add
ret
push
sbb
fcmovu
into
ss
scas
mov
pushl
sub
xchg
jl
nop
inc
and
mov
sub
scas
cmp
mov
popa
insl
enter
sub
test
outsb
call
push
lock
and
mov
inc
cmpsl
js
pop
cmp
sbb
pop
mov
sub
ds
pop
out
popa
in
imul
sub
and
fnsave
or
xchg
inc
mov
xchg
inc
fisubs
push
imulb
rcrl
xchg
rcll
mov
fldl
divb
push
dec
jno
int3
scas
pop
js
test
cmp
fwait
in
nop
icebp
fldcw
inc
add
jle
inc
sub
popa
sbb
xor
sbb
insl
divb
hlt
mov
lods
dec
repz
jp
inc
push
mov
sahf
shrb
inc
add
je
inc
es
int
loope
add
es
movsl
hlt
cld
js
or
fs
xor
shlb
mov
insb
lahf
inc
push
scas
pop
jb
jle
dec
push
add
sub
insb
push
fsubrl
xor
jle
in
ljmp
jl
inc
add
mov
aas
stc
and
mov
bts
lods
lret
and
daa
inc
adc
sbb
jp
or
xchg
inc
jnp
adc
fwait
cmpl
xchg
jne
cli
mov
scas
fisttps
pop
adc
mov
sbb
iret
mov
sti
xor
mov
mov
jg
cmp
cmp
inc
mov
imul
stos
jb
loopne
call
inc
mov
enter
or
aad
mov
push
inc
mov
xor
jae
and
mov
push
outsb
es
out
fs
cmp
xor
inc
fstps
or
aam
pop
fldcw
shlb
xchg
call
fs
cwtl
mov
push
pop
sbb
nop
ficompl
mov
adc
cmp
outsl
push
mov
jo,pt
in
xorl
dec
mov
add
fldcw
jmp
ret
scas
dec
mov
repz
out
pusha
sub
insb
loope
push
push
adc
mov
mov
loopne
pop
xor
lods
je
sbb
xchg
iret
or
aad
and
mov
test
int3
inc
sub
int
sbb
mov
cmpb
jae
xor
shlb
fucomi
das
mov
cmpl
sahf
div
xchg
hlt
sbb
xchg
movsl
out
mov
xchg
or
mov
xchg
inc
aaa
incb
stc
sahf
mov
add
and
out
dec
cmpsl
lods
pop
cmp
jnp
fstps
cmp
fwait
xchg
dec
fs
push
jge
aaa
mov
outsl
sub
inc
inc
andb
lahf
int
mov
dec
ds
and
fbstp
stc
loope
js
or
jmp
mov
popa
test
jge
push
lret
mov
jle
jo
push
cs
and
add
hlt
jnp
mov
testl
or
mov
gs
test
outsb
sbb
mov
mov
xchg
sub
add
cli
mov
subb
pusha
xchg
xlat
sbb
in
dec
sbb
adc
js
insb
or
lcall
ljmp
pop
mov
xor
arpl
insl
movsl
mov
ljmp
popa
lea
jne
aas
pop
push
dec
jns
jge
in
icebp
pop
fidivs
outsb
pushf
lods
pop
incl
jns
push
lods
sub
mov
jnp
push
jl
aas
cmp
sub
mov
xor
call
inc
test
push
loope
xchg
jl
push
jge
mov
xor
test
push
mov
push
dec
data16
hlt
bound
adc
xor
punpckldq
loop
sarb
stos
pop
outsl
pop
cmpsb
test
sbb
ss
sub
mov
mov
mov
gs
adc
test
fs
loopne
movsb
movsb
fstl
jne
push
xor
mov
jmp
sub
dec
cmpsb
ror
andb
mov
mov
inc
or
push
test
add
add
inc
mov
in
loope
test
shl
inc
fbld
or
ja
xchg
ljmp
lret
inc
dec
insl
jmp
mov
test
aas
arpl
icebp
jl
dec
mov
out
insb
test
or
xchg
sbb
inc
je
fsubs
imulb
pop
iret
fs
inc
mov
push
aad
es
in
pop
ret
pop
push
movsb
enter
addr16
cmp
cmp
insl
repz
add
cld
cmp
repnz
mov
movsl
adc
mov
adc
cwtl
pop
push
loopne
je
cmp
xchg
js
lods
mov
xor
subl
ficoml
sbb
in
clc
js
lahf
mov
mov
sahf
cmpsb
gs
inc
add
and
xor
clc
xchg
data16
or
insl
jbe
push
pop
pop
mov
adc
dec
daa
push
pop
jno
lock
adc
int3
pusha
push
shll
push
das
cwtl
cltd
fwait
dec
xchg
inc
sbb
cld
pusha
orb
lcall
loop
inc
push
pop
pop
xchg
sub
fcompl
jl
je
loope
xchg
push
int3
xor
lds
xchg
or
std
out
xor
stos
pop
mov
pop
mov
pushf
push
add
mov
sub
jb
xor
das
push
outsl
pop
out
mov
je
pop
jle
fistpl
add
or
push
jno
mov
and
dec
and
in
inc
fdivl
and
inc
mov
sbb
cmc
mov
test
lods
inc
jae
mov
jne
notl
in
jecxz
rolb
into
mov
aas
mov
dec
movsb
lds
or
cmc
div
pop
ficomps
cmp
or
fidivl
inc
aam
or
stos
filds
sub
jl
int
jl
lret
adc
xor
dec
push
movlps
dec
nop
pusha
add
inc
mov
sub
stos
test
cs
addr16
pop
adc
adc
data16
testb
pop
and
sbb
xor
dec
pop
idivb
mov
and
jmp
xor
or
sub
sub
orb
sub
jecxz
dec
inc
dec
test
dec
sti
push
lock
cli
mov
lds
mov
cmp
cmp
je
cli
into
lret
jne
pop
push
sub
jo
incb
inc
sahf
and
mov
cmpsl
loope
inc
das
sub
xor
and
pusha
mov
scas
fisubrl
push
jnp
xchg
pop
repnz
sbb
jns
sub
mov
aas
push
cwtl
fisttpll
ret
mov
out
xrelease
cmpsl
cmpsl
or
mov
mov
loop
and
dec
xchg
mov
or
cmpb
push
and
mov
mov
dec
sbb
jne
dec
pop
sbb
xlat
inc
add
pop
and
mov
push
cld
mov
hlt
inc
pusha
fildll
inc
xchg
outsb
das
pop
lret
insl
rcrb
jmp
fsub
adc
lds
sbb
iret
ret
cmp
outsl
test
adc
xor
push
std
and
sar
sub
xchg
lret
mov
xor
jmp
mov
out
xor
xor
sub
jle
bound
or
sub
popa
pop
mov
add
es
pushf
push
add
pop
aaa
rcl
push
mov
ds
xchg
pusha
mov
mov
inc
mov
call
pushf
inc
imul
mov
out
xor
stos
roll
lret
andb
cs
je
pop
mov
mov
out
dec
mov
movsb
cwtl
aaa
add
mov
mov
ds
jns
rolb
jp
fbld
push
mov
mov
scas
rcl
iret
add
jae
in
mov
popf
or
dec
popl
xor
xchg
jecxz
out
cmp
mov
in
inc
outsl
div
movsl
push
je
sub
test
pop
push
or
cmpsb
inc
jmp
add
mov
shl
out
lods
fisubs
leave
push
mov
fcmovbe
data16
push
sti
je
push
dec
mov
sub
dec
pop
add
bound
add
mulb
mov
imul
add
pushl
je
pushf
cmc
push
scas
in
cmp
push
pop
adc
stos
loopne
mov
inc
test
dec
inc
repnz
dec
jl
mov
mov
js
jbe
mov
xchg
pop
ljmp
xchg
sub
outsl
lahf
pushf
aam
popa
sub
ss
mov
lods
outsb
sbb
xchg
stos
add
xchg
es
sahf
jb
xor
imul
stos
adc
xchg
pop
adc
cmpsb
xchg
cmc
adc
mov
pop
shll
jbe
add
in
mov
inc
add
shl
sbb
or
ja
or
clc
insb
or
push
and
insb
sti
add
pop
insl
loop
insl
push
dec
outsl
iret
jne
mov
in
push
xor
in
cmc
cmpsb
or
sbb
push
in
and
jge
pop
and
push
dec
xchg
rolb
movsl
jne
or
push
push
mov
out
xchg
or
adc
or
aaa
xchg
and
sbb
adc
jg
cwtl
test
xchg
and
mov
cmp
mov
xchg
sahf
mov
add
add
mov
mov
xor
out
pop
mov
iret
mov
movsb
jae
out
imul
sahf
cmp
mov
mov
sub
push
mov
popf
xor
mov
sbb
mov
ficompl
or
arpl
jbe
jb
cli
mov
push
xchg
stc
aaa
xchg
mov
ja
xor
pop
and
stc
sub
cmp
aam
jae
pop
sbb
pop
inc
mov
cmp
lods
mov
and
int
adcl
loope
popf
lcall
sub
lock
loop
and
out
dec
xchg
js
imul
pop
enter
pop
cmp
xor
gs
adc
or
enter
lcallw
or
sub
or
sub
adc
in
push
or
insl
mov
dec
cli
dec
shll
into
je
insl
shlb
movsb
in
dec
fmul
hlt
stos
mul
jo
sbb
das
mov
mov
inc
fwait
add
cmc
into
lcall
out
dec
shrl
lahf
jge
pop
jg
aad
push
sbb
adc
jmp
pop
push
xchg
cmpsb
je
rcll
jl
lret
sbb
sub
and
insl
cmp
sbb
jnp
cs
dec
fsub
cmp
cwtl
add
lds
cmp
out
mov
testl
jae
add
add
jns
sbb
or
fucompp
cs
out
xor
jne
idivb
inc
sub
jnp
cmpsl
jle
into
mov
lcall
lahf
sub
push
inc
fidivrl
mov
mov
push
lock
call
out
cs
sbb
jo
xlat
into
imul
idivb
sub
adc
stos
decl
movsl
aas
mov
lret
repz
ret
jb
mov
xor
sar
mov
xor
lcall
or
mov
je
stos
inc
lds
fldcw
mov
mov
push
adc
mov
mov
inc
fcomip
push
lods
mov
cmp
cwtl
je
add
out
jmp
push
mov
sbb
jle
lea
lret
cmp
xchg
mov
or
push
scas
and
jle
sbb
testl
je
repnz
pop
lret
push
add
cmp
pop
adc
mov
rcll
jnp
or
inc
xor
in
mov
mov
mov
mov
mov
scas
leave
pop
add
cmp
dec
push
cmpsb
es
and
pop
jns,pn
and
fadd
push
sbb
xlat
and
push
popa
std
std
movsl
jnp
sub
mov
iret
xor
add
pushl
mov
jno
xor
cwtl
dec
movsb
mov
pop
popa
jo
sub
mov
lret
dec
out
mov
cli
pop
sbb
jmp
mov
test
aas
pop
add
es
in
mov
mov
mov
call
bound
lods
les
lods
insb
aad
hlt
jnp
sarl
lds
cmp
in
sbb
xchg
js
or
push
cs
mull
loope
fisubl
pop
jo
fistpl
rorl
dec
mov
cli
scas
gs
mov
pop
cmp
mov
jge
fnstcw
dec
enter
jb
pop
push
push
push
insb
lods
andb
out
clc
sarl
outsb
movl
out
sti
mov
sbb
fistpl
xor
or
mov
vpaddd
inc
lods
add
shrb
mov
jo
mov
imul
mov
lahf
push
stc
mov
movsb
mov
cwtl
aas
cmc
dec
repnz
jle
mov
ljmp
jg
repnz
lcall
xchg
xor
lret
or
cmp
push
outsb
and
mov
dec
xor
fldcw
das
add
jg
dec
int3
pop
xlat
push
pop
daa
xor
dec
inc
test
icebp
call
push
lock
inc
inc
xlat
outsb
movsb
sahf
aaa
pop
push
jo
gs
dec
lret
xor
arpl
pushf
scas
sti
and
faddl
fistpl
cmpsl
aas
mov
movsb
dec
cmpb
mov
sbb
popl
das
xchg
mov
roll
cmp
nop
popa
divl
adc
test
out
js
mov
lods
cwtl
test
sub
cmp
push
cmc
jecxz
jle
aaa
in
mov
jb
mov
mov
adc
or
mov
cmpsl
inc
lock
mov
sub
lcall
and
jge
jecxz
xchg
aad
inc
mov
mov
das
xorb
xchg
pop
jne
movsl
mov
xor
dec
sub
xchg
jmp
filds
mov
sbb
loope
imul
in
or
cmp
and
frstor
movsl
test
push
push
pop
lods
fwait
daa
shll
repz
test
sbbl
aad
mov
jl
dec
cmovb
xchg
and
and
jb
cmp
jg
scas
xor
sub
add
test
mov
dec
add
jnp
mov
cmp
add
test
mov
push
cmp
movsb
mov
cld
lahf
loop
stos
ljmp
inc
jno
aaa
outsb
int
and
push
jp
cmp
push
inc
pop
cld
cmp
ret
mov
cmp
int3
jp
inc
xor
sub
mov
jp
les
inc
xor
lahf
and
mov
add
mov
popl
fwait
mov
push
aam
inc
xchg
sub
sbb
or
add
dec
sub
and
cmpsl
push
maxps
mov
data16
mov
sahf
fs
js
xchg
int
bnd
call
mov
mov
adc
test
out
out
inc
sbb
mov
xchg
pop
pop
cwtl
sbb
shr
data16
jp
outsb
pop
mov
loopne
dec
sbb
sub
xor
aas
cltd
lret
js
in
sbb
rep
clc
inc
je
test
fs
dec
cmp
cld
xchg
and
sti
pop
in
fdivl
sbb
in
scas
jle
or
ljmp
outsl
cltd
hlt
cmp
mov
sbb
push
sbb
and
mov
push
aas
push
cmpsb
sbb
movsb
aad
mov
xor
push
jnp
fdivrl
icebp
or
xchg
into
inc
inc
pop
xor
dec
pusha
scas
int
movsb
out
push
aad
fisttpl
aad
inc
mov
cmpsb
sbbl
cs
mov
mov
mov
push
xchg
inc
dec
sub
mov
add
mulb
mov
adc
or
aas
call
pop
mov
inc
or
lret
push
frstor
fcom
inc
inc
insl
in
pop
pop
lock
lcall
mov
mov
repz
jnp,pn
and
ret
push
xor
enter
pop
add
cmc
lahf
jmp
xor
shl
lock
aas
pop
pusha
mov
mov
xor
inc
out
mov
add
ss
dec
sub
jge
pop
and
adc
lcall
loop
out
fcomip
stos
pop
movsb
pop
lret
inc
rorl
in
adc
push
ljmp
inc
loope
sbbl
in
sbb
add
pop
cmp
sbb
push
cmp
cli
mov
es
ss
cwtl
mov
rolb
push
fdivl
cs
sar
cmp
add
leave
inc
daa
pop
pop
xchg
cmpsb
adc
testb
push
insb
insb
mov
std
or
xor
jo
repnz
mov
call
push
testl
pushf
movsb
push
and
pop
cld
adc
test
movsl
sti
hlt
pop
sub
add
cltd
lcall
xchg
mov
cmp
sbb
clc
lods
mov
sub
lcall
mov
lcall
push
int3
lret
mov
mov
int
test
aad
fsubrl
adc
stos
dec
adc
ret
lock
dec
mov
xchg
test
push
mov
mov
repnz
inc
xor
xchg
popa
aas
pop
xor
add
jne
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
imul
xor
add
lea
mov
add
mov
mov
xor
add
jne
mov
mov
xor
lea
mov
incl
mov
xor
add
jne
jmp
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
imul
xor
add
lea
mov
add
mov
jmp
cmpsb
or
imul
jnp
push
fsubs
cmp
bound
push
inc
ret
sub
aam
out
push
jne
add
cmp
dec
js
mov
jmp
mov
test
sti
js
in
jmp
add
xchg
dec
repz
cwtl
cmp
shrb
push
sbb
mov
test
les
mov
aaa
fnsave
incl
sbb
or
rolb
and
mov
dec
movsb
dec
out
aad
cmp
inc
out
inc
xlat
dec
inc
sarl
xor
mov
fcoms
dec
fs
js
sbb
cmp
xor
inc
int3
repnz
ficomps
lds
add
cld
dec
lea
mov
adc
rcrb
cmp
jp
data16
mov
imul
mov
mov
mov
pushf
in
fisttpl
mov
sub
sub
loop
orb
rorb
dec
scas
nop
jl
mov
ds
adc
push
call
push
lds
add
mov
jl
out
jle
loop
fldcw
push
mov
cmpb
mov
pop
mov
imul
pop
sahf
add
pop
fistpll
cs
adc
or
or
divb
das
inc
jle
arpl
es
movsl
jle
ret
fdivp
xchg
push
icebp
gs
add
fldenv
xchg
fdivrl
mov
aaa
cld
aam
in
es
pop
xchg
mov
test
in
icebp
xchg
xchg
ret
dec
call
sub
inc
inc
outsb
jno
lret
jne
stc
mov
mov
push
xlat
jo
mov
stos
xchg
inc
jmp
test
out
push
scas
inc
es
add
insl
cwtl
fcomps
popf
fwait
outsb
mov
jl
jo
cli
imul
ja
pusha
mov
dec
cmp
and
adc
imul
dec
fdivp
outsb
cmp
sbb
sub
stos
add
sbb
pop
sub
out
dec
dec
aad
sub
push
ds
sbb
inc
inc
loope
jp
sbb
or
mov
mov
in
mov
stos
mov
adc
imul
dec
sbbb
into
sbb
and
mov
cli
insl
sub
fldcw
pop
orb
rorl
or
push
jns
insl
fidivrl
adc
movsb
test
cmp
ret
jb
les
test
xchg
aam
jno
jns
mov
js
inc
and
shll
aaa
jnp
sub
pop
sub
lock
pop
cmp
lock
add
mov
or
dec
je
push
in
sub
shlb
dec
add
cli
scas
push
mov
push
sub
and
mov
jg
scas
sbb
sti
pop
sbb
ror
sub
movsl
aas
or
call
mov
mov
fcomps
jl
addr16
fisubl
push
cs
das
lea
fadd
mov
mov
in
dec
mov
sbb
or
cmpsb
call
std
das
ret
cmc
and
adc
mov
xor
or
jle
imul
pop
dec
cmp
and
nop
orl
pop
inc
xlat
mov
mov
pop
callw
mov
out
aas
fwait
mov
sti
sub
call
dec
xchg
rclb
dec
js
cmp
outsl
aam
testb
inc
or
push
fsubl
addb
mov
jmp
in
jg
int3
jg
or
loope
loope
xchg
push
dec
xor
sub
pop
inc
sub
nop
add
mov
insl
adc
inc
pop
inc
int3
movsb
xor
pop
xchg
xchg
xor
jbe
dec
test
nop
orb
jb
bnd
js
inc
jnp
icebp
mov
xchg
or
jmp
jae
push
jmp
scas
mov
pop
and
and
add
xchg
push
data16
decl
mov
andb
xchg
or
pop
jp
pop
pop
cmp
xchg
xchg
imul
mov
jle
cmp
pop
add
sbb
sbbl
loopne
pop
iret
push
imul
sub
mov
lret
jae
ffree
push
fnstsw
xor
or
pop
adc
mov
or
loopne
mov
sti
and
stos
bound
jne
aas
sti
imul
pop
mov
andl
cmpl
pop
mov
xchg
push
insb
or
repnz
push
push
jmp
jae
xchg
inc
popa
mov
es
pop
in
sti
mov
jb
insb
sub
push
pop
mov
cltd
dec
ss
push
inc
pop
sbb
mov
out
not
inc
aaa
mov
bound
bound
push
shrb
bound
inc
in
and
xor
dec
popa
lods
mov
sbb
sbb
stos
lods
xchg
movsb
or
cltd
or
add
std
cvtps2pd
pop
adc
xor
fdivl
xor
xchg
movsb
rdrand
jle
lcall
inc
add
pop
pop
bnd
test
shrb
sub
cmpsl
rolb
insl
repnz
arpl
push
jb
push
jge
mov
stc
adc
fnstcw
dec
xor
test
pop
lds
dec
push
int3
cltd
and
mov
rcrl
out
hlt
sub
mov
inc
jne
jno
das
loop
mov
loop
sbb
lcall
inc
sub
in
lds
std
inc
leave
adc
in
dec
insl
mov
leave
mov
xchg
inc
into
hlt
xlat
cmp
pop
jl
pushf
or
push
pop
orb
cwtl
notb
ret
push
inc
sbb
and
fnstsw
in
dec
int3
xchg
pop
mov
cltd
imul
ret
enter
outsb
ljmp
inc
ret
and
sahf
xchg
mov
add
lcall
inc
add
xchg
ss
mov
outsb
cmp
push
js
or
nop
mov
pusha
lods
stos
pop
jecxz
jns
je
sti
cmp
pop
or
push
mov
add
leave
arpl
inc
cmp
add
cltd
mov
pop
test
inc
jne
mov
ficoms
push
shl
push
adc
jnp
sub
inc
movsl
add
inc
pop
cltd
pop
testl
iret
mov
xor
lret
pop
or
cmp
loop
in
sub
jl
pusha
dec
jecxz
mov
ss
jmp
inc
push
leave
sahf
jmp
cld
and
xor
mov
add
lods
push
jg
or
inc
push
xchg
jmp
lahf
loope
cwtl
in
dec
sub
inc
vmptrst
mov
dec
jns
dec
and
or
xchg
push
scas
adc
sahf
pop
cmp
mov
cmpsb
cmpsb
cmp
pop
frstor
sbb
and
jp
fisubrl
cmp
push
push
enter
xchg
lds
inc
or
push
cmp
xchg
and
sbb
lds
sahf
inc
mov
push
jp
add
pop
mov
jno
sbb
int3
insb
out
stos
dec
arpl
adc
test
cld
popa
ret
mov
icebp
mov
mov
fs
jbe
mov
shll
sbb
cmpsl
xchg
sub
jmp
push
jbe
push
js
mov
test
leave
std
loop
jmp
bound
mov
into
add
cmpsb
mov
lret
mov
jno
scas
xor
add
xor
mov
ret
pop
in
inc
mov
sbb
lds
dec
sbb
repnz
aad
int
icebp
call
out
out
mov
or
sub
ja
int3
and
stos
shll
cld
add
mov
mov
jle
or
push
mov
cmp
ljmp
sahf
clc
mov
int3
jmp
ss
enter
in
cmp
jg
cmp
push
push
mov
pusha
daa
or
jns
pop
xchg
inc
gs
mov
mov
adc
push
movsl
cmp
cli
jmp
dec
outsl
pop
xchg
nop
or
add
xchg
aad
mov
mov
fdivs
pusha
daa
cmp
xor
lcall
dec
dec
mov
push
loope
mov
adc
or
or
je
sub
inc
mull
or
xchg
int3
notl
outsl
mov
pop
ret
xor
lods
ds
pop
sub
inc
loopne
jl
dec
push
mov
lds
rorl
shlb
addr16
iret
loope
fisubs
push
iret
push
dec
clc
and
pushf
dec
stc
add
data16
cmc
fs
add
daa
cmp
rorw
lods
inc
aam
inc
fnstsw
fstps
loope
and
cmpsb
ret
lods
xchg
je
push
cs
jae
in
xchg
iretw
jo
nopl
hlt
subb
sub
sbb
jne
aas
push
in
push
push
add
add
inc
mov
jge
out
sub
outsb
jl
push
jle
jbe
adc
mov
adc
movsb
sbbl
test
negb
adc
jp
mov
sti
inc
mov
sbbb
cmp
mov
push
ja
sbb
mov
in
pop
sbb
cltd
push
cmp
out
push
scas
outsb
and
push
pop
cmp
into
pop
movsb
dec
imul
inc
push
pop
or
mov
mov
and
out
in
jns
inc
es
jns
add
and
sbb
add
repnz
and
callw
cmc
sbb
jbe
push
clc
inc
popf
leave
jecxz
cmp
scas
or
cltd
inc
lret
mov
add
jns
xchg
sbb
pop
cmp
test
add
add
sub
mov
imul
mov
adcb
pop
icebp
js
add
mov
xchg
mov
pop
add
test
ret
cwtl
or
rclb
mov
fimuls
add
push
dec
fstpl
xchg
jl
lret
or
andps
jle
aam
add
lock
mov
sbbl
and
fidivrl
cmpl
fldl
int
xchg
add
int
int
adcb
mov
mov
push
and
lret
cwtl
jae
test
cltd
lcall
cmp
push
xchg
shlb
roll
es
push
cmc
js
push
test
add
ja
mov
jl
push
leave
out
pop
cmp
cmp
cltd
ret
cmp
out
lock
add
test
test
push
cli
aas
sub
mov
ret
push
dec
xchg
out
movsl
inc
scas
fldl
mov
inc
loop
add
push
inc
and
cltd
cmpsb
test
jmp
ja
sub
fstl
aad
pop
ja
mov
push
into
cmc
pushf
or
jecxz
out
lcall
insl
push
mov
out
dec
arpl
add
xchg
pushf
sahf
push
shll
mov
lods
fimuls
xor
inc
out
lahf
xor
call
mov
sahf
fldenv
lret
cmp
jmp
aam
dec
mov
xor
push
jle
xlat
xor
fisttpll
jp
sbb
lds
sbb
roll
push
imul
adc
mov
mov
sbb
mov
add
mov
mov
mov
pushf
xchg
mov
mov
fmull
adc
cmp
mov
jbe
sub
das
enter
mov
mov
add
jge
jno
jp
mov
mov
jp
cmc
imul
mov
into
das
mov
out
xchg
lods
sarl
dec
dec
mov
sbb
movsl
mov
dec
push
test
push
push
lea
inc
adc
call
mov
add
out
mov
push
mov
out
jb
mov
dec
xor
fcomp
add
dec
stos
outsl
push
cmp
push
add
out
mull
cmp
dec
mov
pop
inc
xor
xor
dec
idiv
add
mov
pushf
fdivrl
scas
imul
movsb
iret
aam
sbb
mov
xor
mov
loope
mov
push
or
push
daa
js
mov
rorb
enter
call
scas
push
jbe
scas
pop
idivb
mov
lcall
inc
in
mov
test
mov
cmp
jo
mov
int
xchg
xor
adc
cmpsb
jmp
mov
int3
fs
sbb
popa
sahf
fsubr
or
cwtl
shl
out
push
or
adc
dec
push
and
lahf
xor
mov
imul
bts
call
dec
lods
pop
push
add
out
push
xchg
jge
into
or
rcrl
adc
roll
xor
cltd
mov
fldl
add
pop
dec
test
psllq
sbb
sub
gs
ret
mov
ss
lret
ja
in
and
pop
or
repz
jmp
or
jmp
test
sti
clc
adc
mov
xor
pushf
push
adc
lds
xchg
pop
ljmp
pop
cltd
xor
fs
ret
repz
push
repnz
push
xlat
add
sub
jle
xchg
and
pop
negb
shl
cmp
mov
cmc
insb
stos
std
ds
call
jl
cli
dec
aad
sahf
stos
hlt
loope
cmpsb
pop
test
mov
mov
jb
push
pop
test
xchg
iret
fmul
or
mov
in
dec
mov
add
hlt
sub
mov
push
fnstsw
mov
cmc
test
iret
out
adcl
jp
adc
inc
add
data16
or
imul
inc
aam
pusha
enter
jo
adc
add
ljmp
outsl
xchg
inc
sbb
mov
jmp
inc
bound
test
xchg
notb
adc
xchg
xchg
push
stos
outsb
mov
repnz
pop
int3
divl
or
fucomip
movsb
mov
test
pop
xchg
jle
sbbb
les
mov
test
les
sbbb
in
dec
cmp
inc
rcrb
int
ret
aad
pop
bound
adc
add
push
add
and
test
out
sbb
xchg
inc
rorb
fs
mov
insb
je
inc
xor
ficomps
adc
sub
mov
mov
pop
or
fldl
xchg
xchg
mov
xor
cs
mov
std
xchg
push
pop
adc
lods
sub
xchg
dec
cmp
repnz
fstl
xchg
mov
xchg
jg
ja
lcall
aaa
cmp
dec
addr16
push
shrl
cli
mov
push
test
and
mov
cmp
jmp
popl
test
mov
sti
stos
mov
std
cwtl
nop
lret
jmp
sar
xchg
pop
stos
mov
pop
mov
adc
xchg
push
loop
cmp
dec
outsl
adc
pushf
add
mov
sbb
xchg
pusha
loope
pop
loopne
fdivrs
fnstcw
xchg
pop
push
daa
leave
push
fistpl
xor
xchg
mov
add
sub
dec
enter
shll
xor
in
mov
aaa
pop
loopne
fisubrs
jnp
notb
cwtl
dec
jl
nop
mov
pushf
add
in
fsubs
cs
call
loopne
scas
lods
mov
adc
cltd
outsb
fbstp
lret
mov
lcall
lods
rol
loopne
mul
cmp
data16
dec
adc
cwtl
fstp
mov
adc
adc
mov
push
xchg
pushl
notl
push
nop
mov
scas
jmp
aas
fimull
loopne
adc
daa
sbb
lods
movsl
ret
iret
mov
push
popl
rcrb
fimuls
sub
fs
mov
push
add
jl
daa
mov
enter
xor
ss
stos
cwtl
inc
outsb
arpl
mov
push
pop
test
and
push
enter
into
sbb
xor
into
iret
sub
jle
sub
dec
fisttps
popa
shlb
push
nop
inc
nop
mov
fldcw
push
outsl
sub
dec
clc
hlt
fdivl
sub
push
sbb
orl
and
push
fsub
jmp
rolb
dec
lret
loopne
cmp
mov
les
mov
mov
fmuls
bnd
adc
and
insb
and
incl
loope
cmpsl
or
jns
nop
adc
sub
sub
fwait
je
out
jmp
sbb
xor
jl
jno
push
mov
fstp
scas
push
arpl
gs
inc
mov
fwait
stos
inc
mov
es
adc
test
fbld
mov
xchg
iret
sbb
inc
ja
or
imul
push
mov
dec
pusha
cmc
rcll
and
int3
dec
inc
mov
rcrb
test
enter
inc
sub
sub
ljmp
pop
jl
mov
fsubrp
lret
sbb
cmp
mov
out
outsb
pop
jle
dec
mov
push
sub
dec
mov
mov
xchg
xchg
push
daa
cmc
inc
inc
imul
loope
lods
jp
outsl
ja
divps
mov
cltd
int3
call
pop
scas
jl
stc
push
add
jecxz
pop
bound
inc
mov
add
sti
mov
scas
sbb
jle
loop
and
enter
mov
xchg
push
jno
and
std
adcb
repz
adcl
in
gs
cltd
ss
pop
add
fcom
add
sbb
int
popa
jbe
dec
cmp
jne
mov
sahf
cmp
mov
xchg
jg
aad
mov
push
divb
pop
dec
iret
adc
push
mov
test
xchg
cmp
lahf
adc
mov
sbb
cmp
push
mov
or
inc
outsb
mov
ss
stc
jae
data16
sbb
jae
outsl
into
aam
add
ds
fwait
add
and
xchg
pop
inc
jno
dec
imul
call
mov
aas
js
and
test
cmp
rorb
maxps
adc
mov
cld
fmul
outsl
adc
mov
flds
jbe
int
insb
arpl
xchg
imul
xchg
push
xchg
jo
in
fstps
dec
inc
sbb
data16
rcrl
dec
add
inc
jmp
in
mov
add
sbb
lcall
test
in
mov
inc
popf
add
xchg
mov
sbb
cmp
in
xchg
adc
lock
repnz
stc
fcmovnbe
xchg
xlat
add
sub
std
movsb
or
cmp
sub
iret
and
cmp
sbb
push
out
mov
adc
xor
aaa
mov
push
mov
call
and
or
pop
mov
fldl
push
cmp
test
cmp
lcall
inc
jns
negl
xor
daa
test
and
in
xor
cmpb
xchg
adc
test
inc
jae
mov
mov
inc
adc
scas
push
js
inc
scas
adc
pusha
dec
mov
scas
es
mov
lahf
pop
pop
sub
jo
jae
out
add
cmp
sbb
leave
pop
pop
aad
lock
mov
inc
inc
push
outsb
mov
cli
cli
insb
jmp
test
jge
pop
movsb
or
and
js
ljmp
in
jmp
insb
xlat
sbb
xchg
sub
mov
repz
das
js
fwait
bound
enter
mov
sbb
cmp
out
aas
cmp
dec
movsb
lods
imul
out
sub
xchg
dec
mov
cld
ds
jl
cmp
dec
sub
cs
sbb
fnstsw
mov
es
popa
sub
cmc
sub
jecxz
and
dec
mov
and
lea
sahf
cltd
xor
inc
cmp
add
repz
jbe
insb
data16
negl
out
aaa
int
ret
dec
push
fstps
lock
movsl
xchg
xlat
ja
and
jae
mov
sbb
and
subb
jbe
sbb
xchg
bound
adc
loop
out
push
pop
or
unpcklps
fidivs
clc
addr16
jmp
aam
mov
pop
mov
or
sbb
call
scas
cmc
mov
hlt
xchg
push
lock
pop
xchg
mov
jmp
outsb
mov
dec
clc
hlt
mov
mov
or
ret
xor
in
js
nop
xor
sbb
adc
les
pop
inc
in
out
js
in
mov
ss
cltd
add
adc
xchg
fstl
and
and
mov
cmc
mov
arpl
rcr
out
movsl
jle
fadd
outsl
dec
inc
push
push
dec
ds
es
and
stc
fnstcw
inc
push
xchg
scas
xchg
push
outsb
or
mov
push
mov
sbb
pop
xchg
push
mov
ds
add
push
xlat
sbb
sbb
loop
sbb
jg
mov
cmp
xchg
mov
mov
jge
mov
jb
add
inc
andb
cmp
fcmovbe
sub
fmuls
sub
aas
out
jns
inc
push
fbstp
mov
loope
jl
scas
and
sub
les
leave
mov
push
or
lea
push
inc
stos
fwait
inc
push
repnz
xor
ret
mov
jp
enter
cmp
mov
ds
mov
and
and
jb
push
insb
pop
add
stos
cmpsl
lcall
mov
in
lret
inc
outsl
add
dec
mov
ret
ret
pusha
enter
xchg
pushw
mov
mov
inc
outsl
sbb
leave
rcrl
push
das
push
movaps
cltd
repnz
or
dec
pop
sbb
xchg
jbe
imul
push
push
push
cmp
das
das
add
nop
pop
push
ja
xchg
adc
xchg
cmp
cmp
popa
ds
push
fnstenv
lock
ds
lret
int
mov
std
enter
mov
lock
jle
push
mov
loope
and
in
mov
xchg
add
out
push
cs
insb
or
lods
mov
or
mov
movsb
jb
push
dec
cld
mov
movsl
and
ljmp
sbbb
call
and
cmp
cmp
mov
mov
mov
cmc
cmp
jmp
push
imul
aas
sti
xor
mov
int
sub
xchg
mov
cmp
movsb
push
push
enter
pop
out
je
and
mov
out
sarb
decl
inc
push
jp
xor
aas
int3
xor
or
negb
add
hlt
repnz
call
or
add
sbb
mov
or
sub
sbb
add
sub
pop
mov
loop
inc
jg
enter
in
xchg
pop
jecxz
pop
cmpsl
xor
sub
jno
cmp
mov
dec
fsts
test
pop
mov
fwait
jp
push
adc
push
rcl
arpl
jecxz
and
inc
adc
fdivl
or
stc
mov
pop
xchg
call
push
xchg
pop
rcl
movsb
ds
fildl
adc
insb
mov
or
pop
mov
aad
std
sti
mov
jmp
adc
lods
int3
cmpsb
ficoml
int
sbb
lods
push
mov
adc
pop
push
mov
icebp
fstpl
sbb
lahf
adc
jl
ret
mov
aad
movsb
or
push
scas
xor
push
jns
mov
shll
fstl
imul
bound
inc
dec
pop
mov
pop
dec
loopne
xchg
push
mov
xchg
and
mov
out
inc
inc
mov
pop
inc
lea
int3
or
aaa
pop
and
sbb
and
cmp
jp
sbb
stc
fcoms
inc
movsb
fs
nop
lcall
sbb
push
rorb
pusha
mov
inc
repz
cmpsl
es
jbe
xchg
je
loop
push
mov
pop
or
cmpsb
mov
xchg
xchg
inc
popf
jle
xchg
or
add
inc
dec
aas
mov
push
rcr
gs
ficoms
test
addr16
adc
lcall
push
sub
pop
mov
mov
xchg
push
or
push
push
lcall
xor
call
push
sub
pop
popa
aam
popf
arpl
push
add
fwait
imulb
cmpsl
cmp
push
jmp
andl
inc
cmp
popa
and
fiadds
pop
mov
je
adc
mov
inc
iret
decl
pop
repnz
mov
outsb
mov
sbb
repz
jle
adc
cltd
andl
inc
out
mov
std
fs
mov
jmp
mov
jle
stos
ljmp
mov
sbb
cmp
sbb
mov
repnz
fiaddl
scas
mov
mov
xchg
call
stos
cli
aaa
call
pop
dec
push
sbbb
sbb
fldt
sub
lds
test
xor
mov
add
out
fisttpll
adc
jb
movsl
fdivrp
push
push
js
or
call
sti
jo
xor
inc
loop
mov
dec
sub
sub
mov
mov
pop
sub
jmp
xchg
push
lret
or
dec
jle
dec
rcrl
aaa
jns
push
dec
test
xchg
stc
mov
icebp
xor
mov
adc
cltd
adc
xor
iret
imul
mov
test
dec
mov
cmpsl
out
shr
jbe
mov
in
mov
orl
add
mov
outsl
rcl
and
lahf
dec
jo
xor
subl
aam
and
pushf
xchg
lea
in
sub
aad
flds
shll
adc
fildl
aas
and
add
stos
pop
ret
sahf
fwait
jae
inc
sbb
negb
je
pusha
xor
leave
repz
cmpsl
adc
inc
pavgb
nop
mov
enter
pushf
fsubr
pop
sbb
repz
je
jae
inc
jae
jno
inc
adc
mov
xor
orl
add
pop
mov
outsb
fldenv
out
gs
out
lock
shlb
or
jle
mov
or
divl
adc
pop
mov
push
inc
xchg
pushl
mov
cwtl
cmp
movsb
jbe
sbb
loopne
lock
insb
outsl
test
stos
test
add
bound
dec
hlt
push
mov
xor
mov
inc
in
notb
repz
jle
ljmp
jl
lret
or
sub
mov
pop
in
dec
sbb
push
xchg
cmpl
cmp
nop
call
and
cmp
pause
stc
outsb
sub
outsb
psubq
repz
dec
loopne
idivb
mov
inc
and
mov
or
add
repnz
pop
cmp
mov
pop
mov
pop
stos
dec
arpl
fmuls
dec
addl
dec
mov
mov
or
mov
icebp
rcrb
into
mov
fcom
cmpsl
lods
test
push
jnp
xchg
nop
mov
in
lcall
fimuls
sahf
dec
icebp
mov
push
push
mov
aad
sbb
cltd
outsl
add
out
sub
mov
sub
test
rorb
cmp
iret
pop
jmp
pusha
lahf
or
cli
push
pop
and
xor
pop
in
lds
add
and
jmp
stc
scas
cmp
pop
push
notl
xchg
xor
ret
mov
out
ret
pop
jb
lahf
call
cli
push
push
xor
das
push
jp
adc
cmp
jne
or
fistpl
stos
xor
dec
and
ja
xchg
push
xchg
dec
das
jp
testl
in
aas
adc
dec
and
out
or
xchg
mov
fcmovnbe
gs
cmp
sbb
lret
adc
lret
scas
xchg
lods
pop
pop
ds
jne
mov
js
stos
out
cmp
call
xchg
push
or
aas
dec
or
mov
push
xlat
ret
push
loop,pn
or
mov
adc
mov
add
into
out
adc
mov
lahf
aaa
loop
notb
push
sbb
and
lret
test
loope
inc
cmpsb
mov
movsb
mov
sbbb
aaa
popf
add
cmc
ret
ret
jl
ljmp
sub
xor
les
aad
xchg
insb
idiv
mov
in
shrl
xchg
clc
ds
mov
add
xchg
out
lds
dec
loop
fidivs
in
fiaddl
push
bound
push
nop
fidivl
adc
add
addl
and
push
ficoml
movsb
mov
or
mov
jbe
lds
cmp
dec
mov
mov
push
stc
lds
into
mov
sub
pop
inc
pop
addb
leave
sub
data16
cmp
aas
pop
insb
xchg
lock
mov
pop
pop
jo
adc
mov
and
and
sub
mov
bswap
mov
mov
scas
mov
idiv
inc
es
ljmp
sbb
xor
ret
in
cs
outsb
push
or
xchg
insl
sub
mov
fs
or
in
inc
mov
inc
test
andb
vpavgw
jns
jb
dec
xor
mov
xlat
add
ja
int3
mov
or
mov
dec
test
je
pop
mov
and
xchg
sti
push
push
es
add
push
jne
stos
addr16
aad
sub
movsl
pusha
cmpsb
shll
adc
outsb
mov
popa
and
cmpsb
lret
je
bound
xor
and
iret
xchg
imul
cmpsl
out
add
cs
mov
cmp
in
sub
jl
js
mov
aad
or
mov
push
push
mov
fcmovbe
shl
inc
popa
cmp
lret
pop
icebp
sub
add
lock
dec
push
mov
repz
ret
in
and
out
lret
andb
cltd
test
gs
mov
sahf
xor
nop
sti
xchg
pop
aam
xchg
mov
fs
pop
fisttpll
mov
push
jo
and
xor
out
movsl
push
pop
mov
test
fsubl
test
and
mov
xchg
pop
mov
or
mov
mov
cmp
jbe
fimuls
add
jne
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
xor
imul
add
lea
mov
add
mov
mov
xor
add
jne
mov
xor
mov
add
mov
pop
pop
pop
leave
ret
pop
or
repz
sti
ja
stos
mov
ficoms
int
add
add
cmc
test
and
fidivrs
mov
or
jae
movb
scas
sti
adc
shrb
push
jge
test
dec
aas
sti
cmp
inc
xchg
daa
add
popf
pop
out
adc
insl
push
cli
adc
arpl
pop
xor
mov
mov
add
sub
adc
cmp
out
pop
xchg
push
ror
add
pop
add
add
cmp
stc
mov
lock
outsb
jg
mov
test
adc
dec
icebp
dec
or
mov
mov
ja
mov
movsl
xchg
mov
subb
iret
out
sub
xchg
or
mov
cmpsl
inc
pop
rcll
add
add
sub
sub
addb
into
add
pop
add
add
adc
xchg
test
es
scas
xor
flds
icebp
notb
movsl
test
add
jl
cmp
orps
sahf
sbb
shl
mov
pop
mov
xor
jp
sub
dec
das
inc
mov
rorb
nop
and
mov
pop
fs
sub
cmpsl
sub
jge
das
and
aam
aam
ljmp
je
inc
or
into
add
pop
add
add
sub
sbb
clc
adc
inc
aam
push
jp
xchg
ljmp
mov
mov
pop
xorb
scas
adc
mov
insb
xor
mov
cmc
loope
and
cmp
enter
popa
or
push
jno
loopne
lods
mov
mov
add
mov
sti
cmpsl
mov
dec
mov
jecxz
add
pop
add
add
mov
sub
or
and
imul
das
mov
decb
dec
movsb
clc
or
mov
imul
mov
aam
jmp
push
add
mov
sub
rorl
mov
dec
cmp
fs
and
add
out
lods
cmp
stc
stc
mov
add
pop
add
add
shr
stc
adc
into
pop
mov
xchg
daa
pop
rorl
push
nop
sbb
push
aas
loopne
cli
mov
clc
mov
ljmp
out
add
fldl
popa
in
sbb
insb
add
ret
sti
mov
xor
mov
jns
xor
add
add
inc
gs
aaa
push
jl
mov
add
add
or
bound
push
lods
pop
push
shll
inc
mov
jo
faddl
mov
cmp
jno
ret
sarl
pop
push
shrl
dec
mov
ret
add
mov
jmp
push
fsubr
outsb
dec
pop
test
test
or
jns
push
add
mov
push
adc
cwtl
out
pop
lea
add
add
pop
add
add
xlat
mov
mov
ljmp
pushl
xchg
int3
and
addr16
pop
sahf
sbb
dec
fdivrs
test
iret
call
xchg
fcmovb
adc
push
clc
arpl
push
adc
stos
xchg
dec
or
pop
or
adc
data16
and
add
dec
inc
sub
das
jle
jg
imul
pop
push
mov
pop
loope
add
add
jne
cltd
push
out
pusha
push
loopne
lret
sbb
lcall
fwait
data16
mov
or
mov
fwait
aas
shrb
mov
add
mov
push
in
stc
ss
jecxz
jb
std
jbe
ds
or
inc
rorl
mov
lea
or
add
and
mov
mov
andb
loope
add
add
sub
jmp
inc
xchg
fistpll
push
icebp
arpl
mov
data16
adc
in
in
lods
movsl
aad
aaa
jecxz
into
add
cmpsl
mov
push
cmp
or
jb
xchg
xor
fidivl
mov
shll
std
scas
jge
and
ret
or
ret
lods
sub
mov
add
add
add
push
cld
mov
adc
or
and
or
jae
jl
in
push
jno
int
adc
cmp
sarb
lock
dec
mov
call
test
and
jp
pop
add
out
dec
insb
adc
push
push
pop
add
ret
pop
iret
fst
enter
mov
ret
lcall
add
imul
es
pushf
dec
jmp
vcvttsd2si
shlb
cltd
dec
sbb
cli
out
pop
test
sbb
seto
inc
dec
imul
xor
dec
xchg
fldl
mov
jg
inc
jle
test
mov
mull
imul
nop
inc
add
nop
inc
add
inc
add
nop
inc
add
inc
add
nop
inc
add
inc
add
mov
inc
add
mov
inc
add
mov
inc
add
mov
inc
add
mov
add
inc
add
mov
add
inc
add
mov
add
inc
add
mov
add
inc
add
insb
jp
jbe
ja
js
jno
inc
inc
push
jno
ja
dec
dec
dec
inc
jno
jae
push
arpl
push
inc
add
sbb
mov
jns
xor
dec
cmp
dec
js
cmp
dec
inc
dec
jae
inc
dec
xor
dec
pop
pop
pop
push
cmp
dec
xor
dec
cmp
dec
js
cmp
dec
inc
dec
mov
dec
xor
dec
pop
insl
pop
bound
dec
jns
xor
dec
cmp
dec
mov
dec
inc
dec
pop
jge
jb
subb
xchg
jns
aas
dec
test
dec
test
dec
mov
dec
inc
dec
xor
dec
pop
lea
outsl
xchg
outsb
xchg
jle
jns
aas
dec
test
dec
test
dec
mov
dec
inc
dec
xor
dec
pop
popf
pop
xchg
outsl
mov
jns
aas
dec
mov
dec
lods
dec
cmp
dec
mov
dec
inc
dec
pop
lods
pop
mov
jle
jns
aas
dec
mov
dec
lods
dec
cmp
dec
lahf
dec
cmp
dec
inc
dec
pop
mov
outsb
ret
jle
jns
aas
dec
mov
dec
lods
dec
cmp
dec
lods
dec
cmp
dec
inc
dec
pop
int
ret
outsb
sarl
jns
aas
dec
mov
dec
lods
dec
cmp
dec
mov
dec
inc
dec
pop
fstpl
outsl
loop
jecxz
repz
aas
dec
lea
dec
lahf
dec
cmp
dec
xor
dec
pop
in
pop
loop
repnz
repz
jns
jle
jns
cmp
jg
xor
dec
xor
dec
cmp
lods
dec
cmp
dec
inc
dec
pop
or
outsb
adc
jns
aas
dec
add
out
sbb
loop
inc
add
sbb
add
sbb
inc
add
sbb
add
sbb
add
inc
add
sbb
pushf
clc
ss
inc
add
sbb
inc
add
sbb
inc
add
sbb
ds
inc
add
test
repnz
add
push
orl
add
cmp
ds
insl
push
inc
imul
in
incb
aas
cli
mov
add
xchg
pushf
clc
mov
pushf
clc
mov
xchg
pushf
clc
mov
xchg
pushf
clc
mov
xchg
pushf
clc
mov
xchg
pushf
clc
ljmp
add
add
jbe
mov
pushf
clc
sbb
push
pop
sbb
add
ficomps
inc
add
or
insb
inc
inc
add
add
add
push
add
push
push
add
push
push
add
add
push
add
add
dec
lahf
dec
mov
dec
movsb
dec
insl
dec
bound
dec
add
cltd
dec
pushf
dec
fwait
dec
insl
dec
bound
dec
scas
dec
lods
dec
lahf
dec
mov
dec
xor
add
dec
test
dec
fwait
dec
xor
add
add
add
add
mov
mov
mov
mov
mov
mov
mov
jae
jo
jno
jbe
ja
je
jne
mov
mov
lods
jge
jge
jns
mov
insl
enter
jb
test
hlt
test
test
fnstenv
mov
push
or
xlat
out
add
scas
adc
jge
fidivs
leave
hlt
cmpsb
cmp
mov
cmpsb
and
and
cmc
enter
inc
inc
add
jp
rcrb
add
sbb
adc
imul
insb
push
imul
push
jp
dec
push
arpl
dec
dec
data16
imul
inc
push
jb
inc
je
inc
jae
dec
gs
dec
dec
pop
jp
jbe
pop
jo
inc
gs
dec
js
inc
js
dec
inc
inc
inc
push
dec
insb
dec
jbe
pop
jbe
inc
fs
push
inc
add
inc
outsb
imul
push
push
push
jne
insl
push
push
jo
addr16
pop
add
push
pop
inc
inc
outsb
popa
imul
jne
dec
je
bound
jns
bound
dec
ja
dec
inc
inc
push
add
outsl
inc
dec
outsl
pop
inc
jb
jns
inc
pop
dec
add
bound
pop
outsl
push
dec
insb
inc
push
inc
jo
add
add
je
insb
jae
inc
insl
je
push
push
addr16
jo
js
pop
dec
push
dec
jns
js
outsb
pop
jae
push
arpl
push
push
je
addr16
dec
inc
insl
inc
inc
inc
arpl
push
inc
popa
push
dec
imul
push
push
imul
dec
jns
push
inc
jo
imul
fs
inc
push
push
ja
fisttpll
mov
js
repnz
add
add
out
jl
lods
mov
push
fldl
xchg
mov
and
popl
mov
sub
bound
jo
cmp
cli
dec
sub
push
mov
push
adcb
jecxz
xor
out
adc
cmpsb
sahf
lret
out
es
xchg
shl
sub
cli
jl
xlat
push
sbb
add
pop
add
add
inc
jno
mov
adc
into
dec
mov
mov
addr16
daa
adc
gs
fdivrs
rorb
adc
adc
imull
fidivs
fcmovbe
mov
imul
xor
dec
add
pmuludq
jmp
sti
pop
mov
jb
mov
jg
ljmp
push
xor
xlat
add
pop
add
add
xor
and
and
jno
fistpll
int
pop
leave
push
jge
or
xchg
sub
and
jmp
sub
sbb
arpl
js
push
adc
std
loope
test
rorb
in
or
pop
cwtl
in
add
cmp
in
fimuls
xor
add
add
mov
jnp
or
mov
cmpsb
rcrb
int3
xor
lret
daa
push
arpl
add
test
fistpll
leave
mov
gs
mov
sbb
mov
jbe
js
push
adc
and
xor
mov
cmc
add
add
add
mov
sbb
std
negb
sub
dec
nop
sti
lcall
add
mov
mov
inc
sbb
xchg
lret
inc
jge
push
icebp
sti
sub
mov
inc
ja
jns
mov
enter
xchg
scas
sbb
stc
cmp
jb
sub
dec
loop
packsswb
call
inc
mov
testl
in
ss
add
inc
ret
fidivl
xchg
mov
scas
fbstp
inc
mov
add
pop
add
add
iret
xor
fcmovu
mov
mov
cmp
sbb
sbb
jne
and
fcomp
push
fiadds
fldt
pop
movsb
xchg
push
dec
mov
aad
test
movb
sub
xchg
scas
ret
call
hlt
sub
and
adc
jne
dec
in
fwait
scas
fdiv
pop
sub
sarl
pop
add
add
test
outsl
movsl
scas
inc
lcall
out
and
jo
jno
inc
lret
andl
adc
cmpsl
and
push
xor
outsl
or
push
adcl
sbb
lds
sbb
mov
sti
sbb
add
mov
aam
xor
and
xlat
fadds
add
add
in
sbb
mov
pop
ss
rcrl
jns
mov
fnsave
or
aas
dec
push
hlt
pop
push
pop
stc
or
cltd
fbstp
int3
in
inc
ljmp
in
cwtl
aaa
lods
or
jns
add
mov
xchg
sub
fs
mov
pop
movsl
sub
cmp
add
mov
out
jecxz
data16
add
pop
add
add
push
rcll
xchg
push
dec
xchg
push
or
or
sbb
inc
outsb
sub
stc
xor
in
xor
test
in
jae
pushf
js
mov
sarl
adc
mov
adc
call
mov
lock
scas
mov
imulb
fadds
jmp
repz
fimull
inc
arpl
inc
flds
add
add
loopne
ret
xchg
mov
pop
mov
cltd
jb
fiadds
jns
imul
std
mov
xchg
dec
outsl
arpl
imul
repnz
pop
call
inc
int3
jb
addl
and
ds
and
int3
test
mov
out
sbbl
add
pop
iret
pop
aad
ss
dec
test
add
pop
add
add
aas
inc
inc
add
sub
mov
push
fldt
fldt
jge
sbb
ds
mov
inc
leave
push
aad
adc
and
pop
mov
xlat
inc
add
jecxz
push
stos
push
cmp
out
mov
stos
mov
or
ljmp
popf
arpl
inc
adc
push
push
sahf
in
fmul
add
cld
sahf
and
inc
inc
fiaddl
add
add
stc
lcall
jno
jge
jecxz
ss
adc
lods
inc
cwtl
inc
aam
outsl
cltd
aas
mov
lods
add
mov
insb
mov
jae
pop
add
cmp
dec
inc
inc
scas
push
arpl
fidivrs
add
dec
sahf
scas
pushf
xor
add
lock
jle
repz
stc
mov
pop
add
add
out
mov
mov
je
or
mov
sub
inc
lods
inc
pop
popf
jbe
notl
scas
push
nop
push
andl
mov
cmpl
xchg
add
xchg
aaa
lcall
std
adc
jg
dec
addr16
fdivs
cmp
xor
add
add
adc
adc
mov
lds
stc
fiaddl
add
add
imul
jl
jo
xor
and
ds
xorb
fprem1
fsubs
pop
clc
aas
test
enter
icebp
push
popa
pushf
add
xchg
mov
les
or
push
xor
cmp
and
sbb
cs
bound
xlat
lcall
cmp
mov
shr
ret
fildl
add
add
ret
loop
clc
movsl
sbb
inc
les
xor
lret
fimull
icebp
pop
xor
testl
inc
dec
mov
rorb
push
data16
cmpsb
fs
xor
cli
mov
pusha
and
mov
out
daa
mov
sbb
pushf
xchg
cltd
stos
add
sqrtps
cmc
das
sbb
xchg
iret
dec
mov
add
pop
add
add
rcrb
push
push
adc
dec
pmaddwd
inc
jbe
add
add
push
pusha
jle
push
xchg
add
aaa
push
push
and
es
pop
aam
cmpb
dec
dec
loope
int
cmc
adc
jle
dec
xor
sbb
testl
pop
add
sub
fildll
clc
stc
mov
faddl
add
add
xchg
addr16
and
jp
or
push
dec
and
imul
jae
jg
test
js
les
xor
dec
ds
ljmp
jmp
inc
push
incl
fs
xor
sub
sub
inc
jl
sbbl
roll
jno
cmpsl
adc
testl
xchg
dec
faddl
add
add
mov
add
sub
outsl
push
push
lods
mov
ja
push
mov
arpl
dec
adc
pusha
cltd
mov
fcoms
ja
add
in
repz
mov
cltd
pop
ffreep
sarl
in
clc
je
rcrl
inc
pop
gs
into
adc
and
sarb
add
add
jne
jg
clc
cs
push
hlt
iret
add
pop
add
add
or
jno
cltd
sub
push
xor
aad
push
fistl
sbb
cltd
aas
dec
xchg
test
decb
sub
aaa
fsubrs
add
add
imul
xchg
mov
add
je
push
mov
push
xchg
add
lods
aad
or
add
mov
cmp
sti
dec
mov
je
lcall
add
pop
add
add
add
xor
lret
sbb
mov
outsb
adc
fprem
subl
ljmp
pusha
mov
pop
pop
rcrl
cld
and
outsb
and
jo
mov
sbb
stos
jl
test
mov
cmpsb
jne
iret
mov
jbe
mov
cmp
pop
mov
fidivrs
add
fists
dec
mov
xchg
adc
mov
add
pop
add
add
xchg
orl
mov
inc
fmuls
jbe
scas
push
popf
jle
cmp
out
fisubrl
or
fcmovnb
push
push
jo
mov
and
adc
repz
add
daa
in
out
jnp
nop
sbb
in
inc
mov
rol
test
test
xchg
fcmovu
fisttps
push
mov
roll
add
add
sbb
scas
pop
pop
sbbb
pop
mov
add
xchg
les
push
sub
pop
adc
dec
cmc
sbb
lret
jle
lds
mov
aad
cmp
add
sbb
mov
mov
loope
dec
mov
outsb
lcall
dec
out
ja
test
xchg
mov
addl
add
add
jle
out
sbb
mov
roll
add
add
pop
mov
test
sbb
inc
sub
add
add
mov
and
push
into
sarl
ja
cli
mov
cltd
data16
outsl
pushl
jp
lahf
decb
in
push
mov
xchg
and
dec
and
fneni(8087
pusha
dec
repz
pop
add
and
cmp
scas
mov
mov
add
add
cmpsl
das
or
xchg
pop
dec
cs
mov
das
out
cli
repz
sub
mov
sub
loope
pushf
sbb
mov
pop
mov
push
aad
pop
jp
cmc
les
lret
icebp
int3
xor
mov
inc
cmc
in
enter
pop
xor
out
pusha
xor
add
popf
aam
mov
add
add
mov
mov
in
dec
and
lcall
lock
push
mov
mov
and
add
mov
mov
cld
call
mov
adc
icebp
addr16
adc
sti
pushf
dec
fildl
adc
test
xchg
fcmovb
lods
mov
test
add
mov
jbe
hlt
mov
and
cmpsb
test
enter
add
pop
add
add
ret
js
test
mov
inc
cmp
adc
pop
das
loope
and
or
jo
cli
xorb
fdivs
xchg
icebp
popf
sarl
pop
inc
iret
pop
xchg
pop
xchg
ja
mov
out
cmp
shll
imul
pop
xorl
data16
sar
add
ror
mov
sub
out
in
jbe
int3
rolb
add
add
stc
push
dec
xchg
movsb
movsl
cmp
inc
aad
lret
movsl
hlt
lret
fcmovnbe
mov
or
into
add
addr16
pop
pop
sub
out
in
push
dec
or
shll
push
bswap
es
out
sub
cwtl
fcom
imul
std
in
and
xor
fucomi
outsb
and
pop
mov
daa
roll
add
add
shlb
or
cmp
scas
pop
cmp
xchg
mov
repz
stc
pop
out
sbb
and
int3
mov
adc
shlb
out
and
xor
sti
jl
xchg
shl
add
adc
inc
cmp
lret
sbb
cli
bound
add
mov
and
lcall
add
mov
mov
dec
rcrl
pop
lret
shrl
mov
adc
mov
mov
sahf
stos
jae
jnp
out
xor
pop
cmp
pop
fisubl
push
pop
das
mov
jo
pop
mov
xor
fsubrs
mov
push
pop
jno
mov
add
stc
call
into
inc
mov
inc
push
jle
fst
add
pop
add
add
jno
gs
mov
inc
sub
push
inc
inc
movsb
jno
inc
pop
fnstenv
cli
insb
mov
push
loope
lds
test
movsl
add
mov
iret
pop
mov
inc
pop
sub
in
xchg
notl
jle
loope
sub
jo
iret
neg
pop
cmp
mov
fisubrs
cwtl
sar
repz
jg
enter
add
pop
add
add
or
popf
lret
cmpsl
adc
cld
inc
enter
and
cmp
sub
loop
inc
sub
sub
inc
dec
push
mov
fmul
mov
push
out
pop
inc
inc
push
hlt
push
sub
fs
inc
xchg
popa
ljmp
mov
add
int3
sbb
out
loopne
lods
sti
test
add
add
je
movsl
lds
push
jne
xor
sbb
fimull
sbb
add
in
je
sar
or
mov
test
pop
sbb
and
pop
mov
mov
push
jne
int
out
inc
push
mov
inc
dec
outsb
cltd
xchg
add
insl
pop
inc
in
inc
sub
fwait
push
pop
add
test
fildll
addr16
xchg
cld
out
aam
add
add
pop
nop
sbbb
inc
adc
test
xor
cmpsl
mov
cmp
sbb
nop
in
push
scas
fs
inc
xchg
adc
mov
fdiv
nop
arpl
insl
xchg
push
xlat
fidivl
add
adc
xchg
adc
adc
ljmp
jae
jno
loope
mov
add
add
lods
fcomi
sarb
add
adc
pop
add
add
mov
out
fsubrl
aas
adc
pop
in
mov
xchg
and
sub
dec
pushf
cmp
int3
jno
pop
iret
in
lea
pop
mov
sub
or
pop
push
or
sbb
dec
cs
jl
dec
jo
call
push
shll
add
or
ja
dec
cmp
dec
lea
andb
add
jno
cmpsl
xchg
leave
dec
sahf
fisttps
sbb
sbb
jne
fstl
jnp
rcrb
psubusw
cmp
inc
cmpsl
stos
add
jmp
fwait
pop
divb
cli
ss
shrl
stc
sub
jg
stos
mov
add
fsubr
add
pop
xlat
adc
add
arpl
jge
mov
daa
cli
add
call
add
pop
add
add
sub
int
test
jmp
mov
repz
ret
shrl
mov
adc
sbb
lcall
mov
scas
leave
stos
leave
clc
pusha
imul
loop
add
dec
mov
cltd
mov
xor
dec
mov
add
daa
push
imul
sub
faddl
add
add
ja
push
popa
jo
roll
jp
xor
pop
inc
inc
adc
sbb
mov
and
std
jl
add
insb
lods
cmp
inc
or
add
add
rolb
mov
mov
cmp
and
lahf
mov
add
add
ss
xor
and
jne
sbb
add
pop
add
add
lret
ss
add
xchg
hlt
mov
mov
repz
mov
dec
lds
popf
loopne
leave
jb
jno
les
inc
cmp
xchg
call
jo
adc
mov
push
lods
add
lret
mov
sub
mov
pop
xor
add
out
mul
aaa
cmc
xchg
lcall
jbe
add
pop
add
add
xchg
inc
clc
push
pusha
pop
mov
popa
scas
inc
push
add
loopne
mov
fildl
sub
adc
call
cltd
add
pop
mov
and
mov
jnp
and
mov
push
ss
pop
pop
outsl
mov
insb
fisubrs
scas
mov
push
aad
out
fucomip
ss
cmp
sahf
sub
fldl
add
add
mov
in
shrb
sub
fidivrs
add
stos
scas
bnd
sub
jne
mov
cmpsb
xchg
ljmp
lret
popf
push
pusha
cmp
dec
call
repnz
imul
sub
sub
dec
and
andl
or
add
add
in
cld
fisubrl
sbb
jb
sub
add
pop
add
add
add
stos
pop
aaa
rcl
sub
mov
aad
lfs
mov
je
ja
shld
xor
and
lret
std
lds
jnp
and
push
jns
out
movsl
push
icebp
mov
jmp
cld
cmp
imul
test
sub
in
add
cmp
paddsb
nop
rcrl
push
scas
je
fiadds
add
add
adc
push
in
push
stos
push
pusha
repnz
dec
jmp
imul
push
mov
sarl
jg
fstpt
adc
lcall
mov
mov
ja
jp
mov
or
pop
sbb
sub
lret
sbb
add
jle
call
cli
lcall
add
pop
add
add
addl
dec
push
and
out
add
and
or
notl
push
bound
adcb
jbe
in
stos
out
pop
dec
xchg
jg
sub
add
std
inc
cmp
mov
push
inc
or
xor
sub
mov
shll
push
in
mov
bts
add
fincstp
shl
frstor
pop
dec
add
test
pop
add
add
fistpll
fidivs
and
dec
popf
ret
test
pop
into
das
pcmpeqd
out
lock
mov
cmp
sti
in
lods
jno
sub
mov
scas
sub
repz
sbb
push
in
dec
push
cwtl
cs
xchg
push
dec
sbb
pop
repz
arpl
cli
lock
out
or
add
aam
fnstsw
out
fcmovu
in
add
add
pop
add
add
or
pop
fs
inc
push
pop
add
pop
mov
sub
mov
xor
mov
aam
sub
adc
pop
inc
addb
mov
push
or
movsb
mov
inc
rorb
imul
pop
jb
xchg
xchg
add
sbb
inc
jecxz
mov
mov
filds
add
add
lea
mov
mulb
cmp
inc
add
cmp
mov
fwait
testl
shl
dec
pop
dec
frstor
sbb
push
or
add
mov
pop
cmc
sub
mov
outsl
inc
add
mov
pusha
xchg
sub
ret
jmp
xor
mov
mov
icebp
and
jne
dec
loopne
add
add
or
mov
mov
lods
loopne
addb
xor
orb
xchg
or
push
stos
test
xchg
sti
pusha
mov
mov
mov
pop
mov
mov
inc
push
cmp
cmpl
in
aas
push
lcall
add
add
add
add
xlat
repz
das
cli
fists
dec
es
mov
xchg
dec
test
add
add
jecxz
int3
inc
cltd
jb
cmp
jns
adc
sti
or
cmp
movsl
xlat
cmp
dec
pushf
fldenv
fsubp
mov
push
xchg
mov
push
xchg
sub
sub
jg
pop
insl
sub
mov
adc
sahf
push
adc
cmp
add
rolb
rolb
rolb
rolb
rolb
rolb
rolb
rolb
inc
cmp
pop
ss
pop
cmp
inc
inc
dec
pop
pop
push
dec
inc
add
xor
cmp
xor
aaa
add
xor
push
inc
dec
push
pop
inc
push
cmp
push
push
inc
xor
xor
add
cmp
dec
cmp
pop
dec
xor
add
xor
pop
inc
dec
pop
pop
xor
pop
inc
xor
inc
dec
cmp
inc
cmp
ss
dec
add
xor
dec
xor
push
add
aaa
pop
push
dec
dec
cmp
inc
xor
pop
pop
dec
push
xor
add
dec
xor
ss
xor
xor
push
push
add
push
pop
push
cmp
xor
pop
dec
dec
push
cmp
dec
xor
xor
xor
pop
add
pop
inc
xor
push
xor
inc
add
xor
xor
pop
dec
dec
xor
add
pop
aaa
push
dec
push
pop
inc
add
dec
pop
inc
dec
xor
xor
push
pop
push
inc
inc
pop
cmp
push
pop
push
inc
add
pop
pop
dec
inc
inc
add
inc
pop
xor
dec
cmp
xor
ss
pop
dec
pop
add
push
xor
pop
xor
pop
xor
xor
push
push
inc
add
push
xor
xor
pop
ss
cmp
pop
xor
xor
push
push
xor
push
pop
inc
xor
push
inc
aaa
inc
add
ss
dec
pop
pop
inc
push
pop
push
dec
inc
add
xor
dec
add
cmp
xor
inc
add
inc
add
add
inc
add
add
add
add
cmp
dec
add
pop
add
push
add
xor
cmp
pop
add
add
inc
add
add
xor
inc
add
push
add
add
add
dec
add
add
add
pop
add
add
add
add
dec
add
add
pop
add
add
add
add
xor
add
add
push
add
cmp
pop
add
add
add
add
inc
add
add
inc
add
push
add
cmp
push
add
pop
add
add
add
add
dec
add
pop
add
add
dec
add
add
add
xor
dec
add
add
add
add
add
dec
add
add
inc
add
push
add
add
add
dec
add
add
push
add
xor
pop
add
add
dec
add
xor
pop
add
add
add
dec
add
xor
pop
add
add
xor
dec
add
add
add
xor
pop
add
add
push
add
add
inc
add
push
add
add
inc
add
pop
add
add
push
add
add
add
add
add
inc
add
addb
addb
addb
addb
addb
addb
addb
addb
addb
add
sbb
add
adc
add
add
add
add
add
add
add
or
add
or
add
adc
add
inc
iret
add
push
cmp
add
add
jb
push
imul
aas
inc
outsb
jne
push
imul
popa
je
outsl
outsb
jae
je
.byte
