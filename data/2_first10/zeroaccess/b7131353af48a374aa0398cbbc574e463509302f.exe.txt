push
mov
sub
mov
movl
mov
mov
movl
movl
movl
cmp
movl
jne
mov
push
movl
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
mov
movl
xor
addl
mov
xor
push
movl
cmpl
je
cmpl
jne
push
pushl
push
push
pushl
call
mov
dec
mov
jmp
mov
xor
add
addl
movzwl
add
not
or
and
movzwl
xor
mov
sub
mov
adc
mov
sbb
mov
sbbl
push
or
mov
dec
movzwl
mov
sub
mov
mov
xor
or
add
movl
movl
mov
orl
mov
movzbl
or
lea
mov
mov
mov
addl
lea
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
movl
mov
mov
andl
xor
xor
andl
xor
andl
add
movl
add
div
movl
mov
movl
cmp
movl
je
movl
lea
sbb
mov
mov
jmp
popa
xchg
mov
mov
mov
bnd
xchg
jo
jo
in
jo
rcl
aad
ror
rol
pop
push
add
or
rdpmc
cmpps
adc
mov
add
mov
sbb
lods
sarb
or
sahf
jp
inc
lods
push
sub
mov
stos
js
roll
jmp
mov
dec
fcomps
pop
test
sub
mov
pusha
nop
mov
and
jmp
out
repnz
xchg
xor
jbe
xlat
and
add
adc
xor
or
fldl
xor
pop
push
or
pop
fstps
jno
mov
ja
sbb
xor
int
cmp
inc
orb
cli
lcall
outsb
push
gs
and
aas
mov
adc
movsb
je
and
test
outsb
iret
fsubrs
aaa
push
sbb
rorl
lods
push
es
mov
pushf
add
outsl
push
les
xlat
mov
movsb
cld
and
lods
ljmp
stc
jge
ffree
std
pop
xor
or
mov
adc
mov
es
lds
or
adc
stos
push
and
and
add
inc
sub
repz
mov
cld
xor
mov
mov
rorb
cld
outsb
jo
add
in
std
int
loop
or
and
pop
mov
imul
mov
mov
cmp
jmp
push
fcmovnb
mov
xlat
les
test
inc
sbb
jg
jo
jg
jo
lods
sbb
xchg
jmp
repnz
push
pop
push
sti
and
adc
sub
mov
aam
popa
mov
dec
or
mov
je
insb
pop
or
adc
leave
and
iret
push
adc
fisubrs
mov
ret
jle
xchg
adc
inc
stos
and
sub
pop
push
iret
xor
push
cmp
repnz
mov
jmp
inc
jle
xchg
pop
popa
lcall
imul
mov
cli
push
fidivs
jb,pn
test
xchg
or
loopne
cmc
dec
std
je
in
movsl
inc
inc
fwait
or
cli
outsb
int
in
lea
pop
mov
loope
fcomip
cmp
clc
or
push
je
sub
stos
add
cli
mov
sbb
aaa
out
into
and
sahf
adc
xchg
xchg
loope
and
xchg
iret
cmc
xor
jnp
sbb
inc
mov
out
or
sub
lods
lret
jb
jne
scas
mov
int3
cmp
pop
call
pop
sbbl
pop
cmp
and
sub
mov
fdivl
fucomp
cmpsb
notb
xor
mov
sbb
in
in
jo
mov
mov
push
inc
mov
call
add
mov
orl
jmp
mov
add
cmp
je
mov
andl
jmp
mov
mov
or
cmp
je
mov
xorl
jmp
mov
mov
xor
mov
mov
add
cmp
je
mov
xor
add
mov
mov
mov
mov
xor
mov
add
jmp
clc
repnz
icebp
pusha
xchg
rcll
sbb
jg
jle
jo
jg
jo
cmpsl
mov
pop
push
mov
lds
popa
lods
fsubrl
xchg
cmp
mov
mov
pop
jle
jne
outsb
and
cmpsl
sbb
jne
cs
xchg
stc
outsb
sub
sbb
mov
or
pushf
sub
inc
xchg
cmc
outsl
add
shlb
xor
out
cs
jecxz
add
sub
aam
lods
mov
in
and
sub
xor
jecxz
subb
int3
jge
out
loope
sbb
daa
rcrb
sti
nop
adc
xor
pop
push
test
fwait
mov
inc
fs
ljmp
roll
fwait
scas
mov
inc
rorl
cmp
jp
arpl
xor
cmp
bound
ficoml
testl
in
dec
mov
mov
cmp
cltd
inc
or
mov
rorb
pusha
push
pop
and
cwtl
xor
xor
sub
add
andl
or
mov
add
jns
dec
fwait
adc
rclb
dec
test
stos
jb
stos
dec
ljmp
ljmp
push
sti
adc
lods
dec
and
xor
fstps
bound
adc
movzwl
xor
lea
add
mov
mov
mov
xor
add
imul
sub
mov
jmp
mov
mov
jmp
pop
arpl
out
xchg
imul
jae
push
insl
push
aas
jl
jo
jg
jo
popa
lods
pop
xchg
pop
es
jae
dec
pop
cmpsl
push
mov
fcomps
mov
adc
mov
mov
mov
mov
js
jne
pop
jecxz
mov
insl
add
fidivl
cwtl
dec
cld
pop
dec
mov
push
or
or
ror
or
out
ret
or
push
fnsave
xchg
jno
inc
lahf
in
insb
inc
sbb
inc
push
pop
sub
or
push
or
lea
and
mov
or
test
push
in
leave
pop
pop
insl
inc
and
and
movsb
sub
lcall
dec
mov
pop
mov
dec
ljmp
fisttps
mov
fists
test
lret
dec
and
leave
mov
mov
outsl
shrb
mov
sub
xchg
xchg
popa
fcoml
mov
and
push
popf
or
mov
mov
shll
in
enter
pop
cmpsb
out
push
outsl
mov
push
mov
frstor
xor
jb
and
mov
loopne
inc
mov
adc
aam
jne
loop
addr16
jmp
push
mov
mov
lahf
andb
in
negl
sub
xlat
cmp
sbb
jo
inc
mov
sbb
imul
les
ret
or
add
mov
addl
jmp
mov
cmpl
jne
mov
xor
add
test
jne
xorl
jmp
pop
pop
pop
leave
ret
push
mov
sub
leave
ret
push
mov
jmp
addr16
movsl
insl
jne
out
cmp
and
or
xchg
jge
jo
pop
repnz
leave
in
mov
push
int
dec
sub
pop
sub
and
pusha
xchg
jg
mov
insb
out
mov
adc
mov
jns
mov
xchg
cld
sub
xor
sub
outsb
imul
popa
cmp
xchg
and
jnp
movsb
loopne
mov
adc
pop
test
lods
jbe
push
fwait
jle
fnop
xchg
jg
or
inc
xorl
pop
int
and
lock
mov
call
pop
clc
shrl
dec
sbb
xchg
aam
pop
push
xchg
test
sti
jae
jbe
or
js
inc
xlat
in
and
inc
cmc
jg
lahf
inc
lea
or
mov
in
out
or
gs
scas
jmp
adcl
cmp
aam
nop
fs
sub
hlt
xchg
fnstsw
push
pop
cmpsb
pop
jmp
stos
mov
mov
les
rcrl
push
in
imul
xchg
stc
sbb
fmuls
sbb
adc
test
xor
mov
int3
jge
ret
sbb
daa
sub
or
push
sbb
repnz
add
divl
dec
cmp
repnz
mov
dec
xchg
push
dec
or
inc
mov
shl
imul
sub
cmp
xor
jmp
xor
jae
lret
cmp
dec
std
jno
cmp
movsb
xor
mov
jnp
sti
adc
add
dec
sub
push
mov
jb
dec
pop
test
mov
shll
or
xchg
out
stos
adc
mov
xchg
xor
hlt
jl
mov
adc
scas
and
pop
or
and
and
enter
and
pushf
loope
out
aaa
lcall
je
mov
jo
cmpsb
dec
js
pop
xchg
jge
inc
or
in
lahf
mov
mov
adc
sti
fmul
sub
mov
mov
or
notl
mov
jns
xchg
popa
push
divb
scas
jb
adc
aad
fildl
xchg
push
lds
mov
lods
ret
adc
movsb
jge
jecxz
mov
add
xorb
popa
imul
cwtl
sti
sub
and
hlt
in
jge
mov
and
and
or
insl
mov
adc
mov
jg
jg
mov
stos
and
testl
popa
cli
in
scas
cmc
stos
js
dec
lahf
das
or
inc
cmp
jne
mulb
test
adc
sbb
inc
cmpsb
mov
ljmp
xchg
lds
repnz
or
jo
dec
xor
mov
jbe
fmuls
sbbl
adc
mov
dec
arpl
inc
scas
ror
adc
and
les
addb
and
lods
mov
jmp
inc
add
test
out
pop
or
pop
scas
fsubrl
and
loopne
mov
lods
adc
gs
loopne
stos
cmp
cmpsl
ss
fsubrs
sahf
mov
rolb
cwtl
cwtl
pop
imul
out
inc
add
sub
mov
sbbl
jmp
add
arpl
inc
mov
jo
xchg
jge
jo
inc
jnp
mov
cltd
cmp
aam
lods
mov
cmp
xor
fldcw
incl
cmp
in
pushf
icebp
xor
or
sti
mov
fildl
outsb
xchg
int3
mov
jmp
pop
jecxz
frstpm(287
aam
int3
and
lock
jo
sbb
cld
movsb
mov
stos
cmp
push
jge
xor
loop
and
or
nop
pop
jl
adc
pop
and
sbb
ljmp
arpl
in
and
movsl
clc
das
push
xchg
lret
cmp
inc
es
add
sub
loop
sub
mov
push
and
mov
jge
je
mov
pusha
dec
cmc
mov
mov
hlt
mov
dec
dec
push
dec
loop
adc
add
popf
sbb
repz
loop
scas
out
jge
pop
out
pusha
movsl
mov
sbb
pop
faddp
lock
sbb
cli
leave
and
xchg
lock
fucomi
std
sub
pop
push
in
xchg
pop
pop
xchg
jnp
or
iret
dec
test
sub
xchg
negl
adc
repnz
mov
dec
jmp
mov
mov
enter
xor
jnp
lea
fildll
xlat
inc
iret
rorb
js
or
loop
dec
fdiv
les
enter
sbb
push
repz
sub
imul
inc
ss
dec
jb
fs
ss
clc
pushf
or
js
mov
and
xor
lret
arpl
push
cmc
dec
mov
mov
xor
pop
aam
ret
xor
mov
mov
or
cmp
enter
fxch
enter
in
es
adc
test
or
and
cli
lods
xchg
hlt
out
push
movsb
sbb
dec
mov
dec
repnz
mov
xor
int3
mov
loop
aam
jp
fsubr
xchg
and
fidivl
hlt
sbb
mov
cltd
cmp
popa
pop
stos
mov
cld
mov
jno
outsb
mov
sahf
add
jg
negb
cmc
add
ja
std
or
call
iret
sbb
push
imul
repnz
or
setb
pop
inc
cmpsl
daa
push
sbb
aad
mov
or
adc
jmp
out
inc
push
pop
test
fs
insb
jl
std
xchg
add
mov
fistps
push
or
cltd
pushf
in
scas
paddd
out
adc
test
push
sbb
mov
adcb
adc
mov
adc
push
loop
popf
mov
mov
test
push
xor
out
xor
jmp
adc
loop
dec
sub
lret
dec
sti
rolb
mov
call
stc
adc
fstpt
sub
in
call
jae
iret
push
daa
aam
cmpsl
xchg
jno
mov
pop
and
es
and
jmp
sub
jp
mov
stc
push
adc
mov
dec
in
or
shlb
mov
lcall
xlat
jecxz
push
adc
xor
mov
leave
imul
dec
xchg
jno
sbb
je
cmp
jb
cmp
in
adc
in
add
loop
sub
inc
cld
xor
leave
inc
inc
add
daa
inc
add
mov
add
in
lock
mov
push
scas
int3
cmpsl
imul
jo
xchg
jge
jo
std
mov
decl
popf
insl
jne
aad
jp
movsb
rcr
es
fwait
cmp
jle
lock
fdivrl
fs
hlt
das
adc
fs
mov
push
cmp
mov
outsb
and
push
push
outsb
dec
and
popa
lahf
icebp
or
push
xchg
mov
je
push
pop
dec
adc
xchg
cmp
les
imul
or
sbbl
movsb
ljmp
ljmp
rcrb
ljmp
add
cmp
leave
fs
iret
xor
stos
je
testl
repz
sbb
sbb
gs
jne
xchg
mov
aas
cmc
push
pop
ljmp
cld
adc
call
mov
sbb
mov
sub
push
jp
adc
lds
test
mov
adc
dec
dec
pop
jbe
push
inc
pop
cmc
idivb
adc
ficoml
xchg
je
movsb
add
jle
push
pop
jle
push
adc
cld
mov
mov
mov
pop
out
in
dec
das
xor
or
sub
adc
fmull
outsl
je
movsl
lcall
fs
pop
rorl
jl
or
add
repnz
lds
je
out
roll
std
mov
pop
push
xchg
xor
dec
sbb
jmp
dec
fistps
cmp
sbb
jno
cmpsb
xor
ja
scas
in
xchg
insb
mov
int
rcll
or
test
into
mov
dec
insl
adc
lret
mov
mov
mov
loopne
mov
dec
ljmp
test
fcmovu
jnp
push
jo
hlt
add
fidivrs
cmp
or
enter
sbb
mov
mov
out
inc
push
xor
jae
inc
imul
inc
cmpsb
fbstp
mov
fs
pop
jmp
inc
adc
ja
push
dec
or
jae
addr16
dec
insl
sahf
xchg
lahf
xor
push
mov
rcll
sahf
pop
push
inc
loope
xor
sarl
add
push
dec
in
mov
xor
sti
cs
movsl
mov
iret
jbe
lret
mov
mov
pop
jnp
jp
fcmovnb
clc
sbb
inc
xchg
subl
jmp
and
cmp
aas
test
addr16
lods
clc
and
cmp
cld
mov
pop
cli
dec
ljmp
popw
out
sbb
and
xchg
mov
adc
mov
daa
xchg
cwtl
cld
out
mov
ja
fcomip
sbb
cwtl
ds
bound
paddsb
xchg
call
cmpsb
push
icebp
sbb
bound
xchg
loopne
sbb
inc
jle
es
or
xchg
loop
jp
sub
mov
lahf
mov
add
call
jl
sbbl
dec
mov
std
add
inc
addr16
stos
out
dec
insb
and
push
push
mov
pop
add
movsl
test
ss
and
pop
test
xor
fisubl
mov
out
dec
es
fnstenv
loop
xchg
pushf
pop
addl
push
clc
sub
push
add
mov
xor
and
mov
push
mov
addl
add
jmp
mov
cltd
or
or
data16
push
jmp
jge
jo
test
fld
call
adc
incl
loope
addr16
add
dec
xchg
dec
inc
aad
or
push
or
xor
aam
lret
sbb
filds
int3
mov
dec
cwtl
lods
mov
add
mov
mov
xchg
pop
inc
pop
xor
cmpsl
outsb
sbbb
lea
cmp
or
inc
xor
jb
mov
cmc
dec
repz
mov
bnd
into
outsb
sbb
jae
movsl
and
push
repz
cwtl
loop
lret
fisubl
adc
sbb
cltd
imul
cmp
push
mov
xor
adc
loope
aas
int
jp
aaa
cmp
cmpsl
ret
scas
or
inc
xchg
cmp
imul
adc
in
xchg
bound
outsb
cmp
cmp
das
xor
mov
mov
push
test
cmp
adc
in
sub
xorl
pusha
outsb
add
and
xchg
cs
loop
shr
push
sbbl
int
js
aas
sbb
pop
dec
loop
lahf
add
inc
jno
sbb
mov
pop
mov
arpl
mov
out
jno
jl
push
xor
xchg
loop
xlat
adc
clc
addr16
dec
jecxz
jne
mov
add
in
jge
lret
and
xchg
nop
and
push
jno
mov
aaa
add
call
dec
das
enter
shll
add
pop
lret
xor
cwtl
fiadds
xor
push
jmp
daa
test
test
repz
xchg
add
xchg
xchg
push
ret
xchg
push
cmp
in
inc
ret
scas
push
inc
clc
out
aas
icebp
data16
pop
jmp
aad
les
shll
ret
das
push
mov
add
xchg
aaa
fsubrs
mov
mov
xor
adc
lods
and
divl
out
fistpll
jle
nop
pusha
scas
jl
push
and
negl
jb
fadds
cli
mov
in
int3
popa
mov
xorl
loope
mov
adc
movsl
js
pop
cmpsb
sub
cmpsb
in
or
repnz
mov
mov
ror
add
jmp
sbb
out
jmp
daa
jle
fmul
dec
test
stc
arpl
sbb
js
pop
cmp
or
push
rcrl
shlb
std
gs
add
pop
jno
jb
mov
and
imul
cmc
xor
mov
ret
imul
into
push
or
mov
fmuls
xchg
ljmp
out
dec
movsb
adc
sub
movsb
in
mov
sub
cmp
push
cs
fprem1
in
jo
aas
test
pushf
xchg
ds
or
sub
outsb
push
push
pushl
push
mov
and
out
enter
mov
in
inc
stc
fmuls
ljmp
cmp
jo
cmp
dec
xlat
mov
clc
sub
xor
stc
sbb
xchg
ret
arpl
adc
out
call
xor
or
inc
cmp
dec
jne
lds
iret
cld
dec
ret
ret
cmpsb
mov
int
mov
xchg
add
pop
push
add
je
and
mov
sbbl
mov
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
push
push
pushl
push
call
jmp
mov
sub
add
xor
adcl
add
movl
cmp
ja
push
jmp
mov
mov
jmp
mov
in
inc
sub
mov
jo
jge
jo
dec
jbe
into
ret
jno
aaa
and
add
xchg
pop
lahf
inc
popf
sahf
insl
outsb
cmp
pop
aas
sbb
adc
pop
inc
out
or
push
sahf
loopne
das
xchg
movsl
pop
xchg
loop
pop
jbe
out
inc
faddl
cltd
push
aas
in
add
mov
je
iret
dec
sub
xor
or
nop
xchg
or
aas
sbb
add
stc
pusha
out
and
loopne
call
shll
movsl
adc
in
xlat
outsl
xor
jg
popa
mov
imul
dec
ds
dec
aad
jno
sbb
int3
std
xor
leave
test
mov
push
decb
sub
or
sub
orb
or
adc
jg
sbb
sub
mov
cld
xchg
icebp
aaa
dec
je
jecxz
inc
mov
mov
in
cwtl
sti
repnz
repnz
movsb
pop
cmp
xchg
lcall
mov
mov
faddl
and
loop
movsb
movsb
push
adc
pusha
xor
adc
jnp
mov
inc
into
sub
add
push
aad
in
sub
pop
push
mov
xor
aas
push
arpl
sub
pusha
sub
cmpsb
arpl
cmp
xchg
sbbb
cmp
and
cmp
fmuls
mov
daa
inc
addr16
aas
mov
cltd
imul
xlat
sub
inc
movsb
and
cmp
call
mov
mov
fldcw
add
xchg
mov
lds
mov
pushf
jo
movb
sub
fnstcw
push
pop
sbb
cmp
mov
or
imul
scas
push
and
pop
dec
mov
iret
mov
les
dec
gs
sub
in
sahf
mov
fildl
pop
jae
call
adc
ja
stos
popf
jo
jge
lcall
add
dec
nop
icebp
ret
lahf
fldcw
or
mov
ret
sbb
jne
pop
rol
jb
sub
adc
jns
movsb
sarb
xchg
dec
mov
scas
mov
jp
sub
cmpsw
pop
xlat
mov
xchg
enter
lock
or
shll
xchg
test
pop
seto
pop
jge
dec
loopne
jo
enter
test
aad
sub
mov
ror
pop
and
jbe
and
pusha
hlt
das
mov
fucomp
dec
jo
aam
adcl
add
jmp
adc
cmp
pop
inc
scas
jnp
and
mov
adc
test
cmp
inc
lret
push
xlat
xlat
std
ja
lods
scas
and
lret
xchg
jg
lret
leave
outsb
sub
cwtl
xchg
fisubrs
cmp
or
sarb
test
jae
dec
ljmp
mov
inc
add
int3
mov
dec
stos
je
xor
rolb
sub
cmp
or
sahf
es
pop
shrl
repz
cltd
push
ret
jns
fbld
scas
icebp
sub
adc
stos
sbb
stos
push
iret
mov
mov
mov
ret
cwtl
add
push
sahf
loopne
loop
les
mov
jmp
cs
loopne
in
jnp
jmp
push
xor
jo
jge
jo
in
lock
sahf
lods
pop
xchg
rcl
subl
imul
inc
sahf
push
mov
pop
push
dec
rorb
lcall
mov
aas
inc
shl
dec
dec
in
int3
xchg
imul
in
das
dec
hlt
ret
sub
and
sahf
xor
sti
outsb
int
lods
and
test
loopne
popa
cmp
loop
adc
inc
pop
jb
scas
sbb
loope
xchg
movsl
jbe
imul
mov
test
sbb
and
xchg
mov
cmpsl
in
jne
in
lret
xchg
sub
xchg
arpl
pop
push
dec
add
push
test
adc
mov
ret
iret
sub
outsb
sbb
insb
and
pop
mov
add
lret
test
push
dec
aad
data16
fldt
movsb
pop
xor
xchg
test
inc
dec
add
iret
imul
inc
test
cmpl
cltd
fildl
das
xchg
lods
and
call
pop
push
xchg
std
dec
lods
ret
mov
repnz
xlat
xlat
bound
cld
mov
cmp
mov
pop
jnp
test
push
xchg
mov
lods
pop
sarb
das
loopne
rorl
ret
mov
scas
enter
out
xlat
rcll
ss
push
sti
lods
hlt
pop
mov
loop
add
mov
sahf
outsl
repz
mov
mov
adc
and
cmp
mov
jnp
cmp
insl
insl
mov
jbe
outsb
sub
lods
daa
ljmp
jmp
adc
add
pop
data16
pop
push
pop
xchg
inc
xor
mov
popa
imul
int3
test
jo
mov
xchg
aad
jnp
or
fldcw
sub
dec
mov
dec
out
test
orl
mov
outsb
mov
mov
or
loopne
fwait
and
lods
and
push
cltd
xchg
xor
aad
movsl
adc
lea
gs
dec
mov
repnz
imul
dec
push
and
fsubrs
rcrl
xorb
cs
push
imul
enter
jle
jb
ror
pop
dec
push
imul
xchg
xor
stos
clc
and
pop
sub
cli
jbe
xor
cltd
test
jne
scas
pop
call
ficoml
mov
gs
inc
push
stos
inc
and
pop
push
nop
insl
dec
xor
add
and
ljmp
mull
jne
push
mov
orb
mov
mov
ficoml
sub
cmp
aaa
rcrl
inc
push
push
iret
enter
cmc
or
fsincos
push
push
test
icebp
aas
sti
test
loopne
inc
xor
pop
fdivrl
out
mov
loopne
cmpsl
jecxz
inc
jg
pop
xchg
les
sbb
pop
add
outsl
adc
dec
pushf
addl
dec
test
test
loopne
int3
jns
sbb
pop
test
push
in
sub
xchg
hlt
add
mov
std
sbb
jb
aad
imul
aad
dec
test
mov
test
adc
lcall
push
sbb
dec
push
ret
andnps
push
or
push
mov
xor
jmp
data16
in
int3
jne
popa
jno
imul
xchg
ds
jo
fstl
ja
mov
enter
ret
jne
cmp
inc
js
push
cs
dec
sbb
aas
inc
cltd
test
or
jmp
leave
push
push
mov
enter
sbb
cmp
sarl
fiadds
and
adc
loope
roll
dec
jle
cwtl
notb
jno
mov
int
push
inc
sti
sub
or
bound
xlat
xchg
xchg
arpl
inc
js
xor
or
mov
push
loop
leave
xchg
in
ljmp
cmp
ret
cltd
jl
mov
dec
mov
jo
movsb
loopne
out
adc
call
xor
jecxz
push
jecxz
call
jb
movsl
xchg
jecxz
rcrb
mov
dec
push
xor
rol
in
outsb
movsb
and
sub
pop
cltd
in
xchg
sbb
repnz
test
pop
jne
mov
sub
jl
divl
roll
push
mov
or
movsb
sbb
or
mov
fcompl
mov
mov
push
pop
popa
pop
mov
or
fstpl
or
repz
push
stc
popa
pop
mov
pop
jmp
jb
fildll
sbb
in
test
push
hlt
adc
jg
pop
int
sbb
in
mov
mov
lds
inc
jge
add
push
sub
int
push
xor
inc
inc
movsl
push
jl
fcomip
jne
sbbl
xor
icebp
mov
lcall
jb
scas
cltd
xchg
sbb
mov
lods
daa
push
pusha
nop
insl
lds
cmpb
in
jl
cld
into
push
inc
sub
jp
movsl
loop
dec
sbb
ficompl
ret
adc
push
mov
imul
aad
jb
pop
xor
lcall
inc
inc
sbb
xchg
or
add
icebp
fimuls
in
and
mov
imul
jo
aam
lea
fcoml
pop
ror
jne
stos
sti
ret
sbb
cmp
repz
cli
aam
nop
cmp
inc
mov
xchg
inc
sti
pop
inc
mov
xor
pop
loope
xorb
inc
xor
roll
inc
and
leave
outsl
mov
std
nop
mov
jnp
lret
outsb
movsl
std
sbb
xchg
or
popa
loop
inc
xchg
add
idivl
adc
mov
ljmp
mov
jecxz
test
iret
loope
stos
or
inc
xchg
cvtps2pd
test
push
sbbl
fidivl
mov
xchg
push
or
pop
mov
into
sbb
ret
dec
push
pop
out
push
call
test
in
std
fidivl
pop
push
out
negl
lds
xlat
xchg
xchg
inc
das
jbe
sbb
jp
mov
mov
iret
dec
ret
pop
sub
lcall
stos
nop
sbb
js
and
cwtl
mov
iret
xor
pop
xor
add
inc
aad
jb
jl
jl
push
xor
push
xchg
fs
fstpl
movsl
cld
adc
push
or
xchg
add
sahf
mov
frstor
mov
pusha
cmpsl
push
out
mov
cmp
and
out
stos
cmpsb
push
add
dec
jb
pop
nop
mov
add
mov
imul
mov
jmp
jle
mov
xchg
icebp
repz
push
or
jo
jge
jo
mov
mov
mov
xchg
sbb
mov
out
sbb
test
cmp
leave
aaa
inc
add
fdivs
outsb
push
pop
pop
aaa
add
lcall
push
faddl
lds
push
sti
mov
lods
fucomip
push
add
stos
xor
leave
mov
lods
push
aaa
xor
dec
bound
adc
das
icebp
rorl
std
pop
cli
pop
or
or
dec
mov
mov
sub
mov
sub
aaa
rcrb
int
mov
sbb
xor
mov
in
or
jmp
js
repz
insb
je
inc
movsb
stos
sti
xorl
mov
lea
movl
push
leave
lds
pop
dec
repz
mov
push
or
sbb
mov
icebp
enter
cmp
xchg
cmp
xchg
push
lahf
and
cmp
jne
jecxz
and
mov
cmp
push
roll
mov
mov
inc
mov
cli
inc
mov
adc
xchg
mov
fcompl
xor
test
scas
stos
sbb
xchg
test
pop
mov
out
xchg
adc
xor
jecxz
test
add
imul
adcb
shll
mov
jno
pop
aaa
cmpsl
es
stos
outsl
mov
stos
pop
cmpsb
mov
xor
addl
fdivrs
push
imul
insb
mov
fdiv
inc
jecxz
dec
or
mov
inc
jp
push
push
imul
mov
int3
dec
mov
mov
outsb
shr
push
fwait
lret
repnz
mov
jg
cmc
sub
out
xor
xchg
add
dec
lret
add
mov
test
das
pop
data16
sub
das
and
aad
xlat
arpl
add
aaa
xor
mov
xchg
scas
add
add
sbb
add
imul
cmp
enter
mov
or
stc
pop
push
push
mov
fcoml
mov
lahf
adc
mov
rcl
pop
sbb
mov
pop
jbe
idivl
xlat
xchg
leave
mov
jl
pop
jmp
cltd
sti
pop
int
mov
xchg
pop
test
push
jbe
inc
push
jo
icebp
gs
or
push
std
xchg
push
mov
out
stos
rorb
repz
xchg
mov
adc
dec
lock
push
stos
mov
push
xor
dec
repnz
gs
push
dec
loope
xor
pop
cmp
cltd
nop
orb
xchg
sbb
sbb
std
fdivr
and
sub
jmp
add
jb
xor
and
mov
xlat
loopne
sub
add
in
push
mov
mov
adc
and
test
or
loop
call
shr
fcomps
xchg
sarl
jl
push
mov
push
popf
shr
pushf
mov
out
dec
or
push
stos
adc
clc
sarb
jmp
lret
cmp
fmuls
cld
mov
push
in
ljmp
mov
mov
mov
xor
lea
mov
xor
mov
sub
add
cmp
jbe
pop
mov
pop
pop
leave
ret
push
mov
sub
mov
movl
cmpl
je
cmpl
jne
push
pushl
call
mov
dec
mov
jmp
mov
add
mov
xor
mov
adcl
add
movzbl
sub
movzwl
adc
mov
and
movb
xor
or
xor
mov
lea
movl
cmpl
je
cmpl
jne
push
push
pushl
push
push
call
mov
dec
mov
jmp
mov
mov
adc
mov
xor
sub
andl
mov
movl
cmpl
je
cmpl
jne
push
pushl
push
pushl
call
cmpl
jne
xor
xor
dec
mov
mov
dec
mov
jmp
and
movl
movl
add
mov
or
mov
jmp
and
pop
icebp
jae
lods
imul
les
jo
jg
jo
mov
jbe
je
and
mov
mov
imul
mov
jne
jnp
imul
in
adc
ljmp
lret
add
leave
outsb
sbb
lahf
push
cltd
pop
push
roll
test
pop
xor
pop
adc
test
push
dec
inc
dec
or
fxch
cmpsb
and
aaa
and
add
lds
xchg
cs
pop
jns
ds
cmp
or
cs
fs
lret
xchg
add
pop
imul
stos
in
cs
lods
imull
cmp
mov
sub
into
xchg
push
dec
push
pop
or
pop
and
dec
in
jmp
lods
xor
mov
xor
icebp
movsb
test
popf
sub
pushf
mov
jns
mov
or
jmp
out
into
cmp
leave
adc
stos
sub
jno
mov
loope
cltd
stos
mov
push
fs
hlt
jns
stos
into
in
xchg
push
inc
xor
mov
sbbl
add
movl
jmp
movl
mov
mov
inc
cmp
jmp
sbb
movsb
scas
xchg
sub
insb
arpl
nop
xchg
sbb
jo
ss
xor
xacquire
sub
and
movsb
data16
pusha
mov
dec
icebp
xchg
jnp
xchg
cmpsl
xor
dec
mov
mov
sub
or
sbb
fistpll
xor
dec
add
cmp
addr16
pop
add
je
jl
pop
aam
sbb
popf
or
inc
or
add
jns
pushf
cltd
or
outsl
sbb
sti
loopne
fimuls
or
dec
sub
inc
dec
and
shll
popa
sub
test
fisttpll
in
mov
sbb
shr
in
adc
pop
pop
addr16
push
nop
lods
aam
adc
les
in
aam
pop
in
imul
mov
test
inc
icebp
push
fistpl
pop
mov
and
faddp
jo
push
sbb
int3
dec
mov
jnp
loopne
xchg
leave
dec
adc
xchg
shlb
popa
push
xor
ds
xchg
xor
jg
dec
pop
jo
jno
repz
pop
mov
dec
insl
shl
stos
mov
decl
sbb
add
add
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jne
pushl
call
cmpl
jne
xor
add
inc
mov
jmp
mov
xor
add
cmp
jmp
inc
sub
xorb
jmp
inc
mov
add
sbb
jo
jg
jo
mov
mov
and
mov
mov
into
sub
insl
imul
les
cmp
pusha
out
push
popf
cwtl
cld
cli
popf
sahf
xor
loop
loope
xchg
fisubrl
out
ret
and
xor
cmp
xor
pop
insb
push
jae
push
lea
push
mov
loopne
mov
test
inc
adc
xor
inc
xchg
fldenv
sti
mov
xlat
movsb
aas
mov
xchg
movsb
lret
or
inc
rcll
mov
mov
sbb
push
bound
call
add
out
movsb
stos
cs
pop
or
insb
mov
ror
inc
lcall
mov
jnp
jo
pop
sub
pushl
pop
pop
mov
je
push
xchg
xor
fs
mov
daa
xchg
sbb
mov
ficoml
adc
dec
jns
aad
dec
sub
xor
fdivrs
and
xchg
testl
and
xchg
xor
je
push
push
mov
mov
xor
mov
add
movzwl
mov
mov
movzwl
xor
add
mov
mov
mov
inc
cmp
jne
pop
jmp
cmpsb
fisubrl
jmp
repnz
jo
sbb
jo
das
xchg
sbb
movsl
or
fs
cli
into
sbb
pop
mov
test
jnp
cmp
sbb
lods
pop
popa
repz
sbb
mov
and
cwtl
or
xor
les
and
cmp
add
sub
mov
ror
fists
sbb
mov
leave
or
mov
popa
mulb
mov
xchg
cmp
and
sbb
imul
push
cs
mov
js
cmp
jg
mov
in
mov
jns
mov
jno
inc
movsb
jno
cmp
into
popa
xor
lea
mov
dec
arpl
mov
test
loopne
mov
rcrl
shrl
pushw
outsb
es
jo
aad
dec
push
mov
lret
pop
repz
cld
fildl
xor
ja
push
in
mov
and
dec
shr
mov
clc
adc
rorl
rcrb
push
insl
popa
mov
shr
iret
aaa
fmuls
iret
notl
pop
mov
pop
mov
mov
jmp
aaa
insl
pop
int3
push
jb
jno
pop
imul
sbb
sbb
jo
andl
mov
inc
push
sbb
ret
mov
push
push
xchg
and
cmp
mov
add
jp
mov
pop
test
dec
pop
stc
movsb
dec
dec
mov
push
in
pop
inc
insl
push
fadds
lods
dec
xor
stos
mov
test
push
add
ret
stc
fsts
or
xor
or
daa
fistpl
dec
inc
cmpsl
nop
dec
jo
shll
enter
mov
inc
add
sti
mov
mov
xor
dec
jnp
cmp
sbb
or
hlt
jmp
sarb
ljmp
pop
adc
clc
movsb
decb
adc
cltd
cmp
outsb
xchg
or
out
shr
scas
xchg
dec
pop
push
add
push
js
cmp
bound
xlat
psubusb
ret
inc
mov
insb
cmp
fld1
or
mov
mov
mov
and
dec
add
xor
sub
in
mov
clc
xchg
aas
or
fimull
roll
mov
mov
xor
add
jmp
ffree
adcb
mov
aaa
xor
jo
sbb
jo
cld
add
jns,pn
xor
icebp
or
pusha
push
fldl
mov
rcr
sbb
stos
pop
insb
in
add
lcall
push
pop
fildl
cld
or
jbe
into
jnp
loope
gs
mov
push
pop
aas
decb
cmp
jb
incl
pcmpgtw
push
es
mul
adc
pop
xor
out
jg
loop
popf
pop
xchg
xchg
xor
stos
jl
and
dec
mov
imul
mov
shll
mov
in
jns
pop
push
bound
out
dec
adc
cmp
sub
lock
cmpsb
hlt
inc
push
enter
mov
push
or
lret
call
cltd
into
aas
mov
and
fldcw
fwait
adc
xchg
inc
push
popa
lret
aas
aam
xor
or
cld
pop
cmp
add
pop
mov
js
lcall
sbb
aas
lcall
xor
add
cld
shrl
scas
into
testb
add
add
insl
bound
xchg
adc
mov
mov
mov
mov
cmp
je
mov
mov
jmp
scas
or
repz
test
rcll
cmp
sbb
jo
dec
jl
iret
jo
nop
lea
cli
fisubrs
int3
test
xor
fnstsw
repnz
out
mov
pop
imul
fcoms
lret
fdecstp
adcl
pop
mov
xchg
out
sub
xor
xchg
jmp
inc
lret
sti
shll
lods
pushf
mov
mov
out
xchg
xor
sub
mov
jbe
jno
test
in
jmp
mov
push
push
popa
fcoml
or
jecxz
imul
popa
xchg
outsb
xorb
cmp
xchg
lret
in
pusha
and
int
out
cmp
or
lcall
sti
js
out
xor
orl
int
mov
repz
xchg
cmc
sbb
adc
adc
push
or
xchg
cmp
ljmp
inc
xchg
mov
imul
adc
pop
fimull
and
mov
ficoms
addr16
mov
fstps
dec
xorb
icebp
loopne
mov
cmp
jne
mov
jmp
dec
push
test
xor
popa
jns
pop
inc
inc
test
jo
sbb
jo
sbb
mov
dec
test
bound
mov
subb
sbb
pop
mov
movsb
aad
adc
nop
lods
arpl
lea
or
xchg
iret
adc
jbe
push
mov
mov
mov
into
cs
jle
jg
cmpsb
xchg
repnz
cmc
out
dec
jle
push
stos
sub
inc
lods
lea
sbb
je
fnstcw
outsl
sub
lds
inc
sbb
cmpl
cmp
mov
adc
cmp
pushf
fldt
push
cltd
rcrl
insl
bound
leave
insb
xor
lds
pop
in
je
arpl
mov
mov
jnp
hlt
or
fst
ret
fisttpll
iret
rcll
and
mov
jg
mov
ja
mov
mov
in
popf
shl
fwait
push
fmull
or
sarb
stos
pop
sbb
push
test
fs
iret
bound
cld
dec
test
mov
movsbl
xor
add
cmp
jmp
mov
gs
nop
sbb
dec
jb
and
jo
lahf
cmpsl
push
stc
jecxz
stc
jne
sbb
es
jge
and
or
pop
dec
pop
add
fwait
xor
adc
lcall
or
xchg
inc
jmp
add
repnz
arpl
std
js
insl
xlat
cmp
mov
or
sub
cmpsb
in
into
push
repz
push
into
mov
cmp
or
icebp
es
nop
cmpsl
rcrb
push
pop
call
mov
sbb
mov
and
xchg
in
mov
lods
gs
add
clc
bound
xchg
pop
sbb
movsb
aaa
lods
push
int3
mov
push
mov
sarl
push
mov
inc
orl
mov
stos
negb
stc
shrl
push
shll
adc
dec
aaa
cmp
and
fstps
pushf
jns
sub
add
out
loope
dec
xchg
fistl
int
dec
mov
mov
or
jl
lahf
in
sbb
lods
inc
mov
or
test
je
movl
jmp
aaa
dec
rcrl
jno
repz
enter
test
push
and
jo
jg
jo
mov
cmp
add
sub
cs
xchg
test
lock
push
mov
xchg
stos
cmp
jle
cmp
icebp
add
adc
cltd
mov
sbb
or
out
pop
cmpsl
mov
mov
xchg
es
and
rcrl
roll
mov
jecxz
sbb
dec
scas
mul
and
cltd
jnp
sub
xchg
dec
lds
sbb
pop
leave
lock
sbb
loope
imul
mov
movsl
movsl
push
aad
idiv
loope
sub
repz
jne
lahf
orl
and
sub
and
idivb
repz
test
rorb
cmp
popf
push
fistl
mov
stos
mov
pop
cmp
lahf
push
mov
mov
pop
dec
ror
sarb
pop
xchg
orl
scas
lods
or
outsb
add
jns
push
mov
cmp
mov
mov
loopne
push
xchg
and
je
addr16
shl
lea
mov
mov
addl
mov
mov
xor
lea
mov
jmp
mov
addl
jecxz
or
jl
jo
sbb
jo
mov
jno
out
pop
inc
inc
ret
jg
push
mov
out
icebp
test
sub
pop
cld
out
std
test
or
mov
push
inc
or
mov
out
gs
nop
cs
mov
iret
cmc
ds
xlat
push
ljmp
inc
shrl
mov
cmpsl
mov
mov
sti
push
sub
nop
hlt
jp
xchg
in
mov
outsl
mov
pop
add
and
ljmp
lcall
bound
inc
call
in
push
dec
sbb
pop
aam
out
sahf
roll
inc
mov
lret
loop
jg
mov
in
or
mov
ljmp
pause
jo
das
push
jnp
rcll
loopne
jge
sbb
lock
test
jae
inc
icebp
jecxz
into
popfw
push
cld
adc
repnz
repnz
or
ja
jg
notl
jmp
rclb
jbe
fbld
js
push
cmp
dec
mov
incl
jmp
jmp
cmp
xor
sarl
cld
cwtl
mov
jo
jg
jo
cltd
inc
faddl
pop
roll
test
fcmovne
add
sti
mov
cmpsl
addr16
aaa
ss
push
and
sti
int
scas
loop
mov
std
mov
cmp
push
icebp
ja
jp
xor
and
mov
xchg
xchg
insl
ret
xchg
jno
add
lahf
aam
cwtl
jno
psubusb
xor
pop
test
dec
dec
dec
or
or
data16
sub
les
cli
xchg
jecxz
pushf
push
add
mov
dec
dec
aas
inc
cwtl
mov
inc
stos
add
pop
xchg
and
inc
mov
push
cmpsl
std
xchg
adc
mov
sub
cli
shrl
roll
inc
pop
outsb
loope
mov
mov
scas
and
mov
arpl
xor
xor
jle
enter
push
lods
sub
es
mov
mov
cmc
jecxz
mov
mov
or
int3
rclb
cmp
inc
fiaddl
clc
add
inc
and
ja
cmp
loop
leave
ret
inc
cmpsb
xor
cmpsb
and
mov
xor
mov
add
jmp
pop
adc
mov
es
xor
int3
and
sbb
jo
shlb
xorb
movsb
lret
aam
xor
ja
int3
hlt
mov
cmp
scas
call
mov
xor
loopne
lret
push
data16
ret
xor
add
dec
sub
hlt
cs
jns
ds
inc
dec
xchg
xor
adc
shrl
pop
stos
sti
and
jmp
lods
stos
cmpsl
fimull
mov
mov
inc
dec
and
mov
fwait
ja
aaa
loop
je
pop
xchg
xchg
jns
pop
out
leave
ret
inc
jo
js
pop
mov
add
mov
std
into
inc
or
push
sbb
fidivs
jecxz
mov
jmp
pop
adc
mov
dec
or
sbb
data16
pop
rolb
aam
mov
push
stos
je
sarl
fstl
aas
jg
xchg
sbb
mov
hlt
xchg
shll
ror
jl
ja
ret
jae
adc
test
inc
lret
jl
pop
negb
sbb
sar
stc
pop
mov
je
js
inc
xor
mov
xchg
xchg
push
popf
mov
pop
leave
ret
push
mov
push
push
subl
movl
movl
andl
xor
add
inc
mov
cmpl
jne
pushl
pushl
push
push
pushl
push
push
pushl
pushl
push
push
push
pushl
call
cmpl
jb
neg
mov
push
xor
mov
mov
xor
xor
mov
adcl
jmp
popa
sahf
cmpsl
mov
jno
mov
mov
jo
fnstcw
jo
movsb
and
shlb
sbb
sub
ds
adc
das
or
popa
inc
loope
out
enter
popf
cltd
dec
ljmp
cmp
mov
jbe
in
popl
ret
insl
pop
std
out
stos
pop
and
lock
mov
clc
sub
jecxz
in
test
xchg
fidivrl
fs
lock
cwtl
adc
inc
call
jge
pop
imul
jbe
mov
mov
jb
add
out
cmpsb
fisttps
ja
pop
mov
dec
pop
mov
sbb
cli
pushf
and
test
clc
or
adc
cmp
sti
xor
cld
data16
ret
call
add
dec
xchg
pusha
jp
lret
mov
sbb
inc
cmpsb
xchg
inc
fcoml
ret
loop
inc
cmc
lock
sub
push
adc
inc
mov
push
lcall
daa
mov
jle
out
adc
mov
push
pop
test
pop
repnz
mov
xchg
xorb
sub
pop
add
out
mov
jno
in
jmp
dec
and
xchg
add
and
push
xchg
in
ja
mov
stos
popa
jmp
popa
push
clc
fs
dec
out
fwait
inc
xchg
adc
loopne
and
lea
pop
loop
push
xchg
xchg
fs
sbb
mov
data16
push
sbb
arpl
out
sbb
add
pop
cltd
adc
jne
sahf
cmp
insl
push
pop
mov
int3
and
in
sub
push
vpsraq
fdivrs
ss
jne
and
xchg
mov
divb
dec
sbb
push
inc
lds
push
hlt
add
hlt
mov
je
inc
or
leave
pop
repz
out
mov
bound
iret
in
or
jl
pusha
rorl
pushf
mov
pop
cmp
push
xor
and
jo
aas
and
push
mov
pop
inc
sarl
cli
cmp
pop
movsl
xchg
add
cmp
ja
dec
jno
sub
xor
js,pt
add
xorl
add
imul
movl
mov
movl
cmp
movl
jne
mov
mov
xor
jmp
test
cmp
push
popa
andl
adc
pop
sub
pop
sub
jo
xor
mov
in
push
idivl
pop
or
stos
push
jbe
and
loopne
push
daa
popl
push
dec
js
push
call
call
mov
fcmovb
cmpsl
loope
fwait
lea
jmp
aad
xor
push
add
cmp
popa
movsl
and
in
scas
popf
std
cltd
jmp
push
pop
xchg
notl
loopne
add
push
mov
in
sbb
fs
pop
sbb
push
xchg
pop
cwtl
call
and
xlat
testb
lea
push
aas
call
mov
out
or
jp
sub
cmp
fbld
cmp
lods
xchg
fisttpl
dec
jmp
shrb
ret
and
sbb
lods
push
dec
mov
cmpsl
rcrb
mulb
int
add
lods
ljmp
ret
mov
sbb
pusha
mov
rcr
mov
mov
xor
sbb
or
imulb
pop
or
push
enter
pop
xchg
cmp
iret
loop
push
fimull
movsb
sub
xor
dec
push
jle
and
arpl
rcll
push
inc
movsb
fdivl
xor
xchg
hlt
mov
inc
leave
xchg
dec
shrl
cltd
xchg
jbe
ret
mov
ss
rorl
loop
out
shlb
scas
mov
dec
cmp
pop
in
int
mov
aam
jbe
or
jno
mov
fisubrs
lea
lea
push
inc
fwait
inc
lds
add
ret
mov
dec
jp
mov
iret
jecxz
sbb
sub
stos
adc
mov
jge
mov
std
int
scas
mov
lods
mov
add
add
rolb
or
push
inc
fwait
ror
push
add
out
pop
dec
stos
pusha
rolb
clc
sub
mov
push
iret
mov
pushf
lock
call
dec
mov
pushf
xchg
hlt
fwait
lds
in
sub
dec
dec
mov
cmp
stc
xchg
dec
mov
ret
ficoml
cld
or
jo
rorb
sbb
repnz
add
imul
jmp
mov
mov
mov
mov
mov
xor
xor
add
jmp
shll
add
ret
loope
and
sbb
jo
jle
jo
and
mov
sbb
push
cmp
mov
pop
xor
sar
imul
ret
ret
xchg
sbb
fbstp
xchg
pop
pop
popa
mov
xor
sbb
stc
pop
jns
sub
ret
mov
mov
lds
test
int3
outsb
push
test
insl
rolb
imul
adc
sbb
mov
jno
andb
mov
ljmp
into
push
cs
sub
jp
and
jae
mov
cmpsb
movsb
fcoms
sbb
adc
repz
jl
lea
movsb
std
dec
mov
rcll
mov
dec
aas
jb
movsb
jl
out
lret
pop
cld
ss
mov
sub
scas
out
out
add
jge
mov
push
idivb
inc
lahf
push
aad
xchg
scas
mov
and
pop
imul
pop
dec
adc
stos
jmp
mov
repz
test
les
or
into
mov
and
xor
repz
jge
or
sub
js
xchg
xchg
inc
dec
or
jo
push
pop
dec
mov
mov
imul
ds
iret
jl
adc
fs
or
xor
call
loop
shlb
mov
mov
gs
out
push
dec
lahf
mov
fldenv
rclb
sub
cmp
repz
mov
popf
lret
or
xchg
add
pcmpgtb
push
cmpsl
add
xor
inc
gs
xchg
fcoml
cmc
inc
xor
add
cmp
cld
push
sbb
push
jbe
jl
xor
fists
sbb
dec
scas
adc
fdivrs
movsl
in
mov
cmp
pop
fdivrs
hlt
mov
rcrb
cmp
lods
addb
cmp
mov
out
cmp
jns
jmp
or
push
cli
loop
mov
sti
sahf
fnsave
or
gs
mov
or
notb
mov
nop
sbb
out
pop
sbb
jl
or
mov
add
imul
mov
cmp
mov
je
xor
add
mov
imul
add
mov
mov
pop
leave
ret
push
mov
push
movl
mov
mov
mov
adcl
xor
add
andl
mov
mov
mov
sub
xor
mov
dec
xor
dec
jmp
loope
xchg
fdivs
jno
addl
jns
sub
les
jo
stos
out
lock
leave
jl
mov
sub
lea
test
add
pop
inc
into
xchg
repz
sub
fwait
sbb
movsl
adc
sub
lods
imul
sbb
xlat
jnp
cmp
andl
cmp
pop
fdivl
sti
fisubs
cmp
sbb
in
data16
adc
insb
xchg
mov
dec
sbb
inc
shlb
pop
addr16
jbe
pop
sub
lcall
mov
jae
push
insb
rcl
divb
cwtl
jl
cmp
jl
aas
fildl
adc
xor
rcrl
lock
pop
fcmovne
push
lcall
idivb
iret
mov
adc
jle
or
or
dec
and
push
adc
push
int3
push
sub
das
lock
cltd
addr16
sahf
test
mov
cmp
loopne
lea
add
mov
pop
mov
faddl
add
cmp
inc
push
add
cmp
arpl
fdivrp
out
adc
push
popa
js
dec
inc
add
adc
inc
mov
pop
mov
or
push
mov
andl
mov
inc
mov
cmpl
jne
pushl
pushl
call
cmpl
jb
mov
adcl
add
mov
movzbl
and
mov
mov
movl
mov
xorl
mov
mov
mov
mov
mov
mov
mov
mov
jmp
hlt
and
arpl
jno
scas
mov
jo
jg
jo
jae
mov
mov
mov
aam
mov
out
mov
stos
xchg
jns
fsubrs
and
mov
cmp
sbb
in
call
adc
inc
adc
mov
or
xchg
or
test
inc
fwait
imul
cld
popa
fcomi
cmp
icebp
fiaddl
dec
xor
or
pop
int3
dec
in
pop
add
ss
sbb
insb
jg
loop
sbb
fidivrs
pop
rcr
mov
test
or
es
mov
jl
xchg
shl
adc
xchg
inc
jp
icebp
stos
mov
sbb
mov
jb
jge
iret
mov
xchg
jb
outsb
xchg
decb
inc
scas
fsubs
dec
and
push
sbb
pop
aas
roll
push
ret
out
dec
outsb
jmp
cmp
icebp
inc
ret
sbbl
loop
clc
mov
pop
push
inc
movsl
sbb
es
insb
mov
jns
adc
xor
out
fisttpll
mov
jne
iret
sarl
lods
jbe
sub
std
inc
mov
push
sbbl
jbe
insb
pop
leave
sub
adc
nop
lods
out
rorb
ret
ret
push
mov
mov
xor
jmp
cmpsl
sub
mov
mov
jge
xor
jo
inc
jb
lds
fadd
cmc
mov
xchg
cs
and
mov
jecxz
fdivrs
ds
fdivrl
fidivrs
adc
imul
push
popa
xor
add
inc
out
popf
xor
inc
insl
jmp
push
movsl
imul
mov
mov
pusha
mov
mov
mov
sub
into
andl
sub
mov
lods
and
mov
xor
pop
jecxz
scas
out
push
in
add
shlb
mov
xor
insl
sub
and
in
mov
sbbl
sub
xor
xchg
aad
dec
stos
rcrb
pushf
sub
and
addr16
jmp
pusha
jnp
sahf
mov
js
ss
xchg
sub
or
or
hlt
inc
sarb
insl
stos
int
xchg
mov
repz
jp
push
mov
sbb
mov
sbb
jbe
ss
xor
push
arpl
xor
insb
cs
repnz
add
push
pmaxsw
mov
das
dec
out
iret
leave
sbb
mov
div
mov
and
or
mov
pop
ret
push
mov
push
movl
add
mov
mov
mov
mov
add
mov
xor
subl
add
xorl
mov
incl
mov
subl
mov
mov
mov
mov
adcl
mov
mov
mov
subl
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
mov
mov
mov
test
mov
jne
mov
xor
add
leave
ret
push
mov
sub
add
mov
sbbl
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
cmpl
jne
xor
or
inc
mov
jmp
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
adcl
mov
mov
mov
adc
movl
movl
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jne
push
pushl
pushl
push
push
push
push
push
pushl
push
push
push
push
push
call
jmp
sbbl
mov
push
sbbl
push
push
mov
andl
jmp
mov
jmp
sub
in
adc
mov
jo
jge
jo
daa
hlt
ret
negl
bswap
cwtl
mov
fimuls
in
xchg
shll
and
jns
cmpsl
adc
mov
dec
pop
lcall
sub
js
pop
jnp
in
dec
add
repnz
inc
imul
or
addr16
mov
inc
lock
ficompl
pop
sub
xor
adc
stos
std
enter
sub
shl
xor
xchg
jb
and
les
cmp
add
mov
mov
mov
sbb
lret
ror
lret
test
les
fwait
cld
enter
and
lds
loopne
and
call
mov
addr16
scas
pushf
mov
inc
adc
push
bound
outsl
inc
ret
mov
mov
cltd
dec
xor
pop
sbb
je
add
lret
sub
and
sub
fldt
cmpl
lahf
cmc
out
mov
lcall
xchg
iret
push
jb
jnp
add
mov
mov
mov
or
push
enter
jg
push
jecxz
enter
stos
lods
adc
mov
adc
mov
lret
mov
stos
cmp
sub
inc
push
mov
sub
loop
arpl
sti
in
test
xchg
adc
shr
lcall
push
xchg
mov
xor
fidivrl
and
sbb
xor
dec
xchg
pop
pop
cmp
push
jl,pn
aaa
xchg
push
or
test
lret
aad
xchg
sbb
imul
aam
xchg
in
fnstsw
sbb
mov
lahf
jbe
push
push
call
mov
sub
fmulp
lret
ljmp
sub
dec
rcrb
lret
mov
xorb
mov
adc
dec
mov
loopne
cmp
jp
xor
out
dec
repz
jnp
pushf
mov
sub
dec
cltd
outsl
or
nop
push
rol
into
and
mov
and
mov
push
lret
jle
leave
push
sbb
mov
movsb
and
aad
push
or
scas
iret
cs
jle
or
hlt
mov
xlat
inc
arpl
and
push
pop
jno
fdivrs
mov
or
je
push
ffreep
push
add
cmp
xchg
mov
push
mov
dec
cmpsl
in
mov
push
jmp
mov
ds
mov
js
sub
repnz
fdivrl
fs
mov
imul
insb
pop
std
loope
mov
js
pop
fmul
jnp
jb
inc
jno
or
sarb
push
daa
lods
fsubl
inc
xor
mov
sub
shl
lods
inc
xor
cwtl
adc
sbb
imul
sub
test
leave
dec
cmc
mov
mov
adc
or
sti
xor
add
mov
andl
add
jmp
xchg
test
xchg
jno
xchg
js
adc
jo
and
jo
xor
rcl
stos
sub
ret
test
int
icebp
sbb
and
gs
sub
in
xor
js
fisubs
pop
mov
dec
sub
add
mov
xor
cwtl
cmp
out
xor
add
dec
jns
dec
hlt
adc
shlb
sbb
ja
jno
rcll
stos
jae
fcompl
repnz
ljmp
ret
inc
cmp
add
mov
or
or
sahf
hlt
mov
pop
jo
sbb
rcrb
mov
stc
shr
xchg
sti
ret
jne
pop
cmp
popf
or
test
arpl
xchg
loop
xor
mov
cmpsl
and
icebp
repz
movsb
jg
int3
imul
js
repz
cltd
jb
outsl
shlb
mov
push
popf
xor
and
xlat
movhps
stos
fs
mov
fimull
vshufps
mov
daa
mov
cmp
pushl
dec
das
mov
jg
inc
add
sahf
shlb
dec
jb
jnp
popf
cmpsl
out
mov
jae
in
jge
ja
cmc
dec
mov
test
pusha
inc
pop
sbb
icebp
cmp
cwtl
push
repnz
js
stos
push
or
push
clc
inc
aaa
cwtl
add
loopne
inc
lea
and
add
int3
mov
push
dec
xchg
sub
mov
xchg
rcll
lret
mov
inc
cwtl
orl
mov
mov
inc
ret
mov
scas
in
cmp
shlb
mul
sbb
in
xchg
dec
sub
lock
xlat
cmp
cli
lock
cmp
sub
in
mov
dec
pop
les
sbb
xor
push
leave
sti
fdivl
mov
inc
sub
clts
sti
adc
dec
push
mov
pop
dec
xor
and
or
out
movb
mov
jecxz
pusha
repnz
fisttps
push
cmpsb
xchg
frstor
jo
out
addb
aam
rcll
jbe
jbe
xor
daa
jl
add
mull
sahf
call
outsl
rorb
repnz
xor
test
jl
xor
jbe
push
xchg
sbb
lock
in
push
gs
fldl
inc
cmp
aas
sub
inc
jl
jmp
push
out
out
xchg
mov
js
adc
cmpsb
and
cmpsb
xchg
push
hlt
add
mov
subb
popa
push
mov
and
jb
out
stc
mov
xchg
test
dec
and
mov
pop
lcall
add
por
mov
test
pushf
mov
dec
or
ret
sbb
dec
mov
jl
rcll
loopne
xor
je
inc
add
inc
fdivs
mov
clc
movl
movl
xor
movl
xor
mov
subl
xor
addl
add
adcl
mov
movl
sbb
movb
or
mov
xor
add
mov
neg
mov
sbbl
xor
add
subl
push
sbb
mov
subl
xor
adcl
add
push
add
mov
addl
xor
add
addl
push
lea
push
pushl
adcl
pushl
call
subl
jmp
test
xor
mov
test
push
fcmovb
fbstp
sbb
and
jo
pop
outsb
loopne
mov
rclb
cmp
test
cwtl
ret
and
and
fbld
scas
ds
dec
nop
inc
mov
ljmp
cmp
aaa
or
lea
push
std
jg
mov
xorb
das
pop
jb
or
aas
mov
sbbl
adc
add
pop
inc
jnp
xor
jp
ss
js
sarb
xchg
lahf
mov
jo
hlt
adc
std
jb
negl
pop
jns
aas
or
add
dec
lret
xor
cmp
pop
cmpb
adc
mov
pop
lods
dec
dec
or
adc
bound
enter
push
faddp
ret
ja
pop
in
mov
adc
lds
adc
daa
push
adc
in
sbb
sub
aad
pop
shrl
lret
lret
push
add
aas
gs
cmp
dec
mov
imul
pop
incb
adc
test
or
dec
and
fsub
bound
mov
mov
xor
rcrb
add
inc
xchg
mov
cmp
dec
sbb
sub
dec
mov
push
jl
loope
movsl
sbb
pop
push
inc
andl
aaa
movb
inc
dec
insl
int
sub
pop
mov
jo
cmp
hlt
fwait
daa
inc
mov
ja
insl
jge
inc
lods
arpl
js
push
lods
mov
xchg
and
fsubrp
aas
sbbb
sub
or
push
enter
push
push
and
dec
xchg
test
pushf
pop
cmp
neg
call
sbb
jnp
ret
imul
or
lds
ja
sarb
pop
sbb
aam
pushf
loopne
pop
cpuid
mov
pop
mov
sti
repnz
push
mov
cltd
ja
cmp
lods
mov
jge
scas
xlat
daa
ficoml
cmp
mov
or
fisttps
inc
inc
cmp
mov
pop
mov
aam
stos
mov
and
lret
popa
or
inc
std
mov
test
pop
dec
dec
aas
jns
loop
pop
adc
mov
adc
cmpsl
dec
lods
sub
fistpl
inc
sub
lahf
int3
sub
sbb
mov
or
aad
pusha
icebp
orl
scas
xchg
jmp
mov
sbb
push
and
fldt
push
bound
xor
cmpsl
hlt
and
jg
jg
aad
icebp
inc
ss
and
cs
dec
mov
iret
int
lea
jo
cwtl
xor
imul
mov
lret
mov
xchg
jle
jb
dec
fldenv
ret
mov
sub
xor
add
loopne
mov
cld
pop
out
xor
shll
in
movsl
adcl
mov
push
test
movl
je
lea
sbbl
push
sbbl
mov
andl
xor
add
push
movl
cmpl
je
cmpl
jne
push
pushl
push
push
call
cmpl
jne
mov
dec
mov
xor
add
dec
mov
jmp
mov
add
push
mov
mov
pushl
call
mov
cmpl
lea
mov
je
lea
push
mov
xor
add
push
mov
xor
add
push
pushl
lea
push
jmp
mov
add
mov
aaa
dec
mov
aas
sbb
jo
and
jo
push
outsb
mov
decl
push
cmpb
sub
xchg
xor
adc
dec
arpl
mov
sar
fadds
out
cmpsb
cmc
cmp
and
fimuls
lcall
mov
nop
enter
jne
aad
mov
iret
cmpsl
and
mov
pop
ds
nop
cld
sub
and
test
ljmp
fwait
dec
test
ret
jmp
xor
leave
dec
xor
cmp
mov
loope
inc
pop
push
xchg
dec
addr16
mov
mov
push
add
and
lret
sub
lcall
das
pushf
mov
call
mov
ss
mov
int
das
out
xchg
lods
push
dec
cld
push
pop
xchg
fisubs
sub
mov
and
push
lcall
sub
jno
insb
pop
cwtl
lds
jmp
lret
imul
cmpsb
lret
pop
ds
loop
inc
aam
cltd
andb
and
add
and
jo
push
lock
inc
lret
fcomps
mov
pop
icebp
xorl
fsubp
scas
mov
and
sbb
sbb
mov
jle
cs
insl
shrl
inc
loop
pop
push
push
xor
mov
jne
aas
rcr
scas
jns
xchg
out
jae
sub
mov
push
cwtl
aaa
inc
pop
adc
pop
cmp
push
dec
dec
icebp
mov
lds
iret
dec
jle
fsub
pop
push
sbb
push
adc
das
jp
repz
pop
dec
pop
shll
mov
out
dec
test
jae
cmpsl
jle
lods
inc
xchg
mov
mov
mov
mov
movsb
xchg
xor
dec
jo
fimull
pop
int3
cld
mov
popa
mov
dec
dec
repz
js
cmp
mul
push
mov
mov
mov
push
bound
movsl
cmp
inc
jne
outsl
and
dec
pop
cltd
xlat
and
aad
or
inc
jl
call
sahf
pop
pop
in
lods
fldl
scas
jns
popa
xchg
dec
push
rorb
fidivrs
push
jg
dec
stc
sub
ds
aad
xchg
push
mov
jo
cmp
inc
mov
hlt
rol
jbe
das
mov
sbb
push
popa
add
aam
iret
cmc
adc
or
fs
xor
add
cmp
mov
pop
insb
loopne
scas
and
lods
xchg
lock
push
mov
lds
push
sbb
mov
push
int
mov
lea
mov
xorb
popa
ja
inc
jae
push
inc
inc
ret
mov
jecxz,pt
test
fidivs
cs
ss
mov
push
cmpsb
or
jbe
rol
mov
mov
xchg
sbb
test
sub
repnz
ss
cli
sti
pop
mov
bswap
push
bound
xchg
mov
out
push
arpl
sbb
imul
cmc
push
and
push
pushl
pushl
call
test
je
lea
jmp
enter
outsb
bound
adc
pop
xchg
lret
jo
and
jo
fildl
add
sbb
jecxz
xor
push
mov
out
inc
jb
shlb
xchg
aas
in
pop
jmp
loopne
dec
inc
data16
and
lret
inc
pop
cmp
jae
fdivrs
ss
insl
xchg
adc
mov
pop
int
fnclex
icebp
decl
mov
dec
jbe
sbb
inc
ds
aaa
addr16
fistl
cld
pop
inc
or
add
cli
js
rcrb
mov
jmp
sbb
cltd
fstl
jl
cli
adcb
cltd
push
ljmp
call
mov
cmp
sti
sbb
cld
jno
pop
pop
scas
mov
mov
data16
idiv
xchg
jnp
mov
faddl
and
in
out
push
dec
cmp
mov
test
and
aam
mov
pop
insb
xor
ljmp
sahf
mov
sub
popa
sarl
inc
lret
push
fistps
dec
pop
popf
lea
stos
xchg
or
stc
movl
lea
cmpsl
cltd
mov
cmpsb
and
std
test
ss
je
popl
push
pop
xor
xchg
pop
jne
lods
movsl
push
ret
aad
outsb
sbb
pop
or
rcrl
jl
dec
jmp
call
lcall
and
or
sarl
insl
xor
adcl
adc
jnp
insl
out
sub
mov
dec
cwtl
pop
sub
call
das
mov
cmp
inc
xchg
jns
mov
dec
aam
loopne
movsb
pop
movsb
lcall
mov
repnz
jae
iret
sbb
ds
addl
xorb
adc
cli
ljmp
jo
mov
jbe
in
imul
ffree
pusha
pop
jae
mov
int3
add
jo
ljmp
icebp
stos
sub
pushf
scas
mov
pop
lods
sbb
xor
jae
scas
in
shlb
scas
pop
jmp
cmpsb
push
dec
adc
ret
loope
lret
loopne
or
imul
jae
leave
movsb
inc
push
pop
adc
mov
jns
xchg
jnp
dec
adc
cmp
pop
ss
inc
mov
xlat
scas
je
mov
fiadds
sbb
mov
adc
cmp
bound
fsubrs
push
push
or
popf
or
push
arpl
test
mov
inc
inc
dec
stc
int3
mov
sub
into
push
outsl
aad
sub
mov
cmpsl
push
dec
enter
in
xchg
loop
out
aaa
nop
add
ror
add
sbb
mov
pop
rolb
inc
mov
adc
jb
stos
or
jp
rcl
loopne
imul
fsubl
adc
mov
test
lahf
xchg
lgs
fists
repz
fstpt
or
sbbl
mov
xor
add
push
mov
add
push
mov
jmp
inc
jmp
cwtl
loope
inc
pop
mov
mov
sti
les
and
jo
inc
int3
jl
xlat
and
ja
loopne
cltd
iret
arpl
xor
stc
lock
fs
out
jle
mov
xor
ret
ds
loop
xchg
adc
or
in
call
push
add
xor
scas
sub
ja
out
loope
in
ljmp
out
xlat
mov
bound
test
adc
lock
add
dec
and
mov
bound
cltd
cmc
imul
shlb
into
testb
push
mov
shrb
pop
bound
and
addr16
pop
pop
ret
inc
mov
adcb
mov
push
push
xor
out
stc
pop
ss
test
aas
out
out
mov
pop
mov
mov
xchg
into
mov
mov
data16
std
mov
push
mov
shrl
inc
data16
add
lea
outsl
les
aas
repz
cmc
sbb
test
cltd
fcmovb
das
sub
jmp
fwait
push
cmpb
mov
pop
sub
pop
dec
inc
adc
xlat
jp
and
inc
pushl
arpl
test
cmpb
aaa
cmpsb
mov
hlt
and
aaa
dec
sub
sbb
mov
imul
xchg
in
out
lret
mov
dec
fisttps
clc
cmc
pop
add
dec
xor
fxch
or
push
or
aas
aaa
loopne
stos
fdivs
xchg
shll
adc
sbb
test
cmpsb
add
xchg
cmpsb
sarb
sbb
xchg
aad
pushf
in
cli
fidivrl
adc
loop
nop
in
mov
dec
push
mov
dec
cs
dec
push
xchg
and
jge
fwait
dec
sbb
addr16
cmc
jge
xlat
repnz
aas
stos
loope
mov
fwait
xorb
sbb
jl
sub
cmp
pop
ss
mov
mov
cmp
jae
pop
cmp
mov
sub
and
jmp
hlt
push
jnp
jne
fdivrp
int3
mov
cmp
or
mov
mov
cmp
pop
outsl
cmc
lcall
mov
xlat
xor
push
sarb
pushf
std
mov
into
jnp
test
or
jbe
adc
push
add
mov
jnp
dec
xchg
inc
sbb
inc
femms
jg
mov
push
jb
mov
xlat
insl
outsl
ds
fdivl
scas
mov
cmp
jnp
and
das
xor
fadd
mov
push
lret
inc
int3
add
mov
add
or
inc
mov
sbb
cltd
pop
and
sub
out
stos
push
mov
jmp
cmp
out
movsl
mov
push
rorl
nop
pop
mov
sahf
dec
js
cwtl
test
pop
inc
jl
dec
adc
ja
cltd
add
hlt
xchg
adc
fwait
lock
jecxz
xor
push
es
aas
jge
sbbb
call
mov
xor
mov
sub
sub
mov
add
mov
mov
mov
mov
xor
sub
mov
lea
incb
inc
push
pop
dec
xchg
jmp
sub
cs
cs
mov
sbb
into
aad
cmp
stos
shll
jge
jo
lret
mov
es
adc
and
adcl
jmp
push
sbb
push
pop
add
in
es
sahf
movsl
lds
mov
mov
ljmp
sar
fstpl
fidivrs
mov
enter
out
mov
pop
out
insb
gs
stos
mov
je
cmp
mov
or
insl
mov
sbb
gs
add
mov
mov
mov
mov
mov
fdivrl
loop
test
in
fucomi
xlat
arpl
ret
and
mov
add
mov
add
ret
shrb
imul
and
xchg
cmpsb
jno
cli
pop
shlb
out
loope
adc
in
es
pop
test
push
mov
jb
push
jg
ss
fsubs
int3
push
insl
lds
aad
mov
dec
lahf
lock
in
int3
sbb
push
stos
imul
xor
mov
aad
dec
fwait
out
adc
push
mov
mov
insl
pushf
idivl
sar
jge
add
mov
push
mov
insb
push
add
jle
xchg
mov
mov
mov
in
imul
rcll
imul
stos
jne
mov
fldt
dec
pop
jbe
repnz
clc
push
fnstenv
fldt
cmp
pop
shl
ljmp
scas
out
push
popa
pop
mov
cmp
iret
jnp
inc
cmp
sbb
sbb
cmc
lods
imul
test
je
insl
repz
push
nop
ljmp
push
xchg
aad
jg
or
dec
je
xchg
and
jecxz
sub
pop
pop
fisubrs
fbld
and
sub
push
xchg
testl
fbld
inc
pop
xor
scas
mov
cwtl
lds
daa
out
shll
jmp
mov
outsl
adc
sbb
add
test
rorb
xchg
or
or
cld
arpl
jecxz
rcrl
xchg
jmp
in
push
dec
dec
cmp
and
lea
jl
movsl
and
xor
int3
mov
cmp
popa
xchg
in
shll
testb
dec
popa
repz
xchg
lahf
aas
cltd
daa
js
mov
ret
aad
out
cmp
pop
sbb
mov
fwait
push
mov
popf
aas
dec
stos
xor
fcoms
aad
faddl
xor
int
ljmp
dec
sbb
pop
mov
pop
jnp
and
adc
leave
mov
mov
lahf
xchg
insb
and
ja
insl
dec
jg
cmp
adc
fneni(8087
adc
les
lods
mov
outsb
jnp
xor
scas
fcomip
and
push
pop
in
sub
xchg
cmpb
sbb
test
push
adc
subb
test
or
jne
mov
mov
pushl
lea
pushl
lea
pushl
lea
pushl
lea
pushl
xchg
inc
inc
sub
push
pop
call
mov
mov
add
pop
pop
pop
leave
ret
push
mov
sub
push
sbb
mov
mov
mov
sub
xor
mov
adc
mov
movl
sub
movl
mov
andl
xor
add
inc
mov
cmpl
jne
pushl
push
push
call
cmpl
jne
xor
add
inc
mov
cmpl
jb
mov
mov
or
xor
mov
adc
add
mov
or
mov
adc
mov
sbbl
xor
add
mov
or
mov
mov
inc
movl
movl
cmpl
je
cmpl
jne
call
xor
add
dec
mov
jmp
mov
mov
sub
add
jmp
fldcw
cs
mov
jae
shll
ret
inc
pop
into
jo
imul
int3
inc
jecxz
sub
cwtl
jns
mov
inc
jle
mov
scas
inc
cmp
push
mov
cmpsb
xchg
sbb
jle
js
cmp
popa
adcb
push
inc
cmp
je
push
sbb
lret
mov
and
xchg
mov
mov
cmp
lods
aad
fimuls
jg
xor
mov
subb
pop
lahf
push
mov
pop
gs
or
loope
mov
or
cmp
cmp
pop
cmp
repnz
scas
aad
rclb
xchg
mov
std
cmpsl
fs
andl
insb
mov
rcr
add
push
adc
xchg
jno
jge
adc
aad
mov
in
jno
mov
push
mov
or
outsl
andb
sti
push
std
dec
or
scas
add
add
outsb
lods
cmp
or
les
pop
adc
sbb
out
test
cmpl
scas
lret
ljmp
cmc
ljmp
icebp
jl
sti
std
sbb
in
or
call
adc
nop
aad
fdiv
outsb
fdivrl
jge
shlb
cltd
sub
aas
int
std
call
in
mov
or
fbstp
cmp
insb
xchg
test
xchg
enter
or
jno
push
adc
mov
fisttps
xchg
std
cmp
or
mov
cmp
inc
cmpsl
rclb
xchg
hlt
scas
jo
jo
lds
das
jecxz
pop
and
and
cmc
xchg
in
fldcw
push
push
std
pop
jg
out
cmp
push
mov
jl
mov
enter
ja
pusha
push
movl
add
movl
mov
sub
movl
movl
and
movl
jmp
lods
mov
jno
fidivl
enter
jo
imul
shll
jo
sbb
push
bswap
mov
leave
pop
mov
shll
sbb
ss
push
lahf
sbb
jne
jmp
cmc
jne
hlt
mov
fisubrs
iret
ja
jmp
cmp
ret
cwtl
shr
sbb
jnp
hlt
iret
push
jle
mov
cmp
bound
mov
cmpl
cmp
clc
insl
mov
fsubr
fcomps
int3
icebp
sahf
sbb
mov
xor
jmp
jge
mov
loope
ret
mov
jl
push
xor
sub
add
sbbl
imul
addr16
ret
add
cwtl
push
fbld
xor
inc
push
adc
cmpsb
adc
out
jno
push
in
nop
mov
pop
pop
jno
mov
mov
cmpsl
aam
icebp
aas
adc
arpl
push
or
jns
imul
push
cmpsb
xor
pushf
add
xchg
or
pop
mov
and
test
sub
jns
mov
inc
movb
ficoml
mov
daa
or
adc
cmpsb
cmp
ficoml
jmp
dec
ljmp
cmp
mov
push
inc
dec
push
xchg
fdiv
cmp
aam
mov
fdivs
sub
mov
jmp
jae
data16
dec
ja
lret
mov
mov
fstps
push
gs
mov
in
aaa
andb
push
icebp
jmp
mov
outsb
jo
cmc
aas
jo
dec
call
mov
sub
mov
jns
fnstenv
fadds
loopne
andl
cmp
popa
mov
daa
mov
lea
inc
test
dec
test
mov
imul
and
pop
in
sub
sbb
loopne
movl
movl
cmpl
je
cmpl
jne
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
adc
mov
xor
sbb
mov
add
cmp
jmp
mov
jae
xchg
xor
xchg
mov
jo
jg
jo
dec
jmp
loopne
sarb
mov
lahf
xchg
inc
popa
orb
icebp
xchg
test
shll
mov
hlt
jnp
ss
inc
mov
pop
mov
stos
nop
dec
jo
jge
xchg
gs
inc
dec
mov
fldenv
mov
inc
and
pmaxub
imul
xorb
inc
push
mov
pop
scas
and
in
push
dec
int
inc
lahf
mov
push
clc
mov
test
push
push
sahf
iret
ds
cmp
mov
mov
xchg
push
xchg
call
pop
xor
xor
pop
add
bswap
push
xorb
add
fldl
inc
mov
stos
jno
cmp
iret
jae
enter
and
mov
cld
mov
mov
or
xor
jno
aam
or
sbb
outsl
xchg
add
dec
ss
in
and
pop
clc
rcr
pop
je
enter
jnp
dec
rclb
pop
test
shll
stos
add
rorl
ds
jle
scas
add
imul
push
fwait
mov
imul
dec
inc
lods
inc
adc
stos
rcrb
xor
xchg
mov
daa
mov
or
push
mov
loopne
lcall
stos
sbb
out
push
loopne
cmp
pop
in
in
icebp
lea
mov
mov
jecxz
dec
add
dec
out
pop
inc
flds
js
mov
xor
fcmovnu
scas
jns
xor
stc
or
cmp
mov
mov
in
mov
mov
mov
dec
mov
mov
pusha
mov
jg
loopne
add
xchg
xchg
fcom
xorl
push
repnz
or
data16
cld
fmull
xchg
in
je
scas
popa
je
push
movl
jmp
movl
mov
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
xor
mov
jmp
jmp
adc
inc
jno
pushf
jo
cmp
jo
imul
jnp
jns
cwtl
or
sbb
dec
mov
roll
test
jbe
scas
xor
imul
aaa
adc
sarl
imul
cmp
out
dec
cmc
js
jbe
jg
imul
push
sub
out
mov
or
andb
scas
repz
inc
in
sub
insl
rorb
dec
push
xchg
xlat
inc
xchg
stos
and
stos
out
push
mov
jae
lock
mov
ficoms
jae
stc
test
pop
pop
add
inc
dec
sub
and
mov
mov
jb
xor
ss
lret
iret
out
cltd
xchg
jae
fs
lods
ss
shl
jg
mov
xor
addr16
fistpll
xchg
imul
movsb
push
sub
sbb
mov
mov
jecxz
dec
cmp
sub
push
mov
aas
sub
sbb
xchg
pop
push
daa
add
out
add
loopne
cltd
cmpsb
mov
cmpsb
dec
imul
iret
sub
sahf
mov
xor
lcall
shl
xchg
icebp
in
sub
mov
xor
out
nop
ret
stos
inc
ljmp
sub
jecxz
bound
cwtl
aaa
inc
scas
jp
sahf
jmp
rcr
daa
push
mov
or
subl
insb
test
pop
leave
daa
icebp
push
fdivl
xchg
sub
loope
or
sbb
adc
mov
push
loopne
adc
movsb
pop
loop
pop
sahf
into
cmpsl
push
sbb
repz
test
pop
or
andl
pop
insl
dec
ficomps
insl
dec
xchg
dec
fmuls
sbb
cmc
in
dec
imul
sahf
fdivl
sbb
push
cmp
pop
outsb
imul
scas
jbe
ljmp
add
loopne
sub
mov
xor
sbbl
add
movl
cmp
movl
jmp
sbb
pop
mov
loope
push
inc
test
jecxz
jne
mov
jg
jo
popa
mov
xor
in
enter
pop
dec
das
or
xchg
outsl
rcrb
jp
lods
fstpt
mov
insl
fldt
push
adc
adc
cs
aaa
mov
add
insl
ret
dec
jmp
test
jbe
sub
loopne
lret
push
pop
push
movb
cmp
imul
mov
pop
bound
cmpsl
sub
addr16
xor
mov
sbb
loopne
scas
mov
inc
test
and
adcb
sbb
add
and
jl
test
cwtl
jl
and
cmpsl
add
fidivrl
negl
repz
shr
and
adc
test
add
mov
imull
xor
insl
test
xor
cmp
adc
sar
push
lea
dec
ds
push
ljmp
cmpsl
pop
lods
dec
xchg
iret
sbb
cmpsl
fsubrl
mov
data16
mov
xchg
cmpsb
rcrb
enter
das
sub
mov
bound
fadd
lds
negb
ljmp
mov
clc
scas
aas
mov
pop
pop
mov
lods
cmp
xchg
sub
jmp
ret
push
stos
dec
popf
xchg
adc
or
imul
lret
jnp
dec
shrb
xor
repz
mov
daa
loop
mov
jecxz
adc
or
pop
outsl
mov
mov
mov
dec
xchg
int3
sub
mov
dec
sti
aaa
imul
xor
mov
inc
add
fsubl
and
mov
push
test
fnclex
pop
stos
in
mov
inc
imul
out
xor
roll
hlt
mov
leave
orb
imul
fadds
add
push
cs
add
rolb
add
add
add
sldt
add
sbb
inc
mov
cmpl
jae
cmpl
jne
pushl
call
jmp
xor
add
mov
add
add
add
imul
mov
mov
or
mov
sub
cmp
movl
ja
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
call
jmp
adcl
jmp
rcrl
popf
push
stos
arpl
cmpsb
insl
lods
test
jo
imul
loope
jno
xchg
addl
push
pop
insb
mov
stc
shlb
dec
ja
lret
sbb
les
xchg
rcrl
lock
jns
sbb
lds
pmullw
inc
mov
shrl
cmp
mov
pop
inc
or
push
sbb
out
ficomps
cwtl
fildl
jp
adc
cmp
rol
mov
sbb
jne
cmp
sub
aad
fistpll
mov
inc
xchg
and
or
jo
or
mov
xor
jb
ljmp
popf
rolb
lahf
imul
daa
rcl
push
negb
loopne
mov
cmp
scas
dec
ret
mov
sub
sub
sti
lcall
data16
aad
aam
subl
pop
inc
mulb
pop
pop
out
fcomps
mov
cmpsb
mov
rcrb
insl
aas
sbb
and
test
mov
inc
imul
xchg
pop
ds
pop
fadd
enter
testl
call
jne
mov
xchg
inc
fwait
push
push
pop
jle
insb
test
xor
dec
imul
adc
arpl
jno
jnp
rcrb
xlat
es
push
int3
mov
push
cltd
jmp
mov
and
in
movsb
and
roll
fdivs
call
mov
out
xor
imul
sbb
aas
push
dec
dec
xor
rclb
jno
xchg
dec
pop
and
jle
adc
negl
pop
pop
dec
jae
sbb
add
adcl
sbb
rolb
mov
mov
push
cld
xor
add
movl
jmp
and
mov
or
mov
xor
not
xor
subl
add
or
add
or
imul
adc
mov
sub
mov
andl
sub
cmp
movl
ja
mov
movl
jmp
mov
mov
xor
xor
movl
cmpl
je
cmpl
jne
push
pushl
pushl
call
cmpl
jne
xor
add
dec
mov
mov
dec
mov
jmp
xor
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
mov
jbe
mov
jmp
imul
jb
adc
ret
jo
imul
sar
cltd
mov
lock
sbb
orb
int3
push
or
divl
test
rcl
adc
loop
jo
idivl
xchg
aam
iret
test
jo
xchg
call
mov
add
insb
out
adc
shll
ret
jp
adc
xor
bound
add
int3
aas
mov
je
movsl
fsubrs
push
jp
gs
pop
shlb
adc
sbb
or
mov
aad
hlt
jge
loope
jmp
jns
out
inc
movsb
xchg
pop
iret
push
cltd
pop
test
sbb
sbb
mov
stos
stos
pop
stos
adc
adc
icebp
sub
xchg
cwtl
insl
es
cmc
pop
rclb
cs
fisubs
je
add
pop
std
add
iret
arpl
cmpsl
push
mov
jl
rorb
in
loope
xchg
dec
das
cmp
jge
out
inc
or
sysexit
into
sub
sbb
lea
xchg
adc
dec
int
cmc
shl
xor
in
stos
mov
sbb
sti
in
bound
movsb
ds
pop
dec
adc
sub
xor
shll
movq
notl
fdivrs
ds
shr
lahf
lret
push
mov
shll
js
add
mov
jnp
fcompl
dec
dec
fsubl
mov
sahf
cmpb
xchg
inc
std
sbb
cld
notb
mov
xchg
insb
mov
scas
mov
cmpsl
mov
loopne
jl
inc
out
cmp
mov
and
xlat
jns
out
rorl
out
pop
aad
xor
fstpt
das
cmp
dec
sub
pop
mov
in
andl
insl
jmp
lcall
pop
rcll
rorb
rolb
stc
add
imul
mov
mov
mov
mov
add
movl
mov
movl
movl
mov
xor
add
jmp
mov
xor
add
mov
mov
mov
jmp
arpl
push
out
jnp
test
shlb
imul
jmp
sub
popf
mov
add
fcmovu
mov
mov
mov
shrl
hlt
std
das
ret
das
mov
or
aas
inc
add
or
aaa
ljmp
shr
sbb
ret
and
test
dec
pop
or
pop
push
xchg
outsl
cld
loope
dec
cmpsl
lret
xchg
ja
iret
ret
jge
je
dec
jb
sub
pop
sub
les
fadds
xlat
mov
ret
sbb
jb,pn
mov
xor
cmp
adc
lds
into
inc
and
lods
aam
push
pop
fsubrs
fdiv
xor
xchg
cmp
cltd
jg
push
js
xor
out
sbb
es
lret
dec
xchg
inc
sti
xchg
sub
cmc
arpl
or
mov
adc
mov
fbstp
pop
dec
pop
sbb
icebp
adc
cs
out
test
pop
rcrb
sbb
push
shrl
adc
jne
aam
push
popf
push
call
xchg
lcall
mov
inc
mov
xor
push
mov
or
cltd
in
dec
lods
stos
insb
mov
jl
imul
mov
mov
in
xor
test
fadd
mov
jp
sub
rol
jo
inc
daa
push
call
cs
adc
xlat
fnstcw
mov
dec
arpl
sbb
adc
adc
int
in
lcall
aas
pop
and
jbe
sub
sub
lret
es
cld
lahf
rorl
repz
jns
cli
or
test
jne
fldcw
rolb
push
in
mov
mov
mov
jmp
bound
popf
cmc
mov
cltd
insb
push
cwtl
cmpsb
xchg
fidivs
imul
fadd
inc
or
in
mov
xor
mov
nop
mov
mov
iret
dec
xchg
sub
sbb
lret
insb
sub
fmul
mov
and
add
push
out
add
push
repnz
dec
idivl
test
sbb
cs
add
jnp
mov
pop
jl
sub
or
repz
mov
adc
mov
enter
ds
and
inc
cmp
xor
xlat
push
jg
and
call
pop
movsl
mov
sub
rcr
call
bound
addb
cltd
call
ds
and
out
test
xchg
or
cmp
ds
lret
scas
sti
mov
mov
cmp
mov
adc
jge
xor
leave
add
lods
into
or
notl
dec
out
es
push
add
jbe
mov
mov
cld
sub
aad
xchg
lds
pop
xor
mov
mov
adc
je
mov
fs
jmp
loop
inc
sahf
jmp
jnp
pop
xor
sub
xchg
pop
stc
lock
mov
mov
test
mov
pusha
adc
jae
mov
add
mov
jnp
add
inc
repz
xor
mov
xlat
xchg
jl
hlt
shrb
cmp
hlt
outsb
cmpsl
outsb
dec
inc
mov
push
imul
fcmove
mov
dec
fs
sub
mov
add
pop
shlb
fdivrp
notb
shrl
jb
out
sahf
ds
xor
dec
inc
inc
mov
les
int3
push
outsb
and
in
xor
imulb
leave
imul
ds
cmp
xadd
adc
and
mov
mov
xor
add
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
xor
xor
add
jmp
or
das
mov
push
test
into
test
fdivl
imul
fdivrs
jp
rol
sub
pop
mov
mov
rclb
sub
out
push
imul
push
test
inc
insl
mov
push
xchg
jmp
xor
mov
dec
and
rolb
sbb
dec
fwait
int
daa
scas
jl
dec
stc
arpl
cmpsl
cmpsl
shl
xchg
sarl
push
mov
or
cmp
scas
pop
lret
push
fsubrl
xor
hlt
cmpsl
aam
jecxz
inc
pop
push
and
sub
cmpsl
in
push
mov
or
jmp
jmp
push
in
jo
lea
and
push
cld
sbb
dec
aaa
adc
nop
dec
test
addr16
mov
cmp
sub
rorb
push
mov
push
cmp
insb
int
scas
cmp
ds
sbb
push
pop
idivl
sub
pop
lcall
jg
sarb
ss
cmc
scas
inc
sub
mov
push
or
jns
repz
jb
jmp
mov
iret
lret
daa
or
leave
mov
add
xchg
sahf
bound
xchg
das
pop
insb
testl
jb
mov
sbb
shl
dec
ret
cmp
hlt
jne
jecxz
and
aaa
inc
lds
mov
divb
mov
adc
cltd
adc
or
pop
pusha
testb
sub
pop
adc
call
push
xchg
pop
push
xchg
cmpl
push
in
mov
andl
sbb
lahf
mov
mov
xlat
xchg
mov
jp
stc
add
test
out
repz
sti
jns
mov
lods
int
cmp
cltd
pusha
pop
aad
mov
push
cmp
addr16
sarl
scas
incl
rclb
and
jns
add
jmp
sbbb
cltd
js
mov
dec
mov
imul
leave
jle
cmpsb
xchg
mov
jl
xor
orl
jg
pop
test
mov
push
dec
dec
xchg
rclb
mov
repnz
dec
sahf
arpl
scas
mul
iret
and
fwait
repnz
xlat
xchg
jge
xchg
fiadds
aas
fldenv
mov
gs
and
jmp
call
or
fucompp
test
jbe
pop
pushf
pop
add
test
jnp
sahf
fistpll
dec
pop
push
sbb
adc
popa
sbb
cmpsb
adc
push
aam
jo
mov
popa
loope
dec
pop
mov
scas
clc
xchg
mov
test
sbb
xor
mov
fninit
jne
sbb
loope
mov
fs
fwait
and
incb
movsl
add
sbb
inc
pushf
aaa
aas
push
sub
in
int3
xor
jmp
mov
fwait
nop
int3
stos
jae
lret
add
push
and
jb
hlt
imulb
ss
daa
sbb
cmpsb
jmp
adc
inc
test
mov
iret
imul
pop
in
jle
or
movsl
fcomps
pop
fs
jecxz
adc
enter
add
stos
test
mov
movsl
cld
scas
and
shlb
test
sub
aad
shlb
notl
or
mov
mov
in
hlt
addr16
stos
shrl
js
stc
in
jns
mov
xor
test
in
sub
xchg
xor
lock
sbb
and
fstps
das
mov
repz
cmp
and
xchg
ds
movsb
mov
mov
and
sbb
lods
jmp
or
pushfw
out
test
bound
scas
xlat
jmp
clc
icebp
mov
icebp
ficompl
es
fdivs
imul
or
add
mov
jge
sbb
or
mov
jle
call
fnstsw
repz
fisubrs
mov
jmp
and
jae
mov
js
push
xor
loop
mov
cmc
mov
mov
lret
sub
in
scas
mov
push
test
pop
jae
aam
push
icebp
sti
jns
pop
ret
adc
dec
add
mov
lds
mov
or
inc
clc
subl
sarl
dec
xchg
movsb
pop
lock
pop
adc
fwait
xchg
mov
jecxz
pop
mov
outsl
and
std
add
sbb
pop
loopne
push
loop
pop
fidivrs
adc
jmp
cmpsl
cmp
repz
inc
mov
fdivp
out
es
xchg
addr16
push
les
mov
fdivrl
jg
lcall
push
pushw
cmpsl
enter
dec
cmc
lret
inc
cmp
mov
adc
movsb
pop
jb
jmp
inc
push
xchg
jmp
int3
idivl
and
xchg
bound
cltd
cmp
inc
dec
xlat
push
pop
lods
or
rcl
pop
or
loope
cmc
test
les
inc
xchg
xchg
gs
push
and
fstpl
adc
cld
fisttpll
jmp
in
xchg
cmp
inc
mov
adc
in
cltd
dec
ss
out
sub
push
mov
insl
fiaddl
iret
inc
jne
and
mov
mov
dec
sub
xchg
pop
into
mov
jbe
dec
scas
lcall
mov
sub
mov
add
rcrl
hlt
push
sbb
pop
mov
add
xchg
imulb
fwait
int3
mov
out
and
dec
loop
icebp
and
cld
sub
push
pop
test
test
mov
mov
lahf
xor
xchg
adc
mov
mov
mov
xor
jmp
dec
iret
lods
dec
lods
imul
cmp
dec
xchg
out
jo
jg
jo
dec
js
adc
mov
stc
add
popa
push
imull
out
xor
mov
dec
sbb
pop
cmp
inc
iret
call
xrelease
icebp
cmp
ss
ret
mov
or
mov
sub
mov
jle
xor
mov
icebp
inc
mov
mov
ret
cltd
test
jbe
fmull
cmp
pop
gs
sbb
jmp
fisttpll
push
mov
enter
mov
jge
out
add
mov
lods
jecxz
icebp
sub
and
loopne
or
and
add
leave
pop
jp
push
flds
pop
and
sahf
fisubrl
rcl
and
xor
sahf
repz
inc
fistpll
js
mov
js
cmp
cmpsl
cs
outsb
sub
inc
icebp
sub
fsubp
lret
stos
repz
jl
xchg
lcall
test
cmpb
mov
jl
pminsw
sub
int
scas
or
in
scas
sahf
mov
lds
inc
and
cltd
test
sbb
ficoms
jle
mov
sbb
mov
mull
and
insb
int3
shlb
int
sbbb
sub
mov
sti
icebp
pop
in
fistl
cwtl
arpl
loope
fldcw
pop
jmp
ja
mov
jo
scas
pop
lret
push
or
and
mov
lds
cs
movsl
sub
push
and
fcompp
mov
out
xor
dec
in
shr
insl
mov
pop
fwait
sarl
cmp
gs
mov
push
jbe
out
dec
in
cmpb
sbb
test
mov
shl
aas
mov
push
inc
fadds
out
repz
cmpsl
dec
mov
add
push
mov
scas
xlat
mov
xor
sub
mov
mov
xor
add
imul
mov
xor
sub
lea
cmp
jbe
mov
jmp
int3
sub
push
mov
loope
and
jg
jo
leave
scas
adc
add
and
cwtl
ret
fisubs
sbb
mov
je
xor
sub
sub
jne
ss
roll
enter
pusha
sbb
mov
inc
add
int3
pop
mov
mov
mull
cltd
mov
cmpsb
insb
mov
mov
jno
sub
push
fistpl
xor
xor
pop
mov
test
lods
shlb
mov
imul
flds
jno
aaa
addb
mov
mov
push
out
pop
lea
lea
sub
es
stos
popf
ret
push
insb
push
aaa
mov
popa
push
test
out
mov
loope
movsl
outsb
push
pop
psllq
mov
add
xor
xchg
dec
and
nop
or
pop
pushf
lods
add
cltd
js
insl
ljmp
and
fmull
in
push
jno
stc
dec
push
jbe
jb
adc
cmp
cmc
js
leave
mov
mov
js
insl
int
jge
mov
mov
push
pop
test
lret
test
lcall
sub
cmp
icebp
in
push
jae
les
and
pop
or
inc
add
xor
mov
mov
js
or
jmp
loop
out
push
daa
add
loope
mov
loopne
push
aaa
sbb
mov
fidivs
in
mov
mov
mul
mov
pop
add
inc
inc
pop
in
subl
cmp
cmp
cmpsl
loop
pop
mov
gs
out
xchg
and
cmpsb
mov
xchg
flds
xchg
push
pop
and
aad
out
jle
out
push
xchg
mov
xor
add
imul
mov
xor
add
mov
lea
mov
mov
jmp
popa
ja
add
xorl
adc
mov
loop
jo
jg
jo
xchg
xchg
add
jne
idivl
sbb
lahf
jne
add
sbb
out
imulb
int
mov
cmp
mov
fidivrl
pop
fcomps
mov
push
mov
pop
cwtl
lret
scas
push
push
mov
mov
xor
stos
push
daa
sbb
mov
jbe
lahf
shrb
fisubl
dec
shrb
or
cld
push
inc
xchg
test
cwtl
ljmp
insb
icebp
hlt
cmp
loop
test
scas
es
xchg
jle
mov
and
add
mov
insl
sub
push
pop
or
popf
stos
cmp
add
dec
jns
gs
cmp
les
out
les
mov
xchg
out
test
push
in
cmp
mov
jecxz
inc
push
test
int3
std
pop
negl
sub
sub
sbb
addr16
dec
in
mov
xchg
mov
pop
and
sbb
cmp
adc
in
sub
movsb
jae
cmp
mov
mov
jns
mov
mov
shll
xor
pop
or
daa
mov
aaa
enter
sub
mov
enter
mov
pop
lahf
push
stc
xor
stos
push
cs
in
add
daa
and
or
shll
add
daa
add
push
ja
add
out
lret
jge
push
push
jb
icebp
aas
popa
test
inc
bound
sub
js
gs
pusha
adc
cs
mov
ret
dec
bound
mov
int
pop
jle
jne
icebp
jnp
out
movsb
das
int
sbb
mov
xor
mov
xor
mov
mov
out
cmp
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
pop
pop
leave
ret
push
mov
sub
xorl
push
call
test
jne
addl
xor
jmp
call
cltd
movl
cmp
jne
cmp
je
push
subl
call
addl
test
movl
jne
subl
push
xor
mov
or
mov
xorl
movl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
jmp
andl
mov
inc
mov
cmpl
jne
pushl
pushl
push
push
call
cmpl
jb
lea
subl
mov
lea
andl
mov
inc
mov
cmpl
jne
pushl
pushl
push
push
pushl
call
cmpl
jb
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jb
mov
xor
mov
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jne
push
pushl
pushl
push
push
push
pushl
call
jmp
mov
movl
cmpl
je
cmpl
jne
push
push
pushl
push
pushl
push
pushl
push
call
mov
dec
mov
jmp
mov
xor
mov
mov
addl
push
mov
sbbl
xor
sbbl
push
xor
mov
adcl
add
mov
mov
movl
cmp
mov
je
mov
xor
subl
add
addl
imul
mov
jmp
andl
mov
inc
mov
cmpl
jne
pushl
push
push
call
cmpl
jb
xor
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
add
mov
mov
sbb
mov
sbb
xor
not
add
mov
mov
mov
subl
xor
add
movl
cmp
jne
xorl
pushl
subl
pushl
call
mov
mov
xor
mov
sbb
mov
inc
mov
mov
or
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
push
push
call
cmpl
jne
xor
or
inc
mov
jmp
mov
mov
mov
movl
mov
and
mov
andl
mov
inc
mov
cmpl
jne
call
cmpl
jb
mov
xor
xor
add
mov
xor
xor
add
lea
cmp
ja
mov
xor
lea
push
mov
xor
lea
push
mov
pushl
call
mov
xor
lea
mov
mov
xor
xor
add
mov
xor
lea
cmp
jbe
mov
mov
mov
mov
mov
mov
mov
sub
xor
mov
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
pushl
mov
pushl
add
mov
mov
pushl
call
mov
mov
mov
jmp
mov
mov
xor
add
cmp
jne
mov
xor
add
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
mov
movl
mov
xor
add
mov
mov
mov
mov
mov
mov
push
pop
sub
add
movl
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
lea
mov
mov
xor
add
mov
lea
push
mov
xor
add
push
mov
push
pushl
call
xor
mov
sub
push
mov
add
push
call
inc
cmp
jb
mov
call
lea
mov
mov
mov
pushl
lea
push
call
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
xor
or
sub
mov
mov
movl
cmpl
je
cmpl
jne
push
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
add
mov
mov
mov
sub
mov
xor
add
and
mov
mov
mov
subl
push
adc
push
mov
andl
mov
inc
mov
cmpl
jne
pushl
call
cmpl
jb
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
jmp
jmp
cmp
inc
mov
negl
dec
inc
push
shl
jo
xchg
jg
jo
shrb
inc
inc
dec
mov
cmp
sbb
dec
jmp
xchg
pop
cmp
pop
bound
jmp
mov
inc
aam
mov
lods
mov
cmp
dec
cmp
sbb
mov
and
and
mov
mov
fsub
pop
imul
mov
mov
cs
imulb
das
mul
and
shlb
repnz
adc
lds
imul
cmp
lcall
mov
push
dec
jmp
sub
add
adc
push
push
cmp
jl
stos
sbb
sub
push
decl
cmp
jbe
addr16
repnz
jle
or
lret
mov
push
lcall
in
into
out
popf
ja
add
adc
ss
mov
push
sbb
out
jae
into
push
mov
push
pop
and
scas
rolb
adc
mov
aam
cmp
cmp
lret
sti
setg
ret
add
divl
testl
out
pusha
std
or
jle
xorb
test
xchg
sbb
addr16
sub
shlb
inc
scas
or
iret
mov
xchg
shlb
dec
mov
test
and
imul
bound
scas
aam
adc
stos
push
jmp
mov
jae
jno
mov
hlt
or
xor
out
jo
xchg
jg
jo
push
dec
int3
cmpsb
sbb
icebp
mov
xorb
pop
iret
pop
adc
mov
xchg
add
cmp
mov
and
xor
pusha
pop
sub
mov
ds
ret
mov
mov
subl
inc
into
in
lcall
test
add
sbb
sbb
lock
mov
mov
outsl
fidivrs
in
add
filds
inc
test
xchg
in
scas
mov
mov
cmpsl
push
dec
push
mov
mov
rolb
repz
es
pop
lret
mov
test
pop
xchg
pushf
xchg
dec
aam
dec
push
xchg
mov
sbb
cld
leave
sbb
cltd
mov
mov
mov
mov
std
push
adc
adc
dec
lcall
arpl
inc
aam
and
dec
lret
adc
daa
das
insb
das
mov
cltd
mov
xchg
push
cmp
jmp
loop
scas
in
js
xchg
mov
jae
fstl
inc
shr
outsb
pushf
mov
test
int3
std
or
out
push
adc
out
push
adc
push
movsb
leave
xchg
push
pop
stc
or
xor
dec
imul
mov
or
mov
shlb
in
clc
repnz
repz
cmp
and
fs
test
jae
sub
enter
lds
inc
jmp
or
jo
loopne
xchg
rorb
cltd
cmp
cmp
jecxz
mov
fwait
jle
mov
jmp
jns
popa
mov
cmp
test
add
sbb
add
sbb
mov
notl
lea
xor
mov
mov
add
mov
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
add
mov
movl
lea
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
and
mov
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jne
push
push
push
call
jmp
mov
addl
mov
sub
xor
add
add
neg
mov
mov
movzwl
sbb
mov
movl
mov
mov
orl
mov
addl
movzwl
add
movl
mov
jmp
jbe
dec
sahf
jb
jbe
xor
pop
pop
inc
mov
jo
xchg
jg
jo
sarl
in
popf
dec
idiv
repz
nop
ret
les
ret
mov
dec
cmp
lcall
or
std
out
jbe
cmp
daa
sub
pop
dec
mov
push
add
loopne
insl
sub
es
cmpsb
mov
push
cmpl
jae
jmp
or
dec
mov
sahf
pop
push
push
sub
jg
mov
cmpsl
lods
sbb
je
popa
sarb
out
loopne
je
int
call
daa
push
lret
inc
xchg
push
sbb
xchg
rcll
mov
cwtl
sbb
test
push
mov
xchg
mov
ret
push
cwtl
and
imul
cs
mov
mov
imul
lcall
or
jnp
dec
stos
push
movsb
cmc
sub
mov
aam
cmpsb
out
pop
stos
dec
push
adc
sbb
shl
rcrl
out
jno
xor
daa
pop
push
nop
xor
xchg
add
pop
in
mov
and
scas
push
int3
fucomip
add
push
inc
cmp
insb
icebp
js
jmp
cmp
faddl
cmp
jl
or
cwtl
mov
fildl
aaa
mov
out
repz
xchg
dec
inc
jecxz
xchg
imulb
daa
icebp
jge
cmp
jecxz
push
mov
adc
repnz
push
popf
testl
pop
pop
out
xchg
or
jno
test
pop
push
cmpsb
push
sar
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
mov
mov
mov
xor
mov
sub
add
mov
mov
mov
movzwl
add
mov
mov
jmp
and
repnz
inc
std
inc
scas
cltd
popa
and
jo
xchg
jg
jo
dec
and
and
push
or
mov
ret
adc
scas
pop
cli
sti
adc
stc
inc
leave
or
sub
mov
jne
test
add
pop
test
mov
mov
and
mov
lock
jns
push
sarl
push
inc
and
out
mov
lods
push
mov
jne
cli
mov
xlat
jb
scas
xchg
push
xchg
pop
or
fldenv
ret
mov
xor
add
out
sub
push
cs
mov
mov
in
repnz
jns
xor
addl
out
mov
pop
jge
xchg
jmp
rorl
ficomps
lods
pop
aaa
cwtl
cmp
push
negl
jg
lods
fimuls
das
mov
or
mov
xor
adc
xchg
cmove
ret
les
pusha
inc
roll
mov
stc
xorb
jo
push
aas
xchg
nop
and
jl
mov
or
divb
test
scas
jno
push
add
arpl
pushf
sbb
imul
pop
pop
cmp
xchg
cmp
mov
in
std
sti
aam
enter
push
test
xlat
add
mov
jge
sbb
sar
push
dec
fsubr
or
sahf
ficomps
mov
fistl
push
popf
push
out
mov
outsl
movsb
dec
movsl
test
pop
mov
cltd
jbe
dec
or
lea
xor
sub
mov
movzwl
cmp
mov
movzwl
jg
xor
sub
sub
mov
jmp
xor
lea
mov
mov
cmp
je
mov
movl
jmp
mov
mov
xor
add
cmp
je
jmp
icebp
in
popf
adc
xchg
cld
insl
jl,pn
jns
ljmp
mov
dec
cmp
test
xchg
sbb
jle
arpl
mov
mov
ljmp
push
idivl
mov
add
loop
dec
leave
shr
clc
push
xchg
scas
mov
sub
lock
dec
pop
mov
xchg
adc
ljmp
jns
mov
dec
push
andl
in
xchg
sbb
ljmp
jg
stc
jecxz
pop
les
cmpsb
sub
icebp
icebp
and
xor
cmpsb
and
push
adc
shrb
sbb
test
mov
and
sub
fidivl
aas
push
cs
dec
outsb
add
adc
cli
push
and
shlb
inc
jp
lret
lar
stos
pop
call
fstpt
ljmp
mov
push
movsb
aad
shr
sahf
push
jbe
pop
dec
mov
insb
pshufw
inc
mov
into
movsl
ret
mov
jnp
push
or
pop
in
mov
movsl
inc
orl
mov
mov
jb
pop
sub
popa
jmp
push
lods
push
dec
stos
frstor
jb
movsb
inc
pop
adc
dec
leave
pop
outsl
mov
imul
test
and
ds
popl
jg
add
and
pop
cmovb
pop
mov
xchg
adc
jle
imul
enter
in
cwtl
xlat
and
xchg
dec
mov
xchg
sub
cltd
mov
mov
mov
mov
lea
add
mov
mov
mov
mov
mov
xor
add
jmp
iret
dec
mov
mov
icebp
dec
dec
int
dec
bound
sub
fucomi
jo
xchg
jg
jo
mov
add
sub
in
leave
je
jno
pop
lret
and
stos
push
sbb
and
scas
jnp
popa
mov
and
loopne
push
jl
xchg
mov
pop
arpl
fidivrl
push
add
dec
and
repz
xlat
cmpsb
mov
das
fbld
aaa
sbb
arpl
cmp
call
insl
cmp
shlb
rcll
sbb
inc
xor
test
cld
or
mov
xchg
and
fwait
jecxz
xchg
int3
sbb
pop
push
cwtl
mov
mov
mov
out
xor
jg
outsl
pop
addr16
xchg
inc
outsb
xor
pop
jns
cwtl
js
cmp
push
iret
pop
pop
xchg
int3
inc
into
mov
js
inc
fcoms
fwait
push
push
lret
leave
pop
nop
xor
mov
lret
adc
mov
lods
popa
xchg
call
mov
or
sub
dec
cltd
and
jae
xchg
sbb
or
push
push
cmc
inc
add
pop
movsb
in
or
nop
push
test
sub
pop
cvtdq2ps
mov
mov
jbe
sub
in
adc
mov
pop
call
inc
jae
fdivrl
rcl
dec
add
or
imul
xchg
jge
jns
inc
ret
dec
jae
adcb
stos
dec
mov
mov
adc
les
mov
add
mov
icebp
in
icebp
mov
push
in
vpshuflw
jo
jg
jo
add
mov
movsb
jne
sub
jg
stos
xchg
shll
fldl2t
cs
imulb
or
testb
hlt
xchg
aas
and
adc
out
dec
add
jmp
inc
inc
pop
jae
lret
and
mov
dec
adc
dec
gs
rorb
push
out
jmp
lods
sbb
mov
pop
inc
and
cmp
scas
sahf
sbb
sbb
lods
dec
arpl
mov
ret
push
aaa
dec
mov
push
sbb
int3
test
insl
adc
pop
sub
mov
cld
outsb
add
dec
xchg
into
pop
movhps
scas
dec
inc
fs
int
pop
jg
push
loope
mov
add
cli
cmp
mov
xor
outsb
pop
lock
das
les
pop
aaa
mov
es
outsl
loop
pop
push
cltd
push
cmpsl
sti
inc
or
add
addl
clc
mov
in
mov
stos
fildll
jge
and
outsb
jnp
mov
lret
xchg
int
cli
xchg
and
mov
test
cmp
mov
xchg
or
mov
xchg
xchg
sbb
out
enter
cli
iret
sarl
mov
mov
fidivl
lods
jl
mov
mov
ja
ds
mull
inc
mov
loopne
xchg
push
dec
in
popa
dec
sub
test
mov
push
clc
xchg
loopne
movb
cmp
je
mov
mov
add
mov
mov
mov
jmp
dec
push
sub
imul
icebp
std
jl
cmc
jo
xchg
jg
jo
cmc
idivb
xor
push
fwait
cmpsb
icebp
mov
sbb
push
pushf
xchg
movsb
mov
sbb
or
mov
push
jmp
roll
popf
jne
and
mov
xor
jle
push
mov
push
push
lret
adc
test
enter
pop
jo
push
dec
and
fwait
rorb
jg
dec
out
inc
xor
movsl
fstl
adc
pop
fs
testl
daa
mov
and
fsubl
dec
outsb
inc
cmp
dec
dec
test
mov
jb
cmpsb
hlt
mov
mov
shlb
hlt
shl
push
sarb
imul
push
and
xor
push
mov
les
lret
push
xor
cmc
lret
nop
js
or
push
mov
xor
push
jle
pop
xlat
jle
rolb
xchg
shl
rolb
aas
scas
daa
mov
and
sarl
cmpsb
push
rorl
in
inc
or
daa
pop
mov
cmp
lea
jb
sbb
mov
ja
imul
fbld
das
sarl
nop
es
ds
cltd
push
loop
gs
or
in
jno
sbb
clc
adcb
or
push
out
imul
pop
ffreep
add
jb
jge
pop
aas
loop
cmp
outsb
mov
or
pop
sub
push
cmp
mov
adc
inc
or
or
mov
add
frndint
std
imul
mov
xor
sub
jo
jg
jo
aaa
xchg
mov
push
je
xor
roll
push
sub
mov
aas
popf
cmpsl
mov
pop
sub
mov
jne
xlat
test
add
mov
arpl
mov
jne
mov
mov
adc
push
data16
dec
in
lret
hlt
imul
stos
xchg
movsl
add
pop
adc
or
pusha
mov
daa
cld
push
fldl
cmp
add
rorl
cld
movsl
pop
lret
insl
xchg
push
mov
xchg
cwtl
push
push
insl
pop
inc
jg
fisubrl
repz
iret
mov
sbb
jno
jnp
push
xsaveopt
jecxz
scas
sub
arpl
jmp
in
push
mov
mov
lds
cmpsb
leave
mov
mov
int3
lds
data16
jp
pop
sahf
inc
stos
sub
testl
add
mov
lea
push
jnp
xchg
jg
jnp
imul
aam
pop
fisttps
dec
out
inc
xor
leave
out
lret
jnp
add
andl
push
and
int3
pop
or
or
cmp
mov
scas
in
sub
aas
ljmpw
jno
add
cmp
das
ds
cmpsl
adc
es
lahf
rcll
pop
push
jle
xchg
mov
sbb
mov
add
or
jl
add
pop
mov
std
nop
and
inc
cmp
sti
sub
loope
xchg
gs
mov
cmp
mov
mov
add
jmp
hlt
sbb
rep
cmp
aaa
jnp
lahf
sbb
jo
xchg
jg
jo
movb
stos
imul
or
adc
loopne
lahf
pop
and
mov
mov
push
jbe
dec
mov
pop
cmpsb
and
enter
out
sbb
into
rclb
sbb
inc
sub
ja
and
sbb
xor
xor
incl
test
test
or
xchg
out
ss
sarb
test
mov
sub
jo
mov
jno
cmp
fucomi
aad
scas
pop
xchg
in
repz
add
lock
push
imul
sub
ja
add
addr16
pushf
mov
and
lea
cld
mov
icebp
jae
xor
sahf
mov
imul
lods
mov
movsb
fildll
jecxz
ds
inc
loope
mov
ja
popa
xchg
inc
shrb
xor
xor
jae
mov
iret
rolb
orb
inc
jno
rorb
push
in
push
push
jnp
int
mov
andb
and
mov
roll
ja
shr
hlt
mov
mov
adc
sbb
cmpsb
cli
cltd
cli
adc
lods
insl
dec
and
mov
xor
bound
aam
mov
push
dec
aas
mov
sbb
sub
mov
pop
ljmp
mov
pop
mov
cmp
je
mov
mov
xor
add
mov
jmp
xorl
jmp
mov
mov
mov
mov
mov
jmp
lret
icebp
dec
cmp
dec
inc
in
jo
xchg
jg
jo
pop
mov
popl
repnz
repnz
inc
jne
bound
mov
in
or
cmpsb
push
iret
decb
or
addr16
js
scas
call
inc
test
shrb
cwtl
outsl
dec
out
call
xchg
fcomp
movsb
jmp
mov
mov
and
mov
jae
xchg
andb
clc
mov
inc
sbb
int3
xor
ljmp
lret
divl
or
aas
push
test
fs
dec
aad
out
pop
dec
sbb
ds
cli
fwait
repnz
jecxz
pop
and
rol
add
sub
pushl
dec
sahf
scas
sarb
addr16
test
cwtl
ljmp
mov
or
add
js
xchg
mov
fimull
mov
jl
jno
cmp
leave
imul
fldt
insl
sub
leave
adc
leave
mov
das
std
jae
lret
sub
data16
mov
push
dec
call
sahf
scas
or
or
jg
outsl
mull
sbb
or
pop
cwtl
xor
xchg
fnstsw
lret
or
fsubr
adc
and
dec
in
mov
adc
add
mov
pop
fwait
lods
in
rcll
dec
sbb
cli
push
jge
sbb
negb
cli
dec
mov
sub
je
lods
pop
jp
aam
mov
pushl
call
mov
cmp
je
mov
mov
pop
pop
pop
leave
ret
push
mov
push
sbb
movl
sbb
mov
orl
jmp
push
mov
xor
je
stos
aas
lods
and
jns
jo
jb
jo
pop
push
mov
pop
lahf
jnp
add
inc
outsb
pop
in
cmp
dec
in
push
fmuls
aad
xor
mov
xchg
repnz
pop
jno
stc
add
cmp
lahf
mov
dec
loopne
and
mov
call
dec
xchg
jne
pop
out
push
cltd
mov
adc
das
mov
jns
inc
iret
lock
cmpsb
xlat
mov
lea
jmp
inc
lret
stc
xchg
mov
dec
fwait
outsb
push
fdivs
lea
cmp
dec
les
sbbb
and
test
pop
push
or
push
vpmaxsb
daa
xchg
mov
rolb
and
xchg
fbld
and
jmp
xlat
nop
or
cwtl
dec
ja
aad
pop
jecxz
das
insb
add
mov
imull
jl
dec
shlb
lods
aam
add
mov
inc
out
in
xor
xchg
jge
lret
sahf
movsl
sub
dec
orl
mov
gs
lods
std
push
jns
mov
sbb
xor
sarb
ret
arpl
out
and
bound
push
mov
mov
mov
and
mov
jns
pushf
aad
pop
iret
jge
test
enter
das
sti
mov
cmp
push
sbb
jb
inc
xacquire
push
pushf
pop
arpl
inc
push
and
adc
cli
sbb
lcall
xchg
jae
test
jecxz
icebp
sbb
dec
jne
and
mov
pushf
push
out
cmp
push
fildll
cmp
bnd
mov
xchg
sub
fucomp
mov
cmc
int3
stos
and
jl
in
xlat
mov
mov
movsb
int3
imul
mov
nop
inc
mov
and
mov
adc
push
sahf
xor
xlat
lds
orl
mov
add
andl
xor
cmp
movl
jne
mov
mov
movzbl
xor
mov
add
xor
mov
mov
or
mov
andl
mov
inc
mov
cmpl
jne
push
pushl
push
pushl
call
cmpl
jb
xor
push
jmp
je
test
pop
pop
or
jmp
jnp
jo
jb
jo
or
pop
ss
mov
mov
test
stos
cs
enter
sbb
loope
jl
push
cmp
sub
pop
mov
cs
jnp
sub
jecxz
xchg
popa
sti
inc
jbe
lock
sti
and
enter
inc
mov
aaa
jp
mov
dec
push
scas
mov
push
inc
inc
fistpll
shll
daa
pop
out
test
jp
jmp
aam
xchg
sub
ficomps
or
fcmovb
cmc
jne
adc
scas
mov
fisttpl
lods
jne
inc
popf
iret
setbe
data16
hlt
ljmp
cs
shll
mov
int
add
lock
repnz
shlb
mov
jl
jmp
jecxz
das
jnp
push
add
movsl
sbb
sub
bound
push
popa
in
push
mov
jb
js
pop
xcrypt-ofb
cmpsl
sub
mov
push
add
and
cmp
cmp
mov
mov
pop
pop
adc
test
mov
int
cmp
addr16
cmpsb
mov
mov
ret
insb
pop
jns
inc
lret
es
xorb
es
jno
xchg
pop
xor
rolb
shlb
xchg
call
cs
in
inc
cwtl
or
sub
add
adc
es
arpl
cmpsl
xchg
aam
lret
xchg
sbb
hlt
data16
cltd
mov
lret
add
push
inc
inc
or
outsb
ljmp
ds
or
fldenv
clc
push
push
rorl
fldcw
jl
push
mov
inc
jae
std
push
or
sub
insb
rcll
lahf
and
cs
jg
clc
inc
or
mov
mov
out
aam
call
jne
mov
add
jmp
cli
cmpsl
push
in
gs
arpl
or
jge
jo
jb
jo
xchg
loopne
mov
pushf
cli
test
xchg
test
int3
mov
fiaddl
loope
adc
in
cmp
addb
xor
in
fwait
repz
jbe
outsl
lret
cld
mov
ret
pop
test
xchg
mov
sbb
pushf
mov
out
dec
cmp
and
jnp
and
in
mov
pop
mov
mov
ret
fimull
mov
aad
loopne
imul
adc
les
scas
stos
jno
jae
lock
das
sbb
shrl
inc
int3
loopne
andb
push
fwait
jae
jecxz
xchg
fldl
imull
push
add
jl
sbb
push
mov
mov
pusha
cwtl
das
in
push
jne,pn
or
adc
mov
js
div
shll
mov
lea
or
add
pushf
lods
das
fnstcw
push
sub
test
mov
pop
xorb
mov
jno
aad
mov
test
sahf
push
imulb
or
cmp
imul
and
aaa
out
mov
or
mov
pop
xor
push
mov
out
add
add
cmpsb
cmpsb
bound
jbe
mov
shll
or
lahf
xchg
ficompl
xor
cli
jns
pop
sub
outsl
jl
popf
xchg
sbb
xor
push
jecxz
and
jne
mov
lahf
hlt
loop
cmp
lds
ja
stos
pop
pushf
stc
jmp
pop
jle
movsb
mov
fcoms
mov
out
xchg
stos
enter
push
push
mov
or
dec
push
icebp
pop
and
jmp
sbb
scas
inc
lret
push
and
xchg
loope
lds
call
push
cmpsb
jns
xchg
xor
je
mov
jmp
mov
xor
add
jmp
mov
jmp
or
scas
shll
jb
loop
mov
jo
jb
jo
cmp
ljmp
test
push
in
inc
fiadds
mov
lahf
in
add
sbb
inc
adc
cmc
push
lret
jno
cld
pop
lock
iret
cli
sub
pop
movsb
dec
sbb
mov
jns
mull
std
scas
insb
xchg
sbbb
mov
and
cld
out
je
nop
hlt
shlb
push
mov
pushf
ds
cmp
cmpsb
test
sbb
add
pop
into
push
mov
roll
inc
cmp
rclb
scas
mov
xchg
pop
jo
pop
cltd
mov
leave
or
pop
mov
shrl
xchg
sbb
pop
pop
mov
push
push
scas
test
lea
lret
pop
lcall
mov
jns
cmp
cmp
push
test
sub
sti
mov
jge
pop
inc
fidivrs
je
or
push
and
jle
push
ljmp
pop
mov
cmp
mov
popa
pushw
sti
cld
cmp
fsubp
sub
repnz
xchg
mov
popa
in
add
mov
sub
dec
jle
push
adc
cmp
adc
sbb
insl
xchg
js
repnz
pop
xchg
scas
mov
test
cld
jns
xlat
int3
lahf
movsb
call
and
out
mov
add
jmp
into
nop
add
out
fldt
insb
inc
push
js
mov
shlb
imul
adc
popf
addb
sbbl
out
mov
cmpsl
cmp
mov
dec
jns
mov
aas
in
sub
mov
icebp
loopne
mov
adc
daa
mov
movhlps
cltd
and
lea
jne
xor
fnstenv
cltd
jo
scas
rcrl
repnz
out
xor
xor
jmp
jnp
xchg
les
sub
push
int
cmpsb
jno
jo
jb
jo
test
mov
sar
mov
cli
loope
ret
orb
das
push
xchg
and
and
xchg
dec
sbb
fstps
loop
cmp
xor
fcoms
out
xor
dec
and
mov
sub
push
jns
jmp
dec
std
outsl
and
cltd
leave
and
xor
les
mov
sbb
cmp
pop
ficomps
je
stc
int
inc
sub
dec
fidivs
xlat
mov
test
add
icebp
adc
loopne
lods
clc
push
mov
aam
cltd
push
xor
sbb
es
loop
into
add
and
ret
dec
xchg
stc
bound
jg
cmp
push
sbb
lds
jmp
loopne
sahf
mov
mov
aam
lret
jl
test
scas
aaa
xchg
pop
daa
inc
gs
add
cld
adc
jmp
mov
push
adc
jmp
dec
movsl
scas
lcall
outsl
or
adc
or
stos
jp
cmp
mov
pusha
sbb
in
sahf
int3
xchg
sub
mov
pop
pop
mov
dec
xor
test
push
ret
xchg
rclb
sbb
mov
std
sti
mov
testb
sar
shl
dec
out
add
adc
insl
das
and
push
dec
inc
dec
dec
inc
add
and
ret
push
mov
xadd
mov
pop
xor
xor
leave
std
jns
jp
mov
or
and
test
mov
test
mov
in
and
sub
xchg
sbb
imul
movsb
add
into
xchg
mov
and
jmp
popa
add
ss
fisubrl
repnz
iret
pop
faddl
add
dec
loopne
fucomi
stc
lahf
imul
jb
out
sub
mov
add
leave
ret
push
mov
mov
mov
and
sub
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
movl
cmpl
je
cmpl
jne
pushl
pushl
call
cmpl
jne
xor
xor
dec
mov
mov
dec
mov
jmp
mov
push
mov
xor
cmp
je
mov
mov
sub
xor
jmp
xchg
roll
icebp
lods
add
ror
sub
test
leave
jle
jo
mov
js
mov
add
adc
aas
cmp
mov
cmp
cli
out
mov
ja
jnp
xchg
movb
sbb
mov
mov
cmc
into
stos
ljmp
pop
add
ljmp
leave
into
mulb
in
mov
inc
push
xchg
dec
add
mov
paddb
test
mov
fiadds
outsl
mov
add
fwait
sarl
cli
mov
jl
cmp
or
dec
cld
scas
popf
sti
lock
lret
stc
pushl
cli
cltd
rcrl
pop
fcomip
jge
test
ds
dec
sbb
repnz
lock
rcr
mov
or
mov
add
sbb
icebp
out
mov
adc
aas
mov
cmp
jl
cwtl
sbb
sub
movsb
cmp
pop
jmp
in
aad
or
add
fsts
xlat
pop
and
pusha
push
int
or
int
push
pop
push
jge
es
mov
fsubs
ret
call
sar
or
jmp
popf
cs
test
sbb
dec
negb
stos
cs
cwtl
jnp
push
push
dec
mov
and
sub
push
fcoms
pop
jae
imul
sub
lods
dec
pop
loopne
testb
jl
mov
jo
jp
sbb
mov
jo
inc
xor
pop
shlb
xchg
xchg
sbb
fldcw
repnz
xor
xor
xchg
dec
nop
mov
inc
in
xor
jle
lret
push
stos
sub
adc
jns
xchg
mov
in
insl
push
pop
flds
dec
mov
sub
popa
jle
sarb
jecxz
mov
lcall
add
mov
je
or
ds
sarl
mov
insb
adc
rcr
test
add
jecxz
lods
xchg
xchg
push
jne
fsubp
aaa
mov
pop
je
mov
pop
testb
fnstenv
adc
or
jge
sub
xor
jne
mov
add
jmp
mov
xor
jmp
pop
scas
sbb
push
pop
mov
mov
jo
leave
jle
jo
fbstp
inc
cltd
mov
mov
mov
and
leave
fldcw
sarb
pop
mov
push
mov
dec
scas
adc
icebp
iret
dec
or
jns
jbe
loop
int3
mov
xchg
iret
push
loop
jl
sbb
aas
jno
mov
stc
mov
lea
jl
jl
jns
imul
imul
ret
jge
and
add
mov
pop
mov
cltd
sbb
jmp
adc
movsb
pop
xor
mov
sbb
cmp
int3
dec
jmp
cmp
lcall
iret
dec
mov
out
es
pop
roll
xor
stos
xor
or
imul
ss
push
sub
ds
insb
dec
out
sbb
mov
hlt
cmpsl
cmp
mov
xchg
jg
mov
or
mov
or
sub
fbld
ret
or
js
movsl
adc
xchg
adc
or
mov
fmuls
sub
out
cmp
inc
int3
or
test
dec
lret
jb
inc
pop
cmp
jno
mov
test
cmp
nop
lea
push
xchg
or
jg
push
push
push
shl
inc
pusha
sub
clc
cwtl
cld
xor
stos
js
or
call
sub
dec
push
lea
ficompl
mov
push
push
pop
mov
aad
add
xor
stos
cli
inc
jmp
pushf
jns
outsl
cmpsl
add
mov
xchg
sub
test
call
sbb
loop
inc
pop
dec
pop
mov
xorl
xor
pop
hlt
lea
imul
and
push
dec
movsl
mov
mov
cmpl
cmpsb
jp
mov
movsl
lret
cmp
daa
enter
ret
adc
test
fnstenv
test
nop
mov
pop
or
jne
call
jae
cmpsb
iret
sbb
aaa
into
outsl
and
xor
mov
push
enter
pop
mov
ret
add
add
and
dec
xchg
lahf
stos
movsl
xorb
jle
jo
hlt
repnz
negb
inc
aad
and
mov
pop
ljmp
sahf
mov
out
outsb
jns
loopne
inc
jle
fs
das
xorb
cmpsl
xor
push
loop
stos
stos
cmc
adc
adc
inc
mov
lret
into
xor
adc
repz
clc
pushf
fidivrl
icebp
jmp
imul
inc
xchg
addb
pop
mov
stos
lods
and
lods
mov
sub
mov
or
cmp
push
outsb
xor
scas
cmp
jae
sti
rolb
jle
cld
lret
loop
pop
sub
push
pop
pop
or
push
cmp
pop
lahf
subl
cmp
pop
daa
sahf
push
mov
scas
sub
imul
inc
ss
push
push
mov
mov
mov
sub
pop
mov
fidivrs
cmpsb
xchg
addl
lds
popa
out
ret
movsb
xor
std
push
or
pop
aam
lahf
xchg
xor
sbb
dec
js
idivl
aam
and
outsb
add
adc
pusha
lea
mov
fstpt
les
out
orb
adc
mov
jo
pop
mov
icebp
sub
push
add
push
out
popa
in
insl
mov
xchg
push
xor
mov
stc
clc
test
xchg
shlb
aaa
lcall
jno
sub
rcrb
jg
or
les
xchg
daa
nop
ja
add
jge
insb
fadd
sub
lock
les
xor
ljmp
jge
fbld
push
lret
insl
lds
pop
in
jl
repnz
mov
cmp
mov
fs
dec
sbb
mov
jne
loop
cmp
mov
cmpl
jno
cli
lret
inc
lahf
cmp
inc
movsb
imul
and
xor
out
pop
add
cmc
daa
fidivl
dec
iret
inc
adc
or
mov
ds
mov
ret
pop
push
dec
dec
imul
mov
add
add
mov
jmp
mov
mov
mov
mov
mov
add
pop
pop
ret
push
mov
sub
movl
mov
mov
sub
and
movl
movl
cmpl
je
cmpl
jne
push
push
pushl
call
cmpl
jne
mov
dec
mov
xor
add
dec
mov
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
xor
xor
xor
add
sub
imul
mov
addl
push
mov
sbb
xor
sbb
mov
add
andl
mov
movl
cmpl
je
cmpl
jne
push
pushl
push
call
cmpl
jne
xor
xor
dec
mov
mov
dec
mov
jmp
mov
sub
mov
mov
sbbl
push
adcl
push
adcl
test
movl
je
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
pushl
pushl
pushl
call
jmp
movl
cmpl
je
cmpl
jne
push
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
notl
mov
neg
mov
movzwl
add
mov
imul
jmp
xchg
imul
cmp
jo
jge
jo
hlt
stos
cmp
jne
faddp
dec
adc
pop
fs
sub
pop
outsl
sub
xor
mov
push
xor
mov
jp
inc
adcl
adc
lds
add
pushf
jmp
or
push
cmp
mov
jno
and
test
test
hlt
pushf
and
mov
mov
sub
and
jl
std
xor
and
repnz
mov
mov
insb
jbe
cmpsb
dec
lock
mov
shl
dec
xlat
lahf
mov
gs
sbb
jmp
icebp
fcoms
xlat
mov
add
xchg
ret
push
fwait
mov
mov
loopne
push
xchg
mov
rcr
movsl
xchg
das
inc
fistl
xor
int
dec
pusha
cld
and
jb
rolb
leave
pop
inc
scas
push
jns
pusha
mov
adc
fldl
xor
push
push
scas
movsb
imul
arpl
xchg
in
fnstsw
inc
mov
movsl
es
push
sbb
push
mov
pop
out
scas
fsts
push
mov
out
xor
cmp
sub
pusha
inc
push
mov
inc
imul
push
or
loop
repz
cmp
sbb
sbbl
inc
sbb
dec
fwait
xor
test
push
out
mov
scas
pop
cmp
jns
nop
sti
xchg
mov
pop
pop
dec
xor
mov
inc
xor
incl
pop
shr
je
jl
xchg
incl
mov
mov
movsl
add
dec
sbb
xchg
cltd
dec
inc
lds
bound
movsb
inc
or
leave
or
sub
in
mov
pop
sbb
aam
add
test
fwait
inc
ret
cmpsb
mov
je
sbb
or
lcall
scas
insb
stos
jge
jg
pop
dec
lret
pop
inc
pop
inc
popf
fs
mov
jge
or
cmp
test
pop
jmp
sub
ja
fcmovnu
dec
push
mov
lcall
scas
sub
cmp
sbbb
out
inc
and
push
sbb
popa
xchg
jp
mov
repz
pop
mov
addr16
dec
sti
in
outsl
and
push
mov
mov
pop
insb
push
loop
pop
addr16
fisttps
cmpsb
sar
pop
pop
adc
mov
push
ror
cltd
jmp
test
mov
cltd
add
pop
push
pop
mov
sub
mov
lgs
mov
adc
xchg
sar
dec
adc
xor
cmp
daa
bound
fmulp
pop
push
lcall
push
rol
sub
xor
mov
je
popa
mov
addb
clc
jl
in
mov
adc
push
push
mov
push
fmull
in
addb
sar
out
xor
push
pop
gs
or
mov
adc
das
cmpsb
pushf
lods
shlb
lret
jmp
or
dec
lret
pop
shll
into
jne
inc
fstpt
outsl
addl
xchg
ss
mov
push
cmp
add
iret
lret
push
pop
test
scas
aam
fsubrs
push
pop
out
add
pusha
push
mov
xor
lret
fdivr
adc
sub
cmp
sti
or
call
push
sbb
cmp
aad
ss
jb
add
inc
daa
cltd
aad
lahf
mov
pop
cs
mov
xor
jnp
mov
clc
movsl
sbb
lcall
mov
mov
add
addr16
test
fidivrs
or
add
add
not
mov
or
mov
subl
xchg
sub
xorl
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
call
cmpl
jne
mov
inc
mov
jmp
orl
mov
adcl
jmp
addr16
ss
ja
or
in
int
and
jo
dec
jge
jo
pop
stos
jno
mov
mov
aas
imul
mov
test
fistl
push
mov
jmp
cmpsl
out
push
xor
push
or
daa
js
push
ljmp
and
sub
jb
pop
mov
int
jge
cmp
ret
les
loopne
adc
push
outsl
cmc
fdivrs
das
inc
lea
daa
jno
and
mov
xchg
fidivrl
jle
mov
push
ss
mov
xor
arpl
lods
divl
lret
nop
std
loopne
js,pn
cs
sbb
scas
jmp
push
cmp
adc
out
jns
shl
push
movsb
sbb
adc
sahf
in
sub
fcoml
cmpsb
mov
push
jg
rorl
cmpsb
mov
and
std
jb
or
cmp
dec
orb
pop
jns
in
lds
dec
mov
xchg
test
lahf
test
adcl
in
sti
in
xor
mov
mov
and
jmp
pop
pop
test
xchg
mov
cli
cld
out
div
sub
flds
aam
cmpsb
fistps
pushf
cltd
mov
inc
push
xbegin
pop
xlat
aaa
dec
dec
lret
adc
movsl
rclb
or
popa
mov
sbb
int
pop
sbb
fdivs
jg
ror
mov
jmp
nop
test
pop
mulb
inc
arpl
lret
mov
adc
or
fisttpl
sbb
loope
or
in
cmp
jnp
sahf
lds
add
in
jp
scas
xchg
jnp
jl
popf
add
add
pop
mov
hlt
adc
insl
je
dec
and
mov
pop
mov
sub
inc
jg
sub
leave
mov
test
cmp
xchg
and
dec
adc
pop
movb
pop
sbb
jecxz
cmp
cmp
dec
mov
lahf
add
insb
mov
out
add
adc
aas
popf
arpl
stos
fisubl
in
jb
mov
sub
popf
outsb
and
stos
rcrl
pop
mov
sub
mov
ja
cli
dec
es
jp
sbb
loope
enter
mov
lock
sbb
and
adc
scas
and
xor
insb
pop
rol
mov
xor
lods
and
test
push
ja
dec
in
fmuls
andb
mov
lock
test
fistl
jbe
sbb
push
mov
ja
dec
fwait
insb
sbb
cmpsl
out
push
or
jno
xchg
out
xor
mov
in
mov
lea
ficomps
push
outsb
test
fwait
cwtl
xchg
inc
in
xorb
add
insl
lahf
call
daa
in
jb
pop
xchg
or
xor
repnz
cmp
out
mov
movsb
out
out
pop
pop
lock
push
pop
nop
cmp
lcall
rorl
movsb
repz
lret
sbb
sbb
pop
movsl
cltd
sbb
lret
lcall
mul
lea
and
sub
pop
cmc
pop
movsb
jmp
outsl
imul
inc
jb
xchg
pop
jmp
sub
dec
maskmovq
testl
js
mov
imul
add
xchg
aas
mov
or
sahf
sahf
loope
addr16
ja
std
adc
jne
mov
and
mov
andl
xor
jmp
mov
iret
mov
out
fs
sub
stc
mov
jge
jo
out
lcall
loop
xor
sub
ja
inc
pop
adc
insl
aas
sbb
imul
mov
daa
cwtl
adc
xor
cmpsb
xchg
dec
hlt
mov
mov
dec
mov
fdiv
shrb
fwait
inc
adc
mov
movsb
les
mov
xchg
adc
jl
add
jge
sbb
addr16
adc
adc
jp
fiadds
mov
jle
test
xchg
cld
or
mov
lock
xor
fistpll
sbb
mov
sbb
xchg
jo
lods
orb
add
xchg
outsb
sub
mov
xchg
shrl
movsl
std
adc
inc
pop
je
mov
push
fwait
pop
les
aam
cs
icebp
mov
cltd
hlt
add
mov
fsubl
push
out
inc
lahf
imul
jo
ss
idiv
iret
adc
xchg
in
in
lods
ror
sti
push
mov
sti
out
stos
push
enter
pop
mov
or
fxch
push
out
orb
loopne
outsl
outsl
leave
daa
cmp
cmp
dec
inc
outsb
imul
jae
adc
leave
inc
cmpsl
push
inc
loopne
hlt
xor
sbb
pushw
push
aaa
fdivr
push
sahf
aas
aaa
xor
push
sbb
inc
mov
dec
jbe
dec
aad
ds
loope
shl
in
sahf
xor
or
push
inc
push
jns
sbb
test
dec
xorb
aas
pop
ds
in
mov
inc
fdivrs
pop
fdiv
jle
ffree
xchg
repnz
aaa
sahf
mov
test
mov
pop
xlat
sbb
inc
stos
js
or
leave
or
loop
and
aam
lea
pop
ss
shr
push
xchg
repnz
or
sbb
push
jp
ljmp
inc
inc
mov
fistl
mov
mov
negl
xor
stc
push
fmull
jae
aad
in
dec
push
ret
inc
or
xchg
mov
rorb
adc
sub
mov
rclb
stos
pop
call
xchg
sti
scas
fistl
inc
dec
mov
adc
sub
mov
cmp
into
and
sbb
jo
test
push
xchg
ficomps
bound
ja
mov
mov
sbb
pop
cmp
jns
loope
mov
and
sbb
jns
dec
nop
int
in
push
andl
and
in
popf
loope
mov
push
fwait
adc
mov
cmp
or
adc
push
repnz
xor
pop
push
aaa
push
pop
aad
dec
push
mov
andb
hlt
pop
mov
sub
imul
mov
dec
or
and
dec
mov
sahf
cmpsb
push
xchg
jo
lods
sub
or
aad
cli
mov
xchg
test
and
shll
bound
jecxz
sbbb
pop
push
adc
sbb
and
repz
pushf
mov
or
je
push
push
sub
dec
mov
xor
mov
outsl
imul
insb
shrb
xor
arpl
xchg
ljmp
lods
sub
xor
adc
ficomps
or
adc
add
mov
mov
mov
jmp
xlat
frstor
pop
testl
addr16
stc
xchg
jo
dec
jge
jo
pop
ds
pop
imul
mov
xlat
pop
xchg
hlt
inc
xor
ret
stc
fistpl
int3
pop
mov
inc
dec
test
jns
orb
sarb
movb
dec
mov
ljmp
adc
mov
jle
push
pop
mov
push
aaa
aaa
test
loope
sub
xchg
sub
int3
divb
dec
loop
clc
loopne
push
push
imul
out
or
or
mov
sbb
pop
pop
cmp
lcall
mov
sbb
inc
leave
ret
test
or
lods
mov
xchg
pop
int
lock
jo
adc
pop
mov
out
dec
xor
mov
push
sahf
out
sbb
sub
repnz
pop
loope
xchg
outsb
adc
mov
mov
jg
ret
iret
sarb
mov
nop
ljmp
pop
je
cmp
shrl
fwait
cs
arpl
sub
test
jp
ja
mov
or
add
bound
insb
adcb
jo
lds
mov
mov
jne
mov
data16
jp
out
dec
je
rolb
mov
xchg
fwait
dec
aaa
subl
push
add
pop
and
fcompl
lods
pushf
fs
sbb
mov
popa
sub
xor
mov
mov
jle
cmp
and
dec
push
loopne
test
andb
js
lods
xor
pushf
push
mov
or
push
xchg
pop
mov
hlt
push
incl
shrb
sub
lret
out
scas
mov
push
in
sti
aad
jne
push
push
je
mov
cmp
jb,pt
sahf
out
xlat
mov
mov
insl
or
mov
std
xor
movsl
adc
inc
aaa
popf
push
push
int3
cmp
adc
add
jne
imul
xchg
inc
ds
adc
sbb
je
lock
inc
imul
adc
push
cmpsb
mov
or
pushf
xchg
xchg
stos
inc
mov
pop
add
push
icebp
push
mov
xor
sahf
jl
inc
sti
sahf
mov
adcl
in
mov
hlt
dec
xor
xor
pusha
fwait
int
sbb
gs
les
in
fbstp
add
outsl
mov
in
mov
jnp
push
lods
pop
mov
add
adc
xlat
mov
pushf
fs
daa
push
xor
or
push
pop
movsl
leave
je
aam
test
mov
adc
push
or
jge
jecxz
adc
addr16
push
arpl
int3
push
push
shll
and
daa
or
loop
and
scas
into
inc
test
popa
jmp
mov
fstpl
out
pop
mov
pop
fcmovu
mov
push
mov
sbbb
sub
pop
sub
mov
xchg
or
xchg
inc
add
xor
or
das
inc
inc
xchg
daa
in
dec
orb
mov
mov
fstps
jge
sub
jo
mov
clc
loope
jmp
test
ljmp
mov
mov
push
in
xchg
mov
sbb
jge
mov
or
jge
leave
jae
add
iret
xchg
add
aad
adc
lods
iret
cmp
xchg
fisubs
popa
rep
xor
pop
mov
pop
popf
je
movzbl
add
mov
orl
xor
add
movl
cmp
jne
pushl
adcl
call
mov
add
mov
jmp
fs
movsl
sbb
popa
push
negb
adc
push
rcrb
jo
xchg
mov
xor
repnz
fbstp
cmc
and
jo
jno
enter
into
jnp
sub
pushf
pushf
xchg
jge
inc
enter
push
push
pop
cmpsb
jnp
sbb
pusha
xlat
subb
out
lea
xor
ds
aaa
xor
popf
mov
and
xor
push
push
cmp
dec
scas
mov
xchg
inc
inc
sti
lret
imul
inc
pop
push
enter
movsl
enterw
arpl
aam
sarb
lretw
jns
fsub
into
imul
xchg
push
xor
sahf
das
dec
mov
outsl
xchg
fbstp
int3
sbb
cmp
xor
mov
push
sbb
loopne
insb
cmp
dec
fs
push
mov
pushf
fdivs
push
es
inc
mov
and
xor
dec
push
lds
add
add
and
sti
jnp
fsubr
push
add
test
popf
fucomi
daa
pop
cwtl
inc
xor
pop
xor
jge
pop
xor
xchg
shr
jmp
and
ss
jne
inc
adc
mov
xchg
dec
jae
lock
cmp
lahf
rorl
xlat
popa
lds
mov
cltd
rcrb
mov
dec
jl
cld
cltd
mov
lahf
out
fisttpl
pop
adc
mov
ja
fsubrs
sub
ja
idivl
es
fs
mov
jns
dec
cmp
es
xchg
das
adc
push
mov
ret
xchg
cmp
pushf
dec
fimull
loopne
shr
inc
sub
ret
mov
addl
jnp
iret
lret
ljmp
in
xchg
sub
sbb
jne
cmp
and
test
out
cld
test
fisubrl
movsl
mov
jl
mov
push
dec
xchg
push
pop
mov
xlat
test
sbb
adc
xchg
sub
sub
inc
xlat
gs
lock
and
dec
sbb
cs
push
jnp
jo
sahf
es
sbb
mov
adc
add
lea
push
js
repnz
loop
cmp
sbb
in
jae
hlt
into
mov
outsb
mov
xor
roll
xchg
fmuls
dec
adc
call
loope
mov
dec
xchg
gs
mov
mov
dec
mov
push
jb
idivb
push
popf
jbe
aaa
and
mov
shrl
add
cmp
push
inc
mov
mov
sbb
add
es
jge
push
ret
cmp
sub
jg
cmovg
xchg
popa
jnp
dec
loop
push
push
loopne
sbb
and
mov
and
inc
xor
sti
fadds
out
xchg
cli
scas
adc
fisubs
sub
gs
into
leave
arpl
jp
insl
xchg
in
mov
popf
and
lods
mov
in
inc
hlt
sbb
mov
out
push
fistl
and
pop
jmp
int3
movsl
pop
aaa
xchg
pop
fcmove
and
lahf
ret
stos
lock
lods
mov
jp
add
pushf
scas
sub
pop
push
add
fcmovnu
cmc
cmp
cmpsl
push
jne
lcall
xchg
pop
or
fstpt
xchg
js
sub
xchg
pop
xchg
bound
cmpsb
sub
sub
ret
shll
ret
imul
test
pushl
loopne
xor
mov
xor
mov
xorl
xor
add
movl
cmp
movl
je
pushl
adcl
pushl
call
jmp
ret
rcrb
popa
cltd
ret
xorw
fisubl
lcall
push
pop
or
inc
addr16
repnz
mov
xchg
push
mov
sub
push
mov
xchg
aad
jo
mov
sbb
mov
btr
mov
mov
mov
xchg
push
push
leave
pop
mov
insl
add
sti
jge
repnz
shll
sub
dec
imul
arpl
adc
lock
int3
stos
shlb
push
je
pop
into
std
fisubrs
lods
mov
es
jno
push
mov
jl
inc
cmp
cli
adc
xor
popa
push
inc
dec
bound
in
push
movsl
jno
mov
out
out
sub
mov
or
loop
stc
sbb
xchg
inc
push
lds
adc
xchg
test
fisubl
dec
in
push
ds
fcmovu
sbb
cmp
loopne
add
cwtl
add
dec
jg
lcall
cmc
out
and
add
adc
sbb
push
stc
cmc
mov
and
jecxz
sub
repz
jne
xchg
pop
jo
push
aas
cmpb
iret
cs
add
push
xor
add
pop
jl
and
rcl
lods
mov
aas
cmp
cmp
loop
in
xor
push
or
dec
push
pop
jg
mov
jg
aaa
lcall
aam
fistpll
xchg
mov
lds
push
aad
add
xor
jne
sub
or
push
dec
ss
xchg
scas
and
leave
jg
in
xor
daa
jmp
icebp
adc
je
repz
loopne
push
sub
dec
mov
std
dec
int
jge
in
cmp
fstpt
and
or
add
mov
push
into
scas
es
push
sbb
mov
or
in
mov
insl
xor
mov
push
xchg
shr
inc
aad
inc
into
and
xchg
ficoms
sub
pop
mov
push
call
mov
cmp
pushf
ljmp
dec
sub
aas
xor
or
xchg
rclb
mov
cmpsb
fsubrs
scas
leave
lahf
movsl
hlt
in
rcl
inc
in
dec
xor
out
fcmove
into
adc
mov
popa
out
out
scas
jge
xchg
xor
push
into
add
aam
cli
lret
sub
fwait
out
sbb
jae
lret
xchg
mov
lahf
jmp
sar
sub
add
mov
std
mov
and
inc
lret
ljmp
cmp
jg
fildll
xchg
lcall
fincstp
push
pushf
jecxz
sti
cmp
mov
inc
inc
mov
pop
out
push
divb
jbe
ljmp
xchg
push
xchg
stos
adc
push
test
push
push
lcall
mov
mov
push
mov
daa
inc
ljmp
push
mov
jnp
dec
js
pushf
push
inc
adc
stos
ds
pop
adc
pop
scas
xchg
jmp
movsl
xchg
imul
xor
int
test
mov
movsb
aaa
xor
sbb
push
pusha
imul
xor
es
mov
or
push
pop
mov
mov
icebp
adc
push
mov
dec
xor
lock
jbe
es
clc
repnz
pusha
stos
or
sub
sub
xor
mov
mov
es
xchg
insl
sbb
cmp
imul
mov
mov
shll
bound
adc
in
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
add
mov
mov
mov
jmp
loopne
or
xor
in
rorb
cmp
addb
jo
jge
jo
test
imul
sub
or
jp
xchg
fcmovu
sbbb
lds
in
mov
mov
roll
into
push
rcll
orl
cmpsl
and
daa
cmp
cmp
test
lcall
mov
dec
movsb
gs
aas
jo
shrl
pop
popf
sbb
jecxz
jmp
adc
imul
aam
stos
mov
adcl
testb
cmp
dec
sti
fistl
add
jo
int
ljmp
insl
pusha
sti
push
je
dec
test
mov
jo
clc
mov
mov
mov
sbb
jne
loopne
xor
mov
and
lea
rcr
xchg
jmp
sub
mov
ljmp
cmp
js
adc
lods
pop
adc
mov
add
jle
lret
movsl
movsb
gs
inc
lock
mov
and
sub
lret
test
jmp
push
inc
lock
lods
add
cmp
mov
xchg
mov
cmpsl
std
jmp
pop
push
fildll
lea
push
ja
repz
popf
sub
cwtl
out
sub
pop
sti
pusha
xor
dec
sarb
testl
je
sub
mov
xchg
dec
sub
sarb
gs
jbe
jecxz
loopne
test
mov
imul
cmp
mov
stc
mov
scas
stos
xchg
test
sub
out
lods
pop
pop
out
adc
xchg
out
jae
lods
or
push
imul
mov
cwtl
aaa
fsubl
cmp
loop
call
je
xor
add
mov
xor
mov
sbb
inc
stos
test
adc
adc
jle
pop
inc
and
in
sub
les
sbb
cmc
mov
cmp
sub
cltd
iret
inc
out
or
push
lods
xor
add
outsl
hlt
inc
jp
and
push
mov
pop
cmpxchg
xchg
and
fisttpl
dec
inc
les
jge
idivb
stos
sub
xchg
xchg
xor
jne
cmpsb
jmp
mov
movsb
push
sbb
xor
fisubl
stos
cs
jg
iret
outsl
paddq
lea
xchg
jbe
mov
aam
je
stos
adc
jae
xor
scas
and
fdivl
dec
mov
mov
jns
or
dec
mov
pop
mov
ffreep
jp
imul
xor
add
sbb
jle
es
shll
out
popf
test
lds
es
rcl
add
out
adc
lret
or
or
sbb
or
loopne
mov
fucomp
add
pop
std
fs
negb
loop
das
das
cwtl
cmpsb
adc
jo
sub
sbb
mov
imul
adc
test
sbb
or
lcall
aad
jp
fwait
test
pop
mov
jle
jl
add
stos
dec
mov
add
movsl
popa
in
cmp
inc
adc
testl
jo
add
test
sbb
mov
rcl
loope
nop
les
xor
cli
out
movsl
xchg
lods
bound
fdivs
imul
mov
xchg
push
popa
inc
cmp
push
loop
call
sbb
loop
xchg
scas
aas
addr16
mov
and
jb
es
sahf
mov
cs
xchg
arpl
cltd
adc
ficomps
add
fdiv
xor
dec
and
dec
aam
inc
in
mov
add
jmp
inc
jae
pop
sub
jae
and
mov
aas
or
dec
jge
jo
sub
gs
cli
xchg
xchg
mov
ffree
pusha
cs
adc
cltd
jbe
cmp
dec
pop
mov
sbb
popf
xorb
cmp
jno
in
fnsave
js
notl
xor
or
insb
pop
lret
xchg
insb
flds
das
xchg
jge
xor
pop
jb
int
adc
sbb
jge
push
outsb
cmp
call
js
lods
jne
jp
out
xchg
cmp
rolb
ds
lods
mov
add
in
push
cmp
fbld
jb
insb
idivb
add
ja
sbb
clc
in
and
loope
lock
mov
adc
stos
sti
movsb
push
add
mov
mov
inc
add
lret
xchg
inc
cli
dec
out
fwait
nop
mov
hlt
icebp
or
pop
dec
imul
mov
fsts
imul
int3
imul
push
out
fwait
cmpsl
inc
add
rorl
mov
repnz
jno
dec
addr16
jle
fisttpl
push
pusha
pop
xor
jg
fs
ja
dec
test
sbb
outsl
push
popf
andb
pop
test
sbb
pop
pop
mov
ss
fimull
cmpsl
push
pop
push
or
pop
loop
adc
xor
dec
pop
push
mov
mov
outsl
movsl
mov
xchg
scas
add
rcll
dec
lock
arpl
sub
add
xchg
dec
and
mov
iret
dec
inc
lret
test
inc
jae
stos
and
inc
fnstenv
add
jmp
mov
mov
push
mov
mov
cmp
sbb
mov
dec
xchg
jno
cld
jge
dec
imul
rclb
pushf
cmc
pop
jae
sarb
or
xchg
mov
mov
popf
sub
cwtl
call
int
fstl
notl
insb
lods
inc
popa
call
push
pop
sub
add
add
les
loopne
add
pushl
lahf
imul
loopnew
xchg
and
mov
ja
aas
loope
test
push
fmuls
jnp
add
push
lea
inc
mov
mov
lods
addr16
push
sbb
mov
inc
sub
sahf
adc
xchg
xchg
sbb
jle
ss
popa
cmp
gs
sub
and
outsl
stos
cmp
test
jnp
pusha
push
inc
dec
mov
and
mov
iret
adc
dec
add
leave
cld
test
jnp
test
dec
mov
sub
adc
jno
mov
addr16
and
rol
and
and
or
pop
push
mov
js
in
push
sahf
xchg
loope
mov
push
sbb
push
sbb
and
pop
cmpsl
sbb
and
pop
popf
aas
movsl
fistpl
clc
jae
push
pusha
leave
xchg
clc
sub
mov
inc
loopne
icebp
or
or
cld
js
push
repz
outsb
shlb
dec
xchg
jle
inc
and
jmp
popa
outsb
cmp
or
and
std
xor
and
xchg
sbb
dec
mov
xchg
pop
int
stos
mulb
loopne
push
popa
pop
movsb
pop
and
jge
daa
lods
pusha
aas
stc
bound
cmpsb
jbe
mov
cmpb
inc
aas
fistps
pop
mov
sahf
in
cmpsl
rcrl
lcall
lcall
pushf
pop
lret
or
mov
mov
jmp
sbb
sarl
lahf
popa
sti
arpl
dec
xchg
mov
jo
dec
jge
jo
out
test
jle
insb
lock
data16
sbb
inc
fwait
testb
xor
insl
std
in
dec
xchg
nop
ds
movsl
in
mov
rclb
add
icebp
lret
test
int
cli
and
test
add
fwait
adc
mov
in
pop
jl
test
in
jmp
jno
enter
xchg
int3
sahf
pop
lds
mov
push
cmpsl
arpl
push
flds
push
lret
lea
ja
movsb
outsl
add
jne
cs
out
jo
fcomps
hlt
mov
and
push
mov
pop
jae
sbb
aas
lcall
fiadds
sbb
mov
push
sbb
imul
fdiv
add
jmp
jmp
popa
shrl
xor
push
jne
mov
outsb
xor
insl
dec
orl
mov
pop
add
test
xchg
inc
vreduceps
sub
in
sbb
or
lea
mov
jg
push
cmp
xchg
movl
jl
sarb
loopne
imul
cli
mov
and
mov
inc
mov
pushf
jae
rclb
out
nop
out
mov
loopne
out
dec
mov
ret
mov
add
icebp
or
jae
loop
push
mov
in
push
insb
cmp
fisubrl
sub
in
scas
insl
je
movsl
stos
pop
popf
and
mov
loop
jbe
aaa
sub
sbb
mov
mov
lods
mov
jl
in
xor
test
aaa
movsb
frstor
dec
aas
scas
ljmp
orl
mov
movsl
xchg
loopne
xchg
push
xor
mov
and
addr16
adc
aas
cmp
jb
stos
add
add
jae
mov
sub
lods
push
pop
mov
xchg
in
mov
jl
cmpsb
lock
vpsubw
or
mov
fistl
inc
jns
xor
mov
stos
mov
ret
xor
sub
rorb
or
xor
xor
push
fs
lea
and
rcrl
repnz
mov
push
lock
popa
or
mov
gs
jnp
jne
incb
xchg
push
adc
test
popf
xchg
into
pop
or
xchg
in
or
insl
mov
adc
std
or
inc
fiaddl
xor
adc
or
cmpsb
sbb
cld
jle
add
inc
std
fwait
shll
mov
movsb
push
test
imul
lods
bound
cmpsb
mov
fisubrl
arpl
call
jg
mov
mov
push
mov
cmp
cmpsl
mov
ja
fmuls
mov
and
fistpll
and
xchg
aad
dec
xchg
fcmovu
adc
inc
je
mov
sbb
push
std
mov
inc
stc
add
imul
sbb
and
adc
sahf
rcr
adc
pop
in
xchg
fisubrs
shlb
in
dec
push
jp
adcl
pop
xor
andb
fdiv
jns
stos
mov
mov
pop
mov
sahf
aad
rorw
mov
sbb
mov
sahf
imul
ret
jns
and
sub
mov
ret
push
mov
inc
dec
loop
nop
std
test
sbb
mov
adc
xchg
iretw
test
mov
jg
or
mov
dec
rclb
jne
pushl
call
mov
mov
jmp
or
rcl
cmp
pop
jns
popa
mov
mov
stos
jo
dec
jge
jo
or
movsl
repnz
ljmp
mov
testb
lods
xchg
push
inc
fimuls
or
int
sub
std
fiaddl
pop
mov
in
pop
scas
out
add
aas
fldcw
push
inc
ret
jg
jmp
pop
inc
lret
enter
jae
ret
or
xchg
repnz
inc
outsl
scas
pop
mov
loopne
shr
and
mov
iret
iret
test
mov
jae
jp
pop
lret
or
insb
andb
cwtl
and
mov
stos
mov
imul
push
pushf
movsl
xchg
adc
push
dec
aaa
sub
adc
aaa
outsb
xchg
int3
xor
outsl
mov
fsqrt
cmp
mov
mov
cli
cmpsb
jl
cmpsb
mov
pop
pop
mov
andb
imul
movsb
std
and
dec
das
and
mov
clc
std
mov
pop
addr16
inc
push
add
mov
sub
xor
jb
pop
pop
cwtl
cmp
gs
mov
imul
or
leave
or
repz
mov
sarl
cmp
das
mov
mov
in
add
out
pop
sbb
rorb
mov
enter
and
out
stos
inc
mov
mov
sub
repz
lret
sub
jg
or
shrl
push
cmpsb
test
mov
cli
mov
je
movsl
fiadds
ss
push
mov
mov
mov
aam
jns
mov
adcl
adc
sbb
popa
negl
pop
call
arpl
fwait
int
in
aam
mov
cmpsl
pop
and
decb
mov
pop
or
inc
mov
repz
in
push
inc
nop
xor
test
inc
cmc
xorb
mov
loope
daa
movsb
push
pushf
test
imul
testl
arpl
mov
mov
mov
jmp
popf
test
mov
scas
sahf
dec
mov
push
test
andl
call
and
sub
cli
repz
pop
or
lods
lods
and
pop
mov
mov
fsts
mov
pop
in
stc
dec
xchg
imul
jne
push
mov
push
insb
iret
push
data16
cli
lea
fcomps
scas
je
mov
fwait
pop
inc
push
mov
icebp
mov
adcl
int3
jno
mov
pusha
arpl
mov
stos
imul
test
dec
cltd
jmp
decb
into
bound
cmp
rolb
jo
js
loop
push
in
sahf
xor
sahf
popa
mov
sub
sub
jl
pop
sub
inc
sbb
lcall
push
xor
sbb
mov
jns
insb
aad
cmp
into
stc
pop
mov
cwtl
xchg
dec
mov
jecxz
jmp
negl
lcall
in
insb
ret
cmp
and
push
pusha
and
loopne
sub
ds
mov
dec
mov
in
or
test
xchg
pop
and
outsl
dec
push
add
pop
xor
jne
jo
or
pop
cwtl
adc
fcoml
and
xor
imul
test
ljmp
int3
add
jno
push
lahf
mov
or
xchg
mov
lock
add
imul
push
or
add
cmp
jne
mov
inc
cmp
jb
jmp
mov
xor
add
jmp
mov
movzwl
mov
mov
mov
mov
mov
xor
add
jmp
xlat
and
insb
push
aaa
pop
push
push
sahf
lret
mov
jo
jge
jo
hlt
stos
sub
loope
xchg
in
pushf
dec
jbe
mov
daa
cwtl
pop
dec
sahf
push
and
aam
mov
fbstp
pop
stos
stos
mov
push
sbb
jg
inc
test
cwtl
inc
out
sub
les
push
sub
xchg
push
int3
xor
mov
popa
stos
xchg
je
cli
jle
cli
xor
icebp
inc
ffreep
popf
in
dec
inc
xchg
jmp
push
xor
test
xchg
sbb
mov
repnz
repnz
mov
cwtl
mov
pop
dec
jl
hlt
testb
test
fidivs
pushf
or
xlat
jb
inc
xchg
sbb
inc
loop
sbb
orb
xchg
fldt
fs
inc
outsb
out
add
in
pop
inc
or
xor
insb
aam
xorl
stos
inc
dec
outsl
ret
js
lods
fistpl
jmp
cmpsl
stc
popf
add
imul
stos
xchg
inc
sub
push
scas
jmp
cmp
lret
and
imul
dec
aad
pushf
jae
imul
dec
push
fst
sbb
push
in
push
mov
push
sub
popf
mov
jge
pop
add
loope
ret
xor
xchg
pop
daa
ret
xor
mov
mov
cli
add
mov
adc
adcb
dec
leave
imulb
jb,pt
vmwrite
and
test
pop
stos
bound
xlat
insw
xor
lods
pop
mov
fs
aam
daa
icebp
adc
mov
mov
addr16
sbb
loope
xor
cwtl
sbb
rcll
popf
roll
aam
adc
repnz
or
cmp
jbe
fs
and
add
push
out
shrl
add
dec
mov
fcomps
repnz
adc
adc
bound
fdivrl
daa
cmp
push
mov
mov
adc
popf
inc
pusha
pusha
sub
gs
push
jb
outsl
xchg
hlt
pop
repz
jg
and
add
shll
popf
add
leave
adc
out
cmp
ret
mov
aam
mov
jmp
fiadds
js
mov
cli
stc
scas
pop
mov
cmp
inc
arpl
idiv
jne
mov
es
repz
xchg
xchg
jbe
je
scas
dec
or
dec
subb
imul
adc
add
loope
add
loope
sbb
add
pop
popa
out
mov
test
shlb
cltd
hlt
fs
inc
scas
cmp
sarl
mov
shl
cmp
or
imul
jecxz
les
cltd
loop
aas
fwait
inc
mov
jecxz
out
push
sbbb
adc
in
neg
out
and
imul
pop
stos
stos
hlt
les
jns
fwait
stc
or
mov
in
dec
mov
es
cmpsl
mov
lahf
mov
xlat
sbb
sub
pop
sub
jnp
pop
imul
repz
int3
pusha
adc
and
inc
mov
ret
jo
pop
push
jb
imul
mov
call
cmp
push
lahf
mov
les
jnp
arpl
jbe
mov
pop
pop
mov
jb
mov
insb
jp
scas
lods
sbb
jg
nopl
mov
and
mov
mov
mov
les
dec
xor
out
adc
pop
cmp
dec
cmp
jne
mov
xor
jmp
mov
add
mov
mov
jmp
sahf
das
or
mov
mov
pop
mov
mov
mov
jo
jge
jo
arpl
pop
lret
stos
hlt
inc
lock
fadds
mov
adc
lods
wrmsr
xchg
jle
mov
sbb
ljmp
dec
ret
mov
push
sub
push
dec
jnp
pop
mov
fbld
imul
inc
sti
sub
outsl
fsubl
or
orl
ja
jl
push
xor
mov
add
push
das
enter
popf
shrl
mov
add
cltd
mov
mov
inc
sub
ss
lock
xchg
lods
int3
adc
adc
sti
in
cltd
mov
cltd
test
dec
fmuls
jns
and
mov
shlb
das
ja
loope
lods
fisubl
lea
mov
cmpsl
in
stos
sub
cld
scas
xchg
sbb
test
repnz
dec
inc
sarb
loope
sub
push
xor
nop
loop
mov
insb
daa
cmpsl
movhps
loopne
adc
in
cmc
or
add
and
jns
push
mov
xor
adc
cmp
stc
and
mov
aaa
bound
jns,pt
jecxz
add
daa
fcomip
in
push
lahf
inc
fdivs
inc
mov
mov
cmp
xor
adc
leave
xor
mov
and
or
int3
lock
ja
fninit
clc
jle
dec
inc
dec
pop
mov
das
xchg
fs
sub
fsubrs
sahf
inc
test
test
inc
mov
std
je
insl
stos
das
ja
fst
into
iret
fldcw
push
xor
leave
ja
jl
xor
push
or
push
iret
divb
pop
mov
cmp
mov
test
jmp
mov
pop
xchg
pusha
fsub
ret
mul
movsb
mov
fldt
movl
clc
xor
mov
jnp
push
test
xor
rcll
xlat
jmp
cmp
aaa
clc
and
out
inc
adc
pop
insl
test
mov
sbb
int3
cmp
dec
inc
icebp
sbb
sbb
dec
and
loope
sub
add
ret
jmp
jbe
std
cmpsl
xchg
out
jge
inc
mov
dec
inc
xchg
fcmovnu
xchg
mov
leave
nop
mov
sub
int
cmpl
inc
insb
shll
xor
push
push
cmp
dec
aam
mov
fistpll
pop
and
mov
mov
jb
scas
sub
sar
insb
jecxz
push
sti
cmc
mov
cltd
inc
enter
jmp
push
dec
lock
push
roll
in
mov
or
lods
mov
adc
aad
leave
mov
dec
pop
or
push
movsl
sub
pop
sub
sbb
imul
lahf
mov
xchg
mov
idiv
jmp
jnp
cmpsb
lret
xor
in
jae
sbb
pop
inc
mov
jno
and
in
cltd
mov
mov
fistpll
inc
orb
outsb
add
adc
xor
mov
sti
test
adc
sbb
and
ss
repnz
inc
fwait
out
fs
in
or
setne
shl
inc
loop
filds
mov
scas
arpl
pop
add
incl
jo
jg
sbb
sub
sub
mov
adc
pop
pusha
xchg
insb
repnz
ds
subl
leave
push
push
dec
leave
sahf
stos
fptan
push
fbstp
pop
cmp
xor
mov
adc
add
scas
lock
mov
jne
xchg
test
jne
jmp
in
outsl
pop
outsl
jne
data16
test
pushf
lahf
sbb
or
mov
jo
sub
mov
push
loopne
jnp
imull
in
in
inc
lret
ds
icebp
lods
dec
pushf
rcrl
arpl
les
and
mov
pop
push
daa
sub
fnstsw
enter
ljmp
jo
adc
je
jb
jl
enter
xacquire
jbe
mov
xchg
outsl
arpl
adc
mov
mov
leave
mov
pusha
mov
mov
and
and
nop
inc
in
xor
das
pop
sub
ljmp
sbb
xchg
bound
sbb
xor
imul
pop
or
mov
cmp
jp
mov
lret
inc
mov
or
in
add
mov
test
jne
dec
data16
rorb
cld
push
push
and
and
imul
xchg
pusha
fimuls
pop
xchg
pop
xchg
jmp
jp
or
scas
dec
push
stc
pop
sbb
jns
xor
add
xor
cmp
ljmp
mov
xchg
mov
ja
dec
ja
test
xor
in
jg
sbb
mov
shrb
inc
push
test
add
rcll
fcoms
lea
out
cmp
xchg
cli
call
js
push
loope
sbb
dec
ja
pop
cmpsl
in
push
adc
pop
jmp
in
lea
push
mov
mov
fstpt
insb
push
dec
and
mov
les
lods
and
andl
sbb
out
xchg
out
das
loope
insl
repz
std
inc
mov
mov
in
jl
mov
test
mov
and
push
ss
cmc
rol
xor
pop
and
xchg
push
scas
xchg
pop
push
adcl
dec
xchg
xchg
mov
ret
xchg
mov
into
and
enter
leave
mov
dec
repz
mov
rcll
fcoml
nop
lds
das
sbb
hlt
ljmp
adc
or
subl
cwtl
push
xchg
je
mov
push
sub
xchg
icebp
xchg
inc
dec
dec
ja
and
sbb
lock
jecxz
popf
fists
jp
gs
orb
push
mov
mov
je
xchg
sbb
stos
pop
mov
ret
sti
sub
les
sarb
test
pop
es
mov
das
sbb
sti
inc
fs
loopne
in
testl
jge
xchg
inc
loopne
sub
add
xchg
xor
popf
inc
jo
xor
sub
mov
inc
or
mulb
int
mov
and
das
dec
and
popa
push
adc
push
lds
xlat
sub
pop
pop
addb
rorl
inc
cmpsb
sub
insb
jns
xchg
movsb
push
decl
subl
mov
in
outsl
sbb
outsl
push
push
sbb
mov
push
adc
nop
in
xor
repnz
call
in
bnd
xor
shrl
aad
lods
cs
out
jno
aaa
in
xlat
dec
jo
cli
outsb
pop
or
fsubr
fdivp
repnz
mov
xor
inc
adc
pop
adc
jno
addr16
testl
scas
and
cmp
clc
fs
xchg
je
stc
lock
sub
or
add
sub
xchg
dec
mov
imul
sub
mov
mov
mov
xor
mov
add
mov
mov
xor
add
mov
imul
mov
xor
mov
lea
cmp
je
mov
mov
mov
mov
mov
xor
xor
mov
add
div
mov
xor
lea
mov
mov
mov
mov
jmp
ja
mov
mov
xchg
jbe
das
arpl
jo
inc
inc
inc
out
test
sbb
loope
dec
cltd
orl
mov
mov
and
int
xlat
adc
ljmp
xor
loopne
fcmovbe
mov
cld
lcall
sbb
mov
lret
ret
push
dec
pop
push
insl
xchg
lahf
mov
mov
push
mov
popa
lret
movsb
shl
adc
mov
dec
movsl
xor
mov
sub
push
sbb
mov
loop
xor
xchg
lret
and
gs
sbb
test
mov
pop
fwait
mov
pop
dec
cwtl
mov
mov
inc
mov
jae
and
mov
sti
sbb
mov
mov
pop
pop
roll
rep
cmpsl
imul
addr16
cmp
mov
lods
xor
dec
dec
sbb
stos
cli
aam
mov
mov
push
add
sahf
inc
jo
imul
sbb
xchg
cltd
push
dec
jg
gs
xchg
ds
psubq
test
jmp
pusha
rclb
xchg
xchg
popf
movb
mov
xor
les
lahf
inc
adc
push
sahf
xor
sbb
dec
sub
sub
movsl
stos
and
adc
mov
inc
cld
cmp
aam
pusha
add
fs
jl
mov
and
xor
daa
aam
sbb
inc
cmpsl
lods
pop
xchg
add
xor
jmp
mov
repz
xchg
mov
shrl
push
jecxz
xor
in
jge
sub
jmp
in
aas
movsb
and
jb
mov
mov
out
aam
jae
pop
dec
sbb
sbb
int3
dec
pop
xlat
stc
xchg
cmp
adc
sub
out
push
stos
mov
and
lock
xchg
mov
clc
es
sbb
div
dec
push
push
dec
xchg
cmp
add
orb
ja
imulb
xchg
dec
jno
leave
push
inc
andl
mov
or
add
push
and
push
sub
mov
int
cmpsl
ja
add
cmp
adc
jns
pop
imul
sbb
gs
push
ror
push
jmp
cmpsb
pop
lods
vmovsd
faddl
push
mov
dec
xchg
andb
int
cmpsb
ret
clc
mov
or
push
lock
mov
in
cli
dec
outsl
jecxz
pop
pop
loopne
lcall
inc
xor
test
lds
pop
loope
sarb
imul
test
out
loop
sbb
dec
push
sub
loop
mov
dec
xchg
add
in
in
mov
shl
ficomps
mov
test
inc
popl
arpl
movsl
mov
or
leave
insb
push
cmp
mov
pop
jns
dec
subl
mov
cmp
adc
pop
adc
je
stc
je
ss
cltd
mov
cmp
cmp
push
mov
mov
mov
out
ror
pop
inc
dec
adc
imul
lahf
pop
mov
mov
mov
sarb
mov
push
addb
push
mov
pop
jb
inc
out
sbb
or
ja
inc
and
add
mov
cmp
push
imul
in
mov
mov
push
movl
push
push
outsl
in
xor
mov
pop
shll
inc
movl
push
or
out
add
add
fisttpl
jp
xchg
mov
mov
jge
jo
inc
mov
add
int3
lods
adc
mov
xchg
arpl
out
das
add
sub
ret
in
adc
sbb
sub
mov
cmp
scas
lcall
jnp
add
imul
inc
xor
ljmp
lahf
in
mov
sbb
dec
mov
or
lds
push
fidivrl
cmpsb
mov
dec
jmp
sub
pop
sbb
rorl
push
push
or
sbb
ja
in
sbb
insb
mov
jecxz
sub
ret
sbb
jnp
mov
aas
add
imul
push
dec
xor
mov
pop
xchg
mov
rcrb
mov
loop
ljmp
mov
sub
mov
pop
test
bnd
fildll
sbb
sbb
fwait
jns
xchg
les
lods
mov
cmp
mov
xlat
cld
cmpsl
inc
pushf
inc
mov
test
addr16
jge
or
aad
bnd
test
and
pushf
sbb
or
xor
pop
fdivl
stc
lret
loop
and
adc
ret
xor
dec
dec
sub
or
or
inc
cmpsb
or
cs
dec
fidivrs
leave
and
in
mov
dec
or
sarl
shlb
lret
imul
mov
mov
out
and
in
int
inc
int3
adc
pop
or
or
js
cwtl
adc
jle
sbb
mov
cmpsl
mov
mov
pop
sbb
fistpll
jbe
aas
sar
inc
sub
dec
ss
sbb
enter
sub
nop
aaa
or
xchg
sub
mov
cmp
mov
andb
xchg
add
stos
xor
xor
loop
test
push
test
xor
dec
cmp
imul
pusha
mov
adc
cld
scas
sbb
mov
out
cmp
sub
xchg
fnsetpm(287
sbb
pop
sub
and
jecxz
pusha
cmovg
sub
sub
std
jecxz
int3
dec
sti
push
lahf
ja
loop
sarl
pop
jl
test
mov
movsb
xor
sbb
push
adc
pushf
lahf
xchg
or
dec
repz
arpl
jg
ja
mov
jne
dec
jp
pusha
xchg
call
es
jl
push
sar
sub
inc
pop
add
mov
inc
mov
frstor
pop
stos
and
jg
repz
mov
shrl
rclb
movsb
jg
lret
inc
dec
pop
outsl
stos
and
xor
lret
pop
sbb
or
imul
pop
mov
in
cmp
pop
ret
out
iret
ss
push
icebp
jmp
test
jle
fcomp
notl
mov
pop
in
mov
imulb
test
push
rol
cmp
test
lock
aad
push
jl
test
jnp
add
mov
dec
repz
xlat
inc
cmp
scas
jbe
stos
push
mov
int
push
cmp
cld
push
dec
fwait
mov
push
rcl
in
arpl
add
sbb
jo
cs
cli
aad
aas
dec
pop
push
clc
loopew
xor
sbb
es
out
loopne
cmp
in
sub
fidivs
push
add
jae
insl
mov
les
ficoml
out
xor
lea
mov
mov
jmp
mov
fwait
xchg
fwait
jae
roll
fnstenv
dec
jge
jo
std
push
push
rcr
loope
loopne
pop
cmpsl
cmp
and
jnp
adc
inc
xor
in
pop
mov
cmc
pop
ds
adc
fs
testl
sahf
inc
xor
mov
sbb
cmp
mov
ret
stos
std
lahf
out
lcall
xchg
dec
inc
mov
xor
sbb
pop
aam
xchg
lret
out
mov
into
push
mov
clc
mov
mov
stos
sub
xchg
in
enter
or
jl
test
jge
mov
push
out
pop
sbb
mov
sub
mov
lahf
adc
cli
xchg
loope
loopne
mov
in
repz
lahf
jecxz
stc
sbb
sbb
into
ffree
sti
ret
iret
std
add
jns
or
push
cmp
insb
in
cmc
or
lret
mov
subl
insl
pop
jno
daa
xlat
jecxz
jns
jge
test
mov
adc
mov
fisubs
sbb
add
subb
xor
es
ja
mov
sbb
cmp
sbb
fs
movsb
pushf
out
cld
or
fldl
rorl
popa
cmpsl
mov
je
pop
imul
iret
inc
xchg
jmp
mov
mov
test
outsb
pop
jbe
mov
fimull
push
mov
and
pop
mov
fidivl
out
into
jle
add
xchg
add
scas
hlt
fcomps
or
push
int
cs
add
mov
ja
mov
sahf
insl
mov
outsb
mov
cmp
ror
pushf
into
mov
jle
addl
mov
push
int3
inc
sarb
pop
out
fstpt
cltd
push
mov
jns
js
sbb
sti
imull
inc
dec
sub
popf
mov
mov
lock
push
insl
rcrl
ljmp
into
xchg
insb
xor
cltd
mov
cmc
xlat
or
or
insb
mov
push
loopne
mov
pop
sbb
add
pop
dec
stc
push
sub
dec
xor
jmp
sub
dec
mov
dec
aaa
je
xchg
push
arpl
subl
loope
pop
arpl
sub
cmpsb
es
dec
es
mov
inc
dec
adc
mov
cld
insl
inc
cli
adcb
mov
data16
sbb
fistps
stos
repnz
xchg
cmc
add
dec
push
jb
dec
cli
xchg
jno
cld
sub
adc
inc
rcll
mov
outsl
and
jge
loope
mov
rcrb
mov
add
nop
sbb
fincstp
dec
test
xchg
mov
sbb
mov
in
add
jl
jmp
aaa
push
adc
pop
xchg
mov
cmpsl
popa
hlt
in
xor
inc
sbb
imul
inc
fidivrs
sbb
jmp
pop
push
or
xor
push
clc
xorb
and
aam
movl
jp
fildl
and
inc
dec
jae
or
mov
mov
xchg
call
ja
fadds
imul
and
xchg
jle
dec
addr16
fisubrl
sbb
test
cltd
into
xchg
cld
pop
xor
mov
dec
mov
mov
xor
push
push
jo
xor
mov
xor
add
imul
mov
xor
mov
lea
cmp
jmp
mov
push
mov
bound
stos
pop
out
inc
jo
dec
jge
jo
or
or
es
mov
pop
stos
loope
xorb
xor
je
inc
inc
lret
cmc
cmp
inc
inc
repz
fsub
mov
inc
imul
xor
or
cmp
daa
in
cli
mov
fcmovnb
int
jns
push
and
and
lods
dec
xchg
mov
loope
sarb
cltd
xor
sbb
xchg
add
cmpl
fs
aas
fstpt
inc
mov
or
lds
mov
into
or
loop
outsb
adc
push
stos
clc
test
push
scas
lret
inc
mov
sub
pop
and
dec
mov
jge
or
sub
cltd
add
adc
outsl
addr16
mov
movsb
pop
jbe
stos
push
jecxz
fcoml
sahf
in
jg
lods
mov
into
shlb
jb
divb
aas
scas
add
repz
and
cmp
subb
mov
jg
push
pop
pop
aas
ljmp
or
sbb
in
cwtl
inc
pop
inc
data16
rolb
jbe
xchg
dec
rcll
negb
xchg
dec
add
push
add
iret
dec
ja
adc
inc
mov
push
rcrb
out
cmc
xor
mov
push
imul
lods
pushf
stos
movsl
jno
addr16
dec
push
and
jmp
mov
out
push
mov
mov
fisubrl
xchg
pop
stos
xor
int
pop
in
xchg
xchg
cwtl
mov
mov
test
cmp
hlt
sub
fucomi
mov
divb
mov
ja
int
ljmp
repnz
pop
les
cwtl
nop
or
push
dec
adc
dec
mov
mov
mov
cs
or
push
pop
ret
mov
mov
rcrb
push
rcrb
lcall
cmp
sarb
push
pop
push
ffreep
mov
adc
leave
lcall
pop
outsb
mov
popa
inc
rolb
lret
insl
sub
mov
ffree
gs
mov
scas
cmp
out
test
adc
std
hlt
lahf
ljmp
pop
testb
jbe
mov
test
in
sbb
xchg
fimuls
pop
fsubrp
and
and
icebp
xchg
jae
jle
xorl
cli
add
jo
sbb
adc
jl
cmc
hlt
jecxz
cmp
push
outsl
mov
sub
je
push
and
out
jmp
pop
push
iret
andb
pop
and
imul
xchg
xlat
add
mov
lcall
mov
lea
pop
sbb
jne
aam
add
subl
pop
aas
lret
mov
out
stos
shrb
sub
jae
std
pop
dec
int3
rcrb
xor
xor
sub
nop
jmp
enter
loop
or
rorb
adc
push
mov
jmp
push
sarl
fiaddl
rclb
adc
bound
mov
xchg
mov
lahf
cmpsb
les
cli
les
push
push
push
cmc
fs
out
mov
scas
push
jae
mov
add
es
sub
cmp
sbb
sub
dec
mov
pop
out
pop
mov
mov
and
adc
test
adc
push
je
xchg
bound
jne
jmp
dec
dec
jmp
or
pop
jne
mov
jmp
mov
mov
xor
add
mov
xor
lea
add
call
xor
inc
cmp
je
xchg
push
pop
push
pop
inc
jmp
inc
orl
push
ds
insl
dec
jo
dec
jge
jo
cmp
add
pop
hlt
push
dec
addb
sti
repnz
lock
and
mov
orb
jbe
ss
std
jl
stos
push
jbe
mov
xchg
pop
xor
and
sub
ja
sub
pop
mov
jb
xchg
shr
call
nop
in
imul
inc
sub
mov
sbb
and
pop
push
int3
adcl
loope
jno
stos
sub
mull
cwtl
cwtl
sub
addl
arpl
adc
lret
roll
push
pushf
sub
dec
sahf
lock
filds
mov
pop
push
push
ljmp
cld
loop
test
mov
lods
dec
lods
push
mov
and
in
jmp
pop
cmpl
call
fs
push
pushf
mov
push
xchg
xlat
sub
in
out
ljmp
jbe
mov
add
sbb
mov
inc
xchg
idivb
push
xor
jne
rclb
orb
cmp
es
test
sbb
jae
jge
sbb
ficoms
in
xchg
and
ds
fstpl
xchg
inc
sti
adc
std
clc
jmp
data16
xchg
cmp
sub
xchg
stos
ja
stc
sub
cmp
push
or
or
push
je
push
inc
sbb
xor
mov
cmpsb
xchg
mov
aas
dec
cmp
int
jae
mov
test
lret
test
xor
and
clc
lcall
shrb
cmp
push
int
mov
pop
sub
fsubrl
call
pop
sub
push
mov
mov
arpl
adc
outsl
jg
inc
arpl
or
int
leave
bound
and
inc
sub
mov
xor
jns
popa
and
hlt
jns
or
icebp
sub
jbe
insb
outsl
movsb
je
in
jnp
lret
lret
jae
xor
inc
sbb
mov
dec
mov
idivb
call
sbb
or
out
push
lock
jbe
adc
test
dec
lahf
aam
ljmp
idivl
and
jg
loope
pusha
inc
push
ljmp
jg
ret
icebp
lock
sub
xchg
cli
add
inc
rcr
movsb
adc
jecxz
jp
sub
rclb
mov
jbe
jb
bound
inc
ljmp
mov
adc
pushl
mov
mov
rcrl
lret
or
jbe
pop
inc
cmp
movl
stos
sub
sar
iret
pop
in
fnstenv
mov
dec
mov
pop
jmp
fmulp
jae
movsb
imul
aaa
pushf
mov
nop
test
fcomps
mov
fcmovu
jnp
mov
cmp
pop
mov
stos
outsl
lret
xor
cli
xor
and
cld
and
adc
xor
dec
int
testb
jns
pop
test
pop
jge
lods
movsl
std
repnz
sub
push
subb
adc
mov
int3
jg
sbb
xor
pop
dec
dec
jno
jnp
adc
fadd
jmp
out
notb
dec
push
pop
mulb
xor
fs
test
fs
sub
push
data16
or
xlat
insl
ja
push
xor
inc
mov
dec
xor
out
js
js
fstps
cwtl
xchg
sub
xchg
dec
mov
imul
add
xchg
push
xor
mov
dec
inc
add
jmp
jp
jb
jb
adc
sub
cmc
add
dec
jo
dec
jge
jo
add
dec
xchg
cltd
subl
adcl
call
ljmp
lds
cmpsb
push
out
hlt
lock
test
es
mov
mov
xchg
popf
xchg
in
subb
cmpsl
push
fisubrl
or
insl
mov
rorl
test
inc
lds
gs
les
inc
lock
and
leave
add
mov
sbb
mov
mov
scas
in
call
cltd
mov
pop
adc
dec
push
adc
mov
nop
mov
xchg
out
iret
out
imul
movsb
cwtl
inc
xor
xchg
leave
jbe
cmpsl
insb
add
iret
pop
in
arpl
lds
and
out
mov
or
and
jno
mov
mov
mov
dec
shl
ds
mov
shll
push
outsb
dec
insb
mov
mov
or
clc
mov
test
or
call
inc
jns
insl
call
xor
lret
mov
or
xor
test
lahf
xchg
outsl
pop
cmpsb
adc
add
clc
rorb
icebp
pop
inc
or
mov
outsl
mov
mov
ljmp
sub
scas
inc
xchg
cmpsl
mov
dec
sahf
mov
pop
xor
fadds
scas
jne
or
addb
fadds
xchg
or
cmp
imul
xchg
pop
and
mov
insl
and
fildll
xlat
pop
xchg
js
loopne
xor
mov
aaa
test
mov
ficompl
rcrb
dec
dec
lock
flds
rcll
fildl
fcomp
sub
push
xor
or
cmp
pop
push
add
dec
dec
inc
addl
outsl
mov
jbe
push
pop
pop
loop
aam
hlt
mov
xchg
mov
cmp
or
sbb
and
sbb
add
push
add
cmp
sbb
fistpll
les
mov
fcmovne
sahf
xchg
mov
pusha
es
xchg
and
les
data16
orl
es
jns
fistl
fnstenv
int
jne
aad
mov
cmp
jns
mov
pop
adc
call
add
dec
js
push
mov
inc
je
pop
cld
lds
push
inc
xor
jbe
pushf
sti
pop
shlb
push
or
sbb
pop
test
or
test
inc
cmpsb
and
pop
adc
push
repz
adc
pop
jns
push
stc
imul
cmp
mov
lret
jge
push
lret
cld
mov
xorb
repz
push
sbb
or
rcr
mov
repz
jge
sub
mov
mov
sbb
out
xchg
push
stos
out
xlat
pop
ret
sub
or
outsl
imulb
repz
cmp
and
and
dec
stc
adc
xor
in
std
sbb
add
dec
inc
mov
lds
pop
mov
xor
jg
ret
and
dec
das
inc
xor
dec
mov
ljmp
lahf
push
outsb
push
xchg
fsubp
fadd
lret
and
dec
adc
int
call
push
adc
pushf
or
jo
lea
xor
adc
fisttps
pop
ljmp
stos
call
or
push
cmp
dec
xor
add
pop
mov
pop
pop
pop
leave
ret
dec
push
mov
mov
or
dec
add
add
add
movl
xor
test
enter
mov
hlt
test
pushf
enter
movl
inc
inc
cld
xor
or
mov
call
pop
mov
dec
mov
pushl
or
ljmp
dec
loopne
rorb
add
mov
hlt
add
enter
dec
add
mov
orl
xor
lret
enter
mov
lea
push
mov
fs
decl
push
and
pop
inc
mov
push
pop
cld
dec
lea
mov
add
movl
decl
xor
cld
dec
jne
lea
push
mov
or
add
sub
add
rolb
inc
add
add
mov
incl
lea
call
add
jne
decl
dec
add
xchg
loopne
inc
incl
mov
xor
add
enter
mov
hlt
add
mov
add
add
incl
sbb
jne
mov
mov
movl
incl
fisttpll
test
inc
aas
inc
lea
inc
mov
mov
cld
in
inc
jmp
fisttps
jecxz
out
incl
out
aas
inc
ljmp
incl
movl
insb
test
pandn
aas
add
mov
incl
or
mov
xchg
fildl
mov
cmp
dec
leave
mov
fsubrs
add
lea
push
add
mov
mov
add
mov
cld
push
decl
push
mov
call
mov
cld
add
test
in
in
cld
jge
mov
fsub
add
mov
add
add
mov
inc
push
fisttps
test
fadds
jmp
fildl
inc
jo
test
jmp
incl
in
add
jne
mov
cld
incl
mov
mov
add
call
ret
cld
incl
out
xor
mov
cld
jo
or
add
push
add
mov
decl
add
inc
orb
add
mov
mov
inc
sub
add
rolb
jne
xor
incl
call
mov
call
xor
push
adc
loopne
ret
loopne
xorl
cmp
bswap
rolb
jmp
mov
add
cld
jne
xor
push
add
add
inc
add
mov
test
add
incl
jmp
adc
mov
pushf
mov
lea
xor
call
call
jne
xor
add
pushl
call
int3
incl
mov
xor
add
xchg
in
add
add
add
mov
mov
or
inc
test
je
mov
xor
push
or
inc
in
mov
mov
fmul
add
mov
cld
loopne
inc
push
cmp
movaps
cld
fadds
jne
push
in
jne
lea
das
mov
mov
mov
xor
adcl
rclb
inc
lock
inc
xchg
ud0
incl
lret
jbe
mov
push
pop
mov
inc
lret
inc
iret
jb
mov
enter
xor
pushf
mov
xor
dec
add
inc
mov
xor
add
mov
fmuls
xor
mov
roll
xor
mov
clc
enter
mov
test
clc
incl
cmp
pushf
or
enter
xor
pushf
inc
ds
pushf
inc
mov
lock
add
mov
sarb
adc
dec
adc
add
jmp
jb
add
xor
xor
add
clc
enter
pop
mov
push
push
xor
xor
add
add
lret
repnz
cli
fdivr
test
dec
inc
xor
add
mov
mov
clc
jne
mov
into
into
scas
dec
mov
sub
cmp
mov
mov
mov
add
xor
xor
lret
mov
inc
add
mov
lods
test
xor
mov
lock
bswap
lret
test
jmp
add
push
mov
test
push
clc
xor
xor
add
add
push
dec
mov
stc
roll
scas
mov
xor
xor
add
mov
clc
lret
into
mov
mov
mov
int3
add
xor
xor
add
mov
lock
stc
mov
or
jmp
dec
dec
mov
clc
test
clc
rorl
mov
call
les
lret
ja
mov
dec
xor
mov
clc
push
lret
mov
adc
jb
add
call
cmp
movsb
pushf
inc
xor
mov
clc
dec
lret
mov
call
scas
mov
pushf
sub
cmp
lods
xor
add
mov
mov
cmp
jb
add
dec
scas
mov
shrl
into
cmp
mov
dec
dec
mov
lret
xor
add
imul
mov
xor
mov
add
mov
inc
rdtsc
xlat
pushf
jge
xor
sub
cmp
jb
add
rorl
xor
add
jmp
mov
dec
into
mov
pushf
shll
lret
or
add
in
push
mov
fs
dec
sub
dec
xor
jge
mov
add
dec
decl
adcb
add
jge
push
push
shlb
xor
xor
inc
add
dec
or
jbe
mov
ror
enter
decl
push
lret
push
mov
mov
cld
subb
sti
add
push
lcall
bswap
pop
inc
decl
push
xor
movl
aas
push
inc
xor
add
mov
jmp
mov
les
mov
mov
cmp
mov
add
xor
pushf
lret
cmp
call
inc
inc
mov
mov
enter
add
add
clc
enter
push
pushf
mov
int3
or
test
clc
gs
add
push
xor
sub
dec
add
mov
or
cmp
dec
out
xor
mov
dec
add
push
push
add
sbb
mov
xor
dec
inc
xor
add
push
dec
mov
lret
into
sub
dec
adc
inc
push
test
unpcklps
jmp
add
movl
xor
rolb
clc
fs
mov
xor
sub
mov
add
sub
mov
mov
clc
addl
lcall
inc
decl
test
decl
push
add
dec
or
rorb
into
add
mov
sar
adc
clc
fadds
mov
push
adcb
add
lret
mov
cld
mov
into
add
jne
incl
rclb
push
mov
mov
sar
or
push
add
pushf
xor
pushf
mov
test
clc
inc
inc
mov
sub
mov
dec
xor
mov
xor
orl
shll
int3
lea
push
xor
pop
lods
incl
mov
pushf
jo
cmpl
inc
add
push
in
inc
push
mov
cld
add
adc
add
jmp
add
mov
dec
push
cmp
unpcklps
jne
decl
mov
shlb
inc
add
lret
decl
stc
in
or
dec
clc
xor
mov
rolb
inc
add
clc
inc
lret
mov
in
lret
into
into
scas
dec
mov
sub
cmp
mov
int3
test
xor
xor
lret
mov
inc
add
mov
xor
mov
call
lret
test
jmp
add
push
mov
mov
lret
xor
add
add
push
dec
mov
stc
roll
scas
mov
xor
xor
add
mov
clc
lret
into
mov
test
push
jbe
mov
mov
push
add
rdpmc
lret
add
dec
stc
mov
or
jmp
dec
dec
mov
clc
test
clc
rorl
mov
lock
inc
mov
hlt
pushf
jge
sub
cmp
ja
mov
dec
xor
mov
clc
push
lret
mov
adc
jb
add
lock
sub
mov
mov
mov
mov
lock
ror
push
scas
mov
pushf
sub
cmp
movsb
xor
add
mov
mov
cmp
jb
add
dec
scas
mov
shrl
into
cmp
mov
dec
dec
mov
lret
xor
add
imul
mov
xor
mov
add
rolb
rdtsc
xlat
pushf
jge
xor
sub
cmp
dec
xchg
incl
jmp
mov
dec
into
mov
pushf
shll
lret
or
add
in
push
mov
fs
dec
sub
dec
xor
jge
mov
add
dec
decl
inc
push
decl
lea
mov
push
mov
les
add
incl
mov
cld
lret
add
jne
in
ror
scas
into
add
not
adc
inc
push
mov
push
mov
fdivr
sti
sbb
pop
xchg
leave
pushf
add
push
cmp
sqrtps
decl
push
cld
xor
lret
clc
xor
add
hlt
or
mov
hlt
dec
add
leave
mov
push
roll
mov
mov
lar
push
lret
jne
mov
or
mov
cld
inc
mov
add
in
test
fdivr
ret
cld
mov
clc
xor
mov
loopne
mov
mov
clc
jne
call
and
je
mov
cld
or
push
add
add
inc
push
mov
pop
mov
ret
push
mov
clc
lock
jne
jne
mov
faddl
jne
cmp
pop
mov
push
inc
lea
inc
inc
int
inc
cld
jo
inc
xchg
mov
mov
or
inc
inc
mov
cld
jmp
mov
mov
rclb
iret
inc
leave
decl
mov
mov
mov
push
nop
incl
push
leave
iret
add
push
jmp
inc
push
mov
in
push
sbb
add
mov
cmp
jne
push
pop
push
mov
or
add
sub
int3
jne
add
sbb
mov
lea
push
enter
testl
enter
negl
or
inc
loope
sub
inc
loope
add
push
push
imul
adcl
add
lea
mov
cmp
jne
mov
in
add
out
inc
aas
jmp
lock
and
mov
call
push
add
ud0
hlt
add
cmp
flds
out
call
cmp
shl
pop
fisttpll
push
add
add
push
add
sub
jne
lods
mov
dec
out
into
push
loopne
shrb
xorl
roll
mov
cmpl
mov
push
push
push
sub
push
adc
insl
mov
add
inc
mov
pop
addl
add
add
roll
cli
push
pop
lret
add
decb
sub
and
dec
inc
shll
add
pop
add
pop
dec
jmp
and
push
out
jmp
jmp
mov
decb
add
pop
icebp
mov
insb
adc
mov
or
mov
cld
jge
aas
and
adc
mov
and
dec
add
add
fadds
stc
enter
sbb
sbb
in
in
add
jne
cmp
jb
jmp
mov
add
add
jb
pop
faddl
or
inc
or
xlat
dec
push
add
leave
roll
add
mov
int3
jmp
mov
jne
mov
call
pop
add
pop
or
push
mov
int3
add
jae
int
enter
add
mov
push
pop
add
push
lea
mov
jb
mov
push
add
add
add
int3
jne
movsbl
add
add
mov
add
add
mov
sub
jb
add
jge
add
addl
jne
je
mov
rorb
orl
mov
mov
fadds
inc
pop
lea
push
out
add
add
mov
jb
add
push
call
add
jae
icebp
inc
mov
int3
out
loopne
sub
push
pop
push
jl
add
xor
mov
rcrb
rorl
inc
shr
orl
push
pop
add
jmp
mov
fdivrl
push
pop
call
mov
in
rolb
call
pop
enter
repz
xorl
je
or
jne
jmp
pushl
push
pop
cmpl
jge
mov
sub
pop
inc
mov
sub
lods
add
enter
repz
stc
jge
jnp
call
fadd
dec
insb
stc
cmp
push
mov
jne
mov
mov
add
sub
and
cmp
sbb
pop
call
fsubr
sti
add
add
add
roll
mov
clc
jne
mov
loopne
loopne
lods
int3
inc
mov
add
sub
shrb
add
call
add
dec
insl
in
lea
inc
inc
sub
orl
and
rorl
or
mov
stos
adc
inc
add
jne
mov
cmp
sub
sar
ljmp
sub
mov
mov
and
jne
sub
sbb
dec
push
add
ret
mov
leave
sub
ret
pop
push
rolb
addl
jb
ret
in
jecxz
push
xchg
jne
cmp
jne
mov
rorl
mov
pop
nop
mov
les
add
inc
mov
mov
cmp
or
inc
inc
xor
cld
add
add
add
sbb
dec
je
mov
add
and
jae
mov
incl
push
shr
in
push
add
add
inc
mov
add
push
cmovne
xor
push
pop
xor
pushf
add
rcr
inc
add
add
out
inc
inc
sub
dec
and
jo
leave
add
lea
ret
mov
xor
mov
sbb
stc
mov
ss
add
add
add
add
movb
or
dec
lea
or
movsl
fiadds
jae
or
in
pushf
inc
xor
pop
inc
shl
inc
sub
inc
add
add
loopne
inc
ret
inc
mov
leave
and
add
mov
sbb
sbb
stc
test
lea
mov
dec
sarb
add
inc
ljmp
or
jge
mov
clc
leave
inc
add
rdpmc
sbb
mov
cmovne
jmp
inc
mov
sbb
mov
add
out
add
sub
add
jo
leave
movl
inc
add
inc
out
stc
int3
jb
xor
or
dec
mov
movb
loopne
inc
lea
push
movb
xor
lea
inc
jae
ficomps
addb
test
incl
inc
add
test
jne
orl
jmp
inc
jne
mov
mov
shlb
push
mov
gs
add
inc
dec
into
mov
jl
add
inc
mov
add
add
inc
or
inc
in
fsub
inc
add
add
call
pop
test
dec
jmp
pushl
loopne
movl
push
incl
mov
cwtl
movl
sbb
rorb
inc
rorb
test
add
add
push
add
mov
incw
add
xor
push
cli
popw
push
xchg
sbb
test
callw
adcl
mov
mov
push
fsubl
dec
inc
mov
lret
fistl
ljmp
jmp
in
lock
mov
xor
add
stos
data16
incl
data16
inc
shlb
add
addl
mov
add
push
lea
addb
jge
mov
rol
mov
rorb
orb
test
push
mov
orb
push
xor
aam
test
cmp
data16
dec
test
xor
lahf
mov
mov
data16
sbb
dec
mov
mov
add
jne
test
jne
sti
sbb
cld
jmp
inc
mov
data16
push
incl
test
sbb
lock
pushl
xorb
add
xor
movw
mov
sbb
mov
add
add
xor
inc
add
add
inc
jmp
addl
or
jmp
push
in
test
xor
mov
mov
push
add
decl
add
decl
movsl
add
add
push
xor
xor
mov
push
push
jne
mov
sbb
jne
incl
add
add
mov
sbb
leave
test
jne
call
xor
mov
enter
mov
mov
sbb
sbb
mov
inc
decl
add
xchg
ret
add
add
mov
lea
add
mov
inc
rdpmc
jne
add
inc
call
add
orb
ret
incl
add
cmp
pushl
add
test
je
mov
sbb
test
js
add
sub
mov
add
dec
push
mov
mov
mov
cld
or
dec
incl
push
add
mov
orl
add
push
xor
inc
mov
push
incl
inc
add
addb
mov
lea
je
decl
call
mov
hlt
call
mov
cwtl
mov
mov
addl
mov
inc
jmp
ljmp
mov
and
pushl
lcall
add
enter
add
adc
add
mov
xor
jmp
mov
in
inc
or
decl
jne
mov
mov
lock
xchg
jmp
adc
inc
mov
push
sub
push
test
inc
dec
mov
movl
add
add
mov
push
roll
bound
xor
sub
push
lea
jne
incl
jnp
mov
fs
sbb
out
or
ret
inc
decl
test
clc
lcall
or
inc
dec
incl
add
call
add
push
adc
mov
mov
addl
incl
inc
stos
mov
add
mov
cmp
movsb
mov
sbb
addb
call
xor
pop
inc
xor
pushl
mov
pushl
mov
sub
add
mov
mov
ret
mov
ret
mov
add
mov
xor
sar
test
inc
add
testb
push
add
add
add
add
add
mov
mov
sbb
jne
mov
xorb
add
cld
add
mov
cld
add
lret
add
sbb
dec
or
dec
sbb
inc
dec
mov
sbb
nop
scas
add
add
mov
add
mov
cmp
xor
gs
je
push
sarb
mov
push
cmp
add
dec
mov
in
adc
pop
inc
leave
or
gs
add
into
in
enter
push
xorl
or
jnp
test
add
mov
ltr
decl
clc
out
add
cmp
jge
jb
je
pop
push
mov
in
roll
orl
cmpl
hlt
mov
push
jns
lock
ror
test
dec
rcpps
mov
inc
test
je
mov
adcl
and
jp
rcpps
add
sbb
add
je
cmp
js
add
jns
vmread
add
adc
jge
mov
add
or
push
push
mov
add
pop
add
mov
inc
pop
xorl
add
push
clc
mov
jp
add
divl
test
je
mov
or
decb
jbe
mov
add
cmp
add
je
mov
mov
hlt
orb
jb
jmp
xor
pop
pop
pop
ret
ret
mov
xorl
pushf
xor
wrmsr
test
dec
ret
mov
pop
dec
jne
xor
inc
dec
jbe
inc
pop
add
push
dec
push
mov
and
jo
mov
sbb
mov
nop
or
jne
cmp
xor
add
cmp
js
jae
xor
jmp
mov
fdecstp
test
add
add
mov
cmp
adc
jge
mov
jl
clc
dec
jge
mov
jb
mov
mov
xor
add
mov
inc
pop
jge
cmp
mov
imul
fimuls
fists
in
jne
mov
imul
fdivrp
filds
test
inc
mov
mov
adc
rcll
mov
fiadds
mov
mov
xor
mov
xlat
into
ffreep
lret
iret
dec
inc
mov
fmull
dec
jnp
add
mov
inc
dec
lea
add
jb
add
inc
imul
cld
clc
mov
incl
or
sbb
lret
add
dec
add
enter
inc
pop
decl
add
add
mov
xor
or
pop
cltd
push
clc
mov
xor
add
cmp
hlt
cmp
or
mov
loopne
mov
cld
pushf
pop
pushf
mov
lock
adc
orb
xor
dec
mov
iret
inc
jne
mov
cmp
je
add
or
dec
inc
mov
cld
add
cmp
mov
or
mov
or
inc
xor
pushf
call
jne
mov
fcomps
add
incl
cld
add
mov
cld
inc
fidivrs
fbstp
mov
adc
fadd
add
mov
inc
mov
loopne
sbb
sbb
pushf
add
mov
cwtl
inc
inc
jne
mov
clc
add
mov
or
inc
lea
add
inc
rorl
add
shufps
jmp
xor
hlt
mov
fadds
xor
add
cmp
pmuludq
jmp
mov
or
inc
mov
jne
mov
clc
add
xor
jne
pushl
add
mov
cld
add
xor
mov
adc
sub
lea
add
jb
add
inc
add
inc
mov
or
mov
in
scas
inc
mov
in
add
mov
dec
mov
mov
cld
push
dec
add
mov
in
cmp
mov
mov
mov
xor
cmpl
xor
jmp
add
xor
add
cmp
mov
mov
adc
jmp
mov
cld
mov
push
jne
dec
or
push
inc
in
add
or
dec
cld
mov
xorl
pushf
decl
mov
mov
xor
mov
inc
mov
mov
call
add
call
push
xor
pmulhuw
test
mov
mov
xor
xor
xor
add
inc
mov
movl
sub
lock
mov
mov
or
ja
mov
cld
cli
mov
cmp
bswap
mov
mov
clc
repnz
push
xor
xor
pop
jmp
mov
xor
lea
xor
pushf
out
neg
insl
test
clc
pop
inc
or
xor
add
jne
mov
in
push
xor
add
cmp
add
mov
mov
add
mov
mov
pushf
pushf
xor
jne
mov
icebp
icebp
shl
mov
pop
jne
mov
in
jmp
add
mov
or
inc
jne
mov
ret
or
jge
sub
xor
add
mov
clc
negl
xor
cmp
repz
xor
add
mov
mov
cld
lock
test
clc
add
fdivrp
test
jnp
add
jae
sub
shll
leave
call
in
in
add
mov
in
test
mov
xor
pushf
jnp
xor
push
loopne
jne
mov
add
xor
mov
cld
jb
add
jne
mov
jge
mov
lock
xor
mov
lock
jge
xor
dec
mov
loopne
jge
add
icebp
add
dec
hlt
xor
mov
in
jge
mov
dec
pop
xor
inc
hlt
xor
mov
repnz
cmp
test
fistps
inc
mov
add
inc
test
add
add
ret
jnp
inc
inc
xor
fdivl
test
push
add
cmp
setl
mov
call
or
inc
mov
and
lock
movl
mov
clc
xor
mov
inc
mov
mov
mov
mov
hlt
inc
rorl
mov
push
mov
in
jne
mov
addl
clc
mov
add
rolw
mov
jne
incl
inc
push
test
sub
add
and
add
mov
and
adc
inc
inc
push
add
add
enter
mov
add
add
str
lea
sbb
dec
cmp
inc
push
mov
push
add
mov
inc
add
add
mov
loopne
dec
mov
cld
push
xchg
add
add
or
dec
loopne
xchg
push
add
dec
jmp
mov
sbb
inc
xor
add
push
divl
and
add
jno
incl
inc
push
push
mov
mov
push
inc
enter
push
call
pop
push
mov
mov
push
jo
incl
or
call
fmull
mov
mov
adc
dec
xor
mov
mov
mov
push
lret
movb
inc
movntps
lret
into
dec
lret
mov
mov
fdivl
mov
push
mov
sbb
dec
sarl
push
jne
mov
lea
call
sbb
add
push
mov
push
mov
test
xadd
pop
add
mov
or
push
add
add
and
call
add
mov
add
xor
add
inc
je
push
cli
dec
mov
or
inc
add
data16
subl
add
add
enter
int3
loopne
rolb
lea
data16
add
sbb
inc
lldt
xor
sub
add
ror
dec
inc
cmp
cld
or
into
out
lret
dec
mov
loop
cmp
inc
daa
loop
out
add
add
push
inc
xor
add
push
push
inc
in
push
inc
sbb
rorb
addb
ljmp
xor
mov
fmuls
add
lea
add
popl
add
push
incw
mov
add
xor
test
inc
mov
add
or
or
inc
mov
jne
mov
add
add
adc
adc
push
mov
mov
inc
mov
or
push
jne
call
inc
sarb
out
add
add
and
fs
incl
jo
leave
scas
inc
add
orb
call
shr
xchg
add
add
dec
and
push
decl
mov
mov
lea
mov
add
mov
push
shlb
inc
in
jno
push
mov
mov
je
mov
sbb
popl
add
add
adc
jmp
sub
jne
mov
in
popl
push
incl
adc
add
call
and
and
inc
test
sldt
xor
pushf
jmp
mov
or
inc
call
mov
loopne
inc
add
mov
add
add
cmp
test
sbbl
jne
call
leave
rcrb
add
add
add
inc
mov
fcom
add
lea
pushl
call
mov
fstps
push
pop
mov
addl
mov
xor
xor
pop
or
inc
push
in
or
movsl
xbegin
clc
adc
divb
or
test
jno
add
adc
xchg
test
clc
data16
orl
rolb
mov
mov
push
add
push
jge
add
jne
mov
jmp
xor
pop
cvtdq2ps
ret
mov
xor
add
push
rdpmc
out
add
mov
ret
sbb
cmp
or
or
pop
inc
add
add
invd
jge
mov
cli
xor
mov
ret
mov
sub
inc
xor
pushf
inc
mov
hlt
test
mov
xor
dec
or
jne
mov
call
inc
mov
add
add
inc
mov
addl
inc
mov
lock
jge
mov
cli
xor
add
test
add
cmp
xadd
test
mov
xor
add
pop
loopne
inc
clc
xor
add
data16
mov
hlt
xor
data16
data16
cmp
ja
psubq
ltr
add
add
data16
mov
jge
data16
data16
mov
fdivl
data16
mov
mov
pop
or
clc
mov
lock
jge
invd
pop
add
cmp
data16
mov
pop
fbstp
test
add
add
jge
data16
pop
stc
bsf
mov
in
test
mov
call
ds
add
mov
call
add
mov
jnp
mov
mov
call
mov
data16
xorl
fisttps
cld
jne
xor
mov
sti
repnz
data16
push
xor
mov
pushf
data16
mov
mov
fisttps
or
mov
hlt
mov
add
dec
or
mov
or
mov
fdivrl
xor
pop
lock
lea
icebp
jb
add
jge
mov
fsubr
pop
mov
in
rcrl
jb
add
jge
mov
in
pop
data16
cmp
mov
fdivrl
cmp
mov
mov
lock
mov
or
clc
cmp
je
push
loopne
dec
mov
icebp
mov
pcmpgtd
add
jmp
mov
lock
rorl
or
jb
add
loopne
jne
data16
mov
data16
add
data16
retw
ret
lret
enterw
pop
jne
mov
call
xor
lea
repnz
add
xor
in
xor
movl
clc
add
pop
pushf
pop
call
mov
push
pop
mov
push
inc
add
add
into
fs
mov
ret
add
add
add
ds
add
into
ret
pop
adc
add
add
jne
lea
mov
sarl
test
mov
push
xorb
mov
xor
cmp
pop
mov
je
xor
mov
cmp
pop
cmp
jne
mov
cld
push
pop
inc
stc
test
clc
test
cmp
fs
or
add
add
push
lret
add
clc
add
dec
mov
push
add
xor
cmp
je
mov
push
lea
push
cmp
mov
add
sub
add
mov
jne
mov
xor
mov
push
cmp
jne
sbbl
clc
inc
pop
sti
add
cld
xor
mov
roll
mov
inc
in
add
mov
mov
push
mov
test
xor
pushf
sub
inc
sub
mov
inc
add
or
cmp
mov
cmp
je
push
dec
str
cmp
xor
mov
add
data16
push
add
jne
movl
clc
xlat
inc
mov
push
pushf
in
add
add
add
add
add
lret
lock
clc
inc
lret
cmp
ss
pushf
test
je
xor
rorb
push
add
jb
add
dec
mov
push
push
adcl
xor
mov
scas
ret
jns
mov
dec
or
ret
lock
mov
or
mov
xorl
mov
adc
iret
inc
movl
incb
ret
adc
clc
dec
fisttps
add
ret
lea
add
xor
pushf
add
add
inc
test
xor
push
pushf
push
xor
inc
cmp
jbe
mov
or
inc
test
xor
in
hlt
push
push
push
push
mov
pushf
pushf
xor
mov
or
mov
clc
jb
add
orl
addl
mov
or
inc
dec
mov
orw
xor
mov
mov
mov
mov
inc
dec
add
add
mov
clc
or
mov
clc
popf
incl
ret
adc
mov
hlt
test
clc
or
xor
pushf
jb
add
inc
daa
inc
inc
xor
dec
pushf
add
clc
cmp
or
add
xor
or
lea
or
enter
mov
cld
dec
push
sub
add
or
add
or
add
mov
inc
mov
cmp
xbegin
clc
or
xor
adc
lea
add
inc
add
add
je
push
or
dec
std
mov
mov
mov
or
inc
clc
mov
hlt
call
push
or
push
xor
mov
xor
pushf
inc
mov
or
add
inc
mov
or
inc
push
jmp
mov
mov
jne
jmp
mov
clc
lret
push
mov
mov
sub
decl
or
pop
ds
pushl
mov
mov
jmp
leave
jne
call
in
dec
add
add
inc
cmp
je
mov
or
add
or
adc
enter
rolb
mov
or
rorb
jmp
push
mov
cld
inc
inc
orl
push
push
mov
add
test
mov
adc
mov
mov
lock
fcoms
mov
push
enter
cmp
add
mov
call
cmp
jmp
push
call
mov
cld
or
call
add
xor
jne
cmp
jne
mov
or
pop
into
je
mov
or
mov
mov
mov
or
sar
xor
xor
pop
adc
ret
cld
inc
mov
cld
mov
push
pop
or
xorps
test
add
adc
addl
jmp
ror
inc
leave
xor
and
add
xor
xorl
mov
pcmpgtw
add
leave
mov
push
dec
mov
lea
xor
sysret
dec
rorb
pushw
jne
ud0
mov
lods
add
data16
iret
and
cli
inc
cmp
add
inc
pop
lea
mov
add
mov
mov
add
inc
data16
clc
int3
cmp
je
push
pop
xchg
data16
lea
jb
jmp
call
clc
xchg
mov
or
lea
push
inc
jge
mov
fdivs
incl
xor
xchg
ret
xor
cmp
data16
rolb
add
dec
xchg
push
jmp
push
add
add
mov
clc
dec
xchg
cmp
jne
xor
jmp
add
jne
call
clc
xchg
sti
add
add
xor
pop
mov
jmp
mov
cmp
cmp
lea
jle
jae
mov
lcall
inc
push
lea
mov
int3
push
xchg
add
add
inc
add
cld
mov
aam
xchg
mov
testb
mov
hlt
add
mov
decl
incl
mov
call
je
js
lock
mov
mov
sbb
clc
add
mov
rorb
dec
xchg
mov
in
jge
cmp
clc
pop
fistl
clc
add
mov
mov
mov
adc
add
adc
pop
sbbl
ret
cmp
mov
cld
add
add
add
sub
or
add
mov
push
push
clc
addl
out
add
jmp
cmp
jmp
je
mov
inc
add
add
add
pop
pop
push
inc
in
pop
in
cmp
xor
add
push
mov
in
dec
push
test
add
leave
inc
test
add
add
dec
push
mov
hlt
push
dec
leave
mov
clc
cmovge
mov
clc
popl
push
add
push
xor
cld
add
add
pushfw
add
add
mov
cmp
jne
xor
jmp
add
mov
or
mov
mov
mov
or
shl
icebp
addb
or
or
stc
shll
xor
inc
xchg
add
add
mov
test
sub
jmp
mov
lock
lea
mov
or
leave
add
dec
dec
test
paddb
add
dec
mov
mov
or
dec
xor
mov
adc
mov
call
mov
push
clc
or
push
lret
mov
mov
xor
cmp
lsl
call
or
dec
or
inc
xor
in
add
inc
pop
xor
testl
dec
adc
inc
xor
sub
test
clc
inc
add
hlt
leave
test
clc
inc
push
aaa
inc
pop
rorl
orb
mov
push
clc
ret
xor
xor
js
dec
push
mov
lock
lret
jne
mov
enter
lret
into
out
dec
dec
jmp
xor
xor
mov
sub
add
or
dec
mov
xor
jb
add
dec
pop
mov
cld
mov
call
stc
add
pop
leave
add
in
mov
xor
movl
mov
xor
pushf
inc
cmp
pushf
xchg
mov
ljmp
push
push
push
push
push
xor
mov
add
mov
clc
lret
cmp
pushf
mov
clc
cld
jne
xor
xor
or
add
hlt
dec
dec
je
xor
xor
add
add
rol
mov
in
inc
enter
icebp
mov
clc
lock
enter
lret
inc
jne
mov
cld
dec
enter
pushf
sti
xor
mov
mov
xor
xor
mov
mov
push
shr
in
cmp
add
pushf
mov
call
xor
pushf
popa
push
dec
inc
mov
clc
pushf
into
mov
in
call
pop
or
or
or
push
inc
cmpxchg8b
leave
loopne
test
mov
rcll
xor
add
and
mov
leave
sti
inc
decl
mov
clc
dec
iret
xor
jb
add
inc
mov
xabort
loopne
ljmp
mov
clc
lock
dec
mov
loopne
incl
mov
hlt
jne
mov
in
dec
or
jb
add
xor
add
mov
subl
mov
xor
pushf
mov
clc
add
mov
adc
inc
mov
mov
loopne
inc
mov
mov
nop
roll
mov
mov
dec
push
mov
xor
mov
mov
in
into
inc
iret
xor
add
mov
dec
mov
mov
mov
mov
xor
mov
clc
enter
mov
lock
mov
cmp
rol
enter
inc
adc
inc
clc
xor
add
mov
roll
add
push
mov
fsubr
inc
mov
adc
add
inc
test
xor
fmuls
test
cld
or
dec
ret
push
inc
dec
mov
mov
push
jne
mov
call
mov
mov
clc
mov
xor
adcl
inc
push
mov
clc
incl
mov
clc
rolb
je
mov
jne
lea
mulb
decl
fadds
inc
jmp
mov
roll
mov
lock
dec
ret
mov
mov
mov
fadd
enter
inc
cld
mov
xor
add
sub
xor
pushf
add
or
jne
clc
mov
call
jmp
mov
xor
xor
enter
clc
inc
inc
pushl
in
pushf
jne
mov
clc
dec
out
dec
mov
lea
cmp
lea
mov
cld
iret
mov
jmp
test
je
mov
fdivr
movl
lock
inc
lock
lret
imul
testl
dec
mov
fmuls
fmuls
enter
inc
dec
xor
add
mov
inc
inc
push
mov
lock
mov
fadds
rol
test
dec
push
decl
push
mov
add
cmp
add
loopne
add
dec
xor
pushf
mov
cld
iret
test
mov
in
dec
add
add
dec
mov
fmull
add
testl
test
add
add
mov
cld
mov
hlt
mov
add
cmp
add
mov
mov
call
dec
add
cmp
cld
iret
mov
dec
push
lea
mov
call
iret
inc
mov
or
or
xor
cmp
je
mov
mov
xor
mov
mov
xor
bswap
rorb
add
mov
xor
or
mov
xor
bswap
rorb
add
add
xor
mov
add
dec
dec
xor
mov
lock
iret
rorl
inc
mov
iret
add
xor
mov
or
push
shll
cmp
fmull
test
dec
dec
xor
or
dec
enter
add
mov
xor
or
mov
mov
xor
mov
cmp
jne
lea
sti
or
cmp
je
mov
ret
or
call
add
mov
cld
mov
xor
add
dec
jnp
mov
xor
add
mov
mov
xor
rorl
jb
add
ja
sbb
cwtl
enter
inc
decl
fadds
rorl
inc
xor
mov
or
inc
rcll
mov
xor
jb
add
shll
mov
xor
add
repz
inc
mov
xor
inc
mov
mov
jne
mov
test
inc
mov
mov
lea
xor
add
mov
lods
dec
inc
mov
lret
mov
adc
std
ret
ljmp
hlt
push
xor
enter
inc
add
cld
test
pushf
inc
xor
pop
push
incl
in
mov
push
inc
cmpsl
mov
or
add
add
add
icebp
je
mov
cld
rol
ret
add
lea
cwtl
jne
clc
or
incl
cmp
incl
lcall
or
push
mov
test
inc
mov
imul
dec
mov
push
dec
push
xor
add
push
incl
lods
inc
inc
mov
xchg
or
call
adc
orb
inc
inc
add
mov
call
push
push
dec
jo
push
dec
mov
cmp
cmovne
call
mov
lcall
leave
inc
adc
jne
call
dec
inc
mov
add
mov
push
or
dec
xorl
cmp
mov
pop
adc
ret
mov
clc
mov
pop
mov
mov
push
push
lock
mov
adc
or
push
ret
xor
mov
mov
cmpb
add
cmp
mov
xchg
dec
add
mov
add
dec
into
mov
mov
das
add
add
mov
and
mov
and
xor
lea
xor
add
xor
orl
xor
pushf
mov
or
jne
call
adc
mov
adc
movl
pop
dec
and
call
in
call
adc
pushf
pop
mov
and
push
add
mov
test
decl
and
cli
and
or
sbb
adc
jmp
mov
adc
dec
adc
mov
and
xor
add
pcmpeqb
jmp
decl
je
mov
pop
adc
pushf
mov
jge
decl
