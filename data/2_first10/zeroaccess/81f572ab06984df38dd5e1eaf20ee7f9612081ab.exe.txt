push
mov
sub
mov
mov
jmp
adcb
shrl
and
outsl
jge
jle
xlat
cmp
rol
pop
add
add
add
xor
rcrb
adc
mov
push
out
mov
es
lods
fiadds
data16
outsl
or
pushf
js
inc
stos
push
sub
mov
stos
push
roll
jmp
mov
dec
out
inc
call
mov
and
jnp
ret
xchg
and
jmp
ret
lock
and
add
adc
xor
or
fisttpll
ds
or
fst
or
pop
fstps
jno
inc
dec
aaa
adc
sarl
dec
call
inc
inc
or
and
clc
lock
fucomp
ja
pop
push
add
daa
addr16
dec
mov
mov
scas
push
xor
dec
and
lret
sbb
adc
test
lods
movb
loope
orl
mov
lds
inc
std
cmp
xlat
dec
ljmp
dec
ds
inc
or
adc
cltd
pop
push
mov
cmp
cmp
clc
mov
and
jmp
ret
call
or
les
jnp
sub
movsb
xor
push
pop
xchg
iret
dec
repz
adc
dec
sahf
mov
xchg
movsb
movsb
xor
arpl
popa
dec
push
sbb
mov
sbb
cmp
imul
jmp
in
lea
adc
sbb
cmc
pop
jnp
push
mov
mov
sbb
nop
adc
mov
stc
out
xchg
stos
push
adc
add
je
orl
repz
or
sub
cmp
popf
jmp
fsubl
or
jne
push
loopne
lcall
loop
jl
int3
dec
jne
adc
xor
adc
jne
and
push
rcrl
je
mov
data16
add
mov
sbb
fsubs
mov
mov
fsubrs
xor
int
adc
lods
sahf
jns
dec
jmp
cmc
cmc
repnz
adc
and
jo
adc
pushf
xor
xor
add
pop
sbb
push
fdivrs
leave
daa
lea
push
fiaddl
xor
scas
mov
or
mov
arpl
ljmp
pop
pop
mov
fstpt
int
mov
cmp
inc
xorb
rcr
bound
sbb
mov
mov
push
lret
fisttpl
push
mov
shrb
movsb
sub
stos
jae
push
cld
testb
orl
mov
lds
cmp
sti
and
adc
mov
and
mov
fnstenv
adc
xor
add
mov
mov
outsl
dec
or
sbb
js
push
sbb
sbb
xchg
jnp
mov
stos
ljmp
jns
rorb
sub
mov
cwtl
loop
pop
jne
orl
add
fstpl
fcoms
mov
mov
jge
dec
jo
xchg
mov
push
nop
cs
or
shlb
aaa
inc
movsl
fidivrl
into
adc
stos
outsb
lock
add
cmp
dec
pop
bound
cltd
pop
pusha
xchg
insb
push
xchg
hlt
xchg
and
push
pop
push
jp
xor
test
pop
and
mov
ret
push
jg
call
xchg
test
adc
out
xorl
xchg
pop
incb
sub
inc
jns
push
add
mov
mov
movl
adc
movl
adc
mov
mov
mov
or
push
push
sbb
mov
movzbl
sbb
xor
and
push
movl
cmpl
je
cmpl
jne
pushl
call
mov
dec
mov
jmp
mov
jmp
xchg
mov
push
mov
push
out
xor
jge
jle
jge
jle
mov
mov
sub
int3
sub
arpl
js
lahf
fistl
mov
stos
mov
int
xor
stos
adc
cmp
mov
adc
push
and
dec
xor
mov
fs
out
or
pop
loope
add
imul
lret
jo
decb
shlb
lock
daa
mov
add
testb
es
sub
cmc
mov
jne
cmc
lahf
push
add
dec
sbb
jle
repz
dec
adc
pusha
mov
xchg
arpl
add
outsl
pop
outsl
push
lcall
inc
insl
rep
insl
rorb
clts
jno
mov
jne
in
pop
out
add
mov
mov
addr16
roll
test
test
mov
jns
iret
and
insl
inc
inc
push
push
stos
adc
add
pop
ja
mov
jge,pt
sbb
xor
mov
push
faddl
pushf
xor
push
jo
jno
out
mov
insb
and
and
cmp
hlt
inc
rorb
xor
mov
repz
stos
add
leave
adc
incl
xor
mov
jae
xlat
js
sbb
outsb
dec
fstpl
leave
mov
xor
loop
xor
es
lock
add
lret
pop
aad
andl
mov
arpl
ret
cld
cmp
xchg
subb
cld
insb
jecxz
notb
adc
xchg
mov
xchg
outsb
fwait
aad
sub
dec
les
xor
stos
dec
inc
mov
leave
rolb
push
dec
in
and
pop
adc
jl
push
cmp
dec
xlat
les
rclb
cmp
lds
mov
ds
sbb
test
insl
cmp
leave
inc
lods
adc
push
aam
dec
xor
out
rcrl
test
test
sub
into
std
fildll
clc
outsb
inc
fildl
and
dec
xlat
add
ficoms
addl
xchg
add
cmc
mov
iret
mov
and
daa
cmpsb
xchg
test
pusha
notb
push
mov
adc
ljmp
push
sub
and
cmc
push
test
sbb
test
cltd
jae
sbb
mov
fdivrp
data16
pushf
in
adc
xor
lds
mov
push
adcb
xor
rcl
fildl
mov
or
mov
lret
mov
adc
loop
cmpsb
xor
jecxz
mov
ljmp
mov
movsb
push
push
push
pop
jbe
int3
cmp
dec
xor
lea
push
push
pop
mov
sbb
nop
jmp
xor
dec
pop
pop
lods
lahf
into
mov
add
lret
xor
inc
insl
lcall
test
cmp
lret
mov
popf
imul
iret
jl
imulb
dec
jnp
arpl
cmp
xchg
cmc
add
xchg
sub
pop
adc
dec
in
cmpsl
cmp
ret
dec
inc
sbb
xor
leave
push
lods
fmull
out
jge
and
jb
xor
mov
inc
ror
jecxz
aas
cli
mov
jb
call
push
jle
mov
and
js
lret
popf
cmp
sbb
jecxz
rolb
sub
out
fsubrs
cmpsl
sub
jmp
inc
xor
jne
inc
lds
xchg
mov
negb
pop
pop
mov
cli
add
mov
push
jnp
xor
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
movl
mov
movl
movl
or
movl
add
movl
xor
mov
xor
xor
add
mov
movl
sbb
movb
subl
mov
xor
add
sbbl
mov
mov
xor
xorl
add
mov
mov
movl
cmpl
je
cmpl
jne
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
andl
xor
add
not
mov
sub
mov
add
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
xor
xor
inc
mov
jmp
movl
cmpl
je
cmpl
jne
push
call
cmpl
jne
xor
xor
dec
mov
mov
dec
mov
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
xor
jmp
mov
mull
cmp
inc
fistl
outsl
jge
jle
rorb
adc
int3
std
fisttpl
and
stc
push
mov
cmpsl
mov
jmp
xorl
mov
lahf
pop
dec
test
add
push
mov
paddusb
jb
outsl
jp
aad
shlb
les
rcrl
imul
lcall
mov
or
xchg
mov
and
lcall
notb
dec
mov
pop
mov
adc
push
inc
es
pusha
in
or
dec
jns
and
out
fwait
test
dec
adc
xor
inc
insb
push
jns
sarb
inc
icebp
int
push
sete
cli
xor
bound
jp
cmp
jg
leave
xor
jne
jp
mov
or
in
insb
push
sarw
add
mov
nop
sub
xor
lea
mov
sbb
mov
mov
stos
mov
fdivrl
pop
cmpl
ret
mov
cmpsl
jl
je
loop
xor
lods
repnz
dec
mov
jns
aas
and
adc
adc
or
xor
rclb
sbb
int
mov
in
cli
aaa
mov
and
pop
fadds
push
lret
inc
mov
loop
dec
mov
dec
out
sti
mov
adc
mov
pop
pop
xchg
ret
std
push
cld
out
jp
mov
adc
pushf
mov
mov
in
sbb
push
mov
jno
xchg
das
cmpsl
xor
pop
and
xor
push
push
mov
call
into
push
pop
dec
dec
mov
add
pop
mov
pop
bswap
inc
mov
adc
in
cwtl
sub
pop
mov
dec
jge
cmp
hlt
lods
add
pop
inc
add
sahf
int3
dec
cltd
scas
add
loope
add
fdivrp
and
and
hlt
mov
sub
loope
jmp
dec
cmc
lcall
cmc
mov
das
andl
lret
mov
pop
ror
rclb
pop
fbstp
leave
xchg
jmp
inc
cmp
adc
add
mov
mov
dec
mov
lahf
movsl
push
cmp
inc
cli
xlat
and
jge
int3
cmp
xchg
cmp
cltd
push
ds
pop
gs
xlat
dec
rorb
out
movsb
iret
aas
jno
push
lds
js
cmp
xor
xchg
mov
aad
add
roll
inc
mov
mov
int3
repz
shlb
scas
rcr
lods
cld
jecxz
arpl
jecxz
fs
jns
xchg
mov
fwait
nop
outsb
dec
and
cmp
jns
mov
sbb
mov
inc
bswap
enter
mov
pusha
rcl
clc
add
addl
fwait
popf
sub
push
ja
inc
pop
pop
push
pop
inc
notl
add
pop
mov
cmp
sub
sub
aad
mov
xchg
add
loope
out
and
adc
mov
sbb
pop
fs
iret
xchg
lcall
ljmp
cmpb
cmp
mov
cmpb
xlat
es
jo
bound
in
ljmp
sub
xchg
clc
aas
sub
pop
in
mov
icebp
lds
frstpm(287
ss
imul
ds
scas
stos
in
dec
dec
movsb
popa
stos
inc
cs
std
outsb
data16
negb
rclb
mov
mov
sub
add
mov
mov
mov
xor
jmp
lahf
in
leave
decl
imul
inc
in
lds
jle
outsl
jge
jle
mov
jg
pushf
stos
xchg
fstl
out
sub
mov
adc
into
jecxz
sbb
or
mov
push
in
bound
or
fisttpll
mov
loopne
mov
mov
test
mov
xor
enter
xchg
pop
dec
push
imul
sbb
cld
adc
inc
jecxz
sub
sarl
cmc
ficomps
or
pop
mov
adc
imul
and
dec
mov
mov
xchg
inc
into
xchg
xor
add
and
dec
and
sbb
mov
pusha
ljmp
xor
xor
pop
adc
pop
inc
mov
cs
outsb
mov
test
jnp
mov
pop
adc
jg
sbb
xor
xchg
mov
int
cld
mov
dec
mov
adc
imul
nop
cmp
pushf
js
cld
or
push
stos
jns
das
dec
xchg
xor
std
fimull
or
ret
rcl
xor
lret
pop
dec
nop
outsl
mov
insl
inc
das
dec
int
int3
mov
pop
out
sbb
inc
mov
movsb
or
or
stc
jg
jno
rorb
cld
cwtl
rclb
mov
mov
cmpsl
add
scas
loop
mov
insb
js
inc
push
rcll
add
push
imul
ss
lahf
in
das
idivb
aas
jmp
daa
cmp
push
jae
into
lret
in
sbb
mov
pop
pop
xchg
stos
shll
test
mull
divb
pop
mov
icebp
pusha
outsl
fiadds
dec
cmp
cmp
adc
mov
js
pop
xchg
std
sbb
adc
sub
jl
cmp
pop
ljmp
xor
leave
bound
mov
in
into
lock
fwait
jns
push
mov
sbb
jnp
xlat
loop
ret
cmpsl
add
dec
sbb
add
push
inc
xor
mov
in
mov
mov
lock
data16
aam
push
mull
jp
gs
sbb
lea
adc
xchg
or
mov
pop
fcoml
jno
add
sub
testb
loope
es
xorl
add
mov
mov
cmpsb
xor
rcrb
andb
xchg
or
scas
jb
aaa
fsubrs
mov
and
sti
push
das
iret
cmp
rol
or
mov
jl
andb
dec
ss
dec
lret
mov
stos
mov
pop
add
push
mov
int
jo
push
out
rcr
not
mov
add
and
popf
imul
sub
ds
ja
loopne
or
aad
add
or
mov
pop
iret
dec
pusha
repnz
or
aas
xor
sbbb
adc
stos
add
ret
inc
sub
aad
push
cli
push
aas
mov
push
clc
sub
jl
dec
push
and
sub
scas
sub
xchg
or
mov
and
sahf
jns
mov
ljmp
cmp
lret
sahf
test
dec
and
les
mul
in
imul
xor
mov
in
mov
cmp
daa
dec
loope
dec
add
scas
lods
xchg
or
shl
imul
arpl
push
pop
pop
hlt
inc
addr16
hlt
lret
imul
inc
loope
aam
inc
jnp
dec
faddp
jmp
in
aad
lea
inc
mov
mov
xor
mov
not
mov
or
mov
and
mov
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
movzwl
or
mov
xor
add
orl
mov
mov
andl
mov
inc
mov
cmpl
jne
pushl
pushl
pushl
pushl
push
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
xor
add
mov
mov
mov
jmp
rorb
dec
inc
push
push
push
sbb
xor
outsl
jge
jle
scas
leave
das
xchg
stos
sar
mul
jbe
ret
cmp
js
ds
jnp
divb
mov
lcall
jns
rolb
rcrb
arpl
shl
pop
push
xchg
mov
cmp
sub
xor
xor
in
incb
jl
pusha
adc
paddb
mov
insb
lcall
pop
dec
lods
dec
push
mov
int3
insb
lcall
jl
dec
aad
adc
dec
mov
adc
xlat
dec
or
mov
sub
clc
or
sub
fcmovu
push
ds
inc
adc
and
and
scas
cmpsb
jae
and
or
sub
and
fnsave
into
repnz
cmp
dec
addb
je
lea
pop
movb
pusha
mov
repnz
popf
mov
mov
or
subl
adc
pop
mov
mov
das
ljmp
cmp
adc
xchg
cmp
mov
lcall
pop
sub
daa
cld
sub
adc
test
jo
repz
jo
jmp
lret
dec
fucomi
xchg
cltd
data16
xchg
stc
jp
cmp
dec
lods
push
pop
pushf
pushf
xchg
mov
popa
loop
loopne
lret
lahf
xchg
test
scas
inc
stc
fsub
mov
dec
in
jno
xor
dec
dec
daa
daa
jp
jb
push
xchg
pop
sbb
dec
inc
cli
outsb
addr16
cmp
or
pop
in
pop
pop
cmp
adc
imul
sti
mov
idivb
xor
pop
sbb
rolb
jnp
adc
xor
lea
stos
repnz
fwait
or
rolb
jge
int3
mov
add
push
or
movb
mov
xchg
inc
jae
out
test
push
pop
jg
sub
lock
fbstp
add
fimuls
insl
lahf
outsl
or
ds
ja
jbe
in
scas
rolb
aam
or
xor
lea
dec
push
lock
test
inc
mov
push
stc
push
outsl
push
fsub
lcall
push
mov
cmc
mov
and
mov
fs
xchg
or
or
in
mov
or
inc
faddl
cmp
dec
jae
ds
fldt
mov
sbb
xchg
outsl
js
insl
inc
add
adc
out
inc
sti
loop
push
cmc
pop
inc
lahf
jge
xchg
mov
mov
dec
fimull
adcb
or
jne
inc
inc
stos
fildll
jp
je
and
lcall
inc
push
mov
dec
lds
ljmp
cmpsb
cwtl
inc
sub
mov
adc
das
pop
aam
mov
std
push
ret
lds
xor
repnz
inc
aam
mov
push
mov
shrl
insb
mov
adc
cld
cmpsb
sbbb
xchg
adcl
ss
hlt
scas
fldenv
fs
cmp
test
push
imul
shrl
dec
and
outsl
push
adc
sbb
sti
ffree
inc
xchg
push
arpl
lea
xchg
xchg
cld
mov
adc
and
and
mov
or
lret
cmp
cmp
mov
jecxz
shl
mov
inc
out
int
outsl
outsb
push
int3
andl
insl
sub
mov
stos
lret
pop
das
pop
out
or
mov
mov
int3
sbbl
imul
dec
clc
mov
mov
mov
mov
mov
mov
xor
add
je
lea
push
mov
xor
add
push
mov
jmp
xor
mov
mov
mov
sbb
adc
stos
or
jle
sahf
ret
adc
bts
and
test
dec
and
leave
jne
jecxz
cltd
mov
push
xlat
iret
push
lret
cmpsl
cmp
ja
push
or
fisttpl
aad
test
push
mov
inc
push
pop
leave
or
mov
leave
and
fisttpl
stos
lea
sahf
xor
loope
push
lea
mov
popa
xchg
lea
push
or
cmp
daa
push
xor
mov
jb
cmp
loope
ret
repz
dec
add
mov
ret
or
push
mov
adc
fldcw
ljmp
ds
xlat
push
call
ja
jns
mov
sub
pop
lods
sub
out
outsl
push
sahf
pop
xor
pop
cwtl
sarl
data16
in
les
popa
jmp
xor
enter
out
cmpl
cmove
in
and
mov
sub
test
ljmp
outsl
mov
and
stc
leave
jo
xchg
jle
mov
ret
push
mov
add
fnstsw
add
pop
imul
mov
fmul
pushf
sub
adc
ja
jge
or
inc
es
pusha
pop
and
aaa
stos
inc
sbb
insl
and
jmp
dec
sarl
dec
and
mov
inc
clc
popf
pop
mov
pop
xor
jo
and
out
popa
push
pop
pop
imul
pop
sti
push
ljmp
sub
jns
clc
fstpl
adc
fdivl
ficomps
xlat
cmp
in
inc
leave
pop
jae
test
add
inc
or
sbb
sbb
popl
pop
inc
xor
enter
inc
fildll
sahf
xchg
sub
adc
mov
test
sahf
mov
addr16
gs
pop
lahf
and
jnp
adc
mov
rclb
adc
insl
test
syscall
adc
imul
jecxz
sti
faddl
cmp
or
das
jg
mov
ds
mov
jl
push
andb
and
jp
out
mov
dec
in
jmp
aad
not
addps
inc
lret
adc
add
add
xchg
out
dec
mov
imul
mov
mov
cmp
icebp
daa
cs
and
jo
xor
or
testb
mov
inc
daa
loope
pop
mov
cmpsl
pop
mov
into
sbb
test
popf
ljmp
jnp
xor
popa
mov
inc
dec
repnz
call
mov
xchg
mov
fsubs
jp
popa
and
jecxz
jmp
add
pop
daa
cltd
fimull
dec
pop
mov
push
add
xchg
shlb
sbb
dec
fcoms
mov
test
ds
jl
pop
icebp
push
push
sub
xlat
push
add
arpl
sarb
loope
imul
aam
mov
pop
add
push
fnstsw
fildl
push
adc
sbb
dec
daa
adc
pop
ret
or
xor
in
sub
push
dec
add
test
inc
lods
jne
ja
mov
sbb
nop
lret
popa
iret
adc
sbb
mov
shlb
jae
stos
pop
or
lret
popa
xchg
jge
adc
pop
dec
ret
add
jle
jecxz
sbb
sub
dec
mov
scas
jno
enter
sub
imul
lods
setnp
bound
mov
push
lea
movsb
push
imul
add
push
pop
or
mov
lods
jmp
add
push
mov
mov
pushl
call
mov
cmpl
lea
mov
je
lea
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
jmp
stos
addr16
in
loope
jno
jo
xor
mov
or
outsl
jge
jle
mov
movl
dec
pop
aas
jp
ret
lea
xchg
insl
rolb
stos
pop
jge
das
add
sub
test
aad
sbb
insl
mov
pusha
or
jo
jg
dec
stos
sub
ja
dec
xchg
addr16
pop
push
pop
fdivp
sub
xor
pop
xchg
fcmovne
xor
sub
and
fcomps
push
inc
xor
add
pop
sub
mov
pushf
adc
xchg
jbe
pop
popa
inc
mov
push
cmp
cmp
mov
repnz
test
dec
ss
pop
cld
add
shll
pusha
and
pop
mov
mov
jno
int
lret
sub
add
out
js
daa
aaa
and
adc
repnz
sbb
push
adc
adc
pop
mov
mov
cmpsl
pusha
adc
setg
sahf
push
and
mulb
jo
jnp
shrl
inc
push
leave
aas
jnp
jno
lret
xchg
push
scas
shll
pop
nop
imul
lret
jp
out
mov
test
icebp
sub
call
ljmp
xorb
push
bound
xor
fwait
xor
jecxz
xchg
stos
mov
out
inc
adc
jecxz
inc
les
lea
jge
daa
ror
pushfw
or
pop
emms
les
stc
push
es
fisubrl
pop
ss
pop
sbb
sbb
lds
outsl
mov
adc
mov
sarb
cmp
int
hlt
cmpb
lea
cmp
andl
mov
fsts
jne
pop
inc
outsb
mov
and
test
mov
xor
lret
sbb
imul
jb
xor
mov
sbb
add
inc
push
mov
mov
or
fs
mov
lods
sub
orb
mov
xor
mov
add
sarl
push
hlt
jns
push
test
push
ljmp
mov
mov
xchg
xor
test
sbb
daa
and
inc
insb
scas
xchg
adc
arpl
cmp
aad
cmp
rcl
xchg
popl
in
insb
inc
jle
pop
pop
sbb
or
in
clc
mov
fwait
xchg
rcrl
jbe
adc
in
inc
mov
pop
leave
inc
jae
popa
pop
out
mov
jbe
jb
es
or
shll
pushf
and
pushf
mov
repnz
and
inc
lods
xchg
xchg
inc
mov
push
outsl
cmpsl
mov
lock
pop
push
push
mov
lahf
sub
xchg
sti
icebp
jae
push
jne
test
mov
ljmp
jns
jecxz
inc
jmp
sbb
mov
jno
out
in
dec
push
imul
mull
fcompl
mov
sahf
pop
lods
aad
mov
not
dec
scas
dec
push
cmc
jp
lock
jnp
not
fstl
insl
inc
sub
xchg
fs
cmp
loope
mov
rorb
adc
cmpsl
test
inc
mov
test
sbb
cmpsl
decl
insb
insl
cld
dec
fwait
mov
xchg
xor
scas
movsb
dec
mov
pop
test
ret
mov
xchg
push
add
jns
cmp
mov
and
and
rcrl
hlt
or
mov
lcall
add
clc
mov
mov
mov
mov
mov
mov
mov
mov
jmp
mov
jmp
jno
mov
cs
mov
push
in
iret
mov
jle
jg
xlat
lret
loopne
mov
adc
enter
je
sub
push
and
xor
shll
insl
inc
sbb
ret
int
cmp
pusha
popa
push
pop
popf
loope
cmp
jl
sti
imul
xchg
and
push
xlat
mov
and
test
insb
inc
out
sub
addr16
pushf
inc
fstp
adc
push
lahf
inc
js
add
movsb
and
pop
iret
mov
lods
jnp
cwtl
push
adc
pop
add
adc
les
aad
fldcw
test
cld
movsl
movsl
stc
fstps
sti
xor
fiadds
lahf
lahf
pop
movsl
or
gs
or
out
sbb
out
cmp
pusha
sti
cmc
shlb
cltd
movsl
aaa
test
test
movsl
fsubl
stos
fildll
rcrb
add
pop
out
xor
nop
lret
sbb
cmp
loop
mov
sbb
xchg
insl
loop
das
leave
cwtl
sbb
mov
dec
xor
cwtl
aam
rorb
or
mov
pop
cmpsl
pop
loop
lods
sub
and
repnz
cmpsb
test
jnp
pop
bound
mov
scas
and
repz
mov
popf
sahf
pop
sbbb
insl
sti
sub
pop
xchg
pop
inc
lcall
push
mov
or
shll
mov
push
jge
into
inc
cmp
sub
adc
aad
js
pop
jbe
incl
incl
pop
mov
movsl
push
pop
mov
mov
or
sub
and
mulb
jnp
out
xchg
jg
push
sbb
sarb
xor
mov
jg
adc
rolb
lds
mov
imul
push
sbb
inc
rol
lahf
cmp
fistl
ret
popf
or
inc
pop
jmp
jl
lods
jae
ret
out
daa
push
xchg
fsubrs
mov
insl
popl
mov
jmp
xchg
mov
pop
test
mov
aam
pop
stos
mov
mov
jo
movsb
repz
js
dec
cld
in
inc
dec
inc
inc
aaa
in
sahf
lcall
pop
daa
xchg
popf
shr
imull
push
xlat
jno
mov
lods
sbb
xlat
sub
lret
pop
mov
lock
cmpsl
mov
and
cmp
frstor
enter
clc
or
clc
inc
mov
fstps
lret
sbb
jo
daa
lahf
mov
stc
push
decb
inc
xchg
jmp
push
or
mov
push
mov
cltd
lahf
cli
pop
fdivrs
das
or
lods
imul
shlb
dec
push
dec
imul
incb
jo
mov
mov
jge
mov
mov
mov
and
lock
jecxz
out
or
mov
and
cmp
add
scas
outsb
cs
pop
push
and
out
add
cltd
jle
inc
pop
mov
mov
dec
mov
mov
mov
or
push
icebp
out
lock
or
sbb
lock
cmp
out
lods
jno
das
cld
test
in
pop
addb
leave
and
jbe
fcoml
jnp
aam
inc
out
les
or
sub
sub
push
inc
inc
fisttpll
lods
push
fs
fwait
mov
or
jnp
sbb
add
sbb
test
xchg
mov
ffreep
xchg
imul
push
outsb
jp,pn
dec
clc
mov
mov
mov
test
mov
jne
mov
xor
add
jmp
in
adc
ret
icebp
xor
xchg
sbb
mov
imul
lods
ret
dec
inc
adc
les
cmp
aam
jp
loopne
cli
inc
lret
cmpsb
push
insl
xchg
xchg
frstor
push
insl
xchg
and
ret
mov
add
push
push
pop
cmc
test
int3
add
xchg
jno
stos
je
mov
lds
xor
fisttpll
mov
mov
mov
fs
je
adc
and
cmp
gs
push
cmp
mov
jge
lods
xchg
add
xchg
fistpl
ret
lock
sbb
dec
cli
es
mov
pop
int
rep
aaa
adc
clc
shll
inc
xchg
hlt
inc
in
xchg
pop
iret
sub
inc
jmp
sbb
add
inc
dec
outsb
push
fwait
lods
push
fstpt
jg
push
mov
or
cmp
sbb
sub
lods
inc
mov
sti
sar
outsb
mov
popf
ret
and
ljmp
push
push
into
push
xchg
in
lods
xor
pop
push
and
xchg
and
imul
xor
aad
into
popa
das
jno
mov
andl
dec
push
push
inc
ss
jno
cwtl
sbb
cmp
lds
bound
and
sti
or
dec
or
cmpsl
fistpll
sbb
dec
icebp
movsl
or
mov
cmp
mov
mov
pusha
test
aas
pop
daa
lcall
fstps
sub
jecxz
lds
push
jle
shl
push
lret
inc
adc
popf
mov
in
lea
rcr
aam
dec
lret
lock
in
pop
mov
mov
jmp
pusha
fimuls
xchg
jbe
fiaddl
xchg
scas
push
adc
pop
cli
mov
jmp
ss
arpl
cmpsb
pop
sbb
repz
or
adc
add
mov
divl
sub
ret
xchg
ljmp
rorb
or
repz
or
pop
xor
push
ds
movsb
ja
imull
add
mov
popa
xor
lea
dec
sub
sbb
jmp
ds
jnp
hlt
xchg
inc
loopne
stos
xchg
mov
push
in
daa
fistpll
or
mov
xchg
jge
in
js
sub
mov
pop
adc
xlat
insl
dec
and
dec
gs
cld
push
push
pop
icebp
dec
sub
aam
sbb
into
push
sahf
xchg
adc
pop
nop
shr
jne
loop
inc
out
and
push
test
pop
stos
aas
or
adcl
cmp
sub
xchg
jge
push
fsub
push
jo
xchg
cmpsb
sbb
mov
and
loopne
cltd
xchg
or
ret
loop
in
sub
adc
fmuls
ja
push
mov
pop
inc
lcall
dec
nop
jbe
mov
imul
fbld
rorl
es
loop
or
push
or
push
mov
pop
mov
push
mov
inc
stc
int3
adc
pop
leave
mov
jae
sbb
or
in
fsubl
scas
testl
lret
or
je
fistpl
imul
xchg
cs
mov
cwtl
pop
dec
dec
andb
cmp
cwtl
imul
cld
pop
cli
aam
and
push
sub
add
jle
int3
sub
movsb
insl
dec
inc
mov
in
jnp
mov
adc
js
xchg
mov
inc
hlt
les
and
repnz
mov
aaa
shlb
jbe
mov
movsl
in
test
and
shrb
mov
xor
add
add
call
inc
in
movb
push
mov
add
push
mov
mov
pushl
jmp
push
js
repnz
jno
call
xor
inc
sbb
jle
lcall
imul
shlb
pop
dec
lea
js
adc
add
out
sub
data16
sub
popa
lcall
lahf
jp
enter
jg
lret
jg
jbe
in
cwtl
push
add
add
jno
lds
and
dec
adc
push
adcb
mov
mov
testb
sub
or
xor
dec
xchg
aad
lock
imul
lods
jno
jmp
adc
les
mov
test
imul
xor
mov
cmc
sub
xor
je
mov
jne
pusha
pop
int3
sahf
or
les
test
mov
sub
push
lret
or
jecxz
pop
push
inc
js
cmp
sarb
sub
jle
stos
inc
sbb
sarb
cmc
insb
and
dec
xor
sub
jecxz
movsb
inc
das
mov
sub
add
push
aas
pop
stc
mov
or
mov
mov
and
ficompl
mov
and
sbb
nop
arpl
jo
int3
push
lock
shrb
jo
pop
ret
jo
imul
jge
inc
dec
cwtl
adc
lret
or
push
xchg
dec
push
mov
loop
mov
nop
cmp
clc
mov
inc
hlt
addl
or
mov
lret
in
sarl
shl
sbb
jo
xchg
insb
test
aas
adc
jp
sarl
xor
inc
js
pop
lods
or
jo
mov
xchg
sub
xchg
xlat
aad
cmp
xlat
sbb
cmp
loope
jmp
aam
rcr
jnp
fdivrs
arpl
mov
mov
jno
xor
into
jnp
dec
inc
push
pop
mov
inc
cld
or
test
mov
push
mov
aam
in
mov
int
stos
mov
in
popf
xor
jl
or
int
pop
sub
mov
inc
push
cmp
lea
mov
int
mov
mov
andl
or
mov
jmp
fldpi
into
int3
dec
dec
push
dec
cld
repz
push
out
lods
pop
imul
outsl
lea
push
fbld
xchg
in
add
mov
cld
jmp
stos
adc
lods
pop
out
pop
adc
pop
dec
movsl
outsb
pop
jns
xchg
push
mov
add
ret
mov
jo
cmp
stc
and
cs
jecxz
or
repz
popa
mov
insb
cmp
adc
pop
sbb
lea
jmp
mov
cmp
adc
pop
popa
jmp
mov
dec
cs
inc
icebp
jno
cmp
push
dec
push
out
mov
fcomp
outsl
sbb
stos
stos
mov
pop
out
pop
fucom
jb
inc
pop
xchg
ljmp
rcrl
mulb
test
add
mov
lret
js
push
pop
dec
sbb
rcl
xchg
push
adc
mov
sub
dec
lcall
add
cmc
test
adc
mov
sbb
xlat
mov
outsb
push
je
and
or
sub
gs
stos
or
cmpsb
outsb
lods
push
sbb
mov
leave
push
jo
dec
inc
mov
jecxz,pt
popa
cmp
outsl
out
pop
aam
mov
cmc
je
sbb
push
fcoms
and
mov
pop
xchg
hlt
loope
mov
or
mov
in
mov
nop
inc
sahf
xchg
fdivs
fimuls
packuswb
cmpsb
leave
icebp
stos
pop
pcmpeqw
add
sub
xlat
ret
enter
orl
arpl
adc
mov
mov
pushf
and
mov
repz
mov
xor
mov
sub
sub
mov
add
mov
mov
mov
mov
xor
sub
mov
lea
incb
inc
push
pop
dec
jmp
dec
repz
insb
jno
in
sbb
sbb
outsl
jge
jle
xchg
xchg
pusha
xchg
gs
aaa
inc
dec
fildl
dec
push
mov
push
dec
cmp
or
dec
xchg
icebp
nop
fcompp
push
push
add
xlat
movsl
mov
nop
xchg
sbb
sbb
cmp
cli
addr16
mov
out
icebp
into
stos
push
xor
xchg
les
mov
push
or
and
sbb
push
inc
ret
dec
adc
xor
mov
fsubs
fbld
mulb
sti
das
sub
out
imul
pop
movaps
pop
das
cmp
mov
inc
and
sub
jge
jns
fsts
cwtl
adc
notl
clc
shl
pop
pop
jl
int
xor
inc
inc
adc
sti
imul
adc
and
movsl
jb
mov
int3
movsl
add
orl
fmulp
lret
xchg
lret
pop
cmpsb
ds
sbb
bound
dec
and
pop
int3
insl
xchg
jp
sub
adc
pop
aad
cwtl
pop
lods
call
in
negl
sub
push
std
dec
pushl
repnz
jo
fidivrl
sbb
mov
pushf
es
and
fdivs
mov
dec
mov
pop
and
cli
imul
mov
imul
xchg
cld
stos
jp
pop
leave
out
adc
mov
mov
push
stos
in
xchg
xor
rcl
stc
push
aam
adc
lea
in
mov
iret
xor
or
xchg
fcomp
sbb
add
jp
adc
and
mov
cmpsb
cmpsl
sarb
push
fistl
fcmovb
addl
pop
jno
test
jge
push
into
fcmove
out
push
add
out
mov
mov
and
sar
cltd
enter
jns
push
div
mov
sbb
fiaddl
mov
cld
inc
adc
movsb
sbb
hlt
daa
mov
mov
fidivl
xchg
aas
dec
xchg
ja
fidivrl
fmul
add
in
imul
hlt
pop
fildll
jecxz
fstp
icebp
inc
and
ret
mov
push
mull
mov
hlt
xchg
addr16
jbe
aaa
inc
sub
shr
gs
test
or
dec
cmp
pushf
mov
push
int
dec
pop
pop
in
lods
mov
push
rcll
aad
sub
outsl
lea
inc
pop
pop
add
in
and
movsb
loop
pop
mov
mov
mov
enter
jnp
jmp
sbb
push
into
insb
outsl
pushl
adc
xor
rcll
xor
bound
push
lea
mov
mov
cmp
sbb
jo
push
outsl
or
jle
xchg
mov
loop
lods
popf
cmp
adc
mov
cmc
daa
mov
shlb
cmp
dec
pop
xor
cwtl
push
push
xor
ret
pop
sti
or
and
test
cli
and
inc
cltd
inc
in
push
movsl
stc
mov
sti
movsl
shrl
fcom
add
arpl
jne
call
xadd
or
push
mov
sti
jnp
sti
nop
jns
cs
xlat
xchg
repnz
js
into
mov
and
dec
xlat
dec
out
icebp
repnz
xor
and
cmp
decl
xor
hlt
inc
mov
mov
ret
pop
mov
or
popa
popa
inc
mov
orb
xchg
insl
loope
push
ljmp
mov
repnz
or
out
cmp
push
shlb
xchg
mov
adc
add
andb
inc
loope
sar
or
jne
mov
mov
pushl
lea
pushl
lea
pushl
lea
jmp
out
sahf
mov
addr16
push
subl
jo
aad
jle
outsl
jge
jle
fstl
pop
inc
sbb
xor
mov
adc
and
aam
das
cmp
fnsave
cltd
imul
mov
dec
or
scas
add
jnp
add
scas
inc
outsb
push
dec
outsb
xlat
push
call
clc
into
adc
sub
inc
sar
pop
mov
mov
push
push
ret
fisttps
addr16
add
add
stc
dec
sub
cmp
and
inc
push
push
out
in
push
or
rorb
mov
cmc
je
jnp
sub
push
dec
es
jno
call
cmc
es
xchg
cwtl
les
gs
cld
test
das
adcl
in
mov
pop
sub
cs
dec
sub
iret
mov
sti
push
mov
jns
outsb
fdiv
dec
stos
add
jns
jmp
mov
pop
int3
cltd
repz
loopne
cmp
jge
cmp
mov
aam
mov
jnp
push
imul
inc
pop
das
push
mov
add
fs
push
xchg
dec
inc
dec
lock
sbb
fidivrs
daa
sbb
dec
inc
ret
adc
inc
out
jno
mov
push
test
jge,pt
pop
in
gs
add
add
add
cmp
inc
lea
mov
imul
lcall
lret
or
js
cwtl
xchg
sti
xchg
movsl
sub
rolb
add
outsl
imul
jp
adc
mov
inc
sub
lea
or
or
imul
push
mov
stos
push
aad
add
jg
mov
xor
xchg
decb
out
pop
mov
sahf
cmp
xor
leave
mov
rolb
adc
push
pop
and
clc
repz
ljmp
inc
push
mov
loop
push
mov
sub
xchg
jge
xlat
fisubrs
push
rorl
bound
outsb
clc
fs
dec
push
inc
dec
shr
inc
xchg
sbb
jnp
popa
loope
ja
xor
cwtl
mov
repz
ret
popf
mov
scas
push
lcall
mov
adc
sub
jecxz
cld
aam
cld
out
add
je
sub
sbb
mov
lds
add
mov
dec
cld
mov
and
aad
mov
mov
fnstsw
es
mov
negl
std
or
ja
pop
stc
cs
jge
test
add
pop
pop
xor
or
mov
mov
add
popa
mov
divb
lods
out
jne
test
int3
mov
test
push
sub
mov
push
jo
decl
cmp
push
jb
jmp
inc
xchg
and
add
mov
mov
in
jp
push
in
jno
les
popf
scas
jle
repnz
fcoml
inc
js
lret
shrb
cmpsl
sbb
fstl
es
out
dec
xchg
mov
push
mov
scas
xor
dec
and
add
ret
jecxz
inc
pop
in
sbb
repnz
pop
push
inc
in
lods
mov
cli
push
mov
ficomps
inc
dec
sahf
adc
xchg
lock
dec
jno
outsb
test
sbb
cmc
push
addr16
jp
xchg
inc
stos
mov
ret
or
movsb
test
and
ja
xchg
cmp
mov
scas
pop
sub
scas
mov
mov
ljmp
cmp
pushl
lea
pushl
xchg
inc
inc
push
pop
call
mov
mov
add
jmp
xor
mov
jne
xor
mov
and
outsl
jge
jle
fs
leave
div
jle
fwait
cmp
addr16
cmpsl
pop
bound
adc
cmc
push
pop
fnstenv
mov
mov
push
xor
fwait
push
push
gs
mov
neg
dec
push
push
std
lahf
hlt
enter
xchg
sub
and
in
pushf
dec
popf
xor
jnp
add
mov
cmp
xchg
js
outsl
negb
pop
cmpsb
mov
adc
int
jns
sbb
ja
xchg
stos
pop
inc
fwait
mov
cmp
dec
bound
mov
mov
aam
loopne
pusha
test
test
xchg
xchg
daa
in
sub
aas
frstor
dec
pop
pop
rolb
add
pushf
imul
sub
add
ja
xor
xor
aaa
sbb
push
subl
mov
out
sbb
ljmp
cmpb
mov
mov
push
jnp
jmp
mov
call
adc
shll
lods
inc
movsb
and
push
push
and
negl
push
outsb
in
add
aaa
mov
add
sbb
pusha
add
cli
addr16
and
in
insb
popf
pusha
mov
or
sub
das
adc
cmc
push
inc
test
and
cld
push
adcl
push
mov
ljmp
dec
push
lcall
push
scas
and
dec
mov
lcall
aas
jo
jg
js
mov
sub
mov
jb
fidivl
jl
push
jne
shrb
lods
jns
and
out
add
push
hlt
loopne
inc
fildl
orl
int3
jo
cwtl
fwait
xchg
fdivrs
jle
push
lret
pop
pop
movsl
adc
into
scas
inc
sbbb
dec
inc
and
movsb
nop
add
clc
mov
insl
cwtl
sahf
icebp
in
dec
clc
shrl
cmc
mov
sbb
pop
arpl
out
aas
jp
in
outsb
test
and
push
pop
out
lock
dec
xlat
nop
ret
or
mov
fneni(8087
jae
stos
jecxz
push
fidivs
pop
in
and
and
xchg
add
cmc
mov
aas
fs
pop
jae
in
mov
jl
das
ja
ds
js
cmp
mov
int
std
cltd
adc
xchg
jns
fldenv
xor
mov
pop
sbb
mov
ljmp
frstor
clc
mov
in
jns
push
and
mov
insl
fwait
adc
dec
jecxz
stos
movsl
fsts
cs
outsl
sbb
lods
cmp
xor
aaa
jp
cltd
jmp
loopne
inc
mov
add
pop
ret
sbb
ss
sub
jae
lods
add
adc
mov
cmpsb
add
pop
icebp
mov
sti
mov
leave
mov
cwtl
sbb
xchg
fisubl
dec
cmp
jno
leave
jge
jecxz
xchg
push
test
pop
jmp
pushf
popa
mov
pop
jmp
or
jbe
mov
es
push
add
pop
fsubrl
xor
ret
ficoms
imul
lds
jl
jmp
out
sub
mov
jno
adc
jb
mov
jl
mov
sub
aas
add
popa
pop
sub
xor
out
cs
std
jge
jb
bound
jo
data16
hlt
sub
cmp
push
clc
aas
jne
iret
sub
js
outsl
mov
aad
lahf
decb
movsw
mov
pop
lcall
pop
leave
ret
push
mov
sub
leave
ret
push
mov
sub
adc
push
mov
mov
and
mov
adcl
mov
xor
movl
movl
movl
andl
mov
inc
mov
cmpl
jne
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
jmp
push
mov
jno
insl
inc
filds
xor
jle
adc
cmp
xchg
popa
testl
into
inc
lret
push
and
adcl
ja
mov
push
sbb
mov
or
repnz
test
sbb
xor
jne
icebp
insl
cmovle
xlat
or
pushf
out
push
mov
mov
cmp
lahf
jno
mov
pop
inc
mov
dec
sub
negb
or
sub
enter
test
outsb
sub
repz
mov
inc
lock
lock
test
adc
jl
cmc
inc
inc
mov
sub
mov
movsb
cltd
pop
push
icebp
add
std
aam
add
popa
insl
add
aas
push
ror
outsb
dec
add
lret
jb
xchg
sub
jo
ds
adc
mov
and
clc
cld
adc
pop
movsl
mov
adcl
ret
cmp
jns
inc
xchg
mov
enter
stos
lret
sub
xlat
jp
push
pop
jno
inc
xchg
or
enter
xchg
jp
lea
lret
dec
test
jl
icebp
or
inc
xchg
cltd
out
cmp
test
aam
dec
mov
rcr
inc
cmp
xor
sbb
inc
mov
aas
rcrb
ds
fldcw
push
and
jle
ror
push
add
xchg
nop
cltd
subl
push
mov
movsb
lret
aas
xchg
icebp
out
mov
jmp
cmpsb
add
jge
lods
in
clc
mov
enter
outsb
jp
pop
ljmp
xorb
popf
out
ret
jno
and
pop
fsubrs
adc
mov
lock
cmpl
sbb
xchg
sarb
fadds
cs
xchg
jb
pop
dec
test
push
cmpl
bnd
test
or
fimuls
and
rolb
add
daa
sub
leave
mov
cmp
or
pop
mov
mov
inc
jbe
jp
int3
stos
arpl
mov
push
clc
sub
sub
testb
push
imul
pop
xchg
stos
pusha
sbb
xchg
addr16
jo
sub
decl
testb
data16
imul
loop
mov
incb
addb
jp
push
imul
and
bound
scas
fdivs
mov
xor
hlt
bound
mov
popa
sbb
lods
xor
sbb
loope
rcrb
mulb
xlat
inc
jbe
and
pop
ficomps
push
xchg
insb
into
mov
cmp
xor
lods
repnz
insl
in
add
mulb
mov
imul
stc
mov
das
pop
jge
inc
lret
cmp
push
outsb
mov
inc
pop
inc
jmp
fucom
add
fldcw
lock
rorb
test
rcrl
add
mov
mov
xor
adcl
mov
mov
adc
add
neg
mov
movl
cmpl
je
cmpl
jne
push
push
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
and
mov
sbb
xor
sbb
add
andl
xor
add
inc
mov
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
movl
movl
xor
movl
movl
sbb
movl
adc
movl
movzwl
and
movl
dec
movl
mov
add
xor
add
mov
add
cmp
movl
je
movl
push
movl
jmp
mov
andl
mov
inc
mov
cmpl
jne
pushl
pushl
pushl
pushl
push
call
cmpl
jne
xor
xor
inc
mov
cmpl
jb
xor
add
add
mov
sub
mov
xor
add
movl
cmp
movl
jb
mov
mov
xor
incl
xor
notl
add
add
adc
imul
mov
mov
sbbl
sub
movl
cmp
movl
ja
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jne
push
push
call
jmp
mov
sbbl
xor
xorl
jmp
cltd
jp
pushf
insl
imul
jmp
sub
xor
jle
jg
jmp
mov
rcrl
cmc
mov
cmp
inc
les
insb
jg
cmp
xorb
jno
stos
cli
stos
jp
enter
cmc
movsb
jle
push
mov
jge
leave
sahf
push
ds
stc
cmp
pop
scas
cmc
inc
or
jbe
ljmp
fldenv
imul
dec
mov
xor
sub
inc
xchg
add
add
cmp
and
pop
mov
xchg
nop
dec
xchg
test
iret
xchg
aam
pop
test
or
sub
mov
ds
sbb
mov
jne
outsb
cmc
int3
lods
movswl
push
dec
das
sbb
fbld
sbbl
inc
stos
cwtl
cltd
cmpsb
and
cmp
xchg
nop
movb
sbb
cmp
jecxz
call
in
lods
in
stos
iret
andl
jecxz
insb
jb
ja
mov
inc
fldcw
inc
pop
adc
dec
inc
xchg
push
test
inc
loop
mov
jl
nop
add
testl
insb
cli
test
mov
fstps
mov
int3
outsb
jne
sub
mov
jecxz
inc
xor
orl
or
push
add
and
push
in
sar
hlt
mov
cmpsb
popf
and
ss
mov
movl
add
mov
iret
int
xchg
ljmp
inc
xor
je
jmp
dec
dec
push
idivb
and
pushf
add
adc
imul
call
jno
and
push
mov
dec
push
sub
lock
mov
lods
and
scas
mull
ret
movsl
sub
nop
movsb
or
lret
loop
jno
aas
negb
inc
je
loop
push
repnz
push
and
mov
aam
mov
dec
mov
movsb
sub
mov
mov
cs
mov
jmp
icebp
push
jnp
push
loopne
push
js
mov
sbb
pop
loope
cld
push
mov
addr16
insb
fdivrs
pop
dec
addl
lcall
cmpsl
xchg
sub
out
or
pop
std
pop
mov
dec
and
pop
sbb
mov
dec
xor
sub
ss
jmp
fbld
cwtl
xchg
lds
pop
rcr
es
addl
mov
cltd
mov
jnp
mov
lret
xchg
insb
iret
aas
mov
mov
popf
jl
pop
cltd
pop
mov
lret
fstl
sbb
icebp
gs
adc
mov
pop
sbb
je
ss
out
jl
shl
mov
loopne
jmp
push
xchg
xor
loop
push
cmp
push
pop
pop
adc
mov
mov
xchg
push
jmp
imul
mov
push
sldt
mov
mov
xor
movzbl
or
xor
andl
xor
add
inc
mov
cmpl
jne
push
push
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
movl
add
add
imul
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
push
pushl
pushl
pushl
push
push
call
cmpl
jb
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
jmp
pop
jne
loope
clc
cmpsb
dec
push
test
jge
jle
mov
mov
out
push
loop
sub
mov
sub
adc
inc
jg
push
add
sbb
xchg
lret
aad
sbb
mov
fwait
cmpsl
cmp
and
sbb
mov
mov
loopne
ss
cmp
dec
stos
xor
jne
fidivl
test
lods
into
inc
fcoms
out
lahf
cld
mov
popa
pushf
fwait
lcall
inc
sbb
loope
out
and
inc
in
mov
adc
ss
or
sbb
dec
stc
faddl
mov
jns
pop
sub
lods
jo
addr16
add
xor
sbb
lods
mov
arpl
cld
xor
mov
sub
fisubrs
cmc
xor
orb
hlt
inc
sub
sbb
arpl
jl
fdivrs
cs
xchg
data16
sbb
mov
sub
jg
push
pop
test
lahf
pop
mov
xor
pop
sbb
rcll
mov
lds
or
mov
rolb
sub
cli
out
mov
ret
mov
cmp
jp
shr
and
xor
xchg
inc
adc
xor
cmp
push
loopne
popa
lock
push
xor
or
insl
adc
loop
out
outsb
lods
pop
loope
mov
add
xchg
imul
mov
mov
mov
push
add
stos
stos
insb
sti
and
fisttpll
dec
add
imul
dec
pop
cmpl
mov
lahf
xchg
sub
xchg
pop
mov
fsubs
lods
cmp
dec
ljmp
mov
lds
mov
or
cmpsl
sbb
packuswb
mov
pop
jle
leave
inc
std
stos
movsb
dec
daa
push
ret
xor
outsl
mov
ret
enter
xchg
je
dec
andb
bnd
daa
or
xor
mov
mov
mov
cwtl
mov
sub
adc
xchg
lods
cli
push
adc
ret
adc
mov
lret
and
mov
mov
sub
push
xchg
or
pop
cltd
testl
and
movsl
ss
aas
jl
ja
push
sub
and
jae
xchg
adc
dec
idivb
add
out
clc
mov
mov
cmpsl
jmp
or
in
and
jae
fists
push
jnp
pusha
push
xor
push
sbb
cwtl
std
push
pushf
mov
cmp
adc
lahf
mov
out
aaa
mov
decl
cld
pop
inc
ljmp
pushf
fdivp
jg
inc
cmc
popa
sbb
xor
ret
popf
test
adc
xchg
or
mov
xchg
adc
shll
sbb
ss
mov
push
jne
test
movsl
mov
div
and
lds
popf
idiv
xlat
lret
js
sbb
lds
mov
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
jmp
push
outsb
adc
pusha
cli
sarb
push
pushf
lods
fwait
push
jle
xor
jle
pop
and
xor
lret
or
dec
jns
and
in
push
and
pop
nop
or
je
jg
push
pop
int3
cmpsl
pop
ja
mov
dec
cmp
into
push
cld
xchg
daa
inc
movsl
and
les
mov
nop
int
jp
mov
cli
outsb
ljmp
lods
jbe
fwait
cmp
cli
jae
jle
cmp
or
mov
enter
vdivsd
sahf
gs
imulb
inc
pushl
test
or
jl
jnp
addr16
fisubs
jbe
iret
pop
and
pop
xor
push
cmp
cwtl
lods
dec
lea
lea
push
ds
insl
dec
add
xchg
push
jl
pop
sub
push
sbb
mov
pop
xchg
lret
mov
sbb
add
jns
aam
push
xchg
loop
imul
sbb
sahf
jmp
or
roll
push
insb
testl
push
xor
aam
daa
xchg
and
orl
push
cltd
cmp
sub
outsl
jne
nop
jl
addl
pop
sub
add
xchg
pop
rclb
and
xor
les
pop
test
orl
add
dec
and
dec
pop
lea
xor
sbb
mov
and
sub
fisubs
pop
repz
out
test
roll
sub
into
pop
pop
shll
pop
sbb
adc
sbb
imul
scas
pop
out
loope
or
fsub
stos
into
lock
ss
jge
and
adc
cld
xchg
daa
jecxz
and
adc
xchg
push
outsl
jecxz,pt
and
add
adc
sub
fidivrs
ss
fadds
sbb
aad
enter
sub
ss
adc
lcall
sub
stos
mov
push
jnp
test
xor
repz
xor
out
pop
in
test
lahf
push
les
loopne
scas
sbb
add
mov
mov
add
xchg
and
in
cmp
pop
dec
ja
xor
push
xchg
xor
fldcw
cmp
sahf
sbb
mov
push
xchg
mov
inc
push
je,pt
push
jno
sub
mov
inc
mov
lds
push
dec
pop
sbb
pusha
push
adc
iret
sti
push
push
mov
repz
and
sbb
adc
mov
lods
notl
add
test
cmp
cmp
orl
pop
repnz
aas
dec
jmp
pusha
in
adc
xlat
cmp
or
dec
add
repnz
stc
andl
cli
sub
sahf
sub
ret
sub
mov
sub
sub
mov
sbb
into
jp
sarl
sub
inc
and
adc
jge
add
andb
dec
dec
aam
sub
jg
stos
push
mov
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
jmp
jmp
xor
les
sub
pop
mov
jle,pt
xor
jle
outsb
sbb
insl
adc
fs
insb
mov
leave
dec
pop
sar
das
test
and
jnp
lods
jo
scas
push
pop
into
sbb
or
loopne
mov
mov
pop
cmp
outsl
fldt
xchg
dec
js
jnp
mov
int3
shr
mov
nop
call
pop
xchg
push
dec
insl
loopne
enter
rol
mov
aas
xor
pop
insb
fisubrs
out
test
aaa
fisubl
imul
scas
call
or
sbb
mov
mov
or
ss
push
jns
insl
pop
jecxz
push
movups
xchg
mov
test
in
aam
dec
mov
addr16
xor
mov
mov
movsb
arpl
dec
jmp
lcall
cwtl
fisubs
pop
test
mov
jle
xor
sub
ss
stos
mov
rcr
lods
and
mov
xchg
pushf
in
shr
lock
sub
loop
lcall
dec
push
xchg
and
nop
xor
mov
scas
adcb
push
jne
int
scas
xchg
dec
mov
push
popf
adc
push
or
pop
dec
mov
cld
xchg
lret
shlb
cmp
adc
xchg
roll
nop
mov
mov
xchg
jecxz
call
cmp
push
push
fdivr
pop
or
fwait
push
js
xor
xlat
mov
imul
or
sbb
gs
lock
pop
adc
lods
xchg
and
or
ffreep
mov
pusha
adc
scas
mov
bound
into
ret
cmp
mov
daa
and
loopne
mov
mov
jae
xchg
jl
subb
lods
in
int
sub
xor
pushf
mov
add
ds
sub
adc
insl
sbb
je
ud1
mov
mov
dec
mov
cmpsb
lahf
pop
pusha
cmc
mov
cmpsb
sub
mov
xor
dec
jbe
push
mov
xor
dec
xchg
dec
cmpl
mov
sti
lds
pop
dec
add
pushf
test
inc
test
xor
mov
xor
xchg
inc
or
push
pop
scas
jmp
rcr
adc
fldt
mov
fistps
fcoms
inc
adc
mov
call
in
jne
jnp
pop
inc
cmc
adc
enter
test
jbe
in
test
jmp
bound
pop
add
shrl
push
add
cld
dec
aad
lahf
or
enter
and
sub
fdivl
sbb
mov
add
cmp
clc
push
rclb
jns
jmp
mov
int
sub
out
mov
dec
es
xchg
rol
cs
lods
push
les
pop
and
cmp
sub
dec
mov
xchg
popf
hlt
and
pop
ret
mov
sub
jae
cmp
mov
jmp
test
jno
ja
shrb
dec
mov
jle
jge
jle
mov
daa
push
sbb
sbb
clc
insb
movl
shlb
inc
repz
and
xchg
fs
ja
pusha
push
mov
adc
insl
and
fldenv
ja
dec
fmuls
xor
popa
cmovs
cltd
cmp
test
repz
je
sbbb
and
mov
cmp
lds
pop
data16
jecxz,pt
push
pop
lret
repz
inc
lcall
aad
pushf
xchg
push
inc
mov
pop
and
jno
test
cmc
fdivrp
stos
ljmp
dec
cli
adc
testl
stos
rol
xor
outsl
cmp
mov
stc
pop
or
add
rolb
mov
xchg
sti
mov
cmpsb
cs
jg
mov
push
sub
aas
mov
cmp
int3
mov
pop
mov
nop
icebp
es
ret
aas
inc
push
roll
inc
push
in
lods
int3
inc
xor
imul
push
outsb
lea
add
pop
scas
pop
incb
popa
insl
cmp
sahf
stos
les
ret
mov
lea
aaa
xchg
aaa
or
cltd
pop
mov
pop
stos
sbb
cmp
jb
xchg
xchg
push
ss
pop
inc
loopne
jecxz
mov
or
jecxz
push
mov
xchg
mov
mov
insl
xchg
push
or
mov
mov
jo
sub
mov
dec
loop
fsts
leave
sub
hlt
mulb
push
sub
test
sahf
in
xor
xchg
or
xorl
repnz
shll
dec
rcl
and
pop
sbb
pop
lea
adc
mov
shll
mov
stos
lods
test
test
xchg
stos
aam
filds
fdivs
cmc
mov
les
dec
popa
cmpsb
add
xor
cmp
mov
andb
bnd
fwait
mov
xor
xor
vfmadd132sd
push
mov
mov
mov
repnz
call
xor
cmc
jle
adcb
sbb
xor
mov
aad
fisttps
addb
fwait
adc
mov
xchg
call
cmp
push
xor
lock
pop
les
cmp
jbe
pop
sub
jmp
jae
inc
mov
xchg
and
add
dec
mov
adc
das
mov
ret
fisubs
xchg
imul
sbb
jg
push
cmp
fs
add
das
adc
out
xlat
in
ljmp
and
insb
add
test
pop
aas
aad
mov
mov
mov
jns
dec
mov
pop
inc
aas
jmp
xchg
mov
rclb
shrb
or
pop
sub
in
stos
int3
xorb
in
lock
mov
jge
cmpsb
adc
icebp
add
notl
mov
jbe
mov
mov
xor
xor
add
add
imul
mov
mov
mov
mov
add
movl
mov
movl
movl
mov
xor
add
jmp
mov
xor
add
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
jmp
pop
xlat
pop
jmp
jae
push
jmp
cmc
pop
mov
cmp
xor
jle
pop
sahf
into
cmp
mov
rcll
in
ss
dec
inc
xor
testb
push
push
or
outsb
addr16
mov
push
negl
jb
and
repnz
xchg
lock
jns
cltd
mov
sbb
mov
mov
cmpb
or
push
xor
into
jmp
mov
shll
pop
sub
fsubl
push
leave
jae
mov
pop
add
mov
cld
sbb
dec
test
js
lods
shl
jge
jne
pop
xchg
xorl
dec
inc
aas
fistpl
lds
dec
mov
pop
push
out
test
lock
lret
sbb
int3
push
shrb
ja
mov
mov
mov
popa
scas
cmova
jp
add
das
xor
negl
pop
cmpsl
mov
add
pop
movsb
pusha
icebp
xchg
or
dec
dec
jle
fs
or
sbb
mov
mov
xchg
js
jl
mov
stos
faddp
jecxz
mov
inc
fcom
stc
adc
cs
xchg
mov
or
mov
mov
sub
test
sub
popf
inc
jl
push
popa
loope
pop
rolb
aaa
sub
and
test
mov
mov
dec
stos
xchg
outsl
movsl
xchg
cmp
xor
fbstp
shll
scas
bound
jno
mov
xchg
and
jp
movsl
jbe
in
int3
icebp
movsl
mov
out
popa
adc
or
mov
stc
push
insb
sarb
mov
cmpsl
insb
loope
jnp
gs
sub
test
fistpll
popa
nop
adc
or
push
jle
adc
mov
dec
mov
pop
mov
shll
xorl
jns
inc
or
mov
fimull
pop
xchg
in
test
lods
xor
stc
pop
enter
xor
sbb
lock
inc
stos
js
jae
sbb
mov
xchg
fnstsw
test
stc
test
add
ljmp
enter
mov
xor
out
cmpsl
pop
rolb
mov
dec
pop
mul
dec
cwtl
jnp
mov
popf
cwtl
nop
jne
mov
lahf
dec
daa
ds
js
or
inc
call
lahf
push
add
scas
icebp
pop
jbe
popf
and
cwtl
and
add
sub
stc
test
je
daa
fwait
nop
popf
insb
arpl
push
shl
cmp
int
sub
mov
scas
xor
add
aas
mov
mov
inc
sbb
fs
fidivl
jne
adc
pop
adc
adcb
dec
lea
jno
jnp
ret
push
push
mov
in
outsb
out
shl
mov
inc
and
xchg
mov
push
lahf
outsb
lods
or
popl
adc
xchg
inc
not
xor
in
xor
pop
in
cld
fdivrl
sbb
jne
jbe
jge
iret
fistps
xchg
xchg
in
mov
mov
ljmp
jge
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
xor
add
imul
mov
xor
sub
mov
mov
xor
add
imul
mov
xor
sub
lea
cmp
jbe
mov
mov
xor
add
imul
mov
xor
add
mov
lea
mov
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
pop
pop
leave
ret
push
mov
push
mov
mov
sub
xor
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
push
call
cmpl
jne
mov
inc
mov
jmp
mov
sbbl
xor
andl
add
movl
mov
movl
mov
movl
mov
push
movl
movl
mov
mov
movl
cmp
movl
je
andl
mov
xor
subl
xor
lea
xor
cmp
jne
jmp
add
mov
xor
add
mov
mov
xor
xor
mov
mov
mov
mov
add
mov
mov
mov
pop
test
jmp
gs
jns
dec
jno
xor
stc
lret
jo
jle
fistpll
fs
ret
dec
ja
cli
ss
mov
inc
popa
clc
pop
mov
jge
fs
popf
and
mov
cmp
clc
popf
sarb
lds
sub
sbb
aaa
jns
lret
jg
push
add
cmp
xlat
fwait
mov
cmp
add
fisubl
jmp
hlt
stc
test
jae
pop
inc
pop
subl
jo
mov
mov
das
mov
ret
adc
mov
mov
dec
in
cmpsl
inc
cmc
pop
adc
jle
cld
in
pop
test
pop
outsb
pop
pop
popa
and
xchg
aaa
ja
aad
in
cwtl
lods
fistl
mov
xlat
adc
cmpsl
outsl
mov
cmp
int3
and
mov
andl
add
inc
imul
cli
sub
dec
jge
jae
xchg
mov
mov
fisttpll
scas
enter
push
push
xor
jns
jle
test
sbb
leave
lock
lock
das
and
adc
push
je
insl
cltd
push
and
out
mov
jge
adc
jp
pop
mov
sbb
lea
xlat
pop
jmp
xchg
adc
sub
cmpsb
cs
jle
cmc
mov
lds
jo
mov
hlt
arpl
mov
mov
outsb
sti
pop
stos
fidivrs
and
adc
aam
outsl
loopne
dec
add
cs
ret
rorl
and
fimuls
std
orb
xor
push
sahf
and
xchg
loopne
sub
inc
cld
sbb
xchg
repnz
or
mov
xchg
cwtl
mov
ljmp
sbb
dec
lock
lret
mov
mov
mov
outsb
adc
test
loopne
cmp
mov
movsl
jnp
push
lods
xchg
pop
hlt
cmp
cmpsl
jns
add
sti
mov
dec
mov
mov
cmp
nop
push
pop
or
mov
movsl
dec
pop
mov
std
sub
adc
mov
dec
rcrb
adc
cmp
mov
mov
clc
dec
lret
das
sbb
stc
fcmovne
cmpsl
ljmp
push
dec
sbb
cmp
orb
cli
xor
pop
je
pushl
pushl
mov
pushl
mov
call
jmp
jmp
push
jo
es
mov
popa
cmp
ret
fistpll
out
add
in
cwtl
in
leave
dec
ss
mov
insb
lcall
stc
fisttps
add
pop
int3
ss
dec
dec
out
xchg
mov
mov
cmp
push
or
mov
jg
stc
cmp
lret
mov
cmp
push
movsl
mov
insl
loop
fsubs
fildl
jp
push
fwait
mov
rcr
in
out
mov
enter
fdivs
fldcw
xchg
adc
test
out
xchg
jae
and
in
stos
fsubs
sbb
test
mov
test
outsl
scas
test
push
call
fisttpll
aad
nop
adc
ficomps
push
cmp
outsb
sub
mov
popf
int3
pop
mov
cs
xor
or
dec
mov
add
daa
pop
fdivr
cwtl
rolb
push
push
cli
lods
inc
inc
or
adc
and
xor
jge
sti
inc
cmp
mov
dec
fwait
das
int3
sub
push
jecxz
aad
dec
ss
push
xchg
int3
shlb
sbb
and
movsb
rorb
outsb
data16
movsb
pushf
jo
lret
sbb
test
push
lods
imul
loope
movsb
add
and
inc
cmp
fnstcw
jp
mov
adc
xchg
mov
pop
pushf
sbb
xor
jae
push
pop
movsb
lcall
fmul
pop
enter
inc
in
xor
pop
adc
inc
leave
mov
xchg
sub
fwait
mov
push
and
cltd
adc
adc
or
outsb
data16
cmp
lods
pop
pop
jg
dec
sub
jl
nop
lcall
xchg
inc
pop
sbb
in
stos
cld
adc
jb
dec
fbstp
hlt
je
movsl
lret
popf
jge
mov
push
lea
lock
lea
xchg
and
inc
mov
jmp
out
scas
nop
insl
and
ret
add
dec
in
addl
nop
in
loop
sbb
xchg
push
cmpsb
mov
inc
insl
and
repnz
repz
movsl
xlat
and
je
sbb
and
out
inc
adc
ret
push
mov
sub
movl
push
call
cmpb
movl
je
andl
xor
jmp
push
addl
call
movl
cmp
movl
jl
add
movl
movl
cmpl
je
cmpl
jne
push
push
call
cmpl
jne
mov
dec
mov
xor
add
dec
mov
jmp
adcl
movl
movl
cmpl
je
cmpl
jne
push
push
push
call
cmpl
jne
xor
or
dec
mov
mov
dec
mov
jmp
sbb
lea
movl
cmpl
je
cmpl
jne
pushl
push
pushl
call
mov
dec
mov
jmp
xor
mov
lea
mov
adc
mov
mov
mov
xor
mov
orl
mov
sub
mov
addl
push
push
sub
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
push
call
cmpl
jne
xor
xor
inc
mov
cmpl
jb
and
xor
sub
push
xor
mov
movl
cmpl
je
cmpl
jne
push
pushl
call
mov
dec
mov
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
andl
mov
inc
mov
cmpl
jne
pushl
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
adc
add
movl
mov
movl
mov
mov
cmp
mov
mov
je
mov
xor
add
imul
mov
jmp
xor
add
mov
mov
xor
add
mov
mov
mov
xor
add
cmp
jne
push
pushl
pushl
call
mov
mov
mov
mov
mov
mov
mov
movl
mov
movl
mov
xor
add
jmp
mov
xor
lea
push
mov
xor
lea
push
mov
pushl
call
mov
xor
lea
mov
mov
xor
xor
add
mov
xor
lea
cmp
jbe
mov
mov
mov
mov
mov
mov
pushl
sub
pushl
xor
mov
pushl
call
sub
xor
mov
mov
mov
xor
add
xor
div
mov
cmp
jne
call
lea
mov
mov
push
add
push
lea
push
call
mov
mov
mov
mov
mov
mov
sub
xor
cmp
je
mov
mov
sub
xor
cmp
jne
mov
add
jmp
mov
xor
add
mov
mov
xor
add
mov
jmp
mov
mov
mov
mov
add
mov
mov
pop
pop
pop
leave
ret
push
mov
push
push
mov
mov
movzwl
mov
jmp
shll
sbb
inc
out
jle
inc
out
mov
push
movsb
sarb
jge
jle
test
subb
push
add
fidivrl
and
ljmp
sahf
stc
xor
and
fidivl
mov
insb
or
sub
frstor
call
lds
cli
add
arpl
mov
mov
adc
sub
or
push
leave
xchg
jge
leave
jno
ljmp
cmc
and
leave
jne
fdivrl
or
dec
and
mov
jae
imul
nop
lds
jecxz
push
jmp
and
mov
popf
aam
andl
pop
sahf
fsubs
mov
sahf
dec
pop
mov
sahf
dec
std
inc
pop
lret
mov
das
adc
dec
pop
mov
push
pop
dec
adc
pushf
aam
pop
lcall
pop
out
mov
push
push
mov
insb
sarl
lret
lret
cmpsb
dec
test
fstp
jle
popf
xor
data16
pop
mov
or
cmp
sub
lret
sbb
subb
notb
inc
xor
and
xchg
movsb
dec
aas
jo
repz
pusha
rorb
fs
xchg
call
jle
std
in
in
stc
mov
xchg
cld
mov
push
sbb
sbb
out
fdivr
jb
data16
out
xchg
icebp
aas
sbb
xorl
inc
sub
test
outsl
add
sub
fwait
mov
cmp
jg
mov
pop
push
mov
jecxz
pop
loop
xlat
int3
mov
jp
mov
mov
leave
cmp
push
leave
push
lcall
rcl
lods
les
xor
jb
lahf
les
and
or
xchg
or
jne
je
fmuls
push
je
sbb
inc
lret
mov
pop
int
cmp
pop
shrl
in
out
inc
fsubl
movsl
mov
scas
dec
pop
dec
icebp
data16
mov
mov
cmp
xchg
cld
in
jl
jo
mov
loope
cmc
dec
out
and
in
push
xchg
push
mov
scas
pushf
pop
xor
mov
sbb
cltd
add
and
inc
adcl
lret
push
subl
jle
xchg
nop
out
lock
vmread
and
adc
sahf
mov
aas
sbb
rclb
faddl
cmpsb
test
adc
les
sbb
sti
xor
dec
leave
bound
xor
and
test
into
and
dec
cmpsb
int3
xchg
shlb
leave
fs
aad
cmpl
andb
pop
push
lods
cmc
inc
xchg
xchg
or
push
scas
fldpi
aaa
ds
fisubs
popf
xchg
in
dec
aad
cmpsl
cltd
aam
xor
xor
lock
cmp
test
sub
loopne
fprem
add
pop
dec
cmp
mov
imul
sbb
sbbl
gs
or
jp
cmp
push
js
mov
pop
xchg
sub
repz
push
mov
adc
je
pop
cmp
add
gs
add
movl
jmp
out
psubd
push
cmc
mov
loop
movsb
dec
inc
pop
push
iret
jle
and
jle
sub
fld
xchg
dec
push
or
shlb
popa
sarl
inc
mov
jp
lock
push
pushf
or
std
aas
cmpsl
jp
rcr
and
mov
push
sbb
jnp
push
pop
push
outsb
sbb
in
mov
add
mov
lahf
pop
jl
adc
add
pop
jl
push
mov
mov
xor
imul
insb
mov
pop
push
adc
jne
mov
movhps
or
outsl
out
mov
fs
lret
mov
fidivrl
in
and
mov
push
fadds
das
lret
rclb
rolb
inc
jb
jae
ret
rcr
adc
push
sub
mov
enter
xorb
mov
cltd
sub
fimull
fisubrl
add
dec
mov
push
xor
or
cmp
jne
sub
enter
adc
xchg
xor
cmpsb
popf
aaa
xchg
cmpsl
adc
push
add
xchg
data16
aad
fsin
cli
and
insb
pop
sub
xchg
xchg
xchg
pop
lds
ds
mov
scas
fwait
das
scas
insl
outsl
frstor
in
adc
lds
add
push
xor
test
adc
inc
push
sbb
xchg
adc
test
fistpl
sbb
or
push
sbb
xor
cmp
push
cmp
or
ja
dec
sub
cmp
shll
stos
xchg
pop
push
lds
mov
or
stc
call
sahf
andb
sbb
inc
add
and
repnz
mov
add
ret
jno
roll
jl
lock
decl
sbb
mov
add
xor
pusha
push
std
nop
cmpsb
lock
mov
cwtl
daa
pop
xlat
enter
jae
fstl
inc
sub
lret
fldl
popa
mov
test
fdivr
inc
inc
jb
dec
scas
in
mov
mov
fistl
xor
lea
mov
scas
clc
loope
test
sbb
sub
outsb
out
push
inc
pop
jns
push
pop
adcb
add
xor
xchg
sbbl
push
outsb
fldenv
adc
push
pop
sbb
push
xchg
popa
jne
adc
cmp
pushf
jl
inc
jb
in
repz
outsl
insl
in
cwtl
dec
add
add
xor
pop
and
cmp
push
int3
push
jp
hlt
inc
mov
and
dec
and
std
pop
and
pop
sbb
lods
ja
cmp
pop
mov
cmp
stos
jl
popf
sbb
push
dec
pop
or
insb
mov
lahf
test
popa
sahf
dec
mov
adc
imul
cmpsl
test
and
pop
imul
push
std
cmp
jne
mov
xor
mov
subl
xor
mov
subl
add
mov
movzwl
andl
not
and
movl
mov
movl
mov
jmp
jmp
dec
sbb
jno
push
cwtl
mov
cmpsb
and
js
jle
and
jle
push
sbb
adc
loopne
jmp
add
sbb
sbb
mov
xor
push
popa
pop
mov
push
cmp
and
mov
mov
sbb
adcb
adc
push
movsb
mull
filds
or
sahf
aaa
pop
adc
pop
fdivl
daa
mov
cmp
inc
and
fsubrs
lret
imul
add
leave
call
scas
lahf
lret
fs
nop
jg
mov
push
je
jno
roll
push
call
emms
ljmp
xchg
xlat
outsl
jb
adc
jl
lods
adc
inc
mov
repnz
inc
das
test
sbb
mov
jbe
mov
mov
cmp
aad
and
ds
rcrl
sbb
and
lods
add
mov
stc
inc
jae
aaa
call
mov
les
add
wrmsr
test
xor
mov
sbb
push
roll
mov
aaa
mov
jo
jp
ret
adc
xor
dec
imul
lcall
sbb
sbb
scas
into
repz
push
jp
movsl
pop
and
inc
ja
fidivl
fcmovnu
insb
mov
adc
insl
cmp
mov
scas
in
pop
lret
sahf
scas
mov
mov
sub
xchg
movsl
sub
rcrb
push
cmp
jl
aam
and
push
cwtl
shrl
repnz
cs
lahf
sub
fs
pusha
cmp
cli
stos
mov
imul
stos
gs
add
xchg
mov
stc
es
sbb
dec
rorl
sub
xchg
aas
test
into
mov
and
mov
and
sahf
out
fimuls
shll
jmp
es
cmp
ret
gs
or
filds
mov
in
mov
jns
stos
mov
mov
das
cltd
cmpsb
fwait
inc
jge
sbb
icebp
mov
xor
dec
hlt
mov
mov
mov
test
aaa
jb
iret
gs
mov
bts
or
loopne
cmp
cmp
sub
sti
mov
jle
cmp
into
and
sbb
mov
sbb
mov
shll
add
ljmp
xor
add
cmpsl
mov
repnz
ljmp
dec
adc
xlat
testb
test
stos
and
sbb
enter
sbb
sti
inc
lea
mov
in
movsb
inc
add
fstpt
push
push
adc
push
fwait
xchg
jp
rcrl
push
out
iret
insb
flds
fldcw
xor
dec
sbbl
jp
pusha
imul
inc
inc
xor
sbb
pop
test
push
sub
xchg
sbb
arpl
add
pop
cmp
mov
cmp
aaa
ffree
je
jne
mov
mov
pushl
call
test
je
leave
ret
push
mov
sub
or
jmp
outsl
cmpsb
insb
inc
jne
jne
push
push
mov
jnp
stos
in
sub
jle
in
jle
xchg
cmp
push
sti
les
jmp
daa
cmpsb
mov
mov
sbb
push
aaa
cmp
or
mov
insl
test
mov
andb
pop
xor
cmpps
cmp
repnz
cli
cmp
hlt
inc
adc
movsl
stos
sub
lret
out
outsl
xlat
adc
xchg
mov
mov
lds
sti
push
add
out
jo
xchg
pop
jg
add
dec
fdivp
dec
in
scas
jnp
idivl
mov
add
cmpsb
inc
pop
test
pop
divb
imul
xor
jne
sub
in
arpl
mov
dec
mov
sahf
jge
stc
inc
out
data16
loop
or
jae
lods
jg
or
js
jns
cltd
inc
roll
insl
addr16
xchg
cld
in
das
daa
xor
call
popf
pusha
sbb
popa
scas
lods
out
mov
insl
js
and
iret
mov
mov
lcall
rcr
cltd
cmp
cmp
mov
shlb
mov
lea
out
sub
es
movsb
imul
or
adcl
lock
mov
cmpsl
lret
out
addb
adcl
clc
xor
inc
in
xor
xchg
add
mov
xor
mov
incl
lea
mov
sbb
mov
mov
push
movzwl
add
mov
lea
mov
mov
and
push
or
push
add
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
mov
movl
jmp
xor
inc
arpl
jae
aas
or
hlt
nop
xlat
jle
in
jle
inc
inc
ret
rsm
add
and
aad
xor
xchg
outsb
pop
les
lods
roll
mov
xchg
pop
jmp
lret
xor
and
push
imul
lret
test
insl
xchg
shrl
lahf
dec
nop
add
loop
jmp
xor
jle
dec
pop
xchg
jl
sbb
rol
mov
xor
cltd
dec
sbb
xchg
cmc
cmp
dec
cmp
push
mov
adc
cli
sbb
or
push
pop
dec
mov
rcrl
sub
jb
adc
xchg
test
inc
vcvtss2sd
orl
sahf
add
mov
jge
rolb
addr16
sub
ret
movsb
mul
lret
jb
pop
sarb
mov
and
jmp
push
push
jbe
scas
dec
icebp
in
movsl
data16
jne
faddl
jne
mov
notb
adc
xor
xchg
das
xorb
push
cld
fidivrl
push
mov
add
lods
ja
cld
add
sub
mov
push
xchg
xor
xchg
xor
lea
push
jge
lods
and
inc
outsb
adc
mov
jb
xchg
sahf
sti
jo
or
fidivrl
dec
and
gs
jg
inc
add
add
mov
addl
xor
xorl
xor
addl
add
add
div
movl
mov
movl
movl
movl
cmp
movl
jmp
or
add
aam
lret
imul
mov
push
aad
jle
jg
jle
pop
fistpll
and
mov
leave
inc
sbb
lods
fnsave
xor
addb
xchg
jae
push
sub
mov
adc
add
rcl
or
inc
int
popa
sahf
sub
orl
orb
mov
sub
xchg
das
sub
outsl
adc
inc
pop
pusha
jno
xchg
xor
pop
mov
ss
push
aas
aam
mov
cmp
xor
push
scas
push
dec
inc
mov
mov
mov
jbe
xor
imul
jecxz
mov
mov
push
push
ss
out
mov
lds
icebp
aad
mov
in
js
repz
inc
test
lods
sti
mov
pusha
cmp
pop
sub
dec
les
add
sbb
aam
mov
push
clc
out
daa
mov
fldt
jp
mov
pop
inc
ljmp
jbe
sbb
mov
adc
mov
push
add
das
sbb
test
je
adc
movsl
xchg
xchg
ret
xor
mov
fistps
stc
in
mov
push
movsb
test
jmp
xor
xor
movsb
push
or
scas
test
and
lret
jp
popf
cli
das
cwtl
addb
lds
push
dec
jmp
push
ja
je
neg
movl
lea
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
mov
and
mov
inc
mov
imul
mov
mov
movl
cmp
je
sub
mov
sbb
orl
andl
mov
inc
mov
cmpl
jne
pushl
push
pushl
call
cmpl
jb
jmp
xor
xor
outsb
fucomi
rcl
mov
in
sarb
in
jle
enter
sub
cld
or
push
mov
adc
mov
out
dec
push
sbb
push
and
mov
ss
imul
inc
sbbl
jg
fmull
xor
mov
add
pop
loop
sub
enter
lcall
jecxz
pop
sub
or
mov
xchg
in
fidivrs
sti
out
les
inc
or
adc
jbe
push
andb
pushf
ja
inc
cmpsb
sbbl
push
lret
cltd
es
xor
mov
fimuls
mov
mov
adc
js
sub
aam
cs
imul
push
cwtl
mov
inc
pop
sub
out
arpl
je
mov
adc
xor
cmpl
xchg
cmp
iret
outsb
pop
jg
mov
ljmp
mov
mov
xor
int
jge
mov
add
dec
sub
push
add
out
into
mov
dec
ret
jl
loop
or
mov
push
ficomps
push
adc
jae
pop
pop
fs
adc
repz
sub
out
sbb
push
ret
push
dec
jo
cmp
enter
and
inc
clc
xor
add
jmp
adc
test
or
push
pop
dec
push
sarl
in
jle
pop
aas
repnz
add
fadds
pop
sahf
cmp
lret
xchg
and
daa
push
pop
and
je
idivl
aaa
ds
gs
test
adc
xor
cmpsb
mov
mov
xor
inc
loop
xchg
adc
jmp
dec
arpl
fsubl
and
or
sti
std
jo
in
aaa
imul
cwtl
mov
dec
dec
sti
pop
in
jg
loopne
lfs
bound
loope
rol
fnstenv
fwait
ret
jp
mov
lret
xor
fcompl
clc
and
popa
mov
outsl
pop
pop
and
mov
shlb
int3
and
cmp
xchg
rclb
fimull
lret
add
and
add
pop
jbe
push
in
std
das
arpl
xchg
inc
or
rorb
adc
test
push
int
ljmp
push
or
or
inc
cmp
mov
scas
sbb
mov
test
jge
xor
repnz
xchg
add
imul
mov
xchg
xor
push
mov
mov
sub
jp
xchg
faddl
cs
dec
adcb
out
push
fsubs
popf
cmp
mov
jae
pop
pop
leave
ret
mov
add
cmp
je
mov
andl
jmp
mov
mov
or
cmp
je
mov
xorl
jmp
mov
jmp
test
loope
jno
jmp
sti
aas
cmp
jle
in
jle
jbe
mov
sbb
es
je
inc
shlb
add
pop
jnp
adc
pop
mov
nop
inc
ret
jp
rep
test
jle
mov
adc
rolb
and
and
or
xchg
inc
iret
call
rorb
or
inc
into
or
adc
aam
push
jb
movb
cmp
mov
add
rol
lods
addb
adc
xor
dec
sub
test
push
and
scas
test
or
into
mov
sarb
push
lcall
popa
push
pop
xor
cmp
mov
xchg
loope
push
popa
aam
sub
insb
sbb
jl
pop
and
insb
and
in
and
es
cmc
imul
outsb
popf
adc
repz
add
pop
sahf
mov
push
icebp
mulb
lcall
mov
sbb
stos
shrb
ja
clc
mov
xor
fsubrs
add
mov
mov
xchg
fdivl
out
cmp
jecxz
ret
sub
test
cmp
or
js
les
in
jae
adc
adc
xchg
mov
xor
mov
add
cmp
je
mov
xor
add
mov
mov
mov
mov
xor
add
movzwl
mov
xor
lea
add
mov
mov
mov
xor
jmp
push
adcb
sub
jmp
and
lcall
jg
jle
push
out
js
sub
dec
aad
fwait
xchg
test
adc
dec
add
insl
inc
and
jns
mov
xor
sbbl
xchg
cmp
xor
sbb
fs
je
dec
cwtl
push
out
repz
stos
and
shrb
push
js
fs
mov
lds
data16
ret
jno
lahf
cmp
rcrl
xor
adc
adc
test
into
xchg
rol
push
cmpsl
sahf
cmc
out
xchg
filds
es
sahf
stos
add
aas
pop
xor
mov
sbb
sti
and
mov
push
fbld
adc
insl
mov
shl
testb
fsubl
stos
cmp
mov
scas
jbe
loopne
scas
mov
pusha
and
enter
push
or
les
dec
test
aam
outsl
jle
mov
dec
je
leave
lock
sti
or
imull
sti
jp
jo
cmp
pop
lds
xchg
aad
notb
outsl
pop
lods
stos
movsb
call
das
or
mov
or
je
sbb
clc
mov
jmp
mov
or
leave
xchg
lahf
cmp
std
pop
scas
scas
cmpsl
dec
icebp
or
in
movsl
xlat
cwtl
dec
loop
add
imul
sub
mov
jmp
mov
mov
jmp
test
stc
test
sbb
push
add
pop
adc
jle
in
jle
fistps
cltd
fsubrs
xchg
mov
mov
inc
pop
out
adc
aam
imul
xchg
dec
mov
jle
test
jae
and
int
add
xchg
xor
sbb
popa
int3
push
mov
jge
idivb
mov
xchg
mov
ss
or
stos
mov
xor
or
jbe
aaa
es
sbb
shrl
pop
stc
mov
fstps
jno
mov
daa
jne
loopne
pop
stc
je
sbb
xchg
xchg
movsb
int
loop
fldl
data16
fcompl
repnz
stos
es
idivb
sarl
or
xchg
cmp
fisttps
pop
pop
xchg
mov
je
xchg
lea
fisttpll
sub
and
mov
in
pop
jb
pop
cmp
mov
and
int
sbb
ja
dec
js
mov
cmp
push
icebp
cmpsl
insl
dec
and
pop
mov
cmp
mov
fcomi
subl
scas
cmp
stc
xlat
push
xlat
or
stos
sbbl
adc
mov
dec
outsb
std
repz
adc
xchg
add
jecxz
dec
stos
cmp
xor
cmp
je
mov
addl
jmp
mov
jmp
xor
xchg
xor
jmp
cli
fnstsw
in
jle
movsb
mov
xor
sbb
jp
clc
add
fldl2t
xchg
hlt
push
pop
leave
ljmp
push
mov
imull
dec
cld
test
pop
xlat
cmp
enter
ja
pushf
adc
push
in
push
xcrypt-ctr
cmpsl
pop
sbb
addl
loope
ficomps
mov
addb
or
fs
out
add
pop
sbb
mov
fstl
rorb
js
pop
shr
cli
dec
and
jb
dec
adc
lds
aas
sahf
xchg
arpl
popa
popf
dec
xchg
inc
and
push
sti
test
imul
lret
fistl
lock
jle
add
arpl
outsb
add
rorl
add
inc
cmpsb
in
adc
es
pusha
and
shll
in
into
adc
or
add
xchg
inc
into
push
pop
push
je
int
push
jb
test
dec
inc
inc
push
pop
xor
push
mov
sub
cmp
int3
push
mov
push
jno
in
pop
pop
jns
out
mov
jge
iret
jmp
mov
adc
dec
imul
mov
fsubrs
and
sbb
call
pop
ret
test
sarl
dec
pop
dec
aas
cwtl
cmp
pop
rcr
mov
stos
xchg
xchg
daa
mov
cmp
je
mov
jmp
push
mov
sub
sub
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
call
jmp
mov
mov
andl
mov
inc
mov
cmpl
jne
push
push
push
pushl
call
cmpl
jb
mov
and
mov
sbbl
push
xorl
push
mov
mov
sub
or
mov
xor
adcl
push
mov
and
add
mov
or
lea
mov
mov
mov
xor
sbb
add
movl
cmpl
je
cmpl
jne
push
push
pushl
call
mov
dec
mov
jmp
mov
negl
jmp
add
jmp
mov
ret
sub
fidivrl
jp
jle
mov
mov
test
enter
and
dec
push
sbb
mov
sub
jnp
adc
fisttpll
jns
push
aad
and
mov
leave
dec
cmp
cli
push
mov
loope
push
repnz
in
jl
jecxz
sahf
pop
aam
jns
push
xchg
loope
daa
push
outsb
into
addl
cmpl
pop
stc
pusha
cmp
mov
in
stos
je
adc
shlb
inc
sbb
rolb
cmp
dec
pusha
push
add
es
adc
xchg
movsl
inc
xchg
lret
divb
movsb
mov
cli
dec
out
insl
and
je
ret
jno
xchg
lds
mov
test
inc
cs
jae
or
lods
push
push
lock
jne
cmp
mov
test
out
add
and
adc
pop
nop
decl
gs
pop
jl
ret
jnp
adc
fsubl
xor
scas
adc
outsl
sti
add
sti
push
and
fdivr
push
stos
mov
insl
les
push
into
pop
dec
or
aad
push
jns
fwait
call
lds
daa
jecxz
add
or
popl
mov
xor
pop
test
xchg
adc
movsl
inc
push
nop
xchg
or
or
leave
icebp
or
ret
cli
in
mov
aad
pop
mov
mov
xchg
push
cltd
pop
and
xor
in
popl
pop
mov
push
test
cli
aaa
mov
loopne
pop
rorl
adc
and
mov
jns
test
fwait
and
add
push
out
fcomps
sti
pop
repnz
shrl
jb
mov
sbb
inc
addr16
or
xchg
pop
push
add
adc
adc
inc
push
stos
inc
in
jl
mov
cmp
aas
push
in
fstl
int3
mov
push
jb
lahf
add
sbb
sbb
cmp
cmp
insl
dec
xor
rolb
push
jae
mov
adc
jg
ret
repz
push
push
dec
addr16
jbe
test
rcr
adc
lret
cmp
mov
bound
push
lret
stos
into
pop
adc
pop
mov
jp
test
out
ja
fnsave
fidivrs
xor
cmp
sbb
xor
sbb
or
jne
scas
mov
push
bound
clc
dec
data16
jnp
or
sub
popa
xchg
test
leave
test
cmpl
pop
inc
sub
mov
sbb
inc
lock
lods
fadds
js
xor
inc
movl
andl
xor
add
inc
mov
cmpl
jne
push
pushl
pushl
push
pushl
push
call
cmpl
jb
sub
lea
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
sbb
mov
xor
and
add
sub
mov
or
mov
mov
mov
xorl
mov
andl
mov
jmp
jge
mov
mov
ds
adc
jle
jge
jle
jecxz
lods
shll
out
or
int
hlt
mov
repz
es
nop
push
sub
fcoms
movsb
adc
outsb
es
cs
mov
and
mov
fst
cltd
inc
adc
ljmp
ss
les
mov
xor
cmp
mov
outsb
mov
xor
sub
je
cmp
or
push
repnz
fldcw
nop
cli
in
enter
jno
mov
enter
sbb
push
adc
es
lea
cs
in
pop
push
xor
lret
insb
shl
push
mov
push
aam
ja
lock
or
push
xchg
xor
out
fisttps
test
push
ret
jmp
add
pop
inc
fldt
jno
jg
cli
popa
mov
popf
sbb
dec
pop
fwait
xchg
adc
ja
mov
cmp
add
leave
fcomps
fwait
adc
leave
js
push
int3
imul
pop
bound
xchg
and
loopne
and
jle
jae
jne
shll
mov
xchg
mov
and
cli
adcl
sbb
pop
pop
stc
mov
or
int
xor
sub
cmp
and
add
mov
adc
lock
pop
pushf
mov
movsb
dec
fs
mov
repnz
or
dec
mov
mov
shll
int
sub
cmp
jp
jmp
imul
push
pop
in
adc
mov
mov
mov
pop
out
sbb
xor
dec
clc
lret
xchg
in
dec
sbb
push
popf
adc
cmpsl
aaa
not
and
jge
inc
cmp
aad
dec
popa
cmp
pusha
adc
iret
out
dec
jle
inc
loopne
jg
test
pop
push
jl
fcomp
idivb
or
cli
add
mov
add
std
imul
cli
cmpsl
lods
loope
outsl
lret
iret
cmc
psubq
push
loop
insb
mov
stos
or
fcoms
pop
sti
pop
lods
insl
and
sub
mov
out
xchg
fildl
daa
xor
nop
mov
xor
push
lods
push
cmc
sbb
fs
gs
adc
enter
inc
mov
inc
fxch
push
lcall
mov
icebp
test
ret
shrl
fistpll
cmpsl
popa
mov
ficompl
lods
insb
subb
mov
sbb
sub
fadds
std
inc
outsl
sbb
jno
mov
sbb
pop
scas
movl
inc
ljmp
sbb
and
add
or
sbb
mov
and
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
call
cmpl
jb
movl
cmpl
je
cmpl
jne
push
pushl
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
xor
add
cmp
jmp
cmovbe
je
dec
cmc
fnstsw
in
jle
jge
jle
xchg
insl
stos
push
mov
inc
loope
jecxz
lock
mov
jge
inc
add
bound
pop
rcrb
test
icebp
dec
push
cli
andl
jge
js
add
scas
mov
in
ljmp
mov
mov
insl
xor
cs
xor
loopne
in
insl
lods
les
pop
xorb
dec
ret
fwait
and
clc
mov
jnp,pn
adc
std
je
dec
mov
pop
pop
insl
imul
pushl
daa
and
popf
adc
pop
xchg
lea
leave
out
fmulp
in
cltd
aaa
jns
mov
mov
sti
sub
pop
cld
or
and
mov
andb
add
inc
and
mov
ds
or
shl
fs
insb
push
mov
mull
pusha
sbb
cs
xor
repnz
sbb
sbb
out
inc
mov
shl
pop
shlb
or
ret
xor
gs
or
xor
jg
in
and
adc
xchg
mov
cmpl
into
mov
loop
icebp
adc
dec
ret
lahf
pop
add
xchg
test
leave
mov
cmp
cltd
and
push
test
or
add
int3
ret
xlat
push
mov
cmp
out
data16
dec
imulb
insl
push
lods
xchg
aaa
jg
xchg
add
xor
mov
insl
sar
ss
or
roll
gs
out
xor
mov
stos
cmp
adc
or
or
cwtl
add
jns
inc
fsubrs
cld
mov
out
push
addl
cmpsb
movsb
sahf
sub
jg
dec
push
sub
mov
pusha
sbb
xchg
icebp
and
bound
pop
cwtl
arpl
xchg
xor
nop
hlt
mov
mov
jbe
mov
and
cmp
sbb
jecxz
pusha
adc
loop
bound
stc
mov
cmp
out
insl
les
mov
ja
push
call
loopne
cmp
or
movsl
cli
icebp
mov
inc
xor
push
jae
imul
enter
in
mov
imul
int
rcll
repnz
or
lret
push
test
lahf
adc
xor
dec
mov
aam
inc
sbb
cmp
pop
pop
inc
add
push
fidivl
jge
loop
xchg
imul
lds
je
push
sahf
fimull
mov
int
mov
and
int3
clc
int3
and
shlb
enter
stos
push
inc
jne
mov
mov
xor
add
cmp
jne
mov
jmp
inc
aad
shlb
push
out
push
stc
stos
scas
pop
jnp
jecxz
jle
jge
jle
testb
and
lret
push
dec
nop
mov
cmp
cli
js
inc
mov
adc
pusha
sbb
dec
mov
push
sub
xchg
sub
loopne
xor
movsb
dec
mov
pop
popa
pop
mov
add
aas
fwait
insb
int
xor
call
test
jl
add
add
dec
mov
into
in
jnp
insb
popa
push
mov
mov
mov
lock
jmp
sahf
cmpsl
jge
mov
pop
pusha
loope
lea
adc
int3
push
mov
cmp
in
xchg
data16
adc
pop
lock
pop
lahf
add
fildl
and
insl
inc
jnp
andl
daa
or
fimuls
inc
sbbb
pop
push
pop
dec
pop
mov
ret
flds
dec
add
sub
ljmp
aaa
rcr
adc
aad
xor
test
mov
movb
pand
adc
adc
inc
pop
or
adcb
cmpsl
or
and
mov
sbb
xchg
push
cmp
sub
jmp
outsb
push
push
xor
jno
cmp
xchg
mov
xchg
fildll
add
incb
or
lds
push
pop
xchg
and
xor
and
mov
adc
lods
xchg
test
hlt
cmp
loopne
cli
test
in
pop
or
das
or
outsb
and
ja
insb
shrl
dec
xlat
xchg
sti
icebp
bound
popl
jecxz
jecxz,pn
dec
or
jge
add
push
ja
mov
adc
fidivs
ljmp
jb
mov
push
push
push
daa
push
cli
cmpsb
cmp
loopne
sbb
popa
add
loope
aad
mov
pushf
mov
mov
int3
dec
daa
mov
pop
loopne
adc
or
xchg
popf
pushf
push
mov
test
or
or
cmp
inc
sahf
adc
inc
jmp
dec
addr16
jno
mov
pop
daa
int3
enter
popa
add
pop
test
in
pop
ror
mov
int
xchg
out
jb
ljmp
xchg
ret
add
adc
sbb
rcrb
ljmp
cltd
and
jmp
fidivs
push
sub
push
xchg
stos
movsb
repnz
jo
adc
mov
call
or
jbe
mov
ret
setl
xchg
stos
push
sub
lahf
and
sbb
pop
sub
imul
clc
pop
mov
and
sbb
pop
jnp
je
fildl
ljmp
stc
std
out
mov
arpl
fistl
push
mov
dec
lock
add
mov
mov
mov
jmp
enter
enter
sbb
mull
xlat
iret
dec
jo
jle
jp
jle
jl
jmp
jo
sub
xor
mov
or
sbb
sarb
popa
dec
imul
push
or
lahf
dec
in
and
jge
les
jle
inc
lahf
mov
ljmp
mov
jb
cmp
inc
fs
and
or
push
jne
push
in
cmp
and
fildl
cmpsb
daa
ret
add
fsubrs
aaa
mov
cli
dec
xor
pop
add
arpl
fnstcw
scas
sbb
insl
cmp
pop
push
test
push
dec
fildll
sub
das
imul
test
repnz
fisttpll
jnp
std
jle
js
mov
dec
jl
lahf
adc
mov
push
mov
stc
ja
jp
test
mov
xor
imul
xchg
cmpsb
inc
and
cmpsb
insb
pusha
jo
in
or
mov
pushf
fstl
mov
adc
outsb
or
sbb
nop
stc
mov
cmp
aam
call
jae
sbb
push
sahf
pop
leave
testb
pop
lds
mov
sub
and
push
lret
adc
fwait
mov
inc
mov
sbb
inc
push
hlt
frstor
xor
xchg
mov
fucomip
push
xchg
or
lret
add
push
stos
loop
push
sbb
in
pop
xorl
in
push
movsl
mov
nop
push
mov
aas
jne
mov
fnsave
fs
jb
ja
dec
sub
fsubrl
and
hlt
mov
add
les
repz
bound
jnp
pusha
loopne
testl
dec
xor
mov
mov
outsl
cs
aam
push
adc
xchg
fsubs
dec
inc
jns
cld
mov
adc
cmpb
jno
cltd
gs
cmc
fdivl
jle
pop
inc
sub
cmp
dec
hlt
xchg
push
xchg
dec
movsl
mov
jb
ja
iret
outsl
xor
fdivrl
pop
jp
adc
mov
pop
jge
inc
add
xor
adc
iret
idivl
cmp
in
std
cmp
mov
jns
lods
jno
cmc
fwait
scas
sahf
iret
push
inc
aas
add
jmp
test
pushf
test
mov
and
pop
daa
push
push
je
xchg
xor
inc
subb
pop
mov
inc
or
and
mov
sar
push
insb
xor
push
cltd
adc
mov
in
mov
lret
fsubl
loop
or
push
pushf
inc
into
fdivrl
out
pop
adc
movsb
jg
iret
jo
insl
sub
cmp
loopne
cmp
pop
pop
pop
jecxz
inc
lock
int
xchg
fdivl
clc
fiaddl
xor
int
sub
add
mov
mov
mov
movzwl
add
mov
mov
mov
xor
add
xor
sub
mov
movzwl
sub
cmp
mov
movzwl
jg
xor
sub
sub
mov
jmp
xor
lea
mov
mov
cmp
je
mov
movl
jmp
mov
mov
xor
jmp
lret
out
icebp
jmp
inc
popf
popa
cmp
fistpll
jle
jge
jle
repnz
movsl
push
leave
push
pop
jb
inc
jne
stos
sub
imul
jb
pop
inc
mov
dec
gs
push
ja
xchg
cmpsl
test
sub
dec
repnz
aas
adc
pushf
arpl
mov
mov
popa
push
xor
mov
xchg
std
or
cld
out
das
xor
data16
fdivrs
dec
sbb
push
push
aam
shll
test
mov
xchg
rorb
jmp
mov
pop
lret
lds
pop
in
inc
and
sbb
pop
jbe
pop
sbb
cli
shlb
inc
xor
sbb
arpl
dec
flds
cmp
xchg
mov
dec
adc
jecxz
mov
out
cmpsl
or
add
aad
mov
ret
shrl
lcall
or
mov
fdivrs
addl
movsl
lods
or
xor
add
or
mov
push
pop
daa
mov
mov
push
cmc
nop
out
inc
repnz
fiaddl
adc
dec
push
add
pop
jl
cmp
insl
sub
xchg
cmp
dec
xor
andb
or
cmpb
mov
dec
push
loop
sbb
stc
pop
cld
and
xchg
outsb
add
xor
cli
popa
dec
in
xchg
push
sahf
out
push
cli
cmp
fwait
push
cmp
stos
xor
cmpsl
imul
sti
add
mov
mov
mov
outsb
cltd
push
adc
mov
sub
or
int3
add
add
sti
in
add
inc
loop
mov
je
xchg
adc
cmc
or
mov
ds
and
inc
orl
stos
xor
aaa
inc
repnz
jge
stos
push
dec
ret
ja
or
ret
sbb
inc
mov
xor
push
cmpsb
jnp
dec
das
iret
cmpsb
push
mov
inc
ss
fucomp
xchg
sbb
ret
add
jns
inc
mov
adc
fnstenv
popf
mov
push
pop
stos
hlt
adcb
mov
shll
mov
add
das
mov
icebp
mov
xlat
jnp
in
xchg
repz
xor
movsb
xlat
sbb
cltd
or
pop
push
sbb
xor
pop
adc
mov
pop
cli
cmp
repnz
xadd
mov
lea
bound
or
xchg
out
call
pop
clc
cmp
mov
xor
mov
xor
jnp
mov
cmp
out
adcl
sub
leave
jno
insl
insl
fyl2x
icebp
push
xor
jnp
cld
fwait
and
fsubs
insl
xchg
add
out
push
jo
std
out
push
mov
stos
shrl
xchg
add
jmp
in
notb
sub
movsl
lods
adc
jle
jp
jle
sbb
out
mov
dec
fistps
xchg
jnp
mov
ja
sbbb
in
lds
pop
ret
rcll
mov
or
xchg
xor
lcall
jo
mull
add
adc
out
shrb
dec
nop
lea
adc
mov
insb
mov
sar
add
adc
cwtl
ret
jne
or
js
dec
in
xchg
xlat
icebp
dec
add
flds
push
lcall
addr16
fistl
xchg
stos
jbe
sahf
gs
push
fstl
stos
jle
push
pop
jbe
imul
fmull
outsb
push
mov
aam
cmpsb
jbe
sarl
push
test
inc
mov
or
cmc
mov
stos
std
pop
mov
push
icebp
imul
jbe
sahf
xor
inc
adc
adc
jmp
xchg
mov
mov
sbb
stos
push
popl
daa
xor
pop
fildl
repnz
ja
xor
or
mov
bnd
and
dec
out
xor
fildll
sar
mov
mov
push
cltd
dec
push
sub
mov
xor
shl
push
fwait
jae
fcoml
ret
incb
sbb
addr16
nop
mov
dec
mov
jno
or
aas
rolb
gs
out
adc
shlb
js
pop
cmp
gs
dec
lea
add
or
fmull
pop
pop
cmp
shll
adcl
mov
movsl
mov
fdivs
icebp
scas
jge
inc
adc
pop
inc
push
xchg
adc
mov
mov
sub
mov
add
fmul
dec
mov
inc
stos
dec
loopne
push
push
cmp
add
xchg
mov
lret
hlt
adc
push
ret
jne
xorb
xchg
jl
mov
fildll
loope
stos
inc
xchg
lcall
or
push
hlt
mov
addr16
call
arpl
pop
add
add
clc
clc
bound
jge
jg
aam
jb
sbb
adc
jne
dec
push
mov
cmp
ja
dec
xchg
inc
inc
jmp
and
push
mov
cld
cmp
in
push
xchg
xchg
cli
fs
mov
jecxz
xchg
in
testl
shlb
push
repz
int
stos
and
hlt
icebp
add
mov
scas
shrl
lea
lcall
fdivl
sti
xchg
or
stos
dec
pop
dec
cmp
test
xchg
clc
sarl
sbb
rcr
and
ja
aad
int3
sbb
xchg
sahf
sarl
leave
pop
sahf
pop
push
out
out
push
aaa
pop
dec
jmp
adc
loope
imul
add
test
adc
add
clc
mov
mov
lea
jmp
dec
mov
pop
jno
nop
lret
add
lea
add
jle
jp
jle
xchg
cli
jae
sub
fcmovne
js
cmp
mov
repz
int
mov
xor
add
mov
mov
pop
and
movsl
adc
lea
into
flds
in
push
xchg
mov
insb
sub
push
push
mov
mov
movsl
adc
loopne
xor
test
fnstcw
gs
or
mov
fdivs
divl
cs
mov
scas
add
lock
pop
sbb
loopne
push
mov
testl
cmp
movsl
fisttps
outsb
movsl
outsl
mov
movsl
xchg
fwait
pop
add
mov
cmp
mov
add
or
xor
sbb
in
js
pusha
add
dec
call
dec
and
or
adc
orb
fbld
sub
jne
int
push
stc
out
pop
or
push
push
stos
insl
fisubrl
pop
mov
push
adc
add
cs
in
hlt
test
into
ss
mov
aas
mov
cmpsb
cmp
jo
fwait
mov
pop
stos
fsts
out
faddl
scas
inc
cmp
cmp
shlb
adc
mov
push
std
imul
sbb
or
mov
xor
inc
inc
enter
test
cmp
adc
movsw
and
sub
sub
fisttpl
mov
loopne
aaa
and
mov
inc
sbbb
mov
add
or
mov
xchg
mov
gs
sub
addb
mov
mov
xor
stos
test
sbb
mov
and
fadd
push
push
icebp
enter
insb
leave
jne
push
mov
sbb
cmp
out
mov
adc
jb
xor
lds
jb
shll
jmp
popf
pop
lret
mov
sbb
mov
scas
lret
jne
add
mov
clc
jae
sub
test
add
and
xchg
ss
in
and
mov
dec
scas
inc
rorl
jno
in
es
xchg
mov
add
mov
xor
lret
jbe
mov
scas
sbb
fsubrs
jne
pop
xor
pusha
ja
pop
repz
sbbb
es
sbb
mov
in
aad
adc
or
iret
jp
mov
xchg
inc
into
idivl
dec
push
mov
les
mov
push
scas
xor
fsubr
popf
or
jns
push
enter
jle
insb
fcmovnu
sub
pop
mov
jnp
jno
add
mov
test
imul
pop
das
inc
add
xor
flds
rorl
add
mov
mov
xor
add
mov
mov
mov
xor
add
cmp
je
mov
mov
add
mov
jmp
adc
inc
sahf
popa
scas
icebp
jno
ficomps
inc
add
jle
jp
jle
test
adc
dec
loopne
out
xlat
push
in
xchg
int
clc
push
test
lcall
cmc
jecxz
stos
js
std
sub
imul
push
mov
push
idivb
inc
xor
sbb
push
imul
and
call
pushl
scas
cmc
das
shrl
int
cmp
sub
iret
lods
sub
or
xchg
add
data16
adc
and
fmuls
popa
mov
dec
mov
popa
mov
cmp
cmpsl
mov
mov
jbe
js
dec
and
ljmp
sahf
inc
mov
cmp
lea
fwait
loop
hlt
arpl
push
xchg
repnz
xchg
and
aaa
add
or
js
in
cwtl
or
push
cltd
mov
push
adc
and
sti
mov
xlat
add
jno
push
bound
pop
cmc
mov
in
sbb
add
cmp
or
jecxz
add
push
ljmp
push
insl
shrl
aaa
push
popa
orl
fcomi
mov
int3
cld
cmpsb
xchg
or
xchg
int
mov
daa
push
inc
cmpsl
in
fcompl
pop
dec
loope
inc
flds
stos
rorb
cmp
lahf
je
inc
dec
fcomps
sub
mov
sub
jns
pop
sarb
divl
push
scas
sbb
notb
stos
mov
mov
mov
shll
add
addr16
rcr
add
sbb
dec
testb
mov
bnd
rcrl
and
push
mov
lds
pop
mov
aad
popa
push
sti
daa
aad
pushf
insl
or
jmp
and
jg
out
call
rorb
xchg
mov
lods
fwait
sti
sbb
pop
sub
pop
sub
xchg
scas
dec
je
movsl
test
sbb
fildll
stos
stc
shll
inc
test
pushf
mov
mov
mov
sti
jne
mov
inc
pop
lea
cmp
pop
mov
aas
push
push
outsl
and
fildl
inc
popf
sarb
jo
in
mov
mov
fstl
mov
mov
adc
add
pop
inc
sbb
fldt
lret
mov
mov
ljmp
out
out
js
xchg
jl
loop
mov
fs
daa
sub
mov
xor
jno
jge
xor
add
lds
movsb
pusha
or
lret
orb
jle
jo
fmuls
push
mov
int
mov
test
jle
mov
cmpsl
push
fiadds
lea
lret
jp
inc
loopne
dec
clc
mov
mov
mov
add
xor
cmp
je
jmp
sarl
mov
mov
shrl
fsubrs
enter
or
jle
jp
jle
fsts
mov
movsl
dec
xchg
sub
lea
test
and
mov
aad
daa
insl
sub
mov
cmp
lods
mov
lods
ror
pop
pop
in
xchg
sarl
mov
aas
fsubs
or
xchg
sub
mov
or
cmp
jg
loope
mov
fldcw
ljmp
jmp
sbb
sub
xor
add
xor
fsts
ss
mov
or
add
mov
roll
xchg
enter
jmp
push
mov
cmp
int3
aaa
in
aaa
adc
pop
xor
push
lock
mov
in
sahf
ljmp
inc
mov
enter
ud0
ret
sub
xlat
xchg
sbb
pusha
jp
and
sbbb
das
test
test
into
pop
fidivl
andl
mov
mov
sbb
ds
xor
hlt
adc
cmp
and
cltd
or
mov
fsub
push
push
or
push
and
xchg
and
or
pop
jae
test
mov
lcall
jne
insb
inc
popf
cmpsb
sar
outsb
or
out
inc
mov
shlb
cltd
leave
or
sub
jb
fwait
aad
mov
popa
push
lea
push
imul
mov
sbb
bound
dec
into
movsl
loopne
add
jmp
mul
test
jns
push
idivl
add
push
lods
pause
ret
cmp
ds
out
ret
pop
imul
je,pn
jge
xchg
hlt
adc
add
in
push
cwtl
mov
jl
xor
sub
mov
ret
imul
lret
gs
in
icebp
mov
cmp
daa
mov
and
imul
xlat
cmpb
xor
dec
dec
xor
inc
aam
shl
mov
aad
std
outsb
jne
decl
xchg
into
clc
mov
call
jne
xchg
fwait
leave
ljmp
loopne
lods
dec
bound
aaa
add
adc
aam
xlat
loop
mov
add
inc
fistpll
mov
dec
fwait
loopne
inc
add
mov
popa
cld
out
adc
cmpsb
std
flds
enter
fldl
cwtl
adc
scas
cmp
or
fs
mov
jae
cli
mov
int3
and
and
pushf
fldenv
xchg
sub
xchg
in
loope
fildl
xchg
sbb
mov
adc
shl
mov
push
push
pushf
jmp
push
add
jp
xor
pop
mov
fcomps
jg
mov
cmp
sbb
pop
mov
mov
xor
add
jmp
and
jno
pop
xchg
sar
cmp
or
jle
jp
jle
in
daa
xchg
inc
cld
cmp
pop
jecxz
fmuls
mov
mov
push
stc
push
xor
mov
adc
mov
dec
imul
xor
rorl
arpl
mov
filds
inc
adc
adc
cltd
mov
pushf
jne
sbb
jne
or
arpl
ss
inc
sbb
movsl
movsl
cwtl
jmp
je
mov
mov
cmc
fnsave
fs
call
inc
mov
cs
pop
adc
je
adc
popf
aad
cmp
push
and
push
pop
syscall
ja
pop
stos
loope
bound
into
xor
cmp
or
out
pop
cld
out
insl
mov
insl
fucomp
fs
gs
mov
mov
dec
xchg
mov
adcl
cmpsl
out
cmpsl
mov
jne
incl
mov
mov
addr16
into
pop
out
xchg
cmp
subl
mov
mov
cs
cld
sub
cwtl
sbb
mov
mov
cmc
add
mov
pop
dec
inc
sbb
cs
jno
insb
jbe
cmp
int
out
push
in
outsb
repz
in
movsb
mov
lret
scas
jne
arpl
insl
jo
ljmp
mov
mul
in
pop
xor
pop
adc
jns
xor
dec
mov
fmuls
nop
pushf
ss
sbb
testb
fwait
add
leave
iret
xor
jge
xor
into
int
aas
fst
mov
ret
xor
xlat
je
lods
xchg
scas
or
aam
mov
push
in
dec
xchg
sbb
test
lret
cmpsb
jecxz
jnp
stos
out
push
push
popa
sarl
aas
out
insl
ret
fwait
xchg
addl
leave
iret
dec
push
movsl
pop
test
xor
lea
into
add
jo
jae
sub
jne
push
and
imul
fdivrl
push
pop
and
shlb
dec
inc
clc
scas
lods
shlb
mov
jbe
pop
bound
sahf
push
fistpl
add
pop
nop
xor
or
xlat
ljmp
xchg
mov
pop
adc
pop
or
cmp
pop
mov
fisubl
xor
repnz
mov
jl
cmp
ljmp
adc
fs
add
and
inc
inc
pusha
xor
adc
fldenv
mov
shlb
dec
xor
mov
out
pop
out
sub
repnz
iret
xor
ja
lods
out
les
andb
in
push
sbb
xor
ljmp
xchg
sbb
js
lret
cmp
faddl
int
adc
sbb
push
xor
bound
mov
lods
mov
jmp
xorl
jmp
jmp
and
jnp
cmp
and
jp
push
mov
into
out
clc
jle
jp
jle
mov
loop
jl
ljmp
aam
gs
cwtl
je
fisubl
or
mov
jo
mov
mov
ret
mov
sbb
or
mov
and
in
icebp
add
mov
adc
mull
mov
test
sub
fistl
adc
mov
push
cmpsl
or
mov
fs
jns
or
in
ja
and
push
pop
and
aaa
pushf
sub
filds
scas
and
pop
adc
call
or
jecxz
cmpb
mov
or
xor
cmc
test
add
test
mov
lret
push
jecxz
loop
jae
dec
sub
outsb
lock
pop
fsubs
idiv
or
mov
out
cli
jb
inc
sbb
sti
mov
aad
push
or
jge
stc
dec
dec
mov
stos
jecxz
popf
movl
aaa
gs
rclb
mov
xor
shll
dec
push
inc
mov
add
insl
sub
fcoml
popf
stos
call
mov
aad
cs
mov
lret
jnp
mov
push
add
scas
fsubrl
pop
aas
xchg
jb
outsb
sub
jmp
mov
in
aas
lods
pop
push
lea
test
data16
int
sti
pusha
jl
pop
add
ja
fldl
sub
xchg
mov
jo
das
inc
mov
xchg
pop
hlt
cwtl
sub
movsb
subb
and
mov
adc
idivb
mov
cmp
inc
mov
push
mov
addr16
push
das
sbb
daa
pushf
mov
sbb
mov
fs
push
lahf
dec
insb
sbb
mov
fisubl
xchg
inc
shl
leave
mov
ljmp
repz
pushf
jae
cmp
or
pop
xchg
xchg
insb
lret
cmp
call
xor
aas
mov
jnp
pop
jp
arpl
cmc
lods
or
adc
scas
mov
and
xor
xor
ljmp
inc
jns
dec
fcmove
fwait
pop
lret
fs
stos
mov
in
mov
bound
sbb
popf
push
insb
add
in
mov
inc
xchg
int3
push
and
in
stc
pop
mov
in
sbb
xor
sub
shl
mov
popa
mov
out
jle
bound
rcrl
push
aad
fwait
les
fcmovnu
into
mov
cmp
cli
pop
mov
roll
push
mov
push
and
push
into
in
jmp
mov
cmp
in
movsb
mov
mov
inc
clc
mov
jmp
xchg
jge
hlt
push
jne
pop
cld
into
inc
cmp
adc
jp
jle
xchg
lods
loope
mov
cmpb
xor
jmp
jl
fs
sub
mov
clc
pushf
out
adc
mov
push
iret
clc
mov
pop
and
cmp
hlt
jno
jbe
xchg
pop
push
jp
dec
inc
andl
mov
and
subb
rcrb
mov
xchg
sbbb
sbb
insb
pop
xchg
insb
dec
mov
dec
xchg
jg
add
cmc
repz
xor
aam
or
fidivs
mov
outsb
mov
lret
aam
cwtl
pop
and
icebp
xor
dec
sub
in
inc
and
jns
add
faddl
mov
inc
movnti
xchg
sub
cmp
mov
fldl
xchg
xor
cmp
outsl
mov
sub
dec
cli
lahf
dec
mov
xchg
inc
inc
xor
mov
mov
mov
xchg
rcrl
shlb
shr
pop
sub
sub
popf
loop
mov
sbb
mov
lods
lods
add
and
ljmp
idivl
add
xor
lea
lods
xchg
das
cltd
xor
pop
push
cmc
ret
aaa
push
sbbl
lds
ljmp
jecxz
sub
in
les
adc
mov
divps
jne
out
xor
sbb
ja
xchg
add
push
jmp
loopne
xor
sbb
jp
dec
mov
mov
mov
xchg
inc
pop
dec
jo
xchg
xorb
shrl
rclb
scas
imul
sub
xor
jle
sbb
mov
jl
cmp
mov
loop
movb
out
or
icebp
aas
fldl
ja
or
xchg
ss
out
or
lahf
lahf
test
jb
or
mov
lret
sti
pop
dec
popa
movsl
sub
jno
cmp
fs
adc
ret
push
addr16
fnstenv
test
outsl
push
clc
and
sbb
push
push
mov
xor
sub
jg
ret
call
dec
pop
ljmp
sbb
test
dec
and
scas
push
stc
leave
mov
cmp
cmp
imul
repz
cmpsl
movb
push
inc
mov
sti
jle
ret
shr
inc
dec
movsl
push
xor
lret
cli
sbb
add
movsl
and
sub
mov
sbb
ret
sub
stos
xor
push
loopne
jmp
rorb
ja
mov
fwait
sbbl
jo
pusha
ja
mov
jl
mov
mov
fcoms
add
pop
pop
dec
sub
pop
mov
mov
jmp
out
xor
mov
loop
into
xor
xchg
push
orb
jle
jp
jle
add
call
adc
fnsave
mov
aad
jle
imul
sbb
xchg
lods
jo
sub
sbb
mov
push
cmp
cmp
es
aaa
aaa
pop
outsb
push
outsb
test
sub
cs
fnstenv
mov
jg
mov
out
in
dec
mov
fstp
sarl
and
sbb
push
pop
jmp
pop
sub
xor
adcb
aam
lahf
and
int3
or
filds
jmp
xchg
adc
push
popf
mov
cltd
dec
mov
adc
or
push
mov
mov
inc
cmp
ret
cltd
push
pop
scas
xchg
rolb
cmp
ret
dec
mov
inc
ja
push
xchg
bound
popf
ds
outsl
mov
mov
or
jo
lds
enter
xor
aam
push
mov
push
pushf
rorl
jbe
insl
xor
mov
hlt
xchg
cmpsl
xchg
scas
jp
pushf
or
fidivrl
cmp
int
mov
mov
push
xchg
lods
inc
das
cmp
movsb
je
adc
cmpsl
decl
add
xor
lcall
and
in
incb
in
iret
mov
mov
mov
push
inc
push
inc
pushf
fiadds
jg
xchg
and
jb
sbb
add
icebp
push
negl
push
or
test
sbb
lret
dec
xchg
adc
aad
add
inc
aam
mov
cmp
push
pop
insl
movl
outsl
mov
mov
sub
pop
cmpsl
cmpl
sahf
outsl
xlat
mov
orb
jb
fnsave
inc
loope
inc
and
pop
xorb
cmp
in
lahf
clc
cmpsl
cmp
xchg
subb
rcrb
push
xor
inc
rorb
mov
pop
loop
bound
adc
stc
fwait
pop
jae
sub
push
xlat
xchg
hlt
call
fs
scas
hlt
dec
andb
mov
xor
test
pop
rolb
pop
std
jb
ficomps
xor
loopne
imul
jne
mov
mov
mov
out
add
mov
notb
rclb
cwtl
cmp
fs
icebp
ja
mov
nop
inc
das
out
addr16
add
repnz
fisubl
sbb
mov
xchg
jae
or
mov
push
loopne
enter
jbe
and
notl
jnp
popa
mov
movsb
jne
out
pop
fsubl
fstl
bound
lahf
adc
and
test
outsl
ds
and
or
mov
fists
test
rcll
stos
pop
je
mov
jge
into
jmp
inc
or
inc
or
jne
call
mov
cmp
je
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
adc
movl
xor
or
and
movl
mov
movl
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
push
movl
cmpl
je
cmpl
jne
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
movl
cmpl
je
cmpl
jne
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
adc
xor
mov
add
mov
movzbl
xor
mov
orl
push
push
test
movl
je
mov
movl
cmpl
je
cmpl
jne
pushl
pushl
pushl
call
xor
or
dec
mov
jmp
movl
cmpl
je
cmpl
jne
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
and
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
pushl
call
jmp
sbb
mov
mov
adc
imul
mov
xor
or
sub
or
mov
mov
mov
sub
add
mov
and
mov
sbbl
xchg
andl
xor
add
inc
mov
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
neg
sub
adc
xor
addl
mov
xor
mov
or
mov
mov
mov
addl
xor
andl
xor
xor
add
movl
mov
mov
mov
je
sbbl
mov
adcl
xor
sbbl
add
cmp
movl
jne
pushl
call
mov
adc
mov
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jne
pushl
call
cmpl
jne
xor
xor
inc
mov
jmp
mov
xor
or
and
mov
mov
subl
xor
xorl
add
movl
cmp
je
andl
pushl
pushl
subl
call
sub
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
add
mov
mov
mov
add
mov
jmp
mov
fs
mov
fcomp
sbb
jle
stos
or
add
movsb
jmp
addl
and
in
in
mov
mov
addr16
nop
sarl
in
xor
jbe
push
jg
jmp
inc
mov
scas
xchg
jmp
jnp
sub
lahf
adc
daa
lret
hlt
mov
inc
xchg
fsubl
adc
ljmp
sub
jp
aam
test
arpl
fs
and
out
dec
sbb
push
pop
ret
cmp
cmpl
xor
sahf
sbbl
push
cli
fucom
push
pop
xchg
mov
and
lret
and
push
out
inc
mov
movsb
push
jmp
xor
inc
pop
pushl
rorb
pushf
push
lods
add
sub
and
ds
insb
push
mov
jg
test
lds
cmpl
aam
inc
mov
cwtl
fisttps
sub
stc
es
mov
mov
sub
in
mov
sub
mov
adc
int3
mov
jnp
les
xchg
out
sub
pop
ja
jno
mov
xchg
xor
xchg
aas
mov
push
lret
mov
xor
gs
fstpl
filds
dec
clc
cmp
cmp
adc
or
inc
test
daa
cmp
add
lods
or
ror
xor
outsl
ljmp
jb
cmp
imul
pop
stc
jbe
mov
ret
insl
lcall
stc
mov
xchg
fidivrl
addr16
test
in
rcll
int3
imul
inc
or
sbb
nop
iret
xchg
sub
xor
inc
lret
inc
push
aas
orl
clc
inc
dec
inc
xor
stos
dec
mov
xchg
enter
inc
punpckhwd
int
gs
push
imul
test
fisubrs
inc
mov
cltd
and
sbb
inc
push
pop
iret
orb
frndint
jmp
or
cmp
rorb
je
aad
cmpsl
jne
fidivrs
nop
xor
js
sub
mov
or
pop
outsb
xor
or
loope
add
cmp
mov
or
mov
pop
xchg
pop
pop
pusha
mov
scas
jle
fisttpll
repz
xchg
ret
sub
xor
mov
mov
and
xchg
scas
fsub
cmp
dec
shl
loope
shlb
ljmp
clc
cmp
inc
xor
pushf
outsl
sub
mov
xor
inc
pop
ds
shlb
mov
pop
cld
scas
test
aam
xor
jecxz
sub
xchg
mov
cmpl
stos
jle
mov
pop
mov
pop
fidivrl
lahf
mov
cwtl
cmpl
mov
mov
sahf
int3
insl
adc
in
mov
add
xor
mov
mov
mov
add
lea
mov
jmp
push
adc
shrl
cs
cli
jno
mov
jge
jle
xor
fucomip
push
push
sar
in
outsb
sarl
dec
adc
sbb
cmc
jbe
xor
push
lea
cld
rsm
int3
mull
outsl
push
mov
dec
test
aad
pop
add
dec
imul
repnz
dec
inc
in
or
jp
inc
incb
in
xor
dec
andl
pop
sbb
jg
aad
and
xor
jno
inc
ret
cwtl
jns
jmp
out
mov
in
adc
mov
enter
and
adcb
ret
loopne
mov
rcl
jg
test
cld
shll
movsb
mov
sub
jbe
inc
call
inc
mov
int
xor
js
call
push
xchg
repnz
or
and
sbb
mov
mov
pusha
rcrl
sbb
insb
cmp
clc
dec
clc
lods
dec
and
aaa
negb
pushf
enter
inc
sbb
cli
dec
call
inc
pop
icebp
shrb
cltd
jge
test
mov
mov
cli
mov
xchg
sti
add
push
inc
sub
inc
inc
pop
mov
push
mull
jbe
sub
fidivrs
add
add
int3
add
push
imul
sub
pop
push
jle
xor
push
les
loope
stos
add
lds
xchg
ja
adc
and
lods
pushf
loope
bound
out
cltd
xchg
jmp
sbbb
imul
adc
mov
and
movsb
inc
dec
jae
pop
mov
cltd
or
jb
pop
jae
inc
mov
fsub
lret
mov
or
movsb
sbb
rorl
cmc
int3
add
jmp
ss
ret
push
cli
and
pop
loop
pop
leave
pop
mov
lea
mov
imul
or
iret
data16
out
out
cmp
bnd
lret
and
xor
sarb
sar
in
mov
das
xchg
sbb
in
jns
js
xchg
mov
cmp
mov
mov
arpl
or
mov
sub
mov
aas
int
lahf
dec
lea
sar
or
sbb
mov
int3
push
add
adc
mov
mov
push
sbb
in
stc
adc
fimull
inc
mov
into
gs
outsb
mov
push
xchg
fstps
inc
out
pop
out
ljmp
dec
or
cld
pop
imul
icebp
cmpsb
mov
jmp
add
pop
out
mov
pushl
pushl
call
mov
mov
xor
add
cmp
jne
mov
inc
cmp
jb
jmp
mov
xor
add
jmp
mov
movzwl
mov
mov
mov
mov
mov
xor
add
cmp
jne
mov
xor
jmp
jmp
xchg
adcl
and
jle
fsubrl
lock
fidivrl
subb
insb
test
fistpl
xor
push
pop
push
xchg
pop
push
mov
std
pop
jle
bound
in
adc
pop
push
repnz
cli
orb
mov
jb
int
xor
mov
sub
push
loop
sti
lods
adcb
insl
jecxz
mov
movsb
arpl
pop
sti
dec
out
pop
fdivrl
or
addr16
out
pop
or
iret
fidivl
sbb
out
movsl
sbb
pop
mov
pop
outsl
dec
das
mov
adc
sub
mov
mov
test
out
mov
dec
mulb
xlat
sti
or
aad
test
stos
in
pop
sbb
pop
or
xchg
lahf
cmp
out
push
das
sbb
adc
xor
xchg
jbe
mov
xchg
int3
and
add
sbb
mov
mov
cmp
ja
cmp
idivl
push
movb
pop
ds
popa
int3
ljmp
and
pop
mov
cs
stos
mov
push
insl
xchg
and
and
ficoms
sub
sub
pop
lea
inc
ret
leave
cld
stos
lahf
insl
aas
adc
and
mov
fidivl
cli
cmp
mov
in
sbb
fwait
test
dec
pop
push
mov
out
ret
int3
adc
jmp
mov
es
add
mov
lock
mov
pushf
mov
rolb
into
out
jae
add
clc
jmp
fcmovu
insl
insb
mov
jg
movl
js
dec
out
test
incl
or
xchg
pop
das
in
xchg
push
ljmp
inc
test
movsb
sbb
aad
bound
push
hlt
mov
jne
cmp
mov
call
adcl
movsl
rcrb
adc
pop
std
jp
rolb
xchg
jae
clc
gs
inc
daa
mov
or
jl
dec
into
arpl
mov
shll
dec
das
dec
xor
dec
inc
out
cli
test
flds
mov
or
cltd
fisubs
repnz
cld
fwait
push
int
fisubs
cmpsl
fwait
push
jl
mov
cmpb
shrl
cmpsb
mov
not
ficompl
clc
sub
movsl
sti
das
mov
or
sbb
xchg
push
mov
iret
repnz
jmp
mov
inc
imul
push
stos
cli
cmp
aad
cli
in
mov
mov
mov
or
xor
and
pop
mov
xor
jmp
or
int3
clc
js
fsubs
les
mov
add
mov
mov
test
je
mov
push
pop
push
dec
jmp
test
jnp
mov
xchg
rcr
idiv
and
jle
popf
or
in
mov
test
jns
jno
les
xchg
in
jp
outsl
cmpsb
jle
and
jmp
lock
xor
sub
dec
pop
mov
pop
jecxz
cmp
insb
mov
fcomp
je
lds
ret
inc
pop
jo
sbb
adc
stos
or
xchg
lods
inc
sbb
fistpl
imul
inc
sbb
ja
sbb
or
pop
fsubr
cmpb
repz
gs
sbb
adcb
xchg
pop
fimull
add
lcall
push
mov
xor
sbb
outsb
mov
xor
xchg
xchg
push
pop
push
mov
sbb
ret
popf
enter
fisttps
test
movsl
test
adc
fsubrl
cwtl
mov
push
pop
mov
adc
inc
ret
sub
out
pop
inc
sub
out
jo
push
in
sar
inc
stos
pop
cwtl
imulb
outsb
mov
jae
mov
sub
mov
push
xchg
cmc
lods
jno
out
fbstp
push
or
push
cmpsl
lods
mov
push
fstpl
push
icebp
xchg
or
xchg
and
in
cs
pop
mov
in
je
add
ret
mov
adc
in
push
jb
loop
xor
xchg
subb
mov
dec
out
addr16
cmpsb
out
mov
mov
cmp
std
lret
cmp
pushf
aam
jne
xchg
flds
mov
cmp
pusha
dec
insl
inc
mov
aas
xor
xchg
inc
out
inc
cmp
lret
pop
push
out
jp
dec
lret
xorl
test
cmp
push
xchg
lods
xchg
cmp
daa
cltd
in
jg
sbb
lahf
ljmp
daa
stos
add
cli
sbb
cs
lock
pop
pop
popl
dec
lds
jg
rclb
ficoml
cmp
pop
jns
sub
xchg
cli
lret
jno
dec
push
lock
xchg
mov
dec
ret
or
daa
outsb
outsb
rol
ljmp
xlat
je
push
movl
jg
iret
nop
cmp
xchg
jp
sub
mov
shr
test
adc
enter
cmpsb
pop
fldenv
fcoml
insb
xchg
cmc
leave
or
shrl
enter
test
test
test
fnstcw
daa
insl
test
xor
icebp
mov
aaa
add
sbb
sarb
ret
sbb
sub
or
fidivl
cmovp
jg
fadds
sbb
pxor
jge
outsl
inc
orl
clc
pop
jle
lret
movsl
pop
add
cli
and
xchg
sub
xchg
dec
mov
imul
sub
mov
mov
mov
xor
mov
add
mov
mov
xor
add
mov
jmp
xor
xor
xor
pop
pop
in
cmp
jle
jge
jle
ja
je
in
cmp
sahf
xchg
mov
iret
loopne
mov
dec
or
sub
and
icebp
addl
arpl
ret
and
add
or
mov
dec
pushf
sub
inc
push
lds
pusha
adc
insl
test
adcl
leave
adcb
add
dec
cld
lahf
xchg
push
push
repz
lock
jecxz
cli
ret
mov
jb
inc
fcoml
mov
push
test
fidivrs
push
test
pop
push
lds
lahf
mov
jmp
jge
pop
bound
jb
sbb
ret
xor
push
sub
bound
xor
sbbl
cmc
loope
mov
xchg
cmc
pop
mov
or
mov
sbb
pushf
mov
jle
cld
stc
fcoml
lcall
mov
sbb
out
mov
test
nop
jmp
dec
and
sub
sbb
fisttpll
mov
adc
rcr
push
cmpsl
ljmp
in
movl
xchg
and
dec
and
mov
cmpsb
insb
movsl
cmp
fnstsw
aas
push
sub
or
push
or
push
shlb
sti
cs
nop
loop
push
inc
repz
jmp
cs
fwait
dec
or
cmp
sbb
insl
in
push
fwait
lahf
dec
lods
pop
or
subb
jecxz
ljmp
pop
cs
sub
mov
je
or
push
int3
inc
mov
inc
cli
cmp
sbb
int
xorl
shll
rcrl
push
popa
sub
xchg
int
into
ss
pushf
enter
nop
adc
ret
mov
add
sub
or
xchg
insb
subb
repnz
stos
shrb
mov
push
aaa
or
cli
popf
inc
ds
cmp
add
inc
adc
sbb
inc
cltd
les
out
pop
lods
in
push
in
pop
or
outsl
push
jnp
int3
stos
andl
enter
or
mov
pop
mov
xchg
mov
fstpl
mov
add
jno
es
adc
cmc
outsl
xchg
mov
movsl
pop
xchg
dec
sarb
cli
fbld
lret
xchg
pop
inc
into
cmp
outsl
dec
mov
dec
xchg
nop
pop
gs
add
loope
dec
mov
lcall
pushf
mov
icebp
jl
scas
int
pop
push
aas
mov
push
int3
ret
sarl
dec
pusha
loope
imul
test
push
jecxz
push
ficoml
adc
in
xchg
sbb
xor
shll
inc
arpl
dec
inc
aam
fidivrl
xchg
hlt
jle
ja
mov
inc
aaa
push
or
xor
leave
mov
fdivs
sub
out
pop
imul
mov
xor
mov
lea
cmp
je
mov
mov
mov
mov
mov
xor
xor
mov
add
div
mov
jmp
inc
stos
push
jmp
jae
mov
jo
jecxz
or
sub
jle
outsb
push
xor
test
and
mov
inc
sbbb
and
aaa
rol
leave
into
inc
sbb
jo
jno
mov
out
in
aaa
dec
xor
jp
lret
mov
repnz
shrb
je
mov
nop
popa
mov
mov
or
inc
imul
jnp
ljmp
xchg
mov
adc
inc
test
nop
push
sbb
jmp
aad
data16
jge
sarb
jp
mov
pusha
insb
push
int3
std
int3
push
mov
and
cmp
xchg
subl
call
mov
jecxz
and
in
adc
push
test
cmpl
and
xchg
insl
xchg
gs
ljmp
sbb
scas
jp
adc
inc
int
mov
test
sbbl
negl
icebp
dec
push
jae
roll
xchg
repnz
cmp
dec
in
into
dec
rorl
fstps
je
sbb
lea
ss
mov
pop
sub
push
inc
and
insl
imul
pop
clc
mov
hlt
je
push
xchg
rolb
jno
inc
js
mov
add
xchg
repz
mov
adc
mov
in
push
add
and
push
mov
pop
mov
les
sbb
sub
stc
cs
or
movb
ds
inc
nop
test
aam
add
int
jns
adc
clc
sub
lahf
test
dec
push
add
iret
mov
dec
cwtl
xor
loope
repnz
dec
outsl
jae
add
dec
insb
sbb
in
add
outsl
shrl
xchg
jp
xchg
pushf
adcl
iret
fldl
or
fcoml
sub
sbb
out
and
imul
loop
imul
sbb
nop
aam
push
mov
mov
into
add
push
icebp
dec
jmp
pop
jle
mov
adc
ljmp
fwait
cli
mov
andb
idiv
or
xor
outsl
lds
sbb
push
aad
push
ror
dec
inc
push
popa
lods
test
in
test
pop
sbbb
sbb
mov
jo
or
hlt
push
mov
ljmp
and
inc
rcll
xor
pop
mov
enter
cmp
dec
xchg
sbb
sbb
push
pop
jge
xchg
ret
push
in
lcall
out
das
xchg
add
sbb
adc
cli
repz
dec
ja
xchg
lea
push
xor
jmp
add
scas
movsb
jno
and
out
das
add
lret
xchg
pop
mov
icebp
jno
mov
stos
cwtl
jo
jl
cmp
jo
leave
mov
add
sbb
add
das
subb
mov
xor
outsb
aaa
ss
jle
jge
jle
or
sbb
and
arpl
adc
jne
push
in
int3
lahf
and
jl
lods
pop
xrelease
sub
xchg
and
imul
cltd
popf
push
push
ja
mov
js
je
jmp
sbb
ljmp
push
or
cmp
jg
xor
les
push
nop
mov
orb
mov
sahf
loop
adc
jbe
test
gs
or
xchg
mov
inc
leave
je
sub
push
imul
add
xchg
cli
lods
pop
cmp
lods
or
popa
add
not
add
fwait
or
aaa
cmp
orl
and
lods
push
fildl
jnp
rol
data16
mov
stos
aas
inc
daa
or
aaa
scas
cmp
loop
adc
mov
sub
ljmp
dec
in
inc
dec
xchg
outsl
idivb
js
mov
pop
test
sbb
clc
arpl
in
cltd
mov
hlt
pop
xchg
arpl
ds
xchg
shll
jb
lea
xor
xchg
mov
push
in
std
and
add
out
imul
fs
dec
push
pop
sti
xor
leave
das
js
adcb
jnp
or
pop
ljmp
mov
mov
push
sbb
inc
ds
lods
das
lock
dec
jl
stos
incb
and
dec
pop
enter
lahf
punpckldq
lret
add
popa
test
into
out
shlb
sub
dec
sbb
mov
nop
adc
enter
inc
ret
sarb
and
cmp
nop
data16
push
popf
adcb
inc
inc
inc
mov
mov
xchg
loopne
test
mov
lret
mov
adc
adc
stos
dec
out
adc
cs
cli
cli
lahf
rorb
xlat
jae
fwait
push
cmc
hlt
or
enter
mov
dec
xchg
or
dec
adc
sbb
pop
daa
loope
in
and
cmp
scas
mulb
jb
fcom
xchg
sub
iret
sub
test
fnstsw
cld
jmp
adc
fcmove
in
test
das
or
mov
das
pop
jp
shrb
imul
dec
lock
xor
xchg
xlat
out
sub
xchg
xor
int
adc
aam
adc
shrl
les
xchg
or
push
loope
out
push
mul
gs
xchg
xlat
outsb
sahf
rorl
bndstx
cltd
add
inc
cli
loope
mov
xor
cmp
pusha
inc
xchg
push
add
insl
cmp
fildl
pop
adc
clc
lea
dec
fidivrs
and
add
mov
mov
jmp
repnz
adc
aad
fcoms
and
xor
jge
jle
fs
mov
mov
shrb
in
addr16
stos
and
popl
xorl
jge
addr16
int
insb
lcall
and
push
xor
cwtl
out
imul
in
or
or
push
or
sahf
icebp
sti
addb
and
jns
test
sti
pop
leave
sub
jg
mov
jecxz
bound
cld
fadds
fistps
lock
lcall
xchg
out
dec
f2xm1
fsubrp
and
shlb
das
pop
sbb
push
pop
push
push
imul
cmp
adcb
and
pushf
jns
push
stos
std
punpckldq
aam
cmp
push
data16
shrb
movsl
sub
mov
test
pop
and
les
dec
mov
cmp
insb
mov
inc
lret
shll
mov
scas
push
inc
neg
fwait
and
ljmp
sub
xchg
or
insl
xor
xchg
shrb
mov
sub
pop
mov
add
sar
loop
jp
mov
aad
sarb
scas
pop
mov
cli
xchg
test
cmpsw
push
sbb
add
jecxz
dec
imul
or
test
stos
xor
into
mov
sub
stos
push
cmp
dec
mov
pop
fldl
xor
jge
out
push
cmp
mov
repz
cmp
push
out
xchg
insb
mov
pop
lret
mov
jae
mov
pop
xchg
push
outsb
and
scas
xchg
sub
xchg
in
daa
sbb
rolb
out
int3
mov
sti
iret
mov
aas
sbb
adc
dec
popf
jecxz
xor
ljmp
jbe
sbb
inc
adc
les
fdivl
popf
push
fisttpl
and
xchg
sbb
mov
push
mov
mov
es
enter
add
dec
test
out
xor
je
test
mov
or
jno
test
jge
push
jle
aas
xchg
jno
in
mov
dec
lahf
test
push
xor
mov
scas
mov
xor
stos
push
inc
sbb
call
dec
dec
sub
push
pop
and
in
and
xchg
test
adc
dec
sub
cmc
dec
lret
mov
add
mov
xchg
enter
adc
xchg
push
mov
push
cwtl
lahf
jnp
cmpsb
mov
mov
mov
scas
ja
dec
xchg
xchg
add
into
or
xor
xchg
aad
xor
fdivrs
or
int3
fwait
and
sbb
movsl
in
push
ffreep
jnp
dec
push
leave
sbb
movsb
xor
pop
lret
mov
out
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
imul
mov
xor
mov
lea
cmp
jne
mov
jmp
mov
mov
xor
add
mov
xor
lea
add
call
xor
inc
cmp
je
xchg
push
pop
push
pop
inc
xchg
sub
xchg
dec
mov
imul
add
xchg
push
xor
mov
dec
inc
add
jmp
lods
and
xchg
jno
jno
add
addps
jle
jge
jle
in
push
inc
push
cmpsl
icebp
nop
push
addb
cmc
cmpsb
movsb
lcall
jecxz
mov
inc
ja
ljmp
cmp
mov
add
js
xlat
xchg
jb
arpl
push
enter
add
repz
sub
loopne
loopne
jo
int3
ss
xchg
aas
push
mov
dec
adc
jbe
stos
es
push
push
lret
or
orb
cwtl
neg
stos
jae
dec
push
idiv
and
lods
stc
sub
ljmp
lret
xchg
loope
mov
xlat
push
xlat
jl
cmp
xchg
xlat
jl
mov
fisubrl
push
sbb
sub
dec
dec
dec
mov
ja
pop
jle
cmp
mov
pop
insb
push
int3
outsb
sub
hlt
inc
dec
in
mov
sub
sbbl
mov
cmp
lret
fnstenv
es
sub
pop
xchg
xchg
jg
ret
in
add
mov
jae
mov
inc
mov
jp
mov
mov
jmp
mov
jnp
scas
jne
pop
mov
iret
xor
repz
cmp
xor
cmp
fbld
inc
xor
shl
xchg
dec
jae
mov
pop
scas
shl
in
inc
pusha
call
enter
stos
out
dec
decb
mov
jno
ljmp
jp
fwait
stos
cs
xor
dec
loope
loope
nop
and
arpl
and
in
mov
repz
jae
lret
or
jmp
sub
push
mov
pusha
divb
arpl
iret
stc
pop
mov
and
in
imul
jbe
lea
mov
mov
stos
jnp
jae
xchg
pop
imul
nop
or
lods
inc
sbb
xchg
aam
pop
ret
mov
clc
push
insl
mov
push
xor
outsb
mov
ret
jmp
int
jns
cmp
mov
and
cs
arpl
inc
stos
or
sarl
mov
adc
and
xchg
clc
cwtl
icebp
daa
out
sbb
int3
cs
stos
push
clc
mov
sbb
mov
jl
adc
clc
aas
pop
mov
mov
fisttps
paddsb
nop
hlt
cmpsl
clc
pop
bound
repnz
push
mov
enter
or
or
fwait
ljmp
loop
jb
fcoms
cmp
ja
mov
stos
xchg
xchg
repnz
jne
dec
cmpsb
mov
movsl
cmpsb
cmpsl
pop
pop
mov
xor
scas
fstps
test
imul
test
or
shlb
incl
add
in
dec
xor
add
pop
mov
pop
pop
pop
leave
ret
push
mov
push
movl
push
movl
mov
movl
movl
push
movzwl
mov
mov
movl
push
mov
not
mov
movl
cmp
movl
jmp
jecxz,pn
add
push
popf
mov
movsb
jle
push
jg
jle
push
jne
xor
dec
adc
xchg
jo
pop
xor
dec
adc
add
repz
push
adc
daa
xchg
xor
sub
jmp
es
jmp
lods
xchg
sub
inc
xor
xor
pop
add
adc
mov
mov
fldl
mov
sbb
xor
cmp
pushf
rcll
mov
icebp
fwait
xchg
test
jbe
sub
std
xor
jne
push
dec
test
in
out
cli
shrl
sub
xor
ror
lods
fdivrs
call
jne
mov
rclb
xor
add
push
out
pop
push
dec
add
arpl
push
pusha
and
orb
jle
push
push
out
pop
aas
push
fcmovbe
in
dec
pop
inc
or
les
xor
sbb
mov
adc
lea
out
sbb
cld
xchg
fsubl
insl
mov
call
imul
lds
pop
sub
out
sbb
je
addl
mov
mov
xorl
xor
add
cmp
movl
je
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
call
cmpl
jne
mov
inc
mov
jmp
mov
sub
xor
dec
add
push
adcl
pushl
or
pushl
mov
call
mov
mov
mov
mov
jmp
jmp
xor
fs
mov
sti
adc
or
movsl
jle
push
jg
jle
xchg
ret
pushf
das
adc
sub
sub
sub
and
sub
es
repnz
flds
ret
imulb
arpl
dec
inc
rclb
and
mov
ljmp
aas
sbb
dec
mov
sub
mov
out
mov
lods
cmp
cmc
repnz
or
and
sub
xchg
adc
hlt
mov
dec
jmp
cmpb
hlt
add
sub
add
pop
push
bound
addr16
and
or
sahf
lahf
scas
loope
add
add
xchg
mov
jp
mov
fwait
call
mov
fstpt
sbb
testl
push
jle
movsl
pop
xor
adc
push
jnp
call
ficoms
and
cmp
and
idivl
xor
ljmp
dec
mov
xchg
scas
addr16
int3
and
mov
xor
add
cmp
jne
mov
xor
add
jmp
xor
xor
mov
mov
jle
jg
jle
mov
cmp
xor
loopne
jle
arpl
lcall
pusha
clc
push
scas
mov
pushf
out
fdivrs
sbb
cwtl
jns
fwait
sbb
and
or
jae
les
test
pop
jp
cmpb
fwait
lahf
stos
aam
xchg
and
push
xor
mov
xor
push
xor
cmovns
daa
cltd
push
idivl
mov
cmpsb
mov
fnclex
push
call
add
std
arpl
jbe
sub
or
hlt
das
jne
mov
push
jns
in
adc
call
sarl
test
sbb
lret
pop
cltd
out
pop
sahf
imul
mov
in
sub
test
push
ja
enter
inc
lea
xchg
aam
jb
inc
mov
and
in
pop
inc
jae
adc
mov
and
jge
mov
mov
xor
add
mov
pushl
pushl
call
mov
xor
pop
add
pop
leave
ret
push
mov
sub
mov
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
call
jmp
subl
push
andl
mov
inc
mov
cmpl
jne
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
movl
cmpl
je
cmpl
jne
push
pushl
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
dec
mov
xor
mov
add
andl
push
negl
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
call
cmpl
jb
sbb
mov
xor
andl
movl
adcl
movl
subl
add
movl
jmp
cmp
jne
movzbl
mov
jmp
xchg
inc
jae
push
aaa
mov
out
jecxz
out
mov
jle
push
lods
out
mov
cmp
xor
inc
iret
subb
sub
lock
jp
push
adc
scas
mov
cmpsl
cwtl
sub
fnstenv
subl
pop
jle
sti
jecxz
dec
lret
cmp
mov
jo
adc
mov
mov
xchg
xchg
call
stos
or
mov
adc
push
push
xchg
addr16
out
sbb
lods
lret
push
scas
fsubrp
js
lret
movsb
outsl
and
lahf
loope
pop
idivl
cltd
cwtl
xchg
dec
dec
popf
dec
cmp
in
in
addr16
xchg
fnsave
cmp
dec
int
xchg
scas
ja
jo
mov
je
mov
xchg
aam
lret
scas
je
outsb
jb
movsb
cmp
popf
jmp
clc
dec
sub
and
sbb
adc
mov
inc
shrb
push
mul
das
xorb
adc
adc
aad
repnz
js
xlat
notb
aam
mov
mov
and
aaa
out
xchg
rcrb
xor
xchg
jge
ret
cmp
pop
jmp
stos
test
sub
int3
inc
add
lcall
mov
jno
jge
std
jp
int3
es
add
xchg
inc
stos
in
mov
stos
imul
inc
mov
jne
push
push
add
xor
out
enter
das
jmp
sub
outsb
mov
fwait
mov
xor
mov
in
sarl
rorl
pop
mov
test
dec
jns
mov
sub
jge
mov
out
shrb
imul
fistps
sub
fimull
push
rorl
cmp
pop
fidivl
popa
push
dec
mov
mov
movl
mov
movl
mov
movl
mov
movl
mov
movl
jmp
cmp
jne
andl
mov
sub
push
mov
add
push
jmp
es
gs
test
mov
jle
mov
push
dec
arpl
fstp
or
jmp
ret
sbb
sbb
mov
lahf
pop
mov
fistl
loop
push
repz
adc
sbb
dec
sahf
ja
int
test
push
dec
and
out
pop
adc
xchg
push
and
loopne
test
mov
inc
mov
lahf
adcb
and
fsubrl
shr
fldenv
xor
shl
and
push
or
and
test
loop
xchg
pop
scas
mov
jg
mov
add
das
bound
test
push
push
jnp
xor
pop
pop
push
sar
jns
das
sbb
and
stos
sub
mov
js
out
jge
dec
jae
in
inc
or
cli
mov
inc
shlb
leave
push
sahf
call
enter
test
arpl
inc
mov
push
cmc
pop
pop
fwait
lahf
or
jnp
popa
stos
je
dec
fists
ret
dec
ret
cmp
fucomi
push
ss
aaa
adc
mov
lods
ret
test
jle
pop
or
rep
jo
pusha
in
cvtdq2ps
enter
mov
jp
push
mov
mov
fildl
ja
jns
mov
scas
int3
pop
add
mov
inc
subb
call
pop
xor
into
aam
fwait
mov
in
sub
stc
sub
enter
xchg
call
pop
std
mov
data16
jns
flds
fsin
mov
out
cmpl
loope
pop
inc
in
or
jl
push
mov
repnz
cwtl
or
dec
xor
lds
inc
pop
int3
call
das
cmp
or
xor
scas
leave
fcompl
adc
or
ret
stos
push
cs
push
movsb
iret
mov
mov
or
sarb
adc
mov
popf
pop
incl
cmpl
jb
jmp
jmp
lds
imul
scas
jle
push
jl
jle
cld
mov
lcall
das
jnp
test
sbb
in
mov
test
test
and
ss
jne
xchg
adc
int3
mov
test
cld
xchg
fwait
icebp
aaa
mov
jo
adc
aam
lods
pop
sub
and
jecxz
and
js
mov
rorb
dec
test
lea
pop
sub
xchg
inc
adc
sbb
movsl
idivl
aad
addr16
pmuludq
repnz
std
rorb
mov
mov
icebp
mov
cmp
pop
sbb
mov
arpl
sbb
mov
push
test
stos
js
xchg
mov
insl
movsl
and
xlat
test
adc
sub
roll
dec
dec
xchg
icebp
xchg
into
jg
aas
adc
pop
test
stc
cmpsb
xor
aas
or
xchg
vpshuflw
mov
adc
nop
into
pop
shl
dec
sub
lahf
aaa
inc
in
xchg
cli
sahf
adc
mov
pop
faddl
out
cmp
cmp
aam
ret
cmpsl
repnz
lea
daa
sub
xchg
sbb
jg
mov
xor
and
daa
imul
aaa
xor
xor
je
fs
fnstsw
test
mov
cmc
adc
mov
jnp
pop
pop
loop
adc
push
lcall
incb
push
inc
imul
aas
btc
subl
inc
or
sbbl
cmp
loope
movsl
adc
stos
push
xor
cld
cmc
cltd
jnp
inc
cmp
hlt
sbb
add
adc
je
repnz
sti
mov
cmc
lock
and
mov
out
pop
adc
shll
jnp
jbe
test
jmp
test
add
movl
mov
mov
mov
mov
mov
xor
add
mov
lea
mov
mov
xor
add
mov
lea
push
mov
xor
add
push
mov
push
pushl
call
jmp
cmp
jne
mov
xor
add
mov
mov
mov
mov
mov
mov
push
pop
sub
add
mov
mov
xor
lea
cmp
jne
mov
pop
xor
jmp
push
mov
jno
scas
out
lds
lahf
lods
jle
push
jl
jle
jmp
ficoms
shl
xlat
mov
out
mov
xchg
pop
sub
out
sub
sub
out
imul
pop
stc
pop
sub
push
sbb
ja
lret
and
xorl
jbe
icebp
stos
es
inc
or
fmul
jnp
jo
pop
or
mov
les
repnz
xor
push
ret
sahf
inc
sti
jge
mov
fsubrl
dec
push
xor
hlt
mov
in
xchg
lods
insb
sbb
arpl
mov
jmp
add
aaa
sub
and
cmpsb
push
in
movsb
mov
out
mov
xchg
fwait
push
add
pop
testb
push
insl
pop
out
cmp
or
lods
inc
ret
jmp
lret
imul
ffreep
push
mov
push
add
data16
dec
stc
or
ffree
cmp
mov
movsb
mov
jns
cmp
xlat
add
addr16
rcrl
pop
cmp
adcb
mov
repnz
sub
push
icebp
cmp
rorl
inc
insb
sub
arpl
and
sbb
cmpsl
inc
inc
div
andl
sbb
mov
jle
out
test
cli
fsubl
sar
and
jnp
mov
mov
xchg
std
fldt
into
stos
add
mov
add
outsb
push
mov
rclb
mov
shr
mov
pushf
es
adcb
adc
sub
popf
pop
add
cmpsl
inc
pop
mov
std
xchg
scas
ret
xchg
pop
data16
dec
xchg
mul
mov
fidivl
push
push
into
inc
inc
out
mov
lock
incb
outsb
and
push
pop
loope
push
aam
add
rcr
xor
and
dec
xor
push
mov
cmpsb
in
dec
pop
idiv
arpl
sub
hlt
pop
add
pop
leave
ret
push
mov
push
movl
push
xor
movl
jmp
lcall
push
inc
push
dec
movsb
dec
xlat
xor
jle
jl
jle
ficoms
jb
outsb
inc
out
insl
xlat
or
stos
cwtl
inc
data16
and
and
push
and
cmpb
push
sub
adc
and
jp
movsb
stos
lret
in
dec
shrb
mov
mov
adc
jmp
ja
push
lods
jae
push
daa
test
xchg
jl
out
loopne
das
insb
cmpsl
bound
jmp
mov
xchg
stc
mov
sub
in
adc
loop
dec
pop
dec
mov
das
lock
pop
or
and
dec
and
outsb
mov
stos
arpl
mov
mov
addr16
cmp
inc
scas
mov
mov
jbe
rcr
iret
cli
cs
mov
jl
jnp
lock
lds
mov
mov
aas
outsl
lock
punpcklwd
fsubrl
push
loopne
mov
repz
and
int3
mov
or
fidivl
iretw
jmp
stos
lcall
pop
xchg
ficomps
jno
das
add
sti
cmp
or
inc
insl
fists
aaa
mov
xor
inc
jg
scas
or
mov
adc
lea
xor
shrb
push
xchg
inc
mov
outsb
or
or
in
fldl
cmp
hlt
movsb
je
sahf
jae
in
add
push
adc
inc
fs
xchg
cmp
insl
leave
mov
mov
xor
sub
pop
stos
or
mov
or
xor
mov
loop
fisubrl
mov
fdivs
inc
in
leave
iret
mov
dec
les
lea
adc
and
out
out
push
or
xchg
ljmp
mov
shl
cmp
decb
faddl
mov
out
addb
fs
aas
push
je
sub
repz
or
mov
sub
jne
loopne
mov
std
cmp
insb
mov
ljmp
mov
loop
pminub
cmp
call
sub
test
adc
cmp
je
cmp
adc
jle
inc
out
mov
mov
jo
out
jno
pop
pop
push
and
les
out
bound
pop
lds
call
popa
dec
fldenv
xchg
es
nop
jno
inc
mov
in
scas
rclb
inc
pand
jge
xchg
lret
pop
loop
jmpw
iret
mov
xchg
movl
subl
mov
addl
jmp
insb
xchg
xchg
in
or
aas
lahf
in
mov
lods
jl
jle
add
pop
ror
mov
jae
cmp
ficoms
rol
pop
jl
in
or
enter
scas
ljmp
ficoml
xchg
mov
push
push
testb
js
adc
xchg
sahf
insl
lcall
popf
cmp
scas
jmp
ds
push
jnp
arpl
dec
movsb
gs
sti
jle
xchg
push
jge
add
imul
addr16
jp
ja
dec
lcall
lods
mov
mov
fucomip
in
scas
pop
mov
int3
mov
or
mov
inc
mov
pop
jle
cli
movsl
mov
xchg
in
dec
xlat
dec
xor
lock
xchg
pop
daa
cmp
scas
insl
loopne
rorb
push
ds
jne
gs
movsb
mov
and
sbb
cltd
bound
inc
cs
and
jmp
xchg
jae
mov
pop
push
shrb
mov
pop
ret
es
lds
adc
in
mov
test
sub
xor
mov
and
cltd
imul
jns
inc
shlb
sti
jns
out
sub
imul
loope
movsb
xchg
out
mov
or
cmpb
lods
into
cld
pop
adc
sbb
sub
sti
jo
shll
xchg
shlb
push
cmp
add
mov
rcr
mov
jne
imul
fsubr
xchg
dec
mov
test
add
adc
pop
xchg
fildll
inc
movsb
jo
ret
fwait
in
adc
push
ret
out
adc
das
ret
pop
inc
cmpsl
ljmp
push
sbbl
ret
push
cs
mov
sub
scas
mov
movsb
rcll
pop
fisubrl
nop
cs
adc
jns
movsb
push
and
mov
sub
popa
push
inc
ja
out
inc
fsubs
cli
sub
fs
sub
stc
jecxz
das
in
in
jne
test
aad
and
pop
ret
pop
xor
jb
mov
clc
or
cltd
cmc
idiv
adc
lahf
add
push
fsubrs
fiadds
or
and
outsb
xchg
dec
hlt
in
into
pop
mov
popf
adc
sbb
imul
pop
dec
mov
lret
out
cs
test
mov
fadd
gs
jmp
push
adc
mov
movzbl
adc
mov
xor
xor
xor
mov
jmp
mov
jno
jb
inc
pop
outsl
dec
std
pop
mov
jle
jl
jle
cwtl
into
sub
hlt
mov
mov
xchg
adc
in
in
out
xchg
sbb
mov
xor
inc
or
cmpsb
jle
xor
mov
loopne
dec
rorl
pop
cmp
movsb
in
cmp
hlt
adc
jle
clc
sbb
push
adcb
cli
loop
push
push
jae
ja
push
jle
dec
sub
sti
or
add
mov
cwtl
into
push
in
mov
xchg
dec
testb
in
mov
shll
inc
repnz
cltd
test
std
xchg
push
mov
addl
jae
sahf
xchg
xchg
in
arpl
sub
jp
popa
lock
sub
mov
jmp
imul
or
lret
inc
es
xor
ja
push
inc
loopne
xor
sbb
sar
fcmovbe
and
cmp
into
fldenv
xchg
lret
test
xchg
pop
bnd
adc
in
cmp
xor
fsts
xchg
aaa
add
movsl
jp
or
push
sub
data16
pop
dec
ss
mov
xchg
xchg
add
xchg
mov
sub
push
adc
std
add
insl
cmp
sbb
inc
shrl
push
sbb
inc
pop
jl
hlt
fstps
add
cli
inc
stos
fs
test
rcrl
mov
xor
dec
push
xchg
jae
rorb
fwait
stos
jg
cwtl
leave
imul
movsl
sbb
xchg
xchg
mov
or
insb
scas
mov
test
push
scas
push
enter
sarb
insl
mov
lahf
mov
push
sti
aad
out
jg
daa
shld
add
sub
mov
xchg
jae
ljmp
dec
sbbb
in
movq
push
push
xchg
jmp
dec
add
test
out
pop
pop
xchg
insb
stos
shll
sbb
sub
fimull
inc
dec
pusha
adc
push
in
push
mov
fdivrl
daa
jecxz
mov
mov
sub
loope
adc
adc
insb
test
mov
mov
int3
into
mov
lcall
in
dec
and
dec
mov
xchg
jno
jb
mov
clc
lcall
out
outsl
sub
test
gs
repz
subl
and
xor
shr
add
add
sub
arpl
sub
scas
ret
shll
stos
push
mov
jle
jl
jle
repnz
out
cmp
push
dec
ljmp
jecxz
and
mov
mov
mov
loopne
mov
or
sahf
mov
fwait
adc
adc
jmp
aam
sbb
add
or
lods
jns
pavgw
cmp
int3
clc
ss
mov
and
ljmp
ret
pop
jmp
mov
nop
cwtl
fs
xchg
pusha
pop
in
aas
decb
shl
mov
xor
mov
jg
imul
mov
das
dec
sub
xor
cs
sub
jg
add
sbb
cmc
or
push
scas
mov
mov
fwait
fs
addl
les
inc
daa
outsl
mov
lcall
lcall
sub
and
stos
popf
insl
in
inc
in
sti
dec
push
aaa
je
xchg
mov
add
mov
pop
inc
sub
mov
repz
push
daa
sbb
mov
inc
push
dec
pop
sbb
daa
lods
hlt
enter
xor
mov
inc
sbb
xchg
cmpsl
inc
add
loopne
pop
into
ja
mov
divb
mull
aaa
inc
push
aad
orb
jl
shrb
fdivs
test
aad
test
fldl
jae
mov
loope
inc
pop
sbb
cltd
scas
pop
inc
icebp
fwait
outsb
mov
sub
push
jnp
aaa
popf
int
movsl
mov
jnp
push
scas
subb
ja
out
ds
sub
jno
lret
decb
xor
test
je
mov
ret
mov
addr16
sub
mov
lock
mov
insb
inc
fnstcw
jmp
notl
mov
cmpsb
ror
xchg
rclb
pop
dec
cmpsb
in
popa
inc
loop
jno
dec
mov
repz
cmp
lret
lods
cs
stos
test
test
mov
jmp
stc
cld
adc
movsl
gs
push
lock
pop
les
out
xlat
push
fcoms
and
adc
inc
int3
sbb
jle
aas
aad
daa
outsb
mov
mov
mov
fbstp
aam
in
or
and
sbb
dec
and
mov
popa
pop
push
push
xchg
xchg
xchg
push
sti
repnz
into
rcrb
dec
and
cmp
cmp
shlb
xor
addr16
daa
popa
flds
mov
dec
bound
in
pushf
and
aaa
mov
sub
cmpsb
leave
mov
cld
pop
push
ljmp
mov
movl
cmp
jne
mov
sbbl
jmp
inc
sbb
test
add
and
lods
jl
jle
pop
pop
cmp
cld
fwait
sbbl
movb
punpckhdq
jp
add
in
push
shrl
lret
je
lods
test
jb
sbb
pop
daa
movsl
push
lret
mov
js
add
add
xchg
test
push
mov
sub
or
imul
cmpsl
pusha
cmpsb
pop
call
sti
inc
lahf
or
loopne
cmp
mov
ficoms
mov
cli
iret
push
pop
out
fcmovnb
push
adc
test
xor
bound
ja
cmpsl
shll
push
test
xor
xor
sbb
out
out
ret
add
mov
hlt
into
mov
cltd
imul
sub
push
fwait
mov
out
cld
shll
leave
insl
and
adc
stos
jne
hlt
xchg
andb
mov
ret
pop
les
jge
inc
pop
sub
imul
mov
add
cwtl
lods
jb
and
mov
lcall
cmpsb
into
ss
movsl
pop
testw
jecxz
addr16
outsl
sbb
add
sbb
jae
arpl
sbb
lock
mov
js
enter
lea
inc
push
pop
add
push
je
dec
stos
in
xchg
fs
push
sub
pop
popf
jmp
xchg
fwait
pop
add
cmc
push
mov
aad
fadd
add
aaa
mov
int
mov
ljmp
mov
out
inc
fs
and
icebp
mov
jmp
sbb
fdivs
and
repz
dec
and
sti
repnz
jae
adc
and
bound
adcb
dec
shll
lcall
push
sub
mov
push
addr16
inc
adc
or
shll
xlat
sub
jnp
sbb
sub
nop
or
lea
cwtl
daa
mov
mov
cmp
fs
loop
ret
cmp
sti
icebp
mov
bnd
sub
adc
in
mov
cmpsl
es
lret
rorb
add
test
push
lods
cmpsl
aad
adc
jp
cld
sbbl
rcrb
lods
lock
out
adc
add
jnp
sub
out
xor
xchg
loop
mov
xchg
rcll
jg
dec
in
ror
into
mov
pop
mov
movl
xor
xor
add
subl
add
imul
jmp
movl
cmpl
je
cmpl
jne
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
mov
mov
mov
mov
xor
xor
add
add
imul
mov
cmp
mov
je
xor
add
mov
imul
add
mov
mov
pop
leave
ret
push
mov
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
call
cmpl
jne
mov
inc
mov
jmp
xor
push
addl
mov
or
mov
jmp
jne
dec
cs
xchg
or
and
jl
jle
or
mov
dec
imul
and
sub
jnp
push
dec
enter
lods
out
push
pop
sbb
gs
sub
mov
push
out
dec
loopne
cmp
sahf
orb
lcall
xor
sbb
pop
bound
into
cmp
lret
enter
or
lds
sub
jle
loopne
and
sbb
shll
xor
inc
xchg
fisubs
xor
imul
sub
repz
ds
inc
sbb
fwait
cwtl
ffree
cld
jge
add
mov
repnz
subl
sbb
pop
add
pop
out
sub
mov
and
sub
xlat
adc
inc
int
leave
jle
scas
mov
or
fsubs
fisubrs
adc
sbb
jge
push
dec
sbb
test
popf
fidivrs
scas
sbb
into
mov
rcll
movsb
sbb
shrb
push
mov
aaa
push
inc
aaa
lahf
movsb
xor
xor
pop
jmp
fldenv
adc
xchg
outsb
mov
test
adc
rolb
sbb
inc
enter
cmp
inc
jle
add
popw
popa
stc
call
pop
imul
jg
xlat
jmp
xor
cmpl
mov
jb
subb
ljmp
pop
rol
add
nop
repnz
mov
adc
in
add
outsb
cmpsb
jo
sbb
lods
xchg
add
jge
lret
or
rcll
or
sub
sub
mov
sub
mov
sti
xor
call
mov
jne
lret
cmpsb
cld
outsb
xchg
fwait
xor
fwait
imul
pop
jle
loope
xchg
mov
push
jp
mov
jl
clc
daa
test
fwait
mov
add
mov
mov
js
lret
or
cmp
daa
rcll
fnstsw
lcall
pop
add
xor
fwait
cmp
jmp
je
inc
popf
mov
sbb
cld
xor
nop
inc
jne
dec
imul
xchg
test
xor
adc
inc
add
add
add
add
adc
cmpl
jne
pushl
call
cmpl
jb
xor
or
sbb
mov
mov
movl
cmpl
je
cmpl
jne
push
pushl
pushl
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
movl
push
xor
mov
sbb
xor
mov
adcl
push
mov
add
cmp
je
mov
mov
xor
mov
sub
add
xor
add
cmp
ja
push
jmp
mov
mov
mov
xor
add
mov
imul
mov
xor
add
mov
mov
mov
xor
lea
mov
xor
mov
sub
add
cmp
jbe
pop
jmp
out
adc
adc
ja
orl
icebp
push
or
xchg
mov
jle
mov
mov
xchg
sub
xor
scas
in
call
test
ds
mov
aas
pop
je
inc
repnz
rclb
mov
nop
dec
sub
das
add
cmpsb
ror
stos
js
les
pop
sub
and
dec
cli
shl
push
cmp
aam
sbb
and
adc
aad
les
movsl
pop
mov
mov
push
sub
out
cmc
jo
jmp
inc
sbb
mov
popa
and
sbbl
hlt
cmpsb
xorl
jg
nop
jae
sub
cld
mov
push
bound
dec
and
movsb
sbb
mov
outsb
pop
jnp
leave
mov
rep
lock
mov
sarb
and
shrb
lret
lahf
or
sub
dec
mov
push
adc
aad
xlat
mov
cmp
in
inc
push
push
xchg
inc
mov
ret
mov
fcoml
cmpsb
fst
lods
scas
cmp
stos
push
test
xlat
jne
data16
sub
out
push
xor
movsl
xlat
imul
dec
into
dec
popf
je
inc
sub
xor
sbb
cmp
or
aas
jmp
adc
fbld
stc
ret
mov
push
push
ds
inc
in
jbe
ret
rcrb
cli
nop
and
dec
adc
xchg
pop
fwait
addb
addl
fsts
std
and
aas
js
addr16
mov
xchg
cmp
iret
cmpsl
cmp
pop
pop
jp
jnp
movsb
nop
ss
fwait
mov
cmp
sub
lods
fisubs
pusha
in
cmp
mov
xor
lcall
jae
cltd
mov
pushf
stc
sbb
test
int3
mov
rclb
push
xchg
stc
cmpsl
int3
lock
xchg
fstl
cmp
and
adc
adc
pop
aas
addr16
jecxz
pop
cmp
cs
arpl
or
xor
push
insl
xchg
cmp
xor
aam
jl
sti
repnz
inc
dec
movsb
lret
push
out
inc
std
pop
sbb
insl
imul
test
mov
xchg
aad
sub
jne
rcll
leave
repnz
clc
pop
pop
leave
ret
push
mov
mov
xor
mov
div
mov
and
or
mov
pop
ret
push
mov
sub
xor
mov
movzwl
sbb
mov
mov
xor
andl
mov
add
andl
movzwl
xorl
mov
movb
adc
lea
mov
adc
mov
mov
xor
sub
adcl
mov
xor
xor
sbb
jmp
add
mov
cmpsl
and
prefetch
jle
jg
jle
ds
loope
ds
scas
mov
jmp
pushf
inc
mov
xor
dec
pop
jnp
pop
lcall
push
imul
or
cmp
or
dec
and
das
sub
inc
add
push
push
and
in
cmpsl
mov
pop
xorl
xchg
fsubrp
sbb
and
push
pop
cmp
mov
addb
jecxz
jmp
pusha
test
and
push
mov
movsb
add
inc
jno
jp
jg
mov
mov
incl
ficomps
add
pop
sbb
lods
popf
filds
sub
and
and
pop
xor
or
arpl
bound
cmpb
xchg
and
arpl
into
fs
jecxz
pop
in
add
and
lcall
scas
out
pop
jb
or
in
push
fadds
push
stos
jno
xchg
test
jecxz
push
fstps
xor
movsb
loop
leave
xor
sub
das
xchg
notl
cmpsb
xchg
mov
mov
mov
add
jg
xchg
shll
int3
add
dec
test
in
inc
lods
out
std
lcall
lret
sbb
xchg
and
xor
movl
mov
orl
mov
movl
push
xor
or
mov
add
jmp
mov
mov
movl
inc
movl
cmp
movl
jb
mov
add
mov
mov
movl
cmpl
je
cmpl
jne
pushl
pushl
pushl
pushl
push
call
cmpl
jne
xor
xor
dec
mov
mov
dec
mov
jmp
mov
addl
xor
sbbl
add
movl
cmp
jmp
adc
in
in
jno
aad
dec
add
mov
and
jle
in
lcall
and
rorb
cmp
lret
sub
mov
rcrb
call
les
jae
test
pop
shrl
mov
mov
es
and
sbb
mov
push
dec
lock
fcompl
insb
push
jns
hlt
and
aas
adc
jo
int
fldenv
rcrl
sbb
clc
xchg
mov
ret
imul
fisttps
rcll
dec
into
jg
jne
or
dec
in
les
cmp
sub
in
inc
cld
jno
sbb
pop
adc
or
outsl
adc
cwtl
popf
imul
movsl
pop
mov
jmp
aaa
dec
push
inc
std
mov
push
cmpsb
ss
paddw
push
rclb
xchg
inc
push
into
and
out
leave
add
push
or
add
fstp
test
push
xchg
push
pop
test
stc
xorb
sbb
in
xchg
in
in
out
mov
inc
or
mov
rolb
cmp
add
push
stos
mov
hlt
testl
add
aas
pop
cmpsb
mov
jmp
push
shr
sub
pop
jle
popf
sub
adc
iret
jnp
fistpll
xor
rorb
aas
out
jp
sub
lahf
pop
inc
test
lret
or
push
lea
and
xor
xchg
je
xor
add
sub
push
sub
push
movl
cmpl
je
cmpl
jne
push
pushl
pushl
push
call
cmpl
jne
mov
dec
mov
xor
or
dec
mov
jmp
mov
mov
xor
jmp
mov
ja
jne
mov
insl
push
push
push
sub
mov
cmovne
icebp
jg
jle
adc
push
or
cwtl
int
sti
xchg
stc
push
arpl
fistpll
add
xchg
not
jmp
push
cmp
nop
out
xchg
mull
cmp
stos
loopne
test
pop
mov
popa
aad
pusha
rolb
std
push
in
pop
cmp
jecxz,pt
test
ffree
xchg
pop
lret
out
cmc
dec
xchg
push
cltd
xor
ret
sti
cmp
cli
and
cmp
jo
shrl
jecxz
js
adc
test
outsb
sbb
pop
sbb
rcl
and
lcall
aas
inc
jle
repz
cld
inc
scas
push
mov
and
adc
loope
outsb
test
dec
nop
cli
dec
jle
test
pushf
push
inc
js
sub
push
mov
idiv
lahf
xchg
pop
std
lods
push
out
mov
outsb
mov
sub
shr
cmpsb
int3
scas
sbb
jne
push
lahf
popf
scas
cltd
clc
sub
notl
pop
pop
push
and
jns
jge
popf
push
push
inc
adc
inc
mov
push
xor
add
sahf
xchg
std
clc
and
or
outsl
inc
arpl
and
pop
int
jno
rdmsr
xchg
popf
cmp
inc
call
repz
lahf
movsb
mov
mov
add
movzwl
mov
mov
movzwl
xor
add
mov
mov
mov
inc
cmp
jne
pop
pop
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
mov
cmp
je
mov
jmp
mov
adc
adc
imul
jl
pop
mov
jle
jg
jle
push
test
xor
data16
out
inc
insl
sbb
push
lcall
ljmp
add
sbb
pop
mov
mov
and
neg
pop
sbb
cmpsl
dec
cld
push
jmp
std
mov
mov
repnz
jb
mov
mov
push
jb
xor
fs
fstpt
sbb
xchg
mov
pop
sahf
int
inc
jp
movsl
ss
pushf
push
cs
dec
mov
mov
sbbb
xchg
jo
repnz
testl
pop
popf
pop
lahf
insl
cltd
insl
mov
out
hlt
xchg
xorl
mov
aad
out
aaa
jmp
jg
pop
jb
mov
jecxz
xchg
outsl
rcll
pop
inc
pop
divl
hlt
mov
sbb
jp
mov
sub
mov
cmp
cmpsb
in
dec
sbbb
mov
stc
mov
arpl
mov
dec
shrl
add
aas
test
cmp
jp
sbb
addr16
arpl
adc
cs
or
add
mov
jmp
test
mov
outsl
mov
out
add
ret
insb
pop
mov
fsubrl
inc
out
sbb
push
bound
xchg
clc
imul
or
add
test
inc
clc
mov
movsbl
xor
add
cmp
je
movl
lea
mov
mov
addl
mov
mov
xor
lea
mov
jmp
sub
sub
test
pop
cld
add
push
add
jle
jg
jle
pop
in
pop
pop
jmp
out
mov
daa
cmpsb
xor
dec
lcall
popf
mov
les
push
mov
mov
cmp
cmp
lea
dec
test
loop
insl
in
out
dec
mov
je
push
and
shrb
dec
aam
pop
jnp
cld
fists
lods
jmp
and
mov
mov
test
fwait
lds
add
lcall
hlt
dec
mov
dec
sbb
sbb
cmp
js
jp
or
fcom
add
lods
push
sub
clc
arpl
mov
jmp
out
push
out
dec
lock
imul
cmp
push
call
jnp
insb
pop
aaa
sbb
sbb
inc
or
test
pop
xor
ljmp
mov
cmpsl
mov
mov
movsb
xor
push
dec
xchg
pop
sar
shrb
jl
add
sbb
out
stc
xor
mov
push
mov
or
jo
mov
rol
mov
hlt
jns
movsb
or
imul
push
xchg
sub
popa
add
or
je
and
idivl
out
cmp
pop
push
mov
les
lods
sub
roll
fdivrp
in
sub
push
fcmove
test
loopne
fwait
or
sbb
and
push
or
cmp
insb
into
sub
mov
fidivrl
repz
add
add
incl
jmp
mov
xor
jmp
ljmp
jo
fidivs
clc
addr16
addb
icebp
jg
jle
in
xlat
sub
xlat
cmp
and
arpl
xchg
xchg
icebp
sub
sub
rclb
imul
shr
add
sub
ljmp
inc
xchg
push
xchg
sbb
ret
mov
add
push
xchg
xchg
imul
or
fcmove
and
pop
scas
jno
jg
mov
dec
cwtl
mov
dec
and
adc
and
add
adc
or
loopne
jno
mov
jg
push
and
ja
rorl
test
cmc
hlt
dec
cwtl
ror
push
mov
mov
gs
fnstsw
outsb
pop
push
dec
lea
imul
gs
jae
fs
loop
pop
insl
add
pop
add
mov
cmpsl
test
add
stos
add
test
mov
outsb
stc
jnp
dec
sbb
mov
sub
mov
mov
dec
add
jne
pop
jns
stos
mov
xchg
pop
es
sbb
mulb
das
leave
int
repnz
jnp
push
dec
ficompl
or
mov
xor
ss
mov
andb
cwtl
shrb
xor
cmpsl
rolb
inc
repz
or
sub
and
jge
stc
es
repz
or
mov
pop
jae
xchg
mov
repnz
or
mov
pop
leave
ret
push
mov
push
neg
movl
mov
adcl
mov
sbbl
add
xor
cmp
movl
jne
and
mov
xorl
mov
add
jmp
jo
sbbl
roll
push
sbb
add
jle
jl
jle
dec
adc
adc
xor
rorb
scas
sbb
push
stos
and
jmp
xor
gs
inc
mov
data16
xor
mov
repnz
or
add
repz
ja
outsl
mov
in
daa
nop
inc
xchg
adc
incl
dec
and
pop
cmp
add
pop
mov
mov
cwtl
cwtl
popa
and
sbb
cmpsb
inc
fcoml
cli
fcomi
lahf
mov
mov
icebp
cmp
outsl
stc
insl
call
push
aas
push
jecxz
push
cltd
xchg
jp
cmpsb
push
loope
pop
cmp
in
das
cltd
sarl
sbb
xor
es
pop
hlt
in
cmpb
mov
stos
sbb
out
sub
fbstp
or
js
rcrb
push
cmp
xchg
into
pushf
scas
loopne
push
mov
out
sarb
ds
je
jb
bnd
imul
cmpsb
sbb
pop
jo
or
xchg
rolb
and
in
jl
push
data16
jb
fistpl
pop
lcall
repz
imul
mov
iret
iret
aam
mov
or
das
fwait
jne
add
inc
xor
scas
fistl
int
mov
shrb
sbb
nop
js
add
jmp
orb
out
clc
lret
add
push
std
inc
fwait
rcll
lds
push
std
pop
mov
or
xlat
outsl
aaa
leave
cmp
fmull
js
gs
sbb
ja
cmp
pop
mov
pop
mov
adc
xchg
xchg
fadds
ficoms
lods
mov
and
lret
mov
push
or
mov
or
push
mov
adc
cmp
call
mov
and
imul
cmp
mov
lret
jbe
daa
cmp
and
xor
iret
push
push
sbb
xor
pop
insl
int
test
xchg
and
rorb
add
or
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
call
jmp
mov
jmp
pop
pop
dec
pop
dec
xor
outsl
aam
bndstx
jl
jle
stos
push
lods
push
push
sub
ss
hlt
stos
pop
inc
pop
push
repz
loopne
shll
or
imul
aam
and
xor
stc
jb
sar
loop
dec
cmp
lahf
out
push
nop
aam
fsubs
mov
pop
test
lock
out
xchg
test
cmc
mov
orb
pop
adc
jl
xor
ljmp
jecxz
out
mov
xchg
adc
sbb
sti
dec
movsb
mov
divl
imul
les
mov
outsl
mov
cmc
nop
insl
in
sub
xchg
ljmp
adc
jne
sarb
sti
jl
xchg
cmp
mov
inc
jl
sbb
dec
pop
push
sbb
dec
icebp
rcrb
jbe
push
jg
cmpl
adc
push
ja
and
pop
movsl
in
sbb
mov
sahf
lcall
add
mov
mull
jle
rorl
paddd
xchg
pusha
popf
cmpsl
pop
nop
mov
push
mov
pop
mov
out
addb
xor
or
fsubrs
sahf
ljmp
inc
adc
push
testb
xchg
adc
in
cld
int3
adc
mov
sub
movsl
outsl
lret
mov
sbb
pop
lahf
pop
xlat
imull
repz
mulb
pop
adc
push
push
push
out
sub
lcall
jne
aad
cmp
push
outsb
loop
jne
leave
lds
xor
movsl
xchg
push
cmp
cwtl
xchg
push
mov
adc
xlat
fstps
repnz
cmpsb
sbbl
cmp
cmp
lea
push
mov
fcoml
imul
sub
jno
sbbb
rorl
add
pop
xchg
out
jne
dec
xchg
mov
jmp
icebp
xor
push
mov
mov
add
jmp
mov
imul
jl
mov
dec
jle
adc
sub
mov
xor
xor
divl
xchg
adc
fiadds
sub
mov
movsb
gs
jge
dec
ss
nop
pushf
in
jae
mov
jo
or
rclb
sub
lret
lret
int3
sbb
cmp
mov
mov
fcomi
arpl
sarb
pop
mov
mov
je
popf
leave
adcl
inc
lods
sbbl
in
mov
jnp
jge
cmpsl
adc
add
jecxz
add
cli
mov
das
pop
xchg
pop
test
scas
aaa
cmp
jnp
xchg
notl
aad
test
xchg
xchg
stc
adc
shlb
adc
ss
and
xchg
int
jp
pmaddwd
subb
push
inc
mov
test
and
and
xor
mov
lahf
subl
inc
mov
inc
mulb
aam
lcall
or
xchg
loop
fmul
xor
jge
pop
leave
dec
negb
and
ficomps
mov
mov
add
gs
sbb
and
repz
cmp
or
cmp
testb
jae,pt
push
in
lea
mov
and
sbb
enter
or
popf
lahf
push
sbb
in
jbe
or
fimull
pextrw
adc
inc
jecxz
scas
push
jo
xor
push
push
jmp
dec
roll
dec
sub
dec
cmpb
jmp
add
popa
iret
bound
inc
pop
into
std
aad
and
outsb
cmp
aaa
jbe
cmp
imul
sub
mov
in
addr16
mov
cmpsb
js
loop
push
test
pop
push
sub
adc
mov
addl
inc
mov
cmp
mov
aad
adc
jg
sar
jge
lahf
shrb
ret
push
adc
jmp
inc
jp
mov
pop
loop
in
mov
pop
fnstenv
repnz
adc
inc
push
pop
je
mov
jmp
mov
xor
add
jmp
mov
xor
add
leave
ret
subb
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
add
and
add
sub
add
add
pop
sub
add
add
js
add
mov
add
sahf
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
add
inc
sub
add
add
sub
add
add
test
add
mov
add
sahf
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
add
cmp
add
add
pop
sub
add
add
jl
add
mov
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
es
add
dec
sub
add
push
add
je
add
test
add
sahf
sub
add
mov
sub
add
out
sub
add
or
add
push
add
xor
add
dec
add
pop
add
je
add
xchg
add
lcall
add
add
fisubrl
add
out
add
cli
add
push
das
add
push
das
add
cs
add
inc
das
add
pop
das
add
outsb
das
add
jle
add
lcall
add
das
add
aam
add
in
add
cli
das
add
or
add
push
xor
add
xor
add
xor
add
add
add
jb
add
jle
add
mov
add
mov
xor
add
add
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
dec
xor
add
add
xor
add
add
xchg
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
xor
add
add
push
xor
add
add
js
add
mov
add
lcall
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
cmp
add
push
xor
add
add
add
cwtl
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
dec
xor
add
add
add
add
je
add
xorb
xchg
xor
add
add
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
push
xor
add
sub
add
ss
add
dec
xor
add
pop
xor
add
je
add
jle
add
mov
add
mov
xor
add
mov
xor
add
fidivs
add
clc
xor
add
or
add
push
add
and
add
sub
add
xor
add
cmp
add
inc
add
push
add
pop
add
fs
outsb
add
xorb
add
add
add
add
fdivs
add
hlt
add
or
add
and
add
add
add
inc
aaa
add
pop
aaa
add
jo
add
jle
add
mov
add
cwtl
aaa
add
movsb
aaa
add
mov
add
les
add
into
aaa
add
fidivl
add
repnz
add
push
cmp
add
cmp
add
cmp
add
add
dec
cmp
add
add
add
add
stos
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
add
sub
add
cmp
add
inc
cmp
add
add
cmp
add
add
add
xchg
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
add
add
add
ljmp
add
add
add
add
add
sub
add
add
add
ljmp
add
add
add
add
add
add
add
add
jo
add
je
add
js
add
je
add
mov
add
add
push
aaa
inc
inc
js
fs
data16
jo
aas
inc
outsb
gs
je
push
je
je
inc
inc
pop
inc
push
inc
dec
push
inc
inc
dec
dec
push
inc
inc
cmp
add
pop
and
add
add
add
enter
add
add
adc
add
pop
xor
add
daa
add
mov
and
add
daa
add
pushf
add
pushf
and
add
add
add
add
add
aaa
add
push
and
add
sub
add
cmp
add
add
add
cmp
add
and
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
add
and
add
sub
add
add
pop
sub
add
add
js
add
mov
add
sahf
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
add
inc
sub
add
add
sub
add
add
test
add
mov
add
sahf
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
add
cmp
add
add
pop
sub
add
add
jl
add
mov
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
es
add
dec
sub
add
push
add
je
add
test
add
sahf
sub
add
mov
sub
add
out
sub
add
or
add
push
add
xor
add
dec
add
pop
add
je
add
xchg
add
lcall
add
add
fisubrl
add
out
add
cli
add
push
das
add
push
das
add
cs
add
inc
das
add
pop
das
add
outsb
das
add
jle
add
lcall
add
das
add
aam
add
in
add
cli
das
add
or
add
push
xor
add
xor
add
xor
add
add
add
jb
add
jle
add
mov
add
mov
xor
add
add
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
dec
xor
add
add
xor
add
add
xchg
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
xor
add
add
push
xor
add
add
js
add
mov
add
lcall
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
cmp
add
push
xor
add
add
add
cwtl
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
dec
xor
add
add
add
add
je
add
xorb
xchg
xor
add
add
add
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
push
xor
add
sub
add
ss
add
dec
xor
add
pop
xor
add
je
add
jle
add
mov
add
mov
xor
add
mov
xor
add
fidivs
add
clc
xor
add
or
add
push
add
and
add
sub
add
xor
add
cmp
add
inc
add
push
add
pop
add
fs
outsb
add
xorb
add
add
add
add
fdivs
add
hlt
add
or
add
and
add
add
add
inc
aaa
add
pop
aaa
add
jo
add
jle
add
mov
add
cwtl
aaa
add
movsb
aaa
add
mov
add
les
add
into
aaa
add
fidivl
add
repnz
add
push
cmp
add
cmp
add
cmp
add
add
dec
cmp
add
add
add
add
stos
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
add
sub
add
cmp
add
inc
cmp
add
add
cmp
add
add
add
xchg
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
add
add
add
add
add
add
imul
popa
jae
push
add
push
add
je
arpl
insb
insb
push
outsl
jae
add
fs
imul
add
imul
jb
add
push
gs
outsb
jne
gs
jne
je
je
insl
add
pop
add
je
jns
inc
outsl
insb
outsl
jb
add
mov
imul
jae
bound
push
push
imul
add
push
imul
popa
bound
add
add
outsb
dec
arpl
add
stos
add
fs
jne
jae
jb
add
jae
popa
je
inc
arpl
insb
gs
je
jb
add
inc
jb
popa
je
push
outsl
jo
jo
outsb
jne
add
popa
jb
jo
gs
add
mov
imul
imul
add
je
gs
popa
addr16
js
jb
dec
outsb
outsw
add
inc
insb
outsl
jae
inc
gs
je
jo
add
add
outsb
dec
outsb
jo
je
gs
je
jo
add
je
insl
push
popa
jb
insl
gs
jb
dec
outsb
outsw
inc
add
push
gs
outsb
jne
je
insl
dec
outsb
outsw
push
add
adc
gs
jae
inc
inc
add
popa
insb
imul
je
add
arpl
outsl
push
push
outsb
outsl
ja
add
insb
push
imul
imul
fs
gs
outsb
je
cmp
arpl
popa
imul
outsb
add
sahf
add
push
arpl
jo
jns
mov
dec
jae
push
jo
popa
dec
jne
gs
arpl
mov
inc
jb
ja
outsb
jne
popa
jb
mov
push
popa
bound
fs
gs
dec
jne
push
add
or
inc
gs
inc
inc
js
jno
push
gs
imul
outsb
add
xchg
add
je
outsl
jns
arpl
insb
gs
je
jb
popa
bound
push
add
je
jb
jo
add
sti
add
dec
outsb
push
arpl
push
push
jae
jb
bound
arpl
outsw
jb
popa
je
outsl
outsb
push
add
add
imul
jae
addr16
add
xor
jb
outsl
dec
gs
push
add
addb
outsb
data16
popa
je
push
arpl
add
ja
arpl
add
mov
inc
jb
ja
jb
insl
gs
outsl
outsb
je
outsl
insb
add
inc
add
je
gs
inc
insb
addr16
jb
jne
dec
je
insl
add
fs
outsb
jo
je
mov
inc
gs
jb
insl
gs
jb
arpl
mov
inc
gs
imul
outsl
arpl
add
outsl
addr16
outsl
js
popa
jb
insl
inc
add
add
imul
popa
jae
inc
add
dec
add
jo
inc
arpl
insb
gs
je
jb
popa
bound
add
inc
gs
jns
je
insl
dec
outsb
jne
mov
ja
je
je
push
add
loope
inc
imul
outsl
ja
add
inc
jb
popa
je
push
imul
inc
add
add
popa
bound
imul
cmp
inc
push
jo
jb
add
or
push
imul
je
gs
add
add
push
jae
push
imul
arpl
add
aad
dec
gs
popa
addr16
outsl
js
add
add
jae
popa
addr16
outsl
js
js
add
inc
gs
outsl
jo
imul
dec
add
je
outsb
jne
loop
inc
imul
outsl
ja
js
add
fs
outsb
jne
add
add
jae
popa
addr16
outsl
js
add
add
jne
insb
push
arpl
add
outsb
imul
add
inc
gs
imul
js
dec
outsb
addr16
push
add
mov
push
imul
ja
add
add
je
insb
imul
jb
les
dec
popa
jo
imul
arpl
add
fs
je
imul
dec
imul
jne
je
insl
add
xor
inc
gs
outsb
jne
je
insl
inc
outsl
jne
je
add
add
imul
arpl
dec
fs
jb
insl
inc
imul
jns
mov
dec
outsb
je
jb
arpl
arpl
add
je
outsl
jne
insb
gs
insb
imul
add
daa
add
je
gs
outsl
popa
jb
push
jns
gs
add
je
jae
outsb
arpl
jns
je
je
add
sub
inc
push
ja
jb
jne
push
add
popf
add
insb
outsl
addr16
outsl
js
popa
jb
insl
push
add
add
popa
jb
outsl
ja
jb
add
and
inc
push
dec
outsb
jne
add
imul
outsl
ja
jo
popa
je
add
mov
imul
movl
imul
gs
js
add
pop
add
je
arpl
jo
jns
add
add
je
insb
popa
jae
dec
outsl
outsb
addr16
add
add
jo
imul
imul
push
jb
outsb
jae
popa
je
inc
arpl
insb
gs
je
jb
add
inc
push
outsb
jne
popa
imul
add
push
gs
arpl
insb
insb
dec
outsb
outsw
add
outsl
ja
gs
outsl
jb
addr16
jne
fs
imul
lahf
add
jo
je
push
popa
addr16
add
sub
jb
gs
push
add
add
popa
insl
gs
arpl
add
data16
je
arpl
mov
dec
outsb
jbe
insb
imul
add
push
gs
outsl
jb
addr16
jne
fs
imul
add
je
arpl
gs
imul
add
inc
push
fwait
add
insb
outsl
popa
fs
gs
outsl
popa
jb
dec
popa
jns
jne
add
pushf
add
dec
arpl
imul
gs
outsb
jne
je
imul
add
fs
outsb
jne
add
add
imul
outsb
outsl
ja
gs
popa
addr16
add
cmp
push
gs
jne
jae
jb
add
je
gs
popa
addr16
add
inc
outsl
jb
addr16
jne
fs
imul
add
gs
je
inc
imul
jb
insl
push
add
stc
add
je
insb
popa
jae
dec
outsl
outsb
addr16
add
inc
push
xor
cs
insb
add
mov
push
gs
outsl
jbe
inc
imul
jns
add
add
dec
gs
jbe
inc
jb
je
arpl
push
arpl
outsb
add
pop
add
gs
imul
bound
gs
add
xchg
imul
jne
jb
add
mov
jo
jb
popa
je
add
or
gs
jne
jb
outsb
je
imul
jns
add
cmp
dec
jo
outsb
inc
jbe
outsb
je
add
dec
add
insb
outsb
inc
add
add
je
push
dec
outsl
arpl
add
push
outsb
push
gs
js
gs
imul
gs
add
je
popa
insb
inc
jb
add
inc
outsl
insl
jo
je
jb
popa
insl
gs
add
int
inc
jb
popa
je
inc
jbe
outsb
je
add
movsb
add
outsb
arpl
dec
outsl
add
outsl
add
outsb
insl
popa
jo
imul
insb
add
push
insb
gs
sti
add
je
popa
jae
inc
jb
outsl
jb
add
add
je
jb
arpl
fs
jae
add
addb
jb
gs
imul
rolb
inc
gs
popa
je
inc
outsl
jb
popa
je
add
outsl
add
je
imul
popa
je
add
jge
push
gs
data16
gs
imul
push
add
xchg
add
outsl
bound
push
gs
insb
insb
outsl
arpl
fildl
inc
jb
popa
je
dec
popa
imul
in
push
gs
outsl
insl
insl
push
imul
add
gs
jns
je
insl
push
imul
gs
jns
je
insl
inc
imul
jns
add
add
inc
popa
fs
gs
fs
je
add
mov
jo
insb
insb
outsl
arpl
and
inc
outsb
jne
push
gs
jne
arpl
jns
gs
add
push
add
fs
imul
js
add
mov
inc
outsl
insl
jo
jb
push
je
imul
add
gs
jb
outsl
jb
outsl
fs
out
inc
jb
popa
je
push
gs
outsl
je
push
push
add
popl
inc
insb
outsl
bound
inc
insb
popa
addr16
mov
popa
imul
insb
gs
bound
arpl
add
je
jne
bound
inc
outsl
jb
popa
je
add
xchg
add
imul
outsl
dec
jne
je
inc
jns
add
inc
gs
jns
je
insl
inc
gs
jne
je
dec
dec
popa
outsb
addr16
add
test
inc
gs
imul
imul
jns
add
jl
inc
fs
je
insl
inc
add
stos
add
gs
jb
outsl
insl
insl
inc
jb
outsl
jb
add
add
jae
jb
insl
jo
inc
add
add
gs
push
inc
outsl
outsb
je
js
add
repnz
gs
je
push
popa
imul
insl
gs
add
movb
je
arpl
imul
gs
je
inc
imul
imul
jae
jne
arpl
add
add
fs
imul
add
mov
inc
gs
inc
push
add
pop
add
imul
add
dec
inc
push
dec
inc
dec
xor
cs
insb
add
add
inc
push
inc
outsl
outsb
je
add
add
imul
add
add
je
jo
outsb
inc
imul
add
or
inc
imul
push
add
insl
fs
xor
cs
insb
add
cmc
add
outsl
outsb
je
outsl
insb
data16
add
gs
popa
jo
pop
je
jo
add
mov
pop
pop
insw
outsl
fs
insl
add
gs
add
pop
pop
arpl
insl
outsl
fs
mov
insl
bound
outsl
ja
jae
add
add
insl
jae
pop
gs
je
add
imul
add
outsb
imul
add
arpl
outsl
imul
xchg
add
popa
insb
outsb
jne
add
add
imul
ja
jae
popa
je
add
add
jb
jo
add
out
jae
jb
outsl
insb
insb
add
add
arpl
outsl
insl
bound
add
arpl
jb
jb
add
ljmp
jo
add
add
jb
push
add
ja
arpl
data16
insl
bound
gs
add
int3
add
outsl
jb
add
add
outsl
ja
outsl
ja
jb
add
insb
outsl
arpl
add
add
jns
je
insl
add
sub
ja
jae
bound
add
add
jae
jo
imul
pop
pop
arpl
inc
imul
jbe
jo
imul
add
jne
arpl
mov
insb
outsl
arpl
je
insl
add
data16
jne
push
ja
jae
push
add
js
je
pop
add
insb
insb
outsl
arpl
add
add
je
bound
add
jb
outsb
je
or
gs
add
cmp
arpl
outsl
jne
add
add
gs
je
add
bound
popa
jb
push
pop
jae
je
jae
jb
popa
je
gs
add
jb
pop
pop
addr16
popa
imul
enter
je
push
push
push
inc
push
push
cs
insb
add
push
add
imul
inc
outsl
outsb
je
outsl
insb
jae
js
add
dec
insl
popa
addr16
imul
fs
insl
popa
addr16
add
adc
inc
jb
popa
je
push
jb
jo
jb
jns
push
popa
addr16
add
dec
add
popa
addr16
imul
insb
popa
arpl
arpl
add
add
popa
addr16
imul
dec
arpl
push
imul
insl
popa
addr16
imul
dec
arpl
add
dec
inc
push
dec
xor
cs
insb
add
les
inc
outsb
jne
inc
outsl
outsb
je
popa
insl
imul
add
add
je
dec
inc
inc
outsl
insb
outsl
jb
popa
bound
add
add
je
gs
dec
jne
push
add
popa
je
dec
inc
push
add
bound
gs
outsb
add
mov
inc
gs
gs
inc
inc
add
inc
add
je
gs
arpl
popa
jo
add
add
je
imul
jae
movl
inc
inc
add
jne
inc
imul
addl
gs
gs
inc
js
outsb
je
outsl
imul
stos
add
gs
je
push
outsl
insb
jns
outsl
outsb
push
outsb
add
xchg
add
gs
je
inc
dec
inc
imul
add
gs
dec
bound
arpl
outsb
add
je
imul
add
gs
je
inc
jb
jae
dec
outsb
imul
add
je
gs
dec
gs
imul
inc
jb
popa
je
inc
imul
add
je
imul
outsb
jae
outsl
outsb
inc
js
add
popa
je
inc
outsl
outsb
je
outsb
imul
iret
add
insb
arpl
insb
gs
gs
add
jne
fs
arpl
add
gs
je
push
outsl
insb
imul
add
add
je
jne
jb
outsb
je
bound
arpl
stos
add
gs
je
push
arpl
outsb
add
add
je
bound
je
jb
arpl
add
add
insb
arpl
imul
add
gs
je
inc
outsl
outsb
je
add
add
jne
inc
outsl
outsb
je
push
add
dec
add
je
outsl
outsb
je
popa
je
add
gs
outsl
inc
js
add
gs
popa
insb
gs
gs
outsb
je
imul
gs
dec
jne
push
add
rolb
push
gs
imul
jae
movsb
add
je
insb
je
add
jae
je
imul
dec
jb
inc
js
xlat
add
insb
insb
push
outsb
add
popa
je
inc
insb
insb
imul
outsb
dec
outsb
imul
add
je
gs
inc
js
outsb
je
outsl
imul
push
gs
jp
push
popa
insb
gs
gs
add
je
jb
jae
dec
jb
inc
js
mov
jae
je
outsb
add
add
je
jne
inc
add
mov
insb
imul
je
add
inc
inc
dec
xor
cs
insb
add
push
popa
je
inc
imul
outsb
jae
outsl
outsb
inc
add
push
dec
dec
push
inc
push
dec
cs
insb
add
popa
jns
pop
je
push
imul
lcall
add
or
dec
ja
cmp
dec
jp
cmp
dec
ss
add
dec
ret
dec
push
push
pop
push
cmp
dec
ret
dec
cmp
dec
jp
cmp
dec
ss
imul
dec
push
bound
arpl
dec
jns
ret
dec
cmp
dec
dec
dec
xor
ret
dec
push
jb
jae
orl
js
jns
aas
dec
jbe
ret
dec
ds
dec
dec
cmp
dec
xor
dec
push
sbbb
setae
nop
js
jns
aas
dec
jbe
ret
dec
ds
dec
dec
cmp
dec
xor
dec
push
xchg
pop
xchg
bt
mov
aas
dec
push
dec
cmp
dec
push
dec
xor
ret
dec
push
mov
or
aas
dec
push
dec
cmp
dec
pop
dec
cmp
dec
xor
mov
ret
or
js
jns
aas
dec
push
dec
cmp
dec
dec
dec
xor
ret
dec
push
ret
psrlq
sarb
jns
aas
dec
push
dec
cmp
dec
dec
dec
xor
ret
dec
push
rcrb
rorl
jecxz
loopne
lock
aas
dec
insl
dec
ret
dec
cmp
dec
ret
dec
push
loop
jecxz
repz
js
jns
js
jns
ds
jg
ret
dec
cmp
jb
ds
dec
dec
cmp
dec
xor
add
adc
adc
jns
aas
dec
add
data16
pop
cmp
add
inc
add
ds
add
cmp
add
inc
add
cmp
add
mov
inc
add
cmp
inc
add
cmp
inc
add
cmp
mov
inc
add
ds
add
test
push
inc
add
or
inc
add
fisttpll
aaa
inc
add
inc
inc
cli
jne
in
incb
mov
cmp
add
xchg
pushf
clc
xor
pushf
clc
cmp
pushf
clc
cmp
xchg
pushf
clc
aas
xchg
pushf
clc
cmp
pushf
clc
cmp
pushf
clc
in
stc
add
cmp
add
pop
dec
imul
pushf
clc
sahf
jmp
add
push
cmp
pushf
or
jecxz
inc
add
adc
add
add
inc
add
imul
dec
add
add
add
inc
add
imul
add
dec
add
add
imul
jo
outsl
add
insl
add
add
insb
add
data16
imul
add
imul
outsl
add
add
push
add
add
add
add
inc
dec
dec
imul
inc
dec
dec
inc
dec
jne
dec
dec
push
imul
imul
inc
imul
insb
imul
dec
push
inc
outsl
imul
dec
dec
inc
dec
dec
sub
inc
inc
add
add
fs
addr16
add
dec
pop
dec
dec
dec
push
dec
pop
dec
push
dec
or
dec
add
pop
dec
pop
dec
pop
dec
or
dec
dec
dec
dec
dec
pop
dec
dec
dec
or
dec
add
dec
dec
pop
dec
push
dec
dec
dec
arpl
dec
pop
dec
ret
add
add
add
add
outsb
lea
outsb
lods
outsb
mov
outsb
in
outsb
std
outsb
or
outsb
cmp
outsb
jb
jae
jo
jno
jbe
ja
je
jne
mov
outsb
mov
outsb
mov
pop
jge
jge
jge
jns
mov
bound
add
mov
aaa
dec
jle
jno
mov
imul
inc
xlat
rcll
rcr
leave
xchg
fs
push
rcrl
shll
mov
inc
add
shll
and
inc
push
outsl
push
dec
cmp
add
in
adc
inc
inc
jae
inc
jae
popa
push
pop
pop
outsb
jbe
jns
push
imul
jns
inc
jo
data16
jp
insb
je
jns
popa
push
push
push
popa
push
push
push
dec
je
push
bound
push
arpl
inc
jne
push
outsl
push
inc
inc
push
imul
push
jb
add
js
popa
inc
push
insb
pop
ja
je
add
insb
jb
inc
push
push
inc
insb
add
jbe
push
push
dec
imul
add
in
jnp
jnp
cmc
lcall
and
jmp
xlat
add
add
add
ss
push
lea
repnz
mov
and
in
lods
call
fs
es
dec
pop
incb
and
dec
add
inc
insb
int3
xlat
mov
or
sub
cmp
or
out
sub
inc
cltd
jg
inc
add
sbb
data16
jb
and
movl
lahf
sahf
mov
cwtl
pushf
jg
sbb
pop
in
dec
add
push
mov
cmp
insb
pop
dec
rcrb
std
movsl
xchg
push
cltd
mov
arpl
pop
mov
or
pop
push
into
mov
fsub
push
mov
call
aaa
loop
push
push
les
dec
xor
or
add
cmp
mov
or
inc
mov
cltd
inc
pop
lods
jmp
mov
xor
push
mov
lret
sbb
cli
test
test
jns
inc
mov
insb
movsb
repnz
in
enter
je
pop
ficoml
in
jle
lcall
movsb
fadds
add
add
add
adc
scas
in
sbb
cwtl
rcl
out
inc
xchg
stc
cld
push
and
insb
sub
xchg
inc
lds
call
idivb
xchg
sbb
cmp
enter
mov
cmp
fnsave
inc
jb
xor
sbb
cmp
push
jecxz
cltd
es
push
aam
pusha
hlt
aaa
mov
jae
ds
push
out
jmp
mov
mov
pop
lret
mov
pop
xor
loopew
cmp
and
test
xchg
movsb
adc
dec
inc
lret
push
lret
dec
pop
andl
stos
and
pop
inc
lea
fs
push
dec
mov
jl
gs
and
mov
inc
sbb
pop
movsb
js
rol
fisttpl
nop
outsl
call
pop
test
pop
adc
idivl
push
add
xor
loop
aam
mov
jb
ds
loope
das
push
popa
jecxz
mov
push
sahf
add
add
mov
push
xchg
xchg
lret
flds
add
add
add
imul
dec
nop
test
cmp
out
adc
out
jbe
inc
pushf
arpl
call
dec
es
add
lret
mov
jmp
jle
push
push
aaa
test
pop
inc
lock
int3
sahf
fs
mov
mov
icebp
aad
cmp
pop
push
in
sbb
shlb
xor
mov
jae
out
push
rorl
add
pop
popl
add
lds
in
js
cmp
jl
aam
imul
lods
cmpsb
insb
jbe
int3
push
ja
xchg
inc
mov
popa
subb
push
jmp
ret
aam
jb
fwait
dec
test
mov
movsl
sub
outsb
insb
pushf
mov
xchg
pusha
dec
jle
bound
xchg
in
push
or
cld
adc
mov
mov
push
outsb
scas
das
ljmp
add
add
mov
roll
xor
dec
fiaddl
add
add
add
cmp
in
xor
scas
or
pop
lea
loopne
lods
add
mov
xchg
fisttpll
jmp
sub
xor
cmp
loop
aas
pop
push
fnsave
dec
mov
and
cmp
mov
inc
inc
ret
arpl
inc
dec
fwait
rol
pop
repnz
stos
loope
inc
addb
repnz
xor
in
mov
xor
cld
loop
jg
and
pop
mov
or
sbb
jecxz
sbb
or
mov
sbb
sub
in
inc
jae
popf
mov
adc
sub
pusha
or
icebp
fistpll
les
and
and
inc
clc
adc
pop
jmp
mov
dec
cmpsb
decb
shrl
shl
imul
je
loopne
jg
loope
out
mov
push
subl
sbb
loop
mov
add
add
inc
or
pop
dec
or
rclb
add
add
add
repnz
orb
xor
xor
fbld
sub
loopne
or
inc
xchg
jmp
les
push
or
cwtl
test
mov
xor
data16
loop
mov
lock
aad
push
dec
aas
sub
push
inc
out
arpl
hlt
neg
mov
dec
aad
outsl
rolb
mov
movsl
dec
arpl
push
cmp
loope
icebp
pop
data16
sbb
jnp
in
inc
mov
push
call
push
push
loope
mov
aas
inc
leave
or
imul
cmpsb
adc
inc
and
xchg
clc
lods
xchg
rclb
xchg
rcrl
cmc
popf
push
mov
hlt
lods
xor
cltd
mov
je
out
jne
arpl
stc
jp
ljmp
mov
jae
push
bndstx
in
pop
or
insb
sub
push
hlt
jo
hlt
pop
push
add
add
cmc
insl
cmc
out
lcall
enter
dec
faddl
add
add
add
jle
fildl
rclb
ret
rcll
add
mov
sub
mov
imul
gs
movsl
xchg
nop
mov
sbb
rorb
adc
fldcw
andb
rorb
xchg
jle
lahf
dec
leave
sbb
outsl
iret
inc
popf
jge
add
scas
inc
mov
repz
jl
das
dec
imul
nop
int3
cmpsl
dec
hlt
cs
xor
jns
pop
dec
dec
push
or
and
xor
mov
add
int3
adc
push
mov
out
addr16
pushf
int
das
cld
xchg
jmp
inc
stc
nop
xchg
cmp
dec
pop
out
mov
pusha
enter
arpl
mov
xor
dec
push
pop
xchg
dec
pop
push
dec
movsl
das
mov
jge
ss
movsl
faddl
cli
loopne
push
xor
add
add
add
outsl
jle
aas
mov
cmp
fldl
add
add
add
call
xchg
adc
push
popf
jae
cld
rorb
pop
cmovnp
push
lret
clc
cmp
test
mov
xlat
xor
sbb
out
adcl
test
mov
sub
mov
xor
loop
call
or
push
mov
adc
fwait
outsb
ret
addl
into
cmp
rorl
aam
out
out
rol
push
push
outsl
mov
adc
aas
xor
dec
out
sahf
push
sub
ret
mov
push
xor
jge
mov
scas
sub
repnz
xchg
inc
fimuls
bound
fwait
pop
loopne
scas
leave
pop
jae
in
cmpsl
ljmp
daa
lods
inc
ja
xchg
outsb
pop
inc
mov
dec
sub
inc
outsl
test
lock
xchg
call
fstpl
mov
adc
out
shlb
add
add
add
jle
and
scas
sti
jle
pop
push
pop
out
cmp
fiadds
add
add
add
inc
push
jns
int3
or
idivl
js
sbb
jmp
inc
inc
dec
push
fcomp
sbb
jp
movsl
xor
arpl
pop
repnz
shll
xchg
jo
frstor
es
psadbw
adc
xchg
jge
into
nop
cmp
dec
jmp
dec
leave
test
cs
mov
pop
mov
add
test
jo
dec
mov
fldenv
adc
or
and
aaa
add
fistpll
xchg
cwtl
call
mov
enter
out
das
sub
out
xchg
jae
test
inc
into
shll
or
shlb
arpl
dec
add
insl
push
arpl
adc
lret
xor
dec
out
stos
pop
fstpl
sub
xchg
sub
test
dec
push
sbb
cltd
pop
inc
mov
pop
cli
inc
sub
cli
jp
push
lahf
fnstcw
ss
lahf
stc
bound
sbb
filds
add
add
add
push
pop
cli
sub
mov
xor
mov
cmp
sub
add
sahf
cmp
pop
repz
test
mov
jno
add
sbb
mov
and
mov
adc
or
pop
testl
jb
adc
mov
mov
lods
loopne
mov
jne
inc
flds
mov
popa
aam
adc
pop
and
cltd
lods
push
or
rorb
lret
sbb
sub
nop
mov
js
outsb
daa
std
sub
sub
js
push
or
sub
js
imul
data16
aaa
imul
lock
jmp
lcall
test
insb
in
sbb
adc
pop
mov
call
push
push
imul
lds
insl
push
mov
push
jecxz
repnz
bound
and
stos
cmp
mov
subl
add
xor
push
jl
jle
insb
out
adc
cltd
clc
mov
loopne
add
add
add
jp
fsubl
pushf
pop
lret
in
cmpsl
mov
push
dec
shrl
mov
sbb
mov
out
sbb
inc
xchg
scas
jmp
mov
cmovs
sub
fsubs
data16
into
lock
call
cmp
mov
push
cld
dec
adc
inc
inc
std
push
mov
xlat
sub
inc
pop
dec
fwait
mov
xlat
dec
xor
xchg
jge
repnz
pop
jmp
data16
cmp
adc
data16
cmp
ffree
icebp
pop
mov
ja
dec
shr
aad
ret
clc
jno
hlt
push
cld
xchg
sti
pop
or
in
adc
fsubp
push
dec
push
rcl
mov
sub
stc
ret
ljmp
fisttps
cmpb
add
outsb
lods
bound
sbb
pushaw
or
or
and
inc
sub
out
scas
push
mov
adc
in
xor
adc
loopew
add
add
add
pushf
outsl
jbe
mov
addr16
adc
lret
arpl
pop
rcrl
cwtl
loop
push
fcmovne
sub
pop
jnp
cmpsb
mov
mov
push
fst
mov
adc
ja
xor
push
jnp
aas
push
pop
xchg
or
mov
cwtl
pop
ss
orl
xchg
leave
and
das
jne
pop
mov
cld
cs
or
mov
xchg
insl
xchg
fiadds
sbb
lret
in
call
cwtl
cmp
fbstp
test
sbb
and
nop
mov
dec
ret
leave
mov
mov
dec
ljmp
cmp
mov
cli
nop
lods
gs
ja
outsl
dec
and
dec
dec
push
pop
jbe
repz
movsl
pop
inc
inc
dec
loop
mov
add
adcb
and
cmp
xchg
das
push
stos
insb
lcall
add
data16
jne
mov
lcall
add
add
add
jle
les
or
jge
xchg
jecxz
jmp
and
divb
aas
cmpsl
sbb
cmp
es
xor
mov
icebp
loope
mov
push
push
mov
lret
xor
push
sahf
mov
or
jge
mov
mov
stos
lret
sub
adc
cli
cmp
fsubrs
and
iret
cwtl
mov
sbb
jnp
push
inc
xchg
xor
inc
lods
fcom
cmp
fnstsw
arpl
inc
js
mov
outsb
je
gs
cmp
xchg
fs
push
mov
xlat
adc
xchg
rcrl
stos
jg
xor
jno
pop
es
mov
stos
mov
imul
mov
cmp
inc
int3
xchg
jo
je
outsl
mov
push
loopne
fcmovu
es
and
inc
ret
push
jge
or
sub
pop
xor
loopne
xchg
jnp
add
jnp
sti
xchg
lahf
mov
scas
push
jcxz
add
add
add
int3
xor
mov
icebp
or
mov
mov
jecxz
cmpl
pop
add
scas
mov
clc
movsl
lahf
ret
mov
pop
jno,pn
pop
push
dec
push
test
xchg
adc
cmp
push
pop
das
insl
mov
inc
jp
cmp
xorb
shll
je
cmp
add
sub
stos
lea
or
dec
lret
jbe
fsts
push
sbb
mov
lret
out
lods
mov
dec
dec
dec
movsl
sbb
push
xchg
jbe
inc
test
add
enter
cmp
mull
sub
repz
insl
adc
xorl
mov
push
lret
popf
mov
push
cmpsl
pop
add
sarl
xor
xor
arpl
add
add
pop
sarl
mov
push
addr16
add
add
add
mov
arpl
mov
out
adc
mov
sub
sub
push
ss
cmp
push
mov
mov
movsb
cmpsl
push
mov
data16
ljmp
jbe
push
mov
jge
repz
mov
jno
aad
fmul
mov
into
xor
xchg
test
stos
and
test
sti
inc
or
jo
dec
in
jmp
cmp
sbb
rol
mov
inc
push
arpl
sbb
in
jecxz
popf
jecxz
or
les
popa
sub
cmc
idivl
push
cwtl
xor
add
sahf
out
leave
shrb
push
xor
pop
adc
and
stc
in
mov
sbb
dec
pop
cmpsl
fwait
shl
icebp
scas
sbbb
loope
insl
lock
std
repz
in
add
add
add
or
or
daa
dec
ret
or
xor
jge
jge
add
xlat
mov
out
adc
iret
add
push
cmp
gs
insb
push
push
mov
fwait
leave
and
fcoms
jns
push
int3
test
std
jb
ret
mov
and
sub
pop
insb
in
jo
mov
movsb
inc
cmpsl
xor
push
cmp
xor
push
mov
out
in
jg
or
xchg
leave
adc
ret
sub
movb
pop
push
scas
leave
test
loope
sti
dec
dec
dec
lock
loope
repnz
aaa
cld
test
movsb
int
adc
xor
cmpsl
popa
inc
stc
outsb
pop
or
xor
out
dec
push
xchg
sub
adcl
dec
testl
pop
out
xor
sarl
int
push
testb
in
mov
jmp
jae
in
lods
pop
ja
out
add
add
lock
cmp
arpl
je
nop
cmp
addr16
add
add
add
and
outsb
cmp
cmp
fadd
pop
aas
ret
aaa
nop
pop
loopne
push
in
adc
popl
cltd
fnsave
xlat
xchg
mov
je
mov
inc
fisubs
cmpsl
imul
push
xor
int
gs
mov
rclb
lds
inc
lock
add
jmp
aam
dec
pop
dec
push
repnz
jp
outsl
lds
cmp
mov
mov
pop
sbb
fcmovu
push
sahf
movsb
adc
pop
mov
outsl
rclb
xor
push
or
loop
pop
enter
call
loop
stos
pop
xchg
mov
rcll
or
pop
add
xor
insb
adc
rdmsr
dec
fmuls
ret
inc
pop
push
lahf
sbb
cltd
push
gs
mov
mov
bound
std
xor
xor
jge
cmpsl
dec
cmp
insl
lcall
mov
inc
sub
fs
add
add
add
into
or
fstl
jne
lods
fldl
addr16
ret
pushf
mov
or
dec
std
mov
les
negb
mov
into
sub
sbb
ja
sbb
pop
or
xor
cwtl
imul
filds
out
xchg
iret
arpl
cmp
sub
jne
pop
mov
xchg
adc
subl
dec
repnz
idivl
pop
aad
inc
in
add
or
mov
or
loopne
dec
inc
pop
push
mov
mov
and
movsb
push
inc
cli
ljmp
das
adc
and
xchg
gs
pushf
cmp
sub
fistl
sbb
push
ja
mov
aas
mov
inc
lahf
jge
mov
push
mov
mulb
dec
mov
nop
lret
push
test
fs
push
add
add
xchg
in
mov
incl
rcrl
adcb
add
add
add
jle
decl
pop
mov
adc
add
push
xchg
mov
push
mov
mov
sbb
movsb
mov
ret
mov
sti
inc
add
fsubrp
mov
mov
dec
decb
jmp
lods
sub
xchg
stos
xchg
rcrl
test
pop
aad
xchg
lods
xor
push
mov
xor
mov
sti
test
mov
mov
pop
mov
das
dec
out
xchg
ss
mov
stos
fsts
push
xor
orl
sub
scas
mov
inc
out
sub
leave
xchg
addr16
xor
roll
pslld
into
jle
loopne
adc
cmp
fistl
xlat
xor
test
cmp
jae
pusha
push
cmp
or
dec
dec
inc
add
movsl
push
mov
pop
dec
mov
inc
dec
push
imul
add
add
sub
in
negl
sub
movsb
pop
cmpsl
cmp
add
add
or
adc
std
enter
dec
stos
xchg
cmc
push
push
xchg
jg
out
mov
scas
pusha
push
push
fcoms
or
rcrl
lds
imul
dec
jns
mov
pop
or
jg
adc
cmpsl
shrb
pop
mov
bswap
pop
push
loop
divl
pop
lods
mov
imul
test
sbb
out
or
aam
popf
stos
sub
loopne
sbb
pop
addr16
out
cwtl
lods
out
pop
in
lcall
fs
inc
xor
sub
popa
andl
cmp
mov
ja
dec
mov
inc
or
push
xchg
or
xor
mov
dec
add
jb
adc
or
ret
fbld
insb
fidivl
and
jno
mov
into
addr16
mov
and
leave
inc
lcall
aaa
pop
bound
push
pusha
sbb
cmc
scas
js
fistpll
stc
dec
push
std
mov
ljmp
cltd
mov
jo
or
xchg
xor
cltd
mov
std
push
bnd
aam
fwait
pop
xchg
outsl
loopne
bound
ret
dec
stc
testl
ljmp
pop
push
daa
inc
xchg
adc
xorl
xchg
jl
push
lods
test
xchg
add
add
clc
lds
jnp
repnz
sub
hlt
dec
sub
stos
xor
push
xor
ret
icebp
add
sub
aas
bound
dec
xchg
inc
mov
cmp
into
xor
push
or
cs
jmp
dec
shrl
sbb
movsl
jae
scas
dec
mov
and
mulb
int3
fnstenv
jge
daa
sub
mov
sbb
xlat
leave
mov
mov
sbb
push
rorb
loopne
dec
push
shll
cmpsb
pop
gs
adc
dec
popf
and
roll
stc
pop
mov
add
add
adc
push
push
push
mov
popa
addr16
add
add
add
cmp
pop
xor
repnz
xor
pusha
xorb
shll
sbb
mov
rorb
pop
push
and
test
dec
adc
adc
outsl
pop
inc
fwait
int
sbb
rorl
dec
aam
jne
cmp
rclb
xor
arpl
ljmp
clc
sahf
daa
icebp
imulb
int
enter
out
fdivrs
xchg
into
sub
aas
addr16
in
clc
enter
frstor
fcmovb
pop
jecxz
test
flds
mov
scas
push
cmp
js
pop
inc
int3
jge
inc
lret
push
pop
lret
xchg
cmp
inc
cmp
push
iret
stos
int3
jge
outsl
out
push
mov
mov
cld
pop
and
mov
cmp
dec
inc
mov
int
adc
dec
lock
sub
push
fisttpl
xchg
xor
push
push
stos
out
repnz
add
pop
lcall
les
push
cmpsl
add
add
add
add
subb
jbe
lds
adc
xchg
movsb
cmp
jae
cmp
fstl
inc
mov
out
mov
in
push
cmpsb
adc
push
test
and
and
ret
push
cmp
or
lods
xor
out
testb
pop
push
push
ljmp
sbb
jno
int
push
loope
or
fmull
imul
std
sbb
jl
sbbb
mov
dec
xlat
lahf
data16
inc
iret
add
loop
or
xor
leave
cmp
push
jns
push
lahf
jmp
ja
pop
stc
and
push
ret
aam
sub
ret
lea
out
inc
mov
aad
sub
out
adc
sbb
cmp
sbb
ds
or
pushf
push
aam
repnz
lahf
repz
loope
push
jl
into
cmp
push
cltd
fdivrl
pop
mov
push
decl
push
loop
mov
add
add
mov
jmp
push
test
pop
push
xor
push
sbb
xor
inc
cmp
mov
sarb
mov
mov
arpl
sub
xchg
mov
lods
pop
mov
add
call
ret
cli
lock
push
pop
divb
sahf
enter
xor
into
sub
xchg
xchg
push
mov
mov
shll
icebp
sub
shll
inc
push
lret
int
ficompl
imul
test
jp
xchg
mov
or
and
cmp
fcompl
hlt
jge
leave
adc
dec
xchg
dec
mov
jnp
mov
movsl
xchg
cwtl
sti
daa
mov
mov
xor
and
aaa
addr16
mov
hlt
cmp
mov
mov
add
jmp
in
push
sub
sub
add
add
add
push
cld
mov
scas
jb
gs
mov
push
divb
jl
lret
clc
dec
mov
dec
mov
push
sbb
push
daa
jbe
popf
aam
daa
out
adc
movsb
jg
mov
lods
mov
sarl
jge
lods
sbb
repz
add
ret
and
mov
fstps
dec
fists
and
aas
outsb
push
push
push
push
push
jle
cmp
rcl
dec
inc
adc
jle
call
stc
fildll
mov
lods
sbb
jl
or
or
aad
rcrl
out
cmpsb
in
dec
push
add
xchg
jo
push
in
cmp
xchg
dec
add
imul
xor
cmp
out
addl
rorl
xor
cmp
fwait
cmpsl
xchg
imulb
pop
xchg
xchg
xor
movl
scas
pop
sub
add
add
outsb
xor
mov
lcall
out
add
add
add
push
js
jbe
xchg
or
jnp
jmp
lock
mov
or
call
sti
cmp
fwait
or
pusha
movsl
mov
lea
and
aas
mov
enter
lods
jbe
jne
data16
jno
lret
jne
popa
movsl
jle
xchg
outsb
sbb
mov
cltd
lret
cmpb
xchg
xor
out
jmp
mov
adc
mov
jle
loop
mov
dec
cli
iret
and
out
mov
push
notl
sub
in
ljmp
es
and
add
push
lea
inc
sahf
dec
mov
or
fidivl
jp
std
mov
inc
or
mov
add
and
in
adc
and
rcll
iret
lock
add
or
sub
sub
add
repz
ror
lock
jnp
xor
xchg
pop
jmp
andl
add
add
add
inc
lock
pop
inc
adc
lea
push
xor
lret
aad
popf
pop
and
jo
clc
jns
or
dec
jne
test
push
test
mov
in
shll
jl
in
fucom
xchg
jecxz
daa
test
adc
sbb
lahf
mov
and
push
adc
imulb
ljmp
stos
outsl
xchg
pop
lret
sbb
aaa
or
rolb
test
cwtl
divb
outsl
outsl
fwait
bound
repnz
sbb
ss
add
inc
inc
cmp
push
pop
jge
icebp
pushf
adc
mov
add
shll
lahf
inc
sub
jg
sahf
sub
pop
fidivs
inc
dec
push
fldl
outsl
imul
cmp
nop
mov
pushf
in
sar
js
mov
xor
and
repz
fisubs
movb
icebp
add
add
add
mov
ret
dec
adc
and
sbb
test
dec
dec
lret
call
add
jp
add
mov
jae
pop
mov
sub
mov
xchg
inc
dec
adc
mov
mov
cmp
sbb
inc
pop
xor
incl
std
iret
fwait
dec
xchg
notl
cmp
ret
mov
fcoms
es
sahf
lds
fcmovu
addps
notb
dec
mov
or
xchg
and
mov
lock
xor
pop
push
push
rcrb
ss
dec
inc
outsb
popf
pop
mov
and
dec
test
push
pop
adc
lds
pushf
xchg
fsubrl
test
cmp
sbb
cmp
mov
fsubl
and
pop
in
data16
add
shl
outsb
rcrl
jmp
add
out
sbb
push
jns
aam
repnz
add
add
out
popa
xchg
cmp
xor
sub
repnz
mov
jbe
lods
mov
jl
jg
jne
dec
mov
mov
pop
dec
cld
incb
subl
adc
mov
nop
jns
jns
movsl
cmp
or
sub
sub
rclb
cmc
push
test
add
inc
stos
out
cli
lret
mov
mov
stc
subb
clc
adc
pop
xor
mov
mov
leave
push
mov
out
mov
xchg
test
sub
mov
or
dec
jl
xor
dec
lock
jge
mov
frstor
mov
inc
dec
jb
jle
pop
push
pop
loope
jecxz
in
ret
lea
adc
and
shll
or
push
jle
inc
dec
bound
mov
lods
inc
pop
aas
outsl
lods
xor
popf
fwait
push
jp
ret
fwait
sti
sahf
jbe
pop
mov
inc
scas
lods
jbe
push
jg
mov
xchg
shrl
cmc
scas
sub
mov
repz
add
add
les
xchg
idivb
add
pop
inc
xor
lods
shrb
jne
adc
jo
shlb
sbb
mov
xchg
and
rorl
outsl
lea
ret
and
cmpb
mov
rclb
in
xor
add
xchg
in
xor
xor
rcrl
or
outsl
cmc
aad
cwtl
xor
les
and
rcl
std
rorb
aas
jg
in
aad
int3
sbb
repz
fisttpl
adc
xor
add
adc
nop
jnp
adc
jno
inc
out
push
and
cmp
std
aad
rorb
xor
add
pop
dec
scas
cmpsl
xchg
stos
sbb
shrl
subb
inc
and
mov
stos
sahf
leave
adc
arpl
dec
jl
ds
pop
or
add
pusha
rorb
cmpsb
mov
pushf
addr16
add
add
add
repz
shlb
fnstsw
and
xchg
out
push
cltd
jo
pushf
push
inc
sbb
clc
mov
jmp
push
repnz
iret
fnstcw
jbe
dec
mov
enter
insl
inc
xor
sub
pushf
pcmpeqd
sub
call
mov
out
push
jnp
imul
mov
or
xor
or
test
push
fwait
in
mov
push
xor
jnp
nop
pop
aad
mov
cmpsl
mov
dec
lods
lahf
mov
cli
insl
insl
lea
or
pushf
xor
loopne
mov
loop
or
push
push
sub
rclb
insb
add
sub
mov
loop
push
aas
movsl
sti
ja
movsl
inc
ret
mov
sub
les
scas
sub
aas
or
stos
sub
stc
sub
cmpsb
sub
jns
fwait
aam
sahf
jnp
jns
cmpsb
inc
insb
out
jecxz
push
testl
push
mov
add
add
add
lret
iret
out
nop
cmc
in
int3
jle
push
sahf
out
push
jl
cmp
cmc
xor
jl,pt
out
cmp
int
outsl
leave
inc
mov
pusha
xchg
fistps
test
inc
jl
sti
cltd
inc
stos
insl
dec
mov
negb
inc
sbb
and
sub
sbb
out
test
gs
sub
lock
add
sub
jg
loope
fdivrs
jle
pop
and
mov
orl
pop
enter
adc
xchg
outsb
in
addb
sbb
shll
adc
test
mov
aas
in
push
mov
mov
xchg
je
push
insl
jb
cmp
insb
shll
in
jno
rcll
and
cmp
xor
out
inc
push
mov
cmp
lcall
popa
push
std
and
daa
lahf
mov
pop
das
test
inc
testb
add
add
es
cmp
mov
scas
mov
stos
shl
nop
jmp
stos
mov
mov
mov
into
ret
loope
lahf
lock
and
cmc
in
or
out
jle
in
loop
and
je
xorl
xorb
xchg
fcomps
push
xor
fisubrl
dec
sub
dec
sub
xor
std
push
or
cld
sub
and
add
or
mov
rcr
sub
cmp
adc
add
sbb
inc
xchg
xchg
mov
cs
add
lret
and
inc
mov
in
cmp
cld
or
push
decl
sub
cmp
call
sub
mov
cmp
movsl
xchg
data16
push
repz
call
mov
mov
out
mov
das
lea
add
mov
fucomi
xor
adc
testl
add
outsb
push
daa
call
arpl
cmc
mov
sub
sahf
xor
xchg
xor
andl
jb
out
xchg
insb
sub
cltd
dec
loop
mov
sbb
add
xor
add
cli
ret
jnp
and
out
mov
or
or
es
lahf
sti
fwait
cmpsb
mov
xor
mov
scas
aaa
or
scas
rol
mov
call
lahf
fnop
das
xchg
addl
jns
popa
into
shll
cmpsb
and
fdivs
xor
in
into
mov
mov
stos
scas
cmp
out
pop
xor
in
adc
jns
repz
and
test
mov
ss
cld
jno
xor
inc
mov
inc
mov
lds
push
testl
cmp
add
add
enter
add
jbe
push
inc
pop
jns
aas
loopne
sub
adc
add
add
add
mov
fldl
addr16
push
xchg
pop
xlat
shrb
cmp
push
inc
movsb
xchg
xor
jl
outsl
clc
xchg
in
ljmp
and
icebp
std
movsb
aaa
popa
push
inc
test
cmovp
adc
xchg
loope,pt
fstpt
rcll
lahf
icebp
aam
imul
loope
and
popf
mov
pusha
idiv
fldenv
push
mov
inc
ljmp
in
stc
sub
mov
lahf
daa
cmp
inc
in
push
adc
divl
sbb
es
pop
ffree
jmp
daa
xchg
repz
mov
fld
ds
ds
fmull
fwait
cmpsb
cmp
xchg
fmul
xchg
jb
ret
push
mov
cwtl
push
mov
jae
push
jl
jl
add
in
push
xor
or
int
inc
fdivrl
and
sub
adc
clc
and
inc
lods
push
cmpsb
sbb
jnp
mov
fwait
pop
ja
addr16
add
add
add
scas
test
fmul
pop
clc
jno
adc
je
mov
out
int3
jnp
mov
jno
outsl
mov
loope
and
and
icebp
subb
jae
jo
test
sti
pusha
movsl
mov
decb
leave
ja
dec
or
xchg
in
push
aad
and
pop
or
cltd
and
xor
es
xor
mov
push
cmpsl
or
adc
cmp
pusha
imul
cwtl
fmuls
sub
scas
cld
bound
adc
cmp
mov
scas
les
dec
pusha
sub
pop
movsl
lret
cmp
inc
stos
fpatan
mov
adc
sbb
mov
scas
sar
sub
jne
xchg
cmc
jns
push
sbb
out
insl
push
lods
adc
mov
or
sbb
testb
push
xor
loopne
das
out
jbe
gs
sbb
sbb
add
add
xlat
pop
xlat
jg
mov
insl
pop
test
add
add
movsl
sbb
rcll
dec
jne
jg
dec
in
jo
es
sbb
and
popa
push
imul
pop
push
sbbl
cmpsb
fwait
leave
xor
jl
cmp
int
out
xchg
and
popa
insl
pop
lcall
fistps
cmp
into
add
xchg
jmp
xor
ret
adc
mov
dec
dec
enter
xlat
lahf
push
mov
popf
out
sbb
scas
sub
stos
mov
fcoml
sahf
sbb
ds
and
jmp
loop
mov
in
fwait
xlat
push
and
shl
fildl
test
dec
xlat
add
or
clc
xlat
pop
pop
pop
adc
insl
addr16
int
rorl
mov
sbb
cmp
in
in
adc
out
mov
add
mov
aam
cmc
sbb
sbb
mov
mov
and
xchg
mov
add
add
fdiv
mov
xchg
jns
sahf
addr16
add
add
add
lea
nop
jmp
push
loop
cmp
out
daa
dec
pop
sub
jnp
psllw
iret
loop
mov
nop
out
aad
shll
loope
andb
mov
xchg
lahf
testb
xor
inc
cmp
in
popf
add
pop
loope
pop
loopne
sahf
les
cwtl
mov
cmp
mov
xor
xchg
and
pushf
in
mov
jge
movsl
insb
sbb
xchg
and
cmp
jne
jno
mov
mov
jne
and
sub
inc
sbbb
cmpsl
cld
jb
xor
repnz
adc
mov
rcrb
mov
inc
or
adc
push
aaa
add
clc
in
roll
lret
das
mov
in
push
or
dec
sbb
out
jecxz
adc
mov
xor
roll
add
add
mov
fisubl
and
add
add
add
arpl
ja
dec
sub
pcmpeqw
mov
or
dec
fisubl
fldcw
cmp
xchg
push
loopne
icebp
jecxz
cltd
and
jecxz
xor
or
andb
outsl
pop
subl
out
cmp
imul
in
das
adc
call
or
jne
pop
fmull
mov
addr16
outsb
push
push
sub
loope
sub
xchg
push
inc
mov
push
cmp
out
test
jno
mov
push
pusha
out
push
push
mov
fistpll
arpl
sub
js
outsb
pop
add
push
popa
test
and
cwtl
jne
and
ret
mov
das
cli
test
shll
xlat
popf
rcl
in
fmul
inc
loop
fstpl
push
adc
dec
stos
fwait
loopne
std
pop
pop
icebp
or
in
pop
nop
jns
outsb
xor
jmp
imul
lahf
repnz
xorb
addr16
add
add
add
add
cwtl
inc
add
data16
or
out
adc
push
js
or
movb
sbb
movsb
cmpsl
sub
movsb
mov
loop
sub
mov
scas
call
or
pop
pop
push
push
or
mov
mov
cmp
rcr
xchg
movsb
cld
addl
sbb
std
or
loop
xchg
xor
mov
inc
inc
test
adc
cmp
mov
movsb
cmpsb
cmp
jbe
repz
daa
loope
movsb
sub
cmpsb
mov
hlt
xchg
imul
out
mov
loope
add
mov
pushf
sti
icebp
and
into
pop
stos
fmuls
cmp
ret
sbb
jno
jb
fistl
xchg
jnp
insb
adc
insb
xchg
aam
std
out
adc
xchg
mov
subb
jge
add
test
cmp
in
fnstsw
mov
add
pop
lods
pop
cli
cmc
cmpsb
lret
inc
jae
frstor
add
add
add
bound
cmp
mov
jne
or
push
jnp
push
cli
inc
sbb
push
in
dec
pop
sahf
or
push
lret
pop
xchg
pop
add
pushf
out
and
mov
stos
jb
ret
mov
ja
mov
adc
dec
es
js
mov
movsb
cmp
xchg
jno
stos
dec
or
stos
dec
ficoml
mov
mov
xchg
in
out
int3
outsl
outsb
jg
push
mov
repnz
and
inc
xchg
add
jecxz
inc
push
rorb
cmp
or
mov
into
mov
cmc
xor
sub
out
push
push
pop
notl
lret
or
and
push
sbb
ss
jg
and
cld
fisubrs
xor
clc
cmpsl
pop
inc
jnp
sub
testb
cli
add
sub
cmp
adc
adc
mov
addl
pause
sub
test
cmp
push
stos
notb
das
stos
cltd
inc
popf
jae
out
xor
incl
add
add
add
jno
jae
cmp
cltd
xchg
fcompp
lds
or
jmp
cwtl
insb
sbb
jns
jbe
fidivs
add
push
lock
mov
nop
cld
cs
repnz
call
aad
nop
stc
sbbb
hlt
mov
push
test
es
sbb
and
mov
dec
xor
jbe
add
pop
les
scas
add
xor
les
in
mov
push
push
inc
inc
lret
cmp
sub
enter
outsb
imul
push
push
add
cmp
sarb
mov
rorb
shll
insb
mov
lock
cmp
out
mov
inc
testb
xor
sahf
cmp
imul
mov
jmp
pushf
jb
mov
daa
cmc
pop
stos
insl
mov
nop
test
aam
int
aaa
das
aam
cmp
mov
add
add
add
add
fs
in
movsb
pop
dec
xor
iret
lods
jp
and
jp
jl
sub
adc
stos
test
mov
push
adc
xlat
in
notb
test
mov
push
xchg
sbb
sarl
nop
push
mov
sub
loop
sbb
mov
test
cld
lret
enter
cmpsb
pop
hlt
cmp
stc
jle
mov
test
call
sahf
dec
pop
test
lock
cmpl
adc
xchg
daa
outsl
xchg
andb
jmp
pop
jl
dec
add
shll
pop
jno
loope
xor
out
pushf
in
hlt
dec
and
xchg
jno
push
nop
inc
mov
mov
sub
gs
dec
cmp
mov
lds
mov
fadds
push
cmpb
imul
cltd
jno
cltd
popf
ret
ds
fisubl
add
add
add
arpl
addr16
sub
push
repnz
add
add
add
add
xchg
sub
int
fidivrs
loop
fsubrs
mov
sub
lds
imul
pop
push
int
in
xchg
in
dec
mov
lds
dec
loope
pusha
repz
inc
fwait
aam
push
mov
jne
in
or
lock
xchg
cmpsl
push
ror
test
ja
cli
fcmovu
mov
add
add
xor
outsb
or
mov
adcl
jmp
mov
or
je
mov
inc
je
movsl
in
leave
jae
jno
ss
jle
add
push
sbbb
xor
mov
fwait
subb
adc
inc
mov
dec
test
push
arpl
sbb
xor
cmp
adc
push
sarb
or
movsb
les
pusha
inc
popf
or
pop
call
cmp
sbb
fcomps
push
mov
lock
pusha
jl
or
lock
pop
sub
cltd
out
cmp
cmp
pushl
xchg
xor
add
pop
dec
add
add
add
add
pop
pop
loop
jbe
arpl
adc
loop
scas
pop
sub
nop
mov
xorb
addl
decl
ljmp
data16
nop
xor
push
loope
rorb
push
xchg
inc
xchg
xor
punpckhdq
jle
add
in
push
test
or
push
push
fwait
jmp
pop
adc
shlb
scas
cmp
stos
cmc
rol
cwtl
pushfw
gs
xlat
das
adc
std
clc
dec
movsb
lret
or
xor
lcall
fidivrl
mov
ret
pop
jo
sbb
addr16
sub
int
jae
inc
pop
mov
test
jno
lods
jae
xchg
inc
aad
xor
fnsave
jg
cmp
fidivs
jp
pop
int
jno
adc
cmp
fdivr
mov
mov
add
lcall
pop
ljmp
cli
fnsave
add
push
scas
mov
outsl
mov
add
add
add
add
daa
fs
ret
fisttpl
sub
loopne
scas
subl
xor
sbb
aad
mov
xchg
popa
mov
adc
int
mov
xchg
imul
or
lods
cmp
dec
leave
out
sub
lea
movsl
mov
jns
pop
fcoml
lds
push
xchg
and
mov
mov
xchg
jle
and
rcrl
mov
je
xchg
clc
adc
arpl
dec
testb
inc
test
cmc
jp
adc
mov
pop
pop
incb
mov
add
das
in
pop
inc
jmp
cmp
int3
jg
or
subb
jo
jne
shlb
xor
dec
adc
push
push
popf
cmpsl
scas
jge
jge
sbb
bound
mov
mov
shlb
sbb
xchg
addr16
mov
sub
cmp
and
add
add
xchg
and
movsl
mov
mov
mov
loope
addr16
add
add
add
repz
les
into
and
jne
cmpsl
ds
shll
inc
repz
aam
fsubr
sti
mov
rcrl
push
dec
xor
or
mov
fcmovnu
rorb
mov
in
or
orl
jecxz
stos
or
push
or
push
sahf
les
push
loop
lcall
mov
add
push
cmp
or
cs
mov
mov
test
daa
and
dec
outsl
and
insb
ljmp
mov
xchg
out
push
mov
jne
clc
outsb
lods
into
jge
pop
fidivrl
dec
pop
jg
xchg
scas
push
inc
les
adcl
sbb
enter
loope
xor
mov
leave
bound
sti
push
arpl
clc
fistps
mov
adc
insl
gs
fistpl
in
xor
lret
jl
jmp
fdivl
mov
jecxz
xor
add
add
sub
aas
inc
push
ret
ds
repz
aam
sub
or
sarl
cs
pop
or
pop
sbb
cmp
jae
push
iret
data16
inc
mov
add
push
sarb
cmc
addr16
adc
fistl
add
mov
lods
leave
andl
mov
faddl
ja
push
lcall
idivl
jmp
inc
stos
mov
sbb
add
ret
shlb
pop
mov
sbb
mov
add
mov
cmp
ret
out
popa
repnz
pop
insl
add
les
in
addr16
push
sti
inc
in
and
dec
and
lret
push
cmp
dec
jle
jbe
mov
cmpsl
jno
dec
dec
lds
lods
nop
jg
test
shrb
add
add
mov
mov
lods
imul
mov
out
addr16
add
add
add
mov
rcl
jl
pop
and
sub
adc
mov
js
add
mov
mov
lods
ret
xor
mov
dec
sbb
jp
dec
push
inc
lret
dec
das
inc
rcrb
or
sahf
mov
xor
decl
jg
pop
xor
out
jno
push
mov
clc
mov
mov
call
sub
jae
pop
mov
xchg
sub
mov
cmp
push
xlat
jno
stos
lret
fcomi
and
fistpl
or
loope
rcl
nop
sbb
leave
rcrb
mov
mov
mov
jno
mov
pop
adc
popf
and
stos
out
mov
das
push
imull
push
stos
frstor
mov
aaa
cs
in
mov
sbb
sub
jecxz
leave
gs
insb
or
stos
pop
mov
mov
inc
xchg
sub
scas
or
cmp
mov
mulb
addr16
add
add
add
cli
fnstsw
cmp
cmp
xchg
mov
cmp
jne
addl
inc
xor
cmpsl
mov
xor
arpl
adc
dec
mov
mov
adc
inc
inc
and
lret
xchg
mov
and
lcall
push
pop
dec
mov
fsts
and
sub
push
pop
mov
hlt
es
jmp
movsl
mov
xor
jo
xchg
cmpl
adc
sbb
dec
incb
inc
fildl
fwait
push
jle
mov
pop
cltd
jb
stos
scas
jae
int3
imulb
or
xor
sahf
sbb
jge
add
mov
or
push
cltd
cmp
jno
mov
test
imul
fildll
fidivl
repz
mov
adc
jnp
fiaddl
add
add
hlt
fbld
fdivs
or
add
add
add
push
rcr
lock
sub
jmp
mov
rolb
call
and
bound
dec
test
lret
fmull
pop
cli
ret
cmpsb
pushf
ret
add
stos
mov
and
out
mov
pop
mov
in
inc
adc
pop
lea
fidivrl
scas
pop
movsl
inc
adc
loop
fsubr
in
add
dec
xchg
and
mov
push
xor
or
mov
and
lea
mov
mov
add
ss
inc
adc
rolb
adc
mov
jbe
iret
incb
dec
sub
add
out
pop
js
pop
xor
mov
jnp
sub
push
inc
mov
neg
mov
and
lds
jb
je
and
cmp
int
ja
dec
les
push
pop
push
subl
mov
into
fwait
add
mov
sbb
or
add
add
add
loop
pop
enter
lcall
cmp
pop
mov
es
inc
push
imul
movsl
xor
mov
xchg
mov
into
scas
mov
adc
adc
push
aaa
daa
mov
cmpsl
mov
add
clc
jl
pop
sahf
in
jo
add
jno
push
jo
cmpsb
cld
pop
add
cmp
mov
sahf
xlat
push
in
cmp
cmp
pop
jl
cld
int
dec
or
xor
adc
lahf
mov
fidivs
xchg
scas
push
jnp
ds
jmp
lods
adc
xchg
inc
sti
movl
and
mov
mov
out
xlat
enter
out
jnp
and
loope
int3
dec
xchg
or
xor
push
or
fldcw
imul
cmp
push
and
rolb
jl
test
out
mov
pop
sarb
in
dec
ret
cmp
add
add
xchg
fnstsw
out
fs
dec
dec
in
cmp
mov
sti
mov
or
ret
jecxz
add
lds
call
cmp
mov
mov
push
pop
pusha
sbb
mov
jb
divb
inc
dec
inc
or
popf
imul
js
and
shrb
mov
mov
filds
xchg
ds
xchg
ja
jne
jecxz
cltd
jae
addb
or
ret
adc
push
mov
pop
lods
jnp
cmp
ret
mov
adc
sahf
out
insl
xchg
repnz
icebp
mov
or
push
nop
push
mov
mov
daa
ret
mov
add
xor
mov
mov
movl
jmp
cmpsb
lea
cmpl
sub
rcrl
fsubl
stos
cmp
sti
inc
out
aas
mov
rorb
rcll
or
add
add
add
imulb
jno
mov
test
std
movsb
aam
lcall
jg
jno
push
cmp
aas
inc
aam
dec
jne
dec
pop
out
jl
mov
dec
jecxz
push
add
dec
popa
add
pop
mov
jg
xchg
or
cwtl
outsb
out
inc
mov
es
jl
jns
and
dec
mov
dec
test
inc
and
inc
push
daa
int3
lret
sbb
pop
sub
pop
push
dec
xor
sub
inc
out
jb
mov
js
ficompl
sbb
push
dec
push
shrb
hlt
adc
push
sub
loop
bnd
in
xor
jl
cld
mov
decl
pop
fsubl
sub
mov
add
adc
mov
enter
jo
out
orl
bound
inc
push
xchg
rol
test
sbb
loopne
outsb
mov
lcall
test
push
bnd
dec
leave
and
xchg
inc
aas
addr16
add
add
add
xchg
push
testb
dec
fiadds
loopne
mov
mov
cld
pusha
pop
mov
bound
lods
mov
sti
xor
rclb
add
aad
or
dec
adc
dec
xchg
xchg
pop
pop
sub
jge
lret
gs
stos
add
mov
dec
popf
add
in
cmp
push
popa
popf
xchg
sub
in
mov
pop
cltd
insb
xor
cmpsb
jae
jl
mov
inc
and
rolb
sub
add
test
sbb
inc
mov
push
or
mov
sti
out
out
push
mov
movsb
push
or
cltd
dec
lea
xor
xchg
loopne
dec
mov
cmp
insb
jg
mov
repz
cwtl
or
rorb
mov
icebp
aam
in
repnz
out
loopne
imul
cmp
ret
cmp
or
rcrb
sbb
in
out
ja
filds
fbstp
add
add
pop
jl
jl
push
mov
lret
add
sbb
fadds
cwtl
mov
adc
or
sbb
mov
sbb
xchg
mov
push
jb
jo
repz
das
jmp
daa
cmp
or
inc
in
ret
filds
addr16
rcr
js
imul
push
cld
pop
sub
ds
sti
or
adc
outsl
jge
xorl
imul
xor
insb
and
mov
in
sar
sub
jmp
sahf
pop
imul
out
es
inc
cmp
aam
imul
jae
jmp
ljmp
insb
sub
stos
imul
addr16
loopne
mov
iret
fnstenv
mov
adc
push
xchg
and
mov
test
adc
lahf
pop
shrb
xlat
popl
test
icebp
frstor
dec
inc
aam
cs
lret
jb
lcall
add
add
pop
in
inc
push
or
into
gs
add
add
add
pop
hlt
adc
or
push
push
pop
push
jnp
lahf
xchg
jecxz
and
xchg
inc
fs
push
test
xlat
ljmp
dec
dec
push
and
cs
mov
sarb
jb
adc
rcll
movsl
jmp
cmpsl
cwtl
ret
daa
les
loop
jg
ret
mov
sub
add
daa
fst
cltd
cmpsl
cs
outsl
dec
je
mov
jmp
in
cmp
shll
pusha
and
xchg
movsl
inc
push
xorl
fcoms
cmp
mov
scas
lods
hlt
and
testl
cs
add
loop
insb
xchg
jb
data16
enter
stc
out
fimull
imul
jge
sbb
int3
adc
dec
or
inc
sub
in
cmpl
add
mov
jg
neg
pop
daa
inc
sbb
mov
sgdtl
add
add
inc
jae
aas
repz
stc
sub
cwtl
outsb
insl
icebp
inc
icebp
inc
ss
jmp
adc
or
clc
cmp
imul
add
fs
push
mov
or
repz
or
push
fs
enter
inc
std
jbe
sub
arpl
mov
mov
add
push
js
mov
and
mov
dec
xor
jecxz
in
mov
stos
fmulp
xor
sub
clc
xor
loop
fcoml
fdivrl
xchg
push
sbb
jge
mov
mov
or
and
or
push
pop
loopne
out
repnz
fnsave
xor
mov
cmpsl
cmp
stc
sbb
out
adc
sbb
add
sbb
pmulhuw
push
inc
push
test
mov
test
movsb
add
add
jns
mov
jge
pushf
popl
add
add
sti
jg
cmp
je
mov
jge
adc
add
add
add
out
and
push
push
fs
jns
mov
stos
cmp
and
std
and
adc
das
cmpsb
and
call
test
sub
repz
lcall
mull
xlat
mov
out
lods
out
bound
push
jno
fisubrl
cmc
lea
aaa
iret
pop
addl
dec
adcb
imul
pop
xchg
mov
xchg
push
addl
insb
cmp
je
push
aad
mov
icebp
gs
in
stc
pop
or
loope
pop
jbe
inc
pop
mov
dec
xchg
push
inc
xor
icebp
scas
lods
cmc
out
stc
mov
mov
ss
lods
or
fisubs
adc
fsubrl
lret
fsubr
push
ljmp
cmp
insl
inc
dec
hlt
sbb
mov
pop
cltd
loop
out
sbb
popa
in
jnp
pop
xor
adc
das
out
scas
aam
jnp
fstp
fcompl
jle
mov
add
add
add
mov
and
leave
xchg
or
cwtl
or
push
into
jecxz
mov
scas
test
es
in
sub
inc
push
pop
jnp
cmpsl
fisubrs
mov
imul
mov
cs
test
inc
sub
jnp
call
stos
mov
aaa
pusha
aad
outsb
push
add
mov
push
dec
lods
cs
test
mov
xchg
outsb
dec
pop
mov
pop
leave
sahf
add
mov
fisubl
pop
aam
lds
xchg
int3
xchg
cld
pop
movsb
int3
rcr
fs
jne
inc
or
xchg
cmp
xor
sub
not
pop
lock
int
dec
scas
stc
jp
cmp
pop
dec
jmp
jp
dec
jno
xor
sbb
dec
hlt
xor
and
insb
xor
stos
mov
adc
movsb
xchg
loopne
pop
divl
inc
jp
gs
jb
or
cmp
and
xorl
sbb
mov
jno
std
outsl
mov
add
orl
add
xor
pop
rcl
jns
loopne
repnz
and
and
stos
cmp
sahf
or
scas
xor
lods
sub
fnstcw
fnstcw
je
pop
cmp
sbb
and
xor
inc
cmp
mov
xor
sbb
rcl
call
popa
mov
pop
cmp
pop
out
inc
out
sti
clc
cmpsb
popf
add
daa
dec
or
mov
or
or
cmc
xchg
aam
lret
arpl
ret
sub
mov
xchg
sub
mov
add
mov
dec
adc
sbb
imul
mov
fwait
push
or
orb
aas
adc
clc
or
mov
and
push
mov
xor
jge
popa
insl
out
fucom
call
icebp
cmp
fmuls
addl
add
sbbb
loope
jmp
fucom
adc
mov
add
add
inc
xchg
add
inc
mov
test
imul
add
xor
imul
add
mov
imul
inc
in
add
xchg
xor
sub
xchg
les
repnz
or
imul
sti
pop
ret
fsubrp
mov
movsb
mov
pop
mov
ss
mov
mov
daa
adc
jbe
pop
and
pop
in
out
outsb
repnz
sub
mov
cli
xchg
stc
loopne
in
add
lret
bound
dec
push
out
dec
enter
sub
inc
idivl
mov
xor
in
inc
sub
pop
movlps
clc
push
rcl
cmp
out
cmp
lds
sahf
cmpb
out
addl
and
mov
idivl
jecxz
xor
mov
andb
mov
inc
test
xchg
dec
scas
ja
aam
cltd
pop
lret
stos
pop
cwtl
xor
xchg
lds
rcll
loope
adc
add
add
add
stos
test
aam
and
aaa
aas
sahf
movsl
popf
mov
cld
and
mov
shlb
in
and
xchg
ret
pop
ja
inc
dec
dec
daa
cli
sub
data16
cld
idiv
xor
push
popa
push
mov
hlt
xchg
call
sbb
jl
pop
outsb
aad
mov
repnz
aas
loopne
mov
cmp
data16
dec
add
ss
in
shlb
sbb
inc
mov
mov
mov
repz
inc
frstor
push
fsubrs
inc
mov
mov
test
rorb
aaa
xor
xor
sbb
divl
incb
divb
mov
pop
dec
bndstx
les
jne
mov
lcall
arpl
into
push
sbbl
adcb
dec
cli
inc
jg
int
xchg
lods
or
dec
out
jb
adc
add
mov
cmp
inc
and
movsl
pop
call
rclb
inc
mov
add
cltd
outsb
mov
pushf
xchg
push
cltd
je
mov
enter
cmp
imul
push
dec
iret
pop
sarb
mull
jns
cli
xchg
orb
dec
xchg
cwtl
pop
ret
pop
adc
xchg
pop
pop
xor
push
ljmp
cmp
jo
or
fsts
push
cmp
les
push
inc
loope
or
push
xorb
mov
or
adc
or
test
jo
pop
push
aad
pusha
pop
mov
shrb
mov
push
sarl
pop
imul
push
mov
mov
gs
push
sbb
dec
cwtl
fnsave
aad
jae
out
repnz
cltd
lods
dec
sbb
mov
mov
cmc
jp
pop
lock
ret
mov
lock
std
cmp
jle
fistpll
fisubrl
push
add
add
add
mov
loope
repz
andb
in
stos
rorl
lret
dec
cmpsl
dec
jnp
cmp
shlb
jae
ljmp
fldt
jo
adc
mov
pop
cltd
jae
shr
push
ss
shrl
insl
into
jns
jecxz
test
pop
mov
and
iret
lret
jmp
adc
xchg
in
and
cmp
sub
aaa
xor
adc
nop
sti
mov
xchg
pop
pop
in
xchg
lea
and
xchg
adc
or
out
dec
in
inc
dec
in
bound
and
stos
inc
xor
hlt
loopne
adc
pop
out
xchg
mov
fsts
out
orb
imul
jmp
sbb
sub
mov
insl
ds
ja
fadds
and
fnstsw
lahf
mov
push
fldt
sub
xchg
pop
lds
xlat
ficompl
inc
mov
pop
add
add
add
pusha
jg
iret
cmp
loop
fidivs
mov
and
movsl
arpl
xchg
push
ss
xor
test
ja
jecxz
sbb
inc
push
aas
imul
xor
fadds
rcrb
ret
and
or
push
xor
inc
outsl
loopne
lret
orl
loopne
jl
faddl
testl
sahf
mov
pop
push
cmp
daa
and
call
lret
pop
sub
lods
push
shlb
insl
jmp
or
push
pushl
aaa
inc
lods
jnp
and
lds
mov
pop
in
jne
inc
dec
and
pop
mov
cwtl
lret
nop
clc
mov
adc
or
sbb
cltd
ret
mov
leave
imul
add
xor
cmpsl
jle
imul
xchg
xorb
mov
shlb
add
dec
jmp
dec
scas
iret
outsb
jmp
push
test
pushl
add
add
add
jo
sub
and
mov
mov
cmp
lock
cmp
dec
imul
pushf
mov
pop
data16
cmp
lods
jno
fwait
mov
mov
arpl
es
lcall
or
outsl
dec
scas
jp
xchg
out
lds
pop
xchg
and
pop
add
enter
jmp
mov
test
scas
jo
outsl
inc
add
or
pop
push
mov
ret
fwait
sub
in
gs
push
or
adc
cltd
dec
ficoms
lods
fidivl
iret
jmp
fidivs
fidivs
push
faddp
es
popf
mov
jne
pop
imul
jmp
cmp
jge
jmp
ret
inc
mov
fldt
mov
or
push
xchg
push
pop
lods
pusha
jbe
adc
add
add
std
sbb
stc
cld
or
js
dec
stc
sbb
add
add
add
inc
testb
stos
movsl
xchg
push
mov
add
mov
push
lret
lods
lods
mov
aad
jo
popf
test
sbb
mov
lods
jbe
adc
sbb
inc
mov
fsubs
sub
je
cmpsl
xor
fbld
xchg
sbb
outsl
sub
push
ds
adc
add
pop
push
mov
cltd
sub
mov
repnz
pop
mov
addl
test
mov
ljmp
jno
je
jo
add
leave
mov
xchg
add
jne
add
mov
adcl
shrl
cmp
stos
cld
rorl
test
adc
xchg
push
cmp
pop
dec
insl
repnz
mov
cli
test
or
sub
int3
mov
sub
lret
lds
lock
hlt
loope
sbb
cwtl
aam
ficoms
cmp
sbb
add
pop
test
scas
repz
cld
adc
and
add
add
add
loope
shl
stos
sub
mov
out
xchg
outsl
inc
mov
inc
out
sub
pop
inc
cmpl
in
cmpsb
push
push
sarb
aam
push
cltd
mov
push
pushl
mov
or
cmpsl
mov
mov
int
in
and
mov
in
sahf
cmp
sub
dec
int3
roll
jne
xor
push
ja
pop
popf
in
xchg
mov
iret
stos
mov
cmp
pop
fistps
fs
in
dec
mov
jns
mov
in
jge
outsl
push
jmp
inc
mov
jno
mov
mov
out
add
mov
xchg
ljmp
cwtl
loop
rorl
push
inc
adc
sbb
sbb
lods
roll
out
lods
push
push
outsb
dec
into
repnz
int
xchg
adc
pop
fidivl
mov
ret
stos
fidivrl
adc
xchg
mov
dec
pushl
fisttpll
add
add
add
decb
push
pushf
sbb
into
ds
addl
cltd
cmp
leave
or
mov
xchg
push
hlt
testb
ror
and
jae
cmpsl
rcl
mov
pop
rclb
adc
leave
cmp
loopne
pop
jle
add
and
ficompl
pop
mov
inc
mov
inc
pop
mov
out
pushw
stos
call
enter
ja
fcmove
cs
shrb
sbb
jb
rcrl
mov
idiv
aaa
imul
outsb
rcll
cs
lcall
pusha
test
scas
aas
jle
add
mov
fmuls
movsb
jecxz
stc
cmp
cs
push
mov
mov
outsb
pushf
mov
repz
pop
inc
clc
imul
cmpl
aas
int3
push
sub
loop
inc
dec
aam
gs
xchg
das
pop
sub
inc
ja
pop
aas
dec
push
lret
sbb
add
add
add
lds
repz
mov
mov
dec
mov
fwait
arpl
and
pop
ret
aas
mov
ret
cld
push
dec
and
jns
mov
inc
push
pop
push
add
and
mov
lods
popf
imul
aas
mov
dec
sbb
mov
dec
xchg
inc
lock
push
lods
lock
aad
mov
hlt
stc
movsb
cmp
fmuls
nop
cmc
sub
sub
lret
jle
fs
int3
fwait
je
arpl
rolb
pop
inc
test
les
outsl
jmp
or
mov
adc
pop
push
es
sbb
and
mov
stc
or
fimuls
jle
lahf
jbe
stos
cmp
fldcw
sbb
add
clc
push
dec
enter
cmp
sbb
mov
sti
pop
int3
lahf
mov
jmp
dec
into
orb
or
aad
add
add
xchg
jae
ja
div
mov
adc
xchg
addr16
add
clc
int
jge
subb
arpl
xchg
lcall
enter
sub
mov
dec
das
dec
out
xchg
int3
mov
dec
and
dec
and
and
sbb
or
jp
add
stc
jp
das
js
addr16
jp
enter
inc
xchg
jbe
add
and
jno
adc
inc
dec
mov
and
stc
cmp
xchg
mov
push
mov
aam
in
cmp
je
xor
adc
movsb
lcall
btr
aad
lret
lods
jmp
mov
jl
adc
sub
cmp
daa
xor
rcll
insl
sbb
push
pinsrw
jne
sahf
sbb
add
rcll
fidivrs
cli
mov
bound
pop
jl
ret
dec
mov
cmp
arpl
push
iret
bound
or
mov
jecxz
add
add
cli
std
jg
push
pushf
dec
and
jbe
addr16
add
add
add
lds
rorl
and
mov
pop
into
mov
mov
xchg
stos
pop
and
or
in
xchg
ds
shl
push
sbbb
fwait
jl
push
js
mov
popf
cmp
imul
shll
add
in
dec
out
push
stc
das
daa
cld
pop
outsb
inc
ret
push
xchg
jge
mov
mov
lcall
add
and
dec
add
mov
cwtl
or
jl
fistpll
mov
cmp
cmp
loopne
lea
aas
cmpsb
fcmovb
loopne
fcoms
stc
dec
test
cvtdq2ps
mov
fisttps
mov
cmp
repnz
sbb
stos
in
rolb
inc
sti
mov
pop
adc
movsb
shrb
lods
in
cltd
mov
jp
shr
add
int
cmp
pop
and
cld
in
out
aas
sub
add
add
mov
std
incl
sbb
popf
cmp
addr16
add
add
add
xchg
sbb
repnz
adc
xchg
lret
add
jge
jo
nop
inc
jl
frstor
xor
mov
lods
dec
xchg
hlt
push
lds
sbb
sbb
xor
pop
mov
push
add
sti
jo
mov
cmp
xor
mov
incl
inc
test
ljmp
dec
stos
push
fwait
bnd
xchg
ja
mov
out
inc
les
sub
lds
xor
mov
mov
xchg
add
xchg
pop
add
fldcw
push
lcall
fadds
cmc
pop
push
mov
cli
inc
je
into
outsl
outsb
in
ss
xchg
dec
imul
js
jle
outsb
sub
mov
adc
jp
push
jbe
out
pop
pop
lcall
push
xchg
sbb
or
xchg
loop
mov
and
jne
in
scas
push
aas
leave
push
es
jg
pop
or
xor
pop
pop
and
add
add
add
mov
aaa
fwait
mov
fwait
pop
jl
dec
int3
outsb
and
lea
enter
or
call
rolb
movsl
lret
lea
int3
std
and
jecxz
fsubp
loope
aam
stc
packssdw
rcl
mov
pop
mov
daa
in
insb
pop
xor
test
out
xchg
je
loope
push
scas
jae
ljmp
jge
push
mov
adc
mov
mov
sbb
push
xchg
mov
test
hlt
jge
inc
mov
and
movl
push
cs
sub
sarl
popa
cmp
sub
sub
shlb
in
push
loope
fists
dec
jnp
pop
jle
lcall
inc
mov
cmp
fdivs
xor
dec
test
sbb
adc
test
add
add
or
dec
push
cmp
and
add
add
add
or
add
adc
into
ret
jecxz
push
cmpsl
aad
xor
pusha
jle
mov
scas
test
loop
lock
mov
leave
adc
shlb
pop
test
push
dec
out
push
or
dec
sbbl
cwtl
cmp
xchg
loop
lret
gs
adc
into
inc
mov
push
dec
mov
pop
jb
gs
cmp
push
inc
adcl
pop
cmp
lahf
cmp
cmp
or
jne
cmp
das
push
inc
jbe
push
push
repz
sub
or
lahf
and
out
jecxz
mov
xchg
pop
mov
mov
lock
bnd
repz
add
mov
or
roll
cs
mov
or
xchg
je
sub
xchg
and
cmp
and
add
mov
xor
mov
in
and
add
add
add
out
mov
cmc
xor
stc
jmp
or
pushf
lcall
scas
cwtl
xchg
jp
push
adc
call
jns
inc
adc
jno
leave
iret
dec
imul
adc
add
push
and
push
adc
dec
push
xchg
scas
in
repnz
movsl
inc
xchg
mov
lds
cmc
or
lea
insl
cmpsl
int3
or
dec
stc
loopne
decb
pop
loope
sbb
daa
cmpsl
mov
xlat
xor
adc
mov
test
add
xor
aaa
fcmovbe
fdivl
sbb
mov
add
fiaddl
xchg
imul
adc
mov
lds
mov
mov
testb
loope
inc
inc
xchg
lea
loopne
jne
out
fisubs
rol
mov
xchg
add
ficoms
stos
sbb
call
mov
and
add
add
add
insb
lret
lds
jecxz
push
es
mov
jb
fincstp
and
adcl
stc
xor
ffree
and
mov
xor
add
jno
mov
push
mov
lds
mov
jae
add
inc
loop
into
mov
popw
xchg
or
sub
int
iret
int
or
out
in
imul
mov
imull
subb
push
and
mov
ds
mov
cmp
or
xchg
mov
lods
inc
dec
xor
fs
and
jbe
inc
stos
or
push
bnd
mov
jle
call
and
lods
inc
pop
mov
sbb
mov
add
push
or
mov
pop
mov
add
xchg
leave
fistps
popa
add
sti
in
gs
into
cmpsb
dec
int
rcll
pop
pop
jmp
add
in
out
stos
jge
or
out
inc
packuswb
add
add
add
iret
cmpsl
rcrl
sbb
fbstp
fcoms
adc
inc
dec
ds
sub
mov
dec
inc
adc
into
insb
and
filds
les
mov
jmp
lret
sbb
fwait
arpl
dec
and
inc
xchg
ja
mov
stos
mov
or
in
das
xchg
lods
loop
imul
je
xor
jne
pop
ss
std
sub
cmpsb
sahf
in
push
mov
push
shrl
mov
in
cld
or
das
or
add
or
mov
ds
jle
out
testb
add
inc
mov
movsb
fcompl
in
push
jb
pop
lcall
in
and
mov
inc
dec
cmp
add
lock
push
mov
pop
xor
ret
push
test
movsl
lods
dec
or
out
xchg
iret
push
aas
repnz
add
add
xchg
sbb
cmp
xchg
lret
clc
lahf
jno
cmp
lods
push
imul
or
lret
jmp
mov
push
and
popa
es
mov
dec
xchg
ret
int
xchg
cmp
add
and
xchg
mov
stos
xor
sbb
jmp
cmp
pop
repnz
and
mov
mov
js
movsl
dec
xchg
jecxz
inc
mov
jmp
jle
lea
ljmp
mov
shlb
sbb
push
daa
lods
add
sub
leave
rorl
lret
and
add
xor
aaa
outsb
push
shl
sub
mull
stos
das
shll
add
arpl
stc
add
fstp
je
ljmp
lea
stos
cmpsb
aam
addl
lret
in
adc
sbb
shr
lods
xchg
pop
push
aam
sahf
xchg
mov
dec
insl
aam
add
cmp
out
loope
jns
jb
mov
add
add
add
cwtl
sbb
cs
adc
imul
push
mov
cmpsb
ss
sbb
fldl
mov
test
xor
imul
inc
lds
aad
pushf
movsb
shrb
jge
outsl
js
cld
sbb
mov
imulb
inc
stos
inc
sti
call
push
les
xchg
into
icebp
test
cmpsl
sbb
sub
or
xchg
or
inc
in
aaa
mov
xor
ret
cmc
hlt
push
pop
jmp
push
xchg
mov
out
mov
fs
fs
repz
and
bound
and
jns
xchg
xchg
hlt
mov
test
xor
mov
cmp
cmpb
or
sarb
mov
mov
or
cmp
into
lea
add
inc
mov
sub
lods
mov
or
mov
adc
xor
cli
jge
add
add
lods
jg
push
mov
enter
daa
add
add
add
lock
es
dec
xlat
xchg
clc
aas
cmpsl
mov
icebp
and
movsl
cmp
mov
mov
sub
push
jne
into
mov
adc
out
cltd
adc
std
fldenv
mov
mov
orl
push
jne
ret
arpl
in
sbb
inc
sbb
imul
lds
lods
jb
inc
inc
inc
fldenv
sbb
mov
mov
and
stos
or
jmp
sub
je
imul
js
ret
pop
mov
cmpsl
jecxz
out
outsl
cmc
push
push
insb
int
jns
stos
insl
cmp
cmp
jo
in
shrb
fcoms
and
rcrb
and
in
cltd
xchg
jo
and
cmpsl
sbb
jge
sarl
sub
xor
inc
jae
push
sti
push
sti
sub
cmp
icebp
adc
hlt
lcall
add
mov
dec
idivl
cld
ret
add
mov
add
add
add
lret
jns
sahf
stos
sbb
mov
pop
jno
fldl
daa
dec
shrl
fwait
mov
cltd
add
push
loopne
adc
sub
loopne
scas
cmpb
mul
lea
sbbl
insl
dec
pop
or
notl
inc
fisttps
lods
arpl
push
cwtl
push
iret
sahf
faddl
jno
ja
roll
add
pop
push
mov
pop
inc
xor
arpl
sub
mov
and
inc
jnp
lods
div
enter
inc
add
sti
push
xchg
mov
adc
jo
cmpsb
xor
cmp
push
dec
out
iret
inc
xor
incb
sbb
add
pop
or
mov
jns
lds
test
inc
movb
cmp
sbb
sub
mov
push
je
jb
sbb
add
ret
mov
iret
mov
fisubrl
add
add
add
or
dec
js
mov
lods
mov
pushf
sar
adc
out
into
cmc
push
or
xor
pop
mov
cmp
xchg
loopne
fwait
roll
push
lods
int
aas
cmp
mov
xchg
add
cs
xchg
repz
push
or
sarb
sbb
adc
sub
pop
jbe
jnp
pop
push
adc
xchg
in
cltd
jmp
dec
or
jb
popa
xchg
adc
div
xchg
mov
test
test
mov
pop
lds
pop
insl
xchg
inc
mov
xor
mov
dec
lock
imulb
or
ja
jmp
sub
mov
outsl
inc
adc
jnp
pop
jns
lcall
aas
or
ljmp
lcall
push
lret
jg
dec
repnz
outsl
orb
jge
push
push
hlt
shrb
cmp
les
pop
sbb
or
jg
arpl
test
add
add
add
mov
mov
jmp
mov
pop
pop
aam
push
cmp
jge
push
sub
out
aad
lahf
std
sub
dec
pop
mov
dec
mov
out
leave
fbstp
das
xchg
mov
and
and
fneni(8087
data16
das
mov
mov
mov
jl
movsb
mov
hlt
add
inc
jecxz
lahf
les
shrl
les
adc
out
adc
incl
jecxz
cmp
cmp
and
dec
cmpb
sar
shrb
sub
xor
mov
jo
pop
fwait
outsl
ja
xchg
repnz
je
cmp
fstl
adc
outsb
dec
pop
cli
cmp
mov
pop
mov
data16
cmpsb
scas
aas
or
inc
imul
jae
adc
push
pop
into
adc
sti
add
out
push
nop
mov
and
fs
fstp
lods
sub
cmp
or
add
xor
clc
cli
clc
sarb
sti
mov
ja
sub
add
add
add
jecxz
mov
xchg
mulb
rcll
scas
sbb
fadd
inc
dec
push
inc
lret
jbe
mov
sbb
mov
sbb
popf
cld
in
cmp
fnstsw
xor
xchg
and
sbb
outsb
push
es
jecxz
dec
ljmp
pusha
popa
xorb
sbb
js
gs
xchg
mov
fmuls
jae
sbb
jne
outsb
stos
repnz
test
insl
sub
mov
mov
inc
scas
sti
add
ja
repnz
sbbl
add
pusha
lods
push
dec
outsl
movsl
std
dec
pop
leave
in
sbb
bound
popa
xchg
aad
ljmp
add
and
sub
in
lods
mov
push
pusha
xchg
dec
xor
inc
pop
decb
sub
pusha
sti
dec
scas
addl
in
loopne
test
add
add
jnp
out
mov
aaa
pop
addr16
add
add
add
dec
mov
mov
insb
lret
fmul
outsb
fs
adc
xchg
out
push
cltd
imul
dec
inc
call
pop
xchg
cmp
jb
insl
adc
push
test
jg
movsl
push
pop
sbb
dec
ss
and
mov
jnp
or
sbb
cld
popa
pop
xor
dec
test
jmp
push
inc
adc
data16
cmp
imul
sbb
push
int3
push
mov
pop
mov
scas
fcoms
and
sub
fistpll
push
sbb
enter
pop
lcall
sbb
xlat
jo
sub
ss
xor
mov
popa
or
sub
pop
and
shll
ret
jns
and
fadds
rorb
sti
mov
or
nop
hlt
or
shr
sbb
pop
and
push
pop
inc
and
add
add
es
data16
insb
daa
mov
adc
dec
stos
addr16
add
pushl
inc
outsb
jle
mov
jns
cmpl
cmp
test
cmp
lret
or
imul
or
mov
mov
add
mov
rcrb
loopne
mov
insb
push
pop
repnz
jle
xchg
lods
iret
ffreep
out
shufps
ja
pop
fbstp
gs
loopne
mov
stc
sbb
sub
jge
cmpsb
adc
pop
or
repz
out
fidivrs
jb
add
fiadds
mov
call
xchg
sub
inc
xchg
shll
test
pop
out
out
xchg
jl
imul
xor
mov
das
xchg
scas
stos
adc
insb
push
packssdw
sbb
scas
std
jo
and
lahf
test
xorl
xchg
pcmpgtd
notb
aad
mov
push
outsl
mov
das
xchg
inc
fwait
decb
sbb
jb
lcall
clc
mov
fldcw
add
xchg
add
add
add
fwait
push
mov
jne
add
and
pop
test
jl
fidivrs
sub
inc
xor
push
loopne
mov
sahf
push
adc
ljmp
xchg
mov
xor
loopne
leave
call
enter
push
jbe
enter
lea
sub
dec
xchg
adc
lret
sbb
pop
sbb
insb
lahf
jne
add
dec
loope
pop
jecxz
inc
outsl
das
adc
test
push
mov
stos
loopne
cmc
push
xor
mov
out
sub
push
pushf
je
in
sbb
sbb
xchg
scas
dec
out
mov
in
mov
mov
repnz
and
aam
cmp
xor
sub
ss
imul
ja
adc
or
ds
scas
divb
sbb
dec
inc
xchg
jo
push
mov
loope
mov
jno
pop
add
xor
test
icebp
cltd
repz
push
sti
cmpsl
enter
loope
mov
add
add
add
fistl
sub
push
not
mov
ja
testb
or
jnp
mov
popf
std
pop
imul
mov
cli
shll
pushf
sbb
dec
or
adc
daa
into
jecxz
jge
pop
jno
pop
cltd
loope
fs
in
pushf
add
adc
jno
fisttps
call
jmp
sbb
jb
scas
mov
sub
dec
xchg
loop
push
push
mov
mov
in
push
cli
int3
std
aad
jmp
and
sub
ljmp
xor
dec
fcompl
ret
xor
pop
outsl
sub
into
fldl
cwtl
sub
lahf
dec
add
lock
mov
int
sbb
add
or
cmp
arpl
mov
add
jge
fidivl
clc
or
add
add
mov
std
mov
dec
push
jo
test
xor
add
add
add
or
xor
sti
ret
mov
out
xor
mov
xchg
or
ss
jecxz
movb
aam
test
dec
incl
mov
ret
aad
jno
mov
mov
push
lock
jp
inc
cmp
pusha
cli
mov
jnp
out
mov
cs
cmp
enter
stos
out
sbb
pop
add
ficomps
mov
test
in
inc
dec
pop
adc
push
je
popa
mov
sbb
ret
push
push
mov
push
and
ljmp
push
imul
mov
fimuls
pop
int3
xchg
push
addr16
aad
and
scas
sbb
cmpsb
test
stos
ljmp
or
inc
pop
xor
movsl
in
mov
outsl
fimuls
or
popa
lret
stc
fidivrs
add
fcoml
xchg
mov
inc
fs
scas
lret
or
lds
xchg
and
inc
and
lcall
add
add
add
dec
outsl
cmpsl
lods
fs
xchg
out
popf
dec
xor
xor
loopne
out
jp
hlt
jl
mov
stos
ja
aaa
jns
int3
jg
jmp
gs
mov
push
push
sbb
je
stc
jnp
xchg
mov
sbb
xchg
and
out
lds
fisttpl
outsb
jmp
mov
gs
inc
movsl
scas
lahf
dec
test
mov
jbe
push
add
and
and
jne
out
adc
aas
into
and
fmull
jl
or
outsb
mov
mov
inc
jno
xor
pop
inc
mov
pop
divb
adc
sub
cli
dec
repnz
jge
and
leave
insb
sbb
xor
dec
je
jecxz
fwait
test
leave
jae
sub
xchg
mov
mov
lahf
and
xlat
sub
mov
jb
rcrb
push
inc
fiaddl
ret
ficomps
cmp
lahf
jmp
xor
add
add
add
sbb
fsubs
pop
xchg
or
in
jge
xlat
xchg
pop
in
xchg
or
loopne
add
pop
push
fstp
push
xchg
clc
lds
xor
outsl
fdiv
inc
loop
insl
inc
jbe
or
inc
int3
and
ret
inc
sub
inc
icebp
mov
xchg
sahf
jb
out
push
ds
rcrl
movb
cmp
push
cmc
inc
pop
fwait
popa
or
push
hlt
xchg
mov
shrl
fbstp
movsb
out
mov
js
sub
xlat
insb
js
lods
shll
call
testl
jge
lods
dec
daa
xchg
and
add
sti
insb
push
xchg
inc
push
loop
inc
cmp
je
fcomps
daa
mov
lret
xor
jge
add
sub
push
mov
and
jne
adc
mov
mov
or
adc
and
ret
fcomps
push
fstpl
aad
arpl
ja
sub
add
les
xor
add
add
add
mov
subl
mov
adc
test
popf
push
or
stc
pop
pop
in
sub
enter
xor
mov
xchg
mov
adc
push
js
fsubrs
xor
xchg
sbb
test
repnz
mov
mov
shlb
mov
stc
sub
push
imul
arpl
push
or
cmp
jb
rolb
mov
jl
aaa
lea
lock
test
cmpsb
test
repz
in
mov
mov
fcompl
rcrl
adc
lds
lret
roll
inc
bound
adc
sbb
sbb
or
xchg
and
in
inc
popa
adc
enter
std
mov
nop
and
cld
jmp
or
jg
ja
cmp
add
add
lret
mov
or
lret
leave
addr16
add
add
add
inc
pop
cmp
aas
cli
arpl
jnp
lret
mov
mov
jmp
jl
add
mov
mov
inc
jp
jge
xchg
les
and
cmp
mov
das
dec
std
out
sti
dec
mov
iret
mov
fsubs
sbb
mov
in
pop
adc
adc
mov
out
scas
push
loop
mov
in
sbb
add
addr16
stos
test
push
test
cmp
insl
fidivrs
je
lcall
lahf
test
adc
mov
repz
cli
sub
sub
in
xchg
xchg
pop
push
int3
mov
pop
push
add
daa
ficomps
inc
add
xchg
xchg
or
jp
push
xor
nop
lods
mov
mov
jl
jo
jne
test
mov
das
xchg
jle
iret
aad
push
pushf
push
jns
or
sub
sti
pop
jge
neg
hlt
add
mov
xor
add
inc
push
push
sarb
testl
pop
mov
mov
insl
sbb
dec
pop
xor
popf
popa
dec
movl
sbb
insb
xchg
sbb
pop
cmp
jle
lock
aam
mov
icebp
jno
addb
dec
lods
mov
div
mov
ja
mov
cmp
add
jo
mov
jo
cmp
scas
push
outsl
jle
test
aas
jno
xlat
and
inc
mov
inc
faddl
out
lret
xchg
sahf
adc
or
fwait
scas
mov
inc
jne
rcll
mov
xchg
lods
sbb
dec
pop
lahf
push
mov
fsubl
shrl
dec
push
aad
mov
fbld
inc
or
xchg
jmp
ljmp
inc
pop
jbe
push
adc
add
cld
jge
dec
or
mov
add
fsub
std
in
popf
in
stc
jmp
pop
orl
add
inc
addl
pop
jno
xor
std
jmp
int3
or
jno
and
dec
out
sub
mov
xor
pop
mov
inc
inc
sbb
ret
fucomi
pop
movsl
mov
push
repz
xor
enter
push
add
xchg
bound
mul
or
push
ja
mulb
jbe
mov
out
std
xor
mov
ja
cmp
in
sbb
lea
lret
and
xor
add
mov
iret
inc
sub
into
pop
jmp
pop
test
fs
mov
inc
aad
imul
mov
push
cmp
jns
lcall
mov
mov
leave
lcall
sti
sub
cmp
fsubp
mov
scas
mov
mov
scas
movsl
clc
mov
pop
jp
jnp
sti
xchg
jle
jp
lods
ja
jle
addr16
add
add
add
cmp
icebp
xchg
dec
xor
push
xor
mov
ret
mov
sbb
mov
dec
scas
and
mov
adc
lods
cmp
stc
inc
lahf
mov
mov
jnp
shlb
shlb
jle
xchg
jne
psraw
adc
aam
mov
mov
and
adc
mov
push
jmp
xor
stc
das
lock
hlt
test
xchg
xlat
adc
andl
xchg
jo
ss
or
push
ret
lea
out
mov
cmc
loope
leave
mov
sbb
add
mov
ss
jg
movsb
mov
push
shll
adc
mov
cmp
inc
rorb
stos
pop
push
mov
aaa
sub
test
mov
sub
fimull
insl
pop
cli
fwait
sbb
push
lret
loopne
jo
mov
inc
jecxz
das
mov
jg
cmp
add
add
push
sti
decb
mov
daa
cmp
add
add
add
imul
pop
or
dec
push
outsb
xor
out
jle
mov
adcl
push
fnstenv
icebp
in
lretw
fwait
in
dec
insb
pop
mov
and
dec
cs
mov
rorb
adc
orl
testb
ja
inc
mov
xchg
repnz
fsubrl
pop
std
and
sbb
iret
mov
cwtl
sub
repnz
fnstsw
add
inc
lods
adc
fld
out
lock
jp
cmp
sbb
int3
out
roll
pusha
lret
cmp
sbbl
sbb
pop
xor
rcll
sub
mov
mov
fs
push
add
push
and
inc
or
jb
and
push
sub
inc
xchg
add
add
cmp
xor
hlt
das
call
add
add
add
lret
rcl
lods
imul
repz
fsub
inc
add
cmp
ds
les
mov
pushf
add
xchg
shl
or
dec
jmp
mov
xchg
sbb
fsubs
repz
cltd
repnz
xchg
mov
pop
shll
outsl
mov
mov
mov
mov
in
mov
sbb
fisttpll
xchg
mov
inc
xchg
pop
jns
or
cmp
std
fidivrs
outsl
cmp
pusha
sub
insl
mov
jl
pusha
enter
test
repnz
push
neg
cli
rolb
push
sbb
dec
repz
pusha
jg
gs
enter
lea
xorl
and
lcall
fcmovnu
mov
xchg
pop
xchg
sbb
sbb
sub
push
cmp
mov
pop
jb
sbb
cmp
inc
sub
je
jecxz
add
add
cmp
jge
stos
lea
shrb
mov
add
add
add
out
mov
sbb
scas
nop
test
sub
sub
jecxz
daa
cmpsl
adc
dec
out
decl
xor
out
call
lds
dec
imul
test
jo
mov
ds
add
xchg
push
push
lret
loope
loop
and
adc
cmp
add
popa
mov
es
int3
pop
inc
std
sub
xor
mov
dec
cmp
jge
inc
out
inc
mov
jg
loop
imul
popa
lock
pop
pop
jle
cltd
xchg
pushf
add
sbb
in
fnstcw
out
jmp
shrl
add
sub
jnp
inc
adc
pop
push
adc
movsl
mov
fnsave
pop
repz
iret
ds
sti
fucom
lock
pop
dec
xor
pop
mov
divb
rclb
nop
lcall
cmp
add
add
add
xchg
mov
call
sub
lods
cwtl
cmp
repz
aad
jbe
pushf
sub
hlt
and
bound
sbb
dec
mov
mov
sbb
ss
repz
add
cwtl
jmp
in
lods
stc
mov
mov
sbb
cmc
cmpb
sbb
mov
pmaddwd
pop
adc
adc
sti
shrb
ret
mov
dec
adc
adc
adc
jg
dec
aas
out
in
jmp
mov
ljmp
push
lret
std
out
imul
rorl
and
adc
jl
ret
mov
mov
cwtl
jnp
in
dec
xchg
cmpsb
lcall
lods
pop
push
imul
leave
push
cs
mov
jo
adc
mov
sti
mov
idivb
add
jl
dec
jbe
idivl
or
mov
addr16
add
add
add
mov
cmp
mov
out
lods
push
sub
stos
mov
scas
enter
and
rol
pop
dec
pop
adc
test
xchg
push
mov
ret
insl
mov
adc
jnp
dec
loope
arpl
inc
lock
mov
sbb
sbb
clc
push
out
pop
cmc
or
test
repz
pop
xor
inc
push
sbb
xchg
jl
incl
jne
pop
xor
xchg
and
js
adc
das
icebp
lcall
pop
mov
std
rcll
into
adc
int
mov
and
dec
jns
into
mov
aam
ja
movsl
push
das
jmp
loope
repnz
xchg
push
cmc
in
mov
jns
pop
cmp
cmp
fdivrl
idiv
sahf
sbb
call
cmpsb
in
push
subl
xor
lret
rcll
aaa
and
outsb
sub
stos
fs
jmp
leave
aas
xchg
dec
aaa
les
add
add
add
shr
pop
cld
in
or
push
lret
and
jns
fnstenv
cmpsb
dec
mov
sbb
mov
mov
add
or
jno
sbb
add
scas
mov
cmc
scas
cmp
mov
test
mov
ljmp
xchg
pop
jecxz
push
xchg
mov
es
addr16
mov
xchg
scas
push
aas
push
call
faddl
incl
aad
hlt
push
pop
mov
das
pushf
or
nop
pop
sub
mov
loope
or
xchg
shlb
nop
cwtl
cmp
xor
adc
inc
les
loope
jg
ficomps
in
add
cs
das
enter
lret
jl
adc
and
jg
iret
mov
jno
adc
ds
cmpl
jl
mov
loopne
adcb
test
cwtl
push
cmpb
cld
jno
in
lret
roll
ljmp
mov
cmpsl
movsl
inc
fisubrl
add
les
scas
fistpll
outsl
gs
ss
cmp
add
add
add
inc
sbb
pop
adcl
movsl
mov
adc
mov
adc
push
lds
sbb
mov
mov
aaa
fs
shlb
pop
ret
imul
sub
fs
ljmp
mov
rcr
and
cmpsl
fsubrl
adc
lods
sub
aad
lds
and
cmp
pop
ret
clc
repz
xchg
inc
inc
fwait
out
fs
cmp
mov
xchg
or
pop
jle
push
push
test
loope
push
movsl
pop
cmpsl
cmp
mov
inc
and
addr16
xchg
and
or
xchg
xchg
mov
or
jbe
xadd
jns
sub
fmulp
sbb
mov
xor
sar
mov
push
idivl
enter
mov
sub
lcall
movsb
repz
mov
inc
push
and
cs
sbb
jnp
jnp
cmp
movsb
push
sbb
jne
imul
add
je
repz
sub
xlat
push
cld
outsb
push
pushf
mov
mov
pushf
pusha
arpl
lods
mov
mov
cwtl
pop
xchg
out
sub
je
lds
outsl
cmpsb
mov
mov
jnp
hlt
adc
jbe
xorl
dec
push
jnp
les
or
and
mov
into
arpl
or
xchg
rcpps
shl
mov
push
les
insl
jmp
pushf
shrl
or
jmp
pop
mov
dec
sbb
data16
and
jmp
jb
scas
scas
pop
in
enter
mov
cmp
loope
add
stc
jne
out
dec
fstpt
mov
xchg
and
dec
cmp
out
bound
daa
push
fmull
mov
push
and
cli
pop
mov
cmp
mov
jmp
pop
test
add
jg
leave
mov
add
add
adc
jmp
xchg
std
push
addr16
add
add
add
rol
test
adc
jnp,pt
mov
jo
aas
or
mov
xor
js
sbb
addl
dec
and
cmp
test
rcrb
les
jae
inc
xchg
in
pop
in
mov
inc
mov
fwait
cmpsb
adc
jb
cmc
ffree
xor
mov
repnz
mov
xor
xor
sarl
movl
popa
ljmp
dec
pop
data16
jl
mov
push
xor
sbb
je
orl
out
pcmpeqd
xor
dec
test
jnp
std
xchg
cmp
scas
cmp
xlat
sub
xor
mov
out
mov
sub
jmp
pop
add
out
xchg
sub
fists
orb
ficompl
adc
jae
mov
lret
outsl
and
das
cmp
lods
repz
mov
jl
mov
add
add
clts
std
iret
mov
xorl
push
xor
push
inc
mov
idivl
push
repnz
cmp
mov
movsb
push
sub
xchg
push
rcrl
xchg
and
jns
mov
jne
push
mov
add
xchg
push
out
and
inc
cmpsl
push
fistl
stc
mov
dec
das
pusha
pop
ss
xchg
aas
lcall
lock
sub
in
sub
loop
ss
lods
sbbl
test
sar
loope
shlb
xor
and
shl
jo
gs
int3
inc
xchg
mulb
andb
jae
add
cmp
subb
sti
lret
jl
lock
sbb
jmp
xor
sbb
stos
cwtl
cmp
cld
push
mov
and
pusha
push
dec
aaa
and
andl
sbb
xor
and
add
add
daa
push
cld
push
std
jmp
dec
push
inc
arpl
add
add
add
push
xor
and
pop
jmp
inc
xor
jp
dec
lret
stos
lods
and
cltd
mov
das
jecxz
es
repnz
sahf
cwtl
cmpsb
lret
or
movsb
shll
sub
repnz
or
aad
cltd
mov
jmp
mov
or
xchg
sbb
fdecstp
mov
shrl
test
scas
mov
stos
test
xchg
aam
popa
iret
ficompl
cmp
jge
mov
test
sub
ja
xchg
inc
push
xchg
std
cmp
shlb
loope
ss
out
or
mov
icebp
addr16
jl
pop
hlt
in
xchg
sarl
test
orl
movl
lcall
inc
aad
xchg
pop
insb
mov
jbe
xor
push
and
ror
js
xchg
push
addr16
notl
pop
ret
int3
lods
dec
scas
inc
movsb
outsb
mov
aaa
test
incb
add
add
add
sbb
dec
push
out
aad
insb
xor
add
add
add
mov
dec
dec
xchg
adc
push
jo
loop
mov
sbb
pop
pop
add
adc
icebp
stc
imull
xorl
test
mov
mov
fisubl
or
push
out
lods
and
or
sub
jecxz
insb
shrb
and
ds
mov
inc
or
daa
pop
jne
enter
xchg
aas
jp
lods
and
xchg
xor
nop
repz
sti
lods
sub
out
mov
adc
andl
movsb
or
xchg
push
cmp
mov
sbb
in
rcrl
mov
repz
fwait
and
inc
dec
push
into
adc
inc
rcl
fdivrl
sete
je
in
pop
jmp
mul
pop
jecxz
repz
sbb
mov
jns
push
push
add
add
idivl
or
dec
inc
mov
add
add
xchg
aas
pop
ljmp
mov
inc
pop
out
or
jns
sub
hlt
inc
inc
fistpl
mov
lcall
pop
imull
data16
popa
add
pop
clc
mov
jno
inc
cmp
sti
adc
mov
jle
push
cmp
gs
divb
adc
mov
fdiv
outsl
ds
mov
lret
and
popf
pop
add
pop
pop
sub
push
ljmp
pusha
enter
repnz
pop
lcall
pusha
jmp
orb
lods
mov
lcall
scas
mov
ret
icebp
shrb
jecxz
je
addl
or
hlt
xchg
test
bound
scas
ljmp
cmpsl
add
mov
push
gs
adc
lock
jecxz
or
int3
leave
jecxz
push
jp
xchg
cltd
xlat
movsb
xchg
xor
sub
add
add
jg
xchg
orl
popf
addr16
add
add
add
insl
add
sub
xor
sub
pop
sbb
in
and
mov
daa
dec
sub
inc
sbb
mov
ret
inc
inc
mov
lret
psubusb
mov
push
std
icebp
push
loope
sbb
inc
ret
in
std
cmp
ja
cwtl
iret
mov
decl
xchg
sbb
ja
sysenter
test
and
push
cmpl
add
pop
pop
cs
repnz
cli
pop
push
cmc
imull
shlb
and
fnsave
pop
xchg
and
cmpsb
push
xor
cmpsb
push
xchg
jl
push
call
jg
mov
pop
xchg
test
lods
mov
mov
jecxz
in
fcomps
mov
mov
shrl
mov
into
push
orb
test
inc
pop
sub
and
cld
cmpb
loope
ljmp
inc
sbb
pop
xchg
js
add
add
push
dec
lret
jmp
imul
aaa
je
ds
inc
add
add
add
adc
or
popl
xchg
mov
push
mov
lods
and
das
ljmp
pusha
ficoms
std
mov
test
leave
int3
inc
and
repnz
sub
punpcklwd
inc
xor
push
jbe
inc
stos
add
and
ret
push
xor
hlt
xchg
xchg
je
or
ljmp
and
js
jne
mov
sub
mov
adc
cmp
shl
push
push
push
mov
test
sbb
pminub
or
cli
dec
outsl
xchg
jl
fwait
dec
xchg
call
int3
cmp
jecxz
jbe
add
xor
stc
test
fistpll
mov
int3
xchg
negl
dec
dec
push
das
stc
mov
cmc
loope
dec
push
shrl
push
mov
xor
and
icebp
jne
out
jae
lret
inc
dec
and
push
les
out
test
lds
cmc
cwtl
xchg
push
sub
pop
fnstenv
inc
add
add
add
mov
mov
sbb
jo
jns
gs
mov
add
xchg
mov
mov
cmpsb
or
sbb
pop
mov
call
xchg
sub
jns
pop
or
xor
sub
inc
iret
adc
mov
jg
mov
xchg
sub
xchg
jo
adc
dec
insl
pushf
cmp
cmp
push
push
or
push
xchg
pop
movsb
lea
pop
mov
cmp
push
movsb
cmp
push
mov
out
jge
arpl
inc
xor
aad
clc
sbb
cmp
push
cld
cld
addr16
mov
sub
loop
mov
enter
push
sub
pop
xorl
iret
pop
pop
add
mov
mov
cmp
test
lcall
dec
sub
or
push
sub
mov
adc
pop
es
sbb
leave
or
add
add
jns
xor
jg
loop
inc
addr16
add
add
add
in
mov
jg
jo
js
ja
ja
xchg
mov
mov
push
mov
icebp
pushf
scas
lret
sub
in
fidivrs
outsb
pop
sbb
xchg
jg
jecxz
inc
cld
outsl
push
aam
adc
mov
adc
cmc
jg
mov
movsl
hlt
xor
repnz
xchg
mov
bound
test
dec
pop
jae
dec
xchg
imul
xchg
bound
fstp
jge
subl
mov
scas
das
cmp
pop
ss
xchg
rcrb
push
mov
inc
xchg
sub
int3
dec
mov
inc
shrb
or
mov
repz
inc
ror
or
xor
scas
inc
sbb
loopne
lcall
push
adc
adc
jne
push
shll
rolb
jl
mov
jle
xor
lods
push
loopne
add
add
ret
jg
decl
rol
popf
stos
sahf
add
add
add
add
xchg
js
ds
dec
out
mov
movsb
les
mov
shlb
sti
cmp
incl
sbb
pop
ret
daa
xlat
push
in
cld
xorb
jp
imul
imul
push
daa
fcmovnb
bound
inc
in
mov
adc
and
sbb
fidivl
pop
clc
or
js
cmpsl
fs
sahf
or
mov
add
pop
adc
mov
fcoms
cli
pop
or
pop
xor
aam
stos
xchg
adc
add
jb
lcall
sbb
arpl
push
pop
inc
pop
sub
fisubrl
push
add
in
cmp
mov
data16
fnsave
inc
nop
cmpsb
sub
pop
loope
dec
jg
pop
cmc
out
jmp
pop
add
push
push
test
test
fwait
sarb
fwait
dec
xchg
loope
xor
frstor
adcl
sbb
rolb
add
add
das
mov
out
aad
inc
cmp
addr16
add
add
add
inc
cmp
lds
outsl
test
inc
idivl
cmp
stc
dec
lods
cltd
adc
inc
mov
jg
sub
adc
addr16
mov
inc
or
fsts
dec
push
jo
jae
dec
int3
daa
xchg
in
mov
imul
lahf
adc
lea
sbb
stos
out
adc
push
inc
add
cwtl
movsb
repnz
sbb
jne
sub
in
push
in
cs
out
out
mov
or
scas
sbb
dec
and
adc
ret
mov
outsl
lods
mov
sbb
push
mov
mov
pop
xchg
mov
pop
bound
mov
mov
je
xor
flds
mov
mov
sbb
stos
mov
xchg
or
repnz
mov
add
insl
movsb
pop
inc
movsl
into
sub
cltd
jg
and
xor
sbb
rorl
imul
add
hlt
gs
dec
adc
xor
add
add
xchg
pop
pusha
addr16
ficomps
popa
pop
push
mov
stos
in
inc
xchg
pop
dec
mov
and
pop
mov
adc
cmp
addb
mulb
push
inc
andl
push
sbb
clc
fwait
notb
xor
jae
mov
mov
xor
mov
jmp
into
mov
cli
xor
in
cmp
repz
cmpsl
sub
xor
push
pop
movsl
cmp
mov
inc
sarl
mov
adc
scas
cmpsl
lret
shl
je
mov
test
push
push
jmp
add
daa
and
cmc
mov
push
sub
lods
aam
aam
scas
stos
pop
dec
mov
pop
das
jbe
pop
outsl
xchg
fldenv
pop
call
xor
outsl
cwtl
loope
add
xor
loope
lea
mov
inc
xchg
mov
stc
shrb
or
sbb
jo
xor
dec
sbb
add
aas
gs
pop
repnz
dec
add
add
add
add
xlat
cld
adc
adc
sbb
mov
or
mov
lcall
out
and
lret
das
adc
lcall
in
add
xor
lret
and
daa
es
dec
push
leave
xchg
jae
movsl
outsl
dec
ds
movsl
push
xchg
xchg
sbb
stc
mov
subl
js
mov
adc
or
adc
mov
iret
fwait
lret
fimull
mov
mov
lahf
scas
mov
shrb
cmpsb
xchg
lahf
fs
sub
lock
lahf
mov
sbb
divl
mov
inc
sub
sub
sti
adc
pop
loop
adc
popf
imul
mov
pusha
xlat
aaa
and
pop
insl
mov
pop
jp
lods
cmp
dec
push
gs
call
xchg
aam
adc
daa
cmp
sahf
aad
sub
mov
out
fisttpll
lock
cmpsb
addr16
add
add
add
or
mov
pop
jnp
and
pusha
adc
repz
ja
bound
jb
jns
inc
add
jecxz
adc
cld
jne
cmp
orl
mov
jno
sub
pop
insb
ja
xchg
and
test
mov
jne
aad
push
popa
push
rcr
adc
cmpsb
mov
mov
push
hlt
gs
in
pop
lcall
popa
adc
jp
push
xor
dec
cmp
xchg
mov
push
aas
dec
stc
rorl
jp
push
out
and
push
push
imul
add
adcb
push
test
adc
add
jbe
mov
jne
push
inc
outsb
pop
jecxz
mov
testb
ss
xchg
in
les
dec
cs
sub
or
jge
fdivrl
cmc
stos
sub
in
pop
and
mov
xor
std
adc
insb
sbbb
xchg
add
add
mov
ljmp
add
add
add
xchg
fcoms
inc
xor
push
hlt
jmp
push
fsubl
imul
and
xor
pop
mov
sub
jle
mov
int3
imul
mov
pop
mov
aaa
enter
mov
inc
xchg
in
add
xlat
icebp
call
sub
push
fidivs
popa
or
popa
stos
cmpsb
mov
cli
call
jl
or
sbb
inc
pop
sub
bound
loope
xchg
addr16
mov
mov
adc
and
mov
out
jg
sbbl
pop
popa
lods
loopne
push
mov
or
adc
pushf
add
test
insb
stos
push
test
adc
xchg
cmp
gs
adc
dec
sahf
das
cmp
outsb
or
and
rol
ja
mov
mov
push
pusha
imul
add
jmp
out
aas
jo
sahf
jb
adc
add
add
add
xchg
clc
lods
sbb
mov
movsb
fnsave
jp
mov
hlt
dec
fidivrl
pop
popf
shlb
jge
jnp
stc
cmc
or
mov
jecxz
jmp
jne
jbe
and
sub
cmpsl
negb
pop
mov
lods
test
test
jl
cs
push
xchg
jo
lret
lock
xchg
xchg
cs
sub
jge
cli
fistpll
fsubl
xor
jg
xchg
push
cld
js
imul
mov
mov
pop
jbe
jno
add
jns
in
enter
cld
push
addb
mov
loopne
dec
std
jae
xor
inc
hlt
or
sahf
jmp
mov
andl
mov
push
pop
pop
mov
lret
lret
mov
mov
sbb
or
pop
sbb
jp
sahf
dec
in
jnp
sbb
out
sub
add
add
imul
out
mov
mov
xchg
jo
addr16
add
add
add
sub
iret
mov
aaa
jecxz
and
xor
xchg
cmp
or
fmull
addr16
xlat
inc
bound
lcall
dec
add
mov
shrl
aaa
sarb
fcomi
mov
mov
and
repz
daa
aas
js
fwait
jmp
out
sub
outsb
mov
out
call
mov
sub
pop
out
dec
dec
aad
jo
popf
or
inc
mulb
and
mov
shl
lods
jae
cmovl
or
loope
jp
scas
or
cmpsb
pop
dec
jb
fstpl
aam
xlat
insb
jmp
test
pop
cmc
xchg
notb
pop
jne
lods
cli
aam
icebp
jge
mov
inc
repz
sub
cmp
push
int3
js
sbb
repnz
pushf
inc
lods
mov
cltd
and
sti
cwtl
int
xchg
jae
mov
add
add
add
dec
stc
mov
ljmp
addr16
add
add
add
es
popa
mov
cwtl
hlt
mov
xlat
ror
xor
subb
sbb
add
out
cmp
pop
jmp
mov
add
jae
scas
jno
call
inc
hlt
lock
or
mov
int
orl
cmpsb
push
in
xchg
lahf
stos
stc
dec
cltd
in
hlt
sub
add
jge
push
add
pop
stc
mov
sub
mov
pop
lods
jl
mov
rorb
push
bound
xor
xor
out
push
movsl
xchg
inc
clc
mov
outsb
inc
adc
inc
sbb
pusha
rcr
cmp
or
adc
add
out
out
sbb
xor
cmp
add
xchg
ljmp
shlb
inc
cmpsl
add
lods
jge
cmpsb
add
test
add
xor
xlat
jo
repnz
xchg
jp
imul
lcall
xchg
cmp
jle
jg
cld
lcall
jp
push
add
add
add
fisubrl
lock
dec
and
imul
dec
cmpsb
in
jle
jmp
imul
cmc
sbb
add
outsb
and
enter
js
adc
jp
and
mov
hlt
sbb
xchg
sbb
neg
add
fbstp
mov
mov
cld
lcall
jmp
bound
scas
pop
sub
test
jno
mov
add
xor
lds
aaa
aaa
lahf
and
sbb
adc
add
push
push
scas
fcmovnb
sbb
pop
repz
pop
push
notb
xchg
aaa
out
mov
cli
ret
ja
sbb
xchg
mov
cmp
xchg
xor
arpl
aam
loopne
or
jg
in
lock
test
jmp
mov
dec
jecxz
cmc
aaa
mov
scas
mov
aad
adc
mov
jmp
xor
mov
xchg
mov
pop
sbb
addr16
add
add
add
push
cltd
push
sub
lcall
sbb
movhps
adc
scas
inc
inc
sbb
fwait
nop
mov
cwtl
inc
addr16
mov
xchg
in
inc
cmp
jns
jns
mov
les
push
sbb
dec
push
scas
jnp
bound
das
or
xor
mov
sub
sti
int3
xchg
jp
push
push
int
xchg
mov
cmove
mov
xor
in
pop
retw
mov
xchg
shlb
mov
add
or
sub
or
inc
xchg
xor
in
pop
mov
dec
sub
add
icebp
sbb
cli
inc
jb
push
clc
mov
inc
xor
adc
lcall
notl
and
jns
adc
jmp
sbb
rolb
xchg
jle
test
xchg
icebp
clc
push
pop
inc
cmpsb
push
fisubl
mov
or
mov
and
adc
addr16
add
add
add
repz
jbe
out
in
iret
and
aam
or
fwait
adcl
mov
cmp
stos
in
mulb
xor
or
jmp
in
lret
dec
out
in
stc
xchg
push
subb
das
mov
xchg
lods
mov
jge
lods
imul
inc
or
or
mov
mov
rcrl
test
lods
sbb
fwait
roll
push
ds
inc
popa
sbb
xor
add
push
ror
dec
shld
fidivrs
hlt
sti
push
incb
adc
push
cmp
enter
xchg
and
jo
mov
orb
repz
cmp
fnclex
xor
inc
adc
push
sub
xchg
call
jge
ficoml
sbb
jge
or
sub
loope
pop
pop
fsubrl
mov
out
cmp
ret
or
push
xchg
mov
add
add
add
or
xor
daa
mov
insl
fsubr
pop
lahf
sub
iret
inc
icebp
inc
push
and
je
xor
sar
push
imulb
or
add
gs
rorb
addr16
push
into
mulb
pop
jge
add
cmp
outsb
frstor
lret
cmp
fcmovb
pop
in
xor
call
or
imul
lock
jle
mov
in
rep
scas
sub
fwait
ljmp
pop
sbb
and
ret
stos
insb
dec
jecxz
insb
adc
xor
mov
loopne
xchg
cmc
imulb
js
out
pop
int3
add
cs
mov
jo
jno
jmp
stc
lock
pop
mov
xor
add
sub
cli
stos
sahf
imul
jns
popa
mov
jl
or
push
shll
out
pop
pop
pushf
push
cmp
push
add
add
add
xor
not
mov
cmp
test
int3
push
lret
arpl
call
popa
lds
mov
jb
in
cmp
imul
pop
sub
mov
aaa
cmpsb
mov
add
shrl
subb
loopne
add
sahf
pushf
mov
mov
jmp
xchg
repz
into
jne
je
lret
test
fidivl
fidivrl
jge
loope
mov
pop
cmp
in
sub
mov
pop
mov
fimull
inc
inc
outsl
lcall
mov
loope
push
insb
mov
push
imul
notb
int
xchg
lret
xchg
leave
xor
mov
nop
roll
aad
mov
sub
lds
pop
push
add
pop
cmpsb
jle
sub
inc
jge
iret
xchg
dec
test
cld
mov
out
in
sbb
jne
add
push
stos
push
lcall
hlt
mov
xchg
jle
addr16
add
add
add
in
jbe
push
loopne
ret
mov
mov
cmp
cmp
pop
bound
dec
test
push
adc
lcall
add
icebp
adc
sbb
and
pop
test
jmp
jle
push
cwtl
mov
push
sub
in
xchg
mov
add
out
imull
sbb
xchg
es
xchg
repnz
in
test
dec
ret
jg
daa
pop
test
cmp
push
test
mov
pushl
jl
test
push
push
xrelease
nop
mov
add
into
mov
adc
test
mov
ret
movsl
sub
lret
jmp
ret
sub
xlat
mov
mov
xchg
adc
jle
lea
sbb
ret
insb
in
mov
mov
jge
xchg
cmp
mov
test
mov
fnsave
jne
jp
mov
add
bound
imul
xchg
jns
addr16
add
add
add
inc
incb
cmc
rcrb
pop
ss
jmp
dec
adc
repz
or
clc
out
mov
stos
test
mov
jp
emms
insl
mov
dec
iret
std
sahf
push
in
mov
out
jnp
inc
add
xor
fcmovu
and
push
inc
cmp
push
rcll
add
pop
or
xchg
addr16
sub
add
and
push
adc
dec
popf
imul
out
jb
mov
sbb
clc
inc
cmp
push
xor
addr16
or
fwait
lds
scas
out
aaa
aas
notb
aad
stos
sub
ljmp
push
jp
mov
jno
push
pop
adc
arpl
sub
and
mov
mov
jno
lret
sub
add
lods
cmp
fwait
inc
xchg
pop
sub
or
pushf
sbb
out
mov
lret
insb
ret
outsl
sbb
jae
jmp
mov
sbb
fcompl
jae
fwait
cmp
stos
sarb
addr16
add
add
add
out
inc
and
sbb
arpl
andl
call
mov
xchg
fimull
dec
repz
aad
sub
je
lahf
sub
sub
mov
in
adc
ret
test
bound
jg
leave
mov
push
xchg
cmp
lret
jl
imul
ss
jg
es
je
sub
push
mov
aas
pushf
jl
orb
sbb
xchg
in
loop
push
adc
sub
xchg
mov
popl
xchg
pop
ja
mov
dec
insb
add
adc
into
dec
jae
fs
or
out
sbb
add
ret
pop
sub
arpl
xor
xor
dec
sarb
push
or
fmul
sbb
and
cld
leave
sub
or
dec
adc
adc
push
xchg
fiadds
push
inc
push
clc
mov
and
hlt
pusha
sub
loop
pop
add
add
add
cmpsb
xchg
xor
sub
inc
pop
pop
shrl
mov
mov
insb
mov
imul
sbb
mov
cmp
mov
mov
jno
js
push
cmpsb
mov
aam
sub
cmpsb
cld
aam
inc
dec
scas
ss
xlat
dec
inc
mov
or
repz
jo
xchg
fistpll
out
adc
and
in
xor
push
sbb
pop
pop
xchg
js
mov
xchg
sub
pop
rclb
sub
std
mov
test
inc
jle
imul
adc
add
ds
inc
mov
and
push
cmp
sbb
inc
movsl
aam
pop
hlt
stos
lcall
cli
shrl
dec
gs
lods
stos
popf
cmpsb
pop
leave
and
lods
outsl
push
mov
or
insb
xchg
jae
loope
sbb
scas
and
xchg
mov
lahf
push
fsubr
insl
jbe
dec
lahf
fwait
sub
add
add
shr
mov
ds
dec
addr16
add
add
add
in
mov
in
lods
push
jnp
dec
mov
dec
out
jbe
push
cltd
sub
in
dec
push
jge
mov
xor
jno
daa
mov
jmp
mov
push
int
insb
mov
pop
jo
mov
xchg
in
dec
adcb
pop
cmp
fistpl
mov
popa
mov
mov
jne
jg
jns
inc
stos
mov
fcmove
xchg
sbb
int3
adc
lret
fistl
sbb
cltd
les
dec
jle
lods
cmp
shrl
pop
cmpsb
test
pop
stos
mov
test
sbb
and
testb
mov
sarb
cmp
icebp
daa
clc
cltd
fdivrs
jmp
ljmp
lds
rolb
mov
xor
pop
popf
fwait
testb
and
daa
mov
je
stc
xor
aaa
adc
mov
ficompl
mov
test
or
fdivs
xor
mov
add
add
aas
jp
mov
pop
aam
enter
lock
ljmp
push
mov
pop
test
ljmp
xor
stos
repnz
jmp
xor
fidivs
xor
push
ficomps
or
in
in
sbb
dec
jb
sbb
add
cmp
inc
dec
es
push
loope
cmp
and
xor
jl
adc
xchg
movntq
out
fistpll
in
imul
jb
or
les
cli
test
and
push
lock
sub
inc
adc
fadd
and
push
jnp
cmpsb
push
jns
and
jnp
cmp
push
leave
xor
and
int
mov
mov
scas
lret
sub
cmp
addb
imul
adc
rorl
std
push
or
cmp
iret
inc
mov
mov
iret
mov
cmpsl
scas
mov
mov
and
das
cmp
pusha
push
and
push
pop
add
add
add
adc
movsb
lcall
push
cmp
fidivl
repz
test
sub
ds
mov
lds
movsb
jnp
int
cmp
xor
pop
stos
jnp
ds
aaa
sbb
ds
lcall
sbb
cmp
push
out
scas
xor
add
nop
mov
mov
test
adc
and
shl
mov
jge
mov
mov
mov
xchg
jle
mov
fcomps
iret
cltd
adc
push
dec
or
test
xchg
aaa
je
inc
in
adcl
nop
lret
leave
sub
inc
in
daa
dec
xlat
jg
sti
sub
add
mov
pusha
sbb
or
cmpsl
aam
cld
sub
inc
stos
je
add
push
test
xchg
cmp
pop
pop
shl
adc
inc
scas
enter
mov
cmp
filds
inc
inc
sahf
or
xor
aad
fsubl
mov
ja
mov
or
addr16
add
add
add
and
das
or
sub
lds
leave
jecxz
das
outsb
push
adc
cmp
mov
mov
cs
mov
leave
insb
or
outsl
xchg
mov
pop
xchg
xchg
repnz
cli
mov
push
scas
jecxz
cwtl
adc
xlat
xor
mov
inc
mov
xlat
shlb
jmp
jmp
shll
cmp
add
or
xchg
dec
xchg
jle
fisubrs
sub
cmp
push
xchg
call
lds
outsb
lods
js
out
pop
test
fwait
ja
negb
fs
jge
mov
in
cmp
and
cmp
sbb
xorl
addb
repz
lods
cwtl
mov
xor
xchg
sub
dec
ficomps
inc
pop
fistl
rorl
aaa
frstor
out
sbb
inc
push
test
into
outsb
test
inc
mov
add
add
xor
xlat
out
cld
add
pop
add
add
add
mov
sbb
hlt
enter
add
or
mov
aam
and
js
pusha
and
push
inc
fldenv
aad
popa
out
jl
scas
out
mov
push
loope
lret
adc
call
cs
into
gs
inc
mov
pop
cld
inc
jne
pop
cwtl
movd
in
fisubl
jne
adc
daa
sub
arpl
ds
sbb
dec
lahf
test
lods
inc
jle
pop
xlat
ds
cmc
ds
cltd
sbb
hlt
pushf
jo
cld
pop
fmul
lods
inc
pop
aaa
sbb
idivb
xchg
outsl
pop
in
es
sbb
repz
ljmp
outsb
cld
lock
popa
vhaddps
sahf
insl
jbe
fcmovu
repz
cmp
dec
add
test
lret
lods
lods
arpl
pop
cwtl
push
repz
movsl
xchg
cwtl
sbb
cmp
cmp
inc
rcll
cmp
mov
mov
in
sub
add
add
add
mov
loope
push
int
fdivp
jb
mov
push
addr16
sti
pfacc
scas
sub
mov
and
add
out
or
lods
lret
inc
leave
jae
bound
cmp
mov
outsb
mov
mov
in
in
mov
test
ljmpw
std
sbb
bound
xchg
jmp
andl
jp
cmpsb
scas
lea
add
sti
push
jne
test
lds
jb
lret
xchg
sub
push
test
push
cmp
sbb
scas
mov
sub
mov
or
dec
clc
and
lcall
out
mov
fidivs
xor
test
xchg
mov
out
jo
cmc
iret
sub
out
or
pop
das
jl
push
repnz
insb
pop
arpl
fdivrs
rcl
add
into
add
add
out
into
push
push
inc
lahf
mov
addr16
add
add
add
pop
xchg
and
call
xor
addr16
or
adc
insl
and
sbb
jns
and
arpl
repz
pop
mov
jb
mov
jp
dec
out
cltd
pop
adc
out
xor
pop
jmp
lock
add
ljmp
int
pop
jg
mull
inc
pop
adc
cs
mov
jo
xchg
jl
xor
dec
pop
cltd
out
in
fdivs
dec
cs
adc
mov
sub
sbb
ret
insl
xchg
push
xlat
int3
aad
jge
std
and
pop
mov
loop
in
xchg
dec
call
test
mov
xchg
adc
xor
dec
pop
cmp
daa
je
cmp
stos
ret
xchg
mull
dec
mov
push
adc
fsub
outsl
mov
jne
mov
mov
sub
add
add
xchg
inc
shl
xlat
mov
jg
or
bound
add
add
add
cltd
sub
mov
adc
rorl
mov
enter
inc
push
add
scas
xchg
mov
loop
mov
pushf
pop
in
xor
outsl
jns
stc
mov
lret
jp
mov
leave
jp
nop
inc
pop
sub
test
sti
mov
and
stos
in
and
jo
movsl
inc
addr16
testl
and
fmul
fidivrs
insl
and
popa
out
sbb
or
and
lea
cli
fnstenv
aas
xchg
loop
fbstp
daa
outsb
out
std
fwait
idivb
loop
stos
pushf
cltd
lds
cmpsb
ja
mov
cmpsl
inc
dec
pop
pop
insl
ss
add
repnz
insb
flds
cli
adc
inc
leave
inc
jns
sbb
push
std
xchg
push
pop
lahf
das
hlt
inc
adc
mov
inc
pop
sub
insl
movsb
cmp
mov
repz
daa
bound
lret
bound
add
add
lahf
pop
cmpsl
jne
mov
mov
arpl
add
add
add
sbb
cmp
dec
adc
daa
les
xchg
push
mov
icebp
aad
push
dec
pop
xchg
push
jg
xchg
sti
mov
repz
mov
add
xor
xor
jbe
adc
test
mov
mov
lea
mov
inc
sub
xchg
imul
test
jno
sarb
xchg
xor
and
mov
adc
jp
daa
enter
into
sub
dec
sarb
fstps
xor
push
daa
popa
push
mov
cmc
repz
aaa
lret
dec
inc
or
xor
mov
and
jae
rcrl
shlb
sarl
xchg
lods
mov
sub
jno
mov
mov
icebp
push
pusha
cld
and
in
in
sbb
inc
push
pop
daa
enter
out
test
or
in
cmp
test
pusha
loopne
test
add
add
idiv
jg
sub
scas
enter
add
add
add
cvtps2pd
push
lds
add
pop
inc
insl
in
test
imul
push
lea
jecxz
imul
test
sti
push
jnp
movsl
cld
inc
dec
fcomps
mov
inc
lgs
addr16
dec
sub
fs
pop
aas
scas
sub
negl
sub
outsl
je
mov
fldl
fmull
add
int3
enter
lret
out
sbb
xlat
loope
mov
jbe
lea
insb
dec
clc
scas
push
push
mov
xorb
test
popa
into
fsts
jne
mov
mov
addr16
nop
cmp
and
mov
inc
mov
data16
movsb
dec
adc
push
mov
stos
inc
xabort
mov
das
add
pop
adc
sahf
xor
sub
aam
and
xor
jns
push
mov
fcomip
and
pushl
inc
pop
mov
fstps
test
add
add
add
push
sub
xor
add
int3
lock
jns
fistps
out
inc
pop
hlt
or
rorb
sbb
mov
or
inc
inc
dec
sbb
push
dec
mov
adc
sub
ds
jno
std
xor
dec
xchg
rolb
jne
or
push
cmpsb
add
fs
push
gs
push
fcom
jbe
pop
ja
pop
movq
and
push
in
stos
jecxz
loope
aad
mov
sub
xorb
push
aaa
cmp
nop
mov
sub
mov
mov
add
pop
jnp
add
jl
stos
int
jp
add
cmpsl
mov
icebp
and
call
xor
shl
push
adc
cmpsb
ffree
mov
sub
pop
sub
popa
add
xchg
scas
ljmp
mov
icebp
lcall
imul
jbe
xchg
dec
repnz
movsb
jle
arpl
sti
adc
add
add
add
xor
shl
ret
xor
dec
or
and
push
addr16
jae
fs
shrb
pusha
roll
fcoml
dec
mov
cld
sbb
mov
dec
sbb
push
sub
jo
por
adc
test
adc
fldcw
movsl
cmp
sbb
out
lahf
jno
sbb
cmp
std
pusha
and
popf
roll
pop
std
cli
push
cli
aad
repnz
jl
xchg
or
filds
loop
adc
lods
shl
sub
mov
cmp
fisttpll
pop
std
cwtl
adc
xchg
mov
mov
in
gs
jbe
lret
and
or
or
xor
cmp
cwtl
in
fldenv
add
push
ss
pop
shl
repz
pop
imul
mov
nop
mov
sbb
mov
mov
adc
add
add
jmp
sub
stc
stos
orl
add
add
fisubl
dec
pop
cltd
mov
push
lahf
adc
xchg
and
fidivrl
cmc
pop
sti
xchg
aam
in
and
pop
add
in
negl
jno
outsl
fidivrs
xchg
iret
inc
pop
stos
xchg
call
loope
test
call
aas
loop
lods
inc
dec
jns
push
and
jg
in
cli
and
or
mov
adc
fcomps
call
mov
div
push
sub
mov
xor
cmpl
mov
repnz
mov
cld
push
shll
cmp
jmp
stos
pop
popf
push
mov
push
in
repz
popf
outsl
test
push
loope
mov
sbb
cmp
and
lock
in
push
mov
cli
xor
scas
xchg
cmpsb
sub
xor
or
mov
dec
mov
and
add
add
mov
fnstenv
mov
push
add
jle
mov
xlat
outsb
rcl
cmpsb
rep
mov
lret
cmp
fwait
push
dec
aaa
pop
pop
pusha
xor
cmp
bound
ss
push
jecxz
cmpsl
mov
push
nop
dec
out
cwtl
mov
bound
add
inc
push
cmc
pop
movsl
cld
inc
subb
or
call
inc
movl
mov
mov
subl
sub
jg
adc
xorl
push
mov
jnp
add
push
cmp
sahf
or
pop
insb
fwait
testl
mov
cmp
sbb
pusha
mov
outsl
xchg
jecxz
pusha
mov
addr16
inc
nop
loope
call
xchg
das
add
movsb
cmpsl
sbbl
dec
mov
std
xchg
or
jb
das
xchg
and
inc
fistps
jl
fmull
dec
mov
enter
xlat
sbb
push
rcrl
movsl
fbstp
add
cld
je
jbe
jns
sbb
mov
lods
jg
imul
add
xchg
dec
in
sarl
gs
mov
and
mov
inc
jle
mov
insl
adc
mov
add
xor
ljmp
fidivs
repnz
inc
fldenv
and
mov
lcall
es
test
shrl
push
sbb
xchg
and
add
or
outsb
and
sub
or
ja
iret
sbb
fstp
xor
push
cmp
inc
enter
pop
jns
mov
pop
fiadds
inc
fstp
inc
inc
int
jmp
jns
and
sahf
fidivrl
dec
mov
pop
lods
xor
push
lock
dec
bound
cmp
cmp
or
inc
cmp
aas
movsb
les
test
and
int
int
ret
adc
mov
bound
add
add
cltd
jmp
fildl
or
add
add
add
in
push
fdivs
cmp
cmp
add
mov
je
sub
popa
xchg
pop
inc
cwtl
or
rclb
add
test
mov
rclb
shr
cmp
out
inc
pop
and
jno
das
mov
jb
insl
enter
in
arpl
jl
push
pop
into
sbbl
mov
filds
inc
jge
outsb
lods
cmc
outsl
cltd
pop
xor
out
adc
lea
pushf
fadds
in
cmp
xchg
mov
ja
sub
jno
add
nop
sarl
incb
shrl
bound
xchg
insl
lods
sub
pop
xchg
xor
mov
sub
insl
sbb
sbb
iret
xorb
cmp
stos
sub
pushf
add
aaa
lahf
gs
test
pushf
hlt
mov
ja
cmp
pusha
in
ret
loopne
add
arpl
push
inc
jecxz
scas
mov
add
push
jg
dec
xchg
dec
outsb
and
lock
add
add
movsb
push
fcomps
push
mov
clc
inc
mov
mov
hlt
inc
and
inc
pushf
mov
push
dec
in
fadd
cltd
dec
xchg
addb
adc
and
dec
imul
dec
pop
fisubrl
jg
add
dec
mov
mov
in
pusha
enter
or
sahf
dec
sub
push
cwtl
push
setne
push
lock
push
jo
push
test
call
jb
mov
push
daa
inc
cmp
xor
imul
xor
mov
adc
pushf
lods
sub
fldenv
cmp
ds
mov
inc
test
mov
cmpsl
addr16
imul
push
inc
mov
mov
jecxz
loope
jecxz
mov
mov
dec
xor
mov
fdiv
outsl
sti
add
push
or
jecxz
jbe
lcall
mov
ljmp
iret
sub
push
cld
aad
add
add
mov
fucomip
push
insb
xor
sbb
add
add
add
outsl
pop
jle
jp
data16
stos
aas
pop
test
jp
pop
cmp
and
xchg
or
dec
push
xor
mov
popa
cmc
sbb
js
mov
sbb
insb
hlt
mov
add
scas
sub
in
add
ret
pop
lahf
push
push
push
xchg
lcall
mov
insb
sar
or
das
into
cs
mov
les
jne
into
xchg
in
ja
cmp
mov
jmp
cmpb
out
ds
test
popa
mov
es
repz
cmc
aaa
jmp
pusha
jp
ljmp
sbb
stos
pop
aam
mov
push
add
fcmovu
or
fcom
cmp
mov
and
popf
ret
jmp
sti
test
or
xchg
xor
mov
push
mov
inc
add
lock
rorb
rolb
ret
jg
xor
cmp
add
add
dec
out
iret
jmp
aas
in
push
pushw
sbb
add
add
add
clc
mov
xor
mov
or
jne
jne
or
dec
in
push
inc
rorb
bound
mov
loope
ljmp
and
xchg
or
jg
mov
addr16
lret
daa
cwtl
call
ret
pop
dec
loope
shl
sbb
out
sbb
int
mov
cli
test
mov
or
mov
sub
std
mov
mov
cld
outsl
adc
daa
jmp
cli
pop
and
and
aas
nopl
rolb
mov
pop
jbe
push
inc
mov
insb
fcoms
call
daa
testl
iret
sahf
dec
cmpsb
fsubrs
push
sbb
sahf
jle
mov
xchg
cmp
pop
incl
sub
or
int3
pop
out
inc
xchg
fucomi
sahf
dec
or
cmp
ss
test
dec
pop
lds
dec
sbb
in
in
ret
into
sbb
adc
repnz
mov
cmpsb
push
jnp
std
cmpsb
pop
dec
sub
sub
push
mulb
add
add
add
mov
inc
xchg
inc
or
jo
mov
mov
adc
xor
xchg
sbb
push
ret
mov
mov
jp
cs
and
sub
mov
jae
pop
mov
xchg
cld
xchg
mov
and
outsl
jno
jle
lcall
test
stos
je
in
dec
ja
insl
fs
mov
ss
sbb
push
sbb
mov
xor
sbb
and
jnp
sbb
in
pop
mov
data16
or
mov
adc
pop
inc
movl
lods
or
dec
or
loopne
or
hlt
test
fldenv
add
xchg
sbb
subl
sbb
rorl
adc
mov
dec
movsb
and
fwait
mov
dec
mov
add
add
neg
std
sub
dec
pop
mull
add
add
add
xlat
xchg
sub
fnstenv
insl
xchg
cmp
je
mov
out
scas
cmp
adc
je
pop
imul
and
or
mov
mov
testl
push
je
or
test
into
subl
cmc
pop
dec
aam
push
repz
and
cmp
jge
inc
in
notl
push
cli
sbb
mov
daa
mov
push
and
sub
mov
add
fists
mov
mov
ds
xor
inc
icebp
dec
mov
push
test
sbb
lds
repz
nop
int
mov
pop
cmp
push
repz
dec
push
pop
add
int3
mov
lret
icebp
mov
mov
adc
push
or
movsb
xor
bound
mov
dec
dec
sti
jmp
pop
pop
push
flds
in
mov
add
add
cs
xor
cltd
mov
add
add
add
cmp
jecxz
or
call
out
addr16
mov
pop
sbb
push
inc
insb
shr
clc
imul
inc
fsubrl
and
xor
jbe
adc
jo
push
pop
push
cmc
fstpl
cmc
jp
stos
clc
ret
pop
ret
lods
nop
push
enter
pop
push
mov
sub
mov
pop
mov
nop
pop
ret
inc
das
xchg
data16
and
xor
push
dec
jo
out
in
inc
mov
mov
rcrl
jmp
pmullw
sbb
in
or
gs
fisttps
lret
mov
fiadds
ja
movsl
jmp
in
xor
fwait
shlb
loop
fbld
or
lcall
or
xchg
mov
lea
mov
and
xlat
repz
in
mov
loopne
aaa
lcall
out
sbb
pop
loop
jno
add
add
add
sub
or
fnstenv
push
loop
in
in
rorb
or
mov
addr16
mov
aad
adc
pop
daa
cltd
push
push
xchg
dec
jb
stc
dec
add
std
movsl
or
and
pop
inc
mov
sub
mov
mov
out
fsub
xchg
push
out
scas
scas
imul
out
aaa
out
pop
fcomps
push
jo
pop
pop
arpl
pop
das
pop
repz
dec
xor
lcall
loope
cmpb
imul
sub
and
lods
test
lcall
ds
xor
cmp
lds
aad
popf
cmc
mov
jnp
js
sbb
in
inc
subb
frstor
lock
push
sub
aam
mov
inc
and
je
lret
dec
out
lret
aad
xor
xchg
inc
pushf
mov
pop
daa
sub
ja
mov
xor
add
add
add
bound
js
clc
pop
jbe
fsts
daa
mov
xchg
push
push
push
fwait
call
imul
loop
shll
or
mov
jg
xlat
jmp
mov
int
fsubp
cmp
cmpsb
int3
call
sarl
push
jae
mov
push
andb
mov
mov
push
dec
mov
mov
stc
jno
shlb
clc
rcrb
mov
mov
fistps
xchg
aad
adc
add
cld
sbb
aam
inc
das
es
mov
cmpsb
dec
and
bound
mov
insl
gs
xor
xor
loop
sarl
inc
imul
inc
ret
jae
sbb
dec
fcmovne
adc
in
scas
rolb
adc
sub
std
mov
and
pop
jp
ds
rolb
in
das
mov
jae
cmc
nop
out
sub
add
cmp
jnp
outsl
cmpsb
loopne
cmc
addr16
jae
add
add
add
adc
ror
lds
clc
sbb
in
and
inc
aam
fdivrs
xchg
pop
repz
cmp
or
jmp
adc
adc
mov
and
push
mov
shl
mov
jno
in
sbb
sub
sub
add
xchg
or
ljmp
jns
add
pop
inc
imul
and
lock
es
dec
test
pop
pushf
mov
pop
mov
or
dec
sahf
lahf
jae
movsb
lds
test
jp
out
hlt
sbb
inc
fdecstp
gs
movsl
cmp
popa
negb
jp
lods
mov
pushl
js
lock
mov
pop
push
sub
inc
fidivs
sbb
sti
sub
push
hlt
test
inc
enter
popl
push
mov
in
or
xchg
push
mov
cli
xchg
jle
push
je
xchg
stos
mov
add
add
add
lret
mov
dec
add
inc
mov
stos
mov
in
jnp
add
aad
pop
sub
inc
daa
ljmp
lret
sbb
inc
adc
mov
cmp
sub
cs
mov
testb
outsl
lds
inc
lea
inc
push
cli
les
mull
pop
add
cmc
cmp
xchg
aaa
ljmp
movsl
cwtl
ret
lods
inc
fcmovne
adc
imul
lods
xor
mov
shl
add
sub
add
or
pop
jns
add
jmp
mov
adc
mov
loop
jbe
or
pop
cltd
xor
pop
add
es
mov
fsubrl
push
icebp
jmp
cltd
bound
and
jge
pop
pop
xor
push
cmpsl
mov
add
fsubrs
push
loop
inc
pusha
dec
xor
mov
xor
push
cmp
add
fwait
jnp
aad
sbb
xlat
ljmp
add
mov
xor
ljmp
dec
adc
mov
and
sub
mov
jo
leave
vpextrw
lds
adc
sbb
sbb
jb
pushf
pop
jnp
aaa
or
dec
and
sub
jmp
jge
sub
push
shrl
xchg
aas
std
jo
push
xchg
jno
fnclex
ret
cld
lea
inc
jno
jns
jl
cltd
inc
and
dec
mov
mov
pop
js
es
pop
pop
sti
adc
mov
jno
in
imul
lahf
rcrb
mov
outsb
mov
xchg
xchg
mov
push
mov
pop
test
aaa
loopne
sti
lock
fcom
into
mov
sti
jmp
xchg
arpl
push
push
adc
aad
push
aaa
mov
lea
or
xor
mov
fs
fstl
lahf
std
push
push
and
mov
std
mov
sub
rcr
addr16
add
add
add
aam
xorb
mov
sahf
push
mov
sub
mov
rorb
push
and
pop
cmp
cmp
repnz
adc
pop
add
jbe
pop
inc
pop
jb
das
mov
je
and
fisubrl
out
out
outsb
aas
out
nop
loop
push
adc
sub
cmp
push
push
movsl
jle
and
pop
test
pushl
cmp
inc
aad
jmp
mov
aaa
and
repz
out
ret
and
dec
insb
outsl
push
addl
bound
aad
ds
push
ss
jno
push
push
xorl
or
jnp
ja
or
insb
jns
dec
fwait
inc
in
push
inc
aaa
jo
popa
in
sbb
mov
mov
call
lds
and
fstpl
popf
loope
xchg
sub
in
pop
mul
jne
xor
pop
scas
rclb
add
add
fstl
lret
aaa
addr16
add
add
add
dec
add
xor
pop
xor
cmp
and
cld
stos
dec
popa
fs
cmpsb
sti
icebp
cmp
dec
js
pusha
movsb
jg
movsl
pop
ror
xor
xor
cmpb
rorb
psrld
sub
and
enter
mov
sub
and
push
outsl
add
jne
lcall
addr16
in
data16
in
jmp
fcomps
cmp
inc
dec
fs
stc
mov
mov
iret
or
pop
inc
add
sbb
and
jb
sub
movsb
add
pop
or
adc
lds
adc
shrb
fwait
bound
iret
sti
xchg
xor
mov
std
js
loope
pop
ljmp
mov
test
or
dec
add
sahf
push
nop
lea
cmc
out
stos
out
aad
std
xor
adcb
insl
mov
inc
in
mov
mov
out
sub
sbb
js
add
add
add
cmc
xchg
aad
sub
cli
pushl
dec
movsb
mov
sub
mov
mov
and
sbb
adc
icebp
mov
push
ret
cs
lret
xchg
xor
pop
shl
xchg
pusha
xchg
xor
rolb
ds
sbb
jne
inc
clc
ret
stos
inc
xor
inc
insb
jns
xchg
mov
mov
cmp
dec
xchg
mov
int
aam
jns
sub
sbb
jle
cs
cltd
xchg
push
push
loopne
nop
adc
add
cmpsl
ret
jg
sub
fstl
mov
xor
pushf
xlat
dec
cmc
movsb
xor
roll
and
icebp
sti
pop
lea
mov
int
push
sub
jne
inc
repnz
jecxz
into
inc
sub
mov
fcom
scas
fnstcw
inc
mov
mov
push
jnp
push
pop
and
jns
divl
in
sub
addr16
add
add
add
mov
scas
pop
dec
cli
jne
push
and
mov
or
pop
xchg
push
repz
sbb
cmp
sahf
stos
rorl
xchg
xchg
jbe
sahf
dec
jmp
and
dec
sbb
test
sbb
rclb
test
pushf
jg
pop
jg
shll
dec
je
lret
ret
and
mov
imul
xor
lea
xchg
outsb
mov
jns
mov
lods
ret
jbe
jge
scas
xchg
xlat
xchg
dec
cld
cs
sahf
cli
cmp
or
inc
xchg
xchg
sub
inc
idivb
mov
loopne
stc
rcll
sbb
scas
xchg
push
imulb
sub
out
and
enter
ja
inc
pop
in
aad
mov
insb
mov
in
neg
je
push
movsb
fwait
xor
xor
testl
dec
ljmp
add
clc
fisubs
mov
mov
add
add
add
push
push
mov
lods
xor
cltd
xchg
fdivp
adc
mov
xchg
insl
or
out
xor
sub
shrl
push
pop
push
mov
in
mov
sbb
ja
pop
and
push
shr
sti
push
out
mov
adcl
adc
imul
ljmp
dec
push
loop,pt
xchg
cmc
shrl
sub
or
xor
xchg
push
int
ljmp
adc
cld
mov
leave
mov
jle
bound
and
cltd
xchg
inc
mov
mov
fdivrs
stc
adc
das
movsl
cld
pusha
jb
mov
xor
out
sbb
xor
push
rcll
jge
mov
push
xchg
in
mov
dec
dec
popl
les
push
jecxz
das
lret
xor
xor
xor
lods
or
loopne
fwait
mov
xchg
pop
lea
aas
cs
shlb
mov
push
sbb
sbb
add
add
add
mov
adcl
cmp
int3
jo
mov
push
push
ret
ror
jne
adc
int
push
incb
pop
add
inc
mov
inc
mov
lea
or
or
jmp
int3
in
and
inc
clc
mov
fwait
jecxz
cmp
xchg
xor
dec
sti
adc
jg
sub
fists
shr
adc
clc
push
jg
mov
ss
dec
xchg
xchg
popa
mov
and
jle
sti
jge
mov
pop
jb
addr16
pop
push
mov
mov
ficoml
test
xor
push
push
fists
adc
push
je
pop
insl
pop
fwait
sub
or
cmpsb
test
scas
es
repnz
ret
lds
pop
xor
je
aaa
mov
orb
ljmp
jl
xor
fsubr
addr16
add
add
add
orb
gs
div
xor
or
ret
mov
jmp
arpl
xor
test
out
orl
mov
sbb
mov
and
into
push
inc
mov
jbe
pop
gs
out
mov
and
xchg
mov
push
mov
push
xchg
add
sbbb
cmp
popa
in
pop
sub
mulb
push
pop
push
lea
in
mov
imul
mov
out
std
hlt
xchg
das
add
pop
fst
xor
jne
ret
clc
ficoms
jl
cs
enter
loop
xor
and
mov
xchg
clc
aad
inc
sarl
mov
cs
scas
mov
rcll
jmp
and
hlt
loope
stc
das
sbb
jno
pop
fldl
addl
jle
xchg
test
iret
pop
aaa
jl
imul
add
xor
jo
ja
std
stos
sbb
ljmp
add
add
add
repz
push
or
imul
out
mov
test
lds
ficompl
mov
push
or
jle
frstor
loopne
hlt
adc
pop
push
nop
inc
out
out
pop
loop
imul
push
frstor
xor
lds
jecxz
cltd
test
xorl
push
stos
cltd
jecxz
push
and
or
stos
pop
dec
mov
shll
out
fists
ss
mov
inc
or
ljmp
ja
scas
orb
xor
scas
pop
inc
dec
or
dec
das
sbb
lret
add
cwtl
sbb
push
dec
jne
sbbb
leave
iret
jno
add
mov
adc
mov
cwtl
icebp
lcall
xor
pusha
add
or
cs
out
shll
popa
jle
pop
sti
inc
mov
mov
push
daa
push
lds
add
add
cmpsb
push
sbb
daa
loop
jle
add
add
add
mov
insb
addr16
lret
mov
fimull
xchg
lock
int
insb
fidivrs
jo
ljmp
notb
inc
mov
or
add
enter
xor
push
arpl
jge
add
shrb
pushf
cmp
out
les
inc
add
inc
jmp
jge
dec
scas
sbb
addr16
xchg
mov
inc
rcl
subb
ficomps
mov
dec
mov
mov
and
add
andl
pop
jo
mov
je
shrl
fdiv
out
test
push
or
mov
ss
in
std
movsl
or
leave
aaa
dec
fstpt
aad
inc
test
add
in
in
cs
sbb
je
lahf
pusha
jmp
das
popf
in
scas
into
pop
mov
pop
cs
cli
es
cs
xor
cli
mov
and
mov
add
add
add
in
sub
nop
aam
xor
or
jmp
aad
add
ficoml
sub
arpl
fscale
pusha
xchg
sbb
and
mov
pop
bound
pop
adc
xchg
je
stos
enter
les
leave
jg
aad
inc
scas
clc
test
push
fidivrl
adc
push
shll
sub
push
es
ret
lret
push
hlt
mov
rorl
repz
divl
out
clc
movb
notl
jb
scas
outsb
and
jmp
mov
push
xor
lcall
rclb
pop
cwtl
pop
mov
sbb
or
or
decl
repz
shlb
jbe
imul
lret
imul
pop
cmp
dec
lock
rolb
call
push
shl
dec
pop
test
in
les
std
test
lcall
daa
xor
addb
add
add
sbb
sub
cmpsb
movsb
test
jb
and
push
xchg
jge
pop
add
cmp
xor
dec
mov
mov
jp
loop
int3
cld
sbb
cmp
mov
cmp
xchg
loop
out
mov
nop
fdivrs
aas
lcall
lcall
shrb
mov
negl
inc
mov
xchg
inc
test
sub
gs
lods
push
push
mov
xor
pop
cmp
or
xchg
jbe
imul
inc
mov
mov
mov
push
pushl
push
ja,pt
call
mov
loope
aaa
push
or
pop
push
test
aam
xorb
loope
rolb
lret
and
movsl
aas
enter
xchg
pop
push
test
cmp
inc
lds
push
mov
add
xchg
xchg
jns
jmp
mov
in
addl
add
mov
and
je
sahf
jno
in
outsb
pop
or
and
ret
jecxz
dec
sti
inc
pushf
pop
fucom
adc
shlb
in
xor
mov
and
insb
pop
aas
outsb
sbb
repz
push
push
daa
adc
mov
imulb
cwtl
mov
fwait
sbb
mov
mov
mov
cmp
add
xor
incb
jmp
shlb
mov
add
dec
into
shrl
nop
dec
sbb
cmp
int
addr16
add
xchg
add
insl
sub
add
dec
sub
adc
pusha
mov
das
ret
push
inc
pop
fidivrs
or
cmp
fsubrs
xchg
ljmp
fdivl
xor
ja
xchg
push
xchg
mov
gs
icebp
cmp
sub
xor
dec
aad
clc
push
aam
or
pop
jge
loope
pop
punpckldq
scas
lcall
adc
sbb
jp
sub
addb
add
add
jmp
pop
out
test
popf
add
aad
insl
insl
dec
mov
in
mov
mov
jg
push
dec
jmp
dec
stos
push
fmuls
orb
pop
fs
cmpsb
fs
mov
inc
push
sub
out
mov
mov
or
xchg
test
idivb
mov
cs
int
xor
or
jnp
pop
test
stos
aam
pop
mov
arpl
stos
jb
scas
inc
jne
inc
dec
das
push
das
mov
cmpsb
inc
push
cltd
adc
je
loopne
push
repz
jle
leave
lods
scas
sbbl
adc
push
or
xchg
xchg
testl
loopne
icebp
fdivl
inc
je
movsb
scas
push
out
jl
out
fst
sbb
ret
inc
into
in
arpl
sub
adc
mov
xlat
into
jecxz
xorl
fdivl
add
mov
idiv
jne
iret
lahf
je
loope
addl
add
add
mov
pop
dec
in
mov
rolb
pop
int
sub
inc
mov
or
loop
push
mov
cmpsl
mov
shrl
xchg
push
fnstenv
imul
scas
adc
xchg
lahf
dec
lcall
jbe
mov
scas
inc
xlat
cmpsl
negl
add
xlat
adc
xchg
pop
add
adc
xchg
push
xor
movntps
gs
jecxz
test
in
mov
pop
mov
incb
mov
xchg
movsb
shlb
mov
cmpsb
in
mov
cmp
xor
pop
mov
imul
sub
roll
testb
sub
mov
cltd
dec
jo
adc
and
cmp
pop
aaa
xor
cld
cmp
lret
inc
jmp
mov
and
xchg
pushl
sub
jmp
test
add
add
add
dec
fiadds
popf
inc
mov
push
adc
test
pop
sub
icebp
roll
jns
movsb
dec
push
daa
xchg
imul
sub
test
xchg
push
gs
andl
sbb
shl
lcall
lret
pop
out
andb
fsts
xor
int3
test
jae
mov
je
ficoms
test
adc
andl
movsl
cmpl
in
add
and
cwtl
and
loopne
repz
mov
rol
iret
push
mov
dec
jge
cmc
xchg
stc
into
mov
lcall
lds
xor
out
jnp
test
lret
push
pop
inc
pushl
dec
loopne
push
mov
cmp
fdivr
jmp
in
ss
es
jae
push
jbe
in
inc
or
xor
scas
aam
icebp
sti
aad
lahf
movsl
ja
push
mov
pop
cmp
stos
mov
mov
mov
xor
add
add
sti
iret
ss
push
jno
scas
scas
sub
test
add
add
add
aas
jmp
mov
out
fisttpl
movsl
xlat
add
testb
add
xor
or
adc
lahf
stc
popa
sub
or
je
or
jne
or
jle
loope
xorl
mov
sub
mov
loopne
adc
push
mov
rorb
enter
jae
fs
out
ret
das
jp
push
push
push
adc
pop
test
jl
pop
ljmp
rcrl
push
mov
pop
ja
cmc
jbe
idivb
mov
or
cwtl
pop
cmc
test
inc
data16
cmpsl
test
in
xlat
pusha
in
mov
in
jp
ja
pop
fimuls
dec
imul
repz
out
mov
and
mov
cmc
pop
cmp
push
mov
xor
adc
dec
js
inc
pop
ret
shl
loopne
lcall
add
add
outsl
xchg
inc
lahf
sti
hlt
out
dec
roll
push
sub
add
add
aas
std
lea
lods
mov
rclb
jnp
cmpsb
mov
movsl
lea
jge
push
shlb
std
jns
pusha
adc
mov
push
lods
adc
mov
pop
ret
xor
sub
mov
mov
sub
push
ret
dec
les
mov
mov
lea
cmp
repnz
rorb
popa
mov
pop
in
mov
mov
sub
push
push
jo
aaa
scas
dec
mov
nop
xchg
cmpsl
fnstcw
jae
je
and
inc
pop
push
lds
fldcw
cwtl
add
outsb
shlb
jnp
mov
sub
das
movsb
aad
popa
cmp
push
repz
jle
out
mov
xchg
inc
xor
push
or
adc
in
cvtps2pi
outsb
js
xor
cmpsl
sbb
cmpsb
mov
xchg
imul
cmp
ret
or
inc
xchg
mov
mov
mov
stos
cmp
add
add
nop
mov
pop
adc
push
dec
pop
pop
mov
shlb
aaa
mov
in
jmp
jl
jl
enter
je
test
mov
or
mov
cwtl
loopne
inc
stos
fldenv
inc
es
mov
jno
add
pop
mov
aam
sub
dec
cs
add
mov
push
cmp
outsb
push
clc
jmp
out
adc
rorb
xlat
mov
orl
push
fbld
test
movsb
push
inc
in
fwait
pop
push
lret
lea
xchg
loope
lods
jle
loope
sub
adc
cmpsl
push
in
lods
scas
jb
pop
jmp
inc
ss
and
mov
mov
cmp
add
daa
mov
enter
aam
add
icebp
lcall
pop
lahf
sbb
test
pusha
push
sub
pushf
out
adc
inc
ret
js
inc
imul
outsb
and
out
ljmp
lock
xchg
cmp
inc
mov
add
add
add
inc
adc
test
mov
dec
sub
mov
out
inc
pop
xchg
cld
stc
cmc
adc
shl
testb
popf
lret
aad
dec
outsl
inc
sti
jo
jo
lock
mov
scas
shr
in
movsl
sbb
add
mov
inc
mov
pop
jns
cmpsb
jnp
imul
in
imul
add
es
test
sbb
mov
js
enter
aam
stos
push
dec
nop
adc
xchg
das
sub
cs
push
inc
cmp
push
call
in
imul
dec
and
pop
test
icebp
pop
xchg
sarb
mov
out
in
scas
into
xchg
mov
fxtract
sbb
mov
roll
jae
scas
jl
in
xchg
sub
dec
add
jno
jno
out
push
jo
mov
fstpl
imul
push
jnp
sbb
push
xor
iret
std
push
mov
add
add
add
sub
inc
insb
sbb
sbb
jecxz
sub
pop
insl
aad
sub
adc
sub
push
sub
fiadds
mov
call
or
movsb
aad
js
cmp
shrl
and
add
rorl
mov
and
sbb
lods
stc
pushf
lret
clc
push
test
andb
push
addr16
xor
sub
mov
jne
mov
insl
and
imul
cmp
fnstcw
mov
jns
es
popf
mov
and
push
push
gs
cmc
nop
dec
enter
idiv
lock
push
cltd
cmp
decw
mov
sub
ljmp
push
cwtl
and
jnp
xor
in
sub
sti
mov
mov
mov
adc
in
outsb
incl
sbbl
push
aas
or
mov
fistps
xchg
loope
mov
add
add
add
dec
outsl
and
lds
repnz
mov
fldt
push
fdivs
push
outsl
leave
xchg
pusha
fldenv
and
js
or
cmp
add
dec
pop
dec
dec
sbb
mov
xor
xor
fs
jp
jne
stos
add
add
mov
xor
call
adc
outsl
pop
xor
xchg
lret
mov
lret
fidivs
push
inc
pop
adc
std
inc
and
jno
not
repnz
inc
out
add
negl
jle
cltd
and
and
roll
hlt
divl
pop
sub
xchg
mov
sub
outsl
cmpsb
cli
sbb
or
jmp
int
and
orb
mov
and
xorl
inc
daa
outsl
cmp
out
pop
mov
gs
outsb
ljmp
lods
pusha
sbb
test
sbb
aam
mov
add
insb
fidivl
bound
fisttps
mov
add
add
add
push
and
mov
jne
dec
dec
outsl
out
pop
jg
imulb
or
pop
push
mov
or
inc
sub
std
push
sbb
add
push
lahf
das
ret
out
sub
mov
mov
lcall
call
notb
push
sarb
sbb
pop
mov
loopne
adc
out
cltd
push
test
cmc
js
fdivr
inc
add
pop
pushf
jne
loope
js
cmp
shr
cmp
loop
lret
or
test
cmpsl
xchg
xchg
into
lahf
jg
mov
jnp
inc
insb
adcl
push
mov
adc
or
push
add
aas
push
inc
loope
or
ss
out
xchg
push
mov
push
repz
or
aad
mov
inc
adc
xchg
dec
imul
cmp
aas
push
or
in
add
out
hlt
mov
xor
test
add
add
mov
jns
add
mov
add
add
add
loope
pop
aaa
cmpsb
or
lods
xlat
dec
repnz
jp
push
test
ds
mov
iret
out
push
jg
push
jns
sub
xchg
or
lods
in
mov
pop
aad
mov
xchg
sub
xchg
xor
sahf
stos
mov
rcll
jne
sarl
xor
repz
push
push
jp
cs
and
fnstcw
inc
sbb
rcl
rol
push
outsb
fmul
mov
idivl
ja
inc
inc
aam
loop
aad
ret
mov
adc
xchg
les
pop
pop
cmp
inc
fcompl
fstpt
and
aad
and
je
or
in
popa
cs
lret
lods
sahf
out
mov
pop
cli
pop
sub
mov
shr
scas
movsb
sub
mov
or
stc
or
push
or
adc
insl
cmp
inc
bound
add
aaa
dec
or
roll
add
add
int
fstp
iret
push
cmpsb
fadd
dec
or
add
add
add
xlat
pop
fcmovnu
adc
int3
sub
sti
call
fwait
clc
nop
daa
cmp
push
gs
mov
inc
push
je
notl
add
push
rcr
stc
jbe
loop
lods
imul
lods
and
test
mov
stos
mov
xchg
pusha
push
mov
sarb
add
mov
jnp
push
test
lcall
inc
jmp
mov
inc
sbb
in
rorb
cmpsl
les
sbb
jmp
adc
in
sub
push
inc
push
fs
cmp
shrl
xchg
lock
mov
and
push
je
fwait
adc
ds
pop
outsb
stc
xor
add
gs
jnp
inc
xchg
add
mov
dec
pop
pushf
dec
leave
jae
sbb
inc
mov
fsincos
mov
mov
mov
dec
cmp
mov
int3
popf
pop
aas
push
lret
cmpsb
lret
and
add
stc
jbe
or
ficoms
lahf
and
scas
std
out
ljmp
mov
add
add
add
jbe
mov
inc
aaa
jg
jge
loope
xchg
xchg
movsl
movb
mov
lahf
je
dec
inc
or
outsb
mov
fwait
push
imul
stc
sub
mov
inc
mov
das
clc
push
in
lcall
dec
push
mov
fwait
mov
aas
jp
icebp
call
ds
mov
fwait
repnz
mov
xchg
xor
ljmp
mov
fwait
ror
mov
xchg
cltd
jbe
dec
int
push
lret
sti
lahf
stos
mov
int
xor
out
cmp
aaa
shll
fmull
push
jne
mov
jp
jae
jb
int
lcall
leave
jo
inc
sbb
and
jge
pop
repz
lahf
mov
add
inc
imull
fdivs
xchg
push
lods
and
jo
and
lods
imul
aad
pusha
fstpl
pop
cltd
out
adc
pusha
lods
les
jnp
mov
icebp
and
popl
add
add
add
sub
sub
sub
inc
aaa
dec
xlat
je
sbb
or
scas
mov
add
das
push
sbb
push
jle
in
push
je
ljmp
adc
cmp
add
xor
sub
add
xlat
adc
mov
jb
cmc
stc
xor
fcoml
test
cmp
jae
mov
lods
xlat
out
imul
dec
pop
inc
mov
xor
lea
push
and
pop
or
dec
jo
mov
daa
jle
es
xchg
in
xchg
sub
leave
and
xchg
hlt
mov
aaa
or
xchg
jge
dec
stos
or
cmpsb
jmp
dec
push
sbb
fs
bound
pop
sbb
ja
jo
mov
pop
cmp
iret
rol
out
mov
std
ljmpw
inc
sub
add
inc
or
test
fcomps
add
fsubrl
inc
addr16
add
add
add
scas
divb
lahf
lret
leave
lock
mov
mov
fisttpl
movsl
in
push
das
push
and
test
jle
clc
pushf
jle
sub
and
rcr
ja
ret
aad
push
out
xor
pop
mov
ss
rolb
inc
jmp
test
mov
xlat
inc
data16
mov
add
lds
scas
add
fstps
sbb
add
mov
int
sti
int
push
pop
jle
in
pop
jns
mov
dec
sub
in
addl
rcrb
loopne
xchg
stos
mov
out
push
mov
mov
adc
mov
daa
lea
adc
imul
das
inc
jmp
fidivl
jmp
adc
pop
cmp
ret
xchg
dec
mov
insb
add
pop
mov
pop
test
lods
outsb
into
ljmp
dec
mov
loope
addr16
add
add
add
das
lods
jbe
rclb
lds
out
cld
jg
bound
outsb
dec
icebp
gs
mov
lcall
dec
arpl
xor
adc
aad
insb
imul
cli
dec
sbb
jne
adc
lahf
lret
sbb
dec
cmp
insb
adc
add
jmp
adc
xchg
pushf
mov
jne
xor
inc
or
mov
and
cmpsl
rolb
adc
xor
gs
and
jae
out
repz
mov
rcrb
test
sub
repnz
pop
sahf
stos
and
shl
xchg
jg
je
insl
xor
gs
es
insl
in
xadd
mov
ja
jae
sbb
lock
inc
push
fcomps
lret
pop
pop
pop
out
adc
sub
lods
iret
xchg
test
lret
stos
dec
sti
jmp
xchg
jb
shr
into
shrl
aad
mov
add
aaa
shlb
cmc
div
testl
mov
add
add
xlat
mov
mov
popf
and
adc
inc
xlat
test
lret
ret
loopne
addb
sbb
mov
in
insl
loopne
xchg
xchg
sbb
sbb
stc
or
add
arpl
xchg
push
sbb
movsb
shll
or
mov
and
sbb
nop
icebp
repnz
mov
rcrl
pop
in
into
cmpsb
mov
xor
cli
imul
sub
mov
ret
sub
sbb
xlat
imul
addr16
xor
pop
pop
dec
jb
in
pop
jnp
inc
pop
ret
ja
fdiv
loop
ja
jbe
dec
sbb
inc
insb
xor
ja
dec
enter
and
adc
jns
pusha
mov
rcr
mov
lea
pop
andb
fs
xor
lret
outsb
jns
dec
mov
add
pop
push
nop
push
sahf
rcr
pop
adcb
inc
cli
jmp
add
add
pop
adc
push
lret
mov
mov
mov
jns
or
and
push
mov
jle
fimuls
fcompl
fistpl
fdivr
xchg
dec
scas
pop
hlt
in
jnp
cmpsb
sbb
fisubs
mov
sub
sub
ss
dec
push
and
aaa
mov
fwait
mov
daa
jg
xlat
pop
das
sub
ret
jge
in
mov
in
and
les
rcrb
pop
popf
mov
fstps
sahf
movsb
arpl
push
mov
push
dec
push
sub
js
mov
sbb
pushf
mov
cltd
repnz
in
mov
lret
sbb
adc
popf
xor
or
rolb
cmp
xchg
dec
int3
mov
outsl
popa
imul
rcr
mov
call
call
test
cmp
add
arpl
cmpsb
jcxz
fimull
addr16
add
add
add
jbe
or
jne
xchg
and
xorb
lret
mov
mov
test
pop
and
jle
adc
lods
push
mov
jl
xchg
push
mov
lret
mov
repz
or
pop
enter
mov
stos
push
pop
jg
lock
roll
pop
jmp
lock
cmp
cmc
stos
cmp
xchg
hlt
or
ljmp
inc
inc
out
mov
out
nop
pop
dec
int3
lds
mov
dec
push
push
fisttpl
xor
shll
fisubs
push
aam
jnp
pop
shrb
add
test
sub
dec
stos
pop
fst
and
jno
dec
aaa
lods
pop
and
push
mov
pusha
dec
or
mov
std
arpl
fwait
iret
subl
lds
adc
clc
jnp
jg
in
cli
enter
rcr
lcall
add
add
push
xchg
je
mov
sub
cmp
iret
nop
rorb
lods
arpl
push
xlat
stos
leave
jne
dec
daa
xor
pop
xchg
rcrb
in
in
and
inc
jg
push
fsubl
adcb
sarb
lret
lods
sub
daa
lock
outsl
repnz
aad
mov
loop
xorl
clc
xor
or
arpl
and
pusha
fimuls
or
cld
push
mov
icebp
clc
push
or
mov
fldcw
cmpsl
out
sub
pop
pop
hlt
mov
inc
nop
jno
sub
je
xchg
push
push
lret
sub
cmp
stos
xchg
iret
fcomps
inc
mov
dec
shlb
push
pop
sbb
sub
mov
incl
pop
sbb
inc
or
mov
jecxz
call
xchg
incb
data16
cltd
ljmp
cld
gs
mov
addr16
add
add
add
or
aaa
jmp
and
mov
movsb
jg
adc
or
stc
ss
mov
dec
cmp
mov
aam
mov
loopne
push
movsl
out
in
bound
mov
xchg
sbb
mov
cmp
adc
shll
sahf
das
mov
sub
pop
mov
push
add
lods
jne
jg
insl
xchg
cltd
insb
fs
cmp
stos
int
es
sub
notl
inc
jae
sti
sbb
mov
sub
mov
jecxz
jge
loop
xor
or
mov
lahf
fsubrs
popa
in
xchg
xchg
push
xor
and
mov
inc
jno
add
adc
mov
nop
pop
mov
fcomps
adc
scas
sub
jnp
mov
sbb
jne
xlat
outsb
outsb
outsb
cmp
cmpsl
cwtl
mov
xchg
jl
sar
std
jle
pop
popf
scas
dec
xchg
mov
add
add
add
or
test
loop
in
pop
rorl
jmp
jnp
sbbb
cmp
mov
jb
cld
sub
adc
test
mov
cmpsb
int
pop
xchg
add
sub
jg
push
fildll
adc
clc
jmp
dec
out
or
aaa
rcrl
adc
mov
sub
mov
or
dec
rcl
fiaddl
cmc
ds
mov
jle
inc
repnz
lea
pop
and
inc
mov
and
inc
dec
stc
xchg
mov
push
repz
pop
imul
shll
repnz
insb
sub
push
xor
stos
cmp
loope
dec
sbb
xorb
testb
add
jae
adc
pop
fnstsw
out
mov
pop
mov
data16
fstps
jmp
outsl
dec
xchg
cmp
cmp
in
iret
fisubrs
add
add
add
cld
rorl
in
add
dec
test
jne
loope
pop
lods
insl
rcrl
xchg
push
das
ljmp
mov
sbb
pop
faddp
and
mov
shlb
jg
sbb
ror
leave
cvtpi2ps
mov
sbb
mov
fldt
mov
clc
cmp
arpl
lcall
pop
loope
push
cli
jle
and
cmp
je
or
cmp
dec
ficomps
sub
xor
or
out
sti
xor
inc
mov
fimull
dec
mov
mov
mov
test
pop
dec
add
pushf
aam
loopew
adc
repnz
shr
or
cli
inc
mov
adc
push
loopw
ds
mov
dec
mov
xchg
mov
jne
add
push
and
adc
adc
push
push
xor
gs
in
jno
adc
fwait
and
popa
mov
xorl
addr16
add
add
add
mov
movsl
inc
stos
arpl
push
fs
sti
push
xchg
clc
rorl
sub
repz
insl
mov
aaa
add
inc
mov
lret
inc
sbb
hlt
jg
xchg
cmp
repz
xorb
mov
pop
inc
std
xor
fwait
jg
dec
cmp
adc
repz
subb
test
mov
loop
dec
mov
adc
fs
jp
xchg
xchg
std
push
inc
pop
jg
and
lret
sbb
pop
xor
xor
out
ss
adc
jns
cmc
sbb
cmc
mov
xchg
pop
mov
imul
jb
dec
imul
adc
or
pop
das
dec
hlt
test
ss
jo
dec
dec
or
testb
jecxz
outsb
cmp
dec
push
adc
sub
sbb
enter
xchg
add
sub
inc
gs
push
and
xlat
aas
dec
sbb
or
addr16
jne
inc
fnsave
dec
sbb
pop
jecxz
jmp
mov
dec
in
xor
mov
add
inc
sbb
cmp
pop
jecxz
push
rcll
jmp
cwtl
cmp
fwait
movsl
aam
dec
sti
sbb
icebp
mov
push
ret
mov
in
and
sub
jecxz
mov
jecxz
add
push
testb
cwtl
xchg
je
out
pop
stos
fcompl
xor
xchg
stc
and
mov
into
cmp
lods
mov
mov
outsb
adc
scas
jg
cld
outsl
adc
mov
in
repz
test
repnz
scas
aaa
ror
fsubp
mov
xchg
xchg
ds
push
dec
xchg
dec
aam
in
push
pop
fists
sahf
xchg
aad
add
xor
enter
pop
out
or
stos
aas
imul
popa
xchg
jmp
xchg
sbb
mov
loope
test
jne
mov
add
add
mov
mov
jmp
test
fsubr
addr16
add
add
add
iret
lds
je
mov
aas
shlb
cmp
int3
lea
rcll
adc
fisttpl
mov
scas
push
push
mov
push
sti
aam
mov
leave
popa
xchg
lret
mov
push
aas
out
and
sahf
push
jecxz
xchg
mov
push
cld
or
scas
orb
jnp
add
xlat
stos
in
mov
pop
jp
sti
cmpsl
mov
sbb
adc
pop
movsb
dec
mov
and
enter
xor
xor
stos
imul
adc
dec
adc
xchg
inc
or
sti
sahf
test
jmp
and
xor
mov
hlt
inc
jle
jae
dec
rolb
icebp
add
pop
cmovo
enter
repz
cmp
leave
scas
je
xor
popa
cmpsl
loopne
scas
jns
mov
inc
sub
and
xor
mov
mov
dec
lahf
jae
adc
sbbl
popl
mov
addr16
add
add
add
shll
sbb
mov
xchg
xor
sar
movsb
push
stos
sbb
jne
adc
push
pop
cmpsl
roll
adc
insl
cmpsb
cltd
push
or
xchg
mov
push
rolb
jo
js
add
ja
das
pop
sub
and
jne
xor
fwait
lcall
cmp
fmuls
adc
adc
sbb
jns
sub
mov
dec
nop
sti
movsl
or
fwait
icebp
inc
stos
fdivl
pop
pop
outsb
stos
xor
sbb
loopne,pt
pop
sbb
pusha
adc
mov
bound
ja
rcll
cmp
jge
test
hlt
and
pop
jno
dec
add
adc
pop
cs
ss
add
mov
stc
enter
rclb
sub
pop
mov
int3
mov
cmpl
lods
es
dec
insl
movsl
cld
lcall
cmp
push
jl
pushl
das
loopne
pop
jmp
add
imul
movsb
and
inc
adc
addr16
add
add
add
imul
lcall
in
cmpsl
adc
pop
sbb
jo
pop
jmp
xor
dec
pop
incb
adc
push
sbb
sub
mov
loop
out
addl
push
xchg
push
push
inc
and
sbb
ljmp
dec
je
out
imulb
xor
cli
dec
cltd
bound
add
push
sub
cmp
mov
icebp
jecxz
or
outsl
mov
and
xlat
xorl
lods
pop
push
jb
dec
add
and
jp
stc
xchg
in
xchg
jecxz
aad
pop
sbb
pop
xchg
sub
loope
or
in
jmp
sbb
mov
ret
int3
or
sbb
mov
add
adc
rcrb
ficoml
mov
xchg
push
loop
xor
jmp
jb
mov
push
mov
jge
jg
ljmp
in
lahf
mov
fcmovnb
addr16
add
add
add
inc
idivl
xorb
cmp
jb
push
fs
dec
lea
rcl
out
push
xor
adc
test
mov
mov
mov
les
jno
mov
push
roll
mov
in
ret
pop
mov
xchg
cmp
mov
test
cmp
fldcw
into
loopw
repz
hlt
ja
fs
add
fildll
or
sarl
js
aad
adc
cmp
mov
cmp
and
pop
jmp
icebp
repz
jp
push
insl
jl
insl
loop
sahf
in
lds
lods
aad
xlat
iret
loope
fidivl
jns
jle
pop
jle
fwait
in
inc
clc
mov
push
and
mov
fcmovnb
cmpsb
outsb
jecxz
sub
mov
ret
stc
cmp
mov
push
in
outsb
pop
mov
add
cltd
sub
out
inc
sub
or
jg
sahf
addr16
add
add
add
xor
scas
push
push
cwtl
rcrl
outsb
cmp
ljmp
adc
adc
int3
cwtl
jl
testb
cmpsb
ss
cli
adc
out
push
fldcw
mov
mov
cmc
insb
imul
sub
xor
adc
push
jg
ss
xor
fdivl
dec
shrl
rcl
jno
loop
and
push
scas
xor
or
mov
aam
and
push
push
adc
cmpsb
stos
data16
sbb
stos
sub
aaa
or
int3
xor
jnp
mov
dec
insl
adc
hlt
ja
push
mov
push
pop
punpckldq
or
xor
lods
out
daa
ret
std
enter
mov
lds
jne
jg
mov
push
or
push
ror
cmp
and
inc
bound
and
xchg
pusha
outsb
or
inc
ljmp
ljmp
in
lret
add
add
pusha
test
mov
cld
mov
addr16
add
add
ljmp
jg
ja
jne
fiadds
and
push
dec
out
cmp
test
mov
das
mov
idivl
divps
insb
pop
test
inc
sti
mov
aaa
lods
fnstenv
mov
inc
decb
sbb
out
unpcklps
sbb
xor
mov
ror
xlat
xchg
jbe
imul
out
add
ljmp
jno
dec
test
ss
test
inc
mov
popa
sbb
loop
sub
add
sub
cwtl
sbb
pop
and
fisubl
pusha
xchg
dec
mov
xchg
mov
jne
aam
mov
sti
jg
jmp
add
cli
inc
and
push
sti
mov
rol
xor
arpl
test
sti
lret
gs
pop
out
add
popf
push
cmpsb
out
add
add
mov
repz
repz
add
add
add
add
jecxz
fnstsw
jns
xchg
push
adc
sub
mov
in
nop
jbe
mov
mov
sub
ljmp
mov
call
push
jmp
or
shrl
rcll
pusha
mov
lcall
pop
jbe
test
nop
test
push
lahf
pop
enter
inc
in
mov
mov
mov
pop
xchg
jecxz
mov
aam
jmp
xchg
adc
push
lock
dec
icebp
mov
mull
pop
shlb
andb
mov
sbb
jle
sub
dec
lcall
sbb
stc
mov
sbb
pop
clc
and
inc
cmp
je
jp
xchg
sub
xchg
inc
test
scas
loop
jns
jecxz
pushl
gs
pop
pop
pop
or
xor
inc
jmp
movsb
mov
mov
inc
inc
add
mov
add
xchg
adc
xchg
test
nop
pop
movl
lock
shl
outsl
cld
popf
dec
jmp
pop
cmp
ds
xchg
push
mov
push
shr
cmpsb
push
and
aaa
and
loope
cmp
xor
mov
hlt
test
inc
fistl
xchg
pop
sub
sub
mov
dec
in
dec
sub
dec
iret
sub
aas
lods
dec
aam
xor
cmp
push
stos
dec
lock
ds
lret
rorb
dec
fsubl
cmp
mov
and
andl
pminsw
sarl
adc
aas
jo
sbb
mov
mov
shrl
pop
leave
aas
xchg
pop
das
and
sub
mulb
inc
jo
inc
dec
in
aam
sub
jns
test
lock
or
xor
sub
mov
aad
mov
in
adc
gs
cmpsb
sub
or
sbb
inc
mov
or
addr16
add
add
outsb
push
mov
dec
jb
or
addr16
insb
push
push
inc
insl
xchg
xchg
call
jo
pop
test
lcall
sub
and
iret
mov
pop
or
enter
xchg
adc
js
in
sahf
mov
xor
cmp
push
popf
push
jns
or
push
test
imul
daa
adc
fnsave
leave
sti
popa
adc
add
jnp
test
fists
xor
lods
pop
or
pop
ret
call
lret
push
inc
xchg
dec
dec
xor
push
pop
clc
mov
inc
mov
test
mov
fadd
mov
out
ficomps
add
sub
sub
inc
inc
stos
mov
aas
jle
test
fildl
xchg
fwait
xchg
lods
arpl
je
repnz
lods
pop
pop
inc
jo
inc
mov
mov
mov
mov
jns
roll
add
add
inc
fdivl
push
dec
mov
movsb
add
add
add
jo
gs
push
xchg
lea
mov
test
in
push
jae
leave
and
dec
imul
repnz
lcall
push
push
mov
out
clc
dec
dec
push
into
dec
jae
data16
dec
stc
mov
add
jmp
inc
les
inc
stos
or
repz
dec
mov
xor
lods
push
aam
mov
shrb
in
ljmp
push
pusha
mov
push
movsl
xor
add
ja
jle
hlt
cltd
jne
sbb
fimull
andb
das
cmp
inc
test
mov
gs
sbb
or
or
mull
or
lret
jae
sub
add
and
xor
mov
jnp
sbb
add
and
jge
test
test
dec
xor
ljmp
cmpsb
incl
adc
mov
sbb
imul
add
sbb
inc
ja
push
loope
push
inc
mov
in
push
inc
jmp
shrb
in
stos
mov
mov
inc
fdivrs
aaa
jb
push
dec
pop
jno
xchg
loopne
inc
or
test
xchg
int3
jo
shr
dec
sbb
insb
int
pop
xchg
jmp
out
cmpb
popa
lods
sub
mov
jo
inc
xor
fisubs
mov
loop
jae
and
test
ljmp
stos
aad
xor
iret
jmp
fistpl
popa
ss
mov
push
movsl
and
add
js
in
ficomps
fistps
imul
fucomip
lret
mov
add
imul
xchg
in
clc
out
jg
xorl
iret
cltd
ret
lret
push
push
cld
push
ret
fldcw
dec
loop
and
dec
in
out
movsl
pop
mov
jb
jmp
inc
mov
pop
test
stos
hlt
jmp
cmp
jbe
cmp
push
xor
cmpsb
add
add
add
or
pop
insb
or
movsl
imul
in
scas
sarl
mov
dec
das
jecxz
mov
or
jae
fldln2
jp
sarl
xlat
lock
jle
jns
in
pop
inc
test
add
mov
mov
ss
cmp
out
jae
dec
enter
xchg
mov
insb
or
int3
mov
loopne
in
bound
pop
mov
inc
xor
pop
pop
push
pop
xchg
xchg
stos
ljmp
dec
in
out
imul
mov
xchg
jl
jmp
sbb
mov
hlt
mov
sbb
jne
icebp
movsb
pop
adc
fs
pop
sbb
por
xchg
pop
cmpsl
sub
das
sub
mov
pop
pop
add
sbb
add
aaa
mov
cwtl
mov
cmp
lahf
add
xchg
push
insl
cwtl
add
add
add
out
xlat
out
jg
in
xor
fstps
cmpsl
add
add
add
sbb
and
scas
xchg
pop
sbb
xchg
push
cmc
mov
xchg
in
push
scas
xchg
push
push
cmp
cmp
scas
in
or
adc
inc
std
fiaddl
lahf
mov
pop
sub
cmpsl
and
sub
cmp
sub
jnp
inc
sbb
push
iret
outsb
inc
sbb
push
subb
sbb
jp
insl
xchg
cld
inc
js
mov
leave
cmpsb
clc
mov
scas
ret
fwait
enter
mov
mov
jle
pop
push
mov
inc
cmp
mov
je
scas
dec
push
repz
or
mov
cmp
mov
les
pusha
push
int3
dec
cli
in
ss
ret
xor
push
or
in
xchg
shrb
jge
jnp
movsl
or
mov
add
cs
in
xor
movsb
fwait
sbb
pop
fbstp
fldl2e
dec
adc
add
add
add
add
mov
icebp
shl
outsl
aad
push
mov
and
or
push
fwait
jo
mov
mov
lret
sbb
in
inc
out
mov
mov
idiv
cmp
pop
mov
sub
xchg
test
cltd
jno
fstps
in
pop
lea
sbb
push
pop
pop
sub
mov
ret
sub
mov
mov
fwait
repnz
push
push
fldt
mov
movsl
jo
cmp
mov
cmp
je
jl
jl
mov
inc
mov
imul
adc
and
cs
shlb
pop
lds
divb
xor
lret
data16
push
cmpsb
testb
mov
aad
pop
lods
xchg
push
icebp
fwait
xor
pop
xchg
gs
mov
adc
popa
movsl
fwait
adc
jecxz
aas
daa
js
das
xchg
cmp
adc
add
add
mov
fadds
addr16
add
repnz
ljmp
mov
inc
jbe
pusha
incb
mov
fs
test
jg
icebp
cli
inc
into
push
cld
push
inc
xchg
sub
pop
insl
or
add
xchg
test
inc
stos
push
fstp
add
mov
inc
jge
xchg
cmp
ja
mov
daa
arpl
sub
in
push
adc
pop
loop
mov
pop
push
jo
es
mov
mov
lock
push
sub
sub
inc
std
sub
insb
lock
ja
pop
mov
mov
ljmp
bound
insb
aad
fiadds
push
adc
and
sahf
mov
mov
clc
loope
mov
outsb
cmp
sbb
adc
mov
out
movsb
in
stos
ret
push
jo
sub
sub
repz
out
out
outsb
fsubr
xor
xor
jg
add
add
mov
push
sti
jmp
push
mov
negb
stos
add
add
add
out
je
rcl
inc
je
mov
push
or
scas
jl
outsb
and
cmpb
adcb
pop
nop
fcomps
loopne
or
xchg
shlb
pop
mov
and
scas
in
jmp
test
ja
mov
jp
lock
xchg
inc
adc
xchg
popf
cmc
mov
inc
xchg
jno
sub
add
and
sub
inc
jns
mov
xor
stos
daa
lahf
and
nop
sub
stc
test
jo
out
or
sbb
int3
dec
hlt
int
fsubrs
inc
pop
jne
push
jle
fucomp
jb
pop
ljmp
jg
leave
loope
into
inc
pop
and
loop
or
loop
mov
pop
xchg
roll
shlb
xchg
out
dec
mov
out
and
dec
adc
sbb
xchg
push
push
push
mov
out
inc
jmp
mov
jecxz
lock
stos
add
add
add
cli
fs
jne
dec
jo
cltd
out
insb
cmpsl
test
arpl
jg
das
repz
jge
sbb
add
iret
mov
and
mov
pop
cmpsb
cmp
aad
push
adc
sbb
mov
xor
mov
mov
repnz
cmpsb
push
add
add
pop
mov
inc
inc
pop
loopne
ss
cmp
cmp
addr16
push
xchg
and
leave
cwtl
mov
push
add
lods
and
mov
ret
add
push
arpl
fsubs
push
push
or
xchg
outsb
enter
pop
jbe
stc
xor
add
mov
dec
sbb
ljmp
addr16
mov
push
in
pop
incb
cmp
shrb
in
adc
pop
mov
cld
mov
leave
sbb
add
add
add
test
hlt
lock
sbb
add
cld
lret
mov
mov
mov
sbb
fisubl
andl
fwait
lcall
pop
or
cmp
cmp
or
or
and
std
cmp
mov
subb
negb
ds
or
and
dec
adc
push
test
cmp
push
adc
orl
lea
int
test
jg
sti
sbbl
pusha
or
negb
xlat
leave
jns
pop
jle
pop
mov
dec
mov
pop
fdivl
into
add
sbb
stos
dec
adc
mov
xor
jge
xor
std
xor
lret
xor
lcall
mov
lds
out
mov
adc
lret
and
cmp
out
add
mov
dec
jo
inc
test
add
add
out
cmc
mov
clc
xchg
sbb
add
add
jge
xchg
fdivrp
ror
arpl
sub
stos
in
add
shl
lods
sub
dec
in
in
out
cmp
pop
movsb
loope
or
test
adc
enter
out
addl
sub
rcl
insb
dec
les
mov
ficompl
inc
xchg
ja
and
pop
outsb
push
repnz
sub
jp
pop
push
jle
mov
push
sbb
movsl
jns
and
jns
into
and
gs
xor
xchg
dec
xchg
in
call
testb
pop
cs
jns
sbb
ret
jecxz
cmpsl
shrb
out
cli
jmp
iret
das
push
jnp
jg
push
stc
dec
push
mov
jge
ret
fcom
xchg
pop
jg
push
push
ret
jb
push
mov
xor
sub
inc
inc
pop
push
mov
test
pop
and
icebp
fldt
fucomip
std
dec
std
pop
lcall
xchg
pop
push
pop
mov
pop
scas
add
add
add
fcoms
imul
adc
xchg
mov
sub
pop
loope
sbb
outsb
sbb
dec
and
xchg
leave
or
dec
xor
or
inc
adc
test
xchg
insl
popf
cli
pop
sub
mov
push
in
fsubrs
dec
loop
leave
jmp
enter
inc
aad
je
sub
addb
imul
loope
lret
inc
mov
ds
or
xchg
nop
orb
ds
outsb
cli
inc
add
idivl
mov
fadd
inc
pop
dec
push
das
aas
adc
mov
insb
test
lods
and
inc
cmp
mov
sub
scas
pop
bound
sub
mov
dec
dec
push
sti
xchg
test
lods
and
outsl
sub
sbbl
fistl
insl
addr16
call
imul
mov
xchg
fidivs
loop
ljmp
sbb
push
add
add
add
lret
ret
sbb
and
adc
lea
xor
pop
movsb
or
xor
inc
jle
ret
ret
imul
dec
xchg
adc
jne
sbb
bound
add
xor
jg
xchg
cmp
and
push
pushw
popa
sub
jge
imul
pop
xor
insb
pop
push
xor
out
pop
xchg
xchg
inc
dec
mov
out
imul
aas
jmp
sbb
inc
xlat
popa
xchg
jb
scas
repnz
shlb
lret
pop
cmpl
dec
sub
mov
cmp
inc
jae
shll
mov
inc
das
and
add
adc
xor
pop
sbb
nop
cs
nop
sbb
scas
dec
das
mov
xchg
cmp
jnp
pusha
popa
cmpsb
push
shll
das
stos
sbb
fisttps
pop
sub
test
xor
inc
faddl
in
cmp
add
add
xchg
jg
jmp
std
mov
sub
addr16
add
add
add
sbb
adc
rclb
mov
nop
dec
xlat
sbb
xor
push
push
int3
push
and
pop
inc
cli
cmc
sub
inc
jg
mov
sti
xor
pop
les
rclb
pop
add
shrb
push
cwtl
jp
sbb
or
dec
fsubl
dec
adc
outsl
shrb
popf
inc
push
add
mov
cmp
mov
icebp
dec
push
cli
jb
xor
es
popf
cltd
add
inc
mov
in
es
jg
lahf
in
pop
pop
mov
imul
movsl
sbb
dec
push
dec
jbe
vmovaps
arpl
mov
popf
shlb
ss
mov
int
lahf
cmc
lods
jmp
xchg
jecxz
sti
aad
xor
push
cmp
mov
cmpsl
mov
push
mov
fisttpl
push
dec
inc
jae
pushf
sbbb
outsb
inc
into
cmp
in
aas
divb
dec
ljmp
add
add
xor
inc
mov
dec
fbld
add
add
add
mov
sub
je
push
out
cwtl
xchg
pop
or
add
cli
inc
dec
and
mov
cmc
cmpb
add
dec
loopne
aad
lea
les
add
sub
fsubr
bound
les
sub
js
xchg
sub
js
call
push
pop
jo
push
cmpsb
js
lock
aas
in
imul
testl
popf
or
fistpl
enter
fldenv
bound
repnz
out
lcall
dec
lgs
xor
fsubrp
jb
add
popf
aad
rolb
lock
lea
popf
scas
and
scas
mov
ljmp
cmp
das
stos
js
cwtl
out
enter
mov
sbb
or
lods
arpl
push
pop
xor
cmp
inc
call
sbb
mov
add
add
add
push
out
and
xchg
fidivrs
test
dec
out
fildl
pop
das
mov
add
adc
enter
add
adc
sbb
mov
mov
lds
das
clc
jae
push
fdivrs
outsb
je
std
cltd
push
aad
mov
test
mov
and
fsubl
lret
out
push
sbb
dec
clc
stc
pop
sbb
inc
jae
das
sbb
call
pop
jbe
inc
gs
jb
movsl
rcr
jp
sbb
in
lds
sub
mov
loop
aaa
jnp
loop
scas
sbb
cmp
xbegin
popa
xchg
push
and
xlat
gs
lock
pushf
fs
mov
pop
loopne
cmp
ss
dec
shr
inc
lock
sbb
cmp
scas
aam
push
and
add
add
jp
les
mov
arpl
pop
mov
mov
add
add
add
int
and
cmp
inc
sub
arpl
mov
nop
popa
xchg
outsl
pop
mov
insb
mov
std
flds
pop
lcall
or
repz
insl
clc
mov
fisubrs
pop
adc
lods
or
gs
dec
xor
lods
cmpsb
fmulp
jl
jno
jp
xor
jnp
and
packssdw
ror
mov
iret
inc
hlt
inc
repz
jno
adc
inc
mov
mov
lret
sub
ss
icebp
rcl
mov
mov
xor
arpl
mov
pusha
mov
call
mov
test
lret
mov
aaa
push
aaa
lock
mov
sub
lea
cmp
std
nop
jge
stos
rcrl
addr16
fadds
push
jae
je
push
xchg
add
xchg
flds
push
les
icebp
nop
test
add
add
clc
pop
stc
out
push
pop
bound
test
add
add
add
cltd
popf
lahf
stc
aad
sub
adc
sub
movsb
fs
stc
out
fisttpl
xchg
xor
ss
jnp
arpl
adc
lret
sub
cmp
int3
push
pop
push
pop
dec
inc
xchg
mov
cmp
dec
dec
mov
cmpsl
dec
je
sbb
dec
les
sahf
mov
cmp
ss
lods
sahf
cmpsb
orl
lods
mov
inc
popf
or
or
jno
and
xchg
mov
xor
xchg
mov
cli
jp
nop
insb
mov
or
in
ret
rcll
inc
inc
mov
mov
out
lahf
lea
xor
decl
ljmp
rcll
imull
adc
jno
sbb
mov
mov
test
leave
stos
into
mov
fimuls
pop
jne
and
addr16
push
repz
or
add
lds
cli
lcall
push
addr16
add
add
add
push
lock
sub
mov
fwait
cli
xchg
shlb
mov
movsb
repnz
sbbl
imul
bound
xorb
pop
xchg
sub
out
jle
dec
loope
das
xchg
and
stc
or
jge
add
jmp
enter
test
int3
fwait
sbb
outsb
mov
xor
ss
xor
enter
repnz
into
ffreep
or
mov
mov
mov
jecxz
sub
mov
add
icebp
pusha
xchg
add
nop
imul
mov
jns
jo
mov
cmp
sub
imulb
xlat
insl
cmp
pop
into
sub
adc
sub
out
rcrb
xchg
add
mov
in
cmpsd
jne
jg
sub
inc
adc
sbb
xor
aam
xchg
adc
xorl
insb
lret
add
addr16
add
add
add
scas
jo
inc
movsl
ffreep
bound
adc
icebp
jbe
or
clc
call
sbb
out
dec
add
out
pop
add
std
loop
add
jecxz
cwtl
lret
movsl
jl
or
mov
inc
dec
enter
pushl
mov
jbe
xor
loope
pushf
out
jle
adc
mov
or
inc
xchg
fidivl
shlb
cmpl
add
mov
adc
shrl
add
cmp
mov
ljmp
loopne
push
inc
inc
xchg
pop
iret
test
mov
inc
jge
test
lahf
mov
ss
inc
xchg
popa
xlat
mov
jb
push
sub
jmp
int3
sub
dec
in
or
mov
js
pop
cmp
insb
pusha
shr
lahf
inc
or
dec
pop
pop
sbbl
fstp
rorl
inc
inc
and
mov
add
add
add
xor
cmpsb
js
mov
mov
les
stc
xor
sbb
js
rorb
nop
xchg
and
lret
pop
push
xchg
and
das
stos
aad
cwtl
popa
lods
mov
mov
xchg
dec
cs
jns
cmp
mov
xchg
lock
mov
nop
xchg
je
sbb
sub
cs
ja
mov
dec
pop
popa
pop
push
push
cmpl
enter
loop
dec
les
mov
je
inc
add
lahf
ja
add
xor
jle
fidivs
jp,pt
scas
mov
push
mov
jle
or
scas
adc
xchg
lahf
lret
fs
test
es
ret
mov
jno
pop
dec
mov
push
dec
add
and
sti
xchg
nop
orl
enter
dec
idivl
adc
lock
jae
bound
pop
add
jb
lds
xor
mov
xor
dec
mov
push
jb
and
outsb
xor
add
loope
mov
jecxz
out
mov
mov
add
add
add
push
adcl
cmp
ja
and
pop
or
movsb
sbb
and
mov
jno
jb
xchg
ja
sub
aad
push
test
insl
out
xchg
lea
and
aam
push
clc
icebp
psadbw
jl
sbb
insl
jo
sbb
es
or
add
movsb
and
push
pushf
mov
nop
cwtl
sbb
mov
jo
out
xor
jg
les
pop
addr16
in
aad
and
mov
inc
push
lahf
imul
xor
dec
rcll
pop
inc
clc
jp
outsl
fnsave
pushf
leave
pop
imulb
xor
ficompl
pop
xor
or
inc
sahf
es
mov
dec
sbb
test
jnp
add
sub
sbb
mov
cmpsb
pop
outsl
lods
lret
iret
test
outsb
push
sarl
inc
std
dec
stc
jg
xchg
mov
out
or
add
std
test
jg
into
lret
orl
add
add
jb
jno
int
pop
adc
add
jno
xchg
enter
dec
adc
int
pusha
test
jge
in
lods
jne
push
cmp
jmp
outsb
push
jecxz
in
push
jge
rcl
add
pop
fnsave
aas
ret
xchg
or
movsl
iret
mov
cmc
cmp
scas
lcall
es
cltd
daa
bound
jne
movsl
outsb
movsl
jl
push
pop
jg
fsubp
mov
and
and
sub
dec
mov
mov
out
push
lret
popf
loopne
test
cmp
fs
mov
xor
push
fsts
pop
jmp
push
xor
mov
in
push
inc
xor
and
cs
push
jnp
or
dec
dec
out
jo
push
jecxz
mov
iret
push
mov
dec
dec
bnd
sarb
btr
mov
jns
inc
shr
mov
pop
xor
clc
add
lock
in
lcall
jae
dec
mov
dec
jno
addr16
add
pop
push
dec
pop
mov
aas
clc
add
test
sub
daa
imul
rolb
mov
stc
push
test
adc
adc
fsubrs
cmpsb
mov
cs
js
mov
or
mov
hlt
pop
sbb
push
jb
xor
loop
mov
xor
jns
mov
and
add
or
mov
cmp
js
or
cltd
xchg
fs
xchg
xchg
pop
cli
mov
and
adc
adc
cmc
out
push
xor
adc
push
jnp
in
mov
and
and
mov
pop
mull
push
pop
pop
shld
addr16
sub
lods
add
adc
xchg
outsb
push
in
jge
inc
out
iret
cs
xor
scas
xor
jp
sub
inc
les
add
sub
jg,pt
dec
arpl
mov
add
add
xor
addb
clc
and
sbb
hlt
dec
into
pop
mov
push
dec
mov
inc
cmp
add
sahf
shrl
mov
add
inc
sub
sub
fiaddl
mov
jno
fidivl
arpl
push
lret
dec
sarb
jb
sbb
jl
adc
push
add
sbb
pop
xchg
sti
ss
add
pop
xor
xchg
test
sahf
or
ja
sar
out
xchg
stos
loope
pop
jbe
xor
cwtl
add
pop
out
ds
js
xchg
pop
jl
pop
sbb
ret
pop
mov
imul
clc
out
cwtl
bound
pushf
xchg
mov
into
popf
insb
ds
and
add
fisttpll
cld
fcmovu
aaa
adc
lods
cmpsb
sub
jp
idiv
es
xchg
stos
je
or
xor
push
pop
push
xor
insl
sbb
outsl
mov
scas
aad
jo
mov
add
leave
cmp
pop
pop
leave
loop
scas
lock
test
hlt
pop
mov
clc
dec
xor
cmp
jae
popf
adc
repnz
nop
enter
repz
data16
push
daa
icebp
jecxz
push
gs
inc
lods
inc
in
lret
push
adc
cmc
cmp
mov
inc
fwait
dec
jo
xchg
jg
jecxz
push
nop
lret
xchg
cmc
ret
leave
mov
add
insb
leave
insl
jne
nop
call
insb
mov
icebp
xchg
ret
fnstenv
xchg
js
sti
pop
je
add
mov
adc
stc
pop
dec
sub
test
pop
xor
clc
sbbl
lods
inc
orb
mov
sub
sub
outsb
inc
xor
mov
test
cld
adc
das
inc
mov
rcll
xchg
dec
sub
cmp
xor
movsl
ljmp
mov
dec
ret
adc
insl
jmp
add
inc
fbld
mov
pop
lcall
add
add
add
sbb
push
add
cmp
data16
outsb
xchg
push
adc
jp
jb
jns
out
mov
and
movsl
aam
loope
mov
pushf
cwtl
ror
leave
cpuid
pop
cltd
repz
mov
inc
out
lar
jb
jecxz
jb
mov
push
mov
inc
insb
out
popa
hlt
into
cltd
jno
push
cli
inc
push
jb
inc
sub
lods
mov
or
lcall
shlb
sbb
xor
lret
cwtl
cmp
test
mov
in
inc
sbb
and
and
xor
mov
and
pop
dec
mov
cmp
mov
or
sbb
cmc
jne
push
out
faddp
movsb
adc
mov
push
xchg
and
dec
pusha
std
mov
xchg
and
ret
ja
jmp
ds
hlt
stc
mov
add
jno
add
add
fistpll
call
jno
lret
mov
add
test
mov
frstor
mov
aam
and
js
in
dec
int
dec
cmpl
icebp
and
inc
into
mov
ds
xchg
cmc
cmpsb
and
jmp
addr16
add
add
mov
sbb
or
mov
xor
mov
cwtl
inc
xor
add
or
mov
faddl
mov
jg
cmp
add
cmp
or
push
mov
and
jo
scas
pop
jbe
cmp
daa
iret
outsl
and
loope
cmp
repz
push
dec
cs
imul
stos
scas
loopne
stos
fadd
sbb
adc
fwait
jbe
xchg
push
push
mov
in
clc
cmpl
sbb
push
dec
cwtl
movsb
int
pop
pop
pop
inc
rcll
add
pop
push
iret
mov
into
std
sti
leave
sti
iret
jmp
adc
addr16
add
nop
push
inc
add
mov
push
pop
jg
lret
xor
cmpsb
dec
lods
sarl
inc
fadds
fisubrs
jmp
aaa
or
mov
aam
xchg
pop
icebp
ret
imul
test
clc
scas
add
and
mov
pop
dec
cmp
jecxz
mov
or
fists
mov
inc
lcall
mov
shrb
xor
and
or
lahf
xorb
push
inc
je
cmc
mov
xchg
rolb
fldenv
sbb
das
ljmp
imul
addl
xor
push
lods
shr
or
mov
cmpsb
call
xor
mov
clc
or
add
clc
jmp
std
stos
push
je
dec
cmpsl
pusha
add
lahf
xor
rolb
pop
or
sti
popf
jne
xchg
dec
adc
les
add
mov
mov
xor
in
inc
rolb
add
add
das
out
cmp
and
jge
mov
lock
ret
xchg
std
mov
mov
sbb
testb
test
fs
int3
sub
sbb
push
ljmp
movsb
push
xor
xor
in
fidivl
sbb
test
push
dec
inc
lock
mov
andl
mov
push
add
push
movl
mov
not
and
jae
scas
jno
pusha
sbb
or
xor
js
cmp
lods
xchg
mov
sbb
pop
lcall
pop
mov
inc
adc
add
mov
xlat
fwait
in
pop
mov
push
jbe
js
dec
cwtl
out
test
mov
fnsave
pop
out
xor
orb
xor
das
jl
pop
pusha
xchg
lcall
jnp
repz
or
add
add
jg
mov
sahf
loop
cmp
add
add
add
push
daa
mov
mov
jge
cmpb
xor
inc
shll
cld
jns
and
inc
mov
sahf
jno
add
mov
jmp
xchg
pop
xor
jge
stos
sbbl
mov
sub
xor
hlt
nop
js
cmpl
mov
loop
roll
sbb
cmpsl
dec
add
fcmovb
cmp
cli
sbb
outsl
mov
ja
add
fisubl
pop
scas
pop
and
addr16
and
dec
add
sub
cmp
stos
pop
xchg
clc
mov
lods
mov
or
xor
scas
out
lea
cli
pop
aaa
jbe
jns
xlat
cmp
sbb
xor
aam
dec
jae
shll
addb
inc
out
xor
jle
repz
cwtl
xor
dec
push
push
stos
icebp
cld
add
or
fs
fisttps
iret
inc
fbld
jge
mov
xor
push
cld
pushl
cld
sbb
addr16
add
add
aam
cwtl
cld
shll
add
in
frstor
inc
jmp
pop
add
cmp
and
icebp
ret
mov
mov
inc
cli
enter
push
inc
lock
inc
sub
xor
push
inc
clc
push
movb
lods
xchg
mov
jmp
pop
enter
mov
stos
pop
or
movsb
push
arpl
out
xchg
jne
scas
lcall
lods
mov
stc
test
or
lock
popf
or
js
test
mov
xchg
mov
inc
and
dec
push
mov
out
mov
mov
loop
pop
jne
sub
enter
lods
push
xchg
and
dec
mov
ret
jb
repz
lea
rorb
sbb
pop
mov
push
lret
out
adc
nop
push
int3
inc
icebp
mov
scas
sbb
lods
dec
pop
adc
int
ss
sbb
or
subl
add
add
pushf
shrb
lcall
sahf
mov
add
add
add
sarl
or
ds
sub
or
inc
jae
xor
js
subl
mov
pop
pop
sub
and
mov
jnp
xchg
push
pushf
movsb
inc
lret
dec
fistpll
shrl
data16
jp
pop
les
mov
mov
in
xchg
in
mov
daa
jl
cmp
lret
inc
dec
inc
inc
cmp
and
scas
sub
lds
jo
adc
les
sarb
das
jmp
lret
xor
mov
xchg
push
leave
shr
and
fisttpll
mov
in
push
jmp
and
mov
addl
sbb
dec
iret
ljmp
icebp
mov
cmpsb
cmp
imul
or
stos
and
testb
cmp
out
negb
pop
sti
jge
fdiv
sbb
jmp
sbb
outsb
or
add
add
test
mov
aas
scas
frndint
sarl
push
les
add
add
add
sbb
int3
inc
or
popa
mov
loope
divb
imul
out
add
mov
out
pop
es
cmp
stos
test
pop
or
adc
mov
das
rcrb
es
movsb
daa
jae
lock
lret
xorl
call
arpl
sarl
jg
xor
dec
inc
and
cltd
xchg
scas
inc
inc
and
add
adc
mov
int3
push
mov
faddp
andb
cmp
mov
repnz
jne
jne
xor
jae
and
push
mov
sbb
out
sub
mov
sbb
inc
mov
ret
mov
addb
inc
cmc
imul
loope
pushf
scas
mull
mov
dec
pop
lret
fdivl
xchg
les
lea
lds
xchg
out
push
dec
test
jg
jne
jne
jg
loop
mov
mov
add
add
add
je
mov
sbb
fnstenv
push
rcll
subb
inc
js
jle
mov
xor
mov
rcrb
mov
mov
push
xor
test
sbb
mov
movsb
pop
mov
jno
insb
movntps
mov
aaa
pusha
pushf
add
add
or
repz
nop
aaa
mov
aam
dec
xchg
loopne
fwait
adc
xchg
lret
test
sbb
sub
xor
pop
push
xor
mov
shrl
mov
ret
and
jb
popl
jne
jo
lods
add
sub
xchg
incb
push
push
mov
mov
stc
cmp
dec
mov
or
or
ds
movsl
push
inc
push
pusha
sti
fucomp
cmp
xor
pop
xor
mov
and
or
imul
adc
add
sbb
mov
cmc
mov
mov
add
add
std
int3
push
jp
mov
push
arpl
cmp
in
mov
sub
jne
dec
dec
cmc
aam
dec
push
mov
loop
inc
clc
ss
bnd
adc
mov
or
in
or
out
outsb
scas
add
xchg
mov
les
jp
mov
int3
int
sete
fs
in
les
das
sbb
cltd
dec
fnstcw
out
loop
push
gs
jns
out
repz
cmp
test
sti
ror
mov
push
xor
out
mov
incb
in
negl
pop
pushf
inc
aaa
cmpsl
adc
icebp
add
sbb
add
hlt
pop
push
arpl
inc
in
cmc
add
icebp
mov
gs
sub
mov
xchg
mov
arpl
insb
mov
mov
cmp
rcrb
mov
jmp
pusha
movsl
fimuls
mov
addr16
add
add
outsb
jle
lods
testl
movl
add
lret
mov
ja
pop
mov
sub
ja
mov
shll
test
jb
lcall
ret
dec
mov
xor
push
test
xor
int3
jge
add
pusha
lea
in
jnp
bnd
add
sahf
dec
fimull
adc
imul
fldt
clc
xor
int3
push
cmpsb
sub
lock
adc
or
bound
xor
lahf
stos
fiaddl
outsb
lea
subl
pop
movsl
xor
rorl
fs
mov
inc
adc
push
add
dec
outsb
loop
push
add
jle
mov
into
in
sbb
fnstsw
popa
out
rcll
push
xor
jb
jno
add
adc
sbb
shlb
ret
ret
and
sbb
push
add
or
std
in
and
sbb
insl
mov
mov
add
xlat
lret
add
add
add
dec
test
loopne
xor
stc
mov
push
dec
sub
outsb
mov
rclb
incl
test
push
fistps
xor
rorb
cwtl
and
mov
ret
mov
inc
jle
cwtl
cmc
inc
cmp
insl
je
out
push
call
or
lods
pop
nop
test
int
es
out
inc
cli
push
lods
and
repz
and
es
mov
jp
push
mov
rclb
add
xchg
loope
mov
pop
mov
mov
icebp
popa
test
sbb
dec
xchg
push
push
xlat
jmp
push
mov
dec
insl
cmc
xchg
loopne
enter
lock
inc
notl
lea
and
xor
dec
fidivrs
sub
jge
mov
imul
and
inc
gs
mov
add
bound
push
test
mov
push
pop
cli
inc
xchg
inc
les
test
sbb
xlat
in
aad
movsb
aaa
fs
add
add
add
sti
das
mov
cmp
ret
mov
push
jle
fcoml
lret
and
push
adc
bound
cmp
xchg
mov
dec
lock
subb
jp
and
repnz
lahf
xchg
loop
sub
sbb
loopne
xlat
mov
push
ret
ljmp
rorl
sub
outsb
aaa
dec
sar
js
lods
mov
jge
ficoms
shlb
je
out
mov
scas
and
dec
jb
test
lock
jge
aas
dec
icebp
aas
int3
mov
shr
std
mov
pop
cmpsb
mov
icebp
and
push
arpl
pop
jae
addl
loope
daa
popa
scas
cwtl
ljmp
in
in
cmpb
jbe
iret
cli
push
sbb
repnz
cwtl
data16
xchg
rcrl
clc
ljmp
add
ds
sub
cmp
jg
and
mov
sbb
and
addr16
add
add
mov
in
movsb
and
dec
outsb
jbe
fldenv
iret
stos
and
cmp
mov
mov
pop
xchg
mov
enter
fisubs
mov
or
loop
repnz
or
and
jno
inc
xlat
inc
ret
and
push
cmp
insb
xorl
push
sbb
testl
push
enter
sub
push
popf
push
dec
and
mov
push
fidivs
out
jmp
xor
and
lret
stc
mov
mov
data16
arpl
fbld
pop
in
jne
fsave
pop
ret
dec
xor
adc
and
mov
rorb
mov
arpl
push
cwtl
push
out
js
xor
cmpsl
mov
sub
jp
adc
inc
cmpsb
push
mov
pop
sbb
adc
jecxz
pop
mov
or
add
add
xor
fistpll
out
repz
fcoms
jae
xchg
icebp
addr16
add
add
add
pop
sbb
mov
cltd
stc
inc
jnp
mov
gs
enter
cmpsl
and
adc
dec
xchg
xchg
bnd
pop
clc
clc
push
pushf
adc
lret
icebp
scas
cmpsl
sub
data16
or
xor
fwait
ret
adc
adc
pop
mov
mov
mov
sub
ja
jo
mov
xchg
cmp
xchg
ds
xchg
lahf
push
or
mov
cld
fbstp
jge
pop
cmpsb
das
jne
ret
inc
fs
xor
add
xor
cld
faddl
out
test
fisttps
mov
inc
adc
ja
xor
shlb
sti
sbb
or
or
xchg
popa
adc
xchg
jns
cltd
mov
push
or
push
jmp
xor
cmp
dec
mov
arpl
aam
sbb
psubsb
mov
jns
mov
cmp
jo
cmpsb
scas
pop
or
add
add
mov
mov
fcmovnb
jl
addr16
add
add
add
movsl
ret
or
enter
adc
xor
imul
dec
push
out
nop
pop
add
sub
fldenv
lret
je
das
hlt
sub
pop
pop
inc
add
push
sub
sti
mov
xor
cs
outsb
pop
dec
add
sub
sti
popa
lds
cmp
ss
mov
jmp
mov
mov
mov
fmuls
inc
loop
xchg
mov
mov
sbb
lods
stos
push
outsb
xor
minps
js
ds
inc
xor
lods
nop
pop
gs
mov
mov
jl
pushf
mov
add
sbb
sbb
dec
jecxz
arpl
cltd
ds
rorb
jge
and
pop
mov
aad
mov
mov
outsl
outsb
lcall
cld
jns
ljmp
push
aad
sahf
stc
enter
in
sbb
push
inc
daa
and
aam
int
add
add
add
rclb
stc
test
shll
hlt
outsb
loope
aad
insb
cli
cmpsl
add
jb
data16
into
ljmp
in
loope
mov
cmc
out
mov
fsubr
xor
fsts
mov
push
jne
cmpsb
and
jo
add
loope
xor
lcall
mov
and
iret
push
inc
pushl
test
test
cmp
cld
lock
push
inc
inc
jmp
je
add
xchg
inc
mov
mov
imul
jb
adc
mov
mov
in
aad
xlat
pop
mov
daa
cmp
push
sti
scas
add
fidivrs
outsb
cwtl
mov
out
popa
dec
inc
pop
repz
aam
ficoml
test
movsl
sbb
mov
sahf
popf
or
inc
inc
sti
dec
push
nop
pop
and
jne
cmpsb
popa
ret
aad
xchg
cmp
popf
pop
mov
add
add
imul
cmc
call
inc
push
popa
jp
and
add
add
add
ja
adc
mov
and
notb
call
dec
adc
push
sbb
or
and
sbb
inc
int3
ds
or
cmpsb
mov
ret
adc
js
adc
push
into
cltd
adc
cmpsb
or
pop
movsb
or
or
cmp
loop
and
push
jo
mov
adc
repnz
jno
pop
sbb
sub
sarl
fisubs
and
ret
cli
adcl
stc
incb
xor
ficomps
lret
sbb
ret
aas
insl
jmp
ss
scas
stos
fwait
mov
xor
or
lret
push
pushl
adc
pop
dec
add
outsl
pop
cmp
jmp
call
out
data16
popf
or
mov
fistl
add
fcomi
jg
jbe
fucomip
jge
or
ret
movsl
mov
iret
sub
ljmp
add
add
aad
push
pusha
mov
dec
sbb
lock
adc
loope
dec
das
into
dec
mov
pop
aas
ret
jecxz
fnstsw
pusha
cmpsl
mov
and
daa
or
pushf
inc
hlt
adc
mulb
sub
push
push
jmp
shrl
push
into
dec
clc
fnstenv
mov
jmp
shlb
jmp
clc
fisubl
mov
pop
pop
clc
lock
stos
sahf
out
mov
fwait
cmp
adc
popa
cmp
mov
or
sar
imul
pop
add
sub
cmp
movsb
hlt
out
icebp
in
push
lret
addb
fadd
das
ja
sub
jns
fiaddl
nop
xchg
stos
cmp
stc
in
dec
adc
repz
rol
and
add
push
mov
fcompl
inc
jae
push
sbb
iret
mov
daa
mov
mov
out
out
out
into
gs
cld
test
add
add
add
repnz
cmp
aad
lret
sbb
mov
movsl
adc
or
cs
les
adc
popa
ja
mov
mov
es
arpl
adcb
mov
sbb
mov
jecxz
mov
xor
add
ds
shrl
jae
pusha
xor
cmp
xor
sbb
or
or
or
adc
cmp
xchg
dec
fldpi
int
ret
inc
push
loop
sbb
jecxz
loope
subb
es
xchg
jl
scas
mov
test
into
pop
inc
orl
call
pushl
imul
icebp
or
adc
jae
addr16
sti
cmp
mov
popa
mov
out
cmpsl
fistpll
lods
cld
jg
cmp
pop
pop
dec
in
loope
inc
xor
div
loopne
and
je
out
mov
bound
cltd
roll
add
add
add
cmp
cmc
leave
xor
sub
cmpl
jns
cmp
push
out
inc
mov
mov
pop
mov
ds
addr16
ja
jle
mov
add
int3
and
mov
cmp
mov
sbb
inc
mov
adc
sbb
mov
inc
movsl
shrd
jae
mov
xor
mov
add
rcll
sbb
mov
cwtl
dec
add
fidivrl
pop
stos
and
cmp
push
and
inc
and
enter
mov
mov
pause
or
dec
ret
dec
dec
mov
aad
and
in
xorb
cmp
sub
jns
add
scas
push
and
jns
imul
jne
push
stc
push
cld
aam
pop
scas
push
lret
int3
cmpsb
call
sbb
mov
stos
pushf
imul
dec
incb
inc
icebp
adc
movsb
and
add
dec
inc
dec
daa
dec
das
outsb
imul
push
xchg
js
jne
rolb
add
add
add
pushf
sbb
mov
bound
mov
adc
lret
xor
mov
and
pop
push
rcl
jmp
and
mov
jae
xchg
cmpsb
mov
mov
sahf
sbb
xor
dec
or
sbb
sub
out
sbb
mov
cwtl
mov
cmp
fwait
clc
sub
unpckhps
fistl
mov
stos
sub
int
jg
mov
je
cmpsb
pop
scas
xchg
xor
sarb
scas
push
push
test
jb
mov
push
add
xchg
ret
gs
pop
cmc
les
jne
jmp
xchg
inc
mov
fucom
pop
test
adc
in
xchg
cld
leave
add
jnp
inc
mov
mov
mov
dec
div
mov
sub
imul
mov
sub
mov
mov
in
xor
jecxz
mov
idiv
push
rclb
sub
into
nop
sbb
int
call
out
lahf
ret
or
adc
jns
roll
add
add
add
add
mov
ja
or
push
inc
adc
aaa
mov
inc
scas
xchg
fdivl
and
lods
insl
add
push
kmovb
outsb
sub
jge
sti
inc
add
enter
jne
sbb
xlat
insb
leave
mov
data16
mov
int3
cmpl
xor
stos
dec
ret
scas
int
push
mov
in
pop
jne
jo
ficomps
jmp
jae
sub
fistl
sub
pop
push
negl
lds
movsl
jl
and
or
add
dec
push
test
lods
stos
mov
xchg
mov
adc
jo
scas
pop
jo
and
pop
jmp
adc
mov
ret
sti
adc
jo
push
mov
jge
iret
insb
mov
lods
out
xor
jp
test
pop
push
add
add
neg
outsl
push
xchg
or
jno
addr16
add
add
add
aas
mov
dec
ret
xor
sub
loopne
jl
lcall
scas
shll
sahf
mov
mov
outsl
fnstsw
jno
cmc
xchg
sub
popf
inc
push
mov
sar
mov
jns
cmc
push
cli
subb
and
dec
xchg
jle
cmp
xor
aad
cmp
jno
inc
xlat
sbb
push
ja
pop
je
sub
push
fucomip
pop
mov
and
lcall
lods
mov
mov
dec
or
mov
mov
and
das
sub
pop
mov
mov
add
dec
mov
imull
insl
inc
cltd
subl
sub
inc
mov
pushf
xlat
pop
inc
adc
adc
pinsrw
mov
xchg
in
push
cld
outsb
movntps
mov
push
pop
push
add
cli
cwtl
adc
sbb
dec
out
sub
mov
outsl
add
xor
add
sbb
sub
dec
sarb
hlt
addr16
add
add
add
test
pusha
cmpsl
icebp
mov
push
jo
xchg
adc
sub
mov
rolb
jns
test
out
push
rorb
movsl
sahf
idivb
fcompl
adc
xchg
rolb
ljmp
add
out
pop
jmp
jo
adc
out
iret
mov
lcall
movsb
mov
pop
or
loop
jle
cltd
dec
aas
cmp
xchg
sbb
ret
out
cmp
lds
mov
movsb
or
jecxz
in
ficoml
stos
jne
jle
mov
sub
ja
inc
xchg
mov
and
xchg
sub
das
fbld
ret
cmpsb
jnp
sbb
test
cwtl
jae
leave
or
clc
pusha
inc
jo
popa
or
xor
mov
sbb
repnz
pop
pop
dec
push
push
sbb
inc
shll
adc
lods
adc
jo
pop
xchg
incl
add
add
ds
jae
dec
aad
addr16
add
add
add
or
or
xchg
out
xchg
sahf
push
and
lcall
push
jnp
ud0
fmul
clc
sub
addb
loopne
hlt
pop
mov
mov
pop
sbb
mov
loopne
loopne
xorl
mov
scas
orb
scas
pop
and
add
sarl
sbb
mov
cmc
push
adc
push
pop
push
cmp
mov
fcomip
mov
pop
cld
enter
es
push
mov
xchg
ss
fwait
jle
or
out
dec
mov
or
stc
fs
xchg
imul
imul
add
or
outsb
push
xchg
cmc
outsb
pop
stos
daa
lods
sbb
cmpsb
adc
fisttpl
inc
test
push
out
xlat
jno
adcl
dec
cs
xchg
mov
cld
adc
jb
hlt
xchg
and
idiv
lahf
insl
mov
cltd
sbb
add
add
sub
mov
or
out
stos
add
mov
pop
cmp
mov
sbb
aaa
imul
out
adc
js
insb
popf
fs
cwtl
test
or
sub
jnp
je
lahf
push
jle
ss
cmp
cltd
fisttpl
ja
and
ljmp
faddl
jo
cmpsb
addr16
out
lds
cmp
pop
or
or
sbb
mov
push
andl
adc
push
cmpsl
icebp
hlt
sub
out
jb
mov
adc
cmp
lahf
sahf
mov
arpl
fxch
sub
cmp
ficompl
lret
loopne
ja
pushf
ss
mov
lds
js
mov
outsb
sub
insl
mov
sbb
pop
repnz
scas
daa
push
fwait
inc
insl
cmp
jg
leave
or
mov
fadds
add
add
add
xor
dec
and
ja
push
out
mov
adc
cli
and
leave
add
add
popf
psrlq
sub
js
lods
mov
jecxz
xchg
push
mov
loopne
mov
fwait
ret
lret
mov
and
cmp
lret
dec
xor
jp
clc
fs
movsl
in
cwtl
dec
pop
stos
push
loope
sub
cmp
shlb
lock
sub
lods
ljmp
divl
into
pushf
sbb
jne
cmp
pushaw
adcl
das
repz
xor
push
sub
enter
test
lock
add
mov
jecxz
pushf
out
rorl
push
pushf
jae
push
div
inc
repnz
scas
cmp
inc
mov
js
sarb
fildll
inc
ret
pslld
shrl
test
hlt
mov
mov
jne
out
imul
xchg
movsb
fwait
sbb
inc
flds
add
add
add
dec
xor
dec
out
or
and
ret
sub
stos
frstor
cmp
jle
aad
hlt
cmpsl
push
pop
inc
jmp
sbb
push
mov
scas
fildl
cwtl
mov
mov
cld
pop
ror
mov
test
inc
jmp
jns
ljmp
cmc
dec
mov
je
addr16
jmp
daa
test
cmp
pop
add
or
push
jno
or
pop
movsb
pop
add
in
daa
iret
daa
mov
std
hlt
mov
test
jecxz
and
imul
add
or
fsubl
pop
lods
fsts
adc
adc
add
sub
fwait
sarb
test
out
popf
fs
mov
cmpsl
mov
ret
jne
push
loop
add
xchg
out
push
sbb
movsb
mov
ljmp
int
les
in
int
xchg
lods
out
fldcw
push
in
sub
add
add
add
adc
push
mov
fcoms
pop
filds
sbb
shl
shlb
pop
test
in
sbb
int3
in
loopne
and
dec
cmp
dec
jl
iret
dec
add
adc
fidivrs
or
insb
lods
jns
xchg
fsubl
lock
gs
sub
inc
orb
ret
xor
dec
std
fwait
in
mov
jo
lds
jle
mov
pop
xlat
mov
addr16
cmpsb
dec
sbb
lock
inc
aad
add
fistpll
popa
push
jbe
inc
mov
push
or
stos
or
cltd
push
mov
imul
cmp
jnp
and
mov
inc
idivl
push
inc
xor
test
andl
inc
jns
not
mov
or
dec
imul
and
mov
xor
inc
lods
jmp
jmp
cli
pop
ja
push
or
add
add
sbb
sahf
cmc
fsubrp
jnp
sti
enter
push
pop
fildl
add
add
add
pop
bound
adc
in
ja
pop
sbb
jg
or
outsl
pop
subb
or
jmp
punpcklbw
or
pop
out
std
push
lock
xor
or
ret
inc
mov
insb
pop
mov
jno
dec
inc
xchg
mov
inc
sbb
ret
mov
and
ficomps
sbb
int3
inc
imul
sub
or
popf
lds
sub
push
push
and
mov
push
fwait
xchg
mov
sub
sbb
out
test
xchg
pushf
push
mov
xchg
jb
outsb
mov
xchg
popf
test
imul
inc
dec
ljmp
push
fnstcw
push
out
ss
into
int3
jge
orb
jecxz
inc
cmp
mov
jge
pop
pop
jbe
jle
ja
push
inc
in
mov
in
dec
mov
das
pop
dec
jle
jg
std
fstpt
in
mov
faddl
add
add
add
jmp
adc
and
or
jp
imul
fists
addl
fisttpl
xchg
mov
pop
addr16
leave
out
aas
add
dec
sub
repz
jp
inc
call
mov
fnstenv
shrl
subl
out
les
repz
in
xor
dec
mov
sbb
mov
xor
sbb
mov
mov
fs
xor
repnz
mov
xor
in
stos
sahf
test
ds
xchg
or
enter
in
jno
test
movsl
sahf
je
xchg
cmp
test
stos
outsb
scas
data16
push
inc
xor
xchg
les
pop
xor
xor
jnp
es
mov
lret
imul
jno
push
jns
div
xchg
adc
shlb
push
jae
icebp
ds
add
pop
push
pop
fistpl
cmp
ljmp
sti
lret
fldl
add
add
add
in
xlat
or
decb
faddl
pusha
or
ds
mov
xor
inc
adc
mov
imul
in
cwtl
xchg
xchg
pop
inc
aaa
cmp
mov
loopne
fdivl
ret
dec
xor
and
mov
lds
inc
fwait
mov
mov
dec
xchg
imul
cld
aad
fsubs
lcall
cmp
add
xchg
mov
shlb
addr16
je
incb
inc
push
sub
movsl
xchg
call
imul
imul
jne
push
push
imul
xor
mov
cmp
or
xchg
in
xor
loop
mov
lea
inc
pop
jle
mov
daa
mov
mov
into
inc
dec
into
dec
cltd
sub
bound
or
adcl
shl
cs
jmp
fistpl
add
sbb
jmp
scas
inc
call
fiadds
add
add
add
or
movsl
lods
mov
push
cmp
jecxz
mov
xchg
lods
cmp
mov
or
adc
push
cmp
or
or
push
mov
add
in
pop
dec
and
rcrl
mov
mov
pusha
clc
ds
jno
dec
addb
pop
xchg
jg
adc
push
pop
mov
or
or
xor
jl
out
int
inc
dec
stos
pop
ds
jl
pop
pop
ds
rcr
add
fcomi
xor
jl
xchg
sti
stos
addl
int3
jae
fucomi
xor
popa
addr16
add
xor
loope
sub
scas
mov
jmp
pop
adc
pop
repz
fcos
xchg
jo
std
cmc
jg
dec
mov
jecxz
push
pop
adc
mov
jbe
inc
and
dec
push
push
cmp
push
insl
jb
sub
cmp
lods
mov
loope
cmpsl
fimull
faddl
cwtl
aam
filds
add
add
add
das
cli
nop
insl
push
xchg
pop
into
inc
inc
fidivrs
mov
push
pusha
adc
jp
pop
lret
dec
cltd
xchg
stos
mov
pop
adc
popa
push
inc
hlt
jl
loope
sti
add
out
push
test
lret
ss
popf
out
das
xchg
stos
rcrl
lahf
mov
movsb
xor
push
aad
or
adc
insb
mov
jae
push
xchg
repnz
add
jbe
imulb
sbb
mov
push
and
pop
adc
shlb
mov
bound
pop
dec
sbb
in
inc
shrl
jge
rclb
xchg
bound
testb
in
movsb
and
xor
clc
bnd
enter
cmp
pop
imul
outsl
notl
imul
pusha
out
xorl
jns
out
adc
aas
and
inc
lret
dec
mov
or
xchg
sub
add
add
mov
lcall
fisttps
or
loopnew
add
add
add
enter
inc
inc
mov
inc
ficoms
push
sub
add
jb
sti
adc
xchg
pop
ja
sbb
mov
xlat
outsb
jl
or
sbb
xor
stos
bound
fildl
add
sub
mov
push
shlb
scas
lods
dec
pusha
loopne
lret
and
mov
jno
xchg
jo
mov
sub
loop
sahf
cli
sub
jg
icebp
and
xlat
sahf
mov
adc
mov
imul
or
test
and
loopne
es
add
call
pop
fisubrs
jge
pop
les
pusha
add
jmp
mov
xchg
mov
push
aaa
xchg
fldenv
pop
ret
mov
or
cmpsb
jo
clc
mov
test
pop
arpl
jne
mov
sbb
add
add
mov
jns
xchg
xchg
mov
push
jg
loopew
add
add
add
in
push
sbb
lods
stos
xlat
divl
test
lret
pop
std
lea
or
stc
and
pop
sbb
xchg
lods
cmp
lahf
je
dec
rcrb
push
out
or
repz
mov
fdivs
rclb
test
adc
sub
iret
push
adc
sbb
pop
sub
and
mov
cmp
sub
jle
mov
and
or
adc
pop
cs
push
sbb
mov
push
lea
fdiv
loopne
insb
cmp
mov
jp
scas
aaa
ljmp
mov
xor
adc
sbb
mov
sti
xor
stc
sbb
and
fldcw
rclb
enter
sub
inc
movsl
xor
sahf
es
dec
sbb
fdivrs
movl
push
cmc
dec
je
or
and
pusha
or
ljmp
add
add
fadd
fsubp
jnp
or
cld
les
outsb
fsubs
loop
add
add
add
sub
and
cmpsb
lds
adc
stos
aas
ds
and
repz
das
add
cltd
mov
ja
enter
in
push
cltd
push
into
loopne
imul
ja
mov
adc
pop
fistpl
jecxz
repz
mov
mov
data16
dec
add
in
lods
mov
cltd
loopne
add
push
sub
jne
mov
pop
jp
jl,pn
bound
xor
push
add
mov
idivb
jl
orb
sbb
mov
mov
inc
mov
aas
imul
jmp
xchg
inc
je
mov
pop
inc
pop
mov
insb
aas
cld
jne
pop
dec
xorl
mov
jae
add
ficomps
loopne
push
cwtl
or
xor
dec
mov
or
shl
dec
push
xor
push
cmp
sub
cld
cli
jle
dec
nop
xor
aas
or
add
add
inc
negb
pop
out
lcall
scas
lcall
lret
mov
fdivl
adc
aas
dec
mov
jl
xchg
sti
xor
xchg
pop
mov
sub
cs
mov
pop
out
imul
push
shlb
daa
xchg
subl
xor
cmp
lds
iret
int
popa
enter
inc
adc
cwtl
jge
mov
pop
arpl
jge
or
sbb
lret
cmp
daa
cmc
xchg
push
fstl
aam
xchg
arpl
xor
js
ficomps
lea
rcr
dec
stos
mov
sbb
dec
jmp
int3
push
dec
nop
xchg
mov
inc
xchg
xchg
dec
rclb
lahf
cmp
lods
out
je
ffree
push
cmpsb
sub
xor
cli
add
push
sbb
test
stos
adc
pushf
mov
flds
add
ja
sti
aaa
out
ja
orb
add
add
pop
fwait
cmp
xor
mov
inc
push
cmp
cltd
pop
loop
add
push
push
imul
pop
fmull
fisubrl
push
push
sbb
xor
add
sub
sub
pop
lahf
lahf
cmc
rorb
xor
pop
rcrb
stos
lock
fsubr
popa
test
stos
fwait
fcmovu
xchg
nop
cltd
push
les
push
cmp
jle
adc
test
mov
pusha
adc
mov
fcomi
mov
push
mov
add
sbb
sbb
rorl
shll
faddl
and
cld
jbe
rorl
sub
ret
mov
cmp
movsb
xchg
and
pop
push
push
fwait
insl
shll
push
push
pop
xor
cmp
bound
loope
cli
pusha
iret
xchg
mov
cld
adc
sub
ljmp
data16
xor
std
jp
lock
add
ror
cltd
outsl
mov
aaa
pushf
in
mov
add
add
dec
mov
enter
fisttpl
dec
jmp
sbb
in
lea
mov
push
das
pop
addr16
mov
sub
jg
rolb
das
fidivl
test
fcomps
shll
dec
mov
andb
insb
mov
outsb
inc
xor
outsb
xor
ret
or
out
add
and
add
or
sub
ja
cmpsb
push
cltd
dec
lock
movsl
lahf
inc
loop
jno
mov
add
in
jnp
fs
xor
arpl
cld
fwait
dec
pop
push
or
insl
repnz
data16
in
cmp
and
aas
ret
cli
pop
pop
xchg
and
popf
sbb
add
les
cmpsb
fwait
stc
jbe
insl
sahf
dec
xchg
fstl
dec
and
stos
lret
pop
and
inc
xchg
jmp
pop
ljmp
sub
push
mov
adcl
lods
bound
add
add
ja
lcall
mov
or
add
add
pop
push
xorb
mov
push
add
inc
cltd
aas
xor
pop
movsl
mov
stos
inc
dec
inc
or
mov
aam
mov
out
and
in
lock
add
mov
pushf
inc
movsb
stc
mov
sub
std
push
jl
xlat
dec
cli
fwait
lds
dec
add
push
jge
xor
mov
inc
mov
pop
inc
mov
lahf
icebp
stos
adc
jmp
sahf
add
pop
outsb
dec
rolb
aas
add
push
test
insl
enter
fwait
or
sbb
jo
mov
push
addb
outsl
test
lret
cmpsl
xchg
pop
push
rorb
movsl
mov
outsb
xor
notl
and
rol
cmp
pusha
xor
push
xorl
ret
xchg
sysexit
scas
ljmp
cmpsb
jnp
and
pop
lds
cli
inc
mov
pop
movsl
jmp
add
add
add
lock
jg
in
and
sbb
jb
out
add
add
add
push
jno
pop
push
pusha
adc
clc
push
pop
outsb
xor
xor
push
notb
not
pop
xchg
stc
dec
and
aam
push
and
cwtl
cmp
stc
jl
mov
add
lea
mov
xor
sub
test
imul
mov
rcll
in
loopne
test
stos
xchg
ja
jg
imul
fsubrs
rolb
test
addr16
xor
js
inc
jp
jg
sahf
in
out
fistpl
repz
je
xchg
push
xor
in
cli
or
add
repz
xchg
rclb
xor
fsubrp
push
fwait
dec
mov
lahf
fsts
repz
or
pop
lahf
sub
aas
out
lods
paddsb
gs
ret
enter
ja
pop
std
inc
add
pop
adc
mov
or
test
sbb
out
xlat
or
dec
xchg
fwait
cwtl
pop
popf
pop
xlat
fistpl
nop
mov
add
add
add
insl
push
jmp
pushf
sbb
adc
xor
mov
fisubl
cmp
dec
jp
mov
adc
mov
shlb
bound
stc
sub
mov
adc
sbb
scas
sbb
jne
cmc
adc
ds
aas
loopne
xchg
xlat
out
std
push
or
scas
leave
sti
ja
push
mov
dec
cli
push
fs
roll
and
pop
out
or
clc
int3
sbb
jecxz
add
jl
cmc
mov
cs
mov
cltd
jp
lods
push
subl
cmp
xor
mov
lcall
fidivl
mov
cmp
pop
stos
pushl
stos
inc
mov
and
cmp
xchg
jmp
xor
bound
mull
rclb
loop
add
negl
mov
and
fimull
ret
jnp
int
movsb
dec
mov
add
mov
dec
js
stc
mov
dec
int
pop
ret
addr16
add
sub
add
add
lahf
arpl
lea
sbb
add
cmp
icebp
cmp
xchg
das
add
popa
movsb
sbbb
popl
or
inc
mov
insb
fisttpll
push
cmpsl
icebp
push
add
mov
push
xchg
leave
sbb
inc
cmc
push
aad
popa
mov
jg
push
pop
imul
iret
push
dec
sbb
adc
or
xlat
pusha
repz
mov
inc
cmp
or
xchg
pusha
sub
in
jb
adcb
mov
sbb
adc
or
cmp
movsl
lods
es
out
int
jnp
sub
push
and
outsb
jae
mov
lcall
stos
subb
mov
les
or
lret
push
imull
sbb
jge
mov
movsl
aaa
adc
xor
jae
cwtl
cmp
sbb
add
add
insl
repz
fwait
jns
jns
adc
xor
add
add
add
jle
fstpt
push
xchg
movsl
enter
xchg
push
lcall
cmpsb
imul
push
xchg
push
aas
cmp
mov
pop
push
popa
mov
lods
mov
push
int
sbb
in
mov
mov
pop
mov
ds
xchg
ja
xchg
mov
fcmovb
into
frstor
jmp
aas
aas
xchg
xlat
pop
out
xchg
jmp
mov
inc
xchg
rorl
daa
mov
movsl
je
outsl
mov
es
fbstp
add
sbb
jge
cld
jl
js
andl
adc
lret
dec
cmp
outsl
xor
imulb
sub
sub
mov
gs
in
xor
in
lods
mov
adc
or
dec
das
aad
jmp
in
clc
std
mov
pop
sub
fs
out
jp
mov
shl
in
inc
push
add
stos
lcall
hlt
lds
add
cmp
jnp
adc
jne
aam
jg
addr16
add
add
add
repnz
out
popf
adc
pop
sbb
mov
ror
in
pop
into
pop
ljmp
mov
xchg
or
int3
mov
push
rorl
mov
xor
daa
jl
rol
push
jno
cwtl
add
ljmp
cmc
gs
and
dec
inc
movl
daa
jge
pop
mov
or
stos
mov
cli
cmp
fwait
pop
out
ss
mov
sahf
dec
aaa
xlat
mov
aaa
or
or
cmp
out
ret
fs
xor
mov
lcall
adc
ret
jecxz
lods
pop
mov
mov
ja
je
xchg
ret
mov
movsb
bound
scas
fmull
mov
shr
shll
nop
adc
push
negl
sbb
pop
fistpl
pop
scas
clc
je
or
cmpsl
mov
cld
lea
pop
cmp
push
xor
mov
fcoml
jnp
inc
and
out
lods
xor
aas
xlat
fistl
das
pusha
mov
addr16
add
add
add
xchg
mov
cs
mov
inc
lcall
fsubl
dec
jmp
add
je
imul
aad
ja
sub
jp
stos
das
xchg
push
imul
adc
xor
mov
push
jbe
add
push
mov
inc
dec
les
xor
mov
insl
leave
mov
sub
ret
xor
fwait
inc
fstps
addr16
aas
inc
push
mov
push
or
xlat
aas
cli
cwtl
fdiv
push
dec
xchg
dec
movsb
mov
cmp
clc
aaa
repz
xor
or
xor
dec
dec
sub
lcall
add
ja
call
sub
mov
addr16
inc
out
das
push
or
xchg
js
adc
scas
xor
stos
adc
jp
xchg
jle
cmp
addr16
rclb
inc
lods
sbb
add
add
jb
scas
decb
fisttps
pop
sahf
adc
in
add
add
add
mov
in
fimuls
lahf
int3
loop
push
and
in
out
icebp
call
mov
cmp
push
les
pop
cltd
xor
push
sbb
aad
add
fidivrs
lods
inc
dec
aaa
int
xchg
cmp
jg
mov
shlb
jnp
idivl
pop
testl
cmpsl
loop
xchg
es
scas
or
push
pushf
dec
fmull
push
mov
cmc
inc
fs
shr
rclb
adc
bound
fs
insl
or
fldt
xor
fdivrs
pop
ret
notl
shl
pop
mov
fildll
inc
cmp
pusha
rcll
jnp
jmp
sbb
lds
mov
xor
lods
pop
mov
push
jl
pop
xor
pop
daa
clc
bswap
clc
fsubrp
mov
add
add
xlat
mov
xchg
jmp
mov
add
add
add
xlat
cltd
sub
xor
fstps
sbb
fsubs
dec
dec
mov
mov
or
adc
push
sub
popf
rcrl
dec
push
and
cmp
cli
mulb
lods
pop
aaa
jb
mov
cmc
mov
sti
mov
cmp
xor
and
ret
out
or
mov
pop
jle
xchg
into
ret
inc
push
mov
mov
mov
shlb
jb
inc
and
and
stos
pop
pop
cwtl
data16
xchg
ds
loop
pusha
push
fisubs
ja
xchg
mov
adc
pusha
push
jns
pusha
scas
push
jp
lods
jecxz
pushf
xchg
out
scas
inc
push
fwait
lahf
cmc
and
cs
push
xchg
pop
out
and
jge
mov
stos
arpl
cmp
sbb
lahf
sbb
insl
out
inc
push
jno
mov
cmp
lcall
add
lods
cmp
lods
aas
mov
scas
mov
out
add
add
add
mov
les
push
xor
push
nop
outsl
xchg
inc
xor
test
lcall
jnp
and
push
imul
rol
aad
lcall
lods
shlb
inc
ficoml
mov
sub
xchg
mov
movsl
xor
mov
sbb
pop
xor
cmp
inc
xchg
clc
into
jno
repz
aas
inc
or
add
les
inc
loop
jo
cmp
jg
addr16
sahf
fisubs
iret
and
xchg
cmp
jg
push
call
pop
int3
push
mov
cmp
pop
pop
das
popa
xor
adc
leave
movsl
pusha
xchg
xor
pop
pop
ret
sub
jnp
in
jecxz
lahf
insl
mov
repz
adc
idiv
mov
pop
out
test
and
cltd
xchg
push
xor
add
mov
pop
loop
fadd
sti
mov
iret
xchg
repz
add
mov
lds
adc
xor
pop
adc
sub
scas
and
xchg
cmc
pop
lcall
mov
in
pop
sbb
push
mov
pop
or
jle
clc
mov
popa
mov
jg
push
lods
add
sbb
adcb
movsb
rclb
push
sub
and
icebp
js
test
xlat
mov
mov
test
xchg
outsb
xchg
dec
mov
mov
sbb
adc
dec
jge
sbb
pop
jne
rcrb
into
jge
daa
jb
sti
scas
enter
lock
lea
cmpsl
cmpsl
into
pop
loope
into
add
std
sbb
sub
and
enter
loop
jae
dec
adc
int
aam
aam
jp
andb
les
test
bound
mov
movsl
ljmp
add
push
cmp
adc
neg
jge
xchg
jns
gs
outsl
addr16
add
add
add
pop
mov
and
mov
pop
push
cmp
rcrb
and
sbb
ss
adc
pusha
add
or
mov
int
inc
xchg
xchg
cltd
fnsave
test
mov
push
int3
mov
imul
inc
into
xchg
mov
arpl
icebp
mov
and
jne
mov
xor
adc
push
xchg
pop
or
fsubs
or
pop
sbb
rorl
int3
jmp
xlat
sbb
xchg
icebp
inc
add
fwait
sbb
mov
lcall
mov
pop
jmp
jno
lret
mov
icebp
ss
inc
leave
lcall
sub
cmp
fs
mov
ficompl
sbb
shr
push
icebp
lds
in
adc
pop
or
fisttps
bound
adc
push
jp
popf
inc
adc
sub
jl
popa
lret
push
mov
pop
cmp
outsl
jg
jg
sub
fisubrl
lea
repnz
add
add
add
std
shll
repz
or
addr16
xor
dec
jmp
jmp
ret
inc
dec
push
leave
push
inc
pusha
sub
xor
mov
pop
sbb
std
jnp
cmp
mov
in
ss
loop
fisttpll
mov
or
mov
lret
mov
dec
push
cli
ljmp
mov
pop
sbb
jb
xchg
inc
pop
in
outsb
push
nop
scas
in
mov
xchg
ret
stc
sub
adc
lcall
dec
mov
mov
movsb
in
add
xor
into
jbe
or
sti
es
bound
mov
pop
fdivr
aas
sbb
and
push
lret
dec
leave
jmp
jne,pt
lock
adc
pop
bound
dec
jmp
mov
push
repnz
inc
repz
lahf
xchg
outsb
or
sahf
adc
test
add
ret
ja
and
aaa
divl
gs
add
add
add
add
cmp
stos
icebp
leave
sbb
test
lcall
movsl
pop
sub
xchg
push
mov
fldl
lock
inc
cmp
call
cmp
ret
and
orl
daa
cmp
pop
push
mov
push
adc
movsb
inc
add
or
cmc
jmp
xlat
sbb
ljmp
repz
inc
iret
jl
int
insl
cmp
pop
xchg
add
in
test
test
push
mov
jle
pop
sbb
out
mov
pop
cld
cmp
and
mov
ja
sub
packssdw
sub
loop
pmulhuw
pop
addl
push
inc
dec
jmp
inc
jg
xchg
jmp
sub
lods
ljmpw
sbb
dec
mov
sbb
fsubrs
and
mov
mov
hlt
in
xchg
jecxz
jmp
mov
ds
pop
addr16
add
add
add
test
mov
adc
repnz
rol
clc
xchg
ret
popf
leave
lret
cmp
pop
shr
lret
or
out
mov
xchg
dec
rclb
dec
lods
mov
mov
loope
ret
mov
ret
cmpsb
xor
lret
dec
out
cmp
push
adc
out
out
inc
lock
inc
int3
mov
lods
sub
in
hlt
sbb
sbb
xor
or
cmp
mov
push
push
push
mov
and
jne
push
sub
push
jge
out
fnstenv
repnz
shll
out
repnz
xchg
or
les
xchg
js
xchg
push
ss
mov
rcr
sub
dec
mov
mov
or
insb
ja
out
jle
dec
cmpsl
push
lock
sub
fldl
xchg
push
mov
cmp
jmp
push
add
sub
jle
jne
pusha
popf
pop
andl
cmc
add
add
add
cli
dec
or
js
ret
dec
int3
insl
ljmp
fs
pop
pop
in
stc
dec
or
lock
xor
dec
dec
jo
jno
pop
xchg
jno
pusha
nop
fwait
imul
jne
repnz
pop
testl
dec
shlb
mov
and
mov
push
cltd
nop
sub
and
xchg
xchg
xor
pop
cmpsb
push
xor
mov
sbb
adc
dec
into
shll
mov
les
mov
mov
scas
lahf
scas
sbb
xchg
jge
xchg
add
ljmp
gs
sub
outsb
test
fildll
data16
dec
fwait
sbb
ret
ret
lock
pop
dec
into
xchg
push
fcoms
push
cmp
adc
pusha
sub
mov
rcrb
push
rol
mov
pop
in
xor
add
imulb
mul
xor
pusha
testb
add
add
sbb
jnp
push
addr16
and
dec
xor
cmp
out
je
jg
sub
jmp
inc
flds
add
dec
popa
cld
xorb
cmp
sti
ror
pop
fisubs
lock
mov
sub
pop
test
xchg
stos
mov
add
cmp
fldcw
adc
and
shrb
cmp
or
popa
popf
ljmp
jge
inc
xor
pop
es
lods
mov
jae
cmpsl
inc
js
xchg
insl
xchg
jb
mov
call
mov
and
xchg
sti
imul
out
mulb
push
test
lea
sub
add
data16
repz
ja
xchg
sti
orl
ficoml
and
cmpsl
aad
adc
push
aas
and
out
mov
pop
ljmp
stos
inc
ljmp
cmp
ret
add
xor
jb
jae
insl
sub
add
add
add
add
push
inc
mov
out
push
mov
or
pop
les
mov
push
push
addl
enter
sbb
filds
fsubrl
cli
cmpsb
dec
mov
mov
fldl
push
mov
pop
test
jno
andl
add
fdivrs
ljmp
jne
push
and
insb
jmp
into
dec
std
sahf
push
wbinvd
pmullw
lea
aam
lock
mov
dec
ds
lods
mov
xor
pop
neg
pop
cmc
call
jbe
pop
adc
shl
mov
pop
xorb
aas
mov
repnz
aad
jg
mov
fisubrs
mov
lret
cmp
push
pop
lahf
jbe
inc
jmp
inc
movsb
data16
scas
rolb
adc
lods
rclb
and
cld
repnz
add
adc
int
in
idivl
js
mov
sahf
std
xor
addr16
add
add
add
hlt
les
movsb
push
ret
sub
mov
pop
inc
add
shrl
xchg
cmp
popa
or
scas
sbb
daa
aad
mov
out
xchg
outsl
or
fdivrl
test
popf
aaa
adc
pop
sbb
pop
mov
enter
lds
dec
rcrb
cs
push
cmpl
rcrl
push
rcll
in
xchg
jle
aam
mov
xchg
pop
je
pop
inc
dec
rclb
cmc
outsl
addr16
loopne
mov
and
repnz
int
call
addr16
sub
repz
cmp
loopne
adc
fldz
mov
and
jg
jg
xor
push
mov
jmp
pushf
and
int3
mov
pop
mov
cmpsb
mov
incb
sahf
rcl
xor
jbe
call
or
jae
inc
pop
es
inc
cli
aas
into
lret
int3
adc
cmp
add
add
sbb
cmp
out
sti
lods
shl
daa
pop
out
xchg
icebp
repnz
cmp
xchg
add
mov
and
ret
lods
xchg
mov
mov
stos
xchg
or
ja
ss
mov
jne
sub
xchg
mov
dec
test
shlb
sbb
pop
sbb
mul
stos
mov
mov
fyl2xp1
adc
shrb
fisttpll
inc
add
fiaddl
loopne
push
sub
xchg
fsubrs
loope
out
aas
inc
push
xlat
addr16
cmp
cmp
cli
mov
fsubrs
xchg
cmc
xchg
pop
and
ficompl
fisubl
pop
arpl
mov
sbb
and
dec
jno
xchg
dec
cmp
sbb
cmp
pop
inc
mov
mov
es
inc
pushf
inc
lret
das
fsts
add
cmc
xchg
and
out
mov
lcall
ja
rclb
addr16
add
add
add
clc
xor
mov
pop
daa
push
xor
sahf
sti
pop
test
xor
ss
and
and
xor
cmpsb
adc
lret
xchg
xor
sahf
jnp
pushf
data16
rcl
add
jnp
popf
ret
shrb
and
inc
cwtl
loope
dec
sub
add
dec
lock
addr16
jg
scas
mov
push
into
mov
push
leave
and
jge
cltd
js
mov
mov
pusha
add
and
jo
jae
inc
mov
bnd
imul
hlt
gs
mov
aam
test
xchg
mov
xor
test
lahf
fwait
push
mov
out
mov
aam
xchg
int3
and
mov
ds
js
pop
mov
test
push
and
adc
xchg
bound
dec
sbbb
jp
add
adc
cmp
xlat
mov
add
add
jae
cltd
dec
mov
jno
push
in
mov
add
add
add
outsl
pop
aad
pop
sbb
out
out
into
pop
stos
cs
mov
dec
in
cmc
loope
cs
enter
mov
lea
ja
sub
dec
fld
sar
jmp
cld
int3
mov
mov
and
lahf
mov
sbb
bound
cltd
cmc
mov
into
adc
jle
dec
and
clc
fwait
ja
pop
push
cmp
mov
mov
rcrb
dec
iret
lcall
shl
jb
and
popf
mov
cmp
add
test
add
mov
mov
mov
jge
sub
mov
mov
pop
fisttps
sub
repz
adc
cmp
in
cmpsl
cmp
adc
aas
das
jle
xchg
aaa
push
orl
add
add
inc
lods
iret
shrl
cmpb
clc
inc
push
sbb
leave
mov
pop
sahf
push
inc
fimuls
sbb
lds
add
add
push
into
nop
out
cwtl
jle
push
sub
dec
mov
cld
add
add
add
dec
imul
inc
pop
cmpsl
pop
bound
mov
push
aaa
in
mov
mov
int3
into
push
push
xchg
pop
inc
filds
jge
xlat
cmpsl
xchg
out
mov
sbbb
mov
lea
fsubrs
mov
out
jge
mov
xchg
fcomps
loop
mov
jl
loope
gs
jnp
push
sub
xor
test
iret
and
daa
push
loope
test
push
fxch
stos
nop
pop
lock
movsb
rcrl
dec
mov
shl
pop
cltd
test
inc
ss
enter
dec
pop
sub
adc
xchg
test
or
dec
fcmovb
cmp
imul
adc
dec
rcrl
test
xchg
dec
cmc
lahf
sub
and
sub
or
xchg
xor
cmpsb
mov
jne
xchg
popa
push
pop
out
jbe
fwait
rcrb
mov
jno
test
jg
push
pop
push
mov
addr16
add
add
add
int3
and
test
mov
pop
push
add
add
in
in
rcll
lret
adc
int
lret
clc
add
pop
adc
orb
pop
jae
out
inc
pop
inc
pop
mov
je
push
cmovp
mov
shl
cmp
stos
clc
loopne
pop
jo
or
cmp
adcl
adc
dec
push
add
xor
sbb
cmp
mov
mov
cmp
sbb
pop
jne
in
xchg
in
insb
jl
jg
pop
in
pusha
xchg
mov
scas
push
hlt
loope
xor
mov
popf
jae
sub
movsl
or
adc
stos
or
fistpl
loop
js
pop
mov
js
sbb
jne
cwtl
inc
mov
aam
iret
in
lds
xor
and
or
mov
loop
dec
xor
add
add
movsb
push
in
cmc
jne
sbb
js
movsb
push
jo
incb
add
add
add
lods
ficomps
icebp
inc
dec
sub
cmpsb
jp
sub
lods
or
adc
cld
filds
adcl
push
arpl
push
sub
adc
dec
inc
dec
mov
jnp
lcall
shrb
lret
gs
fwait
stos
subb
adc
test
leave
scas
mov
subl
cmc
lods
aam
xor
ss
sub
stc
adc
lds
cwtl
jae
cltd
push
add
jmp
int
pusha
jmp
mov
ja
pushf
jo
sti
outsl
mov
icebp
and
and
fstpl
mov
push
nop
lods
dec
jmp
cmc
sbb
mov
daa
les
cli
sub
cmpsb
outsb
sahf
or
dec
cmc
in
push
pushf
out
hlt
sti
daa
sub
in
mov
sub
push
loope
and
insl
subl
mov
mov
sbb
shlb
aas
out
int3
mov
xchg
mov
adc
add
add
mov
mov
ret
mov
mov
push
and
int3
loopne
xor
or
out
je
nop
cmpsb
fadds
daa
ljmp
rcr
xchg
adc
mov
orb
push
xor
sbb
test
pop
sahf
and
in
dec
or
mov
test
sbb
ret
icebp
pop
popw
lret
cmp
fiadds
dec
adc
xchg
sahf
adc
push
mov
in
mov
xlat
push
pop
inc
cmp
ret
dec
xor
ss
push
push
gs
out
pop
xchg
jg
je
lods
aad
int3
and
mov
inc
pop
jne
rolb
inc
jbe
outsl
adc
out
or
push
aam
lret
ds
inc
jno
aad
mov
movsb
xchg
mov
xor
jecxz
loopne
or
jo
fisubl
xor
loopne
or
out
std
enter
insb
pop
jnp
es
and
cli
mov
cld
or
mov
and
sbb
add
add
add
add
cltd
pop
mov
mov
es
sbb
imul
test
into
jns
outsb
mov
cmp
inc
int3
aaa
mov
pop
loop
sub
imul
and
push
loop
imul
ret
mov
ss
and
mov
inc
cmpsl
cli
lds
jo
sbbl
xor
and
inc
mov
sub
jg
leave
add
data16
sub
jp
test
mov
xlat
add
xchg
jmp
jg
aam
aam
cmp
lods
sub
incl
das
jae
inc
sahf
jbe
adc
rcl
rorl
sbb
inc
cs
notl
movb
dec
adc
setne
adc
popf
mov
movl
xchg
lahf
stos
lods
and
push
pop
mov
mov
aaa
stos
xor
add
add
ret
bnd
cmc
inc
stos
repz
add
add
add
add
xor
test
dec
inc
lods
ss
pushf
leave
adc
adcb
dec
out
sbb
int
faddp
arpl
insl
cmp
movsl
inc
pop
cmp
stc
jo
pop
mov
insl
pop
jbe
pop
pop
fistpl
dec
stos
jbe
push
or
and
adc
movl
scas
loope
cli
xchg
dec
lods
sbb
arpl
push
inc
rorl
mov
inc
adc
mul
idivl
imul
or
push
pop
pop
push
lret
mov
mov
icebp
add
fdivl
jp
pop
das
add
cmc
fs
mov
shlb
pushf
push
cmpsl
jns
push
sub
insl
sbb
hlt
pop
jmp
jb
jg
mov
sarb
outsb
out
adc
adc
aam
pop
imul
and
add
add
std
aaa
mov
shll
fsubs
add
add
add
enter
loop
movsb
ja
fmull
out
adc
mov
mov
inc
dec
aaa
or
xchg
test
jecxz
dec
jae
in
jae
mov
aaa
inc
dec
mov
in
in
in
cmp
inc
mov
fdivs
mov
dec
loope
adc
xor
jg
pop
pop
test
roll
pop
fildl
adc
adc
inc
sbb
sbb
add
and
pop
sub
xchg
cmp
int
ficoms
repnz
mov
les
scas
xchg
ficomps
pusha
subl
lods
jecxz
xor
dec
push
add
outsl
sti
mov
fidivrs
add
jle
jno
push
cmp
sbb
loop
rcr
fidivrs
insl
fwait
dec
decl
add
jecxz
scas
shr
xor
jno
movsl
inc
mov
xchg
mov
jne
sbb
cli
in
movsl
and
insl
aam
mov
scas
add
jae
pop
add
add
add
add
sti
std
aaa
imul
push
mulb
add
dec
push
mov
mov
or
dec
add
add
add
movl
xor
test
enter
mov
hlt
test
pushf
enter
movl
inc
mov
dec
mov
call
mov
call
pop
ljmp
fwait
mov
xor
add
mov
mov
xor
lret
ret
add
enter
dec
sbb
add
decl
test
dec
incl
inc
enter
ljmp
cld
decl
push
mov
and
pop
inc
mov
push
pop
movsb
dec
add
jne
lea
fs
decl
mov
test
add
xor
add
mov
or
inc
mov
bound
inc
cmp
lea
and
incl
mov
cld
add
xchg
sar
inc
incl
mov
xor
add
nop
inc
add
mov
add
add
incl
sbb
jne
mov
mov
movl
incl
fisttpll
test
inc
aas
inc
lea
inc
mov
mov
cld
loop
inc
out
fisttps
jecxz
in
incl
out
aas
call
add
add
test
wrmsr
ja
add
mov
add
add
mov
addl
mov
mov
dec
nop
mov
fadds
add
inc
push
call
mov
mov
cld
mov
add
cmp
mov
mov
push
nop
incl
cld
add
mov
cld
push
nop
inc
add
add
ljmp
movntq
movl
test
jmp
int
sub
add
filds
cmp
je
movl
jne
mov
cld
jle
dec
mov
mov
add
mov
test
add
add
add
xor
inc
add
mov
add
fmuls
cld
call
decl
add
push
es
inc
mov
decl
mov
call
sarb
sub
add
mov
inc
push
mov
shrb
ret
add
mov
cld
test
inc
xor
push
mov
inc
enter
mov
or
add
add
add
incl
cld
mov
mov
xor
and
sub
mov
test
add
xor
add
cmp
jne
mov
pushf
add
add
or
fwait
jne
xor
incl
add
orb
add
orl
gs
je
mov
cld
sarb
pcmpeqw
xor
lea
add
cmp
mov
test
clc
pushl
lea
int3
inc
call
jne
xor
jmp
mov
mov
incl
pushl
inc
mov
jmp
mov
mov
cld
clc
ret
test
pop
xchg
add
inc
decl
sub
add
push
jbe
mov
or
inc
enter
inc
mov
int3
add
xor
rorb
inc
add
fadd
rolb
inc
fmull
inc
test
fwait
clc
xor
inc
xor
pushf
mov
test
clc
dec
inc
mov
xchg
inc
inc
aas
mov
test
clc
pushf
inc
decl
push
movb
add
mov
mov
les
adc
dec
add
mov
lock
clc
inc
add
jge
xor
cmp
paddb
mov
test
dec
test
pop
xor
add
add
psraw
sub
mov
lock
shl
rolb
movl
jmp
pushf
inc
mov
xor
add
mov
enter
xor
add
sub
cmp
rorl
test
test
cmp
pushf
xor
add
inc
dec
mov
test
cmp
fdivl
dec
xor
add
add
dec
test
out
rolb
add
dec
mov
mov
ret
xor
add
add
dec
inc
mov
ror
add
scas
mov
xor
xor
add
mov
clc
rol
mov
mov
dec
jbe
mov
call
rdpmc
roll
add
inc
rorb
jmp
inc
inc
mov
clc
test
clc
lret
inc
into
mov
clc
enter
sub
ret
mov
addr16
clc
add
loopne
dec
into
mov
or
inc
push
mov
in
cmp
ja
mov
inc
fwait
mov
clc
mov
xlat
lret
inc
into
mov
in
scas
lret
mov
mov
sub
mov
mov
clc
loopne
push
lret
mov
adc
jb
add
in
sub
cmp
mov
mov
add
mov
in
into
dec
xor
roll
xor
sub
add
mov
inc
xor
add
inc
xor
sub
test
clc
enter
incl
jmp
mov
inc
mov
fwait
lret
xor
mov
lea
xor
add
inc
dec
mov
gs
inc
sub
inc
xor
push
mov
add
inc
decl
add
inc
mov
fwait
add
add
pushl
int3
xor
add
mov
call
mov
add
mov
in
ret
iret
enter
in
or
adc
push
dec
inc
mov
jb
mov
cld
scas
orb
movb
push
push
xor
mov
call
mov
in
jge
mov
int3
add
xor
dec
pushf
xor
add
mov
test
fwait
add
jmp
mov
add
mov
jmp
mov
rolb
add
xor
rorl
jb
add
clc
inc
jb
mov
xor
shrb
clc
add
xor
inc
adc
inc
test
mov
cld
orl
jbe
mov
dec
mov
mov
mov
or
dec
int3
xor
add
mov
xor
add
adcb
add
inc
mov
xor
dec
mov
hlt
add
push
inc
dec
call
in
lret
mov
adc
inc
and
cmpl
cmpb
mov
cmp
jne
mov
mov
rcrb
or
dec
inc
add
or
test
addb
mov
cmp
je
incl
mov
into
decl
push
lret
inc
into
decl
push
into
call
lret
add
add
mov
clc
inc
inc
mov
push
push
add
mov
cld
mov
into
rorb
xor
jne
call
mov
mov
call
add
rolb
add
add
inc
push
cmp
pushf
movl
test
addb
jmp
in
or
xor
hlt
mov
xor
add
inc
adc
pushf
inc
add
movsl
test
clc
incl
cmp
pushf
inc
push
movsb
jne
push
clc
test
lcall
test
cmp
pushf
add
add
inc
add
enter
add
add
out
sbb
dec
mov
sub
mov
add
cmp
or
incl
mov
mov
lret
inc
into
mov
int3
scas
push
mov
call
sub
mov
mov
xor
pushf
mov
faddl
test
mov
in
ret
add
add
mov
in
ret
mov
in
inc
rol
sar
or
add
add
test
clc
lret
inc
into
cmp
mov
inc
cmp
ja
mov
mov
clc
mov
mov
in
lret
ret
into
mov
scas
cmp
add
jmp
mov
mov
inc
enter
xor
add
cmp
shufps
add
dec
sub
cmp
ja
mov
lods
mov
inc
dec
mov
lret
rol
or
inc
scas
xor
add
add
inc
mov
inc
lret
mov
clc
lret
scas
ret
mov
hlt
push
scas
sub
mov
add
mov
movsb
inc
dec
xor
pushf
xor
rdmsr
rcrl
sar
rolb
xor
jmp
mov
xor
mov
rolb
test
fwait
shll
mov
xor
add
mov
add
inc
xor
rdpmc
roll
loopne
push
in
mov
adc
jb
add
jmp
mov
test
dec
dec
xor
add
dec
mov
dec
in
xor
xor
add
jbe
mov
test
dec
mov
loopne
inc
add
rol
scas
mov
mov
hlt
dec
inc
mov
loopne
lret
test
clc
scas
inc
mov
fdiv
roll
fwait
xor
pushf
cmp
inc
mov
inc
dec
xor
add
loopne
dec
rorl
add
lock
ret
xor
mov
rolb
xor
call
enter
mov
fmul
push
dec
xor
ret
xor
dec
jne
mov
cld
loopne
push
add
incl
incl
mov
lock
lret
add
xor
inc
scas
mov
shl
inc
decl
call
ud0
adc
inc
xor
lock
add
ud0
sbb
xor
sub
push
add
mov
cld
inc
jmp
mov
mov
mov
clc
scas
icebp
mov
lret
or
dec
pop
or
jb
add
inc
mov
fadd
ret
add
int
sub
add
inc
inc
mov
cld
scas
loopne
mov
mov
clc
push
pushl
movb
int3
or
lea
insb
incl
push
movb
leave
les
in
call
inc
cld
mov
cld
xor
pop
mov
clc
test
je
mov
cld
add
add
fiaddl
movb
push
push
mov
pop
lea
ret
mov
xchg
mov
push
clc
jne
mov
push
or
cmp
pop
or
inc
leave
ljmp
leave
in
incl
fimull
inc
nop
loopne
ret
mov
add
push
pushl
mov
or
pushl
cmp
pop
ret
or
inc
push
jle
inc
inc
int
inc
sub
add
lret
adc
xchg
push
mov
rcll
jne
mov
roll
divl
cmp
pop
decb
in
inc
sub
inc
push
add
push
add
leave
adcl
add
inc
rorl
add
add
jmp
jne
mov
or
inc
stc
in
ss
aas
out
inc
mov
lock
and
add
aad
add
clts
call
hlt
iret
jge
roll
jmp
out
mov
pop
push
cmp
sar
incl
inc
loopne
push
push
push
add
add
push
add
sub
jne
lods
mov
dec
out
into
push
loopne
shrb
andl
roll
mov
cmpl
mov
push
push
push
sub
push
adc
insl
mov
add
rorb
add
add
roll
pop
or
cli
add
lea
mov
dec
inc
shrb
and
jne
pop
mov
call
and
push
add
dec
mov
jmp
mov
call
shrl
lock
adc
out
cmp
pop
or
push
cld
mov
and
xorb
add
mov
psubsw
add
rcr
mov
and
add
call
add
mov
aam
or
jne
mov
aam
dec
jne
cmp
jb
jmp
mov
int3
dec
orl
mov
cmp
jb
pop
push
cli
pop
mov
jb
addl
mov
int3
add
jmp
mov
call
add
pop
or
pop
inc
xor
push
mov
call
int3
sbb
inc
add
call
or
cmp
mov
jb
mov
push
add
add
add
int3
jne
movsbl
add
add
mov
add
add
mov
sub
jb
add
jge
add
addl
jne
je
mov
rorb
orl
mov
mov
fadds
inc
pop
lea
push
out
add
add
mov
jb
add
push
call
add
jae
icebp
inc
mov
int3
out
loopne
sub
push
pop
push
jl
add
xor
mov
rcrb
rorl
inc
shr
orl
push
pop
add
jmp
mov
fdivrl
push
pop
call
mov
in
rolb
call
pop
enter
repz
xorl
je
or
jne
jmp
pushl
push
pop
cmpl
jge
mov
sub
pop
inc
mov
sub
lods
add
enter
repz
stc
jge
jnp
call
fadd
dec
insb
stc
cmp
push
mov
jne
mov
mov
add
sub
and
cmp
sbb
pop
call
fsubr
sti
add
add
add
roll
mov
clc
jne
mov
loopne
loopne
lods
int3
inc
mov
add
sub
shrb
add
call
add
dec
insl
in
lea
inc
inc
sub
orl
and
rorl
or
mov
stos
adc
inc
add
jne
mov
cmp
sub
sar
ljmp
sub
mov
mov
and
jne
sub
sbb
dec
push
add
ret
mov
leave
sub
ret
pop
push
rolb
addl
jb
ret
in
jecxz
push
xchg
jne
cmp
jne
mov
rorl
mov
pop
nop
mov
les
add
inc
mov
mov
cmp
or
inc
inc
xor
cld
add
add
add
sbb
dec
je
mov
add
and
jae
mov
incl
push
shr
in
push
add
add
inc
mov
add
jmp
pushf
dec
mov
fsts
movb
sub
inc
add
mov
insb
movl
dec
jmp
inc
fnstcw
testb
rolb
lea
sbb
inc
add
add
mov
fdivl
mov
add
add
or
mov
add
add
push
movb
or
dec
lea
xor
movsl
repz
add
prefetcht0
xor
mov
pop
mov
or
cmpb
movb
add
mov
xorl
mov
sbb
inc
xrelease
clc
xor
lea
mov
fadd
dec
lds
out
inc
lea
enter
push
leave
xor
add
mov
mov
psubusw
add
addb
add
in
inc
inc
mov
addb
mov
sub
insl
inc
add
testb
movl
dec
pop
add
mov
in
incl
out
inc
mov
push
jmp
add
out
insb
inc
jmp
addl
mov
outsb
inc
mov
mov
fcos
mov
in
jb
decl
mov
fdivr
out
rclb
mov
std
cmp
jne
mov
in
outsb
pushf
add
incl
incl
jae
add
incl
mov
jl
add
cld
dec
addb
data16
mov
mov
inc
mov
incw
data16
inc
jge
add
lea
add
ljmpw
pushl
lea
shlb
test
incl
test
inc
push
xor
add
ret
mov
push
movl
add
pushl
incl
mov
or
jne
addl
mov
add
mov
orl
push
mov
ret
adcb
add
mov
ret
or
lea
loop
xchg
aam
out
mov
inc
dec
pop
mov
repnz
orb
repnz
mov
jmp
incl
addl
mov
cmpsb
pop
inc
data16
inc
xor
dec
push
inc
jge
mov
mov
add
add
test
incw
mov
call
mov
clc
ret
rol
mov
mov
pushf
pop
ljmp
add
inc
test
push
mov
mov
push
add
decl
add
cmp
decl
jmp
push
hlt
data16
dec
ret
mov
lea
jne
decl
decb
mov
push
jmp
inc
sbb
movsb
inc
test
inc
decl
test
mov
lods
push
inc
jne
decl
mov
sbb
mov
mov
movswl
xor
add
xor
xor
decb
mov
pushf
inc
decl
sar
decl
incl
addl
xlat
dec
add
mov
lea
call
inc
rdpmc
add
push
lea
js
add
push
lea
fmuls
jmp
dec
mov
mov
call
dec
inc
mov
push
into
test
call
lea
jmp
inc
jnp
add
incw
mov
inc
add
mov
decl
add
data16
inc
dec
test
cmp
add
mov
incl
mov
ljmp
push
incl
call
decl
mov
inc
mov
mov
add
inc
mov
mov
pop
test
clc
lea
cmp
push
lea
mov
hlt
lahf
push
mov
xor
add
mov
mov
rolb
mov
nop
push
add
mov
in
jge
test
jne
sbb
push
inc
call
add
mov
cmp
ud0
test
dec
incl
decl
dec
cld
test
icebp
add
test
incb
jne
mov
cld
xor
push
xor
add
add
add
add
or
jmp
nop
test
xor
mov
mov
add
decl
add
decl
movsl
add
add
rdpmc
addb
mov
add
decl
decl
push
jne
mov
cld
add
push
incl
add
add
mov
sbb
leave
test
jne
call
xor
mov
enter
mov
mov
cld
add
inc
dec
mov
inc
decl
add
xchg
ret
add
add
mov
lea
add
mov
inc
rdpmc
jne
add
inc
clc
add
mov
mov
in
add
test
incb
add
cmp
pushl
add
test
je
mov
sbb
test
js
add
sub
mov
add
dec
push
mov
mov
mov
sbb
or
dec
incl
push
add
mov
orl
add
push
cmp
inc
mov
in
add
xor
add
ljmp
decl
call
mov
lock
mov
mov
mov
mov
addl
mov
inc
push
ljmp
mov
clc
cmp
jne
mov
add
int3
inc
cmp
add
adc
add
mov
cmp
jmp
mov
inc
or
decl
jne
mov
mov
in
xchg
jmp
adc
inc
mov
push
sub
push
test
inc
dec
mov
movl
add
add
mov
push
roll
bound
xor
add
mov
test
call
loop
jnp
mov
cmp
cld
shr
add
push
lea
mov
cwtl
cli
add
or
inc
dec
incl
add
call
add
push
adc
mov
mov
addl
incl
inc
stos
mov
add
mov
cmp
movsb
mov
cld
jae
add
clc
add
mov
clc
pop
inc
xor
pushl
mov
jae
mov
sub
add
mov
mov
ret
mov
ret
mov
add
mov
add
incl
lea
hlt
sar
test
inc
add
testb
push
add
add
add
add
add
mov
mov
cld
fidivl
mov
xorb
add
sbb
jne
mov
sbb
mov
add
ret
dec
or
dec
cld
cmovne
add
seto
inc
adc
mov
cmp
xor
gs
je
push
sarb
mov
push
cmp
add
dec
mov
in
adc
pop
inc
leave
or
gs
add
into
in
enter
push
xorl
or
jnp
test
add
mov
ltr
decl
clc
out
add
cmp
jge
jb
je
pop
push
mov
in
roll
orl
cmpl
hlt
mov
push
jns
lock
ror
test
dec
rcpps
mov
inc
test
je
mov
adcl
and
jp
rcpps
add
sbb
add
je
cmp
js
add
jns
vmread
add
adc
jge
mov
add
or
push
push
mov
add
pop
add
mov
inc
pop
xorl
add
push
clc
mov
jp
add
divl
test
je
mov
or
decb
jbe
mov
add
cmp
add
je
mov
mov
hlt
orb
jb
jmp
xor
pop
pop
pop
ret
ret
mov
xorl
pushf
xor
rdmsr
test
dec
ret
mov
pop
dec
jne
xor
inc
dec
jbe
inc
pop
add
push
dec
push
mov
and
jo
mov
sbb
mov
nop
or
jne
cmp
cld
xor
add
cmp
js
jae
xor
jmp
mov
fdecstp
test
add
add
mov
cmp
adc
jge
mov
jl
clc
dec
jge
mov
jb
mov
mov
xor
add
mov
inc
pop
jge
cmp
mov
imul
fimuls
fists
in
jne
mov
imul
fdivrp
filds
test
inc
mov
mov
adc
rcll
mov
fiadds
mov
mov
xor
mov
xlat
into
ffreep
lret
iret
dec
inc
mov
fmull
dec
jnp
add
mov
inc
dec
lea
add
jb
add
inc
imul
cld
clc
mov
incl
or
sbb
lret
add
dec
add
enter
inc
pop
decl
add
add
mov
xor
or
pop
cltd
push
clc
mov
xor
add
cmp
hlt
cmp
or
mov
loopne
mov
cld
pushf
pop
fwait
mov
lock
adc
orb
xor
dec
mov
iret
inc
jne
mov
cmp
je
add
or
dec
inc
mov
cld
add
cmp
mov
or
mov
test
inc
xor
mov
jne
mov
fcomps
add
incl
cld
add
mov
cld
inc
fidivrs
fbstp
mov
adc
fadd
add
mov
inc
mov
loopne
sbb
sbb
pushf
add
mov
cwtl
inc
inc
jne
mov
clc
add
mov
or
inc
lea
add
inc
rorl
add
shufps
jmp
xor
hlt
mov
fadds
xor
add
cmp
pmuludq
jmp
mov
or
inc
mov
jne
mov
clc
add
xor
jne
pushl
add
mov
cld
add
xor
mov
adc
sub
lea
add
jb
add
inc
add
inc
mov
or
mov
in
scas
inc
mov
in
add
mov
dec
mov
mov
cld
push
dec
add
mov
in
cmp
mov
mov
mov
xor
cmpl
xor
jmp
add
xor
add
cmp
mov
mov
adc
jmp
mov
cld
mov
push
jne
dec
or
push
inc
in
add
or
dec
cld
mov
xorl
pushf
decl
mov
mov
xor
mov
inc
mov
mov
call
add
mov
or
jo
push
xor
pmulhuw
test
mov
mov
xor
xor
xor
add
inc
mov
movl
sub
lock
mov
mov
or
ja
mov
cld
cli
mov
cmp
bswap
mov
mov
clc
repnz
push
xor
cmp
pushf
pop
jmp
mov
xor
lea
xor
pushf
out
neg
insl
test
clc
pop
inc
or
xor
add
jne
mov
in
push
xor
add
cmp
add
mov
mov
add
mov
mov
fwait
pushf
xor
jne
mov
icebp
icebp
shl
mov
push
jne
mov
in
jmp
add
mov
or
inc
jne
mov
ret
or
jge
sub
xor
add
mov
clc
negl
xor
cmp
repz
xor
add
mov
mov
cld
lock
test
clc
add
fdivrp
test
jnp
add
jae
sub
shll
leave
call
in
in
add
mov
in
test
mov
xor
pushf
jnp
xor
loopne
jne
mov
add
xor
mov
cld
jb
add
jne
mov
jge
mov
lock
xor
mov
lock
jge
xor
dec
mov
loopne
jge
add
icebp
add
dec
hlt
xor
mov
in
jge
mov
dec
push
xor
inc
hlt
xor
mov
repnz
cmp
test
fistps
inc
mov
add
inc
test
add
add
ret
jnp
inc
inc
xor
fdivl
test
push
add
cmp
setnp
mov
call
or
inc
mov
and
lock
movl
mov
clc
xor
mov
inc
mov
mov
mov
mov
hlt
inc
rorl
mov
push
mov
in
jne
mov
addl
clc
mov
add
rolw
mov
jne
incl
inc
push
test
sub
add
and
add
mov
and
cmp
add
inc
push
add
push
enterw
mov
add
add
str
lea
sbb
dec
cmp
inc
push
mov
push
add
mov
inc
add
add
mov
loopne
dec
mov
cld
push
xchg
add
add
or
dec
loopne
xchg
push
add
dec
jmp
mov
sbb
inc
xor
add
push
divl
and
add
jno
incl
inc
push
push
mov
mov
push
inc
enter
push
call
pop
push
mov
mov
push
jo
incl
or
call
fmull
mov
mov
adc
dec
xor
mov
mov
mov
push
lret
movb
inc
movntps
lret
into
dec
lret
mov
mov
fdivl
mov
push
mov
sbb
dec
sarl
push
jne
mov
lea
call
sbb
add
push
mov
push
mov
test
xadd
pop
add
mov
or
push
add
add
and
call
add
mov
add
xor
add
inc
je
push
decb
add
or
inc
add
data16
subl
add
add
enter
int3
loopne
rolb
lea
data16
add
sbb
inc
cmp
add
xor
sub
mov
or
ror
dec
inc
cmp
cld
or
ret
lret
dec
mov
loopne
cmp
inc
daa
loopne
in
add
add
push
inc
xor
add
push
push
inc
in
push
inc
sbb
rorb
addb
ljmp
xor
mov
fmuls
add
lea
add
popl
add
push
incw
mov
add
xor
test
inc
mov
add
or
or
inc
mov
jne
mov
add
add
adc
adc
push
mov
mov
inc
mov
or
push
jne
call
inc
sarb
in
add
add
and
fs
incl
jle
leave
scas
inc
add
orb
call
shr
xchg
add
add
dec
and
push
decl
mov
mov
lea
mov
add
mov
push
shlb
inc
in
jno
push
mov
mov
je
mov
sbb
popl
add
add
adc
jmp
sub
jne
mov
in
popl
push
incl
adc
add
call
and
and
inc
test
sldt
xor
pushf
jmp
mov
or
inc
call
mov
loopne
inc
add
mov
add
add
cmp
test
sbbl
jne
call
leave
rcrb
add
add
add
inc
mov
fcom
add
lea
pushl
call
mov
fstps
push
pop
mov
addl
mov
xor
xor
pop
or
inc
push
in
or
movsl
xbegin
clc
adc
divb
or
test
add
add
adc
xchg
test
clc
data16
orl
rolb
mov
mov
push
add
jge
add
jne
mov
jmp
xor
pop
cvtdq2ps
ret
mov
xor
add
push
rdpmc
out
add
mov
ret
sbb
cmp
or
or
pop
inc
add
add
invd
jge
mov
cli
xor
mov
ret
mov
sub
inc
xor
pushf
inc
mov
hlt
test
mov
xor
dec
or
jne
mov
call
inc
mov
add
add
inc
mov
addl
inc
mov
lock
jge
mov
cli
xor
add
test
add
cmp
xadd
test
mov
xor
add
pop
loopne
inc
clc
xor
add
data16
mov
hlt
xor
add
data16
cmp
add
psubq
ltr
add
add
data16
mov
jge
data16
data16
mov
fdivl
data16
mov
mov
pop
or
clc
mov
lock
jge
invd
pop
add
cmp
data16
mov
pop
fbstp
test
add
add
jge
data16
pop
stc
bsf
mov
in
test
mov
call
cmp
add
mov
call
add
mov
jnp
mov
mov
call
mov
data16
xorl
fisttps
cld
jne
xor
mov
sti
repnz
data16
push
xor
mov
fwait
data16
mov
mov
fisttps
or
mov
hlt
mov
add
dec
or
mov
or
mov
fdivrl
xor
pop
lock
lea
icebp
jb
add
jge
mov
fsubr
pop
mov
in
rcrl
jb
add
jge
mov
in
pop
data16
cmp
mov
fdivrl
cmp
mov
mov
lock
mov
or
clc
cmp
je
push
loopne
dec
mov
int
mov
pcmpgtd
add
jmp
mov
lock
rorl
or
jb
add
loopne
jne
data16
mov
data16
add
add
retw
ret
lret
enterw
pop
jne
mov
call
xor
lea
repnz
add
xor
in
xor
movl
clc
add
pop
pushf
pop
call
mov
push
pop
mov
push
inc
add
popa
data16
into
gs
add
ret
add
add
add
cmp
add
into
ret
pop
adc
mov
mov
jne
lea
mov
sarl
test
mov
push
xorb
mov
xor
ss
fs
mov
je
xor
mov
ss
pop
cmp
jne
mov
cld
push
pop
inc
stc
xor
test
clc
test
cmp
fs
or
add
lret
xor
pushf
mov
ret
pop
dec
mov
push
add
xor
cmp
je
mov
lea
push
cmp
mov
add
sub
add
mov
jne
mov
xor
mov
push
cmp
jne
sbbl
clc
inc
pop
sti
add
cld
xor
mov
roll
mov
inc
in
add
mov
mov
push
mov
test
xor
pushf
sub
inc
sub
mov
inc
add
or
cmp
mov
cmp
je
push
dec
str
cmp
int
mov
mov
cld
add
data16
push
add
jne
movl
clc
xlat
inc
mov
push
pushf
in
add
add
add
cmp
add
lret
lock
clc
inc
lret
cmp
xor
pushf
test
je
xor
rorb
push
add
jb
add
dec
mov
push
push
adcl
xor
mov
scas
ret
jns
mov
dec
or
ret
lock
mov
or
mov
xorl
mov
adc
iret
inc
movl
incb
ret
adc
clc
dec
fisttps
add
ret
lea
add
xor
pushf
add
add
inc
test
xor
push
fwait
push
xor
inc
cmp
jbe
mov
or
inc
test
xor
in
hlt
push
push
push
push
mov
fwait
fwait
xor
mov
or
mov
clc
jb
add
orl
addl
mov
or
inc
dec
mov
orw
xor
mov
mov
mov
mov
inc
dec
add
add
mov
clc
or
mov
clc
popf
incl
ret
adc
mov
hlt
test
clc
or
xor
pushf
jb
add
inc
daa
inc
inc
xor
dec
fwait
add
clc
cmp
or
add
xor
or
lea
add
mov
cld
dec
push
sub
add
or
add
or
add
mov
inc
mov
cmp
xbegin
clc
or
xor
adc
lea
add
inc
add
add
je
push
or
dec
std
mov
mov
mov
or
inc
clc
mov
hlt
call
push
or
push
xor
mov
xor
pushf
inc
mov
or
add
inc
mov
or
inc
push
jmp
mov
mov
jne
jmp
mov
clc
lret
push
mov
mov
sub
decl
or
pop
ds
pushl
mov
mov
jmp
leave
jne
call
in
dec
add
add
inc
cmp
je
mov
or
add
or
adc
enter
rolb
mov
or
rorb
jmp
push
mov
cld
inc
inc
orl
push
push
mov
add
test
add
mov
mov
lock
fcoms
mov
push
enter
cmp
add
mov
call
cmp
jmp
push
call
mov
cld
or
call
add
xor
jne
cmp
jne
mov
or
pop
into
je
mov
or
mov
mov
mov
or
sar
xor
xor
pop
adc
ret
cld
inc
mov
cld
mov
push
pop
or
xorps
test
add
adc
addl
jmp
ror
inc
leave
xor
and
add
xor
xorl
mov
pcmpgtw
add
leave
mov
push
dec
mov
lea
xor
sysret
dec
rorb
pushw
jne
ud0
mov
lods
add
data16
iret
and
cli
inc
cmp
add
inc
pop
lea
mov
add
mov
mov
add
inc
data16
clc
int3
cmp
je
push
pop
xchg
data16
lea
jb
jmp
call
clc
xchg
mov
or
lea
push
inc
jge
mov
fdivs
incl
xor
xchg
ret
xor
cmp
data16
rolb
add
dec
xchg
push
jmp
push
add
add
mov
clc
dec
xchg
cmp
jne
xor
jmp
add
jne
call
clc
xchg
sti
add
add
xor
pop
mov
jmp
mov
cmp
cmp
lea
jle
jae
mov
lcall
inc
push
lea
mov
int3
push
xchg
add
add
inc
add
cld
mov
aam
xchg
mov
testb
mov
hlt
add
mov
decl
incl
mov
call
je
js
lock
mov
mov
sbb
clc
add
mov
rorb
dec
xchg
mov
in
jge
cmp
clc
pop
fistl
clc
add
mov
mov
mov
adc
add
adc
pop
sbbl
ret
cmp
mov
cld
add
add
add
sub
or
add
mov
push
push
clc
addl
out
add
jmp
cmp
jmp
je
mov
inc
add
add
add
pop
pop
push
inc
in
pop
in
cmp
xor
add
push
mov
in
dec
push
test
add
leave
inc
test
add
add
dec
push
mov
hlt
push
dec
leave
mov
clc
cmovge
mov
clc
popl
push
add
push
xor
cld
add
xor
add
add
int
mov
add
cmp
jne
xor
jmp
add
mov
or
mov
mov
mov
or
shl
icebp
addb
or
or
stc
shll
xor
inc
xchg
add
add
mov
test
sub
jmp
mov
lock
lea
mov
or
leave
add
dec
dec
test
paddb
add
dec
mov
mov
or
dec
xor
mov
adc
mov
call
mov
push
clc
or
push
lret
mov
mov
xor
cmp
lsl
call
or
dec
or
inc
xor
in
add
inc
pop
xor
testl
dec
sub
add
push
sub
mov
or
mov
xor
pushf
push
movl
dec
inc
cmpb
pushf
gs
shl
dec
xchg
shr
xlat
rol
mov
or
mov
or
push
mov
dec
enter
lret
ret
mov
or
into
add
add
bswap
ror
dec
add
mov
hlt
inc
inc
ret
mov
or
dec
xor
jne
inc
inc
mov
clc
pop
ret
mov
call
dec
add
adc
push
ret
in
call
push
add
xor
jmp
xor
add
shr
mov
mov
in
pushf
ret
fcomps
inc
in
xor
mov
cld
fmul
sbb
ljmp
jbe
mov
clc
add
mov
lea
mov
call
hlt
xor
mov
xor
mov
hlt
into
inc
scas
mov
cld
add
add
inc
shrl
xor
mov
clc
dec
inc
decl
ret
movb
scas
inc
jmp
mov
pop
xor
mov
clc
test
mov
cld
call
xor
add
fdivl
lret
in
inc
or
into
mov
call
cld
mov
xor
lea
mov
add
inc
mov
dec
mov
cld
xor
sub
int
sub
add
mov
call
incl
mov
cld
jne
mov
aam
dec
or
jb
add
rorl
xor
xor
sub
mov
xchg
inc
xor
clc
mov
nop
faddl
xchg
jmp
mov
fadds
inc
or
dec
add
dec
mov
inc
push
mov
xor
rolb
ret
inc
inc
mov
xor
add
mov
cmp
dec
inc
xor
inc
mov
clc
lea
add
xor
mov
push
enter
mov
mov
loopne
ret
push
enter
inc
cld
mov
clc
ret
ret
mov
cld
pop
mov
mov
dec
xor
pushf
add
fcoms
mov
adc
inc
mov
adc
cmp
inc
add
mov
nop
add
inc
mov
add
cmp
mov
clc
inc
inc
add
mov
in
jne
mov
clc
add
mov
in
mov
xor
cmp
fmuls
lea
clc
mov
cmp
test
inc
mov
ret
inc
decl
push
dec
test
dec
mov
mov
mov
fadds
dec
inc
sub
inc
xor
faddl
inc
or
dec
add
mov
mov
mov
mov
lock
inc
add
fsubr
test
clc
push
cmp
pushf
inc
push
fsubs
clc
mov
mov
mov
clc
mov
xor
mov
in
les
mov
or
dec
mov
in
dec
decl
fmuls
inc
mov
faddl
dec
push
xor
push
mov
push
mov
lock
inc
test
add
add
jne
lea
div
incl
xor
jb
add
mov
xor
mov
adc
mov
ret
push
push
lea
sti
add
or
mov
xor
mov
add
jne
lea
mov
call
shll
pushf
add
mov
xor
test
clc
dec
inc
xor
pushf
rorb
lea
int3
add
lea
lea
mov
xor
bswap
rorb
roll
add
xor
pushf
inc
jnp
mov
lock
lret
xor
mov
fmul
test
xor
mov
mov
mov
ret
add
dec
adc
add
inc
rcll
mov
xor
jb
add
mov
cld
mov
or
cmp
jne
mov
mov
xor
mov
mov
mov
xor
jb
add
add
mov
xor
mov
or
xor
mov
mov
xor
jb
add
enter
add
add
inc
mov
mov
add
dec
mov
add
cmp
add
mov
loopne
add
dec
or
in
or
mov
xor
add
enter
inc
mov
or
or
mov
cmp
add
roll
mov
or
xor
mov
mov
xor
mov
xor
mov
faddl
call
dec
dec
xor
or
loopne
or
iret
ret
mov
mov
call
fwait
add
mov
fmull
test
dec
add
cmp
dec
mov
xor
mov
in
or
dec
xor
lea
or
ja
sbb
cmp
jne
mov
faddl
mov
fadds
mov
in
or
iret
add
xor
sbb
decl
mov
in
mov
dec
mov
fmull
jne
or
add
cmp
jne
lea
inc
mov
mov
jne
mov
test
inc
mov
loop
pushl
mov
add
mov
lods
dec
inc
mov
lret
mov
adc
std
ret
ljmp
hlt
rol
ret
cld
enter
inc
pop
mov
ret
test
jmp
push
call
in
addb
add
add
icebp
mov
cld
pop
dec
shll
add
cmp
je
mov
inc
or
ljmp
sti
cwtl
call
or
push
sub
push
inc
mov
mov
test
inc
push
push
xor
add
dec
add
inc
add
push
decl
add
or
call
mov
mov
inc
dec
add
push
call
incl
mov
mov
or
cmp
cmovne
adc
adc
inc
adc
jne
call
dec
inc
mov
add
mov
push
or
dec
xorl
cmp
mov
pop
adc
ret
mov
clc
mov
pop
mov
mov
push
push
lock
mov
adc
or
ret
xor
add
or
jge
mov
and
cmp
mov
xchg
dec
add
mov
add
dec
into
mov
mov
das
add
add
mov
and
mov
and
xor
lea
xor
add
xor
orl
cmp
pushf
mov
or
jne
call
adc
mov
adc
movl
pop
and
call
and
call
addl
clc
pushf
decl
jmp
and
and
or
decl
and
pop
cli
in
ret
add
mov
or
jl
adc
dec
push
and
xor
mov
add
or
cmp
sbb
or
xor
or
test
dec
adc
adc
add
jae
add
pop
adc
fidivl
add
movups
popf
push
adc
insl
or
add
inc
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
cmp
add
adc
sub
adc
push
adc
mov
adc
adc
cmp
adc
addr16
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
pop
adc
jle
adc
cld
dec
adc
add
adc
push
insl
adc
fs
add
jge
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
aas
adc
jne
adc
fldenv
adc
xchg
push
add
pop
adc
in
adc
leave
sbb
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
cmp
mov
adc
add
adc
dec
insl
adc
mov
adc
mov
adc
rorl
adc
pop
inc
adc
daa
cmp
sub
inc
add
cmp
xor
inc
add
cmp
cmp
inc
add
cmp
inc
cmp
dec
ss
pop
ss
ss
xor
add
pop
dec
dec
dec
xor
pop
xor
add
push
xor
dec
inc
dec
cmp
pop
inc
add
dec
pop
push
push
inc
xor
push
add
push
pop
dec
dec
dec
dec
dec
add
cmp
aaa
dec
cmp
push
inc
add
inc
pop
dec
xor
xor
push
xor
push
xor
dec
push
inc
xor
cmp
add
dec
xor
xor
xor
xor
inc
add
xor
dec
push
xor
dec
xor
dec
xor
dec
inc
push
pop
inc
xor
add
pop
add
add
push
add
dec
add
add
dec
add
xor
pop
add
dec
add
cmp
pop
add
cmp
add
push
add
push
add
dec
add
dec
add
inc
add
dec
add
add
add
push
add
pop
add
add
push
add
add
dec
add
pop
add
push
add
xor
xor
pop
add
add
add
add
add
pop
add
dec
add
dec
add
add
push
push
inc
push
cld
inc
mov
dec
mov
sub
or
shlb
push
add
add
pop
js
insl
arpl
addr16
pop
inc
inc
dec
bound
popa
push
bound
popa
bound
jo,pn
bound
