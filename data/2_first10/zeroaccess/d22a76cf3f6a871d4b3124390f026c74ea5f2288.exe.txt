push
mov
sub
add
mov
cmpl
movl
not
jmp
movl
not
cmpl
jne
push
call
mov
sub
movzwl
and
add
mov
xor
add
sub
xor
adcl
mov
mov
sub
xor
adc
andl
jmp
jae
insl
mov
and
cmp
mov
jo
sbb
sbb
jne
xor
mov
mov
clc
out
or
jno
adc
stc
pop
jno
sbb
mov
and
inc
mov
cld
clc
sub
dec
pop
push
and
fcompl
dec
inc
xchg
lret
xorb
jle
sti
xchg
mov
arpl
jmp
adc
out
push
pop
stc
adc
mov
dec
je
xchg
or
inc
add
fistpll
movsl
bswap
jae
in
stos
mov
mov
outsl
sub
aam
mov
xlat
dec
outsl
push
dec
mov
mov
dec
inc
lret
pop
popf
adc
mov
and
in
mov
lret
int3
aam
pop
push
sub
inc
and
data16
and
adc
dec
xchg
jecxz
enter
push
hlt
xor
fadd
sbb
int3
sub
and
cltd
imul
pop
popf
into
mov
cmp
adc
lahf
lea
test
push
or
lds
inc
cld
loope
push
adcl
scas
ror
js
stos
dec
xor
jge
call
pop
add
pop
js
lods
adc
inc
inc
sahf
mov
or
xchg
lret
push
addr16
stc
jl
loopne
mov
pusha
stos
fsubrs
aam
jmp
add
xor
cmp
mov
xchg
cbtw
clc
add
fnclex
dec
dec
push
loopne
mov
pop
pop
popa
jle
pop
fisubrl
mov
movsb
mov
pop
and
dec
push
sbb
jmp
jp
sub
mov
mov
mov
pusha
xor
push
jns
faddl
xchg
sbb
mov
and
xchg
rclb
repz
cmp
loop
sarl
jnp
pop
mov
mov
rcr
xchg
icebp
xchg
fidivrl
test
mov
test
and
or
xor
xchg
adcb
outsl
mov
push
pop
sbb
or
enter
and
pop
imul
pusha
imul
jno
mov
iret
dec
sub
and
sub
or
xchg
ss
or
pop
cmpsb
and
lock
jae
add
ds
inc
push
adc
mov
in
mov
push
outsl
enter
adc
push
inc
adc
lea
cmp
push
and
mov
scas
loop
ss
xchg
mov
pop
cmp
bound
test
adc
dec
pop
xchg
sbbb
cld
push
sub
jo
cwtl
push
inc
and
scas
imul
scas
jns
jge,pt
testb
lahf
repz
mov
in
sub
or
mov
pop
or
add
insb
xor
imul
daa
mov
popa
test
imul
stos
div
mov
test
movsl
and
or
xor
pusha
pop
xchg
push
and
add
mov
int3
out
gs
pushf
dec
xchg
jl
mov
popl
outsb
hlt
mov
mov
rorb
xchg
ret
sub
mov
mov
ret
stos
fisubs
ficomps
push
test
test
test
xchg
xchg
int3
arpl
test
ss
or
mov
scas
mov
or
or
insl
push
lods
xchg
mov
mov
sub
mov
push
mov
mov
mov
sbb
mov
mov
mov
and
orl
orl
andl
mov
add
mov
cmpl
mov
movl
mov
mov
jmp
notl
mov
cmpl
jae
push
call
mov
xor
or
sub
or
xor
add
mov
sub
imul
and
or
mov
mov
jmp
outsl
add
das
movsb
out
sbb
mov
adc
sbb
push
mov
ljmp
cmp
pop
stos
ds
cmpsb
adc
call
push
scas
inc
pop
stos
fisttpl
or
inc
pop
lret
aaa
cs
fidivrs
sub
adc
les
aam
xor
in
ret
fisubs
fcompl
mov
int3
xor
inc
push
in
xor
push
iret
mov
mov
outsb
jns
fisttpl
mov
shl
lock
sub
cld
mov
daa
push
sub
out
xchg
mov
cmpsl
xchg
adc
pop
addr16
mov
fisttpl
fwait
mov
xor
jg
sbb
shl
scas
add
and
push
loopne
sbb
test
dec
dec
icebp
es
push
xchg
imul
filds
adc
inc
setne
cmpb
jg
adc
scas
mov
fmuls
pop
push
inc
movsb
dec
cmp
mov
or
ror
sbb
jp
out
repz
or
and
stc
adc
pop
mov
jno
push
adc
push
in
mov
xor
gs
jae
xchg
mov
pop
rclb
mov
mov
mov
lret
jge
cmp
mov
aas
push
sbb
mov
aaa
clc
inc
sub
test
xlat
inc
test
cmpsb
jae
fcomps
movsb
loope
push
sbb
sub
fisubs
mov
xchg
loope
xchg
xchg
out
lahf
dec
sub
icebp
lret
frstor
pop
and
adc
cld
dec
mov
jp
subb
inc
pop
rcrb
out
dec
int
aad
ret
inc
dec
xlat
and
push
push
aaa
dec
repz
popa
insl
add
test
sub
xor
pop
stos
int
insl
lock
push
dec
xor
inc
adc
mov
jno
inc
aaa
adc
cmc
add
pop
add
cli
enter
subl
cmpl
shll
adc
fwait
aad
mov
dec
popf
pcmpeqw
ja
out
cmp
js
add
ljmp
jl
cmc
cmp
jle
test
insb
jmp
ljmp
mov
mov
dec
xor
jge
out
int
rorb
jns
add
cli
mov
rcll
cli
ja
jmp
iret
mov
es
jle
dec
mov
popf
jg
and
or
std
cld
jle
adc
lods
out
adc
je
xor
jl
cs
inc
jle
and
arpl
dec
iret
outsl
ja
fldl
inc
les
cmp
stos
cwtl
aas
add
pop
pusha
ret
xchg
ss
push
testb
sbb
gs
xor
les
data16
add
lahf
ljmp
repz
sbb
cwtl
ud0
popa
sbb
in
shlb
sarl
adc
loopne
aad
xchg
popa
je
leave
xor
ds
dec
lcall
or
xchg
loope
es
dec
test
imul
ret
int3
leave
jno
ds
mov
jl
jne
outsl
dec
pop
dec
icebp
jge
ret
stc
sbb
fmul
cmp
lahf
ljmp
inc
fidivl
dec
jae
ret
fstps
add
fwait
and
jmp
stos
pusha
clc
orl
lds
sub
or
inc
outsl
sbb
xchg
sbb
lods
pop
jnp
cld
mov
cmp
insb
pop
test
lods
out
in
xlat
jp
js
sbb
cmp
sub
mov
mov
sbb
cmpl
notl
mov
mov
jmp
movl
not
cmpl
jge
push
call
mov
adc
and
add
mov
xor
and
mov
mov
sub
mov
orl
sbb
orl
adc
lea
mov
movl
mov
cmpl
mov
movzbl
mov
jmp
not
mov
cmpl
jg
push
push
pushl
push
call
adc
sbb
neg
adc
sub
addl
xor
mov
mov
add
sub
mov
mov
inc
mov
cmpl
mov
mov
movl
jmp
movl
cmpl
jg
push
push
push
call
sub
or
sub
mov
adc
mov
xor
mov
shrd
cmpl
mov
movl
movl
jmp
movl
cmpl
jge
pushl
pushl
push
call
movzwl
and
mov
and
add
sub
add
or
shr
mov
cmpl
movl
mov
movl
jmp
mov
mov
cmpl
je
pushl
pushl
pushl
push
push
call
sub
movzwl
add
add
sbb
incl
mov
xor
xor
orl
or
jmp
xchg
xchg
je
insb
sub
dec
and
lods
cltd
mov
sahf
adc
sbb
or
add
fwait
xchg
xor
pop
jge
inc
sarl
adc
cmp
sub
jle
lret
sub
adc
pop
xchg
adc
fcmovne
sub
enter
add
add
adc
fistps
cmc
pop
or
push
cmp
add
mov
hlt
in
or
mov
pop
mov
insl
xchg
mov
sbb
popa
mov
mov
jecxz
hlt
jo
fsubr
and
decl
mov
std
imul
add
pusha
or
je
pop
xchg
pop
ret
jo
sub
out
or
add
inc
rcr
pop
rclb
xlat
out
out
sbb
movsl
push
add
xchg
sbb
xlat
bound
dec
js
shlb
loope
out
movl
mov
mov
rcr
bound
push
jle
mov
jmp
leave
push
cmpsl
sahf
xor
insl
pop
push
ficompl
pushf
ja
hlt
sbb
call
mov
pop
lcall
jae
sub
jae
in
mov
jne
lock
pop
jb
and
mov
inc
call
subl
or
sbb
call
sbb
mov
add
in
push
js
iret
movsb
test
push
data16
pop
mov
mov
pop
xlat
mov
out
cmp
pop
mov
push
test
dec
xlat
pop
sub
hlt
cltd
jp
aas
sub
sub
into
sub
std
outsl
and
fcomps
inc
adc
inc
adc
les
vpandn
xor
in
fdivr
lcall
push
mull
lea
sub
cmc
out
sti
mov
jae
inc
pop
lret
into
cmp
les
ret
dec
push
push
mov
and
fucomip
mov
jg
leave
and
sahf
cmpsl
pop
pushf
jl
ret
loop
movsb
loopne
std
loop
int
mov
mov
fcoms
call
cmc
fbld
mov
cld
adc
loope
mov
notb
mov
add
xchg
push
iret
hlt
jmp
sbb
repz
jecxz
push
in
lea
insl
xor
aam
cmp
cs
call
cld
or
sub
or
mov
addr16
inc
addr16
sub
pop
repz
xor
mov
outsl
rorb
popf
adc
sbb
jnp
sub
xchg
int
popf
lods
loope
and
push
dec
and
rolb
pop
jg
out
arpl
popa
jb
push
pop
sbb
pop
fldcw
cmpb
fcomps
loop
les
pop
out
loope
mov
scas
push
stc
std
cmp
rclb
test
pop
mov
roll
adc
jp
orl
add
pop
dec
inc
pusha
lock
lcall
inc
imul
mov
jne
mulps
adc
adc
mov
sbb
dec
push
fnstsw
jns
xchg
xchg
movsl
in
mov
imull
sbb
div
jne
mov
fbstp
add
mov
es
cmp
adc
repnz
leave
dec
dec
mov
nop
push
sub
add
adc
movl
cmpl
movl
movl
jmp
mov
mov
cmpl
jbe
pushl
push
call
orl
xorl
addl
and
movl
subl
movl
cmpl
mov
movl
mov
movl
jmp
mov
cmpl
ja
push
pushl
push
call
sbbl
xorl
adcl
addl
andl
sbbl
sbbl
sbb
movl
neg
movl
movl
movl
mov
add
movl
mov
add
movl
cmpl
movl
notl
jmp
movl
mov
cmpl
jle
push
pushl
push
pushl
push
pushl
call
adcl
addl
subl
orl
mov
xor
movl
xor
jmp
stos
fisttpll
aas
and
mov
stos
add
sbb
sub
fbstp
sbb
es
mov
scas
in
stos
cmc
test
movsl
lea
ret
mov
mov
repz
inc
repz
or
inc
jecxz
gs
shll
or
push
mov
adc
pop
sub
add
sbb
or
add
add
inc
loop
or
ret
inc
mov
arpl
mov
push
add
jno
nop
dec
push
dec
fnstcw
dec
call
xchg
in
das
cs
mov
fiadds
addl
jbe
sub
insl
pop
faddl
xchg
jmp
test
push
cltd
imul
into
pop
popf
stc
sub
je
and
xchg
loope,pt
cld
insb
lods
test
jecxz
or
lods
sarb
xor
sub
mulb
aad
inc
pushf
out
adc
cli
stc
dec
out
push
dec
sbb
fistl
outsl
jns
daa
int
int
aad
xor
and
sti
jb
inc
mov
mov
lock
lea
filds
pop
repnz
jo
push
cs
mov
bswap
dec
daa
mov
jbe
inc
int3
or
push
imul
std
or
cmp
sarb
and
push
faddl
lods
and
ficompl
test
sub
adc
mov
cmp
aaa
mov
out
inc
push
adc
dec
and
jge
push
inc
cmp
or
add
mov
jle
dec
inc
jl
pop
in
add
jb
xorl
outsl
mov
loopne
loopne,pn
push
mov
hlt
cmp
ficoms
in
mov
jle
xchg
inc
adc
or
cmp
repz
mov
pop
ret
cli
leave
adc
pop
or
fwait
mov
cltd
jns
jo
push
mov
shr
rcrb
sbb
sarb
mov
loopne
pop
inc
cs
mov
push
cs
sub
add
cmp
fnstenv
xchg
sbb
sbb
daa
stos
ret
shrb
mov
es
outsb
fcoms
clc
mov
dec
popf
cmp
sbb
sub
jp
mov
jbe
jl
jle
pushf
roll
stc
rolb
psubb
push
xor
push
or
add
aaa
mov
js
cwtl
rcr
scas
scas
dec
mov
outsb
mov
je
dec
pop
clc
fidivs
dec
mov
mov
cmp
aad
adc
jb
cli
push
ja
aam
xchg
or
mov
and
popf
scas
int3
loope
jl
pop
mov
fdivrs
mov
out
jle
jmp
dec
testl
dec
les
ja
fldenv
jmp
and
inc
outsb
mov
cmpsl
adc
xchg
add
ja
xchg
fildll
pop
int3
gs
loopne
xor
adc
mov
fstpl
push
jecxz
cmc
out
xchg
xor
lds
js
ret
push
data16
push
jno
rcll
push
rorl
adc
push
sbbl
out
addr16
or
inc
pop
xchg
dec
pop
or
cmp
xlat
sub
test
ja
mov
adc
arpl
mov
sbb
int
cmpsb
adc
roll
mov
jmp
psubd
scas
dec
rolb
addb
xchg
sub
out
ljmp
scas
push
sbb
movl
movzwl
adc
movl
adc
movl
cmpl
movl
mov
movl
jmp
mov
mov
cmpl
ja
pushl
push
push
push
call
sbbl
adcl
subl
andl
addl
movl
sub
movl
movl
addl
movl
movl
cmpl
mov
mov
mov
movl
jmp
mov
mov
cmpl
jg
pushl
push
push
push
call
addl
subl
xorl
decl
and
or
mov
and
movl
movzwl
sbb
movl
or
movl
adcl
movl
mov
decl
shl
not
mov
jmp
out
repz
cmp
pop
and
push
cld
sbb
sahf
adc
sbb
es
movsl
jmp
sub
lods
push
mov
and
cmp
mov
push
dec
lods
out
in
inc
mov
shlb
rcll
rcr
push
mov
inc
adc
cltd
orl
push
pop
pop
xchg
loop
mov
stos
shlb
sbb
mov
sub
subb
in
icebp
mov
cmp
out
mov
fs
sbb
stc
xor
stos
xor
popa
cmp
pop
stos
pushf
lods
mov
js
rcrb
out
push
test
lea
sbb
jbe
leave
ret
int
movsb
orl
sbb
in
mov
fcompl
cmp
jno
arpl
inc
mov
add
push
adc
xchg
cmp
adc
fdiv
fisttpl
pop
lds
mov
ret
fldcw
mov
loope
rcrb
adc
sub
add
jb
aaa
iret
push
and
cmp
test
jmp
mov
pop
jae
cmp
movl
cltd
sbb
pop
fs
test
loope
sub
scas
es
popf
jg
sub
call
lret
insb
jae
rcll
mov
lahf
ds
sub
mov
jl
inc
add
int3
push
sub
in
sti
imul
js
push
repnz
adc
add
int3
jns
push
loopne
mov
stos
sti
ret
or
sub
clc
shl
aaa
mov
popa
lahf
orb
pushf
cmp
push
add
jnp
adc
stos
cmp
mov
pop
dec
sub
sarb
inc
sub
repnz
add
out
xchg
push
sarb
shll
cmp
js
mov
sti
pop
sbb
lcall
cltd
mov
lods
insb
inc
jb
jbe
not
jae
lgs
xchg
fmuls
ds
fidivl
pop
lock
sbb
scas
test
inc
cmp
sub
jnp
popa
mov
xor
jns
outsl
mov
shll
push
insl
jmp
aaa
cwtl
mov
lods
mov
cli
or
lds
jnp
jge
mov
mov
bound
ds
xchg
sbb
jge
xchg
cmp
sbb
mov
xchg
jmp
and
int
stos
fldenv
roll
cmpsl
es
into
lcall
mov
jge
int
xchg
test
loope
mov
nop
push
jae
popf
mov
mov
cmc
arpl
movsb
mov
test
sbb
jp
jl
in
rcl
orb
outsl
adc
jecxz
xchg
pop
mov
adc
mov
jae
mov
jl
mov
mov
dec
push
push
es
aas
into
lret
sub
cli
push
ror
xchg
sbb
sahf
std
sub
push
cwtl
push
sub
and
jae
out
stos
add
xor
mov
scas
inc
popf
mov
adc
pusha
pushf
jo
cmp
pop
sub
in
out
mov
pop
test
push
call
mov
fwait
bound
jbe
cmpsb
or
loope
dec
mov
mov
iret
sub
jb
std
pop
sbb
sahf
hlt
pop
loope
sahf
in
sbb
mov
add
mov
mov
dec
int3
popf
int3
mov
testb
push
push
sbbl
push
call
mov
not
mov
cmpl
mov
movl
movzwl
jmp
mov
cmpl
jb
pushl
call
mov
add
movl
adc
mov
sbb
mov
xor
and
xor
mov
xor
mov
addl
sub
mov
mov
and
mov
orl
lea
mov
mov
sbbl
or
addl
jmp
nop
movsb
call
int
cmpl
jo
hlt
sbb
sahf
adc
sbb
adc
xor
jg
xchg
fs
lcall
or
cwtl
push
or
mov
hlt
in
lahf
int3
cmp
insb
fstpl
idivl
xlat
pop
loop
push
mov
inc
cmpsb
or
popa
xor
sub
adc
sbb
jo
hlt
les
or
orl
push
aas
cmp
mov
mov
jnp
mov
icebp
adcb
pushf
inc
inc
aas
movsl
das
push
leave
mov
test
dec
jge
mov
sti
andb
mov
bound
call
call
adc
xchg
mov
cmp
mov
lock
push
ja
adc
dec
or
adc
clc
pop
and
test
xchg
adc
movsl
push
clc
jp
and
fwait
lock
cmp
inc
mov
sub
xchg
sbbl
jae
loop
pop
fs
outsb
aam
jl
and
int3
mov
mov
les
out
push
mov
push
in
out
and
add
fdivl
jmp
stos
adc
lock
fwait
mov
push
xchg
pop
bnd
testb
add
cmpsb
mov
fsubrl
sub
mov
inc
bound
sub
cld
pop
inc
push
mov
test
jo
pop
fnsave
cmp
ljmp
mov
inc
mov
std
dec
imul
cs
cli
out
adc
sbb
push
xor
mov
shlb
sub
nop
mov
enter
in
in
in
and
stos
dec
cmp
or
push
into
and
cli
xchg
sub
scas
rep
mov
stos
push
or
jmp
mov
loopne
sub
ss
ljmp
xorl
push
push
cmp
lret
int3
mov
stc
pop
mov
xor
jns
out
daa
cmp
xchg
or
cs
and
pop
aam
je
repnz
scas
sbb
mov
in
pop
jno
jnp
pusha
pop
mov
ss
aaa
add
xor
push
iret
xchg
stc
mov
cmp
fcmovnbe
hlt
xchg
pusha
std
add
cmp
or
fistpl
movsb
jae
negl
out
push
jmp
aad
push
pop
and
cli
or
jnp
addb
push
shrl
jl,pt
cmp
insl
add
icebp
out
adc
mov
aas
out
push
jo
stos
sub
fildl
aas
mov
push
xor
xor
lods
lcall
cwtl
das
loop
mov
ret
enter
ret
jne
movl
mov
out
pop
dec
loop
cli
jge
cmp
cs
outsl
lock
push
testb
xlat
stos
cmovo
jl
mov
ret
mov
test
pop
dec
sub
jp
fidivl
lods
push
push
dec
pusha
pop
cli
adc
pop
mov
dec
xchg
stos
mov
in
adcb
shll
inc
jns
mov
push
push
jecxz
js
sub
outsb
or
add
mov
sub
pop
test
je
in
sbb
imul
sbb
jbe
and
lret
arpl
add
xor
cmp
movl
jne
mov
cmpl
mov
movl
mov
jmp
movl
not
cmpl
jl
pushl
pushl
call
movl
incl
or
add
sub
add
sbb
mov
sbb
shrd
shr
mov
xor
mov
negl
shl
xor
xor
sbbl
or
jmp
and
push
repnz
inc
sarb
jo
or
sbb
mov
pop
cs
ror
xchg
xchg
imul
fstps
fidivs
decb
xor
and
fisubs
pop
sarb
sbb
inc
daa
jmp
xor
mov
adc
hlt
test
aas
sti
xor
aam
push
mov
rolb
xchg
and
sbb
dec
aas
xor
rorl
adc
loope
sbb
jge
pop
inc
lea
adc
orl
adc
pop
dec
gs
lahf
stos
dec
lods
movsb
push
clc
jnp
fisttpll
adcb
xchg
mov
popa
loop
xchg
xchg
xor
inc
xchg
jne
mov
ret
cld
shrl
les
push
push
cld
test
ret
mov
push
stos
movsl
xor
xor
int
push
xchg
push
sub
ja
fstpl
cmpsb
pop
rep
popa
and
je
pop
dec
mov
adc
mov
test
pop
push
and
mov
fsubrl
dec
js
inc
push
xchg
jns
push
imul
es
lods
ljmp
xchg
loop
xchg
adc
jecxz
mov
lret
adc
andb
add
fisubs
mov
insb
gs
add
mov
sub
and
pop
addr16
adc
int
fs
cmc
subl
add
loope
mov
ja
cld
fdivs
xor
adc
dec
mov
or
icebp
stos
inc
fstl
xor
adc
enter
outsl
adc
xor
push
hlt
es
sbb
jecxz
lret
das
mov
cmp
adc
aad
xchg
xchg
je
push
test
xchg
mov
jge
test
inc
sbb
xor
xchg
and
sbb
testl
pop
mov
or
or
and
ss
and
xor
jle
adc
sub
aaa
js
jae
pop
outsb
add
aad
mov
mov
cmp
mov
mov
sub
mov
pop
out
jne
add
and
decb
cmp
dec
sbb
js
cmp
push
jge
inc
in
fidivrl
jne
inc
mov
push
sub
xor
mov
jl
std
and
inc
shr
adc
xor
lcall
testb
in
imull
aaa
leave
ljmp
push
inc
sar
pop
adc
jbe,pt
enter
cmp
fsubrs
cmp
jnp
cmp
push
lods
shr
arpl
cmp
push
jbe
inc
dec
dec
lret
xchg
enter
mov
jnp
cld
or
das
int3
cmpsb
ljmp
mov
test
scas
fdivl
scas
cmpsl
jp
push
imul
push
push
xchg
adc
or
push
cmp
inc
je
call
es
xlat
jmp
shld
les
xor
out
pop
mov
add
cli
dec
jne
nop
in
scas
inc
lds
pop
mul
loope
das
jle
das
xor
dec
bound
dec
fsts
loop
imul
mov
mov
mov
inc
stos
rorl
xor
sub
inc
aas
sbb
xor
or
pop
jle
jae
imul
add
cmc
jmp
aaa
sbb
mov
arpl
sti
jae
xchg
pushf
push
and
jle
or
andl
or
mov
cmp
movl
jne
jmp
sbb
fldt
sbb
or
test
sbb
stos
sahf
test
int3
mov
cltd
aad
xor
dec
mov
into
sub
or
mov
mov
jmp
in
add
mov
adcb
pop
push
dec
inc
mov
jp
and
cmp
lock
and
sbb
das
call
mov
sub
sahf
call
repz
dec
cltd
fcom
lods
popa
dec
movsl
addr16
mov
cmp
lret
mov
lret
arpl
ljmp
push
stos
mov
rorb
pop
mov
lds
or
dec
or
jnp
mov
mov
lods
inc
adc
fcomi
add
add
lock
pop
xorl
or
scas
jle
daa
add
lock
adc
jo
pavgw
mov
fimull
mov
bound
jp
dec
jnp
jg
dec
popa
dec
sbb
movsl
loop
jmp
jbe
xor
sbb
inc
notb
fsts
or
int3
sub
add
outsb
or
push
loopne
dec
fdivrl
ss
or
sbb
cmp
add
fcomi
add
sbb
hlt
in
xchg
jmp
daa
and
inc
popa
sub
and
enter
adc
or
jle
or
mov
jne
cmpb
pushf
loop
dec
cmp
adcl
xchg
fadd
pop
shlb
int
aam
mov
ss
lock
jne
shl
icebp
jno
ret
mov
std
scas
sti
pop
sub
sti
fnstenv
lds
scas
and
cmp
in
hlt
sar
mov
pop
in
fcoms
dec
mov
cli
cmp
iret
xor
std
cli
sahf
data16
nop
aas
mov
lods
idivb
insb
stc
movsb
mov
inc
es
xchg
loop
loopne
cld
stos
pop
and
repnz
cmp
in
jb
sahf
rcr
push
loop
dec
sbb
sub
inc
mov
ljmp
push
aas
or
pop
daa
adc
sub
push
lods
test
in
cmp
ror
sub
fisttpl
leave
cs
jo
jecxz
in
popf
xor
and
or
adc
or
test
pushl
mov
sbb
cmc
sbb
lret
test
scas
stc
sbb
xchg
push
mov
and
mov
cmp
add
mov
shl
movsl
jge
dec
jno
sub
xor
test
xor
or
xor
push
sbb
cld
nop
lret
add
cmp
aaa
arpl
push
test
adc
adc
push
data16
xchg
pushf
int3
mov
sbb
push
xchg
mov
movsb
je
inc
mov
rorl
adc
out
cmp
dec
mov
mov
out
push
push
adc
add
rorl
fstpt
xchg
add
fneni(8087
mov
push
andl
dec
mov
cltd
movsb
dec
lock
jno
mov
je
test
rclb
sbb
test
mov
add
sarl
mov
inc
insl
popf
mov
pop
leave
aaa
mov
sti
pop
dec
and
dec
and
jle
in
call
add
mov
hlt
cmpl
notl
mov
jmp
not
cmpl
jne
pushl
call
xor
negl
xorl
andl
sbb
or
mov
cmpl
movl
mov
jmp
mov
cmpl
jbe
push
push
call
adcl
sbbl
mov
or
xor
add
adc
mov
xor
orl
mov
mov
and
mov
orl
shrd
mov
adc
mov
xor
adcl
shr
orl
mov
sbbl
xor
orl
or
subl
shl
subl
sub
cmpl
movl
mov
jmp
mov
cmpl
jne
push
call
mov
xor
xor
sub
or
sbb
xorl
xor
sbbl
orl
mov
cmpl
mov
mov
movl
jmp
movl
movl
cmpl
jle
push
call
and
adc
or
add
add
mov
xorl
mov
add
jmp
and
fdivrl
xchg
mov
dec
fistps
sbb
adc
in
test
insl
repnz
pop
int
mov
mov
adc
rcl
int3
push
notb
loope
cli
adc
push
sub
cld
xor
and
jnp
inc
pop
scas
inc
push
int3
xor
pop
data16
xor
sbb
cmc
cmpb
adc
jmp
or
lods
fldcw
mov
jmp
xchg
push
pop
push
mov
lea
imul
sahf
inc
into
andl
dec
xor
das
mov
into
or
dec
push
ficompl
add
xchg
and
adc
aam
and
cmpsl
outsl
loop
out
sbb
jg
inc
in
fptan
jmp
dec
loope
movsl
aad
pop
inc
cmc
inc
adc
jmp
push
mov
ret
adc
cmp
push
mov
adc
pushf
inc
pushf
pop
mov
in
and
stos
jl
sbb
pop
in
jmp
push
fs
shrl
adc
test
pop
in
scas
sub
and
fcoml
xchg
jg
jbe
iret
xchg
xor
fildll
int
sbb
adc
pop
xchg
and
xchg
xchg
int3
outsb
mov
mov
sub
inc
movb
leave
cmp
cltd
xchg
jo
stc
jbe
insb
pop
and
std
jge
sbb
add
out
or
scas
addr16
movb
leave
mov
aas
dec
shll
popa
cmc
mov
pop
sbb
dec
mov
adc
into
popf
sub
or
pop
aam
pop
inc
inc
dec
in
lds
fstps
ja
jns
aaa
pop
jo
cmp
sarb
insl
adc
adc
pop
clc
sbb
cli
sub
pop
std
outsl
je
jl
jle
cmp
jle
adc
loopne
mov
push
xor
lock
inc
dec
dec
sbb
cmpsb
adc
mov
je
scas
outsb
sbb
xchg
adc
mov
addr16
pop
nop
clc
sub
mov
cmp
sub
push
adc
mov
mov
cld
dec
loop
xchg
pop
mov
and
sub
fdivs
fsubrs
xor
adc
cmpsl
lcall
xlat
inc
mov
imul
push
out
and
mov
pop
inc
pop
data16
test
mov
cmp
xchg
stos
adc
popa
lahf
jl
cmpsb
ss
rcr
test
inc
push
in
stc
xorb
in
xor
and
jns
fld
push
xchg
mov
mov
inc
inc
std
in
cmp
sbb
xchg
fildll
mov
mov
into
dec
mov
push
push
insb
mov
aad
psubusb
xor
and
inc
jle
xlat
adc
out
mov
sarl
jae
fisttpl
sub
das
mov
sahf
adc
jns
pushf
scas
test
xor
lock
addr16
adc
mov
pusha
iret
push
mov
mov
inc
pop
adc
adc
jnp
adc
imul
into
iret
mov
push
ljmp
and
andb
push
lods
repnz
es
push
adc
sub
enter
adc
into
decb
sbb
xchg
dec
cmp
sub
adc
ja
fcmovne
fdiv
mov
pop
and
cwtl
dec
addb
cli
mov
add
sbb
mov
mov
mov
mov
mov
add
shrd
sub
shr
and
mov
andl
jmp
subl
and
sbb
mov
sahf
adc
sbb
push
fistpll
push
fwait
repnz
movsb
push
push
or
addl
inc
iret
in
hlt
pop
xor
push
sbb
sub
out
out
mov
sti
test
fwait
adc
or
push
lds
mov
dec
aaa
xor
mov
jb
int3
test
and
dec
pop
bound
inc
cmp
lar
test
lods
or
aas
inc
fsubr
es
adc
adc
jno
call
inc
and
xor
or
jns
pop
xchg
jne
or
fmull
ds
or
xchg
inc
sbb
insl
out
sbb
push
xchg
data16
in
enter
call
sub
jbe
and
xchg
les
pushf
xchg
mov
insl
rorb
push
adc
xchg
mov
mov
shrl
xor
jbe
and
outsl
add
dec
xchg
adc
mov
xor
mov
into
add
jmp
out
fnsave
add
loope
pusha
rorl
and
mov
xlat
pop
pop
push
scas
jp
std
jo
in
outsb
popf
pop
dec
fs
hlt
xor
cmpsl
pop
repz
cs
mov
pop
es
fimull
and
jmp
mov
jne
or
xchg
lods
pop
mov
adc
stc
xchg
in
cmp
cs
mov
sub
ret
pop
gs
and
jge
loop
mov
mov
mov
cld
sbb
imul
call
ret
and
fists
addb
lods
ss
aaa
scas
int
mov
push
cwtl
pop
out
pop
and
jle
out
sahf
cmpsl
add
lret
scas
fiaddl
pop
push
fildll
dec
push
add
and
mov
loope
gs
out
fidivs
mov
lahf
iretw
lea
xor
popa
nop
xchg
xchg
mov
push
mov
sbb
mov
out
inc
dec
mov
int3
ss
mov
sub
or
scas
add
inc
test
dec
lock
inc
scas
insb
jl
pop
enter
lods
clc
dec
mov
sbb
cltd
dec
pop
lea
sarl
xor
clc
lahf
cwtl
je
fcompl
xchg
jae
lahf
aaa
mov
pop
stos
sbb
leave
inc
jmp
push
sti
scas
les
int3
mov
out
push
mov
data16
loopne
gs
fisttps
cmp
mov
inc
ds
xchg
dec
dec
orl
sub
mov
ret
inc
cmpsl
add
nop
cmp
mov
jle
cmpsb
lea
imul
and
and
xchg
or
fs
xchg
or
xchg
loope
std
xor
test
shl
arpl
pop
mov
lcall
subl
push
data16
and
pop
sub
cld
dec
mov
lret
pop
push
or
rcrl
icebp
scas
jnp
inc
jl
sub
pop
xor
sbb
mov
movsl
movl
cwtl
lds
test
fnsave
dec
insb
imul
sub
pop
icebp
sbb
jl
iret
in
add
xchg
imulb
push
or
mov
js
addr16
das
fsubrs
mov
mov
jmp
stos
inc
inc
jmp
cmpsl
les
adc
mov
dec
aad
int3
mov
and
xor
or
shl
and
xor
mov
and
or
mov
movzbl
sbb
mov
jmp
xchg
xchg
lcall
stos
fwait
dec
xchg
sbb
sahf
adc
sbb
rcr
push
cmp
jmp
xchg
inc
inc
xchg
popf
mov
lret
cmp
sbb
sbb
xchg
or
insl
push
and
inc
jne
adc
inc
std
jecxz
jae
mov
xor
rclb
lahf
in
call
in
leave
sub
mov
cmp
fisubrs
mov
fisttpll
movsb
and
stc
add
mov
cmp
mov
cwtl
mov
jae
or
or
jecxz
test
rolb
mov
inc
mov
lods
test
xor
mov
jge
fildl
sub
jg,pn
enter
mov
ret
jmp
and
xchg
mov
test
dec
lock
cli
xchg
mov
pop
mov
gs
cs
cmpsb
in
or
mov
or
das
shrl
cmpsb
loop
movsb
movsl
cmp
jl
stc
push
mov
push
subl
int3
scas
pusha
icebp
xchg
test
cli
loope
test
mov
mov
cmp
mov
sub
test
xor
out
leave
add
mov
add
repnz
inc
or
pop
mov
push
int
mov
jecxz
aas
in
stos
popf
or
pop
addr16
jno
dec
mov
iret
cmp
pop
push
aas
fidivl
lods
add
xchg
mov
and
sub
fs
imul
movsb
adcl
mov
imul
shrb
adc
add
mov
movsb
xor
cmp
outsl
jbe
movsl
add
mov
aam
sti
or
sub
ja
mov
lock
push
repnz
test
cmp
imul
push
int3
and
test
push
mov
insl
int3
mov
push
in
push
adc
push
mov
jo
mov
fwait
movsl
nop
insl
pushf
jb
lds
or
xor
std
xlat
filds
jns
cld
mov
leave
adc
jg
lods
add
mov
icebp
sub
cmpsb
leave
sti
push
vsubpd
aam
lcall
pop
adc
pop
push
or
and
fistps
dec
dec
adc
mov
outsb
push
ret
add
cmp
loopne
in
dec
int
xchg
outsb
pushf
or
adc
push
sbb
push
and
dec
inc
daa
mov
cmp
das
jno
lds
pop
push
int
lcall
mov
pop
lods
dec
stos
xchg
sti
imul
xor
shr
and
and
pop
fistps
xchg
mov
xchg
xor
and
lret
add
test
rorb
sbb
inc
cwtl
cli
jecxz
lcall
push
inc
adc
jne
aad
aad
xor
dec
xchg
pop
insb
les
pop
xchg
sub
arpl
dec
xor
push
jnp
scas
leave
add
std
mov
sub
mov
adc
fists
jne
fiaddl
push
test
out
push
or
data16
ret
negl
icebp
mov
sub
fldt
push
push
xor
or
cmp
pop
scas
pop
add
cmp
add
cmp
sub
jb
ds
add
mov
roll
orl
shr
mov
or
mov
jmp
add
lea
fcompl
pop
or
mov
fcmovnb
sbb
sahf
adc
sbb
cmc
insl
das
aam
es
loop
jns
cmp
gs
cmp
mov
incl
adc
xor
or
cmp
fwait
adc
push
push
jp
cmp
dec
rolb
adc
jle
out
jae
mov
cld
push
ficompl
dec
xchg
daa
adc
scas
push
adc
mov
inc
insl
push
lret
inc
rolb
mov
scas
jb
bnd
clc
xchg
lret
rorb
cs
sbb
or
lock
jg
les
push
imul
inc
or
pop
and
push
mov
adc
popa
rclb
loopne
sbb
ss
test
pop
in
rcrl
pusha
xor
pop
aad
andb
dec
dec
sahf
ss
insb
jl
loop
bound
and
adc
dec
dec
shr
jmp
jo
mov
xchg
mov
add
dec
dec
fcomps
bound
fnstenv
arpl
aaa
insl
js
popf
orb
inc
pop
pop
or
aad
and
mov
fstps
cmc
testl
cld
arpl
sub
out
cltd
xchg
and
jmp
in
cmc
mov
pop
aas
out
pop
ljmp
adc
scas
das
dec
push
or
dec
insl
outsl
ds
clc
fcomps
mov
pusha
arpl
sub
and
or
ss
and
add
test
mov
sarl
outsl
xchg
andb
add
fisubrs
push
std
add
rcrb
sbb
popf
xchg
das
fwait
lods
fmul
cmp
loop
push
cs
arpl
pop
bound
pop
xchg
push
outsb
pop
arpl
pop
xchg
scas
xor
lods
lcall
in
pop
cmc
nop
imul
mov
jg
cmp
xor
mov
int
sub
jno
pop
mov
inc
cwtl
adcb
sbb
arpl
lahf
addb
int
iret
lret
cmp
inc
icebp
mov
and
cli
jnp
das
mov
cmp
inc
xor
pop
cs
mov
push
cmp
jmp
sub
cmp
sahf
cmp
xchg
stc
inc
int
xchg
test
sbb
or
mov
iret
push
mov
das
jl
dec
aam
cli
cmp
ljmp
cmpsb
scas
movsl
push
cmpsl
es
xchg
push
pop
xchg
xor
stc
lock
cmp
dec
stos
roll
pop
mov
and
mov
or
hlt
adc
mov
aam
aam
inc
push
xchg
popf
or
mov
test
cwtl
mov
decl
imul
es
xor
fisubrs
cltd
daa
nop
icebp
adc
test
mov
das
mov
sub
jg
sub
sbb
pop
xor
cltd
int
xor
xchg
or
xchg
sbb
rcl
xchg
out
mov
call
test
mulb
sbb
add
sub
adc
cmp
ret
push
repz
jb,pn
sbb
mov
push
loopne
jb
cs
cld
aad
jb
fistpll
inc
aas
adc
adc
push
dec
jp
divb
dec
pop
daa
fsubrs
lods
addb
lret
in
inc
xchg
and
sbb
inc
pop
jl
xchg
add
dec
or
add
inc
gs
pop
icebp
lea
dec
mov
aas
cmpsb
xchg
inc
push
popf
pop
or
sbb
cmp
nop
imul
push
add
jge
addl
xor
jmp
scas
ds
and
sbb
fsubrp
push
stos
loopne
cmpsl
mov
sahf
adc
sbb
push
loope
xchg
mov
mov
icebp
jmp
cmp
scas
xchg
mov
not
jne
aaa
pop
and
jno
jecxz
outsl
test
mov
in
pusha
dec
rorl
imul
pop
and
or
ret
sbb
push
fstps
lcall
imul
mov
cmp
jmp
sub
cmp
push
inc
rcll
push
inc
push
sbb
lock
insl
mov
dec
cmp
sub
adc
dec
adc
push
jmp
in
pusha
sub
mov
sub
scas
mov
lods
out
and
pop
inc
hlt
scas
gs
mov
inc
jle
sbb
in
stos
lds
sbb
mov
mov
lds
or
push
in
or
test
std
xchg
jmp
lret
mov
cwtl
cmp
dec
jmp
scas
inc
sbb
movsl
iret
xor
in
hlt
cmp
lods
stos
cmp
pop
sub
dec
push
cmpb
fwait
fwait
mov
and
lods
jbe
push
adc
rorl
pop
xchg
in
sbb
cmp
fcoml
cmp
inc
inc
insl
std
xchg
push
mov
sbb
in
in
mov
dec
xchg
lret
adc
jb
faddl
cmpsb
pop
adc
add
sarb
fs
nop
into
sub
xor
mov
sub
mov
push
mov
fsubl
enter
sbb
mov
ja
pop
jmp
insb
push
push
shll
xor
push
push
push
and
xchg
sti
and
jp
xchg
or
cwtl
popw
push
lock
mov
addr16
iret
adc
repnz
mov
into
je
shll
loope
jno
mov
hlt
ret
xchg
imul
dec
out
shll
mov
ficomps
mov
mov
xchg
pushf
dec
and
leave
add
sbb
das
sahf
sbb
test
pop
xchg
and
mov
and
pop
insb
ror
pop
mov
outsl
jbe
es
ds
xchg
inc
pop
and
cltd
inc
leave
stos
and
and
ljmp
lahf
add
bound
lds
movsb
pop
adc
out
in
xor
hlt
mov
pop
xchg
stos
dec
std
in
dec
mov
loope
ret
cmp
lds
mov
push
sub
mov
movsb
pop
neg
sbb
scas
xchg
in
xlat
divb
or
in
xchg
jo
pop
mov
jnp
fadd
push
xchg
cmpl
jae
xchg
in
test
fmulp
and
sbb
mov
pop
stos
jmpw
out
mov
xor
mov
mov
pop
mov
in
jmp
sub
sbb
ja
push
popf
loope
cld
negl
int3
xor
cmc
inc
push
mov
push
aaa
cmp
aaa
mov
clc
xor
dec
xor
push
rclb
pushf
push
push
outsb
sti
xor
cltd
loopne
cmp
mov
dec
clc
or
jecxz
inc
sub
and
push
xchg
lcall
pusha
aam
aad
mov
push
mov
repnz
popf
jns
jo
hlt
jo
inc
rcll
pop
mov
mov
and
push
ss
mov
jo
lds
data16
rcrb
stos
mov
ret
stc
mov
fisubrs
sbbl
shl
lea
adc
mov
or
mov
movl
shrd
adcl
shr
cmpl
mov
movl
movl
jmp
mov
movl
cmpl
jg
push
pushl
call
and
sub
orl
adcl
mov
mov
add
xor
xor
xor
mov
add
mov
mov
add
mov
sub
mov
xor
mov
xor
addl
or
subl
shl
and
imul
mov
mov
shrd
sbbl
mov
sbbl
mov
adcl
xor
shr
adc
mov
mov
xor
movl
or
adcl
shl
orl
sub
mov
movl
cmp
not
mov
movl
jg
mov
xor
mov
sbbl
shrd
sbbl
mov
mov
xor
orl
shl
xor
andl
or
shr
or
mov
mov
cmpl
mov
mov
not
jmp
movl
cmpl
ja
push
pushl
push
call
orl
add
adc
xorl
sbb
cmpl
movl
mov
mov
jmp
mov
cmpl
jge
pushl
pushl
call
incl
mov
mov
sub
imul
xorl
mov
mov
sub
mov
mov
sub
and
mov
subl
mov
shrd
shr
mov
xor
xor
sub
mov
inc
mov
addl
xor
xor
xorl
or
xorl
shl
andl
imul
addl
sub
jmp
addl
mov
cmpl
movl
mov
movl
jmp
movl
movl
cmpl
jae
push
push
call
add
adc
add
andl
dec
xor
or
add
mov
add
mov
xorl
shrd
mov
cmpl
mov
mov
jmp
movl
movl
cmpl
jb
push
push
call
not
adc
neg
mov
mov
sub
mov
xor
or
sbb
cmpl
mov
notl
jmp
movl
cmpl
jb
push
pushl
pushl
push
pushl
call
sub
subl
orl
adc
sub
movl
mov
xor
shl
adcl
xor
xorl
or
shr
mov
sub
mov
jmp
xchg
stc
xchg
out
insb
push
jbe
push
stos
test
sbb
sahf
adc
sbb
mov
loope
dec
mov
addr16
push
test
mov
push
test
jl
test
pop
shlb
in
xchg
cmpsb
aam
mov
call
out
test
push
mov
scas
mov
fwait
dec
lahf
cmp
jg
push
popa
outsl
rcl
jl
xchg
aam
loopne
or
call
mov
pop
imulb
sahf
sub
xor
xstore-rng
cmpsl
inc
inc
xor
mul
push
gs
or
push
xor
sub
mov
and
sbb
xlat
xor
scas
xchg
lcall
inc
and
xor
sti
inc
adc
mov
push
rol
fistpl
or
sub
lret
jp
jo
aam
int
add
cmp
insb
xchg
test
sub
dec
and
fld
loope
pop
inc
push
cmp
rorb
mov
inc
xchg
inc
gs
jle
das
pop
test
xor
pop
aad
idivl
cli
clc
jae
ret
mov
xchg
popf
and
jo
mov
test
mov
roll
out
out
mov
fwait
loope
xchg
xchg
jmp
mov
fnstenv
sub
push
fisubs
pop
cmp
cmp
mov
inc
mov
lcall
push
mov
movb
mov
sub
or
test
sarb
inc
or
aas
divb
mov
or
leave
clc
popf
mov
inc
push
in
jmp
jns
add
pop
bound
mov
leave
mov
ljmp
movsb
lret
ficomps
xchg
adc
insb
and
loopne
div
ffreep
js
sbb
clc
bound
xor
pop
lret
sub
and
push
cs
cltd
sbb
scas
xor
pop
mov
ja
aaa
mov
adc
aad
mul
dec
jge
jns
pop
imul
mov
scas
or
das
ror
cmp
int
push
xor
hlt
bound
mov
dec
mov
imul
push
mov
mov
cli
dec
in
push
mov
push
test
jmp
les
lcallw
mov
loope
aad
sub
and
xchg
mov
mov
lea
mov
push
cwtl
jnp
dec
push
push
jp
jl,pt
dec
test
xchg
jge
sbb
and
fldl
add
or
ja
jbe
mov
into
lods
popf
pop
cwtl
clc
sbb
loop
pop
fstp
loop
pop
and
cmp
dec
xor
jns
and
sub
jl
xchg
cmc
loope
jnp
inc
inc
imul
mov
out
outsb
in
push
lock
in
or
push
dec
sub
addr16
into
dec
mov
mov
int3
xchg
or
lds
into
gs
push
mov
xorb
xor
pop
out
lahf
mov
sbb
pop
in
cmp
insl
jo
cltd
pop
stos
adc
into
xor
into
shlb
pop
jle
jmp
lods
and
mov
dec
lret
pushf
mov
inc
test
inc
les
lahf
pop
mov
or
mov
xor
sub
stos
es
mov
in
arpl
jne
jle
push
push
add
sbb
mov
cmpl
movl
mov
mov
jmp
mov
movl
cmpl
jb
push
call
adc
orl
negl
sub
sub
mov
mov
shrd
shr
mov
mov
mov
xor
xor
or
shl
add
add
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
movl
mov
jmp
ret
scas
sar
fcmovb
scas
mov
jl
hlt
movsl
mov
sahf
adc
sbb
push
loope
xlat
inc
adc
mov
xor
pop
jl
mov
scas
lods
mov
sub
ljmp
sysenter
inc
xor
insl
scas
mov
jae
hlt
inc
jb
bt
or
lods
ret
sbb
cmpsb
cmpsb
test
les
xor
jns
mov
sbb
mov
imul
xchg
jge
enter
xchg
and
dec
js
dec
mov
es
rcrb
xchg
sbb
cwtl
mov
clc
jbe
xor
in
push
cmp
fs
mov
dec
jno
sti
sbb
xchg
sahf
repz
xchg
stc
jecxz
aad
sub
mul
xchg
mov
out
or
and
mov
arpl
pop
mov
shlb
and
sbb
jno
mov
xlat
and
mov
scas
jecxz
sti
pop
das
push
out
cmp
mov
xchg
pop
add
push
cmc
adc
dec
fcomps
int
xchg
ja
aas
sub
lods
cmp
outsl
xchg
xchg
enter
sub
lock
dec
or
push
mov
outsb
push
pop
test
push
push
sub
test
add
mov
mov
lock
repnz
mov
enter
adc
lcall
stos
jecxz
in
movsb
shlb
out
xchg
and
and
leave
jnp
mov
insb
xchg
or
rcrb
dec
dec
mov
fcoms
adc
aas
repnz
dec
inc
and
pop
mov
jge
stos
push
icebp
outsb
int
insl
pop
sub
mov
pop
xchg
call
dec
in
lds
clc
mov
xor
xchg
and
fldt
notl
fdivrp
lret
adc
lcall
pop
je
fdivs
and
mov
xor
inc
dec
dec
adc
shrb
cmp
divb
mov
into
lods
jmp
jmp
lods
shr
sbb
dec
xor
stos
sbb
out
fmull
imul
les
lds
insl
or
pop
add
test
ret
aas
jns
cwtl
mov
cmp
ficompl
je
jecxz
pop
sahf
ret
mov
mov
clc
outsb
mov
cmp
push
adc
in
popa
cmp
ret
push
fcompl
xor
push
sub
inc
mov
mov
lahf
jl
lahf
pop
push
push
jecxz
stc
stos
stos
iret
aad
add
stc
stos
dec
cmpsb
and
or
mov
nop
inc
cltd
lahf
pop
or
and
mov
xorl
notl
pop
enter
xchg
ret
cmp
and
cmp
sti
cmpsb
xchg
adc
xor
frstor
sbb
add
push
or
mov
je
shlb
arpl
aaa
or
xor
movsb
jle
inc
add
jge
xchg
pusha
and
fs
or
fstl
mov
pop
inc
mov
cwtl
ljmp
stos
into
dec
into
or
and
sahf
xchg
iret
mov
jbe
xor
mov
jmp
insl
loopne
sti
aas
dec
cli
xchg
and
cwtl
int
cld
add
repnz
dec
test
sub
ret
lea
xor
mov
inc
xor
push
xor
mov
aas
xchg
movsb
mov
movl
mov
movl
mov
movl
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
jmp
cmp
lock
shll
inc
jge
repnz
sbb
sub
mov
imulb
decb
clc
mulb
ss
push
mov
lret
mov
xchg
addb
mov
sbb
jnp
cmpsl
cmp
fdivrl
fsubl
ja
fs
jne
in
mov
and
imul
xor
jno
add
imul
sub
call
in
divb
xor
mov
sub
sub
adc
icebp
or
pop
daa
cltd
repz
dec
push
pop
fmuls
pop
loopne
addr16
insl
testl
data16
dec
inc
lods
push
pushf
lock
xor
inc
dec
scas
jae
lret
and
or
fwait
stc
cmpsl
push
push
xor
push
mul
xchg
jg
sbb
push
xchg
or
and
das
sbb
popf
and
ret
jge
pop
es
dec
cmpsl
movsb
xchg
nop
loop
xchg
popf
repz
adc
jo
xchg
adc
int
movsb
je
lcall
hlt
fwait
movb
xlat
lret
jbe
mov
das
cwtl
pushf
outsl
icebp
add
aam
adc
jbe
mov
js
aas
in
vmread
setno
gs
push
gs
inc
int3
add
mov
pop
xor
push
xor
mov
pop
ja
mov
sub
xchg
cs
push
pop
and
fsubl
mov
fsubrs
testl
jnp
cmp
mov
icebp
pop
hlt
inc
adc
xor
sti
add
in
cld
pop
mov
scas
push
adc
xor
int
test
pop
test
movsb
sub
pop
lahf
mov
fimuls
or
stos
lahf
cmp
mov
or
and
push
jno
les
mov
inc
mov
pop
pushf
and
inc
adc
sbb
xchg
push
test
jecxz
pusha
inc
push
shrb
mov
and
ljmp
adc
fwait
daa
pusha
push
out
pop
pop
fisubrl
inc
lods
out
xchg
sub
bound
fs
mov
clc
sarl
mov
je
sub
cmp
sahf
int
push
je
enter
lods
lahf
loop
sub
fildll
mov
jb
cwtl
xor
cs
lock
addr16
clc
push
std
stc
pop
loopne
pushf
mov
mov
out
dec
mov
cld
or
add
jle
sub
mov
xlat
mov
jno
pusha
sbb
aam
test
mov
insl
rclb
and
pop
fisttpl
fadds
and
cmp
cld
xchg
jno
pop
es
lea
icebp
loop
add
and
insl
std
lea
sub
cmpsb
std
mov
enter
jo,pt
push
in
and
mov
lret
daa
in
lea
or
in
cmpsb
cmpsb
mulb
cmc
jle
ds
or
es
adc
sbb
push
xchg
sti
ja
repz
mov
sbb
outsb
pop
popf
fidivrl
cli
mov
clc
jo
xchg
jae
jo
sub
pop
rorb
sbb
add
mov
test
insl
dec
jle
jae
shll
movsl
cmp
clc
lcall
xchg
insl
mov
and
dec
push
cmp
xchg
mov
inc
jecxz
add
pop
mov
out
sub
and
ret
mov
lods
xchg
addr16
jbe
repz
enter
test
push
nop
mov
lea
mov
mov
mov
shrd
shr
mov
mov
shl
mov
xor
xor
jmp
sarl
mov
lds
stos
xor
xchg
mov
sahf
adc
sbb
add
aas
das
pop
xchg
jae
xor
push
jo
pop
push
mov
jmp
xor
cmovp
jae
dec
adc
fisttps
dec
fwait
push
add
lea
jmp
mov
roll
and
mov
mov
sub
in
mov
sbb
cmp
dec
decl
mov
mov
and
ficompl
mov
cs
adcb
cmp
push
mov
jg
mov
jns
imul
push
lods
filds
pop
fldcw
cs
int
or
adc
shlb
cmp
repz
push
les
jecxz
sub
bound
push
sbb
cwtl
sbb
stos
into
gs
inc
repnz
sbb
js
cmpsb
lods
mov
sub
xor
ljmp
addr16
mov
xchg
pop
mov
mov
add
pop
rorl
push
lods
cmp
imul
imull
mov
push
add
or
and
jb
cvtpi2ps
push
push
push
mov
into
test
inc
call
ljmp
pop
dec
jle
imul
es
int3
sbb
bound
sub
sbbl
stos
add
push
or
not
stos
or
push
scas
cmp
jmp
inc
outsl
dec
loopne
loopne
jle
mov
mov
mov
ror
ja
pop
pop
push
jmp
in
iret
in
stos
dec
das
imul
cli
daa
addr16
sub
cmp
xor
mov
fdivrs
lock
imul
std
or
inc
xchg
or
jae
outsl
loop
mov
scas
adc
imull
rcll
cmp
dec
test
cmp
dec
mov
pushl
sbb
cmpsl
cld
sbb
jp
mov
stos
or
or
pop
cli
aas
xor
imul
pop
jae
in
mov
mov
pop
xchg
das
add
pop
jle
inc
es
popa
jns
push
adc
ss
push
scas
fs
enter
sahf
dec
cmp
sub
inc
add
int3
dec
addb
arpl
sbb
adc
xchg
jecxz
lds
mov
ja
push
xchg
add
fdivrl
and
add
jle
mov
inc
and
aad
stc
xor
popa
pop
fnstsw
push
jmp
and
call
push
jp
imul
hlt
stos
and
xchg
xor
push
and
push
pop
or
imul
insb
stos
cmpsb
out
ds
dec
and
sbb
xchg
pop
pusha
imul
push
pop
mov
addr16
aam
cmpl
sbb
shrl
repz
cltd
insl
in
push
cs
lods
adc
lret
mov
mov
lds
mov
push
and
shlb
fidivs
mov
fidivl
sbb
mov
lods
mov
pop
in
xchg
dec
lret
imul
cltd
test
movsb
je
enter
aad
push
xchg
xlat
inc
push
mov
push
push
fcmovnb
dec
loope
enter
adcb
sahf
jmp
mov
xor
pop
push
das
mov
mov
mov
xor
mov
or
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
lea
mov
mov
mov
shrd
shr
mov
mov
jmp
push
sbb
sbb
aas
xor
lcall
sbb
loopne
aas
adc
xchg
add
xor
je
xor
xor
push
lgdtl
movb
pop
stc
adc
lods
xchg
push
repz
xlat
icebp
dec
rorl
stos
in
push
sub
pop
shll
bound
push
enter
sbbl
lods
in
push
lret
pop
push
rorl
pop
cltd
or
aaa
cs
mov
pop
dec
mov
test
mov
mull
outsb
lahf
xchg
imul
or
jp
out
mov
jle
fisubl
adc
add
lods
jle
sub
outsb
mov
outsl
jle
sub
and
jp
jno
enter
sub
insb
add
mov
pop
pushf
adc
repz
fistl
cwtl
imul
imul
inc
push
sub
push
or
lcall
dec
aas
clc
outsb
inc
jmp
fldl
bswap
sub
fildll
jno
jae
lahf
in
enter
mov
outsl
xor
pop
insl
xor
subl
mov
pop
sub
inc
mov
cs
outsb
jge
adc
ljmp
add
pusha
cli
sub
cltd
mov
hlt
fadds
inc
insb
nop
push
aad
pusha
js,pn
dec
test
loopne
lcall
pop
ja
jb
aad
imul
test
lahf
inc
inc
mov
mov
js
push
pop
xor
int3
cmp
fnsave
adc
jge
cmp
negb
mov
lss
and
lret
sub
in
cmp
lret
and
je
xchg
cld
mov
mov
lcall
repz
andl
sbb
and
test
call
dec
lea
fisubrl
xchg
adc
rcr
or
or
cli
jmp
ret
outsb
cmp
xchg
ret
ss
stos
iret
and
sbb
ret
cld
lea
xchg
mov
cmp
push
iret
in
sub
mov
mov
jle
mov
cltd
jge
push
jge
or
push
pop
roll
cmp
scas
mov
pop
dec
sub
push
lcall
sbb
rol
pop
xchg
rcrb
mov
dec
mov
jg
fwait
imul
or
lock
mov
pushf
mov
adc
jns
inc
or
cmp
test
mov
cmp
in
jg
jnp
pop
fs
inc
sub
fwait
xor
mov
dec
mov
shrl
std
out
sbb
fstps
gs
mov
mov
out
dec
gs
and
xchg
adc
inc
lods
and
insl
fcoml
out
lcall
rcl
popa
mov
xchg
testb
mov
lods
rol
and
fcoms
mov
xchg
add
mov
xchg
and
pop
jmp
push
push
sti
add
xor
ljmp
xchg
dec
jb
adc
mov
add
pop
pop
shll
xor
inc
pop
test
aaa
movsb
push
adc
call
out
notl
and
sysret
arpl
in
dec
pusha
add
mov
sbb
push
in
sbb
sub
push
sub
loope
mov
xor
xor
or
mov
mov
or
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
lea
mov
mov
mov
shrd
shr
mov
mov
xor
jmp
arpl
test
ss
scas
addr16
test
sbb
or
sbb
jnp
jmp
fwait
popa
cmp
fldcw
sbb
xchg
jae
mov
xchg
xlat
sub
add
std
mov
ret
push
leave
jo
aas
push
lods
sub
mov
scas
fcomps
push
xor
testb
mov
loope
add
pusha
pop
mov
or
xor
and
dec
out
pop
cli
adc
push
fcmovbe
lods
mov
cmp
or
sbb
es
adcb
ja
das
xchg
mov
dec
pop
rclb
mov
sub
jl
cmpl
iret
movsb
add
call
lea
jle
jnp
insl
pop
and
inc
xchg
ds
dec
push
pop
pop
sbb
xchg
outsl
adc
aad
adc
aaa
or
or
iret
push
mov
dec
mov
sbb
loopne
inc
ljmp
test
sbb
add
sbb
dec
add
fs
scas
movsl
cwtl
gs
mov
pop
xor
pushf
je
dec
lahf
scas
push
sahf
ret
mull
pop
test
push
mov
dec
lock
mov
jo
sub
insl
les
in
xor
sub
ficompl
aaa
adc
repnz
insl
mov
sbb
mov
lods
xor
call
xor
inc
call
xor
adc
xor
stos
nop
mov
cld
mov
dec
xchg
loop
fldt
mov
hlt
arpl
fmulp
icebp
jae
out
xchg
inc
sub
mov
rorl
push
xchg
cld
mov
addr16
xchg
insl
xchg
dec
test
push
mov
dec
stos
mov
lds
mov
adc
clc
inc
clc
xor
sbbb
mov
mov
pop
mov
mov
std
inc
push
pop
jge
inc
push
add
in
mov
cmp
xor
movsb
pop
loop
bound
fisubrl
push
movsl
dec
movsb
pop
in
mov
inc
cli
and
mov
and
insb
pop
insb
out
sbb
mov
lods
cmp
sub
and
shrl
pop
sarb
sti
cmp
iret
fstps
jb
and
filds
or
mov
mov
mov
dec
outsl
add
inc
shl
sub
dec
sub
mov
imul
mov
call
cmpsb
or
cwtl
fisttpll
and
lock
clc
cmp
in
lcall
push
loop
call
push
inc
pop
sbb
pushf
mov
add
cwtl
outsl
inc
outsb
or
inc
add
pop
jbe
xchg
neg
adc
ja
cwtl
mov
or
xchg
test
push
outsl
jns
adcb
mov
mov
movsl
leave
lods
shl
insb
sbb
mov
mov
call
mov
jecxz
addb
mov
aas
push
pop
shrl
std
pop
mov
aas
divl
lret
push
add
in
sbb
in
test
mov
ds
ja
negb
sbb
inc
das
mov
pop
test
push
fwait
cwtl
xor
cltd
pop
stos
xor
mov
lods
korw
jge
mov
adc
andl
adc
int
aam
adc
ficoml
arpl
lds
arpl
add
mov
xor
loope
mov
xor
or
mov
mov
add
mov
mov
shrd
shr
mov
mov
xor
xor
or
lea
mov
mov
shl
mov
shrd
shr
mov
mov
xor
xor
or
mov
shl
mov
mov
mov
or
mov
jmp
fcmovnb
int3
xchg
lods
jnp
sbb
jns
stos
or
sbb
lock
or
mov
pop
xchg
jo
daa
ss
cmpsl
in
decl
mov
sub
shll
fstpt
jne
dec
mov
cli
mov
shlb
rcrb
cld
rcrb
jle
fildl
pop
test
adc
cwtl
lods
into
xor
xchg
jp
dec
insl
dec
sub
mov
mov
add
ja
xchg
xlat
xchg
xchg
out
and
mov
in
push
sub
dec
lea
mov
lods
pop
icebp
push
add
cmpsb
sbb
sub
outsl
jns
xor
into
mul
addr16
jbe
and
mov
mov
mov
loope
mov
push
shll
push
aaa
outsb
jmp
and
aad
xorl
inc
push
xchg
imul
xor
sbb
in
jecxz
jne
cmpsl
ljmp
lahf
fcom
into
sub
cs
sub
rcl
mov
cmp
out
lea
test
and
cli
fcmovnbe
call
lret
mov
push
aam
loopne
inc
push
outsl
adcb
sahf
sub
mov
cmp
add
pop
aad
xchg
lds
cmp
jae
adc
test
int3
xor
pushf
cmp
and
movsl
imul
or
push
fmuls
push
pop
scas
sbb
or
mov
add
jge
in
jno
xor
pop
cli
in
dec
add
int3
jns
mov
aaa
insl
pushf
mov
popf
sbb
inc
xor
fildll
popf
repz
popa
push
push
scas
and
cmp
and
dec
jnp
lahf
xchg
fmul
inc
push
shl
insb
aas
or
pop
xchg
sahf
mov
and
iret
fbstp
jp
movsb
outsb
cli
mov
or
cmp
loope
gs
or
test
out
add
jno
jg
sub
outsl
sbb
sub
jge
push
notb
or
xlat
fsubrl
repz
rcll
push
jae
mov
mov
and
pop
jo
fnstsw
xchg
insl
pop
push
mulb
mov
and
cmp
jbe
loop
sub
inc
adc
cmp
dec
dec
scas
cmpsl
xlat
cmp
pop
clc
mov
inc
lcall
int3
int
add
sbb
mov
aad
cmp
lret
in
in
mov
push
call
imul
cltd
inc
aam
and
inc
inc
jg,pn
or
add
icebp
pop
push
roll
cmp
pop
mov
mov
daa
pop
sahf
sub
ljmp
xor
sarl
ficompl
cltd
jnp
pop
aad
ss
push
aaa
pop
inc
sarb
je
pushf
mov
xchg
mov
mov
movsb
cmp
sub
mov
jno
jg
hlt
mov
rclb
or
xchg
in
scas
xchg
mov
nop
out
js
mov
shrl
dec
fs
mov
or
imul
stos
addr16
sahf
mov
dec
cmp
rclb
sarl
leave
aad
push
ds
mov
pop
jge
call
xchg
dec
fcomps
pop
outsb
test
dec
pop
std
loope
into
fisubs
jns
lods
add
or
adc
ret
sti
push
int
mov
cmp
stc
bound
adcl
mov
shrd
shl
shr
mov
mov
xor
mov
xor
or
mov
dec
not
and
xor
mov
mov
xor
or
mov
jmp
fiaddl
mov
sub
jnp
mov
cmp
mov
test
sbb
xchg
bound
popf
call
stc
cmp
jbe
mov
stos
in
mov
push
mov
out
dec
test
in
shlb
out
data16
test
mov
cmp
adc
xor
in
push
notl
psubsw
jle
aas
jnp
aad
and
sbb
mov
xor
test
in
insb
loopne
fildl
mov
mov
testl
push
int
and
nop
cmp
push
pop
sar
mov
xchg
xchg
cmp
loop
lods
jl
pop
aaa
adc
fsubrs
adc
adc
shll
aad
dec
xor
call
hlt
pop
sbb
rcrb
mov
or
nop
outsb
xor
mov
adc
mov
push
je
and
and
push
and
mov
and
xchg
arpl
stos
add
stos
ds
fnstenv
mov
jnp
adc
fwait
inc
xchg
push
lods
icebp
fninit
mov
mov
mov
push
arpl
fists
roll
jae
jl
cmp
loope
add
and
cmp
lcall
add
jmp
mov
xchg
dec
btr
jns
insl
sbbl
mov
lret
inc
in
mov
dec
xchg
push
push
dec
xchg
xchg
jb
mov
cmpsb
pop
inc
adc
cwtl
cmp
cli
pop
loope
in
loop
mulb
pop
push
call
out
xchg
mov
and
imul
push
inc
add
ret
mov
xchg
insb
mov
jp
xchg
ja
insb
lcall
mov
popa
push
xor
testb
not
aam
adc
push
adc
mov
aaa
int
test
pop
inc
jne
jae
and
jne
imul
lods
inc
lcall
push
jg
mov
test
std
dec
adc
push
xor
mov
rorb
push
sbb
mov
leave
ja
dec
int
cmc
add
jp
xchg
adc
push
mov
and
pop
or
lock
xchg
xchg
mov
cmc
mov
int
adc
mov
int3
popa
pop
jb
outsl
push
popa
dec
or
or
sub
in
inc
negb
out
enter
fidivs
fs
pop
aas
gs
sbb
xchg
mov
inc
sahf
sub
or
mov
push
pop
xchg
xor
repnz
cmp
loop
popf
loop
fisubrs
lock
cmp
int
ficompl
adc
add
xor
mov
cld
add
fisttpl
or
fs
inc
push
pop
cmp
mov
stc
int3
test
clc
imul
fcoml
fcompl
pop
das
dec
in
xor
xchg
dec
xor
sub
jo
es
mov
out
or
lock
and
out
lret
sbb
rolb
or
mov
xchg
fdivl
xchg
mov
daa
stos
xor
mov
jb
pop
aam
or
into
fstl
push
imul
ret
loope
adc
pop
aaa
ljmp
imul
mov
jbe
rol
int
int3
sub
mov
aam
iret
sbb
push
dec
nop
add
mov
ja
test
in
data16
sub
movsb
jmp
mov
mov
enter
add
enter
mov
xor
mov
xor
shl
mov
or
mov
cmp
je
mov
sub
mov
mov
xor
xor
shrd
shr
mov
mov
mov
mov
xor
or
mov
mov
mov
xor
xor
jmp
mov
jg
cmp
sbb
or
mov
das
fistpll
jge
sbb
mov
stc
jae
repnz
stc
push
push
fs
and
int3
mov
mov
sbb
aaa
lds
mov
cwtl
inc
add
push
jb
mov
dec
pop
lock
icebp
push
xlat
lods
pop
jp
les
add
or
repz
jb
fldt
lock
clc
imul
popa
pop
and
or
es
pop
ljmp
cltd
pop
sub
cmp
aad
pop
inc
dec
sub
ds
add
xlat
mov
mov
out
popa
aas
mov
or
inc
cmpsb
push
rcr
es
rolb
lods
pushf
in
mov
and
std
mov
out
add
dec
dec
and
xchg
cwtl
ss
jl
push
push
loope
adc
pop
cmp
dec
and
rolb
and
aas
xchg
scas
jle
sub
sbb
sbb
out
ds
mov
cmpl
xchg
sbb
mov
mov
pushl
adc
adc
pop
push
js
inc
mov
lock
fs
ja
xlat
jb
jmp
idivb
adc
fcmove
lock
or
into
out
sbb
cmpb
jge
imul
sarb
mov
mov
dec
mov
testb
mov
xchg
test
push
adc
mov
int
fildll
push
nop
sahf
cmc
pusha
outsb
repz
out
mov
push
sbb
dec
mov
sbb
and
int
insl
out
dec
pop
in
mov
sub
sbb
jmp
lret
dec
cld
leave
mov
adc
cli
mov
push
mov
shl
insb
pusha
cmp
negl
xchg
mov
sub
lret
sbb
cmpsl
fs
into
fsts
loope
and
jmp
sti
dec
jl
xcrypt-ecb
cmpsl
mov
movsb
aas
mov
cmc
mov
shlb
shll
ljmp
adc
orl
ficomps
sti
sbb
test
dec
mov
aas
cmpsl
add
jo
mov
test
loopne
xchg
divl
inc
sub
repz
pop
shlb
imul
xchg
inc
and
inc
das
aas
push
lock
cwtl
xor
mov
push
lods
add
pop
in
cmp
jne
mov
xchg
mov
adc
lock
push
fsubr
inc
sbb
add
mov
cld
fisttpl
push
sub
subb
int
lret
cmp
movsb
cmp
jg
subb
repnz
rorb
ds
sbb
xchg
xor
out
stc
xlat
dec
test
test
and
sub
shr
push
xchg
pop
outsl
out
or
test
in
mov
mov
lahf
pop
dec
jb
pop
sbb
or
loopne
cs
mov
ja
imul
xchg
popf
std
sarb
mov
push
stos
dec
fsubrl
mov
xor
sbb
lods
pushf
cmpsb
and
sub
dec
stos
lret
cmpsb
mov
push
sbb
out
sub
cmc
xor
fdiv
xlat
inc
inc
jl
mov
inc
es
or
push
cwtl
into
pop
push
jge
cmp
dec
mov
fs
lock
push
enter
or
cmc
mov
addr16
jnp
loop
mov
jmp
repnz
jmp
imul
pushf
pop
jle
cmp
mov
sahf
adc
sbb
fnstenv
pop
aas
aas
or
insl
lods
out
aad
movsl
clc
push
jnp
xlat
adc
dec
mov
cmpl
rorb
push
inc
inc
test
jns
xchg
repnz
lret
lcall
fnstenv
mov
lods
adc
push
push
mov
cmpsb
sub
insl
cmp
add
loop
sbb
aam
enter
fildll
jb
dec
imul
sbb
mov
fisubrs
dec
arpl
cmp
inc
push
mov
xlat
xchg
shll
aad
pop
mov
push
fisubrl
adc
mov
into
cs
scas
dec
cmpsb
aam
leave
scas
xchg
add
cmpsl
ja
loope
xchg
sbb
loopne
push
and
push
js
fcmovb
inc
sti
lcall
insb
inc
cmp
push
fisttps
js
jp
leave
jmp
fwait
sahf
jle
ljmp
lahf
int
gs
addb
ret
insl
jl
lds
cli
fmuls
sbb
push
movsb
cmpsl
sub
pop
mov
iret
test
shl
aas
mov
cmp
in
ficomps
jno
adcb
mov
lret
pushf
mov
mov
push
jg
xchg
xor
or
xchg
and
loope
lret
incb
cmp
ljmp
cmp
addl
push
cs
fsubr
adc
fmuls
add
pop
or
push
aam
into
dec
pop
jbe
add
sub
push
jbe
ja
mov
loop
std
mov
sub
pop
adc
dec
arpl
dec
aaa
jo
push
daa
cmp
scas
jg
cmp
add
aam
push
hlt
add
js
cmpsb
jmp
insb
lcall
inc
js
lods
push
ljmp
xor
and
lds
cmp
es
ficoml
mov
mov
scas
mov
jns
mov
fs
jns
mov
out
push
lock
pusha
mov
ror
sub
push
mov
pop
addr16
add
insb
adc
or
cmp
cmp
jl
out
adc
rorl
test
clc
imul
fucomi
fstps
insl
xlat
in
mov
mov
hlt
inc
call
push
jecxz
ret
lock
or
mov
out
lock
hlt
dec
int3
data16
enterw
sub
sub
andl
les
sbb
pop
push
or
orl
int
cmp
ret
jle
push
call
inc
lcall
jecxz
lcall
add
or
sub
jo
mov
addl
mov
mov
xchg
add
out
ljmp
insl
out
jmp
pushf
pop
lods
enter
sti
pop
mov
jl
dec
popa
jl
sub
imul
mov
pop
and
lret
stos
adc
negl
in
mov
jno
fisubs
jbe
rdpmc
pop
jmp
bound
dec
sub
aas
js
push
pop
cmp
xchg
mov
pop
inc
cmp
bound
sub
icebp
dec
cmp
clc
cmpsl
dec
xchg
mov
mov
jo
fisubrl
rorl
add
loop
xor
or
mov
mov
mov
shll
xorl
mov
mov
mov
xor
or
shr
or
cmp
jne
cmp
je
jmp
mov
mov
xor
xor
shrd
shr
mov
mov
mov
mov
xor
or
shl
xor
or
mov
mov
xor
mov
mov
mov
mov
xor
mov
mov
shrd
shr
jmp
push
dec
dec
testb
cs
sbb
jl
outsl
sbb
sahf
adc
sbb
test
je,pt
stos
nop
and
push
jns
lret
faddl
xor
test
jnp
rol
mov
cmp
pushf
aas
mov
fcomps
pop
cld
flds
inc
jo
aas
aam
mov
lret
mov
cmp
popf
pusha
push
stos
sarb
cmpl
outsb
loope
dec
lea
mov
jge
or
cwtl
mov
mov
imul
in
dec
mov
nop
xor
push
repz
fucomi
cli
in
outsb
cli
lahf
mov
fstl
or
subb
add
xor
ret
ss
cli
xor
fbstp
add
sub
pop
js
lods
into
mov
push
ficoml
mov
addb
rol
mov
ss
mov
mov
icebp
mov
int3
sub
popa
mov
and
int
pop
lea
push
and
pop
jecxz
lods
int3
mov
sahf
fisubrl
and
addr16
daa
je
dec
sbb
push
repz
test
push
mov
stc
xorb
mov
xor
adc
cmpb
dec
push
xchg
jg
nop
fwait
xor
pop
jl
out
test
dec
in
inc
mov
lahf
cli
fisttpl
test
insb
xchg
mov
bound
xor
icebp
adc
sub
dec
pop
mov
cmc
in
out
and
cmpsl
adc
orl
leave
adc
push
neg
cs
sbb
sbb
inc
ds
add
adc
xchg
cmp
test
add
dec
lds
in
and
cmp
inc
std
cld
jbe
jae
pop
jb
xchg
sarl
dec
ficompl
xor
lods
rcr
pop
xchg
mov
or
flds
mov
ficompl
adc
fidivrs
inc
ja
mov
movsb
adcl
jbe
mov
out
fsub
cmp
mov
sbb
mov
jp
and
push
sahf
stc
addb
lods
aam
cmpsb
xchg
dec
mov
push
push
test
inc
movb
scas
lods
sbb
cld
push
mulps
xchg
bound
adc
test
std
fs
mov
pop
or
je
lods
mov
xor
lods
ret
repz
das
push
test
mov
mov
pop
push
shufps
dec
sub
jo
je
pop
scas
jge
in
jns
les
pushf
or
outsl
cwtl
je
sbb
stos
popa
dec
leave
ja
inc
lods
std
mov
jnp
nop
sarb
dec
loope
pop
aad
xchg
addr16
loopne
or
stos
jnp
into
repnz
in
pop
je
jne
gs
in
push
push
movsl
fcmovnb
int3
mov
pop
pop
xchg
arpl
xlat
lock
movsb
clc
jns
cmpsb
inc
daa
leave
fs
aas
test
cmp
imul
mov
das
add
je
daa
mov
sub
mov
lods
adc
stos
cltd
and
push
icebp
jle
ljmp
nop
jne
push
sbb
mov
je
mov
inc
fstl
add
and
testl
imul
push
sbb
insb
mov
mov
popf
mov
xchg
popf
mov
or
icebp
push
inc
sbb
mov
or
mov
sub
sub
xor
out
jnp
ja
add
jp
call
push
mov
shll
xorl
xor
mov
or
mov
mov
mov
or
mov
mov
cmp
jmp
xchg
hlt
xchg
addr16
in
mov
dec
jle
sbb
sahf
adc
sbb
mov
cmpsl
inc
ss
xchg
sub
mov
add
cltd
out
cmp
sahf
push
aam
leave
adcb
outsl
xchg
pusha
cmp
inc
pop
popa
xlat
ss
shll
mov
adc
push
pop
iret
push
sbb
add
sahf
clc
or
out
fbld
imul
aam
inc
and
and
inc
std
and
mov
xchg
insb
pop
fdivrl
sbb
and
xchg
push
mov
push
test
mov
pushf
enter
sbb
cmp
or
mov
ljmp
mov
sbb
and
call
jno
pop
loope
jp
jl
and
inc
mov
callw
ret
add
hlt
pop
sahf
mov
bound
jle
mov
js
hlt
shlb
rclb
aam
ja
stc
daa
mov
push
jecxz
push
lahf
fcmovnb
and
movsl
fstpt
inc
xor
jne
and
mov
aas
dec
shll
divl
cmp
stos
xor
mov
outsl
push
cmp
loopne
sarl
mov
mov
or
jg
out
mov
inc
ret
xor
loop
mov
enter
icebp
and
ret
mov
cmc
insb
scas
jne
inc
cmpsb
sbb
ret
loop
cwtl
int3
and
mov
push
addb
jecxz
sahf
ja
and
sbb
pop
rcll
inc
push
movl
aad
pop
enter
shll
cmp
cmpsb
xchg
sahf
es
jl
xchg
rcll
js
push
mov
mov
sbb
leave
push
and
shlb
cwtl
mov
inc
mov
xor
sbb
fsts
and
dec
adc
cmp
ljmp
shll
cs
xor
fs
inc
sbb
iret
test
into
cwtl
and
fbstp
mov
das
popf
mov
xchg
pop
outsl
loopne
test
inc
sub
insl
stos
out
pop
xchg
jbe
dec
mov
jne
lods
lock
xor
adc
call
cmp
test
hlt
mov
in
inc
loopne
add
cmp
fwait
das
jne
push
push
insl
insb
mov
rol
cli
fmulp
repnz
mov
lea
popa
add
ret
test
or
popf
out
mov
inc
loopne
dec
imul
bswap
and
jbe
adc
jle
insl
insb
dec
mov
cld
gs
pop
push
push
pop
aad
add
xlat
fisubs
loop
sti
push
mov
mov
pop
nop
out
and
je
rclb
pusha
mov
fprem
add
pop
inc
das
adc
sub
and
bound
mov
inc
stc
push
in
cltd
stc
jmp
mov
pop
mov
rolb
filds
xchg
dec
rcrb
cmp
mov
gs
adc
clc
pop
icebp
shr
jl
movsl
shl
or
add
ljmp
and
fucomip
sbb
pop
add
popa
lock
jmp
mov
scas
pop
mov
std
stc
es
dec
je
jmp
ss
adc
mov
push
fcomp
aas
imul
jne
mov
cmp
je
mov
mov
mov
mov
lea
mov
mov
mov
jmp
or
jns
arpl
pop
faddl
mov
das
pop
sbb
sahf
adc
sbb
movsl
clc
hlt
je
sti
lret
das
stc
shlb
popa
cmp
sbb
nopl
je
mov
aam
fildll
inc
inc
lock
mov
shrl
mov
jp
mov
out
pop
popf
mov
jmp
jb
jns
or
daa
xor
stos
xor
cmpb
add
jnp
jbe
xor
mov
sub
cmp
fimull
mov
pop
aam
inc
mov
adc
stos
hlt
enter
mov
lds
into
loop
add
in
gs
ret
in
popl
ss
lret
inc
insb
sahf
and
mov
sarl
shlb
xchg
das
cli
xchg
xchg
ja
dec
fadds
lahf
scas
jns
scas
lds
dec
lock
lret
xlat
lss
jl
es
in
xor
and
mov
jmp
je
mov
cld
add
testl
rcll
je
rcll
outsb
inc
or
mov
icebp
push
add
mov
mov
mov
fsubs
add
outsb
bound
les
addr16
pushf
adc
lock
decb
and
inc
stos
daa
ss
lds
jmp
test
hlt
push
cld
aas
inc
ret
mov
out
pop
add
rol
lahf
mov
adc
stos
inc
pop
scas
popf
add
imul
daa
ret
shrl
orl
mov
cs
sbb
mov
in
inc
movsl
pop
or
pop
mov
outsl
inc
loop
lock
incl
push
outsb
pushl
and
mov
lret
fbld
push
xchg
cmc
sub
movsb
mov
shl
xor
add
in
sbb
flds
jb
push
sub
and
hlt
and
push
jmp
repnz
pop
sub
mov
jle
xor
sahf
lret
and
mov
pop
je
push
cmp
sub
xor
daa
mov
outsl
pop
xor
dec
push
pushf
or
inc
test
subl
jns
lods
cmp
jp
mov
mov
iret
cmp
cli
jnp
jp
int
aaa
mov
jmp
test
shlb
jb
fnstenv
sti
inc
mov
sbb
js
data16
lea
add
jg,pt
pop
es
fiadds
test
mov
testl
es
in
icebp
mov
jecxz
add
push
insb
outsl
mov
sub
push
push
xchg
xor
mov
in
mov
aam
repnz
mov
xor
jmp
jne
mov
test
fsubrl
rorl
je
ror
ficomps
ss
repnz
adc
bound
jmp
inc
mov
mov
in
pop
pop
xchg
cmc
out
fistpl
mov
shrl
outsl
repz
lahf
xchg
testl
pop
aas
add
aam
call
into
lret
cmpsb
push
icebp
mov
cmp
hlt
in
je
ds
int
mov
lods
cmpsl
sub
sarb
xor
push
dec
inc
insl
pop
stos
dec
or
lds
mov
popf
insb
inc
pop
shlb
mov
sub
out
outsb
insl
sub
lret
push
mov
jmp
pop
jno
mov
xchg
aas
mov
mov
sbb
sahf
adc
sbb
mov
adc
arpl
and
stc
cltd
xor
sbb
test
jne
ljmp
aam
mov
dec
iret
push
push
lahf
pop
movsl
jbe
xchg
testl
out
bound
cmpsl
jnp
dec
fbstp
sub
bound
imull
rcrb
cmp
sbb
jg
shlb
idiv
and
int3
mov
push
mov
pop
in
call
negl
clc
ss
roll
and
push
xchg
lods
movsl
inc
out
mov
pop
loope
jmp
sub
repnz
or
gs
orb
in
stos
fsubrs
test
jge
push
mov
lds
push
std
push
std
xchg
jno
lods
stos
add
clc
push
pop
leave
ret
push
xor
adcb
pop
xchg
popl
mov
xchg
xlat
icebp
loop
out
in
and
sbb
sbbb
cmp
add
pop
das
inc
negb
push
xor
sahf
imul
mov
mov
dec
cmp
ds
mov
in
out
cmpsb
mov
and
mov
sub
xor
fcoms
les
lods
dec
add
push
ret
mov
lea
icebp
adc
mov
push
sbb
out
inc
xchg
out
faddp
js
test
push
add
mov
xchg
xor
push
faddl
add
out
or
xor
popa
cmp
jl
test
pop
mov
dec
pop
mov
sti
dec
jno
fisubrs
or
test
mov
xlat
data16
add
push
sar
fldt
xchg
and
inc
shlb
or
decb
inc
leave
sbb
cmp
xchg
inc
push
dec
sbb
mov
pop
sub
jo
test
ror
outsl
andl
sbb
lret
mov
test
mov
filds
mov
dec
mov
jb
ror
fimuls
mov
mov
out
xchg
rcrl
inc
lcall
sbb
or
xchg
icebp
fisubrs
xor
inc
push
or
aas
mov
int
scas
sahf
popf
out
sub
jnp
mov
les
pop
xchg
ficoms
xchg
xchg
add
arpl
aaa
xor
jbe
pop
int
cwtl
scas
ror
repnz
or
in
cld
xchg
cmpsb
adc
dec
addr16
xchg
int3
and
js
inc
or
in
mov
ret
notb
out
mov
push
cld
pop
jge
fiadds
xor
sbb
adc
xor
fisttpl
icebp
push
js
jb
movsb
or
je
push
cltd
pop
ror
pushf
mov
inc
push
loopne
mov
or
adc
leave
addr16
add
out
xor
jmp
jbe
or
js
xor
mov
enter
aad
mov
push
and
dec
adc
lret
pop
dec
dec
adcb
and
dec
inc
ss
leave
adc
lea
jge
pop
cmp
out
out
in
dec
cwtl
pop
sar
subl
pop
bound
popa
das
xchg
mulb
xor
dec
jp
out
sahf
pop
pushf
sub
mov
data16
push
js
adc
test
test
add
sbb
mov
cltd
inc
mov
and
insb
shrb
jecxz
mov
mov
rolb
mov
mov
xor
shr
mov
xor
shl
or
mov
mov
mov
jmp
and
pop
jb
and
pop
aaa
mov
cmp
sbb
arpl
sub
mov
mov
into
jb
xchg
fdivrl
bound
push
jl
dec
scas
insw
call
cmp
lea
xchg
std
lret
scas
stos
cmp
and
adc
fcompl
mov
mov
push
lock
loop
cmpl
add
adc
inc
jo
mov
and
xchg
or
rclb
pusha
movsb
inc
shrb
jecxz
ljmp
lods
lret
or
divb
xchg
add
add
or
sbb
push
xchg
les
bnd
aas
int
mov
arpl
rorb
xlat
jb
lahf
adc
xchg
xchg
subl
push
sub
add
out
clc
push
ret
push
push
int
aam
arpl
mov
aas
shll
popa
test
push
js
xor
loopne
mov
push
repz
sub
insl
or
xchg
mov
scas
enter
insb
aam
call
and
xor
shrb
nop
testl
push
jmp
xor
repnz
fdivl
mov
insb
fsts
dec
ds
sub
or
cld
rorb
sbb
mov
xchg
cltd
mov
lods
ret
cmp
nop
in
jb
lds
fsubr
jbe
icebp
sub
mov
out
jp
sahf
jne
movb
jecxz
loopne
into
aaa
mov
jmp
cmp
cmc
sti
or
add
or
jno
inc
and
push
pusha
popa
insl
cmp
sbb
sbb
mov
stos
mov
into
cmpsl
notl
lds
std
cld
lds
xor
movb
pop
fs
xlat
dec
les
push
xchg
std
and
rcll
cli
xchg
loope
test
cs
stos
cld
mov
clc
jecxz
shrb
imul
add
ljmp
dec
test
fcomps
mov
fcom
adc
mov
and
dec
dec
inc
repnz
das
cmpsl
rorb
xchg
lcall
out
mov
pop
push
push
in
jmp
pushl
mov
add
call
insl
cmp
fimuls
cli
gs
movb
push
dec
mov
scas
mov
or
inc
inc
adc
in
jne
mov
mov
dec
clc
fiaddl
roll
add
jg
aam
lcall
das
sub
or
je
rcrl
add
test
sbb
icebp
inc
mov
adc
sub
mov
filds
inc
mov
test
mov
cwtl
loopne
xorb
inc
das
scas
gs
imul
imull
out
jnp
bound
mov
xchg
js
or
xor
aaa
stc
add
or
and
push
and
test
mov
mov
jnp
xchg
push
psrad
pcmpeqw
sbb
pop
ja
sti
adc
sarb
add
cmpb
mov
call
testb
xchg
cmp
dec
aad
insb
mov
mov
ljmp
xchg
inc
adc
cmp
ds
fxch
stos
das
jge
in
lcall
mov
lods
lret
aaa
mov
pop
dec
cmpsl
hlt
in
out
sbb
jo
inc
sbb
sbb
mov
mov
faddl
std
lods
pop
iret
xlat
aam
xor
shld
xor
mov
jmp
loop
es
mov
jl
dec
sbb
sahf
adc
sbb
cwtl
loopne
stc
aaa
fs
mov
mov
cmpsl
fnsave
clc
in
ret
inc
dec
aam
fcoml
les
mov
jge
inc
mov
outsl
pushf
testl
icebp
es
mov
or
addl
rcll
mov
push
sub
cmp
nop
xor
jmp
cmp
outsb
push
mov
xchg
in
mov
pop
ret
sub
das
jbe
mov
mov
shll
lahf
rcrl
call
dec
dec
pop
lret
and
lret
or
pop
inc
push
and
xor
cmp
mov
aam
in
add
cld
and
pop
sti
je
insb
aas
dec
in
sbb
popf
loopne,pt
decl
add
and
repnz
and
pop
inc
outsb
and
aad
pop
orb
cmc
dec
mov
lock
inc
or
dec
adc
fcompl
inc
lahf
je
seta
ja
fsts
loopne
or
cmp
xchg
sti
imul
movsl
mov
add
xchg
pop
jbe
push
daa
inc
inc
lea
scas
pop
mov
repz
int3
mov
add
sbb
hlt
cmp
or
icebp
mov
mul
gs
sub
cmp
test
in
adc
jg
sub
cmpsl
jg
icebp
jnp
mov
ret
fcmove
mov
pop
sahf
mov
arpl
pushf
mov
and
call
jle
inc
popa
dec
adcb
shrl
in
push
cmp
mov
fistpl
mov
dec
sub
lahf
fsubl
insb
jmp
mov
push
jne
xchg
arpl
mov
pop
pop
and
movsl
movsb
shrb
fstps
add
cmp
jg
in
popf
push
inc
push
stos
or
inc
and
pop
sbb
lods
adc
std
pop
shll
mov
imul
jg
aaa
mov
mov
call
xchg
pop
xchg
and
and
and
mov
xor
lcall
loop
xlat
iret
add
pop
mov
push
and
loop
push
xchg
lret
fadds
clc
leave
lock
jbe
mov
fldcw
push
std
in
xor
inc
push
aam
int
adc
popa
ret
cmpsb
dec
pop
jae
mov
aaa
push
fisubrl
xchg
or
mov
jae
ljmp
nop
cmc
ds
mov
cld
testb
pop
out
and
psadbw
stc
lahf
sub
and
jp
adc
rorl
push
inc
rcl
sub
mov
rclb
or
cld
sub
sbb
cmp
mov
jge
add
sub
dec
mov
push
push
jae
sub
push
sub
jge
repnz
dec
lcall
or
mov
bound
or
add
inc
mov
mov
mov
cwtl
xor
mov
lea
adc
std
sarl
into
lret
out
mov
mov
dec
filds
pop
dec
rcrb
lock
testb
negl
decl
in
ret
xchg
xor
std
aas
and
arpl
xchg
ds
mov
in
add
ret
mov
repz
pop
addr16
out
mov
shl
mov
mov
xor
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
mov
xor
xor
mov
mov
shrd
shr
mov
mov
mov
mov
xor
or
mov
shl
xor
mov
mov
or
mov
push
pushl
push
push
call
mov
mov
shrd
shr
shr
xor
push
xor
mov
mov
mov
push
push
push
call
shld
mov
xor
or
mov
mov
shl
or
xor
xor
xor
xor
mov
mov
jmp
mov
add
mov
mov
mov
mov
mov
mov
movzwl
cltd
shld
xor
mov
mov
shl
mov
mov
xor
mov
cmp
jne
mov
cmp
jne
movl
mov
movl
mov
movl
mov
movl
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
add
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
xor
mov
mov
shrd
shr
mov
mov
xor
shl
jmp
or
cmp
mov
loope
mov
sahf
adc
sbb
cmp
loope
cmp
lods
fwait
push
adc
pop
push
popa
sub
fisttpll
xchg
xlat
xor
pop
cmpsb
fdivs
mov
lock
cltd
inc
push
mov
and
mov
addb
mov
add
jg
out
into
jecxz
xor
out
rorl
jbe
mov
icebp
lahf
jg
movsl
and
je
mov
ss
or
aam
imul
pop
ret
lret
addr16
sti
adc
sbb
out
xchg
sub
mov
test
cmp
filds
mov
pop
inc
bound
jb
jmp
pushf
fcmovb
inc
mov
mov
nop
sahf
subb
pop
mull
jnp
sbb
inc
sbb
jbe
mov
int
mov
mov
cmp
cs
and
push
je
std
js
jo
in
js
sbb
mov
sub
mov
xor
test
add
test
shlb
gs
call
test
xchg
clc
movsb
jns
sub
scas
xchg
shll
and
lahf
pop
pop
sub
push
mov
stos
mov
dec
add
add
fadd
arpl
jae
ja
pop
add
inc
mov
sbb
lock
test
ret
sub
xchg
sahf
pop
adc
movsl
jmp
repz
stc
xor
dec
aaa
lock
cwtl
out
filds
or
insl
and
and
xchg
xor
or
or
add
in
insl
bound
mov
or
iret
or
mov
jmp
xchg
mov
andb
aam
and
int
out
cwtl
xor
test
add
enter
adc
or
ja
pop
int
daa
and
dec
sbbl
push
add
xchg
cmc
mov
aad
lcall
adc
icebp
jecxz
add
stc
cmp
jo
mov
dec
and
paddb
js
jmp
push
inc
xor
in
lock
mov
push
xor
scas
xor
popf
sub
push
inc
push
push
movl
sbb
jecxz
sub
add
repz
dec
push
sub
fcoms
fcom
clc
arpl
mov
jle
lcall
out
rcrb
push
inc
mov
repz
aas
mov
int
inc
or
out
dec
mov
cmp
dec
push
icebp
inc
pusha
pusha
lds
out
mov
add
xchg
sub
adc
fmul
sub
mov
push
les
pop
jo
mov
mov
test
ds
idivb
test
test
sbb
and
emms
aam
lock
int
clts
dec
pop
leave
fstpt
popa
mov
xchg
adc
ret
in
or
jae
stc
jle
aas
sahf
or
mov
sub
pop
jne
mov
push
jle
movsb
inc
push
pop
das
aad
fsubrl
das
outsl
iret
xor
mov
ret
leave
jecxz
out
pop
or
repz
xorb
out
outsl
lods
in
dec
sub
jle
jbe
inc
insl
push
jnp
mov
adc
mov
mov
push
cmp
in
mov
cmp
pop
aad
xor
or
add
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
or
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
shl
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
add
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
shl
mov
mov
shrd
xor
shr
mov
mov
xor
or
mov
or
shl
mov
mov
mov
mov
xor
xor
shrd
xor
or
mov
mov
mov
xor
xor
mov
mov
mov
shrd
shr
shl
mov
mov
mov
mov
xor
or
mov
shll
xor
mov
jmp
jbe
fstpt
insl
cmpl
jo
cmp
sbb
add
xor
push
addb
out
fsin
inc
stc
out
sub
cmp
pop
jb
dec
sub
xchg
jecxz
popf
pop
pop
add
sub
jno
lods
mov
js
clc
imul
mov
sti
and
in
push
and
dec
stos
gs
lret
insb
cmp
or
or
jl
insl
dec
dec
enter
out
cmpsb
or
aaa
fwait
xor
lcall
cltd
inc
push
pop
ja
and
dec
push
mov
and
inc
add
ja
push
gs
loopne
mov
fs
and
or
mov
mov
pop
mov
in
fistpl
adc
pop
fcoml
lret
ret
xor
xor
aas
stos
mov
in
fnstsw
mov
fbstp
scas
sub
pop
fdivrs
cli
fs
sub
xor
addr16
fdivs
enter
fcomps
imul
cmpsb
jnp
mov
mov
cmpsb
sbb
mov
insb
mov
lods
notb
jge
insl
and
cwtl
mov
fcompl
mov
divl
and
mov
sbb
xor
cmp
xchg
inc
xor
mov
push
pop
dec
push
inc
sub
xor
add
dec
lcall
das
test
rclb
scas
aas
mov
test
push
sahf
jg
aaa
and
sub
into
clc
push
cmp
out
push
cs
push
fstpt
mov
jbe
jno
xchg
cmpsl
js
mov
add
and
mov
leave
shl
jmp
loop
pop
test
cmp
xor
stos
test
out
add
dec
in
inc
mov
insl
std
mov
pusha
call
or
shlb
mov
je
ds
mov
cmc
lods
mov
cmp
mov
lcall
div
xor
test
jns
pop
dec
add
divb
loope
sbb
mov
add
pop
in
popf
dec
pusha
into
jmp
movsl
sbb
mov
je
fwait
outsl
repz
mov
cmpsb
jb
fsub
mov
idiv
pop
scas
loop
xchg
pop
pop
xchg
aas
xor
je
sub
pop
cmc
into
push
ffreep
sti
mov
outsb
fnstsw
and
into
jle
push
fdivs
lahf
cld
js
jg
cwtl
cmpsl
mov
aam
loop
nop
dec
sub
mov
rdtsc
es
and
xchg
xchg
xchg
push
dec
sar
aaa
jnp
dec
loopne
dec
arpl
inc
mov
and
jp
sbb
jecxz
push
xchg
pop
repnz
shl
les
push
insb
mov
ret
xor
cmpl
mov
mov
dec
jae
in
add
mov
push
xorl
daa
jge
mov
popa
jl
pop
dec
jns
insb
test
sti
sbb
js
test
inc
lret
int
data16
and
lret
andb
ljmp
fdiv
xchg
int
sbb
add
or
push
lods
add
jno
push
cmovs
push
adc
adc
andb
das
mov
pop
dec
jge
jno
mov
sbb
pop
mov
mov
cli
pop
stos
pop
mov
pop
lods
movb
rol
mov
mov
xor
or
shr
or
cmp
jne
cmp
jne
jmp
mov
mov
mov
mov
xor
xor
mov
mov
shrd
shr
mov
mov
mov
mov
xor
or
mov
shl
xor
mov
mov
or
mov
push
pushl
push
push
jmp
std
dec
mov
sub
fidivrl
test
push
stos
mov
mov
sahf
adc
sbb
push
icebp
lods
inc
jl
arpl
jecxz
sbb
or
out
xchg
sbb
ror
scas
and
lret
negb
int3
mov
push
std
cmp
aad
mov
inc
xor
lods
push
xchg
mov
xor
jle
cld
jae
pop
cmp
xchg
in
test
pop
adc
shlb
mov
fisubl
mov
in
loop
scas
xchg
xchg
cmp
inc
loopne
push
dec
sbb
adc
icebp
push
pop
sbb
push
sub
out
aaa
sbb
jbe
xchg
jb
xchg
add
aaa
dec
or
jmp
sbb
movsb
stos
mov
cmp
sbb
sbb
xchg
xor
daa
adc
push
jecxz
sarl
je
add
test
rolb
seta
popf
cmp
gs
enter
xchg
js
hlt
test
lret
bound
sub
mov
insl
adc
leave
nop
bound
rclb
jge
mov
push
inc
xor
fstps
stc
xchg
and
mov
cmp
inc
mov
xchg
cmc
cmp
ret
int
cmp
dec
lds
into
dec
adc
test
xchg
nop
sub
insl
addr16
cld
jb
xorb
jge
aam
xchg
popf
mov
fsubr
inc
fstl
lds
inc
mov
fbld
push
cmp
jmp
scas
inc
sbb
sub
popf
lcall
mov
jb,pt
or
cmp
xchg
repnz
aaa
popf
cmc
cli
mov
add
sbb
or
fmuls
push
push
call
je
inc
push
movsl
or
inc
cld
scas
sub
cmp
sbb
push
pop
ljmp
and
cli
sub
inc
dec
inc
pop
mov
mov
mov
int3
mov
test
rclb
pop
or
ror
dec
mov
jp
push
adc
sbbb
adc
or
add
lods
fsts
xchg
divl
add
fisttps
cmp
movsb
add
incb
test
fstl
xchg
lret
cmp
and
sub
mov
mov
push
jmp
daa
inc
in
jecxz
mov
dec
nop
mov
fistl
sti
outsb
mov
or
test
imul
fucomi
mov
dec
in
sarl
daa
sahf
mov
mov
insl
jnp
push
stos
adc
mov
xor
jae
adc
mov
inc
fcom
or
xchg
push
mov
loope
or
push
data16
out
adc
jbe
jb
inc
fidivrs
popf
dec
mov
xchg
cltd
lods
cs
jle
sub
mov
adc
outsl
loope
lcall
adc
jecxz
sbb
pop
scas
mov
inc
sarl
in
lret
std
mov
scas
outsb
mov
jbe
stos
adc
movsb
adc
in
dec
lock
or
out
add
add
bound
fdivr
xchg
ja
sti
push
jg
jmp
arpl
outsb
and
push
nop
cltd
sbb
rolb
rorb
sub
add
mov
add
shrd
shr
shr
xor
push
xor
jmp
sbb
jmp
ljmp
jo
sahf
add
fsubrs
sbb
sahf
adc
sbb
shrl
mov
icebp
lret
das
mov
dec
pop
inc
je
xchg
adc
sbbl
sbb
add
inc
and
sbb
ljmp
mov
es
add
mov
xor
prefetchnta
jno
pop
in
lret
inc
loope
and
sub
fldcw
pause
mov
add
out
mov
fs
xchg
jno
xor
mov
inc
leave
and
jb
or
add
insb
mov
jo
jmp
push
int
jb
push
xor
mov
fs
outsb
xchg
aaa
xchg
sbb
sub
mov
jle
ds
adc
test
pusha
xchg
xchg
stos
inc
sbbb
or
add
pop
xchg
sub
fmull
cld
insb
and
ret
testl
jb
sub
out
or
rclb
push
and
sub
dec
das
test
cmp
dec
add
pusha
and
aam
mov
aam
lods
xor
pop
outsb
xchg
push
scas
pop
pop
push
sbb
in
adc
jb
fcoml
mov
fincstp
push
add
in
aad
mov
frstor
pop
fs
daa
js
and
ret
dec
shll
cmp
rcrb
jb
cli
out
fwait
insb
js
mov
or
repnz
ret
push
shl
rolb
push
nop
mov
sbb
testb
sbbl
mov
jg
cld
test
cmpsl
adc
aam
fmuls
arpl
jl
mov
cmp
cmc
lods
xchg
xchg
pop
cwtl
or
out
xor
stc
test
inc
jmp
mov
dec
mov
xorl
test
test
jl
insl
mov
dec
push
hlt
cltd
mov
and
adc
and
xchg
stos
and
aam
jo
pushf
stos
lds
cltd
sub
leave
cwtl
dec
mov
cltd
push
and
jmp
mov
jns
cmp
imul
cwtl
sub
pop
xchg
or
aad
sub
loop
and
sub
outsl
insl
lret
xchg
gs
jp
dec
aad
shll
pop
jmp
push
add
xchg
or
scas
xor
push
mov
fdivrp
xchg
jb
fstps
add
or
dec
dec
adc
sub
pop
insb
jl
out
ficoml
shlb
gs
xorl
fmuls
je
push
ficomps
push
jecxz
mov
movsl
mov
shll
or
jne
out
push
xor
into
nop
sbb
pop
sub
mov
pop
pop
xchg
dec
pop
mov
test
ja
add
jecxz
in
jle
es
lret
out
in
pop
lret
mov
lods
mov
push
sahf
mov
xor
add
icebp
scas
cmp
sbb
fidivs
jl
popa
loop
jge
pop
cltd
adc
aas
stc
cld
les
add
add
jg
incb
dec
xchg
int3
pop
dec
cltd
and
dec
and
nop
mov
push
push
fucomp
mov
cld
or
xor
int3
decb
adc
and
test
cmp
jg
mov
lea
and
jl
mov
mov
mov
push
push
push
call
shld
shl
mov
or
xor
or
xor
xor
mov
mov
mov
mov
mov
xor
xor
shrd
shr
mov
mov
mov
mov
xor
or
mov
mov
mov
xor
xor
shl
mov
mov
mov
shrd
xor
or
mov
mov
mov
mov
shl
xor
or
shr
xor
or
cmp
jne
cmp
je
pushl
pushl
pushl
push
push
call
pop
leave
ret
cmp
movl
jae
movl
cmp
movl
jae
movl
shrd
notl
shr
ret
add
mov
xor
and
shr
ret
xor
xor
ret
push
mov
sub
movl
xor
mov
mov
not
movl
decl
mov
movl
mov
sbb
movl
jmp
clc
sub
sub
rol
pop
and
sbb
sbb
or
ret
mov
addb
jp
push
adc
sahf
jne
std
aad
mov
adc
jmp
push
das
pusha
lcall
xchg
mov
fistl
iret
es
and
jno
movsl
jb
pop
mov
push
dec
dec
test
movntq
out
jno
sbb
clc
movsl
mulb
jbe
inc
insb
shrl
aam
loope
imul
add
push
outsl
pop
adc
dec
lret
rorb
iret
xchg
adc
adc
orb
iret
pusha
pop
rorl
aas
es
imul
or
les
pusha
movsl
fisttpll
lcall
cmc
les
dec
mov
cmc
ss
sbb
cwtl
out
jo,pt
fcmove
or
cmc
or
fwait
imul
push
imull
sti
lock
scas
mov
outsl
pop
adc
aad
adc
add
pop
cltd
sub
mov
lods
mov
mov
into
aam
repnz
jg
pusha
jnp
out
mov
into
ljmp
adc
stc
int3
std
push
je
cld
inc
xchg
lret
cmpsb
movsl
fcoml
fimull
mov
pop
dec
ret
negl
test
adc
add
dec
pop
mov
arpl
jnp
add
in
int3
out
ja
into
lcall
in
ss
mov
insl
imul
jecxz
jmp
lahf
cmp
xchg
out
popa
pushf
sahf
out
mov
mov
adc
cmc
and
sbb
dec
xor
loope
mov
xchg
les
gs
jae
icebp
or
inc
lret
fmull
fldl
fwait
xchg
cmp
push
mov
out
inc
scas
jnp
stos
and
push
cmp
dec
mov
sub
mov
aaa
fldt
adc
dec
js
push
lods
or
push
movsl
jge
mov
or
scas
or
lgs
xor
or
add
mov
push
inc
pop
push
aam
push
test
mul
pop
negb
shlb
les
and
or
sub
pushf
adc
fs
mov
in
pop
mov
push
pop
popf
xor
push
mulb
lcall
leave
sbb
xor
orl
pop
sahf
sbb
inc
loopne
dec
push
pop
jge
sarb
jle
inc
iret
mov
push
add
xchg
ljmp
mov
mov
lock
xchg
sub
enter
icebp
inc
mov
hlt
pop
inc
lods
sbb
and
xor
xchg
jecxz
fwait
inc
fisubrs
in
jecxz
ficoms
ss
js
dec
daa
sbb
mov
lret
test
fsubrl
stos
xchg
in
push
subb
inc
mov
mov
in
je
loop
cmc
mov
cmpsb
xchg
dec
add
adc
andb
fucomi
movsl
and
popa
es
loope
pop
cmp
insb
pop
rorl
repnz
movsb
packssdw
scas
call
mov
movsb
fildll
add
daa
fmul
mov
mov
xor
mov
fldcw
jp
sbb
pop
faddp
cmp
test
and
push
pop
or
inc
fsts
aad
fwait
lock
sub
jae
ja
mov
call
into
xchg
fcoml
stos
xor
in
lcall
xchg
loopne
aam
iret
xchg
gs
push
ret
outsb
add
xor
push
movl
movl
push
xor
movl
sbb
mov
cmpl
mov
mov
jmp
mov
movzbl
cmpl
ja
push
pushl
pushl
push
call
mov
xor
or
or
mov
adc
xor
or
adc
mov
and
mov
push
adcl
push
andl
jmp
xchg
sahf
push
push
fists
ret
mov
outsb
adc
sbb
jmp
out
fnsave
or
add
cmp
aad
sbb
insb
in
stc
leave
mov
fimull
loop
mov
or
imull
jo
aas
out
cwtl
cmpsb
sub
and
xchg
xor
or
int3
mov
test
loop
pop
mov
mov
sbb
push
icebp
jmp
divb
roll
aaa
dec
push
lcall
dec
rcr
stos
adc
inc
stc
jae
cmp
push
into
cmp
dec
and
je
add
aad
mov
push
sti
rcll
sub
inc
adc
test
loope
sti
fdivl
fabs
mov
pop
scas
test
out
add
push
inc
ret
lret
pop
mov
push
push
inc
xchg
lock
dec
and
mov
sarl
insb
rolb
outsl
inc
and
das
loopne
xlat
fsts
mov
das
ds
cmpl
sub
lock
out
call
fsin
jno
mov
test
pusha
jae
gs
push
data16
cmp
ror
cmp
out
mov
rorl
mov
adc
repnz
lahf
sbb
jge
ds
loopne
pop
cmp
dec
lret
mov
push
pushf
lock
xchg
inc
jnp
rorl
leave
cmp
cmp
mov
mov
pop
fcomi
mov
or
sbb
in
fdivs
cmpsb
jae
lds
adc
dec
xchg
sbb
stos
dec
jp
aam
sbb
cwtl
dec
cmp
lock
negl
inc
push
int3
xchg
jle
sbbb
mov
cld
movsl
aad
lea
cmpsb
jge
push
ret
xor
xor
mov
mov
push
or
push
bound
scas
jecxz
push
jne
stos
jae
jge
into
sbb
les
scas
pop
xor
sub
and
testl
mov
pop
sbb
xchg
and
roll
xor
addr16
cmpsl
mov
or
sbb
ds
fwait
mov
add
inc
or
push
in
add
sub
mov
xchg
loop
les
xchg
xchg
mov
icebp
xor
outsb
iret
jns
sar
dec
test
pop
stc
stos
sarl
dec
inc
fwait
mov
std
cmp
push
in
mov
mov
jns
dec
adc
fwait
jg
adc
dec
sub
pop
aad
inc
pushf
sub
or
aas
out
jmp
fs
mov
ds
pop
add
sub
ret
std
dec
insl
xor
fstpl
mov
and
pop
cmpsl
sub
std
cmc
xchg
das
xchg
and
xorl
mov
jmp
lcall
xor
jl
cmc
mov
mov
cld
fldcw
pop
clc
test
jae
imul
xchg
loope
push
dec
sbb
out
mov
ret
lds
cmpsb
jl
inc
inc
fcoml
stos
mov
lods
xchg
psubw
add
lds
sahf
inc
jnp
call
nop
mov
ret
add
xchg
cmp
cmc
testl
pop
test
xchg
mov
out
adcl
pop
add
in
adc
sti
sbb
dec
jo
push
popf
test
pop
pop
sub
mov
scas
imulb
jbe
and
mov
andl
int
push
xchg
jns
scas
loope
push
adcl
call
sbb
mov
adc
mov
sbbl
push
or
subl
push
xorl
or
xor
xor
subl
push
push
call
xor
or
adc
mov
xor
mov
andl
push
addl
push
subl
push
push
subl
call
mov
add
mov
cmpl
not
movl
jmp
notl
mov
cmpl
jl
push
pushl
call
xor
and
movzwl
or
add
adcl
sub
cmpl
mov
movl
movl
jmp
movl
movl
cmpl
jbe
pushl
push
call
xor
adc
andl
and
add
movl
movzwl
xor
movl
decl
movl
movl
cmpl
mov
mov
not
movzbl
jmp
movl
movl
cmpl
je
push
push
call
sbb
mov
xor
or
sub
imul
and
sbb
movl
movl
mov
sbb
mov
notl
mov
or
mov
sbbl
jmp
adc
packssdw
jb
jnp
push
mov
jle
adc
sbb
sbb
addr16
mov
cmp
decb
inc
movsb
add
enter
out
adc
testl
das
jle
adc
nop
jp
clc
xlat
es
stos
inc
outsl
xorb
mov
in
jo
daa
mov
loope
xchg
jbe
adc
adc
mov
xchg
ja
cmp
std
popa
out
iret
hlt
add
inc
cmpsb
dec
cld
js
lods
jp
cmp
pusha
into
shlb
mov
add
inc
clc
jl
xor
xchg
and
lcall
sub
sub
pop
sarl
data16
jbe
pop
icebp
add
in
mov
sub
cmpsl
jl
cmp
xor
addr16
divl
adc
fs
std
repnz
movsb
add
movsl
inc
enter
add
fs
xor
call
sub
adc
arpl
pushl
mov
and
adcl
rcll
and
add
jle
stos
lret
xchg
daa
add
imul
inc
push
xlat
xchg
cmp
pop
scas
mov
cmp
jne
imul
mov
ror
jo
jge
fcomip
int3
leave
lds
movsb
pushf
loope
jmp
xchg
jnp
cs
xchg
dec
test
jge
pop
sub
mov
sbb
push
inc
int3
es
cmp
addr16
daa
dec
mov
inc
mov
pop
push
insl
add
dec
fdivrs
fnstenv
cmpsl
and
cltd
and
addr16
hlt
sar
loopne
fidivrs
dec
scas
xchg
mov
push
fdivp
loop
adc
mov
cmp
jae
ret
push
push
or
mov
aad
sub
jo
xchg
fs
mov
mov
in
insb
xorb
jg
jo
adc
hlt
and
stos
or
aas
jnp
es
cmp
xchg
out
and
mov
sub
or
es
jns
mov
and
dec
nop
xchg
add
xchg
int3
mov
lock
loopne
pop
sbb
outsb
arpl
out
add
or
sbb
adc
arpl
cwtl
inc
xor
in
popl
repnz
dec
data16
jge
push
lret
add
cmp
out
cmpsb
imul
push
mov
mov
mov
loope
and
fisubrl
mov
fsub
into
dec
xor
xchg
fwait
ljmp
lret
xchg
outsb
fistpl
out
push
dec
fsubr
pop
popf
inc
fisubs
data16
hlt
jle
sub
out
and
aaa
xchg
aam
jo
cmpsl
dec
shlb
movsl
movsl
ret
add
stos
pop
ds
pop
std
lret
inc
adc
pop
mov
int
xor
jne
out
lcall
sbb
test
sbb
add
cmp
int
xchg
fs
jae
sub
sub
jns
sbb
adcb
movsl
les
int
fwait
mov
scas
mov
imulb
cwtl
jo
mov
jne
jp
repz
jb
loope
test
or
ljmp
adc
rep
inc
movsl
incl
lcall
or
mov
pop
popf
arpl
and
repz
mul
mov
mov
push
mov
fidivrl
mov
pop
add
mov
popa
mov
xchg
xchg
mov
sbb
es
sbb
pusha
sarl
and
or
add
adc
adcl
or
mov
or
and
mov
andl
or
cmpl
mov
not
movl
jmp
movl
movl
cmpl
jbe
pushl
push
call
adcl
not
movzwl
sub
mov
adcl
mov
xor
orl
mov
or
mov
or
mov
or
or
cmp
jne
cmp
je
movl
movl
mov
mov
xor
xor
and
and
mov
jmp
movsl
movsb
test
test
sbb
fdivl
mov
int
pop
jo
or
sbb
scas
test
cs
push
cmp
insb
mov
imul
lahf
dec
lock
je
icebp
fisttpll
and
ljmp
sarl
mov
lods
xchg
push
outsb
jge
addr16
xor
mov
jbe
adc
or
leave
and
cmp
decl
mov
fs
test
sbb
std
rcll
push
into
adc
scas
mov
repz
jb
push
sbb
loop
jge
repnz
pop
xchg
add
fwait
arpl
mov
mov
fidivl
sbb
ds
pop
lea
pop
clc
shrl
inc
jb
pop
and
insl
and
out
fiaddl
xchg
je
mov
push
rclb
repz
in
nop
mov
cmp
insl
cwtl
and
mov
xor
int
cwtl
call
data16
push
pop
add
pop
fstps
jae
pop
jge
jb
or
adc
in
or
sbb
and
les
das
push
out
leave
data16
cld
or
loope
pop
push
cltd
cmp
xchg
pop
adc
add
daa
popa
lahf
mov
xchg
pop
std
faddl
sbb
push
fidivrl
sbb
xor
lods
push
lcall
add
mov
mov
fs
sub
insb
hlt
shlb
push
xorb
push
pop
pop
xchg
loope
rcrl
jecxz
les
roll
or
test
inc
es
dec
inc
pop
std
and
inc
inc
mov
in
aam
rorl
xor
lods
rcll
jg
roll
mov
inc
jmp
insb
lods
mov
push
xchg
mov
pop
inc
sbb
outsb
jo
mov
lahf
push
rorb
xor
or
add
lret
dec
cltd
es
shrb
dec
mov
and
or
mov
mov
pop
repz
out
fidivl
pop
in
pop
pop
pop
scas
pop
iret
imul
push
ds
mov
stc
pop
push
lcall
lods
faddl
pop
movsl
xor
sbb
pop
jb
fisubrl
and
ret
push
out
ret
adc
jbe
push
outsl
cli
sbb
lahf
test
fisttpl
push
fs
in
cmp
outsl
push
hlt
mov
test
out
push
movsb
xor
pop
mov
test
xor
push
inc
jne
mov
bound
or
pop
dec
mov
aad
cli
cmp
jecxz
xchg
and
push
stc
add
iret
pop
shlb
lahf
jle
das
jmp
sahf
mov
cmp
fnstsw
dec
adc
js
std
pop
repnz
jnp
xor
cltd
fdiv
mov
mov
sbb
les
pop
mov
fnstenv
adc
jnp
repnz
sbb
lcall
mov
inc
hlt
mov
jg
xchg
sarl
cmp
sub
add
add
cmp
lcall
sbb
and
cmp
andb
cmp
dec
ds
push
xor
mov
inc
sub
dec
mov
in
jae
jecxz
mov
jmp
neg
dec
les
scas
bound
test
jecxz
adc
subb
mov
add
pusha
cmp
adc
sbb
add
clc
mov
je
adc
loopne
dec
add
movl
movl
movl
movl
movl
mov
mov
mov
mov
add
mov
adc
mov
add
adc
xor
xor
add
mov
adc
mov
cmp
jne
cmp
je
movl
movl
movl
push
movl
mov
mov
push
push
push
call
mov
mov
push
push
and
and
push
jmp
fsts
or
push
jp
jo
pop
xchg
sbb
outsb
adc
sbb
inc
rcr
push
in
enter
xchg
lea
stos
daa
ja
scas
out
cmp
lcall
mov
xor
scas
mov
push
inc
xchg
sbb
stos
fiadds
mov
imul
cli
and
lock
shlb
mov
or
cs
stos
mov
and
std
subl
aaa
dec
sahf
xor
scas
adc
jmp
fdivrs
sub
jbe
jo
jp
insl
adc
cmc
test
mov
cli
xlat
mov
pop
pop
je
push
loopne
clc
jecxz
jmp
fs
sub
icebp
mov
mov
cld
mov
adc
outsl
roll
and
outsb
jmp
cmc
mov
xlat
add
push
jbe
pop
ret
mov
sti
fs
es
jne
mov
dec
es
pop
stos
mov
mov
arpl
dec
push
cmp
jl
notb
movb
or
add
mov
ret
dec
fnsave
mov
mov
xchg
fs
icebp
sub
fstpt
cltd
testl
xchg
pop
push
inc
and
fiaddl
xchg
lahf
enter
xchg
cmp
lret
test
cli
adc
lret
popf
iret
in
loope
mov
loop
mov
add
jno
lcall
jle
into
sbb
dec
dec
add
das
jge
fistpll
or
rcl
jmp
sbb
adc
or
cli
cli
clc
dec
mov
imul
pop
mov
pop
add
mov
or
outsl
xchg
jp
adc
dec
mov
add
adcl
insb
lret
jbe
sub
shll
or
cmpsl
xor
cmp
push
out
inc
out
jnp
in
pop
and
mov
mov
movsb
sarb
cmp
and
mov
inc
dec
xlat
dec
jle
cs
cmp
sar
test
xor
jg
testl
sub
push
dec
xor
cwtl
mov
nop
popa
cmpb
mov
inc
outsl
push
ds
incl
int3
call
adc
and
cmpsb
mov
cmp
lahf
rcrb
cs
test
xor
test
gs
push
aas
xchg
and
int
jecxz
cmp
es
aam
mov
push
xchg
jge
inc
mov
mov
mov
pusha
jmp
shlb
mov
jb
fistpll
imul
dec
popa
mov
loop
xor
xchg
outsb
rcl
cwtl
std
fcompl
dec
adc
es
pusha
sub
aad
out
lds
ljmp
xchg
mov
mov
pop
dec
lret
sahf
fs
inc
and
sub
pop
mov
push
cwtl
daa
shll
clc
pusha
imul
inc
sub
arpl
adc
dec
push
jno
movsl
test
hlt
xchg
jmp
pop
jecxz
jle
cli
inc
repz
jp
bound
outsl
and
xchg
cltd
jno
push
lret
push
lret
pop
test
cmpsb
test
aas
hlt
cwtl
bound
dec
roll
int3
mov
int
sub
insb
add
cmpb
scas
jnp
push
dec
add
and
mov
or
iret
jo
jnp
mov
sbb
mov
test
les
test
popf
mov
pop
and
jnp
mov
pushf
out
ljmp
sbb
xor
in
sbb
jb
lret
pop
ljmp
add
xor
mov
mov
mov
cmp
jne
mov
mov
mov
mov
shrd
shl
mov
mov
shr
xor
mov
xor
or
mov
mov
mov
shrd
shr
mov
mov
xor
xor
or
mov
movb
movb
movzbl
shl
mov
jmp
xor
mov
lcall
test
sbb
outsb
adc
sbb
mov
mov
shl
fdivrs
mov
mov
or
mov
fs
jg
xchg
add
xor
pop
mov
int
popa
inc
popf
or
ficoms
inc
dec
lret
cltd
cli
xlat
divb
mov
pop
loope
in
sahf
loopne
adc
pop
popf
pop
pop
or
or
cmp
pop
movsl
pushf
out
jno
pop
inc
cmp
adc
add
inc
sbb
jo
mov
xchg
dec
mov
cmp
ret
push
int3
dec
sbb
mov
popa
imul
xor
jle
jl
push
inc
sarl
jmp
dec
cmp
jmp
gs
and
mov
jo
sarb
push
xchg
loope
or
xor
or
movsl
jl
in
jns
push
xorl
or
fildll
sub
sbb
mov
add
xchg
pop
aam
or
decb
rolb
ja
dec
popf
pop
xor
rolb
mov
cld
push
jmp
iret
or
sbb
mov
fildll
mov
dec
mov
mov
and
stc
mov
dec
fiadds
in
fwait
mov
ss
clc
movl
hlt
hlt
add
cmc
dec
pop
xor
xor
ljmp
clc
loop
push
xchg
mov
and
int3
cwtl
jl
xchg
fdivrl
xor
dec
pop
aam
sahf
lods
xor
mov
mov
xchg
in
lahf
in
push
jbe
jge
sbb
in
int3
or
aas
addb
lret
lods
loopne
int
and
je
push
test
loopne
ror
scas
push
mov
or
andl
mov
and
or
in
stc
adc
inc
and
fwait
dec
lods
cwtl
inc
icebp
xor
lea
clc
adc
rcrb
call
out
cmp
addr16
jne
xor
push
enter
data16
push
sbb
sub
mov
push
sbb
and
sbbb
imul
and
stos
outsl
repz
mov
or
jle
outsb
jge
ljmp
mov
aad
or
iret
or
int
push
mov
out
and
mov
ja
clc
pop
add
fucomi
cmc
test
mov
int
cmp
pop
cmp
sub
popf
lea
sti
pop
lods
leave
lock
adc
jmp
sbb
mov
out
mov
loopne
mov
sbb
xchg
mov
dec
rclb
ljmp
mov
push
imul
loop
sahf
mov
mov
int
les
sti
in
adc
jns
mov
sbbl
mov
lea
and
repnz
push
shll
addr16
pop
sbb
divl
movsl
sbb
sub
jmp
loop
cs
outsb
mov
fdivrl
sub
mov
aad
xor
add
pop
mov
pop
inc
xchg
fs
divl
add
xchg
fistpl
jmp
mov
mov
jp
dec
ja
jno
fldenv
in
and
dec
jp
push
xor
pop
or
or
add
mov
push
sbb
and
lea
xor
adc
mov
lock
add
push
add
mov
movb
pop
mov
movb
mov
movzbl
cltd
idiv
mov
add
mov
or
mov
add
cmp
jmp
xchg
and
cmc
mov
mov
jo
cmc
sbb
outsb
adc
sbb
xchg
sub
sub
adc
mov
jge
repnz
xchg
xchg
ss
ficomps
jg
jbe
push
rolb
xchg
movsl
rcrb
or
sub
mov
call
mov
data16
outsl
aaa
mov
xchg
mov
pop
dec
mov
add
jbe
shlb
xchg
arpl
subb
mov
incl
aas
out
dec
pop
fidivrl
mov
icebp
jo
mov
xchg
rcll
push
or
stos
mov
lock
shrb
icebp
rcl
shl
fwait
aad
addb
aam
shrl
dec
xor
push
inc
jp
aas
jg
jne
es
imul
add
leave
push
cmp
adc
jmp
jbe
leave
jmp
add
outsl
in
add
xchg
stos
adc
paddusb
jbe
and
pop
movsb
subb
adc
dec
add
dec
jo
sub
or
mov
mov
pusha
pop
push
adc
data16
mov
dec
roll
push
ret
std
inc
mov
sub
out
aad
cmc
adc
inc
cmp
push
ja
into
xchg
xorb
out
xor
sub
sbb
mov
pushf
add
jo
xchg
popa
dec
mov
jo
sbb
add
rol
push
mov
repnz
jb
mov
cmp
fstp
push
sub
mov
and
cmp
adc
mov
shlb
inc
cmp
inc
es
or
pop
and
mov
imul
outsb
cltd
ret
in
pop
and
adc
jp
lret
popa
xlat
mov
xchg
int
jle
loop
enter
push
or
daa
gs
xchg
out
outsl
inc
sarl
lds
or
int
jno
test
loopne
psubusw
add
dec
xchg
ficompl
mov
mov
xlat
mov
add
in
jnp
cltd
push
sub
xorb
xor
test
mov
adc
sti
xchg
sub
xor
or
ds
fwait
lods
iret
sub
andl
pop
ja
lahf
mov
addr16
lock
adc
lcall
bound
popa
mov
mov
sbb
sbb
test
fmuls
adc
lret
aam
jae
inc
xchg
jb
mov
js
ja
mov
popa
jo
out
mov
jnp
and
ds
cmp
xchg
and
mov
outsb
mov
sbb
xchg
ljmp
cli
pop
test
xchg
lret
dec
test
jno
mov
jo
push
cmp
loopne
icebp
sti
loopne
in
js
add
cmpsl
mov
insl
das
jp,pn
push
in
movsb
cmpsl
dec
jne
imul
repz
jbe
sahf
jge
cli
xchg
mov
lret
jg
add
mov
mov
dec
pop
ds
push
inc
pop
cmpsl
pop
test
xchg
cwtl
cwtl
mov
std
inc
jl
das
inc
js
lock
mov
push
aas
pop
push
pusha
pop
enter
cmp
inc
mov
adc
sbb
cmc
lret
jns
xor
mov
pop
push
outsb
jl
cmp
shlb
call
jae
addb
setp
jge
mov
stos
popf
sbb
movsl
mov
ljmp
lahf
shll
fsubs
loop
xchg
mov
dec
in
and
jecxz
and
adc
cld
or
pusha
out
cmp
sahf
jecxz
mov
andl
add
mov
mov
shrd
xor
mov
shr
mov
xor
shl
or
mov
pop
leave
ret
push
mov
sub
push
push
push
movl
movl
movl
movl
movl
movl
movl
movl
xor
inc
mov
movl
mov
jmp
sub
sti
xchg
sbb
xorl
rclb
sbb
jb
fbld
jmp
inc
xchg
cmp
cmc
xchg
pusha
fucomi
pop
sbb
inc
jmp
aad
push
jmp
cld
aam
cmp
es
mov
out
jge,pt
push
push
jne
adc
add
jle
pop
mov
dec
rcrb
loope
dec
dec
sub
cmp
inc
pop
inc
mov
jecxz
xor
insb
jae
sub
xor
jecxz
pop
nop
flds
dec
add
aaa
aas
mov
inc
cltd
lock
mov
in
push
sbb
cli
sub
std
add
outsb
sbb
loop
add
daa
cmp
and
bound
pop
jae
and
inc
jle
sbb
dec
je
xor
ret
push
imul
mov
lock
adc
sub
jle
sub
add
xchg
or
scas
dec
jl
mov
mov
lods
mulb
mov
inc
js
push
mov
cwtl
jle
or
aad
or
popa
sub
xor
push
jg
lahf
mov
push
xor
ljmp
push
fldl
leave
test
jg
lea
leave
jmp
jae
ljmp
mov
cmp
jmp
dec
shll
cvttps2pi
sbb
test
pop
fimuls
xchg
aaa
dec
sbb
mov
sbb
adc
js
xchg
xlat
and
test
loopne
dec
movsb
cmp
fcoml
leave
mov
mov
mov
push
sub
mov
inc
push
icebp
and
sahf
scas
xchg
sbb
mov
dec
shlb
ret
scas
addr16
cli
inc
or
inc
pushw
and
and
mov
aaa
inc
mov
xor
dec
or
add
sarl
jb,pn
xchg
add
add
fnstsw
jne
test
sbb
negb
mov
lock
mov
mov
les
cmp
xchg
jg
jno
jge
sahf
int3
push
jae
fcoms
pop
push
loopne
arpl
or
fstpt
js
xor
movsl
sub
inc
stc
push
leave
xor
into
cmp
or
das
popa
cld
addb
movsl
and
dec
repnz
fsubrl
aas
push
mov
loope
imul
jnp
adc
les
pop
gs
sar
sbb
dec
cmp
inc
sub
scas
jne
sub
daa
cld
mov
sub
add
add
imul
add
xor
movl
movl
movl
movl
mov
or
add
mov
and
mov
sub
mov
mov
mov
add
or
sub
xor
sub
mov
mov
jmp
nop
xchg
lret
ja
das
sub
sbb
dec
push
call
sbb
mov
shlb
ret
fistpl
icebp
mov
pop
pop
imul
sbb
xor
mov
movsl
and
movsb
inc
pusha
jp
mov
cmp
mov
lock
xchg
orl
pop
loop
cltd
jg
in
insb
push
gs
sub
mov
xor
or
sbb
adc
mov
lods
cmpb
mov
adc
mov
les
adc
mov
and
call
nop
jg
pop
stos
and
leave
inc
xor
mov
out
stos
pusha
lret
ljmp
shl
mov
stc
bnd
lahf
gs
pop
sbb
mov
or
push
nop
jae
mov
cmpsb
push
aam
dec
cli
or
stos
stos
sub
or
pop
mov
adc
cwtl
cmp
dec
bound
daa
dec
push
addr16
mov
pop
cmp
add
std
pop
mov
mov
sub
adc
inc
mov
or
xchg
lahf
lock
in
inc
adc
push
ljmp
pop
mov
in
inc
aam
and
mov
cmp
and
std
push
adc
js
daa
sub
sbb
icebp
addr16
pop
lods
cmp
sbb
test
lds
jg
or
mov
xor
push
movsb
push
xorl
xor
and
jns
popf
pop
clc
sbb
adc
stos
hlt
mov
clc
xchg
xchg
int3
sub
push
popa
cli
addr16
or
mov
sbb
xor
pop
mov
addb
in
sti
xchg
popf
push
mov
add
inc
dec
imul
xor
add
mov
int3
dec
xor
inc
scas
mov
push
out
mov
sahf
into
stos
ficompl
mov
shl
sbb
mov
adc
jnp
mov
hlt
pop
and
in
adc
repnz
inc
dec
repnz
mov
fs
orl
push
cmp
cwtl
or
mov
mov
in
std
xchg
cmpsl
movsl
mov
inc
sub
sub
fstpl
mov
cmpsl
dec
sbb
aaa
iret
fwait
test
ljmp
jl
idivl
loopne
mov
add
flds
pop
mov
movsb
inc
sub
xor
insb
jle
mov
add
mov
mov
and
xor
xor
div
lea
mov
add
mov
and
mov
imul
mov
sub
cmp
jbe
push
pop
mov
mov
movl
movl
movl
mov
movl
movl
xor
movl
mov
mov
sub
div
jmp
test
push
inc
sbb
jnp
inc
sbb
push
jge
jle
loop
sbb
adc
sbb
int3
ljmp
je
mov
dec
cmp
pusha
scas
sub
mov
arpl
push
push
inc
or
pop
xor
cmpsl
xchg
sbb
mov
cs
push
and
cmp
in
mov
jp
loope
in
test
inc
jecxz
xchg
andb
dec
dec
fsubl
sti
and
in
pushf
mov
out
ljmp
testb
mov
ror
test
lret
mov
fsubs
in
out
lock
mov
inc
mov
xlat
jno
dec
pxor
pop
fs
pop
adc
test
scas
pop
inc
sarb
mov
xlat
leave
cli
mov
mov
outsb
pop
aaa
sti
fistpll
test
sti
cmpsb
sbb
xor
or
jmp
cmp
sub
ret
cli
add
je
scas
popf
push
in
mov
sub
jg
push
in
push
mov
mov
insb
cmovp
pop
fdivl
xor
push
ds
idiv
pushf
pop
mov
push
lret
cmp
shlb
mov
mov
in
out
push
jmp
dec
xchg
mov
mov
rorl
jno
bnd
jge
rorl
nop
mov
mov
pusha
test
jo
arpl
aaa
mov
mov
sub
aas
lea
cmp
push
inc
ss
js
test
lcall
cmp
pop
and
inc
cmp
into
and
cmp
add
pop
fisubs
cmp
aas
lahf
rcrl
mov
shrb
repz
mov
adc
iret
or
popf
in
xchg
aaa
push
ret
fs
or
jbe
sti
sbb
orb
in
aaa
sbb
cmc
push
cwtl
cmpsb
mov
pop
xchg
nop
insb
popf
test
ficompl
shlb
pop
cli
mov
mov
mov
inc
in
and
sub
insl
cmp
icebp
jge
adc
xor
pop
jne
in
mov
and
xor
scas
xor
dec
cs
shl
insl
add
push
in
imul
fwait
rclb
push
add
mov
sbb
push
fcomps
cmpsl
pop
mov
loope
test
outsb
lds
push
daa
mov
test
dec
notb
movsl
mov
lods
cld
imul
cltd
out
fs
loope
dec
loopne
shr
mov
fdivs
sbb
pop
into
sbb
jae
out
add
rclb
sbb
out
test
dec
shl
xchg
push
in
cmp
fld
dec
dec
aad
pop
xorl
mov
ds
in
aas
xchg
arpl
in
cmp
repz
fisttpll
out
inc
ror
sub
js
je
dec
jb
icebp
push
xchg
fsubrl
daa
incl
xor
in
push
cmpl
stos
xchg
adc
addr16
stc
imul
pop
shlb
inc
and
sub
in
mov
jno
outsl
gs
popf
in
in
add
adc
clc
and
jle
sub
push
push
repz
inc
jnp
stc
dec
push
mov
mov
aaa
sbb
mov
outsb
rcrb
xchg
lock
lea
cmp
and
aas
pop
int3
cmp
aas
mov
popa
dec
arpl
movsl
mov
lahf
ret
sbb
fdivrs
adc
or
jbe
cld
out
clc
or
inc
and
ret
out
fcompl
sbb
repz
pop
or
inc
fisttps
add
inc
int
jge
stc
cltd
sub
fmulp
adc
inc
outsl
inc
scas
mov
inc
mov
int
ljmp
popf
cmp
cmpsb
lcall
shr
arpl
cltd
xlat
in
xchg
push
stos
push
lcall
push
jo
and
out
jmp
xchg
mov
js
mov
js
loope
push
sbb
out
repnz
mov
add
inc
repnz
sbbb
arpl
mov
pop
out
pop
xchg
lretw
rorl
jg
add
out
cmp
pop
shrl
pop
hlt
sub
mov
jae
pop
out
fdivrl
fdiv
mov
scas
loope
sbb
jbe
stos
nop
sbb
sbb
stc
mov
xor
or
fwait
cld
adcl
or
popf
inc
push
push
out
pop
fsubl
es
lea
repnz
data16
int
jmp
loope
aas
push
loopne
mov
jecxz
mov
aam
mov
pop
push
out
xchg
or
push
insb
pop
shrl
add
test
dec
inc
out
aad
call
rcll
dec
sub
adc
push
pop
jb
movsl
and
stc
pop
cmc
xor
leave
ja
inc
add
rolb
mov
sbb
popf
loopne
xchg
push
hlt
lds
imul
jp
dec
fimull
mull
mov
add
div
mov
xor
div
xor
mov
jmp
aam
sbb
and
test
jo
fcomps
sbb
adc
sbb
push
mov
sub
imul
or
mov
repz
cmpsl
or
ss
add
inc
es
push
and
mov
mov
outsb
add
mov
movsb
insb
rolb
and
cltd
push
inc
xor
xor
stos
repz
popa
scas
push
push
lods
arpl
sbb
push
fstpt
mov
enter
dec
in
rcl
dec
lods
imull
pop
outsb
cmp
outsl
and
mov
push
stc
mov
aas
movsb
inc
push
sbb
lods
orl
mov
das
sbb
shlb
dec
lds
mov
push
imul
jnp
loope
fisubs
das
in
and
inc
testb
lds
mov
push
add
rcrl
add
mov
movq
out
jb
ret
loope
xlat
test
mov
jo
jbe
rolb
das
mov
aad
jecxz
out
loop
loope
std
out
sub
sub
pop
pop
popf
stos
imul
fucomip
cmpsl
mov
idiv
outsl
mov
xchg
mov
hlt
sub
mov
testb
es
jae
mov
push
out
push
sbb
mov
loopne
ficompl
mov
imul
cwtl
mov
pushf
das
push
in
xchg
in
ret
mov
lods
mov
sub
add
inc
pop
imul
mov
mov
pop
hlt
ss
inc
js
pop
mov
jne
jl
jmp
aam
mov
push
dec
pop
add
xchg
iret
sbb
enter
xor
add
stos
imul
mov
fdivs
out
xchg
vmwrite
in
jb
sbb
jae
mov
cmp
mov
mov
mov
iret
sub
shr
scas
pop
dec
xlat
fs
jno
push
bound
fmulp
pop
adc
in
sub
inc
xorl
jmp
mov
jmp
add
sbb
mov
ret
push
add
ss
outsl
push
xchg
mov
test
icebp
pop
dec
adc
insl
out
out
nop
and
jle
jl
shll
jge
adc
xchg
push
notb
push
popf
lret
loop
sbb
cmp
pop
arpl
out
das
add
clc
cmp
xor
ds
add
xchg
pop
insb
outsl
outsl
xchg
jne
call
lret
pop
adc
add
add
mov
add
div
mov
mov
sub
sub
xor
div
mov
add
cmp
jae
movl
movl
jmp
test
in
gs
les
jo
repnz
sbb
adc
sbb
je
xor
lret
les
bound
cmp
cmpsl
xchg
add
push
lret
test
icebp
ret
out
ret
das
test
cmp
and
or
movsl
popa
fs
scas
ret
sub
dec
aaa
loope
pop
or
dec
push
aam
mov
pop
mov
mov
push
jge
loop
adc
or
add
pop
xor
sub
mov
into
inc
ret
into
cltd
fdivrs
loope
retw
cmpsl
lret
jbe
mov
push
xor
pop
add
pop
js
mov
jg
inc
adc
xor
jne
scas
fucom
arpl
push
test
mov
mov
in
pop
imul
jo
outsl
cs
bnd
scas
icebp
sbb
jno
inc
xor
add
loope
push
jae
out
shlb
fs
and
cmp
cwtl
sub
xor
dec
cld
sub
cs
or
xchg
lret
cs
stc
hlt
cmpsl
jmp
data16
push
dec
pop
lret
mov
clc
jne
les
mov
dec
fiaddl
addr16
cmp
and
adc
ret
fnclex
lds
xchg
mov
add
adc
jbe
sahf
pop
mov
pop
jecxz
mov
movb
inc
and
mov
inc
pop
pop
and
outsb
mov
push
loopne
arpl
push
aam
or
fdivs
pushf
out
push
pop
sbb
ret
mov
les
int3
out
inc
popf
orl
sbb
dec
jno
ret
in
cmp
add
int
mov
sbb
adc
pop
adcl
call
popa
xor
in
js
pop
lods
inc
sbb
cmpsb
xchg
sbb
or
inc
in
pop
cmp
mov
repz
stc
push
dec
stos
fstps
out
in
pop
jno
cltd
adc
adc
push
in
xlat
cmp
ja
xlat
lods
loop
jnp
loop
jbe
les
idiv
lcall
imul
inc
push
xchg
cmp
sub
repz
aas
push
leave
cmc
push
dec
rorb
adc
outsb
gs
mov
add
lret
out
fstpl
popf
jne
or
push
outsb
adc
gs
jmp
test
cmp
add
inc
in
int
add
xor
movl
movl
mov
push
pop
div
mov
mov
mov
sub
mov
mov
imul
mov
xor
sub
add
and
mov
sub
mov
sub
mov
sub
mov
mov
mov
jmp
rep
add
mov
inc
leave
jl
inc
cmpl
sbb
adc
sbb
ret
fimuls
cmpsl
pminsw
mov
dec
sbb
pop
mov
js
outsl
push
imul
xor
pop
xchg
sub
adc
sbb
jno
aad
cmp
and
or
push
jmp
test
cmp
cltd
cltd
and
xchg
stos
js
sbb
jae
pop
mov
push
cld
jp
add
xchg
jl
fistpll
or
into
andb
nop
pop
pushf
sbb
pusha
ret
mov
jns
rcll
mov
pushf
jne
nop
mov
lret
and
cmc
jbe
mov
or
push
cmp
lcall
or
nop
fwait
or
loopne
loopne
mov
sahf
and
xor
gs
push
inc
nop
arpl
or
cli
sbb
and
dec
lds
es
ljmp
dec
fs
negb
pop
test
jle
aam
sbb
arpl
fdivs
adc
push
pop
idiv
clc
push
insb
or
outsl
jp
outsb
scas
les
inc
aaa
repnz
insl
mov
jo
divl
movsb
popl
das
lret
shl
pop
sub
xor
or
arpl
loop
mov
fisttpl
add
cmpb
out
cli
lcall
mov
and
or
pop
cmp
daa
push
ja
xor
mov
push
sub
out
xchg
loopne
ss
fmuls
rol
sbb
sarb
cmp
loope
and
mov
test
pop
mov
jp
bound
mov
jb
orb
mov
push
sbb
imul
mov
mov
cmc
sub
sub
in
std
out
cmp
or
mov
push
insl
out
push
adc
jns
dec
lret
jo
or
push
fdiv
in
inc
jno
jg
cs
sub
sbb
loope
lds
xor
sbb
inc
dec
sbb
dec
jmp
les
xor
jne
fiaddl
cli
shlb
orl
sub
mov
xchg
jg
repz
sub
inc
sbb
mov
xor
repz
fucomi
testl
mov
in
fcoml
mov
inc
jge
xchg
rolb
test
movsb
or
inc
lock
add
jmp
sub
mov
inc
pop
and
leave
out
jle
adcb
enter
adc
sbb
jmp
push
mov
push
pusha
je
stc
sbbb
cld
mov
insl
incl
and
insl
loop
xchg
adc
and
lods
dec
sub
jg
or
mov
add
pushf
outsb
xor
xor
int3
shll
jbe
mov
mov
add
daa
xor
rorl
cmpsb
pop
mov
mov
inc
sbb
xchg
jecxz
dec
fsts
stc
scas
jno
sbb
inc
mov
loope
mov
and
jge
push
mov
inc
cmp
shlb
popf
dec
sbb
and
inc
mov
push
mov
ds
imul
sub
iret
inc
fs
rcrl
sbb
shlb
inc
jle
mov
mov
popf
unpcklps
hlt
loopne
mov
call
rcl
cmp
imul
ret
lcall
xchg
ljmp
sti
out
jge
into
xchg
pop
mov
int3
cld
fiaddl
xlat
sub
mov
adc
or
aas
sbb
sub
icebp
adc
jge
mov
jle
ljmp
and
loope
ljmp
decb
xchg
push
or
out
cmp
icebp
mov
dec
adc
xor
bound
and
sub
mov
lds
adc
std
xor
and
mov
inc
je
mov
inc
dec
pop
aas
loop
or
fstp
mov
ret
dec
imul
pop
out
jg
bound
rcrl
ss
push
push
outsl
xlat
dec
aad
lcall
insb
cmp
addr16
lods
mov
icebp
add
je
int3
adc
icebp
rol
leave
or
jle
pop
push
xor
cmpsl
or
data16
imul
insl
mov
outsb
testb
mov
out
or
sub
repnz
sbbl
or
cmp
pop
cmp
jmp
andb
mov
jno
push
mov
ss
xor
mov
leave
arpl
shlb
in
inc
jnp
sbb
subl
sbb
subl
loopne
add
dec
in
inc
sub
pop
roll
lods
mov
into
out
xor
pop
iret
loop
fsubs
jecxz
sub
pop
fimuls
sub
and
pop
scas
or
xor
and
lea
mov
mov
add
div
mov
mov
sub
xor
div
add
cmp
jb
xor
inc
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
add
and
xor
mov
jmp
mov
and
ss
xorl
rclb
sbb
push
push
jae
dec
push
adc
pop
lock
pop
or
das
inc
mov
inc
mov
or
daa
adc
xchg
loope
or
fst
nop
sbb
lock
inc
shl
cmp
jg
or
aaa
jno
jecxz
cmp
imul
sar
mov
in
int
or
stos
scas
insl
mov
adc
cmp
iret
push
cwtl
mov
ja
loop
jmp
add
aaa
out
or
ficompl
fsubp
mov
inc
inc
sub
stc
lods
add
jns
stos
cmpsl
lret
rcrl
mov
cli
rcll
xor
sub
push
nop
cmp
stos
mov
adc
add
sbb
mov
pop
or
xchg
mov
pushf
adc
jno
cmp
cmp
enter
das
adc
xchg
adc
mov
bound
jle
dec
loop
mov
and
mov
push
cmp
jne
lods
sub
push
insb
cmp
test
rorl
adc
cmpsb
dec
pop
popa
pop
cmp
pusha
clc
push
cmp
repz
scas
mov
dec
cld
sub
mov
sub
imul
xchg
test
adc
lcall
testl
pop
lcall
inc
inc
sub
cmpb
inc
mov
push
xchg
push
xchg
sub
xlat
outsb
into
call
add
jge
and
aas
fdivrl
add
add
test
fcomi
loop
mov
je
add
loop
loope
es
fstps
mov
xchg
test
add
sbb
xchg
mov
xchg
xchg
mov
sbb
push
jge
shlb
mov
bound
dec
shrl
jnp
dec
sbb
pop
push
push
imul
in
xchg
mov
lcall
mov
mov
in
dec
movsb
jmp
jns
and
ret
scas
xchg
test
mov
outsb
stos
adc
push
ljmp
sbb
and
xor
jl
insb
sub
lods
gs
dec
or
stc
pop
mov
ret
push
lock
imul
and
cmp
cmpsl
into
sbb
push
xchg
decb
push
inc
push
dec
das
je
xchg
jle,pn
stos
xor
add
sub
movl
movl
mov
movl
movl
mov
mov
imul
xor
or
xor
mov
sub
mov
mov
mov
or
sub
jmp
orb
loop
sbb
call
outsb
adc
sbb
adc
sbb
pushl
xchg
sti
pop
mov
jp
mov
dec
jbe
inc
add
ss
jmp
in
in
imul
mov
rclb
flds
and
sub
inc
imul
je
rcrb
outsl
jo
xlat
cmpsb
and
pop
xor
pop
or
fwait
les
adc
mov
lods
in
push
and
mov
sub
imul
mov
mov
cwtl
lods
or
gs
sub
cmpsb
dec
dec
sarb
repnz
fldt
xchg
sub
sub
shrb
sbb
shl
ficompl
jl
cmpl
fdivr
pop
rol
fst
or
enter
mov
aaa
rcr
fstpl
xchg
mov
xchg
int
nop
push
inc
sahf
jo
or
push
add
sahf
loope
cmp
add
fwait
out
fistps
add
fnstsw
add
xor
pop
dec
stos
je
mov
in
outsl
cmpsb
int3
dec
xchg
or
rclb
sti
cmpb
test
or
divl
fcompl
mov
xor
aaa
mov
sub
pop
pop
scas
sbb
dec
fnstcw
jmp
cltd
ja
xchg
imulb
sub
in
sbbl
mov
lods
dec
roll
mov
xor
in
xor
bnd
pop
out
call
loop
xor
imul
stos
clc
jo
add
in
imul
outsl
loope
mov
sbb
mov
mov
cmp
cmpsl
inc
cwtl
mov
dec
or
xlat
add
fnstcw
add
bnd
xor
pop
and
lods
mov
leave
arpl
mov
cmp
and
dec
fs
adc
push
add
and
shlb
xchg
fildl
mov
repz
fs
iret
aas
adc
cmp
imul
or
adc
pop
out
cmpsl
inc
or
inc
and
and
inc
pop
inc
sub
cmc
sub
imul
out
dec
ljmp
xchg
repz
stc
addl
cli
pop
sbb
shl
testl
add
add
rorb
push
mov
mov
mov
imul
mov
imul
or
mov
or
xor
jmp
subb
pushf
sbb
pop
mov
mov
std
mov
sbb
sbb
jae
mov
in
jb
loope
testl
mov
ds
xchg
xor
iret
mov
je
mov
xor
pusha
push
sti
cli
lock
cmp
shlb
dec
ljmp
adc
and
mov
nop
fisubrs
mov
and
and
or
jp
repz
inc
ja
push
sub
add
fwait
lret
xchg
or
enter
je
or
cli
sahf
fidivrs
into
xchg
pop
adc
shll
sbb
dec
es
mov
cwtl
mov
push
cmpsl
mov
iret
sbb
andl
insb
test
icebp
push
scas
xchg
pop
movsb
dec
mov
jge
jae
shrb
push
mov
adc
mov
and
adc
aaa
scas
push
cmp
sahf
roll
dec
sbbl
loope
push
pop
into
scas
dec
fwait
lods
inc
jb
je
paddw
out
mov
test
mov
iret
les
dec
inc
xor
jnp
sbb
das
mov
push
pop
in
ja
sbb
cli
popa
insl
inc
jno
mov
fcoms
mov
in
and
cmpl
pop
jne
lea
mov
pop
dec
dec
mov
pop
push
addr16
pop
jae
xchg
jle
cld
mov
or
mov
mov
repnz
jo
push
inc
dec
jecxz
cld
or
into
es
xor
sub
sub
lea
mov
push
movsl
cmp
fdiv
outsl
cs
jbe
cmpsl
jg
insl
or
iret
pop
insb
jecxz
dec
push
stos
pusha
xor
jg
mov
xor
xor
into
sbb
and
and
and
push
jno
rorb
stos
sahf
in
inc
mov
aas
std
pop
imul
int3
out
add
les
decl
lods
mov
lret
clc
arpl
add
fstl
add
sahf
lods
add
mov
inc
leave
jmp
sbb
cmc
insb
mov
outsl
jg
cmp
out
and
mov
sbb
pop
shrl
and
js
test
sbb
mov
mov
xor
or
rorb
inc
push
shlb
cmp
flds
cmp
add
pop
add
and
add
xor
add
cmp
jmp
cmp
daa
sub
dec
pop
jo
mov
sbb
adc
sbb
std
mov
mov
mov
push
mov
out
add
push
push
push
jb
jo
inc
inc
jb
sbb
xchg
imul
inc
add
xor
sub
orl
roll
and
lds
xor
fstps
jne
xchg
fcmovu
dec
push
test
jne
setns
push
pop
int3
cmp
jbe
call
xchg
les
dec
out
insb
inc
pop
xchg
cmp
xchg
cltd
xchg
hlt
fimuls
cmp
sti
adc
dec
nop
xor
xor
cwtl
mov
test
cmpsb
add
dec
inc
inc
add
cli
mov
fmul
and
xor
addr16
pusha
jp
mov
adc
mov
repz
adc
xchg
jns
data16
ljmp
shll
push
rol
sbb
pop
lock
lock
inc
push
ret
inc
and
jbe
outsl
jnp
cmp
fbld
leave
add
xchg
popf
sub
bound
orb
dec
pop
sub
add
bound
ret
lea
test
nop
mov
xchg
popf
pusha
cmp
addb
out
hlt
in
lcall
andl
add
js
mov
lods
push
test
jmp
movsb
or
int3
jmp
iret
lret
adc
inc
testl
add
dec
lods
hlt
cli
pop
cwtl
imul
inc
xor
pop
fs
call
cld
les
popf
mov
xchg
inc
inc
dec
xor
sbb
imul
mov
shrb
das
xor
popf
mov
jl
aam
cmpsl
adc
enter
loop
jo
icebp
rorl
xor
push
fldl
lahf
adc
xchg
push
gs
cmp
mov
roll
sub
sbb
cld
dec
int
cmpsb
test
pop
insb
hlt
add
xchg
mov
mov
test
lret
add
inc
mov
xchg
fbld
mov
jge
jmp
loop
test
pushf
cmpsl
xchg
jg
lahf
inc
call
lret
stos
xchg
incl
xor
dec
lods
or
shlb
ret
outsb
or
std
dec
sub
lcall
imul
sub
rcrl
or
lcall
mov
mov
inc
lcall
cmp
scas
sbb
rclb
sbb
mov
cmp
or
xchg
movsb
fnsave
pop
jg
int
adc
dec
mov
inc
cmpsl
and
xchg
sarl
push
push
cmp
pushf
fmulp
dec
push
xchg
aam
lods
in
push
lret
cmpsb
test
mov
cmp
sbb
fiadds
call
sbb
test
push
vmread
push
mov
push
cmp
dec
pushf
mov
fcomps
je
add
cmpsl
or
mov
fnsave
popa
ror
inc
jo
cmp
mov
shl
scas
push
stc
adc
cmp
mov
fnstsw
outsl
jmp
andl
xor
mov
test
jl
cmp
movsb
mov
pop
push
jp
jp
out
push
sub
mov
jmp
dec
add
jbe
outsb
push
jne
push
sub
fs
sti
or
ss
mov
mov
mov
scas
loope
ror
das
ficoms
popf
bound
popa
pop
mov
add
jge
jmp
insl
or
pop
jecxz
mov
fisttpll
popf
push
xchg
xchg
xchg
jecxz
lds
push
in
mov
bound
in
or
xor
leave
lret
xchg
mov
cli
mov
repz
clc
xor
mov
push
dec
sti
ret
jae
in
movsl
icebp
jmp
mov
out
inc
inc
stos
cmp
sti
mov
pop
sbb
pusha
or
or
shlb
sahf
cli
lods
add
das
lahf
fisubl
outsl
add
incl
jmp
mov
jmp
in
and
lea
xchg
addr16
and
and
sbb
mulb
pop
mov
inc
sti
pop
test
outsb
mov
dec
inc
mov
xchg
cmpsl
insl
dec
rcll
pop
sbb
lret
pop
pop
ret
roll
fmuls
hlt
mov
inc
push
fwait
cmp
xchg
inc
xchg
out
mov
adcb
inc
xor
mov
add
movlps
and
sbb
mov
lea
and
mov
in
mov
scas
sbbl
xor
repz
in
into
xchg
dec
sbb
gs
cmc
jg
addr16
mov
fsubr
test
mov
lret
pusha
or
mov
dec
subl
dec
add
std
mov
pop
leave
ret
push
mov
sub
push
push
movl
movl
mov
jmp
outsb
rolb
jnp
cmp
ret
push
mov
push
test
sbb
or
xor
js
mov
lahf
add
add
mov
orb
mov
and
xchg
or
jnp
or
jmp
nop
and
lcall
ret
cld
xor
cmpsb
in
stos
mov
int
pop
inc
add
rclb
push
sbb
adc
mov
fstps
mov
lds
sti
test
fidivrl
push
addr16
adc
jnp
cmp
or
rcll
scas
xor
pop
sub
pop
cmpsb
xor
mov
xchg
sub
and
in
add
out
xor
aaa
popa
cli
orl
mov
out
mov
push
fisubl
cmc
sahf
stos
cltd
mov
aas
arpl
sahf
mov
push
xchg
jne
bound
popa
hlt
mov
adc
mov
sbb
sub
cmpl
mov
cmc
bound
inc
data16
cld
movsl
int
sbb
lea
shl
lock
mov
mull
cli
mov
sub
fistps
imul
inc
les
scas
dec
inc
cmc
mov
imul
adcl
movsb
pop
subb
out
popf
in
sub
int3
mov
pop
out
insb
hlt
push
andl
icebp
xor
movsw
pop
outsl
jne
or
cwtl
xchg
stos
adc
into
ud0
imul
or
mov
fcompl
cmc
dec
inc
sbb
sbb
scas
popa
push
jmp
fiadds
mov
fldenv
data16
js
decl
pop
cmp
out
call
loope
xchg
outsl
scas
push
push
sbb
sub
fsubrl
stos
jne
aad
jl
psrlq
mov
lahf
add
xor
mov
xor
rcll
fsubr
xor
xor
push
pop
addb
stc
movsb
scas
jbe
lcall
inc
xchg
fistpl
cmpsb
inc
mov
xchg
cmpsl
sub
mov
movsl
mov
mov
lock
pop
and
or
sbb
addb
in
loope
les
adc
or
movsb
cmp
inc
stc
movsl
fwait
sbb
mov
aaa
mov
loopne
popa
sahf
xor
mov
mov
ficoms
sbb
out
test
xorb
outsl
enter
mov
sarb
bnd
jnp
stc
jno
repz
sbb
add
rorl
lea
mov
movl
movl
mov
mov
and
xor
mov
imul
xor
lea
mov
movl
movl
mov
xor
push
pop
div
mov
xor
push
add
and
mov
sub
mov
movl
movl
movl
mov
mov
lea
mov
div
mov
lea
mov
movl
movl
movl
mov
mov
xor
sub
mov
jmp
mov
pop
mov
stos
and
sbb
shll
sbb
mov
lods
pop
and
dec
mov
test
fstps
lret
stos
mov
aam
mov
sbb
data16
fmuls
inc
mov
xlat
pop
out
in
fdivs
xor
dec
cmp
scas
arpl
xacquire
jno
dec
fiaddl
inc
and
mov
lret
clc
fidivs
pop
fnsave
mov
mov
mov
mov
push
shll
push
fs
jmp
lods
outsb
adc
jns
sahf
jbe
adc
dec
xor
add
aaa
jecxz
cli
push
push
or
ffree
aad
cmp
jmp
test
lods
int3
sbb
pop
dec
pop
jle
xchg
pop
push
and
push
inc
imul
punpckhbw
lea
jae
mov
aas
fucom
stc
sub
ss
fdiv
std
clc
adc
jg
popf
sub
mov
push
cltd
pop
mov
xor
jbe
mov
mov
pop
xchg
cmp
scas
jecxz
in
and
outsl
fldt
adc
ret
std
adc
push
ret
adc
cmp
insb
lret
add
rcrb
inc
jg
popf
clc
test
cmpsl
or
das
sub
std
mov
mov
xor
cmpl
mov
inc
gs
lahf
xor
mov
gs
xor
loope
jno
sahf
fnstenv
push
fcompl
sbb
sub
fiaddl
jne
outsl
movsl
mull
arpl
shll
adc
call
decl
xor
xor
dec
mov
cmp
pand
int3
clc
les
mov
in
test
cmpsl
out
mov
mov
call
cmp
and
adc
ret
rcrb
test
jb
cwtl
dec
jo
ret
dec
lret
cli
and
movsb
mov
data16
mov
sbb
cli
mov
test
cwtl
ss
mov
and
push
lods
dec
xchg
testb
mov
sbb
bound
push
jge
jb
out
mov
outsl
popa
cmp
stc
rcl
dec
jecxz
push
int3
lcall
xchg
add
mov
into
or
or
stc
int
aad
test
orb
jp
add
sti
mov
ljmp
pop
and
fdivp
arpl
mov
sub
xor
mov
movl
pop
mov
movl
movl
mov
mov
mov
xor
xor
div
mov
and
sub
mov
movl
movl
movl
movl
movl
movl
mov
add
mov
xor
mov
or
mov
or
mov
and
mov
sub
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
add
adc
or
mov
or
or
mov
mov
or
mov
sub
mov
sbb
mov
or
or
add
mov
adc
mov
movl
movl
movl
movl
movl
movl
movl
xor
inc
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
movl
mov
movl
movl
mov
or
add
mov
or
mov
sub
mov
sub
imul
add
mov
push
mov
lea
mov
xor
div
mov
lea
push
mov
mov
push
push
push
push
call
mov
mov
push
push
or
or
push
push
call
mov
mov
xor
mov
mov
mov
and
add
lea
xor
push
lea
call
mov
mov
mov
sub
xor
imul
jmp
fiadds
rcrl
dec
fisubl
out
mov
mov
mov
fisttpll
lahf
int3
pop
push
mov
scas
pusha
sub
pop
adc
sti
repz
inc
lock
into
pop
fisttps
out
inc
mov
and
cmp
add
mov
test
js
pop
jo
jnp
not
fcmovnbe
dec
pop
cmp
or
sbb
xor
push
shrl
push
inc
ds
jno
adc
aas
aas
mov
add
lea
imul
push
repz
mov
iret
mov
cmp
in
fisubrl
pop
inc
inc
sub
cwtl
mov
pop
and
cmp
xor
cmp
or
loopne
mov
jo
jecxz
cmpsb
aam
jmp
fistl
jmp
jge
stos
jno
aas
out
and
hlt
pusha
ljmp
js
insb
int
fsubs
lcall
push
orl
aad
fsubrp
and
aas
icebp
pop
mov
call
dec
sub
sbbl
add
xchg
push
pop
loope
jmp
add
fs
and
mov
and
insl
inc
dec
cmpsb
mov
inc
mov
xchg
movb
aas
pusha
pop
sub
xchg
sti
adc
lret
sahf
dec
imul
and
jg
jmp
inc
outsl
cmp
ds
push
mov
xchg
and
or
stos
and
pop
jle
xchg
jno
mov
rolb
push
out
xlat
in
js
sahf
mov
add
pop
nop
inc
add
fs
cmp
push
adc
cmpsb
lret
jb
jle
xor
cltd
xor
outsb
cmp
pop
stos
clc
and
out
popf
in
scas
sarb
inc
mov
mov
icebp
mov
sahf
addr16
imul
push
cmp
jl
sub
sub
in
pop
out
xor
daa
cmp
out
aad
adc
aad
fwait
test
push
jge
push
mov
push
adcb
mov
insl
out
scas
push
pop
scas
sub
push
pop
in
adc
ss
dec
cmp
xchg
das
cmpsl
fisubl
xchg
in
xor
push
lret
or
xor
inc
rcrb
inc
jne
push
lahf
cmp
pop
icebp
mov
xchg
movq
data16
das
pop
sbb
ja
fs
cmp
outsl
push
inc
sbb
sub
fsubr
dec
or
add
add
xor
xor
mov
div
cmp
jmp
ss
jnp
pop
xor
mov
sbb
mov
rcrl
ret
stos
fld
sbb
inc
mov
sbb
sub
push
pusha
or
dec
mov
sbb
sahf
loop
pushl
inc
frstor
loopne
push
adc
shlb
sub
sub
jl
icebp
sub
into
fcomp
add
push
bound
adc
movsl
out
movsl
xor
mov
call
jae
roll
cmp
xchg
call
push
out
pop
sti
faddl
ljmp
pop
xor
aas
sti
inc
pop
test
js
push
mov
adc
jle
xor
mov
data16
hlt
pop
iret
mov
insb
add
or
xor
pop
les
and
mov
cli
cld
or
push
or
fs
jno
add
xchg
test
test
cli
es
xchg
out
sbb
aas
mov
outsl
std
jne
push
sub
and
jge
xor
test
mov
xlat
iret
mov
aas
push
repz
shr
scas
push
insl
mov
inc
fstpt
jo
jns
sub
loopne
aaa
dec
loop
cs
or
cmpl
jl
mov
mov
icebp
orb
jmp
mov
xchg
test
mov
mov
cs
andb
or
cmp
inc
orb
xorb
int3
aaa
mov
mov
aad
loop
xchg
test
mov
movsb
fidivs
int
enter
and
push
jnp
imul
lahf
dec
mov
repnz
sbb
fxch
mov
xor
mov
stos
adc
in
repz
aaa
nop
mov
push
outsb
jb
jbe
sbb
or
aad
in
mov
mov
mov
or
sti
stc
ds
gs
cmpsl
mov
xchg
addl
cmc
jo
inc
std
int3
cs
imul
popf
jl
adc
xor
fdivrl
pusha
inc
mov
mov
xchg
cmp
ja
cmp
movsb
add
fldcw
sbb
int3
arpl
mov
out
ret
mov
sbb
push
aaa
sub
dec
insb
xorb
call
pusha
jp
cmp
push
pusha
imul
std
scas
adc
pushf
add
adc
stos
pop
adcb
iret
ja
inc
test
aas
mov
in
cmp
jb
add
scas
popf
mov
leave
push
jp
push
rorb
xor
dec
mov
sarb
div
mov
mov
xor
sub
mov
xor
sub
or
lea
push
mov
push
pop
div
mov
xor
div
mov
mov
xor
xor
div
imul
sub
push
mov
add
push
mov
sub
mov
pushl
call
mov
mov
lea
mov
incl
mov
mov
xor
shld
shl
mov
mov
xor
xor
cmp
jne
cmp
jne
mov
mov
jmp
jmp
sbb
cmpsb
fs
mov
movsl
out
jge
ret
xchg
sbb
mov
test
push
mov
lea
pop
test
cmpsb
mov
inc
mov
mov
lock
aas
xchg
jl
push
sti
add
push
fdivl
mov
push
fsubr
xchg
fbstp
xchg
cmp
jmp
test
jle
xchg
pop
ja
push
xor
ficompl
into
ja
xor
mov
and
rorb
mov
aas
testb
xchg
mov
daa
in
ret
aam
xchg
adcl
or
add
repnz
es
add
and
cli
mov
jbe
loope
cmpsb
sub
jo
adc
cld
jmp
out
imul
dec
mov
mov
pop
push
test
ja
xchg
xchg
dec
inc
push
sub
fsubs
mov
mov
pusha
jno
push
mov
dec
jns
loop
sbb
and
mov
or
jns
iret
xor
inc
jmp
mov
push
xchg
icebp
add
and
jae
mov
push
pop
clc
cmp
pop
or
cmpb
inc
lret
or
jle
into
xchg
push
out
jge
inc
clc
ficompl
inc
mov
stos
inc
mov
cmp
cmp
mov
jle
addr16
dec
jmp
push
pusha
pop
mov
fsubs
push
mov
inc
lahf
push
adc
mov
ret
jns
stc
or
mov
test
stos
push
cs
jns
movsb
aaa
subb
dec
daa
mov
push
daa
xchg
or
loopne
jno
sub
gs
loope
xchg
test
jle
cli
bnd
es
bnd
lods
orl
lock
push
add
test
pop
loop
jl
clc
pop
rcrl
outsl
cmp
repnz
mov
les
jmp
sub
mov
lods
stos
jp
std
jmp
testb
aad
xorl
popl
out
in
xchg
cwtl
arpl
outsb
sarb
loopne
cwtl
mov
sbb
cmp
jmp
scas
xor
in
in
cmpsb
adc
and
movsl
cmp
pop
cmpsl
fnop
sub
adc
lahf
pop
mov
jo
enter
push
call
sbb
and
shl
dec
xor
mov
add
sti
movsl
int
inc
lock
mov
mov
mov
mov
sub
mov
mov
mov
sub
mov
movl
movl
mov
mov
mov
mov
pushl
pushl
pushl
pushl
pushl
push
push
pushl
mov
call
mov
mov
pushl
call
mov
push
add
push
push
call
mov
jmp
mov
mov
pop
pop
leave
ret
push
mov
sub
push
push
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
push
push
push
call
mov
mov
add
adc
and
push
and
or
push
jmp
pop
jp
movsb
mov
fsubl
xor
sbb
mov
sbb
push
and
jne
iret
aas
or
mov
mov
ss
imul
jo
psllq
inc
roll
push
mov
or
out
cmp
jg
fdivrs
jb
cltd
inc
lea
jg
sub
mov
dec
xor
mov
stos
xlat
leave
mov
push
std
xchg
jno
mov
jb
sub
loope
pop
pusha
leave
sbb
stos
mov
jl
adc
cmp
outsb
mov
mov
or
adc
sub
and
loop
mov
lcall
mov
int
mov
loop
ret
xor
inc
mov
cmp
testb
lea
mov
jbe
rorb
jb
xor
rcl
and
cmpl
jno
lret
imul
ss
sbb
jae
lods
pusha
or
jns
loope
ror
jno
out
add
sti
lret
in
stos
cmp
dec
int
mov
testb
jns
dec
adc
jae
jae
add
adc
nop
movsb
xchg
inc
inc
imul
insb
sub
cmpsb
sahf
xor
popf
xor
cld
test
xor
cs
sahf
in
lds
jmp
idiv
inc
rorl
xchg
movsb
loop
aam
mov
in
ret
insb
push
sbb
je
movsl
xor
cmp
cmpsl
nop
pop
shll
inc
jecxz
aam
stos
xor
fwait
xor
int3
push
sbb
aas
mov
jb
outsl
loope
iret
xlat
adc
je
inc
loop
jg
stos
sbb
sbb
les
xor
mov
cmpsb
mov
test
dec
fildll
xor
sub
out
xchg
dec
icebp
mov
adc
shl
pop
fcmovnb
test
xchg
or
sbb
xchg
scas
rcr
sbb
sbb
sbb
add
popf
pop
test
jo
or
mov
mov
cmp
shll
xor
daa
loopne
pop
or
testl
das
test
in
popa
outsl
jmp
repz
pop
mov
jns
daa
in
iret
dec
lock
dec
dec
sahf
jmp
ja
loopne
mov
push
insl
mov
in
mov
lcall
ja
cmp
jo
adc
adc
ret
faddl
push
es
rorb
xor
xor
push
push
call
mov
movl
movl
movl
movl
xor
movl
push
inc
mov
mov
mov
push
push
push
call
mov
mov
or
or
push
add
push
adc
push
push
call
mov
lea
xor
mov
div
mov
sub
mov
movl
jmp
jno
xchg
mull
mov
ljmp
sbb
icebp
mov
sbb
mov
test
sub
adc
fcmovu
pop
jns
dec
xchg
mov
imul
addb
fbld
cmc
add
in
xor
jge
push
xchg
mov
inc
jmp
jo
jnp
into
mov
aaa
data16
mov
shll
ss
pop
xchg
cmpsb
xor
dec
leave
jg
repnz
cwtl
popf
shll
shlb
rorb
sub
jae
nop
jl
mov
push
fsts
push
cmp
add
xor
iret
sbb
data16
in
sbb
and
xchg
insb
sbb
lds
mov
sahf
jle
mov
outsl
jb
push
fwait
sbb
lret
test
jne
stos
cmp
mov
and
outsb
xor
sbb
xchg
mov
rol
movsl
dec
jl
pusha
sbb
jmp
stos
enter
mov
je
mov
add
clc
movsb
sub
je
cli
jmp
jnp
sbb
xor
movsb
les
cmc
pop
sbb
inc
sbb
lds
mov
lcall
sbb
xor
lock
lods
jno
or
ret
push
inc
lock
stos
hlt
jp
shll
mov
cli
cltd
into
fimuls
mov
jg
and
cmpsl
mov
xchg
insl
jle
sbb
mov
stc
hlt
ret
cmp
data16
fwait
mov
shrl
push
sar
xor
pop
ficoml
inc
test
sti
push
sbb
jle
mov
cwtl
into
fistpll
gs
and
lcall
loop
sarl
jp
cmpsb
inc
mov
les
mov
cli
daa
cmc
or
sub
sbb
cmpsl
push
xchg
xchg
jo
mov
push
fsub
ds
push
mov
mov
stos
xchg
lahf
mov
gs
loopne
ljmp
inc
sti
shl
loopne
or
scas
out
xchg
nop
adc
inc
mov
sbb
je
sub
jg
mov
lods
rcr
sti
cmp
out
or
pop
dec
lods
mov
and
rcrb
cmc
ret
or
dec
adc
push
movsl
call
in
inc
jnp
add
push
data16
hlt
jl
jl
mov
fstl
push
add
gs
and
iret
xchg
jl
mov
dec
mov
dec
and
fisubrs
mov
mov
mov
or
pop
outsb
sbb
inc
or
mov
movl
mov
mov
sub
jmp
test
mov
push
call
sbb
lcall
sub
mov
arpl
cltd
ds
pop
mov
pop
xchg
jl
out
push
imul
jae
xchg
cmc
mov
mov
sbb
cli
pop
fiaddl
cmc
xchg
dec
ljmp
cltd
sub
sahf
mov
mov
adc
data16
mov
mov
and
dec
pop
push
sbb
push
leave
dec
sbbb
xchg
jnp
stos
cmp
xchg
jae
dec
sub
jae
out
cld
sbb
dec
xchg
addl
pop
jmp
xor
stos
loop
aad
cli
outsb
cmp
inc
cmp
sbb
jns
std
dec
jns
sbbb
gs
lods
add
mov
fcmovu
jp
loope
pop
adc
xchg
jae
stos
mov
lret
movsl
inc
pop
push
mov
jnp
ret
cmpb
add
lret
add
jnp
adc
insb
roll
sarl
into
lds
pop
xchg
lahf
pushf
jle
add
adc
ss
cld
jne
or
ret
mov
xchg
xchg
test
xor
pop
pop
aas
jmp
jge
out
in
adc
hlt
push
mov
jae
loope
mov
lods
pop
xor
sub
lret
enter
mov
pop
lret
and
inc
pop
out
in
rcr
dec
imul
inc
mov
imul
xor
cmp
sub
pop
pop
in
push
rol
je
cld
add
pop
pushf
push
and
push
mov
xchg
dec
inc
ds
cs
imul
sbb
cmpsb
xlat
jle
jle
xchg
sbb
hlt
imul
sti
push
movsl
xor
sbb
pop
insb
sub
cmp
out
es
lahf
mul
mov
push
leave
outsl
fdivl
and
mov
jb
xchg
lods
sarb
cmp
pop
inc
push
ljmp
icebp
repz
xor
ret
outsl
sbb
add
push
aas
adc
push
jg
movsl
leave
jno
lret
add
fnsave
pop
or
adc
jge
or
cmc
dec
jmpw
popa
stos
sahf
aad
inc
mov
aad
mov
or
movsb
int
mov
jne
push
and
js
rcl
dec
shll
icebp
xor
mov
aad
mov
or
xchg
sub
jne
xchg
mov
or
dec
repnz
lock
or
inc
jnp
mov
xor
ljmp
hlt
pop
inc
std
mov
xor
div
mov
xor
or
or
mov
mov
movl
movl
movl
mov
add
mov
and
lea
mov
mov
mov
movl
movl
movl
mov
mov
sub
add
xor
add
mov
div
mov
xor
pop
pop
or
mov
movl
movl
movl
mov
mov
and
sub
or
mov
imul
mov
div
leave
ret
push
mov
sub
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
jmp
mov
jnp
push
jl
mov
sarb
jl
sbb
sbb
test
dec
dec
leave
shll
cmpsb
xchg
mov
inc
jo
fsubrs
ficompl
in
sub
sbb
out
addb
jl
adc
sbb
es
enter
cmp
or
sti
outsl
jns
into
outsb
sub
in
andl
repz
inc
mov
insl
pop
popf
enter
push
push
fwait
and
adc
pushf
xchg
divb
jnp
mov
fisttps
js
dec
or
cs
out
sbb
insl
mov
jb
stos
mov
jle
add
orl
jecxz
incb
in
fldt
adc
test
sbb
sti
dec
push
out
mov
into
inc
insl
mov
sub
fisubl
aam
ds
stc
inc
and
lahf
and
push
sub
sub
mov
sub
push
sbb
and
adc
fmuls
xor
push
loop
popa
in
pop
in
jg
insl
into
cli
in
test
inc
fdivs
jo
inc
xor
sub
inc
aad
or
or
adc
push
fisttpll
cltd
shr
popa
cmp
shr
mov
mov
push
mov
in
sbb
mov
sub
data16
and
xor
mov
icebp
cmc
gs
int
or
sub
cmp
imul
mov
aaa
add
jae
xlat
mov
mov
add
ljmp
pop
movsl
scas
fsubrs
dec
sub
adc
aaa
popf
push
adc
outsb
aaa
in
out
jns
mov
popf
jg
insl
xor
lahf
rcll
xchg
ret
int3
pop
outsl
cmp
and
push
mov
mov
mov
cmp
dec
adc
jbe
adc
or
shrl
scas
dec
out
push
rorl
shlb
sbb
and
inc
in
subl
pop
mov
out
arpl
enter
fstpl
lods
jo
or
pop
and
aas
hlt
lret
push
xchg
dec
test
lcall
mov
lods
sbb
ss
aam
and
shrb
jmp
add
test
dec
sbb
add
test
pushl
test
decl
test
push
adc
add
test
ljmp
data16
add
inc
clc
shrb
add
jle
add
jo
add
dec
sub
sub
sub
jno
sbb
rol
dec
daa
jb
pop
jle
jne
pop
stos
xor
outsl
mov
or
push
jno
and
nop
arpl
fs
test
sti
adc
push
pop
add
adc
add
jmp
dec
sti
stos
or
lcall
sbb
push
sub
dec
test
inc
pop
cli
addb
inc
xor
pop
std
scas
inc
push
pop
lds
std
fbstp
lret
push
scas
inc
push
pop
mov
pop
jmp
push
sbb
jge
mov
jns
sub
push
pop
arpl
cld
and
xor
loop,pt
xchg
dec
add
sbb
aaa
xchg
and
ss
ds
mov
ss
add
dec
fsub
mov
xor
imul
jmp
hlt
adc
dec
push
movsl
inc
dec
jle
aas
popa
push
push
push
fdivrp
ret
and
rorb
rcl
push
adc
arpl
xor
hlt
and
mov
jp
popa
lret
and
sbb
shr
push
gs
fwait
add
push
fmuls
pop
stc
pushf
cs
push
hlt
push
icebp
sub
jo
popf
xchg
mov
push
cmpl
int
pop
subl
in
xorb
orb
lret
ficoms
xor
jne
push
cli
push
and
sbb
push
add
jle
xchg
jecxz
push
pop
inc
push
mov
jecxz
sub
push
movsl
xchg
shrl
xchg
xor
pop
mov
fcompl
leave
scas
jo
inc
inc
mov
jp
jecxz
loope
cmp
add
cmp
mov
pop
iret
mov
cmc
inc
iret
test
xor
jmp
scas
pop
xchg
mov
nop
icebp
mov
xchg
mov
in
adcb
cmpsl
mov
sub
test
push
or
adc
jbe
je
inc
mov
pop
sbb
test
mov
pusha
int3
mov
sub
mov
and
shrb
popa
mov
jl
xlat
inc
cmpsb
mov
out
sbb
cld
pop
ljmp
push
push
movl
mov
mov
push
push
push
call
mov
mov
xor
mov
mov
mov
xor
jmp
lds
fisubrs
sbb
pusha
mov
pop
jo
je
sbb
sbb
push
jno
cs
data16
sbbw
cmp
add
sub
rcll
adc
push
dec
jbe
add
stc
out
or
pop
sbb
dec
jo
nop
movd
or
inc
outsl
pushf
mov
cmp
bound
outsl
mov
shll
popf
sbb
arpl
cwtl
in
cmp
sub
mov
push
pusha
xchg
cwtl
add
mov
jb
imul
dec
jns
cltd
pop
aam
stos
test
fs
mov
mov
lret
jne
fisubrs
fistpl
int
and
push
cmp
sub
xor
sub
inc
inc
pop
movsl
rcrl
cmp
idiv
jl
aaa
les
aam
xchg
insl
inc
mov
cwtl
mov
ret
fdivrl
hlt
sahf
xchg
sbb
dec
jge
enter
dec
sub
pop
pop
mov
sbb
mov
cmp
insb
sbb
fists
ss
cltd
or
xor
frstor
ret
orb
or
mov
xchg
pushf
sbb
jl
ds
add
xorl
lcall
out
ret
dec
push
xor
inc
ss
shlb
ja
push
or
call
or
push
rol
fldcw
pop
cld
cwtl
int3
pop
mov
and
out
fnstcw
popf
adc
sub
mov
xchg
sbb
mov
mov
mov
mov
gs
jmp
ret
jle
push
aam
gs
xor
lret
dec
mov
repz
mov
xor
jo
and
push
loopne
movsl
je
loope
stos
adc
aas
dec
push
fisubs
or
in
pusha
mov
ret
cwtl
jle
mov
aam
sub
sbb
adc
mov
btc
sahf
mov
test
pushl
mov
incb
jns
and
loop
dec
bound
int3
add
mov
scas
pushf
arpl
cmp
lds
push
mov
pop
cmp
inc
xchg
mov
data16
js
stc
movsl
cmpsb
lock
mov
xor
or
mov
mov
mov
xor
or
add
cltd
adc
cmp
jne
cmp
je
mov
jmp
loope
lods
aam
mov
gs
imulb
sbb
sbb
add
cmc
sbb
lret
xchg
scas
mull
jns
fdivrs
xchg
add
mov
pop
mov
fbld
enter
rcrl
or
mov
jb
pop
sbbl
arpl
sub
cwtl
in
rolb
jg
dec
mov
in
adc
popl
adc
xor
inc
push
adc
pop
test
xor
and
dec
scas
ret
push
movsl
xor
bound
sub
lds
clc
repnz
add
call
ljmp
jmp
lret
jne
shll
sub
or
xor
test
inc
sub
jge
fdivl
xchg
dec
adc
mov
and
enter
lds
inc
dec
pop
div
lock
pop
xorl
jle
clc
mov
cltd
fmul
push
jp
iret
addl
cld
sub
fldt
dec
mov
loop
inc
mov
inc
cmp
add
adc
inc
jo
mov
dec
into
cld
lods
jmp
or
ljmp
lret
jbe
test
bound
xchg
jle
out
add
mov
adc
sbb
inc
or
dec
test
arpl
sub
arpl
and
xchg
mov
jl
inc
popa
shlb
cwtl
lods
das
mov
adc
xor
cmp
into
lods
aad
adc
inc
ds
cli
xchg
cmp
xor
pop
xchg
mov
ficomps
in
push
jl
xchg
test
push
scas
outsl
jno
fnsave
mov
mov
loopne
pop
dec
es
mov
push
shll
xchg
in
test
sbb
iret
jge
scas
rolb
lods
dec
popa
adc
dec
pop
cmp
ja
je
cli
insl
sub
mov
jns
dec
cs
sbb
xchg
dec
mov
sub
dec
insb
push
sbb
adc
loope
inc
popa
and
lret
stos
aas
into
add
icebp
cmpsl
sbbb
dec
fidivrs
je
roll
aaa
into
lcall
xchg
test
dec
mov
push
mov
sbb
add
add
ret
nop
jmp
pop
and
xor
pop
sbb
sbb
sbb
sbb
daa
and
testl
push
stos
test
lock
xchg
lret
mov
cmpsl
lret
aas
insl
mov
xor
pop
ja
loopne
xor
push
pushf
push
cmp
adc
pop
addl
and
cwtl
test
xor
mov
jmp
cmp
fdivl
shr
jle
fdivrl
mov
filds
out
repnz
xchg
loop
repnz
push
jbe
sbb
pop
pop
xor
aam
insl
or
test
and
mov
push
gs
sub
int
sbb
fucomi
popa
inc
push
cmp
mov
std
loopne
push
mov
and
popa
shrl
xchg
push
xchg
outsl
aas
jbe
aad
pop
cli
xchg
sub
jmp
je
xchg
aas
stc
push
lea
dec
aas
not
push
fchs
pushf
cld
xor
lret
popf
or
push
inc
mov
mov
sub
pusha
lcall
js
icebp
cmp
mov
fistpl
cltd
mov
cli
or
cmp
inc
hlt
stos
popa
cmp
and
sbb
xchg
fistl
sbb
rcr
and
fnstenv
ret
dec
jne
xchg
loope
int
or
outsb
mov
sahf
aad
push
outsl
out
test
mov
test
popf
aad
scas
mov
fcoms
pop
in
jmp
sbb
and
push
dec
int3
dec
icebp
ret
fdivrs
push
push
ffreep
or
cmc
and
sahf
ror
jle
rolb
jno
xchg
mov
out
mov
push
cmpsb
lea
cltd
and
mov
movsl
mov
aas
push
dec
add
mov
sub
jl
adc
dec
add
ja
xchg
iret
pop
jbe
push
in
jle
shll
in
pusha
cmc
icebp
cmp
dec
dec
dec
sbb
std
in
mov
adc
ds
inc
out
mov
dec
xchg
sbb
into
xor
jl
cwtl
mov
cmpsl
and
cld
loopne
cld
cmpb
into
leave
lock
data16
cmp
lret
add
adc
mov
into
mov
push
push
push
push
call
mov
mov
and
mov
mov
mov
and
xor
xor
xor
cmp
jne
cmp
jne
mov
mov
add
or
mov
or
xor
lea
xor
mov
and
add
mov
xor
xor
div
mov
mov
xor
imul
mov
push
jmp
mov
push
jle
inc
inc
jne
fists
jl
data16
jno
sbb
data16
xchg
loopne
in
sbb
cltd
lahf
fimull
sbb
aam
bound
enter
pushf
rclb
xor
in
icebp
inc
mov
call
fidivs
cmc
push
inc
jnp
adc
rcrb
push
fsts
pop
jnp
or
insb
in
adc
fiaddl
cmp
popa
and
sub
dec
shll
cmpsl
stos
push
mov
pop
test
insb
bound
sti
and
aas
inc
mov
ret
dec
push
pop
mov
jmp
add
aad
mov
dec
sub
shr
shrl
cmc
into
inc
jno
je
fwait
inc
lds
iret
enter
mov
stos
fiaddl
and
jne
jnp
icebp
sbb
fisttps
ds
incl
or
dec
sbb
sub
push
xchg
je
fwait
ret
pop
js
int3
pop
clc
sbb
jbe
xor
and
pushf
sti
cltd
dec
inc
es
aas
cs
je
movl
pusha
adc
jae
sti
out
or
dec
imul
sub
lock
cmc
push
popa
jecxz
add
loope
fisubs
inc
sbb
and
enter
shl
lcall
cld
jo
call
fildll
lret
cmp
cld
test
nop
jnp
mov
xchg
clc
stc
xchg
push
fdivrp
or
sub
sbb
dec
daa
sbb
inc
jecxz
cli
gs
fistps
cmpsb
lret
out
loop
or
pusha
adc
cmpsb
out
stc
std
shlb
outsl
adc
push
movsb
dec
or
jno
mov
push
in
xchg
mov
lods
call
fwait
les
cmp
rcrl
jno
jecxz
outsl
mov
cmp
repnz
xchg
dec
outsb
hlt
inc
cld
insl
sub
and
mov
cmp
mov
test
sub
fstpt
pop
cmp
les
jo
loope
or
fldcw
jne
shll
ret
pop
je
addb
pop
daa
fdivp
out
pop
jo
mov
push
xchg
xor
xor
sti
push
testl
mov
pushf
dec
pop
arpl
ss
and
ret
in
test
add
mov
lea
mov
mov
lea
mov
mov
or
xor
div
mov
add
xor
add
mov
add
mov
mov
mov
mov
sub
mov
sbb
mov
xor
mov
xor
mov
jmp
mov
xchg
cli
push
fistpl
jge,pn
stos
stos
movsb
push
jle
pusha
sbb
jno
sbb
aaa
xor
stc
test
testb
rcl
andb
xor
cli
mov
xchg
outsl
push
cmp
mov
stos
jle
mov
xor
mov
fisubs
dec
out
adc
ficompl
stos
insl
add
mov
rorl
jge
mov
inc
add
pop
mov
mov
fwait
or
adc
cmp
dec
pop
outsb
mov
jg
mov
stos
lods
aam
cmpsl
or
inc
and
in
xchg
not
mov
push
mov
lods
clc
sub
sbb
ja
xchg
sahf
testb
js
mov
add
js
fisubl
mov
aam
or
push
cmpb
xor
xor
or
lcall
add
arpl
and
jge
shrb
xchg
or
push
push
sub
sbb
pusha
in
push
cmp
pusha
cltd
test
mov
mov
mov
imul
mov
aas
adc
loope
cmp
test
lcall
movsl
mov
add
aaa
lods
ja
sub
dec
ss
outsl
int3
cwtl
fimull
in
fcomps
and
out
movb
fucomi
mov
jb
pop
push
inc
ret
jg
sti
mov
loopne
xor
mov
jg
maxps
shll
cmp
mov
int3
imul
or
xchg
divb
leave
mov
xchg
or
rcll
adc
jecxz
ja
pop
and
lods
lret
das
jge
xchg
xchg
cmp
pop
push
sub
inc
or
and
and
stc
pusha
cmc
ret
push
aaa
shr
lahf
stos
pop
xor
lods
mov
push
mov
fsubrl
push
sub
int3
xchg
lret
popf
jb
cmc
inc
pusha
xor
jmp
cmp
call
out
xchg
sbbl
jns
cmc
xchg
test
push
xchg
sub
out
std
mov
lahf
popa
push
mov
sbb
insl
pop
es
pusha
jmp
or
fwait
push
cmp
dec
fldcw
rclb
icebp
add
adc
push
push
call
mov
sub
push
pop
jmp
jae
mov
sbb
jo
stos
mov
sbb
sbb
sbbl
mov
add
xchg
shrb
leave
inc
test
mov
lea
xor
pusha
push
ror
pop
js
push
stos
je
lods
or
mov
sbb
sahf
add
outsl
orb
add
mov
sub
pushf
movsl
jo
or
and
pop
ja
leave
adc
inc
adc
xchg
pop
mov
std
pop
xchg
push
push
ljmp
mov
shll
adc
mov
jbe
add
lds
mov
clc
inc
push
jp
inc
jae
adc
and
adc
pop
push
pop
and
lea
dec
subl
lods
rcll
outsl
shll
movsl
adc
push
insb
cs
dec
test
mov
mov
xchg
mov
jne
xor
jbe
cmp
xchg
test
ret
int
push
lds
mov
imull
push
popa
or
ja
or
push
or
out
lret
inc
mov
cs
clc
add
in
ss
inc
in
jns
push
in
and
stos
xorl
iret
xchg
jns
mov
outsb
push
sbb
xchg
data16
xor
pop
mov
jns
or
ficoml
and
cmp
pop
mov
orl
sub
in
out
inc
dec
je
rep
jge
pop
out
or
sbb
mov
cmp
mov
mov
xchg
fbstp
jno
int3
daa
sub
sti
movsl
cmp
jne
rcll
nop
adc
lahf
mov
pop
pop
push
ficompl
push
mov
push
xchg
movsl
stos
mov
jecxz
es
pop
stos
test
mov
ss
popf
sub
sbb
fimuls
dec
mov
sub
lock
pop
cltd
cmp
push
jg
sub
cmp
mov
xor
sbb
stc
popa
ja
cld
aam
mov
inc
xor
shlb
sub
out
push
pop
in
cmpsl
mov
push
jmp
or
or
inc
mov
xchg
and
ret
cld
and
cmp
jne
cmp
jne
mov
mov
add
shr
or
mov
xor
xor
add
mov
pop
leave
ret
push
mov
sub
push
push
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
mov
mov
jmp
icebp
not
xchg
into
xor
jbe
cmc
gs
scas
pop
sbb
stos
adc
sbb
int3
std
loope
jecxz
fsubs
inc
add
pop
cmpsl
push
or
adcl
mov
icebp
das
adc
push
adc
xchg
jae
loope
and
adc
clc
and
add
sarl
mov
mov
rcrb
sub
test
movsb
mov
mov
and
cmp
aaa
inc
psubusb
fsub
mov
pop
xchg
scas
add
push
movsb
xchg
not
jg
mov
jne
adc
sub
js
out
cmp
dec
imul
outsb
sub
xchg
dec
push
ss
push
xchg
adc
repnz
cmpb
cltd
add
shlb
stc
cmp
jle
mov
jg
pop
cltd
sbb
pop
dec
push
add
dec
push
cld
orb
sbb
out
inc
adc
dec
test
push
dec
mov
adc
xor
jno
inc
xchg
das
mov
adc
insl
mov
pop
hlt
pushf
dec
test
out
fcmovb
mov
sub
inc
fs
js
or
in
cmp
add
in
xchg
jecxz
lret
sbb
inc
xchg
fcmovnb
ljmp
mov
mov
push
sub
fs
leave
mov
and
lods
fstpt
jo
mov
fcmovbe
outsl
cmp
setp
es
sti
loop
sti
mov
addl
mov
nop
mov
out
inc
jmp
sub
and
fimull
jle
out
mov
or
fninit
shrl
sbbb
bound
dec
mov
outsb
nop
mov
or
push
in
xchg
loopne
cmp
jmp
bnd
mov
ret
testl
push
xor
test
lock
sbbl
ret
jecxz
or
jnp
testl
sbb
stos
jg
lods
and
cltd
int
xchg
lcall
pop
into
insb
or
fstl
lret
les
pushf
push
pop
das
scas
mov
call
add
ds
mov
jp
mov
pop
sti
shll
pop
jg
cld
gs
sbb
es
mov
outsb
sbb
sbb
mov
inc
test
iret
aas
cs
fisttpll
test
clc
push
xor
mov
and
cmp
cmp
loopne
xchg
push
fimull
xlat
int3
jbe
arpl
xchg
loope
movsb
mov
lret
lret
and
dec
cmp
bound
mov
xor
sbb
shrb
test
mov
sbb
sub
mov
fisttpl
push
adc
ret
out
cltd
dec
add
pop
jbe
aad
inc
push
popa
mov
sub
cmp
or
movsl
push
cmp
lock
cmpsl
mov
mov
loopne
je
jmp
add
mov
mov
xor
sub
mov
sub
push
pop
test
or
loop
xchg
mov
add
inc
xchg
hlt
xor
push
mov
pop
dec
inc
out
mov
imul
sti
cmp
xchg
cwtl
roll
in
rcr
loopne
pop
addb
xorl
lret
mov
jo
and
sub
mov
lock
repz
push
pavgb
cmp
xorb
push
in
push
jle
loope
or
mov
mov
mov
mov
add
mov
adc
mov
push
push
or
or
jmp
cmp
sahf
cmp
mov
inc
push
sbb
stos
adc
sbb
outsb
xor
scas
mov
pop
imul
and
dec
pop
test
loopne
ret
cmpsl
add
inc
push
jb
mov
pushf
icebp
loop
ja
sub
pusha
mov
cmc
xchg
pushf
push
stc
adc
xchg
ja
push
sbb
test
movsb
adc
push
jbe
out
hlt
add
pop
mulb
ret
pop
sub
loopne
xchg
adc
inc
es
dec
sbbl
jnp
or
and
mov
aaa
loopne
xchg
or
xor
and
xchg
and
or
loop
xor
movsl
cli
mov
scas
shrb
aaa
lods
leave
or
or
pop
pop
sub
mov
int
or
leave
aas
fisttps
adc
jae
add
notl
sub
jbe
jne
jb
inc
or
cwtl
testl
cmp
dec
mov
pushf
mov
mov
ds
cmp
in
or
jmp
dec
stos
dec
dec
lret
cltd
mov
out
xchg
jae
lods
clc
push
xchg
adcl
xor
lods
into
mov
call
sub
cwtl
out
xchg
push
mov
in
cli
mov
mov
dec
or
add
cmp
mov
mov
push
mov
adc
movsb
pop
dec
mov
fwait
outsb
out
stc
arpl
test
sbb
adc
cwtl
sarb
inc
pop
dec
andb
cmpb
repnz
fstp
dec
inc
ficompl
inc
mov
jb
sahf
mov
pop
xchg
jp
lock
inc
movsb
imul
fmuls
fmulp
mov
frstor
mov
aam
out
cmp
jge
ja
lods
xor
scas
jno
mov
in
cmc
sub
xchg
aas
adc
and
fs
hlt
mov
push
icebp
sbb
or
test
pop
hlt
test
jo
in
lret
je
lahf
push
xor
fs
mov
test
lock
in
divl
pop
out
lahf
xchg
cmp
popf
cld
rcl
push
adc
aad
and
mov
push
adc
mov
stos
or
mov
addb
scas
pushf
ja
das
outsl
insb
andb
push
insl
lahf
push
js
sub
cmp
jle
ret
es
outsl
out
or
in
mov
or
sbb
dec
inc
adc
outsl
shll
iret
inc
jmp
loope
cmp
cmpsb
test
aaa
js
jge
lods
xchg
data16
cmc
std
sti
adc
int3
push
test
test
enter
or
repz
es
push
mov
aam
pop
mov
mov
sub
je
in
pop
lret
popa
pop
mov
pop
ret
adc
lods
dec
les
sahf
mov
cmp
sarb
rorl
mov
scas
mov
or
inc
stos
movsb
pop
lea
sbb
xor
out
pusha
xor
fistpl
andl
jbe
sbb
mov
adc
xchg
jbe
pop
sub
cmpl
dec
xchg
adc
mov
faddl
clc
rolb
xchg
xchg
ss
out
mov
mov
adc
fidivrl
shll
ret
add
xchg
mov
push
call
mov
mov
and
or
mov
mov
and
or
xor
xor
shld
shl
shr
xor
or
or
xor
mov
mov
xor
mov
mov
mov
mov
mov
push
push
push
push
call
add
jmp
push
push
jbe
jb
mov
push
xchg
push
jle
dec
sbb
stos
adc
sbb
nop
ljmp
mov
inc
dec
mov
sub
cmp
dec
cmpsl
or
inc
xchg
or
push
mov
insl
mov
ds
inc
and
add
add
shrl
out
mov
xchg
inc
in
cltd
xor
ja
cs
xor
adc
mov
loopne
pushf
inc
ss
sbb
fisttpll
jno
fldl
xchg
mov
sbb
cltd
mov
xchg
xor
mov
jae
mov
fmull
roll
jno
xchg
pop
mov
cmpsl
lahf
test
subb
sbb
test
xchg
cmpb
ljmp
fidivl
shrl
inc
popa
pop
or
xchg
cmp
mov
push
fsubs
push
xchg
cmpl
push
movsl
cmc
adc
popa
dec
add
fwait
cmp
in
or
mov
stos
ds
scas
lret
daa
arpl
std
mov
jne
sarl
sarb
out
jnp
popf
lret
aam
mov
xchg
or
mov
add
popf
negl
pop
mov
out
jno
in
xor
sarl
mov
movsb
dec
insl
enter
adc
mov
sbb
or
cmpsb
fisubs
insl
jecxz
aam
lds
mov
test
add
dec
sub
repnz
mov
sub
rolb
dec
gs
das
push
dec
inc
mov
fdivrl
arpl
mov
jl
lahf
xor
dec
sarb
movsl
rcrb
in
mov
adc
lods
in
lret
and
mov
in
and
clc
int3
xchg
rorl
out
ret
mov
pop
fisttps
outsl
adc
mov
jmp
cltd
popa
xor
test
nop
push
cmp
arpl
insb
xor
cmc
mov
xchg
add
dec
mov
dec
xchg
cmpsl
cmp
arpl
xor
fsub
mov
mov
rcll
imul
or
sarl
clc
push
movsl
cmp
push
jns
mov
outsl
std
addr16
jg
jne
push
push
test
ss
cmc
cmp
test
add
push
push
inc
out
pop
and
jge
ficompl
loop
dec
fisttps
mov
sbb
inc
xchg
cli
in
and
adc
test
xchg
enter
cmp
test
xchg
pop
add
adc
cltd
push
pop
jl
xlat
sbb
pushf
xchg
addr16
repnz
test
xchg
and
scas
jmp
je
icebp
cld
xor
or
jle
repz
and
movsb
dec
or
inc
mov
stos
daa
mov
push
sbb
aas
adc
mov
psrad
xor
fmul
adc
sbb
ljmp
or
push
mov
dec
cmpb
mov
add
cmp
pop
mov
mov
sbb
popw
jmp
and
mov
scas
jl,pn
das
dec
dec
icebp
xchg
cwtl
inc
fiaddl
mov
mov
mov
xor
cmp
inc
and
adc
cmpsl
lock
outsl
sahf
clc
fs
les
and
xchg
add
and
insb
push
nop
cmpsl
jmp
xlat
inc
adc
test
mov
xor
pop
stos
andps
xor
push
add
rcr
cltd
mov
adc
jns
bound
inc
iret
in
cli
adc
push
push
push
push
call
mov
mov
jmp
or
sbb
jmp
cld
mov
stos
adc
sbb
cmp
pop
mov
enter
xchg
cmc
gs
jg
inc
fsubs
int3
mov
js
pop
movsb
jecxz
xchg
outsl
cltd
fisubrs
idivb
or
mov
in
mov
jo
leave
fucomip
das
push
mov
in
in
lret
mov
fdivp
add
xchg
into
dec
jae
mov
pop
scas
sbb
iret
mov
cmp
and
pusha
adc
jns
pop
mov
aam
orb
add
push
or
push
sahf
outsl
lea
or
inc
adc
mov
add
sbb
nop
nop
outsl
ficoms
daa
sti
scas
or
in
add
das
or
test
add
icebp
dec
xor
sub
push
sahf
sub
data16
xor
push
xchg
ss
icebp
fadds
mov
ljmp
gs
mov
in
add
out
add
cld
push
or
mov
jl
lea
std
gs
add
dec
scas
stos
aam
mov
or
pop
adc
add
dec
notb
stos
cmp
repz
dec
cmp
push
enter
mov
xor
jbe
orl
lods
out
cmc
fnop
arpl
rclb
inc
dec
xchg
adc
repnz
push
das
xchg
lea
fmull
mov
js
xor
inc
mov
clc
push
and
jns
or
lea
cmp
in
in
inc
jne
loopne
dec
outsb
add
repnz
cwtl
lret
jnp
pop
xor
into
inc
aam
xor
mov
iret
ret
jle
data16
cwtl
mov
push
sbb
test
ficoml
xor
mov
inc
and
sub
daa
push
add
push
fs
sbb
jbe
cli
lret
mov
jo
test
pop
pop
scas
add
lock
das
enter
jmp
test
subb
xor
xchg
mov
sbb
lret
cmp
and
xchg
fbstp
ds
and
popf
cs
shrl
addr16
pop
pop
lret
lock
cltd
dec
pop
mov
les
les
into
cmp
mov
int3
js
rolb
bts
and
or
stos
add
cltd
mov
or
jno
popf
push
mov
les
jbe
adc
ds
jp
out
jmp
in
and
popaw
pop
fldcw
push
enter
add
jbe
inc
mov
add
push
imul
jnp
into
pop
inc
push
addl
insb
mov
aas
jge
mov
pop
data16
cmp
jo
lds
rcrb
les
mov
insl
xor
add
fstp
sub
mov
mov
adc
mov
or
fldenv
repnz
out
xlat
ljmp
sub
fmull
test
and
into
int3
fstps
pop
outsl
es
adc
ljmp
mov
call
sub
dec
xor
jle
mov
jl
lods
mov
cs
cmp
or
push
stos
cmp
push
outsb
arpl
xchg
jns
icebp
rol
arpl
inc
divl
aad
xor
outsb
mov
pop
mov
bound
lret
neg
hlt
sti
dec
mov
xor
xor
xor
add
mov
adc
mov
mov
mov
mov
mov
sub
mov
mov
sbb
mov
sub
mov
sbb
jmp
out
inc
jp
jp
sub
xchg
cmp
push
mov
idivl
sbb
stos
adc
sbb
push
pop
repnz
sbb
fadds
adc
stos
je
ror
pop
push
jmp
shrb
repz
out
and
cld
fstps
mov
popf
scas
ret
out
cmp
out
cmp
add
mov
jbe
int
jmp
or
sbb
push
lret
sti
mov
push
rolb
push
mov
cmpsb
xchg
push
jno
gs
les
push
adc
es
loop
fdivrp
dec
sub
and
xchg
std
pop
fldt
addb
add
popa
dec
cmp
in
fsubrs
insb
aam
xor
or
fidivrl
cltd
inc
adc
aam
ljmp
inc
inc
mov
shlb
out
fadds
jg
sahf
mov
stc
jecxz
sub
cmpsl
sahf
or
sbb
jne
das
pushf
or
and
mov
sub
sahf
addr16
add
sub
fadds
into
jg
or
into
push
pop
inc
cs
jns
js
mov
cld
push
and
aam
xor
ret
imul
xchg
mov
jno
ds
and
push
sub
les
mov
xor
add
adc
cs
push
adc
fldl
std
mov
loope
cmp
mov
pop
and
sbb
mov
les
push
xchg
mov
sub
dec
sbb
inc
sti
xchg
mov
adc
and
leave
inc
inc
ss
into
push
lret
aad
cli
cmp
out
sti
sti
mov
and
movsl
out
and
cwtl
push
cmp
or
sub
test
and
mov
lock
ret
and
sub
cli
dec
int3
icebp
insb
aam
clc
movl
jne
pop
sub
mov
add
shlb
add
xlat
push
sti
out
ds
fdivs
out
adc
mov
bound
les
and
aam
outsb
fidivl
fsubrl
das
pop
popa
shlb
cmp
mov
mov
mov
xchg
cli
mov
in
cmc
sub
sub
imul
cmp
outsb
aaa
sahf
mov
xchg
and
movsb
arpl
scas
mov
mov
jle
cmpsb
cmp
mov
aam
loope
dec
dec
or
jae
sbb
lods
test
int3
mov
xchg
mov
outsb
sbb
pop
cmpl
repz
repz
pop
jmp
sahf
sub
shr
nop
aas
cmp
lret
dec
add
inc
jle
cmp
cmp
fxch
fs
lahf
xor
sbb
daa
std
jmp
pushf
in
mov
cld
fmuls
sub
cmp
jo
mov
pop
daa
fwait
test
jnp
orb
sbb
test
jmp
addb
push
outsb
jp
out
aaa
mov
mov
icebp
test
pop
popf
shll
clc
lods
mov
cli
dec
imul
jb
pop
in
cmp
fcmovbe
mov
xor
push
jno
lea
xchg
pushl
push
ret
cwtl
hlt
jmp
and
mov
inc
dec
data16
je
mov
mov
add
push
insb
je
mov
sbb
lret
test
xchg
fwait
mov
mov
sbb
cmpsl
mov
lods
lea
add
mov
adc
push
xor
mov
pop
sub
mov
sub
mov
mov
mov
add
xor
shrd
xor
shl
xor
shr
or
xor
or
mov
jmp
mov
fcompl
stos
mov
leave
jl
xor
sbb
test
loopne
out
add
xor
std
push
fst
out
ds
pop
jp
jmp
outsl
or
in
mov
bound
jecxz
leave
gs
pushf
cld
psadbw
out
add
nop
push
ds
hlt
divl
fwait
mov
xchg
sbb
dec
cmp
les
mov
lock
lods
outsl
clc
and
je
outsb
adc
push
pop
cmp
or
dec
hlt
lea
jo
lods
push
sbb
jge
cwtl
add
add
repnz
pop
mov
stos
dec
pusha
inc
sahf
sti
loopne
test
in
pop
rdtsc
popf
add
pop
add
sbb
mov
outsb
jae
fadds
das
adc
xchg
jns
or
sub
mov
mov
popf
or
scas
push
xchg
aad
sub
cli
rcrb
cmc
cwtl
lods
div
cmp
in
scas
test
jg
push
push
movb
pop
jge
sahf
outsl
gs
adc
hlt
aad
mov
test
pop
bound
pushf
cmp
js
pop
xor
xor
in
cmpsb
mov
int3
ss
adc
fsubr
push
outsb
push
mov
je
orb
pushf
xchg
sahf
push
mov
out
icebp
xchg
or
mov
or
movb
out
dec
movsl
fldl
std
fwait
dec
sbb
mov
mov
js
pop
shll
in
push
in
mov
inc
cmpsb
adc
adc
lods
inc
sahf
pop
lock
and
inc
adc
xchg
adc
pop
mov
addr16
hlt
cltd
add
mov
test
je
jge
xor
sbb
sbb
addr16
push
icebp
jbe
jmp
mov
push
adc
push
pop
xchg
arpl
stc
imul
inc
adc
stos
jo
pop
les
cwtl
and
adc
idiv
xchg
test
aaa
jge
shlb
adc
push
ja
push
repnz
je
cli
jbe
and
mov
into
outsb
push
rclb
xchg
lret
lahf
cs
mov
sbb
sub
pop
jbe
mov
mov
pop
mov
xchg
jns
push
cld
popf
dec
mov
mov
cmp
cmp
in
xchg
clc
jg
adc
cmp
fbld
lds
fidivs
out
jb
mov
push
ss
out
lods
aam
pop
xchg
popl
sub
mov
iret
arpl
or
add
popa
pop
fsubl
mov
cld
jo
pop
ret
fsubrl
and
jne
jns
lahf
sti
dec
es
pushf
imul
dec
shlb
call
cmp
pushf
out
das
bound
jne
xor
out
jnp
pop
movsb
cwtl
ljmp
sub
ss
imulb
xor
jle
loopne
cmp
out
jo
sub
adc
les
ljmp
fs
xor
inc
dec
mov
bound
adc
inc
or
sub
sti
rorl
sti
push
mov
imul
cli
outsb
add
into
push
or
and
xchg
cmp
or
mov
jnp
mov
in
cmp
imul
push
pop
in
rcl
jno
shrb
insl
sahf
aam
jae
dec
lods
sti
xchg
stc
jns
push
cmp
jo
xchg
push
icebp
mov
add
dec
xor
popa
jecxz
mov
aad
cmp
push
rorb
jne
mov
mov
push
push
push
call
mov
mov
mov
or
mov
or
mov
add
mov
adc
mov
add
mov
adc
add
pop
adc
pop
mov
mov
pop
leave
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
jmp
jnp
xlat
dec
sarl
jnp
add
lds
mov
sbb
adc
sbb
les
lock
jp
daa
mov
fnstsw
or
sub
clc
loop
mov
test
mov
pop
xchg
addb
ficomps
pop
pusha
loope
sub
aas
and
rcrb
and
ror
ds
negb
pop
add
cmpsb
cmp
into
popf
xor
imul
cmc
add
sbb
add
nop
mov
cmc
and
data16
iret
jne
loopne
call
mov
lock
pop
rcl
dec
mov
mov
mov
fnstcw
iret
pop
xor
jns
mov
jle
push
add
jnp
loope
cmp
je
test
pop
mov
stos
sbb
inc
jns
lds
out
iret
into
jle
call
jne
cld
scas
outsb
cmp
xorl
jl
mov
and
or
mov
testl
mov
fbld
mov
jecxz
inc
push
push
adcl
mov
addr16
cmp
and
dec
add
push
or
mov
mov
inc
clc
pop
pop
aam
cmpl
fwait
jo
pop
popa
lret
shrb
jmp
por
xchg
popf
mull
mov
pushf
adc
cmp
ljmp
fldt
das
inc
mov
cltd
dec
and
into
adc
js
sbbl
cld
js
movsb
ds
xor
jb
inc
inc
aam
xor
outsl
sub
jno
aaa
or
cld
push
lret
pop
cwtl
shl
popf
fs
fidivs
sub
pop
shrb
jb
xor
das
xor
pop
loope
cmc
mov
std
cmp
stos
aam
add
adc
pop
xchg
out
dec
movsb
mov
aaa
ds
loopne
add
and
sub
cmp
daa
xchg
sbb
mov
dec
js
adc
push
push
mov
add
xor
fidivrs
xor
into
pop
inc
pop
jge
or
fs
pop
mov
outsl
push
jecxz
jmp
std
pop
repz
push
repz
mov
fldenv
push
bnd
outsb
sahf
popa
lahf
mov
or
lea
sarl
mov
adcl
imul
movsb
xchg
sub
fists
into
int
push
into
or
xchg
mov
mov
fsts
or
lcall
fdiv
inc
std
pop
nop
mov
aam
imul
jmp
cltd
mov
jno
pusha
repz
jp
jo
push
mov
imul
shr
or
mov
xor
notl
push
or
outsb
push
enter
push
push
notb
call
bound
ds
pop
in
xor
test
andl
pop
dec
xchg
dec
in
scas
mov
sbb
xchg
adc
sbb
fs
xchg
add
into
insb
sub
xchg
icebp
fwait
dec
mov
movsl
movsb
cmpl
gs
ret
imul
jp
xchg
ret
lea
mov
sbb
and
inc
aam
mov
loop
sub
and
lcall
dec
lods
push
cli
sbb
loope
icebp
mov
repnz
mov
adc
xor
add
inc
cld
ljmp
jmp
inc
int3
mov
add
inc
rcr
jg
add
inc
aam
sub
add
inc
fmuls
sldt
movl
movl
mov
mov
and
add
mov
and
mov
sub
and
mov
mov
imul
add
add
xor
cmp
jne
jmp
push
mov
dec
sub
ljmp
jnp
mov
rclb
sbb
call
test
insb
xor
daa
push
mov
inc
xor
lods
jmp
aas
lea
jne
push
xchg
es
sbb
daa
jge
fstpt
rclb
xor
or
cmp
push
mov
aaa
mov
out
sbb
scas
sarb
pushl
adc
bnd
data16
cmp
and
adc
in
repnz
push
cld
pop
aas
insl
pop
jmp
push
pop
out
fsincos
xchg
xchg
fwait
pop
fwait
jle
mov
insl
mov
dec
loopne
test
rolb
lods
add
aad
rorl
mov
fwait
push
mov
inc
sbb
inc
and
sahf
push
cmpsl
xchg
dec
gs
sbb
ret
lods
pushf
cmc
loop
mov
stos
repz
or
sub
inc
stos
mov
ja
inc
mov
push
into
and
out
inc
cmp
mov
in
ljmp
outsl
pop
cmpsb
adc
scas
xor
push
fiaddl
mov
adc
sbb
aaa
sub
sti
decl
add
xchg
popa
lea
xchg
popa
sarb
dec
pop
xchg
andb
fsubl
test
jae
shll
bound
mov
mov
mov
call
xchg
or
xchg
icebp
dec
sub
fsub
mov
out
xor
jmp
inc
or
mov
fsub
cmp
jmp
sbb
sub
lods
in
out
sbbl
rolb
imul
mov
aad
hlt
xorl
mov
mov
and
sub
xor
dec
repnz
mov
out
mov
jecxz
hlt
mov
dec
bound
aam
sub
fisubrl
test
in
push
shrl
fnstenv
mov
pusha
mov
cwtl
test
mov
lods
ret
jo
cmp
jge
adc
cmc
cmp
jo
push
ret
std
fisttps
ljmp
sbb
cmpsb
mov
jb
aam
in
xchg
jle
or
sbbl
jb
mov
jb
aaa
sub
imul
insb
cli
les
or
adc
mov
or
pop
inc
mov
push
jae
int3
sub
test
mov
arpl
cli
xchg
xor
add
aam
lcall
out
or
das
pop
adc
aam
mov
imulb
nop
add
repz
pop
sub
fidivl
imul
xor
in
inc
cmpl
cmp
push
stos
cwtl
adc
pop
ret
xchg
add
or
push
xchg
inc
les
sub
xor
mov
xor
inc
sti
test
es
ror
or
mov
add
daa
jg
filds
pop
lods
outsb
cmp
adc
into
lret
fdivl
push
fadds
cmpsl
and
ljmpw
xchg
getsec
dec
idivl
js
repz
inc
push
xchg
imul
test
mov
xlat
nop
mov
mov
push
ret
dec
inc
dec
xor
dec
pop
dec
imul
cs
clc
add
outsl
sbb
daa
jmp
insb
int3
xchg
mov
add
add
flds
push
cmpsb
mov
mov
data16
push
outsb
mov
mov
mov
sub
add
mov
or
mov
imul
sub
add
mov
or
mov
mov
add
imul
jmp
lret
mov
pop
inc
repnz
xchg
leave
jl
sbb
sbb
adc
sbb
stc
lret
cmp
or
dec
into
popf
pop
push
dec
lods
sub
bound
es
jns
mov
mov
jo
nop
ds
mov
hlt
sbb
pop
insb
xchg
das
ljmp
mov
lahf
loop
push
inc
sub
add
lods
xor
lret
scas
pop
cs
imul
sbb
fs
jecxz
xlat
repnz
movl
out
xlat
inc
sbb
out
cmp
mov
cmp
sub
push
and
add
out
movsb
popa
inc
sbb
or
xchg
jecxz
xor
mov
push
jne
in
imul
test
lock
pop
cs
sub
jne
loope
push
jno
mov
fnsetpm(287
sub
and
inc
shr
stc
cmpsl
or
push
adc
loopne
pop
sub
mov
lock
inc
imul
mov
outsl
stc
and
jo
aad
inc
or
rorl
sti
jnp
cltd
sbb
std
repz
mov
xorl
lahf
pop
sbb
mov
xchg
lea
sbb
das
cmc
flds
insb
lret
sub
cmpsb
psrld
mov
inc
stos
les
mov
das
imul
loopne
ljmp
imul
cmpsl
fwait
enter
push
insl
ja
push
mov
xchg
sbbb
xchg
or
and
push
push
iret
cmpsl
and
sub
es
in
prefetcht2
jp
ja
faddl
lods
sub
sahf
mov
xchg
xchg
dec
mov
lret
pop
adc
pushf
mov
in
and
popf
sbb
and
dec
mov
js
sbb
test
jmp
mov
mov
clc
scas
aad
insl
mov
mov
pop
fadds
jecxz
jg
in
jmp
or
hlt
pop
test
sub
and
xchg
dec
hlt
xor
mov
mov
adc
dec
pop
cmp
repnz
adc
xchg
scas
lret
pushw
sub
inc
out
or
sub
addl
in
jecxz
mov
push
adc
lock
xchg
bound
inc
loope
ret
aam
mov
or
mov
dec
mov
push
mov
rcll
in
mov
jno
sbb
fwait
in
imul
add
addr16
inc
stos
mov
pop
jmp
notl
cltd
xchg
in
inc
les
add
scas
push
mov
push
nop
cmp
mov
stos
mov
mov
or
pop
out
sbb
sub
xchg
cld
es
fcompl
loopne
arpl
inc
sub
sarl
movsl
xor
xchg
or
and
je
dec
lock
mov
cltd
andl
sbb
mov
mov
push
out
mov
jns
imul
sbb
inc
mov
aad
leave
xor
dec
xchg
push
lds
xchg
dec
punpcklwd
adc
adc
sbb
mov
sub
aaa
jmp
mov
jp
add
sbb
repnz
movsb
xor
shr
inc
js
add
outsb
pop
out
call
je
sbb
mov
loope
lods
sbb
in
add
add
mov
add
mov
mov
mov
and
mov
and
mov
imul
mov
or
mov
imul
mov
sub
cmp
je
mov
jmp
mov
sub
xor
add
jmp
movl
movl
mov
mov
imul
add
and
add
or
sub
leave
ret
push
mov
and
sub
push
push
lea
mov
mov
mov
jmp
sbb
cli
sbb
lret
mov
inc
clc
push
push
push
sbb
movsl
mov
rorl
push
and
int
fimull
lcall
loop
sbb
inc
fcompl
in
add
add
frstor
pop
cmp
icebp
rcrl
xor
push
fcmovbe
sbb
cmpsl
inc
cmc
das
js
mov
xchg
insb
mov
xchg
mov
sarb
jmp
add
into
xchg
mov
pop
sti
imul
loopne
xchg
cmpsb
movsb
push
cmp
xchg
jmp
ret
jg
or
xor
mov
aam
in
std
pop
subl
push
outsb
shr
pop
into
pop
icebp
pop
loopne
aas
push
mov
arpl
hlt
cmpb
push
pop
xchg
add
jne
stos
test
pushf
cli
xor
stos
scas
xor
sbb
mov
inc
test
jl
sbb
pop
sarb
stos
dec
xchg
inc
mov
push
ja
push
negl
xchg
ss
sbb
mov
clc
jle
sub
jmp
cld
jl
or
and
mov
aaa
mov
xchg
xchg
inc
sub
xor
sbb
dec
je
and
mov
aaa
subb
xchg
mov
pop
sbb
push
pop
jb
or
and
aad
cmp
aas
jge
dec
dec
jl
jg
pusha
call
dec
aas
lret
mov
push
data16
push
nop
pushf
jp
and
clc
flds
bound
movb
out
fdivrs
pop
xchg
push
mov
out
add
inc
movsl
or
lcall
adc
jae
mov
ljmp
pop
mov
jno
mov
fistpll
xlat
jo
sub
ljmp
arpl
test
and
and
jnp
popa
loope
subb
cmp
popf
xor
scas
lret
ss
daa
inc
inc
ja
pop
xchg
sbb
xchg
das
enter
mov
mov
out
add
rcrb
arpl
outsb
imul
les
outsb
ss
loopne
and
clc
xchg
scas
jbe
lea
inc
push
lea
jge
addb
add
fldenv
clc
movsb
imul
cmp
dec
subb
mov
jmp
ja
sbb
jno
inc
sbb
sbb
jge
stos
in
sarb
out
mov
out
adc
mov
push
lret
test
scas
jno
pop
fistpll
mov
cs
lods
lahf
sbb
push
sub
or
das
mov
xchg
xor
orb
mov
push
sbb
push
jle
mov
ljmp
or
sub
pop
mov
sub
or
ffree
dec
push
or
movsl
aam
fistpl
xor
push
jno
sub
mov
add
xorl
or
jl
imul
clc
xchg
and
mov
mov
in
bound
je
xchg
xor
loopne
popw
and
pop
or
jmp
push
jnp
loopne
xor
push
sbb
jmp
push
loope
cld
cmpsb
mov
pop
mov
ret
jae
pop
es
movsb
imul
fs
xchg
fisttpl
ret
fimuls
pushf
push
test
push
and
sub
sbb
mov
orl
orl
lea
push
lea
push
call
mov
mov
pushl
mov
pushl
mov
pushl
pushl
pushl
pushl
pushl
call
pop
pop
mov
pop
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
add
xor
mov
and
imul
xor
push
movl
movl
movl
mov
mov
xor
sub
div
mov
mov
or
xor
mov
sub
mov
mov
mov
mov
mov
mov
jmp
mov
aas
sbb
sub
mov
push
sbb
iret
adc
ja
adc
movsb
popf
adc
push
adc
aas
in
sub
andl
lods
inc
lcall
in
push
cltd
ffree
xchg
dec
lds
xor
or
mov
mov
sahf
pop
rcrb
mov
adc
and
xor
mov
sbb
sub
sbb
rclb
sahf
clc
sahf
out
mov
jecxz
shlb
cmp
shl
jecxz
push
test
or
jno
fwait
nop
adc
cwtl
adc
lcall
lods
inc
aaa
cmp
mov
or
inc
ret
inc
xchg
in
vunpckhps
fs
sbb
pushf
cmpsl
inc
stos
adc
mov
add
jl
jecxz
aas
loopne
mov
inc
popa
cli
adc
mov
pop
inc
testl
sbb
mov
sub
mov
pop
sbb
add
sbb
cs
leave
call
cwtl
addr16
or
push
add
bound
into
add
rclb
dec
sub
xchg
stos
mov
xor
pop
fildl
and
je
adc
mov
pop
xchg
pop
jge
add
cmc
rclb
movsb
shr
cmp
es
mov
fldenv
pop
insb
mov
jg
movb
testb
mov
mov
out
cltd
test
in
mov
fdivr
add
aas
out
ljmp
repz
shr
in
push
pusha
adc
lcall
add
stos
bound
fs
out
or
pop
and
push
nop
xchg
popf
ja
mov
testl
lahf
or
ja
arpl
pop
xor
pop
push
push
jecxz
iret
and
mov
cmp
into
pop
pop
cmp
mov
xor
out
inc
sahf
push
push
mov
sub
fisttps
inc
test
jnp
fbld
in
push
popa
pshufw
add
popa
fnstsw
fstpl
fimull
loopne
int
push
gs
jg
adc
imul
movsl
in
dec
fldenv
test
sub
xchg
mov
subb
divl
xchg
adc
xchg
out
lock
mov
xchg
aas
mov
xor
mov
mov
nop
push
sti
inc
jp
jo
xor
hlt
mov
mov
into
push
mov
dec
cmp
pop
fadd
mov
jle
xor
js
xor
xchg
add
adc
or
cmp
push
jg
aas
cmpsl
mov
xchg
hlt
and
lret
shlb
xchg
sub
sbb
hlt
mov
push
xchg
movsl
ljmp
add
dec
mov
mov
sub
sub
insb
mov
mov
es
jg
cwtl
jge
rclb
loop
or
adc
mov
add
iret
loop
pop
jno
pop
sbb
adc
inc
lock
imul
and
or
xor
add
mov
mov
sub
add
jmp
pop
pushf
lds
pop
pushf
push
cwtl
pop
jo
xor
sbb
ja
mull
xor
inc
repnz
les
repz
xchg
repnz
aas
mov
fwait
jae
adc
or
push
push
inc
add
mov
lods
or
mov
sub
push
and
push
rorb
inc
mov
sub
jl
and
xchg
lds
fs
mov
gs
daa
dec
movsl
and
cs
data16
push
push
popf
or
testb
jne
mov
mov
xchg
dec
pop
cmp
out
outsb
mov
in
cltd
lea
in
repz
addr16
test
jbe
pop
es
sub
sarb
mov
push
add
xchg
loopne
inc
insb
sub
adc
lret
push
shl
fmul
cmp
outsl
pop
push
stos
ret
push
jle
lods
push
scas
mov
mov
loopne
push
xor
jns
addb
dec
cli
push
pop
int3
jnp
inc
sbb
dec
daa
in
hlt
test
sbb
add
stc
mov
mov
pop
mov
jno
sahf
xor
xchg
test
ljmp
into
lahf
cld
xor
cmpsl
dec
push
xor
mov
or
ljmp
jl
arpl
sub
pop
xor
mov
mov
test
cmpb
test
dec
cs
les
fcompl
repnz
and
fnstenv
rcrl
mov
mov
stc
aaa
mov
jnp
incl
in
fisubl
or
imul
xorb
jecxz
mov
sbb
add
flds
xchg
sub
aam
js
scas
xchg
mov
pusha
sbb
adcb
sub
loope
stc
std
xor
dec
in
xchg
push
cmp
lahf
frstor
mov
jle
add
pop
out
leave
xchg
pop
adc
ret
mov
pop
pop
push
cmp
inc
repnz
into
ret
mov
jg
cmpl
daa
ds
addr16
and
xchg
stos
mov
daa
and
hlt
scas
stos
aaa
lahf
lcall
in
fisubs
ja
scas
inc
dec
sarb
hlt
adc
inc
movsb
out
push
mov
fstp
xchg
loopne
stos
or
insl
imul
pusha
sbb
pop
out
pop
mov
or
test
inc
insl
add
mov
movsl
mov
sub
jne
lods
inc
sub
loope
push
xorb
cmpsl
int
loope
movb
push
push
xor
adc
jno
cltd
iret
inc
jae
xchg
data16
or
mov
mov
sti
sbb
fdivrl
int
pop
fistpl
es
test
xchg
sbb
xor
pop
out
xchg
mov
jge
xlat
mov
adc
dec
sbb
lret
push
dec
lahf
cmpsb
mov
lods
cmp
mov
jmp
rorb
mov
xor
sub
mov
mov
and
lea
mov
shr
or
mov
sub
add
cmp
jbe
pop
leave
ret
push
mov
sub
xor
push
push
push
orl
mov
cmpl
mov
movl
jmp
mov
mov
cmpl
jae
pushl
pushl
pushl
pushl
push
push
pushl
call
mov
xor
or
sub
imul
movzwl
and
xorl
sbb
adc
mov
shrd
shr
mov
and
mov
mov
xor
xor
xor
xor
xor
or
sub
or
mov
xor
adc
or
mov
not
mov
sbb
shl
mov
shrd
adc
xor
shr
sbb
mov
mov
mov
sub
and
mov
cmpl
notl
movl
movl
jmp
movl
cmpl
jge
pushl
push
push
call
addl
inc
add
sbbl
mov
adc
xor
xor
add
or
cmpl
movl
movl
jmp
mov
mov
cmpl
jl
push
push
call
sub
sbb
and
mov
and
orl
mov
mov
sub
xor
mov
cmpl
mov
mov
jmp
mov
cmpl
jbe
push
push
push
push
push
pushl
push
push
call
mov
mov
sub
sub
add
or
add
or
and
mov
xor
mov
or
mov
and
mov
mov
cmpl
mov
mov
movl
jmp
movl
cmpl
ja
pushl
push
pushl
pushl
call
or
or
adc
and
sbb
add
sbb
mov
xorl
mov
sbbl
mov
mov
cmpl
movl
notl
mov
movl
jmp
mov
cmpl
jg
push
push
call
and
sub
xor
xor
sbb
or
sbbl
shl
xor
adc
shld
shl
mov
mov
orl
mov
mov
xorl
xor
subl
xor
movl
movl
movl
movl
mov
movl
cmp
movl
jne
movl
cmp
je
mov
adc
mov
xor
shld
andl
shl
xor
cmpl
not
mov
mov
jmp
movl
movl
cmpl
je
push
push
call
orl
or
subl
movl
mov
add
mov
or
mov
or
mov
xor
mov
mov
cmp
jne
cmp
movl
je
cmpl
movl
movzwl
not
jmp
mov
cmpl
jne
push
push
pushl
push
pushl
pushl
push
pushl
push
call
xor
sbb
subl
sub
add
dec
and
mov
and
mov
push
pop
andl
xor
movzbl
add
shl
cmpl
mov
mov
movl
mov
jmp
movl
movl
cmpl
jg
push
call
add
neg
movl
and
and
movzwl
adc
mov
andl
xor
subl
shr
or
cmpl
movl
mov
movzwl
jmp
not
mov
cmpl
jg
pushl
pushl
call
adc
orl
mov
sub
addl
dec
mov
mov
and
mov
mov
mov
xor
mov
orl
push
cmpl
movl
movl
jmp
movl
cmpl
jle
pushl
call
xorl
subl
sbbl
andl
xorl
pop
orl
sub
mov
add
mov
mov
mov
sbb
lea
mov
and
mov
mov
xor
xor
subl
shr
andl
shl
sbbl
or
orl
mov
movl
mov
mov
xor
xor
shr
shl
or
push
lea
push
lea
push
call
mov
mov
xor
xor
shr
shl
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
lea
push
shl
call
mov
mov
xor
xor
shr
shl
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
lea
push
shl
call
mov
mov
xor
xor
shl
shr
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
shl
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
lea
push
shl
call
mov
mov
xor
shl
jmp
sbb
lods
sbb
xor
mov
jg
hlt
add
sbb
pushf
mov
jae
loop
aad
xor
jge
cmp
outsl
xor
stos
sub
mov
cmp
xorb
jno
push
jge
outsl
cmp
mov
les
pop
pop
pop
xor
lea
mov
scas
dec
cltd
jg
inc
in
dec
mov
popl
sbbl
xchg
sysexit
iret
pop
fisttps
push
ret
adc
xor
std
scas
mov
sti
cmp
rcll
lret
lret
inc
mov
jnp
mov
js
sub
ljmp
leave
adc
inc
jle
xor
pop
test
mov
mov
add
stos
nop
lret
dec
jp
call
mov
pusha
les
dec
push
es
lahf
mov
mov
enter
sub
xor
mov
mov
sbb
lea
or
mov
in
in
inc
in
pop
lret
push
or
and
jb
int
and
repnz
in
stos
xor
sbb
js
xor
rcr
fstp
cmc
nop
push
fiaddl
dec
pop
fisubrs
test
data16
xchg
shlb
orb
jno
jne
dec
jmp
xchg
or
xor
and
cs
add
call
jns
or
sbbb
out
xor
or
aaa
push
xlat
or
mov
sub
aam
cmp
mov
mov
add
xchg
xchg
int
mov
leave
out
cmpsl
out
xor
fimuls
jno
sub
ljmp
jns
testb
outsb
dec
push
mov
scas
inc
test
das
mov
pop
cmp
dec
xchg
insb
andl
xchg
sub
int3
jne
lret
mov
xchg
arpl
imul
sti
xor
test
push
out
xor
shr
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
shl
mov
xor
or
mov
shrd
shr
mov
mov
xor
xor
or
shl
add
mov
mov
shrd
shr
xor
mov
mov
xor
or
add
lea
push
shl
call
mov
mov
xor
xor
shr
shl
or
mov
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
mov
mov
push
pushl
shl
call
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
mov
push
pushl
shl
call
mov
mov
mov
mov
mov
mov
rol
mov
xor
cmp
je
mov
mov
xor
test
je
mov
mov
movzbl
sub
mov
rorb
mov
mov
inc
cmp
jb
dec
jne
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
add
push
lea
push
shl
call
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
push
push
mov
shl
mov
shrd
shr
mov
mov
xor
xor
or
add
push
shl
call
push
jmp
out
mov
dec
xchg
fistps
mov
fwait
adc
sbb
sahf
push
mov
nop
push
xor
pop
push
iret
push
in
repnz
pop
inc
daa
in
cmp
clc
addr16
push
mov
ret
lahf
sub
jnp
mov
jns
mov
xchg
push
lock
mov
xchg
imul
cmpsl
jl
mov
cmpsl
xlat
loopne
insb
ret
inc
cmp
push
pop
add
jge
sahf
rorl
lds
add
cltd
jle
fwait
and
pusha
push
push
movsl
fwait
loop
mov
xor
sti
jmp
xor
testb
and
gs
sub
rorl
fldl
pop
imul
loop
mov
clc
movb
xchg
insl
and
xor
pop
jb
dec
sbb
scas
sahf
nop
mov
out
out
inc
lods
or
jb
add
addl
inc
fldcw
pushf
pusha
lret
mov
or
xchg
jecxz
out
or
xchg
sbb
imul
stc
in
mov
add
pop
mov
lcall
test
fwait
insb
cmc
cmc
movsb
pusha
jo
mov
xor
movsl
inc
cmpsb
mov
lods
enter
pop
outsl
paddusb
lods
jge
sub
adc
orb
push
push
mov
hlt
xchg
push
les
mov
pop
cmpsb
movsb
imul
std
mov
insb
fisubrs
xorl
pop
jne
sub
fs
in
pop
in
jbe
decb
push
arpl
inc
jo
pop
jmp
repnz
sbb
icebp
sarl
push
mov
aaa
xchg
cltd
mov
mov
xor
xor
push
pop
jmp
mov
shl
mov
shl
insb
imul
stos
clc
fistpll
aam
inc
xor
ljmp
adc
or
inc
or
aaa
test
mov
jnp
gs
adc
cmpl
mov
pop
sbbb
movsl
sbb
pushf
pop
push
fistpl
frstor
enter
push
mov
mov
shrd
shr
mov
mov
xor
jmp
mov
sbb
mov
stc
clc
push
sbb
ficomps
mov
ja
leave
shr
sahf
das
out
mov
mov
add
les
mov
push
sbb
sub
out
inc
pop
push
and
jns
sub
pop
cmpsl
mov
popf
and
sti
icebp
push
inc
mov
rcr
faddl
idivb
push
mov
mov
aas
nop
push
loop
aad
push
sbb
lret
push
xchg
add
mov
mov
dec
cmp
imul
inc
aad
sbb
xchg
loope
cmpsl
sub
cmpsb
movl
mov
dec
test
sub
xchg
inc
out
xchg
cs
mov
jp
mov
inc
aad
fisubl
lea
mov
iret
pop
int3
cli
cltd
jne
cmp
lea
jb
stos
notb
push
aad
rdmsr
fucomp
mul
mov
hlt
push
jg
lock
ss
mov
loope
les
ret
imul
fwait
inc
add
lods
sahf
dec
aam
xor
xchg
imul
testl
aaa
popf
ljmp
jl
les
jno
push
repnz
mov
fdivs
pusha
inc
mov
lret
inc
fisubrs
dec
mov
and
and
xor
mov
fildl
out
mov
rolb
mov
imul
call
jb
or
shlb
pop
sub
test
cmpsl
aad
into
enter
mov
iret
mov
sub
daa
imul
and
adc
leave
fsubs
pop
lahf
push
insb
pop
mov
loope
cmc
sub
dec
aam
dec
cs
jnp
xchg
fisubrl
and
lock
cli
inc
pop
es
mov
push
sbb
js
rorb
cmp
pop
push
ja
jnp
insl
cmp
rcrl
mov
je
dec
lock
mov
scas
jmp
dec
lcall
adc
lods
enter
cmp
lret
loop
inc
cmc
jo
or
call
je
add
or
xor
or
add
push
shl
call
mov
mov
shrd
shr
mov
mov
pop
xor
xor
pop
shl
or
pop
leave
ret
or
mov
sub
mov
or
mov
mov
jne
mov
xorl
mul
ret
subl
push
sbbl
mul
addl
mov
xor
add
mov
adc
mov
mull
add
mov
mul
add
pop
ret
push
mov
sub
push
push
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
xor
div
mov
xor
mov
push
div
mov
xor
xor
sub
mov
lea
mov
mov
sub
xor
mov
xor
or
xor
mov
sub
jmp
dec
jbe
imulb
dec
sub
push
mov
cmp
mov
loope
sbb
test
ds
xorl
pop
stos
add
out
mov
arpl
and
lock
js
fmuls
push
pop
lret
scas
push
jp
cld
aaa
pusha
std
adc
mov
sahf
stc
pop
flds
dec
sti
andl
dec
or
loope
movsl
pop
pusha
dec
xor
inc
lahf
xor
nop
jae
lods
dec
xchg
mov
test
sub
pop
fldt
int3
lock
ret
jno
lahf
mov
popf
cmp
cs
push
inc
push
xchg
adc
stc
nop
inc
or
jnp
shlb
inc
lods
dec
sbb
ds
sub
sarl
cmp
or
aad
mov
ret
in
jmp
nopl
scas
jge
or
div
xor
pop
aaa
xchg
aad
sub
lcall
in
push
stos
or
jg
push
ret
sahf
aam
pop
testl
xchg
lret
push
sub
cmpsb
xchg
sbb
ds
sub
bound
sarb
and
and
rclb
cmp
or
leave
nop
sbb
popf
cmp
into
pop
mov
dec
lret
stos
sahf
stos
test
stos
xchg
jp
jl
leave
sbb
cmp
aam
fs
jg
mov
lret
mov
mov
cld
fnstenv
clc
ljmp
enter
lods
mov
dec
xor
mov
stc
fidivs
inc
cmp
inc
addr16
jecxz
sahf
lahf
in
adc
js
mov
dec
mov
xorl
inc
lcall
fldt
das
jbe
and
xchg
push
lret
inc
js
add
mov
gs
call
mov
sbb
nop
pop
xor
cmp
clc
xchg
mov
jnp
mov
fimull
add
xchg
in
sti
mov
push
arpl
adc
scas
daa
jge
pop
enter
int
and
sti
pop
xor
testl
popa
xor
xchg
jl
int3
imul
adc
or
clc
sti
and
lret
fisttpl
add
adc
jae
ror
cli
cs
imull
aas
pop
rorb
jecxz
and
and
and
inc
jae
jmp
jge
int
pop
int
mov
mov
fsub
je
sbbl
mov
mov
cmp
add
int3
adc
mov
mov
jne
cld
adc
jp
lods
loope
adc
sbb
rorl
jno
push
bound
imul
and
fwait
les
lods
xor
push
fnstsw
adc
jle
or
stos
inc
ret
inc
mov
mov
xor
mov
sub
div
mov
pop
xor
sub
cmp
ja
jmp
mov
movl
movl
movl
movl
mov
mov
mov
sub
imul
xor
xor
div
mov
mov
push
and
mov
sub
sub
mov
mov
mov
xor
mov
xor
and
add
add
mov
mov
add
mov
xor
mov
xor
mov
sub
mov
add
mov
sub
xor
mov
xor
or
xor
mov
sub
mov
mov
mov
xor
xor
sub
div
jmp
in
lret
repnz
pushf
pop
stos
movl
inc
out
push
sbb
adc
sbb
mov
push
pop
inc
push
fs
inc
out
movsb
cmp
and
adc
test
jnp
fisttps
pop
rolb
test
orl
fiadds
hlt
and
inc
add
stos
pminub
lds
repnz
bound
popf
pop
ret
mov
insw
jge
pop
out
aas
movsl
add
out
and
add
out
fists
add
bound
out
in
dec
push
jle
sarb
sbb
cmc
fwait
jg
shrb
mov
icebp
fs
sahf
mov
pop
mov
ljmp
or
sahf
inc
arpl
mov
jae
mov
mov
fstpt
or
cmp
jno
xchg
cmp
pop
and
aam
cmp
ja
ss
pop
js
jo
mov
outsb
dec
out
aaa
sbb
push
out
cwtl
fldl
fmul
push
xchg
mov
mov
scas
inc
idivb
pusha
pop
or
pop
mov
cmp
dec
lock
gs
pop
sbb
mov
in
or
push
inc
fcmovne
adc
inc
mov
pop
xchg
mov
xorb
aam
in
or
stc
xlat
ljmp
js
shr
xchg
leave
mov
inc
dec
icebp
shlb
jmp
pop
ja
popa
mov
enter
cli
movsl
push
dec
lret
pop
cmp
arpl
pop
dec
popf
roll
ss
adc
xor
sahf
mov
fcmovne
adc
cld
jo
mov
ss
ja
lahf
test
hlt
insl
les
push
xchg
ret
cmp
scas
stc
fbld
shrl
aaa
or
ret
adc
push
push
cmp
sbb
push
test
leave
cmp
jmp
pop
or
scas
int
sbb
iret
aaa
es
arpl
mov
fsubrs
jge
pop
pop
daa
bound
add
cwtl
and
inc
mov
das
insb
adc
cmpb
jnp
xchg
cmp
push
or
out
sub
js
push
xor
xchg
pop
mov
mov
pop
leave
addr16
xlat
sub
nop
arpl
xchg
or
subl
add
fwait
popa
arpl
cwtl
xchg
out
scas
sar
mov
out
xchg
and
adc
insb
mov
lret
xchg
lods
fstps
add
lret
daa
adc
in
mov
mov
sub
mov
mov
sub
xor
xlat
push
out
ret
pop
decl
cs
adc
in
mov
bound
stc
mov
push
adc
xchg
outsl
jl
adc
dec
repz
lcall
test
mov
xchg
or
cmp
pop
inc
mov
push
psllw
out
jg
fs
xchg
adc
insl
das
push
jle
cmp
add
sub
cmp
jbe
pop
pop
pop
leave
ret
push
mov
and
sub
push
push
push
pushl
lea
push
call
pushl
pushl
call
push
call
mov
subl
jmp
iret
and
inc
sbb
and
fnstcw
out
sbb
cmp
shlb
adc
insb
lret
or
add
push
stos
test
iret
rcll
fs
jg
repz
and
mov
test
sbb
test
xchg
inc
loopne
push
leave
push
mov
iret
add
pop
mulb
in
dec
push
lret
xlat
pusha
mov
vpcmpgtw
cmp
cmp
pop
imul
in
ljmp
cmp
nop
sbb
insb
pop
sbb
ljmp
rcrb
int3
dec
cwtl
cwtl
and
aam
out
or
inc
pop
je
fdivr
insb
lds
or
sarb
lahf
jne
aaa
or
dec
out
call
addr16
lret
int
sbb
fisubs
inc
insb
and
and
and
insb
lods
push
loopne
js
cmp
scas
cmp
sbb
fidivs
mov
pop
pop
dec
mov
lods
rorl
lds
inc
imulb
pushf
inc
repz
std
imul
jge
ja
add
int3
push
imul
je
sub
test
je
negb
or
arpl
lods
std
mov
jmp
add
fwait
mov
sbb
pop
jns
gs
int3
mov
mov
arpl
dec
call
daa
xlat
lret
sbb
jmp
imul
and
jle
xchg
shl
push
xchg
xchg
dec
pop
lods
ljmp
mov
aad
sbb
mov
jnp
sbb
stc
sbb
xchg
mov
jg
fiaddl
out
lcall
loop
mov
or
push
push
push
mov
popa
cmp
mov
cmpsb
jecxz
lea
scas
sub
xorl
lods
dec
mov
xchg
ror
xchg
loop
adc
dec
push
xchg
movsl
fcomp
cmp
mov
add
mov
sub
inc
adc
xor
xchg
cmp
into
add
outsb
mov
jo
sub
xchg
fldenv
dec
arpl
int
push
sbb
lock
push
add
adc
dec
mov
pop
adc
imul
inc
rorl
insl
jl
push
pop
mov
lcall
negb
sbb
mov
mov
xchg
imul
outsl
in
fisttps
inc
dec
daa
stc
int3
fidivrl
aas
xchg
cmpsl
das
and
mov
adc
adc
inc
arpl
mov
cltd
or
js
mov
test
or
push
or
lock
ja
addb
outsb
out
shll
adc
mov
push
hlt
out
imul
cltd
and
push
rolb
lods
pop
in
inc
stc
es
jge
sub
pop
pop
les
lods
and
mov
push
stos
dec
cltd
inc
jo
aad
xchg
outsb
jns
sub
lods
mov
lret
icebp
push
in
xchg
inc
cmp
jbe
add
aaa
push
xchg
xor
cmp
imul
push
bound
imul
and
or
out
ret
sub
loop
lret
cltd
inc
inc
icebp
adc
fistl
pushf
mov
or
pop
cwtl
rcrb
fs
dec
xor
cmp
mov
movsl
and
cwtl
sbb
xchg
cmp
sbb
dec
xor
aam
stos
jo
repnz
insb
push
andl
pushl
orl
call
adc
mov
add
movl
movl
addl
mov
mov
mov
and
mov
subl
xor
xorl
imul
and
sub
xorl
mov
xorl
movl
movl
adcl
movl
add
movl
xor
add
add
mov
mov
addl
sub
and
mov
and
mov
sbbl
xor
sub
imul
mov
mov
cmp
movl
jne
and
movl
movl
xor
movl
movl
add
pushl
cmpl
mov
mov
mov
jmp
movl
cmpl
je
pushl
pushl
push
pushl
call
not
sub
or
mov
mov
and
sbb
add
add
movl
xor
movl
movl
negl
jmp
xor
fwait
clc
dec
arpl
loope
sbb
pop
sub
insl
adc
dec
cmp
and
mov
ds
loop
aad
lret
cwtl
rorb
sub
cmpsl
or
std
mov
sahf
lea
push
dec
or
loope
jne
adc
and
inc
mov
movsb
inc
jns
out
lods
push
mov
jp
or
imull
iret
sbb
xor
ss
xlat
movntq
or
std
or
push
ret
sub
outsb
js
movsl
xchg
mov
and
loopne
lds
gs
ss
xchg
adc
push
fstl
mov
sub
sub
lret
test
dec
lds
push
mov
ljmp
outsb
dec
es
xlat
and
dec
jl
jg
cmp
dec
mov
mov
ret
in
sahf
push
push
sbb
es
lods
daa
add
push
daa
loope
leave
mov
repz
mov
jno
mov
jo
int3
nop
aaa
call
lcall
sub
js
and
out
js
fs
inc
outsl
in
insb
mov
mov
adc
into
jmp
ds
inc
jne
or
mov
fdivl
jbe
jle
push
shr
xor
outsl
sarb
rolb
sti
cmp
daa
sub
loopne
xchg
icebp
and
fdivrp
adc
cmp
ss
pop
cli
inc
jmp
in
mov
gs
mov
cmp
jge
and
lock
and
ss
stos
mov
add
decl
sbb
sbb
xor
pop
inc
pop
fimuls
aas
push
popf
push
clc
jae
addr16
cmp
sbbl
mov
mov
jnp
pop
insl
mov
repz
test
and
cs
ficoml
insb
xchg
inc
xor
out
ret
lock
add
mov
and
xchg
jae
cli
jl
mov
cmp
decl
out
sbb
popf
in
lock
enter
xchg
xchg
in
cmp
inc
call
pop
test
pop
orb
out
mov
lds
in
push
loope
or
das
sahf
mov
sarl
sbb
in
add
cwtl
add
xor
daa
pop
push
cmovns
or
or
push
test
cmp
inc
mov
lods
xchg
push
mov
fld1
ss
jmp
rolb
out
lea
ljmp
cwtl
rcl
mov
xchg
sub
adc
mov
out
loopne
test
jo
sub
sbb
jne
or
test
sahf
xchg
lods
sti
notb
xor
pop
sub
or
and
imul
scas
add
adc
and
movsb
ja
pop
loope
inc
add
mov
mov
ret
es
adc
lahf
shll
loop
data16
cmp
cmpsl
or
jns
adc
inc
sub
cwtl
roll
xchg
aas
and
mov
jmp
decl
sbb
lea
or
mov
shrl
in
fcomi
push
jecxz
cmp
cmp
pop
xchg
add
lea
inc
cmpsl
push
xchg
popf
adc
add
xchg
dec
in
mulb
test
in
mov
inc
mov
shlb
out
and
mov
das
or
push
popf
jns
dec
insl
pop
inc
cmpsb
popf
push
mov
pop
push
test
and
lahf
aam
hlt
movl
movl
movl
movl
movl
mov
mov
subl
imul
or
xor
cmpl
mov
mov
mov
jmp
movl
movl
cmpl
jge
pushl
pushl
call
subl
xor
mov
and
xor
mov
or
mov
or
jmp
jp
lock
dec
pop
push
dec
lret
repnz
jmp
push
sbb
lods
idivb
in
insb
cmc
lret
imul
xchg
mov
rcll
loop
inc
in
add
mov
jo
mov
fdivrl
jmp
push
pop
mov
sub
sbb
and
lret
and
xchg
mov
loopne
adc
icebp
sbb
repz
lret
das
mov
jno
lcall
jnp
ret
popf
xchg
cmc
stos
in
lret
add
mov
ljmp
out
es
mov
adc
fs
mov
jbe
ret
adc
xlat
or
mov
jge
or
leave
jno
add
ds
iret
lret
lret
clc
push
mov
aam
and
loop
sub
gs
adc
add
test
cmp
mov
jmp
jmp
repnz
adc
outsl
mov
dec
push
inc
xlat
scas
lcall
and
dec
aam
cmp
scas
push
repz
ret
pop
push
jg
leave
pop
inc
jg
lds
out
outsb
add
cmc
mov
add
lock
mov
out
mov
inc
je
push
sarl
pushf
or
mov
or
add
push
mov
icebp
push
mov
mov
push
push
iret
ss
jbe
and
pop
pop
loopne
scas
cmp
push
cmp
dec
test
andb
pop
pop
push
rolb
push
lret
xor
fists
loopne
pop
inc
mov
arpl
adc
lcall
out
aaa
fdivl
ficomps
push
sti
inc
jecxz
aad
imul
jnp
mov
std
pop
ret
cmp
sti
add
push
mov
jecxz
sub
mov
ds
lret
dec
jmp
xor
adc
mov
test
dec
lods
adcb
adc
dec
lea
cmp
cltd
dec
in
or
out
mov
xchg
mov
push
xor
ljmp
jle
push
add
loopne
mov
pop
ss
hlt
jp
dec
fisttpll
push
cli
jae
aas
mov
inc
add
outsl
outsb
loopne
xor
ds
lock
lcall
jge
pusha
jge
into
mov
add
dec
mov
sub
inc
jp
gs
or
mov
lea
cmpsb
pop
rcll
imul
jns
add
imulb
sbb
mov
mov
fisubl
cmp
ret
xor
and
xchg
jns
dec
and
insl
cmc
mov
lahf
add
mov
adcl
mov
rorb
mov
mov
lock
data16
dec
pop
fisttpl
push
cmp
subl
cwtl
dec
xlat
xchg
fld1
sbb
or
fs
sahf
xor
mov
pop
iret
fwait
sbb
jo
mov
arpl
pop
out
es
clc
pusha
movsl
pop
push
lods
ds
cs
mov
ds
js
cmpsb
add
pop
cmpsb
popl
test
int
inc
popf
mov
das
cmc
mov
add
ret
add
mov
in
push
lea
loopne
ret
adc
rorl
bound
jl
xchg
or
daa
repz
insb
test
push
jnp
mov
sbb
inc
hlt
mov
mov
xor
cmp
add
add
movb
mov
movl
jmp
movl
movl
cmpl
ja
push
push
push
call
add
add
xor
mov
or
add
xor
push
not
pop
xor
div
mov
xor
xorl
or
mov
xorl
or
movzwl
or
mov
subl
div
xor
xor
cmpl
movl
mov
jmp
movl
cmpl
jl
push
push
call
sbbl
movl
or
xor
or
pushl
mov
or
mov
xorl
pushl
add
andl
pushl
orl
imul
pushl
mov
adc
jmp
and
sbb
sbb
pop
mov
sbb
jecxz
mov
insb
adc
jecxz
sbb
testb
gs
xchg
jge
sbb
sub
sub
addb
stos
call
pop
inc
mov
xchg
and
lea
pop
jp
push
mov
jo
jae
and
or
push
xor
mov
mov
inc
sub
mov
mov
lcall
xor
scas
pop
pop
push
or
inc
inc
fistps
iret
xchg
clc
adc
fistpl
inc
jg
mov
inc
fsubrs
xor
iret
cmp
mov
xchg
ja
das
jge
int
mov
jae
or
fcoml
mov
xchg
out
jno
aad
jb
out
stos
mov
push
lea
popa
jns
jmp
das
out
pushl
or
xchg
imul
jmp
push
lret
inc
mov
into
inc
add
jno
dec
popf
loop
pop
fcoms
std
xor
out
data16
cmpl
popa
jle
ds
sbb
push
jl
ret
sbb
and
xor
loop
es
mov
imul
push
xchg
rcll
dec
jns
jmp
test
test
adc
adc
xchg
hlt
testl
jl
xchg
sbb
push
pop
xor
inc
mov
inc
and
sbb
cli
pushf
stos
jp
jl
mov
pop
mov
mov
cltd
sbb
insb
push
out
arpl
mov
stc
je
pop
push
jno
dec
fisubl
push
call
push
lods
push
inc
call
shll
push
xlat
sti
xchg
and
pop
in
cmp
jmp
push
insb
and
adc
stc
jmp
lods
lds
in
sub
mov
cmp
mov
adc
and
sub
negb
cmp
inc
inc
jbe
sbb
aas
mov
push
sub
cmpsb
dec
movsb
xchg
xor
add
cmpsb
leave
sahf
mov
shl
xor
inc
adc
mov
sti
push
cmpsb
inc
mov
mov
int3
out
inc
jmp
xor
sbbl
mov
fisubl
scas
inc
sahf
adc
int
daa
out
add
mov
xlat
or
cmp
xor
mov
testl
sbb
dec
mov
sub
jp
lds
adc
xor
in
push
dec
dec
imul
sub
jl
loop
sub
xor
int
cmp
leave
jae
fcomps
test
jne
cmpsb
jmp
rolb
mov
and
jo
imul
clc
inc
sti
sub
jne
mov
sbb
xchg
sarl
xor
mov
xchg
into
mov
mov
das
pop
rcll
add
out
mov
pop
cltd
lahf
xor
out
in
push
call
repnz
adc
fsubs
lret
adc
xchg
mov
xorl
cmp
lock
insl
sahf
jmp
or
clc
cmp
mov
sub
pop
cltd
xchg
sbb
mov
or
sbb
inc
or
add
add
inc
jo
insl
ds
imul
and
pusha
push
xlat
jbe
imul
insb
sahf
cmpsb
lock
jo
bound
dec
mov
lods
or
dec
and
orl
xor
adc
mov
div
adcl
and
xorl
or
xorl
pushl
xorl
call
orl
dec
jne
add
movl
cmpl
mov
mov
mov
mov
jmp
mov
cmpl
jb
push
call
movzwl
sbb
adcl
xor
mov
xor
mov
addl
sbbl
mov
mov
andl
movl
mov
xorl
call
cmpl
mov
mov
not
jmp
movl
mov
cmpl
jle
call
adc
orl
xor
add
mov
sub
and
sub
sbb
lea
mov
lea
add
mov
cmpl
mov
movl
mov
jmp
movzwl
mov
cmpl
je
push
call
or
sbb
sbb
xorl
sub
orl
sbb
mov
mov
sbb
jmp
js
push
xor
or
sub
mov
mov
xchg
mov
xchg
add
gs
push
stos
push
data16
es
dec
and
cltd
xor
cmp
hlt
in
clc
addl
mov
int3
mov
mov
or
hlt
jae
int
adc
adc
nop
or
adc
jne
or
sar
or
int3
mov
fwait
in
fidivrs
sahf
xchg
inc
mov
addl
ds
jo
rcl
jle
test
gs
ror
ja
and
pop
fs
adc
xchg
push
rolb
mov
mov
inc
movsl
dec
scas
mov
and
mov
daa
mov
push
out
loop
and
dec
adc
adc
xor
pop
adc
mov
add
int3
inc
push
mov
pop
pop
stos
mov
cmp
enter
subb
and
lcall
mov
fsts
add
jge
add
inc
xchg
add
inc
or
cmp
inc
push
sub
jmp
sub
stos
dec
test
inc
inc
or
movsb
ja
and
xorl
movsl
push
cwtl
out
and
pop
jmp
jmp
lods
jge
push
mov
aad
scas
fcoms
sbbb
fisttps
push
sbb
mov
js
cmp
lock
and
repz
mov
shll
xor
adc
mov
inc
popa
or
or
push
push
push
loop
push
push
pop
cmpsl
ret
cmpsl
cmp
daa
cmpl
fwait
das
loope
popf
jl
xchg
lcall
mov
std
adc
and
xchg
je
aaa
mov
sub
js
jae
scas
sub
movsb
adc
cld
mov
xchg
aas
inc
loope
pop
sub
into
leave
data16
repnz
cmpsl
xchg
aas
jge
shlb
aad
cmp
ja
lret
dec
dec
sub
data16
jecxz
subl
sub
nop
lret
cmpsl
xorb
push
ds
movsl
pusha
lret
out
xor
insl
jno
sub
ficompl
xorl
lcall
or
in
insl
jl
jge
inc
adc
inc
cmp
xchg
dec
inc
adc
jmp
popf
sar
sub
popa
out
pop
fstps
cs
mov
aaa
icebp
mov
sarl
stc
ret
sub
xor
mov
cmovns
lret
pop
xchg
mov
mov
mov
mov
cli
xchg
pop
push
or
push
es
fadds
inc
insb
inc
mov
or
bound
out
ficoms
xchg
mov
cltd
test
sub
aad
fs
adc
mov
add
in
fwait
inc
cmp
jb
cmpsl
push
out
xchg
jbe
push
xor
xchg
push
jecxz
jb
xchg
mov
xchg
iret
mov
xor
cli
push
negl
dec
or
sarl
mov
xor
ja
inc
loope
outsl
sbb
mov
in
pop
in
fdivs
jnp
or
bound
pop
mov
xchg
nop
mov
out
add
sbb
test
mov
sub
scas
push
adc
fcoms
or
mov
ss
addl
addr16
sahf
dec
jp
mov
mov
dec
fcoml
xor
or
mov
and
mov
xor
cmpl
movl
movl
movl
jmp
movl
movl
cmpl
jae
push
push
pushl
call
notl
subl
adc
sub
mov
sbb
xor
or
mov
and
xor
and
shl
shr
sbb
or
cmpl
notl
notl
movl
mov
jmp
mov
mov
cmpl
jae
push
push
pushl
push
call
inc
or
xor
sbb
xorl
sub
mov
mov
mov
addl
mov
and
mov
cmpl
movl
movl
mov
jmp
mov
mov
cmpl
jl
pushl
pushl
push
push
call
add
notl
or
movzbl
or
sub
add
mov
adc
jmp
lock
fidivs
push
push
call
cmpsb
sbb
mov
daa
adc
ficoms
xchg
dec
ds
cmc
xchg
mov
jnp
push
mov
xor
or
fneni(8087
jecxz
gs
mov
xchg
movsl
into
mov
mov
cltd
sub
test
insl
jne
pushf
jl
push
repz
mov
push
fistpl
or
inc
mov
out
testb
add
les
cmpsb
or
neg
push
jns
in
stos
test
je
movsl
push
icebp
push
jecxz
iret
dec
xlat
pop
mov
pop
jno
nop
dec
repnz
adc
aas
mov
xor
pop
fcmovnbe
nop
scas
pop
adc
push
pop
xchg
fwait
jno
neg
ret
sbb
pop
sbb
sbb
icebp
fcompl
pop
in
fsubrl
pop
stos
push
push
pop
fs
add
stc
push
stos
into
xor
into
icebp
mov
leave
push
xor
movl
inc
xor
dec
push
bound
pop
push
sub
repnz
scas
mov
push
push
mov
add
arpl
mov
add
loop
out
xchg
push
enter
mov
mov
xchg
popa
or
movsb
stos
orb
aas
mov
adc
movsl
lods
xchg
insl
mov
in
jmp
sahf
mov
xchg
jecxz
push
sub
dec
xor
loop
mov
or
mov
lock
mov
movsb
sub
pushf
in
or
cmc
fwait
cmp
bswap
cmc
pop
lret
leave
adc
js
jg
xorl
fisubrs
iret
bound
je
loope
add
jae
jmp
scas
xchg
add
jmp
xor
xor
add
pop
lret
iret
push
iret
xor
sbb
and
test
nop
arpl
ja
pusha
into
xchg
xchg
mov
shl
inc
jmp
ja
imul
push
je
mov
pop
jl
jne
aaa
in
les
mov
fldt
xchg
notb
inc
or
rcrb
mov
sti
jnp
movsb
pop
xor
insl
out
mov
mov
and
loopne
mov
subb
pop
in
fidivrs
push
dec
outsl
cmc
scas
or
inc
mov
repnz
push
cmp
rcrl
pop
mov
sti
cmp
lcall
mov
lret
sub
jnp
dec
out
subb
jne
shl
popf
sahf
lahf
xor
xchg
adc
loope
mov
out
cltd
fcoms
test
adc
and
dec
int
mov
in
repnz
cmc
nop
push
xor
inc
dec
shlb
xorps
add
cmp
fmuls
and
movsl
leave
jno
mov
test
mov
jg
pushf
imull
icebp
xchg
inc
sbbb
test
in
shrl
pop
or
arpl
into
test
sub
adc
jl
xchg
fwait
daa
cmp
mov
xor
pushf
and
or
orl
xor
adc
clc
fstp
rcll
popa
cmp
pop
adc
pop
push
test
or
imulb
mov
mov
push
and
or
loopne
fmul
add
rolb
mov
fcoml
es
outsl
ljmp
xchg
mov
add
pop
or
or
mov
shrd
cmpl
mov
not
not
jmp
mov
movl
cmpl
jae
push
call
movl
mov
mov
sbb
movl
or
and
cmpl
movl
mov
mov
movl
jmp
movl
movl
cmpl
jge
push
push
push
call
adcl
xor
xor
movl
adc
decl
shr
mov
xorl
mov
xor
xorl
xor
or
cmpl
movl
movl
movl
jmp
movl
mov
cmpl
jne
push
push
call
adc
andl
add
andl
add
mov
andl
push
pushl
lea
subl
push
subl
shl
andl
call
lea
orl
push
mov
mov
lea
push
negl
mov
lea
addl
mov
mov
adcl
mov
sbbl
push
negl
call
push
andl
push
sbbl
pushl
sbbl
call
sub
mov
movzbl
sbb
mov
adcl
mov
mov
shr
add
shl
and
or
adc
mov
cmpl
mov
mov
movl
jmp
movl
cmpl
jbe
pushl
call
movzbl
adc
movzbl
add
and
sub
orl
xor
cmpl
mov
mov
jmp
mov
cmpl
jb
push
push
push
pushl
pushl
call
subl
addl
addl
mov
xor
add
sub
sub
sbb
add
and
mov
lea
neg
mov
add
lea
or
mov
cmpl
not
movl
mov
jmp
movl
movl
cmpl
jge
push
push
push
pushl
call
adc
add
and
mov
mov
sub
or
xor
cmpl
movl
movzwl
notl
jmp
mov
cmpl
jne
call
sbb
notl
and
mov
sbb
orl
adc
and
mov
sub
mov
xor
xor
sub
or
lea
cmpl
mov
not
not
jmp
movl
movl
cmpl
jne
push
pushl
pushl
push
pushl
call
sbb
add
sbbl
subl
movzbl
sub
mov
cmpl
movl
mov
movl
movl
jmp
mov
cmpl
jge
push
push
call
sub
mov
sbb
adc
and
adcl
sbb
xor
xor
mov
xor
movl
add
movl
sub
movl
movl
mov
jmp
xchg
inc
sub
sbb
jecxz
push
sbb
cltd
fsubrp
sti
xchg
cmc
cmpsl
or
std
add
lret
xchg
sbb
sti
pop
push
cmpsl
mov
addr16
push
sub
repz
mov
xorl
cli
fistpll
xlat
push
mov
pushf
sbb
mov
jmp
and
rolb
inc
imul
leave
in
enter
adc
dec
movsl
lea
fldcw
push
imul
nop
stc
ror
xchg
cmp
daa
call
insb
call
and
clc
cmp
and
out
lret
mov
aas
dec
lds
mov
sub
movsb
mov
cwtl
add
ds
enter
mov
je
xor
cmp
rcrl
scas
cmp
mov
push
push
add
xchg
rcll
test
push
mov
xor
add
jbe
pop
test
add
lock
or
movsb
or
push
rclb
and
push
cmc
sbb
or
sub
inc
push
mov
inc
xchg
jg
cmc
filds
cmp
mov
and
jae
xchg
sub
dec
adc
push
sub
mov
jg
inc
mov
fsubs
scas
in
mov
push
mov
and
pop
aad
in
jbe
xor
in
cmp
mov
mov
cld
inc
or
pop
movsl
mov
add
jmp
pop
scas
in
dec
cmc
and
fistpll
xor
cltd
jns
mov
lcall
out
pop
leave
pop
lret
jbe
stc
subb
out
xchg
shlb
aaa
or
fisttpll
dec
push
xchg
xchg
popf
pusha
sub
pushf
pusha
xchg
sbb
cwtl
loope
xor
fisttpll
scas
cld
daa
jmp
or
nop
sub
mov
andl
cmp
test
jg
inc
cmp
push
ss
and
rcl
jecxz
jle
hlt
fisttps
or
lea
data16
hlt
jbe
movsl
and
cmp
outsb
neg
adc
mov
jmp
and
loop
xchg
push
mov
dec
mov
and
adc
sahf
cwtl
fs
sbb
add
int3
clc
jns
sbb
adc
mov
fs
xorb
push
xchg
ret
pop
and
mov
stos
xor
sub
mov
push
pop
aam
mov
adc
pop
xor
aad
cmc
rorl
popa
mov
or
cmp
adc
jns
lds
rclb
shll
dec
xchg
add
ffreep
or
mov
movsb
dec
lods
xchg
clc
or
mov
adcl
push
fucomip
cmpsl
mov
xchg
ret
out
sbb
dec
add
pushf
jp
mov
loope
mov
mov
rcl
arpl
or
cmc
lret
cmp
sbb
xor
inc
into
adc
push
stc
cs
add
leave
js
insl
imul
aad
and
popf
ror
mov
mov
inc
adc
push
lods
mov
xchg
mov
cmp
jle
out
cmp
movsl
mov
push
sub
adc
mov
scas
mov
push
and
sbb
push
jns
mov
xlat
mov
and
popa
aas
jne
iret
les
dec
and
mov
mov
add
adc
xor
xor
jmp
pop
es
sub
pusha
in
mov
xchg
sbb
das
sbb
fiadds
inc
and
lcall
or
sub
sahf
sbb
jae
or
in
or
inc
sahf
sub
xchg
sbb
and
sub
movsl
popa
les
push
ja
xor
addr16
dec
sbb
and
xor
in
cwtd
repz
addr16
mov
mov
popa
lods
push
ja
jmp
outsl
test
sub
sbb
daa
pop
mov
mov
xchg
call
cli
push
movsb
fnsave
mov
sub
jno
xor
in
adc
insb
xchg
sub
dec
mov
sahf
xchg
and
add
out
sub
dec
loope
lea
xor
and
sahf
sub
sub
sub
cmc
jp
jno
xor
cs
lret
sti
jns
mov
push
pop
in
lret
sti
push
push
lods
test
shl
xor
pop
pop
roll
mov
push
adc
dec
inc
cli
jnp
mulb
int
xor
mov
lea
mov
div
divb
sbbb
ficoml
fnstcw
push
mov
fs
ss
cwtl
mov
mov
jl
movsl
push
popf
je
pop
push
push
fcompl
and
inc
mov
inc
clc
test
inc
adc
sahf
jns
sub
in
pop
adc
push
testb
jp
xor
in
iret
fldcw
adc
inc
sbb
and
sbb
rclb
xchg
add
in
outsb
sahf
add
out
iret
mov
dec
or
dec
sbb
cltd
sub
adc
mov
mov
cltd
scas
lahf
pop
dec
lock
xorb
cs
imul
cmpsl
xor
cmp
daa
lahf
xchg
sbb
or
inc
inc
movl
scas
push
mov
in
and
in
rorb
cwtl
fdivrl
not
cwtl
ror
mov
xchg
ficomps
jp
pop
jp
xlat
fists
jbe
fists
mov
cld
sub
ljmp
sub
jno
scas
adc
cwtl
mov
sbb
sbb
push
inc
inc
or
int3
aad
aaa
loop
ds
ljmp
push
fs
adc
insl
or
test
ss
xor
cmp
mov
xchg
movsl
and
nop
popf
and
cmp
or
lahf
pop
add
add
outsb
jae
dec
arpl
dec
fldl
fistpl
mov
pop
add
lock
repz
pusha
ficoms
lds
rcl
mov
sbb
or
dec
dec
jns
inc
aaa
scas
sub
push
lret
cli
jae
scas
out
into
add
pushf
inc
in
loop
incl
dec
push
adc
sub
cmpsb
insb
mov
fwait
and
lds
mov
int
pop
sub
add
add
or
jo
popa
pop
arpl
sub
sbb
mov
outsb
pop
outsl
das
pop
inc
and
cmpsl
mov
pop
push
ja
icebp
cmp
pop
mov
jge
pop
imul
dec
sub
inc
cmp
ljmp
jnp
inc
pop
push
cmp
add
sub
push
jmp
stos
call
cltd
and
mov
and
mov
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
push
or
or
push
push
call
mov
mov
jmp
lcall
es
lret
xchg
call
push
sbb
loopne
xor
jmp
mov
inc
popf
mov
or
inc
cmpsl
lahf
loop
test
mov
data16
inc
addr16
dec
add
and
xor
pop
mov
out
sbb
std
movsl
jae
fs
fsts
in
mov
shl
jbe
fsubr
mov
xlat
loop
movsl
jmp
jle
test
mov
cli
imulb
sub
icebp
in
insl
mov
push
inc
sahf
sbb
mov
js
xor
fwait
push
in
mov
push
push
in
mov
aas
enter
add
cmp
in
out
adc
insb
aaa
dec
xlat
in
and
push
mov
aad
mov
loopne
mov
push
add
shll
cs
xor
in
push
cmc
stc
mov
push
fs
pop
out
xor
push
shlb
ss
sub
movl
jle
test
jg
mov
adc
fcoms
sub
imul
mov
lods
stc
enter
cmpsl
jno
ret
pop
repz
mov
cmpsl
fldenv
xor
orl
lods
sbb
and
loopne
mov
sarb
ss
rcrl
test
xchg
ror
fidivl
aam
ret
cmp
sahf
xor
sbb
fimull
bound
mov
sub
out
lcall
pop
sub
or
xor
mov
cmpsb
sbb
cmp
adc
pop
xor
enter
xchg
cmp
sub
lret
notl
scas
test
movsl
adc
pusha
cmp
xor
add
aam
into
push
ja
mov
cmp
cld
push
add
rclb
jae
lret
and
fildll
loop
sbb
mov
or
dec
lds
aad
xor
aad
or
adc
das
pusha
jmp
dec
lahf
push
fsubs
decl
push
dec
out
inc
lret
push
icebp
out
call
lods
sub
addr16
pop
jp
xchg
or
pop
bound
scas
sbb
dec
pop
test
sti
lret
cli
mov
lcall
mov
cmp
cmpsb
jns
or
imulb
mov
jmp
add
mov
cmp
xchg
sub
or
add
lea
or
and
xchg
inc
cltd
addb
mov
dec
push
pop
jno
pop
ret
or
sbb
or
cmpsl
mov
pop
call
and
sbbb
push
in
lds
add
ret
mov
aaa
arpl
lods
and
cmp
mov
xchg
or
xchg
mov
mov
nop
push
shlb
push
lods
push
mull
ficompl
int
xor
push
jle
psubsw
sbb
and
jecxz
ds
xchg
mov
cmp
in
adc
mov
in
xor
or
xorl
scas
or
mov
sti
inc
inc
ja
pop
test
sub
es
icebp
iret
and
sti
sbb
insl
fs
cmp
push
dec
rolb
adc
dec
adc
lcall
and
sbb
mov
cmp
jne
cmp
je
movl
movl
movl
movl
mov
mov
mov
mov
add
adc
xor
xor
and
mov
and
mov
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
push
push
xor
xor
push
push
call
mov
jmp
cmp
arpl
add
popa
cld
jne
iret
movsl
push
sbb
jge
out
jno
push
cmpsl
sbbb
aam
scas
inc
loope
pop
adc
aaa
mov
jb
pop
loopne
xchg
jnp
ss
scas
pop
xor
adc
icebp
int
xor
or
push
pusha
int
shrb
push
jne
in
insb
fxtract
lea
mov
or
imul
xor
push
push
lds
daa
lret
aad
cld
push
test
fs
xor
jno
and
ja
and
scas
cmp
ret
fmull
ljmp
push
jle
mov
popa
push
mov
enter
gs
lret
adc
arpl
or
ja
jle
add
mov
xchg
in
mov
xor
ss
orb
sub
gs
jle
or
ja
std
cld
mov
adc
lock
out
rorl
mov
adc
mov
daa
add
or
psrlw
xchg
ret
lds
push
stc
js
andb
xor
rolb
mov
mov
mov
icebp
adc
mov
leave
loopne
push
dec
adc
out
cmc
mov
mov
sub
adc
stc
mov
lds
jbe
loope
clc
mov
push
ljmp
pop
fmul
js
bound
pop
xor
clc
insb
push
pop
adc
cwtl
fdivrs
fiadds
inc
into
push
ja
stos
out
ljmp
fs
rcrb
xchg
push
dec
addb
sub
or
mov
push
mov
dec
fisubrl
in
pushf
mov
or
dec
mov
xchg
xor
push
cli
inc
sub
pop
jg
xor
ret
mov
xor
lret
repz
xor
pop
imul
fnstcw
mulb
mov
push
testb
xchg
xchg
pushf
cld
jg
ds
sub
subl
or
shll
int
les
out
icebp
ret
mov
and
inc
jno
push
add
insb
inc
xchg
jno
cmpsl
jle
mov
and
push
mov
lret
sbb
sub
sbb
mov
inc
sbb
lret
dec
rcl
mov
jle
pop
les
mov
pop
insl
pop
dec
push
aad
lock
mov
sbb
loopne
cmc
stos
stos
jg
push
pop
movl
jl
scas
push
lcall
addr16
fcomp
in
sub
sbb
aam
xchg
mov
daa
loope
pop
in
and
xchg
ja
mov
push
dec
mov
test
dec
scas
cmc
push
xchg
jnp
mov
lcall
sub
lret
les
sbbl
pop
xchg
cmpsl
scas
mov
sarl
enter
cmc
pop
jae
jnp
std
je
cmp
jno
jge
adc
dec
mul
push
les
lods
adc
sub
jp
xor
mov
ds
inc
xor
fidivs
dec
rcrl
scas
rolb
arpl
cmp
test
hlt
add
outsl
lahf
lahf
iret
inc
push
popf
mov
cmc
sbb
orl
jae
add
pop
in
mov
loope
jp
cld
cs
pusha
in
pop
and
push
push
push
push
call
mov
mov
push
push
push
push
call
mov
mov
add
mov
adc
mov
cmp
jne
cmp
jmp
xchg
loope
gs
fs
aam
imul
lahf
push
sbb
sbb
aad
xor
pusha
test
jp
xor
lods
insl
cwtl
js
jmp
lahf
jbe
mov
and
add
lea
sub
decl
daa
cmpsb
dec
cmp
pop
xchg
xlat
add
dec
sbb
add
add
ficompl
push
js
mov
adcb
loope
scas
popa
gs
cmp
cwtl
loop
jns
push
and
push
mov
sub
mov
mov
loopne
or
jge
popf
bnd
and
je
in
in
rol
xchg
and
hlt
cmp
neg
jns
bsr
mov
movsl
mov
fisubl
jl
daa
cmpsl
in
js
fwait
ds
fimuls
jp
jnp
test
test
repz
ss
sbbb
ja
mov
mov
ret
aam
mov
mov
cmp
jno
xchg
xlat
inc
sub
add
xor
les
cmc
lea
mov
push
sbb
fs
ret
jle
pop
add
scas
mov
cmp
add
lret
inc
and
rorl
cmc
adcl
dec
aad
push
test
fwait
sbb
xor
jnp
mov
push
cmp
push
addr16
add
and
hlt
insl
mov
inc
pop
cmpsb
mov
hlt
cld
in
pop
hlt
int
test
fmuls
xor
xchg
int3
lds
adcl
mov
sbb
xlat
push
arpl
sbb
aas
pop
jecxz
je
push
psadbw
fisubs
incl
mov
inc
clc
xor
or
lret
test
pop
subps
mov
repnz
loope
push
and
out
loopne
aam
xor
aas
mov
cltd
xor
filds
pop
jle
push
faddl
lret
xor
or
add
mov
shll
lret
pop
pop
push
xchg
rcl
pop
bound
cmp
inc
mov
dec
add
mov
push
pushf
cmp
in
sub
lret
and
xchg
jo
mov
adc
ja
sar
aaa
fadds
jge
cltd
rcll
lods
dec
push
imul
loopne
jmp
aam
sbb
xchg
and
std
insb
jns
adc
push
rcrb
nop
push
mov
cmp
stos
sbb
out
pusha
mov
dec
jl
enter
sub
arpl
imul
rorb
out
push
jmp
xchg
stc
arpl
out
dec
xchg
sti
lret
dec
gs
lods
add
sti
inc
leave
mov
mov
cmpsl
jo
movsl
aad
insb
or
sti
xor
mov
adc
idivb
mov
insl
cmp
mov
cwtl
cmpsl
jne
in
fidivl
outsb
cmpsl
in
repnz
pusha
int3
cmp
test
jnp
pop
ret
lret
sub
sbb
notb
dec
push
inc
jno
movsl
frstor
dec
pop
loop
inc
xor
cltd
ret
ja
push
jecxz
xchg
cltd
pop
notl
jmp
jbe
xor
xor
sub
xor
shlb
fisubrs
mov
mov
sub
shll
sti
pop
mov
into
psraw
out
pop
testb
je
mov
mov
xor
shld
shl
mov
mov
mov
xor
xor
mov
cmp
jne
cmp
je
mov
cmp
je
mov
mov
xor
jmp
popa
cmp
cmpsb
stos
and
insl
jnp
jl
pop
jne
pop
xchg
push
sbb
jnp
mov
lock
mov
pop
test
in
test
xchg
sub
bound
pop
loopne
data16
ffree
adc
fs
xor
test
pop
push
or
sbb
dec
sbb
sbb
push
jb
mov
std
bound
adc
fs
les
pop
sub
mov
push
ljmp
iret
xor
jo
incl
sbb
xor
decb
inc
pop
or
xor
loopne
cli
outsb
pop
push
loope
ret
jecxz
scas
and
push
adc
out
out
jp
sbb
jle
lahf
push
mov
mov
jg
mov
xchg
lods
or
mov
jmp
cmp
int
push
mov
enter
jno
lahf
in
inc
sar
daa
sar
stc
ja
mov
loopne
aam
jb
sub
cli
sbb
addr16
aam
jle
shl
adcl
pop
push
ss
aad
dec
call
jge
sbb
dec
and
jl
iret
inc
out
mov
scas
dec
push
dec
je
mov
or
fst
je
mov
xchg
aam
ds
aam
or
enter
cmp
jecxz
pop
in
cmovns
xchg
inc
and
mov
std
roll
mov
pop
in
scas
dec
dec
mov
sub
test
and
xchg
rcrb
es
repz
int3
pop
mov
jp
push
gs
daa
push
mov
pusha
imul
push
mov
push
push
sub
or
pop
lods
dec
inc
cmp
repnz
pop
in
push
lea
sbb
lret
sub
enter
stos
dec
or
jno
adc
fistpll
cmp
insb
test
std
inc
fs
jle
shlb
int3
or
jnp
mov
das
shrb
stos
insb
mov
xchg
test
negl
mov
add
scas
mov
lcall
dec
fwait
xor
adc
bnd
inc
aas
xchg
cli
xchg
test
insl
adc
and
add
sub
jge
jle
outsw
push
xchg
pushf
out
adc
in
dec
mov
lahf
jae
jle
enter
mov
popa
imul
mov
ja
cmp
leave
je
fidivrl
rorl
fstl
mov
adc
mov
cmp
cld
xchg
fwait
into
adc
gs
int
subl
pop
popa
mov
arpl
ljmp
repz
push
stc
pop
push
mov
sahf
mov
lret
ljmp
mov
pusha
test
xchg
pop
push
jns
aad
ds
negl
add
rorl
lcall
jge
fldenv
imul
mov
or
js
inc
xchg
addr16
cmovo
in
mov
das
mov
fwait
adc
and
cmp
pop
in
bswap
cmp
gs
fidivrl
pop
dec
popf
test
fsubrl
or
push
fsts
mov
test
mov
pop
mov
mov
add
mov
sbb
lcall
add
pushf
inc
xorl
lret
mov
xchg
sub
fsts
and
test
xor
shrd
shr
mov
mov
mov
jmp
push
or
sbb
dec
inc
mov
push
sbb
lret
ficomps
in
lret
aam
aam
jns
ja
xor
jno
push
sahf
pop
push
sbbl
or
inc
sahf
add
in
std
fiadds
fisttps
jne
jp
add
cs
das
ljmp
mov
mov
test
mull
dec
push
sbb
add
dec
pop
into
inc
jp
outsb
dec
or
movsl
aad
and
clts
xchg
cmp
out
sarl
stc
jge
jo
rclb
jae
dec
nop
lock
lods
xchg
rorb
xchg
je
fldt
push
pop
sub
xor
jbe
pop
pop
mov
cli
push
mov
and
stc
sub
outsl
imul
leave
pop
test
mov
cld
push
lock
addl
add
cwtl
mov
int3
add
sbb
cs
out
test
pop
fs
lea
in
scas
mov
pop
sbb
orl
inc
push
xlat
lods
in
stc
mov
mov
cmp
dec
jmp
stos
std
cli
out
stc
sbb
test
mov
movsl
adc
fs
sti
roll
js
and
inc
adc
push
jbe
mov
hlt
aaa
cmc
pop
mov
scas
add
mov
sub
lds
jge
lret
fsubrl
sub
orl
push
stos
rorl
jne
add
in
inc
in
inc
stos
lods
jns
and
inc
stos
das
lds
call
cld
repnz
mov
adc
and
decl
faddl
out
bnd
push
imul
mov
cmp
imul
xchg
jl
test
mov
jle
addb
stos
cmp
inc
sti
mov
mov
dec
add
xchg
jg
mov
mov
dec
out
mov
pop
ljmp
push
jo
clc
repnz
pop
mov
jle
mov
xchg
daa
jl
repz
das
popa
out
int3
fstpl
jge
or
iret
xor
adc
mov
cmp
hlt
mov
push
push
cmp
lods
sub
xchg
out
xchg
hlt
imull
jg,pt
add
arpl
jo
cli
jo
add
jo
pushl
xor
or
mov
mov
add
mov
inc
pop
add
repnz
mov
imul
and
or
ljmp
cmp
and
pop
loopne
jmp
xor
repz
int3
pop
ljmp
mov
jp
mov
es
xchg
call
pop
fsubr
popf
xchg
jg
stos
pop
je
test
sub
lea
xor
loop
mov
push
ficomps
movsb
jne
fwait
iret
fistpl
add
mov
test
aaa
jae
pop
popf
mov
jg
popf
cmp
dec
fisubl
dec
in
sti
jg
xor
aas
inc
repnz
cmp
loop
xchg
pushf
sahf
sbb
inc
sub
test
rcl
stc
inc
mov
push
lea
or
lcall
rol
pop
push
imul
nop
or
out
rcr
test
mov
dec
int
sub
xchg
inc
jg
enter
repnz
mov
faddp
loopne
xor
or
xor
mov
mov
or
cltd
cmp
jne
cmp
jne
movl
movl
mov
mov
mov
xor
shld
shl
mov
mov
xor
xor
mov
cmp
jne
cmp
jne
movl
mov
mov
shrd
shr
mov
mov
mov
mov
mov
shl
mov
xor
xor
or
cmp
jne
mov
mov
mov
mov
mov
mov
movzwl
mov
jmp
push
and
and
cmp
mov
mov
fstps
mov
xor
add
adc
push
inc
sti
arpl
jl
push
pop
add
scas
roll
mov
sbb
sub
stc
pop
mov
cwtl
test
sub
adc
scas
and
mov
cltd
cmp
jae
push
mov
add
push
xchg
clc
leave
inc
fiaddl
call
xchg
aas
int3
sbb
cmp
movsl
ss
cmp
lock
jo
inc
mov
sahf
fisubs
pop
and
xor
pushf
movsb
repnz
inc
das
fs
pop
xor
lcall
add
sub
adc
push
xchg
add
inc
rolb
cmp
stos
sbb
data16
sti
xor
xor
sub
adcl
aam
adc
jge
popl
pop
mov
adc
sub
mov
arpl
jmp
aas
or
test
arpl
fcomi
fistpll
xor
mov
fdivrp
lods
outsl
jle
sub
or
dec
out
in
adc
inc
mov
scas
sarb
fcoms
pushf
add
sbb
xor
iret
pusha
and
or
sub
or
pop
out
call
dec
lods
push
cmp
ljmp
arpl
cmp
sti
push
subb
repz
test
insb
jp
adc
and
xchg
sub
add
pusha
mov
cmpsb
push
outsl
jle
push
adc
mov
mov
bound
jae
adc
xchg
jns
filds
push
add
pop
mov
xor
jl
pushf
fldenv
dec
pop
mov
inc
bound
mov
jl
filds
jl
mov
mov
outsb
mov
adc
cmp
mov
inc
addl
adc
mov
sbb
idivb
mov
repz
cmp
xchg
sahf
mov
mov
aaa
aad
je
bndldx
adc
lahf
mov
clc
pop
pop
mov
aad
mov
add
repz
push
fsubl
mov
decb
inc
ljmp
fs
dec
das
or
push
add
jge
ljmp
sub
scas
inc
hlt
jae
jg
adc
iret
mov
in
sar
jecxz
nop
xchg
jne
pop
movsb
pushf
add
push
add
pusha
push
push
into
imul
les
jp
xor
movsl
rcrl
aam
cmc
push
out
popa
inc
sub
and
cmp
adc
addb
push
shll
daa
xchg
iret
xchg
xchg
and
mov
lahf
push
xor
arpl
jns
inc
test
xchg
pop
xor
and
ds
mov
or
add
out
outsb
xor
notb
cmpsl
mov
mov
sbb
add
adc
inc
dec
xor
les
mov
in
mov
imul
je
add
call
jb
lret
mov
ss
loop
mov
pop
jle
cmp
mov
ret
shlb
aad
sahf
dec
cmp
cwtl
add
push
ret
mov
cmp
adc
dec
dec
dec
negl
push
sub
or
add
es
cmp
bound
mov
js
ds
cmp
pusha
mov
test
and
mov
or
mov
add
or
mov
jmp
inc
pop
push
fwait
xor
pop
stos
test
and
sbb
ds
cmp
std
or
fnstsw
fcompl
xchg
mov
loopne
mov
cltd
mov
mov
xchg
cwtl
testb
mov
loop
fwait
mov
adcb
or
imul
cltd
jp
subb
xchg
and
and
aam
mov
in
repnz
test
jecxz
and
pop
inc
enter
hlt
aam
sub
xor
sbb
xchg
cld
test
push
out
rorb
movsb
loop
adc
mov
xor
mov
push
mov
fbstp
or
out
dec
xchg
lret
push
outsl
stc
push
pop
neg
sub
pop
mov
jge
test
lret
stc
jns
add
add
ja
mov
imul
jbe
push
mov
cmpsl
leave
daa
nop
sbb
scas
pop
inc
xchg
ja
fstpt
adc
sbb
push
or
cs
or
and
and
repnz
push
add
movsb
mov
mov
into
jb
mov
jmp
or
movsb
and
lea
sub
mov
lods
xchg
mov
addr16
pop
sbb
jb
or
cmp
pop
xchg
ljmp
mov
jg
jne
fildll
outsl
fwait
pop
push
rol
sbb
repnz
sbb
xchg
pushf
into
in
inc
cmp
jae
shr
adc
in
loopne
adc
jg
push
xor
dec
cmc
push
loope
scas
insb
cwtl
sbb
jmp
adc
cmp
sbb
test
xor
loopne
push
sub
scas
sub
out
popa
popl
mov
arpl
lcall
mov
jns
xchg
push
mov
scas
fsubs
popf
icebp
jg
rorb
hlt
dec
movb
loopne
test
sarb
jno
andl
mov
or
imul
add
fdivl
mov
inc
jne
in
cmp
pop
pop
jae
ss
lock
push
leave
mov
mov
cmc
cmpsl
inc
arpl
xlat
std
pop
add
mov
int
push
xchg
or
shl
jne
iret
ja
jno
orb
pop
adc
mov
dec
mov
fisttpl
jmp
cmp
jmp
lcall
sbb
xchg
push
int3
jns
aas
jb
xchg
xor
mov
xchg
adc
sar
jo
shlb
jno
sarl
ficoms
aad
mov
pop
nop
push
fs
mov
pusha
adc
inc
test
jb
cld
dec
cmp
xor
pop
push
lock
shl
popf
mov
xor
inc
aas
arpl
insb
imul
xchg
outsl
daa
sbb
push
dec
int3
je
fcmovnbe
cmpsb
adc
add
cmpsl
vrsqrtss
pop
dec
sub
loop
cmp
bound
insl
xchg
and
repnz
mov
dec
pop
mov
test
push
or
sub
dec
fdivp
cmc
adc
xlat
cmp
repnz
pop
stos
adc
sahf
sub
jnp
sbb
jmp
pop
adc
adc
inc
imul
adcl
aaa
lods
dec
ljmp
and
push
sub
sarb
sub
in
js
outsl
inc
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
or
mov
or
mov
sub
mov
sub
mov
cmp
jbe
mov
mov
mov
mov
movzwl
mov
or
mov
sub
mov
or
imul
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
xor
mov
imul
mov
and
mov
and
mov
cmp
ja
mov
mov
shrd
xor
mov
shr
mov
xor
or
push
push
shl
push
lea
push
lea
push
jmp
in
sarb
dec
sbb
icebp
scas
mov
push
adc
jo
jns
sbb
loopne
add
cmc
mov
push
rcrb
xchg
insb
xor
jne
sahf
cwtl
jg
or
or
xor
es
fimull
fstp
ds
add
das
aam
jb
jno
mov
push
leave
sbb
or
add
out
mov
fisttpl
es
inc
pop
adc
cmpsb
push
fidivl
lahf
es
xchg
imull
movsb
imul
aad
sahf
pop
adcb
iret
popf
mov
out
out
insl
mov
inc
xchg
in
gs
clc
nop
mov
pop
or
cld
dec
push
movsl
pop
jp
ror
pop
scas
shlb
imul
shr
push
out
sbb
je
aam
dec
mov
es
std
inc
mov
les
or
ds
xchg
mov
popa
lahf
dec
stos
int
sarl
out
dec
sub
pop
ret
mov
inc
fidivs
mov
push
jb
sbb
cmpl
daa
std
dec
das
cli
subl
jb
ss
add
test
aas
or
out
dec
and
inc
ljmp
dec
cmovbe
sbb
fwait
xor
test
arpl
hlt
dec
sub
arpl
cli
add
xor
mov
xor
ret
push
jns
scas
jl
jb
iret
fidivrl
dec
xor
out
xchg
sub
scas
insb
ja
out
jl
jecxz
insl
xchg
aas
fidivl
lods
mov
mov
clc
enter
xchg
shlb
test
mov
decl
lahf
pop
data16
out
cmp
imul
cli
or
nop
movsl
ds
popa
add
not
movsl
lea
adc
fs
or
loop
sbb
cmp
dec
fdivrp
sub
or
js
and
lcall
mov
xchg
loope
lea
sar
dec
nop
aam
loope
jg
cld
pop
stc
mov
fwait
ljmp
out
dec
daa
cmp
addl
push
or
stos
inc
stc
jns
cli
cmp
rclb
jno
jns
dec
or
dec
dec
pop
imul
or
push
bound
sub
orb
jg
dec
inc
lock
ficomps
popa
repz
cmpsb
insl
repnz
ss
pop
inc
fidivrs
inc
fs
sbb
inc
jo
fildll
sub
leave
and
dec
es
dec
or
in
mov
push
dec
sbb
mov
cmp
xchg
adc
jge
mov
adc
push
dec
pop
test
shl
add
ljmp
fdivr
mov
dec
fnsave
out
xor
xor
out
xchg
mov
test
jg
mov
movsl
inc
fldt
cmp
decl
movsl
andl
jp
inc
loop
sti
sub
bound
sti
bound
jbe
test
movsb
gs
mov
repz
adc
push
lods
repz
xchg
ds
in
or
pusha
cmc
mov
shlb
les
pop
adc
jge
dec
cmpsl
fwait
mov
cmp
mov
fisubs
xlat
ret
sbb
or
push
rcl
nop
lcall
jle
cmc
test
push
out
popf
xchg
pop
pop
push
or
jl
fisubrs
cmp
imul
addr16
dec
push
push
rolb
cmp
jle
sbb
jmp
inc
and
sbb
daa
and
cltd
lahf
jo
pop
cmp
mov
dec
cmpsb
idivb
mov
lods
js
ss
adc
cmpb
sub
jne
push
mov
sti
aam
add
push
lea
js
out
aam
aaa
testb
push
jnp
lds
and
push
mov
jp
push
out
pcmpgtd
inc
mov
jge
add
push
mov
repz
jb
inc
movsb
dec
jg
cmpsb
aam
imul
inc
jmp
pop
shll
cmp
arpl
lret
mov
sbb
frstor
sub
scas
xor
dec
shl
sbb
daa
cmpsb
int3
and
adc
sub
push
notl
sbb
add
lock
dec
mov
mov
pushf
lock
xor
jnp
jnp
lahf
sub
mov
ja
int
mov
mov
jge
mov
and
insb
orb
mov
add
adc
ds
pop
push
sub
out
cmp
imul
into
mov
inc
outsb
cli
dec
add
lods
jae
mov
sub
imul
arpl
jl
mov
mov
rcrl
loop
and
adc
push
pop
out
popl
jb
mov
adc
lcall
arpl
mov
dec
push
clc
mov
push
sarb
dec
je
enter
int3
test
ja
repz
sbb
add
dec
cli
test
loop
push
jmp
dec
sbb
leave
daa
lcall
pop
mov
xor
adc
cwtl
jle
dec
dec
mov
sub
mov
xor
stos
adc
mov
lds
lcall
jbe
aam
inc
scas
sub
int3
dec
jecxz
pop
mov
pop
push
out
jo
adc
push
inc
pop
insl
pop
sar
pushf
sub
in
push
xor
sub
shr
add
sbb
mov
daa
xchg
scas
pop
inc
cmp
mov
xchg
roll
mov
popf
jno
inc
pop
aam
stc
and
or
or
rcl
sbbb
mov
hlt
pop
push
gs
push
xor
or
mov
rcrb
add
fisttpl
sub
xchg
lds
scas
iret
push
mov
std
jae
pop
dec
add
add
or
inc
lret
fistl
mov
std
mov
cmp
mov
shrb
sub
test
addl
add
and
icebp
out
xor
and
call
js
daa
xchg
insl
insb
cmc
push
movsl
fcmovu
xor
js
push
insb
ja
jge
lock
icebp
fistpl
inc
sti
fsubs
stc
xchg
fwait
cwtl
mov
pop
xlat
mov
lods
bound
outsb
or
add
jp
cmp
mov
mov
and
jp
fimull
cmc
xchg
xchg
adc
push
lods
hlt
or
shrl
scas
sub
dec
xor
mov
imul
mov
push
popa
movsl
icebp
inc
cwtl
ja
outsb
cmp
adcb
decl
dec
cwtl
sbb
je
ljmp
push
adc
inc
cli
jl
loope
in
mov
adc
jecxz
mov
ljmp
loope
pop
ret
lea
sbb
push
adc
cmp
push
adc
aam
xchg
push
js
pop
xchg
xchg
dec
adc
loopne
and
jns
xor
cmpb
idiv
pop
pushl
pushl
pushl
pushl
call
mov
mov
mov
mov
shrd
shr
shl
xor
mov
xor
or
mov
mov
mov
mov
shrd
xor
mov
shl
shr
mov
xor
or
mov
mov
mov
mov
mov
cmp
jne
mov
mov
mov
cmp
jne
movb
movb
movb
movb
mov
jmp
push
and
shll
push
and
jmp
sbb
push
sbb
inc
loope
jb
push
int3
pop
insb
push
mov
xchg
in
adc
cltd
dec
out
pop
mov
fidivrl
jl
test
stos
and
push
loope
inc
out
push
clc
fidivl
jle
mov
into
mov
adc
ss
xor
in
dec
repz
pop
inc
cmpsb
popa
jne
sub
cmp
dec
cmc
inc
into
jg
mov
cltd
or
js
mov
cmp
cmp
sbb
inc
adc
mov
test
adc
sarl
mul
andl
lea
repz
jmp
adc
bound
test
xchg
inc
aad
pop
repnz
filds
sbb
sbbb
stc
cmp
pop
adc
xchg
lods
test
xchg
cmp
and
aas
fadd
inc
add
loop
jmp
aas
pop
push
call
pop
out
dec
test
jno
loopne
dec
fwait
pop
push
push
inc
das
dec
lcall
ljmp
mov
mov
xchg
scas
xor
sbb
aas
lret
cmp
inc
fs
test
orl
shrl
xor
je
out
ljmp
xchg
inc
sub
mov
outsl
dec
pop
icebp
int3
or
mov
jbe
inc
add
add
cmp
rorb
stos
mov
jnp
ds
ds
cmpb
inc
or
cmp
stc
push
mov
outsl
test
frstor
rcrl
or
sub
mov
xorl
pop
push
inc
mov
adc
mov
push
xchg
xchg
push
or
cmc
xor
pop
push
pop
out
aas
jle
movsb
xchg
out
mov
xor
jne
inc
mov
mov
pusha
dec
fsubl
xor
stos
jns
xlat
pop
mov
or
pop
adc
loopew
cmp
push
inc
and
xor
jns
adc
lcall
lods
ret
in
pop
hlt
ds
mov
int3
mul
fdiv
adc
lret
cmp
mov
xchg
and
mov
mov
insb
movsl
mov
leave
or
or
or
frstpm(287
pop
sbb
and
iret
into
mov
test
cmp
mov
dec
fisttpl
fs
pop
mov
pusha
pop
call
jl
je
jmp
lock
enter
gs
or
lods
or
push
mov
test
mov
jmp
cmp
les
loop
dec
int3
mov
clc
sub
movsb
popf
out
fisubrs
adc
outsl
int3
sub
lock
nop
leave
or
test
inc
xchg
sahf
out
or
js
mov
loop
xchg
cwtl
sbb
inc
fcomps
es
jae
vmread
adc
mov
mov
ja
fcomps
add
dec
dec
pop
es
xor
std
mov
popa
nop
cmpsl
jmp
je
popa
vcvttsd2si
and
fs
ja
mov
flds
and
insb
lea
cltd
out
ss
mov
pop
test
jbe
jb
in
fadd
mov
popa
cmpl
mov
cli
rcr
xchg
test
add
mov
mov
sub
aaa
adc
mov
dec
and
or
jmp
fimuls
jle
ds
je,pn
xchg
mov
xchg
arpl
sbb
aam
rcrb
rcll
loopne
xchg
push
lds
fdivrs
or
push
and
in
sarl
push
sbb
in
xchg
out
adc
push
inc
outsb
mov
imul
sbb
fnclex
push
les
imul
xchg
jle
lea
mov
out
mov
in
jbe
subb
mov
je
jle
sti
inc
test
push
push
psadbw
mov
stos
test
loop
pop
mov
loopne
and
add
insb
dec
jl
jns
and
sti
ja
ds
xchg
mov
adc
stc
popa
daa
arpl
pop
adc
push
pop
cmp
jo
mov
sbb
adc
jmp
andb
inc
mov
cmp
mov
adc
jno
dec
dec
jb
mov
pop
outsb
faddl
sbb
add
ja
dec
xchg
add
inc
out
push
call
cltd
adcb
mov
cmp
xor
paddusw
es
scas
jl
popf
jg
loop
repnz
xchg
push
push
outsl
jbe
push
pop
out
sub
add
movsl
dec
mov
loopne
fbstp
into
sbb
bound
stos
sub
cmp
stos
loop
cmpsl
pop
ds
cwtl
mov
subl
pop
lea
mov
lods
xchg
jbe
subb
push
in
jmp
fstps
or
sub
add
cwtl
push
and
ljmp
popa
int3
push
dec
xchg
in
mov
push
ss
hlt
mov
push
imulb
sbb
sbb
mov
outsb
jecxz
sbb
imul
sub
enter
orb
add
imul
mov
push
sbb
inc
or
cmpsl
fwait
push
sub
jae
flds
pop
cld
jle
lock
outsl
sub
lret
add
pop
sbb
mov
dec
jno
shrb
xor
in
lret
mov
sbb
mov
and
mov
mov
call
mov
scas
leave
mov
push
jp
int3
cmp
and
or
add
mov
cmp
add
bound
xor
scas
mov
adc
xor
out
pusha
ss
ds
sbb
lret
mov
fldt
push
es
scas
xchg
dec
add
add
xchg
imul
movsl
cmp
shr
mov
and
fwait
mov
mov
leave
in
sub
add
into
inc
inc
push
rclb
jl
imul
mov
out
shlb
mov
in
fxch
mov
sbb
addl
addr16
xor
inc
icebp
or
ds
xchg
out
sbbb
push
sbb
repz
push
mov
pop
mov
mov
scas
mov
push
or
adc
pop
cmpsl
rcrb
loope
jg
cmp
or
jp
unpckhps
sahf
xor
hlt
pop
sarl
xor
cmp
cmc
mov
mov
cmpsl
das
scas
add
das
mov
jl
cmpsl
xchg
fsts
data16
loope
sub
outsl
rolb
push
in
jl
sbb
fimull
xchg
lret
fucomip
sub
add
xchg
sahf
cli
sti
clc
push
lock
cmp
sub
rorl
movzbl
movzbl
cltd
idiv
movzbl
or
mov
movb
movb
movb
movb
movb
mov
mov
or
and
mov
imul
mov
movzbl
movzbl
and
mov
movzbl
cltd
idiv
mov
cmp
je
lea
push
lea
call
cmp
jmp
lahf
cmpsb
out
cltd
out
inc
push
push
mov
dec
outsl
mov
pop
push
sbb
ja
das
mov
mov
es
shlb
and
cmp
pop
xor
jl
jl
rolb
shrl
insb
std
jge
cmp
xchg
dec
cmp
aam
add
inc
xchg
cli
sti
in
xchg
data16
movsl
loope
call
sti
or
stc
adc
and
xor
lret
dec
dec
cmp
pusha
or
cld
add
pop
hlt
test
xchg
rol
fiadds
mov
fwait
decl
adc
cmpsl
outsb
pop
gs
cmc
sub
shrb
loope
adc
outsl
stc
jns
pop
or
pusha
push
lret
jp
dec
les
dec
inc
sub
push
ss
outsb
imul
enter
mov
xchg
dec
mov
inc
popa
addl
into
fwait
gs
sahf
ret
sub
enter
xor
push
iret
dec
pop
ja
push
ficoms
rclb
es
or
or
mov
mull
mov
loopne
daa
lods
pop
adc
cmp
jg
je
cmpsl
xchg
movsb
mov
jge
out
ficomps
xchg
in
outsb
or
add
jno
lods
adc
push
roll
outsl
fs
insb
repnz
dec
jae
pushf
fbstp
dec
inc
mov
cs
jp
test
xchg
sbb
test
and
cld
inc
adc
dec
mov
aam
lea
in
xor
and
frstor
jbe
sub
add
pop
adc
push
sti
sbb
jecxz
pop
cld
jo
fwait
rolb
and
and
pop
int3
insl
inc
popa
mov
mov
adc
pop
inc
adc
scas
mov
gs
mov
dec
jno
sahf
cmp
push
in
push
add
fs
jo
xor
and
xchg
mov
enter
jmp
iret
insb
mov
loope
add
sbb
xor
xor
mov
jae
sub
roll
lcall
test
ljmp
mov
adcl
das
loop
sbbl
pop
mov
jne
fwait
rcrb
and
cmc
popa
jbe
inc
gs
sub
pop
jmp
cmp
cmp
arpl
std
mov
xchg
arpl
sbb
daa
imulb
ficomps
add
bound
dec
cwtl
aad
push
lret
out
pop
loope
sub
mov
or
inc
dec
daa
mov
dec
cwtl
imul
ret
mov
dec
sbb
dec
shlb
or
dec
and
cmp
popf
outsl
xor
addr16
fs
push
pop
scas
pop
popf
push
cmp
ss
xchg
clc
lods
inc
adc
in
lcall
mov
neg
inc
daa
dec
cmc
jmp
inc
jnp
lea
fidivs
leave
sbb
lret
notl
add
addr16
cmc
sbb
imul
and
dec
in
sahf
fdivl
lods
sbb
cmp
adc
push
mov
shl
sbb
icebp
cwtl
sub
add
lret
ja
dec
and
sbb
or
incb
push
in
mov
aam
jmp
test
out
mov
gs
es
jne
dec
jg
mov
mov
jbe
icebp
mov
pop
pusha
leave
insl
mov
mov
imul
push
das
cmp
push
and
adc
lods
jl
test
add
cmp
jne
xor
jmp
mov
mov
jmp
ss
xchg
sbb
sbb
fwait
push
out
jl
fwait
in
mov
mov
pop
pop
clc
or
loope
push
sub
push
xor
enter
cmp
fdivrs
outsb
in
enter
lret
fdivs
lret
jmp
add
aas
dec
out
fs
push
push
cmpsl
je
sbbl
dec
call
into
shr
dec
add
add
dec
jge
sbb
dec
cltd
add
icebp
movsl
mov
nop
xchg
sub
mov
fisttps
inc
aam
cwtl
inc
movl
ret
cmp
add
mov
fwait
out
dec
js
ret
out
xchg
cvtpi2ps
out
idivb
pop
lcall
add
push
das
ljmp
dec
dec
or
cmp
in
pop
out
rcrl
stos
xchg
shl
test
hlt
aam
push
in
jne
in
es
test
ljmp
inc
or
cwtl
mov
pop
js
pushf
cmp
xor
pop
push
mov
push
sbb
fstps
int3
mov
mov
ret
stc
out
shll
popa
push
in
ljmp
loopne
bound
int3
cmp
orl
nop
xor
xchg
inc
fwait
add
and
test
add
nop
imul
fiaddl
addr16
lcall
cmpsl
or
in
leave
xchg
and
sbb
insb
pop
pop
xchg
stos
imul
inc
xchg
dec
mov
test
pushf
xchg
sarl
push
push
in
out
xor
push
pop
xor
and
or
loopne
enter
sti
jae
cmp
push
jae
push
cmp
dec
dec
cmp
push
test
xchg
inc
rolb
add
or
cwtl
and
scas
add
pop
push
xchg
sub
aad
xor
xchg
adc
sarb
fdivrp
out
in
xchg
or
pop
dec
jne
cli
ror
pop
imul
stc
push
test
xchg
int3
std
push
imul
sbb
dec
jge,pn
mov
jl
dec
pop
je
adc
push
or
xor
cmp
mov
cld
xor
aam
ror
inc
cmpsl
ds
xor
incl
out
bound
inc
insb
sbb
scas
xlat
xchg
adc
loope
xor
add
in
mov
jno
mov
cmpsb
add
out
xlat
in
dec
shll
pop
das
loop
gs
push
ret
xor
sbb
xchg
adc
inc
inc
pop
in
daa
pop
je
cmpsl
xor
pop
jmp
mov
mov
xchg
cmp
lods
in
ret
les
mov
je
lock
push
or
jle
test
ljmp
and
adcl
sbb
push
sbb
test
push
pop
ret
sub
jg
repnz
iret
push
xor
add
leave
mov
sub
mov
mov
cmc
jle
push
test
out
sbb
sti
push
or
pusha
imul
xchg
sbb
js
sarl
fisttps
lds
pushf
fucompp
jno
rcrb
insl
data16
imul
adc
lea
mov
test
arpl
pop
sbb
fwait
adc
adc
cmp
ss
cmpsl
insb
fs
pop
mov
shrb
push
in
sahf
lret
icebp
and
fistps
jns
mov
push
and
mov
add
adc
mov
mov
jmp
mov
push
push
jmp
mov
cltd
lahf
bound
mov
jle
dec
push
sbb
and
push
inc
mov
lahf
mov
push
fidivl
xlat
test
call
jbe
xlat
stc
aaa
jp
test
adc
mov
mov
or
es
mov
cli
cmp
lods
cmp
cmp
outsb
mov
jl
add
in
lret
mov
push
dec
mov
notb
leave
pop
aas
jmp
dec
gs
addb
les
test
pushf
ret
lds
push
mov
inc
or
sarl
popf
rorb
xchg
out
sub
lcall
stos
cltd
ficoml
push
push
popa
ret
lods
dec
push
mov
jnp
iret
mov
std
ret
stc
icebp
inc
push
sub
inc
sub
fmuls
je
and
gs
psubsw
aaa
pop
cli
or
stos
adc
push
or
xchg
sub
or
mov
mov
cs
xor
mov
sub
imul
sbb
je
sub
in
movsl
push
cmp
push
lahf
data16
add
leave
fs
int3
sub
insb
jmp
dec
lea
mov
leave
lret
sub
adc
cmc
push
xor
sub
lcall
sub
enter
js
and
adc
mov
jb
xchg
xchg
adcl
out
xor
shlb
mov
aam
xchg
push
imul
jg
mov
jnp
jmp
adc
sbb
add
jbe
adc
jmp
mov
enter
push
add
loopne
je
jmp
fnstcw
fwait
popf
fwait
push
push
orl
loopne
jmp
mov
out
ror
mov
sub
mov
xchg
mov
lods
xchg
or
push
fmuls
add
push
mov
dec
push
dec
pop
movsl
xor
dec
popf
mov
mov
push
test
das
mov
inc
loopne
mov
xor
daa
lahf
and
shlb
call
cld
in
fimuls
inc
scas
push
cs
dec
std
stos
aad
sti
xor
jg
stos
icebp
out
add
cmp
or
cmp
mov
jb
xor
xchg
jmp
popa
mov
pushf
dec
ljmp
aaa
outsb
inc
ret
fcompl
jae
iret
pop
adc
aas
lret
enter
sub
lret
inc
popf
cmpsl
push
inc
and
in
add
imul
mov
aaa
fnstsw
lods
adc
aam
loopne
test
mov
add
xchg
push
shrb
test
ret
rcrb
out
sub
shlb
dec
push
mov
and
addr16
aas
ljmp
mov
pop
sub
pusha
repz
int
push
inc
insb
fs
mov
mov
jne
in
jb
jmp
out
or
pop
stos
and
test
cvtps2pi
inc
lret
bound
and
test
cmp
sub
orl
mov
cmp
dec
push
test
aaa
shlb
popa
arpl
sub
jnp
inc
bound
enter
lods
call
lods
jb
mov
cmp
in
fwait
cld
pusha
fwait
pop
out
adc
fs
imul
and
call
mov
push
pushl
lea
push
call
mov
mov
mov
mov
mov
mov
mov
lea
mov
add
movl
jmp
dec
inc
mov
push
push
push
sub
stos
and
sbb
push
sub
jnp
adc
and
add
out
imul
push
fs
pusha
sub
push
or
test
decl
xchg
rorb
shrl
inc
pusha
cmp
pop
inc
or
leave
mov
ret
std
pop
xlat
sub
mov
jae
rolb
push
inc
mov
shr
mov
fildl
adc
idivb
dec
jne
cmp
in
jge
cmp
sub
arpl
sub
aam
popa
adc
cmp
fsub
movsl
mov
inc
cwtl
int3
pop
push
or
or
ret
incl
or
loope
nop
in
mov
andb
shl
ds
xor
outsb
xor
xchg
aas
jns
fstp
frstor
lods
in
inc
jge
fwait
enter
ret
out
cmp
and
jae
inc
mov
out
incb
mov
xchg
pop
pop
xlat
daa
gs
pop
dec
dec
dec
std
dec
stos
sub
jae
mov
add
movsb
or
std
in
pushf
nopl
inc
or
test
pop
cld
out
mov
xchg
jbe
adc
repnz
iret
clc
dec
pop
inc
xor
shrb
mov
shlb
fsubrl
sub
mov
xor
outsl
fmull
xor
shll
xor
add
dec
jo
cmpsb
pop
jo
pop
and
fdiv
jae
pop
mov
in
jb
mov
mov
int
sub
std
push
jg
insl
pop
add
adc
test
pop
jecxz
xchg
sbb
lret
mov
jmp
jae
nop
adc
movsb
add
or
in
or
hlt
mov
mov
jbe
scas
mov
imul
sub
divb
rcl
add
add
stos
sub
lods
lds
mov
insb
pop
sub
add
xchg
adc
fwait
xor
iret
pop
ret
mov
jle
adc
mov
sbb
xlat
jns
jg
ljmp
sarl
out
and
lods
add
pop
icebp
lea
inc
adc
push
sbb
xor
nop
add
adcb
mov
sub
in
sub
sub
mov
insb
push
push
pop
jmp
adcb
cmpsl
sbb
mov
adc
sahf
xor
into
lahf
mov
mov
sarb
push
imul
cmp
stos
js
dec
ljmp
xchg
xchg
and
xchg
xor
add
fdivrl
stos
mov
not
mov
lahf
inc
shlb
xor
jecxz
repz
cld
cmp
mov
sub
pusha
cltd
adcl
loop
cmp
fcomip
jo
fnstsw
push
scas
and
add
xchg
das
xlat
dec
cmp
loope
mov
mov
and
scas
lea
and
sub
push
mov
out
rcrl
imul
inc
mov
fidivrl
lds
cwtl
lock
adc
pop
mov
lret
into
push
inc
xchg
cmp
shr
rolb
mov
push
lret
dec
xor
pop
mov
ffree
ret
jecxz
mov
and
hlt
mov
xor
pop
shll
mov
adc
mov
xor
mov
fldcw
jle
push
fs
das
dec
pusha
test
pop
jl
dec
xor
movl
mov
and
add
and
sub
and
mov
movl
mov
mov
or
add
cmp
je
mov
mov
mov
xor
shld
shl
xor
xor
cmp
jne
cmp
je
mov
mov
mov
mov
xor
xor
shr
shl
or
xor
shld
shl
xor
xor
cmp
jne
cmp
je
mov
cltd
mov
mov
cltd
shld
shr
xor
jmp
inc
mov
and
je
adc
aas
push
sbb
add
aaa
and
sbb
sub
mov
add
loopne
inc
or
stos
outsb
fstl
sbb
loopne
fnstsw
loopne
cmp
mov
bnd
test
fs
mov
arpl
mov
mov
cmp
in
ljmp
push
inc
add
out
push
pop
mov
pop
or
jg
ss
out
mov
xchg
ja
pop
lret
fs
jo
jae
rolb
fsubs
hlt
mov
pop
sub
dec
rclb
shlb
bound
sbb
jno
pop
jg
dec
xor
lock
stc
aam
mov
pop
fwait
popf
push
mov
cmpb
aaa
dec
mov
and
jbe
xor
lods
in
shlb
aam
inc
andl
movsb
aad
fildll
sub
adc
sbb
in
cmp
or
push
pop
int
cs
inc
dec
je
mov
xchg
and
loop
lods
fisubrs
out
cwtl
jmp
pop
xchg
jb,pn
lret
ljmp
cld
jl
fwait
pop
mov
out
or
or
sbb
aam
xchg
adc
mov
popf
xchg
adc
scas
add
add
lret
mov
mov
jbe
mov
sub
in
pop
xchg
adcl
add
mov
aam
dec
outsl
mov
mov
outsb
mov
orb
cmp
mov
add
xor
pop
xchg
sarb
std
inc
inc
mov
iret
leave
iret
std
mov
das
enter
lds
xor
div
fcmovne
cmc
push
repz
jmp
hlt
push
dec
mov
pusha
mov
enter
fldenv
mov
or
pop
add
cmp
mov
cltd
cmpsl
movsb
or
lock
scas
test
cmp
sbb
adc
mov
into
xchg
jp
int3
sbb
arpl
lea
mov
inc
fbld
rorl
adc
cmpsb
sub
mov
adc
pop
jge
cmove
dec
std
cltd
jbe
pop
sti
cltd
jp
or
xorb
push
out
stos
mov
ja
xor
cmp
icebp
add
int
lods
jo
push
nop
cmp
mov
fnstenv
movsl
testl
sbb
ret
ret
and
push
arpl
push
push
loop
nop
pop
repz
sbb
nop
nop
xlat
xchg
mov
fstpl
or
sub
push
cld
into
mov
cmovns
xchg
pop
push
mov
lods
mov
adc
roll
pop
movsl
sub
cli
cwtl
lock
jns
push
dec
mov
aaa
and
or
and
in
in
mov
outsb
mov
cltd
inc
push
jecxz
and
cmpsb
dec
rorb
testl
arpl
cmp
jns
push
popa
shl
push
inc
cs
jmp
mov
mov
rclb
add
sahf
gs
mov
or
aam
movsl
jg
pop
xchg
mov
xchg
xchg
lock
jge
mov
push
cmp
xchg
cs
adc
std
in
clc
pop
outsl
fdivl
xchg
and
mov
arpl
ja
rcll
pop
loop
pop
lret
rcrl
repnz
or
jmp
test
nop
lahf
jp
and
xor
mov
push
sbb
in
cld
xchg
xchg
xor
mov
out
int3
fwait
inc
add
and
xchg
pop
pusha
sbb
dec
mov
inc
fnstcw
or
inc
ret
sbb
xchg
rcll
jle
jl
nop
push
inc
js
outsb
ds
xor
sbb
stos
pop
pop
sub
test
add
out
mov
xlat
iret
in
aas
flds
sbb
and
repz
js
cmc
push
data16
mov
push
ljmp
or
bnd
das
mov
xchg
cmpsl
xchg
and
cli
lahf
sbb
adc
lret
loope
mov
sub
adc
mov
popa
rcl
lcall
xchg
sub
mov
cmp
push
or
je
jecxz
mull
addr16
xor
movsb
sti
sbb
xchg
shr
xor
mov
fsubr
std
stos
jmp
dec
test
or
mull
inc
cmpsl
shl
sub
mov
mov
icebp
fcoml
data16
xlat
sbb
cmp
sub
pop
sbb
push
rolb
cmc
fistpll
mov
xor
lahf
into
into
push
mov
lods
aaa
adc
hlt
pop
jnp
imul
lock
sub
std
aaa
popa
mov
outsl
push
inc
std
repz
movsb
add
les
fstl
push
das
push
inc
sub
scas
mov
incb
add
fsub
jmp
inc
mov
sbb
sub
sbb
xchg
or
jp
fists
adc
inc
or
les
xchg
adc
pop
nop
cmp
mov
mov
insl
cmp
aam
adc
nop
sub
or
lds
fwait
aas
cmpsb
pop
sbb
add
adc
lret
add
xor
mov
int
gs
gs
push
push
jns
loop
je
aam
and
add
stos
or
stc
idivb
cmp
test
adc
inc
insl
in
iret
and
adc
mov
xor
adc
pop
in
adc
mulb
cltd
sahf
test
lock
push
cmp
in
scas
sbb
xchg
mov
push
adc
mov
or
xorl
add
je
cmp
cmc
pop
hlt
lods
shl
aas
jl
rorl
sub
sti
cwtl
ror
mov
std
in
mov
out
loope
inc
in
sbb
aas
pusha
adc
push
movsb
data16
adc
out
cmp
outsb
push
push
pop
cld
push
pusha
faddp
lahf
fdivr
leave
push
xchg
cs
pop
in
mov
mov
cltd
jle
into
cwtl
lea
push
mov
test
loope
cwtl
ljmp
dec
sub
in
adc
and
scas
lcall
js
mov
xchg
push
mov
gs
push
ds
xor
add
add
lcall
fucom
mov
test
xlat
pop
sub
sub
sub
xor
and
xlat
dec
jae
repnz
mov
stos
inc
jnp
decb
add
divl
mov
pop
icebp
pop
push
test
dec
loopne
dec
fwait
sub
lcall
or
jg
pop
cmovae
hlt
push
out
or
cmp
enter
scas
sbb
xlat
mov
mov
xor
xor
mov
cmp
jne
cmp
je
pushl
pushl
mov
mov
pushl
mov
call
mov
mov
mov
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
or
push
cmpl
movl
mov
mov
movl
jmp
mov
cmpl
jg
push
push
call
sbb
mov
xor
mov
sbb
neg
xor
adc
mov
mov
and
push
mov
mov
sub
imul
push
add
movl
sub
movl
xorl
movl
mov
add
mov
xor
sbbl
div
xor
imul
neg
mov
orl
xor
and
xor
mov
xor
andl
div
orl
sub
cmpl
mov
mov
notl
jmp
movl
notl
cmpl
je
pushl
push
push
pushl
call
add
add
sub
adc
sub
movl
and
mov
mov
mov
sbb
movl
addl
movl
xor
movl
or
jmp
ret
push
sbb
mov
mov
dec
test
push
sbb
mov
sbb
fisttps
sbb
adc
fwait
sbb
std
testl
fsubp
push
shrl
inc
cmpsb
sub
pop
or
sbb
ss
dec
and
cmp
shlb
outsb
xchg
and
cmp
inc
push
std
inc
out
cmp
push
mov
xchg
push
in
xchg
aas
pusha
inc
std
icebp
sbb
insb
lret
insl
gs
mov
cmp
cmpsl
adc
and
cmc
dec
add
scas
mov
ja
dec
pushl
enter
push
rcrl
adc
outsl
mov
aam
in
scas
mov
pop
iret
nop
sbb
in
lea
cmpsl
fistpl
fiadds
jne
stc
out
mov
pop
pop
push
adc
jb
mov
aad
cmpsl
push
adc
lret
push
pushf
cltd
shlb
jnp
sahf
pop
sbb
jge
iret
and
jge
inc
leave
lods
dec
adc
and
fcmovne
aam
orb
jle
add
mov
dec
aam
das
mov
mov
xchg
loopne
mov
pop
je
lcall
test
mov
or
fisubrs
cmpsl
cmp
imul
push
in
inc
rclb
adc
std
mov
pushf
mov
les
sub
jl
jne
clc
dec
inc
popa
and
add
sbb
fstl
lret
data16
std
negb
inc
xor
push
insl
mov
push
mov
cmc
mov
ret
sbb
pop
stos
fcmovu
xor
inc
xchg
or
iret
xchg
mov
negb
pop
shl
xchg
cwtl
and
cwtl
loop
adc
dec
fldcw
fwait
lea
aam
movsl
jno
or
loop
rol
lods
gs
xchg
lret
or
std
sbb
jp
aas
stc
push
mov
pusha
xor
test
repnz
push
mov
mov
loop
mov
cli
repnz
imul
aad
sbb
jmp
aad
jg
fsubrl
inc
or
and
and
movsl
push
sbb
and
out
test
cmpsb
adc
scas
scas
xor
aam
dec
adc
mov
sub
sub
bound
pop
inc
mov
inc
or
add
sti
add
je
push
dec
imull
in
jg
cmpsb
cmp
cmpsb
xchg
fisttps
cmp
mov
push
sbb
fistpl
shl
push
sbb
push
pop
cmpsb
cmc
sub
ret
and
orb
dec
jb
in
mov
add
push
xchg
popf
pop
mov
fstpt
fcomps
jb
xor
test
cli
dec
imull
add
pop
lds
push
cmpsl
push
rorl
ficoml
ljmp
cltd
addr16
nop
jne
subb
adc
pop
push
rcr
out
jnp
decl
mov
pop
mov
inc
mov
adc
xchg
xor
add
test
incl
add
sbb
xor
movzwl
sbb
imul
and
mov
cmpl
mov
mov
mov
jmp
movl
cmpl
jb
pushl
push
push
call
sub
inc
and
movl
and
xor
and
and
sub
mov
jmp
adc
fstps
and
cmpsl
repz
mov
sub
sbb
add
push
mov
jns
aam
sub
mov
aad
jb
mov
sbb
dec
aad
or
mov
lret
arpl
loopne
and
mov
pop
dec
repnz
inc
stc
roll
xor
pop
jns
pusha
push
daa
subl
fs
fdiv
xlat
xchg
sub
and
jle
ljmp
ret
mov
xchg
jge
int3
flds
test
test
jne
inc
arpl
xor
cmp
push
jnp,pt
les
scas
sbb
push
fidivs
push
mov
xchg
and
in
cmpsl
pop
rcrl
mov
dec
hlt
mov
pushf
pop
jnp
mov
leave
or
push
enter
rol
sbb
mov
ds
adc
jns
je
insb
add
sub
leave
jge
dec
adc
movsl
mov
or
ja
pusha
out
into
mov
jae
xchg
loope
pop
stos
addl
ds
mov
cmp
gs
stc
out
dec
out
mov
push
into
adc
mov
sbb
xor
cmpsb
cwtl
sbb
pop
add
jge
mov
arpl
clc
lcall
ja
aas
mov
jbe
movsb
leave
add
push
inc
mov
outsb
mov
inc
rclb
dec
imul
mul
add
jl
cld
mov
sbb
pop
adc
mov
test
outsl
sbb
shl
aas
mov
xchg
iret
loope
jge
imul
xchg
je
and
mov
imul
faddl
add
lcall
inc
addb
pop
ret
loop
inc
ret
rolb
push
rol
jbe
mov
push
lea
jmp
sti
inc
or
lret
sahf
in
mov
out
or
mov
and
sar
push
push
dec
xor
cmp
cld
pop
push
cwtl
xor
xchg
jecxz
mov
adc
fisttpll
cmp
popf
ljmp
in
fs
add
cmp
mov
cltd
mov
daa
pop
inc
sti
push
xchg
sub
loopne
or
stc
inc
test
dec
sbb
or
cwtl
mov
pop
sub
mov
cmc
dec
jmp
jns
addr16
popa
into
into
pop
and
mov
shrb
stos
fnstcw
sub
add
xchg
inc
inc
daa
cmp
outsl
push
push
lret
lock
jge
aad
imul
in
movsb
fdivrs
jmp
cmp
cmp
push
scas
cmp
jno
jnp
ja
mov
cmpsl
jb
mov
lret
aas
xchg
fmul
iret
add
and
lods
and
pusha
dec
dec
xchg
cmpsb
das
in
sti
pop
and
adc
mov
xorl
imul
or
or
cli
mov
lock
or
inc
add
pop
or
mov
adc
jbe
test
scas
push
inc
jl
aas
pop
scas
inc
scas
mov
mov
push
repz
ret
cmpsl
movl
cmpl
movzwl
mov
mov
jmp
not
mov
cmpl
jbe
pushl
pushl
pushl
push
push
push
push
call
sub
movl
and
or
xor
or
mov
sbb
movl
movl
movl
orl
mov
imul
cmpl
movl
mov
mov
jmp
mov
movl
cmpl
ja
pushl
push
call
sub
incl
add
or
sub
mov
cmpl
not
movl
movl
mov
jmp
movl
cmpl
ja
push
pushl
call
negl
andl
and
movzbl
sbb
mov
subl
and
imul
and
imul
mov
sbbl
and
cmpl
movl
mov
not
jmp
movl
notl
cmpl
jg
push
pushl
push
pushl
push
pushl
push
push
pushl
pushl
call
inc
adc
and
movzwl
add
mov
addl
adcl
dec
subl
or
movl
mov
adcl
xor
or
mov
adcl
mov
xorl
lea
cmpl
mov
mov
mov
notl
jmp
movl
cmpl
jae
push
call
dec
orl
mov
add
sbb
mov
adc
and
mov
mov
mov
xor
movl
not
movl
subl
movl
xor
mov
cmpl
movl
notl
mov
jmp
movl
mov
cmpl
jb
push
push
call
movzwl
xor
mov
add
mov
mov
adc
inc
xor
sub
andl
xor
add
mov
addl
or
andl
add
or
mov
addl
or
add
add
or
xor
mov
cmpl
mov
mov
movl
jmp
movl
mov
cmpl
jne
pushl
push
push
call
sub
xor
add
mov
add
adc
andl
movl
cmpl
mov
movl
movl
mov
jmp
mov
cmpl
jge
push
push
push
call
and
add
adcl
and
sub
subl
movl
or
movl
movl
mov
add
xorl
mov
subl
sub
decl
mov
lea
or
adc
sub
mov
cmpl
movl
movl
mov
jmp
mov
mov
cmpl
je
call
sbbl
xorl
add
andl
or
movl
movl
xor
mov
movzwl
or
add
cmpl
movl
movl
jmp
mov
cmpl
jg
push
call
adc
sbb
movzwl
add
addl
orl
mov
and
imul
mov
addl
imul
xor
mov
div
or
sub
mov
cmpl
mov
mov
jmp
mov
movl
cmpl
jb
push
pushl
call
adc
dec
movzbl
sbb
mov
xor
movzwl
or
xor
add
add
and
movl
cmpl
mov
mov
mov
movl
jmp
not
cmpl
jne
push
push
call
and
mov
or
mov
mov
add
mov
sbb
adc
movl
xor
movl
or
mov
sub
mov
orl
xor
xorl
div
imul
add
cmpl
mov
movl
jmp
movl
movl
cmpl
jne
push
call
and
adc
sub
mov
sbb
mov
andl
add
mov
adcl
xor
or
xor
or
mov
subl
div
cmpl
mov
mov
movl
mov
jmp
movl
cmpl
jbe
push
push
pushl
call
neg
sbb
andl
mov
xor
movzbl
sub
movl
xor
adc
mov
movl
mov
add
mov
movl
xor
movl
cmpl
mov
mov
mov
movzwl
jmp
mov
mov
cmpl
ja
pushl
call
and
xorl
add
or
mov
mov
sbb
sbbl
mov
mov
sub
shr
sub
xor
mov
imul
mov
sbbl
and
xor
mov
sub
mov
movl
movl
sub
mov
xor
or
xor
add
xor
mov
or
sub
mov
adc
movl
sub
movl
movl
cmpl
notl
mov
jmp
mov
cmpl
jne
pushl
call
andl
add
movzwl
and
and
add
mov
mov
sub
and
movl
not
movl
movzbl
or
movl
cmpl
mov
movl
jmp
mov
mov
cmpl
jae
push
call
or
and
adc
adc
sbb
movl
mov
and
add
jmp
test
cmp
pop
cmp
mov
jmp
mov
mov
xchg
push
fistpll
cs
cmp
in
jno
test
sub
call
je
jne
dec
mov
adc
int
sbb
mov
jo
jnp
into
and
inc
cltd
stc
adc
sub
xor
jl
mov
loop
loop
sahf
fs
pop
or
sarb
daa
mov
loope
mov
xchg
stc
mov
in
mov
dec
aas
mov
xor
call
je
cld
dec
mov
push
adc
sub
jl
mov
cmp
push
mov
incb
xor
jbe
leave
push
iret
pop
shrb
ss
mov
addb
inc
pop
jmp
inc
pusha
ffreep
loope
and
icebp
enter
cli
arpl
lret
sub
or
mov
push
int3
loopne
pop
xlat
out
pop
add
dec
pop
aas
pop
leave
out
pop
orb
pushf
dec
fnstcw
jmp
fistpl
mov
rcr
inc
dec
mov
in
dec
clc
repz
mov
sub
cmpsb
insl
adc
lea
mov
popa
pop
loop
fwait
loopne
ljmp
cmp
in
subb
imul
xorb
scas
leave
mov
dec
mov
mov
stos
mov
shrb
and
je
xlat
nop
xchg
and
imul
mov
mov
xchg
popa
mov
mov
adc
or
cmp
or
pop
mov
test
adc
ds
jnp
fsubrp
repz
cmpl
lds
jb
lock
aad
dec
xlat
dec
sbb
addr16
mov
push
iret
fld
fidivrs
inc
aas
xchg
mov
icebp
cmpsb
cmpsl
mov
add
sub
jg
clc
fsubs
mov
test
scas
sbb
push
cmpsl
or
push
or
mov
in
inc
jnp
test
mov
push
mov
adc
sub
pop
dec
xchg
push
adc
xchg
shlb
cmp
insl
cli
out
ror
into
movsl
imul
addr16
nop
jmp
push
subb
repnz
adc
repz
fsubrl
dec
or
cmp
xlat
aad
xor
sub
in
xchg
popa
mov
mov
stos
pushf
lea
mov
fiaddl
xlat
inc
repz
or
fimull
jp
fsubrl
inc
dec
jle
and
gs
mov
mov
cld
fidivrl
mov
sbb
xchg
pop
ret
dec
out
rclb
or
mov
adc
cwtl
mov
xchg
aad
popa
pop
pop
cmp
pop
mov
push
into
xchg
mov
scas
cmpsl
pop
int
push
dec
jmp
enter
add
or
pop
or
sbb
sahf
int
ja
dec
lea
cwtl
insb
sub
sbbl
shl
adc
test
and
ret
and
mov
insl
cmpsb
cmp
shl
pop
subl
ja
pushf
sub
rorb
incl
add
addl
rorl
add
mov
imul
imul
mov
or
and
mov
subl
lea
addl
push
addl
call
cmpl
mov
mov
mov
movl
jmp
movl
notl
cmpl
jae
pushl
push
pushl
pushl
push
call
adc
xor
add
mov
mov
sub
and
sbb
mov
mov
add
imul
sbb
add
and
cmpl
mov
mov
movzwl
jmp
movl
mov
cmpl
jae
push
call
movzwl
add
adc
addl
and
or
sbb
sub
cmpl
movl
movl
movl
notl
jmp
mov
cmpl
je
push
pushl
call
subl
movzwl
xor
mov
mov
or
xor
add
orl
xor
addl
mov
div
xor
xor
add
adc
mov
sbbl
movl
movl
cmpl
movl
mov
jmp
movzwl
cmpl
jne
push
pushl
push
push
pushl
call
mov
sbb
and
sbb
mov
or
mov
mov
sub
and
adc
movl
movl
adc
movl
cmpl
not
movl
jmp
movl
notl
cmpl
jge
push
push
push
pushl
call
xor
mov
or
mov
mov
and
and
and
mov
xor
movzwl
and
mov
sub
movl
xorl
movl
sbb
movl
jmp
movsl
mov
push
and
stos
jne
adc
lods
sbb
sbb
push
and
sub
in
mov
jecxz
dec
mov
popa
mov
mov
hlt
or
je
ljmp
sahf
repz
stc
scas
cmc
push
lds
out
mov
out
iret
pushf
jl
in
push
or
dec
xchg
ret
pop
clc
push
mov
aas
int
push
jne
out
push
std
test
jae
dec
jbe
jl
shl
adc
mov
push
dec
mov
dec
repnz
sub
mov
pop
add
repnz
inc
sbb
insl
test
sub
es
fsubl
sub
jg
dec
xor
mov
inc
pop
pop
sub
ror
cmp
xor
scas
pop
stc
aam
xchg
pop
ret
rolb
sbb
rorl
inc
outsl
push
test
xor
popa
dec
adc
pop
cwtl
sbb
mov
jl
inc
push
pusha
lock
mov
pop
ret
gs
out
rolb
stc
xor
test
stos
inc
mov
lds
out
int
aam
jge
dec
inc
xchg
subb
sub
lds
inc
inc
or
and
out
add
mov
pop
cltd
repnz
stos
out
lock
imul
rcrb
divb
js
addb
mov
pop
mov
or
in
lds
xlat
xchg
dec
ds
mov
pop
sub
fcoml
cmc
mov
insb
scas
loopne
mov
call
dec
mov
aas
in
sbb
data16
imul
addl
pop
sti
addb
fwait
lcall
aad
push
lods
scas
lods
pop
rclb
xchg
lods
sbb
jmp
les
pop
xchg
or
jg
or
dec
inc
shrl
ljmp
in
sub
mov
jne
lahf
push
lds
dec
loopne
and
push
xchg
andb
movsb
jcxz
dec
pushf
stc
loopne
mov
or
pushl
shlb
movsl
shll
pop
arpl
aam
xchg
and
sbb
ja
sub
xchg
pop
lret
movsb
jmp
sti
loopne
and
lret
add
aas
mov
xor
out
cmp
xor
adc
gs
scas
xlat
push
ret
cmpsl
orb
pop
fdivrl
sbb
test
loope
xchg
and
leave
jmp
sbb
stos
out
cmp
iret
push
adc
iret
sub
cmp
shlb
into
add
jbe
lea
scas
rcrb
shr
jp
mov
mov
xor
jnp
cmpsb
movsl
xchg
call
mov
jp
inc
push
inc
or
mov
mov
push
push
mov
aam
sub
sub
hlt
jbe
adc
xchg
push
movsb
sbb
shll
jg
rorl
cmp
or
jle
sbb
not
stc
mov
pop
or
cmpsl
enter
test
xchg
movsb
clc
mov
jmp
dec
xchg
adc
mov
pop
sub
push
test
mov
push
lcall
add
movl
movl
xor
movl
xorl
mov
cmpl
movzwl
mov
jmp
movl
movl
cmpl
jne
push
push
call
subl
inc
inc
and
and
sbb
and
mov
adc
mov
mov
sub
and
add
sub
cmpl
mov
mov
jmp
movl
cmpl
je
pushl
push
pushl
pushl
call
mov
or
xor
add
mov
sub
or
mov
or
add
sbb
sub
or
jmp
mov
lds
stos
xorb
testb
pop
push
sbb
push
cwtl
xchg
push
out
aam
hlt
add
idivb
jo
sbb
dec
out
popa
jg
adc
ja
push
mov
mov
aas
pop
les
movsl
movsb
mov
sub
in
sbb
ror
bound
shrb
cmp
loope
push
bnd
inc
aad
mov
mov
cmpl
mov
inc
cs
xorb
cs
push
stc
movsb
cmpb
test
adc
xchg
xchg
push
rol
aas
repz
xchg
mov
and
mov
sub
sub
sbbb
and
ljmp
sbb
cwtl
repnz
adc
add
data16
int
pop
xchg
inc
enter
repz
or
clc
setb
repnz
and
mov
mov
orb
pop
add
in
dec
das
lret
call
fwait
enter
and
push
inc
outsl
or
xchg
jb
push
inc
vmovlps
std
dec
push
ljmp
pop
inc
mov
xor
jnp
rolb
test
push
insb
push
cmp
rol
js
fnstsw
idiv
getsec
xchg
jmp
adc
adc
std
into
mov
mov
and
lea
scas
and
mov
sbb
iret
xor
fiadds
loopne
push
mov
test
jp
idivb
mov
stc
dec
push
mov
rorl
fsts
and
push
in
or
imul
mov
cltd
lock
in
and
in
push
outsl
and
pop
dec
add
mov
test
int3
sub
mov
mov
in
push
pop
ficompl
dec
pop
sarb
add
loope
movsb
das
or
nop
mov
push
xchg
push
in
cmp
test
popa
cwtl
ss
jae
sub
fs
adc
mov
mov
pop
aam
test
std
sbb
mov
pop
scas
lds
aaa
jge
fwait
push
sub
pop
out
and
sub
dec
pop
std
das
enter
or
mov
jo
out
adc
psubusb
xor
sbb
mov
sub
insb
enter
cmp
jns
sbb
sbb
imul
dec
sbb
push
mov
test
add
xor
and
fadds
or
lds
xor
cmp
jp
stos
and
adc
push
dec
mov
dec
sbb
fnstsw
bound
push
pop
cmp
mov
push
xor
jb
jmp
cs
inc
xchg
jns
inc
mov
enter
jle
leave
sub
xchg
mov
cmp
aas
daa
inc
cwtl
push
inc
repnz
jbe
cmp
jle
or
cmp
lock
mov
es
or
push
cmc
and
mov
or
and
add
sub
mov
sbb
imul
cmpl
mov
movl
jmp
mov
movl
cmpl
jle
push
push
call
add
xor
adc
xor
mov
or
mov
and
negl
dec
movzwl
sbb
mov
mov
xor
add
xor
add
sub
xor
lea
cmpl
movl
mov
mov
jmp
movl
cmpl
ja
pushl
pushl
pushl
call
neg
xor
or
xor
add
sub
or
sub
mov
sbb
mov
add
subl
cmpl
mov
movzbl
movl
mov
jmp
movl
cmpl
jle
pushl
call
xor
add
xor
mov
sbb
movzwl
or
mov
decl
subl
mov
mov
mov
add
mov
neg
xor
cmpl
movl
movl
movl
mov
jmp
movl
cmpl
jae
pushl
push
pushl
push
pushl
call
sbb
adc
and
sbb
add
mov
lea
and
mov
sub
add
mov
movl
movl
movl
movl
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
jmp
test
fdivr
and
lcall
lret
rorl
sbb
adc
sbb
push
mov
mov
sbb
insb
push
sub
stos
inc
mov
fdivrl
sbb
jno
mov
mov
or
mov
data16
adc
inc
loop
and
cld
add
lcall
jb
or
cmc
sti
cmpsb
pop
mov
jo
adc
and
mov
adc
aad
cmp
mov
jmp
cwtl
mov
cwtl
aam
lret
test
xchg
out
jl
iret
push
dec
fdivl
ret
cmpsb
or
jo
xchg
insb
sbb
xchg
mov
rcrb
in
inc
out
lds
jne
pop
mov
das
bound
pop
xor
fs
popa
fwait
push
mov
inc
repnz
mov
push
es
aaa
jg
lods
pop
ja
pusha
push
inc
mov
daa
test
sub
mov
or
fs
xchg
std
push
xchg
jge
push
enter
subl
and
xor
mov
adc
divl
lock
mov
inc
outsb
mov
sarl
sbb
aaa
daa
data16
dec
loope
mov
xor
lods
out
icebp
iret
int3
outsl
push
mov
and
adc
out
cmpsl
jg
mov
pusha
lods
adc
and
mov
add
adc
mov
jmp
fwait
xchg
int
cmp
lea
inc
jb
mov
stos
das
adc
push
cwtl
call
xchg
sub
popf
repnz
cs
cmc
sub
xchg
call
testb
rep
or
int
jle
adc
mov
nop
mov
cmp
mov
pop
cmpsl
enter
cmp
dec
xor
add
pop
mov
push
ja
pusha
push
mov
out
add
mov
pop
sbb
cmp
es
xor
mov
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
mov
call
mov
or
mov
or
push
push
push
push
call
mov
cmp
jne
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
mov
mov
call
or
mov
or
push
push
push
push
call
mov
jmp
jmp
lea
mov
mov
movl
mov
xor
shr
mov
xor
shl
or
mov
mov
mov
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
mov
call
mov
or
mov
or
push
push
push
push
call
mov
cmp
je
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
imul
add
mov
mov
mov
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
mov
mov
call
or
mov
or
push
push
push
push
call
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
xor
div
mov
and
add
mov
lea
xor
add
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
xor
div
add
mov
and
xor
add
mov
mov
sub
mov
or
mov
and
mov
xor
mov
mov
sub
mov
imul
xor
xor
mov
mov
add
add
mov
movl
movl
movl
movl
movl
movl
mov
xor
mov
imul
mov
lea
mov
and
and
xor
push
pop
div
imul
mov
and
mov
or
add
imul
mov
xor
xor
mov
mov
add
add
mov
movl
movl
movl
movl
movl
movl
mov
xor
push
pop
div
mov
or
mov
xor
div
imul
mov
lea
mov
and
and
sub
xor
mov
xor
mov
and
and
or
mov
mov
add
lea
mov
andl
jmp
mov
inc
mov
mov
mov
cmp
je
mov
mov
mov
add
mov
mov
mov
mov
mov
movl
movl
movl
movl
lea
mov
mov
movzwl
xor
movzwl
sar
mov
movzwl
xor
movzwl
shl
or
movzwl
mov
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movzbl
push
lea
push
call
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
add
mov
mov
cmp
je
mov
mov
movzwl
xor
movzwl
sar
mov
mov
movzwl
xor
movzwl
shl
or
movzwl
mov
mov
mov
movzwl
xor
movzwl
sar
mov
mov
movzwl
xor
movzwl
shl
or
mov
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
or
je
lea
mov
mov
xor
mov
call
mov
mov
mov
xor
mov
call
or
or
xor
xor
mov
mov
mov
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movsbl
cmp
je
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
movsbl
cmp
je
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movsbl
cmp
jne
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
add
mov
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
cmpl
je
mov
mov
movzwl
mov
mov
mov
jmp
jmp
cmpl
jne
xor
jmp
mov
add
mov
movl
cmpl
je
cmpl
je
mov
shl
mov
movl
sub
mov
movl
mov
cmp
je
mov
mov
mov
mov
mov
mov
mov
inc
mov
jmp
movl
push
jmp
mov
mov
ret
cmpl
movl
movl
movl
movl
jmp
mov
cmpl
jbe
push
call
incl
subl
incl
adc
orl
not
push
push
sbb
mov
or
jne
mov
mov
xor
div
xorl
mov
mov
div
mov
mov
jmp
mov
sbb
mov
cmpl
mov
movl
mov
jmp
movl
movl
cmpl
jle
push
call
xorl
sub
sbbl
dec
not
mov
mov
shr
rcr
shr
rcr
or
jne
div
mov
mull
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
xor
mov
pop
pop
ret
orl
subl
movl
cmpl
movl
je
xor
add
mov
mov
mov
pop
pop
pop
leave
ret
cmp
movl
jae
movl
cmp
movl
jae
orl
shld
movl
shl
ret
inc
mov
subl
xor
and
shl
ret
xor
xor
ret
add
cmp
cmp
sub
jno
ja
int3
fsubrl
jo
popa
insb
push
lods
xor
insb
popa
outsb
add
add
addr16
popa
je
jb
popa
je
jb
popa
je
jb
popa
je
jb
popa
je
jb
popa
je
jb
popa
je
jb
popa
je
jb
popa
je
jb
popa
je
add
insb
insb
push
gs
insb
push
gs
insb
push
gs
insb
push
gs
insb
push
gs
insb
push
gs
insb
add
add
outsl
add
add
jne
je
xor
xor
add
add
push
add
add
push
add
add
push
add
add
push
add
add
push
add
add
push
add
add
push
add
add
push
add
add
push
add
add
add
add
cmp
inc
add
gs
arpl
push
outsl
inc
jne
jae
jb
les
inc
add
daa
inc
add
inc
add
inc
push
mov
movsb
popf
movsb
jno
xchg
movsb
or
movsb
sbb
movsb
roll
adc
movsb
popf
movsb
jno
xchg
movsb
or
movsb
xor
movsb
mov
in
xchg
movsb
adc
movsb
popf
movsb
sbb
movsb
fwait
movsb
xchg
sub
cs
push
adc
movsb
fwait
movsb
add
movsb
sbb
movsb
shll
shrl
or
push
pop
outsb
adc
movsb
fwait
movsb
add
movsb
xor
movsb
andl
imull
dec
adc
movsb
fwait
movsb
jae
popf
movsb
sbb
movsb
fwait
movsb
andl
testl
movsb
aaa
movsb
fwait
movsb
jae
popf
movsb
pop
movsb
xchg
movsb
push
movsb
mov
inc
rorl
imulb
xchg
movsb
aaa
movsb
fwait
movsb
jae
popf
movsb
cmp
movsb
fwait
movsb
xchg
mov
mov
out
adc
xchg
movsb
aaa
movsb
fwait
movsb
jae
popf
movsb
cmp
movsb
fwait
movsb
andl
imul
push
into
adc
xchg
movsb
cmp
movsb
popf
movsb
jnp
xchg
movsb
fwait
movsb
xchg
movsb
shl
shr
lock
test
cs
push
push
adc
xchg
movsb
adc
movsb
cmp
movsb
fwait
movsb
lea
or
push
push
outsb
adc
xchg
movsb
add
lock
cld
and
inc
add
inc
add
es
add
inc
add
jle
add
es
add
add
and
inc
add
inc
add
add
push
movsb
scas
or
movsb
add
inc
add
es
add
es
add
es
add
es
add
and
pop
es
add
inc
add
lcall
push
es
add
inc
add
loopne
jbe
pop
cmpsb
add
inc
add
rcl
pop
fistpll
add
outsl
arpl
pop
xor
cmpsl
mov
xchg
test
and
push
movsb
stos
fiadds
movsb
cmpsb
fiaddl
movsb
mov
fiaddl
movsb
mov
fiaddl
movsb
mov
push
movsb
mov
push
movsb
mov
push
movsb
out
fiaddl
movsb
decl
adc
in
inc
add
sub
pop
loop
js
lcall
and
add
loopne
inc
add
inc
sbb
hlt
clc
sarb
sub
jle
add
add
inc
add
jmp
push
movsb
jg
inc
movsb
push
movsb
inc
movsb
std
movsb
jmp
movsb
push
movsb
dec
movsb
std
movsb
jmp
movsb
push
movsb
jg
std
movsb
jmp
movsb
dec
movsb
inc
movsb
jne
pop
movsb
jnp
dec
movsb
fwait
movsb
xor
xor
xor
xor
inc
xor
xor
xor
xor
xor
inc
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
push
shlb
rcll
into
xchg
dec
xor
sbb
push
je,pn
mov
imul
leave
daa
dec
out
pushf
mov
dec
xchg
lock
inc
or
js
popa
pop
jecxz
movb
cs
aas
inc
leave
testb
jl
mov
jb
pop
sub
and
inc
add
fbld
adc
popa
arpl
popa
outsl
gs
jae
outsl
insb
gs
in
jg
ja
jp
inc
push
movsl
push
dec
gs
popa
push
jne
jae
imul
inc
jae
imul
jb
gs
lds
xor
fs
push
gs
popa
insl
imul
add
add
push
mov
jb
jno
or
lods
repnz
je
je
js
cmc
outsl
insl
popa
imul
popa
jb
push
imul
mov
jns
outsl
addr16
add
sub
icebp
gs
jae
popa
je
insl
add
in
mov
insl
imul
gs
add
jne
popa
or
popa
push
loope
stos
je
push
popa
jb
jae
imul
loope
aad
jb
imul
je
adc
outsl
gs
imul
outsb
shrl
ja
outsl
popa
outsb
gs
imul
imul
inc
jb
sbb
jo
addr16
jo
fs
xchg
in
jno
iret
jbe
or
cwtl
int
std
pop
fsubrs
dec
xor
stc
inc
adc
dec
sbb
mov
jns
dec
sbb
xchg
cmp
in
jno
iret
jbe
or
int
std
pop
jns
pop
xor
stc
inc
icebp
das
int
mov
mov
jns
xchg
lret
rolb
jno
jbe
or
int
std
pop
fdivs
int
stc
inc
icebp
test
mov
int
mov
addl
rolb
jno
jbe
or
cwtl
int
std
pop
ret
cmp
xchg
stc
inc
adc
test
ret
xchg
aad
lds
iret
jbe
or
int
std
pop
pop
insb
cmp
stc
inc
icebp
push
int
mov
mov
jns
test
lcall
jbe
xorl
sbb
and
int
adc
mov
add
add
lods
clc
icebp
jo
jge
aad
clc
icebp
jo
adc
incl
jo
jo
jo
xor
cwtl
add
add
xchg
or
addb
jecxz
hlt
scas
rolb
sub
iret
pop
iret
push
out
int
adc
out
sub
or
rolb
subb
sub
cmc
sub
in
aad
add
mov
fcmovnbe
out
pushf
xchg
test
fs
mov
iret
int3
call
jno
imul
int
std
xor
movsl
das
pop
push
or
sub
xchg
iret
les
addb
add
addl
adc
inc
jns
fldlg2
es
or
add
mov
add
addl
jns
insl
and
push
add
test
push
add
push
mov
test
lret
addb
in
outsl
rcl
jge
outsl
xchg
addb
sahf
mov
jno
popa
mov
addb
push
jge
push
xchg
addb
jge
push
xchg
addb
rorb
jo
std
xor
movsl
inc
xor
or
addl
addl
int
popf
aam
shlb
or
xchg
aam
int
icebp
int
xchg
or
or
or
pushf
stos
sahf
popa
mov
mov
mov
roll
int
or
adc
int
mov
lods
xchg
lret
rorb
in
push
int
or
daa
addl
or
mov
gs
addl
xchg
or
addb
xor
int
mov
int
xor
xor
lea
das
add
addb
int
mov
cli
test
int
jge
xacquire
insl
insb
shrb
outsl
lods
xchg
inc
addl
lea
cli
test
mov
and
xchg
mov
dec
ja
pop
rcll
int
fidivl
jecxz
xchg
or
in
inc
add
test
jecxz
jecxz
movsl
pop
cmpsb
lods
addb
lods
mov
mov
addb
shll
test
add
leave
int
or
cmpb
movsl
jecxz
mov
in
in
addb
movsl
int
mov
rcll
leave
xor
pop
jbe
jnp
int
xor
movsl
int
cmp
inc
inc
add
jle
clc
or
std
das
pop
adc
cmp
or
add
mov
xor
les
int
sub
stc
xor
sbb
inc
int
inc
int
std
xor
xor
pusha
lret
arpl
test
xor
in
popf
adc
addb
shl
mov
and
mov
jbe
shrl
lods
or
stc
test
int
jne
pop
insl
shl
test
in
xchg
pop
insl
xchg
int
jge
les
xor
les
adc
addb
mov
shll
xor
ja
lret
je
pop
shl
mov
xchg
xor
int
das
mov
push
das
rcll
pop
mov
ja
int
pop
orb
jmp
mov
insl
iret
les
test
mov
xor
mov
insl
add
or
cwtl
int
mov
int
int
jns
mov
sub
add
cwtl
int
jns
test
add
mov
jns
xchg
cmp
add
add
inc
addl
leave
jbe
inc
and
or
int
stc
int
stc
pop
cwtl
lcall
ljmp
cmp
sarl
jbe
int
stc
int
stc
cmp
sarl
ljmp
int
stc
int
stc
cmp
sarl
ljmp
int
stc
int
stc
cmp
sarl
ljmp
leave
jbe
dec
and
mov
and
sarb
jbe
or
sarb
ror
jbe
jo
addb
addb
stc
cmp
cmp
sarl
push
rorb
jbe
int
stc
int
stc
cmp
cmp
sarl
push
rorb
jbe
leave
jbe
arpl
lods
pop
addb
addb
add
iret
push
xchg
incl
add
add
lea
xchg
fcmove
jbe
dec
insb
addb
stc
cmp
sarl
cmp
shl
sub
or
int
stc
int
stc
add
cmc
cmpb
sarl
repnz
or
mov
sbb
addb
push
or
int
dec
or
int
mov
cmc
or
rolb
mov
in
or
push
addl
lea
or
pop
addl
stc
int
stc
cmp
cltd
shr
xchg
shr
sub
inc
jge
add
int
mov
add
mov
jbe
int
xor
addb
int
adc
adc
add
int
mov
mov
int
xchg
rolb
bound
jno
cmp
push
push
add
add
cmpsl
aad
leave
push
pop
add
add
adc
add
mov
push
insb
add
add
iret
outsb
add
add
insl
leave
push
sub
add
push
cmpsl
aad
leave
push
xor
add
push
xor
cmp
add
mov
push
inc
add
add
iret
addr16
add
add
jbe
int
adc
mov
int
mov
add
addb
mov
leave
jbe
mov
cmp
leave
jbe
xlat
sbb
push
les
add
push
cmpsl
aad
leave
push
nop
add
add
xlat
inc
leave
push
aam
add
cmp
jge
push
faddl
add
mov
shll
add
xlat
sbb
push
pushf
add
add
cmpsl
aad
leave
push
movsb
add
add
xlat
inc
leave
push
lods
add
add
dec
push
jge
push
mov
add
mov
shll
add
ret
sbb
jo
jbe
add
int
stc
int
stc
cmp
cmp
shl
sub
mov
lea
testb
int
mov
lds
psrlq
sub
mov
lea
insl
inc
shrl
or
addl
int
mov
rclb
addl
add
addb
jo
cwtl
xor
lea
addb
int
adc
mov
insl
iret
pop
pushf
add
add
jo
jbe
int
inc
addl
adc
pop
adc
mov
insl
iret
pop
les
add
mov
jo
jbe
int
inc
addl
mov
pop
adc
mov
insl
iret
pop
push
add
add
jo
jbe
int
inc
addl
pop
orb
xor
push
cmp
sahf
clc
add
shrb
pop
shlb
xchg
xor
int
pop
add
mov
adc
int
mov
pop
adc
mov
insl
iret
xchg
add
jo
jbe
int
cmp
push
add
in
test
or
add
pop
sub
sub
lea
ljmp
sarl
push
ror
pop
cmc
incl
add
jo
jbe
int
stc
int
mov
lds
lock
push
ror
pop
xchg
incl
add
jo
xchg
or
xchg
stc
cmp
jmp
shr
sub
inc
jge
mov
jbe
addl
cmp
sarl
repnz
xchg
or
int
cmp
int
mov
lea
sarl
push
roll
xchg
int
mov
lea
shl
sub
mov
lea
insl
inc
shrl
pop
push
incl
add
ljmp
lea
jge
xor
mov
jbe
jo
stc
jl
orb
jne
sbb
jbe
int
mov
xchg
mov
or
cltd
shr
xchg
shr
sub
push
mov
jbe
int
stc
cmp
cmp
shl
sub
mov
lea
shrl
add
int
stc
int
stc
cmp
cmp
shl
sub
mov
std
inc
shrl
add
int
stc
int
stc
cmp
cmp
sarl
push
shr
adc
lea
or
cltd
shr
xchg
shr
sub
xchg
int
std
inc
roll
or
int
jne
jbe
ret
dec
and
leave
jbe
inc
and
int
inc
cmp
cmp
sarl
push
rorl
jbe
int
inc
int
inc
cmp
cmp
sarl
push
rorl
jbe
leave
jbe
dec
and
ret
xor
lea
lds
psrlq
sub
mov
lea
push
xchg
addb
cmp
jns
or
lods
sub
jmp
push
jge
jbe
xor
cmp
clc
add
jbe
int
sbb
lds
psrlq
sub
mov
lea
int
sbb
lds
psrlq
push
rorl
jbe
int
cmp
lds
psrlq
push
ror
lea
jbe
int
inc
int
inc
cmp
cmp
shl
sub
mov
lea
pusha
xchg
addb
or
jbe
or
xchg
or
pop
inc
and
leave
jbe
cmp
xchg
and
int
xchg
int
xchg
cmp
cmp
sarl
push
rorl
jbe
int
jmp
addl
add
and
push
xchg
add
add
and
insl
int
icebp
int
icebp
cmp
cmp
sarl
push
ror
lea
rcl
int
insl
lret
or
int
int
icebp
int
icebp
cmp
cmp
shl
sub
mov
lea
rcl
int
adc
or
cltd
shr
xchg
shr
sub
xchg
int
insl
das
pop
dec
mov
push
jo
add
int
jo
add
cmp
cmp
ljmp
pop
lea
test
test
xchg
icebp
cmp
cltd
shr
sub
jmp
push
adc
xchg
jge
rcll
int
insl
or
icebp
int
icebp
cmp
cmp
sarl
push
ror
lea
rcl
int
insl
lret
or
int
int
icebp
int
icebp
cmp
sarl
repnz
int
jge
rcl
int
pop
int
pop
cmp
cltd
shr
xchg
shr
sub
xchg
int
insl
das
pop
dec
mov
push
xchg
add
add
pop
xchg
add
add
lds
cltd
sarl
push
rolb
test
test
test
xchg
icebp
cmp
cltd
shr
sub
jmp
push
adc
xchg
jge
rcll
int
insl
or
xor
sub
mov
lea
xchg
pop
cmp
cltd
shr
xchg
shr
sub
das
rcl
xchg
or
int
jge
lea
incl
add
jbe
int
pop
cmp
shl
sub
xchg
push
ror
lea
lea
xchg
push
ror
lea
sub
or
int
popf
int
popf
cmp
shl
sub
xchg
push
ror
lea
or
jmp
cmp
adc
xchg
in
sbb
jbe
int
popf
cmp
cmp
sarl
push
roll
push
int
popf
int
popf
cmp
sarl
repnz
int
lods
xor
jbe
int
popf
cmp
cmp
mov
xchg
push
das
rcl
inc
shrl
pop
adc
add
int
stc
int
stc
int
std
or
int
mov
lea
or
jmp
cmp
addb
jno
lea
xchg
cmp
cltd
shr
xchg
shr
sub
jno
stc
int
stc
add
xor
shr
xchg
shr
sub
jno
jo
int
stc
int
stc
cmp
cltd
shr
xchg
shr
sub
or
inc
jge
add
int
stc
in
int
or
push
cmpsb
lods
int
lods
shr
xchg
cmp
lods
sub
int
jne
dec
orl
mov
lea
or
cltd
shr
sub
jmp
push
adc
xchg
mov
jge
jbe
cmp
add
std
add
std
shr
sub
leave
int
std
int
std
shr
xchg
shr
sub
cmp
inc
rcl
mov
lea
add
addl
shr
sub
jno
stc
int
stc
cmp
cltd
shr
xchg
shr
sub
jno
jne
jo
int
or
int
xor
jbe
cmp
add
test
xor
jbe
int
mov
jbe
int
mov
jns
aad
lods
sub
repz
push
ror
xchg
jne
test
jbe
add
test
xlat
int
std
cmp
add
test
xor
jbe
int
mov
jbe
int
mov
jns
aad
lods
sub
repz
push
ror
xchg
jne
test
jbe
add
test
xlat
int
jne
jbe
int
mov
lea
shl
sub
mov
stc
or
leave
jbe
imul
imul
gs
into
and
addb
sarl
lds
jbe
rol
lods
xchg
or
int
cmp
lods
sub
lods
lret
int3
das
imul
lret
inc
rcl
jle
jbe
int
mov
jbe
int
mov
jns
or
lods
sub
jmp
push
jge
jbe
cmp
lods
sub
lods
cmp
xchg
jbe
add
std
add
std
shr
sub
lock
and
jbe
in
and
jbe
int
stc
cmp
cmp
sarl
push
ror
stc
int
stc
cmp
cltd
shr
xchg
shr
sub
inc
jge
add
int
or
out
leave
jbe
mov
xchg
and
dec
mov
lods
imul
and
xor
jbe
int
lods
int
lods
cmp
jmp
cmp
adc
lea
or
jmp
cmp
addb
jno
lea
xchg
cmp
cltd
shr
xchg
shr
sub
jno
lea
or
cltd
shr
xchg
shr
sub
jno
jo
or
int
mov
lea
or
jmp
cmp
addb
jno
lea
or
cltd
shr
xchg
shr
sub
jno
lea
cmp
shr
xchg
shr
sub
jno
jo
int
mov
jbe
int
mov
or
jns
jmp
shrl
jbe
inc
jge
add
int
mov
xchg
mov
or
cltd
shr
xchg
shr
sub
inc
lea
addb
and
add
mov
lea
add
lea
jmp
add
scas
or
aaa
sbb
add
addb
add
add
add
jno
cmp
add
add
lods
jno
lea
lea
shll
jno
mov
or
int
mov
lea
add
addl
shr
sub
jno
lea
or
cltd
shr
xchg
shr
sub
jno
add
int
rcl
insl
xchg
cmp
inc
leave
int
mov
lea
addb
cmp
cltd
shr
xchg
shr
sub
jno
lea
or
cltd
shr
xchg
shr
sub
jno
jne
jo
int
lods
or
int
cmp
cmp
or
cltd
shr
xchg
shr
sub
jno
lea
or
cltd
shr
xchg
shr
sub
jno
lods
add
int
std
or
int
jne
out
or
leave
jbe
inc
and
int
push
cmp
or
lods
sub
jmp
push
rorl
jbe
int
push
int
push
cmp
or
lods
sub
jmp
push
rorl
jbe
leave
jbe
dec
and
ret
xor
lea
jns
or
jmp
shrl
lea
push
xchg
addb
xchg
int
inc
cmp
cmp
sarl
push
jge
jbe
xor
cmp
clc
add
jbe
int
lods
int
lods
cmp
or
jmp
shrl
lea
int
lods
int
lods
cmp
or
lods
sub
jmp
push
rorl
jbe
int
xchg
int
xchg
cmp
or
lods
sub
jmp
push
ror
lea
jbe
int
push
int
push
cmp
or
jmp
shrl
lea
pusha
xchg
addb
or
jbe
or
cmp
inc
and
leave
jbe
cmp
xchg
and
int
cmp
jns
or
lods
sub
jmp
push
rorl
jbe
int
jmp
addl
add
and
push
jl
add
mull
xchg
int
icebp
int
icebp
cmp
or
lods
sub
jmp
push
ror
lea
rcl
int
pop
lret
or
int
int
icebp
int
icebp
cmp
jns
jmp
shrl
lea
rcl
int
gs
cmp
cmp
shl
sub
repz
push
adc
das
pop
dec
mov
push
mov
add
int
mov
add
cmp
aad
lods
sub
repz
push
rolb
loope
jge
loope
insl
lret
int
icebp
int
icebp
cmp
cmp
shl
xchg
shl
sub
int
jge
rcll
int
pop
or
icebp
int
icebp
cmp
or
lods
sub
jmp
push
ror
lea
rcl
int
pop
lret
or
int
int
icebp
int
icebp
cmp
lods
sub
or
jmp
push
ror
lea
rcl
int
insl
int
insl
cmp
cmp
shl
sub
repz
push
adc
das
pop
dec
mov
push
jl
add
int
jl
add
cmp
aad
lods
sub
repz
push
rolb
loope
jge
loope
insl
lret
int
icebp
int
icebp
cmp
cmp
shl
xchg
shl
sub
int
jge
rcll
int
pop
or
and
or
jns
jmp
shrl
lea
xchg
insl
cmp
cmp
shl
sub
repz
push
adc
rcl
xchg
or
int
jge
lea
incl
add
jbe
int
insl
cmp
jmp
cmp
lods
sub
int
or
lea
sub
int
cmp
xchg
push
rorl
jbe
int
popf
int
popf
cmp
jmp
cmp
lods
sub
int
popf
int
popf
cmp
shl
sub
aad
repz
push
adc
xchg
in
sbb
jbe
int
popf
cmp
or
lods
sub
jmp
push
roll
inc
int
popf
int
popf
cmp
lods
sub
or
jmp
push
ror
lea
popf
int
popf
cmp
aad
repz
shrl
xchg
inc
das
rcl
inc
shrl
pop
adc
add
int
mov
dec
iret
jbe
add
mov
jbe
int
xchg
addl
icebp
addl
jne
test
addb
stc
int
stc
cmp
cmp
shl
sub
mov
lea
rcl
push
int
mov
lea
add
addl
shr
sub
jno
stc
int
stc
cmp
cltd
shr
xchg
shr
sub
jno
jne
jo
stos
test
lret
rorb
add
and
int
int
sub
pop
subb
dec
addl
addb
das
add
int
or
das
add
add
int3
addb
addb
add
int
and
mov
or
xor
shrb
mov
mov
mov
das
add
iret
jl
pop
or
add
or
add
cmc
subb
xchg
das
mov
mov
mov
in
push
push
aam
int
add
stc
subb
xchg
mov
sahf
dec
xchg
aam
iret
ficoms
out
int
std
int
push
add
xchg
cmpsb
mov
and
das
mov
sahf
dec
add
add
std
mov
sbb
mov
mov
add
add
mov
pop
out
subb
jo
das
mov
adc
mov
pop
xchg
adc
or
arpl
insl
insb
in
xchg
cmp
lret
lds
sub
jbe
add
xor
fstpl
add
inc
pop
pushf
test
insl
insb
in
fmul
insb
faddl
and
jo
int
adc
fcompl
lea
std
inc
clc
jnp
or
std
or
fsub
inc
pushf
adc
xchg
mov
int
iret
push
ror
push
add
ds
mov
out
inc
stc
fdivs
int
dec
int
in
popf
inc
cld
ja
int
in
mov
out
or
adc
not
dec
int
stc
dec
or
sbbb
cmp
test
lret
rorb
add
push
pop
cwtl
pop
dec
and
leave
jbe
inc
and
int
std
lcall
psrlq
xchg
stos
cmp
shl
sub
or
int
std
int
std
int
std
int
std
int
std
int
std
int
std
int
std
int
std
leave
jbe
fadd
loope
int
std
int
std
cmp
cmp
shl
sub
jmp
push
or
cmpsb
dec
int
sub
push
das
add
int
std
int
std
cmp
cmp
shr
xchg
shl
sub
inc
adc
add
int
add
std
int
std
cmp
xchg
shl
sub
inc
adc
add
xchg
int
cmp
shl
xchg
shl
sub
or
inc
icebp
aam
int
std
int
std
cmp
cmp
ljmp
int
adc
adc
test
xor
jbe
int
std
cmp
cmp
ljmp
int
adc
adc
je
xor
add
int
std
int
std
int
std
int
std
cmp
cmp
in
xchg
push
popf
int
adc
adc
ror
jl
xchg
int
std
int
std
cmp
cmp
shr
xchg
shr
sub
int
std
or
lea
cltd
cmp
shl
sub
repz
push
jecxz
lea
xchg
int
std
int
std
cmp
cmp
shr
xchg
shr
sub
xchg
jbe
popa
and
or
in
int
dec
int
adc
xor
jbe
add
in
int
adc
dec
leave
jbe
popl
dec
pop
xchg
xchg
std
cmp
cmp
shr
xchg
shr
sub
or
inc
jge
pop
int
stc
int
stc
cmp
lock
sub
mov
lea
fnstcw
psrlq
sub
int
adc
xchg
push
jecxz
rcl
bound
jo
int
std
int
std
cmp
lock
push
roll
mov
and
jbe
int
popf
cmp
cmp
mov
push
jge
fldt
pop
xchg
add
add
jbe
int
std
cmp
lock
push
roll
mov
and
jbe
int
stc
cmp
lock
push
roll
addl
leave
jbe
fdivr
sbb
int
std
int
std
cmp
xchg
shrl
sbb
std
int
std
cmp
lock
push
rorl
jbe
int
std
int
std
cmp
lock
push
rorl
jbe
int
std
int
std
cmp
cmp
shrl
push
jge
jbe
inc
jge
xchg
test
jbe
int
sbb
jbe
int
std
cmp
lock
sub
mov
in
inc
rcl
push
int
std
int
std
cmp
cmp
repnz
mov
in
shr
sub
aam
int
in
int
dec
int
adc
lret
jno
mov
jo
in
push
int
cmc
xchg
int
dec
int
adc
xchg
jo
mov
jno
or
int
std
int
std
cmp
lock
sub
mov
cmc
inc
ror
jbe
int
stc
xor
jns
lock
push
roll
cmp
cmp
repnz
mov
cmc
das
rcl
int
lods
or
stc
cmp
lock
push
roll
int
std
cmp
cmp
repnz
mov
lea
push
or
add
int
adc
lea
insb
sarl
test
int
icebp
push
dec
and
add
int
std
int
std
cmp
lock
push
rcrl
mov
stc
int
stc
in
xchg
jbe
int
std
cmp
cmp
shl
sub
mov
arpl
rorb
add
xor
jbe
dec
and
inc
and
or
cwtl
int
int
std
int
std
sar
shll
xchg
cltd
shr
sub
mov
xchg
mov
das
add
int
mov
xchg
mov
xchg
cmc
leave
jbe
popa
and
int
stc
cmp
rcl
mov
xchg
std
int
std
cmp
cmp
shr
sub
repz
push
fxch
out
pop
xchg
leave
fsubrl
add
int
cmc
int
mov
or
mov
out
xor
pop
int
std
cmp
cmp
in
push
cld
or
add
int
std
int
std
cmp
cmp
shl
xchg
shr
sub
or
mov
xchg
out
cmp
cmp
shl
xchg
shr
sub
jmp
addb
std
add
cmp
sarl
push
cltd
iret
ja
jecxz
inc
cltd
das
add
addb
jo
or
mov
mov
das
addb
in
xchg
int
in
xchg
repz
mov
mov
adc
dec
and
or
int
in
cmp
add
call
repz
sarl
xchg
mov
xchg
in
int
dec
int
dec
cmp
add
call
mov
push
cltd
int
mov
int
dec
int
dec
cmp
add
call
mov
push
cltd
int
mov
int
in
int
movsl
addl
mov
push
xchg
add
add
stc
int
stc
cmp
add
call
mov
push
cltd
int
adc
out
inc
aam
in
sub
xchg
std
int
std
cmp
add
call
repz
sarl
cltd
int
test
das
push
test
add
arpl
jbe
cmp
int
lods
add
ljmp
std
cmp
int
std
cmp
shl
sub
mov
lret
rorb
adc
xchg
addb
and
inc
and
int
std
cwtl
lcall
xor
xchg
mov
sub
or
int
std
int
std
cmp
mov
repnz
or
int
and
jbe
int
in
cmp
or
adc
dec
mov
cmc
int
cmc
cmp
or
adc
dec
lahf
xchg
lea
cmp
or
adc
imul
mov
lea
mov
jbe
dec
and
hlt
mov
insl
das
add
int
dec
push
insl
das
add
int
sbb
insl
das
add
int
and
jbe
int
mov
mov
addb
addl
cmp
mov
repnz
or
int
std
int
std
int
mov
lea
outsb
jo
lea
insl
das
add
leave
jbe
dec
and
int
xchg
pop
int
xchg
cmp
loop
mov
push
popf
or
int
std
int
sub
xor
bound
int
std
int
std
int
and
sbb
xchg
dec
inc
fst
push
cmc
int
adc
lods
int
cmc
cmp
add
call
jmp
shr
sub
int
dec
bound
xchg
jo
add
int
dec
int
xchg
int
jo
jge
xchg
jo
dec
xchg
int
xor
sbb
xchg
xchg
add
mov
or
pop
fs
das
mov
xor
jbe
int
std
int
std
cmp
add
shl
sub
mov
mov
and
jge
add
int
std
int
std
cmp
add
shl
sub
mov
jbe
int
stc
int
stc
add
cmp
repnz
mov
mov
pop
lea
addb
mov
lea
xchg
lea
or
jl
icebp
aam
clc
icebp
sub
xchg
in
xchg
int
jo
outsb
test
test
int
mov
lea
xchg
std
cmp
add
call
jmp
shr
sub
pop
lea
mov
popf
int
test
lds
add
sbb
stc
int
stc
cmp
shr
xchg
add
incl
push
adc
and
jbe
int
stc
int
stc
add
cmp
repnz
mov
lea
mov
pop
lea
add
int
and
sbb
cmp
lea
int
adc
lods
int
adc
sti
call
jmp
shr
sub
int
dec
bound
xchg
xchg
pop
add
push
insl
das
add
int
and
or
or
cmp
add
call
jmp
shrl
add
int
std
int
std
cmp
add
sarl
push
rorl
jbe
pop
push
jl
or
leave
jbe
sbb
shr
lahf
xchg
jbe
dec
and
xchg
iret
inc
shl
xchg
adc
scas
cmp
lea
add
cli
xchg
xchg
add
or
mov
jbe
or
iret
outsb
std
iret
jno
or
or
leave
push
jo
add
sub
pushf
add
add
pop
movsb
add
add
push
lods
add
add
xchg
add
sbb
les
add
popa
lahf
xchg
add
sbb
aam
add
call
iret
faddl
add
leave
push
in
add
mov
add
jbe
and
or
jbe
inc
lahf
xchg
jbe
pusha
lahf
xchg
and
int3
push
jo
add
shr
xchg
add
scas
or
test
add
sbb
addl
add
int
adc
inc
add
add
add
or
iret
jbe
jo
or
push
int
jge
icebp
int
std
int
std
cmp
add
sarl
push
rorl
jbe
int
std
int
std
cmp
add
call
lods
sub
jmp
push
jge
jbe
inc
rcl
xchg
or
in
das
int
int
jne
jbe
int
mov
int
sbb
mov
addl
addl
int
sub
xchg
dec
int
cmp
xor
jo
int
stc
int
stc
cmp
add
sarl
push
rorl
jbe
int
and
pop
mov
push
insl
das
add
add
and
lock
mov
push
insl
das
add
int
and
lock
mov
push
insl
das
add
lcall
push
insl
das
add
int
and
sbb
sbb
or
addl
int
dec
add
and
or
or
cmp
add
call
jmp
shrl
dec
and
int
mov
jbe
shr
xchg
adc
scas
cmp
sbb
insb
cmp
lea
lds
outsb
adc
jbe
leave
addb
sub
pushf
test
jbe
int
sub
outsb
mov
jbe
int
sub
outsb
dec
in
adc
jbe
int
cmp
lea
lds
outsb
adc
jbe
add
or
icebp
addl
cmp
int
arpl
xchg
cmp
test
shlb
xchg
int
jno
das
mov
mov
mov
leave
jbe
dec
and
push
lret
aam
popa
shll
xchg
out
xchg
pop
out
orb
mov
pop
out
cmpb
std
int
std
cmp
add
call
jmp
in
xchg
push
cld
add
std
add
test
sub
adc
dec
and
int
std
int
std
cmp
add
call
jmp
shr
sub
inc
stc
xorb
rorb
add
push
leave
jbe
mov
jbe
xchg
addb
addb
test
lods
addb
addb
addb
addb
addb
addb
addb
mov
stc
cmp
clc
add
repnz
and
movb
addb
or
cmc
icebp
lea
jnp
addb
addb
std
ss
pushf
addb
int
push
jp
addb
int
std
xchg
int
std
xchg
xor
jbe
int
in
sbb
cmpb
int
mov
fadds
jbe
xchg
popa
fists
xor
xchg
int
xor
out
adc
mov
subb
int
xchg
adc
mov
addb
clc
int
icebp
push
out
addb
icebp
adc
pop
push
addb
add
add
adcb
pop
cwtl
lcall
or
adc
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
movsl
dec
bound
addb
dec
pop
and
pop
xchg
mov
stc
xor
jbe
int
stc
sub
int
cmc
dec
inc
outsl
addb
xor
int
in
push
sarb
fisubrl
ret
add
clc
test
push
addb
int
mov
leave
das
sarl
fisttpl
xchg
mov
popa
addb
push
addb
addb
addb
addb
pop
lcall
xchg
lods
int
mov
int
popf
xor
int
xchg
cmpsb
push
addb
mov
ret
jbe
int
icebp
int
or
int
xchg
xor
inc
test
inc
or
rol
addb
cmp
clc
hlt
int
gs
ss
push
addb
add
xchg
jbe
int
stc
sub
int
cmc
dec
inc
outsl
addb
xor
int
in
push
sarb
hlt
int
dec
xor
int
mov
leave
das
rol
int
xor
das
pop
pop
add
add
mov
in
jo
jbe
xchg
aaa
ficoms
pop
mov
jbe
leave
jbe
mov
jbe
leave
jbe
fidivs
ficoms
or
pop
leave
jbe
scas
aaa
ficoms
or
cwtl
lcall
adc
jbe
cmp
cmp
pop
dec
and
out
ficoms
jp
jbe
int
or
iret
xchg
addl
push
ror
je
ror
xor
pushf
test
inc
loop
shr
xchg
int
int
test
insl
adc
cmpsb
mov
or
xchg
in
inc
jbe
das
or
jbe
add
mov
int
stc
push
insl
aam
cmp
out
int
mov
fs
xchg
mov
lret
xchg
add
xchg
stc
xchg
lret
int
lods
or
lret
int
stc
xchg
int
mov
adc
int
cmc
insb
add
std
sarl
push
sarb
rorl
jbe
push
cmc
int
cmc
add
call
repz
shrl
xchg
stc
inc
rolb
int
adc
xchg
stc
int
mov
test
int
stc
iret
adc
int
dec
shl
sub
cmp
or
push
adc
xchg
adc
call
repz
shrl
xchg
stc
xchg
xor
or
inc
lds
pop
outsl
add
add
jbe
int
mov
ljmp
mov
ror
popf
int
cmp
in
or
or
add
in
xchg
or
test
lret
rorb
add
adc
jbe
leave
jbe
dec
and
inc
and
cwtl
or
leave
jbe
into
and
in
inc
sbb
int
std
sar
shll
xchg
repnz
adc
out
xchg
push
add
lea
int
adc
jge
jmp
shr
sub
das
roll
jmp
addb
xchg
stc
cmp
shr
sub
jge
jmp
push
adc
xchg
std
int
std
cmp
cmp
shl
xchg
shl
sub
push
adc
xchg
stc
int
stc
aam
cmp
shl
sub
icebp
shl
xchg
push
jecxz
std
int
std
cmp
loope
jmp
shl
sub
aad
int
in
int
in
cmp
loope
jmp
shl
sub
cmp
in
sub
lock
sub
icebp
shl
xchg
push
jecxz
std
int
std
cmp
loope
jmp
shl
sub
aad
or
int
std
cmp
jmp
shr
sub
xchg
int
cmc
int
cmc
cmp
cmp
ljmp
int
std
int
std
cmp
cmp
shl
sub
repz
push
aad
adc
das
pop
pop
add
add
jbe
int
mov
jbe
arpl
rolb
insl
pop
jbe
aam
pop
jbe
fdivs
lret
or
das
adc
in
addb
lea
lret
or
insb
inc
jbe
subb
stc
std
add
cmpsb
rorb
adc
cmp
addb
xchg
jbe
inc
and
dec
sub
jno
cli
arpl
jbe
int
adc
subl
repnz
or
leave
jbe
into
and
inc
sbb
mov
int
std
int
std
cmp
shl
sub
jns
mov
lea
int
adc
jmp
shr
sub
das
rcl
in
outsb
int
cmc
int
cmc
sarl
push
sarl
lds
jbe
iret
jbe
jo
mov
jbe
int
stc
int
cmc
or
add
jbe
int
std
cmp
lock
push
roll
cmc
int
in
int
in
cmp
shl
sub
jns
mov
std
int
std
cmp
cmp
shr
xchg
shr
sub
xor
int
cmc
inc
jge
mov
jbe
int
mov
jns
lock
push
rorl
jbe
leave
jbe
bound
xchg
addb
jbe
cmp
shrl
jmp
push
jge
jbe
aad
or
int
mov
orb
in
lret
int
stc
das
pop
insl
cmp
or
int
in
int
in
cmp
mov
repnz
int
cmc
sub
int
push
popf
cld
add
int
popf
cmp
or
int
std
int
std
cmp
lock
push
roll
std
int
std
cmp
lock
push
sarl
jbe
int
adc
lea
cmp
cmp
repnz
mov
lea
imul
add
jbe
int
mov
jns
lock
sub
mov
int
stc
test
shll
rolb
in
xor
lret
pop
lcall
addb
roll
cwtl
sub
lahf
xor
std
or
stc
mov
lret
cmp
leave
jbe
adc
addb
mov
jecxz
mov
stc
iret
dec
into
mov
pop
das
mov
mov
das
mov
mov
fs
adc
das
mov
mov
mov
jge
pop
cmc
aam
leave
jbe
sbb
stc
int
mov
jecxz
mov
inc
in
dec
add
leave
jbe
push
addb
int
mov
lret
pop
dec
sub
push
add
add
cmc
sbb
push
jb
add
cmp
arpl
rolb
jecxz
mov
mov
adc
int
add
mov
inc
add
mov
adc
iret
js
or
iret
js
or
iret
js
or
iret
pop
or
cmp
addb
or
jbe
iret
pop
out
addb
pop
xor
pop
iret
pop
inc
addl
pop
xchg
addl
addb
xchg
icebp
or
or
mov
adc
or
and
lea
out
cmp
adc
jnp
ficoms
das
inc
cli
xchg
rcll
xchg
or
mov
out
int
or
cmp
shl
sub
int
mov
addb
cld
push
lock
stc
das
add
adc
mov
or
and
jbe
mov
movsl
int
jge
or
cmpsb
or
jnp
ficoms
das
inc
add
out
xchg
cmp
cmp
push
or
clc
add
add
add
lea
or
lea
icebp
mov
dec
stc
pop
sbb
mov
xor
std
xor
icebp
mov
xchg
adc
add
mov
jmp
and
lea
cmpsb
or
shr
sub
notl
shr
xchg
push
lock
aaa
ficoms
or
or
or
cmpsb
or
jnp
ficoms
das
inc
add
out
xchg
cmp
cmp
push
or
clc
push
comiss
xor
add
int
stc
push
imull
add
int
fs
push
faddl
int
and
jp
int
sbb
cltd
or
xchg
xchg
in
or
or
xchg
cmpsb
cmc
cmp
or
fcom
in
xchg
jbe
int
or
inc
lcall
ja
int
mov
xchg
mov
and
or
xchg
sbb
mov
jbe
or
push
addb
pusha
adc
jo
jbe
int
xor
int
stc
int
in
push
insl
aam
int
std
or
std
test
lea
movsl
push
or
or
int
test
lret
rolb
int
mov
pop
adc
mov
int
cmp
lret
pop
mov
shll
fwait
sbb
cwtl
int
pop
lahf
xor
cmp
jecxz
mov
xchg
add
xchg
das
mov
repz
mov
sbb
lds
sbb
jmp
dec
add
addl
mov
lret
cli
sbb
adc
or
sbb
leave
stos
lds
mov
addb
and
cmc
xchg
aaa
ficoms
or
aaa
ficoms
or
jbe
dec
and
inc
and
out
ficoms
or
fidivs
ficoms
or
int
adc
inc
icebp
xchg
shl
xchg
int
in
int
adc
ljmp
cmp
cmp
push
jns
jbe
iret
jbe
or
int
or
xor
ficoms
or
std
int
std
cmp
shr
xchg
sar
cmp
shr
sub
int
std
int
std
cmp
popf
shl
sub
xchg
int
std
int
std
cmp
popf
shl
sub
xchg
int
std
int
std
cmp
popf
shl
sub
xchg
or
nop
add
add
lea
icebp
cmp
shr
sub
jmp
push
adc
xchg
mov
cltd
cmp
in
push
aad
int3
pop
aam
add
int
dec
int
int
std
int
std
int
jo
popf
cmp
in
push
aad
int3
pop
aam
add
int
xor
xchg
xor
icebp
cmp
shr
sub
jmp
push
adc
xchg
std
int
std
cmp
cltd
shl
xchg
shl
sub
int
std
cmp
mov
shl
sub
xchg
int
adc
int3
pop
aam
add
int
adc
add
shl
sub
jns
mov
std
int
std
add
cmp
shr
sub
jmp
push
adc
xchg
std
int
std
cmp
repz
shl
sub
xchg
int
std
int
std
cmp
in
shl
xchg
push
aad
adc
add
add
push
nop
add
add
jbe
int
std
sar
cmp
or
mov
push
shll
jbe
iret
or
addb
addb
int
push
or
lea
shr
xchg
int
lods
int
mov
leave
cmp
push
icebp
bound
xor
repnz
inc
mov
int
lods
int
mov
inc
jge
shr
xchg
int
lods
int
mov
leave
cmp
push
icebp
bound
push
shl
sub
cmp
inc
sti
add
int
std
int
std
cmp
repnz
jns
mov
std
int
std
cmp
shr
xchg
cmp
shr
sub
xchg
int
std
int
std
cmp
shr
xchg
cmp
shr
sub
xchg
int
std
int
std
cmp
shr
xchg
cmp
shr
sub
xchg
or
nop
add
add
jbe
int
int
mov
aad
jmp
shr
sub
or
add
jbe
int
int
std
int
std
cmp
shr
xchg
int
jo
aad
ljmp
aam
add
int
sbb
lea
or
repnz
jns
mov
std
int
std
cmp
cmp
shr
sub
jmp
push
adc
xchg
std
int
std
cmp
hlt
call
in
push
aad
adc
add
add
jbe
int
std
add
call
repnz
jns
mov
std
int
std
add
cmp
shr
sub
jmp
push
adc
int
std
add
cmp
shr
sub
jmp
push
adc
pop
nop
add
add
xchg
std
int
std
xchg
cmp
int3
push
aam
add
int
sub
hlt
call
repz
shl
sub
iret
or
addb
addb
xchg
and
insl
aam
int
in
int
adc
inc
jge
shr
xchg
int
int
int
in
int
adc
fidivrl
lock
push
adc
xor
jo
xchg
push
in
push
int
int
push
lret
or
int
cmc
int
stc
das
inc
jge
shr
xchg
int
cmc
int
stc
cmp
cmp
shl
sub
lea
push
lds
int
inc
jo
lea
or
xchg
xchg
push
int
dec
int
int
xchg
sbb
dec
xchg
sub
lea
int
int
push
xor
int
int
xchg
jbe
or
das
inc
jge
shr
xchg
int
in
int
adc
leave
cmp
shl
sub
or
int
xor
les
in
int
adc
inc
jge
shr
xchg
int
in
int
adc
repnz
lea
leave
cmp
add
stc
push
inc
shrl
add
addb
movsb
dec
mov
jge
cmpsb
xor
lea
xchg
das
inc
rcll
jbe
int
xchg
shrl
cmp
cmp
push
or
cmpsb
stc
das
inc
popf
xchg
or
int
cmc
push
out
add
dec
shr
xchg
int
stc
cmp
mov
int
cmc
int
stc
das
inc
or
shrl
shr
xchg
int
stc
cmp
shrl
cmp
push
fcmovne
lea
mov
ror
icebp
or
int
xchg
das
inc
rcll
jbe
int
xchg
shrl
das
mov
cmp
dec
or
rorl
mov
or
and
shrl
ficoms
cmp
fidivs
ficoms
ss
or
cs
int
xor
add
mov
int
xor
xchg
int
orl
push
and
add
in
test
int
adc
jbe
leave
jbe
scas
aaa
ficoms
or
int
jne
inc
jge
shr
xchg
int
insl
int
jne
repnz
lea
cmp
cmp
push
shl
int
inc
inc
mov
int
xor
xor
insb
test
jbe
int
in
int
adc
inc
jge
shr
xchg
int
in
int
adc
fnstsw
leave
push
sub
adc
push
mov
std
int
std
cmp
shr
xchg
sar
cmp
shr
sub
int
std
int
std
cmp
popf
shl
sub
xchg
int
std
int
std
cmp
popf
shl
sub
xchg
int
std
int
std
cmp
xchg
shl
sub
xchg
or
nop
add
add
lea
xchg
mov
cltd
cmp
in
push
aad
int3
pop
aam
add
int
dec
int
int
std
int
std
int
jo
cltd
cmp
in
push
aad
int3
pop
aam
add
int
sbb
xchg
sbb
icebp
shr
sub
psrlq
xchg
push
adc
xchg
std
int
std
cmp
cltd
shl
sub
repz
push
aad
cmpsb
std
cmp
hlt
call
mov
push
lds
aam
add
int
std
int
std
cmp
shr
xchg
sar
cmp
shr
sub
int
std
int
std
cmp
popf
shl
sub
xchg
int
std
int
std
cmp
popf
shl
sub
xchg
iret
xchg
movsl
or
add
iret
nop
add
add
std
int
std
cmp
int
sub
icebp
shr
xchg
shr
sub
jno
pop
out
addb
addl
add
dec
int
mov
mov
dec
int
cmc
int
stc
das
inc
jecxz
shl
xchg
int
cmc
int
stc
cmp
shr
sub
xchg
cmc
cmp
push
bswap
stc
das
inc
sti
xchg
shr
xchg
int
cmc
int
stc
cmp
cmp
push
aad
adc
xchg
cmc
sarl
das
inc
sti
xchg
shr
xchg
int
cmc
int
stc
cmp
cmp
push
aad
adc
xchg
cmc
sarl
das
inc
sti
xchg
shr
xchg
int
cmc
cmp
int
stc
cmp
push
flds
dec
sarl
add
int
or
rclb
xchg
int
add
inc
pop
cwtl
lcall
popf
aaa
ficoms
pop
mov
jbe
leave
jbe
xchg
aaa
ficoms
or
leave
jbe
dec
mov
cmc
dec
lahf
xchg
and
cmp
xchg
and
jbe
int
sbb
shlb
jbe
int
sbb
add
xor
pop
xchg
fs
popf
int
and
out
int
movsl
das
inc
add
out
int
movsl
adc
cmpsb
mov
shr
sub
pop
push
aad
nop
int
or
int
xor
xchg
dec
iret
xchg
lods
bound
stc
jno
cwtl
add
sbb
jbe
add
mov
cmc
add
adc
in
jo
jbe
jo
stos
clc
add
or
int
sbb
lea
outsb
adc
jbe
leave
addb
lods
int
and
outsb
test
jbe
int
and
outsb
mov
jbe
int
and
outsb
dec
int
and
insb
and
addb
sbb
lea
or
and
xorb
or
int
std
stos
test
lret
rcrb
xchg
int
int
dec
adc
cmp
cwtl
lcall
push
mov
jbe
inc
and
dec
addb
ficoms
pop
mov
jbe
leave
jbe
xchg
aaa
ficoms
or
int
mov
jbe
int
cmc
int
mov
or
or
pop
jle
addb
mov
insl
mov
sarl
xor
mov
nop
xchg
iret
sahf
int
mov
aad
or
mov
jno
int
mov
leave
xchg
mov
ficomps
or
pop
mov
or
lret
mov
or
insb
add
add
push
add
add
outsb
add
add
add
inc
mov
add
iret
outsb
xor
add
add
xor
add
mov
add
int
mov
add
int
in
int
adc
inc
jge
shr
xchg
int
in
int
adc
cmpsb
mov
cmp
shl
sub
in
outsb
iret
aam
mov
int
das
mov
cmp
sti
and
shl
das
push
adc
int3
test
lea
inc
jecxz
shl
xchg
int
mov
mov
push
psrlq
sub
popa
int
in
int
adc
inc
jge
shr
xchg
int
in
int
adc
leave
cmp
shl
sub
in
outsb
iret
aam
add
sbb
mov
sti
and
shl
das
push
adc
int3
test
incl
add
lea
inc
jecxz
shl
xchg
int
mov
mov
push
psrlq
sub
popa
int
in
int
adc
inc
jge
shr
xchg
int
in
int
adc
leave
cmp
shl
sub
in
je
push
jbe
add
add
sbb
mov
sti
and
shl
das
push
adc
int3
test
lea
inc
jecxz
shl
xchg
int
mov
mov
push
psrlq
sub
mov
add
or
int
stc
pop
inc
pop
inc
xchg
or
daa
or
int
mov
add
int
mov
mov
xor
pusha
addl
addb
mov
add
int
mov
add
pop
es
push
std
incl
add
xor
push
incl
add
xor
push
addb
add
or
xchg
add
add
jbe
pop
dec
xor
iret
test
add
add
bound
add
pop
push
xor
iret
mov
add
add
pushf
mov
add
int
mov
add
pop
add
addb
add
cmp
adc
cmpb
add
mov
addb
add
pop
lcall
adc
add
int
xor
call
repnz
or
adc
jbe
int
dec
cmp
mov
shl
sub
leave
add
add
add
incl
add
jbe
int
xor
jns
mov
shl
sub
jo
push
stc
incl
add
jbe
int
cmp
push
sbb
add
inc
lret
fwait
xor
adc
icebp
or
int
stc
push
insl
aam
adc
or
fmull
int
dec
int
dec
sar
setl
icebp
shr
sub
jmp
push
adc
xchg
cmc
int
and
dec
das
push
popa
test
int
dec
cmp
shr
xchg
cmp
shr
sub
int
cmc
int
in
addb
int
dec
cmp
shr
xchg
cmp
shr
sub
int
cmc
int
add
pop
xor
mov
add
int
mov
add
pop
es
iret
sub
add
pop
daa
xor
iret
xor
add
add
test
add
add
xor
iret
cmp
add
add
mov
or
cmp
add
pop
fwait
xor
iret
inc
add
add
or
or
inc
add
add
xor
iret
dec
add
add
pop
addb
add
pop
cmp
addb
add
jns
movsl
cmpsl
pop
pop
adc
iret
push
add
add
pop
mov
add
jns
fisttps
jbe
inc
jns
loope
pop
fcom
addb
add
jns
lods
push
pop
jnp
addb
add
jns
repnz
ljmp
mov
add
jns
in
int
xor
xchg
xor
icebp
shr
xchg
shr
sub
in
xchg
int
xor
out
cmp
stc
shr
sub
xor
das
pop
mov
int
xor
out
cmp
stc
shr
sub
int
stc
add
adcl
fwait
addb
movsw
int
xor
lea
cmp
sub
repz
push
jecxz
stc
xchg
int
xor
out
cmp
xchg
shr
sub
add
mov
stc
inc
adc
int
xor
icebp
shr
xchg
shr
sub
or
adc
lea
dec
cmp
cmp
shr
sub
jmp
push
adc
xchg
movsl
or
add
xor
mov
rcl
int
mov
loopne
mov
leave
test
loopne
mov
leave
loop
or
cmp
cli
mov
add
cld
mov
add
cli
mov
loopne
mov
leave
test
loopne
mov
leave
loop
or
popa
mov
or
or
int
dec
cmp
cmp
shr
sub
jmp
push
adc
xchg
dec
int
dec
cmp
mov
jmp
mov
or
int
dec
int
dec
cmp
cmp
shr
xchg
shr
sub
int
dec
iret
mov
out
shl
xchg
cmp
shr
sub
das
mov
or
int
dec
int
dec
cmp
shr
sub
psrlq
xchg
push
adc
xchg
dec
int
dec
cmp
stc
shr
sub
mov
incl
add
lea
dec
cmp
shr
sub
psrlq
xchg
push
adc
xchg
dec
int
dec
cmp
stc
shr
sub
mov
incl
add
lea
int
xor
icebp
cmp
shr
sub
jmp
push
adc
xchg
xor
out
cmp
xchg
shr
sub
xchg
or
adc
lea
dec
int
mov
icebp
cmp
shr
xchg
shr
sub
iret
push
nop
incl
add
add
add
jbe
mov
int
xor
xchg
xor
cmp
stos
cmp
shr
xchg
shr
sub
or
add
jbe
int
dec
cmp
mov
repnz
aam
iret
push
adc
int
xor
lea
cmp
mov
repnz
jo
push
and
add
jo
jbe
rolb
int
dec
cmp
lock
mov
mov
push
ror
iret
movsb
incl
add
int3
push
sbb
jbe
mov
int
xor
xchg
xor
psrlq
xchg
add
call
ljmp
sbb
sub
xor
push
jo
add
iret
mov
mov
add
pop
adc
push
bound
add
int
mov
add
int
mov
add
add
sub
jge
or
mov
mov
mov
add
add
pusha
mov
add
iret
mov
or
les
add
int
mov
add
iret
loopne
pop
add
iret
enter
iret
mov
mov
add
mov
add
add
stc
mov
add
int
pop
leave
xor
iret
addb
add
jge
or
aam
add
int
mov
add
cmp
or
add
add
addr16
add
leave
push
lods
add
add
xor
fadds
add
jae
jno
mov
int
xor
xchg
xor
call
repnz
jns
mov
lea
add
cmp
repz
push
jecxz
lret
add
sbb
lret
cmp
inc
cli
das
or
addb
das
add
addb
xchg
xor
psrlq
xchg
add
call
ljmp
aad
cmp
add
lea
int
xor
psrlq
xchg
add
call
jmp
jge
int
lea
add
mov
repnz
mov
jecxz
lea
int
xor
psrlq
xchg
add
call
jmp
jge
or
add
lea
int
xor
sti
call
jmp
shr
sub
int
xor
add
cmp
repz
push
jecxz
lret
add
sbb
lret
cmp
inc
cli
das
or
pop
pop
add
add
cmpsb
mov
jne
jbe
int
mov
or
insb
test
jbe
int
jge
inc
jge
shr
xchg
int
jne
xchg
jge
leave
cmp
push
icebp
int
cmc
bound
jo
push
cmc
incl
add
repnz
int
in
int
adc
inc
jge
shr
xchg
int
in
int
adc
repnz
iret
cmc
incl
add
mov
leave
cmp
push
rolb
das
push
push
addb
jbe
ficoms
pop
mov
jbe
or
int
xchg
int
popf
das
inc
jge
shr
xchg
int
xchg
int
popf
cmp
cmp
push
icebp
bound
xor
repnz
pop
xor
push
repnz
int
xchg
int
popf
das
inc
jge
shr
xchg
int
xchg
int
popf
cmp
cmp
push
icebp
bound
pop
xor
repnz
pop
sub
xchg
repnz
int
xor
mov
jle
xchg
lea
inc
rcll
jbe
int
icebp
cmp
shrl
ror
lea
push
jge
dec
int
popf
addl
jbe
int
xor
cmp
cmc
add
sub
and
sbb
adc
test
add
or
adc
add
int
cmp
fcoml
aam
int
cmp
fsubl
aam
int
adc
add
int
cmp
outsb
sbb
push
add
cmp
cmc
mov
stos
test
lret
shlb
xchg
int
jno
cwtl
leave
jbe
dec
and
inc
and
int
std
sar
shll
xchg
sti
sarl
push
jns
mov
int
std
aam
int
std
cmp
cmp
sarl
push
jns
dec
inc
adc
pop
int
xor
jbe
cmp
push
add
push
pop
lret
or
das
push
fcmovbe
dec
add
adcl
fwait
addb
dec
adc
in
addb
lea
lret
or
js
clc
orb
int
stc
cmp
int
stc
add
ljmp
std
cmp
int
std
cmp
shl
sub
mov
lret
rorb
int
add
leave
jbe
dec
and
xchg
jbe
or
int
adc
add
lea
addl
lea
std
cwtl
lcall
jns
mov
shl
sub
or
int
std
int
std
cmp
mov
repnz
or
int
mov
insb
jo
mov
int
mov
insb
pop
int
mov
push
outsb
xchg
int
mov
sbb
insb
pop
int
mov
jle
jl
icebp
sub
jbe
int
pop
xchg
in
xchg
insb
xchg
or
int
std
int
std
cmp
lock
push
rorl
jbe
int
std
int
std
cmp
lock
sub
mov
jbe
int
std
int
std
cmp
cmp
repnz
mov
lea
or
jbe
cmp
xchg
and
imul
xchg
int
std
cmp
lock
push
rorl
jbe
int
mov
jbe
add
popf
add
dec
int
mov
neg
add
or
int
adc
insl
aam
int
popf
or
int
movsl
int
dec
xor
or
int
adc
lea
dec
int
movsl
inc
jge
sbb
jbe
int
dec
int
adc
outsb
mov
lea
test
xchg
jbe
inc
and
cmp
xchg
and
or
iret
jbe
or
iret
jbe
or
iret
jbe
or
int
std
int
std
cmp
lock
push
rorl
jbe
jmp
xchg
and
xchg
popf
iret
jbe
jo
xlat
filds
add
jbe
int
stc
cmp
lock
sub
mov
jbe
or
int
xchg
sarl
in
push
popf
or
int
stc
cmp
shl
sub
jns
mov
stc
int
stc
cmp
cmp
shr
xchg
shr
sub
xchg
int
movsl
or
sub
jbe
int
stc
cmp
lock
push
shll
dec
iret
jbe
jo
sti
std
add
int
std
int
std
cmp
lock
sub
mov
lea
int
std
int
std
cmp
lock
push
shll
dec
iret
jbe
jo
mov
jbe
int
cmc
int
int
cmp
cmp
repnz
mov
je
ror
std
int
std
cmp
cmp
shr
xchg
shr
sub
pop
insl
push
adc
das
add
int
adc
lea
int
int
cmp
cmp
repnz
mov
je
ror
std
int
std
cmp
cmp
shr
xchg
shr
sub
pop
insl
push
adc
das
add
int
adc
lea
lock
repnz
mov
je
ror
std
int
std
cmp
cmp
shr
xchg
shr
sub
pop
insl
push
adc
das
add
int
in
int
in
int
int
cmp
cmp
repnz
mov
je
ror
std
int
std
cmp
cmp
shr
xchg
shr
sub
pop
insl
push
adc
das
add
int
adc
lea
int
int
cmp
shl
sub
jns
mov
je
ror
cmc
int
int
cmc
int
cmp
shr
xchg
cmp
shr
sub
lret
rolb
int
adc
mov
xchg
adc
and
psrlq
xchg
cmp
shr
sub
lret
rorb
int
cmc
int
int
cmc
int
cmp
cmp
shr
xchg
shr
sub
lret
push
pusha
jge
push
mov
jbe
int
adc
mov
cmpb
shl
sub
jns
mov
je
ror
lea
int
int
adc
and
psrlq
xchg
cmp
shr
sub
lret
rolb
int
in
int
int
in
int
cmp
shr
xchg
cmp
shr
sub
lret
rorb
int
adc
mov
xchg
adc
and
jmp
shr
sub
lret
push
pusha
jge
push
cmc
addb
in
int
int
cmp
shl
sub
jns
mov
je
ror
lea
int
cmp
shr
xchg
cmp
shr
sub
lret
rolb
int
cmc
int
int
cmc
int
cmp
shr
xchg
cmp
shr
sub
lret
rorb
int
adc
mov
xchg
adc
and
jmp
shr
sub
lret
push
pusha
jge
push
add
in
int
in
int
int
cmp
shl
sub
jns
mov
je
ror
cmc
int
int
cmc
int
cmp
shr
xchg
cmp
shr
sub
lret
rolb
int
adc
mov
xchg
adc
and
psrlq
xchg
cmp
shr
sub
lret
rorb
int
in
int
int
in
int
cmp
cmp
shr
xchg
shr
sub
lret
push
pusha
jge
xor
jbe
jo
outsl
lods
add
int
pop
inc
rcl
push
int
std
int
std
cmp
cmp
repnz
mov
jbe
int
stc
int
stc
int
stc
int
stc
cmp
xchg
shrl
cmpsb
gs
xchg
cmp
add
std
add
std
shr
sub
hlt
dec
and
int
std
cmp
cmp
repnz
mov
lea
push
std
add
int
std
int
std
cmp
lock
sub
mov
lea
int
stc
int
stc
cmp
lock
push
shr
jle
addb
popf
iret
jbe
jo
jge
add
int
std
int
std
cmp
lock
sub
mov
lea
int
stc
int
stc
cmp
lock
sub
mov
lea
int
stc
int
stc
cmp
lock
push
shll
iret
jbe
jo
das
cli
add
int
std
int
std
cmp
lock
push
shll
iret
jbe
jo
sti
stc
add
int
popf
xchg
or
add
cmp
jbe
xchg
jo
push
fildl
add
jbe
int
std
cmp
lock
sub
mov
lea
int
stc
int
stc
cmp
lock
sub
mov
lea
int
stc
int
stc
cmp
mov
repnz
jo
cmp
jbe
jo
add
jbe
int
std
cmp
mov
repnz
jo
cmp
jbe
jo
jb
add
int
inc
int
inc
cmp
cmp
shr
xchg
shrl
lea
addl
jo
cmp
lea
add
jbe
int
cmp
cmp
jbe
int
stc
int
stc
cmp
shl
sub
jns
mov
lea
std
int
std
cmp
cmp
shr
xchg
shr
sub
xchg
or
cli
add
int
mov
xor
in
adc
cwtl
lcall
add
xchg
mov
or
dec
int
mov
cmpsb
dec
or
pop
jnp
ficoms
cmp
pop
mov
adc
inc
sti
xchg
shr
sub
clc
addb
cmp
push
clc
int
sbb
aad
sbb
das
adc
je
push
ja
xchg
shr
addl
xchg
mov
dec
int
mov
dec
int
mov
cmpsb
dec
cmp
cmp
das
inc
sti
xchg
shr
sub
clc
addb
aad
out
xchg
push
clc
int
xor
cmpsb
adc
popf
int
xor
cli
int
adc
inc
loope
shrl
cli
push
addb
push
popf
int
mov
bswap
dec
int
xor
cmpsb
adc
lods
std
add
std
shr
sub
ficoml
aaa
ficoms
adc
mov
clc
aam
ficoms
adc
mov
leave
sbb
push
jge
cltd
pop
mov
add
aaa
ficoms
cmp
adc
out
ficoms
sbb
das
adc
das
stos
push
in
xchg
imul
and
addb
dec
int
mov
out
cmp
pop
jnp
ficoms
cmp
das
inc
sti
xchg
shr
xchg
cmp
shl
sub
cmc
push
fxch
out
imul
cmpsb
and
and
cmpsb
adc
xchg
fiaddl
aam
add
xor
and
sub
std
add
sub
add
or
or
mov
out
cmp
cmp
das
inc
add
out
int
mov
cmpsb
dec
shr
sub
dec
cmc
cmp
push
clc
int
xor
cli
push
aad
cmpsb
adc
popf
int
int
xor
or
cmpsb
adc
inc
jge
shr
sub
fst
jmp
adc
addb
lock
icebp
sbb
and
mov
cmpsl
cmp
sbb
jbe
int
dec
int
mov
dec
adc
mov
jnp
ficoms
das
inc
jge
int
cmp
cmp
sarl
jmp
adc
addb
divps
test
aam
adc
gs
jo
mov
ss
das
sbb
mov
test
lret
shrb
xchg
int
add
dec
int
mov
lea
jge
shr
xchg
int
mov
xchg
dec
cwtl
shl
sub
lea
cmpsb
mov
cmp
push
rorb
or
xor
mov
jbe
int
xor
addb
int
adc
adc
test
nop
jo
add
or
lea
jge
shr
xchg
int
mov
xchg
dec
add
and
jns
ficoml
or
iret
jbe
jo
add
sbb
repnz
adc
xor
dec
add
mov
int
mov
lea
jge
shr
xchg
int
mov
xchg
dec
cmp
fcmovbe
repnz
das
push
rolb
aam
int
xor
lea
inc
jge
shr
xchg
int
xor
xchg
adc
jns
fcmovbe
repnz
lea
shrb
shll
or
adcb
lcall
xchg
inc
int
and
mov
jnp
ficoms
inc
icebp
das
or
addb
test
jnp
inc
hlt
mov
das
add
adc
jno
ficoms
mov
das
add
adc
xchg
aaa
ficoms
mov
das
add
adc
cmpsb
aaa
ficoms
test
aam
adc
scas
aaa
ficoms
mov
das
add
adc
mov
ficoms
das
push
into
addl
sub
addl
adc
xor
dec
add
mov
jmp
addl
mov
das
add
adc
xchg
aaa
ficoms
mov
das
add
adc
aaa
ficoms
test
aam
adc
fidivs
ficoms
mov
das
add
adc
out
ficoms
in
iret
int
mov
dec
int
mov
cmpsb
dec
cmp
cmp
das
inc
sti
xchg
shr
sub
clc
addb
cmp
push
clc
int
mov
int
dec
xchg
sbb
or
int
mov
dec
int
mov
cmpsb
dec
cmp
cmp
das
inc
sti
xchg
shr
sub
fst
out
xchg
adc
addb
clc
ds
xor
adc
xchg
cmp
inc
int
xor
adc
xchg
xor
adc
out
int
adc
adc
jecxz
inc
sti
xchg
shr
sub
fstl
clc
addb
push
clc
int
cmp
aad
cmpsb
inc
cmp
cmp
lea
loope
cmp
shrl
subb
lea
shr
xchg
push
popf
xchg
int
adc
hlt
add
std
shr
sub
insl
adc
aam
ficoms
adc
mov
out
int
inc
add
std
adc
aam
ficoms
adc
mov
lock
and
aad
rclb
or
and
not
aaa
ficoms
cwtl
add
xor
sub
add
sbb
adc
xor
dec
add
mov
or
arpl
sarb
int
mov
dec
int
mov
cmpsb
dec
cmp
cmp
das
inc
sti
xchg
shr
sub
clc
addb
cmp
push
aad
clc
int
xor
cmpsb
adc
fsts
or
int
cmp
inc
int
xor
adc
xchg
mov
dec
int
mov
dec
int
mov
cmpsb
dec
cmp
cmp
das
inc
sti
xchg
shr
sub
clc
addb
aad
out
xchg
push
clc
int
xor
cmpsb
adc
cli
cmp
lea
inc
loope
cmp
push
cli
shrl
subb
push
popf
int
cmp
lea
int
cmp
hlt
int
inc
adc
mov
jnp
ficoms
das
inc
jge
shr
sub
jmp
cmp
adc
addb
lds
lea
out
int
adc
repnz
add
std
adc
aam
ficoms
adc
aam
ficoms
shr
sub
insl
adc
mov
hlt
mov
lock
jmp
incl
add
sbb
pop
aaa
ficoms
or
and
jbe
xchg
aaa
ficoms
or
int
adc
cmc
lcall
xchg
int
adc
out
jo
sti
cmpsb
mov
jno
xchg
std
int
dec
or
iret
jbe
add
mov
mov
dec
add
in
add
mov
adc
stos
or
int
std
test
rorb
add
stc
add
inc
cwtl
leave
je
xor
addb
addb
xor
xor
sub
and
sbb
adc
xor
dec
add
mov
int
mov
je
test
je
xor
insl
das
add
int
xor
push
insl
das
add
add
xor
add
xor
add
xor
int
xor
add
int
xor
int
xor
int
xor
iret
jbe
or
int
xor
xchg
or
int
xor
int
xor
int
xor
int
and
xor
aam
mov
add
sbb
or
xor
push
int
fs
xchg
sbb
push
int
xchg
pop
sbb
add
addl
dec
int
xor
xchg
or
or
xor
push
insl
das
push
cwtl
addl
addl
je
test
add
orb
xor
int
xor
int
or
int
or
int
xor
int
int3
addl
dec
int
xor
int
xor
int
popf
addl
or
imul
jns
add
sarl
push
jge
mov
leave
je
mov
je
xor
insl
aam
int
xor
add
adc
jl
cmp
and
add
xor
add
xor
add
xor
add
xor
int
xor
add
in
cmp
aam
and
aam
and
aam
and
je
push
add
in
and
aam
adc
je
cmp
icebp
in
xchg
je
xor
icebp
or
int
xor
push
insl
aam
int
xor
leave
add
and
mov
mov
int
movsl
addl
and
mov
mov
cmp
add
shl
sub
mov
mov
inc
rcl
and
je
test
mov
int
movsl
addl
addb
cmp
push
iret
jbe
or
int
xor
int
xor
int
in
addb
je
test
add
addl
or
or
adc
mov
int
in
addb
mov
sub
lds
insb
jae
bound
bound
add
insb
popa
inc
gs
fs
add
push
outsl
jns
add
jns
popa
outsl
bound
add
push
add
arpl
popa
insb
jne
gs
insl
imul
outsl
jb
jo
ja
gs
jb
bound
add
outsb
addr16
outsb
arpl
add
jne
je
outsb
push
popa
jb
add
jb
popa
insb
insl
je
outsl
ja
jb
jo
insl
jns
push
outsb
push
imul
inc
outsl
popa
insb
popa
imul
je
outsl
outsb
gs
inc
push
jns
jns
jne
imul
outsl
je
gs
outsl
je
imul
jo
popa
insb
dec
outsb
popa
jo
add
je
gs
jae
js
popa
data16
insb
popa
imul
gs
jb
inc
insb
popa
bound
je
insb
jns
push
popa
inc
popa
insb
insb
push
outsl
insl
outsl
jb
data16
jae
bound
add
outsb
gs
je
gs
add
outsl
inc
popa
imul
jo
fs
je
imul
outsl
add
jne
add
popa
add
add
add
insl
add
add
jb
ja
imul
outsb
add
add
ja
imul
push
add
je
jbe
add
je
add
insb
add
imul
outsl
add
je
popa
add
push
add
arpl
imul
add
outsl
add
add
jns
add
insb
add
jns
jbe
popa
add
popa
add
outsl
add
add
jb
jae
imul
imul
bound
outsl
add
imul
js
jae
outsl
add
popa
add
je
add
bound
jns
add
add
add
add
js
imul
imul
popa
add
add
add
ja
insb
add
popa
add
jo
popa
add
imul
add
jbe
add
jb
jne
je
insl
add
arpl
jne
jo
add
jae
outsl
add
imul
outsl
add
jb
jae
outsl
add
add
outsl
add
popa
add
jae
data16
jb
popa
add
add
add
adc
out
adc
js
adc
test
adc
fs
adc
jp
adc
enter
loop
adc
ja
adc
cmp
adc
rclb
adc
sbb
add
add
add
adc
mov
adc
out
sbb
adc
add
jbe
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
addl
popl
inc
add
addl
mov
addl
cmp
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
or
add
push
adc
cmpsl
outsl
adc
push
popa
adc
add
add
jle
add
adc
mov
adc
aas
inc
adc
pop
and
add
jl
add
adc
inc
push
adc
mov
pop
adc
sub
add
ja
add
sbb
add
adc
or
adc
sbb
data16
xchg
bound
add
dec
adc
in
adc
sub
add
adc
imul
rolb
in
adc
mov
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
and
add
push
adc
testb
add
sbb
add
or
add
pop
adc
adc
cmp
add
sbb
add
adc
push
adc
mov
addb
addb
addl
addl
addl
addl
addl
addl
addl
addl
addl
addl
addl
addl
addl
addl
pusha
adc
pop
js
add
dec
adc
cmp
adc
aam
adc
or
adc
pop
push
adc
mov
xor
add
and
adc
adc
add
dec
adc
jae
adc
dec
add
inc
add
inc
add
addl
addl
addl
addl
addl
addl
addl
addl
addl
addl
addl
addl
addl
cmp
dec
add
add
pusha
lea
add
add
add
add
add
add
add
lea
add
add
inc
lea
add
test
add
add
xchg
add
xchg
add
add
xchg
add
add
add
add
mov
xchg
add
xchg
add
xchg
add
xchg
add
xchg
add
xchg
add
xchg
add
xchg
add
add
push
xchg
add
add
outsb
xchg
add
xchg
add
xchg
add
xchg
add
xchg
add
xchg
add
xchg
add
mov
add
add
mov
add
add
dec
mov
add
add
add
add
xchg
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
add
sub
add
push
mov
add
add
jb
add
jle
add
mov
add
mov
add
mov
mov
add
mov
add
add
add
mov
add
add
add
mov
add
add
mov
add
add
add
js
add
mov
add
mov
add
les
add
loop
add
repnz
add
mov
add
mov
add
mov
add
mov
add
add
push
mov
add
add
add
stos
mov
add
mov
add
add
add
mov
add
mov
add
mov
add
add
sbb
add
sub
add
add
push
mov
add
add
jle
add
xchg
mov
add
add
les
add
mov
add
mov
add
lea
add
lea
add
fs
add
add
je
outsl
jns
jb
jo
jb
jns
push
popa
add
pop
add
outsl
jo
jb
jns
push
add
pop
add
outsl
jo
jb
jns
push
add
dec
add
popa
addr16
imul
insb
popa
arpl
arpl
add
add
popa
addr16
imul
je
outsl
jns
inc
add
popa
addr16
imul
dec
insl
popa
addr16
outsl
jne
je
dec
add
popa
addr16
imul
outsl
jbe
add
inc
dec
dec
inc
push
dec
xor
cs
insb
add
push
add
gs
je
inc
imul
imul
jb
insl
push
add
xor
push
gs
popa
jb
je
outsl
jae
cmp
inc
gs
gs
popa
addr16
add
ja
jb
insl
gs
outsl
outsb
je
outsl
insb
add
sbb
inc
gs
arpl
dec
outsb
outsw
add
add
arpl
outsl
jo
jo
outsb
jne
add
add
outsb
imul
push
arpl
add
popa
jb
jo
gs
add
add
je
insb
addr16
je
insl
push
gs
inc
add
push
outsb
gs
outsl
jo
jo
add
add
insl
outsl
jbe
push
jb
jo
add
push
push
outsb
outsl
ja
add
add
insb
insb
push
imul
outsl
arpl
mov
dec
outsl
popa
fs
outsb
jne
add
arpl
outsl
push
push
outsb
outsl
ja
add
add
jb
insb
insb
push
imul
add
popl
inc
gs
imul
outsl
arpl
add
add
popa
jb
jb
jbe
add
fs
je
push
arpl
xor
inc
gs
outsb
jne
je
insl
dec
inc
add
fs
outsl
je
data16
gs
popa
addr16
add
mov
dec
outsl
popa
fs
arpl
push
add
imul
popa
bound
add
inc
outsl
jb
addr16
jne
fs
imul
add
je
imul
js
inc
add
add
je
gs
popa
addr16
add
add
outsb
fs
gs
popa
addr16
add
das
add
je
arpl
gs
imul
add
imul
popa
jae
inc
js
add
and
push
outsb
fs
insb
addr16
je
insl
dec
gs
popa
addr16
add
dec
gs
popa
addr16
imul
inc
popa
jae
popa
fs
imul
add
add
imul
jae
js
repnz
jae
dec
gs
popa
addr16
add
add
je
jo
popa
je
push
outsb
add
mov
push
popa
bound
fs
gs
dec
jne
push
add
test
fs
imul
add
ja
je
je
push
add
ja
inc
gs
imul
js
dec
outsb
addr16
push
add
cmp
inc
push
jo
jb
jne
push
add
daa
add
je
gs
outsl
popa
jb
push
jns
add
inc
gs
jb
jo
add
dec
add
jo
push
arpl
sub
jb
gs
push
add
push
ja
jb
add
sub
inc
gs
popa
jae
inc
arpl
gs
outsl
jo
jo
add
fs
je
imul
inc
gs
imul
outsb
addr16
add
leave
add
jo
imul
imul
inc
push
dec
gs
push
add
push
push
inc
push
xor
cs
insb
add
xchg
add
insb
dec
outsb
imul
jb
outsb
add
fs
insb
cs
insb
add
dec
outsl
arpl
gs
outsb
outsw
push
add
inc
add
je
jb
arpl
fs
jae
add
roll
inc
jb
popa
je
inc
imul
outsb
addr16
add
sub
gs
popa
outsb
fs
gs
outsl
jne
je
add
add
gs
je
dec
popa
imul
popl
inc
gs
je
insl
dec
popa
insl
gs
add
pusha
add
je
jns
je
insl
push
imul
imul
jns
add
aas
add
fs
imul
add
xchg
add
outsl
bound
inc
insb
insb
outsl
arpl
xchg
add
imul
jne
jb
add
testl
imul
jb
inc
imul
jne
arpl
add
add
jbe
inc
imul
popa
imul
jo
imul
inc
gs
imul
jo
inc
add
and
gs
imul
bound
gs
add
add
jbe
inc
imul
add
jo
inc
imul
jne
jb
push
gs
outsl
jb
popa
outsb
arpl
outsl
jne
je
jb
sub
gs
popa
outsb
fs
gs
outsb
outsw
jb
popa
je
outsl
outsb
add
push
add
je
jb
jb
je
arpl
push
arpl
outsb
add
jg
inc
outsl
insb
fs
je
imul
insb
jae
jb
outsb
inc
add
sahf
add
je
outsl
insl
insl
push
imul
add
gs
push
push
imul
inc
push
dec
inc
dec
xor
cs
insb
add
mov
push
outsl
insb
jns
outsl
outsb
add
gs
bound
arpl
add
gs
inc
inc
add
roll
push
gs
arpl
push
arpl
jmp
push
gs
popa
jo
outsl
fs
leave
add
jne
fs
arpl
add
je
insb
je
add
insb
imul
je
add
jge
inc
gs
jns
je
insl
push
popa
insb
gs
gs
jae
add
push
gs
inc
js
outsb
je
outsl
imul
push
arpl
gs
imul
inc
js
inc
js
add
add
insb
arpl
imul
add
je
gs
inc
outsl
insb
outsl
jb
add
push
imul
inc
outsl
insl
bound
gs
outsb
add
lods
add
gs
je
push
arpl
outsb
dec
outsb
imul
add
gs
outsl
add
mov
popa
je
dec
inc
push
add
je
imul
movsl
add
gs
je
push
popa
insb
gs
add
dec
xor
cs
insb
add
add
imul
add
js
outsl
arpl
add
je
outsb
arpl
jb
jb
imul
add
add
add
test
add
add
xchg
add
xchg
add
add
xchg
add
add
add
add
mov
xchg
add
xchg
add
xchg
add
xchg
add
xchg
add
xchg
add
xchg
add
xchg
add
add
push
xchg
add
add
outsb
xchg
add
xchg
add
xchg
add
xchg
add
xchg
add
xchg
add
xchg
add
mov
add
add
mov
add
add
dec
mov
add
add
add
add
xchg
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
add
sub
add
push
mov
add
add
jb
add
jle
add
mov
add
mov
add
mov
mov
add
mov
add
add
add
mov
add
add
add
mov
add
add
mov
add
add
add
js
add
mov
add
mov
add
les
add
loop
add
repnz
add
mov
add
mov
add
mov
add
mov
add
add
push
mov
add
add
add
stos
mov
add
mov
add
add
add
mov
add
mov
add
mov
add
add
sbb
add
sub
add
add
push
mov
add
add
jle
add
xchg
mov
add
add
les
add
mov
add
mov
add
lea
add
lea
add
add
