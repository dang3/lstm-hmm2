push
mov
sub
sub
mov
push
add
push
push
movl
cmpl
je
cmpl
jb
jmp
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
xor
movl
cmpl
je
cmpl
jge
jmp
push
call
mov
dec
mov
jmp
mov
or
add
mov
xor
mov
andl
mov
subl
mov
mov
and
mov
mov
xor
movl
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jl
jmp
push
call
jmp
mov
and
xor
add
add
subl
mov
mov
mov
movl
cmpl
je
cmpl
jbe
jmp
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
sbbl
mov
not
mov
push
movl
cmpl
je
cmpl
jle
jmp
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
pop
sub
sub
add
movl
movl
cmpl
je
cmpl
jb
jmp
push
call
mov
dec
mov
jmp
mov
movzwl
sub
movl
mov
xorl
mov
mov
mov
mov
adcl
xor
sbbl
add
orl
mov
notl
lea
mov
adc
mov
orl
xor
orl
add
orl
mov
adcl
lea
push
neg
mov
subl
xor
xorl
add
subl
push
mov
addl
push
orl
pushl
orl
call
sbb
mov
adc
mov
mov
adc
mov
mov
movzwl
and
movl
mov
mov
sbbl
lea
sbb
mov
movl
sbb
mov
sbb
mov
andl
mov
inc
mov
cmpl
jbe
jmp
push
call
cmpl
jb
xor
mov
addl
sub
movl
mov
not
movl
mov
mov
movl
cmp
movl
je
jmp
mov
inc
popf
test
cmp
pop
addl
subl
sub
cmp
jp
jbe
jo
jb
jb
insl
push
je
lods
jge
data16
cmp
push
mov
mov
ja
add
repnz
rol
repnz
sub
xchg
adc
xchg
jb
sbb
lsl
and
jne
mov
pop
sbb
mov
fs
and
test
xchg
mov
or
inc
mov
dec
dec
imul
int
rcll
push
adc
or
sbb
push
sarl
add
mov
pop
sub
bound
dec
adc
bound
or
jle
cmp
cs
cmp
cmp
push
out
roll
push
jmp
mov
icebp
mov
imul
mov
fs
push
sbb
adc
or
jge
icebp
or
repz
xor
sub
adc
stos
movsl
xor
xchg
add
arpl
add
fs
add
lcall
mov
and
cwtl
rorl
addr16
pop
push
or
mov
mov
jo
xchg
lods
popf
mov
jb
shll
stc
out
push
hlt
xchg
add
mov
cmp
js
sbb
ret
imul
es
lcall
xor
mov
inc
ret
std
nop
mov
mov
addb
cmpsl
adc
in
mov
out
jecxz
mov
pop
dec
cmp
inc
mov
mov
mov
pop
mov
fldcw
xor
and
push
xchg
mov
bound
loope
pmulhw
fiaddl
call
inc
scas
mov
fwait
ja
jo
dec
rcrb
sahf
mov
mov
sub
shll
sbb
cmpsl
push
push
sub
adc
add
stos
stos
ss
fcomi
mov
lcall
add
pop
dec
decl
scas
pushf
ret
cld
sub
lcall
xchg
mov
cli
test
pushw
ja
lahf
lods
scas
push
add
out
je
lods
ret
push
pop
popa
andl
ljmp
int3
cmp
mov
bound
mov
adc
adc
inc
jl
adc
out
cli
or
cmpsl
mov
aaa
lret
push
mov
jb
mov
aad
movsb
push
jecxz
dec
movsb
outsb
inc
pop
in
cmpsl
mov
xchg
xor
call
fwait
sahf
xor
push
pusha
ja
call
lds
add
movsb
enter
push
aad
mov
xor
add
and
aas
in
pop
jge
mov
mov
pop
dec
adc
xchg
pop
pop
cmc
cmp
mov
dec
jp
and
paddusb
loope
lret
push
jmp
pop
loopne
cs
push
sub
pushl
dec
mov
pop
push
cmp
jns
cld
sbb
cs
jo
or
or
mov
les
mov
stos
pop
loopne
fbstp
hlt
ficompl
jo
ficomps
and
fabs
int
sbb
cmp
xchg
push
jmp
out
inc
pop
jl
shll
pop
stos
or
stos
jae
ds
inc
iret
adc
inc
mov
cli
inc
cmp
scas
push
mov
scas
jmp
mov
in
sbb
or
mov
pop
sbbl
push
mov
jno
je
push
daa
outsb
nop
rcr
outsb
pop
mov
cwtl
sbb
lret
pop
sahf
mov
push
push
iret
jne
cmp
test
mov
jle
mov
xchg
mov
xchg
add
mov
andb
addr16
ljmp
shll
fwait
jae
sub
adc
push
inc
or
nop
inc
aad
aas
imul
or
cmp
xlat
aaa
jl
pushf
aaa
pop
daa
xlat
mov
mov
call
pusha
adcb
cmpl
mov
lret
out
cmp
dec
mov
cli
fcomps
sbb
inc
pop
mov
out
cmp
inc
lahf
mov
les
jne
push
sbb
lods
pop
repz
dec
adc
idivl
xchg
adc
sub
inc
mov
mov
testl
repnz
xchg
add
cmp
or
iret
sarl
ret
lock
push
lods
cmp
lahf
lods
cmpsb
ror
imul
fstpt
out
pop
pusha
jo
cmpl
cmp
lods
pop
jmp
test
pop
in
nop
aaa
mov
fs
pop
and
stos
or
jb
into
mov
inc
imul
sbb
xchg
push
jbe
or
out
sbb
fnsave
jns
std
and
jecxz
xchg
mov
test
in
push
aas
mov
xchg
sti
addb
fs
shlb
cld
add
test
xchg
orb
pop
loopne
mov
loopne
or
shlb
ror
mov
popf
cmpsb
jmp
lcall
into
pop
std
out
sub
mov
push
xchg
stos
adc
add
data16
cld
cmp
scas
je
add
call
pop
jne
pop
sbb
mov
shll
test
sub
jp
cmc
adc
fsts
and
mov
mov
pop
dec
shr
push
mov
push
popl
fisubrs
mov
push
sub
sti
xchg
arpl
lods
arpl
inc
jp
aad
and
pop
aaa
jl
or
or
scas
mov
ds
jp
mov
loop
xchg
lds
ds
sbb
das
nopl
imul
xchg
popf
and
xor
ljmp
xchg
push
mov
mov
add
fsubrs
and
pusha
icebp
inc
adc
push
addr16
das
mov
mov
xlat
mov
int
gs
aad
imul
ljmp
cs
or
lods
sti
adc
cmp
cli
xchg
clc
pop
je
shl
test
outsb
mov
pop
pop
inc
or
mov
sti
sahf
xor
mov
mov
mov
pop
push
rcrb
xchg
daa
iret
clc
pop
arpl
lods
jp
and
mov
mov
push
inc
loop
pop
ja
lods
jbe
insb
sub
pop
push
dec
cwtl
cli
adc
mov
jp
pop
fimull
xchg
mov
push
dec
and
and
pusha
inc
jecxz
inc
mov
mov
ss
pop
add
xchg
int3
das
push
adc
rcll
mov
xchg
jg
outsl
mov
mov
pop
xor
ja
in
jl
cmp
lcall
jno
scas
roll
dec
divb
in
jl
and
and
lock
adc
lret
inc
pop
or
mov
out
jb
inc
jge
adc
adc
push
or
je
push
and
das
lret
cmp
mov
in
loop
cld
mull
or
movsl
sti
push
sbb
repnz
cmc
cmp
insl
push
iret
mov
cwtl
and
xor
loopne
andnps
jmp
cli
push
in
lret
movl
dec
mov
sbb
addl
add
adc
psadbw
sarl
sub
jne
dec
and
int
jns
mov
push
fidivrl
subl
jne
mov
jl
test
push
fnsetpm(287
inc
cmp
sub
jbe
fsts
daa
xchg
ja
xchg
icebp
mov
mov
pop
pop
cmp
inc
jge
push
pop
lret
adc
mov
jp
sahf
pop
jg
icebp
cmp
dec
cmp
jge
dec
in
les
ret
mull
and
mov
sub
and
lcall
rcl
cwtl
cmpsl
sahf
jg
cli
fisubs
inc
popf
push
mov
pop
mov
fldt
xor
cmp
xor
cmc
and
xor
cld
mov
test
dec
icebp
sbb
imul
stc
push
sub
outsl
inc
inc
sbb
test
aam
out
xchg
mov
int
and
adc
scas
jmp
mov
mov
stos
pop
test
mov
out
xor
sbb
and
out
or
insl
and
cli
dec
add
scas
inc
test
jle
and
mov
push
fwait
cmpsl
adc
add
stos
clc
cmp
fdiv
popa
adc
and
cli
mov
pop
add
das
cmp
negl
mov
imul
icebp
hlt
sub
outsl
xor
jo
jne
push
fdivs
popa
negb
mov
aam
jnp
fildll
push
std
add
rorl
inc
shl
repnz
jl
out
and
xchg
jns
inc
lret
notb
fimull
pop
scas
push
rcll
jp
out
add
mov
mov
jo
push
mov
mov
leave
adc
in
shlb
dec
dec
dec
scas
les
movsl
xchg
push
cmp
dec
in
jecxz
xchg
cmpsl
cmp
aam
loop
or
pmuludq
imul
rcrl
lcall
cmp
test
cmp
push
sub
mov
daa
push
jl
cs
inc
sub
adc
and
sub
loope
pop
mov
daa
lock
and
push
xor
push
add
pop
add
pop
push
ja
call
popa
ss
mov
push
cltd
xchg
jne
call
push
into
in
daa
mov
mov
sbb
adc
jecxz
test
out
push
popa
push
sahf
adc
hlt
add
push
add
xor
jns
xor
icebp
arpl
sbb
mov
dec
or
in
leave
push
loop
mov
jg
jbe
sbb
imul
cmpsb
dec
out
add
in
into
sbb
mov
pop
addr16
and
test
fldcw
jmp
sub
imulb
ds
mov
xchg
ja
stc
inc
hlt
pop
xchg
insl
push
mov
ljmp
ss
mov
inc
mov
addr16
add
or
mov
into
cmp
rcrl
mov
add
pushf
mov
xor
addr16
sbb
push
pop
fisubl
mov
out
add
les
adcb
cmc
sub
arpl
lea
in
testl
xor
scas
mov
iret
xchg
mov
arpl
and
lds
mov
cmpsl
cmpsl
stos
rorb
mov
nop
mov
outsl
aad
aaa
xor
xor
arpl
pusha
mov
xor
fwait
lahf
or
pop
or
and
and
or
in
icebp
inc
out
test
mov
adcb
sbb
pcmpgtb
aaa
fwait
sub
imul
aaa
test
test
sub
repz
and
cmp
hlt
pop
push
cltd
and
push
cmpl
popa
jns
or
push
pop
adcl
cmpsl
lahf
out
ljmp
test
mov
adc
cmpsl
rcrb
sbb
and
pop
das
cs
test
ja
neg
and
mov
dec
in
xchg
or
shll
add
and
dec
jecxz
or
sbb
scas
cmpsb
imul
jge
dec
sub
lahf
rcr
mov
aad
in
and
loope
movsl
stos
push
mov
jns
xrelease
push
test
jmp
sbb
test
fs
push
xor
pop
sub
aaa
push
or
dec
or
into
bound
fisubrs
aaa
dec
adc
add
xor
fisubrl
lahf
popf
aaa
and
jl
mov
adc
aam
test
iret
data16
push
pop
adc
gs
mov
fxch
lea
test
push
sbb
nop
das
mov
jns
push
ja
out
scas
pushf
pop
orb
stos
es
test
arpl
pop
dec
lea
inc
mov
mov
jno
push
adc
dec
xlat
add
xor
and
les
sbb
cmpsb
lret
popa
pop
ljmp
dec
adc
into
push
jo
lcall
mov
cmp
jno
mov
jecxz
xchg
stos
in
cltd
jp
inc
pop
ret
jecxz
and
jns
stos
clc
dec
fcmovbe
rcrl
push
pop
lret
negl
out
out
lret
adc
dec
push
fcompl
out
test
push
cmp
add
sub
xor
pop
in
stos
fwait
cltd
jecxz
dec
push
adc
fwait
fs
pop
sbb
mov
div
push
push
sarl
test
movsw
std
dec
add
lahf
mov
into
cmpsb
inc
and
adc
push
ficoms
xor
mov
inc
dec
lods
jo
ss
stos
xchg
aam
mov
sub
xor
xchg
xor
xor
sbb
xchg
xchg
xchg
popa
push
jnp
pop
sbb
fst
sub
pop
jge
adc
in
push
jecxz
data16
sti
outsl
ljmp
and
mov
sub
aam
imul
out
shrb
dec
adc
jae
nop
jbe
xor
jne
cmc
int
out
mov
cmp
push
sarb
test
dec
pop
orl
imul
loop
dec
fcmovnbe
out
mov
cs
fmul
adcb
dec
mov
addl
ret
sti
das
int
popf
inc
jle
mov
lret
icebp
jge
mov
add
stc
leave
add
sar
pusha
movsb
jg
into
cmp
sub
mov
clc
mov
test
fldcw
inc
stos
psrlq
push
mov
cmp
into
stos
sub
outsb
mov
fxch
mov
pop
sbb
add
inc
and
psubusb
adc
clc
dec
sub
or
or
dec
iret
sub
adc
fadds
psadbw
pop
repz
ficomps
mov
adc
jmp
fmuls
test
push
aas
and
pop
loope
sbb
imul
or
push
add
in
jge
jno
or
data16
stos
jno
jmp
mov
sub
lcall
pop
mov
aaa
movsb
cmp
int
mov
xor
xor
push
arpl
imul
out
popa
loopne
rcll
cmp
pop
inc
lret
push
jnp
je
ss
mov
stos
ret
mov
jb
aad
dec
mov
sbb
ret
stos
push
mov
popf
rcr
fldenv
icebp
mov
push
fsubs
cwtl
dec
shll
and
out
push
jmp
stc
mulb
hlt
in
xchg
ret
inc
cmpsb
dec
mov
outsl
test
idivl
pop
add
sbb
pusha
jne
mov
fdivl
int
shl
pop
and
mov
enter
lret
repnz
out
inc
iret
xor
mov
jge
adc
negl
dec
sahf
add
testl
and
ss
jae
mov
lcall
popf
cs
fcomps
pop
stos
outsl
mov
push
fdivrs
jmp
cmp
ret
subl
xchg
sbb
push
loopne
or
xor
test
mov
inc
in
xor
pop
int
xchg
fidivrs
xchg
cmp
or
xor
loope
bound
push
enter
rorl
inc
sarb
jle
mov
lds
mov
insb
out
push
add
clc
lock
cmp
dec
xchg
mov
imul
jmp
cmp
pop
xor
push
xchg
loopne
push
sbb
cmp
aas
cmpsl
mov
lea
rep
sbb
push
pop
or
aaa
out
les
inc
bound
cli
mov
push
clc
add
fwait
sti
xchg
cld
push
push
fstpl
mov
cmp
lods
lret
mov
pop
clc
push
nop
popf
mov
mov
fiaddl
cmc
sbb
sub
fcomps
fildll
fisubrl
insl
inc
idivl
lock
jne
push
push
movsl
jle,pn
inc
cmc
xor
out
rep
push
sbb
popa
addr16
dec
outsl
arpl
pop
setl
pop
mov
add
fcomip
scas
test
cwtl
adc
jl
dec
cltd
cmp
hlt
out
rorl
fmuls
mov
sub
nop
arpl
inc
insb
fstpl
xchg
mov
popl
loop
es
dec
fsubl
mov
jne
push
insl
jl
xor
fs
fidivl
rcrl
adc
lahf
imul
jns
mov
sbb
mov
inc
jnp
fildll
mov
fwait
ret
fimuls
cmp
sbb
cli
mov
scas
std
in
aaa
out
xor
fdiv
ds
fsincos
dec
out
popa
mov
scas
ja
sarb
ficomps
sbb
inc
shrl
notl
inc
mov
mov
xchg
in
fstpt
clc
jmp
add
cmpsl
stos
sti
mov
popa
sub
jmp
mov
aaa
sti
pop
scas
mov
sub
pushf
sbb
mov
lods
and
push
lret
mov
das
test
mov
push
cmp
and
sub
notl
push
mov
outsl
mov
mov
lcall
pop
mov
rcr
jecxz
inc
imul
cmp
sbb
or
or
repz
pop
push
arpl
push
cmpsb
mov
jns
cmpl
add
jnp
inc
adc
inc
adc
xchg
cmp
or
mov
add
ja
pop
arpl
push
jle
fsubs
insb
in
cmpsl
adc
les
enter
je
jecxz
adc
add
call
add
dec
lea
icebp
mov
pop
pushf
or
lcall
rcrb
cwtl
cli
fnstsw
stc
adc
adc
scas
mov
xor
pop
call
jae
jo
pop
jge
in
divl
jbe
std
xchg
popf
and
add
add
cmp
in
push
jg
into
dec
fwait
ss
filds
mov
scas
fcomps
and
std
scas
cwtl
push
add
cli
sub
mov
push
pop
inc
popa
leave
sub
sub
imul
sub
jne
jb
mov
dec
adc
push
out
push
addl
xor
xchg
jae
and
inc
daa
outsl
push
adc
int3
pop
mov
loop
stc
mov
mov
inc
cmpsb
dec
frstpm(287
pushf
push
dec
mov
fisubrs
ret
rorl
imull
pop
sub
cmp
sbb
push
mov
push
jmp
fistl
push
and
and
fcom
ja
test
jg
sahf
push
xchg
sahf
mov
xchg
cmp
cmpsl
arpl
loop
push
or
lock
stos
push
pop
push
outsb
mov
pop
push
xchg
popa
in
lods
imul
pop
daa
or
lcall
mov
sahf
cltd
mov
ds
inc
fnstenv
dec
xor
xor
out
and
dec
mov
cmp
mov
lods
add
jle
or
or
xchg
cld
add
or
imul
decl
scas
out
inc
xor
mov
jl
push
push
inc
icebp
xor
mov
xchg
fadds
push
mov
xchg
mov
fwait
mul
js
mov
and
push
inc
inc
and
push
rol
lret
mov
sbb
push
mov
out
rclb
test
nop
aad
add
mov
mov
sub
stos
dec
scas
les
mov
sub
sti
xor
mov
arpl
imul
sub
add
jge
push
std
outsb
in
and
pop
mov
cs
inc
sti
inc
push
dec
test
xchg
sbb
jmp
xchg
cwtl
xlat
jp
fucomip
dec
add
jno
fsubr
scas
jl
je
imull
xchg
out
cmp
aaa
hlt
add
gs
nop
push
push
mov
sbb
jae
es
jns
cwtl
mov
push
lcall
es
mov
mov
or
sbb
rcrl
mov
push
jno
xor
inc
fcom
mov
xchg
pushl
adc
add
add
and
and
filds
rorl
add
mov
test
pop
sub
ja
inc
jo
xchg
pop
test
loop
popf
pop
insb
xor
sub
lods
enter
std
mov
pop
add
sub
repz
sub
outsb
je
lods
scas
popa
ja
gs
jno
repnz
daa
mov
pop
sbb
jae
jbe
xchg
xor
jg
ja
lret
dec
out
or
dec
xor
jbe
cmpl
dec
frstor
push
xchg
mov
pop
icebp
or
inc
cwtl
rcll
sbb
dec
or
lret
andl
mov
jmp
mov
xor
dec
push
adc
fstpt
cmpsb
cmp
not
push
outsl
sub
mov
cld
mulb
sbb
fistpl
inc
sub
cltd
stos
xor
insb
std
stc
lret
xlat
sarl
add
int3
or
out
xchg
or
add
movsl
push
push
adc
xchg
jl
stos
leave
mov
pop
sub
add
add
xlat
addr16
add
scas
jl
jle
mov
adc
fs
lret
lret
push
dec
popa
out
shr
in
loopne
je
add
rcl
mov
jp
sub
jmp
jle
int3
lds
xchg
adc
andl
push
bound
and
cmp
int
push
jl
mov
or
mov
or
and
adc
xor
mov
sub
cmp
jp
leave
test
cwtl
or
push
add
popa
lods
xchg
hlt
pop
fbstp
inc
aad
pop
add
stc
scas
jp
nop
pop
ds
mov
xchg
cmp
push
mov
inc
je
pop
test
mov
scas
cltd
gs
xchg
js
in
push
xlat
flds
jl
pop
mov
mov
test
cmp
daa
jl
in
jbe
scas
sub
das
inc
out
mov
pop
fbstp
insb
xor
cmp
mov
fwait
cltd
sbb
dec
push
mov
sub
popf
inc
sub
add
push
roll
aad
and
mov
fisubrs
out
clc
jmp
xchg
cmp
mov
shll
mov
shll
mov
ljmp
mov
push
push
gs
and
xor
push
xorb
inc
cmpsl
mov
in
or
fprem1
pop
insb
fimull
add
xchg
repnz
mov
aas
fcompp
mov
push
inc
mov
lret
std
mov
cli
xchg
loop
out
mov
lret
je
fwait
loopne
lods
pop
xor
rcll
call
push
fnstsw
jo
test
or
inc
mov
mov
mov
rorb
ss
test
aaa
adc
cmpsl
inc
js
mov
jb
fwait
xor
push
adc
and
add
mov
dec
pop
lcall
or
add
sti
adc
out
and
and
xchg
sbb
test
aas
in
mull
inc
loopne
xchg
popf
test
xchg
dec
scas
xchg
inc
mov
fwait
mov
adc
push
sti
and
mov
sub
insl
loop
loopne
cmp
add
cwtl
xchg
ds
cmp
sub
out
mov
cmp
sahf
sub
and
add
lods
sub
rorl
pop
push
or
jns
inc
jo
cmpsl
lods
dec
iret
mov
cltd
pop
sub
test
or
lret
call
push
cltd
xor
lret
fdivl
mov
arpl
pop
fcmovnb
ret
movsb
cltd
cmp
push
fs
sbb
ljmp
mov
push
mov
hlt
cltd
mov
pop
repnz
jae
push
enter
cmp
imul
cli
fdivr
dec
clc
test
inc
or
pop
push
inc
mov
ret
sub
jp
mov
or
mov
mov
lret
xchg
out
fwait
mov
inc
movsb
mov
sbb
stos
addr16
jnp
pop
lds
xor
sbb
in
clc
adc
add
push
xchg
je
add
fsubrl
movsb
imulb
stc
jle
jmp
addl
xlat
xor
leave
ss
ss
mov
ja
dec
inc
adc
sub
stos
mov
ss
mov
jle
cltd
sbb
add
add
stc
fmul
or
xor
dec
and
inc
lods
xchg
fistl
gs
or
xor
outsl
sub
mov
mov
je
addr16
fwait
call
into
mov
push
push
cltd
leave
push
mov
clc
push
pop
inc
xor
push
inc
imul
testl
push
mov
mov
enter
mov
add
mov
mov
jnp
mov
mov
ljmp
sub
push
sti
cmpsb
or
hlt
rorb
pop
ljmp
mov
sub
mov
dec
int3
pop
test
push
lret
mov
popf
inc
imul
into
mov
lcall
shll
into
add
or
out
test
insb
lahf
idivb
sub
add
pop
xorl
cwtl
scas
mov
adc
loopne
cmpsl
push
dec
cmp
movsb
loopne
test
cltd
dec
movsb
stos
daa
mov
int3
out
jg
cmp
jl
mov
mov
inc
xorb
gs
add
jo
mov
ljmp
cmp
jo
inc
js
stos
out
int
in
inc
pushf
jg
push
mov
test
cmp
leave
adc
pop
push
inc
mov
movsl
int3
sub
dec
mov
push
sahf
jne
aad
inc
dec
mov
shl
mov
test
loop
scas
cwtl
lret
xor
repnz
lret
sbb
cld
movsl
lds
ffree
adc
pusha
lahf
call
mov
jb
fs
outsb
icebp
pushf
sahf
loop,pn
cmpsb
fildll
add
movsl
inc
lret
popf
xor
jnp
jb
clc
in
cmpsl
cmpsl
mov
cmp
sbb
push
outsl
jae
adc
xchg
jle
push
push
add
sbb
in
xlat
popa
sarb
notl
mov
pop
jmp
adc
mov
pop
and
das
adc
pop
push
gs
adc
jbe
cmpsl
cmp
test
test
mov
sub
test
scas
pop
aas
movsl
fucomp
inc
mov
or
sahf
dec
test
jno
fisubrl
mov
jg
lret
lods
and
jbe
mov
into
fnsave
add
push
sahf
movsl
or
int3
jne
cmp
fdivp
lods
cmpsb
ja
push
insb
push
xchg
aad
ds
cmc
push
icebp
mov
imul
rol
xor
test
mov
inc
sti
mov
std
sti
add
rcrl
mov
fisubl
fcmovnbe
jmp
xlat
add
xchg
mov
imul
xchg
popa
cmp
or
lret
sbb
add
xchg
test
push
cmp
push
ljmp
jo
pop
divb
outsl
add
arpl
mov
lods
sarl
rep
ficompl
xchg
test
xchg
or
int3
jo
ja
cmpsb
lcall
add
push
test
pcmpeqd
outsb
mov
xorb
mov
or
ja
add
xchg
dec
cmpl
push
mov
or
repnz
mov
movsl
mov
mov
cwtl
jne
or
mov
add
mov
mov
imul
cmp
sbb
cltd
or
push
and
stos
jmp
mov
sbb
js
js
aad
push
repnz
insl
shll
adc
inc
arpl
sub
lods
push
in
cli
cmp
mov
xlat
scas
jbe
push
dec
dec
adc
pop
imul
xor
ds
in
cli
push
jo
adc
test
jle
add
cs
aad
enter
push
and
inc
fisttps
cmp
hlt
and
sub
jb
mov
lahf
into
ret
enter
inc
je
cmp
cmc
or
jle
imul
lcall
test
dec
inc
das
inc
pop
cs
jg
out
arpl
loopne
inc
add
cmp
jo
lcall
mov
je
ds
push
cmc
negl
fld
mov
outsl
fucomi
hlt
push
xchg
mov
and
jae
lock
pop
orb
pushf
lahf
xor
mov
lods
pop
adc
add
shl
sub
mov
and
mov
sub
jne
inc
mov
sbbb
xchg
sub
jl
xchg
sbb
rcr
movsb
cmpl
jmp
dec
xor
arpl
das
arpl
push
or
fwait
hlt
add
sbb
ja
fs
std
and
negb
xchg
mov
add
ret
ja
jb
imulb
pop
shrl
fiadds
lret
sbb
push
push
cli
push
and
out
or
repz
jne
neg
sub
add
sub
data16
into
pop
mov
lea
int3
hlt
out
mov
push
mov
ficompl
or
mov
movsb
and
jns
aas
jae
stos
mov
dec
lea
cld
jns
repnz
ss
mov
or
push
repnz
xlat
lahf
imul
loop
out
and
test
mov
xchg
add
xor
sbb
lods
mov
shl
ret
clc
push
lock
fsub
rcll
xchg
int3
mov
jge
dec
push
dec
sub
in
jne
sbb
mov
mov
out
sarl
mov
mov
bound
mov
cmc
xchg
push
cmpsb
mov
mov
imul
push
or
mov
push
leave
jp
movsl
mov
pop
mov
inc
movsl
pop
fwait
jmp
fwait
in
sub
xor
out
loopne
popa
pop
pop
jle
mov
lcall
fsubr
test
addr16
pop
dec
aaa
aas
addr16
loope
popa
inc
jae
jns
xchg
popa
sbb
mov
sbb
vpaddd
pop
xor
addr16
push
daa
rolb
fstpl
mov
fdivrs
imul
imul
xchg
jg
arpl
jbe
jo
push
ret
outsb
aaa
mov
stos
inc
sti
jno
pusha
idivl
inc
and
or
push
stos
add
andnps
push
inc
mov
jnp
fsubl
loope
inc
inc
out
lahf
into
push
adc
cs
xchg
sarl
fidivrs
jmp
dec
ss
shrb
leave
mov
mov
xor
xor
subl
lea
mov
sbbl
xor
adcl
div
movzwl
add
mov
movl
cmpl
je
cmpl
jb
jmp
pushl
call
cmpl
jne
mov
dec
mov
xor
add
dec
mov
jmp
mov
xor
xor
sub
movl
cmp
movl
jne
mov
mov
sbb
mov
mov
orl
xor
xor
add
add
mov
movl
cmp
movl
jae
mov
xor
lea
mov
andl
mov
inc
mov
cmpl
ja
jmp
push
pushl
call
cmpl
jb
mov
orl
xor
xorl
add
lea
mov
movl
mov
movl
cmp
jbe
xorl
addl
movl
jmp
orl
addl
mov
andl
xor
xorl
inc
subl
incl
add
movl
cmp
jb
andl
mov
inc
mov
cmpl
jb
jmp
pushl
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
xor
mov
xor
mov
sub
addl
add
sbb
mov
subl
xor
sub
subl
ror
sub
xor
mov
add
mov
mov
mov
sub
and
mov
movl
cmpl
je
cmpl
jbe
jmp
push
call
mov
dec
mov
jmp
mov
negl
sub
subl
xor
movl
cmp
jne
mov
mov
xor
xor
sub
sub
xor
mov
mov
xor
mov
sub
jmp
mov
xor
mov
sub
add
mov
mov
cmp
jne
movl
mov
xor
add
jmp
lea
mov
mov
sub
mov
mov
mov
mov
movl
mov
movl
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
ja
mov
mov
mov
sub
xor
xor
add
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
mov
mov
movl
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
jmp
mov
mov
xor
lea
lea
xor
cmp
jne
decl
jne
mov
mov
mov
xor
mov
xor
mov
xor
mov
mov
xor
jmp
outsb
pop
or
push
pop
xor
cld
fwait
pop
dec
jge
inc
pusha
addl
pusha
add
faddl
pusha
ret
mov
and
int
pop
stos
pop
fwait
adc
mov
inc
pop
cmp
mov
test
pop
sti
js
ja
jne
jb
jo
add
mov
stos
aam
sti
rdmsr
fisttps
sub
insb
cld
xor
and
pop
call
fnstsw
mov
lds
lea
sbb
gs
loop
mov
ret
loopne
insb
notb
or
jecxz
aaa
clc
insl
mov
cmp
inc
cmc
inc
pop
cmpsl
fstsw
push
loope
mov
outsb
push
cli
mov
ja
outsb
aam
jle
pop
xchg
inc
std
xlat
loopne
push
dec
push
lea
rclb
xchg
je
jnp
xlat
bound
mov
shl
bound
mov
cmp
and
or
pop
orl
add
out
into
dec
and
cmp
lret
sbbl
bound
fadds
xor
testb
and
adc
fs
xor
dec
scas
push
cmp
ja
repz
mov
aas
out
test
lods
outsl
sbb
pusha
or
mov
jle
icebp
mov
sbb
pop
mov
adc
cltd
sbb
mov
call
add
mov
dec
jmp
xchg
and
popf
jae
out
mov
mov
sbb
cmpsl
std
xor
fdivrs
mov
fnstenv
pop
mov
outsb
push
mov
into
sbb
add
insl
mov
and
movsb
push
or
jne
or
test
or
mov
ss
imul
inc
pop
xchg
or
add
imul
out
popf
sub
fwait
lock
sub
pop
pop
mov
loope
mov
ja
adc
cmpsb
xchg
sub
das
fsubrl
cmp
pop
dec
cld
rclb
mov
push
stc
pop
push
mov
pop
xchg
and
inc
mov
lret
mov
mov
xchg
jns
ret
sub
test
push
jne
dec
add
jb
ljmp
push
ret
ljmp
mov
sub
jns
fmulp
sub
add
stos
xor
scas
mov
mov
ss
call
push
lock
mov
cli
xor
cmp
pop
lock
mov
clc
xor
cs
fs
outsl
inc
cs
or
loopne
aas
pavgw
in
les
repnz
fs
adc
imul
gs
sbb
adc
pop
inc
add
clc
aaa
add
xor
out
outsb
cvttps2pi
int
jg
sbb
leave
pushf
pop
pop
stos
rcr
xchg
fdivrp
and
xor
cmc
jns,pt
and
mov
daa
sahf
inc
ret
scas
pop
inc
out
xorb
push
add
xorb
fwait
aad
pop
out
fbld
divps
dec
mov
mov
adc
mov
fcoml
mov
dec
in
mov
push
icebp
out
add
add
loopne
sbb
push
stc
repnz
push
mov
clc
xor
lret
clc
push
repnz
pushf
lods
jge
push
cmp
pop
loope
data16
jle
and
jnp
and
test
or
sbb
imull
lock
cli
sub
or
mov
and
mov
inc
and
cmp
fdivs
adc
dec
out
push
or
test
call
sahf
xchg
inc
dec
addr16
mov
das
xchg
mov
rcrl
sbb
xchg
xor
and
push
push
scas
mov
adc
inc
std
push
cmp
les
dec
addr16
mov
xchg
aaa
xchg
adc
loop
repnz
jp
add
mov
lds
int3
or
mov
lds
shl
and
xchg
in
jecxz
mov
out
ror
scas
pop
movsl
lret
scas
aas
in
ret
add
xchg
scas
daa
nop
sbb
stc
in
and
js
fisubs
inc
aam
dec
dec
push
and
cmc
jb
jbe
sti
gs
sti
outsl
lret
adc
push
outsb
lret
popf
push
imul
je
jge
outsb
mov
mov
fisubs
sbb
rcrb
pop
cmc
repz
pop
ds
inc
adc
imul
loop
cs
pop
in
mov
and
jecxz
pop
gs
aam
cmp
jge
es
pcmpgtw
ss
fidivrl
sub
xor
mov
fisubrs
mov
scas
dec
cmpsb
dec
shll
sub
xorb
insl
test
out
xchg
mov
jg
push
dec
inc
clc
loope
sbb
enter
dec
xchg
dec
repnz
cmp
xor
fstl
xchg
push
push
sub
and
ja
dec
loopne
mov
jmp
cmp
loop
sub
xchg
xor
insb
xor
xchg
imul
out
push
dec
pushf
mov
dec
xor
int3
and
inc
test
lahf
cs
add
daa
shlb
sub
pop
or
les
aaa
cmpsl
iret
sbb
mov
repz
imul
fcomip
cmpsl
stc
add
sahf
call
cli
jmp
mov
dec
pop
jne
fidivl
test
mov
popf
inc
scas
mov
pusha
jo
js
outsb
mov
sub
and
rcr
insl
sbb
rcll
dec
xor
in
sbb
orb
push
and
pop
int3
loopne
aaa
jl
and
icebp
cli
push
jae
scas
js
jecxz
push
dec
sbb
pop
inc
mov
xchg
sbb
inc
inc
test
add
pop
punpckldq
addr16
inc
xor
mov
push
mov
shll
jg
add
add
push
imul
mov
jle
push
outsl
scas
into
dec
ljmp
mov
xchg
jne
dec
lahf
test
int
mov
add
mov
mov
jns
in
addr16
jle
fbstp
mov
scas
dec
int3
lret
subb
push
dec
ret
inc
xor
dec
pushf
inc
and
push
inc
mov
bnd
and
mov
jbe
repnz
scas
mov
mov
add
xchg
mov
imul
in
xor
shll
lods
insb
sub
cwtl
push
push
int
out
and
ficoml
outsb
imul
int
rcrb
jbe
test
mov
adc
xchg
mov
push
ret
jo
dec
insb
add
sbb
or
pop
jg
fistps
xchg
out
int
ss
adc
lret
mov
mov
loopne
sahf
xor
push
lret
jl
xchg
mov
in
repnz
movsb
mov
mov
pushl
mov
adc
mov
sub
scas
mov
mov
lret
pushf
sarb
cmp
les
loop
sbb
mov
loope
test
mov
add
jge
pop
int3
fiadds
fcmovnbe
negl
inc
outsb
cmp
cmp
xor
xchg
mov
xor
test
sti
scas
lcall
mov
divl
cmovo
mov
add
test
mov
ficompl
mov
sahf
imul
iret
enter
sub
add
push
mov
jbe
xor
rcrb
sub
std
int
cmpsb
dec
fxch
mov
xchg
jg
ss
pop
jae
cmpsl
mov
daa
jo
jmp
pop
push
pop
fnstcw
lods
jno
outsl
mov
std
cmp
std
cs
pop
sbb
xchg
les
enter
lret
adc
jne
push
pop
mov
sbb
xchg
mov
repnz
decl
gs
stos
mov
addr16
and
mov
pop
push
subl
xchg
jecxz
adc
in
dec
mov
jnp
mov
and
or
push
fwait
daa
mov
xor
cmp
push
dec
adc
js
repz
xor
jl
dec
inc
popf
sahf
inc
add
addr16
fdivl
mov
jne
out
dec
js
ljmp
or
mov
dec
lock
dec
je
cmp
int
dec
add
cmpsb
dec
repz
loope
aad
pop
lret
insb
fisubrl
mov
cmp
rol
or
addr16
jg
and
pop
int
insl
jecxz
ficomps
mov
insb
jmp
clc
jne
iret
enter
xchg
dec
test
and
xor
std
bound
cmpb
sub
cmp
and
xchg
adc
or
out
mov
adcl
push
jne
shl
sti
add
or
inc
imul
xchg
jl
sarb
xchg
ret
repz
cmpsb
leave
iret
mov
push
inc
xchg
mov
lods
add
cmpsb
sub
and
lret
jmp
arpl
inc
pop
push
or
or
push
push
mov
adc
cmp
xor
je
inc
hlt
insl
sbb
or
dec
iret
push
xor
mov
cltd
jl
lds
or
fmulp
test
das
into
pop
out
scas
mov
or
add
movl
test
fsub
add
ficoml
pop
sahf
pop
sub
rcrb
cmpsb
xor
scas
sub
loope
add
ja
in
jo
sbb
mov
lods
cwtl
cli
les
inc
gs
dec
mov
or
add
enter
adc
inc
pop
lods
inc
inc
mov
das
dec
arpl
shll
pushf
enter
or
ficomps
xchg
inc
fwait
add
addl
sub
ljmp
clc
std
mov
jnp
or
cmp
loopne
push
push
mov
test
into
lods
rorl
dec
mov
pop
adc
and
das
jns
dec
sbbl
cmp
nop
hlt
inc
add
pop
in
rolb
ljmp
sbb
scas
add
xchg
sahf
popl
mov
ret
mov
mov
pop
mov
mov
outsb
les
mov
mov
inc
stos
das
das
in
adc
push
cmp
fdivrs
fptan
sub
xchg
repnz
in
inc
mov
mov
fldt
mov
sbb
sarl
test
hlt
arpl
fldcw
and
sub
aas
roll
out
xlat
insl
enter
lock
mov
insb
push
daa
lea
out
test
nop
inc
fwait
pop
jp
test
roll
mov
dec
add
or
out
xchg
iret
outsb
mulb
cmpb
bound
cli
jmp
stc
sbb
pop
jo
inc
push
pop
lret
fisttps
mov
fisttps
je
sub
stc
mov
leave
xchg
loop
adc
scas
in
incb
out
xor
out
lcall
pop
inc
into
adc
incl
sarl
testl
ds
lods
or
push
jo
and
or
loop
cmp
into
fistpl
fisttps
pop
lahf
and
test
xchg
inc
rolb
test
insl
ficompl
jg
mov
jmp
movd
push
fwait
bound
sti
xor
lea
outsb
cltd
mov
repnz
rolb
jnp
cs
dec
lods
pop
adc
adc
mov
mov
out
sub
pop
aaa
dec
push
pushf
punpcklbw
sub
popa
loopne
pop
stos
aam
jmp
inc
cmp
xor
lcall
xchg
popf
vpslld
pop
and
xlat
lea
and
fdivl
enter
outsl
stc
pop
fcoml
mov
mov
fs
fnsave
or
mov
mov
mov
aas
das
hlt
negb
mov
sub
and
inc
and
push
cmp
loopne
enter
xchg
push
pop
add
mov
out
sahf
hlt
stc
mov
ffree
lcall
repz
push
aas
and
enter
dec
pop
mov
sahf
xor
ret
sub
mov
fldln2
sub
rcrl
adcl
or
in
ret
arpl
and
lods
pop
mov
les
dec
add
movsb
mov
inc
xor
adc
call
inc
adc
or
aas
out
shl
stos
mov
call
pushf
inc
mov
fwait
push
outsl
sub
pop
sub
daa
push
movsb
aad
rol
mov
es
or
xchg
lret
push
jle,pn
push
add
mov
push
in
cmpsb
pop
repz
adc
fcompl
ja
stc
repnz
test
out
jp
int3
testl
lret
mov
imul
push
adc
push
jae
add
xor
lock
jg
fsubp
pop
push
dec
adc
cltd
adc
and
nop
and
pop
xlat
cmc
shll
mov
nop
stos
pop
inc
sbb
dec
ror
mov
jg
fucomp
popf
jbe
cld
mov
inc
lcall
int
jp
subb
test
cmpsl
into
into
jae,pt
add
xor
xchg
mov
inc
xchg
and
test
sub
jle
enter
xor
je
loopne
insl
out
in
inc
int3
rorl
icebp
aaa
or
incl
xor
xchg
jle
jbe
cmp
incl
pop
movsb
insl
mov
movsl
out
or
inc
add
fildl
cmp
xchg
pusha
and
repz
movsb
jno
pop
pop
cmp
jecxz
daa
fstps
bnd
test
aam
jmp
adc
stos
and
and
or
mov
loope
cld
clc
add
add
xor
imull
loope
and
call
sbb
adc
loopne
shlb
dec
dec
popf
push
lods
xchg
xchg
mov
insb
add
ret
enter
lock
pop
repz
adc
gs
push
xchg
pextrw
or
mov
call
mov
dec
mov
loop
xor
sbb
push
sub
add
rol
popf
push
inc
scas
mov
js
jb
ljmp
jl
xor
sub
into
enter
pop
fcoml
or
jnp
dec
adc
fildl
xor
adc
mov
inc
cmp
addr16
insb
pop
popa
jl
jb
or
push
lds
test
bound
in
sbb
cmc
std
pushf
and
cmp
push
add
mov
fsubrp
jmp
aas
in
leave
pop
and
jle
mov
adc
es
or
arpl
js
iret
jp
jl
out
or
imul
aas
ljmp
bound
xchg
loopne
out
mov
xchg
xor
mov
movsl
push
sub
pop
cmpb
mov
mov
jbe
push
push
inc
repz
cmp
adc
mov
shrb
mov
gs
add
pusha
xchg
fisubl
mov
mov
add
push
sbb
addl
aad
sub
dec
ljmp
loop
pop
mov
xchg
cmc
inc
cmp
cmp
loop
aam
fstp
jle
mov
cwtl
cmc
shrl
pushf
mov
scas
adc
stc
mov
jo
jge
outsb
sbb
cmpl
or
dec
inc
push
adc
cmpsb
mov
js
and
sub
ss
stos
cld
push
push
mov
enter
jb
lret
cmpsb
test
inc
adc
xchg
cmp
cld
and
andb
mov
stos
out
and
repnz
or
call
and
je
xchg
cmp
andl
lcall
insb
cmpsl
imul
and
cmc
xor
pop
lahf
cltd
nop
stos
xchg
shrb
aad
jne
ds
dec
add
mov
out
push
sti
leave
int3
bound
jbe
inc
add
xor
insl
movsb
rcll
jecxz
mov
cmp
adc
lds
loopnew
cltd
push
xchg
shrb
mov
paddd
dec
ljmp
sbb
jp
push
cmp
mov
xlat
mov
mov
sub
fdiv
leave
test
insb
and
pop
repz
lea
push
sub
aas
notl
lock
iret
xor
xchg
rcrl
sbb
xchg
fcompl
push
out
rcrb
fistps
test
loop
push
fucomp
mov
ret
lret
lea
add
xchg
mov
jg
nop
ss
jae
inc
and
push
mov
pop
jp
lock
sbb
loop
popa
aaa
lret
addr16
jle
mov
stc
stos
jbe
inc
orb
push
pop
das
js
sub
outsl
fs
push
pushf
cld
test
sbb
pop
jo
aam
pop
test
cli
stos
clc
cmpsb
outsl
call
sbb
mov
stos
in
mov
sbb
test
int
repz
popa
lods
jnp
je
repnz
iret
int3
nop
pop
cmpsb
push
es
xchg
int3
sbb
dec
cmp
into
jecxz
add
or
gs
sub
clc
mov
mov
movsl
aaa
sbb
inc
mov
ffreep
push
lds
loope
inc
add
loop,pn
popa
add
push
out
test
dec
shrl
pop
cmpsb
xor
cmpsl
sub
push
dec
ret
outsl
int3
jns
xor
jb
imul
dec
add
ret
lret
ja
ret
dec
in
test
add
cmpb
mov
movsb
filds
in
jne
popa
and
mov
dec
popf
dec
cs
test
aam
xchg
pushf
and
sti
test
mov
movsl
or
add
cmp
call
cld
cmp
jmp
push
rorb
inc
into
mov
sbb
sbb
sbb
jo
push
sbb
push
jge
adc
mov
std
jecxz
in
scas
xor
outsl
sbb
push
mov
int3
fwait
adc
sbb
xor
fprem1
mov
insl
stos
imul
mov
dec
lret
xchg
negl
cld
push
lret
cli
stos
and
jnp
xlat
mov
mov
decw
xchg
or
xor
jne
pop
jno
dec
sub
mov
lret
xchg
mov
sub
clc
test
adc
or
xchg
mov
jle
and
cmpsb
cmc
mov
cmp
adc
add
loope
loope
jo
xor
push
xchg
xchg
js
adc
xor
loop
cli
ljmp
test
sub
mov
les
mov
lods
clc
aaa
inc
jo
and
int
push
clc
or
lods
and
pop
jg
adc
sub
fwait
xchg
jnp
inc
push
mov
cmpsb
fstpl
push
movsl
sbb
ss
mov
adc
adc
adcl
push
es
cmp
hlt
xchg
xchg
adc
aaa
sub
pop
cmc
xchg
mov
xchg
mov
mov
pop
loope
push
aad
hlt
je
jo
jae
cmp
cmpsb
cltd
cmp
push
sbb
das
adc
pop
xchg
pop
mov
jne
sahf
dec
insl
cld
xchg
enter
sub
sbb
cmpsl
rcrb
lock
inc
lods
lcall
lods
dec
dec
mov
xchg
mov
mov
jbe
stos
sbb
push
and
clc
cmp
pop
dec
inc
les
shlb
push
scas
nop
stos
jns
xor
fidivrs
add
lods
test
test
push
jl
sete
jp
repz
imul
push
adc
inc
fists
out
sbb
in
jg
inc
jl
push
cmp
inc
shrl
mov
mov
mov
xor
dec
iret
stos
mov
scas
xor
mov
pop
mov
inc
sub
les
pause
dec
xor
into
ds
out
pop
lds
mov
and
loopne
mov
cmp
mov
cmp
push
sti
mov
jl
aam
push
add
test
jne
sbb
mov
xchg
xchg
or
add
jne
aad
adc
mov
xor
xchg
dec
popf
das
adc
bound
pop
sbb
inc
push
inc
or
inc
mov
pop
inc
xchg
pop
imull
test
sahf
pop
imul
loopne
adc
add
mov
lret
mov
push
mov
ss
cltd
loope
inc
inc
je
hlt
das
dec
xchg
movsl
mov
lods
rol
mov
ja
push
add
pusha
inc
sbb
arpl
mov
cli
stc
mov
leave
inc
icebp
cwtl
sbb
out
dec
lods
fidivl
sbb
cwtl
cmp
sbb
ud1
ja
and
xlat
sahf
dec
add
xchg
pop
sub
mov
pop
scas
mov
int3
push
cmc
outsl
out
mov
sub
jl
stc
outsl
divb
jbe
mov
xchg
sti
mov
mov
ja
popa
out
mov
out
rcrb
dec
les
xlat
and
movsl
xor
mov
repz
pop
pop
sbb
jne
les
xor
mov
jmp
xor
fs
xchg
inc
jne
or
mov
sbb
sbb
push
out
lods
data16
fadds
xchg
test
xchg
popa
inc
pop
lahf
push
pop
cmpsb
pop
sahf
stc
test
outsl
loopne
loop
dec
pop
and
xchg
decl
mov
pop
jg
insl
orb
icebp
dec
fwait
jae
inc
ss
outsl
mov
push
icebp
insl
shlb
insb
stc
cmp
je
mov
sti
jl
add
cmp
sbb
cmc
jbe
lret
xor
mov
lret
sbb
and
imul
xor
adc
xor
cmpsl
dec
js
or
mov
jg
sbb
cld
lods
push
lcall
sub
add
sbb
jae
mov
fcoml
add
cwtl
test
dec
lds
adc
pop
pop
pushf
cli
aad
pop
mov
sub
or
cltd
adc
pop
add
mov
int
mov
xchg
fsts
clc
mov
and
and
dec
jg
mov
mov
test
pop
pop
cmp
push
mov
ret
or
aaa
pop
cmpsb
cmp
mov
bound
enter
or
cmp
ja
adc
pop
mov
and
jns
cmc
stc
jg
ljmp
mov
scas
pop
arpl
rcl
fisttpll
aam
mov
fiaddl
mov
xchg
adc
push
cmp
push
fmuls
dec
mov
pop
push
xchg
or
scas
push
push
mov
jns
mov
jmp
xchg
adc
push
or
es
jecxz
sbb
out
mov
aas
cld
je
or
ud0
xor
out
subb
pusha
adc
clc
pop
daa
inc
testl
scas
out
pop
pop
outsb
outsl
test
jno
xorb
cmp
pop
popa
jb
sbb
ret
gs
sub
out
cmp
mov
cmp
inc
xchg
dec
sahf
mov
pop
mov
add
fs
mov
jmp
add
mov
or
imul
sbb
je
inc
lock
mov
jno
mov
lods
ds
mov
rorb
fucomip
push
popf
adc
jnp
mov
inc
arpl
into
lock
test
aad
in
cmp
mov
addr16
sub
popa
pop
in
pop
insl
in
jb
je
sbb
aaa
pop
mov
fimull
xor
mov
push
lret
hlt
je
call
sbb
das
mov
sub
mov
cmp
and
imul
ja
out
lcall
mov
push
jno
icebp
sbb
or
enter
pop
stos
pushf
cmc
sub
rorl
into
roll
mov
xchg
rorl
add
add
inc
clc
cli
int3
fldenv
ficompl
push
out
adc
sub
or
test
mov
inc
stos
jnp
fwait
outsl
ljmp
xchg
add
jle
jno
popf
rcrl
push
mov
rcrl
dec
mov
push
sbbb
inc
enter
imul
add
nop
lea
repz
jmp
imul
divl
xchg
dec
cmp
mov
rolb
mov
stc
cmp
fisubrl
gs
mov
lcall
imul
imul
mov
imul
ss
mov
test
inc
enter
push
fsubs
push
adc
roll
cmc
pop
aad
testl
stc
inc
mov
jge
cli
cmp
dec
dec
faddl
inc
in
addb
stc
or
mov
mov
out
pop
pop
inc
pushf
mov
adc
xchg
popa
pushf
daa
ds
clc
push
dec
cltd
xlat
out
scas
insl
call
insb
mov
sti
int3
js
lahf
sbb
aad
pushf
xchg
xor
add
and
jnp
fidivrs
daa
addr16
push
add
outsl
lcall
sbb
fs
inc
divb
jne
mov
mov
push
and
aad
cld
stos
nop
leave
and
mov
repz
adc
sbb
mov
xchg
sub
mov
ret
push
dec
in
mov
push
mov
scas
ja
clc
movl
pop
mov
add
dec
lds
sbb
push
dec
pop
movsl
mov
mov
adc
mov
or
out
gs
push
sbb
push
xor
call
adcb
loopne
or
or
aad
pop
adc
dec
imul
loop
icebp
outsb
sti
aaa
fucomp
in
jl
inc
sbbb
ja
xor
push
adc
dec
ficoms
dec
andl
jle
in
out
xor
xchg
inc
mov
out
jne
jl
dec
mov
xor
imul
push
push
lahf
mov
lods
movsb
pop
out
je
jmp
scas
cltd
dec
adcl
aaa
mov
lret
lock
pop
fldl
dec
daa
iret
add
ja
movsb
in
pop
fld
scas
push
sbb
push
add
jnp
xchg
xchg
xor
js
fcompl
nop
mov
xchg
xchg
daa
decl
cmpsb
sbb
hlt
inc
subl
addr16
push
sub
idiv
jnp
mov
pop
sbb
mov
inc
divb
sbb
je
adc
int
imul
fcomi
mov
pop
cmc
inc
dec
xchg
shlb
dec
movsl
mov
in
mov
ljmp
dec
mov
repz
jle
out
and
or
push
inc
in
sub
inc
pop
cmp
xchg
mov
sbb
xchg
imul
pop
mov
jmp
inc
push
mov
or
push
adc
mov
aad
rcr
outsl
fs
xchg
push
push
push
jge
inc
xchg
imul
insl
std
dec
pop
and
sub
std
mov
in
or
sti
fsts
das
in
aaa
push
jmp
mov
add
mov
loopne
mov
xchg
inc
inc
pop
mov
xor
pop
pop
or
adc
enter
xchg
sbb
or
leave
sub
xchg
into
outsb
aas
mov
into
and
push
or
push
mov
cmpxchg
xchg
mov
loopne
cmp
xchg
mov
popaw
or
sub
jp
xchg
out
cltd
xor
sbb
test
ror
push
sbb
cs
clc
dec
dec
sub
loopne
lods
dec
test
lret
mov
out
lret
shll
xor
aas
xchg
repz
aad
cmovs
mov
mov
inc
mov
mov
es
aam
ret
test
stos
cmp
cwtl
call
adc
mov
ror
xor
add
pusha
fnstcw
jo
adc
mov
popf
lcall
push
mov
fistl
nop
inc
jns
push
fbld
lahf
sarl
icebp
jmp
jns
loope
fildl
xchg
data16
push
jne
cltd
inc
filds
cltd
pop
je
hlt
cmp
adc
add
dec
fcmovb
sbb
xor
pop
shr
mov
test
shll
and
cmp
or
imul
inc
addb
dec
add
pop
cltd
movsl
testb
fstps
xor
pop
scas
dec
jmp
push
decb
pop
xor
push
hlt
cs
pop
adc
xchg
int
jb
leave
out
fsubrl
sub
fcomp
bound
mov
cli
jb
add
jmp
pop
jb
jns
mov
dec
int3
mov
cli
subb
cmpsl
mov
ss
lock
push
ror
mov
adc
cmp
lea
push
mov
and
sbb
add
jmp
xchg
sbb
out
cltd
out
sbb
in
cmp
lds
mov
shrl
adc
std
fbstp
inc
dec
out
and
or
cmpsl
fadd
test
dec
or
mov
fmull
sbb
or
out
testl
adc
adc
dec
push
inc
push
mov
jae
in
dec
xchg
push
mov
mov
pop
xchg
xchg
xchg
insb
sbb
jl
lcall
mov
adc
popf
mov
mov
pop
fcompl
ret
mov
in
hlt
mov
cld
sub
adc
out
mov
add
pop
lahf
adc
inc
pop
cs
xor
cmp
cmp
addb
sub
xchg
and
dec
pop
xchg
and
fcmovnu
cs
repnz
pop
xchg
sahf
jbe
iret
cmp
ja
pop
adc
push
inc
movd
pop
pop
lds
adc
iret
xchg
xchg
xchg
dec
pop
cmc
mov
cmp
push
fcmovu
jae
xlat
ljmp
sub
and
fbstp
jno
and
or
push
jno
sbb
inc
pop
aas
push
push
ja
jl
jle
pusha
sbb
pop
pop
pop
lret
mov
dec
or
faddl
mov
pusha
or
xchg
xchg
imull
add
sti
pop
pusha
xchg
and
ja
pop
lods
inc
fstps
adc
mov
and
fisubrs
mov
jae
inc
pushf
add
mov
jae
mov
xor
add
les
mov
cltd
stos
scas
push
push
lea
repnz
mov
pop
pop
inc
shrb
push
data16
icebp
sahf
cmpsl
pop
es
shrl
leave
out
inc
or
push
lods
mov
movsl
push
dec
mov
loopne
push
in
shlb
fcmovne
movl
sar
cltd
cmp
inc
call
sti
roll
cmpsl
jecxz
outsb
ret
sbb
dec
jge
push
sar
cmp
insl
adcb
mulb
cmp
mov
or
xchg
aad
outsl
mov
mov
adc
cmpsl
inc
out
pop
adc
pop
xchg
dec
or
adc
cmpsb
imul
mov
add
ja
lods
pop
cmpsl
arpl
lods
jecxz
push
jns
icebp
jg
push
and
push
or
xor
mov
xor
add
pop
pop
pop
leave
ret
xor
ret
push
mov
sub
andl
xor
xor
inc
mov
cmpl
jg
jmp
pushl
call
cmpl
jb
movl
push
mov
adc
jmp
xchg
xchg
add
stos
pushf
and
xor
addl
lretw
icebp
mov
xlat
push
fucom
inc
lods
inc
adc
mov
clc
cmp
loop
inc
shlb
stos
popf
xor
popf
movsbl
cmp
add
mov
jns
lcall
lea
pushf
and
adc
mov
test
test
outsl
jbe
call
sahf
out
jno
xchg
and
xor
xor
jecxz
inc
jge
inc
out
sbb
rcl
sti
mov
cwtl
mov
xchg
xor
mov
mov
xchg
mov
into
cld
sbb
lods
sub
fcoms
add
dec
mov
movl
lahf
and
iret
stc
jp
or
xor
xchg
loope
sbb
push
addb
ffreep
repnz
mov
or
sbb
jle
xchg
cmp
pusha
push
jp
inc
jl
lret
fucomi
jmp
lods
sti
jp
cmp
pop
stos
push
sbb
or
mov
pop
divb
and
fiadds
push
inc
rolb
xor
cmp
jbe
int3
mov
mov
sbb
jg
fldl
pop
jbe,pn
dec
ss
inc
ret
filds
xchg
loop
fiadds
push
sbb
mov
and
and
loop
xor
cli
xor
pop
sbb
call
jge
sub
rcrl
call
sahf
sti
jnp
xchg
jne
ret
and
rcll
arpl
jmp
or
jp
xchg
and
into
dec
ds
outsb
cltd
ss
dec
mov
cltd
and
mov
mov
mov
inc
adc
push
cmp
xchg
ds
enter
test
mov
sbb
js
pop
jbe
arpl
or
lea
push
loope
adc
xchg
mov
cld
repz
ja
sbb
push
xchg
aas
pop
and
xchg
sbb
inc
sub
fadd
mov
dec
cmc
sarb
test
xchg
and
test
jns
mov
shlb
js
and
cmp
adc
loope
sti
pop
popf
shll
mov
test
mov
jp
pop
xor
mov
mov
mov
pop
sub
neg
adcb
movsb
xchg
mov
jl
sub
iret
and
cmp
jg
mov
int3
xchg
ret
adc
dec
or
cld
arpl
jecxz
xchg
sbb
sbb
mov
ljmp
add
repz
jg
aad
jmp
fidivs
pop
lods
popf
cmc
inc
mov
repnz
test
push
repnz
jo
ret
outsl
int3
mov
gs
lahf
mov
gs
stc
jp
idivb
loop
cmp
clc
scas
xlat
dec
or
fs
xor
jo
cmp
adc
pop
fs
sbb
inc
outsb
outsb
xchg
push
sti
mov
pop
sarb
test
push
fsts
push
mov
lds
mov
inc
in
nop
mov
pop
test
ja
mov
push
inc
arpl
fisttpll
lods
mov
mov
imul
xchg
pop
and
icebp
xor
fiaddl
ja
dec
xchg
stos
stos
mov
cmp
lret
sbb
data16
xchg
mov
xchg
ds
xor
and
pusha
pushf
test
sbb
cwtl
sub
test
rcll
sbb
add
icebp
scas
out
xor
fisubl
lcall
fs
push
add
addb
in
sub
xchg
iret
stos
jno
adc
mov
cmp
test
ss
test
xor
add
jmp
pop
or
adc
xlat
adc
jb
inc
pushf
cwtl
lahf
sub
jno
sbb
inc
dec
mov
cwtl
dec
push
aaa
jns
push
mov
xor
cli
jno
movsb
mov
lock
lea
arpl
es
jae
sbb
sub
dec
pop
iret
pop
movsb
int
inc
das
test
scas
push
or
jge
push
or
test
xor
icebp
push
movsb
je
lcall
loopne
adc
jo
test
mov
out
mov
dec
cmc
add
mov
jnp
xlat
iret
mov
mov
insl
out
mov
fwait
push
xchg
hlt
xchg
pushf
cmp
fwait
xor
popl
mov
jnp
mov
mull
sub
add
clc
lock
jae
test
rol
ret
pop
jbe
lcall
testb
das
pop
jno
sbb
mov
flds
mov
sub
call
xor
das
ret
mov
or
jbe
dec
mov
repnz
sbb
add
push
fistps
in
cmpl
cmp
stc
and
xorb
in
push
outsl
popf
or
jecxz
es
out
jecxz
jmp
stos
pop
mov
mov
lds
mov
push
jge
fwait
movsl
jbe
inc
adc
sbb
test
push
and
das
stos
addr16
testb
dec
lock
pop
xchg
lods
dec
mov
cltd
jns
inc
adc
aaa
mov
das
pop
push
adc
jae
add
das
aas
lock
repz
mov
mov
popf
jecxz
scas
inc
les
fsts
and
push
mov
movsb
sahf
pop
loope
cmp
cli
scas
scas
mov
or
test
imul
pushl
out
addb
ja
sub
outsl
rcll
sub
cmc
inc
push
inc
nop
pusha
mov
pop
sbb
xchg
pop
fisttpll
iret
popf
mov
cld
out
leave
xor
add
xchg
lock
sbb
bound
inc
push
add
sarb
ljmp
sahf
pop
dec
sbb
jb
mov
xchg
sarl
movsl
repnz
sbb
hlt
nop
fisttps
inc
clc
cmp
and
outsb
xor
sbb
fst
or
xor
push
mov
mov
push
lcall
outsb
leave
and
js
cmc
xchg
dec
call
int3
addr16
xor
cmp
stos
sub
popa
shrb
mov
push
lea
add
ret
mov
fdivrl
rcl
cmc
popa
dec
sub
shll
cltd
push
or
scas
jp
movsb
out
andb
jae
rorl
jb
mov
cmpsb
and
jne
stos
pop
bound
pop
lret
push
adc
mov
int
ljmp
imul
dec
or
pop
jb
in
shl
mov
xor
loope
mov
outsl
adc
xor
lods
or
mov
loope
imul
repnz
icebp
stos
mov
lods
jb
xor
lds
cmp
push
xchg
jne
pushf
cs
out
cltd
out
out
pushf
ja
jl
mov
or
jmp
lahf
xor
mov
popf
mov
cmp
mov
push
hlt
inc
out
fmuls
pop
fidivrs
xchg
cmp
ficompl
imul
push
mov
popa
dec
sbb
jp
push
out
sub
adc
stos
mov
out
add
sub
pop
xchg
inc
cmp
fisubrl
or
add
pop
cs
mov
notb
dec
iret
or
rolb
scas
ret
jbe
xor
dec
and
cmp
jnp
push
push
shr
ret
cmp
mov
ds
dec
out
pop
mov
push
lret
mov
add
xlat
jb
xchg
dec
fdivrl
pop
nop
and
mov
adc
jns
dec
outsb
inc
adc
mov
add
jmp
in
cli
mov
out
inc
enter
popa
mov
cmp
ljmp
arpl
loope
mov
pop
xor
push
ss
sbb
call
inc
push
repnz
out
lret
xlat
xor
fistl
dec
mov
push
popa
movsb
cmp
inc
inc
insb
and
fbld
cli
insb
cmp
push
sbb
add
and
sbb
pop
pushf
popa
jb
mov
lea
inc
int
hlt
ret
cmpsb
dec
clc
xchg
imul
cmp
xchg
sub
push
mov
add
fildll
and
add
idivl
cmp
jnp
aad
iret
loopne
mov
leave
aas
mov
add
cmp
aam
addr16
xor
and
lds
ja
pushf
out
mov
pop
push
push
in
pop
adc
insl
sahf
xor
push
aaa
push
frstor
xchg
cmpsb
mov
outsb
popf
cltd
aas
inc
pop
cmp
jmp
inc
in
dec
pop
mov
jp
push
divb
sub
scas
ret
negb
or
add
scas
rorl
rorb
mov
jne
inc
stos
aam
dec
es
out
jg
pop
je
stos
push
cltd
cmp
xlat
inc
cmpl
mov
imul
fbld
pop
pop
hlt
fimuls
mov
incb
insl
mov
sbbl
pop
test
xchg
cmc
mov
xor
push
jmp
mov
mov
xchg
cmpsl
xlat
cmp
cwtl
jae
out
xor
push
int
adc
das
bound
ja
lea
lods
aam
loopne
sub
mov
aad
mov
std
cmp
test
iret
js
mov
cmpsl
add
bound
stos
ret
sbb
xchg
call
sub
push
das
sbb
pop
jo
inc
cmp
fwait
dec
cwtl
or
dec
iret
imul
push
xchg
int3
cld
stos
cmp
pop
insb
lcall
sbb
out
pop
xchg
mov
sub
rorb
jae
adc
push
loopne
push
inc
popa
cmp
or
sbb
jmp
xorps
sbb
inc
scas
outsb
std
xchg
popf
mov
mov
in
ret
xchg
adc
jg
cld
pop
das
iret
push
loop
mov
xchg
push
int3
jb
sub
pushf
inc
inc
cld
cwtl
call
adc
sbb
add
ret
pop
xchg
stos
stc
mov
test
adc
mov
jb
push
push
pusha
dec
inc
xchg
lcall
inc
cmp
bound
xorb
xor
leave
and
inc
lds
xchg
iret
and
mov
leave
pop
xchg
sbb
movsl
jo
cmpsl
int3
sarl
les
mov
clc
jb
and
inc
and
fwait
mov
call
push
mov
pop
pop
mov
scas
xor
mov
test
xor
pop
shll
cmc
and
movups
mov
mov
cwtl
adc
stc
frstor
dec
aaa
mov
inc
add
popf
xchg
notl
scas
lea
cld
jecxz
pop
into
mov
cmp
roll
aad
call
int
aaa
cs
ds
bound
jle
js
test
mov
mov
xor
popf
cmp
mov
mov
jnp
inc
clc
add
push
jge
mov
pop
adc
jae
jb
fcompl
stos
cmpsb
mov
andl
pop
adcl
xor
sbbl
inc
cmp
pop
sub
inc
int
int
or
dec
pusha
mov
and
sahf
xor
imul
mov
cmc
jne
hlt
shrb
cmp
jl
daa
push
add
leave
xor
add
std
cmp
pop
mov
push
push
or
pop
add
cmp
addb
outsb
icebp
pop
push
lock
xchg
addl
shll
mov
jbe
insb
hlt
jg
mov
add
loope
aam
pop
aaa
imul
aam
and
jle
jg
enter
mov
data16
push
pop
and
inc
pop
xchg
pushf
pushf
mov
std
clc
xor
add
out
pushf
dec
shlb
inc
pop
imul
push
inc
je
and
leave
add
jnp
hlt
dec
adc
js
xor
loope
sbbb
or
aas
mov
jb
js
sub
mov
pop
das
ret
and
mov
loopne
fists
mov
not
js
adc
fwait
sbb
ret
jle
inc
adc
sub
scas
fs
mov
push
add
bswap
mov
hlt
push
stc
pop
mov
sbb
nop
fisubrs
jmp
rclb
sbb
popf
mov
xchg
std
or
pop
push
lret
scas
and
add
jmp
adc
pop
jno
inc
ljmp
push
push
adc
xor
leave
dec
aas
inc
outsb
jne
popf
mov
and
cmp
jbe
sub
jae
cmpsb
adcl
sub
cmpsl
inc
scas
pop
movhps
inc
ficompl
mov
push
add
sub
fidivs
repnz
xchg
pop
push
cmp
xor
pop
mov
scas
fstl
into
jne
mov
cmpsb
or
pop
leave
sbb
popf
jno
ret
sbb
lock
sub
jmp
mov
sub
jle
mov
insb
lock
jg
leave
in
mov
dec
jp
test
loop
xor
cltd
push
mov
leave
lds
xlat
loope
lcall
sub
inc
cmp
testb
push
add
sbbb
jne
sbb
dec
push
aam
dec
jg
fwait
pop
iret
lods
out
loop
inc
sub
xor
pop
mov
loopne
pop
aad
lea
mov
enter
xchg
fstpt
loopne
fwait
push
mov
and
out
leave
addl
xlat
mov
xchg
pop
mov
sti
shll
push
sbb
mov
and
xchg
pop
adc
mov
xchg
push
jg
add
aam
mov
mov
mov
or
xchg
xor
pop
inc
pop
cs
neg
jo
mov
mov
adc
fistpl
pop
mov
push
xorl
test
push
cmp
ret
js
mov
adc
dec
sbb
out
add
scas
xchg
jecxz
add
mov
mov
mov
mov
and
mov
clc
inc
lcall
repnz
call
rcrl
imul
cmc
mov
sbb
lods
test
pop
fwait
iret
jge
jp
pop
jp
jae
imul
xlat
mull
xor
xlat
inc
pop
imul
sbb
lods
into
xor
loop
xchg
jle
jl
jmp
stc
push
push
dec
or
lods
in
cmc
jg
lods
lcall
ud2
xchg
lahf
das
mov
fnstenv
inc
icebp
cmp
lahf
adcl
add
sahf
sbb
test
test
cmp
cmc
xlat
push
js
adc
fwait
roll
arpl
add
mov
xor
ret
jbe
mov
mov
nop
mov
or
aaa
xor
gs
pop
lret
dec
dec
xor
lods
data16
enter
in
enter
icebp
mov
dec
xchg
xchg
pop
scas
out
xlat
pushf
lods
fldenv
sbb
sbb
inc
sti
mov
int
jnp
jp
sbb
lcall
mov
mov
mov
inc
adc
xchg
jl
lock
push
int
xchg
sahf
fmull
push
int3
add
inc
icebp
add
add
push
loope
mov
out
sbb
xchg
fcomp
nop
out
or
int
and
lret
lds
adcl
push
adc
mov
mov
sub
stc
loop
cmp
xchg
arpl
add
lods
loopne
xchg
cmpsb
jno
popa
cli
sub
into
push
loop
pop
and
out
ljmp
mov
lea
and
add
in
push
fcoms
mov
push
mov
aas
xchg
pop
sub
mov
cltd
lods
movsl
loope
outsb
xchg
cmpsb
pop
in
sub
test
outsb
pop
movsb
xor
mov
push
mov
jmp
lds
outsb
shr
adc
dec
ja
in
mov
cmp
sbb
cmp
cs
jp
jge
dec
mov
cmp
ret
inc
xor
pop
jg
adc
mov
adc
adc
lods
sar
xchg
jg
test
int
or
push
daa
pushf
xor
add
dec
clc
bound
movsb
jae
in
jo
fists
jl
jo
in
push
add
mov
mov
mov
add
jbe
andl
aaa
sbbl
dec
ret
cltd
shr
jge
dec
insl
divb
test
jb
icebp
dec
das
out
into
cmpsb
jmp
jno
popf
les
sub
xchg
inc
dec
sub
loop
aad
cmpsb
in
pop
push
cmp
shll
fadds
sahf
mov
pop
and
mov
push
add
mov
js
mov
xchg
popa
adcb
lret
inc
repz
mov
xchg
jl
sbb
movsl
daa
xchg
dec
cmp
shlb
adc
push
mov
jg
push
xchg
xchg
outsb
cmpsb
push
xorl
psllw
jno
int
xor
leave
stos
ret
pusha
inc
xchg
push
inc
loop
es
dec
inc
mov
ret
jbe
scas
cwtl
lods
xchg
aam
mov
cmp
mov
test
add
or
pop
xchg
sbb
stc
jne
adc
jmp
popf
jge
xchg
pop
sbb
and
fwait
or
xorb
leave
in
sub
lcall
inc
scas
pop
pop
jno
mov
cwtl
insl
push
fcmovnu
jge
cs
sub
lcall
inc
mov
loopne
jnp
int
mov
sbb
pop
cld
adc
mov
sub
cmp
and
idivb
insb
mov
out
incl
jbe
push
xor
sbb
mov
loop
in
pop
lods
inc
or
mov
mov
inc
mov
or
pop
test
inc
das
xchg
daa
mov
scas
xchg
inc
mov
popa
psubw
adc
filds
aas
cs
or
pop
shr
mov
push
sbb
lret
rclb
xorb
jmp
adc
into
and
sbb
je
mov
aaa
fldenv
repz
inc
jnp
stos
outsl
push
rdpmc
xchg
push
inc
lods
and
cmp
cli
out
pushf
mov
push
xchg
mov
loopne
xor
mov
mov
fistpll
add
mov
xchg
lods
js
stc
out
cmp
xlat
mov
cmc
lcall
push
add
sbb
lahf
leave
faddl
ljmp
roll
ss
lds
xchg
mov
aas
or
sahf
es
jmp
movsb
js
inc
adc
addb
pushf
shr
repnz
sub
scas
jp
pop
pushf
jo
ja
mov
mov
data16
cwtl
jae
loop
jge
xor
imulb
nop
loop
outsl
inc
daa
dec
popf
pusha
cmp
mov
rclb
cmp
call
sub
fists
dec
dec
xchg
loope
mov
test
std
sbb
cmpsl
mov
mov
dec
mov
push
scas
in
pop
mov
pop
cmp
xchg
lahf
xchg
sub
mov
mov
incl
push
adc
scas
inc
jge
fwait
jecxz
mov
sbb
mov
stos
dec
ja
fucom
ss
xor
sub
xchg
fldenv
inc
or
and
lock
sub
out
mov
dec
cmpsb
fidivrs
pusha
add
adc
sbb
cld
fidivs
sub
pusha
je
mov
pop
adc
decb
fadds
lea
add
sub
adc
mov
imul
js
add
mov
mov
xor
or
push
cmc
adc
dec
sub
xchg
enter
inc
aaa
sbb
and
sbb
mov
and
mov
mov
scas
fidivrl
lahf
inc
cmp
cmp
stos
sbb
adc
adc
lcall
lods
popf
lahf
cmc
std
sub
inc
inc
cmc
in
pop
push
and
cmp
std
dec
in
pop
cmp
and
repnz
test
cmp
scas
daa
push
fadd
adc
xchg
xor
addr16
ror
push
jp
les
jecxz
xchg
mov
pushf
inc
and
dec
xor
push
pop
adc
loopne
pop
mov
fadd
sarl
mov
dec
scas
mov
push
mov
loopne
mov
mov
push
insl
xchg
xchg
test
pop
pop
xchg
jno
mov
and
decl
mov
cli
push
addl
inc
xchg
sbbb
pop
mov
xor
fldt
std
jge
push
mov
fnstenv
fimull
xchg
pop
fbld
shlb
xchg
subl
add
out
mov
bound
in
insb
rorl
push
mov
pop
adc
sub
lds
out
jmp
in
js
icebp
mov
fcoms
add
inc
popf
call
js
mov
adc
gs
dec
lods
xor
bound
roll
or
sahf
xorb
div
inc
push
pop
lock
cmc
je
jl
cwtl
outsb
xor
jae
je
mov
mov
pop
into
mov
daa
out
stos
mov
pop
jbe
xor
cmp
sar
sub
shll
mov
mov
hlt
fwait
adc
add
lds
xlat
mov
and
xor
imul
mov
std
lods
pop
cmp
mov
test
movsb
out
ret
pop
std
pop
sub
cmpb
jmp
mov
movsl
test
push
sub
pop
mov
inc
fcomps
push
add
adc
mov
cmpsb
push
push
int3
fcomps
or
mov
call
dec
mov
mov
and
inc
insl
cmc
sub
out
adc
xor
shl
inc
pop
out
iret
xlat
cltd
enter
loopne
pop
leave
push
sbb
mov
xor
int3
and
xchg
lret
sbb
ds
movsb
push
ret
mov
sub
mov
mov
movl
out
xor
dec
push
or
adc
cmp
push
cmp
dec
shrb
mov
les
xchg
data16
jno
cmpsb
popf
aaa
inc
repnz
arpl
mov
mov
out
pop
cli
push
roll
push
mov
sub
lea
rcll
adc
add
dec
sbb
or
xchg
das
sub
adc
cwtl
add
nop
xor
add
scas
dec
popa
xor
lahf
sbb
outsb
out
pop
mov
dec
and
xchg
pop
js
sub
scas
lret
push
pop
mov
adc
in
in
inc
lods
and
adcl
add
pop
fistpll
inc
sahf
iret
or
xchg
popa
popf
mov
jmp
dec
cmp
arpl
insl
fcomps
popf
xor
imul
loope
pop
movsl
fmul
out
bound
xchg
mov
cld
imul
inc
inc
aam
cwtl
inc
pop
pop
int3
std
push
lds
sbb
jbe
cmp
jg
push
jl
push
addr16
jmp
xchg
arpl
das
hlt
push
xchg
icebp
or
mov
dec
jo
jmp
test
rcr
lods
mov
cld
mov
mov
orl
lea
stc
gs
mov
dec
sbb
cmp
mov
or
rolb
movd
popa
jmp
add
xchg
lods
lahf
jnp
push
iret
shll
xchg
repz
jae
loopne
fs
add
lea
test
add
incb
imul
aad
xchg
or
ficompl
movsl
pop
xchg
cmp
icebp
and
fstps
lret
scas
xchg
xchg
scas
push
jb
addr16
mov
test
lds
xor
into
out
xchg
int
ss
leave
mov
leave
int
mov
cli
add
mov
loope
mov
mov
inc
out
subb
dec
push
je
aam
scas
shll
xchg
outsb
jne
inc
fdivrs
xor
and
xor
std
movsb
rcrb
into
push
xchg
sahf
adc
adc
inc
add
add
scas
push
and
cmp
loopne
enter
inc
dec
mov
or
sbb
aam
pop
call
and
aam
arpl
fldcw
jb
fs
adc
xor
gs
xchg
insl
inc
fisubrs
movsl
test
fisttpll
inc
cltd
notb
lahf
pusha
into
lock
es
push
out
rorl
cmp
test
cmp
outsb
test
lret
adc
add
sbb
cltd
jle
imul
test
jne
bound
xchg
je
or
jb
repz
push
ds
les
jns
mov
ds
mov
stc
dec
adc
cmpsl
inc
js
rcrb
stos
cmp
mov
cld
addr16
or
mov
insb
arpl
xchg
push
and
mov
and
adc
xor
pushf
add
pop
push
sete
sub
xchg
add
adc
cmpsl
inc
jmp
inc
xchg
add
fisubrs
and
call
faddl
cmp
insl
mov
jnp,pn
push
fmull
test
inc
mov
pop
lds
mov
sub
pop
dec
adc
jns
mov
sbb
xchg
cmp
and
vmovupd
jp
dec
stc
xchg
xchg
mov
andb
jbe
rcr
aam
fmull
sub
imul
inc
xchg
pop
pop
loop
clc
xchg
loopne
pop
push
lret
mov
push
and
jb
mov
scas
popf
xchg
pop
les
jae
and
ja
and
xor
jo
sub
js
sub
xchg
xlat
mov
push
aaa
lcall
lahf
fsubrs
daa
int3
inc
add
pusha
loop
sub
insb
cmp
loope
jecxz
pushf
imul
loop
mov
shl
jae
pop
in
or
cltd
xor
push
xchg
mov
je
jmp
or
pushf
decl
stos
sbb
push
sub
mov
inc
dec
lods
gs
pushf
sbb
mov
dec
sub
adc
dec
jmp
adc
xor
cmp
dec
outsb
sub
cmp
jae
cmpsl
sbb
cwtl
inc
insb
das
imul
or
int3
mov
fs
sub
adc
and
xor
loopne
jbe
mov
sub
xlat
adc
lods
cmp
and
mov
lcall
fbld
and
xchg
das
lret
outsl
adc
mov
lret
pop
mov
scas
xchg
add
push
jno
pop
xchg
jb
es
xor
cmp
test
dec
sub
ds
push
aas
jae
add
in
orb
rolb
and
mov
aaa
enter
adc
or
sti
pop
sbb
aaa
loope
test
pop
cmp
xor
xchg
or
fsin
xor
cmp
add
js
xor
cmpb
pop
loop
sub
sbb
push
jg
mov
pop
mov
add
iret
push
or
sub
insl
pushf
inc
inc
pop
rcrl
dec
fisubl
push
lret
loopne
out
xchg
sbb
pop
ret
xchg
mov
pusha
dec
mov
inc
xor
inc
arpl
lahf
inc
dec
loope
push
fwait
mov
popf
inc
out
xchg
addb
fmuls
leave
inc
dec
jae
push
add
mov
gs
imul
sarb
lock
mov
ds
ss
sahf
jae
push
pop
dec
jb
jge
popa
push
in
dec
or
sar
lahf
pop
icebp
push
sub
xchg
stos
xchg
adc
testb
pop
stc
xor
fdivrs
clc
pushf
cmc
mov
pop
push
incb
adc
insb
stos
mov
jle
rolb
push
mov
dec
out
dec
mov
fcoml
imul
out
pop
test
jl
add
push
negl
imul
sub
lods
sbb
cmpsl
loope
sub
shlb
sti
sbb
movsl
dec
inc
adc
xor
sub
jmp
cmpl
adc
adc
test
ss
loop
daa
mov
cmc
mov
pusha
mov
popa
scas
mov
xchg
xchg
xchg
loopne
pop
pushf
es
sbb
and
sub
or
lock
inc
inc
inc
dec
push
dec
popf
xchg
push
sub
jno
mov
ret
repnz
pop
add
inc
xor
or
mov
mov
sarl
out
mov
fwait
shl
xor
sub
push
std
in
xor
push
pusha
lods
shrl
mov
mov
pop
or
addr16
fldcw
negb
shl
jno
lods
sub
jl
xchg
jne
aad
xchg
test
xchg
xor
movsb
repz
in
clc
icebp
call
sub
push
adc
or
mov
cmp
cmp
pop
pop
xchg
std
pop
and
les
inc
cmpl
push
push
sbb
cmp
insb
or
xchg
repz
mov
pop
adc
sub
aas
arpl
lret
mov
xor
addb
insl
incl
mov
dec
fstps
push
iret
sbb
adc
xchg
dec
inc
add
idivl
sub
dec
cmp
adc
mov
mov
add
stc
addr16
and
dec
in
sbb
sub
nop
fisubrs
xlat
pop
sub
sbb
mov
bswap
faddl
adc
and
mov
in
lret
mov
push
add
mov
xor
mov
xchg
pop
or
rclb
sub
test
sbb
fidivrl
jecxz
xor
push
inc
inc
ss
push
lahf
fsubs
pop
test
mov
clc
ss
add
adc
mov
outsl
xchg
out
in
sbb
push
add
dec
push
xchg
pop
xor
repnz
adc
cmp
das
push
mov
jae
out
jb
ret
dec
fs
push
pop
arpl
sbb
lret
mov
mov
lods
gs
add
lahf
insl
and
shrl
add
mov
push
or
jo
dec
js
insb
sti
js
jne
insb
rcl
aas
into
sti
pop
jecxz
jae
mov
sub
std
stc
xchg
xor
cmp
inc
push
dec
std
mov
sahf
rolb
sub
out
mov
clc
jnp
lods
sbbl
hlt
mov
xor
cmovno
dec
in
ss
outsb
cs
aad
sbb
mov
sbb
mov
sbb
sbb
loopne
cmp
sar
aaa
push
dec
mov
or
cltd
jnp
add
xchg
dec
push
push
mov
sbb
in
adc
les
lea
fldt
rorb
inc
je
jmp
movsb
xor
repnz
pushf
jecxz,pn
cwtl
add
ret
test
jecxz
adc
adc
add
scas
aaa
pop
xor
in
jns
jge
cmp
push
cwtl
inc
jp
loopne
lcall
cmpb
sbb
xor
pop
arpl
xchg
push
adc
push
inc
mov
movsb
test
stos
and
add
les
push
xchg
hlt
cmpb
xor
addl
mov
xchg
sbb
adc
bsr
xchg
cs
sub
jo
pop
inc
ljmp
sbbl
dec
xor
cmp
mov
mov
sbb
inc
repnz
sbb
sub
sbb
faddl
and
rclb
aad
xor
aaa
pop
insl
les
cwtl
sub
jae
adcl
mov
mov
add
jno
add
xchg
insl
jne
out
and
xchg
xor
mov
cwtl
mov
ljmp
xchg
push
and
test
outsl
dec
out
push
out
jl
push
fnstsw
jge
push
push
loopne
mov
inc
jo
imul
stos
cmpsb
cmc
mov
ds
add
inc
cmpsb
std
loope
xor
outsl
sub
cli
xchg
loope
lahf
frstor
pop
fdivl
add
addr16
gs
dec
jbe
lcall
fstpl
xchg
int
in
pop
pop
pop
das
adc
sbb
mov
cmp
mov
cmp
sbb
daa
cmp
jae
sub
sbb
dec
int
inc
in
add
mov
or
xchg
gs
mov
sti
xchg
imul
std
push
lahf
fbld
jne
imul
xor
or
xor
jne
pop
ljmp
dec
sub
loop
pop
push
outsl
out
dec
cmp
sbb
jg
inc
into
rclb
push
or
nop
push
xor
and
imul
xchg
sbb
mov
fwait
inc
push
in
sbb
and
fdivs
popf
fiadds
jnp
or
jne
xchg
inc
push
cmpb
mov
fbld
sbb
cmp
and
in
mov
adc
adc
test
jecxz
xor
push
loope
insl
je
test
movsl
adc
cmp
xchg
fmull
mov
sbb
push
jp
aas
mov
sbb
inc
or
std
xor
jle
xchg
mov
cmp
repnz
push
popa
inc
sub
into
jnp
pop
lcall
outsb
sbb
sbb
dec
add
ret
push
les
inc
pop
or
and
jb
shll
rorl
leave
sub
mov
gs
push
dec
xchg
mov
movsl
lods
and
add
loope
mov
mov
push
scas
outsb
add
inc
adc
push
xchg
pop
cmp
inc
mov
ret
push
or
pop
out
sbb
std
xchg
out
imul
shll
insb
xor
or
roll
push
mov
out
outsb
cmpsb
cmp
mov
ja
jns
inc
mov
ljmp
lahf
test
jecxz
pop
enter
mov
xlat
xchg
xor
adc
pop
clc
ja
add
mov
inc
xor
jmp
je
sub
mov
mov
sub
xor
mov
xor
jnp
sub
pop
vpsrld
insl
sarb
xchg
or
out
inc
fidivrl
pop
xlat
or
cmp
or
lret
outsl
lea
and
aaa
push
cli
pop
daa
clc
sub
aas
sbb
or
jecxz
cmovb
sbb
roll
inc
mov
jns
dec
out
dec
in
incb
mov
repnz
sbb
test
pop
jmp
sbb
push
in
inc
add
mov
test
fnstcw
pop
mov
fiaddl
je
sbb
push
cmp
out
in
iret
popf
cltd
mov
dec
lret
fnstsw
mov
das
aad
jmp
cltd
leave
mov
jo
fisubs
out
ret
sub
cld
mov
xchg
cmp
xchg
xor
jns
xacquire
adc
out
xor
fs
in
imul
adc
outsb
dec
add
xor
push
aas
lea
mov
cmp
and
call
pushf
jno
call
cli
loop
gs
sbb
inc
sti
ret
popa
inc
pop
lock
or
mov
ljmp
cmp
jns
les
mov
ds
es
lret
mov
aas
aaa
fsubp
ljmp
call
fs
add
fisttpl
xchg
jle
in
into
cltd
push
test
aas
clc
rorl
dec
roll
fsub
xorb
sahf
jge
mov
cmpl
cli
rcrb
xlat
push
test
jge
and
hlt
mov
cvtps2pd
dec
dec
adc
push
icebp
lret
sub
stos
cmp
jbe
popf
lods
iret
movsb
popa
or
mov
jo
pop
xor
xchg
xchg
js
in
inc
dec
mov
fs
out
xchg
jo
xorl
divb
sti
inc
repnz
dec
adc
lock
inc
sarl
or
sbb
arpl
mov
mov
enter
shlb
sub
pusha
ss
ret
xor
jl
jb
dec
std
cli
sbbl
mov
add
cs
js
pop
jne
cmpsb
mov
in
pop
and
and
push
add
insl
xlat
mov
lods
sbbl
addr16
leave
xchg
inc
loope
push
test
pushl
mov
stc
pop
sub
or
addr16
jl
cmpsb
sbb
dec
dec
xor
bound
mov
cmp
xlat
push
sub
jmp
das
out
test
pop
jg
push
sahf
inc
std
sti
repnz
ret
sti
push
out
jge
sbb
jne
mov
aaa
bound
xlat
std
test
loop
cmpl
es
out
push
adc
xchg
push
push
pop
jg
mov
pop
add
ret
sahf
dec
lock
jle
lret
fnstsw
sbb
sti
ljmp
xchg
pop
ds
sbb
and
rcrb
das
or
push
cmp
cmp
mov
adc
jbe
xchg
add
mov
aam
dec
cld
hlt
jae
pop
popa
decb
cmp
push
pushf
jge
and
xchg
clc
sbb
xchg
inc
mov
out
mov
xchg
in
push
fcmovb
sbb
adc
mov
xlat
shll
sahf
rcr
mov
lgs
add
jg
mov
cs
roll
fimuls
lds
sub
stc
call
push
std
insl
dec
icebp
mov
in
sbb
xor
repz
loopne
sbb
pop
fiaddl
addr16
and
mov
adc
lock
popa
jnp
icebp
xchg
cwtl
loope
rorl
mov
cmp
lcall
jmp
sbb
imul
jl
fnstenv
add
pop
mov
mov
sbb
inc
in
divb
inc
pop
pop
sub
pop
repnz
aaa
ja
hlt
mov
bound
stc
adc
test
dec
sub
adc
push
mov
addr16
inc
nop
fsts
inc
lret
idiv
das
fcomps
repnz
jl
jbe
sbb
clc
mov
mov
dec
movsl
xchg
data16
inc
aad
loope
lods
pop
cs
cmp
adc
pop
leave
push
lea
sbb
mov
sbb
jl
lcall
mov
mov
jg
aam
push
js
cmp
or
outsl
scas
or
movsl
mov
repnz
scas
push
mov
or
mov
jns
mov
mov
subl
pop
mov
inc
mov
mov
xchg
jnp
cmp
out
das
daa
cmp
loope
add
aam
inc
sahf
xor
pushf
push
stc
adc
fnstsw
cmp
dec
push
xor
mov
xlat
ret
mov
jae
or
fsts
mov
xchg
sbb
idivl
inc
roll
pop
ficoml
xlat
jge
fwait
pop
inc
ror
mov
lcall
inc
and
jo
jne
rorb
jg
mov
js
movsl
lock
and
pop
sub
and
sbb
filds
cmpsl
loopne
push
pop
pusha
sub
xchg
mov
inc
lods
pop
or
pop
xchg
movsb
dec
out
push
sub
shrl
rcr
loopne
cmp
xchg
bound
sbb
lret
shll
mov
xor
cltd
dec
in
popf
push
jmp
repz
jbe
xchg
movsl
pop
pusha
mov
aaa
cmp
xor
int
in
mov
hlt
fdivrs
and
shll
mov
xor
call
or
xlat
cmc
addl
cld
adc
mov
add
push
cmp
jecxz
repnz
mov
pop
cltd
icebp
adc
cltd
pop
mov
cmp
ret
aaa
lods
lods
jge
or
cmpsb
xchg
inc
xchg
push
fdiv
inc
ljmp
movsb
call
dec
pop
popf
xor
lret
pop
pop
mov
sbb
pushf
push
push
cmp
inc
jne
scas
pop
pop
jmp
jle
pop
jge
pop
es
lret
stc
cmpsl
mov
insb
in
and
adc
xor
cmp
jg
pop
in
mov
shrb
cwtl
mov
xor
mov
daa
sub
stc
dec
adc
or
xlat
xchg
mov
dec
inc
notb
stos
push
add
enter
push
or
andl
add
sub
insl
sbb
lock
pop
xchg
jno
stos
imulb
sub
jg
push
mov
imul
jae
popl
sarl
ljmp
rcll
insl
mov
test
pushf
cmp
sub
bound
pop
jae
sarb
adc
cmp
sbb
inc
pop
adc
lea
adc
ret
nop
test
aam
mov
repz
into
adc
ds
loope
jp
adc
aam
mov
or
push
rorl
icebp
fisubrs
negb
xchg
pop
popf
sub
dec
loopne
jb
adc
dec
int3
dec
jmp
xchg
aaa
push
mov
pop
dec
xor
mov
dec
fcompl
xchg
movsl
add
ret
sbb
cmpsl
mov
or
cwtl
inc
mov
gs
pop
sarl
ja
pop
addr16
out
fs
dec
hlt
push
inc
imul
cmp
pop
mov
cmp
in
ret
loop
mov
out
mov
mov
xor
insb
mov
cmpsl
divb
cld
arpl
stc
ja
pushf
cmp
aam
rorb
outsb
xor
fnsave
dec
fisttpl
jmp
add
ja
enter
sbb
jmp
cmp
mov
mov
fwait
out
insb
push
sbb
fidivs
xor
and
jnp
sub
jp
sbb
icebp
and
or
jbe
xchg
push
arpl
xor
test
mov
sarl
inc
nop
mov
inc
sub
in
fidivl
push
push
pop
jecxz
inc
imul
fs
pop
push
into
movsl
pusha
imul
into
fildl
test
data16
fistpll
pop
sarb
pusha
mov
sbb
mov
xchg
and
jl
scas
sbb
cli
scas
cmp
sub
loop
cmp
std
or
cmp
sbb
shll
or
xor
ss
rcrb
and
xchg
shrl
sti
data16
jae
fsts
mov
sbb
push
decl
mov
jnp
jmp
insb
mov
cmp
or
inc
call
divb
stos
es
aad
mov
mov
cld
les
inc
pusha
leave
inc
lret
sub
stos
out
mov
dec
add
aad
rcll
dec
stc
jge
pushf
mov
adc
and
cmp
dec
pop
cmp
jl
mov
add
mov
mov
fsubrl
dec
decb
adc
cmpsl
pushf
dec
mov
imul
jo
shlb
xor
cs
or
in
mov
das
sti
sub
int3
or
push
sbb
jne
jns
sub
and
inc
je
mov
icebp
cwtl
add
adc
mov
xor
ret
mov
mov
push
and
adc
jb
cs
in
sahf
xchg
das
add
xlat
test
jl
imul
cmc
into
pop
pop
out
lods
in
and
cmp
xor
dec
dec
sahf
movsb
and
jno
pop
rol
notl
pop
mov
inc
dec
jne
mov
mov
ror
in
pusha
ret
ljmp
dec
movsb
cmp
cli
leave
dec
int
adc
jne
jo
inc
test
sub
fs
lods
rcll
jp
ljmp
xchg
cmp
or
adc
lret
es
mov
pop
sub
or
scas
fnstcw
push
rcrb
cmp
popl
ljmp
push
syscall
lock
xlat
add
push
pop
or
xor
insb
mov
out
push
int
push
aam
pop
pop
mov
lcall
inc
and
mov
jg
and
sarb
pop
and
push
out
ss
pop
cmpsl
mov
push
mov
jecxz
push
and
xor
mov
loop
mov
out
mov
cmpsl
es
push
sbb
cltd
mov
inc
and
shll
mov
jmp
es
imul
addr16
js
mov
movsb
xor
js
xorl
sahf
mov
je
sbb
sub
cmpsb
inc
inc
sti
lahf
ja
xchg
jo
adc
push
dec
imul
inc
jmp
inc
mov
lods
sub
aas
jg
inc
mov
repz
loop
out
shrb
pop
adc
jns
pop
pop
lret
outsl
mov
cwtl
jbe
les
xchg
add
das
lret
adc
xlat
fstpl
enter
movsb
jle
stos
inc
add
add
hlt
daa
mov
adc
out
jg
dec
pop
pushl
out
lods
icebp
push
popa
sahf
inc
cmp
cli
xor
cli
jbe
sub
shll
arpl
adc
ljmp
pop
xchg
sarb
out
stos
pop
sahf
sub
das
icebp
movsb
pushf
lock
gs
fmull
cmp
lcall
mov
cmp
out
add
fstpl
jp
dec
mov
xorb
arpl
outsb
fldenv
mov
cmp
and
data16
shll
push
std
mull
dec
out
pop
push
leave
fldl
cld
int
and
pop
in
cmp
jno
xchg
xorl
lds
not
in
imul
sbb
nop
push
cmc
mov
in
ret
xchg
xor
aaa
add
pop
xlat
enter
add
add
dec
dec
sub
fdivr
repz
xchg
ret
test
cmpsl
imul
jnp
push
and
pop
push
inc
fst
cmp
cmpsl
lret
lods
xor
cmp
ret
clc
fidivs
cmp
ret
lahf
ret
jecxz
icebp
cmp
xchg
dec
add
outsb
cs
out
add
hlt
ret
and
lods
aam
or
jno
sub
pop
imull
std
pusha
fdivr
jge
imul
imul
iret
xor
int3
sbb
sbb
andl
es
xchg
nop
mov
mov
mov
mov
lods
in
imulb
mov
mov
cmp
push
shl
push
les
pop
mov
xchg
xor
xchg
jae
std
mov
in
push
int
ds
decw
push
push
in
adc
inc
jo
sub
push
insb
cmc
rclb
ljmp
cmc
jbe
fldcw
jge
insl
ja
out
xchg
popaw
jl
xor
mov
out
mov
push
jno
jp
fistpll
ja
cmp
pop
push
cmp
cmp
mov
aam
xor
xchg
mov
pop
cltd
or
mov
pusha
mov
loope
sti
popa
lods
sbb
cmpsl
int
dec
test
push
inc
insb
cmp
or
dec
lahf
or
stos
addb
repz
sbb
shrl
pop
xor
mov
jl
in
sbb
hlt
mov
push
sub
pop
xlat
pushf
sub
test
sub
pop
cmp
cs
adc
inc
adc
fistl
int
mov
mov
push
add
sbb
dec
jbe
addr16
xchg
cmp
sub
pop
fcoms
lock
cmp
data16
aas
jnp
inc
test
inc
mov
idivl
and
gs
ja
imul
clc
cmp
sub
daa
mov
stos
cmc
push
lret
clc
jno
cmp
jle
loope
cltd
mov
xchg
jp
imul
movsb
popf
imul
daa
lret
adc
js
mov
push
gs
adc
sbb
cmc
mov
lods
mov
imul
inc
test
mov
es
cmc
out
push
dec
je
sbb
pop
jp
xlat
mov
addr16
pop
or
sarl
outsl
loop
dec
into
inc
cli
outsl
mov
inc
cli
sbb
outsb
xor
mov
mov
clc
outsb
aas
lea
mov
jle
mov
push
enter
lahf
fiaddl
sub
xchg
cmp
mov
in
int
subl
mov
or
sti
je
inc
mov
mov
addl
inc
enter
or
mov
loopne
inc
inc
jg
xor
xchg
add
or
loop
jnp
sub
out
mov
pop
dec
das
mov
ja
push
jns
movsb
xchg
imul
fdivl
cwtl
rol
mov
mov
popa
das
insl
lds
or
jge
mov
fdivr
and
and
add
in
push
dec
mov
mov
or
pop
in
inc
scas
xchg
push
imul
iret
pop
add
jg
sbb
cld
cmpsb
fldt
insl
inc
sbb
cld
sub
jecxz
test
add
sub
mov
out
aaa
cs
cmpsl
push
mov
mov
cwtl
mov
and
andb
into
pusha
aam
cli
hlt
and
aaa
dec
out
mov
or
out
repnz
mov
push
dec
sbb
cmpsb
mov
ss
sbb
sti
push
inc
dec
push
mov
push
nop
test
cmp
push
add
xchg
adc
sbb
or
pop
xadd
cmpsl
arpl
imul
in
sbb
jb
jp
ret
test
mov
inc
rolb
dec
push
iret
mov
popa
or
inc
or
clc
ljmp
mov
cmp
iret
jecxz
xchg
call
jmp
std
popa
pop
mov
or
test
xchg
and
fidivrs
test
cwtl
out
cli
out
out
dec
into
pop
pop
das
sub
rol
pop
sub
cmpsb
push
mov
xchg
insb
push
daa
movsb
push
push
sti
movsl
cld
add
push
dec
sbb
mov
xchg
mov
sbb
gs
test
jne
fcmove
sub
xor
pop
or
dec
cmc
popa
scas
jne
int
sub
sub
push
addl
repnz
mov
rorl
pop
stc
iret
lods
test
xchg
dec
ficompl
cmp
stos
cmp
fwait
out
fsubs
and
inc
out
or
stos
xchg
mov
call
dec
insb
pop
or
outsb
stos
cmpsl
jle
mov
add
mov
faddl
mov
in
mov
fiadds
and
lods
fs
rcr
bound
xchg
shl
push
lock
push
sbb
fsts
repnz
inc
repz
cmp
pop
adc
pop
lcall
xor
ss
pop
enter
ret
adc
es
add
enter
loopne
pop
hlt
dec
aad
mov
cwtl
adc
pop
repz
sub
adc
mov
pushl
orb
mov
int3
ja
out
push
jno
lahf
daa
pop
into
mov
hlt
arpl
mov
pop
sahf
decb
sbb
add
jle
enter
jecxz
iret
imul
cmpsb
cmp
mov
orl
pcmpeqb
xor
rorb
push
pop
xchg
or
ss
xchg
jmp
icebp
push
sub
cmp
jmp
dec
insb
test
cmc
fisubs
and
jmp
nop
xchg
lds
inc
mov
inc
jnp
mov
or
pop
adc
add
fiaddl
pop
mov
inc
data16
imul
xor
push
dec
fnstenv
push
mov
fisttps
jge
push
fs
add
pop
jbe
out
sti
in
sub
mov
ja
dec
lsl
mov
imul
mov
pop
in
inc
hlt
cli
mov
inc
out
mov
dec
jg
stc
int3
lret
ret
mov
cmp
dec
add
outsl
cmc
push
pushf
jnp
dec
sbb
jne
out
sub
xor
jns
mov
adc
jmp
or
inc
pop
mov
lock
int
pop
fists
mov
test
xor
mov
daa
je
cmc
sub
fdiv
insb
add
mov
les
clc
mov
mov
mov
jecxz
imul
xchg
sub
add
stos
mov
mov
fdivrl
btr
or
adcb
inc
push
dec
out
stos
inc
cmc
shrb
jl
rcrb
xchg
push
and
dec
mov
add
rorb
mov
mov
fistpl
or
cmp
popa
ds
outsl
mov
movsl
pop
adc
push
inc
mov
xchg
out
jp
jmp
je
out
outsl
bound
xor
cmp
lret
xchg
repz
fstpl
inc
bound
add
sbb
int3
jle
mov
or
inc
xchg
adc
inc
push
outsb
ficompl
lcall
sub
jl
inc
mov
in
or
or
rcrb
shll
mov
out
or
sub
sbb
mov
and
stos
xchg
roll
mov
lcall
push
clc
mov
dec
sub
lods
in
and
jns
jle
sub
jae
xchg
adc
xor
and
lret
xor
out
dec
push
and
cmp
push
das
call
scas
nop
inc
rcl
push
jmp
push
xor
and
fwait
add
arpl
jp
fnstenv
push
sbb
rcrl
divl
xor
adc
lods
xor
lahf
ret
or
mov
or
fidivrl
imul
cs
outsb
enter
ja
xchg
into
jecxz
or
xchg
js
push
test
adc
lea
dec
cli
push
and
rcrb
addr16
ret
xor
enter
add
xchg
test
test
test
mov
repnz
xlat
mov
popf
test
cmp
inc
or
ja
or
ljmp
push
fwait
lret
and
mov
or
pop
cmp
cmc
fwait
and
sub
or
into
lcall
repz
andl
xor
ds
mov
sub
flds
and
jl
aad
mov
je
and
out
xchg
loope
icebp
imul
jo
adc
or
add
lcall
dec
jns
movsl
push
cmpsb
mov
ret
mov
addl
pop
push
cmpl
test
pop
cmp
dec
add
sbb
xchg
pushf
test
jl
push
jb
jns
stc
sub
shlb
xor
lock
out
sahf
and
cmpsb
cs
fsubr
mov
shr
adc
adc
dec
loope
outsl
or
loope
dec
shlb
popf
sbb
insb
or
fs
push
mov
add
cmp
add
or
jle
fs
mov
pop
adc
mov
repnz
or
inc
add
sbb
fdivr
jle
push
add
ret
adc
lret
add
inc
mov
imul
out
sub
cmp
das
sahf
outsl
cmpsb
xlat
in
jl
icebp
mov
or
push
aas
movsl
pop
cld
mov
dec
roll
mov
fldl
mov
lds
push
mov
mov
push
mov
rcrl
bound
mov
pop
jle
push
dec
cltd
inc
add
ljmp
mov
mov
cmc
adc
xchg
out
xchg
push
mov
jge
jb
dec
inc
jl
push
dec
loop
and
dec
div
dec
cmp
lcall
ja
cwtl
aad
fs
jl
pop
cli
and
inc
jns
stos
movsb
leave
dec
adc
jb
mov
in
mov
mov
jo
int
pop
and
pop
mov
mov
or
push
xchg
into
lock
xchg
xor
sub
ss
push
out
mov
or
call
shll
sbb
stos
sub
sub
imul
inc
mov
xlat
cmp
call
outsl
iret
inc
cmp
andl
and
movsl
sub
pop
movsl
xchg
icebp
add
dec
push
cmp
jmp
fst
fldenv
ljmp
and
shrl
jns
daa
jmp
mov
in
out
sti
lahf
xorl
or
mov
inc
es
ss
adc
push
mov
dec
inc
int3
or
mov
roll
jge
xchg
cmpsb
lds
gs
xor
xlat
daa
in
dec
shl
int
sub
cltd
push
call
xchg
cmp
je
inc
outsb
sti
mov
jae
popa
cmpsl
mov
pop
lret
movsl
and
jne
test
jo
fwait
add
pop
insl
jnp
and
pushf
pop
pop
cmp
aad
cmp
push
insb
sub
repnz
mov
push
jp
dec
cvttps2pi
es
push
dec
fwait
sub
push
loopne
ljmp
jno
je
fs
jl
push
cli
aas
test
out
cld
dec
cld
xchg
and
cmp
or
adc
or
mov
outsl
out
mov
arpl
pop
mov
fwait
mov
lea
or
mov
test
xchg
test
call
or
call
dec
or
mov
test
adc
out
pop
repnz
inc
scas
dec
dec
repz
popa
sub
push
add
mov
push
ret
xchg
pop
test
insb
mov
sub
and
popf
inc
cli
push
imul
gs
adc
jae
mov
xor
mov
adc
jl
cmpsb
jp
cmc
arpl
je
cmc
xchg
jne
lds
jnp
adc
insl
jnp
push
fdivs
popf
xor
or
sbb
outsb
fwait
sbb
shlb
pop
mov
dec
in
les
mov
cmp
add
fbld
xchg
into
rorl
and
mov
pop
mov
repnz
sub
sarb
nop
scas
rep
pop
pushf
mull
inc
push
xlat
inc
push
sti
nop
jns
push
push
fstsw
push
outsb
loop
in
jg
sub
fwait
jmp
and
lock
push
dec
aam
cwtl
idivb
stos
rcll
and
pop
mov
xchg
mov
jne
jge
fnstsw
lret
inc
xor
jg
xor
push
fwait
and
inc
arpl
decl
inc
repz
sub
push
sbb
mov
repz
int
cmp
dec
ja
aad
adc
outsb
add
inc
cmp
adcb
or
or
movsb
scas
fwait
das
addr16
jbe
push
pop
lcall
imul
cmp
jno
test
outsl
push
rorl
pop
add
ret
push
ret
in
aam
cmp
or
sub
cmc
mov
es
mov
repz
sub
mov
out
dec
mov
jno
or
inc
das
nop
dec
aas
cltd
fidivl
inc
in
mov
xor
ret
ja
stos
adc
arpl
mov
in
or
imul
pop
insl
das
aaa
frstor
movsl
stos
cmp
xchg
xchg
fwait
dec
mov
das
shlb
adc
or
dec
setbe
or
adc
pop
inc
scas
cltd
mov
imul
les
inc
clc
pop
loopne,pn
xchg
lock
mov
cmp
aaa
pushf
push
mov
pop
cmp
xchg
push
pop
mov
scas
call
pop
lods
sbb
xchg
cmpsb
mov
xchg
in
jp
int
ja
pop
ljmp
cmp
lock
or
dec
mov
out
icebp
fbld
mov
cmp
sub
jo
fdivp
mov
and
test
imul
push
test
hlt
xor
test
xor
out
ret
lock
mov
in
shl
xlat
vcvtph2ps
mov
inc
je
inc
scas
sbb
xor
mov
push
sub
mov
mov
push
or
xchg
fdivp
aaa
ds
in
inc
mov
fadds
sub
lret
fistpll
call
pop
cmp
and
add
mov
pusha
and
lcall
shll
cmp
sbb
jno
pop
nop
xchg
cmc
out
mov
lcall
sahf
mov
out
cmp
insb
jp
lcall
sub
cmp
shl
inc
pusha
inc
test
cs
shr
push
ja
pop
iret
scas
push
cld
bound
inc
or
push
or
dec
sub
sbb
mov
insl
rolb
lods
jb
jp
jae
xor
dec
xor
fwait
push
fwait
mulb
jl
mov
ds
mov
je
ja
jp
jno
mov
push
stc
dec
push
int3
data16
test
movsb
sar
repz
orl
lds
das
xchg
xor
ljmp
loop
inc
loop
in
cli
loop
mov
mov
xor
mov
je
arpl
inc
stc
ret
aaa
fisubs
jp
in
stos
fwait
jb
sub
xor
mov
scas
xor
call
addr16
fsubrs
popf
iret
stos
or
jns
div
pop
jle
or
pop
adc
cwtl
mov
mov
pop
jg
adc
rcr
mov
repnz
ss
pop
or
push
arpl
insb
push
subl
xchg
adc
data16
mov
lock
or
adc
mov
mov
inc
and
idivl
mov
sub
loopne
mov
js
xchg
sahf
sahf
movsl
xchg
gs
call
jmp
mov
push
xor
mov
arpl
icebp
enter
aam
ss
pop
lahf
pusha
mov
pop
jg
cmp
out
push
mov
push
lret
jb
mov
xor
into
push
mov
dec
loopne
loop
mov
jge
fs
loopne
dec
in
mov
imul
sahf
test
or
mov
sbb
xchg
push
sub
pop
xchg
faddp
fcmove
inc
cltd
mov
arpl
mov
sbb
jecxz
xchg
dec
movsb
jecxz
call
orl
mov
xor
push
and
mov
andl
add
mov
mov
adcl
test
je
andl
mov
inc
mov
cmpl
jl
jmp
pushl
push
pushl
call
cmpl
jb
mov
mov
dec
mov
mov
xorl
xor
and
add
mov
movl
cmpl
je
cmpl
jg
jmp
push
call
mov
dec
mov
jmp
mov
add
xor
add
mov
mov
or
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jle
jmp
push
call
jmp
jmp
dec
shr
shl
push
mov
adc
xchg
jl
iret
out
addl
and
in
push
out
or
push
mov
aad
stos
rcll
and
loopne
ret
jbe
stc
icebp
into
into
xchg
or
cmp
mov
jns
sub
out
lahf
ja
inc
incl
sbb
pop
fdivl
stc
add
in
jmp
xor
sbbb
aas
enter
xor
in
jl
sbb
ret
pop
xlat
ret
cmp
add
imul
push
xchg
dec
inc
lods
scas
cmp
mov
daa
out
jnp
dec
mov
mov
cmc
out
pop
inc
push
jp
negb
movd
push
dec
mov
cwtl
cltd
in
cli
dec
inc
test
popa
fsubrl
lea
mov
inc
mov
popf
or
ficoml
rorb
dec
xor
imul
sub
test
dec
pop
or
pop
xorl
and
das
ret
lods
cmp
sbb
dec
xchg
push
aam
adc
aad
cmp
dec
pop
adc
or
jns
adc
jmp
push
aaa
dec
cmp
shl
mov
mov
gs
xor
cwtl
and
std
rol
and
repz
mov
aad
adc
pop
add
arpl
xchg
jmp
arpl
pushf
xchg
into
adc
js
lock
shlb
test
xor
push
mov
insl
mov
movsl
inc
xor
push
mov
sbb
inc
scas
std
stos
and
imul
loop
mov
inc
fmuls
in
cmp
adc
mov
icebp
data16
aaa
mov
and
data16
fildl
push
leave
mov
xchg
mov
popf
inc
sbb
pop
ljmp
fwait
mov
insb
pop
inc
add
push
ret
jae
mov
sub
in
test
mov
and
push
mov
xchg
jno
inc
iret
inc
int
lea
outsb
pop
outsl
sbb
sub
lods
loop
pop
cwtl
mov
in
sub
and
xchg
loopne
bound
fidivrl
push
loope
imul
leave
mov
pushf
dec
dec
scas
xor
jns
out
shll
mov
mov
fidivl
dec
push
push
lret
dec
call
xchg
cmp
sar
adcb
cli
cltd
or
lcall
sub
xor
lahf
insb
xchg
test
add
mov
adc
mov
int
push
sbb
loopne
fs
xchg
repz
in
dec
imul
cmpsb
mov
pop
inc
in
xlat
push
lret
adc
cmp
lea
adc
push
aad
jl
scas
aam
pop
mov
mov
or
xor
leave
dec
sub
push
int
add
mov
imull
pop
jo
mov
cld
inc
bnd
push
js
ret
push
daa
inc
inc
aad
sti
mov
scas
cmp
lods
sbb
push
hlt
cwtl
out
inc
sbb
inc
mov
add
pop
push
mov
jp
jg
jge
stos
ja
fadds
lret
sti
ficompl
inc
mov
adc
cmp
cld
adc
sbb
enter
leave
adc
xchg
cld
lahf
in
inc
ss
ret
push
inc
jl
dec
fbstp
clc
popa
scas
pop
jbe
sahf
push
test
mov
xor
pop
icebp
pop
mov
ja
call
hlt
jle
stos
stos
sbb
movsl
cmpsl
adc
mov
jl
test
push
push
cwtl
fnstsw
cmp
xor
cs
jle
cmp
mov
out
es
outsb
lock
adc
hlt
pop
jecxz
lret
push
xor
cli
data16
insb
icebp
subl
rcl
pop
inc
je
mov
mov
jne
sub
mov
je
jg
dec
sahf
xchg
rol
add
lret
sub
or
dec
push
adc
and
popf
fdivrs
pushf
ficoms
out
add
ret
adc
add
mov
loope
push
and
push
mov
roll
sub
jns
jno
mov
inc
insb
mov
lods
shl
ficompl
jae
call
std
inc
insl
xor
test
pop
mov
xor
sub
sbb
mov
mov
pop
push
mov
mov
fdivrl
ss
mov
les
add
adc
sbb
adc
loope
clc
push
jle
and
xchg
pop
and
pop
stc
in
aad
inc
jg
adc
mov
and
popa
jo
push
imul
cmp
sub
cmp
add
lcall
stos
imul
mov
or
push
xorb
sub
je
cwtl
push
push
mov
pop
mov
sub
adc
or
pop
inc
adc
dec
add
pop
cmpsb
mov
jmp
sub
dec
mov
cmp
or
push
out
xor
mov
mov
adc
or
adc
pop
leave
in
repz
enter
rcl
inc
xor
mov
sub
js
jge
xor
xchg
ja
mov
or
fs
enter
icebp
jg
mov
xchg
punpcklbw
or
out
sahf
dec
jo
clc
jns
and
outsl
inc
mov
add
dec
popa
xlat
lahf
cmp
popa
cmpl
dec
pop
fidivrl
cwtl
xor
push
fstpl
pop
sarb
cmpsb
sarb
jg
dec
push
out
aam
in
sub
ljmp
xchg
dec
xchg
adc
insb
divb
adc
cmp
push
call
daa
lock
mov
mov
pop
subl
sub
push
xor
sbb
lcall
or
lods
mov
loope
xor
jecxz
fstpl
subl
mov
xor
test
push
push
add
movsb
fisubs
imul
push
jno
call
dec
mov
fldcw
pop
ror
sahf
bsr
add
cmpsb
dec
shll
aam
dec
xor
jne
mov
pop
adc
jnp
jne
jb
sbb
or
lcall
int3
ficoml
fst
push
or
aaa
lock
add
sub
out
rcl
sahf
pop
add
inc
mov
pop
imul
or
cmp
mov
inc
loop
aaa
cmp
push
mov
inc
and
arpl
sbb
les
push
jle
leave
movsb
ret
sbb
cld
scas
sub
fwait
mov
enter
aam
pusha
fcoml
fidivs
jmp
mov
aaa
nop
xor
mov
mov
inc
xor
das
adc
jbe
nop
inc
fcmovnbe
jb
pop
pop
jp
out
sub
mov
push
cmp
fisttps
mov
mov
stos
icebp
repz
addl
popf
aas
sbb
fisubs
cld
cmp
mov
mov
pop
mov
pop
jo
sbb
cmp
mov
scas
jb
jge
inc
xchg
adc
xor
fwait
or
lea
shrl
cli
call
repz
push
adc
lock
add
icebp
je
das
mov
adc
add
and
jo
ss
cs
jbe
xchg
test
out
jb
fs
push
xchg
adcb
add
mov
jmp
loop
enter
loope
push
test
adc
out
xchg
rcll
addr16
aas
mov
fisubs
popf
sti
pop
sub
jne
mov
pusha
loop
mov
dec
test
repz
pop
rcrb
mov
cmp
fnstenv
mov
inc
fwait
push
jb
call
adc
imul
dec
push
sub
push
push
mov
int
pop
js
push
add
cmpsl
faddp
mov
lods
jno
xchg
pop
mov
mov
pop
xchg
idivl
mov
mull
sbb
push
mov
lret
adc
outsb
call
sbb
mov
js
cmp
dec
mov
mov
mov
movsb
setbe
adc
insl
cvttps2pi
inc
pop
dec
or
mov
inc
mov
mov
into
xchg
push
into
jmp
pushl
stc
xchg
inc
sahf
int3
cmpsb
stos
xchg
jp
or
in
mov
lcall
iret
mov
scas
mov
pop
scas
mov
and
insb
xor
loope
js
lods
mov
cmc
mov
fsubp
clc
jo
pop
sub
jle
mov
mov
out
or
xchg
inc
lret
adc
fcoms
cmp
jecxz
fcmovbe
mov
arpl
dec
or
aaa
push
loopne
mov
or
adc
or
pop
push
cmp
sahf
stos
jl
inc
xchg
ror
out
loopne
sub
orl
dec
pop
das
push
fbld
or
lods
lds
or
add
insl
mov
roll
xor
prefetcht2
xchg
sbb
stc
add
mov
jle
push
adc
ret
add
adc
and
fstl
fistl
xor
sub
sti
in
out
dec
dec
mov
push
leave
mov
or
cmp
les
fwait
int
dec
sbbb
scas
jae
shlb
pop
jae
jmp
pop
test
pop
xorl
orb
out
pop
std
jnp
je
mov
dec
lret
out
xchg
pop
shll
cli
adc
fwait
stos
imulb
add
out
jnp
mov
mov
adc
mov
jne
cli
out
and
jp
xchg
cmp
sub
loope
lods
leave
jb
fstl
sub
lods
hlt
mov
inc
out
add
dec
enter
sahf
dec
in
pop
dec
and
inc
mov
je
arpl
ret
scas
mov
sahf
mov
cld
aam
mov
lock
push
mov
fbstp
pop
int3
xchg
inc
mov
push
fwait
aaa
fsubr
xchg
cwtl
jo
dec
or
and
cmc
xor
cld
loop
or
cmpsl
jecxz
in
xor
fsubrs
cli
into
pop
mov
inc
inc
cmpsl
pop
gs
adc
imul
jmp
add
lahf
mov
jae
repz
xorl
mov
sub
push
stos
stos
lods
xor
pop
gs
add
or
dec
gs
jge
mov
lcall
clc
clc
add
pop
sbb
data16
mov
or
add
mov
outsl
add
add
clc
xlat
jl
out
out
fwait
mov
scas
sub
cs
adc
vmwrite
lds
xchg
or
xor
fwait
mov
pop
and
testb
inc
xchg
clc
repz
dec
aas
push
sahf
dec
adc
addr16
sahf
lahf
lods
pop
jecxz
ss
dec
pop
pusha
push
xchg
xchg
test
inc
lods
arpl
push
arpl
and
movl
in
or
cld
iret
jle
jge
pop
cmpsb
das
lea
mov
mov
cmpl
lock
cmp
adc
lret
inc
or
jge
sti
dec
loope
lods
movl
lock
inc
fistpl
es
xor
jmp
into
xor
mov
imul
mov
movsl
fwait
cmp
test
rcrl
fdivr
dec
imul
inc
inc
xchg
int
lock
je
mov
xor
cmp
es
xorb
setnp
add
mov
jns
lods
cld
jbe
mov
inc
icebp
add
call
cmp
fcom
pop
ja
ret
cld
movb
addl
push
lods
int3
lods
popa
adc
inc
lock
push
push
pop
and
out
test
mov
mov
mov
push
inc
pop
mov
jmp
mov
repnz
jnp
insl
dec
mov
sahf
aad
mov
add
std
lds
xor
fstps
inc
imul
sbb
icebp
or
push
rolb
or
mov
push
hlt
mov
rol
enter
mov
or
adc
ss
lds
cli
ret
frstor
dec
jmp
inc
cli
rol
push
sub
rcrb
push
clc
pop
mov
pusha
jl
dec
andb
sbb
jns
mov
lahf
stos
xchg
lcall
mov
nop
scas
lcall
rol
push
xchg
jecxz
fildll
icebp
mov
cmpl
imul
mov
je
mov
inc
mov
ret
test
xor
mov
jge
loope
mov
xor
push
pusha
scas
or
sbb
rolb
mov
pusha
jmp
xor
push
inc
imul
arpl
push
call
jne
shrl
and
fildl
sbb
xchg
loop
inc
jbe
or
push
scas
cli
pop
mov
push
pop
popf
inc
xchg
gs
inc
fsubl
jp
jmp
cmpsb
mov
outsl
inc
stos
jl
outsb
mov
push
stos
add
jne
cmp
adc
ds
add
lods
and
aas
xor
adc
push
mov
inc
sub
mov
fbstp
xor
sub
jns
inc
lods
xor
fsubrl
inc
pop
mov
mov
popf
pop
sub
cs
jmp
mov
pop
dec
pop
mov
or
out
shll
push
jg
jbe
jl
cmp
fincstp
inc
sbb
ret
sub
imul
mov
imul
scas
add
inc
mov
mov
lahf
out
iret
inc
cltd
adc
mov
dec
mov
andl
hlt
popf
int3
mov
in
movsl
mov
mov
adc
in
dec
pop
push
push
int3
mov
and
or
insl
clc
xchg
push
in
aam
out
push
movb
mov
cmpsb
xchg
jge
sbb
aas
mov
adc
movsb
pop
jo
rorl
dec
pop
insl
faddl
mov
mov
or
ret
adc
in
jnp
in
push
aad
lods
dec
insb
xchg
pop
ficoms
mov
std
lock
lods
sbb
jle
das
push
mov
or
arpl
rcll
jnp
or
or
xor
pop
fisttps
pusha
push
jb
ljmp
stc
int3
pop
mov
jg
ficoml
xchg
je
ljmp
xchg
cmpsl
cmp
out
mov
sub
aam
pop
lret
adc
and
loop
stos
mov
or
mov
test
mov
aad
pop
daa
loopne
bound
pop
out
add
xchg
mov
adc
xchg
pusha
fldl
shlb
scas
lahf
xor
decl
outsb
pushf
mov
clc
sbb
dec
negb
cmp
fildl
pushf
adc
xchg
lock
mov
sbb
push
inc
clc
shll
inc
mov
les
add
sub
sbb
fwait
icebp
adc
xchg
pop
arpl
push
test
fsubr
popl
inc
es
mov
jns
push
nop
fidivrl
sbb
xchg
xor
sti
mov
mov
sbb
adc
shl
xchg
imul
bsf
or
sub
adc
ja
xor
insl
adc
or
sti
pop
jae
test
out
dec
nop
cs
push
loopne
or
and
in
add
jg
andl
jmp
mov
xchg
pop
dec
cmpsb
add
dec
xor
dec
subb
mov
movsb
pop
repz
lock
adc
arpl
scas
push
pop
pop
xchg
add
inc
xchg
cmp
test
push
inc
xor
xchg
sbb
test
mov
cs
and
sbb
or
fnsave
enter
pop
sbb
rcrb
dec
fldl
or
stos
mov
mov
jle
pop
test
test
or
hlt
dec
pop
imul
jbe
les
xorl
and
movsl
cli
bound
xor
sub
xor
push
or
sahf
std
and
in
insl
mov
stos
xchg
xor
nop
enter
inc
decl
sbb
mov
daa
inc
movsb
hlt
cld
jp
add
data16
lock
mov
repz
mov
or
mov
xchg
jp
jne
sbb
fildll
xchg
xor
mov
adc
dec
scas
adc
dec
ret
fdecstp
std
add
mov
pop
nop
or
loopne
inc
jo
jb
pop
scas
sbbl
push
out
in
push
push
or
and
sbb
dec
cmp
dec
mov
and
pop
lods
dec
xchg
and
jecxz
inc
lods
cmp
idiv
dec
mov
or
jecxz
adc
mov
fs
xor
fwait
icebp
mov
ret
jle
xlat
hlt
mov
or
add
in
adc
aaa
mov
jbe
mov
xor
xor
outsb
das
mov
cs
test
sub
test
pop
sub
fucomip
imul
stos
push
enter
arpl
mov
xchg
xchg
lea
xchg
push
lahf
insl
fwait
mov
and
mov
mov
and
rolb
sbb
jl
sbb
jo
popf
into
cmp
mov
dec
stos
mov
cli
mov
adc
add
les
cmp
loope
mov
shl
push
movsl
test
sbb
cmpsl
push
daa
scas
imul
cmp
adc
pop
adc
xchg
mov
fildll
sbb
imul
ds
jnp
mov
mov
imul
ljmp
test
fstpl
loope
mov
mov
pusha
push
lds
testb
dec
xor
lds
sti
dec
in
test
movsb
shlb
popf
pop
xor
dec
lcall
cmpb
addb
or
imul
mov
je
addr16
add
push
adc
lock
push
cld
mov
mov
inc
fistl
and
data16
addr16
push
jb
dec
mov
dec
movnti
shl
jg
pop
add
and
adc
mov
sub
sbb
xchg
xchg
sbb
into
loopne
arpl
mov
add
dec
dec
jno
xor
jecxz
call
scas
mov
ss
push
stos
sub
inc
fstl
xlat
sarl
pop
pop
rol
and
sbb
jle
test
add
sub
jmp
pop
leave
lret
test
dec
jns
inc
lea
int3
push
sub
pop
xor
stc
mov
aaa
push
xor
push
outsl
lcall
fs
sbb
adc
mov
dec
fdivrl
dec
add
mov
adc
js
jne
dec
inc
daa
ror
test
cli
mov
nop
shrl
inc
jl
sbb
or
push
adc
xchg
cwtl
sbb
test
and
mov
mov
fldcw
mov
aam
mov
jp
int
ja
pop
mov
xchg
fwait
fwait
push
sub
and
pop
jne
pop
dec
add
inc
mov
cmp
cwtl
das
cwtl
fnsave
add
xlat
mov
adc
mov
in
mov
dec
mov
jns
inc
lahf
jmp
or
sbb
clc
fs
std
sub
adc
mov
and
jp
cltd
jmp
xlat
ret
and
loopne
inc
jb
cmp
out
xor
and
adc
mov
adc
or
shrl
or
movsb
ja
mov
loop
inc
xchg
stc
dec
pop
loopne
leave
test
jbe
sub
divl
cmp
dec
das
jns
fstpt
xor
xor
xor
popf
add
dec
sbb
pop
add
add
ret
add
pop
arpl
subb
insb
add
das
and
sbb
mov
and
cmp
in
sbbb
pop
adc
clc
cld
pop
push
and
or
add
mov
push
fsubrs
sub
push
push
pop
inc
push
cmp
arpl
ret
push
jns
add
jo
mov
fdivrl
adc
xor
shll
cmp
in
jmp
push
test
or
mov
addr16
adc
fnstenv
or
movsb
or
mov
mov
lock
add
stc
add
adc
cmp
xor
inc
xchg
mov
adcl
in
jo
cltd
xor
pop
adc
std
mov
testl
jne
push
aad
push
sti
adc
inc
mov
inc
shlb
das
xchg
das
sarb
adc
into
addr16
sbb
pusha
stos
dec
mov
cmpsl
pop
subb
mov
in
xor
inc
loopne
in
lret
xor
je
and
aas
popa
mov
mov
mov
movsb
sbb
addr16
jl
pop
xchg
enter
dec
jle
loopne
lret
pusha
fsubs
stc
mov
cmp
push
insl
fwait
cmp
push
inc
jns
aas
inc
xchg
mov
or
je
xchg
outsl
fsubrs
push
les
mov
sub
xor
inc
jbe
fsts
and
leave
test
jns
test
pop
mov
inc
pop
int3
fdivrp
cmp
push
jae
iret
xchg
push
and
pop
or
inc
popa
mov
fcompl
push
nop
jns
mov
cmp
lods
cmp
sbb
stos
cvtps2pd
lea
sub
cwtl
jne
mov
fucomip
lret
shrb
imul
lret
cmp
in
aam
movsl
mov
fisttpll
ror
cmpsl
sbb
arpl
xor
test
shll
movl
sti
ljmp
mov
lods
fwait
lds
xlat
sahf
sbb
xlat
mov
adcl
push
cmp
and
push
mov
stc
repz
cli
or
adc
imul
jge
insl
xor
sti
adc
aas
xchg
xchg
cmp
les
mov
jo
rorl
jge
mov
adc
add
out
sbb
ret
push
lcall
in
jne
pop
addb
cmp
ficomps
movsb
call
pop
imul
pop
stc
push
push
cmp
xchg
mov
jg
mov
fnstenv
imul
sub
add
lds
cwtl
jae
pop
int3
xchg
lret
push
mov
mov
and
inc
jl
loopne
bound
lret
dec
xor
mov
popa
test
aam
stos
add
dec
in
mov
jecxz
test
sti
mov
jl
mov
call
icebp
scas
rclb
pop
dec
mov
test
mov
jge
sub
dec
ds
insl
xor
cmp
scas
inc
push
dec
psrlw
sahf
fdivs
xchg
in
loope
sbb
das
jmp
mov
fs
arpl
out
sbb
test
and
and
inc
ret
or
cmp
dec
clc
mov
sbb
pop
jg
insb
and
inc
adc
sbb
mov
pop
xchg
xor
mov
or
movsl
cwtl
push
fwait
mov
push
pop
and
popa
cmc
outsb
addb
mov
adc
push
int3
cmpsl
repnz
lods
jg
pop
hlt
ror
inc
into
js
mov
fidivrs
cmp
aad
or
xor
mov
bnd
xchg
es
mov
jae
ja
cmp
mov
mov
push
iret
mov
xchg
mov
jge
fstl
clc
bswap
push
aaa
icebp
insl
popf
repnz
jns
mov
cmp
pushf
addr16
inc
fnstcw
push
cmp
lcall
cld
hlt
push
push
bound
in
mov
jle
imul
add
xor
cmp
iret
and
es
shll
xchg
and
incl
ds
daa
sbb
or
xlat
fnsave
clc
enter
push
popf
lcall
fldcw
sbb
mov
cmp
fidivrl
dec
jl
cmc
xor
loopne
jnp
inc
dec
arpl
sahf
and
in
jge
push
in
loopne
test
push
add
dec
push
xorb
or
shll
fdivr
adc
popa
push
call
push
aad
shlb
push
pop
mov
push
mov
adc
popf
push
mov
push
sti
sbb
push
lahf
loop
filds
dec
or
xor
int3
add
jnp
repnz
and
lret
cltd
jecxz
cmp
pop
mov
negb
mov
jp
dec
xor
inc
std
xchg
mov
xchg
push
mov
push
repnz
daa
cltd
outsb
jmp
xlat
adc
into
jnp
in
cld
sbb
out
push
mov
lahf
adc
xor
sub
sbb
fcomps
cltd
pop
outsb
cmpsl
stos
push
arpl
jmp
jo
mov
inc
es
ret
leave
adc
stos
push
pop
pop
mov
lret
in
rol
rorb
mov
xchg
inc
and
pop
pop
ret
adc
insb
popf
daa
xor
enter
push
loopne
mov
movsb
ds
push
pop
pop
cwtl
xchg
cltd
dec
mov
cmp
pop
push
inc
imul
rclb
loop
outsl
sti
fwait
mov
xor
xor
out
cwtl
movsb
xchg
jmp
mov
sbb
push
mov
jno
pop
mov
arpl
sahf
xchg
fidivrl
or
mov
mov
adc
imul
pop
rcrl
inc
inc
clc
lahf
push
outsl
and
fmull
out
stos
les
pushf
mov
xor
out
jl
ficompl
repnz
dec
out
int3
adcl
jo
fstps
xchg
out
mov
mov
jae
ja
stos
inc
cmpsl
testb
inc
cld
mov
movsb
xor
mov
pusha
sbb
cmp
push
repz
loop
mov
mov
mov
mov
popf
or
mov
mov
dec
xor
nop
in
jnp
add
notb
push
jbe
cmpl
cli
push
mov
dec
movsb
add
sbb
lret
lret
xor
lret
mov
and
loopne
pop
sub
icebp
fcompl
lret
fs
shrb
add
mov
pop
test
xchg
icebp
fists
sbb
and
mov
movl
or
movsb
dec
add
scas
loop
push
in
popa
cs
pop
inc
xchg
add
push
mov
je
dec
push
daa
mov
mov
xor
loop
ljmp
fists
addl
in
jl
sub
in
orb
pop
jmp
sti
jne
ret
add
fsts
mov
stc
imul
cltd
insb
dec
pop
push
test
leave
dec
out
and
ret
add
out
lock
scas
xchg
bound
in
mov
push
adc
jp
orb
sbb
test
cmp
in
ss
insl
push
call
dec
jno
mov
xchg
jo
mov
pop
mov
out
mov
arpl
lret
xor
adc
scas
or
dec
pushf
mov
xchg
push
dec
mov
push
repz
insb
adc
pop
ror
inc
jnp
loop
sti
iret
jmp
dec
inc
or
gs
push
roll
and
or
icebp
add
call
ret
mov
xor
xchg
pop
mov
in
mov
dec
xor
adc
cmp
add
fwait
sub
jno
jne
dec
in
cmc
and
or
or
sbb
or
loop
jbe
inc
sbb
out
dec
pop
std
jmp
xlat
insl
mov
loop
xchg
xor
adc
sub
push
out
adc
dec
adc
xchg
nop
xchg
inc
int3
js
cmp
mov
sti
mov
mov
cmc
fwait
out
outsb
loope
or
mov
mov
xchg
mov
int3
or
mov
rcrl
mov
dec
xor
push
inc
imull
mov
dec
incl
dec
arpl
jmp
out
jg
jae
cld
push
dec
rolb
repz
xchg
aas
ret
cs
push
aam
test
or
loop
aam
dec
mov
out
and
ror
fdivrs
lea
pop
dec
test
adc
fisubrs
mov
inc
jb
jg
loop
push
add
inc
stos
in
imul
push
xor
adc
sbb
or
lock
or
rcll
es
je
test
mov
lods
loope
data16
sub
and
cmp
lret
sbb
cltd
lret
gs
sub
fs
scas
notb
mov
and
add
pop
jg
fmull
sub
sbb
mov
fldt
enter
lods
outsb
mov
mov
push
push
leave
into
push
stc
lock
xchg
xchg
test
addr16
xor
insb
and
loop
scas
fs
shlw
add
bound
nop
scas
test
pop
xlat
add
add
fwait
pop
push
cmp
and
test
push
loop
jge
adc
push
mov
test
jbe
inc
lcall
adc
cmp
pushf
sub
or
roll
add
lret
sti
add
mov
jb,pt
mov
push
into
std
enter
ss
adc
and
in
cmpsl
dec
push
fcmovu
xchg
inc
xor
inc
fs
stos
inc
dec
or
sub
es
or
dec
jnp
lret
out
xor
push
call
test
jl
cmp
pop
add
jmp
xchg
jbe
int3
jae
insl
incl
jnp
cs
outsb
jmp
dec
loop
call
and
mov
sub
push
testb
lock
mov
push
cmp
pop
xor
sti
push
cmp
out
xor
popa
sbb
sahf
jb
fldcw
nop
mov
arpl
cli
xchg
lcall
mov
fsubrs
and
mov
sbb
add
dec
scas
mov
cwtl
das
push
scas
in
fnstcw
pop
xor
xchg
push
fisttpll
add
mov
cwtl
fdivs
jae
adc
cmp
mov
cmp
call
movsl
sub
push
xchg
fiaddl
je
sub
shrb
push
pop
xor
pop
mov
ret
cmp
pop
or
mov
xchg
cmpsl
sub
sahf
mov
out
je
jb
into
and
loopne
mov
rolb
leave
push
out
repnz
pop
shll
mov
and
ficomps
push
mul
loop
xor
jg
stos
xchg
and
xor
lret
mov
jl
in
aad
scas
call
insl
jno
icebp
jne
mov
ja
xor
loopne
jnp
test
fucomip
xor
fisubs
and
cmpsl
and
add
xor
jg
xchg
dec
addr16
aas
shlb
clc
push
fwait
add
pop
scas
jno
stos
mov
xor
dec
and
int
orb
ja
int3
xor
mov
xor
insl
ret
jge
xor
lret
inc
subb
mov
js
pop
or
lcall
js
pop
cmovne
dec
lods
mov
movl
cmpl
je
cmpl
ja
jmp
pushl
call
mov
dec
mov
jmp
xor
add
or
mov
mov
or
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jl
jmp
push
call
cmpl
jne
mov
inc
mov
jmp
add
sub
mov
xorl
sub
lea
xor
xorl
xor
movl
cmp
movl
je
mov
and
mov
negl
xor
incl
add
movl
cmp
jne
xorl
pushl
xorl
call
or
mov
mov
andl
mov
inc
mov
cmpl
jg
jmp
push
call
cmpl
jne
xor
xor
inc
mov
cmpl
jb
mov
xor
sbbl
add
cmp
movl
je
pushl
xorl
pushl
call
mov
mov
mov
and
mov
negl
xor
subl
add
cmp
je
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jbe
jmp
push
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
mov
or
mov
adc
mov
add
xor
xor
sbb
mov
mov
dec
mov
add
mov
add
andl
mov
inc
mov
cmpl
ja
jmp
pushl
call
cmpl
jb
mov
mov
and
mov
xorl
mov
add
movl
mov
jmp
mov
mov
add
mov
mov
mov
xor
add
cmp
je
jmp
mov
mov
xor
add
jmp
jns
mov
mov
into
std
push
rolb
orl
sti
data16
dec
cmp
clc
jb
shlb
push
add
in
je
pop
into
addb
mov
xor
gs
cs
in
andb
mov
adc
in
rolb
js
lahf
and
xchg
subb
or
mov
je
imull
sbb
mov
pop
out
insb
ljmp
int
in
xor
and
add
add
jbe
out
cltd
stc
mov
fsubrs
and
pop
mov
inc
stos
pushf
jb
push
push
mov
mov
int
add
jl
or
fnsave
push
gs
nop
sub
mov
cli
sub
iret
std
jmpw
shl
and
pop
add
xor
adc
jno
ds
test
repz
sbb
jbe
pop
xor
out
sbb
xor
stos
xor
lds
lea
push
popa
out
int
inc
scas
stos
scas
push
push
clc
cmp
outsl
pop
sub
jnp
sbb
push
xor
mov
or
adc
xor
into
fmuls
mov
test
jae
cmp
inc
mov
inc
jnp
shrb
push
xchg
fidivl
out
cmp
push
inc
divl
lcall
cmp
outsl
fwait
outsb
mov
pop
sbb
or
jbe
lcall
dec
andb
lds
jle
fsubl
test
out
sbb
popf
jbe
mov
sbb
dec
sub
inc
cmpsl
cmpsl
sbb
scas
mov
push
cs
mov
fwait
paddb
sbb
pop
or
or
xchg
mov
jne
adc
sbb
lahf
mov
adc
jl
les
int
lods
test
inc
jns
icebp
xchg
ljmp
mov
dec
sub
pushf
jo
popa
jbe
xchg
gs
add
dec
or
xor
sbb
mov
cltd
roll
adc
ds
pop
fsubl
pop
add
stos
call
repz
jnp
les
lds
xor
and
cltd
cmp
sbb
insb
xchg
fldcw
and
cmp
lea
and
add
push
mov
ja
jp
or
cld
jno
lcall
xchg
addr16
cmp
mov
repnz
and
mov
sbb
mov
pop
or
lret
test
rcr
push
int
mov
xchg
pop
sub
pop
aas
daa
addb
adc
icebp
cmp
sahf
cmp
js
cmp
ret
xor
push
lods
daa
mov
xchg
call
xchg
pop
push
push
push
rorl
icebp
loopne
jbe
ret
hlt
adc
repz
jmp
bnd
loopne
cmp
hlt
push
sub
addb
or
test
inc
sub
sbb
stos
mov
sbb
dec
adc
mov
mov
mov
push
mov
dec
or
stos
push
mov
cmp
cmc
mov
out
cmp
inc
xor
add
das
mov
mov
mov
les
jns
add
xor
mov
xchg
xchg
sbb
sub
cmpsl
pop
or
cmpsl
inc
test
ret
mov
jle
dec
add
stc
mov
stos
xchg
cs
int
dec
cmp
mov
xlat
jge
in
xchg
jmp
leave
sti
fwait
in
dec
xchg
repz
sti
sysexit
hlt
test
sub
aas
scas
out
into
mov
xchg
test
outsb
mov
jne
or
repnz
cltd
mov
jmp
out
or
sbb
scas
cld
xchg
lret
xlat
push
push
enter
push
lea
xlat
mov
or
clc
fcoms
jp
mov
call
push
shrl
or
push
jg
inc
push
push
mov
mov
jecxz
jbe
add
push
test
or
xor
and
daa
out
imul
repz
jo
add
sbb
sub
ret
mov
sbb
and
out
aam
xchg
fisubrl
stos
cmp
adc
inc
dec
mov
in
sti
aaa
hlt
xchg
push
rcl
mov
repz
jg
push
scas
lods
cmp
jmp
fidivrl
lods
dec
add
push
sbb
or
bound
xor
enter
inc
out
xlat
adc
fiadds
pop
test
in
repz
lods
enter
push
xor
scas
push
outsl
mov
imul
inc
out
cmp
adc
xchg
mov
push
jb
fs
or
inc
addr16
sub
jg
popf
les
push
das
cmp
xchg
xor
fiaddl
cwtl
cld
clc
add
and
xchg
xor
pop
das
pop
mov
push
jbe
fdivs
adc
pushf
or
sub
hlt
js
inc
std
xor
stos
out
frstor
cmpsl
decl
push
xor
ret
sub
sbb
inc
xchg
add
pop
outsl
and
call
push
fldenv
shrl
in
test
pop
or
cld
dec
sub
mov
add
or
xchg
dec
out
jne
cli
lods
pop
ljmp
jno
dec
xchg
add
sbb
loop
pop
xchg
sub
fimuls
mov
or
or
enter
rcll
cmpsl
xlat
shl
jo
or
arpl
and
jns
or
adc
inc
pop
lret
jnp
push
addl
in
dec
jo
inc
popf
push
ret
sbb
mov
mov
and
adc
lea
inc
dec
sbb
mov
rcll
loope
or
jg
xchg
testl
das
pop
xchg
outsl
sbb
mov
and
aam
cmpsl
fldt
dec
hlt
sti
adc
mov
sub
ret
xor
sbb
jne
test
lret
xor
or
ja
cmp
push
ljmp
push
es
cli
mov
inc
jle
mov
dec
cmpb
nop
rcl
pop
pop
ss
push
lea
fildll
and
in
cmp
mov
test
out
outsb
orb
mov
sahf
jns
jnp
scas
sub
lods
lock
cli
fsubs
negl
pop
mov
sub
popf
jnp
rcr
test
inc
inc
and
hlt
test
mov
ljmp
sbb
and
dec
test
movsl
mov
sbb
aad
and
sbb
int
mov
arpl
xor
movsb
es
out
jmp
add
mov
sti
or
enter
inc
jle
test
rol
mov
testl
mov
cmpsb
sti
dec
add
in
mov
rcrl
adc
adc
clc
int3
sub
dec
sbb
std
cmp
neg
mov
in
fbstp
or
sbb
and
sub
add
sub
xchg
xchg
mov
adcb
out
hlt
enter
sbb
pop
aam
dec
outsl
pop
stc
sbb
out
sarb
out
push
mov
call
inc
sub
inc
mov
cmc
dec
rcrl
pminub
dec
ja
or
push
mov
push
iret
stos
jne
cltd
inc
xor
jecxz
mov
shrl
mov
push
aas
out
out
push
scas
sbb
pop
test
jge
add
out
fiaddl
and
int3
mov
pop
xchg
dec
test
or
dec
xchg
jb
and
insb
inc
xchg
data16
mov
sbb
lea
mov
int3
arpl
pop
inc
xlat
test
jmp
add
into
test
mov
or
jmp
pop
jge
ret
outsl
xchg
mov
arpl
andb
or
sahf
mov
into
inc
dec
popa
adc
cwtl
adcb
push
xorb
addr16
or
adc
loope
sbb
ja
rcrl
or
lods
mov
sbb
jmp
fisttpl
out
insb
pop
lock
enter
mov
mov
aam
xor
sbb
fiaddl
in
pop
mov
test
add
lcall
and
dec
xchg
xor
mov
addb
cmpsl
in
aas
shrb
dec
in
imul
jno
xchg
addb
fucom
xor
xchg
adc
sti
sub
mov
and
and
das
or
pop
cwtl
mov
sti
gs
in
shl
and
mov
cwtl
sbb
insb
outsb
bound
incb
mov
inc
lahf
cmpsl
stos
cmp
xchg
push
ficoms
leave
xchg
pop
sub
ja
popf
xchg
test
dec
and
das
push
lret
rclb
xor
ret
adc
test
dec
aaa
subb
add
ljmp
lcall
mov
pop
adc
cld
jae
das
mov
push
mov
xchg
push
dec
mov
out
outsb
sahf
inc
dec
sbb
jmp
add
repz
add
fsts
fdivs
cmp
std
cmp
sar
test
pusha
inc
lret
xor
adc
aaa
jecxz
and
pop
in
or
sbb
jbe
mov
jno
loopne
add
stos
ljmp
loope
inc
sahf
int
into
sbb
inc
jmp
add
cld
xchg
outsl
mov
sti
inc
sub
push
sbb
push
je
imul
popa
enter
fistl
bnd
cmp
jns
sub
xor
fldcw
dec
aam
out
and
and
stc
jl
fbstp
mov
fwait
ror
push
call
lds
mov
fsubr
test
sti
dec
mov
js
inc
sbb
xchg
dec
inc
push
hlt
sub
pop
dec
adc
mov
enter
les
and
jge
jecxz
add
and
vpshuflw
rorb
mov
mov
lods
inc
sbb
jbe
and
nop
adc
adc
lahf
les
inc
clc
pusha
mov
push
sbb
testl
dec
pop
jle
mov
and
cltd
out
add
test
xor
or
cmpsb
xchg
lcall
mov
fbld
lret
jmp
imul
or
jg
loope
scas
fdivrp
and
sarl
scas
out
and
rorl
nop
in
mov
mov
movsl
sbb
fwait
movsl
and
mov
stos
dec
lods
outsb
jl
adc
pop
popa
push
repnz
out
mov
and
fmuls
xor
jl
addr16
push
jecxz
dec
loopne
mov
mov
into
dec
jns
lea
dec
pushw
loope
lcall
out
add
and
cmpsb
jmp
sti
imul
pop
mov
jecxz
lahf
pop
xor
inc
mov
movsl
out
cmp
pop
test
xchg
add
mulb
jg
int3
xchg
leave
xor
xor
aaa
and
aaa
xchg
mov
mov
jae
imulb
inc
hlt
rol
pushf
arpl
pop
add
ja
sbb
xchg
jno
mov
fisttpl
es
push
cmc
sub
sub
add
xor
or
fidivs
mov
dec
xchg
jb
mov
fildll
add
sub
and
cmc
cmc
jg
xor
hlt
insb
jmp
sub
mov
cld
ja
inc
dec
cs
hlt
lods
jl
inc
int3
pop
sbbl
add
push
add
in
mov
xor
and
cmp
mov
mov
ret
cmp
adc
inc
in
pusha
sub
movsl
xor
nop
clc
into
les
test
sbb
in
adc
cli
dec
mov
push
xchg
jmp
mov
push
push
fsubl
pop
push
rcr
xchg
and
xor
andl
insb
ljmp
lock
rclb
lods
pop
push
ja
mov
pusha
sbb
insb
sbbb
cld
and
sbb
es
ficoml
mov
loop
lods
dec
fisttpl
add
push
and
sti
adc
and
jbe
xchg
inc
lcall
mov
jo
and
jo
pop
sbb
imul
out
push
loope
cmp
lcall
xchg
xchg
popa
arpl
sub
orl
cs
stos
adc
dec
popf
pop
mov
inc
dec
ret
mov
xor
into
hlt
ret
mov
ja
pop
rorl
in
je
int
cmpb
sbb
popf
gs
stos
shlb
js
call
jo
inc
add
scas
jae
dec
popf
mov
dec
sti
test
fisubrl
jno
leave
or
popf
pop
and
push
sub
insl
lcall
rolb
rolb
push
dec
push
mov
dec
mov
pushf
fdivs
pop
test
lods
outsb
and
cli
ljmp
les
adc
out
repnz
push
mov
fadds
jbe
or
lock
test
movsl
test
pop
cmpsb
pop
ja
xor
lahf
loop
or
push
mov
jle
add
mov
cltd
inc
jmp
pop
or
pop
mov
in
repnz
push
mov
outsb
outsl
loopne
add
add
fisubrl
sbb
test
sbb
lahf
mov
mov
xor
mov
pop
inc
movsl
jmp
mov
daa
int
lods
movsb
sub
out
mov
push
inc
xor
add
jns
ss
dec
dec
aaa
aas
inc
dec
sahf
mov
bound
sbb
xchg
xor
push
push
inc
mov
cmp
pop
or
jp
cmp
imul
imul
imul
fucomp
shrl
xor
and
inc
push
test
inc
xorl
mov
pop
test
mov
pop
xchg
mov
xchg
xor
mov
sub
test
sub
jl
lret
mov
push
int
pop
pop
stc
stos
in
xchg
mov
negb
nop
or
jno
sub
push
repnz
add
push
addr16
les
imul
sbb
arpl
lret
inc
imul
testl
push
out
sbb
sbb
cmp
out
jp
pop
aas
stc
out
pop
mov
loope
sub
jbe
daa
aas
sub
iret
lock
add
sub
sub
cmp
mov
das
jg
loopne
in
dec
data16
out
inc
mov
sbb
xor
mov
pusha
and
mov
mov
rcr
push
inc
ficoms
mov
adc
movsl
inc
xchg
aad
vmaxss
sub
jecxz
push
in
sbb
add
xchg
rcrl
cmp
xchg
xchg
into
xorl
lret
and
cmp
mov
iret
pop
int
push
add
cli
ret
mov
lock
xchg
ljmp
faddl
push
sbb
mov
pop
aam
rcrl
test
rcrl
mov
sub
pop
push
cmpsb
cmp
cmp
fistps
xchg
sub
jmp
jp
pusha
mov
das
mov
in
push
shlb
push
pop
or
or
jne
dec
mov
aas
loopne
loope
aas
lcall
pop
fistpl
aam
into
clc
inc
xchg
pop
pop
test
loope
add
out
jge
jg
xchg
cmp
imul
xor
pop
popf
ficompl
test
mov
cld
jge
fildll
xchg
mov
adc
or
lea
out
andb
scas
fistpl
shrl
iret
push
movsl
stos
mov
pop
fcmovnbe
dec
jge
idivl
xchg
int
out
pop
insb
std
sub
jmp
jb
inc
pop
adc
fdivs
pop
sub
mov
cmp
jno
or
test
sub
test
and
xchg
lods
add
imul
add
fisubl
pop
sbb
xchg
jl
push
and
mov
jo
add
sub
add
cvttps2pi
xchg
mov
jns
shl
shr
and
aam
add
inc
jnp
fcompl
int3
aas
pop
clc
sbb
pop
ret
mov
mov
in
enter
xor
int3
pop
cli
push
in
imul
flds
hlt
jae
sbb
popa
push
or
sbb
pop
les
cmp
xor
pop
sbb
or
clc
imul
test
es
xor
mov
insl
lret
mov
enter
std
clc
leave
dec
lock
xchg
imul
lea
push
mov
adcb
out
push
inc
jmp
jns
pop
and
add
cs
inc
fldl2e
rcl
push
mov
repz
mov
sbb
pop
call
nop
mov
push
ja
pop
loope
or
xchg
mov
aaa
pop
imul
sbb
imull
cli
shr
push
mov
xor
fists
sub
data16
mov
loopne
ja
jl
xchg
fistps
imul
in
lock
inc
mov
adc
fwait
ss
jmp
pop
testl
aam
popa
aad
mov
jg
std
and
movsl
inc
neg
sub
out
aaa
mov
in
push
inc
add
cltd
negl
int3
jmp
int3
push
cmpb
adc
xlat
iret
xchg
inc
push
or
rorb
cs
pop
mov
pop
sub
xchg
aas
roll
push
dec
jno
pop
jge
mov
lods
das
add
rep
pusha
push
test
faddl
mov
sahf
fisttpll
rol
test
sub
cwtl
add
ss
mov
mov
mov
add
jl
cmpsb
adc
shlb
mov
pusha
dec
mov
out
mov
push
test
sub
or
mov
pop
inc
imul
jae
imul
loopne
mov
jno
sub
es
icebp
andb
sub
sbb
push
xor
push
test
adc
cmp
fidivrs
nop
lock
int3
mov
mov
pop
sarl
rolb
mov
pop
mov
js
lea
lods
xor
push
das
xchg
sub
insl
and
lods
int3
jb
rorb
insl
adc
rcrl
imul
test
mov
sub
lds
push
and
pop
inc
bound
add
push
mov
cwtl
pushf
jge
adc
inc
pop
jmp
dec
xor
mov
sbb
sbb
cmp
test
mov
lock
div
mov
mov
dec
pop
or
cmp
pop
xchg
sbb
sub
cltd
das
xchg
cs
fbstp
inc
int3
cmp
enter
xchg
movsl
movb
movsb
imul
and
push
xchg
fcomip
inc
nop
xchg
test
imul
lods
leave
xchg
outsl
or
mov
adc
xchg
and
and
shrl
push
xchg
xor
loop
xor
jl
jnp
mov
jbe
inc
sar
and
fnstcw
add
lcall
and
stos
nop
jecxz
lcall
adc
xchg
loop
addr16
adc
push
ja
data16
jns
jecxz
out
push
xor
int3
jecxz
mov
movl
xchg
mov
mov
sahf
add
mov
xchg
std
ja
lock
outsw
and
xchg
je
out
lds
es
ja
jmp
mov
dec
mov
xlat
mov
outsl
jno
gs
pusha
jg
pop
out
and
bnd
popl
repz
pop
clc
dec
adc
sti
xchg
fbld
mov
imul
fcoml
sahf
icebp
xchg
cld
rcrl
popa
fsts
addr16
xchg
aaa
lret
fidivrl
cs
sbb
mov
stos
push
fcomps
and
jl,pt
pop
and
icebp
dec
lret
jbe
in
jl
scas
dec
std
and
mul
out
sbb
or
mov
int3
fucom
jb
mov
test
pop
or
adc
or
add
xor
jmp
test
fwait
or
pop
fisubrs
enter
jne
sub
pop
popf
pop
jg
insl
mov
mov
dec
std
jbe
add
and
jno
sub
push
cli
lret
mov
mov
cmp
push
or
pop
mov
gs
pusha
cmp
jmp
loop
sub
filds
into
imull
mov
xlat
jg
xchg
mov
and
ficompl
in
je
pop
mov
sub
shrb
mov
fbld
loop
int
loop
mov
in
pop
nop
jbe
out
shll
imul
pop
jbe
sahf
mov
xor
inc
je
or
mov
inc
jge
rclb
sub
or
add
dec
pushf
jle
dec
pusha
popf
pop
int
inc
aaa
popa
bnd
ret
cmp
mov
dec
dec
inc
jl
mov
add
stos
in
push
test
clc
mov
int3
mov
inc
mov
mov
xorb
cmpsb
and
xor
sub
int
add
jb
outsb
ret
insb
cld
cwtl
mov
clc
mov
test
loop
xchg
pop
out
lret
loope
adc
cld
enter
inc
add
jo
orl
sbb
xor
test
jnp
mov
mov
cmp
dec
push
cld
rcr
jb
fidivl
inc
lea
dec
mov
pop
pop
gs
lds
test
jne
outsb
fldl
test
sbb
push
mov
out
rorl
inc
cltd
inc
enter
clc
test
push
push
aas
jb
adc
sahf
push
fwait
inc
cli
dec
lret
cmp
jns
or
mulb
add
into
rorl
mov
leave
add
fdivrs
lods
aad
cmpsb
sub
fnstcw
push
cld
or
xor
mov
fcmovu
dec
mov
inc
sbb
shlb
cs
cmp
in
adc
adc
shl
jno
shll
dec
bound
adc
fcom
sysret
rcll
pop
repnz
lahf
sub
cmp
ret
or
shlb
add
xor
in
std
xor
jecxz
sub
xor
aaa
jl
cwtl
dec
pop
ret
xor
neg
sub
mov
js
mov
addb
mov
rcrb
push
enter
mov
mov
xor
add
mov
rolb
sub
or
jo
mov
adc
popf
mov
sahf
lret
mov
cmp
mov
push
xchg
in
inc
inc
mov
out
mov
jbe
pop
fimuls
int3
fcompl
movsb
mov
mov
xlat
lret
in
ret
nop
xor
mov
pop
outsl
fnstenv
dec
test
sub
and
cmp
cmp
sub
mov
sub
dec
dec
jo
fcoms
shrb
iret
xchg
sub
pop
sbbb
dec
pop
fistpl
das
push
fwait
or
scas
fs
iret
xchg
mov
shll
jmp
movsb
xorl
add
jnp
xor
movsb
out
cmp
mov
jle
jg
mov
das
xchg
xor
xchg
les
fbld
stos
sbb
sub
cld
inc
ss
lret
and
inc
cmp
daa
or
mov
and
into
inc
sub
xor
pop
iret
ds
cmpsb
shlb
inc
int3
pop
mov
divl
call
xor
mov
inc
in
leave
clc
sub
ljmp
jmp
test
ja
negl
pop
lret
xchg
mov
into
mov
mov
add
mov
push
out
mov
test
pop
das
mov
pop
jg
outsl
in
test
imul
adc
push
pop
aaa
test
dec
add
test
ret
and
xchg
pop
adc
outsl
hlt
mov
mov
sub
cmpsl
inc
adc
mov
mov
jns
out
mov
aaa
mov
cwtl
andb
push
dec
fbld
pop
push
jns
loope
mov
or
das
xor
sbb
mov
dec
mov
mov
test
loopne
js
in
sbb
mov
rclb
add
mov
inc
cs
jnp
dec
popf
ljmp
ret
fwait
xchg
dec
cld
jp
inc
in
push
push
sbb
outsb
hlt
push
mov
fidivrs
cmpsl
fidivs
inc
cmp
push
pop
pop
fst
xchg
rcrl
cli
push
jmp
jnp
pop
mov
ds
movsl
inc
sbb
adc
call
jne
adc
mov
int3
stc
ds
cmp
and
mov
arpl
cmp
push
cs
jnp
pop
ret
mov
test
daa
jp
insb
notb
orb
sub
loop
addb
pop
fistpll
test
pop
fs
loopne
jns
in
sub
xchg
sbb
add
dec
jno
sub
or
xor
push
mov
leave
cld
pop
lahf
push
sbb
add
add
stos
ds
cmc
xor
sbb
mov
lock
xchg
mov
pop
mov
std
stc
das
data16
test
hlt
hlt
pop
jae
or
out
sub
outsb
push
mov
je
jmp
stos
aad
mov
cmpl
jo
fsubs
ja
xor
les
inc
mov
or
pop
mov
cld
sub
add
arpl
loope
andb
arpl
repnz
nop
adcb
fdivr
outsl
int3
sbb
mov
mov
cmp
dec
aaa
fldenv
or
xchg
cmp
cmp
or
push
push
and
sub
insb
or
mov
jl
push
xchg
mov
pop
push
outsl
xor
lret
lret
mulb
test
into
je
cmp
cltd
mov
add
scas
lahf
sbb
jno
cmp
push
push
rcl
dec
xchg
dec
sub
mov
stos
iret
or
push
dec
sbb
cmp
pop
lock
inc
pop
jmp
ds
push
xchg
lcall
addr16
lods
push
inc
and
adc
mov
jo
mov
lea
adc
nop
jno
mov
int3
fmuls
outsb
push
mov
addr16
pop
cmpb
sbb
je
add
pop
push
xor
mov
outsl
popl
mov
jmp
adc
mov
das
xchg
repnz
ja
sub
jbe
xchg
out
add
mov
in
mov
dec
ret
jno
add
jbe
xor
sub
cltd
jo
arpl
outsl
arpl
and
pop
sub
sub
inc
xor
repz
mov
xor
pop
sub
inc
mov
mov
inc
cltd
leave
fsubrl
sahf
mov
push
aas
sarb
insb
xchg
push
imul
aam
in
bound
mov
jns
imul
mov
mov
mov
ret
iret
jo
mov
pop
adc
out
cmp
mov
js
push
cmp
jg
pop
hlt
mov
clc
add
in
inc
test
lret
inc
pop
push
cmpsb
or
add
iret
hlt
insl
cmp
xor
and
js
xchg
push
and
imul
aas
jne
mov
add
mov
push
cmpsl
push
pop
mov
pop
xchg
cmp
iret
decl
jnp
pushf
test
sbb
or
mov
outsl
and
xchg
sub
ds
mov
xchg
cmpsb
outsb
adc
es
jle
and
movsb
in
cmp
out
jecxz
pusha
into
bound
mov
add
pushf
movsl
aaa
ror
jle
cmp
and
leave
ds
push
sti
adc
push
adc
fwait
mov
add
nop
arpl
adc
xchg
js
xchg
and
mov
sbb
filds
pusha
shll
xor
lret
mov
mov
pop
movsl
insl
jecxz,pt
add
jbe
cwtl
pushf
or
sbb
mov
dec
std
sub
popf
in
pop
pop
jnp
mov
data16
add
lds
lcall
cmpsl
mov
mov
in
insb
pusha
mov
and
or
cli
jb
mov
insl
push
xchg
lcall
sub
stc
addl
icebp
lahf
xlat
add
aaa
cmp
jp
mov
imull
inc
push
adc
fwait
mov
arpl
or
cmp
outsb
repnz
adc
scas
imull
cwtl
std
adc
loope
leave
xor
scas
mov
push
sub
mov
outsb
daa
push
xor
out
and
test
int
outsl
movsl
aaa
fwait
jg
out
in
aad
add
in
sbb
add
xchg
sbb
sub
jo
adc
pop
push
mov
adc
ficomps
xor
outsl
or
push
pop
out
sub
sbb
jo
sbb
aad
dec
pop
mov
or
out
test
add
sbb
stos
fnstsw
or
pushf
mov
cli
call
rcr
pop
orl
xor
and
lcall
sahf
out
test
cld
and
imul
xchg
dec
push
push
test
ffreep
pop
fsubp
fwait
mov
or
push
or
aam
push
ja
rolb
sub
jecxz
cwtl
fistpl
add
stc
icebp
cmp
pop
cmpl
loopne
inc
enter
fldcw
out
dec
cld
dec
jmp
sarl
js
push
mov
notl
dec
adc
repnz
jle
and
nop
js
jb
into
lret
xchg
adc
jae
sbb
inc
out
push
frstor
mov
fsubrs
pop
or
call
shrl
dec
pop
stos
rorb
pop
push
pop
dec
movsl
ljmp
fsubl
out
out
dec
sub
icebp
mov
xor
int3
cwtl
mov
repnz
pop
mov
sub
or
out
adc
cli
shrl
imul
popf
int
dec
sub
in
inc
cli
or
push
xor
cltd
mov
cmp
jmp
xchg
fs
pop
sub
jnp
inc
js
and
push
fcoms
ljmp
aam
ds
jmp
cmp
fsubrl
inc
xchg
push
pop
jp
inc
mov
dec
aas
lods
lock
stos
insl
push
push
jno
jg
mov
sub
shlb
cli
pushf
dec
cmpsb
cltd
adc
xor
sub
jno
fsubp
shll
mov
ds
rcrl
aam
sub
xor
cmp
scas
inc
stos
mov
cld
mov
pushf
pop
or
insb
ja
mov
add
push
add
pop
xor
in
add
scas
into
jmp
test
cmp
jo
stc
lods
cli
pop
das
shlb
sub
fmull
xorb
mov
je
mov
xor
add
cmp
je
lea
push
pushl
pushl
call
mov
mov
xor
add
cmp
je
mov
movzwl
mov
mov
mov
jmp
mov
xor
lea
jmp
mov
xor
add
jmp
mov
add
mov
mov
test
je
movl
push
xor
pop
add
push
pop
push
dec
pop
dec
xchg
sub
xchg
dec
mov
imul
sub
mov
mov
xor
add
jmp
mov
mov
mov
mov
jmp
push
into
cmc
pop
in
xchg
mov
mov
push
scas
addl
movl
andl
ljmp
std
test
mov
pop
xor
push
stos
adc
mov
push
js
xor
mov
scas
sti
dec
and
push
adc
aad
ljmp
movsl
push
push
lcall
into
hlt
mov
jbe
xchg
popf
lcall
lret
out
shll
mov
and
scas
xchg
push
loope
test
data16
xchg
pop
cmc
mov
mov
push
pop
outsl
mov
sub
out
ss
jmp
fidivl
push
lret
xchg
ds
icebp
loop
fisttps
xchg
jns
mov
lods
dec
pop
aad
mov
sbb
leave
popa
fidivs
inc
sub
mov
enter
ret
xor
hlt
jnp
sbb
cwtl
add
lock
mov
sub
std
imul
sub
push
out
pop
hlt
mov
daa
insl
lahf
sub
push
mov
sub
nop
shll
rcrb
idiv
sbb
mov
push
xlat
xchg
sarl
mov
loope
lahf
push
stos
pop
or
test
add
jmp
mov
sub
lods
fcoms
icebp
scas
mov
mov
jge
mov
inc
pop
stc
jo
fs
rcrb
sahf
dec
icebp
cwtl
xorb
fsubr
ret
mov
add
in
xor
into
ret
dec
pop
xor
mov
sbb
and
sub
mov
add
lcall
clc
jno
dec
nop
nop
add
test
xchg
stos
pop
jl
add
mov
mov
sbbl
mov
movsl
inc
xchg
jbe
notb
aam
test
scas
push
sbb
pop
xchg
out
push
scas
cmp
es
dec
or
or
jmp
in
pop
cli
pushf
adc
iret
sub
and
xor
adc
out
mov
cmp
add
and
jb
cmp
lahf
dec
jmp
lret
mov
dec
push
lea
lods
aam
out
push
test
into
pop
flds
scas
in
push
rcll
jae
lret
sub
mov
mov
sbb
sub
dec
leave
insb
sbb
insb
jne
aaa
xbegin
aam
lea
cmp
stos
repz
xor
and
jne
push
inc
add
mov
lock
inc
gs
add
arpl
cwtl
jecxz
ret
mov
push
push
pop
in
mov
nop
rcl
dec
addb
dec
ljmp
mov
fnsetpm(287
push
xor
mov
mov
mov
std
rclb
and
in
xor
or
pop
dec
pop
adc
popf
sub
inc
inc
lock
hlt
test
add
mov
mov
push
inc
fstpt
daa
xor
outsb
jb
xor
push
cmp
and
mov
sahf
inc
mov
outsl
and
xchg
push
dec
dec
cmp
push
jecxz
jecxz
cltd
sub
popf
mov
insl
sbb
jge
out
xchg
addr16
ficomps
mov
push
out
js
jmp
dec
add
test
mov
in
test
mov
pop
stos
or
lock
sbb
in
adc
inc
lods
test
out
mov
sets
jl
fadd
scas
cmc
push
in
shr
mov
cmp
adc
pop
mov
fcmovne
cmpsl
inc
cli
in
cld
ret
je
aaa
adcb
in
push
sti
test
test
push
pop
sbb
fsincos
add
mov
imul
xchg
mov
inc
jl
add
sub
cmp
jnp
shll
mov
cmp
ret
loope
push
sub
push
sub
xor
dec
loope
shl
aas
pop
mov
add
push
push
xor
adc
jae
sarb
lds
sbb
arpl
in
sub
clc
mov
shrl
cmpsb
imul
hlt
scas
xchg
fwait
adcb
outsb
dec
lcall
push
xchg
cwtl
inc
cmp
xchg
mov
cmp
cmc
outsb
enter
je
add
std
add
sbb
fdivs
inc
pop
or
jmp
mov
adc
ror
les
push
icebp
or
ret
add
aas
sub
sub
xchg
mov
lret
pop
int3
leave
cmp
pop
icebp
aas
or
inc
jl
lret
pusha
ret
adcb
lds
inc
mov
loopne
jnp
jb
mov
dec
or
das
in
dec
stc
ficoms
xchg
or
or
sbb
xchg
jne
jno
stos
xor
and
mov
or
jbe
xchg
jle
sti
lret
push
push
adc
pushf
sbbl
orb
rcrl
cmpsb
and
gs
cltd
andl
mov
mov
sti
outsb
cmp
mov
xor
inc
std
pop
cmpsl
dec
and
popa
fbstp
mov
mov
mov
push
push
subb
mov
and
insl
lea
xchg
push
mov
orb
inc
fcomp
pop
push
push
mov
popf
cli
insb
nop
or
push
rcr
vpsrlw
lcall
cltd
sahf
push
jne
jae
stos
nop
repz
cmp
aad
popa
mov
gs
sbb
mov
xchg
jb
movsb
bound
mov
lret
cwtl
pop
in
shlb
pusha
mov
das
and
push
lods
mov
inc
push
mov
aam
cld
mov
es
ljmp
pop
movsb
int
mov
sub
pop
or
jmp
std
pop
enter
xor
push
mov
jbe
pop
clc
in
aad
dec
lcall
or
mov
popf
and
cmp
or
lock
mov
add
jp
enter
ret
add
dec
int
ja
idivl
icebp
inc
cld
dec
cmc
push
cmc
sub
xchg
pop
negl
ljmp
or
out
cmp
fdivrl
call
push
jns
mov
mov
stos
pop
imul
pop
mov
xchg
mov
fadd
insb
and
fwait
cmc
adc
out
in
insl
fistpl
jns
les
fbld
xor
lea
sbb
sub
mov
jnp
sub
pop
mov
fildll
jb
inc
cmp
cmp
jae
xchg
xlat
fwait
sub
jns
and
or
jmp
fsubl
mov
mov
sbbl
mov
hlt
dec
push
push
mov
repnz
inc
popa
xor
enter
or
ficoms
out
loope
push
insl
lock
addl
and
sbb
aas
add
in
gs
loop
xchg
dec
cmp
xchg
fistl
sarl
fxch
jmp
or
or
mov
scas
push
hlt
push
icebp
add
sbb
out
jge
mov
cmp
jmp
leave
in
imull
xlat
xlat
mov
jno
cli
sub
jl
and
cwtl
jae
daa
xchg
cltd
push
repz
push
add
out
mov
jle
jns
stos
pop
clc
or
push
fs
popf
and
lods
rclb
mov
fstps
js
repnz
mov
imul
aad
aad
jns
jnp
push
push
cmp
add
inc
mov
and
jge
lea
mov
push
adc
add
sbb
lds
pop
ja
mov
sub
mov
repz
outsb
movsb
in
imul
in
dec
xor
cmpsb
sub
cwtl
xor
movsb
inc
and
int
mov
stos
jecxz
imul
das
sbb
sti
sub
das
bound
rclb
xchg
flds
data16
sahf
xor
jg
sbb
icebp
pop
ja
inc
jmp
sbb
jg
mov
pop
imul
shlb
setae
movsl
sub
sbb
mov
push
dec
insb
lds
imul
aam
pop
adc
fidivrl
das
adc
movsl
cmc
jb
inc
xlat
loop
pop
ret
xchg
les
push
and
pop
pop
push
dec
daa
or
inc
lea
fcmovnbe
cltd
and
add
lret
xchg
jbe
push
stos
out
jmp
sbb
out
jmp
jnp
test
lds
push
mov
cltd
clc
push
nop
inc
or
mov
sub
ret
fistps
mov
aaa
fstps
fcmovnbe
mov
mov
je
orl
js
ljmp
pop
dec
mov
scas
jo
stc
xlat
fsubrl
es
in
test
adc
imulb
or
rcl
sbb
push
loopne
and
xchg
dec
cmp
sahf
jno
inc
fimull
aas
cmc
pop
in
xor
in
pop
es
xor
jo
fidivrs
jae
call
sbb
push
inc
mov
decl
hlt
and
jbe
sub
pop
jmp
sbb
nop
loopne
pop
enter
jbe
pusha
cmc
sub
outsl
data16
addr16
cli
add
nop
out
mov
xlat
jge
out
push
mov
xor
jle
push
loopne
add
jle
pop
out
adc
sbb
movsb
fcmovnbe
loopne
fs
int3
leave
add
shll
loopne
cli
sti
stc
idivb
stos
outsl
adc
push
sbb
std
jmp
out
enter
mov
pop
gs
sahf
mov
enter
xor
arpl
mov
mov
sbb
scas
push
dec
repnz
sub
sub
cmp
loope
mov
shll
mov
lea
mov
xor
cltd
fists
aaa
data16
adc
lret
xchg
xchg
movsl
mov
in
mov
repz
or
in
std
pop
jae
xchg
push
dec
dec
adc
addr16
bound
aaa
mov
xchg
adc
pop
jg
adc
mov
xor
dec
adc
xchg
push
cmp
rcl
jmp
jno
js
pop
test
fadd
and
xor
or
mov
or
lods
push
mov
insl
lds
adc
fwait
and
pop
popf
roll
sbb
fs
cmpsl
jb
jne
je
mov
stos
pop
xchg
stc
xorl
jne
fwait
jne
xchg
mov
pop
push
cmpl
inc
iret
adc
pop
test
sar
dec
push
scas
repz
pop
xchg
adc
repnz
push
push
and
pop
rcl
aam
or
push
mov
jle
loop
lret
int3
xor
jmp
lods
shll
sub
nop
into
test
test
xchg
lds
cs
cli
sahf
xor
xchg
jg
add
sbb
adc
sahf
or
lret
mov
in
int
or
cli
add
daa
out
cld
ja
lods
in
pop
sub
cld
and
shll
imul
ds
and
cwtl
insl
jge
mov
cltd
mov
lret
xchg
sub
das
movsl
dec
test
push
push
push
dec
jl
xor
std
inc
daa
or
mov
pusha
and
lret
popf
push
aam
aaa
push
xchg
or
call
addr16
mov
mov
daa
xor
in
sub
dec
dec
lea
push
inc
fisttpll
in
cmc
mov
orl
pop
push
adc
xor
in
ror
ljmp
rcrl
pop
insl
test
or
dec
lea
jo
pop
ret
loopne
movsb
das
rclb
in
mov
mov
dec
add
push
or
test
stc
add
jo
out
cmp
xchg
inc
and
fwait
sahf
inc
xlat
out
pop
jl
test
daa
dec
inc
adcb
mov
in
mov
ret
cmpsl
jae
mov
jl
sub
jge
test
dec
ja
push
xchg
jne
xor
push
into
cmc
mov
rolb
mov
test
cld
stos
mov
cmp
dec
add
aaa
inc
imul
mov
mov
sub
lds
cmp
pushf
lret
sub
and
dec
stc
lods
pop
adc
bound
in
add
jae
pop
stos
out
push
fnstcw
iret
sub
pop
mov
cmp
outsl
out
cmp
mov
jnp
push
mov
leave
jne
aad
mov
mulb
xchg
add
xlat
lret
ss
push
pop
or
adc
mov
dec
pop
sub
lret
dec
mov
hlt
jbe
push
add
test
das
pop
fwait
adc
dec
in
scas
mov
fnstsw
das
push
popf
shrb
dec
popf
scas
add
pop
scas
incb
je
xor
icebp
inc
in
sbb
pop
in
icebp
popa
mov
fstpl
hlt
and
lcall
jns
psllq
scas
addl
jb
dec
cmp
sub
xchg
test
imul
sbb
jl
or
push
ret
andb
popf
popa
cmpsl
ja
pushf
xor
into
in
mov
aas
in
sub
addr16
iret
mov
mov
jl
sti
jb
inc
lds
or
fsubs
push
add
mov
jae
pop
pop
push
nop
jne
scas
lods
popf
enter
cmp
jge
movsb
cmc
roll
sbbl
scas
sbb
aad
sti
mov
loope
mov
xchg
dec
mov
pusha
popa
sahf
ret
pusha
lret
loopne
lcall
or
mov
inc
and
jb
movb
mov
cltd
and
cmpsb
repz
clc
push
incl
jp
icebp
jge
insb
arpl
fadd
mov
xor
mov
lods
nop
cmp
ret
jge
dec
xacquire
mov
adcl
push
leave
push
add
mov
test
mov
pop
jne
aad
mov
movsl
nop
scas
cltd
push
jp
jns
shll
sbb
push
cmc
in
pop
xchg
mov
mov
popa
lahf
nop
cmp
jae
fistps
xchg
andl
adcb
mov
sbb
lret
cmp
test
inc
sbb
jmp
cmova
jnp
fldl
sbb
das
imul
shll
outsl
jle
pop
lret
mov
cmpb
jg
push
iret
lods
lock
in
mov
dec
das
inc
xor
inc
dec
jo
in
sub
or
push
sub
std
push
inc
pushf
cmp
mov
ljmp
inc
into
jbe
xor
mov
xchg
jg
pop
or
pop
sbb
decl
out
lods
push
dec
lods
ss
push
xor
sbb
and
push
call
cmp
loope
mov
sbb
mov
push
adc
scas
cwtl
cmc
sarb
inc
icebp
dec
mov
mov
aas
lods
cmp
xchg
cmp
scas
sbb
lidtl
test
ret
xor
mov
sahf
pop
cmp
ja,pt
test
jecxz
mov
mov
fstl
imul
das
push
les
push
mov
cmpsb
jo
cli
mov
adc
jp
dec
cmp
or
fcmovu
mov
aad
les
dec
js
or
mov
ss
jnp
add
movsb
pop
fiadds
roll
mov
jo
insl
mov
or
insb
ja
mov
repnz
movsl
push
loop
dec
and
in
imul
dec
jmp
push
call
xor
bound
daa
adc
mov
xchg
mov
jp
sbb
sbb
mov
jle
xchg
pusha
int3
xchg
mov
jp
call
fwait
and
enter
fcomi
xor
scas
das
pop
fistpll
fnsave
roll
cwtl
cmp
fistl
or
mov
in
pop
lock
cmpsb
mov
jne
std
mov
push
call
cmp
sub
jmp
mov
loop
cld
sbb
lods
jo
adcb
jp
pop
add
addr16
inc
adc
test
mov
outsl
bound
outsb
cmp
xchg
xor
jmp
and
cmp
add
fidivrs
jnp
movsb
cmc
and
scas
push
lea
int
repz
push
mov
mov
mov
rcr
pop
push
cli
sub
pop
movsb
out
fucom
sub
repnz
dec
mov
lea
add
es
mov
xchg
repz
cli
imull
mov
jae
xchg
inc
stos
cmp
aas
je
push
cmp
xchg
pop
mov
ljmp
fstl
popa
or
out
dec
outsl
cmpsb
sub
in
mov
or
pop
rolb
dec
and
sbb
sarb
movsl
ss
es
add
cwtl
mov
push
push
ret
test
fcmovbe
xchg
push
adc
fisttps
fsave
je
adc
add
mov
call
xor
scas
icebp
sub
std
pop
mov
sub
sbb
pop
idivl
sbb
mov
ret
out
pop
loop
lock
cwtl
lods
aas
andb
fcmovnb
sbb
mov
test
decb
or
bound
mov
adc
inc
xchg
push
mov
and
xchg
pop
sarb
arpl
mov
and
inc
jno
cli
jg
push
jne
add
dec
scas
pop
mov
mov
add
cmp
inc
movswl
rcl
or
and
nop
jb
int
pop
loop
test
push
inc
sti
js
xor
mov
cli
decl
out
shl
movsl
ljmp
mov
and
ret
push
xchg
add
in
mov
pushl
sbb
jecxz
jne
outsb
jno
popf
mov
jbe
ds
enter
arpl
inc
stc
in
clc
testb
jecxz
xchg
jmp
lds
scas
scas
pushf
mov
divb
pop
enter
cli
into
sub
es
mov
jbe
pop
bsf
imul
cmpsl
sub
pop
jns
adc
push
xor
add
aad
into
mov
in
ret
or
aad
shll
jle
add
inc
out
jbe
lcall
pop
daa
in
adc
inc
pop
push
out
sahf
xor
add
lcall
push
in
fs
jge
inc
ret
push
pop
enter
sbb
fiaddl
mov
jl
sbbb
rcl
mov
inc
cmp
fldenv
cmp
and
rorb
stc
fsubs
arpl
lock
inc
fildl
out
xchg
dec
ja
repz
or
cmpsl
pushf
ret
femms
cmpsb
mov
mov
fadd
sbb
mov
inc
ret
ds
cmp
mov
jle
and
fs
adc
pop
fisttpl
push
jmp
mov
dec
dec
jmp
jg
sub
pop
scas
sbb
dec
outsl
cmp
mov
xchg
fdivrs
cltd
aad
inc
mov
dec
dec
lret
adcl
inc
insl
dec
jl
push
mov
pop
ffree
fnstcw
sbb
fistl
and
int
and
jp
dec
test
jmp
cmp
xchg
test
sub
mov
into
mov
cs
es
mov
pop
cltd
addr16
cmc
xor
push
rcl
insb
repz
fldenv
cmp
cmpsl
xchg
shrb
ss
sti
mov
loopne
mov
in
xchg
xchg
fldcw
clc
mov
rcll
movsb
aas
movsl
mov
incb
loope
lock
aaa
or
jg
push
dec
sub
rcrw
dec
dec
jmp
pop
lea
push
or
and
xor
pop
add
daa
fistl
ret
jo
jecxz
and
mov
xchg
push
movsl
lcall
sbb
sbb
fnstcw
jno
push
add
jo
into
into
divl
pop
sbb
popa
leave
pop
repz
push
hlt
in
or
dec
mov
cmp
call
dec
jbe
xor
sub
ljmp
inc
pop
add
pop
and
jbe
adc
dec
cmpsb
jge
out
int
mov
jns
adc
mov
add
lret
sahf
dec
negb
test
sub
dec
scas
xchg
jg
bnd
mov
jl
insl
pop
loope
stc
mov
dec
mov
lahf
jl
into
push
in
push
enter
fs
fsubs
and
jle
cmc
aad
sub
mov
lds
ds
in
outsb
addr16
push
aaa
jns
aam
push
cwtl
sbb
jne
leave
xchg
pop
or
shrl
add
cmpsb
lock
dec
sbbb
xchg
xchg
test
imul
lods
push
cmp
add
out
jmp
aad
mov
sbb
or
movsl
sub
test
out
bound
push
push
mov
lock
cmc
and
push
and
hlt
cmp
jo
or
in
or
std
lret
insl
lret
inc
push
xor
mov
mov
outsl
sub
or
xchg
les
inc
call
cmp
mov
popa
into
fcomps
sub
sbb
pop
out
mov
rolb
das
enter
lahf
cmpb
sbb
jne
ret
rcl
jg
jno
mov
and
or
xor
out
aad
aas
lds
clc
test
out
pusha
sub
cmp
jne
pop
sar
aas
mov
jbe
mov
movsl
cwtl
addb
iret
inc
fisttps
inc
addb
mov
cmp
push
pushf
cmpsb
inc
add
cwtl
fs
dec
call
movsl
scas
mov
outsb
mov
rcl
push
xchg
cli
test
pop
sti
out
push
add
movsl
xchg
push
jp
jmp
xchg
dec
jl
loopne
mov
inc
loope
add
sarl
and
mov
xor
shll
ja
std
and
pop
push
cwtl
mov
repz
add
in
frstor
dec
sti
mov
mov
outsl
bnd
out
mov
inc
sub
dec
sbb
stc
iret
fisttpl
dec
es
in
aas
jge
push
cmp
adc
or
mov
adc
imul
cltd
and
and
sub
adc
fcmovb
xchg
push
mov
sbb
fcmovnu
mov
fwait
jae
cs
popa
jecxz
cmpsl
push
cli
dec
js
sub
adc
es
ficomps
cwtl
push
mov
inc
mov
stc
or
mov
pop
xchg
or
aam
fsubrl
jo
inc
ficoml
dec
push
lds
push
cwtl
fiadds
push
imul
pop
ds
mov
mov
hlt
sbb
mov
jmp
out
dec
fists
cmp
xor
dec
addr16
sbb
push
or
ljmp
mov
sbb
fcomps
inc
pusha
dec
adc
call
lret
into
lea
cwtl
inc
pop
push
dec
pop
cltd
std
pushf
cwtl
mov
std
pop
xor
movsb
test
fiadds
inc
or
sahf
sub
cmp
dec
dec
repnz
cmp
sbb
sub
jecxz
inc
loop
dec
push
adc
call
lret
rcl
cli
mov
cmp
push
sub
pushf
out
fisubs
aas
loope
imul
lret
sub
jle
mov
filds
jb
stc
shlb
sbb
xchg
sub
xchg
popf
out
stos
je
rclb
and
xchg
adc
addr16
mov
aam
ficomps
imulb
push
dec
sub
pop
xchg
adc
mov
xlat
out
shlb
pop
xor
test
push
imul
lret
pop
movsb
mov
push
lods
filds
pop
ds
and
jbe
inc
pop
sti
cmp
and
inc
shll
les
mov
xor
inc
mov
mov
adc
xchg
sub
pop
popl
daa
xchg
pop
scas
cmp
jmp
adc
adc
xchg
cmpsl
scas
fwait
mov
lahf
enter
push
xor
lea
pop
push
xor
adc
stos
add
cmc
dec
dec
mov
mov
xchg
insb
push
rorb
and
mov
pop
scas
mov
push
and
leave
jp
dec
ja
jg
jecxz
and
daa
and
and
cmpsb
ds
mov
mov
lret
mov
jnp
rcll
or
mov
aas
mov
cld
fdivrl
xor
or
mov
dec
mov
jno
push
mov
cwtl
adc
or
pop
cmp
cmp
lock
in
push
or
add
aaa
mov
pusha
int3
or
test
inc
sbb
dec
xchg
mov
xchg
mov
sbb
cmp
and
mov
ret
fwait
add
inc
call
fwait
aad
pop
and
sub
sbb
mov
xor
leave
mov
sti
lcall
sbb
or
adc
inc
ljmp
lds
inc
daa
cld
in
dec
xchg
les
bound
out
les
clc
fdivrp
xchg
push
and
es
xor
rorb
add
test
sbb
mov
push
cld
mov
sbb
mov
repz
in
mov
rorl
jp
push
mov
lahf
jb
imul
lret
push
dec
sbb
or
outsl
pop
repz
out
loopne
cmp
and
fcmovnb
mov
sarl
or
xor
jp
faddl
mov
xlat
dec
xor
mov
cmpb
stos
shrb
push
rcr
cmp
or
enter
cli
mov
mov
insb
mov
mov
or
adc
ss
fadds
in
dec
lock
inc
outsb
xchg
stc
dec
dec
test
sub
out
aam
outsl
pop
add
adc
or
loopne
rorl
in
cs
add
xor
jns
out
mov
xchg
pop
xchg
cs
adc
inc
fisttpl
mov
jo
add
jo
data16
sub
sbb
xchg
out
dec
nop
push
pop
sub
ds
xchg
cmp
ret
cmp
inc
inc
xchg
adcl
mov
mov
cmp
mov
sti
mov
cmp
jo
ss
adc
aad
inc
jns
test
mov
scas
cs
syscall
mov
sub
leave
rcll
lds
js
addr16
pop
out
and
mov
push
sbb
shl
cld
add
jmp
xchg
ljmp
inc
cmp
mov
pushf
add
je
divb
cmpsl
sub
xchg
xor
adc
aaa
aaa
cli
xchg
and
sub
aaa
addb
cltd
enter
jmp
pop
ja
xor
enter
andl
dec
cmpl
xchg
subb
pop
ljmp
imul
fldl
test
insb
dec
nop
xor
scas
outsb
lock
mov
mov
cmp
jae
rcll
outsl
cld
ljmp
andl
dec
mov
adc
aaa
xchg
inc
mov
inc
add
adc
xlat
test
popf
mov
pop
sarb
pusha
xchg
pop
fistpl
cmp
lock
xchg
mov
lahf
mov
mov
inc
loopne
or
scas
adc
jecxz
out
adc
dec
je
xchg
data16
jecxz
loop
lret
dec
lcall
je
cltd
arpl
mov
mov
or
int
mov
and
in
xchg
fdiv
std
jmp
pushl
nop
ja
mov
sub
cmp
jmp
jg
arpl
ficomps
jo
lods
ljmp
xor
pop
add
inc
cli
addl
mov
mov
mov
sbb
lds
sbb
jl
or
sub
cmp
scas
dec
push
stc
gs
pushf
cs
push
push
fwait
outsl
in
cmp
daa
inc
xchg
push
mov
cmp
fwait
add
mov
add
rcll
wrmsr
fstl
pushf
add
mov
js
lret
and
mov
jmp
fs
sub
pop
stos
xor
les
call
leave
leave
addr16
push
cmp
push
xlat
cltd
iret
jl
sbb
inc
adc
out
xchg
pop
lods
pop
ja
sbb
jbe
pop
or
xor
std
stos
inc
jmp
mov
jb
mov
stc
loop
loope
fcomip
idivb
mov
jge
jbe
push
adc
scas
mov
adc
or
mov
jecxz
mov
and
repnz
jge
mov
lcall
sub
pop
enter
fwait
inc
cld
cmp
mov
mov
adc
cmp
insb
sub
jl
shlb
filds
pop
adc
dec
aad
dec
dec
mov
lods
test
addr16
std
lret
pop
push
in
jecxz
xchg
and
sub
fcoms
out
test
ja
add
jb
or
mov
shll
xor
loopne
add
sub
loop
jae
dec
cwtl
test
xorb
mul
adcl
aaa
cmp
jbe
pushf
fwait
xchg
lcall
jae
in
push
sti
cs
mov
lods
mull
test
or
mov
out
or
push
xchg
push
stos
mov
inc
or
adc
lods
les
mov
jle
rol
inc
out
jle
mov
imul
pop
mov
add
test
in
push
inc
popa
int
inc
testl
jne
xchg
xchg
add
mov
push
mov
cli
jo
pushf
imul
lock
pop
jo
lcall
cs
and
mov
jb
inc
hlt
and
xchg
cmp
adc
cmp
lret
mov
mov
sarb
push
out
mov
movsb
mov
jmp
movsb
xchg
mov
jbe
and
adc
push
jmp
sub
into
or
arpl
clc
adcb
xorl
enter
call
push
pop
adcb
arpl
ret
fwait
stos
iret
push
mov
js
sub
popf
test
pop
jns
popa
jbe
mov
cmpsl
pop
dec
cltd
mov
mov
fwait
mov
shrb
dec
xor
cmpsl
xorl
push
shr
push
jp
outsb
rclb
rorl
rcll
rclb
pop
arpl
iret
int
jmp
cmp
adc
ficoms
and
loope
es
and
stos
shll
sub
sub
pop
mov
xor
decb
mov
mov
imull
adc
data16
push
jecxz
in
bound
aas
ja
mov
cmc
dec
mov
lahf
aas
pusha
and
stos
and
dec
sub
mov
pop
mov
lret
xchg
data16
cmc
mov
rorb
imul
jge
insb
in
mov
out
lock
cmp
pop
adc
add
xchg
pop
pop
movsl
loop
cmp
push
sbb
mov
cmp
aas
sub
iret
push
addl
xor
mov
imul
xorb
add
xor
div
mov
xor
lea
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jne
mov
xor
add
mov
mov
add
xchg
xor
push
mov
pop
mov
add
lea
add
add
push
inc
pop
dec
xchg
dec
xchg
dec
xchg
dec
push
mov
pop
dec
call
cmp
je
xchg
push
pop
dec
push
pop
inc
xchg
inc
sub
xchg
dec
dec
mov
imul
add
xchg
push
xor
mov
dec
inc
add
dec
xor
add
pop
mov
pop
pop
pop
leave
ret
push
mov
push
movl
mov
sbb
mov
mov
sbbl
xor
orl
add
andl
mov
mov
xor
orl
push
mov
mov
sbb
mov
xorl
add
orl
mov
mov
movzwl
sub
mov
adcl
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
pop
leave
ret
push
mov
sub
sbb
mov
mov
xor
mov
adc
mov
subl
add
movzwl
movl
cmpl
je
cmpl
ja
jmp
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
movb
lea
orl
mov
xor
mov
mov
sbbl
xor
sbbl
add
adcl
mov
and
movl
push
mov
add
movl
not
mov
movl
cmpl
je
cmpl
jg
jmp
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
jmp
cmpsl
test
cltd
mov
pcmpgtw
xor
addl
push
lock
rcll
andb
sarl
mov
jne
cmc
dec
push
cmpb
clc
dec
or
enter
mov
push
cmp
sbb
lods
mov
adcl
out
sbb
outsb
scas
daa
mov
daa
enter
xor
sbb
fistpll
lea
adc
sub
add
das
out
push
pusha
dec
jb
push
lcall
mov
xchg
cs
clc
inc
inc
mov
push
daa
icebp
pop
inc
xor
sti
cmp
jle
rcll
push
xchg
mov
lods
xchg
cmp
cs
xchg
and
sbb
mov
lods
push
sbb
mov
xor
or
or
aaa
leave
lret
es
loope
push
popf
insl
fcompl
or
mov
inc
aad
push
mov
and
in
mov
repnz
dec
lds
stos
lahf
int
fnstsw
test
loope
sub
push
pop
sbb
push
pop
call
mov
test
mov
mov
bound
loopne
jmp
mov
cmp
int3
xchg
jg
push
adc
add
mov
scas
dec
add
push
and
jb
jbe
lds
fst
sub
jge
in
push
addr16
cmp
xchg
into
fnsave
int3
out
add
mov
out
fcomps
jne
xlat
out
enter
push
cwtl
and
xor
in
mov
icebp
aam
sbb
lcall
jne
ljmp
imul
or
mov
xchg
push
mov
in
dec
mov
pop
add
stos
in
jp
xchg
in
lea
int3
push
mov
push
aas
daa
jecxz
movaps
inc
mov
jle
daa
jg
inc
pop
jge
cmp
push
and
notw
cmp
push
outsl
cmp
adc
jp
cmp
xchg
in
xor
cmp
cmp
sbb
cmp
jmp
lret
into
out
or
movsb
mov
inc
xchg
mov
inc
out
ficompl
stos
push
adc
fidivrs
xor
pop
or
test
nop
cld
or
cmp
mov
xor
lahf
insl
sub
mov
addr16
mov
xchg
movsl
pushf
mov
lds
sbb
fmul
sub
sti
fsts
loop
subb
push
movups
xchg
mov
push
fcompl
or
dec
xor
mov
outsl
arpl
pop
sbb
lds
sarb
mov
fsubrs
adc
sub
pop
push
xchg
shrl
xchg
pushf
mov
jbe
in
adc
lods
xchg
xchg
mov
xor
mov
stos
push
cwtl
mov
test
xorb
movsb
js
push
ja
or
add
adc
arpl
jb
in
push
sbb
pop
mov
mov
fsubs
in
adc
ljmp
jecxz
cltd
lods
sub
or
scas
inc
iret
pop
orl
cmp
dec
icebp
xchg
jg
out
or
outsb
adc
int3
mov
mov
loop
add
pop
into
lret
std
cld
lret
dec
enter
hlt
push
adc
fists
int
cwtl
mov
daa
xlat
inc
and
sahf
das
jmp
fldenv
sub
out
adc
adcb
inc
and
jae
repnz
xor
aaa
pop
cwtl
jmp
jle
jle
mov
push
cmp
inc
mov
hlt
mov
ds
jg
inc
inc
mov
mov
jl
xchg
mov
stc
fdivrs
dec
inc
mov
fnclex
mov
or
ret
pop
dec
movsl
jns
jl
push
push
push
fnstcw
mov
mov
adc
les
nop
xchg
daa
xchg
or
repz
insl
addl
pop
aad
sti
loope
mov
fwait
sub
ja
int
add
mov
insl
loop
pop
xchg
out
clc
mov
shrb
lea
fbstp
xchg
sub
mov
rol
mov
add
xor
addr16
in
add
dec
in
mov
cmp
mov
jmp
lret
mov
jge
popa
push
daa
fdivs
or
pop
out
jmp
mov
dec
lahf
mov
dec
push
test
scas
sub
in
repz
sahf
call
mov
pop
push
dec
adc
mov
adc
and
mov
fs
or
add
insl
or
icebp
fistl
xchg
jne
fidivs
enter
imul
cmc
fistl
xor
test
add
dec
or
sti
xor
fcmovnb
jbe
jp
cmp
mov
and
sub
dec
or
cltd
jno
ror
jne
inc
pop
cltd
jb
cwtl
sub
inc
hlt
lods
arpl
roll
in
add
mov
mov
cltd
mov
mov
pop
xor
dec
cmp
aad
orb
dec
add
xor
mov
and
sub
test
push
pop
jg
shlb
fwait
loopne
lret
test
add
in
lock
xchg
insl
push
or
gs
push
cmc
pop
cmp
xchg
dec
popa
pushf
aas
cmp
pop
jmp
mov
inc
imul
lahf
lret
out
mov
mov
in
cmp
inc
cmp
mov
pop
mov
fcoml
and
mov
xchg
and
stc
mov
dec
sub
fadds
out
loopne
outsb
popf
fmull
mov
xchg
jnp
pop
test
or
repnz
mov
mov
int3
fmulp
mov
test
mov
sbb
loope
mov
xchg
inc
sarb
mov
into
mov
mov
jle
mov
and
lods
xor
aam
jmp
and
mov
lahf
movsb
push
ss
xchg
mov
inc
loopne
icebp
push
movsl
ds
leave
cmp
in
int
sub
cs
data16
testl
and
pop
fcomps
push
add
negb
out
mov
cmc
add
push
jecxz
pop
cmp
aas
iret
sbb
lds
jmp
adc
push
sarb
out
dec
icebp
dec
ret
mov
jp
les
sub
fistps
add
or
xchg
cltd
xchg
push
jg
ljmp
call
inc
rcr
test
aas
cmpsb
mov
repnz
packsswb
filds
sti
or
loopne
mull
mov
stos
sub
xchg
and
jns
xor
xor
cmpsl
jmp
jns
jl
ret
and
cmp
mov
mov
push
pop
mov
dec
jecxz
and
outsl
jp
xor
imul
or
imul
cmpsb
fs
inc
test
int
fwait
xchg
xchg
add
jo
jno
xchg
xchg
xchg
lret
enter
das
xchg
mov
shlb
outsb
push
and
sbb
sub
mov
enter
mov
and
sub
dec
inc
adc
fimuls
push
hlt
gs
dec
dec
not
jnp
dec
fstpt
add
jno
xchg
cwtl
cld
stc
sbb
ja
mov
xor
mov
out
pop
fwait
sbb
inc
pop
ret
xor
popa
fmull
cwtl
jmp
or
lret
inc
xor
add
scas
pop
scas
and
cmc
scas
and
pop
and
push
mov
lods
aad
dec
sub
js
es
clc
lcall
aam
int
mov
outsb
ss
rclb
aaa
sbb
mov
mov
add
mov
fwait
jge
add
aad
repz
cmc
fidivs
ss
pop
and
je
aad
or
pop
push
xor
subb
or
pop
insl
aad
push
lods
faddl
pop
cmp
mov
push
pop
or
iret
pop
push
mov
sub
sub
aam
dec
or
pop
xor
cmp
and
daa
mov
mov
jnp
push
gs
xchg
inc
xchg
ret
xchg
test
rcrl
xchg
js
out
inc
xor
rcll
push
iret
xor
jb
aad
es
mov
mov
lcall
xor
add
fnstcw
sub
xchg
ljmp
add
pop
mov
push
mov
or
cmp
pop
push
push
jecxz
sub
xchg
rcl
jne
or
in
inc
adc
mov
dec
add
adc
lock
mov
insb
out
xor
fsubrs
push
out
mov
add
cmp
gs
sbb
inc
rolb
sub
inc
jmp
add
inc
sub
nop
pop
sub
push
mov
aad
call
test
dec
mov
dec
pop
cmp
push
push
xor
or
pop
push
ja
mov
pop
cmp
repz
push
pusha
addr16
and
adc
fisttpl
inc
in
aam
das
add
lock
insb
ret
loope
cmpsb
push
inc
mov
jns
repz
fidivs
pop
sbb
mov
mov
stos
fists
or
pop
imul
adc
jae
sarl
cmc
aam
lea
xchg
lahf
push
mov
lock
sub
icebp
cmp
mov
cmpsl
pop
outsb
mov
sahf
pushf
jo
in
std
or
test
call
fnstcw
inc
test
or
sub
push
shlb
sub
call
sbbb
hlt
xchg
imul
inc
std
ja
pop
xchg
and
mov
or
sbb
fs
sbb
inc
jnp
xlat
add
inc
arpl
pop
mov
cmp
mov
adcl
fbld
sub
icebp
shll
pop
stc
inc
int
xchg
cli
scas
lods
jecxz
xor
cmp
bound
xchg
mov
cwtl
mov
lods
nop
insb
cltd
jmp
push
push
lock
daa
ficompl
adc
cmp
aad
and
sub
imul
sub
aaa
push
push
lea
push
sti
iret
xor
loopne
inc
push
incl
ss
jo
lret
jnp
ss
adc
push
or
jnp
repz
inc
aaa
pop
into
push
and
sbb
test
sub
xchg
jg
lea
jge
inc
fdivrs
lea
pop
loope
jp
mov
fbld
or
pop
cli
xor
frstor
std
bound
insl
pop
cmpsb
movsl
ret
pop
xchg
push
jb
jbe
cli
jbe
repz
out
pop
mov
mov
les
enter
xor
jns
mov
das
sub
loope
or
mov
lods
movsl
inc
loop
out
push
jge
repnz
ret
jnp
fisubs
sub
jle
mov
inc
jg
jp
dec
pop
jp
test
add
fwait
pushf
lds
scas
xlat
out
or
scas
cmpsl
jecxz
inc
xchg
mov
es
sti
outsb
in
adc
pop
pop
sbb
jle
icebp
loop
add
pop
adc
sub
inc
pop
pop
sbb
push
xor
xor
popf
or
cmpsb
adc
sub
test
mov
sbb
jle
imul
or
push
inc
push
adcb
loop
cli
out
sub
lret
add
out
imul
fisubrs
push
lods
dec
pushf
orl
ret
data16
xchg
stos
dec
mov
test
mov
insb
adc
jge
iret
jg
aas
sbb
pop
rcr
aaa
sbb
in
insl
xchg
push
mov
and
mov
jle
inc
imulb
dec
in
ja
dec
xor
scas
mov
movsb
addr16
lods
test
fnsave
or
pop
in
xor
sub
fcoms
insb
lret
insl
sub
daa
je
jno
or
push
or
push
add
mov
loope
xlat
or
inc
inc
fs
mov
xor
xor
lods
inc
mov
pop
in
cwtl
mov
xchg
mov
mov
loop
sti
popa
xchg
xlat
mov
lds
leave
sbb
pop
mov
daa
cld
pop
cwtl
pop
cwtl
jne,pn
cltd
mov
sbbb
hlt
sub
jg
das
or
movsl
xor
pop
dec
xchg
mov
push
andb
sahf
imul
notl
imul
outsb
push
faddl
jno
cmp
push
adc
imul
pop
or
sbb
or
add
mov
mov
jle
lds
fcompl
sbb
mov
scas
cltd
xor
ss
jns
fs
out
dec
mov
cld
xchg
or
jno
insl
sub
insb
xor
cmc
cmp
inc
and
insb
ljmp
jnp
xor
dec
xor
loop
push
stos
pop
add
push
je
pop
testb
cmp
add
mov
sub
movsb
cld
lea
out
daa
test
pop
or
jne
cmc
jg
aas
call
stc
and
mov
cmp
mov
int
aaa
mov
push
cmp
push
sbb
lock
fisubrs
out
lret
loop
xchg
pop
adc
pop
xchg
gs
data16
ds
jmp
je
add
sub
pop
pop
and
xor
cmp
sub
mov
mov
rclb
xor
inc
cmp
ror
cmp
jge
sbb
stc
push
ja
and
xcrypt-ctr
cmpsl
pop
jae
insb
das
push
sub
or
xchg
jb
sbb
push
push
cmp
xchg
ljmp
out
pop
data16
mov
lahf
push
lret
outsl
pop
mov
mov
push
adc
stos
adc
xchg
or
aam
mov
xchg
sub
out
int3
imul
shl
cmc
cmpsl
adc
js
mov
decl
and
sbb
pop
cmp
mov
fwait
push
scas
rcr
cmp
jmp
adc
push
xchg
cwtl
sti
popf
std
leave
int3
mov
inc
mov
sahf
jo
jo
popl
jmp
sbb
incb
sti
scas
lahf
imul
or
loop
adc
outsw
div
pop
inc
inc
xor
insl
sub
pop
fmuls
xchg
pop
cmp
rcrl
add
or
rorl
xorb
aas
lds
lock
mov
fistpl
pop
lds
adc
or
mov
cmp
and
mov
adc
and
jg
iret
xor
cmp
hlt
ljmp
or
dec
xor
pushf
arpl
mov
adc
push
cltd
dec
lahf
fbstp
test
mov
loop
out
jmp
into
sub
arpl
push
aaa
jle
scas
xchg
rclb
xchg
pop
clc
sbb
test
test
aad
lods
xchg
loop
rcrb
and
in
in
aaa
jo
in
mov
dec
shl
mov
jno
cmpsl
in
addb
pushf
ja
add
idivb
movsl
mov
mov
cmovbe
xchg
call
roll
das
mov
push
cmpsl
push
shlb
push
out
or
xor
sbb
xor
jns
aaa
cmpsw
cs
jecxz
jmp
jp
divb
sbb
leave
inc
std
inc
inc
int
jne
repnz
mov
jns
lret
loopne
xchg
aad
sahf
inc
imulb
xlat
je
jbe
cli
popa
gs
jbe
andl
mov
xchg
pop
and
mov
cwtl
mov
xchg
jle
dec
nop
jecxz
inc
sub
inc
mov
sub
mov
lahf
adc
jbe
jmp
fmuls
xchg
adc
sbb
pop
andb
mov
fadd
or
and
adc
ret
stos
cmp
adc
movsb
imul
sbbb
shlb
les
xchg
mov
xchg
fmuls
push
aad
inc
push
inc
xchg
in
jge
xchg
jbe
push
scas
jmp
cltd
push
push
mov
pusha
test
int3
xchg
hlt
leave
std
frstor
dec
je
int
mov
scas
pop
mov
mov
shrl
shlb
ret
mov
sahf
pop
cmpsb
or
sbb
adc
inc
in
pop
mov
sbb
divl
xor
loopne
add
icebp
loope
mov
shl
fiadds
inc
outsl
mov
pop
push
jmp
rclb
stc
std
xchg
adc
add
jle
xchg
dec
sub
mov
pop
sbb
loope
loop
cltd
cltd
rorl
cmp
sbb
icebp
xchg
and
push
xchg
jo
fisubl
cld
inc
jle
stos
and
hlt
mov
lret
iret
sbb
iret
test
hlt
push
xlat
add
and
std
outsl
adc
addr16
cmp
scas
mov
test
inc
cwtl
jnp
jns
sahf
dec
iret
mov
push
push
or
aad
imul
mov
mov
loope
out
cmpsb
xchg
adcl
fistpll
fdivs
insl
es
jg
cli
or
and
push
push
cmpsl
sbb
add
mov
icebp
and
pop
jb
sub
mov
lods
lods
imul
push
mov
mov
and
in
ds
lods
or
dec
add
sbb
fimuls
das
push
sbb
loope
mov
rclb
jne
inc
xor
inc
push
xor
test
mov
enter
sub
pop
sub
hlt
add
enter
lea
mov
loop
fnstcw
mov
mov
push
roll
lret
data16
scas
stc
push
dec
lock
shll
aaa
aam
push
pop
int
sub
pushf
dec
repz
mov
rorb
ds
pusha
ja
push
inc
jmp
jnp
test
std
negl
adc
dec
das
sarb
push
push
inc
cmp
int
aad
jae
and
sbb
fimuls
pop
imul
scas
test
cwtl
ret
jp
pusha
adc
xor
xor
repz
nop
cmpsb
mov
loop
and
jge
test
stos
cmp
imul
xchg
cmp
inc
or
xchg
push
call
jge
jae
push
mov
inc
adc
movsl
mov
imul
fstl
movsb
jnp
leave
mov
pop
outsb
test
ss
repnz
inc
sub
nop
scas
ss
sar
mov
pop
sahf
xchg
cmpsl
mov
mov
popf
fidivrs
pop
pop
mov
test
sub
out
dec
lcall
push
add
into
aad
inc
jnp
mov
imul
loop
adc
inc
call
nop
or
sbb
test
in
dec
addb
enter
inc
adc
pop
loopne
lret
mov
lret
es
insl
addl
in
sub
data16
xchg
clc
sub
and
jno
adc
and
inc
test
test
testb
les
adc
xchg
mov
nop
loopne
lods
fsubrl
jl
sbb
xor
adc
pop
mov
stos
mov
xor
xor
mov
in
cmp
insb
push
xchg
push
push
sub
pop
sub
das
jne
outsb
mov
xor
rcll
ja
addr16
mov
mov
xchg
test
iret
xchg
loope
mov
gs
addr16
and
lods
sbb
bound
adc
mov
inc
loope
mov
repz
in
adc
mov
cmp
test
or
xchg
or
in
and
sub
or
pop
cmp
sub
pop
pop
mov
mov
ss
dec
pop
mov
in
fcomps
movsl
das
xchg
xchg
out
lahf
xchg
fnstsw
cmp
rol
in
jns
mov
adc
aaa
clc
xor
roll
dec
push
sub
jp
data16
fstpt
ret
push
push
fnstenv
pop
out
sbb
push
cmp
inc
je
and
push
insl
or
mov
std
sbb
fistpl
cmpsl
sahf
adc
lret
lea
lods
sub
mov
ficoml
fs
sub
sub
loopne
aad
decb
fcoms
dec
popa
call
pop
add
pop
xlat
rcl
inc
fwait
mov
les
mov
flds
scas
and
push
divb
std
push
cmp
decb
mov
outsl
mov
jae
jecxz
repz
mulb
testl
dec
jg
movsb
sbb
mov
jecxz
mov
int3
cmp
daa
jbe
xchg
ret
xchg
test
je
inc
frstor
inc
in
test
cmc
outsb
mov
icebp
sbb
call
push
mov
lret
loope
sbb
fcmovbe
or
imul
icebp
jns
addr16
mov
loope
xorl
out
test
xor
cmp
adc
scas
imul
and
inc
push
fnstsw
rcrb
das
test
rorl
lret
or
fidivrl
outsb
aam
jb
jnp
testl
aam
add
pop
inc
ret
dec
js
adc
mov
hlt
mov
mov
cmp
push
fcmovnu
loopne
cmp
sbbb
push
and
mov
fdivr
pop
mov
push
push
dec
les
movsb
jo
sub
aad
stc
push
push
xor
enter
ss
push
inc
mov
xor
xchg
lds
cmpsb
push
rcrb
push
aas
push
jne
sub
cli
mov
loope
jno
add
and
push
mov
jne
test
mov
leave
stc
testl
jo
es
inc
jne
mov
rorl
cmc
f2xm1
stos
movsb
push
adc
jg
mov
aam
xchg
xor
int3
hlt
jb
ret
ret
out
pop
js
pop
pushf
and
mov
std
int
mov
aaa
add
dec
lret
cwtl
mov
inc
in
imul
or
jl
inc
xor
gs
push
loope
or
jecxz
rclb
jp
mov
repnz
mov
cmpsl
xor
dec
shl
sbbb
fidivl
les
mov
lret
imul
mov
mov
xchg
dec
dec
xchg
insb
or
pop
adc
mov
or
jno
rorb
ja
sub
outsl
ljmp
icebp
jmp
jecxz
dec
lcallw
dec
in
loop
cmc
movsl
and
pop
cmp
cld
out
aad
fsubl
pop
sbb
int
lock
lcall
icebp
and
lods
psubusw
in
mov
and
fimuls
add
aas
movb
or
icebp
int
stc
adc
sub
xor
jne
sbb
stos
adc
sarb
mov
mov
mov
adc
inc
in
add
mov
into
stos
push
ljmp
lods
adc
sbb
push
sub
scas
popa
in
into
cltd
inc
pop
jae
mov
imul
dec
mov
xchg
subb
lods
pop
sub
es
cmc
mulb
or
pop
push
outsl
or
xchg
rorl
pop
clc
lcall
stc
xchg
cmpl
cmc
shlb
cmp
jnp
adc
pop
push
mov
scas
testb
mov
nop
mov
jne
aam
jno
out
inc
mov
jle
add
or
fwait
xchg
test
scas
fldt
pop
lret
or
jmp
mov
pop
pushf
call
orb
out
ror
notl
sbb
mov
fstl
cmp
pop
addps
sti
cmp
rclb
mov
lcall
shlb
popf
repz
and
fdiv
icebp
dec
xorb
jbe
mov
jmp
xchg
test
and
dec
xor
push
pop
xchg
fadds
fwait
leave
xchg
adc
fs
lods
test
ljmp
mov
mov
dec
neg
out
pop
repnz
imul
mov
push
dec
sub
je
sbb
sti
mov
and
lcall
icebp
test
add
pop
loop
push
and
or
mov
pop
jl
arpl
push
das
fstpl
cli
enter
sub
sbb
pop
roll
add
imul
shrl
xchg
dec
fcmovnbe
repz
dec
mov
xor
cltd
dec
xorl
cld
mov
push
dec
push
lahf
mov
lret
shl
and
stos
push
or
push
mov
add
jae
cmp
aad
fcmove
popa
repz
sarb
push
jbe
rcll
lea
loop
lock
fcoml
aas
mov
inc
mov
imul
outsb
stos
push
out
imul
or
jo
loopne
dec
fucomp
outsb
jb
test
mov
cmc
mov
int3
push
cmp
ds
out
mov
outsl
decl
loope
pop
add
cmp
cmp
adc
pop
adc
add
or
int
imul
xor
push
sahf
lret
lcall
jecxz
lds
int
mov
cwtl
orb
xchg
cmp
adc
stc
dec
dec
call
cmpsl
lahf
xor
mov
lahf
leave
xchg
dec
loop
pushf
test
aam
fwait
and
notb
jp
subl
arpl
xchg
push
sub
adc
jb
xchg
shlb
fcmovnb
sbb
pop
scas
pop
push
inc
xor
pop
enter
call
mov
push
push
rcll
lea
sub
insl
scas
scas
lods
out
sbb
call
rorb
sub
sti
out
mov
jge
je
xchg
or
jns
ret
stc
cmp
rorb
out
test
mov
aad
nop
mov
dec
xchg
mov
arpl
in
sbb
mov
and
pop
in
mov
insl
out
ljmp
imul
dec
fists
pop
sti
or
outsb
aad
je
int3
ja
movsb
bound
jnp
fdivrp
divb
sub
mov
adc
xlat
sbb
pushl
lret
pop
adc
enter
popa
movsb
ror
outsl
sub
inc
hlt
aaa
cmpsb
push
pop
push
pop
aad
shlb
xlat
fdiv
clc
cmpsb
push
repnz
and
xchg
mov
int3
shll
dec
xchg
xchg
cmp
test
add
aad
inc
outsb
insb
cmp
in
mull
fisttpl
shlb
daa
inc
imul
mov
ret
out
jge
dec
pop
loop
jns
sub
ljmp
outsl
sbb
mov
mov
pushf
lods
pop
es
test
mov
lock
cld
adc
cwtl
mov
add
xor
sti
add
lret
inc
outsl
mov
sbb
sbb
jge
cmp
roll
shrb
or
outsl
sbb
enter
fldl
dec
ret
testb
mov
lret
nop
shlb
hlt
in
push
shr
fs
icebp
xor
sbb
jae
loopne
mov
fisubl
dec
mov
std
stc
data16
out
test
jecxz
iret
xor
push
out
fcomps
rcrl
or
fmulp
fiaddl
iret
cmp
mov
sti
cltd
sbb
pushf
ja
cmp
add
lds
arpl
ljmp
jb
push
ret
jns
leave
cmp
pop
out
mov
aad
ljmp
out
lret
call
scas
movsb
aaa
call
and
jle
vpsubq
test
add
xchg
sub
inc
mov
dec
mov
ds
leave
add
fnstcw
and
or
sarb
stos
shl
into
test
popa
add
pop
jmp
rolb
movsl
inc
out
aad
add
repnz
xor
test
sbb
clc
pop
aam
cmpsb
jo
fldl
cmp
adcl
rcll
rolb
xchg
inc
push
jnp
movsl
cmp
fnstsw
sbb
add
mov
fldcw
push
lock
sub
push
imul
adc
shll
imul
je
cli
mov
dec
lcall
mov
dec
ss
adc
adc
xor
push
lret
xor
push
dec
or
stc
cmpsb
repnz
outsl
jb
cmp
clc
pushf
pop
add
insb
idivl
das
cmp
xor
mov
mov
pop
testb
sets
repnz
int3
push
orl
sub
push
mov
xor
enter
out
xchg
in
xchg
icebp
dec
adc
insb
inc
adcb
ljmp
iret
xchg
mov
dec
pop
or
xor
jmp
imul
pop
hlt
and
addb
mulb
push
icebp
jo
and
mov
test
insl
sbb
dec
inc
imul
clc
movsl
jns
in
and
sbb
imul
mov
mov
inc
cwtl
insl
dec
test
inc
test
mov
mov
jo
xchg
sub
mov
sub
jecxz
xchg
sahf
cli
lods
hlt
or
lds
mov
sbb
xor
lret
fldt
push
std
js
arpl
pop
push
inc
push
addr16
js
fldl
push
cli
pop
adc
stos
cmc
fwait
mov
push
cli
and
adc
xorb
add
mov
fwait
sbb
sub
mov
insl
js
cwtl
pop
add
fwait
adc
mov
push
push
cmpsl
xor
cmpb
pop
lods
test
adc
mov
jno
xchg
outsl
sub
push
aad
rcrb
mov
gs
aad
sub
insl
test
add
inc
inc
jnp
iret
decb
xchg
xchg
mov
mov
subb
jmp
pop
mov
pop
pop
movsb
lock
outsb
movsl
rorb
stos
adc
addr16
and
fwait
sbb
xor
xchg
lea
and
lds
and
mov
lahf
int3
roll
inc
iret
imul
pop
fs
les
addr16
cmp
jo
dec
mov
sbb
dec
or
push
mov
movsl
in
push
pop
imul
fdivrl
adc
mov
insb
cwtl
dec
xchg
sub
js
xchg
ds
aam
jns
popa
imulb
xor
xor
cld
cld
loop
cmp
jle
cmp
mov
loopne
jle
xchg
mov
fstpl
aaa
fcoml
lods
or
cmpsl
cmpsl
and
iret
out
aad
mov
cmc
stos
pop
jb
hlt
xchg
add
out
stc
sub
mov
jmp
mov
cmpsl
fisttps
movsl
neg
xchg
inc
xchg
jae
xor
lock
movl
cmp
sarl
outsb
pop
cmp
sbb
enter
mov
fwait
movsl
and
outsl
add
lds
inc
pop
xchg
dec
mov
addr16
jge
pop
cmp
enter
xchg
daa
cmp
push
xchg
lds
pop
ror
inc
xorl
and
adc
leave
cmp
mov
testl
pop
sti
ucomiss
push
xchg
inc
xchg
mov
mov
aaa
xchg
inc
and
in
jne
push
and
push
test
gs
insb
adc
sub
std
pop
pop
cmp
stos
cs
clc
sbb
insb
das
dec
push
enter
mov
mov
ja
or
push
mov
or
adc
xor
in
and
scas
or
and
xor
mov
adcl
push
add
jmp
movl
mov
mov
movl
inc
cmp
jb
mov
andl
xor
add
movl
jmp
and
mov
neg
mov
andl
xor
movl
mov
andl
add
movzwl
xorl
mov
mov
jmp
lea
sub
stos
test
cmp
stos
xchg
push
addl
jae
xchg
sub
mov
sub
add
xor
push
clc
cltd
cmp
mov
adc
cld
xchg
in
xchg
mov
leave
push
dec
test
jmp
xchg
in
mov
add
addr16
ds
hlt
fimull
fiaddl
mov
mov
rclb
fnsave
nop
xor
xchg
add
sub
lahf
sbb
imull
and
imul
xchg
jle
push
dec
ds
mov
dec
loopne
pop
or
scas
aaa
ret
jo
adc
push
push
pushf
jno
xor
push
aaa
std
xchg
and
cmp
sbb
sub
adc
pop
sub
cmp
fnstcw
cs
mov
lret
cmp
xchg
adc
das
cs
pop
shlb
sub
pop
add
push
sbb
inc
xchg
loop
push
fldt
jb
pop
mov
push
shl
movsl
add
mov
in
repz
lods
mov
mov
cwtl
or
jae
div
push
subl
sar
push
xchg
loop
sarb
scas
das
xor
dec
mov
and
pushf
test
dec
dec
xorl
idivb
nop
lahf
mov
fwait
jmp
pop
mov
scas
jnp
test
int3
jno
jl
dec
sbbb
xchg
js
pusha
cmpsl
fadd
cmp
cmp
add
cltd
insb
sbb
fwait
andb
nop
sub
dec
fistl
mov
pop
jbe
jb
outsl
inc
xchg
sbb
dec
pop
push
call
mov
inc
fdivrs
cmp
mov
jae
sbbb
arpl
jmp
push
push
in
push
push
movsl
adc
rol
sahf
out
add
mov
mov
in
mov
inc
mov
loopne
or
sub
mov
mov
xchg
push
add
pusha
pusha
xlat
push
jno
jno
adc
imul
arpl
xchg
mov
mov
pop
out
call
addr16
pop
push
into
scas
fs
sahf
sbbl
inc
jecxz
xchg
xor
pop
hlt
repz
mov
jge
mov
adc
sbb
add
sbb
xor
cwtl
push
outsb
xchg
stos
mov
scas
cmp
movsb
rol
ja
lcall
and
lock
test
subb
arpl
mov
lods
mov
int3
fsubs
fldt
dec
push
or
jge
adc
jecxz
or
repz
add
in
jp
add
xorb
out
inc
push
sarb
cmp
mov
sbb
xchg
push
xchg
std
je
inc
push
scas
push
xchg
aas
dec
lahf
or
mov
mov
sub
and
cmp
fucomip
pusha
or
inc
sbb
inc
int3
push
mov
leave
lock
add
in
out
test
mov
dec
inc
das
or
adc
cld
cs
fbld
push
mov
pinsrw
ret
cmp
jmp
repz
filds
lods
jne
adc
cmp
pop
shll
mov
xor
pop
bound
lcall
fs
sti
xchg
jmp
aam
or
and
push
cltd
mov
mov
js
int
add
call
jno
sbb
mov
xchg
dec
mov
and
jae
stos
dec
shlb
repz
out
inc
push
imul
and
xchg
test
add
sub
mov
pop
int3
jo
lcall
jno
or
push
ss
pop
ds
dec
jne
nop
lock
mov
out
lret
icebp
aam
jle
shll
int
movsl
lods
rorl
negl
sahf
push
stc
mov
test
and
lods
push
ds
test
das
imul
cltd
loope
test
fstpt
sub
add
xchg
pop
pop
mov
rclb
cmp
out
mov
shl
daa
ret
ficompl
sbb
out
or
push
inc
inc
mov
fwait
push
rolb
sbb
cmp
aam
cs
inc
rorl
fbld
push
inc
rcrl
sbb
rorl
sti
add
jnp
stc
push
decl
lods
stc
pusha
pop
popl
rolb
xor
xchg
jns
daa
mov
jmp
push
inc
popa
stos
shlb
push
mov
shll
aad
outsb
scas
cmp
xchg
and
mov
lret
inc
or
dec
mov
in
test
jl
dec
mov
pop
sbb
mov
or
loopne
ret
lret
jae
dec
push
cmp
push
loopne
scas
clc
out
ds
iret
popf
sub
ds
fdivrp
inc
push
test
cltd
mov
scas
loope
sbb
shrl
ret
les
and
in
push
scas
loop
jecxz
and
insl
pop
xchg
cmp
sbb
jne
das
pushf
mov
dec
mov
jg
add
ljmp
push
repz
mov
and
push
pop
mov
cmp
lods
repnz
cmpb
rcrb
rclb
test
push
xchg
mov
add
outsl
test
or
mov
sbb
mov
sbb
sub
sti
repnz
orl
fs
push
jle
inc
outsl
in
lret
not
add
dec
aad
addr16
aas
push
lret
pop
mov
popa
psadbw
jle
rorl
pop
fisubs
imul
sbb
mov
lea
or
testb
xlat
mov
ljmp
pop
mov
mov
outsb
mov
mov
or
inc
xor
enter
sbb
pop
sbb
test
push
ljmp
hlt
inc
xlat
mov
and
inc
dec
sbb
loop
test
ljmp
or
xor
repnz
popa
pop
xorl
rcr
inc
add
push
cmc
fs
add
jns
xlat
inc
cmp
fadds
fistps
lods
add
add
cmc
shlw
xor
adc
jl
mov
xorl
loop
bound
dec
daa
stos
adc
pop
xchg
mov
out
popf
aaa
rorl
aaa
mov
cld
rclb
push
repz
or
jbe
loop
test
out
cmp
dec
nop
imul
dec
jl
inc
xor
mov
mov
or
aam
jne
sbb
xchg
inc
pop
inc
dec
xchg
lea
shr
mov
xchg
stc
ss
dec
add
add
mov
cld
pushf
cmp
xchg
cltd
cli
sbb
shl
movb
cmp
std
adc
pop
jbe
jns
cmpb
pop
loop
push
fnstsw
mov
das
inc
mov
sbb
sti
cmpsb
adc
or
pop
aas
push
in
and
dec
incl
lods
sbb
pop
adc
push
push
dec
negb
jg
xor
loopne
mov
nop
sub
xchg
adc
pop
adc
fsts
pop
push
adc
popf
cmp
jg
pop
inc
lret
enter
dec
icebp
scas
daa
pop
mov
sbb
outsb
or
outsl
mov
push
in
mov
adc
out
movb
enter
inc
jg
in
mov
lret
aam
ja
pop
das
push
mov
scas
ljmp
call
orb
cmpsl
or
push
and
pop
int3
imul
loopne
aas
out
add
cmp
mov
jmp
test
sarb
dec
pop
push
in
jns
roll
pop
xor
std
popa
aas
movsb
jbe
popf
fnstenv
arpl
cmpsl
negb
or
into
pushf
fldenv
lds
sub
xchg
repnz
or
pop
lock
cmp
loope
mov
call
xor
jb
arpl
imul
flds
cli
mov
adc
mov
imul
mov
push
mov
adc
fdivrp
imul
mul
and
clc
xor
sar
sbb
mull
test
xchg
cmc
cmpsl
pop
sub
or
xchg
shll
pop
push
cmove
fadds
mov
xchg
add
call
ret
inc
inc
out
jecxz
lcall
pop
aas
lret
inc
dec
dec
inc
or
xor
out
fidivs
loop
mov
fs
pop
jp
mov
nop
jo
andl
imul
sub
arpl
or
popl
cmp
adc
mov
dec
sti
mov
push
mov
into
pop
mov
mov
in
sti
jno
pop
enter
dec
cli
ret
pop
sarl
lcall
xchg
inc
js
popf
rol
movsb
add
xchg
sahf
js
jmp
jns
sbb
testl
mov
mov
pop
pop
or
push
iret
sbb
into
fsubrl
int3
in
push
addr16
adc
lret
in
mov
or
mov
lret
cli
and
out
or
inc
xor
sbb
std
mov
mov
mov
mov
adc
enter
mov
inc
push
xor
fadds
ds
or
or
sbb
sbb
lahf
test
out
mov
or
inc
cmp
movsb
lods
mov
lcall
dec
or
pusha
aad
mov
fmulp
cld
flds
adc
jnp
jmp
jge
arpl
aaa
mov
lods
out
cld
pop
inc
and
insb
rorb
or
cmp
loope
out
sar
lret
jmp
sub
adc
xchg
jo
sub
dec
mov
stc
jp
psubusw
inc
loopne
loope
jbe
mov
push
jo
mov
pop
or
in
jns
jge
scas
adc
nop
cmpsl
lods
sub
sbb
je
adc
movsl
sub
jbe
out
das
out
test
add
mov
sbb
imul
pop
arpl
push
fiadds
scas
int
divb
popf
cmp
push
lahf
rcrb
icebp
cmp
aas
outsl
mov
add
mov
faddl
xchg
lcall
negl
in
or
call
jl
cmpsl
fisubrs
pop
leave
aas
rolb
jmp
sub
mov
icebp
xlat
mov
pop
iret
mov
adc
add
dec
arpl
or
push
lea
in
adc
in
lret
mov
nop
lret
cmp
jge
xchg
out
mov
add
push
xor
xor
jno
out
cmp
push
out
inc
shll
ud0
and
mov
dec
out
fxtract
test
mov
xor
cli
mov
dec
xchg
nop
inc
in
inc
cmpsb
mov
clc
imul
cltd
mov
pop
jne
jne
push
ja
jno
test
sub
mov
mov
fcmovbe
mov
mov
jg
lods
or
in
arpl
fisubs
leave
ja
cmpsb
popf
pushf
enter
bound
cmp
imul
jae
xchg
pop
mov
sub
mov
leave
push
pop
lahf
adc
lods
loope
cli
dec
mov
shlb
or
shl
inc
cs
cmpsl
jg
xchg
nop
movsb
adc
enter
stc
roll
adc
aad
adc
xlat
int
jle
push
scas
int
aaa
cmp
and
std
dec
and
inc
sbb
sti
in
stc
push
imul
push
nop
jno
adc
dec
insb
pop
inc
jmp
rol
cmpsb
in
enter
xchg
sub
jnp
shlb
xor
leave
xor
xor
jb
and
in
mov
mov
pushf
repz
mov
push
pop
push
cmp
xor
jge
call
xorl
xor
das
sub
in
je
push
push
xchg
push
bound
rcrl
or
insb
flds
lods
jle
sti
xor
add
jp
sahf
xlat
mov
out
daa
mov
bound
xchg
push
cmp
adc
enter
lock
insl
nop
out
ljmp
test
push
lret
data16
test
stc
icebp
mov
jg
scas
mov
popa
add
in
imul
xor
popf
jne
imul
pushf
mov
or
cmp
adc
adc
shrb
mulb
rolb
push
imul
xlat
popa
sahf
adc
xchg
shrl
cmp
mov
mov
aam
mov
or
inc
push
out
out
mov
or
ficoml
cmp
add
adc
lahf
popa
jge
pusha
dec
addr16
xchg
out
cmp
daa
or
lods
jbe
mov
or
rcrb
mov
jmp
and
sub
fucom
rclb
mov
dec
push
inc
nop
and
fcompl
rorb
mov
jg
shlb
cmp
sub
jge
lret
mov
enter
pop
inc
push
add
es
xchg
xchg
fcmovne
fs
and
mov
addr16
js
call
or
stos
mov
xorl
lahf
or
cltd
xchg
jle
iret
pop
jo
cmpsl
rolb
inc
fcoms
xchg
popa
sbb
enter
es
mov
push
inc
scas
sbb
out
mov
insl
sub
mov
aad
sub
fnsave
sbb
xor
dec
add
lods
loopne
dec
sti
pop
pop
jbe
add
jbe
test
les
xor
xchg
stc
loop,pn
or
out
in
arpl
test
pop
cmpb
xchg
cmp
cmp
in
daa
pop
or
dec
dec
mov
negb
dec
mov
xchg
callw
cld
mov
mov
aam
or
out
and
adc
fwait
xor
mov
out
mov
push
bound
inc
xor
cmp
mov
add
roll
leave
testb
push
cmp
insl
aad
test
push
push
mov
insl
adc
mov
or
sti
or
and
and
xor
and
fnstsw
test
xorb
scas
daa
cmc
fisubl
add
push
arpl
int3
mov
mov
pop
pop
jb
ss
lock
xlat
adc
adc
movsb
sbb
rcr
mov
pop
push
pop
push
pop
pop
mov
clc
pop
lahf
insl
scas
sbb
out
push
mov
jo
jp
shll
pop
jne
jl
sarb
enter
xchg
repz
sahf
outsb
sbb
fisttpl
mov
or
cmc
mov
mov
push
icebp
aam
incl
xchg
test
push
mov
xchg
pop
cmp
mov
and
mov
push
lods
shlb
in
mov
dec
mov
repnz
iret
arpl
jne
jmp
mov
aam
aam
jae
inc
cmp
xor
negl
sbb
repz
fidivs
lcall
fldenv
jmp
lret
push
out
add
mov
adc
mov
adc
push
mov
orl
scas
mov
incl
jnp
and
shlb
push
pusha
hlt
jle
pop
jno
ret
add
mov
clc
cltd
sub
jns
push
xchg
or
and
lods
ja
mov
into
js
mov
pop
mov
mov
adc
adc
jae
xchg
lahf
cmp
fstpt
xor
pop
xchg
leave
lcall
out
pop
sahf
je
sarb
shl
or
dec
pop
aam
mov
push
fadds
sub
adc
pushl
pop
ss
aaa
mov
push
loop
and
push
lret
add
dec
and
pop
xchg
xchg
jno
mov
jb
scas
mov
sbbb
popf
mov
mov
shr
xor
mov
or
das
jnp
aam
rorl
push
xchg
push
mov
mov
pop
jge
cltd
sub
cmp
push
cld
lods
sbb
and
lods
stos
push
xchg
fldl
in
jmp
in
popf
and
mov
jmp
jns
push
test
xor
xchg
mov
shld
push
mov
sub
mov
cmpsl
jle
arpl
cmp
inc
movsl
shl
aam
xor
notl
fisubrl
mov
scas
aad
pop
dec
adc
out
enter
cmp
mov
pop
rcrb
fcmovne
test
pop
inc
push
imul
mov
jb
push
adc
jae
dec
popf
fwait
jp
xor
xchg
outsl
dec
ds
cmp
jecxz
and
das
shlb
push
ljmp
test
jmp
or
loope
mov
xor
push
pop
mov
mov
ja
mul
mov
popf
add
xor
xchg
icebp
dec
jge
in
inc
into
xlat
push
jne
jno
cmp
push
or
cmp
xor
stos
scas
jae
pop
enter
mov
sub
inc
out
xor
imul
pop
ljmp
imul
pop
pop
push
add
xchg
addl
js
lret
mov
dec
jbe
pop
std
xor
lahf
arpl
movl
scas
jnp
pop
push
orl
sub
into
xchg
mov
dec
mov
sub
cmp
jne
das
and
sbb
sbb
rclb
jmp
mov
loop
pop
outsl
jns
inc
inc
clc
aas
mov
mov
dec
movsb
push
inc
jl
and
pop
repz
pop
mov
and
mov
cmp
xchg
je
adc
in
jnp
mov
mov
cmc
mov
addr16
add
push
mov
cld
fdivl
aad
xlat
xor
subb
fbstp
or
cmp
dec
sub
insb
xor
out
cmp
imul
xlat
xchg
iret
fs
insl
mov
jl
mov
dec
jmp
mov
mov
sub
loop
lods
rolb
cmp
push
or
mov
pop
outsl
sub
jecxz
out
jle
shlb
and
cmpsl
loop
mov
inc
jb
ss
mov
mov
aad
push
in
xor
jp
jg
add
std
dec
rcl
xchg
ficomps
sub
cmp
out
mov
fs
dec
mov
jb
push
inc
lds
or
pop
pop
dec
stos
push
pop
adc
ret
lret
and
push
insb
mov
ds
mov
or
iret
lea
daa
jecxz
jg
mov
loope
push
int3
xchg
cmp
jmp
cmc
sahf
inc
jno
clc
cli
lods
pop
std
subw
xchg
insb
and
add
sub
enter
in
js
call
into
mov
cs
add
fstpl
push
jge
rcrl
sub
or
jnp
sub
pop
scas
clc
imull
or
cs
sbb
or
iret
pop
push
iret
ja
cwtl
testl
mov
jl
icebp
dec
aaa
ss
aad
xchg
xlat
adc
lods
into
and
mov
jae
icebp
jae
sub
adc
leave
adc
adc
cmp
int
jne
sti
movsl
cmpsb
or
xor
mov
ss
repz
pop
out
inc
addr16
cld
inc
aad
cltd
jge
fnstcw
adc
and
imull
mov
imul
popa
int3
mov
inc
pop
dec
dec
cmpb
lea
fadd
rol
xor
jecxz
pop
xchg
out
es
out
in
repnz
lea
jae
and
mov
dec
push
sar
mov
sub
test
sbb
imulb
hlt
xchg
sub
daa
dec
aad
ss
icebp
pop
jmp
cmp
int3
xor
jne
mov
xchg
jnp
jno
sarb
xchg
addb
arpl
push
outsb
mov
xor
mov
mov
test
adc
sbb
cmp
adc
stos
and
mov
cmp
out
int
shll
and
fbstp
add
jbe
inc
pop
cld
push
push
cmc
insl
cmp
xchg
xlat
jl
lret
and
fstl
dec
or
inc
adc
mov
orl
adc
jns
dec
adc
es
sti
push
stos
xor
rcr
jecxz
lods
xchg
fildl
add
arpl
or
and
gs
pusha
shrl
lods
inc
or
pop
loop
mov
fwait
pop
inc
filds
scas
movmskps
cmp
sti
cmc
mov
sahf
jmp
mov
aad
jle
vmwrite
subl
leave
dec
cmpb
mov
pop
xchg
lahf
or
mov
xchg
aaa
and
scas
dec
or
das
loope
movsl
dec
outsl
mov
movsb
mov
adc
lret
pusha
cmpsb
fisubrs
jo
sarl
jp
dec
fsubl
pop
cli
push
and
insb
pop
mov
dec
push
addl
leave
xor
sbb
fcmovnb
mov
movaps
inc
push
push
int3
xor
insl
and
xor
push
sub
sbb
in
dec
xchg
movsb
int3
mov
lcall
cmpsb
inc
lahf
test
sub
dec
pop
dec
sarb
stos
mov
dec
lods
ss
or
push
stos
dec
and
repnz
negb
fidivs
daa
out
pusha
add
ret
mov
rolb
popf
add
nop
mov
mov
add
xchg
cmp
dec
lods
lea
dec
shl
push
push
fcoml
mov
jmp
pop
jnp
lea
test
push
mov
lret
cmp
dec
xchg
sub
inc
or
push
mov
lea
nop
xor
in
adc
iret
enter
ffreep
push
adc
mov
arpl
loop
add
jbe
shlb
sahf
xor
xchg
cmp
adc
scas
das
mov
jge
adc
call
test
clc
xor
mov
mov
fs
ss
add
dec
cmp
push
or
jl
es
adc
outsl
call
fwait
mov
xchg
inc
inc
add
mov
inc
out
test
pop
fptan
repnz
sbb
mov
js
push
shrl
lds
dec
call
lahf
mov
lods
int
push
mov
lock
dec
lods
outsl
sub
loope
insl
mov
cmp
dec
sub
push
push
inc
out
test
lock
jg
outsl
mov
jmp
lods
std
cmp
jno
cmp
scas
addl
dec
test
in
fists
sbb
push
adc
cmp
orb
fists
or
push
jle
call
xor
icebp
cmp
fwait
dec
xlat
adc
jns
jne
pop
jg
mov
lcall
imul
mov
std
test
jnp
mov
pushf
xchg
aam
inc
push
mov
ja
xchg
imul
xor
xor
ljmp
and
adcb
dec
loop
dec
inc
and
int
in
push
leave
pop
pop
movd
dec
xor
or
cmp
jns
popf
paddq
nop
stos
out
insl
shrl
jl
lret
pop
xor
and
int3
mov
and
mov
loopne,pt
lcall
mov
mov
xchg
addr16
xchg
ds
mov
inc
cmp
cmc
jo
jo
cld
or
mov
dec
mov
in
xor
jae
jbe
orl
dec
lcall
mov
mov
rcrb
mov
mov
data16
pop
cmc
fcmovb
test
sbb
lds
xchg
and
cmpb
fnstenv
dec
jne
hlt
cmp
xchg
pop
mov
andl
out
xor
roll
out
sub
cli
push
scas
sub
ret
call
popf
xlat
jns
sahf
mov
jnp
jecxz
sbb
inc
int3
mov
sbb
sub
jno
lahf
loop
clc
adc
ret
ret
add
dec
movsb
daa
sarb
push
cltd
sbb
pop
not
subb
aaa
or
mov
iret
xchg
mov
clc
mov
fcomps
cmp
adc
push
fwait
jmp
jg
pop
cmp
sub
out
imulb
popf
xorb
test
adc
xchg
scas
in
lock
sti
push
pop
mov
and
leave
ja
sbb
xorb
aam
fwait
pop
gs
mov
das
clc
cmp
sub
inc
mov
mov
popf
mov
out
rorb
fwait
mov
test
mov
test
xor
sbbl
int3
mov
cmp
adc
sub
sbb
sbb
cmp
jg
xor
mov
leave
pop
repnz
cmp
clc
addr16
emms
pop
adc
jns
flds
jecxz
mov
and
int
fidivrs
inc
mov
sbbl
mov
aad
jne
pop
xlat
cli
adc
arpl
adc
loopne
and
cmp
push
lods
xchg
cmp
xlat
iret
inc
addr16
loop
in
out
add
dec
lods
cmp
sti
adc
pop
add
lret
aas
mov
and
inc
add
fwait
dec
pushf
jge
mov
push
jns
xchg
adc
push
jbe
cmp
dec
xor
mov
mov
jb
or
adc
arpl
mov
xor
pop
icebp
jle
outsb
repz
into
in
pop
inc
cmp
imul
cmp
mov
jmp
decl
jle
xlat
shlb
shr
mov
xor
pop
mov
sub
test
fildl
xchg
push
cli
inc
sbb
mov
enter
jg
push
in
pushf
test
lcall
aas
adc
push
in
push
adc
sti
pop
push
in
sbb
add
sbbb
fcomi
push
sub
or
inc
mov
pop
xor
jbe
sbb
test
andb
adc
mov
rorl
jns
leave
adc
push
in
lret
dec
loopne
in
jns
xor
cmpsb
aad
jge
imul
loope
cmpsb
and
fnstsw
mov
data16
mov
pop
sahf
adc
adc
sbb
cmp
adc
inc
ljmp
pop
enter
mov
mov
xchg
mov
jno
cmp
jecxz
jg
inc
mov
push
sbb
or
push
inc
push
int
add
ss
enter
and
cmp
inc
cmc
jne
divl
cmp
push
cwtl
jns
movb
das
iret
dec
mov
dec
mov
repnz
sub
imul
pop
das
fs
jmp
inc
xor
push
outsl
adc
jns
or
mov
xor
mov
mov
imul
jno,pn
dec
loopne
mov
or
cmp
xor
jp
addr16
cmp
mov
imul
hlt
mov
orb
pusha
dec
loop
inc
fdivrp
cltd
frstor
pop
outsb
push
pop
ja
insl
sbb
stos
add
push
xchg
dec
pop
shll
mov
pop
sti
fcompl
shr
orb
sub
add
sarl
out
sub
jge
test
mov
mov
xor
pop
push
inc
inc
mov
adc
and
out
test
sub
int
xchg
xor
push
adc
out
flds
in
jae
sar
std
popf
pop
mov
xchg
jnp
push
jmp
mov
adc
xchg
test
sbb
and
loopne
icebp
mov
dec
mov
sbb
cmp
cmp
rorb
cmp
mov
mov
pop
loopne
jmp
adc
adc
jmp
mov
cmp
lods
pop
inc
dec
jb
or
shlb
lods
not
out
inc
into
scas
sub
gs
pop
sub
movsb
int3
xchg
clc
sub
lret
test
push
sub
push
pop
push
xchg
sti
fsub
pusha
push
daa
xchg
out
nop
mov
adc
std
std
fwait
jmp
jecxz
mov
mov
xor
lods
cld
push
mov
out
es
es
adc
mov
adc
jae
lods
leave
mov
int3
xlat
leave
mov
imul
mov
mov
inc
jb
mov
xor
ret
fldt
inc
pop
xor
pop
and
push
loope
pop
inc
jmp
cmp
jb
cmp
cmp
mov
ja
xlat
xor
clc
in
iret
push
xchg
push
inc
in
aam
jne
mov
inc
cmp
popf
dec
cmpsl
dec
mov
push
inc
adc
jo
pop
sub
xchg
jnp
sub
arpl
dec
sbb
jb
iret
repnz
fdivl
int3
lret
push
ss
push
cmpsb
xor
cmp
xor
pop
adc
lods
jno
ds
aam
mov
into
not
pop
adc
inc
repnz
xchg
mov
xrstors
imull
sbb
addr16
push
mov
adc
lds
aaa
xchg
imul
scas
inc
stos
out
movsb
loop
sub
adc
pop
sub
mov
scas
roll
pop
shrl
out
daa
imul
sbb
inc
mov
jecxz
pop
and
mov
jnp
stos
add
sub
cli
or
loope
pop
and
aas
mov
clc
in
test
push
or
shlb
mov
mov
outsb
stos
mov
push
insb
lea
mov
aam
add
pcmpgtd
call
js
stos
addr16
and
in
cmc
mov
orl
aam
jbe
mov
subl
pop
mov
fwait
in
movsl
lods
sbb
aas
popf
or
adc
insb
sub
push
into
fwait
add
push
pop
xchg
jo
hlt
sub
imul
xchg
cmc
dec
out
mov
xchg
sbb
test
mov
sub
jae
and
jle
mov
test
hlt
sub
mov
sbb
outsb
mov
pushf
sbbl
adc
popa
xor
dec
les
cs
sbb
mov
xchg
mov
xchg
cmp
inc
jb
add
cltd
or
jge
jnp
fimuls
fmull
test
ret
lcall
push
adc
mov
les
xor
sub
idivb
pop
icebp
ds
push
and
adc
jo
int
ds
fs
pop
jmp
dec
mov
jge
add
jbe
movsb
mov
inc
vpaddusw
mov
pop
fisubl
pop
outsb
mov
imul
fidivs
jne
gs
call
xor
movsb
lods
jecxz
xchg
cmp
jecxz
jo
gs
es
jae
lret
mov
fwait
das
and
mov
lcall
out
mov
mov
repnz
xchg
divb
cvtdq2ps
sub
bound
jmp
cld
test
xchg
insb
rolb
fdiv
xor
adc
test
or
adc
push
push
adc
push
push
xchg
sub
test
out
fisubl
repz
xor
inc
sbb
adc
dec
into
rorl
xchg
add
push
xor
popa
stos
das
and
imul
aas
adc
jmp
test
mov
addr16
fdivr
push
mov
and
sub
andl
das
lods
int3
out
hlt
or
mov
test
sahf
mov
sbb
sub
hlt
xor
pop
xor
sbb
push
es
xor
out
mov
sbb
insb
shrb
mov
push
in
cmp
push
movzwl
xorl
xor
movl
add
mov
movl
mov
inc
mov
movl
cmp
movl
jne
mov
movl
cmpl
je
cmpl
jle
jmp
pushl
push
call
mov
dec
mov
jmp
mov
andl
mov
inc
mov
cmpl
jg
jmp
push
call
cmpl
jb
xor
add
add
xor
mov
sbb
mov
xor
xor
add
movl
cmpl
je
cmpl
jbe
jmp
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
sbbl
movl
movl
sbb
movl
movl
cmpl
je
cmpl
jl
jmp
push
push
push
call
mov
dec
mov
jmp
mov
add
mov
sub
mov
xor
xor
mov
adc
add
mov
mov
mov
movl
je
mov
mov
negl
xor
xor
sub
xor
sub
addl
xor
orl
mov
andl
mov
inc
mov
cmpl
jl
jmp
push
call
cmpl
jne
xor
xor
inc
mov
cmpl
jb
mov
mov
adcl
add
imul
mov
or
mov
mov
mov
sub
xor
mov
mov
xorl
add
andl
or
andl
mov
inc
mov
cmpl
ja
jmp
push
call
cmpl
jb
mov
movl
cmpl
je
cmpl
jb
jmp
push
call
cmpl
jne
xor
add
dec
mov
mov
dec
mov
jmp
mov
mov
subl
add
xor
xorl
mov
sbbl
mov
adc
mov
sbbl
add
addl
and
movzwl
xor
mov
add
mov
or
mov
lea
xorl
mov
mov
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jbe
jmp
push
call
cmpl
jne
mov
inc
mov
jmp
mov
orl
sub
add
mov
mov
xor
mov
mov
xor
add
jne
movl
jmp
mov
xor
or
xor
mov
sub
xor
sbb
mov
jmp
out
dec
mov
stos
xchg
in
adc
inc
addb
push
cmpxchg
es
sub
hlt
lds
in
aad
sub
jp
pop
clc
jle
leave
adc
cmp
xchg
inc
shll
repnz
sbb
lods
mov
lcall
push
mov
dec
xchg
xor
jmp
push
sahf
imul
test
add
add
out
mov
mov
pop
sbb
jae
ja
arpl
dec
imul
lods
pop
push
inc
jae
test
xchg
push
add
mov
imul
addr16
push
es
xor
testb
andl
inc
sub
repnz
repnz
pop
jnp
cwtl
dec
mov
and
jmp
out
rcll
out
sti
out
lods
jge
pop
cmp
bound
or
in
in
sbb
lds
lods
fistpll
vorps
popf
sbb
or
ja
std
push
ficomps
xchg
andl
dec
jl
mov
lcall
inc
mov
in
xchg
sub
sti
xor
subb
pop
jae
pop
add
mov
imul
in
popa
lcall
inc
es
jg
fsubr
inc
lea
lods
fistpl
adc
fmulp
ljmp
fdivl
pop
inc
or
in
rcr
ds
cmp
in
mov
sbb
inc
fs
in
push
cmpsb
jne
std
sahf
lret
mov
cmp
add
pop
jbe
sub
icebp
dec
jnp
add
pop
ud0
das
sbbl
sbb
adc
mov
push
push
mov
jno
pushw
fstp
jle
and
cli
xchg
or
fs
gs
lcall
cs
mov
xor
mov
mov
mov
icebp
mov
call
pop
and
ss
jmp
add
mov
push
jmp
bound
rcrb
sub
outsb
push
inc
pop
xor
fsub
ja
mov
jbe
shl
mov
push
add
push
lret
mov
pop
inc
xorl
scas
and
mov
das
scas
sub
xor
shlb
leave
and
std
dec
inc
dec
and
hlt
xor
loop
pop
dec
xchg
mov
or
outsl
loope
lahf
or
xchg
dec
xor
ljmp
xor
nop
xchg
pop
mov
fsub
subb
push
fs
ja
lds
sub
mov
in
mov
outsb
js
nop
cs
xchg
divl
pusha
out
adc
mov
cltd
push
repnz
pop
in
dec
test
mov
mov
jbe
push
out
push
mov
data16
imul
inc
int
push
jne
ss
jmp
stc
xchg
cld
jmp
rcl
xchg
test
nop
or
int
lods
xor
jne
gs
mov
sbb
inc
fcompl
fwait
inc
add
ljmp
ret
nop
inc
scas
xchg
jae
fdivrs
lds
mov
or
push
fs
lock
mov
fcmovbe
mov
lods
or
insl
popf
repz
gs
ficoml
dec
push
jg
sbb
jnp
or
cmp
mov
fdivrp
pop
arpl
push
subl
inc
cmpsl
aas
ror
iret
lea
ret
movsl
out
pop
lcall
lods
xor
or
push
adc
cmp
sbb
pusha
sub
or
mov
mov
mov
sbb
sub
orb
mov
mov
or
ja
or
movsb
xchg
mov
sbb
mov
aad
std
out
sub
mov
jge
es
xchg
rcl
jb
int3
xchg
mov
cmp
orb
and
and
daa
in
xor
sub
and
xchg
enter
fstpl
cmp
cmp
sbb
and
cltd
push
ret
aaa
addr16
cwtl
dec
test
ret
jno
repnz
pop
call
bound
scas
cmp
cmp
mov
cmp
imul
push
or
rorl
addr16
inc
push
and
je
sbb
fs
cli
cltd
xchg
gs
adc
mov
xlat
pop
xchg
aam
mov
das
xorl
bound
stc
add
xchg
rcrl
mov
pusha
mov
dec
mov
rcr
dec
mov
mov
pop
push
sbb
roll
pop
mov
xchg
fcomps
adc
dec
or
repnz
push
inc
dec
aad
in
lods
fstl
pop
xchg
loope
add
in
outsl
dec
mov
add
pop
mov
mov
add
stc
add
in
je
adc
movsb
and
ljmp
shr
mov
mov
xor
fadds
sbb
bound
rolb
in
mov
dec
enter
outsl
adc
adc
shrb
test
shll
je
xchg
scas
aam
or
jecxz
addr16
push
orb
mov
repz
js
xchg
test
mov
xchg
sub
arpl
or
and
dec
jns
addr16
sbb
loope
xor
pop
insb
shll
add
pop
mov
stos
mov
inc
inc
adc
push
jo
add
int
jae
shrl
cmp
jnp
in
out
cmpsb
out
int
pop
cmp
pop
and
je
es
push
or
xchg
aas
xlat
sbb
xchg
addb
sub
xchg
xor
dec
inc
dec
test
mov
pop
mov
ficompl
test
stos
fists
mov
mov
jne
and
cmp
leave
pop
inc
jg
aam
aad
in
jae
test
pop
mov
or
add
sbb
xor
sbbl
lret
out
pop
sti
sub
xorb
inc
sub
lret
jo
fdivrs
ds
add
ucomiss
xor
jmp
mov
xchg
sbb
fiaddl
xchg
add
mov
or
fcmove
stc
stos
inc
cmc
lret
cmpsl
mov
clc
sbb
dec
out
jbe
into
cmpsl
popf
sar
cld
pusha
mov
sub
jo
loop
les
out
and
es
test
rol
adc
and
mov
inc
in
outsb
or
sbb
jg
loopne
mov
cs
out
xchg
je
dec
lahf
push
pop
int
xor
xor
xor
cmp
pop
mov
cmp
or
adc
aaa
inc
xorb
mov
into
mov
movsb
js
xchg
cmpsb
and
sbb
dec
jge
add
inc
cmpsb
mov
dec
repz
enter
sbb
xchg
pop
dec
loop
xor
sar
enter
dec
mov
jle
mov
loop
adc
loop
arpl
gs
scas
int3
xchg
xchg
cmp
add
aaa
mov
push
stos
jp,pt
xchg
cs
ret
adcb
dec
xchg
jae
daa
jp
fcmovb
outsb
int
inc
fildl
jg
setno
push
pop
inc
inc
push
sti
cmp
jle
stc
xlat
cmp
lods
jae
cli
mov
ret
jmp
push
std
mov
int
sbb
adc
loop,pn
or
add
ja
test
jnp
cmp
outsb
sbb
inc
out
adc
mov
and
dec
mov
push
jne
daa
stos
pop
popa
dec
jle
adc
mov
shrb
sub
jp
jmp
flds
sbb
mov
rorl
movsl
xchg
jmp
out
das
push
div
dec
nop
push
push
mov
idivl
jp
sbb
push
cwtl
mov
dec
jno
xchg
jb
mov
fiadds
es
xchg
push
arpl
fidivrl
clc
pop
das
xor
jnp
clc
aas
addr16
push
fldcw
clc
data16
fildll
mull
sub
lds
popf
popf
pop
out
ret
push
push
cmpsb
mov
pcmpgtd
push
sti
sbb
aad
mov
shrb
popa
in
adc
adc
adc
iret
je
mov
into
ret
xor
mov
mull
mov
dec
jg
xlat
popa
xchg
adc
ficoml
imul
loopne
jns
aaa
mov
orl
test
mov
pop
fistps
dec
in
cli
scas
mov
test
out
out
jmp
out
xor
cmp
cli
cwtl
pop
lods
pop
jae
jnp
push
cltd
xchg
mov
stos
push
mov
shll
cmpsl
and
xchg
adc
pop
mov
jae
loope
adc
jp
ja
imul
div
enter
scas
scas
push
mov
push
out
adc
cmp
pop
mov
loopne
pop
mov
fisttps
jecxz
dec
mov
xor
in
pop
add
je
pop
xchg
shl
xor
adc
fidivrl
inc
adc
push
into
decl
stos
scas
and
loop
shll
sub
jae
out
add
int
dec
out
aas
stos
xchg
inc
cmp
cmp
movsl
pop
mov
inc
jno
int3
push
clc
loop
addr16
movsb
aad
pop
mov
dec
push
pop
inc
test
xlat
ljmp
dec
sbb
mov
cld
xchg
popa
push
out
jne
and
adc
cwtl
add
adc
imul
xor
mov
xor
fiaddl
les
ror
pop
in
int
xchg
lea
cmp
mov
outsb
out
jae
or
or
dec
jno
fs
sub
sbb
aam
int
in
inc
out
or
fwait
stc
adc
insb
pop
push
clc
adc
and
int3
push
jne
daa
test
sbb
adc
and
mov
inc
in
imul
inc
imul
loop
push
push
xor
ret
shrb
push
xor
inc
stos
gs
mov
push
daa
stc
mov
sub
fcoml
ret
bound
inc
lret
daa
adc
int3
imul
int3
int3
mov
sbb
rcrl
jae
push
jbe
push
jle
mov
ljmp
inc
xchg
jmp
leave
and
shll
leave
pusha
and
mov
push
jne
je
jns
xor
sarb
dec
out
idivb
out
cmpb
xchg
pop
aam
cmp
cs
sbb
mov
lret
lcall
js
fidivl
lret
imul
lahf
jmp
jge
add
lods
incl
sub
add
push
out
jecxz
xor
insb
loope
inc
push
rorb
cmp
pop
cli
push
in
mov
loop
jo
iret
pop
inc
and
pop
pop
scas
pop
jmp
out
repz
add
outsb
mov
imul
andl
sti
xchg
lahf
mov
adcl
lods
mov
lahf
jl
bnd
imul
repnz
push
dec
cmp
lods
test
mov
xchg
mov
movsb
arpl
incb
pop
adc
mov
jns
and
cli
dec
jbe
sub
in
push
or
and
pusha
pop
sbb
cli
sub
xor
mov
mov
loopne
jne
mov
aas
cmpsb
cmp
sahf
out
cmpsl
push
cmp
cmpsl
test
out
and
data16
pop
shlb
outsb
test
mov
dec
aaa
sbb
mov
int3
in
int3
or
fstl
jo
test
out
inc
popa
fsubrs
leave
jae
rclb
mov
imul
and
movsb
xchg
jae
cmp
fistpll
mov
or
fsubl
rcr
add
mov
or
jo
pop
mov
loopne
es
mov
leave
inc
repnz
push
pop
rol
cmp
cld
lahf
mov
repz
mov
xor
repnz
cli
or
lods
or
jae
fbstp
je
imul
fsubrs
pop
in
or
fwait
outsb
lcall
es
mov
and
addr16
in
xor
ja
data16
mov
rclb
sbb
jmp
addl
push
fwait
push
jb
and
cmp
xor
sar
inc
insb
and
aas
mov
mov
push
out
iret
and
xchg
mov
cmc
or
mov
shl
pop
xchg
mov
ss
inc
dec
stc
push
mov
cmp
jecxz
cmp
push
cmp
mov
ljmp
mov
inc
mov
adc
pop
xchg
sub
imul
and
ret
mov
jle
add
shrb
mov
stc
fnstsw
xor
push
ret
sti
pop
xor
aam
ja
push
mov
sti
mov
mov
mov
jp
scas
and
ss
sbb
dec
inc
xchg
test
lea
pop
jl
jo
push
or
addr16
lock
sbb
mov
hlt
subl
mov
pop
aas
push
cmpb
dec
outsl
in
das
hlt
mov
fimull
add
mov
dec
xchg
out
sub
leave
dec
sub
pop
jae
mov
iret
cmp
pop
mov
jl
in
pop
adc
imul
das
mov
xor
nop
inc
or
inc
aaa
xor
mov
xchg
out
jae
scas
dec
dec
pop
and
or
ret
adc
push
lahf
mov
cmp
xor
adc
add
sbb
mov
js
rcrl
dec
jle
push
fisubl
jge
xchg
sahf
jo
cmpsb
sbb
pusha
loope
or
repnz
stos
jecxz
jo
cmpsb
mov
cmc
adc
ss
xchg
jg
ret
cmpsl
push
xorb
js
inc
rclb
cwtl
and
aad
popf
dec
shlb
inc
hlt
dec
bound
xor
fs
mov
lret
dec
loopne
outsb
push
sub
repnz
jp
or
inc
jns
xchg
push
lds
cli
mov
into
push
adc
mov
lock
ja
xchg
enter
add
fs
mov
mov
aaa
xchg
mov
pop
push
mov
ja
push
cs
clc
popf
ret
push
jge
cld
stc
movsb
out
pop
xor
inc
mov
cltd
jnp
test
inc
pusha
push
pop
jmp
loop
fisttpll
inc
sub
das
xor
add
mov
aam
sbb
add
out
or
iret
cs
or
adc
inc
sbb
jbe
das
cwtl
cld
pop
sbb
sbb
xchg
in
add
jb
sub
xor
roll
mov
aad
fst
jmp
mov
repnz
aaa
mov
out
nop
fwait
adcb
movsb
dec
inc
std
pop
es
pop
xor
mov
mov
inc
icebp
inc
cmp
cmpsl
call
jl
adc
mov
std
pop
lods
mov
or
pop
cs
jecxz
decb
mov
or
ds
addr16
and
bound
iret
mov
adc
xchg
xchg
xchg
mov
xlat
dec
aam
pop
mov
sahf
rcr
inc
jae
mov
ret
inc
jae
jae
jg
push
xchg
fldcw
jno
push
cmp
stos
mov
insl
add
adc
cmp
dec
leave
jmp
cmp
jno
lcall
pop
movl
nop
mov
ja
cmp
sub
xor
insl
jp
pop
inc
popf
jnp
fdivs
or
cmpsl
mov
xor
cmp
mov
sbb
negb
gs
shll
add
sbb
adc
fwait
sub
jmp
adc
mov
int3
adc
adc
lcall
lret
mov
icebp
in
scas
push
dec
xorl
or
pop
xchg
call
push
mov
add
push
movsb
sub
mov
jae
fadd
out
arpl
clc
shll
in
xchg
aas
imul
std
mov
push
lock
fistpll
and
dec
movsl
stos
dec
lahf
in
mov
cmp
xchg
les
inc
cs
push
in
add
sar
jbe
ret
mov
cmp
xchg
sbb
cmpsb
lret
xor
add
xchg
jno
sub
xchg
sbb
fldcw
cs
inc
lea
cwtl
pusha
cs
jl
icebp
push
mov
or
fwait
sarl
sub
repnz
scas
mov
mov
xor
sti
add
js
and
push
push
mov
in
pop
inc
ss
push
push
mov
push
pop
xlat
jo
mov
popa
sub
mov
xorl
inc
or
int3
cmp
pop
mov
and
sub
cmp
shll
shlb
cmpsl
dec
mov
scas
lret
mov
adc
add
or
jb
adcb
sbb
rorb
pop
lret
mov
addr16
fcomps
adc
es
mov
sub
shr
inc
loop
mov
lss
xchg
adc
movsb
enter
int
ja
xchg
and
insb
jae
arpl
adc
or
jmp
adcb
add
pop
pushf
jne,pt
fisttpl
stos
or
pop
push
xor
mov
mov
mov
dec
push
adcl
pop
bound
and
inc
pop
lods
sti
pop
pushf
push
jg
push
gs
rol
jecxz
and
push
sub
xor
dec
push
jmp
pop
xchg
mov
outsb
ss
mov
in
push
cmp
add
insb
xchg
ja
push
add
bound
fwait
sti
jns
push
jge
pusha
das
fwait
lds
mov
and
pop
adc
rcr
lahf
ret
stc
insb
push
repz
sub
loop
cli
ret
jg
xchg
fmull
and
jne
xchg
incb
in
sub
int
sub
sub
aaa
xlat
cld
mov
mov
sbb
sbb
les
mov
stos
shlb
andb
mov
mov
scas
scas
aas
in
mov
push
in
les
daa
cmp
repz
or
inc
sar
stc
xchg
leave
xor
sub
pop
fwait
jo
push
gs
dec
fbstp
sbb
nop
adc
or
mov
push
enter
pop
push
loope
aam
aaa
sahf
lods
push
push
ljmp
repz
xor
pushf
mov
jmp
insb
notl
pop
daa
dec
pop
data16
xchg
add
add
out
dec
iret
sbb
dec
pusha
and
or
inc
mov
mov
dec
jb
mov
jae
shrl
push
out
shll
inc
addr16
pop
inc
mov
adc
fstpl
push
adc
clc
stos
xchg
stc
inc
icebp
lods
mov
push
mov
jl
bound
pop
dec
lds
sti
sub
inc
icebp
pop
mov
fcomps
xchg
in
out
push
loop
enter
arpl
adc
dec
jle
adc
pop
xor
imul
iret
adc
mov
lcall
xor
fdivrl
mov
push
out
insb
andb
lcall
jp
or
add
push
xchg
xchg
adc
test
jae
jmp
movsl
shl
push
jmp
or
je
or
xchg
cmp
out
adcb
xor
clc
test
jl
lahf
jns
rcll
mov
pop
fwait
push
jns
jecxz
push
popa
sbb
pop
orl
enter
in
cmpb
add
test
mov
lock
jp
pusha
add
mov
fstl
ss
adc
jle
sub
push
std
xchg
loopne
mov
addb
push
aad
adc
shll
mov
inc
sahf
cmp
dec
xchg
adc
adc
in
mov
jb
cltd
jnp
divl
popfw
fsubs
and
ljmp
jno
mov
add
jb
mov
or
int
or
scas
leave
shlb
mov
arpl
sarb
ret
lcall
dec
sbb
push
pushf
dec
or
pop
jecxz
outsl
ljmp
outsl
dec
push
je
mov
or
sbb
dec
out
fidivrs
and
enter
mov
pop
ljmp
test
test
xor
inc
ja
pop
xor
cmpb
dec
mov
push
cwtl
adc
pusha
js
mov
add
mov
inc
roll
les
mov
stos
jmp
movd
mov
jnp
push
in
push
sti
notl
in
mov
pop
mov
std
cld
jecxz
pop
jmp
pop
pop
fcoml
icebp
nop
jecxz
sub
adc
insb
lods
dec
dec
xchg
ljmp
out
lcall
out
and
pop
mov
inc
mov
ror
push
fisttpl
das
and
es
push
enter
push
in
call
dec
mov
nop
push
fldcw
mov
sub
add
pop
xchg
pop
xchg
push
or
xor
lea
cmc
pop
shl
pop
xchg
or
outsb
fmull
js
mov
popf
shl
addl
ss
ss
aas
cmp
push
hlt
or
mov
sub
aaa
adc
fistps
adc
fisttpl
negb
xchg
insl
jle
push
mov
mov
mov
and
mov
pop
sub
rorl
addr16
in
xor
xchg
xor
incb
hlt
lods
xor
jo
test
nop
dec
add
dec
mov
pusha
pop
pop
cli
adc
dec
shlb
shlb
inc
iret
out
jae
mov
xchg
enter
lods
pop
test
or
int3
cmpsb
ljmp
fstp
mov
jb
test
aaa
lahf
xor
inc
cmp
push
xchg
mov
pusha
jmp
or
cs
pop
gs
mov
xchg
lock
and
mov
push
inc
xchg
cmpsb
roll
lcall
adc
lret
inc
jb
pop
mov
jmp
xor
cmpsl
ret
push
pop
push
aaa
jbe
insl
ds
call
jmp
int3
test
or
xor
sbb
std
pmullw
ds
inc
sub
add
outsb
lret
lcall
cmp
and
popa
dec
xchg
ret
or
test
popf
cltd
lcall
je
jns
xor
cmpsl
hlt
mov
add
adc
out
cltd
leave
shl
filds
testb
and
addr16
or
sbb
cmp
loope
addl
jl
xchg
rcl
call
in
dec
mov
add
cwtl
scas
ds
outsb
push
outsl
mov
out
push
jb
push
cli
dec
int3
cmpsb
mov
adc
xor
fwait
and
jmp
mov
lret
mov
adc
sbb
inc
enter
adc
jle
dec
xor
aaa
add
ss
rol
ret
arpl
or
add
sub
fdiv
inc
xchg
aad
sti
adc
adc
jbe
call
aam
in
sahf
sub
in
lahf
je
lods
dec
je
enter
sahf
into
mull
cmp
fs
lods
ret
or
stc
ret
mov
mov
jne
daa
loopne
fs
movsb
pop
fs
pushf
les
push
mov
sub
mov
sub
inc
and
cmp
or
fwait
mov
dec
adc
lock
add
adc
jecxz
sti
cmp
jp
mov
mov
or
or
xchg
adc
fwait
dec
int
into
imul
mov
ja
lret
std
jno
lds
fnstsw
pushf
jo
pop
loopne
aas
fucomp
mov
lods
jns
fsubp
add
push
cmp
or
mov
insb
fadds
int
mov
lret
cmp
inc
push
fucom
and
mov
mov
mov
xchg
pop
popa
movsl
pusha
mov
fdivrs
iret
insw
ljmp
rcll
jg
gs
sahf
mov
jae
mov
dec
mov
dec
or
test
sbb
jo
loop
xor
push
rol
pop
or
push
add
jl
add
mov
lcall
shlb
in
adc
bound
aas
mov
dec
push
mov
mov
or
test
movsb
pop
or
test
cmp
mov
js
cwtl
das
int
mov
cmp
sub
clc
add
das
fisttpll
stos
cmp
dec
pop
lret
jp
jge
cld
insl
scas
pop
jle
lret
pushf
mov
imul
inc
int
mov
xor
popa
lea
xor
or
adc
pop
cmp
dec
jecxz
stos
cmp
adc
pop
iret
insb
shlb
xchg
dec
mov
xchg
ret
jmp
pop
leave
shrl
mov
bound
mov
movsl
mov
scas
jbe
aas
push
or
into
inc
push
into
test
hlt
inc
rol
jp
loope
pop
sahf
loop
cmc
sbb
jno
lds
xor
ja
movlps
std
inc
repnz
popa
mov
sub
or
test
shrb
repnz
adc
cmpsl
or
jno
lret
or
jmp
inc
rcrl
adc
ss
mov
lahf
add
xchg
aad
mov
cltd
fidivl
inc
popa
mov
push
fwait
enter
sti
lcall
aad
outsb
pop
push
decb
into
faddp
adc
dec
adc
out
xor
push
add
fisttpll
jne
and
stc
pop
pop
sub
inc
pop
imul
lock
jbe
cmp
cmp
xor
shll
adc
add
inc
jp
push
and
jb
lret
repz
mov
xchg
sub
push
push
add
popf
enter
pop
lcall
jbe
xor
pop
dec
cmp
in
xchg
xlat
and
sub
sbb
sub
dec
cwtl
shrb
pop
jne
test
lods
inc
ljmp
movsb
ss
fsubrl
jmp
in
shll
loop
addl
push
sti
mov
fisttpll
aas
iret
and
cmp
lret
jnp
inc
xchg
pop
jge
je
add
mov
xchg
bound
and
in
into
test
scas
es
jp
xor
mov
and
out
aad
repz
jl
jle
or
lock
enter
xor
add
jo
jns
xchg
push
xchg
push
std
ror
or
daa
ljmp
push
dec
sbb
inc
push
cmp
push
gs
pop
out
xchg
std
cmp
in
stc
hlt
xchg
ss
sti
lds
in
or
push
shlb
adc
aaa
jge
into
jle
jne
xchg
arpl
xlat
mov
test
das
or
lsl
out
pop
inc
mov
callw
and
pop
stos
das
xchg
pop
mov
mov
and
adc
add
test
jmp
pop
add
sbb
or
cld
popa
xchg
mov
dec
dec
sub
add
addb
aam
sub
mov
xlat
mov
mov
sbbb
leave
jb
adc
popa
jb
icebp
shll
jle
jnp
xor
inc
xor
pop
pop
sbb
cmp
mov
xchg
cmpsl
dec
stos
mov
xor
fdivs
test
fdivl
adc
inc
sarb
shll
and
idivb
mov
repnz
fsub
scas
cli
sti
inc
xchg
scas
add
dec
dec
and
xchg
ficoml
insb
loop
and
int
aaa
adc
das
cmpsb
imulb
test
dec
sbb
push
test
fs
pop
fwait
mov
push
jbe
sub
sub
push
out
dec
fwait
pop
fdiv
mov
jno
mov
mov
sbb
and
push
push
sub
dec
aaa
pushf
jmp
and
and
jle
xchg
cmpsb
dec
cmpsl
xor
bound
into
shr
les
add
sub
decl
xchg
mov
inc
rcll
adc
jmp
das
fstp
aas
je
sub
pop
or
inc
push
dec
test
subl
ss
imul
out
mov
push
fs
aad
test
fwait
dec
cwtl
push
sbb
adc
fimuls
mov
dec
mov
pop
inc
fidivrl
sbb
jl
sbb
mov
dec
jge
sbb
jb
xchg
pushf
xor
fwait
xor
cmp
mov
cmpsb
data16
adc
test
add
sub
mov
push
mov
inc
jno
leave
sbb
fdivr
jns
xor
dec
mov
icebp
jp
mov
sbb
cmp
cld
and
or
lock
pusha
mov
and
addr16
xchg
xor
repnz
js
loope
xlat
jno
fistps
hlt
arpl
pop
fistl
lret
jg
hlt
adc
jle,pt
dec
add
dec
xor
in
ja
pop
mov
jnp
ds
cmp
icebp
int
dec
or
dec
adc
mov
iret
test
sahf
mov
arpl
lock
outsb
sub
clc
sbb
jecxz
adc
sbb
jl
rclb
mov
icebp
cs
pop
cmc
dec
xor
icebp
loopne
imul
pop
rep
scas
pop
pushf
sub
jb
mov
and
enter
sub
jp
pop
ljmp
jo
dec
jns
ds
pop
jl
add
mov
xchg
cmc
dec
xchg
push
dec
inc
negb
rol
jnp
mov
pop
loop
outsl
gs
cmpsb
add
mov
cmp
and
mov
adc
mov
mov
loope
ret
fldl
cmpsb
mov
mov
mov
or
out
iret
imul
push
js
fs
mov
xor
fsubrs
xor
mov
lods
decl
mov
mov
andb
outsl
orb
rcll
cmp
dec
idiv
push
in
enter
cmp
xchg
xchg
dec
xor
test
je
push
xchg
jl
mov
sub
aaa
clc
sub
ror
insb
push
sbb
and
ret
test
sti
sub
pop
push
xchg
pop
and
test
jmp
jns
movsl
cmp
add
sbbb
and
push
pop
dec
out
loopne
dec
jg
pop
sbb
ja
mov
stos
pop
xchg
sbbb
lret
inc
fwait
dec
add
lock
mov
adc
or
or
pop
and
sahf
cmpsb
mov
pop
pop
cmc
xchg
scas
push
add
sbb
stos
adc
jne
add
in
roll
lock
pop
push
das
rcrb
mov
gs
xor
cmp
fmul
ds
xor
inc
cmp
ret
mov
mov
pushl
je
in
pop
movsl
xchg
shr
rcll
push
mov
xchg
pop
push
cmpsb
cmpl
fcom
xchg
fadds
test
and
hlt
and
sub
pop
sbb
sbb
jle
push
inc
jmp
mov
xlat
pushf
mov
aas
mov
jno
lock
imulb
nop
xchg
dec
and
xor
jae
push
lock
mov
adcl
xor
orl
xor
sub
sub
sbbl
xor
mov
mov
mov
mov
movl
jmp
xorl
mov
mov
adcl
xor
xor
sub
or
sub
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jge
jmp
pushl
call
cmpl
jne
mov
inc
mov
jmp
xor
mov
mov
mov
subl
add
andl
imul
dec
mov
adc
mov
mov
add
or
and
mov
mov
mov
sub
xor
mov
movl
cmpl
je
cmpl
jl
jmp
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
mov
mov
mov
cmp
je
mov
mov
mov
mov
xor
cmp
jne
mov
mov
xor
movsbl
mov
xor
add
cmp
mov
mov
mov
je
xor
add
mov
je
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
jmp
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
mov
mov
xor
lea
mov
mov
xor
add
jne
jmp
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
mov
xor
mov
add
mov
pop
pop
pop
leave
ret
push
mov
sub
andl
push
push
or
mov
or
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
ja
jmp
push
call
jmp
mov
mov
movl
sub
movl
mov
mov
sub
mov
and
xorl
adc
mov
mov
xor
sub
mov
sbb
orl
or
mov
adc
mov
sub
add
mov
and
orl
add
mov
mov
sub
add
mov
orl
orl
mov
movl
cmpl
je
cmpl
jb
jmp
pushl
call
cmpl
jne
xor
or
dec
mov
mov
dec
mov
jmp
mov
subl
sub
mov
neg
mov
mov
mov
xor
addl
mov
orl
add
or
movl
mov
add
mov
jmp
imul
or
dec
xchg
in
dec
pop
or
pop
and
sbbl
pop
das
pop
dec
push
jge
ds
loop
filds
aaa
std
jl
or
ja
daa
mov
mov
pop
sbb
inc
and
dec
sbb
push
repnz
mov
pop
mov
or
jg
cli
and
xlat
jp
enter
insb
fistpl
sub
orl
pop
mov
push
cmp
xchg
lcall
mov
sbb
dec
out
mov
aam
add
pop
das
lret
push
push
mov
xchg
mov
daa
ja
sbb
into
mov
cli
ret
push
mov
adc
sahf
xchg
std
ja
jle
stos
xchg
dec
jecxz
test
inc
mov
out
icebp
mov
jg
push
cmp
xor
push
adc
cmp
pop
lds
xchg
inc
aam
mov
pop
cmp
fwait
pop
jno
mov
and
xor
jnp
add
sbb
xchg
repnz
sbb
xor
fwait
dec
mov
rcl
adc
in
adc
shll
call
mov
lods
or
dec
xchg
mov
and
pop
cmpsb
sbb
sbb
mov
add
and
push
stc
mov
mov
add
and
push
outsl
das
jge
js
test
inc
fwait
sub
addr16
inc
into
nop
pushw
cs
push
lods
mov
fadds
jb
outsb
stos
or
and
adc
adc
push
jle
mov
mov
dec
sbb
leave
mov
pop
pop
jle
add
jecxz
lahf
call
icebp
in
ret
loop
push
lock
mov
int3
inc
jge
cvtps2pd
arpl
cmc
jno
xchg
mov
popf
es
adc
jno
lea
xchg
les
cmc
enter
daa
leave
inc
or
jle
idivb
lock
in
stc
shr
mov
sbb
mov
sub
xor
or
or
call
std
mov
or
sub
xchg
call
int
sbb
mov
rcl
mov
int
xor
out
adc
add
mov
outsl
cwtl
add
repnz
in
or
adc
sub
sbb
cmc
jl
inc
aam
fsts
xor
leave
test
outsl
add
push
psubd
out
mov
test
add
movsb
dec
xchg
push
lret
mov
insb
repz
dec
jns
mov
adc
movsl
les
bound
xor
mov
mov
das
std
fidivrs
mov
hlt
ds
lret
mov
mov
mov
stos
jecxz
in
pop
xchg
pop
sub
xor
xchg
and
scas
dec
mov
fisttpll
xor
in
sbb
sub
orl
sbb
xchg
je
lcall
sar
iret
cmp
push
shll
inc
imul
cmp
mov
stos
cmp
fcoml
adc
lds
adc
rsqrtps
mov
xlat
ja
sub
sti
shlb
in
push
call
pop
mulb
push
pop
cmpsb
adc
fmulp
mov
arpl
repz
and
lahf
ret
repz
pop
or
into
sub
adc
ret
imull
push
call
push
jb
cmpsl
es
shl
repz
test
jne
roll
cmp
xor
lea
shrb
ret
arpl
sub
pop
dec
inc
sbb
dec
test
jno
or
mov
out
xor
arpl
test
mov
inc
add
cmc
mov
int
xchg
out
outsl
cmpsl
add
dec
inc
and
imulb
mov
loop
outsl
inc
cld
cmp
dec
xchg
sbb
out
sahf
scas
daa
iret
sub
push
add
cmp
cmp
lcall
neg
ret
imul
mov
notb
leave
and
jle
insl
sbb
and
fmul
cmp
test
imul
sti
and
jbe
xor
pop
mov
popf
gs
mov
mov
jle
xchg
icebp
ss
in
pop
cld
dec
push
cs
mov
jle
in
int3
cli
hlt
out
ljmp
ficoml
inc
into
pop
shlb
push
pop
fldl
inc
sub
fldt
jne
ja
stos
mov
sbb
jl
add
aam
daa
and
cmp
cld
js
out
mov
ja
cmp
push
bound
std
sub
mov
outsl
and
not
sbb
ss
test
cwtl
movsl
or
sub
and
rclb
rorl
and
cmpsl
mov
jne
push
mov
mov
xlat
mov
mov
cli
ds
lcall
push
adc
out
add
fadds
loope
sbb
fnstcw
sbb
or
sbb
fmuls
dec
mov
sbb
cmp
pop
mov
mov
or
mov
scas
scas
dec
cmp
lock
inc
sbb
add
xor
jo
in
dec
sbb
inc
pop
mov
mov
or
and
ljmp
lds
nop
popf
bnd
fidivl
cmp
inc
jmp
shlb
ds
das
outsl
mov
imul
fdivrs
jmp
popf
fstpt
xor
lret
fistpl
outsl
xchg
pop
inc
lock
and
pop
lcall
sbb
inc
ret
dec
popf
xor
cs
or
testl
jnp
repnz
mov
push
xor
pop
hlt
sbb
outsb
in
mov
lods
mov
inc
dec
ljmp
loop
stos
and
xor
mov
cli
test
cmp
fsubrl
mov
pushaw
dec
ds
popf
stos
and
adc
cmpsb
outsb
inc
xor
inc
inc
xor
fwait
jg
bound
cmpb
int3
call
sub
negb
int
out
testb
jne
ljmp
xchg
rcl
rep
rclb
and
ja
or
mov
ljmp
stc
xor
push
addr16
mov
sub
loope
arpl
sub
xor
fbld
cmpsb
sub
lds
outsb
test
lea
jmp
js
scas
push
insb
outsl
xchg
into
neg
push
clc
pop
cmc
clc
push
out
sub
ret
imul
push
xor
jecxz
sbb
xchg
or
jmp
nop
fldcw
setne
push
mov
scas
gs
sbb
or
stos
fmuls
xor
sub
test
push
mov
insl
aaa
lret
xor
mov
std
dec
xor
test
sbb
lss
cli
in
int3
les
leave
cwtl
push
nop
pop
es
inc
lret
mov
in
push
sarb
aam
popa
xor
cmp
jae
lock
in
lds
pop
xchg
cmpsb
rolb
pop
xchg
aaa
sub
xchg
dec
enter
repz
les
jne
aaa
cwtl
push
js
testl
xor
xor
sarb
mov
cmpsl
push
inc
jns
jle
ret
adc
aaa
and
pop
sti
adc
fsqrt
cmp
sbb
inc
mov
xor
bound
jp
pop
lret
adc
jae
cmc
dec
or
cmp
lret
push
dec
sub
mov
lret
jbe
cmp
iret
fdivr
hlt
sbb
aam
mov
push
in
pop
pop
xor
addr16
inc
roll
dec
aas
xor
out
mov
fisubs
push
and
mov
sub
mov
ret
rcrb
dec
insb
pushf
pop
pop
or
sub
dec
stc
out
jl
cmpsb
sarb
test
push
sub
test
pop
mov
push
pop
dec
bound
push
outsl
in
mov
stos
inc
adc
lods
fcmovb
mov
lahf
out
sbb
test
pop
mov
jb
mov
jge
decl
in
inc
sbb
fdivrs
cmp
xchg
cmp
push
mov
and
lret
and
and
push
inc
jbe
fsubrs
sub
cmp
call
outsl
flds
mov
inc
jg
mov
pop
xor
mov
jae
jl
cmpsl
ss
push
dec
pop
and
popa
fwait
jno
adc
ja
adc
sub
lock
and
push
out
inc
gs
ret
pop
cld
push
push
dec
xor
or
sbb
insb
mov
sub
lods
pop
sbb
mov
push
push
pop
sub
push
lea
and
fadd
stc
xchg
add
icebp
pop
icebp
pop
daa
cmp
add
lea
shll
jge
jmp
or
add
xor
imull
pop
sub
stos
sub
xchg
and
mov
test
lock
in
ljmp
cmpsl
outsb
cmp
mov
push
xchg
mov
add
xchg
pushf
scas
fs
loopne
sarb
cmp
idivl
mov
xchg
sti
gs
mov
mov
dec
out
mov
lea
sbb
mov
test
mov
test
lea
mov
sti
jno
ja
dec
cmpb
mov
mov
test
shrl
gs
jmp
in
incl
or
push
cmp
ss
int
out
sti
sbb
cmp
insl
das
lea
mov
jae
pushw
fs
mov
sbb
out
incl
mov
scas
leave
sub
shr
out
or
jne
in
jg
vmwrite
shll
adc
das
and
push
pusha
dec
adc
and
jb
inc
pop
pop
mov
jne
xorw
xlat
fwait
iret
or
sub
mull
cmp
es
adc
jmp
push
popa
sti
popl
xchg
call
aas
push
pop
xchg
data16
ficomps
iret
add
mov
mov
out
push
xor
push
outsl
sub
pop
cmpsb
popa
fwait
cwtl
jp
push
jmp
imul
xchg
sbb
push
sahf
mov
dec
fldenv
out
loope
sbb
mov
das
inc
jb
jge
bound
clc
mov
std
mov
cmpb
jmp
push
shrb
pop
out
dec
flds
pop
gs
mov
inc
or
scas
jecxz
lahf
ljmp
test
addr16
jecxz
sbb
cmc
dec
ret
push
mov
pand
mov
fwait
repnz
and
mov
xor
testl
adc
mov
enter
daa
adc
iret
xor
push
sub
and
jecxz
or
mov
aam
mov
enter
jnp
sahf
xor
push
pop
mov
and
hlt
int
pop
repz
fcoml
cmp
or
sbb
mov
rsm
mov
popf
fld
es
add
cmp
xchg
add
test
or
jg
movsl
jle
dec
pop
pushf
jo,pt
clc
inc
jo
jo
ret
lods
orb
stos
jle
and
cld
es
jns
arpl
mov
add
into
pop
mov
outsl
adc
push
inc
xor
out
jecxz
or
jmp
dec
sti
jle
or
scas
dec
and
xchg
sti
js
cs
cs
xlat
inc
jo
scas
fildll
ja
movsb
jns
sbb
rolb
jle
sub
pop
dec
pushaw
mov
xchg
stos
ja
insb
inc
fisttpll
xchg
cmp
push
lea
fs
cli
negb
xchg
or
aas
dec
cmp
xchg
dec
xchg
rcl
cmp
jmp
gs
sbb
fsubrs
negb
pop
push
jecxz
xchg
pop
jp
out
xor
pop
pop
lret
arpl
into
jno
aad
lret
lods
enter
lds
mov
push
es
mov
aas
jo
inc
dec
dec
out
arpl
or
inc
xor
inc
add
jle
add
cli
jae
push
pop
mov
cltd
xchg
push
inc
xlat
pop
adc
popa
mov
out
stos
inc
add
sub
jg
daa
fldenv
les
inc
ljmp
cmc
cmpb
enter
sub
adc
scas
ljmp
test
insl
jmp
sbb
cmp
sbb
lret
into
cmpsb
push
ret
out
xor
ss
loope
xlat
inc
push
lcall
jo
js
xchg
shll
leave
mov
inc
sbb
adcl
sar
xchg
cld
pop
pop
xchg
mov
outsb
jp
xor
sub
out
out
mov
inc
aad
fcmovbe
sbb
jecxz
jge
and
loop
dec
xchg
push
into
fs
je
inc
insb
jl
push
dec
in
inc
stc
sbb
mov
orl
sub
daa
mov
mov
scas
adc
frstpm(287
cmp
mov
int3
pusha
test
sti
ret
mov
cmc
fidivrl
dec
cld
jo
mov
xchg
scas
inc
out
dec
jge
cmpsb
cmpsb
add
shl
add
xor
cmp
sbb
xchg
data16
and
int
bound
push
enter
subl
dec
inc
mov
leave
pop
nop
in
push
mov
clc
add
and
inc
mov
out
mov
xchg
cmp
xor
xor
loop
lret
in
jmp
aas
dec
or
jno
sbb
ss
les
outsl
sub
iret
and
ffree
adc
clc
push
mov
mov
test
scas
cmp
addr16
hlt
lcall
idivl
stos
xor
pop
ja
xor
std
lock
cmp
lcall
std
adc
and
xor
inc
xchg
fs
jp
push
fs
push
add
inc
in
test
or
std
jp
mov
leave
into
imul
es
sbb
jmp
pop
adc
jnp
pop
jp
or
sub
mov
xor
je
xor
cmc
jb
jb
rorl
or
in
pop
jbe
into
jbe
pop
mov
adc
ficoms
adcl
lea
in
sti
mov
imul
test
into
movsl
add
jnp
jnp
and
push
imul
mov
scas
dec
pop
je
dec
je
movsl
adc
daa
in
mov
jne
cs
sub
or
mov
es
jge
rcl
fistpll
add
lcall
stc
dec
leave
roll
adc
movsb
lods
or
out
ljmp
pop
sub
andb
into
and
aam
xchg
jnp
fstpt
and
push
cmp
ret
repz
xor
mov
and
sub
js
lods
nop
adc
in
mov
fcoms
fcom
iret
push
push
and
push
adc
stos
xchg
and
mov
insb
mov
pop
ds
dec
inc
lahf
fsubl
call
es
das
adc
fisttpll
lds
xor
xlat
sub
and
mov
in
or
ds
out
pop
and
adc
push
pop
pop
sbb
or
aaa
imul
mov
aam
sbb
jl
movsb
inc
inc
addl
mov
add
lds
sub
adc
mov
daa
shl
sbb
mov
push
xchg
push
mov
xor
lahf
aaa
xlat
sahf
cmp
inc
mov
or
mov
push
pop
push
mov
inc
js
insb
std
mov
into
mov
jns
mov
stos
xor
movsb
pop
push
sbbl
bound
add
add
dec
stc
fcoml
out
popa
fildll
push
lea
sbb
and
hlt
js
neg
leave
dec
inc
or
out
mov
in
and
in
in
cs
pop
ds
in
mov
inc
sub
rcrl
xchg
add
les
call
or
pop
pop
outsl
out
dec
or
or
js
xchg
jecxz
mov
aad
adc
fistps
inc
filds
jne
fcmovb
int
std
incb
pushf
pusha
dec
push
cmp
or
cltd
xor
add
cmpsl
lds
test
shlb
inc
push
cmpsb
xchg
js
sub
negl
aad
xor
aam
jl
push
stos
add
sub
int
dec
xchg
jp
inc
cmp
mov
sbb
outsl
or
pop
jne
mov
mov
mov
jne
dec
push
add
out
pop
mov
mov
lods
pushf
pop
sbb
xor
mov
jle
inc
shlb
or
sub
mov
cmp
mov
add
in
cmp
ss
inc
dec
aad
push
adc
pop
cs
mov
jl
inc
jmp
xchg
loopne
cli
push
test
inc
insb
sbb
jnp
cmp
and
add
lahf
out
js
and
dec
push
incl
es
cmp
push
rdmsr
adc
fwait
pushf
dec
mov
daa
add
mov
xchg
cld
mov
outsb
lds
les
mov
out
jo
mov
imul
mov
push
cwtl
mov
shrb
das
inc
sbb
push
mov
jae
cwtl
xorb
test
stos
data16
mov
shlb
fwait
in
in
les
sub
add
out
std
call
nop
outsl
out
std
shrb
dec
mov
add
add
out
mov
cltd
sbb
ljmp
rclb
mov
jmp
jno
lock
aas
sti
outsl
movsb
push
mov
leave
or
popf
movsl
inc
repnz
sbb
lret
push
xchg
cwtl
sbb
cmp
mov
dec
pop
movsb
je
pop
or
in
xor
lret
pop
add
cmp
add
cld
loopne
mov
sub
xlat
lcall
or
mov
inc
das
jl
pop
xchg
and
inc
pushf
cmp
inc
arpl
mov
int
xchg
add
idivl
push
repz
icebp
inc
push
iret
fimuls
cmpsb
fistl
mov
scas
jp
test
xor
dec
lea
movsl
movl
jnp
dec
xchg
jg
ret
xchg
in
xor
movsl
out
fnstenv
xor
xor
xlat
idivl
or
cmpsl
xchg
jle
or
std
jo
aas
adc
mov
shr
add
insl
jne
ljmp
lds
fnstsw
push
addr16
xchg
cmpsl
cmp
addb
adc
lret
jb
loope
mov
jmp
imul
inc
fcompl
addb
test
scas
cmp
sbb
mov
mov
xchg
push
mov
out
movsb
mov
lahf
pop
movsb
imul
dec
mov
popl
std
imul
sub
sub
decb
bound
ror
xor
or
mov
ds
or
and
sbb
add
jmp
mov
sbb
jae
jg
push
mov
hlt
mov
test
add
pop
das
mov
sbb
outsb
movsb
test
mov
jne,pt
and
cli
sti
rclb
fbstp
cmc
insb
sarl
test
aaa
xchg
cmp
mov
inc
lret
test
mov
idivb
xor
xchg
adcl
push
divl
jae
leave
ss
js
fdivr
jmp
mov
sub
sbb
add
pop
jae
push
dec
push
adc
lds
inc
clc
sarb
lods
mov
pusha
push
ds
push
inc
mov
add
testb
aas
add
add
xchg
lret
mov
lods
loopne
cmpsb
adc
or
jb
dec
jmp
or
addb
inc
and
sbbb
xchg
push
mov
cltd
sbb
mov
dec
adc
inc
adc
int3
and
xor
call
movsb
jmp
cltd
dec
aam
mov
fmull
mov
out
xor
mov
cmp
mov
jge
inc
in
jno
mov
mull
jmp
daa
jae
shlb
mov
out
sbb
fs
mov
jg
push
xchg
lods
nop
push
scas
dec
xchg
xchg
cmp
aad
mov
pop
pop
inc
xchg
push
fisttps
cmp
loope
dec
xchg
inc
pop
repz
mov
push
call
cmp
mov
sub
jge
inc
js
loop
jge
data16
lret
push
fisttpl
ret
loopne
sub
clc
mov
bound
rcrl
adc
push
xchg
outsb
sub
fildll
sub
push
outsl
shr
dec
jg
ret
and
pushf
push
arpl
sbb
js
push
adc
in
enter
inc
cmp
negl
lods
dec
popa
dec
ret
and
adc
jl
rcrb
fstpt
jmp
into
pop
nop
xchg
fstps
sbb
inc
jne
mov
lods
fldenv
lock
mov
and
sbb
add
mov
je
mov
pushf
movsb
sub
lea
inc
mov
rcl
fs
or
pop
fdiv
icebp
ret
or
movsl
cs
shrb
into
in
add
shll
xchg
lahf
xorb
out
loope
outsl
ficomps
cmp
pause
cmp
je
dec
mov
int3
addr16
jne
outsl
roll
leave
jecxz
lahf
lock
jg
mov
xor
adc
js
std
mov
xchg
xor
stos
jge
mov
mov
test
fdivs
leave
arpl
push
data16
cmp
cmp
repz
mov
dec
push
lcall
add
jo
xchg
sub
jne
push
ljmp
sbbl
pop
add
test
jne
fcoms
dec
aam
jle
stc
sahf
xchg
xchg
jmp
mov
inc
sub
bnd
inc
dec
in
xchg
xor
pushf
insb
es
test
pop
cltd
lcall
mov
and
movsl
pop
jp
ror
shl
sbb
or
call
and
jnp
cmc
sbb
popf
cmp
cmc
pop
insb
mov
negb
adc
movl
dec
mov
dec
jbe
call
xchg
jbe
push
in
push
mov
popa
xor
sbb
pop
adc
xchg
pop
jl
xlat
and
mov
testb
aas
xchg
enter
sarb
test
inc
stos
pop
jbe
sarb
ljmp
xchg
scas
shlb
mov
push
out
addr16
dec
ds
lds
test
into
or
lds
sbb
pop
pushf
test
lret
orl
mov
jno
mov
imul
xchg
mov
sbbb
hlt
arpl
cmpb
in
into
cmpsl
hlt
out
stos
push
sub
gs
mov
jecxz
icebp
pop
jge
sahf
mov
add
push
xor
js
stc
arpl
and
aas
mov
cwtl
sarb
sbb
sbb
add
mov
jne
sbb
adc
mov
mov
cmpsb
mov
daa
pop
mov
iret
add
mov
adc
aad
sub
test
mov
sub
adc
pop
popw
xor
or
lahf
or
pusha
stos
or
inc
pop
or
jo
test
outsb
daa
push
lods
mov
push
dec
pop
sub
xchg
add
shlb
rcrl
imul
sbbb
in
loop
fcoms
or
jmp
mov
ss
push
cli
mov
mov
or
mov
pop
jne
xchg
jae
js
sub
or
js
or
sub
inc
adc
inc
cmpsl
dec
push
loope
push
stc
inc
add
lods
or
push
jne
mov
jnp
insl
mov
or
iret
repz
mov
lret
push
addr16
lret
mov
inc
push
jbe
pushf
shlb
popf
xchg
dec
sarb
xchg
pushf
cmp
fsubl
call
push
xchg
dec
xor
in
jns
jl
or
inc
mov
cwtl
jmp
sub
or
ret
fucomip
fdivr
lcall
pusha
lock
das
icebp
mov
gs
mov
je
mov
xchg
adc
js
mov
int
mov
dec
pop
inc
mov
mov
push
sbb
sbb
rcrb
or
enter
lahf
dec
pushf
in
fnstsw
addr16
jns
stc
pop
xchg
mov
shl
fisubrs
rclb
mov
stos
add
inc
push
jge
xlat
jne
mov
mov
inc
xchg
movsl
notb
pop
cmpb
jecxz
sbb
sbb
in
pop
dec
mov
mov
lea
das
dec
pop
out
xor
sub
sub
and
push
das
sbb
push
fwait
jnp
push
test
sub
adc
mov
out
ds
jle
test
cmc
in
cmp
rolb
out
xchg
mov
pop
pop
pushf
push
jnp
pop
rorl
imul
jno
lcall
jne
xchg
xchg
dec
andl
inc
pushf
inc
je,pn
jl
lea
cmp
push
mov
add
mov
add
mov
imul
xchg
jnp
sub
pop
mov
shrl
mov
mov
pop
cmp
gs
mov
lods
and
push
cmp
cltd
fdivrs
add
dec
inc
mov
jg
dec
insb
movsb
fdivrs
js
mov
dec
push
mov
xchg
in
cmpsb
mov
push
sub
insl
insb
pop
pushf
addl
add
dec
mov
je
pop
and
add
arpl
cmp
pop
jo,pt
inc
jp
leave
repnz
lds
out
fwait
xor
cmp
or
sub
test
test
sub
and
les
mov
jb
sbb
xlat
aaa
xchg
mov
fisttpll
pusha
ret
mov
mov
les
sbb
loope
dec
inc
mov
jp
rorl
xchg
fwait
pop
pop
test
dec
adc
lret
cmp
sub
cli
inc
push
push
dec
cmp
xchg
inc
adc
leave
sbb
outsl
jp
xlat
inc
addr16
fs
sbb
sbb
out
frstor
add
ret
and
jecxz
dec
loop
leave
mov
ds
out
dec
mov
aas
aaa
ss
jmp
mov
push
mov
popf
pop
pop
in
lret
shll
test
repz
adc
ret
mov
mov
jmp
sub
jo
stos
ds
popa
dec
ljmp
xchg
adc
stos
xchg
lock
stc
push
cmpsb
lods
push
sbb
popa
je
lods
outsb
sbbl
add
lret
out
mov
cmp
in
adc
add
or
test
add
iret
call
or
in
pop
sub
mov
repz
push
pop
jne
xor
lods
into
enter
lret
fstpl
pop
add
dec
dec
pusha
xchg
cli
or
add
sub
xchg
mov
push
fcompl
push
nopl
dec
push
rcrl
outsl
inc
ret
arpl
or
andl
ja
idivl
and
nopl
cmpl
push
or
add
out
not
pop
add
mov
test
gs
imul
cmp
push
jecxz
or
jo
cmpsl
mov
and
aam
pop
or
push
mov
xor
js
push
fbstp
jge
mov
ror
jp
cmpsb
push
jno
jo
dec
mov
dec
lods
adc
dec
int3
mov
int3
cmp
dec
push
rorb
sarl
cmp
pusha
lret
arpl
lret
xor
popl
sbb
and
and
jne
inc
cs
mov
es
inc
push
sbb
and
arpl
adc
sbb
push
pop
push
inc
push
jo
jg
jae
or
cltd
xchg
push
jle
cmpsb
clc
sti
out
add
and
push
dec
mov
roll
loopne
rcrb
mov
mov
jmp
and
mov
mov
xchg
lods
mov
push
and
hlt
notl
cmp
out
icebp
add
aad
ret
xchg
mov
mov
pop
je
push
scas
or
testb
popf
jle
imul
ret
stos
and
aaa
lret
fidivs
pop
pushf
xlat
mov
xchg
dec
shll
sbbl
mov
bound
aas
dec
and
sub
and
inc
sub
int3
jo
insb
repz
repnz
ljmp
rorl
dec
into
loop
jmp
sarl
jns
jne
scas
sbb
lds
pop
roll
xchg
ret
mov
jb
rcrl
push
mov
xor
cli
mov
gs
js
in
cmp
stos
or
cmp
ror
jl
and
cmpsb
ljmp
cmpsb
js
pop
inc
sahf
loopne
sahf
daa
xchg
cli
dec
das
fwait
sbb
pop
xchg
jae
movsl
sarb
fwait
loope
adc
xchg
shrb
push
cmpsb
push
lds
sbb
inc
adc
jns
or
fdivr
lock
lret
aad
dec
mov
push
mov
cs
inc
pop
loopne
sub
dec
push
sub
pand
mov
cltd
and
xchg
push
pop
and
inc
pusha
lods
push
pop
loope
mov
mov
mov
mov
mov
xor
in
stos
push
inc
pop
sbb
fstps
imul
mov
call
pop
mov
aam
xor
roll
pop
bound
ljmp
out
in
jbe
int3
shr
and
dec
add
aad
into
pusha
pusha
cmpsl
stos
inc
in
bound
mov
dec
mov
mov
fcomps
xchg
push
jns
fstpl
mov
mov
pop
mov
inc
mov
loop
mov
mov
sti
lods
adc
stos
lret
mov
das
scas
in
adc
ljmp
mov
test
shll
xlat
jp
icebp
fbstp
mov
mov
cmpl
push
pop
orl
aad
pop
ja
push
xor
scas
arpl
movsl
xor
stos
mov
and
push
and
dec
adc
int3
mov
pop
jmp
mov
and
sbb
add
ds
inc
aam
and
xchg
popl
mov
push
xorb
ds
rorb
aaa
cld
or
nop
enter
daa
add
pop
jl
jmp
adc
adc
inc
inc
loope
test
mov
cmp
fstl
frstor
mov
push
stos
add
or
mov
rclb
in
cmp
pop
rorb
add
push
dec
cld
andl
sub
mov
addl
orl
xor
mov
decl
xor
orl
add
push
mov
xor
addl
add
andl
push
mov
orl
xor
xorl
add
push
lea
push
pushl
pushl
call
test
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
mov
lea
mov
incl
mov
test
je
lea
mov
mov
mov
mov
mov
sub
mov
mov
xor
mov
sub
add
mov
movl
movl
mov
mov
pushl
mov
mov
pushl
pushl
pushl
pushl
pushl
pushl
pushl
mov
call
pop
pop
leave
ret
push
mov
sub
push
dec
push
push
xor
xor
mov
sub
sub
movl
lea
andl
mov
inc
mov
cmpl
jg
jmp
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
sbb
movl
movl
cmpl
je
cmpl
jle
jmp
pushl
pushl
call
mov
dec
mov
jmp
lea
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jge
jmp
push
call
jmp
mov
mov
mov
or
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jle
jmp
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
add
xor
subl
add
mov
sbb
mov
movl
cmpl
je
cmpl
jge
jmp
pushl
push
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
or
mov
movl
cmpl
je
cmpl
jl
jmp
push
call
mov
dec
mov
jmp
add
mov
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jbe
jmp
push
call
cmpl
jne
mov
inc
mov
jmp
mov
andl
mov
inc
mov
cmpl
jbe
jmp
push
call
cmpl
jb
xor
mov
add
movl
cmp
movl
je
movl
mov
movl
jmp
or
mov
mov
adc
mov
mov
addl
or
jmp
scas
fwait
or
mov
dec
cmp
pop
daa
std
addb
jle
xchg
scas
jb
pop
add
and
cmpsl
sub
cwtl
movsb
mov
mov
gs
dec
cltd
addr16
lahf
fisubrs
push
adc
lahf
mov
mov
in
movsb
and
or
jne
out
adc
shlb
mov
jl
push
pop
stos
jecxz
mov
testl
sub
xchg
xchg
mov
es
pop
dec
insl
outsl
xlat
inc
sbb
pop
test
push
mov
jbe
jnp
cmpsb
out
ds
mov
aad
js
jg
stos
out
cmpsb
fistps
movsb
inc
push
cmpsb
addr16
jne,pt
aas
mov
stos
rcrl
les
cmp
dec
enter
insl
scas
cmp
pop
pop
mov
subb
xchg
xlat
add
inc
out
xchg
int3
mov
int3
fimull
nopl
lock
adc
push
inc
mov
lods
xor
or
jmp
cld
add
sbb
pop
or
ret
bound
push
lds
in
andb
jo
pusha
jmp
inc
mov
mov
dec
cmpsl
stc
fnsave
pop
lahf
enter
filds
negb
jge
sub
cltd
popf
aaa
les
aas
test
daa
sbb
sub
mov
mov
xchg
mov
sbb
cmpsw
push
and
test
scas
adcb
adc
xor
xor
rcrl
inc
xchg
sbbl
mov
scas
fcomps
adc
jp
in
mov
cmpsl
js
or
fwait
arpl
xor
movl
mov
sub
incb
data16
cmp
jecxz
xor
add
mov
ja
test
add
jbe
xor
xchg
and
shrl
ret
js
stos
dec
lea
sti
xor
sub
pop
sub
push
xchg
jno
out
js
cmc
in
and
jmp
xor
add
shll
push
cli
inc
add
fmul
push
xor
or
dec
cmpb
fadd
dec
test
out
jmp
mov
mov
js
mov
stos
sbb
mov
popa
xchg
cmpsl
sbb
mov
pop
bound
in
adc
dec
adc
loope
mov
insl
fidivl
in
sub
fidivl
lods
aas
call
fstl
inc
and
loope
lcall
sub
sbb
sbb
mov
movsl
out
data16
sbb
aad
inc
push
fwait
jl
cld
cmpsl
dec
sbbb
push
xor
pusha
xchg
adc
aam
call
test
mov
das
cli
xor
jl
push
mov
xor
xchg
jmp
int3
aam
addr16
xchg
fdivrp
xchg
or
pop
sbb
hlt
outsb
int
xlat
cmc
movsb
or
push
adc
jmp
lret
popf
lods
repz
or
mov
std
sbb
into
aaa
adc
in
inc
inc
fucom
adc
jmp
push
or
xchg
js
ljmp
rcll
fisttpl
lods
cmpsl
popa
sarb
mov
or
iret
xor
inc
and
rcr
add
pop
out
xchg
mov
mov
jbe
mov
xor
in
dec
fisubrl
pop
stc
add
mov
ds
pop
fildl
or
mov
jecxz
fisubrs
daa
fwait
fs
adc
das
mov
lcall
es
sub
loope
dec
inc
jge
xorb
mov
fs
or
sti
rol
xor
adc
jne
add
mov
adc
xor
mov
jne
add
aas
mov
leave
hlt
sub
pop
jecxz
hlt
andl
add
mov
lock
xlat
and
mov
jmp
inc
jnp
cmp
jl
insl
sbb
and
ret
subb
movsl
xchg
std
fadds
movsl
inc
jae
jecxz
pop
movl
movsl
fisubrs
repz
ds
jle
ret
xchg
data16
dec
mov
inc
test
fdiv
mov
lahf
add
shrl
inc
je
jbe
and
out
insl
cld
hlt
inc
jmp
fwait
repz
je
and
jge
les
add
testb
xchg
adc
push
push
addr16
push
dec
jg
or
fdivrl
inc
inc
dec
test
scas
loopne
je
cmpsb
push
fcoml
mov
cmp
cvtps2pd
mov
jmp
ss
int3
adc
shrb
xchg
xor
jecxz
enter
pushf
ror
call
push
cmc
out
pop
cs
pop
add
or
pop
dec
add
jo
mov
cmp
inc
loope
mov
fs
inc
lcall
cmp
or
movl
lock
push
loope
adc
lods
lret
lahf
cmp
cmp
push
sbb
pop
cmp
std
and
mov
je
pop
sbb
sub
popf
aaa
pop
and
xor
gs
jmp
pop
cmpsb
inc
loope
xlat
mov
frstor
jns
test
adc
out
jbe
int3
fiadds
cmp
stos
jecxz
and
add
lods
push
sub
or
or
imul
pop
ret
aad
ror
hlt
int
mov
enter
xchg
neg
aam
ja
jbe
outsl
jne
fiadds
es
dec
das
push
mov
pushf
pop
xor
pop
jo
xchg
sub
je
cmp
fisttps
aas
es
sub
pop
pop
loop
mov
enter
dec
ds
mov
lret
add
into
adc
cld
jecxz
push
das
out
popa
pop
stc
cltd
ds
inc
mov
das
cs
push
ljmp
iret
and
mov
clc
repnz
outsb
xchg
mov
push
dec
shr
mov
dec
sbb
scas
lds
out
push
adc
dec
mov
inc
push
pop
pop
add
movsl
stc
and
push
xor
jno
test
cltd
cltd
cmp
xchg
data16
das
mov
sub
mov
lret
and
stos
push
mov
dec
adc
cmpb
ds
adc
aad
scas
mov
inc
scas
mov
add
out
or
push
mov
out
insl
cs
cmpb
cmp
adc
loop
scas
pusha
fdivr
adc
or
popa
add
rorl
mov
out
lea
and
mov
idivl
repnz
and
ja
pop
pop
mov
je
sub
xchg
push
das
jg
dec
in
sbb
lods
hlt
jo
sub
add
and
and
rolb
jmp
ljmp
dec
fwait
arpl
jb
inc
and
hlt
xor
lret
inc
jle
ja
out
sub
jg
dec
repnz
push
xchg
jo
dec
fs
test
lods
imul
lcall
test
out
cli
dec
call
ljmp
inc
sahf
or
mov
int
push
cmc
rorb
fwait
xchg
and
inc
sarb
push
cmpb
call
mov
fnclex
leave
sub
cmpsl
ss
or
nopl
jo
rcrb
dec
outsb
cltd
fiadds
mov
hlt
mov
mov
xchg
cmpsl
lods
sbb
pop
hlt
insl
dec
pop
out
enter
clc
insl
jo
hlt
pop
cmp
adc
div
lock
repnz
icebp
cltd
sbb
out
and
outsl
test
push
xlat
cmpsb
popf
xchg
xor
xor
scas
ret
fs
mov
clc
push
outsw
adc
sti
stos
cs
bound
flds
sar
cld
push
xchg
xor
movsb
fsubp
stc
mov
jecxz,pt
cmp
sahf
inc
movsb
mov
jbe
or
push
mov
rcll
std
rorl
fstpl
jg
xor
adc
xor
int3
and
sbb
jae
xchg
aaa
lods
bound
mov
cmp
dec
mov
adc
xor
andb
popf
push
mov
jp
pop
daa
inc
iret
sti
mov
adc
pop
shl
sub
repnz
xor
dec
out
lahf
jmp
push
jp
cmpsl
mov
dec
adcl
lock
pushf
fwait
cmp
rcrl
dec
lds
je
push
rclb
xchg
out
mov
lods
jge
stos
cli
je
fdivrp
test
and
sbb
rorl
cmp
xlat
in
mov
mov
sub
and
aas
mov
jg
xchg
test
sub
or
lds
enter
in
mov
mov
jge
out
mov
sbb
je
fs
add
add
mov
push
sarl
push
mov
ds
jno
lods
mov
stc
jle
pushf
test
popf
lahf
adc
push
in
mov
xchg
inc
mov
mov
aad
xchg
cmpsl
mov
dec
aad
sub
push
pop
addl
rorl
mov
clc
pop
push
nop
imul
mov
in
sub
hlt
stos
lcall
pop
outsl
andl
adc
into
xlat
sub
ss
shll
mov
ret
adc
dec
sub
add
xor
lods
mov
fstpl
cmp
push
push
xchg
xor
out
sub
jo
xchg
arpl
das
scas
scas
outsl
or
call
aas
ror
push
mov
insl
and
rolb
fwait
sub
rcr
sbb
push
scas
fildl
xor
add
loop
mov
test
daa
cmc
enter
into
addb
ljmp
dec
dec
sub
mov
sub
xor
lcall
push
leave
fistpll
pop
xchg
es
dec
stos
fwait
shlb
enter
lahf
fsubrl
push
lock
ret
push
loop
mov
insl
fsubrl
xchg
push
xor
cmc
or
pop
insb
in
push
pop
mov
mov
sti
dec
inc
mov
je
rclb
adc
adc
les
dec
std
in
aad
add
fidivs
stc
pop
and
lahf
inc
test
leave
stos
dec
jno
pushf
sahf
sub
cmc
shl
jbe
mov
cld
data16
dec
and
roll
dec
outsb
mov
jmp
fld
lea
xchg
sbb
dec
ja
mov
fwait
sub
sbb
cs
xor
sub
rorb
aas
inc
fistl
das
xor
gs
fcomps
mov
sub
loop
sub
push
push
adcb
pusha
cmp
push
lds
mov
test
and
sub
pop
ss
int3
mov
xor
pop
push
add
mov
xchg
mov
jns
jbe
outsl
daa
lock
mov
xchg
out
mov
add
mov
dec
jle
mov
fdivs
pop
leave
inc
pushf
lock
pushf
fbstp
les
ja
stos
in
pop
push
ljmp
mov
cmp
mov
pop
arpl
mov
xor
or
inc
cli
lcall
icebp
notl
mov
push
pusha
cld
ljmp
push
sub
aas
outsb
adc
pop
insl
mov
jle
mov
scas
sarb
sarl
jecxz
adc
scas
icebp
or
ss
cs
in
shr
pop
or
push
xlat
lock
mov
pop
repz
sahf
xchg
fidivl
in
ret
adc
pop
lret
icebp
mov
gs
lds
sub
cmp
dec
mov
mov
or
lea
popf
shll
jae
pop
jno
hlt
push
cmp
pop
test
mov
sub
aad
or
repz
adc
inc
jb
xlat
cmp
pop
stos
or
out
out
jae
out
pop
mov
adc
les
addr16
mov
cmp
les
xlat
xor
add
std
popa
loopne
clc
fisubs
cmp
xchg
mov
and
addr16
into
mov
jecxz
or
push
and
ja
cmc
sbb
and
lds
mov
aad
fstps
push
inc
xor
mov
xchg
mov
xor
push
cmp
aam
jl
or
add
into
mov
stos
mov
leave
jb
ss
dec
gs
ret
cmp
jno
push
xor
int
pop
dec
xchg
or
int
cmp
cmpsl
pop
icebp
ret
jmp
fs
mov
xor
dec
in
sbb
loop
mov
xchg
cmpsl
jbe
adc
inc
out
arpl
fldenv
out
cltd
pusha
sub
rorb
shll
ror
mov
addr16
push
add
add
bound
outsl
in
sbb
push
adc
mov
inc
inc
cmp
test
mov
xchg
inc
dec
mov
and
outsl
inc
jmp
nop
insl
mov
pop
push
jno
jge
xor
jp
mov
jecxz
in
inc
or
out
loope
mov
mov
gs
sub
rclb
decb
inc
inc
sub
in
pop
iret
jp
jo
repnz
push
fisttps
push
cmpsl
inc
jns
push
data16
test
mov
or
add
inc
jmp
lods
pop
in
in
rcll
scas
loope
addr16
jecxz
aam
cwtl
lock
dec
mov
pop
jbe
pop
jecxz
es
sub
push
and
push
mov
jbe
mov
cmp
nop
jnp
xchg
imulb
mov
ja
push
mov
sub
dec
or
gs
jno
imul
and
push
sub
push
orl
rorl
rcll
mov
getsec
popf
aad
test
data16
fisubrl
mov
inc
mov
push
push
testb
popa
rcrl
aas
sarl
add
stos
icebp
or
pop
adc
test
repz
inc
sub
cmpsb
sub
movsb
xor
jp
out
outsb
movhps
sub
push
mov
rorl
ret
inc
cmpsl
jb
mov
dec
dec
fwait
inc
pop
pushf
pushf
cmp
push
jne
dec
mov
pop
inc
pop
cmpsw
mov
dec
cmpsl
add
int
jne
std
pop
ret
mov
sti
mov
call
cmp
int3
mov
movsl
mov
cmc
xor
pop
lcall
adc
jb
mov
mov
inc
ljmp
add
mov
jge
jle
stos
loop
jb
filds
fisttps
cmp
mov
push
imul
fnstcw
adc
dec
lahf
add
inc
jns
stos
jnp
jno
je
pop
xchg
push
das
xchg
lock
inc
enter
pushf
sbb
ss
lret
xor
dec
repz
lods
lahf
test
cwtl
sub
jmp
sbbb
mov
push
rorb
adc
push
sbbb
in
dec
rclb
mov
loopne
xchg
stc
and
and
movsl
shrb
in
add
xchg
rorl
hlt
sarb
divl
rcrl
lock
xchg
movsb
xchg
jno
or
xlat
add
push
pop
cmpsl
bound
push
sbb
mov
adc
add
jbe
fcomip
inc
sub
cs
mov
push
mov
jecxz
test
adc
ret
push
lds
repz
aad
push
pusha
jnp
imul
xor
xlat
jb
nop
xchg
add
das
popa
fildl
testb
mov
push
dec
dec
shlb
aaa
add
mov
adc
aas
mov
fwait
mov
ficompl
mov
test
cltd
andps
xchg
mov
and
lods
pop
icebp
jl
rolb
pop
lcall
dec
mov
mov
and
adc
xchg
xchg
mov
xor
aad
dec
insb
ljmp
lds
and
adc
popa
into
pop
jl
nop
xlat
das
cli
aam
sub
test
ret
stos
loop
push
mov
xchg
dec
loop
data16
jb
jbe
rclb
adc
mov
int
loop
call
xchg
int
adc
int3
imul
sub
pop
xchg
pusha
test
and
mov
pushf
jle
xor
xor
push
cli
adc
and
sbb
xchg
push
pop
push
lcall
and
adc
adc
test
out
pop
addl
outsl
mov
add
jnp
mov
mov
in
mov
or
and
ss
int3
mov
ss
pop
sbb
test
mov
inc
icebp
sub
jg
sub
push
fcompl
xchg
ffreep
inc
in
negl
cmpsb
ljmp
adc
mov
sbb
jne
or
mov
shrb
jae
out
fmull
mov
mov
dec
enter
cmc
mov
and
dec
insb
icebp
push
adc
xor
pop
push
fsubrs
dec
cwtl
cli
add
mov
les
adcb
pop
enter
jmp
int
jae
sub
into
aaa
inc
je
ja
arpl
adc
dec
and
dec
sbb
mov
loop
fwait
clc
push
je
sti
rep
sti
gs
lret
insl
imul
mov
inc
fiaddl
mov
or
jae
repz
mov
cs
mov
pop
stos
scas
xor
jb
dec
dec
dec
push
jns
addr16
arpl
in
std
les
out
fisubl
inc
cmp
int
push
add
icebp
mov
cmp
scas
cld
outsl
aad
jbe
mov
cs
cli
out
icebp
push
xchg
cli
or
cmp
xchg
cmp
dec
outsl
dec
push
stos
push
frstor
pop
out
mov
je
pop
adc
shlb
arpl
nop
mov
xchg
mov
mov
setle
addps
loop
fsubrl
inc
cmpb
lock
mov
in
mov
jl
in
jecxz
notl
cli
lods
flds
stos
lcall
adc
addr16
xchg
push
lock
xchg
add
sbb
inc
and
imul
pop
and
xchg
test
je
repz
orb
adc
cmpsl
addl
hlt
imul
pop
xchg
movsb
test
mov
stc
cltd
jno
aaa
xchg
stos
daa
ret
lods
ljmp
into
mov
mov
les
pop
mov
mov
scas
data16
ret
xchg
push
into
out
mov
and
lret
push
std
sub
lcall
mov
pop
cmc
push
xchg
cmp
pop
fidivrl
stc
ret
in
rorl
fldcw
scas
fcmovne
inc
pop
stc
push
loope
pusha
leave
sub
jmp
ret
out
ret
fnsave
fnsave
cmp
xchg
inc
pop
aas
sti
lret
jecxz
push
popa
jecxz
push
enter
test
pop
adc
cmpxchg
cmp
xor
das
and
push
add
orl
dec
fcom
frstor
mov
dec
out
push
mov
cmp
or
js
and
int
sbb
sbb
jp
mov
xor
sub
jmp
loop
icebp
jnp
jg
mov
negb
daa
mov
repz
cld
test
xchg
sub
icebp
xor
jns
das
pop
xchg
out
add
mov
and
shrb
xchg
fs
test
dec
shlb
xor
es
addl
lcall
mov
xchg
icebp
dec
xor
push
rcl
shl
out
cld
lea
repnz
sub
jl
inc
add
add
in
jge
movsb
or
cli
push
adc
in
mov
ljmp
divl
jp
cmp
xor
into
imul
xor
add
fwait
mov
or
xchg
scas
and
movsl
popf
and
ficomps
fnstcw
test
pop
pop
rcll
jns
add
inc
jns
and
cmp
sub
shlb
jmp
sub
lahf
neg
std
imull
popf
add
fidivl
jl
aam
loopne
cmp
aad
cmc
fsubrs
push
and
dec
inc
mov
push
mov
rolb
xor
cmc
cmp
scas
inc
mov
pop
call
mov
push
xchg
inc
scas
std
divl
test
cs
adc
jle
stos
xlat
incl
push
mov
sbb
or
sbb
inc
adc
jae
sbb
push
adc
jge
push
xor
cmp
decb
scas
cwtl
adc
jo
cli
jno
ljmp
pmovmskb
repnz
aad
mov
call
sbb
dec
add
test
jmp
call
lret
cld
outsl
sbb
fmuls
cld
cld
dec
add
pop
hlt
mov
sub
mov
mov
mov
pop
xchg
jle
and
jne
enter
add
pop
aam
dec
or
or
test
jg
mov
xor
or
mov
lods
aad
dec
js
in
push
scas
and
jns
cmpsb
mov
cmp
mov
fisubrs
inc
sub
fincstp
test
pop
lcall
push
cmp
inc
inc
faddp
pop
ret
xor
dec
push
les
out
push
sub
xchg
fucom
sub
pop
lock
fisttpl
dec
fisttpll
jns
sub
outsb
repz
cmpsl
mov
sbb
and
jmp
arpl
mov
ss
add
dec
pusha
push
lret
loope
add
xchg
pop
inc
push
inc
lods
mov
popa
adc
xchg
pusha
adc
test
xchg
ljmp
fnsave
bound
jg
sahf
mov
mov
lret
scas
scas
fcoms
jmp
fsubrp
lret
dec
push
setl
fcoml
sub
sub
xchg
outsl
daa
sbb
inc
es
mov
pop
test
jl
add
fsubrs
lcall
mov
cmp
inc
mov
mov
out
push
xchg
or
xchg
dec
inc
cmp
dec
dec
mov
pop
arpl
adc
xchg
movsl
shrb
xchg
pop
dec
call
jg
cmp
or
xchg
je
orb
cld
xchg
or
mov
dec
xlat
push
fstps
cmp
lock
fst
xor
dec
dec
xor
pop
mov
jecxz
pop
mov
sub
jmp
sbb
lods
jnp
add
xchg
jmp
orb
dec
jnp
rcll
adc
imul
lea
push
xchg
test
jo
into
jge
lret
ljmp
mov
leave
hlt
out
shlb
dec
imul
inc
push
les
sub
lahf
test
imul
aad
ret
insb
pop
or
xor
jne
sbb
leave
ficoms
test
mov
gs
cmp
rolb
adc
adc
stos
scas
sub
fdivrl
ljmp
pop
adc
ss
scas
test
clc
and
int3
inc
fcom
lods
lods
das
dec
inc
dec
clc
mov
test
mov
enter
cs
int3
mov
std
test
sbb
pop
cmovns
aaa
xchg
out
shlb
cmpsl
or
xchg
shlb
nop
jp
mov
xor
jg
loopne
dec
sbb
mov
jle
sub
xchg
xor
sub
rcr
out
jbe
enter
lods
jne
mov
jmp
add
adc
push
sbb
xchg
ret
dec
inc
enter
push
rol
fcoml
loopne
mov
xor
pop
cmp
inc
jo
dec
scas
mov
aas
mov
and
fcompl
jne
out
movsb
into
pop
out
inc
out
and
and
js
scas
pop
ret
adc
int3
lret
sbb
roll
xor
push
jg
mov
adc
int
lahf
outsb
sbbl
mov
push
push
jecxz
adc
sbb
filds
mov
aaa
scas
and
mov
mov
sbb
pop
int
or
dec
xchg
jno
mov
and
mov
jno
adc
cs
push
fstps
mov
push
divl
mov
insl
mov
dec
mov
shll
loope
sub
insb
cmp
jnp
test
xchg
jne
pop
int3
push
lods
aas
pop
movsl
mov
lcall
fdiv
loop
jns
insl
sub
xor
and
outsl
out
pop
mov
xchg
mov
sbb
out
mov
shrl
cwtl
iret
lock
shll
or
pop
mov
pop
ljmp
addr16
mov
sub
xchg
inc
add
cmp
int
in
cmp
mov
stos
cmp
xchg
enter
mov
cwtl
mov
xchg
jge
pop
cmpsb
mov
mov
rcll
loope
or
in
add
outsb
insb
call
dec
sbb
xor
ret
push
pop
or
aam
inc
test
dec
and
inc
sahf
outsb
inc
dec
fnstcw
je
inc
arpl
bound
clc
sub
dec
fsubs
or
clc
cmp
push
dec
lock
adc
mull
ljmp
push
jns
xchg
dec
jp
and
or
xor
add
mov
pop
repnz
xchg
dec
mov
dec
pop
mov
push
sub
mov
inc
inc
xor
jno
mov
adc
xchg
into
mov
aam
adc
ja
fstpl
cmp
xchg
jmp
dec
outsb
mov
xchg
loop
sahf
scas
test
sub
and
xchg
lret
bound
rcll
das
mov
mov
lods
nop
lods
fwait
mov
adc
dec
mov
idivl
dec
outsl
jl
cmpb
or
fcmovb
jge
loope
adc
add
inc
lret
arpl
or
ret
pushf
jmp
int
inc
test
adc
jmp
xchg
and
clc
imulb
in
mov
fmul
sub
and
adc
orl
sti
fdiv
jb
mov
sub
adc
xchg
mov
fldenv
sub
jbe
pop
jl
mov
mov
js
ret
add
jmp
xchg
mov
popf
inc
add
pop
mov
pusha
test
cmpb
dec
jbe
and
sub
xchg
lret
es
xchg
inc
or
jne
fnsave
lods
jno
adc
rcll
fstps
xor
les
ja
sti
rorb
les
and
imul
cmpsl
dec
idiv
mov
jmp
lea
mov
mov
sbb
or
nop
dec
and
adc
jbe
cmp
leave
mov
rcl
movsl
mov
fcomip
insl
das
mov
jl
loop
xor
mov
movb
adc
lods
ja
jle
lock
xor
adc
mov
scas
sub
push
cmpsl
push
jbe
sbb
test
adc
out
popf
or
or
das
mov
call
sbb
mov
xchg
dec
std
and
js
add
imul
mov
add
std
mov
outsb
test
add
aaa
jmp
testb
dec
loopne
ror
mov
cmc
cs
mov
insl
mov
or
ss
in
out
xor
or
out
cltd
lock
add
dec
lock
dec
adc
xor
imul
push
dec
xorl
cmp
pop
adc
pop
jge
int
inc
sti
int3
sbb
subb
cmp
ljmp
dec
xor
fdivl
cmpsb
xchg
jmp
push
sub
and
pop
sub
jl
cmp
dec
mov
dec
outsl
pop
pop
mov
sbb
lret
test
sahf
pop
in
or
sbb
sti
iret
into
movsb
testb
clc
test
call
ds
or
xor
xchg
and
pop
push
rclb
push
rcrb
movsl
jae
pop
aad
psubq
inc
push
das
aam
out
out
mov
push
mov
jb
xchg
xor
sub
lods
cs
xorl
mov
out
lods
out
in
in
dec
jo
xchg
push
pop
rcl
data16
ret
ror
shll
insl
data16
adc
icebp
cmp
dec
push
ret
int
into
sub
fistl
in
clc
mov
sbb
in
gs
xchg
or
icebp
ds
aaa
js
or
les
mov
lahf
scas
jae
xorl
pop
mov
sub
movsl
imul
xchg
cmp
les
repnz
lods
pop
cmp
mov
jo
outsb
add
arpl
das
sbb
xchg
jb
in
stos
mov
add
push
mov
mov
popa
cltd
rorb
cmp
sahf
stos
addr16
dec
add
adc
xor
out
out
lahf
mov
out
js
jle
das
out
mov
subb
lock
push
xchg
popa
cmpsl
je
movb
lock
sub
xchg
jle
add
push
xchg
stc
outsl
hlt
test
and
leave
mov
cmp
sub
insb
sub
sbb
out
int3
iret
xor
negl
mov
or
fdivl
sub
sti
outsb
repnz
pop
pop
xor
mov
loopne
jle
dec
mov
mov
movsb
push
push
push
sbb
or
and
mov
int
loopne
notb
pushf
pushl
test
loopne
test
jl
dec
or
inc
xchg
mov
lock
cmpsb
adc
xchg
das
int3
xor
pop
push
aad
mov
cmp
pop
fidivrs
mov
pop
stos
ffree
and
lret
pop
sbb
fdivrl
xchg
cld
rcll
jb
xchg
ljmp
mov
pop
movsl
jne
sbb
out
jae
cmc
out
and
jnp
jmp
flds
mov
mov
or
pushf
repnz
movsb
out
xchg
divl
or
push
pop
lret
push
dec
sub
scas
out
cltd
xchg
movsl
mov
nopl
xchg
sbb
icebp
mov
popa
jbe
in
fs
sbb
stos
push
repz
mov
popa
insb
jl
inc
and
and
movsl
inc
lcall
lds
bound
sub
je
js
ret
jae
cmp
mov
mov
or
jle
scas
test
mov
ss
in
adc
sub
lds
jle
in
inc
outsl
or
and
fsubl
dec
jl
jbe
fnstsw
loopne
or
mov
insl
jno
nop
sbb
pop
popf
sbb
in
je
mov
push
je
pop
jb
jmp
mov
sub
push
sbb
aaa
aad
rcl
nop
or
jbe
add
hlt
lea
imulb
dec
sbb
mov
call
push
mov
pop
xchg
jo
add
push
adc
add
test
add
add
xrelease
jne
push
movl
push
movl
jmp
mov
mov
mov
cmp
movl
jne
cmp
movl
jne
push
movl
push
jmp
movl
mov
mov
movl
cmp
jne
movl
cmp
jne
push
movl
push
movl
jmp
mov
mov
mov
movl
cmp
movl
jne
movl
cmp
movl
jne
movl
push
push
movl
jmp
mov
not
mov
mov
cmp
jne
cmp
jne
mov
xor
add
mov
mov
mov
xor
add
imul
mov
xor
add
cmp
mov
mov
je
mov
add
mov
mov
xor
add
imul
mov
jmp
mov
xor
mov
mov
xor
sub
add
mov
mov
add
mov
mov
mov
xor
xor
lea
mov
xor
add
imul
mov
xor
sub
mov
add
cmp
mov
mov
jg
xor
mov
sub
add
jmp
xor
add
add
mov
mov
mov
xor
add
movl
mov
not
movl
mov
mov
mov
and
mov
xor
mov
add
cmp
je
mov
xor
movl
movl
mov
sub
movl
add
movl
mov
mov
mov
xor
add
cmp
jne
mov
mov
mov
lea
mov
mov
mov
xor
add
jmp
push
inc
dec
test
data16
addb
sub
ljmp
inc
xchg
sub
add
cld
xor
rcrl
ret
or
push
push
enter
pop
xchg
push
popa
inc
jno
and
jmp
sbb
jns
arpl
xchg
ffreep
sub
stos
and
and
push
daa
negl
cli
jge
rcll
orl
jl
test
ffreep
icebp
or
arpl
and
scas
or
nop
and
inc
mov
mov
icebp
in
and
out
jo
mov
das
push
add
mov
dec
or
aam
xchg
fstpl
jae
mov
or
push
sarl
pop
dec
sahf
test
xchg
into
jns
xchg
insl
xor
xor
jcxz
out
dec
mov
es
bound
ficoms
mov
jl
jmp
insb
lock
ljmp
xchg
xor
jmp
roll
nop
das
mov
pop
addr16
mov
ds
push
mov
cmp
stos
shll
test
aas
mov
repz
xor
out
xlat
sbb
je
loopne
dec
fwait
or
mov
mov
shll
adc
into
xor
test
sub
sahf
inc
cmp
inc
leave
push
ds
repnz
add
sbb
andl
cmpsb
mov
pop
cmp
insl
dec
sbb
adc
jl
ss
cmp
pop
aam
lock
and
idiv
lods
push
pusha
jp
idiv
push
add
int3
out
cld
adc
cmp
aaa
sbb
mov
cmc
lahf
adc
pop
jmp
int3
ret
sub
push
lds
call
push
cwtl
ja
add
leave
loope
iret
and
and
jb
call
sbb
adc
jle
addr16
mov
es
jo
xchg
ffreep
xchg
gs
imul
adc
or
jae
sub
mov
or
jo
lcall
test
push
testb
pop
pop
pop
push
push
movl
iret
push
push
jne
fcoml
and
iret
shl
jo
cmp
mov
int
cmc
pushf
and
out
sub
ljmp
cld
aaa
rol
into
mov
inc
sbb
jg
sub
test
and
dec
stc
pop
push
cmpsb
mov
inc
shrb
xchg
cltd
outsb
jnp
inc
lock
in
inc
inc
xlat
sbb
lret
xchg
addr16
js
cmc
gs
int3
jbe
mov
dec
lahf
rcr
lock
jg
repz
lahf
adc
xor
movsl
ja
in
stos
mov
push
cmp
mov
xchg
iret
loop
or
std
or
push
mov
int
lret
fistpl
jp
dec
repnz
jbe
ja
nop
adc
add
shr
add
scas
clc
dec
outsl
int
addl
mov
out
and
test
or
mov
jb
pop
sbb
fiadds
sbb
dec
push
inc
scas
pop
and
outsb
sarl
test
add
sarb
or
inc
sub
icebp
jge
xor
inc
bound
in
aaa
daa
add
or
cmc
jns
push
pusha
pop
insb
adc
add
push
push
fsubrl
mov
dec
pushw
daa
cmp
out
insl
cltd
xchg
pop
test
push
inc
jg
add
or
sahf
and
inc
ss
dec
push
xchg
mov
insb
sbbb
cmp
mov
cmc
jp
add
push
and
xchg
mov
push
jle
popf
add
cmpb
mov
mov
pop
lods
out
aam
jle
mov
jp
pop
mov
ds
scas
adc
movb
cmp
clc
hlt
mov
daa
pop
lods
or
leave
outsb
pop
xchg
fisttpl
adc
jno
xor
cmp
ja
jle
loopne
jno
addr16
std
sub
aam
mov
pop
cwtl
pop
lret
es
adc
mov
or
push
sub
push
aad
and
add
jl
xor
leave
mov
cmp
loope
push
mov
xchg
in
incl
cld
push
enter
imulb
dec
fwait
jle
adc
les
mov
mov
mov
incb
and
jg
dec
jecxz
sub
and
push
sti
push
sbb
out
sbbb
loop
or
push
test
dec
add
loopne
or
push
or
andl
ret
mov
lret
roll
sbb
or
repz
ss
mov
cmp
mov
js
push
lahf
addr16
xchg
cli
jo
jno
pop
lret
mov
pop
shll
stos
insl
sbb
sub
stc
xor
and
fldenv
cmp
arpl
push
xchg
fisttps
xor
pop
xchg
cmp
or
outsb
pop
push
fwait
cmp
and
popa
lea
pop
repnz
adc
cmp
adc
ja
clc
stc
and
jae
sbbb
add
xor
stos
in
fdivl
cld
mov
sbb
mov
pop
mov
pusha
sub
cmp
cmp
stos
inc
mov
jmp
jg
loope
sbb
jmp
mov
mov
xchg
mov
int3
jbe
or
inc
jno
sub
dec
pusha
mull
adcb
mov
popa
test
pop
dec
aam
add
mov
pop
ja
movsl
sbb
add
jns
mov
popa
and
adc
cmp
inc
mov
outsl
fdivrl
sbb
lods
add
dec
je
jb
mov
out
ficomps
jb
jge
ret
mov
jp
push
adc
sub
iret
repnz
mov
fwait
ja
xchg
sub
push
mov
dec
mov
aam
and
test
repz
xchg
clc
push
movsl
cmp
ret
cld
iret
out
xchg
xchg
aaa
mov
out
adc
push
inc
shll
es
pop
add
pop
cmp
inc
jmp
loopne
lds
pop
add
inc
daa
arpl
out
add
or
rorl
mov
shlb
inc
icebp
jns
incb
mov
scas
jp
xorb
push
push
pop
outsl
xchg
arpl
cmp
push
jecxz
dec
inc
in
xor
mov
bound
scas
jmp
outsb
cmp
cmp
jle
mov
xor
mov
xchg
fs
int
lahf
ret
xchg
jle
mov
push
add
pop
push
mov
jbe
dec
fwait
pop
aas
sarb
mov
sbb
jl
lea
sbb
sub
mov
inc
mov
lcall
pusha
add
add
lods
jle
cmp
cmp
into
mov
and
addr16
jl
dec
nop
scas
imul
inc
loope
add
and
aad
and
mov
jl
or
pop
push
cltd
movsb
xlat
xor
ja
push
mov
dec
xchg
ficoms
mov
cld
cs
push
in
insl
push
cmpsl
dec
mov
roll
sti
jnp
inc
pop
and
sbb
leave
arpl
outsb
inc
fiadds
jmp
mov
aam
pop
fsubl
cmp
jl
jno
repz
cmp
or
pop
gs
out
pop
mov
loope,pn
and
jge
jge
dec
mov
inc
pop
out
cltd
inc
imul
push
fcmovu
xlat
aad
cld
and
xchg
jmp
std
dec
push
pop
gs
jle
add
fmuls
adc
repnz
fs
xchg
loopne
testl
add
popl
inc
lahf
sbb
xor
mov
ljmp
daa
dec
sbb
mov
ret
je
fsubr
mov
mov
in
popa
mov
fidivrl
pushf
out
ret
xchg
dec
arpl
mov
data16
cld
push
inc
aam
int3
push
mov
jl
cmpsl
les
arpl
lahf
into
inc
pop
xor
call
sub
or
pop
aam
scas
test
xchg
jo
das
adcb
fnstenv
movsl
orb
bound
mov
movb
and
stos
jle
pop
jne
cmp
push
jae
cmp
and
or
jge
and
or
cmp
addb
mov
inc
fisttpl
pop
xchg
mov
sbb
in
xchg
cltd
adc
aam
or
xlat
cmp
push
sbb
sahf
sbb
test
loope
sbbb
loope
mov
jnp
data16
jb
pop
cmp
pop
or
js
dec
mov
ja
xlat
mov
push
repz
daa
les
sub
std
xchg
xor
add
or
jns
jp
jle
mov
imul
sarb
dec
ret
adc
fildll
int3
dec
enter
or
adc
clc
sub
mov
ja
cmp
jbe
mov
leave
lods
cli
mov
xchg
bound
cmpb
or
fistps
das
push
inc
lea
sbb
fldt
mov
and
cmpsb
add
rorl
pop
cmp
adc
sbb
rcr
inc
or
adc
jae
lock
dec
sbb
xor
sbb
xor
int
inc
push
mov
jae
push
faddl
inc
add
lret
jae
nop
mov
ret
mov
push
jns
ficompl
ficoml
call
rorl
push
or
jo
aas
stos
or
mov
iret
push
mov
jecxz
add
cwtl
hlt
das
fwait
fs
push
xchg
scas
fwait
xor
sbb
push
fs
movsl
aam
cmp
inc
and
loop
pop
bound
or
lcall
loopne
cmp
lock
insb
mov
scas
mov
dec
cli
dec
mov
dec
mov
bound
je
pop
mov
lock
loop,pn
pushf
movsb
push
dec
pop
insl
add
dec
xor
mov
addr16
addr16
mov
push
jmp
inc
mov
aam
in
dec
shrb
xor
test
inc
push
add
push
call
xchg
scas
push
loop
mov
out
jno
lods
sbb
or
rolb
jbe
mov
jne
cli
test
aad
loope
sbb
adc
or
mov
xor
int3
clc
jmp
xchg
insb
xchg
ss
in
inc
and
inc
xchg
orb
fsubrs
mov
push
negl
pop
push
xchg
adc
mulb
arpl
pushf
shr
mov
lods
bound
cmp
jmp
mov
ret
inc
cmp
mov
ljmp
lahf
push
jns
dec
aam
and
int3
loope
dec
pop
cmp
ljmp
cltd
aaa
jmp
mov
dec
aaa
mov
xor
scas
test
cwtl
rclb
or
dec
sahf
das
sub
repz
arpl
decl
int3
ret
xor
add
loop
pop
mov
mov
push
mov
pop
nop
enter
lret
shlb
add
xor
dec
aas
adc
push
sti
rcl
mov
mov
test
xor
sahf
shr
fdivs
jmp
je
push
sbb
pop
lahf
shl
adc
xor
popf
add
push
hlt
aas
add
pop
jnp
into
xor
dec
or
inc
mov
jg
adc
xchg
mov
push
and
pop
or
mov
mov
daa
jae
call
sub
loope
stos
ljmp
repnz
je
ds
andb
push
repz
cmpsb
scas
fistps
incl
pushf
daa
xlat
push
pop
mov
dec
xor
notb
testb
ja
repnz
cmpsb
lcall
mov
and
movsb
mov
sub
push
loop
imul
fldln2
shr
adc
lret
push
loopne
scas
dec
movsl
jno
nop
hlt
jne
xchg
imul
daa
inc
insl
out
dec
je
push
popa
aaa
jbe
or
jl
jae
out
shlb
push
xor
fiaddl
test
fisubs
jg
lods
sub
jo
xchg
push
dec
or
mov
dec
jae
mov
repz
push
addb
stos
sbb
push
inc
pusha
ja
repz
mov
inc
in
inc
shl
pop
stos
in
frstor
inc
je
and
cmpl
and
sbb
push
stc
xor
ret
sub
mov
insb
scas
xor
fwait
nop
jmp
xor
repz
addr16
divb
mov
call
mov
rcll
adc
aaa
and
ss
dec
mov
movsl
test
std
leave
je
xor
or
or
mov
nop
pop
xor
pop
push
mov
insb
bound
lock
mov
pop
adc
cmc
shll
je
std
dec
popf
into
add
jle
inc
lea
lods
scas
popa
outsl
cld
xchg
and
adcl
or
mov
mov
or
push
imul
loope
outsb
push
sbb
cmp
push
jmp
jge
lret
insl
and
mov
and
scas
or
inc
fnsave
mov
jno
in
sub
insb
test
outsb
mov
sti
daa
mov
push
add
inc
in
dec
and
push
lods
and
sbb
xlat
int
dec
pop
mov
cwtl
cmp
jnp
pusha
cmp
arpl
pop
xchg
jno
lahf
je
xchg
jecxz
cld
fcomi
ja
xchg
push
pop
mov
xor
sub
pop
repz
push
xchg
cmp
pop
aad
sti
stc
bound
jno
sub
jbe
push
ljmp
sbb
push
sbbl
sub
aam
mov
adc
jbe
leave
push
and
or
in
inc
pop
pop
lahf
sub
xchg
das
movsl
push
ds
and
jge
mov
aad
xlat
jb
mov
push
leave
hlt
mov
filds
stc
sbb
hlt
mov
adc
adc
aad
daa
push
addl
loope
dec
and
jb
data16
cmp
cli
push
in
mov
movsl
fistpll
sbb
pop
ss
fildl
stos
inc
xor
xorl
dec
fadds
pop
ljmp
stos
xor
xchg
xor
mov
outsb
xor
call
insl
push
xor
inc
std
lret
xor
mov
lcall
adc
or
xchg
xchg
imul
mov
in
xchg
pop
sub
test
popf
jb
mov
inc
cmp
cmp
pop
and
out
sub
jo,pt
jae
inc
and
adc
es
and
jle
test
jecxz
mov
in
stos
outsl
icebp
ret
dec
jle
sub
fmul
mov
stos
inc
push
cwtl
in
movsl
aas
fimull
pop
dec
aam
out
pop
mov
cli
xor
lahf
jne
jbe
inc
sbb
mov
mov
push
fwait
loopne
int
adc
filds
mov
cmp
notb
movsb
ds
mov
adc
push
adc
flds
add
clc
imul
inc
test
lret
and
sub
mov
test
imul
ss
shll
nop
sub
push
adc
push
dec
imul
hlt
mov
in
mov
js
and
cwtl
mov
ds
mov
insb
lea
lahf
pop
lret
aad
fsubs
and
imul
jp
into
sbb
stos
adc
xor
pop
lds
fldcw
lea
mov
sub
inc
xchg
insb
movsb
jns
mov
and
jae
pop
jns
pushf
add
cmp
jmp
jnp
jmp
lcall
loopne
push
and
fsubl
cld
hlt
sbb
shll
xchg
movsb
sbb
into
sub
sbb
into
xchg
or
mov
or
lds
xchg
nop
pop
push
outsb
loop
stos
popa
jle
dec
pop
popa
sub
xchg
lods
xor
jp
pop
iret
sbb
loop
aas
data16
aam
inc
je
leave
inc
insl
sbb
push
xchg
xor
push
hlt
xchg
jg
and
inc
std
lahf
pop
stos
das
xchg
clc
repnz
mov
inc
mov
cmp
test
lods
xchg
inc
xorb
jle
pop
sbb
or
loop
ljmp
mov
pop
cmp
hlt
add
and
adc
xor
dec
repnz
cmc
xor
jmp
dec
xchg
jo
lcall
gs
push
cmp
outsl
sti
mov
repz
nop
repnz
xchg
cmp
push
mov
lret
out
test
mov
mov
pop
push
int3
fnstcw
mov
es
mov
sub
test
push
mov
mov
test
push
cmp
call
ret
enter
stc
lahf
in
mov
jp
cltd
and
cld
dec
pop
mov
loop
fwait
push
movsl
cmp
mov
xchg
scas
out
lcall
and
xchg
add
mov
cmp
lret
pop
and
test
sahf
and
pop
es
test
fs
mov
scas
add
or
hlt
aaa
pusha
dec
and
adc
jbe
sbb
sub
aaa
mov
je
push
or
pop
pop
lods
in
ja
imul
sbb
mov
xor
fs
test
dec
and
cmc
pushf
and
in
call
ja
stc
xchg
jnp
je
sbb
sbbb
and
dec
mov
es
pop
adc
out
sbb
push
push
ret
int3
inc
ret
pop
fisttpll
pop
push
out
xor
dec
outsb
cmpsl
sti
xchg
pushf
cmc
dec
jne
aad
pusha
es
inc
sti
test
adc
sub
lret
xor
push
loop
lods
in
and
outsb
mov
insl
jb
cmpsl
jbe
jno
xor
rcr
daa
fwait
in
dec
jg
jo
test
xchg
lds
xor
cwtl
cltd
push
dec
repnz
add
sub
mov
mov
and
xchg
repnz
xor
arpl
push
cmc
mov
pop
loope
fiadds
sub
push
jg
add
scas
out
cmp
adc
pop
jae
lcall
xchg
pop
xor
bnd
mov
int
jg
stc
cmp
pop
jo
int
test
nop
push
jge
mov
jge
les
cmpl
outsl
push
dec
cmp
ret
dec
push
sbb
pop
test
push
or
test
and
sbb
fistl
insb
fldenv
cli
nop
push
push
dec
xor
adc
std
jne
retw
pushf
mov
movsl
jne
popf
cmc
test
insb
mov
test
push
das
or
mov
mov
lret
jg
pop
push
xchg
cmpsb
pop
lods
dec
adc
ja
and
shll
dec
jbe
mov
out
lds
in
push
in
mov
pop
rep
ljmp
push
push
or
sub
or
add
into
nop
movsl
cmp
inc
pop
mov
xchg
jb
fs
pop
out
pop
push
xchg
incl
xor
jg
mov
add
stc
xchg
push
out
jne
pop
scas
ret
iret
movsb
cld
shrb
or
mov
ja
fisubs
inc
iret
rclb
xchg
adc
ret
cmpsl
int
sub
mov
into
jnp
adc
andb
inc
cmp
cmpsl
add
inc
xor
cmp
iret
daa
addb
call
and
mov
add
lret
sub
insb
js
xchg
cmp
frstor
lret
shll
adc
roll
jge
jg
test
mov
push
data16
fwait
icebp
jne
outsl
shll
cltd
cmpl
dec
shrb
ds
sbb
in
push
data16
adc
and
popa
clc
xlat
in
out
insl
adc
out
stc
jp
mov
or
out
popa
jl
jns
jo
sub
or
fsubrs
xchg
gs
fists
std
into
mov
push
outsb
jecxz
xchg
mov
cmp
push
pop
sbb
add
repz
push
xadd
push
xor
and
jb
lret
mov
stos
leave
adc
mov
inc
inc
cmc
inc
push
xchg
out
push
les
push
icebp
add
inc
data16
jne
dec
xchg
sub
dec
add
addr16
mov
adc
mov
or
in
adc
sbb
xor
scas
mov
out
pop
xor
aaa
es
ficoms
jnp
ss
mov
mov
sub
adc
xchg
hlt
orl
xor
rcll
fcmovnb
mov
out
xor
call
push
fcoml
pop
mov
loop
stos
adc
sub
sarl
mov
dec
jb
fsubl
fcompl
in
mov
lock
sbb
xchg
adc
cmp
dec
xchg
out
push
rorb
lds
cli
les
xchg
push
dec
nop
cs
inc
ja,pt
aam
adcb
jl
push
lods
das
test
mov
push
dec
mov
mov
adcl
test
movsb
in
ret
xchg
pop
lret
mov
lds
push
mov
shl
add
rcrl
xor
jge
sbb
aam
xchg
jl
inc
pop
fdiv
jmp
sbb
jmp
test
mov
fcoml
es
mov
jae
push
mov
lds
cltd
sti
test
sub
push
jne
cwtl
cmp
xchg
cld
push
das
mov
shrl
not
mov
cmpsl
lea
hlt
cli
sbb
pop
dec
cmp
sub
in
push
push
insl
push
dec
push
add
fiadds
inc
cmp
mov
sub
movsb
or
stos
adc
adc
pop
push
dec
add
inc
ljmp
adc
test
aam
and
push
lods
call
inc
sti
in
xchg
in
lcall
aaa
push
cmp
and
sub
jp
xor
mov
xchg
mov
imul
fadds
aad
cli
pushl
loopne
aaa
in
shlb
out
jl
xor
sub
jne
insl
or
mov
repnz
xor
pop
and
std
ret
jo
jmp
mull
mov
jecxz
dec
enter
adc
sbbb
stos
push
cmp
mov
loope
shr
add
add
and
repz
mov
add
push
movsl
mov
xchg
ljmp
lock
push
mov
dec
mov
cli
inc
adc
and
pushf
hlt
mov
outsb
subl
cwtl
scas
test
sbb
sbb
and
add
je
xchg
rcl
iret
aam
pop
add
nop
or
out
fidivrs
sub
cmc
fmulp
repz
push
pop
insl
shlb
addr16
lods
push
rclb
int3
movsl
aaa
cmp
cmp
mov
ret
mov
jno
sbb
dec
aas
xchg
out
sbb
in
cld
sub
pop
filds
sub
test
decb
xor
loopne
lret
mov
lea
dec
mov
mov
mov
mov
fnsave
lock
movsb
mov
enter
adc
hlt
xchg
dec
fs
cltd
mov
mov
pop
cltd
stc
fidivrl
dec
xor
xor
xor
sub
insb
push
dec
daa
dec
push
dec
rcrl
add
movsb
inc
popf
mov
bound
insb
sbb
cmp
push
lea
out
fdivrl
icebp
icebp
mov
aam
inc
cmpb
add
fcoml
cmpb
add
lret
loop
fs
xor
jne
addr16
cmp
test
mov
push
xor
test
iret
fadd
sbb
and
mov
add
movsl
inc
mov
fcos
dec
xchg
push
aas
sub
push
int3
jnp
sarb
sub
in
test
dec
lock
in
shrb
fucomp
in
push
inc
xchg
pushf
jno
pop
add
push
fwait
add
and
pushf
adc
mov
movsb
dec
int
call
adc
pop
pop
scas
lret
cmc
int3
jl
out
push
mov
jae
test
out
xchg
push
out
jg
and
dec
in
push
data16
shlb
gs
adc
aam
daa
adc
push
and
add
jb
pop
sbb
sub
cmpsb
pop
xor
mov
out
ret
cs
movsb
movsb
mov
stc
or
jge
sub
push
pusha
push
aaa
mov
pshufw
dec
sbb
add
pop
jo
and
scas
cmp
jno
dec
xchg
lods
lods
adc
sbb
pop
aas
inc
xchg
sub
xchg
sub
add
aad
ja
mov
sbb
xor
add
cmp
mov
lods
imul
scas
dec
repz
mov
inc
flds
mov
cld
dec
pop
rcr
jae
dec
aad
enter
jns
outsb
aaa
pop
dec
mov
pop
shll
jbe
out
add
fcmove
movl
cmp
pop
filds
inc
aaa
push
repz
pop
and
sarl
or
mov
rcl
push
rcl
jb
mov
mov
fs
clc
leave
xchg
ds
adc
add
jecxz
mov
or
and
aas
les
mov
nop
inc
imul
jmp
mov
adc
mov
ret
dec
rclb
add
inc
aas
or
js,pn
call
in
cmpb
push
jnp
xor
push
negb
in
push
icebp
pop
inc
lret
pop
jmp
test
inc
dec
out
leave
mov
fsts
jo
into
inc
aaa
fwait
pushf
pop
aam
sub
jae
cmpsl
int3
jle,pn
in
jo
or
add
mov
nop
cmp
inc
mov
sahf
lods
lods
jns
pop
inc
ljmp
sbb
outsb
lcall
pop
lds
jnp
fs
data16
daa
xor
pushf
lds
sub
lods
ficoms
out
stos
in
inc
xor
xchg
aam
ret
xor
enterw
sbbl
adc
fdivs
sub
pop
test
sbb
lahf
arpl
enter
xchg
mov
push
rcll
pop
sbb
out
cmp
clc
mov
sbb
and
subb
bound
ret
imul
sbb
cmp
addr16
dec
xchg
mov
insl
xor
pushf
and
bound
call
cmpsb
xchg
xor
add
dec
pop
addb
fwait
adc
mov
mov
arpl
test
mov
xchg
xchg
imul
cmp
loope
lock
pop
outsl
out
inc
rclb
rclb
test
mov
test
mov
adc
xor
add
jnp
icebp
jae
mov
dec
into
inc
jg
fidivl
sbb
xor
cltd
mov
cli
nop
push
inc
adc
fs
mov
cmp
xor
and
jns
loop
sbb
or
xor
xchg
fiadds
mov
shl
xchg
jl
cmp
mov
xor
mov
adc
addr16
sbb
loopne
ljmp
dec
lret
out
add
push
ret
pop
cmpsl
pushf
mov
jae
and
mov
sbb
and
cmp
dec
push
mov
sub
pop
lods
xor
push
jg
mov
scas
xlat
sbb
pop
orb
xchg
into
inc
fcoml
add
not
pop
lea
inc
mov
mov
sbb
test
and
movsb
fmull
mov
pop
mov
aam
sarb
jne
xchg
and
add
nop
fwait
push
and
shrl
jb
sub
into
add
or
adc
push
sti
or
hlt
jnp
mov
jns
pop
or
lahf
add
insb
lods
dec
mov
sahf
push
ret
shl
arpl
fsubp
in
xchg
xchg
fld
xor
insb
mov
stos
mov
decl
xchg
lcall
rcrl
push
sub
push
pop
stos
shrb
push
push
push
gs
out
lea
test
subb
push
adc
dec
jp
stos
sbb
lret
add
js
push
roll
mov
stos
pop
popa
mov
and
hlt
pop
fistl
aas
sub
mov
fidivl
jle
jnp
add
dec
js
jns
mov
dec
sub
hlt
lret
or
jecxz
test
xchg
mov
out
add
ficoms
mov
sub
test
popa
cmp
fs
hlt
aad
cmp
mov
leave
in
pop
out
inc
cwtl
or
mov
xor
mov
ret
push
mov
lock
mov
fimull
pop
sub
and
pop
cld
sub
mov
pop
add
and
jge
scas
in
jl
hlt
shlb
fmull
sbb
pushf
leave
repnz
mov
xchg
sub
out
push
shll
aas
add
jecxz
loop
sub
mov
jnp
mov
xchg
sub
cwtl
xchg
adc
stos
fisubl
mov
ret
inc
mov
int3
das
jp
add
add
inc
mov
je
push
xchg
in
aam
sarb
cmp
fwait
add
or
xchg
lcall
sbb
inc
mov
data16
adc
and
loope
jnp
pop
pushf
dec
cmp
mov
cwtl
das
sahf
mov
lea
inc
cwtl
or
test
lock
out
xor
js
out
cmp
fwait
rcrl
hlt
ljmp
push
jae
xchg
mov
jl
rcrb
jmp
imul
es
fadds
sahf
js
inc
and
mov
repz
mov
mov
mov
aaa
and
int
mov
xor
fs
bound
or
and
lcall
lock
test
add
bound
test
ror
mov
shll
test
lea
xlat
or
xor
pop
and
lods
push
jno
or
jg
or
xorl
xchg
and
pusha
sbb
subb
sbbb
xlat
fmull
stos
lods
adc
sbb
and
lds
jp
je
fnstsw
insl
jp
fnstcw
xchg
push
scas
sub
shll
ljmp
mov
mov
push
cmc
mov
loope
hlt
mov
lret
push
imul
mov
inc
in
pop
xor
inc
dec
cmpsb
push
mov
ja
in
lods
push
pop
and
les
or
es
pop
enter
test
pop
mov
ss
loop
jge
xor
mov
jge
lret
les
cltd
or
jne
js
mov
or
hlt
push
popf
ljmp
jae
stc
fs
pop
adc
mov
in
jge
xor
mov
add
cmp
je
mov
add
mov
mov
mov
mov
xor
mov
mov
add
cmp
jne
mov
mov
mov
jmp
pushl
pushl
jmp
mov
mov
cmp
jne
cmp
jne
push
push
jmp
mov
mov
cmp
jne
cmp
jne
push
push
pushl
pushl
pushl
pushl
call
pop
pop
pop
leave
ret
push
mov
and
adcl
sub
push
push
adcl
push
lea
push
movb
andl
call
movl
mov
cmp
movl
je
push
xorl
call
jmp
movl
mov
movl
cmp
movl
je
xor
jmp
mov
adcl
push
push
call
adcl
test
je
and
movl
adc
mov
mov
mov
add
movl
lea
mov
lea
mov
mov
mov
mov
sub
or
mov
mov
andl
mov
inc
mov
cmpl
jle
jmp
push
call
cmpl
jb
mov
subl
mov
andl
xor
movl
cmpl
je
cmpl
jb
jmp
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
add
movl
mov
mov
movl
cmp
movl
jne
or
mov
mov
movl
mov
xor
incl
add
mov
mov
xorl
xor
add
adcl
mov
and
mov
adcl
xor
add
incl
mov
andl
mov
inc
mov
cmpl
ja
jmp
push
call
cmpl
jb
mov
adcl
mov
mov
mov
mov
addl
mov
subl
mov
andl
mov
subl
mov
addl
mov
adcl
movl
add
mov
sbbl
xor
orl
add
movl
jmp
movl
mov
movl
cmp
jne
movl
mov
movl
cmp
jne
orl
push
orl
push
subl
call
xorl
test
je
mov
movl
cmp
movl
jne
movl
mov
movl
cmp
jne
adcl
push
addl
push
call
andl
test
je
sub
mov
mov
addl
xor
lea
andl
push
or
mov
xor
orl
lea
adcl
push
mov
pushl
sbbl
call
mov
mov
or
mov
mov
movl
cmpl
je
cmpl
jle
jmp
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
xor
lea
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jle
jmp
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
andl
xor
xor
add
andl
mov
inc
mov
cmpl
jg
jmp
push
push
call
cmpl
jb
mov
movl
xor
lea
movl
mov
movl
cmp
movl
jbe
not
mov
and
mov
mov
movl
cmpl
je
cmpl
jb
jmp
pushl
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
mov
mov
adc
mov
mov
sub
xor
movl
mov
movl
lea
mov
movl
lea
mov
movl
mov
cmp
movl
jne
mov
cmp
movl
jne
movl
push
sbbl
push
call
test
movl
je
mov
movl
cmp
jne
movl
mov
movl
cmp
jne
push
addl
push
call
test
je
movl
mov
cmp
jne
movl
mov
movl
cmp
movl
jne
xorl
push
xorl
push
adcl
call
test
je
movl
mov
cmp
movl
jne
movl
mov
movl
cmp
movl
jne
push
xorl
push
call
test
movl
je
movl
mov
movl
cmp
jne
mov
movl
cmp
movl
jne
push
xorl
push
call
addl
test
movl
je
mov
movl
cmp
jne
mov
cmp
jne
adcl
push
xorl
push
call
xorl
test
movl
je
movl
mov
movl
cmp
movl
jne
mov
movl
cmp
movl
jne
push
sbbl
push
call
adcl
test
movl
je
notl
mov
cmp
jne
mov
movl
cmp
movl
jne
orl
push
adcl
push
adcl
call
subl
test
je
movl
mov
cmp
jne
mov
movl
cmp
movl
jne
sbbl
push
xorl
push
orl
call
test
movl
je
movl
mov
cmp
jne
mov
movl
cmp
movl
jne
push
orl
push
adcl
call
andl
test
je
mov
cmp
movl
jne
movl
mov
cmp
jne
push
push
call
test
movl
je
mov
cmp
movl
jne
movl
mov
cmp
movl
jne
push
adcl
push
sbbl
call
subl
test
movl
je
mov
cmp
jne
mov
cmp
jne
push
push
call
test
je
mov
cmp
jne
mov
cmp
jne
push
push
call
test
je
mov
cmp
jne
mov
cmp
jne
push
push
call
test
je
mov
cmp
jne
mov
cmp
jne
push
push
call
test
je
mov
cmp
jne
mov
cmp
jne
push
push
call
test
je
mov
cmp
jne
mov
cmp
jne
push
push
call
test
je
mov
cmp
jne
mov
cmp
jne
push
push
call
test
je
mov
cmp
jne
mov
cmp
jne
push
push
call
test
je
mov
cmp
jne
mov
cmp
jne
push
push
call
test
je
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
pushl
mov
pushl
add
mov
mov
pushl
call
mov
mov
mov
jmp
mov
mov
xor
add
cmp
jne
mov
mov
mov
xor
add
cmp
jne
mov
push
push
xor
add
push
push
pushl
pushl
call
pushl
pushl
call
mov
xor
add
mov
mov
xor
add
mov
mov
test
je
movl
movl
movl
movl
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
andl
mov
add
adcl
mov
xor
mov
mov
xor
cmpl
mov
jne
cmp
je
mov
mov
cltd
add
adc
andl
xor
mov
mov
mov
xor
add
mov
adcl
xor
mov
mov
xor
mov
cmp
jne
mov
cmp
je
mov
add
mov
jmp
mov
mov
xor
mov
mov
mov
add
mov
mov
xor
add
xor
add
adc
xor
xor
xor
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
mov
mov
movl
cmpl
je
cmpl
jg
jmp
push
call
cmpl
jne
mov
dec
mov
xor
add
dec
mov
jmp
movl
xor
mov
sbb
push
or
mov
adcl
xor
sbb
mov
push
incl
mov
adcl
add
cmp
movl
je
mov
or
mov
mov
xor
xor
subl
add
xorl
add
movl
adc
adcl
xor
mov
push
mov
add
mov
xor
adcl
xor
adc
mov
xorl
add
movl
adc
xor
andl
xor
movl
cmp
jne
cmp
je
jmp
mov
mov
mov
xor
add
mov
imul
mov
xor
add
mov
mov
mov
mov
xor
xor
add
adc
lea
xor
xor
xor
mov
add
adc
xor
xor
cmp
jne
cmp
jne
mov
pop
pop
pop
leave
ret
push
mov
push
dec
movl
mov
sub
jmp
loope
jg
cmpsb
add
test
shlb
pop
pusha
addl
or
adc
push
adcl
adc
lock
loopne
ja
movzbl
inc
xchg
push
in
call
out
mov
jne
mov
leavew
pop
sbb
jp
xchg
mov
addr16
push
xchg
call
sarl
aam
repnz
cmpsb
scas
test
shr
sub
xor
test
jmp
push
xor
and
leave
lds
dec
mov
out
jg
adc
popl
inc
shll
xchg
shlb
cmpsl
and
cld
out
mov
popa
ss
inc
push
mov
scas
adc
fists
mov
adc
dec
out
test
out
mov
loope
and
clc
pop
jl
loopne
jo
inc
pop
inc
loope
xchg
push
jno
rdmsr
jge
pop
stos
ret
dec
test
push
pusha
jmp
mov
dec
das
int3
mov
and
mov
mov
adc
inc
mov
push
repz
lahf
cs
addr16
cmp
dec
test
inc
stc
out
ret
pop
gs
lods
adc
dec
pop
push
xchg
imul
add
out
es
das
jnp
in
sub
idivl
pop
push
int
or
mov
out
pop
out
jl
sbb
mov
mov
mov
xlat
roll
jns
in
inc
rcr
and
cmpsl
dec
fcoml
cmp
aas
add
jl
scas
pop
sar
gs
sbb
mov
or
movsb
jmp
or
lsl
mov
xchg
shrl
es
sbb
mov
jbe
adc
icebp
cmc
aas
mov
lds
fcmovnbe
in
lods
das
xchg
inc
mov
mov
inc
test
rorb
test
xchg
aas
clc
call
xchg
rcll
push
sbb
negb
jl
add
jo
addr16
fwait
in
psubq
les
daa
xchg
in
ja
adc
lds
cmp
es
push
mov
and
push
push
lahf
test
dec
hlt
push
in
lods
mov
mov
jle
push
xchg
pop
sbb
mov
dec
or
mov
sub
stc
enter
jae
frstor
mov
push
imul
adc
jbe
aam
xor
dec
sbb
bound
outsl
dec
icebp
push
jle
adc
arpl
nop
xchg
xchg
repnz
dec
fcoml
cmc
fwait
iret
sarb
jbe
pop
push
fadds
dec
cmp
pusha
adc
rcrl
loope
rorl
adc
push
inc
sbb
jae
xchg
xchg
sub
out
and
xor
or
add
sub
daa
and
stos
repnz
xorb
cmp
jl
pop
stos
popf
cmp
mov
mov
lahf
sbb
add
dec
movsb
mov
outsl
rcrb
enter
xlat
push
int3
les
popa
hlt
shrl
cmpl
mov
sbb
mov
adc
jmp
pop
push
jb
pushf
lret
data16
xlat
cmc
popa
ret
jae
mov
ds
fdivrl
cmp
cmpl
xor
popf
test
inc
sub
les
insl
das
roll
in
xchg
jo
subb
out
mov
daa
hlt
andl
add
cmpsb
imul
cmpsl
jecxz
fdivrp
test
mov
jb
lods
jno
jae
xchg
test
mov
or
cli
sub
ds
mov
push
lock
cmp
ds
jns
and
loope
jae
cmp
sub
xchg
pop
insl
mov
fimuls
pop
push
shl
imul
addr16
repnz
mov
jne
push
popf
xchg
sbb
mov
das
aam
dec
cmp
jns
js
jno
adc
cld
test
push
out
dec
loop
xor
loopne
repnz
out
jl
dec
out
fsub
jnp
hlt
inc
jb
xchg
mov
cli
inc
lret
loope
fwait
scas
dec
ja
sub
daa
aas
adc
mov
xor
icebp
imul
jl
ss
sti
pusha
mov
iret
xchg
ret
dec
and
int3
xchg
xchg
inc
fsubr
cmpsb
clc
ficomps
jnp
scas
cmovl
add
mov
pushf
es
jnp
cmp
ljmp
jb
stos
xchg
jmp
aad
icebp
dec
std
or
sub
pop
insl
out
push
sub
sbb
jae
xor
pop
sti
les
mov
xlat
enter
or
mov
enter
cmp
pop
fbstp
cld
sub
aaa
ds
inc
xchg
jmp
enter
pop
push
mov
or
push
push
ds
mov
add
mov
fcomi
outsl
movsb
lret
cmp
mov
cli
push
nop
xchg
sahf
sub
aad
hlt
dec
aad
mov
fmull
cs
or
jecxz
hlt
std
pop
mov
movsb
mov
sub
addr16
pop
xor
aas
jae
ss
sub
imull
pusha
bound
mov
mov
mov
int
adc
mov
dec
pushl
fisubrl
sbb
pop
imul
mov
imul
imul
sub
imul
repnz
testb
aas
push
xchg
cld
mov
aas
sub
lahf
loope
pop
push
dec
incb
cld
hlt
inc
loop
xchg
push
sbb
data16
push
adc
push
add
addb
xlat
fisubl
bound
adc
imul
mov
mov
pop
sbb
sbb
cmp
in
add
out
and
mov
push
pop
xchg
fxch
push
out
ds
dec
cmp
ds
aas
pop
sub
sbb
cld
dec
pop
fsubrp
push
xor
or
pop
jge
mov
and
into
inc
gs
push
mov
mov
cmp
ret
cld
inc
mov
repz
mov
jp
cmp
sub
pop
sub
push
subb
and
test
push
mov
or
test
or
jmp
loopne
xchg
into
mov
pop
inc
fistl
sub
repz
int3
rorl
push
js
xchg
mov
loopne
xchg
and
imul
cli
pop
add
aaa
mov
dec
mov
xor
push
movsl
shl
testl
insl
inc
dec
movsb
add
jbe
sti
lds
pop
push
repz
jecxz
dec
add
pusha
inc
enter
ljmp
enter
inc
icebp
ret
xchg
daa
xchg
nop
mov
outsl
incb
jecxz
inc
aas
mov
pop
call
inc
into
pop
loop
mov
outsb
out
addl
fdivrs
incl
push
jmp
mov
mov
pop
and
dec
jecxz
inc
mov
mov
stos
push
lock
lret
sbb
sarb
push
sub
push
or
pop
cmpsb
insb
out
jno
shlb
ss
pop
pop
fcompl
in
sbbb
loope
mov
cmp
sub
mov
mov
xchg
lods
mov
paddusw
mov
pop
clc
hlt
mov
pusha
xchg
inc
loop
dec
aas
jmp
cmp
fwait
and
test
insl
pop
pop
nop
adc
and
sbb
out
lds
mov
dec
jecxz,pn
lret
sub
arpl
ljmp
xchg
xor
xchg
inc
in
pop
inc
sar
ret
mov
sarl
sahf
outsl
sub
ret
out
inc
pop
mov
cwtl
inc
adc
hlt
aad
xchg
out
test
xor
sub
leave
aas
icebp
xchg
adc
sbb
xchg
test
aam
mulb
les
roll
xlat
dec
ljmp
in
cld
push
in
and
gs
mov
loopne
push
aas
clc
add
lcall
mov
std
xor
dec
mov
stc
fcoms
pop
arpl
and
pop
scas
pushf
aaa
cli
mov
and
rcrl
push
mov
jno
push
les
sbb
pop
stos
mov
and
cmp
test
ja
and
cmpsl
add
xchg
add
idiv
adc
js
in
mul
xchg
jl
out
gs
mov
adc
pushl
xchg
push
xchg
xchg
lods
js
iret
je
aad
sbb
add
mov
stos
xor
cs
std
test
xor
icebp
test
fdivrl
hlt
lds
fwait
push
xor
xor
push
cmp
jmp
adc
jg
dec
fstpl
push
lock
mov
das
or
xchg
ja
pop
std
arpl
outsl
push
fcmovbe
jecxz
aaa
nop
xchg
fisttpll
jae
sub
adc
pop
orl
mov
mov
inc
lahf
imul
ret
sub
adc
daa
xor
arpl
int
sub
inc
or
lahf
dec
call
cmp
jnp
dec
shlb
dec
and
and
popa
and
and
dec
out
mov
mov
bound
les
ret
ror
add
int
xlat
xchg
xorb
fidivs
adc
adc
cmp
sbb
add
jle
xchg
cmpb
hlt
adc
mov
push
dec
int
jp
and
in
loopne
aad
cltd
dec
xor
lcall
adc
cs
mov
movb
rol
xor
pop
outsl
fcomp
pushf
aaa
out
repz
xchg
imul
dec
jle
pop
outsb
xlat
or
insb
nop
cmp
inc
cltd
loope
adc
addr16
insl
or
leave
add
fs
shrl
leave
sbb
into
sub
xchg
mull
inc
push
test
mov
sub
les
leave
test
mov
add
push
divb
pop
icebp
lds
inc
bnd
sub
cwtl
cld
inc
add
lods
xor
cmpsl
or
xchg
push
and
or
push
inc
fstpt
pop
and
push
add
lods
pop
out
loope
fistl
push
push
mov
mov
lcall
outsl
or
andl
adc
add
movsb
jno
xor
test
imul
mov
ja
jno
mov
aam
loop
pop
jmp
into
cmp
pop
cmp
dec
add
ja
adc
aaa
sbb
xor
xor
sbb
loopne
fstpt
test
rcr
xor
jb
pop
dec
ficoms
jns
test
pop
cs
shll
int
mov
movsb
sub
xchg
lret
inc
pop
mov
shll
dec
outsl
sub
push
add
adc
mov
and
push
jnp
sub
or
mov
pop
shll
xchg
xor
xchg
mov
imul
ljmp
in
add
jne
sbb
push
stos
aad
ficoms
test
into
popf
dec
les
adc
fucomp
and
iret
mov
cli
xchg
xchg
call
lcall
and
and
imul
cmpsb
fisttpll
push
sub
popf
lcall
popf
xchg
gs
sbb
in
int3
mov
xlat
xchg
jecxz
and
xorb
subb
call
ror
mov
or
push
inc
jne
sbb
mov
movsb
cli
jnp
flds
pop
mov
cmp
lcall
sar
into
xlat
cmp
lods
das
into
mov
test
jno
clc
ficomps
out
nop
push
int
jns
mov
adc
xchg
mov
cmp
xchg
outsb
sub
lods
jno
mov
clc
insb
or
scas
rcll
sahf
add
cmp
adc
test
jne
popa
jne
cmp
mov
push
dec
dec
cmp
sub
push
fcmovnbe
add
sub
cmp
xor
repnz
mov
aam
inc
mov
sbb
and
jg
into
mov
faddp
sub
xchg
cmpsl
decl
sbb
out
adc
mov
call
jo
dec
sarl
out
push
ss
cmp
sub
leave
fdiv
icebp
pushf
aaa
jo
js
test
push
and
mov
add
pop
dec
mov
mov
sbbb
sarl
push
add
ficomps
outsl
or
data16
popf
das
aas
add
arpl
leave
dec
adc
ss
addl
movsl
insl
and
mov
dec
cli
jge
sub
or
hlt
iret
jecxz
cmp
fsts
leave
mov
or
cmp
jge
dec
stos
sub
ja
mov
test
imul
mov
jp
ds
push
addr16
add
out
cmp
xorb
fists
test
mov
jmp
jns
sub
gs
sbb
pop
outsl
in
fs
or
mov
add
adc
int3
push
add
lods
pop
inc
pop
mov
pushf
loopne
adcb
andl
jno
int3
xor
xchg
shl
subl
nop
adc
fwait
les
imul
xchg
lcall
imul
mov
stc
hlt
push
loopne
lret
imul
out
dec
sub
bnd
je
outsb
ja
sbb
xor
sbb
js
mov
pop
inc
js
cmp
cmpsb
ss
in
in
mov
sub
cmp
xchg
sbb
sub
mov
mov
test
jns
in
or
andl
mov
sbb
adc
mov
inc
inc
jo
inc
cld
rcr
pushf
or
add
pusha
pop
cmp
cmpsb
mov
inc
mov
test
inc
rcll
pop
dec
cs
dec
xchg
add
lods
add
mov
popa
scas
lds
out
das
lret
mov
inc
xor
mov
sub
cmpsl
push
mov
adc
imul
jp
jp
mov
shl
nop
xchg
stos
push
xchg
push
mov
jns
xlat
fcmovb
add
stos
sub
cli
aas
std
imul
push
xchg
xor
imul
popf
popa
xchg
pop
add
mov
subl
cli
xchg
cmpsl
imul
mov
add
push
movsl
ja
cli
add
and
js
xchg
dec
pop
arpl
iret
jno
xchg
xor
inc
jp
xor
dec
scas
push
lahf
xlat
icebp
loopne
inc
daa
xlat
mov
mov
ret
nop
maskmovq
scas
sub
or
inc
mov
adc
icebp
mov
dec
pop
lahf
or
cld
test
add
les
add
andl
addl
adc
int
push
or
sub
dec
add
add
inc
and
stos
addl
push
leave
adc
fnstsw
out
cmp
repz
enter
test
gs
aad
movsl
ret
test
popf
adc
or
mov
lock
inc
mov
pop
js
fisttpl
div
lahf
inc
fwait
pop
add
add
mov
jge
movsb
in
mov
xchg
jmp
xchg
pop
add
mov
addr16
stc
rol
out
aaa
xchg
mov
mov
nop
out
jp
xchg
mov
leave
mov
cwtl
mov
mov
movsb
mov
push
add
bound
add
ss
mov
in
pushf
jno
setae
mov
or
stc
test
sbb
in
mov
pop
dec
inc
mov
sti
test
jl
popf
std
arpl
pop
inc
iret
stc
scas
cs
cmp
mov
sbb
xchg
mov
mov
cmp
imul
lret
cwtl
loope
push
adc
imul
arpl
test
jo
cmp
mov
pop
xchg
sbb
fsubl
ja
das
push
fbld
add
pop
daa
lds
mov
mov
xchg
and
or
in
push
mov
bound
in
repnz
sub
inc
xchg
in
das
notb
mov
out
scas
sub
jae
hlt
out
xor
bound
or
mov
mov
dec
add
inc
jp
jno
test
mov
jne
cmpsl
or
add
dec
push
insl
imul
clc
les
dec
lock
or
fadd
xor
jbe
loop
cmp
fwait
push
ret
sub
xchg
loopne
test
mov
sbb
fidivl
pop
das
jg
push
add
xor
test
shlb
ljmp
shl
fs
xor
insb
mov
fs
test
sbb
test
mov
pop
inc
cmpsb
sub
shrd
mov
push
inc
stos
ret
cmp
in
pop
out
add
jnp
gs
out
adc
inc
push
cli
sahf
mov
cs
adc
adc
cltd
jl
jns
xlat
mov
adc
icebp
cmp
jl
mov
int
adc
mov
jnp
jbe
pop
cmp
and
inc
fwait
adcl
jmp
fisttpl
mov
mov
cmp
or
imull
mov
shl
iret
jo
je
adc
and
outsl
and
pop
xor
push
jg
leave
mov
daa
fdivp
icebp
sbb
pop
lret
or
addb
xchg
stos
sub
jnp
lahf
out
ja
stos
adc
inc
outsb
aam
imul
sbb
in
mov
and
stos
sub
dec
xorl
scas
mov
cwtl
stos
inc
test
outsl
jae
add
clc
arpl
adc
div
fwait
or
dec
xor
popa
sbb
shl
mov
test
or
insb
adc
in
push
ret
xchg
fs
movsb
cli
dec
mov
inc
xlat
cmp
je
push
pushf
push
add
sbb
cld
daa
add
pop
rcr
mov
mov
lock
sti
or
and
xchg
xchg
sbb
sti
xchg
and
dec
outsb
sub
push
lcall
icebp
push
mov
or
xchg
or
xor
loopne
movsl
mov
ret
xchg
enter
mov
inc
push
mov
ja
push
xchg
xchg
push
mov
lods
add
test
sbb
aad
daa
mov
jg
popa
cltd
enter
adc
leave
out
rcrl
mov
fisubs
push
push
push
pop
add
jo
sub
mov
outsb
fldl
cmp
shll
xor
inc
pop
xorb
popf
nop
adc
add
pusha
jecxz
push
je
sbb
cltd
sbb
xchg
aam
push
lods
push
and
rcrl
jbe
sbb
adc
outsl
dec
or
cmp
mov
sub
popf
cwtl
cmp
and
push
mov
ss
test
adc
jo
push
dec
jle
sbb
push
iret
mov
out
add
push
jne
jl
imull
ds
push
fisttpl
into
imul
sub
jo
mov
adc
mov
std
add
push
mov
lahf
arpl
push
xchg
inc
push
scas
cmp
mov
pop
push
jp
xchg
test
push
cmp
jle
mov
popa
inc
bound
mov
mov
xchg
mov
cmp
sbb
sti
mov
orl
lock
pop
xor
faddl
lret
sub
cmp
xor
imul
fisubrs
fidivs
wbinvd
imul
or
std
xchg
jae
aad
pop
mov
and
mov
or
xchg
hlt
push
dec
sti
xor
out
pusha
stc
push
popa
hlt
pop
arpl
in
push
scas
jae
ljmp
inc
ljmp
mov
xor
clc
jbe
mov
outsb
je
add
or
pushf
rcrb
repz
fidivrl
adc
pushl
mov
outsb
fldl
loopne,pn
sub
dec
scas
sub
pop
daa
scas
into
xchg
push
mov
xchg
xor
sbb
je
sarl
adc
sbb
dec
pop
fildll
mov
ja
dec
std
jne
rcrb
aad
mov
in
mov
jnp
jnp
in
cli
leave
out
pop
pop
push
push
xchg
pusha
daa
daa
dec
cmp
cs
push
sub
test
jecxz
xlat
scas
pop
in
pop
jmp
filds
push
push
lods
dec
cmp
lods
xor
dec
dec
cmc
ror
dec
pop
rorl
sub
aad
pop
repz
pusha
fcmovnbe
rcll
cmp
scas
pop
xchg
pop
push
outsl
mov
inc
test
pop
jp
sub
outsb
jae
lret
jl
out
arpl
mov
push
cmc
jle
into
pop
mov
push
movsl
add
cmpsl
xchg
pop
xlat
mov
cmpb
sbb
scas
js
fidivs
notl
pop
sbb
mov
push
loopne
fbstp
or
scas
loop
adcb
dec
in
inc
shlb
mov
mov
mov
and
push
das
push
aas
adc
shl
out
int
sub
jg
lods
push
dec
push
fwait
mov
xor
jne
imul
insb
jmp
lahf
lahf
das
fisttpll
test
fidivrs
outsl
xchg
in
push
push
fisttpll
push
test
testb
add
or
dec
dec
lock
xchg
shll
sub
and
jbe
sahf
std
pop
callw
xchg
xor
or
sbb
mov
pop
cltd
outsl
stos
mov
mov
jecxz
jecxz
pop
insb
fcomp
subb
mov
mov
push
test
mov
loope
nop
fwait
adc
lds
jmp
movsl
add
lds
xchg
pop
shlb
jmp
dec
adc
sub
and
outsb
test
js
repz
shlb
lods
fsubs
fisubl
mov
xor
push
lock
insb
pushf
sbb
jbe
out
cmpl
jns
das
cmc
xchg
call
and
sub
jbe
dec
aas
jle
sub
in
xchg
sub
xlat
push
xlat
test
cmp
sbb
add
outsl
ror
sti
add
cmp
jmp
cmp
imul
add
add
lret
or
aaa
xor
mov
test
dec
push
js
mov
adc
in
in
je
scas
fs
mov
sub
das
and
dec
xchg
mov
loopne
test
or
jnp
dec
lahf
xchg
push
mov
jns
jbe
dec
data16
cmpsl
es
mov
out
xor
jle
pop
push
or
sub
and
aas
aaa
test
dec
or
ljmp
mov
mov
fstpt
sbb
xor
lcall
daa
xchg
inc
xchg
jae
jle
jl
pop
mov
pop
cmp
imul
daa
aas
daa
inc
xor
xrelease
xor
mov
iret
popl
mov
fidivrl
lret
or
cmp
cmp
sti
jo
iret
outsb
inc
ljmp
pop
insl
mov
test
sub
or
jo
stos
jp
das
sbb
outsb
pop
lods
rolb
or
pusha
inc
ret
das
or
inc
movsl
int3
pop
scas
jbe
add
pop
and
mov
cmp
mov
and
pop
add
cmpsl
jecxz
push
stos
or
push
sti
dec
test
mov
sbbb
sbb
outsl
pop
inc
add
add
xor
xchg
or
cmp
push
inc
out
jecxz
sub
sub
stc
adc
pop
jge
shrl
adc
jge
loop
or
movsl
dec
mov
leave
es
pop
lods
pop
stc
cltd
hlt
js
fisubrs
stos
cmc
adc
sarl
or
sub
leave
into
sbb
fistps
data16
rcrb
cmp
jmp
out
call
pop
ss
push
xchg
adc
sahf
xor
adc
cld
mov
fildll
jge
cmp
xor
xlat
loopne
call
cmpsl
mov
in
dec
sbb
cli
push
and
pop
jp
lea
pushf
test
inc
mov
jne
mov
xor
in
pop
or
scas
xchg
or
xorb
mov
push
adc
out
inc
int
and
lahf
dec
das
and
lea
adc
shlb
enter
jbe
inc
dec
push
or
adc
gs
xor
out
fcompl
idivl
xchg
mov
push
stc
cmp
adc
es
jecxz
ret
xchg
push
clc
das
sbb
stos
pop
mov
sbb
mov
and
fildll
sbb
pop
fmull
mov
popa
test
jno
hlt
sbb
mov
cmp
stos
sub
xchg
or
sarb
cli
xchg
test
mov
into
adc
incb
fildl
negl
cld
xchg
xchg
push
shll
xchg
lods
outsb
rorl
or
scas
aas
outsb
out
int
xchg
sbb
and
xchg
stc
js
cmpsl
enter
test
add
test
icebp
fstps
sub
lret
loopne
mov
mov
sbb
mov
pop
sbb
icebp
test
mov
mov
popf
loope
data16
out
sbb
aaa
loop
mov
jno
push
jmp
sbb
movsl
mov
push
call
cs
gs
lahf
into
add
jl
faddl
or
pop
push
inc
bound
sub
adc
sub
lods
mov
push
mov
fnstsw
sub
popf
rcr
in
cmc
lcall
push
jle
jne
or
jge
movsl
mov
xchg
cmp
dec
dec
mov
lcall
xchg
or
push
daa
push
mov
cmpsl
add
sbb
xor
ss
testb
add
inc
out
pop
ss
sbb
ret
add
dec
loop
mov
xchg
cmp
pop
jae
mov
xchg
ret
mov
arpl
push
mov
cmp
mov
pop
pop
and
popa
out
testb
cmc
sbb
movsl
sbb
pop
xchg
xchg
aad
cmc
fcompl
int
or
stos
addr16
cmp
into
jmp
mov
push
jns
fidivrl
jge
dec
mov
add
jg
xchg
in
gs
inc
fildll
and
data16
cli
or
lods
push
negl
imul
push
jl,pn
push
shlb
mov
movsl
add
or
inc
dec
jae
xor
fdiv
mov
inc
ja
dec
es
pop
adc
repnz
shr
push
lret
pop
xchg
and
in
dec
xor
clc
inc
jl
inc
in
cmpsl
sti
ja
popf
aaa
fistpll
or
push
fdivrl
clc
add
hlt
mov
movsl
out
fsubl
jo
pop
cwtl
andb
mov
mov
inc
jno
add
das
inc
ret
sub
inc
cmp
int
stc
lahf
pop
mov
sbb
rcr
dec
jo
daa
jle
inc
aas
xor
rorb
jno
cmp
jnp
into
or
jbe
sti
les
jne
inc
imul
test
mov
cli
adc
loopne
jae
adc
jbe
mov
adc
ror
aaa
pop
out
shll
add
jb
xor
addb
pop
and
stc
cmp
push
jnp
or
xchg
pop
subl
cmpsl
bnd
push
adc
pop
idiv
fisttpl
cmp
pop
sbb
stos
adc
es
and
inc
lods
xor
dec
adc
lea
push
pop
cmc
adc
test
xchg
adc
rcll
out
push
push
pop
mov
cmpsb
repz
sub
ss
sbb
out
dec
jge
or
ficomps
and
int3
and
push
sub
inc
mov
cmp
lock
mov
das
stos
pop
mov
add
push
test
sbb
adc
cmp
fldenv
in
adc
int
into
jle
shl
push
in
jmp
test
xlat
hlt
jmp
cmc
pusha
in
into
mov
repz
sub
mov
xor
jg
inc
mov
cmp
or
test
jg
sub
or
jb
sbb
dec
mov
push
dec
sbb
adc
bound
xchg
aas
sub
pop
sbb
shlb
mov
inc
insl
cmpsb
ds
std
gs
movsb
adc
pop
lret
aas
test
imul
pop
and
push
out
xlat
cmpsl
nop
cmpsb
gs
aam
sbb
les
jns
jp
mov
mov
sbb
or
addr16
pop
stos
ja
inc
dec
jl
pop
dec
add
loopne
cmpsb
add
sub
loop
jmp
mov
adc
xchg
aas
lds
jnp
cwtl
pop
push
or
mov
mov
mov
push
mov
lret
test
bound
mov
aad
sbb
dec
mov
cld
dec
stos
shrd
scas
push
outsl
sbbb
xchg
or
out
repz
gs
or
inc
dec
sub
mov
popa
and
adc
movsl
or
push
cmc
xor
in
fwait
jmp
lcall
dec
ja
jo
ja
cltd
fildl
ss
dec
inc
mov
fwait
enter
jne
and
int3
fistpl
xor
lods
stc
ja
add
bound
ret
cmp
daa
push
or
push
and
shlb
push
push
xor
mov
dec
pop
loopne
sub
mov
ja
pop
pop
sub
pop
fidivs
mov
ret
and
xor
add
push
jo
inc
cmp
es
aam
sub
mov
cmc
mov
add
jp
nop
jae
idivb
imul
scas
cmp
loope
inc
fs
repz
int3
bound
dec
add
daa
inc
push
mov
scas
lahf
xor
lds
xor
pop
inc
loope
push
xchg
jle
scas
shl
loop
stos
inc
xor
popw
xchg
cmp
pushf
inc
es
mov
xor
dec
sbb
out
loopne
mov
push
inc
cmpsl
in
int3
adc
test
mov
dec
jbe
int3
aas
call
xchg
sub
sub
jmp
sbb
jl
push
xchg
jne
dec
fcoms
mov
jno
stos
pop
add
mov
jae
mov
clc
pusha
inc
or
xor
xorb
pop
dec
dec
cmp
sbb
mov
jp
dec
loop
popf
mov
mov
xchg
mov
movsl
dec
iret
push
into
shlb
adc
imul
adc
notb
sbbb
jecxz
inc
or
mov
xor
sub
mov
xor
cmp
movl
jne
mov
push
or
mov
add
sbbl
mov
sbbl
mov
mov
adc
mov
mov
adcl
xor
add
cmp
pop
je
mov
jmp
mov
xor
add
leave
ret
push
mov
sub
push
or
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jg
jmp
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jle
jmp
pushl
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
movl
push
adcl
mov
mov
movzbl
add
mov
mov
mov
sub
mov
xor
xor
mov
add
add
imul
mov
cmp
je
mov
mov
mov
xor
lea
mov
mov
mov
mov
xor
xor
add
add
imul
mov
cmp
je
mov
xor
mov
add
imul
add
mov
mov
jmp
mov
mov
xor
xor
add
add
imul
pop
pop
leave
ret
add
mov
add
add
add
add
pusha
inc
add
pusha
xor
add
add
add
inc
push
mov
in
adc
addl
pop
sbb
add
add
pop
inc
outsl
insb
fs
outsl
data16
jb
imul
push
arpl
jb
push
arpl
jae
add
or
add
push
mov
xchg
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
xor
lea
movzbl
xor
add
inc
mov
cmp
jb
xor
lea
movzbl
xor
add
inc
mov
cmp
jb
xor
lea
movzbl
xor
add
inc
mov
cmp
jb
lea
mov
mov
mov
push
mov
mov
mov
push
lea
mov
cmp
jne
lea
mov
mov
mov
add
mov
lea
mov
add
mov
mov
mov
mov
mov
lea
mov
add
mov
lea
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
lea
push
mov
xor
add
push
lea
push
mov
mov
movl
movl
pushl
mov
call
mov
mov
test
je
xorl
mov
mov
xor
cmp
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
movb
mov
mov
movb
mov
movb
mov
movb
mov
movb
mov
mov
movb
push
movb
mov
movb
movl
lea
pop
movzbl
xor
add
mov
inc
dec
jne
movl
lea
mov
mov
mov
mov
add
mov
mov
mov
mov
add
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
mov
mov
lea
mov
add
mov
lea
mov
mov
mov
mov
movzwl
mov
xor
add
xor
mov
mov
xor
movzwl
add
xor
xor
mov
mov
mov
mov
lea
lea
movl
mov
call
mov
mov
mov
xor
add
je
lea
push
mov
xor
add
push
lea
push
mov
push
call
mov
lea
lea
mov
call
mov
mov
pushl
pushl
pushl
pushl
pushl
pushl
pushl
call
test
je
add
pushl
lea
call
mov
mov
mov
xor
add
mov
jne
mov
mov
pushl
mov
call
jmp
mov
mov
add
mov
mov
decl
mov
mov
mov
lea
mov
mov
mov
mov
add
pop
pop
pop
leave
ret
push
push
push
push
mov
mov
add
push
cld
mov
add
push
mov
lods
xchg
push
mov
or
shl
not
push
mov
or
shl
not
push
add
mov
sub
sub
inc
push
push
push
push
push
push
sub
push
or
mov
shl
lea
mov
shr
rep
push
pop
call
loop
lea
lea
mov
mov
sub
and
mov
mov
call
jne
mov
and
shl
sub
neg
shr
pop
add
pop
lea
shl
cmp
pop
lea
push
push
mov
push
mov
jb
mov
sub
movzbl
mov
shl
mov
and
add
lea
call
mov
shr
and
cmp
mov
jne
cmp
jb
jmp
mov
call
inc
inc
sub
sub
cmp
jb
pop
inc
cmp
dec
mov
jb
inc
cmp
dec
mov
dec
jb
mov
dec
sub
push
jmp
mov
dec
call
jne
pop
pop
pop
pop
pop
pop
pushl
push
push
mov
mov
jmp
mov
dec
call
jne
mov
dec
call
jne
pop
cmp
mov
jb
mov
push
mov
sub
cmp
jb
lods
mov
stos
jmp
mov
call
mov
je
mov
call
mov
je
mov
mov
mov
mov
mov
mov
mov
mov
pop
pop
pop
mov
mov
add
push
push
cmp
mov
jb
add
push
mov
call
jne
mov
mov
shl
sub
push
pop
lea
jmp
mov
add
call
jne
mov
mov
shl
push
pop
push
pop
lea
jmp
mov
add
push
pop
mov
mov
sub
inc
mov
call
mov
sub
jb
add
cmpl
jae
addl
mov
cmp
jb
push
pop
mov
shl
sub
inc
push
pop
lea
mov
call
mov
sub
jb
mov
mov
cmp
jb
mov
andl
shr
orl
dec
cmp
jae
mov
sub
mov
shlb
add
shl
add
mov
jmp
sub
call
shr
shll
cmp
jb
incl
sub
dec
jne
mov
add
mov
shll
push
pop
sub
inc
mov
mov
call
test
je
or
shl
dec
jne
jmp
incl
mov
add
mov
mov
sub
cmp
ja
mov
sub
mov
lods
stos
cmp
jae
dec
jne
mov
movzbl
cmp
jb
call
sub
lea
mov
mov
sub
mov
mov
mov
sub
mov
leave
pop
pop
pop
ret
pop
pop
sub
inc
jmp
cmp
jb
ret
shl
push
mov
cmp
jae
mov
shl
lods
scas
sahf
or
pop
insb
add
arpl
sub
nop
cmp
sahf
pushf
mov
lods
mov
mov
js
mov
mov
sbb
test
push
sti
mov
mov
test
mov
lds
mov
mov
mov
mov
outsl
mov
nop
xor
xchg
mov
nop
xor
sub
fldenv
push
add
rolb
inc
ret
push
mov
sub
push
push
push
movl
movl
mov
mov
mov
mov
xor
mov
add
mov
mov
xor
add
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
movl
push
pop
mov
mov
push
pop
mov
mov
movl
movl
mov
xor
add
mov
mov
xor
add
mov
movl
movl
movl
lea
lea
call
decl
jne
decl
jne
decl
jne
movl
mov
xor
mov
add
mov
mov
andl
xor
add
mov
mov
mov
mov
mov
mov
mov
mov
lea
mov
mov
lea
mov
mov
pushl
lea
mov
call
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
add
mov
mov
lea
push
mov
mov
mov
add
push
pushl
push
call
pushl
xor
movl
movl
movl
movb
lea
stos
stos
stos
xor
movl
movl
movl
movb
lea
stos
stos
stos
mov
mov
mov
movl
movl
movw
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
call
push
mov
mov
pushl
call
test
jne
mov
mov
mov
add
mov
mov
mov
call
push
mov
call
test
jne
mov
mov
mov
add
mov
mov
mov
call
push
mov
call
mov
mov
xor
add
cmp
je
mov
xor
mov
sub
add
mov
cmp
ja
movl
pushl
mov
mov
mov
call
push
mov
mov
pushl
call
mov
mov
mov
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
mov
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
andl
mov
mov
and
add
push
call
test
je
mov
push
xor
pop
div
add
movzbl
push
call
test
jne
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
mov
jmp
andl
incl
cmpl
jb
mov
mov
xor
mov
add
lea
call
push
mov
mov
xor
add
lea
call
push
call
mov
xor
add
cmp
jne
movl
mov
mov
xor
lea
mov
mov
test
je
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
cmp
jbe
mov
mov
mov
cmp
jne
pushl
lea
push
call
mov
jmp
mov
mov
xor
add
xor
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
je
mov
xor
add
jmp
mov
mov
and
or
sub
add
mov
xor
lea
mov
cmp
jb
mov
mov
mov
movl
mov
mov
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
jmp
mov
mov
sub
mov
xor
add
xor
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
movl
mov
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
mov
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
push
mov
mov
xor
add
push
call
mov
mov
xor
add
cmp
je
mov
jmp
mov
xor
mov
mov
mov
xor
lea
xor
mov
sub
xor
cmp
jne
mov
mov
mov
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
mov
mov
mov
mov
xor
add
movl
movl
jmp
mov
mov
xor
mov
movsbl
xor
add
movzbl
cmp
jne
mov
xor
lea
xor
cmp
jne
jmp
mov
xor
add
mov
xor
add
cmp
je
mov
mov
movl
movl
movl
movl
mov
mov
mov
xor
add
push
mov
mov
xor
add
push
mov
xor
add
push
mov
xor
add
push
call
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
mov
pushl
xor
add
push
call
mov
xor
add
mov
cmp
je
mov
xor
add
cmp
je
movl
movl
mov
xor
sub
mov
mov
xor
sub
mov
mov
xor
sub
mov
andl
andl
lea
push
pushl
push
lea
push
mov
pushl
mov
add
push
push
call
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
push
call
mov
add
xor
cmp
mov
mov
mov
jne
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
mov
jmp
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
movl
mov
mov
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
jmp
mov
mov
sub
mov
xor
add
xor
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
movl
mov
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
pushl
mov
pushl
lea
push
mov
mov
pushl
mov
mov
pushl
pushl
pushl
call
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
xor
add
push
mov
xor
add
push
pushl
call
pop
pop
pop
leave
ret
push
mov
push
push
lea
mov
push
mov
mov
mov
mov
cmp
pop
jne
movb
movb
movb
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
mov
movb
movb
movb
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
movb
mov
movb
movb
leave
ret
push
mov
push
push
lea
mov
push
mov
mov
mov
mov
cmp
pop
jne
movb
movw
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
mov
movb
movb
movb
leave
ret
push
mov
call
mov
mov
movb
call
push
mov
movb
call
push
movb
call
movb
mov
jmp
push
mov
push
mov
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
movl
mov
movzwl
xor
add
pop
test
je
mov
movl
leave
ret
push
mov
sub
andl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
push
mov
mov
mov
mov
mov
push
mov
test
jne
pushl
mov
call
mov
mov
add
mov
mov
mov
mov
xor
mov
add
cmp
jne
mov
mov
mov
mov
mov
mov
xor
add
mov
mov
andl
xor
add
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
movl
pushl
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
lea
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
movl
pushl
mov
call
test
je
andl
cmpl
jbe
mov
mov
sub
mov
incl
mov
mov
inc
cmp
jb
mov
mov
add
mov
mov
add
sub
add
mov
mov
mov
movl
jmp
add
shr
mov
je
lea
mov
mov
mov
mov
movzwl
mov
and
mov
mov
shr
add
xor
cmp
jne
mov
add
mov
cmpl
je
mov
add
mov
mov
mov
mov
addl
decl
jne
mov
add
mov
cmp
jae
add
mov
mov
test
jne
mov
mov
movl
mov
mov
mov
xor
add
mov
lea
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
mov
call
mov
mov
add
mov
pushl
mov
pushl
pushl
call
mov
add
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jb
mov
mov
mov
lea
mov
add
cmp
jae
mov
mov
mov
sub
add
mov
mov
jmp
xor
pop
pop
pop
leave
ret
push
mov
sub
push
mov
mov
cmpl
je
test
je
test
je
mov
test
je
cmpl
je
cmp
je
mov
andl
mov
sub
add
movzwl
mov
movzwl
add
je
lea
push
mov
mov
push
test
je
mov
andl
and
add
movzwl
movzwl
add
je
lea
mov
test
je
mov
andl
and
add
movzwl
movzwl
add
je
lea
mov
mov
mov
test
je
mov
add
movzwl
movzwl
incl
addl
add
cmp
jb
movzwl
movzwl
mov
incl
add
add
mov
cmp
jb
mov
movzwl
movzwl
incl
add
add
mov
cmp
jb
pop
pop
xor
inc
jmp
xor
pop
leave
ret
push
mov
mov
mov
sub
push
xor
push
push
cmp
je
cmp
je
cmp
jne
xor
inc
jmp
mov
add
mov
mov
mov
mov
add
add
mov
cmp
ja
mov
mov
cmp
jbe
cmp
jae
movzwl
jmp
mov
lea
mov
test
je
add
mov
cmp
jbe
mov
mov
add
cmp
jae
mov
jmp
sub
mov
mov
test
je
mov
inc
mov
cmp
jb
jmp
xor
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
movl
mov
mov
mov
mov
mov
mov
push
mov
push
mov
movl
mov
mov
push
mov
xor
xor
add
add
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
je
add
mov
mov
xor
add
mov
mov
cmp
je
mov
mov
imul
xor
add
cmp
jne
mov
mov
imul
xor
add
cmp
je
mov
mov
mov
imul
add
mov
add
xor
mov
mov
mov
xor
add
xor
mov
mov
add
add
cmp
je
add
mov
mov
xor
add
mov
lea
mov
movl
mov
pushl
mov
call
mov
xor
add
mov
cmp
jne
mov
pushl
mov
call
mov
movl
movl
mov
xor
add
cmp
jne
mov
mov
xor
xor
lea
mov
mov
add
imul
push
call
mov
xor
add
cmp
jne
mov
xor
add
cmp
jbe
mov
xor
add
cmp
jne
mov
mov
xor
lea
mov
jmp
movl
movl
mov
xor
add
jmp
mov
xor
add
mov
mov
xor
add
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
mov
xor
add
cmp
je
mov
mov
xor
add
shr
cmp
je
mov
mov
mov
movzwl
push
pushl
call
jmp
mov
add
mov
mov
add
push
pushl
call
mov
mov
mov
xor
add
cmp
mov
jne
mov
xor
lea
mov
jmp
mov
xor
add
imul
mov
mov
mov
xor
lea
mov
mov
xor
add
cmp
jne
mov
mov
mov
sub
xor
jmp
mov
xor
add
cmp
mov
jne
mov
jmp
mov
xor
add
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
mov
mov
push
mov
mov
mov
mov
xor
mov
add
cmp
je
mov
mov
add
push
mov
movl
mov
mov
mov
xor
xor
add
cmp
je
mov
mov
add
mov
mov
sub
mov
xor
add
mov
cmp
je
mov
xor
add
mov
push
movl
jmp
mov
xor
lea
add
shr
cmp
jae
sub
lea
mov
movzwl
and
mov
mov
mov
sub
add
movzwl
shr
xor
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
cmp
jne
mov
mov
add
add
decl
jne
mov
add
mov
mov
mov
xor
cmp
jae
add
mov
mov
xor
add
mov
cmp
jne
pop
mov
pop
jmp
mov
xor
add
pop
leave
ret
push
mov
sub
movl
movl
mov
push
push
mov
xor
push
mov
add
mov
mov
xor
add
mov
mov
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
movl
mov
test
je
mov
test
je
mov
test
je
mov
mov
xor
add
cmp
jne
mov
xor
add
mov
mov
mov
mov
add
mov
mov
test
je
movl
mov
xor
add
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
cmp
jne
mov
lea
push
mov
xor
add
push
pushl
pushl
call
mov
mov
mov
sub
add
push
call
mov
mov
mov
mov
pushl
pushl
push
call
mov
mov
add
movzwl
lea
mov
mov
movzwl
xor
add
mov
cmp
je
mov
xor
add
mov
mov
movzwl
xor
sub
sub
cmp
ja
mov
add
mov
jmp
mov
mov
lea
mov
mov
test
je
not
and
add
mov
add
push
call
mov
mov
mov
xor
add
cmp
je
push
mov
add
mov
add
push
push
call
mov
mov
mov
add
xor
lea
mov
mov
mov
movzwl
xor
sub
mov
sub
mov
cmp
jbe
mov
mov
cmp
jne
mov
lea
push
mov
xor
add
push
mov
pushl
push
call
test
je
mov
mov
mov
xor
add
je
mov
xor
add
andl
mov
mov
lea
movl
movl
mov
mov
mov
movl
mov
mov
xor
mov
add
mov
incl
cmpl
mov
jb
mov
mov
mov
mov
mov
lea
lea
mov
mov
movl
mov
mov
movl
movl
movl
movl
movl
mov
movl
mov
movl
mov
movl
mov
movl
movl
xor
mov
xor
sub
mov
inc
cmp
jb
mov
lea
push
call
mov
lea
push
push
call
mov
lea
push
mov
pushl
mov
call
mov
xor
add
mov
mov
mov
xor
add
cmp
je
mov
jmp
mov
mov
mov
mov
cmp
je
mov
mov
cmp
jne
mov
mov
cmp
jne
mov
mov
mov
add
mov
mov
xor
add
mov
mov
push
push
pushl
call
test
je
pushl
mov
pushl
call
test
je
mov
mov
mov
call
test
je
push
pushl
call
test
je
mov
mov
cmp
jne
mov
lea
push
pushl
mov
pushl
push
call
mov
mov
mov
xor
add
je
mov
mov
movl
mov
pushl
xor
pushl
add
or
add
push
call
movl
jmp
mov
mov
add
call
mov
mov
mov
mov
movl
cmpl
jne
andl
mov
jmp
xor
pop
pop
pop
leave
ret
push
mov
movzwl
movzwl
push
push
xor
lea
test
je
mov
lea
cmp
jb
mov
add
add
cmp
jb
add
inc
cmp
jb
xor
pop
pop
pop
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
mov
xor
push
mov
mov
add
push
cmp
je
mov
mov
xor
add
cmp
je
mov
xor
add
mov
mov
xor
add
mov
mov
mov
mov
xor
mov
xor
add
add
sub
mov
jmp
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
mov
mov
je
cmp
je
mov
mov
xor
add
cmp
jb
mov
mov
xor
add
cmp
ja
movzwl
movzwl
add
mov
mov
mov
xor
add
cmp
jb
mov
mov
xor
add
cmp
ja
movzwl
movzwl
add
mov
mov
mov
cmp
jne
mov
mov
xor
lea
mov
mov
mov
xor
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
imul
mov
jmp
mov
mov
xor
lea
mov
mov
sub
xor
mov
mov
sub
xor
mov
mov
mov
xor
add
xor
add
imul
mov
movzwl
mov
mov
xor
add
xor
add
imul
mov
movzwl
sub
sub
xor
xor
cmp
jne
mov
mov
xor
add
xor
add
imul
mov
movzwl
mov
sub
xor
cmp
mov
je
mov
pop
xor
pop
add
pop
leave
ret
push
mov
push
mov
push
mov
sub
mov
xor
mov
movl
mov
cmp
je
push
push
movzwl
mov
mov
mov
cmp
jne
mov
lea
xor
mov
xor
mov
mov
sub
mov
xor
mov
cmp
jne
mov
pop
pop
cmp
je
xor
lea
pop
leave
ret
push
mov
push
push
push
movl
mov
call
mov
mov
sub
xor
cmp
je
mov
mov
mov
push
mov
mov
sub
mov
xor
mov
cmp
jne
mov
lea
xor
mov
xor
lea
mov
sub
xor
cmp
jne
mov
pop
cmp
je
xor
xor
mov
mov
pop
pop
leave
ret
push
mov
push
push
movl
mov
call
mov
mov
sub
mov
xor
mov
cmp
je
push
push
movzwl
mov
mov
mov
cmp
jne
mov
lea
xor
mov
xor
mov
mov
sub
mov
xor
mov
cmp
jne
cmpl
pop
pop
je
xor
inc
jmp
xor
pop
leave
ret
push
mov
push
mov
movzwl
push
lea
mov
push
xor
mov
mov
cmp
je
mov
sub
mov
jmp
mov
mov
add
movzwl
mov
add
xor
mov
cmp
jne
xor
pop
mov
mov
pop
leave
ret
push
mov
sub
movl
movl
mov
push
mov
xor
mov
add
mov
movl
movl
push
movl
jmp
mov
mov
sub
mov
xor
add
cmp
jbe
mov
add
mov
add
mov
mov
mov
mov
mov
jmp
mov
mov
sub
mov
xor
add
cmp
mov
jbe
add
mov
add
mov
mov
mov
jmp
mov
sub
mov
xor
add
cmp
mov
jbe
add
mov
add
mov
mov
mov
mov
xor
lea
mov
jmp
add
mov
add
mov
mov
incl
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jb
pop
pop
leave
ret
push
mov
sub
movl
push
mov
movl
mov
mov
xor
mov
add
cmp
je
push
push
mov
mov
xor
mov
sub
add
lea
xor
mov
mov
mov
xor
sub
xor
mov
mov
xor
add
cmp
jne
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
mov
mov
mov
push
push
mov
xor
mov
add
cmp
mov
jne
xor
add
jmp
mov
xor
add
cmp
jne
mov
jmp
lea
mov
mov
mov
mov
xor
add
mov
mov
push
call
mov
mov
mov
jmp
mov
sub
mov
mov
mov
call
mov
pushl
mov
call
mov
xor
add
cmp
jne
mov
call
mov
xor
add
push
pushl
mov
call
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
add
cmp
jne
mov
xor
add
pop
pop
pop
leave
ret
mov
mov
jmp
push
mov
mov
sub
cmpl
push
push
push
je
test
je
movzwl
mov
mov
xor
and
mov
xor
add
mov
andl
xor
push
pop
cmp
jae
lea
xor
movzwl
mov
lea
cmp
jne
movzwl
mov
cmp
jne
mov
movzwl
cmpb
je
mov
movzwl
movsbw
mov
sub
xor
cmp
je
push
pop
incl
mov
cmp
jb
jmp
incl
push
pop
mov
movzwl
cmpb
je
inc
cmp
jne
xor
pop
pop
pop
leave
ret
mov
add
xor
xor
cmp
sete
jmp
push
mov
sub
push
mov
mov
cmpl
jne
xor
jmp
pushl
push
pop
call
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
push
mov
mov
call
push
mov
pushl
call
mov
test
je
mov
push
push
mov
add
mov
mov
mov
mov
add
mov
mov
add
add
mov
mov
mov
cmp
ja
mov
xor
mov
cmp
jbe
jmp
mov
mov
movzwl
cmp
jae
cmp
jae
mov
mov
mov
mov
lea
add
add
sub
movl
mov
mov
cmpl
jne
mov
pushl
push
call
mov
test
je
mov
mov
mov
addl
decl
jne
mov
inc
mov
cmp
jb
pop
pop
pop
leave
ret
push
mov
mov
push
pushl
lea
mov
call
mov
mov
mov
xor
cmp
pop
setne
mov
pop
ret
mov
push
jmp
xor
add
mov
add
add
movzwl
mov
cmp
jne
xor
mov
mov
pop
ret
push
mov
mov
shl
add
jmp
xor
add
mov
inc
inc
mov
cmp
jne
movb
mov
add
pop
ret
push
mov
sub
movl
movl
mov
mov
movl
push
push
movl
mov
mov
mov
xor
mov
xor
add
add
imul
jmp
mov
mov
xor
xor
add
add
test
mov
mov
je
xor
xor
add
add
shr
mov
xor
add
xor
jmp
xor
xor
add
add
shr
mov
mov
xor
lea
mov
mov
xor
xor
sub
cmp
jbe
mov
pop
mov
mov
pop
leave
ret
push
mov
sub
push
mov
mov
lea
mov
mov
mov
push
mov
xor
push
mov
add
cmp
mov
je
mov
xor
add
cmp
je
mov
mov
mov
mov
movl
mov
lea
mov
mov
mov
mov
mov
xor
mov
sub
sub
mov
movl
jmp
mov
mov
xor
xor
lea
mov
xor
div
mov
mov
xor
xor
sub
cmp
jne
mov
mov
mov
mov
mov
xor
xor
add
add
cmp
jae
lea
mov
mov
xor
add
lea
mov
mov
cmp
jbe
addl
jmp
addl
mov
xor
inc
incl
add
cmp
jb
mov
cmpl
jne
xor
add
jmp
mov
xor
mov
sub
add
mov
xor
sub
ror
xor
mov
mov
mov
mov
mov
sub
xor
cmp
jne
mov
mov
xor
xor
sub
mov
sub
xor
mov
mov
xor
sub
sub
jmp
mov
xor
mov
sub
add
mov
mov
cmp
jne
mov
jmp
mov
xor
add
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
movl
push
movl
mov
push
mov
push
xor
mov
add
mov
movl
movl
movl
mov
mov
mov
xor
xor
add
add
imul
jmp
mov
sub
xor
mov
lea
call
mov
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
xor
sub
mov
cmp
jbe
mov
xor
add
mov
movl
mov
jmp
mov
mov
xor
add
shr
mov
mov
mov
mov
mov
mov
movzbl
xor
mov
mov
mov
xor
add
and
mov
mov
xor
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
pop
pop
xor
pop
leave
ret
push
mov
mov
mov
mov
mov
mov
sub
push
push
push
mov
xor
mov
add
cmp
jne
orl
jmp
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
sub
mov
mov
mov
mov
dec
test
mov
je
mov
mov
mov
dec
not
and
mov
mov
add
jmp
mov
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
xor
add
mov
mov
movl
movl
movl
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jae
mov
xor
add
mov
mov
add
mov
pushl
mov
mov
call
mov
movl
mov
xor
lea
add
push
call
mov
test
je
mov
xor
add
push
pushl
lea
push
call
mov
mov
mov
mov
sub
mov
mov
mov
mov
add
mov
cmp
jb
mov
mov
mov
add
mov
sub
jmp
push
pushl
lea
push
call
mov
mov
movl
movl
movl
lea
mov
lea
mov
lea
mov
lea
mov
mov
xor
add
mov
jmp
cmp
je
mov
xor
mov
add
mov
mov
xor
lea
mov
mov
mov
xor
add
cmp
jne
mov
xor
add
push
push
lea
push
call
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
lea
push
call
mov
cmp
je
mov
xor
add
mov
mov
xor
lea
xor
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
jne
mov
mov
xor
lea
jmp
push
pushl
lea
push
call
mov
mov
xor
add
cmp
je
mov
xor
add
push
push
lea
push
call
mov
add
mov
pushl
pushl
mov
add
push
call
mov
mov
xor
add
cmp
je
push
pushl
mov
add
push
call
mov
mov
add
mov
add
mov
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jb
mov
mov
mov
jmp
mov
mov
xor
xor
add
add
cmp
jne
mov
imul
mov
jmp
mov
xor
add
cmp
je
subl
jmp
andl
pop
pop
pop
leave
ret
push
mov
and
mov
sub
push
mov
push
push
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
mov
add
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
push
push
pushl
push
call
mov
mov
pushl
xor
add
mov
lea
push
push
pushl
pushl
pushl
call
mov
mov
xor
add
cmp
je
mov
mov
xor
add
imul
mov
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
pushl
pushl
push
pushl
pushl
pushl
call
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
mov
mov
movl
mov
xor
add
mov
mov
push
mov
pushl
lea
pushl
push
pushl
pushl
pushl
call
mov
mov
leave
ret
