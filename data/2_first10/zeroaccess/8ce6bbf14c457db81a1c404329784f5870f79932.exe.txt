push
mov
sub
mov
mov
mov
jmp
sarl
lcall
jle
jle
add
into
xlat
cmp
ror
pop
add
orps
rdpmc
xadd
adc
mov
push
out
mov
es
lods
fiadds
data16
outsl
or
pushf
js
inc
stos
push
sub
mov
stos
push
roll
jmp
mov
dec
out
inc
call
mov
and
jnp
ret
xchg
and
jmp
ret
lock
and
add
adc
xor
or
fisttpll
ds
or
fst
or
pop
fstps
jno
inc
dec
aaa
adc
sarl
dec
call
dec
sub
mov
fbstp
stos
mov
notl
loope
cli
popf
jg
rcr
mov
xor
das
movsb
movsb
xchg
pop
pop
mov
imul
testb
mov
cmpsl
xor
and
sbb
test
sbb
stos
adc
cmp
js
or
ret
push
lds
dec
and
imul
push
or
mov
add
cmp
sub
adc
fidivrl
sub
out
stos
xchg
xchg
and
mov
and
fidivl
repnz
mov
sbbb
cli
mov
sub
dec
fistl
add
shll
imul
sbb
and
clc
add
imul
cmpsl
mov
adc
add
add
sahf
repz
int3
aas
movb
push
fisubl
and
fidivrs
popa
xchg
test
andb
and
call
or
aam
mov
dec
mov
call
sti
push
cltd
in
jbe
adc
les
shrb
push
icebp
mov
sbb
sub
xchg
icebp
dec
adc
push
mov
ja
jae
jl
lods
xor
push
sahf
dec
sbb
divl
daa
mov
movl
movl
cmp
jne
or
mov
andl
push
sbb
mov
sbb
xor
movl
cmpl
je
cmpl
jne
push
push
push
push
call
xor
add
dec
mov
jmp
sub
mov
adc
jmp
or
xor
jno
inc
lds
in
or
jle
jl
jle
dec
mov
int3
lea
mov
lods
rcll
mov
dec
aad
xchg
cmp
push
mov
cmp
push
dec
pop
cmc
les
xchg
pop
push
xor
adc
call
lock
mov
addb
jg
mov
jg
iret
sbb
pop
and
js
xchg
jno
int3
xchg
sbb
cltd
in
sbb
and
fdivl
and
rolb
aam
jbe
mov
shrl
sbb
jb
xor
ds
out
xor
cmp
dec
mov
inc
jecxz
sbb
xor
xchg
aas
out
xchg
ja
cmp
sbb
sbb
aam
add
adc
adc
pusha
and
adc
movsl
shr
mov
lcall
or
ja
cmp
out
lret
shrl
sbb
fs
inc
xor
and
adc
subb
popf
jle
imul
repz
shll
xor
cmp
mov
cmpsb
ljmp
hlt
jae
push
lret
xchg
testb
sbb
push
enter
cmp
mov
mov
lods
inc
mov
addr16
iret
xor
outsl
out
lcall
or
cs
cmp
xchg
mov
leave
call
cmovo
inc
sbb
cmpsb
pop
in
bound
cs
ret
repnz
icebp
popf
push
fiaddl
adc
lcall
les
in
inc
jle
mov
pop
push
mov
xor
push
movd
inc
cmp
dec
xchg
orb
fnstcw
adc
cmp
out
push
jle
stos
ljmp
mov
push
mov
pop
jp
jbe
divb
bound
or
cmpsl
pusha
adc
xchg
push
mov
add
movl
cmpl
je
cmpl
jne
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
movzwl
sub
mov
movzwl
not
addl
and
xor
mov
movl
cmpl
je
cmpl
jne
push
pushl
call
mov
dec
mov
jmp
or
mov
sub
mov
mov
push
xor
or
xor
mov
orl
movzwl
orl
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
pushl
push
call
cmpl
jne
mov
inc
mov
jmp
dec
mov
or
mov
movl
andl
xor
or
inc
mov
cmpl
jne
call
cmpl
jb
movl
xor
or
sub
mov
xorl
mov
movzwl
xor
mov
lea
mov
mov
mov
lea
mov
mov
movl
mov
mov
xor
xor
xor
add
add
div
mov
cmp
je
movl
lea
mov
mov
mov
imul
mov
mov
cmp
je
mov
orl
jmp
mov
add
cmp
je
mov
andl
jmp
jmp
push
rcrb
popa
mov
xchg
inc
pushl
mov
jp
jle
jl
jle
into
jmp
mov
and
lods
out
sbb
mov
cmp
cmp
mov
mov
xchg
xchg
jnp
insl
cmpsb
adc
insl
out
cmp
pop
dec
mov
mov
mov
popf
fimull
cmp
fbld
add
mov
xchg
test
clc
pop
add
mov
flds
and
in
fmull
and
push
adc
jmp
imull
dec
xchg
dec
mov
adcl
mov
fwait
lret
popa
mov
xor
sbb
sub
enter
mov
loop
jns
addr16
and
inc
and
rorl
or
shll
sbb
sub
adc
fnsave
add
xor
je
sbb
xchg
adcl
out
or
cmpsb
rorl
xchg
sub
sbb
xlat
mov
mov
mov
clc
dec
popf
ror
lret
movsb
mov
out
mov
xor
mov
pushf
add
push
int
push
incb
shl
outsl
pop
adc
pop
add
popa
stos
fsubr
inc
xor
cmc
jae
dec
dec
jp
ljmp
call
js
adc
ret
popa
mov
rcl
adc
adc
clc
repnz
popl
mov
inc
mov
cmp
pop
mov
fisubs
xlat
dec
adc
add
cli
inc
mov
mov
aam
push
scas
push
stos
in
or
lret
pop
lret
loop
mov
sbb
jle
mov
cmp
jbe
pop
neg
scas
fistl
pop
aam
outsb
push
ja
cmp
cmp
xor
mov
and
sub
nop
ja
call
add
aas
jnp
adc
fwait
into
mov
sbb
dec
arpl
clc
aas
jp
inc
hlt
jmp
f2xm1
addr16
ja
icebp
jo
mov
pop
test
jle
add
add
dec
push
fwait
addr16
pusha
outsb
outsl
addb
ja
lock
ret
inc
jo
cwtl
int3
sbb
fadds
mov
sub
or
daa
adc
mov
jb
jae
nop
jns
and
loope
add
mov
sbb
sub
ret
mov
cwtl
cmp
fistps
fnsetpm(287
or
cmp
pop
pop
call
lahf
call
xchg
data16
jnp
cmp
cmovae
pop
cmp
cmpb
pop
lret
add
shrl
cltd
mov
clc
push
test
pop
fucom
lahf
xlat
mov
mov
push
stos
int
push
mov
cmovg
iret
lret
adcb
aaa
push
repnz
pop
icebp
mov
sbb
std
inc
sub
lcall
adc
test
into
sbb
pop
mov
add
mov
pop
fcompl
movsl
cld
sbb
pop
inc
test
bound
mov
mov
dec
call
dec
or
ret
cld
mov
je
and
jo
dec
mov
inc
fimuls
inc
xor
dec
das
pop
stc
and
jle
inc
or
adc
lods
cs
gs
aad
arpl
add
xchg
dec
xor
arpl
mov
test
inc
jae
aad
call
inc
sti
pop
sbbb
cmp
xchg
or
mov
outsl
dec
jp
repnz
dec
xchg
hlt
mov
lcall
push
test
stos
test
inc
add
arpl
inc
gs
push
call
arpl
or
mov
mov
mov
push
sbb
jb
outsl
ret
out
mov
add
std
adc
movb
lret
pop
mov
leave
lahf
jns
mov
adc
sub
or
mov
mov
mov
or
cmp
jmp
js
sub
mov
int
arpl
push
jle
add
adc
lock
pop
add
cmp
data16
repnz
test
testl
les
pop
adc
sti
sti
dec
fstps
cmp
and
lds
sub
insb
mov
scas
lock
inc
add
testl
sub
fnstsw
adc
sub
stos
clc
sbb
decl
pop
jo
sub
jl
shlb
in
lahf
arpl
enter
push
loop
sbb
cs
xor
adc
mov
adc
adc
mov
jno
fsubl
push
or
xor
mov
dec
cmpsb
adc
popf
push
or
cld
rcr
sub
jae
aam
ja
hlt
incb
sbb
or
cld
idivl
cmp
enter
imul
jp
rol
xorl
dec
mov
cmp
in
inc
and
stc
movsb
jp
cmp
cmp
push
scas
adc
sub
mov
push
fidivrs
stos
jae
xor
mov
and
dec
inc
insl
push
sub
jnp
test
out
sbb
push
int3
xchg
and
lahf
or
ret
fwait
shl
xchg
nop
xchg
xor
pop
sbb
mov
mov
add
mov
in
sbb
or
cmp
icebp
fsubl
data16
cwtl
in
in
mov
shll
adc
mov
mov
in
push
pop
aas
jne
bound
xchg
pop
fildl
fs
insl
cmpsb
rcr
ja
jmp
inc
lahf
rolb
movsl
lret
and
iret
stos
sti
adc
mov
lea
add
fldt
mov
stos
loope
jbe
fldln2
pop
mov
adc
lods
popl
adc
scas
push
cli
fmull
cmp
add
mov
jmp
std
jecxz
es
popa
popf
popa
push
out
inc
add
add
jle
jl
jle
fwait
lock
lret
imul
pop
inc
iret
cmpsl
xor
jge
xchg
cltd
mov
lret
pop
or
fiaddl
xchg
dec
xchg
jecxz
enter
and
outsb
iret
divb
pop
mov
sbb
sub
pop
push
int3
inc
lea
mov
outsb
outsb
xchg
rorl
sbb
out
and
push
clc
push
and
movsl
lods
lods
mov
movsb
sub
cmp
daa
jle
push
movsb
adc
adc
xchg
or
fildl
sbb
pop
sub
or
enter
jb
mov
sub
push
sti
hlt
fcompl
arpl
fildll
scas
sub
mov
pushl
aas
fcomp
lea
xchg
shll
xor
test
adc
int3
or
dec
rcrl
call
popa
sub
insb
scas
mov
or
mov
lret
ljmp
sbb
bound
rol
ficoml
pop
in
jp
lock
xor
int
lods
xor
pop
xchg
leave
out
dec
aam
pop
xchg
jl
add
fsubrs
jb
and
or
pop
repz
dec
mov
inc
out
mov
popa
fdivl
dec
add
add
ja
sbbb
inc
rorl
pop
mov
add
pop
mov
negb
cmpsb
or
pop
xchg
jmp
rcll
fldl
movsl
int3
dec
adc
push
mov
mov
jmp
mov
jmp
pop
add
mov
and
xchg
or
nop
sub
mov
adc
dec
pop
inc
xorb
jp
sub
cwtl
shrl
jge
out
test
mov
lods
cli
cmp
push
out
ret
jo
iret
inc
lcall
xchg
xchg
and
mov
cld
jl
ret
sub
orb
mov
cmp
je
fimull
movsl
gs
cli
push
es
mov
mov
xor
mov
mov
add
cmp
je
mov
xor
add
mov
mov
mov
mov
xor
mov
add
movzwl
xor
lea
add
mov
mov
mov
xor
add
imul
sub
mov
jmp
mov
mov
xor
cmp
je
mov
addl
jmp
mov
cmpl
jne
mov
xor
add
test
jne
xorl
jmp
pop
pop
pop
leave
ret
push
mov
sub
leave
ret
push
mov
push
xor
xor
sub
push
addl
jmp
cmp
push
imul
jle
fnstsw
nop
xchg
sbb
lcall
mov
push
sbb
sahf
inc
mov
ret
adc
xor
leave
mov
adc
push
mov
xchg
shll
int3
mov
je
mov
out
add
and
fldt
jbe
add
lods
fcoms
add
iret
iret
pusha
rcrl
mov
pusha
xadd
cmp
stc
sbb
add
dec
push
xchg
xchg
out
sbb
mov
jo
stos
int
ret
fldenv
es
push
push
xchg
dec
dec
int
xor
icebp
add
pop
xor
fnstsw
sahf
ss
enter
movsb
cmp
xor
in
or
rcll
pop
xchg
pop
sbb
wrmsr
mov
mov
dec
jbe
jl
test
xchg
xchg
adc
int
sub
sbb
push
mov
clc
jmp
mov
scas
adc
mov
mov
xlat
loop
pop
gs
in
rcr
push
stc
or
fstl
inc
mov
mov
sbb
scas
mov
cltd
adc
cmpsl
jecxz
pop
push
sti
loop
frstor
mov
rcrl
sti
je
sub
sbb
pop
in
jg
stos
dec
loop
mov
rol
loop
pop
loopne
adc
xchg
data16
sub
addl
jno
jae
loop
repz
ss
fcmovnb
mov
sbb
imul
jecxz
jno
mov
mov
inc
pusha
sahf
es
nop
cld
mov
out
xchg
push
mov
mov
rcll
xchg
sbb
mov
icebp
sbb
sahf
pop
in
sub
pop
lahf
mov
je
pop
fistpll
pop
sbb
ljmp
lret
test
add
push
orb
pop
mov
sub
pop
sbb
fstpl
ja
add
imul
sbb
push
movsbl
add
cltd
ficompl
sub
lea
pop
add
cmp
add
jecxz
xchg
inc
shll
test
add
xor
xchg
adc
pop
enter
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
pushl
pushl
call
cmpl
jne
mov
inc
mov
jmp
movl
cmpl
je
cmpl
jne
push
pushl
pushl
push
call
mov
dec
mov
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
cmpl
jne
xor
xor
inc
mov
jmp
mov
movl
jmp
inc
testl
aam
mov
test
jl
jle
aaa
jl
ds
rcrb
fcompp
ljmp
lahf
dec
loope
stos
lret
popf
pop
lods
cmp
adc
jmp
mov
lods
dec
xchg
out
cmp
shl
test
sub
push
pop
mov
pop
adc
aam
gs
mov
cmp
xor
or
lret
popf
roll
xor
pop
inc
pop
sub
dec
inc
cltd
ds
jns
dec
pop
cs
adc
ret
ret
dec
pop
inc
idivl
cmc
mov
div
mov
dec
inc
int
and
cmp
pop
test
sub
ret
mov
sbb
mov
in
insl
in
jo
jmp
pop
sub
xor
mov
fsubrs
test
mov
adc
mov
push
jecxz
pop
xor
and
mov
jge
xchg
jb,pt
xchg
lods
mov
jmp
ret
stc
push
xchg
sbb
jge
iret
inc
add
enter
pushf
mov
inc
jl
je
ljmp
xlat
and
sti
adc
sub
jb
jg
add
pop
loope
mov
jne
push
divb
add
mov
mov
fwait
xchg
dec
sbbb
ljmp
adc
lret
stos
orl
xchg
outsb
jns
scas
imul
xor
dec
lret
mov
cmpsl
push
or
mov
sti
adc
repz
pop
add
cmc
sti
mov
fld
push
and
out
scas
and
lahf
push
adc
mov
das
mov
jnp
mov
mov
ret
repnz
loop
lret
ret
push
aas
sbb
in
mov
mov
das
xchg
mov
pop
xchg
addl
sbb
test
data16
jle
or
inc
js
rclb
out
or
push
or
dec
add
jle
repnz
fiaddl
and
lcall
inc
fsts
fwait
cmpsb
push
sub
jmp
fimull
out
mov
fcompl
repnz
xor
ret
xchg
aas
data16
sbb
dec
add
icebp
adc
imul
pop
mov
push
mov
xor
mov
push
mov
add
cmp
je
mov
jmp
and
push
xchg
cs
mov
insl
movsb
sahf
jno
sbb
adc
jle
fnstsw
popf
loopne
pop
in
clc
dec
lret
ret
adc
mov
add
dec
fcomps
leave
shlb
shll
rcrl
xor
test
imul
mov
xorl
sub
adc
loopne
lods
inc
mov
in
jae
movsl
add
cmc
dec
lcall
repnz
hlt
dec
xor
lcall
andb
je
and
jnp
adc
lods
push
cmpsl
xor
gs
jp
push
addr16
jne
sub
cmpsl
xchg
mov
divb
mov
cs
repz
xchg
xor
pop
in
sub
aam
adc
sub
xchg
loope
xor
adc
xor
sub
sbb
xorb
add
adc
sub
dec
dec
xchg
mov
aaa
lods
xlat
into
popf
in
jp
aaa
sub
and
pop
fptan
push
enter
les
fstpl
sbb
and
popf
out
adc
cmp
divl
mov
lcall
push
jo
bnd
lock
in
push
push
scas
js
adc
xor
cmp
xor
mov
mov
mov
mov
shrb
jb
mov
arpl
jge
ljmp
inc
mov
lock
outsl
xchg
les
std
out
sub
ret
add
or
scas
scas
pop
aad
pop
mov
sahf
jge
add
nop
int3
jne
inc
loopne
into
cmp
cs
adc
cmp
adc
mov
into
cli
mov
mov
outsl
data16
mov
and
inc
mov
cmp
ret
int3
in
lret
inc
sub
xor
movb
sub
mov
inc
mov
push
gs
outsl
push
out
daa
adc
mov
push
pop
in
mov
lahf
insl
call
sbb
icebp
mov
dec
stc
mov
aaa
inc
push
xor
mov
pop
out
dec
popa
sti
shrl
popa
mov
and
jo
pop
add
cmp
push
dec
aas
add
add
filds
mov
pop
and
sarl
clc
add
xor
add
jmp
jl
fsubl
sbb
aas
cmpsl
push
in
push
fnstsw
loopne
sahf
jae
leave
or
cwtl
dec
cmp
int3
push
mov
mov
lret
sbb
sub
and
sub
scas
lret
lret
pop
hlt
push
out
lret
or
add
loope
mov
dec
shl
lods
or
pop
dec
lcall
push
gs
pop
call
cmp
and
out
aaa
loope
pop
imul
std
mov
pusha
jns
add
pop
cmp
jnp
xor
repnz
lret
xor
out
ret
mov
inc
push
mov
pop
in
inc
data16
jnp
stos
sbb
jno
inc
in
sarb
xor
aad
js
test
sub
mov
jbe
and
or
or
mov
sub
or
adc
aas
jp
je
push
add
sub
cmp
dec
push
inc
mov
or
cmp
pushf
ja
test
cmp
repz
addr16
jecxz
sbb
cmpsl
mov
leave
cmpsb
sbb
mov
aad
cmc
outsb
int3
out
dec
mov
xor
call
add
xchg
scas
out
je
xor
addr16
mov
mov
xor
xor
incb
jmp
jl
mov
and
mov
inc
jl
push
dec
sti
outsl
mov
pushf
sti
ficompl
push
sub
push
fwait
out
jg
out
xchg
sub
cmpsb
xor
sbb
jl
fdivrs
and
sahf
jno
mov
cwtl
push
pop
xchg
cmp
fcmovne
repz
and
fnstcw
jnp
movsb
fildll
cmpsl
popf
ffree
jmp
loope
in
psrlq
or
push
mov
out
cmp
cmp
fidivrl
clc
test
mov
or
push
shlb
xchg
in
sbbb
into
shll
push
mov
jnp
pusha
jle
imul
mov
imul
and
mov
or
loop
call
lcall
addl
ja
push
jmp
mov
mov
mov
xor
add
mov
imul
mov
xor
add
mov
mov
mov
xor
lea
mov
xor
mov
sub
add
cmp
jbe
pop
mov
pop
pop
leave
ret
push
mov
sub
mov
and
mov
movl
xor
mov
orl
add
not
movzwl
mov
or
movb
movzwl
adc
jmp
popa
test
mov
sub
addr16
scas
pop
or
pop
jl
jle
xchg
incl
pushf
mov
jmp
fldenv
xor
add
in
std
jmp
or
pop
pop
jbe
xchg
in
out
inc
mov
inc
push
pop
adc
insb
pop
mov
test
pop
repz
dec
mov
in
inc
aaa
xchg
cmp
push
pop
push
cltd
cmp
jb
sbb
pop
sbbb
jae
nop
inc
cmpsl
mov
int3
jecxz
js
jne
mulb
insb
imull
xchg
xor
out
jg
jns
pop
fldenv
sar
jne
xlat
or
cwtl
xchg
and
std
rcrb
lcall
int
inc
xchg
call
icebp
aad
pop
fldt
fwait
sbb
lds
loope
scas
dec
sub
lea
popa
jge
mov
in
adc
lods
inc
dec
cli
push
sub
add
das
mov
sbbl
sarl
mov
xor
xor
fists
push
repz
in
test
sbb
jecxz
ds
std
decl
ljmp
inc
pop
int
or
jl
ja
out
popf
sbb
adc
mov
scas
push
loopne
enter
aam
cli
iret
lods
movlps
inc
xor
jb
mov
aad
lods
cmp
cmp
andb
pop
sub
mov
mov
xchg
fucomp
pop
lock
lods
cs
jne
push
adc
hlt
mov
pop
dec
inc
mov
jl
cmp
cmp
dec
test
cmc
movlhps
sub
popf
dec
sub
ffreep
jle
test
aas
je
arpl
cmpsl
in
mov
shrl
ds
sbb
vcmpneqsd
xor
sbb
xchg
or
mov
push
call
adc
mov
mull
jae
enterw
push
xor
xchg
pop
shr
dec
mov
dec
xor
icebp
xchg
mov
push
enter
mov
insl
shrb
jg
fistl
mov
dec
cmpsb
inc
imull
cmp
lods
jb
rcr
adc
iret
push
dec
das
jne
mov
jne
sbb
iret
jge
sbb
xchg
fisubs
sub
bound
pushf
sub
subb
les
shll
dec
cmc
int
loope
pusha
mov
lea
add
aaa
cmpsl
fwait
test
xchg
and
je
loop
jmp
rcll
mov
xchg
xor
je
js
mov
mov
jl
daa
dec
dec
mov
call
xchg
cmp
inc
fcompl
testl
icebp
sti
lea
andl
mov
inc
mov
cmpl
jne
pushl
call
cmpl
jne
xor
add
inc
mov
cmpl
jb
mov
adc
mov
negl
mov
xor
jmp
sbb
sarb
repnz
jns
lret
mov
jl
jle
arpl
stos
daa
stc
loop
adc
xchg
outsb
dec
push
shl
xor
push
lods
pop
add
mov
inc
lods
dec
lret
lock
push
mov
jge
cld
jae
call
jb
test
and
or
cmc
cmp
call
ffree
mov
aam
sbbb
push
sub
sub
adc
ds
cmp
push
cs
mov
fwait
cli
push
gs
daa
gs
aas
sbb
addr16
movzwl
mov
push
sub
sub
sahf
pop
pop
xor
mov
inc
push
mov
mov
push
add
imul
sub
jne
mov
test
inc
add
into
inc
cmp
cmp
inc
or
aam
inc
mov
jbe
adc
mov
mov
dec
cmp
xchg
sub
jmp
jecxz
loop
and
enter
adc
inc
scas
cmp
cmp
jg
jecxz
cltd
mov
jnp
push
ret
inc
cmp
loope
icebp
xor
inc
lcall
gs
cmp
cmp
scas
sbb
cmpl
cmp
mov
hlt
xchg
test
lret
cmpl
test
lods
out
xor
ja
jnp
cmp
lahf
or
pop
mov
add
sub
inc
insl
pushf
mov
mov
dec
push
inc
pusha
adc
int
mov
add
dec
adc
imul
push
ljmp
adcl
xchg
sbb
je
xchg
fldcw
pop
sbbb
je
push
data16
iret
stc
sahf
loop
sbb
out
bound
out
and
push
idivl
jge
test
mov
pop
lret
jae
cld
ficompl
test
mov
mov
movsl
adcb
xor
fwait
icebp
dec
push
or
bound
adc
lods
movsb
and
or
push
inc
jge
sbb
mov
sbb
jp
cmp
pop
shr
cmpsl
sti
mov
push
sub
push
or
ja
out
divl
ss
out
jns
mov
lcall
xor
add
fsubp
mov
pushw
jecxz
cwtl
mov
pop
add
inc
jp
xor
out
pop
xor
fdivr
outsb
pushf
stos
inc
push
xchg
or
lcall
adc
cmp
addr16
xchg
into
mov
push
cmpl
imul
mov
aas
aad
adc
out
sub
mov
movl
movl
xor
or
adc
mov
not
mov
adcl
push
add
xor
mov
movl
add
movl
jmp
mov
movl
mov
inc
movl
cmp
movl
jb
and
mov
sbbl
mov
xor
addl
add
cmp
je
adcl
push
inc
push
mov
mov
sub
add
mov
andl
mov
xor
movzwl
xor
mov
mov
orl
add
addl
movzwl
sbbl
mov
and
mov
sbbl
movzwl
xor
decl
add
mov
mov
jmp
xchg
sbb
icebp
adc
mov
mov
jl
jle
mov
xchg
adc
jns
icebp
rorb
arpl
sbb
lret
adc
in
mov
push
xchg
dec
inc
sub
jecxz
push
lea
sbb
out
mov
dec
xor
mov
adc
mov
ljmp
addr16
out
jo
out
in
shll
rcrl
mov
into
imul
loope
mov
pop
mov
xor
jmp
jns
lcall
orl
addr16
and
xchg
cmp
aam
dec
mov
and
cmp
xor
mov
add
mov
cwtl
popa
add
mov
ret
adcl
aas
jmp
shll
jns
inc
pop
movsb
lcall
cmp
sbbb
adc
aad
xchg
xor
hlt
mov
incb
divl
xchg
mov
fimuls
mov
push
xchg
cwtl
jp
mov
mov
stc
lods
roll
and
add
jle
sahf
pop
and
or
jae
push
or
shl
sbb
hlt
push
fdivrl
das
fwait
mov
xchg
cmc
dec
int
test
mov
mov
mov
sub
fldenv
mov
add
mov
adc
mov
in
sub
xor
push
das
pop
adc
jmp
mov
shll
fcoml
pop
jno
data16
or
cltd
sbb
and
movb
cmp
insl
into
cmp
inc
and
lea
mov
xchg
pushl
mov
add
decl
rolb
lds
or
jge
sidtl
sti
sub
sahf
aad
mov
mov
xchg
lcall
imul
ja
inc
mov
push
jg
push
je
in
adc
stos
jl
add
rcrb
mov
rcll
leave
mov
add
and
or
bound
aam
dec
gs
jl
jp
movsl
aas
mov
sub
mov
sub
sub
xchg
xchg
xorl
outsb
and
inc
movsb
jo
cmp
mov
sub
js
in
pop
inc
fstp
push
xchg
daa
test
mov
lods
ljmp
divl
scas
ja
jno
stos
dec
imul
or
int3
lahf
call
push
mov
fdivs
xchg
pop
or
jp
mov
inc
cmp
jne
pop
pop
mov
mov
xor
add
mov
mov
xor
add
mov
jmp
pop
arpl
out
xchg
imul
xor
mov
jle
pop
jl
jle
mov
dec
sub
popa
inc
jo
push
xor
jp
bound
pop
aam
mov
mov
imul
lahf
xorb
outsb
sbb
ret
addr16
loop
sbb
test
aaa
mov
jg
mov
and
scas
and
push
inc
xor
mov
lock
in
in
fwait
in
cli
int
in
xchg
and
sbb
enter
in
mov
pop
int3
push
insl
and
clc
xchg
pushf
fwait
rclb
aas
inc
xor
mov
aas
mov
mov
push
sbb
sarl
xor
sbb
fistps
ret
jp
add
arpl
mov
xor
jecxz
int
pop
mov
and
inc
sub
or
jge
popa
mov
test
xchg
mov
inc
mov
adcb
lahf
mov
pop
rcl
aam
aad
repnz
adc
pop
inc
divb
xchg
or
push
xchg
mov
or
faddl
jmp
cmp
xchg
xchg
or
jl
aaa
mov
int
xor
jp
cmp
lock
or
mov
jno
fnstenv
xchg
inc
adc
lcall
push
test
addr16
add
xchg
add
push
xor
rcl
hlt
jne
jbe
jbe
out
dec
das
jae
lea
xchg
and
lods
dec
outsl
mov
aam
cmp
mov
pop
add
push
cmpb
adc
mov
and
call
out
mov
sub
xor
mov
mov
jecxz
pop
test
lds
pop
adc
loopne
andl
dec
mov
aam
pop
scas
loop
and
stos
adc
cld
cmp
dec
sahf
mov
cmp
jno
push
ret
mov
dec
sahf
xchg
f2xm1
inc
xchg
mov
ret
test
mov
les
cli
pop
mov
mov
data16
or
adc
adc
sarl
js
jp
daa
inc
loop
sbb
fucom
sbb
repz
cmc
popf
hlt
mov
xor
cmp
dec
mov
sub
cmp
js
sub
pusha
ja
sbb
pop
jo
lds
xchg
mov
mov
aas
loope
mov
aaa
or
cmp
sub
mov
pop
mov
lds
jg
pop
jnp
std
inc
mov
push
out
in
test
ss
mov
dec
jne
je
scas
imul
and
sub
cwtl
mov
mov
mov
cmp
je
mov
mov
mov
cmp
jne
mov
mov
movsbl
xor
add
cmp
je
movl
lea
mov
mov
addl
mov
mov
jmp
addr16
movsl
insl
jne
in
shl
out
jne
lret
jle
pop
jl
jle
leave
test
shlb
adc
popl
mov
xchg
cli
lea
and
or
mov
sbb
cltd
mov
add
add
sbb
cmp
ss
mov
dec
push
dec
inc
pop
cmp
daa
sbb
cwtl
mov
push
sbb
getsec
jnp
sub
mov
jl
or
and
xchg
pop
xchg
jg
sbbl
jmp
pop
push
fstl
sbb
jg
out
insl
xor
pop
sbb
mov
adc
cmp
pop
mov
stos
push
adc
mov
fsubrs
fdiv
icebp
jmp
orl
push
fwait
daa
testb
fldt
mov
loope
loopne
idivl
repz
xlat
mov
push
mov
mov
nop
cmc
in
jle
pop
js
jmp
or
aaa
mov
dec
push
int3
les
or
outsb
pusha
cmp
arpl
sub
adc
mov
add
out
roll
mov
std
and
sub
les
add
iret
dec
cld
pop
mov
and
aas
imul
sahf
mov
xor
adc
mov
aas
test
mov
or
pop
pop
mov
inc
push
in
inc
cmc
imul
mov
out
pushf
cmp
ret
cltd
mov
imul
mov
shll
aad
pop
subl
fmull
dec
inc
dec
hlt
jl
mov
jle
and
add
mull
pop
inc
and
lcall
jnp
shlb
mov
jns
add
and
or
lahf
test
test
je
cwtl
jg
lods
pop
xor
sub
fsubrl
jecxz
push
mov
lahf
pusha
mov
js
in
and
cld
adc
jo
inc
adc
sahf
stc
jno
mov
pop
jle
lock
mov
or
nop
add
sub
push
jge
push
add
xor
mov
add
mov
mov
jo
sub
cmpsb
jns
clc
xlat
sub
aam
dec
popa
jmp
mov
dec
mov
and
push
clc
test
shl
xor
test
inc
ljmp
and
or
sub
movsb
add
dec
int3
cld
bound
out
fdivrs
mov
mov
lahf
mov
cld
sbb
enter
sub
data16
push
mov
test
lret
je
adc
xor
and
enter
add
mov
push
sub
leave
xor
lea
mov
incl
jmp
mov
xor
mov
jmp
jnp
ljmp
cmp
add
sbb
pop
jl
jle
pop
call
cmp
push
loop
xorb
sub
xchg
push
cmp
vpaddd
inc
fstps
jl
sub
outsb
jge
lock
hlt
inc
pop
push
stos
in
and
ja
mov
iret
jmp
pop
addb
lahf
and
out
stos
scas
cmpsb
mov
push
leave
adc
pop
push
mov
in
rcl
mov
push
adc
add
jmp
jno
loop
cwtl
jg
out
out
cmp
into
andb
aaa
jp
inc
add
fisubrs
outsl
int
xchg
push
jbe
inc
sbb
gs
or
fimull
add
mov
mov
sbb
jg
jle
mov
jg
out
rol
adcl
insl
mov
stc
test
je
xor
lahf
push
push
cld
inc
ljmp
lsl
idivb
loope
fmulp
mov
ret
nop
or
cmp
mov
mov
rolb
out
repz
sub
out
fisubl
scas
inc
popa
pop
addr16
jb
mov
or
addb
loopne
pop
ss
shlb
ljmp
mov
lods
inc
adc
shlb
sarb
inc
sub
dec
into
aam
xchg
fwait
leave
outsl
xchg
stos
ljmp
and
adc
sbb
rep
sbb
jnp
dec
int
jmp
mov
cmpsl
cmp
adc
adc
add
xchg
lds
dec
sub
xchg
iret
cmp
mov
imul
inc
fadds
aas
mulb
test
cmpsb
xor
jl
push
inc
inc
cmpsl
mov
xchg
out
push
mov
repz
xor
xchg
push
pusha
jno
inc
loope
addr16
filds
es
jns
lcall
jne
sub
mov
add
daa
adc
lea
inc
push
adc
shlb
mov
sarl
mov
pushf
das
movsl
sub
sub
out
movsb
pushf
fldl
push
dec
js
lds
and
xchg
pop
mov
xchg
cmp
ss
fsub
out
aad
xchg
sub
add
aas
jns
aaa
mov
push
cmc
lret
mov
loopne
in
ret
or
mov
in
push
arpl
jnp
jo
lret
pop
es
icebp
stc
pop
fsubr
in
mul
cwtl
mov
out
push
cmp
sub
nop
cmp
sub
cmpsl
lcall
in
call
and
push
sub
pushf
jae
dec
in
sub
fdivl
xlat
or
mov
pop
leave
ret
push
mov
push
push
andl
mov
inc
mov
cmpl
jne
pushl
call
cmpl
jb
movl
cmpl
je
cmpl
jne
push
push
push
push
pushl
pushl
call
cmpl
jne
xor
xor
dec
mov
mov
dec
mov
jmp
and
movl
adc
movl
movzwl
xor
mov
sub
push
xor
mov
mov
mov
xor
xor
jmp
fiaddl
imul
dec
dec
jmp
jle
jl
jle
aaa
xor
mov
gs
sahf
and
clc
inc
or
lods
pop
mov
sarl
in
xor
lea
idivb
cmpsl
fnstcw
out
mov
add
and
adc
cmpsb
sbb
loopne
clc
or
mov
dec
subl
shlb
shlb
cmp
and
push
adc
or
mov
cs
xchg
cltd
dec
je
and
test
adc
jge
jle
movsb
sbb
incb
dec
xor
push
rorl
cli
cwtl
mov
jbe
lret
call
incl
sub
or
testb
xorb
loopne
push
imul
xchg
xor
leave
and
cmpsb
jl
aas
mov
mov
mov
imul
mov
dec
mov
subb
dec
cli
ss
ss
cmpsb
aas
xor
inc
push
push
mov
mov
int
in
add
pop
fldl
cmp
inc
cmc
sub
sarl
aam
add
shlb
or
dec
xchg
rcrb
hlt
dec
bound
dec
lock
out
pop
inc
fdivr
cwtl
mov
and
nop
and
hlt
in
dec
cli
std
jae
xchg
subb
push
sub
xor
gs
push
mov
out
scas
sub
in
mov
mov
adc
push
push
fidivrl
iret
loop
inc
adc
adc
cmp
and
xchg
push
cli
data16
mov
stos
xor
xchg
cmp
add
fildl
jl
sub
pop
push
push
push
sub
ljmp
jge
nop
loop
xchg
dec
nop
adc
cmp
mov
mov
xchg
cmp
pop
lret
js
jecxz
test
movsl
dec
ss
mov
stos
loope
jle
add
mov
mov
lahf
push
loopne
xor
xchg
int
repnz
xchg
loop
imul
sbb
cmp
dec
daa
sbb
mov
dec
sbb
test
std
push
fsubrl
ficoml
sahf
jmp
xchg
push
adc
push
inc
xchg
lds
mov
stc
adc
inc
cs
mov
jle
aaa
inc
enter
ljmp
xor
push
sbb
fstpl
pop
aad
ljmp
push
inc
daa
movsb
loop
mov
fildll
mov
xchg
repz
fbstp
repz
cmc
mov
add
adc
hlt
outsb
xchg
rcrl
inc
stos
shll
movsb
pop
add
push
xchg
sub
cwtl
xchg
fwait
lcall
gs
das
lret
fucomip
dec
cmpsl
test
sub
and
dec
jno
mov
repnz
add
add
imul
mov
cmp
jne
mov
mov
xor
xor
add
add
imul
jmp
mov
jmp
rclb
mov
mov
cli
pop
jl
shrl
jl
jle
lahf
jbe
sbb
dec
lret
lods
mov
cld
dec
pop
out
add
out
les
ret
pop
je
mov
das
lds
mov
dec
sbb
cmp
aam
and
pushf
loopne
sub
add
cmp
loopne
and
dec
and
out
cmp
in
inc
gs
sarl
jmp
ret
addr16
test
cli
lods
jae
sbb
cmp
scas
jg
mov
jnp
lret
push
push
outsb
fbld
jmp
aam
sub
xchg
add
pop
and
adc
xchg
popa
repz
notl
xchg
push
push
dec
mulb
adcb
mov
dec
movsb
out
adc
rorl
inc
adc
or
fidivrl
cmpsl
inc
rclb
fwait
test
sbb
cmp
test
xor
sbb
or
jbe
cld
shlb
add
push
and
pushf
movsb
and
and
es
sub
outsb
cmp
scas
pop
mov
add
enter
ja
sahf
outsb
jl
sbb
dec
movsb
sub
data16
mov
movsb
movsl
adc
jl
mov
lcall
fildll
sbb
mov
sub
repnz
std
mov
fildll
or
fsubs
cld
pop
push
add
aam
lret
addb
or
cmp
cwtl
xchg
cmp
outsb
xor
adcb
sarb
outsb
push
adc
gs
sbb
clc
inc
sbb
mov
or
sbb
addr16
add
push
xchg
xor
pop
xor
inc
add
push
std
add
adc
and
dec
cli
pop
cmp
xor
js
pop
je
mov
mov
mov
fidivl
shr
sub
pop
test
sub
and
cmp
fstpt
imul
inc
xchg
mov
add
push
pop
cmp
add
clc
jb
stos
fwait
rcrl
push
fld
int
test
xlat
push
shll
xchg
pop
add
sub
or
push
std
and
ljmp
dec
xor
dec
push
fildll
repz
shlb
rorl
mov
test
inc
push
pop
data16
pop
pop
loop
lock
loop
push
cmpsb
ret
xor
push
or
mov
fs
inc
loop
repz
push
lds
ja
push
mov
sbb
mov
mov
mov
mov
xor
xor
add
add
imul
mov
cmp
mov
je
xor
add
mov
imul
add
mov
mov
pop
leave
ret
push
mov
jmp
test
insl
mov
ret
into
imul
jle
mov
movsb
cmp
leave
jno
int3
out
pop
dec
test
in
jne
push
lds
repnz
dec
jae
lea
int
hlt
push
push
outsb
mov
pop
rol
and
add
mov
movl
push
js
mov
mov
bound
mov
fisttps
pushf
add
sti
or
stos
movsb
addr16
ss
jp
rolb
pop
leave
lahf
shll
adc
or
ljmp
push
inc
stc
inc
insl
inc
add
jl
jp
clc
jo
pop
aam
test
inc
mov
jmp
sbb
push
es
push
std
or
push
mov
xor
lret
cmp
mov
mov
lahf
test
xchg
or
dec
test
adc
nop
sbb
gs
add
ret
addr16
movsl
inc
dec
mov
insb
xchg
cltd
mov
jnp
icebp
enter
hlt
fstl
mov
fadds
int
popf
lret
pop
btc
stc
outsb
popa
out
int3
dec
xor
mov
pop
push
pop
sub
mov
inc
push
lcall
out
xchg
push
push
inc
daa
mov
sub
dec
fdivs
xchg
jmp
sbb
gs
xchg
dec
cmc
ficomps
ret
sbb
scas
xchg
push
sbb
push
rorb
dec
aaa
out
sbb
cmpsb
cmp
test
jl
insb
lds
lcall
fimuls
arpl
mov
scas
xchg
sub
sub
add
sub
mulb
sbb
imul
lea
pop
js
call
mov
loopne
jge
mov
cmc
js
js
test
aam
xchg
jmp
lds
cmp
insb
jnp
or
inc
adc
jmp
lret
jecxz
mov
add
add
and
mov
imul
loope
adc
sub
insb
mov
jge
loopne
or
mov
jbe
xorl
or
imul
xchg
cmp
cmp
mov
nop
xor
sbb
shlb
stos
mov
lods
push
mov
movsb
sub
enter
adc
dec
push
sbbl
adc
mov
and
or
outsb
popf
push
jbe
jo
dec
mov
inc
jle
cmp
loop
jns
add
inc
cld
cmp
rorb
bound
add
or
orl
xor
add
decl
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
cmpl
jne
xor
or
inc
mov
jmp
mov
sub
mov
xor
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jb
push
mov
mov
add
mov
jmp
fs
in
lret
popa
jno
mov
mov
lea
jle
lahf
jl
jle
sub
gs
sub
test
mov
mov
pushf
fidivrl
cmpsl
mov
movsb
dec
in
mov
jl
cmp
pop
jmp
xchg
push
inc
aaa
mov
ficoms
loope
sub
stc
xorb
cmc
cltd
test
or
ja
or
fcmove
test
fsubr
xchg
mov
xlat
inc
scas
pop
loop
popf
ficoms
sub
fistps
outsb
gs
pop
les
push
adc
cli
and
sbb
sbb
pop
in
jge
and
push
pop
mov
cmc
mov
push
adc
xchg
and
ret
cmpsl
test
mov
scas
push
xorb
adc
shrl
sti
daa
aaa
sti
add
cmpl
in
cmp
das
fnstenv
aaa
xrelease
jle
mov
std
into
pop
clc
movsb
lds
or
sbb
jno
clc
loopne
xchg
cld
jne
sbb
push
adc
bound
xchg
enter
jg
inc
popa
jne
sbb
xchg
adc
inc
inc
pusha
pop
push
repz
mov
pop
das
test
sbb
loop
adc
mov
sahf
xor
cli
out
scas
jae
add
adc
lock
add
repnz
les
push
pop
fwait
cmp
sti
xor
cmc
out
adc
lahf
ss
mov
cmp
push
int3
mov
sbb
in
repnz
sbb
in
xor
xor
xchg
adc
adc
fildll
cmp
subl
mov
push
mov
in
sbbl
aad
fdivrl
inc
aaa
jno
xchg
xchg
add
adc
testb
iret
dec
mov
mov
jg
mov
dec
dec
or
push
mov
in
mov
adc
inc
les
les
xor
int3
sub
bound
xchg
jns
pop
data16
aas
xor
mov
or
pop
mov
loopne
mov
mov
or
dec
ss
mov
pop
sub
xchg
clc
pop
outsb
mov
std
insb
pop
dec
push
clc
inc
iret
cmpsl
cmpsb
inc
stos
sbb
or
dec
jl
ja
push
negl
out
mov
jl
movsb
adc
xchg
ljmp
add
inc
inc
add
icebp
xor
xor
push
ds
js
mov
insb
push
xchg
sbb
adcb
mov
mov
mov
jmp
jl
mov
xchg
rcll
pop
adc
sub
jle
jl
jle
sbb
lds
out
testb
ja
sbb
and
mov
or
pop
jge
das
daa
bound
mov
jmp
xor
ss
stos
enter
add
rcrb
imul
mov
dec
pop
inc
nop
mov
repnz
inc
fadds
stos
repz
cmp
clc
or
and
add
xchg
lahf
test
cld
ja
repz
push
outsl
in
sub
sbb
ja
ss
aaa
stos
dec
dec
pop
jle
stos
stos
dec
mov
adc
dec
outsl
and
adc
orb
cmp
int3
cli
jnp
or
test
cmpsb
testb
or
leave
enter
add
dec
rol
and
das
stos
test
jbe
push
movsl
push
xor
mov
mov
dec
lahf
sbb
scas
mov
sbb
inc
sbb
into
imul
mov
inc
fidivs
and
mov
loope
mov
or
stc
xchg
sarb
popa
mov
icebp
mov
hlt
mov
ret
fs
mov
leave
pop
lock
in
inc
popf
jo
jne
dec
sub
or
cld
xor
sub
adc
mov
lahf
dec
dec
mov
sbb
push
pop
xchg
outsl
cmp
sahf
stc
bound
movsb
adc
adc
js
pop
repz
jnp
jmp
mov
mov
ret
out
int
ds
fisttpll
xchg
dec
out
cmpsl
inc
push
cs
inc
test
aam
add
aas
dec
stos
out
shll
jns
or
pop
mov
mov
mov
aam
popf
mov
ljmp
cmp
inc
ljmp
hlt
mov
rcrl
rcrl
test
stc
xchg
ds
mov
add
and
ljmp
fcmovbe
sub
xchg
sbb
test
sub
adc
pop
add
or
xor
gs
pop
mov
and
mov
jae
cmpsl
adc
cmp
mov
add
or
scas
cmpsb
lock
cmpsl
mov
cwtl
push
and
in
dec
sub
out
mov
xor
sub
push
xchg
mov
mov
mov
mov
outsb
bound
pop
push
ret
lea
bndldx
adc
sbb
jne
mov
mov
mov
xor
add
pop
leave
ret
push
mov
mov
xor
mov
div
mov
and
or
mov
pop
ret
push
mov
push
sbb
movl
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
pushl
pushl
push
call
jmp
andl
mov
inc
mov
cmpl
jne
pushl
call
cmpl
jb
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
and
pop
icebp
jae
push
lret
jmp
dec
sub
sbb
shrl
inc
test
scas
dec
icebp
in
std
hlt
bound
adc
pop
fcompl
stc
mov
or
xchg
jno
outsl
outsl
ret
lods
dec
mov
int
in
test
lea
lods
xor
lods
jl
pop
adcl
ljmp
mov
fcomps
in
or
std
xor
pop
scas
mov
lds
lock
in
dec
ret
push
aad
dec
add
cwtl
dec
jno
lcall
sbb
loop
pop
je
aas
clc
into
je
sahf
mov
xor
ror
sbb
jl
aam
push
xor
std
popf
xor
mov
popf
mov
mov
jl
pop
xchg
cmp
imulb
push
repnz
pop
jb
mov
inc
cmc
stc
subb
cs
aas
dec
fcmovu
cmp
mov
cltd
scas
and
mov
push
movsl
ja
cmc
lcall
mov
sbb
adcb
jmp
push
jns
loope
fwait
pop
ret
xchg
cmc
xor
lret
push
out
lea
rclb
ds
movsb
push
mov
sbb
sub
roll
cs
mov
nop
xchg
mov
xor
aam
imul
jecxz
mov
and
fdivrl
ror
sub
push
jl
mov
out
mov
push
sarb
inc
sub
inc
or
mov
mov
iret
mov
and
push
lds
mov
push
lea
inc
fcoms
stos
sti
imul
and
int3
loope
jle
jg
sub
outsb
leave
pop
test
mov
scas
popl
mov
inc
test
pop
push
jmp
pop
jnp
ret
imul
cli
push
or
jns
test
outsl
mov
dec
fistpl
cmpsl
xor
pusha
jmp
sub
mov
mov
mov
mov
mov
test
mov
jne
jmp
sbb
sbb
insl
dec
jne
jbe
jle
sbb
cld
mov
jno
or
inc
jecxz
inc
setns
xlat
cmp
cmp
fdivs
imul
mov
sub
inc
movsl
mov
push
mov
mov
fisubl
sbb
daa
pop
gs
dec
stos
test
in
mov
xchg
xchg
dec
stos
out
hlt
fsubl
sahf
mov
or
mov
gs
push
and
dec
das
pop
jecxz
cmc
cmp
dec
mov
lods
roll
xchg
sti
adc
ds
and
push
repz
mov
lcall
add
out
mov
lock
lcall
mov
repnz
mov
cmpsl
jo
sub
or
inc
pop
pop
mov
xchg
divb
insl
mov
dec
jb
shrl
jmp
lods
aaa
std
add
pop
data16
dec
jb
mov
mov
leave
fcoml
xor
in
flds
mov
stos
imulb
cmp
mov
and
sub
lahf
sahf
sahf
jae
push
std
mov
cltd
or
outsb
sub
mov
scas
rcr
mov
call
add
test
sbb
pop
dec
xlat
bound
push
subl
cmp
mov
or
cltd
sub
addr16
adc
lret
cwtl
mov
mov
cltd
sub
jno
arpl
test
sub
lods
das
xor
xchg
test
pop
mov
and
fists
mov
shll
and
addr16
aad
in
iret
pop
lahf
fsubrs
dec
xchg
movsl
push
or
ret
shlb
xchg
lcall
scas
push
bound
imul
iret
cmp
cmp
lret
sub
mov
cmpl
mov
xor
loope
mulb
movsb
bound
add
leave
ret
push
mov
sub
mov
subl
mov
xor
mov
mov
orl
movl
movl
mov
jmp
sbb
leave
in
icebp
xor
out
in
jmp
test
jge
jle
add
sbb
push
test
mov
mov
jbe
or
dec
mov
and
inc
into
sti
imul
rorl
leave
xor
mov
dec
dec
cwtl
dec
ficoml
mov
pop
loop,pt
js
pusha
cld
lea
mov
push
sub
xchg
arpl
jae
cmp
cli
fisubs
sbb
rorl
jns
push
cmp
adc
pop
lret
xor
push
or
sarb
cmpb
push
mov
mov
lahf
add
in
sbb
push
clc
and
sub
lea
jne
leave
pop
push
out
movsl
and
or
push
sarl
dec
add
pop
fisubrl
sub
arpl
shll
mov
lea
into
stc
imul
push
jg
movsb
adc
dec
xor
lods
stc
leave
inc
adc
cmp
mov
shll
mov
dec
jo
and
mov
sti
jp
out
jb
pop
orl
dec
jb
cmp
dec
dec
jmp
insb
hlt
sbb
movsb
pop
cli
inc
sub
inc
shlb
icebp
xchg
jmp
xorl
sbbl
insl
dec
mov
out
mov
sub
mov
stos
sarl
cmp
pop
mov
daa
and
jno
ja
orps
and
lret
push
std
mov
addr16
daa
adc
xchg
popf
mov
jo
jmp
adcl
in
sub
mov
mov
lods
mov
sub
sbb
sahf
push
int
mov
and
dec
out
mov
dec
dec
push
sbb
movsl
fadds
add
or
mov
shll
pop
xor
aaa
in
fstp
and
lret
inc
and
shlb
das
sbb
push
adc
test
cmpsl
xchg
bound
and
and
cmp
mov
xlat
cmp
data16
sub
add
mov
ss
out
test
or
mov
pop
mov
adc
dec
dec
jle
xchg
or
es
mov
and
cli
xchg
test
out
mov
test
mov
in
into
popa
push
pop
call
sub
sub
scas
jno
mov
fnstcw
ja,pn
xchg
sbb
fcom
nop
or
popl
loop
arpl
scas
sbb
addr16
loope
aas
aam
jecxz
ret
int3
pop
movsb
dec
jnp
jae
xor
pushl
in
outsl
pop
pop
dec
mov
lret
and
push
xchg
cmc
xchg
mov
pushf
mov
xchg
out
dec
jnp
dec
push
dec
mov
or
aam
in
repz
in
inc
sbb
mov
lods
adc
rcrl
inc
ljmp
push
xchg
cltd
jns
aam
jb
adc
push
inc
add
inc
add
mov
xor
movzbl
sub
mov
sbbl
add
incl
mov
xor
xor
xor
movl
mov
adc
movl
movl
cmpl
je
cmpl
jne
pushl
push
pushl
push
call
xor
add
dec
mov
jmp
xor
movl
addl
jmp
movsb
fsubrs
jmp
out
inc
aas
int3
xor
sub
jle
push
es
jle
pop
inc
jge
das
rorb
jecxz
loope
mull
test
hlt
mov
into
or
fwait
push
cmpsb
addr16
aam
int
int3
std
add
adc
push
sbb
into
or
insl
sbb
inc
data16
mov
nop
testb
xor
xlat
sub
or
or
lret
pop
xchg
pusha
lahf
push
inc
push
out
push
xor
xchg
dec
mov
mov
push
jno
sub
scas
add
push
ja
or
push
adc
pop
mov
movsb
test
fmuls
mul
nop
lret
adc
jne
adc
mov
jle
push
gs
sbb
ljmp
and
inc
out
jge,pt
adc
dec
in
sub
loop
or
out
scas
insl
jne
lret
lods
inc
xor
daa
push
fcompl
imul
stos
repnz
nop
push
shrl
adc
outsb
test
out
xor
adc
xchg
mov
jns
pushf
xchg
cld
xchg
pop
sbb
lret
xchg
neg
push
jmp
mov
xor
xor
jle
sub
or
in
mov
sub
push
hlt
cwtl
xchg
sub
mov
div
sub
lahf
dec
cmp
movsl
loopne
mov
flds
adc
dec
add
cld
add
test
push
pop
loopne
add
popa
imull
jl
fidivl
loope
cmp
cli
or
push
xor
jecxz
popa
addr16
fsubr
es
pop
push
sbb
jae
inc
xlat
out
repz
stc
ret
inc
jns
fimuls
orl
pop
aad
jns
adc
inc
pusha
in
insl
gs
nop
int3
pop
add
push
test
daa
mov
inc
mov
add
lods
aaa
xchg
mov
cmp
daa
call
lcall
mov
ss
mov
mov
mov
and
aas
imul
add
cmp
sub
lret
popa
jl
mov
rcr
insb
leave
add
ja
pop
aaa
and
push
pop
jle
fnstenv
dec
bound
loop
test
add
lret
sbb
int3
and
inc
pop
jle
jbe
ja
mov
pop
fwait
cmp
mov
xor
aaa
in
in
shl
cltd
push
sbb
adc
test
cmp
fldl2e
mov
stos
mov
loop
arpl
and
cwtl
xor
pop
dec
dec
ljmp
mov
repnz
arpl
in
fincstp
lods
adc
add
add
out
fwait
push
push
inc
jecxz
push
add
mov
dec
out
in
mov
iret
orb
call
xchg
push
cmp
rcll
leave
test
push
sahf
push
push
jb
sbb
inc
insl
xchg
sbb
movl
sub
mov
xor
jmp
aaa
insl
pop
lret
repz
psrlq
int
jae
xchg
jle
sub
jle
mov
mov
insb
mov
adc
aas
bound
add
sbb
mov
out
ja
mov
mov
mov
mov
jb
push
mov
aam
lods
jmp
lds
in
mov
shl
cmp
aam
hlt
das
inc
out
fldl2t
jae
movsb
cwtl
jp
dec
mov
xlat
xchg
xchg
jle
sbb
out
pushf
icebp
or
adc
idivb
in
repz
fwait
xchg
bound
jecxz
loopne,pn
dec
xor
lock
or
mov
inc
test
xor
icebp
xlat
cmp
ja
in
sub
dec
lds
aaa
push
pop
mov
mov
js
repz
loop
push
insl
push
nop
mov
or
jmp
in
pop
insb
shl
lret
loop
repz
fisubl
lahf
inc
imul
and
push
sbb
imul
or
mov
imul
pop
popa
mov
jne
inc
enter
ljmp
rcl
ret
dec
mov
loop
sbb
or
dec
das
sub
sbb
fs
pushl
push
inc
insl
and
mov
and
mov
and
adc
dec
js
popf
xor
jmp
in
xor
push
cmpb
xchg
add
stos
adc
test
std
xor
sti
stc
inc
xchg
dec
jmp
adc
ret
insb
test
daa
arpl
je
sbbb
mov
mov
mov
test
sbb
mov
inc
rol
or
xchg
loop
xchg
xchg
jno
repnz
pushf
sti
stos
inc
mov
jle
inc
inc
dec
jmp
dec
ss
sbb
out
cmp
jb
rorb
sub
add
mov
pop
jle
repz
lock
and
pop
nop
push
aam
or
mov
in
fwait
push
sbb
nop
add
mov
testl
xchg
pop
pop
push
rcrl
fsubr
movsb
mov
inc
dec
sahf
push
xchg
sub
aad
inc
lret
push
iret
js
sub
mov
and
ljmp
sti
shrb
mov
pmaxub
jb
mov
enter
or
rorl
or
test
int
inc
mov
call
adc
xchg
or
sbb
push
insb
or
jnp
mov
xlat
xor
mov
jecxz
repnz
call
loop
adc
push
jl
push
dec
icebp
and
mov
inc
jge
cmpsl
xchg
test
cmp
mov
filds
decb
or
in
lods
mov
cmp
ljmp
lods
inc
lahf
push
fadds
aam
nop
pushw
sbb
sub
sub
decl
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
push
call
cmpl
jne
mov
inc
mov
jmp
xorl
movl
mov
mov
adc
movb
mov
decl
xor
subl
jmp
adcb
mulb
mov
sub
jle
divb
lock
mov
inc
dec
lret
ljmp
xchg
es
ret
xchg
mov
sbbb
sysenter
in
fs
fbld
insb
sbb
jb
sbb
movsb
cmp
add
xchg
mov
ljmp
insl
orl
fwait
into
sbb
adc
lcall
sarl
loop
ss
outsb
push
jp
outsl
decl
or
aas
or
jnp
fcmovnu
and
jge
mov
mov
add
incb
scas
mov
adc
test
daa
mov
mov
jg
mov
and
pop
mov
adc
dec
mov
call
test
pusha
pop
jo
mov
inc
or
cltd
xor
sbb
add
jns,pt
or
mov
mov
loop
call
cmc
xchg
push
mov
lods
mov
fwait
jno
addr16
xor
test
push
pop
mov
adc
pop
and
sbb
pop
fldt
and
inc
outsl
lret
andb
pop
aas
les
xchg
sbb
and
fs
push
jge
pop
outsl
cmpsl
xor
and
filds
ret
fnstenv
cltd
xchg
or
imul
gs
mov
je
int
pushf
js
cltd
int
out
inc
mov
sbb
into
ret
fldcw
mov
pop
and
ffreep
outsb
add
es
inc
inc
jne
test
mov
mov
jge
sub
imul
int3
jae
dec
ljmp
xchg
data16
dec
jle
shlb
jp
in
adc
movsb
mov
pushf
push
loopne
jl
movsb
enter
insl
jnp
inc
jg
jle
adc
and
adc
push
sbb
call
data16
ror
mov
pop
inc
aad
mov
jbe
mov
mov
pop
iret
xchg
mov
dec
pop
imul
stc
push
je
notl
push
inc
mov
push
cmp
mov
sbb
incb
jnp
sbb
adc
adcl
les
push
icebp
cmp
in
pop
adc
enter
scas
sarb
xlat
lahf
or
movlps
inc
pop
sahf
and
lds
test
jno
out
mov
outsl
mov
into
es
rol
push
test
stos
sub
cmp
push
jbe
xchg
lds
inc
ret
stos
incl
sub
das
icebp
mov
nop
rolb
pop
addr16
jo
push
jmp
cmpsl
pushf
xor
mov
mov
daa
gs
test
push
popf
movsb
jo
cmp
int3
stos
xor
rcr
sub
sub
test
test
repnz
push
out
push
inc
clc
bound
inc
dec
pop
or
inc
inc
sub
lea
xor
daa
dec
inc
lret
or
repnz
scas
inc
es
inc
sub
sahf
xchg
fldenv
cmp
xor
inc
aaa
xor
add
adc
movl
add
fdivl
movb
sbbl
push
movzbl
sbb
mov
mov
xor
xorl
jmp
lods
or
repz
repz
dec
ss
jle
sub
jle
push
push
repnz
inc
mov
popf
pop
cld
sti
inc
bnd
push
add
inc
icebp
test
pop
adc
addr16
leave
in
rorl
push
push
add
inc
insb
ljmp
mov
fisubrl
mov
arpl
out
fwait
mov
lahf
sub
inc
outsl
in
fs
call
int
mov
fucomp
fstps
aas
lret
sub
cmpsl
jmp
mov
mov
scas
xorb
hlt
lods
cltd
inc
and
xchg
mov
iret
and
iret
mov
jno
dec
ds
ja
lock
imul
stos
les
xchg
dec
cwtl
or
ds
ret
enter
dec
adc
pusha
nop
lds
scas
pop
arpl
dec
push
mov
add
dec
inc
popf
cmp
cmpsb
jnp
andb
jle
notl
inc
addb
cmc
or
pop
lea
and
imul
ror
push
pop
sub
mov
js
mov
cmpsb
leave
mov
inc
xor
mov
xchg
mov
push
push
inc
mov
mov
rclb
jmp
movsb
repz
push
loope
adc
xchg
aam
push
cmpsb
call
mov
in
pop
les
in
loop
cmp
lcall
cmp
sbb
aad
fwait
repz
add
add
fildl
jmpw
mov
inc
xor
and
or
jmp
out
dec
aas
pop
sbb
test
jl
fmuls
fdivl
mov
gs
jae
and
aad
cli
dec
mov
pop
or
enter
inc
xchg
iret
mov
jns
lret
leave
aaa
mov
mov
into
mov
add
jp
test
les
rcr
cmp
and
aas
and
lret
fmul
inc
dec
inc
icebp
iret
adc
idivl
and
sbb
sbb
stos
mov
pop
call
mov
addr16
push
decl
dec
lahf
mov
xor
es
rolb
jp
xor
shll
sbb
pop
movsb
orb
cmp
cmp
test
sub
nop
stc
sahf
dec
cld
test
jnp
cli
and
jge
shll
xor
insb
pop
js
insl
popf
mov
and
call
fstpl
cwtl
scas
pushf
outsl
xor
push
adc
lods
andb
addr16
pop
xor
add
inc
stos
rclb
in
dec
xchg
pop
out
test
mov
mov
pop
int
sub
xor
out
sbb
insl
cwtl
add
int3
mov
addr16
dec
xchg
mov
cli
nop
add
dec
push
push
incl
and
dec
popa
xchg
add
cmp
push
adc
mov
loop
adc
in
fsubs
adc
pop
imul
sbb
mov
push
mov
movl
add
inc
in
jmp
dec
push
test
xor
xor
xor
jle
sub
jle
fdivs
mov
mov
and
xor
lret
lds
jno
out
test
and
shll
add
rcrl
sub
rcrb
jbe
fdivrp
inc
scas
aam
mov
shll
and
repnz
lcall
lods
mov
dec
out
and
movsl
lahf
mov
add
xor
xlat
jmp
pop
pushf
out
sub
pop
stos
cmp
shrb
dec
sub
xor
or
dec
fs
cmp
inc
lock
out
sbb
sbb
push
divb
sub
jb
adc
push
rorb
xchg
loopne
mov
popf
cmc
test
push
arpl
fnstsw
int3
jae
out
cmp
xchg
jmp
or
push
push
cmp
out
les
rolb
ret
clc
fiadds
push
adc
fwait
pop
or
js
adc
dec
sub
fcmovnbe
jl
or
add
pop
jl
lea
inc
lret
dec
add
insl
cmp
dec
loop
inc
mov
in
sbb
sub
sahf
cld
xchg
cmp
inc
scas
fucom
ret
xlat
jnp
jbe
fdivrl
in
xor
sahf
addr16
stos
cmp
cmp
test
xor
je
jmp
fs
and
sub
daa
push
in
jle
call
ljmp
jno
xchg
dec
sbb
pop
outsl
jmp
push
stos
mov
push
stos
mov
xchg
nop
out
dec
push
fsubr
testl
out
out
fsubs
sbb
ja
in
sbb
mov
mov
inc
push
mov
push
xchg
push
fs
pusha
pop
jp
sub
bound
or
fptan
adc
cmpsl
imul
dec
popa
mov
sub
cmp
bsf
rorl
shll
or
int3
aaa
insb
stc
push
mov
xchg
mov
inc
pop
mov
pop
mov
push
jl
push
mov
popa
mov
inc
sub
mov
iret
xor
std
repz
xchg
inc
pop
jmp
push
mov
sbb
out
inc
cmp
jg
cli
inc
imul
dec
jl
jp
test
pop
es
sar
ja
inc
lahf
or
test
jmp
dec
aaa
cmpsl
pop
or
rorb
xor
sub
dec
mov
add
dec
out
aam
dec
xor
add
xor
adc
mov
mov
rcrb
adc
or
ret
testb
cli
mov
and
or
cmp
jne
ljmp
or
imul
jno
dec
cmp
les
xchg
fs
adc
xchg
fsub
cmpsb
mov
or
push
push
jmp
test
cmpsb
sbbl
jns
pop
xchg
adc
ret
inc
loope
jl
scas
xchg
cmc
push
pop
pop
popa
das
xchg
xor
mov
subl
push
xorl
lea
incl
push
subl
pushl
jmp
mov
gs
push
scas
jp
fcmovnb
jle
sub
jle
mov
shrl
in
fcmovnu
es
xchg
decl
pop
sbb
rorb
rcr
jp
push
dec
or
hlt
push
adc
dec
iret
in
jnp
push
xchg
loopne
clc
jge
push
out
jp
sbb
jae
jne
mov
lret
setb
ret
fmuls
adc
scas
stos
dec
bound
mov
test
jo
imul
outsb
inc
fxch
ss
push
pop
pop
repnz
inc
jge
push
popf
dec
mov
ds
idivl
loope
divb
jg
lock
hlt
inc
mov
mov
pushf
cld
test
jp
or
fldl
out
mov
repnz
sarl
jecxz
and
movsb
or
ficompl
cmpsb
mov
sub
add
aad
in
pop
push
dec
cmp
int
adc
inc
je
popa
sub
mov
or
hlt
sbb
ds
lahf
xchg
mov
cmp
xchg
xchg
frstor
fnsave
mov
popf
test
enter
int3
xor
push
pop
add
sub
push
pushf
cmp
stos
repz
lret
jecxz
repz
aas
push
mov
bnd
andb
xchg
inc
lock
dec
dec
sub
add
dec
cld
jecxz
add
scas
dec
inc
stc
sub
push
shr
push
repz
jmp
insl
cmp
cmp
push
lods
mov
leave
in
and
ret
cmpl
rdpmc
inc
scas
fnstcw
std
shlb
xchg
push
aas
in
in
pop
fidivs
cli
sahf
xchg
idiv
xor
add
call
imulb
int
imull
adc
inc
out
xchg
inc
pop
xor
mov
mov
jb
stos
lea
sahf
mov
scas
test
nop
or
insl
mov
jl
scas
xchg
sub
jns
subl
je
test
jb
je
add
int3
sarl
push
leave
inc
rclb
push
fimull
cld
jnp
dec
pop
rcrl
rcrl
js
mov
cmp
adc
pop
jle
sbb
push
inc
adc
aaa
mov
pop
mov
insb
popf
mov
les
and
cld
cli
out
mov
mov
push
mov
mov
ret
mov
jl
push
jge
and
pop
sub
sti
in
shll
sti
inc
mov
pop
push
filds
ja
pusha
loop
popa
inc
hlt
jb
adcb
or
xchg
les
pop
test
and
mov
in
or
jp
lods
or
outsb
jno
insb
jns
sarb
push
inc
mov
xor
dec
xchg
mov
je
nop
adc
loopne
sub
jl
dec
popf
push
dec
test
popa
fxch
in
sbb
jnp
and
cwtl
jmp
push
and
fs
ss
sahf
iret
addr16
insb
gs
fdivrs
dec
decl
pop
sti
pop
cmc
js
hlt
mov
cmp
in
call
jmp
aaa
dec
rcrl
jno
repz
push
and
or
sub
jle
sti
jp,pn
xchg
aaa
jl
or
and
mov
sbb
popl
syscall
mov
enter
and
pop
mov
outsb
repz
nop
mov
pushf
loope
outsb
in
pop
stc
insb
fidivrs
mov
mov
adc
xchg
rcll
lock
mov
jl
and
out
out
sbb
stos
mov
aas
popf
pushf
inc
andl
icebp
fldt
mov
add
sbb
xchg
push
arpl
cs
jmp
pop
rorb
lret
adc
push
aaa
inc
mov
inc
inc
inc
jo
roll
xchg
mov
ja
push
mov
ja
imul
lcall
mov
mov
lods
aas
xchg
push
mov
repnz
test
sub
sarl
jmp
push
imul
into
mov
jmp
icebp
aaa
out
jge
push
loopne
xchg
dec
inc
fistpl
repz
push
mov
xchg
push
iret
pop
fwait
xor
mov
dec
repnz
xor
pushf
pushf
mov
sub
add
inc
bnd
sbb
and
dec
and
out
xor
lods
sbb
lds
mov
pop
in
mov
outsb
xor
dec
ret
int
repz
jae
repz
mov
mov
stos
pop
sbb
add
fists
loope
and
push
imul
pop
ror
mov
adc
daa
movsl
rcr
mov
pop
sti
or
hlt
and
pop
xchg
rcll
push
enter
imul
in
pop
push
movsl
mov
test
cmp
or
pushf
ja
sub
mov
fwait
xchg
inc
in
mov
je
int3
cmp
mov
jl
orb
mov
mov
dec
adcb
jno
jbe
imul
cmpsl
iret
je
jp
daa
dec
fimuls
andl
repz
inc
jb
daa
cwtl
push
imul
xchg
dec
inc
push
inc
test
daa
sub
ret
dec
outsl
insl
xchg
and
inc
xchg
dec
jns
or
or
xchg
nop
cmpsl
lods
pop
jb
cmp
mov
sarb
addb
cmp
in
cmp
outsb
fcomip
adcl
fs
pop
es
out
adc
inc
jl
lret
adc
insl
xor
jge
pop
sbb
mov
xchg
pop
adcb
lea
sub
loopne
cmc
je
ret
fdivrs
out
xorb
cmp
fwait
jo
leave
shrl
pop
negb
jbe
loope
mov
fnstsw
inc
push
dec
es
sarb
ret
je
sub
repz
insw
cmp
xchg
sti
push
cmpsl
mov
incb
cmpsb
icebp
jmp
pop
rolb
fsub
xchg
xchg
dec
jnp
push
sahf
shrl
push
mov
sub
rcr
rol
and
cwtl
ret
push
xchg
mov
mov
enter
movl
je
lea
subl
push
mov
xorl
xor
sbbl
add
xorl
push
mov
jmp
mov
orl
inc
shrb
scas
popa
jle
sub
jle
xor
fidivrl
iret
arpl
clc
push
jne
lock
inc
add
andb
inc
dec
cltd
inc
cs
nop
sbb
arpl
ss
and
inc
mov
push
mov
imul
xchg
insw
inc
ret
sub
inc
sbb
out
out
pop
jne
insl
out
mov
shll
lret
movsl
push
subl
in
into
imul
jge
inc
shll
jecxz
std
push
out
and
add
add
sub
push
inc
mov
shrl
pop
lock
aam
add
mov
popa
mov
cmp
ffreep
jno
cli
lods
push
popa
out
ds
sbb
pop
lcall
iret
push
sbb
jg
decl
push
shrb
sar
mov
addr16
and
out
pop
movsb
push
push
test
fwait
push
mov
pop
xchg
scas
lahf
cmp
and
lcall
into
push
sub
lcall
pusha
cmp
inc
js
jp
mov
leave
xchg
mov
and
lea
mov
mov
lcall
imul
xchg
aaa
cmc
mov
fs
inc
push
clc
popf
inc
cld
arpl
push
mov
rcrl
lcall
iret
les
mov
fbstp
rcr
dec
sbb
pop
aam
aaa
lods
cwtl
in
adc
mov
pop
int
jo
imul
repnz
adc
inc
cld
pushf
mov
cmc
jne
xlat
add
clc
xchg
push
sub
adc
adc
roll
shlb
jae
cmp
fsubl
or
cmp
movsb
adc
jge
xchg
es
and
mov
mov
popa
loope,pt
xchg
inc
js
add
jbe
stos
mov
iret
arpl
in
cmp
in
cmp
pusha
inc
int3
imul
mov
lahf
mov
imul
inc
inc
mov
push
sti
insb
xchg
add
adc
ret
pop
inc
sub
add
cmp
jl
jecxz
pop
sbb
xlat
loope
daa
loope
popf
adc
push
inc
cmp
scas
cwtl
xlat
lret
pop
lret
push
inc
aad
pusha
sti
aas
div
mov
lock
outsl
pop
dec
stos
lods
idivb
in
sbbb
jl
lea
adc
cmp
add
add
or
out
or
adc
mov
shrb
add
sbb
aaa
xchg
xchg
pop
cs
paddsb
mov
mov
jns
sarl
add
fnstsw
clc
and
aad
pop
mov
inc
dec
subb
mov
dec
notb
mov
sbb
inc
push
and
call
jmp
int3
dec
cmp
mov
add
subl
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
jmp
jmp
cmp
xor
rcl
lods
push
mov
cmp
jle
sub
jle
ljmp
inc
and
adc
mov
out
jns
jnp
dec
in
cmp
mov
jl
pop
sbb
cmpsb
or
mov
aam
add
add
popa
insl
shrb
mull
xchg
pop
fisubl
or
mov
pop
test
pop
out
add
and
imul
fucom
jp
hlt
and
pop
bnd
fisttpll
add
sbb
aam
mov
inc
and
inc
add
add
cmp
dec
push
or
and
in
xor
pop
pushl
xor
inc
imul
adc
xchg
pushf
in
mov
xor
je
outsl
mov
mov
mov
and
movd
cmp
repz
stc
cli
add
rcrb
cmp
arpl
xchg
outsb
inc
jge
les
cld
aas
rcrl
lret
adc
xchg
dec
dec
pop
lret
call
fidivs
int3
clc
pop
jge
add
sub
inc
xor
xchg
pop
call
sub
popf
dec
xchg
mov
pusha
test
adc
aaa
push
jbe
xchg
call
andl
sti
stos
out
adc
jmp
jp
inc
adc
call
aam
sbb
sbb
sub
fwait
sub
jbe
cli
jmp
sti
pop
ffreep
or
push
insb
in
jle
popf
push
pop
repnz
imul
cmc
jp
push
into
adc
mov
dec
or
das
sbb
out
jg
ficoml
adc
shl
mov
inc
xor
ret
xchg
lahf
dec
dec
cmc
into
push
sarb
addr16
sbb
ret
push
jo
int3
dec
imull
outsl
decl
inc
loope
add
cmpsl
add
int3
cmp
mov
jb
sbb
add
sbb
and
lahf
jg
mov
loopne
mov
test
rcr
cs
js
sbb
mov
or
std
bound
cli
in
data16
loop
jno
je
mov
jecxz
mov
dec
jno
nop
lea
jo
sub
or
pushf
mov
or
dec
out
jae
or
adc
enter
and
lods
rcll
mov
ljmp
imul
push
xchg
xchg
out
outsl
sub
xchg
mov
mov
mov
insl
ljmp
dec
shld
fadd
dec
sbb
je
mov
aad
push
pop
int
push
pop
pushf
sbb
push
or
cmpsl
pop
out
rcr
pop
loop
outsb
lret
xor
dec
rcl
add
push
jbe
xchg
mov
jge
int
sub
lret
pusha
push
js
mov
jl
rcl
out
push
or
fcoml
jnp
fwait
mov
inc
lock
pushl
call
jmp
pop
push
jl
mov
sub
adc
aas
xlat
jle
sub
jle
jo
aaa
adc
push
cld
jbe
jo
and
or
dec
loop
xchg
das
jg
xchg
fisubrl
cmpsl
pusha
pop
arpl
inc
push
bound
mov
out
jnp
mov
add
pop
scas
sbb
mov
out
mov
and
xor
inc
stos
mov
mov
push
shll
loopne
sub
lret
add
and
rcrl
sbb
push
cltd
push
rol
scas
mov
rcr
aas
ljmp
mov
out
xor
rolb
xor
push
jo
movsl
mov
call
or
scas
pop
cmp
rorb
inc
int3
icebp
mov
mov
pop
daa
int
inc
fistps
repnz
cmp
loop
xor
fcomp
mov
dec
sbb
cmpsl
lcall
nop
dec
cld
fnstenv
test
js
xlat
push
push
ret
cwtl
fsts
add
mov
repnz
das
or
cmp
and
mov
aad
sahf
je
pop
mov
out
or
jge
push
cld
jg
imul
hlt
or
dec
enter
push
dec
push
cmc
mov
mov
je
ds
xchg
push
div
les
dec
lea
pop
fbstp
xchg
or
fwait
adc
push
add
pop
outsl
jno
loopne
insb
popf
sub
es
dec
or
fldenv
push
sbb
xor
aas
pop
es
mov
add
jle
addr16
dec
jne
popa
mov
enter
dec
xor
sub
out
inc
test
push
jne
rcrl
cmpsb
lock
popa
into
and
dec
mov
mov
lret
xchg
adc
inc
or
or
pop
filds
jmp
or
pop
bnd
aam
and
int3
es
or
shll
sub
dec
arpl
out
ss
lret
loope
sbb
adcb
test
xor
mov
xor
fnsave
mov
and
fsts
adc
dec
push
out
fsubl
mov
rcl
rclb
aad
inc
mov
outsb
and
inc
out
inc
and
cmp
pop
and
in
jmp
roll
push
mov
mov
pusha
fsts
push
maxps
popf
jbe
lods
fcomps
aam
ds
inc
push
ss
push
push
jle
fcoms
sbb
mull
sbb
addb
push
rorl
pusha
inc
outsb
push
out
andb
data16
jb
add
push
mov
lock
jmp
xor
pop
mov
xorl
mov
jbe
dec
pop
dec
lret
int
xchg
jae
mov
add
dec
out
loope
add
push
popa
insb
sub
mov
rcl
sbb
pop
out
cmp
clc
cmpl
lea
mov
je
lea
push
mov
xor
add
push
mov
xor
add
push
pushl
lea
push
jmp
popa
pushf
cmpsl
mov
jno
inc
xchg
popa
jb
das
xchg
sub
jle
adc
push
aas
jno
jl
jecxz
add
lahf
repz
dec
add
xlat
add
xchg
imull
insl
xchg
loopne
jno
cwtl
hlt
sub
sarb
fiadds
fadds
push
test
xchg
inc
hlt
mov
int3
nop
push
sub
lds
or
cltd
or
mov
mov
jbe
sub
je
daa
movsl
mov
adc
pushf
fildll
jmp
adc
lret
insb
nop
test
jmp
movsb
mov
or
bound
mov
mov
sti
sub
out
push
and
mov
dec
sbb
ss
inc
jbe
pop
inc
loop
mov
inc
pop
test
jecxz
popf
jmp
adc
leave
shlb
adc
pushf
fisubl
jmp
lods
mov
out
or
repnz
jae
pop
jnp
cmpb
stos
jno
dec
pop
xchg
out
push
int
mov
dec
xchg
add
cmp
imul
mov
jp
loopne
shr
mov
dec
pop
ds
outsb
shrb
pushf
out
fs
fmuls
pop
inc
fwait
mov
mov
xor
mov
inc
lea
mov
mov
insb
bound
scas
loop
into
out
mov
xchg
aad
ljmp
pop
daa
outsb
idiv
and
push
cmpsb
xchg
hlt
rcrl
cmp
jg
sub
dec
or
adc
aad
test
arpl
fcmovu
add
or
sbb
jmp
cmpl
mov
fiadds
cwtl
stc
push
fiadds
scas
or
in
fadds
scas
mov
cmp
push
insl
ret
data16
cmp
dec
inc
xchg
mov
inc
lds
and
cmp
sub
push
int3
out
cltd
push
sbb
adc
lcall
push
inc
mov
mov
pop
jns
sub
cmpb
notb
ror
rorl
dec
xor
mov
push
sub
mov
pop
push
fcomps
pop
iret
hlt
or
and
test
add
mov
and
add
test
aaa
xor
dec
ss
aas
pop
sub
xchg
in
mov
push
adc
pop
lret
aas
push
addr16
gs
das
inc
lock
cmpsl
scas
int
lret
subl
dec
in
mov
pop
inc
mov
addl
daa
adc
test
clc
sbb
push
popa
arpl
xor
clc
mov
hlt
insl
sbb
add
imul
xchg
jle
decl
push
inc
loopne
cmp
mov
call
xlat
cld
rorl
mov
jbe
stos
push
jbe
lcall
add
mov
dec
sbb
jne
call
mov
loopne
cwtl
dec
inc
pushl
pushl
call
test
je
lea
push
mov
xor
jmp
test
cmp
push
mov
mov
jge
jle
jae
dec
push
and
in
cmp
push
test
stos
mov
cmp
test
jmp
cmc
cmpsl
mov
jnp
cmp
test
repnz
shlb
jns
or
mov
sbb
add
enter
and
xchg
mov
je
jno
mov
daa
ja
pusha
sbb
test
and
adc
adc
les
insl
cmpsl
dec
pop
or
adcb
cltd
mov
mov
fdivs
lea
sahf
movsb
mov
lret
ss
mov
add
testl
lock
pop
adc
jo
popf
shrl
push
jp
pop
inc
sti
aaa
ret
int
fisubl
jmp
test
pop
cld
xor
xchg
das
in
sub
xor
mov
ss
push
dec
xor
insl
adc
cmp
rcrl
add
dec
repnz
jns
mov
cmp
or
inc
cli
mov
jge
lret
lret
in
fadds
fiadds
mov
cli
imul
pop
scas
push
mov
js
mov
cwtl
mulb
icebp
les
nop
sub
aas
dec
jns
ret
xchg
mov
inc
adc
sbb
sbb
test
mov
or
cmp
cwtl
dec
add
mov
clc
cmp
or
fs
aaa
adc
mov
aad
sub
pop
cmpsb
xor
push
cmp
bound
in
je
adc
or
mov
jge
enter
std
or
inc
push
loope
lahf
mov
nop
inc
push
aad
fisttps
or
jae
fsubr
sbb
add
sti
jp
stos
adc
push
aaa
inc
clc
xchg
sub
repz
mov
or
insl
mov
jg
cld
divb
outsb
pop
pop
adc
or
push
pop
mov
jp
out
push
js
sbb
sbb
push
pushf
adc
adc
je
or
mov
mov
sti
add
pop
sub
hlt
xchg
jbe
and
jmp
je
sbb
leave
sahf
push
out
xlat
gs
mov
push
xlat
xor
sbb
fistpl
and
mov
test
or
sbbl
push
dec
mov
popf
jp
xor
scas
fcom
arpl
cli
cltd
test
mov
mov
sub
popa
int
jle
insb
push
popf
testb
or
sub
arpl
lea
test
mov
insb
popf
and
mov
xor
push
sbb
inc
jne
adc
add
and
clc
mov
sub
pop
and
nop
test
and
pop
std
shll
popf
ret
or
aad
jne
mov
jp
test
add
push
mov
add
push
mov
mov
pushl
call
mov
xor
mov
sub
jmp
shll
add
ret
loope
inc
rcl
jmp
pop
fdivrl
sub
jle
jns
stos
inc
jne
mov
sbb
sarb
out
mov
xchg
or
call
adc
push
sub
out
sub
iret
pop
cmc
popf
jecxz
jnp
cmpl
sarb
insb
ja
test
jbe
push
addr16
cmovb
mov
shrb
fs
das
into
mov
lods
jno
cmp
outsb
scas
cmp
idivl
mov
push
mov
or
or
popf
sbb
fs
imul
dec
pop
lret
jl
push
movsl
arpl
sub
inc
cmp
ds
rorl
into
sbb
es
xor
inc
scas
ja
adc
out
jno
idivl
inc
loopne
pushf
jne
andb
in
push
push
push
jnp
test
xchg
mov
mov
cmpsb
push
out
cmp
sbb
adc
adc
pop
stc
pop
loope
loopne
xchg
cmp
cmp
ljmp
sub
popa
sbb
sbb
jno
cld
test
pop
inc
jns
and
dec
mov
aam
sub
imul
ss
out
sahf
sub
cmc
sub
dec
mov
push
arpl
out
rclb
sbb
in
xor
out
cmp
xchg
fidivl
bound
lcall
lcall
fucom
xor
pop
cmp
jecxz
mov
out
dec
xchg
xchg
ja
mov
out
jnp
mov
pop
ret
lcall
inc
fidivrs
mov
addr16
xor
ret
movsb
and
mov
shll
cs
cld
loop
inc
in
fisttps
sub
xchg
rorl
xorb
sahf
mov
ljmp
jge
xchg
jmp
loopne
push
sbb
pop
dec
fdivl
and
lock
arpl
sbb
pop
lea
scas
andb
mov
mov
jle
xor
mov
fwait
adc
push
outsl
mov
sub
leave
rcr
aaa
arpl
ljmp
cltd
test
sbb
lock
push
test
pop
add
adc
testl
insb
ljmp
sbbl
enter
dec
out
stos
out
push
mov
fcomps
mov
repz
fstps
pop
adc
int3
ljmp
inc
xor
mov
pusha
test
stos
push
shl
dec
lcall
push
or
test
push
repz
xor
sbb
mov
mov
xchg
ss
xchg
adc
add
and
mov
jbe
jo
dec
notb
into
adc
dec
test
inc
dec
xchg
mov
pop
sbb
mov
or
insb
pushf
xchg
xchg
cltd
addr16
push
daa
xchg
lds
xchg
mov
mov
inc
inc
xor
xchg
sub
mov
add
mov
mov
mov
mov
xor
sub
mov
lea
incb
inc
push
jmp
lcall
insl
sub
and
xor
sub
jle
repnz
pop
jae
fmulp
or
iret
pop
lds
pushf
inc
xchg
sarl
in
insb
imulb
test
adc
adc
pop
in
fildll
jb
jb
int
sbb
xor
pop
dec
rclb
jbe
pop
ja
test
loope
dec
shl
or
jmp
scas
inc
test
fsts
dec
sub
gs
xchg
mov
test
fstpl
loopne
scas
or
es
dec
dec
or
adc
daa
in
int3
pushl
and
daa
sahf
pop
gs
sub
fwait
sub
mov
mov
sarb
or
add
and
mov
aam
mov
sub
push
leave
xor
loop
inc
leave
add
aaa
mov
outsl
outsl
das
push
cmp
pop
pop
or
xorl
mov
and
les
cld
pushf
int3
int3
lahf
mov
mov
cli
jo
cmp
and
add
dec
inc
pop
push
test
aas
fnstenv
adc
push
cmp
cmp
test
data16
sti
fidivrl
fs
xchg
or
in
pop
test
jae
clc
repnz
or
adc
les
sahf
dec
xlat
mov
mov
and
jo
jmp
push
icebp
outsb
shr
daa
pop
fnstcw
lea
dec
pop
or
sbb
cmpsb
push
pop
ret
stos
add
xchg
pop
shlb
jg
sar
jl
mov
pop
lcall
sbb
mov
or
mov
push
and
push
out
mov
cmp
pop
dec
or
dec
pushw
sti
pushl
aas
mov
rcll
add
add
xchg
adc
pop
pop
pop
scas
stos
clc
imul
and
push
into
fmul
insb
and
shll
xchg
aam
pop
nop
mov
mov
imul
pop
lcall
orl
mov
mov
mov
mov
into
mov
loop
mov
icebp
jae
push
cwtl
ss
mov
or
gs
cmp
jae
sbb
ret
loope
or
ja
mov
or
lret
add
out
subl
dec
xchg
shrl
inc
bound
out
stos
sbb
mov
pop
imul
pop
pushf
jbe
jne
mov
mov
pop
mov
cs
add
and
jl
aaa
xchg
adc
dec
xchg
js
sub
mov
dec
insb
fyl2xp1
xchg
mov
popf
pop
xchg
and
in
cmc
jno
jb
jecxz
sbb
cmp
cmp
or
mulb
rcll
je
lahf
loopne
cmp
cmp
das
jb
pop
std
out
outsb
or
in
aaa
pop
dec
xchg
decb
pushl
mov
mov
pushl
lea
pushl
jmp
cli
add
ret
popa
arpl
lds
jo
lret
jle
jge
jle
push
jecxz
and
pop
adc
adc
loopne
sub
stos
inc
push
mov
adc
std
cmpsl
out
dec
hlt
ret
lcall
pop
xchg
or
adc
and
test
repnz
repnz
or
or
lds
and
bound
sbb
inc
outsl
xor
xor
ret
cmp
pop
cli
leave
lods
rcl
pop
and
jbe
ret
sbb
push
or
push
xchg
into
jle
mov
gs
jg
repnz
jmp
pop
xor
lret
xchg
mov
les
or
lcall
bnd
dec
ret
inc
dec
rcr
in
push
cmp
lds
or
lods
sarl
xor
mov
cmp
scas
xor
jmp
out
xor
enter
cmp
xor
fisttpl
dec
pop
jo
sbb
fildl
in
sbb
daa
push
lret
hlt
mov
adc
pop
jecxz
mov
sub
cmp
or
call
fidivs
add
pop
adc
nop
inc
push
add
sbb
std
xor
pushf
sti
pusha
dec
daa
mov
mov
pop
popf
xor
sub
cmp
push
lds
push
xor
out
xchg
aaa
out
dec
shl
add
cmp
xor
mov
in
jp
fdivrl
out
push
je
inc
out
mov
mov
dec
xor
mov
adc
mov
jno
or
pop
into
or
inc
push
xor
cmp
lock
cwtl
roll
test
jge
xchg
lock
cmpsl
hlt
ds
xchg
cmpsb
dec
jns
xor
cltd
push
push
pop
dec
jecxz
int
ret
test
addr16
loop
dec
imul
roll
in
or
lcall
aam
jne
imul
js
les
leave
mov
fimull
lcall
adc
sti
and
push
rcr
mov
jne
rcr
les
mov
or
jnp
xor
cmp
sub
addb
call
leave
adc
xor
dec
insl
scas
or
cmc
movsl
pop
adc
push
cmpsb
shll
push
insb
je
mov
push
test
cs
cltd
test
add
push
mov
mov
popa
dec
stos
leave
lock
test
aaa
sub
jl
jecxz
movsl
fidivs
push
jl
arpl
inc
push
dec
cmp
nop
push
outsb
outsl
add
mov
mov
imul
in
push
sbb
mov
and
mov
rorl
out
jbe
add
push
xchg
in
jno
xor
loope
and
push
movsl
sarb
jb
sbb
xchg
dec
fdivs
mov
popf
add
mov
adc
lret
ja
rorl
cmp
and
test
mov
add
sub
xor
test
and
add
pushl
lea
pushl
lea
pushl
xchg
inc
inc
sub
push
pop
call
mov
mov
add
jmp
outsl
adc
insl
popa
insl
jno
std
inc
add
fdiv
test
jle
sub
jle
jmp
dec
bound
push
cmpsl
sub
lock
icebp
shl
lods
adc
dec
jno
test
nop
pop
mov
add
pop
jae
dec
jge
add
add
ret
das
push
mov
out
mov
inc
pop
int3
shll
aam
jmp
repz
pop
rorl
dec
adc
jbe
ljmp
dec
sub
sub
mov
cltd
and
add
movsl
adc
ret
xchg
adc
xchg
or
pop
jae
mov
xchg
lcall
xor
test
xorb
sarb
pop
cmp
push
xor
aam
movaps
cmp
pop
dec
push
push
test
gs
inc
and
inc
pop
jle
data16
cld
and
test
daa
mov
xchg
inc
arpl
movsl
xchg
rcrl
lahf
in
push
cmp
imull
mov
xlat
mov
mov
cli
adc
in
xchg
jp
enter
shll
cld
mov
sti
fisttps
mov
xchg
xor
xchg
xchg
jge
dec
scas
gs
xchg
sub
inc
xor
adc
jp
xor
jnp
out
out
xchg
mov
xchg
jle
dec
cmp
loope,pn
pop
or
andb
or
les
sti
mov
addr16
gs
pop
gs
call
inc
push
test
adc
out
inc
insb
pop
push
repnz
dec
cs
dec
hlt
or
roll
ja
cmp
pop
inc
pop
sbb
xchg
xlat
add
jmp
cmpsb
inc
fchs
lea
and
lret
adc
repz
vmovsd
dec
mov
hlt
dec
es
push
sti
fldt
aas
or
pushf
add
idivb
mov
xchg
in
test
pop
inc
and
xor
jg
dec
jo
jg
push
lret
or
or
pop
xchg
insl
mov
mov
ret
into
push
stos
or
xor
les
fcmovb
and
aam
in
add
dec
inc
cmp
mov
adc
sub
pop
fsubr
sbb
sbbl
and
inc
stos
cmp
cmp
aad
movl
pop
je
int
xchg
mov
mov
add
add
pop
push
ss
addr16
inc
dec
orb
push
mov
imull
mov
ret
lods
and
mov
daa
movsb
insl
loop
jno
cmc
adc
loopne
test
shlb
das
sti
in
pop
out
or
test
push
pop
into
jno
jle
pop
mov
or
jae
pop
shl
sbb
jb
ficoms
repz
xor
adc
mov
xor
cmp
xchg
add
jp
test
push
loop
loopne
in
inc
fisttps
xchg
fwait
and
or
add
ret
lds
aas
mov
cmp
adc
inc
xchg
jl
jp
sbb
adc
pop
leave
ret
push
mov
sub
and
push
or
mov
and
mov
mov
sbb
mov
mov
xor
movl
andl
mov
inc
mov
cmpl
jne
push
push
pushl
call
cmpl
jb
or
movl
mov
xor
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
call
cmpl
jne
xor
or
inc
mov
jmp
movl
cmpl
je
cmpl
jne
pushl
push
push
pushl
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
and
mov
add
xor
mov
add
mov
or
mov
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jne
push
pushl
pushl
pushl
pushl
pushl
push
pushl
push
push
push
push
pushl
pushl
call
cmpl
jne
xor
xor
inc
mov
jmp
mov
jmp
push
jp
in
jne
stos
push
nop
inc
inc
xchg
and
mov
data16
jle
cmp
xchg
adc
inc
add
xchg
pop
and
jecxz
outsb
mov
pop
js
test
fbld
mov
mov
inc
mov
shrb
iret
xor
jg
fists
insb
test
push
push
jo
cmp
add
dec
sahf
dec
fsubr
fwait
hlt
movsl
insb
xchg
pop
cltd
lods
push
xchg
insb
aad
mov
push
xchg
loopne
push
loopne
cwtl
add
out
adc
lods
sbb
sarl
xor
aad
cltd
mov
push
out
sbb
int
xchg
pop
pop
iret
mov
cmp
repnz
daa
inc
push
xor
add
mov
in
mul
and
cwtl
dec
cmp
pop
shlb
adcb
add
int3
cltd
and
mov
cmp
lret
aad
pop
lock
add
mov
stos
jecxz
jle
cmp
xor
inc
mov
arpl
mov
pop
aam
inc
mov
cs
pushf
pop
and
insl
cli
imul
mov
pop
dec
push
inc
pusha
mov
bsr
mov
imul
pop
rcll
jmp
mov
mov
xchg
lahf
adc
add
das
aaa
pop
out
subl
into
mov
mov
repnz
pop
xchg
insb
orb
out
or
fdivrl
pop
add
pop
lcall
sbb
ficoml
inc
pop
xor
jbe
push
cmp
out
dec
mov
fstpt
loope
mov
xchg
adc
aam
cmp
int3
enter
leave
movsl
pop
or
out
pop
inc
or
mov
orb
cltd
inc
sub
sub
and
mov
xor
sub
and
push
jae
dec
lret
jb
dec
or
jb
xchg
jbe
lea
sub
test
push
call
cs
in
into
jo
fs
ds
pop
sbb
or
inc
ja
sub
ja,pt
roll
cwtl
cmp
int3
jge
loop
pop
pop
ret
cltd
xchg
shll
mov
jmp
cmp
jl,pt
sarb
in
push
sub
sarl
imul
andb
sbb
xchg
mov
notb
fmuls
je
xor
fmul
scas
push
mov
pop
mov
sub
or
leave
push
std
pop
mov
in
les
fstpt
pusha
je
or
xor
jmp
cmp
pushf
or
loopne
in
inc
fnsave
scas
das
push
add
mov
add
dec
mov
sub
movl
movl
add
movl
movl
cmpl
je
cmpl
jne
push
push
pushl
push
call
cmpl
jne
xor
or
dec
mov
mov
dec
mov
jmp
not
movl
movl
or
movl
and
movl
mov
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
xor
xor
mov
add
cmp
movl
je
movl
push
movl
jmp
mov
or
jmp
incl
mov
push
pop
scas
mov
data16
jle
mov
sub
dec
fs
iret
movsl
push
xchg
mov
lds
out
hlt
lea
outsl
les
jl
jno
fwait
mov
hlt
mov
stos
out
mov
dec
lds
movsb
test
out
inc
ficomps
scas
mov
mov
adc
dec
out
push
arpl
js
icebp
or
movsb
pop
in
pop
pop
mov
xlat
fld
out
sbb
jo
push
cmpsb
orb
pop
fildl
jb
fs
xchg
xchg
and
mov
xchg
imul
mull
add
into
inc
or
xchg
jbe
fdivs
rcrl
shlb
or
cmpl
sbb
pop
out
clc
pop
cmp
and
xchg
mov
xor
dec
jmp
stos
mov
pop
js
jge
cmpsb
ror
xor
push
fmull
push
adc
xchg
and
pmulhuw
movsl
dec
sar
test
dec
xchg
imul
push
enter
enter
ljmp
cmpsl
sub
adc
sub
std
ja
arpl
fstp
pop
and
sub
hlt
cmpsl
push
bound
inc
lcall
xchg
popa
mov
or
dec
mov
push
inc
pop
rclb
pop
xchg
inc
int3
test
xchg
xor
inc
ljmp
int
out
mov
push
dec
inc
xchg
scas
or
jae
push
shrb
subl
jne
ljmp
inc
daa
jp
fists
loopne
out
popf
xchg
jbe
loop
insl
mov
outsl
jle
xchg
sahf
mov
fsubr
test
es
lds
scas
out
inc
mov
das
popf
outsl
in
xchg
js
cli
fcoml
std
sub
pop
adc
jae
sti
pushf
sahf
clc
push
fiadds
imul
sub
push
pop
xchg
or
insb
ficomps
outsl
insb
sbb
xchg
outsb
test
adc
mov
xlat
push
jbe
out
vmread
or
enter
jno
dec
jmp
mov
push
fmuls
push
xchg
sub
xchg
add
fimuls
mov
pop
jl
in
andb
lcall
dec
aad
dec
inc
mov
ret
xlat
scas
lock
mov
jle
push
mov
cmc
mov
loop
push
sbb
xor
mov
lds
aam
ss
sbb
mull
stos
pop
dec
clc
pop
into
jno
sub
ja
sbb
inc
xchg
push
jb
mov
ret
dec
jo
xchg
push
outsl
inc
fwait
int3
adc
cmp
ss
insl
jnp
int
outsb
out
nop
inc
nop
cs
mov
sbbl
sub
andl
mov
xor
add
movl
cmp
jb
mov
mov
sub
sub
mov
or
mov
xor
xor
sbb
xor
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jne
push
push
push
push
call
jmp
xor
add
xor
or
sbb
mov
jmp
inc
int
popa
jae
push
in
mov
mov
jle
jl
jle
push
test
mov
add
addr16
in
das
dec
shl
add
imul
mov
rcl
repz
cmp
mov
out
xchg
scas
sub
lds
jge
ret
lds
xor
xor
inc
or
adc
pop
add
or
pop
aaa
ror
negb
mov
inc
push
in
aad
loop
cmpsl
jmp
les
mov
clc
imul
push
out
cltd
sbb
dec
mov
lcall
xchg
mov
mov
dec
stc
and
pop
xchg
adc
inc
es
push
adc
xchg
pusha
lods
imul
in
test
pop
mov
inc
loop
xor
jp
js,pt
adc
adc
and
int
lcall
sbb
xlat
mov
sbb
push
or
mov
adc
mov
stc
outsl
jne
movsb
jbe
aam
repnz
mov
xor
pop
cmp
cmp
addr16
int3
repz
mov
mov
enter
pop
outsl
imull
xor
push
outsb
xor
push
xchg
pop
aad
ret
pop
out
and
in
hlt
push
sbb
aas
aas
jmp
adc
fsubrp
loop
mov
test
pushl
adc
pop
cmp
push
repnz
cmp
and
jp
arpl
bound
push
dec
xor
sbb
sbb
in
fucomp
gs
xchg
cmp
movsl
and
pop
mov
pop
add
or
leave
testb
mov
sub
int
shrb
adc
std
mov
jecxz
into
inc
pop
mov
mov
cmp
mov
fidivl
out
mov
dec
sbb
frstor
std
lcall
sbb
xor
or
popf
les
loop
lahf
lea
in
and
xor
pop
fcomp
jecxz
pop
lea
mov
daa
adc
ficomps
push
xor
aam
int3
pop
imulb
cmpsb
cmp
mov
jmp
stos
int3
jl
push
icebp
push
jns
lods
vmulsd
ret
sub
inc
popa
pop
and
repnz
ret
mov
mov
mov
int
pop
int3
sbb
jle
je
int3
mov
test
dec
jp
xchg
jb
jne
int
dec
mov
cmpsl
loope
mov
add
jecxz
push
and
adc
inc
xchg
aaa
lds
lcall
in
int3
sbb
inc
ret
sub
cld
lock
loopne
imul
lcall
fwait
jle
sbb
roll
add
scas
xlat
mov
sbb
mov
orl
sub
cmp
ja
mov
xor
add
jmp
mov
mov
xor
xor
add
add
imul
mov
jmp
sar
sub
stos
cmp
push
stos
pop
hlt
idivb
data16
jle
or
dec
mov
pop
cs
outsb
sub
out
jge
popa
mov
jo
rcrb
out
mov
shl
arpl
jg
popf
cmp
repz
pusha
xor
ds
jnp
insl
xchg
adc
loope
jg
and
xor
jle
fsubs
mov
enter
in
sub
and
cs
cmp
cmp
sub
nop
sub
fs
inc
cmpsl
lods
jle
jl
jl
rorb
in
push
cld
inc
xor
jl
mov
data16
lds
sahf
loope
add
inc
pop
dec
xchg
test
test
and
or
jmp
mov
shll
popl
je
pushl
mov
sub
ljmp
arpl
jg
cmc
shlb
inc
movsb
jg
xchg
test
add
mov
mov
xor
lds
mov
scas
inc
stos
jmp
pushf
leave
pop
in
lds
inc
inc
push
xchg
cmp
xor
dec
sbb
cmpsb
in
ljmp
jne
pop
sbb
mov
js
push
and
cmp
add
scas
inc
jp
mov
cmp
jmp
loopne
add
push
mov
imul
xor
adc
popa
cmp
cmp
push
pop
dec
cmp
jg
ljmp
cmp
jae
adc
dec
mov
pop
movsl
shrb
aad
cmc
dec
fidivs
cmpsb
or
icebp
mov
stos
cmp
mov
int3
test
cld
xor
sbb
sub
mov
push
into
mov
jb
clc
popa
rorl
sbb
inc
cli
imul
pop
cmp
cmp
jo
sub
inc
pop
adc
cmp
gs
jge
gs
insb
sub
pop
pop
inc
and
lahf
in
ficoml
fwait
addr16
gs
xlat
and
shlb
stos
test
es
out
push
lahf
call
jmp
dec
adc
das
sub
dec
mov
and
xor
push
cmp
and
or
mov
cmp
jmp
jb
imul
inc
das
fs
and
fstpt
popf
pcmpgtb
lcall
jmp
scas
ja
outsl
sub
mov
out
jge
cmp
popa
mov
mov
adc
pop
pop
cmovbe
ficoms
sbb
aaa
xor
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
jmp
mov
push
jl
mov
ret
das
xchg
fdiv
jle
data16
jle
cwtl
xchg
sub
mov
pop
cmpsb
inc
aas
lahf
xor
mov
sub
push
pusha
mov
das
testb
dec
push
dec
xchg
xchg
mov
mov
ficoml
fdiv
ret
rcrb
lods
ret
or
xchg
xor
push
xchg
push
xor
subb
jne
xchg
inc
pop
cld
mov
pop
xchg
xor
push
mov
push
or
xor
fdivs
sub
sbb
insl
push
jp
pop
iret
dec
inc
jno
pop
mov
push
pop
call
lahf
jb
mov
nop
mov
dec
sub
push
sub
popf
adc
add
mov
pop
dec
dec
xor
es
dec
xchg
sarl
mov
pop
xor
std
and
mov
es
ret
pop
daa
pushf
in
rclb
orl
xorb
push
test
xlat
sub
pop
jbe
jb
push
fs
outsl
popf
push
sbbl
jb
cli
mov
sbb
cli
or
daa
or
jae
arpl
push
xchg
jae
mov
aas
jb
into
jl
xchg
lcall
pop
adc
pop
xchg
mov
cmp
hlt
fdivrl
das
bnd
ror
jb
call
orl
push
mov
mov
lods
lock
adc
lods
out
shll
dec
mov
movsl
addl
mov
rcl
or
jp
mov
loope
pop
mov
mov
push
stos
inc
test
jns
int
je
fld
aam
lcall
jno
mov
daa
push
je
loopne
sub
in
cmp
fldenv
or
sub
loopne
or
or
pushf
inc
pop
icebp
xchg
ss
push
jg
nop
in
test
mov
inc
ucomiss
sub
xor
gs
or
int
aaa
cld
mov
fcomip
and
inc
push
sbb
lcall
bound
fcomps
punpckhbw
test
inc
sub
int
aam
in
cmpsl
fwait
mov
add
ret
inc
es
imul
mov
mov
and
scas
and
je
mov
es
mov
push
mov
xchg
test
out
push
nop
dec
adc
mov
mov
fwait
movsl
jge
jmp
mov
fnstenv
stos
pop
and
push
mov
or
imul
dec
lahf
or
dec
lret
outsb
xchg
shrl
das
pusha
pop
aad
mov
aam
rolb
stc
repnz
test
mov
push
ret
sub
fidivrl
pop
lock
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
jmp
in
aaa
mov
jo
jno
scas
nop
xchg
jbe
mov
jle
jl
jle
push
push
lahf
stos
xchg
imul
mov
pusha
addl
lds
shlb
jg
jge
xor
sbb
lret
outsb
sahf
sbb
lret
enter
std
mov
jmp
imul
es
mov
js
arpl
and
pop
addl
sub
repz
push
aas
cmp
dec
roll
cld
inc
repnz
or
jle
mov
cmp
in
xchg
inc
jp
inc
imul
xchg
dec
ss
xchg
sbb
xchg
lea
sti
aas
cld
adc
cmc
mov
or
lret
jmp
sbb
popl
add
outsb
lcall
fisubrl
cmp
xlat
push
loopw
mov
outsl
ja
push
dec
lret
ret
movsb
lret
xchg
mov
scas
add
pop
add
les
cli
xchg
inc
push
or
stos
pop
mov
pop
jp
inc
dec
sub
pusha
xchg
add
mov
cmpsb
mov
jno
sub
or
js
jo
push
rolb
repz
mov
pop
xchg
add
addr16
and
jae
and
icebp
jl
lea
lods
dec
loop
cmp
mov
call
adc
mov
scas
sub
mov
mov
cmp
int
scas
jmp
lock
xlat
and
mov
push
jle
lds
add
ljmp
sbb
cmp
jne
push
and
or
sbb
sub
mov
shll
jl
or
xchg
inc
ljmp
arpl
cmc
xor
xchg
mov
ficompl
mov
sub
dec
les
mov
add
xchg
xchg
xor
mov
mov
inc
mov
fnstenv
aam
das
mov
in
sbb
insl
aad
es
inc
adc
mov
fcmovb
cmp
repz
cli
adcl
add
cmp
mov
jmp
movsl
mov
add
add
cld
fnsave
aas
cltd
xor
add
loop
push
nop
test
je
pop
arpl
mull
adc
mov
int3
add
shr
xchg
cmpl
push
adc
cwtl
xchg
cmpsb
cltd
lods
jnp
ss
div
loope
popa
and
mov
or
es
mov
push
pop
scas
pop
inc
push
push
iret
adc
lods
inc
or
dec
lods
xorb
pop
sub
cmp
es
mull
das
test
loope
or
mov
out
idivb
fimull
xchg
add
add
push
add
mov
mov
xor
xor
add
add
jmp
push
dec
fcmovne
jecxz
jae
loope
add
adc
jle
data16
jle
sub
pop
push
cmp
cld
jnp
fs
push
repnz
xchg
iret
push
sbb
or
adc
je
jmp
mov
clc
sub
dec
stc
test
inc
push
pop
jle
inc
arpl
pusha
lcall
xor
pop
pop
sbb
lahf
or
mov
push
dec
lock
test
cs
xchg
mov
xchg
mov
dec
fdivrs
cmpsb
mov
lods
xchg
dec
rolb
rcrl
cltd
enter
add
lods
jno
sti
cmp
imul
jo
mov
jb
xor
nop
popa
or
inc
repz
aad
mov
xchg
ret
mov
adc
dec
jnp
jae
shlb
or
negb
pop
inc
cmp
adc
xchg
sub
loope
inc
dec
test
inc
das
and
arpl
jne
cltd
cltd
push
cmp
adc
fistpl
dec
jnp
movsb
mov
dec
cltd
test
dec
daa
mov
xchg
rol
andb
inc
jg
or
pop
pop
push
int
sbb
insb
sbb
test
mov
popa
lods
inc
push
jne
mov
cld
sbb
ret
sbb
icebp
pop
setle
shr
xchg
xchg
and
cld
pop
jge
jne
dec
movsl
pop
bound
push
add
mov
mov
or
and
lds
outsl
inc
stc
pop
xor
xchg
add
dec
xor
outsb
fnsave
cmp
ret
mov
adc
jl
je
xchg
jg
stos
cld
xor
mov
or
adc
outsl
or
and
fs
addl
lock
mov
pop
mov
das
xchg
adcl
je
fs
shl
ret
mov
js
mov
cli
fcomps
mov
xlat
mov
addr16
push
pop
adc
xchg
pop
cmp
xor
jge
sub
bound
icebp
mulb
sbb
xchg
fwait
lcall
add
push
sahf
sti
add
je
pop
jg
testb
icebp
adc
xor
adc
shll
sub
push
and
jne
jmp
popa
ljmp
jbe
inc
shlb
pop
cld
cmc
jmp
enter
add
jge
xor
mov
and
sub
push
jmp
pusha
ljmp
inc
adc
jecxz
mov
in
jnp
cmc
divl
mov
fwait
lcall
jo
push
mov
and
jnp
lds
fs
dec
mov
inc
mov
repnz
xchg
pop
outsb
xchg
push
mov
mov
ljmp
xor
lods
aad
scas
xlat
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
jmp
ss
cltd
sub
mov
icebp
sub
jecxz
adc
jle
data16
jle
sub
xchg
jae
ficoml
stos
cmp
mov
sub
lds
rorb
adc
lods
push
inc
ds
repnz
mov
inc
outsl
ret
jmp
and
pop
mov
movsb
jmp
imul
push
mov
xchg
cmp
mov
outsb
inc
xchg
adc
cmp
mov
decb
jns
sarl
fiadds
cli
aam
adc
mov
in
leave
adc
ds
mov
or
shll
test
shll
jno
popf
mov
xchg
xchg
movsl
roll
push
test
jmp
cld
ja
mov
jle
xchg
movsb
xor
cmc
xchg
lds
ss
push
es
mov
mov
xchg
sbb
pop
sarb
or
inc
hlt
ja
shlb
int3
lcall
push
test
jge
pminsw
insb
lods
nop
pop
mov
adc
push
sbb
stos
repz
inc
nop
sub
dec
stos
shrb
jp
lcall
jbe
ds
add
jmp
stos
into
ds
xchg
repz
lahf
daa
pop
loope
jnp
inc
xor
jne
cmp
cmc
in
adc
cmp
sub
add
mov
jne
faddl
push
ret
imul
jge
add
leave
add
xlat
out
je
gs
pop
mov
int
mov
int3
sbb
aam
or
int3
inc
repz
push
roll
jo
fstpt
xchg
repz
cmp
push
lods
test
loope
insb
icebp
push
mov
pop
into
ficomps
stos
out
adc
push
cs
push
das
or
fdivrs
ja
test
add
cwtl
popa
xor
push
ret
inc
push
je
out
mov
push
xchg
outsb
pcmpeqw
addl
and
and
in
inc
arpl
inc
mov
out
int3
mov
and
cmp
adc
xor
not
gs
mov
dec
inc
icebp
xchg
je
sub
movsb
enter
jne
je
push
outsb
mov
dec
add
inc
add
jecxz
mov
sub
and
int3
xchg
push
jge
mov
xlat
pop
ss
jmp
mov
dec
and
push
mov
jecxz
popf
enter
adc
ja
dec
into
cmp
mov
or
sub
cmp
push
sarb
rol
addl
pusha
pop
jb
push
fidivl
lret
pop
cmp
roll
stc
imul
mov
mov
sub
cmp
mov
jbe
mov
mov
xor
xor
add
add
imul
mov
mov
mov
mov
add
movl
mov
movl
movl
mov
xor
add
jmp
mov
xor
add
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
xor
jmp
fnstenv
sub
mov
jae
jns
xor
jl
jle
data16
jle
push
push
dec
sub
sarl
cmp
xchg
insl
ds
push
inc
adc
call
mov
cmp
das
stc
mov
xor
sti
mov
sti
fdivl
popf
shll
fmull
jns
in
xchg
adc
sahf
inc
adc
call
stc
push
in
adc
sub
subb
icebp
mov
enter
vpaddsw
addr16
ss
lock
scas
outsl
mov
xlat
inc
sbb
sbb
fwait
xchg
and
shll
push
mov
jbe
dec
loop
jbe
dec
sahf
loope
iret
push
mov
mov
xchg
pop
nop
fistps
xchg
mov
imul
rol
cmp
lgs
cli
or
jno
or
xor
insl
iret
pop
xchg
std
icebp
jecxz
movsb
dec
xchg
push
pop
repz
xchg
lret
push
mov
push
sub
ds
inc
repnz
pop
and
mov
xor
mov
dec
mov
sub
pop
out
in
daa
vmovq
adc
sbb
mov
imulb
roll
inc
mov
js
jns
jne
insb
das
test
and
cs
sbb
aas
das
dec
mov
mov
es
lret
sbb
inc
push
adc
hlt
mov
cmpsl
or
lahf
pop
jl
js
mov
sub
sbb
dec
sub
addl
into
mov
sbb
sbb
ficoml
fildll
push
inc
lret
mov
fdiv
mov
test
dec
imul
pop
mov
rclb
in
cli
or
jl
pop
lret
cmpsl
adc
fdivp
sbb
adcb
sti
and
testl
mov
push
push
es
int
fcomps
or
mov
jbe
push
pop
int
rclb
dec
xchg
mov
pop
mov
xor
sar
ss
and
clc
sub
mov
jbe
shlb
push
mov
cmpsl
imul
test
lahf
mov
dec
or
mov
pop
cwtl
lcall
add
aam
sub
aaa
insb
mov
aas
das
stos
cmp
push
fwait
sti
mov
scas
cmp
popf
cmp
jne
jecxz
ds
xchg
movsb
xchg
sbb
or
aam
cmpsb
jne
lret
push
gs
mov
sub
mov
sub
jbe
cmp
or
add
stos
ljmp
daa
xor
jge
mov
mov
mov
mov
jmp
lods
mov
jno
mov
stos
jb
push
stc
fisubl
jle
jl
jle
lds
pop
fsts
and
je
insl
adc
scas
inc
dec
hlt
push
add
rcll
les
imul
cmc
jne
cmpl
mov
pop
inc
int
rcll
in
ljmp
pop
movsl
push
dec
std
or
pop
cli
repz
daa
mov
stos
push
sub
shl
mov
push
xor
in
js
scas
mov
ud0
mov
je
push
rorb
sarl
aam
or
mov
xchg
sbb
mov
pop
inc
mov
mov
imul
xlat
popl
addb
jo
test
in
in
lret
sub
rorl
enter
lock
js
popf
inc
cmp
jb
mov
gs
sbb
gs
stos
bound
mov
mov
test
xchg
shll
inc
and
cwtl
sbb
cld
lcall
fmul
das
in
xchg
mov
rorl
movsb
mov
jmp
adc
hlt
push
ja
insl
or
cltd
fists
or
mov
lods
mov
mov
loope
mov
ljmp
cli
shlb
jp
movsl
outsl
xchg
in
and
movsb
push
xor
pop
pushf
dec
daa
xor
xchg
insl
pop
inc
push
cmc
rcrb
and
jle
cmpsl
outsl
dec
xchg
rorb
in
mov
test
sbb
push
push
xchg
push
jl
es
xchg
test
inc
cli
addl
inc
outsb
jae
xchg
add
sbb
fbld
dec
addl
insb
push
jl
jp
jle
xor
or
adc
dec
js
mov
in
pop
bound
jb
call
bound
pop
in
inc
xchg
sahf
push
and
ret
sub
mov
dec
sub
mov
pop
push
push
jge
mov
pop
add
push
popa
mov
test
cmp
push
ds
cmp
aaa
sbb
dec
jp
fldl
mov
xchg
inc
jg
and
jo
cli
pop
lods
dec
mov
dec
pop
les
sbb
gs
mov
mov
test
mov
push
insl
fimull
leave
dec
orb
les
pop
sub
xchg
push
dec
in
or
daa
push
call
and
push
sub
adc
sub
je
adc
xchg
push
shlb
out
hlt
loopne
sbb
test
inc
bound
push
xlat
sub
push
fstl
and
cs
cmp
add
add
imul
add
jmp
xchg
lods
mov
mov
jae
bound
xchg
or
jle
jl
jle
js
xchg
cmp
shll
push
js
imul
xchg
mov
hlt
mov
or
in
cmp
jb
leave
aaa
cmp
xchg
mov
int
xor
popf
pop
mov
cwtl
add
or
outsl
out
push
lods
xchg
aad
out
popa
push
sub
or
or
sub
cwtl
ret
adc
push
flds
mov
popa
sub
push
gs
mov
enter
movsl
dec
fs
xor
xchg
cli
daa
cs
les
and
sub
fwait
cmp
addb
fs
bound
call
sbb
fmuls
xchg
shll
and
lock
jb
test
mov
xor
cmpb
cmp
and
lea
rcrl
ret
adc
stos
insl
jle
outsl
pop
mov
pop
aaa
insl
ds
ja
sahf
addr16
inc
and
push
cmp
imul
stos
xchg
sbb
xlat
or
lods
or
test
push
inc
mov
aam
mov
inc
inc
in
loopne
loopne
fcmovnb
mov
je
xchg
xor
lock
adc
pop
xor
mov
mov
imul
nop
adc
inc
inc
xchg
pushf
mov
repnz
or
adc
test
mov
ja
bound
incb
jmp
flds
les
mov
incl
push
mov
call
adc
inc
xor
dec
lret
mov
call
loopne
jp
fwait
cmp
or
xchg
repnz
sahf
xchg
sbb
push
and
aad
int
and
pop
pop
inc
sub
inc
lea
sarl
enter
adc
mov
mov
stos
lret
cld
sbb
lcall
mov
movsl
dec
add
or
out
iret
into
into
sahf
loopne
das
pusha
dec
int
fisubrs
mov
jp
shlb
add
ds
aas
or
xchg
cmpsb
mov
xchg
out
aam
icebp
rcrb
lret
js
cmp
out
xchg
mov
push
pop
pop
insl
and
cld
loope
test
sub
jecxz
xchg
iret
xchg
scas
sub
lcall
ljmp
push
test
int
sbb
cmpsb
adc
bound
jae
jecxz
cmpl
sub
sub
ljmp
lret
cltd
cli
int
xor
addb
mov
sbb
sbb
push
lods
xor
cld
lock
mov
rcrl
sbb
pop
push
inc
fwait
mov
and
popa
cli
push
movsb
int3
jg
push
in
mov
mov
xor
add
jmp
cld
jmp
adc
inc
jno
faddl
stc
mov
jle
data16
jle
mov
enter
mov
cmp
movsb
scas
dec
push
loopne
inc
mov
stos
rorl
mov
add
repnz
pop
and
sbb
mov
stc
pushf
xlat
or
pop
sbb
cmp
mov
pop
or
dec
push
in
iret
mov
adc
cld
mov
aad
push
adcl
adc
pusha
lds
pop
aaa
shlb
adc
mov
ds
stos
xchg
dec
xor
push
xlat
xchg
pop
popf
cltd
or
shlb
sub
xor
or
stc
mov
in
or
dec
jno
sbb
cmp
jge
sarl
mov
repnz
outsl
mov
xchg
sbb
or
add
or
js
call
or
cmp
pop
xchg
jo
pop
sarb
and
pop
lret
leave
ret
add
and
daa
je
lock
xchg
repnz
sub
pop
cmp
out
in
jle
ret
pop
test
pop
pop
push
leave
jmp
stos
jns
jno
cmp
cmc
jmp
xchg
call
lahf
popa
outsl
pop
push
lret
addl
inc
outsb
xor
insl
add
sub
shrb
inc
xchg
xchg
mov
jg
push
cmp
mov
aas
push
fs
sub
mov
pusha
test
jne
sub
repnz
jp
sbb
cmpsl
shl
lds
xor
popa
add
jl
xchg
pusha
adc
ss
mov
mov
mov
or
movsl
dec
cld
adc
addr16
jo
das
inc
faddl
pop
stc
jmp
or
outsl
fnsave
and
mov
push
lret
dec
adc
test
fcompl
bound
fidivs
orb
pop
sbb
xchg
out
and
shrl
stc
mov
fisttpll
pop
ljmp
inc
inc
fdivr
stos
cmp
cmpsl
and
je
push
pop
dec
mov
xor
mov
data16
stos
cli
jg
out
mov
fwait
dec
mov
and
out
sarb
dec
hlt
iret
add
xor
xchg
pop
jecxz
lahf
lods
bound
xor
jns
loop
or
push
aaa
sbb
push
dec
pop
mov
mov
inc
das
leave
sbb
ljmp
sbb
pop
cmp
pop
inc
rcll
pop
scas
insl
stos
in
mov
mov
lock
mov
mov
movsl
popa
mov
dec
in
sbb
in
cwtl
dec
pop
mov
jnp
adc
push
arpl
cwtl
shrb
fmuls
or
add
imul
mov
xor
sub
mov
jmp
sbb
cmpsl
pop
mov
loope
xchg
or
mov
data16
jle
jno
ret
mov
adc
sbb
push
out
inc
mov
push
pop
enter
outsl
mov
or
inc
ja
out
add
pop
xchg
lods
hlt
adc
or
mov
daa
ljmp
xorl
mov
or
jnp
fsts
mov
cltd
jl
enter
outsb
xor
cmp
es
jp
leave
rorb
clc
dec
incb
or
lods
adc
insb
into
lret
jp
popf
inc
mov
or
jmp
mov
iret
mov
jbe
gs
sbb
cmp
xchg
cmp
xor
mov
add
or
or
sti
push
daa
leave
loop
popf
jl
sub
push
inc
xchg
push
xchg
aaa
sbb
adcb
hlt
aad
stc
loope
lods
dec
lret
adc
out
dec
dec
and
es
pop
add
fcoml
int
jae
or
dec
jmp
push
aad
inc
push
add
lahf
xor
in
sbb
into
test
xchg
movsl
testl
cmc
mov
mov
mov
lea
adc
out
sub
out
mov
test
mov
dec
inc
jno
test
stos
dec
jnp
jne
cwtl
scas
test
loope
jbe
sti
lock
aas
test
repnz
lds
decl
adc
sahf
fwait
xor
pop
test
hlt
push
dec
mov
xor
adc
pushf
sub
rorb
jp
cmp
arpl
cltd
cld
pop
jecxz
jle
shrl
pop
subb
rol
mov
daa
cmp
pop
and
push
xor
pop
jle
outsb
sbb
rcrb
iret
push
fbld
dec
clc
aad
jne
in
cmp
aad
ret
and
add
jno
jae
ficompl
int3
aam
cmpsb
inc
pop
aam
or
scas
xor
scas
pop
and
mov
sbbb
loopne
mov
jo
adc
arpl
inc
ja
testb
jle
cltd
pop
jno
insl
or
loop
push
jmp
mov
fmulp
int3
hlt
lcall
negl
int
sub
in
popf
ja
iret
inc
or
les
add
fidivrl
repnz
or
dec
popa
mov
push
shr
dec
jae
movsb
xchg
inc
sub
push
pushl
clc
mov
jne
mov
mov
es
dec
insb
cwtl
jge
adc
pop
test
and
lods
stos
sbbl
movsb
icebp
and
xor
lock
xchg
jno
jae
rcll
addr16
mov
xor
add
imul
mov
xor
sub
lea
cmp
jbe
mov
mov
xor
jmp
rcrl
popf
and
scas
vandpd
mov
data16
jle
jno
pop
jmp
mov
in
pop
in
ficomps
cmp
rcrl
out
mov
mov
jp
incl
fdivl
pop
jb
rcr
pop
in
xor
pop
rol
ss
mulb
jns
int3
jno
test
xchg
in
and
pop
xchg
xchg
mov
push
xchg
bnd
dec
cwtl
sti
mov
incl
mov
push
push
xchg
dec
push
dec
iret
pop
xchg
add
cmp
xchg
pop
lods
jns
mov
lock
out
xchg
cmp
icebp
repnz
cld
jns
adc
xchg
repz
pusha
pop
mov
call
jns
lahf
scas
sahf
andl
nop
xor
jg
xchg
jne
fs
push
cmpsb
cmpsb
mov
xchg
or
nop
add
add
imul
lods
xchg
lock
dec
sbb
or
sub
je
loop
mov
xorl
shlb
mov
cmp
and
jns,pt
imul
sub
es
inc
cmp
or
and
push
add
adc
outsl
sbb
sbb
sub
ret
jne
popf
mov
push
fidivrs
cwtl
icebp
cmpsb
pusha
in
mov
mov
aad
das
xchg
mov
push
pop
leave
out
cmc
sub
packsswb
and
psllq
push
jb
loopne,pt
sub
mov
push
cmp
aas
ret
out
addr16
cli
bound
loope
xchg
mov
sub
and
adc
mov
shl
fldcw
mov
push
mov
push
test
shrl
push
cmp
imul
cld
pop
imul
jb
pusha
pop
inc
or
imul
pop
fimuls
fisubl
arpl
xchg
scas
vmwrite
xlat
and
lcall
aad
ficoml
cli
mov
lret
xor
loop
or
pop
xchg
dec
dec
adc
dec
jns
repz
lods
adc
je
loop
bound
and
sar
popf
fdivr
sub
mov
pusha
inc
sub
and
pop
xor
or
out
and
call
cli
cmp
into
js
xchg
ficoml
cs
adc
jne
outsl
loop
cmp
inc
loope
push
push
imul
gs
pop
rcll
inc
cwtl
or
scas
mov
push
sub
data16
mov
push
xchg
int3
xchg
nop
jle
outsb
add
cmpsl
fcmovu
mov
es
out
push
insl
mov
stc
adc
stos
pop
mov
mov
mov
lock
sub
mov
xlat
mov
jmp
shrl
mov
loopne
cli
pushf
mov
fnstsw
in
xchg
jle
data16
jle
enter
loope
cwtl
mov
ja
fldl
cmp
dec
filds
xor
lods
mov
mov
pop
ret
sub
data16
xchg
or
imul
cmp
push
xor
dec
dec
and
mov
daa
cmp
repnz
mov
lock
pop
mov
data16
loope
inc
pop
add
mov
je
aas
ss
sub
fbld
mov
mov
je
mov
push
or
icebp
and
jbe
mov
fst
daa
arpl
pop
cmp
out
lret
xor
mov
lds
fiaddl
rcr
cmp
and
sbbl
jge
fisttpll
jno
test
out
pop
pop
push
push
lea
cmp
jno
inc
inc
cs
daa
rcl
std
hlt
jbe
sub
lret
jmp
jno
jne
shll
jbe
xor
xchg
lcall
pushf
mov
push
pop
jle
add
add
aad
sub
shlb
dec
repz
dec
sbb
lcall
test
add
mov
xor
jle
push
call
cmp
pop
mov
insl
push
sub
add
negl
mov
imul
cmp
lcall
mov
dec
repz
mov
aad
sub
in
iret
xchg
inc
jne
jae
adc
sub
adc
ja
cmpsl
push
lds
js
cs
sbbl
push
mov
jns
push
push
ss
mov
inc
dec
sub
pop
push
mov
mov
xor
pop
add
inc
es
bnd
in
movsb
inc
mov
in
jg
mov
cmp
mov
cwtl
insl
mov
lds
cmp
aaa
xchg
mov
sbb
aad
enter
adc
js
enter
and
sub
pop
pop
lahf
loope
stc
gs
inc
adc
mov
sbb
dec
xchg
add
subb
adc
sahf
lds
pop
testb
nop
lcall
cld
popa
jmp
jae
sub
sbb
push
cmp
sbb
xchg
cmpsb
gs
jmp
xchg
sub
ja
push
pop
xchg
xchg
mov
rcl
mov
cmc
sub
shl
jns
pop
call
mov
or
xchg
insb
lods
jp
call
imul
sbb
sahf
mov
mov
lea
mov
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
pop
pop
leave
ret
push
mov
sub
call
andl
xor
movl
cmp
jne
movl
cmp
movl
jne
orl
push
addl
call
push
movl
push
andl
push
call
test
movl
je
sbbl
lea
orl
push
movl
movl
subl
movl
subl
movl
orl
call
orl
test
je
decl
xor
jmp
sbbl
push
andl
push
push
call
movl
jmp
adcl
push
call
sbbl
test
movl
jne
push
mov
add
mov
movl
adc
lea
mov
xor
lea
dec
mov
xor
mov
notl
mov
add
mov
mov
adcl
push
sbb
mov
movl
xor
push
xor
mov
adcl
add
mov
mov
cmp
mov
mov
je
andl
mov
xorl
xor
add
imul
mov
movl
jmp
addl
xor
add
mov
adcl
mov
xor
movl
cmpl
je
cmpl
jne
pushl
call
xor
add
dec
mov
jmp
movl
cmpl
je
cmpl
jne
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
addl
add
sub
mov
movzwl
and
mov
addl
mov
xor
add
movl
cmp
movl
jne
subl
pushl
subl
pushl
subl
call
negl
mov
mov
orl
mov
mov
or
mov
andl
xor
xor
inc
mov
cmpl
jne
pushl
push
call
cmpl
jb
mov
addl
mov
mov
mov
sbb
mov
mov
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
xor
movl
movl
cmpl
je
cmpl
jne
pushl
call
cmpl
jne
xor
add
dec
mov
mov
dec
mov
jmp
adc
mov
sub
mov
addl
mov
subl
xor
addl
xor
add
mov
andl
xor
andl
xor
add
movl
lea
cmp
movl
ja
mov
orl
xor
lea
orl
push
movzbl
xor
mov
mov
addl
xor
lea
adcl
push
xor
xor
sbb
mov
addl
pushl
call
mov
xor
lea
mov
mov
xor
xor
add
mov
xor
lea
cmp
jbe
mov
mov
mov
mov
mov
mov
mov
sub
xor
mov
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
pushl
mov
pushl
add
mov
mov
pushl
call
mov
mov
mov
jmp
mov
mov
xor
add
cmp
jne
mov
xor
add
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
mov
movl
mov
xor
add
mov
mov
mov
mov
mov
mov
push
pop
sub
add
movl
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
lea
mov
mov
xor
add
mov
lea
push
mov
xor
add
push
mov
push
pushl
call
xor
mov
sub
push
mov
add
push
call
inc
cmp
jb
mov
call
lea
mov
mov
mov
pushl
lea
push
call
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
dec
jmp
pop
lods
xchg
je
jo
mov
mov
mov
fstpl
xchg
jle
push
jl
jle
xlat
pop
lret
mov
mov
mov
sbb
pusha
xchg
scas
dec
bound
mov
cmpsb
in
sub
sub
out
movsb
adc
mov
jbe
ret
mov
addr16
or
adc
mov
or
inc
ja
mov
and
int
pop
sbb
mov
in
dec
hlt
dec
lock
mov
mov
sub
fldcw
popf
js
mov
adc
stos
add
pop
lods
fcompl
popa
pushf
out
cmc
dec
leave
dec
adc
stc
add
adc
sub
cli
xor
gs
repnz
aad
shll
pop
inc
push
gs
jae
lret
push
and
mov
adc
pop
adc
dec
and
sub
mov
popa
sub
adc
divb
or
mov
sbb
push
jl
xlat
pop
cli
decb
sahf
js
ret
dec
cmp
movsb
fimull
jmp
sbb
dec
mov
push
loope
inc
dec
out
aam
jecxz
xor
dec
stos
aad
sti
cwtl
stc
sti
lahf
in
mov
push
icebp
iret
and
push
addr16
sbb
and
out
dec
or
cmp
lea
mov
mov
test
std
add
stos
hlt
mov
lods
daa
xor
dec
xchg
push
andl
inc
jl
aaa
movsb
das
lock
shrl
xchg
test
ljmp
shrb
sbbb
rorb
sti
test
xchg
clc
mov
cmp
pop
jno
mov
movsl
dec
das
insb
push
inc
push
stc
out
sub
insl
aaa
mov
aam
scas
fcompl
sbbl
test
daa
jmp
mov
lret
cld
and
int
aaa
pop
xor
lret
xor
int3
add
cld
les
mov
or
sbb
push
dec
pop
in
xchg
icebp
mov
incl
mov
movl
cmpl
je
cmpl
jne
push
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
pushl
call
jmp
movl
cmpl
je
cmpl
jne
pushl
pushl
pushl
push
push
pushl
push
push
pushl
pushl
pushl
call
xor
add
dec
mov
jmp
mov
movl
cmpl
je
cmpl
jne
push
pushl
call
xor
or
dec
mov
jmp
and
mov
sbb
mov
subl
push
adc
push
mov
andl
mov
inc
mov
cmpl
jne
pushl
pushl
call
cmpl
jb
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
jmp
push
mov
adc
add
sbb
mov
notl
lea
xor
mov
mov
add
mov
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
push
push
call
cmpl
jne
mov
inc
mov
jmp
jmp
arpl
jae
jno
lret
add
in
jle
push
jl
jle
cmp
out
mov
cmpsl
sarl
out
cmp
arpl
aaa
sub
push
push
adc
nop
inc
cmc
ret
sub
inc
lock
sub
xchg
fadds
dec
pop
xchg
stos
xor
sub
xlat
xchg
aaa
cmovne
pop
imulb
add
cs
enter
pop
stos
insb
test
hlt
inc
add
xor
adc
push
xchg
sub
sahf
leave
cmp
addr16
sbb
cli
add
in
sbb
popw
pop
into
mov
sti
repz
or
fwait
pop
push
jmp
mov
push
or
dec
add
mov
loope
push
cld
in
xor
add
andl
rorb
clc
aas
aas
jno
push
push
cmc
movsl
and
inc
lcall
push
push
insl
inc
dec
icebp
fwait
outsl
pop
xchg
rcll
lea
jmp
mov
xor
ja
sub
or
push
push
rcrl
pop
in
mov
add
outsb
push
outsl
daa
adc
and
or
adc
inc
mov
setp
ret
inc
or
mov
pop
ret
test
xchg
push
push
sub
or
add
stos
jp
mov
ret
adc
in
subl
jmp
and
nop
push
mov
sahf
arpl
adc
scas
lock
fnstsw
sub
cmpb
gs
int3
sub
hlt
test
sub
mov
inc
adc
clc
or
lret
mov
mov
cwtl
mov
xor
and
cwtl
sarl
lahf
xor
jno
call
stos
cmc
fnstcw
xor
mov
jle
hlt
scas
pushf
in
push
outsl
addr16
jns
lcall
das
inc
negl
movsb
dec
les
test
std
push
stos
add
mov
movl
lea
andl
mov
inc
mov
cmpl
jne
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
mov
jmp
pusha
imul
cmc
mov
stos
insl
push
xchg
jle
push
jl
jle
push
aas
pop
mov
xchg
cmpsl
jo
mov
sub
adc
adcl
enter
push
outsl
vdivps
cwtl
ret
aas
out
xor
adc
sub
scas
fcmovnb
dec
and
sarb
loop
push
stos
sarl
add
rclb
das
cmp
popa
jnp
pop
repnz
cmc
pop
sub
pop
sbb
cmp
outsl
cmpsb
xor
jl
mov
push
imul
pop
icebp
mov
xor
lcall
in
repnz
imul
mov
ficomps
adc
sarb
data16
cld
push
adc
xchg
dec
jle
fstps
jnp
xchg
inc
push
bound
fcmovnu
and
stc
push
int
jbe
jbe
xlat
pushf
jecxz
inc
test
mov
mov
inc
xorl
push
in
fisttps
mov
and
loop
ret
sar
sbb
sbb
sbb
dec
mov
sbb
adc
sbb
popf
lcall
xchg
adc
rorl
fimuls
push
clc
inc
sbb
dec
adc
xorb
mov
sbb
jle
dec
mov
jg
stos
cs
in
push
fadds
aad
out
sbb
xor
fldl
pop
shll
push
or
dec
aas
sar
pop
mov
popf
into
je
inc
mov
pop
xchg
pop
xor
adc
les
push
fsubs
orl
mov
rdmsr
jmp
add
and
sub
aam
sub
jle
dec
dec
mov
xor
lret
push
pop
add
stos
mov
xrelease
push
cwtl
jo
pop
rcrb
aas
rorl
cli
loop
in
inc
sahf
shrl
xchg
mov
mov
xchg
inc
sbb
and
repnz
adc
push
inc
dec
xor
mov
xor
add
mov
mov
mov
mov
mov
mov
movzwl
add
movl
mov
mov
mov
xor
add
jmp
or
das
mov
push
test
rcll
jle
push
jl
jle
call
jl
cs
push
and
push
or
int
bound
pop
faddl
add
sub
mov
cs
negl
sub
iret
inc
jl
inc
inc
pop
jne
lods
mov
pop
push
mov
sub
mov
jle
test
push
aas
cmp
push
and
loopne
insb
xchg
and
test
in
fwait
repz
inc
int3
js
movsl
jne
loopne
mov
jl
pop
jno
div
pop
je
jp
sub
mov
or
xchg
xlat
mov
mov
sbb
insl
mov
and
mov
rcl
lock
nop
cli
outsb
dec
lods
inc
xor
xlat
xchg
cmc
dec
pop
jbe
in
dec
push
push
daa
fidivl
push
push
es
leave
inc
xchg
pop
pushl
mov
sub
jno
in
or
and
fs
or
incb
testl
cmp
lds
imul
pop
mov
repnz
xlat
cmp
and
mov
sahf
cltd
pop
xor
mov
or
bound
inc
into
or
add
cwtl
pop
addl
cmp
addr16
pop
fadds
jo
fidivl
jno
sub
push
aaa
mov
xchg
xchg
adc
icebp
out
sub
push
ret
scas
js
out
in
test
or
dec
mov
jmp
xchg
clc
mov
mov
pushf
push
dec
mov
ret
shlb
inc
lods
xor
xor
cltd
outsl
mov
loopne
ss
in
int
xor
sub
call
xchg
rclb
hlt
ret
arpl
mov
das
mov
in
jle
arpl
andl
sbb
or
shrb
daa
cmp
jmp
sbbb
cltd
jno
jo
and
jbe
popf
jle
push
jl
jle
jo
xchg
stos
icebp
int
sbb
aad
rolb
or
inc
jne
pushl
lcall
in
push
or
and
cltd
pop
xor
adc
cmpsb
sti
test
outsb
or
cmc
int3
adc
jg
rcll
xor
xchg
xchg
stc
mov
mov
push
scas
jp
lock
pushf
mov
mov
mov
shr
pop
mov
fld
test
aas
out
fiadds
mov
enter
xchg
fldt
aad
lret
sbb
mov
aaa
or
sub
or
inc
mov
notl
adc
push
movsl
mov
mov
out
test
jns
sar
xor
out
sbb
call
mov
daa
call
mov
jae
sbb
mov
lods
dec
shrb
add
fdivs
sub
mov
sub
dec
mov
pop
sahf
mov
fsubs
bnd
lcall
inc
loop
cli
or
jl
leave
imul
es
adc
dec
or
stos
push
adc
xor
pop
in
sarl
cmp
fistpll
jl
sti
and
pushf
mov
imul
ret
lret
sbb
dec
repz
sbb
test
repnz
bound
jns
xchg
mov
sahf
cmpl
mov
adc
cmp
outsb
jne
xor
pop
pop
cmp
adc
inc
insb
and
and
jg
ret
vmovntdq
test
andb
push
sbb
cmp
in
inc
xchg
out
testb
xchg
push
sbb
jl
out
mov
and
in
dec
ds
loop
cmc
inc
cmp
outsl
daa
adc
pusha
dec
in
cmpl
out
lret
cmp
sbb
mov
icebp
pop
push
gs
fidivrl
test
or
add
sub
add
xchg
mov
icebp
inc
cs
pop
push
icebp
cmpsl
andl
add
aas
cld
rol
ljmp
int
stos
movsb
enter
sub
mov
cmpsl
sub
push
in
js
xor
mov
push
fiaddl
xchg
hlt
stos
and
pushf
and
mov
out
pusha
cwtl
sbb
sbb
push
pavgw
sbb
mov
mov
sub
aas
sbb
cmp
or
push
pop
inc
int
je
in
push
out
dec
fdivrs
xor
inc
dec
insl
dec
lcall
dec
jmp
adc
add
aaa
sbb
inc
mov
ret
cmp
lret
sbb
ret
adc
add
mov
nop
sti
jl
dec
lea
mov
mov
xchg
or
mov
xchg
ljmp
cmpsb
fsts
aam
cmp
insl
pop
jne
xchg
xchg
xchg
movsb
popl
subb
outsl
notb
and
sub
dec
es
inc
fistl
push
fld
fidivs
xchg
xorb
mov
xchg
lea
push
adc
js
mov
add
dec
shrb
repnz
stc
test
cwtl
popa
mov
jno
je
jbe
adc
xchg
sbb
dec
xchg
xor
flds
or
pop
shl
push
aam
inc
push
inc
sahf
xchg
fucom
lods
and
cmp
mov
cmp
xchg
dec
arpl
jmp
insb
mov
int
sub
jle
int3
jo
sub
pop
xchg
jle
xchg
test
jle
or
jg
hlt
mov
sub
ret
mov
add
jl
add
pop
int3
mov
adc
sti
scas
fstp
xor
sbb
les
push
sub
mov
xchg
es
pushf
and
xor
es
aam
lea
enter
and
pop
dec
pop
lea
push
push
pop
or
xor
dec
inc
push
adc
cmpsl
std
mov
mov
xor
add
cmp
jmp
dec
iret
lods
dec
lods
imul
inc
addr16
fnsave
jle
push
sbb
fdiv
pop
loope
adc
xchg
call
cmp
push
dec
jbe
or
xchg
pop
add
dec
jne
xor
outsb
dec
fists
or
cmp
enter
dec
lret
cli
sub
and
mov
pop
xor
test
loope
push
test
xor
jge
dec
xchg
add
iret
mov
and
mov
dec
loope
dec
fbstp
mov
mov
lahf
adc
xchg
rcrl
movsb
jns
lock
mov
shrl
sub
mov
xchg
lret
sub
sub
fmul
dec
xchg
ss
dec
push
imul
inc
in
pop
mov
adc
outsl
sbb
and
jge
shl
leave
and
in
stc
out
mov
pop
add
insb
icebp
pop
push
test
out
and
mov
cmpl
xchg
sub
sub
adc
jle
dec
in
xor
fisubl
pusha
jb
stos
pop
fwait
cmp
adc
sbb
mov
mov
mov
mov
gs
stos
inc
xchg
das
jl
mov
mov
mov
xchg
xchg
cmp
and
sbb
sahf
cs
xchg
cmp
lret
xor
xor
mov
and
xlat
aam
jge
cmp
pop
gs
jecxz
pop
xchg
mov
pop
jae
mov
push
adc
push
repz
ret
stos
sub
mov
mov
push
and
repz
xor
adc
mov
es
maxps
enter
sahf
hlt
pop
adc
out
cli
jo
arpl
cltd
dec
cmp
mov
lahf
push
add
or
fsts
and
mov
adc
jne
ret
scas
push
test
inc
or
add
mov
mov
mov
xor
mov
sub
add
mov
mov
mov
movzwl
add
jmp
lret
mov
or
and
jmp
lds
jle
jl
jle
dec
mov
xchg
js
cmpsl
mov
sbb
xor
pop
push
repz
add
ret
cmp
mov
out
lcall
mov
mov
fcmovbe
repnz
lcall
pop
js
dec
cs
ret
xchg
and
adc
das
jno
scas
cmc
loop,pn
test
mov
xchg
xchg
xor
lret
sarl
rcrl
or
adc
mov
addb
das
popf
fimull
in
push
mov
sarb
nop
cmp
xor
add
mov
roll
adc
out
addr16
mov
xor
sbb
je
fsubl
cmp
jmp
sahf
movsb
shlb
loope
or
push
add
jno
mov
cmp
adc
mulb
in
movsb
and
cmp
scas
add
xchg
mov
jb
mov
xor
dec
push
cli
scas
dec
cmp
je
mov
cltd
bound
nop
push
jecxz
fbld
mov
cmpsl
lea
sbb
out
stos
xor
and
idivb
data16
hlt
mov
into
sub
jnp
mov
pop
cwtl
scas
push
sub
jl
outsl
push
fsubl
add
mov
data16
hlt
xchg
sti
dec
mov
in
mov
xor
cwtl
insl
dec
dec
out
jmp
cwtl
jnp
sub
fcoml
fnclex
and
sarb
xchg
std
pop
adc
in
ja
mov
mov
inc
repz
std
pushf
mov
push
jno
lock
cmpsl
daa
repz
out
xchg
jnp,pn
jo
mov
jmp
lock
push
xor
in
cmp
dec
in
adc
je
jge
xlat
jmp
pop
pop
sbb
test
mov
negl
fchs
insl
mov
mov
mov
xor
add
xor
sub
mov
movzwl
sub
cmp
jmp
popa
ja
add
xorl
inc
mov
xchg
push
movsl
jle
push
jl
jle
sub
lret
hlt
adc
sbb
in
mov
dec
pop
inc
xchg
test
sbb
or
repz
les
jge
mov
and
out
pop
sub
in
and
cs
push
cmp
ds
pop
adc
fcompl
int3
aaa
inc
out
fmull
xor
pop
or
jae
es
sbb
jbe
sbb
push
fndisi(8087
int3
xchg
jle
aad
cwtl
add
aam
xor
gs
and
and
mov
out
dec
jne
fsubp
jae
add
enter
fisubs
mov
cwtl
mov
bound
imul
push
je
addr16
ret
ret
or
xorl
aam
aam
ret
pop
dec
mov
out
jle
mov
fs
jg
or
jb
sbb
add
repz
dec
aam
dec
add
pushf
or
shlb
out
hlt
fistps
int3
in
xor
or
pop
cmp
ret
out
jge
pushf
in
jl
push
adc
add
sti
xchg
insb
mov
push
xchg
xor
xchg
aad
jp
repnz
fsubs
negl
test
fstps
mov
ret
add
popl
lcall
xchg
inc
or
push
fsubs
fwait
imul
adc
sub
lret
pushf
je
js
mov
inc
cs
mov
inc
movsl
sbb
ja
clc
jge
notb
and
icebp
das
jl
dec
push
mov
lods
or
pop
pop
outsb
roll
cmp
xchg
adc
mov
and
xor
out
dec
stos
nop
lods
loop
int
mov
mov
inc
in
arpl
daa
mov
mov
pop
dec
das
mov
outsb
inc
ret
xchg
aas
js
sub
or
cmp
fildl
cli
fcoml
sub
arpl
xchg
movb
in
movzwl
jg
xor
sub
sub
mov
jmp
xor
lea
mov
mov
cmp
je
mov
movl
jmp
jmp
cli
subb
cmc
stos
inc
push
jo
inc
inc
mov
sbb
mov
jle
adc
or
cltd
in
jmp
xchg
inc
sbb
test
test
mov
sarl
icebp
das
push
and
mov
mov
xchg
lcall
cmpsb
push
comiss
lcall
xor
sti
adc
sbb
sbb
call
sti
cmp
jno
test
adc
pushw
rcrb
pop
or
mov
adc
and
jecxz
adc
pop
loopne
inc
mov
cwtl
leave
jle
pop
jecxz
es
addr16
stos
jne
mov
jecxz
cmp
loop
adc
mov
addr16
les
movsl
mov
gs
or
test
filds
push
jl
rorl
testb
lcall
lods
sbb
sub
enter
lea
mov
ret
hlt
jmp
inc
movsb
pop
repz
test
cmpsl
cmc
pop
loop
ret
sub
inc
mov
roll
xor
test
inc
out
dec
jge
jp
js
pop
subl
mov
das
jge
cli
xor
mov
and
or
cltd
aas
cltd
fs
cmpb
popa
mov
je
add
adc
pop
inc
xchg
or
outsl
or
lret
and
in
xchg
in
xor
mov
lret
fcmove
cltd
mov
ret
adcl
fimuls
or
mov
cmp
shlb
sub
into
jo
loop
clc
or
pop
in
cwtl
xor
xchg
sbb
cmc
stos
in
pop
pop
rolb
daa
sub
cmpsb
movsb
mov
jp
sub
rcll
lcall
jno
movsl
stos
mov
addl
xchg
cmpsl
fimull
mov
in
mov
fcmovu
pop
dec
xor
cli
in
xchg
mov
mov
xor
add
jmp
rcrb
gs
icebp
cltd
mov
and
inc
pusha
stc
push
push
jl
jle
or
mov
pop
stos
jg
mov
xor
or
or
rcrb
xlat
pop
stc
out
fisttps
fsubrs
mov
inc
mov
mov
push
test
cwtl
cwtl
int
dec
int3
and
rcll
mov
icebp
xchg
arpl
mov
ljmp
mov
out
dec
sbb
jne
fwait
scas
xor
mov
out
rolb
sbb
jb
std
mov
mov
mov
fst
fists
jmp
push
push
xor
int
in
lods
adc
test
ret
repz
popf
rcrl
hlt
mov
inc
jecxz
stc
ds
push
jne
rcrb
fidivrs
pop
in
ss
xchg
jmp
setle
jo
adcb
in
jl
mov
iret
xlat
rcll
pop
fs
push
inc
test
mov
lock
mov
movb
sub
lock
hlt
sbb
inc
sbb
sarl
clc
mov
ret
cmpl
shrl
sub
inc
and
fcmovnbe
lret
push
ss
mov
dec
lea
fstpt
outsb
stc
jp
out
dec
xchg
aaa
ficompl
sbb
subl
mov
sbb
dec
cmpl
fcomp
push
sub
xchg
mov
lds
mov
pop
and
xor
les
cmc
sbb
push
pushf
push
mov
lods
lahf
imul
pop
xor
incb
test
push
rorb
fsubrs
stos
insl
out
cltd
and
pop
fwait
les
test
pop
cmpsl
inc
or
ret
xor
subl
pop
inc
sarb
sub
pop
out
mov
jecxz
mov
mov
test
divb
mov
mov
jmp
cmp
je
mov
mov
mov
mov
jmp
js
sbb
cltd
ja
jno
cli
xor
xor
jle
push
jl
jle
ds
in
lret
xor
cwtl
cs
xor
xor
xchg
inc
daa
dec
popa
imul
pop
aas
aaa
adc
xor
mov
je
jl
mov
xor
mov
rclb
pop
or
sti
sub
into
and
clc
jae
loope
xor
and
fucomp
sbb
popa
jbe
fwait
or
push
inc
into
push
xchg
fs
mov
popf
mov
das
lret
icebp
mov
add
cmc
cs
sbb
mov
pop
push
cs
in
add
push
mull
ja
xchg
push
ret
ficompl
mov
das
mov
dec
jg
adc
xchg
sahf
sub
fdiv
pop
out
out
jp
popa
stc
or
leave
in
ret
mov
pop
out
js
pop
ret
loop
sub
test
mov
mov
test
add
movsb
fstpt
jb
test
clc
test
dec
add
and
push
dec
in
inc
xlat
mov
imul
jle
cwtl
cmp
js
mov
xlat
pop
jae
btr
nop
adc
rclb
jmp
mov
into
mov
jne
jne
mov
enter
test
mov
cltd
xor
jl
adcl
in
mov
add
add
popa
mov
nop
rolb
adc
xchg
xchg
lods
test
adc
enter
xlat
lea
pop
aad
les
mov
call
mov
cmc
icebp
sbb
dec
push
out
push
mov
insb
sub
sbb
or
pop
pop
stc
and
jmp
cmc
jne
and
or
inc
and
mov
push
leave
jg
pop
inc
jge
mov
mov
mov
ja
mov
test
movsl
dec
in
mov
out
xor
jmp
ljmp
add
rorl
add
mov
mov
xor
add
mov
mov
mov
xor
add
cmp
je
mov
mov
jmp
and
xor
adc
push
in
mov
adc
jle
push
jl
jle
pop
adc
xchg
cmp
sti
ljmp
jne
mov
pop
sbb
mov
push
push
popa
jge
pop
mov
lods
adc
push
push
xor
xchg
ljmp
xor
sub
and
push
lock
push
fistps
mov
popa
popf
iret
lahf
fcmovu
pop
pop
adc
sbb
sbb
jo
adc
js
add
lods
jecxz
mov
repnz
adc
or
popf
loopne
mov
cmpsl
pop
arpl
adc
clc
mov
sbb
out
lds
add
or
mov
mov
pop
repz
lahf
or
out
rcl
jno
ds
fs
pusha
push
push
mov
push
or
xchg
xchg
cli
fwait
cs
mov
xchg
adc
push
xor
mov
popa
adc
sbb
daa
push
adc
cmp
mov
lea
hlt
sbb
aam
mov
test
push
in
sbb
jecxz
insb
xor
popa
xchg
jmp
mov
dec
xchg
add
ret
adc
pusha
mov
ficoms
hlt
jp
cmp
sub
pop
sub
mov
fidivl
xchg
mov
insb
fs
sti
cmp
test
sar
push
lods
push
shl
fisubrs
push
xchg
insb
mov
mov
arpl
stos
pusha
cld
inc
repnz
pop
pop
test
jl
mov
push
jb
in
cmpsl
sub
xor
addl
nop
mov
fidivl
fldcw
mov
sub
pop
shrb
dec
test
xor
enter
add
mov
into
movsl
repz
dec
imul
leave
add
xchg
xchg
jmp
data16
dec
orl
je
xchg
repz
xchg
scas
mov
inc
pop
mov
push
mov
or
fmull
or
or
xor
cmp
je
mov
mov
xor
add
mov
jmp
xorl
jmp
mov
jmp
sub
add
popa
push
in
jno
mov
repz
push
jl
jle
ret
enter
test
mov
shrl
ja
pop
insb
lods
xor
cs
push
repnz
add
clc
mov
xlat
xor
das
pop
fistpl
movsl
and
inc
add
ss
popa
gs
xor
js
mov
sub
test
and
in
cmp
push
mov
push
fwait
jmp
and
lret
leave
sbb
pop
sub
xchg
mov
aad
icebp
nop
cmpsl
mov
divb
es
jb
cmp
adc
cmp
xor
mov
dec
xchg
loope
cmpsb
jle
mull
cltd
fidivl
xor
add
adc
outsl
adc
sub
das
stc
sub
test
sub
call
rolb
dec
push
jecxz
aaa
jle
fsub
ja
leave
push
idiv
adc
repnz
ficompl
pop
ljmp
enter
add
pushf
xchg
xor
js
adcl
xchg
push
jne
push
xchg
sarl
cs
imul
cmp
push
insb
repz
add
mov
ss
add
and
push
dec
repz
xor
inc
aam
call
pop
andb
adc
pop
add
mov
ljmp
out
sbb
dec
rep
sub
push
scas
push
stos
ja
and
loopne
inc
cmpsb
lret
inc
sub
testl
cmp
mov
add
pop
vsubps
mov
inc
loop
push
mov
jno
or
or
adc
dec
or
in
cmp
xor
pop
aaa
ret
pop
int3
dec
js
dec
or
mov
pop
cltd
scas
dec
dec
les
xchg
push
add
mov
ret
push
jb
inc
je
mov
xchg
cld
arpl
cmpsb
out
xchg
sub
pop
adc
and
xchg
dec
cld
clc
testl
fcompl
sub
add
icebp
in
popf
push
mov
cmp
lock
jle
push
jl
jle
test
int
mov
pop
jl
mov
ss
push
mov
jl
rol
loop
xchg
cmpsl
insb
cli
repz
mov
pop
jae
call
faddl
insb
adc
std
mov
xor
insb
xchg
scas
dec
xchg
in
pushf
cmp
mov
sbb
push
dec
jnp
scas
xor
insb
push
shrl
push
sub
cwtl
lea
mov
pop
pop
mov
sbb
xor
xor
xor
push
ja
in
iret
jns
outsl
movsl
jp
jo
mov
insl
arpl
in
dec
pop
and
push
push
push
nop
aam
pushf
daa
in
leave
dec
fdivp
xchg
xchg
imul
jnp
stos
and
cmpsb
cli
xor
addr16
mov
pop
lock
jne
js
cmc
in
js
xchg
lock
push
std
rolb
cmp
jp
int
out
xchg
lahf
jb
std
sbb
fsub
pop
xchg
mov
into
insl
ja
test
cmc
push
mov
cli
xchg
sub
xor
cmc
imul
cmp
pop
jl
cs
in
xor
jnp
aad
andl
inc
mov
loop
mov
testb
push
imul
sbb
mov
and
idivb
ud2
xchg
cld
rcrl
test
pop
jne
divb
idivl
inc
pop
push
das
jo
adc
sub
inc
mov
add
mov
xor
mov
adc
add
or
pop
cmp
int3
in
out
jo
xchg
add
sub
or
incb
out
outsl
pusha
mov
pop
loope
scas
sbb
adc
ficompl
or
xor
in
jp
add
cs
add
ljmp
mov
mov
mov
mov
pushl
call
mov
cmp
je
mov
mov
pop
pop
jmp
iret
dec
mov
mov
icebp
dec
fadds
fs
mov
jle
jl
jle
add
mov
push
pop
xchg
adc
rolb
int3
popa
push
push
push
mov
adc
dec
mov
test
sbb
addr16
xchg
sub
jmp
imul
sub
push
pop
lea
loope
or
lret
leave
xor
and
inc
dec
mov
xchg
dec
sub
sub
es
mov
adc
add
cmp
inc
mov
loopne
jge
jne
jl
mov
add
movsb
add
pusha
jle
iret
shlb
xor
dec
push
int3
subl
mov
adc
popf
push
pushl
mov
xor
inc
test
decb
or
lods
insl
sbb
clc
pop
into
jp
nop
xchg
adc
sub
mov
pop
pop
stos
iret
iret
sti
dec
inc
sbb
push
push
sub
xchg
ret
add
add
xchg
push
in
mov
ficoms
jle
insl
out
fistpl
jno
jno
mov
push
mov
or
aaa
sti
add
cmp
outsb
mov
out
adc
cmp
sbb
adc
sub
jmp
arpl
out
push
cwtl
mov
mov
jmp
adc
dec
mov
adc
jl
sub
es
ds
push
sbb
out
lds
jmp
pop
movsl
dec
inc
inc
nop
pop
dec
loop
shl
int
repz
push
ret
loop
pop
test
lret
movsl
loop
subl
test
sbb
mov
xor
push
repz
mov
inc
mov
xlat
sub
xor
mov
and
jns
es
int3
mov
add
mov
dec
pusha
imul
and
repz
jo
imul
out
imul
test
inc
fisubl
scas
lahf
jb
cs
jmp
gs
add
mov
inc
cmc
cmp
sbb
ret
push
mov
push
andl
mov
inc
mov
cmpl
jne
push
pushl
pushl
push
call
cmpl
jb
movl
mov
andl
mov
add
jmp
out
xchg
aaa
jne
gs
xor
sub
es
sbb
mov
jle
jge
jle
sub
ret
clc
insb
push
mov
dec
push
test
les
loop
cltd
cmpsl
daa
scas
push
sbb
sub
daa
test
xchg
and
and
push
hlt
or
sbb
xchg
cwtl
orl
sub
js,pt
lret
lods
lds
pop
or
es
dec
xchg
add
xor
xchg
jbe
adcb
push
pop
jb
dec
and
stc
dec
movsb
movsb
in
in
push
dec
push
in
movsb
hlt
sbb
mov
push
sub
push
add
and
ret
xchg
insl
push
arpl
cmp
aam
lret
sub
popf
push
mov
or
mov
pop
pop
addb
das
mov
mov
fstl
sbbl
ret
dec
jno
mov
outsb
or
rorl
sub
dec
pop
gs
jns
ret
push
push
lods
inc
dec
push
scas
fwait
stos
outsb
pop
pop
inc
in
rclb
inc
out
mov
add
xor
fwait
je
ret
add
ljmp
fcomp
icebp
cmc
or
sti
dec
adc
in
mov
cmp
mov
fnstenv
mov
iret
adc
lds
push
rcrb
lcall
xchg
data16
in
and
adc
imull
mov
cmp
jnp
out
jns
pushl
aam
dec
icebp
int3
sbb
dec
jb
sbb
out
mov
mov
or
jmp
adc
cmc
jp
jb
shll
popa
mov
mov
imul
push
sub
add
push
repnz
repz
roll
sub
xlat
fdiv
out
cmp
cmpsl
cmp
imul
xor
jmp
arpl
mov
dec
leave
sub
or
out
add
arpl
clc
dec
fsubs
sub
push
and
out
iret
xchg
imulb
mov
dec
pop
mov
xchg
mov
fisttpl
repnz
jmp
add
or
stos
cwtl
xchg
jns
cmpb
pop
and
cmpsb
sahf
xor
ror
adc
mov
orb
dec
cmp
ds
push
insb
pop
push
jne
imul
loop
lret
ljmp
int3
std
or
jbe
inc
sbb
or
cmp
mov
mov
fwait
andl
dec
add
add
popa
shr
les
push
jmp
jge
inc
adc
out
mov
dec
ss
hlt
mov
lods
enter
fs
ss
push
push
stos
mov
cltd
leave
rcl
popf
cwtl
daa
rorl
lds
add
and
rorb
add
and
shr
xorl
out
jnp
mov
divb
sub
daa
mov
inc
cmp
movl
jmp
dec
adc
sub
imul
outsl
pop
dec
hlt
mov
jle
jge
jle
mov
push
cmp
mov
pop
fisttpl
pop
jno
jg
lea
lea
jnp
fwait
dec
push
int3
rolb
pusha
and
cmpsl
fldt
fisttpll
lret
ljmp
sbb
mov
and
cli
in
fidivs
jae
inc
aaa
jecxz
rep
pop
sbb
aas
scas
and
ss
rclb
sub
xchg
subb
jnp
sub
int
pop
xchg
fcoms
popa
jnp
push
aaa
out
icebp
adc
ror
jl
fwait
call
xchg
and
inc
sbb
inc
stc
loop
mov
pushf
cmp
push
nop
jle
pop
ficoms
in
arpl
sub
xchg
cmp
scas
cmp
pop
mov
sub
cltd
imul
adcb
inc
leave
into
imul
aam
ret
loopne
jge
sar
ja
loop
and
js
add
mov
sbb
cmp
sub
test
cltd
les
repnz
dec
aam
and
insl
mov
add
push
jge
mov
jne
jnp
adc
xchg
fcmovnbe
adc
aam
and
and
mov
out
imul
mov
mov
pop
pop
lahf
pushf
cmp
adc
aaa
dec
lea
jmp
jle
jmp
mov
cmpsb
ficompl
dec
dec
xlat
mov
pop
iret
call
outsl
cmp
clc
scas
lahf
push
jmp
fisubl
ss
je
cs
lcall
push
pop
cmp
sbb
fwait
call
cltd
sar
es
jbe
insb
fnsave
test
je
pop
lcall
mov
mov
xor
movb
js
xchg
mov
dec
in
sbb
cmp
pop
mov
adcl
cmp
shll
push
jle
ljmp
jbe
decl
xor
mov
push
mov
lahf
push
jnp
leave
loope
dec
sub
jmp
ret
jns
and
mov
jge
add
sbb
inc
js
lahf
sbb
pop
dec
dec
loope
xchg
pop
xchg
pushf
icebp
xchg
jl
pop
mov
stc
adc
sbb
ljmp
add
aam
jg
clc
sahf
outsl
adc
flds
mov
dec
std
mov
out
jb
inc
std
dec
pop
and
jb
sub
aad
and
push
imul
iret
in
pop
scas
and
xchg
sub
out
iret
xchg
cmp
xchg
ss
cwtl
cmp
shr
fisubl
mov
cmpb
movsb
daa
ljmp
push
inc
add
push
lret
outsl
repnz
scas
cltd
push
or
ja
sar
xor
mov
jne
mov
movl
cmpl
je
cmpl
jne
push
pushl
call
cmpl
jne
xor
add
dec
mov
mov
dec
mov
jmp
jmp
fsqrt
std
imul
mov
jo
and
andb
push
jge
jle
mov
mov
ds
pop
or
push
stc
mov
add
in
cld
push
cltd
pcmpeqd
loop
mov
or
and
inc
test
outsl
cmc
sbb
sbbb
xlat
or
and
inc
ss
push
mov
dec
xchg
leave
sub
jmp
mov
sub
fsubrl
sbb
out
ja
jo
dec
stc
jle
mov
shr
push
cmp
xor
mov
rorb
sub
push
cmp
cwtl
outsb
push
fldenv
pop
inc
sbb
pop
mov
cli
inc
mov
add
gs
mov
dec
push
dec
dec
xchg
lret
and
dec
mov
xchg
xlat
pand
pop
and
jle
and
iret
ss
leave
xor
lret
aad
fwait
repnz
lcall
add
outsl
adc
loope
add
add
sahf
jg
adc
fimuls
out
rcrl
out
icebp
jle
cmovge
aas
cmpsb
neg
push
sbb
xor
scas
jnp
cmpsb
test
sarl
jecxz
mov
andl
fucomi
push
out
lods
cmp
xor
jb
sbb
fistps
lret
mov
idivl
iret
enter
jne
cmp
imul
xchg
rorb
dec
pop
inc
arpl
dec
and
daa
orb
test
add
dec
jmp
mov
stos
sbb
sbb
bound
scas
clc
ret
xor
rcr
in
fwait
sti
jge
std
mov
add
popa
repnz
adc
leave
les
imul
imul
inc
adc
or
cmp
outsl
cmp
dec
dec
push
lahf
lcall
dec
dec
mov
mov
xchg
mov
jecxz
fs
xchg
jp
sbb
adc
aas
xchg
rclb
pop
mov
push
std
xchg
and
xor
push
lds
fcmovnu
jne
xor
lahf
inc
pop
scas
aas
push
push
cmp
fisttps
xlat
data16
call
movsl
fwait
mov
and
aas
icebp
xchg
jl
push
xor
insb
sub
pop
sbb
ficomps
ret
cltd
movsl
jne
inc
flds
add
pop
mov
push
or
int3
clc
into
pop
cmp
jno
es
or
andl
clc
fisubrl
aam
cmp
lret
lods
sbb
adc
in
mov
cmp
push
loope
notl
mov
or
test
aaa
call
xchg
and
pop
adc
inc
mov
xorl
pop
add
ds
push
inc
push
xrelease
std
gs
mov
lahf
je
and
add
add
xchg
cld
out
mov
clc
loopne
jnp
scas
les
push
xchg
testb
mov
add
jmp
repnz
rep
cmpsl
xchg
or
cmp
daa
mov
jle
push
jge
jle
out
aaa
ficoms
bound
das
mov
cmp
sbb
push
sbb
ljmp
mov
int
sbb
push
les
movsb
pop
popl
ret
movsl
lahf
imul
ret
xchg
in
ror
movsb
mov
pop
fst
mov
dec
jnp
inc
inc
roll
pop
dec
pusha
sub
xor
xor
leave
in
sbb
cs
adc
out
scas
dec
fwait
xorb
lds
mov
outsl
jle
rorl
movl
sti
jg
dec
ret
or
pop
cli
loop
mov
cmpsb
inc
inc
xor
mov
cmp
adc
subb
mov
int
jbe
test
xor
loope
fincstp
xchg
lds
xor
cltd
and
cltd
push
push
mov
xor
sub
cmpsb
jp
push
jns
inc
int3
adc
data16
mov
lock
int3
sub
test
xchg
dec
xchg
or
jge
jns
mov
and
pop
adc
mov
xchg
testb
and
sub
dec
pop
mov
xchg
and
and
test
insl
daa
icebp
loopne
pop
push
int3
cmp
test
lret
pop
scas
fisttps
das
jnp
cmp
je
mov
add
cwtl
push
jb
ja
mov
in
xchg
sbb
jbe
cmpsl
outsb
jmp
cltd
mov
fdivrp
adc
jne
shlb
std
push
lretw
test
addl
add
sub
int3
sahf
insb
mov
xorb
idiv
sbb
stos
xor
jp
dec
in
aaa
sarb
mov
sub
jb
mov
pusha
int
loop
loop
sti
xchg
adc
sarl
in
pop
inc
addl
jle
loope
push
scas
xchg
or
lret
loop
call
push
lcall
sub
push
shlb
mov
movsb
jp
mov
movsb
sbb
mov
insl
mov
aas
js
fwait
mov
lods
push
adc
loopne
lods
mov
je
adc
pop
fwait
pop
inc
cmp
in
rcr
insb
int3
mov
push
pop
or
insl
ss
add
xor
test
lods
stos
dec
mov
push
daa
pop
and
gs
add
mov
dec
movsb
insl
xchg
ds
jns
cld
mov
movsl
dec
stc
ret
sbb
dec
add
lret
jp
fdiv
mov
cmp
sbb
xchg
test
inc
pop
faddl
ss
jnp
and
dec
or
sub
cmp
fsubl
sub
mov
mov
mov
xor
push
mov
mov
add
cmp
pop
jmp
int
mov
jno
imul
insb
fwait
mov
inc
jle
push
jge
jle
mov
add
outsb
mov
push
mov
out
sahf
jbe
mov
rcll
dec
and
int
repz
and
fstl
cmp
and
lock
push
out
mov
jg
xchg
iret
hlt
and
jmp
cmp
jmp
add
cmpsl
inc
mov
xor
movsl
data16
push
inc
push
jbe
jo
pop
mov
movsl
mov
outsl
sbb
lahf
ret
mov
xchg
jo
jne
cmp
arpl
dec
out
pop
outsl
xchg
arpl
std
sbb
data16
lret
ja
fdivp
mov
xor
in
sbb
dec
js
mov
mov
xchg
xor
sub
or
js
adc
fisttpl
inc
jg
xchg
in
pop
in
sbb
imull
imul
mov
mov
pusha
adc
push
insl
and
mov
pop
or
jns
adc
and
cmpsb
fidivrs
nop
shll
lock
mov
mov
mov
scas
test
jae
and
xchg
idivb
xor
out
mov
ds
lock
rcll
ljmp
shll
sub
pop
sub
xchg
stc
mov
into
addr16
in
and
shl
rcll
repnz
shlb
cmp
ljmp
movsb
pop
xchg
fadds
lock
jae
xchg
pop
and
xlat
push
shlb
mov
mov
mov
xchg
into
mull
pop
dec
lods
call
xchg
fwait
andb
test
jle
jbe
loopne
dec
push
test
mov
sbb
pop
or
xchg
stc
jmp
inc
xor
cli
lods
jo
sbb
psubq
out
mov
mov
mov
or
mov
enter
scas
cmpsl
adc
pop
sub
sub
xor
xor
mov
imul
daa
lds
imul
lock
xchg
cmp
push
mov
cli
mov
sub
xor
xchg
jg
xor
leave
push
mov
cmc
dec
inc
and
push
jae
adc
and
arpl
or
cmp
lahf
pop
fcompl
gs
jmp
arpl
mov
scas
sbb
cld
loop
sbb
iret
fdivl
jne
jns
outsl
adc
mov
sub
out
cmp
ret
push
adc
push
jne
stos
js
cmpsl
daa
mov
push
bound
sbb
mov
inc
adc
hlt
mov
or
popf
enter
dec
add
or
shlb
out
inc
es
divb
mov
lods
jne
inc
bound
pop
testl
andl
mov
inc
adc
cmpsb
out
and
out
std
fnstenv
xor
popa
enter
or
mov
out
sub
lea
fwait
ret
aam
xor
je
mov
jmp
mov
xor
add
jmp
mov
xor
add
leave
ret
push
mov
mov
xor
xor
mov
sub
add
mov
orl
jmp
iret
ret
rcll
push
popa
mov
cwtl
and
je
jle
or
jle
hlt
iret
xchg
mov
aam
gs
lcall
call
push
cltd
stos
cli
push
sbb
or
push
stc
jl
mov
in
std
into
cmp
lret
in
push
test
ss
sub
cmpsb
mov
xchg
jno
jmp
jge
pop
sub
arpl
sar
xchg
fidivrl
xchg
adc
jno
ja
nop
push
ds
shr
and
outsb
or
fcmovnb
xlat
insb
sub
jge
mov
or
dec
ret
shrl
and
sub
rorb
adc
test
popf
mov
outsl
or
sub
mov
dec
test
xor
add
into
jns
cmp
clc
jp
fists
cmc
addr16
call
call
sbb
in
jne
or
cld
test
xor
xchg
xor
jae
les
dec
add
insb
mov
cltd
push
push
rolb
mov
out
lret
das
mov
sub
addl
mov
movl
push
jmp
rolb
out
fs
test
mov
jle
or
jle
mov
or
imul
cmp
nop
inc
out
jl
in
aaa
outsl
mov
sub
pop
sub
loope
mov
cmp
lcall
adcb
arpl
mov
sub
xor
push
pop
lret
int3
call
es
fwait
push
inc
sub
push
push
cmp
adc
jnp
dec
or
into
add
shll
dec
mov
in
rclb
xchg
outsb
dec
das
jae
leave
and
xor
xlat
mov
lahf
repnz
fs
cmp
roll
adc
sub
mov
imul
outsb
fisttpl
mov
xorb
pop
adc
test
lret
mov
or
loope
fstl
test
mov
lock
mov
mov
or
pop
imul
cmpsl
ret
pusha
adc
in
pushf
or
fstps
lods
mov
nop
mov
cmpsl
orl
sbb
mov
rol
fs
add
jmp
mov
push
mov
jecxz
xchg
jg
jle
bnd
xchg
fldenv
mov
decl
sbb
jno
or
or
cmpsb
push
push
jmp
loopne
dec
add
fcompl
in
jl
or
fs
or
mov
add
add
xor
mov
jge
cmp
nop
push
and
sbb
shll
cmp
popa
mov
mov
adc
dec
mov
mov
pop
push
les
andb
fidivrl
rorl
xorl
int
sti
and
jg
ljmp
sub
sub
xchg
and
mov
lcall
frstor
mov
xchg
push
fldcw
iret
mov
jne
mov
push
pop
test
add
jecxz
adc
sbb
pop
adc
ds
andl
sbb
mov
cmp
je
andl
mov
inc
mov
cmpl
jne
push
pushl
pushl
call
cmpl
jb
movzbl
add
mov
andl
mov
sub
xor
cmp
jne
mov
add
jmp
mov
xor
add
mov
mov
jmp
ficoml
addr16
loop
inc
push
insl
mov
cs
jle
or
jle
fnsave
sbb
and
cld
test
cmp
or
xchg
fs
ja
inc
mov
rorb
xor
mov
push
add
fcmovnb
sub
sub
cld
cmc
test
or
pop
pop
push
xlat
mov
pusha
xor
inc
fnstenv
pop
aam
movsb
cmp
xlat
sub
test
sbb
mov
arpl
cli
sbb
ret
mov
cmp
jmp
es
cld
mov
dec
add
jl
and
xor
mov
dec
sub
fldt
fwait
test
adc
mov
int3
imul
ja
inc
movsb
inc
in
xorl
orb
nop
fldt
frstor
sub
movsb
sbb
mov
mov
int3
cmp
repnz
insl
lds
push
cli
dec
lock
dec
sub
lds
sbb
iret
add
inc
mov
sbb
aas
xor
add
mov
jmp
mov
mov
mov
mov
mov
add
pop
pop
ret
push
mov
sub
movl
movl
and
mov
push
mov
add
xor
movl
mov
add
mov
mov
jmp
xchg
push
lret
adc
push
xchg
stos
dec
xlat
cwtd
es
arpl
jle
xchg
jg
jle
in
xchg
xchg
xlat
das
fisubs
cmp
adc
aam
or
lods
mov
clc
clc
push
and
lea
or
pop
aad
ror
cmc
int3
lods
mov
out
sti
scas
aam
insb
and
andl
xor
mov
cmpsl
cmpsl
loope
xor
rcrb
insb
das
or
pop
enter
push
popa
mov
test
dec
jns
add
test
mov
mov
and
stos
and
movsb
dec
mov
dec
dec
pop
test
shl
add
popa
mov
test
pushl
lea
in
mov
jmp
adc
mov
pop
sub
fists
jge
adc
and
fidivs
push
add
jb
xor
aas
fstpt
sub
mov
in
inc
sub
leave
std
out
jmp
jmp
sbb
icebp
cmp
sbb
sbb
es
pop
dec
xchg
or
sbb
xor
es
out
inc
mov
dec
xlat
arpl
sub
in
push
ss
mov
int3
cmp
lds
jmp
jmp
iret
cld
jecxz
mov
in
push
xchg
mov
pop
sti
inc
lcall
cltd
mov
jno
xchg
scas
sbb
ror
jbe
jo
and
xchg
out
or
les
pop
shlb
jge
daa
mov
dec
dec
daa
sub
or
repnz
jl
outsl
or
dec
icebp
push
push
andl
test
movl
je
mov
sbb
mov
mov
mov
adc
jmp
xchg
roll
icebp
mov
test
ret
jle
xchg
jg
jle
xlat
loop,pn
jmp
pop
fsubs
lahf
dec
add
push
dec
xchg
negl
or
aad
rol
aam
test
inc
fwait
icebp
add
xor
in
adc
fs
xor
ds
enter
mov
addr16
out
xlat
mov
shrb
sbb
xchg
repnz
pop
dec
das
fcomi
test
sub
ja
rclb
cmp
imul
outsb
out
rorb
xchg
jmp
pop
clc
mov
jmp
test
inc
mov
mov
cmp
jno
pop
aam
addr16
ja
xlat
inc
cmc
insl
and
mov
imul
push
ret
cmc
mov
mov
push
out
xchg
stos
sbb
xchg
rcrl
mov
mov
int3
daa
and
lahf
xor
sub
aam
push
ret
lret
jb
stc
or
aad
sbb
or
inc
fisttpl
push
xlat
inc
xchg
adc
jg
xchg
add
lcall
inc
ret
pop
in
lahf
stc
or
test
mov
enter
mov
or
scas
icebp
xchg
and
inc
adc
or
movsl
jmp
enter
mov
movsl
insl
mov
subl
and
imul
pop
cmpsl
mov
add
addb
scas
push
pop
mov
mov
push
mov
pop
mov
xor
std
xor
and
and
push
and
mov
adc
imul
mov
and
add
sbb
mov
addl
mov
xchg
sbb
jmp
pop
lods
es
repz
pop
mov
mov
in
mov
in
dec
jle
xchg
jg
jle
daa
addr16
dec
imul
cli
jecxz
cs
sub
add
mov
cwtl
cwtl
mov
xor
inc
outsl
test
lret
xlat
stc
lret
xor
movsl
mov
cld
ret
lret
cmpnltps
and
out
ds
and
test
ret
into
lcall
stos
add
lods
pop
jb
add
in
pop
xor
pop
bound
gs
xor
mov
adc
jmp
fisttpll
imul
push
push
into
mov
mov
data16
mov
out
shrb
fsts
cmpsb
mov
subb
mov
mov
mov
cmp
hlt
mov
psubq
push
xor
sbb
orl
fcmovnb
popf
call
dec
or
jecxz
repz
adc
sarl
and
mov
xchg
jl
xchg
and
clc
dec
cmpsb
fistpl
test
loopne
movl
subb
insl
xchg
test
dec
adc
in
lcall
or
add
push
mov
lcall
sbb
rcll
cwtl
pop
mov
cmpsb
push
ret
adc
adc
daa
nop
cmp
sbb
and
xchg
push
xchg
push
xchg
push
push
scas
fucom
push
aad
popa
mov
movsl
clc
fnstenv
inc
clc
mov
iret
popa
idivl
and
sub
sbb
jmp
ja
and
dec
pop
hlt
pusha
icebp
ds
call
jle
jg
jle
inc
sub
aad
push
ja
pusha
test
stc
or
fisttpll
adc
imul
jns
and
jnp
loopne
jle
jnp
test
test
push
test
nop
dec
inc
adc
xchg
mov
inc
sbb
or
xor
jns
push
xchg
mov
cmp
js
in
out
icebp
xchg
iret
lret
leave
pop
jge
xchg
ljmp
bt
mov
cwtl
push
clc
lods
cli
sub
rorl
push
jno
cmp
ficompl
imul
insl
xor
roll
or
inc
fildl
fiaddl
mov
pusha
push
push
mov
aaa
movsb
mov
fcmovnb
popa
adc
int
movsb
xor
adcb
loopne
mov
in
repnz
lea
test
out
inc
xor
push
fneni(8087
or
or
call
rcrb
pop
mov
ds
mov
cmp
pop
sbbl
pop
adc
div
push
cmp
mull
cwtl
stos
fcomps
xor
jecxz
fs
enter
dec
push
xor
fsts
add
xchg
push
xchg
scas
movsb
test
pop
outsb
movsl
xchg
xchg
insb
mov
xor
idivb
push
pop
sbb
inc
arpl
and
sahf
stc
cli
sti
xchg
dec
outsl
add
push
cwtl
cmpb
cmp
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
pushl
push
push
push
call
cmpl
jne
mov
inc
mov
jmp
mov
movl
cmpl
je
cmpl
jne
pushl
pushl
pushl
pushl
push
push
push
call
cmpl
jne
xor
xor
dec
mov
mov
dec
mov
jmp
movzwl
or
mov
mov
mov
and
mov
mov
andl
xor
sub
xor
add
mov
mov
movl
je
mov
xor
xorl
add
movl
cmp
movl
jne
pushl
call
mov
xor
mov
xor
mov
mov
subl
xor
andl
add
movl
cmp
je
pushl
xorl
pushl
call
mov
andl
xor
add
inc
mov
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
andl
mov
inc
mov
cmpl
jne
push
push
push
call
cmpl
jne
xor
xor
inc
mov
cmpl
jb
movl
mov
mov
adc
mov
subl
xor
addl
add
movl
cmp
je
xor
jmp
xchg
imul
dec
jle
xchg
jg
jle
sahf
std
mov
out
ja
outsb
xchg
ja
xchg
and
out
sahf
xor
iret
push
xchg
mov
mov
mov
fidivs
cmpsb
dec
jno
rorl
js
add
mov
dec
push
fsubl
jmp
imul
ror
xchg
lret
sbb
cmp
xor
daa
push
or
icebp
adc
push
loopne
mov
das
into
inc
rcl
dec
dec
fwait
push
push
mov
mov
aam
xchg
adc
lret
add
adc
fsubl
pop
push
cltd
fcmovnu
sub
lret
mov
mov
dec
adc
pop
mov
mov
mov
outsb
xor
pop
clc
and
inc
jl
popa
ljmp
imul
pop
sbb
aam
ljmp
pushf
jecxz
pop
push
stos
add
loopne
enter
movsl
push
cmp
js
jl
jmp
ss
jns
push
cmp
cmpsl
pop
lods
dec
push
inc
mov
repz
int3
push
in
addr16
xchg
mov
or
test
addr16
xor
repz
mov
ret
dec
push
es
ret
lds
add
pop
das
mov
dec
cmc
jae
dec
jmp
xor
push
lds
adc
inc
fcoml
mov
jle
adc
outsl
jle
mov
les
andb
popf
xchg
ljmp
or
mov
in
bound
jno
inc
in
negl
mov
and
mov
mov
movl
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
mov
sub
mov
adcl
add
mov
mov
andl
mov
inc
mov
cmpl
jne
push
push
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
sbb
mov
xorl
add
jmp
addr16
mov
ja
adc
insb
dec
xor
jle
xchg
jg
jle
movsb
sub
cmp
std
rcrb
mov
jl
ljmp
in
push
cmpsl
add
das
not
mov
jbe
lods
or
mov
les
aas
data16
mov
pop
bound
test
mov
rorb
dec
jle
jb
pop
enter
sub
js
ret
fwait
dec
icebp
iret
fcompl
pop
movaps
mov
fs
fadd
iret
push
adc
push
sbb
mov
jle
in
sbb
lods
aaa
fists
xchg
js
cmpsb
aas
inc
xor
xchg
inc
ror
inc
icebp
and
ljmp
and
fucomp
mov
inc
push
jo
aas
cmp
push
xchg
lea
pop
xor
iret
mov
sub
dec
mov
in
sub
insb
aas
xor
mov
mov
clc
bound
fs
divb
scas
push
in
jmp
sub
mov
lret
cmp
fwait
xchg
data16
fiadds
push
mov
aad
mov
stos
cmp
cli
stos
cmp
pusha
mov
in
mov
adc
imul
push
pop
flds
push
call
pop
and
jno
orb
push
nop
ljmp
inc
aam
jno
mov
pop
jno
dec
push
pop
xchg
mov
push
rorl
clc
int3
fildll
stos
add
jg
pop
loope
dec
aam
and
add
add
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
push
call
jmp
mov
mov
jmp
mov
iret
mov
test
fstp
xor
jle
xchg
jg
jle
xchg
nop
sbbl
ret
hlt
mov
sub
mov
sub
mov
out
insb
cmpsl
push
lds
orl
aad
and
jp
and
js
mov
adc
add
dec
cli
filds
repz
lods
dec
xchg
dec
movsl
mov
icebp
loope
sti
andb
lahf
loope
mov
inc
loopne
cli
insl
outsl
imul
adc
loop
jnp
int3
add
xchg
adc
gs
icebp
cmpsl
xchg
xchg
xchg
add
jns
or
jb
push
and
mov
outsb
movsbl
imul
mov
jl
data16
or
xchg
insl
push
insl
mov
inc
incl
jnp
mull
push
or
pop
pop
loop
out
mov
sbb
test
sbb
lcall
push
xor
cmp
es
sbb
call
rcrl
sbb
insl
or
sbb
adc
rcrl
jae
in
cmp
push
inc
lgs
clc
pop
ljmp
mov
cmp
add
aad
imul
sub
xchg
aaa
mov
mov
inc
sahf
pusha
les
out
mov
sub
dec
add
int3
xlat
in
enter
xchg
icebp
movsb
xor
in
xchg
int
ss
inc
mov
outsb
es
mov
movsl
and
xchg
shlb
dec
sbb
testb
jmp
xlat
frstor
jg
cld
scas
push
hlt
test
push
jle
xchg
jg
jle
fadds
sbb
or
pop
push
insb
mov
xlat
popl
mov
addr16
ficoms
sub
mov
sahf
stos
adc
xor
andb
in
cmpsb
pop
hlt
sub
cltd
and
or
sbb
les
mov
aad
ficoms
aam
jne
mov
push
adc
repz
xchg
add
pop
jle
ret
mov
shlb
or
sub
ss
hlt
div
lret
leave
outsb
cmp
sbb
jle
push
fwait
stc
push
lea
ja
or
cmp
fwait
push
loopne
jge
adc
ror
popf
movsl
int3
inc
jp
mov
jmp
jg
or
stc
shld
std
mov
or
aaa
jne
xchg
js
test
out
test
outsb
adc
lcall
test
aam
xchg
scas
sti
in
daa
and
xor
mov
aaa
mov
pushf
mov
loop
xchg
fstl
dec
in
jns
js
or
out
in
dec
mov
insl
inc
jns
inc
outsl
xor
or
or
scas
push
bound
sti
jle
cmp
add
lds
and
lea
sahf
sbb
sarb
ret
sbb
sub
idiv
cmpsl
adcl
mov
sbb
or
out
sub
test
lock
movsl
imul
mov
inc
lahf
fucomp
cs
mov
add
lea
mov
push
pushl
pushl
call
mov
mov
jmp
bound
movsl
es
popa
push
call
and
jl
jle
xchg
jg
jle
or
and
and
leave
sub
jmp
dec
cmp
cmp
aas
movsl
cltd
sbb
jl
xchg
xchg
into
data16
and
xchg
push
xor
sbb
sub
adc
xlat
rorl
lcall
jp
push
cmpsb
icebp
pop
jb
jnp
fwait
adc
pop
ljmp
repz
lock
es
outsb
rolb
addr16
movsl
je
add
push
push
pop
fidivrs
fs
addb
pop
mov
iret
ljmp
leave
insb
xchg
enter
flds
mov
push
scas
adc
aad
push
and
ja
arpl
aaa
sarl
sbb
ljmp
mov
add
xchg
sub
imulb
leave
int3
push
stos
pop
dec
mov
dec
out
mov
nop
push
lods
or
ljmp
out
imul
or
sti
xchg
pop
jnp
daa
outsl
scas
lret
or
shr
insl
test
pop
cs
rcl
insb
xchg
in
or
std
mov
insb
pop
stos
je
or
xchg
inc
fcmovnb
xor
lcall
push
jle
push
out
jnp
roll
cs
push
pop
adc
jno
xorb
leave
push
dec
pop
and
push
jne
ds
lgs
inc
pop
xor
pop
sub
cmp
outsb
stos
adc
rcr
cmp
xchg
xchg
addb
add
cmp
jne
mov
inc
cmp
jb
jmp
jmp
ret
ficomps
popa
cltd
ret
fs
outsb
push
pop
cs
mov
xchg
jg
jle
in
adc
scas
xchg
xchg
pop
loope
inc
subb
push
mov
mov
and
lea
pop
ja
les
or
xchg
pop
out
mov
cmp
cmp
sub
sbb
popf
pushl
js
movsl
add
lds
jbe
push
mov
adc
inc
scas
or
test
and
or
lock
push
aas
rcll
mov
dec
add
test
xor
adc
push
roll
insl
jne
pop
sub
sbb
aad
fs
mov
loope
out
into
clc
pop
sbb
cmp
or
or
and
dec
cli
push
shrb
cmpl
bound
aam
lahf
jl
and
ljmp
cmp
fdiv
ficoms
adc
pop
shrl
es
xor
test
inc
stc
mov
cld
dec
lcall
jle
subl
lods
xchg
movl
lret
pop
ret
pop
sbb
in
cld
dec
sti
int
insl
xchg
fcomip
push
dec
mov
mov
push
cmp
imul
aas
subl
jnp
xchg
inc
in
mov
out
sbb
movsl
jb
xor
pop
mov
popa
test
push
loopne
mov
or
fildl
jl
les
mov
add
stc
dec
adc
add
jmp
mov
movzwl
mov
mov
mov
mov
mov
xor
add
cmp
jne
mov
jmp
out
or
xor
in
rcrb
mov
xchg
psraw
sub
jle
xchg
jg
jle
pushf
push
scas
sar
lds
mov
add
inc
cld
add
cmp
adc
push
ret
sub
shll
pop
sbb
lods
jg
imul
sahf
movsl
lea
push
aam
stc
repz
pop
dec
mov
lods
stos
sub
xor
pop
sbb
dec
xchg
jbe
inc
xchg
jecxz
push
or
fisubl
and
cld
cmc
divb
mov
popf
fidivl
fcomp
cmp
frstor
push
sub
cmpsl
pop
jno
push
ds
testb
push
sub
mov
jle
mov
add
and
pop
aad
arpl
pop
imul
shll
fsubr
stos
and
test
addb
out
imul
adc
inc
andl
xchg
mov
add
adc
mov
sti
sub
and
mov
outsl
out
dec
mov
cli
xor
jns
fsubr
sbb
and
ret
pop
fcoml
lea
test
sub
and
or
or
cwtl
add
into
fistl
add
scas
adc
adc
popf
int
cli
nop
xor
sbb
fsub
outsl
mov
cmp
sbb
jle
sahf
jle
adc
loop
push
or
jmp
mov
add
mov
jmp
inc
jae
pop
sub
jae
repz
xchg
je
inc
inc
pop
jle
xchg
jg
jle
xchg
xlat
pop
mov
jne
rcrl
cmc
daa
push
fidivl
jl
in
int
cld
or
out
dec
sub
pop
mov
mov
jp
jg
int
imul
into
cmp
je
pop
mov
push
sti
xchg
push
pop
mov
pop
xchg
out
inc
bound
push
scas
adc
aam
xchg
testl
out
mov
push
fmuls
dec
xor
dec
push
adc
fiaddl
out
dec
repz
in
dec
or
or
fstps
dec
jns
imul
cmp
stos
sti
cltd
mov
push
fwait
lods
mov
fidivs
pop
pop
sar
cmpsb
icebp
dec
testl
ret
sbb
test
cmp
xor
out
rcrl
ss
jne
cmp
or
pop
inc
xchg
lods
jp
sbb
mov
pop
pop
out
in
imul
cmp
enter
cmpsl
insb
pushf
out
jbe
cli
cmp
add
mov
jo
aad
cmp
movsl
jno
mov
iret
pop
shll
cmp
sti
or
jo
pop
mov
fwait
sub
out
push
into
data16
sahf
lcall
repnz
jns
mov
xchg
jns
sti
nop
inc
mov
sbb
pusha
iret
jns
sbb
mov
mov
insl
shrb
cmp
test
je
jmp
sbb
mov
xlat
fsubrl
xor
pop
and
xchg
jg
jle
popa
xor
push
lret
adc
pop
mov
imul
xor
mov
cmp
or
inc
cs
and
mov
jae
mov
into
jp
incb
adc
pop
adc
and
arpl
push
mov
xchg
in
push
enterw
adc
sbb
mov
mov
jne
loope
dec
hlt
inc
jne
pop
sahf
push
jl
jne
or
add
mov
xor
sub
xor
stc
adc
push
push
je
and
xchg
mov
sub
xchg
scas
popa
dec
mov
mov
xchg
push
scas
inc
xlat
into
imul
movsl
int3
and
jp
pop
into
hlt
lock
adc
sbb
pop
cmp
ss
dec
xchg
cwtl
or
or
in
sub
ret
cmp
mov
lahf
and
xor
insb
mov
mov
inc
mov
aas
xor
in
nop
out
inc
data16
popf
je
mov
cmp
mov
loopne
les
mov
cmpsb
mov
ret
jae
sbb
ret
pop
add
lcall
jo
mov
xlat
sbb
shlb
roll
cli
or
movb
popa
insb
push
mov
or
inc
and
inc
mov
jne
push
pop
push
dec
pop
xchg
sub
xchg
dec
jmp
cmp
pop
ret
cmp
sub
iret
push
adc
out
xchg
je
jle
xchg
jg
jle
mov
incl
xlat
dec
mov
cmp
adc
push
idivl
aaa
divl
fcom
dec
or
adc
or
clc
jg
sbb
push
mov
xor
mov
idivb
test
dec
int
jne
jb
add
insb
insb
cli
adc
mov
pop
enter
cmp
or
or
mov
mov
sbb
sbb
xchg
out
dec
sbb
mov
or
lock
dec
push
popa
addb
xchg
lahf
es
sahf
cmp
pop
je
test
int
aaa
sub
inc
cmp
hlt
pop
mov
dec
cwtl
dec
subb
sub
movsb
cmpsb
and
mov
jno
testb
xor
or
insb
insb
pop
mov
nop
mov
lods
icebp
cmpsb
les
cmp
adc
loop
mov
inc
cmpsb
pop
xchg
ficompl
std
mov
popa
fs
mov
aaa
pushl
icebp
or
jmp
mov
fwait
and
stc
dec
mov
movsl
in
inc
xchg
add
in
xchg
rcrb
and
pop
jne
daa
push
testb
popf
fcoml
mov
dec
or
sbb
das
or
and
adc
lret
sbb
and
daa
popf
enter
cs
push
es
xlat
add
mov
pop
fldl
push
pop
pop
or
iret
jb
push
insl
frstor
dec
lcall
mov
fldenv
scas
shrl
mov
mov
mov
xor
mov
add
mov
mov
xor
add
mov
imul
mov
xor
mov
lea
cmp
je
mov
jmp
xlat
cs
jae
push
aaa
adc
inc
div
push
and
jle
jg
jle
mov
dec
sbb
or
insl
xchg
sub
clc
dec
pop
mov
mov
movsl
mov
mov
in
dec
andb
mov
xorl
stc
fiaddl
mov
fstl
shrl
sbb
mov
pop
cmp
sarl
cmc
sti
or
add
imul
add
sub
jg
xchg
rcrl
pop
adc
movsl
mov
mov
scas
pop
inc
pop
scas
lret
addr16
add
rcll
lret
rcrb
mov
pop
insb
jg
adc
mov
dec
sub
cmp
xor
mov
in
std
in
or
dec
sbb
in
in
add
inc
sbb
mov
test
int
cmpsl
in
data16
mov
pusha
test
scas
jne
add
lret
js
movsl
mov
loopne
loope
mov
cmp
cs
cs
mov
lea
or
sbb
or
sbb
fisttps
or
pop
cwtl
mov
jno
jmp
adc
xchg
cmpsl
aad
xchg
mov
mov
pop
in
lcall
pop
jecxz
adc
jge
loopne
adc
add
aam
mov
cmpsl
sbb
jnp
lock
data16
fiadds
mov
adc
adc
mov
mov
mov
mov
xor
xor
mov
add
div
jmp
pushf
das
or
mov
mov
push
ja
xchg
and
jle
xchg
jg
jle
mov
or
in
movsb
add
iret
jle
fidivrs
inc
mov
popa
fcomip
cmp
shlb
xchg
add
and
fstps
sub
cmp
push
xchg
mov
in
xchg
enter
pop
into
inc
adc
sbb
les
push
iret
push
dec
push
adc
jae
movsl
add
xor
push
xor
shlb
pop
xlat
pop
push
and
push
jl
xchg
xchg
xchg
jne
bound
lret
dec
pop
xchg
in
scas
lcall
inc
jp
es
cmp
shl
stos
pop
mov
pusha
add
mov
mov
cmpsb
mov
jae
mov
inc
fstps
sbb
roll
inc
jbe
mov
push
arpl
cmc
mov
pop
xchg
xor
notl
sbb
popl
pop
pause
push
addr16
inc
jns
push
adc
push
aad
sbb
fwait
fs
sbb
sbb
lock
sub
jecxz
push
repnz
fxch
cmc
fidivs
test
popa
stos
das
cltd
into
jae
or
mov
cmpsb
mov
mov
add
and
dec
xor
xor
loop
cmc
xchg
push
mov
movsb
into
sub
popf
out
mov
jg
enter
sbb
cmp
leave
lods
jnp
dec
xor
dec
lret
in
xlat
or
push
dec
mov
xor
xchg
rcrb
idivl
mov
inc
out
push
cld
xor
lea
jmp
in
outsl
pop
outsl
jne
fs
push
mov
jg
jle
iret
cmpsb
testl
fnsave
push
cs
jl
lods
jp
shll
cmpsb
ss
out
mov
lock
frstor
mov
fcoml
dec
xchg
mov
pop
outsb
mov
mov
pop
int
fdivrp
lahf
inc
call
or
imul
sbb
bound
sub
lret
shrb
xor
mov
pop
icebp
sub
sbb
inc
mov
dec
mov
inc
adc
lods
sub
adc
pop
lock
mov
adc
adc
sub
xor
daa
and
stos
push
jno
or
inc
add
mov
jne
xchg
stos
repnz
xchg
mov
adc
lcall
xchg
stos
vpaddb
push
pop
mov
dec
stc
in
pop
andl
xor
and
loope
icebp
mov
push
stc
and
adc
mov
adc
jge
fadd
lds
xchg
daa
daa
stos
inc
cmpsl
gs
adc
adc
xchg
xchg
fidivrl
addl
cmp
shlb
xchg
insl
dec
xchg
and
jo
jl
mull
mov
cmp
fmull
cmp
mov
and
in
idivb
shl
bound
lahf
lahf
pop
pop
dec
mov
mov
pushf
shlb
fbstp
mov
push
mov
inc
ficoms
sbb
dec
sbb
es
jecxz
dec
add
and
or
xchg
mov
mov
xor
lea
mov
mov
mov
xor
add
imul
mov
xor
mov
lea
cmp
jne
mov
jmp
mov
mov
xor
add
mov
xor
lea
add
call
xor
inc
cmp
je
xchg
push
pop
push
pop
inc
xchg
sub
xchg
dec
mov
imul
add
jmp
ja
mov
mov
mov
gs
xchg
jg
jle
fsubrp
push
fadd
lds
out
pop
cmc
sahf
jo
cmpsl
jl
scas
jns
lahf
in
mov
sahf
rorb
mov
das
push
dec
rcrb
sub
testl
fwait
add
pop
mov
ja
out
loopne
es
in
mov
xchg
cs
add
icebp
shrb
pop
movsl
cmpl
inc
or
out
inc
enter
sub
js
jle
ljmp
or
clc
cmp
add
xor
xchg
xchg
add
aad
rolb
test
lds
and
mov
pop
pop
cmp
mov
movsb
mov
lock
cmp
xor
mov
jecxz
aas
out
je
and
fwait
pop
gs
mov
dec
adc
and
aam
mov
lock
loop
fwait
xchg
or
and
add
loopne
bound
popl
cmpsl
or
or
pop
adc
mov
pop
pop
push
jo,pn
out
adc
pop
sbb
mov
sub
push
enter
dec
test
in
dec
aas
adc
inc
push
dec
orb
mov
pop
std
ret
push
add
xchg
stos
adc
in
outsl
outsl
dec
xchg
rcl
shlb
pop
outsb
in
pop
mov
subb
pop
mov
daa
mov
loopne
inc
push
inc
fcos
in
popa
out
cs
jmp
inc
clc
fisttpl
call
insl
data16
xchg
jg
jle
pusha
daa
and
mov
aaa
lods
or
test
or
push
cmpsb
add
imul
mov
xlat
rorl
scas
mov
loope
stos
adcl
hlt
jno
outsb
fisttps
mov
adc
lcall
jmp
imul
aas
int3
cmp
lea
rclb
mov
xor
xchg
push
xchg
jge
addr16
push
call
dec
hlt
mov
cmp
xchg
mov
test
stos
xor
xchg
sub
sahf
jnp
jo
jns
loopne
inc
jno
sub
in
mov
lahf
scas
push
cwtl
sbb
cli
push
insl
pop
adc
push
sub
cmp
xchg
mov
hlt
mov
pop
lret
leave
inc
fwait
or
arpl
cwtl
ret
out
imul
in
dec
lcall
movsl
push
mov
repnz
cmp
inc
xor
pop
test
test
jle
cmc
push
sbb
fidivs
push
jmp
ret
popa
aam
inc
adc
dec
mov
dec
stos
mov
cmp
sub
icebp
adc
push
lea
mov
icebp
decl
xor
cs
dec
pop
and
mov
pusha
or
cmp
xchg
and
test
lock
mov
cmp
xchg
lret
aaa
jl
int3
clc
and
repnz
popf
jl
push
xor
mov
gs
xchg
lea
pop
push
test
and
cmp
out
cmp
xor
mov
dec
jmp
mov
jae
roll
adc
test
jle
jg
jle
movsl
cmpsl
mov
stos
inc
pop
dec
jle
and
cld
pop
dec
divb
outsl
dec
cmp
inc
loop
mov
lods
ss
daa
and
and
lcall
cmp
gs
shll
add
out
cmp
sti
mov
fidivrs
and
test
mov
jns
inc
xchg
mov
mov
ficoml
lcall
cmc
mov
mov
adc
mov
out
inc
imul
adc
sbb
std
fistpll
ljmp
outsb
icebp
sub
bswap
push
mov
loop
in
iret
in
pop
pop
in
or
in
out
or
test
hlt
push
es
pop
out
push
add
fsts
adc
and
ljmp
dec
lds
jns
fisubl
xchg
mov
out
shlb
mov
jg
xchg
test
addr16
inc
out
push
mov
jge
arpl
out
dec
jg
arpl
inc
xor
inc
lret
icebp
inc
scas
andb
outsb
mov
cs
call
lods
lock
orl
into
or
outsb
int3
pop
mov
push
in
push
inc
push
mov
mov
mov
jno
xorl
mov
fstpt
mov
sbb
loop
pop
xor
pop
cmp
mov
lods
addb
jo
int3
mov
cmp
addr16
sbb
dec
xor
add
pop
mov
pop
pop
jmp
mov
push
mov
pop
pop
addr16
and
jle
xchg
jg
jle
addr16
loop
push
sbb
push
stos
ja
stos
push
int3
nop
sbb
cmp
pop
push
inc
lock
ffreep
sti
int
xor
mov
jns
std
and
push
mov
adc
testl
xchg
lods
push
mov
mov
enter
fldenv
scas
aam
iret
sub
jns
leave
pop
fisttpl
mov
push
shl
mov
fucomi
inc
clc
fists
mov
js
enter
ss
fsubr
cs
lods
mov
pop
imul
add
adc
jmp
or
lret
inc
adc
push
sbb
es
jo
addr16
lds
outsl
add
mov
jnp
jle
inc
lret
fsubrl
jne
pop
cmp
ret
jno
loop
stos
ret
loop
test
mov
jnp
aam
push
or
mov
mov
cmc
xor
mov
push
pushf
test
sbb
dec
inc
xchg
outsb
negb
lcall
inc
dec
mov
add
add
adc
andl
leave
imul
ja
xchg
push
or
sahf
fstpt
lret
test
mov
fcom
call
inc
scas
or
scas
or
jg
jecxz
ss
in
dec
and
and
push
mov
adc
mull
loope
mov
push
adcl
xchg
shll
insl
out
push
aas
incb
xchg
pop
leave
ret
dec
push
mov
mov
or
dec
add
add
add
movl
xor
test
enter
mov
hlt
test
pushf
enter
movl
inc
inc
cld
xor
or
mov
call
pop
mov
dec
mov
pushl
or
ljmp
dec
loopne
rorb
add
mov
hlt
add
enter
dec
add
mov
orl
xor
lret
enter
mov
lea
push
mov
fs
decl
push
and
pop
inc
mov
push
pop
cld
dec
lea
mov
add
movl
decl
xor
cld
dec
jne
lea
push
mov
or
add
sub
add
rolb
inc
add
add
mov
incl
lea
call
add
jne
decl
dec
add
xchg
loopne
inc
incl
mov
xor
add
enter
mov
hlt
add
mov
add
add
incl
sbb
jne
mov
mov
movl
incl
fisttpll
test
inc
aas
inc
lea
inc
mov
mov
cld
loop
inc
out
fisttps
jecxz
in
incl
out
aas
inc
ljmp
incl
movl
insb
test
pandn
aas
add
mov
incl
or
mov
xchg
fildl
mov
cmp
dec
leave
mov
fsubrs
add
lea
push
add
mov
mov
add
mov
add
push
decl
push
mov
call
mov
add
test
loop
ljmp
fsub
add
mov
add
add
cmp
add
push
inc
push
fisttps
test
out
shlb
jmp
fildl
inc
jle
test
jmp
incl
in
add
jne
mov
cld
incl
mov
mov
add
call
rorb
add
add
xor
mov
cld
jle
lea
add
push
add
mov
decl
add
inc
add
add
push
mov
add
mov
mov
inc
sub
add
rolb
jne
xor
incl
call
mov
call
xor
push
adc
loopne
ret
loopne
xorl
cmp
bswap
rolb
jmp
mov
add
cld
jne
xor
lcall
add
mov
test
add
incl
jmp
adc
mov
fwait
mov
lea
xor
call
call
jne
xor
add
pushl
call
int3
incl
mov
xor
add
xchg
in
add
add
inc
add
mov
mov
or
inc
test
je
mov
xor
push
or
inc
in
mov
mov
fmul
add
mov
cld
loopne
inc
push
cmp
movaps
cld
fadds
jne
push
in
jne
lea
xor
jmp
mov
xor
adcl
rclb
inc
lock
inc
xchg
ud0
incl
dec
jbe
mov
push
pop
mov
inc
lret
inc
iret
jb
mov
enter
xor
pushf
mov
xor
dec
add
inc
mov
xor
add
mov
fmuls
xor
mov
roll
xor
mov
clc
enter
mov
test
clc
incl
mov
test
clc
pushf
inc
cmp
pushf
inc
mov
je
add
mov
sarb
adc
dec
adc
add
jmp
jb
add
xor
xor
add
clc
enter
pop
mov
push
push
xor
xor
add
add
lret
repnz
cli
fdivr
test
dec
inc
xor
add
mov
mov
clc
jne
mov
into
into
scas
dec
mov
sub
cmp
mov
mov
mov
add
xor
xor
lret
mov
inc
add
mov
lods
test
xor
mov
lock
bswap
lret
test
jmp
add
push
mov
test
push
clc
xor
xor
add
add
push
dec
mov
stc
roll
scas
mov
xor
xor
add
mov
clc
lret
into
mov
mov
mov
int3
add
xor
xor
add
mov
lock
stc
mov
or
jmp
dec
dec
mov
clc
test
clc
rorl
mov
call
les
lret
ja
mov
dec
xor
mov
clc
push
lret
mov
adc
jb
add
call
cmp
movsb
fwait
inc
xor
mov
clc
dec
lret
mov
call
scas
mov
fwait
sub
cmp
lods
xor
add
mov
mov
cmp
jb
add
dec
scas
mov
shrl
into
cmp
mov
dec
dec
mov
lret
xor
add
imul
mov
xor
mov
add
mov
inc
rdtsc
xlat
pushf
jge
xor
sub
cmp
jb
add
rorl
xor
add
jmp
mov
dec
into
mov
fwait
shll
lret
or
add
in
push
mov
gs
dec
sub
dec
xor
jge
mov
add
dec
decl
adcb
add
jge
push
push
shlb
xor
xor
inc
add
dec
or
jbe
mov
ror
enter
decl
push
lret
push
mov
mov
cld
subb
sti
add
push
lcall
mov
int3
pop
inc
decl
push
xor
movl
aas
push
inc
xor
add
mov
jmp
mov
rol
mov
mov
mov
cmp
mov
add
xor
fwait
lret
cmp
call
inc
inc
mov
mov
enter
add
add
clc
enter
push
pushf
mov
int3
or
test
clc
gs
add
push
xor
sub
dec
add
mov
or
cmp
dec
out
xor
mov
dec
add
push
push
add
sbb
mov
xor
dec
inc
xor
add
push
dec
mov
lret
into
sub
dec
adc
inc
push
test
unpcklps
jmp
add
movl
xor
rolb
clc
gs
mov
xor
sub
mov
add
sub
mov
mov
clc
addl
lcall
inc
decl
test
decl
push
add
dec
or
rorb
into
add
mov
sar
adc
clc
fadds
mov
push
adcb
add
lret
mov
cld
mov
into
add
jne
incl
rclb
push
mov
mov
sar
or
push
add
pushf
xor
pushf
mov
test
clc
inc
inc
mov
sub
mov
dec
xor
mov
xor
orl
shll
int3
lea
push
cmp
pushf
pop
lods
incl
mov
rcrb
test
inc
inc
add
push
in
inc
push
mov
cld
add
adc
add
jmp
add
mov
dec
push
cmp
unpcklps
jne
decl
mov
shlb
inc
add
lret
decl
stc
in
or
dec
clc
xor
mov
rolb
inc
add
clc
inc
lret
mov
in
lret
into
into
scas
dec
mov
sub
cmp
mov
int3
test
xor
xor
lret
mov
inc
add
mov
xor
mov
call
lret
test
jmp
add
push
mov
mov
lret
xor
add
add
push
dec
mov
stc
roll
scas
mov
xor
xor
add
mov
clc
lret
into
mov
test
push
jbe
mov
mov
push
add
rdpmc
lret
add
dec
stc
mov
or
jmp
dec
dec
mov
clc
test
clc
rorl
mov
lock
inc
mov
hlt
pushf
jge
sub
cmp
ja
mov
dec
xor
mov
clc
push
lret
mov
adc
jb
add
lock
sub
mov
mov
mov
mov
lock
ror
push
scas
mov
fwait
sub
cmp
movsb
xor
add
mov
mov
cmp
jb
add
dec
scas
mov
shrl
into
cmp
mov
dec
dec
mov
lret
xor
add
imul
mov
xor
mov
add
rolb
rdtsc
xlat
pushf
jge
xor
sub
cmp
dec
xchg
incl
jmp
mov
dec
into
mov
fwait
shll
lret
or
add
in
push
mov
gs
dec
sub
dec
xor
jge
mov
add
dec
decl
inc
push
decl
lea
push
mov
push
mov
les
add
incl
mov
cld
lret
add
jne
in
ror
xor
add
not
adc
inc
push
mov
push
mov
fdivr
sti
sbb
pop
xchg
leave
fwait
add
push
cmp
sqrtps
decl
push
cld
xor
lret
clc
xor
add
hlt
or
mov
hlt
dec
add
leave
mov
push
roll
mov
mov
lar
push
lret
jne
mov
or
mov
cld
inc
mov
add
in
test
ret
cld
mov
clc
xor
mov
loopne
mov
mov
clc
jne
call
and
je
mov
cld
or
push
add
add
inc
push
mov
pop
mov
ret
push
mov
clc
lock
jne
jne
mov
fiaddl
jne
cmp
pop
mov
push
inc
lea
inc
inc
int
inc
cld
jle
inc
xchg
mov
mov
or
inc
inc
mov
cld
jmp
mov
mov
rclb
iret
inc
leave
decl
mov
mov
mov
push
nop
incl
push
leave
iret
add
push
jmp
inc
push
mov
in
push
sbb
add
mov
cmp
jne
push
pop
push
mov
or
add
sub
lret
add
sbb
mov
lea
push
enter
testl
enter
negl
or
inc
loope
sub
inc
loope
add
push
push
imul
adcl
add
lea
mov
cmp
jne
mov
in
add
out
inc
aas
jmp
lock
and
mov
call
push
add
ud0
hlt
add
cmp
flds
out
call
cmp
shl
pop
fisttpll
push
add
add
push
add
sub
jne
lods
mov
dec
out
into
push
loopne
shrb
xorl
roll
mov
cmpl
mov
push
push
push
sub
push
adc
insl
mov
add
inc
mov
pop
addl
add
add
roll
cli
push
pop
lret
add
decb
sub
and
dec
inc
shll
add
pop
add
pop
dec
jmp
and
push
out
jmp
jmp
mov
decb
add
pop
icebp
mov
insb
adc
mov
or
mov
cld
jge
aas
and
adc
mov
and
dec
add
add
fadds
stc
enter
sbb
sbb
in
in
add
jne
cmp
jb
jmp
mov
add
add
jb
pop
faddl
or
inc
or
xlat
dec
push
add
leave
roll
add
mov
int3
jmp
mov
jne
mov
call
pop
add
pop
or
push
mov
int3
add
jae
int
enter
add
mov
push
pop
add
push
lea
mov
jb
mov
push
add
add
add
int3
jne
movsbl
add
add
mov
add
add
mov
sub
jb
add
jge
add
addl
jne
je
mov
rorb
orl
mov
mov
fadds
inc
pop
lea
push
out
add
add
mov
jb
add
push
call
add
jae
icebp
inc
mov
int3
out
loopne
sub
push
pop
push
jl
add
xor
mov
rcrb
rorl
inc
shr
orl
push
pop
add
jmp
mov
fdivrl
push
pop
call
mov
in
rolb
call
pop
enter
repz
xorl
je
or
jne
jmp
pushl
push
pop
cmpl
jge
mov
sub
pop
inc
mov
sub
lods
add
enter
repz
stc
jge
jnp
call
fadd
dec
insb
stc
cmp
push
mov
jne
mov
mov
add
sub
and
cmp
sbb
pop
call
fsubr
sti
add
add
add
roll
mov
clc
jne
mov
loopne
loopne
lods
int3
inc
mov
add
sub
shrb
add
call
add
dec
insl
in
lea
inc
inc
sub
orl
and
rorl
or
mov
stos
adc
inc
add
jne
mov
cmp
sub
sar
ljmp
sub
mov
mov
and
jne
sub
sbb
dec
push
add
ret
mov
leave
sub
ret
pop
push
rolb
addl
jb
ret
in
jecxz
push
xchg
jne
cmp
jne
mov
rorl
mov
pop
nop
mov
les
add
inc
mov
mov
cmp
or
inc
inc
xor
cld
add
add
add
sbb
dec
je
mov
add
and
jae
mov
incl
push
shr
in
push
add
add
inc
mov
add
jmp
test
push
pop
xor
pushf
add
rcr
inc
add
add
out
inc
inc
sub
dec
shlb
inc
fnstcw
testb
rolb
lea
sbb
inc
add
add
mov
les
mov
add
add
or
mov
add
add
push
movb
or
dec
lea
xor
movsl
repz
add
prefetcht0
xor
mov
pop
mov
or
cmpb
movb
add
mov
xorl
mov
sbb
inc
repz
add
xor
pushf
push
jb
lea
mov
loopne
dec
mov
into
add
iret
inc
call
enter
jge
xor
inc
inc
mov
mov
or
pop
mov
in
cmovne
add
in
cld
inc
sbb
inc
add
adc
sub
add
jle
testb
les
add
decl
mov
inc
in
mov
inc
mov
push
inc
rcr
inc
push
incl
out
inc
add
imulb
mov
mov
fcos
mov
in
jo
incl
mov
out
mov
mov
inc
cmp
test
std
in
add
cmp
outsb
add
push
push
test
jae
add
incl
mov
jl
add
cld
dec
addb
data16
mov
mov
inc
mov
incw
data16
inc
jge
add
lea
add
ljmpw
pushl
lea
fsubs
test
incl
test
inc
ret
mov
push
rolb
test
aam
pushl
add
or
incl
add
pushl
mov
mov
jp
decl
add
push
jl
push
orl
callw
lea
out
mov
data16
lea
lea
mov
in
cwtl
loop
mov
data16
push
jle
inc
pop
push
adc
cmp
repnz
inc
mov
cmp
lea
push
inc
inc
xor
dec
push
inc
jge
mov
mov
add
add
test
incw
mov
hlt
xor
clc
ret
rol
mov
mov
rolb
push
add
inc
test
push
mov
mov
push
jmp
push
add
decl
add
cmp
decl
jmp
push
call
mov
lea
jne
decl
decb
mov
push
jmp
inc
pop
lea
daa
test
test
inc
decl
test
mov
lods
push
inc
jne
decl
mov
add
inc
ret
xor
pushf
mov
pushf
loopne
test
clc
dec
inc
xor
data16
inc
test
clc
inc
test
lahf
decl
incl
lea
rolb
cld
pushf
dec
test
add
incb
decl
mov
lea
aam
call
xor
mov
test
cmp
ud0
test
ljmp
mov
incl
xchg
add
add
inc
lea
mov
cld
push
mov
xor
add
push
addb
jmp
addl
or
jmp
nop
test
xor
mov
mov
add
decl
add
decl
movsl
add
add
rdpmc
addb
mov
sub
mov
push
push
jne
mov
cld
add
push
incl
add
add
mov
sbb
leave
test
jne
call
xor
mov
enter
mov
mov
cld
add
inc
dec
mov
inc
decl
add
xchg
ret
add
add
mov
lea
add
mov
inc
rdpmc
jne
add
inc
clc
add
mov
mov
in
movb
add
add
cmp
pushl
add
test
je
mov
sbb
test
js
add
sub
mov
add
dec
push
mov
mov
mov
sbb
or
dec
incl
push
add
mov
orl
add
push
cmp
inc
mov
push
incl
inc
add
addb
mov
lea
je
decl
call
mov
in
call
mov
mov
mov
out
addl
mov
inc
lcall
ljmp
mov
sbb
cmp
pushf
pushl
mov
add
aam
cmp
add
adc
add
mov
cmp
jmp
mov
inc
or
decl
jne
mov
mov
lock
xchg
jmp
adc
inc
mov
push
sub
push
test
inc
dec
mov
movl
add
add
mov
push
roll
bound
xor
and
in
lea
jne
incl
jnp
mov
pusha
mov
cld
shr
add
push
lea
mov
cwtl
cli
add
or
inc
dec
incl
add
call
add
push
adc
mov
mov
addl
incl
inc
stos
mov
add
mov
cmp
movsb
mov
cld
jae
add
clc
add
mov
clc
pop
inc
xor
pushl
mov
pushl
mov
sub
add
mov
mov
ret
mov
ret
mov
add
mov
sub
sar
test
inc
add
testb
push
add
add
add
add
add
mov
mov
cld
fidivl
mov
xorb
add
sbb
jne
mov
sbb
mov
add
cld
mov
or
dec
cld
cmovne
add
seto
inc
adc
mov
cmp
xor
gs
je
push
sarb
mov
push
cmp
add
dec
mov
in
adc
pop
inc
leave
or
gs
add
into
in
enter
push
xorl
or
jnp
test
add
mov
ltr
decl
clc
out
add
cmp
jge
jb
je
pop
push
mov
in
roll
orl
cmpl
hlt
mov
push
jns
lock
ror
test
dec
rcpps
mov
inc
test
je
mov
adcl
and
jp
rcpps
add
sbb
add
je
cmp
js
add
jns
vmread
add
adc
jge
mov
add
or
push
push
mov
add
pop
add
mov
inc
pop
xorl
add
push
clc
mov
jp
add
divl
test
je
mov
or
decb
jbe
mov
add
cmp
add
je
mov
mov
hlt
orb
jb
jmp
xor
pop
pop
pop
ret
ret
mov
xorl
pushf
xor
rdmsr
test
dec
ret
mov
pop
dec
jne
xor
inc
dec
jbe
inc
pop
add
push
dec
push
mov
and
jo
mov
sbb
mov
nop
or
jne
cmp
cld
xor
add
cmp
js
jae
xor
jmp
mov
fdecstp
test
add
add
mov
cmp
adc
jge
mov
jl
clc
dec
jge
mov
jb
mov
mov
xor
add
mov
inc
pop
jge
cmp
mov
imul
fimuls
fists
in
jne
mov
imul
fdivrp
filds
test
inc
mov
mov
adc
rcll
mov
fiadds
mov
mov
xor
mov
xlat
into
ffreep
lret
iret
dec
inc
mov
fmull
dec
jnp
add
mov
inc
dec
lea
add
jb
add
inc
imul
cld
clc
mov
incl
or
sbb
lret
add
dec
add
enter
inc
pop
decl
add
add
mov
xor
or
pop
cltd
push
clc
mov
xor
add
cmp
hlt
cmp
or
mov
loopne
mov
cld
pushf
pop
fwait
mov
lock
adc
orb
xor
dec
mov
iret
inc
jne
mov
cmp
je
add
or
dec
inc
mov
cld
add
cmp
mov
or
mov
test
inc
xor
mov
jne
mov
fcomps
add
incl
cld
add
mov
cld
inc
fidivrs
fbstp
mov
adc
fadd
add
mov
inc
mov
loopne
sbb
sbb
pushf
add
mov
cwtl
inc
inc
jne
mov
clc
add
mov
or
inc
lea
add
inc
rorl
add
shufps
jmp
xor
hlt
mov
fadds
xor
add
cmp
pmuludq
jmp
mov
or
inc
mov
jne
mov
clc
add
xor
jne
pushl
add
mov
cld
add
xor
mov
adc
sub
lea
add
jb
add
inc
add
inc
mov
or
mov
in
scas
inc
mov
in
add
mov
dec
mov
mov
cld
push
dec
add
mov
in
cmp
mov
mov
mov
xor
cmpl
xor
jmp
add
xor
add
cmp
mov
mov
adc
jmp
mov
cld
mov
push
jne
dec
or
push
inc
in
add
or
dec
cld
mov
xorl
pushf
decl
mov
mov
xor
mov
inc
mov
mov
call
add
mov
or
jo
push
xor
pmulhuw
test
mov
mov
xor
xor
xor
add
inc
mov
movl
sub
lock
mov
mov
or
ja
mov
cld
cli
mov
cmp
bswap
mov
mov
clc
repnz
push
xor
cmp
pushf
pop
jmp
mov
xor
lea
xor
pushf
out
neg
insl
test
clc
pop
inc
or
xor
add
jne
mov
in
push
xor
add
cmp
add
mov
mov
add
mov
mov
fwait
pushf
xor
jne
mov
icebp
icebp
shl
mov
push
jne
mov
in
jmp
add
mov
or
inc
jne
mov
ret
or
jge
sub
xor
add
mov
clc
negl
xor
cmp
repz
xor
add
mov
mov
cld
lock
test
clc
add
fdivrp
test
jnp
add
jae
sub
shll
leave
call
in
in
add
mov
in
test
mov
xor
pushf
jnp
xor
loopne
jne
mov
add
xor
mov
cld
jb
add
jne
mov
jge
mov
lock
xor
mov
lock
jge
xor
dec
mov
loopne
jge
add
icebp
add
dec
hlt
xor
mov
in
jge
mov
dec
push
xor
inc
hlt
xor
mov
repnz
cmp
test
fistps
inc
mov
add
inc
test
add
add
ret
jnp
inc
inc
xor
fdivl
test
push
add
cmp
setnp
mov
call
or
inc
mov
and
lock
movl
mov
clc
xor
mov
inc
mov
mov
mov
mov
hlt
inc
rorl
mov
push
mov
in
jne
mov
addl
clc
mov
add
rolw
mov
jne
incl
inc
push
test
sub
add
and
add
mov
and
cmp
add
inc
push
add
push
enterw
mov
add
add
str
lea
sbb
dec
cmp
inc
push
mov
push
add
mov
inc
add
add
mov
loopne
dec
mov
cld
push
xchg
add
add
or
dec
loopne
xchg
push
add
dec
jmp
mov
sbb
inc
xor
add
push
divl
and
add
jno
incl
inc
push
push
mov
mov
push
inc
enter
push
call
pop
push
mov
mov
push
jo
incl
or
call
fmull
mov
mov
adc
dec
xor
mov
mov
mov
push
lret
movb
inc
movntps
lret
into
dec
lret
mov
mov
fdivl
mov
push
mov
sbb
dec
sarl
push
jne
mov
lea
call
sbb
add
push
mov
push
mov
test
xadd
pop
add
mov
or
push
add
add
and
call
add
mov
add
xor
add
inc
je
push
decb
add
or
inc
add
data16
subl
add
add
enter
int3
loopne
rolb
lea
data16
add
sbb
inc
cmp
add
xor
sub
mov
or
ror
dec
inc
cmp
cld
or
ret
lret
dec
mov
loopne
cmp
inc
daa
loopne
in
add
add
push
inc
xor
add
push
push
inc
in
push
inc
sbb
rorb
addb
ljmp
xor
mov
fmuls
add
lea
add
popl
add
push
incw
mov
add
xor
test
inc
mov
add
or
or
inc
mov
jne
mov
add
add
adc
adc
push
mov
mov
inc
mov
or
push
jne
call
inc
sarb
in
add
add
and
fs
incl
jle
leave
scas
inc
add
orb
call
shr
xchg
add
add
dec
and
push
decl
mov
mov
lea
mov
add
mov
push
shlb
inc
in
jno
push
mov
mov
je
mov
sbb
popl
add
add
adc
jmp
sub
jne
mov
in
popl
push
incl
adc
add
call
and
and
inc
test
sldt
xor
pushf
jmp
mov
or
inc
call
mov
loopne
inc
add
mov
add
add
cmp
test
sbbl
jne
call
leave
rcrb
add
add
add
inc
mov
fcom
add
lea
pushl
call
mov
fstps
push
pop
mov
addl
mov
xor
xor
pop
or
inc
push
in
or
movsl
xbegin
clc
adc
divb
or
test
add
add
adc
xchg
test
clc
data16
orl
rolb
mov
mov
push
add
jge
add
jne
mov
jmp
xor
pop
cvtdq2ps
ret
mov
xor
add
push
rdpmc
out
add
mov
ret
sbb
cmp
or
or
pop
inc
add
add
invd
jge
mov
cli
xor
mov
ret
mov
sub
inc
xor
pushf
inc
mov
hlt
test
mov
xor
dec
or
jne
mov
call
inc
mov
add
add
inc
mov
addl
inc
mov
lock
jge
mov
cli
xor
add
test
add
cmp
xadd
test
mov
xor
add
pop
loopne
inc
clc
xor
add
data16
mov
hlt
xor
add
data16
cmp
add
psubq
ltr
add
add
data16
mov
jge
data16
data16
mov
fdivl
data16
mov
mov
pop
or
clc
mov
lock
jge
invd
pop
add
cmp
data16
mov
pop
fbstp
test
add
add
jge
data16
pop
stc
bsf
mov
in
test
mov
call
cmp
add
mov
call
add
mov
jnp
mov
mov
call
mov
data16
xorl
fisttps
cld
jne
xor
mov
sti
repnz
data16
push
xor
mov
fwait
data16
mov
mov
fisttps
or
mov
hlt
mov
add
dec
or
mov
or
mov
fdivrl
xor
pop
lock
lea
icebp
jb
add
jge
mov
fsubr
pop
mov
in
rcrl
jb
add
jge
mov
in
pop
data16
cmp
mov
fdivrl
cmp
mov
mov
lock
mov
or
clc
cmp
je
push
loopne
dec
mov
int
mov
pcmpgtd
add
jmp
mov
lock
rorl
or
jb
add
loopne
jne
data16
mov
data16
add
add
retw
ret
lret
enterw
pop
jne
mov
call
xor
lea
repnz
add
xor
in
xor
movl
clc
add
pop
pushf
pop
call
mov
push
pop
mov
push
inc
add
popa
data16
into
gs
add
ret
add
add
add
cmp
add
into
ret
pop
adc
mov
mov
jne
lea
mov
sarl
test
mov
push
xorb
mov
xor
ss
fs
mov
je
xor
mov
ss
pop
cmp
jne
mov
cld
push
pop
inc
stc
xor
test
clc
test
cmp
fs
or
add
lret
xor
pushf
mov
ret
pop
dec
mov
push
add
xor
cmp
je
mov
lea
push
cmp
mov
add
sub
add
mov
jne
mov
xor
mov
push
cmp
jne
sbbl
clc
inc
pop
sti
add
cld
xor
mov
roll
mov
inc
in
add
mov
mov
push
mov
test
xor
pushf
sub
inc
sub
mov
inc
add
or
cmp
mov
cmp
je
push
dec
str
cmp
int
mov
mov
cld
add
data16
push
add
jne
movl
clc
xlat
inc
mov
push
pushf
in
add
add
add
cmp
add
lret
lock
clc
inc
lret
cmp
xor
pushf
test
je
xor
rorb
push
add
jb
add
dec
mov
push
push
adcl
xor
mov
scas
ret
jns
mov
dec
or
ret
lock
mov
or
mov
xorl
mov
adc
iret
inc
movl
incb
ret
adc
clc
dec
fisttps
add
ret
lea
add
xor
pushf
add
add
inc
test
xor
push
fwait
push
xor
inc
cmp
jbe
mov
or
inc
test
xor
in
hlt
push
push
push
push
mov
fwait
fwait
xor
mov
or
mov
clc
jb
add
orl
addl
mov
or
inc
dec
mov
orw
xor
mov
mov
mov
mov
inc
dec
add
add
mov
clc
or
mov
clc
popf
incl
ret
adc
mov
hlt
test
clc
or
xor
pushf
jb
add
inc
daa
inc
inc
xor
dec
fwait
add
clc
cmp
or
add
xor
or
lea
add
mov
cld
dec
push
sub
add
or
add
or
add
mov
inc
mov
cmp
xbegin
clc
or
xor
adc
lea
add
inc
add
add
je
push
or
dec
std
mov
mov
mov
or
inc
clc
mov
hlt
call
push
or
push
xor
mov
xor
pushf
inc
mov
or
add
inc
mov
or
inc
push
jmp
mov
mov
jne
jmp
mov
clc
lret
push
mov
mov
sub
decl
or
pop
ds
pushl
mov
mov
jmp
leave
jne
call
in
dec
add
add
inc
cmp
je
mov
or
add
or
adc
enter
rolb
mov
or
rorb
jmp
push
mov
cld
inc
inc
orl
push
push
mov
add
test
add
mov
mov
lock
fcoms
mov
push
enter
cmp
add
mov
call
cmp
jmp
push
call
mov
cld
or
call
add
xor
jne
cmp
jne
mov
or
pop
into
je
mov
or
mov
mov
mov
or
sar
xor
xor
pop
adc
ret
cld
inc
mov
cld
mov
push
pop
or
xorps
test
add
adc
addl
jmp
ror
inc
leave
xor
and
add
xor
xorl
mov
pcmpgtw
add
leave
mov
push
dec
mov
lea
xor
sysret
dec
rorb
pushw
jne
ud0
mov
lods
add
data16
iret
and
cli
inc
cmp
add
inc
pop
lea
mov
add
mov
mov
add
inc
data16
clc
int3
cmp
je
push
pop
xchg
data16
lea
jb
jmp
call
clc
xchg
mov
or
lea
push
inc
jge
mov
fdivs
incl
xor
xchg
ret
xor
cmp
data16
rolb
add
dec
xchg
push
jmp
push
add
add
mov
clc
dec
xchg
cmp
jne
xor
jmp
add
jne
call
clc
xchg
sti
add
add
xor
pop
mov
jmp
mov
cmp
cmp
lea
jle
jae
mov
lcall
inc
push
lea
mov
int3
push
xchg
add
add
inc
add
cld
mov
aam
xchg
mov
testb
mov
hlt
add
mov
decl
incl
mov
call
je
js
lock
mov
mov
sbb
clc
add
mov
rorb
dec
xchg
mov
in
jge
cmp
clc
pop
fistl
clc
add
mov
mov
mov
adc
add
adc
pop
sbbl
ret
cmp
mov
cld
add
add
add
sub
or
add
mov
push
push
clc
addl
out
add
jmp
cmp
jmp
je
mov
inc
add
add
add
pop
pop
push
inc
in
pop
in
cmp
xor
add
push
mov
in
dec
push
test
add
leave
inc
test
add
add
dec
push
mov
hlt
push
dec
leave
mov
clc
cmovge
mov
clc
popl
push
add
push
xor
cld
add
xor
add
add
int
mov
add
cmp
jne
xor
jmp
add
mov
or
mov
mov
mov
or
shl
icebp
addb
or
or
stc
shll
xor
inc
xchg
add
add
mov
test
sub
jmp
mov
lock
lea
mov
or
leave
add
dec
dec
test
paddb
add
dec
mov
mov
or
dec
xor
mov
adc
mov
call
mov
push
clc
or
push
lret
mov
mov
xor
cmp
lsl
call
or
dec
or
inc
xor
in
add
inc
pop
xor
testl
dec
adc
inc
xor
sub
test
clc
inc
add
hlt
leave
test
clc
inc
push
cmp
rorl
orb
mov
push
clc
ret
xor
xor
js
dec
push
mov
lock
lret
jne
mov
enter
lret
into
out
dec
dec
jmp
xor
xor
mov
sub
add
or
dec
mov
xor
jb
add
dec
pop
mov
cld
mov
call
stc
add
pop
leave
add
in
mov
xor
movl
mov
xor
pushf
inc
cmp
pushf
xchg
mov
ljmp
push
push
push
push
push
xor
mov
add
mov
clc
lret
cmp
pushf
mov
clc
cld
jne
xor
xor
or
add
hlt
dec
dec
je
xor
xor
add
add
rol
mov
in
inc
enter
icebp
mov
clc
lock
enter
lret
inc
jne
mov
cld
dec
enter
fwait
sti
xor
mov
mov
xor
xor
mov
mov
push
shr
in
cmp
add
pushf
mov
call
xor
pushf
popa
push
dec
inc
mov
clc
pushf
into
mov
in
call
pop
or
or
or
push
inc
cmpxchg8b
leave
loopne
test
mov
rcll
xor
add
and
mov
leave
sti
inc
decl
mov
clc
dec
iret
xor
jb
add
inc
mov
xabort
loopne
ljmp
mov
clc
lock
dec
mov
loopne
incl
mov
hlt
jne
mov
in
dec
or
jb
add
xor
add
mov
subl
mov
xor
pushf
mov
clc
add
mov
adc
inc
xor
jmp
mov
loopne
inc
mov
mov
nop
roll
mov
mov
dec
push
mov
xor
mov
mov
iret
xor
add
mov
dec
mov
mov
mov
mov
xor
mov
clc
enter
mov
lock
mov
cmp
rol
enter
inc
adc
inc
clc
xor
add
mov
roll
add
push
mov
fsubr
inc
mov
adc
add
inc
test
cmp
pushf
nop
movl
clc
add
add
or
dec
ret
push
inc
dec
mov
mov
jne
mov
call
mov
mov
clc
mov
xor
adcl
inc
push
mov
clc
incl
mov
clc
rolb
je
mov
jne
lea
mulb
decl
fadds
inc
jmp
mov
roll
mov
lock
dec
ret
mov
mov
mov
fadd
enter
inc
cld
mov
xor
add
sub
xor
pushf
add
or
jne
clc
mov
call
jmp
mov
xor
xor
enter
clc
inc
inc
cmp
pushf
jne
mov
clc
dec
out
dec
mov
lea
cmp
lea
mov
cld
iret
mov
jmp
test
je
mov
fdivr
movl
lock
inc
lock
lret
imul
testl
dec
mov
fmuls
fmuls
enter
inc
dec
xor
add
mov
inc
inc
push
mov
lock
mov
fadds
rol
test
dec
push
decl
push
mov
add
cmp
add
loopne
add
dec
xor
pushf
mov
cld
iret
test
mov
in
dec
add
add
dec
mov
fmull
add
testl
test
add
add
mov
cld
mov
hlt
mov
add
cmp
add
mov
mov
call
dec
add
cmp
cld
iret
mov
dec
push
lea
mov
call
iret
inc
mov
or
or
xor
cmp
je
mov
mov
xor
mov
mov
xor
bswap
rorb
add
mov
xor
or
mov
xor
bswap
rorb
add
add
xor
mov
add
dec
dec
xor
mov
lock
iret
rorl
inc
mov
iret
add
xor
mov
or
dec
shll
cmp
fmull
test
dec
dec
xor
or
dec
enter
add
mov
xor
or
mov
mov
xor
mov
cmp
jne
lea
sti
or
cmp
je
mov
ret
or
call
add
mov
add
cmp
mov
xor
mov
add
roll
cmp
call
add
mov
xor
sbb
cwtl
enter
inc
decl
fadds
rorl
inc
xor
mov
or
inc
rcll
mov
xor
jb
add
shll
mov
xor
add
repz
inc
mov
xor
inc
mov
mov
jne
mov
test
inc
mov
mov
lea
xor
add
mov
lods
dec
inc
mov
lret
mov
adc
std
ret
ljmp
hlt
push
xor
enter
inc
add
cld
test
fwait
inc
xor
pop
push
incl
in
mov
push
inc
cmpsl
mov
or
add
add
add
icebp
je
mov
cld
rol
ret
add
lea
cwtl
jne
clc
or
incl
cmp
incl
lcall
or
push
mov
test
inc
mov
imul
dec
mov
push
dec
push
xor
add
push
incl
lods
inc
inc
mov
xchg
or
call
adc
orb
inc
inc
add
mov
call
push
push
dec
jo
push
dec
mov
cmp
cmovne
call
mov
lcall
leave
inc
adc
jne
call
dec
inc
mov
add
mov
push
or
dec
xorl
cmp
mov
pop
adc
ret
mov
clc
mov
pop
mov
mov
push
push
lock
mov
adc
or
ret
xor
add
or
jge
mov
and
cmp
mov
xchg
dec
add
mov
add
dec
into
mov
mov
das
add
add
mov
and
mov
and
xor
lea
xor
add
xor
orl
cmp
pushf
mov
or
jne
call
adc
mov
adc
movl
pop
and
call
and
call
addl
pop
pushf
in
ret
push
test
mov
and
mov
mov
je
je
mov
mov
add
test
dec
and
test
push
add
or
adc
and
or
cmp
sbb
dec
ret
push
je
and
.byte
.byte
