push
mov
sub
add
mov
cmpl
movl
not
jmp
movl
not
cmpl
jne
push
call
mov
sub
movzwl
and
add
mov
xor
add
sub
xor
adcl
mov
mov
sub
xor
adc
andl
jmp
jae
insl
mov
and
cmp
sub
sbb
sbb
sahf
adc
sbb
and
rorb
cs
push
mov
fdivr
pop
jno
sbb
mov
and
inc
mov
cld
clc
sub
dec
pop
push
and
fcompl
dec
inc
xchg
lret
xorb
jle
sti
xchg
mov
arpl
jmp
adc
mov
mov
sbb
push
xlat
fistl
pop
inc
add
dec
adcb
fadds
cmp
cmp
into
push
add
xchg
mov
xchg
leave
sbb
mov
ja
inc
jae
or
call
xchg
fsubs
or
loop
xchg
jg
in
popl
loope
xor
data16
push
mov
test
sbbl
mov
js
outsb
mov
cmpl
aaa
or
fcoms
faddl
add
popa
jg
push
and
in
mov
shll
scas
xor
nop
lea
ss
mov
xchg
mov
pop
mov
outsl
pushf
add
cmpsl
xor
fs
sub
or
dec
lods
jp
shll
push
and
imul
inc
fstpt
je
int
lds
add
sub
pop
fldcw
add
imull
fbstp
pop
daa
pop
lods
popa
push
fstl
dec
loopne
test
mov
xchg
pop
faddp
pushf
push
mov
add
pop
adc
je
cmp
popf
sbb
out
rcrb
fidivrs
add
xchg
rcrl
stos
jno
sti
das
add
bound
push
and
nop
outsl
hlt
mov
cwtl
dec
push
jle
sbb
adc
dec
mov
lea
int3
adc
mov
in
js
call
xor
imul
mov
mov
orl
lcall
push
rcr
gs
ret
imul
pop
and
fstps
lods
dec
scas
mov
mov
jae
xchg
inc
mov
dec
sbb
sbb
adc
bound
ss
out
loopne
jge
rcll
out
mov
jmp
inc
lods
jg
pop
lret
or
out
dec
mov
inc
xchg
jl
into
xchg
mov
out
je
shrl
test
fdivrl
or
data16
push
cmp
pop
inc
int
mov
cmp
test
xchg
aad
and
shll
jmp
jecxz
orl
adc
pop
mov
sub
arpl
or
lahf
mov
inc
push
sahf
cmp
frstor
mov
xchg
shll
mov
push
push
test
in
cmp
data16
cmp
jmp
mov
mov
fs
inc
cmc
push
mov
cmp
dec
clc
xor
mov
add
or
or
imul
subl
aad
push
mov
out
add
inc
mov
call
and
fistl
push
fimuls
std
xchg
xchg
mov
mov
lods
inc
mov
icebp
sbb
push
sbb
out
jns
pop
or
add
in
sbb
mov
test
xor
add
pop
xor
cmpl
xchg
pop
pop
sub
ret
or
mov
icebp
inc
cmp
mov
mov
sub
mov
push
mov
mov
mov
sbb
mov
mov
mov
and
orl
orl
andl
mov
add
mov
cmpl
mov
movl
mov
mov
jmp
notl
mov
cmpl
jae
push
call
mov
xor
or
sub
or
xor
add
mov
sub
imul
and
or
mov
mov
jmp
outsl
add
das
movsb
out
sbb
push
adc
sbb
mov
mov
call
lods
jl
imul
pop
std
in
mov
cmpl
adc
into
push
dec
jge
test
push
fmull
testl
mov
mov
stos
ja
mov
push
stos
add
jb
mov
mov
xor
test
sub
sahf
stc
sub
mov
jle
add
mov
int
loope
mov
or
push
xor
aaa
pop
mov
ret
jp
pop
dec
cmp
and
mov
sbb
xor
add
sub
mov
add
mov
std
cmpsl
dec
out
lahf
ljmp
and
test
fucomi
mull
pop
pmaddwd
into
mov
cmp
aaa
in
popf
daa
cmp
rol
daa
pop
adc
push
mov
test
jle
gs
shlb
mov
push
cmpsl
mov
jbe
cmp
les
mov
jl
mov
orl
jbe
add
mov
loope
aaa
adc
mov
mov
add
or
cmp
ss
sub
cmc
fwait
mov
ljmp
fs
gs
inc
shl
in
sbb
sbb
gs
pop
and
sahf
push
jnp
outsb
jecxz
adc
ja
repz
ret
daa
popf
push
mov
outsl
pop
ss
dec
shrb
fdivl
mov
in
shlb
pop
repnz
or
push
xchg
and
sub
lods
test
mov
add
lods
push
pop
fdivrs
jb
cmp
jne
ror
push
mov
imul
int
jecxz
roll
mov
sbb
out
rorb
inc
clc
dec
ret
xchg
jle
adc
jmp
and
cmpl
mov
movsl
ret
stc
add
in
pop
push
inc
dec
sahf
repz
outsl
push
jle
stos
subb
sarb
jge
fwait
sub
inc
adc
mov
fs
cs
inc
push
mov
xchg
inc
mov
sbb
xchg
inc
adc
sub
sbb
test
add
stos
cltd
mov
mov
and
sbb
out
adc
mov
cli
cmpsb
jle
mov
mov
jb
cwtl
jns
push
testb
sbb
inc
cmp
popa
rolb
sbb
add
loop
mov
fdivl
das
loopne
sub
push
and
inc
sbb
jne
icebp
cmp
xchg
out
in
stos
mov
iret
lcall
aaa
int
inc
stos
lret
jp
or
mov
pop
or
imul
jne
mov
mov
repnz
stos
pop
mov
insb
in
push
adc
ja
cld
mov
pop
cli
jecxz
adc
ja
mov
clc
sub
enter
dec
shll
push
repnz
pop
mov
and
adc
movsl
push
int
mov
xor
jecxz
sbb
mov
jb
pop
jmp
sub
sbb
dec
push
fisubs
pop
mov
jecxz
test
sub
aad
adc
add
push
jne
xor
test
jp
outsl
adc
jle
cs
fsubr
or
out
jle
jbe
into
push
cmp
lahf
repnz
pop
lds
out
sub
mov
mov
sbb
cmpl
notl
mov
mov
jmp
movl
not
cmpl
jge
push
call
mov
adc
and
add
mov
xor
and
mov
mov
sub
mov
orl
sbb
orl
adc
lea
mov
movl
mov
cmpl
mov
movzbl
mov
jmp
not
mov
cmpl
jg
push
push
pushl
push
call
adc
sbb
neg
adc
sub
addl
xor
mov
mov
add
sub
mov
mov
inc
mov
cmpl
mov
mov
movl
jmp
movl
cmpl
jg
push
push
push
call
sub
or
sub
mov
adc
mov
xor
mov
shrd
cmpl
mov
movl
movl
jmp
movl
cmpl
jge
pushl
pushl
push
call
movzwl
and
mov
and
add
sub
add
or
shr
mov
cmpl
movl
mov
movl
jmp
mov
mov
cmpl
je
pushl
pushl
pushl
push
push
call
sub
movzwl
add
add
sbb
incl
mov
xor
xor
orl
or
jmp
xchg
xchg
je
insb
sub
dec
and
jbe
jo
or
sbb
push
dec
mov
xchg
cmpsb
ds
push
lahf
negl
out
icebp
sahf
cli
pusha
fwait
jo
icebp
cwtl
aam
pop
mov
xchg
stos
cmp
push
or
sbbl
xchg
sbb
hlt
push
or
mov
lds
xchg
icebp
add
fidivl
scas
mov
pop
outsl
lods
sub
adc
sbb
js
mov
lea
test
inc
sbb
in
sbb
aas
mov
add
stos
cld
pop
pushf
dec
fsubl
lar
incl
jo
cmovp
cmp
cmpb
push
xlat
enter
mov
jns
push
add
pop
jl
sbb
push
sub
sahf
in
das
adc
hlt
js
stos
out
jle
push
and
sbb
pop
pop
insl
in
jnp
mov
mov
orb
xor
ret
mov
addr16
and
add
cmc
pop
mov
pushf
das
sub
xchg
enter
xor
adc
repz
repnz
ret
push
fstpl
add
int
xor
xchg
push
inc
lret
lret
adc
jb
mov
repnz
dec
xor
adc
jmp
mov
out
faddl
cli
lea
je
test
dec
arpl
mov
roll
lret
orb
out
push
jmp
imul
rorb
clc
leave
mov
lret
jmp
insb
mov
clc
clc
and
enter
stc
ja
fs
pop
pop
xchg
lods
out
cmpsb
outsl
loop
mov
adcl
sbb
sub
popf
xor
ja
hlt
insl
push
test
fdivrp
js
or
cmp
jnp
arpl
cmp
in
cmpsl
insl
push
ret
xchg
mov
into
xchg
dec
xchg
dec
mov
sbb
or
mulb
xchg
mov
iret
push
pop
xor
mov
loopne
mov
scas
shr
out
gs
scas
insl
insl
shll
mov
xchg
push
aam
hlt
sub
cmp
pusha
pop
iret
jle
push
fldenv
mov
arpl
test
push
mov
jbe
adc
sub
cmp
sub
outsb
mov
adc
xor
jne
lea
mov
xor
pop
lods
xchg
adc
inc
pop
add
paddb
jb
int
mov
loopne
and
jp
fidivrl
in
cmp
in
addl
dec
sbb
push
sbb
adc
cmp
lods
cwtl
fucomp
pop
dec
out
xchg
mov
xchg
cmpsb
cwtl
cld
adc
jne
cmp
push
add
lds
outsb
push
add
je
daa
mov
ljmp
jne
mov
push
ss
xchg
lock
jo
fsubp
inc
insb
inc
cmp
adc
lahf
clc
mov
xor
xchg
lock
xchg
xchg
or
in
xchg
cmpl
mov
inc
pop
push
subb
dec
test
mov
cmp
addr16
cltd
out
mov
cmp
rorb
push
jae
xor
loop
xor
loopne
mov
add
outsl
push
fwait
mov
adc
mov
int3
movsb
int3
inc
call
sub
shrl
fs
out
addb
lcall
outsb
cmp
mov
pushf
fs
inc
nop
push
sub
add
adc
movl
cmpl
movl
movl
jmp
mov
mov
cmpl
jbe
pushl
push
call
orl
xorl
addl
and
movl
subl
movl
cmpl
mov
movl
mov
movl
jmp
mov
cmpl
ja
push
pushl
push
call
sbbl
xorl
adcl
addl
andl
sbbl
sbbl
sbb
movl
neg
movl
movl
movl
mov
add
movl
mov
add
movl
cmpl
movl
notl
jmp
movl
mov
cmpl
jle
push
pushl
push
pushl
push
pushl
call
adcl
addl
subl
orl
mov
xor
movl
xor
jmp
stos
fisttpll
aas
and
mov
stos
add
sbb
xor
fisttps
jle
cmp
adc
jmp
loop
xor
mov
call
scas
mov
and
push
fstps
push
jmp
aaa
mov
xchg
jbe
in
mov
mov
stos
ret
sub
mov
pop
cld
xchg
inc
je
movsl
sbb
adc
dec
cmc
cmp
cmp
cli
mov
stc
cmpsl
jbe,pt
or
pusha
shll
dec
call
scas
jno
addr16
xchg
cmpsb
fcompl
arpl
jp
imulb
mov
mov
sub
rcrb
out
push
jecxz
pop
or
jg,pt
mov
mov
add
push
arpl
insl
sub
fcmovu
add
dec
mov
push
mov
in
push
out
mov
loope
fldenv
mov
xchg
mov
push
mov
sbb
jl
pop
in
cmp
mov
lahf
push
sbb
nop
dec
push
sbb
and
cmpb
int
lcall
rcrl
gs
sbb
andl
lret
dec
adc
sbb
daa
sub
add
jp
ficomps
push
call
mov
push
mov
push
xor
fisubs
pop
xor
in
jnp
mov
inc
addr16
enter
lods
movsb
mov
mov
cld
mov
and
mov
xchg
fisubrs
dec
in
mov
aas
sbb
flds
inc
pop
or
mov
jo
insb
or
mov
pop
ljmp
je
push
dec
iret
cmp
cmpsb
sub
jb
adc
sbb
rorb
call
pop
pop
ja
scas
andl
inc
roll
nop
dec
fcomps
mov
cmp
and
jae
jno
mov
rcrb
push
push
jmp
leave
inc
mov
outsl
cmp
dec
movsl
scas
mov
add
test
stc
pop
sbb
sbb
and
mov
mov
push
daa
les
pop
xor
fdivl
sahf
xchg
xchg
pop
jmp
iret
fnsave
or
xchg
repnz
int3
pop
inc
lods
je
cmpsl
and
fisubrs
aas
adc
dec
test
jge
lfs
insb
pop
aas
cld
popa
mov
leave
push
jge
mov
loop
mov
mov
and
cmp
xor
jg
pushf
mov
pop
xchg
add
push
jne
add
inc
mov
sahf
dec
jno
rorb
lods
inc
nop
je
jp
mov
or
cmp
inc
sub
dec
sub
push
add
loopne
loopne
mov
adc
ror
or
addr16
xchg
faddp
out
xor
lock
and
out
daa
lret
lea
or
push
pop
ljmp
cltd
xor
insl
int3
in
icebp
cmpsl
mov
or
jo
push
cmp
int
rcll
pop
push
insl
or
jne
jg
insb
cwtl
int3
inc
nop
mov
mov
arpl
pusha
push
into
imul
cld
clc
fists
sub
xchg
out
cmpsb
adc
mov
adc
ret
push
scas
arpl
adc
cld
scas
adc
jnp
call
loopne
push
cmp
fs
gs
dec
call
cmp
adcb
push
adc
dec
push
mov
or
call
pop
out
aas
shrl
rcll
cmp
add
mov
mov
add
movl
adc
movl
cmpl
movl
mov
movl
jmp
mov
mov
cmpl
ja
pushl
push
push
push
call
sbbl
adcl
subl
andl
addl
movl
sub
movl
movl
addl
movl
movl
cmpl
mov
mov
mov
movl
jmp
mov
mov
cmpl
jg
pushl
push
push
push
call
addl
subl
xorl
decl
and
or
mov
and
movl
movzwl
sbb
movl
or
movl
adcl
movl
mov
decl
shl
not
mov
jmp
out
repz
cmp
pop
and
mov
sahf
adc
sbb
js
fisttps
imul
push
call
push
iret
and
or
lock
xor
xchg
adc
lahf
outsb
dec
pusha
std
xor
in
inc
adc
pusha
loop
fsubr
gs
int3
jns
out
cli
scas
dec
call
mov
bound
push
sbb
and
xor
shll
inc
cmp
jns
shr
into
push
hlt
sarl
pop
pop
les
xlat
fistl
jne
test
hlt
sbb
pop
ljmp
lds
inc
mov
test
pop
cmpsb
fldt
divl
out
sbb
orb
cltd
or
inc
xor
sar
addr16
sbb
shll
nop
xor
cwtl
sti
std
push
fcoms
je
pop
into
inc
repnz
mov
les
cs
and
adc
jae
push
push
aas
in
mov
movsb
xorl
sbb
lret
jae
stos
addr16
push
ret
inc
jl
sbb
popa
push
shl
outsl
pop
test
sub
scas
mov
movsb
xor
aas
out
test
out
or
ljmp
ficomps
xchg
out
fsubrp
jg
das
inc
fcoml
out
xchg
xchg
mov
mov
arpl
call
jno
lods
aam
int3
aaa
sbb
pop
jmp
jle
test
mov
testb
mov
add
inc
lahf
add
icebp
xchg
xchg
add
mov
sub
mov
or
xor
scas
shll
js
pop
sbb
fxch
rcll
adc
cmp
out
popl
jp
pop
out
adc
push
sub
and
sbb
rclb
pop
das
fs
shrl
add
mov
lods
and
into
sbb
push
add
aas
and
push
lea
adc
out
cmpl
sarb
and
loope
and
jno
test
cmp
fldcw
cmp
mov
mov
cmpl
lret
xchg
pop
cli
push
out
popf
mov
pop
and
mov
push
push
bound
mov
xchg
push
mov
cmp
dec
shrb
xchg
cmp
daa
mov
insl
fidivrs
dec
sbb
aam
dec
inc
push
sbb
out
mov
sbb
nop
or
cmc
push
ljmp
mov
ret
sub
dec
or
xorl
lcall
lahf
int
ret
cmpsl
xchg
adc
inc
sbb
std
and
iret
xchg
push
or
mov
nop
xchg
sti
lret
cmp
pusha
xor
fdivs
call
mov
inc
lahf
in
test
adc
xchg
push
pop
and
js
mov
dec
cltd
icebp
test
aas
data16
test
or
and
and
and
es
stos
sub
fdivrs
dec
xchg
dec
scas
xorl
out
int
inc
scas
sub
and
jmp
add
sti
hlt
or
or
imul
aad
loope
lea
push
or
adc
in
push
rorb
cs
pushf
ror
cmp
out
add
sbb
and
jle
repnz
add
mov
jp
stos
mov
shr
inc
lea
ljmp
jmp
cmp
xchg
xchg
fisttps
push
addl
inc
add
push
call
mov
not
mov
cmpl
mov
movl
movzwl
jmp
mov
cmpl
jb
pushl
call
mov
add
movl
adc
mov
sbb
mov
xor
and
xor
mov
xor
mov
addl
sub
mov
mov
and
mov
orl
lea
mov
mov
sbbl
or
addl
jmp
nop
movsb
call
int
cmpl
jo
hlt
sbb
sahf
adc
sbb
jecxz
push
daa
in
int
mov
and
cmp
sbb
push
insb
in
adc
xor
das
in
or
iret
cltd
fimull
int3
jle
pop
dec
lret
sub
mov
mov
sbbb
das
jle,pn
cli
mov
fs
inc
out
inc
rcll
xchg
movsl
insl
inc
mov
imul
mov
les
lea
js
scas
insb
adc
lea
outsl
inc
aas
imul
fisubl
xor
sahf
push
or
sbb
aad
xchg
mov
jecxz
pop
clc
aaa
sub
mov
ficompl
pushf
lcall
jbe
pop
pop
sahf
lahf
fscale
loopne
inc
mov
adc
lcall
adc
jp
push
inc
jb
aam
out
icebp
push
clc
fsubrl
sahf
in
fs
push
mov
iret
jl
xor
cmp
sub
scas
push
iret
cmp
out
xor
xchg
dec
lods
pop
lock
adc
das
jge
flds
mov
push
orl
addr16
jl
mov
mov
push
push
jno
dec
push
or
mov
pop
lods
adc
sbb
sub
or
nop
mov
xlat
stos
test
xchg
inc
iret
cmpsb
sarl
lods
outsb
mov
inc
add
mov
inc
fists
mov
jle
enter
sub
jge
pop
cmp
aam
sub
fidivs
lock
pop
into
dec
cmpsl
sbb
dec
xchg
cltd
scas
mov
pop
xchg
push
mov
test
cmp
and
mov
push
out
jne
inc
out
xor
or
stos
mov
bound
fwait
scas
flds
lahf
dec
dec
orl
shrb
pop
je
pop
stos
lock
sub
mov
stos
into
cmp
inc
or
mov
pop
inc
xchg
jae
cmp
sub
icebp
xchg
cmp
shlb
lods
jnp
lahf
dec
push
xor
stos
fisubs
jmp
jne
pop
fs
lret
pop
add
jne
jmp
mov
mov
movl
jecxz
xchg
and
sub
movsb
imul
push
push
xchg
jae
addr16
stos
push
sbb
pop
push
test
mov
scas
out
lock
sbb
cmp
mov
ret
cltd
lock
sbb
out
jge
ds
nop
aaa
xchg
jl
pop
add
pop
sbb
fucom
fwait
and
adc
mov
or
icebp
imul
or
and
dec
in
sbb
lcall
dec
out
lods
xlat
mov
cltd
fldcw
inc
fxch
push
rcll
sbb
inc
outsl
int3
xchg
cmp
adc
jo
dec
xor
jmp
pop
sub
inc
sub
test
mov
sub
mov
sar
les
xchg
mov
mov
add
outsb
loopne
jecxz
mov
test
sub
xchg
aaa
mov
push
mov
cmp
jo
jmp
aas
loope
push
push
inc
pop
movsl
fists
sbb
jmp
pop
pop
or
lods
mov
lods
pop
lds
popf
sbb
push
lret
cmp
push
dec
pop
push
fwait
mov
lret
arpl
add
xor
cmp
movl
jne
mov
cmpl
mov
movl
mov
jmp
movl
not
cmpl
jl
pushl
pushl
call
movl
incl
or
add
sub
add
sbb
mov
sbb
shrd
shr
mov
xor
mov
negl
shl
xor
xor
sbbl
or
jmp
and
push
repnz
inc
sarb
jo
pop
jl
in
sbb
sahf
adc
sbb
pop
shl
adc
ret
pop
mov
cld
loop
mov
shll
imulb
sbb
push
dec
xor
pop
sbb
stc
aas
cs
in
daa
idivb
inc
cmp
sbb
std
ret
fucom
xchg
loopne
pop
adcl
xlat
pop
pop
jg
and
repnz
jmp
pop
pop
pop
mov
mov
xor
addr16
mov
nop
pop
jmp
lret
cmp
mov
test
filds
lahf
jle
push
sub
adc
xor
cmpsb
mov
xor
or
jb
add
jl
push
mov
out
icebp
push
mov
int
jnp
ds
inc
jo
rolb
ja
mov
pusha
pusha
jle
incb
add
or
bound
stc
pop
pop
lahf
push
fcomps
jb
xchg
stos
lods
add
pop
insl
loope
jb
pop
cmp
pop
xor
jmp
add
or
sub
loopne
fcomps
pop
rorl
mov
and
add
hlt
shll
jl
scas
arpl
stc
test
ds
xor
jle
pushf
mov
sarw
mov
add
aad
mov
mov
fldenv
fs
and
imul
cmp
mov
addr16
lock
xchg
mov
xchg
popf
xor
ret
aam
jo
and
test
sub
xchg
adc
sub
add
leave
sbb
insb
pop
incl
movsb
popf
movl
pushf
push
and
mov
aas
std
jmp
stc
les
dec
jmp
inc
lcall
pop
mov
xchg
mov
cmp
dec
int3
loopne
mov
es
cwtl
adc
xchg
jnp
mov
popf
into
pop
adc
iret
cmp
in
pop
push
xor
cld
add
sbb
push
imul
rorb
xchg
add
mov
pop
mov
xor
push
mov
mov
popa
arpl
mov
dec
lahf
sahf
push
push
stos
lods
bound
ja
pop
or
push
scas
jnp
outsb
repz
cmp
in
add
inc
cmp
pop
push
enter
pop
lock
out
cs
outsl
fldt
add
lds
xchg
fisubl
jmp
test
je
cltd
inc
lret
hlt
movsb
dec
push
push
sub
pop
xor
add
imul
pop
pop
add
popf
insb
and
jecxz
xchg
hlt
jg
xor
icebp
mov
jg
in
fisubrs
movsb
pop
rcrb
out
mov
sub
out
add
fs
cld
xchg
jo
cmp
repz
in
xor
nop
iret
vcvtpd2psx
fbstp
xor
ds
jnp
pop
js
jbe
mov
out
xlat
jp
mov
pop
add
jp
movsb
loope
data16
push
sbb
push
jbe
or
bound
stc
cwtl
outsb
xchg
sbb
inc
xchg
adc
movsl
aam
jno
push
mov
mov
hlt
shll
pop
scas
ja
mov
movsb
mov
xchg
scas
dec
or
add
je
cmp
sub
sbb
cltd
movsb
loopne
push
mov
flds
cmpsb
mov
sbb
or
dec
jo
jb
cmp
inc
mov
cmp
movl
jne
jmp
sbb
fldt
sbb
or
cmp
jo
in
sbb
iret
xor
cli
dec
ljmp
testb
push
stc
xchg
mov
out
popf
push
into
outsb
fsubrl
push
sub
mov
fstpt
and
mov
sub
ficompl
push
mov
stc
sub
call
jno
rcll
shll
cmp
adc
dec
sbb
aas
push
xlat
inc
inc
in
mov
ds
jecxz
in
add
std
movsb
xlat
sbb
adc
jg
outsb
fists
add
in
fisttps
mov
shr
test
int
arpl
repnz
jo
or
imulb
cmp
loope
in
and
mov
push
sbb
add
adc
scas
nop
test
rol
fiadds
out
mov
dec
mov
jb
out
mov
pop
push
ret
adc
jbe
mov
cmp
cmpsb
daa
cmp
and
enter
xchg
scas
mov
and
outsl
adc
ds
inc
loop
int
inc
fdivrp
lods
and
cmp
xor
lods
shlb
add
or
inc
pop
aaa
aad
icebp
movsl
inc
ret
cld
mov
mov
jmp
mov
cld
mov
sti
stc
dec
cltd
sbb
mov
nop
mov
arpl
sarb
lahf
int3
mov
fnstenv
sbb
xchg
mov
inc
or
add
push
adc
xor
lret
mov
cmp
leave
cmp
jbe
cs
gs
test
call
push
in
jecxz
jno
adc
std
add
mov
outsl
mov
clc
xor
xchg
adc
out
jne
imul
stos
xchg
dec
mov
sbb
das
cmp
inc
mov
add
and
stc
popa
aas
pop
add
pop
repnz
out
pushf
push
imul
mov
mov
mov
lahf
push
cs
mov
pusha
jns
test
clc
inc
les
push
popf
and
das
or
aad
inc
roll
pusha
sbb
mov
xor
jo
push
inc
lods
and
int
mov
sbb
stos
outsl
xor
cltd
arpl
filds
sahf
xor
jp
adc
rcl
and
dec
xchg
sbb
fmull
insl
insl
cmp
das
mov
adc
xor
loop
shlb
popa
gs
jbe
pop
enter
sub
daa
insl
dec
shrl
in
mov
xchg
jle
xorl
daa
out
in
cmpsb
int3
cmp
les
xchg
mov
pop
fsubrs
cwtl
add
fs
ret
push
mov
xchg
sbb
jns
leave
push
and
xlat
push
pop
mov
mov
cli
test
daa
and
pop
stos
mov
rolb
div
lcall
xor
daa
mov
mov
xchg
js
cmpb
cmpsl
jle,pn
jnp
iret
mov
mov
out
js
stos
sbb
mov
out
dec
or
sbb
adc
lret
push
push
jmp
sbbb
inc
loop
push
fstpl
inc
aas
lret
sub
jb
pushf
shrl
pop
sub
repz
xor
push
lods
jae
push
iret
shlb
sbb
push
fdivl
in
cmp
cmpl
notl
mov
jmp
not
cmpl
jne
pushl
call
xor
negl
xorl
andl
sbb
or
mov
cmpl
movl
mov
jmp
mov
cmpl
jbe
push
push
call
adcl
sbbl
mov
or
xor
add
adc
mov
xor
orl
mov
mov
and
mov
orl
shrd
mov
adc
mov
xor
adcl
shr
orl
mov
sbbl
xor
orl
or
subl
shl
subl
sub
cmpl
movl
mov
jmp
mov
cmpl
jne
push
call
mov
xor
xor
sub
or
sbb
xorl
xor
sbbl
orl
mov
cmpl
mov
mov
movl
jmp
movl
movl
cmpl
jle
push
call
and
adc
or
add
add
mov
xorl
mov
add
jmp
and
fdivrl
xchg
mov
dec
fistps
sbb
clc
add
bound
pop
into
mov
pop
add
inc
jae
xor
out
dec
jb,pt
out
dec
test
adc
rol
int
xor
ljmp
imul
mov
or
outsb
sahf
sbb
shl
testl
lcall
outsb
sahf
aad
clc
fimuls
dec
loop
xchg
popa
add
sbb
aad
cmc
dec
repnz
cmp
nop
adc
push
xor
or
mov
sub
das
pushl
mov
inc
lret
insl
rcrl
cmp
jae
loopne
or
push
xchg
inc
add
jg
inc
out
push
cmpsl
jno
stc
fldl
pop
push
arpl
cmp
je
arpl
lds
call
test
and
push
pushf
sarl
or
rcrb
mov
andb
and
sub
icebp
sbb
push
pop
je
ljmp
push
ds
cmp
scas
jg
jle
js
fbld
dec
fsubp
sbb
sbb
lcall
scas
imul
test
push
stos
es
dec
nop
aas
movsl
xor
sbb
notb
mov
lock
imul
add
sub
mov
lret
lahf
leave
lods
mov
sbb
stc
iret
mov
fwait
mov
inc
scas
sbb
shll
rcr
push
aam
in
xor
pop
dec
jbe
pop
aaa
push
mov
repz
fnstsw
ja
and
enter
or
aaa
out
or
sbb
in
push
adc
ret
mov
xchg
incb
loope
cmp
xchg
stos
xchg
add
xchg
out
movsl
push
notl
nop
imull
push
add
mov
xchg
and
cs
pop
ds
cmp
pop
add
push
mov
adc
jecxz
insb
ret
enter
adc
cmp
js
jmp
mov
popa
inc
and
adc
sbb
pop
or
adc
sub
rcrl
cwtl
or
call
xchg
scas
ja
mov
icebp
push
mov
pusha
rclb
test
push
mov
mov
lahf
jecxz
mov
fldt
dec
lcall
cmovs
inc
in
inc
fldt
fsubs
lea
fistpl
mov
loopne
xor
jae
mov
dec
pop
or
sahf
mov
rcrb
cld
hlt
pop
mov
call
or
cmpsb
push
mov
mov
out
aam
push
xor
mov
ficomps
dec
scas
fistpll
jo
lcall
mov
into
imul
int
jl
dec
rclb
arpl
stos
aam
push
idivl
stos
je
sbb
mov
outsl
cmp
dec
lds
pop
push
sub
push
rorl
pop
sbb
mov
movsl
sbb
repnz
rcrl
and
xor
rcr
es
arpl
stc
jns
addr16
cmp
cmp
inc
addr16
push
imull
and
adc
sub
xchg
test
lea
sub
jb
rcl
pop
pop
sbb
jne
ror
lods
lods
xor
pushf
ljmp
adc
mov
test
push
push
ljmp
icebp
mov
mov
aaa
sub
aas
push
mov
std
mov
inc
shl
add
sbb
mov
mov
mov
mov
mov
add
shrd
sub
shr
and
mov
andl
jmp
subl
and
sbb
jl
xlat
sbb
sahf
adc
sbb
or
mov
insl
push
bound
aaa
scas
or
in
stos
stc
mov
fildl
adc
adc
test
es
inc
mov
jb
je
cmp
loopne
mov
push
fisttpl
fbld
cmp
push
cmp
sti
enter
jl
orl
into
mov
outsl
lea
or
sarb
sti
jbe
jecxz
pop
push
sub
xchg
jae
sbb
lods
cwtl
or
sub
ja
cmpsb
arpl
jne
or
in
cmp
push
mov
test
pop
ds
sub
xchg
lock
je
rorb
in
jl
out
adc
outsb
lds
xchg
sbb
sbb
popl
pop
push
xlat
out
pop
lock
out
mov
mov
mov
mov
and
or
push
xchg
fnstcw
pop
sbb
xlat
jne
mul
jno
dec
out
les
movl
cmpsb
cmp
mov
test
mov
cmp
imul
adc
fisttpl
outsl
mov
lret
mov
pushf
jg
or
cmp
mov
cwtl
bound
xchg
gs
imul
nop
out
add
sub
fstpt
sti
or
out
add
fisubs
mov
fists
cli
dec
push
lds
dec
dec
jl
ja
rcll
cmp
testb
stos
outsb
jo
shlb
or
sti
mov
xor
aad
jnp
mov
and
push
sub
lcall
mov
adc
fisubl
xchg
sub
arpl
add
mov
ret
inc
dec
lods
addr16
pop
push
mov
push
sub
in
in
out
popf
rcrl
mov
nop
add
mov
test
sub
cli
xchg
sbb
outsb
test
inc
mov
push
into
dec
xchg
push
mov
push
cltd
push
inc
mov
mov
lcall
pop
test
clc
push
adc
into
ljmp
or
insl
cmpsl
push
arpl
dec
jne
fcoml
sbb
sarl
pop
test
pop
jns
imul
mov
pop
or
mov
sbb
leave
stos
fnstsw
dec
xchg
test
adc
data16
sbb
push
addr16
xchg
mov
mov
out
iret
pushf
out
and
fbld
mov
rcll
fdecstp
push
mov
and
lcall
sbb
xor
nop
daa
or
scas
loop
dec
add
mov
xchg
jge
es
mov
and
std
dec
pop
xchg
out
ret
inc
push
pop
les
sub
test
andb
mov
jl
cmp
mov
fs
sahf
aad
in
frstor
lods
pushf
sbb
and
jne
xor
sbb
add
es
outsl
aam
imul
das
jnp
mul
pop
lods
loop
add
das
push
xor
bound
add
jmp
mov
out
pop
stos
add
lock
es
push
repnz
jbe
lcall
stos
add
push
jg
les
sbb
or
shl
and
xor
mov
and
or
mov
movzbl
sbb
mov
jmp
xchg
xchg
lcall
stos
pop
iret
jo
iret
sbb
sahf
adc
sbb
mov
dec
sub
ds
and
test
in
shlb
dec
imul
or
push
jle
add
out
mov
pop
iret
dec
pop
sub
call
pop
imulb
cmp
fiaddl
sub
aad
inc
or
sub
bound
dec
rcll
cmpb
push
dec
xchg
ret
orl
dec
sarb
dec
mov
call
inc
adc
cmp
xor
mov
clc
inc
in
stos
leave
xor
std
leave
movsl
inc
sub
push
inc
xor
add
ljmp
iret
mov
xchg
push
xchg
sbb
inc
mov
jo
sahf
ljmp
inc
out
push
add
pop
repnz
fmull
xor
jl
je
xor
mov
hlt
shlb
xlat
fs
leave
cmp
jnp
pop
insb
call
cmpsb
xorl
jne
dec
jle
icebp
pop
out
in
imul
xchg
mov
or
aad
mov
je
dec
sti
sbbb
xorb
cmpsb
aas
out
cmp
push
cmp
loope
jne
lret
push
cmc
push
pop
push
xchg
pop
nop
and
into
repnz
call
dec
mov
sub
divl
sarl
or
cs
dec
in
cmpsb
repnz
push
enter
mov
repz
push
lcall
cmp
into
fs
jae,pn
xchg
push
les
scas
inc
mov
dec
sahf
call
aad
inc
xchg
aad
mov
sbb
das
out
loopne
in
das
mov
mov
lahf
into
adc
push
mov
xchg
add
jae
mov
inc
lock
add
cwtl
jnp
mov
repnz
fcoms
sub
mov
test
push
push
sub
jmp
jo
xor
pop
in
cmp
push
in
jl
dec
in
movsl
rorb
push
es
cmpsb
push
das
jne
outsb
jle,pt
sbb
lods
idivl
xchg
and
or
add
test
inc
mov
jno
pop
arpl
outsb
out
imul
sub
mov
jge
incl
sbb
adc
adc
ss
int
iret
xor
lods
xchg
mov
pop
fcomp
push
popa
sub
pop
ret
jae
iret
xchg
xor
mov
popl
aaa
push
or
inc
xchg
in
pop
sbb
jno
bound
imul
test
mov
js
into
dec
cs
jae
mov
icebp
sar
or
push
xor
jge
imul
sub
cwtl
mov
mov
and
cmp
lcall
js
mov
xchg
adc
in
out
bound
mov
aas
and
dec
mov
lret
std
daa
inc
and
insb
adc
dec
add
sti
fildl
mov
xchg
daa
mov
push
cmp
or
push
repz
movsbl
jns
aas
sbb
lea
mov
and
das
insl
ljmp
lods
adc
fs
adc
mov
gs
mov
ret
inc
out
std
mov
bnd
jnp
inc
xchg
idivl
sub
adc
cmp
int
frstor
or
das
out
icebp
adc
lods
roll
orl
shr
mov
or
mov
jmp
add
lea
fcompl
pop
or
mov
fcmovnb
sbb
sahf
adc
sbb
xchg
pop
lock
into
clc
jle
mov
lret
jb
mov
bnd
iret
imul
push
mov
call
sbb
mov
or
mov
pop
call
inc
sbb
test
icebp
pop
jae
xchg
outsb
dec
add
pop
lds
push
stc
sbb
xchg
insl
negb
pop
pop
pmulhuw
push
mov
movsb
out
mov
mov
movsb
jo
nop
loope
jo
imul
jmp
stc
in
add
popl
push
mov
pop
inc
and
mov
ret
dec
jecxz
hlt
mov
sti
push
pop
pop
pop
nop
sub
xchg
arpl
fstpt
fwait
xchg
testb
pop
xchg
test
or
xchg
sub
ss
lcall
xchg
mov
ret
add
std
mov
dec
lds
fnstcw
rcr
xchg
shrb
mov
inc
shlb
pushf
sti
inc
cmp
xor
rcl
scas
pop
addl
fstl
jl
nop
xchg
mov
cli
mov
jb
test
cmpb
push
cmp
out
divl
adc
mov
inc
add
jle
out
in
stos
repnz
push
scas
insb
mov
pop
push
pop
adc
sti
xchg
mov
in
adc
std
adc
dec
movsb
in
mov
jecxz
ret
sub
jmp
cmp
out
adc
fs
jno
xor
test
jb
rcll
es
mov
add
add
hlt
inc
mov
test
xor
jle
into
fmulp
xchg
mov
int3
add
lahf
xor
jp
cwtl
fcoml
sbbl
cmp
lds
dec
sbb
imul
mov
and
daa
xchg
cmp
out
out
xor
xlat
std
xchg
dec
mov
fiaddl
repnz
into
xor
xchg
dec
test
cmpsl
xor
call
inc
xor
pop
add
add
cmp
pop
xchg
lock
out
xor
jnp
xchg
divl
inc
mov
pop
fnstsw
lea
enter
je
in
inc
cmpsb
add
jno
xor
adc
les
dec
fisttps
dec
pop
cltd
xor
xchg
insb
dec
pop
sbb
or
cmc
int3
pushf
dec
je
aas
mov
add
sub
xchg
push
nop
mov
dec
inc
and
pop
push
in
fs
fs
mov
lea
mov
out
lock
add
sbb
or
test
fwait
aam
push
xor
mov
mov
mov
mov
stos
push
ficomps
rclb
sbb
test
sbb
cld
mov
cmpb
adc
int3
loopne
fwait
mov
pop
or
or
or
fdivr
dec
mov
lret
repz
push
push
mov
shll
les
dec
test
movsl
dec
testb
in
call
mov
sbb
repz
mov
cmc
adc
xor
fsubs
rcrb
push
mov
mov
xor
and
fcoms
scas
sbb
hlt
es
pop
mov
in
nop
mulb
mov
mov
xor
addl
xor
jmp
scas
ds
and
sbb
fsubrp
push
stos
pop
pop
jmp
sbb
push
dec
sub
lret
add
out
dec
xchg
sub
rcrb
jecxz
les
mov
cmpsb
cmp
enter
orb
inc
xchg
inc
pop
push
push
bound
push
or
mov
push
out
adc
mov
jge
pop
inc
les
pop
pandn
add
in
fstpt
sti
aaa
je
popf
outsl
adc
or
inc
mov
xchg
hlt
dec
cltd
out
xor
adc
push
popf
dec
sub
add
mov
test
inc
sub
inc
mov
mov
push
mov
scas
push
into
sbb
pop
out
call
sub
pop
and
sub
enter
xor
in
lods
push
mov
stc
sbb
lock
fadd
lret
add
in
movsl
scas
sbb
add
xor
int3
ss
out
movsb
pusha
mov
cmp
pop
and
scas
inc
cmpsb
jne
addr16
aaa
sbb
std
mov
mov
hlt
dec
pop
in
fdiv
rorl
mov
inc
test
lods
fcompl
lret
jge
es
xchg
dec
push
jne
out
faddl
mov
fisubrl
ss
pop
sbb
imul
jo
sahf
in
mov
js
add
xor
hlt
pop
inc
bound
cmp
add
ja
jo
in
aas
add
dec
jge
ljmp
and
scas
je
jg
in
rcrl
add
add
xchg
pop
in
xchg
sar
andb
in
sti
adc
mov
and
inc
insl
pop
int
mov
or
mov
xchg
movsb
test
xchg
xor
or
into
popf
adc
sbb
int3
mov
xchg
pop
in
orl
in
dec
mov
or
fxch
gs
inc
addr16
int
dec
aaa
out
jmp
add
sub
pusha
xor
jae
inc
fdivrl
push
xlat
adc
insb
pop
cltd
mov
jmp
pop
and
jae
loop
push
mov
pushf
testb
int
push
shl
sub
imul
jmp
dec
or
sti
jo
jmp
insl
mov
popa
pop
insb
fmuls
fcomps
in
out
inc
outsl
cmpsl
add
mov
dec
mov
test
jp
das
mov
jb
or
out
aam
add
ror
popa
shrl
jle
aaa
ret
int
scas
mov
lods
sub
or
mov
pop
lods
sbb
lret
xlat
lret
push
insb
imul
cld
je
dec
subl
outsl
outsl
or
hlt
aaa
out
int3
adc
mov
mov
xchg
mov
movsl
inc
adc
aas
std
sbb
xor
push
int
cmp
push
fiadds
and
ja
push
jg
jecxz
data16
aas
jmp
ret
fwait
and
inc
xchg
dec
sub
shrl
fimull
ret
in
dec
sahf
shll
out
push
or
les
mov
in
add
adc
push
jl
mov
movsb
and
adc
mov
or
dec
gs
stos
aad
jno
je
cmp
xchg
sbb
ret
cli
add
lea
dec
cmpb
in
dec
adc
imul
cmpsb
inc
or
in
cmpsl
cltd
js
mov
jl
outsl
inc
stos
shrb
movsb
call
mov
push
in
sbb
push
je
add
loope
lea
adc
mov
or
mov
movl
shrd
adcl
shr
cmpl
mov
movl
movl
jmp
mov
movl
cmpl
jg
push
pushl
call
and
sub
orl
adcl
mov
mov
add
xor
xor
xor
mov
add
mov
mov
add
mov
sub
mov
xor
mov
xor
addl
or
subl
shl
and
imul
mov
mov
shrd
sbbl
mov
sbbl
mov
adcl
xor
shr
adc
mov
mov
xor
movl
or
adcl
shl
orl
sub
mov
movl
cmp
not
mov
movl
jg
mov
xor
mov
sbbl
shrd
sbbl
mov
mov
xor
orl
shl
xor
andl
or
shr
or
mov
mov
cmpl
mov
mov
not
jmp
movl
cmpl
ja
push
pushl
push
call
orl
add
adc
xorl
sbb
cmpl
movl
mov
mov
jmp
mov
cmpl
jge
pushl
pushl
call
incl
mov
mov
sub
imul
xorl
mov
mov
sub
mov
mov
sub
and
mov
subl
mov
shrd
shr
mov
xor
xor
sub
mov
inc
mov
addl
xor
xor
xorl
or
xorl
shl
andl
imul
addl
sub
jmp
addl
mov
cmpl
movl
mov
movl
jmp
movl
movl
cmpl
jae
push
push
call
add
adc
add
andl
dec
xor
or
add
mov
add
mov
xorl
shrd
mov
cmpl
mov
mov
jmp
movl
movl
cmpl
jb
push
push
call
not
adc
neg
mov
mov
sub
mov
xor
or
sbb
cmpl
mov
notl
jmp
movl
cmpl
jb
push
pushl
pushl
push
pushl
call
sub
subl
orl
adc
sub
movl
mov
xor
shl
adcl
xor
xorl
or
shr
mov
sub
mov
jmp
xchg
stc
xchg
out
insb
push
jbe
push
stos
out
lods
cli
mov
sahf
adc
sbb
xchg
test
and
loope
pop
mov
popa
rcll
add
in
mov
mov
xchg
scas
arpl
jecxz
mov
imul
mov
mov
cmpsb
xorb
mov
out
cwtl
cs
or
push
dec
adc
push
sub
jno
jae
pop
rorb
test
sub
mov
inc
cltd
xor
or
pop
ja
pop
mov
xchg
xchg
in
iret
jne
mov
mov
stos
jg
addr16
cli
jnp
jle
push
xchg
xchg
push
jmp
arpl
adc
jg
orb
mov
and
cmc
push
mov
gs
ret
arpl
cmpsl
jns
push
jg
add
mov
mov
xchg
mov
outsl
dec
sbb
fsts
add
mov
add
cmpsb
dec
pop
scas
ja
pop
adcl
inc
repz
or
fmuls
call
mov
xchg
mov
testb
sbb
mov
adc
mov
sub
push
lret
into
lock
ret
addr16
outsb
stc
insb
sbb
cmp
dec
imul
or
push
ds
icebp
jecxz
icebp
shlb
ljmp
cld
add
pop
out
aas
push
mov
cmp
xchg
gs
incb
rcll
cwtl
add
sbb
dec
push
add
mov
out
aas
jmp
sbb
insl
push
jns
xor
mull
jbe
or
sti
and
shll
pop
jne
sbb
mov
cmc
clc
xchg
cltd
shr
push
mov
push
imul
aad
push
mov
mov
loop
clc
cmc
xor
es
lret
shlb
pop
jle
push
or
mov
xchg
test
rcl
sbb
pop
cmp
and
popa
dec
rorb
push
aam
iret
push
cmpsl
in
mov
aam
jns
jmp
ljmp
jmp
xor
push
adc
sub
jnp
push
sub
sbb
mov
les
mov
scas
xchg
push
cld
sarl
sbb
je
iret
push
lcall
mov
sub
cmp
sub
mov
rol
enter
jg
hlt
add
sub
xor
icebp
dec
sbb
movsb
xchg
arpl
shll
push
roll
fmuls
popf
xchg
cmpsl
fsubs
push
mov
insl
sbb
lods
shl
stos
cmp
outsl
stos
fisubrs
add
and
jp
ja
mov
jmp
mov
pop
lds
inc
jmp
jb
pop
mov
xor
movsb
dec
cs
mov
dec
jno
fdivrl
mov
cmp
addl
sub
dec
out
xchg
mov
inc
xchg
cltd
sub
cmp
lahf
sbb
cmp
push
fs
mov
xor
mov
mov
cmp
icebp
cmp
cmp
add
je
mov
xor
movl
testl
xchg
mov
loop
call
daa
imul
lds
js
xchg
add
inc
adcl
jmp
or
cmp
fcomi
lock
js
push
add
sbb
mov
cmpl
movl
mov
mov
jmp
mov
movl
cmpl
jb
push
call
adc
orl
negl
sub
sub
mov
mov
shrd
shr
mov
mov
mov
xor
xor
or
shl
add
add
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
movl
mov
jmp
ret
scas
sar
fcmovb
scas
mov
jl
mov
sbb
sahf
adc
sbb
cmp
test
xchg
push
loop
fistpll
mov
aam
jecxz
shl
test
in
push
je
mov
mov
lcall
sub
ja
push
mov
pusha
das
jbe
or
loope
je
shrl
notl
jns
cwtl
mov
cltd
int
repnz
cmp
popa
movsb
dec
mov
mov
das
lds
jmp
out
repz
jae
cli
cld
and
sbb
mov
push
int
sbb
test
or
out
mov
lahf
loope
cmpsb
push
jb
xor
cmp
xor
push
cmpsl
adc
inc
inc
mov
int3
mov
movsb
inc
push
lock
out
xchg
mov
ret
daa
shr
jbe
add
mov
shrb
push
jno
lea
jecxz
std
insl
imul
jge
mov
bound
dec
mov
mov
push
les
dec
dec
js
pop
push
or
mov
mov
and
push
in
shlb
in
push
aam
lock
ret
dec
scas
leave
jo
je
out
arpl
mov
xchg
jp
inc
je
cmc
inc
in
enter
xor
pop
roll
or
jb
pop
push
pop
jbe
or
aas
or
jbe
push
mov
gs
addr16
pop
in
jge
aad
je
cmp
data16
cmpsl
dec
sub
js
add
fwait
or
test
mov
and
fnstenv
and
insb
sub
lods
movsb
mov
icebp
je
push
cltd
sub
ror
popl
ja
lds
mov
enter
lods
dec
clc
mov
loop
ljmp
inc
ljmp
or
mov
out
inc
outsb
pop
sbb
sbb
fdivrs
or
out
movsb
int3
inc
mov
stc
and
imul
pop
adc
sbb
jnp
add
out
out
jbe
adc
push
clc
inc
push
cmp
add
in
lret
stos
push
cmpsb
pop
or
push
shlb
cs
push
lods
loop
cmp
fcoml
and
pop
jg
add
into
shrl
xor
cmp
mov
xor
xlat
or
push
xor
popa
outsl
xor
xchg
sub
bnd
test
inc
scas
in
loop
lret
adc
xor
lret
addl
hlt
add
xor
xchg
and
xchg
das
cmp
or
lret
cmpsl
sarl
test
addr16
push
sahf
sub
adc
mov
mov
or
xchg
adc
inc
cli
lods
xchg
outsb
mov
mov
out
cmp
call
adc
xchg
cmp
rcrl
mov
adc
mov
xor
xchg
sarb
jbe
jge
mov
orl
mov
jb
inc
les
mov
adc
xchg
sub
jo
shlb
sti
aam
inc
sbb
adc
out
mov
cld
sub
add
xchg
fnstcw
call
out
xchg
add
pop
jae
cwtl
cmc
add
mov
jmp
hlt
mov
jg
sub
push
repnz
jns
mov
and
sub
xchg
jmp
lret
mov
jl
nop
mov
movl
mov
movl
mov
movl
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
jmp
cmp
lock
shll
adc
mov
sahf
adc
sbb
std
mov
inc
lock
mov
pop
mov
mov
hlt
or
xor
push
push
or
mov
outsl
stos
xchg
sbb
rol
mov
ret
mov
incb
mov
popf
cmp
test
mov
xor
push
sahf
iret
enter
mov
jge
and
mov
xchg
xor
adc
scas
and
and
icebp
push
rsm
pusha
lcall
mov
dec
sub
fidivrs
mov
in
in
mov
cmpsb
or
sti
fdivrs
ss
js
fs
fcmovbe
in
xor
adc
jns
and
repz
cmpsl
int3
sub
stos
jge
not
lea
or
jnp
pop
mov
jo
dec
rclb
jns
push
cwtl
out
cli
dec
xchg
or
loopne
cld
mov
scas
lcall
xchg
mov
and
adc
in
jne
inc
add
das
mov
int3
jo
cmpsl
cmc
roll
mov
xchg
mov
inc
je
xor
int
xchg
xor
add
push
mov
mov
inc
out
jge
divb
popa
pop
ret
sti
xor
jnp
sbb
test
fdivrp
ret
and
dec
mov
in
pop
iret
sub
dec
mov
out
pop
movsl
test
ja
sahf
aam
das
pop
ret
aaa
scas
mov
pop
fnstcw
movl
insl
outsb
psrlw
xor
xor
jmp
mov
push
xor
outsb
aam
fadds
add
pusha
adc
jbe
outsb
add
xlat
push
loop
push
in
fcoml
mov
pop
dec
pusha
cmp
sub
das
push
in
shll
jmp
xchg
add
dec
out
cmp
push
cmc
xchg
push
pop
push
adc
jae
jne
or
dec
adcb
sahf
leave
xchg
push
inc
dec
or
xor
imul
push
aaa
xchg
adc
xor
mov
sbb
push
std
leave
andl
jno
mov
and
xor
loop
popf
nop
sbb
out
movsb
push
push
enter
stc
xor
dec
push
fwait
std
fcmovnb
fdivp
arpl
mov
dec
xchg
ja
cmpsl
jo
lahf
sbb
mov
push
xchg
xor
lea
fldl
push
jecxz
lock
test
dec
xchg
xor
xchg
mov
adc
lcall
aam
push
and
adc
shll
mov
into
loopne
add
and
dec
pop
mov
das
ss
ds
aas
push
rclb
add
clc
fildl
inc
dec
inc
mov
enter
popa
enter
in
in
mov
div
mov
or
push
out
add
dec
inc
sbb
mov
aas
mov
mov
cmp
pop
test
xor
or
bound
add
sub
mov
jmp
xchg
bound
loopne
mov
xchg
das
jge
dec
pop
pusha
sahf
add
fucomip
mov
cmp
xchg
lahf
add
leave
mov
lret
mov
lods
pushf
ret
enter
cmpsb
out
int3
mov
cmp
lock
in
and
stos
sbb
push
push
inc
mov
mov
adcl
repz
sbbb
sbb
inc
lea
mov
mov
mov
shrd
shr
mov
mov
shl
mov
xor
xor
jmp
sarl
mov
lds
stos
lock
stos
js
sbb
sahf
adc
sbb
adc
mov
sahf
mov
stc
push
inc
dec
aam
bound
xchg
pop
int
pop
lahf
flds
and
in
mov
add
jg
xor
push
sbb
adc
and
push
pusha
scas
mov
sbb
cmp
hlt
decl
xlat
or
popa
ss
xor
out
jge
fdivl
mov
sarb
int3
adc
xchg
insb
aas
fs
lock
aas
imul
ror
shl
cmpsb
into
dec
xlat
sti
lds
jno
and
inc
mov
pusha
fcmovbe
popa
lea
mov
inc
ret
lret
xorl
inc
pusha
pop
xor
mov
scas
jle
jle
jno
adc
mov
push
cwtl
popf
insb
pop
jle
jge
int3
mov
xchg
movsl
test
add
sets
int3
jl
data16
jl
add
mov
ss
das
mov
dec
test
pop
add
or
inc
sub
cmp
in
sub
cli
movsb
push
orl
imul
pop
and
adc
pop
cli
rclb
insl
pop
lahf
dec
enter
pop
xor
lret
push
pop
mov
mov
bound
lea
stc
nop
stos
jl
aas
add
add
sub
mov
inc
fsubl
in
add
dec
and
xor
stos
test
das
or
push
jg
movsl
mov
and
jno
clc
cmp
mov
outsl
xchg
addb
sbbb
lea
mov
xlat
adc
push
mov
push
adc
int
cli
test
out
jnp
add
loopne
adc
and
sbb
inc
rcl
sub
xchg
lahf
inc
xchg
jae
les
cmpb
mov
adc
shl
dec
call
dec
js
rorl
sbb
clc
sub
pushf
pop
subl
mov
mov
addr16
sub
mov
push
push
out
jo
lahf
out
insl
scas
mov
aad
bound
mov
cmc
gs
mov
pop
mov
cmp
cs
sub
push
insb
fsubs
sub
and
pop
or
and
int
mov
inc
dec
repnz
and
sub
subl
test
aam
in
fistpl
popa
mov
cmp
test
iret
stc
in
mov
cmp
dec
es
fsubs
rcrl
in
sarl
or
jbe
jl
icebp
mov
fildll
and
mov
enter
call
adc
test
mov
data16
sub
data16
push
jb
mov
test
xchg
cmpsl
sbb
popa
mov
add
out
dec
xor
aas
cmc
inc
jg
sub
mov
hlt
imul
mov
popa
outsb
adc
daa
push
in
adc
jbe
repnz
lret
fstp
hlt
outsb
jne
mov
fsubl
and
sbb
fs
stos
pop
mov
stc
mov
mov
jns
mov
mov
and
pop
cli
idiv
andl
or
dec
pop
mov
out
sahf
jb
mov
sti
mov
mov
and
hlt
out
ret
je
fdivs
call
sbb
ret
test
jle
mov
ret
jne
ret
test
inc
lret
or
mov
mov
xor
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
lea
mov
mov
mov
shrd
shr
mov
mov
jmp
push
sbb
sbb
aas
xor
lcall
sbb
push
push
ret
ficomps
repnz
lea
sbb
leave
pop
pop
scas
aam
lods
mov
pop
push
jecxz
jmp
iret
mov
push
xor
or
fucomip
pop
enter
add
popf
sbb
into
aam
sub
xchg
clc
stc
repnz
js
add
std
and
stos
mov
arpl
xorb
push
cmp
lock
std
pop
in
vpshld
pop
pop
push
out
mov
sbb
xchg
fmull
movsl
jne
xchg
iret
fistpl
xor
clc
shrb
mov
fnstcw
insl
cmp
sti
enter
xchg
jg
arpl
sbb
pop
sbb
sahf
mov
enter
xchg
addr16
fistpl
cmc
mov
xchg
push
out
jbe
push
xchg
pop
jo
test
adc
leave
test
push
mov
add
adc
inc
cmp
push
mov
movsl
stos
inc
repnz
test
cs
push
leave
sti
pop
dec
adc
jmp
xor
cmp
leave
dec
stos
icebp
repz
pushf
stos
pop
add
mov
out
jecxz
daa
cmpl
leave
dec
mov
and
fmull
cmpsb
xor
cmp
pop
cltd
xchg
mov
adc
loopne
test
out
das
xor
fldcw
ds
iret
xchg
xchg
out
mov
adc
jno,pt
in
jg
add
pop
xchg
dec
mov
jmp
jns
fisubs
lods
sbb
push
cs
stos
out
and
jno
pop
loope
pop
sub
insb
repnz
ficomps
mov
push
xor
push
and
and
mov
arpl
or
inc
inc
mov
pop
and
mov
adc
pop
aam
mov
sbb
xlat
mov
jle
cmc
imul
inc
xor
and
mov
mov
imul
jno
add
int3
xlat
test
xor
js
xchg
cmp
push
pop
or
or
inc
push
jg
adc
leave
inc
std
inc
xchg
sub
adc
mov
push
push
pop
cmp
popa
jne
iret
push
movsl
mov
lahf
jge
pushf
pop
adc
pop
in
rcrb
shlb
xchg
fimuls
lock
push
push
pop
jnp
mov
fwait
sahf
cs
mov
pop
push
roll
or
lods
lds
xchg
lods
inc
mov
or
repnz
add
xchg
and
sti
mov
adc
enter
std
inc
jnp
dec
cs
iret
jg
cs
inc
mov
sbb
jmp
sub
testb
insl
dec
rep
inc
stc
sub
xor
les
sub
dec
mov
xor
repz
rorb
jb
stos
aas
adc
mov
xchg
seto
test
imul
addr16
pop
shlb
call
push
xor
lods
repz
push
mov
and
jae
sbb
jae
clc
fsubrs
mov
xorl
xchg
push
ret
out
ds
inc
pop
dec
sub
in
aaa
addr16
mov
xor
mov
adcl
cltd
adc
aaa
cwtl
pop
pop
mov
dec
roll
and
movsl
stc
movsl
in
and
std
idivb
xchg
xor
fistpl
adc
inc
fisubs
shl
mov
xor
xor
or
mov
mov
or
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
lea
mov
mov
mov
shrd
shr
mov
mov
xor
jmp
arpl
test
ss
scas
addr16
test
sbb
cmpsb
mov
xor
pop
mov
pop
es
and
push
mov
and
icebp
mov
dec
sub
ja
inc
sub
repz
adc
int3
dec
xlat
neg
ss
sbb
scas
pop
nop
testl
mov
mov
pop
sbb
mov
xor
in
or
adc
xlat
mov
mov
mov
daa
push
pop
scas
xchg
push
in
xor
stos
mov
out
mov
cs
xor
and
mov
test
inc
lea
insb
jns
cld
dec
pop
iret
test
push
adc
push
or
in
fistpl
push
jl
inc
and
xchg
lods
mov
fdivp
cltd
mov
ret
popf
loopne
pop
orb
loope
pop
inc
or
ret
cmp
sub
cli
repnz
rcll
mov
pusha
mov
rorl
add
push
inc
popf
loopne
jns
sub
inc
dec
pushf
or
mov
pop
xor
cmc
cmpsb
xchg
ret
rorb
notb
xchg
mov
aaa
push
outsb
mov
jg
inc
pusha
mov
stos
xor
loopne
sub
pop
pop
mov
jle
mov
xor
cmp
push
jl
push
imulb
ds
inc
jb
mov
das
inc
popf
aas
outsb
mov
lea
xlat
pop
xor
rorl
sbb
stos
cmpsl
jns
dec
lcall
cmp
sarb
dec
in
jae
dec
fwait
xchg
xchg
mov
ja
mov
xor
popl
sahf
lea
xor
iret
xchg
jl
fistps
cmp
fimull
inc
xchg
add
mov
rorl
mov
mov
push
push
and
inc
adc
ficomps
loop
es
mov
mov
stos
popa
in
jo
and
idivb
or
jb
into
ret
sbb
cmp
mov
test
push
jo
mov
lret
loopne
movsl
fstps
aad
mov
scas
mov
jnp
fistps
mov
aaa
xchg
mov
scas
sbb
popa
jg
aad
pop
xchg
xchg
mov
jmp
or
gs
sbb
pusha
and
fildl
pop
mov
mov
inc
push
shr
cmpsl
loope
push
or
stos
jae
add
pop
stos
push
cmp
and
pop
sub
cmp
ljmp
aam
add
fs
jb
cmp
sub
cmp
mov
mov
push
jmp
enter
pop
sti
sub
push
fisttpll
lock
sub
xchg
fcomps
cmpl
orl
cmp
jb
xchg
inc
mov
jge
cmpsb
pusha
pushf
mov
fnsave
lcall
fsubs
addl
dec
loop
sbb
mov
rorb
inc
xor
cs
ljmp
pop
mov
jecxz
mov
cmp
ds
inc
dec
mov
test
faddl
inc
sub
lret
out
sub
xchg
cmpb
fisttpl
dec
jno
in
mov
or
rcl
ljmp
test
push
mov
xchg
inc
icebp
stos
mov
jb
push
jo
nop
sti
and
pop
js
in
popa
and
ja
add
jmp
loope
mov
xor
or
mov
mov
add
mov
mov
shrd
shr
mov
mov
xor
xor
or
lea
mov
mov
shl
mov
shrd
shr
mov
mov
xor
xor
or
mov
shl
mov
mov
mov
or
mov
jmp
fcmovnb
int3
xchg
lods
jnp
sbb
fnstsw
mov
sbb
and
stc
jp
outsb
outsb
ljmp
jb
dec
hlt
inc
test
stos
xlat
mov
add
aam
mov
lret
rcr
stos
sbb
pop
push
mov
add
jnp
dec
mov
cmpsl
sub
mov
jno
aas
addr16
mov
cmp
mov
loopne
faddl
arpl
call
lds
fdivrs
sti
xor
test
inc
push
inc
jae
arpl
push
inc
scas
fs
push
cmp
repz
sub
fsubr
mov
ret
adc
jp
dec
inc
ja
push
out
push
mov
and
inc
fwait
or
or
pop
and
lock
jecxz
data16
cld
fistps
or
mov
pop
and
insl
dec
mov
into
and
ljmp
jae
lock
ja
push
mov
not
scas
pop
int
jmp
in
addb
push
je
sti
and
xor
mov
js
rclb
pushf
test
bound
rcrb
lret
repnz
push
in
in
cmp
rcrl
and
pop
mov
jno
clc
jl
mov
lret
push
xchg
pop
mov
pop
cmc
lret
adc
push
popf
sti
rcl
and
test
lcall
mov
fwait
add
stos
mov
mov
dec
push
push
test
fnstenv
mov
fbstp
mov
fisubl
jg
neg
inc
not
dec
xorl
orl
add
mov
adc
xor
jp
popf
lcall
stos
inc
fcmovne
mov
clc
cmp
fs
xor
adc
dec
mov
push
orl
add
subb
push
dec
cltd
pop
testl
repz
pop
mov
add
aaa
xor
pop
shl
xor
push
or
sahf
or
or
pop
shll
xlat
inc
pop
mov
loop,pt
in
sub
dec
sub
sub
pop
inc
scas
out
out
fwait
icebp
addl
loop
das
push
cmpsl
fisubl
xor
push
rcr
inc
cmpsl
call
jns
std
cmp
pop
mov
lods
in
imul
shlb
sub
ret
rcrl
xchg
sub
push
arpl
sub
mov
adc
cmpsl
and
out
mov
inc
pop
jp
xchg
and
inc
inc
cmp
ljmp
xchg
cmp
adc
pop
lahf
shlb
aam
push
test
std
fldenv
sbb
imul
sbbl
test
in
data16
and
getsec
fs
sub
and
adc
xor
mov
test
jecxz
sbb
aam
scas
push
icebp
xchg
pop
mov
imul
fcmovbe
fadd
lret
icebp
mov
xchg
mov
cltd
cmpsl
out
cli
pop
xchg
inc
jo
cmp
mov
jge
hlt
fisttpl
loop
pop
sub
sub
and
in
push
sub
ss
pop
aaa
sbb
sub
lahf
iret
and
add
jecxz
in
aaa
mov
sti
mov
mov
sarb
test
mov
shlb
hlt
mov
xor
pusha
popa
loopne
pop
and
sbb
ficompl
fadd
push
jge
cli
jmp
sbb
or
jo
jnp
jae
mov
shrd
shl
shr
mov
mov
xor
mov
xor
or
mov
dec
not
and
xor
mov
mov
xor
or
mov
jmp
fiaddl
mov
sub
jnp
mov
xor
mov
sahf
adc
sbb
mov
fistps
sarl
jge
pop
cmp
hlt
add
adc
push
add
mov
inc
xchg
push
cli
inc
cmp
inc
mov
insl
cmc
test
jb
stc
inc
push
scas
loope
popa
mov
fwait
lock
in
pop
leave
cmp
inc
aad
mov
out
adc
mov
lahf
scas
mov
mov
in
push
ss
dec
std
sarl
out
add
sbb
es
icebp
mov
ret
bound
rcl
push
jne
inc
outsb
nop
outsb
mov
loopne
cmp
adcl
mov
outsl
or
fisubs
jg
jle
sub
scas
popf
jmp
insl
mov
jae
into
out
test
mov
dec
mov
negl
ja
and
rcr
gs
pusha
loopne
jg
movb
dec
adc
ja
pop
ficompl
adc
dec
mov
mov
fwait
mov
repnz
outsl
mov
xor
xor
add
sub
adc
mov
mov
jecxz
jmp
and
cs
or
jbe
hlt
jns
mov
popf
hlt
das
fstl
cmp
push
adc
je
mov
lea
adc
adc
or
lock
repz
jg
pop
sbb
jne
cmp
dec
jno
sbb
in
sub
adcl
jbe
jbe
sub
cltd
je
idivl
and
in
push
iret
mov
and
out
out
shll
mov
jp
imull
lahf
jg
mov
div
cld
arpl
rorb
leave
lret
xchg
xchg
scas
ficoml
sbb
xlat
xchg
in
lods
dec
add
push
push
pop
xchg
pop
out
adc
int3
xor
push
mov
dec
cltd
stos
imul
adcb
push
fimuls
dec
add
mov
ja
fisttpll
pop
ds
adc
jl
hlt
repz
and
mov
inc
sbb
dec
mov
adc
aad
outsl
scas
stos
or
call
mov
ret
ret
pop
cmp
xchg
adc
adc
mov
jo
mov
xchg
xchg
int3
push
sbb
mov
inc
dec
call
loope
and
enter
jl
or
ss
pop
or
mov
imul
jp
lret
fidivs
mulb
mov
add
fcom
clc
inc
test
mov
notl
test
mov
int3
mov
pusha
add
enter
jnp
in
shlb
loope
test
movsl
pop
in
mov
sbb
pushf
lret
int3
xor
stos
jbe
mov
jae
push
cmp
xchg
xlat
mov
push
fildll
adc
pop
popf
jge
xchg
push
enter
dec
add
mov
push
pop
jne
sub
scas
pushf
fs
push
mov
aaa
mov
hlt
adc
and
das
js
dec
add
mov
leave
gs
adc
cmp
aam
xor
cmp
inc
jne
or
out
aam
sbb
pusha
or
repz
cmp
scas
add
xor
daa
cmp
mov
pop
addl
aam
insb
test
mov
shrd
shr
mov
mov
mov
xor
mov
xor
shl
mov
or
mov
cmp
je
mov
sub
mov
mov
xor
xor
shrd
shr
mov
mov
mov
mov
xor
or
mov
mov
mov
xor
xor
jmp
mov
jg
cmp
sbb
or
mov
stos
cli
mov
sahf
adc
sbb
xchg
movsl
clc
sti
andb
push
mov
popa
inc
popa
popa
aaa
mov
xchg
jge
or
xchg
sbb
ja
push
mov
sbb
scas
or
je
xor
jo
jno
dec
ljmp
in
mov
popa
rolb
repnz
pop
jb
jae
mov
mov
push
ret
and
cli
outsb
in
out
lahf
or
popf
sbb
sub
cs
xchg
mov
addr16
ficomps
or
jle
in
std
xor
push
imul
sbbb
sub
xor
mov
push
adc
adc
pop
bound
sub
in
mov
push
sahf
jae
lahf
cmpsb
ficomps
sbb
inc
mov
xchg
push
into
jmp
cmc
lret
cmpsb
mov
cltd
sbb
xchg
push
and
adc
cmpsl
mov
loop
lock
test
add
out
insb
push
mov
dec
mov
mov
cld
in
sub
out
jb
pop
mov
and
dec
dec
dec
adc
arpl
hlt
sub
in
sbb
sub
dec
in
addr16
pushf
mov
fwait
jg
inc
loop
jo
addr16
clc
rorb
scas
adc
cmp
cltd
mov
push
lods
repnz
andb
ret
add
adc
jecxz
lret
inc
sbb
out
imul
int3
xchg
mov
push
and
pusha
push
dec
sti
mov
pop
add
daa
test
sarb
test
and
sarl
sub
push
cmp
bound
notl
scas
icebp
push
ror
inc
add
ja
adcb
and
xchg
mov
shl
pop
cmpsl
add
cmpb
or
push
mov
outsl
repnz
jae
push
aam
lods
sbb
incb
js
lret
cmp
adc
gs
rolb
cmp
les
mov
jb
jnp
cmpb
mov
jp
scas
les
xchg
push
sbb
stc
mov
mov
aam
or
push
rcrb
loop
sahf
mov
push
and
andl
cmp
iret
sbb
cs
cmc
push
cmc
movsl
dec
lods
movsb
and
dec
test
xor
punpckhdq
pop
fcomip
shrb
pop
jns
fnstsw
sub
jae
cmp
mov
into
lret
or
cmp
and
roll
sahf
dec
jnp
int
xor
mov
out
arpl
pop
cmp
ja
jae
repz
lock
test
mov
jmp
xorl
sbbl
sub
int
push
push
imul
out
xor
sarl
mov
js
sub
insb
cmp
in
sub
and
ja
xchg
inc
push
mov
lds
loope
lret
sub
aas
outsl
int3
dec
fists
xchg
add
mov
arpl
sbb
jbe
push
xchg
loope
push
dec
or
add
cmp
pop
inc
xor
inc
enter
fistpll
sub
xor
leave
ljmp
and
jmp
cmp
xchg
rorb
sub
test
lods
xchg
aam
push
fildl
cmp
xchg
jnp
loop
rcrb
xor
in
sbb
test
inc
cs
sub
mov
jg
or
cmp
lds
inc
int3
jmp
repnz
jmp
imul
pushf
pop
jle
aad
mov
sahf
adc
sbb
lock
div
js
enter
bound
xchg
cmp
out
jne
lea
and
xlat
dec
mov
fidivs
subl
dec
call
xor
enter
fisubrl
mov
inc
cmp
pop
push
ss
lock
arpl
inc
popa
lock
jb
push
repnz
xchg
add
loope
icebp
insl
leave
lods
in
xchg
std
lds
sbb
in
xchg
das
rorl
dec
sar
in
pop
pop
dec
jg
mov
and
pop
push
jbe
push
imul
leave
xchg
sbb
xchg
and
pop
push
jne
jns
popf
add
ja
ret
ds
rcr
mov
lock
add
pop
clc
loopne
hlt
lds
and
pop
out
pop
std
shll
aaa
roll
out
mov
mov
push
fistps
mov
push
sbb
push
fs
adc
add
pop
in
ja
movsb
push
sbbb
inc
dec
test
mov
rorl
adc
pop
mov
inc
in
and
add
xchg
sbb
lock
push
stc
sub
sub
sbb
addl
jbe
inc
pop
mov
or
or
sub
jae
stos
xor
add
iret
rcrl
enter
adc
mov
sbb
dec
jne
cltd
cmp
mov
out
lahf
jae
mov
mov
jns
cmpsb
xchg
adcb
push
mov
mov
je
lds
scas
pop
ja
lcall
cmpl
test
pop
repnz
stos
push
fnsave
movsl
and
mov
mov
adcl
jmp
xchg
into
xlat
cs
sbb
inc
test
xchg
mov
scas
nop
cmpsb
int
xorl
cli
add
add
push
pop
dec
loop
test
stos
push
sub
push
bound
adc
js
xor
xor
cmp
inc
pop
outsl
mov
jae
push
cmp
add
pop
push
out
std
xor
test
jne
dec
js
pop
cmp
push
icebp
lcall
push
mov
popf
push
outsb
sahf
push
fwait
enter
scas
outsl
jo
das
aad
sub
add
lahf
lds
scas
and
mov
lret
insl
push
ds
pop
mov
xor
push
scas
mov
dec
jb
aas
jmp
xor
jae
and
rcrl
test
sub
xor
mov
adc
pop
iret
loopne
xchg
into
addr16
aas
pop
mov
mov
icebp
sahf
outsb
jb
xchg
int3
jle
push
arpl
pushf
mov
filds
jo
jo
test
test
hlt
push
push
push
jnp
mov
add
jno
pop
cmpsb
and
add
and
inc
mov
flds
loopne
inc
add
mov
mov
clc
inc
mov
cli
daa
jnp
in
je
adc
xchg
jmp
ljmp
fsubrs
dec
xor
insl
or
lds
pmuludq
cmpsl
fidivs
bound
divb
pop
in
mov
enter
shrl
pop
nop
cmp
cltd
mov
sbb
mov
mov
dec
mov
pop
mov
mov
mov
loopne
into
das
push
xchg
mov
dec
rep
test
out
fs
stc
fbstp
rorb
rorl
add
loop
xor
or
mov
mov
mov
shll
xorl
mov
mov
mov
xor
or
shr
or
cmp
jne
cmp
je
jmp
mov
mov
xor
xor
shrd
shr
mov
mov
mov
mov
xor
or
shl
xor
or
mov
mov
xor
mov
mov
mov
mov
xor
mov
mov
shrd
shr
jmp
push
dec
dec
testb
cs
sbb
mov
outsl
sbb
sahf
adc
sbb
jbe
sub
and
lods
ret
jnp
or
aas
rcll
arpl
xchg
jle
mov
pop
in
push
push
aam
rcrl
lock
scas
dec
xor
iret
int3
out
mov
dec
xchg
cld
scas
pop
imul
mov
and
mov
xchg
and
inc
aad
and
inc
daa
mov
enter
or
das
enter
filds
test
xchg
xchg
iret
mov
aas
scas
ja
out
mov
jg
fld
add
inc
sbb
mov
push
xchg
adc
shll
js
and
aad
lods
inc
pop
mov
je
xchg
in
jg
xchg
push
ljmp
cwtl
pop
out
outsb
dec
pop
cmp
adc
shll
iret
mov
xor
adc
inc
jg
push
mov
lret
mov
dec
frstpm(287
movsb
enter
pop
push
hlt
ret
mov
jge
adc
and
xor
stos
fdivrs
icebp
jno
sub
cs
scas
jb
outsb
jle
iret
push
add
xchg
inc
insb
outsl
fisubrs
mov
and
and
sub
daa
pop
sbb
arpl
mov
mov
jns
jle
testl
lea
cmp
outsl
mov
pusha
inc
mov
lods
inc
jl
int
repnz
pushf
and
mov
int3
mov
dec
jge
lret
jl
sub
int
inc
pop
lds
mov
test
scas
and
adc
sbb
pop
lea
int3
or
sub
xchg
cmovns
xchg
test
andb
sub
arpl
lret
sub
shlb
ds
add
insb
and
jle
ss
imulb
add
test
mov
xor
mov
xchg
movsl
sub
leave
inc
out
cmc
insb
enter
jno
bnd
pushl
xor
enter
pushf
les
cmp
bound
addr16
push
add
and
lret
sbb
mov
out
pop
jg
adc
shll
cmp
rcl
test
jo
rcrb
jnp
adc
iret
adc
jbe
cwtl
jno
mov
mov
sub
js
mov
addr16
std
popa
dec
insb
adc
xchg
add
hlt
outsl
pop
imul
arpl
push
pop
cs
xchg
push
fldl
out
idiv
xchg
sti
or
dec
stc
lret
sbb
pop
pop
repz
movsl
jl
jns
sbb
pop
cmpsb
idivb
xor
movsb
loope
ja
cs
sbb
push
mov
add
xchg
mov
add
xchg
std
icebp
loope
xchg
sbb
push
aaa
lret
in
data16
aas
cmc
pop
out
or
xchg
sub
ljmp
sub
sub
cmp
add
sub
gs
push
push
push
pop
dec
xchg
out
out
aas
sub
mov
xchg
repnz
pop
fiaddl
adcb
inc
inc
cli
lret
add
xchg
jecxz
dec
push
push
add
mov
sbb
add
roll
paddusb
inc
sbb
add
jg
orb
sti
and
ja
cwtl
mov
xchg
into
adc
mov
sbb
stos
add
pop
push
jbe
lea
jl
popa
sbb
dec
mov
push
mov
shll
xorl
xor
mov
or
mov
mov
mov
or
mov
mov
cmp
jmp
xchg
hlt
xchg
addr16
in
mov
jg
test
sbb
sahf
adc
sbb
fidivrs
adc
ds
mov
dec
add
fwait
mov
repnz
out
mov
jnp
shufps
pop
sbb
clc
or
scas
dec
insb
mov
leave
dec
pushl
popw
mov
or
push
out
cmp
mov
inc
mov
push
testl
add
inc
or
mov
movsl
push
pop
inc
xchg
inc
xchg
shlb
in
es
shll
sbb
xor
adc
ds
sarb
xor
jo
je
add
loop
dec
add
in
insb
cld
das
xchg
pop
push
pop
mov
das
andb
stc
jo
mov
cmpsb
add
and
pop
pusha
mov
or
insl
push
or
inc
mov
fiadds
movsb
and
add
in
push
ret
adc
and
pop
pmullw
ljmp
pop
movsb
add
cltd
cmp
loope
jp
loopne
xor
jbe
push
add
mov
sahf
ror
popf
xchg
stos
adc
scas
push
pop
sub
xor
mov
dec
sahf
ss
dec
jge
mov
sub
adc
in
inc
ss
push
and
inc
and
jns
push
xchg
add
cmpb
xlat
or
std
xchg
outsb
add
test
pop
mov
mov
mov
out
enter
fisttpll
xchg
pushf
ja
jbe
arpl
cltd
jns
push
add
push
outsl
pop
mov
pop
adc
shr
pop
lahf
lods
push
mov
cltd
xchg
fcomps
icebp
sbb
sub
cmp
push
cwtl
lock
cmpsb
inc
xchg
cwtl
call
popf
xor
jmp
nop
aad
insl
push
jg
test
cs
dec
roll
mov
pop
mov
es
ficompl
lods
mov
lea
add
inc
ds
sbb
ss
and
adc
notl
add
dec
fcmovne
xor
sbb
and
pushl
sarl
xor
cmp
pusha
pop
popa
insl
mov
fldenv
test
xor
add
fstpt
jno
push
xchg
pop
jne
andl
xchg
add
push
mov
rcrl
jae
and
or
scas
movsl
mov
aas
jmp
dec
fsubs
mov
ja
insl
rorl
adc
ja
push
jns
cmp
push
pop
inc
inc
mov
icebp
pushf
mov
jmp
fs
xchg
insb
cli
cmp
push
ret
mov
rep
inc
push
mov
loopne
shrb
pop
movsb
push
mov
mov
cwtl
push
jl
jecxz
pop
or
scas
adc
ljmp
pop
test
cmp
sub
jecxz
lea
insb
gs
adc
push
test
pop
xchg
xor
lods
cmpsb
sub
ret
or
ljmp
stc
jecxz
xlat
rcrl
jbe
popf
loope
pop
test
cmp
mov
and
insl
pop
into
out
inc
test
xchg
fsts
dec
xchg
push
insb
fnstsw
fstpl
fdiv
sbb
push
stos
in
pop
aas
pop
mov
pop
jmp
fwait
pop
outsb
stc
xor
aas
mov
daa
dec
mov
mov
sub
insb
mov
jp
push
mov
or
jnp
outsb
cmp
ds
mov
scas
sub
repz
mov
ss
mov
subl
inc
or
in
shl
xchg
outsb
lret
jmp
sub
test
add
mov
cmp
je
mov
mov
mov
mov
lea
mov
mov
mov
jmp
or
jns
arpl
pop
faddl
mov
das
pop
sbb
sahf
adc
sbb
and
lods
push
enter
test
in
or
xchg
xor
sub
hlt
sub
jle
or
pop
sbb
fidivrl
push
jecxz
pop
icebp
mov
enter
and
repz
add
pop
mov
push
jle
shlb
inc
inc
lahf
in
inc
icebp
jbe
lahf
into
pop
add
fcompl
lahf
imul
sahf
add
and
dec
sub
cmove
ljmp
fsubrs
rorb
lods
addr16
leave
adc
test
jecxz
in
cmp
mov
pop
inc
outsl
insb
fdivrl
insl
pop
fistps
sub
xor
pop
bound
cmp
js
mov
cmp
push
mov
mov
test
gs
les
out
mov
imul
std
lea
imul
sub
jno
daa
cwtl
xor
pop
mov
mov
rol
lods
loop
jecxz
push
jae
popf
sub
cwtl
fdivs
adc
in
scas
or
mov
jne
fisubs
cmpsl
pop
mov
and
cmp
leave
les
ret
mov
cmp
sahf
and
movhps
or
cltd
pop
and
mov
jns
mov
in
xor
xor
mov
or
cmc
mov
cmp
sub
add
lret
mov
js
rclb
or
add
repnz
cmp
gs
push
movsb
inc
pop
sbb
or
and
sahf
int3
idivl
mov
pushf
aad
jno
mov
sti
and
xchg
sbb
nop
test
js,pt
loop
inc
das
xor
lock
into
fs
jmp
lods
pushf
pusha
stc
pop
and
scas
inc
int3
mov
xchg
jo
push
inc
iret
nop
adc
push
or
repz
aas
sub
mov
imulb
lcall
cmp
and
orb
dec
adc
cmp
pop
sub
into
cmp
movsl
pop
popa
push
iret
addr16
dec
sarl
ljmp
cmp
sub
popf
mov
mov
inc
push
mov
mov
stos
jmp
repnz
sub
mov
movsb
fcmove
call
mov
in
testl
dec
sti
sub
push
inc
push
pop
loope
xlat
jge
sub
jl
mov
shl
ja
cs
dec
mov
ss
sbb
cwtl
cmp
or
jp
mov
adc
dec
sbb
scas
and
cmpsl
je
rcrb
inc
dec
sbbl
js
repnz
fnstsw
mov
jae
jecxz
and
dec
and
bnd
push
rcll
xor
mov
cmpsb
lret
inc
in
mov
and
or
inc
adc
xchg
add
stc
add
sbb
popf
jmp
push
xchg
cld
sti
shll
sbb
movsb
test
sbb
dec
inc
pop
dec
clc
ss
sbb
cmpl
sub
sub
or
mov
mov
mov
jnp
xor
adc
sbb
in
pop
std
int3
mov
mov
jmp
pop
jno
mov
xchg
or
and
push
sbb
sahf
adc
sbb
out
std
fs
and
std
int
popf
scas
ljmp
cmovae
sub
test
cmpsl
and
push
imul
push
sbb
jge
ljmp
decb
ja
mov
lock
dec
sti
cwtl
mov
mov
sbb
test
aad
pop
int3
mov
adc
mov
daa
icebp
push
scas
dec
jns
push
movsb
shr
mov
rclb
jmp
pop
jp
leave
or
xchg
std
or
in
iret
cltd
icebp
sub
mov
scas
gs
jle
mov
in
jmp
cli
outsb
dec
leave
jmp
sbb
insl
fistpl
xor
arpl
xchg
xchg
ret
int
aam
adc
cmpsb
sbb
out
or
pop
jmp
inc
shlb
std
sub
out
rcr
movsl
dec
pop
mov
repnz
and
adc
adc
pop
xchg
fsubr
out
or
add
loope
mov
ljmp
sbb
call
leave
push
push
add
sub
xchg
mov
sbb
sbb
ret
call
jbe
inc
sbb
add
xchg
jns
lock
jbe
cmp
dec
mov
jl
addr16
jns
aam
pop
xor
cmp
outsl
jo
mov
add
pop
cmp
xchg
pop
je
call
jl
cltd
stos
ds
sbb
in
cmpsl
mov
fsubrs
dec
dec
int
fisubrl
ds
imul
mov
xchg
mov
push
cld
sahf
adc
stos
inc
out
dec
add
ds
jmp
cmp
dec
adc
mov
sub
and
add
sub
xor
cmp
jl
adc
xchg
sub
jp
or
push
xchg
mov
stc
sbb
xchg
out
sti
sbb
inc
push
pop
sub
sub
pop
je
adc
fiaddl
pop
std
xlat
jg
cs
ds
scas
xor
add
and
fiaddl
dec
sub
imul
or
or
fstpl
in
jbe
lods
andb
adc
scas
outsl
jo
mov
adcl
les
sbb
jg
lret
mov
sbb
mov
adc
mov
imul
and
dec
outsl
or
mov
arpl
cmpsl
shl
enter
call
aad
push
inc
or
arpl
lret
les
xor
push
lahf
fisttpll
leave
cltd
cmp
pop
daa
add
jno
sbb
fildll
rcrl
inc
cmp
push
lock
ret
pop
cs
adc
jo
ficompl
ljmp
xchg
nop
fcoms
cmpb
mov
pop
pop
mov
test
cmp
stc
mov
jmp
mov
aaa
add
pusha
testb
mov
ljmp
or
popa
jle
repz
test
xorb
jb
jmp
aas
push
jnp
cmp
repz
adc
and
dec
sbb
fsts
jmp
and
sbb
loopne
adc
test
cmp
cltd
push
ja
popl
cli
pop
das
add
out
pop
rolb
jp
shrd
mov
mov
xor
shr
mov
xor
shl
or
mov
mov
mov
jmp
and
pop
jb
and
jae
push
jle
push
sbb
sahf
adc
sbb
icebp
testl
xchg
hlt
dec
je
aas
mov
lret
ljmp
rcll
cmp
mov
nop
xchg
popa
xchg
mov
or
cs
insl
ret
lret
nop
daa
jno
jns
clc
std
popf
in
rcrb
push
mov
mov
jbe
or
pop
mov
fmuls
iret
shl
cltd
push
lret
add
stc
jb
cmp
ret
jnp
aaa
jmp
pop
adc
imul
shll
mov
xor
rcrb
iret
stc
loopne
xor
mov
addr16
in
mov
lock
inc
call
xlat
mov
push
enter
mov
xorl
push
dec
lods
jl
sahf
inc
cmp
or
dec
out
les
sbb
aas
daa
jbe
sarl
cmp
inc
cmpsl
jge
movsb
mov
inc
mov
jnp
mov
sub
out
pxor
xchg
movsb
adc
cmp
jbe
rcrl
mov
out
scas
dec
xor
xor
sbb
out
cmp
dec
shr
out
es
xchg
aam
out
or
popf
sbb
fsubl
xor
adc
arpl
cmovs
pop
xchg
mov
sarl
in
inc
add
and
pop
orb
mov
sahf
mov
mov
clc
mov
int3
std
lea
popa
inc
sbb
push
push
dec
mov
in
rcrb
outsb
out
scas
stos
int
test
outsl
sbbl
icebp
dec
addr16
pop
cmp
daa
es
cmp
fwait
jecxz
push
dec
cld
mov
xor
mov
lret
jne,pt
mov
movsl
leave
fidivl
outsl
stos
fldt
ljmp
jae
aas
xor
xchg
xchg
jge
pop
cmpsl
push
jns
jns
lods
add
pop
cld
cmpsl
mov
into
inc
jne
mov
loopne
push
sbb
ret
pushf
ljmp
popf
and
dec
adc
mov
and
divl
pop
out
sbb
xlat
sub
xchg
mov
sbbb
shrl
stc
jecxz
popa
pop
mov
dec
pushf
xor
mov
in
das
cmp
sub
stc
insb
add
dec
sub
mov
sarl
push
out
lock
sti
xchg
cld
faddp
xchg
mov
vunpcklps
pop
mov
mov
into
add
adc
push
sub
stos
test
pop
xor
jl
or
xor
jg
mov
cs
shl
rcll
push
add
sub
stos
push
arpl
loop
mov
jp
outsb
test
fldt
scas
test
clc
sub
pop
xchg
or
aad
add
push
mov
add
or
add
xor
dec
or
or
subl
and
cltd
repz
sub
dec
lahf
sub
push
fcomp
cli
adc
arpl
cwtl
push
pop
movsb
pop
rcrb
jne
mov
sub
inc
lock
mov
aaa
mov
adc
imul
cltd
lcall
nop
xchg
xchg
leave
aas
mov
mov
popf
adc
js
gs
sub
jne
pop
or
dec
scas
popa
jle
dec
fcomps
ljmp
pop
sahf
xor
mov
shll
inc
repz
mov
insb
lods
lret
stc
mov
js
ret
adcl
leave
or
mov
faddp
fdiv
andb
mov
or
rorb
movsb
ret
rorl
add
add
and
sbb
pop
mov
sbb
sahf
adc
sbb
subl
out
mov
mov
sub
inc
or
mov
jne
addr16
pusha
dec
add
or
data16
dec
inc
mov
or
mov
xchg
sti
lods
mov
jecxz
pop
jle
fistl
xchg
cli
test
add
and
and
sbb
mov
push
into
out
mov
or
fiadds
and
mov
pop
adc
xchg
aad
and
ja
add
out
repnz
in
and
mulb
lds
in
mov
or
xchg
cmc
inc
test
inc
imul
call
inc
jl
sub
je
pop
cmp
repz
jno
push
adc
test
test
aaa
inc
mov
cs
mov
hlt
inc
subl
inc
enter
mov
mov
icebp
ret
rorb
or
aas
imul
mov
shl
adc
insl
iret
mov
cmp
mov
push
mov
lahf
out
pop
movsb
inc
inc
dec
adc
andl
aaa
mov
aad
pop
cmp
jbe
shr
mov
mov
divl
movsb
mov
push
sbb
dec
pop
and
mov
push
pop
pop
pop
xchg
add
leave
add
xchg
cmpsl
mov
into
mov
mov
dec
arpl
xchg
xor
in
aaa
and
movsb
cmp
xchg
vcvtps2pd
sbb
pop
out
subb
push
std
orl
add
sarb
mov
xchg
and
in
add
nop
js
js
scas
mov
fisttpll
push
rcl
sub
mov
in
dec
and
rcrl
int3
dec
mov
dec
sbb
inc
in
pop
vmovshdup
push
in
xor
lock
sub
xlat
pushf
lret
es
cmp
out
aaa
or
test
and
and
push
fdivrs
test
int
pushl
popf
push
lock
pop
sti
nop
mov
mov
mov
xchg
fcomi
outsb
dec
cmp
xor
movsb
sbb
jae
sbb
dec
add
stos
push
adc
rcrb
insl
popa
pusha
sbb
outsl
adc
cli
dec
outsb
add
in
jbe
xlat
cmc
mov
aad
xchg
lock
das
mov
inc
dec
hlt
test
fmulp
mov
xlat
out
mov
push
mov
iret
sub
fwait
inc
inc
pop
imul
aaa
jnp
pop
or
outsb
lock
xlat
in
into
mov
ljmp
ljmp
and
jmp
mov
cmp
add
cmc
inc
pop
orl
fsubl
lcall
inc
aam
sbb
dec
andl
jae
pop
std
pminub
filds
dec
dec
mov
ljmp
dec
jmp
add
xchg
nop
lret
fbstp
cmpsl
rorl
mov
flds
adc
push
clc
bound
cmp
mov
xchg
ret
lahf
out
push
jmp
or
popa
sahf
and
or
dec
mov
test
add
repz
rcll
add
xchg
es
iret
leave
outsl
ljmp
rorl
or
ds
out
call
std
xlat
jae
js
xchg
xchg
pop
rorl
mov
mov
xor
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
mov
xor
xor
mov
mov
shrd
shr
mov
mov
mov
mov
xor
or
mov
shl
xor
mov
mov
or
mov
push
pushl
push
push
call
mov
mov
shrd
shr
shr
xor
push
xor
mov
mov
mov
push
push
push
call
shld
mov
xor
or
mov
mov
shl
or
xor
xor
xor
xor
mov
mov
jmp
mov
add
mov
mov
mov
mov
mov
mov
movzwl
cltd
shld
xor
mov
mov
shl
mov
mov
xor
mov
cmp
jne
mov
cmp
jne
movl
mov
movl
mov
movl
mov
movl
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
add
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
xor
mov
mov
shrd
shr
mov
mov
xor
shl
jmp
or
cmp
mov
out
fstpt
inc
sbb
sahf
adc
sbb
sub
xchg
shl
fsubl
sub
xchg
push
cltd
bound
adc
mov
mov
cwtl
cmp
repz
in
shrl
cltd
xchg
sub
outsl
pop
roll
popf
lret
adc
pop
pop
std
testl
adc
pop
fdiv
mov
sub
jl
outsl
lret
sar
sbb
in
pushf
adc
int3
repz
jb
int
mov
sbb
std
xor
hlt
imul
push
inc
data16
jl
jl
repz
fwait
mov
movb
and
jp
fs
ljmp
mov
dec
xlat
ljmp
mov
push
dec
or
lods
mov
mov
cli
rclb
or
lcall
jo
fidivl
dec
shlb
cmp
int
jbe
dec
repnz
pop
xor
dec
jge
test
mov
jo
insb
add
cmp
adc
and
mov
test
jae
sub
and
idivl
fs
xor
lock
fcmovnb
xchg
insb
int
xor
jmp
shrl
pop
push
mov
mov
cmp
movsl
pop
xchg
rclb
rcr
sbb
cmpl
inc
cmpsl
insb
push
add
adcl
repz
add
hlt
mov
push
dec
mov
dec
or
jnp
lcall
xlat
movsl
add
or
data16
enter
cmp
jecxz
pop
shrb
mov
shlb
roll
sub
sbb
movsl
push
xchg
inc
pop
rclb
lret
xchg
adc
mov
inc
xor
clc
mov
pop
mov
jb
pop
mov
popf
pop
pop
outsb
insl
mov
adc
mov
jbe
mov
jge
in
inc
jo
or
push
or
test
loop
arpl
xchg
sub
xchg
pop
std
cmpsl
sub
lods
or
testl
enter
and
into
adc
jle
aaa
mov
jmp
adc
add
pop
arpl
mov
out
inc
fdivl
in
fwait
in
mov
jns
xorl
dec
inc
pop
mov
test
test
sbb
les
cltd
sbb
in
cmpsb
push
jbe
mov
inc
fsub
xor
hlt
push
pop
xchg
mov
lods
outsl
lods
stos
adc
cmp
xor
push
pop
insb
lret
sub
jge
aaa
mov
adc
jle
sbb
sbb
jno
inc
and
mov
loopne
rcrb
mov
gs
arpl
or
push
stos
inc
fcmovbe
mov
cwtl
enter
jmp
enter
mov
bound
mov
pop
add
mov
push
cltd
cli
imul
jle
pop
in
mov
or
sahf
xor
dec
mov
sbb
mov
shlb
adc
ss
dec
out
push
sbb
push
fucom
fsubl
cmp
pop
xor
mov
dec
cmpsb
jbe
cmp
jbe
aas
in
xchg
sub
int
push
xor
mov
xchg
pmulhuw
loopne
jae
lods
and
push
lds
push
call
test
jge
mov
inc
inc
rcrl
add
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
or
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
shl
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
add
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
shl
mov
mov
shrd
xor
shr
mov
mov
xor
or
mov
or
shl
mov
mov
mov
mov
xor
xor
shrd
xor
or
mov
mov
mov
xor
xor
mov
mov
mov
shrd
shr
shl
mov
mov
mov
mov
xor
or
mov
shll
xor
mov
jmp
jbe
fstpt
insl
cmpl
stos
int
sbb
sahf
adc
sbb
or
jb
add
ds
push
popf
inc
ljmp
ficoml
lods
loop
pop
ficoml
push
xlat
dec
jp
xor
insb
loope
pop
cmp
sub
ljmp
mov
pop
inc
xchg
adc
pushf
pop
sub
xor
pushf
mov
and
push
sub
dec
cmp
mov
adc
jnp
cli
lret
lea
xor
mov
sub
add
cwtl
fnsave
dec
scas
fdivrs
cmp
mov
mov
test
xorl
fdivrs
in
test
jl
das
mov
test
jp
movsb
mov
adc
pop
movsl
sub
loopne
pop
xor
movsl
xchg
pop
leave
pop
addr16
push
mov
loopne
in
mov
xor
or
fs
icebp
push
and
shrl
push
fidivrs
lods
lret
or
inc
xor
mov
sub
gs
jl
push
int
cld
hlt
xor
mov
cli
hlt
imul
stc
fdivr
inc
xchg
mov
inc
leave
adc
idiv
pop
add
loope
and
xchg
in
rclb
lock
cmpsw
mov
sbb
int
jnp
add
cmc
fidivs
ljmp
sbb
shrb
mull
fcoml
push
inc
int
mov
xchg
add
adc
dec
fidivrl
fcompl
ja
pusha
and
cmp
sbb
outsb
fistl
fwait
sbb
sub
mov
imul
jno
jge
push
jnp
mov
mov
push
xchg
mov
add
les
xlat
ret
mov
jle
jo
cmp
sbb
xor
and
jmp
cltd
ja
hlt
jl
inc
loopne
jg
pop
movsl
out
cmp
cmpsb
ds
bound
stc
dec
shr
sub
imul
cltd
scas
sbb
push
ja
xchg
stc
ret
arpl
mov
fdivl
adc
into
arpl
mov
insb
dec
iret
mov
inc
fiadds
jnp
push
shlb
imul
jnp
test
jl
mov
jns
test
and
pop
outsl
aad
roll
mov
mov
repz
insb
inc
movhps
insb
stc
and
adc
mov
int
insl
push
mov
xor
xor
rolb
shll
idivb
lds
push
test
es
in
and
cmp
in
ret
pop
xchg
in
notl
or
mov
mov
add
iret
sbb
cmp
mov
lcall
nop
sbbl
outsb
jb
cmp
fsubrl
popf
jle
cmp
mov
mov
call
hlt
pop
leave
inc
push
jmp
test
cmp
fcmovne
imul
lea
adc
dec
ss
pop
and
jl
loopne
xchg
ds
jmp
mov
lret
mov
outsl
enter
mov
dec
mov
add
push
loopne
or
pop
jne
jns
cmp
ljmp
push
mov
xchg
lahf
cmpsb
es
fimull
mov
mov
xor
or
shr
or
cmp
jne
cmp
jne
jmp
mov
mov
mov
mov
xor
xor
mov
mov
shrd
shr
mov
mov
mov
mov
xor
or
mov
shl
xor
mov
mov
or
mov
push
pushl
push
push
jmp
std
dec
mov
sub
fidivrl
test
push
stos
gs
pop
jo
xor
sbb
fidivl
cs
add
rorl
mov
inc
into
fisubrl
mov
mov
sahf
adc
mov
mov
push
shl
jl
mov
add
mov
fmuls
push
fiaddl
lcall
xchg
adc
fsubr
and
cmp
cltd
cmpsb
mov
xchg
cltd
or
mov
jecxz
rcll
repz
or
jmp
mov
sbb
hlt
xchg
gs
sahf
jge
pop
inc
fimuls
xchg
xchg
inc
imul
jge
enter
or
xlat
jbe
mov
dec
dec
jb
shll
sbb
mov
pop
or
cmpsl
aam
lret
shr
xchg
es
leave
test
or
sub
cmpsb
fdivrp
test
sarb
cmpsb
pop
inc
xchg
mov
andl
sti
shll
inc
xor
sbb
test
add
adcl
dec
outsl
mov
cmpsl
stos
icebp
and
push
cmp
cmpsl
sub
xor
xchg
stos
push
sbb
pop
sbb
mov
adc
add
daa
sub
mov
loopne
jb
aad
fimuls
or
movsl
cmpsl
iret
mov
and
adc
push
adcb
pop
jne
mov
pop
pushl
movsb
xor
imul
hlt
sbb
push
mov
pop
inc
mov
xorb
cmpsl
js
xlat
cmp
jns
inc
iret
lea
inc
or
or
cmp
mov
mov
inc
push
dec
test
cmp
test
adc
mov
rorb
push
mov
mov
xchg
pop
in
pusha
inc
stc
imul
imul
or
mov
mov
loopne
mov
aad
cmc
jb
push
call
ss
or
inc
dec
push
daa
inc
inc
add
cs
ss
cmp
js
dec
push
fidivs
mov
stos
cmp
ret
ds
insb
push
mov
lds
xor
icebp
adc
mov
stc
mov
cmovns
frstor
mov
mov
push
jmp
movsl
rolb
and
imul
mov
dec
mov
aas
mov
sbbb
cwtl
mov
stos
inc
outsl
loope
popa
add
loopne
insb
gs
inc
int
push
dec
insb
mov
cmp
add
insl
jl
add
addr16
fiadds
popf
ss
jl
icebp
movsl
adc
push
xchg
ss
call
cmp
cmp
push
scas
sub
inc
imul
daa
in
dec
lea
lods
test
sub
pop
jg
arpl
adc
cltd
aad
fsubr
aad
pop
mov
adc
jb
push
jp
inc
inc
mov
jmp
jg
les
popa
or
into
dec
sti
lea
dec
or
cmp
mov
mov
xchg
ficomps
cmc
mov
cltd
lods
adc
out
in
pop
mov
xlat
stc
cmp
pop
mov
rcrb
testb
mov
hlt
fistpl
aam
je
test
imul
insl
lea
int
fildll
adc
lods
data16
dec
into
scas
clc
in
shrl
mov
mov
adc
push
dec
bound
jno
testb
call
mov
mov
shrd
shr
shr
xor
push
xor
jmp
sbb
jmp
ljmp
jo
mov
sbb
sahf
adc
sbb
push
aam
push
xchg
int
cltd
fiadds
cmp
repz
out
pop
enter
imul
cmp
dec
push
shl
mov
lcall
movsb
mov
inc
lea
inc
pop
push
jb
sbb
cmp
jnp
das
mov
push
dec
sbb
sbb
lock
in
out
ficoms
fs
mov
les
popa
xchg
addr16
mov
stos
sbb
pop
pop
mov
iret
add
pop
sbb
push
jle
jbe
test
orb
mov
mov
push
mov
cmpsl
fsts
mov
subb
sbb
or
ljmp
lcall
and
incl
dec
pushf
push
push
addb
push
mov
push
popa
mov
sub
adc
mov
jno
es
adcb
movsw
aas
push
xor
setp
lods
xchg
in
sbbb
pop
fwait
imull
icebp
loope
mov
fadds
and
stos
push
das
bound
psubusw
roll
fucomi
add
mov
add
adc
sub
enter
sti
icebp
rorb
mov
outsl
mov
mov
pusha
sbb
inc
add
push
cld
mov
aaa
mov
xor
stos
addr16
movsb
sbb
in
jne
and
cmp
dec
xor
and
pop
push
or
jnp
mov
int
fwait
pop
and
add
js
add
lret
add
or
or
pop
and
push
jbe
shlb
fcmovu
idivb
sbb
leave
inc
imul
sub
insb
sbb
jns
cwtl
jg
push
xor
mov
scas
je
inc
sbb
test
lret
popf
cmpsb
movsl
xchg
jno
les
push
jne
rcl
pop
out
pop
mov
sub
iret
cmp
or
sbb
jg
call
lcall
in
sbb
dec
mov
sbb
pop
shll
lods
hlt
pop
pop
imul
sub
push
test
mov
ljmp
add
dec
addl
ja
pop
inc
sahf
lock
pop
dec
out
sub
xchg
mov
data16
cmc
lds
jne
mov
dec
stc
sbb
ret
push
cs
mov
mov
popf
in
mov
fcoms
test
cs
shll
je
sti
lcall
clc
das
jl
dec
pop
clc
sub
mov
sub
ret
add
cmp
fiaddl
sahf
sub
add
lcall
mov
into
clc
jb
cwtl
sbb
sbb
jmp
mov
jno
repz
dec
jno
ficomps
dec
loopne
outsb
mov
add
jp
xchg
mov
xor
test
inc
push
mov
cwtl
mov
add
cmp
xchg
xor
call
mov
and
mov
jmp
sub
adc
cli
mov
jl
push
sub
gs
inc
iret
push
jnp
mov
nop
int
ret
jo
inc
dec
arpl
push
scas
lods
push
and
dec
sbb
sbb
sub
adc
push
push
push
call
shld
shl
mov
or
xor
or
xor
xor
mov
mov
mov
mov
mov
xor
xor
shrd
shr
mov
mov
mov
mov
xor
or
mov
mov
mov
xor
xor
shl
mov
mov
mov
shrd
xor
or
mov
mov
mov
mov
shl
xor
or
shr
xor
or
cmp
jne
cmp
je
pushl
pushl
pushl
push
push
call
pop
leave
ret
cmp
movl
jae
movl
cmp
movl
jae
movl
shrd
notl
shr
ret
add
mov
xor
and
shr
ret
xor
xor
ret
push
mov
sub
movl
xor
mov
mov
not
movl
decl
mov
movl
mov
sbb
movl
jmp
clc
sub
sub
cmp
sbb
outsb
adc
sbb
cmpl
jecxz
add
push
dec
add
andl
test
ds
jl
scas
xlat
pop
sub
shrl
mov
push
mov
shrl
cmp
icebp
or
aam
les
pop
mov
les
icebp
xchg
icebp
xchg
pop
in
dec
mov
inc
test
jle
cmp
nop
add
xor
xchg
or
sub
push
leave
icebp
ja
cmp
repnz
xchg
test
fs
loope
xchg
adc
jle
int3
popf
push
das
hlt
insb
shlb
test
add
sbb
imul
in
mov
insl
cmpsl
cmpsb
sti
std
in
ja
jbe
and
cli
insl
hlt
inc
add
popf
mov
pop
in
pop
sbb
xor
jnp
mov
lret
orb
mulb
in
cmp
lret
xor
push
aas
js
jnp
jg,pn
mov
rorb
leave
mov
int
push
aad
ror
stos
mov
cmp
xchg
mov
dec
pop
mov
adcl
fwait
test
add
das
push
mov
lods
push
jl
push
push
jnp
xchg
jp
adc
out
out
pop
lcall
or
idivl
mov
cmpsl
adc
xchg
loopne
scas
dec
icebp
push
xor
mov
mov
jg
inc
sub
andl
cltd
xchg
mov
adc
imul
and
mov
cmpsl
adc
xchg
pop
cli
dec
and
xchg
or
mov
daa
add
dec
fs
push
xlat
push
and
jp
mov
pop
jo
imul
or
sbb
push
add
fnstenv
push
in
out
dec
xor
fmulp
jns
lods
jbe
aas
icebp
mov
xchg
jo
cli
popf
inc
scas
dec
aas
and
lret
dec
push
pop
pop
je
xor
daa
and
mov
stos
leave
push
mov
dec
mov
add
or
pushf
cwtl
push
clc
jns
add
mov
cs
and
test
subb
mov
lea
aad
test
add
sub
push
repz
push
sub
subb
cwtl
stos
mov
cmc
adc
sbbl
stc
repz
aas
es
xchg
fs
stos
inc
fsubl
dec
adc
loope
fbld
xchg
ffreep
pop
push
push
push
adc
out
jno
cmpsl
push
or
dec
scas
cmp
mov
inc
push
mov
or
and
or
or
push
fistpll
add
lock
rorl
int3
shll
fdivrl
pop
mov
fisubs
adc
mov
cli
enter
andb
push
inc
sbb
arpl
std
and
imul
sub
dec
or
stos
fsubrl
pop
pop
ss
lds
add
dec
fld
inc
fisttpll
fsubrs
mov
popf
mov
jg
ja
andb
pop
in
add
sub
andb
loop
stc
jno
mov
insb
icebp
push
stos
add
inc
cli
xchg
push
in
xchg
movsb
push
mov
ret
sbb
mov
mov
lret
or
inc
repnz
lahf
mov
mov
popa
sub
pop
and
mov
sub
jle
rcrb
xchg
and
popa
pusha
in
add
imull
pop
enter
movl
xor
push
movl
movl
push
xor
movl
sbb
mov
cmpl
mov
mov
jmp
mov
movzbl
cmpl
ja
push
pushl
pushl
push
call
mov
xor
or
or
mov
adc
xor
or
adc
mov
and
mov
push
adcl
push
andl
jmp
xchg
sahf
push
push
fists
push
push
stos
mov
sbb
outsb
adc
sbb
mov
or
cmp
sub
cmp
scas
mov
rcr
jl
xchg
mov
dec
inc
add
add
mov
fsts
jp
dec
inc
push
mov
jno
pop
in
mov
sarb
lods
pop
cmp
mov
sarl
inc
jg
cmpsb
in
iret
imul
int
jbe
mov
in
aad
dec
add
ja
insl
in
pop
inc
je
jo
jo
popa
mov
imul
cltd
pusha
mov
repnz
ss
or
sti
lock
outsl
int3
std
push
inc
aas
mov
add
test
or
ret
pop
rorl
or
adc
mov
sbb
shlb
xchg
test
mov
xor
xor
out
data16
dec
daa
stos
sub
insl
fstps
sbb
push
fcomip
mov
scas
cmc
aaa
mov
test
or
dec
mov
mov
movsb
call
dec
je
and
leave
mov
mov
aam
loopne
sub
or
testb
or
inc
add
aaa
xor
rorb
inc
paddd
mov
mov
sbb
scas
dec
sbb
xchg
or
push
movsl
sub
dec
cmpsb
xchg
rolb
dec
cli
test
push
jmp
push
mov
pop
stos
push
push
mov
mov
scas
jne
jg
out
hlt
fwait
jbe
lds
mov
push
iret
xchg
aam
repnz
ljmp
jle
rolb
jl
pop
sahf
xor
add
cmc
imul
in
mov
lods
stc
mov
mov
jl
pop
add
cmp
insb
mov
xor
mov
stos
pusha
inc
inc
jbe
inc
jnp
out
imul
testl
addb
mov
or
lahf
adc
inc
inc
sbbl
testl
inc
xchg
lock
sub
es
mov
cmp
negl
insl
pop
sbbl
xor
mov
mov
mov
mov
sbb
jnp
mov
mov
pop
mov
ret
inc
cmc
inc
mov
mov
ret
ds
jge
in
test
mov
pop
xorb
dec
pop
enter
sub
inc
xor
jmp
out
roll
cmpsl
int3
sub
in
dec
pop
dec
jns
cmp
inc
mov
lock
push
xlat
js
xchg
push
fsqrt
and
ror
roll
pop
call
and
or
pushl
inc
push
stos
jns
pop
in
mov
les
and
dec
xchg
mov
push
insb
fs
pushf
xchg
es
movsl
push
cmpb
xchg
mov
xchg
lods
fucomp
jmp
cmpsl
insl
adc
jbe
cmp
jbe
sbb
cmp
fmul
ja
fbld
jp
lock
test
imul
pop
mov
mov
or
insl
cmpl
mov
sub
cmp
fcoml
aaa
jno
push
sbb
mov
in
icebp
shr
mov
loopne
popa
xchg
mov
xchg
cmp
fildl
and
dec
scas
rclb
or
lods
aas
lea
inc
push
mov
sbb
mov
fbstp
aam
loop
cmpsb
sbb
xchg
mov
insb
mov
lret
std
or
sbb
loope
or
mov
sti
pusha
or
mov
cli
or
nop
int
aam
adcl
call
sbb
mov
adc
mov
sbbl
push
or
subl
push
xorl
or
xor
xor
subl
push
push
call
xor
or
adc
mov
xor
mov
andl
push
addl
push
subl
push
push
subl
call
mov
add
mov
cmpl
not
movl
jmp
notl
mov
cmpl
jl
push
pushl
call
xor
and
movzwl
or
add
adcl
sub
cmpl
mov
movl
movl
jmp
movl
movl
cmpl
jbe
pushl
push
call
xor
adc
andl
and
add
movl
movzwl
xor
movl
decl
movl
movl
cmpl
mov
mov
not
movzbl
jmp
movl
movl
cmpl
je
push
push
call
sbb
mov
xor
or
sub
imul
and
sbb
movl
movl
mov
sbb
mov
notl
mov
or
mov
sbbl
jmp
adc
packssdw
jb
jnp
push
pushf
shll
adc
sbb
dec
mov
jl
jb
cmpsl
mov
xchg
lret
out
cmp
and
and
sbb
mov
xchg
icebp
out
xor
xchg
adc
fidivs
and
sbbb
into
jae
sbb
pop
hlt
cmp
adc
sbb
out
popa
call
xor
sbbl
inc
rcrl
and
je
inc
inc
push
jne
sbb
mov
icebp
inc
sbb
repnz
in
mov
jecxz
aaa
rcrb
mov
sahf
mov
aaa
jp
push
stos
adcl
mov
xchg
jno
mov
pop
xor
cmpsb
pushf
jl
jns
mov
sti
jl
cmp
into
push
pop
jle
cmp
leave
inc
and
out
lcall
enter
dec
aad
and
fidivrs
xor
mov
sub
xchg
add
scas
inc
mov
xchg
call
xor
sbb
fsubrl
xorl
js
add
xor
movsl
popf
call
imul
leave
pop
ret
sbb
dec
fs
adc
xor
sbb
adc
pop
gs
jp
mov
mov
inc
ljmp
pop
sub
sti
ljmp
or
sub
cld
sbb
push
imul
mov
lock
adc
sbb
scas
pushf
jnp
rolb
insl
int3
jl
sahf
fwait
iret
aad
and
lcall
and
sbb
dec
test
dec
out
out
push
or
test
jecxz
aaa
xchg
adc
jno
out
xchg
data16
adc
cmc
dec
mov
movsb
mov
mov
popf
lods
shrb
xchg
rorb
arpl
xchg
fucomp
jns
dec
loopne
sbb
std
xor
pop
popa
jmp
lock
int3
aad
xchg
pop
sbb
push
inc
in
mov
xchg
sbbb
jmp
sub
and
sti
adc
pop
aaa
jmp
and
inc
notb
mov
fnstsw
jae
daa
add
test
ror
mov
jo
lret
xchg
loopne
mov
jg
pusha
sub
loopne
pop
mov
push
aas
out
imul
ljmp
int3
outsb
push
movsb
push
sub
push
inc
jecxz
in
subb
xor
js
orl
loop
mov
imul
cmp
stos
mov
inc
out
iret
aad
inc
cltd
sbb
cld
daa
xor
or
jp
daa
out
sub
sub
and
mov
cmpsl
sub
fwait
jne
sub
jmp
xor
jns
iret
xchg
cmp
lods
adc
sub
shlb
iret
sub
adc
push
lods
adc
out
sbb
mov
aam
sbb
loop
jle
push
pushf
cmc
cltd
mov
add
dec
hlt
scas
and
push
pusha
int
fisttpl
fnstenv
in
dec
ficomps
movsb
addl
pop
imul
lock
movsb
push
push
in
int3
or
pop
repnz
jns
pop
in
loop
out
xchg
dec
loope
loop
xor
arpl
movsl
outsl
mov
lds
pop
enter
pop
cmp
push
cs
pop
dec
outsb
aad
xor
push
ds
jmp
dec
add
adc
adcl
or
mov
or
and
mov
andl
or
cmpl
mov
not
movl
jmp
movl
movl
cmpl
jbe
pushl
push
call
adcl
not
movzwl
sub
mov
adcl
mov
xor
orl
mov
or
mov
or
mov
or
or
cmp
jne
cmp
je
movl
movl
mov
mov
xor
xor
and
and
mov
jmp
movsl
movsb
test
test
sbb
fdivl
mov
jns
leave
jl
or
sbb
ds
loopne
aaa
sti
movsl
clc
xchg
inc
aam
fbld
push
xchg
dec
mov
jae
lock
gs
mov
popf
in
je
ret
or
cmp
faddl
xchg
sti
xor
outsl
sbb
je
std
cmc
pushf
bound
mov
mov
lahf
xchg
dec
dec
cmp
cld
xchg
jbe
movsl
lret
ret
cltd
or
mov
push
mov
ds
rcrb
fmuls
cmp
adc
pop
ljmp
test
data16
sarl
xchg
into
jb
rol
aam
std
test
mov
cmp
jns
push
mov
push
dec
or
mov
push
sub
push
cmp
mov
cwtl
out
mov
incb
ret
and
add
std
lret
jae
push
dec
outsl
xor
inc
xchg
iret
xor
hlt
or
shl
outsl
stos
lods
mov
enter
outsl
dec
out
cmp
flds
jmp
push
outsb
subl
xor
stc
pop
xchg
call
ja
push
cmp
es
icebp
loope
mov
loope
or
shl
xlat
movsl
iret
call
pop
inc
fwait
mov
inc
xor
sti
push
mov
push
lods
pop
les
inc
or
xchg
xor
pop
mov
and
xchg
push
dec
test
pop
cmp
fbstp
lret
fnsave
push
stos
or
mov
push
and
xor
repz
or
in
ret
xchg
das
repnz
scas
jmp
xchg
pop
mov
mov
xlat
and
aaa
mov
lea
pop
ret
enter
sub
lea
jge
pop
sub
pushf
sub
std
and
sti
mov
fwait
jge
xchg
cmp
push
adc
packuswb
jp
xor
mov
out
push
push
lret
adc
out
les
push
push
dec
ss
nopl
push
fimuls
in
in
push
adc
arpl
inc
rol
test
push
mov
xchg
in
push
aam
aas
xor
mov
xor
xlat
mov
loope
add
mov
sahf
aas
mov
negb
push
dec
shlb
in
lcall
push
mov
sahf
insb
xor
pop
lds
repz
xor
fistps
pop
inc
jnp
fidivrs
push
cmpsl
push
pop
push
pop
pusha
cmp
out
icebp
dec
stos
add
mov
decl
cmp
sbb
ds
mov
jge
jno
and
fs
call
shll
push
add
mov
andb
sub
add
and
add
xchg
addb
mov
rorb
pop
stos
fiaddl
sub
int3
mov
ds
enter
sar
dec
pushf
mov
mov
inc
mov
mov
loop
inc
repz
shr
mov
pop
jmp
adc
fildl
fs
adc
xchg
xchg
insl
ds
pop
nop
mov
dec
pop
in
repnz
test
outsl
adc
sub
jmp
mov
or
fisttpll
js
or
scas
lret
sbb
cld
in
and
bound
and
mov
xchg
rcrl
std
sti
jmp
xor
xchg
push
insb
test
test
movaps
gs
adc
stos
jmp
inc
mov
cmp
pop
and
lahf
inc
cs
dec
pop
bound
test
int3
decl
shl
sahf
test
test
mov
int3
imul
ds
std
dec
sub
loopne
dec
add
movl
movl
movl
movl
movl
mov
mov
mov
mov
add
mov
adc
mov
add
adc
xor
xor
add
mov
adc
mov
cmp
jne
cmp
je
movl
movl
movl
push
movl
mov
mov
push
push
push
call
mov
mov
push
push
and
and
push
jmp
fsts
or
push
jp
jo
xlat
lds
sbb
outsb
adc
sbb
mov
mov
aad
decb
int
push
inc
ret
and
and
push
mov
xchg
or
or
clc
ficompl
xchg
in
es
fildl
adc
inc
mov
push
jae
dec
jne
repz
lods
nop
xchg
xchg
out
jmp
insl
sub
icebp
adc
or
stos
jmp
flds
jo
mov
sarb
in
scas
mov
mov
mov
loop
xchg
fcoml
mov
lods
add
shr
pop
out
jmp
lcall
lods
in
jae
daa
xor
ja
sbb
cs
jmp
js
xchg
in
and
cltd
cltd
enter
fmul
sahf
lret
test
rcll
scas
ljmp
push
sbb
pushf
lcall
shlb
jp
rcrl
ja
inc
lds
jmp
and
icebp
adc
popf
lcall
scas
fbstp
mov
pop
mov
mov
fcoml
movsl
xlat
sbb
cmp
aam
imul
daa
rorb
adcb
or
sub
or
dec
lea
mov
xlat
jae
inc
into
adc
icebp
test
mov
mov
icebp
rcr
dec
mov
add
cmp
loope
inc
inc
cmpsl
shr
mov
mov
lcall
mov
inc
andl
push
mov
les
cmp
sahf
cmp
lods
popa
add
xor
push
sub
shr
and
pop
stos
pop
and
and
mov
mull
je
push
pop
stos
sub
ds
jns
cmpsb
sbb
stos
mov
add
insb
push
sub
test
pop
loop
mov
lahf
std
cli
clc
jl,pt
jnp
inc
mov
push
clc
repz
mov
push
aad
testb
test
cltd
add
in
mov
shr
test
ja
stc
lret
push
mov
mov
fdiv
dec
push
cltd
jnp
mov
lret
xchg
push
mov
mov
fs
out
jmp
cmp
imul
mov
aad
rorb
jb
orl
das
fdivrl
push
adc
mov
jle
fyl2xp1
mov
or
push
lds
cli
loop
test
test
push
add
or
add
adc
jbe
in
sti
xchg
out
jle
jge
shlb
sub
cmp
mov
xchg
mov
cmp
sub
sbb
dec
add
add
adc
jnp
push
or
fwait
loopne
fsubrl
adc
adc
in
or
shl
cli
pop
fsts
push
adc
shl
jne
je
nop
sbb
xor
addl
out
pusha
out
movl
dec
in
jno
ja
mov
and
jb
xchg
cmp
dec
cmp
in
sbb
rcrb
dec
sti
pushf
inc
and
scas
ss
dec
sti
stos
mov
push
mov
jb
pop
rorl
cmp
sbb
lods
mov
adc
mov
xchg
rcrb
ljmp
test
insl
int
add
mov
push
mov
inc
cmc
ret
adc
mov
add
mov
dec
or
pcmpeqb
push
cmp
scas
shll
pusha
das
jg
mov
nop
rcll
movsb
cmp
sahf
rorl
push
call
xor
xor
mov
mov
mov
cmp
jne
mov
mov
mov
mov
shrd
shl
mov
mov
shr
xor
mov
xor
or
mov
mov
mov
shrd
shr
mov
mov
xor
xor
or
mov
movb
movb
movzbl
shl
mov
jmp
xor
mov
lcall
xchg
and
mov
outsb
adc
sbb
xor
loope
shlb
lret
cmpsb
dec
mov
mov
mov
iret
and
hlt
ljmp
int
sub
inc
call
test
xchg
cli
jl
cmp
sub
rcr
mov
cltd
mov
jns
pop
push
inc
bnd
loopne
pop
imul
sub
dec
push
mov
int3
mov
cmp
hlt
mov
xor
jo
xor
clc
xchg
and
jo
or
rol
aam
addr16
mov
mov
xor
push
pop
push
test
and
stos
cmp
jo
sub
jp
addb
outsl
stc
cmpsl
stos
repnz
testl
or
pop
arpl
call
push
sub
jns
fbstp
mov
loop
je
lods
xor
lods
push
stc
adc
mov
stc
push
jg
jns
ret
lcall
sbb
inc
pop
aas
jle
cmpsb
pop
xchg
in
in
data16
cltd
in
lods
xor
adc
aaa
xor
popa
mov
push
jae
hlt
fiaddl
xor
mov
push
aad
push
mov
pop
xor
scas
out
and
out
mov
dec
lods
cmp
rcrl
test
xor
lcall
or
cld
cld
dec
pop
push
push
mov
or
sub
add
shll
or
cmp
adc
sub
popa
test
aas
xor
mov
leave
xor
pop
mov
or
add
mov
repz
shll
xor
add
sub
mov
mov
cmp
lock
daa
sarl
jae
testb
jo
cmp
pop
cmpsl
out
scas
test
std
or
jae
fsubrs
sbb
fistpl
loopne
negb
mulb
repnz
inc
stc
pop
inc
mov
sub
cmpsb
sub
fistpl
hlt
add
aaa
addr16
lret
jbe
xor
mov
jl
jge
mov
sub
shr
sbb
push
cli
aam
rcl
inc
dec
inc
mov
lret
push
jb
es
mov
jmp
push
enter
xchg
outsb
add
lds
jmp
out
mov
mov
dec
xor
cmp
mov
xchg
mov
sub
jge
shlb
cmpsb
jo
cmp
fnstsw
xchg
pop
js
jae
xor
lea
mov
add
imul
nop
inc
fidivl
dec
fcoms
adcb
jmp
pop
lret
lcall
jb
insl
std
fucom
sbb
add
nop
add
ss
pop
adc
ljmp
nop
inc
shll
or
into
rol
add
xchg
inc
xchg
mov
xor
aad
jle
dec
cmp
cmpb
sub
imul
jne,pt
movsb
imul
mov
and
js
mov
inc
dec
loope
or
mov
repz
or
xchg
jecxz
ja
ds
xlat
xchg
test
add
arpl
daa
jb
and
mov
je
jns
arpl
pop
add
scas
dec
push
fstpl
adc
add
pop
fcmovu
arpl
je
push
hlt
jmp
pop
repz
daa
dec
xor
cmpb
sbb
add
insl
mov
mov
sbb
jmp
sar
test
xor
add
push
add
mov
movb
pop
mov
movb
mov
movzbl
cltd
idiv
mov
add
mov
or
mov
add
cmp
jmp
xchg
and
cmc
mov
mov
jo
cmc
sbb
outsb
adc
sbb
and
mov
rcl
sbb
jae
cltd
inc
jo
jne
sbb
imul
lret
or
cmp
pop
loopne
movsb
adc
jb
xchg
adc
jns
repz
sti
pushf
call
cli
ret
jg
push
ret
in
dec
xchg
or
inc
mov
fwait
daa
dec
pop
or
sbb
and
mov
jg
ds
jp
ja
mov
aaa
adc
int
and
rorb
out
stos
cmpsb
imul
xor
jle
stc
mov
adc
pop
lods
adc
jmp
cmc
push
lahf
sbb
jge
jne
mov
inc
adc
ret
mov
adc
dec
scas
cmp
insl
cmpsb
xor
pop
sbb
add
pop
mov
mov
mov
push
ficoml
lret
enter
js
jle
nop
out
jns
inc
aaa
mov
ljmp
mov
mov
inc
enter
in
pusha
and
push
inc
dec
sbb
xor
add
pop
hlt
sbb
data16
push
fcoms
test
push
loope
push
sahf
cmp
and
test
and
jecxz
xchg
dec
idiv
push
jp
nop
mov
shll
mov
add
ljmp
mov
mov
pop
mov
sbb
scas
cmpsl
clc
aad
pop
jno
pop
cmpsl
sahf
push
jno
and
xor
sbb
fstpl
inc
push
mov
cmpb
jbe
lea
ret
mov
jbe
sbb
jbe
pop
or
stc
pop
push
rcrl
cltd
xchg
xchg
xchg
out
jno
mov
add
mov
adc
mov
test
sbb
fistpll
rcrb
adc
mov
lock
popf
pushf
ljmp
jg
jne
daa
cmpsb
cmp
inc
stos
mov
mov
adc
pop
frstor
gs
push
dec
movsl
dec
es
push
out
out
pop
mov
lret
call
pushf
cmp
into
loopne
mov
add
and
or
gs
repz
sbb
dec
jl
cmpsl
lahf
ljmp
fbstp
push
out
or
mov
cmp
lea
jbe
in
jge
sbb
push
lcall
out
and
mov
sbb
cmp
int
inc
repnz
pop
nop
mov
repnz
sbb
sub
pop
xchg
es
and
cmpsl
popa
jno
pop
mov
mov
inc
push
pop
js
mov
jecxz
jecxz
inc
xchg
sbb
sti
fildl
inc
data16
fmuls
lret
push
xchg
fcoml
dec
add
int
scas
sub
xor
dec
js
cmp
cmp
cmp
and
xor
stc
mov
cmp
mov
inc
pop
pop
xor
jns
std
xor
xor
dec
es
jmp
popa
scas
fsub
gs
add
ret
stos
cmp
call
inc
push
sub
mov
jno
test
cmp
pop
mov
movsb
push
add
ds
sbb
jp
sbb
ret
xor
pop
andl
je
je
lahf
sahf
mov
movsl
mov
sbb
add
cmpsb
push
arpl
and
nop
xlat
fstpl
fildll
inc
cld
sub
fwait
lea
rcll
pop
lcall
jae
mov
mov
shrd
xor
mov
shr
mov
xor
shl
or
mov
pop
leave
ret
push
mov
sub
push
push
push
movl
movl
movl
movl
movl
movl
movl
movl
xor
inc
mov
movl
mov
jmp
sub
sti
xchg
sbb
xorl
rclb
sbb
in
dec
or
dec
sbb
jl
jp
adcb
es
fsubr
int3
and
or
data16
pusha
out
mov
jp
jg
pop
cmp
sbb
psraw
cmp
ss
jl
sub
xchg
outsb
mov
dec
sbb
or
adc
fucomip
ret
add
xchg
clc
lcall
shr
nop
xchg
xchg
fildll
push
in
loop
rcrl
cwtl
sub
decb
repnz
out
je
xor
mov
outsb
cmpsl
jp
dec
jge
and
in
les
mov
pop
or
push
sub
fwait
dec
lahf
xor
jno
cli
lret
pop
iret
pop
adc
mov
cld
jb
das
cs
push
iret
xchg
add
pop
mov
xor
test
shl
mov
xchg
loopne
sbb
adc
aad
andb
xor
sti
popf
cmp
outsb
inc
ror
cli
jp
lcall
movsb
cltd
jle
stc
sbb
add
inc
add
add
and
enter
rcrb
lds
shll
push
cmc
je
ficomps
out
call
mov
xchg
das
mov
cmc
pushf
add
adc
popl
int
dec
dec
test
jno
fsts
sbb
jp
test
out
sbb
enter
inc
stos
push
lret
xchg
xor
js,pn
adc
mov
mov
and
popf
vmaxps
stos
aad
mov
mov
jnp
jo
cmpsl
xchg
repnz
jl
cmp
pop
cmc
adc
mov
or
push
inc
das
out
fisubl
stos
or
sbb
fwait
jo
push
mov
adc
xlat
fdivs
sar
out
sarl
arpl
mov
cmpsb
sub
daa
xchg
jl
sahf
aas
or
rcrb
sbb
and
dec
inc
loopne
inc
sbb
xchg
xchg
adc
bound
fdiv
and
lods
ret
ja
roll
rol
jo
in
mov
mov
pop
xor
xor
pop
or
dec
jle
popa
push
xor
xor
jle
cmp
cli
mov
mov
ja
xor
sub
mov
push
lock
notb
mov
in
sub
int
jae
inc
cld
sub
add
add
imul
add
xor
movl
movl
movl
movl
mov
or
add
mov
and
mov
sub
mov
mov
mov
add
or
sub
xor
sub
mov
mov
jmp
nop
xchg
lret
ja
das
sub
sbb
mov
jb
sbb
rclb
sbb
xchg
sub
mov
gs
int3
dec
stc
xchg
pop
addb
mov
out
iret
jno
mov
es
inc
cmpl
mov
cmp
adc
pop
cmp
dec
repnz
mov
scas
pop
js
or
mov
and
fs
ret
jg
imul
enter
fidivrs
inc
cld
adc
insb
aas
adc
daa
in
jle
rclb
mov
pop
addb
ret
ret
mov
lods
push
jne
xlat
fadd
xor
je
cs
cmp
push
aaa
xchg
stc
sbb
and
test
xchg
je
jmp
stos
loop
popf
mov
and
int3
add
xor
sbb
mov
aas
int
mov
cmp
push
add
imul
sub
jl
dec
inc
popf
sbb
test
aas
test
add
out
or
jb
cmp
xor
insb
pop
fstl
lahf
sbb
or
jae
push
out
aas
stos
pop
fidivrs
mov
pop
xchg
cmp
add
lock
add
stos
cltd
sbb
clc
cmp
push
jp
push
and
xchg
incb
jb
insb
push
cli
push
jo
mov
xchg
add
add
mov
jle
pop
dec
popf
pop
and
jp
cmp
sti
and
pushf
and
pop
int
jmp
xchg
jns
out
and
gs
sbb
out
mov
xor
inc
mov
inc
rol
je
xor
jae
and
mov
in
dec
stc
cmpl
jo
xchg
sbb
test
orl
je
pop
stos
sub
push
les
sub
xchg
sti
jo
aas
xchg
inc
jl
test
mov
add
and
sbb
add
cmc
adc
mov
pop
xchg
mov
lds
fisttpll
sub
xchg
nop
mov
xchg
push
push
pop
mov
mov
push
mov
arpl
jg
daa
cmp
pop
pusha
fnstcw
ds
leave
add
mov
add
ficoms
fldl
mov
and
ds
dec
jbe
adc
loopne
push
test
cwtl
push
pop
leave
lahf
jmp
les
aaa
popa
mov
mov
mov
jp
jge
jns
pop
aaa
fiaddl
mul
add
out
and
push
mov
mov
and
xor
xor
div
lea
mov
add
mov
and
mov
imul
mov
sub
cmp
jbe
push
pop
mov
mov
movl
movl
movl
mov
movl
movl
xor
movl
mov
mov
sub
div
jmp
test
push
inc
sbb
jnp
inc
sbb
rorb
outsl
mov
loop
sbb
adc
sbb
sahf
jge,pt
lret
pusha
in
aas
rorl
test
mov
xchg
std
ret
in
popa
jg
imul
dec
or
or
pop
sahf
xorl
dec
pop
lods
notl
jle
out
push
fsubrs
cmp
and
add
mov
mov
mov
out
loop
push
cmp
pmaxsw
stos
mov
mov
outsb
sub
test
jnp
dec
and
push
pop
adcb
clc
sbb
mov
and
fstl
cs
push
int
push
xor
pop
hlt
jecxz
cli
insl
fldl
sbbl
stos
mov
dec
fildl
iret
jmp
and
imul
sub
sbb
push
aad
push
mov
insl
mov
xor
movsb
jmp
xchg
or
je
insl
lds
repz
push
jbe
les
inc
xor
mov
pushfw
mov
push
popa
adc
imul
leave
xor
push
mov
and
or
xchg
in
and
hlt
aas
lds
cld
adc
mov
sbb
cltd
loope
mov
and
ret
jmp
mov
adc
stos
pop
mov
fnstsw
arpl
rolb
xchg
jnp
xchg
scas
mov
add
sub
ret
push
xchg
push
xchg
in
mov
aam
add
xlat
adc
sbbb
adc
push
pop
xor
out
dec
enter
cmp
pop
lock
jae
xor
fmuls
jmp
mov
ljmp
es
xor
xor
jg
fdivs
or
iret
cli
in
je
ret
adc
outsb
fsubrs
mov
adc
adc
lods
mov
mov
xchg
cwtl
push
es
mov
add
pop
push
xchg
push
pop
pop
push
and
orl
xlat
pop
in
out
sbb
repz
scas
push
xor
aaa
mov
mov
xchg
aas
mov
sbb
jl
push
push
push
xchg
jmp
add
out
sahf
ret
ficomps
push
outsl
inc
pop
jecxz
fisttps
fnstsw
pop
cmpsl
mov
mov
test
repnz
jmp
pushl
lret
repz
xor
inc
or
mov
cld
mov
fistps
mov
xor
jmp
pop
fdivs
sbb
pop
into
sbb
jae
in
cli
jns
out
sbb
rclb
sbb
fmuls
mov
adc
sahf
push
int
dec
jne
cmp
cmp
xor
divb
add
idivb
mov
cmc
call
or
scas
ss
filds
cmp
aas
loope
mulb
inc
cld
sbb
xchg
jno
je
pushl
xlat
mov
add
lods
inc
jae,pn
pop
sbb
in
ret
add
fwait
cmpl
xor
sub
mov
roll
dec
in
test
cmpsl
dec
test
cltd
sub
mov
or
nop
cmp
test
sarb
xor
sbb
xchg
dec
push
inc
adc
cli
icebp
daa
ret
pusha
pusha
out
mov
xor
or
adc
dec
xor
es
dec
das
ficoml
xchg
scas
cmp
mov
jne
adcl
adc
sbb
nop
in
loop
pop
xchg
scas
in
mov
adc
and
push
decl
inc
test
repnz
sbb
cli
and
mov
inc
mov
sub
lods
sub
cli
pop
xor
das
pop
xchg
adc
lahf
xchg
testb
lret
xchg
fdivrs
inc
sbb
mov
sub
lahf
jbe
mov
into
test
xchg
sti
mov
pushf
and
push
nop
mov
rol
xchg
mov
sbb
pushf
push
test
xchg
int
push
insb
xor
or
cmp
dec
xor
aam
dec
in
mov
mov
loope
add
sbb
xor
movsb
mov
jp
imul
dec
xchg
jne
xchg
push
and
sahf
jne
ret
fwait
jne
in
mov
dec
repz
mov
sub
pop
xchg
dec
xor
pop
stos
adc
pop
lea
xor
sub
xor
mov
insb
pop
aad
mov
scas
pop
test
and
aad
mov
mov
sbb
stos
pushf
add
push
mov
lds
mov
jmp
insl
mov
out
insb
movsb
push
add
sub
add
jne
mov
lret
cmp
add
push
add
mov
and
xor
inc
insl
adc
in
jns
movsb
push
mov
jg
and
imul
popa
xchg
or
and
ficoms
jae
push
leave
cmc
lods
mov
push
lock
mov
add
div
mov
xor
div
xor
mov
jmp
aam
sbb
and
test
jle
fcomps
sbb
adc
sbb
sbb
loop
sub
jg
and
or
push
mov
adc
cmp
clc
stos
add
jp
iret
cmp
fcoms
out
pop
shr
bound
xorl
lods
jmp
test
enter
nop
incl
pushf
bound
mov
dec
cmp
inc
lods
ret
sbb
dec
jnp
fs
movsl
and
stos
sub
div
dec
push
pop
jecxz
xor
icebp
fldcw
fiadds
imul
dec
out
mov
loopne
mov
test
pop
push
ds
xor
mov
cmp
xor
pop
mov
cs
in
dec
sarl
push
iret
xorl
lds
sub
in
jb
and
loopne
idivb
add
push
pop
fdivs
dec
push
mov
bound
nop
jle
stos
mov
inc
mov
jns
and
mov
xlat
int
dec
in
pop
push
fldl
mov
sbb
inc
push
ffreep
test
lahf
dec
pusha
and
imul
cmpsb
aas
test
sub
jecxz
sbb
cltd
rol
push
jle
pop
mov
fildl
or
xor
cmp
les
push
ds
add
jae
inc
push
test
cmpsb
mov
adc
popa
dec
push
iret
je
mov
int3
fisubrl
add
in
stc
mov
mov
cltd
xchg
and
push
or
std
iret
movsl
insb
faddl
scas
jp
dec
out
in
hlt
jns
insb
cmpsb
mov
inc
icebp
scas
mov
adc
fsubr
cmpsb
andb
mov
pop
js
in
adc
fldenv
sub
stc
push
mov
and
rolb
add
stc
ret
mov
mulb
xchg
stc
cmp
jae
mov
inc
outsl
mov
mov
cmpsl
pop
pop
mov
or
or
xchg
fs
cwtl
into
stos
je
int
sbb
gs
test
repz
shr
out
fdivrs
push
lahf
aad
pop
inc
ja
in
xor
jmp
sahf
call
dec
out
jae
mov
jne
aas
mov
xor
pop
push
int3
jnp
test
cmp
out
in
mov
cmpl
xchg
fistl
outsl
or
movsl
mov
xchg
add
mov
dec
sub
sbb
cmp
je
fisttps
add
add
mov
add
div
mov
mov
sub
sub
xor
div
mov
add
cmp
jae
movl
movl
jmp
test
in
gs
les
jo
push
jo
rcrb
sbb
adc
sbb
cwtl
imulb
cs
xchg
les
mov
clc
je
pop
xor
mov
lret
add
pop
out
or
sti
cmp
pop
repz
cmp
loopne
push
rcll
lret
jno
sub
outsl
ds
push
xchg
mov
xchg
inc
inc
lret
mov
push
lcall
add
das
mov
icebp
adc
push
sub
or
cmp
push
inc
sbb
ja
adc
xorl
pop
int
mov
aaa
sahf
notl
aas
mov
test
dec
bound
loop
mov
enter
stc
jl
pop
inc
jns
out
sti
gs
in
mov
xchg
cmp
je
lret
push
fstps
or
inc
cli
call
ja
pop
int3
mov
dec
mov
lret
adc
sub
cmc
cmp
mov
fisttpl
nop
push
cmp
inc
jmp
sbb
pop
xor
mov
sahf
fsubrs
dec
sbb
and
idivb
into
push
ljmp
cmp
dec
push
dec
ja
inc
pusha
mov
pushf
out
adc
sub
mov
fld
and
mov
shrl
dec
inc
sbb
repz
pop
xchg
jmp
jle
mov
xor
mov
push
mov
lret
stc
xchg
dec
push
dec
cmp
add
mov
and
int
insb
pop
mov
out
pushl
push
jno
pop
inc
jmp
stc
push
loop
shll
adc
push
daa
fs
dec
xchg
ss
dec
js
repnz
add
cmp
xchg
movsl
jae
dec
imul
shrl
sub
mulb
cli
pop
mov
ficoml
mov
xchg
shrb
dec
cmc
bound
push
cltd
cmc
leave
loopne
popf
ja
cmpsb
icebp
out
pop
in
loop
mov
dec
lods
ret
popf
mov
imul
push
xchg
fwait
dec
mov
test
sbb
and
mov
or
jecxz
xchg
mov
jno
mov
mov
dec
fstpt
daa
dec
test
stc
mov
pushf
pop
adc
les
enter
adc
adc
ss
ficomps
addr16
mov
xchg
jmp
cmpsb
ret
fldt
jo
mov
cmp
popl
cmp
add
movl
xor
movl
movl
mov
push
pop
div
mov
mov
mov
sub
mov
mov
imul
mov
xor
sub
add
and
mov
sub
mov
sub
mov
sub
mov
mov
mov
jmp
rep
add
mov
inc
leave
jl
push
xor
int3
sbb
rclb
sbb
add
inc
sub
and
xchg
xchg
add
out
or
mov
cmp
test
jnp
push
mov
sbb
jne
popa
daa
mov
xor
inc
push
adc
mov
jmp
jl
outsl
scas
mov
mov
lcall
add
inc
pop
jg
ja
cs
cmp
and
je,pn
imul
stc
in
movsl
sub
cmp
flds
push
clc
out
notl
fwait
jne
shll
shll
dec
stc
adc
das
adc
add
lock
mov
xor
or
popf
lods
ret
lcall
pop
mov
adc
fs
mov
ret
inc
push
scas
adc
pusha
iret
adc
mov
sub
inc
adc
add
insl
rorb
rorl
xlat
mov
fbstp
cmpsb
mov
cmp
or
addr16
and
push
psubsb
gs
jl
sub
je
cmp
or
shll
dec
in
std
idivb
xor
sbb
pop
or
cmc
out
or
and
lds
lds
jl
roll
mov
aad
or
inc
mov
inc
push
ret
lods
xorb
clc
fcmovb
adc
pop
ret
fwait
adc
stc
xchg
and
cmp
push
inc
xor
pop
mov
insb
mov
xchg
dec
sbb
xor
xorb
pushf
pop
inc
pushf
and
test
dec
xchg
push
ds
pop
and
movsb
sbb
dec
xchg
cld
pop
in
sti
cld
jl
in
xchg
mov
push
lods
or
jecxz
push
int
ss
dec
stc
mov
mov
fdivs
sub
lret
mov
or
in
cmpsl
addr16
js
xor
mov
dec
jge
cmp
cli
xor
outsb
cmpsl
jb
push
xor
and
push
mov
fistpl
or
push
enter
add
scas
mov
inc
filds
lods
mov
jge
fmull
loope
adc
jl
sub
lahf
cmpsb
out
mov
stos
int
mov
out
cmp
mov
jb
scas
mov
fwait
dec
les
sahf
loope
aad
jne
jno
fisttpll
loopne
adc
adc
aam
xor
hlt
pop
or
xor
sbb
lods
or
inc
lock
add
jmp
sub
mov
inc
pop
and
leave
out
jle
dec
xor
sbb
adc
sbb
mov
xchg
test
lahf
adc
cmc
adc
addr16
repz
lods
push
jb
jmp
dec
adc
push
pushf
mov
in
add
jle
xchg
inc
fidivl
inc
fcmovne
push
adc
sub
add
pusha
add
jbe
mov
mov
int3
inc
test
mov
add
cwtl
mov
or
sbb
cmp
mov
iret
jp
fistl
ja
jae
lods
movsb
imul
sti
jecxz
and
int
jns
mov
imul
inc
sub
rorb
jnp
faddp
insl
lds
push
mov
mov
xchg
push
in
mov
fwait
dec
test
popf
pop
xor
jmp
clc
nop
aas
lret
inc
jns
sub
jns
outsl
pop
pop
xorps
mov
cmp
xchg
dec
mov
nop
pop
push
xor
fcoms
sub
mov
xchg
adc
insl
mov
cmp
out
mov
jl
xorb
ss
gs
jnp
mov
cld
pop
mov
popl
jl,pt
xor
inc
sub
sti
std
mov
inc
push
mov
cmpsl
lret
fidivl
fdivrs
inc
cmp
decb
xor
jae
and
in
xchg
test
push
jp
push
dec
test
stc
orb
mov
lret
mul
mov
add
push
aam
push
cmp
mov
testl
inc
movsl
push
lds
push
pushf
mov
insb
data16
int
flds
push
jl
cmpsl
das
xor
inc
popf
fcmovbe
pop
fdivr
mov
out
les
push
xor
jmp
test
in
movsl
push
mov
xchg
pop
jmp
xor
loope
out
adc
and
pushw
mov
and
or
std
sbb
fwait
daa
mov
into
popf
mov
daa
dec
stos
icebp
shrl
jmp
aaa
push
icebp
xchg
movb
in
imul
fcomps
xchg
clc
ljmp
scas
lods
pop
out
push
rorl
adc
mov
stos
addb
cmp
jnp
pusha
push
and
imul
jb
mov
cmp
adc
sti
and
add
repz
dec
xchg
mov
or
fdiv
lods
movsb
bound
aaa
lcall
outsl
add
push
pushf
xor
and
lea
mov
mov
add
div
mov
mov
sub
xor
div
add
cmp
jb
xor
inc
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
add
and
xor
mov
jmp
mov
and
ss
xorl
rclb
sbb
jns
jo
mov
add
pushf
mov
pop
int
mov
testl
xchg
inc
pop
cmp
sbb
test
xlat
mov
mov
jno
clc
outsb
orb
dec
jnp
outsl
cmp
dec
mov
xchg
sub
dec
jnp
xchg
pop
pop
sbb
les
addr16
lret
cwtl
out
xchg
cltd
out
aam
je
lea
scas
mov
inc
popf
sbb
lea
mov
subl
mov
adc
in
fdiv
ss
js
inc
xchg
js
jo
jge
adc
jge
push
ss
jecxz
loope
stos
xor
inc
or
xchg
jp
ffree
repnz
or
xchg
faddl
gs
adc
add
jp
and
shrl
sbb
mov
xchg
mov
inc
cmpl
mov
arpl
jo
mov
pop
das
es
mov
sti
lret
adc
lods
jnp
cltd
and
fucomip
xchg
jno
mov
sti
outsl
inc
jmp
adc
pushf
or
mov
xor
in
add
stc
sbb
mov
and
mov
inc
pop
mov
pop
xchg
mov
push
or
daa
cld
sub
pop
mov
sub
insl
cwtl
or
loope
xlat
sbb
mov
inc
movsl
jle
pop
aas
jl
and
daa
andb
adc
mov
leave
sbb
cmp
jecxz
int3
or
and
pop
adc
outsb
out
popa
add
pop
stc
adc
jae
mov
lock
ja
mov
je
in
pop
movl
adc
hlt
js
mov
cmp
stc
cmpsb
cwtl
imul
loop
repnz
int3
or
mov
aad
faddl
sub
call
sub
cld
iret
imul
sahf
xlat
out
xor
mov
xchg
cmpsb
mov
sbb
push
cmp
adcl
pop
xor
clc
xor
add
stos
in
ret
mov
push
and
cmp
lods
xorl
repz
or
test
faddl
and
ss
leave
test
mov
push
cmp
mov
inc
repz
sub
gs
mov
add
push
xlat
mov
mov
or
sbb
sub
movl
movl
mov
movl
movl
mov
mov
imul
xor
or
xor
mov
sub
mov
mov
mov
or
sub
jmp
orb
loop
sbb
call
mov
jl
mov
sbb
dec
dec
shl
lods
test
adc
cltd
adc
xor
scas
dec
nop
fnstcw
cmp
mov
jno
iret
mov
dec
jb
cmp
mov
test
sarl
or
int3
orl
sub
mov
pop
or
mov
sub
jno
fdivs
aaa
lods
mov
test
fisubs
push
mov
lods
js
fidivrl
push
pop
movsb
test
sub
mov
inc
push
shrl
and
dec
imul
cmp
sbbl
mov
outsl
insl
cltd
mov
adc
notb
loop
and
and
shl
or
mov
ljmp
rcl
sub
sbb
movsb
jp
or
jmp
jge
and
pop
nop
sbb
mov
sbb
and
push
inc
movl
inc
loop
iret
dec
sbb
push
fs
or
pop
xchg
pop
xchg
out
push
jne
into
rcll
fbstp
add
ficomps
popf
cmp
aas
mov
out
aaa
and
xchg
sub
nop
jb
aaa
mov
rcr
push
lret
sub
js
mov
imull
and
sub
aad
adc
xor
add
xchg
xchg
in
push
xchg
shlb
xlat
mov
loopne
and
test
int
xchg
xor
or
push
and
aas
sbb
fwait
pop
push
inc
cli
xchg
inc
rolb
mov
fistl
sbb
loopne
adcb
pop
sub
cltd
pshufw
sub
dec
push
imul
mov
jle
idivb
mov
in
xchg
jmp
jge
lock
adc
pop
daa
or
fwait
aaa
in
sbb
sub
xchg
adc
add
add
mov
or
adc
mov
out
jo,pt
cmp
cmp
sahf
mov
mov
push
jne
mov
es
jns
cmp
xchg
mov
jge
jecxz
push
adc
push
test
adc
push
jae
flds
pop
divb
xchg
scas
push
cmp
adc
call
sub
cmp
std
enter
fwait
sub
xchg
aaa
mov
adc
fldl
or
std
lds
movsb
cmp
add
sbb
jo
mov
ljmp
adc
mov
sub
mov
mov
mov
mov
mov
imul
mov
imul
or
mov
or
xor
jmp
subb
pushf
sbb
pop
mov
popf
and
sbb
adc
sbb
cmp
xor
mov
lods
cltd
push
fwait
orl
loope
iret
xchg
jb
jmp
movsb
jns
mov
es
inc
sbb
or
cmp
jae
movsl
sbb
popf
adc
fs
jge
bound
bnd
inc
outsl
xor
cmpb
cltd
shll
inc
pop
or
inc
fimull
sahf
dec
mov
ljmp
sub
mov
jno
scas
dec
jg
dec
push
mov
int3
mov
push
inc
leave
mov
cmp
jg
int3
mull
jb
inc
mov
icebp
mov
shll
in
push
mov
stc
pop
pop
es
aaa
repnz
add
inc
rorl
dec
xor
pop
xchg
outsb
sub
jle
out
mov
push
dec
add
cmp
cmp
push
fsubrs
add
in
mov
lea
lcall
mov
cs
mov
mov
hlt
movsb
push
je
or
xor
pop
or
icebp
stos
fnstsw
pop
lods
test
dec
cmp
xchg
in
and
mov
lods
test
jbe
push
mov
outsb
xchg
sbb
into
rcr
adc
sub
add
cmp
int
pop
out
jnp
pop
stc
dec
cld
mov
in
or
outsb
fstpt
gs
mov
sysexit
cli
ret
stos
in
or
in
xor
nop
loope
into
mov
mov
andb
mov
jle
jg
adc
arpl
imul
pop
dec
cmc
rclb
js
jp
mov
fs
popf
xor
iret
cmp
cmp
imull
pop
sar
ret
add
sbb
je
and
ret
cmp
stc
push
adc
pop
or
adc
fxch
xchg
ds
rcll
repnz
cmp
or
xlat
xor
jle
xchg
cmp
mov
adc
aad
fistpll
jno
dec
mov
xlat
adc
sti
dec
movsl
mov
jno
fcmovnbe
add
jno
icebp
jbe
stc
aad
out
sub
inc
and
push
addr16
push
mov
mov
outsl
mov
jnp
xchg
ficompl
jmp
icebp
fcoml
xchg
jmp
test
loop
xchg
stc
movsb
les
insb
cmp
jb
rorl
mov
mov
cmp
xchg
addl
add
pop
add
and
add
xor
add
cmp
jmp
cmp
daa
sub
addr16
mov
sbb
rclb
sbb
and
clc
loope
rorl
in
mov
push
std
inc
mov
adc
mov
pop
out
sbb
xchg
mov
xchg
test
sbb
shrb
cs
jl
mov
lods
ss
jno
rcr
sub
js
lods
out
ds
outsl
scas
xchg
fldt
out
arpl
mov
dec
outsb
dec
lods
test
orb
mov
lret
sub
jns
movsb
cmpsb
mov
movsb
push
call
aaa
clc
rcr
inc
ficoms
jb
pop
jl
mov
ret
jp
pop
mov
dec
loopne
inc
jnp
sub
adc
out
and
imul
fnsave
dec
clc
sub
lahf
rcrb
xchg
xor
or
mov
ret
xlat
in
fcoms
icebp
imul
dec
xor
jb
jmp
pop
lods
arpl
and
or
and
pop
adc
push
mov
jge
add
sub
mov
push
leave
nop
or
mov
jl
sub
pop
sti
push
pop
dec
shll
nop
ja
js
dec
mov
ret
shll
mov
add
push
jl
add
jmp
idivl
addb
roll
or
pushf
aas
popl
imul
cli
pop
lcall
je
and
repz
add
and
in
int3
xchg
cmp
mov
fidivrl
add
add
aam
adc
and
mov
cs
movsl
les
cmpsl
pop
or
popl
adc
fldcw
insl
sahf
jae
out
ljmp
and
xchg
popf
repz
iret
frstor
push
push
insl
push
lret
popa
shrb
int3
cltd
pop
ret
cmp
or
mov
mov
pusha
sbb
push
mov
std
or
adc
push
sbb
push
cmp
sbb
push
ffreep
sahf
das
fnstsw
xor
aaa
in
xchg
mov
gs
aaa
sbb
sub
add
inc
les
add
dec
rcrb
inc
lcall
fld
xchg
push
lock
lds
shrb
inc
pop
pop
out
dec
sarl
sti
scas
sbbb
popf
ja
jno
jbe
lcall
xor
dec
insl
adc
push
and
pop
fdivs
mov
dec
aad
dec
push
leave
cmp
ret
sbb
jne
pop
jmp
inc
mov
inc
lcall
push
push
scas
sbb
rclb
sbb
sub
sub
iret
xchg
push
cmp
cmpsl
mov
iret
mov
stos
jecxz
rorl
test
xlat
sti
mov
loopne
addb
sbb
adc
adc
sbb
inc
dec
mov
sub
sbbl
bound
aaa
in
mov
cltd
cld
or
divb
out
jbe
xor
sbb
jecxz
sti
xor
lcall
cltd
pop
adc
add
sbb
imul
neg
sub
in
jns
aad
lods
leave
pop
sbb
arpl
pop
mov
and
cmc
mov
xlat
jns
test
sbb
movsl
rolb
push
or
push
dec
xor
lods
add
inc
inc
jo
mov
inc
mov
fs
and
inc
and
mov
or
pop
xchg
pop
xchg
js
push
clc
data16
test
lahf
sub
nop
pop
add
loopne
xchg
outsl
stos
aaa
je
xchg
pop
sti
mov
das
push
sub
fidivs
mov
pop
add
aas
out
push
push
sbb
push
dec
les
mov
xor
xchg
or
insb
or
pusha
lods
fstps
jecxz
sti
clc
stc
pop
or
and
inc
test
bound
mov
dec
and
dec
lock
rorb
inc
ret
popa
cmp
add
in
das
inc
repnz
pop
xor
jmp
sub
mov
in
stos
cmp
or
lock
mov
xchg
in
adc
cwtl
cltd
data16
pop
push
stos
sahf
rol
mov
xchg
lcall
iret
sti
xorl
cli
xlat
add
mov
jp
testb
popf
andb
or
xor
shl
push
and
jo
fimuls
sahf
push
jge
xorl
lret
mov
fiaddl
roll
jne
in
mov
push
loope
push
ret
cwtl
das
jbe
xchg
negl
cltd
idivl
dec
mov
cwtl
and
stos
push
iret
iret
daa
pop
sbb
in
faddp
cmp
mov
xor
cli
mov
inc
lds
pop
cld
cld
push
rcrl
jle
add
add
jmp
ds
sbb
rcll
add
sub
cltd
dec
xchg
jae
xchg
pop
adc
cmp
cmp
insb
leave
mov
insl
xorl
leave
ret
push
mov
sub
push
push
movl
movl
mov
jmp
outsb
rolb
jnp
cmp
ret
push
dec
aad
sub
sbb
cltd
add
loope
mov
iret
loop
push
ja
lahf
roll
add
int
mov
push
push
mov
pusha
and
mov
xor
xor
lock
jnp
push
lock
lcall
jmp
xchg
pushf
mov
testb
repz
push
outsl
lcall
stos
ljmp
hlt
dec
rcrb
ljmp
dec
lea
sub
call
ljmp
sbb
cmp
and
mov
and
push
mov
movsl
jb
add
ja
or
push
scas
sti
in
mov
cltd
adc
stos
scas
xchg
loop
fdivp
test
mov
dec
or
cmp
push
mov
xchg
xchg
dec
lea
dec
dec
scas
out
dec
lcall
lock
xchg
leave
data16
pushf
repz
lods
test
and
dec
jecxz
lret
je
inc
mov
inc
loopne
ljmp
and
and
enter
lods
mov
sahf
leave
xchg
aad
jns
les
jmp
add
ret
in
lcall
cmp
test
bound
popf
mov
lcall
adc
mov
mov
push
movb
icebp
popf
mov
sbbl
dec
sbb
xor
cld
repz
jge
scas
scas
leave
fsubr
mov
and
es
pop
jbe
mov
jae
repnz
xor
push
dec
xor
adc
ficomps
shrl
dec
sbb
cmpsl
enter
lcall
lock
cmp
push
sbb
and
ja
filds
lret
ret
add
mov
dec
cs
stos
cmpl
mov
dec
scas
fiadds
mov
enter
sub
xor
outsl
jp
inc
add
adc
and
in
scas
dec
xor
pop
lret
cmpsb
lret
mov
ljmp
pop
xor
cmpsb
inc
loop
jg
inc
pop
scas
pop
out
insb
jl
lret
adc
sarb
jns
fdivrl
mov
das
inc
and
xor
or
andb
cs
leave
mov
jmp
push
inc
or
adc
cwtl
sarl
jbe
out
and
loop
lret
sbb
sbb
inc
push
in
cmp
in
sbb
insl
adc
or
cs
test
fbld
mov
dec
out
mov
mov
add
or
mov
lea
mov
movl
movl
mov
mov
and
xor
mov
imul
xor
lea
mov
movl
movl
mov
xor
push
pop
div
mov
xor
push
add
and
mov
sub
mov
movl
movl
movl
mov
mov
lea
mov
div
mov
lea
mov
movl
movl
movl
mov
mov
xor
sub
mov
jmp
mov
pop
mov
stos
and
sbb
shll
sbb
xchg
add
insl
sub
xchg
adc
cli
xchg
les
scas
mov
in
popf
js
daa
test
adc
and
pusha
push
pop
gs
fcoms
fsubr
scas
mov
ret
xor
mov
jecxz
nop
mov
movsb
and
nop
mov
mov
es
jle
call
sub
fdivs
out
jnp
mov
shlb
xchg
int3
xchg
jne
jl
mov
adc
or
push
cmpsl
sub
je
lahf
and
das
lcall
cwtl
inc
xor
inc
lock
mov
out
scas
adc
enter
repz
pop
imul
out
sahf
in
in
mov
call
sahf
lods
xor
lret
mov
inc
cmp
and
xor
in
mov
popa
cmp
push
enter
rcll
in
xchg
sbb
sub
aas
mov
dec
inc
mov
mov
lcall
rolb
loopne
dec
xor
sarb
sbb
mov
sti
daa
mov
cmc
stos
mov
sub
test
cmpsb
sbb
lds
stc
arpl
mov
sub
repnz
ja
or
mov
xor
call
inc
mov
cltd
jmp
mov
inc
stos
jb
inc
xchg
adc
aam
push
cmpl
rcll
in
jne
ret
lret
mov
cld
add
movsb
stos
dec
mov
mov
jle
mov
popf
insb
mov
popa
lock
sbb
sti
jno
loope
and
xchg
inc
dec
cltd
cmpsb
mov
mov
sbb
out
ljmp
mov
test
push
sbb
dec
fwait
mov
xchg
lret
xor
xlat
call
cmc
pusha
insl
aam
adc
and
out
in
loop
js
mov
mov
push
add
popf
clc
out
int
jno
push
in
and
mov
fistps
push
mov
lcall
sbb
fs
jno
bound
sub
push
js
jmp
add
jae
scas
cwtl
xor
out
test
cld
fisttpl
bound
lods
xchg
rcl
orb
stc
loop
push
add
enter
add
pop
js
divb
inc
push
adc
or
push
shl
sbb
ds
shr
subb
xor
mov
movl
pop
mov
movl
movl
mov
mov
mov
xor
xor
div
mov
and
sub
mov
movl
movl
movl
movl
movl
movl
mov
add
mov
xor
mov
or
mov
or
mov
and
mov
sub
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
add
adc
or
mov
or
or
mov
mov
or
mov
sub
mov
sbb
mov
or
or
add
mov
adc
mov
movl
movl
movl
movl
movl
movl
movl
xor
inc
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
movl
mov
movl
movl
mov
or
add
mov
or
mov
sub
mov
sub
imul
add
mov
push
mov
lea
mov
xor
div
mov
lea
push
mov
mov
push
push
push
push
call
mov
mov
push
push
or
or
push
push
call
mov
mov
xor
mov
mov
mov
and
add
lea
xor
push
lea
call
mov
mov
mov
sub
xor
imul
jmp
fiadds
rcrl
dec
fisubl
out
mov
mov
mov
out
filds
inc
cmpb
adcl
jle
or
std
int
aad
jge
int
test
pop
int
les
clc
lret
mov
mov
jmp
jg
mov
adcl
dec
es
xchg
es
ficoml
add
js
mov
in
push
xchg
lock
int3
push
adc
xchg
xchg
imull
sbb
mov
inc
out
or
pop
add
fdivr
mov
popa
inc
pusha
subb
idiv
pop
push
push
and
cmc
mov
mov
mov
jle
roll
jns
inc
shrb
push
je
xor
inc
fisttps
adc
xor
icebp
dec
lock
dec
rorl
inc
test
insl
test
or
pop
std
into
push
adc
ds
xchg
and
das
xor
mov
push
mov
repz
iret
ret
push
jae
sbb
pop
and
mov
and
lds
pop
mov
sbb
sub
cwtl
push
jl
jne
shr
pop
jg
mov
ficoml
dec
lock
sub
lahf
leave
sub
xor
jnp
leave
pop
pop
jo
adc
push
sub
lahf
add
push
enter
pop
mov
cmp
dec
out
xchg
sub
sti
insb
insb
rep
adc
scas
cmp
jmp
xchg
sub
mov
insb
fs
in
mov
sub
dec
inc
es
out
inc
lds
inc
mov
pop
xor
mov
push
ja
dec
mov
mov
aam
add
adcl
arpl
in
add
sub
mov
mov
mov
insl
inc
push
aam
pushf
adcl
pop
dec
aas
pop
insl
add
xchg
and
pop
mov
insl
testb
iret
inc
nop
push
pop
mov
cmpsb
cld
and
mov
mov
xchg
fistpl
jbe
xchg
push
sbb
push
mov
sarb
repnz
jmp
xor
adc
cmp
call
xlat
dec
frstor
or
stos
shl
hlt
jnp
ljmp
jp
xchg
fwait
jg
or
cwtl
ret
cld
lods
and
aaa
inc
jp
pop
pop
add
ret
or
fs
rcr
or
nop
xchg
pop
jp
xor
imul
cmc
sbb
test
popf
ja
dec
shr
and
inc
gs
xor
xor
mov
div
cmp
jmp
ss
jnp
pop
xor
inc
aaa
push
cwtl
sbb
mov
mov
mov
lahf
out
jecxz
cmc
cwtl
pop
jns
fnstcw
cmpsl
add
jl
pop
lahf
lcall
add
dec
and
add
pop
pusha
xor
inc
mov
xchg
test
dec
lcall
add
je
cwtl
shll
add
sbb
push
fidivrs
fabs
fs
es
mov
dec
outsb
xchg
mov
sub
subl
xchg
inc
mov
fwait
addb
pop
add
pop
shrb
sub
shlb
mov
mov
push
jnp
xchg
dec
cmpb
imul
notl
iret
push
jl
orl
and
roll
int
push
add
imul
pop
dec
movsb
xchg
xchg
mov
imul
addl
mov
ret
mov
clc
clc
push
sbb
outsl
outsl
jecxz
mov
and
and
cmp
xor
out
jne
push
lahf
dec
lock
loopne
sbb
out
rcrl
and
hlt
scas
je
fadds
cmp
pop
and
pop
dec
adc
imul
adc
cmp
adc
roll
and
xor
jns
cmp
cmpsl
in
aam
jge
push
dec
xchg
andb
and
repz
xchg
and
and
and
es
sub
add
data16
sub
mov
imul
fisubs
mov
lcall
lret
lods
shr
mov
jbe
imul
mov
pop
lods
enter
stos
cmpsb
push
mov
add
inc
xchg
add
or
dec
add
rolb
sub
cmp
stos
adc
xchg
rcrb
jns
pushf
dec
jns
ds
jae
fisubrl
mov
and
aaa
imul
xchg
jl
pop
mov
inc
sub
cli
pop
clc
push
fcmovbe
mov
cli
add
leave
jo
pusha
or
out
bound
push
sbb
push
mov
add
lret
ss
push
dec
sbb
fwait
mov
jp
leave
stc
out
adc
test
xchg
in
inc
mov
add
push
sbb
int
or
and
andb
leave
adc
and
ljmp
jmp
jb
lret
jl
mov
ss
jne
mov
xor
mov
div
mov
mov
xor
sub
mov
xor
sub
or
lea
push
mov
push
pop
div
mov
xor
div
mov
mov
xor
xor
div
imul
sub
push
mov
add
push
mov
sub
mov
pushl
call
mov
mov
lea
mov
incl
mov
mov
xor
shld
shl
mov
mov
xor
xor
cmp
jne
cmp
jne
mov
mov
jmp
jmp
sbb
cmpsb
fs
mov
add
popa
jo
xchg
sbb
mov
shrb
inc
ret
repz
sbb
xchg
pop
xor
inc
fildll
sbb
or
lods
cmc
repz
fldl2e
mov
mov
lea
stc
icebp
push
xor
pop
and
sub
repnz
scas
adc
fisubrs
xor
mov
sahf
xlat
pop
out
repz
idivl
fnstenv
nop
cli
aad
movsb
clc
sbb
pop
xor
push
aas
inc
fidivrs
add
insl
sbb
jbe
mov
les
iret
jmp
lock
or
mov
sti
fcomip
repz
jbe
push
mov
pushf
dec
daa
cmpsb
loope
pop
push
mov
push
leave
sub
imul
pop
jns
cmp
cmpsb
stos
mov
cmp
or
movsb
dec
repnz
or
push
xchg
fnstsw
fs
inc
loopne
leave
lcall
and
lods
aam
cmpsl
clc
adc
sbbl
mov
rolb
js
adc
and
in
mov
and
add
push
add
push
aaa
insl
loope
cld
ud0
adc
loope
xchg
push
jmp
adc
test
and
push
push
inc
pushf
pop
mov
mov
fdivr
daa
push
mov
jbe
inc
popa
lahf
cld
out
loope
ljmp
add
gs
push
insb
cwtl
mov
data16
int3
lret
aaa
mov
push
fbld
int
mov
push
sub
cmp
push
les
pop
loope
xchg
push
rorb
xchg
xor
aaa
outsb
mov
push
shll
pop
cmp
mov
sbb
xorl
and
adc
cmp
pushf
subb
cmc
cmp
clc
and
rep
push
ljmp
sarl
clc
sbb
sbb
mov
sub
adc
hlt
lods
mov
lds
js
arpl
cmp
hlt
mov
ret
fistpl
scas
xchg
adc
cmp
lret
mov
fistps
jns
fildll
loop
icebp
or
loop
js
std
popa
mov
lretw
jns
xor
fimuls
cmp
cmp
mov
arpl
xor
xor
sbb
mov
aad
dec
arpl
mov
push
xor
pushl
popl
jno
sbb
xchg
lret
fdivp
loopne
rorl
and
ja
cmc
bound
aaa
lea
mov
mov
mov
mov
mov
sub
mov
mov
mov
sub
mov
movl
movl
mov
mov
mov
mov
pushl
pushl
pushl
pushl
pushl
push
push
pushl
mov
call
mov
mov
pushl
call
mov
push
add
push
push
call
mov
jmp
mov
mov
pop
pop
leave
ret
push
mov
sub
push
push
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
push
push
push
call
mov
mov
add
adc
and
push
and
or
push
jmp
pop
jp
movsb
mov
fsubl
mov
cmp
sbb
mov
idivb
mull
aad
push
push
out
cli
or
mov
dec
jae
cmp
dec
xchg
outsb
or
xor
pop
aas
mov
ret
lock
mov
add
ja
dec
iret
sbb
or
inc
mov
das
inc
cmc
cwtl
add
lret
push
cmpb
xor
sub
jmp
rolb
and
lea
into
fcomps
mov
cs
jmp
jmp
nop
bound
imul
lret
inc
out
and
outsb
xor
pop
int3
mov
rcll
dec
fstp
out
cmp
cli
cmc
sub
imul
repz
js
lret
fimuls
jae
sbb
pop
jge
dec
cltd
movsl
mov
out
pusha
xchg
add
cmp
mov
adc
push
or
mov
adc
hlt
stos
test
lods
pop
das
sarl
stos
jne
icebp
jle
sbb
push
dec
loope
xchg
sbb
testb
push
scas
ret
lods
insl
das
xlat
adcl
sarl
and
cmp
mov
and
mov
aad
test
loopne
add
int3
into
data16
into
jge
sub
fsts
mov
hlt
stos
sub
fmull
push
jb
subl
arpl
es
je
jl
cmc
iret
or
sub
popa
xor
mov
sub
pushf
aad
push
daa
add
fnclex
inc
pop
mov
arpl
std
mov
jg
push
in
out
outsl
inc
sti
mov
hlt
pop
addr16
aad
mov
jecxz
cli
pop
sbb
xlat
pusha
jb
and
and
inc
add
es
jbe
or
jns
and
pop
push
cmp
lcallw
push
in
rcr
loop
in
jge
loop
test
addr16
rcll
dec
enter
ret
rorb
xchg
push
in
enter
add
cli
imul
cmp
in
ds
rcll
nop
cmp
dec
jg
imul
pop
dec
mov
out
dec
fistpl
and
int3
adc
bound
pop
cmp
and
or
push
and
mov
sub
and
cmp
shlb
jno
je
mov
adc
in
aam
addb
sbb
and
inc
das
mov
inc
mov
push
insl
xchg
lock
addr16
xchg
fiaddl
gs
adc
popa
add
les
add
add
push
push
call
mov
movl
movl
movl
movl
xor
movl
push
inc
mov
mov
mov
push
push
push
call
mov
mov
or
or
push
add
push
adc
push
push
call
mov
lea
xor
mov
div
mov
sub
mov
movl
jmp
jno
xchg
mull
mov
ljmp
sbb
mov
ret
pop
jle
mov
shll
mov
sub
in
push
pushw
xchg
mov
sub
sbb
xchg
xchg
add
ret
sub
adc
or
mov
int3
push
sub
sbb
push
dec
pop
int3
outsb
xchg
or
mov
cmp
pop
inc
xchg
in
mov
mov
jmp
mov
pop
adc
int3
xor
fsubp
aaa
mov
lods
xlat
clc
push
pop
loop
fs
mov
mov
or
test
and
cld
sub
mov
mov
push
mov
popf
ja
pop
outsl
cmp
mov
xor
or
jmp
mul
lret
mov
mov
std
in
aas
or
mov
pop
aam
test
adc
in
cwtl
cmp
std
pushf
cmp
jl
and
mov
dec
ja
dec
cmp
arpl
sbb
rcll
pop
cld
lock
and
adc
movsl
pop
int
fsubr
pop
inc
and
lcall
adc
test
pop
inc
and
dec
pop
pop
push
mov
and
jo
lcall
mov
loope
js
ss
xor
jmp
xchg
sub
pop
mov
and
imul
pop
inc
fbld
adc
mulb
adcb
inc
gs
outsb
aam
push
pop
xchg
mov
fsub
pop
dec
imul
outsb
mov
in
enter
rol
adc
xor
and
bound
mov
jmp
insl
cmpsb
and
enter
test
sub
mov
or
mov
pop
notl
inc
out
xchg
sub
dec
call
mov
cwtl
adc
insl
es
out
pop
push
fwait
or
push
or
aam
loopne
push
movsb
adc
lds
adc
xchg
jmp
clc
push
mov
xor
add
cmp
clc
sub
test
cmp
dec
xor
pop
pop
js
das
rorl
mov
jo
adc
add
or
loop
cmp
sti
xchg
filds
movsl
test
mov
lret
jb
adc
add
xor
sbb
les
push
push
push
xlat
sub
sub
pop
imul
dec
clc
aaa
scas
inc
aad
ret
inc
fdiv
ja
and
mov
mov
scas
push
pop
aas
add
mov
jge
movl
mov
mov
sub
jmp
test
mov
push
mov
sbb
lcall
daa
push
sbb
iret
add
push
xorb
jl
pop
pop
jb
jb
mov
pop
cmp
xchg
test
mov
out
sub
ljmp
adc
and
xlat
xor
sbb
movsl
pushf
or
add
lret
push
icebp
push
lods
push
sbb
imul
pop
mov
movl
pop
aam
lret
scas
cmpsl
push
adc
push
fstpt
iret
js
aad
std
jbe
fisubrs
xchg
push
cli
xor
pop
cmp
cmp
sti
faddl
popf
and
leave
pushf
mov
imul
stos
cmp
bound
mov
ret
add
and
xor
and
mov
push
out
fsubl
push
mov
lods
movsl
cmp
dec
dec
mov
stc
sti
jno
jno
sbb
inc
out
jb
push
idivb
and
fbstp
icebp
xchg
mov
or
sub
add
cmpsl
imul
sub
push
jbe
xor
mov
in
push
into
dec
push
xchg
fwait
shr
mov
push
cmpsb
cmp
js
movsb
leave
or
mov
mov
inc
mulb
out
sbb
cli
movsb
mov
push
nop
xchg
shr
iret
dec
pop
icebp
ffree
arpl
bound
sbb
ljmp
jns
dec
xor
cli
cmp
push
int
mov
xchg
je
jle
pop
cmpsb
xchg
inc
add
cmc
sub
sub
jle
ljmp
xchg
ret
mov
mov
test
jbe
scas
jecxz
mov
jae
hlt
scas
pusha
inc
mov
push
aas
or
xor
inc
outsl
loop,pn
in
xlat
lock
jnp
xchg
rolb
mov
sub
out
cmpsl
je
xchg
or
push
call
out
mov
and
and
loope
push
rcrb
lea
or
xor
sti
add
pushf
ja
pop
or
push
lock
or
and
and
mov
xor
scas
push
lret
lds
fbld
xchg
xchg
mov
lods
lods
xchg
loope
cmp
inc
outsl
adcl
sbb
dec
scas
imul
xchg
into
xchg
dec
dec
sar
sbb
adc
xor
or
cmc
cmc
js
adc
adc
testb
pop
dec
ret
push
jle
sti
out
mov
out
pop
out
rorl
scas
xchg
loope
aas
mov
xor
div
mov
xor
or
or
mov
mov
movl
movl
movl
mov
add
mov
and
lea
mov
mov
mov
movl
movl
movl
mov
mov
sub
add
xor
add
mov
div
mov
xor
pop
pop
or
mov
movl
movl
movl
mov
mov
and
sub
or
mov
imul
mov
div
leave
ret
push
mov
sub
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
jmp
mov
jnp
push
jl
mov
mov
sbb
jno
sbb
data16
in
scas
adc
enter
and
push
lret
xchg
xlat
jae
das
lods
fwait
jmp
mov
sub
test
or
loop
and
lret
pop
ret
cmpsb
lds
int3
dec
xchg
and
loop
dec
mov
mov
xchg
xor
iret
sub
movsb
ds
test
mov
testb
xchg
jno
shll
incb
mov
outsl
jmp
int
add
imul
jbe
cmp
gs
mov
jge
jmp
enter
jg
repz
mov
inc
mov
xor
int
cmp
test
test
add
or
stc
ret
popa
cmp
push
imul
jmp
mov
push
xchg
lret
jp
or
inc
or
sub
and
nop
or
mov
cmp
push
imul
dec
cli
out
inc
in
fiadds
sub
in
and
stc
pavgb
mov
cltd
out
repz
xor
dec
adc
jp
es
xchg
ljmp
inc
sbb
jb
inc
inc
adc
jge
sahf
repnz
jecxz
mov
xor
and
jne
fcoms
or
jl
popf
ljmp
movsb
pushf
lock
out
add
cmp
cmpsb
loopne
push
daa
xchg
movsl
or
add
fstps
mov
shr
sbb
sub
lss
add
xchg
push
jae
jle
test
iret
push
mov
sarl
sub
or
xchg
push
dec
xor
mov
push
and
pop
lds
lds
jge
pop
pop
repz
mov
push
sbb
add
lds
and
aaa
mulb
xchg
inc
fmuls
cvtps2pd
fnstcw
stc
lds
sub
push
test
sub
add
sarb
div
pop
lcall
mov
cld
cmpb
mov
fiadds
pop
stos
sub
repnz
jnp
dec
push
xchg
test
jmp
add
test
dec
sbb
add
test
pushl
test
decl
test
push
adc
add
test
ljmp
data16
add
inc
clc
shrb
add
jle
add
jo
add
dec
sub
sub
js
mov
jno
sbb
xor
call
xlat
hlt
cmc
or
push
popf
shlb
push
xlat
pop
lahf
jl
push
add
push
or
adc
jl
sahf
inc
pop
icebp
xor
arpl
imul
lret
sahf
in
mov
or
aaa
lock
dec
movsb
mov
xchg
ret
cmpl
mov
ret
adc
imul
das
in
ljmp
xchg
and
add
scas
jle
xor
sub
add
mov
shrb
jl
cmp
fisubs
aad
xchg
out
push
sbb
shll
leave
mov
rcrb
sub
adc
inc
jns
cmc
nop
mov
jno
sbb
push
dec
in
mov
and
stos
push
push
sbb
fdivrl
and
cmp
js
jge
call
xchg
repnz
call
xor
jno
or
mov
pop
call
out
mov
adc
das
inc
je
in
pop
mov
imul
pop
jg
ja
stos
push
aaa
test
popa
mov
sbbl
scas
jne
mov
daa
dec
mov
pop
mov
dec
inc
das
daa
mov
inc
imul
push
scas
std
dec
push
sbb
mov
mov
shrl
lds
int
test
push
mov
call
shrb
icebp
mov
xor
lods
inc
mov
aaa
cmp
test
push
lods
mov
cmp
push
dec
mov
outsb
cmp
push
inc
rorl
mov
pushf
ss
inc
cli
rcl
adc
xchg
inc
and
out
movsb
out
adc
xchg
sahf
lcall
sbb
popa
call
sbb
mov
mov
clc
mov
adc
sbb
cmp
dec
fsubs
mov
stc
subl
inc
and
pop
shr
enter
int3
cmp
jno
xchg
push
scas
cmp
adc
or
mov
push
push
xchg
jp
xchg
iret
in
pop
test
ret
stos
das
push
mov
xor
data16
dec
pop
mov
pop
repnz
movl
mov
mov
push
push
push
call
mov
mov
xor
mov
mov
mov
xor
jmp
lds
fisubrs
sbb
pusha
mov
test
sbb
jno
sbb
xlat
mov
fdivrp
dec
mov
imul
sahf
aam
lods
mul
jecxz
out
jmp
dec
out
mov
mov
into
adc
pop
xchg
sbb
or
loopne
lahf
xor
push
inc
lret
stc
test
jb
mov
mov
add
xchg
mov
push
ljmp
popa
loopne
jmp
add
movsb
insl
and
jg
out
fdivrs
xlat
aas
fstpl
mov
je
mov
inc
lods
scas
cmc
insl
loop
stos
jg
and
inc
cmpsl
dec
js
stc
mov
mov
jle
lods
arpl
sbb
fxch
orb
outsl
jno
dec
fstsw
cld
sub
lret
es
mov
out
int
mov
test
mov
imul
inc
inc
andb
jl
push
cli
jg
mov
jns
xchg
mov
mov
mov
cmpsl
adc
nop
ret
or
mov
mov
into
shll
cmp
xchg
hlt
les
ret
addl
imul
in
mov
out
dec
cmc
sahf
arpl
stos
stos
lahf
fmuls
icebp
jnp
out
or
cmpsl
outsb
jmp
and
xor
sbb
popf
jle
mov
es
gs
scas
jnp
cld
inc
pop
xlat
lret
dec
push
jg
test
jl
aam
inc
and
and
repz
fwait
pop
in
popf
cmp
leave
stos
fidivl
fdivs
ret
add
repnz
lds
sbb
ret
scas
das
test
enter
ds
fdivrs
lahf
xor
mov
mov
xchg
in
add
negb
es
pushf
xchg
xor
xchg
pop
mov
xchg
sbb
fstps
shrb
jge
lcall
sub
sahf
mull
scas
pop
push
add
xchg
sbb
imul
std
stc
pop
adc
fcomi
movsl
out
inc
sub
jo
and
dec
pop
test
jnp
cmc
orl
and
mov
mov
and
jge
insb
xchg
cli
popf
imul
mov
int3
lods
imul
jae
cltd
adc
les
add
enter
inc
add
add
data16
or
add
cltd
adc
cmp
jne
cmp
je
mov
jmp
loope
lods
aam
mov
gs
imulb
sbb
sbb
rcll
lcall
popa
dec
xor
pop
sub
mov
addb
dec
arpl
add
idivb
push
inc
and
xchg
in
pusha
jo
jnp
xchg
outsb
outsb
dec
icebp
and
ljmp
lret
add
rcrb
xor
mov
xchg
call
lods
jl
mov
sub
mov
je
or
arpl
xor
pop
and
gs
jmp
jo
xchg
xchg
xor
cmpl
pop
sub
push
push
orb
int3
pushl
jge
xchg
mov
xchg
aad
xor
mov
andl
loopne
pop
mov
js
repnz
mov
pop
lock
fldenv
test
jp
and
jl
sbb
add
jo
sahf
les
call
xlat
or
loopne
cmp
mov
jnp
push
fsubr
lods
mov
sbb
mov
mov
jl
and
insb
mov
fimull
xor
jecxz
cmp
inc
adc
pushf
out
or
sbb
or
adc
inc
test
mov
cmp
pop
mov
mov
test
dec
push
pop
or
mov
jno
xchg
scas
lods
adc
or
sbbb
add
testl
dec
mov
sbb
lods
jmp
shr
sub
jge
or
sub
std
inc
push
test
sbb
std
adcl
jmp
adc
pop
mov
imul
jg
mov
rcrl
rcrb
xchg
jb
fdivrs
mov
js
cli
push
adc
xlat
ficomps
mov
xor
jb
mov
jl
sub
hlt
leave
adc
mov
lods
xchg
mov
pop
xor
neg
or
adc
jo
stc
or
call
clc
push
dec
stos
mov
xchg
data16
mov
mov
adcl
mov
xchg
jbe
inc
adc
mov
lret
movsl
std
inc
cwtl
mov
mov
mov
mov
mov
add
adc
or
mov
jmp
pop
and
xor
pop
sbb
addr16
jno
sbb
adc
pop
fistpll
jmp
les
in
lret
cmpsb
outsb
fldl
sbb
out
popf
mov
add
jp
add
test
and
cmc
xor
sbb
sbb
sbb
mov
and
xchg
mov
test
xchg
int
mov
adc
cs
aad
daa
and
xchg
in
int
mov
lods
sbb
aaa
pop
ret
or
jge
cmpsb
push
xchg
jg
addr16
mov
xchg
out
and
xchg
xchg
test
mov
ss
iret
int3
test
test
mov
xchg
adc
mov
xchg
fldt
mov
mov
xchg
data16
push
push
sub
mov
sbb
lds
jae
mov
ja
sbb
inc
cmpsl
add
idivl
cmp
mov
insb
mov
add
or
sub
enter
outsl
mov
popa
sub
loopne
lods
lods
pop
out
xor
dec
fstl
xor
fisttps
mov
loop
lahf
decl
jle
lret
sub
out
les
inc
pushf
sbb
stos
jp
mov
or
dec
cmp
cli
add
mov
xor
mov
sbb
and
icebp
xchg
dec
jl
cmc
push
push
or
jmp
sbb
xchg
das
pop
and
rcrb
jnp
jmp
leave
adcl
mov
cmp
add
stos
hlt
lahf
inc
loop
mov
movsb
push
lock
test
lret
adc
pop
xor
mov
add
fisttps
rcll
in
sahf
xor
imul
scas
add
mov
jnp
xor
sahf
sub
xlat
sti
pusha
inc
cmp
dec
and
lret
mov
mov
jl
nop
mov
and
inc
jecxz
fdivrs
cmpsb
or
clc
sub
fdivr
mov
mov
cltd
add
mov
xchg
sar
fsubs
repz
cmpl
sbb
pop
pop
pop
scas
or
nop
sub
lahf
inc
adc
sbb
sub
into
mov
push
push
push
push
call
mov
mov
and
mov
mov
mov
and
xor
xor
xor
cmp
jne
cmp
jne
mov
mov
add
or
mov
or
xor
lea
xor
mov
and
add
mov
xor
xor
div
mov
mov
xor
imul
mov
push
jmp
mov
push
jle
inc
inc
jne
sbb
data16
jno
sbb
outsl
repz
test
add
ja
jns
imulb
xchg
cs
sub
and
stos
imul
rcll
and
popa
pop
cmpl
gs
das
mov
push
outsb
jns
push
sub
xorl
addr16
ja
lods
jnp
ja
jns
mov
stos
lret
inc
or
inc
push
sbbb
jmp
out
rcrl
or
dec
push
movsb
jns
dec
push
push
cltd
andl
mov
sbb
pop
aad
pop
pop
dec
call
fiadds
adc
jns
jge
jge
mov
jne
cld
lahf
lods
xor
xor
add
sub
ds
and
lahf
push
jb
mov
movd
fs
scas
lods
sahf
jne
push
es
test
or
xor
jle
xor
mov
aas
mov
movsl
add
int
push
adc
imul
and
cmpsl
adc
movsb
stc
xor
lea
mov
out
aam
jne
out
inc
pop
lret
xor
dec
inc
adc
pop
cld
adc
in
pop
mov
mov
xchg
ffreep
out
stos
dec
das
mov
sub
add
bound
arpl
insb
sti
fs
dec
sbb
xchg
addl
and
gs
outsl
popf
enter
adc
rcll
push
xchg
decb
pushf
jae
inc
mov
pushf
cs
mov
fadd
daa
notb
call
loope
mov
adc
shrb
inc
sub
pop
cmp
loop
inc
cwtl
cmp
push
fisttps
popf
inc
imul
loop
mov
lret
icebp
loope
mov
push
jecxz
pop
sbb
xchg
cs
out
push
inc
lods
jmp
xor
xor
inc
jmp
fidivrl
fisubl
xchg
ljmp
and
sbb
jge
or
inc
adc
das
aam
enter
xchg
aaa
sub
sub
sbb
int
push
scas
pusha
pushf
sub
push
jae
xor
lds
jnp
in
test
add
mov
lea
mov
mov
lea
mov
mov
or
xor
div
mov
add
xor
add
mov
add
mov
mov
mov
mov
sub
mov
sbb
mov
xor
mov
xor
mov
jmp
mov
xchg
cli
push
fistpl
jge,pn
stos
cmpb
mov
jno
sbb
sbb
outsl
clc
pop
dec
ljmp
popf
cltd
jne
xor
jg
mov
int3
mov
jae
hlt
xor
mov
add
addr16
fadds
dec
sub
or
jg
das
push
adc
fnstsw
fwait
or
or
push
xchg
jbe
fisubs
pop
ret
pop
mov
mov
sbb
mov
out
or
adc
outsl
lods
in
push
or
sbb
dec
xchg
and
push
aas
jecxz
pop
rorb
add
pop
std
sbb
jge
aad
nop
stos
daa
test
movl
add
jmp
fimull
aad
adc
sti
pop
and
pop
or
xor
test
cmp
adc
mov
lret
imul
add
sbb
fistps
push
cmp
sbb
add
mov
clc
xchg
ljmp
mov
pop
cltd
sti
sti
or
lcall
lea
arpl
adc
ja
mov
adc
xor
jg
xchg
mov
cmpsb
out
jp
imul
xchg
jmp
mov
jecxz
ret
filds
xchg
nop
fdivrp
xchg
inc
icebp
leave
mov
jno
or
xor
inc
mov
stos
movsl
fwait
mov
aam
dec
lds
mov
inc
jb
xchg
or
jmp
repnz
push
std
or
sti
test
mov
cli
xlat
mov
fxam
or
mov
xor
adc
jae
mov
push
sahf
cmp
pop
or
mov
insb
cli
insb
mov
cmpsl
add
add
cltd
mov
cld
sbb
stos
xor
enter
flds
ljmp
push
aad
jne
sbbb
cs
xor
or
repnz
imull
movsb
lds
imul
push
push
dec
lds
adc
rorb
push
cmpsl
mov
or
fcomi
mov
arpl
xchg
cmp
cmp
sub
aad
xor
and
push
outsl
fldt
call
je
inc
repnz
add
add
adc
add
adc
push
push
call
mov
sub
push
pop
jmp
jae
mov
sbb
jo
xor
mov
jno
sbb
shlb
mov
stc
sub
pop
sub
xchg
mov
or
rolb
mov
cmpb
sub
sti
cmp
sbb
popa
xchg
sbb
add
testb
pop
jmp
mov
or
xor
inc
pop
push
mov
idivb
dec
insb
jle
ja
push
dec
lds
lods
dec
sbb
sar
and
lods
nop
add
testb
test
lret
mov
or
movsb
pop
fucom
pop
mov
sbb
ss
stos
mov
sub
mov
lds
mov
pop
loop
dec
sbb
mov
adc
addr16
cmpsb
rep
sub
push
stc
cmp
xor
add
adc
jb
xchg
xchg
leave
mov
jl
add
jecxz
sub
jb
in
cmp
or
outsb
arpl
test
imul
inc
cmp
daa
imul
enter
outsb
pop
bts
push
jg
adc
mov
rolb
mov
loope
mov
pop
loop
push
and
int3
lahf
inc
sti
subl
sub
out
xchg
mov
pop
lea
out
test
add
push
pop
stos
into
pop
mov
sti
fldenv
les
inc
das
xchg
xorl
lcall
cmpl
andb
mov
mov
sub
test
xchg
ds
or
and
sbb
jp
adcb
pop
clc
std
sub
mov
insl
rolb
jmp
loop
push
in
shrb
mov
xchg
jbe
mov
cs
movsb
adc
mov
shll
out
fcoml
ret
jl
mov
call
movsb
pop
jns
mov
js
out
sahf
mov
outsl
mov
mov
jg
cwtl
mov
ror
xchg
cld
clc
sbb
in
push
inc
dec
adc
cmpsl
daa
push
inc
push
popa
or
xor
stc
pop
sub
or
lea
stc
push
mov
inc
xchg
aam
cmp
inc
sbb
mov
xor
cmp
jne
cmp
jne
mov
mov
add
shr
or
mov
xor
xor
add
mov
pop
leave
ret
push
mov
sub
push
push
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
mov
mov
jmp
icebp
not
xchg
into
xor
jbe
cmc
gs
scas
pop
sbb
stos
adc
sbb
xchg
les
and
sub
dec
jae
stc
pop
add
leave
adc
and
cmp
loop
xorl
sub
jns
push
std
das
push
fisubrs
mov
and
aam
push
sbb
in
in
mov
inc
xorl
popf
pop
or
xor
hlt
cmp
sbb
mov
adc
xor
sbb
scas
mov
out
push
or
push
xor
pusha
insb
jg
dec
sub
push
or
and
mov
frstor
pop
ret
adc
jp
insl
lea
sti
jbe
and
out
std
ret
mov
pop
push
call
imul
or
mov
dec
repnz
pop
sub
xchg
jg
mov
dec
scas
bound
cmp
test
mov
xor
ret
pop
mov
movb
pop
cmp
into
out
test
cmp
icebp
xchg
stos
lock
jmp
inc
cwtl
call
add
fcoml
xchg
insb
cmc
leave
pop
sub
daa
or
sahf
insb
push
sbb
xor
jbe
inc
ret
stos
imull
xor
pop
shlb
dec
jg
lea
aam
mov
sub
aas
jecxz
and
push
mov
fdivs
mov
in
scas
negl
mov
cwtl
xchg
add
inc
gs
cli
pop
and
jp
call
mov
xchg
push
jle
in
inc
fistpll
clc
mov
imul
and
push
in
dec
imulb
data16
shl
jae
mov
sub
push
arpl
into
dec
sub
xor
scas
ret
incl
mov
mov
mov
xor
xor
adcl
pop
dec
mov
ljmp
enter
pop
jle
push
popa
out
adc
add
in
mov
mov
jnp
divl
cmp
leave
lock
int3
push
inc
movl
fs
repnz
mov
or
dec
jne
aam
insl
dec
push
divb
pop
cld
mov
xor
or
int3
out
orl
mov
les
movsl
idivb
or
ret
loop
jecxz
push
cmpsl
sub
loope
std
xorl
jbe
mov
cmp
sbb
enter
in
stos
cwtl
lret
xchg
aaa
fwait
cwtl
repz
inc
inc
xor
mov
pop
push
in
mov
mov
xorl
push
jae
cli
mov
xchg
popf
and
andb
dec
scas
clc
cmp
mov
fdivrp
call
jle
add
fs
mov
adc
jle
xchg
outsb
cmp
push
loope
int
or
pop
cs
rcl
jne
xchg
cli
cmp
or
imull
inc
sbb
or
enter
inc
cmp
sbb
mov
mov
pusha
sbb
cmp
jnp
jne
dec
jmp
pop
lods
xchg
je
sub
push
mov
xchg
push
mov
movsl
jbe
mov
lods
popf
fmull
pop
shl
push
mov
xor
xchg
mov
mov
mov
mov
add
mov
adc
mov
push
push
or
or
jmp
cmp
sahf
cmp
mov
inc
push
sbb
stos
adc
sbb
iret
fisubs
popf
inc
fcomps
pop
push
adc
repz
negl
pop
loopne
in
sbb
cmc
dec
mov
out
mov
andb
sbb
test
sti
inc
mov
in
scas
cli
shlb
jmp
dec
mov
or
jmp
sub
and
xor
inc
mov
outsl
pusha
loope
or
xor
stos
pop
rorl
lods
dec
mov
dec
and
sbbb
daa
loopne
stos
push
push
in
mov
pop
or
pop
lea
loopne
adc
cli
push
pop
filds
mov
clc
dec
xchg
mov
push
or
sti
std
adc
cmc
pop
cmp
arpl
loopne
jo
enter
js
je
jb
dec
mov
pop
test
sub
cmpsl
and
stos
fs
cmpsl
and
dec
pop
insl
xchg
inc
cmpsb
mov
ds
shll
ljmp
mov
xor
stos
pusha
and
add
xchg
mov
pushf
inc
in
maxps
sub
xorl
nop
push
repz
jb
mov
jnp
test
mov
lods
and
pushf
sbb
mov
pushf
jae
in
lods
stos
or
pop
sbb
mov
xchg
or
insb
mov
popfw
mov
jp
ljmp
movsl
movsb
mov
adc
mov
push
outsb
enter
roll
cld
jl
leave
fldenv
mov
pop
out
scas
mov
ja
mov
and
shll
outsl
shll
xor
dec
dec
enter
insl
mov
push
adc
test
or
lahf
addr16
jp
cmc
dec
jge
mov
and
insl
xchg
inc
cmp
lret
ja
pop
test
sub
sub
ss
or
nop
xor
dec
jb
mov
cmc
fs
add
mov
push
insl
xor
loopne
mov
nop
sub
mov
rcrl
dec
dec
xor
cltd
lods
scas
mov
enter
add
in
mov
test
or
cli
fwait
xor
into
push
sbb
or
push
mov
jl
jge
icebp
aaa
sub
cmpsl
incb
pop
das
loop
jecxz
bound
push
cmp
push
shlb
sub
xor
inc
repz
mov
sahf
loop
inc
mov
mov
push
cmpl
mov
jp
loopne
testb
out
pop
lock
or
mov
jecxz
mov
loope
push
outsb
mov
int3
and
cwtl
sbb
jb
dec
enter
fnstenv
aaa
mov
fistpl
cmp
mov
lret
data16
xchg
int
ficoml
or
iret
add
lcall
outsb
xchg
adc
test
xor
fs
stc
xorl
xor
int
add
jne
data16
inc
cmp
xor
mov
push
pop
pop
dec
xor
and
sbb
pop
int
dec
ret
scas
aaa
pop
sub
xchg
cmc
int3
push
or
scas
into
adc
hlt
or
stc
lret
xchg
pop
pop
test
and
sub
fimuls
and
ljmp
add
push
call
mov
mov
and
or
mov
mov
and
or
xor
xor
shld
shl
shr
xor
or
or
xor
mov
mov
xor
mov
mov
mov
mov
mov
push
push
push
push
call
add
jmp
push
push
jbe
jb
mov
push
xchg
mov
sbb
mov
xor
dec
mov
jp
daa
inc
push
mov
enter
xor
pop
faddl
aaa
dec
or
in
mov
popf
ds
loop
aas
xlat
out
pop
jno
imul
leave
xlat
mov
mov
sbb
or
sets
imul
adc
fwait
fs
icebp
mov
in
pop
sub
dec
scas
mov
sbb
cli
pop
and
xor
inc
pushf
iret
pop
lea
xchg
daa
ficoms
mulb
aam
push
inc
lahf
ret
repz
add
fnstsw
push
push
mov
xor
icebp
in
adc
cmp
ficomps
mov
add
mov
mov
repz
inc
xchg
ffree
or
into
push
mov
loopne
and
mov
xchg
mov
jmp
fldenv
sub
ret
mov
pop
lret
dec
mov
ja
jmp
lock
mov
xor
xchg
xor
adc
sub
scas
ja
sub
out
or
nop
ljmp
outsl
mov
iret
cmpsb
xor
loope
xor
in
push
aam
xorl
push
inc
jno
xchg
cmpsl
add
mov
mov
dec
ficompl
in
jns
lds
dec
out
sti
loopne
cmp
das
jb
lods
xlat
cltd
mov
data16
adc
adc
data16
dec
lock
mov
dec
outsb
mov
and
repnz
scas
adc
xor
imul
inc
arpl
sbb
lret
or
pop
push
mov
xor
scas
pusha
pop
out
test
fcmovb
icebp
cmp
shlb
jbe
aad
inc
xchg
test
into
lods
xor
or
adcb
add
dec
orb
mov
cld
or
xor
adc
outsl
or
mov
or
insb
shll
inc
jae
jg
inc
mov
loopne
mov
sbb
popf
je
test
cmpsl
adc
mov
pop
flds
lea
inc
add
add
jnp
push
and
loop
test
call
not
lods
clc
sub
jno
mov
pusha
pop
jle
lock
mov
and
push
arpl
and
push
ja
sub
adc
sub
inc
loopne
jae
addr16
inc
push
sub
inc
js
push
adc
sbb
gs
jb
adc
aam
add
icebp
popa
fcom
xor
je
xchg
push
sub
dec
cwtl
mov
repz
cmpsb
jge
aad
cltd
add
adc
mov
in
push
sti
sbb
sbb
xor
sub
arpl
mov
mov
sub
repz
xorl
out
mov
mov
sub
fnstcw
ljmp
jb
pop
addr16
mov
popf
dec
movsb
cltd
or
sub
jl
pop
sahf
test
cltd
outsl
jne
ljmp
xlat
adc
inc
adc
inc
data16
jne
scas
jp,pt
lock
jl
sub
mov
fnstenv
adc
enter
xor
fadds
mov
or
in
icebp
cmp
jg
fs
lahf
sarl
out
sarl
cld
out
add
fwait
sub
shlb
add
push
push
push
push
call
mov
mov
jmp
or
sbb
jmp
pop
jo
inc
sbb
stos
adc
sbb
jmp
cs
mov
cmp
sbb
bound
push
lods
xor
pop
ds
lahf
in
out
out
idiv
jae
jnp
pusha
push
inc
xchg
sahf
xchg
push
in
dec
aam
sub
inc
mov
ret
and
mov
sbb
divb
dec
lahf
xor
dec
cwtl
push
fists
jmp
push
inc
mov
adc
push
clc
mov
dec
int3
fstpt
mov
in
push
outsb
jb
lret
xor
xor
jno
push
addl
mov
mov
out
lea
test
jl
mov
push
push
cltd
jmp
cmp
add
lret
repz
adc
xchg
and
push
sarb
cmp
dec
fbld
lcall
fstpt
mov
cli
sub
jle
xchg
add
mov
mov
scas
test
std
cmp
pop
aam
jmp
pop
dec
mov
std
mov
cli
or
scas
push
xor
sub
sub
xchg
ss
xor
mov
scas
imulb
mov
cltd
inc
adcl
je
fwait
aaa
or
jmp
sbb
lods
movsl
je
mov
mov
andl
and
test
jns
mov
push
in
xchg
scas
push
or
cmpsb
sub
iret
or
sub
add
notb
mov
aad
es
int
dec
int
movsb
fbstp
xor
mov
test
jmp
mov
ljmp
insb
adc
fwait
add
cmp
cmp
or
jo
jge
cmp
test
icebp
or
xor
je
cmpsb
sbb
mov
xor
inc
push
xchg
jecxz
int3
into
pusha
mov
lds
loop
xor
cld
sub
iret
imul
je
pop
mov
adc
shrb
jle
xor
leave
sub
sbb
pop
push
lea
jo
pop
mov
jmp
stos
and
mov
mov
cmp
sbb
hlt
cli
mov
test
cmp
mov
adc
sub
dec
adc
fnsave
or
lods
repz
test
jl
xchg
cmpsl
mov
pushl
bound
arpl
adc
xchg
add
cmp
pop
push
popf
and
mov
stc
push
mov
cld
add
xchg
test
int
push
aaa
adc
and
fmul
mov
dec
rcrb
stos
in
inc
out
loope
and
pop
outsb
and
xchg
jnp
outsb
dec
int3
mov
add
das
inc
jb
aaa
xchg
push
dec
fdivp
or
rcll
or
lret
mov
jmp
push
push
outsb
test
es
das
mov
andl
mov
fsts
mov
lods
rcrl
sbb
fistl
lock
shrl
xor
mov
aad
mov
clc
mov
add
dec
xor
mov
insl
and
fisttpll
call
shlb
int
shll
aaa
sub
iret
ljmp
dec
aad
sarl
xlat
push
jp
or
jne
inc
fmull
jo
fistl
rcll
sbb
fdivrl
into
divl
sbb
in
push
movsb
add
rcrb
mov
xor
xor
xor
add
mov
adc
mov
mov
mov
mov
mov
sub
mov
mov
sbb
mov
sub
mov
sbb
jmp
out
inc
jp
jp
sub
xchg
cmp
dec
iret
jo
cmp
sbb
push
repz
sti
cmp
jle
shl
add
arpl
mov
sahf
lock
into
pushf
xchg
jg
enter
mov
int3
mov
popa
test
insl
fnstenv
mov
insb
popa
icebp
jp
hlt
push
loop
outsl
fidivl
push
inc
jns
loop
mov
sbb
rcr
mov
push
mov
ret
daa
jl
mov
mov
lods
in
cmp
arpl
inc
scas
add
pop
repnz
add
fildll
or
or
inc
adc
insl
pushf
inc
push
mov
push
dec
mov
xchg
lods
cltd
fs
pop
flds
push
stc
lods
xor
or
lret
jle
lcall
push
nop
cli
fwait
ljmp
sbb
mov
mov
cmpsl
add
clc
dec
or
inc
dec
ss
inc
in
jbe
jl
dec
loopne
arpl
inc
mov
cmp
xchg
stos
cmp
ds
leave
mov
and
push
mov
stos
xchg
xor
pop
in
mov
fdivs
and
mov
or
xorl
jns
push
cld
push
fisubrl
out
cmp
jecxz
mov
stos
gs
repnz
les
mov
lcall
lea
inc
outsb
sub
inc
stos
push
insb
test
mov
mov
add
lods
mov
mov
sbb
out
into
xchg
pop
sub
je
push
mov
ss
es
dec
popa
mov
adc
in
ss
mov
add
fwait
xchg
xchg
pop
push
lcall
js
ret
sub
sbb
cmp
xor
aam
or
cmp
addr16
lods
add
fidivs
xor
fsubs
jo
lret
negl
inc
sbb
loope
aaa
in
std
pusha
shll
imulb
dec
ficoml
mov
test
fs
lcall
add
dec
push
cmc
loop
mov
sbb
jns
dec
and
stc
xchg
sahf
hlt
ss
mov
scas
lret
jecxz
loop
xchg
dec
xchg
fsubrl
push
jae
mov
lret
cltd
jb
sbb
data16
ficoms
lret
ljmp
scas
pop
addb
xlat
mov
cmp
inc
fldenv
or
jg
icebp
jl
mov
and
aam
mov
pop
pop
psrld
addr16
aam
bound
jecxz
cmp
in
xchg
jne
jo
mov
std
dec
push
and
gs
cmp
sbb
in
adc
mov
adc
ror
xor
lcall
adc
jne
ds
sbb
jo
pop
ds
ret
into
movsl
mov
dec
and
dec
push
outsl
or
jnp
in
cmp
scas
rcr
rolb
sbb
clc
lcall
push
push
jno
out
pop
dec
jo
cmpsb
xchg
pop
js
dec
inc
push
sahf
cmp
orb
adc
je
xchg
iret
rcrb
jno
sbb
popf
and
pop
adc
test
test
movl
inc
in
jb
jns
jg
push
jmp
fmul
mov
mov
stos
sbb
psrad
in
nop
movsb
jle
popf
push
pop
push
xchg
dec
cmp
cs
sbb
jl
scas
stc
jo
fisubrs
adc
repnz
imul
iret
xchg
cs
lret
xorb
lret
inc
loope
push
jo
repz
push
in
out
adc
ret
add
mov
adc
push
xor
mov
pop
sub
mov
sub
mov
mov
mov
add
xor
shrd
xor
shl
xor
shr
or
xor
or
mov
jmp
mov
fcompl
stos
lea
cld
mov
stos
adc
sbb
hlt
mov
cld
push
xchg
imul
jp
mov
pop
pop
lcall
div
push
sub
cs
and
xor
jnp
mov
call
inc
in
xchg
cmpb
int3
ds
and
inc
loopne
ret
add
into
imul
aas
pop
adc
repz
mov
aas
xor
popf
jnp
cli
jle
cmp
aam
cmp
icebp
testb
andnps
cmp
popa
push
push
ret
cmp
pop
and
xor
push
popf
mov
cld
leave
or
dec
leave
lret
into
je
push
cltd
icebp
scas
xchg
mov
fucomip
imul
xor
cmp
cmp
or
push
pop
mov
or
cli
fcoms
movsl
jae
xchg
adc
or
fmull
pop
cwtl
scas
sub
adc
insb
and
sti
sub
mov
jge
cmp
jae
mov
add
jno
xor
ja
mov
test
out
mov
jb
xchg
sbb
std
push
sub
pop
and
aaa
mov
pop
pop
and
and
or
push
cmp
loopne
insb
pop
insb
daa
dec
shlb
cwtl
xorl
mov
push
jnp
add
scas
xor
push
push
adc
inc
cs
jmp
insb
mov
std
ret
fcmovu
ds
orb
rolb
mov
push
mov
addr16
loopne
mov
pop
mov
xchg
mov
ret
test
jnp
test
dec
fstps
lcall
xor
jecxz
popf
cli
icebp
mov
dec
pop
push
push
icebp
dec
loope
dec
mov
cmpl
mov
cwtl
loop
pop
xchg
jg
mov
rcr
scas
or
or
or
pop
iret
jae
jmp
mov
push
mov
mov
push
cmp
jecxz
push
jg
cmpsb
setg
pop
jecxz
xor
arpl
and
popf
xor
decb
fimull
sub
cmovb
mov
ror
adc
mov
mov
cmpsl
pop
cli
shl
add
sub
push
cmp
test
je
loopne
fdivrs
fists
mov
dec
hlt
sbb
push
shl
and
pop
dec
mov
mov
call
sbb
lock
jecxz
out
sbb
test
mov
idivl
or
and
std
std
stc
mov
cmp
jb
xor
mov
push
mov
lods
fcmovne
aas
rorl
fimull
test
mov
mov
add
in
test
cmc
inc
addl
cmp
out
jae
ret
mov
aam
fs
inc
push
es
iret
hlt
and
mov
jp
movsl
ret
lret
xlat
int
sbb
or
out
adc
out
enter
xor
mov
fidivl
cmp
adc
rol
adc
xchg
mov
xlat
pop
shll
xchg
ja
mov
mov
fwait
subb
push
sub
test
xchg
push
sub
mov
scas
add
push
pop
mov
in
cmp
aaa
mov
jp
mov
dec
daa
nop
adc
adc
push
addr16
mov
mov
mov
push
push
push
call
mov
mov
mov
or
mov
or
mov
add
mov
adc
mov
add
mov
adc
add
pop
adc
pop
mov
mov
pop
leave
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
jmp
jnp
xlat
dec
sarl
jnp
add
lds
push
stos
sbb
sbb
adc
sbb
adcb
test
cwtl
sbb
lods
push
stc
fisubrl
out
iret
inc
test
sbb
in
rcr
pop
lret
jnp
rolb
test
add
pop
sub
in
pop
xor
dec
jl
pop
push
or
jno
mov
jnp
bound
js
jl
jp
sbb
insb
and
lea
out
lret
arpl
pop
jl
aaa
xchg
mov
xchg
pop
mov
aam
out
sti
sahf
imul
mov
cmp
or
or
loop
cmp
lcall
fstpl
scas
out
fmul
jne
idivl
jmp
dec
aas
cmp
cmp
adc
stos
adc
pop
mov
fs
fstps
cli
xchg
mov
out
enter
ds
dec
mov
xor
mov
add
lahf
xor
pop
fdiv
push
decl
push
pop
jno
xchg
aaa
shrl
push
mov
mov
pop
pcmpgtb
pop
and
mov
pop
mov
movsl
dec
sbb
xchg
shrb
arpl
add
sahf
cmc
rolb
dec
js
icebp
add
jmp
stos
call
data16
cli
fadds
jbe
shl
mov
xchg
ficoms
pop
mov
stos
sbb
xlat
stos
cmpsl
enter
mov
mov
out
push
sbb
sub
sub
outsl
cmp
jmp
push
scas
out
cmpsl
push
xchg
rorb
lock
mov
je
sub
cs
and
test
test
popa
js
mov
aad
lods
cmpb
in
mov
aad
test
push
outsl
inc
cmp
imul
xor
jbe
lock
inc
cmp
jno,pn
iret
push
and
aam
ret
shl
pop
mov
sbb
push
jb
lret
xchg
js
add
dec
shrl
mov
mov
xchg
jnp
into
scas
adc
sti
xor
subl
mov
cmp
xchg
and
imull
rorl
aas
xchg
movsb
or
xor
daa
pop
mov
cmc
jmp
jno
mov
xchg
sub
es
shrl
rcl
and
shrl
inc
xor
mov
mov
cli
outsb
mov
dec
pushf
insb
lret
mov
dec
mov
mov
vmread
lods
push
pusha
xchg
mov
adc
sbb
mov
cltd
mov
in
repz
movsb
and
mov
clc
jns
sbb
add
rclb
xor
ret
jae
jae
dec
loop
or
scas
daa
loope
push
sbb
repnz
adc
fists
scas
jg
hlt
lock
adc
sub
push
scas
int
dec
jp
test
js
dec
pop
fs
xor
xchg
ljmp
subb
divl
pop
aad
hlt
jnp
std
dec
push
or
aas
add
mov
mov
outsb
cmc
jns
sbb
mov
pop
push
xor
aad
inc
or
pop
ds
insl
fs
sbb
int
arpl
jb
stos
loop
icebp
inc
mov
pop
mov
ret
jmp
hlt
mov
mov
mov
xor
test
add
dec
insl
fsubr
xchg
jl
les
aam
and
inc
clc
add
add
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
and
add
mov
and
mov
sub
and
mov
mov
imul
add
add
xor
cmp
jne
jmp
push
mov
dec
sub
ljmp
mov
sbb
rclb
sbb
push
aas
loopne
or
sqrtps
sub
dec
stos
out
mov
adc
mov
or
out
insb
not
jne
sbb
inc
push
push
testb
int
rorl
lahf
mov
jae
aam
rcr
fstpt
push
in
hlt
adc
repnz
clc
hlt
or
add
xchg
dec
stos
mov
ficoml
fmull
popa
sub
pop
loopne
loope
sub
jb
pusha
das
sbb
push
mov
add
aaa
pop
pop
inc
mov
notl
imul
pop
push
cmp
push
sbb
adc
jle
mov
in
add
inc
pop
in
sub
scas
lods
lds
fildl
pop
ror
mov
inc
sbbl
loopne
ds
jo
add
nop
in
jg
shll
jge
mov
xchg
jg
mov
mov
shrl
push
and
jmp
push
repnz
dec
ret
mov
mov
jmp
push
insl
addr16
push
mov
jle
fsubs
addr16
lcall
mov
pop
lahf
loopne
mov
cmp
jae
popf
sbb
cltd
mov
inc
cwtl
xor
in
pop
jg
sarl
and
pop
push
call
or
jbe
popa
lea
push
enter
pop
mov
test
xor
add
adc
push
jmp
dec
enter
je
into
xchg
fnstcw
or
ror
jb
subl
push
icebp
fdivs
xchg
jb
cltd
iret
fcomi
mov
fwait
add
addl
adc
jg
int3
jae
ja
mov
mov
sub
movsl
loop
mov
sub
sub
lahf
ljmp
clc
shrb
dec
test
and
xchg
mov
enter
pusha
xchg
bndldx
sub
aam
push
jne,pt
test
fdivp
shl
and
pop
dec
shll
nop
sub
push
inc
and
push
or
sti
in
inc
jnp
pop
lcall
stos
ret
gs
push
inc
fmull
mov
nop
and
lret
add
sbb
jge
mov
lock
dec
cmp
push
gs
js
jg
xor
push
mov
cmp
test
cmp
lcall
fisubrl
push
mov
or
inc
je
or
adc
xchg
cmp
movsl
pop
mov
ret
js
movsb
pop
lahf
fwait
stos
pusha
lcall
in
roll
inc
jne
outsl
out
scas
orb
pop
in
adc
shl
push
sub
pop
xlat
aad
mov
loopne
sbb
push
mov
ret
adc
xchg
imul
mov
and
pop
addr16
bound
xor
iret
jle
cmp
or
fdivrs
hlt
out
mov
mov
push
dec
lcall
xchg
int
sarl
cmpsl
jp
sub
mov
mov
iret
push
push
xlat
cld
jb
dec
add
jecxz
mov
push
fidivrs
cmp
inc
je
lcall
filds
cmp
fwait
push
mov
mov
lcall
adc
shrb
sti
pop
orb
decl
push
clc
mov
or
mov
imul
sub
add
mov
or
mov
mov
add
imul
jmp
lret
mov
pop
inc
repnz
lds
mov
rclb
sbb
js
fs
adc
call
out
adc
cltd
out
mov
sub
adc
push
inc
stc
out
mov
arpl
push
pop
je
data16
in
adc
mov
in
sub
pop
mov
test
mov
jbe
repnz
cmpsb
popf
in
mov
jmp
popa
mov
xor
fidivs
xchg
jg
xor
adc
mov
sub
lea
sub
jo
popf
or
lahf
jp
push
jno
mov
in
fistps
cmpsl
aaa
push
insb
test
faddl
adc
add
cli
fsubrs
out
sub
xchg
add
pop
dec
jge
ret
inc
jg
mov
das
loopne
xchg
pop
cmp
sbb
cmp
rclb
fdivrp
mov
push
jo
test
add
gs
mov
cmp
dec
dec
cwtl
in
push
cmc
xor
loope
mov
outsb
insb
aaa
test
arpl
jp
icebp
into
std
fldl
bound
cmc
mov
movsl
fbld
pop
pop
cmp
xchg
pop
out
add
push
sub
lret
rolb
lods
push
inc
movsb
inc
mov
stos
dec
mov
adc
mov
daa
jl
popf
adc
cmp
fxch
sbb
fmuls
rolb
in
mov
mov
sbb
or
and
sbb
sbb
fnsave
bound
mov
fidivs
or
push
bnd
scas
fcompl
or
pop
popf
and
push
add
adc
adc
test
fs
test
inc
icebp
test
ja
movsb
mov
cmpsl
push
jne
cmp
mov
xchg
les
or
ret
lds
push
inc
fstpl
inc
jnp
dec
sbb
jp
xor
lods
mov
movsl
mov
enter
test
repnz
xchg
cmp
loopne
cld
aad
ret
jge
les
dec
sbb
and
dec
in
fdivs
fwait
xor
mov
xchg
mov
inc
inc
jmp
adc
xchg
cmp
adc
dec
push
arpl
es
cld
rcll
cmpsl
sub
jge
mov
out
daa
pop
fimull
negb
insl
or
and
xor
pop
fwait
cld
lods
outsb
push
or
cmp
adc
cmpl
jb
push
adc
mov
xlat
lods
cwtl
loop
addr16
lds
mov
mov
lods
cmp
pop
push
mov
add
mov
inc
ret
or
mov
dec
cwtl
mulb
ret
pop
add
fsubrp
mov
cmp
xchg
test
das
fbld
mov
mov
lcall
gs
movsb
sti
rolb
rolb
sub
out
jecxz
mov
jnp
fwait
jl
lahf
jns
pop
into
out
daa
jnp
or
scas
dec
mov
lods
push
mulb
in
into
jge
loopne
inc
sti
push
xchg
pop
pop
mov
and
lret
pop
mov
popf
jne
jg
fidivs
sub
mov
call
cmpsl
inc
insb
or
aad
repnz
call
movl
lds
aas
xchg
pop
sbb
or
mov
add
mov
mov
mov
and
mov
and
mov
imul
mov
or
mov
imul
mov
sub
cmp
je
mov
jmp
mov
sub
xor
add
jmp
movl
movl
mov
mov
imul
add
and
add
or
sub
leave
ret
push
mov
and
sub
push
push
lea
mov
mov
mov
jmp
sbb
cli
sbb
lret
mov
out
dec
push
push
push
sbb
mov
es
jbe
fbld
leave
mov
movsb
or
das
gs
cmp
fwait
sub
add
pop
mov
xor
xor
aad
xor
pop
mov
cwtl
movsb
scas
roll
iret
inc
xchg
adc
lcall
call
iret
push
and
loop
xchg
jo
jg
cmpsl
sub
add
icebp
inc
loop
adc
popa
and
cmpsb
cmp
push
xchg
sub
cs
dec
and
inc
push
ljmp
negb
mov
push
test
in
jbe
insb
jne
in
xor
adc
inc
pushf
mov
push
ffree
in
mov
mov
sub
push
cmp
mov
mov
je
xor
jo
in
mov
jnp
mov
test
bound
xor
daa
lods
lods
in
cmpsl
sarl
dec
adc
push
xchg
mov
negl
loop
sub
lcall
dec
push
cli
add
xor
mov
in
xchg
outsb
hlt
fistpl
out
mov
lock
aaa
je
push
fbstp
fwait
and
gs
lds
fndisi(8087
fnsave
testb
pop
or
test
mov
push
hlt
orb
test
and
or
xchg
cmp
insl
imul
aad
popf
insl
push
xor
mov
mov
push
in
pop
mov
xchg
loop
push
fcomps
jno
mov
mov
ret
cmpsb
pop
mov
mov
jbe
xor
fadds
mov
popf
nop
rorl
sarl
fsubs
mov
jnp
adc
xor
pop
mov
pop
cmp
outsb
xchg
imul
repnz
lahf
sub
cli
mov
pop
cmp
shll
ret
mov
and
ds
rcrb
sub
cmp
push
jecxz
dec
and
es
mov
popa
imul
loop
cmpsb
push
sbb
xlat
add
in
fisttps
mov
jnp
mov
jge
rolb
mov
mov
cmpb
loope
inc
ficoms
test
enter
jns
les
fndisi(8087
lods
dec
test
cmp
scas
repz
push
cmp
das
jg
xchg
inc
fdivrl
inc
xor
and
mov
fadds
sub
popa
pop
iret
fildl
cmp
push
add
and
pop
and
sbb
cmp
ljmp
adc
lret
shll
sbb
lea
add
or
fwait
xlat
clc
inc
mov
fcmovnb
scas
sbb
dec
mov
cmp
sub
push
andps
cltd
pop
and
test
imul
nop
jb
jecxz
sub
std
xchg
gs
imul
fisubs
dec
or
mov
jnp
sbb
nop
je
fsubl
int3
and
andl
mov
cmp
jl
cmpsb
dec
and
insl
ja
fimull
push
jmp
and
rorb
pushf
outsb
rcr
outsb
scas
cmp
mov
clc
jl
adc
sbb
stos
cmp
adcl
mov
push
adc
xchg
out
mov
idivb
lods
rol
out
xlat
jno
add
hlt
mov
out
xor
adcb
add
fs
add
adc
or
push
add
inc
and
orl
orl
lea
push
lea
push
call
mov
mov
pushl
mov
pushl
mov
pushl
pushl
pushl
pushl
pushl
call
pop
pop
mov
pop
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
add
xor
mov
and
imul
xor
push
movl
movl
movl
mov
mov
xor
sub
div
mov
mov
or
xor
mov
sub
mov
mov
mov
mov
mov
mov
jmp
mov
aas
sbb
sub
in
stos
mov
adc
sbb
dec
sub
repz
xchg
shll
xchg
in
popf
ret
loop
es
and
repz
inc
or
call
mov
adc
sbb
lret
lcall
dec
mov
cmc
aam
mov
mov
mov
int
in
cmp
ljmp
and
test
push
outsl
mov
push
inc
dec
ds
add
setae
pushw
dec
addr16
aad
jp
mov
movsl
call
push
mov
cmp
outsb
mov
pop
sbb
repnz
imul
daa
push
adc
push
dec
adc
aad
lods
jp
xor
int
sbb
repnz
shlw
mov
push
cmp
pop
fadds
sub
dec
push
pop
adc
or
enter
negb
shl
mov
cmpl
mov
or
pop
outsl
or
push
pop
mov
stos
pop
shll
mov
cmpsl
shrb
xor
sar
imul
leave
jnp
cld
mov
jl
and
stos
or
cmp
lret
add
add
leave
cs
das
mov
or
cmp
int3
mov
and
jmp
mov
icebp
jbe
clc
cmp
pusha
scas
mov
into
lret
xchg
test
xchg
xchg
pusha
pop
dec
cmpsl
std
mov
jecxz
mov
nop
adc
mov
xor
jb
adc
add
sbbb
fs
gs
mov
popf
cmpsb
pop
or
mov
or
lret
insb
daa
stc
lock
dec
push
es
xor
dec
aaa
ret
or
pop
jns
stos
adcl
scas
jmp
add
fsubrl
mov
aad
ret
jle
ja
cwtl
inc
and
adc
out
mov
loop
in
add
push
in
jns
lea
push
cmp
je
lea
sbb
mov
jecxz
dec
out
dec
sbb
jp
jns
inc
test
rol
outsb
movsb
push
jp
in
dec
adc
sbb
leave
fildll
outsb
mov
andb
jae
adc
mov
fsubp
mov
ja
mov
sbb
cltd
fistps
and
add
xchg
sbb
xlat
inc
stos
daa
pop
lods
out
mov
sub
outsl
adc
js
test
mov
lahf
int3
out
lods
aas
lods
ss
mov
sub
repz
andl
ret
adc
lahf
pop
dec
cltd
std
xchg
add
addr16
shlb
inc
aam
test
scas
jbe
insb
lahf
xor
sbb
and
xor
inc
mov
or
aad
movsl
inc
inc
mov
push
lock
push
inc
loopne
rcrl
mov
mov
les
ljmp
and
loopne
mov
xor
jo
jp
cli
imul
add
lock
imul
and
or
xor
add
mov
mov
sub
add
jmp
pop
pushf
lds
pop
pushf
push
cwtl
pop
jo
sub
sbb
cltd
jbe
mov
or
mov
mov
out
mov
adc
jl
mov
jbe
pop
repz
sbb
dec
mov
das
or
add
popa
mov
fs
push
cmp
dec
int3
in
fs
out
sarb
mov
add
lock
rolb
push
iret
push
fisubrs
cs
mov
mov
int3
shr
lret
scas
cltd
and
movsb
sbb
mov
sahf
pop
or
jae
addr16
into
jns
mov
pop
inc
push
inc
data16
je
mov
dec
test
out
cmp
insb
sub
pop
jmp
movsb
jno
xchg
jmp
jle
pushf
push
stos
iret
inc
movhps
fwait
ja
lds
loopne
inc
stc
jae
fucomp
stos
pop
jmp
xchg
pop
inc
push
adc
sbb
xchg
scas
ljmp
int
insb
jno,pn
and
mov
cmp
cmp
arpl
jne
pop
pop
push
les
push
jb
rcll
dec
mov
xchg
mov
loope
mov
jo
cmp
mov
xchg
daa
int3
xor
and
js
cmpsb
pop
aam
xchg
push
add
rcrl
add
test
scas
and
into
jo
lahf
and
adc
cld
shlb
into
test
dec
test
popa
std
cmp
lea
jns
in
cwtl
sbb
dec
push
mov
cwtl
pusha
mov
in
lcallw
into
jo
mov
loopne
add
or
seta
out
jne
dec
ja
push
scas
inc
pop
mov
popl
adc
add
jg
jmp
mov
jmp
insb
add
lret
fwait
bnd
mov
gs
xor
in
loop
inc
insl
lods
scas
push
sbb
frstor
pop
mov
js
sbb
call
cmp
xchg
push
push
mov
loope
sahf
xchg
and
inc
mov
pushl
jns
mov
mov
fdivl
sarb
scas
jge
test
mov
out
scas
pop
jmp
jge
shl
int3
int
xor
lock
movsl
sbb
ljmp
add
dec
pop
imul
sti
mov
fcmovbe
sub
and
ja
les
movaps
outsl
subb
jns
and
arpl
test
xchg
push
inc
out
fnsave
lret
movsb
dec
or
aad
and
mov
dec
mov
sub
jmp
xchg
clc
pop
xor
stc
xchg
insb
in
mov
insl
pop
les
aad
mov
cmp
push
nop
sbb
xchg
mov
mov
sub
cmc
lods
jg
dec
fscale
add
add
rolb
movsl
mov
jnp
dec
mov
and
jmp
popa
lcall
jno
sub
mov
shlb
fnsave
and
fadd
xchg
into
sahf
xor
mov
enter
pop
dec
or
xor
aaa
in
fwait
mov
mov
xor
mov
and
mov
xor
sub
mov
mov
and
lea
mov
shr
or
mov
sub
add
cmp
jbe
pop
leave
ret
push
mov
sub
xor
push
push
push
orl
mov
cmpl
mov
movl
jmp
mov
mov
cmpl
jae
pushl
pushl
pushl
pushl
push
push
pushl
call
mov
xor
or
sub
imul
movzwl
and
xorl
sbb
adc
mov
shrd
shr
mov
and
mov
mov
xor
xor
xor
xor
xor
or
sub
or
mov
xor
adc
or
mov
not
mov
sbb
shl
mov
shrd
adc
xor
shr
sbb
mov
mov
mov
sub
and
mov
cmpl
notl
movl
movl
jmp
movl
cmpl
jge
pushl
push
push
call
addl
inc
add
sbbl
mov
adc
xor
xor
add
or
cmpl
movl
movl
jmp
mov
mov
cmpl
jl
push
push
call
sub
sbb
and
mov
and
orl
mov
mov
sub
xor
mov
cmpl
mov
mov
jmp
mov
cmpl
jbe
push
push
push
push
push
pushl
push
push
call
mov
mov
sub
sub
add
or
add
or
and
mov
xor
mov
or
mov
and
mov
mov
cmpl
mov
mov
movl
jmp
movl
cmpl
ja
pushl
push
pushl
pushl
call
or
or
adc
and
sbb
add
sbb
mov
xorl
mov
sbbl
mov
mov
cmpl
movl
notl
mov
movl
jmp
mov
cmpl
jg
push
push
call
and
sub
xor
xor
sbb
or
sbbl
shl
xor
adc
shld
shl
mov
mov
orl
mov
mov
xorl
xor
subl
xor
movl
movl
movl
movl
mov
movl
cmp
movl
jne
movl
cmp
je
mov
adc
mov
xor
shld
andl
shl
xor
cmpl
not
mov
mov
jmp
movl
movl
cmpl
je
push
push
call
orl
or
subl
movl
mov
add
mov
or
mov
or
mov
xor
mov
mov
cmp
jne
cmp
movl
je
cmpl
movl
movzwl
not
jmp
mov
cmpl
jne
push
push
pushl
push
pushl
pushl
push
pushl
push
call
xor
sbb
subl
sub
add
dec
and
mov
and
mov
push
pop
andl
xor
movzbl
add
shl
cmpl
mov
mov
movl
mov
jmp
movl
movl
cmpl
jg
push
call
add
neg
movl
and
and
movzwl
adc
mov
andl
xor
subl
shr
or
cmpl
movl
mov
movzwl
jmp
not
mov
cmpl
jg
pushl
pushl
call
adc
orl
mov
sub
addl
dec
mov
mov
and
mov
mov
mov
xor
mov
orl
push
cmpl
movl
movl
jmp
movl
cmpl
jle
pushl
call
xorl
subl
sbbl
andl
xorl
pop
orl
sub
mov
add
mov
mov
mov
sbb
lea
mov
and
mov
mov
xor
xor
subl
shr
andl
shl
sbbl
or
orl
mov
movl
mov
mov
xor
xor
shr
shl
or
push
lea
push
lea
push
call
mov
mov
xor
xor
shr
shl
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
lea
push
shl
call
mov
mov
xor
xor
shr
shl
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
lea
push
shl
call
mov
mov
xor
xor
shl
shr
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
shl
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
lea
push
shl
call
mov
mov
xor
shl
jmp
sbb
lods
sbb
xor
and
push
add
sbb
fldcw
aad
sbb
ret
lock
pop
stc
xor
adc
jbe
push
xor
mov
pop
cmp
mov
mov
mov
or
fidivl
lock
js
aas
mov
or
jl
xor
pop
mov
ret
mov
clc
rcl
pop
jmp
or
rorl
sub
les
and
sbb
cmp
xor
loopne
sub
pop
les
test
dec
mov
test
mov
jmp
pushf
in
loopne
sub
cmp
nop
add
fwait
xlat
adc
jae
lret
movsl
adc
lods
ljmp
mov
out
jb
push
push
cmc
inc
outsb
js
testb
mov
in
inc
sbb
jmp
sub
nop
std
adc
dec
mov
or
ljmp
adc
scas
into
sub
std
lods
pop
mov
xor
xchg
stc
sub
enter
fcomi
aaa
iret
push
add
shll
mov
cmpsb
in
xor
pop
ss
mov
adc
adcb
xorb
fidivrs
mov
insb
sub
js
cltd
cmc
iret
std
andl
popa
cmp
pop
and
jo
aas
dec
or
std
cmp
jno
push
rcrb
xchg
adc
pop
das
pusha
sti
xor
aad
rcr
das
and
bnd
dec
mov
test
jmp
mov
sub
dec
cmpsb
test
cmpsb
imul
lahf
pop
shl
das
xchg
shrb
and
xor
inc
xchg
test
das
pmaxub
je
repnz
xchg
lock
sub
pop
not
pop
out
xor
pop
fmul
or
movsb
and
test
or
xchg
pop
mov
jno
xchg
push
push
repnz
fcmovu
or
cmpsb
dec
xor
lock
pop
movsl
loopne
inc
int
jns
jecxz
addb
sti
testb
lahf
in
fcmovbe
pushf
inc
pop
lods
jo
push
insb
popa
bound
mov
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
shl
mov
xor
or
mov
shrd
shr
mov
mov
xor
xor
or
shl
add
mov
mov
shrd
shr
xor
mov
mov
xor
or
add
lea
push
shl
call
mov
mov
xor
xor
shr
shl
or
mov
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
mov
mov
push
pushl
shl
call
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
mov
push
pushl
shl
call
mov
mov
mov
mov
mov
mov
rol
mov
xor
cmp
je
mov
mov
xor
test
je
mov
mov
movzbl
sub
mov
rorb
mov
mov
inc
cmp
jb
dec
jne
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
add
push
lea
push
shl
call
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
push
push
mov
shl
mov
shrd
shr
mov
mov
xor
xor
or
add
push
shl
call
push
jmp
out
mov
dec
xchg
fistps
mov
fwait
adc
sbb
call
lcall
fidivl
mov
lret
imul
mov
push
xchg
xlat
push
dec
sub
dec
int
or
inc
add
jae
mov
or
xor
je
shll
scas
ss
mov
fsubrl
and
mov
cmp
flds
or
xlat
imul
das
pop
scas
lea
lahf
sbb
or
jge
aam
pop
out
popf
cltd
xor
pushf
mov
ljmp
mov
cli
add
inc
rorl
adc
popf
add
sub
test
scas
cmp
push
mov
arpl
adc
add
or
cmc
jmp
mov
in
addr16
fildl
add
dec
jnp
fld
movsl
outsb
dec
je
jae
cwtl
arpl
popa
push
mov
enter
cli
dec
push
mov
mov
mov
stos
mov
pop
outsb
fdivrl
aas
scas
cwtl
clc
call
jne
sub
repz
pop
mov
pop
cli
testb
jmp
inc
mov
bnd
cli
out
cmp
add
ret
lahf
inc
sbb
pop
dec
ud1
int3
in
ljmp
xor
stos
ret
or
mov
cld
sub
pushf
shr
jmp
fimuls
pop
out
iret
or
js
mov
add
stos
sbb
stc
insb
js
push
dec
pushf
jb
and
or
jmp
cwtl
add
push
ja
push
enter
jae
xchg
rolb
pushf
mov
lock
add
sbb
mul
mov
push
scas
mov
push
fistpl
sub
es
push
adc
pop
inc
enter
mov
insb
cmp
int
aas
lea
gs
movsl
nop
into
bound
stos
mov
sub
mov
mov
mov
dec
add
xchg
inc
cmp
les
aad
sbb
popa
jg
mov
aam
adc
push
test
xlat
adc
inc
adc
enter
add
adc
jmp
mov
sbb
mov
stc
clc
push
sbb
inc
mov
mov
xor
hlt
xchg
pusha
inc
call
scas
call
in
mov
jecxz
inc
loop
lcall
jno
dec
xchg
mov
data16
ret
lods
sbb
and
sub
pop
aas
jg
mov
cs
xchg
or
lret
mov
sbb
dec
mov
add
repz
insb
inc
imul
xchg
xor
adc
push
pop
jp
lret
imul
sbb
or
roll
mov
out
or
out
dec
ret
aaa
fdivrl
pop
sbb
dec
xor
mov
and
push
adc
lods
rorb
addr16
mov
cmp
test
outsb
mov
jp
xchg
fnstenv
movsl
std
lahf
ret
loopne
adc
rcrb
ja
daa
out
rcrl
lcall
sbb
and
sbb
mov
jnp
or
mov
xchg
cmpsl
xor
out
or
sahf
int
rorl
cli
adc
xor
inc
scas
push
sahf
xor
out
push
divb
mov
sarl
and
add
inc
push
dec
pusha
sbb
inc
xchg
and
inc
sbb
lahf
cs
cli
mov
cmp
pop
cli
xchg
inc
pop
jle
ret
and
add
mov
jg
call
pusha
and
inc
xor
arpl
jns
dec
test
inc
fnstcw
dec
lea
outsb
xchg
mov
cs
push
pop
lock
test
pop
mov
mov
movsl
std
fdivs
and
pushf
sbb
push
mov
adc
adc
sub
jge
add
adcl
add
lods
int
ss
pop
scas
lds
fisttpl
adc
inc
cltd
and
push
xor
in
or
and
and
mov
add
mov
inc
fidivrl
test
jecxz
pop
xor
aaa
xor
nop
adc
daa
push
xchg
sub
fidivs
xor
or
add
push
shl
call
mov
mov
shrd
shr
mov
mov
pop
xor
xor
pop
shl
or
pop
leave
ret
or
mov
sub
mov
or
mov
mov
jne
mov
xorl
mul
ret
subl
push
sbbl
mul
addl
mov
xor
add
mov
adc
mov
mull
add
mov
mul
add
pop
ret
push
mov
sub
push
push
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
xor
div
mov
xor
mov
push
div
mov
xor
xor
sub
mov
lea
mov
mov
sub
xor
mov
xor
or
xor
mov
sub
jmp
dec
jbe
imulb
dec
sub
push
mov
test
mov
hlt
push
sbb
adc
sbb
jo
cwtl
push
sbb
adc
cmp
jle
cmp
jne
dec
int3
cld
push
icebp
fidivs
sub
bsr
mov
and
push
scas
lahf
movsl
pop
int
cmp
xchg
and
hlt
push
sbb
xchg
jns
imul
xor
sbb
arpl
mov
sub
iret
sbb
cs
arpl
sti
test
adc
mov
sub
nop
pop
insb
dec
ss
out
aad
cmp
cmp
mov
mov
out
xor
dec
inc
pop
and
adc
xchg
inc
pop
jp
lock
push
pushf
adc
fcmovu
fistps
push
jecxz
jge
fists
push
push
std
insl
out
sbb
sahf
adc
repnz
fldt
jae
repz
imul
mov
xor
lea
push
or
out
stos
std
sahf
xor
dec
sbb
test
jg
sbb
sbb
int3
fstps
mov
mov
mov
mov
adc
pusha
cmp
pop
sub
outsb
jbe
jbe
mov
enter
pushf
adc
sub
pop
jl
stc
pop
outsl
mov
xchg
jnp
lods
movb
pop
das
imul
scas
or
mov
cmpsl
test
dec
xor
push
dec
adc
iret
mov
imul
lock
sbb
repz
test
push
jge
adc
mov
lret
movsb
dec
push
xchg
mov
sub
xchg
ja
decl
mov
rol
xor
jmp
or
add
mov
xchg
jne
mov
mov
xchg
pop
adc
fstpt
pop
or
dec
outsb
bound
cmpsb
jecxz
lods
xchg
icebp
mov
cmp
in
in
lret
outsl
push
aaa
mov
pop
insl
mov
adc
in
mov
jecxz
movl
push
in
mov
addr16
ja
andl
adc
repz
xchg
jbe
cli
out
adc
sub
lcall
lahf
jmp
cmp
flds
cltd
mov
lret
popa
mull
push
adc
dec
cli
mov
orl
imul
test
mov
fists
inc
dec
out
ljmp
test
push
lods
adc
mov
pop
in
stos
notl
jl
aad
push
js
enter
pop
xchg
sbb
jne
mov
sub
inc
pop
mov
jle
cld
or
push
jne
pop
lds
cltd
popf
xor
imul
xor
pop
push
jg
mov
hlt
xor
sub
or
add
jns
aam
xchg
adc
mov
insb
push
jp
outsl
roll
mov
mov
inc
pop
sahf
out
pop
out
xorb
inc
lock
xor
mov
sub
div
mov
pop
xor
sub
cmp
ja
jmp
mov
movl
movl
movl
movl
mov
mov
mov
sub
imul
xor
xor
div
mov
mov
push
and
mov
sub
sub
mov
mov
mov
xor
mov
xor
and
add
add
mov
mov
add
mov
xor
mov
xor
mov
sub
mov
add
mov
sub
xor
mov
xor
or
xor
mov
sub
mov
mov
mov
xor
xor
sub
div
jmp
in
lret
repnz
pushf
pop
stos
movl
inc
out
push
sbb
adc
sbb
sbb
in
xchg
sub
test
movsl
inc
subps
dec
call
adc
mull
sbb
and
in
mov
outsb
jmp
mul
mov
mov
movsl
clc
lock
sub
lock
leave
dec
add
push
adc
orb
movsl
cmp
ret
pop
add
cmp
rclb
dec
jo
lret
stos
mov
stc
dec
js
jno
enter
or
test
loopne
cmp
lock
ret
xchg
dec
fucomi
sbb
mov
jecxz
and
cltd
add
mov
jbe
mov
and
mov
call
sub
dec
movsl
sub
mov
std
inc
std
je
pushf
pop
add
xlat
cmp
mov
pop
test
mov
out
test
mov
scas
xchg
dec
ret
fsts
mov
ds
out
mov
ret
xor
int
repz
lock
insl
push
mov
push
outsb
pop
sbb
and
mov
cmp
jbe
test
or
fidivrs
imul
push
daa
inc
pop
mov
jecxz
xlat
stos
fisttpll
mov
es
mov
push
or
pop
xchg
loop
push
test
nop
sbb
icebp
gs
jnp
adc
negl
in
sub
dec
inc
mov
jmp
cmp
insb
and
imul
mov
lea
fildl
daa
mov
xor
or
xor
pop
jmp
jbe
mov
pop
mov
or
das
mov
push
les
clc
sub
cmp
dec
das
xchg
push
xor
xchg
jbe
add
pop
jl
jo
in
shl
sahf
fcompl
jnp
and
sub
and
or
mov
movsl
sbb
cli
jns
inc
test
fsts
ss
stc
push
int
sti
int3
pop
fdivrp
jo
cmpsb
sbb
out
cmc
or
bound
lcall
push
inc
loop
cmp
or
sbb
ss
push
imul
ljmp
mov
dec
adc
test
add
add
jecxz
mov
js
adc
lret
inc
inc
mov
push
inc
scas
or
push
outsb
insb
les
in
mov
roll
xlat
sarb
mov
and
cmp
sbb
fdivrl
xchg
xchg
mov
push
dec
aas
xor
push
stc
loop
fwait
push
pop
hlt
push
mov
loop
cwtl
filds
jmp
shlb
push
pop
mov
test
leave
mov
jp
mov
gs
push
mov
jo
cmp
mov
dec
xchg
or
lods
dec
rcll
inc
fistpl
lahf
mov
adc
call
inc
ja
mov
test
stc
data16
jmp
loope
xor
sub
cmp
jbe
pop
pop
pop
leave
ret
push
mov
and
sub
push
push
push
pushl
lea
push
call
pushl
pushl
call
push
call
mov
subl
jmp
iret
and
inc
sbb
and
fnstcw
out
sbb
movsl
clc
mov
add
mov
jae
xchg
mov
mov
out
push
andb
mov
mov
cmpsl
ret
jp
and
fsubs
or
arpl
adc
inc
rorb
mov
cli
add
into
cmp
dec
push
xor
lods
gs
int3
nop
icebp
fcompl
in
insb
repnz
mov
xor
in
add
sub
inc
xchg
stos
sbb
test
scas
js
xor
loop
lahf
mov
xchg
pop
jns
cmpsl
add
in
jne
push
push
jb
loop
cmp
mov
aad
xor
loopne
adc
fisubl
mov
sub
pop
test
lahf
dec
mov
jg
ret
jns
cmp
mov
nop
out
or
jl
xchg
data16
cmp
je
test
sub
fcmovnbe
mov
xchg
dec
dec
jo
cltd
mov
sbb
sub
iret
pop
mov
fldl
cmp
push
xchg
into
mov
fdivs
jne
cmpsb
into
int
pusha
sub
xchg
cvttps2pi
jo
fldcw
mull
mov
pop
adc
xchg
mov
fnstcw
or
pop
or
cltd
fs
add
jbe
push
mov
imul
adcl
xor
xor
mov
aaa
sbb
stos
inc
in
lret
es
daa
or
pop
xchg
sahf
out
add
mov
lds
pop
addr16
mov
shrb
leave
pop
mov
cmc
and
dec
mov
mov
or
mov
mov
xchg
and
test
filds
pop
and
or
mov
inc
cmp
mov
push
fstpt
sbb
das
sub
lahf
add
aad
push
test
jnp
cmp
test
cltd
or
or
xchg
shrl
adc
pusha
les
adc
fsts
push
fs
icebp
cmp
add
inc
outsl
inc
fnstcw
cld
subl
test
cmp
das
jecxz
mov
loope
xor
shl
pop
dec
pusha
ret
adc
pop
lcall
or
scas
int
jmp
sarb
lods
mov
jmp
add
dec
mov
sub
aad
aas
push
sbb
lods
dec
fdivr
mov
ret
movsl
jl
cli
push
dec
push
pop
pop
scas
ljmp
arpl
repnz
in
xchg
mov
adc
lock
inc
mov
push
shrl
fs
dec
shl
mov
inc
fsubrs
sub
jne
mov
push
scas
or
pushf
rcll
mov
sub
cld
leave
mov
pushf
jp
sub
jae
mov
addr16
push
xchg
pop
mov
add
test
xor
fstp
adc
rcrb
insb
xchg
inc
jae
rcll
andb
cmp
xor
xor
lret
inc
lods
pop
loope
sbb
add
cld
lret
xor
adc
cld
sbb
or
lods
pushl
mov
fdiv
xor
roll
push
xor
adc
and
in
lea
jbe
cmp
cmpsb
addr16
adc
fxtract
es
mov
or
jnp
imul
addr16
add
movsb
sub
in
xor
andl
pushl
orl
call
adc
mov
add
movl
movl
addl
mov
mov
mov
and
mov
subl
xor
xorl
imul
and
sub
xorl
mov
xorl
movl
movl
adcl
movl
add
movl
xor
add
add
mov
mov
addl
sub
and
mov
and
mov
sbbl
xor
sub
imul
mov
mov
cmp
movl
jne
and
movl
movl
xor
movl
movl
add
pushl
cmpl
mov
mov
mov
jmp
movl
cmpl
je
pushl
pushl
push
pushl
call
not
sub
or
mov
mov
and
sbb
add
add
movl
xor
movl
movl
negl
jmp
xor
fwait
clc
dec
arpl
loope
sbb
pop
das
movsl
xor
push
xor
movsl
cmp
popa
repnz
pop
insl
icebp
dec
mov
pop
push
jecxz
jo
imul
movsl
mov
pop
lret
roll
clc
js
jno
sbb
pop
add
shrl
inc
hlt
xchg
push
dec
or
push
inc
fwait
in
ret
sbb
dec
mov
push
adc
mov
js
ja
shl
jns
sbb
outsl
xlat
pop
push
cld
or
sub
fisubl
xchg
dec
aaa
aad
xlat
test
shrl
pop
mov
faddl
aam
dec
mov
pop
daa
mov
xchg
outsb
fiaddl
in
mov
sbbl
stc
inc
int3
out
aam
or
or
fisttps
inc
lea
insl
sbb
xchg
ja
sbb
adc
push
add
mov
inc
sub
mov
dec
gs
push
pop
mov
jno
call
pop
lcall
f2xm1
jno
inc
or
cmc
dec
lods
lods
std
and
dec
mov
sub
pop
loopne
fcmovnbe
into
in
mov
mov
sub
data16
jmp
push
iret
les
cltd
xor
jno
cmpsl
mov
andb
je
jl
dec
lret
bt
jnp
testl
stos
gs
xchg
mov
lret
or
rcll
mov
mov
jge
push
push
iret
out
xchg
inc
rclb
mov
inc
mov
jnp
inc
cmp
adc
push
add
add
xor
out
arpl
pop
cmpsb
adc
pop
bnd
pop
addr16
jae
rclb
or
test
xchg
sub
mov
adc
xchg
js
scas
mov
sarb
or
pop
push
loopne
or
arpl
sbb
fdivr
mov
sub
shll
pop
sbb
lret
adc
stc
and
sbb
incb
mov
xor
negb
pop
jo
inc
enter
add
mov
ja
jl
jns
sti
push
push
lods
push
mov
adc
mov
dec
mov
mov
sbb
mov
sbb
mov
or
daa
push
jbe
push
and
jb
movsb
pusha
xor
mov
sbb
repnz
dec
fucomi
mov
add
push
jne
cmp
out
scas
mov
push
jle
adc
test
nop
mov
inc
sahf
add
and
mov
roll
or
add
cmpsl
jecxz
cmpsl
xchg
daa
inc
cmc
rcrl
jbe
mov
into
in
aaa
cmp
mov
outsl
push
xchg
aaa
mov
cmp
jle
and
jg
pop
lea
sub
inc
mov
jmp
mov
xchg
sbb
stos
aam
push
jmp
pop
dec
ficomps
sub
push
data16
sbb
dec
loop
pop
insb
adc
ficompl
test
dec
push
out
ret
and
add
push
xchg
stc
dec
mov
scas
mov
dec
cmp
xlat
shrb
les
shr
xor
into
bound
cmp
movsb
negl
push
and
mov
into
rcrb
mov
jle
xorb
lods
pop
orb
imul
mov
fdiv
add
loop
decb
sti
cmp
mov
cmp
xchg
mov
es
mov
adc
lret
jp
inc
dec
lret
fiadds
cmp
arpl
add
add
sub
add
inc
and
imul
and
sbb
add
movl
mov
mov
subl
imul
or
xor
cmpl
mov
mov
mov
jmp
movl
movl
cmpl
jge
pushl
pushl
call
subl
xor
mov
and
xor
mov
or
mov
or
jmp
jp
lock
dec
pop
push
dec
lret
repnz
xor
mov
mov
jne
testb
add
jp
jg
idivb
add
push
je
aas
adc
test
cltd
negb
aad
xor
sarb
frstor
and
cmp
int3
bound
repnz
out
dec
jnp
mov
jb
rcrb
mov
imul
je
or
adc
jb
adc
mov
xor
lods
mov
mov
pop
dec
jo
cmp
out
movsl
enter
cmp
sub
lret
notb
subb
lock
and
xchg
lgdtl
sbb
mov
adc
mov
test
rcrb
out
mov
dec
jno
popa
test
add
pop
xor
inc
outsb
mov
lret
jl
mov
out
in
dec
pop
xchg
and
add
or
js
cmpl
push
dec
and
cmpsb
inc
cltd
dec
pop
mov
sbb
lcall
adc
mov
mov
push
gs
or
subl
je
aam
sub
call
js
ljmp
mov
in
movsl
out
jp
popf
xchg
push
hlt
ljmp
adc
cmp
xchg
push
cmp
xor
hlt
xchg
inc
jl
faddl
nop
push
dec
ja
das
xchg
push
mov
sbb
sti
xchg
dec
push
pop
arpl
xor
sarl
xor
out
push
mov
pop
inc
pop
xchg
pop
cmp
ss
loop
dec
adc
sbb
ja
push
inc
pop
add
rcll
sub
outsb
mov
cmp
sub
push
lods
ret
pop
fstl
ja
sbb
adc
push
cmp
daa
push
or
movsl
sub
jge
ds
jnp
push
xchg
mov
add
mov
jae
nop
cli
stos
mov
ror
call
out
xor
fldcw
pop
inc
lods
pop
jp
test
fisubl
and
pushf
ret
dec
xlat
or
mov
leave
sbb
pop
out
leave
dec
rcll
mov
add
sbb
and
jecxz
sub
jae
add
and
mov
jmp
mov
cmp
sbb
repnz
and
hlt
fsubs
shrb
xchg
insb
lea
sub
adc
push
repnz
fiaddl
imul
push
lock
dec
in
lret
sub
add
imull
jne
fldl2t
push
pop
scas
xchg
sarb
stos
in
xor
inc
or
jo
mov
dec
iret
mov
fisttpl
lcall
mov
mov
lret
dec
cmp
push
ds
test
inc
sti
adc
test
inc
cmp
xchg
push
fnsave
sbb
aas
jp
add
xchg
ljmp
mov
sub
inc
xchg
iret
aam
scas
div
add
fdivr
push
sub
add
jmp
push
ret
js
mov
inc
adc
sub
adc
sbb
adc
and
data16
mov
mov
lret
outsl
sbb
dec
stc
jbe
mov
idiv
fs
add
xchg
sti
and
push
ja
mov
sti
cmp
mov
aaa
lret
mov
in
and
in
xor
sub
loop
stc
and
xor
cmp
add
add
movb
mov
movl
jmp
movl
movl
cmpl
ja
push
push
push
call
add
add
xor
mov
or
add
xor
push
not
pop
xor
div
mov
xor
xorl
or
mov
xorl
or
movzwl
or
mov
subl
div
xor
xor
cmpl
movl
mov
jmp
movl
cmpl
jl
push
push
call
sbbl
movl
or
xor
or
pushl
mov
or
mov
xorl
pushl
add
andl
pushl
orl
imul
pushl
mov
adc
jmp
and
sbb
sbb
jns
add
not
push
sbb
mov
vunpckhps
cld
ljmp
xchg
jecxz
cwtl
outsb
movsb
cmpsl
mov
cli
cmp
js
and
jnp
lods
xchg
mov
loop
adc
into
rorb
insb
aad
jp
or
mov
xchg
cwtl
popa
ret
dec
or
insl
and
stos
fisubrs
xor
std
das
addr16
mov
inc
cltd
cmp
mov
add
pop
sub
stos
les
mov
xor
movsl
int3
and
imul
or
jnp
out
cli
inc
in
push
test
jge
inc
pop
mov
mov
pop
cmp
insb
push
xchg
push
sahf
gs
adc
scas
movsl
or
mov
mov
xor
xlat
lods
dec
in
test
fst
daa
pop
xor
aam
in
sbb
push
inc
or
mov
ds
shl
in
jle
push
out
jo
sahf
cmp
cmp
inc
rcl
int3
sbbb
ss
sbb
dec
sti
aam
xchg
mov
jl
jl
lea
pop
enter
pand
int3
fs
js
xor
mov
push
in
sbb
push
int
shl
add
loop
mov
adc
adc
mov
int
ja
aas
repz
mov
sahf
adc
lock
mov
std
fcoms
or
cmp
xlat
in
inc
imul
idiv
jae
pop
cltd
xchg
stos
add
mov
pop
das
dec
mov
push
or
mov
mov
push
adc
jo
fnstenv
in
fwait
mov
and
icebp
aas
and
lret
lahf
in
adc
call
test
sti
jbe
sub
insl
push
jb
sbb
mov
pop
mov
repz
xchg
push
cmp
adc
push
sbb
cltd
ficompl
sub
adc
je
mov
push
repnz
decb
idiv
cmp
cmp
push
mov
insb
jmp
push
sbb
pop
insl
or
mov
f2xm1
dec
xorl
or
lock
fmulp
mov
sti
push
pop
mov
push
ficoml
sahf
xchg
loopne
imull
mov
add
mov
pop
jg
mov
out
jecxz
dec
repz
cs
fucom
mov
lret
fiadds
mov
addr16
or
fiadds
inc
idiv
add
mov
push
jge
add
xor
subb
cmp
clc
rcll
pop
sti
xchg
mov
ss
repnz
xor
mov
cwtl
cmp
mov
aaa
in
stos
test
push
mov
in
test
dec
out
or
sub
adc
mov
cmp
in
repnz
push
jo
fisttps
loope
imul
lods
ret
mov
enter
in
movsb
gs
std
loope
mov
inc
cmp
mov
cmc
jo
outsl
fsubrs
jle
mov
and
cwtl
push
inc
mov
dec
imul
pop
mov
in
push
fwait
sbb
sub
gs
cmpsl
into
inc
jo
sti
int
push
scas
pop
lret
fdivrl
cli
cs
xchg
mov
ret
mov
add
addr16
pop
stos
xor
outsb
and
xchg
and
xchg
mov
cli
push
mov
movsb
mov
mov
addl
or
cmp
cmp
mov
orl
xor
adc
mov
div
adcl
and
xorl
or
xorl
pushl
xorl
call
orl
dec
jne
add
movl
cmpl
mov
mov
mov
mov
jmp
mov
cmpl
jb
push
call
movzwl
sbb
adcl
xor
mov
xor
mov
addl
sbbl
mov
mov
andl
movl
mov
xorl
call
cmpl
mov
mov
not
jmp
movl
mov
cmpl
jle
call
adc
orl
xor
add
mov
sub
and
sub
sbb
lea
mov
lea
add
mov
cmpl
mov
movl
mov
jmp
movzwl
mov
cmpl
je
push
call
or
sbb
sbb
xorl
sub
orl
sbb
mov
mov
sbb
jmp
js
push
xor
or
in
mov
mov
or
mov
in
jmp
xor
push
add
pop
lods
out
jae
shl
jne
push
dec
add
sahf
das
cli
lea
mov
ret
lds
jb
push
xchg
jbe
clc
mov
sub
lds
out
ret
sub
add
call
jnp
add
nop
leave
mov
sub
xor
sub
mov
test
les
leave
jmp
lret
jbe
inc
push
cltd
in
cmc
inc
icebp
shrb
fs
imul
les
lods
les
xor
pop
fs
addr16
mov
rclb
out
lock
mov
adc
fistpl
popf
loopne
xchg
jg
pop
lahf
shll
repz
mov
notrack
je
sub
mov
mov
and
cltd
loop
mov
in
insl
lock
push
lret
mov
ljmp
sub
sbb
pop
pop
cmp
mov
ds
ss
inc
jge
cli
sti
adc
adc
insl
test
fcomip
aaa
lds
inc
inc
cltd
adc
jbe
stc
xor
pop
fistpl
push
push
mov
notl
inc
cmpl
popf
cmp
les
inc
and
leave
out
cmp
pushf
repz
idivb
jecxz
mov
fucompp
nop
lea
and
push
sti
lea
xor
or
sub
test
pop
movsb
outsb
add
sbb
inc
dec
add
mov
pop
mov
add
insb
fwait
ljmp
push
in
push
jbe
lret
sbb
repz
inc
mov
sahf
orl
xchg
stc
pop
aad
add
push
jl
cmp
mov
aas
icebp
shll
outsb
sar
loope
pusha
adc
enter
les
adc
icebp
out
test
sub
or
add
adc
jae
outsb
into
sbb
sub
xchg
xchg
inc
add
addr16
aam
inc
inc
add
insl
je
mov
mov
push
ds
test
imul
push
cltd
jnp
adc
loope
stos
test
cmp
movsb
mov
mov
pop
dec
enter
shll
popf
icebp
ja
repnz
addb
jl
sti
xchg
xchg
es
or
cmp
bound
fstpl
insb
and
ss
inc
ret
ret
scas
orl
push
cltd
out
mov
clc
sbb
stos
or
xchg
mov
aas
fsubp
popa
out
pushf
mov
sti
test
in
or
ficoml
dec
das
add
adc
adc
out
inc
nop
fs
pop
stc
nop
mov
or
test
scas
pop
and
fldl
jne
stos
repnz
gs
lods
jo
push
or
add
test
das
inc
scas
mov
inc
pushf
and
mov
orl
push
add
mov
jmp
addr16
mov
jl
adc
out
cmpsb
push
xchg
das
jecxz
mov
and
mov
xor
cmpl
movl
movl
movl
jmp
movl
movl
cmpl
jae
push
push
pushl
call
notl
subl
adc
sub
mov
sbb
xor
or
mov
and
xor
and
shl
shr
sbb
or
cmpl
notl
notl
movl
mov
jmp
mov
mov
cmpl
jae
push
push
pushl
push
call
inc
or
xor
sbb
xorl
sub
mov
mov
mov
addl
mov
and
mov
cmpl
movl
movl
mov
jmp
mov
mov
cmpl
jl
pushl
pushl
push
push
call
add
notl
or
movzbl
or
sub
add
mov
adc
jmp
lock
fidivs
push
push
call
dec
imulb
ret
push
sbb
xchg
sub
jb
enter
or
push
dec
dec
xchg
test
jecxz
and
push
mov
movsl
lret
cltd
push
mov
fistl
pop
loope
js
out
jno
push
out
out
xor
dec
inc
out
mov
out
cs
call
sahf
test
pop
inc
fidivrl
mov
addb
sbb
push
repnz
inc
mov
es
jecxz
mov
push
xchg
mov
inc
inc
out
enter
pop
loope
sarl
aaa
mov
loop
js
stc
loope
test
imul
sbb
loope
stos
dec
inc
inc
jae
inc
ret
insb
mov
shlb
xchg
jmp
add
sub
aam
sahf
push
xor
daa
pop
add
test
ficomps
sbb
fsts
loopne
add
loop
int3
scas
and
jp
sub
mov
sub
add
fisttpll
add
xor
inc
jno
in
ja
gs
mov
xlat
mov
data16
cmp
or
cmpsb
dec
in
cmp
mov
stos
xchg
leave
outsb
test
mov
lds
icebp
pushl
dec
or
nop
inc
fidivs
fisubs
pop
ret
mov
inc
mov
adc
fisubrs
cs
push
mov
mov
popa
jmp
mov
shll
adc
inc
xchg
bound
mov
sub
push
push
jmp
aad
push
cmp
shrb
aaa
adc
mov
dec
xorl
or
pop
lods
sti
stos
mov
add
bound
pop
mov
mov
scas
icebp
sbb
push
jecxz
xor
pop
fs
mov
shrl
push
mov
add
sub
push
push
adc
mov
dec
mov
fwait
cmp
adc
cld
daa
daa
push
pop
mov
lahf
mov
cmpl
fidivrs
xchg
imul
mov
aam
sbb
aam
stos
addps
jg
lds
sti
out
pop
sub
sub
out
and
test
xchg
add
cmp
inc
jne
imul
movsl
fisttps
out
jnp
xlat
xchg
mov
hlt
stos
add
fsts
fwait
incl
fcoms
xor
push
mov
fidivs
loope
and
mov
jle
sti
adc
repnz
scas
repnz
cld
push
mov
fwait
lock
testb
mov
fnstcw
ss
lods
stos
and
stc
stc
cmc
mov
or
pop
lret
imul
fisttpl
xor
mov
push
cmc
fdivrs
sbb
ffreep
ljmp
ret
pop
rol
adc
jo
test
and
movsl
gs
mov
inc
je
iret
xchg
rcll
lods
push
mov
jl
mov
xor
insl
sub
sarb
push
pop
xchg
sbb
jg
adc
rorl
cmc
xchg
subb
xor
clc
call
pop
lods
icebp
out
push
sbb
push
int3
shlb
or
imul
pusha
cli
fwait
adc
aam
rclb
imul
or
mov
mov
jle
fidivrs
and
mov
cli
jae
sbb
push
add
add
jnp
jge
fs
sub
or
sub
loope
inc
mov
jg
pop
scas
mov
xor
mov
shrd
cmpl
mov
not
not
jmp
mov
movl
cmpl
jae
push
call
movl
mov
mov
sbb
movl
or
and
cmpl
movl
mov
mov
movl
jmp
movl
movl
cmpl
jge
push
push
push
call
adcl
xor
xor
movl
adc
decl
shr
mov
xorl
mov
xor
xorl
xor
or
cmpl
movl
movl
movl
jmp
movl
mov
cmpl
jne
push
push
call
adc
andl
add
andl
add
mov
andl
push
pushl
lea
subl
push
subl
shl
andl
call
lea
orl
push
mov
mov
lea
push
negl
mov
lea
addl
mov
mov
adcl
mov
sbbl
push
negl
call
push
andl
push
sbbl
pushl
sbbl
call
sub
mov
movzbl
sbb
mov
adcl
mov
mov
shr
add
shl
and
or
adc
mov
cmpl
mov
mov
movl
jmp
movl
cmpl
jbe
pushl
call
movzbl
adc
movzbl
add
and
sub
orl
xor
cmpl
mov
mov
jmp
mov
cmpl
jb
push
push
push
pushl
pushl
call
subl
addl
addl
mov
xor
add
sub
sub
sbb
add
and
mov
lea
neg
mov
add
lea
or
mov
cmpl
not
movl
mov
jmp
movl
movl
cmpl
jge
push
push
push
pushl
call
adc
add
and
mov
mov
sub
or
xor
cmpl
movl
movzwl
notl
jmp
mov
cmpl
jne
call
sbb
notl
and
mov
sbb
orl
adc
and
mov
sub
mov
xor
xor
sub
or
lea
cmpl
mov
not
not
jmp
movl
movl
cmpl
jne
push
pushl
pushl
push
pushl
call
sbb
add
sbbl
subl
movzbl
sub
mov
cmpl
movl
mov
movl
movl
jmp
mov
cmpl
jge
push
push
call
sub
mov
sbb
adc
and
adcl
sbb
xor
xor
mov
xor
movl
add
movl
sub
movl
movl
mov
jmp
xchg
inc
sub
cmpb
mov
mov
xor
cmp
xor
setae
in
out
inc
out
adc
cld
test
insl
lret
mov
cmpsl
sub
push
fcoml
xchg
adc
movsb
lods
mov
pusha
insl
cmp
push
or
pop
shlb
cmp
leave
dec
out
adc
jo
daa
mov
jb
dec
pop
push
insl
dec
fstpt
jle
popf
aas
stos
pop
ja
xchg
xor
and
sbb
out
pop
test
das
sub
push
sbb
cmp
pop
aas
into
ja
mov
imul
mov
cwtl
stos
xor
movb
mov
bound
fwait
leave
cmp
aad
push
push
inc
ret
popa
enter
popf
xor
push
mov
push
sub
cmp
inc
or
mov
dec
adc
sub
sub
cwtl
test
jne
lret
mov
decl
pop
lcall
xchg
push
fists
aad
aad
xor
push
mull
insb
jge
mov
push
in
in
outsl
fsubs
or
pusha
lret
mov
lods
push
movsb
push
or
push
push
das
sbb
xor
pop
or
mov
and
aam
push
jp
mov
inc
push
nop
cmpsb
add
fimull
test
dec
adc
inc
push
test
xchg
xchg
fstl
dec
or
dec
or
sahf
sahf
sbb
call
add
and
movsb
adc
fcmovnu
jns
icebp
mov
push
mov
mov
fnstenv
push
fisubrs
into
cltd
adc
sbb
xor
pop
gs
addr16
dec
lods
cmpsb
jo
jb
xchg
add
call
lahf
pushf
icebp
or
jnp,pn
mov
xor
shrl
mov
lahf
lcall
push
push
sub
cld
stos
pop
push
jmp
push
xor
outsb
sbb
dec
push
mov
addb
loope
fidivs
mov
mov
fsubrs
mov
xchg
and
jb
or
mov
mov
xchg
test
cltd
lods
int3
stos
or
out
push
jge
push
xchg
xchg
add
das
insb
insb
loop
and
js
add
and
adc
push
iret
add
xchg
pop
add
hlt
mov
in
mov
cld
imulb
xlat
adc
out
lock
xchg
cli
or
mov
xorb
jno
movsl
fcmovu
aad
mov
sbb
mov
xchg
or
dec
push
jb
or
xlat
rcrl
jmp
mov
cmp
movsl
pop
and
push
fidivrs
out
xchg
push
mov
push
pop
mov
xchg
lds
gs
jmp
daa
mov
xor
xor
cmp
stos
pop
dec
xor
sbb
scas
mov
mov
stos
orb
mov
or
out
add
stc
ds
pop
outsl
and
pop
mov
fwait
or
cltd
mov
inc
inc
pop
dec
xchg
aam
push
mov
push
jae
data16
lock
xor
dec
or
and
pushf
push
cli
push
loop
lods
lds
push
dec
insl
adc
push
aas
xchg
movsl
dec
test
or
or
call
dec
and
mov
mov
add
adc
xor
xor
jmp
pop
es
sub
pusha
in
mov
xchg
sbb
pop
testl
sti
mov
mov
or
lcall
xchg
pop
aad
stos
std
das
dec
addr16
js
mov
bound
or
pop
mov
xchg
xchg
in
js
pop
stos
xchg
int
icebp
jl
pop
and
es
addb
xor
jle
pop
iret
adc
sti
sbb
rorb
mov
arpl
pop
bound
mov
lcall
push
mov
pop
iret
add
fs
jns
push
or
out
int
into
inc
dec
mov
push
fwait
mov
jge
adc
lret
icebp
sbb
pop
pushf
and
push
addr16
jne
into
jle
imull
arpl
call
out
jle
xlat
mov
shrb
push
cmp
fisubrl
movsb
notb
outsl
cmp
mov
icebp
add
add
popa
dec
jle
fwait
mov
dec
aas
clc
inc
mov
int3
jnp
dec
cli
dec
ffreep
rcrb
aad
jecxz
fadds
push
fdivrs
jb
dec
sahf
pop
daa
int
lcall
cld
pop
fucomi
mov
scas
das
test
xchg
test
sub
and
call
xchg
into
inc
call
lods
and
jmp
lret
frstpm(287
pop
fldl
sub
fbstp
push
push
lds
push
or
or
dec
mov
or
push
pop
fiaddl
das
sbb
ds
out
ja
cmp
dec
shlb
add
xchg
mov
mov
jecxz
push
popa
dec
jle
pop
adc
jae
ficoms
rorl
sub
cmp
sbb
dec
pop
outsl
ljmp
adc
push
inc
test
push
jmp
jno
jmp
dec
in
mov
fstpt
cmpb
or
dec
movl
cmpsb
shlb
lcall
scas
mov
lcall
dec
rolb
jle
popf
rorb
and
fisubrl
push
cvtpi2ps
xor
pushf
lcall
cld
push
test
inc
pop
gs
in
mov
sbb
stos
push
mov
ss
pop
les
ret
mov
mov
jmp
jp
and
inc
push
das
repnz
fcoml
xchg
sbb
mov
fwait
jnp
inc
in
dec
sbb
enter
lahf
leave
pop
mov
dec
stos
inc
insl
mov
cmp
mov
ljmpw
rorb
ja
xchg
fwait
sbb
add
cmp
sbb
ret
push
cli
icebp
pop
rcrb
mov
sbb
cli
adcb
cltd
shrb
leave
outsl
xor
sub
iret
pop
pop
ja
cmpsl
mov
out
mov
add
fldt
jecxz
je
insl
ret
xchg
pop
mov
sarb
sahf
stos
add
aaa
pop
cmp
xor
out
in
shl
add
fisttpll
cmp
and
test
fisttpll
dec
lods
popa
jnp
push
mull
sti
mov
imulb
push
aas
ljmp
pop
test
shrl
daa
inc
jno
add
fidivs
cmpsl
bnd
stc
ljmp
cld
insl
cwtl
dec
xor
jnp
out
dec
push
and
mov
and
mov
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
push
or
or
push
push
call
mov
mov
jmp
lcall
es
lret
rcrb
jl
lods
push
sbb
mov
out
dec
pop
loopne
out
ret
pop
dec
mov
or
mov
fwait
ss
jl
dec
push
push
sbb
or
pop
xor
je
popa
ret
dec
mov
fs
lock
lods
adcb
dec
cmc
cmp
out
iret
je
cwtl
cmp
or
xor
aam
pushf
mov
pop
mov
lret
daa
sbb
jl
dec
lods
mov
test
jg
push
enter
fcoml
mov
fildll
adc
and
fidivrl
pop
lea
in
pop
in
iret
pop
mov
mov
aam
or
test
mov
jg
cmpsb
cmp
xchg
xchg
and
dec
outsb
icebp
push
mov
xor
cmp
fidivrl
out
mov
xor
or
call
xlat
adc
pushf
push
sub
xchg
sub
ficoml
mov
mov
sbb
inc
xor
or
or
push
cmp
sub
mov
or
cwtl
xchg
xor
pop
push
pop
ss
push
ret
ds
and
xchg
sbb
sahf
inc
fadds
cli
adc
negl
push
sub
outsl
cs
in
cmpsl
sbb
outsl
mov
push
xchg
inc
push
adcl
adc
mov
hlt
xchg
into
cs
std
popl
nop
xchg
loopne
ret
dec
and
lock
or
fnsave
stos
out
dec
cs
pop
add
mov
mov
push
pop
outsl
aaa
bound
sub
mull
fst
sub
jb
js
mov
sbb
sarl
dec
stos
insl
mov
mov
outsl
pop
xchg
inc
dec
add
sbb
fwait
pop
js
jle
in
cmp
cmpsl
mov
sarb
subl
jb
sbb
xor
pushf
lds
adc
fists
jo
inc
int
movsl
jb
popa
les
sarb
sub
lods
mov
cmpsl
mov
mov
jnp
popa
xchg
outsl
adc
pop
stos
jp
lahf
adc
mov
and
lock
xor
movsb
dec
mov
jns,pt
push
insl
push
or
cmpsl
xor
scas
push
xlat
lea
das
mov
dec
out
pop
or
insb
movsb
into
sbbl
jecxz
xchg
insl
sbb
dec
xor
sahf
add
push
dec
je
jb
iret
insb
push
das
xor
xchg
sbb
lods
add
push
shrl
pop
rcr
sti
lret
inc
cmp
sbb
xlat
mov
arpl
jmp
into
adc
scas
xchg
push
bound
inc
in
jmp
movsb
lods
mov
mov
rcrb
cmp
sbb
subl
xor
mov
jb
pop
cld
fidivrs
or
mov
xchg
lret
iret
pop
inc
xchg
outsb
call
scas
mov
lea
es
stos
fnstsw
and
lcall
mov
fs
pop
scas
jno
push
ss
and
or
mov
ret
scas
push
insb
rorb
insl
jp
pop
or
dec
adc
mov
popa
stos
loop
or
clc
aas
sub
mov
sbb
mov
cmp
jne
cmp
je
movl
movl
movl
movl
mov
mov
mov
mov
add
adc
xor
xor
and
mov
and
mov
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
push
push
xor
xor
push
push
call
mov
jmp
cmp
arpl
add
push
dec
in
mov
mov
or
pop
pop
lahf
inc
sbb
xor
mov
loopne
add
insb
fbstp
mov
ret
jns
pop
jge
add
jle
mov
lret
add
cmp
pop
enter
jo
dec
js
mov
add
repnz
mov
mov
test
mov
lret
sbb
pop
std
out
lret
sti
or
pop
lcall
jae
or
in
std
ds
mov
enter
jae
mov
test
and
fstpt
or
lea
pop
pop
cmp
scas
mov
push
lret
push
inc
sub
or
dec
adc
shr
pop
or
daa
call
lea
mov
fstpl
jle
and
scas
inc
addr16
movsl
sbbl
sub
sbb
rol
sbb
movsl
inc
cmp
mov
nop
fs
out
fs
or
ds
mov
mov
in
into
sti
cmp
popa
loope
push
daa
sahf
dec
adc
sub
xchg
test
mov
fnsave
cmpsb
sbb
inc
mov
movsb
cmc
xlat
int3
popf
jmp
add
int
leavew
movsb
and
sub
test
jo
fsts
xorb
add
mov
xchg
test
daa
adc
cmp
jae
pop
or
pop
inc
and
or
dec
adc
aaa
adc
js
fiadds
test
fnsave
mov
loope
or
sbb
add
and
inc
push
or
mov
lods
adc
sbb
repnz
into
xchg
test
push
pushf
lret
xor
mov
in
and
leave
lret
pop
inc
jae
sbb
fiadds
push
inc
pop
cltd
pop
jnp
aaa
mov
sub
pop
int3
adc
cmpsb
sahf
add
mov
sbb
lret
push
pop
mov
js
popa
out
mov
call
jg
pop
clc
dec
sub
jge
xor
aaa
dec
jg
mov
and
gs
in
pop
jmp
jge
cltd
loopne
rcrl
ret
jnp
jp
les
in
cmpsl
inc
incl
cmpsb
xor
xor
mov
inc
add
pop
push
insl
insb
call
rorl
dec
gs
pop
jne
in
test
sbb
xor
pop
js
rdpmc
int3
dec
aas
jbe
mov
xor
lock
scas
lock
xchg
xchg
mov
pop
sar
scas
pushf
imul
adc
mov
fdivrp
cmpl
hlt
mov
fnstsw
mov
daa
mov
ljmp
je
mov
mov
mov
xchg
jb
dec
aas
or
or
pushf
imul
test
lcall
pop
test
sub
bnd
push
mov
jge
aas
mov
sbb
dec
add
scas
push
repz
add
inc
inc
mov
jno
xchg
clc
add
aad
push
mov
pop
sub
push
lahf
push
xchg
mov
inc
fsubr
sbb
push
push
pop
mov
jle
test
pop
xchg
inc
lods
push
out
push
xchg
addr16
in
push
int3
rcrl
push
aam
mov
nop
and
rolb
stos
mov
outsl
dec
fdivrl
add
repz
add
lock
push
pop
mov
pop
mov
pop
and
push
push
push
push
call
mov
mov
push
push
push
push
call
mov
mov
add
mov
adc
mov
cmp
jne
cmp
jmp
xchg
loope
gs
fs
aam
imul
lahf
push
sbb
in
leave
jecxz
xor
insb
jl
jp
ljmp
sub
pop
and
call
mov
aad
repz
xchg
sarl
out
mov
lods
jg
lea
sahf
mov
lcall
jo
in
incl
adc
popa
loop
sbb
aas
jle
shr
dec
mov
jns
xchg
test
adc
outsb
or
mov
nop
dec
pop
clc
scas
leave
adc
gs
cld
daa
mov
decl
pop
push
nop
jmp
aam
movsb
add
in
mov
mov
mov
mov
pop
xorb
dec
xchg
pop
xor
sbb
sarb
arpl
ja
push
and
es
shl
into
dec
popf
incl
mov
jmp
push
jp
movl
popf
lret
stc
jmp
pop
data16
rorl
jmp
xchg
jo
sub
cmp
push
cmc
inc
les
dec
cmp
pop
scas
dec
insb
pop
mov
xor
jecxz
push
jo
inc
push
lcall
mov
sti
in
dec
sub
xor
xor
xchg
pop
repz
inc
mov
loop
push
dec
cli
je
pop
mov
or
dec
outsb
mov
mov
xchg
movsb
bound
dec
iret
xchg
inc
push
loopne
add
xchg
call
pcmpeqb
sub
int3
inc
pop
mov
dec
add
cmpsb
mov
outsb
mov
rolb
dec
in
mov
jp
push
xlat
cld
mov
mov
or
add
adc
imul
cmpsl
mov
mov
sub
push
push
cmp
roll
test
sub
mov
ret
insl
outsl
jge
out
dec
mov
popf
or
into
mov
std
xchg
into
mov
mov
repz
scas
sbb
dec
bound
test
jge
push
xor
mov
cmc
push
js,pn
lds
adc
loop
sti
lods
data16
dec
and
sti
or
dec
fsubrs
sub
pusha
mov
insb
cmpsb
scas
scas
hlt
inc
ja
push
and
add
movsb
push
cmp
stos
add
jge
js
mov
xor
pop
pop
pop
int3
les
dec
imul
sbb
je
jns
dec
push
push
sub
dec
dec
pushf
push
mov
lahf
push
add
adc
stos
stos
adc
sbb
fimull
arpl
and
xor
subl
cmpsl
cmpsb
push
sub
xchg
scas
cwtl
push
cs
pop
inc
xchg
nop
test
xchg
loope
push
mov
xchg
lahf
xor
push
fwait
add
add
loop
xor
scas
jle
jno
ret
push
icebp
sti
pop
jns
mov
jp
cli
pop
decb
in
jne
or
movsl
scas
add
fwait
mov
lret
clc
sub
cmp
xchg
xchg
inc
aaa
adc
xchg
ds
icebp
ljmp
cmp
rcrl
push
or
mov
stc
unpcklps
icebp
sbb
into
aas
cli
mov
lret
cmp
xchg
cmp
fdivrl
and
jl
les
repz
shrb
movsl
cmp
push
out
push
aam
add
and
nop
jno
leave
sub
adc
cmp
push
je
mov
mov
xor
shld
shl
mov
mov
mov
xor
xor
mov
cmp
jne
cmp
je
mov
cmp
je
mov
mov
xor
jmp
popa
cmp
cmpsb
stos
and
insl
jnp
jl
add
jo
xchg
push
sbb
xor
push
xchg
clc
in
shll
sub
popf
cmp
mulb
movsl
fildll
scas
cmp
pusha
in
out
hlt
and
mov
scas
gs
push
mov
or
dec
push
pop
fnstsw
stos
sub
sarl
sbb
cmpsb
mov
dec
test
jae
mov
mov
dec
testb
scas
dec
jb
jmp
hlt
call
test
arpl
lahf
add
inc
xchg
rorb
test
insb
mov
jg
lret
cmp
gs
sbbb
pop
xor
cmp
add
add
ljmp
sarl
cmp
fmull
jp
cltd
jmp
xchg
pop
push
scas
loope
jl
adc
inc
xchg
pop
iret
jnp
xchg
int3
loope
push
scas
xchg
ret
stos
std
push
and
sbb
xor
jb
insb
out
fists
add
lock
stos
or
sbb
mov
lea
scas
aam
add
cmp
int
loope
sti
xlat
rorl
mov
lcall
pop
fistpll
inc
push
xchg
test
inc
fisttpl
fildl
inc
jle
out
add
sub
jb
push
pop
and
sub
dec
int
mov
cs
add
iret
test
loope
jle
popa
xlat
mov
mov
xor
and
test
mov
test
sbb
cs
repz
and
imul
inc
lahf
movsl
push
add
or
mov
std
ret
inc
ds
add
sarl
mov
imul
jb
outsl
addr16
push
lcall
repz
sbb
shlb
pop
rcrl
or
push
addb
das
add
aaa
xor
mov
pop
jge
fisubrl
std
sub
inc
mov
push
xlat
fidivrl
cmp
movsl
sub
jbe
je
cltd
adc
leave
fucomip
fidivs
mov
inc
sbb
jnp
cmpb
pushf
push
jmp
in
xor
lods
into
cmpb
int
push
and
sub
mov
jae
inc
shrb
in
push
adc
scas
jb
xchg
test
sbb
xchg
jb
ljmp
aas
lds
and
imul
insb
repz
call
fists
pop
pushf
ret
sbb
cli
pushl
lock
jecxz
in
xorl
push
cmp
ljmp
stos
jne
pushl
mov
pop
fdivrs
xor
std
adc
aaa
xchg
test
imul
clc
or
jmp
aaa
sbb
mov
lcall
fistpl
mov
xor
lods
cmpb
push
mov
lods
push
cwtl
mov
dec
cmc
loope
xchg
adc
test
andb
icebp
mov
xorb
ffreep
aaa
scas
xchg
mov
testb
aam
jmp
out
imul
pop
into
inc
stos
push
push
aas
jp
jbe
pop
dec
mov
jno
cwtl
xor
mov
xor
mov
sets
test
jge
mov
icebp
cmp
xchg
call
shrl
icebp
mov
pop
imul
bnd
jns
shrd
shr
mov
mov
mov
jmp
push
or
sbb
dec
push
dec
jle
push
sbb
repz
push
mov
mov
fwait
vphadddq
adc
out
mov
das
bound
mov
idivl
insb
mov
and
out
push
mov
sub
mov
or
mov
and
ja
enter
mulb
mov
xchg
mov
dec
sbb
out
add
fiaddl
int3
sbb
push
mov
pop
jl
sarb
push
insl
xor
out
sub
mov
enter
repnz
hlt
xchg
and
dec
xlat
adc
pop
push
stc
test
pop
xor
and
popa
cwtl
inc
pop
leave
mov
dec
movzbl
test
jl
adc
pcmpeqw
and
pop
jle
rol
addr16
cmp
sbb
push
mov
xchg
push
stc
sub
sti
mov
inc
test
scas
add
fcoml
mov
mov
sahf
cmp
sbb
into
movsb
cmovge
es
je
jbe
dec
rclb
loop
ret
add
dec
push
aaa
roll
mov
and
adc
cwtl
cwtl
sbb
andb
pop
pop
imul
pop
push
adc
lcall
rol
stc
cmp
adc
pop
ljmp
insl
pushf
mov
add
cmp
mov
push
into
cltd
fildl
mov
subl
xchg
sbb
push
daa
sub
dec
lock
mov
es
out
xchg
sub
leave
fmull
mov
test
js
mov
sub
mov
fsubl
xor
data16
push
test
add
cmpsl
push
gs
push
add
adc
xor
add
push
pop
pusha
fwait
jne
pusha
mov
outsl
pusha
cmp
inc
lret
mov
dec
xchg
lcall
dec
xor
pushl
shlb
outsl
insl
mov
cld
jnp
sbb
mov
fsubrs
sbb
stc
lods
sbb
cmpb
pop
lret
xchg
jne
stos
sbb
and
icebp
inc
inc
and
xor
inc
cmpsb
ja
mov
jns
sbb
lods
out
and
xlat
lret
xchg
icebp
xor
mov
loope
imul
xchg
ja
inc
or
mov
sub
ret
jno
idiv
xchg
push
adc
pop
aam
xchg
jp
mov
cwtl
cmp
lods
or
adcl
lods
int
jo
je
mov
cmpsb
pop
or
sbb
jo
or
mov
js
mov
adc
mov
pop
dec
call
xor
or
mov
imulb
pop
pop
jmp
pop
mov
fwait
out
inc
dec
mov
pop
or
mov
xchg
mov
daa
xor
iret
push
fmuls
or
mov
loopne
sbb
cwtl
push
data16
shll
mov
ret
je
out
mov
iret
fnstsw
iret
test
dec
stos
test
daa
mov
inc
mov
setae
outsb
mov
adcb
jmp
dec
int3
pop
repz
hlt
iret
cmp
jb
jns
aas
stos
daa
cwtl
push
mov
push
inc
outsb
fcomp
or
push
jbe
movsb
lahf
int3
inc
jp
pop
or
xchg
adc
or
shl
xor
or
xor
mov
mov
or
cltd
cmp
jne
cmp
jne
movl
movl
mov
mov
mov
xor
shld
shl
mov
mov
xor
xor
mov
cmp
jne
cmp
jne
movl
mov
mov
shrd
shr
mov
mov
mov
mov
mov
shl
mov
xor
xor
or
cmp
jne
mov
mov
mov
mov
mov
mov
movzwl
mov
jmp
push
and
and
mov
push
sbb
loopne
fimull
fadds
xor
cmp
jecxz
les
inc
popa
and
add
shl
sub
push
cmp
loopne
mov
mov
iret
call
std
cmc
xor
mov
jbe
idivb
mov
inc
enter
in
pop
xchg
push
std
pop
fcmovu
leave
fwait
in
jae
sti
mov
lds
dec
adc
pusha
outsb
fcmovnu
add
inc
inc
repnz
xchg
iret
scas
jae
mov
js
outsb
mov
cs
fstps
ja
mov
jmp
or
int3
scas
pusha
arpl
and
lods
cmp
cld
sub
fincstp
jne
cmpsl
cmpsb
stos
data16
std
cmp
pop
or
imul
bound
ficomps
xchg
pop
jmp
mov
in
int3
lcall
adc
popf
mov
mov
lods
xchg
or
add
mov
push
dec
mov
aad
pop
in
mov
jne
or
dec
test
mov
iret
cltd
push
lods
sub
inc
sbb
jbe
and
jmp
movsl
mov
dec
rcll
mov
hlt
xor
imul
aam
in
xchg
stos
fwait
js
or
dec
xchg
dec
aas
dec
adc
outsb
jno
sub
xor
ret
out
pop
loopne
xchg
add
push
repnz
cmpsb
sub
fsubl
mul
mov
adc
inc
cmp
mov
mov
xchg
pop
mov
mov
lcall
sbbl
aaa
dec
push
jg
inc
pop
xchg
ret
scas
arpl
lods
push
mov
pop
cmp
popf
jns
aam
mov
mov
pop
idivl
pop
mov
sbb
in
out
push
loop
mov
enter
add
aam
cli
mov
mov
mov
cmp
adc
jmp
ffreep
out
dec
xor
inc
inc
ds
incl
andb
push
and
add
jnp
adc
xorl
and
mov
pop
mov
xor
outsl
imul
or
inc
mov
inc
test
push
hlt
fcmovnbe
sub
push
push
push
notb
or
divb
xlat
add
call
add
mov
mov
aaa
ret
out
xchg
jb
ja
sub
push
adc
or
jns
mov
add
leave
jmp
aam
lock
push
pop
pop
arpl
jecxz
bound
stc
sub
xchg
ljmp
aaa
ja
push
cmpb
es
es
sbb
repnz
test
adc
and
push
dec
ss
ret
shll
push
lds
je
or
fcmovne
adc
arpl
sbb
cmp
rorb
das
in
mov
cmpsb
mov
push
mov
xor
popf
lret
sub
sub
mov
aas
push
mov
and
push
mov
or
outsb
add
adc
push
sbb
adc
push
push
mov
dec
shll
loopne
or
push
je
push
or
scas
daa
dec
into
ljmp
and
push
and
mov
jp
mov
nop
mov
jae
cmp
mov
or
mov
add
or
mov
jmp
inc
pop
push
fwait
xor
pop
stos
cmp
push
sbb
xor
dec
pushf
push
into
popa
test
mov
cmc
adc
mov
fmuls
inc
inc
pusha
inc
push
test
scas
icebp
cmp
ficoml
sub
lock
pop
pop
xor
std
mov
mov
sbb
lods
hlt
push
pop
sbb
ret
xchg
js
lea
mov
fists
seto
push
leave
iret
fldt
sbb
out
hlt
in
ret
jg
pop
adc
arpl
jne
icebp
rcrl
mov
jbe
dec
sbb
sbb
outsl
fidivs
sbb
cmc
cmp
test
or
mov
inc
lret
and
sbb
stos
inc
rcrl
imul
popf
psllw
push
xchg
andb
in
inc
jmp
xor
imull
or
mov
mov
in
cmp
pop
push
movsb
out
mov
test
adc
mov
aas
sbb
ds
sbb
lods
mov
fucomi
lahf
adc
shr
inc
pop
push
fisttps
mov
mov
cmpsb
adc
mov
stc
cld
leave
lock
sarl
and
in
imul
popa
push
dec
push
or
push
or
popa
push
push
sub
or
movsl
cli
loope
and
xlat
popa
cmp
cmp
outsb
test
jge
ficompl
sbb
repz
aam
mov
sub
xchg
ss
sbb
sbb
xchg
mov
xchg
mov
lret
psrld
inc
xchg
test
lea
ss
xor
mov
jbe
xchg
and
cld
in
mov
aas
jb
aaa
and
pop
jo
cld
jecxz
jp
je
sub
sbb
leave
les
sbbb
mov
sub
sarb
mov
data16
in
jg
push
mov
sbb
xchg
sub
int
cmp
sub
or
nop
xor
fnsave
cli
cmp
inc
repz
and
or
stos
add
jg
test
scas
mov
cmp
pop
lahf
or
ret
cld
adc
test
aaa
mov
loope
sbb
ret
lods
out
or
mov
xor
jno
mov
push
pop
dec
sub
dec
mov
push
icebp
in
or
mov
les
add
push
dec
cmpsb
push
pop
sbb
cltd
adc
sub
or
arpl
lret
mov
xchg
popf
ss
xchg
dec
sub
lea
ret
fcompl
adcl
or
xorb
cmp
adc
dec
movsb
and
shll
jne
and
xor
mov
iret
popa
mov
mov
and
adc
cmpsb
aam
xchg
xchg
pop
dec
ret
mov
cld
outsl
jbe
cwtl
jne
and
push
les
xchg
and
sbb
xchg
or
das
jl
loop
outsl
xchg
adc
cmp
je
loope
mov
sub
sbb
jbe
adc
data16
stos
sub
mov
inc
jg
ret
mov
mov
cmpb
lea
and
jmp
dec
outsl
dec
aaa
xchg
and
mov
xchg
hlt
hlt
jbe
lret
pop
xor
cmpsl
mov
cmp
add
dec
and
mov
mov
mov
mov
mov
mov
mov
mov
or
mov
or
mov
sub
mov
sub
mov
cmp
jbe
mov
mov
mov
mov
movzwl
mov
or
mov
sub
mov
or
imul
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
xor
mov
imul
mov
and
mov
and
mov
cmp
ja
mov
mov
shrd
xor
mov
shr
mov
xor
or
push
push
shl
push
lea
push
lea
push
jmp
in
sarb
dec
sbb
icebp
scas
mov
mov
jns
sbb
push
sub
out
mov
inc
pop
bound
xor
and
ja
add
bound
movd
sub
movsb
repnz
clc
push
lock
repnz
je
sbb
cli
jg
push
add
mov
mov
xchg
outsl
leave
jae
add
leave
cmp
and
stos
push
vpaddw
pushf
lret
dec
dec
das
aam
sahf
cltd
mov
cltd
mov
and
fists
dec
cvtps2pd
roll
enter
xchg
sub
shll
xor
add
ss
mov
fildll
jl
dec
jnp
adc
in
cwtl
mov
loop
data16
inc
out
cmp
cmp
in
push
adc
adc
loope
dec
xchg
test
mov
sbbb
adc
das
xor
test
xor
cltd
call
insl
dec
mov
lahf
outsl
in
out
mov
or
pop
xlat
loope
mov
rclb
lock
push
and
cwtl
test
testl
imul
popa
das
push
in
mov
cmp
stos
jns
in
adc
add
pop
pushf
mov
daa
pop
inc
cmpb
roll
ds
pop
push
mov
sub
cmp
lahf
pop
cwtl
lods
mov
xor
das
inc
inc
inc
pop
jecxz
out
aaa
out
test
enter
pop
xchg
ja
sub
icebp
inc
push
adc
jnp
dec
das
dec
and
sbb
leave
lods
pop
mov
stos
std
rorl
aas
ffreep
or
repnz
lret
jg
sbb
jno
ja
mov
jno
subl
mov
mov
jmp
bnd
jp
rcr
jle
push
enter
adc
cmp
test
outsb
mov
cmp
arpl
jne
mov
xor
add
lods
int3
in
pusha
adc
push
popf
ret
ret
mov
aas
cmp
test
and
sbb
mov
lea
mov
stc
adc
jo
push
cs
cmp
mov
xchg
repnz
movb
jmp
xchg
dec
mov
add
aaa
lret
iret
inc
cmp
xor
aam
sub
jno
imul
add
mov
out
movsl
pop
and
inc
fwait
fwait
mov
pop
pop
xor
sbb
out
mov
arpl
pop
rorl
lea
in
add
into
movsb
adc
imul
lahf
in
test
scas
movsl
aam
dec
xchg
cmp
or
add
push
das
stc
jge
push
jo
sti
cwtl
inc
jb
test
sbb
addr16
mov
mov
ss
jg
loop
cmp
jge
pushf
ds
lock
mov
or
arpl
aaa
mov
arpl
and
pusha
cmp
daa
cmc
add
int
mov
dec
fwait
pop
shll
es
and
adc
mov
jecxz
push
lcall
inc
sbb
pop
scas
insl
inc
xor
push
loope
cmpsb
sub
pop
dec
data16
add
cmp
cmp
mulb
mov
out
xchg
mov
mov
loop
jle
addl
push
and
push
out
add
jo
xor
iret
insl
sub
mov
or
mov
dec
insb
xchg
push
jmp
inc
and
sbb
daa
and
cltd
lahf
jo
pop
mov
sbb
mov
pop
xor
divl
out
mov
sarb
ljmp
xchg
mov
loopne
sub
fmuls
popa
fcmovnu
or
xchg
fists
dec
mov
push
mov
inc
dec
xor
inc
lods
pop
jmp
push
pop
cmpsl
fs
das
jb
cwtl
adcl
jmp
data16
mov
mov
cmpsl
mov
aaa
in
mov
sar
call
nop
cli
sub
es
sbb
repz
add
adc
scas
push
mov
sub
lods
mov
sub
sbb
lcall
lea
mov
in
sub
idivl
mov
mov
stos
cmp
andb
test
leave
xchg
and
inc
cwtl
xchg
xor
pop
dec
cmp
push
mov
ds
jns
and
or
std
pusha
mov
push
ror
push
scas
jp
sub
xchg
imul
mov
sahf
imul
and
mov
mov
insl
pushl
insb
and
rcll
movsl
testb
jae
sbb
popa
ficoms
movsl
in
push
mov
xor
ds
jl
mov
mov
mov
sbb
lods
int3
iret
push
jns
and
in
adc
push
mov
push
roll
rcl
jmp
out
push
inc
jp
aaa
pop
leave
ret
sub
fmul
push
adc
mov
stos
inc
test
nop
jno
cs
push
push
mov
xchg
adc
daa
adc
cmp
popf
cmp
jmp
stc
out
fwait
dec
arpl
jns
cmc
arpl
inc
adc
stos
les
inc
out
cmp
insb
cmp
cld
add
shrb
stos
popa
push
sbb
ret
lahf
sbb
call
nop
movsl
je
jnp
pop
or
cmp
pop
testl
ss
xor
cmp
jecxz
mov
push
enter
dec
jecxz
and
inc
mov
loope
adc
ja
in
lret
mov
push
sbb
cmpsl
mov
cmp
adc
or
aad
jl
push
mov
xchg
mov
jl
ret
orl
mov
fwait
push
std
push
sbb
mov
pop
dec
push
mov
cmp
aaa
aam
aas
add
jne
test
mov
out
or
inc
inc
push
xchg
inc
fcomp
push
push
sti
mov
je
sub
rcr
in
scas
sub
sbb
loope
jmp
in
and
add
mov
fadds
pushf
bound
mov
adcl
jnp
pop
pop
adc
int
gs
lcall
ljmp
mov
mov
sub
cwtl
mov
xchg
adcb
adc
pop
aas
xor
sub
test
movl
pop
jge
add
cmp
xor
subl
push
xchg
aas
sub
ss
and
add
mov
in
xchg
jmp
jp
aaa
and
lds
out
sub
pop
pop
xor
popf
test
push
insb
pop
outsl
or
jno
and
mov
mov
push
mov
je
je
je
je
je
and
je
and
imul
and
mov
mov
shrd
shr
shl
xor
mov
xor
or
mov
mov
mov
mov
shrd
xor
mov
shl
shr
mov
xor
or
mov
mov
mov
mov
mov
cmp
jne
mov
mov
mov
cmp
jne
movb
movb
movb
movb
mov
jmp
push
and
shll
push
and
jmp
cltd
push
cmp
imul
mov
jmp
es
pushf
ds
pop
fadd
fbld
mov
jno
jb
mov
jecxz
mov
cltd
test
and
iret
jg
cltd
cmp
popl
push
sub
sbb
and
xchg
push
or
jl
jbe
adc
loopne
mov
fiaddl
flds
push
xor
cmp
adc
and
inc
and
xor
inc
loope
push
mov
icebp
fsubs
cli
pop
sub
cs
inc
gs
in
lds
cmpsl
test
pop
scas
shrb
mov
cmp
lds
push
repnz
push
andl
or
pop
push
sbb
imul
cld
cmp
pop
mov
rclb
push
or
movsl
jl
test
cmpsl
mov
std
ret
push
xchg
xchg
arpl
mov
inc
inc
xor
sub
fwait
shrb
pop
push
iret
decl
mov
push
inc
sti
mov
cmp
jnp
call
lret
xchg
xchg
test
inc
cwtl
mov
cmpl
push
adc
mov
bound
or
adc
xor
push
xor
mov
xor
lcall
fldl
in
icebp
cs
xor
stos
int3
imul
and
jg
add
stos
aam
sahf
neg
and
adc
std
jo
lea
mov
sub
dec
cmp
in
fdivr
movb
push
ret
pop
mov
orb
aam
xchg
loopne
xlat
xchg
outsb
sahf
push
loopne
adc
inc
outsb
xchg
ljmp
punpckhwd
or
dec
sub
insb
scas
add
adc
mov
rol
mov
jne
sub
cmp
mov
push
cmpsl
repz
dec
push
xor
push
insb
add
or
push
adcb
jae
mov
push
data16
mov
push
jo
pop
sbb
xchg
mov
mov
mov
sbb
popa
int
negb
mov
out
mov
inc
or
loopne
jb
ljmp
test
imul
test
jle
adc
enter
inc
in
mov
xorb
add
xor
lds
and
stos
push
pop
dec
push
jle
sub
incl
inc
je
sbb
lret
daa
movsl
and
push
and
dec
lret
lods
or
in
pop
cmp
ret
pop
lods
sahf
pop
jmp
jmp
inc
cmp
cmp
or
adc
das
aam
enter
stc
mov
sbb
and
iret
pop
out
fs
pop
mov
sub
daa
adc
sti
movsb
xchg
mov
aam
pop
sub
rcl
xchg
dec
into
xor
test
or
icebp
lods
mov
push
jbe
lcall
popf
mov
sbb
outsl
lahf
test
push
cltd
sbb
jle
iret
sub
clc
mov
ljmp
fnstcw
nop
xor
mov
lds
push
add
insl
sub
mov
adc
ret
rol
pop
shrl
cmp
jle
setge
adc
aad
mov
cmp
or
mov
pusha
jecxz
xchg
repnz
inc
lock
xor
dec
icebp
cltd
stos
rclb
in
dec
and
or
jmp
fimuls
jle
ds
je,pn
xchg
mov
xchg
arpl
sbb
cmp
add
bound
fsubrl
cmp
mov
loop
and
jno
cmp
mov
and
pop
xor
out
xchg
inc
add
loop
sub
iret
leave
xor
cmp
xor
add
ja
cmp
mov
or
les
push
int3
adc
xchg
xchg
movsl
mov
push
and
into
fbstp
leave
rcll
sbb
inc
test
pop
xchg
add
xchg
mov
das
mov
imul
sbb
dec
sub
xchg
popf
xorb
mov
and
pop
notb
pop
jno
cmp
lahf
mov
jge
sarl
movsl
sub
out
lcall
shl
filds
in
sbb
dec
and
inc
sbb
pop
lods
inc
push
testl
pop
test
mov
pushf
jmp
call
mov
mov
lea
dec
dec
add
nop
sbb
inc
movsb
lds
ret
icebp
add
cld
and
push
mov
sbb
xchg
outsl
mov
insl
xchg
mov
ja
cmp
data16
out
xchg
push
mov
or
test
mov
jp
cs
out
xor
sub
fidivrl
jg
lret
in
inc
and
pop
imul
fisubrs
insb
xorb
subl
aad
adc
mov
lods
inc
and
push
in
pop
sbb
pop
mov
in
push
fs
dec
sbb
insb
xlat
out
and
pop
or
xor
inc
push
lds
xor
mov
outsb
mov
jge
or
sbb
lahf
lret
add
mov
addr16
mov
push
ds
test
dec
xchg
mov
inc
and
out
mov
pushf
out
les
mov
aas
pop
pop
xlat
lods
pop
inc
ds
shlb
pop
jmp
lret
lods
mov
lret
in
pusha
sub
xor
mov
and
and
mov
and
xor
lcall
jne
dec
stc
imul
add
sbb
mov
jno
and
movsb
ljmp
fistps
mov
mov
sti
aas
push
or
mov
jecxz
lret
sub
sahf
mov
mulb
sbb
test
jmp
stos
in
pop
dec
inc
mov
jle
push
aad
je
mulb
into
inc
sbb
xchg
xchg
and
stos
jmp
gs
cmp
fsubs
hlt
leave
lahf
es
out
imul
mov
ds
dec
cmp
dec
cmp
xchg
xchg
xchg
mov
adc
cmc
or
xchg
imul
repnz
jb
add
gs
and
sub
mov
pop
cmp
repnz
scas
fdivrs
mov
in
mov
movsb
lcall
or
int3
je
inc
cmp
icebp
inc
jl
adcl
arpl
lret
iret
push
xorb
sbbl
mov
mov
jne
or
or
loop
jecxz
enter
lods
mov
clc
jle
cmpsb
data16
das
shr
mov
sub
sub
inc
jmp
jmp
out
jbe
ljmp
mov
jb
lds
rorl
movzbl
movzbl
cltd
idiv
movzbl
or
mov
movb
movb
movb
movb
movb
mov
mov
or
and
mov
imul
mov
movzbl
movzbl
and
mov
movzbl
cltd
idiv
mov
cmp
je
lea
push
lea
call
cmp
jmp
lahf
cmpsb
out
cltd
out
inc
push
push
mov
out
in
ss
push
sbb
inc
sub
xchg
lahf
xchg
repnz
and
outsl
mov
sbbb
or
ja
mov
xor
movsb
inc
push
lods
aam
pop
push
mov
add
xchg
jnp
mov
xchg
mov
xor
xchg
nop
mov
in
mov
std
inc
nop
cmp
movb
xchg
test
outsl
cmp
dec
or
dec
pop
inc
add
nop
push
jb
and
mov
dec
iret
cmp
push
bound
push
inc
cmc
mov
cmpsl
stc
xlat
mov
add
mov
mov
pop
movsl
es
jnp
dec
sub
push
rcl
daa
je
sub
inc
xchg
adc
in
cmp
mov
into
inc
test
test
int
dec
adc
mov
call
pop
fbstp
inc
xor
xchg
pop
mov
les
cmp
sahf
jl
movl
rcl
pop
and
xor
cmp
xor
sub
cli
sub
dec
ja
fidivl
xor
xchg
dec
push
outsl
aaa
mov
xchg
lods
int
pop
mov
rorb
and
pop
outsl
cmp
scas
ficomps
jle
popf
mov
stos
push
out
cmpsl
shll
inc
cmp
scas
divb
pop
dec
popa
mov
cltd
cli
ret
loop
mov
addr16
je
or
dec
int
mov
cmp
rcrl
pop
sahf
inc
adc
mov
jmp
dec
cmpl
xchg
jb
mov
mov
adc
push
int
inc
hlt
mov
jge
mov
pop
sbb
std
push
cmpsl
or
cli
mov
and
jl
addb
sbb
xchg
test
lea
in
mov
bound
fs
fidivrs
push
sub
clc
aam
mov
fisttpll
clc
lock
test
xchg
pop
shr
cmp
fidivl
inc
ret
cmp
stos
sti
push
jl
inc
xchg
mov
loope
push
lcall
mov
cs
inc
mov
sub
dec
sbb
hlt
cmc
jns
sbb
into
sub
shll
jmp
mov
dec
gs
repz
scas
shll
sti
jae
push
push
dec
mov
jns
cltd
sub
dec
scas
inc
clc
mov
or
lret
movsl
sbb
mov
sub
movsb
sbb
lahf
es
xor
in
adc
aam
lret
sub
or
xchg
std
sti
cmpb
sub
fadds
sub
adc
mov
inc
xor
out
iret
dec
pop
or
lods
xor
orb
and
cld
imul
idiv
add
ret
push
sub
and
and
in
jns
mov
mov
or
sbb
bound
outsb
rcrb
hlt
dec
aam
outsl
cltd
hlt
push
cmp
pop
aas
or
sbb
adc
and
arpl
and
inc
push
sbb
xor
scas
push
scas
jmp
and
loop
das
in
lcall
add
imul
mov
lret
xchg
push
int3
sbb
test
mov
sbb
xor
pop
mov
cmpl
jne
cmp
jne
xor
jmp
mov
mov
jmp
ss
xchg
sbb
sbb
fwait
push
out
jl
mov
sbb
jle
cli
inc
loope
sarl
mov
test
ds
test
cmp
ret
dec
into
lock
dec
lcall
lock
cltd
sub
xchg
je
das
sub
and
in
scas
jae
lahf
enter
xchg
jnp
stos
cs
jns
shrl
leave
mov
aaa
lock
std
mov
fadd
gs
inc
das
fwait
sbb
jb
mov
hlt
idivl
xor
and
and
jecxz
sahf
pop
addr16
sub
out
ljmp
xchg
lret
mov
push
xchg
in
pop
imul
adc
pop
insl
cmp
ficompl
adc
inc
nop
jp
lods
cmp
in
sti
in
cmp
arpl
xchg
push
sub
mov
leave
adc
mov
mov
lods
xchg
scas
push
pop
jnp
cltd
cmpsl
pop
out
cltd
pusha
inc
cltd
xchg
fidivl
ja
sub
dec
testl
jle
xchg
xor
inc
add
sub
dec
mov
mov
pop
sbbb
and
xchg
lret
adcb
mov
jge
xor
push
test
xor
pop
mov
mov
add
std
push
insl
jge
push
imul
lds
cltd
add
mov
clc
mov
movsb
xchg
fisubrs
or
lret
or
fwait
push
aas
mov
mov
mov
sub
push
shrb
imul
inc
aas
xor
out
mov
movsl
fldenv
xor
sahf
mov
mov
mov
lock
jg
jns
fld
pop
mov
xor
push
sbb
mov
sbb
push
mov
ffree
shr
stos
push
push
mov
fdivrs
lock
in
stos
mov
sbb
jo
mov
movsl
lret
cmp
lods
jno
add
push
mov
repnz
mov
push
loopne
cmp
or
dec
mov
fbstp
add
mov
scas
mov
sahf
inc
lcall
test
nop
popl
nopl
jae
mov
inc
ljmp
xchg
js
fistpll
and
inc
pop
sti
out
push
dec
enter
cmp
push
in
add
out
jp
sarl
repnz
hlt
fs
jb
ja
movsl
int3
sub
dec
xor
mov
ljmp
jae
xor
xor
inc
ds
xor
xchg
lahf
push
push
sbb
lea
adc
testl
inc
mov
dec
outsl
push
push
loop
dec
adc
dec
inc
push
mov
loopne
pop
fists
loopne
xchg
lock
cwtl
pop
jp
jae
fisubl
incb
push
cmp
cli
or
repz
fcomps
pop
xor
sub
lds
jmp
data16
out
jge
inc
fs
loop
adc
dec
push
pop
inc
sarl
jg
xchg
lea
sub
jl
jp
std
cmc
into
or
push
sbb
js
shll
out
ret
dec
cmp
xchg
movsb
subl
mov
add
aam
hlt
iret
push
aam
out
mov
lods
sahf
xchg
testb
ret
aaa
bound
enter
dec
xchg
and
xlat
push
xchg
add
jge
mov
adc
out
dec
xlat
iret
stc
sbb
push
mov
mov
add
adc
mov
mov
jmp
mov
push
push
jmp
mov
cltd
lahf
bound
mov
mov
mov
jns
loope
jg
outsb
repz
sahf
cmc
out
mov
loopne
dec
sti
and
ljmp
mov
or
out
mov
fs
push
sbb
add
cmc
bound
ror
int3
stc
xor
sbb
and
loop
ljmp
rcll
pop
movsb
sub
loopne
cli
lods
mov
add
xchg
clc
xorb
test
inc
dec
push
test
fwait
and
push
push
sub
jmp
xlat
int3
fs
loopne
add
popa
cld
int3
sarb
lea
xchg
sbb
test
inc
push
ja
pop
push
lea
popa
shlb
cmp
sub
shufps
in
push
and
inc
jo
pop
sahf
insl
dec
dec
push
dec
mov
lret
push
popf
inc
mov
in
in
mov
xchg
dec
cwtl
xchg
cmp
add
loop
stos
sub
cmpsb
fcmovnu
std
std
imul
add
out
ret
cmp
jnp
pop
mov
shrl
cmpsl
xchg
stos
sahf
aad
shrb
in
loope
loop
push
push
pop
cmc
test
push
jl
sub
hlt
addb
dec
repz
mov
movsb
leave
xchg
jecxz
bound
out
jmp
test
ret
pusha
sbb
pop
adc
and
in
orb
loop
movsb
stos
xor
call
pushf
push
jnp
add
popf
jecxz
add
aad
in
dec
repnz
daa
or
push
xor
xchg
scas
lret
push
push
mov
xchg
enter
dec
dec
in
sub
pop
call
push
push
movl
ljmp
sub
lods
adc
push
lahf
popa
out
ljmp
jle
negb
jmp
xchg
ja
add
push
mov
fs
jne
movsb
inc
ret
repnz
das
dec
cld
push
dec
into
sub
push
and
lods
imul
popf
icebp
call
cwtl
and
jecxz
and
xchg
js
mov
dec
pop
mov
fmuls
fwait
lea
or
jmp
xchg
adc
jmp
cmp
fbld
mov
sbb
gs
xlat
ret
pop
outsb
xchg
lret
jno
pusha
dec
scas
inc
jge
cwtl
sbbl
test
in
push
in
inc
mov
mov
in
pop
mov
rolb
addb
sub
mov
and
sbbl
cmc
push
rcrb
out
out
clc
sub
aam
xchg
daa
xor
inc
dec
cmp
xchg
sub
pop
scas
dec
pop
dec
mov
cmp
pop
pop
leave
out
setno
lcall
mov
int
into
clc
inc
shr
xchg
cmp
pop
dec
push
test
xchg
add
pop
jno
lds
popf
pop
sbb
es
push
movsl
shl
sarl
xor
sbb
push
xor
les
mov
and
xor
in
cli
lret
test
loope
aas
cmp
push
insb
fsubl
push
add
in
push
add
fcmovbe
stc
sahf
add
xorl
aas
sahf
in
rcrl
push
lea
push
lahf
sti
cs
leave
aas
not
popf
pop
rol
call
jno
std
cltd
int3
xchg
sub
and
negb
sbb
xchg
lock
mov
insb
push
call
mov
push
pushl
lea
push
call
mov
mov
mov
mov
mov
mov
mov
lea
mov
add
movl
jmp
dec
inc
mov
push
push
push
jl
stos
and
sbb
aas
sub
push
dec
cs
mov
xor
mov
xor
fmull
dec
enter
pop
push
mov
cmp
pop
cwtl
sbb
dec
mov
bound
shl
adc
jl
mov
xchg
icebp
scas
dec
sbb
lret
stc
cli
outsb
xchg
mov
mov
out
adcl
flds
xchg
xchg
fwait
cmpsl
imul
std
call
mov
or
mov
jne
jmp
push
add
mov
mov
ljmp
fmull
test
call
test
jo
mov
leave
in
adc
rolb
insb
sbb
sti
push
xchg
or
sahf
lahf
or
mov
icebp
lcall
inc
out
push
pop
divl
inc
jp
xor
jp
mov
mov
dec
add
add
fidivrs
mov
sbb
enter
fxch
jecxz
inc
out
les
add
cld
adc
testl
shll
mov
dec
fstpl
push
daa
sti
test
and
jp
pop
dec
divb
cmpsl
jnp
add
and
lcall
loope
hlt
mov
pushfw
loopne
bound
mov
rcrb
mov
imul
cmc
movsl
dec
sti
rcr
push
negb
js
mov
dec
jmp
and
mov
iret
xchg
mov
add
pop
test
in
jns
or
ljmp
jge
sbb
cmp
cmp
mov
ja
add
cwtl
xor
add
mov
clc
rclb
sbbl
mov
iret
pop
jno
push
call
push
repnz
adc
jle
jno
bts
fsubs
push
xchg
shr
and
aaa
gs
sub
dec
jns
test
inc
inc
pop
jecxz
imul
orl
test
mov
test
inc
and
or
jne
and
push
push
ret
or
push
and
push
sti
push
jo
aad
push
pop
mov
adc
push
mov
psubusb
xchg
sbb
fsubrl
push
mov
movsl
aad
mov
adc
cmp
mov
addr16
ret
jno
sar
mov
scas
cmp
rorl
xor
adc
xchg
icebp
sahf
adc
iret
shll
jge
out
out
inc
pop
jp
repnz
loopne
in
dec
in
pop
imul
imul
loope
dec
xor
mov
or
xchg
insb
sub
js
push
xor
pop
push
mov
add
mov
call
leave
xchg
jo
fs
das
lock
push
xor
into
inc
xor
add
arpl
sti
dec
sub
mov
pop
lret
lea
call
and
imul
into
inc
test
mov
clc
sub
push
and
out
ljmp
push
repz
sbb
mov
xor
insl
aam
lret
cmp
lret
movsl
xchg
sbb
mov
leave
adcl
dec
push
ds
pusha
dec
add
push
nop
push
adc
shrl
aam
cwtl
cmc
fldt
cs
xor
scas
or
lret
sub
cld
je
ss
push
sbb
movl
mov
and
add
and
sub
and
mov
movl
mov
mov
or
add
cmp
je
mov
mov
mov
xor
shld
shl
xor
xor
cmp
jne
cmp
je
mov
mov
mov
mov
xor
xor
shr
shl
or
xor
shld
shl
xor
xor
cmp
jne
cmp
je
mov
cltd
mov
mov
cltd
shld
shr
xor
jmp
inc
mov
and
cltd
cmp
push
aas
push
sbb
xchg
es
sbb
jmp
mov
pop
shrl
cltd
add
fstpl
lcall
push
pusha
mov
fdivrs
jp
cltd
jno
pop
inc
clc
or
mov
addb
push
add
stos
rcr
out
sahf
fbstp
mov
lock
adc
sti
jbe
scas
test
gs
mov
xchg
test
ror
data16
mov
movsl
scas
neg
lock
rol
data16
lcall
out
inc
cmp
cmp
sub
popf
sub
call
cs
idivb
and
je
mov
lea
jnp
cmp
and
bound
popf
xchg
fldl
leave
xor
inc
jg
xchg
bnd
mov
sub
daa
jo
mov
lock
inc
pop
out
dec
jge
xor
out
mov
cmpsb
hlt
xchg
imul
jns
lcall
mov
test
out
xlat
dec
adc
xchg
fisubrl
push
mov
or
jnp
pop
mov
or
movlhps
pop
cwtl
add
pop
sub
pop
fsts
xchg
mov
mov
lock
test
fwait
or
sub
push
adc
dec
addb
mov
into
shl
in
test
lock
jne
scas
lock
xor
stos
fidivs
insl
xchg
dec
mov
mov
sti
iret
nop
repz
outsb
fwait
gs
pop
pop
scas
pop
or
fmul
sbb
pop
mov
loope
cmpl
addb
mov
andl
ret
adc
frstor
lds
nop
sub
mov
sub
lret
in
sbb
stos
movsb
addr16
xor
jge
sar
mov
or
test
loope
out
add
push
sub
into
cmp
test
pusha
inc
andl
mov
mov
repnz
clc
shlb
cmc
xchg
cmpsl
dec
jo
jno
fildll
dec
mov
adc
daa
fnstcw
popf
pop
sbb
orl
mov
dec
jge
xchg
jmp
pop
insl
ja
push
add
inc
cmp
shr
push
ret
fwait
inc
dec
jecxz
dec
int
test
into
ret
out
cmp
pop
clc
cwtl
or
ret
dec
xlat
cmp
js
or
fwait
imul
out
xchg
out
add
shlb
and
movsb
movsl
shll
mov
mulps
lds
mov
bound
jns
or
insb
scas
pop
sti
test
xorb
cmp
test
ja,pt
and
dec
sbb
pop
in
lock
adc
xor
icebp
cmp
cmp
inc
push
and
push
and
outsb
or
gs
bound
sub
jns
xor
into
rcl
or
adc
dec
imul
jmp
jnp
pop
rclb
int
mov
lret
mov
in
clc
les
dec
mov
adc
xor
cmc
mov
cmp
mov
in
das
inc
popf
pop
stos
pop
pop
fisubl
cmp
jp
sarb
cmp
ljmp
fistl
jno
imul
jle
mov
push
push
sbbl
lret
add
and
xor
bound
sbb
xchg
je
or
nop
aam
xchg
pop
mov
fisubl
jb
pop
xchg
rorb
sub
add
sub
insb
popf
add
jecxz
loopne
mov
nop
mov
jg
add
push
cli
movsb
mov
in
scas
adc
fimull
jmp
addr16
adc
pop
ficompl
inc
fnsave
lret
test
fldl
repnz
mov
pop
inc
xchg
data16
lods
xchg
mov
pop
pushf
jo
mov
popl
xchg
das
lods
jb
and
or
loopne
xchg
js
in
dec
out
and
ffree
add
out
inc
cmpsb
mov
lahf
dec
cmp
iret
mov
sub
xor
mov
mov
lods
xorl
adc
add
aaa
push
sti
pop
outsb
push
mov
iret
xor
mov
fsubl
or
adc
pop
int3
std
xor
xor
clc
outsb
jne
mov
stc
dec
xchg
out
mov
rcll
inc
fstl
repnz
or
sub
iret
jbe
xor
pop
xchg
loop
les
clc
popf
popa
imul
push
ss
mov
clc
enter
cli
jge
cltd
add
leave
jecxz
test
ds
mov
lods
das
xor
rclb
sbb
testb
ret
outsb
rorb
mov
adc
adc
aam
add
jno
or
cld
xor
sub
xchg
or
jno
outsb
gs
decl
mov
ror
mov
xor
xlat
mov
nop
push
cmp
arpl
jo
dec
pop
sub
pop
adc
insb
mov
mov
insb
and
sub
jno
mov
cltd
sbb
mov
out
out
mov
fwait
lods
arpl
mov
cld
xor
out
lret
movsb
ss
leave
cld
shrb
or
enter
push
sbb
scas
aam
mov
test
xchg
mov
int
fstl
dec
cmp
mov
rcr
sbb
jp
pop
push
aam
gs
dec
jns
adc
cmc
mov
push
je
sub
notl
pop
jb
je
lods
mov
cmp
ficomps
insb
pushf
je
and
sbb
lea
add
mov
mov
les
mov
push
and
ror
subb
andl
or
mov
inc
into
pop
jne
mov
mov
mov
aaa
cwtl
popl
or
sahf
push
xor
mov
imul
jmp
adc
fwait
adc
jne
outsl
push
call
or
push
push
popf
subb
jne
pop
pop
fsubl
adc
fildl
ja
iret
je
sbb
lock
mov
aad
xchg
sub
dec
rclb
lds
dec
dec
movsb
push
fiaddl
mov
jb
push
aad
shlb
test
xchg
mov
mov
scas
add
inc
dec
sub
jle
inc
lahf
mov
mov
roll
pushf
jne
jno
ljmp
shll
stos
idiv
inc
sub
inc
xor
adc
xchg
inc
cmpsl
mov
mov
ss
call
rol
or
mov
mov
xor
xor
mov
cmp
jne
cmp
je
pushl
pushl
mov
mov
pushl
mov
call
mov
mov
mov
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
or
push
cmpl
movl
mov
mov
movl
jmp
mov
cmpl
jg
push
push
call
sbb
mov
xor
mov
sbb
neg
xor
adc
mov
mov
and
push
mov
mov
sub
imul
push
add
movl
sub
movl
xorl
movl
mov
add
mov
xor
sbbl
div
xor
imul
neg
mov
orl
xor
and
xor
mov
xor
andl
div
orl
sub
cmpl
mov
mov
notl
jmp
movl
notl
cmpl
je
pushl
push
push
pushl
call
add
add
sub
adc
sub
movl
and
mov
mov
mov
sbb
movl
addl
movl
xor
movl
or
jmp
ret
push
sbb
mov
mov
icebp
xorl
mov
push
outsb
negb
mov
das
jno
stos
xor
mov
jge
or
push
push
push
push
aaa
shll
adc
and
push
push
xchg
mov
dec
into
pushf
fisubs
mov
pop
out
and
mov
jmp
add
js
test
fdivs
xor
pushl
mov
jae
sbb
mov
mov
mov
adc
dec
insb
mov
or
lret
int3
daa
cs
inc
iret
cmp
dec
adc
jo
lods
xor
shr
outsl
cs
jmp
test
in
push
arpl
lea
sub
jle
mov
cmpsl
repnz
divb
and
rcrb
idiv
add
xchg
rcrb
push
push
fimull
adc
lcall
aad
insl
dec
popl
mov
push
movsb
jnp
inc
das
sahf
imul
sbb
push
je
dec
jge
insb
xchg
loopne
sbb
lock
add
loope
sub
pop
mov
das
ret
sbb
icebp
cmpsl
xchg
pop
mov
xor
js
dec
nop
loopne
mov
sbb
pop
jnp
lds
push
dec
cmc
movsl
inc
out
push
xchg
mov
dec
inc
sub
ja
pop
cli
sbb
ljmp
inc
cli
mov
push
and
bound
xor
sub
adc
ja
lahf
lea
lahf
add
jo
xchg
mov
cmc
dec
ss
push
sub
mov
or
sbb
dec
jmp
rorl
mov
push
test
or
inc
lds
xorb
int
inc
nop
aad
lea
mov
sbb
js
and
fwait
mov
stos
pop
mov
mov
jo
daa
xchg
cs
out
or
movsl
sar
xchg
ret
jge
repz
std
sbb
fdiv
fcomip
jno
xchg
fcmove
lret
aas
cmp
addb
in
xor
stos
scas
bound
and
xor
mov
lcall
fstps
lretw
test
cli
inc
movsl
outsl
imul
cmp
enter
int
iret
aam
mov
leave
lea
add
and
mov
inc
sbb
adc
dec
shll
pop
addr16
je
jbe
jge
lock
filds
data16
push
sub
call
jl
addb
fsts
and
cmp
repz
lahf
adc
cmp
or
int3
enter
movsl
jp
lods
popl
inc
mov
imull
add
mov
int3
out
sbb
or
outsl
and
aas
out
mov
xor
push
in
subl
outsb
dec
mov
or
jbe
jnp
xchg
xor
test
aas
aas
inc
inc
in
rorb
in
pop
and
fsubrs
imul
pop
push
pop
xorl
add
test
incl
add
sbb
xor
movzwl
sbb
imul
and
mov
cmpl
mov
mov
mov
jmp
movl
cmpl
jb
pushl
push
push
call
sub
inc
and
movl
and
xor
and
and
sub
mov
jmp
adc
fstps
and
cmpsl
repz
jle
sub
sbb
mov
stc
push
out
fldcw
cli
shlb
push
sahf
int
js
mov
jne
into
nop
jl
xchg
ret
ds
sarl
xor
push
jns
call
aam
jno
mov
push
pop
sti
pop
mov
and
mov
mov
jae
pop
or
and
push
rolb
inc
or
inc
sub
mov
test
cmp
cld
jmp
cmp
inc
or
lods
pop
fldcw
inc
and
shrl
cmp
mov
mov
repz
cmp
sarb
mov
jmp
jne
sbb
push
stos
lret
push
mov
xor
movsl
jb
xchg
cmp
mov
inc
cs
xchg
or
xchg
aam
outsl
push
arpl
lds
add
cltd
add
in
and
xchg
dec
out
into
push
push
mov
sahf
push
sbb
out
lcall
xor
pop
hlt
aaa
jb
mov
dec
xor
adc
pop
mov
sub
inc
inc
sub
in
xchg
aam
cmp
mov
fdivs
movsl
sub
shr
sub
push
jge
dec
in
test
mov
cmpsb
inc
cmp
into
dec
adc
ret
cmp
lret
xchg
inc
out
mov
add
inc
push
mov
andl
call
jmp
add
add
cs
add
std
movsb
leave
in
push
jg
enter
imul
sti
and
dec
cmpsb
lahf
lock
push
les
sbb
jb
fldl
pop
xor
push
inc
add
mov
xorl
iret
sahf
lds
push
mov
xchg
cmpsb
mov
bnd
test
add
shrl
test
insl
or
inc
imulb
int3
ja
or
cmp
pop
les
cmp
push
adc
shrb
aad
mov
test
enter
out
mov
and
jno
std
pop
add
xlat
dec
inc
inc
pop
mov
sbb
test
in
mov
movsl
lock
aad
dec
fists
jns
adcl
mov
shll
fisttps
pop
and
pop
fmulp
pop
cmp
sbb
out
rcl
push
cwtl
sub
imul
mov
mov
std
and
mov
icebp
in
sahf
mov
sbb
movb
mov
daa
push
in
or
lods
scas
lock
add
std
repnz
or
incl
and
sub
mov
sbb
mov
add
adc
jge
sbbb
dec
mov
das
xor
outsb
sub
outsl
cld
inc
ljmp
mov
push
cld
lods
lds
xchg
mov
sub
jmp
fdivrl
in
jns
popa
mov
dec
push
push
pop
adc
xchg
andl
stc
jae
gs
dec
notl
dec
jo
imul
push
movl
cmpl
movzwl
mov
mov
jmp
not
mov
cmpl
jbe
pushl
pushl
pushl
push
push
push
push
call
sub
movl
and
or
xor
or
mov
sbb
movl
movl
movl
orl
mov
imul
cmpl
movl
mov
mov
jmp
mov
movl
cmpl
ja
pushl
push
call
sub
incl
add
or
sub
mov
cmpl
not
movl
movl
mov
jmp
movl
cmpl
ja
push
pushl
call
negl
andl
and
movzbl
sbb
mov
subl
and
imul
and
imul
mov
sbbl
and
cmpl
movl
mov
not
jmp
movl
notl
cmpl
jg
push
pushl
push
pushl
push
pushl
push
push
pushl
pushl
call
inc
adc
and
movzwl
add
mov
addl
adcl
dec
subl
or
movl
mov
adcl
xor
or
mov
adcl
mov
xorl
lea
cmpl
mov
mov
mov
notl
jmp
movl
cmpl
jae
push
call
dec
orl
mov
add
sbb
mov
adc
and
mov
mov
mov
xor
movl
not
movl
subl
movl
xor
mov
cmpl
movl
notl
mov
jmp
movl
mov
cmpl
jb
push
push
call
movzwl
xor
mov
add
mov
mov
adc
inc
xor
sub
andl
xor
add
mov
addl
or
andl
add
or
mov
addl
or
add
add
or
xor
mov
cmpl
mov
mov
movl
jmp
movl
mov
cmpl
jne
pushl
push
push
call
sub
xor
add
mov
add
adc
andl
movl
cmpl
mov
movl
movl
mov
jmp
mov
cmpl
jge
push
push
push
call
and
add
adcl
and
sub
subl
movl
or
movl
movl
mov
add
xorl
mov
subl
sub
decl
mov
lea
or
adc
sub
mov
cmpl
movl
movl
mov
jmp
mov
mov
cmpl
je
call
sbbl
xorl
add
andl
or
movl
movl
xor
mov
movzwl
or
add
cmpl
movl
movl
jmp
mov
cmpl
jg
push
call
adc
sbb
movzwl
add
addl
orl
mov
and
imul
mov
addl
imul
xor
mov
div
or
sub
mov
cmpl
mov
mov
jmp
mov
movl
cmpl
jb
push
pushl
call
adc
dec
movzbl
sbb
mov
xor
movzwl
or
xor
add
add
and
movl
cmpl
mov
mov
mov
movl
jmp
not
cmpl
jne
push
push
call
and
mov
or
mov
mov
add
mov
sbb
adc
movl
xor
movl
or
mov
sub
mov
orl
xor
xorl
div
imul
add
cmpl
mov
movl
jmp
movl
movl
cmpl
jne
push
call
and
adc
sub
mov
sbb
mov
andl
add
mov
adcl
xor
or
xor
or
mov
subl
div
cmpl
mov
mov
movl
mov
jmp
movl
cmpl
jbe
push
push
pushl
call
neg
sbb
andl
mov
xor
movzbl
sub
movl
xor
adc
mov
movl
mov
add
mov
movl
xor
movl
cmpl
mov
mov
mov
movzwl
jmp
mov
mov
cmpl
ja
pushl
call
and
xorl
add
or
mov
mov
sbb
sbbl
mov
mov
sub
shr
sub
xor
mov
imul
mov
sbbl
and
xor
mov
sub
mov
movl
movl
sub
mov
xor
or
xor
add
xor
mov
or
sub
mov
adc
movl
sub
movl
movl
cmpl
notl
mov
jmp
mov
cmpl
jne
pushl
call
andl
add
movzwl
and
and
add
mov
mov
sub
and
movl
not
movl
movzbl
or
movl
cmpl
mov
movl
jmp
mov
mov
cmpl
jae
push
call
or
and
adc
adc
sbb
movl
mov
and
add
jmp
test
cmp
pop
cmp
mov
sbb
mov
mov
push
jmp
out
test
xchg
or
inc
pushf
mov
add
bound
cltd
test
outsl
mov
movsb
lods
jge
jnp
cmpsl
out
mov
xor
les
icebp
repnz
test
pop
jno
lock
fidivs
and
fidivs
std
mov
add
push
rorl
leave
bound
mov
into
pop
or
xlat
jge
xor
mov
mov
pop
rdmsr
mov
push
dec
mov
cwtl
jns
rclb
orl
scas
gs
mov
and
lods
pop
push
sub
sub
adc
in
ret
push
stos
es
popf
shr
sub
xor
xor
fistpll
add
ja
dec
popa
aaa
mov
jecxz
push
sub
test
outsl
in
pop
mov
fwait
aas
xor
clc
mov
and
dec
ds
sahf
scas
sbb
mov
das
or
sub
cmp
mov
rcrl
mov
fldl
pushf
imul
and
loop
add
fsubrl
jecxz
repz
inc
sbb
dec
or
daa
mov
shrb
movsl
imul
cli
sahf
mov
mov
xchg
mov
pop
lret
push
mov
dec
inc
lea
adc
outsl
sbb
and
pop
pop
mov
xor
jp
mov
enter
stos
repnz
rcl
push
shlb
incb
jmp
out
std
push
jns
xorb
repz
data16
fidivrl
or
and
fiadds
adc
clc
shll
push
adc
fsub
adc
loopne
xor
cli
sbb
lret
test
repz
add
icebp
xor
dec
and
shl
push
xchg
cmpl
and
mov
cmpsl
mov
mov
pop
bound
daa
fcmovnb
push
push
push
push
mov
movsb
subb
jmp
mov
dec
out
adc
inc
fdiv
xchg
xchg
adc
add
mov
popf
out
pop
mov
call
pop
sub
cmp
shlb
add
fisubl
pop
xchg
int
lds
fistpl
adc
adc
mov
push
stos
mov
adc
mov
loope
sti
or
xchg
stos
adc
push
out
push
or
push
cltd
sub
rorl
adc
jo
pop
inc
push
nop
mov
stos
mov
fcmovnu
rorb
nop
jbe
mov
int
rol
popa
mov
pop
pop
in
sub
dec
insb
orl
testl
xor
add
inc
mov
push
lods
pop
pop
sbb
xor
stc
shrl
xor
movsb
hlt
xchg
iret
bound
test
lock
mov
xchg
jmp
incl
add
addb
rorl
add
mov
imul
imul
mov
or
and
mov
subl
lea
addl
push
addl
call
cmpl
mov
mov
mov
movl
jmp
movl
notl
cmpl
jae
pushl
push
pushl
pushl
push
call
adc
xor
add
mov
mov
sub
and
sbb
mov
mov
add
imul
sbb
add
and
cmpl
mov
mov
movzwl
jmp
movl
mov
cmpl
jae
push
call
movzwl
add
adc
addl
and
or
sbb
sub
cmpl
movl
movl
movl
notl
jmp
mov
cmpl
je
push
pushl
call
subl
movzwl
xor
mov
mov
or
xor
add
orl
xor
addl
mov
div
xor
xor
add
adc
mov
sbbl
movl
movl
cmpl
movl
mov
jmp
movzwl
cmpl
jne
push
pushl
push
push
pushl
call
mov
sbb
and
sbb
mov
or
mov
mov
sub
and
adc
movl
movl
adc
movl
cmpl
not
movl
jmp
movl
notl
cmpl
jge
push
push
push
pushl
call
xor
mov
or
mov
mov
and
and
and
mov
xor
movzwl
and
mov
sub
movl
xorl
movl
sbb
movl
jmp
movsl
mov
push
and
stos
mov
sbb
sbb
out
cmp
pusha
jnp
sub
mov
popa
jg
nop
cli
sbb
push
cld
mov
jnp
test
xchg
pop
lea
inc
dec
pop
xchg
dec
inc
lret
or
fadds
xchg
pop
xorb
mov
add
xor
or
ljmp
scas
ret
scas
jae
mov
in
mov
outsl
sbb
push
arpl
inc
cmp
mov
push
das
dec
lds
push
lock
out
cmp
fbld
push
pop
pop
lahf
adc
mov
lcall
add
in
inc
xchg
jno
sarb
ret
adc
sti
pop
jae
adc
test
adc
dec
mov
inc
addl
pop
cs
ficoml
repz
pop
pop
sub
jg
arpl
aam
fst
lods
pop
xchg
sbb
dec
cmp
inc
incl
imul
pop
add
cmp
ljmp
pop
call
testb
jns
or
aaa
imul
dec
outsb
pop
test
dec
push
xlat
cwtl
sbb
jo
mov
sub
or
push
pop
arpl
scas
fdivrp
insb
addl
mov
push
push
and
loop
push
mov
add
mov
arpl
mov
fidivrs
pop
mov
dec
imul
dec
js
jno
cmpsb
sbbl
popf
movb
xor
test
adc
rcrl
inc
ret
jmp
mov
and
fiadds
loopne,pn
cmpsl
mov
add
add
fidivs
stos
cwtl
test
cmp
leave
dec
std
pop
enter
or
cmp
pop
outsb
pop
dec
call
jo
stc
xchg
dec
inc
jmp
sti
and
rclb
xchg
bound
or
lcall
mov
stos
dec
jne
popf
cwtl
lods
ja
pushf
adc
icebp
mov
notb
imull
dec
faddp
xor
popf
sbb
mov
lret
test
dec
dec
bound
inc
popf
xchg
dec
pop
xchg
xchg
stc
dec
push
mov
cmp
mov
cmp
xchg
shlb
inc
ds
xlat
cmp
pushf
sbb
and
cmp
test
movsl
add
mov
stc
sbb
sbb
pop
loopne
or
add
dec
jnp
or
inc
lahf
adc
fldl
jbe
inc
jne
imull
test
das
pushf
adc
xchg
push
fstp
jmp
adc
mov
inc
enter
shr
lods
cmp
adc
dec
mov
xchg
jb
pop
pop
je
pop
or
push
push
mov
ret
cwtl
dec
xor
inc
pop
mov
pop
pop
cwtl
and
xorb
cmp
aaa
lds
popa
outsb
xchg
rcr
aam
jne
cmp
test
pusha
imul
test
lcall
add
movl
movl
xor
movl
xorl
mov
cmpl
movzwl
mov
jmp
movl
movl
cmpl
jne
push
push
call
subl
inc
inc
and
and
sbb
and
mov
adc
mov
mov
sub
and
add
sub
cmpl
mov
mov
jmp
movl
cmpl
je
pushl
push
pushl
pushl
call
mov
or
xor
add
mov
sub
or
mov
or
add
sbb
sub
or
jmp
mov
lds
stos
xorb
pop
scas
mov
pop
push
sbb
inc
jb
jmp
push
xor
push
xchg
push
lret
jp
jno
xor
sub
test
notl
in
ss
aam
mov
jl
ja
cmp
iret
sbb
pop
lahf
dec
sbb
sub
add
popl
mov
repz
and
lock
sub
sub
inc
popf
dec
arpl
or
xchg
fnsave
push
cli
xor
loop
fldcw
and
loopne
cli
mov
pop
std
xchg
sub
ror
sbb
cmpsb
sti
bswap
mov
mov
popl
test
adc
inc
jge
mov
stc
movsl
lret
jns
imul
jb
sbb
divl
rorl
cs
call
xor
xor
push
fistpll
fs
pop
imul
icebp
loopne
aaa
or
mov
jno
xchg
xor
push
xchg
push
sti
mov
ljmp
je
outsl
iret
mov
mov
push
test
cli
test
dec
imul
xchg
loop
and
shrl
or
mov
dec
push
inc
gs
stos
add
sbb
imul
xor
jge
or
subl
cld
or
aas
dec
inc
imul
inc
mov
jae
add
rol
push
or
sahf
mov
es
jae
cmpsb
mov
jecxz
jns
cmp
nop
jne
push
mov
aaa
insl
in
mov
sbb
adc
arpl
add
rep
inc
das
mov
add
add
pop
in
daa
push
inc
and
xchg
cmp
dec
mov
mov
pop
fimull
test
popf
sbb
jecxz
fwait
push
mov
push
loopne
popa
dec
and
outsb
shlb
pop
pop
lods
popf
fiaddl
js
add
lock
push
pop
insl
daa
sbb
aaa
sub
sub
pop
cs
jecxz
mov
cltd
test
scas
in
mov
jmp
in
dec
mov
fs
fistl
cltd
stos
int3
cmp
and
cmp
aad
mov
shlb
daa
dec
jo
inc
mov
cmp
sub
loope
mov
and
and
cmc
mov
cmpsb
jecxz
dec
push
jb
ja
jp
aam
push
cli
mov
adc
fisttpll
popa
loop
out
nop
out
sbb
sub
xchg
mov
in
nop
mov
dec
mov
jg
inc
loop
cmp
orl
xor
xor
adc
or
das
daa
aaa
xchg
shll
push
mov
test
popf
js
push
pop
xchg
aad
pop
pop
dec
fucomp
das
pushf
lea
xchg
iret
dec
in
mov
push
and
adc
std
shlb
daa
jnp
rorl
xor
sub
fsubrl
les
sarb
xchg
cld
xchg
add
add
xor
imul
cmpl
mov
movl
jmp
mov
movl
cmpl
jle
push
push
call
add
xor
adc
xor
mov
or
mov
and
negl
dec
movzwl
sbb
mov
mov
xor
add
xor
add
sub
xor
lea
cmpl
movl
mov
mov
jmp
movl
cmpl
ja
pushl
pushl
pushl
call
neg
xor
or
xor
add
sub
or
sub
mov
sbb
mov
add
subl
cmpl
mov
movzbl
movl
mov
jmp
movl
cmpl
jle
pushl
call
xor
add
xor
mov
sbb
movzwl
or
mov
decl
subl
mov
mov
mov
add
mov
neg
xor
cmpl
movl
movl
movl
mov
jmp
movl
cmpl
jae
pushl
push
pushl
push
pushl
call
sbb
adc
and
sbb
add
mov
lea
and
mov
sub
add
mov
movl
movl
movl
movl
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
jmp
test
fdivr
and
lcall
xchg
push
jle
movhps
jb
sbb
ja
idiv
andb
scas
test
sbb
xor
es
insb
sbb
sbb
adc
pushf
jp
push
dec
sti
daa
jg
adc
or
ret
cs
xor
and
lret
and
mov
adc
int
out
loopne
cmp
hlt
js
pop
mov
adc
cmp
in
sbb
dec
jp
push
mov
inc
inc
sbb
adc
fs
call
jae
fwait
xchg
adc
subl
inc
leave
mov
inc
rol
fdivs
lods
mov
xor
inc
std
and
xchg
xchg
cmp
test
mov
mulb
sbb
push
or
mov
cs
jns
xor
sbb
dec
xchg
std
fimuls
mov
jp
arpl
mov
pop
adc
cmp
js
negb
xchg
ss
jmp
dec
dec
shrl
jl
mov
adc
push
mov
in
pop
cmp
in
push
movsl
fld
cmp
mov
dec
and
popa
mov
xchg
jl
dec
lods
pop
push
imul
ss
aaa
ret
data16
xchg
les
mov
mov
push
loopne
jae
add
lods
stos
clc
rclb
ret
push
outsl
sub
lds
push
push
rorl
push
cmp
or
sub
and
inc
xchg
jno
gs
cmpsb
xchg
mov
add
lahf
mov
pop
iret
fcoml
incb
outsb
pop
mov
fdivrs
push
les
push
pop
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
mov
call
mov
or
mov
or
push
push
push
push
call
mov
cmp
jne
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
mov
mov
call
or
mov
or
push
push
push
push
call
mov
jmp
jmp
lea
mov
mov
movl
mov
xor
shr
mov
xor
shl
or
mov
mov
mov
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
mov
call
mov
or
mov
or
push
push
push
push
call
mov
cmp
je
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
imul
add
mov
mov
mov
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
mov
mov
call
or
mov
or
push
push
push
push
call
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
xor
div
mov
and
add
mov
lea
xor
add
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
xor
div
add
mov
and
xor
add
mov
mov
sub
mov
or
mov
and
mov
xor
mov
mov
sub
mov
imul
xor
xor
mov
mov
add
add
mov
movl
movl
movl
movl
movl
movl
mov
xor
mov
imul
mov
lea
mov
and
and
xor
push
pop
div
imul
mov
and
mov
or
add
imul
mov
xor
xor
mov
mov
add
add
mov
movl
movl
movl
movl
movl
movl
mov
xor
push
pop
div
mov
or
mov
xor
div
imul
mov
lea
mov
and
and
sub
xor
mov
xor
mov
and
and
or
mov
mov
add
lea
mov
andl
jmp
mov
inc
mov
mov
mov
cmp
je
mov
mov
mov
add
mov
mov
mov
mov
mov
movl
movl
movl
movl
lea
mov
mov
movzwl
xor
movzwl
sar
mov
movzwl
xor
movzwl
shl
or
movzwl
mov
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movzbl
push
lea
push
call
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
add
mov
mov
cmp
je
mov
mov
movzwl
xor
movzwl
sar
mov
mov
movzwl
xor
movzwl
shl
or
movzwl
mov
mov
mov
movzwl
xor
movzwl
sar
mov
mov
movzwl
xor
movzwl
shl
or
mov
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
or
je
lea
mov
mov
xor
mov
call
mov
mov
mov
xor
mov
call
or
or
xor
xor
mov
mov
mov
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movsbl
cmp
je
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
movsbl
cmp
je
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movsbl
cmp
jne
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
add
mov
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
cmpl
je
mov
mov
movzwl
mov
mov
mov
jmp
jmp
cmpl
jne
xor
jmp
mov
add
mov
movl
cmpl
je
cmpl
je
mov
shl
mov
movl
sub
mov
movl
mov
cmp
je
mov
mov
mov
mov
mov
mov
mov
inc
mov
jmp
movl
push
jmp
mov
mov
ret
cmpl
movl
movl
movl
movl
jmp
mov
cmpl
jbe
push
call
incl
subl
incl
adc
orl
not
push
push
sbb
mov
or
jne
mov
mov
xor
div
xorl
mov
mov
div
mov
mov
jmp
mov
sbb
mov
cmpl
mov
movl
mov
jmp
movl
movl
cmpl
jle
push
call
xorl
sub
sbbl
dec
not
mov
mov
shr
rcr
shr
rcr
or
jne
div
mov
mull
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
xor
mov
pop
pop
ret
orl
subl
movl
cmpl
movl
je
xor
add
mov
mov
mov
pop
pop
pop
leave
ret
cmp
movl
jae
movl
cmp
movl
jae
orl
shld
movl
shl
ret
inc
mov
subl
xor
and
shl
ret
xor
xor
ret
add
jmp
es
jno
ja
int3
fsubrl
jo
popa
insb
push
lods
xor
insb
popa
outsb
add
add
addr16
popa
je
jb
popa
je
jb
popa
je
jb
popa
je
jb
popa
je
jb
popa
je
jb
popa
je
jb
popa
je
jb
popa
je
jb
popa
je
add
insb
insb
push
gs
insb
push
gs
insb
push
gs
insb
push
gs
insb
push
gs
insb
push
gs
insb
add
add
outsl
add
add
jne
je
xor
xor
add
add
push
add
add
push
add
add
push
add
add
push
add
add
push
add
add
push
add
add
push
add
add
push
add
add
push
add
add
add
add
in
and
dec
insb
gs
arpl
push
outsl
inc
jne
jae
jb
je
inc
add
daa
inc
add
daa
inc
add
and
push
mov
movsb
popf
movsb
jno
xchg
movsb
or
movsb
sbb
movsb
roll
adc
movsb
popf
movsb
jno
xchg
movsb
or
movsb
xor
movsb
mov
in
xchg
movsb
adc
movsb
popf
movsb
sbb
movsb
fwait
movsb
xchg
sub
cs
push
adc
movsb
fwait
movsb
add
movsb
sbb
movsb
shll
shrl
or
push
pop
outsb
adc
movsb
fwait
movsb
add
movsb
xor
movsb
andl
imull
dec
adc
movsb
fwait
movsb
jae
popf
movsb
sbb
movsb
fwait
movsb
andl
testl
movsb
aaa
movsb
fwait
movsb
jae
popf
movsb
pop
movsb
xchg
movsb
push
movsb
mov
inc
rorl
imulb
xchg
movsb
aaa
movsb
fwait
movsb
jae
popf
movsb
cmp
movsb
fwait
movsb
xchg
mov
mov
out
adc
xchg
movsb
aaa
movsb
fwait
movsb
jae
popf
movsb
cmp
movsb
fwait
movsb
andl
imul
push
into
adc
xchg
movsb
cmp
movsb
popf
movsb
jnp
xchg
movsb
fwait
movsb
xchg
movsb
shl
shr
lock
test
cs
push
push
adc
xchg
movsb
adc
movsb
cmp
movsb
fwait
movsb
lea
or
push
push
outsb
adc
xchg
movsb
add
mov
and
inc
add
inc
add
and
inc
add
es
add
inc
add
inc
add
daa
inc
add
and
push
movsb
scas
or
movsb
mov
inc
add
inc
add
add
es
add
and
inc
add
es
add
and
inc
add
inc
out
sbb
inc
add
es
add
loopne
jbe
pop
cmpsb
add
inc
add
rcl
pop
jle
add
outsl
arpl
pop
xor
cmpsl
mov
xchg
test
and
push
movsb
stos
fiadds
movsb
cmpsb
fiaddl
movsb
mov
fiaddl
movsb
mov
fiaddl
movsb
mov
push
movsb
mov
push
movsb
mov
push
movsb
out
fiaddl
movsb
decl
adc
xchg
and
test
inc
add
loop
js
lcall
and
add
nop
and
and
addb
add
hlt
clc
sarb
sub
jle
add
add
jl
add
jmp
push
movsb
jg
inc
movsb
push
movsb
inc
movsb
std
movsb
jmp
movsb
push
movsb
dec
movsb
std
movsb
jmp
movsb
push
movsb
jg
std
movsb
jmp
movsb
dec
movsb
inc
movsb
jne
pop
movsb
jnp
dec
movsb
fwait
movsb
xor
xor
xor
xor
inc
xor
xor
xor
xor
xor
inc
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
push
shlb
rcll
into
xchg
dec
xor
sbb
push
je,pn
mov
imul
leave
daa
dec
out
pushf
mov
dec
xchg
lock
inc
or
js
popa
pop
jecxz
movb
cs
aas
inc
leave
testb
jl
mov
jb
pop
sub
inc
add
fbld
adc
popa
arpl
popa
outsl
gs
jae
outsl
insb
gs
in
jg
ja
jp
inc
push
movsl
push
dec
gs
popa
push
jne
jae
imul
inc
jae
imul
jb
gs
lds
xor
fs
push
gs
popa
insl
imul
add
add
push
mov
jb
jno
or
lods
repnz
je
je
js
cmc
outsl
insl
popa
imul
popa
jb
push
imul
mov
jns
outsl
addr16
add
sub
icebp
gs
jae
popa
je
insl
add
in
mov
insl
imul
gs
add
jne
popa
or
popa
push
loope
stos
je
push
popa
jb
jae
imul
loope
aad
jb
imul
je
adc
outsl
gs
imul
outsb
shrl
ja
outsl
popa
outsb
gs
imul
imul
inc
jb
sbb
jo
addr16
jo
fs
xchg
in
jno
iret
jbe
or
cwtl
int
std
pop
fsubrs
dec
xor
stc
inc
adc
dec
sbb
mov
jns
dec
sbb
xchg
cmp
in
jno
iret
jbe
or
int
std
pop
jns
pop
xor
stc
inc
icebp
das
int
mov
mov
jns
xchg
lret
rolb
jno
jbe
or
int
std
pop
fdivs
int
stc
inc
icebp
test
mov
int
mov
addl
rolb
jno
jbe
or
cwtl
int
std
pop
ret
cmp
xchg
stc
inc
adc
test
ret
xchg
aad
lds
iret
jbe
or
int
std
pop
pop
insb
cmp
stc
inc
icebp
push
int
mov
mov
jns
test
lcall
jbe
xorl
sbb
and
int
adc
mov
add
add
lods
clc
icebp
jo
jge
aad
clc
icebp
jo
adc
incl
jo
jo
jo
xor
cwtl
add
add
xchg
or
addb
jecxz
hlt
scas
rolb
sub
iret
pop
iret
push
out
int
adc
out
sub
or
rolb
subb
sub
cmc
sub
in
aad
add
mov
fcmovnbe
out
pushf
xchg
test
fs
mov
iret
int3
call
jno
imul
int
std
xor
movsl
das
pop
push
or
sub
xchg
iret
les
addb
add
addl
adc
inc
jns
fldlg2
es
or
add
mov
add
addl
jns
insl
and
push
add
test
push
add
push
mov
test
lret
addb
in
outsl
rcl
jge
outsl
xchg
addb
sahf
mov
jno
popa
mov
addb
push
jge
push
xchg
addb
jge
push
xchg
addb
rorb
jo
std
xor
movsl
inc
xor
or
addl
addl
int
popf
aam
shlb
or
xchg
aam
int
icebp
int
xchg
or
or
or
pushf
stos
sahf
popa
mov
mov
mov
roll
int
or
adc
int
mov
lods
xchg
lret
rorb
in
push
int
or
daa
addl
or
mov
gs
addl
xchg
or
addb
xor
int
mov
int
xor
xor
lea
das
add
addb
int
mov
cli
test
int
jge
xacquire
insl
insb
shrb
outsl
lods
xchg
inc
addl
lea
cli
test
mov
and
xchg
mov
dec
ja
pop
rcll
int
fidivl
jecxz
xchg
or
in
inc
add
test
jecxz
jecxz
movsl
pop
cmpsb
lods
addb
lods
mov
mov
addb
shll
test
add
leave
int
or
cmpb
movsl
jecxz
mov
in
in
addb
movsl
int
mov
rcll
leave
xor
pop
jbe
jnp
int
xor
movsl
int
cmp
inc
inc
add
jle
clc
or
std
das
pop
adc
cmp
or
add
mov
xor
les
int
sub
stc
xor
sbb
inc
int
inc
int
std
xor
xor
pusha
lret
arpl
test
xor
in
popf
adc
addb
shl
mov
and
mov
jbe
shrl
lods
or
stc
test
int
jne
pop
insl
shl
test
in
xchg
pop
insl
xchg
int
jge
les
xor
les
adc
addb
mov
shll
xor
ja
lret
je
pop
shl
mov
xchg
xor
int
das
mov
push
das
rcll
pop
mov
ja
int
pop
orb
jmp
mov
insl
iret
les
test
mov
xor
mov
insl
add
or
cwtl
int
mov
int
int
jns
mov
sub
add
cwtl
int
jns
test
add
mov
jns
xchg
cmp
add
add
inc
addl
leave
jbe
inc
and
or
int
stc
int
stc
pop
cwtl
lcall
ljmp
cmp
sarl
jbe
int
stc
int
stc
cmp
sarl
ljmp
int
stc
int
stc
cmp
sarl
ljmp
int
stc
int
stc
cmp
sarl
ljmp
leave
jbe
dec
and
mov
and
sarb
jbe
or
sarb
ror
jbe
jo
addb
addb
stc
cmp
cmp
sarl
push
rorb
jbe
int
stc
int
stc
cmp
cmp
sarl
push
rorb
jbe
leave
jbe
arpl
lods
pop
addb
addb
add
iret
push
xchg
incl
add
add
lea
xchg
fcmove
jbe
dec
insb
addb
stc
cmp
sarl
cmp
shl
sub
or
int
stc
int
stc
add
cmc
cmpb
sarl
repnz
or
mov
sbb
addb
push
or
int
dec
or
int
mov
cmc
or
rolb
mov
in
or
push
addl
lea
or
pop
addl
stc
int
stc
cmp
cltd
shr
xchg
shr
sub
inc
jge
add
int
mov
add
mov
jbe
int
xor
addb
int
adc
adc
add
int
mov
mov
int
xchg
rolb
bound
jno
cmp
push
push
add
add
cmpsl
aad
leave
push
pop
add
add
adc
add
mov
push
insb
add
add
iret
outsb
add
add
insl
leave
push
sub
add
push
cmpsl
aad
leave
push
xor
add
push
xor
cmp
add
mov
push
inc
add
add
iret
addr16
add
add
jbe
int
adc
mov
int
mov
add
addb
mov
leave
jbe
mov
cmp
leave
jbe
xlat
sbb
push
les
add
push
cmpsl
aad
leave
push
nop
add
add
xlat
inc
leave
push
aam
add
cmp
jge
push
faddl
add
mov
shll
add
xlat
sbb
push
pushf
add
add
cmpsl
aad
leave
push
movsb
add
add
xlat
inc
leave
push
lods
add
add
dec
push
jge
push
mov
add
mov
shll
add
ret
sbb
jo
jbe
add
int
stc
int
stc
cmp
cmp
shl
sub
mov
lea
testb
int
mov
lds
psrlq
sub
mov
lea
insl
inc
shrl
or
addl
int
mov
rclb
addl
add
addb
jo
cwtl
xor
lea
addb
int
adc
mov
insl
iret
pop
pushf
add
add
jo
jbe
int
inc
addl
adc
pop
adc
mov
insl
iret
pop
les
add
mov
jo
jbe
int
inc
addl
mov
pop
adc
mov
insl
iret
pop
push
add
add
jo
jbe
int
inc
addl
pop
orb
xor
push
cmp
sahf
clc
add
shrb
pop
shlb
xchg
xor
int
pop
add
mov
adc
int
mov
pop
adc
mov
insl
iret
xchg
add
jo
jbe
int
cmp
push
add
in
test
or
add
pop
sub
sub
lea
ljmp
sarl
push
ror
pop
cmc
incl
add
jo
jbe
int
stc
int
mov
lds
lock
push
ror
pop
xchg
incl
add
jo
xchg
or
xchg
stc
cmp
jmp
shr
sub
inc
jge
mov
jbe
addl
cmp
sarl
repnz
xchg
or
int
cmp
int
mov
lea
sarl
push
roll
xchg
int
mov
lea
shl
sub
mov
lea
insl
inc
shrl
pop
push
incl
add
ljmp
lea
jge
xor
mov
jbe
jo
stc
jl
orb
jne
sbb
jbe
int
mov
xchg
mov
or
cltd
shr
xchg
shr
sub
push
mov
jbe
int
stc
cmp
cmp
shl
sub
mov
lea
shrl
add
int
stc
int
stc
cmp
cmp
shl
sub
mov
std
inc
shrl
add
int
stc
int
stc
cmp
cmp
sarl
push
shr
adc
lea
or
cltd
shr
xchg
shr
sub
xchg
int
std
inc
roll
or
int
jne
jbe
ret
dec
and
leave
jbe
inc
and
int
inc
cmp
cmp
sarl
push
rorl
jbe
int
inc
int
inc
cmp
cmp
sarl
push
rorl
jbe
leave
jbe
dec
and
ret
xor
lea
lds
psrlq
sub
mov
lea
push
xchg
addb
cmp
jns
or
lods
sub
jmp
push
jge
jbe
xor
cmp
clc
add
jbe
int
sbb
lds
psrlq
sub
mov
lea
int
sbb
lds
psrlq
push
rorl
jbe
int
cmp
lds
psrlq
push
ror
lea
jbe
int
inc
int
inc
cmp
cmp
shl
sub
mov
lea
pusha
xchg
addb
or
jbe
or
xchg
or
pop
inc
and
leave
jbe
cmp
xchg
and
int
xchg
int
xchg
cmp
cmp
sarl
push
rorl
jbe
int
jmp
addl
add
and
push
xchg
add
add
and
insl
int
icebp
int
icebp
cmp
cmp
sarl
push
ror
lea
rcl
int
insl
lret
or
int
int
icebp
int
icebp
cmp
cmp
shl
sub
mov
lea
rcl
int
adc
or
cltd
shr
xchg
shr
sub
xchg
int
insl
das
pop
dec
mov
push
jo
add
int
jo
add
cmp
cmp
ljmp
pop
lea
test
test
xchg
icebp
cmp
cltd
shr
sub
jmp
push
adc
xchg
jge
rcll
int
insl
or
icebp
int
icebp
cmp
cmp
sarl
push
ror
lea
rcl
int
insl
lret
or
int
int
icebp
int
icebp
cmp
sarl
repnz
int
jge
rcl
int
pop
int
pop
cmp
cltd
shr
xchg
shr
sub
xchg
int
insl
das
pop
dec
mov
push
xchg
add
add
pop
xchg
add
add
lds
cltd
sarl
push
rolb
test
test
test
xchg
icebp
cmp
cltd
shr
sub
jmp
push
adc
xchg
jge
rcll
int
insl
or
xor
sub
mov
lea
xchg
pop
cmp
cltd
shr
xchg
shr
sub
das
rcl
xchg
or
int
jge
lea
incl
add
jbe
int
pop
cmp
shl
sub
xchg
push
ror
lea
lea
xchg
push
ror
lea
sub
or
int
popf
int
popf
cmp
shl
sub
xchg
push
ror
lea
or
jmp
cmp
adc
xchg
in
sbb
jbe
int
popf
cmp
cmp
sarl
push
roll
push
int
popf
int
popf
cmp
sarl
repnz
int
lods
xor
jbe
int
popf
cmp
cmp
mov
xchg
push
das
rcl
inc
shrl
pop
adc
add
int
stc
int
stc
int
std
or
int
mov
lea
or
jmp
cmp
addb
jno
lea
xchg
cmp
cltd
shr
xchg
shr
sub
jno
stc
int
stc
add
xor
shr
xchg
shr
sub
jno
jo
int
stc
int
stc
cmp
cltd
shr
xchg
shr
sub
or
inc
jge
add
int
stc
in
int
or
push
cmpsb
lods
int
lods
shr
xchg
cmp
lods
sub
int
jne
dec
orl
mov
lea
or
cltd
shr
sub
jmp
push
adc
xchg
mov
jge
jbe
cmp
add
std
add
std
shr
sub
leave
int
std
int
std
shr
xchg
shr
sub
cmp
inc
rcl
mov
lea
add
addl
shr
sub
jno
stc
int
stc
cmp
cltd
shr
xchg
shr
sub
jno
jne
jo
int
or
int
xor
jbe
cmp
add
test
xor
jbe
int
mov
jbe
int
mov
jns
aad
lods
sub
repz
push
ror
xchg
jne
test
jbe
add
test
xlat
int
std
cmp
add
test
xor
jbe
int
mov
jbe
int
mov
jns
aad
lods
sub
repz
push
ror
xchg
jne
test
jbe
add
test
xlat
int
jne
jbe
int
mov
lea
shl
sub
mov
stc
or
leave
jbe
imul
imul
gs
into
and
addb
sarl
lds
jbe
rol
lods
xchg
or
int
cmp
lods
sub
lods
lret
int3
das
imul
lret
inc
rcl
jle
jbe
int
mov
jbe
int
mov
jns
or
lods
sub
jmp
push
jge
jbe
cmp
lods
sub
lods
cmp
xchg
jbe
add
std
add
std
shr
sub
lock
and
jbe
in
and
jbe
int
stc
cmp
cmp
sarl
push
ror
stc
int
stc
cmp
cltd
shr
xchg
shr
sub
inc
jge
add
int
or
out
leave
jbe
mov
xchg
and
dec
mov
lods
imul
and
xor
jbe
int
lods
int
lods
cmp
jmp
cmp
adc
lea
or
jmp
cmp
addb
jno
lea
xchg
cmp
cltd
shr
xchg
shr
sub
jno
lea
or
cltd
shr
xchg
shr
sub
jno
jo
or
int
mov
lea
or
jmp
cmp
addb
jno
lea
or
cltd
shr
xchg
shr
sub
jno
lea
cmp
shr
xchg
shr
sub
jno
jo
int
mov
jbe
int
mov
or
jns
jmp
shrl
jbe
inc
jge
add
int
mov
xchg
mov
or
cltd
shr
xchg
shr
sub
inc
lea
addb
and
add
mov
lea
add
lea
jmp
add
scas
or
aaa
sbb
add
addb
add
add
add
jno
cmp
add
add
lods
jno
lea
lea
shll
jno
mov
or
int
mov
lea
add
addl
shr
sub
jno
lea
or
cltd
shr
xchg
shr
sub
jno
add
int
rcl
insl
xchg
cmp
inc
leave
int
mov
lea
addb
cmp
cltd
shr
xchg
shr
sub
jno
lea
or
cltd
shr
xchg
shr
sub
jno
jne
jo
int
lods
or
int
cmp
cmp
or
cltd
shr
xchg
shr
sub
jno
lea
or
cltd
shr
xchg
shr
sub
jno
lods
add
int
std
or
int
jne
out
or
leave
jbe
inc
and
int
push
cmp
or
lods
sub
jmp
push
rorl
jbe
int
push
int
push
cmp
or
lods
sub
jmp
push
rorl
jbe
leave
jbe
dec
and
ret
xor
lea
jns
or
jmp
shrl
lea
push
xchg
addb
xchg
int
inc
cmp
cmp
sarl
push
jge
jbe
xor
cmp
clc
add
jbe
int
lods
int
lods
cmp
or
jmp
shrl
lea
int
lods
int
lods
cmp
or
lods
sub
jmp
push
rorl
jbe
int
xchg
int
xchg
cmp
or
lods
sub
jmp
push
ror
lea
jbe
int
push
int
push
cmp
or
jmp
shrl
lea
pusha
xchg
addb
or
jbe
or
cmp
inc
and
leave
jbe
cmp
xchg
and
int
cmp
jns
or
lods
sub
jmp
push
rorl
jbe
int
jmp
addl
add
and
push
jl
add
mull
xchg
int
icebp
int
icebp
cmp
or
lods
sub
jmp
push
ror
lea
rcl
int
pop
lret
or
int
int
icebp
int
icebp
cmp
jns
jmp
shrl
lea
rcl
int
gs
cmp
cmp
shl
sub
repz
push
adc
das
pop
dec
mov
push
mov
add
int
mov
add
cmp
aad
lods
sub
repz
push
rolb
loope
jge
loope
insl
lret
int
icebp
int
icebp
cmp
cmp
shl
xchg
shl
sub
int
jge
rcll
int
pop
or
icebp
int
icebp
cmp
or
lods
sub
jmp
push
ror
lea
rcl
int
pop
lret
or
int
int
icebp
int
icebp
cmp
lods
sub
or
jmp
push
ror
lea
rcl
int
insl
int
insl
cmp
cmp
shl
sub
repz
push
adc
das
pop
dec
mov
push
jl
add
int
jl
add
cmp
aad
lods
sub
repz
push
rolb
loope
jge
loope
insl
lret
int
icebp
int
icebp
cmp
cmp
shl
xchg
shl
sub
int
jge
rcll
int
pop
or
and
or
jns
jmp
shrl
lea
xchg
insl
cmp
cmp
shl
sub
repz
push
adc
rcl
xchg
or
int
jge
lea
incl
add
jbe
int
insl
cmp
jmp
cmp
lods
sub
int
or
lea
sub
int
cmp
xchg
push
rorl
jbe
int
popf
int
popf
cmp
jmp
cmp
lods
sub
int
popf
int
popf
cmp
shl
sub
aad
repz
push
adc
xchg
in
sbb
jbe
int
popf
cmp
or
lods
sub
jmp
push
roll
inc
int
popf
int
popf
cmp
lods
sub
or
jmp
push
ror
lea
popf
int
popf
cmp
aad
repz
shrl
xchg
inc
das
rcl
inc
shrl
pop
adc
add
int
mov
dec
iret
jbe
add
mov
jbe
int
xchg
addl
icebp
addl
jne
test
addb
stc
int
stc
cmp
cmp
shl
sub
mov
lea
rcl
push
int
mov
lea
add
addl
shr
sub
jno
stc
int
stc
cmp
cltd
shr
xchg
shr
sub
jno
jne
jo
stos
test
lret
rorb
add
and
int
int
sub
pop
subb
dec
addl
addb
das
add
int
or
das
add
add
int3
addb
addb
add
int
and
mov
or
xor
shrb
mov
mov
mov
das
add
iret
jl
pop
or
add
or
add
cmc
subb
xchg
das
mov
mov
mov
in
push
push
aam
int
add
stc
subb
xchg
mov
sahf
dec
xchg
aam
iret
ficoms
out
int
std
int
push
add
xchg
cmpsb
mov
and
das
mov
sahf
dec
add
add
std
mov
sbb
mov
mov
add
add
mov
pop
out
subb
jo
das
mov
adc
mov
pop
xchg
adc
or
arpl
insl
insb
in
xchg
cmp
lret
lds
sub
jbe
add
xor
fstpl
add
inc
pop
pushf
test
insl
insb
in
fmul
insb
faddl
and
jo
int
adc
fcompl
lea
std
inc
clc
jnp
or
std
or
fsub
inc
pushf
adc
xchg
mov
int
iret
push
ror
push
add
ds
mov
out
inc
stc
fdivs
int
dec
int
in
popf
inc
cld
ja
int
in
mov
out
or
adc
not
dec
int
stc
dec
or
sbbb
cmp
test
lret
rorb
add
push
pop
cwtl
pop
dec
and
leave
jbe
inc
and
int
std
lcall
psrlq
xchg
stos
cmp
shl
sub
or
int
std
int
std
int
std
int
std
int
std
int
std
int
std
int
std
int
std
leave
jbe
fadd
loope
int
std
int
std
cmp
cmp
shl
sub
jmp
push
or
cmpsb
dec
int
sub
push
das
add
int
std
int
std
cmp
cmp
shr
xchg
shl
sub
inc
adc
add
int
add
std
int
std
cmp
xchg
shl
sub
inc
adc
add
xchg
int
cmp
shl
xchg
shl
sub
or
inc
icebp
aam
int
std
int
std
cmp
cmp
ljmp
int
adc
adc
test
xor
jbe
int
std
cmp
cmp
ljmp
int
adc
adc
je
xor
add
int
std
int
std
int
std
int
std
cmp
cmp
in
xchg
push
popf
int
adc
adc
ror
jl
xchg
int
std
int
std
cmp
cmp
shr
xchg
shr
sub
int
std
or
lea
cltd
cmp
shl
sub
repz
push
jecxz
lea
xchg
int
std
int
std
cmp
cmp
shr
xchg
shr
sub
xchg
jbe
popa
and
or
in
int
dec
int
adc
xor
jbe
add
in
int
adc
dec
leave
jbe
popl
dec
pop
xchg
xchg
std
cmp
cmp
shr
xchg
shr
sub
or
inc
jge
pop
int
stc
int
stc
cmp
lock
sub
mov
lea
fnstcw
psrlq
sub
int
adc
xchg
push
jecxz
rcl
bound
jo
int
std
int
std
cmp
lock
push
roll
mov
and
jbe
int
popf
cmp
cmp
mov
push
jge
fldt
pop
xchg
add
add
jbe
int
std
cmp
lock
push
roll
mov
and
jbe
int
stc
cmp
lock
push
roll
addl
leave
jbe
fdivr
sbb
int
std
int
std
cmp
xchg
shrl
sbb
std
int
std
cmp
lock
push
rorl
jbe
int
std
int
std
cmp
lock
push
rorl
jbe
int
std
int
std
cmp
cmp
shrl
push
jge
jbe
inc
jge
xchg
test
jbe
int
sbb
jbe
int
std
cmp
lock
sub
mov
in
inc
rcl
push
int
std
int
std
cmp
cmp
repnz
mov
in
shr
sub
aam
int
in
int
dec
int
adc
lret
jno
mov
jo
in
push
int
cmc
xchg
int
dec
int
adc
xchg
jo
mov
jno
or
int
std
int
std
cmp
lock
sub
mov
cmc
inc
ror
jbe
int
stc
xor
jns
lock
push
roll
cmp
cmp
repnz
mov
cmc
das
rcl
int
lods
or
stc
cmp
lock
push
roll
int
std
cmp
cmp
repnz
mov
lea
push
or
add
int
adc
lea
insb
sarl
test
int
icebp
push
dec
and
add
int
std
int
std
cmp
lock
push
rcrl
mov
stc
int
stc
in
xchg
jbe
int
std
cmp
cmp
shl
sub
mov
arpl
rorb
add
xor
jbe
dec
and
inc
and
or
cwtl
int
int
std
int
std
sar
shll
xchg
cltd
shr
sub
mov
xchg
mov
das
add
int
mov
xchg
mov
xchg
cmc
leave
jbe
popa
and
int
stc
cmp
rcl
mov
xchg
std
int
std
cmp
cmp
shr
sub
repz
push
fxch
out
pop
xchg
leave
fsubrl
add
int
cmc
int
mov
or
mov
out
xor
pop
int
std
cmp
cmp
in
push
cld
or
add
int
std
int
std
cmp
cmp
shl
xchg
shr
sub
or
mov
xchg
out
cmp
cmp
shl
xchg
shr
sub
jmp
addb
std
add
cmp
sarl
push
cltd
iret
ja
jecxz
inc
cltd
das
add
addb
jo
or
mov
mov
das
addb
in
xchg
int
in
xchg
repz
mov
mov
adc
dec
and
or
int
in
cmp
add
call
repz
sarl
xchg
mov
xchg
in
int
dec
int
dec
cmp
add
call
mov
push
cltd
int
mov
int
dec
int
dec
cmp
add
call
mov
push
cltd
int
mov
int
in
int
movsl
addl
mov
push
xchg
add
add
stc
int
stc
cmp
add
call
mov
push
cltd
int
adc
out
inc
aam
in
sub
xchg
std
int
std
cmp
add
call
repz
sarl
cltd
int
test
das
push
test
add
arpl
jbe
cmp
int
lods
add
ljmp
std
cmp
int
std
cmp
shl
sub
mov
lret
rorb
adc
xchg
addb
and
inc
and
int
std
cwtl
lcall
xor
xchg
mov
sub
or
int
std
int
std
cmp
mov
repnz
or
int
and
jbe
int
in
cmp
or
adc
dec
mov
cmc
int
cmc
cmp
or
adc
dec
lahf
xchg
lea
cmp
or
adc
imul
mov
lea
mov
jbe
dec
and
hlt
mov
insl
das
add
int
dec
push
insl
das
add
int
sbb
insl
das
add
int
and
jbe
int
mov
mov
addb
addl
cmp
mov
repnz
or
int
std
int
std
int
mov
lea
outsb
jo
lea
insl
das
add
leave
jbe
dec
and
int
xchg
pop
int
xchg
cmp
loop
mov
push
popf
or
int
std
int
sub
xor
bound
int
std
int
std
int
and
sbb
xchg
dec
inc
fst
push
cmc
int
adc
lods
int
cmc
cmp
add
call
jmp
shr
sub
int
dec
bound
xchg
jo
add
int
dec
int
xchg
int
jo
jge
xchg
jo
dec
xchg
int
xor
sbb
xchg
xchg
add
mov
or
pop
fs
das
mov
xor
jbe
int
std
int
std
cmp
add
shl
sub
mov
mov
and
jge
add
int
std
int
std
cmp
add
shl
sub
mov
jbe
int
stc
int
stc
add
cmp
repnz
mov
mov
pop
lea
addb
mov
lea
xchg
lea
or
jl
icebp
aam
clc
icebp
sub
xchg
in
xchg
int
jo
outsb
test
test
int
mov
lea
xchg
std
cmp
add
call
jmp
shr
sub
pop
lea
mov
popf
int
test
lds
add
sbb
stc
int
stc
cmp
shr
xchg
add
incl
push
adc
and
jbe
int
stc
int
stc
add
cmp
repnz
mov
lea
mov
pop
lea
add
int
and
sbb
cmp
lea
int
adc
lods
int
adc
sti
call
jmp
shr
sub
int
dec
bound
xchg
xchg
pop
add
push
insl
das
add
int
and
or
or
cmp
add
call
jmp
shrl
add
int
std
int
std
cmp
add
sarl
push
rorl
jbe
pop
push
jl
or
leave
jbe
sbb
shr
lahf
xchg
jbe
dec
and
xchg
iret
inc
shl
xchg
adc
scas
cmp
lea
add
cli
xchg
xchg
add
or
mov
jbe
or
iret
outsb
std
iret
jno
or
or
leave
push
jo
add
sub
pushf
add
add
pop
movsb
add
add
push
lods
add
add
xchg
add
sbb
les
add
popa
lahf
xchg
add
sbb
aam
add
call
iret
faddl
add
leave
push
in
add
mov
add
jbe
and
or
jbe
inc
lahf
xchg
jbe
pusha
lahf
xchg
and
int3
push
jo
add
shr
xchg
add
scas
or
test
add
sbb
addl
add
int
adc
inc
add
add
add
or
iret
jbe
jo
or
push
int
jge
icebp
int
std
int
std
cmp
add
sarl
push
rorl
jbe
int
std
int
std
cmp
add
call
lods
sub
jmp
push
jge
jbe
inc
rcl
xchg
or
in
das
int
int
jne
jbe
int
mov
int
sbb
mov
addl
addl
int
sub
xchg
dec
int
cmp
xor
jo
int
stc
int
stc
cmp
add
sarl
push
rorl
jbe
int
and
pop
mov
push
insl
das
add
add
and
lock
mov
push
insl
das
add
int
and
lock
mov
push
insl
das
add
lcall
push
insl
das
add
int
and
sbb
sbb
or
addl
int
dec
add
and
or
or
cmp
add
call
jmp
shrl
dec
and
int
mov
jbe
shr
xchg
adc
scas
cmp
sbb
insb
cmp
lea
lds
outsb
adc
jbe
leave
addb
sub
pushf
test
jbe
int
sub
outsb
mov
jbe
int
sub
outsb
dec
in
adc
jbe
int
cmp
lea
lds
outsb
adc
jbe
add
or
icebp
addl
cmp
int
arpl
xchg
cmp
test
shlb
xchg
int
jno
das
mov
mov
mov
leave
jbe
dec
and
push
lret
aam
popa
shll
xchg
out
xchg
pop
out
orb
mov
pop
out
cmpb
std
int
std
cmp
add
call
jmp
in
xchg
push
cld
add
std
add
test
sub
adc
dec
and
int
std
int
std
cmp
add
call
jmp
shr
sub
inc
stc
xorb
rorb
add
push
leave
jbe
mov
jbe
xchg
addb
addb
test
lods
addb
addb
addb
addb
addb
addb
addb
mov
stc
cmp
clc
add
repnz
and
movb
addb
or
cmc
icebp
lea
jnp
addb
addb
std
ss
pushf
addb
int
push
jp
addb
int
std
xchg
int
std
xchg
xor
jbe
int
in
sbb
cmpb
int
mov
fadds
jbe
xchg
popa
fists
xor
xchg
int
xor
out
adc
mov
subb
int
xchg
adc
mov
addb
clc
int
icebp
push
out
addb
icebp
adc
pop
push
addb
add
add
adcb
pop
cwtl
lcall
or
adc
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
movsl
dec
bound
addb
dec
pop
and
pop
xchg
mov
stc
xor
jbe
int
stc
sub
int
cmc
dec
inc
outsl
addb
xor
int
in
push
sarb
fisubrl
ret
add
clc
test
push
addb
int
mov
leave
das
sarl
fisttpl
xchg
mov
popa
addb
push
addb
addb
addb
addb
pop
lcall
xchg
lods
int
mov
int
popf
xor
int
xchg
cmpsb
push
addb
mov
ret
jbe
int
icebp
int
or
int
xchg
xor
inc
test
inc
or
rol
addb
cmp
clc
hlt
int
gs
ss
push
addb
add
xchg
jbe
int
stc
sub
int
cmc
dec
inc
outsl
addb
xor
int
in
push
sarb
hlt
int
dec
xor
int
mov
leave
das
rol
int
xor
das
pop
pop
add
add
mov
in
jo
jbe
xchg
aaa
ficoms
pop
mov
jbe
leave
jbe
mov
jbe
leave
jbe
fidivs
ficoms
or
pop
leave
jbe
scas
aaa
ficoms
or
cwtl
lcall
adc
jbe
cmp
cmp
pop
dec
and
out
ficoms
jp
jbe
int
or
iret
xchg
addl
push
ror
je
ror
xor
pushf
test
inc
loop
shr
xchg
int
int
test
insl
adc
cmpsb
mov
or
xchg
in
inc
jbe
das
or
jbe
add
mov
int
stc
push
insl
aam
cmp
out
int
mov
fs
xchg
mov
lret
xchg
add
xchg
stc
xchg
lret
int
lods
or
lret
int
stc
xchg
int
mov
adc
int
cmc
insb
add
std
sarl
push
sarb
rorl
jbe
push
cmc
int
cmc
add
call
repz
shrl
xchg
stc
inc
rolb
int
adc
xchg
stc
int
mov
test
int
stc
iret
adc
int
dec
shl
sub
cmp
or
push
adc
xchg
adc
call
repz
shrl
xchg
stc
xchg
xor
or
inc
lds
pop
outsl
add
add
jbe
int
mov
ljmp
mov
ror
popf
int
cmp
in
or
or
add
in
xchg
or
test
lret
rorb
add
adc
jbe
leave
jbe
dec
and
inc
and
cwtl
or
leave
jbe
into
and
in
inc
sbb
int
std
sar
shll
xchg
repnz
adc
out
xchg
push
add
lea
int
adc
jge
jmp
shr
sub
das
roll
jmp
addb
xchg
stc
cmp
shr
sub
jge
jmp
push
adc
xchg
std
int
std
cmp
cmp
shl
xchg
shl
sub
push
adc
xchg
stc
int
stc
aam
cmp
shl
sub
icebp
shl
xchg
push
jecxz
std
int
std
cmp
loope
jmp
shl
sub
aad
int
in
int
in
cmp
loope
jmp
shl
sub
cmp
in
sub
lock
sub
icebp
shl
xchg
push
jecxz
std
int
std
cmp
loope
jmp
shl
sub
aad
or
int
std
cmp
jmp
shr
sub
xchg
int
cmc
int
cmc
cmp
cmp
ljmp
int
std
int
std
cmp
cmp
shl
sub
repz
push
aad
adc
das
pop
pop
add
add
jbe
int
mov
jbe
arpl
rolb
insl
pop
jbe
aam
pop
jbe
fdivs
lret
or
das
adc
in
addb
lea
lret
or
insb
inc
jbe
subb
stc
std
add
cmpsb
rorb
adc
cmp
addb
xchg
jbe
inc
and
dec
sub
jno
cli
arpl
jbe
int
adc
subl
repnz
or
leave
jbe
into
and
inc
sbb
mov
int
std
int
std
cmp
shl
sub
jns
mov
lea
int
adc
jmp
shr
sub
das
rcl
in
outsb
int
cmc
int
cmc
sarl
push
sarl
lds
jbe
iret
jbe
jo
mov
jbe
int
stc
int
cmc
or
add
jbe
int
std
cmp
lock
push
roll
cmc
int
in
int
in
cmp
shl
sub
jns
mov
std
int
std
cmp
cmp
shr
xchg
shr
sub
xor
int
cmc
inc
jge
mov
jbe
int
mov
jns
lock
push
rorl
jbe
leave
jbe
bound
xchg
addb
jbe
cmp
shrl
jmp
push
jge
jbe
aad
or
int
mov
orb
in
lret
int
stc
das
pop
insl
cmp
or
int
in
int
in
cmp
mov
repnz
int
cmc
sub
int
push
popf
cld
add
int
popf
cmp
or
int
std
int
std
cmp
lock
push
roll
std
int
std
cmp
lock
push
sarl
jbe
int
adc
lea
cmp
cmp
repnz
mov
lea
imul
add
jbe
int
mov
jns
lock
sub
mov
int
stc
test
shll
rolb
in
xor
lret
pop
lcall
addb
roll
cwtl
sub
lahf
xor
std
or
stc
mov
lret
cmp
leave
jbe
adc
addb
mov
jecxz
mov
stc
iret
dec
into
mov
pop
das
mov
mov
das
mov
mov
fs
adc
das
mov
mov
mov
jge
pop
cmc
aam
leave
jbe
sbb
stc
int
mov
jecxz
mov
inc
in
dec
add
leave
jbe
push
addb
int
mov
lret
pop
dec
sub
push
add
add
cmc
sbb
push
jb
add
cmp
arpl
rolb
jecxz
mov
mov
adc
int
add
mov
inc
add
mov
adc
iret
js
or
iret
js
or
iret
js
or
iret
pop
or
cmp
addb
or
jbe
iret
pop
out
addb
pop
xor
pop
iret
pop
inc
addl
pop
xchg
addl
addb
xchg
icebp
or
or
mov
adc
or
and
lea
out
cmp
adc
jnp
ficoms
das
inc
cli
xchg
rcll
xchg
or
mov
out
int
or
cmp
shl
sub
int
mov
addb
cld
push
lock
stc
das
add
adc
mov
or
and
jbe
mov
movsl
int
jge
or
cmpsb
or
jnp
ficoms
das
inc
add
out
xchg
cmp
cmp
push
or
clc
add
add
add
lea
or
lea
icebp
mov
dec
stc
pop
sbb
mov
xor
std
xor
icebp
mov
xchg
adc
add
mov
jmp
and
lea
cmpsb
or
shr
sub
notl
shr
xchg
push
lock
aaa
ficoms
or
or
or
cmpsb
or
jnp
ficoms
das
inc
add
out
xchg
cmp
cmp
push
or
clc
push
comiss
xor
add
int
stc
push
imull
add
int
fs
push
faddl
int
and
jp
int
sbb
cltd
or
xchg
xchg
in
or
or
xchg
cmpsb
cmc
cmp
or
fcom
in
xchg
jbe
int
or
inc
lcall
ja
int
mov
xchg
mov
and
or
xchg
sbb
mov
jbe
or
push
addb
pusha
adc
jo
jbe
int
xor
int
stc
int
in
push
insl
aam
int
std
or
std
test
lea
movsl
push
or
or
int
test
lret
rolb
int
mov
pop
adc
mov
int
cmp
lret
pop
mov
shll
fwait
sbb
cwtl
int
pop
lahf
xor
cmp
jecxz
mov
xchg
add
xchg
das
mov
repz
mov
sbb
lds
sbb
jmp
dec
add
addl
mov
lret
cli
sbb
adc
or
sbb
leave
stos
lds
mov
addb
and
cmc
xchg
aaa
ficoms
or
aaa
ficoms
or
jbe
dec
and
inc
and
out
ficoms
or
fidivs
ficoms
or
int
adc
inc
icebp
xchg
shl
xchg
int
in
int
adc
ljmp
cmp
cmp
push
jns
jbe
iret
jbe
or
int
or
xor
ficoms
or
std
int
std
cmp
shr
xchg
sar
cmp
shr
sub
int
std
int
std
cmp
popf
shl
sub
xchg
int
std
int
std
cmp
popf
shl
sub
xchg
int
std
int
std
cmp
popf
shl
sub
xchg
or
nop
add
add
lea
icebp
cmp
shr
sub
jmp
push
adc
xchg
mov
cltd
cmp
in
push
aad
int3
pop
aam
add
int
dec
int
int
std
int
std
int
jo
popf
cmp
in
push
aad
int3
pop
aam
add
int
xor
xchg
xor
icebp
cmp
shr
sub
jmp
push
adc
xchg
std
int
std
cmp
cltd
shl
xchg
shl
sub
int
std
cmp
mov
shl
sub
xchg
int
adc
int3
pop
aam
add
int
adc
add
shl
sub
jns
mov
std
int
std
add
cmp
shr
sub
jmp
push
adc
xchg
std
int
std
cmp
repz
shl
sub
xchg
int
std
int
std
cmp
in
shl
xchg
push
aad
adc
add
add
push
nop
add
add
jbe
int
std
sar
cmp
or
mov
push
shll
jbe
iret
or
addb
addb
int
push
or
lea
shr
xchg
int
lods
int
mov
leave
cmp
push
icebp
bound
xor
repnz
inc
mov
int
lods
int
mov
inc
jge
shr
xchg
int
lods
int
mov
leave
cmp
push
icebp
bound
push
shl
sub
cmp
inc
sti
add
int
std
int
std
cmp
repnz
jns
mov
std
int
std
cmp
shr
xchg
cmp
shr
sub
xchg
int
std
int
std
cmp
shr
xchg
cmp
shr
sub
xchg
int
std
int
std
cmp
shr
xchg
cmp
shr
sub
xchg
or
nop
add
add
jbe
int
int
mov
aad
jmp
shr
sub
or
add
jbe
int
int
std
int
std
cmp
shr
xchg
int
jo
aad
ljmp
aam
add
int
sbb
lea
or
repnz
jns
mov
std
int
std
cmp
cmp
shr
sub
jmp
push
adc
xchg
std
int
std
cmp
hlt
call
in
push
aad
adc
add
add
jbe
int
std
add
call
repnz
jns
mov
std
int
std
add
cmp
shr
sub
jmp
push
adc
int
std
add
cmp
shr
sub
jmp
push
adc
pop
nop
add
add
xchg
std
int
std
xchg
cmp
int3
push
aam
add
int
sub
hlt
call
repz
shl
sub
iret
or
addb
addb
xchg
and
insl
aam
int
in
int
adc
inc
jge
shr
xchg
int
int
int
in
int
adc
fidivrl
lock
push
adc
xor
jo
xchg
push
in
push
int
int
push
lret
or
int
cmc
int
stc
das
inc
jge
shr
xchg
int
cmc
int
stc
cmp
cmp
shl
sub
lea
push
lds
int
inc
jo
lea
or
xchg
xchg
push
int
dec
int
int
xchg
sbb
dec
xchg
sub
lea
int
int
push
xor
int
int
xchg
jbe
or
das
inc
jge
shr
xchg
int
in
int
adc
leave
cmp
shl
sub
or
int
xor
les
in
int
adc
inc
jge
shr
xchg
int
in
int
adc
repnz
lea
leave
cmp
add
stc
push
inc
shrl
add
addb
movsb
dec
mov
jge
cmpsb
xor
lea
xchg
das
inc
rcll
jbe
int
xchg
shrl
cmp
cmp
push
or
cmpsb
stc
das
inc
popf
xchg
or
int
cmc
push
out
add
dec
shr
xchg
int
stc
cmp
mov
int
cmc
int
stc
das
inc
or
shrl
shr
xchg
int
stc
cmp
shrl
cmp
push
fcmovne
lea
mov
ror
icebp
or
int
xchg
das
inc
rcll
jbe
int
xchg
shrl
das
mov
cmp
dec
or
rorl
mov
or
and
shrl
ficoms
cmp
fidivs
ficoms
ss
or
cs
int
xor
add
mov
int
xor
xchg
int
orl
push
and
add
in
test
int
adc
jbe
leave
jbe
scas
aaa
ficoms
or
int
jne
inc
jge
shr
xchg
int
insl
int
jne
repnz
lea
cmp
cmp
push
shl
int
inc
inc
mov
int
xor
xor
insb
test
jbe
int
in
int
adc
inc
jge
shr
xchg
int
in
int
adc
fnstsw
leave
push
sub
adc
push
mov
std
int
std
cmp
shr
xchg
sar
cmp
shr
sub
int
std
int
std
cmp
popf
shl
sub
xchg
int
std
int
std
cmp
popf
shl
sub
xchg
int
std
int
std
cmp
xchg
shl
sub
xchg
or
nop
add
add
lea
xchg
mov
cltd
cmp
in
push
aad
int3
pop
aam
add
int
dec
int
int
std
int
std
int
jo
cltd
cmp
in
push
aad
int3
pop
aam
add
int
sbb
xchg
sbb
icebp
shr
sub
psrlq
xchg
push
adc
xchg
std
int
std
cmp
cltd
shl
sub
repz
push
aad
cmpsb
std
cmp
hlt
call
mov
push
lds
aam
add
int
std
int
std
cmp
shr
xchg
sar
cmp
shr
sub
int
std
int
std
cmp
popf
shl
sub
xchg
int
std
int
std
cmp
popf
shl
sub
xchg
iret
xchg
movsl
or
add
iret
nop
add
add
std
int
std
cmp
int
sub
icebp
shr
xchg
shr
sub
jno
pop
out
addb
addl
add
dec
int
mov
mov
dec
int
cmc
int
stc
das
inc
jecxz
shl
xchg
int
cmc
int
stc
cmp
shr
sub
xchg
cmc
cmp
push
bswap
stc
das
inc
sti
xchg
shr
xchg
int
cmc
int
stc
cmp
cmp
push
aad
adc
xchg
cmc
sarl
das
inc
sti
xchg
shr
xchg
int
cmc
int
stc
cmp
cmp
push
aad
adc
xchg
cmc
sarl
das
inc
sti
xchg
shr
xchg
int
cmc
cmp
int
stc
cmp
push
flds
dec
sarl
add
int
or
rclb
xchg
int
add
inc
pop
cwtl
lcall
popf
aaa
ficoms
pop
mov
jbe
leave
jbe
xchg
aaa
ficoms
or
leave
jbe
dec
mov
cmc
dec
lahf
xchg
and
cmp
xchg
and
jbe
int
sbb
shlb
jbe
int
sbb
add
xor
pop
xchg
fs
popf
int
and
out
int
movsl
das
inc
add
out
int
movsl
adc
cmpsb
mov
shr
sub
pop
push
aad
nop
int
or
int
xor
xchg
dec
iret
xchg
lods
bound
stc
jno
cwtl
add
sbb
jbe
add
mov
cmc
add
adc
in
jo
jbe
jo
stos
clc
add
or
int
sbb
lea
outsb
adc
jbe
leave
addb
lods
int
and
outsb
test
jbe
int
and
outsb
mov
jbe
int
and
outsb
dec
int
and
insb
and
addb
sbb
lea
or
and
xorb
or
int
std
stos
test
lret
rcrb
xchg
int
int
dec
adc
cmp
cwtl
lcall
push
mov
jbe
inc
and
dec
addb
ficoms
pop
mov
jbe
leave
jbe
xchg
aaa
ficoms
or
int
mov
jbe
int
cmc
int
mov
or
or
pop
jle
addb
mov
insl
mov
sarl
xor
mov
nop
xchg
iret
sahf
int
mov
aad
or
mov
jno
int
mov
leave
xchg
mov
ficomps
or
pop
mov
or
lret
mov
or
insb
add
add
push
add
add
outsb
add
add
add
inc
mov
add
iret
outsb
xor
add
add
xor
add
mov
add
int
mov
add
int
in
int
adc
inc
jge
shr
xchg
int
in
int
adc
cmpsb
mov
cmp
shl
sub
in
outsb
iret
aam
mov
int
das
mov
cmp
sti
and
shl
das
push
adc
int3
test
lea
inc
jecxz
shl
xchg
int
mov
mov
push
psrlq
sub
popa
int
in
int
adc
inc
jge
shr
xchg
int
in
int
adc
leave
cmp
shl
sub
in
outsb
iret
aam
add
sbb
mov
sti
and
shl
das
push
adc
int3
test
incl
add
lea
inc
jecxz
shl
xchg
int
mov
mov
push
psrlq
sub
popa
int
in
int
adc
inc
jge
shr
xchg
int
in
int
adc
leave
cmp
shl
sub
in
je
push
jbe
add
add
sbb
mov
sti
and
shl
das
push
adc
int3
test
lea
inc
jecxz
shl
xchg
int
mov
mov
push
psrlq
sub
mov
add
or
int
stc
pop
inc
pop
inc
xchg
or
daa
or
int
mov
add
int
mov
mov
xor
pusha
addl
addb
mov
add
int
mov
add
pop
es
push
std
incl
add
xor
push
incl
add
xor
push
addb
add
or
xchg
add
add
jbe
pop
dec
xor
iret
test
add
add
bound
add
pop
push
xor
iret
mov
add
add
pushf
mov
add
int
mov
add
pop
add
addb
add
cmp
adc
cmpb
add
mov
addb
add
pop
lcall
adc
add
int
xor
call
repnz
or
adc
jbe
int
dec
cmp
mov
shl
sub
leave
add
add
add
incl
add
jbe
int
xor
jns
mov
shl
sub
jo
push
stc
incl
add
jbe
int
cmp
push
sbb
add
inc
lret
fwait
xor
adc
icebp
or
int
stc
push
insl
aam
adc
or
fmull
int
dec
int
dec
sar
setl
icebp
shr
sub
jmp
push
adc
xchg
cmc
int
and
dec
das
push
popa
test
int
dec
cmp
shr
xchg
cmp
shr
sub
int
cmc
int
in
addb
int
dec
cmp
shr
xchg
cmp
shr
sub
int
cmc
int
add
pop
xor
mov
add
int
mov
add
pop
es
iret
sub
add
pop
daa
xor
iret
xor
add
add
test
add
add
xor
iret
cmp
add
add
mov
or
cmp
add
pop
fwait
xor
iret
inc
add
add
or
or
inc
add
add
xor
iret
dec
add
add
pop
addb
add
pop
cmp
addb
add
jns
movsl
cmpsl
pop
pop
adc
iret
push
add
add
pop
mov
add
jns
fisttps
jbe
inc
jns
loope
pop
fcom
addb
add
jns
lods
push
pop
jnp
addb
add
jns
repnz
ljmp
mov
add
jns
in
int
xor
xchg
xor
icebp
shr
xchg
shr
sub
in
xchg
int
xor
out
cmp
stc
shr
sub
xor
das
pop
mov
int
xor
out
cmp
stc
shr
sub
int
stc
add
adcl
fwait
addb
movsw
int
xor
lea
cmp
sub
repz
push
jecxz
stc
xchg
int
xor
out
cmp
xchg
shr
sub
add
mov
stc
inc
adc
int
xor
icebp
shr
xchg
shr
sub
or
adc
lea
dec
cmp
cmp
shr
sub
jmp
push
adc
xchg
movsl
or
add
xor
mov
rcl
int
mov
loopne
mov
leave
test
loopne
mov
leave
loop
or
cmp
cli
mov
add
cld
mov
add
cli
mov
loopne
mov
leave
test
loopne
mov
leave
loop
or
popa
mov
or
or
int
dec
cmp
cmp
shr
sub
jmp
push
adc
xchg
dec
int
dec
cmp
mov
jmp
mov
or
int
dec
int
dec
cmp
cmp
shr
xchg
shr
sub
int
dec
iret
mov
out
shl
xchg
cmp
shr
sub
das
mov
or
int
dec
int
dec
cmp
shr
sub
psrlq
xchg
push
adc
xchg
dec
int
dec
cmp
stc
shr
sub
mov
incl
add
lea
dec
cmp
shr
sub
psrlq
xchg
push
adc
xchg
dec
int
dec
cmp
stc
shr
sub
mov
incl
add
lea
int
xor
icebp
cmp
shr
sub
jmp
push
adc
xchg
xor
out
cmp
xchg
shr
sub
xchg
or
adc
lea
dec
int
mov
icebp
cmp
shr
xchg
shr
sub
iret
push
nop
incl
add
add
add
jbe
mov
int
xor
xchg
xor
cmp
stos
cmp
shr
xchg
shr
sub
or
add
jbe
int
dec
cmp
mov
repnz
aam
iret
push
adc
int
xor
lea
cmp
mov
repnz
jo
push
and
add
jo
jbe
rolb
int
dec
cmp
lock
mov
mov
push
ror
iret
movsb
incl
add
int3
push
sbb
jbe
mov
int
xor
xchg
xor
psrlq
xchg
add
call
ljmp
sbb
sub
xor
push
jo
add
iret
mov
mov
add
pop
adc
push
bound
add
int
mov
add
int
mov
add
add
sub
jge
or
mov
mov
mov
add
add
pusha
mov
add
iret
mov
or
les
add
int
mov
add
iret
loopne
pop
add
iret
enter
iret
mov
mov
add
mov
add
add
stc
mov
add
int
pop
leave
xor
iret
addb
add
jge
or
aam
add
int
mov
add
cmp
or
add
add
addr16
add
leave
push
lods
add
add
xor
fadds
add
jae
jno
mov
int
xor
xchg
xor
call
repnz
jns
mov
lea
add
cmp
repz
push
jecxz
lret
add
sbb
lret
cmp
inc
cli
das
or
addb
das
add
addb
xchg
xor
psrlq
xchg
add
call
ljmp
aad
cmp
add
lea
int
xor
psrlq
xchg
add
call
jmp
jge
int
lea
add
mov
repnz
mov
jecxz
lea
int
xor
psrlq
xchg
add
call
jmp
jge
or
add
lea
int
xor
sti
call
jmp
shr
sub
int
xor
add
cmp
repz
push
jecxz
lret
add
sbb
lret
cmp
inc
cli
das
or
pop
pop
add
add
cmpsb
mov
jne
jbe
int
mov
or
insb
test
jbe
int
jge
inc
jge
shr
xchg
int
jne
xchg
jge
leave
cmp
push
icebp
int
cmc
bound
jo
push
cmc
incl
add
repnz
int
in
int
adc
inc
jge
shr
xchg
int
in
int
adc
repnz
iret
cmc
incl
add
mov
leave
cmp
push
rolb
das
push
push
addb
jbe
ficoms
pop
mov
jbe
or
int
xchg
int
popf
das
inc
jge
shr
xchg
int
xchg
int
popf
cmp
cmp
push
icebp
bound
xor
repnz
pop
xor
push
repnz
int
xchg
int
popf
das
inc
jge
shr
xchg
int
xchg
int
popf
cmp
cmp
push
icebp
bound
pop
xor
repnz
pop
sub
xchg
repnz
int
xor
mov
jle
xchg
lea
inc
rcll
jbe
int
icebp
cmp
shrl
ror
lea
push
jge
dec
int
popf
addl
jbe
int
xor
cmp
cmc
add
sub
and
sbb
adc
test
add
or
adc
add
int
cmp
fcoml
aam
int
cmp
fsubl
aam
int
adc
add
int
cmp
outsb
sbb
push
add
cmp
cmc
mov
stos
test
lret
shlb
xchg
int
jno
cwtl
leave
jbe
dec
and
inc
and
int
std
sar
shll
xchg
sti
sarl
push
jns
mov
int
std
aam
int
std
cmp
cmp
sarl
push
jns
dec
inc
adc
pop
int
xor
jbe
cmp
push
add
push
pop
lret
or
das
push
fcmovbe
dec
add
adcl
fwait
addb
dec
adc
in
addb
lea
lret
or
js
clc
orb
int
stc
cmp
int
stc
add
ljmp
std
cmp
int
std
cmp
shl
sub
mov
lret
rorb
int
add
leave
jbe
dec
and
xchg
jbe
or
int
adc
add
lea
addl
lea
std
cwtl
lcall
jns
mov
shl
sub
or
int
std
int
std
cmp
mov
repnz
or
int
mov
insb
jo
mov
int
mov
insb
pop
int
mov
push
outsb
xchg
int
mov
sbb
insb
pop
int
mov
jle
jl
icebp
sub
jbe
int
pop
xchg
in
xchg
insb
xchg
or
int
std
int
std
cmp
lock
push
rorl
jbe
int
std
int
std
cmp
lock
sub
mov
jbe
int
std
int
std
cmp
cmp
repnz
mov
lea
or
jbe
cmp
xchg
and
imul
xchg
int
std
cmp
lock
push
rorl
jbe
int
mov
jbe
add
popf
add
dec
int
mov
neg
add
or
int
adc
insl
aam
int
popf
or
int
movsl
int
dec
xor
or
int
adc
lea
dec
int
movsl
inc
jge
sbb
jbe
int
dec
int
adc
outsb
mov
lea
test
xchg
jbe
inc
and
cmp
xchg
and
or
iret
jbe
or
iret
jbe
or
iret
jbe
or
int
std
int
std
cmp
lock
push
rorl
jbe
jmp
xchg
and
xchg
popf
iret
jbe
jo
xlat
filds
add
jbe
int
stc
cmp
lock
sub
mov
jbe
or
int
xchg
sarl
in
push
popf
or
int
stc
cmp
shl
sub
jns
mov
stc
int
stc
cmp
cmp
shr
xchg
shr
sub
xchg
int
movsl
or
sub
jbe
int
stc
cmp
lock
push
shll
dec
iret
jbe
jo
sti
std
add
int
std
int
std
cmp
lock
sub
mov
lea
int
std
int
std
cmp
lock
push
shll
dec
iret
jbe
jo
mov
jbe
int
cmc
int
int
cmp
cmp
repnz
mov
je
ror
std
int
std
cmp
cmp
shr
xchg
shr
sub
pop
insl
push
adc
das
add
int
adc
lea
int
int
cmp
cmp
repnz
mov
je
ror
std
int
std
cmp
cmp
shr
xchg
shr
sub
pop
insl
push
adc
das
add
int
adc
lea
lock
repnz
mov
je
ror
std
int
std
cmp
cmp
shr
xchg
shr
sub
pop
insl
push
adc
das
add
int
in
int
in
int
int
cmp
cmp
repnz
mov
je
ror
std
int
std
cmp
cmp
shr
xchg
shr
sub
pop
insl
push
adc
das
add
int
adc
lea
int
int
cmp
shl
sub
jns
mov
je
ror
cmc
int
int
cmc
int
cmp
shr
xchg
cmp
shr
sub
lret
rolb
int
adc
mov
xchg
adc
and
psrlq
xchg
cmp
shr
sub
lret
rorb
int
cmc
int
int
cmc
int
cmp
cmp
shr
xchg
shr
sub
lret
push
pusha
jge
push
mov
jbe
int
adc
mov
cmpb
shl
sub
jns
mov
je
ror
lea
int
int
adc
and
psrlq
xchg
cmp
shr
sub
lret
rolb
int
in
int
int
in
int
cmp
shr
xchg
cmp
shr
sub
lret
rorb
int
adc
mov
xchg
adc
and
jmp
shr
sub
lret
push
pusha
jge
push
cmc
addb
in
int
int
cmp
shl
sub
jns
mov
je
ror
lea
int
cmp
shr
xchg
cmp
shr
sub
lret
rolb
int
cmc
int
int
cmc
int
cmp
shr
xchg
cmp
shr
sub
lret
rorb
int
adc
mov
xchg
adc
and
jmp
shr
sub
lret
push
pusha
jge
push
add
in
int
in
int
int
cmp
shl
sub
jns
mov
je
ror
cmc
int
int
cmc
int
cmp
shr
xchg
cmp
shr
sub
lret
rolb
int
adc
mov
xchg
adc
and
psrlq
xchg
cmp
shr
sub
lret
rorb
int
in
int
int
in
int
cmp
cmp
shr
xchg
shr
sub
lret
push
pusha
jge
xor
jbe
jo
outsl
lods
add
int
pop
inc
rcl
push
int
std
int
std
cmp
cmp
repnz
mov
jbe
int
stc
int
stc
int
stc
int
stc
cmp
xchg
shrl
cmpsb
gs
xchg
cmp
add
std
add
std
shr
sub
hlt
dec
and
int
std
cmp
cmp
repnz
mov
lea
push
std
add
int
std
int
std
cmp
lock
sub
mov
lea
int
stc
int
stc
cmp
lock
push
shr
jle
addb
popf
iret
jbe
jo
jge
add
int
std
int
std
cmp
lock
sub
mov
lea
int
stc
int
stc
cmp
lock
sub
mov
lea
int
stc
int
stc
cmp
lock
push
shll
iret
jbe
jo
das
cli
add
int
std
int
std
cmp
lock
push
shll
iret
jbe
jo
sti
stc
add
int
popf
xchg
or
add
cmp
jbe
xchg
jo
push
fildl
add
jbe
int
std
cmp
lock
sub
mov
lea
int
stc
int
stc
cmp
lock
sub
mov
lea
int
stc
int
stc
cmp
mov
repnz
jo
cmp
jbe
jo
add
jbe
int
std
cmp
mov
repnz
jo
cmp
jbe
jo
jb
add
int
inc
int
inc
cmp
cmp
shr
xchg
shrl
lea
addl
jo
cmp
lea
add
jbe
int
cmp
cmp
jbe
int
stc
int
stc
cmp
shl
sub
jns
mov
lea
std
int
std
cmp
cmp
shr
xchg
shr
sub
xchg
or
cli
add
int
mov
xor
in
adc
cwtl
lcall
add
xchg
mov
or
dec
int
mov
cmpsb
dec
or
pop
jnp
ficoms
cmp
pop
mov
adc
inc
sti
xchg
shr
sub
clc
addb
cmp
push
clc
int
sbb
aad
sbb
das
adc
je
push
ja
xchg
shr
addl
xchg
mov
dec
int
mov
dec
int
mov
cmpsb
dec
cmp
cmp
das
inc
sti
xchg
shr
sub
clc
addb
aad
out
xchg
push
clc
int
xor
cmpsb
adc
popf
int
xor
cli
int
adc
inc
loope
shrl
cli
push
addb
push
popf
int
mov
bswap
dec
int
xor
cmpsb
adc
lods
std
add
std
shr
sub
ficoml
aaa
ficoms
adc
mov
clc
aam
ficoms
adc
mov
leave
sbb
push
jge
cltd
pop
mov
add
aaa
ficoms
cmp
adc
out
ficoms
sbb
das
adc
das
stos
push
in
xchg
imul
and
addb
dec
int
mov
out
cmp
pop
jnp
ficoms
cmp
das
inc
sti
xchg
shr
xchg
cmp
shl
sub
cmc
push
fxch
out
imul
cmpsb
and
and
cmpsb
adc
xchg
fiaddl
aam
add
xor
and
sub
std
add
sub
add
or
or
mov
out
cmp
cmp
das
inc
add
out
int
mov
cmpsb
dec
shr
sub
dec
cmc
cmp
push
clc
int
xor
cli
push
aad
cmpsb
adc
popf
int
int
xor
or
cmpsb
adc
inc
jge
shr
sub
fst
jmp
adc
addb
lock
icebp
sbb
and
mov
cmpsl
cmp
sbb
jbe
int
dec
int
mov
dec
adc
mov
jnp
ficoms
das
inc
jge
int
cmp
cmp
sarl
jmp
adc
addb
divps
test
aam
adc
gs
jo
mov
ss
das
sbb
mov
test
lret
shrb
xchg
int
add
dec
int
mov
lea
jge
shr
xchg
int
mov
xchg
dec
cwtl
shl
sub
lea
cmpsb
mov
cmp
push
rorb
or
xor
mov
jbe
int
xor
addb
int
adc
adc
test
nop
jo
add
or
lea
jge
shr
xchg
int
mov
xchg
dec
add
and
jns
ficoml
or
iret
jbe
jo
add
sbb
repnz
adc
xor
dec
add
mov
int
mov
lea
jge
shr
xchg
int
mov
xchg
dec
cmp
fcmovbe
repnz
das
push
rolb
aam
int
xor
lea
inc
jge
shr
xchg
int
xor
xchg
adc
jns
fcmovbe
repnz
lea
shrb
shll
or
adcb
lcall
xchg
inc
int
and
mov
jnp
ficoms
inc
icebp
das
or
addb
test
jnp
inc
hlt
mov
das
add
adc
jno
ficoms
mov
das
add
adc
xchg
aaa
ficoms
mov
das
add
adc
cmpsb
aaa
ficoms
test
aam
adc
scas
aaa
ficoms
mov
das
add
adc
mov
ficoms
das
push
into
addl
sub
addl
adc
xor
dec
add
mov
jmp
addl
mov
das
add
adc
xchg
aaa
ficoms
mov
das
add
adc
aaa
ficoms
test
aam
adc
fidivs
ficoms
mov
das
add
adc
out
ficoms
in
iret
int
mov
dec
int
mov
cmpsb
dec
cmp
cmp
das
inc
sti
xchg
shr
sub
clc
addb
cmp
push
clc
int
mov
int
dec
xchg
sbb
or
int
mov
dec
int
mov
cmpsb
dec
cmp
cmp
das
inc
sti
xchg
shr
sub
fst
out
xchg
adc
addb
clc
ds
xor
adc
xchg
cmp
inc
int
xor
adc
xchg
xor
adc
out
int
adc
adc
jecxz
inc
sti
xchg
shr
sub
fstl
clc
addb
push
clc
int
cmp
aad
cmpsb
inc
cmp
cmp
lea
loope
cmp
shrl
subb
lea
shr
xchg
push
popf
xchg
int
adc
hlt
add
std
shr
sub
insl
adc
aam
ficoms
adc
mov
out
int
inc
add
std
adc
aam
ficoms
adc
mov
lock
and
aad
rclb
or
and
not
aaa
ficoms
cwtl
add
xor
sub
add
sbb
adc
xor
dec
add
mov
or
arpl
sarb
int
mov
dec
int
mov
cmpsb
dec
cmp
cmp
das
inc
sti
xchg
shr
sub
clc
addb
cmp
push
aad
clc
int
xor
cmpsb
adc
fsts
or
int
cmp
inc
int
xor
adc
xchg
mov
dec
int
mov
dec
int
mov
cmpsb
dec
cmp
cmp
das
inc
sti
xchg
shr
sub
clc
addb
aad
out
xchg
push
clc
int
xor
cmpsb
adc
cli
cmp
lea
inc
loope
cmp
push
cli
shrl
subb
push
popf
int
cmp
lea
int
cmp
hlt
int
inc
adc
mov
jnp
ficoms
das
inc
jge
shr
sub
jmp
cmp
adc
addb
lds
lea
out
int
adc
repnz
add
std
adc
aam
ficoms
adc
aam
ficoms
shr
sub
insl
adc
mov
hlt
mov
lock
jmp
incl
add
sbb
pop
aaa
ficoms
or
and
jbe
xchg
aaa
ficoms
or
int
adc
cmc
lcall
xchg
int
adc
out
jo
sti
cmpsb
mov
jno
xchg
std
int
dec
or
iret
jbe
add
mov
mov
dec
add
in
add
mov
adc
stos
or
int
std
test
rorb
add
stc
add
inc
cwtl
leave
je
xor
addb
addb
xor
xor
sub
and
sbb
adc
xor
dec
add
mov
int
mov
je
test
je
xor
insl
das
add
int
xor
push
insl
das
add
add
xor
add
xor
add
xor
int
xor
add
int
xor
int
xor
int
xor
iret
jbe
or
int
xor
xchg
or
int
xor
int
xor
int
xor
int
and
xor
aam
mov
add
sbb
or
xor
push
int
fs
xchg
sbb
push
int
xchg
pop
sbb
add
addl
dec
int
xor
xchg
or
or
xor
push
insl
das
push
cwtl
addl
addl
je
test
add
orb
xor
int
xor
int
or
int
or
int
xor
int
int3
addl
dec
int
xor
int
xor
int
popf
addl
or
imul
jns
add
sarl
push
jge
mov
leave
je
mov
je
xor
insl
aam
int
xor
add
adc
jl
cmp
and
add
xor
add
xor
add
xor
add
xor
int
xor
add
in
cmp
aam
and
aam
and
aam
and
je
push
add
in
and
aam
adc
je
cmp
icebp
in
xchg
je
xor
icebp
or
int
xor
push
insl
aam
int
xor
leave
add
and
mov
mov
int
movsl
addl
and
mov
mov
cmp
add
shl
sub
mov
mov
inc
rcl
and
je
test
mov
int
movsl
addl
addb
cmp
push
iret
jbe
or
int
xor
int
xor
int
in
addb
je
test
add
addl
or
or
adc
mov
int
in
addb
mov
sub
lds
insb
jae
bound
bound
add
insb
popa
inc
gs
fs
add
push
outsl
jns
add
jns
popa
outsl
bound
add
push
add
arpl
popa
insb
jne
gs
insl
imul
outsl
jb
jo
ja
gs
jb
bound
add
outsb
addr16
outsb
arpl
add
jne
je
outsb
push
popa
jb
add
jb
popa
insb
insl
je
outsl
ja
jb
jo
insl
jns
push
outsb
push
imul
inc
outsl
popa
insb
popa
imul
je
outsl
outsb
gs
inc
push
jns
jns
jne
imul
outsl
je
gs
outsl
je
imul
jo
popa
insb
dec
outsb
popa
jo
add
je
gs
jae
js
popa
data16
insb
popa
imul
gs
jb
inc
insb
popa
bound
je
insb
jns
push
popa
inc
popa
insb
insb
push
outsl
insl
outsl
jb
data16
jae
bound
add
outsb
gs
je
gs
add
outsl
inc
popa
imul
jo
fs
je
imul
outsl
add
jne
add
popa
add
add
add
insl
add
add
jb
ja
imul
outsb
add
add
ja
imul
push
add
je
jbe
add
je
add
insb
add
imul
outsl
add
je
popa
add
push
add
arpl
imul
add
outsl
add
add
jns
add
insb
add
jns
jbe
popa
add
popa
add
outsl
add
add
jb
jae
imul
imul
bound
outsl
add
imul
js
jae
outsl
add
popa
add
je
add
bound
jns
add
add
add
add
js
imul
imul
popa
add
add
add
ja
insb
add
popa
add
jo
popa
add
imul
add
jbe
add
jb
jne
je
insl
add
arpl
jne
jo
add
jae
outsl
add
imul
outsl
add
jb
jae
outsl
add
add
outsl
add
popa
add
jae
data16
jb
popa
add
add
add
adc
out
adc
js
adc
test
adc
fs
adc
jp
adc
enter
loop
adc
ja
adc
cmp
adc
rclb
adc
sbb
add
add
add
adc
mov
adc
out
sbb
adc
add
jbe
add
addl
sbb
inc
add
addl
sub
inc
add
addl
cmp
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
addl
repz
sti
addl
add
inc
add
addb
addb
addb
addb
addb
addb
addb
addb
or
add
push
adc
cmpsl
outsl
adc
push
popa
adc
add
add
jle
add
adc
mov
adc
aas
inc
adc
pop
and
add
jl
add
adc
inc
push
adc
mov
pop
adc
sub
add
ja
add
sbb
add
adc
or
adc
sbb
data16
xchg
bound
add
dec
adc
in
adc
sub
add
adc
imul
rolb
in
adc
mov
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
and
add
push
adc
testb
add
sbb
add
or
add
pop
adc
adc
cmp
add
sbb
add
adc
push
adc
mov
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
pusha
adc
pop
js
add
dec
adc
cmp
adc
aam
adc
or
adc
pop
push
adc
mov
xor
add
and
adc
adc
add
dec
adc
jae
adc
dec
add
inc
add
addl
addl
addl
addl
addl
addl
addl
addl
addl
addl
addl
addl
addl
addl
addl
cmp
dec
add
add
adc
add
add
add
add
add
loopne
add
add
add
test
add
les
add
call
xchg
add
add
xchg
add
add
add
add
outsb
xchg
add
add
xchg
add
add
rolb
add
lock
add
xchg
add
xchg
add
xchg
add
xchg
add
add
push
xchg
add
add
add
addb
add
xchg
add
xchg
add
xchg
add
xchg
add
xchg
add
add
sbb
add
mov
add
add
pop
mov
add
add
jl
add
mov
add
lods
mov
add
mov
add
mov
add
mov
add
add
push
mov
add
mov
add
mov
add
mov
add
add
pusha
mov
add
add
orb
add
add
add
add
lret
add
mov
add
mov
add
add
push
mov
add
mov
add
mov
add
add
data16
add
add
add
mov
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
add
xor
add
dec
mov
add
add
mov
add
add
add
add
cwtl
mov
add
mov
add
add
fimull
add
lock
add
mov
add
mov
add
mov
add
add
add
add
add
mov
add
add
mov
add
add
fs
add
add
je
outsl
jns
jb
jo
jb
jns
push
popa
add
pop
add
outsl
jo
jb
jns
push
add
pop
add
outsl
jo
jb
jns
push
add
dec
add
popa
addr16
imul
insb
popa
arpl
arpl
add
add
popa
addr16
imul
je
outsl
jns
inc
add
popa
addr16
imul
dec
insl
popa
addr16
outsl
jne
je
dec
add
popa
addr16
imul
outsl
jbe
add
inc
dec
dec
inc
push
dec
xor
cs
insb
add
push
add
gs
je
inc
imul
imul
jb
insl
push
add
xor
push
gs
popa
jb
je
outsl
jae
cmp
inc
gs
gs
popa
addr16
add
ja
jb
insl
gs
outsl
outsb
je
outsl
insb
add
sbb
inc
gs
arpl
dec
outsb
outsw
add
add
arpl
outsl
jo
jo
outsb
jne
add
add
outsb
imul
push
arpl
add
popa
jb
jo
gs
add
add
je
insb
addr16
je
insl
push
gs
inc
add
push
outsb
gs
outsl
jo
jo
add
add
insl
outsl
jbe
push
jb
jo
add
push
push
outsb
outsl
ja
add
add
insb
insb
push
imul
outsl
arpl
mov
dec
outsl
popa
fs
outsb
jne
add
arpl
outsl
push
push
outsb
outsl
ja
add
add
jb
insb
insb
push
imul
add
popl
inc
gs
imul
outsl
arpl
add
add
popa
jb
jb
jbe
add
fs
je
push
arpl
xor
inc
gs
outsb
jne
je
insl
dec
inc
add
fs
outsl
je
data16
gs
popa
addr16
add
mov
dec
outsl
popa
fs
arpl
push
add
imul
popa
bound
add
inc
outsl
jb
addr16
jne
fs
imul
add
je
imul
js
inc
add
add
je
gs
popa
addr16
add
add
outsb
fs
gs
popa
addr16
add
das
add
je
arpl
gs
imul
add
imul
popa
jae
inc
js
add
and
push
outsb
fs
insb
addr16
je
insl
dec
gs
popa
addr16
add
dec
gs
popa
addr16
imul
inc
popa
jae
popa
fs
imul
add
add
imul
jae
js
repnz
jae
dec
gs
popa
addr16
add
add
je
jo
popa
je
push
outsb
add
mov
push
popa
bound
fs
gs
dec
jne
push
add
test
fs
imul
add
ja
je
je
push
add
ja
inc
gs
imul
js
dec
outsb
addr16
push
add
cmp
inc
push
jo
jb
jne
push
add
daa
add
je
gs
outsl
popa
jb
push
jns
add
inc
gs
jb
jo
add
dec
add
jo
push
arpl
sub
jb
gs
push
add
push
ja
jb
add
sub
inc
gs
popa
jae
inc
arpl
gs
outsl
jo
jo
add
fs
je
imul
inc
gs
imul
outsb
addr16
add
leave
add
jo
imul
imul
inc
push
dec
gs
push
add
push
push
inc
push
xor
cs
insb
add
xchg
add
insb
dec
outsb
imul
jb
outsb
add
fs
insb
cs
insb
add
dec
outsl
arpl
gs
outsb
outsw
push
add
inc
add
je
jb
arpl
fs
jae
add
roll
inc
jb
popa
je
inc
imul
outsb
addr16
add
sub
gs
popa
outsb
fs
gs
outsl
jne
je
add
add
gs
je
dec
popa
imul
popl
inc
gs
je
insl
dec
popa
insl
gs
add
pusha
add
je
jns
je
insl
push
imul
imul
jns
add
aas
add
fs
imul
add
xchg
add
outsl
bound
inc
insb
insb
outsl
arpl
xchg
add
imul
jne
jb
add
testl
imul
jb
inc
imul
jne
arpl
add
add
jbe
inc
imul
popa
imul
jo
imul
inc
gs
imul
jo
inc
add
and
gs
imul
bound
gs
add
add
jbe
inc
imul
add
jo
inc
imul
jne
jb
push
gs
outsl
jb
popa
outsb
arpl
outsl
jne
je
jb
sub
gs
popa
outsb
fs
gs
outsb
outsw
jb
popa
je
outsl
outsb
add
push
add
je
jb
jb
je
arpl
push
arpl
outsb
add
jg
inc
outsl
insb
fs
je
imul
insb
jae
jb
outsb
inc
add
sahf
add
je
outsl
insl
insl
push
imul
add
gs
push
push
imul
inc
push
dec
inc
dec
xor
cs
insb
add
mov
push
outsl
insb
jns
outsl
outsb
add
gs
bound
arpl
add
gs
inc
inc
add
roll
push
gs
arpl
push
arpl
jmp
push
gs
popa
jo
outsl
fs
leave
add
jne
fs
arpl
add
je
insb
je
add
insb
imul
je
add
jge
inc
gs
jns
je
insl
push
popa
insb
gs
gs
jae
add
push
gs
inc
js
outsb
je
outsl
imul
push
arpl
gs
imul
inc
js
inc
js
add
add
insb
arpl
imul
add
je
gs
inc
outsl
insb
outsl
jb
add
push
imul
inc
outsl
insl
bound
gs
outsb
add
lods
add
gs
je
push
arpl
outsb
dec
outsb
imul
add
gs
outsl
add
mov
popa
je
dec
inc
push
add
je
imul
movsl
add
gs
je
push
popa
insb
gs
add
dec
xor
cs
insb
add
and
add
lea
add
js
outsl
arpl
add
je
outsb
arpl
jb
jb
imul
add
add
add
test
add
test
add
test
add
xchg
add
add
xchg
add
add
add
add
outsb
xchg
add
add
xchg
add
add
rolb
add
lock
add
xchg
add
xchg
add
xchg
add
xchg
add
add
push
xchg
add
add
add
addb
add
xchg
add
xchg
add
xchg
add
xchg
add
xchg
add
add
sbb
add
mov
add
add
pop
mov
add
add
jl
add
mov
add
lods
mov
add
mov
add
mov
add
mov
add
add
push
mov
add
mov
add
mov
add
mov
add
add
pusha
mov
add
add
orb
add
add
add
add
lret
add
mov
add
mov
add
add
push
mov
add
mov
add
mov
add
add
data16
add
add
add
mov
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
add
xor
add
dec
mov
add
add
mov
add
add
add
add
cwtl
mov
add
mov
add
add
fimull
add
lock
add
mov
add
mov
add
mov
add
add
add
add
add
mov
add
add
mov
add
