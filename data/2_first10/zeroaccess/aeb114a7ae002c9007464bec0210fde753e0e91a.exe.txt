push
mov
sub
add
push
push
mov
xor
or
sub
xor
mov
movl
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
mov
add
mov
mov
mov
xor
mov
andl
xor
or
inc
mov
cmpl
jne
push
push
push
push
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
sbb
andl
movl
or
movl
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
jmp
adc
xor
mov
movl
cmpl
je
cmpl
jne
push
push
pushl
call
xor
or
dec
mov
jmp
orl
mov
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
mov
mov
add
xor
adc
mov
adc
addl
mov
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jb
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
call
cmpl
jne
mov
inc
mov
jmp
xor
sub
mov
addl
mov
mov
xor
or
mov
not
addl
orl
mov
and
mov
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
mov
mov
xor
mov
add
xor
mov
mov
mov
sub
mov
addl
mov
movzbl
movzbl
sub
mov
movzbl
xor
mov
mov
xor
add
mov
lea
mov
lea
mov
lea
mov
lea
jmp
out
jle
mov
loop
jmp
jae
sub
pusha
lds
pusha
or
pop
pop
add
pop
jne
fbstp
jo
jno
iret
lret
repnz
rclb
jno
mov
daa
mov
scas
push
add
mov
insb
xchg
xchg
mov
leave
xor
jae
xor
mov
lcall
push
cmp
push
push
unpcklps
mov
mov
stc
inc
popf
nop
in
fstpl
jg
cmp
mov
dec
loopne
pop
orb
inc
pop
mov
xor
sub
inc
add
dec
outsb
xchg
dec
mov
pop
ret
mov
flds
mov
cmpsb
jl
xchg
inc
sbb
subl
imul
mov
mov
pusha
inc
fcoms
lret
dec
fisubrs
and
outsl
or
inc
xor
jmp
loopne
and
dec
cmc
sti
mov
and
sub
sti
mov
insl
mov
insb
and
mov
dec
xor
adc
rol
mov
das
mov
call
and
jnp
lock
outsl
cmpsl
push
loopne
pop
loopne
dec
jmp
jns
fstpt
retw
je
aas
inc
adc
sbb
lahf
pop
push
lcall
inc
mov
aas
adc
jg
cmpsl
stos
jae
pop
cmp
stc
push
jno
lret
ds
sub
leave
add
pushf
dec
pusha
es
cltd
adc
dec
mov
push
jne
fisttpl
dec
andb
xchg
repz
cmp
push
fcoml
jae
lahf
mov
mov
out
ret
mov
ss
mov
daa
lret
mov
mov
jg
push
fstl
je
rolw
xor
sub
ss
insl
stos
mov
cli
push
leave
jg
daa
inc
pop
mov
sbbb
push
loop
loop
dec
pop
int
jno
inc
call
int
push
jno
lret
cwtl
mov
pop
lret
adc
inc
pop
aas
ljmp
push
inc
rcrb
mov
shlb
xlat
mov
and
call
lahf
test
cltd
pop
cmp
and
insb
dec
mov
cmp
imul
cwtl
mov
dec
jnp
stc
movsb
dec
add
xorl
push
and
sub
cmp
inc
sti
push
mov
adc
pop
repz
add
shll
jne
mov
jecxz
out
mov
mov
mov
fwait
xchg
push
mov
shlb
jbe
outsb
rcll
adc
sub
aas
xchg
sub
jmp
mov
insb
inc
es
cmp
fiaddl
lcall
sti
xchg
adc
imul
fs
cwtl
leave
and
ss
subb
pop
mov
sbb
mov
dec
jge
pusha
das
cmp
inc
xchg
subl
pop
and
incl
xchg
or
xchg
mov
mov
fisttps
dec
or
inc
push
inc
mov
scas
pop
cltd
xchg
adc
mov
adcb
popf
xchg
and
mov
push
jae
cmc
mov
pop
lret
imul
adc
gs
sar
mov
adc
aaa
ffree
add
push
lahf
dec
mov
jbe
add
sti
fs
shlb
push
push
mov
int
mov
jmp
bound
fnstcw
push
insl
nop
sti
insl
pop
xchg
jmp
push
neg
dec
sub
scas
cmp
and
cmc
sub
and
mov
adc
sbb
xchg
dec
and
stos
notb
pop
in
push
and
cmpsb
mov
mov
rclb
inc
xor
imul
or
test
pop
or
pop
and
stos
xchg
cmp
push
ja
in
mov
sub
mov
and
adc
adc
xchg
and
mov
inc
mov
in
and
cmp
xchg
dec
mov
dec
test
pop
fs
add
jae
clc
sbb
enter
ret
ficoms
movsb
scas
test
orb
cmp
push
lret
push
xor
inc
xchg
dec
call
push
pusha
insl
lahf
sub
mov
clc
fwait
nop
add
test
mov
leave
scas
addl
mov
dec
pop
mov
sbb
out
call
bound
orl
pop
movsl
push
sti
stos
cltd
sbbl
push
xchg
sub
pop
out
inc
movsb
loope
adc
aas
movsb
xchg
adc
pop
and
xchg
adcb
dec
xchg
and
lea
xchg
sahf
rcll
ljmp
out
loope
ds
decb
adcb
cmc
addr16
cmpsl
cltd
jne
xchg
ret
xor
dec
ret
pop
push
jle
sub
test
cmp
pusha
ljmp
movsb
mov
cmp
cs
push
mov
movhlps
imul
cmp
lahf
jp
pop
and
push
lcall
insb
clc
sub
pop
jl
mov
fnstcw
sbbl
lock
push
adc
movl
push
out
inc
addr16
inc
les
sahf
cmp
and
adc
pop
xor
gs
pop
and
xchg
leave
movsl
frstor
pushf
lods
or
or
test
mov
sarb
push
jns
ficoml
mov
and
mov
clc
xor
or
out
sub
subb
lret
ret
or
jnp
jo
sbb
test
sbb
inc
fistps
push
loop
or
test
je
add
lret
add
pop
inc
scas
lret
xor
mov
jb
sub
neg
jns
sub
sub
mov
insl
add
inc
cmp
push
movsb
call
ret
push
push
adc
lahf
in
xor
push
or
shlb
repnz
pop
mov
enter
addr16
imul
and
ljmp
in
iret
std
lock
js
std
xor
xchg
sarl
sub
jg
cmp
iret
pop
lcall
nop
enter
fucomip
xor
les
scas
test
cmp
rolb
pop
mov
ss
js
xor
pop
std
scas
sbbb
push
out
jnp
pop
enter
cmp
es
jmp
call
inc
cli
incb
dec
test
cmp
dec
jg
inc
xchg
pop
rclb
mov
out
mov
jg
xchg
fcmovnu
inc
rorl
jnp
add
les
fs
cmp
jg
xor
jle
cmp
dec
sbb
call
jecxz
dec
inc
lahf
lods
cld
scas
ja
jp
mov
and
jmp
gs
dec
int3
aam
and
or
sbb
inc
add
add
cmc
or
int3
andl
push
fistpll
ljmp
xchg
jle
std
jecxz
and
cmpsl
je
lds
and
pusha
mov
sub
pop
mov
inc
test
imul
mov
mov
jp
mulb
call
mov
pop
std
pushf
mov
jl
pop
outsl
lcall
adc
pop
movsl
js
pop
pop
jl
sbbb
mov
add
sub
xchg
mov
jmp
dec
nop
xchg
pop
sarl
xlat
dec
push
and
ja
rcrl
mov
lods
mov
sbb
push
das
test
dec
or
test
popa
or
shlb
xchg
sub
cmp
inc
lret
stc
rclb
jp
les
imul
inc
imul
pop
pop
mov
dec
jmp
rol
xor
xchg
pop
in
in
pop
and
rcll
pop
push
aas
sarl
inc
xlat
aad
add
paddusw
pop
ret
adc
jecxz
ret
jmp
jecxz
push
inc
mov
push
inc
add
or
fdiv
dec
adc
add
push
in
flds
mov
les
andl
push
dec
sbbl
subl
mov
sbb
das
shrb
call
lods
fdivrs
add
addr16
testb
xchg
sbb
sarl
add
pop
negb
mov
roll
cmc
aaa
repnz
mov
push
dec
adc
adc
addl
clc
push
js
out
xor
sbb
cli
daa
push
test
stc
in
push
and
mov
lock
stc
jmp
pop
jecxz
jns
push
dec
cs
pop
andb
xchg
push
in
dec
stos
and
loopne
lods
popf
dec
test
mov
pop
stc
push
xlat
leave
push
lods
sbb
lret
xchg
and
adc
dec
push
aam
leave
push
sbb
xchg
outsb
inc
sub
mov
push
adc
and
sub
loope
mov
rcll
push
icebp
test
imul
xchg
pop
jnp
clc
push
jae
push
lret
std
imul
lret
jns
cmp
cmc
sti
jecxz
inc
mov
jle
lret
mov
lcall
sbbl
cmp
test
lret
sub
dec
or
add
ret
dec
cwtl
bound
mov
or
scas
aas
aad
push
loop
adc
in
add
adc
xor
into
mov
xchg
cmpsl
mov
lret
fldl
push
xchg
ret
pushl
xor
sub
ja
adcb
sbb
fdiv
pop
push
mov
mov
scas
outsb
mov
mov
scas
fnstcw
mov
jmp
shlb
xchg
notb
jns
in
pop
hlt
js
mov
jmp
test
adc
mov
mov
or
call
or
fildl
push
fs
outsl
jle
jg
lea
push
hlt
mov
add
int
shll
stos
push
inc
and
packssdw
add
dec
fisubl
xchg
je
mov
std
mov
mov
insl
mov
sbb
pop
jl
adc
cmp
mov
jns
in
pop
or
mov
ffree
pop
adcb
dec
mov
stc
sbbb
call
sbb
int
js
clc
add
and
imul
xchg
and
dec
adc
pop
mov
jmp
fistl
mov
pushf
lret
rolb
and
lret
cmpsl
jmp
lds
movsl
enter
ss
das
xchg
faddl
sbb
loopne
ds
aam
movsl
divb
jae
inc
pop
sahf
sub
cmpsb
aad
xor
popa
sbbl
aad
shlb
pop
stc
add
adc
popa
push
shl
cmp
mov
lea
stos
sbb
mov
mov
les
arpl
movsb
mov
mov
ss
popa
mov
lods
and
push
adc
dec
cli
fsqrt
leave
movsb
adc
and
dec
stos
push
pop
xor
js
xor
mov
mov
lods
dec
shlb
adc
mov
xchg
adc
push
lret
fisubs
popa
out
fsubs
xor
mov
in
rcpps
scas
cltd
mov
or
xchg
mov
loop
sbb
cmp
aaa
push
and
decb
dec
xchg
insb
add
into
jg
mov
aas
mov
js
mov
int3
inc
fildl
clc
into
popa
mov
hlt
push
call
into
mov
push
out
lods
stos
aad
loop
ss
sub
jp
push
and
lea
xchg
dec
pop
lea
and
xor
daa
imulb
popf
rclb
inc
in
xor
into
pusha
cmp
sbb
dec
lahf
sub
decb
jp
mov
shr
lcall
cwtl
or
cs
sti
push
mov
arpl
or
pop
daa
loopne
stc
xchg
jb
or
pop
add
bound
in
push
lock
mov
jecxz
push
adc
jmp
mov
push
xchg
das
jl
shrl
jb
xlat
fmuls
push
adc
movsl
lock
fcmovbe
in
fxch
scas
jns
out
inc
movsl
push
inc
cmp
xor
fimull
subl
cmpsl
fdiv
adc
or
scas
aam
dec
adc
xchg
inc
fs
or
je
neg
inc
sti
dec
sahf
dec
mov
insb
mov
or
sbb
pop
sub
gs
mov
adc
mov
not
or
sbb
arpl
jno
mov
adc
pop
jbe
push
xchg
repz
iret
pusha
insb
xchg
add
fimull
pop
nop
inc
jne
mov
xor
movswl
add
inc
pop
enter
mov
out
pop
push
int
xchg
fimull
inc
sub
addb
adc
hlt
dec
aas
cld
or
mov
outsl
dec
xchg
loope
ret
sbb
add
shl
xor
mov
cmovbe
loope
mov
loop
incl
cmp
scas
pusha
data16
xorl
into
leave
stos
sub
mov
dec
xchg
sub
cmpb
cmpsb
jb
sub
jge
pusha
lea
orb
jae
in
push
sbb
sub
inc
sti
and
mov
in
out
sub
lret
mov
adc
scas
pop
or
icebp
mov
inc
sbb
addr16
imul
or
std
or
jo
popf
test
pop
data16
mov
mov
in
mov
popf
and
es
dec
cmp
pop
stos
insl
xchg
inc
in
cmp
mov
inc
and
inc
push
xor
inc
fidivl
and
stos
movb
addr16
sub
mov
jnp
xchg
pop
mov
dec
flds
pop
cmpsb
fs
inc
jmp
xchg
ret
out
mov
xchg
dec
pop
jecxz
in
mov
sbb
mov
mov
push
pop
jle
inc
xchg
add
outsb
inc
fcmovnb
add
test
mov
xchg
loop
fwait
jg
int3
inc
cltd
and
test
xor
fbld
movsl
fnstsw
lret
popf
es
repz
sbb
jno
jb
repnz
add
dec
stos
mov
mov
sub
sbb
data16
mov
imul
test
push
push
sahf
clc
mov
pop
test
stos
imul
adc
sbbb
fcmovne
fisttps
add
and
fwait
sbb
es
pop
les
cli
adc
inc
bound
subb
mov
mov
sarl
loope
jp
test
insb
mov
mov
sahf
mov
jg
or
jb
and
jbe
int
addr16
cmp
pop
jge
xor
div
or
push
mov
xor
pop
insb
lcall
push
inc
cli
rorl
sbb
jbe
imul
add
dec
push
mov
push
fisubs
add
mov
adc
mov
or
dec
jne
push
pop
fisttpl
or
loop
out
xor
imul
ret
lods
lods
and
sti
jg
arpl
rclb
aad
cld
popa
pusha
xor
xchg
loope
add
fwait
mov
clc
scas
loop
inc
fs
adc
xchg
int
cwtl
loopne
sub
add
leave
push
dec
dec
lcall
and
dec
xor
jle
arpl
mov
out
mov
movb
subl
inc
popa
adc
pusha
xchg
shlb
dec
aaa
push
sub
dec
and
sti
insb
sub
loop
sbb
aaa
sub
mov
fdiv
movsl
and
cmp
xchg
hlt
cmp
dec
ja
dec
sbb
fwait
loopne
or
dec
aas
fndisi(8087
inc
aad
dec
test
scas
lret
adc
arpl
push
popf
ja
sub
scas
hlt
stos
jb
sti
hlt
faddp
lret
dec
fidivrl
jbe
dec
pop
repz
js
cmpsb
and
or
sbb
and
xchg
cmc
inc
adc
push
mov
fcomip
or
loope
mov
mov
nop
lock
cmp
ss
push
out
dec
lcall
and
pop
int
loope
cmp
mov
mov
call
repnz
mov
data16
mov
enter
jge
test
dec
adc
call
and
cld
loop
mov
in
in
sbb
xchg
pop
mov
fadds
pushf
push
dec
call
pop
pop
shll
inc
data16
or
movb
out
and
out
cs
mov
and
sbb
cli
arpl
mov
mov
pop
enter
cld
xchg
stc
adc
pop
movsb
xchg
pop
imull
out
mov
inc
add
dec
inc
jmp
outsb
inc
stos
mov
pop
out
int
dec
push
popf
cmpb
popf
mov
jecxz
pop
cwtl
inc
or
outsb
in
ret
sbb
and
shlb
es
lret
xchg
in
js
sbb
les
ret
loop
push
xor
and
mov
sbb
cmpsb
scas
jo
mov
mov
xor
clts
ret
push
push
sub
jae
xchg
dec
cmp
cmp
xchg
jg
enter
add
lods
stc
mov
arpl
out
imul
adc
push
push
outsl
push
xlat
stc
xlat
int3
adcl
or
mov
in
mov
push
shll
cwtl
nop
mov
push
xchg
pop
fsubrs
scas
repnz
mov
push
add
imul
mulb
adc
sub
mov
daa
cmc
adc
dec
les
movsb
scas
xchg
pop
cmp
jae
les
jnp
nop
dec
rcrb
data16
fdivr
add
sbbb
ds
lahf
rolb
xchg
mov
fwait
cmp
subl
loopne
and
jmp
xchg
scas
mov
adc
popf
mov
mov
and
push
push
mov
popa
das
cmpsb
add
dec
add
pop
add
and
adc
mov
pop
sbb
loop
loope
sbb
mov
enter
or
imul
lret
movb
stc
mov
data16
repnz
push
sbb
sbb
xor
adc
sti
sbb
repz
and
push
movsb
add
sub
xor
lock
jecxz
cltd
jp
mov
out
test
mov
icebp
loop
movl
cld
jl
pop
outsb
test
xor
jmp
mov
pop
adc
fsubrl
push
sbb
scas
nop
jmp
cs
xor
pushf
test
adc
pop
mov
push
pop
pusha
push
popf
fcmovnb
adc
test
test
js
jnp
lods
lock
mov
jmp
or
repnz
test
xor
jmp
sbb
xchg
pop
testb
scas
pop
mov
xor
out
lret
or
xlat
sbb
xor
in
std
stc
icebp
popa
push
pop
jae
xorb
inc
cmp
movsb
pop
repz
in
or
add
imul
imul
enter
fsubs
aad
hlt
icebp
xchg
incb
xorl
xor
fsubrs
jmp
jae
adc
pop
iret
mov
push
imul
test
subl
ds
popf
cmp
dec
je
jmp
jge
shrl
ljmp
inc
std
sub
push
inc
js
or
inc
mov
dec
insb
mov
lds
pop
jecxz
mov
cmp
cmp
mov
jle
mov
pop
inc
fsubrs
mov
pop
inc
adc
sarb
lds
pop
mov
add
mov
xchg
test
and
out
int
mov
sub
or
mov
cmp
pop
outsl
sbb
movsl
inc
pusha
or
adc
jns
pop
push
rorl
data16
adc
int
xchg
jns
faddp
lcall
cmp
dec
add
cmp
xchg
mov
inc
push
dec
xor
push
mov
lds
xchg
iret
cmova
int3
pop
imul
pop
jp
dec
fwait
loop
jne
xor
lods
loopne
movsl
jo
outsb
mov
lcall
xchg
mov
jne
das
jmp
nop
sub
mov
jb
aas
fsubl
mov
fwait
enter
jl
push
ret
mov
push
rcrb
inc
sti
sub
scas
dec
xchg
insb
imul
shr
adc
cmp
setne
add
mov
cld
jb
xchg
sub
xor
repnz
test
or
add
out
push
fisubs
lahf
psubsw
xor
xor
insb
mov
sub
mov
push
add
dec
nop
insb
stc
aad
jbe
jl
data16
pop
lods
les
repnz
add
push
mov
and
dec
pop
push
or
rolb
mov
adc
in
mov
add
cmp
mov
lea
jo
sub
mov
rcll
add
jle
stos
popf
jae
leave
fnstsw
popf
add
mov
mov
or
add
mov
mov
loop
jb
pop
shl
out
push
mov
add
mov
incl
xor
push
rorb
lret
inc
outsl
dec
orl
or
mov
push
clc
xor
jb
push
lret
pushf
mull
call
fdiv
fisttpll
push
shrl
and
mov
test
jmp
inc
jne
je
stc
push
sti
call
adc
xlat
bound
push
or
fisttps
jp
sbbl
imul
pop
inc
lods
sub
push
adc
mov
cmpsl
outsb
subps
lcall
or
cmc
jnp
xor
xchg
rorl
lea
jecxz
cmp
or
out
lea
inc
jecxz
mov
aas
mov
inc
inc
xchg
push
mov
sbb
movsb
pop
popf
sbb
aas
lret
lods
aaa
repnz
clc
mov
fistpl
ja
es
adc
mov
push
xor
inc
imull
dec
sub
cmp
sahf
aam
fiaddl
enter
clc
loopw
aaa
pop
cmp
mov
add
jg
lods
sbb
add
xlat
lahf
fists
inc
jbe
sahf
xchg
mov
xchg
into
xchg
ljmp
push
decl
fsts
adc
andl
insb
adc
or
popf
jno
daa
xchg
pop
aas
add
out
lods
inc
inc
in
je
outsl
lds
dec
leave
ret
jnp
xchg
les
mov
sub
dec
pop
cld
out
xchg
xchg
add
sub
sub
sub
xor
inc
ficoml
test
pop
push
in
jg
or
fdiv
jbe
aam
add
pop
ja
lods
mov
aas
push
jmp
or
iret
mov
xor
sahf
adc
xor
bound
push
movsb
inc
fwait
std
call
test
jl
and
or
and
mov
addr16
data16
jl
and
shrb
push
inc
lods
cli
jmp
push
jns
pop
mov
or
inc
jns
mov
in
loope
sub
in
mov
push
add
cmp
lahf
push
movl
xchg
sub
dec
add
bound
lahf
sub
imul
fldcw
push
hlt
iret
or
test
scas
loopne
push
adc
or
adc
dec
add
mov
and
les
and
in
adc
mov
xchg
jbe
test
fnstenv
outsb
push
es
jnp
jecxz
lret
rorb
or
pop
jp
in
sbb
jb
mov
icebp
push
out
rol
and
pusha
into
sbb
dec
push
dec
icebp
mov
testb
cmp
dec
mov
imul
mov
lods
xchg
mov
inc
jecxz
cmp
pop
rcrl
out
add
cmp
ljmp
inc
cmp
xor
dec
nop
cltd
fwait
fwait
push
mov
push
push
sub
outsb
jbe
add
pushf
in
mov
push
scas
fdivr
lods
add
loope
loop
xor
inc
lret
jns
bound
pop
arpl
jb
push
mov
mov
push
mov
push
cmp
lods
jp
dec
jl
mov
adc
loope
inc
stos
dec
int
cwtl
and
cmovns
jo
mov
mov
fsub
push
sbb
and
je
mov
cmp
cmc
cwtl
into
cli
insb
notl
out
lds
push
call
loopne
call
or
jecxz
xchg
pop
icebp
test
insb
pushw
and
test
jmp
cmp
pushl
fstpt
in
jecxz
mov
cmp
sbb
hlt
xlat
add
jb
jg
js
lds
pop
cwtl
hlt
jo
rcrb
lds
sti
out
lods
inc
mov
out
popa
in
and
jno
and
mov
xor
mov
cmp
or
dec
daa
rcrl
fistpll
pop
push
mov
mov
leave
pushf
and
rcrb
test
sub
pop
fadds
fisttps
dec
je
sbb
pop
jne
xor
lea
adc
xor
push
cmp
movsb
shl
mov
jmp
xor
push
hlt
sub
push
xor
mov
movsl
push
mov
add
sahf
cmpsl
inc
mov
dec
aad
lahf
xchg
jno
add
ret
sbb
int
or
rcrl
jmp
testl
pop
adc
shl
ss
pop
mov
adc
or
dec
inc
jne
pop
cmp
fnsave
adc
in
fcoml
ss
mulb
lods
loop
pop
cltd
pop
xchg
insb
imul
scas
mov
adc
jne
stc
outsb
push
aas
xchg
or
dec
lods
cs
in
mov
xor
push
add
pop
push
pop
lret
lret
in
aaa
mov
fiaddl
push
call
repnz
pop
mov
xchg
arpl
negw
pushf
and
das
inc
add
dec
cmpsl
adc
es
clc
pop
outsl
mov
mov
cmp
push
idivb
out
call
stos
mov
and
stos
xchg
inc
jns
inc
imulb
mov
xor
cli
test
push
imul
mov
mov
jp
rcrb
mov
bnd
push
icebp
mov
xchg
sbb
sub
lea
movl
push
ret
pop
or
outsb
push
fwait
xchg
gs
dec
add
or
adc
inc
and
out
cmpsl
mov
aad
mov
adc
xchg
and
iret
mov
data16
mov
sar
mov
mov
rcrl
pop
nop
xor
jl
push
iret
add
mov
hlt
mov
outsl
push
xor
bound
and
push
stos
movsl
adc
adc
fimull
mov
jmp
ret
add
stos
xchg
xor
dec
jp
pop
dec
inc
pop
pop
rolb
mov
cltd
movlps
mov
fsubp
xchg
lret
lahf
or
or
pop
scas
xor
and
inc
sub
bound
or
inc
movsl
add
mov
or
int
and
mov
pop
icebp
imul
cmp
enter
mov
cmpsl
je
stos
and
cld
pushl
lret
cltd
dec
jno
test
popf
xchg
cld
das
pop
pop
imul
pop
lret
in
outsl
clc
cmp
adc
icebp
or
pop
sbb
adc
push
pop
xchg
popa
cmp
daa
out
shlb
sarl
std
and
test
or
jb
in
aam
mov
sahf
into
idivb
pop
jnp
mov
sahf
pop
jle
mov
stos
xchg
mov
mov
mov
cli
adc
lea
or
in
leave
xor
cmpsl
sub
add
sarl
cmp
sub
cmp
dec
insl
or
aas
jg
int
and
and
and
add
mov
cmpsb
pop
repnz
cmc
push
jne
out
push
shl
fadds
gs
xchg
mov
arpl
sti
push
jle
push
leave
or
into
mov
imul
dec
xchg
pop
test
scas
or
mov
pop
and
xchg
test
dec
movsb
sbb
cmp
cmp
mov
js
sub
push
sbb
mov
pop
adc
add
test
mov
cwtl
movsb
mov
das
dec
ljmp
push
dec
pop
lcall
dec
loope
mov
adc
xchg
sbb
jae
pop
scas
inc
adc
dec
and
iret
enter
test
enter
sbb
imull
and
int
mov
insl
dec
cmp
push
in
clc
cs
je
ret
push
outsb
jno
jp
xor
ret
fs
jmp
movsb
mov
cmp
test
pusha
shr
fs
mov
cmp
lods
jmp
daa
jmp
mov
dec
mov
shrl
repnz
push
adc
fstpt
in
test
mov
mov
mov
shlb
jnp
xchg
mov
lahf
push
push
iret
ret
mov
loope
mov
out
sbb
outsb
mov
inc
mov
int3
and
cmpsl
fdivl
inc
ret
or
push
mov
xor
test
jg
sub
mov
shrb
dec
in
aas
mov
sbb
dec
subb
aam
xchg
rcrl
dec
pop
xchg
xchg
and
shll
push
dec
repz
sub
xchg
xchg
xchg
fwait
push
dec
mov
push
cmp
or
sbb
push
and
mov
sar
pop
or
insl
popf
dec
stos
int
cmp
int3
and
imul
cmp
mov
rcll
lret
xor
mov
xor
ret
nop
cld
mov
int3
sbbl
repz
inc
mov
push
cltd
cmp
das
or
mov
mov
mov
repz
push
jbe
shl
mov
test
fnstcw
xchg
test
and
cmp
pop
sub
pop
insl
mov
insb
iret
inc
xchg
jp
cwtl
rcl
cmpl
clc
and
lret
shlb
mov
mov
mov
ljmp
cmp
mov
rcll
inc
adc
loopne
lahf
fisubrs
cmp
fcomip
ror
shr
int
jmp
mov
dec
mov
jo
lds
ror
ss
add
jmp
and
adc
data16
cmp
mov
mov
sbb
jmp
or
sbb
push
and
inc
in
xor
add
push
mov
xor
add
push
mov
xor
add
push
lea
push
pushl
pushl
call
test
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
lea
mov
mov
mov
mov
mov
test
je
lea
mov
mov
mov
mov
mov
mov
mov
sub
mov
xor
mov
sub
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
sub
mov
push
xchg
push
pop
add
or
xor
pop
pushl
mov
pushl
pushl
pushl
pushl
pushl
pushl
pushl
mov
mov
mov
mov
call
mov
mov
add
pop
pop
leave
ret
push
mov
sub
push
orl
push
movl
push
subl
push
xorl
push
adcl
push
call
addl
call
movl
sbb
movl
mov
and
mov
mov
xor
mov
mov
sub
mov
add
xorl
mov
xor
mov
sbbl
test
je
mov
sub
mov
mov
mov
adc
imul
adcl
mov
add
xchg
movzwl
sub
mov
sub
mov
xor
or
add
dec
mov
adcl
mov
and
xor
subl
add
and
mov
mov
xor
xor
xorl
add
mov
mov
xor
orl
add
inc
mov
sub
lea
xorl
xor
andl
xor
cmp
movl
je
not
mov
xor
adcl
add
movl
cmp
movl
jne
notl
pushl
andl
call
sbb
mov
adcl
mov
sub
mov
mov
and
xor
sbbl
mov
add
movl
cmp
movl
je
pushl
pushl
addl
call
mov
or
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
mov
addl
xor
add
cmp
movl
je
mov
and
mov
mov
movl
mov
mov
sbbl
add
xor
or
sub
mov
mov
mov
addl
add
movl
cmpl
je
cmpl
jne
pushl
push
pushl
call
cmpl
jne
mov
dec
mov
xor
add
dec
mov
jmp
sub
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
call
cmpl
jne
mov
inc
mov
jmp
dec
mov
mov
jmp
scas
bound
arpl
jae
push
ret
pop
pusha
pusha
or
pusha
or
gs
repnz
sbb
sbb
cmp
dec
xchg
xchg
call
push
mov
inc
stc
mov
adc
push
and
mov
or
cwtl
jge
shll
push
push
pop
insb
xor
mov
fmuls
pusha
xchg
mov
or
fnsetpm(287
mov
mov
push
pop
dec
sti
in
lods
mov
cmpsl
xor
adc
inc
fimuls
push
sub
ds
jle
enter
adc
mov
push
sbb
scas
push
icebp
jo
aad
adc
cmp
ret
lea
repz
pop
dec
adc
pop
stos
sub
aas
and
cmp
dec
adc
fcoms
jne
js
cli
pop
pop
lea
push
dec
fsubs
pop
jns
jmp
movsl
adc
imul
and
push
aam
cmp
sarl
shll
adc
shrb
dec
rcr
call
jmp
pop
test
stos
ret
int
test
xlat
arpl
jbe
repz
cmpsb
mov
lods
aad
cmp
stc
xor
push
andl
imul
mov
clc
xchg
std
pop
xchg
hlt
pusha
scas
ds
pop
and
testb
dec
jmp
mov
inc
fcoms
std
ljmp
sti
inc
dec
inc
cwtl
out
xchg
xor
mov
fistps
outsb
iret
arpl
nop
popa
popa
xchg
iret
roll
cli
dec
sbb
mov
adc
ss
insl
les
nop
add
or
lds
pop
outsl
loop
pop
xchg
jle
movsb
ja
psrld
xchg
ret
push
dec
fdivs
shl
test
shrb
push
lret
loope
nop
movsl
fsubs
ljmp
mov
cmp
scas
insl
fwait
cmc
int
clc
gs
in
push
test
jle
imul
arpl
lret
hlt
lret
cmc
mov
inc
jmp
jl
ret
push
sbb
in
sub
imul
inc
push
mov
lahf
test
mulb
push
push
rorb
cmp
mov
xchg
pop
into
add
sub
xchg
lods
add
add
sub
push
ficoms
mov
shlb
add
add
rcrb
imul
mov
adc
sbb
in
mov
or
push
push
mov
clc
test
roll
ficompl
lcall
int
scas
pop
inc
xchg
cld
xchg
scas
inc
jns
dec
int3
add
sub
inc
fcmove
push
mov
bound
loopne
pop
fmul
mov
lret
mov
lods
mov
es
cmc
mov
shlb
fdivl
in
mov
stos
xor
out
lcall
cmc
cmp
in
fstpt
jle
das
dec
push
push
jecxz
cli
and
nop
cltd
test
jg
mov
pop
add
xor
sbb
scas
xchg
out
inc
aad
aas
hlt
mov
lret
add
cmp
or
sahf
mov
lock
das
xchg
je
mov
push
push
ds
mov
outsb
scas
lahf
add
jp
ja
cli
inc
xchg
les
imul
dec
jmp
aaa
lea
sahf
push
push
leave
adc
mov
inc
xor
iret
sbb
jg
dec
test
mov
jg
and
les
pop
pop
cltd
mov
xor
std
testb
cmpb
jmp
jg
adc
sahf
das
mov
inc
push
add
xor
fsincos
dec
pop
mov
pop
in
addb
pop
in
mov
lea
mov
and
or
aaa
lret
sbb
dec
xlat
push
fs
inc
stos
pop
aas
movsb
push
adc
pop
dec
pushf
pop
jecxz
push
call
xchg
insb
cmp
mov
je
push
cmpsl
pop
sub
fnstenv
xchg
cmp
ja
mov
fidivs
dec
mov
test
pop
popa
mov
pop
repz
fistpl
mov
test
dec
aad
cmp
and
mov
dec
lods
std
adc
sbb
rclb
add
jb
mov
ja
mov
and
mov
dec
mov
jb
or
je
dec
cmp
add
rorb
pop
add
adc
jo
clc
dec
cmpsl
xor
ss
stos
adc
pop
inc
lcall
out
lahf
sub
pop
ds
test
aad
cmp
xor
icebp
jecxz
and
cli
lret
push
test
nop
sub
shlb
icebp
pushf
push
rol
test
out
xor
pop
xor
dec
lock
mov
sub
xorb
lcall
fwait
xor
stos
test
mov
leave
push
xchg
jnp
dec
cmp
mov
sbb
lea
push
push
adc
and
pop
add
push
sbb
loop
mov
daa
int3
adc
roll
mov
sahf
xchg
fmuls
mov
jle
dec
xor
ficoml
in
jp
leave
fldl
add
and
mov
lods
cmpsb
and
mov
pop
cmpl
repnz
cmpsb
lock
push
cmc
xchg
stc
cmp
gs
stc
in
movsb
icebp
sti
dec
xor
cmpsb
cmp
fs
inc
jno
mov
jo
ret
sarb
mov
loopne
lcall
in
fs
dec
mov
leavew
sti
cmp
inc
sbb
das
dec
and
lcall
movsb
jnp
sub
pusha
mov
call
ss
mull
movsb
ja
adc
mov
push
fisubrs
out
outsb
mov
xchg
pop
fwait
decb
mov
pop
lods
pop
nop
fs
lret
fcomps
roll
cmp
pop
and
negl
jp
sahf
xchg
xor
lahf
mov
inc
inc
add
xor
lods
jge
or
loop
mov
out
mov
sbb
mov
mov
movsl
adc
xor
les
ds
xchg
test
push
mov
add
dec
sbb
nop
and
pop
jge
loop
movsl
xor
mov
sub
int
iret
lods
or
adc
mov
arpl
orb
outsl
pop
xor
sbb
mov
clc
jecxz
xorb
fwait
cli
adc
and
inc
jle
sarl
cmpsl
inc
adc
stc
mov
bswap
sti
fistl
and
ja
dec
out
dec
adcl
xchg
repz
inc
stos
xchg
fidivrs
xchg
add
andb
adc
inc
mov
push
into
lret
pop
das
orl
push
xor
pop
xchg
adc
fwait
push
ja
jno
sub
or
push
mov
pop
dec
cs
add
jl
ljmp
pop
fnsave
nop
cwtl
ds
cmp
jge
rcrb
inc
fldt
inc
sete
cs
xor
in
fsubs
mov
inc
xchg
jnp
es
faddl
jns
mov
sub
inc
add
les
aad
push
jo
ret
repz
push
xor
push
aas
jno
std
xchg
out
jle
mov
shr
jae
sbb
or
mov
cmp
mov
pop
cs
int3
and
dec
and
push
mov
js
pop
iret
insb
add
pusha
insl
sbb
add
mov
imul
int3
aad
pop
cmpsl
leave
or
std
call
and
push
sti
push
xor
jp
push
pop
imulb
cmp
sub
jae
mov
add
pop
lahf
int3
mov
cld
daa
lahf
rclb
mov
std
mov
test
pop
shll
nop
or
int
std
call
adc
divb
aad
and
out
in
jnp
and
out
cmp
mov
or
pop
int
insl
das
int3
repz
fsubr
add
dec
xchg
push
js
xchg
imul
sbb
mov
adc
fidivs
imul
lret
xor
xor
gs
roll
dec
mov
int3
out
jmp
inc
inc
shrb
imul
pop
dec
pop
xchg
stos
sbb
xor
xchg
sbb
dec
xchg
fdivrs
ds
fnstenv
icebp
cmp
fsubr
imul
out
bound
dec
add
jge
fadds
lahf
or
ja
adc
pop
cmp
jo
mov
mov
scas
mov
insb
scas
stos
cmpsb
cltd
lods
dec
sub
and
je
adc
out
jno
into
scas
or
adc
jae
arpl
gs
shll
add
jmp
nop
jp
cmp
ja
mov
shl
xor
in
mov
push
fwait
repnz
cli
xchg
enter
repz
xchg
cs
xchg
sbb
pop
nop
inc
pop
push
shrl
mov
inc
cmpsl
mov
xor
cmp
fisttpl
leave
cmp
cmpl
xor
cmpsb
scas
jbe
mov
jp
and
daa
inc
adc
fucomp
sahf
out
dec
pop
xlat
sub
cmp
cmc
fimull
aam
mov
jecxz
addr16
xchg
cmp
or
xchg
mov
xchg
das
rclb
test
fst
dec
shrl
mov
ja
sub
lcall
rcrl
in
sub
mov
ret
jecxz
sbb
lret
pusha
fisubrs
in
sub
mov
pop
xchg
adc
push
and
stos
jb
inc
xor
adc
sbb
xor
hlt
mov
in
and
adc
push
ljmp
cs
sub
xchg
jno
xlat
and
or
cmp
fs
mov
inc
sbb
mov
cmp
jmp
mov
imul
fcmovnb
sub
cmpb
mov
push
mov
pop
test
or
mov
das
in
sbb
push
adc
inc
push
xchg
cmc
push
inc
jne
gs
add
mov
jnp
push
maskmovq
negl
xorb
pop
in
pushf
jb
adc
sbb
cmp
icebp
std
cli
and
xor
inc
repz
mov
sbb
jg
xor
ja
mov
rcrb
and
cwtl
adc
pop
pop
pop
nop
sbb
pusha
sub
sbb
and
push
mov
jg
inc
pop
ljmp
sbb
addr16
lahf
jae
jmp
aaa
push
push
mov
nop
cmp
mov
int
dec
and
mov
movsb
std
jb
mov
dec
shlb
jmp
in
sub
pop
pop
cld
ds
lock
jmp
pushf
sahf
sub
lds
test
push
push
test
pushf
test
leave
notb
lahf
dec
and
push
in
sarl
fcmove
sbb
inc
cmpsb
mov
jle
push
mov
adc
or
std
or
mov
sub
mov
sbb
daa
insb
ja
fwait
out
dec
xor
int3
mov
add
repnz
push
xchg
hlt
es
xchg
std
ret
out
enter
pop
mov
mov
scas
test
fsub
push
stc
ljmp
dec
or
jg
in
cli
pop
ljmpw
cmp
stc
subb
sahf
add
pop
lcall
mov
aad
lods
subl
insb
insb
cmpsl
out
shrb
aad
sbb
hlt
test
jae
and
push
daa
xor
fcmovnbe
jae
xchg
aas
jno
lahf
dec
pop
mov
jns
push
ret
and
xor
inc
fstpl
mov
inc
adc
push
scas
in
les
insl
ss
sub
and
dec
jb
gs
out
sahf
dec
bound
nop
adc
pop
fsubrp
sbb
addr16
shlb
rol
xchg
mov
sub
cmp
bound
divl
push
sub
out
xor
push
loopne
push
push
pop
add
stc
mov
ja
jle
mov
mov
dec
xchg
jb
andl
jb
sbb
fsub
hlt
and
movsl
fidivl
cmp
addr16
xchg
out
mov
pop
test
sbb
popa
mov
lret
dec
enter
jle
out
xor
sahf
inc
mov
sbb
loop
mov
fwait
mov
xlat
shr
adc
int
adc
dec
bound
cmp
movsl
xor
add
imul
push
or
jle
pop
adc
push
sbbb
fwait
test
addr16
in
leave
adc
ljmp
addb
dec
lea
loope
pop
jp
lds
cmpsb
hlt
jl
push
push
andl
nop
out
jo
push
js
into
pop
inc
or
push
mov
mov
pop
jns
mov
popf
cmp
or
jno
gs
push
inc
inc
push
movsb
out
push
insl
xor
jo
add
out
sbb
pop
test
in
sub
add
mov
in
push
movsl
test
bound
inc
xchg
xchg
xchg
imul
int3
aas
or
inc
xlat
pop
and
mov
je
mov
sub
adc
dec
shr
push
adc
cmpsb
and
mov
gs
leave
push
fcom
add
daa
repnz
outsb
std
cmpl
subb
das
aaa
and
cmp
pop
pop
cmp
dec
or
and
stos
insb
iret
mov
add
dec
out
int3
ja
int3
sbb
imull
bound
xor
push
aam
pop
sub
add
arpl
cwtl
imul
xor
leave
mov
xor
push
jp
stos
adc
fwait
ret
xchg
mov
adc
fldl
popf
push
nop
bound
or
shl
rclb
push
ret
shrl
sub
lods
jae
or
int
adc
lahf
pop
push
ret
cmp
aad
ficomps
das
mul
mov
out
movsl
icebp
insb
mov
outsb
test
mov
out
add
push
mov
jbe
inc
and
mov
dec
insb
jmp
mov
scas
push
and
mov
xchg
pushf
addb
dec
dec
xor
out
sarl
sub
push
or
aaa
or
test
pop
pop
je
ljmp
les
adc
push
push
adc
push
data16
lea
adc
scas
jns
insb
dec
loope
ljmp
daa
sub
jp
sahf
scas
cmpsl
packuswb
lock
xchg
in
in
jae
add
push
adc
cmp
xor
sub
repnz
ret
inc
lcall
leave
test
push
stc
arpl
outsl
hlt
stc
xchg
pop
rcll
jl
and
js
pop
push
cmovs
cltd
jnp
dec
lret
mov
neg
or
add
lods
adc
test
jge
pushf
imull
mov
mov
push
hlt
pop
add
cmp
sub
sub
jnp
repnz
pop
imul
mov
test
in
add
and
iret
mov
test
in
xchg
inc
pop
stos
inc
mov
out
sub
mov
scas
std
push
jbe
push
xlat
nop
aas
adc
lock
arpl
fistpll
push
cmpsb
push
jp
ret
out
fwait
xchg
sti
out
cmp
jno
add
fcmovb
test
inc
cld
lea
pop
fildll
mov
scas
mov
cmpsb
or
out
lods
mov
loopne
movsb
aam
sarl
les
out
inc
sete
jmp
push
imul
inc
ss
or
js
sbb
ljmp
jl,pt
outsl
lea
inc
add
mov
fs
jb
mov
iret
mov
das
out
and
mov
cmp
mov
xlat
mov
lock
and
or
inc
mov
push
ja
jp
and
xchg
fidivrs
data16
lahf
dec
mov
fstl
cmpsb
jecxz
push
imul
jns
fistpl
add
adc
test
movsl
xchg
pop
scas
inc
fisubs
jg
arpl
xor
sbb
dec
jg
add
outsl
sbb
sub
in
call
mov
imul
mov
jge
sub
push
cmpsb
adc
cmp
cmp
and
mov
push
lret
cmpsl
test
in
popf
bound
adc
sti
inc
out
sahf
in
inc
mov
jle,pn
jmp
rcr
mov
xor
xor
or
aam
fs
pop
jmp
pop
mov
adc
mov
sub
lret
adc
repz
enter
mov
sbb
mov
pop
mov
mov
outsb
rcll
stc
out
cmp
into
leave
pusha
and
fs
mov
xlat
mov
mov
cwtl
mov
cmp
ret
jge
add
rcrb
mov
pop
mov
cli
pop
push
test
popa
pop
roll
jecxz
fdivl
xchg
xor
jle
mov
pop
pop
pop
jo
sub
mov
mov
push
mov
inc
outsl
sbb
or
mov
mov
add
aaa
sbb
fs
nop
sbb
fstpt
out
and
lahf
fidivs
cmpsl
push
mov
insb
mul
xchg
lcall
ds
daa
int
push
sbb
jg
pop
shlb
lret
inc
push
test
aaa
rcl
rorl
inc
or
ficoms
aaa
pop
pop
daa
adc
fsts
popa
ljmp
push
cmpsb
ljmp
push
xchg
pop
or
cmpsl
fistps
xlat
pusha
aas
test
or
jecxz
inc
inc
mov
ret
arpl
scas
mov
add
or
adc
repz
push
and
adc
push
inc
add
inc
int
jg
and
push
fdivr
sar
mov
mov
xor
mov
or
aas
jno
add
cs
jl
sahf
sub
jl
push
lock
xor
fldenv
in
xorb
test
pop
dec
xor
add
shrl
test
aas
cmp
stos
xchg
push
js
push
xlat
cmp
inc
stos
mov
out
mov
pop
mov
arpl
push
pop
stos
cmp
or
mov
sbb
in
fwait
rcrl
in
jae
push
mov
out
xchg
mov
jp
leave
mov
xchg
cmp
cs
ja
lds
add
mov
out
jle
lods
push
mov
clc
pop
dec
sub
test
push
stos
cmp
xorb
inc
mov
adc
stos
bts
and
xchg
mov
cld
mov
dec
nop
outsb
outsl
lods
xchg
inc
mov
add
das
stos
sbb
dec
adcl
pop
mov
jg
sub
dec
mov
lods
leave
jne
adc
cmp
mov
mov
xchg
pop
mov
xchg
and
lds
add
pop
and
lods
int
cmpsl
xchg
dec
into
call
mov
orb
xchg
into
jno
sbb
mov
shll
fistpll
mov
mov
xor
gs
xor
cmp
xchg
mov
rclb
inc
iret
movsl
mov
or
pusha
xchg
pusha
int
lock
cmp
sbb
int
cmp
xchg
xchg
add
roll
stos
inc
pop
insb
in
or
mov
push
xchg
mov
add
sti
lret
dec
sub
xor
push
pop
ss
mov
in
adc
mov
mov
insb
out
push
sbb
outsl
roll
pusha
push
mov
insb
and
jecxz,pn
iret
enter
dec
inc
fdivrs
pop
jns
fistpll
pop
push
stos
aam
xor
sub
inc
xor
int
lret
xchg
mov
mov
cwtl
dec
lods
push
push
pop
cltd
lahf
negl
push
and
in
sti
push
movsb
jae
sbb
aas
mov
and
int3
push
imul
test
sahf
mov
enter
push
jns
sar
out
xchg
aad
stos
sbb
mov
imul
sub
push
mov
xchg
scas
dec
mov
or
and
ret
fnstenv
inc
sbb
andb
outsl
lods
loopne
aad
ficoms
lahf
and
cmpsl
lods
sbb
xor
push
into
fildll
cmp
or
dec
xchg
repz
pop
mov
mov
xor
xchg
out
adc
or
ret
pop
ret
inc
mov
hlt
addr16
aaa
push
je
ret
lahf
cmp
jo
and
add
cld
xchg
idivl
xor
lods
idiv
sbb
orl
fwait
insl
pop
mov
mov
jmp
loope
jmp
mov
jmp
push
mov
dec
inc
leave
mov
jae
cltd
sahf
mov
mov
popa
mov
push
pop
ss
arpl
adc
or
sbb
test
push
insb
pop
repnz
das
push
ljmp
push
or
push
jo
sub
loop
inc
cmp
cltd
dec
jmp
lcall
cmc
out
and
mov
fwait
sub
inc
sbb
jne
mov
mov
mov
ret
out
loopne
out
outsl
jge
cltd
xchg
mov
inc
jp
sub
adc
lea
loopne
dec
pop
pop
aas
or
sub
imul
sahf
dec
bound
mov
int3
mov
test
lcall
jp
mov
dec
not
pop
jbe
sahf
movsb
cmpsl
xor
ss
jg
pop
popa
dec
enter
mov
add
push
notb
sub
sti
out
test
pop
sahf
jb
subl
cltd
sub
negb
inc
js
add
dec
jle
pop
jbe
frstor
pop
enter
jecxz
or
imul
jb
test
xchg
or
cmpsb
in
or
mov
clc
insb
mov
push
cmp
xchg
rclb
pushl
xchg
mov
aad
or
push
ds
rcl
out
inc
incl
iret
movsl
mov
push
movsl
aad
sbb
lods
loope
add
add
pop
into
mov
mov
dec
mov
jl
or
inc
inc
mov
adc
mov
and
sbb
sub
xchg
movsb
sub
out
and
lock
lcall
aas
loop
into
jne
push
movsl
movsl
cmc
movsb
aaa
mov
mov
lds
mov
push
dec
mov
adcl
fdivl
stos
cmp
pop
hlt
push
insl
or
xchg
xor
pop
in
xor
bound
fisubrs
shlb
jno
sbb
fisttpl
shlb
dec
rcrl
popw
cmpl
xchg
neg
dec
mov
or
mov
dec
dec
shl
pusha
out
ss
cld
mov
sub
fisubl
fidivrs
mov
mov
xchg
jmp
repnz
aaa
filds
popf
dec
scas
in
insl
inc
or
scas
inc
inc
test
xor
push
ret
push
dec
dec
mov
scas
subl
cmp
pop
push
in
sub
pop
aad
xchg
xor
cmp
mov
ja
or
mov
xor
aas
mov
mov
adc
cmc
or
or
pop
aas
test
cmp
xor
shll
adc
jg
popa
and
test
cmp
aas
pusha
xor
push
push
sub
or
push
or
and
jp
ljmp
cmc
inc
int3
and
or
pop
and
dec
jb
data16
mov
bound
xor
jge
dec
adc
test
ret
fs
fimull
ret
addr16
mov
add
lods
mov
mov
jb
adc
mov
jno
jl
test
push
pop
jns
aad
test
fdiv
mov
testl
das
adc
pop
adc
imul
xchg
ficomps
jnp
nop
and
xor
insb
fcmovbe
mov
cmp
add
stos
mov
pop
sbb
adcb
movsl
or
and
ja
pop
out
cmp
mov
xor
push
es
jle
mov
push
mov
jae
out
fistpll
cmp
push
cmp
xchg
mov
daa
lcall
sub
push
jmp
fld
rolb
or
leave
stos
pop
and
lock
sbb
data16
push
fcoml
mov
push
add
cld
xlat
dec
push
jnp
fildl
adc
pop
mov
pop
shl
sub
add
ja
es
and
mov
sub
repnz
sub
mov
mov
sub
pop
addr16
and
inc
or
add
fmull
ret
js
and
push
mov
sbb
mov
adc
out
fs
adc
sub
pop
mov
xchg
loope
stos
or
scas
fistpl
xchg
xchg
js
fs
les
es
pop
cmpsb
mov
pop
jbe
jnp
cmpsl
pop
jnp
cltd
pop
bound
push
fistpll
xchg
arpl
sub
cmpsl
ret
dec
fldenv
xchg
leave
sub
push
sbb
ficomps
out
jle
enter
adc
data16
ljmp
push
xchg
or
sub
hlt
cltd
lahf
jbe
sti
xchg
aad
adc
iret
je
xor
adc
push
pop
lods
pop
dec
enter
cmp
xchg
add
push
inc
pop
dec
popf
push
jg
stc
fildl
pop
pop
push
enter
arpl
fst
inc
add
jo
sub
hlt
push
sbb
fdivrl
daa
fstl
popa
mov
xchg
fstl
sub
sub
test
add
daa
dec
push
fstpl
push
subb
in
xor
pop
ret
jbe
mov
stc
mov
and
mov
test
arpl
es
xchg
leave
pushf
mov
subb
xor
sub
adc
or
dec
aaa
xchg
outsl
inc
and
sbbl
cmpsb
cld
and
push
cmp
rol
jle
repnz
cwtl
movsb
cltd
shr
insl
cmp
inc
push
xor
push
pop
loopne
inc
jo
cmp
adc
scas
shrl
iret
pop
rcl
push
jo
scas
cwtl
frstor
push
mov
push
mov
shlb
dec
les
insb
sarb
sbb
sbb
fstps
out
das
sub
mov
jb
sbb
dec
nop
adc
jge
xchg
pop
ss
push
mov
xor
adc
jb
stos
jmp
xchg
xchg
insl
xor
mov
pop
mov
jns
jae
int
int
xchg
lret
incl
dec
mov
push
adc
jmp
je
out
ds
lret
xchg
mov
push
sti
or
or
je
xor
arpl
pop
mov
rol
out
daa
or
mov
mov
cmp
ss
jg
pop
cmpsl
cld
sbb
pop
dec
sub
out
push
mov
or
jns
xor
test
das
sbb
lea
lret
popf
mov
test
rorb
sahf
decl
movsl
adc
jnp
shll
mov
xor
mov
pop
outsl
or
in
jne
mov
mov
ds
fwait
shll
out
mov
ss
xor
outsl
cs
sti
cmpsb
dec
jge
addr16
into
mov
fstpt
or
fbstp
repz
mov
mov
das
sarl
pop
cmp
rcl
fidivs
cltd
movsl
dec
fisttpll
pop
js
bound
ljmp
push
mov
mov
in
xchg
jle,pn
sahf
test
inc
sbb
shll
adc
add
sub
or
ret
imul
out
pop
ret
mov
nop
popf
shll
sbb
jle
mov
std
ret
xchg
cmp
mov
add
repz
test
pusha
or
add
xor
jb
sbb
pusha
jp
xorl
sbb
into
dec
sbb
loopne
or
pop
call
mov
lret
xchg
test
xchg
loopne
insl
add
jb
loop
mov
imul
mov
outsl
push
inc
push
mov
cs
jno
jno
ljmp
inc
pusha
xor
filds
dec
inc
cs
jmp
inc
ds
and
popl
in
inc
shrb
cmp
daa
imul
enter
int
and
fwait
rep
stos
cli
adc
fistl
mov
addb
mov
inc
setl
sub
clc
jmp
ljmp
dec
sbb
push
mov
add
mov
sahf
jns
xchg
and
rcrl
loopne
ds
mov
push
stc
sub
sub
cmp
jno
ss
ret
jo
cmp
mulb
mov
call
and
cmp
push
xorb
fidivl
dec
test
repz
repz
xlat
daa
iret
les
ja
inc
xchg
enter
mov
push
and
push
mov
mov
push
out
jb
jg
push
shll
scas
push
adc
mov
add
clc
stos
sbb
daa
pushf
leave
sub
pop
cld
push
inc
dec
mov
cmp
push
das
popf
cmovl
rolb
mov
and
jb
aam
fistpll
and
sub
sbb
adc
js
and
dec
das
call
test
mov
push
push
mov
cs
adcb
fmul
enter
loop
fwait
lods
adc
jmp
imul
nop
mov
movsl
jne
sbb
sub
xor
negl
rcpps
sub
add
sub
xor
mov
call
inc
nop
or
mov
push
hlt
cmpsb
xor
push
ret
std
int
ljmp
data16
scas
jno
mov
mov
inc
aaa
out
sub
mov
movsb
mov
sub
fadd
push
mov
xor
cmp
xchg
mov
xlat
mov
mov
adc
pusha
orl
fldpi
pop
ds
pop
push
out
fnstsw
loope
mov
jge
add
xchg
inc
add
or
or
daa
bound
repnz
lods
lods
cmpsb
mov
jecxz
rol
mov
sbb
stos
jae
jb
mov
test
in
out
lcall
xchg
and
mov
cltd
popa
cmp
jp
mov
sub
mov
fistpll
mov
ret
mov
lret
cmp
push
jbe
sahf
mov
ljmp
ds
mov
clc
cltd
loope
aaa
scas
cmp
sbb
lods
xchg
mov
data16
ds
leave
aas
and
jl
mov
mov
pop
and
fs
add
push
mov
sbb
sarb
hlt
cli
cmp
test
roll
mov
shll
test
fldt
push
out
out
pop
cmp
cmp
fs
jns
inc
add
insl
mov
das
sahf
jno
or
addr16
cmp
cmp
dec
push
jmp
mov
push
add
insl
roll
push
fs
enter
mov
pop
and
push
ret
stos
cltd
push
in
push
rcrl
loope
or
out
popa
jle
push
push
into
pavgb
mov
push
xor
xchg
js
popa
add
mov
mov
movl
mov
jmp
mov
sbb
mov
add
and
mov
mov
subl
mov
orl
xor
add
cmp
movl
je
movl
jmp
mov
mov
andl
xor
add
movl
cmp
movl
je
mov
mov
add
mov
mov
xorl
xor
andl
add
movl
cmp
movl
je
sbbl
lea
orl
push
decl
pushl
subl
pushl
addl
call
notl
mov
mov
add
mov
mov
adc
mov
addl
xor
add
movl
cmp
movl
je
mov
mov
movzwl
mov
movl
mov
movl
mov
movl
jmp
and
mov
xor
lea
movl
jmp
sbb
mov
xorl
xor
orl
add
jmp
mov
xor
add
jmp
mov
add
mov
mov
test
je
movl
push
xor
pop
add
push
pop
push
dec
pop
dec
xchg
sub
xchg
dec
mov
imul
sub
mov
mov
mov
xor
mov
add
mov
mov
xor
add
mov
imul
mov
xor
mov
lea
cmp
je
mov
mov
mov
mov
mov
xor
xor
mov
add
div
mov
xor
lea
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
imul
mov
xor
mov
lea
cmp
jne
mov
jmp
mov
mov
mov
xor
add
mov
mov
add
xchg
xor
push
mov
pop
mov
add
lea
add
add
push
inc
pop
dec
xchg
dec
xchg
dec
xchg
dec
push
mov
pop
dec
call
cmp
je
xchg
push
pop
push
pop
inc
xchg
sub
xchg
dec
dec
mov
imul
add
xchg
push
xor
mov
dec
inc
add
dec
xor
add
pop
mov
pop
pop
pop
leave
ret
xorl
xor
addl
inc
ret
push
mov
mov
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
pushl
push
pushl
call
cmpl
jne
xor
xor
inc
mov
cmpl
jb
mov
movzbl
sbb
mov
cltd
andl
pushl
pop
inc
mov
cmpl
jne
pushl
call
cmpl
jb
add
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
pushl
pushl
pushl
push
call
cmpl
jne
mov
inc
mov
jmp
dec
mov
andl
jmp
pushl
pop
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
jmp
add
adc
push
push
mov
mov
mov
mov
xor
xor
xor
add
adc
xor
xor
cmp
jne
cmp
je
mov
mov
mov
xor
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
xor
mov
mov
mov
mov
mov
add
mov
mov
xor
add
xor
add
adc
xor
xor
xor
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
pop
pop
pop
pop
ret
push
mov
push
sub
movl
movzwl
or
mov
mov
incl
add
andl
xor
movl
cmp
movl
jne
mov
mov
add
movl
mov
adc
mov
movl
cmpl
je
cmpl
jne
push
push
pushl
call
mov
dec
mov
jmp
mov
xor
push
mov
mov
add
cmp
pop
je
mov
jmp
mov
xor
add
jmp
mov
xor
add
leave
ret
push
mov
sub
xorl
movl
lea
mov
xor
or
sub
and
mov
movl
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
push
movzbl
sbb
mov
mov
movl
cmpl
je
cmpl
jne
push
push
call
mov
dec
mov
jmp
mov
sub
lea
mov
movl
cmpl
je
cmpl
jne
pushl
call
mov
dec
mov
jmp
neg
mov
mov
movl
cmpl
je
cmpl
jne
push
call
cmpl
jne
mov
dec
mov
xor
or
dec
mov
jmp
movzbl
and
jmp
cmp
pop
arpl
iret
lret
mov
and
cmp
push
pop
pusha
pusha
aam
incb
pusha
popf
xor
jnp
mov
loope
iret
ror
mov
sbb
test
pop
sbb
push
in
nop
push
je
ds
add
fsubrl
pop
call
rol
dec
xchg
add
lret
cld
cmc
loopne
xchg
aas
out
mov
mov
mov
mov
mov
sbb
inc
sub
popf
jo
loope
les
xor
ja
add
int
test
mov
mov
push
jo
clts
stos
sarb
outsl
jle
fcomps
xchg
sub
adc
decl
mov
in
cmp
aas
sub
cs
pand
jl
loope
idiv
cmp
lret
ret
imul
notb
jns
mov
add
inc
dec
in
jl
pop
fcoml
repz
daa
leave
sbb
adc
or
and
in
adc
sub
push
sbb
mov
das
xchg
pop
daa
repnz
in
dec
push
lahf
mov
adc
sbb
push
fisttpl
push
or
cwtl
mov
or
xor
lahf
mov
sahf
testb
stos
lods
push
jns
enter
scas
rcrb
aam
xchg
fs
shrl
ja
lret
mov
jne
mov
and
pop
xlat
cli
iret
sub
leave
mov
fcoml
xor
xchg
cli
cs
pop
mov
ss
je
dec
loope
sahf
fsubs
xor
js
testb
ljmp
ss
dec
fucomp
sbb
aaa
and
fmuls
dec
fistl
adc
shl
cmc
mov
push
fimull
push
jecxz
adc
sbb
jg
push
repz
cltd
mov
clc
loope
test
out
imul
xchg
and
pop
push
in
adc
mov
nop
scas
xchg
fwait
cmc
cmp
aaa
lods
adc
decb
sbb
push
and
fsubp
pop
xchg
mov
and
pop
mov
mov
mov
mov
test
ja
or
sub
out
dec
add
mov
dec
add
xor
ss
and
and
jnp
call
and
and
push
js
dec
mov
sub
xor
mov
cs
and
loope
adcl
xchg
dec
add
mov
sub
jl
inc
insb
repnz
movsb
mov
xchg
mov
fiaddl
jns
lock
xchg
jp
bound
push
ljmp
push
jg
in
inc
and
mov
aas
push
jle
fwait
mov
pusha
in
rol
aad
aam
jge
mov
mov
sti
inc
ret
push
bound
cmp
insb
adc
dec
cli
fucomp
sbb
pop
fisttps
add
fstps
sbb
aaa
sbb
imulb
push
mov
push
rorb
arpl
movsb
inc
outsl
sub
ljmp
aas
pop
xchg
mov
mov
mov
arpl
sarl
inc
push
leave
mov
testl
shlb
iret
add
dec
leave
push
inc
pop
mov
leave
sbb
dec
inc
in
mov
mov
nop
pushf
or
xor
test
nop
and
imul
aaa
xchg
or
daa
mov
jns
jp
inc
aam
lds
sub
popa
shrl
sbb
dec
into
andl
pop
cmp
lret
cmp
mov
jmp
xor
push
adc
and
pop
fnsave
pop
and
xchg
cs
lea
xchg
adc
pop
inc
sub
jae
cld
jmp
pop
push
or
test
movsl
jae
or
mov
sbb
adc
insb
insl
sahf
int3
mov
pop
js
test
jns
nop
lret
cmpb
repnz
out
popa
sti
mov
lcall
sbb
sub
in
mov
in
mov
or
mov
push
xchg
jecxz
cmpl
cmp
or
ljmp
add
repz
mov
movsb
insl
sbb
pop
push
and
and
test
pop
mov
test
fwait
aam
mov
sbb
mov
es
icebp
int
movsl
scas
cld
repz
in
push
add
sub
sahf
pop
push
bound
lock
xchg
lahf
mov
dec
loope
push
lret
mov
aaa
loop
jb
sub
jmp
into
addr16
add
cmp
fdivl
dec
gs
fsts
adc
push
sub
mov
bnd
xchg
and
lods
pop
xchg
dec
fisubrs
test
mov
adc
fcmovnb
cmp
sbb
cmp
or
push
jg
or
xchg
push
sub
scas
into
dec
sub
rclb
xchg
cmp
movsb
fnstsw
adc
jmp
add
or
xor
xorl
push
sub
insl
sbb
inc
enter
enter
cmp
cwtl
cmp
bound
outsl
mov
pop
sub
inc
sbb
addb
sbb
and
mov
iret
xor
fistl
icebp
cmp
shlb
movsb
es
clc
and
cmp
pop
jp
and
imul
pop
sub
xchg
or
pop
cmpsb
xchg
fmuls
idivl
inc
and
pop
jecxz
imul
faddl
inc
psubusw
sub
data16
imull
push
repz
pushf
repnz
fildl
dec
out
addb
scas
ret
mov
shrl
jae
loope
mov
in
sbbb
setge
outsl
testb
outsb
mov
or
dec
ljmp
pop
push
daa
jno
in
loop
inc
adc
hlt
add
lea
repz
dec
mov
iret
aas
jb
mov
adc
lcall
andb
dec
fcoms
push
out
bound
aad
add
pushf
sahf
jecxz
sbb
lods
mov
mov
cmpb
cmpsl
mov
loop
shl
movsl
jge
shlb
dec
popf
pop
mov
pop
int
adc
scas
xchg
test
inc
icebp
and
add
jb
xchg
jno
adc
mov
inc
movsb
push
imul
test
dec
loop
popa
mov
lret
jno
subb
in
mov
sub
or
jl
sub
push
jp,pn
mov
sahf
inc
popa
or
loope
inc
je
jl
xchg
dec
sti
fs
push
icebp
jl
lock
fistpl
in
push
ret
sub
popa
add
int3
fstl
jmp
cld
iret
sarl
jle
mov
lahf
pop
ja
sahf
fisubrs
adc
scas
outsb
adc
jg
sti
int
adc
stos
int
adcb
jecxz
inc
rclb
std
sub
int3
adc
jns
lds
out
add
mov
sbb
inc
cmc
adc
shlb
out
subl
or
adc
in
sbb
sti
aas
xor
lcall
into
outsb
ljmp
jg
pop
lea
mov
lcall
mov
jl
stos
outsb
fidivs
pop
jbe
dec
js
mov
cld
and
mov
leave
adc
xchg
data16
jl
lods
xlat
lret
inc
lds
stos
shrl
stos
sbbl
jg
gs
add
fisttps
and
xchg
xor
xchg
addr16
js
cmpsb
inc
mov
ss
test
inc
mov
stc
sbb
int3
bound
loopne
cmp
dec
xor
test
xor
lret
mov
into
add
jb
aaa
xchg
lea
lea
ret
pop
sub
sbb
xchg
stc
call
mov
daa
sbb
inc
jo
xchg
andb
int3
ja
stos
jns
jge
faddl
jl
jl
inc
push
fisttpl
mov
push
cwtl
xor
enter
mov
dec
cld
movaps
ja
sub
cmp
movsl
jne
mov
divl
clc
mov
xchg
push
pop
mov
es
jb
imul
ffree
enter
stos
push
push
fnstenv
cwtl
adc
sbb
dec
add
xor
jmp
repnz
add
dec
adc
inc
jecxz
outsb
icebp
jmp
sar
lock
inc
inc
sub
repnz
fisubrl
dec
enter
shl
fidivl
xlat
adc
adc
pop
mov
dec
stos
fisubrl
mov
sub
push
jne
mov
jp
insb
test
das
add
cmc
sub
inc
lcall
dec
and
sahf
sbb
data16
dec
jne
xor
fildll
insb
cmpsl
jmp
lods
jo
jmp
inc
adc
mov
nop
xchg
adc
ficoml
mov
pop
shl
add
loop
inc
dec
std
dec
mov
cmp
xor
cmpsb
loope
cmpsl
sbb
mov
frstor
mov
nop
fbld
fsts
sbb
pop
jl
xchg
mov
pop
xor
mov
cmp
jg
mov
movsb
pop
mov
or
fdivr
mov
xchg
scas
rcll
xor
mov
sbb
mov
and
testb
fwait
mov
jge
xor
mov
xor
dec
scas
rcll
sub
cmp
mov
push
outsl
pop
add
mov
jno
mov
rcrl
popa
imul
push
sub
into
subl
lea
pop
dec
rcrl
push
stos
sbb
xchg
movsl
xor
adc
cmpl
dec
lods
inc
cli
and
js
popa
cld
fadds
sahf
jbe
insl
icebp
ret
rcl
and
push
bound
leave
and
xor
fildl
roll
int3
out
ret
adc
fwait
xor
or
adc
cmpsb
dec
mov
out
in
mov
aam
cmpsl
jmp
std
mov
fistl
adc
inc
test
mov
shrl
stc
out
data16
mov
in
insl
xor
fnstsw
push
ficoms
sbb
cmp
aas
mov
bound
xchg
dec
fwait
dec
dec
test
mov
aam
jne
bound
cltd
sbb
loop
cmp
push
dec
push
cmp
shll
dec
ja
inc
xchg
cli
iret
xchg
adc
fsubs
fidivl
popl
jb
adc
out
cmp
push
imul
or
ljmp
test
idivl
lock
jecxz
jle
jmp
mov
adc
pop
std
repz
clc
or
sbb
adc
cvtdq2ps
add
sub
cmp
scas
pop
inc
pop
lret
cmp
adc
xchg
imul
inc
pop
aad
dec
stos
lds
movsl
and
adc
mov
icebp
add
mov
rcl
cmp
out
movsb
ret
mov
fcom
or
into
lret
imul
cmp
jae
dec
jp
aad
adc
addr16
cld
dec
stos
jp
cltd
add
in
sbb
inc
jb
xor
lret
jbe
call
inc
jno
test
xchg
dec
mov
ret
scas
or
leave
or
out
repz
outsb
and
orb
fsubrl
mov
add
iret
sub
jno
inc
pop
pop
ret
dec
and
sbb
adc
clc
xor
sar
xor
ficoms
mov
sub
out
icebp
xor
fidivl
fldcw
jbe
push
adc
jmp
out
pop
push
shrl
cmc
push
inc
xchg
lods
shl
pop
cld
jecxz
mov
jmp
loopne
xchg
aas
icebp
pop
stc
shrl
bound
stos
adc
jge
js
mov
out
dec
mov
adc
mov
mov
div
add
mull
dec
mov
bound
shrb
sbb
xchg
mov
xchg
adc
push
mov
pop
cld
int
jne
fildl
outsl
mov
adc
jl
cmc
push
fiaddl
mov
and
loopne
cmp
add
and
mov
sub
test
jmp
insl
test
call
jle
fnop
jbe
cmp
icebp
popl
aad
adc
fnstenv
test
fsubrs
mov
insb
jno
movsl
push
iret
pop
and
rcll
mov
cmp
or
mov
sub
mov
in
ljmp
push
scas
push
ja
fnsaves
push
mov
dec
ja
dec
mov
and
mov
push
add
ficompl
in
shll
mov
xchg
xchg
shrl
sbb
add
push
inc
pusha
adc
mov
pushf
lods
and
xchg
lahf
push
cmp
lods
fidivs
sbb
xor
push
jg
in
loop
adc
sbb
cmpsl
or
cmp
mov
mov
cmp
repnz
and
iret
cmp
shrl
sub
sti
das
fcoml
fs
pop
xor
pop
inc
pop
out
mov
cwtl
or
addl
mov
imul
ja
push
pop
loop
shll
mov
sbb
shlb
jmp
and
ljmp
fistps
das
mov
add
decl
cmp
clc
cmpsl
mov
shrb
adc
mov
pusha
movsl
mov
xchg
mov
inc
cmp
jo
shrb
aam
mov
xchg
push
nop
pop
push
aaa
xor
dec
add
shll
pop
xchg
hlt
loopne
jnp
sti
icebp
dec
das
pop
pop
mov
add
nop
mov
push
pop
cmp
cmpsl
jmp
mov
xchg
mov
shl
cmpsb
les
jmp
mov
repnz
dec
cmc
ret
adc
and
movsl
xchg
adc
xchg
and
lret
sbb
lcall
mov
xor
jp
xchg
or
xchg
mov
adc
xchg
adc
rcl
lock
xchg
dec
inc
mov
sbb
mov
and
nop
out
pushf
test
cmp
test
push
adc
pop
pusha
jns
add
sbb
leave
mov
xchg
es
sub
and
je
pop
pop
dec
out
addr16
mov
push
test
nop
jg
or
shrl
test
testb
ret
push
pop
mov
or
mov
adc
jge
ret
cmpl
mov
mov
fmuls
mov
inc
push
mov
test
fwait
mov
aam
jge
sub
lret
cltd
mov
cmp
pushf
adc
xchg
sbb
xchg
xchg
or
ljmp
cmp
hlt
inc
push
sbb
out
popf
lcall
pop
imulb
js
xchg
rcl
insl
and
mov
jmp
aas
jp
rcll
jge
adc
aas
xchg
je
mov
shlb
adc
or
mov
aas
pop
and
jns
cmc
lods
movsl
sbbb
mov
dec
adc
clc
xorb
xor
sbb
mov
xorl
push
mov
cmp
adc
aad
or
cmpsl
cmpsl
mov
ja
xchg
inc
mov
jno,pn
cmp
je
inc
mov
and
sbb
xlat
and
or
rcrl
in
lcall
mov
push
scas
pop
imul
das
mov
data16
mov
gs
cmpsb
das
out
push
pause
std
mov
fiadds
mov
cmp
data16
inc
inc
add
sub
xor
xchg
cmc
mov
shlb
or
inc
mov
out
pop
push
fdivrl
arpl
test
push
dec
lds
pop
jo
clc
addb
in
xchg
int3
xrelease
jmp
jle
xchg
jle
lcall
inc
bound
mov
pop
dec
insl
push
je
or
test
out
jb
fstpl
addr16
in
je
fwait
push
hlt
xchg
mov
dec
adc
inc
lret
clc
imul
repz
das
loop
out
repnz
enter
push
pop
add
mov
shrb
add
mov
add
push
insl
movsb
cli
in
orb
stc
fsubrl
ficompl
jle
push
mov
subb
push
sbb
xor
mov
lds
push
cmpsl
jecxz
push
cld
adc
inc
push
adc
cmp
xchg
or
xor
xor
or
insl
jae
mov
adc
dec
aas
or
into
icebp
pop
add
sbb
fwait
pop
cmpsl
or
xchg
stos
push
push
pushf
leave
sub
lods
test
add
jmp
mov
mov
dec
orl
fdivrp
andl
ljmp
add
jg
jno
addr16
movsb
out
cwtl
int
movsl
cmp
call
addr16
fs
fsubrl
fidivl
xchg
sub
jp
imul
cmp
mov
cmp
test
and
loop
dec
cs
fistl
in
sbb
addb
jnp
push
pop
xchg
xor
fistps
subl
inc
mov
jnp
out
faddl
scas
jb
jno,pt
sbb
sbb
xor
sub
jg
les
stos
add
scas
mov
jbe
add
movsl
inc
mov
test
gs
xor
in
sbb
movsl
or
je
xchg
and
imul
bnd
jns
cmp
pop
dec
jge
pusha
call
imul
shrl
dec
cmp
mov
outsb
mull
add
mov
scas
pop
xor
xchg
hlt
cmpsl
adc
clc
push
fistps
sub
inc
fiadds
xchg
dec
fwait
out
scas
mov
test
adc
add
push
mov
cmc
sbb
push
lret
mov
lret
movsb
jb
roll
lret
mov
aaa
push
mov
inc
pusha
sub
cmp
incb
sbb
sahf
daa
xchg
pop
xchg
lcall
xchg
mov
and
xchg
inc
jnp
repnz
mov
xchg
push
ljmp
cli
test
cmp
int
in
push
cli
and
and
fnstenv
aam
inc
mov
filds
iret
xchg
icebp
sbbl
vstmxcsr
sahf
mov
nop
xchg
push
cli
adc
sub
jno
xchg
xchg
adc
js
sub
and
cmp
lods
in
mov
fimuls
dec
cmc
in
scas
and
mov
sbb
cmp
cmpsl
std
push
fildl
test
scas
ret
mov
imulb
test
sti
mov
js
sub
pop
in
cmp
mov
shl
dec
mov
add
fwait
out
movsb
cmp
add
fsubrs
xor
cmp
inc
dec
dec
add
ljmp
in
mov
adc
jne
cwtl
in
pop
in
jecxz
add
lds
lret
add
sbb
pusha
int3
jne
adc
test
mov
rorl
cli
movsl
adc
mov
xor
mov
loop
sub
xchg
rsqrtps
and
clc
pop
fldcw
fs
push
add
xchg
pusha
in
cwtl
inc
xor
jnp
pushf
call
sub
pop
out
ds
dec
mov
xchg
dec
lret
bound
es
std
and
lea
iret
and
pop
out
rolb
xchg
pop
jbe
lock
pop
jb
int3
cmpsl
sub
dec
imull
jp
adc
sar
mov
jne
jo
in
inc
out
jno
push
and
sti
insl
and
cld
cmp
adc
testb
xlat
add
jle
and
imul
jb
rclb
pop
push
adc
out
imul
stc
jp
xchg
in
jg
test
daa
in
dec
cltd
sbb
out
call
mov
in
fmull
movsl
hlt
pop
int
addr16
xchg
cmpsl
punpcklbw
outsb
mov
mov
bswap
push
cmp
sbb
dec
mov
xchg
adc
repz
lret
sub
xchg
adc
repz
cmp
jle
sub
jg
mov
nop
mov
ljmp
stc
jl
sub
lret
int
mov
jl
ficoms
jns
sub
test
lea
xor
sub
add
test
mov
xor
mov
cmpsb
loope
and
dec
aam
mulb
mov
xor
cmp
dec
jmp
dec
mov
stos
inc
mov
iret
mov
push
fisubrs
pushf
pop
sbb
sub
or
jb
mov
mov
jno
mov
lods
jmp
test
pop
xor
push
insl
fs
jmp
cmc
test
jne
push
sub
xor
std
aad
bound
mov
popf
sbbl
mov
pop
fs
leave
mov
fsubr
sbb
outsl
enter
stc
sti
xchg
sahf
xchg
inc
rcll
cwtl
xchg
call
cmp
outsl
mov
adc
xchg
add
dec
stos
push
dec
mov
ret
orl
adc
mov
jbe
jge
outsl
add
fidivrs
out
inc
test
adc
sar
cs
cmp
dec
ss
push
lea
and
push
and
repz
pop
insb
xor
and
add
fists
inc
xchg
xchg
push
jae
adc
jp
outsb
ret
rcr
sub
rcrl
js
cli
push
push
push
lcall
xor
in
loopne
xor
dec
ret
jl
and
xor
movsl
mov
es
hlt
mov
sub
xchg
inc
push
pop
pop
adc
cmp
or
sbb
cmpsb
push
js
mov
out
xchg
jg
lods
imul
sbb
pop
pop
pop
jecxz
fbld
loop
ret
arpl
push
fstps
mov
fstpl
jno
mov
int3
jo
sub
mov
xchg
cli
push
cli
xor
loop
icebp
jecxz
inc
lret
sub
ljmp
cmp
sub
in
cld
xor
or
mov
insb
stos
jl
out
mov
cltd
js
loope
movsl
adcl
mov
repnz
in
movsl
out
ret
sub
cld
sti
inc
dec
in
outsl
pop
cmp
pop
xchg
test
jae
ret
pop
push
mov
and
xor
mov
imul
cld
iret
movsl
in
sbb
lret
jbe
sub
push
aad
or
movsl
xchg
push
jmp
mov
gs
imul
test
xchg
rcrl
jno
lret
and
sahf
inc
testl
mov
dec
test
ret
sbb
adc
call
push
out
daa
sub
repnz
fxch
jne
push
inc
jae
jp
dec
jns
dec
mov
push
and
lret
mov
jnp
cs
fstps
and
movsb
jl
dec
ljmp
mov
imul
mov
xchg
mov
sbb
and
adc
sub
int3
je
arpl
lea
stos
fdivrl
sbb
mov
and
dec
andb
in
pop
fiaddl
fsubrl
sub
out
out
lods
hlt
mov
jno
and
ljmp
jno
dec
xchg
pop
mov
cmp
mul
loop
in
xlat
pushf
int
adc
inc
daa
js
lods
fcompl
in
inc
xlat
cmp
arpl
jl
enter
repnz
push
cmpsl
cmp
repnz
insb
pop
dec
and
sub
pushf
icebp
mov
cli
sbb
aas
shrb
mov
sahf
inc
mov
cmp
mov
gs
cmpsb
sub
dec
xchg
int
inc
xchg
std
mov
pop
ss
sbb
insl
xor
jl
cmp
outsl
mov
mov
push
shlb
dec
cmp
jno
pop
lcall
negb
xchg
or
out
dec
push
mov
leave
push
fs
dec
push
add
mov
sti
xchg
cmp
or
inc
adc
dec
test
jmp
mov
adc
movsb
mov
cmp
push
lock
jmp
dec
gs
or
inc
dec
lahf
ljmp
enter
xchg
and
add
cmp
xor
in
dec
pop
sub
pushaw
adcb
rcrl
dec
mov
loop
and
shll
ror
shlb
cwtl
or
adc
bound
shlb
and
dec
ret
push
sub
scas
mov
fnsave
fwait
pusha
cmc
dec
xlat
push
rclb
lods
pushf
repz
pop
pop
movb
dec
in
cmp
stos
addr16
jb
sbb
xor
out
xor
or
lds
dec
gs
subl
loope
and
push
jge
or
jmp
lods
aaa
out
sti
jnp
iret
mov
sub
pop
pop
popa
add
adc
sub
insb
cli
xchg
sahf
xchg
inc
add
adc
into
mov
push
popa
push
loopne
rcrl
inc
out
push
add
push
test
sbb
imul
mov
and
xchg
lret
inc
sbb
inc
scas
cmpsw
mov
dec
rcl
clc
hlt
push
sub
adc
repnz
xor
jp
jp
sub
add
dec
fsubrl
cmpl
push
cld
lahf
inc
cmp
sti
test
unpckhps
push
inc
jp
mov
pop
dec
stos
lret
jns
mov
je
inc
inc
sbb
rcll
push
popl
fmuls
stos
repnz
and
or
dec
repz
addr16
dec
mov
inc
xchg
test
int
lds
push
movsl
loope
and
shlb
inc
xchg
es
fwait
imul
sbb
add
test
imull
rolb
and
loop
push
in
pusha
lods
mov
ds
lods
xchg
push
mov
subl
fcoms
inc
ljmp
popa
mov
cmpsl
int3
lcall
arpl
pop
pop
adc
push
or
sub
je
push
rol
mov
insl
sahf
jmp
xchg
rcr
iret
fldenv
out
add
pop
mov
lcall
adc
aad
fdivrp
pop
fdivrs
ds
into
and
je
adc
or
js
mov
sbb
cmp
jbe
jge
mov
sbbb
test
mov
ljmp
test
stc
das
xor
out
out
dec
pop
ss
sbb
pop
and
mov
in
enter
sar
cmp
and
jecxz
or
stos
mov
xlat
jns
or
sbb
inc
jp
push
mov
in
mov
mov
in
lock
fisubs
mov
cmp
fisubl
push
dec
insl
scas
sbb
xchg
mov
lock
jmp
xchg
cwtl
outsl
adc
in
cld
or
mov
mov
mov
ret
mov
jl
inc
out
clc
cmp
mov
data16
leave
shr
adc
std
into
int3
cwtl
loop
jecxz
mov
int
inc
cmp
out
push
int
cli
mov
rcll
hlt
imul
jle
movsb
ret
jo
aaa
cmpsb
fcmovu
bound
xor
push
ret
cld
jp
in
testb
mov
add
pop
or
jmp
repnz
add
sbbw
mov
mov
push
add
xchg
xor
cmp
mov
sub
enter
inc
and
jp
push
mov
add
sub
flds
bound
jecxz
test
pop
jmp
popa
mov
stos
fiadds
imul
lea
rcrl
es
repnz
jno
les
imul
bound
inc
rcrb
stos
push
ret
inc
xor
mov
xchg
popa
jmp
mov
lds
xchg
fcmovne
mov
mov
loopne
sub
mov
lods
push
or
fbld
scas
and
mov
adc
test
test
cs
jge
call
clc
lahf
xchg
pop
or
andb
test
adcb
jecxz
ficomps
adc
ror
dec
cmp
testb
mov
out
mov
add
jnp
sbb
fcom
orl
loopne
xchg
sbb
add
add
add
out
repz
and
icebp
subl
sar
loopne
lahf
out
in
pushf
insb
stos
xchg
rclb
cld
ret
jg
pop
xor
xchg
repz
dec
je
inc
int
lds
gs
push
int3
cmp
mov
shll
sbb
lods
jle
cld
dec
call
std
xor
sbb
loope
dec
or
daa
pusha
idivl
xor
mov
xor
mov
xchg
pop
lods
sbbl
fs
jno
cmp
push
xlat
jmp
lds
iret
cs
xchg
adc
mov
pop
fs
out
fmull
dec
xor
jb
into
xchg
pop
mov
call
mov
adc
sub
test
push
pop
inc
loop
stos
jns
out
dec
fsubrl
dec
stc
sub
fisubs
icebp
cmp
leave
xchg
jp
popf
sbb
cli
lret
mov
dec
lods
sub
aas
xchg
and
test
adc
jmp
repz
mov
xor
je
mov
lret
hlt
push
in
or
in
cmp
aas
sbb
pop
aad
out
outsl
mov
add
jbe
ja
lret
fistpll
ss
mov
or
pop
jp
mov
test
sub
mov
xchg
mov
xor
daa
push
je
pushf
mov
push
bound
loope
mov
jmp
mov
popa
ja
dec
dec
lcall
repnz
pop
jecxz
adc
aam
test
repnz
lea
outsb
cwtl
pushf
inc
push
pushf
fistpl
mov
test
jle
test
into
adc
inc
in
sub
inc
add
sub
imul
cmp
movsb
loopne
movsl
and
sete
mov
in
mov
scas
int3
mov
int3
sub
adc
dec
mov
iret
sbb
push
adc
loop
lret
aaa
or
xchg
outsb
mov
das
fs
push
dec
jl
leave
pop
and
mov
pop
pop
out
mov
stos
cwtl
daa
clc
sbb
or
imul
push
mov
lret
and
pop
outsb
xor
mov
push
push
loop
out
lcall
mov
or
insb
mov
leave
sbb
icebp
mov
pop
mov
xor
nop
mov
sahf
lods
xlat
sti
push
and
fistl
jne
data16
mov
dec
aas
jnp
pop
or
out
std
hlt
je
lock
orl
xor
add
mov
mov
sub
mov
orl
mov
add
sub
push
adc
mov
mov
mov
adcl
mov
not
xor
mov
sbbl
add
cmp
movl
je
movl
mov
movl
jmp
mov
movl
cmp
jne
push
movl
jmp
movl
mov
mov
mov
movl
cmp
movl
jne
or
mov
adc
xor
add
sbb
mov
mov
xor
mov
mov
xorl
xor
add
imul
mov
adcl
xor
xorl
add
cmp
mov
mov
movl
push
movl
je
jmp
pop
xchg
dec
into
int
xchg
lods
scas
popf
push
xlat
push
pop
push
pusha
pusha
push
pop
pusha
pusha
add
pop
sbb
ss
hlt
push
push
or
pop
xchg
rcll
mov
jno
jb
mov
lock
xchg
pusha
sbb
xor
xchg
movmskps
mov
ds
das
push
mov
int
pusha
jo
dec
add
ljmp
insb
xchg
adc
imul
cltd
lods
cmpsl
mov
xchg
mov
int
loop
inc
inc
push
stc
repz
jns
add
sbb
aad
push
and
fistps
mov
ljmp
adc
lock
je
sbb
scas
xlat
sbb
push
cmpl
dec
mov
out
mov
sbb
into
enter
dec
sahf
das
or
test
repz
add
inc
fldcw
and
divl
sbb
sarb
mov
mov
pop
dec
sub
or
fdivl
lret
pop
popf
sbb
stos
loopne
mov
mov
into
hlt
xchg
popf
shlb
ja
jnp
ljmp
pop
aaa
imul
aaa
pop
jns
cmp
dec
sub
mov
xchg
xchg
pop
jg,pt
pop
mov
mov
and
mov
outsb
fsubrs
adc
sbb
inc
sarb
and
add
sub
mov
inc
dec
inc
arpl
mov
mov
lods
cmp
lret
ja
into
sbb
cmp
xchg
mov
sub
or
or
clc
mov
mov
sar
outsl
push
int
adc
cmpsl
or
mov
sbb
fstl
jo
popa
mov
xor
mov
jbe
sbb
xor
test
dec
shlb
sub
shll
dec
inc
pop
iret
xor
nop
jae
xchg
repnz
cmp
gs
mov
outsb
xchg
out
adc
cld
test
pop
adc
xlat
rcr
loopne
cmp
xchg
fadds
mov
aad
dec
enter
sbb
mov
sbb
or
xor
pop
call
fisttpll
out
ret
jo
cwtl
pop
cmc
rorb
adc
pop
or
ja
fldcw
push
repnz
push
xor
sub
cld
dec
pop
xchg
mov
imul
rorl
mov
cmpsl
mov
xchg
lods
test
push
in
test
inc
movsb
cld
xchg
adc
lret
push
pop
xchg
ss
xlat
cli
fmull
xlat
fsubrs
hlt
jne
push
adc
test
fnsave
popa
rcr
push
ret
outsl
in
adc
push
adc
and
adc
inc
stc
lea
xchg
or
sub
pop
sti
out
xor
lret
xchg
dec
mov
out
call
mov
mov
jo
mov
pop
or
xor
pop
mov
xchg
ljmp
pop
insb
push
js
push
mov
rep
mov
enter
dec
cs
mov
pop
xchg
scas
outsl
cwtl
cmp
mov
and
test
mov
inc
repz
mov
out
std
add
int
cmc
mov
mov
fisttpll
ret
paddusw
loop
push
jno
lahf
mov
jg
push
inc
inc
add
sbb
mov
ljmp
xchg
pop
mov
pop
je
adc
rcl
pop
test
inc
pop
loopne
adc
xchg
cmp
mov
push
or
pop
leave
or
into
rolb
pop
int3
ds
enter
mov
push
and
insb
loopne
cmpsb
mov
cmp
sub
xor
out
inc
push
sub
jno
clc
xchg
imul
jp
lahf
out
mov
or
sbb
fstpt
lock
xchg
inc
xchg
subb
std
pop
mov
scas
sbb
imul
movsl
test
cli
subps
xor
dec
dec
inc
push
cs
mov
push
ja
fwait
out
stc
push
inc
jne
cmc
jne
je
ficoml
lret
pop
lds
sub
addl
jl,pn
mov
mov
imul
jl
test
daa
mov
aas
mov
or
sub
test
je
shl
cmpsb
int
fcoms
std
fs
shlb
sbb
popa
clc
pop
lock
mov
cmp
pop
jns
and
dec
xchg
ror
pop
jmp
dec
popa
xor
adc
hlt
rorb
scas
mov
add
xlat
push
insl
das
neg
mov
pop
and
pushf
enterw
sbb
aad
sbb
or
das
push
mov
dec
xchg
add
mov
lds
jno
daa
push
imul
mov
mov
or
in
xor
decl
and
sbb
adc
xor
mov
sbb
aas
test
shll
ljmp
add
repnz
cmp
xchg
pusha
mov
loopne
loop
dec
and
and
xor
out
ja
adc
pop
sbb
jae
mov
mov
and
mov
add
test
xor
je
int
ror
fsubs
stc
test
jge
cmp
or
stos
adc
sbb
repnz
jo
sub
loope
jbe
mov
frstor
adc
in
dec
repz
aaa
cmpb
push
mov
insb
pusha
mov
arpl
sbb
rcrb
stos
add
xchg
loopne
and
and
mul
lds
or
adc
aad
add
fwait
dec
imull
fs
nop
mov
fnstcw
jo
xor
or
sbb
imul
lcall
adc
andl
add
shll
push
fs
xchg
mov
jecxz
shlb
mov
outsl
call
stos
inc
xor
pop
add
daa
cmp
cmp
cmpsl
dec
cli
repz
roll
xor
aaa
jne
sub
lahf
mov
inc
inc
cltd
rcll
div
aad
addr16
lcall
inc
add
cmp
jg
mov
mov
adc
movsl
sub
fisubrl
sbb
out
fsubl
sub
nop
out
mov
call
shlb
pop
sub
adc
jp
xchg
sbb
and
test
add
sbb
sub
xchg
push
das
inc
jnp
in
xchg
push
imul
push
xlat
lock
dec
push
sbb
ficompl
xor
jp
js
lock
push
jne
xor
adc
lods
sbb
adc
ret
movsb
nop
lock
arpl
xor
enter
add
inc
cmc
nop
fbld
out
inc
mov
hlt
lods
jle
push
mov
mov
xchg
lds
and
dec
pop
push
push
lahf
fs
mov
add
or
nop
or
test
jl
or
pop
cmp
rcr
fnsave
cmpsb
push
inc
sub
jo
mov
push
lahf
mov
adc
cmp
jge
je
lds
test
pop
push
add
pop
in
or
xchg
adc
mov
scas
mov
movsb
xchg
adc
xchg
pextrw
js
cmp
push
pusha
loop
jbe
cwtl
movsl
xchg
xor
lret
jle
xor
imul
ljmp
out
xor
cmpsb
fucomi
je
popf
pop
add
lret
lds
mov
lods
adc
repnz
sub
dec
mov
nop
sbb
test
addr16
and
mov
loopne
inc
xchg
into
mov
hlt
arpl
jo
mov
lock
ds
dec
arpl
flds
repnz
fwait
adc
add
fndisi(8087
jbe
dec
pop
adc
adc
fisubl
mov
std
sub
shll
sub
jmp
mov
clc
in
cmp
fs
push
popa
ljmp
fiadds
fs
sub
sub
xor
test
xchg
sub
dec
pop
in
cmpl
pushf
je
fsubl
jo
sub
ficoms
cmp
fucomip
sbb
adc
test
push
xorl
insl
je
js
int
repz
std
add
cli
leave
rcll
inc
fiaddl
sub
outsb
ret
sbb
jp
es
xor
push
or
inc
push
jbe
lret
shll
mov
mov
fistpl
setg
out
jp
dec
testl
aad
idiv
out
mov
add
mov
xchg
fdivrl
aas
xor
xchg
mov
dec
mov
jp
sub
and
lods
inc
push
aaa
dec
das
movsl
mov
xor
dec
inc
mov
jno
nop
in
decb
xchg
cld
je
lds
add
test
adc
ja
sub
add
inc
arpl
pop
cmp
xchg
push
fsubs
lret
cmpsb
cmp
cmp
mov
daa
fnstcw
mov
fildl
inc
cwtl
mov
rolb
push
and
loopne
ret
in
cmp
and
cmpsb
mov
das
sbbl
jmp
ljmp
push
push
mov
lea
negl
scas
dec
repnz
sbb
push
inc
ljmp
lock
cltd
call
jbe
testl
sub
leave
mov
mov
push
and
and
bound
push
pop
cmp
xor
xchg
sbbb
inc
dec
xchg
mov
test
and
fadd
sbb
xchg
cmp
pop
sahf
das
movsb
xor
or
push
add
sti
dec
emms
or
xor
sbb
aas
sub
repz
hlt
push
or
jle
xchg
in
xor
cmp
loope
xor
jne
stos
cli
addr16
loope
imul
shl
lret
lcall
stos
and
add
repnz
or
pop
and
lret
loopne
test
ret
stos
inc
pop
js
fs
add
adc
jae
flds
jnp
rcrl
ljmp
cmp
ret
push
out
in
inc
sub
push
or
sub
sub
mov
dec
xor
lods
roll
cmp
sub
and
sbb
cmpsl
in
call
jae,pn
mov
or
lcall
pop
push
xlat
dec
mov
inc
aaa
inc
fs
in
cltd
dec
mov
sbbl
fistps
cmpb
pop
repz
add
xorb
mov
mov
std
ds
aaa
and
mov
gs
jae
outsl
jb
pop
jecxz
xor
jno
push
test
mov
mov
jb
repz
add
in
int
push
cwtl
sarb
pusha
cmp
pop
mov
ds
cmp
jno
mov
pop
filds
imul
insl
sbbb
mov
hlt
add
sub
lock
andl
test
int3
cmp
push
outsl
jl
jns
xchg
fistpl
jl
xchg
dec
sbb
mov
dec
leave
leave
add
outsb
xchg
add
movsl
push
rcr
push
mov
xor
push
nop
or
jmp
idivb
pop
mov
jbe
pop
push
mov
loop
in
das
std
sbb
cmpsl
add
popa
jecxz
cwtl
cld
jb
ficompl
int3
and
adcl
xor
addr16
cmc
push
mov
xchg
or
pop
pop
and
and
inc
fdivl
in
xchg
mov
std
jecxz
push
and
sub
adc
inc
jnp
mov
sbb
sbb
in
mov
test
xor
inc
iret
mov
push
mov
ds
cwtl
jl
mov
shll
jo
add
test
dec
push
sub
adcb
add
mov
add
popa
pop
dec
pop
clc
iret
addl
jno
jbe
sbb
fildl
pop
dec
daa
ret
add
das
repnz
mov
dec
sub
icebp
add
mov
ret
outsl
jp
sbb
call
xchg
xchg
pushf
pop
jg
test
mov
add
jae
cmp
icebp
mov
lret
jmp
shlb
ret
test
imul
fucomp
push
jmp
xlat
mov
jle
fcomp
in
pushf
insl
add
aaa
mov
imul
ds
push
adcb
push
push
push
dec
push
cmp
xor
cli
xlat
pop
shrb
icebp
in
dec
jecxz
fidivrl
sbb
data16
mov
lods
call
cmp
adc
lds
and
mov
ljmp
lret
inc
pop
in
cmp
sbb
stos
cli
xchg
jns
push
dec
mov
xchg
fcomi
mov
sub
lds
popf
ret
mov
mov
dec
mov
mov
lds
pop
pushf
add
xor
adc
pop
push
popl
lea
fnstenv
leave
mov
cli
leave
mov
push
das
mov
decl
insb
sub
call
jo
push
aam
inc
dec
test
aam
mov
ffree
aaa
stos
add
xchg
std
inc
mov
int3
movsb
push
lods
jb
in
lret
or
push
adc
mov
ficompl
pop
filds
pushf
pusha
mov
jp
nop
lret
cld
and
mov
addl
js
popa
jecxz
and
sbb
pushf
sub
popf
xchg
aas
xchg
fsubs
fadds
clc
or
xor
into
div
cmpsl
int3
mov
xor
adc
xchg
and
xchg
das
clc
lds
mov
loopne
and
out
dec
rcll
push
leave
mov
cmp
jle
lock
in
xchg
pop
cltd
out
sub
mov
mov
jns,pt
push
ja
push
and
not
or
cltd
jmp
dec
int
pop
in
and
dec
mov
mov
mov
iret
cmp
data16
int3
xor
test
pusha
sbb
and
push
fistpl
jmp
or
xchg
jnp
out
jns
insb
sub
jne
jae
or
xchg
jne
cmp
clc
mov
pop
mov
xchg
ljmp
std
pop
xchg
nop
mov
fstpt
lret
shll
loope
orl
scas
push
pop
add
int3
sbb
faddl
out
inc
loopne
out
push
div
mov
subb
roll
mov
pop
jecxz
push
jle
fnsave
repnz
jo
xlat
movsb
inc
out
aaa
loopne
fstpt
fadds
sbb
in
mov
fs
cmp
dec
bound
clc
push
loope
inc
jle
jecxz
stc
testw
mov
es
insb
rcll
add
fbstp
xchg
sbb
divl
mov
and
add
cmp
ds
js
mov
push
push
fbstp
mov
enter
fnsave
dec
leave
in
push
enter
sbb
pop
jb
cmc
and
push
arpl
aad
or
cmp
adc
or
mov
loope
add
sbb
dec
imul
xchg
push
pop
mov
or
jno
sahf
scas
and
mov
movsb
addr16
xor
jnp
or
lahf
sar
mov
nop
pop
push
pop
xor
outsb
inc
xchg
loop
ljmp
in
cltd
popa
sbb
inc
mov
jno
or
int
inc
add
cmp
dec
clc
in
adc
cmp
fwait
push
jbe
adcl
ss
mov
xor
mov
mov
inc
dec
test
mov
push
push
addr16
fdiv
call
lret
jg
cltd
test
jle
test
fdivr
add
pop
lods
pop
mov
mov
or
jle
xor
mov
sbb
fs
cmpsb
sub
shrb
pop
adc
stos
dec
xchg
push
push
dec
test
repnz
pop
in
aam
jl
ljmp
test
mov
scas
jbe
js
add
orb
daa
mov
jo
es
cmp
pop
sub
xor
es
mov
cmpsb
mov
arpl
orb
mul
ret
sarl
ret
popa
xor
mov
enter
pop
mov
aam
push
outsb
popf
mov
and
outsl
repz
sbb
jle
inc
cmp
in
and
xor
and
inc
xchg
mov
aaa
fidivrl
cmpl
and
cmp
and
mov
gs
or
stc
adc
into
ja
test
shll
mov
cltd
movsl
fildll
jb
ja
scas
ja
mov
mov
add
and
sbb
sbb
or
movsl
scas
imul
pusha
clc
mov
aas
pop
pop
push
ds
repnz
mov
loope
icebp
jae
push
fistpll
and
stos
jmp
das
jno
mov
bound
mov
xlat
ljmp
cmc
adc
das
sar
jmp
mov
orb
pop
call
aam
dec
jns
push
test
cmpsb
ss
movsb
sbb
add
call
pop
xchg
loope
push
enter
aam
inc
int
fs
xor
adc
mov
mov
cld
pop
xchg
xchg
mov
negl
sub
stos
jnp
xor
ja
movsb
jg
syscall
xchg
repz
daa
mov
jae
dec
outsb
dec
pushl
loop
les
cmpsb
and
jg
mov
pop
ja
sub
arpl
dec
pop
insb
data16
aam
aaa
out
pop
int
dec
scas
out
fwait
xchg
adc
add
pushf
cmp
jnp
push
int
push
ss
mov
or
lcall
inc
pushf
dec
loope
inc
cmpb
es
leave
jecxz
mov
xor
adc
enter
push
aad
es
in
sbb
int3
in
cli
cltd
lods
or
and
sub
gs
dec
out
cmpl
iret
xor
imul
icebp
or
and
xchg
sub
or
inc
jo
mov
mov
repz
xchg
cmp
negb
mov
xchg
out
or
sub
mov
mov
pop
xchg
or
xor
int3
decl
dec
xor
add
and
cwtl
xor
xchg
add
insb
std
sub
pop
cmp
cltd
iret
push
loopne
aaa
stc
inc
mov
mov
add
jno
mov
lcall
movl
mov
jge
mov
mov
es
adc
sub
cmp
add
popf
and
cmp
mov
add
clc
cmpsl
sbb
in
sbb
adc
or
jae
std
push
ret
mov
rclb
jle
pop
les
int3
adc
mov
inc
enter
mov
loope
xchg
push
fstpl
loopne
int
xchg
clc
scas
mov
stc
cmp
xchg
mov
inc
jae
cmp
adc
jp
push
test
outsb
pop
push
xchg
mov
fs
inc
push
in
mov
bound
inc
in
inc
mov
movsb
or
mov
sti
rcrb
mov
fsubl
loope
cwtl
fs
push
pop
push
mov
aaa
into
sbb
push
cmp
in
cli
inc
ja
dec
push
jle
je
pop
repnz
sbb
out
add
outsl
jno
pop
ja
sahf
push
insb
push
pop
insb
mov
pop
leave
jno,pt
jno
dec
das
dec
fwait
ja
sbb
push
cmpsl
mov
test
out
cltd
dec
cmp
sub
lcall
js
xor
aad
filds
mov
push
cmp
mov
push
inc
adc
or
jb,pn
nop
into
out
xor
incb
inc
in
jge
sbb
mov
xchg
jp
cli
iret
and
xor
lock
xor
pop
xorl
jle
into
lock
cld
mov
mov
cmp
test
adc
mov
xchg
out
addr16
sarb
inc
xchg
mov
mov
xchg
mov
rcr
xor
lods
xchg
insl
xchg
mov
and
pop
das
xor
andb
xor
sub
cmpsl
cmp
cmp
fldenv
sbb
insb
int
push
shrb
dec
vmovaps
xchg
gs
cli
sti
dec
fiaddl
or
icebp
es
movsb
lret
cmp
insl
add
and
out
sbb
clc
xlat
test
scas
mull
mov
cmp
leave
fistpll
orl
icebp
lret
aam
jae
or
data16
ret
jmp
pushf
aaa
mov
mov
inc
mov
or
fwait
data16
fcomps
fwait
mov
pop
push
inc
fs
xor
add
inc
shll
mov
and
inc
stos
pop
cli
cs
xor
inc
cmp
repz
pop
xlat
sub
lods
int3
push
inc
cmp
mov
mov
jmp
xchg
and
or
les
dec
das
into
jg
das
cmpsl
and
out
je
mov
and
jg
jg
movsl
pop
inc
std
mov
int3
push
inc
cmpsb
orb
mov
mov
std
push
movsb
push
mov
mov
rol
nop
add
call
sub
cmp
xchg
cmovp
cmpsl
jno
mov
dec
je
or
test
stos
xchg
dec
adc
push
das
cmp
dec
int3
cmp
in
pop
push
dec
shll
mov
mov
and
mov
std
xor
je
or
fbld
scas
insb
jnp
test
in
push
es
push
loop
mov
push
or
sbb
xlat
adc
idivl
movsl
std
mov
jg
test
or
ret
out
repz
adc
call
pop
add
push
dec
inc
fcoml
cld
out
lret
inc
lds
nop
sar
jno
sbb
xchg
sarb
pop
cli
push
dec
adc
push
shlb
lea
mov
mov
cwtl
out
repz
xchg
jg
and
adc
shrl
xor
dec
xchg
or
lock
je
jno
outsl
movsl
adc
or
aam
mov
ja
in
mov
push
popf
or
push
mov
cld
pop
mov
or
inc
loop
shl
push
sub
clc
add
cltd
xchg
cs
aam
mov
fstpt
pop
repz
inc
scas
dec
repz
int
cmpsb
push
mov
push
fcomps
cmp
jo
das
add
lret
mov
lds
pusha
jmp
cli
mov
add
js
cmp
and
xchg
sub
dec
push
pop
leave
push
inc
sub
pushf
pop
gs
and
lds
fisubrl
loop
and
mov
test
int
mov
in
rcrb
inc
add
outsb
les
les
pop
mov
cmp
mov
or
sahf
arpl
xchg
aaa
mov
push
pop
dec
mov
jb
les
in
cmpsb
sbb
scas
cs
jl
sub
je
jmp
mov
ror
dec
das
leave
mov
push
lea
imul
sahf
add
test
mov
xchg
sub
adc
cld
rclb
inc
fucom
stos
pusha
stc
sub
adcl
mov
rcl
cmpb
xchg
data16
and
mov
daa
nop
jbe
ret
pop
and
add
orb
ds
mov
mov
das
scas
xchg
xchg
jp
testb
repnz
jnp
test
sub
test
push
xor
rcr
jl
std
mov
xchg
ret
mov
add
jae
or
cmc
pushf
inc
faddl
cmp
jecxz
loopne
sbb
push
sub
adc
out
pusha
movswl
imul
add
push
daa
sti
mov
imul
inc
scas
fnstenv
jno
cmp
in
sbb
push
stc
out
xor
sarb
push
roll
lcall
and
inc
inc
mov
clc
aad
jns
or
mov
push
push
out
and
and
stc
scas
lcall
jns
popa
jecxz
data16
mov
jle
sti
push
pop
das
movsb
stos
mov
ficoms
icebp
int3
pop
push
jle
push
push
sub
mov
aam
mov
cmc
popf
cmp
scas
dec
int
out
mov
cmp
jle
push
and
xor
cmp
jns
sub
call
fld
sahf
xor
popa
std
xchg
fwait
mov
in
sbb
or
sub
stos
dec
mov
sub
repz
ret
cmpsl
sub
xor
inc
xchg
leave
js
sub
mov
and
push
pop
and
push
pop
movsl
dec
xor
adcb
icebp
aaa
and
fnstenv
pop
xchg
cmp
outsb
inc
inc
inc
mov
mov
int
mov
int3
ss
shrb
js
pop
inc
adc
fcoms
sarl
insb
mov
in
repnz
in
out
add
mov
jmp
andl
insb
dec
jno
and
sti
mov
test
inc
mov
fadd
addr16
cmpb
push
leave
push
repnz
mov
jg
testl
outsb
jle
out
inc
cmpsb
je
imul
or
pop
jne
lahf
rorb
movsb
jno
hlt
push
lret
or
outsb
pop
and
outsb
jge
arpl
mov
scas
jnp
fwait
xor
clc
pop
cmp
cmp
push
push
adc
jnp
mov
xchg
nop
sub
sti
nop
out
push
sub
xchg
inc
sub
lds
mov
sub
je
mov
fisubs
lea
adc
rclb
and
dec
or
dec
jnp
add
adc
loopne
sbb
push
sub
ror
jb
pop
xchg
pop
iret
fwait
jne
lahf
aad
nop
mov
mov
idivl
rcrb
mov
dec
arpl
imul
or
in
push
nop
xor
push
jg
cmp
or
outsb
pop
fadds
xorb
jge
std
fdivrl
mov
into
pop
dec
je
add
shll
das
cmp
testb
ljmp
sbb
dec
stos
rorb
jmp
fidivl
aad
je
push
sbb
mov
dec
jb
loopw,pn
enter
lret
or
cli
cmp
xchg
sbb
sub
inc
jne
hlt
dec
adcb
in
out
push
pusha
dec
in
jmp
push
gs
pop
aas
insl
jne
cmpsl
mov
sub
movsl
inc
inc
fwait
cmp
icebp
jge
fsubrp
xchg
add
cwtl
cli
pop
and
cmp
ret
sbb
and
sub
sub
out
lock
mov
push
and
xchg
nop
loope
lods
insb
mov
pop
shlb
jae
mov
jl
pop
sbb
xorl
repnz
xor
pop
enter
ret
sti
xor
shlb
mov
clc
movsl
lods
dec
lahf
js
mov
mov
pushf
add
outsb
inc
shll
and
xor
dec
int
jmp
and
sbb
fmull
movsl
je
data16
bound
aad
fisttps
leave
add
cmp
cwtl
in
mov
push
mov
mov
fistl
sti
cli
fisttpll
aad
movsb
pushf
jno
ljmp
xchg
lods
add
enter
setbe
jns
sbb
pop
fidivrl
popa
jbe
xchg
adc
mov
bound
ret
xchg
jbe
xor
icebp
pop
dec
push
dec
pmovmskb
aas
lds
fmul
xor
dec
testl
addr16
pop
xor
pop
fwait
pop
mov
pop
xorb
ljmp
nop
xchg
mov
out
test
or
adc
dec
std
xchg
js
test
out
aas
outsl
aaa
lcall
ja
test
add
fsubrl
xor
mov
movsl
cmc
addr16
sbbb
fidivl
out
stos
cli
mov
jb
pop
xchg
lds
mov
ds
mov
les
adcb
andl
hlt
ret
mov
cmp
jnp
in
xchg
mov
shll
lahf
push
int
or
scas
mov
mov
fs
jne
arpl
in
xor
clc
sub
and
rorl
in
ljmp
fstl
jne
mov
mov
clc
jecxz
fidivrl
push
fwait
enter
mov
pop
imul
and
mov
add
aam
jae
or
clc
sub
mov
push
arpl
dec
test
jl
outsb
or
xor
dec
and
mov
cld
daa
mov
or
cltd
lret
lods
fists
cmpsl
repz
jae
cs
test
xchg
mov
mov
cmp
xchg
sbb
fisubs
and
mov
mov
les
inc
clc
call
imul
popl
cmp
test
lock
xor
daa
movzbl
mov
push
push
and
pop
and
push
sub
sbb
cmp
and
or
push
push
fsubr
cmpsl
sub
add
sbb
mov
sbb
pop
sarl
xchg
popf
test
jno
rcll
mov
add
bnd
mov
scas
daa
jbe
mov
imul
mov
mov
out
cmpl
xchg
clc
xchg
addl
in
dec
jbe
xchg
test
cli
jae
test
scas
cli
xlat
add
frstor
dec
xlat
mov
sbbl
jns
idivl
insb
pop
movsl
jg
pop
lock
stc
inc
fs
and
test
inc
int
loope
cmp
mov
lods
js
sub
dec
icebp
dec
xor
scas
mov
jg
mov
jl
inc
lret
in
leave
mov
jo
ret
dec
xor
mov
cmp
in
js
push
xor
outsb
movb
rcrb
and
push
push
sub
bound
adc
dec
add
out
dec
adc
out
lock
xor
inc
rsqrtps
cmp
push
xchg
push
mov
sti
xchg
lock
mov
pop
xor
mov
popa
adc
pop
lods
push
in
lcall
mov
int3
or
fisubs
add
jb
jle
xchg
je
push
mov
rol
ja
xchg
icebp
aas
lock
es
sub
js
dec
outsb
sub
xchg
xchg
xchg
lea
test
jne
add
movl
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
movzbl
sbb
mov
mov
mov
orl
xor
xorl
add
xorl
imul
mov
movl
jmp
andl
mov
inc
mov
cmpl
jne
pushl
pushl
pushl
call
cmpl
jb
adc
mov
xor
mov
mov
xor
mov
mov
sub
add
mov
mov
add
mov
mov
mov
xor
xor
lea
mov
xor
add
imul
mov
xor
sub
mov
add
cmp
mov
mov
jg
xor
mov
sub
add
jmp
xor
add
add
mov
mov
mov
xor
add
not
and
movsbw
mov
sub
mov
xor
mov
cmp
jne
movsbw
mov
sub
mov
xor
mov
cmp
je
mov
xor
mov
sub
add
jmp
mov
mov
mov
lea
mov
mov
mov
xor
add
mov
mov
mov
xor
add
pop
cmp
jne
mov
xor
mov
add
imul
mov
pushl
jmp
mov
add
mov
mov
mov
movsbw
mov
sub
mov
xor
mov
cmp
jne
mov
mov
mov
jmp
mov
cmp
jne
push
pushl
pushl
pushl
pushl
call
pop
pop
leave
ret
push
mov
push
mov
mov
sub
xor
movl
mov
movl
cmpl
je
cmpl
jne
pushl
call
mov
dec
mov
jmp
sbb
mov
sbbl
mov
xor
add
mov
sbb
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
push
push
pushl
call
cmpl
jne
xor
or
inc
mov
jmp
xor
push
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
pop
leave
ret
push
mov
sub
sub
mov
sbb
push
push
push
movzbl
sbb
mov
xor
xor
mov
xor
add
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jb
movl
cmpl
je
cmpl
jne
push
pushl
push
push
pushl
pushl
call
mov
dec
mov
jmp
and
mov
mov
addl
mov
movl
cmpl
je
cmpl
jne
push
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
movl
cmpl
je
cmpl
jne
push
push
push
call
cmpl
jne
mov
dec
mov
xor
xor
dec
mov
jmp
mov
mov
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
mov
movl
mov
xor
add
add
mov
mov
adc
mov
mov
andl
xor
xor
inc
mov
cmpl
jne
push
push
call
cmpl
jb
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
call
jmp
xorl
mov
andl
mov
inc
mov
cmpl
jne
pushl
call
cmpl
jb
mov
movl
cmpl
je
cmpl
jne
push
call
xor
add
dec
mov
jmp
push
xorl
pop
sub
movzwl
sbb
add
movl
mov
sbbl
movl
sub
mov
andl
mov
adc
mov
mov
xor
add
adc
mov
xor
subl
add
adcl
mov
lea
subl
mov
mov
subl
xor
negl
add
andl
mov
andl
lea
adcl
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
call
jmp
add
mov
xor
add
sbbl
push
xorl
mov
push
pushl
decl
call
xor
mov
mov
and
mov
mov
incl
mov
addl
xor
sbbl
mov
adcl
add
movl
jmp
xor
lea
mov
movl
cmpl
je
cmpl
jne
pushl
call
mov
dec
mov
jmp
movl
cmpl
je
cmpl
jne
push
pushl
pushl
pushl
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
sub
mov
mov
mov
mov
movl
mov
movl
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
mov
xor
mov
sub
add
mov
mov
xor
add
imul
jmp
je
mov
stos
lea
xchg
inc
or
pop
pusha
pusha
pop
inc
mov
add
lods
push
shlb
mov
mov
lahf
aam
adc
fmuls
int3
scas
mov
jne
jecxz
push
nop
cwtl
pop
cmp
lods
stc
xlat
cmp
add
lods
pop
mov
lcall
test
test
jae
ret
lret
mov
fcmovnb
push
sub
push
inc
jno
adc
decb
dec
and
in
pop
xor
mov
inc
ljmp
cmp
sarl
xor
outsl
jmp
stos
or
insb
dec
mov
push
adc
jns
xlat
out
aam
ljmp
fnstenv
lods
outsb
dec
fiaddl
lods
push
out
push
data16
in
add
mov
data16
enter
repz
ret
cmp
in
je
mov
jmp
orl
dec
sahf
and
sti
add
xor
sahf
mov
pop
scas
dec
cmp
jb
mov
pop
push
push
pop
repz
out
stos
fsub
jecxz
xor
and
in
xchg
jg
or
jno
cmp
rcr
sub
test
sbb
stos
movsb
out
or
xchg
pop
insb
jecxz
int3
xchg
aaa
jle
sub
sbb
test
dec
stc
mov
ss
stos
adc
jbe
cltd
fcmovbe
pop
int3
and
push
sub
push
push
fnstenv
xor
cld
outsl
push
push
add
inc
mov
call
mov
int
lds
cs
std
push
stos
push
loop
aas
adc
lods
add
sbb
pop
sub
int3
sbb
push
out
jg
test
and
mov
enter
call
sti
imul
lods
nop
sti
inc
test
sbb
fs
xor
jbe
lcall
xchg
lods
mov
out
mov
sub
adc
or
mov
push
aas
cmpsb
add
xor
stc
jl
ffree
jno
push
mov
xchg
dec
push
into
sbbb
es
or
cmp
aaa
cmpsb
cmpsb
mov
lds
dec
fnsave
lods
pop
jmp
or
add
or
fwait
int
sub
fimuls
ljmp
mov
imull
adc
test
bound
popf
sahf
jmp
arpl
pop
mov
sbb
mov
movsb
popa
bound
lea
xchg
popf
and
mov
lret
lds
imul
shll
xor
cmc
js
adc
push
jbe
pop
js
enter
call
sbb
sbb
sarb
rclb
adc
pop
xlat
fwait
mov
jp
sti
jb
int
cmpb
sbb
adc
cwtl
dec
cmp
stc
xchg
outsb
popa
aaa
outsl
incb
dec
idivb
iret
sub
pop
xchg
mov
aam
jl
js
jp
aaa
loopne
add
icebp
inc
dec
mov
cmc
and
shr
push
xor
inc
push
rclb
push
add
mov
imul
adc
shl
mov
xchg
cld
imul
xchg
dec
sbb
mov
imul
mov
js,pn
fdivs
fsubrl
in
iret
gs
push
push
popa
jne
pusha
dec
xchg
cltd
pop
or
pushf
jg
mov
xchg
pop
aam
mov
aas
mov
push
out
mov
cmpsb
aas
pop
scas
push
repnz
push
mov
cld
add
mov
inc
mov
jb
and
add
mov
stos
jns
ret
divl
in
mov
movsl
flds
fwait
es
out
inc
jmp
ss
adc
lods
call
loop
adc
cld
or
mov
hlt
xlat
jp
jge
out
add
or
mov
and
xchg
dec
fwait
pop
or
xlat
dec
mov
les
add
roll
je
ljmp
insl
test
cmpsl
icebp
push
repnz
sub
sbb
clc
cmp
dec
add
xchg
xchg
sti
inc
xor
shr
insl
sahf
jno
loope
fcmovu
lcall
or
jno
gs
mov
movsl
sahf
push
incb
push
das
adc
les
stos
adc
push
inc
mov
pop
sbb
mov
xchg
push
push
cmp
outsl
lods
scas
inc
ja
pop
shlb
inc
cwtl
rol
sbb
pop
xor
lret
xor
outsb
adc
orl
adc
sbb
arpl
lods
and
nop
ret
mov
outsb
sub
mov
int
cmp
mov
mov
ret
mov
add
sub
lods
movsb
sarb
in
sub
sub
xchg
inc
sbb
and
dec
in
nop
add
add
insl
jno
push
add
movsl
gs
sbb
inc
pusha
jmp
scas
pop
pop
inc
push
or
dec
daa
mov
push
push
out
xor
add
or
sbb
cmp
icebp
pop
test
mov
test
pop
push
cwtl
iret
ds
in
cs
or
xchg
pop
bound
mov
mov
and
cltd
add
adc
jne
push
dec
or
cld
add
pop
dec
mov
pop
icebp
rorb
sbb
jbe
aaa
mov
adc
jno
inc
jl
shll
xchg
shrd
adc
dec
jb
mov
sub
ds
mov
sub
test
movsb
iret
into
or
arpl
bound
jge
lods
outsb
icebp
mov
enter
add
je
mov
fs
insl
lret
mov
sbb
and
cmpb
into
xlat
jg
jae
dec
jmp
bswap
out
pop
dec
sub
adc
xor
mov
and
xchg
pusha
mov
xchg
sub
int3
addr16
jne
fdivrl
aaa
and
jns
in
repz
cmp
pop
xor
clc
push
sub
sarb
inc
fcompl
xchg
outsl
shlb
std
pop
xor
push
mov
stc
mov
cli
cli
pop
cltd
push
int3
repnz
or
and
fbld
adc
out
cmc
mov
xchg
test
rol
std
sbb
popf
dec
push
lock
pop
inc
into
shr
dec
pushf
adc
jo
jmp
push
adc
xor
cli
je
and
dec
out
and
xor
pushf
push
xchg
int
add
mov
out
mov
jg
adc
popf
add
cmp
ret
add
jmp
cs
xchg
mov
pusha
push
repnz
shl
cmpsb
dec
xchg
aad
mov
movsb
cmp
xchg
mov
icebp
popa
addl
aad
ret
mov
in
mov
hlt
int
ja
add
mov
jo
cli
dec
mov
in
and
or
xor
aas
aas
dec
push
test
inc
mov
lods
imul
mov
aam
mov
stc
adc
jg
rol
aaa
cld
aas
adc
push
scas
pop
std
inc
aam
mov
jmp
sahf
popf
lret
aas
mov
fwait
dec
mov
cmc
xchg
and
sub
push
add
and
pop
mov
orl
lea
jnp
or
jo
flds
ljmp
int
and
aaa
push
xchg
mov
lea
mov
cmpsl
mov
fstps
jno
frndint
or
fiaddl
aad
and
imul
cmp
mov
int
int3
stos
mov
xor
fildll
in
and
jo
mov
lahf
add
dec
mov
stos
dec
test
or
inc
aam
js
es
sub
aam
sub
rclb
stc
adc
lods
aas
fimull
lods
dec
pop
and
inc
ljmp
xchg
cli
adc
das
mov
fisubl
jg
xchg
loope
jno
in
setg
jge
insb
cld
dec
cwtl
test
mov
jp
lods
push
pop
outsl
jp
inc
mov
jo
iret
xlat
bound
test
push
lret
shlb
xor
cmp
imul
xchg
sbb
mov
inc
pop
fnsave
movsl
mov
fcmovb
jg
push
and
insl
adc
mov
lods
iret
in
imul
adc
icebp
divl
into
mov
scas
inc
ja
jmp
mov
sub
or
andl
mov
or
and
mov
push
and
imull
inc
repz
dec
lea
pop
int
repnz
sarl
inc
mov
lcall
jge
sub
sbb
aad
add
mov
dec
mov
mov
jb
gs
loop
std
ftst
test
pushf
out
xor
xor
mov
sub
pop
push
outsb
mov
pop
sahf
stos
mov
jg
sub
pushf
mov
xchg
xchg
dec
les
push
clc
iret
hlt
add
int
ss
jmp
xchg
push
and
mov
pusha
mov
mov
rcrb
xor
sahf
xchg
xchg
xchg
testl
gs
xchg
popa
dec
mov
fidivrl
movsw
jns
or
sti
adc
dec
ficoml
add
xchg
xchg
push
xchg
addl
repnz
cs
aad
ljmp
aam
xlat
aas
out
in
pop
push
leave
loop
push
xor
js
inc
cmpxchg
push
pop
test
js
rolb
xchg
and
sahf
adc
data16
xor
push
sbb
mov
out
mov
push
or
mov
sub
pop
scas
add
add
push
test
jl
jns
ret
cmp
dec
dec
sahf
sbb
stos
mov
mov
cmp
shl
xor
in
pop
aam
pushf
inc
inc
or
repz
pop
sahf
repz
add
xor
pandn
fdivl
jno
xor
xor
leave
pop
icebp
xor
and
or
aas
jmp
cmpsb
jmp
push
push
aaa
in
push
mov
aad
arpl
jb
sub
push
shl
xor
mov
cld
add
test
push
jbe
xlat
jge
push
andl
ret
cmpl
sbb
xchg
sub
pop
pop
ret
sbb
and
inc
sub
lea
ret
adc
jno
pop
out
jg
push
xchg
bound
inc
imul
cltd
xchg
and
jo
insb
adc
mov
rolb
imul
and
in
gs
xlat
mov
cmp
rcll
cli
sahf
sbb
cmp
jp
jge
in
mov
leave
outsb
push
scas
leave
out
sbb
add
jbe
fs
sub
andl
push
ret
fcoml
scas
adc
jnp
push
add
jnp
xchg
popf
movsb
fidivrl
fdivr
js
je
xor
pcmpeqb
pop
jns
and
dec
cmp
insl
fsubr
cmpsb
mov
jecxz
or
addl
pop
inc
fnstenv
xchg
rclb
je
jmp
xor
aaa
sub
jle
in
icebp
cmpsl
mov
xor
mov
imul
ljmp
cltd
mov
and
push
out
or
insl
int3
test
inc
roll
jl
insb
and
je
xchg
sbb
adc
shlb
lret
js
xchg
xchg
add
push
xchg
cld
pop
sub
adc
leave
add
add
pop
insl
ret
add
lds
mov
jle
imul
lods
push
insb
pusha
mov
out
cmpsl
mov
and
std
mov
add
xchg
cmp
adc
sub
push
outsb
mov
jns
test
xchg
fnstenv
cmpsl
cwtl
inc
cli
repnz
cwtl
xchg
int3
xor
std
push
pusha
ficompl
mov
pop
jecxz
clc
sub
iret
test
xchg
mov
mov
jb
mov
xchg
jle
mov
lods
add
aas
js
ficompl
clc
mov
iret
jo
mov
sub
ds
negl
imul
out
das
mov
or
jnp
sbb
scas
lock
cwtl
mov
add
add
and
dec
pop
sarb
in
arpl
xor
jecxz
inc
jae
or
hlt
cmp
lock
xor
movsb
outsb
cmp
mov
jl
push
pop
sub
aaa
cld
scas
inc
stc
pop
cli
movb
or
push
and
das
add
ret
inc
xchg
push
in
pop
or
lret
call
and
lahf
sbb
movsl
mov
sahf
push
mov
jg
imul
xchg
fwait
jle
imul
in
cmpsl
les
xor
dec
inc
and
out
push
imul
mov
popa
mov
xorl
cmpsl
adc
sbb
sti
push
out
push
push
dec
mov
movsl
loop
sarl
je
cmc
pop
or
arpl
addb
mov
inc
and
add
jl
mov
adc
mov
outsb
cmpsb
jmp
xor
cld
mov
jmp
pop
mov
rclb
in
push
jns
push
sti
push
in
cmp
jp
inc
push
add
arpl
push
imul
sub
inc
js
add
int3
sbb
mov
ret
dec
mov
mov
push
test
jo
pop
sbb
fs
add
test
call
cld
lds
xor
mov
daa
popa
imul
stos
mov
xor
aam
or
push
lahf
push
jl
filds
test
cld
jo
cwtl
mov
lret
xchg
fcoml
cmp
rcr
mov
or
lods
sbb
fisubrs
pop
jecxz
sub
out
lods
sbb
fcomps
cld
mov
mov
pop
xlat
insb
mov
mov
mov
inc
cmp
cmpsb
test
push
movsb
xor
jle
int3
sbb
sbb
in
call
in
cmpsl
adc
inc
repnz
repnz
sbb
enter
jbe
jmp
mov
sub
mov
les
mov
js
xchg
jae
pop
sbb
mov
mov
lods
divl
mov
mov
test
fimull
or
mov
mov
ret
and
sbb
xchg
lret
pop
or
scas
fucomp
sbb
sbb
repz
sub
mov
cmpsb
das
mov
jg
and
repz
test
cs
sub
sbb
ljmp
sub
push
test
enter
add
movsb
pop
dec
enter
jmp
and
daa
add
pusha
cmpl
fsubrp
nop
or
xchg
mov
inc
jmp
xchg
mov
mov
mov
cmp
pop
mov
mov
xchg
pop
lret
and
or
iret
jg
push
lret
dec
sbb
sti
pop
out
ret
cmp
dec
nop
fistl
movsb
aad
mov
sbb
jbe
jge
xor
xor
cwtl
push
add
cmpsb
mov
test
icebp
inc
fdivl
fsts
fsts
and
pusha
lret
sub
es
in
jg
mulb
std
movsb
sahf
xchg
aas
jo
sub
pusha
cmp
jle
mov
mov
adc
mov
jp
popa
mov
and
xchg
cmp
push
jecxz
mov
int3
lods
dec
popf
cmp
xchg
pop
popa
pop
inc
add
push
push
rol
xchg
inc
xorb
inc
xchg
sub
jae
mov
xchg
les
out
and
icebp
js
std
test
dec
arpl
pop
shll
xor
aas
jge
fistps
in
jecxz
jl
gs
or
gs
ss
mov
fistpl
fstl
cmp
test
and
in
sti
add
flds
fstl
test
lock
mov
addr16
scas
aaa
cld
mov
mov
lock
jge
stos
push
sub
mov
ret
repz
push
cmc
lahf
or
shlb
lods
inc
addr16
xchg
int3
xchg
insl
mov
movsb
push
or
sbb
and
push
icebp
movsb
sbb
shrb
jg
in
sahf
mov
sub
lods
dec
test
dec
test
stc
jbe
mov
xlat
aaa
mov
shll
lds
loop
int3
mov
sbb
pop
fimuls
jp
push
pop
mov
sub
xor
or
and
movsb
mov
stos
je
ret
pop
popa
pop
pop
push
aas
xchg
or
loop
sbb
popa
xchg
bound
jmp
outsl
add
mov
cs
sub
jmp
xchg
dec
out
lahf
jmp
or
jecxz
sti
es
sbb
mov
sbb
mov
sbb
xchg
xchg
inc
sahf
adc
ds
imul
incl
popf
sti
cmpb
cli
fwait
and
in
xor
imul
call
xorb
mov
xchg
push
pop
jo
repz
jmp
fwait
push
insb
dec
pushf
dec
daa
out
pop
xchg
hlt
aaa
fiadds
add
inc
lret
popf
lds
test
mov
xor
popa
cli
cmp
pop
inc
and
xchg
push
mov
xchg
hlt
lret
mov
sub
push
push
fwait
movnti
imull
repz
ljmp
xor
xchg
push
push
imul
lret
fisubl
xlat
jnp
orl
jb
adc
popf
push
fstpt
addr16
mov
cli
inc
popa
fstps
mov
and
xor
aam
scas
outsb
fnstsw
pop
mov
inc
cmp
hlt
jnp
xchg
or
popa
lods
in
out
mov
push
mov
pop
push
movsb
inc
inc
loopne
xchg
hlt
mov
je
dec
xchg
jmp
mov
jnp
adc
insb
popf
dec
dec
push
sub
addl
xchg
mov
or
std
dec
stos
stos
jnp
xchg
xchg
notl
mov
cmp
out
add
rorb
dec
inc
mov
cs
data16
push
icebp
int
jae
sbb
cs
mov
and
inc
lcall
pop
mov
xchg
movsl
lahf
pop
fs
sbb
mov
leave
xchg
fisttps
cwtl
push
popf
cs
cmc
ja
push
push
imul
inc
arpl
cltd
cmpsl
mov
in
fwait
lcall
adc
pop
add
add
adc
add
push
pop
add
rorb
clc
jmp
imul
adc
out
repnz
pop
jae
xchg
mov
dec
adc
pop
xchg
scas
push
cmp
dec
pop
cld
push
outsb
es
gs
sarb
cmp
jl
int3
and
pop
andb
lret
push
movsl
les
and
and
jle
arpl
jg
and
aad
xchg
stc
or
pop
movsl
push
inc
fisubrs
mov
xchg
hlt
jno
jl
lods
sbb
push
outsb
cmp
jl
xor
test
jp
lock
push
sub
mov
pusha
fdivrs
sbb
call
cmp
shll
or
scas
xchg
dec
call
pop
testl
or
aam
mov
jmp
mov
or
cmc
mov
push
mov
jecxz
lret
lds
rcl
adc
inc
lock
test
mov
bound
add
sbb
push
sahf
lcall
xor
fmull
xchg
inc
add
sbb
mov
aaa
inc
fidivrs
add
xchg
cld
mov
movl
insb
les
into
adc
sbb
fistpl
xchg
lcall
mov
mov
xor
mov
cmp
loop
inc
jns
mov
push
int
out
adcl
test
add
sbb
shrl
andb
iret
push
je
and
ficoml
iret
es
push
data16
out
cmc
sub
dec
sbb
mov
pop
outsb
movsl
loop
mov
dec
lret
xor
mov
lds
push
incl
mov
in
xor
and
jg
xchg
fistps
popf
xchg
or
mov
dec
push
dec
sbb
in
fimull
out
inc
inc
popa
jg
xchg
jmp
shrl
fadd
cmp
jae
xchg
imul
jp
ret
adc
push
loop
inc
ja
repnz
sbb
lods
mov
mov
mov
adc
out
repz
ret
les
xorl
sub
sub
shrl
sub
jle
jmp
adc
cli
pop
adc
mov
arpl
out
mov
lods
mov
mov
sbb
cli
sub
ret
adc
mov
push
ficoms
js
lret
mov
cmpsb
aad
mov
flds
mov
jmp
xor
movl
fadds
test
cmp
sub
xchg
push
inc
mov
rorb
sub
mov
xchg
jecxz
sbb
cwtl
sub
jbe
cmpsb
loop
test
insl
mov
into
mov
mulb
enter
xlat
inc
push
dec
cld
jmp
cltd
cmp
xorl
mov
lcall
loop
jmp
and
lock
repnz
test
push
xchg
add
rcrl
cmp
sub
popf
cmp
inc
leave
test
push
pushf
iret
push
add
call
and
test
lea
dec
mov
mov
orb
xchg
jne
inc
add
mov
cmp
sub
mov
inc
sbbl
fs
lods
je
pop
std
sbbb
or
ds
jecxz
lea
mov
iret
in
pop
add
iret
stos
lahf
mov
lea
mov
mov
sahf
mov
adc
and
imul
cwtl
mov
mov
cmp
not
scas
push
jo
adc
push
sbb
mov
jns
pop
leave
xchg
ljmp
xor
les
jg
pusha
frstor
xchg
xor
fsub
mov
cli
push
cmpsb
out
sbb
pop
dec
mov
push
imul
call
aas
mov
push
mov
jnp
cmpl
fsts
push
ret
push
xorl
jle
pop
cli
push
add
or
xor
stos
and
mov
stos
in
loopne
js
hlt
inc
lahf
lret
orb
adc
push
lea
inc
and
out
push
fistl
lcall
or
dec
jne
sbb
inc
pop
jbe
aaa
pusha
mov
stc
dec
push
mov
pop
cmp
stos
mov
xor
mov
in
fistpl
cmp
push
xchg
stos
test
xchg
or
bound
add
ffree
jge
stc
mov
xchg
roll
push
mov
sbb
not
sarl
sbb
les
xor
inc
inc
cltd
adcl
out
cmp
or
andb
icebp
test
push
fcmovnu
loop
sub
push
push
xchg
mov
mov
jge
sbb
call
push
xor
mov
std
adc
cmp
pop
mov
lea
out
sub
leave
xchg
jb
and
js
jg
sbb
data16
pop
inc
cmpsl
mov
xlat
insb
shr
imul
test
popf
std
dec
lret
mov
dec
and
dec
mov
imul
inc
outsl
cmpl
cli
cmp
clc
les
popa
addr16
cmp
dec
mov
shll
test
mov
bound
gs
mov
stos
jbe
test
mov
in
jl
and
imul
mov
dec
xchg
je
jo,pt
stos
mov
or
hlt
std
stos
mov
mov
mov
xor
xchg
push
sub
data16
jge
xorl
and
pushf
adc
and
subb
loop
cld
sub
xchg
iret
mov
add
ret
jl
das
stc
rorl
jo
add
out
xchg
inc
fsubrp
imul
subb
sbb
test
leave
and
cld
ss
xchg
push
pop
in
dec
cmovae
mov
iret
into
in
mov
mov
sbb
test
out
movsb
sbb
push
mov
jg
call
es
dec
push
mov
push
mov
loop
sbb
adc
out
lret
jnp
fdivl
jnp
cmp
push
sbb
xor
mov
fldcw
js
pop
and
testb
dec
inc
mov
into
nop
outsl
sbb
jp
cmp
clc
bound
sti
cmpb
or
mov
jg
inc
xor
push
or
mov
cmp
sti
or
mov
lahf
pop
leave
sbb
mov
adc
jl
inc
mov
mov
mov
out
mov
inc
mov
inc
jmp
adc
fiaddl
mov
aaa
jb
xchg
loopne
jp
repnz
outsl
jge
ret
sbb
dec
pop
push
popf
cmpsb
lods
aaa
into
mov
lret
int3
mov
rol
push
mov
push
jl
call
ds
and
mov
push
stc
lret
imul
jmp
je
jle
pop
cmp
stos
mov
xchg
mov
call
pop
out
sbb
push
mov
push
pop
test
add
push
pop
scas
push
xchg
popa
rcr
fs
xchg
xchg
dec
fbstp
cmp
lret
ss
add
xlat
push
push
leave
ret
js
adc
mov
repnz
int
xchg
or
cld
mov
cmpsb
pop
stos
mov
enter
rolb
out
arpl
repnz
sub
dec
jge
mov
xor
xor
mov
cmp
mov
jo
test
xchg
inc
imul
inc
adc
arpl
ficomps
sub
subb
popf
pop
hlt
xchg
xchg
mov
mov
inc
mov
shlb
cmp
mov
xchg
mov
push
push
icebp
mov
enter
jecxz
xchg
sub
mov
jg
das
cmp
xchg
push
mov
into
fwait
mov
fldenv
test
rcrl
jno
and
lahf
test
in
pop
jb
fsubp
ss
andb
push
mov
lds
and
lods
xchg
pop
sub
adc
dec
cmp
mov
push
pusha
rorl
fsubs
shlb
mov
cmp
mov
outsl
cmp
xchg
dec
and
adc
jne
or
leave
and
cltd
and
mov
cmpsl
pop
jae
bound
test
in
adc
jecxz
sub
test
fwait
test
std
or
add
scas
incb
pop
cmp
sahf
xor
fmuls
xchg
dec
ficompl
dec
std
dec
mull
gs
or
sub
sbb
cmp
loope
or
adc
mov
and
adc
out
mov
pop
movsb
and
stc
pop
test
mov
add
arpl
cmp
dec
sub
imul
push
cmpsb
xor
mov
js
mov
xchg
jmp
clc
add
adc
data16
adc
fdivs
xchg
inc
mov
fldt
dec
mov
test
sarl
mov
in
jge
lret
scas
imul
daa
mov
pusha
dec
mov
mov
fsubrp
mov
iret
stc
sub
aas
clc
stc
dec
jbe
pushf
test
add
and
movsb
adc
fldcw
gs
and
das
or
jmp
scas
inc
out
lcall
mov
xor
repz
in
dec
push
sub
xchg
imul
cmc
and
jl
neg
cmpsb
xchg
ss
ret
testl
std
cmc
inc
inc
stc
dec
lret
mov
mov
push
fs
jecxz
xchg
repnz
pop
push
mov
push
xchg
jo
movsl
push
repz
pop
test
ficoml
pop
rolb
fs
dec
hlt
popa
sbb
pop
jo,pt
pop
xorl
popa
nop
cwtl
mov
js
xchg
xor
and
inc
cld
mov
push
insl
mov
popa
ljmp
cmc
adc
popf
dec
adc
in
pop
rcrb
cmp
add
movsl
lret
test
inc
outsb
in
pop
or
repz
repnz
js
ljmp
dec
cmp
arpl
in
xchg
pop
adc
and
pop
data16
cs
call
cmp
cmp
jecxz
pusha
push
mov
or
out
jle
sub
mov
xor
push
lcall
fstpl
rclb
ret
sbb
xor
movsl
addr16
std
bound
inc
lret
fisttps
mov
nop
lea
jnp
in
out
adc
cmp
ljmp
int3
jns
mov
mov
outsb
push
mov
mov
sbb
mov
scas
ds
jae
stos
mov
dec
lcall
lods
adc
shll
and
leave
cmp
stos
pop
jge
jg
mov
adc
pusha
push
fisubrs
pop
add
mov
xchg
sbb
adc
mov
jnp
adc
mov
out
xor
pusha
fmuls
test
inc
fdivs
mov
and
inc
pop
xor
out
imul
dec
or
insl
pop
push
mov
xchg
xchg
loopne
and
or
xchg
dec
sti
imul
xor
xchg
cmpsl
lods
stos
jge
fidivrs
xor
dec
insb
bound
and
push
loop
idiv
cld
sub
pop
push
into
dec
mov
in
adc
fbstp
pop
xchg
ja
test
push
and
hlt
mov
and
fwait
add
stc
cmc
add
or
in
sbb
or
pop
into
mov
stc
mov
xchg
xchg
repz
imul
pop
and
xchg
scas
adc
add
sub
stc
out
add
xchg
push
inc
or
jp
or
fildl
into
movsl
jmp
in
pop
push
mov
add
out
jmp
stmxcsr
hlt
loopne
repz
and
data16
pop
mov
and
mov
lods
dec
clc
mov
xchg
xchg
aam
pop
mov
aaa
adc
in
xor
push
imul
mov
not
loop
das
sub
cmp
ljmp
lahf
push
mov
push
push
popl
rcll
dec
subl
movsl
xor
popa
pop
pop
xor
in
fmull
jbe
mov
or
lea
adcb
scas
pop
inc
dec
lahf
ja
pop
push
adc
dec
idivl
mov
sahf
cmpl
sbb
mov
ds
sbb
rcrl
inc
add
cmp
out
add
rclb
int
jge
loopne
and
aam
mov
mov
xchg
enter
cmp
ja
mov
mov
mov
sub
xor
xor
add
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
mov
mov
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
xor
add
mov
mov
mov
mov
mov
xor
xor
lea
mov
xor
div
mov
xor
add
cmp
mov
mov
jne
xor
add
imul
mov
movzbl
mov
jmp
xor
add
imul
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
sub
sub
xor
xor
cmp
jne
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
jmp
mov
mov
xor
lea
lea
xor
cmp
jne
mov
mov
mov
xor
mov
xor
mov
xor
mov
mov
xor
mov
jmp
jno
loop
loop
inc
pop
jl
push
jne
shlb
hlt
pop
pusha
pusha
or
mov
and
ss
mov
pop
sar
arpl
push
lods
jl
nop
outsb
sbb
les
les
pusha
lods
insb
or
mov
xchg
dec
inc
and
rcl
mov
nop
je
pop
lret
sahf
test
mov
cwtl
in
cltd
xchg
jge
shrl
aas
stos
test
jne
cmp
sbb
lahf
fwait
cli
cli
shrb
test
movl
push
jecxz
jns
test
or
sbb
mov
xchg
jb
lea
mov
adc
test
mov
mov
cmp
imul
dec
arpl
push
ret
mov
xor
insl
and
inc
dec
dec
scas
jle
push
pop
sbbb
jbe
in
dec
jne
sarb
jns
in
lahf
ljmp
xor
lcall
enter
inc
pushf
out
popf
mov
pop
add
repz
ss
mov
jae
mov
addr16
lods
andl
mov
add
outsl
or
jo
push
bound
lcall
cltd
xchg
mov
mov
fwait
inc
pop
cmp
mov
sti
out
xchg
xlat
inc
icebp
cli
or
cltd
mov
mov
int
sub
stos
xchg
or
add
pusha
ret
pop
rcrl
int3
mov
mov
pop
movsl
aaa
add
xchg
cmp
pop
int3
xchg
add
lock
jp
sbb
es
jmp
or
ret
mov
clc
adc
popa
xchg
mov
fnsave
jp
into
xor
dec
cmpsl
cli
idivl
add
mov
and
or
pop
add
cmp
sbb
xchg
inc
outsb
pop
ss
loopne
repz
adc
jmp
cld
shl
mov
cmp
jae
push
xor
adc
in
dec
popa
sbb
jnp
cmp
inc
pop
out
push
movhlps
dec
cld
das
aam
stos
mov
add
xlat
test
xor
jbe
sbb
aaa
cltd
mov
fcompl
pop
stos
inc
sbb
loop
jnp
cltd
test
repz
rcll
add
in
rcl
arpl
in
add
xor
inc
bound
flds
nop
data16
xchg
lcall
xor
push
fisubrs
xor
in
mov
mov
or
inc
stos
adc
cmpsl
nop
pushf
add
loope
jl
insb
movsl
mov
sub
into
enter
push
mov
sarb
xchg
ficoms
xlat
movsl
mull
mov
xchg
test
hlt
mov
lcall
add
sub
cld
sbb
adc
je
insb
and
inc
icebp
add
inc
aaa
adc
sbb
cmp
sbb
ss
mov
or
cli
mov
ss
mov
out
push
daa
shll
jl
scas
adc
cmpsb
mov
js
inc
mov
scas
add
inc
pop
mov
lret
fists
daa
arpl
and
clc
mov
lods
jo
add
test
inc
lea
adc
fsubp
adc
inc
pop
js
jnp
fcoml
mov
cmc
lods
lret
test
shrl
mov
push
idiv
iret
arpl
call
daa
xlat
sub
cmp
cs
ljmp
inc
scas
mov
scas
add
sbb
jle
ret
cmpsb
and
mov
fldcw
test
cmpsl
stos
repnz
jnp
mov
cld
ret
into
pop
sub
aam
in
xchg
add
les
cmc
lahf
xchg
aaa
addr16
cmp
int
mov
insl
mov
xlat
mov
gs
or
xchg
add
xchg
inc
fs
lret
mov
out
das
sbb
mov
lret
mov
ss
mov
fbstp
cmp
pop
mov
movsl
mov
stc
daa
outsb
and
jp
divb
jb
dec
in
inc
fldt
xchg
lea
pop
lret
sub
or
cmpsl
xchg
or
insl
mov
mov
jle
negb
andl
push
sahf
les
or
mov
leave
das
in
pop
sbb
clc
inc
xor
mov
sarb
ja
lret
arpl
add
adc
pop
push
xor
mov
inc
inc
hlt
lea
sbb
jge
mov
jbe
mov
mov
or
cmp
push
mov
arpl
mov
fs
mov
cmp
aas
fwait
pop
mov
xchg
add
mov
pop
add
adc
xchg
push
and
mov
addr16
es
lcall
pop
sub
sarl
out
lds
repz
fwait
popa
mov
lock
cmp
lods
sub
sub
jle
das
ljmp
fwait
and
mov
outsb
cmpl
gs
jge
popa
out
pop
pop
jle
jbe
xor
sbb
adc
aam
mov
pop
into
adc
lret
fisubrs
jmp
stc
pop
and
jge
inc
test
xor
mov
mov
das
lds
popf
mov
inc
jne
add
pop
and
hlt
ficompl
adc
mov
sbb
ss
adc
pop
jns
jo
aad
push
andb
dec
pop
mov
insl
cmp
mov
bound
loop
aam
fs
jb
add
and
cmp
inc
inc
in
and
rorl
fstpl
insl
iret
ret
pushf
lret
or
dec
test
mov
sbb
loop
push
pusha
sbb
lods
xchg
dec
sbb
jg
mov
mov
ficoms
and
popf
in
mov
daa
sub
out
movsb
mulb
in
adc
in
xchg
sub
into
dec
sbb
stos
xchg
or
fmul
add
mov
call
xchg
mov
xchg
insl
mov
cmc
loop
add
mov
aas
or
ss
mov
fwait
add
pusha
enter
cmp
rcll
mov
test
sub
hlt
mov
fsts
xchg
mov
xchg
iret
data16
pop
into
and
mov
fnclex
xchg
mov
xchg
decl
out
insl
cmp
scas
xor
xor
xor
arpl
push
jno
addr16
les
sub
gs
loopne
loopne
push
lods
mov
adc
testl
dec
push
dec
rclb
mov
in
push
int3
lods
stc
stc
clc
addr16
dec
loop
mov
cld
fbstp
xor
xchg
mov
stos
imull
pop
add
push
push
or
dec
mov
add
fwait
popf
mov
xor
mov
xchg
dec
jecxz
cmp
out
shlb
xchg
or
mov
dec
lods
push
jg
add
xor
clc
dec
in
add
ret
arpl
stc
stos
je
adcb
rorb
mov
divb
lods
sub
or
jbe
incl
xor
sub
cmpl
lret
scas
xchg
pusha
sub
push
cmp
pop
loopne
mov
movsl
scas
push
icebp
lds
mov
and
es
je
xor
fisubrs
out
stos
pop
inc
jo
out
xabort
and
cmp
mov
cmpsl
mov
push
xor
mov
add
iret
out
arpl
int
out
mov
mov
adc
jo
sbb
sbb
in
dec
outsl
or
popf
push
cld
cmp
sbb
arpl
call
movsl
add
mov
sbb
lcall
lcall
inc
daa
sub
enter
daa
xadd
and
lock
xlat
mov
mov
push
hlt
lea
ret
xor
movb
mov
lods
jnp
mov
adc
mov
cmc
cmp
fs
addr16
inc
dec
in
lods
aas
xchg
in
daa
fsubr
inc
rcr
push
cmpsb
clc
mov
sub
scas
pop
sbb
and
xchg
fcomip
push
adc
pop
jne
mov
fidivl
add
out
push
mov
mov
fidivrl
mov
sti
pushf
fwait
sbb
mov
mov
outsl
inc
stc
je
xchg
push
inc
cli
ljmp
insb
dec
or
add
pop
outsl
add
xchg
int3
frstor
pop
leave
fcoml
jl
clc
xor
cwtl
sbb
jno
xorb
popf
lea
subl
pop
and
jne
leave
fsubs
push
std
cmpsb
addb
push
adc
mov
scas
add
lds
das
mov
js
adc
mov
mov
xor
cmc
pushf
movsb
fmull
es
jge
insl
in
sub
fs
xlat
mov
push
ja
xlat
pop
pop
pop
cmp
ljmp
mov
cs
inc
lods
add
pushf
or
cmovno
inc
inc
jb
xorl
mov
fwait
xor
daa
repz
cmp
dec
pusha
jmp
test
icebp
out
adc
jb
fs
sub
test
sub
jmp
hlt
fcomi
popa
xchg
xchg
decb
mov
push
jae
sub
clc
insl
mov
incl
ret
stos
outsl
sub
jbe
pop
dec
dec
daa
or
push
mov
xlat
and
add
xor
sbb
jns
or
pushf
fidivrl
loope
dec
shrl
stc
mov
xchg
or
adc
mov
push
shl
in
xor
addl
dec
inc
outsb
cmpsb
loope
outsb
mov
add
iret
out
pop
cmpsl
stos
jl
mov
xchg
lret
fstps
mov
xchg
push
cmp
xchg
xchg
push
push
mov
shlb
sbb
out
or
ficoml
loopne
xlat
and
xor
mov
sti
xorb
add
dec
sbb
in
sbb
ret
inc
add
mov
lret
sbb
jns
ja
xchg
outsb
das
xor
cwtl
clc
cmpsb
or
lea
cs
inc
xchg
mov
push
fcompl
inc
mov
sbb
fldcw
and
cmp
dec
mov
mov
fsts
adc
js
jg
lcall
lret
les
arpl
ret
fwait
in
stos
inc
addl
mov
pop
in
sub
mov
mov
test
mov
imul
out
shlb
scas
loopne
pop
pusha
sbb
roll
test
mov
dec
aas
push
mov
sahf
add
mov
test
repz
cld
sti
or
mov
ret
das
adc
or
pop
pop
cli
adc
divl
or
mov
pop
jo
mov
inc
sub
fs
mov
clc
push
fnstcw
insb
in
sub
lea
cmp
sub
sub
mov
inc
mov
lret
out
outsl
dec
xor
aad
data16
cmp
into
mov
inc
xor
repnz
xchg
xchg
xchg
push
scas
das
mov
arpl
std
out
and
sub
mov
push
xor
data16
or
pop
fdivl
xchg
scas
leave
popa
mov
xchg
int
pop
iret
ret
sub
jecxz
addr16
add
push
cmp
iret
or
or
scas
imul
xor
in
mov
fwait
cmp
xor
popa
xchg
jno
mov
xor
cmpsb
or
jle
add
fmull
lcall
fimull
cld
push
dec
jmp
outsl
jo
sahf
stos
pop
or
and
cmp
inc
addr16
imul
xchg
ljmp
stos
call
dec
leave
dec
ret
dec
or
dec
sbb
or
lret
push
shll
je
ret
xor
push
pusha
jmp
stc
inc
mov
fwait
cmp
rolb
xchg
pop
mov
sbb
dec
or
push
jno
and
mov
sbb
mov
cmp
mov
outsl
jns
jle
mov
xor
js
pop
push
lahf
mov
xor
loopne
lods
jge
sub
pusha
xor
hlt
movsb
pushf
std
pusha
push
dec
sahf
into
ja
movsb
adc
add
lods
mov
pop
js
inc
jl
adc
add
pop
add
loopne
and
shrb
faddl
or
lds
imul
pusha
xchg
and
mov
inc
inc
popf
ljmp
mov
sti
sub
sbb
ja
cmp
jge
xor
shll
sub
loop
adc
out
add
xchg
rcrb
aad
mov
jnp
xchg
daa
push
mov
ret
ret
cmc
pop
lock
out
mov
and
and
lock
aaa
mov
fmulp
icebp
orl
test
mov
cmp
sbb
mov
add
cmp
mov
out
cmpsb
push
xchg
push
sub
mov
lods
das
popf
fimull
sti
sbb
out
xor
adc
and
mov
dec
xchg
jnp
adc
xchg
jecxz
sub
dec
mov
adc
pop
pop
mov
test
or
ja,pt
sub
jp
icebp
dec
jnp
xchg
mov
imul
push
pop
jmp
or
adcl
pop
lret
test
lock
xor
xor
call
cmp
and
mov
add
movsb
and
fucomip
jo
pop
das
add
les
pop
imul
sbb
jns
mov
sbb
dec
dec
repz
inc
or
or
or
fsts
lock
mov
shl
negb
xchg
mov
push
or
out
ret
pop
stos
shrl
jmp
daa
and
cltd
inc
movsl
jae
dec
xor
rorl
sti
xchg
lahf
add
movsl
cmp
cltd
les
adc
cltd
jecxz
jns
test
pop
arpl
aad
outsl
or
inc
mov
bound
mov
jo
dec
mov
push
mov
mov
test
sub
pop
arpl
add
fcompl
loopne
leave
dec
faddl
jo
bound
int
std
cmp
insb
pop
out
testl
shl
push
mov
aas
push
aad
cwtl
cli
adc
mov
mov
inc
mov
or
add
leave
add
adc
ja
arpl
sarl
jp
sarl
repnz
jge
addb
sbb
and
sbb
mov
and
pop
sbb
fcompl
imul
push
loopne
cli
lea
testl
push
dec
jo
cli
in
fwait
mov
popa
pusha
and
sub
insl
cmp
jmp
push
jp
insl
in
xchg
add
jns
cmpsb
or
ret
ja
das
arpl
cwtl
mov
cmp
stc
in
or
push
pop
xor
push
pop
lahf
add
fcomp
out
xlat
adc
mov
jno
orl
cwtl
sub
in
aad
fwait
rcl
xchg
or
cltd
clc
xor
outsb
or
sbb
xchg
mov
stos
imul
int
sahf
push
arpl
andl
cwtl
addr16
jne
mov
jp
mov
rolb
rclb
mov
in
lods
bswap
inc
repnz
sbb
lea
aad
lock
jg
out
jmp
es
sub
inc
dec
cltd
add
gs
mov
sub
fisubrs
sub
sti
push
dec
hlt
mov
pop
subb
out
jle
stos
testl
cli
int
jae
les
pop
out
and
inc
jne
fadds
leave
pop
imul
fmul
rorl
popa
stos
fists
das
fstps
or
cltd
cmpsl
push
mov
clc
call
jo
or
inc
enter
inc
daa
je
and
addb
roll
cmp
sbb
and
mov
mov
mov
cli
push
addr16
push
cmp
push
adc
in
add
adc
lret
scas
add
arpl
pandn
mov
mov
repnz
subl
mull
aas
sbb
and
insb
mov
rclb
arpl
loope
lods
shr
xchg
adc
loopne
lods
xchg
mov
sub
jbe
dec
jecxz
std
mov
or
fstl
rcr
push
xchg
sahf
js
stos
fsubrl
and
loop
lahf
cmp
push
popf
pop
jb
fnstcw
mov
stc
sbb
add
insb
fs
faddl
pop
xchg
test
mov
fwait
push
sbb
cs
or
imul
cmp
lcall
fld
idivl
pusha
ljmp
cmc
cmpsb
mov
ja
ret
arpl
orb
or
js
or
outsl
xor
test
stos
or
jbe
aam
dec
fcomip
sbb
push
dec
in
push
xchg
xchg
fsubrl
cmpsb
sub
dec
sbb
gs
std
out
out
test
and
stc
int3
sahf
ss
inc
mov
push
fbld
push
repz
scas
adcb
pop
popf
lds
sbb
push
cs
xchg
adc
xorb
push
push
sub
and
sub
fwait
into
clc
cmp
aad
jge
dec
ret
rcr
fwait
pop
jnp
jmp
pop
xchg
ror
sbb
pop
arpl
and
addr16
pushf
push
repnz
gs
pop
pop
pop
mov
repnz
imul
sub
sbb
fidivrs
das
xlat
push
dec
jns
iret
dec
xlat
fiadds
bound
or
aas
int3
pusha
add
jnp
or
in
enter
outsb
out
lea
inc
mov
movsb
mov
pminub
in
loopne
and
in
jne
sub
lea
out
xlat
mov
xor
inc
jg
sbbl
std
into
mov
popa
and
aas
inc
cmp
test
arpl
mov
lret
xchg
mov
or
ret
adc
scas
mov
into
jl
mov
mov
fidivrl
inc
pop
add
push
jp
sbb
mov
cmp
gs
jns
mov
into
xor
push
mov
ret
das
enter
and
je
outsl
mov
mov
pop
xor
push
adc
push
shll
test
jp
in
loope
push
aad
cmpsb
jle
int3
mov
mov
mov
sbb
jecxz
sub
xchg
mov
stos
push
or
pop
push
add
adc
mov
dec
sub
and
imul
dec
mov
popf
icebp
add
jmp
push
mov
mov
sbb
push
push
out
leave
stc
push
pop
mov
push
imul
pop
enter
mov
adc
test
neg
mov
das
lret
das
ds
repz
cmpsb
jg
aad
and
stos
sub
push
push
ret
cmp
mov
mov
inc
shlw
xor
in
inc
rol
jb
faddl
or
sti
xchg
sub
cwtl
fs
cmpsb
icebp
sbb
pop
cld
clc
shlb
int3
outsb
fidivrs
ds
out
push
mov
pop
push
lret
out
outsb
mov
push
cmpl
sti
adc
leave
xchg
leave
out
mov
dec
adc
inc
pushl
out
dec
jnp
loop
sub
push
pextrw
push
dec
mov
pop
inc
shll
jns
cmpsb
nop
rorl
pop
aad
inc
push
in
mov
pop
je
negl
pop
jno
pop
jb
mov
data16
inc
jae
push
sub
outsb
in
ljmp
ret
cmp
sbb
sbb
mov
ss
jecxz
mov
cvtdq2ps
pop
mov
or
inc
orl
es
andl
pop
stos
int
adc
xchg
mov
inc
pusha
mov
arpl
mov
and
bound
js
xor
cmp
sub
jle
pop
lods
cmp
insb
push
or
cmp
fcmovu
pop
test
push
mov
push
imul
loop
sbb
dec
scas
loop
mov
jmp
mov
shlb
stc
lahf
fwait
cmpsb
or
lods
jge
push
loop
pusha
es
jns
pop
aas
out
dec
jne
mov
pop
pop
divb
or
sub
inc
mov
vmovhps
push
xchg
mov
adc
push
push
mov
push
inc
or
out
gs
dec
insl
mov
test
ljmp
push
mov
inc
xchg
lods
into
mov
orl
ret
jnp
rolb
ret
jae
push
iret
loopne
xchg
jp
mov
xor
jnp
mov
aad
push
js
jo
and
jno
enter
push
mov
sub
aas
pop
mov
dec
in
in
sub
ja
andb
mov
mov
inc
dec
xchg
or
shll
das
push
arpl
xor
in
adcl
test
cmp
xor
in
sti
fnstenv
je
inc
inc
fiaddl
cmp
fxtract
sahf
fsub
jle
test
push
sti
vpperm
mov
lcall
jne
and
repz
mov
sar
insl
jne
fcmovu
pushf
mov
pop
mov
push
add
rcrb
inc
mov
lds
push
mov
lcall
clc
bound
xchg
dec
cwtl
mov
or
sbb
xchg
mov
sbb
xor
loope
jo
push
data16
bound
adc
in
adc
pushl
mov
es
jle
in
and
in
scas
add
aad
xorl
enter
idiv
ds
insb
adc
add
mov
rorl
ret
dec
or
out
jmp
sbb
aas
xor
cmpsb
scas
push
push
js
push
scas
arpl
loopne
sti
mov
pusha
enter
andl
adc
jns
aaa
xchg
and
dec
dec
test
sahf
stc
addr16
jbe
sbb
rcrb
idivl
popf
inc
in
decl
fldt
in
push
mov
pop
or
add
xchg
fstpt
xor
fdivrp
movsl
xchg
add
call
dec
imul
test
mov
shll
inc
or
movsl
into
and
punpckhwd
fs
push
aad
data16
mov
mov
xchg
adc
push
test
mov
or
cmp
inc
sub
fwait
adc
stc
sub
add
imul
sarb
jo
jb
fstpt
mov
hlt
mov
nop
sbb
push
es
sbb
or
jae
gs
dec
adc
pop
mov
pop
daa
ret
xlat
mov
mov
jbe
sub
lods
mov
cltd
dec
cmp
cmp
rcll
fstpl
push
sbb
js
xor
pushf
scas
fidivl
push
xchg
mov
stos
sub
jbe
dec
xchg
mov
push
adc
std
ret
xchg
test
mov
sbb
sarl
movb
push
and
das
cmc
xchg
cmp
and
jg
push
ds
cmp
inc
mov
mov
imul
pop
jg
push
pop
dec
push
sbb
sbb
jmp
mov
jg
fldcw
inc
scas
mov
mov
inc
dec
aaa
outsb
lods
xor
or
add
sub
in
mov
mov
mov
or
mov
mov
je
jg
test
stos
sti
bound
xor
push
push
xchg
data16
aaa
icebp
enter
and
adc
pop
mov
sti
dec
lods
jnp
mov
sbb
daa
insl
and
test
xor
test
shl
roll
mov
in
aad
and
popf
and
dec
ds
push
xchg
jge
mov
adc
jbe
cmp
cmp
mov
pusha
fst
cmp
cmpsb
dec
mov
mov
pop
cmpsb
sub
ja
fbld
insl
lods
test
cmp
inc
sub
test
pop
fdivrs
arpl
mov
scas
cwtl
rclb
dec
lods
and
js
pop
clc
mov
xchg
dec
ret
aaa
cmp
mov
sub
cmp
ret
insb
jecxz
out
xchg
mov
push
mov
xchg
shlb
add
cmp
nop
shlb
mov
cltd
xchg
adc
push
inc
xchg
adc
in
pop
jl
in
cmp
iret
mov
mov
push
add
mov
in
aad
adc
xor
lret
or
xchg
test
popf
into
pusha
cmc
lret
mov
jae
dec
fisttpll
mov
adc
scas
or
adc
pxor
sub
pop
or
int
and
cmp
rorb
in
gs
xor
pop
cs
inc
lea
scas
adc
push
pop
mov
pushf
push
ret
fistpl
sbb
xchg
shl
dec
int
push
in
pop
into
inc
and
hlt
add
jns
outsl
arpl
mov
lret
push
in
mov
pop
jmp
inc
jns
int3
movsb
mov
mov
rcr
jle
mov
and
shrb
dec
stos
sbb
test
out
pop
aam
enter
scas
xchg
or
jo
out
inc
cs
jns
std
xchg
pop
jecxz
aad
xor
scas
int
or
mov
data16
xlat
loop
loop
jg
lcall
xchg
mov
stos
push
add
push
cli
fs
pop
mov
and
push
cs
push
mov
lret
xchg
mov
dec
xor
lea
bound
sbb
add
js
les
cmpsb
or
dec
ja
nop
push
addb
and
mov
imul
out
and
mov
mov
jo
xchg
fmul
out
repnz
leave
cs
rcrl
inc
shl
iret
inc
mov
ja
push
aaa
cmp
hlt
inc
arpl
or
add
pop
cmp
cmp
movb
and
lahf
jl
pop
imul
jbe
daa
sbbl
push
pop
mov
sahf
pop
sbb
cltd
pop
dec
cmpsl
lret
fs
add
pop
js
mov
pop
fs
jmp
jb
sbb
cld
fisttpl
mov
sub
ja
iret
xor
cmp
mov
dec
push
add
push
pop
sbb
jle
jl
or
mov
or
loop
jmp
shl
and
test
subl
sahf
dec
pop
push
mov
lds
mov
add
pop
gs
jb
adc
dec
test
and
push
lods
divl
cmp
dec
mov
cmp
popf
popf
cld
cmc
cs
sbb
push
xor
dec
decl
cmp
in
cld
das
pop
lret
out
or
push
add
push
sbb
push
cmp
jg
stc
dec
test
or
pop
inc
mov
and
insl
add
jle
js
xchg
jo
inc
xchg
jmp
cmp
int3
fwait
test
jecxz
and
sahf
sub
lret
xchg
push
mov
and
jecxz
mov
xchg
pushf
cli
mov
dec
ds
sub
and
mov
insl
cmp
in
call
push
stos
aam
enter
outsb
xor
sbb
jl
cmp
adc
and
iret
rol
sbb
add
das
cmpsl
in
sub
jnp
es
mov
pop
xchg
sub
shl
subl
adc
bound
xor
icebp
pusha
jne
mov
push
mov
outsb
loopne
dec
shll
or
and
mov
imul
cmpsl
xor
cmpsb
je
push
push
les
cltd
adc
inc
jno
cli
jbe,pn
jne
dec
imul
xchg
addr16
push
es
imul
daa
lds
pop
sbb
jmp
xchg
mov
push
mov
gs
out
test
cwtl
dec
add
mov
dec
mov
jp
cmp
aas
fmuls
adc
mov
mov
jne
je
stos
fbld
add
mov
cwtl
cmp
pop
pop
in
leave
gs
xor
popa
push
rorb
mov
pop
sbb
fstl
mov
in
xchg
or
jbe
rcrl
inc
lahf
add
push
jg
sbb
decb
mov
jmp
andb
lret
sahf
mov
mov
loope
mov
xchg
rorl
dec
leave
shrl
cld
in
stos
arpl
inc
mov
sbb
sarl
and
testl
lea
sub
sub
fcmove
mov
mov
fs
or
outsl
or
push
push
xchg
bound
xchg
fisubl
shll
or
stos
mov
cmp
or
or
or
lahf
pop
pop
lods
cmc
fstpt
lock
enter
hlt
xchg
popf
sub
and
jg
lret
jbe
sub
stc
test
xchg
jle
xor
jae
std
sbb
addr16
test
movsl
sahf
pop
mov
or
dec
add
mov
test
xchg
mov
jo
leave
arpl
pop
sbb
add
in
mov
inc
notl
mov
lods
jmp
es
dec
mov
ret
das
call
xor
js
lock
dec
adc
leave
ds
insb
mov
popa
jne
ljmp
in
test
pop
lahf
mov
lock
jae
stc
addr16
pushf
pop
scas
jecxz
jo
rcl
pop
mov
pushl
pop
jmp
popa
idivb
fildll
mov
add
outsl
mov
call
fwait
sbb
popf
lods
test
mov
bound
add
aam
adc
stos
gs
les
adc
fimull
xlat
divl
pop
loop
imul
xor
sbbb
ljmp
xor
pushl
pop
mov
push
sub
je
inc
or
adc
pop
clc
pop
jl
and
out
xchg
pop
rcrl
movsb
push
pop
ja
pusha
adc
rcrb
mov
test
push
and
cmpb
shlb
dec
test
dec
add
mov
push
ret
lods
xor
ret
lahf
out
sbb
and
mov
ss
addl
dec
loope
test
jl
jns
jbe
lods
test
pop
dec
negl
lahf
jp
shl
pop
call
stc
cmpsl
jno
in
nop
xchg
xor
adc
xchg
movsb
pop
adcl
cltd
xchg
out
je
jp
fmull
xorb
or
clc
mov
test
test
jge
inc
mov
xor
add
pop
pop
pop
leave
ret
push
mov
movl
movl
jmp
push
inc
lds
mov
dec
ja
cmp
adc
pusha
cs
pusha
pusha
or
ftst
repnz
loopne
aas
jb
sbb
inc
popa
pop
adc
hlt
cmpsl
insl
jne
mov
add
ljmp
shl
xchg
pop
std
add
lcall
jge
xchg
into
ficoms
lret
push
test
mov
mov
mov
xchg
dec
jbe
adc
inc
test
test
std
xchg
insl
inc
mov
xchg
fisubrs
mov
lds
xchg
sbb
repz
inc
pop
stos
mov
inc
insl
arpl
in
push
repz
mov
imul
ss
stos
ret
test
mov
hlt
xor
ljmp
popa
outsl
xor
inc
push
pop
js
mov
xlat
inc
insb
sahf
xor
mov
jbe
push
xchg
and
fists
aam
aam
call
cmpsb
mov
std
xor
cli
pop
xor
dec
cmp
mov
sub
mov
lock
test
lcall
loopne
shll
adc
gs
jnp
fs
ja
jbe
jbe
test
xlat
xchg
mov
pushf
ret
xchg
pop
lock
out
mov
mov
ret
xor
scas
imul
ret
rorl
and
cwtl
loop
and
push
sbbl
dec
add
testl
int3
in
std
mov
cmpsl
out
in
adc
or
hlt
jo
icebp
and
push
icebp
dec
jo
arpl
shlb
cld
inc
xchg
ja
cli
dec
aam
inc
mov
jg
fmul
test
addr16
mov
pop
inc
pop
cs
call
xor
mov
cmc
cmp
lret
sahf
stos
lahf
fnstenv
sub
outsb
mov
mov
das
scas
xchg
xlat
mov
fs
mov
fsubl
sbb
pop
popf
outsl
adc
cmp
pop
xlat
pop
mov
sbb
fwait
inc
xor
fxtract
stos
fwait
loope
xlat
out
hlt
push
xchg
jp
fwait
test
stos
jb
xchg
movsl
inc
pop
pusha
push
dec
call
push
fs
inc
sub
lock
dec
pop
pop
add
out
sbb
jno
xchg
xchg
nop
inc
lds
imul
dec
pop
adc
cs
outsb
adc
mov
sbb
adc
incl
add
sahf
mov
xchg
fnstcw
scas
jg
sbb
jmp
and
push
mov
mov
cmpsb
sbb
jecxz
pop
in
lods
outsl
ljmp
lods
cmc
mov
cmpl
jecxz
pop
jp
and
fsubs
push
cld
sbb
addr16
jae
adc
out
add
icebp
pop
mov
add
add
inc
int3
and
pushf
out
out
testb
mov
nop
mov
rclb
or
mov
test
arpl
ret
mov
aas
movsb
or
sbb
cmpsb
pop
dec
rcll
push
cmp
pop
add
jns
popa
ror
push
test
mov
jbe
daa
fstpl
pop
xor
cbtw
or
aam
dec
rclb
out
sub
xor
lods
popa
fnstcw
mov
jnp
xchg
enter
mov
pop
xor
popa
mov
mov
aaa
cmpsl
and
popa
adc
jno
and
jp
xor
cli
mov
div
fcompl
ret
lret
stos
dec
rclb
mov
dec
lret
cmp
pop
push
lock
lret
cs
inc
mov
sub
mov
in
stos
dec
xlat
mov
xchg
sti
xor
xchg
ret
push
pop
mov
nop
jmp
test
in
cmp
add
pop
scas
in
push
sub
cmpsl
lahf
push
popl
inc
mov
sbb
push
cmpsl
test
cli
xor
jb
enter
xor
mov
popf
push
jb
sub
test
mov
js
insl
and
xor
adc
or
jg
not
in
or
loop
or
loope
ja
in
xchg
jmp
leave
inc
adc
je
repnz
stc
aam
mov
and
cmpsb
dec
mov
jnp
pop
adc
fdivrp
aaa
inc
mov
out
lods
push
jno
jne
dec
negl
cli
xchg
xorl
push
rcll
or
lahf
shl
dec
xchg
roll
push
scas
mov
sub
sbb
int
es
xor
out
mov
mov
adc
fxch
mov
int3
push
cltd
push
add
lods
jne
pop
sbb
pop
fwait
mov
or
xor
in
push
fxam
mov
xchg
sub
lods
mov
push
inc
addr16
leave
mov
mov
push
insl
sahf
jo
adc
in
pop
stc
cmp
xchg
loop
aad
jle
lods
cmp
es
enter
xor
or
jle
loopne
and
std
test
js
jp
push
dec
imulb
iret
dec
xor
add
xchg
into
aaa
pop
adc
and
test
or
cltd
lds
mov
sbb
fisubs
bound
mov
orb
les
lret
bound
sbb
sub
push
or
imul
rcll
and
inc
mov
int3
lods
shl
mov
lock
and
xor
sbb
xchg
inc
dec
icebp
outsb
stos
and
push
mov
clc
test
and
mov
xlat
arpl
dec
and
mov
inc
dec
and
mov
scas
ret
shlb
sbb
mov
mov
je
cmp
sub
ljmp
cmp
shl
pop
sub
rorl
mov
push
mov
mov
pop
ja
pop
push
loope
jmp
imul
xchg
xor
or
or
sbb
movl
push
rolb
pop
daa
cmc
xchg
xchg
mov
inc
xchg
jmp
push
aad
sarl
and
xchg
imul
fimull
ret
mov
mov
and
ret
fdivrs
movsb
push
repz
lea
aad
cmp
fldenv
and
dec
mov
xchg
mov
add
xchg
daa
sbb
cmpsl
push
fwait
pushf
lret
mov
push
bound
cli
adc
into
arpl
rclb
jno
shll
addb
stos
mov
mov
mov
into
js
mov
pop
push
and
mov
fyl2x
int3
pop
sub
sub
add
test
cs
jl
cwtl
insl
nop
in
or
mov
sub
lret
push
xchg
pop
ds
mov
movsb
cmp
mov
mov
sub
pushf
enter
inc
test
loope
jne
or
clc
adc
imul
out
jmp
push
int
mov
inc
mov
lods
mov
and
into
jno
out
add
mov
adc
sbb
iret
inc
pop
add
jne
stos
and
ds
imul
push
out
adc
cmp
inc
jl
jb
call
mov
mov
mov
xchg
out
pop
adc
rorb
mov
ret
arpl
stc
lret
jns
outsb
xor
jl
jle
push
pop
icebp
sbb
xchg
sbb
cmpl
loopne
ja
shll
xor
adc
push
bound
xchg
mov
cwtl
std
sbb
sarb
xor
dec
icebp
aas
dec
daa
out
jae
jns
sbb
sbb
adc
cmp
push
or
test
mov
shlb
fdivrs
jns
sub
sub
mov
push
xor
mov
popa
sbb
inc
ret
enter
and
mov
sub
es
and
jl
decb
insb
popf
in
sahf
mov
stos
mov
jbe
and
in
push
rcrb
enter
subl
test
inc
scas
pop
mov
out
mov
jmp
stos
jno
mov
sti
push
xchg
icebp
mov
jnp
lcall
call
push
adc
outsb
filds
ljmp
test
test
enter
cmc
xchg
mov
loope
xchg
mov
mov
dec
xchg
lcall
andb
pop
mov
es
and
lret
and
gs
jmp
sub
push
rcrb
fisttpll
out
faddl
cmp
scas
cld
jmp
ret
inc
std
adc
stos
and
add
ja
daa
or
lret
out
cmc
enter
sbb
iret
xlat
adc
cmp
icebp
add
in
cmp
xchg
in
dec
in
xchg
into
addr16
sti
mov
stos
mov
cmp
dec
mov
iret
push
inc
mov
or
out
mov
mov
hlt
jnp
rol
cmp
cli
xchg
out
dec
aaa
push
test
or
fmull
mov
shrb
cmpsl
inc
sbb
push
repz
imul
sbb
lcall
or
and
push
adc
cmpsb
jl
push
pop
das
xchg
mov
pop
test
leave
and
or
repz
test
pop
adc
movsb
push
fsubs
dec
jecxz
arpl
jecxz
xchg
mov
jecxz
cmp
ret
cmp
cmc
mov
jmp
loopne
icebp
add
push
pop
das
stos
inc
cltd
lcall
andl
push
jecxz
jb
test
mov
and
in
push
in
loope
imul
sub
daa
mov
test
sar
mov
es
push
fwait
jae
andb
fnstsw
inc
mov
dec
pop
insb
lock
int3
jb
dec
leave
push
sbb
mov
pushf
lods
sub
add
fadds
mov
adc
push
cmp
lcall
vpacksswb
jl
adc
jb
aas
sbb
pop
dec
sbb
lret
iret
daa
movsl
or
mov
xlat
adc
stos
cmpsb
sahf
jmp
mov
cmp
push
add
out
push
dec
xor
fwait
and
rcrl
jo
icebp
jl
xor
push
inc
rorl
gs
xor
movsb
repz
jecxz
dec
xlat
lea
mov
sub
pop
out
lock
dec
add
pop
pop
bsr
xor
jo
xor
add
loop
jae
popf
xchg
or
push
dec
or
adc
lret
and
xor
jae
xadd
xchg
cmp
clc
jne
cld
nop
and
iret
or
ljmp
imul
test
push
idivl
or
ds
push
icebp
xchg
add
imul
xor
mov
sub
xchg
mov
jne
xchg
add
and
inc
negl
test
in
dec
stc
and
cmp
hlt
xchg
divb
mov
xchg
sbb
les
in
stc
fs
xchg
aas
or
pop
aad
nop
cs
mov
mov
push
xchg
sbb
add
test
jae
add
testb
popl
cmp
cld
subl
mov
int
bound
mov
test
and
mov
jae
jge
push
xor
nop
mov
lret
sbb
sub
inc
shlb
sbb
xor
push
out
pop
add
shrl
jb
xlat
mov
xchg
xlat
inc
jns
shr
dec
fisubl
loope
les
jmp
out
leave
mov
push
jo
mov
cmc
insb
xchg
enter
mov
in
sub
inc
cmp
mov
fidivl
pop
sub
data16
mov
addr16
cmp
xor
and
mov
push
mov
pop
cmp
add
sbb
xor
shlb
sbb
and
jl
addr16
mov
leave
mov
sub
clc
dec
push
xchg
fisubl
xlat
sub
mov
inc
das
hlt
mov
rclb
daa
xlat
jae
lcall
pop
xor
pop
dec
mov
dec
xor
lods
adc
or
subl
in
test
dec
test
pop
mov
xor
jecxz
mov
push
mov
sahf
mov
jl
cmp
mov
push
add
adc
shl
cltd
jmp
add
xor
int
out
clc
adc
iret
cmpsl
test
push
fs
aas
mov
cmp
pop
cmpl
cmpsb
or
mov
or
or
fcmovb
xchg
loopne
sarb
adcl
jbe
push
mov
imul
mov
enter
and
jecxz
stc
jno
lods
inc
or
push
jl
sub
adc
mov
jns
or
mov
sbb
push
xor
mov
dec
xchg
pop
lret
mov
mov
jo
or
sub
lods
push
adcl
add
and
cmpsb
movsb
adc
jae
jl
jmp
fdivrs
in
xor
pop
cmpsl
mov
outsb
push
aam
xchg
sbb
mov
cmp
jb
sbb
outsb
mov
stos
scas
dec
mov
jnp
xor
mov
sbb
pop
xlat
movb
mov
pop
andl
movsl
push
mov
dec
mov
mov
inc
sbb
sbb
mov
or
adc
mov
pop
inc
mov
daa
xchg
ja
mov
or
call
jge
es
aas
out
loope
test
jo
add
xchg
inc
bound
testb
shr
mov
mov
sub
sbb
mov
xchg
mov
mov
pop
xor
ds
mov
stos
pop
imul
xorl
mov
into
mov
popf
call
pop
lahf
aas
roll
mov
sub
cmpsl
imul
cmp
arpl
xchg
xor
andb
add
xor
outsb
push
aad
das
mov
jmp
mov
pop
pusha
xchg
or
mov
mov
push
cmpb
push
imul
lcall
cwtl
std
mov
lods
adc
daa
insl
gs
js
fimuls
sub
add
rcl
push
fldenv
and
dec
push
or
lock
jo,pt
jmp
push
lret
aas
out
push
stos
dec
icebp
in
test
es
or
cmpsl
ja
adc
cmc
lcall
arpl
shr
divl
cltd
push
test
je
xchg
xor
mov
cmp
lea
invd
xchg
jo
and
push
xor
int
cmpsl
gs
loop
ds
lret
out
notl
scas
dec
xchg
pop
into
shrl
inc
inc
popa
es
test
ss
dec
scas
jecxz
or
ret
and
stos
std
aas
pop
mov
mov
inc
fs
subb
ds
popf
dec
mov
ss
enter
je
push
aam
add
cli
cmpsb
lea
es
xchg
outsb
adc
xchg
out
push
jne
and
repz
pop
fstps
add
add
mov
ret
aaa
push
mov
test
and
std
lds
jmp
and
mov
cmpsl
cmp
imul
test
xchg
dec
mov
inc
cmc
dec
movsl
or
adc
lcall
mov
lea
lds
adc
ja
movsl
js
adc
jl,pt
emms
sub
pushf
inc
fcoml
shrl
insb
fwait
rcll
cmpsl
test
test
and
sbb
into
or
ret
jmp
xchg
jno
clc
or
loopne
sahf
lds
push
cs
loopne
sub
aad
aad
and
inc
movsl
mov
in
xlat
test
test
jecxz
arpl
cmp
adc
daa
fstpt
repz
std
fcmovbe
dec
xchg
mov
test
test
std
push
es
mov
mov
imul
and
sub
push
pushf
call
fists
or
pop
or
in
pop
aaa
mov
les
jno
outsl
sub
sub
lods
mov
add
xchg
push
cltd
negl
nop
out
mov
or
push
mov
outsl
mov
mov
xor
xchg
fisubs
cld
repnz
out
fwait
lret
sub
dec
aas
jge
pushl
push
mov
mov
sbb
xor
mov
in
sub
sahf
out
push
gs
sbb
pushf
lods
mov
pop
jae
ds
pop
xorb
or
jns
add
pop
jbe
int
adc
jmp
or
popl
cmp
pop
or
pop
lahf
mov
adc
lock
gs
enter
xchg
push
addr16
into
lods
iret
das
cmp
sbb
xor
sbb
adc
mov
sbb
call
test
jno
xchg
in
xor
out
push
movsl
sahf
pop
aaa
mov
lods
jnp
sbbl
popf
loopne
dec
lret
jbe
lcall
bound
shrb
push
adc
push
fiaddl
mov
mov
jb
cmp
dec
scas
push
imul
into
jo
in
call
add
aas
imul
mov
xor
popa
iret
dec
fbstp
cli
test
push
sbb
cmpsb
aad
add
daa
pop
aaa
les
fisttpl
sbb
push
shlb
cmc
pop
xchg
clc
inc
inc
sahf
aas
int3
out
inc
mov
je
ds
les
dec
sbb
mov
jmp
sub
inc
mov
les
pushf
and
test
lock
and
movsl
lahf
add
cmp
dec
pop
pop
aas
dec
pop
in
jnp
pop
and
mov
shll
mov
scas
leave
cmp
shlb
push
popa
daa
jp
pusha
loop
mov
mov
sbb
jb
dec
outsl
add
es
adc
xor
fcmovu
fiadds
fcomi
loopne
sbb
out
cmp
addl
jecxz
scas
filds
sub
jle
pop
cmp
jbe
xchg
xchg
and
dec
sub
inc
orl
sbb
daa
iret
sub
xchg
mov
cli
addr16
fisubs
in
arpl
jmp
dec
adc
adc
sbb
shl
sub
repnz
jge
inc
inc
and
jb
jnp
jmp
popf
jmp
mov
pusha
movsl
push
inc
shl
je
test
popf
aas
mov
fdivs
cmc
int3
repnz
div
inc
sbb
fimuls
cmpsb
xchg
insb
lahf
and
jecxz
xchg
pusha
mov
xchg
scas
cmp
popf
push
xchg
ljmp
addr16
jno
shlb
xchg
inc
xchg
es
adc
loopne
testb
inc
mov
sbb
mov
mov
adc
adc
sbb
jne
or
aam
xor
sub
jnp
cmpsb
pop
sti
cltd
fstpt
add
and
pop
ret
lods
fucomp
lahf
push
mov
aam
jecxz
mov
les
leave
into
sti
push
sub
mov
mov
push
loope
scas
jge
je
pop
jecxz
jns
dec
int3
stos
push
jns
push
push
mov
shll
fcmovne
fnstcw
sbb
popa
or
iret
jae
push
adc
push
cmc
add
mov
fadds
ret
scas
mov
push
movsl
push
fmulp
xor
rol
mov
or
jge
sbb
int
popf
push
out
sahf
lea
push
fildl
sub
jmp
out
xor
stos
js
lahf
aaa
imull
pop
das
sub
push
js
push
test
push
scas
test
enter
loope
fsubl
es
and
xor
xlat
add
push
mov
mov
push
pushf
dec
dec
loope
cld
cmp
repnz
scas
sbb
push
outsb
fndisi(8087
mov
mov
mov
test
mov
shrl
hlt
int3
jmp
bound
cmp
cmp
mov
or
cli
inc
jp
or
sbb
inc
dec
sbb
insb
movsb
mov
fldenv
mov
mov
fidivl
hlt
sub
imul
and
jno
test
int3
or
stc
or
dec
inc
cmp
pop
push
xlat
test
pop
mov
out
sbbl
mov
sub
xchg
push
xor
loop
rcr
testb
dec
pushf
inc
jmp
and
popa
insb
loope
push
or
inc
aas
inc
adc
movsl
dec
sub
data16
mov
mov
mov
xor
std
adc
orb
sub
nop
dec
adc
lock
sub
test
fwait
inc
movsb
cld
adc
mov
and
sub
dec
mov
mov
lods
sahf
jp
lods
das
sub
mov
sub
nop
jmp
jns
scas
push
cmp
inc
mov
jmp
xor
add
insb
dec
mov
fnsave
popa
lds
ja
add
sub
xor
sub
mov
xor
push
inc
repz
rcll
fcoms
fsubrp
dec
lcall
stos
aam
fcmovb
lock
int3
sbb
movsb
rcrb
data16
mov
ja
jg
add
rcrb
scas
and
movsb
jl
push
cli
xchg
xchg
mov
leave
mov
mov
scas
mov
pop
call
test
dec
inc
movsb
sub
clc
hlt
add
lds
mov
shrl
inc
and
inc
pushf
es
mov
sbb
jl
fiaddl
cmp
xchg
ja
mov
roll
sub
jns
je
or
sbb
mov
and
jg
or
pop
shll
iret
decb
dec
ljmp
adc
push
adc
lret
cmp
mov
imul
inc
cld
mov
jo
adc
fsubp
repnz
add
rolb
push
inc
mov
fs
push
push
push
cld
adc
orl
adc
inc
pop
push
cmp
sbb
in
or
jl
fwait
cwtl
and
mov
in
sarb
imul
push
cmp
push
in
mov
jne
inc
dec
arpl
mov
mov
jl
dec
inc
add
dec
mov
cmp
xor
pop
data16
ss
std
lods
mov
mov
push
and
push
xor
mov
push
leave
sub
gs
pusha
cmp
cmp
out
popa
dec
or
shl
jae
jnp
outsl
outsl
cmp
fimuls
aam
jo
inc
stos
sahf
sub
popl
mov
dec
or
sbb
mov
xchg
push
mov
push
notl
dec
cmp
setae
add
sbb
inc
cmc
jo
mull
push
loopne
call
mov
push
orl
push
xor
scas
mov
cmp
cmp
sarb
fmuls
and
sarl
clc
xchg
push
or
mov
mov
scas
or
test
mov
xor
xchg
rcl
fucomi
push
dec
mov
bnd
push
push
clc
mov
mov
adc
pop
adcb
mov
repz
aas
jg
jbe
jb
mov
pop
daa
push
add
jb
push
lods
cld
mov
xor
pushf
fwait
addr16
adc
imul
mov
jl
loopne
mov
sti
or
ds
adc
mov
repz
push
jns
and
loope,pn
jge
cmp
push
mov
outsb
xchg
mov
sbb
arpl
cmp
mov
pop
sbb
xchg
xor
xor
out
jecxz
dec
shlb
scas
push
test
jmp
mov
ss
test
sbb
sbb
arpl
fmuls
jb
mov
addps
movsb
pushf
mov
lods
pmaxub
arpl
lods
loop
xor
dec
push
jmp
cmpsl
mov
jmp
mov
inc
mov
rcr
ljmp
popa
sarb
in
fldt
imul
cmp
lea
inc
jge
xchg
movsl
shlb
push
int
sub
push
add
mov
pushl
mov
mov
jecxz
mov
ret
mov
push
push
cmp
test
or
mov
cmp
cmp
mov
mov
pop
lock
or
dec
jmp
push
xor
cmp
das
xchg
xchg
insl
stos
mov
dec
push
fs
test
mov
sub
mov
mov
scas
nop
push
fs
lret
xor
stc
sbb
or
mov
les
sbb
and
xchg
pusha
mov
cmp
shr
lock
sub
or
test
imul
loopne
in
test
pop
inc
rcll
sbb
push
jp
mov
mov
xchg
cmp
in
push
loop
je
push
outsl
fnstenv
mov
xchg
cmp
push
scas
mov
xchg
fbld
pop
mov
arpl
mov
sti
dec
cmc
out
insl
or
xlat
xchg
outsb
js
mov
and
sbb
jecxz
dec
fldl
xchg
cmpsb
jmp
stc
mov
push
jno
jae
sbb
scas
cmp
jb
aas
call
or
mov
jns
mov
mov
and
popf
das
ss
push
repnz
call
out
in
fwait
popf
out
aas
outsb
shl
insb
fiaddl
subb
incb
jns
or
in
dec
push
xchg
int3
add
xchg
lret
mov
sbb
in
in
pop
and
dec
movsl
and
daa
cmc
sbb
imul
cltd
loope
or
les
fiadds
pop
adc
imul
adc
sarl
mov
daa
out
jle
fimuls
outsb
leave
dec
das
sti
jp
push
sti
jne
in
outsl
pop
dec
sub
xchg
or
or
arpl
xchg
lret
mov
mov
jbe
loopne
fildll
lret
inc
nop
es
cmp
pop
in
push
imul
ljmp
loop
les
xchg
inc
enter
fstl
sbb
inc
adc
out
jne
enter
push
cmp
add
clc
push
int3
mov
xchg
sub
es
mov
add
dec
pop
pop
push
add
cmpsb
jno
xchg
sub
lods
iret
sbb
and
or
xchg
adc
fisttpll
mov
sahf
stos
xchg
mov
popa
test
rcl
jmp
mov
mov
das
or
mov
sub
cmp
sahf
mov
fimuls
push
cwtl
jns
aaa
jle
movsl
cwtl
mov
mov
mov
mov
mov
mov
xor
ret
stos
sub
aas
nop
inc
fistps
je
mov
jno,pn
jg
push
cmp
mov
pushf
ss
push
cmc
ds
ret
mov
push
push
pop
jno
lret
jbe
ret
adc
sub
push
inc
xor
pop
mov
aam
cmp
push
enter
adc
fwait
jb
pop
dec
xchg
dec
lods
pusha
arpl
or
or
stos
bound
arpl
and
out
inc
sbb
xchg
pmaxub
jmp
pop
mov
ror
lahf
inc
jno
faddl
cli
scas
and
hlt
inc
stos
outsl
bound
es
pop
dec
out
xchg
aad
imul
mov
repz
mov
mov
fs
hlt
jbe
push
cmpsb
into
aas
dec
lcall
pop
adc
xchg
js
pavgw
xchg
cmpb
arpl
notl
inc
das
inc
cli
movsb
ss
popa
and
shll
xor
neg
mov
ss
cmpxchg
sarl
loope
inc
imul
lods
fnstcw
mov
adc
jb
adc
fimuls
push
xor
jnp
mov
orb
sub
sub
jae
stos
push
dec
pop
push
mov
inc
pop
pusha
sahf
in
rcrl
jge
out
add
adc
iret
int
jmp
js
dec
jmp
mov
sbb
ljmp
xor
pop
sub
push
call
push
pop
adc
dec
lock
sti
push
ljmp
jo
sbbb
or
pop
movsl
stc
mov
dec
fildl
dec
mov
xchg
or
sub
sbb
jbe
notb
jo
pop
shll
sbb
sub
mov
dec
and
pushf
mov
sbb
jo
aas
push
xor
dec
test
ds
mov
mov
stos
push
dec
shl
cs
pop
mov
pop
or
cld
in
arpl
sbb
cmp
imul
movsb
fs
mov
pop
push
sbb
pop
push
aad
movsl
daa
pop
fwait
out
jne
jbe
outsb
in
scas
mov
xor
ljmp
cs
mov
or
cs
mov
sub
lods
cmp
jae
fs
decl
inc
insl
xlat
dec
rep
repz
incl
test
mov
insl
cmp
push
and
add
das
test
mov
popa
fisttpll
dec
xchg
ficoms
adc
jge
js
xchg
xchg
loopne
incl
jb
pusha
mov
inc
and
fsubl
adc
adc
iret
into
dec
lds
lahf
inc
out
xchg
inc
lock
dec
jl
sbb
and
cmpsb
into
jecxz
mov
push
add
lahf
loopne
imul
mov
negb
int3
lahf
sub
mov
sbb
mov
loopne
mov
pusha
mov
je
jge
test
push
or
aad
cltd
cmp
movsl
fistl
mov
mov
lods
aas
mov
ds
pop
and
addb
push
sub
pop
add
lods
stos
gs
mov
xchg
lcall
jmp
subl
sub
repnz
gs
lock
add
fwait
mov
andb
xchg
adc
arpl
call
and
or
into
into
xor
jle
pushf
dec
testb
int
dec
push
mov
push
shl
sbb
sti
add
pop
shlb
push
jl
jnp
mov
sub
xor
jne
xchg
adc
stos
lret
xchg
iret
jmp
lds
hlt
fadds
xor
add
sub
pop
cmp
cwtl
bound
xor
mov
lock
cmp
lock
mov
insl
xor
lahf
add
pop
dec
inc
sti
test
arpl
icebp
jle
pop
sbb
test
fcompl
xchg
jmp
leave
js
adc
je
or
scas
sub
in
pop
add
pop
add
adc
lea
rorl
inc
inc
outsl
cmc
in
or
cmp
pop
jmp
push
mov
push
andl
xor
xor
inc
mov
cmpl
jne
push
call
cmpl
jb
adcl
push
movl
cmpl
je
cmpl
jne
push
pushl
push
pushl
push
pushl
call
xor
or
dec
mov
jmp
movl
mov
mov
sub
and
movl
sbbl
mov
sub
push
and
mov
mov
not
xor
sbb
xor
adc
mov
add
add
imul
mov
cmp
jne
mov
mov
xor
xor
add
add
imul
jmp
mov
mov
jmp
paddq
ror
jne
or
pushf
ret
imul
pop
pusha
pusha
push
jne
and
or
adc
or
push
lcall
punpckhbw
repz
nop
cltd
adc
push
jne
inc
cmp
push
dec
pop
cmp
add
or
pop
jo
clc
repz
lret
pusha
xchg
sti
mov
imul
fidivl
dec
dec
dec
imul
iret
in
push
repnz
in
ljmp
cmpb
hlt
les
push
shll
jp
jg
stos
shll
fimuls
es
iret
aam
push
shrl
push
mov
sbb
jecxz
xchg
mov
jae
cli
mov
add
add
sub
jns
test
ret
cmp
les
jne
mov
mov
sub
iret
adc
sahf
cld
dec
inc
push
dec
mov
adc
xor
ja
cmp
xlat
sub
inc
enter
dec
push
pop
push
es
xor
push
inc
pop
pop
pop
ss
jge
or
push
je
lahf
fldcw
mov
adc
and
das
out
sbb
gs
iret
sbb
xchg
cs
xchg
inc
or
pop
mov
popa
and
stc
cltd
nop
fdivrs
sbb
add
frstor
cmpl
test
mull
aaa
dec
mov
mov
loopne
scas
lods
pop
xor
mov
cmpsb
add
mov
hlt
adc
out
out
pop
lcall
inc
insb
mov
lea
testb
movsl
out
aas
mov
cmpsb
lods
popa
push
add
rclb
jmp
sbb
dec
inc
outsb
push
outsl
mov
div
cmovo
lock
ss
push
aas
mov
sub
sbb
cld
aas
jl
incl
dec
mov
dec
fsubr
popa
cmpsb
shrl
sub
movsb
test
sbb
mov
daa
jmp
ljmp
int3
xchg
dec
les
insl
andb
jno
lret
cmpsb
jmp
wrmsr
cmp
scas
push
leave
adc
sti
push
cmp
dec
in
stc
ret
pop
loop
scas
and
push
rolb
out
xchg
hlt
test
xchg
jo
mov
add
jmp
adc
or
loopne
pop
sub
jnp
cmp
stos
rorl
into
cmp
faddl
out
add
fsubrs
xchg
cld
subl
push
add
and
orb
ljmp
push
int
loope
ja
inc
pop
outsl
lods
inc
inc
dec
adc
repnz
mov
pop
repnz
inc
xchg
cmpsb
add
pop
push
sbb
das
mov
xlat
add
inc
jnp
test
test
scas
cmc
loope
push
je
fs
pop
jg
mov
nop
arpl
inc
xor
out
cmp
int3
and
cmp
mov
dec
mov
lods
movsl
and
push
push
fwait
xchg
mulb
les
pushf
in
movsl
mov
stos
and
pusha
mov
addr16
lcall
lds
mov
mov
out
adc
sub
loopne
in
js
ret
test
lahf
sub
jmp
push
mov
mov
sub
mov
sti
xor
mov
dec
cwtl
xchg
sbb
pusha
fsubr
push
pushf
cwtl
stos
jg
aaa
shrl
fadd
lods
sub
inc
mov
leave
mov
pop
bnd
ljmp
and
jg
dec
pop
mov
jg
lret
add
in
cltd
rep
xor
xlat
in
or
jmp
sbb
mov
int3
and
pop
lock
mov
pop
push
push
in
pop
gs
push
cmpsb
je
push
js
sub
or
pop
js
aaa
push
and
ss
push
pop
xor
push
sub
ud0
cwtl
in
adc
addr16
jae
sbb
xlat
sub
push
jl
pop
fisttpl
jle
incl
int3
decb
ret
out
pushf
out
sti
std
rclb
test
adc
xchg
xor
scas
cmp
fs
jge
sub
out
fldcw
xchg
jnp
mov
adc
or
push
movsl
es
jp
aad
lahf
decb
jecxz
ss
inc
jno
jno
inc
in
insb
sbb
sbb
push
cmpsl
mov
or
test
mov
fcoml
sub
lea
jno
nop
xchg
loope
pop
subl
sarb
dec
add
add
lret
inc
xor
cli
loope
stos
fistpl
jae
pop
aam
testl
mov
xlat
and
lods
fsubr
xor
pop
ljmp
sub
push
pop
dec
adc
dec
sub
int
repz
test
push
sbb
mov
orl
mov
rclb
cmpsb
adc
xchg
icebp
outsb
sub
pop
pop
test
xor
lods
xchg
pushf
stos
add
scas
aad
and
mov
xor
inc
das
jmp
adc
mov
xorb
inc
insl
mov
roll
loope
add
add
dec
mov
ss
and
inc
ret
pop
adc
adc
add
sahf
aas
dec
xor
or
movsb
lods
cld
test
sub
mov
dec
mov
and
push
dec
insb
or
enter
movsb
sbb
and
lret
out
jp
testl
jnp
push
dec
cmpb
dec
enter
scas
sbb
sbb
pop
sbb
addr16
out
and
xor
sbb
or
cld
fs
pop
pop
push
mov
adc
mov
push
jmp
pop
pop
pop
inc
pusha
ja
jno
push
jge
push
jl
test
es
dec
jnp
fs
xchg
ljmp
repnz
mov
mov
pop
rclb
sub
add
pop
jecxz
dec
out
mov
pop
xchg
cmp
lods
movsl
lahf
pop
xchg
iret
cmpsb
and
push
jno
shrb
idivl
sub
dec
jnp
cli
lret
jle
and
xorb
cmpsl
adc
push
and
or
sti
xchg
fnsave
cmp
fnstenv
cmp
repz
xorb
mov
fucomip
xchg
adc
jle
jge
fidivl
or
push
dec
test
mov
dec
loope
out
lods
mov
das
pop
xlat
cwtl
add
rolb
push
add
inc
sbb
jnp
xor
push
dec
mov
sti
and
hlt
fsub
and
aaa
into
call
fdivs
popf
xor
lods
mov
pop
leave
aas
sti
sub
out
or
fsts
aam
cmp
jne
pop
ss
scas
mov
pop
adc
jns
mov
out
nop
mov
test
sub
mov
adc
mov
xchg
stos
shll
inc
inc
lcall
jb
sahf
lahf
fwait
jg
push
jne
scas
pop
mov
mov
mov
out
xor
jl
icebp
xchg
adc
cmp
in
lret
dec
imul
fstl
outsb
add
into
push
inc
xlat
js
ret
gs
cmc
int
iret
dec
icebp
push
sub
pusha
sub
add
mov
js
jp
mov
or
inc
push
jne
test
add
rolb
xor
test
insb
lds
push
movsb
add
inc
inc
pop
cltd
and
or
fists
sbb
shrl
push
fisttpl
mov
lock
add
nop
push
push
sbb
scas
xchg
stos
mov
in
mov
movsl
jmp
iret
jle
jo
xor
mov
in
push
mov
and
gs
adc
xchg
add
jl
jl
pop
sbb
jnp
int3
pop
sbb
out
inc
std
lret
push
lahf
mov
sahf
aad
enter
jae
sti
sbb
or
cld
cmpsl
addr16
rorb
pushf
daa
mov
out
das
leave
add
or
adc
addr16
les
insb
into
imul
dec
lret
enter
cmp
xor
cmp
in
push
push
rorb
xor
sbb
pop
sbb
out
jecxz
aas
movsl
out
pop
fsub
sbb
mov
mov
jbe
nop
inc
add
sbb
cmc
dec
push
or
repnz
mov
xlat
jbe
xchg
in
mov
and
dec
popf
clc
mov
stc
in
je
sub
mov
test
jae
add
in
call
icebp
std
ds
and
or
nop
clc
sarb
inc
mov
add
ret
ret
jg
mov
cwtl
pushf
cwtl
lret
popa
outsl
jbe
fcmovnbe
sub
or
xchg
into
das
mov
loope
fcmovbe
stc
adc
fbstp
jne
mov
lahf
sbb
xchg
pop
rclb
mov
mov
cltd
cmpsl
mov
mov
inc
movsl
mov
add
cltd
test
shrl
rcrb
fwait
add
mov
mov
cmp
inc
lock
sub
ja
insb
xor
adc
mov
scas
pop
fstl
rorb
test
mov
dec
fisubl
xchg
or
loopne
js
pop
cmp
jbe
xchg
lods
out
sahf
adc
mov
push
xor
mov
aaa
aaa
outsb
movsb
stos
jae
cmpsb
mov
mov
add
pop
push
repnz
xchg
pop
adc
pop
cmp
xlat
or
push
ds
les
lods
outsb
lds
and
les
xlat
sarb
mov
mov
scas
push
ret
int
mov
push
pop
cmp
sbb
push
in
adc
dec
shll
lret
or
fs
cmp
lahf
fdivrl
adc
out
mov
sbb
inc
das
iret
shll
leave
popa
xlat
cmp
sub
bound
mov
mov
stc
mov
xor
mov
or
or
xchg
or
cmp
movsl
or
inc
out
clc
sbb
rcr
xchg
out
icebp
loop
aam
mov
std
icebp
je
dec
test
xchg
lcall
pop
mov
push
fwait
pop
popa
test
pop
imul
jg
ret
cmp
add
ljmp
notl
and
and
mov
pop
and
xor
adc
dec
les
jg
pop
out
aam
push
xchg
cmp
push
test
inc
adc
xor
add
pop
inc
pop
dec
push
orb
hlt
dec
mov
cs
push
inc
fildl
push
int3
in
scas
mov
mov
leave
lods
and
rcl
in
or
shl
das
loop
cs
aaa
cmp
push
cmp
cmp
arpl
mov
fwait
popa
and
push
iret
mov
inc
sub
cmp
or
out
cmp
mov
fdivl
out
push
vdivss
cli
pop
je
adc
or
push
or
scas
jb
and
sub
sbb
fisubl
cwtl
xchg
insl
mov
addr16
das
mov
mov
into
pop
dec
out
mov
imul
sbb
repnz
cmp
ljmp
lcall
sub
and
mov
sbb
or
aad
and
jbe
push
je
mov
xor
hlt
or
loopw
fildll
mov
jge
inc
cmp
mov
xor
jne
add
icebp
sub
sbb
leave
inc
es
lock
fwait
shlb
outsl
sar
lods
xor
imul
in
cmc
dec
call
in
mov
pop
xchg
sahf
sbb
mov
aam
shrl
pop
call
das
push
adc
into
pop
xor
lcall
in
movb
stc
and
jge
xchg
mov
insl
dec
lea
sub
or
mov
imul
leave
jno
jg
xchg
shrl
in
xor
ret
or
call
ljmp
inc
popa
xchg
cli
pop
dec
and
nop
push
push
cmp
filds
mov
inc
xor
fs
add
shll
nop
xor
cmp
mov
sub
hlt
fisttpl
gs
and
sahf
pop
mov
out
mov
add
push
or
out
cmp
loopne
adc
push
push
mov
sbb
dec
repnz
or
mov
lea
dec
data16
shl
loopne
pop
loop
fisttpl
lret
cwtl
aas
insl
xor
and
enter
sbb
les
bound
in
or
jmp
loopne
mov
jo
inc
lahf
push
fcoml
xchg
mov
jle
push
sbb
ror
hlt
sbb
pop
mov
xchg
lret
mov
aad
push
adc
inc
cmp
mov
stos
fdivrp
aaa
jo
sar
sub
inc
jnp
ret
sbb
and
mov
cwtl
daa
jo
add
or
jge
pop
setle
sbb
adc
push
mov
dec
sub
bound
jmp
mov
out
loopne
pop
lret
es
jle
inc
ss
popf
pop
or
jne
add
xchg
rorb
sbb
arpl
xchg
std
cmpsl
cmp
push
add
pop
push
cmp
push
or
loope
dec
loopne
dec
fcoms
sbbb
pop
pushf
mov
fistpl
dec
push
push
ja
outsl
or
insl
jg
mov
xor
push
mov
icebp
push
cld
enter
clc
mov
test
sub
and
bnd
iret
adc
pop
push
xchg
addl
out
aas
int3
add
jae
jp
mov
cmp
imul
addr16
fsubrs
push
dec
js
and
popa
incl
stos
jne
cli
mov
jge
shlb
ljmp
xor
pop
push
test
mov
dec
mov
cmp
and
push
leave
out
cmpsb
push
xchg
pop
mov
sahf
cmpsl
sub
cmp
or
sub
insl
pop
push
lcall
pop
mov
jmp
mov
jno
fisttpl
mov
cld
push
cmp
jns
pop
adc
inc
gs
push
fistpll
fidivrs
jbe
push
mov
rorb
dec
cmp
loopne
pop
pusha
fwait
outsl
std
inc
cmpsl
stc
addr16
sbb
jle
mov
cmp
push
popa
rclb
xor
fcom
sbb
mov
inc
mov
in
jge
mov
orl
out
testb
aam
mov
outsl
xchg
sbb
push
enter
mov
jecxz
mov
sti
rcrl
stos
xchg
add
movl
push
int
inc
mov
xchg
ja
xchg
push
outsb
adc
jmp
negl
push
xor
stos
sbb
clc
test
push
mov
fwait
hlt
lret
js
aaa
sbb
stos
mov
push
jnp
xlat
ja
test
xor
addr16
fcoms
icebp
je
lahf
xchg
fnstcw
mov
adc
repnz
movl
mov
adc
inc
ret
repnz
lods
adc
mov
sub
or
int
ss
add
repz
xchg
test
fcomps
push
repz
rcrb
fiadds
push
fcompl
sar
and
push
mov
cmp
call
add
loop
sub
mov
inc
stc
mov
lahf
sbb
jge
gs
push
addr16
jg
mov
and
lret
mov
inc
xor
jo
test
mov
lds
cmp
add
push
orb
pop
push
inc
je
call
or
pop
adc
pop
fmull
fbld
inc
push
popf
out
dec
push
in
mov
decb
dec
ss
mov
mov
data16
push
jbe
dec
imul
mov
jns
sub
pop
xlat
xchg
inc
and
mov
movsb
jg
cmp
enter
add
or
jb
movsl
shl
lret
insl
out
and
mov
add
or
add
das
scas
sbb
lods
leave
pop
out
push
inc
andl
repz
mov
mov
sub
cwtl
or
adc
pop
mov
scas
and
xchg
lods
pop
pushf
jns
mov
fucom
lret
std
call
aaa
jno
cltd
sbb
cltd
cli
cmc
xor
inc
add
sub
add
orl
pushf
add
mov
js
xor
sub
movsl
mov
ret
cltd
ret
ljmp
xchg
stos
repz
jns
das
roll
test
and
movsb
rep
adcl
sbb
lahf
xchg
pusha
fistl
aad
scas
lock
jp
ret
jp
ret
out
mov
pushf
popf
xchg
pop
sbb
aad
lds
in
fmull
mov
xor
orl
mov
xchg
pop
mov
or
mov
xchg
je
or
shl
jmp
loop
and
lods
sti
sbb
imul
stc
pop
das
sub
clc
ljmp
call
adc
dec
cmp
pusha
cltd
and
cwtl
xor
jmp
or
push
cmc
mov
test
dec
mul
dec
lret
mov
into
dec
mov
fisubrl
mov
repnz
mov
cmp
mov
mov
lock
dec
mov
xor
test
arpl
xor
sub
sub
sbb
out
in
movsb
mov
sub
mov
lret
stc
test
out
cmp
adc
lahf
insb
inc
pop
mov
das
bound
mov
les
xchg
and
pop
cltd
cs
mov
mov
das
pop
nop
repz
shl
cmp
pop
out
stos
icebp
in
in
js
and
jb
mov
push
dec
call
addr16
in
push
movsb
adc
dec
in
add
hlt
aaa
sti
rcll
inc
sti
lret
je
inc
lods
push
pop
int
cmpsl
cmpsl
sarl
adc
pop
fsubr
dec
add
push
dec
gs
jecxz
es
mov
mov
imulb
dec
xchg
inc
adc
stos
xchg
mov
add
enter
sbb
pop
jge
mov
or
mov
gs
xchg
pop
sbb
cmp
mov
adc
fistl
jmp
ret
pop
and
fidivrl
xor
mov
fs
enter
ds
lods
mov
aaa
sub
fstpt
in
in
and
mov
and
xchg
sub
in
sbb
mov
lea
fimull
mov
push
xchg
repnz
or
dec
out
inc
push
pushf
mov
aaa
nop
and
cmp
mov
out
sbb
adc
or
enter
fwait
das
lret
adc
cld
movsw
cltd
add
int3
inc
push
imul
xchg
ja
incl
data16
or
or
mov
or
pop
mov
jle
cmpsb
lock
mov
mov
dec
cmp
imul
mov
jp
daa
fs
int3
cmp
sbb
mov
sahf
dec
negl
in
icebp
inc
aam
insl
mov
fldcw
loop
je
inc
jb
std
dec
mov
inc
std
or
enter
xor
mov
sbb
imul
lods
push
lods
jg
fcompl
lods
in
ret
xlat
pop
out
imul
cmp
inc
pop
fadds
insl
mov
pop
mov
rorl
inc
sbb
mov
js
push
in
mov
scas
hlt
jae
push
sbb
mov
popa
in
shl
xchg
cli
mov
lret
out
jmp
lods
mov
inc
test
jmp
in
dec
outsb
jmp
das
pop
push
or
mov
pop
movsl
rclb
movsb
in
mov
mov
xchg
lcall
stos
dec
loopne
dec
shl
jno
lcall
dec
mov
jno
cmpsb
out
push
icebp
lds
movntps
outsl
sub
xor
pop
icebp
cmp
and
cld
add
mov
mov
pop
push
push
stos
cmp
lods
sub
mov
ja
mov
mov
inc
pop
nop
lret
inc
and
test
sbb
inc
fisttpll
les
fstps
lods
int
movl
out
outsb
stos
or
lods
xchg
sbb
dec
popa
mov
push
fstpl
add
xchg
mov
mov
add
loop
jne
jno
push
jo
in
mov
xor
sbb
bound
into
xchg
sahf
adc
dec
lock
shrl
xlat
xchg
mov
mov
sbb
mov
cmp
stos
in
dec
js
scas
jmp
cmp
or
sbb
pop
imul
rol
arpl
cmp
addr16
adc
sbb
xchg
pop
push
ror
sahf
mov
popa
fadds
fbstp
imul
cltd
add
pop
or
and
jne
sbb
out
pop
cs
pop
addr16
in
and
push
jge
lret
mov
fs
sbb
push
push
add
xchg
imul
andl
fldl
test
test
jle
leave
lds
cmc
movsl
mov
add
mov
jb
inc
jp
dec
lcall
sub
ljmp
jno
movsb
jecxz
das
xchg
cmp
and
xor
sbb
std
push
and
inc
jno
dec
add
mov
fldt
lahf
push
leave
mov
xor
mov
push
incl
mov
je
and
cmp
andl
sbb
out
mov
bound
sbb
and
fmull
jae
dec
outsl
xchg
cmpsl
outsl
jmp
xchg
add
cmp
add
in
test
ficoms
xor
dec
nop
and
push
inc
repz
cmp
pop
lcall
fadds
inc
shll
and
xchg
cmp
roll
out
cmpsl
into
in
jnp
je
shr
shl
cs
aam
clc
mov
loop
xlat
roll
movsb
lock
out
xchg
add
add
and
sub
mov
adc
mov
movsb
jnp
inc
test
push
mov
movsb
icebp
mov
arpl
std
mov
push
lahf
jp
test
dec
dec
xlat
cmp
xchg
popa
clc
push
jns
imul
movsl
std
mov
jg
pusha
inc
cmp
mov
pop
sahf
in
fbld
jecxz
mov
bound
loope
jp
dec
ror
adc
loop
cmpsl
pop
cmp
test
nop
hlt
mov
fs
pop
dec
push
gs
jge
faddl
cmp
dec
ljmp
test
loope
out
and
cmovge
xor
sub
xchg
cmp
pop
inc
adc
ret
mov
jne
shr
pop
fs
mov
jne
xchg
dec
hlt
ja
pusha
dec
dec
pop
and
daa
rol
xor
out
pop
xchg
and
mov
mov
cmpsb
inc
xchg
int
lret
lods
outsl
pop
sbb
mov
dec
jae
das
xchg
shlb
call
scas
movsb
pop
mov
mov
mov
cmp
mov
addr16
xor
and
xor
hlt
ficoms
movb
fistpl
jne
mov
out
xor
push
in
push
nop
sbb
arpl
test
inc
jmp
in
mov
dec
and
inc
les
outsl
mov
lret
iret
or
fiaddl
fisubrs
cli
ficoms
in
push
rcr
push
sti
jns
sarb
imull
dec
repz
enter
xchg
stos
imul
fadds
mov
inc
sbb
call
out
xor
bswap
xor
mov
xor
out
lretw
dec
jmp
push
adc
or
stc
pushl
mov
jbe
std
clc
faddl
sbb
out
fsubrl
ret
push
mov
mov
xchg
lds
or
and
std
adc
jg
popf
jle
add
loopne
sbb
lret
mov
aaa
rolb
leave
xor
ds
adc
adc
scas
sbb
mov
mov
push
add
cmpsb
mov
fistl
fnsave
fcmovu
mov
jmp
popf
jno
sti
mov
sub
dec
dec
test
daa
xchg
xchg
data16
sub
pop
push
pop
stc
movsl
loopne
scas
inc
add
pushl
cs
sbb
jns
mov
cwtl
mov
incl
push
in
rclb
hlt
mov
dec
xor
mov
in
pop
imul
sub
pop
push
jp
push
test
int3
daa
add
test
mov
dec
fists
ret
cs
stos
xchg
int
adc
push
fldcw
out
sub
dec
adc
and
sub
push
pop
dec
push
mov
add
loop
inc
cmp
repz
fiaddl
stos
sbb
cmc
jns
jno
es
mov
mov
daa
lds
addr16
sbb
out
pop
pop
and
dec
mov
scas
jp
flds
jl
lock
clc
stc
mov
stc
rcll
leave
repnz
iret
sub
imul
aaa
sti
lahf
fists
xor
inc
dec
dec
xchg
rcr
mov
dec
pop
jl
insb
xor
loope
dec
adc
stc
bound
xchg
outsb
jns
in
clc
xchg
mov
test
icebp
negl
popf
in
int
cmp
cmpsb
jno
push
sbb
fsts
push
test
or
shrl
push
mov
cmp
bswap
mov
lods
mov
jl
cltd
mov
mov
cld
lret
bound
jo
iret
jbe
dec
fdivrs
sarb
pop
inc
mov
imul
adc
movsb
lcall
bound
das
pop
in
cmpsl
sub
xchg
int3
sbb
mov
mov
bound
fiaddl
shrl
xchg
dec
lcall
cs
jns
sahf
stos
test
pushf
jge,pt
arpl
pushf
inc
xchg
mull
push
jge
xchg
inc
jle
cli
rclb
and
jle
jno
pop
xchg
pusha
call
dec
int
btc
std
std
in
cmp
mov
jle
xchg
xor
aas
jp
fcomps
or
push
loope
rol
test
push
mov
mov
xor
or
leave
adc
fwait
dec
fidivs
icebp
bound
add
aam
rorb
add
shll
in
test
out
insl
std
xor
stc
push
call
jmp
repz
pop
inc
mov
repnz
lea
imull
pop
pushl
or
inc
mov
and
ljmp
es
mov
in
pop
and
nop
dec
cmp
mov
rcl
scas
pop
aam
sub
pop
sub
pushf
stos
call
cmp
xchg
and
add
mov
fists
sbb
xor
vunpckhps
pushf
hlt
cs
cwtl
cld
jle
pusha
cltd
rcll
es
jb
sti
popl
int
adc
pop
dec
inc
and
adc
gs
inc
lock
enter
hlt
rolb
adc
out
icebp
mov
sbb
mov
fiadds
sub
js
aaa
mov
inc
inc
movsb
outsl
ret
push
add
call
and
cli
add
pop
and
pop
test
out
mov
lret
cmpsb
or
cmp
xor
scas
push
test
add
mov
push
into
sub
cmp
pop
push
fbld
cli
test
cs
mov
ja
lea
mov
mov
jg
pop
and
les
mov
jns
sub
sarb
outsl
or
mov
scas
cmpsl
insb
cmc
pop
rcll
push
test
fstl
pushf
dec
xchg
mulb
jns
int3
rdmsr
mov
add
stos
dec
mov
repz
jbe
repz
pop
adc
add
sub
inc
mov
dec
sub
push
loope
inc
or
fcomi
icebp
outsb
jmp
inc
adc
mov
rcrb
enter
hlt
jp
cmp
push
enter
fdivr
in
inc
fnstenv
or
rcr
cltd
adc
js
push
lods
pop
cmpsb
xchg
shrb
xor
sti
mov
or
lcall
xlat
aas
sub
pop
or
addr16
xchg
cmp
popa
imul
mov
test
inc
or
sarb
aad
lds
ss
notl
aam
push
fldcw
mov
pop
pusha
push
push
js
jl
stos
xchg
jbe
mov
dec
mov
rol
mov
sbb
xchg
inc
mov
in
stc
in
or
iret
push
insb
dec
push
lcall
add
push
mov
shl
fcoms
popa
rolb
push
hlt
pop
cmp
lea
push
push
das
sub
mov
push
cmp
jge
das
fsubrl
cmp
les
or
and
call
out
pop
loop
into
dec
inc
pop
int3
sbb
nop
xchg
mov
roll
cmpsl
rcll
ja
dec
test
sahf
pop
sub
mov
outsl
mov
popf
adc
out
nop
xchg
loop
mov
les
jge
cmpsl
mov
pop
lods
fsubrl
or
lods
and
cmp
and
ret
pop
lret
jae
dec
sarb
fisttpll
cmp
sbb
dec
xchg
pop
outsl
shrb
int
test
test
addb
dec
int
ds
js
push
repz
jno
in
inc
flds
repz
mov
sbb
out
pop
mov
movsl
sub
cs
jae
adc
add
nop
jp
stos
popf
xchg
and
es
movsb
stos
sub
outsb
mov
ljmp
lahf
sbb
cmc
jmp
rcl
inc
inc
roll
xchg
pop
daa
mov
lcall
sub
in
adc
stos
xor
xor
jae
xchg
inc
inc
sbbb
dec
adc
fs
fisubrs
push
mov
aam
mov
addr16
xchg
jl
push
add
shl
aam
jnp
inc
shll
icebp
ret
xchg
push
inc
push
aad
inc
pop
int
mov
inc
call
jmp
dec
insl
xchg
dec
rsm
aas
movsb
adc
or
cmp
xor
adc
shll
dec
fistps
mov
mov
sti
test
mov
in
inc
in
dec
dec
and
in
xlat
push
pop
xchg
xor
jno
je
jo
inc
std
dec
mov
cwtl
xchg
jp
xorl
daa
pop
mov
or
imul
xor
xor
add
add
imul
mov
cmp
mov
je
xor
add
mov
imul
add
mov
mov
pop
leave
ret
push
mov
sub
add
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
push
push
xor
andl
mov
inc
mov
cmpl
jne
push
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
add
mov
add
mov
push
subl
mov
and
pop
sbbl
push
push
addl
push
negl
push
call
subl
mov
mov
add
mov
test
movl
je
sbbl
push
subl
push
call
push
andl
push
adcl
push
adcl
push
push
sbbl
push
orl
call
addl
push
call
dec
jne
movl
mov
movl
mov
movl
cmp
movl
jne
movl
subl
pushl
pushl
pushl
sbbl
call
xor
mov
mov
mov
mov
mov
xor
xor
sub
imul
movl
lea
adc
mov
lea
mov
inc
mov
sbbl
mov
andl
mov
mov
mov
movl
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
xor
adc
mov
sbbl
add
mov
mov
mov
cmp
movl
jne
mov
mov
movl
cmpl
je
cmpl
jne
push
push
call
mov
dec
mov
jmp
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jb
xor
mov
orl
xor
add
add
mov
movl
mov
movl
cmpl
je
cmpl
jne
push
call
cmpl
jne
xor
or
dec
mov
xor
or
dec
mov
jmp
andl
xor
or
inc
mov
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
xor
add
inc
mov
movl
cmpl
je
cmpl
jne
push
push
pushl
call
mov
dec
mov
jmp
andl
mov
inc
mov
cmpl
jne
pushl
call
cmpl
jb
add
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
pushl
pushl
push
call
cmpl
jne
mov
inc
mov
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
call
jmp
movl
cmpl
je
cmpl
jne
push
pushl
pushl
push
push
pushl
call
mov
dec
mov
jmp
or
mov
and
mov
add
mov
add
mov
mov
mov
mov
neg
mov
movl
and
mov
movzbl
sub
mov
mov
adcl
xor
xor
movl
add
mov
andl
xor
subl
xor
subl
add
movl
lea
mov
mov
mov
cmp
movl
ja
mov
mov
sbb
xor
inc
lea
and
mov
mov
xor
xor
movl
cmpl
je
cmpl
jne
push
pushl
call
mov
dec
mov
jmp
sub
lea
and
mov
mov
mov
sub
sub
mov
or
mov
movl
cmpl
je
cmpl
jne
push
push
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
movl
mov
movl
mov
mov
xor
add
cmp
je
mov
mov
xor
xor
add
add
adc
xor
xor
mov
mov
xor
mov
add
adc
xor
xor
mov
mov
cmp
jne
mov
cmp
je
mov
mov
xor
add
imul
xor
add
mov
mov
mov
mov
mov
mov
xor
lea
mov
xor
add
adc
xor
mov
xor
mov
mov
xor
mov
add
adc
xor
xor
mov
mov
cmp
jne
mov
cmp
jne
mov
mov
xor
lea
mov
mov
xor
xor
add
mov
xor
lea
mov
cmp
jbe
mov
mov
mov
mov
mov
mov
mov
sub
xor
mov
mov
cmp
jne
lea
mov
lea
mov
mov
test
je
mov
mov
lea
jmp
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
pushl
mov
pushl
add
mov
mov
pushl
call
mov
mov
mov
jmp
mov
mov
xor
add
cmp
jne
mov
mov
mov
xor
add
cmp
jne
mov
push
xor
add
push
push
pushl
pushl
call
pushl
pushl
call
mov
xor
add
mov
mov
xor
add
mov
lea
mov
lea
mov
mov
test
je
movl
movl
movl
movl
call
mov
mov
lea
push
pushl
call
mov
add
mov
lea
movl
mov
movl
mov
xor
movl
mov
add
cmp
je
mov
mov
xor
xor
add
add
adc
xor
xor
mov
mov
xor
mov
add
adc
xor
xor
mov
cmp
jne
cmp
je
mov
mov
xor
xor
add
add
imul
mov
mov
mov
mov
mov
mov
mov
xor
lea
xor
add
adc
xor
mov
xor
xor
mov
add
adc
xor
xor
mov
cmp
jne
cmp
jne
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
sbbl
xor
or
mov
add
sub
movzwl
mov
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jb
movb
lea
xorl
mov
andl
xor
or
inc
mov
cmpl
jne
push
pushl
call
cmpl
jne
xor
add
inc
mov
cmpl
jb
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
call
jmp
sbb
mov
orl
mov
andl
xor
sbbl
sub
sbbl
mov
dec
movl
neg
push
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
movl
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
not
movl
mov
mov
adc
mov
push
mov
mov
sub
mov
add
xor
mov
addl
push
add
movl
jmp
mov
movl
mov
movl
inc
cmp
movl
jb
and
mov
xor
add
jmp
mov
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jne
xor
xor
inc
mov
cmpl
jb
mov
andl
xor
mov
add
movzwl
sbbl
mov
mov
subl
movzwl
xor
adcl
add
mov
mov
mov
inc
inc
mov
movl
cmp
movl
jne
add
mov
xor
mov
incl
xor
add
sbbl
mov
mov
adc
mov
xorl
xor
adcl
add
movl
mov
movl
movl
mov
movl
movl
mov
mov
jmp
andl
mov
inc
mov
cmpl
jne
pushl
pushl
pushl
push
pushl
call
cmpl
jb
add
mov
mov
sbbl
xor
xor
sub
sub
xor
movzwl
or
mov
mov
movl
mov
orl
lea
and
mov
adc
mov
negl
mov
xorl
lea
mov
mov
mov
andl
lea
adcl
mov
adc
mov
andl
xor
or
inc
mov
cmpl
jne
push
call
cmpl
jb
mov
decl
lea
mov
sbb
mov
sbbl
mov
xorl
lea
movzbl
add
mov
mov
add
mov
sbb
mov
andl
lea
addl
mov
subl
mov
subl
xor
andl
add
movl
jne
movl
jmp
mov
sub
mov
adcl
jmp
test
mov
xchg
gs
adc
ficoms
add
popl
pusha
adc
mov
jns
loop
ret
add
mov
clc
outsb
xor
push
fcmovnbe
and
mov
mov
arpl
inc
repz
push
into
movsb
add
or
cld
push
fildll
dec
imul
jp
xor
in
mov
dec
jno
clc
lods
lahf
cmpsl
lods
and
js
xchg
mov
sbb
clc
cmc
call
mov
ds
lret
and
xlat
insl
in
and
mov
jnp
dec
jmp
sbb
loop
pop
loop
jb
xchg
cld
mov
inc
xchg
xchg
and
mov
jl
test
xchg
mov
push
sub
sbb
push
call
cmp
xchg
or
mov
scas
add
add
sub
rcr
dec
scas
mov
sahf
xchg
pop
or
inc
cli
loop
cmpsl
enter
loop
jmp
out
xchg
jl
mov
das
mov
and
mov
jl
mov
mov
popa
test
inc
xchg
in
cli
divb
lret
outsb
cltd
mov
adc
out
pusha
inc
push
lret
test
sarb
iret
push
out
adc
pop
das
daa
inc
sbbl
mov
inc
push
daa
mov
inc
mov
pop
or
inc
aam
cld
stc
mov
xchg
cwtl
fsub
sub
js
les
push
addr16
jge
out
cmpsb
inc
out
xchg
daa
push
pusha
sub
jl
test
dec
xchg
out
pop
mov
rorb
mov
push
mov
lds
jmp
rcrb
aas
xor
rol
xchg
sbb
or
sbb
sbb
dec
mov
cld
adc
xor
repnz
dec
outsl
mov
mov
lds
outsl
xchg
xchg
pop
mov
xorb
int3
jne
jbe
cli
jnp
push
test
mov
lea
mov
inc
repz
out
popa
in
flds
jns
fwait
dec
hlt
mov
hlt
aam
cmp
clc
int3
lcall
nop
sbb
insl
pop
pop
jae
cld
and
imul
jno
or
int3
sub
push
shll
sub
mov
or
mov
fcomps
bound
rcrb
repz
dec
enterw
xor
popf
popa
mov
mov
cmp
mov
aam
lret
cld
icebp
fldenv
mov
push
mov
adc
adc
loope
cs
add
and
pop
fwait
xor
sub
jo
imul
sbb
pushf
adc
sbb
test
out
jnp
or
leave
mov
lea
stos
scas
int
adc
mov
outsl
jae
fdivs
aaa
imul
add
add
jge
adc
pop
xor
in
int
xor
outsb
cld
or
inc
mov
stos
sbb
add
lock
mov
movsb
jae
cli
lds
pop
pop
mov
in
fnstsw
xor
addb
js
loopne
push
sahf
pushf
movsl
add
insl
pop
pop
jb
cmp
xchg
mov
sub
ret
fwait
out
movsl
jge
mov
cmp
into
mov
test
stos
in
hlt
js
out
push
mov
dec
pop
mov
dec
mov
lahf
push
push
jg
mov
push
sar
test
sub
dec
outsb
sar
loopne
lock
into
dec
and
sub
pop
xor
push
adc
ja
adc
and
mov
sbb
mov
das
xchg
jne
les
jbe
out
cmpsl
jmp
std
int
rcrl
push
cmc
xor
jle
xlat
inc
arpl
mov
jnp
mov
cmpsl
lcall
movntps
push
into
xchg
and
lret
jle
jle
ss
and
pop
pop
dec
cmp
cmp
or
testb
es
mov
mov
aas
adc
jne
outsl
sub
lcall
test
mov
pusha
fwait
mov
mov
ret
shlb
jle
jnp
xlat
sarl
shll
push
mov
ud2
cwtl
push
sarb
in
dec
inc
mov
leave
lods
repnz
mov
push
movsl
sub
orb
sbb
shll
ja
push
stc
mov
push
push
outsb
push
pop
fcmovnu
xorl
cltd
movsl
call
fsubp
cmp
xorb
stc
or
mov
js
inc
jne
push
fdivl
add
leave
loopne
jno
ret
add
or
add
sub
jmp
outsl
dec
int
xchg
loopne
scas
int
scas
loope
sub
xor
xchg
and
jae
outsl
in
push
mov
insl
mov
mov
lret
jg
jp
je
fistpll
icebp
dec
jb
fistl
rolb
mov
loop
test
sarb
aas
pop
ja
les
gs
dec
or
mov
inc
scas
orl
fimuls
adc
mov
cwtl
or
xor
ja
xchg
test
and
inc
add
bound
dec
fdivrl
mov
test
pop
xchg
cmpsb
mov
ret
sbb
scas
dec
cmp
aaa
mov
and
mov
insb
xor
cs
xchg
dec
push
aas
push
pop
inc
cmpsl
imul
push
movsl
movsb
jmp
js
push
mov
dec
pusha
inc
js
xor
cmp
sbb
rclb
pop
sbb
stos
fwait
cmpsl
sub
lods
cli
mov
pop
xchg
scas
roll
sbbb
roll
sar
mov
cwtl
test
xlat
shll
mov
lret
bound
and
in
mov
ret
dec
test
icebp
mov
adc
mov
iret
xchg
inc
push
add
xchg
cmpsb
arpl
sbb
jo
sbb
jno
outsl
mov
and
aaa
and
in
loope
adc
mov
xor
clc
lods
mov
mov
xchg
insl
insl
mov
mov
mov
xor
nop
mov
outsb
pushf
std
push
adc
out
bound
insb
aas
mov
xor
das
adc
js
rolb
xor
xor
jecxz
aam
inc
pop
mov
cmpsl
mov
cmpsl
and
lret
mov
cmp
jg
jle
cs
mov
jl
dec
adc
ret
std
sti
hlt
cmp
in
fisubrs
out
jle
call
mov
xchg
cwtl
cmpsl
ja
jle
cld
fxch
out
add
sbb
mov
sbb
mov
pushf
or
or
fisubrl
inc
mov
sbb
sbbb
xchg
dec
imul
mov
xchg
das
adc
call
lahf
movsb
test
clc
jge
mov
pop
add
jecxz
pop
sub
xchg
lock
xor
testl
jp
aaa
popa
xchg
outsl
jle
inc
cmpsl
mov
out
pop
jae
popf
aas
mov
jp
fisttps
pop
dec
mov
mov
ja
add
fstl
cwtl
shr
adc
push
add
fcomps
lea
clc
mov
orl
jecxz
and
lret
mov
push
int
ja
inc
fwait
mov
mov
xorb
and
in
mov
inc
fwait
jge
add
inc
xor
dec
push
lret
sbb
push
mov
cmp
scas
negl
loope
loopne
xor
cmc
fnstenv
imul
inc
rorl
sbb
stos
cwtl
adc
jno
push
xor
scas
xchg
jle
ds
sti
iret
sub
mov
cmp
or
dec
dec
popa
movsb
pop
fimuls
jle
mov
cmp
fs
ret
add
mov
gs
and
sbb
iret
mov
ss
pop
lcall
fbld
push
scas
pop
lea
or
add
repz
aas
pop
pop
add
sbb
test
mov
mov
fcmovnb
decl
sbb
pushf
movsl
mov
dec
lea
jecxz
test
pusha
in
das
pop
loop
mov
fldl2t
or
pushf
mov
stc
stc
rol
jns
aas
inc
sbb
pop
cld
adc
into
icebp
leave
xchg
shl
leave
or
stos
aam
adc
insb
xor
push
data16
or
mov
mov
stos
cmp
mov
call
dec
lock
adc
mov
push
xor
jo
cmp
pop
jecxz
adc
push
xor
out
fsts
cmpsl
fwait
mov
cmp
rcl
cmp
and
mov
out
mov
push
lret
jg
mov
data16
lahf
test
mov
mov
or
pushf
fbld
xchg
lea
inc
xchg
adc
xor
or
fstpl
adc
xchg
push
sub
xor
int3
or
mov
inc
outsb
jle
pop
sub
das
mov
xor
add
dec
testl
movsl
cmp
push
pop
aam
push
jle
movb
sbb
sti
jbe
aad
adcl
pop
addl
push
xchg
or
rorb
sbb
adc
popa
fs
gs
in
mov
dec
incl
mov
aas
insl
loopne
adc
jle
mov
loopne
sar
cmp
ja
nop
sub
sbb
mov
fwait
cmp
jl
je
sub
je
adc
rclb
push
cmpl
mov
adc
jnp
enter
or
aad
adc
sbb
out
test
dec
popa
hlt
popa
xchg
or
ret
or
cltd
mov
inc
sbb
fisubrl
cmp
ja
and
mov
cltd
sub
mov
fimuls
fmull
add
hlt
mov
mov
xchg
inc
fdiv
jne
pop
ja
xchg
mov
lds
adc
sbbl
aaa
iret
js
inc
lcall
andb
lahf
or
inc
aas
adc
sub
data16
inc
adc
sahf
mov
aas
into
adc
xlat
sbb
jp
lcall
shrl
jl
insl
insb
xchg
repnz
inc
pop
scas
outsl
in
sbb
sar
mov
fs
mov
in
cli
lds
xor
cmpsb
push
cld
pop
sub
in
lret
pop
cmp
outsl
inc
adc
leave
in
arpl
cli
fwait
iret
mov
jns
mov
jno
enter
fsts
enter
test
or
adc
or
jns
je
out
loop
cld
jo
shll
cmc
xchg
inc
or
dec
movsl
add
ja
inc
dec
inc
dec
or
mov
call
and
mov
or
mov
loop
push
jbe
lea
xchg
jmp
rclb
mov
lret
call
in
add
je
cs
push
in
popa
cmc
push
add
mov
sub
enter
jge
mov
adc
mov
movsl
inc
pop
gs
lret
cmp
jmp
shlb
mov
jnp
ret
mov
adc
jo
add
cmp
cmpsb
xchg
and
xor
mov
pop
aaa
mov
jbe
xor
iret
enter
mov
divl
leave
test
in
pop
movsl
js
push
lahf
out
cmp
ds
data16
fmull
xor
sbb
mov
add
xor
push
outsb
push
and
pop
jg
push
inc
inc
sbb
test
mov
pop
inc
xchg
out
sbb
adc
mov
ds
sub
aas
and
and
mov
test
jmp
mov
into
shll
sub
pop
gs
jmp
push
rorl
out
jbe
dec
mov
out
ret
jmp
mov
pop
in
mov
mov
dec
ljmp
insl
push
push
dec
inc
inc
fisubrs
test
mov
sub
push
in
jno
or
or
pop
mov
rcr
outsl
mov
adc
push
shl
jl
jno
sub
ds
sub
loope
addr16
lock
in
mov
and
adc
cmp
in
inc
push
push
lret
andb
mov
es
cmpsl
scas
test
adc
mov
mov
xor
mov
xchg
rcll
dec
xchg
out
rcrl
jecxz
sub
inc
xor
cmpsl
mov
out
inc
dec
aad
scas
and
sbb
inc
pop
cmp
jb
push
ret
sub
jns
sbb
xchg
jl
mov
push
out
loop
dec
sbbl
pop
push
xchg
xlat
pop
inc
dec
sub
jae
scas
pusha
repz
cld
cmp
mov
outsl
push
jge
mov
fdivrp
fldenv
inc
dec
push
sahf
sub
push
cmp
lock
in
rcll
push
or
jmp
push
cmp
adc
sahf
lds
pop
js
out
lods
xchg
mov
sbb
sub
sub
insb
sbb
adc
andb
mov
push
movsb
scas
fwait
mov
packssdw
cli
ljmp
in
out
enter
insl
mov
lods
and
add
movl
popa
out
ds
inc
jo
repz
fcomps
movsb
out
int3
inc
dec
sub
fs
lcall
pop
ret
imul
push
add
adc
insl
loop
fs
in
adc
fbstp
cmpsb
xchg
cs
xor
mov
jne
lcall
icebp
pop
fsubrp
fistpl
inc
xor
add
decb
pop
mov
cmp
les
jnp
jnp
in
adc
lret
push
push
xor
mov
mulb
or
mov
test
pusha
or
js
loop
mov
test
out
dec
incb
sub
and
inc
ret
jmp
push
inc
fsqrt
sbb
mov
out
orl
mov
addr16
push
pop
inc
imul
pop
loope
cmpsl
mov
shrb
xor
int3
cmc
sbb
sbbl
cmp
orl
fisubrs
pusha
popa
sahf
fwait
push
mov
jnp
jmp
mov
jmp
pop
int
int3
sbb
pop
std
push
adc
push
fmuls
sub
sub
das
mov
push
popa
add
mov
jne
pop
insl
cmpsb
imul
jo
test
xor
leave
pop
and
jbe
and
sti
cs
cwtl
and
out
adcb
inc
cld
mov
cli
mov
adc
mov
and
cmp
xchg
pop
pop
inc
push
into
repz
daa
rorl
test
imul
adcl
rorb
push
xchg
jge
mov
mov
ficomps
pushf
jmp
sbb
fnstsw
xchg
xor
clc
sub
pop
inc
jno
cmpsl
mov
jecxz
sub
xlat
pop
pushl
adc
jne
dec
stc
add
jo
ja
iret
int3
mov
aad
xor
aam
inc
xor
dec
call
movsb
or
ljmp
push
xchg
mov
addr16
mov
pushf
cmc
out
dec
pop
inc
das
stos
mov
jns
ja
mov
pop
mov
push
adcb
out
call
inc
lea
mov
inc
and
ds
push
nop
xor
stos
xor
push
rcl
cmp
rcrb
pop
jae
jmp
orb
jmp
jb,pt
pusha
xor
inc
adc
ss
pop
insb
je
jbe
in
pushf
and
call
sahf
xchg
cmp
lret
sbb
xchg
ljmp
pop
inc
mov
shll
lods
sub
repnz
sub
mov
jle
test
pop
mov
adc
leave
loope,pn
bound
sbb
push
and
mov
test
or
and
fld1
imull
pop
pop
jo
call
ret
mov
filds
jb
mov
and
mov
insl
imul
and
and
fsubrl
mov
and
nop
shrl
pop
cmp
push
pusha
jne
add
add
xchg
or
or
pop
sbb
or
cmc
jl
sub
dec
stc
cmp
es
cmp
lret
icebp
mul
xchg
jp
xor
adc
loopne
aam
lds
mov
jge
sbb
push
xlat
scas
cwtl
mov
stos
aas
aas
loope
rcrl
or
xorl
iret
dec
and
mov
cmp
pop
push
insl
lds
lods
lock
sbb
test
mov
in
je
loope
jmp
fldl
fldcw
loopne
fcmovnb
scas
jge
push
les
push
or
mov
inc
int3
faddl
cmp
pop
daa
pop
push
rcrb
push
adc
sbb
arpl
mov
inc
iret
insl
mov
mov
add
pop
or
dec
mov
imull
arpl
in
pop
add
jns
mov
mov
jbe
cmp
aaa
push
pushf
mov
lock
xor
in
adc
jge
imul
fcomip
jbe
cld
aaa
inc
push
push
mov
cltd
and
and
dec
pop
and
pop
into
xchg
sbb
das
lahf
jmp
push
daa
adc
shll
push
push
add
out
mov
inc
xor
dec
sub
out
inc
fdivrl
dec
cmpsl
xchg
cs
cs
popa
js
lds
stc
cmp
mov
or
stos
push
imul
incl
icebp
call
lcall
add
pop
je
aad
cli
out
or
daa
mov
cmp
cmpsb
adc
test
outsl
lret
mov
out
outsb
test
pop
push
lret
and
xchg
dec
jl
mov
aad
fsts
mov
pop
fsts
std
pop
inc
in
push
shlb
gs
popa
sbb
js
pushf
cmp
push
movsb
outsb
mov
or
mov
ficompl
ret
and
enter
push
stos
int
dec
push
sub
xor
push
ds
out
sbb
or
or
into
repz
dec
adc
movl
pop
push
adc
add
xchg
data16
sub
mov
jne
in
mov
sarl
lahf
push
jp
outsb
add
imul
xchg
sub
push
and
or
xlat
or
xor
call
mov
mov
dec
pusha
int
repz
data16
and
fsubrs
xchg
sub
cmpsl
lret
testb
mov
add
repnz
xchg
adc
xor
push
mov
jg
sub
roll
cli
mov
loopne
mov
arpl
ficoml
fcmovu
lcall
cli
dec
sub
test
adc
fcoms
jnp
sbb
test
in
jle
iret
or
sbb
push
xor
dec
repnz
cmpsb
lods
jo
enter
sti
adc
ja
xchg
adc
push
iret
adc
aaa
insb
or
addr16
or
adc
push
push
sbb
js
pop
xlat
mov
push
and
shr
lahf
test
adc
cmp
xor
mov
adc
mov
jo
repnz
inc
outsl
cmp
popa
leave
sub
fists
add
mov
sub
jg
pop
jno
sbb
jo
or
inc
or
mov
adc
addr16
fildll
sarl
outsb
rorb
xor
xchg
movsb
popa
push
out
mov
xor
or
lea
inc
xor
fs
xchg
sub
cmp
pop
pop
into
mov
fisubrs
int
xor
pop
add
enter
lcall
loopne
pop
jnp
xlat
xor
mov
jle
dec
cmp
repnz
pop
dec
sbb
jp
mov
adc
jb
and
mov
jbe
mov
into
push
imul
cmp
sarb
dec
es
mov
cmpsb
es
sbb
pop
sub
inc
and
shr
push
lahf
lds
xor
jle
icebp
cltd
sti
xchg
out
push
xor
sbb
xor
cmp
insb
xchg
nop
mov
jg
outsb
bound
inc
jno
sub
dec
repnz
fwait
pop
rclb
and
jl
lcall
movsl
out
es
je
lcall
sbbb
out
adc
lods
lret
xchg
les
out
mov
xchg
inc
push
incl
loope
or
stos
jg
ret
cli
jecxz
ljmp
cmp
js
in
mov
stc
ss
push
outsb
sub
push
pop
push
mov
cmp
pushf
xlat
outsb
movsl
call
add
nop
sub
sub
pop
mov
dec
or
rclb
orl
add
pop
and
rclb
addr16
mov
std
cltd
adc
rclb
xor
mov
rcr
lahf
enter
pop
cwtl
lods
into
inc
jns
jb
inc
cmp
pop
mov
add
jnp
daa
loope
xor
ficompl
mov
mov
stc
outsl
psubw
and
xchg
push
xor
fists
mov
cmp
pop
cmp
repz
rolb
scas
adc
dec
les
pop
mov
jecxz
and
add
scas
or
push
mov
dec
outsb
out
sbb
call
cltd
adc
and
sub
mulb
addr16
enter
pop
mov
mov
pop
xchg
repnz
pop
push
inc
out
int
mov
push
mov
stc
xor
pushw
lock
xor
out
and
fadd
push
lahf
bound
xchg
or
test
cli
arpl
jp
out
xor
movsb
je
cmc
mov
int
xchg
stos
nop
fists
xchg
add
jb
repnz
fcmovnu
jb
sbb
add
call
icebp
stc
and
push
cli
dec
xor
pop
fwait
adc
stc
add
xor
push
xor
mov
dec
int3
sbb
pop
addr16
dec
push
adc
jle
fnstcw
dec
or
loopne
cmpsb
lret
movsb
inc
lea
pop
aaa
hlt
jg
and
add
emms
popf
jno
addb
xchg
or
jecxz
into
pop
stos
cmp
mov
movsb
imul
mov
clc
mov
xchg
mov
stos
xor
lods
push
aam
mov
inc
mov
scas
jbe
outsb
inc
aad
xchg
pop
insl
pushf
inc
loope
stos
mov
adc
fidivrl
out
bound
cmpsl
jne
inc
rclb
mov
mov
cmp
notb
xor
jns
ret
js
popf
arpl
mov
cwtl
test
movsl
sbb
add
add
jns
sti
aaa
cld
test
mov
adc
fucomp
xchg
mov
xchg
cmp
push
jbe
adc
in
shll
out
ret
enter
into
int3
inc
and
inc
mov
insb
adc
imul
pop
repz
das
loopne
fnstenv
dec
popf
sub
jo
and
dec
repz
pusha
mov
in
mov
pop
repz
cmc
shrl
sbbl
adcb
xchg
mov
or
dec
andl
cmp
lahf
sub
shrl
mov
popf
jne
sub
xchg
pushf
insl
or
les
in
dec
popf
push
mov
ljmp
sub
int
mov
cmp
xor
or
add
in
mov
nop
je
out
mov
into
push
mov
ficoms
lea
cmpsl
xchg
popf
lock
mov
jae
in
xchg
cmp
call
rcrl
lods
out
pop
gs
jno
xlat
xchg
ljmp
scas
sub
xchg
xchg
ljmp
jmp
out
push
jae
in
ds
arpl
cli
xor
dec
aaa
xchg
test
dec
sub
pop
xchg
addr16
mov
jecxz
fidivs
cli
daa
inc
adc
in
jmp
sub
push
cmp
sbb
push
dec
mov
push
xchg
mov
pop
push
fs
nop
mov
call
xchg
loop
push
push
loope
fcomi
hlt
jne
shlb
nop
aam
std
cmp
popa
mov
jb
stos
lods
es
push
out
sbb
sbb
lcall
in
mov
and
inc
inc
adc
push
lock
jo
xchg
inc
sub
lods
cmp
js
sahf
cmpsl
push
and
mov
adc
sbb
inc
je
push
rcr
cs
inc
mov
call
inc
push
inc
or
mov
mov
xchg
fwait
iret
xorl
pop
mov
mov
push
sti
jmp
xchg
and
outsl
jp
mov
inc
enter
mov
shlb
xor
cmpl
jl
stos
and
stc
mov
jl
sbb
mov
rcrl
jg
jle
lods
aad
jecxz
pushf
loop
xor
fistl
pop
jle
lcall
dec
dec
jecxz
push
js
loope
xchg
pop
mov
dec
scas
or
test
iret
xor
xor
loope
scas
dec
fucomi
or
pop
xchg
mov
test
pop
cmp
sub
jge
ret
addl
mov
pusha
aam
and
jmp
aad
jmp
sti
es
popa
lods
ss
mov
pop
mov
stos
hlt
pop
and
pop
scas
stc
rorl
sti
and
pop
cmp
repz
daa
inc
mov
inc
push
add
adc
fcmovb
sub
mov
fsubp
stos
aas
push
cmc
adc
adc
pop
mov
arpl
push
jae
imul
inc
xor
popf
scas
mov
insl
adc
cmp
pop
push
das
enter
jno
mov
outsl
cmp
sbb
std
jge
icebp
xchg
jnp
fisttps
adc
rcrb
jnp
mov
mov
leave
aas
aam
sbb
inc
jmp
adc
div
mov
xchg
sub
test
push
and
push
aas
movl
sub
xchg
xor
and
pop
aaa
stos
pop
jno
orl
ds
repnz
sbb
imul
or
and
shll
jb
mov
scas
sahf
adc
or
loop
push
test
shlb
adc
xchg
loope
into
dec
outsb
ret
xchg
lret
leave
in
cwtl
js
and
pop
pop
pushl
mov
scas
data16
jl
sbb
push
mov
sbb
sbb
inc
inc
cmp
adc
lret
je
int
cmc
ja
xchg
jge
pop
xor
idiv
scas
movl
ficomps
std
sub
push
aas
cmp
xlat
mov
xor
mov
popf
mov
popf
lcall
lds
mov
xlat
addr16
adc
mov
imul
mov
xchg
inc
lds
push
mov
imulb
sahf
or
xor
out
loopne
pusha
mov
jnp,pt
inc
adc
sub
out
pminub
xchg
push
pop
fstpl
lcall
popa
push
arpl
dec
pop
add
fwait
and
mov
fwait
adc
das
popf
icebp
fldl
jg
fstpt
jne
enter
xor
xor
cmp
sub
rcrl
push
inc
pop
pop
cltd
loope
cmp
inc
leave
jne
cs
adc
pop
xor
sbb
pop
das
cwtl
int3
push
xchg
ds
adc
ret
test
or
xor
dec
add
and
clc
adc
imul
jne
mov
adc
push
inc
sarb
push
cmpsl
daa
push
cmp
cmp
ljmp
jle
push
addr16
cmp
sub
sbbb
into
add
shll
jbe
scas
sbb
and
shr
push
mov
jp
jge
xor
out
jge
test
dec
dec
xor
rcll
xor
data16
enter
popf
push
pop
or
jne
sbb
add
je
xchg
xor
js
mov
sbb
inc
push
inc
enter
jno
enter
xchg
repz
das
popa
and
inc
xor
pop
mov
pop
repnz
inc
or
es
xchg
add
movsb
repz
aam
scas
jecxz
mov
into
stos
push
jnp
test
shll
jg
ss
lods
xchg
jecxz
cld
adc
and
mov
mov
adc
xchg
scas
pop
scas
pop
mov
mov
xor
and
xor
push
adc
lods
gs
or
inc
cmpsb
jge
fists
sahf
sbb
cwtl
stos
sbb
mov
mov
push
in
js
push
jle
pop
outsb
movsb
adc
push
rcr
rclb
in
xorl
subl
mov
jae
clc
popf
cmp
test
stos
out
call
lret
aad
cmp
inc
jb
mov
hlt
or
inc
adc
push
dec
repz
aas
and
and
add
jne
ja
mov
lret
jge
cmp
fsts
push
aam
sub
pop
scas
push
jmp
cmp
shll
sarb
cmpsl
call
imul
mov
jl
or
cltd
add
or
ss
mov
push
and
insb
cmp
xchg
adc
push
ds
inc
ss
enter
in
aam
loopne
in
mov
leave
sub
fs
push
aas
sub
fadds
pop
fs
out
push
or
popf
inc
ret
repz
ljmp
je
stc
loope
pop
jne
lock
sahf
pop
inc
xchg
xor
xor
flds
dec
leave
mov
sub
inc
add
icebp
jo
aas
xor
jo
jne
sub
fwait
nop
sbb
mov
sub
pop
fbstp
pop
cmp
in
cmp
pop
dec
rcr
mov
je
xchg
rcrb
and
sahf
cli
iret
lahf
adc
push
iret
in
aas
pop
cmpsb
mov
fcomip
neg
pop
xchg
xchg
lcall
mov
or
xchg
cmc
sub
dec
test
mov
lods
add
and
cmp
pop
loop
sbb
xchg
sbb
push
outsl
xchg
adc
lret
dec
pop
dec
out
push
mov
rol
shlb
cmpb
and
adc
adc
push
mov
add
jo
cmp
dec
mull
sub
popf
sbb
imul
jmp
call
or
data16
mov
mov
lods
popa
xor
dec
sbb
pop
cmp
and
mov
ficomps
ljmp
ja
xchg
daa
or
jb
fld
test
jg
insl
in
rcrl
dec
or
in
test
addb
pushf
dec
xchg
stc
stos
lret
mov
mov
xchg
shlb
lds
cmc
push
mov
sahf
imul
adc
lret
lret
dec
dec
outsb
mov
xor
dec
pop
int
mov
add
enter
sbb
sub
sub
xor
movl
mov
mov
mov
mov
jmp
add
mov
negl
mov
movzbl
sub
mov
xor
xor
sub
sub
xor
mov
mov
mov
imul
xor
add
lea
mov
add
mov
mov
xor
add
jne
mov
mov
mov
cmp
je
mov
mov
mov
cmp
jne
mov
mov
movsbl
xor
add
cmp
mov
mov
mov
je
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
xor
imul
add
lea
mov
add
mov
mov
xor
add
jne
mov
mov
xor
xor
add
add
cmp
jae
lea
mov
mov
movl
lea
mov
mov
addl
mov
xor
add
jmp
or
adc
xchg
stos
andb
in
in
pushf
and
popa
pusha
adc
dec
stc
js
dec
jnp
mov
push
push
sti
push
add
rclb
jb
inc
rep
add
mov
xorl
inc
dec
hlt
repz
mov
idivb
or
sub
imul
sbb
pop
in
jl
in
mov
jg
call
xchg
mov
stc
ja
dec
xor
movsb
pop
jae
test
jno
dec
cs
ret
sti
dec
and
mov
inc
jnp
enter
lcall
add
push
pop
sbb
mov
fiadds
sub
push
cmp
addr16
adc
loop
lods
roll
xchg
or
sub
jecxz
sbb
out
adc
cltd
xor
jno
shll
ret
jle
inc
imul
mov
inc
pushf
loopne
push
pop
or
mov
out
std
xchg
jnp
test
stos
lods
add
aas
or
jno
push
inc
dec
mov
jno
shl
cmp
mov
push
fs
iret
add
out
mov
scas
das
cmp
lods
mov
pop
or
divb
enter
cmp
add
imul
push
add
mov
adc
pop
loope
adc
outsl
push
adc
js
mov
sbb
cmc
cmp
aad
push
pop
insb
repz
jae
jmp
lcall
sbb
cmp
adc
jecxz
push
les
jns
sub
aaa
in
mov
into
cmc
jae
xor
mov
std
jp
dec
in
jb
dec
or
push
or
fdivrl
testb
mov
or
inc
sub
push
xchg
dec
gs
imul
mov
cmp
int
cmpsb
dec
xchg
jl
cmp
movsl
mov
into
inc
adc
sub
inc
incb
data16
cmp
cmp
sub
or
jae
xor
test
adc
lret
xor
cmp
nop
cmpsl
sbb
subb
cmc
xchg
int3
sub
fiadds
out
hlt
jns
jne
push
jl
xor
pop
lock
xor
int3
test
fabs
xor
inc
jle
mov
dec
insl
pop
mull
cmp
popl
addr16
add
jb
in
and
cs
sbb
pop
ss
iret
push
and
inc
add
cmp
stos
inc
xlat
test
inc
je
sahf
pop
adc
push
mov
int
stc
add
sbb
popf
stos
or
rcrl
mov
adc
mov
mov
xchg
mov
test
push
lret
add
jo
popa
cltd
test
repnz
mov
fisubl
fidivrs
push
mov
into
movsb
lret
mov
mov
shll
pop
out
push
sbb
xchg
mov
decl
mov
cmp
mov
dec
and
ficomps
xchg
addl
mov
mov
xchg
xchg
push
int
jb
lret
mov
sbbb
cs
push
jne
les
fcoms
fs
lahf
and
push
push
test
or
cs
sbb
fisubrs
cmp
sti
out
cmp
sub
repnz
mov
pop
jnp
gs
push
mov
mov
cmp
jns
jmp
pop
add
ja
in
repz
stc
imul
xchg
mov
stos
push
jo
orl
test
xorl
add
mov
es
adc
cmp
xor
jmp
xchg
xor
imul
pop
xchg
jg
rcrl
das
dec
jae
push
lea
mov
mov
mov
xchg
push
mov
repnz
pop
mov
lret
sub
adc
push
push
mov
or
enter
inc
shl
outsl
sub
xchg
mov
loop
jle
pushl
add
mov
mov
int
pusha
test
subb
lret
add
sbb
sub
mov
mov
js
loope
dec
xorl
loop
xor
int
add
insl
or
xchg
roll
adc
aas
adc
fs
cmp
mull
inc
pop
pushl
dec
not
push
lcall
sub
jnp
pop
fidivrs
bound
lahf
xchg
jno
stos
adc
test
fwait
call
mov
rclb
xlat
sub
cld
mov
add
sub
nop
sti
pop
pusha
push
inc
xor
sahf
inc
cltd
jg
xchg
mov
rcll
or
ret
sbb
shl
out
out
add
icebp
mov
xchg
and
fnstenv
test
pop
ret
mov
nop
sub
sub
nop
imul
jno
rol
icebp
jge
mov
sbb
xor
shlb
into
sub
adc
pushf
pop
sbb
and
ret
dec
inc
cmc
mov
sub
xchg
scas
jnp
mov
inc
pop
dec
cli
inc
mov
jae
pop
loopne
sub
jae
aaa
cmp
or
push
jge
cs
sbb
das
dec
loope
sbb
test
adc
xorb
inc
mov
movsb
jge
sahf
push
xchg
js
insl
xchg
in
mov
aad
jg
arpl
jge
jge
sub
sub
ja
sti
or
scas
les
pusha
sbb
jo
add
test
cmp
pop
loop
mov
cmp
cwtl
cltd
mov
mov
daa
xchg
jg
sbb
cmc
sahf
negl
nop
loopne
imul
cmp
push
cmp
gs
and
jl
mov
sub
mov
aam
cmp
clc
sbb
movsb
adc
stos
inc
jno
xchg
add
insb
rcll
fcoms
add
xchg
jne
xchg
hlt
daa
xchg
stc
cltd
xchg
testb
mov
cmp
lcall
inc
adc
xor
push
movsl
inc
dec
fnstsw
rolb
addl
pop
inc
lock
mov
pop
adc
and
xor
mov
pop
or
adc
mov
jae
xor
adc
add
sahf
jb
xchg
push
daa
xor
enter
or
xchg
and
jge
pop
incb
mov
movsl
aas
data16
lret
pop
xchg
and
fidivrl
in
lcall
push
test
lret
pop
jne
push
inc
stos
sbb
add
jle
inc
int
ret
out
xlat
je
xor
dec
andl
mov
orb
xchg
arpl
fnsetpm(287
leave
rclb
dec
mov
sahf
loop
and
in
mov
xor
or
adc
repnz
mov
push
push
shrl
xchg
xchg
lods
mov
idivl
or
and
test
rol
mov
sbbl
cmpl
das
shll
scas
dec
sahf
xchg
xor
add
xorl
dec
stc
mov
fsubrs
stos
out
pop
xlat
or
hlt
mov
mov
inc
jp
mov
or
imul
out
mov
out
pop
xor
sbb
cltd
fnstsw
or
je
inc
push
cltd
mov
push
jae
and
mov
mov
jecxz
hlt
outsb
cmp
outsl
mov
pusha
insl
mov
orb
cld
jecxz
xchg
out
mov
ret
call
sub
pop
or
push
push
fisubrl
inc
js
dec
or
sbb
hlt
mov
add
add
add
mov
sub
cmpsb
jae
cmp
call
cs
mov
lock
fdivl
fs
xlat
cmc
jae
mov
sub
outsl
sarl
mov
stc
jb
fsubp
jb
adc
out
aaa
lcall
sbb
jge
mov
jecxz
add
sbb
sub
jp
dec
icebp
repnz
mov
bound
jle
mov
fimuls
jne
xor
add
lods
repz
rorb
in
dec
pusha
xor
xchg
je
xchg
xor
mov
dec
in
int3
mov
fbld
jmp
mov
loop
cmpsl
mov
insl
mov
fwait
add
mov
mov
pop
push
xchg
addr16
jnp
shll
rcrl
jle
setne
jp
iret
xchg
or
pushf
fwait
lret
or
or
jl
xchg
lds
enter
pusha
stc
mov
and
ss
inc
ljmp
push
sub
or
and
cmc
mov
adc
add
inc
sub
das
cmp
aas
out
mov
out
mov
shl
jns
fadd
gs
bound
jns
inc
aam
or
pop
jl
mov
push
adc
test
pop
pop
ss
nop
fscale
or
outsl
sbb
add
pop
es
mov
and
dec
mov
rol
in
loop
sbb
std
mov
aam
dec
jne
dec
cmp
inc
std
in
pop
mov
adc
add
xchg
inc
adc
pop
in
fldt
das
inc
lahf
or
adc
neg
sbb
jo
adc
sub
cld
push
push
adc
cld
out
in
into
sub
pushf
mov
push
ret
or
cmp
jbe
sub
pop
fadd
aas
and
xchg
add
adc
icebp
stc
and
in
add
sbb
fldcw
mov
sbb
decb
insb
cltd
aaa
xlat
negl
push
lret
ss
cmpsl
cmp
das
lret
inc
cmc
in
ds
incb
stc
outsl
sub
xchg
popf
adc
clc
jns
jne
jb
call
fnstcw
push
jg
mov
cmp
cmp
ja
cmp
out
clc
rcr
dec
jae
fnstcw
adc
cmp
mov
adc
test
cwtl
cmp
orb
add
sarb
sbb
jmp
hlt
mov
in
stos
pop
mov
les
push
vpunpckhbw
out
xchg
pop
add
mov
mov
scas
pop
add
ljmp
sbb
subl
jns
xor
shrb
inc
jo
jno
sub
lret
cmpsl
pop
jg
imul
lret
outsl
in
mov
ret
lods
mov
lcall
leave
dec
ljmp
sbb
insb
push
std
pusha
inc
mov
and
pop
mov
loop
xor
xchg
aas
add
cmp
xadd
push
movsl
xorb
and
insl
test
out
jbe
aas
dec
cmpsl
lods
sbb
pop
lret
imul
push
pushf
mov
dec
push
fcmovnbe
roll
cmc
jge
es
ret
xor
movsl
lock
addr16
pop
sahf
fxch
mov
mov
xchg
xchg
decl
lods
lcall
dec
cmp
xchg
aam
cwtl
pusha
dec
xor
mov
cmpsb
lret
adcl
aad
sub
negl
call
push
movsb
shlb
ljmp
mov
insb
and
xchg
or
cld
js
add
mov
pop
pop
sub
rol
and
mov
push
popa
fiaddl
jb
jl
pop
add
cmpb
cmpsl
xchg
sub
mov
leave
outsb
loope
jbe
sti
inc
arpl
fwait
dec
or
rcrb
pop
dec
movsl
pop
imul
loop
sbb
fnstcw
mov
popf
aas
xchg
mov
inc
stc
xor
fwait
and
mov
test
daa
inc
ret
stos
mov
sub
outsb
or
inc
mov
mov
imul
sub
dec
adc
dec
xchg
xchg
ljmp
cwtl
mov
outsb
imul
mov
push
cwtl
sbb
int
in
imul
mov
and
xchg
inc
push
mov
aad
jmp
jo
adc
mov
mov
pop
or
xchg
mov
add
mov
movsb
adc
inc
mov
cmp
and
pop
adc
add
cmpsb
inc
dec
js
xchg
pop
or
jnp
daa
pop
xor
popf
sti
jns
lcall
xchg
add
jns
dec
movsb
lahf
popf
pop
mov
cmp
xchg
jge
adc
aaa
iret
add
imul
ljmp
roll
mov
jle
dec
xchg
dec
and
xlat
enter
psubb
dec
fcomps
or
cmp
jge
into
je
add
enter
push
or
sbb
inc
cmpsb
js
mov
push
push
cmpsb
mov
bound
push
sbb
add
dec
inc
fs
dec
data16
idivl
fistpll
mov
inc
out
insb
add
insb
sub
lock
and
test
addr16
data16
cld
pop
pop
jb
das
xchg
jb
pop
mov
mov
mov
jp
stc
add
std
movlhps
aas
or
sbb
dec
sub
pop
inc
add
adc
incb
sti
mov
mov
jo
out
pusha
aad
outsl
and
mov
das
xor
int3
sbb
fcompl
mov
and
divb
enter
or
jbe
in
dec
push
jl
sbb
sahf
loop
shll
mov
sub
xchg
mov
clc
lret
scas
sti
xlat
jg
insb
push
notb
test
xor
clc
xchg
insb
fcompl
and
cmp
in
push
test
shll
nop
mov
mov
repnz
outsl
mov
lds
data16
ds
xor
xchg
xchg
pop
or
sub
insl
and
inc
lahf
fcomps
sbb
mov
or
mov
xchg
fcoml
mov
movsb
clc
push
cmc
cmp
hlt
aam
gs
in
dec
dec
jbe
cmpsb
xor
aam
loope
adcb
and
cli
jp
pop
pop
inc
cld
pop
ljmp
xor
xchg
arpl
xchg
cmp
pop
or
in
repnz
rorl
es
xor
das
cmp
pop
loop
pop
mov
xchg
decl
fistl
mov
cmpsb
mov
dec
xchg
pop
insb
in
sarl
ret
mov
pop
mov
clc
movsb
iret
sub
mov
shrb
mov
sti
fs
xchg
or
cmp
sbb
cmp
stos
stc
aaa
adc
ss
pop
jno
mov
mov
push
sahf
inc
lahf
out
icebp
repnz
xchg
imul
adc
shlb
jp
push
fiadds
or
mov
or
ja
into
in
push
push
shlb
movsb
push
neg
rcr
add
enter
sarb
testl
xor
lea
lea
or
xchg
adc
lods
lds
and
mov
iret
call
mov
fidivs
into
cld
cmp
jge
pop
xchg
adc
test
icebp
jmp
sub
sahf
sub
fiadds
inc
jne
into
in
jp
gs
fidivs
test
mov
in
adc
mov
mov
insb
lret
add
movsb
and
and
rol
sbb
cmp
js
xchg
out
lret
out
jb
add
pop
rorb
xchg
pop
stc
fxch
jbe
rorl
leave
stos
lds
int3
pop
xchg
call
lds
int3
aam
imul
xor
dec
enter
cmp
xchg
shrb
dec
sbb
xchg
and
push
sub
mov
aaa
cmc
stos
mov
sbb
bound
add
or
cltd
mov
xchg
dec
or
jb
and
xor
cltd
mov
repz
cmpl
sarb
jmp
cmp
and
dec
loopne
sub
fstpl
mov
cmp
adc
sbb
jg
dec
fnstsw
inc
ret
filds
xor
push
addl
pop
call
shll
xor
or
mov
or
rclb
test
adc
fmul
pushf
outsl
pop
ljmp
inc
movsb
cmp
adc
jno
mov
in
loop
fcoml
lahf
out
je
out
xchg
fildll
lcall
imul
jb
test
jb
push
jns
xabort
xor
lcall
pop
rolb
adc
mov
push
jmp
and
dec
iret
add
enter
loopne
inc
out
adc
divb
push
insl
cmp
stc
xor
sti
lcall
xchg
or
push
inc
dec
or
je
adc
cmc
ror
mov
loope
je
jne
and
xor
dec
in
enter
and
mov
aam
repz
and
stc
std
cmp
sbb
pushf
jmp
xchg
js
sub
lahf
mov
xchg
xor
xor
popa
pop
mov
shll
lea
inc
mov
clc
int
mov
push
movsb
push
xor
shlb
adc
iret
push
mov
mov
and
cmc
push
lods
js
cmpsb
stc
dec
mov
push
cmp
das
scas
adc
fwait
cs
jns
or
inc
xor
imul
adc
js
movsl
adc
jg
aad
test
call
jmp
adc
push
cmpb
mov
xchg
or
pop
push
sarl
dec
add
fidivrl
pop
push
std
dec
test
push
mov
std
lcall
sbb
out
imul
mov
cld
js
xchg
mov
sbb
xor
fimuls
mov
lds
movsb
inc
scas
adc
lea
push
dec
in
xor
fidivl
sub
xchg
add
xchg
sbb
rcrb
aas
mov
movsl
dec
in
loopne
ficompl
fnstcw
mov
ljmp
scas
sub
dec
les
cmp
or
and
rcrl
push
cmp
sub
aad
sub
jecxz
lods
cli
xor
dec
lock
test
mov
dec
inc
scas
stc
and
sub
pop
xchg
je
jo
sbb
add
shlb
clc
imul
cmp
lcall
xchg
lret
or
xlat
loope
imul
in
xorl
and
mov
in
test
sbb
out
sub
add
mov
and
sub
icebp
repz
shlb
adc
dec
inc
sub
gs
sbb
mov
adc
rcrb
inc
dec
loope
xor
subl
or
andb
lcall
jno
leave
std
mov
xor
cmp
adc
cli
rol
imul
stc
push
test
sbb
aam
jle
sub
aaa
and
or
xchg
mov
add
popf
int3
cmp
stos
ret
bound
in
and
pop
cmc
leave
mov
jecxz
add
xchg
sub
jo
jge
push
xor
mov
lds
stos
pop
pusha
adc
mov
lds
outsl
mov
jl
jbe
dec
icebp
outsl
scas
scas
xchg
rclb
jnp
or
add
lret
sub
fistpl
jmp
pop
shll
adc
test
int
outsb
sbb
scas
out
mov
leave
push
pop
fidivs
fldenv
popa
cli
and
shl
imul
mov
push
pop
dec
push
push
not
orb
out
mov
push
xor
adc
mov
std
sbb
pop
dec
pop
mov
std
shrb
mov
movsl
push
stc
adc
mov
shll
int
and
jno
cltd
daa
pop
jbe
aad
inc
mov
adc
popa
cmp
ljmp
mov
cltd
in
ja
lock
ret
movsl
adc
adc
in
xchg
push
xor
xlat
mov
inc
mov
push
les
add
sbb
xor
jecxz
push
sbb
and
xchg
js
inc
adc
mov
add
jp
sahf
jb
lahf
sti
ret
push
das
and
adc
push
mov
cmpsl
xor
mov
add
notb
into
mov
orps
nop
test
mov
jne
jno
add
mov
in
enter
popa
pop
dec
loopne
lret
jbe
cmp
sub
dec
mov
call
xchg
gs
shll
cmpl
mov
je
repnz
test
loop
xor
jnp
mov
sub
xlat
jns
je
adc
push
jecxz
push
dec
mov
loope,pt
insb
aas
out
push
fmuls
sbb
inc
adc
jb
arpl
ficoml
mov
jle
add
and
data16
data16
jbe
sub
fstl
push
mov
ret
mov
push
imul
xor
adc
sahf
popf
mov
sub
idiv
add
imul
dec
lahf
out
mov
push
or
call
js
add
push
mov
movsl
test
dec
adc
xor
add
pop
and
xor
pushf
scas
push
sub
das
pop
mov
stos
inc
inc
jl
inc
push
mov
sbbb
popa
stos
ret
xor
call
aam
inc
sti
mov
test
mov
lods
push
jle
push
ja
jbe
cltd
or
ja
jge
outsl
lcall
add
mov
loope
out
outsb
divb
xchg
pop
cs
cmc
ja
seto
call
cmpsb
and
and
lds
repz
jecxz
hlt
and
das
jl
xchg
cmp
shr
ret
movsb
std
or
out
sub
push
sbb
mov
inc
aam
jmp
pop
jecxz
sub
xor
pop
ficoms
cmc
inc
test
fcomps
in
inc
cltd
fidivs
inc
xchg
bound
pop
je
push
push
cmpsl
movsb
dec
mov
push
or
add
std
or
test
sub
cmp
sbb
nop
shrl
inc
faddl
mov
fiadds
jle
call
into
andb
xchg
repnz
sub
adc
mov
out
jns
scas
jo
fisttpll
dec
pop
push
push
cmp
jmp
push
sub
sti
enter
bound
and
das
sbb
pushf
repz
jbe
fistpll
pop
insl
inc
shlb
cmc
push
dec
xor
mov
movsb
pop
iret
fimull
cli
mov
inc
dec
test
movsl
sbb
sbb
mov
sti
scas
mov
cmpb
add
xchg
cmp
outsl
adc
add
xchg
add
jns
popa
aad
or
adc
sub
xchg
push
negl
xor
lcall
sub
pop
mov
out
jle
mov
lds
jg
inc
mov
pop
pop
outsb
int
inc
push
jo
iret
xchg
mov
ja
mov
stc
dec
orl
inc
mov
psllq
enter
jecxz
jg
xchg
jo
sbb
xor
scas
mov
xchg
mov
sbb
repz
or
test
in
aas
ror
xchg
ficomps
lcall
sbb
js
lret
or
repz
insb
notb
cs
cld
testl
push
sti
cld
xor
mov
stos
fisttpll
aaa
pushf
pop
mov
and
movsb
add
cmc
adc
xchg
xchg
mov
iret
shl
cs
cmp
pop
jle
and
dec
inc
cwtl
add
std
ljmp
enter
enter
arpl
aaa
clc
sti
dec
insl
out
dec
lds
lock
add
outsb
cmove
jp
xchg
adc
or
add
mov
in
push
filds
and
mov
add
jno
aaa
jecxz
cmp
sbb
adc
dec
mov
mov
jge
lock
push
inc
lcall
push
in
adc
testl
and
push
jno
xchg
pop
ja
cmpsb
lock
pop
rcr
fildl
mov
push
out
mov
dec
sub
xchg
mul
inc
popf
pop
adc
mov
cmp
mov
xlat
in
inc
addr16
shrb
loopne
inc
das
add
aam
test
dec
rorb
pop
fidivrs
dec
cmp
rorl
shlb
sbb
jmp
dec
xchg
enter
mov
cmp
fistpl
mov
or
jnp
iret
xor
dec
pop
outsl
pop
jno
dec
push
push
sbb
ficoms
outsl
inc
xchg
int3
imul
es
xchg
xchg
jo
inc
adc
mov
repnz
mov
sub
mov
sbb
test
pop
jnp
vpmaxsw
out
lea
sbbl
cmpsb
insb
out
xlat
pop
icebp
push
sbb
shlb
xchg
js
and
fmull
fsubrl
xor
mov
sbb
sarb
outsb
push
xchg
jg
cmp
adc
in
dec
inc
cs
jbe
and
or
fwait
sub
iret
das
add
sbb
xchg
cli
mov
addl
sub
pop
push
mov
fdivrl
push
loope
imul
dec
test
ljmp
sbb
add
ss
and
sahf
mov
adc
push
inc
mov
mov
jmp
cs
xchg
dec
mov
imul
push
inc
pop
mov
jo
loop
sub
mov
call
outsl
mov
mov
pusha
ret
out
adc
adc
out
mov
mov
cmc
pop
mov
cmp
fcoms
in
adc
mov
cld
jecxz
dec
lods
out
dec
pop
or
lock
in
pop
inc
jbe
lret
dec
fists
cmp
repz
jmp
rorb
push
mov
xlat
xlat
mov
out
xchg
dec
xor
imul
sub
sbb
pop
mov
loopne
push
xchg
cmp
pop
push
test
mov
fmuls
mov
repnz
inc
jno
and
sbb
xor
negb
or
out
in
std
cmp
int3
jge
mov
orl
cmpsb
stos
sti
scas
daa
or
ds
das
repz
inc
inc
sarl
outsl
bound
lods
fdivrs
sbb
lea
xor
shrb
scas
pop
add
popa
mov
aas
and
jl
insb
jg
or
lea
xchg
pushf
adc
jo
lock
lds
adc
out
add
push
outsl
das
mov
inc
push
dec
or
test
sub
aad
dec
xchg
mov
popf
mov
dec
popa
incb
iret
adc
pop
sahf
jmp
xor
icebp
jg
pop
pusha
data16
dec
shr
les
sub
mov
in
sbb
ret
and
jle
cmp
mov
rep
xor
push
sarb
fcoms
jecxz
jge
mov
imul
sbb
fistps
pop
mov
jecxz
xchg
stos
sti
orb
mov
or
fcmovnbe
sti
push
lods
sti
jbe
mov
out
and
jns
mov
cwtl
sbb
add
int3
adc
mov
insl
aas
in
pop
push
stos
push
pop
in
mov
xor
push
ja
lock
loop
or
ficoms
stc
scas
loope
pop
jp
cmc
pop
sti
pop
ja
and
rclb
inc
test
scas
int3
jl
adc
nop
pusha
xor
stos
movsl
xchg
popa
ficomps
fcompl
jge
int3
sti
adc
mov
mov
loop
testb
shl
dec
pushf
jmp
or
adc
mov
rcrb
push
lret
out
fnsave
cld
out
enter
dec
mov
xor
inc
dec
ljmp
loopne
insl
push
in
mov
xorl
xchg
icebp
icebp
aas
ljmp
jb
cwtl
mov
rcr
out
xor
add
insb
cmpsb
scas
mov
xor
fwait
sub
ficompl
das
inc
mov
repnz
mov
cmp
sub
push
mov
mov
mov
cs
int3
stc
testl
iret
fstpl
mov
iret
pusha
seta
jge
xchg
les
jle
int3
mov
cwtl
cltd
into
inc
add
roll
popa
cmp
jne
xchg
xchg
insl
stc
adc
mov
inc
jle
or
push
or
stos
mov
adc
into
fwait
push
xor
in
mov
data16
aas
int
add
loope
repnz
sbb
ds
scas
insb
test
sbb
loopne
and
dec
inc
pop
lret
add
xchg
ds
ret
enter
inc
xor
arpl
test
sahf
push
jnp
and
clc
adcl
jg
pop
idivl
cmp
lds
pop
sbb
pop
mov
insl
in
test
mov
lret
mov
nop
daa
mov
insb
push
xchg
imul
cmp
xchg
push
mov
fnstcw
push
xor
bswap
push
gs
add
inc
push
inc
lods
mov
cmp
mov
mov
pop
les
ret
pop
dec
or
pop
adc
testl
aam
mov
push
cmp
dec
add
fidivrl
fsubrl
shrl
pop
je
out
pushf
imul
int
pop
sub
fsubp
push
sbb
cmp
or
mov
loopne
jle
lock
aam
mov
mov
sub
lea
or
mov
add
cmovge
sbb
xchg
push
and
arpl
not
sub
mov
jae
stc
into
cmp
jne
insb
inc
or
dec
push
mov
jno
stc
rorl
cmp
push
mov
dec
xchg
das
mov
mov
and
loopne
dec
sahf
xchg
dec
je
outsl
fdivr
rcl
orl
mov
shrl
jp
out
mov
cmc
movsb
in
mov
rcrl
mov
push
pop
fiaddl
jne
inc
xor
mov
push
push
pusha
pavgw
xchg
jbe
xchg
xlat
jnp
mov
mov
pop
mov
sub
and
aad
pop
mov
pop
jmp
xor
xchg
mov
out
jp
add
add
leave
iret
cmp
int3
pushf
jge
xchg
mov
push
or
fs
adc
pop
rcrl
pop
ljmp
xor
out
subb
inc
in
movsl
ja
and
xchg
adcb
ja
mov
jns
jno
cld
stos
push
pushf
xchg
lds
pop
lock
clc
push
sti
jne
test
loopne
jle
cli
cmp
in
push
aam
rorb
pop
insb
fistpll
out
xor
lods
mov
std
cwtd
add
aad
mov
pusha
leave
sub
shrb
lds
mov
clc
push
subl
inc
push
xchg
aas
jmp
mov
incb
pop
fstl
lods
sbb
popa
or
int3
xor
or
pop
pop
mov
inc
subl
xchg
hlt
adc
iret
loop
shrl
fistps
jns
in
jb
ficomps
cs
inc
xchg
jae
and
movsb
lods
add
sahf
imul
adcl
mov
jp
dec
pop
mov
std
lds
jne
addl
sbb
sbb
mov
je
mov
dec
in
fucom
nop
adc
push
sbb
inc
jae
xchg
shrl
mov
fists
lea
cmp
inc
incl
add
cmp
jb
jmp
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
imul
xor
add
lea
mov
add
mov
mov
xor
add
jne
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
imul
xor
add
lea
mov
add
mov
mov
xor
add
jne
mov
mov
xor
lea
mov
incl
mov
xor
add
jne
jmp
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
imul
xor
add
lea
mov
add
mov
mov
xor
add
jne
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
xor
imul
add
lea
mov
add
mov
mov
xor
add
jne
mov
xor
mov
add
mov
pop
pop
pop
leave
ret
dec
jle
imul
jle
ret
sub
hlt
lods
popa
add
sub
add
lock
rolb
push
fucompp
mov
sbbl
lods
fldt
jmp
lahf
and
out
push
xchg
ds
sbb
dec
pop
adc
fisubl
xor
sbb
push
enter
sub
cmp
int3
sub
xchg
adc
outsb
fistpll
filds
out
ja
sbb
pop
add
clc
jns
dec
and
in
jp
jp
inc
sub
mov
fs
dec
test
mov
ret
test
sbb
scas
dec
ds
sbb
out
push
rcl
or
dec
test
std
mov
sbb
cmp
push
xor
enter
or
pushf
push
mov
imulb
add
iret
jb
push
fcmovne
push
sbb
cmp
cli
daa
mov
mov
lret
add
ss
push
or
loop
jp
pop
pop
loope
int3
out
iret
xor
pop
adc
jmp
pusha
lret
mov
dec
test
inc
mov
rcll
lcall
popa
sub
sub
cwtl
and
push
js
aam
inc
jmp
popa
int
dec
popaw
sub
loop
leave
push
idivb
cmp
in
divl
add
xor
or
or
outsb
daa
or
cltd
mov
fistl
add
sbb
push
out
inc
xlat
loop
mov
inc
or
push
jge
xor
mov
mov
dec
xchg
jge
lret
jmp
lods
cmc
sbb
dec
inc
sbb
sbb
mov
or
out
or
cs
bndstx
movsl
scas
xorl
cmp
movl
mov
mov
mov
pop
cs
add
mov
ljmp
rcrl
mov
roll
shll
lcall
add
add
jbe
outsl
std
out
cli
ja
je
outsl
fs
pop
rcr
add
sub
add
pop
in
push
pop
mov
cli
sub
mov
mov
cmc
rcr
cmpl
dec
cltd
pop
mov
pop
fistpll
sbb
rorl
add
out
push
int3
push
int3
fldenv
bound
popa
adc
lahf
subb
push
cmpsb
push
adcb
sub
jmp
cmp
outsb
cmp
sub
cwtl
repnz
rcrb
lods
push
inc
dec
pop
cmp
daa
sub
movsl
stos
insb
movsl
cmp
lahf
jg
and
pop
lock
loopne
pop
jge
aas
mov
pop
mov
idivb
int3
and
add
not
ja
in
sub
ja
ret
shll
mov
xor
push
cltd
cs
pusha
mov
mov
jnp
test
jle
xlat
fdiv
cmp
shl
addl
xchg
jecxz
inc
adc
cld
outsl
pop
out
das
xchg
pop
test
popl
cltd
scas
loop
push
stc
sbb
pop
cmp
int3
shlb
imul
inc
aas
rcl
lea
pop
push
inc
insl
popa
out
push
cs
aaa
je
mov
xchg
addr16
icebp
subb
jns
inc
cmp
adc
sbb
dec
aaa
xchg
aam
push
es
mov
sahf
fldenv
cmp
push
xchg
pushf
ljmp
dec
mov
dec
loopne
dec
push
popa
push
adc
dec
add
mov
xlat
xchg
xor
repz
lock
dec
stos
fcompl
fs
out
mov
aad
repnz
pop
mov
ret
dec
xchg
jb
xchg
push
adc
incb
ret
rorl
jno
cmp
inc
dec
test
loop
cli
inc
pop
xlat
into
pop
push
aam
ljmp
jb
jle
loopne
lds
repnz
mov
adc
movl
popf
fbstp
dec
pusha
cmpsl
or
dec
add
jno
js
adcb
notb
add
mov
pop
test
push
xchg
lret
xlat
fistps
sbb
mov
mov
add
sub
add
rolb
dec
or
mov
ljmp
mov
in
lret
fists
mov
outsb
outsb
jbe
repnz
fwait
ljmp
xlat
sbb
fcoml
adc
fists
aaa
ljmp
iret
mov
and
aam
call
lea
inc
mov
xor
pop
inc
push
pusha
pop
cltd
inc
popa
dec
mov
int3
push
cs
int3
push
mov
push
stos
mov
jp
ja
es
sub
mov
pop
lds
cltd
das
mov
push
in
pop
mov
frstor
loopne
push
jecxz
stos
rol
jmp
xlat
icebp
mov
cvtdq2ps
mov
shufps
mov
test
sub
movsl
jnp
xchg
mov
pop
mov
setp
inc
cltd
cld
aam
cmp
adc
lret
mov
add
inc
repz
loop
or
sbb
and
inc
dec
cmpsb
je
mov
xor
pop
or
pop
nop
andl
xorb
loop
outsb
jo
insb
inc
lods
insb
mov
xor
testb
ffreep
leave
mov
xor
lock
add
cmp
push
jp
pop
pop
into
add
es
jmp
bound
popa
fnstenv
nop
test
sbb
mov
sbb
mov
ljmp
cmp
pusha
push
or
xchg
call
aas
cld
adc
or
mov
jne
out
xor
mov
rolb
pop
or
idiv
movsb
stos
fidivrs
adc
lahf
xchg
bnd
cmp
mov
cwtl
and
leave
pop
sub
xlat
push
cltd
mov
and
in
inc
pusha
ja
lret
popa
xlat
movl
addr16
mov
push
mov
fldenv
jno
inc
cmp
cli
add
arpl
jle
movsl
push
stos
je
sub
outsb
add
xor
jne
scas
ljmp
add
sub
add
xor
popa
jge
or
push
xor
mov
mov
xchg
aaa
inc
dec
cmp
jb
jmp
fcomp
call
add
lods
sub
cmpsl
inc
mov
fimull
aas
sbb
mov
jne
add
push
xchg
out
mov
js
pop
jne
mov
sbb
jns
arpl
mov
cmp
sbb
inc
mov
jnp
pop
and
mov
xchg
mov
mov
cltd
or
insl
push
xchg
push
add
jecxz
xlat
int3
scas
xlat
out
out
clc
pusha
jbe
dec
cltd
push
push
fmull
pop
jne
push
in
bnd
repnz
negl
inc
int3
and
mov
cmp
js
mov
daa
dec
cli
ficompl
adc
mov
int3
push
outsl
arpl
or
lods
imul
fldl
outsb
or
stc
pop
jp
adc
and
jo
pop
xchg
adc
inc
mov
sbb
cwtl
test
mov
std
mov
adc
or
jg
clc
fs
xor
jmp
outsb
cmpsl
jns
scas
pop
pop
es
xor
or
out
test
into
dec
push
mov
xchg
test
add
aas
adc
mov
sub
rorb
push
lods
pop
xor
pop
xchg
and
pop
leave
cmp
fsincos
push
jl
xchg
test
inc
push
cwtl
cmp
ret
xchg
leave
out
or
adc
pop
jae
xlat
adc
cmp
lret
cmc
fistpl
xor
jmp
mov
clc
cmp
stos
subl
inc
and
into
gs
push
xchg
mov
adc
arpl
mov
in
pusha
cmp
xchg
loope
in
inc
cli
mov
jle
cwtl
cs
sub
outsb
sub
jg
lock
pop
push
push
arpl
bound
cs
xchg
mov
test
fs
subb
stc
add
dec
push
ds
dec
pop
imul
sub
add
cwtl
stos
mov
lcall
pop
test
dec
mov
int3
xorl
in
mov
sub
aad
xor
jecxz
sub
mov
or
lock
pop
adcb
loopne
mov
js
lcall
pcmpgtw
pop
jp
mov
idivb
nop
push
mov
fwait
movsb
push
xchg
cmc
push
icebp
and
movsl
jl
dec
rclb
add
test
stos
jae
dec
outsl
mov
mov
out
sahf
jle
stc
mov
test
imul
out
mov
mov
add
push
push
aaa
cs
pop
push
ret
in
lods
and
ret
jno
add
daa
repnz
fs
mov
mov
iret
jge
loope
mov
mov
inc
aas
pusha
cmp
test
dec
test
int
sbb
mov
insl
jecxz
test
arpl
out
jno
bnd
xchg
lahf
add
sbb
loope
inc
jmp
je
jge
push
imul
or
loop
dec
lods
mov
mov
jge
inc
adc
pop
ret
out
push
pop
negl
lods
fsts
mov
outsb
mov
out
push
add
cwtl
mov
sbb
dec
pop
nop
addr16
lea
outsl
xchg
sub
sbb
adc
push
inc
sub
inc
cmp
inc
ret
out
into
aam
lock
aas
xchg
cmpb
daa
xor
cmp
or
add
repnz
out
mov
xchg
mov
imul
xlat
shrl
addr16
and
cmp
jp
mov
xchg
push
push
add
sub
leave
cmpsb
pop
xor
push
pop
je
push
xchg
sub
pop
or
test
enter
inc
adcb
dec
jb
aaa
test
mov
aam
sti
leave
mov
pop
out
insb
add
sub
add
add
int3
mov
pop
testb
push
cmp
shrb
sub
add
test
mov
outsl
scas
leave
addr16
adc
mov
call
xchg
pop
or
out
les
mov
xor
or
mov
push
adc
popa
xor
or
inc
push
cmp
lds
aad
shrl
adc
sarl
inc
sub
enter
ffree
sahf
sbb
fwait
into
cmp
push
cs
insl
sub
ret
cvtps2pi
dec
ja
push
and
fnstsw
lar
dec
xor
aam
cmp
jle
or
sbb
out
lret
test
or
mov
test
push
imul
pop
push
imul
jge
test
xchg
sub
jns
ja
popf
xor
shlb
xor
aaa
push
pop
jne
test
jmp
mov
dec
sbb
pop
pop
mov
xor
xor
sahf
fsubl
or
pop
pop
jne
mov
pop
es
or
or
or
jmp
cmc
in
xor
mov
sahf
pop
ja
shrl
test
jmp
orb
dec
add
rorl
cld
nop
ljmp
shr
pop
lret
cmp
push
repz
xor
jle
bound
dec
jle
or
aad
pop
lret
dec
and
iret
add
add
push
mov
shlb
aaa
mov
push
jo
aaa
pushf
int
mov
vpsrlq
sbb
push
cltd
aam
lahf
fisttpll
js
int3
jne
pop
pop
mov
js
in
or
stos
nop
fldl
mov
push
call
dec
cmp
ret
testl
scas
rcll
out
mov
iret
mov
stos
and
mov
fcmovb
xor
lcall
push
lret
fimull
add
add
add
mov
jg
xchg
mov
outsb
add
sub
add
inc
adc
lahf
out
add
push
loop
fcmovb
mov
in
add
add
out
mov
fisttpll
jle
negl
inc
outsb
or
jge
outsl
in
aam
add
sub
sbb
fstpt
sub
pop
es
dec
xlat
addr16
fistpl
or
push
bound
test
jecxz
sarb
pop
and
add
fmuls
push
push
out
ljmp
stc
mov
pop
mov
push
daa
stc
mov
testl
mov
std
xchg
lds
jle
push
cmp
cmp
mov
sahf
out
push
mov
and
arpl
ret
mov
nop
cs
push
shl
mov
pop
out
shll
jle
popa
mov
mov
loop
add
jae
sahf
jl
das
mov
int3
ss
inc
enter
or
pop
pop
adc
out
out
in
xor
xchg
sti
adc
shr
dec
push
dec
mov
pop
dec
or
inc
lcall
sub
shl
cmp
das
jecxz
adc
loopne
and
mov
std
jge
cmp
loope
mov
roll
mov
add
xor
int
jbe
jl
mov
imul
cltd
mov
push
cli
clc
paddb
neg
xchg
or
dec
cmp
push
sub
pop
or
jne
mov
stc
jecxz
addr16
pop
fadds
adc
sub
and
and
mov
inc
ljmp
or
std
lahf
dec
sar
les
mov
lahf
data16
mov
lods
dec
pop
xchg
pop
jbe
cmpsb
push
add
scas
adc
sbb
add
in
shlb
scas
ret
scas
dec
inc
mov
and
cmp
in
out
dec
jns
fs
movsl
cmp
cmp
or
sar
call
mov
or
nop
xchg
cmpsl
test
int3
repnz
xlat
add
js
inc
mov
clc
outsl
xchg
cmp
fadds
add
add
add
add
ds
or
dec
push
pop
sbb
jae
sub
xor
sub
gs
xchg
jnp
loop
jbe
fistl
push
pop
pop
cmpsl
fcompl
add
jg
mov
xchg
stos
mov
rcl
fiadds
adc
out
jo
inc
mov
inc
jecxz
sbb
cs
xchg
outsb
sbb
lock
jge
leave
clc
in
call
outsl
add
fucomi
mov
sub
sbbl
cmp
daa
inc
jge
adc
frndint
pop
jb
push
or
pop
and
in
les
stos
fwait
and
mov
jae
sbb
mov
inc
addr16
xor
mov
adc
stos
add
adc
cmp
push
shl
inc
push
rclb
xchg
mov
push
out
ljmp
data16
fnstsw
jo
test
stos
aad
sbb
add
or
pop
notb
dec
mov
xor
into
clc
pop
and
cmp
das
xchg
test
mov
gs
es
fwait
mov
test
ss
les
and
xchg
sbb
lcall
mov
mov
push
dec
aad
into
sarb
imul
testb
push
dec
mov
test
jle
test
imul
mov
xor
jbe
pop
popf
ljmp
and
ds
out
sbb
bound
cmp
lret
scas
mov
pop
insl
mov
xchg
sbb
int
lretw
dec
lret
sub
xor
enter
rorl
test
in
fdiv
cmpsl
jnp
adc
out
out
aad
or
xor
lods
addr16
enter
popf
and
push
ja
pop
cmp
dec
bound
xor
sub
das
inc
dec
mov
dec
pushf
xchg
outsl
in
dec
ret
add
adcl
mov
fucomp
adc
add
add
mov
cltd
bound
dec
orl
jo
fwait
shll
cmp
outsl
add
repz
pop
mov
or
scas
cmpsb
jbe
ffreep
sub
add
mov
jge
je
push
repz
fmulp
mov
stc
jne
mov
jo
addr16
push
out
jb
push
inc
push
nop
mov
sub
jbe
shlb
push
sbb
out
sub
inc
hlt
adc
pop
xchg
sbb
fistpll
jle
movsb
pop
xor
jecxz
in
cmc
outsl
outsl
adc
jae
divl
mov
jl
or
push
out
sub
cs
mov
mov
test
mov
fwait
or
cld
aad
mov
xor
add
dec
insb
inc
aad
out
shrb
or
adc
pop
xor
mov
fwait
sbb
mov
fildll
pop
pop
mov
das
add
and
xor
ret
lahf
cmp
dec
dec
mov
sbb
loope
rcrb
xchg
fs
ds
pop
popa
push
fisubl
or
cmp
pop
sahf
insb
xor
inc
lods
or
push
sarl
push
jmp
lret
xchg
xchg
cmp
nop
loope
add
or
pushf
mov
jne
lcall
xchg
or
enter
loope
pop
shrl
fbstp
fsub
shl
cli
mov
lods
andl
mov
sti
ljmp
or
nop
xor
rol
xchg
xchg
mov
lods
insl
das
xlat
mov
popa
mov
push
jnp
mov
mov
lea
push
cmc
ja
out
and
loop
shrb
xchg
inc
push
adc
ljmp
in
out
add
outsb
sahf
xor
inc
mov
fisubrs
or
scas
jmp
pop
std
shrb
cmpsb
ret
sub
pop
hlt
push
cmp
in
and
sub
push
push
xchg
add
pop
negb
jmp
xor
adc
inc
fldl
add
add
add
out
mov
add
rcll
loope
dec
outsl
add
jg
iret
aaa
ljmp
add
mov
daa
inc
mov
nop
sub
lea
jge
rolb
push
insb
loop
bound
pop
add
inc
mov
or
ds
jp
jmp
mov
loopne
and
insl
xchg
or
push
pop
lcall
or
shll
or
nop
icebp
dec
cwtl
and
or
out
out
add
add
aaa
pop
cmp
arpl
push
cmp
loopne
push
pop
and
xorb
and
mov
xchg
adc
mov
inc
mov
xchg
fstps
ret
jno
cltd
xchg
add
xchg
out
jb
mov
and
loope
dec
pop
pop
lahf
icebp
push
dec
cwtl
inc
addl
lea
loop
rorl
popa
mov
jl
or
add
inc
jns
push
aam
imul
jmp
push
inc
or
mov
pop
cmp
sahf
add
lds
jns
aaa
jl
roll
pop
jno
cmpsb
bound
mov
xor
sub
sbb
pusha
xor
push
xor
pop
test
test
pop
push
dec
sti
push
les
push
in
lret
mov
neg
dec
bound
mov
test
mov
fs
subl
sti
aaa
or
push
int
mov
pop
ja
aad
insl
add
inc
inc
fidivrl
xor
sbb
inc
xchg
jae
sbb
ficomps
push
popf
cpuid
mov
jb
in
mov
pop
rolb
pushf
in
stos
sub
xchg
repnz
leave
xchg
pop
outsl
subb
in
cltd
and
xchg
and
xchg
sub
je
gs
fs
jle
aaa
pushf
aaa
fldl
xchg
and
push
cltd
xchg
and
inc
and
sub
dec
sub
pop
fdivrp
repnz
add
add
pop
push
bnd
stos
mov
add
sub
add
or
jns
mov
sbb
jns
stc
xor
xchg
idiv
clc
mov
fcmovnu
cmp
scas
inc
lret
call
mov
jg
jge
lea
stc
cli
pop
mov
arpl
test
cltd
dec
dec
add
fimull
sahf
jo,pt
or
or
dec
mov
dec
inc
add
cmp
push
mov
loop
icebp
or
ljmp
mov
stos
out
imul
pushf
sahf
fidivrl
dec
and
dec
pop
hlt
mov
jp
rsm
sti
cmpb
aam
fcomps
cmc
xor
and
mov
fdivrl
mov
push
movl
mov
pusha
movsl
xchg
mov
data16
loop
and
dec
jl
enter
loope
and
imul
or
cmp
aad
xchg
xor
mov
fucomi
fstl
sbb
pop
or
lahf
jp
lods
inc
test
cmp
lahf
repnz
scas
jg
xlat
dec
pushl
cmp
stc
lahf
mov
cwtl
aam
xchg
xor
jp
loop
shrb
jo
jnp
sti
data16
test
mov
or
adc
les
cmp
repz
js
xlat
clc
xor
pop
scas
shll
jp
mov
sub
add
and
pop
sub
call
dec
mov
adc
hlt
sub
pusha
push
adc
inc
mov
lods
enter
mov
inc
push
fwait
add
mov
outsb
test
test
mov
mov
mov
adc
xchg
add
in
dec
insb
ret
cmp
insb
paddusb
clc
add
daa
cld
mov
and
mov
call
mov
mov
ror
shr
push
sub
vpmacssww
mov
fwait
or
xor
jle
fcompl
lods
dec
push
add
jno
push
ja
jae
push
mov
lret
push
bound
add
add
imul
js
sti
mov
push
xor
adc
adc
and
in
cmp
andl
iret
xchg
outsl
scas
out
jge
stc
js
int
pop
sbb
adc
out
jbe
cmp
scas
test
mov
inc
adc
test
aas
dec
mov
jp
in
loope
fldl
mov
jb
mov
fisubl
pushf
adc
sbb
out
cmp
cmpsl
lods
vpmullw
cmp
pop
xchg
fwait
pop
jl
clc
shlb
scas
push
adc
rclb
aaa
xlat
jl
jp
cs
mov
insl
scas
ficomps
and
in
push
add
addr16
insl
or
addr16
adc
ja
xor
dec
cltd
ja
cmpl
ficompl
ficompl
mov
mov
rcr
cmp
jp
sar
jns
ficoml
sbbb
inc
mov
jle
das
push
xchg
cltd
repnz
adc
cmp
out
xlat
cmp
mov
mov
adc
push
enter
cmc
hlt
in
sub
dec
stos
out
dec
in
pop
popf
pop
orl
idiv
repnz
nop
fcomps
sub
ret
push
sti
pop
dec
out
or
in
shll
les
fstps
jg
mov
rclb
jnp
inc
sbb
outsl
pop
pop
and
push
or
jp
mov
pop
fistps
mov
xchg
cmc
mov
adc
lds
and
jl
xchg
fldl2e
mov
cmp
cmp
daa
push
mov
hlt
dec
in
aad
xchg
add
imul
cmp
aas
mov
fldenv
cli
jle
repnz
test
add
jmp
mov
movsl
sarb
mov
rolb
lahf
fisttps
push
and
pop
fstpt
cli
mov
xchg
cmp
push
mov
add
loop
mov
xchg
lahf
add
inc
add
inc
add
lock
add
inc
add
lock
add
inc
add
lock
add
inc
add
add
add
inc
add
add
or
inc
add
add
adc
inc
add
add
sbb
inc
add
adc
add
inc
add
adc
or
inc
add
adc
adc
inc
add
adc
sbb
inc
add
jbe
push
fs
data16
inc
pop
inc
outsb
push
dec
inc
dec
pop
jno
push
push
push
push
jb
inc
dec
push
ret
movl
adc
inc
add
or
dec
xchg
dec
scas
dec
cmp
dec
cmp
dec
inc
dec
jae
inc
dec
xor
dec
pop
pop
pop
push
cmp
dec
xor
dec
cmp
dec
jp
cmp
dec
inc
dec
mov
dec
xor
dec
pop
insl
pop
bound
dec
jns
xor
dec
cmp
dec
lods
dec
inc
dec
xor
dec
pop
jge
jb
subb
xchg
jns
aas
dec
xchg
dec
xchg
dec
lods
dec
cmp
dec
inc
dec
xor
dec
pop
lea
outsl
xchg
push
mov
xor
dec
ds
lods
dec
cmp
dec
inc
dec
xor
dec
pop
popf
pop
xchg
outsl
mov
jns
aas
dec
mov
dec
scas
dec
cmp
dec
mov
dec
inc
dec
pop
lods
pop
mov
js
jns
aas
dec
mov
dec
scas
dec
cmp
dec
lahf
dec
cmp
dec
inc
dec
pop
mov
push
sarb
dec
mov
dec
scas
dec
cmp
dec
scas
dec
inc
dec
xor
dec
pop
int
ret
push
loopne
dec
mov
dec
scas
dec
cmp
dec
lods
dec
inc
dec
xor
dec
pop
fstpl
outsl
loop
jecxz
repz
aas
dec
lea
dec
lahf
dec
cmp
dec
xor
dec
pop
in
pop
loop
repnz
add
jns
ds
jg
xor
dec
cmp
orb
lods
dec
cmp
dec
inc
dec
pop
or
push
and
dec
add
fcmovnb
inc
add
lds
xlat
lds
iret
movl
mov
lds
mov
movl
xor
pushf
clc
rol
inc
add
movl
and
inc
add
movb
ret
inc
add
movb
movb
movl
sbb
lds
sbb
orl
jbe
into
flds
arpl
or
jne
or
incb
aas
cli
mov
add
xchg
pushf
clc
mov
xchg
pushf
clc
mov
xchg
pushf
clc
mov
xchg
pushf
clc
mov
xchg
pushf
clc
cmpsb
xchg
pushf
clc
ljmp
add
add
bound
test
xchg
or
add
ret
inc
add
or
insb
mov
pushf
clc
jbe
addr16
imul
push
addr16
add
imul
jne
jne
outsl
jne
jo
outsl
imul
add
add
dec
lahf
dec
lods
dec
mov
dec
insl
dec
insb
dec
xor
add
data16
add
add
data16
add
imul
add
jae
outsl
add
add
data16
push
add
imul
add
add
add
data16
add
add
dec
insl
dec
insb
dec
xor
dec
lods
dec
lahf
dec
lods
dec
insl
dec
insb
dec
xor
add
dec
test
dec
fwait
dec
xor
add
add
add
add
popf
mov
mov
mov
mov
mov
mov
mov
jae
jo
jno
jbe
ja
je
jne
mov
mov
jge
jge
jge
jns
mov
insl
lret
es
test
hlt
stos
aaa
stos
jle
jno
mov
push
or
out
add
test
and
fidivs
leave
mulb
xchg
icebp
mov
jno
cmc
enter
mov
js
mov
movb
in
adc
jne
inc
ja
dec
push
inc
imul
dec
popa
dec
jno
push
push
inc
push
push
inc
popa
jbe
push
imul
add
insb
addr16
jbe
insb
arpl
ja
jns
bound
push
push
pop
push
dec
arpl
jno
arpl
jp
bound
dec
popa
jb
arpl
insb
fs
inc
push
arpl
add
jbe
pop
jae
dec
popa
inc
jae
add
push
jns
insb
outsb
push
push
push
bound
dec
add
imul
push
dec
jb
jne
push
add
pop
push
dec
inc
jns
dec
dec
push
push
dec
push
dec
add
inc
insb
arpl
inc
pop
dec
dec
push
push
jo
add
jns
inc
dec
dec
jp
inc
add
inc
dec
jae
push
push
imul
jbe
dec
data16
popa
push
fs
push
dec
outsb
jns
push
dec
dec
pop
dec
dec
insb
jbe
push
outsl
popa
dec
push
je
ja
push
jo
inc
jne
jae
dec
push
inc
dec
inc
jp
dec
inc
imul
jns
imul
push
push
push
arpl
insb
data16
jae
push
push
push
fs
imul
dec
push
dec
ja
pop
dec
jae
inc
jbe
push
jo
or
mov
scas
push
push
sbb
and
pop
loopne
add
sub
add
lret
nop
fildl
pop
movsb
dec
lods
sarl
adc
xchg
fbld
lret
add
xchg
lea
call
inc
pop
sub
outsb
aad
in
jp
subb
xorl
jg
int3
inc
lret
aam
and
or
iret
xor
dec
pop
mov
push
xchg
icebp
clc
jp
pop
inc
jo
bound
ror
mov
xchg
sub
cmp
inc
cmc
cli
lock
adc
js
sarb
sbb
icebp
test
test
aad
imul
dec
add
mov
repnz
outsl
mov
sub
leave
mov
cmp
and
adc
cwtl
add
sbb
pop
test
negl
add
pop
call
lcall
xchg
sub
xchg
das
and
cmp
adc
mov
jne
or
lods
dec
enter
xchg
pop
int3
lret
jo
dec
adc
xchg
mov
pushf
int3
jp
loop
fiaddl
rcll
add
into
test
sbb
or
dec
imul
in
mov
dec
test
mov
test
cltd
sub
or
out
push
inc
inc
pop
fisubrs
adc
std
pop
mov
jae
out
je
out
xchg
push
cmp
sub
fidivrs
mov
data16
mov
push
repnz
mov
ss
movsl
outsb
fsubrs
les
divb
dec
mov
jmp
jno
mov
xchg
pop
xchg
add
adcl
jae
shrl
mov
into
repnz
or
je
xchg
jle
bound
mov
out
push
das
lahf
sub
aad
push
pop
fsubs
ret
sbb
popf
popa
sbb
or
sbb
bnd
rorl
outsl
inc
lock
outsb
rclb
push
sub
mov
sbb
push
mov
adc
cld
push
cmpsl
pushf
push
push
xchg
sti
fldl
in
insb
inc
fidivrs
sbb
add
add
fimuls
xor
lcall
fxch
loope
addr16
inc
mov
and
xchg
lret
scas
mov
sub
sub
and
lods
cli
js
pop
shr
xor
test
inc
addr16
in
cmp
test
aad
mov
mov
adcb
sub
mov
pushf
push
pop
int
sbbl
inc
rorb
mov
add
or
leave
and
adc
shlb
xorb
sti
and
in
in
sub
inc
dec
stos
sub
xor
mov
test
or
xor
movl
sub
sub
pop
lret
push
or
sbb
aad
scas
push
sbb
mov
or
das
xchg
dec
jo
push
in
sbb
mov
cltd
push
sarl
je
mov
cmp
fsts
mov
pop
xchg
adc
sub
push
dec
jmp
mov
pop
test
or
movl
cs
scas
push
mov
push
jb
sahf
xchg
popf
aas
rolb
jns
sbb
pop
call
pop
leave
and
jge
mov
add
jno
push
sahf
enter
lahf
push
in
mov
test
mov
dec
sbbb
stos
fwait
jecxz
js
fadds
lret
movsb
inc
shlb
rcr
movsl
jge
sub
push
xor
push
inc
jnp
jae
push
cld
push
stos
repz
repz
lcall
push
loop
xor
or
fdivr
movsb
clc
into
cwtl
sub
es
cmp
cmpl
mov
loop
popa
subb
ret
ret
adc
or
orb
mov
add
aam
jmp
lret
adc
push
sub
dec
mov
stos
xchg
and
mov
shl
cmp
sarl
jl
jl
xchg
cmp
xchg
mov
mov
mov
add
add
jl
jg
ljmp
xchg
dec
jp
pushf
add
sub
add
cmc
jmp
in
mov
data16
lock
cltd
std
adc
or
leave
es
test
push
lods
add
inc
ss
out
rcl
in
cltd
jp
cwtl
in
das
xchg
xchg
cld
in
cmp
xlat
stc
mov
mov
test
xor
mov
jge
lret
mov
or
test
or
add
sahf
push
repnz
jg
fdivrs
or
add
test
push
addr16
cli
adc
inc
lahf
enter
das
sbb
cmc
mov
sbb
aam
jbe
outsl
xchg
rorb
mov
jo
sub
pop
out
adc
cmp
jl
xchg
aad
dec
sbb
mov
outsl
fbstp
xor
popa
rcrb
mov
inc
adc
aaa
stc
push
aam
popf
pushl
test
jg
mov
push
xorl
icebp
add
push
rorb
mov
rolb
loope
sbb
sbbb
mov
sti
mov
cs
pop
ja
push
dec
addr16
shl
les
bound
mov
xor
mov
popa
sbb
xlat
and
jl
js
sub
and
ret
in
mov
mov
and
xor
and
mov
sarl
incb
mov
out
pushf
mov
in
cmpsl
imul
popf
dec
inc
xchg
out
pop
les
ljmp
shr
das
cmpl
fldl2e
xchg
mov
dec
cltd
gs
movsb
push
mov
sub
in
push
mov
es
push
ret
mov
xchg
or
cmp
push
repz
inc
and
fnstenv
xchg
jo
add
imul
inc
into
outsl
cmp
xor
add
mov
clc
pop
rorb
pop
or
xchg
xor
inc
scas
sub
js
dec
aam
cmp
sub
add
lcall
mov
fisubrl
mov
sub
add
cmpsb
push
aas
dec
sub
push
xor
in
xchg
cmpsl
je
push
jp
les
mov
pop
and
pop
incb
movsb
in
inc
inc
xchg
dec
test
xor
sbb
int3
adc
ja
xchg
xlat
fmul
xchg
dec
sarl
aam
push
add
and
testb
subl
int3
push
repnz
lods
loope
cmpsl
pop
rcrl
pop
inc
imul
jb
dec
pop
je
rolb
push
pop
outsb
das
es
mov
jecxz
pop
cmp
lods
cld
mov
out
in
jmp
push
mov
cwtl
push
xchg
movsl
pusha
cli
mov
xchg
jecxz
in
in
dec
pop
mov
add
jmp
sub
jno
stos
test
xor
mov
cs
icebp
in
das
jmp
and
add
cmp
cs
arpl
int
mov
bound
jne
add
lock
xchg
bound
xorb
sbb
xchg
mov
sti
fstl
jae
fsubrl
clc
outsl
mov
call
lcall
mov
addr16
inc
inc
aaa
and
mov
mov
fiadds
cld
pop
aad
pop
cli
xor
outsl
scas
pop
push
xlat
mov
xchg
mov
or
arpl
push
cmp
push
or
lret
shll
mov
adc
repnz
insb
outsb
pop
scas
subl
sub
lcall
and
cli
xchg
xor
dec
adcl
idivb
call
adc
cmp
in
loop
les
aad
cs
ja
out
stos
xchg
inc
mov
popa
jle
jne
inc
ss
dec
push
adc
lcall
mov
cmp
lret
cmp
divb
shrl
adc
xchg
loop
jg
out
lds
inc
or
pop
add
dec
jp
hlt
aas
push
dec
in
adc
loop
push
popa
std
arpl
into
jbe
insl
mov
add
add
add
push
mov
jg
inc
int3
aad
lcall
sub
add
ret
jns
xchg
out
fnsetpm(287
repz
pop
mov
cmp
mov
movsb
iret
addr16
dec
mov
cmpb
xchg
jns
pop
test
mov
aam
insb
pop
nop
pop
mov
adc
fisubl
andb
dec
addb
push
das
aaa
enter
icebp
lods
aas
ds
fildl
je
cmc
mov
cld
pop
or
out
subl
les
into
mov
or
imul
cmp
cmp
mov
in
jns
push
cltd
push
push
mov
adc
jmp
hlt
push
inc
or
lea
imull
mov
sub
shll
stos
in
mov
jg
add
mov
cwtl
std
adc
jae
aas
inc
add
push
push
xchg
roll
xor
aas
mov
pop
stos
pop
and
cmpsb
push
xor
sbbb
loopne
sub
xor
push
adc
ret
sub
dec
mov
outsl
call
lcall
cmc
imul
push
jle
shl
pop
inc
mov
fsubl
rcrb
std
fisubrs
ffreep
or
mov
fadd
cmp
imul
mov
sub
adc
sahf
mov
dec
loopne
adc
xchg
js
aad
pop
adc
cwtl
inc
adc
inc
ja
xchg
or
jmp
inc
mov
les
mov
stc
mov
cmp
out
pop
inc
pop
out
mov
mov
inc
mov
inc
mov
andl
pop
stc
jmp
sub
lock
int3
sbb
xlat
subb
jbe
lcall
xchg
adc
pop
test
add
nop
pop
repnz
mov
push
fisubrs
cmp
mov
pusha
mov
sbb
inc
push
les
pop
jno
rolb
sub
add
fsub
pushf
fidivrl
out
pop
xchg
xchg
xchg
mov
add
pop
arpl
dec
in
lahf
jae
xchg
jg
mov
mov
add
mov
jno
insb
mov
sbb
js
sub
or
lret
call
xchg
cmc
push
inc
xchg
vmread
fs
jge
enter
outsb
loopne
insb
movsb
jb
inc
and
frstor
push
mov
mov
mov
jmp
adc
rorl
xor
std
xchg
jge
inc
inc
xchg
and
sub
jmp
insb
repnz
inc
test
sbb
jle
xor
gs
outsb
stc
int
pop
inc
decl
lret
dec
bound
push
pushf
sub
loop
out
mov
insb
mov
sbb
mov
inc
ret
mov
push
jle
out
pop
jns
xor
test
mov
aas
daa
test
imul
dec
cmpsb
lods
mov
leave
or
xlat
mov
hlt
mov
pop
sahf
mov
cmp
push
sub
cmp
mov
orb
mov
adc
lahf
es
pop
sbb
sarl
xor
aam
push
das
xchg
sbb
xchg
xchg
in
or
fildl
scas
inc
movsw
jle
pop
sub
in
lods
mov
add
mov
in
stos
xor
push
pop
add
dec
adc
dec
rcrb
xchg
fwait
sbb
std
repnz
and
or
adc
cli
aam
js
and
inc
stos
popa
xchg
jns
scas
test
cltd
jge
sbb
sub
pushf
aam
js
dec
cli
push
in
aas
dec
mov
inc
rcl
scas
pop
jo
mov
rolb
test
jae
in
xor
cltd
pusha
and
imul
xchg
scas
adc
xchg
xor
or
lret
lahf
shlb
xor
push
addr16
mov
mov
aas
cli
jp
int
adc
pop
inc
mov
adc
icebp
add
sub
dec
sub
cli
mov
and
outsb
cltd
jno
mov
test
sbb
adc
fisubl
dec
fsub
sahf
jo
shll
jge
lret
iret
ret
jl
sub
mov
mov
add
pop
jecxz
repz
aas
iret
pop
xchg
inc
dec
inc
cld
sub
movsb
add
sub
add
ret
movsb
scas
stc
push
arpl
mov
ss
cmp
cltd
repnz
mov
add
jnp
jb
xchg
adc
les
loopne
pop
cmp
xchg
decb
and
outsb
sbb
add
es
ret
and
adc
sbb
rcl
rorb
call
mov
add
push
shlb
xchg
int3
stos
cmpsl
push
xor
popf
pop
pop
das
in
sbb
std
stc
and
mov
xor
in
mov
mov
inc
daa
sub
jb
pop
mov
scas
fimuls
cmp
in
fistps
jbe
xor
mov
and
xchg
lahf
test
stos
stos
out
jg
mov
mov
ret
jnp
out
push
xchg
and
subl
dec
mov
movsb
es
push
cmp
loope
pop
loope
pop
hlt
orl
sub
mov
outsl
adc
jl
or
outsb
fstpl
pop
pop
lret
xchg
imul
or
push
xchg
pop
loopne
mov
hlt
mov
push
daa
mov
inc
js
or
jl
mov
and
adc
ret
cmp
shl
or
out
mov
ss
sub
mov
clc
mov
icebp
int
je
repz
or
cmpsl
into
les
sub
les
shrl
aaa
mov
insl
mov
loope
dec
outsl
pop
mov
sub
addr16
ret
not
ja
fprem
xor
xor
cmp
mov
fcmovb
stos
loop
inc
xor
dec
ds
jno
fmuls
xor
mov
dec
mov
push
mov
cmpsl
in
stos
push
cmpsb
icebp
jge
and
cmp
jmp
add
jno
push
mov
push
mov
subl
mov
sbb
pop
xlat
add
cmp
jnp
pop
mov
imul
sub
add
cmp
sbb
sub
call
xchg
cmp
pop
sbb
insl
add
mov
call
sbb
scas
pop
jnp
out
dec
stos
cmp
mulb
lcall
fmul
dec
stc
jg
adc
rcrb
push
xchg
pop
aaa
test
roll
out
xor
jp
shll
push
and
roll
fiaddl
mov
push
fcoml
mov
imul
push
lret
lret
jbe
mov
jbe
idivl
add
loopne
push
xor
cli
addr16
pop
jge
and
xchg
or
add
je
mov
pop
sahf
sub
lods
lahf
push
data16
pop
test
dec
jecxz
cmp
or
mov
movsl
or
xchg
xor
sbb
roll
aam
jo
outsb
lea
mov
mov
adc
adc
push
ret
sbb
xchg
enter
and
dec
mov
push
ret
test
shl
das
sarb
fisttpl
pusha
push
jb
pop
ret
xor
jbe
pop
push
push
mov
out
mov
popa
mov
xchg
gs
icebp
pushf
bound
jo
mov
fdiv
shr
adc
js
xor
lds
push
adc
cli
xchg
daa
mov
push
lods
jbe
jg
xchg
xor
push
fldl
jge
or
lea
mov
cmpsl
xchg
xor
xchg
push
inc
xor
jo
jo
sub
mov
aad
dec
xchg
ret
call
cmpsb
xchg
mov
inc
cmpsb
es
fstl
fstpt
bound
xlat
out
inc
add
cmp
sub
dec
bound
jno
iret
push
mov
fidivrl
cltd
andl
pop
stos
lock
cli
xor
pop
fcoms
push
xchg
or
sbb
add
jnp
sti
mov
mov
inc
adc
cmp
add
shll
aas
add
shlb
xchg
pop
jno
and
mov
sub
test
test
lods
sbb
ljmp
jmp
insl
sahf
mov
xchg
lahf
add
sbb
insl
push
add
aam
inc
cmp
test
fildll
and
test
push
xlat
scas
jne
push
mov
and
mov
rclb
sub
cmpsl
or
int
shll
enter
scas
pusha
int
sub
xchg
std
stos
std
mov
push
rolb
mov
or
mov
cli
test
int
or
lds
jnp
jns
loopne
mov
call
and
xchg
in
dec
int
dec
int
mov
adc
fnstcw
push
mov
or
xlat
jmp
test
mov
stos
jnp
aas
dec
icebp
dec
mov
pusha
add
cmp
push
lock
jg
fnstenv
push
mov
sbb
ss
ss
test
jmp
dec
movsl
scas
or
xchg
shl
movsb
cmpsl
mov
jge
jne
imul
das
into
sub
ret
mov
pslld
je
mov
push
jae
xor
xlat
aas
or
inc
arpl
sbb
dec
ret
lods
mov
xor
rcr
shrl
lds
popf
xchg
pop
arpl
orb
or
dec
nop
and
fldl
scas
pop
xchg
mov
jbe
stos
popa
and
or
aaa
sub
jp
int
xchg
jbe
mov
jno
jge
cmp
sbb
xor
adc
xchg
imull
fisubrl
mov
test
or
or
sub
dec
aad
dec
xchg
push
xor
hlt
das
jno
xlat
shll
scas
loop
stos
dec
gs
lods
jb
jno
push
push
adc
lock
lods
dec
xchg
mov
or
cmp
adc
sub
adc
xchg
or
enter
xchg
arpl
add
cld
push
push
dec
xchg
jns
dec
out
pop
jbe
push
imul
lea
push
push
or
jne
mov
popa
mov
sbb
loopne
mov
adc
rclb
es
jns
aaa
mov
mov
sbbl
ja
pop
jbe
xor
xchg
loopne
aas
hlt
pop
mov
mov
mov
fucomip
push
sub
sbb
fnstenv
mov
dec
fcoms
sbb
gs
mov
test
and
add
pushf
mov
roll
xchg
cs
pop
sbb
in
cmp
adc
mov
stos
pop
mov
adc
cmpsl
mov
mov
add
lret
mov
sub
xor
scas
ss
fstps
and
or
mov
jae
pop
sub
push
mov
cmp
pop
and
sbb
jo
sbb
mov
hlt
outsb
in
and
ret
gs
insl
ret
push
or
fwait
mov
xor
adc
movsb
cmc
ret
sub
cmp
pop
fiaddl
mov
pop
and
mov
in
std
xchg
ljmp
xchg
xchg
aas
call
mov
fbstp
int
add
std
lcall
mov
xor
inc
pop
push
push
inc
out
stos
xchg
push
sub
add
push
push
jne
mov
addr16
mov
movsl
sarl
push
push
xchg
inc
in
cmpl
sbb
sti
xchg
cmp
fdivrs
cld
imul
cli
loop
orb
add
ret
movsl
cld
cmp
daa
ja
fistpl
ljmp
je
sbb
inc
xor
pop
sbb
std
pusha
mov
add
cltd
mov
adc
movd
mov
int3
jo
cmp
mov
cmp
mov
std
aas
fimuls
sarl
xchg
add
add
ja
mov
mov
or
loope
cli
pop
xlat
inc
push
cmp
fstpl
jns
pop
push
mov
test
xchg
cli
xor
cmc
pushf
out
arpl
pop
push
cmp
pop
push
mov
lea
popf
cltd
pushf
sbb
insb
dec
and
or
cmpsl
mov
xor
mov
loope
imul
xchg
fucomi
arpl
jl
push
rclb
xchg
dec
xor
repnz
nop
clc
cmp
add
mov
scas
xor
loopne
and
pop
mov
lds
jnp
jmp
xchg
pop
lock
sub
out
xor
rorb
and
lods
iret
push
pushf
in
mov
lods
iret
cmp
daa
sahf
cld
pop
or
push
jb
test
mov
js
ja
or
xor
and
test
fucomip
push
int3
cmp
cmp
test
fldz
insl
sub
call
lods
scas
mov
call
mov
push
cmp
addr16
das
aam
jl
cmpsb
lahf
mov
cwtl
test
mov
mov
aad
inc
push
mov
ss
inc
jmp
test
push
cs
xrelease
call
lea
sbb
push
sub
jbe
mov
jmp
jnp
mov
movsb
mull
addr16
xor
pop
and
jmp
jns
xor
pop
mov
fcmovbe
lahf
negl
mov
test
scas
push
mov
mov
lea
push
lods
lahf
gs
mov
test
cmp
mov
pop
push
add
sub
or
xchg
mov
clc
sub
arpl
mov
lret
nop
lahf
xchg
rolb
or
pop
pushf
mov
clc
stos
cmp
xchg
fcompl
cwtl
jb
movsb
orb
add
jp
fucom
mov
and
cmp
cmp
add
add
sbbb
lret
popf
aam
fs
cmpsb
mov
pop
jmp
pop
pushf
push
mov
cmc
lds
push
fwait
xchg
mov
lods
mov
lret
popf
sub
sahf
cmpb
testl
or
pop
xchg
cwtl
js
mov
jno
cs
inc
cmpsb
push
in
push
xor
inc
push
mov
int3
movsb
lea
xchg
int3
clc
inc
andl
aam
sbb
out
dec
sarb
movsl
jbe
jno
xorb
dec
add
or
rorl
inc
jecxz
cmp
or
iret
mov
pop
push
mov
fcomp
dec
pusha
mov
outsb
mov
movsb
fstl
sti
insb
lock
ret
inc
or
leave
or
mov
jmp
iret
out
out
lods
and
mov
add
add
pop
jmp
mov
pop
sbb
sarl
call
dec
lret
adc
lea
outsl
sbb
cmp
pusha
test
xchg
fistpl
push
xchg
movsl
or
push
sub
jmp
aad
xchg
xchg
adc
xor
or
fimuls
mov
mov
outsl
pop
ss
jnp
mov
mov
xor
dec
mov
inc
pop
pop
or
mov
repz
aaa
mov
mov
and
jp
mov
dec
mov
xchg
cltd
xchg
jbe
sahf
inc
cmp
sub
push
pop
les
cmp
hlt
pop
cmp
movsb
filds
mov
cltd
mov
mov
std
fbld
mov
cmpsb
jae
iret
cmova
push
dec
mov
xchg
test
push
push
cmp
dec
mov
adc
mov
inc
pop
xchg
mov
out
into
jle
orb
stos
mov
jmp
push
xor
jbe
adc
fmull
lret
xor
inc
jno
and
mov
lret
add
add
test
pop
lcall
pushl
push
out
in
repnz
in
add
sub
add
test
sub
xchg
test
mov
test
xor
movsb
pop
jb
into
jecxz
stc
inc
pop
mov
test
push
mov
and
stc
mov
mov
xorb
mov
js
out
pop
and
xchg
ficoml
lret
inc
xor
arpl
mov
ficoml
mov
jns
xchg
nop
dec
iret
or
inc
out
fisubl
pop
das
enter
jge
rclb
push
mov
inc
loop
cltd
lock
mov
sub
ret
mov
ds
fwait
mov
fcompl
dec
mov
shrb
jle
pop
lcall
imul
adc
out
rorb
ljmp
lock
stc
inc
dec
pushf
inc
cmp
cmpsb
add
call
loop
movsl
in
inc
push
push
push
mov
movsl
enter
fs
or
cwtl
sti
addr16
mov
daa
xor
push
outsl
into
lret
lock
cmp
pusha
lahf
push
das
inc
in
test
mov
and
jo
cwtl
jecxz
dec
sbb
inc
and
mov
mov
insb
dec
shrb
mov
popf
outsb
jae
sbb
les
test
xchg
pop
sarl
jno
test
in
lahf
inc
lods
sbb
adc
mov
and
call
mov
and
adc
jmp
cmp
fdivrl
sub
and
les
fcoml
lahf
and
addr16
adc
mov
movsb
popf
dec
cwtl
xor
jns
stos
ss
dec
mov
scas
mov
popa
imul
in
aas
jb
loopne
aas
sahf
movsb
sbb
je
les
stos
xchg
mov
dec
scas
sub
flds
pop
mov
jle
test
adc
pop
and
push
pushf
push
sbb
mov
xchg
xchg
pop
add
dec
test
add
int3
xchg
lret
jle
pop
or
and
mov
add
add
add
cmp
jecxz
dec
inc
call
sbb
xchg
adc
mov
pusha
and
out
aaa
sbb
jge
aad
add
outsl
lea
test
jle
push
push
ficoms
mov
aaa
out
sti
popa
push
loop
fwait
and
divl
pop
cmc
popa
xchg
mov
movsb
ja
jl
dec
jne
sbb
add
mov
int3
ss
ret
mov
add
enter
xchg
dec
ja
insl
fnsave
xor
retw
mov
pop
out
imul
adc
add
sahf
adc
pop
loope
popa
gs
xorb
roll
adc
mov
adc
jnp
fdivrs
jge
inc
mulb
test
shl
adc
nop
pop
fwait
pusha
xor
pushf
repz
cld
mov
push
mov
enter
out
jo
shll
notl
push
jbe
mov
das
lea
and
pop
jnp
mov
xchg
mov
repz
push
jp
scas
push
jmp
inc
dec
pop
xchg
cli
inc
add
scas
imul
push
arpl
lods
dec
mov
mov
incb
sbb
dec
popl
ja
ja
mov
inc
or
sbb
mov
in
cwtl
jge
mov
xchg
dec
andb
sub
lcall
jge
xchg
dec
mov
xor
xor
inc
mov
mov
ja
mov
mov
imul
mov
sub
pop
push
or
mov
movsl
xchg
loopne
jecxz
inc
push
pop
int
test
ret
and
jo
rcrl
and
negl
push
test
xchg
xchg
jae
mov
xchg
dec
addr16
mov
repnz
mov
adc
mov
xor
fdivrl
iret
sub
das
mov
push
inc
xchg
sbb
add
lods
repz
popa
outsl
xor
cmc
loopne
push
dec
cmp
add
sub
sub
sbb
or
cli
aam
inc
mov
cmp
add
lock
dec
mov
sub
leave
lods
inc
inc
ss
loopne
mov
flds
inc
lods
dec
es
mov
fwait
inc
out
dec
jmp
push
stos
lahf
xchg
dec
filds
movsl
xor
push
bound
stos
iret
loop
addr16
lret
xchg
movsb
lcall
hlt
lcall
jp
cld
ficoms
mov
inc
mov
dec
nop
fdecstp
js
sarl
fimull
mov
pop
inc
jne
mov
pop
fsubr
movsb
pop
mov
add
cmp
xor
rcll
dec
push
out
push
dec
mov
xchg
add
jp
xlat
inc
popa
shll
cld
iret
enter
das
xor
pop
jmp
push
dec
imul
add
dec
into
push
cvttps2pi
ret
mov
iret
jmp
push
outsb
mov
adc
dec
xor
xor
add
lcall
ret
pushf
rcll
outsb
push
jl
js
bound
leave
in
cmpsb
shll
cli
add
cltd
adc
fwait
and
xchg
xor
xor
fldenv
adc
push
cmp
add
mov
mov
xor
scas
dec
jg
xor
add
call
or
test
mov
cli
in
pop
xor
sbb
mov
outsl
fdivrp
lds
adc
arpl
mov
mov
sbb
mov
fcmovnb
cmp
aaa
mov
fdivs
cmpsb
fwait
xchg
push
int
lret
inc
and
aaa
iret
pop
sbb
xchg
cmpsw
out
dec
cwtl
mov
dec
mov
dec
and
popa
mov
lea
test
mov
xlat
push
repnz
dec
fxch
push
or
orb
mov
cli
movsb
jle
mov
iret
testb
or
inc
mov
adc
sub
add
arpl
dec
push
jg
jnp
adcl
gs
add
jle
dec
sbb
push
aas
jno
clc
pop
xchg
sti
sub
scas
test
mov
jb
insb
push
mov
lret
flds
test
pop
imul
and
in
push
mov
or
aas
mov
mov
sbb
mov
fdivl
sub
xor
xor
mov
jae
test
les
das
mov
inc
rcll
repnz
xchg
sbb
cmp
cltd
mov
outsl
xor
xor
filds
push
mov
mov
insb
in
int3
cltd
adc
pusha
sbb
insl
dec
push
outsl
outsb
icebp
inc
jp
jl
addr16
dec
jnp
cmp
inc
insl
setg
and
es
shrl
mov
mov
mov
or
das
sbb
add
or
lret
dec
adc
jg
ljmp
mov
xor
pop
xor
loop
push
jb
clc
dec
mov
jge
movsl
mov
mov
into
fidivs
sub
dec
adc
movsb
dec
loope
imul
xorl
arpl
pop
xor
pop
mov
push
mov
push
xchg
gs
clc
rcrb
adc
inc
xor
push
pop
sbb
or
inc
adc
cmp
inc
mov
adc
mov
lds
pop
push
andl
arpl
jmp
xor
jg
jge
adc
bound
xchg
pop
test
jnp
cmp
push
pop
dec
push
inc
push
xor
push
data16
xchg
addr16
mov
sub
std
cli
xchg
xor
ret
shlb
xchg
or
shll
outsl
js
or
add
scas
push
xchg
add
dec
cmp
mov
and
dec
adc
shrb
mov
cmp
xchg
sbb
out
dec
jmp
fcomps
mov
movsl
ds
mov
mov
jl
in
dec
mov
out
mov
pop
jne
int3
nop
mov
add
jnp
xlat
mov
mov
mov
add
in
jnp
sub
rep
and
fisubl
jno,pt
mov
dec
xor
divb
jecxz
inc
inc
push
int
iret
and
mov
dec
pop
ficoms
lret
movsb
push
loop
inc
cmp
mov
icebp
test
ds
mov
mov
pop
sbb
push
push
ja
sub
jne
jle
jg
pop
sbb
adc
addr16
sub
int3
cmp
decb
fisttps
jns
mov
mov
jp
shll
test
out
in
mov
inc
lahf
dec
pop
or
or
jg
cmc
dec
divl
and
inc
sbb
push
lds
mov
in
lds
ljmp
inc
inc
sub
mov
std
or
rorb
add
insb
andb
push
mov
mov
jmp
int
inc
loope
add
lret
mov
incl
je
cmp
mov
xchg
es
enter
or
pushf
or
out
cmpsb
inc
shl
sub
icebp
and
adc
pop
gs
int3
test
cwtl
mov
xchg
lods
jecxz
mov
insb
repz
xor
dec
push
sbb
shrb
fistl
outsb
sub
cmp
adc
inc
sarl
lahf
js
xchg
pop
mov
pop
add
pusha
inc
pusha
or
popf
ss
imul
xchg
out
out
inc
loop
dec
cmp
ret
cmpsl
pop
les
psubd
sub
test
fmull
mov
push
shll
xchg
push
movsl
mov
lock
mov
dec
popa
dec
test
aas
push
push
cmc
lock
daa
movsl
sub
dec
add
mov
pushf
sbb
xchg
jl
fmull
sub
lea
xor
loopne
fists
sarb
addr16
fstl
jo
cmp
push
jp
jo
test
sub
sbb
gs
cmpsl
jb
mov
and
add
imul
push
loope
sti
cmp
addl
jg
jb
mov
add
leave
add
sbb
jmp
mov
sub
mov
mov
add
shrb
cli
pusha
fscale
mov
jp
cmp
jns
inc
fiaddl
jp
push
movsl
int
cld
mov
cmp
mov
jg
popa
ret
clc
xchg
dec
inc
imul
sbbb
jmp
cli
ljmp
xor
xor
dec
js
lods
push
dec
add
sbb
xchg
jg
push
mov
dec
sub
in
or
jae
aad
call
adc
mov
popf
fiadds
adc
adc
dec
mov
pusha
fldenv
xchg
sahf
pshufw
pop
jo
pop
cmp
nop
mov
cwtl
les
dec
imul
cmp
imul
shll
sub
push
shlb
add
mov
mov
adc
sbb
mov
cmp
ds
ret
mov
ds
sbb
mov
aaa
cmp
inc
nop
pop
jg
xor
pop
popf
rolb
pop
cmp
or
adc
lret
aas
mov
mov
inc
cltd
cli
test
rcll
daa
sbb
ror
cld
pop
mov
adc
adc
stos
xor
mov
lahf
push
bnd
cmpsl
out
shll
aad
xchg
push
mov
mov
mov
xorb
fsubs
rorb
jg
outsb
mov
fs
popl
das
loope
cmp
dec
leave
insl
test
cmp
add
mov
push
arpl
aam
push
inc
in
sbb
je
jo
test
push
mov
jae
mov
xor
lahf
call
rol
cld
adc
cmc
inc
out
pop
jl
or
add
test
fcom
aas
out
out
jge
pop
popf
in
fidivl
add
add
add
add
in
pop
mov
xchg
pop
pop
jo
arpl
lock
cmp
scas
pop
pop
push
fwait
or
mov
imul
or
add
inc
sar
mov
adc
imul
popa
cwtl
mov
cmp
inc
mov
xchg
aam
sub
mov
test
sub
arpl
out
mov
pop
lret
push
cs
adc
pusha
sahf
sbb
ja
cli
mov
push
adc
ret
cltd
cmc
jae
in
inc
cmc
arpl
imul
es
js
sub
push
dec
mov
aas
xchg
cmp
mov
fiaddl
push
bound
addr16
rclb
test
or
clc
and
ljmp
mov
mov
hlt
sti
notl
and
mov
and
scas
mov
lea
jp
push
xor
push
jnp
sti
call
fildl
mov
lahf
xor
push
mov
adc
je
in
inc
push
jae
push
daa
cs
jmp
mov
push
mov
push
cmp
mov
jns
pop
inc
mov
sub
jp
lods
jno
fxch
jbe
aad
or
and
and
jo
outsl
stc
cmp
ss
add
lods
out
pop
push
mov
aas
loope
insl
inc
mov
push
fistl
outsb
sub
adc
decl
insb
dec
stos
push
push
push
outsb
jns
xor
addb
cmp
in
push
out
enter
es
js
fbstp
and
sub
push
push
call
arpl
daa
ss
sbb
sahf
jb
push
fidivrs
inc
push
pop
lcall
mov
dec
in
mull
aas
inc
popf
loope
int
scas
dec
outsb
es
inc
and
ret
outsl
test
test
adc
popf
mov
pushf
mov
or
es
into
sbb
mov
cwtl
mov
push
addb
add
add
cld
mov
adc
pop
push
mov
add
add
leave
imul
xlat
pop
xchg
and
test
retw
clc
push
xchg
test
mov
out
push
mov
adc
out
das
add
and
lea
push
roll
pop
es
inc
call
enter
mov
scas
lahf
loopne
ss
cmpsl
out
shll
add
inc
lcall
cmpsl
xchg
mov
fucom
xor
mov
or
adc
xlat
inc
pop
fs
jmp
push
test
inc
mov
mov
and
shll
insb
into
sub
jo
mov
movsl
mov
imul
mov
adc
mov
push
in
cli
jno
sub
xor
pop
hlt
xor
outsb
fldt
add
jmp
pop
pusha
pop
push
dec
rcll
sbb
xchg
rclb
mov
aas
lods
xchg
cmp
ficompl
gs
out
xchg
jns
repnz
xor
sbb
and
mov
xchg
mov
rcrb
dec
xchg
xor
or
enter
cmc
icebp
xchg
in
or
arpl
pop
rorl
idiv
cmp
mov
or
mov
loopne
lcall
ljmp
mov
jo
and
fbstp
fisubl
cmp
inc
rcrl
nop
sub
shr
js
bound
mov
mov
add
mov
movsl
xchg
cmpsl
cli
xchg
cmp
mov
sbb
outsl
push
mov
and
push
xor
push
into
je
imul
add
lock
movsl
add
jo
aad
mov
xor
fcoml
dec
lds
dec
or
jbe
test
dec
nop
frstor
xchg
cmp
adc
stc
fwait
test
add
pop
pop
pop
fistpl
push
fstps
xor
add
add
add
push
push
orb
shlb
enter
push
pop
sti
hlt
sbb
push
int
loope
dec
add
out
lret
xchg
loop
push
push
mov
pop
mov
in
les
xor
jns
xor
outsb
inc
add
xchg
js
xchg
jb
sbb
out
aaa
rdtsc
adc
mov
nop
fidivl
adc
icebp
loopne
in
mov
xor
loopne
sub
js
xor
es
push
es
pop
into
add
lock
dec
shll
test
in
pop
mov
fcompl
lahf
inc
adc
inc
lock
mov
sahf
mov
enter
sub
cmc
xchg
mov
push
sarb
lahf
sahf
repnz
je
fnsave
pop
dec
pop
stos
arpl
ret
cmp
adc
mov
push
push
cld
cmp
das
inc
mov
add
mov
mov
rorb
lcall
int3
jnp
jle
out
adc
stos
or
or
xchg
and
or
or
in
inc
mov
cmc
push
imul
in
and
xchg
xchg
pop
insl
in
mov
andl
adc
scas
xchg
out
jle
pop
push
clts
inc
shlb
test
jae
and
and
sbb
xchg
push
adc
push
fidivs
sub
ss
push
cli
cmp
out
jp
in
jecxz
nop
dec
shll
dec
sub
jmp
adc
push
jae
je
xchg
sarl
outsb
stc
jbe
int3
mov
push
inc
mov
imul
mov
and
cs
lret
inc
cs
adc
dec
and
xor
mov
shl
in
out
stos
xchg
fst
sti
pop
sub
push
iret
jmp
cmc
adc
movsl
fwait
nop
in
roll
jnp
add
pop
jg
lcall
mov
ja
add
add
add
loop
imull
mul
xchg
cwtl
xor
xor
push
add
bound
xor
aam
gs
mov
mov
std
cmp
cli
pushf
ret
loope
xor
cli
in
adc
xchg
sub
in
clc
push
dec
mov
xchg
dec
pushf
or
dec
push
and
bound
out
jmp
stos
pusha
mov
adc
sub
enter
sbb
dec
adc
add
jg
push
pop
pop
pop
or
or
xchg
jb
xchg
hlt
icebp
icebp
pop
out
pop
sbb
in
out
dec
pop
xor
push
pop
or
pop
sarb
pop
mov
mov
shll
cltd
mov
loop
inc
push
add
adc
jecxz
mov
xor
jnp
pusha
xchg
jle
daa
jns
stos
add
bound
jmp
xor
ljmp
jb
cmp
xlat
ss
cld
xor
or
push
pop
mov
jne
or
repnz
clc
cmpsb
mov
leave
insl
add
jl
repnz
xchg
jle
and
out
les
adc
cmp
imul
inc
mov
xor
cmpsl
inc
ret
push
rcr
jae
xchg
jb
pop
shl
aaa
data16
push
mov
test
mov
push
ret
and
popf
ret
mov
jno
push
popa
enter
cmp
xor
lahf
imull
out
stos
in
jmp
jns
call
and
mov
push
jl
out
xchg
pushf
mov
pop
push
rolb
inc
js
std
pop
arpl
pop
aam
lea
gs
cltd
dec
out
pusha
and
hlt
sbb
mov
mov
aaa
sbb
jnp
mov
out
pushf
xchg
mov
pop
enter
mov
push
repnz
sti
adc
add
inc
sbb
mov
sahf
in
push
negl
adc
sub
adc
mov
les
cs
jo
cmp
aam
xchg
ljmp
cmp
icebp
mov
add
add
add
sub
xor
pusha
mov
andb
insl
stos
mov
jne
mov
sbb
sub
jecxz
xchg
stc
shll
in
inc
cs
mov
pushf
add
dec
lcall
jno
push
test
xor
dec
add
adc
or
xchg
mov
sub
sbb
test
xor
xchg
imul
shr
sbb
in
lcall
jae
movsl
rep
nop
pop
pop
add
mov
push
negb
stos
popa
xchg
adc
scas
call
cs
mov
mov
mov
inc
movsb
cs
idiv
sub
pop
or
push
xchg
aaa
stos
imul
xchg
pop
jb
xchg
lods
mov
sar
and
sbb
lods
mov
notb
or
arpl
dec
repz
jl
adc
pop
lret
sti
lods
jno
xchg
add
inc
inc
push
dec
jg
lods
fdivp
dec
addb
push
cmp
fstps
add
cli
movb
mov
mov
adc
lock
rolb
movsb
ret
je
and
or
andl
dec
pop
xchg
xor
jbe
dec
cmc
enter
sti
rorb
lret
aad
daa
push
sub
xchg
rclb
adc
fistps
cmc
loopne
adc
sbb
add
cwtl
and
adc
cmpsl
push
mov
mov
nop
mov
lret
lods
pushf
call
insb
mov
stc
cmpsb
mov
sub
push
lret
cmp
lods
loope
push
fsts
pop
push
rcrb
rdtsc
outsl
addr16
sub
pusha
js
mov
outsl
daa
dec
jb
jb
and
cmp
lret
je
jno
stos
int
out
rolb
mov
push
js
ljmp
movsl
xchg
nop
inc
push
sti
jge
or
rep
ficomps
or
xchg
pop
xchg
sub
jle
test
mov
add
outsb
push
cmpsl
sti
mov
loopne
outsl
add
add
sub
add
imul
jb
inc
aaa
pop
cmp
cmp
dec
ficomps
subb
xor
rcrb
rcr
mov
gs
cwtl
stos
mov
lcall
add
xchg
sbb
sar
jns
mov
ljmp
bound
jns
rcrl
out
or
push
in
push
aaa
sbb
repz
sarb
push
or
ja
mov
mov
in
inc
push
and
fsubs
add
sub
adc
xchg
jmp
addr16
mov
xchg
gs
add
lods
lret
shll
or
lret
pop
push
cmpsb
mov
mov
pushf
inc
lret
loopne
pop
adcl
into
pop
adc
in
daa
scas
call
adc
jmp
xor
and
jp
lds
xor
push
lods
mov
sbb
mov
push
fmuls
add
push
jbe
aaa
mov
lret
mov
mov
xchg
xchg
mov
push
lret
add
test
jb
out
and
mov
push
jle
repz
inc
in
ja
lock
cltd
xchg
jmp
aaa
mov
sub
ja
scas
xchg
sub
or
fs
das
popf
and
mov
enter
sub
push
cmp
movsb
xchg
bound
loopne
and
in
adc
push
fistl
pushf
das
out
inc
mov
repnz
cmp
pop
push
pop
test
nop
aas
dec
adc
jg
inc
int
jnp
jecxz
sub
dec
dec
bound
cmc
sti
test
sub
arpl
cmp
mov
lds
pcmpgtb
jg
in
pop
sub
imul
popaw
mov
ja
cltd
adcb
lds
dec
scas
les
ret
pop
and
roll
stos
movsl
cld
lret
dec
xchg
stc
pop
cli
dec
mov
lods
lods
in
xchg
stos
push
sbb
pusha
lea
pop
push
adc
add
push
idiv
or
xor
sbb
jge
add
add
add
mov
cmp
lcall
fwait
dec
jge
lods
ss
cli
addr16
je
jp
xlat
mov
xor
mov
sbb
mov
loope
call
cmp
sbb
dec
cli
cmp
dec
fs
mov
inc
cmp
jbe
int3
bound
and
jne
cld
call
ja
xor
int
mov
pop
shl
popa
call
fstps
pop
xor
add
xchg
jge
cwtl
fadd
shll
jp
test
inc
jb
bound
sub
ffree
loope
nop
xor
inc
mov
loop
ds
ror
sbbb
stos
call
stc
push
rolb
or
jne
push
or
pop
test
push
xor
out
daa
hlt
sahf
pop
popf
nop
add
adc
stc
push
or
pop
loop
dec
dec
dec
add
or
stos
mov
cmp
jno
xchg
jmp
cld
sbb
pop
or
mov
push
sub
add
das
xchg
daa
sub
cmpl
and
fidivl
out
xchg
rcr
add
sbb
sbb
loope
xor
add
lea
pop
ss
aaa
jnp
sbb
push
js
jbe
adc
mov
ret
and
ja
xchg
or
sub
xorb
mov
adc
nop
sbb
jbe
pushf
sub
dec
xor
mov
mov
cmp
test
mov
test
inc
sub
rol
in
scas
sub
pop
lcall
icebp
sub
fs
dec
cmpl
and
fsubrl
sub
mov
cwtl
movsb
inc
repnz
les
adc
loop
xchg
push
in
lea
imul
mov
dec
xchg
jo
pop
jo,pt
fdivrs
mov
call
jg
daa
xchg
pop
push
and
cmp
jbe
jl
add
ljmp
mov
jnp
pop
addb
sub
add
imul
push
lret
sbb
rorl
push
xorb
scas
out
ror
inc
jmp
mov
out
add
cmp
jecxz
sbb
clc
and
in
jae
xor
ret
dec
and
lods
ljmp
adc
xor
mov
cld
nop
and
lea
rcrl
jmp
imul
jae
ljmp
lahf
mov
adc
jmp
sub
jae
xchg
mov
cmpsb
xchg
in
sti
jne
ss
jne
pop
lods
mov
ret
jp
fcoml
mov
outsl
movsb
icebp
mov
loop
push
pop
push
call
push
iret
ss
call
mov
push
dec
into
mov
in
movsl
int
push
scas
and
lret
pop
jbe
pop
dec
mov
lahf
mov
pop
cli
nop
leave
int3
mov
cmp
outsl
add
jl
mov
adc
lcall
inc
inc
nop
sub
imul
icebp
movsb
cmp
cmp
mov
inc
stc
ss
xor
push
mov
scas
popa
sbb
out
jo
aas
push
addr16
dec
lods
fiaddl
aam
cmp
shlb
clc
in
lods
loop
cmp
mov
or
adc
and
and
and
loop
mov
sti
les
mov
mov
xchg
mov
ja
aad
fdivrl
jno
data16
push
and
cwtl
movb
pop
or
mov
cmpb
data16
fcmovnb
or
mov
jbe
add
aaa
sub
mov
jnp
add
fcmovnu
or
mov
xchg
insl
rcr
sti
shll
xchg
mov
and
mov
sub
xchg
enter
aad
imul
xor
mov
adc
jg
fcoms
sbb
add
jl
dec
mov
pop
xchg
mov
fcoms
cmc
js
mov
add
out
out
out
jg
arpl
cmp
add
add
add
cs
sub
adc
push
and
and
aad
shll
lcall
jmp
jne
push
cmc
jo
lods
push
lds
gs
mov
xchg
add
or
sub
mov
sbb
push
sbb
mov
adc
or
inc
fisubl
sub
popf
jnp
fwait
cmp
jmp
jns
ja
and
lods
lahf
dec
stos
aad
pop
pop
mov
lret
sbb
fisttpll
or
cmp
out
xor
mov
lahf
dec
call
dec
sub
pusha
out
push
repnz
aaa
mov
and
cs
hlt
and
add
xchg
test
ljmp
sbbl
shll
jecxz
sub
fsubl
pop
inc
jne
into
out
pop
xor
fists
sbb
sbb
sbb
mov
mov
scas
sbb
les
mov
push
in
btc
pop
pushf
hlt
js
xlat
jno
mov
orb
dec
sbb
sti
xchg
loop
inc
sbb
nop
sub
scas
into
fwait
push
mov
mov
movsb
sbb
inc
cmpl
or
inc
push
shlb
or
leave
inc
push
or
not
cmpsb
pushl
xchg
xor
call
mov
inc
test
pop
lock
in
lret
jbe
dec
lods
xchg
xchg
ret
push
push
adc
xlat
leave
aas
jb,pt
test
imul
mov
bound
push
and
test
and
xchg
pop
in
adc
lods
dec
sbb
mov
int3
cmp
mov
nop
lahf
cwtl
shr
cmp
imul
xor
dec
xor
sahf
mov
mov
in
stos
daa
dec
pusha
mov
push
repz
push
popa
inc
mov
push
dec
dec
cmc
cmp
ljmp
stos
mov
sbb
hlt
imul
int
sti
test
mov
loope
imul
fdivp
xchg
rorb
test
add
add
add
xchg
or
loop
sub
mov
cmp
xor
or
or
hlt
push
mov
insl
xchg
fisubrl
push
into
popa
mov
insb
pusha
push
dec
mov
in
jp
sbb
pop
add
sub
jo
stos
mov
push
jne
ficomps
dec
mov
xchg
dec
movsb
adc
into
adc
enter
fcompl
test
push
insl
imul
mov
push
or
mov
insb
xchg
das
inc
ret
dec
pop
scas
sbb
inc
or
and
loopne
loop
dec
pushf
cmovno
lea
test
lds
outsl
es
fdivrl
sub
adc
cmp
outsl
jns
cmp
jb
aaa
movsb
sbb
mov
loop
add
cmp
jae
push
data16
mov
xlat
jo
mov
je
add
scas
xchg
sarb
daa
in
dec
cwtl
push
inc
cli
xchg
adc
inc
mov
inc
mull
mov
xor
jne
push
and
jecxz
or
test
jnp
adc
pop
lods
test
cld
lock
or
shll
add
jecxz
int3
and
test
jbe
es
imul
jne
nop
push
lods
push
xor
clc
into
mov
popa
in
js
jno
ljmp
pushf
adc
lds
int
ficoml
adc
xlat
sbb
jp
mov
mov
mov
jle
arpl
outsl
iret
inc
outsb
les
pop
mov
or
xchg
test
shl
or
scas
pop
dec
xchg
cltd
and
xchg
push
jnp
or
out
int3
roll
dec
daa
jne
xchg
and
in
movsb
pop
cmp
fdivl
push
fcomps
push
test
rcr
lods
or
push
cmp
outsb
xor
addr16
mov
daa
mov
cmpsl
add
inc
and
xlat
je
fistl
sub
add
cmp
jbe
imul
mov
loop
outsb
psrad
jb
int3
outsb
test
jne
add
mov
push
jns
fstl
sub
add
and
das
pop
mov
xchg
xlat
das
in
mov
fisttpl
mov
cmp
call
call
es
das
sti
pop
movsl
xchg
lret
sbb
hlt
orb
xor
and
dec
sub
sub
mov
jnp
lahf
test
xchg
enter
cs
pop
mov
ret
sub
jno
sub
cmp
cmc
fisubrs
dec
ljmp
mov
aaa
inc
sub
scas
xorb
and
loope
adc
push
enter
jmp
xchg
jno
dec
adc
pop
xchg
or
xchg
or
pushf
cmp
in
push
xor
adc
cmp
ljmp
inc
sbb
mov
xchg
sbb
pop
xor
push
push
push
push
rorb
mov
add
clc
mov
jmp
in
cltd
push
in
fstl
push
sbb
loopne
lahf
dec
inc
jecxz
pusha
aaa
scas
mov
xlat
inc
mov
aam
mov
out
das
cltd
filds
andl
inc
sbb
xorb
stc
dec
sub
lock
cmpsl
dec
push
popf
push
fildl
int
outsb
and
mov
mov
bound
mov
dec
xor
dec
movsb
jmp
push
add
cmp
pushf
ss
jns,pn
push
stos
dec
in
inc
shll
dec
adc
pop
mov
push
test
cmpsl
and
mov
jae
loopne
fwait
and
loopne
stos
test
leave
imul
jecxz
xchg
fstl
pop
xchg
xlat
push
fdivs
roll
xchg
fdivrs
arpl
aaa
mov
cli
adc
pop
push
out
mov
popf
xchg
inc
mov
popa
stos
lods
xor
add
inc
inc
mov
fmuls
add
sarl
mov
add
rorb
fbstp
fwait
mov
mov
dec
lea
jae
lret
adc
rorb
repnz
pop
pop
mov
test
bound
mov
add
jle
jle
mov
lock
popf
mov
add
sub
add
movsb
icebp
out
inc
repz
into
in
gs
jle
push
mov
pop
fwait
ret
push
out
and
and
sub
sub
push
leave
fsub
repnz
pushf
xor
jle
test
adc
adc
add
xchg
cld
xchg
jae
cwtl
sub
andl
sbb
imul
ss
pop
aam
push
leave
subb
inc
cmpsb
pusha
xor
mov
call
sbb
stc
movd
xchg
lret
shll
xorb
int
pop
mov
mov
dec
jb
mov
clc
mov
sub
jle
sbb
cmp
push
aad
mov
and
add
xlat
cmp
jno
jmp
lahf
push
push
jp
xchg
imul
push
mov
and
cli
test
push
jmp
sub
mov
sbb
push
repz
cmp
push
lret
inc
ficomps
xchg
xchg
out
in
xchg
mov
mov
filds
int
enter
mov
pop
mov
pop
xchg
sbb
jge
bound
mov
or
out
sbb
enter
movsl
shl
sbb
out
test
push
jmp
nop
push
loopne
or
out
mov
lret
dec
popa
dec
je
or
sbb
out
push
out
cmp
data16
stos
push
fldenv
inc
fcompl
push
pop
cmp
test
icebp
movsl
xchg
xchg
mov
cwtl
jge
lea
adc
movsl
fldcw
loopne
cs
movsb
and
das
xor
fsts
enter
mov
mov
rorl
sbbb
inc
mov
and
cmpsb
and
sub
push
pop
js
std
loopne
lret
repnz
movl
jmp
imul
movsb
cmp
adc
mov
ret
xor
cmp
mov
imul
sub
mov
scas
loop
or
jns
sbb
fimuls
add
jnp
add
xor
xor
test
jg
test
xchg
push
pop
mov
sbb
cmpsb
cwtl
mov
sbbl
icebp
sbb
lock
cmp
jp
mov
xor
rcrl
sub
daa
cltd
cmp
shlb
arpl
xchg
ret
data16
clc
push
push
je
aad
shlb
add
pop
jbe
int
inc
ror
mov
pop
or
mov
sbb
out
sahf
cmp
mov
out
aam
aas
xchg
gs
daa
and
lds
and
fsubrs
lods
mov
int3
shlb
jno
in
or
daa
mov
add
sbb
cmpsb
rcll
and
push
xchg
fnop
lods
add
push
sub
lcall
pop
xlat
pop
mov
sbb
mov
and
jl
ret
test
pusha
cmp
cmp
cmp
out
pop
pop
sub
cmpsb
bound
les
mov
jne
cmp
pusha
add
cmc
les
sbbl
jmp
imul
inc
adc
push
and
scas
xorl
inc
or
popa
add
xlat
cmc
mov
inc
sub
inc
std
pop
mov
bound
enter
pushf
xchg
and
hlt
bound
insb
adc
call
cmp
dec
jns
mov
inc
std
adc
or
ds
mov
lret
pop
jbe
stc
enter
push
rorl
loope
sti
push
sbb
jno
cmpb
xchg
dec
dec
fsubrs
xor
pop
mov
xor
sbb
push
mov
sbb
loopne
jg
cwtl
inc
push
mov
mov
pop
and
mov
xor
jmp
inc
notb
scas
faddl
addl
sbb
mov
sub
add
add
mov
and
cs
and
xchg
inc
pop
and
adc
cmp
ret
or
add
mov
mov
ja
sub
or
add
int
adc
je
test
cltd
xchg
testl
xchg
imul
inc
push
bswap
sbb
fildll
inc
pop
stc
test
mov
in
push
mov
aas
pop
jae
clc
mov
icebp
outsl
push
cltd
test
inc
mov
and
inc
dec
jbe
outsl
pop
aad
fsts
add
sub
mov
popf
jg
pop
jo
out
mov
outsl
notl
jns
stc
leave
dec
and
incl
nop
sub
dec
addl
mov
mov
mov
xor
repnz
push
inc
mov
in
add
cmp
xor
xor
cli
cmc
xchg
dec
xchg
stos
push
push
xchg
fnstenv
andb
sbb
inc
cltd
jl
rorl
mov
sub
sub
push
aam
test
test
mulb
lahf
inc
push
fwait
or
push
aam
xlat
call
fwait
cmp
rol
in
push
cmpsl
pop
pop
shrb
dec
xor
mov
in
mov
mov
dec
xor
xchg
xchg
ret
mov
sub
add
jge,pt
dec
jp
cmpsb
dec
aad
push
pop
push
mov
xchg
ljmp
mov
jmp
xor
dec
or
movsb
icebp
adc
fistl
inc
outsb
andb
test
int
test
sbb
mov
movsl
sbb
mov
adc
mov
inc
and
sbb
shlb
xchg
hlt
xor
or
push
movsl
lret
fidivl
mov
lahf
ret
enter
jne
clc
into
arpl
test
xchg
test
mov
shll
jbe
add
push
xor
push
imul
cmovno
mov
push
sarl
mov
xchg
jns
ret
jecxz,pt
test
inc
mov
adc
inc
dec
test
sbb
insl
add
and
jle
xor
lret
jg
sysenter
popl
add
add
add
adc
sub
cld
xchg
mov
fnsave
cmp
fnstsw
add
in
sub
xchg
fldenv
cmc
mov
ds
movsb
lahf
adc
cmc
std
mov
imulb
jne
cmpsl
cmpsb
xchg
leave
les
or
int
cld
sbb
rol
and
inc
shlb
insb
test
dec
push
rcrl
mov
test
adc
out
out
jmp
dec
or
movsb
or
in
mov
and
movsb
insl
imul
xor
lret
and
mov
mov
adc
repz
add
out
lea
scas
dec
mov
add
in
or
add
add
aad
pop
outsb
cmp
jmp
vmread
repz
lcall
aam
out
inc
push
adc
roll
into
dec
es
inc
mov
push
stc
add
lock
in
inc
mov
repnz
mov
xchg
gs
cmp
into
insl
mov
xchg
dec
fbstp
and
rcll
fldl
mov
xor
jbe
flds
rcl
jg
data16
cltd
negl
sub
fcomi
roll
pusha
jnp
je
pop
sub
pop
pop
push
push
mov
mov
pop
fstl
jno
adc
xchg
sub
rclb
jo
mov
scas
push
movsb
or
cld
insl
imul
cmp
jnp
iret
popf
icebp
inc
inc
and
jmp
mov
cmpsl
aam
cmp
mov
shl
psubw
or
rcll
imul
lock
daa
dec
and
scas
test
add
lcall
data16
decb
sahf
jb
jecxz
mov
xor
insl
adc
addr16
cmpl
fidivs
push
inc
inc
js
cld
divb
pop
mov
mov
loopne
lods
imul
jp
testb
pop
test
mov
test
pop
xchg
add
sub
add
mov
xchg
xor
out
insl
loop
ljmp
mov
push
rcrl
sbb
nop
sbb
dec
mov
insb
push
xor
in
ja
outsl
cmpsb
int
ss
mov
inc
subl
clc
xchg
mov
lods
push
sbb
pushf
repnz
and
fdivl
mov
rcrl
jb
pop
js
mov
jbe
fistl
mov
pop
jnp
aam
push
pop
mov
dec
sbb
xchg
adc
xlat
ljmp
rcrb
inc
sub
add
nop
mov
loope
lock
push
mov
and
jns
push
xchg
fadd
mov
movb
sub
daa
mov
xor
jne,pn
dec
mov
inc
aas
pusha
sub
pop
sbb
xor
adc
out
iret
das
pushf
lock
push
mov
adc
insl
lret
shlb
aad
out
adc
or
fisubl
mov
in
pop
iret
daa
sub
xor
std
mov
scas
cwtl
imul
add
mov
xor
cmp
int3
mov
call
push
subl
jg
test
lret
pop
push
xchg
lcall
stc
cli
imul
xchg
je
inc
adc
xchg
test
and
or
cmp
popa
sbb
add
dec
test
hlt
lock
leave
lret
insb
xchg
and
ficoml
inc
cmp
inc
sbb
xor
mov
cld
and
das
test
push
add
ja
jp
lcall
lods
les
cmp
mov
orb
js
shlb
test
add
hlt
mov
dec
sub
in
outsl
adc
andb
jecxz
rclb
test
enter
imull
fldenv
add
adc
test
sti
sahf
mov
enter
push
jg
xchg
add
sub
add
xchg
popa
out
popl
pop
out
mov
pop
xor
cmpsb
sub
jae
mov
sahf
cwtl
jmp
adc
inc
enter
push
push
add
fwait
sub
cmp
scas
mov
mov
adc
shll
dec
repz
lds
dec
push
fisubs
arpl
xorb
pop
sahf
out
jbe
imul
push
pop
arpl
push
mov
and
jne
xchg
and
push
pop
xor
in
arpl
outsl
ljmp
jb
stc
je
push
dec
lret
das
test
or
fidivrl
cmp
aad
mov
jbe
mov
push
idivl
sbb
lea
inc
pop
bound
int
insl
add
jb
and
sub
lods
js
or
rolb
cmp
inc
sub
cltd
xchg
xor
out
aam
in
sub
ljmp
shrb
and
imul
insl
fldt
add
xchg
fisttpl
adc
enter
fsubs
cmp
popa
xor
push
or
loope
int3
add
clc
fistpl
cmc
loopne
mov
sub
mov
dec
sub
inc
jge
or
mov
jecxz
xor
nop
add
mov
ja
inc
cs
stos
pop
je,pn
mov
xor
daa
push
dec
xor
mov
adc
mov
je
xchg
xor
test
jle
jl
ds
fs
xchg
rolb
push
ss
iret
cmp
cltd
leave
xchg
das
mov
scas
or
shlb
inc
scas
pop
cmc
pop
jge
fstpt
icebp
lods
jae
pop
xor
pop
mov
int
push
lock
jmp
mov
pop
daa
and
clc
sarb
lcall
gs
or
dec
push
pop
sti
fsubrs
call
jle
rolb
cmc
mov
add
iret
clc
sub
leave
int
imul
add
add
add
shrl
sub
ret
js
addr16
add
sub
add
aaa
daa
enter
xor
ljmp
cmp
adc
jge
mov
push
test
dec
xchg
out
adc
sub
mov
xchg
sti
xor
xor
fstp
sahf
xchg
test
out
rcl
hlt
out
inc
sub
jecxz
mov
stc
test
test
or
imul
lock
xchg
insb
rclb
enter
pop
gs
repz
xchg
push
dec
add
add
jge
push
mov
mov
ljmp
jl
icebp
fwait
imul
push
dec
dec
repz
jecxz
jno
mov
divl
or
jo
sbb
mov
ret
mov
mov
cli
les
pop
mov
adc
cld
cli
inc
lock
sub
jo
and
std
mov
pop
mov
push
xchg
mov
inc
fcoms
mov
scas
shlb
xor
scas
hlt
adc
jo
push
lret
nop
lea
jg
xor
mov
sbb
subl
std
mov
mov
in
jbe
mov
dec
sub
fisubrl
ljmp
push
lahf
fdivl
jl
cmpsb
xor
ret
pop
push
jmp
xor
jmp
ds
imul
jl
lret
icebp
je
jnp
mov
rorl
dec
inc
faddp
jp
data16
inc
test
lcall
mov
and
or
mov
inc
mov
xchg
negb
push
hlt
add
jbe
je
adc
movsl
mov
notb
fiaddl
arpl
xor
addl
dec
scas
testb
jle
stc
mov
mov
shll
js
mov
lea
dec
rcrl
push
cmc
lret
xchg
dec
das
pop
dec
cmp
cmc
xlat
int3
ss
push
icebp
fxch
lea
icebp
mov
cmpsb
mov
in
lcall
add
dec
test
stc
shrb
sbb
fisttpll
pop
add
fwait
pop
inc
jno
mov
pop
mov
mov
pop
pop
mov
js
or
les
stos
and
push
dec
and
aam
pop
xchg
sar
xlat
push
xchg
lret
sbb
icebp
xor
gs
push
pop
arpl
cmp
cltd
xchg
int3
adc
push
rcrb
add
loopne
inc
aad
jp
jno
or
std
in
jecxz
int3
in
xchg
stc
cltd
lret
cmc
add
pop
std
lock
fldenv
cmc
rorl
out
xor
cmc
lahf
jno
dec
xchg
pop
pop
or
repz
xchg
pop
rorb
jl
xchg
push
push
jmp
xor
mov
lea
aaa
aaa
add
jo
sarl
mov
ja
iret
adc
loopne
cmp
push
and
jecxz
das
shll
push
mov
mov
mov
ret
push
loope
aad
aaa
pusha
pop
int
shl
mov
jg
aas
inc
orb
mov
push
addl
push
cmpsl
mov
shrb
es
scas
sub
pop
pop
call
cli
int3
repnz
jnp
shlb
cmovno
xchg
mov
cmp
loope
and
fiadds
aaa
jno
push
dec
sbb
push
push
and
adc
sub
xchg
add
and
test
ror
or
inc
les
pop
pop
hlt
mov
xchg
xchg
stc
inc
push
push
sar
dec
xlat
es
push
sub
lret
ret
mov
push
clc
lods
add
and
push
out
nop
not
xchg
test
out
mov
pop
inc
call
xchg
ret
stos
mov
inc
sbb
jb
dec
aas
out
cmc
sbb
cmpsb
or
push
xor
das
mov
sbb
jb
in
sti
inc
xor
les
andb
or
push
inc
adc
shld
daa
jbe
cmp
add
push
addb
sahf
pop
enter
mov
fisubrs
loop
roll
sub
add
mov
bnd
cmpps
xlat
jg
shll
mov
rclb
sub
xchg
cmp
jl
mov
fsubrs
push
mov
rol
add
roll
lret
lahf
and
jp
inc
popf
xor
mov
into
sbb
xchg
add
mov
clc
andl
lahf
mov
mov
ja
or
xchg
sub
aam
addr16
push
rclb
sbbl
pop
in
std
jle
scas
stos
lret
jmp
mov
aaa
lods
into
jns
push
xor
fld
in
inc
imul
cmpsb
cld
movsb
aaa
xlat
repz
jmp
mov
sarb
pop
out
mov
sahf
ret
adc
and
les
aaa
fisubrs
mov
xchg
fidivrl
repnz
call
jbe
shll
dec
jbe
or
outsl
cld
insl
fwait
fwait
inc
btr
cli
fcomps
iret
jae
mov
or
cld
mov
daa
jnp
das
xchg
loopne
movsb
jae
jo
pusha
mov
cmp
stos
test
int
aaa
les
push
into
loop
pop
fistpl
movsl
add
xchg
dec
mov
push
std
adc
adc
pop
int3
ja
or
add
jg
xchg
mov
faddl
lods
test
and
or
lcall
sbb
cmp
repz
add
scas
cmp
je
inc
mov
and
jge
inc
adc
pop
fistpl
xchg
movl
fsubrl
or
movsb
shll
out
inc
and
stos
in
insl
sbb
subl
xchg
jecxz
int
mov
mov
sub
push
lods
pop
rep
mov
jns
or
mov
xchg
das
call
ret
ds
mov
mov
or
push
insl
xchg
cmp
shlb
jbe
out
sbb
inc
cld
push
out
mov
jnp
ret
ret
add
sub
add
aad
fisubs
jo
das
xchg
fwait
nop
pop
ja
inc
bound
xchg
sub
sub
xchg
lea
lcall
xchg
jecxz
xlat
inc
std
rolb
push
pop
clc
adc
imul
fstl
mov
mov
popa
mov
jp
mov
outsb
insl
dec
jo
outsb
add
jne
or
test
jae
insb
sbb
pop
insb
pushf
sub
scas
ds
jecxz
fnstenv
frstor
test
pushf
push
and
pop
out
aas
fstpl
mov
jl
ret
data16
inc
insb
fdivrp
clc
pusha
xor
fwait
pop
stos
and
adc
cmpb
fcoms
add
out
aad
cmp
pushf
fmul
add
mov
popa
xchg
pop
pop
dec
fs
fdivrp
imul
or
loop
fildl
dec
sub
sbb
cmp
scas
mov
inc
and
pop
lods
outsl
inc
xor
jmp
mov
pop
xor
mov
mov
icebp
xchg
sub
or
mov
jl
fistpll
push
testl
xchg
repnz
jp
mov
and
call
icebp
in
test
je
cmp
mov
push
in
es
cmc
or
sbb
movsb
xchg
and
mov
jl
add
in
filds
or
int
lds
dec
cld
fs
adc
or
test
add
mov
mov
xchg
sub
push
fwait
outsl
out
add
loopne
bound
negb
cmp
scas
push
mov
test
push
cltd
shrl
cs
xchg
xchg
mov
mov
pusha
jmp
scas
jecxz
and
inc
sub
xor
scas
lret
inc
xchg
test
out
fmull
push
adc
cld
adcb
jg
das
imul
fiaddl
cmp
jge
clc
in
add
or
lds
add
add
add
sbb
aam
sub
repz
aaa
sti
repz
ss
bound
les
jno
incb
sbb
dec
lcall
bound
sbb
gs
mov
out
adc
popf
subb
jae
dec
add
xchg
inc
idivb
int
pminub
inc
jge
lds
shlb
cmp
jp
mov
bnd
fwait
dec
dec
pop
stos
lock
mov
std
out
and
push
mov
test
add
add
subl
cli
xchg
stos
dec
shll
mov
shll
and
jle
jmp
inc
in
xchg
add
enter
cmp
cmp
cmp
mov
xor
fldt
dec
js
fabs
pop
shlb
cmp
fdivrs
pop
int3
jmp
iret
pusha
xor
sub
add
movsb
lods
mov
cli
cs
ficoml
adcb
outsl
daa
sbb
rorb
pop
dec
sbb
cmpsl
mov
jae
enter
jg
and
adc
pop
stos
shll
inc
xchg
imul
xor
icebp
les
adc
mov
pop
subl
mulb
push
push
sarl
push
xchg
enter
shll
cltd
add
cld
arpl
stos
clc
shl
dec
sub
push
pusha
into
adc
push
jb
sub
mov
rcll
add
add
gs
dec
out
in
ds
test
mov
jo
subb
mov
pop
inc
and
test
pop
loopne
jno
lahf
jle
lock
xor
lods
adcl
bswap
fidivs
jle
mov
int3
ficoml
inc
cmpsb
mov
loopne
sbb
leave
jg
pop
out
pop
mov
cmp
xchg
leave
pop
dec
cld
lret
jae
or
stos
cwtl
push
ljmp
in
mov
das
pop
and
mov
sbb
jns
adcb
inc
add
jp
in
fistl
test
sub
add
insl
jecxz
or
sub
fldcw
clc
push
dec
hlt
aam
push
pop
hlt
cmp
dec
jne
test
ljmp
int
mov
add
cmp
inc
inc
xchg
clc
and
in
sbb
insb
js
jnp
loope
repz
js
shlb
cmp
jp
dec
iret
push
test
inc
pop
cld
aas
inc
mov
xchg
stos
dec
add
mov
inc
mov
dec
mov
stc
pop
lret
or
lea
jl
ret
movsl
mov
xor
push
ds
sub
mov
ret
push
push
imul
rcll
nop
add
dec
movsb
cltd
pop
call
aas
push
push
mov
hlt
into
out
fnstsw
into
je
mov
sbb
push
push
mov
lods
ret
insl
mov
lock
popf
dec
mov
adc
mov
push
add
movsl
fldcw
lcall
mov
xlat
lods
cs
shrl
in
adc
lods
mov
inc
or
mov
popf
mov
inc
and
lahf
jl
adc
into
cmp
dec
insl
mov
push
sub
daa
sbb
sbb
outsb
fisttpll
fimull
mov
into
icebp
jge
push
out
stos
add
mov
popf
dec
and
das
add
ja
test
xchg
and
push
test
jl
sbb
sub
cmp
inc
mov
dec
outsl
movsb
or
push
ss
and
sarb
imul
loopne
sbb
mov
or
andl
repz
add
xchg
arpl
fmulp
fdivl
cmc
mov
mov
out
cmp
pop
xchg
imull
jb
add
loopne
xor
dec
cmp
cmpsb
xchg
aam
push
les
push
shlb
dec
rclb
loope
movsb
popa
pop
add
out
std
pushf
push
orb
leave
add
sub
add
push
sub
jge
nop
cmp
mov
js
cltd
mov
xor
insl
push
stc
out
lret
jle
add
les
fcoml
inc
xchg
push
mov
dec
adc
xchg
ljmp
in
push
push
xchg
in
cmp
cmp
push
xor
add
jae
xorb
xchg
je
fldcw
movsl
enter
xor
dec
fucom
xchg
push
addr16
xor
cmp
loope
lea
stos
movsl
cwtl
aaa
fs
dec
bnd
cmp
fidivl
call
lret
out
jbe
ljmp
js
mov
xchg
daa
mov
lret
push
clc
test
cld
mov
mull
test
cltd
ds
rcrl
arpl
mov
call
sub
push
add
enter
ffree
cmpsl
leave
icebp
hlt
faddl
and
mov
mov
jo
out
dec
cmc
push
mov
adc
push
rorb
or
data16
or
jns
jno
pop
mov
popaw
cs
insb
outsb
or
push
xchg
fdivs
cmp
push
jmp
shl
cmpl
cmp
shr
std
loop
into
clc
lods
push
cmp
out
scas
add
mov
mov
ret
mov
dec
jmp
arpl
nop
aam
pop
sub
and
xchg
sub
movsb
sti
popf
data16
shrl
xchg
fldcw
jnp
sbb
adc
test
sub
in
cmp
cmp
jge
loop
cmpsb
popf
mov
pop
sbb
xchg
mov
and
sbb
repz
xor
mov
fcoml
mov
pop
pop
out
xchg
jns
xchg
pop
cmp
mov
sub
lret
or
addr16
popf
mov
and
insb
cld
lods
movb
fistpll
inc
cld
out
enter
movsl
or
and
fdivl
add
mov
mov
arpl
mov
mov
sub
add
pop
movsb
pop
push
push
stos
daa
adc
into
push
ret
jo
mov
in
mov
mov
aas
out
xor
pop
or
aad
jo
and
repnz
inc
daa
int3
inc
mov
mov
out
lods
enter
lods
lret
in
cld
data16
data16
and
mov
and
inc
insl
cwtl
lock
and
jo
sbb
dec
xor
dec
pop
cmp
xchg
cmp
pop
dec
jmp
add
leave
dec
je
pop
ds
xorl
ss
rclb
aad
fucom
cwtl
and
sub
cmp
dec
jmp
roll
sbb
xor
add
push
xchg
dec
ret
es
aad
ljmp
int3
xor
cwtl
lcall
add
fildl
or
test
es
mov
mov
xor
xchg
shll
das
jge
xor
jbe
arpl
xchg
insl
lds
jno
xchg
call
mov
cld
dec
std
fisubrl
jne
sbb
mov
or
and
cmp
push
mov
out
sbb
and
test
fwait
sbbb
rcrl
mov
mov
pop
push
nop
jmp
mov
mov
fldlg2
sub
mov
cmp
roll
loop
outsb
xchg
iret
add
xchg
roll
jle
movsb
xorl
push
cmp
fcoml
and
push
push
dec
call
or
fcmove
inc
sub
sbb
or
sbb
cltd
aad
ljmp
push
inc
mov
lret
xchg
push
mov
jg
clc
push
popf
mov
sbb
daa
je
rorl
out
push
xor
sub
push
daa
out
addr16
push
outsl
sub
xor
lea
mov
or
xchg
sub
xchg
shlb
pusha
and
pop
and
in
aam
xchg
data16
add
add
inc
sub
jg
scas
lret
push
aas
xchg
int3
adc
add
sub
add
std
fucom
adc
fimuls
cmc
lcall
aas
pop
movsb
popl
jmp
fisttpl
lea
test
mov
jae
sub
xor
push
push
jg
mov
mov
dec
or
dec
ret
adc
cltd
sbb
cmpsb
fsubl
lret
imul
mulb
inc
std
add
inc
or
add
mov
mov
mov
sub
mov
jp
mov
negl
jo
or
mov
fmul
mov
mov
xlat
adc
pop
push
call
cmpsl
jo
popf
cmp
jbe
dec
roll
jno
push
add
aaa
mov
fnsave
leave
xchg
adc
dec
js
inc
test
inc
sbb
push
les
sti
mov
sbb
lea
jg
data16
ret
ja
inc
dec
lea
cmpsb
ja
jge
scas
clc
rclb
punpckhdq
xchg
cmp
adc
jmp
sub
sbb
jge
ret
hlt
imul
int
in
lods
movb
or
ficompl
mulb
cmp
pop
jecxz
nop
pop
push
stos
in
jp
pop
push
lods
cmp
fs
push
lahf
mov
aam
jb
incb
xchg
add
rolb
sbb
rorl
inc
mov
jecxz
stos
xlat
cmp
dec
popa
jmp
push
ret
push
fsts
xor
mov
push
dec
int
sbb
notl
xor
dec
dec
cmc
fnsave
xor
scas
sub
clc
testl
cmp
jmp
mov
adc
mov
ss
cmp
in
mov
push
out
jb
or
or
jne
xchg
addr16
stc
mov
add
orb
sub
add
xchg
jg
xchg
jle
pop
in
cwtl
mov
jbe
fcomps
dec
cmp
in
adc
mov
add
fistpll
mov
sbb
in
rolb
add
add
add
push
jbe
outsl
jb
test
dec
add
add
or
pop
mov
test
ja
loopne
jmp
cmp
fs
call
lods
mov
mov
add
pop
mov
sbb
shlb
or
inc
es
inc
dec
ljmp
or
jnp
inc
lcall
imul
and
loop
cmpl
and
lock
xchg
mov
imul
or
aaa
lods
outsb
add
out
xchg
in
les
jae
test
jbe
popf
outsl
adc
sti
addl
add
sub
inc
xchg
pop
aaa
sub
adc
pop
js
es
xor
sbb
xchg
and
out
dec
pop
push
jb
pop
jle
mov
outsb
push
mov
shlb
sbbb
je
mov
cli
sar
mov
jnp
cmc
push
or
mov
cwtl
add
and
lds
inc
lds
sbb
inc
inc
sub
out
lods
in
cmp
xchg
adc
imul
and
xor
pop
pop
jp
fsubr
idivb
das
test
dec
lods
and
jmp
adc
mov
inc
bnd
jae
addr16
aas
push
js
testl
jb
xor
outsb
test
push
popf
jne
jl
cmp
fwait
xchg
or
dec
adc
jle
pavgb
repz
rcr
mov
scas
pop
rcrb
test
dec
xor
or
pop
fisttpl
test
fs
dec
sub
iret
test
mov
xorb
movsb
lret
mov
inc
jp
pop
sub
ljmp
dec
push
idivb
lea
xchg
or
loopne
and
sbb
lods
dec
in
fcmovne
push
popa
cmp
ret
jge
jmp
loopne
insl
jbe
sbb
es
sbb
inc
xor
dec
sbb
add
jecxz
or
popf
divb
pusha
cltd
adc
rolb
add
add
add
repz
sbb
scas
fsts
adcl
add
ja
push
or
pop
jae
rolb
push
lods
or
stos
lret
mov
sub
jae
push
sbbl
cmp
cmp
push
or
std
and
sbb
les
push
js
dec
dec
aas
inc
or
in
loop
sbbl
sahf
stos
jnp
cmp
sub
sub
push
inc
sub
xor
xchg
cmp
ljmp
adc
mov
cmp
outsl
jecxz
bnd
add
movsl
addr16
sbbl
das
dec
std
rcll
cmp
mov
dec
scas
test
mov
outsl
sub
sub
test
jno
out
dec
sti
popl
movsl
fildll
es
js
sub
aas
push
rol
dec
and
xor
test
cmp
ret
cmpsb
cmp
or
mov
fnstsw
push
mov
in
movsb
mov
scas
decl
xchg
clc
pop
add
mov
xchg
push
mov
leave
mov
pop
xchg
mov
mov
je
aam
in
and
lahf
into
fs
jne
cmpsl
bound
mov
xlat
lds
lds
sub
test
rolb
cmp
bound
std
cwtl
xchg
repnz
lds
mov
adc
fisubl
xchg
cltd
insb
fwait
test
jge
push
jl
cli
frstor
add
and
cmpsl
inc
fucomi
add
out
nopl
lds
xchg
out
jge
mov
and
test
aaa
ret
sub
in
push
cmp
mov
jmp
mov
sub
into
out
std
scas
push
jns
jmp
cmp
adc
jb
xor
mov
fnstcw
cmp
loopne
add
and
jmp
cmp
xor
stc
xchg
xchg
aam
add
add
add
mov
add
jnp
xor
into
sbb
fldl
inc
cli
sub
dec
ja
std
cwtl
xchg
ljmp
jge
int3
pop
push
lret
ljmp
sbb
inc
ljmp
push
add
pop
dec
or
in
rcl
fimull
dec
mov
and
adc
je
xor
enter
sub
std
mov
shlb
jle
imul
loope
dec
loopne
push
ljmp
sbb
mov
test
or
dec
xchg
sbb
icebp
xor
cmpsb
cltd
mov
fwait
shl
fistpl
pop
mov
loop
cltd
and
push
xchg
xor
insl
sub
lret
dec
jg
das
pop
adc
scas
mov
cmp
rcrb
dec
adc
lahf
cmp
adc
pusha
les
cmc
jns
pushf
mov
jmp
insl
sarl
sahf
jg
push
pop
inc
out
mov
adc
mov
pusha
xor
xchg
loope
push
cs
xchg
lea
mov
inc
cmp
inc
jg
pop
popf
mov
rolb
sub
mov
jae
add
mov
adc
enter
dec
mov
aam
add
loopne
cli
enter
mov
xor
push
mov
sub
mov
dec
lods
popa
into
xor
out
mov
cld
pusha
roll
out
jp
pop
outsb
pop
inc
inc
pop
push
xchg
inc
jno
and
clc
push
pop
jmp
adc
test
dec
pop
ficompl
cmp
movsl
gs
aas
lods
pop
out
mov
in
scas
or
fdiv
addr16
and
fs
dec
push
movsb
ds
xor
sub
in
add
and
inc
add
idivb
or
xorb
ja
scas
outsb
mov
out
shlb
ds
mov
fcmove
imul
fdiv
in
jle
movb
popf
addr16
mov
aaa
nop
and
xchg
add
icebp
testl
and
daa
mov
sub
add
push
cmp
jns
movl
adcb
cmp
sbb
dec
xchg
or
stos
enter
stos
dec
inc
xchg
lods
lods
out
inc
jb
mov
lea
mov
ljmp
inc
mov
in
add
mov
test
aad
jnp
dec
lds
push
add
or
push
mov
pushf
test
and
lods
dec
sbb
jo
adc
jecxz
cli
dec
stos
pusha
and
push
adc
pushf
enter
adc
inc
lret
sub
out
testb
sbb
mov
ret
movsl
or
or
mov
fsubrl
jne
xlat
fs
sub
imul
dec
fwait
mov
test
add
aam
dec
iret
xchg
movsb
stos
sub
lret
pushf
icebp
shl
push
mov
stos
lock
push
sbb
mov
add
mov
dec
pop
push
sub
push
xchg
jl
fldenv
shll
push
outsb
xchg
sub
pusha
xlat
shrb
mov
js
lds
jae
xor
sub
xchg
hlt
mov
out
loope
iret
mov
cmp
or
cli
mov
rolb
jge
xchg
xchg
push
and
pop
pop
push
xchg
in
nop
mov
shl
inc
add
and
pop
xchg
cmpsb
jge
outsb
das
aas
and
dec
idivl
push
pop
jbe
cltd
lret
xchg
fstpl
push
xor
ds
mov
cltd
sub
add
jge
sub
xchg
inc
out
dec
lahf
xchg
jne
cs
mov
push
aas
sbb
or
inc
lock
pop
push
testb
data16
decb
ret
popf
lods
mov
into
add
cltd
mov
add
and
add
inc
add
and
or
inc
add
and
adc
inc
add
and
sbb
inc
add
xor
cmp
pop
xor
xor
push
dec
push
xor
push
inc
inc
pop
inc
inc
push
xor
dec
push
pop
pop
add
xor
xor
pop
push
inc
xor
pop
dec
add
pop
xor
inc
push
dec
add
aaa
pop
aaa
dec
cmp
xor
dec
push
dec
pop
inc
xor
pop
dec
xor
add
cmp
inc
xor
xor
xor
aaa
pop
pop
aaa
push
add
aaa
pop
pop
push
ss
push
push
xor
inc
dec
xor
dec
pop
push
inc
pop
dec
xor
pop
dec
xor
pop
push
inc
dec
push
add
ss
push
inc
push
aaa
dec
pop
aaa
inc
add
cmp
xor
xor
add
cmp
inc
add
dec
add
add
dec
add
xor
pop
add
add
add
dec
add
add
dec
add
dec
add
inc
add
add
add
add
add
add
pop
add
inc
add
pop
add
xor
inc
add
add
add
add
inc
add
add
cmp
pop
add
add
xor
pop
add
inc
add
add
pop
add
pop
add
add
add
cmp
pop
add
xor
add
pop
add
add
add
add
inc
add
inc
add
loopne
add
inc
add
loopne
add
inc
add
loopne
add
inc
add
loopne
add
inc
add
loopne
add
add
add
jnp
push
dec
add
add
loop
add
add
add
add
add
add
add
fdivrs
add
fdivrl
add
loopne
add
jb
add
out
cmp
add
add
arpl
push
imul
dec
jo
outsb
push
imul
popa
je
outsl
outsb
dec
jo
outsb
push
imul
popa
