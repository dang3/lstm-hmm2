push
mov
sub
mov
movl
mov
mov
movl
movl
movl
cmp
movl
jne
mov
push
movl
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
mov
movl
xor
addl
mov
xor
push
movl
cmpl
je
cmpl
jne
push
pushl
push
push
pushl
call
mov
dec
mov
jmp
mov
xor
add
addl
movzwl
add
not
or
and
movzwl
xor
mov
sub
mov
adc
mov
sbb
mov
sbbl
push
or
mov
dec
movzwl
mov
sub
mov
mov
xor
or
add
movl
movl
mov
orl
mov
movzbl
or
lea
mov
mov
mov
addl
lea
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
movl
mov
mov
andl
xor
xor
andl
xor
andl
add
movl
add
div
movl
mov
movl
cmp
movl
je
movl
lea
sbb
mov
mov
jmp
popa
xchg
mov
mov
mov
sbb
jo
in
jo
rcl
aad
ror
rol
pop
push
add
mov
ret
adc
mov
add
mov
sbb
lods
sarb
or
sahf
jp
inc
lods
push
sub
mov
stos
js
roll
jmp
mov
dec
fcomps
pop
test
sub
mov
pusha
nop
mov
and
jmp
out
repnz
xchg
xor
jbe
xlat
and
add
adc
xor
or
fldl
xor
pop
push
or
pop
fstps
jno
mov
ja
sbb
xor
int
and
and
pop
cwtl
jg
es
jmp
push
mov
test
sbb
rorl
cmp
in
dec
lock
in
loope
add
mov
push
mov
jnp
push
push
xchg
rcll
cli
gs
rcrb
addr16
enter
xchg
test
mov
lock
into
pop
xor
dec
cld
inc
cmp
push
cli
sub
fldcw
lret
inc
push
xor
fnstcw
arpl
and
xor
stc
cmp
jle
mov
jg
cmp
xchg
cmpsb
inc
fadd
inc
lea
cltd
arpl
ret
sbb
ret
das
pushf
sub
test
mov
cmp
jmp
push
fcmovnb
mov
xlat
les
test
ljmp
jg
jo
aam
push
stos
cld
imul
add
int3
std
je
adc
ja
dec
mov
lock
push
das
ret
insb
lcall
je
mov
sub
mov
popf
daa
js
scas
loopne
in
inc
mov
loope
daa
clc
inc
sbb
cmp
les
lret
cli
xorl
mov
mov
xchg
mov
jo
cwtl
jge
imul
xor
adc
pop
dec
mov
pop
call
jne
les
pop
fisubrs
rcr
mov
inc
hlt
fucomi
adc
cmp
mov
jecxz
adc
daa
or
push
sbb
lcall
bound
xor
pop
mov
lods
sub
lods
sbb
mov
xchg
inc
test
xchg
xor
push
mov
pop
add
mov
jae
jmp
sub
jg
mov
dec
movsb
jnp
mov
movsb
std
das
clc
cli
cmp
std
insl
dec
inc
je
mov
push
cmp
repz
sub
lret
popa
xchg
jmp
inc
xchg
sub
fimuls
adc
out
fstpt
roll
jmp
xor
xchg
mov
stos
test
stos
scas
push
dec
aad
cmp
jns
movzbl
add
mov
mov
and
xchg
sub
add
out
orl
add
mov
orl
jmp
mov
add
cmp
je
mov
andl
jmp
mov
mov
or
cmp
je
mov
xorl
jmp
mov
mov
xor
mov
mov
add
cmp
je
mov
xor
add
mov
mov
mov
mov
xor
mov
add
jmp
clc
repnz
icebp
pusha
xchg
rcll
pop
sub
jle
jo
jg
jo
add
mov
imul
cmp
icebp
push
jg
movsl
xchg
aam
dec
cmp
outsl
lds
sbb
test
mov
lret
mov
mov
pop
pusha
dec
xchg
mov
fmulp
dec
lret
xor
inc
and
mov
mov
and
aam
add
dec
adcl
adc
mov
out
mov
repnz
fsubl
in
or
aam
ja
push
cli
xor
add
pop
jmp
jae
out
and
xchg
rclb
andb
push
push
std
repz
js
loopne
xor
ret
mov
sub
mov
pop
stc
lcall
and
stos
adc
add
dec
test
divl
loope
test
rcr
aas
mov
fstpt
loopne
pop
push
dec
jne
fwait
mov
jno
and
test
mov
mov
pop
push
mov
mov
in
lahf
xchg
lods
sub
mov
divl
xor
add
sahf
imul
or
or
mov
dec
je
mov
mov
xor
inc
sbb
fidivrs
cmpsl
sahf
mov
insb
repz
fstpl
cmp
xor
sti
cmp
aam
xchg
daa
mov
xor
lea
add
mov
mov
mov
xor
add
imul
sub
mov
jmp
mov
mov
jmp
pop
arpl
out
xchg
imul
jae
cmp
jp
aas
jl
jo
jg
jo
lods
jp
cmp
aaa
mov
mov
rcrl
and
sbb
or
jb
dec
pop
cld
insl
cmp
push
xor
fwait
xor
mov
xorl
stos
stos
lods
stos
ljmp
mov
push
loopne
jb
mov
inc
cwtl
pop
cs
xchg
xlat
js
sbb
das
xor
xchg
daa
out
mov
sub
mov
xor
jmp
xchg
cli
pop
int
test
aad
sbb
jae
pop
mov
mov
popf
pop
lret
jb
mov
fiadds
inc
loop
adc
mov
ds
add
fcmovbe
and
in
jl
inc
dec
sbb
gs
mov
rolb
cmp
lret
iret
pusha
sbb
xchg
xchg
enter
lcall
sbb
cmpsb
cmp
fs
je
ss
xchg
add
cmp
inc
lea
xchg
les
loop
xchg
sub
mov
fldt
and
icebp
mov
pusha
test
inc
push
decb
int3
shll
xor
fisubrl
push
lods
xchg
fdivs
sti
cmp
inc
test
sub
lahf
stc
es
test
cmp
jbe
ret
dec
and
pop
mov
mov
fwait
xor
cmp
je
mov
addl
jmp
mov
cmpl
jne
mov
xor
add
test
jne
xorl
jmp
pop
pop
pop
leave
ret
push
mov
sub
leave
ret
push
mov
jmp
addr16
movsl
insl
jne
out
cmp
adc
cmp
jo
xchg
jge
jo
xchg
inc
sub
xor
mov
sub
cmc
mov
fisubrl
mov
lahf
pop
dec
out
cli
jns
jo
xor
add
pop
mov
sub
cwtl
add
in
mov
sbb
dec
dec
lcall
add
mov
ss
dec
adc
and
call
test
mov
jecxz
cli
dec
fwait
daa
mov
and
mov
pusha
mov
or
icebp
in
fmull
stos
out
divl
scas
cmp
lods
das
mov
lods
pop
or
pop
dec
or
mov
js
lods
xor
sar
clc
sub
ss
dec
push
sub
jle
sbbb
lret
daa
mov
xchg
jle
fwait
rcrb
cld
sbb
sbb
mov
jo
test
and
rolb
xchg
xlat
jb
shlb
test
add
lods
pop
dec
mov
and
outsb
movsb
cs
mov
xchg
pop
in
paddsw
xor
js
and
test
inc
enter
negl
ret
push
rclb
shll
xchg
ret
lds
push
xchg
in
lahf
inc
insl
lods
xchg
fs
ljmp
rcrb
sbb
sub
in
push
outsl
frstor
lods
jb
inc
mov
stc
mov
xor
sbb
scas
inc
lds
sbbl
jmp
pop
push
cwtl
xor
mov
jg
or
lock
pop
cs
xchg
sub
daa
rclb
call
into
fwait
pushf
cmp
push
inc
xchg
out
jne
icebp
mov
add
iret
int3
lock
or
lds
call
mov
loop
int
in
aad
scas
das
fcmovnu
jne
movsl
mov
xchg
icebp
adc
repz
add
loopne
sarb
jnp
imul
cmc
xor
mov
leave
pop
loope
std
push
adc
scas
sub
inc
or
pop
hlt
inc
jecxz
fidivl
fdivrs
add
ret
add
push
lea
adc
push
scas
add
ret
mov
data16
xorb
pop
aad
scas
icebp
insb
mov
push
or
add
inc
addr16
mov
daa
ror
sub
fdivr
jb
leave
cs
mov
adc
cmc
mov
sub
add
sub
mov
cmpsb
jmp
ja
nop
test
push
orl
test
lret
jl
gs
cli
cmpsl
cmp
sbb
mov
xchg
and
mov
loop
push
ror
xchg
pushf
in
dec
fcmovnu
and
add
xchg
call
push
xlat
cmp
std
jns
testb
adc
arpl
fbstp
xorl
repz
in
addr16
xchg
pop
jge
fists
aaa
frstor
gs
push
push
jae
in
push
sub
arpl
jns
dec
sbb
inc
push
jl
sbb
push
xchg
cmpsb
jnp
fs
sub
push
jl
pushf
outsl
pushf
mov
ficomps
lahf
push
scas
or
mov
adcl
icebp
dec
or
xchg
pop
mov
cmp
and
xor
mov
jp
add
push
push
xor
mov
sub
mov
sbbl
jmp
add
arpl
jbe
mov
cmp
jo
xchg
jge
jo
stos
adc
jmp
push
pushf
xor
mov
adc
mov
mov
inc
mov
ds
pop
sbb
inc
jnp
mov
adc
sub
popa
mov
testb
pop
adc
push
repz
repz
push
pop
pop
and
popa
jae
popa
jae
inc
movsl
push
adc
jne
jb
pop
push
or
fidivs
xchg
adc
jg
add
and
mov
pop
push
cmpsb
push
dec
lock
aas
stos
mov
test
pop
lds
xchg
add
mov
jecxz
outsl
aam
lcall
inc
aad
int
js
add
movsb
jg
jno
inc
and
xor
add
mov
jmp
mov
jp
test
lcall
mov
scas
aad
mov
rcr
jb
cmp
fcomps
mov
aam
sbb
jmp
ljmp
orl
addl
cwtl
pop
aad
hlt
jbe
and
xor
int
lea
test
push
stos
and
imul
pop
sbb
adc
and
cmp
add
mov
mov
out
jns
into
cmp
xor
mov
lret
adc
pop
pushf
rclb
test
lret
popa
leave
lahf
imul
mov
setl
jae
pop
aas
sbb
pop
jmp
xor
or
rorl
popa
ret
insb
and
mov
cltd
dec
loope
ret
and
sbb
in
xchg
and
insb
shrl
sbb
inc
lods
and
cld
xchg
ja
negb
mov
inc
inc
outsb
and
decl
fidivrl
stos
lret
xor
aam
cmc
cmpsb
test
cld
mov
mov
add
jo
mov
shlb
inc
inc
std
fsub
iret
xchg
js
lcall
data16
sub
or
mov
hlt
in
jp
dec
out
std
push
jb
sbb
data16
push
stc
cmp
addr16
and
int
adc
jnp
cli
popl
das
out
scas
test
cpuid
jg
inc
xchg
lcall
daa
pop
xchg
loopne
repz
movsl
out
nop
fisubs
mov
imul
popa
add
and
mov
dec
sti
in
adc
mov
inc
mov
dec
pop
cld
cmp
and
xor
insb
cs
and
or
add
inc
iret
xchg
jno
sbb
mov
jle
pop
ljmp
mov
sub
dec
std
aad
jp
cmp
dec
add
sbb
push
push
mov
lds
jle
lds
jl
scas
pop
les
xchg
test
cmp
xor
sbb
rorb
sub
push
or
sbbb
aad
scas
stc
dec
xchg
mov
xchg
mov
mov
test
into
push
insl
push
push
imul
shlb
sti
mov
pop
pop
fstpt
mov
xlat
mov
jle
add
or
mov
or
js
inc
or
in
dec
movl
mov
mov
sbb
jmp
in
lock
mov
push
scas
int3
cmpsl
shll
rorl
jge
jo
stos
arpl
rcrb
shrl
pop
inc
fsubl
pusha
rcl
ret
lret
cmp
lcall
xchg
cmp
and
test
lret
aaa
xor
dec
repnz
fs
pusha
scas
outsl
mov
stos
inc
ret
mov
push
int
xor
mov
and
in
jo
jle
stc
push
in
adc
mov
cmp
push
shll
pop
rclb
fucomi
sbb
cmp
mov
pop
mov
xchg
fisubrl
ja
scas
movsl
dec
stos
cwtl
mov
aam
inc
jmp
inc
cmp
lock
leave
jae
cld
aad
js
xor
movsb
aaa
sub
or
fstpl
jne
lds
xor
call
lret
mov
push
ret
mov
mov
fisttps
mov
test
sbb
push
sbb
push
mov
sub
inc
in
add
mov
cli
lds
data16
pop
in
push
jle
pushf
les
or
loope
cmp
cmp
xor
push
adc
popf
inc
insl
inc
pop
fidivl
adc
mov
frstor
pusha
int
pop
sahf
ss
pop
fsubl
insl
inc
push
out
sub
imul
or
ljmp
mov
outsb
lret
jecxz
sub
lret
mov
ret
jo
les
stc
out
rcl
iret
inc
stos
fnsave
jge
mov
in
cmp
mov
xchg
das
lahf
mov
mov
cmp
bswap
aaa
clc
pop
mov
dec
xor
cmovge
daa
inc
and
in
iret
mov
jne
iret
aaa
test
int
mov
sar
pop
inc
cmc
mov
addl
and
sub
mov
test
pushf
or
sbb
xor
xchg
sarl
xchg
pop
push
push
lahf
std
or
cwtl
in
stos
pop
popa
adc
cmpsl
jecxz
outsl
mov
mov
mov
pop
in
xor
or
ljmp
cmp
mov
mov
out
add
loope
out
rcrb
iret
daa
ret
loopne
xchg
repz
stos
loope
pusha
stos
push
ficoml
inc
int3
sti
jle
xchg
into
push
cmp
fnsave
sahf
pop
iret
orl
xor
sbb
inc
cwtl
dec
call
cwtl
inc
pop
sub
int
mov
sbb
int
popa
pop
fucomi
mov
ljmp
xor
mov
inc
push
xor
xchg
stos
mov
push
sar
out
sarb
pop
addr16
scas
in
adc
fcoms
movsb
sub
push
sub
aaa
sub
loop
stc
imul
loope
imul
xlat
pop
dec
test
rolb
lods
lock
dec
or
loope
mov
or
stos
shl
cld
call
or
xchg
js
inc
pop
push
jo
insb
pop
mov
jecxz
sbb
ja
cmc
cmc
inc
push
and
adc
and
cmpsb
jae
mov
cmp
lret
sub
test
adc
sbb
dec
jmp
nop
jg
push
add
aam
shl
cli
inc
ficoms
addr16
outsl
sbb
cmpsl
fnsave
adc
sub
push
add
mov
xor
and
mov
push
mov
addl
add
jmp
mov
cltd
or
or
dec
lds
jmp
jge
jo
aam
dec
lret
and
movsb
lea
xchg
push
roll
inc
outsl
hlt
jle
pop
or
ja
ds
lcall
mov
cwtl
insl
scas
lock
pop
cmp
cli
lea
mov
repz
pushf
or
mov
pop
sbb
pop
out
dec
xchg
ja
dec
push
repnz
stos
add
adc
mov
stos
cmp
inc
inc
dec
repz
mov
jmp
jno
cs
xor
lods
outsl
pop
imul
ss
push
test
and
test
sbb
cmpsb
jne
jmp
jnp
cmp
std
leave
mov
add
hlt
or
or
xlat
imul
je
insl
pop
iret
adc
jmp
jo
xor
mov
stos
xor
push
out
loopne
push
mov
nop
gs
popf
add
cltd
jae
cmpsb
lret
int3
aas
xchg
jo
aaa
loopne
jo
fildll
push
sub
mov
subb
jbe
lret
scas
dec
lock
push
inc
ljmp
sti
xor
inc
xor
add
mov
xchg
jno
dec
out
fildll
mov
or
lcall
mov
sahf
cwtl
inc
mov
jb
out
xchg
test
and
add
mov
cmpsb
sbb
and
cmpsb
mov
sbb
cmc
push
ja
jl
mov
rol
out
pop
out
cmp
in
fsubs
aaa
jmp
dec
jnp
fidivrs
jae
sbb
in
sahf
sahf
ret
push
mov
xor
cmp
jge
test
mov
lds
cmp
gs
fldenv
mov
sbbl
sub
arpl
and
inc
jno
or
sti
jmp
and
stc
clc
decl
jg
mov
mov
adc
lret
repnz
cmp
mov
sub
mov
shlb
and
jb
jl
test
pop
jge
push
push
add
fadds
pop
dec
test
cmp
lea
push
jmp
cmp
into
adc
add
lret
mov
add
sti
jecxz
xchg
in
and
mov
dec
or
pop
in
stc
pop
mov
aaa
insb
nop
out
jl
and
pop
pop
rcl
mov
add
push
adc
ds
mov
ds
mov
mov
in
inc
mov
push
push
fnstenv
adc
jmp
jnp
rcl
cltd
mov
jmp
sub
mov
inc
mov
fs
push
dec
shlb
in
ret
ja
dec
loope
rcll
xor
push
das
icebp
xchg
enter
xor
fsub
cs
mov
mov
ds
rolb
cli
leave
ss
mov
adc
sub
mov
cmp
inc
out
mov
jge
int3
aad
inc
int3
sub
or
adc
movsl
pop
pop
cli
xor
jnp
call
inc
pop
push
mov
je
sub
inc
dec
xchg
push
cmpsl
xor
mov
fdivrl
jl
stos
push
fcmovnbe
adc
bound
jbe
addr16
and
aas
xlat
xchg
cmp
dec
mov
push
or
jb
sub
daa
pop
mov
xchg
push
xor
xlat
mov
es
pop
cmp
movl
je
and
mov
sbbl
mov
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
push
push
pushl
push
call
jmp
mov
sub
add
xor
adcl
add
movl
cmp
ja
push
jmp
mov
mov
jmp
mov
in
inc
sub
outsb
add
or
jo
jge
jo
and
clc
add
jo
xorl
scas
lahf
xor
mov
and
cli
aam
in
test
in
add
in
bound
sub
add
mov
hlt
push
fldl
fimuls
int
fbld
or
or
decb
jmp
into
insl
rcrl
sahf
clc
mov
shl
cmp
das
or
pop
jns
cltd
push
xchg
sbbb
mov
sub
push
lods
or
das
pop
or
insl
fwait
dec
dec
fcoms
xchg
push
loope
jecxz
scas
cwtl
dec
imul
movsb
adc
mov
fcoms
push
jp
rcll
push
stc
ss
adc
and
cli
and
in
lock
stos
sgdtl
xor
inc
xchg
test
inc
cli
fstpt
pushf
mov
pop
outsb
mov
add
daa
out
or
adc
testl
dec
enter
inc
in
dec
sbb
data16
in
mov
inc
mov
stos
xor
roll
cmp
mov
stos
ret
add
cli
xchg
and
repz
fs
jno
push
rolb
cwtl
mov
and
push
and
nop
xchg
rcrl
mov
outsl
add
sub
out
mov
es
in
cmp
loop
mov
cld
sbb
popl
and
pop
dec
shrb
sub
das
fldt
jno
test
cwtl
std
cmc
rcll
jbe
xor
dec
out
jne
js
and
testl
std
cli
inc
dec
in
out
pop
jb
addr16
pushf
pop
out
push
rorb
or
or
pop
out
sbb
shll
dec
pop
cltd
insl
out
add
es
xor
gs
scas
xor
frstor
mov
outsl
cmp
data16
pushf
mov
fstps
cmp
icebp
imul
arpl
or
fisttpl
sbb
pop
fwait
fildll
sub
cmp
add
ror
cmpsl
int3
xchg
mov
xchg
sbb
jno
imul
jnp
adc
int
cmp
pop
mov
or
add
test
cmpsb
cmp
outsl
mov
andb
dec
sub
jno
or
mov
test
cmp
in
cmp
jne
mov
push
jle
nop
mov
daa
sub
xor
fsubl
inc
xchg
popa
fidivrs
mov
sub
cmpsb
push
cmp
jle
dec
dec
jne
lea
enter
in
test
cmp
pop
movsl
movsl
mov
dec
push
pop
std
push
idivb
and
push
lods
idivl
in
xor
inc
mov
cld
repz
adc
std
sub
sub
test
inc
mov
sahf
push
lods
lret
fmull
icebp
ds
jg
mov
push
popf
mov
lcall
movsb
hlt
das
enter
arpl
imull
je
jge
test
push
outsb
fmul
mov
daa
and
mov
jmp
cs
loopne
in
jnp
jmp
push
jbe
jns
or
xchg
jge
jo
and
add
aas
stos
mov
insl
pop
les
pusha
push
jmp
test
inc
fadds
int3
in
dec
mov
fbstp
aad
sti
gs
int
loope
fwait
mov
sbb
mov
xchg
ret
mov
push
sbbl
mov
xchg
daa
inc
stos
jo
loope
xchg
pop
adc
cwtl
push
cmp
push
fwait
repnz
popf
bswap
sarb
loop
stos
int
loop
push
mov
int
push
lret
mov
fidivl
frstor
cs
lock
mov
rclb
shll
sub
ss
cmp
jb
fsubr
je
mov
mov
outsl
fbstp
cs
stos
and
xor
mov
das
bound
je
xchg
pop
mov
call
gs
mov
and
stc
jecxz
leave
xchg
jp
add
inc
pop
mov
jbe
add
dec
mov
sub
jae
iret
fisubl
fistpl
jl
stos
and
jne
sub
sti
or
pop
fstp
hlt
xlat
gs
sahf
add
push
loopne
xor
xchg
xor
cs
aaa
sub
in
xor
stos
sub
lock
imul
sbb
cmp
sti
stos
aaa
jns
or
cmc
in
inc
hlt
inc
mov
jne
iret
inc
adc
das
cs
cmpsl
idivb
jb
cmp
sbb
fistl
data16
imul
jecxz
dec
mov
popf
and
rolb
dec
inc
call
adc
and
or
mov
popa
in
dec
mov
mov
cltd
xchg
xchg
add
movsb
push
fwait
enter
inc
mov
add
or
or
mov
xchg
jecxz
sub
add
sbb
aaa
fcom
lds
jnp
mov
sar
insb
imul
imul
add
out
lods
adc
xor
jo
inc
mov
mov
sbb
icebp
xlat
sub
or
xchg
push
sbb
mov
add
lcall
sbb
xchg
pop
addr16
jl
push
jle
jns
xchg
pop
pop
popa
push
insl
adc
movhps
mov
stos
add
shlb
pusha
jns
movsl
cmp
int3
xor
sarb
out
rcrb
xchg
fwait
imul
add
mov
xchg
pop
subl
and
rorb
mov
cltd
and
or
mov
adc
push
cmc
in
xchg
rolb
dec
adc
pop
in
in
shll
pop
push
addr16
test
or
es
add
sub
cli
push
and
movl
jl
mov
sbb
sbb
xchg
cwtl
jno,pt
adc
mov
xlat
or
fisttps
and
outsb
std
and
mov
scas
cmp
inc
mov
pop
add
jbe
adc
push
push
mov
push
cmp
lret
stc
mov
fistps
pop
incl
lahf
int
xor
push
pusha
out
loopne
sub
sub
out
inc
es
lods
xchg
hlt
push
xlat
repnz
xor
fld1
pop
xchg
cmp
out
in
jmp
dec
test
xor
jmp
data16
in
int3
jne
popa
jno
imul
jl
adc
jo
adc
shll
shrb
inc
cmp
inc
cltd
inc
mov
imul
and
dec
jmp
lahf
and
mov
and
and
add
iret
xchg
in
mulb
imul
fwait
les
ss
repnz
out
push
lahf
fwait
cld
gs
jb
cld
xor
mov
jns
call
dec
lahf
sbb
mov
xchg
negl
pop
hlt
jae
fnstcw
clc
push
adc
cmc
adc
xor
fs
mul
fs
and
mov
fwait
mov
loop
into
dec
xor
dec
movsl
ret
in
test
jb
bound
aad
stos
stc
ss
mov
dec
jo
cli
adc
cwtl
test
xor
inc
mov
pop
mov
in
jo
jle
shll
sub
popa
jle
cmp
in
ljmp
xlat
imul
mov
or
rorb
xchg
int
repnz
jmp
insb
mov
das
mov
js
xor
adc
or
addl
cmpsb
sbb
movsb
adc
shr
cmpl
mov
test
roll
adc
out
sub
sarl
mov
addl
dec
push
dec
push
js
mov
sub
repnz
adc
jnp
popl
arpl
outsb
xchg
cmp
cltd
repnz
dec
out
xchg
pop
jno
or
jl
add
movsb
mov
mov
dec
adc
aas
push
repnz
int
sahf
jl
mov
mov
ror
inc
cmp
inc
cmp
sub
ss
stos
in
add
out
pop
and
adc
cmp
or
mov
stc
push
mov
dec
sub
lcall
jo
xchg
add
push
scas
and
loope
stos
dec
cmpsl
or
inc
call
mov
mov
popa
inc
aas
xchg
xor
cmp
or
adc
in
mov
xchg
fdiv
movsb
or
jbe
shrb
les
mov
sbb
jns
insb
pop
int3
gs
or
lds
std
xchg
mov
test
xchg
popa
dec
mov
pop
cmpsl
jne
adc
xor
jmp
dec
addr16
sarl
jp
cmp
push
clc
jae
jbe
push
aad
adc
ret
in
xor
out
pop
sahf
sbb
imul
fwait
es
test
inc
lea
hlt
scas
sbb
mov
pushf
aad
mov
mov
dec
and
inc
inc
shll
int3
add
xchg
mov
add
and
push
test
ss
xchg
bound
nop
out
lds
mov
or
lods
fwait
sub
sbb
loop
sbbl
cmp
inc
mov
lret
adc
jmp
inc
adc
shlb
push
jecxz
and
lret
xchg
adc
lcall
mov
popf
and
bound
pusha
int
std
xor
jnp
mov
stc
out
add
sbb
xchg
cs
scas
xor
xor
sbb
divb
or
fidivl
mov
pop
mov
jbe
out
out
sbb
cmc
loop
mov
push
fistpl
test
decb
cli
mov
jmp
jle
mov
xchg
icebp
repz
les
jo
jge
jo
std
push
push
xor
loopne
mov
mov
pusha
dec
push
scas
dec
sbb
out
div
stc
lds
mov
xor
add
pop
lods
fbstp
jmp
aam
shr
hlt
int
mov
dec
lar
xor
aaa
cmp
dec
sahf
mov
adc
repz
lret
mov
dec
xor
adc
push
out
and
clc
inc
pop
or
jnp
jbe
sbb
fwait
shrl
ja
lcall
xchg
popf
pop
inc
es
add
push
jo
cwtl
mov
inc
js
mov
cwtl
cld
rcl
inc
outsl
dec
aas
cltd
pop
jg
mov
mov
int
adc
lea
mov
dec
add
sbbb
loope
je
orl
mov
bnd
add
mov
mov
mov
fsubl
add
idiv
sub
sbb
imul
popa
out
fimuls
imul
pop
push
or
add
icebp
jmp
je
cmc
ret
inc
addb
pop
xor
test
dec
loopne
ss
bound
and
pushf
pop
push
imul
rcrl
xor
shl
outsb
xor
mov
insb
ret
push
sahf
cmpsl
ljmp
jle
clc
xlat
dec
iret
mov
das
arpl
mov
xor
pop
or
pop
icebp
or
xor
inc
xchg
das
stos
testb
add
xor
mov
sub
mov
decb
enter
push
push
in
dec
or
movsl
xchg
cmpsb
fisubl
xchg
dec
fidivs
popf
push
test
mov
into
inc
pop
ja
imul
adc
fstpt
clc
js
jl
mov
addr16
cmovp
in
daa
push
cmp
jg
jne
dec
jle
xchg
andl
push
inc
inc
hlt
jl
cmp
das
dec
ret
ljmp
dec
mov
shrb
pop
mov
fimuls
cli
xchg
scas
shl
sub
notl
dec
adc
lret
jae
dec
xchg
addr16
sarb
mov
mov
sub
out
inc
add
rorl
mov
inc
ret
inc
and
fidivl
mov
mov
push
sbb
and
mull
addr16
std
adc
xor
adc
inc
ret
in
sahf
pop
push
sbb
pop
sub
xor
jno
iret
lea
aaa
mov
lock
pop
lea
jl
mov
push
or
arpl
add
fwait
xor
test
daa
std
xchg
imull
pop
add
push
push
out
std
lret
mov
jae
dec
in
cltd
inc
stos
aam
daa
sarl
ret
add
inc
addr16
scas
xchg
addr16
cli
and
cwtl
or
jb
cmpb
bound
mov
movsl
jb
adc
addl
mov
cmp
cld
fmul
sbb
mov
loopne
push
mov
dec
rol
dec
mov
and
pop
outsb
sti
push
arpl
enter
leave
xor
ja
xor
cltd
in
test
pop
mov
mov
cmpb
loop
mov
xor
pop
xor
add
mov
mov
mov
xor
lea
mov
xor
mov
sub
add
cmp
jbe
pop
mov
pop
pop
leave
ret
push
mov
sub
mov
movl
cmpl
je
cmpl
jne
push
pushl
call
mov
dec
mov
jmp
mov
add
mov
xor
mov
adcl
add
movzbl
sub
movzwl
adc
mov
and
movb
xor
or
xor
mov
lea
movl
cmpl
je
cmpl
jne
push
push
pushl
push
push
call
mov
dec
mov
jmp
mov
mov
adc
mov
xor
sub
andl
mov
movl
cmpl
je
cmpl
jne
push
pushl
push
pushl
call
cmpl
jne
xor
xor
dec
mov
mov
dec
mov
jmp
and
movl
movl
add
mov
or
mov
jmp
and
pop
icebp
jae
lods
imul
pop
cmp
sbb
jo
or
add
pop
enter
mov
or
mov
fnstenv
cmpsl
inc
pusha
adc
scas
in
push
ljmp
mov
rorl
pop
test
push
adcl
inc
lret
sar
sub
fmull
jge
sub
jge
sub
mov
xor
outsb
xchg
jae
out
mov
jnp
sbb
xchg
loope
pop
jecxz
aam
xchg
and
ss
pop
push
lock
jbe
outsb
dec
or
rcll
ljmp
lret
push
cmpb
add
outsl
jmp
dec
add
adc
pop
and
icebp
mov
aam
rclb
mov
cmp
jns
jbe
cmp
cmpsl
mul
ds
mov
js,pt
xchg
repnz
mov
pushf
cmp
test
rolb
shll
inc
jge
loope
and
xor
out
out
cmp
add
ds
ret
aad
lods
aam
mov
mov
and
mov
lock
pushf
push
inc
xor
mov
sbbl
add
movl
jmp
movl
mov
mov
inc
cmp
jmp
sbb
movsb
scas
xchg
sub
xchg
inc
or
sbb
jo
and
xchg
jle
push
mov
icebp
mov
or
and
les
xor
mov
sub
pusha
adcl
enter
movsl
and
mov
dec
mov
mov
mov
xchg
hlt
lock
dec
lahf
and
dec
xchg
andl
push
adc
mov
aaa
pop
jnp
jno
fwait
aad
fdivl
inc
int3
add
xchg
icebp
xchg
test
add
lret
out
cmp
or
xchg
and
imul
aad
mov
cmpsl
js
adc
add
aam
jmp
scas
or
push
and
test
movsl
cmpsl
ror
ja
fldt
xchg
ret
fdiv
xor
in
stos
rclb
fcoml
aad
loopne
fsubrs
fstps
ret
aad
push
adc
call
pop
fisttpll
stos
inc
adc
insl
stos
cmp
mov
in
push
or
push
idivl
dec
cmp
mov
scas
sub
fiaddl
cmp
cmpsl
sub
decl
lcall
add
push
add
add
rolb
lcall
inc
inc
add
add
jae
cmpl
jne
pushl
call
cmpl
jne
xor
add
inc
mov
jmp
mov
xor
add
cmp
jmp
inc
sub
xorb
jmp
inc
mov
int
pop
sarl
jo
sbb
int3
std
std
stos
shrb
loope
popf
cmp
push
test
dec
sahf
in
cs
inc
imul
pop
cmp
inc
adc
jle
add
in
jns
jnp
rcll
add
shlb
jecxz
imul
daa
sub
xchg
mov
mov
lock
mov
jle
outsb
cli
data16
fwait
mov
idivb
repz
sub
roll
pop
sub
out
jecxz
xor
jge
mov
sbb
xor
in
aaa
xchg
test
xchg
adc
pop
sub
movb
adc
push
jp
popa
push
pop
or
repnz
out
ficoms
or
pushf
push
divl
pusha
sbb
pop
xchg
xchg
adc
mov
adc
xchg
ds
cmpsl
rclb
mov
or
in
sti
sbb
and
icebp
pop
mov
lods
loop
push
mov
pushf
fwait
addr16
sti
daa
adc
loopne
jb
lods
loopne
shrl
jp
add
pop
sub
cmp
mov
cmp
test
push
mov
mov
xor
mov
add
movzwl
mov
mov
movzwl
xor
add
mov
mov
mov
inc
cmp
jne
pop
jmp
cmpsb
fisubrl
jmp
ja
push
out
sbb
sbb
jo
mov
push
stos
mov
sbbl
sub
fcomp
in
add
xchg
outsb
push
mov
call
shll
movsb
imul
mov
lock
or
push
fnstenv
pop
lcall
enter
xor
jl
add
mov
aaa
xor
pop
lahf
cld
add
jnp
xor
xchg
xchg
sub
outsb
int
add
mov
or
movsl
add
lret
idiv
stc
push
push
outsb
jb,pn
in
imul
stos
je
cmp
sti
adc
lods
in
mov
imul
push
arpl
or
cmp
adc
adc
sbb
test
jb
fs
repz
sbb
inc
pop
inc
jne
or
and
gs
or
add
dec
jo
mov
out
push
test
fwait
jns
adc
mov
gs
push
cld
or
dec
xor
std
pop
mov
mov
jmp
aaa
insl
pop
int3
push
jb
jno
pop
imul
sbb
sbb
jo
sub
ja
fildl
sub
push
dec
sub
adc
popa
sbb
sti
mov
mov
out
scas
push
mov
icebp
xchg
sbb
bound
sti
push
jae
testb
lock
insb
aas
notl
push
cmpsl
fldenv
add
repnz
fs
pop
jge
repz
mov
push
idivb
mov
add
xchg
les
adc
xor
rorl
mov
xchg
or
mov
or
push
sub
in
jmp
scas
mov
add
fdivr
add
lret
add
or
cmpsb
dec
into
shll
shrb
popl
sub
test
mov
hlt
leave
inc
sub
jbe
xlat
sbb
xchg
mov
jle
insb
push
in
xchg
popa
lds
xor
jl
dec
pop
or
mov
mov
movsl
test
int3
xlat
cmp
or
add
ret
pop
pop
jle
add
dec
in
lret
mov
lahf
and
add
mov
mov
xor
add
jmp
ffree
adcb
mov
iret
xor
jo
sbb
jo
shrl
jb
sbb
dec
int3
push
xor
fmuls
dec
cmpsl
mov
in
and
ret
jmp
ds
ret
arpl
or
loop
fld
enter
in
mov
mov
and
jp
jge
mov
pop
mov
psraw
in
push
mov
lret
stc
xchg
jae
push
xchg
clc
sub
in
gs
loope,pt
out
enter
push
ss
mov
iret
pop
pop
push
push
je
mov
arpl
jbe
xor
aas
inc
pop
int
sar
int3
jo
scas
push
dec
jmp
pop
sub
push
inc
scas
xor
cmc
dec
test
adc
es
or
sub
outsb
movsl
aam
add
popa
mov
stos
sbb
int3
and
jl
insb
dec
test
jge
adc
lahf
mov
insl
mov
mov
lret
xchg
ds
mov
mov
clc
imul
sbb
or
push
cmp
je
mov
mov
jmp
scas
or
repz
test
shl
rclb
daa
jo
sbb
jo
ficoms
cli
push
dec
cmp
incb
stos
xchg
hlt
xchg
pop
das
mov
cmp
pop
lds
jo
xchg
test
adc
test
mov
shrl
inc
push
cmp
pop
imul
and
add
push
and
mov
dec
imul
add
xor
jmp
popa
cltd
in
inc
repz
mov
push
xor
inc
lcall
call
mov
inc
shll
adc
stos
cli
int3
inc
movsl
push
pop
xchg
cmpsl
les
outsl
xchg
in
out
nop
sar
hlt
fwait
mov
or
fisubl
test
cmp
sub
xchg
pop
pop
lock
loope
and
es
adcb
jmp
daa
fmulp
adc
or
lods
mov
pop
rcr
pop
lea
filds
inc
mov
mov
mov
pop
adc
inc
dec
sahf
cmpsb
sbb
add
jecxz
jp
mov
std
cld
pop
cmpl
fnstenv
lret
mov
pop
cmpb
pop
mov
mov
sbb
paddb
mov
fwait
pusha
pop
dec
mov
cmp
jne
mov
jmp
dec
push
test
xor
popa
jns
mov
jo
jg
jo
fmuls
push
in
cmp
rorl
adc
adc
out
jo
jg
mov
add
pop
mov
stos
mov
or
pop
cltd
sti
rcrb
fisubrs
mov
push
sbb
clc
xor
insl
aam
adc
es
ds
add
mov
and
adc
ss
imul
ja
pop
inc
stc
outsl
push
dec
test
pop
jle
stos
xchg
lret
sub
push
mov
and
push
add
add
imul
ds
xchg
fs
int3
sub
or
cmp
adc
inc
mov
adc
sub
adc
dec
inc
fldenv
neg
cmp
mov
fwait
pushf
std
imul
pop
push
mov
adc
shlb
nop
cld
push
iret
std
aam
cmpl
dec
sbb
gs
mov
in
aas
pop
cmp
mov
adc
mov
mov
mov
mov
jne
jl
push
or
mov
cmp
jmp
mov
gs
nop
sbb
outsl
les
jo
aas
push
loopne
sahf
fwait
xor
xor
push
jge
mov
pop
cld
mov
pop
jno
xchg
inc
push
adc
inc
mov
xor
and
sbb
mov
inc
movsl
shrb
fldt
pop
arpl
adc
icebp
mov
scas
jl
loope
cmp
mov
mov
int3
lahf
insl
inc
call
test
and
lea
loop
cmp
cld
jg
dec
xchg
pop
ljmp
mov
xor
je
mov
push
jg
mov
add
mov
pop
es
daa
inc
loop
xchg
call
pop
jbe
ret
xchg
nop
sub
filds
orl
imul
adc
ds
pop
xchg
fldenv
sub
shll
mov
ret
cmp
push
pop
out
aaa
leave
in
repnz
push
sbb
or
dec
stc
xor
into
icebp
fidivrs
sbb
mov
xor
stos
mov
fdivl
xchg
repz
lahf
push
fnstcw
add
add
inc
call
jmp
aaa
dec
rcrl
jno
repz
enter
jns
xchg
push
and
jo
jg
jo
pop
ljmp
and
bound
add
insl
sti
xchg
cmp
addr16
ss
xor
mov
xor
jnp
jmp
inc
repz
and
push
jne
push
sbb
outsb
mov
or
adc
fwait
popa
inc
dec
mov
mov
lock
add
int3
test
adcb
mov
outsb
push
inc
dec
ret
stc
enter
dec
clc
cmpsl
icebp
and
pushf
clc
std
nop
xchg
fbld
test
inc
mov
test
mov
pop
add
out
mov
das
xchg
dec
jp
dec
pop
and
inc
jb
popa
cmp
mov
movsb
ret
sbb
xor
lods
mov
je
sbb
sub
dec
fmull
imul
sbb
sti
js
sub
add
sub
int
js
shr
push
ja
sarb
add
pushf
mov
shlb
or
ret
cltd
ret
jo
inc
push
sub
inc
leave
lcall
ds
mov
aaa
mov
mov
lea
mov
mov
addl
mov
mov
xor
lea
mov
jmp
mov
addl
jecxz
or
jl
jo
sbb
jo
xchg
in
mov
mov
pop
hlt
sarl
push
gs
cmp
add
or
and
testb
adc
mov
jge
jno
cmp
inc
dec
or
leave
jle
insl
mulps
push
icebp
imul
pushl
insl
mov
mov
sub
decb
in
in
loopne
or
ret
push
push
jne
xchg
out
repz
push
sub
js
jo
dec
fs
ljmp
jnp
xor
gs
jmp
sub
int3
stos
inc
xor
cmp
push
insl
inc
mov
adc
sub
inc
mov
stos
out
fcomps
int3
mov
push
mov
xchg
sbb
push
add
je
cmpsl
daa
jge
mov
pop
insl
mov
mov
andl
fisttpl
mov
or
cmp
pop
xor
lds
test
rcr
mov
jno
dec
lods
in
in
icebp
sub
notl
repz
insb
cmpsb
jo
jl
incl
jmp
jmp
cmp
xor
sarl
cld
jns
adc
jo
sbb
jo
jnp
push
jbe
add
int
pop
inc
mov
pusha
or
mov
jns
stc
and
mov
cmp
aaa
int
mov
push
popa
fdivrs
sbb
dec
pop
stos
or
addb
or
push
mov
or
xor
sbb
imul
mov
loop
negl
pop
adc
popa
aas
mov
jmp
push
inc
mov
pop
xor
mov
and
inc
dec
cmpsb
inc
xchg
test
repnz
push
adc
fidivrs
ds
xor
cmp
pushf
pop
add
ds
in
mov
js
es
sub
pushf
add
add
pop
mov
cmpb
scas
stos
jecxz
push
mov
sbb
ret
pop
push
xchg
rclb
pop
mov
jmp
fsubr
addr16
out
adc
test
mov
aas
das
leave
xor
ljmp
jne
mov
or
pop
mov
mov
xor
mov
add
jmp
pop
adc
mov
es
xor
int3
and
sbb
jo
xchg
call
mov
inc
fadd
sbb
jns
daa
sbb
loopne
fadd
es
jp
ret
fs
ret
sub
aam
jmp
pop
inc
hlt
lcall
aad
insb
or
dec
shll
inc
xchg
sbb
icebp
out
mov
jb
aaa
test
movsl
or
out
mov
out
adc
lock
mov
scas
xchg
cs
les
xchg
xchg
cwtl
mov
xchg
cmp
mov
mov
aad
adc
push
xor
imul
nop
jns
lcall
enter
and
loop
aaa
rcrl
xchg
daa
js
inc
pop
mov
inc
inc
lea
in
or
mov
sub
mov
push
call
mov
xor
test
addl
push
inc
xchg
or
sub
stos
mov
xchg
sub
outsb
inc
push
inc
jg
push
cltd
call
or
scas
adc
or
push
mov
push
push
subl
movl
movl
andl
xor
add
inc
mov
cmpl
jne
pushl
pushl
push
push
pushl
push
push
pushl
pushl
push
push
push
pushl
call
cmpl
jb
neg
mov
push
xor
mov
mov
xor
xor
mov
adcl
jmp
popa
sahf
cmpsl
mov
jno
mov
fiaddl
hlt
das
jo
fnstcw
jo
jg
xchg
fstpt
or
dec
aad
out
sar
mov
out
dec
rcrl
push
cmp
stos
shlb
jno
divb
lret
adc
ja
cmp
out
cli
dec
push
in
fstpl
arpl
mov
fdivrl
pop
cmp
popa
jne
shll
dec
cs
subb
cli
aaa
data16
jnp
dec
jno
rolb
sbb
into
lds
pop
xor
inc
sub
xchg
addl
dec
out
push
cmp
std
cmp
xchg
xchg
and
dec
pushf
xor
inc
mov
pusha
sbb
daa
fdiv
mov
cmp
cmpl
push
clc
mov
fistps
inc
rcl
xchg
sti
mov
mulb
cltd
inc
and
mov
add
test
push
sub
das
xchg
jp
cli
enter
lahf
sti
fiaddl
pop
imul
mov
jno
sbb
cmp
fucomip
bswap
sahf
push
dec
or
pusha
rclb
stc
scas
xchg
sbb
xor
loop
arpl
mov
pop
sar
pusha
out
mov
and
mov
enter
leave
loopne
in
aad
into
push
flds
mov
xorb
push
clc
xor
xlat
mov
xchg
mov
jns
jl
repnz
jne
iret
out
cmpsb
pop
stos
testl
or
pop
mov
pop
sbb
fsubrp
stos
jne
in
mov
cmp
adc
xchg
clc
dec
xor
sub
mov
sbb
xchg
push
jmp
enter
fistl
cmp
and
jmp
mov
stc
or
sahf
and
div
call
add
cmp
jne
sub
ljmp
xor
xchg
movups
mov
dec
iret
out
aam
push
xchg
dec
sub
cs
and
cmp
movsl
mov
mov
into
push
orl
dec
lcall
mov
pop
sahf
outsb
sbb
dec
pop
jecxz
ss
xchg
test
pop
aaa
mov
stos
ret
aas
stos
enter
cmp
icebp
xorl
add
imul
movl
mov
movl
cmp
movl
jne
mov
mov
xor
jmp
test
cmp
push
popa
andl
adc
mov
jo
fnstcw
jo
repnz
cltd
push
or
stos
push
sbb
cmp
orb
xchg
jge
lods
xor
dec
dec
push
inc
cmpsl
jecxz
fstps
or
push
mov
mov
xchg
jo
xlat
orb
dec
fnsave
lea
or
cmp
fs
cmp
and
cmp
xor
hlt
fdivs
xchg
push
mov
cmp
pop
push
sbb
in
cli
leave
xchg
pusha
or
jmp
xchg
push
mov
xor
mov
push
sbb
push
add
cmc
mov
outsl
jmp
sbb
test
scas
cmp
cmp
mov
test
das
add
jmp
inc
adc
lods
xchg
js
enter
push
outsb
jmp
loopne
imul
push
rcrb
jl
push
popf
sbb
inc
xchg
aas
cmp
shrb
test
repz
push
and
jg
mov
fsub
dec
adc
decb
mov
pop
mov
push
lds
aaa
leave
push
sahf
popa
insl
movsb
sbb
mov
add
sub
outsb
push
add
mov
aam
out
insl
and
xchg
mov
out
push
repnz
jmp
mov
inc
mov
lahf
cmp
jmp
js
mov
mov
or
or
jecxz
jo
lds
adc
test
adc
fsubl
xchg
out
mov
jg
sbb
xor
movsl
arpl
movsl
inc
add
lcall
xchg
push
call
add
jle
je
cmc
test
nop
pause
stos
stos
or
dec
xchg
ja
insb
lret
pop
enter
out
shll
jge
bound
push
pop
sub
vhaddps
or
push
aad
jg
es
sbb
cmp
dec
roll
loopne
adc
arpl
fimull
xlat
adc
fxch
in
ja
pop
add
cli
out
pop
sbb
xchg
fildl
js
fs
out
icebp
mov
and
dec
cli
sbbl
test
hlt
int
stc
xchg
inc
insb
pop
adc
sarb
mov
cmc
in
sbb
mov
lds
cwtl
lret
ret
repnz
add
imul
jmp
mov
mov
mov
mov
mov
xor
xor
add
jmp
shll
add
ret
loope
and
adc
jo
jle
jo
into
test
mov
insl
push
setne
pop
cmp
dec
pop
shl
mull
mov
insl
dec
pushf
cmp
cmp
pop
mov
sbb
xor
in
push
enter
dec
jl
dec
mov
andb
std
popl
das
adc
punpckhbw
pop
hlt
loop
ret
dec
jle
ja
inc
mov
cltd
push
movsb
jb
jne
aaa
push
popf
sbb
daa
ror
pop
lret
stc
jae
adc
lcall
rcll
xchg
sub
addr16
or
lret
mov
cmpsl
cmp
jmp
jl
adc
mov
repz
mov
add
sub
frstor
jle
jbe
or
psrlw
das
or
adc
insb
xchg
pop
mov
push
in
das
mov
xchg
movsl
and
sbb
int3
jg
lds
fmull
mov
sub
adc
pusha
ret
loop
push
add
mov
mov
out
pop
std
push
arpl
sub
adc
aas
dec
add
movsb
mov
daa
adc
cmpsl
subl
int
mov
jl
pop
daa
and
int3
idivb
cmpsb
in
adc
mov
icebp
xlat
fs
mov
jno
sub
sbb
jmp
insb
inc
js
cmp
add
sbb
jle
jb
cmp
and
mov
leave
loop
cs
mov
add
test
sub
cmp
sub
push
nop
adc
xchg
cld
rcll
and
addb
clc
xor
mov
fmul
jno
pusha
jns
rolb
pop
mov
mov
pop
jecxz
adc
dec
cmp
dec
gs
lods
les
test
pop
mov
xchg
cld
mov
out
cli
mov
push
cmc
jmp
neg
insl
sub
leave
rorl
jnp
rcr
pop
and
scas
xor
push
mov
add
xor
mov
jns
push
icebp
pop
fimuls
in
into
xor
inc
push
repz
sub
fwait
inc
cli
mov
popf
jno
lret
mov
subb
jmp
mov
inc
or
adc
icebp
imul
mov
cmp
mov
je
xor
add
mov
imul
add
mov
mov
pop
leave
ret
push
mov
push
movl
mov
mov
mov
adcl
xor
add
andl
mov
mov
mov
sub
xor
mov
dec
xor
dec
jmp
loope
xchg
fdivs
jno
addl
test
les
jo
cwtl
iret
cmpsl
dec
inc
popa
pop
cmp
in
stos
sbb
xor
mov
inc
mov
mov
inc
mov
mov
movsl
jmp
mov
ljmp
adc
cld
ljmp
cwtl
mov
lock
mov
push
or
add
mov
lds
dec
stos
in
fwait
jo
bound
jle
xor
sbb
sbbb
jmp
fisttpl
stc
fdivs
loopne
xchg
xor
iret
pop
dec
and
repnz
jns
das
mov
push
mov
ljmp
repnz
jmp
ss
push
sub
les
xor
cltd
shrl
lods
sbb
xchg
filds
fcmovnbe
sahf
mov
xchg
push
fldenv
leave
ss
cmp
mov
lock
cli
push
add
jecxz
inc
fcompl
and
and
xor
jge
loop
dec
movq
jns
aad
dec
xchg
sbb
ss
jne
mov
in
jg
sahf
or
xor
mov
mov
outsb
or
stos
mov
ja
pop
jg
adc
fistps
inc
mov
call
pop
stos
dec
lock
xchg
mov
cmp
mov
andl
mov
inc
mov
cmpl
jne
pushl
pushl
call
cmpl
jb
mov
adcl
add
mov
movzbl
and
mov
mov
movl
mov
xorl
mov
mov
mov
mov
mov
mov
mov
mov
jmp
hlt
and
arpl
jno
scas
mov
add
les
jo
sbb
mov
fisttpll
insb
mov
sbb
mov
push
std
pop
push
loop
xchg
aad
sub
xlat
or
cli
xchg
sbb
aad
mov
lret
mov
lahf
dec
add
int3
adc
out
add
loopne,pn
lds
and
dec
or
ret
test
lahf
adc
es
pop
jno
bound
mov
adc
push
fmul
sub
xor
jecxz
loopne
daa
fwait
arpl
and
cltd
adc
rol
in
xchg
jmp
push
lahf
pop
sbbb
mov
das
ds
repz
das
leave
scas
cmpsl
pop
enter
std
pop
mov
push
aaa
adc
outsb
outsb
push
imul
cs
out
sbb
mov
pop
jnp
sbb
test
inc
addr16
or
xor
mul
insb
imul
mov
push
les
sbb
mov
roll
add
lds
and
fsincos
cmp
push
out
push
jno
stos
insb
lods
addr16
repnz
das
std
out
pusha
push
mov
mov
jmp
fstps
add
pop
leave
ret
push
mov
mov
xor
jmp
cmpsl
sub
mov
mov
xchg
xor
jo
push
out
sub
ja
add
and
pop
sbb
out
arpl
pop
cwtl
push
repz
icebp
xchg
add
out
dec
fs
xchg
ja
cmpb
lret
mov
cwtl
test
push
data16
jmp
mov
jp
dec
into
jecxz
cmp
xor
inc
pop
nop
rcr
push
dec
or
jp
jae
mov
cmp
test
pop
push
push
mov
pop
push
in
mov
push
adc
clc
add
adc
outsb
dec
inc
pop
inc
test
cmp
insb
xchg
mov
lock
jne
jl
repz
lods
and
dec
test
test
or
sar
push
xchg
ret
cmpsl
adcl
shlb
cltd
jecxz
gs
adc
in
in
mov
data16
push
jb
test
in
pop
xchg
mov
or
push
push
xchg
jns
lret
lea
orl
mov
adc
inc
dec
or
sub
cmp
push
push
mov
pop
aam
fidivrl
jle
adc
out
out
mov
pop
mov
loopne
push
test
adc
adc
mov
inc
dec
mov
div
mov
and
or
mov
pop
ret
push
mov
push
movl
add
mov
mov
mov
mov
add
mov
xor
subl
add
xorl
mov
incl
mov
subl
mov
mov
mov
mov
adcl
mov
mov
mov
subl
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
mov
mov
mov
test
mov
jne
mov
xor
add
leave
ret
push
mov
sub
add
mov
sbbl
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
cmpl
jne
xor
or
inc
mov
jmp
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
adcl
mov
mov
mov
adc
movl
movl
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jne
push
pushl
pushl
push
push
push
push
push
pushl
push
push
push
push
push
call
jmp
sbbl
mov
push
sbbl
push
push
mov
andl
jmp
mov
jmp
sub
mov
xor
jo
jge
jo
inc
xor
cmp
test
pop
clc
sub
and
push
sar
out
imul
jae
mov
push
out
std
cld
movsl
mov
push
mov
mov
cltd
mov
mov
subb
mov
mov
or
mov
aas
push
jb
mov
or
aam
or
hlt
jb
lods
cmpsb
dec
mov
fidivrs
cmpsl
and
mov
or
in
gs
jmp
repz
jl
mov
mov
aam
inc
mov
cmpsl
rorb
dec
mov
sbb
leave
inc
loopne
dec
xor
mov
pushf
sub
sub
cmpsl
xchg
dec
and
cmpsl
fcomps
dec
insb
xorl
push
stc
into
sbb
sub
stos
cmp
push
hlt
pop
mov
inc
clc
pop
cltd
and
mov
jns
lret
add
mov
es
movsl
mov
das
gs
mov
mov
jmp
mov
daa
inc
in
in
in
stos
cmp
and
loop
fnstsw
pop
pop
push
pop
or
sbb
loopne
ja
jecxz
out
jp
scas
jp
aas
fs
call
jg
mov
fcomi
jge
sub
mov
es
adcl
xor
out
add
mov
in
pop
cmp
xchg
mov
jno
adc
mov
pusha
cli
cmp
cmp
nop
xor
in
leave
hlt
xchg
cmc
lret
test
fdivr
cmp
sub
aas
xlat
pop
dec
in
test
sbb
imul
sbbl
int
cld
and
pop
xchg
sbb
loope
inc
addl
out
in
xor
icebp
push
dec
out
pop
mov
dec
or
sub
sbb
cmpl
mov
adc
pushf
mov
loopne
popa
xchg
sbbb
sub
lea
or
les
xchg
sub
mov
xor
popa
push
adc
xor
into
outsl
mov
shl
mov
inc
or
add
das
int3
add
ja
xchg
sub
xor
add
push
js
in
mov
adc
cmp
sub
dec
cmpsb
ret
sbb
cltd
xchg
mov
mov
shrl
pop
dec
insl
loopne
stos
add
jnp
outsl
aad
cmpsl
cmp
pop
inc
jg
iret
out
addr16
add
pop
xchg
arpl
dec
xchg
xorb
test
xchg
out
fsubrl
jno
inc
sbbl
mov
add
inc
xchg
in
xchg
mov
and
push
test
sub
out
mov
aad
jp
push
jl
stos
xor
mov
out
sarl
aad
jecxz
jecxz
cmp
fiaddl
lods
ljmp
pop
repz
add
mov
pushf
jb
add
add
add
add
jmp
xchg
test
xchg
jno
xchg
js
adc
jle
mov
jge
jo
or
std
roll
std
jmp
into
lahf
sbb
push
fs
ja
mov
jnp
mov
addr16
lock
sub
jg
dec
xchg
in
inc
das
daa
fimuls
enter
pop
insb
insl
ljmp
bound
push
stos
hlt
inc
lahf
mov
sub
mov
sbb
popa
out
lock
je
arpl
enter
fs
push
fsubrl
lcall
mov
lds
pop
enter
and
mov
fistl
push
dec
repnz
or
std
sbb
stos
cmpsb
pop
adc
sub
bound
xchg
cmp
rcrl
fistps
xor
xor
and
pop
mov
stos
hlt
out
xor
sbb
adc
inc
or
in
fwait
pop
shlb
or
push
sbb
aad
scas
jne
lods
vpsubw
fstps
sbb
sbb
popa
push
pop
das
les
rep
sbbl
xor
inc
std
xor
dec
jnp
stos
cmp
into
lods
clc
xlat
push
mov
lods
cmp
mov
nop
xchg
outsb
xlat
cld
shlb
scas
int
ficoml
xchg
jo
loop
adc
jg
sub
jbe
les
jbe
xor
cmp
and
sub
mov
inc
loop
and
cltd
jmp
add
jo
pop
sub
sbb
data16
cmp
jmp
adc
mov
call
xor
push
push
pusha
std
mov
xchg
jae
jo
ds
mov
jae
outsb
into
clc
adc
cld
dec
push
sahf
jl
rclb
mov
aas
jecxz
in
sbb
mov
cmp
xchg
fwait
in
cld
hlt
lods
or
inc
dec
add
adc
xor
cmp
add
jne
scas
cmp
loop
fwait
out
std
out
lahf
xchg
popa
icebp
out
or
lea
xor
inc
stos
mov
mov
test
inc
xchg
xchg
lds
cmp
sbb
sub
imul
pop
repnz
jb
dec
jno
out
jbe
inc
scas
call
cmp
and
mov
cmpsl
pop
sbb
loop
xchg
cmp
orl
mov
jae
leave
dec
mov
je
cmc
xor
add
mov
dec
and
sub
add
adc
lods
sbb
insb
sub
xor
pop
test
xor
xor
pop
insl
ret
out
shll
push
in
and
aas
cmp
xor
inc
aam
call
push
fidivrs
outsl
popa
inc
in
xor
or
mov
add
mov
push
cld
mov
mov
fists
inc
scas
add
inc
nop
lahf
loope
sbb
adcb
rorl
inc
fmuls
xchg
add
es
add
inc
fdivs
mov
clc
movl
movl
xor
movl
xor
mov
subl
xor
addl
add
adcl
mov
movl
sbb
movb
or
mov
xor
add
mov
neg
mov
sbbl
xor
add
subl
push
sbb
mov
subl
xor
adcl
add
push
add
mov
addl
xor
add
addl
push
lea
push
pushl
adcl
pushl
call
subl
jmp
test
xor
mov
test
push
fcmovb
xor
imul
jo
jge
jo
stos
ds
sub
and
imul
popa
test
and
out
xor
adc
outsb
ret
dec
jmp
xlat
jge
sub
dec
jle
sub
xlat
cltd
cmpsl
pop
push
sbbl
addr16
fstps
loope
imul
dec
icebp
mov
fcoml
mov
adc
fcmovb
popa
lods
ret
in
jl
movsb
adc
mov
sub
rcl
xchg
lock
cmp
adc
inc
mov
push
jl
popf
jbe
stc
mov
stos
cmp
repz
xor
push
adc
sbb
mov
fcoms
cmp
rcll
mov
adc
in
push
out
push
or
lods
mov
add
flds
push
lahf
sahf
xchg
jle
dec
orb
stos
mov
add
dec
call
cmp
xchg
or
inc
insb
xor
out
andb
jmp
jmp
pop
or
mov
es
and
fs
dec
push
dec
mov
cld
iret
sbb
cmp
gs
shrb
add
mov
xor
sbb
xlat
xchg
jmp
xchg
mov
das
sbb
xlat
pop
cmpsb
xchg
xchg
shrl
inc
rorb
mov
push
jnp
mov
popl
adc
xchg
cmp
in
xor
sub
cmp
jne
sub
rolb
mov
es
pop
daa
adc
jae
cmp
dec
gs
mov
int3
xchg
adc
stos
lds
mov
les
filds
xchg
cs
in
sbb
add
cmc
jae
js
imul
xchg
leave
ja
xchg
xchg
lahf
rcl
hlt
xlat
ljmp
adc
or
pop
negb
lret
pop
xchg
xchg
aas
rcll
aad
stos
jp
fwait
xchg
mov
sub
xchg
pop
mov
cs
xor
fcmovbe
les
jnp
mov
test
in
pusha
inc
movsl
adc
test
movq
push
je
ret
jnp
test
repnz
sub
adc
xchg
inc
sbb
dec
jg
mov
mov
mov
sbbb
daa
sti
and
cld
cwtl
push
into
fsubl
aaa
mov
jno
call
pop
adc
ror
jl
cltd
cli
mov
pop
jno
repnz
or
scas
ror
lcall
mov
mov
mov
inc
sbb
sbb
cmpsl
inc
xor
dec
aad
sub
push
pop
pushf
test
pop
cmpsb
daa
aad
aas
sub
in
pop
and
mov
mov
inc
or
sub
lods
ffree
or
test
mov
jg
sbb
push
dec
dec
push
rorb
test
out
andl
mov
mov
add
jno
add
je
lea
sbbl
push
sbbl
mov
andl
xor
add
push
movl
cmpl
je
cmpl
jne
push
pushl
push
push
call
cmpl
jne
mov
dec
mov
xor
add
dec
mov
jmp
mov
add
push
mov
mov
pushl
call
mov
cmpl
lea
mov
je
lea
push
mov
xor
add
push
mov
xor
add
push
pushl
lea
push
jmp
mov
add
mov
aaa
movsb
cmp
jo
and
jo
inc
and
xor
cmc
mov
nop
dec
out
lcall
pop
sbb
jbe
xchg
inc
xchg
adc
cmp
stos
xor
xorb
or
out
lcall
sbb
cmpsl
cmp
shll
push
imul
mov
xchg
jns
add
xor
or
pop
jmp
into
dec
addr16
inc
inc
jae
or
pop
cltd
add
adc
jnp
cmp
js
les
inc
xchg
daa
and
decb
repnz
rcrl
mov
loope
and
inc
and
std
stos
rolb
add
xchg
sbb
daa
popf
push
incb
nop
lods
mov
hlt
cmp
std
hlt
mov
into
add
push
cmp
lods
cmp
cmp
sub
jle
test
adc
data16
ss
cmp
sbbb
ret
xchg
sub
imul
add
and
pop
ss
shlb
jecxz
mov
mov
push
lods
imul
mov
fidivrs
or
push
jmp
sahf
data16
test
scas
sub
mov
cmp
les
jb
add
sti
rcr
int3
sbb
xor
mov
stos
int
nop
xor
mov
mov
lcall
pop
pop
push
xchg
or
clc
add
test
xchg
mov
mov
fdivs
test
cltd
cmp
inc
mov
sub
add
or
cwtl
dec
test
rorb
push
and
xlat
mov
data16
adc
jno
mov
fsubrl
ja
lods
fdiv
push
sub
mov
jp
dec
cld
test
xlat
icebp
and
shrl
push
xorl
adc
push
test
fs
int3
pusha
jge
outsb
mov
ja
add
mov
out
mov
fwait
push
movsb
jp
mov
mov
pop
loope
inc
jb
enter
lret
lds
and
jns
pop
cmp
dec
push
mov
lods
int3
jp
pusha
push
or
inc
loope
ss
adc
stos
lods
aaa
sbb
xor
cs
jnp
and
pop
add
fs
sbb
movb
dec
jp
test
sbb
mov
pop
clc
cmp
and
mov
push
arpl
stc
add
gs
push
test
mov
jo
sub
stos
lods
fsts
xor
dec
pop
pop
add
xchg
insb
cmpsb
mov
xchg
and
out
dec
cmp
mov
scas
loopne
es
sub
xor
and
movl
aaa
outsl
test
es
add
rolb
pushl
pushl
call
test
je
lea
jmp
enter
outsb
bound
adc
push
mov
jo
and
jo
mov
or
inc
sub
das
push
jmp
or
int3
xchg
out
sub
add
inc
nop
stc
jl
inc
add
data16
addl
cmp
bound
enter
and
lret
push
mov
jg
stos
xchg
aaa
pop
inc
stc
adc
es
inc
fdivs
imul
mov
pop
inc
push
inc
jl
cwtl
jge
cmpsl
cmpsl
pop
dec
subl
fwait
sub
int3
lods
mov
xchg
xchg
mov
orl
jbe
adc
add
hlt
or
sbb
inc
xchg
insl
mov
and
sbb
lods
inc
data16
xor
pop
jle
sub
inc
mov
mov
sub
test
std
mov
push
mov
aad
ds
cmpl
sbb
js
jle
sub
mov
or
dec
xor
pop
xchg
sbb
mov
mov
sub
xor
imul
add
daa
jnp
ja
xchg
pop
sbb
mov
add
jl
push
mov
scas
inc
rcll
mov
call
iret
and
lea
xchg
add
push
mov
out
jge
inc
fadds
iret
mov
fsubl
pop
xchg
cmp
enter
mov
mov
mov
mov
inc
mov
mov
sbb
arpl
pusha
mov
test
jno
jg
stc
lcall
sub
nop
cmp
mov
es
sbb
jb
outsb
jbe
ret
mov
or
inc
push
stc
std
jg
movl
lods
jo
xor
mov
jo
repnz
lret
jae
adcl
bnd
pushf
sbb
js
cs
loope
pop
inc
sub
mull
ret
xchg
add
pop
in
push
adc
adc
scas
sub
pop
scas
hlt
insb
mov
cmpsb
fsubs
xchg
imul
aam
sub
ret
leave
xor
imul
fistpl
mov
inc
mov
ja,pn
rcll
mov
mov
and
lcall
mov
jmp
outsb
adc
push
test
xchg
mov
and
stc
jns
pop
dec
or
jae
push
jne
gs
mov
movsb
cld
jns
int
outsl
andb
inc
and
int3
inc
mov
in
mov
add
out
push
dec
dec
and
pushf
mov
dec
or
addr16
adc
mov
pusha
flds
cli
add
pop
imul
bound
test
pop
or
jecxz
clc
push
pop
sbb
xchg
divb
xor
icebp
cmp
popa
das
aad
xchg
fcompl
push
popf
adc
hlt
inc
push
xchg
mov
getsec
jns
xor
mov
mov
jbe
jge
jmp
cld
jne
mov
je
mov
inc
aad
inc
push
mov
xor
add
push
mov
add
push
mov
jmp
inc
jmp
cwtl
loope
inc
pop
mov
mov
sti
les
and
jo
mov
lock
dec
fucomi
daa
push
in
in
sbb
fisttpll
and
mov
sbb
test
mov
and
loopne
shrl
mov
mov
or
fisttps
cmp
jecxz
inc
adc
or
lret
fdiv
push
mov
mov
test
sub
mov
pop
add
fistl
aaa
in
mov
xor
jb
lret
mov
adc
movsb
xchg
sub
mov
ss
add
add
inc
inc
mov
push
imul
push
shrl
pop
xchg
dec
addr16
loop
loopne
mov
add
imul
pop
mov
lods
outsl
jg
outsb
clc
jmp
xor
xchg
ret
pop
fldcw
push
dec
das
inc
pop
cmpb
pop
cmp
xchg
pop
jnp
je
jo
xchg
mov
out
stc
cmp
aam
pushf
xchg
hlt
sar
cmc
dec
mov
mov
imul
pop
dec
sbb
mov
inc
dec
xor
jl
adc
mov
mov
cmpsb
inc
xchg
adc
sahf
bt
cld
jno
inc
cmpsb
mov
and
hlt
cmp
mov
fldt
sti
push
jne
imul
jmp
fwait
pop
aas
lret
xor
test
pop
enter
pop
xor
scas
les
pop
mov
mov
ja
fisubrl
sub
dec
pop
lea
cld
xchg
dec
xor
adc
jmp
push
mov
mov
push
cli
push
fs
dec
jbe
negb
call
inc
divl
ret
fistpll
aas
adc
cmp
mov
fincstp
or
xor
mov
test
pop
push
mov
daa
pop
inc
gs
adc
pop
xchg
mov
adc
xchg
xor
enter
les
xor
pop
call
jo
inc
push
mov
pop
inc
jbe
fbstp
lahf
dec
hlt
add
jae
jno
mov
dec
imul
std
jle
push
cmp
repnz
insb
dec
push
stc
int
repnz
icebp
adc
ljmp
or
sarb
dec
insb
scas
mov
mov
push
setne
push
sti
mov
and
ljmp
cli
arpl
arpl
xchg
aas
cli
xor
sub
mov
mov
aaa
xor
nop
dec
fwait
mov
aas
sbb
mov
push
bound
rcrl
and
lea
test
sbb
push
jno
cmp
add
and
das
jl
sbb
dec
jmp
xchg
xlat
xor
out
push
test
and
lret
test
or
fcmovu
push
jo
fs
fs
push
das
and
inc
add
push
fmulp
in
int3
sarb
sbb
cmpsb
push
js
mov
add
pushl
call
mov
xor
mov
sub
sub
mov
add
mov
mov
mov
mov
xor
sub
mov
lea
incb
inc
push
pop
dec
xchg
jmp
sub
cs
cs
mov
sbb
into
ja
xchg
mov
jge
jo
call
sub
fwait
es
sarl
or
rcrb
mov
adc
cmp
adc
sbb
outsl
in
pop
test
inc
daa
sahf
orl
push
adc
lock
mov
mov
mov
mov
mov
xchg
pop
int
xor
cmp
pop
lds
fnstenv
xor
cli
and
sub
scas
mov
movb
shlb
es
sub
mov
cmp
push
call
xchg
mov
pop
mov
es
mov
fadds
and
mov
mov
int
mov
cltd
xchg
stos
xchg
cmp
push
dec
xor
adc
lahf
add
cwtl
jl
mov
lcall
xor
aam
mov
pusha
pop
sbb
es
ror
addr16
sbbl
out
loopne
xchg
loopne
adc
or
dec
inc
dec
mov
or
sub
dec
in
add
andl
js
addb
std
lcall
sub
adc
cmp
cmp
xchg
xor
stos
push
push
jae
xchg
mov
ljmp
add
in
mov
pop
lods
ljmp
mov
fimuls
mov
leave
dec
fidivs
cmp
leave
inc
add
inc
cltd
stos
push
mov
outsl
pop
push
shrb
push
push
test
mov
push
xor
ret
div
outsl
sbb
repz
setge
and
cli
mov
add
insl
fdivr
outsb
je
inc
push
sbb
inc
add
movsl
xor
aas
das
cmc
mov
gs
sbb
mov
jle
push
lret
mov
ds
cmp
jle
add
adc
ss
dec
cli
ja
sub
xchg
insl
jne
sti
dec
fdivs
lret
cwtl
jae
sbbl
arpl
mov
add
test
stos
insb
movsb
daa
mov
fisttps
insl
sarl
add
cmp
or
popf
stc
adc
push
push
test
adc
sub
xchg
out
dec
xchg
sahf
popa
sub
mov
jno
and
in
lcall
adc
rcr
insl
push
xlat
iret
ficompl
push
dec
jl
pop
and
adc
adc
xchg
push
mov
inc
test
rcl
pop
repz
repz
pop
mov
dec
jns
pusha
push
inc
addr16
mov
add
mov
mov
inc
mov
fcoml
sti
and
xor
pop
fidivl
dec
xchg
and
xchg
or
mov
xchg
repz
mov
in
ret
lods
lret
fcomp
fistpl
xchg
jnp
push
aam
outsl
sbb
or
int3
xor
sti
cmp
clc
stos
ret
dec
and
decb
pushl
mov
mov
pushl
lea
pushl
lea
pushl
lea
pushl
lea
pushl
xchg
inc
inc
sub
push
pop
call
mov
mov
add
pop
pop
pop
leave
ret
push
mov
sub
push
sbb
mov
mov
mov
sub
xor
mov
adc
mov
movl
sub
movl
mov
andl
xor
add
inc
mov
cmpl
jne
pushl
push
push
call
cmpl
jne
xor
add
inc
mov
cmpl
jb
mov
mov
or
xor
mov
adc
add
mov
or
mov
adc
mov
sbbl
xor
add
mov
or
mov
mov
inc
movl
movl
cmpl
je
cmpl
jne
call
xor
add
dec
mov
jmp
mov
mov
sub
add
jmp
fldcw
cs
mov
jae
shll
adc
pop
pop
into
jo
imul
cwtl
cld
xchg
hlt
das
add
movsl
popl
jecxz
mov
setge
mov
icebp
addr16
xchg
fnsave
pusha
sar
roll
jb
mov
and
stos
lock
inc
mov
aas
add
outsl
jg
jae
fcomps
int
xor
add
rolb
pushf
xchg
imul
enter
dec
push
and
pop
mov
repnz
pusha
data16
sarb
adc
mov
jg
cmc
cmc
lahf
adc
pop
in
and
aas
ljmp
pushf
leave
pop
push
cmp
aaa
sub
movsb
push
pop
and
aaa
ss
lods
fdivs
inc
adc
or
loopne
adc
inc
gs
das
pop
push
cld
outsl
jmp
cli
out
cwtl
or
sub
repz
and
sbb
aas
lea
mov
les
xor
inc
or
scas
stos
jp
add
ret
loop
dec
xchg
loope
icebp
xchg
mov
test
iret
mov
mov
sub
mov
sub
test
inc
jno
xchg
dec
dec
das
mov
pop
das
xchg
sub
dec
or
mov
movsb
adc
cmp
es
scas
cld
jle,pn
std
mov
pop
dec
in
mov
pusha
sahf
insb
sbb
xor
mov
xchg
ret
inc
sbb
adc
adc
leave
adc
cmpsl
in
fcoml
push
push
stos
add
iret
cmpb
xor
push
das
cmpsb
iret
inc
inc
imul
lods
loope
xor
mov
mov
xor
xor
enter
subb
xor
xor
rolb
add
or
fdivs
test
inc
add
inc
aam
test
inc
add
cmp
movl
movl
and
movl
jmp
lods
mov
jno
fidivl
nop
test
imul
cmp
mov
stc
add
xchg
sub
inc
dec
insl
cmp
pop
xchg
inc
mov
inc
jb
icebp
inc
outsb
mov
mov
in
popa
cmpsl
and
sub
shrl
xchg
sub
in
sub
sarb
imul
mov
inc
rclb
test
clc
test
outsb
inc
fwait
mov
inc
xchg
or
enter
and
push
pop
add
lcall
hlt
rorl
stc
pop
xor
ror
neg
or
aaa
inc
jmp
pushl
mov
outsb
xchg
repz
sbb
jne
push
cli
call
or
fldt
add
hlt
mov
and
aaa
dec
cmc
in
aam
mov
adc
rolb
mov
or
jmp
aas
fs
mov
pushf
xchg
jg
jle
pop
sbb
fnstcw
jns
lods
out
xor
dec
fildll
ja
mov
jnp
cs
push
jmp
into
sahf
mov
jns
shrl
inc
mov
xorl
mov
arpl
sahf
xor
add
pushf
jg
jne
std
jmp
jo
or
adc
inc
aam
lcall
addr16
inc
sbb
inc
arpl
or
mov
add
push
jp
and
push
insl
mov
sub
aas
out
mov
iret
mov
inc
ds
jmp
mov
xor
shlb
lock
mov
enter
fisubrl
jp
loope
sbb
das
mov
fs
jle
js
dec
dec
shrd
loop
mov
or
addr16
mov
sub
sbb
out
mov
loopne
int
in
mov
inc
les
test
inc
add
add
add
add
je
cmpl
jne
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
adc
mov
xor
sbb
mov
add
cmp
jmp
mov
jae
xchg
xor
xchg
lret
imul
inc
jo
or
mov
xor
into
scas
jle
arpl
xor
jmp
push
aas
sub
and
mov
sub
sahf
jnp
inc
ret
fwait
push
inc
frstor
push
lock
in
rcll
adcl
and
bound
popa
pop
insb
inc
sbb
cld
and
push
icebp
mov
lds
mov
fnstsw
outsb
test
iret
shl
data16
std
push
aaa
sub
jle
stos
pop
dec
aaa
test
in
outsb
shll
jb
insl
inc
in
ja
dec
aas
jae
adc
mov
jle
xor
mov
fs
mov
dec
cmc
cwtl
jl
xor
pop
faddl
add
jne
mov
mov
inc
stc
jmp
scas
jmp
cmp
inc
push
fisttps
xchg
test
adc
cmp
jp
fcmovnbe
pop
xchg
es
mov
rorb
and
loope
stc
adc
or
js
jo
stos
ret
cmp
iret
cli
pusha
push
inc
test
or
popf
test
adc
aaa
cmpsb
adc
mov
push
cmpsl
and
inc
ss
into
xchg
jl
jge
jecxz
push
ret
pop
adc
les
mov
in
aaa
cld
mov
mov
shll
das
add
hlt
sbb
sbb
dec
cmp
arpl
xchg
pop
push
cmp
pop
icebp
cmp
insl
sbbb
loopne
push
lret
cmp
mov
ds
idivb
loope
add
add
push
aas
jns
pop
lock
stos
outsl
adc
mov
sti
fisubl
jnp
push
jl
clc
mov
lds
in
lcall
movsl
cltd
scas
andb
pop
int
adc
mov
aad
push
je
das
pop
dec
je
push
movl
jmp
movl
mov
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
xor
mov
jmp
jmp
adc
inc
jno
pushf
jo
dec
cld
adc
jo
imul
sub
mov
jb
mov
sub
sarb
xor
inc
xor
push
insl
dec
dec
mov
aad
pop
jo
mov
outsb
je
loope
and
pop
ja
mov
test
lods
stos
push
lods
add
add
cmp
inc
adc
into
push
aas
aam
pushf
scas
or
fstl
fs
sbb
data16
das
pop
aas
mov
fidivs
pop
adc
mov
push
jb
subb
push
add
or
imul
dec
dec
test
cmp
push
jge
sub
jb
push
lret
dec
ret
mov
sahf
push
addb
jmp
dec
leave
rclb
push
ljmp
cld
in
mov
dec
jecxz
repz
xchg
cli
push
mov
fidivs
out
ljmp
icebp
sbb
ja
sub
es
and
mov
and
jns
mov
push
cld
and
addr16
push
xor
in
dec
pop
pop
xor
lret
mov
sbb
lahf
adc
out
ds
fsubrl
xor
outsb
jecxz
inc
ds
es
jmp
js
cli
lcall
pop
into
mov
mov
xor
push
add
push
iret
pop
jmp
stc
cmp
mov
mov
mov
cmpsl
xchg
mov
lods
fwait
test
push
shrb
insb
loopne
push
and
jbe
lock
pop
cmpsb
adc
dec
outsb
dec
push
fwait
loope
hlt
xor
fidivl
testb
sub
inc
into
outsb
xor
sbb
fsts
loopne
pop
test
cs
mov
push
xchg
and
movsb
ljmp
ss
subb
sub
mov
xor
sbbl
add
movl
cmp
movl
jmp
sbb
pop
mov
loope
push
inc
test
xor
insl
mov
jg
jo
sub
mov
xor
dec
sub
push
cmp
jno
filds
ljmp
ret
inc
cmpsl
lock
shl
pop
mov
or
outsb
mov
je
out
mov
popa
in
mov
xchg
push
cld
outsl
xor
mov
lods
outsb
pop
pop
jmp
mov
jno
mov
fisubrl
xchg
aas
stos
xor
dec
cmp
js
dec
pop
in
loop
mov
jg
dec
imulb
mov
cmp
add
mov
dec
mov
cltd
push
aas
sbb
fucomp
push
inc
cmp
mov
pop
push
sbb
dec
jbe
sub
or
and
in
inc
fidivl
pop
inc
mov
mov
shl
or
int3
subl
popa
nop
hlt
cmpsl
stos
sub
rol
imul
xchg
mov
add
xor
sbb
jl
inc
roll
pop
jle
ljmp
dec
dec
imul
adc
dec
mov
fwait
jnp
dec
push
jecxz
jecxz
imul
inc
xor
rorl
sbb
fwait
test
pop
sub
adc
jecxz
sub
lret
nop
xchg
adc
jl
jo
inc
dec
aam
icebp
ljmp
push
xchg
mov
cmp
es
in
cs
xor
pop
dec
jle
add
xchg
or
and
and
aad
add
adc
rolb
push
mov
dec
push
cld
jle
or
adc
push
adcb
inc
rorl
adc
sub
int
call
mov
movsl
dec
cmp
notl
xchg
jbe
xor
jle
adc
sti
sub
mov
addr16
cmp
sbb
mov
inc
adc
stos
jb
mov
sbb
mov
xor
xor
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jne
pushl
call
jmp
xor
add
mov
add
add
add
imul
mov
mov
or
mov
sub
cmp
movl
ja
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
call
jmp
adcl
jmp
rcrl
popf
push
stos
arpl
jg
jo
imul
jns
add
jb
sub
add
sbb
popa
inc
insb
jb
repnz
pop
cltd
cmp
sub
cwtl
lds
sbb
sub
rol
and
and
cmc
jmp
mov
and
pop
into
jmp
jmp
or
sbb
sbb
cmp
pop
out
mov
je
aas
adc
notb
sbb
icebp
pop
push
les
push
scas
xchg
sbb
inc
fcmovne
dec
sub
jbe
lahf
std
rcrb
xor
cltd
stos
loop
sti
outsb
xchg
cmp
in
imul
sub
hlt
cwtl
lds
cmc
sub
mov
mov
lcall
adc
add
shll
cli
cmpsl
shll
je
add
adc
pop
in
xchg
addr16
and
mov
sti
in
sbb
dec
jmp
mov
fchs
push
xor
int3
cld
xor
mov
inc
sub
xlat
out
mov
mov
cmp
xchg
cmp
mov
fcoms
adc
adc
mov
add
in
adcl
sbb
adc
icebp
jecxz
mov
cwtl
jbe
xor
dec
adcl
pop
in
inc
lods
test
bound
int3
ss
mov
rcll
xor
inc
push
push
adc
ss
in
xchg
lds
mov
cld
dec
xchg
daa
dec
jo
sub
rolb
aad
push
sub
rcll
outsb
arpl
or
scas
push
fstpt
jle
xchg
mov
lahf
jge
push
push
enter
movsb
mov
jge
mov
in
dec
mov
xor
add
movl
jmp
and
mov
or
mov
xor
not
xor
subl
add
or
add
or
imul
adc
mov
sub
mov
andl
sub
cmp
movl
ja
mov
movl
jmp
mov
mov
xor
xor
movl
cmpl
je
cmpl
jne
push
pushl
pushl
call
cmpl
jne
xor
add
dec
mov
mov
dec
mov
jmp
xor
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
mov
jbe
mov
jmp
imul
jb
adc
push
mov
jg
jo
jno
xlat
xor
add
inc
xor
in
hlt
in
xchg
mov
or
xor
mov
cmp
out
test
fsubrp
xchg
clc
enter
pop
mov
push
jp
dec
sbb
pusha
xor
insb
inc
mov
aas
jb
pop
enter
or
mov
sbbb
inc
aad
mov
adc
std
mov
fistl
xchg
cmp
pop
xor
push
push
call
rcr
jg
jl
pop
or
mov
ds
sub
es
mov
and
adc
inc
dec
xlat
jg
cmp
adc
leave
mov
adc
rolb
xor
addr16
test
fs
test
aas
lea
aam
pop
sarb
mov
adc
dec
xchg
fisttpl
mov
test
arpl
fildl
cmc
jnp
xchg
or
sarb
adc
leave
and
xchg
stos
lea
jmp
test
fwait
je
enter
notl
jne
sti
popa
rolb
add
es
out
frstor
xchg
mov
mov
sub
es
in
and
aaa
mov
jp
mov
std
xchg
ret
enter
pop
addr16
pop
mov
dec
les
or
mov
aaa
mov
fnstenv
or
mov
into
or
ficoml
push
jnp
inc
jns
fwait
dec
cwtl
std
aam
add
push
fisubl
js
insb
pop
lahf
pop
pop
test
jo
jp
adc
sbb
push
mov
loope
fcoms
cmp
adc
fs
lods
mov
add
call
jp
bound
test
jns
adc
pushf
jl
jo
dec
fcoms
in
push
sti
mov
inc
scas
jp
mov
pop
sub
clc
xor
add
add
imul
mov
mov
mov
mov
add
movl
mov
movl
movl
mov
xor
add
jmp
mov
xor
add
mov
mov
mov
jmp
arpl
push
out
jnp
cs
aaa
lcall
jo
dec
cmp
addl
sbb
pushf
xor
mov
dec
dec
dec
mov
and
cmpsb
cmp
jmp
cmp
cmpsl
pop
ljmp
pop
leave
lret
jmp
jecxz
mov
mov
mov
lahf
fimull
xchg
dec
sub
das
push
iret
lret
js
add
push
push
fmull
push
sub
add
xchg
inc
mov
lret
adc
sbb
push
sbb
xchg
shl
addr16
push
mov
adcb
fs
push
mov
add
xor
int
ljmp
jp
loopne
js
mov
sub
sbb
shrd
mull
sub
pop
mov
inc
sarl
sub
push
stos
setb
pop
mov
add
ret
xchg
xor
push
lret
jmp
xor
adc
sub
cmc
xlat
lahf
pusha
pop
fmuls
shl
in
xor
es
mov
cmc
scas
in
int3
or
dec
adc
sbb
mov
add
loope
out
mov
das
das
mov
aas
aaa
push
mov
mov
insl
arpl
mov
arpl
xchg
adc
xor
or
das
das
mov
mov
pop
mov
and
pop
sub
leave
notb
sub
lds
push
xor
dec
mov
cld
mov
push
push
xchg
inc
push
pusha
cmpsb
repnz
ljmp
int3
jp
stos
pop
loop
xor
sarb
add
push
mov
push
and
rcll
add
fisttps
test
and
mov
dec
cmp
mov
test
cmp
ficoml
or
push
hlt
xor
add
mov
mov
mov
jmp
bound
popf
cmc
mov
cltd
insb
outsb
fldl
jo
jg
jo
int
inc
sahf
jle
es
or
cmp
sub
cmp
outsb
sbb
scas
cmp
and
int
push
not
cmc
ror
aas
mov
jne
loope
leave
dec
mov
inc
or
cmp
and
ds
sbb
xor
cltd
insl
sbb
imul
dec
or
cltd
mov
out
or
pop
adc
popf
push
cmp
mov
int
push
adc
mov
jp
enter
out
lods
stos
xor
movsb
pop
xor
ss
add
inc
cmc
pop
aas
loope
mov
shrb
out
xor
mov
xlat
fcomps
cmp
pop
test
dec
mov
push
dec
jmp
sbb
mov
clc
pop
outsb
mov
fwait
es
fwait
jle
scas
int
lret
and
push
add
imul
xorb
inc
add
adc
xchg
lcall
je
out
popf
xorb
test
stos
xchg
cmpsb
pusha
xor
sbb
out
std
or
mov
imul
mov
push
xchg
or
cmp
mov
pop
and
fimuls
push
push
popf
inc
ss
sub
and
rcrb
sti
jb
outsl
sbb
repnz
add
mov
outsb
xor
sub
inc
ds
push
enter
cmp
mov
inc
cld
dec
cmp
into
call
inc
adcb
xor
xchg
cmp
push
sbb
dec
leave
jmp
ret
movsl
xchg
add
negl
mov
and
jo
and
dec
outsl
addl
loope
and
cld
mov
mov
pop
xor
push
hlt
xchg
mov
fistps
push
jnp
add
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
xor
xor
add
jmp
or
das
mov
push
test
into
insl
and
mov
jo
imul
cmp
mov
inc
jo
mov
stos
ljmp
mov
push
or
arpl
call
jnp
sub
std
aaa
test
das
andb
push
clc
cltd
push
ja
dec
cmp
aam
mov
push
lar
or
pop
add
inc
push
call
int3
add
xchg
bound
sub
jns
jecxz
lahf
push
adc
rcl
mov
pusha
jnp
pop
stos
push
lcall
dec
mov
pusha
mov
adc
das
mov
mov
and
cltd
mov
addr16
and
adc
pop
pusha
dec
cmp
jmp
pop
scas
and
orl
adc
enter
cmc
adc
mov
jo
test
jecxz
push
popa
cmp
pop
jb
repnz
pop
xchg
fiadds
sub
mov
jno
int3
pop
out
clc
pop
inc
add
adc
fidivrl
mov
cmp
fdivp
dec
xor
pop
mov
jp
mov
cmp
movsl
rolb
lahf
je
adcl
sbb
xchg
mov
xrelease
je
loopne
sub
pop
shll
sbb
xchg
orl
or
arpl
cmpsl
sub
adcl
lcall
subl
xchg
fsubl
jge
test
arpl
fstl
mov
out
mov
cmp
dec
stc
mov
pop
jle
arpl
pop
sub
adcb
mov
inc
lea
lds
xor
dec
sbb
xchg
aaa
adc
ret
idiv
loope
gs
leave
call
js
adcb
mov
call
in
fisttps
add
add
xchg
mov
js
mov
cmp
jo
imul
mov
out
sbb
divps
xor
ret
sbbb
adc
repz
dec
push
mov
test
and
add
sub
out
and
push
sbb
sti
mov
popa
fwait
lret
or
jp
dec
pop
sahf
pop
add
mov
sahf
xchg
and
in
xor
push
bnd
andb
out
push
out
mov
icebp
cwtl
shll
shrl
mov
mov
xchg
or
je
rcrb
push
stc
outsl
sbb
sub
aas
les
js
cwtl
aad
lods
cmp
lret
mov
mov
divl
lock
jb
jae
icebp
inc
aaa
cmpsb
mov
sti
in
jl
xor
adc
cmp
sbb
movsl
add
cmp
scas
imul
outsl
add
dec
cli
sbb
movsb
jae
into
cmpb
adc
xor
jnp
cmp
pop
push
jb
inc
in
loop
movsl
cmc
ljmp
xor
mov
add
insl
mov
into
cmpsl
and
loop
and
jno
cli
mov
insl
mov
xor
testb
mov
aam
xchg
out
dec
pop
xor
or
add
sub
mov
add
test
cmp
sbb
ljmp
std
js
adc
mov
f2xm1
fs
ret
popa
cld
sub
out
jne
lods
mov
pmaxub
push
push
insl
or
sub
lock
jns
adc
inc
adc
iret
dec
inc
loop
lret
mov
inc
mov
stos
sbb
js
out
sti
dec
stc
mov
adc
jo
movsl
xor
and
push
ja
mov
ds
dec
jle
lret
shl
addb
add
add
icebp
mov
icebp
ficompl
adc
fdivs
imul
jno
inc
sbb
sahf
xchg
jecxz
movsl
mov
test
cs
gs
in
sub
mov
popf
xor
add
dec
loop
xchg
adc
adc
addr16
adc
sub
mov
dec
xor
testb
and
pop
xchg
andl
add
cmpsb
pusha
sbb
ljmp
shrb
les
jae
cmp
push
js
jo
loop
int
push
dec
or
add
mov
push
in
inc
lret
xor
insb
fldt
mov
sahf
sahf
fld
jae
inc
pop
jnp
adc
push
aas
xchg
sbb
mov
and
out
xor
scas
adc
sub
imul
insl
out
mov
icebp
mov
mov
dec
idivb
xchg
data16
lcall
out
adcl
cmc
add
mov
outsb
xchg
xor
cwtl
cmpsl
jo
or
push
xchg
daa
push
push
cmp
and
aas
mov
adc
jle
adc
jle
cmp
xchg
in
xor
mov
rep
std
mov
out
push
cmpsb
in
imul
mov
dec
cmp
gs
shlb
into
lds
outsb
xchg
adc
xchg
adc
mov
pop
adc
add
fs
sbb
dec
in
nopl
inc
cld
fsubrl
jmp
out
or
adc
xchg
mov
push
idivl
xor
adc
sbb
inc
jge
jge
mov
push
inc
lahf
sbb
jge
xchg
cmp
lods
int
leave
mov
mov
sahf
add
mov
mov
mov
xor
jmp
dec
iret
lods
dec
lods
imul
add
out
jo
jg
jo
rorl
insb
mov
dec
sbb
int
mov
push
sub
lods
push
arpl
stos
addl
cmp
in
adc
dec
into
imul
mov
mov
icebp
xchg
iret
cmp
shrl
adc
add
int
sbb
mov
repz
sbb
mov
sbb
cltd
adc
loopne
dec
adc
pop
imul
mov
fdivrp
imul
in
inc
jae
xor
cmp
and
cmp
lods
and
jmp
loope
dec
insb
idivb
mov
pop
addb
dec
lcall
clc
mov
into
rcr
test
adcb
xor
pop
fcoms
jne
xor
or
inc
cmp
push
arpl
jae
or
mov
ljmp
mov
push
scas
add
in
adc
xchg
je
cmpsb
mov
popa
in
or
sbb
xchg
mov
push
pop
adcl
inc
jge
scas
sar
fadd
sbb
or
icebp
and
pop
adc
stos
out
xchg
xor
or
shlb
scas
insl
xor
sub
bnd
pop
mov
add
cwtl
jecxz
lcall
add
fadd
push
jmp
aaa
sub
xchg
inc
subl
gs
mov
std
jb
jl
divb
adc
shl
cmp
jo
jb
dec
hlt
dec
inc
pusha
dec
ja
mov
xchg
loope
or
or
std
fadds
data16
in
cld
shrb
jb
push
clc
mov
insb
xchg
lsl
mov
ret
shrl
dec
mov
std
mov
scas
xlat
mov
xor
sub
mov
mov
xor
add
imul
mov
xor
sub
lea
cmp
jbe
mov
jmp
int3
sub
push
mov
xor
dec
loopne
jo
imul
pop
fidivs
dec
mov
jmp
and
test
pop
mov
xor
mov
add
movsl
rclb
lods
sarl
stos
sub
dec
sub
dec
adcl
dec
jmp
add
sbb
ljmp
and
and
lahf
adcb
dec
and
fcoms
mov
push
push
cmpsb
outsl
sbb
add
cmpsb
imul
xor
in
mov
nop
jbe
mulb
dec
sbb
and
xor
shl
xchg
fiaddl
shll
sahf
aas
push
imul
pushf
xlat
sahf
inc
les
inc
xchg
dec
inc
dec
movl
sub
movsb
adc
cmpsb
shr
and
mov
xchg
test
xorl
int
or
dec
jmp
divl
or
sar
add
movl
ficompl
hlt
push
dec
sub
pop
imul
int
xor
dec
add
xchg
push
jo
jns
push
sbb
es
in
pop
add
and
xor
sbb
pop
adc
dec
push
subl
mov
mov
xor
push
jnp
test
clc
mov
sahf
mov
add
pop
jnp
inc
pop
mov
scas
pushf
es
dec
in
loopne
out
fldl
adc
pop
subl
jmp
into
inc
insl
pop
dec
mov
shrb
mov
pop
xchg
mov
movsb
mov
hlt
int
rcrl
jae
fcompl
test
xchg
jl
mov
lcall
cmp
out
imul
jno
cmp
sbb
adc
mov
mov
cmp
push
decl
adc
jge
xor
add
imul
mov
xor
add
mov
lea
mov
mov
jmp
popa
ja
add
xorl
adc
mov
loopne
mov
imul
mov
cmp
sarl
sbb
xchg
cmpsb
fidivrs
lea
aad
int3
pushf
pusha
dec
mov
jg
inc
nop
sbb
mov
outsl
dec
je
cwtl
lahf
inc
sbb
jge
jne
push
sub
enter
arpl
cmpb
aam
fcmovnb
aam
adc
pop
pop
adc
movsb
arpl
stos
out
xchg
bound
mov
ljmp
pop
xchg
pop
cltd
mov
add
js
and
popf
mov
in
fcomip
cmp
jle
dec
data16
ss
cwtl
mov
cmpsb
stc
sti
xchg
inc
cmpsb
jecxz
pop
push
pop
fildl
fmull
repnz
sahf
cmpsb
jmp
and
bound
arpl
rorl
je
popl
xlat
stos
imul
mov
hlt
add
insl
mov
mov
std
lcall
jo
add
inc
in
js
mov
jb
fs
adc
rcll
xchg
movsb
cld
sbbl
lds
sbb
add
test
mov
or
test
cli
add
pop
xchg
and
mov
and
enter
push
hlt
cli
sbb
ljmp
xor
shrb
aaa
jbe
rcr
xadd
or
xor
jnp
cmp
xchg
dec
add
sub
push
bound
mov
into
ja
nop
xor
lods
insl
test
dec
std
nop
dec
rcll
lret
xchg
dec
mov
xchg
call
cmpb
cld
dec
pop
mov
mov
test
mov
pop
mov
and
clc
mov
repnz
fcmovne
lods
es
loope
imul
add
mov
jle
mov
cmp
sarb
sub
add
mov
mov
xor
add
imul
cmp
jbe
pop
pop
leave
ret
push
mov
sub
xorl
push
call
test
jne
addl
xor
jmp
call
cltd
movl
cmp
jne
cmp
je
push
subl
call
addl
test
movl
jne
subl
push
xor
mov
or
mov
xorl
movl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
jmp
andl
mov
inc
mov
cmpl
jne
pushl
pushl
push
push
call
cmpl
jb
lea
subl
mov
lea
andl
mov
inc
mov
cmpl
jne
pushl
pushl
push
push
pushl
call
cmpl
jb
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jb
mov
xor
mov
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jne
push
pushl
pushl
push
push
push
pushl
call
jmp
mov
movl
cmpl
je
cmpl
jne
push
push
pushl
push
pushl
push
pushl
push
call
mov
dec
mov
jmp
mov
xor
mov
mov
addl
push
mov
sbbl
xor
sbbl
push
xor
mov
adcl
add
mov
mov
movl
cmp
mov
je
mov
xor
subl
add
addl
imul
mov
jmp
andl
mov
inc
mov
cmpl
jne
pushl
push
push
call
cmpl
jb
xor
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
add
mov
mov
sbb
mov
sbb
xor
not
add
mov
mov
mov
subl
xor
add
movl
cmp
jne
xorl
pushl
subl
pushl
call
mov
mov
xor
mov
sbb
mov
inc
mov
mov
or
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
push
push
call
cmpl
jne
xor
or
inc
mov
jmp
mov
mov
mov
movl
mov
and
mov
andl
mov
inc
mov
cmpl
jne
call
cmpl
jb
mov
xor
xor
add
mov
xor
xor
add
lea
cmp
ja
mov
xor
lea
push
mov
xor
lea
push
mov
pushl
call
mov
xor
lea
mov
mov
xor
xor
add
mov
xor
lea
cmp
jbe
mov
mov
mov
mov
mov
mov
mov
sub
xor
mov
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
pushl
mov
pushl
add
mov
mov
pushl
call
mov
mov
mov
jmp
mov
mov
xor
add
cmp
jne
mov
xor
add
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
mov
movl
mov
xor
add
mov
mov
mov
mov
mov
mov
push
pop
sub
add
movl
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
lea
mov
mov
xor
add
mov
lea
push
mov
xor
add
push
mov
push
pushl
call
xor
mov
sub
push
mov
add
push
call
inc
cmp
jb
mov
call
lea
mov
mov
mov
pushl
lea
push
call
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
xor
or
sub
mov
mov
movl
cmpl
je
cmpl
jne
push
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
add
mov
mov
mov
sub
mov
xor
add
and
mov
mov
mov
subl
push
adc
push
mov
andl
mov
inc
mov
cmpl
jne
pushl
call
cmpl
jb
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
jmp
jmp
cmp
inc
mov
negl
daa
call
jo
xchg
jg
jo
nop
or
lret
sbb
sbb
adc
or
cltd
mov
add
sbb
jecxz
dec
imul
jecxz
cli
std
das
mov
push
pop
fwait
push
add
xor
mov
xchg
sub
pop
aad
or
push
sbb
jmp
test
mov
in
daa
jle
xor
or
enter
clc
add
shr
popf
insl
stc
mov
hlt
xor
and
and
les
push
adc
aad
in
dec
in
xchg
mov
and
faddp
mov
and
cmp
xchg
and
enter
push
xchg
loop,pt
mov
lret
pop
mov
jl
and
or
lret
cmp
scas
outsl
sti
adc
cs
icebp
push
jo
cli
jp
cmpl
lea
aam
pop
fcomps
mov
inc
test
testl
xor
js
pop
add
add
jg
enter
shr
js
inc
aam
jecxz
lret
scas
push
es
or
das
lock
cmp
ss
mov
sahf
arpl
jle
gs
es
addr16
mov
mov
xchg
inc
js
repnz
in
cmc
add
fmuls
mov
pop
ss
mov
inc
dec
into
iret
cwtl
lcall
ret
imul
and
daa
pop
pop
aaa
push
loopne
insl
or
push
jmp
mov
jae
jno
mov
hlt
or
inc
xor
jo
jg
jo
push
arpl
incb
jge
add
xor
inc
adc
int
call
scas
into
pop
sar
jae
out
sahf
out
xor
cmp
clc
cli
fst
add
stos
fnop
mov
xor
mov
call
jae
pop
add
cs
out
ret
add
in
lahf
enter
mov
cmc
push
sahf
aas
repnz
pop
fdivs
in
ret
sub
pop
xor
mov
fisttpl
mov
frstor
or
gs
shll
ja
adc
in
cmpb
xchg
addr16
rolb
int3
mov
lret
sbb
in
mov
sahf
sahf
fsts
ja
cmp
and
out
inc
pop
sbb
sub
imul
sarb
mov
mov
mov
int
mov
mov
ss
add
sahf
out
in
rclb
xor
loop
fadd
or
add
aad
cmpsb
pop
sbb
mov
in
test
ljmp
or
test
gs
test
das
mov
test
lahf
dec
mov
inc
xor
iret
pushf
roll
in
sbb
popf
test
mov
enter
stc
js
push
xor
sbb
rorb
mov
pop
push
inc
inc
mov
and
js
cltd
cmpsb
and
push
jg
fnsave
lahf
jb
cli
pop
lods
lods
or
and
movsb
das
jae
notb
leave
xchg
adc
sub
into
stos
push
add
mov
adc
add
sbb
mov
notl
lea
xor
mov
mov
add
mov
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
add
mov
movl
lea
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
and
mov
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jne
push
push
push
call
jmp
mov
addl
mov
sub
xor
add
add
neg
mov
mov
movzwl
sbb
mov
movl
mov
mov
orl
mov
addl
movzwl
add
movl
mov
jmp
jbe
dec
sahf
jb
jbe
xor
inc
cmc
mov
xchg
jg
jo
outsl
js
dec
mov
je
mov
out
into
and
pop
stos
sbb
enter
push
iret
mov
pop
mov
inc
xor
pop
lret
sbb
adc
mov
popa
imul
inc
js
ja
adc
fdivrs
idivb
and
inc
lods
xchg
pop
cmpsl
into
inc
lcall
rolb
sbb
pop
pop
jo
lahf
lcall
pop
dec
pop
ret
es
mov
enter
pop
iret
iret
mov
sbb
jge
jg
or
jmp
popf
pusha
mov
push
dec
and
call
pop
inc
and
arpl
cmp
mov
mov
push
rep
add
into
dec
clc
aaa
aam
repz
rcrl
mov
mov
push
fwait
pop
jbe
std
bound
xorl
sbb
pop
mov
out
fidivs
test
sahf
add
jno
mov
ss
shlb
add
int3
ss
xor
pop
mov
je
mov
push
sbb
add
mov
ja
sub
in
xor
in
outsb
sahf
push
mov
je
das
mov
mov
loopne
adc
rcrl
leave
int3
jne
test
addl
jge
pop
jne
push
mov
jecxz
jecxz
lods
adcl
adc
cmp
or
stc
inc
and
mov
xchg
xchg
sbb
or
jmp
or
add
cmp
jne
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
mov
mov
mov
xor
mov
sub
add
mov
mov
mov
movzwl
add
mov
mov
jmp
and
repnz
inc
std
or
jo
xchg
jg
jo
sub
cs
mov
push
fwait
outsb
lret
mov
rorl
test
sub
int3
pop
fisubrl
enter
cmpsb
push
mov
adc
xchg
faddp
in
cmp
cmp
jb
or
call
in
sub
xor
add
xor
xor
mov
fadd
adc
jae
nop
mov
rcrl
fisubl
gs
pop
fldl2e
mov
jmp
scas
test
add
push
int
inc
lods
mov
jnp
out
mov
loopne
xchg
jmp
pop
jo
movsb
decl
sub
jg
loopne
gs
xchg
jle
or
sub
addr16
out
enter
not
std
stos
in
mov
test
leave
ljmp
push
add
dec
mov
lret
enter
lea
sbb
arpl
stos
adc
inc
pop
xchg
inc
pusha
and
fldcw
mov
aas
fidivl
xorl
mov
addr16
pushf
or
sbb
jp
and
iret
push
lret
ljmp
adc
insl
pop
mulb
jns
dec
mov
inc
xor
xor
push
pop
and
mov
mov
jg
fbstp
fsubrp
daa
cmp
test
cltd
movsb
test
out
xchg
xor
movsl
iret
std
add
mov
mov
lret
aam
int3
sub
mov
xor
lea
xor
sub
mov
movzwl
cmp
mov
movzwl
jg
xor
sub
sub
mov
jmp
xor
lea
mov
mov
cmp
je
mov
movl
jmp
mov
mov
xor
add
cmp
je
jmp
icebp
in
popf
adc
xchg
cld
insl
mov
ljmp
clc
inc
movsb
or
outsl
or
pusha
mov
pop
jmp
jb
inc
mov
loope
and
inc
xchg
rcrb
sahf
pop
sahf
frstor
in
inc
rorl
and
or
inc
pop
fcomip
insl
push
es
mov
pop
test
xor
adc
pop
xor
and
jb
popa
push
mov
mov
clc
bound
dec
mov
imulb
psubusb
xchg
fbstp
ret
adc
cs
insl
stc
gs
pop
insb
xor
mov
xchg
or
adc
xchg
xor
cli
je
xchg
push
ret
or
in
ficomps
rorb
xchg
mov
je
scas
bound
rclb
lods
jnp
push
mov
sub
mov
or
or
scas
jne
sub
and
popf
pop
push
cmp
loop
or
dec
sub
fdivp
repz
fstpt
inc
lock
das
sbb
aas
loop
shrb
mov
roll
int
jecxz
xchg
jb
sub
stos
adc
and
popf
mov
lock
jp
add
adc
sbb
mov
inc
or
or
into
outsl
sub
or
sub
jno
dec
sub
cmp
gs
mov
jg
add
dec
clc
outsb
xor
insl
lahf
mov
and
mov
pop
mov
push
mov
in
push
mov
pop
add
jnp
clc
mov
mov
lea
add
mov
mov
mov
mov
mov
xor
add
jmp
iret
dec
mov
mov
icebp
dec
dec
int
dec
int
xchg
js
call
jo
je
aad
pop
adc
mov
loopne
dec
mov
ja
fcoms
cmp
dec
mov
mov
mov
in
add
test
addb
fistpl
aad
ret
ret
js
arpl
jno
sbb
mov
adc
adc
jge
in
cld
shll
mov
or
dec
adc
adc
es
orb
push
cmp
outsb
jbe
push
scas
jp
add
movsl
inc
inc
lock
sahf
mov
test
jle
mov
sub
push
jge
lea
cmpb
jecxz
dec
cmc
sbb
and
xchg
bound
scas
xor
call
repz
loopne
xor
enter
scas
popa
sub
mov
iret
mov
js
aaa
clc
aam
cmp
mov
sbb
stc
sbb
mov
xchg
mov
data16
mov
xor
and
sub
sti
stos
pop
cmp
mov
adc
loop
aaa
mov
or
cld
sar
outsl
fsts
add
fmuls
adc
jmp
jns
sbb
test
pop
cmp
movsl
jecxz
outsl
stos
les
stos
lcall
stos
loop
xorb
adc
jne
std
jg
mov
sub
jp
repnz
mov
lcall
outsb
sub
clc
dec
rorl
mov
inc
fsubr
mov
add
mov
icebp
in
icebp
mov
push
dec
mov
jo
jg
jo
lods
jmp
aad
test
test
mov
mov
inc
popa
or
adc
fsubl
leave
or
es
dec
sbb
aaa
mov
lock
inc
leave
cli
lods
xor
xor
ss
mov
stos
je
sahf
cwtl
out
repz
es
sbb
aam
dec
int
mov
das
cmp
in
inc
fistpll
andb
cmp
push
jmp
xor
cmp
lods
shrb
repnz
mov
mov
cltd
je
cmpsl
jl
sahf
push
pop
sbb
jae
imul
push
inc
pop
ljmp
fwait
or
pop
sbb
leave
dec
stos
xor
lods
rcll
cmp
scas
rclb
add
cmp
pushf
sub
inc
addl
push
dec
xchg
push
jne
inc
adc
sbbl
das
ja
sbb
ja
cmpb
pop
sub
or
stc
mov
sub
in
iret
popa
inc
or
pop
jnp
inc
imul
in
out
sahf
popf
push
jae
cmpsb
fwait
or
mov
int
pmaxsw
hlt
out
add
push
jo
jb
lcall
xchg
loopne
movsb
ds
mov
lds
cmp
js
or
inc
js
dec
imul
cmp
inc
adc
shl
ror
xor
insl
mov
mov
mov
sahf
push
xchg
pop
mov
xlat
inc
lcall
or
add
cmp
je
mov
mov
add
mov
mov
mov
jmp
dec
push
sub
imul
jg
xchg
xchg
cmc
jo
xchg
jg
jo
mov
xor
in
popl
and
inc
mov
dec
inc
popf
lods
add
inc
lods
roll
cld
push
iret
orb
sub
jg
cmpsb
aaa
lock
scas
sub
mov
popa
shl
xor
jg
pop
add
and
movsb
sti
xchg
das
dec
fiadds
lcall
shr
xchg
mov
sarl
pop
enter
xor
mov
lods
sub
lods
in
push
sub
xchg
imul
pop
sub
movsl
stc
les
jno
out
or
dec
push
insl
fsubr
movsl
and
fucom
cmp
mov
or
add
les
aam
imul
push
inc
cmp
push
and
out
scas
and
push
std
mov
into
sbb
xchg
and
inc
mov
dec
or
dec
fdivrs
dec
mov
inc
mull
dec
inc
mov
int3
les
pop
in
gs
arpl
dec
sbb
or
sahf
or
sbbb
sbb
les
test
xor
data16
push
popf
lahf
push
repz
push
inc
rep
clc
inc
jmp
in
cmpsl
adc
arpl
rclb
ss
xchg
lods
in
xchg
mov
scas
push
test
mov
jmp
cmp
sbb
cmpsb
movsl
add
stos
sub
lods
dec
sub
mov
shrl
call
in
test
sbb
sbb
les
das
mov
mov
jg
cli
pop
stos
in
sub
mov
jmp
frndint
std
imul
mov
xor
mov
sub
jo
xchg
jg
jo
movl
shrb
mov
xor
dec
ja
add
sbb
pop
out
sbb
push
mov
cmp
cmp
leave
dec
push
movsl
cltd
stc
sbb
sbb
jb
push
fisubl
int
in
inc
jo
jecxz
cmp
inc
jg
xchg
mov
jb
mov
lods
insb
sub
jp
cmp
and
lret
cmp
ficoml
xor
mov
fdivl
sbb
mov
loope
add
push
xor
cmp
enter
cmp
test
mov
lds
or
loope
xor
sti
xor
icebp
mov
popa
jbe
ret
std
fld
xor
mov
fadds
fiaddl
mov
sarb
cltd
cmc
sbb
test
jns
xchg
sub
mov
push
mov
push
inc
push
mov
or
jl
mov
mov
lcall
mov
cmovno
cmpl
and
mov
data16
in
mov
sbb
adc
lea
adc
xor
dec
lea
mov
mov
lret
mov
pop
ret
cltd
cltd
push
adc
xor
xchg
push
orb
divb
push
fldt
xchg
scas
and
jns
ljmp
jp
inc
bound
dec
shrb
cmp
mov
fs
sti
mov
add
jmp
hlt
sbb
rep
cmp
aaa
mov
hlt
enter
jo
jg
jo
stos
dec
daa
insb
jp
or
fdivrl
mov
sti
addl
mov
popf
mov
subl
clc
lods
xchg
popa
notl
shll
push
sti
add
or
inc
out
les
imul
sub
sbb
sbbl
jmp
cmp
adc
pop
adc
lods
out
cmp
rcll
inc
xlat
loope
cmpb
daa
lods
cmp
movsb
cmc
cmc
dec
push
clc
dec
mov
pushw
fwait
enter
arpl
cmpsl
pop
or
cmpsb
jp
inc
adc
pop
shl
popf
mov
lods
pop
xchg
pop
and
bound
mov
jmp
jmp
fs
or
mov
scas
loope
push
mov
aaa
mov
loop
inc
mov
adc
jnp
cmp
jne
sub
subl
ja
inc
std
cld
dec
sbb
sbb
mul
and
mov
cmp
cwtl
lds
push
ret
adc
dec
std
jg
arpl
adc
jmp
adc
jae
add
lahf
call
lahf
adc
cmp
addl
les
ficoml
sub
cld
jge
sbb
mov
fisttps
mov
gs
pop
push
loope
in
adc
mov
jp
lea
pop
jmp
cmp
push
xchg
mov
pop
mov
xchg
and
inc
ret
jge
mov
lret
aam
xor
cmp
je
mov
mov
xor
add
mov
jmp
xorl
jmp
mov
mov
mov
mov
mov
jmp
lret
icebp
dec
cmp
subl
xchg
jg
jo
insb
mov
push
cmpsb
in
jbe
rorl
inc
test
sbb
adc
jl
in
xor
or
int
sti
fsts
pop
daa
xchg
out
outsl
in
cs
mov
enter
pop
bound
xor
les
jno
pop
sbb
pop
punpckhwd
lea
jb
and
sub
xchg
pop
and
mov
pop
gs
lret
add
fs
fs
sbb
and
out
mov
sbb
sub
add
sbb
sub
jg
inc
cmp
pushf
enter
push
mov
cmp
push
inc
lret
sbb
pop
imul
mov
inc
add
xchg
xchg
dec
inc
iret
pop
or
shll
lahf
frstor
insb
xor
jecxz
pushf
inc
inc
sub
xchg
jp
lret
mov
lods
daa
lock
pop
jns
bound
aas
fucomp
mov
push
sub
pop
arpl
pop
or
jge
std
push
xor
or
repz
or
pop
cs
adc
mov
jno
adc
ret
fs
jae
jns
dec
jo
push
or
fwait
and
scas
push
sbb
inc
fstpl
pop
fnstcw
cmp
mov
jb
mov
mov
rcrb
cmp
je
inc
in
mov
pushl
call
mov
cmp
je
mov
mov
pop
pop
pop
leave
ret
push
mov
push
sbb
movl
sbb
mov
orl
jmp
push
mov
xor
je
stos
aas
lods
and
jns
jo
jb
jo
mov
test
sub
insl
dec
cmpsl
and
repz
pushf
inc
adc
cwtl
fwait
pop
stc
cld
clc
cld
inc
outsb
aas
inc
aam
bound
fidivrs
test
aad
sbb
mov
inc
lret
aaa
sti
mov
popa
mov
add
test
sbb
insl
xor
lods
mov
cmpsl
dec
adc
sub
js
push
sbb
jb
aad
popf
and
xor
adc
sbb
fwait
popa
lret
jmp
dec
es
rcl
or
ss
sub
jmp
inc
in
push
mov
jmp
or
dec
mov
jno
notb
xor
mov
aas
pushf
mov
cs
pop
or
dec
pusha
adc
jp
or
scas
add
jmp
pop
xchg
in
dec
int3
mov
fadd
xlat
and
inc
aad
in
mov
jne
mov
xchg
ffreep
push
or
sub
insl
fmull
arpl
je
je
movsl
jp
inc
mov
ja
sub
cli
xchg
stos
dec
mov
insl
mov
dec
mov
dec
xchg
adcb
and
add
roll
lret
aad
pop
and
add
or
test
pop
les
cmp
jbe
inc
inc
or
add
push
add
adc
js
ret
sub
fadds
cs
push
fisubrl
lret
xor
dec
inc
push
add
xchg
mov
mov
and
jge
dec
and
adc
out
fsub
cmp
std
push
adc
out
inc
mov
ss
xchg
pop
xor
outsl
push
add
gs
xor
fsubrs
adc
sub
fwait
sarl
xor
int
sub
movsb
nop
xchg
cmp
jmp
dec
jbe
push
or
push
outsb
sbb
data16
mov
fstp
mov
add
andl
xor
cmp
movl
jne
mov
mov
movzbl
xor
mov
add
xor
mov
mov
or
mov
andl
mov
inc
mov
cmpl
jne
push
pushl
push
pushl
call
cmpl
jb
xor
push
jmp
je
test
pop
pop
or
dec
mov
jo
jg
jo
jge
out
sarl
mov
stos
sbb
rolb
subb
dec
or
mov
insb
sub
scas
addr16
outsb
lock
es
into
imul
xor
dec
xchg
sbb
mov
adc
jl
arpl
sahf
mov
sbb
cs
in
call
lds
add
xor
fdivp
mov
adc
notb
adc
addr16
inc
mov
sub
adc
jno
out
pop
jle
mov
push
inc
stc
or
pop
mov
bound
jno
and
mov
aaa
mov
call
pop
mov
cld
pop
imul
cmp
iret
add
repz
in
adc
mov
push
xor
mov
stos
mov
inc
lods
mov
cmp
sahf
cltd
jns
push
stos
jo
and
std
xor
xor
mov
loope
pop
pop
sub
scas
lods
mov
adc
jp
dec
les
lcall
stos
push
stos
pop
xchg
test
int3
sub
mov
loope
push
push
test
cmp
decb
push
add
jae
xchg
cld
add
or
mov
outsl
scas
into
imul
or
js
push
nop
test
push
rcrl
sahf
imul
add
dec
push
jle
dec
mov
jge
fldl
inc
pop
or
aam
adc
jae
inc
push
sub
add
jg
or
and
cld
sub
out
cltd
xor
mov
xchg
push
add
mov
push
test
xor
int
and
sub
lods
js
jl
push
and
stos
imull
loopne
jecxz
lea
movsl
sub
mov
mov
add
jmp
cli
cmpsl
push
in
gs
arpl
mov
jo
jg
jo
stos
lahf
or
in
fbld
sbb
pop
cmp
jb
and
mov
ss
jno
js
cli
jns
xor
test
sub
xchg
push
jle
mov
jb
fucomi
adc
jno
push
push
aaa
jne
imul
mov
cmp
inc
hlt
cmpsl
gs
pop
dec
push
orb
sub
xchg
leave
cmpsl
add
sti
imul
cltd
data16
loopne
cmp
lea
cmpsl
cltd
pop
faddl
mov
fidivl
pop
ret
lcall
lods
mov
mov
inc
loopne
push
mov
ffree
cld
aad
add
adc
insl
aaa
das
inc
cmp
cmpsb
cld
stos
sub
xchg
lea
sub
sti
dec
inc
jl
fistl
jbe
das
push
xor
pop
and
movsl
fucomi
xchg
sub
aad
inc
fldl
pop
adc
ljmp
cmp
mov
fsubrl
inc
sub
xor
xor
movsl
mov
sub
scas
int3
xor
mov
push
add
cs
jo
xlat
scas
test
jg
cmp
mov
loop
mov
or
lahf
and
sahf
push
bound
jge
and
jns
jnp
lcall
add
xchg
lcall
ss
popf
cmp
lret
mov
mov
xor
pop
pop
popa
add
pushf
lahf
mov
test
adc
or
sbb
dec
cmp
lock
out
xchg
push
mov
out
cmp
xor
outsl
sbb
cltd
dec
loop,pn
xchg
dec
pushf
cmova
mov
cltd
popf
sub
insb
lods
lea
sti
stos
rep
imul
mov
cmp
pop
je
mov
jmp
mov
xor
add
jmp
mov
jmp
or
scas
shll
jb
loop
and
idivb
jo
jb
jo
push
xchg
dec
shl
adc
pop
ja
test
pushf
jle
andl
dec
in
mov
lret
clc
iret
stos
outsb
and
cmp
and
sbb
cmp
mov
pop
mov
mov
cmp
sub
sbb
sub
imul
dec
mov
data16
data16
ret
inc
bound
lret
push
xchg
pop
test
mov
mov
or
pusha
add
out
fsubl
push
stos
xor
sahf
cmc
jg
hlt
cmpsl
cmpsl
jns
push
sbb
xchg
xchg
mov
cs
mov
xor
aad
and
cmp
sub
shr
push
popf
cmpsl
into
xchg
jecxz
aas
and
mov
jecxz
add
lods
add
adc
add
in
sbb
das
jno
add
push
cmp
pop
mov
inc
cmp
and
repz
add
xor
cmp
repz
ds
push
outsb
xchg
inc
jns
mov
test
cmpsl
push
leave
jg
psubsb
mov
xchg
mov
pop
rcll
mov
int3
dec
aas
add
scas
jo
xchg
out
scas
je
fiadds
jne
mov
in
insl
das
push
mov
rcrl
lret
jmp
dec
push
or
aam
std
mov
imul
xchg
cmp
dec
push
lcall
inc
scas
enter
and
adc
cmpsb
mov
pop
nop
mov
sbb
in
stos
aas
in
testl
out
mov
pushf
test
adc
jnp
shlb
pop
pusha
sbb
out
mov
jmp
ret
jmp
jae
aam
add
push
mov
mov
aaa
sub
clc
loope
adc
xor
jmp
jnp
xchg
les
sub
mov
xchg
jb
jo
cmp
testl
sub
rolb
lcall
imul
gs
shlb
push
fwait
adc
mov
je
aaa
je
fcomps
lods
cs
xchg
adcb
jbe
ffree
jmp
scas
cs
cmpb
popf
cmp
or
inc
and
rclb
cld
cmpsl
push
mov
cmpl
jne
pop
icebp
lret
or
sbb
mov
mov
stos
or
mov
repz
push
xor
pop
lds
and
or
out
xor
ret
in
mov
mov
pop
ret
cmp
mov
mov
push
sbb
fstl
jbe
push
mov
sti
mov
jecxz
cmp
or
mov
jl
call
cmp
mov
pop
rcrb
test
in
inc
inc
and
popf
pop
seto
aas
cmpsl
std
push
pandn
adc
dec
sub
push
mov
xchg
add
shl
gs
mov
sbb
ficoml
mov
arpl
rorb
out
clc
test
mov
add
daa
adc
std
rol
mov
loopne
out
xor
or
lret
out
ret
iret
xor
in
push
xchg
in
cld
cmp
dec
aam
cwtl
push
pushf
or
lret
test
or
dec
jp
sbb
cli
out
pop
icebp
push
add
sar
adc
inc
inc
lret
jge
adc
ss
mov
rorl
inc
xor
push
sub
jnp
fstpl
and
cmpsb
ret
insb
mov
jae
in
idivl
add
ret
insb
arpl
cs
mov
xchg
out
aaa
and
xor
jmp
xor
leave
ret
push
mov
mov
mov
and
sub
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
movl
cmpl
je
cmpl
jne
pushl
pushl
call
cmpl
jne
xor
xor
dec
mov
mov
dec
mov
jmp
mov
push
mov
xor
cmp
je
mov
mov
sub
xor
jmp
xchg
roll
icebp
lods
add
rcl
cmp
leave
jle
jo
sbb
aas
cmpsb
in
push
jnp
lret
mov
xchg
lds
cmp
xchg
sub
push
in
lods
cwtl
inc
mov
adc
cli
hlt
dec
fs
sahf
insl
fsub
adc
sar
push
add
inc
jecxz
test
dec
sub
add
or
or
movsl
enter
mov
mov
mov
fcmovu
into
mov
popf
out
mov
icebp
mov
xchg
shlb
sbb
cmc
xchg
jns
in
mov
lcall
jmp
or
addr16
pop
mov
fimuls
cmp
jge
mov
test
push
iret
lret
dec
rclb
jb
or
loop
out
mov
adc
ja
in
in
and
xchg
test
out
mov
fcompl
cmp
lcall
add
inc
pop
hlt
lods
or
loop
lods
pop
push
ret
insb
xchg
outsl
xchg
push
cmc
jle
xchg
rcl
mov
test
out
jae
xchg
adc
pop
lods
rol
and
scas
mov
sbb
sbb
xor
adc
outsb
and
inc
pop
pmulhw
dec
loope
decl
jo
das
std
shlb
loopne
mov
add
add
pop
push
aas
jb
and
fs
mov
mov
into
dec
sbb
js
mov
repnz
imull
mov
fstpl
movsb
fistpl
test
inc
jae
mov
mov
test
lea
loope
xor
data16
push
bound
call
imul
dec
repnz
sbb
inc
cmp
jbe
or
sub
popf
xor
add
push
dec
pop
hlt
xor
icebp
dec
enter
inc
inc
jge
mov
pop
jmp
jno
mov
mov
fs
loopne
sub
imul
lahf
sbb
outsl
outsl
mov
pushw
ret
test
nop
pop
fwait
sub
aam
das
sbb
movsl
hlt
pop
jno
and
jae
xor
mov
inc
jnp
or
aaa
sbb
or
push
loopne
test
das
das
mov
push
ret
inc
inc
ljmp
add
mov
add
jmp
mov
xor
jmp
pop
scas
sbb
push
pop
mov
cmp
int3
insb
int3
xorb
jle
jo
sbb
bound
cmc
dec
sbb
and
sub
das
pop
mov
xchg
inc
ljmp
inc
popf
in
dec
jnp
sbb
add
loop
loopne
cwtd
push
aad
xor
ficoms
pop
add
inc
mov
leave
test
push
jmp
dec
cmpsb
inc
fistl
and
or
out
xlat
pusha
push
cld
jbe
aaa
hlt
pop
in
or
test
mov
push
mov
dec
repnz
outsb
cmp
mov
testl
jno
imul
pop
out
and
mov
ds
push
dec
add
negb
mov
pop
dec
out
and
jb
das
dec
das
add
mov
inc
lcall
enter
loop
inc
adc
divb
inc
insb
inc
call
lcall
lds
mov
sbb
cmc
arpl
rcll
sti
dec
bound
shll
ret
call
movb
pop
daa
inc
movsb
adc
hlt
out
or
ljmp
scas
mov
add
lret
std
stc
pop
add
insl
into
mov
sbb
mov
add
test
shl
iret
cmc
stos
xchg
sbb
cmpsb
rolb
pop
mov
sti
cmc
test
loop
testb
xchg
jp
test
dec
aam
or
mov
push
inc
lret
mov
pop
xor
je
or
adc
jno
fs
push
cmp
ret
lahf
add
fwait
pop
test
test
int
addl
loopne
ja
pop
fldl
inc
pop
adc
add
faddl
inc
ljmp
orl
pop
fnstenv
shll
adc
idivl
jg
jne
scas
jne
loopne
pusha
dec
test
and
lods
xor
pop
xchg
insl
xlat
pop
sbb
jmp
flds
pusha
pop
xor
in
cld
dec
dec
aaa
mov
push
mov
mov
fucomip
inc
mov
sbb
jo
mov
scas
test
pushf
push
add
in
jecxz
into
loop
aad
sbb
outsl
add
add
and
dec
xchg
ljmp
jle
jo
push
lods
cmp
insb
ds
sub
adc
out
inc
or
dec
and
mov
lock
sti
push
fstpl
pop
int3
inc
dec
jle
lods
lds
mov
sbb
or
and
mov
mov
mov
jl
out
mov
enter
iret
stos
pop
addb
jge
lods
fdivrl
push
sbb
in
sbb
add
rorl
pop
stos
jo
in
repnz
test
enter
dec
cli
shrb
pusha
in
cmp
inc
xchg
cltd
aad
jnp,pn
ljmp
inc
xchg
and
inc
sub
dec
mov
xlat
jo
xor
cmpsl
mov
pushf
idivb
sbb
sbb
out
or
and
mov
aad
add
mov
mov
jno
js
cmp
scas
jl
push
xor
dec
dec
sbb
add
pop
incb
jo
std
out
enter
repz
loope
mov
int3
into
shrb
mov
pop
mov
jnp
xor
imul
rorb
or
mov
or
pop
xchg
jns
test
pop
add
fdivl
mov
in
cmp
pop
mov
ret
out
icebp
jb
in
movsl
pop
fs
loop
sbb
repnz
push
jl
xchg
push
loop
js
xor
xlat
loopne
jnp
ljmp
adc
push
fwait
jb
add
popf
lds
fstpt
inc
sub
pop
xchg
and
cmpsl
frstor
mov
inc
ret
xchg
inc
inc
xor
data16
mov
jge
outsl
fsubs
add
adc
pop
jae
adc
fldt
fidivrl
sahf
aam
test
ss
pop
pop
push
cmc
add
fnstcw
adc
sub
iret
mov
ret
cmp
aam
push
mov
notb
mov
in
cs
inc
adc
nop
movsl
cmpsb
loope
rorb
ljmp
mov
add
add
mov
jmp
mov
mov
mov
mov
mov
add
pop
pop
ret
push
mov
sub
movl
mov
mov
sub
and
movl
movl
cmpl
je
cmpl
jne
push
push
pushl
call
cmpl
jne
mov
dec
mov
xor
add
dec
mov
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
xor
xor
xor
add
sub
imul
mov
addl
push
mov
sbb
xor
sbb
mov
add
andl
mov
movl
cmpl
je
cmpl
jne
push
pushl
push
call
cmpl
jne
xor
xor
dec
mov
mov
dec
mov
jmp
mov
sub
mov
mov
sbbl
push
adcl
push
adcl
test
movl
je
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
pushl
pushl
pushl
call
jmp
movl
cmpl
je
cmpl
jne
push
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
notl
mov
neg
mov
movzwl
add
mov
imul
jmp
xchg
imul
fildl
jo
dec
jge
jo
imul
aas
icebp
push
lret
xchg
sub
pop
mov
and
rolb
mov
cltd
and
cmp
lahf
push
cli
mov
add
mov
push
push
push
pop
inc
xorb
stos
xchg
js
xor
dec
mov
call
mov
incl
sub
jo
adc
and
jae
sbb
xor
icebp
pop
adc
ljmp
jnp
inc
add
push
push
push
cmc
movsl
lret
inc
mov
jnp
jbe
loope
clc
xor
int
adc
cli
movsb
out
ss
cmp
fstl
ja
outsb
pop
mov
movsl
jb
mov
pop
fs
adc
data16
xchg
sbb
jg
es
cs
clc
or
push
data16
jno
pop
stos
fbstp
cmp
clc
pop
pusha
push
pop
push
jmp
loop
sti
mov
cs
leave
cmpsb
sbb
adc
cmp
jbe
jbe
pop
xor
jae
push
shrl
nop
and
scas
popf
or
int3
daa
inc
sub
add
mov
pop
pop
fld
jecxz
leave
and
jnp
push
into
mov
add
mov
ret
sub
stos
mov
mov
pop
push
sbb
push
sub
cs
push
int3
or
mov
sbb
cpuid
cmpsl
cmp
and
shl
xchg
add
cmp
add
inc
or
mov
neg
or
movsb
std
dec
clc
push
inc
mov
lods
call
out
or
icebp
in
sbb
or
xor
push
clc
and
daa
in
fs
movsl
mov
imul
push
dec
jl
xor
shll
sub
mov
roll
jns
mov
fnstsw
pop
das
adc
xorb
scas
rolb
push
push
add
sbb
lods
cmp
inc
and
lock
cmp
leave
aas
dec
dec
sbb
out
daa
stc
jo
xor
pop
or
sbb
mov
fcompl
or
sbb
std
lods
xchg
push
pop
cld
test
pop
test
jmp
or
and
push
ret
repnz
mov
mov
pop
leave
test
popa
mov
xchg
push
mov
popa
insl
push
xchg
insl
filds
aaa
inc
add
testl
mov
cmp
jge
mov
inc
loop
fcmovu
lds
aaa
sbb
outsb
fistpl
and
fcompl
pop
fwait
xchg
push
popa
push
movsl
mov
jae
pop
xor
insl
mov
sti
xchg
adc
push
push
std
add
jmp
mov
cmc
fdivrl
inc
mov
sbb
fiadds
imul
add
sti
fisttpl
adc
push
out
aad
and
jne
pop
lods
imul
in
pop
shl
imull
popl
add
mov
mov
or
dec
jecxz
sbb
mov
jl
je
push
pop
mov
jno
loopne
xchg
rcrb
lods
pushf
arpl
push
mov
jl
pop
test
mov
scas
imul
and
shll
dec
test
scas
adc
fcompl
nop
ljmp
jp
add
scas
push
mov
lret
sahf
mov
dec
dec
rolb
mov
xchg
out
das
addl
cmc
fldcw
inc
mov
mov
out
lcall
mov
add
not
mov
or
mov
subl
xchg
sub
xorl
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
call
cmpl
jne
mov
inc
mov
jmp
orl
mov
adcl
jmp
addr16
ss
ja
or
in
test
jo
dec
jge
jo
cld
cmc
mov
xchg
int
inc
push
lea
ja
mov
ret
cld
inc
stos
in
aas
fsubs
stc
cwtl
lds
into
shlb
in
imul
loopne
dec
cmp
insl
push
lds
cmp
sbb
adc
cli
xor
movq
in
xchg
rorb
jl
in
push
push
xchg
aam
push
dec
js
push
xor
mov
clc
inc
or
jo
icebp
movsl
push
push
xor
lds
jnp
ds
enter
test
add
add
cwtl
dec
lret
or
sbb
or
inc
push
mov
sahf
leave
pop
jb
jne
dec
push
scas
add
test
leave
sbbb
and
xchg
imul
cmp
mov
test
dec
ss
inc
call
subb
rclb
sbb
enter
cli
mov
mov
lret
test
aam
sbb
inc
ret
negl
inc
xchg
ja
or
and
movsb
jmp
and
cmp
jmp
inc
inc
int
adc
enter
outsl
addb
mov
shr
or
jo
sbb
lcall
push
testl
push
daa
cmp
dec
outsb
inc
call
jne
lea
mov
repnz
adc
stc
aas
clc
in
sti
sub
loope
or
out
data16
adc
cmpsl
int3
pushf
inc
mov
movsl
lock
push
xchg
adc
stos
jg
mov
add
pop
sub
loopne
pop
mov
push
mov
cs
xlat
xor
sub
mov
gs
push
mov
mov
sub
aad
dec
repnz
lods
sbb
sbb
mov
int
push
add
jo
ds
mov
mov
xor
popa
lods
dec
std
repz
mov
jp
mov
rcll
pop
lds
jle
popw
ljmp
ljmp
in
inc
sarl
xlat
gs
or
pop
rol
aam
or
arpl
jo
js
xchg
cmp
shll
mov
fcoms
and
je
sbb
sbb
mov
xchg
sahf
jno
and
nop
adc
mov
jl
fisubs
lcall
mov
pop
xchg
push
xchg
xlat
mov
insb
cmc
iret
sbb
mov
call
clc
inc
test
jecxz
bound
dec
shrb
test
ja
add
mov
push
fsubl
lock
dec
pop
mov
mov
hlt
pop
inc
push
pushf
in
iret
mov
ja
sarb
loope
sbb
and
fs
mov
scas
scas
pop
adc
pop
lock
movsb
push
add
push
sub
aad
jle
mov
clc
mov
lds
jne
sub
mov
dec
mov
jb
sub
repnz
out
dec
mov
mov
push
push
xchg
xlat
jle
out
into
jp
data16
insl
push
scas
shr
sbb
sti
and
xchg
loopne
cltd
jecxz
pop
shlb
dec
mov
into
jne
es
mov
mov
outsb
sub
dec
mov
aas
addb
jne
mov
ss
inc
dec
dec
push
pop
pop
nop
outsl
sub
loop
jmp
sbb
xor
mov
adc
mov
and
mov
andl
xor
jmp
mov
iret
mov
out
fs
notl
mov
jge
jo
rolb
pop
jbe
jp
jmp
fwait
ja
pop
scas
xlat
fidivl
jne
sbb
outsl
xor
or
pop
test
push
inc
gs
mov
adc
push
pushf
fisttpl
in
jo
fidivrl
jae
out
shrb
ds
fldt
mov
or
hlt
cmp
push
cs
sub
inc
inc
sti
adc
into
xor
fcmovnbe
stos
pop
xor
sbb
das
xchg
mov
out
in
out
dec
in
shlb
loop
mov
and
in
fwait
mov
xchg
add
jb
sub
inc
xor
repnz
adc
ds
daa
repz
mov
filds
jle
arpl
ret
orb
adc
insl
lea
xor
xor
add
fbld
iret
insb
dec
shlb
add
xor
xor
add
mov
adc
cmp
adc
push
mov
mov
int
out
jns
inc
xor
sub
push
leave
sub
mov
imulb
cmc
lret
xor
lods
mov
ficomps
add
mov
les
sti
inc
sbb
cli
xor
ret
sahf
adc
adc
addl
ret
movsb
sbb
adcb
shlb
insl
and
sub
jecxz
lods
insb
repnz
js
stos
mov
inc
adc
cmp
add
xchg
lahf
xchg
jecxz
int3
out
and
xchg
in
and
dec
sbb
ljmp
daa
ficomps
inc
cmpb
popa
mov
out
bts
sbb
mov
cltd
xchg
fsubs
fldl
je
lds
sbb
das
xchg
repz
fwait
mull
mov
or
fucomi
xchg
rorb
mov
outsb
pop
and
enter
cmc
fisttps
mov
nop
jg
je
in
fstpl
push
and
movsb
orl
or
loopne
jnp
cmpsb
leave
insb
xlat
das
stc
int
fucomip
mov
jnp,pt
pop
dec
mull
jecxz
inc
in
add
fdivrs
test
or
out
inc
stos
sub
mov
sbb
adc
xchg
rorb
ret
cmpsb
xlat
cmp
sbb
or
mov
mov
out
push
outsb
test
movsl
outsl
ret
out
lock
sbb
in
adc
mov
cmp
in
sub
sub
enter
out
adc
jb
cmpsl
in
icebp
popa
imul
or
inc
cmpl
xor
xor
xchg
push
jl
and
mov
and
pop
repz
in
push
mov
lea
int3
stos
add
ljmp
sub
movups
mov
repnz
push
in
xchg
sub
lods
mov
js
shlb
popa
xchg
ds
or
and
lcall
mov
popa
jno
sub
aam
push
mov
inc
arpl
mov
pop
popf
pop
cmp
pushf
sub
rcrb
movsl
cmpsl
pusha
jmp
cmp
pop
test
and
xor
cmpb
add
fs
rorl
add
mov
mov
movsb
lods
movsl
movsl
pop
gs
mov
movsl
inc
adc
in
mull
fcmovne
jo
cmp
push
movsb
pusha
fstl
sub
and
jnp
sbb
aaa
out
cmp
add
mov
mov
mov
jmp
xlat
frstor
pop
testl
xor
stc
xchg
jo
dec
jge
jo
in
jle
iret
icebp
mov
js
jns
mov
xchg
lods
aaa
lcall
imul
nop
inc
inc
imul
or
inc
xor
stc
cwtl
lret
push
jle
cmp
dec
inc
jl
ss
pop
shr
xchg
dec
loopne
pop
pushf
lahf
mov
xor
out
push
scas
cmpsb
pop
cwtl
cmp
mov
mov
dec
adc
movsb
mov
daa
cmp
jno
mov
mov
in
dec
sbb
push
cltd
inc
push
lock
mov
push
stos
sbb
insl
mov
adc
mov
mov
dec
jge
xchg
lods
dec
jge
add
add
in
mov
jnp
stos
push
mov
and
sahf
mov
xchg
fsts
andb
cmp
sub
dec
rcrb
mov
sahf
jle
addr16
jge
mov
movsl
xor
ror
cmp
popa
lcall
mov
mov
jp
scas
jbe
mov
test
xor
ret
neg
inc
sbb
loope
dec
pop
idivl
je
push
jo
xor
mov
mov
jne
mov
fucom
and
push
push
aam
popa
sbb
pusha
mov
dec
rolb
filds
rorb
insb
int3
sub
add
adc
cmp
ljmp
dec
xchg
sbb
xor
jbe
add
xor
add
or
enter
mov
imul
out
lds
mov
scas
nop
mov
mov
dec
pop
xor
pop
std
faddl
div
mov
scas
stos
add
pop
xchg
scas
jo
or
fidivrs
sub
paddusw
ret
or
push
xchg
fsubs
addr16
cmp
into
in
jo
push
lods
push
movsl
sbb
shlb
or
xor
mov
adc
push
gs
add
cli
int3
mull
xrelease
sub
dec
mov
ljmp
fsubr
stos
cs
mov
push
or
inc
inc
in
loope
xchg
or
pop
imul
insb
int
in
ror
test
shl
mov
test
insl
fidivrl
cmpsl
mov
dec
pop
shlb
xor
sub
gs
leave
dec
and
out
lds
imul
pop
ds
fisttpl
pop
les
test
sub
pop
mov
sub
and
sbb
pushf
sub
fimuls
push
roll
dec
mov
dec
imul
movsl
sbb
add
dec
mov
aam
shll
add
mov
pop
dec
mov
ret
pop
out
cld
sbb
icebp
inc
and
or
cmpsl
rol
pop
ficoml
xchg
std
or
aas
dec
cmc
add
ljmp
xchg
ret
jecxz
out
push
les
pop
test
pop
test
dec
mov
pop
fs
xor
pop
rcr
cmp
push
out
pop
and
mov
iret
cli
xchg
in
dec
aaa
push
out
jge
mov
insl
xchg
movsb
arpl
leave
arpl
mov
popf
and
xor
les
insb
mov
ja
scas
pop
leave
jge
and
and
add
cld
adc
and
fbstp
inc
sbb
out
dec
jae
jae
ret
into
dec
mov
and
shlb
je
movzbl
add
mov
orl
xor
add
movl
cmp
jne
pushl
adcl
call
mov
add
mov
jmp
fs
movsl
sbb
popa
push
negb
orb
jo
jge
jo
mov
push
pop
mov
jb
adc
fisttpll
bound
mov
adc
bnd
pop
cmpsl
js
negb
insl
cltd
jecxz
mov
ficomps
leave
loope
sarb
sbb
nop
lcall
cmpsb
push
lods
ljmp
adc
or
cmpsl
xchg
push
xchg
mov
or
dec
cltd
jne
pop
inc
push
mull
sbb
adc
pop
mov
ja
pop
add
jle
and
movsl
aam
aaa
pop
and
outsl
int
mov
loop
jns
test
lcall
and
sub
push
fisubrl
fisubrl
pop
pop
mov
ds
jo
mov
mov
enter
iret
sub
and
lods
mov
mov
ds
neg
jne
mov
jo
mov
loopne
dec
lods
js
dec
out
jmp
cmp
fsubrp
and
sub
arpl
dec
mov
cld
scas
jle
sbb
shlb
in
sti
lea
cmc
xchg
pop
sub
dec
dec
mov
pop
jg
fdiv
cld
xchg
stc
test
outsb
es
stc
lret
hlt
out
jns
xor
sbb
pop
cmpsb
les
inc
adc
dec
int3
sbb
js
xchg
in
sub
inc
jns
mov
adc
in
mov
push
aaa
notb
hlt
cmp
pusha
xchg
repz
roll
mov
mov
inc
and
jne
sbb
rcll
push
pop
enter
outsl
cld
fdivrs
sbbb
dec
and
pushf
out
inc
add
out
pop
push
sub
mov
lret
push
or
bound
imulb
icebp
mov
pusha
mov
or
pop
call
cli
and
lea
dec
ljmp
dec
jg
popa
sti
adc
dec
icebp
mov
cli
pop
faddl
sar
shlb
imul
cli
in
stos
xchg
mov
mov
xlat
lret
loope
xor
icebp
push
pop
ja
pop
push
rcll
pop
test
mov
ret
jb
adc
shr
cmc
gs
cmp
adc
stos
lahf
jmp
test
mov
nop
mov
cld
or
jns
cmc
xchg
push
popa
cmpsl
pop
and
sub
sub
les
push
aam
mov
pop
aaa
test
add
add
jbe
push
imul
addr16
pusha
jb
lret
dec
push
sbb
repz
lcall
test
sub
hlt
dec
addl
andl
lea
out
inc
push
ret
stos
cmp
bnd
jmp
iret
minps
xchg
sbb
fwait
jnp
bound
sbb
xor
xor
ss
inc
push
hlt
data16
ja
inc
sbb
mov
imul
dec
push
or
xchg
jnp
inc
aad
cmp
mov
push
jle
jb
sub
cltd
add
popf
dec
pusha
cwtl
movsl
jge
xlat
outsb
push
inc
xchg
cwtl
mov
imul
cmp
xchg
adc
arpl
mov
pop
xor
adc
and
adc
mov
gs
mov
jne
mov
mov
shrb
inc
in
sarb
loopne
push
sbb
dec
mov
pop
xchg
adc
aas
sub
test
dec
subb
push
inc
inc
add
inc
inc
add
xorl
xor
add
movl
cmp
movl
je
pushl
adcl
pushl
call
jmp
ret
rcrb
popa
cltd
ret
xorw
ss
inc
sub
jo
cwtl
mov
or
jp
lret
xchg
es
and
ljmp
lret
in
loopne
xchg
xchg
shlb
xorb
mov
in
test
adc
cmp
push
jge
rolb
pop
cmc
mov
cmp
pop
xlat
lahf
xchg
push
ljmp
push
aad
insl
lret
xchg
xlat
xchg
mov
ficoms
adc
dec
scas
jge
mov
add
xor
and
cwtl
divl
lcall
adc
fucomp
out
xchg
loop
popf
repz
mov
out
shrb
mov
or
leave
cltd
ret
repz
imul
lock
mov
cmp
xchg
mov
sbbb
das
mov
icebp
fcoml
out
int
xor
xor
std
js
jns
je
incb
pop
mov
iret
jo
in
stc
pop
out
jns
nop
stc
inc
xchg
dec
adc
daa
sarb
xchg
leave
pop
xchg
dec
aas
and
or
insl
mov
mov
cmp
aam
inc
or
rcl
lcall
cmpsb
insb
pusha
jns
rcrb
xchg
in
and
scas
push
fwait
imul
lds
push
push
dec
xchg
inc
mov
dec
and
nop
shlb
insl
mov
lods
ss
lock
incb
add
leave
jle
and
outsl
mov
dec
dec
adc
jno
and
push
pop
das
test
inc
or
mov
cltd
push
in
pop
adc
out
push
inc
inc
jp
mov
es
and
mov
jns
mov
lret
sbbb
jmp
mov
or
cltd
mov
sub
push
imull
inc
push
pop
outsb
jg
adc
xor
add
subl
stc
and
push
mov
lods
xchg
xchg
pop
dec
stos
sbb
pop
les
xchg
fadds
ficoml
jbe
or
bound
jno
xor
stos
jae
mov
and
xchg
jo
cmp
loopne
loopne
mov
and
shlb
add
jnp
cmp
outsl
gs
into
inc
jmp
add
mov
ret
ds
test
sub
dec
dec
inc
inc
aam
or
push
pop
lods
inc
push
mov
pop
and
mov
test
scas
out
push
movsl
iretw
cmp
rcll
mov
fdivrs
xor
inc
or
jmp
fsts
iret
cmpsl
pop
or
movsb
idivl
mov
lea
push
inc
rolb
loop
outsl
cmp
dec
nop
shlb
jnp
std
adc
pop
in
popf
mov
dec
xchg
hlt
gs
add
adc
loopne
push
inc
call
ja
cmp
dec
mov
rcl
inc
mov
mov
mov
sbb
mov
lret
cwtl
pop
push
mov
cwtl
add
outsl
push
insb
mov
adc
push
fistl
dec
fld
cmp
rol
js
mov
xlat
imul
ss
adc
repnz
cmp
dec
xchg
xchg
sub
dec
inc
mov
lds
lret
sbb
iret
xor
sub
ficompl
add
cmp
adc
ja
mov
ficoml
aam
add
arpl
dec
xchg
pop
lahf
repz
dec
shrl
loope
enter
popf
xchg
mov
adc
add
sbb
pop
mov
cmp
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
add
mov
mov
mov
jmp
loopne
or
xor
in
rorb
cmp
addl
jo
scas
pushf
and
ret
loopne
stos
iret
leave
lock
mov
jp
cs
les
enter
push
push
push
sbb
jb
sbb
cwtl
push
ror
mov
cmp
jne
out
aam
adc
cmp
mov
nop
cmp
mov
mov
jl
xor
les
subb
xor
in
aad
arpl
mov
data16
mov
or
mov
sub
jl
hlt
cmp
cmpsl
push
xchg
int
cmp
enter
sbb
cmp
outsl
femms
push
out
loopne
mov
push
lods
insb
xor
arpl
xchg
scas
adc
pusha
cmpb
lcall
push
inc
lcall
loopne
sbb
mov
rcrl
xadd
aaa
insl
sub
jae
decl
arpl
in
int3
dec
enter
lds
aaa
jg
xchg
inc
pop
shl
mov
sub
rorl
insl
insb
dec
je
popa
cwtl
jae
add
nop
rcll
fwait
xchg
xchg
xor
add
or
xchg
negb
pop
fnstenv
sti
movsl
imul
mov
hlt
cmpb
test
inc
sub
int
jmp
aad
sub
mov
je
adc
sub
les
jmp
in
jno
lcall
adc
std
out
bound
imul
pushf
pop
fisttps
jo
xchg
rcr
mov
imul
jg
test
pop
pop
jecxz
ret
jg
mov
or
sahf
mov
lods
idiv
dec
push
sub
sbb
inc
bound
fidivrl
jl
sbb
push
add
cmp
mov
enter
flds
jnp
push
lea
arpl
stos
nop
into
call
mov
xor
gs
fnstsw
jae
xchg
mov
mov
jns
mov
xor
dec
loope
into
or
cwtl
insl
repz
mov
movsl
mov
rcrl
or
aas
mov
or
mov
fstpl
xor
scas
xor
aam
lcall
daa
mov
dec
mov
mov
and
adc
xchg
mov
mov
ret
fcmovu
nop
fnsave
mov
adc
lods
mov
test
stos
loope
incb
lahf
cmp
add
push
pop
xor
mov
lahf
mov
jle
and
mov
pop
adc
daa
sbb
add
je
dec
fimull
subb
clc
pop
fisttps
shll
jmp
pop
outsl
fstl
je
sbb
aaa
xchg
stos
add
pop
mov
stc
sbb
inc
pop
loope
inc
and
jns
mov
gs
pop
push
sbb
push
pop
fisttpl
test
dec
inc
cmp
fstl
ds
insl
fwait
inc
dec
jecxz
pop
ret
push
inc
jg
fiadds
push
xchg
push
or
cmp
lcall
xor
xor
adc
mov
mov
das
int
movsl
jno
inc
lahf
outsl
add
testl
adc
jg
mov
aaa
mov
jmp
adc
sbb
cmpsl
loop
popa
mov
mov
sbb
enter
xlat
mov
xor
fldt
mov
add
push
stos
iret
fidivs
mov
dec
aam
inc
in
mov
add
jmp
inc
jae
pop
sub
jae
and
mov
lcall
dec
jge
jo
test
jmp
enter
sbb
pop
rcl
mov
pop
dec
or
cmp
mov
daa
add
pop
pop
incl
lret
lea
xchg
shrl
adc
push
jl
mov
xor
sarb
cs
insl
mov
adc
push
mov
xchg
or
and
mov
add
and
inc
dec
out
rclb
loopne
dec
cmp
es
mov
loope
xchg
rclb
aad
inc
fcmovb
xor
pop
xor
mov
in
sub
ljmp
or
mov
xor
pop
mov
pop
stc
fcomps
je
push
in
or
movsl
test
push
aaa
push
or
push
imul
ja
scas
mov
pop
cs
pop
dec
pop
cmp
sbb
jl
gs
lea
pop
or
inc
mov
sbb
test
pushf
inc
outsl
jb
mov
mov
shl
xor
push
mov
or
outsb
pop
cmc
lds
fsubl
push
push
imul
mov
sbb
push
xchg
xor
adc
xchg
cmp
jp
js
leave
xchg
bswap
mov
dec
sbb
add
test
jle
or
cmp
xchg
shll
jo
idivb
stos
xchg
mov
mov
pop
inc
mov
and
xchg
xchg
cmc
sarl
pop
push
stos
push
mov
imul
inc
jmp
out
stos
xchg
inc
xchg
fisttpll
xor
arpl
inc
jne
lahf
adc
add
call
cmp
sbb
add
arpl
cmpl
je
push
idivb
call
aaa
fwait
adc
xor
das
push
and
fistpl
mov
mov
movsl
push
fimull
aam
jne
jle
xchg
cmp
cmp
aas
fstl
jns
xor
or
xchg
mov
mov
js
test
mov
dec
and
xlat
mov
push
push
add
cmc
inc
mov
sbb
outsl
mov
or
or
cmp
ficoml
fisttpll
call
test
mov
push
sub
xchg
cwtl
mov
insl
adc
jb
add
test
xchg
push
jns
lahf
cmpsl
icebp
arpl
and
push
and
and
jb
sub
adc
xchg
cmpsb
jns
pop
inc
in
xor
lds
xchg
adc
mov
jae
addl
add
sarb
dec
mov
mov
xchg
out
lret
scas
in
lahf
fdivp
pop
xor
jle
ljmp
add
fistl
xchg
icebp
aaa
mov
call
mov
inc
push
insl
bound
outsb
in
sbb
adc
lds
into
notb
or
inc
lods
mov
xchg
shll
xchg
test
nop
push
push
or
jb
and
push
jp
test
and
test
bnd
rorb
rcll
inc
mov
ljmp
loopne
mov
mov
addr16
mov
lods
xlat
movsb
xchg
or
loop
pop
ss
xchg
xlat
das
in
lods
push
hlt
fs
adc
js
sub
lds
mov
mov
or
pop
repnz
xor
mov
mov
jmp
sbb
sarl
lahf
popa
sti
arpl
jne
and
jge
jo
pushf
or
jns
clc
push
mov
jae
dec
adc
mov
and
popa
nop
jno
sub
sub
push
mov
adc
sub
aas
fnsave
loop
fbld
mov
cli
shl
pushf
and
xchg
cld
rcll
inc
test
or
orl
dec
gs
inc
repz
cltd
xchg
cmpsl
mov
das
cmp
mov
dec
and
in
lods
push
cs
cmp
aad
loope
and
sub
mov
xor
or
xor
int
sbb
xchg
ja
sub
cltd
aad
jmp
test
nop
add
cmp
xchg
inc
jg
cs
imul
jl
lods
xchg
mov
pop
xor
mov
sub
add
lds
adc
cmp
inc
dec
test
jo
or
pop
imul
fs
loopne
sbb
imul
fisttps
dec
test
gs
out
inc
add
jecxz
cld
es
outsl
xchg
inc
and
mov
pop
std
negl
sbb
clc
outsb
sbb
dec
sub
pop
mov
add
pop
sbb
hlt
sub
pop
jg
test
loope
xlat
add
jb
xchg
mov
sbb
inc
das
mov
mov
adc
js
lcall
jp
loop
adc
xlat
icebp
addr16
xor
js
je
test
mov
fcmovnu
push
xchg
mov
jne
imul
nop
div
xor
test
sub
cld
jecxz
shl
test
or
jg
and
jne
insb
adc
fnstcw
idiv
xchg
mov
inc
xchg
aaa
std
mov
xor
add
insb
in
mov
mov
mov
cli
mov
stos
popf
insb
and
arpl
daa
fistpll
das
loop
lret
mov
inc
xchg
push
push
push
bound
movsl
lcall
lret
in
pop
xchg
jg
rorl
inc
push
inc
aas
test
faddp
call
negb
push
loop
loop
push
stc
nop
sbb
lahf
adcl
mov
inc
decb
xchg
and
bound
cwtl
adc
out
mov
fidivs
inc
fstpt
xor
js
int3
jns
xor
pop
xor
addb
cmpsb
rcr
inc
pop
insl
xor
test
pop
fwait
jne
pop
je
dec
lret
mov
jp
add
sar
cld
sahf
ret
mov
dec
dec
adc
outsb
aam
test
or
push
je
xor
rolb
xor
mov
rorl
iret
popf
mov
addr16
sbb
jnp
stc
outsl
imul
sub
dec
into
dec
rclb
xorl
mov
mov
jg
mov
imul
fisttpl
sarl
rcrl
pusha
pop
out
and
push
cltd
cmp
or
add
jns
movsb
pop
insb
ljmp
add
pusha
inc
jge
dec
mov
arpl
inc
ret
xchg
aad
adc
mov
push
lods
cmpsb
sbb
jg
aaa
mov
push
ds
sahf
addl
jg
out
shrb
or
inc
popa
dec
sti
push
mov
add
lea
mov
push
pushl
pushl
call
mov
mov
jmp
or
rcl
cmp
pop
jns
popa
mov
stos
jo
dec
jge
jo
and
sub
pop
icebp
mov
push
mov
inc
movsb
insb
xor
cld
mov
fidivl
lcall
mov
scas
jae
jne
add
xchg
aad
scas
popa
or
xchg
push
push
out
cmp
adc
into
divb
dec
outsl
imulb
jae
dec
daa
pop
xchg
mov
arpl
push
add
mov
je
sub
iret
aam
outsb
ret
mov
jae
insb
inc
ret
sahf
xchg
lret
pop
or
test
and
jbe
daa
in
mov
xchg
inc
jb
inc
and
add
push
out
jne
cmc
test
decl
stos
fadds
pop
icebp
dec
add
mov
fcmovu
cwtl
cli
sbb
mov
inc
jne
dec
cmpsl
gs
pop
dec
add
sarb
push
xchg
loopne
cltd
in
repnz
mov
cld
ret
inc
mov
sbb
pop
mov
test
adc
inc
jecxz
push
inc
push
xchg
push
inc
ficoms
cld
ret
insl
test
bound
mov
pop
mov
stos
and
scas
sub
outsl
enter
adc
xchg
cmpsl
insb
pop
dec
aas
xchg
xchg
aaa
and
pusha
ja
mov
pushf
loop
xchg
ss
sar
ret
data16
mov
jo
mov
ljmp
lret
jecxz
idiv
pusha
xor
pop
test
push
bound
mov
mov
into
push
pop
mov
lcall
clc
sbb
mov
lods
xchg
mov
sub
aad
stos
mov
je
daa
test
lock
outsl
mov
push
xor
xchg
scas
out
pop
lds
pusha
push
mov
or
popf
adc
daa
mov
xlat
repz
mull
xchg
sbb
repnz
inc
xor
xchg
jns
lea
sbb
lods
fdivrl
jecxz
xchg
fildll
inc
push
sub
ret
inc
fdivl
adc
ljmp
adc
lea
add
in
mov
mov
ror
fdivs
push
pop
hlt
inc
cmp
adc
xor
ja
les
pop
ror
push
int3
sbb
sub
stc
xchg
sub
xorl
xchg
sbb
mov
push
or
and
pop
test
and
pop
stc
mov
cld
inc
xchg
jecxz
out
inc
adc
aad
push
fst
add
pop
fisttpll
fnstenv
jae
mov
cmp
mov
adc
push
repz
xchg
xchg
xchg
out
fldl
fnstenv
mov
pop
or
pop
push
cmp
inc
mov
pop
fsave
lods
jge
mov
mov
xorl
sbb
lcall
add
lds
mov
jne
mov
inc
xor
dec
lahf
fs
push
roll
sub
mov
push
lea
sbb
and
sbb
int
lret
cmc
xchg
aad
sub
adc
daa
sbb
sub
cmp
jb
jae
mov
gs
movb
jno
hlt
gs
mov
repnz
adc
data16
and
add
add
or
jge
ficoml
pop
pop
arpl
dec
aas
jae
xor
add
cmp
jne
mov
inc
cmp
jb
jmp
mov
xor
add
jmp
mov
movzwl
mov
mov
mov
mov
mov
xor
add
jmp
xlat
and
insb
push
aaa
pop
push
push
sahf
idivb
fdivs
jo
mov
xlat
and
add
lds
pop
leave
jo
lea
mov
xor
pusha
icebp
push
fs
rcll
movsb
test
sti
addb
je
sub
aam
faddl
inc
add
fisttpl
mov
and
mov
jge
sub
push
jae
mov
inc
fadd
dec
test
mov
mov
xchg
and
and
cltd
test
jno
add
data16
xor
mov
push
jns
xor
cmp
and
mov
mov
std
sub
xchg
jg
dec
sbb
mov
leave
cmp
xor
ljmp
rcrb
daa
jno
aaa
pop
fisubrs
adc
popf
out
test
xor
arpl
in
pop
sbb
jge
sub
mov
jl
cmpsl
movsb
stos
pop
xorl
aas
xchg
sub
xchg
adc
icebp
cmp
xor
stc
icebp
mov
jge
aad
mov
jne
cs
push
clc
mov
dec
inc
les
iret
ret
cld
and
dec
add
inc
mov
out
dec
scas
jg
and
pop
add
adc
xchg
adc
adc
cmp
imul
orl
pusha
insl
mov
fcmovbe
sbb
rolb
or
jae
or
xor
sub
adc
sub
rorb
jns
lea
popa
sahf
stos
pop
sar
lock
add
clc
jne
sub
push
sbb
ret
sub
push
loope
cld
stc
lock
movsl
dec
cwtl
stc
ja
inc
mov
and
cmc
test
icebp
stc
shll
jbe
ret
aas
int3
decb
ret
push
iret
je
call
adc
jl
push
mov
xchg
add
pop
xchg
xor
jle
and
dec
and
jns
xor
iret
xchg
cmp
cmp
mov
es
jmp
movsb
loopne
mov
sbb
cmp
mov
es
in
call
enter
inc
movsb
mov
clc
mov
dec
cmp
push
hlt
cmc
in
xor
das
jo
test
repz
rorb
rol
lret
sbb
sbbl
mov
xchg
mov
sub
lods
ret
add
jecxz
xor
test
mov
es
cmp
cs
popl
scas
lea
rcrb
loop
xchg
mov
inc
inc
sub
scas
lcall
cmpsb
ja
inc
add
arpl
jle
push
sbb
mov
orl
jge
dec
or
hlt
inc
pop
ja
fbstp
lods
mov
sti
cmp
loopw
mov
test
out
push
or
dec
stos
popf
xor
inc
addr16
xchg
inc
sub
iret
pop
loop
loopne
int3
fimull
int3
and
cmp
ja
jmp
jle
stos
fisttpll
push
mov
incb
adc
imul
add
enter
push
ret
cmc
push
push
push
jg
jp
repnz
stos
mov
fs
dec
xor
sbb
push
std
or
imul
xchg
ljmp
add
push
push
aad
enter
mov
and
jno
jl
ss
and
cmp
dec
lret
inc
pop
ficoml
movsl
sbb
dec
sti
aaa
std
push
push
inc
call
sbb
inc
fiadds
mov
mulb
enter
add
add
or
jmp
mov
add
mov
mov
jmp
sahf
das
or
mov
mov
pop
mov
xchg
arpl
xor
jo
mov
mov
jmp
xchg
push
jnp
pop
xchg
and
lock
cmp
ds
xor
dec
aas
sub
add
lahf
lcall
mov
dec
sti
ret
sbb
outsl
adc
mov
les
dec
and
je
jo
xchg
xchg
les
jg
pop
insl
sarb
push
and
shlb
jge
loope
int3
mov
fstpl
icebp
std
fldenv
mov
rorl
push
xchg
sbb
sbbb
or
adc
movb
mov
pop
mov
mov
cwtl
in
movsb
push
inc
fimuls
sub
ja
inc
ret
repnz
lahf
outsl
sub
jnp
andl
mov
andl
lock
cmp
outsl
loop
sbb
stos
inc
fsubr
and
cmp
cwtl
cwtl
and
sub
stos
jo
ret
insl
pop
hlt
push
fistpl
inc
into
sbb
and
mov
in
xor
es
movsl
stos
fcoms
or
inc
addr16
sub
addl
in
or
xlat
loop
or
sets
pop
dec
imul
mov
shll
mov
xchg
push
mov
inc
xor
mov
mov
enter
cmp
sbb
cmp
mov
in
stc
cmp
dec
or
mov
mov
lea
mov
add
movsb
leave
mov
or
cmpb
mov
in
imul
cmp
inc
or
sbb
sbb
fcmovnb
scas
push
loopne
in
test
push
xchg
lret
loop
cmc
inc
sahf
rcrb
cli
sub
faddl
jle
addb
cmpsl
int
cmp
in
jb
scas
pusha
and
ljmp
out
imul
lds
mov
lods
popa
sub
jb
mov
ret
movsl
inc
cmp
mov
sbb
popa
sub
jo
pop
cli
mov
sbb
das
in
xor
pop
stos
ja
outsl
inc
fadds
mov
wbinvd
push
loopne
sbb
mov
int3
add
and
fistps
std
lcall
pop
sbb
adc
imul
int
stc
add
mov
dec
mov
loop
push
mov
lock
pop
das
or
sbb
sub
nop
fists
shlb
mov
loope
or
push
addr16
xlat
xchg
mov
jns
mov
test
into
push
jle
std
cmc
stc
mov
lods
jmp
sub
sub
pop
xlat
adc
push
sbb
mov
push
mov
ret
jbe
jp
shl
mov
pop
test
insl
add
test
jae
pop
std
pop
negb
in
mov
and
mov
movsb
stos
and
cli
sub
mov
aad
sbbb
jo
and
jecxz
nop
ss
push
and
jne
cwtl
ja
out
mov
cmp
aam
test
ret
nop
clc
sub
cli
xchg
roll
ljmp
in
sub
inc
pushf
ds
xor
push
mov
popf
pushf
imul
lock
mov
sbbb
cmp
and
ret
jne
mov
mov
stos
mov
mov
inc
mov
mov
mov
add
add
add
out
pop
outsl
jne
data16
test
pushf
test
or
jo
pusha
dec
xor
loopne
fiaddl
inc
jns
mov
out
sub
mov
es
pcmpeqd
pop
lcall
lea
jge
cmpsl
inc
xchg
sti
call
pop
or
out
rorb
sahf
and
sub
les
cli
cmpsb
mov
jmp
sti
mov
mov
lcall
adc
in
insb
sub
iret
lahf
mov
je
loopne
mov
insl
fidivs
mov
frstor
add
jnp
add
popa
push
mov
mov
insl
and
bound
mov
popf
pushl
insb
js
std
adc
call
cmp
out
nop
sub
mov
cmp
loope
mov
push
addb
add
mov
inc
xor
lock
jecxz
in
dec
out
es
fcomps
mov
xchg
xor
jne
out
mov
mov
dec
or
and
inc
test
push
cmp
sbb
mov
jnp
fistps
rcll
stos
arpl
insb
int3
fwait
mov
dec
mov
pusha
mov
and
inc
push
int
jl
int
lods
push
enter
jo
push
lods
insb
fs
lret
rclb
sbb
xchg
lcall
roll
mov
test
fcmovbe
xchg
test
mov
mov
dec
jns
out
pop
mov
cmp
push
inc
daa
fisubs
mov
ret
or
dec
or
insl
jmp
and
pop
add
and
inc
jne
jl
mov
cmpsb
ret
stos
and
movsb
pop
test
aas
jb
fs
es
inc
scas
dec
push
xlat
jno
test
lcall
jge
cmp
jp
xor
ja
fsubl
adc
adc
or
hlt
mov
cmp
and
mov
mov
jmp
pop
popl
push
cmpsl
pop
xor
xor
ret
addr16
jle
mov
inc
test
lcall
test
lods
or
fistps
aad
mov
push
popf
ja
fs
test
icebp
imulb
cmp
dec
xor
mov
or
ljmp
les
insl
arpl
fcom
out
mov
sbb
and
xor
movsl
into
and
pop
lods
jmp
lods
ds
jno
and
sbb
pop
cmpsb
sub
insb
add
inc
mov
cwtl
loop
lret
imul
and
aaa
testb
clc
inc
sub
mov
mov
jge
dec
jnp
gs
es
out
stos
test
nop
loopne
xchg
in
lea
and
mov
fimuls
fcmovb
sbb
inc
mov
adc
jmp
aas
adc
jecxz
add
pop
shlb
popf
and
fwait
adc
and
nop
xchg
gs
mov
in
and
xor
ret
push
aam
call
sub
and
xchg
xlat
jp
mov
push
stos
stos
das
pop
cmp
shlb
add
mov
hlt
adc
pop
stos
in
jb
jl
subb
stos
xchg
push
dec
aad
jl
adc
xor
mov
stos
sarl
adc
divl
lock
jge
movsb
lea
push
jmp
or
subl
cwtl
adc
mov
jecxz
add
out
das
aaa
std
mov
aam
xor
jge
int3
push
pop
push
dec
pop
xchg
sub
xchg
dec
mov
imul
sub
mov
mov
mov
xor
mov
add
mov
mov
xor
add
mov
imul
mov
xor
mov
lea
cmp
je
mov
mov
mov
mov
mov
xor
xor
mov
add
div
mov
xor
lea
mov
mov
mov
mov
jmp
ja
mov
mov
nop
shll
dec
jge
jo
mov
inc
and
jecxz
jns
sbb
mov
rclb
int3
mov
rorl
pushf
mov
pop
or
movsb
lods
js
dec
jns
and
xor
mov
push
fwait
rcrb
mov
pop
mov
inc
add
fiadds
std
pusha
and
jg
mov
pop
pushf
fsubrs
add
mov
push
aam
and
sub
add
push
jge
into
scas
and
call
xchg
pop
mov
jmp
fstpt
fistpll
aam
mov
and
inc
arpl
stos
mov
or
pop
mov
mov
es
pop
fbld
out
mov
outsl
lret
inc
jp
imul
lcall
leave
mov
sub
sbb
stc
sub
push
xlat
push
cmpl
mov
in
mov
push
fisttpll
aam
jns
jb
dec
cmp
cmp
mov
nop
out
jp
jne
dec
mov
pop
xor
sub
lcall
adc
test
mov
push
add
test
in
add
rcrl
dec
daa
push
mov
sarl
iret
cmp
mov
cld
into
subb
ret
pop
fildll
pop
scas
pop
and
xchg
cmc
cmpsb
mov
adc
sbb
scas
xor
cmpsb
shll
das
aaa
les
sbb
jnp
or
fstpl
andb
dec
roll
sahf
mov
cmp
xchg
inc
sub
xchg
scas
imul
pop
adc
in
sub
push
and
and
mov
xor
in
aam
or
cltd
sub
enter
aad
inc
daa
shll
je
popf
out
xlat
xlat
pop
fwait
adc
inc
push
xor
pop
push
mov
sbb
cwtl
in
outsl
mov
xor
test
jne
js
dec
or
pop
dec
fcmovnb
sahf
pushl
mov
or
adc
inc
cmp
leave
xchg
les
bound
enter
xchg
es
fucomp
jo
adcl
jbe
sbb
inc
mov
rcl
push
stos
xchg
pop
scas
mov
stc
mov
mov
inc
xchg
mov
dec
xor
lea
clc
sbb
dec
mov
xchg
out
push
inc
aaa
push
sti
adcb
jnp
fsubr
hlt
jp
shrl
mov
cmp
nop
in
jae
daa
cwtl
mov
aas
cmc
cmp
shlb
pushf
xchg
or
mov
lds
jecxz
dec
adc
dec
inc
sbb
jo
mov
push
xchg
rcr
jns
xor
ljmp
cwtl
imul
aaa
mov
out
popa
pop
in
mov
adc
push
jmp
movsb
das
sub
or
pop
mul
xlat
mov
sbb
dec
aaa
xor
xor
push
fwait
dec
or
stos
mov
lahf
xchg
imul
sub
cmc
xchg
jl
xchg
pop
icebp
jnp
push
in
pop
mov
out
fstpl
cmpsb
aaa
leave
addr16
pop
cli
daa
movsb
mov
or
cld
adc
sbb
mov
push
ret
or
mov
mov
lods
psubusb
sbbb
aam
jb
pop
add
int
in
mov
data16
pop
and
test
jmp
inc
cli
fisttpl
jp
xchg
mov
mov
jge
jo
jno
into
sti
test
lods
and
cmpsl
adc
dec
jmp
xor
and
and
inc
dec
dec
mov
or
gs
les
lret
dec
xchg
adc
fwait
aam
shll
imul
add
inc
sub
in
test
inc
sbb
push
mov
push
lock
outsl
outsl
ud1
int3
fstpl
or
push
loope
jmp
arpl
mov
dec
in
add
outsl
sub
add
rcr
addb
add
xchg
out
mov
sub
lea
dec
add
mov
xor
mov
sub
addb
sbb
lahf
mov
cmpsl
ja
mov
pop
std
mov
xchg
inc
mov
xor
lea
fsub
pop
cmp
fstp
dec
cmpsb
sbbb
add
pop
inc
pushf
pushl
or
xchg
or
sub
cmp
cmp
xor
icebp
pop
pop
xor
cmpsb
xor
popl
jle
jecxz
xorb
das
mov
rcl
insl
push
repnz
subb
adc
out
jg
sti
pusha
cmpsb
jns
push
pop
jl
mov
inc
vphaddbd
adc
dec
or
mov
cwtl
out
fs
jne
inc
rcrl
add
xchg
sub
arpl
std
lods
jmp
cmp
call
jns
je
mov
mov
or
out
inc
cld
stos
jno
mov
icebp
pop
push
jnp
cmpsl
and
mov
mov
or
rcrb
inc
mov
out
addb
aas
dec
pop
out
cwtl
jb
jecxz
out
pop
mov
sub
aad
repnz
es
sbb
nop
clc
lcall
pushf
movsb
popa
or
roll
cld
xchg
mov
push
ds
cs
daa
mov
popl
mov
sub
mov
cmp
sbb
or
dec
xchg
sbb
mov
mov
fldl
mov
inc
mov
pop
ficoms
pop
ffree
out
push
subb
or
test
push
fpatan
or
jb
ss
lahf
or
addb
gs
add
pop
push
jae
lret
xchg
sbb
push
dec
xchg
fldl
add
iret
stc
enter
cmp
xlat
js
or
jnp
notl
out
xor
aam
daa
dec
sub
outsl
adc
xor
pop
or
push
movb
jle
pusha
cmc
fdivr
in
mov
cli
fdecstp
aas
movsb
xchg
jo
fnsave
sub
sbb
adc
push
imul
sub
aad
iret
js
insl
cmp
sub
mov
in
sub
mov
jns
mov
inc
mov
stos
idivb
sti
or
cmp
inc
or
addr16
or
imul
shr
push
repz
js
fwait
and
out
adc
inc
xchg
inc
shr
push
fdivp
lods
xor
aam
jne
jl
push
pop
rorl
and
pushf
cltd
cmp
out
leave
ja
mov
xchg
dec
add
bound
jle
jno
outsl
fwait
aaa
sbb
fs
mov
fisubs
or
adc
aad
mov
push
js
scas
cmc
jecxz
or
cli
and
incl
test
rcrl
pushl
sbb
pop
pop
adc
popa
repnz
cmp
dec
sbb
in
and
cmc
outsl
xor
lea
mov
mov
jmp
mov
fwait
xchg
fwait
jae
roll
xchg
jo
jge
jo
data16
insl
xchg
adc
inc
add
es
push
jmp
mov
mov
bound
aaa
les
arpl
lds
sbb
xchg
push
mov
sbb
les
push
push
loopne
outsl
in
cmp
dec
lods
adc
in
cltd
negl
int
lock
pop
daa
inc
leave
inc
repz
rcr
jno
aas
mov
push
mov
push
dec
pop
sbb
jns
out
cmp
stc
and
inc
mov
cmpsb
stos
ret
sbb
mov
mov
inc
pusha
push
xor
or
or
push
mov
and
add
adc
cmp
xor
divl
test
dec
icebp
inc
roll
std
clc
rclb
outsl
xchg
push
repz
imul
xchg
sbb
lea
pop
adc
or
pop
stos
in
ljmp
jae
movsl
jns
ja
dec
inc
add
push
je
imull
mov
into
xchg
gs
rorb
mov
dec
pop
sahf
fwait
xchg
lret
cmp
das
adc
sub
stos
sbb
push
mov
mov
movsb
adc
adc
pusha
adc
mov
addr16
stos
test
std
lods
xchg
and
out
dec
cli
pop
mov
cmpsb
push
aas
cmp
xchg
push
pmaddwd
mov
push
pop
inc
je
xchg
test
or
inc
cmpsl
in
sbb
sbb
cltd
int
inc
repz
mov
cmpb
lods
or
inc
pop
mov
inc
ja
xchg
or
and
cltd
mov
push
addb
pop
and
xchg
jne
pushf
or
inc
pop
stc
jp
mov
test
movsb
xor
adc
jae
cmp
jno
xor
shrb
push
lret
arpl
mov
jle
inc
dec
stc
mov
shrl
cmp
mov
jecxz
xchg
mov
pop
sbb
or
adc
push
xchg
jl
jbe
pop
push
mov
mov
jne
inc
sbb
lds
jo
mov
jmp
insl
add
je
arpl
cmp
jne
mov
imul
xor
mov
cmc
sbb
and
dec
test
test
add
add
mov
dec
jl
scas
gs
ret
jp
cltd
mov
daa
sbb
mov
bswap
and
jmp
insb
ljmp
inc
imul
or
sub
lcall
out
mov
lods
aas
xchg
dec
lods
push
cmp
ret
notb
stc
mov
jecxz
out
mov
lahf
xor
jno
cwtl
nop
popa
jp
mov
add
in
adc
test
mov
pop
test
int
cmp
loope
fs
sub
mov
xlat
stc
mov
pop
subb
lret
call
cmp
mov
mov
js
out
js
xchg
imul
sub
pop
and
xchg
push
pop
lods
mov
mov
jecxz
dec
cmp
aam
dec
jnp
insl
popl
stos
shl
out
dec
insb
add
sahf
mov
pop
adc
add
call
mov
dec
mov
mov
add
mov
jns
data16
in
and
mov
mov
sub
sub
loop
cmp
mov
in
xor
jle
pop
mov
mov
pusha
cwtl
dec
mov
xor
add
imul
mov
xor
mov
lea
cmp
jmp
mov
push
mov
bound
pop
mov
dec
jge
jo
scas
lock
fldl
das
jecxz
int
mov
pop
pop
out
fstpt
dec
pop
push
loopne
pop
leave
and
stc
shll
jl
mov
in
data16
jo
mov
lret
inc
div
adc
insl
hlt
mov
dec
dec
adc
inc
shrl
xchg
mov
arpl
out
test
xchg
arpl
clc
ds
movsb
lcall
aad
add
lahf
add
push
pop
in
inc
jno
inc
loopne
leave
jnp
mov
adc
xor
push
nop
cltd
stc
jns
push
adc
xchg
xchg
xchg
cmp
add
ds
lea
rclb
jnp
mov
mov
xchg
loope
sti
clc
sbb
adc
lds
imul
inc
xchg
pusha
mov
jb
lods
sahf
cmp
outsl
cmp
out
pop
mov
les
stos
popf
mov
push
or
int
gs
sub
inc
popa
sub
loopne
sbb
mov
mov
adc
leave
je
lret
leave
aas
mov
sbb
push
lock
and
dec
mov
mov
sbb
mov
imul
in
xchg
ficomps
mov
cmpsl
loop
mov
sahf
leave
into
ljmp
mov
adc
insb
les
adc
vphaddubq
insl
out
jbe
mov
test
mov
push
push
ja
mov
popa
cli
je
andb
inc
shrb
sbb
mov
ja
jge
xlat
or
sti
movsb
fistpll
or
movsb
aas
stos
nop
idivb
jge
and
dec
push
ret
push
xor
into
push
dec
into
sbb
dec
and
fisubs
xor
shlb
sub
fcompl
push
std
nop
ficoms
cli
stos
and
mov
test
xchg
or
mov
or
cld
je
push
xchg
hlt
lock
loopne
adc
inc
cli
das
test
fwait
cmpsl
sub
pop
aad
out
pop
fsubr
stc
int
lcall
out
jmp
clc
add
mov
not
xchg
jg
lods
adc
add
lock
aas
sub
in
sub
mov
mov
jle
pop
add
pop
loopne
aam
push
xchg
push
cmpsb
ficomps
or
mov
lds
dec
xchg
sub
sahf
fdivp
vminps
pop
push
enter
mov
cmc
push
bound
lret
scas
shrb
std
out
xchg
sbbl
inc
icebp
push
pop
iret
movsl
jnp
sti
xorb
shl
ret
bound
lret
insl
loop
aaa
sub
lock
sbb
cs
dec
cmpl
movsl
xchg
xchg
cmpb
jecxz
lea
or
js
mov
clc
jns
jbe
popf
or
xor
out
adc
push
es
inc
outsb
fsubrl
jnp
cmp
ret
sub
ret
out
and
jo
ds
out
negb
mov
add
addr16
mov
fcmovb
jnp
jmp
xor
out
dec
mov
inc
mov
xchg
sub
push
and
clc
xchg
cmp
ficoml
cwtl
pop
loope
mov
inc
push
lods
enter
sub
ror
mov
outsb
fcom
notb
sub
out
decl
add
mov
mov
xor
add
mov
xor
lea
add
call
xor
inc
cmp
je
xchg
push
pop
push
pop
inc
jmp
inc
orl
push
ds
adc
dec
jge
jo
cmp
add
popa
mov
ss
fdiv
sbb
xchg
sub
js
jg
aad
mov
repnz
in
movsl
add
loope
dec
insl
das
in
in
sbb
mov
sub
mov
mov
push
addr16
pop
aad
sbb
and
jbe
add
cltd
push
rorl
ret
cwtl
shrl
aaa
das
out
jecxz
sbb
pushf
jnp
cwtl
cmp
fildl
push
outsl
and
shll
push
scas
push
adc
pop
les
imul
pop
movsl
xor
sbb
sbb
jmp
xorb
sbb
bound
xchg
insl
add
test
adc
jnp
sub
xchg
insb
dec
aaa
sub
rcrb
neg
mov
call
sub
xchg
les
mov
in
push
outsl
xor
jae
rcrb
jo
sahf
push
bound
add
pop
leave
xchg
adc
lret
sub
cmp
sbb
mov
mull
call
sub
in
push
pop
in
jb
sarl
aam
aas
fbld
sub
add
fs
loopne
or
je
jo
incl
mov
sub
inc
addr16
cltd
arpl
or
fnstsw
push
jae
cmpsl
xchg
sbb
add
test
das
or
cmpsb
push
push
repnz
iret
test
aam
test
fchs
jmp
push
ja
imulb
addr16
sbbb
mov
icebp
xlat
out
push
stos
adc
adc
jle
inc
cld
imul
mov
into
jne
mov
lret
push
icebp
add
pushf
pushf
test
lret
divl
lods
pop
mov
cmp
sbb
mov
int3
inc
adc
std
pop
stos
pusha
test
bound
xor
dec
or
pop
push
roll
xor
dec
fwait
xchg
cld
inc
lret
push
fldt
mov
push
cmpsb
mov
jb
jo
mov
and
repnz
xchg
sbbl
mov
pushf
les
or
iret
dec
fldt
cmp
push
add
add
push
stos
xchg
jl
or
add
imul
mov
sbbb
aam
add
out
ljmp
mov
sbb
add
sbb
hlt
lds
inc
mul
adc
mov
fs
aaa
fildl
call
mov
call
ror
movsb
jle
xchg
sub
xlat
and
sbb
lret
popf
lret
dec
mov
arpl
bound
adc
fidivrl
addr16
push
clc
lea
and
or
and
mov
inc
test
daa
jno
mov
inc
movsl
pushf
push
xor
sti
or
add
les
lea
sbb
dec
mov
shl
xor
call
imul
jns
cmp
inc
mov
lret
je
popf
sub
cmp
pushf
stos
pop
test
int3
bound
movsb
inc
dec
xchg
cli
or
jle
cmp
lods
mov
dec
out
add
idiv
in
or
cs
fmull
sysexit
inc
jno
rolb
cltd
cmc
test
xchg
mov
ljmp
sbb
stc
sbb
add
and
dec
int3
mov
push
inc
xchg
adc
pop
pop
mov
dec
data16
jp
xor
lods
push
xchg
flds
in
scas
roll
xchg
push
xor
mov
dec
inc
add
jmp
jp
jb
jb
adc
sub
cmc
insl
outsl
testl
jge
jo
adc
ja
jo
jo
dec
cmpsl
and
fisubrl
sbbl
gs
jnp
movq
jno
xchg
test
xchg
push
mov
insb
dec
push
mov
adc
sbb
xchg
aaa
and
push
jne
lds
test
daa
jnp
mov
int3
and
ficomps
cltd
mov
pop
cmp
stos
add
das
sarb
in
push
mov
mov
pop
adc
sub
insb
daa
pop
out
jne
dec
jp
mov
iret
hlt
jg
pop
cmc
incb
and
jns
sub
mov
jp
pop
and
push
ficoms
ret
push
jo
add
leave
cmp
push
push
movsl
sub
sub
dec
stos
xor
movb
sub
sbb
jbe
and
ss
push
pop
mov
mov
jmp
push
sbb
movsb
add
mov
jns
xchg
dec
jae
in
cld
lcall
add
stos
test
das
inc
into
pop
sar
out
scas
ret
push
and
or
lcall
xchg
xchg
ds
rcll
mov
jo
inc
lock
inc
test
ret
shrl
jbe
shll
push
mov
movsl
out
out
jns
or
dec
mov
jae
lods
or
pop
sbb
movsb
sbb
xchg
and
enter
pop
les
pusha
pop
xchg
push
inc
and
mov
rolb
imul
and
mov
ret
add
lea
push
out
fidivrs
sbb
imul
pushf
lock
repz
shr
sub
mov
popf
mov
xorb
shl
sti
cmpsb
and
iret
xor
add
jge
xor
cmp
or
dec
xor
sti
adc
test
fwait
pop
fwait
sbb
lret
push
lea
cld
scas
test
pop
cli
xor
in
fcmovb
push
inc
mov
sub
fmuls
mov
sub
inc
add
and
mov
ret
repz
filds
push
mov
out
dec
out
stos
mov
int
pushf
sbb
mov
or
lds
out
mov
sub
mov
ds
addr16
and
pusha
xchg
das
test
andl
mov
and
imul
push
and
push
in
dec
or
dec
mov
pushf
aam
mov
cmp
pop
sbb
idiv
xor
hlt
stc
or
popa
sub
fsubs
shl
int3
ret
sarb
xor
ror
mov
ss
or
mov
fnsave
adc
mov
adc
or
lcall
pop
dec
jns
daa
xchg
dec
imul
repnz
pop
outsl
inc
add
fs
mov
cli
xor
mov
cld
push
cwtl
sbb
inc
jle
fiaddl
cs
call
sbb
jbe
xchg
jge
aam
int3
xor
or
xor
mov
and
cltd
fcomip
pop
xor
mov
push
or
add
add
jle
inc
cmp
mov
clc
jp
xchg
cmc
adcb
pop
cmp
inc
scas
fistl
dec
mov
pop
idivb
stc
ss
pop
stc
hlt
mov
jns
in
loopne
xlat
fistpll
xchg
jmp
lcall
mov
sub
add
pop
mov
pop
pop
pop
leave
ret
dec
push
mov
mov
or
dec
add
add
add
movl
xor
test
enter
mov
hlt
test
pushf
enter
movl
inc
inc
cld
xor
or
mov
call
pop
mov
dec
mov
pushl
or
ljmp
dec
loopne
rorb
add
mov
hlt
add
enter
dec
add
mov
orl
xor
lret
enter
mov
lea
push
mov
fs
decl
push
and
pop
inc
mov
push
pop
cld
dec
lea
mov
add
movl
decl
xor
cld
dec
jne
lea
push
mov
or
add
sub
add
rolb
inc
add
add
mov
incl
lea
call
add
jne
decl
dec
add
xchg
loopne
inc
incl
mov
xor
add
enter
mov
hlt
add
mov
add
add
incl
sbb
jne
mov
mov
movl
incl
fisttpll
test
inc
aas
inc
lea
inc
mov
mov
cld
in
inc
jmp
fisttps
jecxz
out
incl
out
aas
inc
ljmp
incl
movl
insb
test
pandn
aas
add
mov
incl
or
mov
xchg
fildl
mov
cmp
dec
leave
mov
fsubrs
add
lea
push
add
mov
mov
add
mov
cld
push
decl
push
mov
call
mov
cld
add
test
in
in
cld
jge
mov
fsub
add
mov
add
add
mov
inc
push
fisttps
test
fadds
jmp
fildl
inc
jo
test
jmp
incl
in
add
jne
mov
cld
incl
mov
mov
add
call
ret
cld
incl
out
xor
mov
cld
jo
or
add
push
add
mov
decl
add
inc
orb
add
mov
mov
inc
sub
add
rolb
jne
xor
incl
call
mov
call
xor
push
adc
loopne
ret
loopne
xorl
cmp
bswap
rolb
jmp
mov
add
cld
jne
xor
push
add
add
inc
add
mov
test
add
incl
jmp
adc
mov
pushf
mov
lea
xor
call
call
jne
xor
add
pushl
call
int3
incl
mov
xor
add
xchg
in
add
add
add
mov
mov
or
inc
test
je
mov
xor
push
or
inc
in
mov
mov
fmul
add
mov
cld
loopne
inc
push
cmp
movaps
cld
fadds
jne
push
in
jne
lea
das
mov
mov
mov
xor
adcl
rclb
inc
lock
inc
xchg
ud0
incl
lret
jbe
mov
push
pop
mov
inc
lret
inc
iret
jb
mov
enter
xor
pushf
mov
xor
dec
add
inc
mov
xor
add
mov
fmuls
xor
mov
roll
xor
mov
clc
enter
mov
test
clc
incl
cmp
pushf
or
enter
xor
pushf
inc
ds
pushf
inc
mov
lock
add
mov
sarb
adc
dec
adc
add
jmp
jb
add
xor
xor
add
clc
enter
pop
mov
push
push
xor
xor
add
add
lret
repnz
cli
fdivr
test
dec
inc
xor
add
mov
mov
clc
jne
mov
into
into
scas
dec
mov
sub
cmp
mov
mov
mov
add
xor
xor
lret
mov
inc
add
mov
lods
test
xor
mov
lock
bswap
lret
test
jmp
add
push
mov
test
push
clc
xor
xor
add
add
push
dec
mov
stc
roll
scas
mov
xor
xor
add
mov
clc
lret
into
mov
mov
mov
int3
add
xor
xor
add
mov
lock
stc
mov
or
jmp
dec
dec
mov
clc
test
clc
rorl
mov
call
les
lret
ja
mov
dec
xor
mov
clc
push
lret
mov
adc
jb
add
call
cmp
movsb
pushf
inc
xor
mov
clc
dec
lret
mov
call
scas
mov
pushf
sub
cmp
lods
xor
add
mov
mov
cmp
jb
add
dec
scas
mov
shrl
into
cmp
mov
dec
dec
mov
lret
xor
add
imul
mov
xor
mov
add
mov
inc
rdtsc
xlat
pushf
jge
xor
sub
cmp
jb
add
rorl
xor
add
jmp
mov
dec
into
mov
pushf
shll
lret
or
add
in
push
mov
fs
dec
sub
dec
xor
jge
mov
add
dec
decl
adcb
add
jge
push
push
shlb
xor
xor
inc
add
dec
or
jbe
mov
ror
enter
decl
push
lret
push
mov
mov
cld
subb
sti
add
push
lcall
bswap
pop
inc
decl
push
xor
movl
aas
push
inc
xor
add
mov
jmp
mov
les
mov
mov
cmp
mov
add
xor
pushf
lret
cmp
call
inc
inc
mov
mov
enter
add
add
clc
enter
push
pushf
mov
int3
or
test
clc
gs
add
push
xor
sub
dec
add
mov
or
cmp
dec
out
xor
mov
dec
add
push
push
add
sbb
mov
xor
dec
inc
xor
add
push
dec
mov
lret
into
sub
dec
adc
inc
push
test
unpcklps
jmp
add
movl
xor
rolb
clc
fs
mov
xor
sub
mov
add
sub
mov
mov
clc
addl
lcall
inc
decl
test
decl
push
add
dec
or
rorb
into
add
mov
sar
adc
clc
fadds
mov
push
adcb
add
lret
mov
cld
mov
into
add
jne
incl
rclb
push
mov
mov
sar
or
push
add
pushf
xor
pushf
mov
test
clc
inc
inc
mov
sub
mov
dec
xor
mov
xor
orl
shll
int3
lea
push
xor
pop
lods
incl
mov
pushf
jo
cmpl
inc
add
push
in
inc
push
mov
cld
add
adc
add
jmp
add
mov
dec
push
cmp
unpcklps
jne
decl
mov
shlb
inc
add
lret
decl
stc
in
or
dec
clc
xor
mov
rolb
inc
add
clc
inc
lret
mov
in
lret
into
into
scas
dec
mov
sub
cmp
mov
int3
test
xor
xor
lret
mov
inc
add
mov
xor
mov
call
lret
test
jmp
add
push
mov
mov
lret
xor
add
add
push
dec
mov
stc
roll
scas
mov
xor
xor
add
mov
clc
lret
into
mov
test
push
jbe
mov
mov
push
add
rdpmc
lret
add
dec
stc
mov
or
jmp
dec
dec
mov
clc
test
clc
rorl
mov
lock
inc
mov
hlt
pushf
jge
sub
cmp
ja
mov
dec
xor
mov
clc
push
lret
mov
adc
jb
add
lock
sub
mov
mov
mov
mov
lock
ror
push
scas
mov
pushf
sub
cmp
movsb
xor
add
mov
mov
cmp
jb
add
dec
scas
mov
shrl
into
cmp
mov
dec
dec
mov
lret
xor
add
imul
mov
xor
mov
add
rolb
rdtsc
xlat
pushf
jge
xor
sub
cmp
dec
xchg
incl
jmp
mov
dec
into
mov
pushf
shll
lret
or
add
in
push
mov
fs
dec
sub
dec
xor
jge
mov
add
dec
decl
inc
push
decl
lea
mov
push
mov
les
add
incl
mov
cld
lret
add
jne
in
ror
scas
into
add
not
adc
inc
push
mov
push
mov
fdivr
sti
sbb
pop
xchg
leave
pushf
add
push
cmp
sqrtps
decl
push
cld
xor
lret
clc
xor
add
hlt
or
mov
hlt
dec
add
leave
mov
push
roll
mov
mov
lar
push
lret
jne
mov
or
mov
cld
inc
mov
add
in
test
fdivr
ret
cld
mov
clc
xor
mov
loopne
mov
mov
clc
jne
call
and
je
mov
cld
or
push
add
add
inc
push
mov
pop
mov
ret
push
mov
clc
lock
jne
jne
mov
faddl
jne
cmp
pop
mov
push
inc
lea
inc
inc
int
inc
cld
jo
inc
xchg
mov
mov
or
inc
inc
mov
cld
jmp
mov
mov
rclb
iret
inc
leave
decl
mov
mov
mov
push
nop
incl
push
leave
iret
add
push
jmp
inc
push
mov
in
push
sbb
add
mov
cmp
jne
push
pop
push
mov
or
add
sub
int3
jne
add
sbb
mov
lea
push
enter
testl
enter
negl
or
inc
loope
sub
inc
loope
add
push
push
imul
adcl
add
lea
mov
cmp
jne
mov
in
add
out
inc
aas
jmp
lock
and
mov
call
push
add
ud0
hlt
add
cmp
flds
out
call
cmp
shl
pop
fisttpll
push
add
add
push
add
sub
jne
lods
mov
dec
out
into
push
loopne
shrb
xorl
roll
mov
cmpl
mov
push
push
push
sub
push
adc
insl
mov
add
inc
mov
pop
addl
add
add
roll
cli
push
pop
lret
add
decb
sub
and
dec
inc
shll
add
pop
add
pop
dec
jmp
and
push
out
jmp
jmp
mov
decb
add
pop
icebp
mov
insb
adc
mov
or
mov
cld
jge
aas
and
adc
mov
and
dec
add
add
fadds
stc
enter
sbb
sbb
in
in
add
jne
cmp
jb
jmp
mov
add
add
jb
pop
faddl
or
inc
or
xlat
dec
push
add
leave
roll
add
mov
int3
jmp
mov
jne
mov
call
pop
add
pop
or
push
mov
int3
add
jae
int
enter
add
mov
push
pop
add
push
lea
mov
jb
mov
push
add
add
add
int3
jne
movsbl
add
add
mov
add
add
mov
sub
jb
add
jge
add
addl
jne
je
mov
rorb
orl
mov
mov
fadds
inc
pop
lea
push
out
add
add
mov
jb
add
push
call
add
jae
icebp
inc
mov
int3
out
loopne
sub
push
pop
push
jl
add
xor
mov
rcrb
rorl
inc
shr
orl
push
pop
add
jmp
mov
fdivrl
push
pop
call
mov
in
rolb
call
pop
enter
repz
xorl
je
or
jne
jmp
pushl
push
pop
cmpl
jge
mov
sub
pop
inc
mov
sub
lods
add
enter
repz
stc
jge
jnp
call
fadd
dec
insb
stc
cmp
push
mov
jne
mov
mov
add
sub
and
cmp
sbb
pop
call
fsubr
sti
add
add
add
roll
mov
clc
jne
mov
loopne
loopne
lods
int3
inc
mov
add
sub
shrb
add
call
add
dec
insl
in
lea
inc
inc
sub
orl
and
rorl
or
mov
stos
adc
inc
add
jne
mov
cmp
sub
sar
ljmp
sub
mov
mov
and
jne
sub
sbb
dec
push
add
ret
mov
leave
sub
ret
pop
push
rolb
addl
jb
ret
in
jecxz
push
xchg
jne
cmp
jne
mov
rorl
mov
pop
nop
mov
les
add
inc
mov
mov
cmp
or
inc
inc
xor
cld
add
add
add
sbb
dec
je
mov
add
and
jae
mov
incl
push
shr
in
push
add
add
inc
mov
add
push
cmovne
xor
push
pop
xor
pushf
add
rcr
inc
add
add
out
inc
inc
sub
dec
and
jo
leave
add
lea
ret
mov
xor
mov
sbb
stc
mov
ss
add
add
add
add
movb
or
dec
lea
or
movsl
fiadds
jae
or
in
pushf
inc
xor
pop
inc
shl
inc
sub
inc
add
add
loopne
inc
ret
inc
mov
leave
and
add
mov
sbb
sbb
stc
test
lea
mov
dec
sarb
add
inc
ljmp
or
jge
mov
clc
leave
inc
add
rdpmc
sbb
mov
cmovne
jmp
inc
mov
sbb
mov
add
out
add
sub
add
jo
leave
movl
inc
add
inc
out
stc
int3
jb
xor
or
dec
mov
movb
loopne
inc
lea
push
movb
xor
lea
inc
jae
ficomps
addb
test
incl
inc
add
test
jne
orl
jmp
inc
jne
mov
mov
shlb
push
mov
gs
add
inc
dec
into
mov
jl
add
inc
mov
add
add
inc
or
inc
in
fsub
inc
add
add
call
pop
test
dec
jmp
pushl
loopne
movl
push
incl
mov
cwtl
movl
sbb
rorb
inc
rorb
test
add
add
push
add
mov
incw
add
xor
push
cli
popw
push
xchg
sbb
test
callw
adcl
mov
mov
push
fsubl
dec
inc
mov
lret
fistl
ljmp
jmp
in
lock
mov
xor
add
stos
data16
incl
data16
inc
shlb
add
addl
mov
add
push
lea
addb
jge
mov
rol
mov
rorb
orb
test
push
mov
orb
push
xor
aam
test
cmp
data16
dec
test
xor
lahf
mov
mov
data16
sbb
dec
mov
mov
add
jne
test
jne
sti
sbb
cld
jmp
inc
mov
data16
push
incl
test
sbb
lock
pushl
xorb
add
xor
movw
mov
sbb
mov
add
add
xor
inc
add
add
inc
jmp
addl
or
jmp
push
in
test
xor
mov
mov
push
add
decl
add
decl
movsl
add
add
push
xor
xor
mov
push
push
jne
mov
sbb
jne
incl
add
add
mov
sbb
leave
test
jne
call
xor
mov
enter
mov
mov
sbb
sbb
mov
inc
decl
add
xchg
ret
add
add
mov
lea
add
mov
inc
rdpmc
jne
add
inc
call
add
orb
ret
incl
add
cmp
pushl
add
test
je
mov
sbb
test
js
add
sub
mov
add
dec
push
mov
mov
mov
cld
or
dec
incl
push
add
mov
orl
add
push
xor
inc
mov
push
incl
inc
add
addb
mov
lea
je
decl
call
mov
hlt
call
mov
cwtl
mov
mov
addl
mov
inc
jmp
ljmp
mov
and
pushl
lcall
add
enter
add
adc
add
mov
xor
jmp
mov
in
inc
or
decl
jne
mov
mov
lock
xchg
jmp
adc
inc
mov
push
sub
push
test
inc
dec
mov
movl
add
add
mov
push
roll
bound
xor
sub
push
lea
jne
incl
jnp
mov
fs
sbb
out
or
ret
inc
decl
test
clc
lcall
or
inc
dec
incl
add
call
add
push
adc
mov
mov
addl
incl
inc
stos
mov
add
mov
cmp
movsb
mov
sbb
addb
call
xor
pop
inc
xor
pushl
mov
pushl
mov
sub
add
mov
mov
ret
mov
ret
mov
add
mov
xor
sar
test
inc
add
testb
push
add
add
add
add
add
mov
mov
sbb
jne
mov
xorb
add
cld
add
mov
cld
add
lret
add
sbb
dec
or
dec
sbb
inc
dec
mov
sbb
nop
scas
add
add
mov
add
mov
cmp
xor
gs
je
push
sarb
mov
push
cmp
add
dec
mov
in
adc
pop
inc
leave
or
gs
add
into
in
enter
push
xorl
or
jnp
test
add
mov
ltr
decl
clc
out
add
cmp
jge
jb
je
pop
push
mov
in
roll
orl
cmpl
hlt
mov
push
jns
lock
ror
test
dec
rcpps
mov
inc
test
je
mov
adcl
and
jp
rcpps
add
sbb
add
je
cmp
js
add
jns
vmread
add
adc
jge
mov
add
or
push
push
mov
add
pop
add
mov
inc
pop
xorl
add
push
clc
mov
jp
add
divl
test
je
mov
or
decb
jbe
mov
add
cmp
add
je
mov
mov
hlt
orb
jb
jmp
xor
pop
pop
pop
ret
ret
mov
xorl
pushf
xor
wrmsr
test
dec
ret
mov
pop
dec
jne
xor
inc
dec
jbe
inc
pop
add
push
dec
push
mov
and
jo
mov
sbb
mov
nop
or
jne
cmp
xor
add
cmp
js
jae
xor
jmp
mov
fdecstp
test
add
add
mov
cmp
adc
jge
mov
jl
clc
dec
jge
mov
jb
mov
mov
xor
add
mov
inc
pop
jge
cmp
mov
imul
fimuls
fists
in
jne
mov
imul
fdivrp
filds
test
inc
mov
mov
adc
rcll
mov
fiadds
mov
mov
xor
mov
xlat
into
ffreep
lret
iret
dec
inc
mov
fmull
dec
jnp
add
mov
inc
dec
lea
add
jb
add
inc
imul
cld
clc
mov
incl
or
sbb
lret
add
dec
add
enter
inc
pop
decl
add
add
mov
xor
or
pop
cltd
push
clc
mov
xor
add
cmp
hlt
cmp
or
mov
loopne
mov
cld
pushf
pop
pushf
mov
lock
adc
orb
xor
dec
mov
iret
inc
jne
mov
cmp
je
add
or
dec
inc
mov
cld
add
cmp
mov
or
mov
or
inc
xor
pushf
call
jne
mov
fcomps
add
incl
cld
add
mov
cld
inc
fidivrs
fbstp
mov
adc
fadd
add
mov
inc
mov
loopne
sbb
sbb
pushf
add
mov
cwtl
inc
inc
jne
mov
clc
add
mov
or
inc
lea
add
inc
rorl
add
shufps
jmp
xor
hlt
mov
fadds
xor
add
cmp
pmuludq
jmp
mov
or
inc
mov
jne
mov
clc
add
xor
jne
pushl
add
mov
cld
add
xor
mov
adc
sub
lea
add
jb
add
inc
add
inc
mov
or
mov
in
scas
inc
mov
in
add
mov
dec
mov
mov
cld
push
dec
add
mov
in
cmp
mov
mov
mov
xor
cmpl
xor
jmp
add
xor
add
cmp
mov
mov
adc
jmp
mov
cld
mov
push
jne
dec
or
push
inc
in
add
or
dec
cld
mov
xorl
pushf
decl
mov
mov
xor
mov
inc
mov
mov
call
add
call
push
xor
pmulhuw
test
mov
mov
xor
xor
xor
add
inc
mov
movl
sub
lock
mov
mov
or
ja
mov
cld
cli
mov
cmp
bswap
mov
mov
clc
repnz
push
xor
xor
pop
jmp
mov
xor
lea
xor
pushf
out
neg
insl
test
clc
pop
inc
or
xor
add
jne
mov
in
push
xor
add
cmp
add
mov
mov
add
mov
mov
pushf
pushf
xor
jne
mov
icebp
icebp
shl
mov
pop
jne
mov
in
jmp
add
mov
or
inc
jne
mov
ret
or
jge
sub
xor
add
mov
clc
negl
xor
cmp
repz
xor
add
mov
mov
cld
lock
test
clc
add
fdivrp
test
jnp
add
jae
sub
shll
leave
call
in
in
add
mov
in
test
mov
xor
pushf
jnp
xor
push
loopne
jne
mov
add
xor
mov
cld
jb
add
jne
mov
jge
mov
lock
xor
mov
lock
jge
xor
dec
mov
loopne
jge
add
icebp
add
dec
hlt
xor
mov
in
jge
mov
dec
pop
xor
inc
hlt
xor
mov
repnz
cmp
test
fistps
inc
mov
add
inc
test
add
add
ret
jnp
inc
inc
xor
fdivl
test
push
add
cmp
setl
mov
call
or
inc
mov
and
lock
movl
mov
clc
xor
mov
inc
mov
mov
mov
mov
hlt
inc
rorl
mov
push
mov
in
jne
mov
addl
clc
mov
add
rolw
mov
jne
incl
inc
push
test
sub
add
and
add
mov
and
adc
inc
inc
push
add
add
enter
mov
add
add
str
lea
sbb
dec
cmp
inc
push
mov
push
add
mov
inc
add
add
mov
loopne
dec
mov
cld
push
xchg
add
add
or
dec
loopne
xchg
push
add
dec
jmp
mov
sbb
inc
xor
add
push
divl
and
add
jno
incl
inc
push
push
mov
mov
push
inc
enter
push
call
pop
push
mov
mov
push
jo
incl
or
call
fmull
mov
mov
adc
dec
xor
mov
mov
mov
push
lret
movb
inc
movntps
lret
into
dec
lret
mov
mov
fdivl
mov
push
mov
sbb
dec
sarl
push
jne
mov
lea
call
sbb
add
push
mov
push
mov
test
xadd
pop
add
mov
or
push
add
add
and
call
add
mov
add
xor
add
inc
je
push
cli
dec
mov
or
inc
add
data16
subl
add
add
enter
int3
loopne
rolb
lea
data16
add
sbb
inc
lldt
xor
sub
add
ror
dec
inc
cmp
cld
or
into
out
lret
dec
mov
loop
cmp
inc
daa
loop
out
add
add
push
inc
xor
add
push
push
inc
in
push
inc
sbb
rorb
addb
ljmp
xor
mov
fmuls
add
lea
add
popl
add
push
incw
mov
add
xor
test
inc
mov
add
or
or
inc
mov
jne
mov
add
add
adc
adc
push
mov
mov
inc
mov
or
push
jne
call
inc
sarb
out
add
add
and
fs
incl
jo
leave
scas
inc
add
orb
call
shr
xchg
add
add
dec
and
push
decl
mov
mov
lea
mov
add
mov
push
shlb
inc
in
jno
push
mov
mov
je
mov
sbb
popl
add
add
adc
jmp
sub
jne
mov
in
popl
push
incl
adc
add
call
and
and
inc
test
sldt
xor
pushf
jmp
mov
or
inc
call
mov
loopne
inc
add
mov
add
add
cmp
test
sbbl
jne
call
leave
rcrb
add
add
add
inc
mov
fcom
add
lea
pushl
call
mov
fstps
push
pop
mov
addl
mov
xor
xor
pop
or
inc
push
in
or
movsl
xbegin
clc
adc
divb
or
test
jno
add
adc
xchg
test
clc
data16
orl
rolb
mov
mov
push
add
push
jge
add
jne
mov
jmp
xor
pop
cvtdq2ps
ret
mov
xor
add
push
rdpmc
out
add
mov
ret
sbb
cmp
or
or
pop
inc
add
add
invd
jge
mov
cli
xor
mov
ret
mov
sub
inc
xor
pushf
inc
mov
hlt
test
mov
xor
dec
or
jne
mov
call
inc
mov
add
add
inc
mov
addl
inc
mov
lock
jge
mov
cli
xor
add
test
add
cmp
xadd
test
mov
xor
add
pop
loopne
inc
clc
xor
add
data16
mov
hlt
xor
data16
data16
cmp
ja
psubq
ltr
add
add
data16
mov
jge
data16
data16
mov
fdivl
data16
mov
mov
pop
or
clc
mov
lock
jge
invd
pop
add
cmp
data16
mov
pop
fbstp
test
add
add
jge
data16
pop
stc
bsf
mov
in
test
mov
call
ds
add
mov
call
add
mov
jnp
mov
mov
call
mov
data16
xorl
fisttps
cld
jne
xor
mov
sti
repnz
data16
push
xor
mov
pushf
data16
mov
mov
fisttps
or
mov
hlt
mov
add
dec
or
mov
or
mov
fdivrl
xor
pop
lock
lea
icebp
jb
add
jge
mov
fsubr
pop
mov
in
rcrl
jb
add
jge
mov
in
pop
data16
cmp
mov
fdivrl
cmp
mov
mov
lock
mov
or
clc
cmp
je
push
loopne
dec
mov
icebp
mov
pcmpgtd
add
jmp
mov
lock
rorl
or
jb
add
loopne
jne
data16
mov
data16
add
data16
retw
ret
lret
enterw
pop
jne
mov
call
xor
lea
repnz
add
xor
in
xor
movl
clc
add
pop
pushf
pop
call
mov
push
pop
mov
push
inc
add
add
into
fs
mov
ret
add
add
add
ds
add
into
ret
pop
adc
add
add
jne
lea
mov
sarl
test
mov
push
xorb
mov
xor
cmp
pop
mov
je
xor
mov
cmp
pop
cmp
jne
mov
cld
push
pop
inc
stc
test
clc
test
cmp
fs
or
add
add
push
lret
add
clc
add
dec
mov
push
add
xor
cmp
je
mov
push
lea
push
cmp
mov
add
sub
add
mov
jne
mov
xor
mov
push
cmp
jne
sbbl
clc
inc
pop
sti
add
cld
xor
mov
roll
mov
inc
in
add
mov
mov
push
mov
test
xor
pushf
sub
inc
sub
mov
inc
add
or
cmp
mov
cmp
je
push
dec
str
cmp
xor
mov
add
data16
push
add
jne
movl
clc
xlat
inc
mov
push
pushf
in
add
add
add
add
add
lret
lock
clc
inc
lret
cmp
ss
pushf
test
je
xor
rorb
push
add
jb
add
dec
mov
push
push
adcl
xor
mov
scas
ret
jns
mov
dec
or
ret
lock
mov
or
mov
xorl
mov
adc
iret
inc
movl
incb
ret
adc
clc
dec
fisttps
add
ret
lea
add
xor
pushf
add
add
inc
test
xor
push
pushf
push
xor
inc
cmp
jbe
mov
or
inc
test
xor
in
hlt
push
push
push
push
mov
pushf
pushf
xor
mov
or
mov
clc
jb
add
orl
addl
mov
or
inc
dec
mov
orw
xor
mov
mov
mov
mov
inc
dec
add
add
mov
clc
or
mov
clc
popf
incl
ret
adc
mov
hlt
test
clc
or
xor
pushf
jb
add
inc
daa
inc
inc
xor
dec
pushf
add
clc
cmp
or
add
xor
or
lea
or
enter
mov
cld
dec
push
sub
add
or
add
or
add
mov
inc
mov
cmp
xbegin
clc
or
xor
adc
lea
add
inc
add
add
je
push
or
dec
std
mov
mov
mov
or
inc
clc
mov
hlt
call
push
or
push
xor
mov
xor
pushf
inc
mov
or
add
inc
mov
or
inc
push
jmp
mov
mov
jne
jmp
mov
clc
lret
push
mov
mov
sub
decl
or
pop
ds
pushl
mov
mov
jmp
leave
jne
call
in
dec
add
add
inc
cmp
je
mov
or
add
or
adc
enter
rolb
mov
or
rorb
jmp
push
mov
cld
inc
inc
orl
push
push
mov
add
test
mov
adc
mov
mov
lock
fcoms
mov
push
enter
cmp
add
mov
call
cmp
jmp
push
call
mov
cld
or
call
add
xor
jne
cmp
jne
mov
or
pop
into
je
mov
or
mov
mov
mov
or
sar
xor
xor
pop
adc
ret
cld
inc
mov
cld
mov
push
pop
or
xorps
test
add
adc
addl
jmp
ror
inc
leave
xor
and
add
xor
xorl
mov
pcmpgtw
add
leave
mov
push
dec
mov
lea
xor
sysret
dec
rorb
pushw
jne
ud0
mov
lods
add
data16
iret
and
cli
inc
cmp
add
inc
pop
lea
mov
add
mov
mov
add
inc
data16
clc
int3
cmp
je
push
pop
xchg
data16
lea
jb
jmp
call
clc
xchg
mov
or
lea
push
inc
jge
mov
fdivs
incl
xor
xchg
ret
xor
cmp
data16
rolb
add
dec
xchg
push
jmp
push
add
add
mov
clc
dec
xchg
cmp
jne
xor
jmp
add
jne
call
clc
xchg
sti
add
add
xor
pop
mov
jmp
mov
cmp
cmp
lea
jle
jae
mov
lcall
inc
push
lea
mov
int3
push
xchg
add
add
inc
add
cld
mov
aam
xchg
mov
testb
mov
hlt
add
mov
decl
incl
mov
call
je
js
lock
mov
mov
sbb
clc
add
mov
rorb
dec
xchg
mov
in
jge
cmp
clc
pop
fistl
clc
add
mov
mov
mov
adc
add
adc
pop
sbbl
ret
cmp
mov
cld
add
add
add
sub
or
add
mov
push
push
clc
addl
out
add
jmp
cmp
jmp
je
mov
inc
add
add
add
pop
pop
push
inc
in
pop
in
cmp
xor
add
push
mov
in
dec
push
test
add
leave
inc
test
add
add
dec
push
mov
hlt
push
dec
leave
mov
clc
cmovge
mov
clc
popl
push
add
push
xor
cld
add
add
pushfw
add
add
mov
cmp
jne
xor
jmp
add
mov
or
mov
mov
mov
or
shl
icebp
addb
or
or
stc
shll
xor
inc
xchg
add
add
mov
test
sub
jmp
mov
lock
lea
mov
or
leave
add
dec
dec
test
paddb
add
dec
mov
mov
or
dec
xor
mov
adc
mov
call
mov
push
clc
or
push
lret
mov
mov
xor
cmp
lsl
call
or
dec
or
inc
xor
in
add
inc
pop
xor
testl
dec
adc
inc
xor
sub
test
clc
inc
add
hlt
leave
test
clc
inc
push
aaa
inc
pop
rorl
orb
mov
push
clc
ret
xor
xor
js
dec
push
mov
lock
lret
jne
mov
enter
lret
into
out
dec
dec
jmp
xor
xor
mov
sub
add
or
dec
mov
xor
jb
add
dec
pop
mov
cld
mov
call
stc
add
pop
leave
add
in
mov
xor
movl
mov
xor
pushf
inc
cmp
pushf
xchg
mov
ljmp
push
push
push
push
push
xor
mov
add
mov
clc
lret
cmp
pushf
mov
clc
cld
jne
xor
xor
or
add
hlt
dec
dec
je
xor
xor
add
add
rol
mov
in
inc
enter
icebp
mov
clc
lock
enter
lret
inc
jne
mov
cld
dec
enter
pushf
sti
xor
mov
mov
xor
xor
mov
mov
push
shr
in
cmp
add
pushf
mov
call
xor
pushf
popa
push
dec
inc
mov
clc
pushf
into
mov
in
call
pop
or
or
or
push
inc
cmpxchg8b
leave
loopne
test
mov
rcll
xor
add
and
mov
leave
sti
inc
decl
mov
clc
dec
iret
xor
jb
add
inc
mov
xabort
loopne
ljmp
mov
clc
lock
dec
mov
loopne
incl
mov
hlt
jne
mov
in
dec
or
jb
add
xor
add
mov
subl
mov
xor
pushf
mov
clc
add
mov
adc
inc
mov
mov
loopne
inc
mov
mov
nop
roll
mov
mov
dec
push
mov
xor
mov
mov
in
into
inc
iret
xor
add
mov
dec
mov
mov
mov
mov
xor
mov
clc
enter
mov
lock
mov
cmp
rol
enter
inc
adc
inc
clc
xor
add
mov
roll
add
push
mov
fsubr
inc
mov
adc
add
inc
test
xor
fmuls
test
cld
or
dec
ret
push
inc
dec
mov
mov
push
jne
mov
call
mov
mov
clc
mov
xor
adcl
inc
push
mov
clc
incl
mov
clc
rolb
je
mov
jne
lea
mulb
decl
fadds
inc
jmp
mov
roll
mov
lock
dec
ret
mov
mov
mov
fadd
enter
inc
cld
mov
xor
add
sub
xor
pushf
add
or
jne
clc
mov
call
jmp
mov
xor
xor
enter
clc
inc
inc
pushl
in
pushf
jne
mov
clc
dec
out
dec
mov
lea
cmp
lea
mov
cld
iret
mov
jmp
test
je
mov
fdivr
movl
lock
inc
lock
lret
imul
testl
dec
mov
fmuls
fmuls
enter
inc
dec
xor
add
mov
inc
inc
push
mov
lock
mov
fadds
rol
test
dec
push
decl
push
mov
add
cmp
add
loopne
add
dec
xor
pushf
mov
cld
iret
test
mov
in
dec
add
add
dec
mov
fmull
add
testl
test
add
add
mov
cld
mov
hlt
mov
add
cmp
add
mov
mov
call
dec
add
cmp
cld
iret
mov
dec
push
lea
mov
call
iret
inc
mov
or
or
xor
cmp
je
mov
mov
xor
mov
mov
xor
bswap
rorb
add
mov
xor
or
mov
xor
bswap
rorb
add
add
xor
mov
add
dec
dec
xor
mov
lock
iret
rorl
inc
mov
iret
add
xor
mov
or
push
shll
cmp
fmull
test
dec
dec
xor
or
dec
enter
add
mov
xor
or
mov
mov
xor
mov
cmp
jne
lea
sti
or
cmp
je
mov
ret
or
call
add
mov
cld
mov
xor
add
dec
jnp
mov
xor
add
mov
mov
xor
rorl
jb
add
ja
sbb
cwtl
enter
inc
decl
fadds
rorl
inc
xor
mov
or
inc
rcll
mov
xor
jb
add
shll
mov
xor
add
repz
inc
mov
xor
inc
mov
mov
jne
mov
test
inc
mov
mov
lea
xor
add
mov
lods
dec
inc
mov
lret
mov
adc
std
ret
ljmp
hlt
push
xor
enter
inc
add
cld
test
pushf
inc
xor
pop
push
incl
in
mov
push
inc
cmpsl
mov
or
add
add
add
icebp
je
mov
cld
rol
ret
add
lea
cwtl
jne
clc
or
incl
cmp
incl
lcall
or
push
mov
test
inc
mov
imul
dec
mov
push
dec
push
xor
add
push
incl
lods
inc
inc
mov
xchg
or
call
adc
orb
inc
inc
add
mov
call
push
push
dec
jo
push
dec
mov
cmp
cmovne
call
mov
lcall
leave
inc
adc
jne
call
dec
inc
mov
add
mov
push
or
dec
xorl
cmp
mov
pop
adc
ret
mov
clc
mov
pop
mov
mov
push
push
lock
mov
adc
or
push
ret
xor
mov
mov
cmpb
add
cmp
mov
xchg
dec
add
mov
add
dec
into
mov
mov
das
add
add
mov
and
mov
and
xor
lea
xor
add
xor
orl
xor
pushf
mov
or
jne
call
adc
mov
adc
movl
pop
dec
and
call
in
call
adc
pushf
pop
mov
and
push
add
mov
test
decl
and
cli
and
or
sbb
adc
jmp
mov
adc
dec
adc
mov
and
xor
add
pcmpeqb
jmp
decl
je
mov
pop
adc
pushf
mov
jge
decl
