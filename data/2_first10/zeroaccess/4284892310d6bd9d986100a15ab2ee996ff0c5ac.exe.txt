push
mov
sub
cmpl
mov
movl
not
jmp
mov
jae
push
call
sub
sub
mov
xor
add
sub
and
or
mov
mov
mov
orl
sub
push
mov
mov
mov
mov
sbb
movzwl
add
mov
mov
sbbl
orl
orl
cmpl
not
mov
jmp
mov
mov
jle
push
pushl
push
push
push
pushl
push
call
andl
subl
and
orl
and
adc
adc
mov
mov
mov
mov
sbbl
sub
mov
mov
sbb
mov
orl
orl
lea
sbb
mov
cmpl
movzwl
mov
notl
mov
jmp
mov
mov
jae
push
push
pushl
call
xor
or
adc
sbb
mov
adc
mov
addl
add
mov
jmp
hlt
loop
sbb
and
mov
lahf
fs
push
push
push
sub
push
push
stos
xor
inc
mov
dec
popf
mov
fadd
test
clc
es
lds
push
mov
testl
movsl
dec
sbb
xor
pop
cmp
dec
rcl
inc
inc
push
jl
pop
mov
dec
dec
dec
rorb
or
mov
daa
bound
scas
test
mov
pop
push
inc
fdivs
imul
mov
jecxz
add
cmpsb
inc
fucomp
loopne
mov
hlt
push
rcll
out
jmp
rol
lret
mov
xor
push
and
inc
fiaddl
or
push
fprem
xor
repnz
inc
imul
fnstenv
popf
mov
xchg
dec
movsl
adc
jg
push
testl
jp
xor
mov
xchg
mov
push
lods
js
outsb
jg
jne
js
into
out
mov
imul
clc
mull
lods
mov
pop
and
mov
jg
idiv
imul
mov
addr16
push
add
fwait
push
or
andl
imul
jmp
pop
adc
shlb
arpl
sub
into
icebp
insb
bound
into
fidivs
out
std
or
xchg
lret
pushf
sbb
mov
addl
cmpsb
dec
sub
daa
pop
loopne
imul
rorb
ljmp
dec
and
aas
jne
jg
shrl
repz
mov
adc
adc
jecxz
inc
adc
inc
cmp
jnp
stc
shlb
fcoml
inc
fmull
loope
pop
pusha
sub
jle
lret
xor
xor
sbb
add
xchg
add
stos
stos
lahf
push
pop
js
pushf
add
fdivr
push
hlt
xor
mov
cmc
cwtl
popf
outsb
pop
outsl
xchg
mov
fnstsw
sub
call
ret
incl
loop
out
ret
insb
imul
jp
push
ljmp
sbb
or
dec
pop
pusha
das
into
popf
jge
add
jnp
in
jmp
add
movsl
imul
scas
bound
push
repnz
ja
stos
leave
xlat
or
fstpt
cli
pop
aam
lods
pop
in
inc
add
pop
mov
jbe
push
call
xchg
imul
pop
dec
push
je
mov
ficoml
fldenv
xchg
push
arpl
xchg
ja
xor
lcall
sahf
xor
sahf
jp
pop
out
mov
xchg
mov
icebp
call
push
pop
test
xor
pop
popl
jns
fs
nop/reserved
imul
int
jns
out
ficoms
enter
xlat
popl
shlb
dec
stos
sub
sbb
lahf
inc
cmp
divb
fcmove
push
inc
in
cld
jo
cmpl
cli
lods
jb
nop
pop
jo
mov
dec
stos
push
mov
xchg
xchg
xor
xor
lods
out
xor
mov
push
xchg
arpl
fimull
adc
mov
add
xchg
xchg
fbstp
push
xchg
imul
pop
aas
icebp
xor
fcompl
add
loope
jnp
insb
std
mov
outsl
xor
pop
cmp
or
xchg
mov
jg
mov
lods
enter
inc
pop
pop
xchg
push
pop
lds
jp
mov
mov
stos
aad
subb
mov
adc
cmp
aaa
cwtl
mov
jno
mov
not
adc
sbb
leave
xor
sub
stos
mov
in
adc
push
pop
sub
push
dec
jp
xchg
sbb
repz
add
sti
mov
scas
repnz
lahf
adc
popf
fdivp
adc
mov
test
lahf
mov
push
add
or
cmp
jae
aam
xchg
sbb
pop
add
inc
xchg
and
push
adc
int3
icebp
test
pushf
and
mov
addr16
out
out
cmp
xchg
and
xlat
punpcklbw
jae
cwtl
mov
cltd
mov
push
mov
push
add
mov
push
shll
lret
fisubs
sbb
jl
lock
les
dec
mov
movsl
int
mov
aas
mov
jecxz
scas
lods
fcomps
insl
sub
in
std
sbb
fdivrl
xor
mov
dec
push
pop
aaa
mov
cmp
add
sarb
and
cmp
xor
shrb
xlat
stos
xlat
adc
jp
dec
xchg
push
sbb
rolb
ja
pop
or
into
in
or
pop
sub
pop
dec
push
add
lods
test
das
mov
inc
dec
dec
inc
mov
mov
mov
in
xor
xchg
sbb
push
pop
xchg
dec
inc
sub
stc
test
mov
dec
das
push
mov
cmpsl
xchg
cmp
dec
push
jmp
imul
lahf
mov
out
jnp
sub
rclb
out
cmpsl
or
enter
aas
mov
insb
sbb
mov
fstpl
xchg
xor
pusha
cmp
iret
cmp
mov
push
push
or
stos
rolb
xchg
push
bound
insl
xor
mov
mov
push
out
fisubrs
cmp
xchg
outsl
mov
pop
les
or
sub
lret
mov
push
movsl
cli
xchg
add
mov
push
cmc
or
popa
jle
jle
js
dec
loopne,pn
shl
ret
adc
flds
sahf
arpl
xchg
orl
fistps
in
push
rorb
ljmp
adc
cwtl
jge
sub
call
mov
sub
add
js
lret
jle
xor
aas
mov
push
dec
sbb
or
icebp
insb
nop
and
mov
pop
inc
sbb
jne
inc
pusha
outsb
jecxz
pop
lock
mov
mov
subb
sbb
ret
les
cmpb
and
push
shlb
push
or
outsb
jmp
xchg
sub
frstor
sbb
cmp
dec
jnp
mov
adc
add
push
mov
push
or
dec
push
xchg
jbe
adc
add
mov
outsl
les
xchg
scas
sbb
fistps
xchg
call
cmp
adc
shll
push
or
icebp
push
in
mov
mov
lret
call
scas
mov
mov
loopne
xchg
mov
add
jmp
fstps
pushf
into
in
sbb
sbb
add
aaa
mov
mov
popa
ljmp
outsb
or
xlat
mov
dec
sbb
sbb
push
pop
int3
outsb
loop
lods
ret
pop
mov
out
jle
roll
mov
es
lock
sbb
cmp
add
aam
dec
xchg
pop
bound
cmp
in
xchg
adcb
fistpl
sub
fdivrp
jge
decl
mov
or
shll
stc
insl
mov
mov
notb
or
test
lock
add
pop
cld
push
outsb
jo
add
push
pushf
or
cmp
andl
inc
leave
out
lds
out
or
dec
inc
cmp
mov
into
gs
out
push
and
scas
negl
rclb
f2xm1
stc
mov
aad
pop
jmp
jle
fbld
inc
push
leave
sub
cmp
je
xlat
scas
orl
enter
shr
rorb
jl
cwtl
sub
ret
pop
pop
test
mov
les
scas
fucompp
stc
xor
inc
inc
shrb
fistpl
aas
je
adc
add
addr16
mov
mov
es
fistl
cmp
pop
jne
sbb
mov
call
mov
mov
xor
push
fs
dec
out
pusha
fldcw
test
mov
push
jb
jg
push
movsb
cmp
fstpt
es
push
mov
and
ja
dec
in
dec
int
push
or
inc
xchg
clc
add
inc
sbb
push
imul
call
mov
mov
mov
adc
mov
add
xor
push
xchg
or
pop
sbb
add
sbb
xchg
rolb
xchg
iret
hlt
lret
orb
dec
jno
jne
jbe
fmull
dec
rep
aad
shll
nop
add
push
outsl
pop
movq
and
popa
es
xchg
fldln2
movl
and
mov
push
cmp
fildl
adc
xchg
cmp
cs
addr16
aas
sub
daa
inc
mov
out
add
insl
push
repz
les
lahf
aas
inc
aad
xor
xchg
pop
scas
mov
out
adc
adc
and
in
clc
and
push
mov
adcl
mov
cmp
call
mov
lahf
subl
daa
fisubl
inc
scas
push
loope
push
sbb
push
popa
ss
mov
int3
leave
and
sub
iret
movsl
imul
jo
push
aam
cmc
cld
mov
mov
jge
inc
push
shl
sub
mov
shll
out
mov
dec
pop
xchg
insb
xor
stos
sbb
cmc
xor
aad
jg
lahf
out
stos
ds
add
dec
jnp
fstps
xchg
mov
rcrl
xchg
cmp
fs
test
and
fwait
and
fs
jae
push
shrb
dec
push
loop
sar
lods
scas
sbb
cmp
dec
adc
insb
cmp
aam
jo
fcmovu
push
mov
sub
push
mov
stc
aaa
outsl
sub
xchg
sub
add
dec
or
and
rcrb
pop
dec
in
dec
rcll
dec
sub
repz
popa
shll
imul
imul
inc
ss
sub
jno
push
jo
sbb
or
test
cmp
and
or
cmc
int
lahf
xchg
popf
mov
inc
popf
mov
enter
mov
mov
into
fdivrs
xorb
adcl
fwait
and
sbb
imul
xchg
or
or
adc
loop
jbe
sbb
sbb
xchg
cmp
cmpsl
ja
fwait
leave
pop
loope
in
xor
das
mov
scas
pop
mov
shlb
push
add
shlb
inc
outsl
mov
inc
mov
dec
pop
pop
mov
push
sbb
sub
mov
mov
mov
cltd
push
lods
xor
lahf
loope,pt
incb
mov
sub
xchg
sub
jmp
push
imul
pop
xchg
cli
mov
mov
or
ror
test
test
jbe
mov
cltd
fwait
and
mov
jno
call
in
lea
shrl
sahf
lcall
in
xchg
mov
pushf
lahf
js
sub
cmp
data16
sbb
pop
add
sarl
cmpsb
jo
nop
jmp
loop
inc
jnp
dec
cld
loop
xchg
jno
add
jge
jb
dec
sti
mov
mov
pusha
adc
cmp
ss
mov
iret
push
repz
jne
into
loopne
lock
xchg
jne
shrl
ljmp
jle
stc
aaa
stos
mov
mov
loop
cwtl
mov
pop
lret
cmp
orl
and
cwtl
pop
mov
xlat
mov
addb
jae
inc
ja
cltd
xchg
sbb
mov
test
push
pop
shlb
sbb
std
pop
ljmp
xchg
pop
jle
cmp
rclb
hlt
shlb
scas
cmpsb
cwtl
test
fmuls
pop
popf
loop
pop
mov
aad
loope
or
insb
stos
mov
mov
enter
mov
stc
or
mov
ret
cmp
ficomps
add
insb
xor
outsl
scas
int
add
movsb
pop
insb
mov
les
mov
popa
jl
jo
jnp
add
popa
arpl
push
ret
arpl
addr16
cs
cmp
aad
and
fistl
xchg
jge
movsb
xchg
cmpb
cmp
sub
dec
ss
fld
inc
fldcw
push
push
jg
pop
bound
inc
or
cld
into
sub
insb
push
lcall
cmp
xchg
xchg
lahf
enter
clc
pop
addr16
push
lds
imul
leave
les
push
int3
or
fnsave
test
ret
pusha
xchg
ja
sub
jmp
inc
xchg
jns
xchg
mov
mov
sub
jb
lahf
lcall
xchg
addr16
xor
pop
adc
push
adc
and
push
dec
aaa
sahf
mov
lcall
fs
pop
scas
in
jbe
inc
in
cmp
stos
add
std
add
cld
les
sbb
fyl2xp1
sbb
xor
idivl
leave
add
stos
mov
mov
es
ret
gs
dec
dec
mov
xchg
cmp
lds
adc
adc
cli
fldenv
cmp
jae
cltd
movsb
sbb
pop
dec
push
dec
test
cs
xchg
in
mov
mov
or
jl
fs
push
or
cmp
cmpsb
mov
mov
dec
sbb
mov
adc
scas
jle
dec
mov
aam
adc
jo
add
inc
adcl
orb
push
insl
mulb
dec
adc
add
add
cmp
faddp
iret
sbb
pop
xchg
jge
push
in
rcrb
das
push
xchg
push
pop
cwtl
cmp
movsb
jl
or
adc
add
push
pop
dec
lods
jl
pop
cs
or
in
ljmp
jae
cmp
pop
insl
jne
jecxz
sarl
adc
test
cmp
dec
out
test
mov
insb
xchg
loopne
push
fnsave
test
incl
aaa
lcall
xlat
adc
adc
mov
addr16
pop
arpl
cli
or
jp
mov
mov
cltd
xchg
mov
divl
inc
sub
stos
jb
addr16
xor
mulb
and
inc
dec
mov
and
cmp
popf
jp
repnz
addr16
mov
cltd
mov
pusha
loop
add
sub
rclb
jo
ret
lea
pop
pushf
ficompl
sbbl
outsb
add
imul
fstpt
mov
push
inc
xchg
hlt
push
div
shrl
cwtl
mov
mov
jnp
outsl
sbb
jbe
jno
xchg
aas
add
or
filds
sub
loop
mov
insb
xor
shr
xchg
xlat
pushf
addr16
bound
fistpl
dec
stos
jns
pop
mov
add
pop
lds
cltd
push
js
sub
fwait
jo
or
add
xchg
adc
lret
xorb
ja
cltd
in
xorl
js
push
pop
ja
lods
adc
loope
sbb
loope
rcrl
imull
mov
pop
dec
sar
xchg
mov
movsb
and
mov
fmul
xor
pop
push
adc
mov
fistpll
xchg
icebp
outsl
cmp
testb
and
sbb
push
sub
mov
clc
add
sbb
out
lods
push
icebp
call
shll
mov
ja
shrd
sub
fistps
sbb
stos
dec
into
and
push
or
fisttpl
xchg
inc
call
cltd
sbb
cmpsl
testb
in
scas
inc
jmp
les
test
pop
das
mov
pop
mov
push
out
incl
mov
mov
cmp
push
icebp
insb
loop
les
jle
or
rolb
inc
jnp
das
leave
add
push
cmp
in
insb
cwtl
cmp
jmp
xor
mov
movsl
decb
mov
outsl
mov
add
pop
xor
dec
and
test
dec
mov
mov
mov
mov
mov
xor
mov
jae
pop
daa
in
sub
fimull
sub
cmp
mov
xchg
imul
ret
and
sub
sbb
dec
adc
mov
aas
iret
pop
arpl
xlat
andl
jle
lock
dec
in
cltd
adc
ljmp
out
ljmp
insb
stos
rcrb
sub
pop
jg
push
test
lahf
lods
push
cmc
pop
in
stc
filds
fcompl
adc
scas
mov
nop
add
lret
xchg
xor
jae
jb
jl
xchg
divb
rol
aas
sbb
cmp
push
rolb
sbb
aas
lret
faddl
lods
mov
mov
pushf
aas
mov
ret
push
cwtl
repnz
xor
test
xorb
cld
shll
test
shll
or
dec
pop
inc
xor
pop
jge
sub
xchg
popf
fildll
movsb
xchg
jns
fidivrs
in
and
ret
cmpsl
dec
pop
mov
in
out
dec
js
std
xchg
neg
mov
pusha
mul
pop
xor
push
subb
mov
sub
push
lret
pop
inc
cmp
push
xchg
push
xlat
stos
test
add
pop
rclb
cwtl
mov
lea
imul
pop
and
sub
sub
sbb
mov
mov
and
frstpm(287
add
cmp
mov
push
es
lods
je
mov
gs
push
sub
imul
mov
cs
mov
and
push
mov
aaa
sarb
cli
dec
push
mov
fmul
jl
icebp
js
lock
xchg
clc
and
aaa
adc
pop
lods
test
lods
cmp
into
in
enter
jae
cmpsl
push
and
cli
enterw
and
sbb
xor
mov
outsl
dec
mov
add
andl
mov
inc
xlat
adc
repnz
xchg
mov
clc
or
cmp
push
dec
mov
adc
mov
mov
add
xchg
jbe
jmp
and
or
fadds
std
stc
movsb
stos
cmpsb
pop
dec
daa
mov
testb
aam
hlt
add
mov
mov
lahf
mov
pop
or
push
adc
pusha
ds
sbb
push
mov
icebp
loopne
std
xor
cmp
push
imul
jno
mov
fdivs
inc
cs
test
sbb
popa
jg
jae
xor
add
cwtl
and
mov
mov
add
outsl
popl
add
push
cs
aaa
push
out
shl
lods
sub
inc
sti
mov
pop
and
clc
roll
sub
repnz
cmp
sub
stc
push
lock
loopne
jecxz
insl
lret
fidivl
aad
lcall
out
pop
stc
repnz
or
fdivrs
sub
jo
gs
rorl
leave
pop
mov
ret
jmp
test
xor
into
sbb
xchg
pop
add
adc
cs
push
mov
add
jp
cmp
cmp
mov
fbstp
pop
movsb
out
imul
and
and
jo
ljmp
dec
pushf
es
sub
cmp
and
cli
es
rcrl
popa
movsb
xchg
js
lea
pop
dec
sbb
shll
pop
sbb
daa
and
loope
push
jbe
ja
aas
jg
xorb
sub
sbb
ret
insb
mov
jecxz
out
mov
shlb
addr16
std
push
pop
mov
mov
mov
add
ja
inc
dec
jle
adc
jmp
jle
fidivl
int
dec
mov
neg
sti
mov
int3
lock
inc
mul
jnp
fcomp
sub
ja
in
loopne
sbb
lods
in
cmp
xchg
mov
adc
std
daa
adc
push
mov
cmp
imul
sbb
stos
sahf
stos
jo
jge
push
cmc
faddl
cwtl
cmp
repnz
xor
in
out
sbb
mov
adc
mov
dec
jbe
and
dec
mov
aaa
roll
gs
rcll
dec
jle
or
jp
orl
and
aad
xchg
xor
pop
cmp
push
div
xchg
cmpsl
push
sbb
movsl
shll
mov
push
aas
nop
mov
enter
insl
mov
jge
sbb
scas
shl
or
out
cmc
in
cltd
je
js
cmp
loope
stos
mov
push
lahf
mov
int
std
dec
or
aam
pop
add
pop
scas
ljmp
notb
fstpl
imul
cmpsb
push
jns
inc
mov
mov
aaa
mov
mov
pop
pop
mov
lods
repz
sbb
mov
scas
cmpsb
mov
xchg
cs
cli
out
jbe
adc
cmpsl
lock
ljmp
ds
or
std
test
ret
jne
mov
jbe
out
ret
cwtl
mov
lret
and
movsb
mov
aas
cltd
subb
out
out
sahf
bound
sbb
mov
sub
inc
lods
rcll
cmp
pop
adc
fwait
ss
add
adc
testb
mov
push
xor
shll
scas
adc
sar
inc
into
sub
jo
loopne
pop
xor
and
xor
stc
mov
rcll
xor
mov
ja
ja
in
loopne
cmpl
sub
pop
inc
mov
dec
pop
jae
ret
lahf
push
inc
jae
iret
arpl
fbld
and
and
cli
mov
test
mov
fst
out
jns
mov
cvttps2pi
nop
pop
test
loopne
lods
les
mov
and
xchg
out
std
mov
mov
incl
scas
jne,pt
rcll
sbbb
rcr
iret
gs
aam
ss
adc
hlt
xchg
stos
cmpb
inc
pop
js
iret
push
jno
mov
jg
push
xchg
sub
push
sarl
nop
cli
jae
add
mov
pop
fstp
xchg
pop
xcrypt-ctr
cmpsl
sbb
xchg
adc
sbb
rolb
ds
iret
mov
jp
jge
lcall
jp
cmp
les
test
arpl
dec
adc
and
adc
ss
in
shll
sahf
cmp
mov
sbb
or
mov
sub
lods
push
dec
cmp
incb
aam
std
loop
push
sbb
pusha
inc
push
pop
jbe
gs
push
sahf
mov
mov
dec
testl
and
nop
andb
pusha
pop
fildl
mov
mov
int
or
sahf
xor
pop
insl
stos
pushf
bnd
addb
mov
push
mov
loop
sbb
mov
cli
mov
push
ret
mov
mov
cli
je
pop
fimuls
rclb
add
or
dec
jmp
xlat
mov
and
vmread
stos
into
adc
clc
sub
dec
sub
das
int3
mov
xchg
or
and
call
push
int
mov
dec
jmp
mov
cmp
sarl
cltd
mov
or
pextrw
cmp
lcall
sbb
ds
enter
jle
fildll
xchg
jne
push
lcall
aad
xor
and
jmp
xor
jmp
cmp
lods
or
jns
out
mov
or
fcompl
aaa
mov
push
adc
shl
sarl
jl
lcall
lds
push
int
sahf
pop
add
adc
sub
push
stos
adc
fwait
and
fscale
rcr
or
or
inc
enter
dec
cltd
cwtl
lret
fcomps
xor
hlt
les
xchg
loop
push
test
lahf
arpl
mov
pop
out
xchg
jmp
in
xchg
dec
add
dec
scas
popf
xor
jbe
dec
mov
cwtl
xchg
xchg
sti
xchg
jno
test
cmp
dec
mov
insl
out
jle
rolb
outsb
jnp
out
mov
gs
mov
out
dec
adc
xchg
xchg
out
sbbl
out
cmp
cli
arpl
fbstp
push
jo
sub
cmp
and
dec
arpl
mov
fistl
mov
sub
arpl
enter
adc
test
outsb
mov
addr16
cltd
mov
andb
stc
inc
jl
pop
mov
das
movsb
shlb
jo
ja
rcrl
cmp
adc
cmpsb
popa
out
xor
pop
cwtl
inc
mov
fstpl
sti
jg
mov
out
sub
sbb
addr16
mov
push
and
jge
add
sub
lsl
inc
imul
ss
outsl
mov
push
jnp
dec
and
lret
mov
pop
outsb
les
aaa
mov
cmp
lea
mov
inc
outsb
push
das
mov
les
cltd
jo
push
sbb
inc
and
inc
pusha
sbb
shll
jo
lcall
jmp
push
mov
inc
loop
pop
push
imul
aaa
dec
in
les
movl
mov
jmp
loope
sbb
out
ss
jo
leave
lea
leave
and
leave
push
xor
or
pop
cvtpi2ps
out
lds
dec
jle
jnp
repz
ds
mov
movsl
jl
or
test
cmp
cmpsb
fstpl
ficomps
ret
shrb
icebp
inc
repz
inc
cwtl
mov
or
jne
fisttpl
push
sti
xchg
movsw
int
inc
sahf
pop
cmc
insl
test
arpl
jge
mov
rep
adc
fs
mov
mov
mov
dec
xor
in
push
mov
add
mov
cmp
lds
arpl
and
mov
lcall
outsl
aad
test
pop
aam
inc
inc
in
push
popa
out
flds
cmc
push
cltd
ljmp
cmp
stc
push
xor
inc
inc
sub
cld
add
out
mov
cmp
inc
push
leave
cmpsb
mov
in
jns
pop
dec
js
pop
cmc
cmp
push
mov
push
dec
mov
jae
mov
push
or
push
or
shrb
das
repnz
orb
je
sahf
dec
push
inc
daa
sbb
out
jecxz
inc
fs
inc
push
in
test
lcall
jg
and
inc
movsl
jns
into
mov
pop
adc
aam
mov
add
enter
lret
dec
jne
lret
jns
scas
jo
bound
inc
xchg
scas
sbb
popf
pop
scas
push
sahf
sub
jae
pusha
ret
and
mov
rcl
xchg
push
jns
or
cmp
clc
sub
mov
push
stos
dec
push
ja
arpl
cli
add
jge
aad
loopne
dec
gs
pop
pop
or
fisttps
push
outsb
jmp
jae
jns
mov
popf
pop
scas
movb
adc
cmp
push
ljmp
jmp
cmp
cmc
push
lods
call
scas
lods
pop
dec
mov
imul
test
imul
pop
shll
jmp
fists
jmp
push
adc
into
sbb
or
cmp
cwtl
gs
mov
or
lret
sbb
adc
push
lcall
mov
sub
mov
repz
xchg
mov
or
out
fs
mov
mov
pop
lcall
arpl
xchg
fs
scas
and
lahf
lahf
dec
adcl
bound
pop
xorb
gs
divl
mov
lahf
loopne
and
inc
jle
sar
gs
jg
cli
jo
mov
xor
aas
and
aaa
add
addr16
scas
fists
aaa
pop
xorb
movsb
pop
fsubrl
ja
or
and
cmp
inc
movsl
add
hlt
xor
nop
out
orw
sbbb
out
scas
inc
inc
sahf
cmpsb
jp
xchg
je
into
xchg
or
xor
cmpsb
mov
fmul
and
inc
push
jg
cmp
lahf
add
fbld
adc
inc
and
rorb
cmpl
movl
movl
mov
jmp
movl
movl
jge
push
push
push
call
or
sbbl
mov
add
or
orl
sbb
mov
xor
or
sub
and
add
mov
cmpl
movl
movzbl
movzbl
jmp
mov
jge
pushl
push
push
pushl
pushl
call
mov
mov
sub
not
adc
incl
sbb
xor
mov
mov
add
mov
adc
shrd
adcl
shr
mov
mov
negl
xor
xor
or
mov
sbbl
movl
xor
movl
cmpl
movl
mov
jmp
mov
movl
jl
push
call
adcl
addl
orl
xor
movl
movl
movl
andl
movl
incl
movl
movl
cmpl
movl
movl
mov
jmp
movl
jge
pushl
push
push
call
sbbl
subl
andl
sbbl
decl
movl
movl
cmpl
movl
movl
movl
jmp
mov
je
push
pushl
call
subl
add
addl
sub
andl
adcl
add
cmpl
movl
movl
jmp
movl
jbe
pushl
call
adcl
adcl
xor
sbbl
subl
xor
xorl
movl
movl
not
movl
cmpl
movl
movl
movl
movl
jmp
movl
jle
pushl
pushl
pushl
pushl
pushl
call
orl
sub
xorl
andl
decl
addl
sub
movl
movl
or
movl
movl
mov
and
mov
movl
jmp
out
adc
adc
sbb
mov
subb
xlat
push
push
adc
aaa
movsb
add
dec
pop
js
xor
push
cld
mov
sbb
mov
push
sahf
stc
jecxz
aad
out
or
xchg
pop
push
test
cli
ljmp
push
testb
inc
mov
mov
js
push
mov
push
movsl
xchg
ret
insb
pop
mov
sbb
jo
push
cmpsl
add
in
lock
imul
mov
repz
inc
jnp,pn
data16
adc
xchg
jge
hlt
xchg
push
out
sub
cli
and
add
inc
mov
jno
aam
ret
mov
jne
xor
or
gs
mov
cmp
and
xchg
cltd
mov
iret
int3
loopne
mov
sub
push
push
dec
mov
mov
std
stos
adc
rcrl
sbbb
repnz
sbbb
loopne
lods
xchg
add
pop
int3
dec
scas
aas
mov
dec
mov
not
push
push
popf
sbb
scas
adc
jno
xor
inc
inc
push
mov
jns
push
aas
test
cmp
xchg
push
subl
and
jmp
sti
in
rcrl
mov
mov
and
sbb
enter
xchg
frstor
rcr
pop
cwtl
inc
push
sub
in
or
dec
inc
outsl
ror
rcrb
imul
int
rcll
fwait
shrb
jno
mov
inc
std
jle
inc
loope
fldcw
pop
jmp
mov
mov
cmp
test
xchg
in
push
xor
cmp
add
fstpt
aad
push
ljmp
jae
adc
mov
lods
idivb
mov
push
clc
sub
imul
sbb
sti
add
dec
leave
or
sub
pop
aad
pop
out
xor
jb
aam
aam
jns
pop
or
mov
xchg
mov
imul
test
jns
addr16
dec
outsb
in
push
movlps
aas
mov
dec
xorb
pop
jle
and
lea
aam
adc
xor
rclb
sbb
mov
mov
dec
je
push
push
iret
fdivl
enter
out
leave
mov
hlt
mov
adc
jmp
aam
popa
shrl
push
lret
incl
cli
popa
std
leave
sbb
mov
push
xchg
mov
mov
cmc
xlat
lods
cmp
aam
inc
mov
loope
shlb
mov
nop
mov
ja
pushf
cmpsb
push
mov
lcall
inc
push
orl
mov
cmp
insl
out
aam
cmp
pop
mov
fstl
call
fcompl
sub
iret
inc
jae
in
mov
xor
mov
adc
cld
je
and
pop
adc
call
inc
out
mov
addl
in
jle
jmp
xlat
or
bound
les
xchg
jae
mov
push
fstpt
loopne
jbe
packsswb
movsb
adc
jns
out
mov
ss
add
sub
sarl
je
movsl
rcll
test
repz
call
pop
sti
in
or
fmuls
daa
repnz
and
cmpsl
loop
lahf
das
inc
mov
push
jle
pop
cld
cmp
push
add
cmpsl
mov
hlt
mov
mov
jo
es
inc
fwait
adcb
lods
sub
lds
sbb
jne
jb
cmp
lahf
jae
movsb
cmp
movsl
ret
jno
in
leave
or
push
lahf
add
cltd
cmpsb
xchg
push
andb
cli
sbb
out
xlat
dec
and
xchg
pop
inc
pushf
and
scas
inc
sub
and
pusha
adc
clc
mov
imul
aam
fldl
das
jne
inc
lods
add
scas
and
jmp
lret
cs
lds
cmp
mov
outsb
in
push
and
sbb
dec
xor
and
jle
adc
mov
and
push
mov
mov
push
add
push
jno
xor
loop
xor
ljmp
into
aaa
add
das
cmc
fisttpll
push
into
mov
pop
mov
mov
sbb
ds
add
and
fnstsw
cltd
and
xchg
gs
mov
pop
sbb
stc
lahf
ret
lcall
icebp
ljmp
lock
add
sub
int3
jb
jbe
cmp
js
icebp
pop
out
adc
fsubrl
jnp
jno
add
icebp
mov
push
call
adc
cmc
repz
adc
sbb
xor
sbb
int
push
stc
lahf
jae
sub
mov
nop
add
call
ret
xchg
mov
mov
negl
mov
mov
repnz
dec
mulb
push
jecxz,pn
sub
sbb
dec
out
mov
push
out
sub
pushf
js
das
sbb
mov
mov
inc
mov
push
xchg
xor
int
jae
inc
mov
dec
hlt
and
pop
jo
sti
xchg
push
push
bound
jmp
push
cmp
jns
popa
push
in
or
or
shl
mov
in
mov
or
cmp
arpl
sbb
mov
xchg
inc
xchg
mov
pushf
jle
xor
xchg
test
clc
stos
adc
xchg
pusha
xchg
adc
std
ds
rolb
fisubl
mov
imul
jl
rcll
cld
push
js
ficomps
sub
psubsb
mov
push
rorl
xchg
push
enter
leave
test
mov
fsubrs
mov
mov
scas
sti
dec
jne
bound
mov
mov
jnp
repnz
push
jbe
ljmp
push
cmp
insl
xchg
mov
mov
mov
ret
pop
in
leave
data16
adc
push
push
cmp
lods
data16
sbb
inc
pop
aam
mov
popf
dec
jnp
push
pusha
loop
and
test
add
cs
ss
daa
adc
popa
js
dec
addr16
enter
pop
inc
and
mov
xor
pop
sbb
or
and
imul
lret
iret
call
mov
les
sbb
and
dec
test
aaa
sbb
int
adc
sbb
xchg
lret
adc
mov
jecxz
ret
inc
sub
ror
jmp
mov
mov
push
push
sub
add
nop
ja
int
fs
int
sbb
lods
xor
addr16
inc
sub
sub
dec
dec
or
dec
imulb
jb
inc
add
leave
shl
lret
sub
outsl
and
mov
les
rolb
in
enter
dec
push
popa
xchg
stos
sbb
sub
cmp
imul
mov
adc
mov
fmuls
push
inc
ds
add
push
mov
mov
repnz
and
pop
ficoml
push
scas
pop
lret
mov
push
adcl
inc
icebp
push
std
in
int
adc
pop
jmp
ret
bound
sbb
and
cmp
aas
xchg
jecxz
divb
adc
aas
lods
je
aam
mov
cmpsb
or
xchg
push
push
jg
lods
fldenv
xlat
mov
mov
inc
out
xchg
mov
jle
jno
pusha
sbb
jne
dec
hlt
stos
or
cmp
adc
add
mov
cmp
adcb
out
adc
mov
xchg
mov
inc
add
or
lret
shlb
jns
movsl
int
cltd
push
sbb
mov
lds
scas
jbe
fdivl
lods
mov
xlat
mov
jl
hlt
mov
ss
mov
cwtl
mov
notb
pusha
inc
je
mov
cmp
frstor
cmp
mov
jo
mov
xchg
sahf
das
xchg
mov
add
aam
shlb
mov
and
push
jo
mov
out
mov
push
sub
and
out
mov
data16
je
cltd
daa
push
sbb
inc
pop
sbb
outsl
jno
test
xor
les
insl
push
out
push
xchg
enter
xchg
mov
pop
pushf
and
dec
loopne
sbb
in
jbe
fidivrs
fdivs
xchg
xor
adc
decl
push
in
xor
mov
icebp
mov
and
xchg
lods
jmp
je
xchg
cmpsb
xchg
lret
shr
mov
fidivs
sti
mov
jnp
out
loope
and
ds
addr16
mov
dec
jge
push
leave
dec
shll
nop
sbb
pop
decb
aad
xchg
lcall
hlt
je
sub
in
lea
std
pop
push
stos
xor
cs
cwtl
add
and
dec
testl
pop
int3
insl
sarl
push
cmp
fstpl
cmp
stc
push
sub
mov
and
fisubrl
sbb
xchg
in
std
lret
jb
inc
or
cmp
adc
popf
andb
push
and
cmp
sbb
add
sti
mov
cmpsl
sub
jg
mov
pop
outsl
inc
pavgw
lods
pop
fidivrl
aaa
pushf
loope
mov
js
inc
adc
fcoml
scas
sub
negb
inc
rorb
enter
call
mov
std
push
out
adc
or
jmp
push
aaa
xorb
mov
xchg
xchg
jnp
shl
movsb
or
sub
xlat
sti
lahf
aam
jne
addr16
ret
out
rcrw
rolb
adc
test
pushf
sbb
mov
lods
jp
nop
fstl
mov
sbb
sti
repnz
mov
insb
sbb
or
jnp
push
movsb
enter
popf
mov
mov
xchg
pop
jbe
adc
mov
cs
mov
inc
insb
mov
bswap
int
push
add
outsb
pop
sub
mov
out
fcmovnbe
fwait
sti
dec
out
scas
fsubl
jecxz
xchg
pop
push
add
inc
pop
outsl
or
aas
inc
or
push
pop
loop
inc
in
in
mov
inc
cmpsb
pop
cmp
push
daa
data16
out
inc
dec
or
out
jp
pop
call
iret
push
mov
cltd
sbb
adc
ffreep
fcomps
adc
add
lea
pop
das
cmc
hlt
data16
rorb
rorl
test
push
dec
faddl
mov
and
push
aas
xor
lret
push
fsts
sub
adc
or
inc
fldcw
push
sub
mov
cmp
cwtl
cli
mov
stc
add
scas
mov
mov
inc
loop
lods
adc
jl
jg
das
bound
mov
lods
push
lahf
fnstsw
xchg
pop
repz
clc
psrlw
loop
mov
lds
call
loopne
jmp
dec
dec
dec
sbb
shrl
rcrb
jecxz
sar
mov
sbb
adc
mov
jl
xchg
xor
mov
mov
xorb
imull
stc
mov
dec
and
jg
repnz
in
stos
pop
sub
mov
jnp
lock
or
sbb
ret
pop
inc
out
dec
pop
mov
cmpsl
psrlq
outsb
or
add
xor
aad
cmp
in
jg,pt
inc
shll
pop
stos
inc
testl
ss
mov
mov
jp
mov
lods
add
dec
es
add
push
xchg
fmull
fs
or
popaw
cld
xor
cmpb
pusha
mov
inc
ficoms
ja
xchg
mov
imul
pushf
and
out
jbe
cmp
xchg
mov
push
aam
call
pop
push
push
push
mov
and
scas
cmp
stc
xchg
imul
push
jmp
ja
xchg
out
adcb
cltd
mov
push
cmp
inc
or
orb
ffreep
adc
fstps
movsl
xchg
aaa
jmp
inc
cmp
nop
sahf
inc
xchg
inc
mov
and
arpl
lods
jmp
dec
jp
lret
inc
mov
iret
stc
push
les
cmp
xchg
cli
aas
mov
pushl
into
adc
test
shr
cmpb
and
pusha
dec
jbe
push
add
pop
int3
repz
jecxz
hlt
jecxz
pop
xor
dec
leave
fs
data16
mov
cmp
cmp
inc
data16
imul
cmpb
popf
pushf
out
push
test
vmread
mov
mov
pop
int
inc
mov
pop
lods
popf
mov
xlat
or
xor
scas
hlt
pop
es
enter
out
out
jnp
adc
ds
push
dec
mov
mov
sub
mov
and
mov
stos
and
mov
fcmovnbe
ss
js
es
hlt
sbb
jp
cld
or
scas
xchg
adc
or
int3
shl
pop
pop
xor
xchg
cld
pusha
imul
mov
cmp
loope
das
cmc
call
cmp
mov
dec
mov
add
imull
filds
xchg
and
add
stos
xchg
movsl
xor
cli
jne
mov
in
imul
loope
inc
mov
mov
das
cwtl
out
adc
sbb
inc
mov
gs
mov
imul
or
loop
int3
mov
add
and
cmpsb
cmp
xor
push
adc
outsb
bound
jnp
test
cmc
shll
dec
or
test
sub
and
jo
sub
addr16
pushf
popf
push
lds
mov
jbe
mov
xor
out
xchg
shrb
insb
aad
mov
les
add
push
mov
xor
and
lds
cmp
inc
call
jl
mov
jecxz
dec
divl
sub
push
cmp
adc
cmp
cltd
jl
inc
fs
xchg
pop
mov
sub
or
cmp
pop
xor
mov
cmp
sti
jle
pushf
push
and
into
shll
dec
shll
add
ret
mov
xchg
fsts
stos
mov
bound
and
and
inc
stos
aad
dec
test
jge
pushf
iret
fisubs
pusha
std
dec
dec
rclb
mov
dec
lods
out
repnz
pop
clc
mov
ret
sbb
stos
sbb
aaa
cmp
and
mov
dec
add
dec
add
add
pop
fcoms
notl
pop
dec
cmpsb
add
sub
pop
cltd
popa
enter
xlat
int
lret
jl
pop
jecxz
lret
fidivs
jp
inc
pop
test
outsb
jae
push
loope
mov
bnd
aad
addb
cmpsl
outsb
lcall
xchg
push
rolb
movsl
jecxz
xchg
add
xor
dec
int
add
push
repz
pop
roll
lret
lods
fildl
bnd
jne
and
bound
sub
push
movsb
push
ljmp
cmp
jecxz
inc
sbbl
mov
xor
out
bswap
loop
sbb
sahf
or
jl
push
xor
es
add
jns
clc
xchg
pop
idivl
iret
cmp
inc
or
lods
push
mov
sub
insb
adc
push
push
xchg
and
mov
or
and
cmp
mov
call
pop
sub
fildl
mov
mov
or
cltd
ficoms
insl
sub
fwait
aad
stos
sub
dec
add
jmp
push
pushf
shrl
inc
ret
and
rorl
fisttps
add
cmp
les
scas
sbb
inc
sarb
jecxz
jne
mov
lret
mov
sbb
push
adc
sbb
out
inc
push
jae
xor
jmp
sub
int3
cltd
pop
inc
clc
sbb
std
add
dec
insl
mov
sti
add
incb
addr16
pop
pusha
mov
pop
mov
or
mov
inc
pop
lods
jo
call
pop
cmp
je
or
popa
jp
xchg
in
xor
insb
mov
mov
filds
movsb
test
xchg
inc
mov
push
dec
xchg
movsl
dec
fcmovnb
in
lret
and
push
lock
or
jns
ja
dec
mov
mov
push
pop
stos
push
push
push
dec
imul
test
jecxz
pop
pop
loop
aad
jnp
pushf
inc
imul
xlat
inc
lahf
xor
push
pop
sub
sarl
jnp
push
jle
out
adc
xchg
cmp
mov
dec
push
pop
lea
cmp
incl
daa
xor
push
and
ss
ret
adc
scas
std
jmp
test
dec
loop
push
add
fisttps
in
mov
aas
push
mov
mov
imull
pop
loop
add
and
outsb
mov
xchg
mov
mov
inc
pop
mov
imul
jae
addr16
add
pop
cmp
jb
mov
push
xor
inc
xchg
adc
pop
push
add
fbstp
popf
sub
fwait
fwait
sbb
adc
jne
adc
push
cs
xchg
sar
in
addl
aad
xchg
es
scas
pop
int3
push
add
loopne
mov
push
les
ss
mov
into
js
dec
icebp
mov
stos
popf
loopne
jno
mov
nop
es
ja
mov
adc
xor
inc
and
jmp
push
in
and
cwtl
dec
fcompl
dec
jle
inc
jo
rclb
aad
jge
xlat
dec
std
mov
test
scas
je
rcrl
inc
and
sbb
clc
push
jecxz
test
ja
dec
pop
je
lods
cld
cmpsl
sub
cwtl
xor
mov
pop
call
repz
dec
out
xor
call
cmp
mov
sbb
sbb
inc
lds
cmp
lods
add
icebp
imul
pop
sub
pushf
mov
lcall
inc
adcl
ficoms
mov
hlt
and
cmp
js
push
inc
nop
sahf
jge
sub
jne
stc
fsubl
cld
dec
and
fnstsw
mov
xchg
dec
jl
sbbl
sub
inc
call
cmp
mov
cmp
and
adc
and
stc
push
push
ss
or
popa
int
mov
add
jbe
cmp
prefetchwt1
lret
ds
shl
xchg
pop
jl
sarl
daa
cmpsb
clc
test
sub
or
xchg
or
push
push
loopne
clc
enter
push
out
add
sbb
cs
das
into
pusha
scas
mov
dec
adc
cmp
xchg
xchg
dec
dec
fistl
rorb
aad
mov
add
stos
push
push
pop
shl
dec
rcrb
or
aas
je
mov
adc
add
jmp
xchg
and
mov
lock
jo
or
ja
cmpsb
loop
jnp
aas
add
fmul
bound
xchg
mov
and
jl
dec
out
xor
pushf
mov
add
pop
jno
pop
mov
lds
mov
insl
lock
inc
cmp
orb
mov
add
loope
inc
mov
rclb
fs
lret
cmp
cld
insb
jp
lcall
cmp
push
push
mov
mov
ficompl
mov
adc
mov
lock
rcr
cmp
leave
fidivl
pop
pop
cmp
add
mov
push
fcoml
dec
push
filds
push
xchg
xchg
cmp
pop
sbbl
mov
xor
pop
pop
shlb
sub
pop
inc
popf
shlb
dec
cmpsl
loopne
mov
lahf
jg
jg
lds
mov
scas
and
fs
pop
cmp
xchg
and
xor
repz
out
leave
xchg
movsl
xchg
inc
pop
and
sub
push
fisttpl
and
outsl
pusha
inc
mov
xor
pop
sbb
cli
jl
cmc
or
cmpxchg
es
aaa
fidivl
cmc
dec
adc
push
data16
stos
xor
cmc
movb
xorl
and
fcomi
push
lret
imul
dec
std
jo
sub
mov
xor
or
rol
cmpsb
iret
push
or
and
shrw
scas
shl
leave
cmp
dec
push
clc
decl
add
pop
shr
push
push
adc
arpl
mov
cmp
dec
or
add
pop
js
xor
imul
dec
icebp
into
and
jp
xor
lahf
push
nop
int3
les
sbb
push
lds
shrl
je
sti
inc
cmp
pop
fadds
out
ficompl
jno
sbb
out
outsb
jns
scas
movsb
ja
xchg
adc
xor
mov
or
ficomps
push
adc
adc
mov
xor
cwtl
scas
andb
call
leave
je
lret
leave
push
punpckldq
pushf
and
xchg
and
push
mov
jne
ret
sub
push
popl
mov
scas
in
je
jbe
add
shll
dec
jge
cli
std
aaa
xor
adc
aas
jae
stos
mov
dec
sub
dec
sub
imul
je
jge
xchg
js
pop
inc
inc
jmp
sub
adc
push
adc
sub
jp
pop
jle
sbb
rcll
in
xor
scas
dec
ror
adc
push
xchg
add
popa
add
pusha
inc
xor
jno
sarl
stos
repz
pop
inc
nop
push
cmp
or
lods
mov
jbe
pushf
lret
loopne
push
sub
shrb
mov
mov
adc
add
out
gs
xor
inc
arpl
insl
xchg
mov
sbb
jmp
out
cmp
fdivl
sub
dec
inc
jp
cs
scas
int3
jae
out
or
fincstp
shrb
mov
fisttpl
jle
fstpt
popa
shlb
test
das
lahf
mov
dec
or
push
jmp
test
add
gs
into
sti
das
shlb
lods
nop
mov
xor
dec
xchg
fldt
push
xor
icebp
mov
sbb
pop
ljmp
add
pop
jecxz
and
or
outsb
or
push
dec
jne
enter
sub
les
adc
sub
lret
subl
xor
or
pop
push
xchg
addb
mov
leave
ret
push
inc
inc
fstpt
movsb
lea
xchg
mov
aam
arpl
dec
adc
movsl
aad
mov
lods
and
xchg
stc
push
fisubs
cmp
pop
mov
jg
sbb
jl
fdivl
sub
xchg
and
cld
push
out
out
and
fildll
jp
pusha
scas
mov
pop
add
mov
sub
xlat
mov
loop
test
jne
ss
mov
shlb
nop
lahf
lea
cmc
leave
orl
ljmp
lock
jbe
in
test
sbb
pop
das
mov
add
mov
mov
shr
jecxz
dec
lock
push
es
mov
popf
mov
adc
jecxz
ficoml
push
or
ljmp
push
ret
mov
insb
repz
dec
nop
xchg
ret
mov
enter
imul
xorl
in
repz
out
xor
dec
mov
cmp
popf
loopne
enter
insl
lods
inc
sbb
flds
clc
adc
dec
repz
sbb
arpl
xor
in
std
fcoml
push
inc
pop
ja
push
arpl
mov
lahf
inc
popf
jbe
call
xchg
repnz
mov
mov
push
add
movsb
cs
cmc
sub
mov
fstps
loopne
mov
cmp
aam
dec
xor
movsl
dec
adc
es
add
sub
sub
sarb
into
adc
lea
push
mov
lcall
or
pusha
xchg
int3
rcr
lea
fsubrl
dec
rclb
xchg
lcall
push
jno,pn
pop
jge
add
test
adc
mov
and
adc
fstpl
stos
loop
mov
out
sbb
xor
shl
sbb
scas
sub
jb
pop
iret
shl
jmp
lock
mov
lret
mov
into
push
hlt
dec
test
movsb
je
fnstcw
adc
and
pop
jo
push
sbb
pop
pop
cs
es
push
out
movsb
add
sahf
das
bound
bnd
test
ss
gs
daa
frstor
out
and
push
and
ljmp
add
adc
mull
push
xchg
pushf
shl
scas
and
cmp
imul
enter
sub
pop
loopne
in
mov
and
adc
inc
push
ffreep
pop
in
mov
loopne
cmpsl
push
iret
sbb
clc
bound
and
or
sub
ss
mov
mov
jg
push
js
aam
add
pop
addr16
adc
mov
pop
out
mov
roll
mov
and
cwtl
mov
mov
into
or
lea
ds
enter
shlb
int3
out
and
movsb
rcrl
dec
mov
lret
inc
arpl
sub
mov
dec
shr
jmp
cmc
dec
cmpsl
aam
mov
iret
shl
push
adc
ljmp
pop
push
subl
pop
cmp
cmp
mov
roll
mov
popa
cwtl
sbb
jge
subl
aam
test
es
xchg
mov
mov
mov
aam
orb
push
sti
les
cmc
lds
jns
out
jp
ds
push
push
test
lods
pop
pop
pop
mov
loopne
mov
movsl
popa
sbb
or
sbbl
pop
mov
pop
in
and
sbb
mov
mov
sub
push
sbb
cmp
les
sub
lods
mov
inc
push
mov
xor
xchg
mov
loopne
jp
jecxz
or
mov
hlt
sbb
insb
dec
xchg
sub
or
pusha
icebp
or
fucom
and
adc
pusha
lahf
inc
decb
xor
and
cmpsb
pop
test
ret
imull
stc
dec
cmc
sub
and
jo
jmp
xor
and
orb
je
and
fidivrs
aad
mov
lahf
stc
sub
xor
push
loop
mov
jne
sub
sbb
movsl
dec
add
jl
leave
xchg
cld
push
xchg
gs
test
js
aam
inc
repz
les
mov
xor
jle
loopne
outsl
adc
popf
lcall
cmp
loope
mov
pop
pop
sub
mov
mov
scas
addr16
aaa
aaa
dec
bound
popa
or
xor
cwtl
ja
outsb
inc
pop
dec
adc
pop
test
push
inc
int3
popf
push
mov
ljmp
dec
in
add
clc
push
cmp
hlt
jp
cmp
insw
add
pop
in
test
jp
sbb
cmp
arpl
lret
das
mov
adc
jmp
cli
fsubr
add
sbb
or
cmc
mov
test
ljmp
outsb
mov
in
insb
leave
xchg
cltd
fnsave
xchg
mov
or
mov
xchg
ret
xchg
and
das
dec
jnp
jmp
xchg
popf
mov
mov
add
out
mov
dec
jb
xchg
and
push
xchg
adcb
sub
sub
cmpb
pop
pop
push
sbb
test
cmp
mov
inc
loopne
aad
lds
mov
js
mov
out
enter
sti
jle
jl
pop
ret
adc
lods
cltd
movb
test
test
ret
sub
sti
inc
mov
lods
adc
repz
nop
xor
xor
out
pop
dec
xchg
andl
push
fldt
shll
notb
lods
or
add
pop
cli
iret
jnp
add
leave
mov
nop
or
jmp
das
mov
mov
fs
xor
bound
faddl
or
sub
shlb
sbb
cwtl
or
sub
sub
rorl
popf
arpl
repnz
loop
push
jg
jb
rcrl
scas
mov
pop
outsl
xor
add
test
jle
or
mov
vpermt2q
push
call
or
imul
in
test
or
add
add
movl
movl
movl
movl
jmp
movl
mov
jg
pushl
pushl
call
subl
xorl
subl
andl
cmpl
movl
movl
movl
jmp
movl
jbe
push
push
call
adcl
subl
xor
xorl
xor
add
orl
movl
xor
movl
movl
mov
shl
subl
mov
subl
push
andl
push
push
adcl
push
xorl
call
andl
mov
cmpl
movl
movl
jmp
movl
movl
je
push
call
add
mov
xor
xor
addl
sbb
sub
mov
mov
xor
xor
cmpl
not
movl
movzbl
jmp
movl
movl
jbe
push
call
andl
adcl
sbb
xor
add
sbb
mov
negl
sbbl
mov
mov
add
mov
or
mov
adc
sub
cmpl
movl
not
movl
jmp
mov
movl
jae
push
call
adc
dec
andl
adcl
and
add
mov
lea
xorl
mov
xorl
mov
orl
or
negl
and
mov
adcl
or
xor
cmp
jne
mov
mov
sub
shrd
orl
shr
sbb
mov
sub
mov
orl
shl
xor
xor
addl
or
movl
mov
movl
cmp
movl
jne
add
mov
add
mov
xor
xor
cmpl
mov
mov
notl
jmp
mov
notl
jae
push
push
pushl
pushl
call
xor
add
mov
and
and
and
add
sbb
mov
and
mov
cmpl
movl
movl
jmp
mov
jb
push
push
push
pushl
pushl
push
push
push
push
call
movzbl
add
mov
mov
add
mov
sbb
xor
or
mov
xor
and
sbbl
not
not
mov
shrd
sbbl
mov
cmpl
mov
mov
not
movzbl
jmp
mov
jge
push
pushl
push
push
push
call
add
sbbl
adc
movzbl
sbb
movzwl
or
andl
movl
mov
xor
shr
cmpl
mov
mov
movzwl
jmp
movl
movl
jae
pushl
push
pushl
push
push
push
call
or
adc
adc
mov
add
add
mov
add
mov
subl
xor
incl
or
orl
shl
sub
cmpl
mov
mov
jmp
movl
je
push
pushl
push
push
push
call
and
sbb
movzbl
sub
mov
adc
mov
mov
sub
xor
sub
jmp
out
cmp
cmpsl
adc
adc
xor
push
push
loop
ja
dec
sahf
or
out
nop
mov
mov
mov
jp
jmp
stos
lcall
int
rcll
mov
push
aas
gs
jl
xor
out
inc
out
inc
sbbb
test
push
cmp
ret
out
inc
mov
fildl
cmpsb
mov
fs
in
cmc
out
lea
sub
movsl
cmc
pop
jecxz
and
loopne
ret
xchg
inc
divb
xlat
mov
lods
into
pop
cli
mov
push
ja
sti
lock
mov
xor
push
mov
stc
xor
out
lods
into
stc
aad
cmp
or
or
std
or
sbb
xchg
outsb
pushf
or
add
rcrb
sbb
cwtl
imul
lret
pop
adc
ss
mov
fxch
sbb
nop
and
pop
mov
lcall
jmp
lret
or
jno
or
mov
lods
mov
int3
mov
fwait
std
mov
arpl
cmpsl
xchg
or
mov
mov
mov
push
mov
mov
test
xchg
cwtl
dec
shl
mov
loopne
cmp
movsb
jle
and
repnz
enter
push
fwait
adc
mov
push
adc
not
lods
loop
dec
push
pushf
pop
dec
aad
mov
negl
or
mov
or
cmp
pop
dec
les
dec
std
ret
in
mov
leave
dec
dec
sbb
mov
rol
mov
call
sar
mov
and
popf
out
ret
repnz
scas
call
add
popf
mov
adc
fs
gs
movsb
int3
mov
jo
xchg
or
shl
repz
xchg
adc
xor
adc
ljmp
shlb
cmp
jge
mov
jmp
dec
jae
mov
ds
dec
cmc
mov
pusha
and
inc
testb
xchg
rep
icebp
mov
xchg
in
xchg
mov
xor
ret
xchg
fdiv
pop
dec
loopne
inc
testb
in
add
lock
sub
or
adc
aad
xor
push
push
xchg
cmp
push
call
sti
icebp
xchg
jp
fimuls
push
jecxz
fcoml
mov
cmp
insb
test
mov
fwait
and
jbe
aad
xchg
outsl
outsb
ja
cld
pop
loopne
xchg
hlt
inc
aam
push
insb
mov
les
movsb
out
repz
mov
fstpt
mov
mov
sub
mov
loop
and
cli
aas
pop
cld
jl
xlat
add
xlat
movsl
sub
loope
or
pop
mov
push
push
adc
cmp
stc
fdivr
aam
lock
lret
ret
lcall
push
adc
adc
mov
push
jge
imul
shr
dec
pop
or
test
lret
xchg
mov
mov
pop
lret
insl
mov
fldl
call
sub
shll
jl
mov
arpl
or
pop
call
fiadds
xchg
jmp
adc
pop
dec
xchg
mov
pop
mov
jnp
pop
mov
jae
inc
and
lahf
fcoms
jbe
xor
repnz
mov
movsb
in
push
insb
scas
imul
mov
rcl
insb
push
lock
push
push
addr16
rcrl
mov
jle
leave
xchg
scas
fistps
inc
jb
adc
movsb
insl
scas
out
cmp
and
lret
or
xchg
fdivrp
xchg
cmp
mov
sbb
push
popa
mov
jb
dec
ss
sti
or
xor
adc
ds
dec
rcll
mov
jecxz
jnp
mov
cmp
cmc
fwait
adc
jnp
jne
jo
pop
movsb
pmaddwd
sub
in
cmc
cs
jp
sub
cltd
mov
mov
and
lods
ja
xchg
adc
push
cli
sbb
aaa
test
mov
add
cmpsl
push
subl
dec
sub
xchg
and
add
call
adc
sti
inc
lea
popa
cmc
and
mov
std
cmp
push
lea
inc
jb
jb
notb
test
inc
push
lock
xchg
push
jl
out
roll
outsb
xor
push
mov
lds
stos
add
adc
inc
mov
sahf
and
cld
pop
iret
pop
loopne
insb
fxch
test
js
mov
insl
fsubrl
xchg
sub
adc
mov
push
sbb
mov
mov
imul
sub
mov
mov
scas
test
repnz
out
jo
pop
imul
test
into
aas
or
mov
cmp
cmp
je
push
in
stc
mov
scas
int3
out
outsb
stos
aam
or
inc
enter
jp
cltd
xchg
xor
fwait
iret
fidivrl
adc
pop
test
imul
dec
add
inc
jecxz
inc
stc
pop
iret
pmulhw
mov
push
imul
arpl
mov
aad
xchg
loope
dec
arpl
insl
push
lret
fidivrs
bound
or
mov
mov
in
add
pushf
add
out
push
add
sbb
jmp
push
jle
sub
rorl
jno
ficoms
int3
loopne
mov
xor
aam
sub
cmp
subb
imul
jno
or
aam
popf
push
or
mov
ja
pop
adc
adc
gs
and
inc
dec
adc
mov
sub
inc
fldt
stos
fldenv
mov
scas
cmp
pop
out
repz
mov
js
test
xor
jge
adc
stc
nop
xorl
sbb
sub
cmp
xor
jb
push
sbb
sbb
decb
mov
outsb
pop
or
mov
das
lods
lret
cld
stc
pop
sbb
lcall
sar
decb
int
pop
dec
xchg
pop
push
inc
inc
movsl
mov
loopne
inc
pusha
lret
xchg
fs
inc
cld
fcoml
add
mov
jg
jb
out
icebp
pop
jl
lahf
adc
xor
dec
cmpsb
cli
mov
mov
mov
loopne
xchg
pop
push
es
lahf
and
aad
xchg
test
lret
pop
sarb
rclb
movsb
jo
pop
xor
not
push
cli
add
pushf
ffree
ja
stos
ss
push
cmpsb
mov
mov
insb
imul
inc
in
jmp
push
adc
leave
mov
add
js
mov
cmp
and
or
adc
mov
xor
push
pop
sub
in
push
sbb
pop
in
leave
dec
mov
add
jg
in
push
std
jns
sbb
lock
pop
addr16
and
fildll
aam
pop
imul
lods
mov
outsl
push
add
cmc
push
add
xchg
icebp
popl
mov
mov
sbb
xor
fldcw
lret
js
mov
dec
or
jb
pop
mov
lock
shrl
add
adcl
jp
loopne
rclb
jo
pop
mov
aam
ljmp
lods
push
arpl
gs
mov
inc
test
push
sbb
out
sbb
cmp
mov
scas
popf
adc
jmp
repnz
clc
int
inc
add
stos
les
sbb
aam
jnp
push
and
jmp
movsb
insl
xor
sbb
inc
cmpsl
add
popa
xchg
or
xchg
gs
mov
pop
shrb
cmpsb
pop
dec
sub
mull
and
loop
addr16
lahf
test
ror
or
add
pop
adc
fnstcw
xor
adc
arpl
jge
lcall
daa
gs
mov
das
xchg
pop
int3
nop
call
mov
mov
test
lods
popa
fdivrs
ret
pop
lret
adc
mov
cli
lret
dec
lods
aad
push
or
in
adc
mov
out
jle
add
ss
fwait
jae
repz
int3
or
mov
stos
adc
in
mov
xchg
sti
push
adc
outsl
icebp
insl
popa
orl
cmp
adc
ret
jmp
sub
in
movb
fcom
fwait
in
pop
test
hlt
fdivl
lret
xchg
ja
ret
or
mov
mov
or
inc
inc
dec
sbb
jo
dec
add
testl
sub
call
fsubr
lahf
xchg
push
cltd
lcall
arpl
mov
dec
roll
jl
xchg
xchg
sqrtps
sub
movsb
enter
shlb
adc
mov
aas
les
jmp
sub
cli
lea
mov
pushf
cmc
test
jecxz
cmpsl
xor
sahf
adc
fwait
and
xor
outsb
call
xorl
sbb
lret
ret
mov
lea
xor
mov
mov
adc
fxch
fwait
mov
fdivr
das
push
shll
orb
mov
popf
cmp
fs
lods
mov
push
nop
sahf
pop
mov
fs
lahf
pop
cltd
and
push
stc
add
enter
pop
jp
cwtl
xor
rorl
cmpsb
or
ret
jbe
call
fwait
cs
push
push
std
pushf
and
sbb
cli
movsb
pop
push
fdivrp
in
cli
pop
clc
add
jl
in
push
jp
mulb
lret
and
loop
dec
xor
cmp
pop
loop
sbb
push
fdivrl
jl
clc
inc
in
mov
push
cs
or
dec
xor
add
jno
inc
scas
push
cld
sbb
jno
pop
mov
out
xor
pusha
fdivr
jns
ss
sub
je
mov
and
push
aas
mov
dec
adc
xchg
bound
mov
imul
je
dec
and
cltd
test
mov
gs
rcll
mov
lahf
xor
clc
ret
mov
and
add
hlt
dec
mov
cli
mov
mov
cmp
mov
pushf
mov
mov
jno
in
fwait
into
jle
popa
loope
fnstcw
mov
ret
sub
mulb
imul
sbb
push
aam
push
je
jecxz
mov
sub
mov
dec
aaa
cld
mov
dec
sbb
cmp
lds
mov
hlt
pop
mov
mulb
mov
lea
insl
inc
xor
pop
push
jnp
pushf
push
sbbb
or
cmpsl
jbe
fnstsw
adc
mov
push
jg
insb
sarl
jns
fisubrs
xchg
decl
in
inc
fucomip
mov
lds
pop
in
push
lret
adc
das
xchg
xchg
and
shrb
mov
xchg
int3
imul
and
loop
xchg
nop
mov
sub
jge
outsb
jno
vminss
push
dec
insl
imul
je
push
push
or
shl
lock
sub
inc
dec
fadd
sbb
jge
imul
xlat
and
sbb
outsb
cli
mov
scas
jb
sub
adc
cmp
ret
popa
mov
mov
stos
cmp
test
xchg
hlt
pop
push
mov
mov
fwait
add
dec
in
jne
jns
cmpb
mov
mov
test
imul
dec
pop
in
adc
fsubrl
jbe
cmp
cwtl
cmp
cltd
mov
insb
cmp
addl
push
mov
xor
popf
mov
divb
dec
push
mov
jge
mov
mov
scas
lds
push
and
ja
cmp
sbb
fildll
lret
xor
or
clc
jno
cmp
inc
adc
fmuls
shlb
xor
and
sub
push
pushf
pop
dec
mov
insb
mov
ret
cmp
lea
pushl
jg
loopne
loope
fldenv
lahf
out
fbld
jl
out
cs
loopne
mov
add
adc
cmp
clc
ficomps
andb
jg
push
leave
loope
mov
cmp
sbb
jl
in
loop
push
push
mov
cltd
test
xchg
icebp
and
mov
in
sub
adc
mov
bound
adc
aaa
jno
adc
in
out
sti
outsb
mov
adc
stos
jnp
sub
adc
inc
pop
inc
outsb
stos
pushf
movsl
in
and
clc
xchg
sub
sahf
in
jge
add
ss
idivb
add
pop
js
cli
je
mov
mov
into
arpl
cmp
cmp
add
enter
xchg
arpl
push
iret
jae
sbb
push
popf
dec
call
out
lcall
js
push
xchg
lds
or
push
loope
mov
fcmovnb
mov
xor
data16
outsb
push
or
ljmp
mov
cwtl
mov
mov
cmpsl
iret
out
push
push
dec
xor
lea
int3
inc
in
adc
sti
mov
mov
sub
dec
mov
inc
scas
inc
and
movsb
xor
mov
push
sbb
fimull
clc
push
les
mov
cmp
xchg
loope
mov
push
mov
dec
clc
mov
fwait
inc
sbb
pop
scas
lea
dec
add
dec
hlt
fucom
test
outsb
rcrl
cmp
mov
xor
push
jb
imul
outsb
mov
fs
adc
cmpsb
imul
mov
mov
cmp
jecxz
cmp
rcrb
mov
fnstsw
push
out
sub
popf
adc
test
dec
lock
inc
sub
inc
pop
out
jns
jecxz
jge
jns
sbb
in
ds
stc
mov
sub
push
pop
mov
jl
adc
ljmp
adc
pop
dec
cmpsb
insb
nop
lahf
cmp
stos
dec
testl
pop
fwait
xchg
jmp
enter
dec
push
and
adc
pop
sub
adc
sub
aaa
jnp
test
or
test
arpl
ret
decb
jg
mov
inc
pop
mov
psraw
push
jge
pop
xchg
out
fs
and
xlat
sub
mov
xlat
cmp
mull
cwtl
jns
sub
inc
test
lret
addr16
jmp
lcall
jmp
xchg
test
xchg
repz
lods
pop
jmp
push
enter
xchg
lods
inc
idiv
rclb
out
loop
inc
inc
push
sbb
mov
push
pop
repz
in
mov
in
xchg
dec
and
loop
data16
jmp
cwtl
cmp
cmp
sbb
pop
mov
cmp
and
loopne
dec
mov
add
lods
pop
inc
sub
sti
call
dec
xor
jle
adc
iret
mov
mov
push
rol
jmp
iret
adc
inc
idivl
mov
cmp
mov
aaa
sub
push
int
mov
cmpsl
aam
mov
add
lock
or
inc
imul
and
mov
or
cmp
aas
call
movsb
popa
test
jle
int
ficoms
lahf
sbb
arpl
push
enter
add
les
sub
add
pushf
cmp
sbb
xchg
pop
sbb
push
jl
fcmove
add
sbb
test
cmp
pop
add
jl
mov
call
in
fstl
movsl
cmp
popa
mov
out
sub
sbb
sub
into
jnp
mov
adc
fldcw
shll
popa
xchg
xchg
nop
ljmp
mov
mov
add
or
mul
jb
or
adc
mov
enter
bsr
aad
popa
idivl
adc
pop
pop
mov
pop
or
inc
pop
dec
repz
xor
xor
les
pop
data16
das
outsb
into
sbb
jp
dec
in
jle
adc
movsb
cwtl
add
in
pop
std
or
add
sar
pop
push
cmp
lret
mov
mov
les
mov
pop
scas
fsubrl
fstl
das
xor
out
pusha
jno
test
aam
popf
or
mov
push
sarl
insl
push
mov
and
and
sbb
add
mov
arpl
icebp
mov
repz
or
iret
jns
in
mov
mov
mov
jnp
clc
pop
gs
add
cmpl
xchg
xor
xchg
xchg
or
fdivs
sub
loop
mov
fmul
inc
idivb
repnz
inc
ds
cmp
xchg
push
sub
sub
cmp
jmp
scas
aaa
dec
in
jl
pop
sbbl
out
jl
bound
mov
sub
push
nop
pop
shrl
testb
add
call
xchg
insl
scas
mov
repnz
or
xor
add
pushf
aaa
mov
push
xchg
pop
push
inc
adc
mov
fnstsw
mov
mov
fmuls
into
adc
shlb
add
insl
xchg
dec
mov
add
jge
pop
out
mov
xchg
push
ss
je
jmp
cmp
nop
cmpl
fistpl
sbb
xchg
and
out
pop
mov
jae
push
and
ljmp
jge
imul
jecxz
cmp
rcl
in
mov
fcmovu
dec
jle
inc
shll
rcr
push
sbb
mov
loopne
mov
in
cmp
popf
sub
rclb
cld
adc
loope
push
xchg
adc
pusha
mov
xchg
stos
stc
ret
xchg
inc
fsubl
or
test
mov
push
clc
ja
scas
arpl
jae
inc
xor
sub
dec
jns
sbb
jmp
nop
mov
mov
out
cltd
cmpsb
popf
loope
and
ja
test
out
aam
push
pusha
pusha
adc
sub
nop
jmp
push
sahf
lcall
lahf
test
and
in
pop
repz
jnp
jno
mov
sarb
out
ljmp
cltd
dec
and
sbb
popa
adc
adc
dec
xchg
cld
mov
mov
xor
cwtl
jae
cmpsl
mov
movl
or
loop
xor
inc
or
bound
fs
dec
in
and
es
subb
or
push
aam
ss
jno
cmpsb
mov
mov
aam
jb
daa
mov
rorb
mov
sbb
loopne
xor
loopne
out
jle
adc
adc
repnz
loopne
aad
subb
dec
test
mov
add
icebp
xorl
scas
jg
inc
cmp
hlt
call
daa
push
out
cmp
loopne
adc
hlt
jmp
cmp
arpl
mov
fbld
mov
rorb
pop
pop
out
mov
daa
nop
and
xor
daa
jae
jo
add
cmpsl
int
stos
add
or
lods
daa
mov
cmp
cmc
push
shrb
or
pushf
jg
ja
mov
xchg
mov
cmp
aam
cmp
lahf
rol
mov
das
push
mov
rol
jp
mov
jae
lds
call
and
popf
rolb
cmp
jb
jae
shll
adc
push
int
shlb
jl
push
scas
sub
js
jle
dec
aam
addr16
or
lcall
ret
dec
xor
mov
lret
jo
push
or
jnp
push
jmp
fimull
sbb
push
jo
in
lds
or
lds
lret
pop
fs
aaa
cmc
mov
cli
mov
mov
and
pop
cmp
mov
fst
test
pop
js
and
clc
lret
pop
aaa
in
test
fidivs
roll
push
stos
add
loope
out
jge
xchg
mov
das
dec
daa
push
push
bound
outsb
fsubrs
into
cmp
sbb
ds
sarl
rcll
test
adc
mov
cmc
daa
lods
mov
test
xor
and
xor
imul
test
leave
roll
or
repnz
pop
call
int3
or
pop
movsl
fs
add
stos
xor
insb
sub
movsb
test
das
cs
pop
jge
xchg
push
stos
xchg
cmpsb
pushf
mov
and
roll
push
cli
xor
popa
test
push
push
daa
mull
fiaddl
lahf
out
rcr
push
mov
rorl
and
jecxz
stos
xchg
lahf
or
jo
push
popa
int
mov
inc
scas
pop
test
cmp
scas
cmp
sbb
jg
mov
loopne
inc
sbb
inc
pushf
sbb
mov
andb
shll
fmuls
jg
jb
out
outsb
outsl
addr16
fnsave
sti
in
mov
mov
fsubr
in
mov
fstl
inc
testb
push
enter
or
lret
pop
sub
adcl
jmp
sbb
mov
pop
in
cmp
rcrb
pop
pushf
jnp
lahf
and
test
cmc
jne
loop
pop
lahf
inc
insl
lcall
dec
outsb
dec
sbbl
adc
std
out
shlb
shrb
mov
xlat
addr16
clc
in
or
vpunpckhbw
or
jb
mov
push
sbb
insb
in
add
push
jns
dec
jmp
lods
or
fbld
mov
inc
adc
not
jp
and
pop
or
push
iret
mov
imul
xlat
mov
sub
out
jg
fwait
test
std
inc
dec
lcall
mov
and
xor
ds
fdivrs
data16
je
call
push
cmp
jmp
adc
ds
ss
hlt
shrl
repnz
addb
and
inc
ror
lods
pop
imul
push
add
mov
js
lods
cld
iret
les
xchg
cmpsb
pop
pop
jle
mov
bound
js
in
fs
stc
fiaddl
test
cmpsb
dec
xchg
sub
dec
rcl
adc
mov
sbb
adc
rorb
lods
xchg
fwait
jle
push
leave
push
push
xchg
in
out
popf
scas
clc
lea
xor
push
xchg
out
leave
and
jl
dec
pushf
stos
jb
ficomps
int3
push
push
rorb
push
lods
dec
pusha
pop
gs
jmp
dec
lds
or
or
sbb
test
cmpsb
in
push
out
out
cmp
iret
aam
cmp
pop
lret
adc
lods
xor
outsl
adc
addb
and
insl
popf
pop
mov
insl
jnp
push
out
lock
pop
sbb
pop
out
lret
shld
pop
jno
orb
and
pop
push
push
add
push
adc
inc
jmp
sub
div
mov
dec
fsubrs
int
cmp
lds
ficoms
xor
pop
inc
nop
xchg
fistpll
xlat
sti
xchg
loop
mov
js
fsts
shl
or
out
stc
sbb
pop
sub
fnstcw
mov
ja
movsl
mov
cmpsl
pop
jbe
inc
or
pop
cmpsb
pop
cmpsl
push
hlt
repnz
mov
mov
xor
jae
mov
dec
jecxz
pop
lret
pop
das
jb
dec
jecxz
outsl
rclb
xchg
fbstp
push
adc
jbe
outsb
adc
and
scas
add
ljmp
dec
dec
mov
and
mov
js,pn
xchg
imul
test
clc
es
outsl
mov
imul
in
mov
stos
fimuls
icebp
sahf
insl
mov
jge
in
push
lret
fwait
cmp
xlat
dec
scas
into
mov
xchg
adc
out
mov
inc
lcall
push
out
add
pop
or
mov
subb
push
mov
pop
xchg
cs
cmp
lods
popf
fwait
xchg
jbe
popf
es
hlt
cmc
cmc
or
icebp
lds
xchg
lds
mov
jns
adc
fidivs
test
dec
leave
cmpsb
push
cmp
sub
cmp
fstps
mov
bound
imul
fs
xorl
sbb
sub
cmp
insl
int
jb
push
cmpsl
int3
or
xor
idivb
ret
xchg
push
arpl
ret
mov
icebp
or
rcrl
imul
out
cmp
push
adc
dec
fs
in
xor
in
bound
jle
xchg
addr16
push
loope
arpl
aam
mov
fisttpll
outsl
mov
jecxz
std
mov
xor
add
leave
in
leave
jecxz
and
jl
out
cs
pop
aas
push
popf
sub
lcall
inc
jae
mov
add
sbb
es
adc
aas
xchg
push
bound
inc
adc
stc
aad
mov
mov
inc
and
jno
mov
fdivs
sarb
add
mov
fwait
imul
mov
inc
bound
pop
push
adc
pop
push
dec
xchg
hlt
mov
lret
jecxz
inc
sbb
hlt
pop
xchg
aam
lock
jno
sub
call
call
and
pop
roll
jecxz
negb
xor
pop
out
add
cmc
je
imul
pop
and
jp
bnd
fadds
mov
mov
push
sar
xchg
mov
sub
and
loopne
adc
in
xor
scas
nop
stos
xor
lahf
lret
arpl
pusha
mov
mul
jmp
adc
movsl
outsl
sbb
test
xor
stos
les
xchg
scas
ljmp
sbb
out
mov
jo
pop
lods
add
push
jg
test
into
or
lea
fcomi
push
ljmp
pop
xchg
push
jle
add
mov
cmp
int
nop
mov
push
lods
mov
jmp
mov
jmp
out
mov
cmp
sbb
mov
pop
and
jle
mov
jo
jb
dec
inc
dec
cltd
imul
xchg
ja
in
call
pop
fucomp
push
jne
popf
sub
cwtl
in
cwtl
add
dec
pusha
mov
jno
pop
outsb
mov
mov
jbe
imul
lock
or
xlat
sub
pop
mov
jecxz
int3
push
lods
insb
xor
aas
out
ds
call
pop
in
pop
stos
test
xchg
mov
insb
movsl
scas
pop
clc
ret
cmp
mov
mov
xchg
nop
pop
fisttps
pop
sarl
movsl
shll
sbb
add
add
jne
leave
push
add
dec
adc
add
insb
cmp
bound
sub
leave
or
sarl
push
divb
add
les
adc
or
xchg
cmp
jle
xor
call
and
mov
pop
enter
cli
test
ja
push
pop
mov
push
outsb
push
mov
jns
scas
in
int3
mov
xchg
icebp
xchg
test
and
xor
jge
xchg
push
mov
jno
mov
push
ret
cmpsb
iret
xchg
jnp
repz
sbb
enter
jge
cwtl
fs
mul
test
pushf
jmp
ja
lds
into
cs
loopne
repnz
jno
mov
test
mov
sbb
rcll
test
lods
adc
mov
lret
out
adc
add
mov
xchg
je
cmc
xchg
pop
data16
sub
xor
lods
add
inc
push
mov
dec
xlat
mov
aad
jg
or
inc
jb
rorl
sub
cmp
sub
mov
popf
int3
loop
push
jo
dec
xor
icebp
mov
pop
in
xor
out
nop
push
mov
mov
pusha
pop
cwtl
jae
or
xor
fsubrl
adc
roll
nop
xchg
loop
jg
adc
movsb
inc
mov
test
and
ror
add
out
into
int3
nop
adc
das
rorb
and
sti
shll
mov
jns
add
nop
xor
mov
add
in
nop
xchg
jg
es
mov
pop
mov
push
push
pop
add
xlat
mov
call
and
inc
xor
jle
fbstp
cmp
mov
andb
inc
add
add
not
mov
jmp
mov
jne
pushl
push
pushl
pushl
pushl
call
sbb
xorl
add
addl
movzbl
or
mov
sub
adc
mov
addl
mov
cmpl
mov
movl
movl
jmp
movl
not
jbe
push
push
push
push
push
call
movzbl
sbb
adcl
mov
and
xor
xor
xor
mov
and
add
cmpl
mov
mov
movl
not
jmp
movl
jbe
pushl
push
pushl
call
xor
add
sub
inc
adc
orl
adcl
mov
mov
mov
add
shrd
incl
shr
adc
mov
cmpl
movl
mov
mov
jmp
movl
movl
jle
pushl
pushl
push
push
call
xor
and
xor
movzwl
sbb
subl
xor
or
mov
sbb
mov
and
mov
sub
xor
sbb
shl
sub
xor
orl
or
mov
cmpl
mov
mov
mov
mov
jmp
mov
jb
pushl
call
subl
movzbl
and
mov
add
orl
sbb
sbb
sub
mov
shrd
addl
shr
mov
mov
adc
mov
addl
xor
xor
adcl
or
shl
lea
mov
subl
mov
shrd
shr
xor
mov
sbb
mov
inc
mov
movzwl
sbb
xor
mov
and
mov
xor
andl
or
adcl
shl
cmpl
mov
mov
mov
movl
jmp
movl
jbe
push
push
push
pushl
call
sbb
addl
mov
sbb
mov
xor
sbbl
neg
imul
xor
jmp
fistpl
sbb
jmp
push
test
mov
push
push
sub
push
push
stc
mov
push
xor
loope
cmp
or
out
js
sub
xchg
xlat
xchg
pop
scas
dec
std
test
adcb
pop
inc
jo
out
rdmsr
mov
sbb
cmp
push
fsubs
hlt
adc
pop
sub
ret
dec
pop
mov
ficoml
jmp
pop
cmpsl
inc
push
fnstsw
roll
pop
sub
test
ret
icebp
cmp
and
mov
inc
cmp
cmp
fwait
pop
mov
inc
add
mov
rol
stc
mov
sbb
dec
lcall
flds
loop
test
hlt
popf
push
xor
enter
pop
mov
xchg
jg
jns
lcall
nop
sub
xor
sub
pop
into
xchg
faddl
mov
fs
nop
push
mov
stc
sahf
jno
mov
xchg
xorl
shlb
orb
dec
roll
test
jns
sbbl
pop
movsl
pop
jne
inc
mov
in
jecxz
cmp
fcomps
ret
adc
jp
push
push
cmp
sbb
and
aaa
js
mulb
inc
icebp
fs
fs
sub
bound
pushl
cmpsl
jecxz
and
mov
sar
pop
xchg
adc
cwtl
xchg
mov
add
rorl
adc
jl
fistpll
inc
cwtl
dec
and
gs
ret
add
xchg
xchg
data16
es
rcl
call
les
insb
inc
fucomp
sbb
pop
loope
jecxz
lret
jne
insb
popa
and
pop
or
insl
sub
jmp
mov
dec
push
mov
fldenv
add
mov
ljmp
btr
cmp
jnp
sbbl
xchg
adc
jb
cmp
ror
cmp
cwtl
shlb
xor
jns
sbb
and
adc
loop
jge
test
leave
or
lret
cmp
clc
cmpsb
daa
cmpsb
and
jp
cmp
xor
push
dec
lods
aad
jg
xor
mov
add
aaa
cmp
push
inc
cmp
inc
test
call
test
mov
xchg
outsb
jno
mov
xlat
jne
dec
insl
lea
bnd
pop
mov
out
call
pop
fldl
out
sbb
push
testb
fstpt
add
loop
out
or
rclb
push
jnp
pop
inc
lahf
mov
adc
xchg
pushf
imul
movsl
fstps
lret
mov
adc
mov
jp
dec
imul
ss
stos
xchg
xor
xchg
mov
mov
mov
mov
jl
mov
inc
xchg
push
andl
out
inc
push
ljmp
arpl
pop
xor
dec
ret
jne
cmp
cltd
faddl
cmp
sbb
push
addr16
push
fcompl
addr16
popa
mov
mov
sti
movsb
cmpsl
fwait
cld
or
loop
mov
stos
mov
stc
mov
stos
xchg
xor
cmp
mov
or
negb
sub
pop
es
mov
lret
xor
dec
popa
xchg
xchg
jmp
add
shlb
cmp
inc
filds
call
enter
add
xchg
out
fldl
adc
cmp
imul
pusha
add
imul
insb
dec
outsl
sbb
lret
mov
and
xchg
scas
out
cmp
icebp
aam
ficompl
sbb
aam
mulb
xchg
mov
mov
or
add
les
sub
inc
ret
xor
jge
dec
sub
pushw
ss
sub
aam
dec
jmp
mov
test
or
sub
sbb
cmpsb
in
aad
pop
jno
fiadds
xchg
shll
fidivrs
sub
mov
mov
or
lcall
xchg
mov
cwtl
sub
nop
mov
xor
pop
fdivs
decb
cmp
mov
in
inc
mov
jecxz
aam
sbb
orl
cmp
es
pop
push
scas
outsl
adc
movsb
or
fwait
mov
movl
push
dec
stos
sbb
nop
clc
imul
sbb
imul
xchg
popa
mov
fs
leave
xor
das
arpl
pop
inc
movsb
je
sbb
inc
mov
xchg
es
adc
nop
scas
psrlq
ret
pop
fnstenv
cmp
add
jg
cmp
gs
add
mov
add
lea
and
pushf
aaa
cmp
xor
cmp
sub
and
popf
cmp
mov
test
cmp
xchg
mov
gs
push
mov
les
xor
shlb
pop
cld
push
jecxz
out
and
dec
sbb
fs
testb
jb
mov
xchg
test
xorb
xchg
lock
or
aas
lods
fmulp
shll
in
aad
or
cmp
sbb
das
shrb
sub
aad
divl
movsl
fidivl
enter
rcll
sti
pop
xor
jnp
pop
or
dec
in
in
pop
dec
mov
lret
add
std
or
rorb
mov
std
xor
jns
mov
outsl
push
icebp
push
lock
mov
lret
mov
pop
clc
adc
sub
and
sub
imul
mov
sbb
pop
bswap
dec
xor
hlt
notb
rclb
cmp
lea
and
iret
movsl
int
adc
sub
cmpsl
sbb
mov
aad
ljmp
push
ljmp
dec
frstor
mov
add
sti
mov
mov
rclb
rorb
mov
lods
cwtl
call
push
and
das
scas
push
insb
hlt
inc
addr16
and
xor
add
add
lea
mov
mov
insl
scas
pop
ret
lods
cmc
sub
sbb
xchg
lods
pusha
pushf
fidivl
cmc
mov
in
cmp
or
jmp
inc
pushf
xor
hlt
dec
insl
loope
mov
dec
outsl
out
jge
sub
xlat
xchg
icebp
out
jae
jbe
dec
xchg
ja
les
call
fldl
loopne
sarl
add
and
lahf
inc
ss
movsb
popa
mov
sbb
rclb
mov
inc
mov
movsl
push
sbb
movlps
dec
sub
fadd
xchg
cmpsl
mov
sub
cmpsb
push
les
pop
inc
sub
test
ja
xlat
dec
xor
shlb
pop
and
cltd
mov
pop
push
fsts
jb
pop
enter
ret
aas
push
lods
scas
stos
cltd
mov
or
cmpsl
add
lds
cmpsb
gs
cmpsl
aad
adc
mov
call
popl
dec
xor
out
cmp
popf
stos
shll
push
daa
and
xchg
shr
cmp
adc
add
dec
add
sub
push
aas
lret
movsb
popa
imull
jne
addl
out
pushf
imul
add
rorl
cwtl
push
test
jl
xchg
out
ljmp
adc
jnp
cmc
mov
add
mov
nop
inc
inc
jg
adc
push
sub
movsl
scas
mov
lods
push
test
les
stos
enter
insl
divb
sbb
lock
data16
je
addb
mul
fistl
sahf
jecxz
aas
ss
aad
xchg
in
push
push
je
adc
fcoml
pop
jne
jns
gs
mov
fisubl
push
aad
dec
loopne
and
std
pop
inc
scas
add
adc
out
xchg
rcrb
mov
mov
cmpsb
rcl
testb
lret
stos
mov
inc
shll
lods
inc
inc
mov
inc
sub
dec
cli
dec
shlb
iret
lret
cli
ret
and
or
negl
dec
addl
and
cmp
popf
pop
sbb
out
mov
int3
out
mov
stc
add
adcl
add
mov
xchg
js
add
aaa
pop
out
push
stos
mov
xchg
dec
mov
mov
adc
cs
push
arpl
sti
mov
push
bound
or
dec
test
sbb
call
movsl
sti
jno
dec
inc
repz
push
sbbl
sbb
jae
mov
scas
and
xchg
mov
ja
push
or
popa
outsb
add
cwtl
adc
repz
inc
divl
out
divl
lcall
push
push
mov
testb
xor
pop
out
and
jb
cmp
inc
mov
push
inc
adc
insb
rcll
lods
cmp
gs
inc
fwait
mov
jne
daa
sub
or
sbb
adc
mov
push
imul
icebp
push
mov
and
imul
aad
dec
xor
mov
hlt
add
sti
out
xor
hlt
imul
inc
pop
loopne
pop
add
lods
pop
xchg
xchg
cmp
nop
call
jge
xor
sbb
add
jns
add
ljmp
mov
dec
xchg
icebp
imul
or
sbb
jnp
cmp
repnz
or
into
and
sbb
push
adc
inc
gs
pop
or
ja
pop
in
add
ret
pop
and
add
cs
pop
addl
xor
sbbb
mov
repnz
sub
xor
dec
or
mov
test
dec
call
sar
ja
and
scas
mov
mov
lock
sbb
jp
push
or
xor
inc
iret
push
outsl
and
cli
scas
jg
aad
mov
notl
mov
arpl
dec
mov
into
mov
stos
mov
jns
fwait
arpl
jb
rcr
add
jecxz
arpl
sbb
lret
pop
or
jne
cmc
and
int3
or
subb
mov
xchg
enter
inc
mov
dec
popf
stos
call
cmp
add
lahf
imul
mov
aad
leave
fdivrs
aam
int3
mov
mov
stos
mov
adcl
dec
dec
outsb
jb
adc
mov
xchg
dec
data16
xor
sbbb
pop
mov
mov
test
lods
shr
add
adc
cmpsl
test
push
mov
fnstsw
xchg
adc
bound
ds
cmp
pop
jno
mov
fnstsw
sbb
imul
mov
je
jb
loopne
fcomps
xchg
scas
mov
lret
xchg
mov
hlt
fiaddl
and
adc
sub
xlat
mov
jno
dec
clc
sbb
das
mov
xorb
jae
xchg
cli
dec
jp
loop
shll
out
jns
push
fs
aas
sbb
dec
fs
ljmp
mov
fidivrl
fildll
fildl
daa
dec
ror
fwait
in
mov
repz
dec
mov
iret
loopne
xor
add
hlt
js
in
inc
adc
push
jne
xorb
mov
push
aas
fildll
xchg
popa
and
push
jle
roll
adc
sbb
hlt
push
adc
mov
xchg
mov
test
dec
imul
adc
aaa
adc
adc
test
popf
fldl
dec
cmp
fdivrs
fwait
and
and
fcmovnu
sub
push
and
push
lock
dec
mov
or
pop
pmaxub
aas
ret
out
cmp
sahf
mov
and
rolb
jecxz
mov
mov
loopne
mov
xchg
stc
fsubrs
xchg
scas
aaa
aaa
sub
pop
push
in
lahf
xchg
sbb
adc
and
xor
gs
dec
outsb
stos
nop
mov
xchg
js
ljmp
pop
std
loop
sbb
pop
orl
pop
test
ss
xor
lret
mulb
outsb
push
ja
stc
enter
xchg
cld
sbb
and
inc
std
das
mov
jp
std
sbb
sub
jbe
xchg
jae
cmp
lods
rclb
outsl
pushf
add
iret
fists
fstpl
pop
jns
cld
aaa
mov
or
cmp
insl
mov
sbb
xchg
imul
cld
pop
jbe
mov
add
mov
lock
in
inc
popf
dec
or
xchg
xchg
mov
int3
xchg
lea
clc
shlb
add
gs
iret
negb
adc
lret
mov
pusha
push
mov
jle
ret
xchg
jle
mov
mov
jbe
rolb
shrl
add
dec
stos
pop
pushf
aas
outsb
sbb
jo
mov
mov
jmp
arpl
subl
jmp
pop
rcrb
mov
cs
xor
mov
fdivp
adc
sub
outsl
sub
jg
pop
imul
cmc
movsb
test
iret
push
sub
jp
inc
mov
inc
push
or
repnz
shr
or
movsb
ds
push
fcmovu
and
icebp
xchg
push
dec
test
mov
mov
jl
arpl
sub
sub
loopne
stos
sub
push
xchg
jge,pt
jg
mov
add
imul
ret
out
lock
std
xorl
fwait
push
cmp
pushf
push
sti
jmp
pusha
mov
pop
add
repnz
xor
jg
dec
push
pop
and
pop
rolb
xor
mov
cmp
mov
data16
cli
les
mov
inc
mov
call
cmpsb
cmc
push
add
leave
int
jo
xor
loopw
xchg
loope
inc
mov
push
out
mov
lods
xlat
or
adc
inc
inc
mov
in
lahf
mov
in
jle
push
jno
pop
outsl
mov
push
popa
or
xchg
inc
add
clc
cltd
mov
cmpl
jb
sbb
pop
and
mov
mov
fldl
push
cmp
shll
lods
sarb
add
ret
cmpsl
mov
mov
add
mov
add
pop
jg
cwtl
int
push
rcl
mov
mov
xchg
dec
mov
mov
add
cmp
jno
mov
iret
test
rclb
mov
insl
popfw
shl
sbb
jl
xor
jl
pop
pop
pop
adcb
sub
movsb
sbb
sbbl
nop
push
fisubrs
orb
pop
push
dec
outsl
adc
mov
test
cmp
add
xchg
hlt
mov
xor
jo
repz
out
mov
bound
sub
adc
inc
or
fstpl
mov
int3
mov
sub
sub
or
pop
mov
ds
pop
mov
out
xchg
test
je
add
xchg
fildll
outsb
lock
call
push
aam
push
fsubp
stc
rcl
mov
in
jne
lea
xchg
sub
in
cmpsb
mov
stos
int3
in
xor
daa
pop
cmpsl
cmp
mov
mov
cmovp
and
dec
sub
insb
pop
jmp
add
sub
mov
and
and
pusha
push
cmp
or
int3
mov
mov
mov
mov
vsubss
mov
or
lock
push
inc
mov
lahf
lods
adc
mov
out
enter
sbb
cmp
rorb
icebp
jno
sbb
inc
call
leave
dec
dec
xchg
daa
int3
pop
test
arpl
pop
cmp
xchg
adc
out
add
add
cmc
jne
cmpsl
rcrl
add
shr
lods
and
mov
push
ja
outsb
dec
cli
cltd
adc
test
mov
mov
rcl
jbe
movsb
fs
nop
les
inc
inc
sahf
sar
in
xchg
sub
pop
ret
faddl
push
xchg
add
insl
outsb
sbbl
ret
jne
cmp
insb
lcall
loop
aad
jmp
lcall
je
jge
lret
popf
sub
out
adc
cltd
mov
ljmp
aas
or
mov
inc
int
dec
cmp
in
mov
lcall
stos
mov
jp
push
cmpsl
jno
mov
mov
inc
fcmovnb
pop
inc
sbb
in
test
fistl
lock
movsl
test
cli
push
pusha
xor
test
fsubp
into
jno
cmp
mov
mov
xchg
xor
movsl
adc
and
es
dec
pop
or
lock
jp
aad
notb
sub
or
sarl
push
add
cltd
idivb
in
scas
jp
jno
push
cmp
mov
sbb
adc
or
pop
inc
aad
test
xchg
pusha
sub
out
xchg
lcall
rorl
jmp
xor
jo
in
add
cmp
movb
insl
inc
mov
adc
lahf
or
cli
adc
repz
and
outsl
push
sti
mov
stos
enter
cmpsl
decl
out
mov
repnz
lcall
iret
sub
pop
mov
jmp
sbb
cmp
shr
xor
pop
fidivs
jae
div
mov
in
jge
pop
sub
or
mov
pop
fsubl
jecxz
nop
fadd
pusha
dec
or
aad
cmp
les
adc
push
adc
sub
cmp
mov
add
data16
btc
inc
adc
dec
packsswb
mov
mov
mov
jmp
jg
xchg
sarb
dec
push
jge
mov
gs
shll
std
push
cmp
imul
stc
sub
sub
fwait
test
mov
nopl
das
pop
add
aaa
add
rolb
insb
outsl
in
lock
cmp
jmp
gs
inc
ja
iret
lock
sub
ja
inc
inc
ja
dec
lret
dec
stos
jne
adc
cmpsl
pop
and
ss
jnp
mov
jno
mov
and
std
popa
decl
and
shlb
les
cmpsb
sub
testl
mov
cwtl
arpl
mov
adc
push
jae
mov
jns
dec
dec
outsl
cmp
and
insl
push
jl
push
jecxz
cmp
lret
mov
loop
sub
sbb
xor
int3
xor
jg
cmp
mov
in
cmp
jmp
cs
inc
in
inc
inc
jnp
xchg
shrl
out
lret
sbb
in
ficompl
xlat
add
mov
mov
aad
jnp
das
adc
push
cmp
cmpsl
inc
out
lods
mov
in
bound
inc
ds
cmpsl
int3
orb
fst
aaa
lret
lret
mov
mov
nop
int
cmpsl
mov
lods
aaa
inc
push
push
xchg
frstor
and
pop
cmpsl
pop
lret
add
mov
sti
cmpsl
jg
stos
ja
sbb
lods
call
popa
push
leave
cmpsl
movsl
mov
sub
out
sahf
jecxz
repnz
jo
jmp
mov
pushf
adc
dec
in
gs
pop
call
push
inc
sarb
jns
pop
mov
jecxz
pop
mov
scas
push
loope
and
dec
xchg
fnstsw
cmp
dec
fistps
xlat
lods
jge
repnz
pop
pop
cmp
ret
and
sbbb
enter
cltd
add
pop
mov
icebp
mov
shl
sbb
daa
push
or
pop
adc
push
jne
imul
rorb
in
insb
jns
or
and
dec
xor
in
lds
sbbb
dec
insl
mov
int3
inc
pop
imul
cmp
or
cwtl
rcl
pop
rorb
nop
cvtps2pi
push
adc
xchg
cmpsl
fcoml
popf
scas
movsb
fwait
dec
stos
pusha
and
test
xchg
lcall
sbb
neg
das
push
jb
xor
push
and
jne
adc
push
int
pop
loop
xorb
scas
adc
mov
jmp
cld
ret
adc
cmp
jecxz
in
inc
lret
call
dec
out
jns
shl
jmp
or
mov
or
fsubrl
dec
into
and
ds
jge
mov
clc
aas
movsl
mov
and
js
xor
lcall
stc
sbb
mov
ficoml
dec
das
ficomps
ffree
xchg
adc
xchg
dec
xor
dec
push
pop
and
pop
int
pop
call
ror
jecxz
idivl
orb
xchg
nop
iret
mov
pusha
sahf
mov
fwait
mov
fsubr
jo
xchg
iret
sub
pop
mov
mov
sub
mov
inc
dec
rclb
cmpsl
outsl
cmp
popf
or
mov
mov
or
mov
int
addb
test
xchg
stos
add
inc
jg
dec
mov
mov
sub
shlb
add
in
sti
cmpl
push
icebp
jb
loope
xor
push
and
in
pop
mov
rclb
xor
adc
maskmovq
mull
sbb
jno
inc
loopne
sbb
ficoms
xchg
sbb
mov
inc
sbb
jno
pop
add
or
ror
cmpsb
mov
adc
push
push
dec
in
jne
cmpsb
xor
ret
adc
movsl
pushf
ja
stos
mov
xchg
jnp
xor
in
pop
and
fimull
xchg
dec
jae
add
mov
int3
sub
js
outsl
sbb
jne
sub
pop
pop
cmp
xlat
test
jb
add
jne
push
and
cmp
lret
mov
sbb
xor
hlt
ret
lds
sub
jbe
fldz
add
jl
cmp
xchg
aas
push
mov
aas
int
fcoms
adc
int3
sahf
ret
inc
mov
rcrl
xchg
push
sub
out
sub
insl
mov
lds
sbb
fldl
cmp
pop
or
mov
insb
add
jle
out
jns
lcall
loop
lods
push
cmpsb
xchg
pop
cltd
out
outsb
fwait
pop
cmpsl
jecxz
add
add
jnp
lcall
iret
mov
sbb
mov
mov
lea
inc
adc
mov
mov
es
jmp
push
jnp
aas
ja
hlt
repz
mov
push
enter
jnp
mov
add
cmp
sbb
pop
fisubrl
inc
pop
pop
inc
sub
lods
mov
rcrl
pop
sub
insl
int3
andb
inc
dec
je
scas
gs
sub
add
pop
out
mulb
out
jcxz
fldcw
adc
dec
nop
pushf
int
push
xor
shrl
push
data16
fiadds
push
cmpsl
xor
cltd
xchg
outsl
cmp
inc
mov
sub
cltd
out
es
xor
cmpsb
repz
adc
jo
add
push
inc
ds
arpl
sub
jl
inc
adc
mov
xor
add
ja
lods
gs
jge
call
addr16
pop
out
sub
lods
mov
push
aam
cmp
push
and
pop
xchg
dec
lods
fwait
ja
mov
mov
and
inc
pop
ficomps
sbb
sbb
in
in
jle
shll
or
insb
adc
mov
cmp
out
dec
cmp
mov
cmpb
es
inc
sub
insl
pop
les
jns
xor
stos
pop
jmp
cli
jnp
and
pop
cs
in
je
repz
testb
inc
cmpsb
imul
cmc
sbb
sbb
lahf
sahf
mov
pop
mov
orl
sub
mov
jle
jne
mov
sub
dec
xlat
test
popa
fcompl
pushf
mov
out
out
mov
adc
lds
sbb
out
fidivl
shr
lea
aad
mov
dec
or
cmpsb
gs
addr16
adc
lock
pop
adc
sbb
lret
daa
push
mov
repnz
or
cwtl
mov
lret
xchg
daa
stos
dec
dec
mov
aam
xchg
mov
out
cmpsl
into
les
fldt
xchg
testl
and
jo
shll
inc
test
or
jne
cmpsb
cmp
test
mov
jmp
pop
xchg
mov
cs
sahf
jp
ret
jns
mov
lret
pop
xor
mov
pop
int3
sti
dec
lods
adc
ds
in
pushf
jae
aas
adc
loopne
pop
andl
mov
cmc
pushf
cmpsb
xchg
adc
cs
xchg
pushf
xchg
and
jne
jp
jge
xchg
icebp
sub
sbb
or
aaa
rorl
call
sub
cmp
jo
jg
cs
nop
fcmove
fwait
adc
or
das
out
jl
mov
sub
in
fs
test
lahf
push
loop
cmp
dec
cli
pushf
loope
int3
jae
mov
sub
add
shll
fidivrs
insb
outsb
test
jne
push
jecxz
imul
adc
push
aas
ja
and
mov
push
mov
sbb
jne
cwtl
mov
in
stos
mov
cmpl
sub
fsubp
jne
repz
cli
xor
lret
mov
out
fcmovnu
sub
jb
or
push
jmp
out
popa
test
or
ds
scas
test
popf
lods
push
xchg
or
mov
std
pop
repz
call
xor
mov
cmp
loopne
movsb
adc
imul
push
cmpsl
js
xchg
inc
insb
inc
inc
xchg
out
mov
into
lods
push
xchg
je
mov
mov
out
fldenv
rorb
or
or
jno
cmc
xchg
int3
dec
mov
out
mov
idivl
dec
mov
cmp
roll
xchg
xchg
xchg
out
cmp
in
cli
in
out
jge
push
pop
lods
push
mov
js
subb
pusha
mov
stos
aad
mov
pop
cltd
jp
fisttpl
mov
aam
insl
push
pop
into
jmp
jne
and
imul
inc
cmp
sub
shrb
cmp
out
ret
nop
adc
add
stos
ret
xor
mov
adc
stos
mov
cmpsb
mov
cmp
jge
cli
aas
mov
jae
push
popf
and
pop
mov
aaa
jmp
in
ja
mov
stc
nop
mov
cwtl
fidivl
hlt
popa
xchg
add
adc
add
out
cld
xorb
cli
cwtl
roll
test
add
lret
mov
dec
in
push
mov
test
pop
push
dec
icebp
inc
sub
daa
mov
scas
movsb
push
mov
arpl
cmp
sbb
into
dec
scas
cli
mov
in
in
and
push
adc
push
cmpsb
xor
inc
inc
gs
push
jmp
cmp
pop
rcrl
movsl
scas
repz
out
mov
mov
imul
test
sbb
xchg
fcom
imul
popf
add
scas
push
data16
mov
add
cld
sub
and
bound
repnz
push
sbb
sbb
mov
loopne
add
in
adc
aam
repz
cmc
jmp
and
mov
inc
imul
cmp
cmp
fsubp
dec
test
adcb
ret
cmpl
sbb
mov
mov
sbb
jno
pushl
sbb
xchg
movsb
jl
sbb
and
add
xchg
push
fidivl
mov
or
inc
push
ds
lds
jle
mov
inc
adc
in
les
jle
lret
call
ds
adc
jle
fiadds
mov
and
dec
fisubs
std
cwtl
push
xor
sbb
mov
sub
inc
mov
punpckldq
dec
jns
mov
cwtl
mov
jp
stos
call
das
aad
cmp
leave
cltd
repz
ret
lods
xchg
add
js
xchg
leave
inc
mov
mov
jo
pop
mov
cmc
nop
ja
push
mov
fadd
mov
cmp
mov
sbb
xchg
push
bnd
add
dec
test
lret
sar
mov
mov
xchg
adc
push
addl
std
gs
imul
lods
hlt
in
mov
pop
jo
mov
daa
stos
sarl
push
fdivr
add
add
mov
es
mov
sbb
xchg
inc
cli
or
pop
test
ret
push
mov
sbb
mov
movzbl
or
mov
adcl
shrd
addl
mov
mov
xor
xorl
shr
sbb
mov
mov
xor
or
addl
shl
sub
mov
mov
cmp
mov
movl
jg
sub
mov
and
mov
subl
shrd
addl
mov
movzwl
xor
mov
mov
xor
xorl
shl
xor
or
xorl
shr
xor
mov
mov
mov
addl
mov
xorl
shrd
shr
cmpl
mov
mov
jmp
mov
jge
push
push
call
mov
adc
movl
and
and
mov
mov
mov
sub
imul
mov
mov
xor
xor
or
shl
imul
sub
jmp
mov
mov
shrd
mov
mov
xor
shl
xor
or
shr
mov
mov
mov
mov
shrd
shr
mov
mov
mov
xor
xor
or
shl
add
add
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
movl
mov
mov
movl
mov
movl
mov
movl
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
lea
mov
mov
mov
shrd
shr
mov
mov
shl
mov
xor
xor
or
mov
mov
xor
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
lea
mov
mov
mov
shrd
shr
mov
mov
shl
mov
xor
xor
or
mov
mov
or
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
lea
mov
mov
mov
shrd
shr
mov
mov
xor
shl
mov
xor
or
mov
mov
add
jmp
lock
cmp
mov
jae
test
add
push
sub
push
push
sub
scas
push
push
mov
scas
ret
add
pop
cmp
xchg
push
jge
hlt
mov
arpl
repnz
jo
mov
shlb
addr16
push
and
mov
push
pop
lea
loope
xchg
out
ljmp
ret
idiv
popa
adc
test
mov
data16
push
stos
cmp
loopne
and
insl
shll
in
sbb
fneni(8087
adc
mov
cmp
mov
cwtl
aas
jns
push
sub
pop
lahf
test
cmp
cmp
mov
mov
xchg
int3
push
mov
xchg
mov
ljmp
repnz
mov
pop
xchg
outsl
sub
push
mov
mov
in
push
inc
aaa
pop
bound
daa
jae
lea
in
fsub
mov
mov
jg
jno
mov
or
lods
and
jmp
xlat
dec
fnstcw
dec
lock
stos
mov
fsubs
inc
fnsave
push
sbb
out
out
add
aam
mov
xchg
cmp
outsb
adc
inc
ja
enter
push
test
lcall
jle
sbb
sbb
add
lds
clc
mov
or
test
dec
xor
stos
add
jns
imull
es
sub
mov
bound
pushf
jae
xor
fwait
popa
hlt
or
sub
sti
and
sbb
pop
inc
out
loope
sbb
or
cmp
mov
out
imul
mov
mov
pop
push
xchg
fisttps
mov
out
mov
push
inc
xor
mov
cmp
loop
xchg
pusha
sub
lods
idivl
inc
jns
icebp
addr16
lods
xchg
pushf
insb
cmp
std
dec
pusha
dec
mov
divb
sahf
cmc
xlat
xor
scas
jmp
ljmp
inc
pushf
aaa
xor
sub
xorl
movsb
mov
adc
lea
inc
inc
adc
and
add
jg
mov
mov
and
adc
inc
fwait
fs
push
aam
mov
mov
dec
mov
stos
std
lret
shlb
mov
push
cmp
call
dec
inc
or
stc
push
mov
inc
in
mov
jmp
xor
fidivrl
mov
dec
in
inc
or
ja,pt
in
inc
and
xor
sub
jecxz
loope
sub
adc
stc
insl
adc
int3
push
cmp
xor
shrl
insb
roll
jno
xchg
test
pop
cmpsb
dec
pushf
mov
fcoml
add
fwait
repz
pop
xchg
sahf
inc
insl
xchg
cli
insb
and
lcall
xor
fisubrl
mov
testb
ljmp
jp
jno
subb
sub
sub
cmp
lahf
xor
lea
cmc
ljmp
loop
jno
jns
jne
mov
stos
repnz
cmpsb
outsl
sarl
jp
xor
mov
sbb
mov
pop
xor
test
jl
jbe
bnd
outsl
test
pushf
lret
jno
jb
bound
jo
dec
mov
jb
jg
jp
lds
and
xchg
imul
sbb
jo
rcl
mov
into
add
leave
int
dec
out
jne
push
adc
inc
aam
mov
jmp
inc
shll
in
cmp
pop
jl
xlat
push
jp
jmp
lods
mov
jecxz
jb
orl
mov
sbb
les
decl
sti
and
jbe
out
testl
xchg
mov
mov
jae
sbb
pop
mov
aas
cmp
outsb
rorb
sub
mov
and
cld
push
dec
aam
sub
std
dec
add
dec
popa
sub
movnti
fcomp
sub
movb
push
jl
shll
sbb
mov
addr16
xchg
popa
jb
stos
jae
stc
and
add
cmp
popl
inc
mov
in
scas
sarl
jb
fs
inc
fiaddl
jl
in
and
fcompl
andb
add
sbb
aam
pop
jno
filds
jp
adc
adc
icebp
aaa
loopne
pop
fstpt
dec
scas
or
mov
sarb
and
lods
movsb
movsb
lods
lds
imul
out
arpl
or
mov
add
rcrb
or
jle
jo
xor
lcall
xor
fdivs
dec
push
push
pushf
mov
je
add
jmp
outsl
sub
popf
in
divl
cld
xchg
push
push
int
in
idivb
call
insl
and
cmp
push
and
jns
xchg
push
cld
fpatan
xadd
andl
push
adc
xchg
scas
xor
cltd
addr16
jbe
mov
lcall
xchg
sbb
mov
cmpsb
and
aaa
adc
and
lahf
int3
es
in
pushf
mov
mov
adc
aas
movsb
lock
not
pop
scas
cmpsb
adc
pop
push
and
xorl
sub
ja
xchg
arpl
add
sahf
xor
decl
iret
int
pop
xchg
inc
aas
and
roll
add
das
sbb
rorb
jne
inc
mov
adc
ds
out
or
add
subl
mov
shrl
rol
fsubr
mov
mov
imul
dec
xchg
sub
mov
call
mov
bswap
sub
outsb
dec
addr16
mov
sti
cs
out
das
lahf
add
or
int3
pop
int
fildll
mov
xor
leave
scas
pop
mov
cltd
ret
push
lock
cmpl
aam
jno
mov
add
inc
jnp
arpl
sub
pusha
jl
xchg
fldenv
out
pop
push
xor
popa
mov
mov
aam
fcoml
add
ds
jmp
orl
cmc
out
jl
pusha
out
inc
cmp
push
and
out
or
ret
cmp
or
cld
mov
in
mov
mov
jl
lret
pop
pushf
andl
push
cmc
adc
and
std
dec
dec
jo
aaa
fsubs
push
test
xorl
add
ret
inc
inc
and
cmc
cmp
ret
es
pop
jno
fstp
out
stc
lea
sbb
test
add
pop
lock
stos
mov
out
sbb
push
jmp
shlb
loop
loope
mov
idivl
enter
sahf
mov
sub
jmp
dec
icebp
jle
shlb
shrb
insb
cmpsb
and
rclb
adc
fs
cmp
mov
xor
xor
mov
push
xchg
insb
push
divl
ds
addb
insl
xchg
es
mov
dec
and
pushf
pop
mov
inc
mov
push
leave
sub
jl
outsl
push
pop
inc
adcb
sbb
mov
or
loopne
out
sbb
inc
pushf
ss
int
cmpsb
mov
movsb
cwtl
aaa
pop
fs
imul
and
mov
sub
cmp
pop
jno
or
push
push
or
cmp
and
fnstenv
mov
push
mov
scas
imul
jp
jo
mov
jnp
xor
stos
stc
js
aad
adc
jmp
lods
test
bound
jno
loop
push
jmp
inc
mov
sub
mov
mov
mov
cmp
inc
xchg
cmp
xchg
jg
mov
sbb
mov
cmc
mov
sahf
shll
in
mov
push
ficoml
sub
daa
sbb
out
fcompl
iret
jno
cltd
loopne
add
in
in
loop
arpl
mov
mov
repz
cmp
cli
and
aaa
shr
sub
xchg
les
push
push
sub
fcompl
mov
inc
shrb
push
dec
xor
or
jecxz
repz
lds
sub
mov
cld
clc
arpl
in
pop
nop
mov
subb
fsts
xchg
mov
call
lcall
enter
movsb
insb
xor
and
stos
addb
adc
and
movsb
mov
inc
jae
hlt
shl
aaa
cmp
divb
popw
sub
or
js
sahf
ja
sbb
fdivs
inc
sub
shl
inc
jb
sub
mov
ret
mov
dec
push
xorl
sbb
adc
scas
jg
inc
movsb
mov
arpl
add
out
outsb
into
mov
cmpsb
lret
es
aas
iret
or
repz
mov
idivl
and
es
adcb
cmp
xchg
sub
leave
fcom
fwait
divl
push
pop
lods
xor
inc
rcr
and
cltd
pusha
push
cltd
lock
movsl
cmp
sub
fld
xchg
mov
inc
dec
insb
stos
or
dec
cld
mov
or
xchg
or
aam
leave
popf
jmp
xor
mov
xor
ljmp
movsl
nop
aam
dec
fwait
push
mov
daa
dec
push
fnstenv
push
dec
pop
mov
xchg
xchg
and
sbb
xchg
mov
xor
sub
mov
mov
xor
lahf
pop
lock
jecxz
pushf
inc
test
and
aam
or
xlat
jae
testb
mov
sbb
or
repnz
test
lret
sbb
push
jg
loopne
cmc
jp
cmp
xlat
xchg
out
push
movb
shlb
pop
lahf
xchg
or
outsb
mov
add
int3
sub
or
loope
mov
mov
lret
repz
in
jecxz
or
xchg
and
xchg
pop
dec
and
dec
push
lods
add
pop
jno
push
jo
dec
in
imul
lods
dec
lcall
inc
shl
notl
fsts
or
add
and
cmpsb
cmp
arpl
iret
imul
pop
mov
dec
pop
add
lea
mov
sahf
lea
iret
mov
ja
sub
sub
xchg
ja
nop
lds
cltd
jg
dec
sbb
cmp
pop
aad
inc
sti
sub
push
and
sub
mov
test
sub
mov
in
and
das
sarb
or
inc
add
imul
inc
push
jno
sbb
into
and
cltd
pop
outsl
adcb
test
sbb
outsl
push
cli
inc
jne
pop
imul
mov
aad
inc
dec
xor
fimull
lahf
xchg
inc
inc
or
aam
shl
test
loop
mov
pop
xchg
and
pop
ds
clc
cmp
fistpl
sbb
cld
lds
repnz
cmp
pop
ret
int
adc
mov
dec
iret
int3
push
pop
subl
push
add
aam
push
or
sbb
out
fs
cmc
mov
cmp
dec
mov
out
mov
pop
cltd
sarl
je
ja
pop
xchg
xchg
and
push
inc
push
es
mov
aam
cwtl
lcall
ljmp
sub
and
mov
pop
push
pop
popa
xor
jl
and
mov
or
clc
jns
in
adc
inc
stc
aas
add
ds
mov
stos
clc
mov
push
clc
std
xchg
pop
dec
out
andb
mov
mov
mov
fstps
jl
in
pop
push
adc
aaa
push
and
jbe
loopne
fstsw
jae
fldt
add
and
inc
add
lods
cwtl
ljmp
push
pop
data16
mov
xor
je
data16
inc
mov
aad
xchg
push
mov
stos
into
movsl
mov
es
dec
hlt
outsb
lret
add
mov
jg
daa
pop
pop
loopne
fistpl
jb
mov
jne
incl
loopne
sub
adc
fnstenv
add
push
in
push
xchg
lds
or
xor
sbb
fisttpll
testl
pusha
xchg
shlb
adc
shrl
xchg
xchg
cmp
lock
push
out
pop
les
or
fld
icebp
sbb
pop
pop
or
cmp
cmp
xor
shll
dec
adc
mov
sbb
fidivrs
xchg
sub
xchg
cmp
out
rcll
cmp
sahf
mov
pushf
sub
dec
push
push
and
lret
das
lret
int3
std
sbb
cmp
sti
push
dec
push
outsl
outsb
hlt
mov
fildl
clc
add
mov
mov
sbb
jae
mov
xor
loopne
movsl
aad
pop
bound
mov
loopne
out
popf
lcall
enter
es
xor
xchg
in
push
cmp
push
push
or
mov
sti
mov
aas
sbb
addr16
nopl
sahf
and
mov
ljmp
push
repz
xchg
aaa
mov
mov
iret
in
pop
pusha
shll
jo
enter
outsl
frstor
test
sbb
fsts
mov
mov
jecxz
int
scas
pushf
orl
fucompp
push
xor
mov
dec
mov
cwtl
or
sbb
aaa
stos
mov
or
cmpsb
add
dec
gs
add
stc
adc
push
push
jne
dec
mov
fdivrs
xchg
cld
mov
cli
push
cmp
mov
adc
sahf
mov
and
xor
jo
aas
cwtl
dec
lock
or
loope
pop
inc
mov
xchg
jle
ss
push
jge
push
mull
in
outsl
mov
outsb
push
out
and
sarl
gs
inc
leave
jge
xor
int3
loopne
aam
arpl
ds
into
xchg
sbb
fstpl
xchg
out
xor
scas
jae
into
mov
mov
xchg
fdivr
outsl
mov
sub
jl
fstps
dec
or
or
mov
jge
mov
or
add
adcb
mov
stos
in
mov
je
cli
mov
mov
dec
idivb
movb
fwait
mov
push
popf
mov
scas
mov
stos
cmp
pop
dec
in
push
jb
sub
and
test
orl
pop
sbb
mov
mov
jecxz
or
jg
movsl
mov
loope
adc
mov
ja
rcrb
fldcw
fsubl
jnp
fmuls
cmp
and
jae
sub
bound
sbb
mov
sub
push
mov
and
imul
xchg
sbb
out
ss
scas
imul
std
mov
xchg
add
mov
jp
xor
aas
mov
sbbl
subl
push
cs
fmull
les
jge
ret
ret
and
push
test
mov
pusha
pop
jnp
inc
aaa
mov
push
mov
pop
add
sahf
xchg
mov
repz
dec
aas
xchg
mov
pop
add
push
aas
clc
pop
pop
addl
ror
js
mov
call
jns
stos
std
icebp
shlb
inc
dec
mov
cli
mov
outsl
pop
push
cmc
pop
xchg
mov
sti
mov
std
lea
add
jbe
dec
clc
int
dec
gs
popa
repz
es
mov
push
movsb
push
in
and
test
xchg
js
mov
popf
cltd
cmc
sub
push
mov
mov
nop
insb
cmp
cmp
popf
mov
xchg
inc
cli
sbb
sub
jecxz
movsb
das
mov
mov
pop
mov
lahf
outsl
sbb
sbb
push
dec
les
add
mov
hlt
outsl
sbb
xchg
jb
inc
jg
and
mov
pop
pop
imul
push
mov
xor
test
xchg
mov
add
cmc
in
lock
popf
cmp
mov
push
jne
and
jg
out
stc
lds
lret
ljmp
out
cmc
out
icebp
lods
cmp
sahf
mov
les
add
dec
jnp
popf
add
out
adc
into
adc
lret
pusha
cmpsl
inc
bound
jp
push
pop
push
cmp
cli
cmc
xor
mov
in
mov
mov
test
inc
cmpsl
add
lret
xlat
xor
mov
outsl
je
or
out
sahf
shrb
dec
test
fs
sub
adc
jnp
clc
fstl
cmp
js
push
loopne
int3
inc
mov
and
test
pushl
jne
scas
shll
clc
and
push
or
mov
dec
rcrl
leave
mov
rcll
repz
jecxz
inc
add
or
jmp
push
dec
jo
lret
pop
fsubl
repz
xlat
arpl
sbb
pop
addl
ret
fsubrl
or
inc
sbb
fidivs
xor
sbb
test
mov
in
cmp
orb
inc
sti
mov
sbb
loope
inc
outsb
push
jns
pop
sub
mov
mov
or
push
popa
mov
jbe
cwtl
fadds
mov
fidivrs
push
and
addr16
xor
xchg
and
mov
inc
dec
sbb
mull
sub
mov
pop
loop
incl
lea
inc
jg
loop
lds
push
or
xchg
jnp
and
lret
mov
mov
sysret
xchg
cmp
mov
icebp
push
jmp
adc
loope
mov
aaa
and
ret
push
leave
negb
out
jl
xchg
xchg
push
imull
push
push
lahf
sarb
lock
cmp
shrb
pop
mov
enter
pop
xchg
mov
jo
imul
jmp
das
fwait
or
jge
jmp
in
jecxz
mov
fisttps
push
xchg
xchg
mov
and
dec
ret
lds
jo
push
popf
dec
out
jne
loopnew
cmc
mov
cmp
iret
sti
shl
mov
mov
cmp
addr16
adc
push
repnz
push
leave
inc
jo
test
ja
cmp
push
cmc
jne
sbb
repz
lcall
int
stos
push
jl
sbb
jo
sbb
enter
cli
in
xchg
fnstenv
mov
fdivrl
xchg
insl
lods
xor
jno
addps
sbb
nop
movsl
cmp
jnp
lcall
cmpsb
pop
ss
orb
daa
je
jmp
push
sub
ret
mov
and
sub
mov
cli
and
mov
add
fwait
das
pop
in
sub
loop
mov
repz
xor
xor
fbld
inc
movb
and
outsb
scas
mov
push
xchg
data16
jb
and
les
fsubr
aad
pop
pcmpgtd
add
enter
popf
fstpl
cmp
ja
mov
sbb
icebp
pop
shlb
and
sub
xor
test
mov
cmp
mov
cmc
dec
jae
aaa
inc
aam
scas
mov
dec
repnz
sub
int
outsb
mov
ds
leave
outsl
stc
xchg
pop
sub
cmp
test
frstor
imul
mov
mov
push
cmpsb
xchg
jle
out
add
jo
or
mov
dec
ret
xchg
lret
insb
cwtl
or
push
sub
and
or
push
adc
jo
mov
scas
nop
arpl
pop
mov
mov
xor
jno
jmp
jge
lds
push
xor
mov
addr16
or
sbb
adc
pusha
and
sub
fidivl
jle
fmuls
je
jbe
neg
jle
sub
cmp
sub
add
adc
mov
popf
inc
xchg
adcl
andb
xchg
popa
jmp
loop
into
in
jp
push
loope
inc
dec
add
inc
pusha
sbb
pop
fsubs
mov
mov
movsl
cmp
enter
insl
jge
xchg
fwait
xchg
iret
jmp
push
push
into
adc
popf
and
lcall
lahf
cmp
xchg
sbb
fisttps
call
xlat
mov
push
jmp
push
imul
fisubl
in
mov
or
inc
sub
jne
das
sub
add
cmp
dec
call
out
and
and
adc
sbb
inc
pop
inc
add
jb
pop
call
lods
pushf
fisubl
cmp
dec
jge
dec
loopne
std
dec
lahf
mov
outsl
cltd
sub
in
rol
mov
sub
cltd
ss
fists
add
xchg
mulb
ret
dec
ss
mov
jne
rcrl
fwait
outsb
sahf
pop
jmp
cmpsb
lea
mov
pop
dec
pop
clc
lret
push
inc
sub
jnp
mov
or
add
int3
test
test
mov
andb
loopne
orb
movsb
lods
loope
cmp
adc
ss
stos
aad
out
jb
inc
sub
dec
arpl
negb
pop
orb
aam
pop
test
inc
xchg
clc
push
fidivrl
lcall
jae
ss
xchg
and
jp
jmp
push
mov
lods
mov
add
mov
jl
adc
xchg
addw
jno
in
mov
jp
std
pop
aaa
mov
idivb
inc
lods
mov
pop
jno
push
std
popf
test
andl
insl
xchg
scas
cmp
insl
dec
xchg
pop
mov
iret
mov
mov
sub
push
push
insl
sub
inc
movsb
mov
mov
into
lock
push
mov
adc
rcrb
in
or
inc
mov
daa
jg
out
mov
sti
push
out
bound
popl
xchg
cmp
jbe
jns
es
jge
jecxz
lods
das
adc
enter
sti
dec
cmpsb
movsb
scas
fsts
xchg
cmpsb
xchg
add
cmpsl
or
push
mov
ds
and
adc
jmp
cmp
dec
add
push
cmp
push
cmp
clc
inc
adc
cld
sbb
sub
lcall
add
push
hlt
and
dec
fucomp
arpl
or
mov
int
mov
lret
popa
lods
test
push
mov
mov
jns
shl
jae
stos
fninit
and
xchg
sbb
loope
mov
stos
push
pushl
push
cmpl
xlat
mov
and
aad
push
dec
pop
stos
xchg
mov
push
stc
pop
lret
loopne
scas
adc
jmp
into
repz
out
mov
mov
cli
js
into
mov
or
repnz
cld
push
jb
push
fcomps
in
lahf
jno
or
ret
jmp
dec
push
test
pop
pop
pop
roll
ljmp
jnp
filds
leave
push
push
daa
xchg
out
insl
adc
stos
push
repz
cld
cmp
fnstsw
leave
and
and
pop
push
cs
aam
rcr
jo
cmp
add
fcomps
sub
xacquire
bound
mov
je
lret
lahf
testl
in
xchg
pop
push
jns
outsl
imul
lds
mov
mov
pop
movsb
imul
lret
lcall
stos
xchg
xor
jl
xchg
jnp
outsl
testb
out
push
ljmp
xchg
lea
js
push
cmp
push
negb
mov
jl
ja
pop
ss
daa
ds
cmp
lea
stc
mov
fcmovne
popf
adc
loope
lahf
sar
lds
lods
jmp
sbb
or
aas
adc
std
jnp
vmwrite
std
fmul
loopne
push
addb
icebp
scas
mov
cmpsl
fdivrs
std
loop
into
test
and
adc
inc
out
push
inc
inc
dec
xchg
frstor
arpl
sub
xor
xor
es
jne
jne
popa
leave
or
fstpt
mov
mov
mov
and
das
das
jae
or
in
testb
mov
push
mov
cmpsl
and
xchg
adc
arpl
push
mov
xor
cmpb
mov
mov
pop
mov
inc
pop
sahf
aad
jne
push
in
ja
cmp
jo
mov
ljmp
xchg
inc
mov
and
lea
xchg
or
pusha
pop
shrb
xor
or
movsb
inc
lahf
mov
dec
movsl
daa
int3
pop
pop
mov
push
push
or
not
and
lret
cmp
push
mov
gs
xor
jno
shll
daa
mov
das
dec
popa
movsl
push
pop
aas
sbb
out
rcrl
enter
fcompl
mov
mov
mov
cmovs
jge
scas
sbb
rolb
fcomp
arpl
rcl
push
dec
jo
xchg
mov
jle
sbb
negb
dec
add
and
test
ljmp
jb
mov
ret
or
sarb
fdivrs
cmp
push
jne
mov
mov
pop
ss
inc
push
in
add
mov
hlt
testb
jno
xchg
out
imul
lods
imul
cmpl
test
repnz
sub
lret
je
mov
ret
mov
pop
sub
pop
inc
adc
iret
and
andb
outsb
jl
fisubl
jo
mov
lcall
popf
pop
loopne
lds
shlb
fstps
lds
pushf
and
cltd
mov
rclb
mov
mov
hlt
popf
jecxz
orl
mov
jae
mov
scas
add
push
mov
fisttpl
pusha
xor
repz
mov
das
xor
jmp
push
jp
push
les
jnp
dec
in
mov
xchg
pop
shrb
xor
imul
add
cmp
sti
mov
je
push
adc
outsl
and
lret
lret
notl
cwtl
arpl
psubd
jl
dec
movsl
gs
pop
arpl
inc
fistpll
scas
daa
jno
mov
popf
xor
inc
mov
ljmp
mov
jl
iret
xor
push
in
pushf
testl
push
bound
sbb
fucomip
in
mov
rcrl
xchg
ret
mov
mov
les
mov
out
jl
into
mov
jno
or
mov
adc
or
jnp
nop
int3
dec
jb
push
enter
xor
scas
cmp
test
jmp
mov
dec
mov
add
or
pop
lock
sbb
cmp
adc
cmp
pop
roll
mov
jle
leave
lds
cmpsl
mov
cmc
jnp
mov
sbb
shl
cmp
pop
push
fs
and
adc
inc
lea
fsubrs
xchg
je
or
in
outsb
ret
gs
push
mov
mov
xor
xchg
jbe
dec
aad
stos
dec
mov
jecxz
mov
xchg
add
dec
mov
mov
add
mov
push
jl
push
test
jne
decb
xor
insl
insl
popl
push
shl
adc
xchg
adc
jp
fiadds
fisubs
gs
insl
iret
inc
push
insl
sbb
xor
popa
cmp
imulb
or
outsb
mov
and
sub
xlat
mov
lret
imul
mov
sub
pop
jg
sar
pusha
aas
lcall
jbe
pop
add
dec
mov
xor
push
or
sar
sbb
mov
daa
insb
and
fmull
daa
mov
add
jecxz
mov
sub
fwait
push
cmpsl
inc
into
test
lcall
mov
test
mov
lock
sbb
mov
push
mov
imul
iret
stc
mov
cld
ret
mov
fnstsw
push
lods
pop
cmp
jae
mov
mov
xchg
and
sub
inc
mov
lods
enter
add
movsb
xor
xor
or
lea
mov
mov
shl
mov
shrd
shr
mov
mov
xor
xor
or
mov
shl
mov
mov
mov
or
jmp
push
cli
imul
inc
iret
adc
ja
je
jno
push
push
sub
push
push
push
loopne
out
dec
ret
and
xchg
out
dec
xchg
lret
data16
in
jb
cmp
mov
or
daa
xor
mov
jne
inc
cmp
sbb
lret
sbb
mov
mov
cmpb
jmp
out
adc
pop
mov
shl
or
pop
adc
mov
loop
sbb
pushf
pop
sub
sub
pop
arpl
jecxz
arpl
add
call
jbe
add
clc
es
fidivl
ja
pop
xor
mov
sub
sub
jno
stos
js
das
dec
repnz
aad
pop
ss
ja
push
pop
clc
ret
sbbb
je
or
cli
xor
test
sbb
inc
loope
mov
lods
jb
mov
jp
loopne
inc
pop
xor
push
xchg
cmp
jle
adc
test
cmp
xor
orl
mov
adc
das
fdivp
icebp
stc
and
cmp
cltd
mov
sub
dec
mov
jae
mov
or
in
add
jo
enter
fsubs
mov
test
fwait
and
ret
dec
and
add
and
push
stc
add
add
sahf
mov
and
fdivr
mov
pop
mov
xchg
or
or
stc
push
mov
fsubrl
or
jae
and
mov
ss
ljmp
imul
mov
mov
fs
sbb
lea
and
cmpsl
jbe
cltd
outsb
std
sub
shl
pop
aam
mov
fs
xorl
sub
jns
mov
movsl
jo
inc
andb
les
mov
dec
loopne,pt
aad
mov
pop
popa
push
add
std
enter
rcrb
push
fstps
out
insb
bound
sub
outsl
rcl
fcompl
mov
fisubrs
inc
cmp
adc
pop
xlat
cmp
jns
mov
dec
dec
jae
sahf
or
push
stos
test
int3
js
addr16
loop
hlt
cmp
pusha
shll
fstpt
xchg
jnp
popa
pop
lret
adc
or
add
jmp
cmp
add
roll
imul
cmpb
add
cmp
daa
lcall
sbb
mov
mov
cmpsl
mov
mov
insb
addr16
push
into
inc
in
sub
adc
shll
js
xchg
sbb
jo
mov
outsb
imul
push
sub
adc
mov
fnop
inc
jecxz
pop
add
jge
scas
adc
pop
push
iret
daa
addr16
xchg
mov
cmp
or
jle
sub
adc
out
lea
outsl
cmp
ret
push
bound
push
pop
jp
xchg
push
pop
mov
push
xchg
adc
mov
int
mov
jp
mov
enter
xor
dec
ja
fiadds
xor
psrld
or
test
dec
pop
mov
stc
idivl
mov
rclb
sbb
fcomps
inc
jecxz
inc
adc
push
fidivs
add
subl
test
add
sub
faddp
sub
mov
push
xchg
shlb
nop
pop
pop
fdivl
mov
add
xorl
gs
jl
cmc
hlt
mov
pop
icebp
repz
aad
aad
mov
and
mov
idiv
lret
add
ds
jbe
mov
jl
bound
pop
pop
stc
enter
pop
fsubrp
dec
or
jmp
shr
fwait
sbb
ljmp
pushf
das
xor
dec
and
and
mov
jno
divb
mov
and
xchg
cmc
imul
scas
js
jmp
push
sbb
movsb
sahf
aas
rol
stc
movsb
cld
das
xor
ss
lea
iret
xor
xchg
stos
push
mov
fdecstp
idivb
xor
mov
cmpb
into
push
out
movsb
mov
in
jae
xchg
jo
in
stc
out
inc
cmp
mov
jo
mov
xchg
pop
mov
jp
cmpsl
mov
inc
mov
je
xlat
pop
push
mov
sub
sub
xchg
mov
sbb
mov
xchg
mov
mov
sbb
push
ja
fistpll
fdivrs
sbb
ds
mull
iret
and
push
iret
pop
lods
outsb
jb
mov
stos
jmp
in
stos
rcrl
gs
cli
fsubrp
sub
xchg
push
jno
rcll
lods
dec
and
rclb
icebp
leave
mov
test
push
and
cs
push
jns
dec
scas
sbb
pmullw
fildl
mov
repz
jb
pop
fisubrs
test
inc
movzwl
push
ljmp
add
xchg
es
xor
add
jge
xchg
push
stos
jg
sti
or
jb
jnp
mov
leave
push
adc
ret
sti
mov
outsb
pushf
or
xor
stc
test
outsb
xchg
mov
int
das
rcrl
push
popa
pop
les
xchg
xchg
add
test
inc
and
arpl
repz
add
jmp
dec
fistpll
aam
add
adc
mov
lea
pop
stos
inc
jl
shr
and
enter
add
adc
jg
mov
fs
shr
shlb
xlat
andl
fisubl
mov
loopne
pop
out
into
adc
sub
pop
cwtl
imul
scas
cwtl
pusha
or
and
or
mov
add
and
sub
test
push
inc
inc
adc
test
lret
inc
jns
cld
cs
adc
mov
dec
xchg
mov
test
jle
sbbb
lret
movsl
in
leave
pop
icebp
push
mov
pusha
out
testl
test
pop
sarb
cmpsb
push
icebp
loope
mov
sbb
bnd
ljmp
mov
lods
fwait
mov
sbb
jno
sub
xchg
inc
movhps
xor
dec
dec
daa
mov
loope
mov
xor
sti
cli
mov
jae
mov
jp
ja
dec
pop
xor
ja
jge
cmp
adc
rorb
xchg
xor
inc
iret
sbb
mov
ret
and
sub
arpl
sbb
jno,pn
cwtl
dec
mov
xlat
cmp
inc
lds
out
das
movsl
rdtsc
cmp
addr16
cmc
lock
lods
or
daa
adc
repz
xlat
mov
rcrl
xchg
inc
out
pushf
push
mov
lods
fmull
mov
xor
xor
in
fwait
aam
loop
sar
je
data16
or
push
sbb
je
sbb
insb
xchg
aam
outsb
add
sub
jge
jne
xchg
in
mov
repnz
add
scas
repnz
dec
jns
sbb
lret
jae
aam
icebp
fnstcw
mov
mov
adc
ss
mov
sub
idiv
rcll
mov
dec
int
mov
ret
nop
gs
pushf
add
lret
subb
adc
insb
jp
xchg
adcl
sbb
push
fnstcw
mov
sub
sti
std
loope
jno
inc
sub
repz
inc
add
push
sub
test
xchg
jae
lea
xor
enter
mov
out
xor
mov
arpl
dec
sbb
daa
pop
xchg
insl
lds
mov
addr16
mov
loope
pop
adc
jg
mov
inc
pop
mov
sti
mov
call
pop
repnz
imul
sahf
mov
jae
lret
repnz
dec
sub
pop
sub
mov
fnstsw
mov
xor
xchg
xchg
andl
jle
outsb
lods
cmp
aaa
dec
and
insl
inc
or
ror
dec
xor
xchg
sti
pop
sti
fdiv
fisubrs
rcrl
push
sahf
es
inc
insl
adc
mov
ja
or
mov
cs
std
std
mov
fsubrl
testl
popf
mov
mov
cmp
sub
shrl
xchg
xor
and
leave
popf
jo
xor
aas
dec
or
and
xor
bswap
mov
xorl
into
jno
in
mov
nop
mov
jmp
out
xchg
adc
dec
imull
dec
jns
xorl
lock
iret
cli
je
dec
mov
jae
xchg
pop
arpl
jp
cmp
or
sub
mov
out
clc
or
in
into
test
adc
add
gs
push
xor
push
lods
call
ret
sarb
in
dec
je
popf
or
pop
lret
clc
pop
add
fistpll
daa
jns
xchg
mov
push
negb
cmp
or
das
sbb
ds
add
mov
imul
cs
out
sub
xchg
fisttpll
leave
dec
in
cmp
out
daa
dec
addb
dec
mov
mov
xchg
popl
test
mov
mov
xchg
enter
inc
cmpsl
imul
mov
in
jb
out
loopne
loope
aas
in
sub
push
mov
inc
fabs
fbstp
subb
and
jbe
add
push
or
loopne
mov
sbb
sbb
push
push
dec
mov
inc
jnp
push
jnp
inc
iret
xchg
pushf
jle
addr16
adc
pushf
popf
scas
ss
xlat
push
xchg
inc
lahf
mov
sub
loopne
push
sarb
push
or
test
push
jge
jns
push
mov
das
cmp
add
adc
in
cwtl
cld
arpl
or
es
dec
cmp
dec
pusha
sahf
sti
pop
int3
es
dec
adc
test
frstor
mov
outsb
dec
sub
mov
dec
test
clc
mov
mov
test
sub
in
jnp
vhsubpd
mov
jne
stos
xor
cmp
push
movsl
rclb
psubb
in
add
add
cs
mov
cmp
fiaddl
xchg
mov
movsb
sub
out
test
add
xor
xchg
outsb
push
adc
mov
pop
ljmp
or
cmpsl
xchg
xor
dec
fwait
insl
aaa
ljmp
inc
imul
sbbb
mov
xchg
outsb
cmp
rcll
in
ret
mov
mov
xlat
adc
xchg
je
enter
mov
mov
mov
mov
xchg
mov
sahf
mov
out
movsl
cmpsl
out
lds
test
jne
hlt
test
int3
or
adc
cwtl
lret
add
cmp
or
mov
imul
mov
js
test
adc
cmp
sub
xor
mov
inc
pop
cmp
pop
push
in
jne
lret
repz
or
cmpsl
daa
dec
mov
xchg
sub
mov
rorl
mov
popf
pop
or
test
in
popf
cmp
es
test
scas
jp
mov
sbb
aaa
popl
orb
insl
jecxz
das
testb
repnz
cltd
fstpl
sbb
mov
push
insl
aaa
dec
jno
into
loopne
in
push
arpl
ds
add
mov
xor
pop
lock
push
mov
mov
lock
mov
cmp
xchg
inc
je
popf
mov
xchg
fsubl
xchg
ret
lahf
jp
and
aad
fcomi
bound
ss
movsb
jge
push
nop
mov
cmp
cmp
shlb
mov
rorb
adc
mov
sub
iret
mov
inc
xor
add
call
add
in
pushf
sbb
in
fbstp
sarl
cmp
outsb
mov
inc
rep
dec
and
mov
out
pop
lock
dec
mov
mov
inc
cmpl
je
js
dec
mov
add
arpl
mov
cmc
push
sub
jl
fdivr
adc
test
std
or
pop
xchg
scas
insl
ficoml
pop
std
ss
and
push
mov
pop
mov
pop
adc
mov
outsb
or
mov
movsl
in
dec
push
cmpsb
imul
pop
dec
test
xchg
js
mov
out
xchg
jae
filds
sbb
popa
xchg
dec
popa
cmp
mov
add
popl
pop
ret
ret
inc
add
cli
stc
cli
add
test
and
decl
or
adc
add
fimuls
sti
int3
push
sub
pop
cmp
imul
sbb
pop
sbb
adc
imul
xlat
cmp
test
push
test
cmp
int3
mov
sub
stc
sub
push
leave
aaa
stc
mov
sub
ret
les
jmp
dec
mov
adc
sub
pop
pop
fcomps
std
lods
add
mov
xor
sbb
int3
push
stos
pop
mov
jb
insb
and
ret
std
xchg
fidivs
aas
xchg
sub
movsl
add
in
outsb
scas
out
es
sahf
mov
cmp
pushf
in
fistpl
xchg
xor
lods
push
cmpsb
das
and
cmp
adc
popa
insl
imul
cmp
stos
jo
or
js
lea
daa
aaa
jle
and
xor
pop
sbb
push
jmp
xlat
or
lret
test
cmp
mov
and
inc
xchg
loope
or
insl
sbb
and
sbb
lock
outsb
jne
push
xchg
loope
push
sti
jp
fwait
adc
mov
mov
xchg
je
lock
or
lods
scas
xor
jns
cmp
xchg
shrl
pop
aad
cwtl
mov
aas
cwtl
mov
xchg
xor
sbb
jg
inc
xchg
mov
pop
shl
repz
call
aaa
arpl
pop
push
nop
pop
out
mov
mov
in
hlt
sub
dec
and
sbb
mov
push
pop
stos
hlt
add
lock
aaa
dec
pop
aas
imul
push
mov
and
lcall
inc
mov
pop
iret
hlt
and
cmp
rclb
xchg
test
aad
jno
dec
cwtl
loop
add
mov
popl
mov
jl
enter
into
xor
fistps
bound
dec
test
insl
data16
sub
sarb
jle
xchg
or
rdtsc
mov
push
adc
ud0
mov
lds
ds
xchg
lcall
mov
les
jne
adc
push
or
jo
lods
cmp
inc
inc
jge
add
stos
jl
unpcklps
push
aam
mov
pop
and
xchg
fldenv
hlt
jbe
clc
cmp
lret
push
rorl
cli
xor
inc
xor
or
je
cmp
mov
xor
je
and
insl
test
not
xchg
imulb
jno
cs
mov
sbb
stc
mov
out
mov
push
cmp
sub
test
push
ret
sahf
xchg
jns
mov
pop
sbb
mov
nop
mov
dec
mov
mov
xor
sub
in
add
rcrb
jp
repnz
test
inc
pop
or
icebp
adc
fwait
mov
dec
aaa
mov
gs
push
sbb
sbb
andl
leave
lea
popa
daa
jp
add
fwait
xlat
inc
or
sub
imul
imul
dec
pop
fistpll
xor
loop
icebp
lahf
insb
imul
pop
lock
jg
cltd
push
shl
add
xchg
adcl
jmp
push
push
loop
lret
flds
add
pop
sarl
imul
shll
sub
movsb
lcall
sbb
imul
fmull
pop
mov
pop
aaa
adc
mov
push
mov
push
xor
mov
xlat
push
bound
add
decb
outsl
mov
cld
cmp
in
xchg
lods
in
mov
mov
jb
pushf
int
jbe
or
lea
add
mov
cmp
inc
jno
xor
push
lods
xor
sub
jns
out
lds
lret
cmc
ret
fsubp
add
mov
jecxz
ljmp
mov
cmp
out
sub
rorb
fcmovnbe
aad
xchg
cmpsb
mov
insb
jmp
leave
dec
jp
or
add
pop
das
stos
mov
imul
cli
test
mov
pop
or
daa
scas
inc
fxch
cmp
inc
push
cs
pop
sbb
lret
mov
ds
and
out
inc
rolb
ror
adc
mov
ret
push
push
xchg
dec
cld
loope
cmp
inc
mov
cmpsb
xchg
push
cmp
je
sbb
in
popl
insl
jmp
enter
inc
int
jmp
xchg
and
inc
pusha
divb
push
inc
jne
sub
and
or
mov
into
enter
pop
jmp
sbb
dec
cmp
jae
movsb
in
fidivl
out
je,pt
sbb
dec
push
mov
ss
movsb
cli
sbb
ret
xlat
lret
sbb
adc
mov
ja
decl
sub
lahf
dec
lahf
lods
bound
cli
pop
jmp
scas
xchg
inc
and
pop
and
and
aam
adc
push
push
out
nop
inc
insl
adc
mov
pop
jle,pt
xorb
das
mov
js
cltd
jbe
dec
xchg
dec
in
xor
fisttpl
and
xchg
xor
push
or
sub
inc
jl
and
rorb
pop
adc
adc
xor
mov
pop
in
inc
nop
jmp
pop
sub
out
outsl
push
xor
sti
pop
cmc
notl
push
push
out
pop
loop
sbb
or
subb
add
imul
pop
movsl
dec
inc
cmp
xchg
xor
int
or
add
jl
mov
xchg
rorb
mov
scas
inc
hlt
cmp
xor
in
fmuls
mov
outsb
aaa
xor
insl
repz
orb
add
dec
aas
movsl
mov
xchg
notl
push
sti
in
movsb
cmp
inc
pop
adcb
push
pop
push
cmp
push
xor
mov
lea
sub
lcall
insb
aaa
and
icebp
incl
cs
negb
test
pop
inc
pop
loope
xor
pusha
xchg
push
mov
in
jge
mov
out
stc
jbe
insl
ficoml
mov
xor
add
out
inc
dec
push
cli
inc
subl
outsb
lret
ja
ja
xchg
je
jge
adc
and
pop
pop
mov
hlt
pop
std
mov
shll
inc
push
pushf
mov
shl
mov
fstps
sbb
daa
push
inc
pop
aas
pop
adc
fisubrs
push
nop
pop
mov
dec
js
inc
pop
lods
cmp
dec
flds
xchg
sub
and
adc
lahf
leave
jnp
inc
jle
fldln2
jp
sub
lock
adc
cwtl
fwait
outsl
jecxz
push
mov
jmp
imul
lret
cmp
fucomi
push
sub
rolb
cmp
sbb
push
adcb
pop
mov
nop
mov
inc
cmpsl
xor
dec
das
std
test
sbb
jae
xchg
aaa
mov
rcr
add
int
pop
push
adc
push
push
ficoms
cld
and
mov
pop
mov
sub
xlat
adc
dec
enter
push
mov
out
lods
jne
aaa
andl
out
and
cmp
mov
jb
dec
je
fpatan
mov
mov
clc
fcoms
ljmp
add
sbb
jge
push
data16
sub
icebp
jo
xor
sti
or
out
imul
test
loopne
xor
inc
mov
shlb
add
daa
or
scas
and
xchg
and
cwtl
or
push
fists
loopne
pop
sti
lret
scas
sti
inc
adc
into
out
sahf
mov
adc
les
adc
pop
jg
sti
dec
mov
daa
dec
ret
mov
mov
shlb
lock
push
gs
out
popf
je
and
dec
iret
push
and
and
out
insb
push
add
sarb
mov
pop
inc
in
cmp
inc
push
xchg
inc
jge
lret
shlb
xchg
push
aad
and
sbb
mov
ss
sbb
in
inc
dec
push
jl
jnp
inc
push
cmpsl
sbb
rorb
mov
or
shll
int
test
fs
cmpsl
add
pop
mov
mov
scas
out
sarl
daa
sbb
std
sub
movsb
sahf
inc
insb
push
imul
ret
out
jmp
notb
shl
dec
mov
inc
mov
adc
push
push
ret
or
jmp
sarl
pop
js
lcall
jp
lcall
sbbl
out
mov
stos
inc
cmpsl
into
push
or
dec
cmc
jge
ljmp
mov
cs
cmc
jmp
mov
xchg
push
adc
inc
jl
mov
out
jnp
popa
mov
pop
mov
sub
fwait
inc
in
out
fwait
and
xchg
out
dec
inc
sub
iret
call
lret
clc
ja
mov
jo
pop
jecxz
xchg
loop
or
sub
std
imul
or
mov
ds
es
cmpsl
outsb
lcall
sbb
loop
dec
insl
testb
xchg
xor
push
repz
rol
xchg
add
xchg
pop
addl
xchg
dec
jl
aam
push
jecxz
icebp
pop
push
cmp
fildl
xchg
add
in
push
mov
pop
arpl
jo
mov
and
mov
cmc
xor
pop
xlat
xchg
int3
shrl
push
mov
jne
push
inc
lahf
pushf
mov
inc
testl
in
xor
ss
imul
jae
fsub
sbb
or
mov
jo
cmp
adc
mov
lahf
outsb
pop
pop
inc
and
pushf
fsubl
addr16
mov
call
or
add
loope
cmpsl
fcompl
adc
test
jecxz
outsb
repnz
mov
sarl
out
data16
cltd
push
jecxz
leave
mov
pop
push
loopne
insl
ss
in
mov
push
lock
xchg
imul
mov
mov
push
inc
xchg
pop
xchg
ljmp
and
jg
adc
sbb
mov
into
and
cmc
mov
sti
mov
or
nop
jnp,pt
dec
mov
inc
xorb
hlt
add
hlt
adc
cld
adc
or
cmpsb
xor
dec
in
rorl
sbb
adc
inc
add
push
ss
imul
shlb
and
bound
cwtl
and
inc
jo
jo
mov
add
cmp
xor
push
inc
jl
jmp
add
je
pop
jge
clc
mov
cwtl
mov
add
mov
add
xorb
pop
mov
sub
cmc
fnstenv
rclb
stos
and
pop
xor
push
lret
inc
push
movsb
pop
or
pop
lds
sar
sub
cwtl
sub
fstl
xor
push
and
xchg
icebp
sti
xorb
dec
pop
rcrb
ret
ds
and
mov
icebp
stc
lahf
mov
push
jg
std
aam
lods
mov
repz
dec
or
and
xchg
std
mov
push
and
push
dec
mov
jnp
arpl
xor
lods
ljmp
inc
notl
movsl
cmp
repz
hlt
int
call
add
jge
or
push
sbb
or
sub
cmp
daa
fsubl
and
cmp
push
jns
sti
xlat
sub
cltd
fists
repnz
mov
xchg
mov
sub
cmc
and
dec
stc
mov
mov
add
or
into
push
add
fimuls
xchg
inc
movl
mov
cs
mov
adc
daa
pop
cmp
inc
push
jnp
lahf
loop
sub
dec
and
cmp
orl
mov
int3
mov
sbb
ljmp
lahf
lret
jb
fdivrl
or
xor
call
push
test
dec
fiadds
push
push
lds
outsl
cmpsl
repnz
rorb
bound
xchg
dec
adc
sbb
fwait
lods
dec
sbb
add
pop
inc
cli
jno
mov
or
fidivs
xchg
and
out
pusha
stos
and
cmp
mov
cld
and
jmp
ljmp
jmp
xor
cli
xchg
cmp
in
lret
inc
mov
add
and
cmp
in
out
or
icebp
dec
jb
adc
dec
cmp
lahf
rcl
or
pop
mov
std
call
xchg
out
stos
jo
mov
push
ret
sub
ss
mov
sbb
add
scas
sbb
mov
jae
cmc
js
or
pop
movsl
iret
inc
xchg
add
inc
mov
test
cltd
xlat
mov
shll
mov
and
jo
adc
data16
and
xor
cmp
mov
jecxz
lret
mov
push
push
mov
push
lret
sub
in
into
jl
pop
ljmp
es
popf
lret
fidivs
ja
and
pop
cli
push
fists
add
sub
or
jg
insl
xor
mov
sbb
mov
lcall
stos
mov
jbe
xor
sub
jae
xor
mov
hlt
xor
iret
push
cmp
mov
aam
push
pop
mov
dec
iret
xor
movsb
iret
xchg
imul
pop
inc
movsb
cmp
adc
pop
vmovups
xchg
dec
imul
pop
mov
inc
shrb
mov
add
xor
sahf
sbb
pop
adc
ret
mov
orl
pop
adc
stc
push
cmp
xor
out
mov
xchg
out
ret
xchg
and
ss
rol
jmp
or
add
inc
pop
sbb
xor
mov
hlt
xor
push
aas
hlt
mov
cmp
add
and
dec
lods
mov
insl
iret
sub
fs
mov
lret
dec
outsb
push
call
inc
orb
and
xor
pop
in
pop
sub
jno
add
movsl
xor
outsl
xor
fwait
mov
mov
mov
adc
das
push
push
push
pop
cmp
dec
das
xchg
jbe
mov
push
cmp
push
lret
loop
adc
loopne
sbb
notb
cwtl
shl
call
ds
sub
test
mov
stos
das
hlt
inc
pop
movsl
jae
cltd
or
subb
xchg
pop
orl
rcrl
dec
addr16
nop
mov
popf
int
cmc
aaa
in
sbb
pop
loope
jns
adc
into
inc
mov
negb
ret
dec
push
test
imul
add
pop
out
push
ficoml
add
sbb
mov
daa
and
dec
or
cmc
sbb
push
test
pop
mov
inc
lods
lock
ja
xor
cs
data16
fcom
mov
or
leave
roll
popa
cmpsl
pop
xchg
sub
nop
pop
fimull
stos
pop
xchg
negb
and
push
aam
dec
cmpsb
in
movsb
push
push
pop
mov
ljmp
mov
ror
fstpt
je
testb
adc
outsl
cmp
and
lcall
xrelease
add
in
mov
pop
dec
or
and
in
orl
outsl
add
adcl
sbb
inc
pop
push
scas
in
push
cmp
fcmovnbe
shlb
xchg
xchg
gs
xor
push
or
push
cmc
shrb
stc
mov
rcrl
and
in
das
dec
imul
fcmove
in
and
fcomps
test
fsts
jg
out
aad
jae
int3
outsl
jae
jne
in
lret
repnz
cld
mov
imul
add
fidivrl
daa
pop
dec
cmp
push
pop
imul
test
int3
icebp
mov
pop
jb
iret
inc
pop
je
xchg
in
jl
jmp
cmpsl
xor
mov
mov
shrd
shl
shr
mov
mov
xor
mov
xor
or
mov
dec
not
and
xor
mov
mov
xor
or
mov
mov
shrd
shr
mov
mov
mov
xor
mov
xor
shl
mov
or
mov
cmp
je
mov
sub
mov
mov
mov
shl
xor
mov
mov
mov
xor
xor
shrd
shr
or
xor
or
mov
mov
mov
mov
xor
shl
xor
mov
mov
mov
mov
xor
xor
shrd
or
shr
mov
mov
or
mov
cmp
jne
cmp
je
jmp
mov
mov
mov
shl
xor
mov
mov
mov
xor
xor
shrd
xor
or
mov
mov
mov
mov
xor
shr
or
mov
mov
shl
xor
mov
mov
xor
mov
mov
xor
shrd
or
shr
mov
mov
or
mov
mov
mov
cmp
jne
mov
cmp
je
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
shrd
mov
mov
xor
shr
mov
xor
shl
or
mov
mov
mov
xor
shld
xor
mov
mov
shl
mov
mov
xor
mov
cmp
jne
mov
cmp
jne
mov
mov
mov
mov
mov
xor
shl
mov
mov
xor
mov
mov
xor
xor
shrd
jmp
cs
lods
pushf
ds
enter
cmpsl
ja
push
sub
push
push
adc
adc
xchg
pop
leave
ret
pop
movb
pop
push
add
mov
mov
adc
push
ljmp
xchg
dec
inc
idiv
push
loope
shl
ja
sbb
pop
loopne
cmovg
je
es
sbb
loope
xlat
xor
jmp
jo
subb
inc
std
mov
inc
or
lcall
in
mov
inc
fidivl
test
imul
jbe
or
sub
pop
xchg
insb
sub
enter
ss
rclb
inc
push
and
in
dec
mov
or
dec
mov
and
stos
push
pop
add
cwtl
cmp
addb
and
cmpsl
xor
rorb
dec
sub
push
es
push
adcl
in
sbbl
popa
adc
mov
test
push
loopne
ror
jecxz
jp
gs
jmp
daa
cs
cmp
jmp
ds
out
scas
cltd
mov
push
jae
cmp
aas
mov
rcrl
cmp
clc
pop
pop
mov
lds
adc
pop
sub
xor
mov
ret
repz
jne
jbe
push
jecxz
jo
cmpsl
jno,pn
imul
push
rcr
push
mov
pop
aas
aam
xchg
out
mov
and
repnz
adc
lret
jl
sbb
stos
sbb
adc
mov
ja
lret
hlt
jnp
inc
sub
lahf
les
div
or
lahf
sbb
scas
lods
shl
jb
jbe
in
dec
das
jl
sti
imul
mov
sub
enter
fcmovnbe
and
mov
es
lret
and
dec
jo
aad
push
out
and
pop
stc
loopne
jl
inc
xor
shrb
mov
es
jb
iret
shrb
sbb
jmp
movsb
bound
mov
test
mov
sbbb
mov
cmpsl
outsl
loope
jns
sar
out
push
mov
inc
sub
shl
imul
mov
pop
inc
jle
stc
outsl
adc
jle
and
ds
enter
push
aaa
mov
jp
push
cmp
sbb
cld
jne
and
sti
sbb
or
shrl
sub
js
repz
cltd
mov
cli
out
loop
mov
or
push
movsl
subl
ljmp
push
adc
or
cmp
mov
int
call
or
es
push
in
xlat
fldenv
psrld
push
scas
add
add
mov
adc
jmp
fnstenv
mov
mov
cs
cmpsb
adc
adc
inc
inc
and
addl
adc
sbb
xchg
push
push
ret
add
sub
les
mov
or
shrl
mov
adc
adc
rorl
into
jg
cwtl
inc
dec
in
jne
addl
jb
jo
test
xchg
loope
or
movsb
lret
out
or
ljmp
pop
add
fcoml
or
push
mov
das
loop
js
sbb
sbb
lods
es
add
test
mov
imul
pushf
sbb
mov
popa
out
push
push
test
sub
mov
or
mov
and
mov
adc
add
ss
dec
pop
add
xor
shlb
push
into
jns
xchg
and
jmp
sbb
hlt
int3
testb
mov
inc
fistpl
fistpl
or
jge
pop
ds
push
xchg
add
ret
jmp
jge
or
cmpsb
lcall
add
bound
xchg
push
jmp
or
int3
daa
cmp
ljmp
shr
js
ret
out
jg
sbb
xchg
addl
jl
cs
ret
xor
mov
test
jo
nop
xor
dec
jl
mov
xor
lret
test
hlt
and
imul
ja
xchg
ss
in
inc
ds
add
mov
pop
rorb
adc
arpl
and
mov
sbb
sti
xchg
addb
dec
in
das
sbb
leave
ja
sub
fistpll
sbb
xadd
cwtl
sti
cmp
inc
nop
push
xorb
cmp
lcall
mov
inc
xor
xor
test
scas
pop
mov
jae
fmul
lock
dec
cs
sahf
fisttps
cli
and
mov
popa
add
mov
cmp
iret
push
mov
or
shlb
pushf
cltd
cltd
leave
pop
jo
push
call
movsb
call
xchg
adc
inc
sti
sub
data16
mov
outsl
adc
cltd
xlat
cmc
fdivl
jle
add
xor
mov
and
push
or
call
ljmp
mov
imul
out
dec
or
and
dec
push
addb
aas
notb
iret
mov
cmp
pop
push
cmp
repz
insb
mov
and
mov
daa
push
and
cmp
ds
mov
test
fisttpll
stos
and
mov
outsb
lret
imul
add
out
std
ss
push
pop
sub
in
in
and
ja
decl
push
outsl
aam
push
push
push
mov
aaa
mov
cltd
cmp
mov
inc
addr16
inc
int
push
mov
stos
mov
lods
and
pop
les
inc
fcoms
and
clc
addr16
jb
rcll
fbld
lea
sbb
dec
bound
test
rep
lret
mov
lds
lods
imul
and
repnz
ds
add
loop
add
cmp
cmc
fldln2
mov
push
mov
loop
jg
inc
pop
je
sbb
mov
popf
mov
stos
std
shlb
sub
repnz
and
outsb
xchg
stos
lret
ficoms
inc
rcrl
push
iret
pop
das
sbb
pop
pop
inc
rcl
cmp
iret
test
test
bound
dec
fs
adc
xor
push
dec
ja
cmp
jg
jle
xorl
out
pop
sbb
pop
cli
out
lods
ror
cmpsb
sbb
jae
adcb
jo
pop
clc
aad
aam
inc
cmpsl
ficoms
inc
xchg
pop
movsl
fldenv
push
cltd
repnz
jmp
mov
cld
adc
jmp
cmp
pop
inc
imul
test
mov
mul
loop
in
add
call
pop
movsl
sbb
loope
cmp
lea
mov
xlat
mov
dec
clc
repnz
in
loope
dec
pop
adc
jg
fldt
push
add
xchg
xchg
shrb
js
cld
sbb
jae
pop
ljmp
mov
loopne
xor
sub
sbb
push
add
mov
push
mov
cmp
lds
xor
or
xchg
add
jns
cmc
mov
insl
icebp
out
sarl
shll
scas
mov
loopne
adc
push
out
outsb
cmp
sahf
fnstcw
int3
adc
arpl
fwait
in
jno
orl
sub
cmp
or
shlb
ss
inc
xorl
mov
and
outsl
packsswb
xchg
sbb
cmp
dec
push
sar
lret
cmp
push
mov
fsts
fdivrs
lcall
cmp
mov
xlat
push
adc
xchg
popf
cli
inc
enter
push
mov
icebp
repz
and
mov
es
sub
sar
out
and
pop
aad
xor
push
jb
mov
fnstsw
movsl
pop
jl
movsl
shl
jmp
ss
cwtl
mov
lock
cmp
stc
pop
arpl
jae
adc
leave
sub
xchg
pop
ja
out
cli
orb
push
in
sub
daa
lret
bound
addr16
jl
pop
bnd
jmp
ja
fsubrp
shlb
pop
mul
fistpll
out
sti
push
pop
jl
xor
mov
xchg
push
jo
rorl
fstp
cmovnp
lea
jbe
pop
mov
scas
pop
data16
in
inc
test
jmp
ret
rorl
arpl
or
and
mov
ss
cli
dec
stos
std
ljmp
mov
inc
and
mov
sbb
pop
mov
scas
repz
mov
mov
pop
push
add
push
cmp
and
mov
and
gs
add
enter
stos
dec
cmpsb
mov
rcrb
and
add
jl
xchg
testl
cmp
dec
int3
in
loop
pusha
sar
sub
mov
or
fcoms
jo
mov
negl
adc
xchg
dec
adc
add
mov
outsl
imul
cwtl
pushf
mov
insl
push
mov
adc
cmpsb
push
cwtl
mov
loop
mov
xor
cmpsb
jbe
lock
loop
sub
pop
fs
ret
daa
push
movsb
aam
insl
pop
cltd
xchg
adc
pop
dec
xor
mov
je
inc
or
js
cld
jmp
xor
mov
ret
lret
rorl
mov
in
pop
cmp
loop
loopne
sbb
popf
addr16
icebp
lret
popf
push
icebp
in
xor
or
add
dec
xchg
cwtl
push
pusha
fidivrl
scas
xchg
adc
push
dec
inc
cmp
jmp
sub
stos
xchg
in
lock
out
fistps
mov
mov
gs
outsl
cmpsl
pop
pop
call
or
cmp
int
sbb
cwtl
fs
imul
fs
aas
add
push
imul
mov
pop
mov
push
mov
cwtl
aam
int3
adc
push
pushl
or
mov
push
out
xchg
sbb
cmp
mov
cmp
rcrl
mov
dec
jl
cmp
cmpsl
sbb
and
xlat
fists
lret
pop
pop
inc
pusha
cmp
int3
dec
cld
push
dec
xchg
xor
sub
push
xor
fwait
or
dec
in
outsl
mov
lret
sahf
mov
mov
lods
push
insb
jne
lret
mov
in
pop
insl
cmp
jb
movsl
xor
je
les
les
sub
stos
add
int
sbb
adc
jmp
or
insl
rcr
jbe
push
push
xchg
out
lret
mov
aam
mov
call
mov
hlt
xchg
push
jb
dec
push
xor
popf
insb
into
out
xchg
xchg
dec
push
mov
xchg
hlt
int
add
lret
scas
or
aam
dec
leave
inc
jnp
arpl
dec
lcall
inc
bound
xor
movsl
cmp
pop
shll
jge
mov
test
jecxz
sbb
mov
fcoms
add
fdivrs
jmp
adc
xor
ffree
pop
push
jl
xchg
jmp
sbb
adc
stos
pop
jmp
sahf
and
add
xchg
shll
sti
ss
jnp
pop
push
inc
mov
cwtl
mov
fimuls
test
sub
mov
test
sub
popf
shll
or
fucom
mov
imul
flds
jne
repz
inc
into
test
scas
stc
aaa
lret
jno
or
add
adc
add
stos
out
mov
stos
xchg
jg
mov
mov
pop
shl
shrb
mov
outsl
test
jmp
test
addb
inc
pop
mov
cmp
xlat
je
push
jns
add
es
mov
inc
test
xor
and
and
in
sbb
mov
jle
into
xlat
mov
mov
testb
add
std
js
add
xchg
dec
or
cmpsl
lods
mov
stc
outsb
daa
rcll
hlt
sbb
ljmp
mov
cmp
cmpsb
add
cld
dec
sbb
pusha
pop
pop
call
pop
inc
mov
push
aad
dec
mov
lcall
push
fcoml
push
add
sarb
mov
adc
dec
in
push
cmp
push
jecxz
int3
jmp
mov
inc
or
leave
dec
push
pop
int
fcompl
inc
add
icebp
push
xor
iret
nop
and
dec
test
cmp
repnz
add
cld
or
sub
pusha
jecxz
int
loopne
jns
inc
insl
mov
inc
in
imul
ret
and
jge
jbe
mov
imul
int
and
push
fs
mov
inc
fstpt
mov
cmp
divl
mov
jo
sub
pop
outsl
jge
movsb
lret
mov
jl
in
sbb
jnp
test
push
jp
sahf
jno
inc
mov
sub
add
jp
pop
add
int
ror
adcl
add
shll
push
rolb
arpl
nop
xchg
in
jns
pop
push
xlat
shrb
mov
test
sbb
add
popa
lds
jge,pn
dec
inc
sahf
mov
inc
add
std
adc
iret
scas
mov
mov
xchg
jb
scas
nop
test
movsl
pop
cmp
dec
outsl
ss
push
sbb
xchg
fwait
dec
ds
repz
outsb
ret
lds
cmc
sbb
sar
mov
outsl
push
mov
out
popf
push
in
ss
add
push
jl
push
testb
shr
jecxz
call
xchg
xchg
pop
movsl
lods
hlt
lods
sbb
cmp
stos
inc
mov
add
andl
loopne
iret
loope
sub
test
adc
je
les
lods
cli
add
jg
dec
and
jb
push
inc
stos
aam
push
repnz
rcrl
adc
loop
lcall
inc
pop
fwait
sub
sti
push
mov
add
dec
enter
push
std
movsl
popa
mov
sub
cli
orb
mov
dec
sub
test
pop
imul
fbld
push
inc
popf
sahf
jmp
xor
popa
stos
pushf
dec
aas
aam
pop
pop
pop
imul
pop
mov
mov
lods
mov
mov
sar
aam
adc
es
cmp
jo
cld
andl
cmp
popf
xor
data16
add
mov
aaa
scas
inc
inc
xor
test
aam
pop
cmpsl
xchg
sub
mov
icebp
data16
inc
xor
out
repnz
leave
or
stc
push
and
sbb
imul
adc
mov
xlat
addr16
cltd
xlat
jno
sbb
repnz
stos
cltd
push
fiaddl
lds
or
cs
adc
inc
sbb
into
rolb
adc
test
leave
bound
pop
ret
sbb
and
pop
and
inc
ret
out
xor
jno
adcb
scas
ljmp
and
fsubs
pop
fcmove
insl
dec
sbb
jne
outsl
rcrl
inc
adc
mov
scas
cltd
jge
aaa
xchg
mov
out
push
add
lcall
adc
loope
leave
dec
outsl
push
ds
inc
inc
mov
cs
jle
pop
loopne
rorb
mov
adc
dec
int
loop
js
iret
sbb
sub
mov
shr
push
xlat
dec
push
adc
xchg
test
test
jne
in
adc
jl
mov
or
loope
loop
call
or
dec
inc
pop
frstor
iret
pop
pop
bound
xchg
sub
inc
adc
adc
cltd
fucomi
mov
pop
adc
mov
cs
push
jge
mov
fs
pushf
xchg
mov
test
push
sub
decl
sbbb
int
sahf
or
int
fcompl
xchg
add
inc
das
jns
jno
call
inc
cwtl
mov
sub
mov
xchg
hlt
jle
sub
mov
jnp
imul
lea
in
ljmp
pop
mov
mov
cmpsb
stos
mov
add
mov
fldt
ds
mov
sbb
rol
adc
xor
aaa
adcl
inc
scas
push
test
rcrl
iret
sti
out
sahf
dec
push
je
pop
push
fsubr
setg
xchg
ja
dec
jle
dec
mov
cwtl
insl
push
dec
cmpsb
mov
adcl
xchg
inc
mov
add
and
sbb
ja
xor
aas
xchg
pop
xchg
mov
or
pop
clc
ljmp
fnstenv
sbb
gs
shll
adc
test
or
inc
out
sub
or
inc
jl
add
mov
mov
and
jb
les
mov
and
mov
and
scas
adc
clc
xchg
add
mov
popa
repz
mov
dec
insl
in
aad
lods
iret
cli
addr16
arpl
push
fdivs
insb
imul
std
sbb
aas
test
xor
mov
loop
dec
xor
loop
xchg
pop
pop
pop
and
push
pop
lahf
iret
loop
push
mov
sbb
pop
fdivp
dec
int3
sub
push
out
jp
fldenv
icebp
xchg
clc
shll
mov
sub
xor
outsl
repnz
jno
inc
dec
call
adc
dec
sbb
sbb
pusha
dec
mov
dec
mull
ljmp
iret
les
fwait
rol
js
loope
sbb
push
int3
in
dec
jl
ret
dec
xor
lret
cmc
in
jecxz
adc
sbb
mov
out
aad
and
loope
xchg
mov
dec
sub
stos
jle
and
sub
dec
sahf
sbb
pop
and
les
and
dec
lret
pop
fldcw
lret
dec
mov
jb
je
xor
push
cmp
imul
pop
and
rcl
inc
mov
pop
inc
inc
lock
sub
aas
and
cli
cmpsl
push
or
lds
int
and
insb
loopne
stc
push
mov
cs
adc
or
xchg
or
lods
jns
mov
shl
push
push
pusha
or
pop
pop
in
mov
fcmovnb
mov
jae
aam
shl
dec
or
xchg
or
push
pop
or
enter
mov
add
or
inc
or
jmp
testl
outsb
nop
pop
cmpsl
ret
out
insb
lods
xor
js
stos
cmpsb
aam
imul
jg
add
add
mov
jle
pusha
xor
adc
xchg
shll
add
xorb
mov
decl
ja
push
sbb
pusha
sub
inc
add
adc
sub
sbb
sti
sbb
sub
cs
clc
mov
pop
movsl
in
mov
cmp
out
mov
clc
psubq
aas
mov
daa
sbb
mov
int3
cmp
xor
cld
jle
or
sti
out
inc
mov
add
sbb
dec
jo
dec
mov
mov
in
cmp
sub
decl
adc
xor
dec
std
mov
pop
lahf
mov
addr16
jl
and
lret
sbb
sub
frstor
stc
inc
cmp
shll
cmp
sub
push
hlt
mov
dec
cltd
jp
aad
in
jns
adc
push
jge
out
fsubrl
stos
lods
lret
mov
sbbl
cs
jecxz
hlt
scas
sub
fists
xor
adc
push
gs
negl
test
andb
jmp
scas
xchg
sti
fs
inc
daa
shl
into
or
mov
cmp
dec
pop
inc
addl
test
scas
pop
cmc
sbb
ret
subb
movsl
addr16
arpl
jmp
adc
cli
stc
xor
out
mov
push
decl
sahf
sbb
daa
leave
incb
push
repz
outsb
scas
stos
popa
into
adc
mov
mov
xor
fsubs
push
ss
aaa
ffree
test
or
aad
sub
push
jne
fs
sub
sarl
lcall
push
sbb
fst
mov
decl
fdivp
orb
das
in
jae
inc
mov
xchg
fnstenv
mov
jp
or
out
jne
lods
mov
lcall
stos
cmpsb
shl
out
mov
adcb
pop
aad
lcall
jmp
pop
dec
adc
aam
fistps
mov
sub
jle
push
scas
mov
sti
stc
add
ja
jbe
ja
cmp
cmp
jp
dec
aam
add
jae
xchg
pop
aad
mov
sahf
pushf
jl
out
neg
sbb
test
jg
movb
sub
add
lods
call
mov
scas
jecxz
lret
push
fldenv
and
repnz
pop
pop
xchg
fists
adcb
scas
fstpl
adc
jmp
test
xor
popa
inc
lds
add
adc
enter
xorl
pop
pop
mov
mov
xor
pop
inc
sarb
in
push
test
icebp
setne
stos
lret
or
test
addb
xchg
mov
sub
or
mov
push
insl
cmp
jbe
fs
pop
mov
loopne
push
push
xchg
sub
adc
push
nop
mov
je
jecxz
adc
mov
movsl
fcmovnbe
mov
incl
test
andl
pop
mov
rcrb
sbb
test
gs
sbb
lods
pop
loope
xlat
pop
in
lret
sub
pop
lcall
add
int3
dec
sbb
ret
jmp
inc
in
mov
mov
outsl
jp
adc
shrl
sub
es
xchg
ss
jecxz
pop
scas
push
mov
sub
loope
idivb
inc
loopne
jno
add
daa
pop
in
movsb
push
fwait
jb
es
pusha
lock
add
notb
mov
sbb
mov
mov
mov
add
and
mov
lahf
aas
mov
pop
insb
push
lods
mov
push
pop
das
push
shll
test
fisubl
mov
mov
sbb
pop
pusha
pop
outsl
dec
xchg
mov
test
mov
push
inc
sahf
and
xchg
pop
mov
negb
dec
mov
mov
jl
cmp
add
cli
push
xor
bound
movsb
mov
xchg
sub
add
push
push
loope
xorl
repz
fcmovne
call
movsl
test
sti
int3
jg
rcrl
push
out
test
aam
rcll
arpl
test
movb
clc
and
jle
aas
out
js
daa
mov
ret
or
and
jl
clc
call
pop
push
xor
dec
dec
push
add
push
ret
or
ss
jns
je
aaa
or
lds
addr16
lahf
fiadds
mov
popf
imul
test
xchg
stc
jo
xchg
sbb
lcall
pushl
push
or
loope
cmp
mov
pusha
lret
shll
pop
sbb
inc
nop
mov
repz
je
repz
call
cmc
dec
sub
pop
cltd
mov
jns
sahf
ljmp
push
cmp
fidivl
fwait
iret
popf
test
jle
push
mov
inc
jae
rcrb
scas
gs
dec
push
sub
fisubrs
pop
adc
jb
xor
js
xor
push
stos
push
enter
sbb
jg
fists
in
iret
mov
js
pop
movsl
push
stos
fcompl
ja
inc
xor
les
sbbb
cltd
cmpb
in
and
jb
mov
stc
repnz
test
mov
pmaxsw
out
push
push
sbbl
adc
mov
mov
rclb
fstl
mov
mov
cmpsl
push
mov
jns
aam
insl
push
sbb
ss
pop
xor
lcall
int3
pop
mov
dec
loop
adc
fcomi
pop
sub
repnz
out
mov
std
arpl
push
sti
sbb
incb
imul
xlat
ret
movsb
ja
inc
jp
jp
mov
sbb
add
mov
lcall
xlat
xlat
lock
cmpsl
jb
push
sarl
sub
sub
cmp
outsb
xchg
loope
subb
adc
aam
hlt
flds
sbb
ljmp
rclb
mov
sbb
insl
insb
dec
insl
jl
pop
icebp
jmp
adc
ja
xchg
sbb
bound
push
lds
aas
mov
jg
and
movsb
xchg
adc
inc
jmp
or
cmp
add
hlt
adc
cmp
jae
fdivs
aas
cwtl
enter
shrl
push
sub
pop
cmp
xor
xchg
or
inc
add
icebp
or
pushf
aaa
cltd
sub
jo
push
pop
xor
and
dec
shrl
cmpsb
mov
mov
pop
enter
rol
sti
cmp
sti
stc
sub
lret
jae
ss
adc
rcrb
pop
or
jns
es
push
and
mov
xchg
addr16
jge
dec
arpl
xor
test
imul
mov
ret
ficompl
mov
bts
cmp
fstpl
or
mov
scas
dec
imul
xchg
pop
imul
add
pop
divl
mov
inc
loope
loop
xlat
daa
pop
jg
mov
ja
scas
roll
mov
loope
jne
popa
xchg
jno
adc
mov
push
addr16
hlt
jl
pushf
clc
adc
adc
movsl
aam
sub
arpl
hlt
inc
fnstcw
push
adc
movsb
push
sbbl
or
add
fcmovnbe
mov
movsb
push
ds
faddl
jo
jnp
pop
aam
mov
mov
addr16
outsl
push
sahf
sub
fmulp
mov
aas
sbb
sbbb
sarl
aas
test
mov
loope
inc
ds
push
push
xchg
inc
out
inc
add
shll
mov
aas
loope
mov
mov
sub
arpl
sti
repz
jo
test
jbe
mov
fidivs
cmc
ret
out
or
push
adc
popf
pop
imulb
jnp
addr16
push
jg
jp
jmp
dec
push
dec
cmpsl
add
fsub
mov
dec
xchg
mov
dec
xor
jns
dec
out
jg
pusha
stos
jp
sbb
out
pop
repnz
dec
cmc
pop
adc
les
rorb
sti
mov
cmp
js
push
loope
fnsave
outsb
lidtl
push
imul
jb
cmp
cld
cltd
or
fstpl
sub
ret
scas
shrl
or
sbb
fsubl
pop
fprem
jns
dec
xor
mov
adc
rclb
cltd
lock
dec
icebp
sub
arpl
mov
pop
push
xchg
push
push
pop
adc
rclb
xlat
cmpb
sbb
sub
ss
rcrb
mov
test
fnstenv
out
adc
into
lcall
sti
sahf
adc
in
stos
sub
in
inc
add
pop
jb
lds
pop
jg
imul
dec
add
and
popa
mov
nop
aas
dec
sbbb
out
jno
in
jmp
inc
es
ficoml
das
xor
mov
dec
repz
cmpsb
in
mov
std
imull
test
std
jg
bound
jno
jns
and
adc
jecxz
push
lock
shrb
call
cmp
and
jb
push
insl
mov
mov
cmpsl
adc
sbb
ja
lds
sbb
jnp
mov
push
repz
inc
add
mov
call
cmp
push
xor
pop
xchg
and
ret
leave
test
icebp
push
stc
insl
sbb
in
xor
inc
and
shll
roll
lret
fsub
clc
stos
cmpsl
lcall
mov
push
jns
sub
mov
xor
bound
jle
pusha
push
je
adc
test
roll
popf
inc
cmp
ljmp
add
adc
cmpsl
inc
mov
cli
cmp
lret
es
imul
jae
stc
jmp
cmc
push
push
and
insl
imul
ja
cmpsb
scas
cmp
fcoml
add
adc
mov
shrb
popa
inc
lcall
fimuls
add
movsb
push
fcoml
or
movsl
push
cmp
or
shr
mov
mov
or
jmp
pop
insl
sub
cmp
icebp
or
test
push
push
push
sub
push
push
stc
in
fstps
lock
mov
pop
inc
pop
mov
pop
mull
fdivrs
push
out
push
adc
sbb
imul
xchg
inc
fnstcw
es
xlat
stc
dec
ret
es
lret
sbb
mov
daa
or
ja
mov
mov
push
ss
xor
adcb
push
cmp
test
dec
out
push
or
pop
aaa
je
and
pop
mov
lret
push
mov
sbb
jecxz
push
xchg
cmp
fisubrs
test
into
add
lret
rorl
push
stos
xchg
ret
aaa
mov
xor
cmp
jl
idiv
mov
add
xor
testl
cmp
pop
cwtl
mov
push
outsl
cli
or
fildll
pop
mov
test
je
push
fs
xchg
flds
dec
stos
scas
std
dec
cmp
stos
push
xor
sbb
xor
pushf
sbb
out
xor
loopne
out
roll
mov
in
dec
jmp
sub
fildl
pop
lahf
inc
mov
fwait
push
mov
sub
rclb
orb
cld
jb
or
sbb
shlb
push
jmp
jmp
xchg
cld
pop
xor
icebp
mov
roll
js
sbb
in
int
mov
in
je
in
push
xchg
add
or
dec
mov
cmp
sub
inc
sbb
ss
aas
xchg
xor
push
inc
or
dec
sbb
cld
test
cltd
insb
sub
stc
and
jge
in
add
xor
or
add
mov
in
stc
adc
add
aam
imul
jno
sub
sbb
push
push
pop
enter
imul
addr16
lret
ljmp
mov
cmp
jl
movsl
arpl
fwait
in
and
ds
int3
xchg
fs
stos
inc
shl
dec
sub
popf
sub
fnstenv
jae
mov
add
fdivl
xchg
aad
add
push
outsl
jge
imul
mov
push
test
mov
adc
lods
lds
cmp
add
lds
loope
fcomps
pop
int
pop
call
adc
lods
leave
cmp
repnz
in
push
sub
sbb
mov
ror
mov
cli
or
jl
notl
les
push
addr16
dec
inc
and
nop
dec
arpl
stos
inc
pop
notl
and
ret
icebp
and
movsl
mov
sub
xor
sti
dec
es
mov
inc
lcall
addl
out
fsin
add
jp
pop
add
jo
out
imul
stos
test
leave
jmp
inc
mov
adc
push
xchg
call
push
inc
inc
or
sub
fsts
test
mov
pop
stos
clc
test
loopne
adc
xchg
pop
pop
out
or
dec
cmpl
adc
insl
mov
insb
stos
repz
ljmp
insb
jecxz
enter
mov
incl
das
movsb
insl
shufps
aad
or
inc
xchg
mov
ret
dec
add
dec
lods
imul
icebp
jl
pop
test
pop
and
dec
pop
xchg
ss
rcr
out
pop
lds
je
mov
xlat
adc
mov
inc
add
adc
mov
adc
fldt
shlb
pop
stos
cmpsb
ror
push
cmpsl
cltd
xchg
mov
out
xchg
insb
enter
cwtl
out
jge
cwtl
lcall
cmp
push
out
dec
jo
sbb
enter
push
sbb
cmpsb
daa
mov
pop
mov
xor
cmp
lea
fcmovnb
mov
mov
loope
lret
xor
sbb
aam
stos
mov
sbb
dec
mov
xor
in
sbb
repnz
dec
sbb
cmc
stos
push
push
jg
jb
cmc
pop
rcr
out
jmp
enter
sbb
mov
out
lds
or
fs
mov
adcb
pop
and
in
push
jnp
sub
jnp
shll
mov
or
inc
iret
xchg
add
out
mov
xchg
shrb
xor
addr16
lahf
adc
in
lods
loope
in
imul
shll
sahf
mov
inc
mov
incl
sarb
pop
scas
movsb
cmp
nopl
cld
sahf
ret
cmp
in
imul
jnp
pop
pop
inc
mov
push
aad
xchg
insb
cmp
popa
and
mov
inc
push
cli
push
pop
rol
cmp
movsb
aam
jnp
xor
test
jecxz
dec
sbb
jp
sub
fnsetpm(287
push
mov
xchg
xchg
fsts
mov
pop
ljmp
jo
mov
test
arpl
and
push
scas
push
xlat
pop
inc
enter
xchg
stc
xchg
push
pusha
push
les
pop
sahf
enter
mov
orl
adc
dec
mov
and
and
dec
jnp
jmp
dec
pop
mov
pusha
mov
out
xchg
sub
movsl
mov
push
cwtl
jge
xchg
test
fidivl
outsl
mov
outsb
xchg
loope
lods
add
test
lds
cwtl
in
cltd
fs
mov
cmp
fimull
ja
in
fwait
cld
outsb
jno
iret
sub
cmp
arpl
stos
sub
test
jg
popf
xchg
push
loope
or
lahf
cld
sbb
push
pop
imul
scas
mov
repz
dec
test
inc
lods
je
cltd
es
data16
sar
dec
cltd
mov
enter
mov
outsb
loopne
fcompl
test
xor
lea
out
jmp
hlt
add
clc
or
repz
xlat
mov
dec
lea
xchg
sub
les
mov
or
cmpl
int3
pusha
xor
cltd
inc
leave
dec
xor
inc
mov
push
pop
and
mov
loope
shlb
jbe
xchg
pop
push
add
or
xor
or
mov
pushf
pop
push
btc
jp
xor
clc
push
jb
mov
icebp
repnz
in
push
sbbb
xchg
push
sbb
sti
aam
jl
sti
adcl
ja
mov
adc
jmp
daa
mov
cmp
add
push
or
sbb
fucomi
jecxz
stos
xor
andb
leave
pop
or
cs
sahf
loope
les
pop
in
inc
shrb
mov
jns
popf
rcrl
sbbl
ret
mov
lock
pop
cmp
loope
fcmovnu
lods
int3
mov
aas
jg
push
push
out
fisubs
lea
cmp
xchg
jge
in
dec
mov
dec
ds
test
jnp
pop
mov
mov
push
add
popf
sbb
ljmp
in
dec
lea
je
cmp
repnz
sbb
xorl
testl
loopne
insb
sti
add
addr16
dec
and
mov
xlat
sbb
xchg
aaa
lock
adc
shll
nop
sahf
ja
lcall
ss
in
arpl
cmp
lea
inc
mov
scas
insl
mov
mov
jl
pusha
inc
adc
sub
out
andb
aaa
in
fnstenv
jle
jbe
push
mov
ss
sbbl
insl
xor
jmp
cltd
int3
add
pushf
pushf
pop
popf
pop
rolb
das
inc
lods
mov
push
jbe
inc
and
jns
adc
cmp
xor
fisubl
pushf
mov
mov
jae
ret
cli
faddl
cmp
stos
jmp
jg
in
int3
test
add
fsubr
loope
pop
cmp
loop
enter
pushf
insl
inc
mov
push
cli
mov
jns
xor
jbe
mov
pop
fists
and
ds
sub
imul
xor
call
dec
mov
out
popf
push
mov
pop
sbb
sbb
clc
pushf
cmpsb
mov
jmp
out
and
lods
sub
cli
test
pop
pop
jne
dec
sbb
and
aam
sbb
add
xor
push
cmpsl
js
xchg
mov
roll
insl
xlat
jns
xchg
stc
pop
pop
sbb
pop
movsb
mov
mov
push
xor
vmwrite
push
xor
inc
in
mov
mov
pop
mov
push
pop
pop
cmpsl
jmp
sbbb
xchg
mov
and
lcall
sbb
xchg
mov
inc
and
mov
scas
jb
lahf
jle
daa
and
gs
imul
push
mov
jg
mov
mov
jmp
xor
mov
pop
push
ss
les
fldenv
xchg
int
adc
push
loopne
dec
xchg
sahf
les
push
inc
rorb
mov
sub
pop
inc
lcall
push
sub
movsl
pop
stc
lret
out
jns
pop
arpl
jne
add
sub
in
xchg
and
cmpl
jns
add
inc
test
clc
gs
lea
cmc
push
or
fcmove
neg
pop
mov
jae
out
scas
lahf
into
xor
clc
mov
jmp
xchg
leave
adc
data16
movsb
lahf
in
or
dec
cmpl
mov
stos
xchg
adc
daa
dec
cmp
aad
test
xchg
pushl
inc
outsl
jecxz
icebp
xchg
sbb
dec
sbbb
or
aad
insb
jb
inc
ja
cmp
inc
pop
mov
cmp
insb
xorl
mov
imul
test
rol
loopne
mov
jp
fidivrs
inc
pushf
sub
lahf
and
adc
ficompl
adc
pop
cmp
xor
std
and
sub
push
ja
adc
fcmovnb
fistps
dec
mov
sti
clc
stos
add
xor
mov
jmp
jg
out
pop
inc
jp
mov
sbb
and
mov
pop
pop
in
mov
testb
mov
and
jo
sbb
ja
cmp
dec
outsl
pusha
mov
mov
or
xchg
cmp
inc
aas
push
ljmp
in
repz
repnz
jecxz
pop
inc
mov
test
cmc
push
mov
cwtl
popf
push
pop
mov
cmp
mov
xor
dec
cli
mov
xchg
cmp
lea
out
stos
push
mov
shrb
push
loope
clc
mov
out
push
lahf
arpl
loopne
sub
icebp
out
arpl
adc
ficoms
jl
push
mov
add
test
jp
lahf
lcall
push
xchg
push
or
lret
es
lret
push
dec
cmp
subl
inc
loope
dec
insb
pop
mov
out
inc
test
or
wrmsr
inc
pop
outsl
bound
cmp
test
aam
aaa
cmc
pop
adc
jnp
lret
and
inc
outsl
adc
mov
push
je
data16
or
dec
fptan
js
xor
pop
push
cmp
cwtl
fwait
mov
fdivl
xor
popf
adc
test
ficompl
popf
mov
daa
pop
adc
xor
sahf
cmp
jne
push
jp
xor
out
inc
pop
mov
xchg
inc
xchg
fmuls
inc
push
sub
adc
or
adc
clc
test
lds
xor
mov
jbe
lret
sti
cmpsb
sbb
lea
aam
addr16
adc
mov
cmp
imul
aam
xchg
fldcw
mov
mov
btc
ret
jno
inc
xchg
sub
and
push
repz
std
inc
adc
scas
mov
sar
add
xor
je
jns
out
clc
dec
std
mov
sub
aaa
mov
mov
and
out
sbb
dec
fstpl
or
jecxz
scas
out
sub
cld
adc
pop
notl
mov
mov
push
mov
sti
pop
adc
sub
mov
in
ljmp
bound
push
ljmp
mov
adc
xor
pop
mov
push
add
mov
enter
dec
jns
pand
dec
pinsrw
cmpsb
jo
and
jno
dec
adc
fists
pop
stos
mov
lods
int
sub
push
push
test
arpl
outsl
sbb
orb
xchg
mov
cmc
pop
dec
add
imul
loope
loope
pop
push
lret
ret
adc
lret
loop
rcrl
in
fldt
mov
insb
std
mov
jmp
mov
stos
adc
xchg
pop
test
ds
xor
test
fildl
jbe
dec
mov
inc
dec
or
push
test
int3
jae
repz
mov
dec
add
in
jmp
cmpsb
mov
xchg
push
cwtl
out
sbb
cmp
xchg
push
arpl
inc
call
stc
pushf
cwtl
out
std
xor
sub
jp
movb
mov
jb
les
lods
inc
test
jno
lretw
insl
push
repz
popl
lcall
mov
pop
mov
cmp
stc
adc
dec
push
sub
mov
clc
or
jl
pavgb
iret
aam
mov
jnp
lock
dec
aaa
loope
mov
jo
mov
add
out
or
lds
imul
cmp
sbb
ss
push
sti
insb
adc
pop
mov
arpl
sbb
addr16
inc
pop
fwait
jae
lcall
dec
jmp
xlat
dec
mov
or
enter
out
dec
mov
shlb
clc
cmp
dec
jp
xor
subb
negl
icebp
insb
test
imul
and
outsb
add
add
int3
sbb
xor
cmpsb
std
pop
pop
cli
mov
xchg
sub
mov
mov
mov
xor
orb
loopne
push
mov
outsb
das
push
pop
jno
les
sub
sbb
pop
movsb
aaa
scas
orl
in
cmp
ljmp
out
dec
cmp
mov
mov
adc
dec
jns
dec
xor
inc
fs
mov
ficoms
mov
pop
out
dec
aaa
jns
bt
jns
aas
inc
shlb
add
rol
lds
inc
xor
sbb
pop
jnp
mov
jo
rcrl
adc
leave
shll
lods
pop
or
es
dec
push
aad
sbb
dec
mov
ret
jge
sbb
sbb
mov
sbb
leave
inc
loope
jmp
outsb
mov
lods
pushf
mov
out
add
sbb
shl
stc
or
sub
mov
mov
jo
xchg
mov
fstl
in
test
arpl
jle
push
out
mov
test
sub
push
jge
xchg
mov
sub
and
cmc
jb
sti
flds
add
and
stc
ret
sar
fsubrp
pop
add
jle
test
and
out
add
xlat
movb
pop
sbb
loop
insb
loopne
dec
aad
mov
aas
bound
cmpsb
mov
ret
cmp
adc
out
out
into
mov
in
fcoms
jg
shl
push
mov
jo
outsl
inc
push
dec
or
mov
dec
loop
pushf
insb
lea
lret
lock
jecxz
sbbl
jecxz
repz
dec
cmp
or
call
addr16
mov
and
test
mov
and
imul
and
inc
lods
inc
cli
or
lock
cltd
jmp
sbb
cmp
add
xor
out
and
adc
mov
inc
stos
shlb
test
xchg
popf
cltd
repz
fs
push
pop
cltd
lahf
test
sub
leave
sub
test
sub
shrl
stc
test
dec
mov
mov
dec
xorb
xchg
cmpsl
xchg
lret
or
and
mov
xor
nop
int3
mov
arpl
push
and
test
mov
test
mov
scas
lret
sbb
dec
mov
lock
lods
scas
jp
jge
loopne
add
jmp
pusha
mov
cmpsl
mov
pop
in
push
and
pop
test
mov
push
jle
cmpsl
mov
adc
jae
jecxz
xchg
jge
xchg
mov
dec
in
repz
xchg
adc
js
mov
idiv
or
pop
sbb
outsl
stc
dec
mov
fistl
mov
and
xchg
cmp
dec
adc
pop
mov
std
xchg
jecxz
mov
adc
aam
add
in
rorl
lock
in
sub
jl
cmp
fs
int
rcrb
pushf
dec
popf
repnz
push
shr
test
dec
faddl
out
and
dec
dec
aas
mov
scas
jo
add
add
xor
daa
add
add
not
inc
xlat
push
cmc
iret
scas
sbb
stos
in
test
or
es
ret
and
push
pop
mov
cmp
mov
les
pop
xor
xorl
sbb
jecxz
pusha
cmp
cltd
das
aaa
jb
cmpsb
xor
sub
or
fdivr
sti
adc
nop
fdivs
cmp
repz
xor
push
pop
stc
mov
out
xor
sbb
mov
scas
pushf
std
movsl
xchg
test
jns
cmpsb
dec
push
jp
push
sbb
lret
test
iret
xchg
repz
pop
xor
cmp
sub
mov
test
pusha
pusha
mov
pop
out
xchg
shl
popa
enter
enter
inc
aas
mov
sub
into
enter
jp
cltd
sti
pop
fs
rorb
xor
outsl
cld
mov
js
test
push
xlat
xchg
xchg
push
call
pop
movsl
faddl
cmp
cmp
dec
xchg
sub
sbb
movsl
push
adc
sbb
mov
jnp
mov
add
mov
popf
cmp
mov
sbb
fists
xor
ja
cmpl
sbb
jp
scas
push
loope
adc
jae
mov
push
jge
inc
cwtl
in
mov
push
pushf
repnz
pop
stos
sub
nop
movsl
cmpsl
roll
repnz
mov
incl
mov
in
pusha
and
into
repnz
xor
push
push
or
test
ds
imul
add
lea
sbb
outsl
imul
inc
lret
inc
add
scas
adc
sbb
call
sbb
bound
fldl
xor
dec
pop
push
mov
cli
jbe
xchg
paddusw
fistpll
inc
nop
fmull
outsb
push
ljmp
insl
in
cmp
cltd
pop
mov
mov
mov
imul
jns
inc
xlat
repnz
ss
mov
cmp
dec
loop
aam
sub
mov
mov
das
pusha
add
or
inc
pop
in
cmp
adc
fcmovnbe
jb
shlb
xchg
pop
cmp
lret
mov
ret
fcoms
sbbb
shlb
cli
enter
scas
add
and
ss
and
xor
jns
in
add
aaa
stos
pushf
cltd
jmp
out
sbb
adc
mov
lea
jp
mov
jg
fidivs
push
out
jnp
or
xchg
jno
shufps
loop
int
aas
mov
and
push
push
push
mov
xor
or
jle
mov
movsb
mov
push
fistl
hlt
outsb
repz
pop
add
fildl
mov
pusha
pop
mov
jge
jbe
cmp
sbb
mov
jbe
xchg
pop
leave
shr
jb
fistps
cs
out
push
jecxz
fisubs
xchg
out
cs
outsb
xor
mov
push
jne
add
sub
and
or
ret
icebp
cmc
push
fs
out
gs
into
and
mov
lcall
or
test
xor
pop
fcmovu
push
pop
clc
pop
cmc
adc
xchg
arpl
xor
addr16
into
test
mov
pop
cmp
sbb
dec
sub
cmp
and
mov
xor
xor
xlat
insb
pop
adc
cmp
and
js
mov
pop
mov
popl
push
and
adc
and
int
jb
stos
xor
in
fidivs
mov
mov
pushl
iret
es
mov
jmp
jb
std
jno
xchg
sub
and
push
lods
mull
jmp
add
mov
push
jle
test
pop
out
push
jmp
mov
xchg
cmpsl
xor
xor
pop
xchg
or
xchg
shlb
popf
mov
clc
icebp
jle
fnstenv
ja
adc
aaa
ret
in
cmp
test
test
test
and
popf
call
fisubrl
sbb
jle
lret
insl
push
negb
or
adc
mov
aam
jp
adc
mov
mov
inc
xchg
les
jl
ret
mov
out
push
test
and
mov
aaa
cmpsb
cwtl
je
add
push
push
mov
imul
dec
cltd
mov
adc
mov
and
cmp
jo
test
pop
sti
pop
mull
xor
xchg
bswap
mov
mov
fcom
pop
pusha
pop
inc
mov
lock
in
jbe
out
rcrl
incl
aaa
inc
call
adc
cmpsl
test
or
dec
add
jg
adc
aas
xchg
xchg
cltd
mov
mov
loope
mov
das
fistpll
inc
push
sub
inc
mov
hlt
icebp
and
enter
mov
jo
adc
cwtl
inc
outsb
mov
mov
aam
xchg
xor
aaa
xor
pop
dec
negb
jle
xchg
jecxz
cmpsb
scas
sbb
jmp
aas
xchg
and
scas
pop
and
dec
loope
mov
mov
hlt
dec
mov
add
sbb
and
insl
sbb
add
pop
sub
in
mov
push
out
push
addb
cli
xchg
rorb
ss
add
push
data16
dec
popa
inc
in
nop
cmp
push
std
dec
fwait
mov
ret
pop
stos
repnz
int3
rorl
mov
cmp
cld
inc
jbe
negb
notb
lock
cmc
mov
movsl
mov
push
lcall
test
dec
xchg
lahf
out
lock
mov
sbb
rorb
jg
pop
xor
and
xor
mov
shlb
ret
sbb
sub
push
xchg
mov
mov
cmp
sti
aas
loopne
shl
and
pop
jge
mov
ds
and
cltd
movb
test
xor
adc
stos
cmpsb
lret
push
das
fsubl
mov
std
inc
jo
aas
int
mov
xlat
jb
xchg
pop
pop
push
rolb
jmp
bound
je
jge
fstpt
pop
cmp
and
mull
cmp
xor
mov
pop
in
inc
cltd
imul
add
push
scas
jbe
mov
dec
cmp
jne
fists
loopne
shll
add
pop
in
sbb
and
mov
xchg
ja
push
lahf
shll
shll
inc
std
sub
xor
fnstsw
in
daa
aaa
mov
test
lret
int
xor
push
sbb
cs
pop
push
fsubl
nop
test
sub
xchg
jae
cmp
pop
mov
mov
mov
out
ret
movsb
adc
cwtl
or
mov
mov
lcall
pop
or
xchg
jb
stos
cld
jg
inc
scas
jne
ds
push
insb
push
pop
outsl
packssdw
rorb
adc
mov
xchg
dec
jae
push
jcxz
mov
xor
stos
addr16
sub
add
stos
lods
hlt
clc
in
xchg
movsl
repz
push
cltd
and
push
mov
dec
sub
xchg
repz
andl
sbb
cmp
push
pushw
push
push
xor
pop
pop
cmp
outsl
mov
dec
aad
jns
scas
dec
loop
mov
inc
data16
jne
jae
push
or
mov
mov
inc
repz
test
mov
aas
sub
xchg
clc
pusha
jnp
cmp
inc
and
loope
incl
scas
mov
out
lret
pop
cs
aaa
stos
daa
insb
jb
movsb
and
cmp
loope
dec
jns
mov
ja
jnp
or
int3
jecxz
pop
popa
and
rorb
adc
xor
or
outsl
lock
inc
push
popf
sub
xchg
scas
sahf
imul
jl
sbb
sub
js
aas
xchg
in
xchg
test
clc
sub
jg
fadds
fstps
aad
xor
cmc
mov
push
mov
movsl
mov
jnp
subl
mov
stos
and
pop
and
imul
mov
push
push
sarb
xchg
stos
insl
or
dec
enter
jle
push
mov
mov
gs
and
xor
es
cli
pop
mov
add
add
js
mov
xchg
ss
jns
xlat
adcl
mov
negl
out
icebp
lds
loope
push
insb
std
or
cmp
mov
das
adc
dec
test
xchg
test
mov
sbb
fidivrs
aad
adcb
push
shll
sarl
jmp
aad
ss
stos
xor
cmp
sub
or
mov
cmpsb
and
mov
add
mov
adc
xlat
xchg
stc
xchg
pop
dec
mov
out
insl
cmpsl
mov
std
mov
and
cmp
mov
pop
and
pop
fadd
inc
dec
xor
outsb
jge
and
jne
notb
inc
mov
ficompl
sbb
inc
mov
fisubs
mov
mov
enter
loope,pn
enter
inc
in
mov
adc
mov
add
ja
jnp
mov
xchg
mov
xor
leave
mov
loop
add
mov
mov
add
enter
xor
push
or
push
lcall
push
sbb
inc
movsb
sub
cwtl
data16
lock
movl
pop
hlt
adc
inc
jnp
push
add
jge
cltd
movb
popa
inc
sbb
ss
push
fwait
sbb
cs
add
jg
xlat
push
cmp
pop
mov
imul
bnd
mov
sbb
jno
xchg
cmovne
push
xor
arpl
jnp
inc
pop
xor
insb
imul
and
jle
repnz
sahf
dec
push
sbb
add
adc
es
shl
cwtl
push
adc
xchg
shrb
jns
mov
scas
add
rorb
sbb
bound
push
dec
imul
or
cmp
cmpsl
xor
inc
fwait
idivl
sbb
mov
adc
arpl
imul
sbb
aad
aaa
push
cmpsb
sub
or
aad
push
test
in
or
sbb
outsb
sub
lods
daa
and
cmp
cmp
fcomps
cmp
sub
cmp
adc
into
sbb
fmuls
jle
adc
or
sub
iret
inc
or
mov
loop
shll
cmc
insl
fldt
mov
and
or
inc
cltd
ret
mov
jle
add
jecxz
mov
xchg
clc
das
imul
imul
cmpb
out
xor
in
pop
pusha
sbb
stos
jge
pop
xchg
jns
dec
loopne
or
cld
or
ja
sarb
push
xchg
icebp
sbb
pop
inc
push
rorl
pop
push
adc
test
pop
or
call
sbb
mov
mov
dec
inc
in
mov
push
adcl
cs
in
push
clc
cmp
enter
data16
lods
jg
xor
je
sub
sub
mov
and
inc
mov
jns
in
mov
push
xor
push
lret
pushf
jae
sub
sbb
inc
and
test
adcl
push
rcrb
sub
adc
cmc
and
mov
pop
mov
data16
leave
sarl
push
icebp
sbb
mov
xlat
add
fcomp
and
xor
sub
fnstenv
lahf
lock
pop
enter
je
push
push
popf
out
dec
popf
outsb
fistpl
or
jne
push
push
call
mov
mov
shrd
shr
shr
xor
push
xor
mov
jmp
jl
in
sub
adcb
adc
push
sub
push
push
cli
in
pop
push
mov
mov
dec
cmpsb
mov
nop
addr16
fdivr
shr
lcall
xor
sbb
movzbl
pop
mov
fcomps
mov
xchg
add
push
out
cmp
icebp
lea
or
pop
popa
xchg
sbb
in
mov
cmp
mov
cli
mov
sar
xchg
aam
sub
adc
jecxz
jnp
fyl2x
mov
pop
sbb
adc
out
test
jge
and
adc
push
popa
shll
add
push
cs
mov
bound
inc
jp
loope
xchg
icebp
jecxz
adc
sub
cmpsb
pushf
sub
sti
fisubrs
fstp
jmp
adc
call
ja
nop
xor
loopne
data16
ds
inc
fdivs
cmp
push
in
and
pop
inc
cmp
dec
dec
mov
mov
push
mov
push
cmc
bswap
pop
retw
icebp
mov
pop
dec
jecxz
and
dec
mov
inc
adc
mov
xchg
loop
fiadds
lock
mov
aas
into
cmovnp
leave
arpl
in
or
or
xchg
lcall
leave
sti
sub
call
or
nop
sub
jno
cmp
imul
sub
adc
inc
sub
jmp
repz
in
into
lahf
jmp
clc
cmp
psubd
and
sbb
aas
pop
inc
or
xchg
int3
repnz
lods
sarb
mov
mov
cs
cmpsl
pop
gs
rol
xchg
shll
ret
js
jle
jno
aaa
in
mov
push
or
mov
adc
into
test
movaps
popa
rclb
sub
push
hlt
in
fwait
cmp
xchg
sbb
cmp
rorb
fcomip
adc
pop
mov
push
mov
pop
pop
scas
sahf
inc
lcall
test
stos
xchg
sbb
lcall
gs
jnp
mov
out
out
push
cltd
xchg
js
jge
ja
jns
mov
stos
jge
or
cmp
sbb
push
sarb
lret
sti
and
mov
shll
aas
lahf
add
jmp
jmp
xor
cmp
ja
and
push
cmp
push
jg
add
dec
popf
cltd
jmp
add
mov
jl
imul
push
xchg
lods
push
sub
xchg
ljmp
cmp
stos
xchg
jns
adc
dec
adc
in
arpl
and
pushl
mov
add
pop
ljmp
xorl
push
sbb
jp
loope
xchg
mov
ljmp
or
jl
arpl
insb
and
push
sub
lods
and
mov
push
test
iret
adc
jnp
sbb
cwtl
push
shrl
cld
mov
push
push
sarl
leave
mov
jne
sub
stc
mov
cli
push
and
test
loop
hlt
adc
inc
ljmp
and
sbbb
push
pop
cmp
orl
ja
jmp
fdivrs
and
fimuls
xchg
xor
inc
add
xchg
inc
mov
outsb
inc
dec
gs
xchg
and
leave
cli
xor
jne
stos
jne
push
test
pop
mov
xor
and
push
int
lock
add
out
inc
divb
cltd
push
test
ret
xlat
sarb
stos
mov
out
dec
andb
push
cmpsl
sub
mov
cmp
lret
push
or
sbb
js
mov
das
cltd
aam
lret
clc
mull
or
ljmp
cbtw
cmp
or
mov
rcrl
imul
loope
push
and
ret
pop
adc
mov
ret
push
cmp
leave
movsb
push
mov
push
cmp
icebp
push
pop
xchg
or
rol
push
xor
sbb
jno
mov
mov
xor
cmp
negb
shll
test
or
push
int3
mov
and
inc
xor
xor
or
out
cmc
sub
jmp
mov
ljmp
rorl
rcrl
cmp
cmp
xor
nop
mov
add
clc
mov
cmp
into
jg
es
pusha
dec
and
fisttpl
add
or
mov
nop
cmp
int
pop
movl
mov
add
adc
push
sbb
cmp
mov
jmp
into
jo
int
mov
ja
jnp
xor
popf
cmpsl
and
cld
mov
hlt
add
movsb
fistl
mov
jo
sbb
es
js
xchg
sbb
decl
je
add
sbb
addr16
mov
test
mov
std
sub
jb
add
xor
xchg
mov
sub
fistl
sbbb
jg
inc
xchg
pop
jb
adc
pop
jo
movsl
cmpsl
movsb
gs
jg
jge
dec
shlb
inc
mov
loope
push
in
cmpsb
subb
sbb
push
and
or
hlt
cli
jbe
mov
dec
mov
iret
cld
and
pusha
push
cmp
add
pop
pop
mov
mov
fwait
aaa
mov
jle
push
rcll
les
jae
insl
mov
mov
add
xchg
std
pop
lods
sub
jb
and
jcxz
mov
loop
jg
out
inc
mov
push
addr16
out
jbe
fiaddl
cmp
xchg
mov
mov
mov
ficoms
pop
pop
cmpsb
xchg
lcall
pop
add
mov
mov
clc
movsb
repz
sbb
xor
push
cld
loop
push
dec
pop
fmull
mov
imul
out
icebp
xor
ret
mov
stos
aam
sub
fdivl
scas
mov
mov
or
hlt
mov
inc
jmp
fisubrs
inc
in
repnz
pop
imul
or
insb
lret
shlb
or
je
push
mov
inc
ljmp
aaa
sub
aam
or
pop
lds
outsb
les
jge
dec
and
jp
ljmp
mov
in
adc
add
out
jle
into
add
or
out
xchg
adcb
and
pop
test
jne
in
xabort
notl
pop
popa
cli
iret
fsubrl
xlat
and
testl
or
out
bnd
test
in
rorb
imul
xor
adcl
inc
loopne
mov
adc
out
mov
inc
test
cld
outsl
mov
push
call
sub
outsl
out
iret
sub
cld
test
fdivp
aad
pusha
ljmp
in
rcrb
movsl
test
or
cmp
sub
xor
leave
fistpl
dec
fs
sbb
mov
push
mov
xor
lahf
lcall
mov
mov
aas
outsl
iret
std
ret
xchg
pop
cmp
push
cmpsb
fbld
movsb
dec
mov
adc
sbb
aaa
mov
add
lret
aad
xchg
sbb
loop
mov
out
imul
lods
ret
sahf
lret
adc
out
or
sub
scas
dec
adc
popf
push
int
rclb
jl
dec
sbb
push
xchg
lods
jl
das
push
sbb
sub
push
wbinvd
dec
or
movsl
xlat
fucomip
and
insl
xor
fwait
adcb
xchg
mov
loopne
repnz
mov
shl
lock
jo
in
data16
ret
mov
roll
cmp
mov
jmp
out
pushf
add
sub
xchg
fidivrs
lret
fldcw
lret
mov
clc
jmp
cmp
and
fbld
and
sub
cmp
xchg
inc
sbb
dec
cltd
mov
mov
data16
inc
movups
adc
icebp
mov
mov
xor
inc
lcall
fld
jge
or
inc
sbb
sbb
cs
sti
fcompl
xlat
mov
iret
mov
sbb
jb
fstpt
stos
pop
add
aam
inc
inc
aas
push
push
pop
mov
sub
mov
mov
ss
imul
xchg
lods
ds
fistps
cmp
ljmp
mov
loop
sbb
pop
push
or
xor
push
dec
insb
sar
outsb
push
in
add
sub
xlat
lret
inc
in
fisubrs
mov
sar
push
out
repnz
lret
adc
push
js
jl
out
out
rorl
or
cmp
mov
imul
xchg
jne
cmp
sub
lret
ss
inc
sub
addr16
dec
pop
adcb
scas
sti
cmp
sbb
ja
sbb
outsb
push
and
xchg
bound
loope
in
jne
pop
pop
rorb
mov
push
mov
shll
lds
rol
lods
xchg
inc
add
pop
jecxz
mov
scas
mov
mov
daa
fwait
mov
fstl
dec
xchg
ret
add
clc
jnp
sub
int
data16
or
xchg
dec
int3
sahf
push
pop
js
movsb
shll
scas
inc
cltd
out
mov
test
pop
bound
mov
cmc
icebp
test
je
add
cmp
pop
dec
jge
cmp
das
xorl
jnp
jge
add
xchg
or
mov
mov
mov
popf
pop
filds
repnz
push
sahf
mov
and
inc
cmp
xor
or
lock
das
inc
sbb
fwait
mov
xchg
aad
scas
sbb
ljmp
je
bound
jge
lods
js
inc
push
int
and
jno
in
cld
jle
popa
in
push
negb
je
scas
fadd
cmp
outsb
pop
in
fisubl
pop
popa
popf
xchg
sub
push
stc
ljmp
stc
mov
jle
call
jl
loopne
jo
in
test
push
lret
es
pop
aad
ja
xor
insl
xorb
mov
add
dec
mov
and
aaa
pop
sub
scas
fs
enter
frstor
rorl
or
push
and
xchg
jae
pop
das
pusha
mov
outsl
in
shrd
push
out
call
xor
mov
lds
lds
mov
or
fs
ret
push
xor
adc
or
shlb
add
movsl
mov
and
jl
xchg
into
mov
push
fstl
xchg
and
repnz
pop
lock
fsubr
and
test
shlb
cwtl
fdivrp
fidivl
inc
cmp
rcrb
sub
fs
fsubrs
into
loopne
rcr
inc
int
es
push
pop
push
jl
ret
int3
jae
repz
jb
push
push
bnd
lods
loope
inc
idivl
incb
in
ljmp
lods
push
or
mov
jno
imul
shl
out
jbe
sub
pushf
or
pop
imul
inc
test
es
in
or
jae
daa
stos
imul
xor
nop
xor
adc
adc
ljmp
push
icebp
mov
adc
push
subb
push
cmp
aad
dec
sub
sbb
lods
pop
orb
sahf
dec
out
les
je
decb
lret
pop
adc
cmpsl
fadds
ss
jbe
mov
aas
cmp
iret
mov
mov
jle
pop
movb
fidivrs
sbb
test
push
sbb
jle
lretw
gs
mov
pop
cmp
cmpb
fadd
lea
xchg
push
sub
ljmp
push
insb
ds
rorl
mov
fwait
xchg
in
dec
outsl
xchg
pusha
pushf
pop
std
pop
pop
mov
cld
rorl
xor
test
mov
ja
mov
xchg
outsb
dec
rcrb
push
jge
movsl
fidivl
jne
daa
test
or
fsubs
lsl
mov
adc
add
and
mov
xor
ret
dec
mov
popf
cmp
adc
push
ficomps
xchg
movsb
push
jle
and
sub
push
test
sub
call
xor
stos
xchg
ficoml
mov
loopne
sbb
clc
xor
ja
xchg
pop
adc
and
scas
int
lea
mov
rcll
sub
js
fimull
loopne
insl
shlb
in
xlat
shll
int
mov
or
push
push
out
pop
add
cmp
xor
jne
or
lahf
pop
inc
std
xchg
in
aaa
sbb
add
leave
lea
sbb
mov
jle
test
push
sbb
sub
mov
xor
push
js
inc
fst
dec
fxam
mov
push
mov
mov
push
dec
pop
xor
push
stos
lret
test
rorl
push
push
xchg
jle
cld
out
or
inc
sti
div
sbb
dec
push
scas
jecxz
in
subb
sbb
cmp
push
add
out
fs
pop
cltd
ret
and
fs
dec
and
add
lods
pop
xchg
jge
loope
lret
add
out
in
mov
ds
rcrl
and
pop
fwait
sub
orl
insl
jp,pt
lods
jl
dec
cmp
jmp
insb
cmp
mov
mov
decl
popf
adc
lahf
or
and
nop
cmp
cmp
fcoml
xchg
xchg
adc
out
scas
popf
or
xor
ror
add
test
pop
lods
pop
mov
push
push
ret
mov
test
mov
or
xchg
hlt
lea
leave
shlb
es
out
gs
orl
daa
xchg
arpl
push
push
fstpt
pop
jge
xor
test
fists
add
nop
dec
out
clc
add
in
aam
test
xlat
xchg
mov
xor
dec
pop
int3
push
sbb
mov
push
add
cmpb
leave
xlat
jecxz
jle
cltd
push
ss
cmpsl
adcb
mov
adc
jl
arpl
and
pop
pushf
pop
xor
negl
bound
repnz
ljmp
les
mov
daa
jae
js
iret
mov
jl
sbb
inc
add
push
push
mov
loopne
and
pop
fnstsw
pop
enter
faddl
push
movsb
cmpsb
or
fmull
xchg
add
insb
cli
pop
and
dec
lahf
or
sbb
rolb
push
int3
int
icebp
mov
mov
nop
bound
data16
into
inc
mov
adc
mov
popa
out
cli
popa
aam
test
repz
sbb
mov
inc
push
mov
pop
int3
sbb
loopne
sbb
xchg
imul
sbbb
mov
add
fs
inc
dec
xchg
cmc
push
and
ljmp
sbb
or
outsl
loopne
pop
rcrb
fists
sub
fnstenv
add
xchg
scas
push
xorl
shll
movsb
in
xchg
les
popa
adc
push
push
push
cmp
data16
sub
insl
repnz
cld
xorl
mov
andl
mov
mov
cli
push
dec
jnp
inc
and
loop
pop
imull
pop
push
dec
adc
mov
add
movsl
jno
sbb
out
shlb
jmp
js
mov
mov
dec
inc
mov
pop
pop
in
test
push
push
rorb
iret
rcr
sub
mov
mov
mov
ss
pop
data16
insb
clc
lds
and
daa
jo
clc
test
jbe
mov
xchg
dec
add
jp
decl
das
fcmovu
lods
dec
call
mov
fdivrs
sbb
sbb
into
ret
xchg
add
aas
in
lret
in
in
in
aad
sub
jo
rorl
sbb
gs
xor
or
int
mov
cmc
jo
ds
es
dec
jp
push
sbb
mov
sub
push
dec
add
xchg
lret
push
loopne
mov
xchg
cwtl
jg
or
scas
adc
and
dec
sub
call
hlt
mov
es
testb
mov
lods
push
jbe
mov
es
push
data16
aam
cmp
push
push
stos
mov
push
repnz
mov
adc
adc
push
aaa
mov
inc
loopne
jnp
jno
bound
imul
popf
and
stos
cli
loope
loope
dec
pop
lock
mov
inc
jmp
stos
call
pop
scas
push
xchg
scas
pop
sbb
mov
leave
call
lret
mov
aaa
call
and
pushf
cld
cwtl
test
cltd
in
mov
sbb
dec
fs
fdivp
xchg
push
mov
mov
sub
roll
xchg
push
jg
push
cmp
nop
xchg
cmp
mov
cli
or
out
stos
ljmp
es
cwtl
push
cwtl
cmp
xchg
rcll
inc
pop
sub
add
inc
inc
lret
std
xchg
ja
ret
int
sub
mov
sbb
pop
sub
lret
mov
lret
repnz
out
inc
sbb
clc
roll
test
sbb
arpl
jo
mov
outsb
pop
dec
or
fcmovb
std
leave
popf
mov
lods
mov
call
pusha
hlt
fwait
js
daa
jae
pop
inc
jne
push
pop
xchg
out
fxch
xchg
sub
pop
shrb
add
sbb
aaa
push
outsl
dec
ljmp
nop
xor
xchg
pop
pop
sub
rclb
rcrl
sub
mov
xor
inc
xor
stos
icebp
cmp
testl
int3
push
mov
jp
nop
es
outsl
adc
push
lods
les
mov
out
push
xchg
xchg
or
or
xchg
sbb
pop
mul
testb
mov
nop
cld
xor
jge
jns
mov
xchg
xor
push
push
ja
idivb
mov
hlt
dec
mov
cmpsl
pop
cmpsb
sbb
nop
fidivs
movsb
pop
bound
and
inc
push
leave
out
in
xor
xchg
push
mov
add
jg
int3
sub
in
mov
out
xchg
jecxz
jl
sub
int3
add
jns
inc
cmp
add
xorb
lods
and
push
jne
jne
in
out
lea
jp
mov
scas
push
mov
in
mov
sub
xor
push
subl
shrl
mov
cmp
shlb
testl
jp
mov
pop
inc
cs
out
jg
mov
in
addl
leave
push
mov
pop
adcl
adc
nop
push
sub
or
sahf
mov
repnz
push
lret
ss
mov
mov
aam
lea
enter
push
mov
pop
mov
aaa
adc
pop
jae
mov
pop
fs
fcoml
adc
sbb
cli
std
call
lret
pop
scas
imul
jg
decb
sub
push
dec
jo
es
ss
mov
std
nop
lods
lea
shrl
outsl
js
adc
jle
sub
add
loope
pop
jg
xchg
es
dec
pop
xorl
out
cmp
cltd
stc
pop
pop
adc
hlt
mov
inc
lock
test
mov
cmpsb
pop
not
mov
add
xlat
aas
xchg
mov
mov
adc
cwtl
imul
mov
enter
lret
mov
jmp
jnp
enter
leave
es
scas
scas
mov
ror
push
dec
ljmp
es
inc
out
mov
test
loop
cltd
cmp
fs
call
lods
mov
int
sub
fbstp
jp
ss
lcall
pop
push
sbb
push
pop
ss
mov
lret
jge
xor
mov
pop
sbb
adcb
sbb
inc
add
push
mov
imul
mov
aaa
out
push
mov
adc
jmp
bound
push
addr16
arpl
jnp
lds
bound
cwtl
jecxz
mov
push
insb
fwait
adc
xor
mov
lods
jno
xor
dec
mov
sti
mov
pop
jl
mov
xchg
into
jge
mov
rcr
push
fidivrs
iret
and
out
mov
popa
jmp
mov
or
cmp
xor
inc
fwait
jmp
jne
lods
jle
fstl
and
pop
ljmp
pop
mov
imul
sub
mov
cld
dec
subl
gs
popa
jbe
mov
pusha
dec
mov
enter
sub
nop
icebp
popa
jmp
xchg
push
test
lahf
mov
pushf
mov
fs
jecxz
ds
add
cmp
jge
pop
lock
shll
in
int
add
xor
xchg
pop
loopne
cmc
dec
ss
testl
dec
sub
add
ljmp
les
cmpsl
imul
pop
jne
mov
fimuls
movb
mov
push
cli
sub
push
cmpsb
test
out
sub
fwait
cmp
pusha
das
jns
mov
stos
jge
mov
addr16
out
lods
ds
addb
or
add
mov
inc
mov
pop
outsb
stos
mov
jmp
nop
fs
cmpsl
data16
cmp
dec
push
bound
mov
xor
cli
int3
xchg
sarl
rcll
pop
nop
push
push
pop
fcomp
gs
adc
test
dec
xor
mov
cwtl
popa
clc
fisttpl
pop
mov
pop
dec
int3
xchg
push
aas
aam
inc
in
adc
in
andb
adc
and
fdivr
push
adc
sub
fidivs
fiaddl
subb
push
xchg
add
sbb
arpl
lahf
xor
lea
adc
mov
xchg
lods
cwtl
add
lret
pop
jae
call
repnz
pop
jne
outsb
sub
mov
and
jmp
loop
lret
fs
or
add
roll
sti
mov
jl
popf
scas
mov
out
inc
pop
or
pop
pop
and
mov
in
sbb
out
and
pop
or
mov
enter
mov
mov
mov
add
and
inc
js
daa
xchg
nop
add
shrl
inc
and
fstps
or
or
xor
ret
push
lock
mov
add
cmp
inc
sub
call
out
jne
fmull
aaa
lods
clc
adc
jb
xor
adc
arpl
popa
into
cmp
or
mov
xchg
jb
xor
mov
lods
ret
mov
out
add
jae
and
ja
fildll
cmpsb
outsb
pop
loop
movsl
out
inc
jae
fsubl
loope
js
mov
pmulhuw
rorl
mov
xor
lods
aad
cwtl
shl
cmpsl
leave
lods
int3
or
aam
cltd
xor
mov
push
stc
fadds
and
push
adc
pop
mov
xchg
jns
divl
xor
fnstenv
mov
mov
mov
jge
mov
lret
mov
dec
in
mov
sub
paddsw
dec
cli
mov
sti
push
inc
popf
mov
pop
or
fs
inc
pop
imul
mov
pop
dec
ret
mov
push
cmp
ss
or
ret
mov
dec
push
jle
fdivrl
lds
popa
mov
mov
mov
push
lods
frstor
inc
mov
bound
jmp
inc
das
out
xchg
ja
jle
add
sub
lcall
cmp
xchg
ret
lahf
fcmovu
mov
mov
inc
jle
xchg
jbe
notb
daa
dec
and
call
popf
in
cmp
jns
xchg
lcall
repnz
sub
xchg
out
mov
pop
pop
jle
cmp
xabort
hlt
mov
aaa
jmp
jb
xor
mov
adc
sbb
je
in
mov
dec
jle
pop
out
lret
and
popf
pushf
sahf
dec
sbb
jno
shlb
mov
xchg
push
cwtl
mov
sbb
lret
inc
add
fnstcw
lret
mov
inc
xchg
push
sub
hlt
xchg
add
push
jg
je
push
push
xor
inc
jp
xchg
daa
mov
jecxz
jg
adc
push
imul
or
pop
or
sub
lds
push
lds
lret
lcall
fistl
imul
xchg
sahf
pop
add
push
addb
jle
stos
test
test
call
sbb
cmpsb
mov
jle
mov
pop
adc
mov
adc
into
aam
data16
in
push
lods
sub
sbb
call
cmpsb
xor
mov
mov
sbb
lods
aad
xor
mov
mov
popf
pop
inc
cmp
les
inc
push
xchg
sub
sar
js
inc
cmp
gs
dec
and
sub
xchg
sub
lahf
fdiv
mov
out
push
sarb
orb
jno
call
and
pop
jns
sub
inc
sbb
and
stc
outsb
push
call
ds
and
pop
bound
sub
movb
fidivs
xor
in
ficompl
and
xchg
cld
sbb
outsb
add
fisttpll
add
xchg
push
fimuls
pop
mov
push
xchg
out
fchs
sbbl
outsl
push
imul
mov
sub
and
lods
sub
ret
jnp
test
dec
cmp
and
or
aaa
pop
jbe
or
xchg
test
lods
add
sub
and
inc
sbb
jns
std
add
aam
pop
cwtl
push
sub
xchg
js
mov
pop
or
mov
xchg
cmp
fdivs
xchg
stos
gs
aad
dec
shlb
shrb
mov
mov
cwtl
mov
xor
push
stos
ljmp
out
or
push
in
mov
add
push
and
jl
xchg
fcomi
jns
lds
inc
lcall
or
imul
add
mov
sbb
stos
add
adc
scas
inc
fdivrl
jp
xor
mov
bnd
xor
andb
sub
add
scas
sub
les
mov
jo
dec
adc
push
mov
mov
add
andb
pop
fs
in
in
mov
in
popf
mov
push
jle
rcr
mov
js
add
lds
push
and
add
jmp
mov
dec
insl
fdivr
into
scas
sub
adc
daa
pop
bound
loopne
pushf
std
addr16
inc
xlat
dec
or
mov
outsl
dec
mov
addb
jno
mov
movsl
mov
lret
mov
loope
push
int3
pop
fs
xchg
in
fs
sarl
fstps
push
sbb
ja
dec
xchg
sbb
call
hlt
cmp
bswap
test
push
mov
addr16
in
dec
ret
leave
add
rol
xchg
jo
fadds
sbb
mov
pop
cmpsl
clc
stos
jne
mov
push
loopne
and
or
push
sbb
add
jns
loop
mov
daa
xor
lock
ret
scas
or
fidivs
pushf
or
push
fwait
inc
push
inc
add
sbb
jmp
xchg
out
sub
insl
stos
leave
mov
ficomps
out
test
mov
cmp
jle
ss
out
icebp
push
fcoms
add
pop
mov
cmc
jecxz
ja
mov
pop
inc
out
dec
sbb
xchg
movsb
jae
cmp
inc
movsl
xor
leave
mov
and
jle
fnsave
mov
insb
mov
lret
jbe
cmp
pop
add
pop
xchg
sub
repz
dec
mov
insl
add
movsl
test
lock
je
scas
mov
scas
add
push
icebp
sub
nop
jbe
int
call
mov
xchg
pop
repz
cmpsl
fadds
push
inc
aas
ja
pusha
fldcw
xor
fistpl
repnz
mov
push
enter
loope
aas
jg
insl
push
loope
loop
mov
jno
inc
icebp
dec
xor
aas
mov
insb
adc
adc
xor
sbb
xor
jns
pop
or
pop
and
loop
adc
push
call
shld
mov
xor
or
mov
mov
shl
or
xor
xor
xor
xor
mov
mov
jmp
mov
add
mov
mov
mov
mov
mov
mov
movzwl
cltd
jmp
dec
inc
aad
push
pop
movsl
sbb
les
mov
xlat
push
push
push
pop
and
dec
mov
outsb
add
je
or
mov
loope
mov
mov
call
mov
addr16
cmp
das
shrb
push
push
lahf
sub
sub
out
jl
fnsave
loop
loopne
icebp
inc
das
push
sub
jl
ret
xor
mov
pop
mov
add
paddsb
mov
or
shll
xchg
mov
jp
enter
lret
popf
xchg
pop
sbb
fcmovnu
pop
xchg
jle
je
jo
jnp
mov
jp
fisttps
mov
test
std
sbb
pusha
call
in
mov
xchg
dec
sbb
clc
or
hlt
aad
sbb
repnz
cmp
fsubl
ret
fsubs
inc
jns
and
and
jmp
fistpl
mov
push
out
movsb
cli
add
push
pop
out
pushf
sahf
mov
mov
pop
mov
mov
clc
sub
sbb
add
in
cmc
cmpsl
adc
push
pop
fs
std
je
mov
dec
in
push
jecxz
lcall
in
dec
add
cmp
stos
and
xchg
dec
addr16
xor
movsl
xchg
mov
cmp
mov
mov
add
dec
fnsave
out
js
sub
mov
mov
pop
addr16
dec
and
adc
adc
out
rcll
push
sbb
xor
shr
mov
cld
mov
aad
xchg
test
gs
fdivrs
gs
mov
rorl
loopne
mov
cld
inc
clc
inc
xor
jmp
mov
mov
mov
mov
xlat
cmc
and
fadds
push
ljmp
in
fwait
mov
std
movsb
into
cs
xchg
das
cmp
cmp
les
mov
ja
sti
pop
faddl
pop
inc
divb
fwait
lods
loopne
pushf
cmp
ds
xor
xor
fidivs
insb
jge
pushf
or
inc
loop
sbb
sahf
stos
popa
cli
add
mov
pop
cmp
push
repz
jbe
xchg
mov
jne
mov
mov
xor
push
sub
add
pop
inc
mov
int3
into
inc
lock
aam
icebp
add
popf
mov
jg
add
adc
add
push
cmp
cmp
ss
adc
repnz
sbb
fldt
outsb
jl
pop
lret
mov
out
add
inc
pop
pushf
scas
jmp
pop
pop
mov
into
add
xchg
test
test
call
xchg
jnp
call
and
xchg
and
out
ret
repnz
and
push
pop
jb
lods
test
stos
lret
test
xor
divl
and
xchg
pop
jl
cs
hlt
mov
test
mov
rorl
dec
xchg
in
push
xchg
cmp
lock
jecxz
outsl
sarl
inc
or
cs
ljmp
sbb
dec
loopne
inc
jge
sbb
push
xor
add
aas
popa
mov
jbe
sahf
mov
cltd
add
add
lods
push
or
data16
mov
xchg
cli
shlb
dec
pop
stc
shrl
enter
mov
pop
js
cld
and
ret
xor
insl
fmull
sbb
mov
je
call
outsl
mov
test
nop
xor
adc
or
xchg
xchg
fsubr
mov
mov
inc
mov
fnsave
xchg
sbb
int3
sub
out
xor
paddsw
call
mov
push
addr16
fmuls
lock
je
popa
mov
das
xor
data16
inc
loopne
mov
jo
and
lock
es
int
fiadds
addr16
sahf
jne
xchg
add
outsb
test
cmp
pop
insb
xlat
addl
fwait
jle
lods
sbb
in
aad
jge,pt
andb
mov
xchg
js
out
mov
sti
cwtl
cltd
dec
mov
andb
mov
mov
ja
js
cmpsl
inc
data16
aaa
movsb
mov
and
std
mov
fcompl
dec
stc
push
cmpb
loop
aad
repz
mov
adc
mov
push
dec
hlt
pop
inc
add
movb
pop
pop
sar
dec
xlat
mov
les
add
xchg
inc
ljmp
dec
lret
jae
fildll
ds
pop
jbe
mov
dec
add
leave
pushf
mov
push
dec
add
mov
and
gs
aas
ror
rcrl
loope,pn
shl
cmp
mov
test
cli
das
fwait
or
xor
loope
dec
hlt
imul
mov
test
test
bound
pop
lea
push
mov
and
call
sub
mov
stos
repnz
or
adc
dec
stc
cld
mov
icebp
add
cmp
cmpsb
xor
jno
mov
lret
mov
loop
enter
dec
cmp
add
pop
and
mov
sub
jo
imul
jmp
sbb
pop
inc
xor
jmp
sbb
add
and
jmp
pop
aam
nop
loope
arpl
sbb
jbe
push
pop
shlb
xchg
dec
aam
inc
mov
inc
rcrb
sub
jns
sub
push
in
mov
call
sub
pop
shrl
lods
popa
arpl
ljmp
sub
insl
dec
loop
dec
addr16
lds
push
inc
icebp
mov
lods
cmp
fs
jp
out
pop
fwait
dec
popf
xchg
push
cmp
aaa
inc
dec
dec
lahf
popf
dec
fnsave
pusha
ret
ss
mov
jno
stc
cltd
inc
mov
es
movsl
leave
and
loop
scas
or
div
fnstenv
std
mov
pop
test
push
sbb
cmp
xor
mov
pop
pop
push
adc
mov
xor
sub
lret
or
jo
insb
divl
test
xchg
xchg
mov
and
sbb
movsb
out
mov
sbb
pop
ja
mov
bound
insl
andl
xchg
pushf
sbb
popf
or
in
xor
xor
sbb
pop
data16
jo
jp
sbb
lcall
aas
clc
mov
or
insb
mov
jb
fwait
stc
aad
lret
jne
aaa
cmpsb
mov
outsl
icebp
daa
es
or
fildll
in
clc
shl
cltd
aaa
jle
jg
sub
inc
mov
jmp
out
js
or
inc
cwtl
push
mov
mov
or
fistpl
jne
dec
fnstsw
incb
mov
pushf
push
push
jns
mov
cli
jl
mov
mov
adc
adc
ss
push
add
scas
xchg
outsb
stc
cld
or
fs
stc
outsl
inc
mov
fldt
cld
and
scas
cmpsb
xchg
cwtl
test
dec
lcall
aas
sti
rcrb
jg
jno
stc
je
push
xlat
js
jl
hlt
inc
pop
push
mov
mov
jecxz
call
add
dec
icebp
push
xchg
cmp
adc
add
dec
fidivl
pop
shrb
hlt
or
rcrl
xchg
jnp
cwtl
and
jecxz
xor
mov
jg
or
sbb
fnstsw
std
scas
call
mov
add
lret
fnsave
push
add
jb
lea
orl
mov
int
daa
out
push
add
popf
iret
xchg
adc
lds
dec
in
mov
inc
mov
jno
mov
mov
icebp
jne
stos
mov
ljmp
sti
and
aam
outsb
shll
sbb
xchg
push
outsb
sti
inc
mov
inc
pop
mov
jae
sub
je
mov
stos
in
out
repz
jno
jns
dec
test
insl
loope
movsb
xchg
lcall
scas
push
faddl
in
sahf
sub
pop
mov
lcall
aas
add
jne
mov
sbbl
sub
mov
jbe
and
xchg
xor
call
frstor
xor
push
inc
jle
inc
add
pop
cli
dec
imul
inc
mov
mov
jae
pusha
inc
cmp
mov
sbb
mov
cld
insb
push
aaa
xor
imul
pop
nop
gs
cltd
xor
cmp
xchg
add
cld
mov
adc
cmpsb
jnp
xor
call
aaa
add
lret
inc
jno
jl
mov
testl
adc
pop
nop
sti
outsb
jbe
xor
pop
push
jns
pop
jnp
sbb
out
xor
dec
inc
add
pop
outsb
outsb
push
mov
mov
stos
cmpsl
gs
cmp
xchg
jg
fwait
insl
push
adc
popf
imul
inc
pusha
lods
test
xlat
mov
pushf
bound
mov
and
xchg
sbbb
arpl
mov
sbb
lds
scas
cmp
push
lea
xor
xchg
jle
data16
push
aad
test
push
sub
xor
fsubl
pop
mov
add
test
test
cmp
lods
dec
lock
rcrl
pop
shl
out
outsb
and
pop
or
inc
in
or
xor
add
mov
repz
mov
push
notl
or
pop
push
pop
jbe
sti
fsubl
sbbl
push
xchg
and
sub
pop
push
push
inc
push
sub
inc
dec
ficoml
ljmp
icebp
cwtl
mov
js
nop
jecxz
pop
aaa
js
icebp
icebp
sarl
inc
adc
lahf
ljmp
pop
shlb
inc
addl
dec
arpl
repz
jp
xchg
push
mov
adc
mov
sarb
lods
inc
outsb
push
sbb
push
jmp
mov
movsl
je
pop
dec
faddl
mov
mov
out
fwait
and
and
das
cmpsl
jle
rcrb
lock
leave
mov
lods
incb
daa
pop
xchg
rorb
xchg
sbb
aaa
daa
jnp
rorl
pushf
push
arpl
fadd
in
xor
inc
and
dec
jbe
cli
xchg
aad
fisubs
pop
adc
pop
das
hlt
push
lahf
jp
lcall
inc
inc
jnp
adc
imul
testl
pop
jns
cwtl
mov
andb
in
mov
push
shll
cmp
xor
adc
sbb
les
aad
insl
adc
mov
aam
lds
xchg
out
fcmovne
shrb
xchg
insl
pop
and
or
cmpsl
dec
push
jo
sahf
enter
pop
cmp
decb
loope
push
mov
aam
cwtl
mov
add
cld
sbb
popa
jns
js
xchg
insb
jp,pn
pop
sbb
xchg
shll
add
arpl
push
mov
xor
xor
dec
ljmp
sbb
xor
xor
cwtl
lds
mov
mov
push
aas
shrl
lea
xor
outsb
loope
xor
add
test
lret
mov
scas
movsb
jb
mov
mov
subl
cmp
pop
in
loopne
mov
rorb
mov
and
push
jecxz
fildl
mov
je
fstl
fwait
jno
ret
pop
aaa
repnz
xchg
pushf
cld
rorb
push
cli
cmpsl
loop
fstpt
test
jno
shrl
dec
aas
mov
insl
rorb
hlt
aaa
add
ds
jmp
cmc
xchg
daa
pop
addb
shl
pop
cld
out
xchg
mov
lea
dec
dec
test
xchg
jge
dec
jno
xchg
pop
jns
mov
push
int
pop
es
dec
pop
daa
pop
push
xlat
fistl
scas
sti
pop
dec
push
add
sbb
iret
ss
mov
and
push
mov
pop
or
sub
pop
js
js
cmc
pop
bound
lcall
es
mov
loop
inc
mov
ds
dec
xor
xchg
cmp
pop
xchg
mov
out
ds
les
sub
xor
pop
loopne
jge
idiv
subb
stos
pop
jnp
inc
movsb
push
sub
push
mov
fimull
xorl
out
sahf
and
mov
lods
cmp
adc
pop
and
dec
add
cld
jecxz
cmpsl
rcll
fmuls
aad
inc
movsb
xor
mov
enter
jns
inc
fdivrl
xor
testb
sahf
test
scas
dec
fcoml
inc
mov
dec
xchg
adcb
addr16
faddl
dec
sub
call
shrl
lret
mov
push
fistl
outsb
cmpsb
add
dec
sti
movsl
pop
rorb
add
cld
subl
pop
nop
xor
imul
push
jmp
fiaddl
outsl
add
xchg
xchg
xchg
mov
cmp
icebp
scas
adc
imul
mov
daa
lock
add
test
jle
int
or
mull
adc
mov
out
sub
sbb
mov
add
std
xchg
dec
and
ret
push
mov
add
dec
sbb
push
mov
cli
adc
sbb
lds
and
ret
or
xor
xchg
outsb
mov
mov
pop
aas
push
out
arpl
push
fsubr
or
lods
or
and
add
or
loope
dec
in
loop
mov
push
divl
cmp
xchg
test
pop
in
testl
or
test
insb
mov
lods
jns
into
cmp
leave
jns
ret
aad
or
jecxz
and
mov
cmpsb
adc
or
movzwl
cld
mov
adc
jbe
jae
xchg
pop
rcl
xor
aam
and
leave
rcll
cmp
shlb
mov
pop
jmp
xor
jmp
int3
pop
mov
addl
scas
xchg
or
arpl
ljmp
popl
add
mov
mov
lahf
inc
vandps
add
mov
fcoml
ljmp
sbb
test
xor
adc
xor
mov
jmp
cwtl
pop
xor
call
lret
stc
stc
xor
aam
or
shlb
sub
stos
ja
sub
jecxz
shll
sbb
lods
jae
mov
mov
dec
fucom
mov
sub
cs
pop
xor
cmc
sbbb
mov
imull
sbb
in
push
sbb
mov
mov
mov
mov
in
sub
push
mov
mov
pop
fs
xor
inc
xor
and
out
orl
mov
insl
push
adc
push
inc
inc
xor
inc
cltd
enter
ret
mov
xchg
test
in
mov
adc
lahf
and
inc
pop
ds
mov
enter
mov
or
imul
lods
push
mov
mov
push
insb
stos
outsl
mov
pop
repnz
sbb
mov
orl
ljmp
xor
pushf
pop
adc
push
scas
mov
and
jge
mov
cmp
mov
ljmp
dec
lea
das
xchg
mov
fstpl
pop
js
icebp
dec
test
cmpsb
push
ds
xchg
adc
jecxz
pop
idivl
push
fdiv
arpl
add
lret
int
xchg
fsubrl
nop
mov
xchg
xchg
push
cli
mov
pop
inc
mov
cwtl
lods
in
sbb
adc
movsl
or
cltd
sub
rcl
shlb
jp
jge
mov
xchg
cltd
in
push
dec
rcr
sbbb
mov
out
call
lds
lods
data16
outsl
call
mov
test
xchg
test
cmp
push
insl
cmp
mov
imul
xor
xorl
sbb
test
loopne
cmpsb
out
iret
aas
lret
mov
stos
jo
push
push
cmp
dec
lds
movsb
push
xchg
sahf
arpl
adc
sub
jle
mov
fxam
hlt
lea
lea
lcall
loopne
jecxz
nop
sbb
std
addb
fcmovne
int
add
mov
jp
push
int3
ficomps
jg
pop
xor
popa
cltd
mov
sbb
es
xor
lcall
ss
enter
push
push
imulb
lea
dec
cmp
test
jno
sub
ljmp
ljmp
cmpsb
sahf
cltd
sar
xchg
icebp
lods
leave
cmp
test
call
jmp
or
push
inc
cli
nop
arpl
lret
mov
pop
test
cmpsb
mov
call
mov
test
sub
aaa
movsb
loopne
pop
sbb
imul
mov
or
jns
sub
js
addr16
aam
fistl
push
stos
adc
adc
push
dec
inc
add
lds
adc
out
or
lahf
mov
sbb
sbb
scas
jp
movsb
push
mov
stc
jb
flds
pop
jb
cmp
daa
lretw
adc
mov
fsubl
fucomp
lcall
call
ret
push
popf
pop
adc
stos
or
fdiv
movsl
in
xchg
inc
sub
sahf
jb
scas
xorb
mov
mov
in
pop
xchg
cs
ljmp
out
iret
mov
stc
fsubrl
jg
ljmp
into
cmp
andl
test
insl
dec
cmpsl
jo
orl
scas
orb
sbb
mov
rep
lods
stos
arpl
xchg
inc
test
cli
pop
or
push
stos
jl
adc
push
or
inc
addl
dec
jp
and
int3
dec
pop
out
shr
int3
mov
pop
mov
rolb
out
mov
popa
mov
mov
mov
xchg
dec
bound
mov
sbbb
pop
fnsave
mov
push
cli
mov
mov
jmp
fsubr
xchg
mov
ss
mov
pop
xchg
inc
repz
or
or
into
fwait
je
and
cmp
xlat
pop
stos
test
popf
cmpb
dec
push
das
enter
and
mov
mov
adc
sub
push
daa
shlb
xor
dec
jns
fiadds
jmp
out
dec
int3
clc
jecxz
sbb
cs
pop
sub
out
les
adc
sbb
sarl
movsb
cli
mov
iret
rol
cmp
inc
pusha
jb
adc
mov
jo
enter
or
mov
jge
mov
xlat
mov
test
adc
or
loop
daa
adc
jbe
cltd
xchg
mov
adc
mov
ljmp
ljmp
insb
jp
lret
and
push
loop
or
in
cld
fsubrl
mov
add
repz
rorl
and
ds
push
mov
cmpsl
xchg
fs
add
into
cwtl
das
stc
cmpsb
stc
cmp
aas
mov
ja
lret
iret
mov
mov
fldenv
pop
sti
xchg
add
cmp
push
test
outsb
rcl
imull
out
sbb
jecxz
je
sarb
imul
or
aam
dec
je
mov
xchg
jge
inc
sub
mov
pop
imul
loop
lea
ljmp
cmp
dec
xchg
je
nop
cld
into
dec
adc
dec
cwtl
fimuls
test
mov
idivl
xor
push
ret
jnp
adc
ljmp
outsl
mov
call
inc
aas
mov
inc
xlat
out
jne
pushf
psadbw
and
loope
aad
inc
push
or
pop
mov
mov
add
daa
and
ds
popa
insl
jl
push
push
xchg
cmp
in
ja
xchg
or
push
lret
ret
mov
in
sub
lods
push
call
xlat
lds
les
outsb
fnstcw
sbb
push
or
mov
into
dec
adc
lds
mov
out
mov
pop
dec
mov
fnstsw
sub
xor
cmp
rorl
inc
pop
mov
dec
aaa
push
lods
jns
inc
ret
push
cmpl
out
add
inc
test
enter
mov
ror
pop
adc
mov
sub
ret
sbb
xchg
fcomps
int3
dec
mov
jns
push
insb
je
pop
or
mov
iret
xor
cmpsb
mov
mov
in
nop
in
dec
adc
insb
cltd
xchg
and
shll
jg
pop
xchg
test
jae
jecxz
mov
push
push
loope
xorb
lahf
aam
or
pop
mov
loopne
add
bound
fisttpll
jmp
push
add
sub
and
jbe
xchg
jo
aad
ds
addl
push
test
js
and
hlt
mov
in
imul
subb
out
xchg
das
adc
int
mov
push
pop
inc
lret
out
call
jmp
pop
mov
sub
cmpsb
in
rcrb
mov
mov
add
test
adc
sub
dec
ret
mov
jbe
xchg
jne
out
inc
and
popf
imul
addr16
mov
pop
cmp
out
int3
loopne
mov
cmp
sub
scas
mov
aad
mov
push
loop
push
mov
xchg
lcall
mov
inc
add
xor
sub
push
jnp
lods
sahf
stos
cmp
jae
jle
cmpsl
or
js
negb
int
loop
repz
add
lds
inc
mov
test
das
repz
pop
and
sarb
aaa
fcoml
add
enter
icebp
ret
mov
pop
dec
and
mov
mov
idiv
fwait
pop
cmpsb
mov
ret
sub
sbb
gs
aam
push
pop
or
mov
inc
xor
loope
dec
mov
loope
sub
es
pop
popf
jno
mov
test
jle
mov
sti
aam
cli
and
aaa
ljmp
xor
je
inc
or
addb
xchg
sbb
insl
inc
cmp
std
cwtl
or
pop
xor
jmp
std
roll
xchg
xor
jge
and
aam
fwait
xchg
adc
cmpsb
or
ret
mov
ja
in
sub
cmp
add
or
and
mov
lods
xchg
or
cltd
jle
inc
cmp
insl
es
jae
sbb
or
or
sub
and
xchg
jp
xchg
rolb
add
jb
into
outsb
adc
xchg
nop
je
sbb
xor
dec
sub
ss
push
inc
xor
lods
xlat
ret
lahf
in
jae
dec
lods
loopne
into
fbld
dec
sahf
dec
pop
ret
or
cmpsb
push
sub
clc
jp
in
lds
hlt
push
hlt
push
xor
ds
mov
sub
pusha
pop
push
lcall
mov
jg
xchg
or
andb
mov
mov
lahf
pop
pop
icebp
sbb
mov
je
test
aas
ja
repnz
icebp
ret
add
cltd
mov
sub
and
arpl
cwtl
or
pusha
jg
jo
sbb
mov
jle
xchg
inc
out
testb
sbb
or
loopne
jb
dec
push
test
sbb
stc
or
adc
rcl
add
int3
ja
mov
and
mov
dec
arpl
mov
icebp
push
cmp
std
sub
mov
leave
xchg
xchg
mov
mov
and
push
inc
les
mov
sti
cli
jno
inc
adc
jg
fstpl
mov
or
or
mov
pop
or
dec
sti
cs
mov
or
pusha
mov
loopne
cmp
push
out
fstpt
es
add
icebp
cmp
cmpsb
pop
cmc
cmpsl
rorl
popa
xchg
mov
popf
shll
mov
jne
incl
mov
enter
jmp
jmp
cmpb
movsb
aaa
fwait
ss
scas
mov
test
adc
adc
push
xchg
adc
jno
fidivrl
fisttpl
push
inc
dec
std
mov
adcl
cld
in
lds
fcoms
les
jle
mov
jno
adc
stc
jle
repnz
sbb
push
xchg
cltd
rorb
or
movsb
stc
and
les
cmpsb
cmp
int
sub
cmp
cmp
adc
mov
or
daa
and
mov
movsb
cmpsl
call
pop
add
fisttpl
roll
popf
stos
ja
popa
cs
movsb
mov
sbb
addr16
movsb
adc
xchg
and
sbb
lea
mov
ficompl
fcoml
sbb
sub
clc
pop
sbb
mov
outsl
in
and
sub
mov
leave
xacquire
fsubp
out
xchg
daa
pop
repz
ret
shll
inc
sahf
stos
push
iret
andl
or
push
dec
mov
cmp
iret
outsl
cmp
sbb
pop
adc
rcl
rclb
lret
inc
sub
push
mov
lahf
pop
mov
xchg
decb
cmp
cld
mov
jp
jmp
push
inc
cwtl
popf
and
mov
aaa
adc
push
jnp
bound
sub
mov
xchg
xor
ljmp
outsl
jle
xor
push
in
mov
add
pop
mov
cmp
xchg
shl
icebp
xor
inc
ret
mov
cmp
das
jnp
adcb
pop
xor
sarb
icebp
test
fcmovnb
fsubrl
cltd
adc
xor
push
inc
or
sub
adc
dec
xchg
ljmp
pop
xchg
aaa
add
xchg
or
data16
insl
mov
jns
cld
out
setno
data16
sub
lods
testb
mov
mov
aad
out
aaa
call
sbb
push
nop
cwtl
stos
sbb
fwait
call
or
xchg
movsl
xchg
ljmp
outsb
jbe
pop
xor
in
std
outsb
adc
out
fwait
mov
inc
push
movsb
ficoml
mov
clc
add
outsb
inc
outsb
ja
lea
es
or
stc
push
aad
cld
pop
arpl
frstor
lret
imul
sub
stc
popa
das
lods
in
loope
pop
popf
aam
jg
mov
sbb
jnp
andl
dec
cltd
int3
rorl
lahf
push
sbb
push
negl
cmp
mov
push
cmp
dec
mov
mov
push
aaa
orb
negb
lahf
fildll
ljmp
xchg
ror
and
dec
shlb
and
and
adc
hlt
outsl
sahf
jnp
xorb
push
pop
jg
aam
popa
js
xor
sarl
and
mov
inc
mov
sti
and
loopne
and
test
xor
fidivrl
mov
push
scas
mov
mov
jmp
clc
leave
dec
pop
or
cwtl
sbb
mov
or
aam
test
push
jnp
shr
pop
call
adcl
and
cwtl
cs
adc
mov
mov
fcmove
add
insl
or
pop
xchg
mov
cmp
mov
roll
std
idivb
fidivs
mov
in
fsubrs
nop
in
mov
cmp
pop
movsl
lock
cld
outsb
mov
loopne
aaa
popf
push
mov
push
call
or
sub
lea
pop
push
lret
xchg
dec
imul
pop
leave
or
cwtl
xchg
dec
xor
or
pop
imul
xchg
pop
fwait
cmp
xlat
call
pop
leave
and
xchg
pop
roll
out
ljmp
gs
ficoml
inc
mov
xor
aaa
repz
cmpsb
pusha
push
clc
push
cmp
fidivrs
sbb
sub
pop
xor
scas
cmp
orb
out
loopne
cmc
mov
loop
sbb
aaa
push
pop
aas
xchg
ds
or
mov
adc
add
or
push
fisubrs
in
inc
sub
in
fcompl
enter
or
ljmp
cmp
jle
stc
cmp
xchg
mov
push
rorb
mov
out
dec
mov
adc
gs
jecxz
movsl
stc
mov
mov
jle
add
test
loopne
jne
inc
js
xor
sub
xor
cmp
imul
ss
dec
test
push
shld
xor
mov
mov
shl
mov
mov
xor
mov
cmp
jne
mov
cmp
jne
movl
mov
movl
mov
movl
mov
movl
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
add
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
xor
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
add
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
or
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
shl
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
add
mov
mov
shrd
shr
mov
mov
xor
shl
mov
xor
or
mov
add
shrd
xor
shr
mov
mov
xor
or
mov
or
shl
mov
mov
shl
mov
xor
mov
mov
mov
xor
xor
shrd
shr
or
xor
or
mov
mov
mov
mov
xor
shl
xor
mov
mov
mov
mov
xor
xor
shrd
or
shr
mov
mov
or
mov
cmp
jne
cmp
jne
jmp
mov
mov
mov
mov
mov
xor
shl
mov
mov
xor
mov
mov
xor
xor
shrd
or
shr
mov
mov
or
mov
mov
push
pushl
push
push
call
mov
mov
shrd
shr
shr
xor
push
xor
mov
mov
mov
push
jmp
cli
shll
mov
xchg
mov
ret
inc
mov
or
sub
push
push
lock
mulb
jecxz
aas
xchg
imull
movsb
sbb
pop
pop
das
scas
or
pop
push
adc
and
inc
mov
xchg
dec
es
mov
bound
sbbl
mov
pop
popa
rol
mov
mov
sbb
jge
sbb
push
sub
jns
xor
inc
insl
cli
mov
sbb
jns
fwait
mov
cmp
sarl
or
push
lea
push
lds
enter
mov
imul
push
ja
lea
jecxz
pop
gs
pusha
cmc
cwtl
push
imul
push
inc
icebp
out
sahf
call
mov
cld
pop
enter
mov
jo
adc
in
inc
fs
out
xchg
fldcw
dec
imul
pushl
cmp
lods
ss
or
adc
mov
dec
subb
mov
sti
mov
sub
cmp
lret
aad
pop
movsb
xchg
inc
enter
test
sbb
fstl
dec
pop
js
pop
push
sub
xor
out
repnz
inc
in
outsb
fbstp
pushf
int3
lods
cmpsl
add
bound
xchg
add
insl
mov
jmp
jmp
movsb
ja
xchg
sbb
cld
xchg
inc
and
xchg
mov
jne
push
or
cmp
dec
xchg
inc
stc
mov
mov
leave
in
fsubrs
mov
out
cld
adc
adc
cltd
push
mov
out
leave
jl
icebp
jae
push
xor
mov
xchg
roll
dec
cwtl
fists
imul
mov
mov
xchg
gs
in
push
shrb
cmp
xor
je
nop
jns
xor
test
js
jge
out
out
cwtl
roll
bound
insl
and
push
adc
cmp
xchg
push
imul
rcrl
pop
adcb
mov
xor
imul
lea
dec
xor
jns
and
push
ja
pushf
mov
out
mov
sbb
je
jne
addr16
push
scas
notb
or
inc
out
sub
mov
lcall
das
xor
push
ret
cs
sahf
jp
icebp
push
dec
jge
mov
xchg
and
ljmp
inc
fldcw
push
loopnew
rcrl
aam
popa
leave
xchg
adc
add
xchg
pusha
sub
inc
lret
shlb
or
xor
repnz
mov
scas
or
inc
ds
fldl
call
xchg
push
mov
jge
test
loop
push
fwait
jge
pop
stc
and
movb
aas
movsl
mov
loopne
jle
pop
push
xor
xchg
call
jge
add
sbb
jns
fdivl
mov
or
addb
pop
cmp
fwait
andb
or
repnz
lahf
mov
fcoms
cmpsb
loop
pusha
loopne
in
sub
lret
mov
in
mov
xchg
inc
les
lods
addr16
jb
dec
imul
arpl
push
mov
or
push
mov
inc
add
leave
shll
cmpl
test
pop
adc
add
lods
fwait
cli
addl
dec
dec
cmp
gs
and
lea
pop
cmp
and
pop
loop
cwtl
inc
ljmp
mov
push
sub
jg
pop
mov
mov
xchg
arpl
cmp
adc
sub
pushf
sbb
mov
inc
cld
xor
stos
aaa
sub
push
mov
mov
repnz
sahf
pop
or
cli
push
cmpb
pusha
imulb
mov
pushf
outsl
cld
or
mov
push
mov
sub
mov
je
xchg
and
out
dec
in
dec
jle
repnz
push
mov
leave
ret
mov
jle
or
inc
mov
int3
xor
xchg
and
imul
mov
lahf
addps
stc
inc
xor
xor
dec
lcall
mov
push
xchg
test
dec
jge
jnp
jo
and
inc
mov
jle
push
negl
xchg
clc
mov
mov
mov
in
or
rolb
push
lds
mov
and
cmc
sub
adc
mov
sub
dec
call
fwait
push
mov
aaa
out
jecxz
mov
ss
xchg
test
xchg
adc
inc
sbb
imul
loop
pop
or
mov
cmp
jnp
pop
lcall
pop
or
test
fcomps
jmp
gs
or
pop
dec
fbstp
lret
leave
mov
jmp
decl
and
xchg
lods
sub
push
ss
mov
shll
ss
leave
xchg
mov
notb
dec
adc
int
scas
cwtl
imul
and
mov
and
cmp
mov
add
data16
cmp
sub
pop
insl
fidivrl
mov
shll
aam
ljmp
push
push
xchg
sub
das
cmp
sbbb
cmp
jbe
mov
push
lahf
lahf
nop
xlat
stc
xchg
sbb
mov
lea
jns
fldt
push
push
scas
pushf
push
jne
sti
mov
mov
ljmp
push
inc
ljmp
pop
arpl
xchg
pop
mov
mov
rol
mov
sub
adcl
pop
adc
xchg
aam
test
ja
adc
mov
push
lock
jg
aam
in
add
popf
ret
sub
mov
sbb
in
shll
dec
test
cmp
js
adc
mov
mov
mov
jl
inc
mull
popl
rcr
fists
pop
rcll
enter
xor
sahf
mov
xor
in
push
mov
xchg
mov
jne
lret
xor
out
ret
cmpl
sub
rclb
cmc
pushl
sbb
shl
xchg
inc
and
lock
cmp
addr16
xchg
fbstp
jno
sbb
jns
xchg
sbb
push
imul
inc
ficomps
and
int
sbb
xorl
stos
aad
adc
std
stc
loope
loopne
and
xor
lea
leave
push
cmp
bound
and
mov
ret
das
dec
xor
pop
cltd
loop
pop
mov
sub
xor
pop
mov
into
sbbb
shll
mov
jmp
fs
stos
popf
pop
faddl
jmp
sub
repnz
jle,pn
dec
shr
aaa
js
mov
es
addl
jl
pop
cld
push
mov
pushf
stos
hlt
cmp
sub
callw
rcll
popa
add
pop
inc
adc
leave
ds
cmp
mov
loopne
int3
lret
fucomp
mov
jae
sbb
adc
ljmp
out
ret
call
ret
sbb
inc
dec
push
sbb
pop
out
xor
lret
mov
in
dec
dec
xchg
aam
push
frstor
pop
in
pop
and
loop
outsb
inc
lret
inc
test
mov
dec
loopne
push
mov
dec
push
rcrb
mov
or
test
mov
loope
sbb
jbe
out
pop
orb
gs
stc
sub
out
inc
xor
cmpsb
mov
pop
pop
xchg
stos
pop
pop
pop
stos
mov
rcll
insl
fistl
adc
movsb
mov
xchg
ror
fldt
pop
subb
imul
sub
sbb
test
sahf
shll
addr16
and
dec
cmpsl
mov
std
test
add
mov
sarl
xor
jae
jmp
mov
fs
cmpsl
adc
js
cmpsl
scas
jmp
sbb
jmp
idivb
xor
or
js
and
or
add
add
pop
cli
jae
push
xchg
and
ljmp
int3
add
xchg
lea
cs
aam
enter
sub
cmp
add
mov
lods
cmc
jne
dec
jno
mov
or
aam
push
clc
fcmovbe
scas
je
jmp
in
cltd
jne
mov
push
repnz
pusha
xchg
push
ret
add
jl
mov
fs
shll
mov
xchg
outsb
jae
xor
shlb
push
xchg
iret
adc
fstpl
sub
xchg
shlb
stos
int
leave
std
les
cmp
iret
cltd
dec
pop
insb
xchg
xchg
popf
jmp
xor
and
outsl
sti
jmp
aam
imul
sarl
inc
add
out
mov
ret
fcomps
mov
push
dec
aad
jae
sahf
lods
fstpt
jmp
and
ja
ret
dec
ss
push
sub
leave
and
add
lret
repnz
in
sbbl
push
es
xchg
test
insb
repnz
scas
incb
mov
adc
rol
nop
pop
mov
adc
sbb
lock
mov
pop
push
movsl
jp
push
mov
push
xlat
movsb
out
les
stos
sbb
int3
psubsw
pushf
inc
les
push
loope
loopne
push
in
dec
mov
mov
iret
xor
data16
push
clts
or
mov
or
in
roll
dec
hlt
push
aaa
mov
bound
push
jne
lods
out
leave
popf
add
sub
stos
pushw
sub
shll
sti
xchg
add
ja
jae
lahf
mov
xchg
mov
icebp
mov
mov
out
sub
cmp
test
dec
pop
add
push
outsl
cs
and
gs
cld
xchg
sub
cmpb
in
sub
sbb
cmp
cmp
and
call
movsb
xor
cs
cmp
push
cmp
lods
jae
add
shr
out
pop
push
dec
sahf
pop
adc
lret
inc
mov
sub
jbe
dec
dec
sub
mov
pop
adc
push
clc
pop
sti
inc
push
xchg
sbbl
xor
jl
mov
jo
push
lea
int3
in
aad
sbb
inc
test
test
fucomi
out
mov
outsb
xchg
jle
jae
dec
fists
sarl
shr
pop
addb
xor
testl
rcrl
pop
xor
xchg
addr16
mov
inc
push
pop
or
das
adc
call
mov
test
test
sub
fs
mov
mov
jg
mov
lcall
out
add
sbb
in
popf
pop
xlat
mov
shr
in
cli
call
pop
mov
pop
adc
cmpsl
or
in
loope
cmp
inc
sbb
lods
cmpsl
aaa
mov
sbb
out
push
sbb
stos
xchg
lcall
push
mov
jo
mov
inc
jle
in
lods
aad
adc
shrb
mov
add
rcrb
fbstp
aaa
arpl
mov
and
mov
mov
or
rcrb
out
inc
xchg
cmp
into
pop
xchg
add
insb
sbb
pop
adcb
push
pop
int3
test
dec
lret
dec
outsl
mov
pop
out
icebp
sbb
addr16
mov
jmp
sbb
adc
xor
push
mov
repnz
xchg
mov
xchg
jo
lock
cmp
jge
ror
push
xchg
ja
popa
add
cmc
imul
popf
mov
mov
dec
mov
xor
insb
int3
adc
adc
mov
xor
sub
aas
jge
rorl
decl
fdivp
jl
pop
xlat
inc
out
or
call
xlat
lcall
clc
pop
push
sub
fwait
sbb
jl
mov
bound
pop
mov
xlat
mov
sub
mov
aas
scas
xorb
inc
data16
es
inc
into
jae
cmp
mov
xchg
inc
pminsw
sub
jp
xor
and
mov
loopne
dec
sti
sub
push
negb
and
cli
mov
scas
cmp
xchg
or
pop
pop
test
mov
pop
adc
inc
out
stos
flds
jge
push
and
mov
dec
sbb
or
dec
mov
pop
stos
sub
es
fcmove
jnp
daa
movsb
inc
sbb
mov
orb
pop
scas
sarb
pop
sub
and
mov
popa
dec
imul
pop
jecxz
lret
mov
or
xor
jmp
jne
and
jae
gs
out
mov
leave
test
lcall
adc
sbb
ficomps
and
fisubl
add
mov
out
iret
lret
gs
rcr
fistl
inc
pop
xchg
insb
jne
adc
inc
jl
xor
shr
lahf
sahf
cmp
ss
in
movsl
add
out
push
cmp
xor
cli
jns
aaa
xlat
mov
repz
xchg
mov
dec
push
jmp
jno
repnz
daa
push
shlb
xchg
leave
jae
cmpsb
jne
test
cld
clc
cli
adc
xchg
cltd
push
les
pop
fisttpl
sbb
int
roll
jnp
push
sti
push
ret
fisubl
ret
push
dec
test
lahf
dec
fs
xchg
dec
fildl
jl
push
repnz
or
mov
adc
xchg
aaa
shll
push
jmp
xchg
fdivrp
jbe
xchg
sbb
add
in
std
mov
jbe
mov
cld
xlat
jnp
mov
inc
adc
jle
cmpsb
in
in
fnstenv
and
inc
insl
pop
lods
jmp
out
lds
pop
sbb
movsb
fiadds
ficoms
mov
flds
push
push
mov
lret
arpl
sub
enter
cmpsb
fldt
sbb
inc
lods
ret
dec
cmp
xchg
inc
in
inc
test
mov
int
call
fwait
xchg
clc
add
enter
mov
stos
movsl
ficoms
insl
lods
int3
pop
jmp
jge
aad
popf
push
jnp
jae
xor
add
jo
mov
and
inc
out
ja
fldt
popf
test
aaa
and
mov
lods
shrb
mov
je
jle
movsb
xchg
repz
stos
pop
insb
mov
pushf
mov
xor
hlt
mov
xor
shll
cwtl
xor
ljmp
pusha
lahf
cmp
dec
fdiv
pop
push
js
fwait
incl
iret
inc
jns
in
mov
jbe
stc
sbb
loopne
lds
xchg
cmc
icebp
dec
cmpsl
mov
sub
clc
xor
fwait
sbb
or
xor
and
in
movsb
jmp
int
das
xor
repz
imul
nop
pminsw
lcall
repnz
aaa
testb
dec
push
pop
xchg
mov
adc
mov
loopne
test
xor
int
in
cmp
dec
les
or
aaa
hlt
inc
pop
ja
aam
popf
sbb
fiadds
aam
notb
fmull
fidivs
push
sub
mov
jmp
push
mov
and
and
adc
dec
and
in
sub
loope
enter
jne
lods
out
subl
cmpsb
and
inc
cmp
jge
aas
pop
inc
sub
fcmovu
fistpll
pusha
imul
pop
sbbl
stc
and
lahf
loope
stos
xlat
loope
arpl
aad
cmp
jb
pop
pop
ja,pn
dec
cltd
insl
pop
insb
aaa
or
imul
testl
sti
adc
mov
or
enter
cmp
pop
sub
push
adc
shlb
int
sub
add
movsb
inc
iret
jne
mov
lock
ja
jg
sub
adcl
out
hlt
inc
cmp
xor
sub
or
jmp
xor
xor
mov
aas
inc
push
jnp
and
pop
test
rorl
pop
enter
in
pop
in
das
mov
adc
repz
dec
jl
nop
cmp
aam
inc
outsb
jae
sub
or
inc
lea
push
and
push
out
shll
sub
cmp
jo
add
addb
out
insl
xor
es
dec
shr
ljmp
ljmp
jg
cmp
add
mov
mov
movsb
ja
dec
sbb
neg
pusha
sbb
add
jbe
dec
mov
push
lcall
or
in
sub
or
in
in
pop
int3
mov
subl
dec
cmp
adc
cs
fidivrs
mov
mov
mov
and
xorl
cmp
out
push
push
cmp
pushf
adc
ret
pop
ljmp
pop
inc
sub
aaa
dec
push
jge
lcall
xor
inc
xor
xor
inc
in
xchg
movsb
out
out
dec
ficoml
pop
addr16
pop
pop
or
scas
xchg
leave
mov
push
and
mov
add
dec
popf
push
loop
sub
sarb
inc
js
cmc
arpl
nop
xchg
rolb
fwait
jo
mov
mov
cmp
push
adc
add
xchg
xor
cmpsl
push
je
push
repz
in
mov
push
xlat
clc
in
push
repz
movsl
loopne
mov
mov
stos
dec
fwait
lret
mov
decb
mov
pop
pop
push
movsb
cmp
cli
lcall
loope
loope
dec
push
mov
cmpsl
rorl
aam
mov
or
es
sbb
mov
sbb
inc
jbe
sub
sbb
int
arpl
jmp
dec
fnstenv
dec
shrl
gs
scas
or
cltd
xchg
pop
cwtl
jmp
pop
les
js
adc
cmp
mov
enter
cmpsl
rorb
lret
xchg
inc
lret
movsl
push
and
movsl
mov
pop
dec
sbb
add
fmuls
mov
sarl
add
test
adc
cmp
stos
or
xchg
sbb
push
loope
stos
iret
sub
inc
and
enter
test
pop
out
mov
add
cwtl
mov
mov
jle
shlb
in
jcxz
dec
gs
mov
shlb
adc
aam
push
and
xchg
xor
shl
rorb
cmp
xchg
push
lea
push
ret
mov
lock
stos
pop
outsl
cmp
arpl
inc
andl
lahf
add
jne
push
pushf
addr16
rcrb
adc
xor
add
jge
mov
jo
mov
jne
cmp
pop
cli
push
mul
cmp
dec
test
shl
xchg
mov
jno
pop
cmp
sbb
je
dec
cmp
ss
cmc
push
sbb
sbb
dec
outsl
inc
jmp
fdivrs
sbb
and
pop
movsl
adc
clc
mov
lret
pop
aad
mov
sbb
sbb
sbb
sbb
adc
popf
push
sbb
aas
mov
cltd
sub
nop
adc
inc
out
mov
aam
hlt
xchg
pop
loopne
shl
add
fidivl
sub
fwait
mov
iret
and
mov
mov
mov
out
sbb
loop
sub
sub
in
bound
enter
enter
sub
push
ret
call
adc
decb
fiaddl
ret
adc
outsl
dec
clc
scas
aas
or
pop
lock
es
dec
pushf
mov
cmp
neg
outsl
cmp
loope
mov
in
outsl
mov
cld
xor
dec
jl
mov
mov
cs
jns
leave
mov
fs
int3
pop
pushf
sarb
cld
out
jne
jmp
fcmovnbe
or
mov
inc
lods
push
cmpsb
in
sub
cmp
test
or
mov
rcll
push
stos
push
movsl
cli
cmp
jecxz
sar
shll
fldcw
inc
and
xchg
sbb
les
pop
add
out
pushf
vcomiss
shrb
or
fcmovnb
mov
jnp
push
or
lods
push
mov
dec
mov
xchg
outsb
arpl
fs
add
dec
fisubs
popa
stos
out
cmp
mov
push
add
push
icebp
insl
cmc
mov
movsb
int
pop
pop
cwtl
ds
xchg
mov
popf
mov
lock
add
or
mov
popf
es
insl
out
inc
icebp
out
xchg
popf
push
imul
adc
cs
popa
scas
jg
aam
adc
cmp
jl
repz
cmp
punpckldq
mov
jns
and
push
rcl
test
addr16
stos
movsb
jns
or
insb
int
add
jns
mov
xor
enter
xor
ret
fadd
mov
in
test
adc
in
adc
adc
dec
fwait
popa
fcomps
subb
sub
pusha
jle
fwait
inc
mov
adc
sub
xchg
call
test
mov
sub
bound
push
inc
adc
dec
or
adc
jge
mov
sub
or
ror
xor
in
lock
hlt
aas
outsb
cld
and
js
push
xor
jns
jbe
std
mov
cwtl
das
cmp
mov
outsl
xlat
sbbb
mov
mov
xor
push
loopne
xchg
fs
jae
lods
int3
fwait
or
add
pop
mov
sbb
cltd
sti
lret
pop
test
push
pop
iret
mov
movsl
scas
jne
jge
sbb
cmpsl
loope
outsl
lcall
mov
enter
pop
std
in
dec
ret
pushf
pause
cmp
aam
adc
filds
repz
mov
movsb
dec
inc
stos
add
mov
in
cli
mov
sbb
sti
inc
sahf
mov
mov
test
cmp
cli
or
push
push
lods
loope
andl
sbb
idivb
pop
loope
jecxz
cmpsb
cwtl
mov
wrmsr
push
jge
jmp
das
xchg
jne
in
call
stos
mov
pop
push
xor
pop
ljmp
subl
cmp
and
into
popa
lds
lods
push
popf
outsb
je
das
mov
shl
inc
xor
dec
in
mov
mov
ds
push
ret
xchg
pop
xchg
mov
xchg
or
js
adc
sbb
push
stos
enter
pop
jne
mov
cwtl
pop
xor
add
arpl
pop
pushf
rorb
sbb
jbe
push
insb
addl
mov
xchg
rcl
mov
add
sbb
adc
pop
addl
insb
xorl
stc
add
mov
mov
js
xlat
xchg
adc
loope
ljmp
inc
sbb
ret
xor
out
push
or
movsl
push
push
xchg
fdivp
pushl
test
mov
lds
dec
pushf
dec
ret
cmp
jne
xchg
arpl
stos
fsubl
mov
push
cwtl
xor
lock
ljmp
fsubrp
push
mov
pop
inc
pop
jae
mov
sub
icebp
pop
pop
imulb
std
sub
mov
cmp
fsubrs
movsl
shlb
jne
mov
andl
hlt
fisttpll
push
or
lock
incb
es
fcoms
mov
out
in
shll
loope
pushf
in
xor
xchg
push
mov
stc
push
jg
dec
lcall
insl
cmpsl
pop
movsl
stc
les
adc
cmp
rcl
movsb
jp
pop
loope
and
subb
mov
or
movsb
fs
loope
push
or
mov
addr16
adc
popf
push
push
loopne
xchg
xor
cmc
xchg
iret
mov
lds
js
les
mov
fldcw
adc
in
aam
cmp
mov
rorl
test
mov
mov
gs
clc
in
jae
pop
jle
or
dec
sbb
ret
add
cwtl
int3
add
sti
dec
fsubrl
scas
cld
pop
mov
adc
sbb
sub
clc
arpl
mov
shrb
sub
mov
scas
push
sti
iret
rcrl
mov
and
xchg
fadd
pop
scas
lret
iret
jnp
xchg
and
and
adc
dec
sub
jle
into
mov
jge
mov
loop
mov
into
fbld
pop
and
aas
cld
leave
int
enter
test
sub
jp
jno
subl
insl
xchg
pop
leave
iret
aas
inc
xchg
shlb
cltd
inc
inc
fsubl
pop
mov
jg
int3
aad
xor
stc
jnp
jne
and
dec
and
add
inc
loope
iret
adc
mov
mov
or
and
movl
repz
shl
mov
sbb
int3
hlt
pop
sar
out
stos
test
add
jmp
bound
shrb
push
add
stc
push
xor
call
in
sub
jmp
aas
hlt
push
aad
negb
sub
insb
or
ficompl
sarb
movsl
movsl
mov
insl
out
cli
sub
es
add
or
sub
xor
js
stc
daa
adc
inc
sahf
cmpsl
in
push
insl
or
ja
mov
xor
sarl
fwait
xlat
jno
aas
inc
pop
mov
mov
popf
shlb
mov
or
mov
cli
inc
or
mov
pcmpgtb
mov
mov
inc
inc
ss
mov
sbb
and
ja
out
pop
add
lock
pop
hlt
inc
mov
ror
dec
lea
mov
das
fisubs
pop
push
popf
repnz
fistps
mov
pop
and
lds
mov
test
cmp
mov
xlat
lret
push
add
loop
popf
sub
inc
stos
mov
in
filds
pop
pop
inc
dec
out
div
loope
ficompl
mov
lock
popa
adc
mov
in
adc
test
iret
lock
and
pop
inc
bound
pop
scas
movsb
mov
add
jbe
cltd
adcl
adc
pop
lea
mov
mov
pushf
pop
ret
test
mov
ja
lret
xor
or
insl
cmc
addr16
ret
out
lcall
fnstsw
jnp
call
pop
sti
icebp
repnz
das
shlb
cmp
andl
mov
out
rorb
xchg
push
aas
add
leave
lcall
mov
mov
inc
push
cmpsb
pop
jp
out
das
sub
mov
push
push
in
xor
in
test
fsubr
dec
out
pop
imul
mov
mov
mov
xor
roll
sbb
into
test
adc
cli
out
and
aaa
inc
iret
popf
inc
add
clc
xchg
or
pop
mov
sub
loope
fwait
jo
and
imul
incb
cmp
xchg
sub
sbbb
inc
rcrl
jne
add
and
and
insl
insb
in
mov
imul
push
daa
outsb
pop
mov
fnstsw
jne
or
and
fucom
or
setnp
mov
lds
sub
mov
addr16
roll
mov
jecxz
add
mov
inc
lret
xchg
dec
pop
pop
jp
outsl
mov
je
loope
fidivrl
dec
int3
xor
das
rorl
jmp
xorb
aas
add
xor
adc
or
scas
aam
push
lcall
popf
jge
push
mov
push
int3
xchg
int
fdivr
repnz
por
hlt
movsl
pop
leave
xchg
cmpsb
stos
lret
int
dec
insb
mov
ss
rol
adc
inc
mov
mov
pop
or
es
add
mov
loope
adc
dec
cli
add
scas
mov
cwtl
hlt
lret
orl
adc
push
dec
insl
popf
adc
scas
mov
add
nop
push
and
push
loopne
popa
and
xlat
mov
jo
lock
pop
or
test
sti
pop
xor
jg
adc
fldl
out
sbb
call
js
jmp
pushl
xchg
repnz
mov
icebp
mov
clc
mov
mov
xor
leave
sbbb
pop
mov
iret
adc
push
sbb
pop
or
or
mov
or
add
shld
shl
mov
or
xor
or
xor
xor
mov
mov
mov
mov
mov
mov
shl
xor
mov
mov
mov
xor
xor
shrd
shr
or
xor
mov
or
mov
mov
mov
shl
xor
mov
mov
mov
xor
xor
shrd
xor
shr
or
or
cmp
jne
cmp
je
pushl
pushl
pushl
push
push
call
pop
leave
ret
movl
cmp
jae
cmp
jae
shrd
movl
shr
ret
xorl
mov
xor
and
movl
shr
ret
xor
xor
ret
push
mov
sub
movl
cmpl
movzwl
mov
movl
jmp
mov
mov
je
pushl
pushl
pushl
push
push
pushl
call
not
or
and
xor
mov
mov
movl
cmpl
movl
mov
mov
mov
jmp
movl
mov
jg
pushl
call
orl
sbb
sub
sbb
adcl
mov
or
mov
movl
cmpl
mov
mov
mov
jmp
not
jb
pushl
pushl
call
adc
xor
or
xor
add
or
sbb
inc
addl
movl
dec
movl
decl
movl
movl
movzbl
or
movl
cmpl
movl
movl
jmp
mov
movl
jge
push
call
adc
mov
mov
sub
and
sbb
subl
mov
or
mov
mov
sbb
mov
mov
sub
mov
push
mov
movl
sbb
mov
andl
mov
xorl
push
orl
push
xorl
push
subl
push
addl
call
xor
mov
cmpl
mov
mov
mov
movzwl
jmp
movl
movl
jg
push
pushl
push
pushl
pushl
call
or
or
adc
addl
xor
add
adc
sbb
mov
xorl
xor
and
cmpl
mov
movl
jmp
movl
movl
jg
push
push
call
sbb
sbbl
sub
notl
xor
add
sbb
xor
xor
add
and
mov
mov
sub
or
and
or
mov
adcl
and
cmpl
mov
mov
mov
jmp
movl
jl
push
pushl
push
pushl
call
add
sbbl
and
or
mov
sub
sbb
movl
mov
or
movl
movl
movl
movl
mov
addl
mov
mov
mov
add
movl
push
adc
push
subl
and
and
push
andl
push
xorl
call
mov
mov
cmp
movl
ja
jb
cmp
jae
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
add
mov
adc
mov
or
or
add
adc
xor
xor
add
mov
adc
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
jmp
loope
cwtl
cwtl
mov
push
push
xchg
int
push
or
lcall
pop
xor
dec
xor
in
pop
test
int
lcall
shrb
or
cmpsb
mov
and
out
xchg
xchg
jecxz
sbb
cltd
add
lahf
clc
popf
shl
iret
mov
insl
addl
outsl
mov
mov
xor
jle
cmp
or
sbb
jno
sar
mov
mov
orb
addr16
mov
cmpsl
lret
push
data16
mov
loopne
pop
xchg
shlb
icebp
into
insb
out
pop
lcall
mov
push
pop
sub
push
and
call
repnz
mov
cmp
sbb
pop
sub
mov
jl
and
shll
cmovs
jb
sti
imul
push
pop
adc
xchg
jg
inc
mov
jle
mov
ja
adc
sub
subb
jle
das
dec
addr16
lahf
js
ds
repz
jbe
mov
push
mov
mull
outsb
mov
dec
int3
adc
lock
insb
das
addl
push
icebp
add
fsts
lods
into
pop
daa
sub
push
shl
jb
lods
and
sbb
ljmp
ss
pop
inc
and
jo
mov
aaa
aas
dec
mov
popa
fildl
mov
push
test
pop
into
inc
and
cmpsb
scas
mov
and
push
push
aas
jmp
add
and
out
mov
sbb
push
xor
or
xlat
cwtl
imul
arpl
in
das
stos
mov
add
loope
lahf
imul
sbb
mov
loop
icebp
xor
add
push
jae
dec
push
imul
pushf
inc
in
rcrb
std
hlt
cmp
ficoml
shr
sti
in
mov
mov
dec
and
or
xchg
pop
mov
xchg
jns
test
sub
loop
adc
inc
inc
push
lods
fnstenv
mov
hlt
or
cld
outsl
push
in
pop
push
adc
and
in
jg
stos
or
inc
cld
ret
imul
idivl
lods
mov
pop
aas
sub
aas
cmpsl
sbb
lret
xchg
mov
and
dec
lcall
xor
xchg
push
ret
dec
cmp
push
or
cwtl
xchg
xor
push
mov
mov
mov
rclb
jbe
popa
call
jbe
fstpl
loopne
mov
rol
imul
xor
nop
pop
and
fnstsw
pop
pop
scas
xor
popa
mov
pop
lcall
mov
cmp
lods
mov
push
jge
dec
cmp
dec
inc
push
cmpb
test
int
or
sub
push
es
inc
adc
sbb
push
xchg
aaa
scas
ss
push
or
mov
mov
or
push
pop
mov
out
dec
push
mov
push
push
sub
sbb
add
fs
clc
bswap
mov
xchg
orb
mov
jns
cli
mov
fs
frstor
mov
add
sbb
mov
mov
scas
pop
or
repz
jmp
rcrl
insl
mov
das
shrb
pusha
lock
aas
pushf
sar
and
inc
xchg
jbe
pop
inc
and
bound
out
out
out
mov
and
repnz
out
cs
pop
mov
add
push
and
xor
in
and
icebp
push
cmp
lahf
loop
push
dec
dec
and
fwait
incl
sbb
rcr
xor
stos
adc
stos
cmp
fcmove
mov
out
lahf
fstpl
push
nop
push
bound
nop
loopne
fwait
add
imul
pop
lock
pop
jns
pop
xchg
inc
aam
jne
mov
pop
pop
hlt
inc
mov
lret
mov
pop
pop
jno
dec
inc
adc
fwait
xor
call
pop
sbb
jo
push
popf
cmp
add
insl
cmp
frstor
daa
mov
add
int
insb
ficompl
movsb
sub
xor
dec
dec
popa
addr16
addl
ja
cmp
xor
mov
enter
mov
inc
cmp
aas
insb
lcall
sbb
xchg
push
mov
movsb
push
pushf
ja
test
sbb
add
arpl
xor
out
aaa
inc
jle
movsl
pop
adc
ret
mov
lock
sbb
cmpsl
fmuls
or
inc
mov
inc
sbb
lock
sbb
jge
ret
test
popf
bound
mov
adc
or
xchg
lock
scas
stos
je
rcrb
sbb
out
fcompl
lock
imulb
leave
loope
push
outsl
push
and
add
mov
add
mov
cmpb
adc
pop
lahf
push
into
jae
sarb
test
push
stos
xchg
stc
or
movsb
jp
out
clc
popf
outsb
out
aas
leave
xchg
sbb
enter
test
push
pop
pop
and
xor
dec
inc
mov
xor
jne
or
and
enter
push
mov
repnz
jbe
xchg
or
out
cli
lea
cmp
mov
inc
pop
rorb
add
data16
cmp
fadd
pop
lcall
out
out
lahf
push
cmpsb
mov
inc
inc
jg
js
cmpsb
dec
push
orps
loop
movsb
es
and
push
mov
mov
or
sub
cmp
jle
lods
jnp
mov
cmp
aaa
pop
aam
add
fcmovu
and
stos
xor
xor
push
push
imul
cmp
stc
xor
dec
sti
pop
loop
xor
scas
xor
repnz
inc
pop
scas
and
daa
repnz
cwtl
fidivrl
mov
out
popa
mov
movsb
mov
imul
and
clc
lods
adc
adc
and
fldl2t
push
btrl
xchg
test
jg
fcoms
adc
inc
push
mov
clc
jl
stc
sub
add
test
mov
inc
adc
dec
jae
add
and
xlat
insb
push
cmc
jbe
jne
jb
xor
dec
jae
xchg
push
jecxz
addr16
iret
mov
std
mov
or
shrb
movsb
ljmp
or
lock
push
jl
movsb
xor
cltd
jo
sub
sub
stc
jno
push
mov
add
lahf
fcompl
test
adc
iret
imul
push
xor
or
int
popa
div
push
jo
ljmp
fwait
add
jb
fsub
dec
ret
push
test
rorb
mov
es
add
jge
testb
stos
cmp
test
mov
add
inc
jo
imul
sbbb
mov
add
imul
pop
dec
fnstsw
inc
call
insl
adc
fimuls
out
test
mov
xor
sub
cli
hlt
insb
cmp
jge
or
add
mov
pop
ds
fnstcw
sub
or
adc
mov
push
dec
lea
adc
pusha
ret
pop
mov
clc
xchg
into
lock
vunpcklps
ret
rcl
and
jb
add
loopne
xlat
mov
cmp
lret
loop
std
cmpsl
xchg
add
cmp
mov
shlb
les
leave
inc
xlat
outsl
mov
mov
std
mov
outsb
pop
shr
jge
adc
push
and
in
imul
push
sub
xchg
cmp
sub
mov
sub
xchg
aad
rorl
cwtl
add
jle
push
fwait
aam
fcmovne
inc
mov
jns
adc
pop
xor
popa
loope
nop
repz
and
leave
shlb
and
sbb
adc
mov
orb
sbb
xchg
mov
cmp
mov
shlb
idivl
addl
ljmp
jae
pop
mov
addl
mov
cmc
ret
push
adc
into
and
repnz
sub
inc
cmp
fs
imul
cmp
in
rcr
aad
lock
lret
fiadds
jmp
int
jno
and
mov
mov
orl
popf
cmp
mov
jo
loopne
dec
jae
and
frstor
dec
jl
and
jp
cmp
js
xchg
pop
loop
jbe
popf
jmp
addb
inc
sti
ret
adc
cltd
adc
xor
in
popf
scas
test
ret
pop
iret
repz
push
sbb
mov
test
movsb
das
test
push
ds
sbb
mov
sub
sbb
pop
test
xchg
xorl
outsb
sti
mov
lds
cld
dec
push
jns
in
lods
sbb
loopne
mov
out
iret
cld
stc
mov
or
scas
leave
xchg
insl
scas
ja
loop
mov
pop
movsl
notb
sub
xor
aaa
test
addr16
cmpl
jg
mov
ret
out
push
jge
fs
xor
cmpsl
dec
adc
movsl
mov
sti
xchg
mov
cld
push
pop
xchg
or
in
loopne
xchg
or
mov
adc
cmp
adc
aad
aam
int3
mov
ss
mov
stc
inc
je
jbe
fstpt
repnz
aas
push
sbb
cmpsl
dec
mov
xor
cmpsl
inc
fstsw
sahf
dec
loopne
pop
or
xor
lret
mov
pop
outsl
mov
addr16
jg
adc
push
cld
dec
je
mov
fnsave
xor
insb
jns
inc
test
push
js
mov
shll
adcb
xchg
mov
out
sub
pop
out
or
daa
jmp
lahf
je
adc
adc
dec
xchg
cld
mov
fld
xor
push
int
dec
test
xchg
dec
adc
adc
gs
xchg
rolb
dec
mov
loope,pt
mov
scas
popf
in
loopne
mov
add
cmp
jnp
xor
mov
push
fisttpll
pop
jne
sbb
sbb
mov
xor
mov
jo
lods
mov
dec
or
push
addr16
adc
hlt
push
in
mov
dec
xchg
insl
nop
jle
mov
stc
add
xchg
mov
mov
mov
arpl
aaa
push
push
xchg
sbb
push
loopne
data16
call
shlb
ss
jnp
add
xchg
mov
jae
xchg
out
stos
daa
mov
pop
and
dec
rcl
sbb
call
add
push
cmp
into
push
pop
push
sub
push
aas
pop
or
push
mov
shrl
xchg
idivl
leave
add
je
sub
add
lock
and
jg
call
or
push
lret
sub
scas
je
lahf
cmp
cli
hlt
push
mov
jo
mov
hlt
inc
or
pop
sub
hlt
gs
inc
jnp
dec
or
mov
leave
jnp
mov
or
mov
iret
adc
insl
or
add
stc
mov
inc
mov
mov
sub
sub
fwait
pushf
pop
dec
jbe
dec
xor
ret
fildll
ret
dec
pop
pop
sahf
test
mov
xchg
inc
cltd
out
out
cmp
inc
adc
test
lretw
xor
shll
or
movl
call
mov
sub
add
add
jp
movsl
fisttps
cmpsl
aaa
cmp
imul
inc
or
jbe,pn
xchg
mov
sbb
inc
popf
ja
inc
lahf
pop
add
fwait
xlat
addl
push
cs
imul
sbb
sbb
and
fcmovnb
sahf
add
dec
divb
pusha
push
fimuls
adc
repnz
or
add
cmpsb
fwait
test
sbb
xor
fcomps
std
mov
xor
cmp
xchg
test
inc
add
push
mov
jecxz
lds
and
aad
xchg
jmp
pop
pop
inc
loopne
push
aam
sbb
inc
in
push
insl
div
ljmp
or
xor
lret
fidivl
add
or
inc
das
pop
in
aaa
out
push
mov
das
ror
lret
push
aam
pop
mov
mov
cmp
sub
addl
jmp
shlb
insb
loop
stos
mov
ret
sahf
flds
mov
sti
mov
xlat
xor
jle
xor
push
dec
inc
mov
xchg
fldl
fstl
gs
rcrb
popa
add
xchg
adc
mov
clc
scas
push
add
mov
cmpsl
mov
and
push
scas
mov
shlb
inc
xor
dec
mov
cli
je
in
cwtl
fs
and
or
mov
outsb
fildll
ret
pop
push
js
out
insl
mov
icebp
push
aaa
out
cmpsl
sahf
xchg
mov
mov
sbb
je
xchg
mov
cmp
xchg
lods
cmp
into
mov
mov
pushf
pop
loope
ss
inc
pushf
and
insl
mov
fists
popf
or
out
lahf
int3
test
cwtl
sub
aam
pop
out
aad
lock
inc
insl
scas
insl
jns
lcall
xchg
inc
push
mov
add
mov
arpl
xchg
fdivs
cmp
scas
sbb
daa
jl
clc
daa
repnz
dec
int
nop
sub
pop
movsb
dec
or
sahf
scas
jecxz
cs
scas
in
push
pop
xchg
lea
lods
insb
mov
popf
lret
push
mov
jecxz
and
dec
aaa
lods
ljmp
pop
push
jge
loopne
push
aad
aad
pushf
sub
push
rcr
cli
pop
stos
mov
fwait
clc
mov
mov
or
bound
pushf
lahf
movb
jb
xchg
and
mov
lods
hlt
ret
sahf
jg
xchg
cmc
mov
xor
cltd
cmc
jp
push
or
ds
lock
sub
sbb
xor
inc
pop
mov
push
dec
js
out
mov
fwait
sti
rolb
leave
or
adc
shrl
jb
xchg
mov
cld
sub
cmp
sub
in
cmpsl
mov
adc
mov
mov
and
fwait
jne
data16
lcall
sub
dec
dec
out
lea
jb
inc
add
ljmp
push
push
jns
jecxz
lahf
sbb
pop
dec
loope
pop
stc
jne
sub
and
jl
daa
sbb
push
mov
lods
inc
in
sub
cmpsb
push
mov
mov
test
lret
data16
add
mov
out
add
mov
lcall
and
jmp
jle
jbe
mov
lcall
lret
insl
or
sti
or
jno
dec
mov
cmp
fs
das
das
shlb
add
in
jne
loop
stos
adc
add
mov
test
mov
lret
nop
pmaxub
movsb
aad
aam
sub
mov
or
je
xchg
or
dec
sub
mov
stos
pop
push
mov
cmp
xchg
shrl
jae
jge
inc
fisttps
add
push
int
jl
jp
push
sub
xchg
jg
adc
out
int3
push
jmp
inc
mov
inc
imul
xchg
imul
dec
sti
clc
and
pop
sub
jne
test
sub
mov
add
inc
or
dec
lahf
ljmp
ficoms
jae
ja
mov
mov
outsb
cmpsl
cmp
je
pop
sbb
aad
rcr
xlat
lods
mov
xor
and
je
ja
fs
mov
or
movsl
jnp
data16
stos
sub
gs
imul
xor
lahf
es
sub
popf
cmp
frstor
jmp
cltd
popf
add
mov
test
cmc
cmp
push
lods
mov
flds
add
inc
test
test
test
xchg
and
lcall
adc
in
and
aaa
xor
ret
or
mov
imul
out
pop
cmp
pop
push
outsb
int3
pop
rorl
mov
fld
mov
and
dec
ret
xchg
gs
data16
add
xchg
cmp
mov
shll
hlt
or
sub
roll
or
dec
rcrl
sub
loopne
cmp
lock
pop
in
sbb
xchg
cmp
bound
cmp
sub
outsl
cmpsl
pop
mov
movsl
cli
xchg
jne
subb
or
mov
sub
mov
xchg
push
push
repz
jne
rcrb
or
out
push
mov
xchg
xor
out
adc
or
in
xor
clc
pop
shrl
mov
les
sub
sub
decb
out
adc
lods
stos
jae
in
shll
aam
mov
xor
dec
aam
out
adc
lock
nop
movsl
lahf
push
outsl
xor
les
xor
nop
jmp
jno
lret
mov
and
pop
insl
mov
jp
push
fcoms
jmp
jl
shr
xchg
pop
jnp
lahf
xlat
int
jne
in
push
fwait
sbb
sub
mov
sarl
mov
dec
addl
stos
daa
mul
jne
mov
inc
movsb
cmp
rcl
mov
mov
ja
pop
and
scas
push
pop
std
fisttpll
jne
scas
jg
pusha
fldt
aad
ret
jne
add
sahf
push
shrb
mov
pop
cmp
mov
mov
int
and
shll
push
ret
repz
aas
add
push
into
push
cmp
aaa
inc
addr16
lods
loopne
push
scas
inc
or
flds
cmp
mov
bound
mov
sbb
inc
popf
rolb
out
aas
push
sysexit
jge
push
mov
sbb
cmpsl
stc
xor
inc
mov
jb
dec
xchg
incl
add
cld
insl
add
xor
and
adc
push
mov
pop
jge
mov
cs
out
xchg
cmp
in
jecxz
sub
std
xor
jae
sub
jmp
fwait
mov
pop
popa
xlat
pushf
or
es
sar
popa
sbb
push
push
jge
mov
push
sarl
adcl
popa
cltd
stos
lock
inc
mov
sbb
mov
add
jmp
adc
inc
jge
jp
jp
push
fisubrl
rorl
sub
push
std
mov
subb
sbb
jge
test
push
xor
jp
repnz
mov
sub
push
cltd
test
andl
xlat
pop
test
add
test
or
add
jnp
hlt
inc
push
xor
sbb
push
push
fdivs
cmovne
in
aad
xchg
dec
adcb
divl
jns
cmc
cld
lcall
jno
gs
mov
inc
pop
shlb
mov
pop
push
mov
or
outsb
cmpl
aad
mov
cmpsl
adc
mov
sbb
outsb
fwait
mov
mov
repnz
jg
sbb
scas
and
dec
lods
out
aam
sub
push
xor
lahf
ja
popa
cmp
jae
pop
loop
xor
pusha
add
xorb
lret
cld
fisubrs
shll
in
pop
or
popf
shrl
test
xchg
add
psubusb
in
dec
shll
jl
add
xlat
jb
cmpl
mov
daa
xor
sbbb
out
insb
pop
sub
cmp
out
sub
add
pavgb
jmp
ret
mov
or
add
mov
jecxz
cs
out
repnz
xor
int
push
sub
lods
or
ja
sbb
dec
cmpsl
mov
in
or
cmp
fdivrs
gs
enter
fisubrl
jle
movaps
pop
lret
jb
jbe
jmp
jno
adc
in
jp
orl
popf
push
mov
in
mov
pmaxsw
cli
add
pop
adc
push
stc
test
xchg
fxch
add
inc
inc
mov
imul
mov
push
xchg
mov
push
add
jmp
loopne
scas
sub
inc
inc
stos
jge
sbb
out
adc
lret
xchg
jo
les
cli
out
and
stc
popa
push
std
ja
outsl
pop
stos
push
ss
cmp
divl
cmp
fs
mov
cld
push
add
imull
sbb
fwait
leave
mov
adc
loopne
mov
cs
bound
jnp
jno
leave
dec
jb
lods
and
pop
jns
es
andb
test
adc
sub
outsl
dec
add
fldl
dec
insb
and
and
and
test
outsb
cld
in
mov
pop
sar
add
pop
push
roll
lahf
insb
mov
mov
push
jg
dec
xor
inc
jle
mov
push
loopne
pop
std
icebp
enter
imul
addl
cmpsl
dec
stos
mov
mov
mov
insb
jae
inc
pop
inc
mov
cld
jo
ret
sbb
int
cld
int3
cmpb
jle
xlat
lret
ja
dec
xlat
sti
pusha
nop
fwait
jbe
jecxz
rclb
out
mov
in
jb
pop
mov
scas
add
push
inc
add
ja
adc
sbb
scas
dec
lock
mov
push
jbe
lcall
jle
and
sti
mov
fidivs
xor
mov
cmc
ja
xor
daa
jno
dec
sub
sahf
mov
imul
mov
out
aaa
or
sub
jb
sbb
sub
movsl
inc
bound
xor
cmp
xor
xchg
xchg
mov
jecxz
lods
add
xchg
cmp
fistps
mov
dec
add
sbbl
shll
rcrl
cmp
xor
rol
xor
addb
push
push
dec
popf
mov
xlat
mov
jle
mov
out
lret
fbld
stc
cmp
mov
add
xchg
in
xor
je
sti
xor
ss
pop
add
push
pop
xchg
loopne
sar
push
test
divl
scas
movsl
add
repnz
dec
fstps
mov
cmp
xchg
rol
lods
mov
lcall
pop
daa
std
fsubs
fsubrl
mov
lret
xor
roll
bound
int3
arpl
cmc
cmp
rcrb
mov
mov
mov
ja
pop
call
adc
or
jmp
sbb
and
mov
adc
adc
adc
dec
mov
test
mov
mov
mov
js
push
lods
pop
add
sub
mov
xchg
pop
movsb
arpl
fiaddl
or
aaa
lret
mov
sbb
xchg
xlat
adc
arpl
mov
cld
testb
or
push
lds
int3
adc
subb
push
repnz
daa
xchg
ret
movb
cmp
add
dec
mov
iret
jmp
sub
mov
mov
mov
adc
loopne
push
pop
xor
loope
sbb
cmc
lock
pop
adcb
addr16
dec
ds
jp
sahf
in
mov
shl
int
lret
ss
push
mov
cmp
repnz
cmc
int3
xor
pop
or
cmp
and
inc
cwtl
xor
lds
push
mov
and
into
or
scas
insb
sub
call
cltd
push
xlat
jno
ja
mov
scas
js
mov
add
clc
sarl
mov
dec
cmpl
je
movsl
sub
add
cld
shlb
mov
mull
push
xchg
rcrl
ljmp
mov
testl
pop
sub
sub
lret
xor
shrb
pop
cld
ja
pushw
jns
sub
call
push
sub
cmp
xor
int3
dec
mov
mov
xchg
mov
adc
out
push
mov
sbb
dec
aas
orw
inc
and
mov
pop
adc
or
and
sbb
or
push
xor
insb
sbb
cwtl
xor
xor
lret
insl
out
sub
add
cmc
sub
mov
sahf
push
and
in
hlt
enter
gs
push
and
addr16
outsb
adc
cmp
enter
push
jno
cltd
or
xor
fwait
movsl
mov
lods
shrb
dec
das
lods
subl
fldenv
das
mov
add
mov
cmpsl
mov
ja
adc
mov
lods
sub
test
xchg
and
loopne
int
js
psrad
ss
ror
insl
les
stos
or
andl
mov
jmp
adc
push
pop
or
jae
jne
mov
subb
mov
adc
sub
pop
push
xchg
iret
push
lret
adc
les
sbb
pop
cmp
push
sbb
mov
pop
or
cmp
fisttps
in
outsb
outsl
sub
test
mov
int
xchg
outsb
pop
jae
lds
adc
lock
rorb
jno
sub
ret
and
js
mov
inc
dec
outsl
mov
out
fucomp
sbb
mov
push
cmp
std
cli
scas
ss
sub
arpl
jle
pop
mov
decl
xor
and
lret
es
outsl
rcrl
push
push
mov
lock
stos
xchg
and
and
xor
mov
push
fisubrs
fs
push
jl
das
nop
push
mov
hlt
jge
into
cmp
pop
adc
add
not
xor
aaa
sub
sub
sbb
repz
dec
push
mov
call
sub
pop
pop
jo
mov
mov
cmp
pop
fisubrl
or
inc
sbb
jae
aas
test
push
inc
cmp
and
adc
xchg
inc
cld
sub
sub
rolb
data16
enter
add
mov
fcomps
dec
ss
shr
aam
jecxz
lcall
mov
pop
cmpsb
mov
rcl
into
lahf
xchg
int3
jno
mov
dec
cmp
leave
xor
adc
push
shll
or
jne
or
test
xor
fstl
ja
mov
loopne
jp
rcrl
out
aad
iret
sub
out
dec
hlt
sbb
js
sub
std
bound
pop
aas
test
jmp
xorl
and
push
cmc
add
push
stc
stc
adc
and
sbb
fcmovnb
jnp
mov
dec
add
cmp
jbe
ret
lahf
ret
lds
cmpb
cmpsl
jge
fcoml
cmp
outsb
popf
push
outsl
ret
mov
repnz
jp
shlb
out
pop
inc
dec
dec
test
inc
mov
mov
add
jne
int3
sub
sbb
and
mov
xor
es
sbb
shll
nop
or
ljmp
jnp
jp
pushf
sbb
cmpsb
xorl
xor
cmp
mull
hlt
cmpsb
int3
enter
and
xor
push
dec
xor
mov
and
mov
rol
xorl
lcall
ss
dec
stos
test
es
inc
inc
push
cwtl
aad
inc
mov
jg
push
jp
in
xchg
sbb
cmp
ficomps
in
aad
stos
ret
inc
loop
sarb
mov
sbb
int
push
sbb
lock
pop
fiadds
cmc
into
xchg
pushf
push
cmp
dec
loopne
lods
loop
je
jmp
mov
sub
jne
bound
popf
or
aam
leave
xchg
stos
fisubs
bound
aad
adc
lahf
jmp
add
or
das
sbb
dec
and
lret
test
mov
cmp
mov
pushf
cltd
add
add
inc
imul
pop
cs
repz
shl
aam
jo
test
scas
mov
dec
cmp
and
dec
push
daa
mov
cmpb
or
mov
leave
insl
xchg
sbb
movsl
dec
lock
fcompl
mov
sub
jae
mov
pushf
movsb
inc
cli
xchg
pop
iret
inc
mov
rorb
aad
ds
sub
push
and
sub
inc
jmp
push
je
insl
pop
inc
pop
and
pop
leave
fistl
xchg
jl
xchg
aaa
jbe
rcrl
cmpsb
adc
shll
push
mov
loop
mov
add
repnz
and
test
sahf
or
pop
push
jmp
dec
mull
or
out
xor
xchg
push
xlat
cli
mov
adc
push
mov
stos
adc
push
imul
fists
cmp
jg
push
pop
popa
adc
shll
scas
push
dec
sub
sub
inc
cmp
xlat
mov
mov
push
stc
loopne
xchg
push
cld
aam
loopne
fcomps
sbb
inc
inc
mov
adc
push
pushf
mov
outsb
bound
fstpl
xchg
add
clc
adc
orl
mov
xor
sub
jne
mov
xor
ror
ds
or
lods
lcall
pop
inc
add
pop
cmp
jecxz
adc
pop
les
and
push
pop
or
xorps
inc
cld
mov
mov
mov
and
mov
and
mov
push
push
push
push
call
push
push
jmp
into
cmc
je
xor
mov
jb
dec
je
pop
add
pusha
push
push
push
ret
out
xlat
and
xor
insl
jb
int3
pop
test
push
push
test
test
decl
xchg
cmpl
lcall
pop
repz
stc
jnp
cmpsb
mov
dec
sarl
cs
pop
inc
push
add
pop
jecxz
mov
xchg
ss
mov
int3
push
xchg
fsubs
nop
mov
add
cltd
push
xchg
sub
pop
inc
sub
push
sbb
lods
cmp
cmpsb
push
mov
xlat
loope,pn
mov
and
nop
xchg
mov
mov
inc
xchg
cltd
ja
mov
clc
jmp
nop
push
add
out
hlt
cmp
xor
divl
or
sti
popa
add
pusha
inc
cmp
dec
repz
jns
popa
rclb
push
call
mov
mov
add
mov
adc
mov
and
mov
and
mov
cmp
jne
cmp
je
movl
movl
mov
mov
push
push
push
push
call
xor
xor
or
or
mov
mov
mov
cmp
jne
mov
mov
mov
mov
shrd
shl
mov
mov
xor
shr
mov
xor
or
mov
mov
mov
shrd
shr
mov
mov
xor
xor
or
mov
movb
movb
movb
movb
movb
movb
mov
movzbl
mov
movzbl
shl
cltd
idiv
mov
movzbl
movzbl
or
mov
movzbl
cltd
idiv
mov
movzbl
movzbl
cltd
idiv
movzbl
and
mov
movb
movb
mov
mov
add
add
mov
imul
mov
cmp
ja
mov
mov
shrd
xor
mov
shr
mov
xor
shl
or
mov
pop
leave
ret
push
mov
sub
push
push
push
movl
movl
movl
movl
movl
movl
movl
movl
xor
inc
mov
movl
mov
mov
sub
add
add
imul
add
xor
movl
movl
movl
movl
mov
or
add
mov
and
mov
sub
mov
mov
mov
add
or
sub
xor
sub
mov
mov
mov
mov
mov
and
xor
xor
div
lea
mov
add
mov
and
mov
imul
mov
sub
cmp
jbe
push
pop
mov
mov
movl
movl
movl
mov
movl
movl
xor
movl
mov
mov
sub
div
mov
xor
mov
div
mov
xor
div
xor
mov
mov
imul
mov
add
div
mov
mov
sub
sub
xor
div
mov
add
cmp
jae
movl
movl
movl
movl
xor
movl
movl
mov
push
pop
div
mov
mov
mov
sub
mov
mov
imul
mov
xor
sub
add
and
mov
sub
mov
sub
mov
sub
mov
mov
mov
mov
xor
add
xor
and
lea
mov
mov
add
div
mov
mov
sub
xor
div
add
cmp
jb
xor
inc
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
add
and
xor
mov
sub
movl
movl
mov
movl
movl
mov
mov
imul
xor
or
xor
mov
sub
mov
mov
mov
or
sub
xor
div
mov
mov
sub
mov
mov
mov
mov
mov
imul
mov
imul
or
mov
or
xor
lea
mov
and
add
xor
add
cmp
jne
pop
pop
pop
leave
ret
push
mov
sub
push
push
movl
movl
mov
mov
add
or
mov
lea
mov
movl
movl
mov
mov
and
xor
mov
imul
xor
lea
mov
movl
movl
mov
xor
push
pop
div
mov
xor
push
add
and
mov
sub
mov
movl
movl
movl
mov
mov
lea
mov
div
mov
lea
mov
movl
movl
movl
mov
mov
xor
sub
mov
sub
xor
mov
movl
pop
mov
movl
movl
mov
mov
mov
xor
xor
div
mov
and
sub
mov
movl
movl
movl
movl
movl
movl
mov
add
mov
xor
mov
or
mov
or
mov
and
mov
sub
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
add
adc
or
mov
or
or
mov
mov
or
mov
sub
mov
sbb
mov
or
or
add
mov
adc
mov
movl
movl
movl
movl
movl
movl
movl
xor
inc
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
movl
mov
movl
movl
mov
or
add
mov
or
mov
sub
mov
sub
imul
add
mov
push
mov
lea
mov
xor
div
mov
lea
push
mov
mov
push
push
push
push
call
mov
mov
push
push
or
or
push
push
call
mov
mov
xor
mov
mov
mov
and
add
lea
xor
push
lea
call
mov
mov
mov
sub
xor
imul
add
xor
xor
mov
div
cmp
jne
mov
xor
mov
div
mov
mov
xor
sub
mov
xor
sub
or
lea
push
mov
push
pop
div
mov
xor
div
mov
mov
xor
xor
div
imul
sub
push
mov
add
push
mov
sub
mov
pushl
call
mov
mov
lea
mov
incl
mov
mov
xor
shld
shl
mov
mov
xor
xor
cmp
jne
cmp
jne
mov
mov
jmp
lea
mov
mov
mov
mov
mov
sub
mov
mov
mov
sub
mov
movl
movl
mov
mov
mov
mov
pushl
pushl
pushl
pushl
pushl
push
push
pushl
mov
call
mov
mov
pushl
call
mov
push
add
push
push
call
mov
jmp
mov
mov
pop
pop
leave
ret
push
mov
sub
push
push
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
push
push
push
call
mov
mov
add
adc
and
push
and
or
push
or
xor
xor
push
push
call
mov
movl
movl
movl
movl
xor
movl
push
inc
mov
mov
mov
push
push
push
call
mov
mov
or
or
push
add
push
adc
push
push
call
mov
lea
xor
mov
div
mov
sub
mov
movl
mov
movl
mov
mov
sub
mov
xor
div
mov
xor
or
or
mov
mov
movl
movl
movl
mov
add
mov
and
lea
mov
mov
mov
movl
movl
movl
mov
mov
sub
add
xor
add
mov
div
mov
xor
pop
pop
or
mov
movl
movl
movl
mov
mov
and
sub
or
mov
imul
mov
div
leave
ret
push
mov
sub
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
push
movl
mov
mov
push
push
push
call
mov
mov
xor
mov
mov
mov
xor
mov
xor
or
mov
mov
mov
xor
or
add
cltd
adc
cmp
jne
cmp
je
mov
mov
mov
mov
add
adc
or
mov
or
mov
push
push
push
push
call
mov
mov
and
mov
mov
mov
and
xor
xor
xor
cmp
jne
cmp
jne
mov
mov
add
or
mov
or
xor
lea
xor
mov
and
add
mov
xor
xor
div
mov
mov
xor
imul
mov
push
push
xor
mov
lea
mov
mov
lea
mov
mov
or
xor
div
mov
add
xor
add
mov
add
mov
mov
mov
mov
sub
mov
sbb
mov
xor
mov
xor
mov
add
adc
add
adc
push
push
call
mov
sub
push
pop
sbb
mov
xor
cmp
jne
cmp
jne
mov
mov
add
shr
or
mov
xor
xor
add
mov
pop
leave
ret
push
mov
sub
push
push
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
adc
mov
push
push
or
or
push
push
call
mov
mov
and
or
mov
mov
and
or
xor
xor
shld
shl
shr
xor
or
or
mov
xor
mov
mov
xor
mov
mov
mov
mov
mov
push
push
push
push
call
add
adc
push
push
push
push
call
mov
mov
mov
xor
xor
add
mov
adc
mov
mov
mov
mov
mov
sub
mov
mov
sbb
mov
sub
mov
sbb
add
mov
adc
push
xor
mov
pop
sub
mov
sub
xor
mov
mov
add
mov
shrd
xor
shl
shr
or
xor
or
mov
push
mov
mov
mov
push
push
push
call
mov
mov
mov
or
mov
or
mov
add
mov
adc
mov
add
mov
adc
add
pop
adc
pop
mov
mov
pop
leave
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
and
add
mov
and
mov
sub
and
mov
mov
imul
add
add
xor
cmp
jne
mov
mov
mov
sub
add
mov
or
mov
imul
sub
add
mov
or
mov
mov
add
imul
add
mov
add
mov
mov
mov
and
mov
and
mov
imul
mov
or
mov
imul
mov
sub
cmp
je
mov
jmp
mov
sub
xor
add
jmp
movl
movl
mov
mov
imul
add
and
add
or
sub
leave
ret
push
mov
and
sub
push
push
lea
mov
mov
mov
mov
sub
sbb
mov
orl
orl
lea
push
lea
push
call
mov
mov
pushl
mov
pushl
mov
pushl
pushl
pushl
pushl
pushl
call
pop
pop
mov
pop
ret
push
mov
sub
push
push
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
xor
mov
div
mov
mov
mov
mov
imul
mov
imul
xor
or
mov
mov
xor
mov
and
sub
xor
xor
add
div
mov
jmp
movl
mov
movl
movl
mov
mov
or
xor
mov
sub
xor
mov
sub
sub
mov
mov
mov
mov
mov
mov
mov
mov
imul
imul
sub
imul
xor
add
mov
mov
xor
mov
and
sub
xor
xor
mov
div
mov
sub
mov
add
xor
add
mov
xor
sub
cmp
jbe
pop
pop
pop
leave
ret
push
mov
sub
incl
push
orl
push
xor
add
mov
sub
push
adc
mov
cmpl
movzbl
movl
mov
movzbl
jmp
movl
movl
jbe
pushl
pushl
call
xor
add
mov
sub
xor
add
inc
movzwl
or
mov
and
sbb
mov
addl
shrd
cmpl
movl
movzbl
jmp
mov
mov
jbe
pushl
call
add
addl
movzwl
sub
inc
movzwl
sbb
shr
mov
mov
xor
mov
or
mov
mov
cmpl
movl
movl
movl
jmp
movl
ja
pushl
push
push
call
sub
mov
xor
sub
or
and
xor
or
sbbl
mov
mov
xor
mov
shl
mov
subl
shrd
cmpl
mov
mov
mov
mov
jmp
mov
mov
jne
push
push
pushl
call
mov
mov
sub
imul
subl
mov
and
mov
and
mov
adc
xor
shr
mov
mov
cmpl
mov
mov
jmp
mov
mov
jle
push
push
call
mov
sbb
and
or
neg
adc
add
xor
xor
add
or
cmpl
not
mov
mov
jmp
movl
mov
jg
push
call
mov
and
xor
add
orl
subl
and
sbb
mov
sbb
mov
xor
mov
mov
adc
mov
dec
mov
adc
mov
neg
mov
cmpl
mov
not
movl
jmp
mov
mov
jbe
pushl
call
or
sub
xorl
add
adc
dec
movzwl
sbb
mov
and
mov
xor
mov
andl
shl
sbb
xor
add
shld
mov
xor
mov
shl
adcl
mov
neg
xor
cmpl
mov
mov
movl
mov
jmp
movl
jg
pushl
call
and
or
sbbl
inc
subl
mov
xor
sbbl
xor
movl
inc
movl
movl
movl
cmp
movl
jne
movl
cmp
movl
je
mov
mov
sub
and
mov
and
mov
xor
adcl
shld
or
shl
cmpl
mov
mov
movl
jmp
mov
movl
jge
push
push
push
push
push
push
push
call
adcl
movzbl
adc
sbb
and
mov
adc
adcl
xor
mov
xor
or
sbb
mov
mov
xorl
xor
movl
cmp
jne
movl
cmp
je
add
mov
mov
cmpl
mov
movzbl
notl
mov
jmp
mov
ja
push
push
pushl
push
push
push
pushl
call
orl
adc
and
orl
xorl
xor
shl
mov
sbbl
xor
addl
shr
or
adc
mov
mov
sub
mov
mov
mov
sub
xor
mov
subl
mov
mov
xor
or
sub
xor
mov
push
and
pop
orl
sub
cmpl
movl
mov
mov
jmp
movl
jg
push
push
push
push
push
call
adc
sbb
xorl
orl
sub
sub
xor
mov
sub
mov
notl
add
subl
mov
addl
lea
not
mov
mov
mov
xor
xor
shr
shl
or
mov
movl
mov
mov
xor
xor
shr
shl
or
push
lea
push
lea
push
call
mov
mov
xor
xor
shr
shl
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
lea
push
shl
call
mov
mov
xor
xor
shr
shl
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
lea
push
shl
call
mov
mov
xor
xor
shl
shr
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
shl
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
lea
push
shl
call
mov
mov
xor
shl
xor
shr
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
shl
mov
xor
or
mov
shrd
shr
mov
mov
xor
xor
or
shl
add
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
lea
push
shl
call
mov
mov
xor
shr
inc
xor
shl
or
mov
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
mov
mov
push
pushl
shl
call
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
mov
push
pushl
shl
call
mov
mov
mov
mov
mov
mov
rol
mov
xor
cmp
je
movl
mov
xor
mov
test
je
mov
mov
movzbl
sub
mov
rorb
mov
mov
inc
cmp
jb
decl
jne
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
add
push
lea
push
shl
call
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
push
push
mov
shl
mov
shrd
shr
mov
mov
xor
xor
or
add
push
shl
call
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
push
shl
call
mov
mov
shrd
shr
mov
mov
pop
xor
xor
pop
shl
or
pop
leave
ret
or
mov
mov
andl
or
mov
mov
jne
mov
movl
mul
ret
andl
push
cmpl
mov
movl
mov
movl
jmp
movl
movl
jg
push
pushl
pushl
pushl
call
and
sbbl
subl
sbb
andl
sbb
and
mul
mov
mov
mull
add
mov
mul
add
pop
ret
push
mov
sub
push
push
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
imul
add
xor
add
mov
mov
sub
imul
add
xor
div
mov
mov
jmp
movl
movl
movl
movl
mov
mov
or
mov
imul
add
xor
mov
div
mov
mov
xor
sub
mov
mov
mov
xor
sub
mov
sub
mov
add
mov
mov
sub
and
add
xor
mov
div
xor
add
mov
mov
sub
imul
add
div
mov
xor
mov
sub
mov
and
or
sub
xor
mov
sub
cmp
jbe
pop
pop
pop
leave
ret
push
mov
and
sub
push
push
push
xor
push
push
call
mov
movzbl
push
call
test
jne
xor
movl
jmp
cmpl
movl
mov
mov
jmp
mov
jne
pushl
pushl
push
push
pushl
call
xor
and
xor
or
sub
or
sbbl
cmpl
movl
mov
mov
jmp
mov
mov
jg
pushl
pushl
call
andl
xor
and
adc
adcl
xor
xor
xor
or
sub
sub
mov
adcl
movl
movl
xor
movl
cmpl
mov
mov
notl
jmp
mov
jl
pushl
push
call
inc
mov
xor
mov
inc
and
sub
movl
mov
mov
adc
movl
add
movl
mov
add
movl
orl
push
add
movl
cmpl
not
notl
jmp
mov
jl
pushl
call
or
xor
xor
adc
andl
mov
cmpl
movl
not
not
movl
jmp
mov
mov
jg
call
xor
subl
orl
sbb
xor
xor
or
or
mov
push
subl
push
push
sbbl
call
xor
mov
mov
push
adcl
push
xorl
push
xorl
push
call
notl
mov
adcl
mov
addl
add
mov
adc
adc
mov
orl
xor
or
mov
adc
xor
mov
adc
movl
add
movl
or
movl
cmpl
movzwl
movl
jmp
movl
je
push
push
push
call
inc
add
mov
xor
adc
add
xor
movl
xor
or
mov
sub
xor
movl
cmpl
movl
mov
jmp
notl
mov
jg
push
push
call
adc
and
sub
sbb
add
sbb
mov
mov
or
push
movl
mov
add
mov
sbbl
push
adcl
push
push
andl
call
sbbl
mov
mov
push
push
xorl
push
andl
push
sbbl
call
mov
sbb
mov
sbbl
xor
mov
xor
mov
and
mov
movl
xor
xor
cmp
jne
movl
cmp
jne
sbb
movl
cmpl
mov
mov
jmp
notl
jb
push
pushl
pushl
push
call
xor
and
add
add
movzwl
add
mov
cmpl
not
mov
movl
movl
jmp
mov
jae
push
push
pushl
push
call
adc
and
mov
sub
sbb
movzbl
or
or
and
movl
movl
mov
cmpl
movl
mov
mov
movl
jmp
movl
movl
jle
push
push
push
call
incl
adc
and
adcl
xor
imul
and
xor
sbbl
mov
div
sub
pushl
cmpl
mov
movl
mov
jmp
mov
movl
jae
pushl
push
call
sbb
movzwl
and
mov
add
xor
mov
mov
or
sbb
addl
xor
xor
adcl
and
xor
subl
pushl
mov
cmpl
mov
mov
jmp
movl
movl
jg
push
call
sbb
sbb
addl
or
or
xor
adc
push
pop
div
cmpl
mov
movl
mov
jmp
movl
movl
jl
pushl
push
pushl
call
and
and
movzwl
sub
not
mov
or
mov
addl
sub
add
imul
subl
and
adcl
xor
pushl
notl
pushl
pushl
andl
pushl
andl
pushl
subl
call
cmpl
mov
mov
jmp
movl
mov
jne
push
pushl
pushl
call
xorl
sub
mov
mov
adc
orl
sub
sbb
xor
movl
movl
xor
or
mov
sub
or
mov
addl
mov
sub
xor
mov
xorl
xor
xor
movl
div
imul
xor
orl
pushl
pushl
call
decl
movl
adc
mov
movl
movl
sub
mov
cmpl
movl
mov
mov
movl
jmp
movl
movl
jb
push
push
push
pushl
push
push
push
pushl
call
add
adc
add
xor
xor
or
mov
sbb
mov
mov
adc
mov
mov
mov
push
push
xor
xor
adcl
push
xorl
push
call
xorl
add
mov
movl
adc
adcl
mov
movl
movl
movl
movl
dec
movl
jne
sbb
mov
not
mov
subl
mov
addl
mov
movl
movl
mov
call
add
lea
or
mov
lea
mov
sub
mov
mov
sub
mov
mov
mov
mov
addl
xor
xor
xor
shl
and
shr
movzbl
add
or
mov
mov
lea
xor
add
xor
mov
mov
mov
mov
sub
or
mov
or
mov
mov
add
shrd
sub
shr
mov
mov
adc
mov
mov
xor
subl
xor
or
xor
mov
push
pushl
lea
push
adcl
shl
addl
call
orl
lea
subl
push
mov
subl
mov
movl
lea
sbbl
push
xorl
mov
orl
lea
mov
orl
mov
sbbl
mov
addl
push
sbbl
call
push
andl
push
pushl
call
add
mov
mov
mov
sub
or
mov
and
mov
sub
mov
movzwl
sbb
shr
xor
or
sub
shl
or
cmpl
movl
movl
movl
jmp
movzwl
movl
jne
pushl
pushl
pushl
pushl
pushl
push
call
xor
xor
xor
mov
add
addl
mov
xor
mov
adc
lea
cmpl
mov
not
movl
jmp
mov
mov
jb
pushl
push
push
call
sbb
mov
xor
or
sub
or
mov
mov
xor
subl
movzwl
add
mov
lea
mov
mov
sub
lea
xor
movl
movl
movl
movl
mov
mov
mov
mov
add
adc
xor
xor
and
mov
and
mov
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
push
or
or
push
push
call
mov
mov
sub
mov
sbb
mov
cmp
jne
cmp
je
movl
movl
movl
movl
mov
mov
mov
mov
add
adc
xor
xor
and
mov
and
mov
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
push
push
xor
xor
push
push
call
mov
mov
push
push
push
push
call
mov
mov
push
push
push
push
call
mov
mov
add
mov
adc
mov
cmp
jne
cmp
je
mov
mov
mov
xor
shld
shl
xor
xor
cmp
jne
cmp
je
mov
cmp
je
mov
mov
mov
mov
xor
xor
shrd
mov
shr
xor
mov
mov
or
mov
shl
xor
or
mov
mov
cltd
cmp
jne
cmp
jne
movl
movl
mov
mov
mov
mov
xor
shld
shl
xor
xor
cmp
jne
cmp
jne
movl
mov
mov
shrd
shr
mov
mov
shl
mov
xor
xor
or
mov
mov
cmp
jne
mov
mov
mov
mov
mov
mov
movzwl
mov
and
mov
or
mov
add
or
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
or
mov
or
mov
sub
mov
sub
mov
cmp
jbe
mov
mov
mov
mov
movzwl
mov
or
mov
sub
mov
or
imul
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
xor
mov
imul
mov
and
mov
and
mov
cmp
ja
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
push
push
lea
push
lea
push
shl
call
pushl
pushl
pushl
pushl
call
mov
mov
shrd
shr
mov
mov
shl
xor
xor
or
mov
mov
mov
mov
shrd
shr
mov
mov
shl
xor
xor
or
mov
mov
mov
mov
mov
cmp
jne
mov
mov
mov
cmp
jne
movb
movb
movb
movb
mov
mov
or
sub
mov
sub
movzbl
movzbl
cltd
idiv
movzbl
or
mov
movb
movb
movb
movb
movb
mov
mov
or
and
mov
imul
mov
movzbl
movzbl
and
mov
movzbl
cltd
idiv
mov
cmp
je
lea
push
lea
call
cmp
jne
cmp
jne
jmp
mov
mov
mov
mov
add
adc
mov
mov
push
push
lea
push
call
mov
push
pushl
lea
push
call
mov
mov
mov
mov
mov
mov
mov
lea
mov
add
movl
movl
mov
and
add
and
sub
and
mov
movl
mov
mov
or
add
cmp
je
mov
mov
mov
xor
shld
shl
xor
xor
cmp
jne
cmp
je
mov
mov
mov
mov
xor
xor
shr
shl
or
xor
shld
shl
xor
xor
cmp
jne
cmp
je
mov
cltd
mov
mov
cltd
shld
shr
xor
shl
or
or
mov
mov
xor
xor
mov
cmp
jne
cmp
je
pushl
pushl
mov
mov
pushl
mov
call
mov
mov
mov
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
push
push
incl
push
movl
cmpl
movl
mov
mov
jmp
mov
movl
jae
pushl
call
adc
sub
andl
and
mov
and
xor
or
mov
sub
and
movl
adcl
movl
mov
mov
sub
add
mov
cmpl
movl
movl
jmp
mov
mov
jbe
push
call
addl
addl
orl
adcl
mov
xor
subl
div
cmpl
movl
mov
jmp
movl
movl
jle
pushl
push
call
xor
incl
add
and
dec
xorl
sub
cmpl
movl
movzwl
jmp
notl
jbe
push
push
pushl
push
pushl
push
pushl
call
xor
or
adc
sub
mov
mov
sub
mov
sbb
mov
imul
mov
sbbl
xor
and
dec
mov
xor
div
sub
mov
and
mov
movl
movl
movl
movzwl
sbb
mov
mov
xor
or
add
add
xor
xor
orl
imul
mov
adc
mov
mov
and
sub
mov
xor
xor
sub
or
mov
movl
movl
cmpl
mov
mov
mov
jmp
movl
ja
push
pushl
pushl
call
and
mov
add
add
movl
adc
sbb
movl
movl
and
mov
movl
imul
cmpl
mov
not
movl
jmp
mov
jg
call
xor
dec
sbbl
and
and
mov
adc
imul
imul
sbb
mov
andl
and
cmpl
mov
movzbl
mov
movl
jmp
mov
mov
jne
push
push
pushl
push
call
xorl
decl
adcl
adcl
sbbl
or
mov
xor
mov
mov
lea
cmpl
movl
mov
jmp
movl
movl
jg
push
pushl
push
push
pushl
push
call
and
adc
mov
adc
mov
addl
and
and
or
mov
movl
mov
mov
sub
add
movl
movl
mov
movzbl
adc
mov
xor
movzwl
sub
mov
mov
incl
or
cmpl
not
mov
mov
jmp
movl
movl
jle
push
call
xor
or
sbb
mov
xor
inc
orl
addl
negl
mov
or
cmpl
mov
mov
jmp
movl
ja
push
pushl
call
adc
inc
adc
mov
adc
xorl
add
adc
mov
or
cmpl
not
not
mov
movl
jmp
movl
movl
jne
call
mov
xor
sbbl
notl
xor
xor
xor
sbb
subl
add
xor
not
mov
cmpl
not
mov
movl
jmp
movl
jb
push
call
orl
mov
sbb
inc
adcl
movl
sub
movl
movl
mov
add
mov
sub
orl
mov
lea
cmpl
mov
mov
jmp
movl
jne
push
call
inc
mov
sub
orl
movl
adcl
incl
cmpl
mov
mov
notl
jmp
movl
jbe
pushl
push
call
add
xor
add
notl
mov
sub
mov
or
and
sub
mov
mov
adc
mov
movl
movl
not
mov
or
add
imul
mov
imul
notl
xor
cmpl
mov
movl
movzwl
jmp
movl
je
push
pushl
call
and
subl
subl
sub
inc
cmpl
mov
movl
mov
jmp
movzwl
jg
push
push
push
push
call
mov
sub
not
sub
sbb
mov
or
mov
div
cmpl
mov
movl
movl
mov
jmp
movl
jg
pushl
call
xor
mov
or
mov
and
subl
add
and
adc
sub
andl
sub
subl
mov
movl
cmpl
not
mov
mov
jmp
movl
movl
ja
pushl
push
push
call
add
addl
sbbl
adc
not
mov
sbb
mov
sbbl
movl
cmpl
mov
mov
not
jmp
mov
jb
pushl
push
call
xor
addl
xorl
adc
mov
mov
add
xorl
mov
adc
movl
mov
mov
movl
xor
sbbl
div
movl
imul
inc
add
mov
subl
xor
andl
xor
subl
mov
xorl
div
xor
or
adc
xor
mov
movl
subl
movl
addl
movl
xor
add
xor
xor
sub
xor
mov
xor
mov
sub
shr
sub
cmpl
movl
notl
jmp
notl
movl
jl
pushl
push
pushl
call
xorl
andl
subl
orl
movl
xor
xor
and
mov
mov
imul
mov
orl
and
or
mov
orl
sub
xor
or
add
mov
mov
movl
movl
mov
or
mov
or
cmpl
mov
mov
jmp
mov
jl
pushl
call
or
sub
xor
or
subl
sub
xor
mov
cmpl
movzwl
mov
mov
jmp
movl
movl
jne
pushl
pushl
pushl
push
push
call
or
xor
sub
xor
xor
and
mov
sub
and
xorl
movl
movl
cmpl
movl
movl
jmp
mov
jb
push
pushl
pushl
pushl
pushl
pushl
call
and
orl
andl
sbb
or
movl
movl
xor
movl
sub
movl
xor
movl
mov
xor
add
mov
sub
add
mov
imul
mov
sbb
imul
mov
or
mov
adcl
lea
andl
push
call
mov
xor
add
sub
mov
mov
notl
imul
adc
add
cmpl
mov
movl
not
mov
jmp
movzbl
jl
push
call
mov
add
adcl
movzbl
or
xor
or
xor
orl
and
sub
cmpl
movl
mov
jmp
movl
ja
push
pushl
push
pushl
push
push
call
sbb
or
and
movzwl
sub
mov
mov
adc
mov
addl
xor
andl
mov
xorl
div
xor
mov
mov
sub
add
add
mov
movl
movl
movl
movl
cmpl
mov
not
notl
jmp
not
je
push
push
call
adcl
dec
mov
mov
sub
or
adc
xor
cmpl
mov
movl
jmp
movl
jge
pushl
push
call
sbbl
sub
sbb
mov
mov
sub
and
xor
sbb
addl
movl
movl
movl
xor
movl
adc
movl
movl
movl
or
movl
mov
mov
cmpl
mov
movl
movl
jmp
movl
notl
jl
pushl
call
add
adc
and
adc
and
mov
cmpl
mov
not
mov
jmp
movl
jbe
push
push
push
pushl
call
neg
mov
sub
sub
decl
sbbl
and
neg
sub
sub
imul
mov
sub
lea
mov
xor
mov
mov
sub
mov
movzbl
adc
xor
add
cmpl
mov
not
mov
movl
jmp
mov
je
push
push
call
addl
mov
and
mov
sbb
not
sub
incl
mov
lea
mov
or
and
mov
sub
inc
add
xorl
mov
movl
cmpl
mov
mov
mov
not
jmp
mov
movl
jg
pushl
push
call
mov
sub
mov
movzwl
or
subl
xor
add
adc
movl
mov
mov
sub
sub
movl
movl
mov
mov
mov
sub
or
mov
mov
adcl
xor
xor
sbbl
mov
call
mov
mov
mov
and
mov
xor
xor
orl
mov
sbbl
call
xorl
or
cmpl
movl
movl
jmp
movl
mov
jl
push
pushl
pushl
call
subl
adcl
andl
sbbl
addl
xorl
or
mov
movl
mov
xor
xor
addl
mov
call
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
mov
call
mov
or
mov
or
push
push
push
push
call
mov
cmp
jne
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
mov
mov
call
or
mov
or
push
push
push
push
call
mov
jmp
jmp
lea
mov
mov
movl
mov
xor
shr
mov
xor
shl
or
mov
mov
mov
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
mov
call
mov
or
mov
or
push
push
push
push
call
mov
cmp
je
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
imul
add
mov
mov
mov
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
mov
mov
call
or
mov
or
push
push
push
push
call
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
xor
div
mov
and
add
mov
lea
xor
add
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
xor
div
add
mov
and
xor
add
mov
mov
sub
mov
or
mov
and
mov
xor
mov
mov
sub
mov
imul
xor
xor
mov
mov
add
add
mov
movl
movl
movl
movl
movl
movl
mov
xor
mov
imul
mov
lea
mov
and
and
xor
push
pop
div
imul
mov
and
mov
or
add
imul
mov
xor
xor
mov
mov
add
add
mov
movl
movl
movl
movl
movl
movl
mov
xor
push
pop
div
mov
or
mov
xor
div
imul
mov
lea
mov
and
and
sub
xor
mov
xor
mov
and
and
or
mov
mov
add
lea
mov
andl
jmp
mov
inc
mov
mov
mov
cmp
je
mov
mov
mov
add
mov
mov
mov
mov
mov
movl
movl
movl
movl
lea
mov
mov
movzwl
xor
movzwl
sar
mov
movzwl
xor
movzwl
shl
or
movzwl
mov
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movzbl
push
lea
push
call
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
add
mov
mov
cmp
je
mov
mov
movzwl
xor
movzwl
sar
mov
mov
movzwl
xor
movzwl
shl
or
movzwl
mov
mov
mov
movzwl
xor
movzwl
sar
mov
mov
movzwl
xor
movzwl
shl
or
mov
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
or
je
lea
mov
mov
xor
mov
call
mov
mov
mov
xor
mov
call
or
or
xor
xor
mov
mov
mov
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movsbl
cmp
je
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
movsbl
cmp
je
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movsbl
cmp
jne
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
add
mov
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
cmpl
je
mov
mov
movzwl
mov
mov
mov
jmp
jmp
cmpl
jne
xor
jmp
mov
add
mov
movl
cmpl
je
cmpl
je
mov
shl
mov
movl
sub
mov
movl
mov
cmp
je
mov
mov
mov
mov
mov
mov
mov
inc
mov
jmp
movl
push
jmp
mov
mov
ret
push
andl
push
cmpl
movl
movl
movl
movl
jmp
movl
jle
push
push
push
push
pushl
push
call
subl
orl
subl
andl
subl
sbbl
addl
sub
mov
or
jne
mov
cmpl
mov
mov
movl
mov
jmp
mov
movl
jl
push
push
call
xor
adc
adcl
xor
neg
mov
xor
div
mov
mov
div
mov
jmp
mov
mov
mov
mov
shr
rcr
shr
rcr
or
jne
div
mov
mull
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
xor
mov
pop
pop
ret
subl
subl
cmpl
je
mov
xor
add
sub
xor
add
mov
mov
mov
pop
pop
pop
leave
ret
cmp
jae
movl
cmp
jae
adcl
shld
movl
shl
ret
mov
xor
orl
and
shl
ret
xor
xor
ret
