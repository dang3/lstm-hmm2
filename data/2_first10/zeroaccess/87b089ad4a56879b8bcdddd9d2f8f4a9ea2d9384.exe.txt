push
mov
sub
orl
mov
add
push
movl
cmpl
je
cmpl
jb
jmp
push
push
call
mov
dec
mov
jmp
push
and
push
and
mov
subl
xor
xor
xor
mov
sub
or
mov
movl
add
mov
andl
xor
add
inc
mov
cmpl
jle
jmp
push
pushl
call
cmpl
jb
mov
sbb
mov
and
mov
or
mov
mov
mov
adc
movl
andl
mov
inc
mov
cmpl
jg
jmp
call
cmpl
jb
mov
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jbe
jmp
push
pushl
push
call
cmpl
jne
mov
inc
mov
jmp
add
mov
andl
mov
inc
mov
cmpl
jge
jmp
pushl
pushl
push
push
push
pushl
push
call
cmpl
jb
mov
movzbl
and
mov
not
mov
subl
mov
movl
cmpl
je
cmpl
jbe
jmp
pushl
push
call
mov
dec
mov
jmp
mov
mov
sub
push
orl
pop
sub
mov
mov
sbb
add
sub
movl
jmp
sbb
ja
imul
push
xchg
sub
jp
jp
pop
jp
and
xor
imul
inc
aad
icebp
pusha
dec
imul
jo
pop
iret
pop
dec
xor
jg
xorb
pushl
cli
arpl
in
cmp
mov
mov
mulps
fstl
push
cli
sbb
imul
and
mov
jmp
enter
cli
js
jae
cwtl
pop
mov
add
fisubrl
fs
mov
mov
int3
mov
push
bound
add
lods
dec
lret
rclb
std
bound
stc
push
mov
xorl
in
lahf
adc
push
or
dec
sti
mov
ds
call
mov
push
mov
into
jecxz
fwait
jp
push
cmp
push
inc
mov
xor
aad
dec
sets
insb
mov
mov
pushf
xchg
dec
xchg
ja
push
mov
xchg
daa
pushf
lods
cli
mov
inc
movsb
out
or
and
std
pusha
cmp
popa
and
in
mov
jno
mov
mov
dec
dec
add
scas
sub
push
movsl
and
pop
aad
adc
push
jne
outsb
xor
push
xchg
js
push
popa
mov
xlat
call
fcmovnbe
pushf
ds
mov
inc
dec
mov
push
pop
mov
mov
inc
stc
push
dec
in
clc
sub
fildl
jbe
scas
jg
inc
sbb
test
push
test
sub
test
xlat
jg
mov
les
fptan
and
xor
xor
and
sub
outsb
inc
test
scas
mov
xchg
add
xchg
sub
push
mov
xchg
lret
cmpsl
pop
cmp
push
sbb
xchg
fcoml
lahf
jno
jns
xlat
dec
push
dec
and
adc
pushf
sarb
sub
pusha
lahf
mov
jle
adc
in
xchg
inc
in
sbbl
xchg
outsl
and
incl
inc
addb
sbb
adc
adc
sahf
test
mov
or
mov
ja
cmp
push
pop
fsubrl
pop
out
dec
aam
xor
mov
pop
cmpsl
aam
inc
sub
dec
push
arpl
pop
and
sub
dec
hlt
leave
mov
loop
loopne
cli
or
loopne
and
test
cmp
jb
pop
mov
pop
push
and
xor
jge
mov
inc
mov
add
xor
in
not
and
rcll
test
xchg
pop
repnz
dec
daa
or
mov
push
test
mov
cld
call
scas
xor
nop
sub
ja
fldcw
sub
call
jnp
lods
or
test
rcrl
ret
jge
xchg
cmp
leave
lock
mov
sti
or
pushf
sbb
add
call
cwtl
jnp
xor
mov
notb
mov
or
or
test
inc
addb
fisttpl
out
pop
mov
aad
sbb
push
je
insb
adc
add
xchg
inc
loopne
scas
lock
je
es
out
mov
push
xor
popw
outsl
push
mov
das
xor
mov
js
aad
push
or
dec
or
jns
out
cmp
fcompl
loope
mov
push
push
and
jne
push
lods
out
or
jmp
clc
sub
jl
jne
xchg
or
out
test
rcr
frstor
sbb
or
push
or
loopne
fucomip
icebp
pop
xchg
xor
les
mov
mov
insl
ret
inc
jo
lret
sbb
fs
dec
pop
xchg
imul
xlat
cmp
mov
adc
cwtl
mov
add
jmp
not
rclb
inc
xchg
ret
sti
push
pop
sar
pop
leave
cltd
aam
xor
dec
add
pop
ret
inc
nop
fwait
mov
adc
inc
cmp
pop
lret
add
jl
adc
lcall
add
dec
inc
push
pop
sub
sub
jecxz
sbb
aad
call
psubq
jbe
fstpt
ljmp
add
mov
sbb
sbb
mov
fsubl
outsb
jno
popf
mov
lds
mov
push
std
jp
inc
pusha
aas
rorl
js
sub
sub
mov
xchg
out
out
or
cld
insb
lcall
ljmp
gs
sahf
cs
inc
mov
inc
ret
lcall
movsl
mov
adc
jnp
jno
outsb
push
sbb
in
test
push
fcoml
and
cli
adc
test
std
repnz
sbb
and
scas
push
push
arpl
push
inc
jns
or
mov
mov
mov
or
test
in
inc
jmp
iret
adcl
push
adc
jbe
xchg
js
inc
dec
call
push
pop
mov
push
mov
or
int
jl
in
inc
pop
cmp
sub
mov
test
pop
out
cmp
mov
push
subl
jns
lods
test
cld
mov
hlt
sub
or
shl
les
add
cmp
push
xchg
mov
jge
lret
out
inc
mov
push
sbb
jecxz
mov
push
out
aam
insl
test
lea
xchg
jb
dec
xor
push
jbe
push
or
inc
dec
stos
rclb
sbbb
xlat
rcll
jbe
xor
cmc
pop
cmc
cmp
jp
mov
shll
stc
cmpb
add
mov
test
push
push
ja
mov
sbbb
sub
ds
stos
push
popa
es
ret
adc
xchg
xchg
fldl
mov
test
mov
repnz
ljmp
iret
icebp
or
cmp
lds
or
mov
sbb
stos
xchg
dec
jo
jo
fs
cwtl
mov
add
out
addr16
and
ds
xchg
pop
and
jg
test
inc
mov
repnz
and
jbe
xchg
xchg
lds
sub
and
int
mov
stos
push
inc
loope
pusha
cli
sar
push
scas
add
add
mov
daa
enter
test
pop
pop
sbb
jae
jns
test
dec
add
jnp
test
ljmp
out
push
fsubrl
addr16
dec
pusha
push
pop
fdivs
sbb
xchg
mov
xor
sti
jae
loope
test
out
rep
cmpsl
shll
xor
xchg
mov
push
inc
adc
mov
fdivrs
xchg
daa
mov
mulb
mov
or
jnp
popa
pusha
mov
insb
mov
jns
lock
lods
push
mov
or
xchg
out
pop
ret
pop
add
std
sub
xchg
ja
in
into
dec
push
lret
push
packuswb
enter
mov
testb
in
jle
cltd
mov
sbb
in
pop
xor
dec
push
rclb
rcr
jb
cmp
mov
arpl
lea
and
outsl
jge
test
xor
jo
mov
cmp
test
in
ficompl
push
mov
cltd
es
or
xchg
popl
pop
pop
jecxz
add
fdivl
push
lods
stos
icebp
mov
inc
mov
xchg
sysenter
inc
push
mov
pop
and
mov
mov
mov
mov
jmp
std
les
and
loope
adc
lock
loop
ss
mov
push
fwait
sbb
nop
int3
lret
dec
dec
test
pop
pop
jns
mov
jmp
fisttpl
fbstp
js
cmp
call
xchg
jb
out
stos
sub
adc
fwait
mov
jo
or
add
ja
pop
daa
rcrl
int3
adc
mov
daa
pop
mov
push
incl
pop
and
pop
out
clc
inc
sahf
mov
pop
in
loope
sbb
test
xor
adc
or
ret
mov
fiadds
outsb
dec
loop
pop
add
adc
sub
push
cmpsl
repnz
mov
adc
testb
add
fmull
pushf
pop
sbb
cwtl
push
out
mov
es
shll
xchg
pop
dec
in
cmp
aas
cmp
test
sbb
pop
outsb
push
sahf
imul
xlat
out
hlt
sbb
dec
dec
push
xchg
jmp
and
mov
in
xchg
into
and
sahf
leave
inc
pop
add
jb
rcrl
shll
jp
nop
jo
addb
pop
hlt
jmp
xchg
jo
mov
mov
cli
ror
imul
adc
test
in
jg
std
es
dec
aad
pop
jp
xchg
ret
cmp
aam
mov
or
loope
lcall
ror
cld
push
int3
jge
cld
push
pop
jb
lds
or
mov
das
ds
adcl
inc
push
or
sti
xor
sub
pop
xlat
insb
jo
sbbl
subb
repz
ja
and
pusha
adc
cmp
and
sahf
adc
xchg
xor
jp
mov
lret
pop
hlt
lds
sbb
cmp
or
leave
mov
ss
insl
popa
loope
add
sub
or
test
out
sti
dec
and
hlt
inc
xchg
lret
ja
ret
outsb
cmpsl
sti
and
sub
push
dec
inc
repnz
sahf
imul
adc
sti
push
and
push
insb
pop
aaa
shrl
mov
cmc
popa
xchg
iret
and
mov
lds
jecxz
repnz
jae
cmp
xor
xor
or
inc
lahf
or
cmp
or
out
shlb
addl
int
pop
cmp
pop
sub
dec
movsb
cmp
in
sbb
inc
int3
jl
add
scas
repnz
ja
rcll
cmpsw
jg
dec
xor
lret
dec
loope
pop
popa
sub
dec
sub
push
push
cltd
inc
mov
sti
aam
jae
add
pop
pop
add
enter
jo
push
sahf
adc
xor
bound
out
lods
jo
stos
mov
sub
leave
jbe
nop
frndint
mov
arpl
lock
test
loopne
xor
test
xchg
test
mov
ret
fistpll
fwait
push
inc
sub
fucomip
mov
and
in
jp
fcomps
inc
cld
movsl
xchg
pop
jg
inc
mov
pop
cmc
lahf
sub
pop
jb
sti
pop
loopne
or
mov
in
stc
sbb
pop
inc
dec
outsl
and
jmp
and
pop
lock
xchg
je
scas
mov
mov
popa
leave
add
daa
sbb
lret
pop
sbb
xor
out
mov
ret
and
lea
cmp
push
repnz
sti
push
vpaddq
inc
rolb
stos
fucomi
rcr
mov
cmp
or
fildll
dec
mov
mov
lret
jmp
outsl
loop
ret
loope
push
add
lds
fiadds
and
orl
cmp
add
push
jp
xchg
aad
out
pop
inc
mov
push
or
cmp
mov
jp
test
cmpsl
inc
mov
bound
sub
jge
push
imulb
mov
push
imul
sbb
jle
repz
push
ret
adc
xor
outsl
mov
cmp
pop
test
movsl
cmc
rcll
sub
in
outsb
inc
xor
xor
rolb
inc
adc
popa
mov
mov
cmpsb
sbbl
jg
xor
loope
mov
add
mov
icebp
inc
dec
lret
dec
outsl
out
mov
nop
dec
setp
push
adc
adc
out
mov
pop
push
sar
sbb
std
dec
repz
clc
movsb
pop
sub
add
lea
subl
jb
loopne
mov
xchg
inc
cmpsb
and
mov
in
cmpsl
sbbl
dec
aas
mov
pop
xchg
je
inc
aam
push
mov
mov
ds
fistpl
int
push
jl
mov
js
dec
lods
add
mov
idiv
jo
stos
sub
xor
sub
xchg
push
jmp
cmp
cmp
pop
mov
and
or
xlat
jle
jns
pop
rcr
dec
clc
and
inc
stc
lds
aas
test
into
loopne
ja
inc
sbb
sbb
fcmovne
stc
fucomip
test
inc
jb
pushf
nop
jo
sti
ret
xchg
sub
inc
dec
cmp
cwtl
jg
loopne
add
adc
inc
test
addr16
mov
pop
add
in
ficoms
outsb
clc
imul
inc
sbb
je
jmp
or
sub
inc
jo
fcoms
pop
pushf
cs
data16
mov
insb
xor
outsb
and
dec
in
cs
jle
ret
icebp
sbb
scas
add
cmp
lret
mov
xchg
mov
addr16
add
mov
fs
enter
adc
cs
mov
inc
or
out
sub
sub
xchg
mov
outsb
fsubs
loop
jge
pop
icebp
jmp
push
int
loop
jae
mov
mov
out
pop
movl
add
inc
push
xchg
jbe
repnz
jb
xorb
add
mov
push
adc
dec
scas
pop
imul
adc
movsl
mov
loope
shrd
and
jb
addr16
inc
das
lods
jle
xchg
fldenv
pop
mov
add
adc
adc
sbb
cmp
xor
mov
adc
jmp
and
mov
mov
jge
sbb
aas
fnstenv
inc
in
and
call
mov
pop
lret
push
mov
dec
call
lret
xchg
sahf
jmp
sub
aam
jmp
lahf
call
jne
insl
pop
scas
pop
push
mov
and
int3
push
outsl
lods
pop
or
xor
jb
in
cs
cmpsb
inc
inc
mov
stos
jo
adc
push
fwait
mov
mov
add
movsb
dec
scas
into
push
add
inc
adc
add
jle
bound
dec
cmp
push
mov
mov
enter
loop
nop
mov
ljmp
sub
and
sbb
add
or
cltd
adcb
jnp
cmp
stos
ljmp
sbb
jns
push
pop
mov
jnp
sbb
fidivrs
jb
outsb
jp
push
xchg
addr16
sbb
insl
xchg
jmp
nop
stos
aam
cmp
inc
mov
pushf
pop
faddl
and
out
cmp
sub
leave
popa
cmp
and
lods
addb
loopw,pt
mov
push
xchg
cmpsb
lret
addb
xchg
test
aam
push
aam
outsb
arpl
in
xor
mov
jle
push
adcb
or
push
push
and
jge
enter
fs
cmp
and
insl
adc
or
and
sbb
and
scas
scas
sbb
test
fwait
int3
jo
add
xchg
adc
adc
daa
out
test
sbb
mov
jne
jne
pop
cmp
movsl
sarl
insl
mov
mov
xor
mov
dec
jnp
test
push
aad
dec
mov
sub
push
push
adc
dec
in
push
dec
inc
sarb
add
ja
mov
mov
inc
inc
push
push
and
inc
sbb
clc
cld
dec
sub
xchg
cld
jp
pop
push
jmp
xlat
lret
test
imul
loopne
inc
and
ret
dec
stc
xchg
test
aaa
incl
push
cld
or
dec
push
add
in
test
jns
push
add
movsb
pushf
jb
iret
pop
lahf
pop
or
leave
cmpsb
xchg
and
outsl
and
jmp
adc
push
sub
fimull
adc
and
inc
cmp
mov
movb
jo
jl
add
lret
stos
mov
mov
lea
sbb
pop
sbb
jle
pop
mov
add
div
jmp
push
and
shrb
mov
fs
iret
and
shr
xlat
mov
sarb
stos
fs
lock
sbb
insl
dec
jne
adc
xchg
scas
sbb
dec
insb
jp
lret
movsb
pop
mov
jp
addr16
push
sub
mov
loopne
jp
adcl
sub
cwtl
imul
mov
data16
mov
pop
push
adc
sub
or
push
cmc
fstpt
jecxz
and
lods
jns
jmp
fnsave
stos
or
xchg
lahf
sarl
scas
mov
dec
sub
xor
xor
fistps
jmp
cmpsl
mov
pop
dec
and
jecxz
jns
orb
loope
mov
mov
ja
xchg
adc
add
popa
dec
pop
outsb
push
sbb
dec
lods
add
lret
inc
mov
mov
repnz
popa
dec
movsb
and
jp
ret
es
testl
jmp
xchg
or
jle
lock
sbb
test
add
jno
inc
loopne
outsl
push
inc
and
cmpb
cld
lods
fcoml
punpcklwd
cltd
loop
gs
xor
adc
int
out
mov
add
adc
lcall
fstp
out
push
jo
fnstcw
test
mov
fnstsw
fiaddl
dec
cmp
mov
jns
push
int
loope
pop
cmpsl
pop
movq
push
sub
sbb
mov
data16
push
xor
cld
pop
mov
lea
mov
cs
jne
addr16
fsubrp
inc
push
sahf
sbb
add
mov
negb
pusha
add
add
and
add
std
test
test
adc
xor
mov
leave
subb
jbe
cmpsb
mov
in
push
loopne,pt
fdivl
mov
lock
xor
adc
sub
sub
int3
lods
cmc
popf
aaa
lods
out
sbb
add
jbe
movq
push
mov
jae
push
int
mov
mov
fidivs
xor
mov
cltd
nop
lahf
inc
mov
hlt
lods
cwtl
jnp
sub
xchg
xchg
inc
je
call
inc
ss
adc
mov
sti
call
mov
inc
or
popa
jb
mov
push
sbb
push
imul
and
aam
and
sbb
sbbb
adc
sbb
push
fdivrs
loopne
test
mov
mov
jns
adc
popf
into
rol
dec
das
or
ja
icebp
ret
push
inc
sbb
sub
sbb
loope
add
jmp
jp
lcall
insb
push
and
pop
repnz
xchg
pop
jecxz
xchg
mov
or
sub
add
pop
rcll
shr
daa
mov
rclb
inc
fdivrs
push
jmp
mov
loopne
pushf
aaa
pop
cmp
divl
into
push
jno
data16
out
add
pushf
leave
es
jbe
add
sbbl
push
test
cs
add
jecxz
push
repz
dec
and
cmpl
jns
lock
daa
fbld
xchg
mov
roll
or
dec
data16
add
int
pop
lods
out
sti
ss
loop
adc
jnp
dec
push
fs
adcl
cli
ja
xor
mov
sbb
xchg
fisubrs
pop
cld
hlt
xor
mov
iret
popa
mov
mov
mov
mov
mov
in
enter
leave
push
jecxz
stos
test
or
cmpsb
mov
dec
or
xchg
sarb
jno
sub
or
movsb
stc
jp
fnstcw
pop
dec
or
dec
cli
movsb
mov
aad
insb
sbb
pop
pop
popf
add
repnz
aas
fwait
xchg
sbb
cwtl
lods
mov
mov
and
xor
xchg
pop
jge
cmpsb
int3
in
xchg
jmp
int3
push
mov
sub
mov
push
pusha
imul
mov
jle
xchg
insl
mov
jae
cmp
mov
pop
lret
and
clc
rdmsr
aaa
insb
push
test
fisubrl
lods
mov
in
in
test
jge
repz
adc
lcall
ret
outsl
add
sbb
and
adc
idivb
mull
es
dec
push
lock
mov
mov
xchg
imul
cmp
repz
scas
jae
ret
jl
push
out
neg
jp
out
sarl
out
push
ljmp
cmc
push
push
je
sbb
dec
cwtl
mov
xor
mov
jbe
in
stc
int3
lock
mov
stos
sbb
push
jmp
mov
mov
inc
sub
jne
sbb
dec
add
mov
adc
ljmp
sbb
sbb
shlb
pop
lods
mov
fisubrs
xchg
and
sub
add
popa
pop
add
jb
out
jge
lret
cmp
fwait
add
clc
repz
inc
add
inc
rorb
in
loop
roll
outsl
xor
adc
mov
mov
dec
jge
cli
sarb
aaa
jl
sub
je
xor
mov
add
les
fwait
sti
adc
movsb
aaa
loope
je
data16
movb
movsb
pusha
cmp
mov
cmp
sbb
out
aaa
fnsave
loopne
ds
xor
shll
pop
mov
adc
dec
pusha
sbb
push
mov
jmp
or
pushf
push
call
out
dec
stos
xchg
out
leave
bound
dec
sub
leave
and
or
xchg
push
jns
aam
lds
and
sub
loopne
das
lcall
std
xchg
aaa
sub
divb
push
jns
xchg
xchg
sbb
int3
aas
dec
and
push
dec
xlat
movsb
in
cmp
dec
push
hlt
loop
sbb
sub
in
pusha
shr
shr
add
adc
jmp
or
fdivs
loope
push
jmp
mov
inc
jecxz
addl
out
dec
sub
shl
xchg
shll
cwtl
pop
shlb
mov
imul
into
rolb
out
cs
mov
sub
add
push
inc
pop
xor
clc
add
adc
and
jmp
mov
outsl
std
ret
xchg
inc
je
push
inc
mov
fmuls
and
faddl
cltd
fildll
jp
repz
fadds
cmp
sub
mov
fistps
dec
ret
stos
pop
cmp
cmp
jns
xchg
mov
or
jp
mov
iret
in
xor
inc
inc
lock
cmpsl
mov
std
add
pop
iret
icebp
dec
pop
cmp
push
or
adc
loope
in
xchg
cmpsl
adc
add
pop
mov
pop
push
lret
mov
hlt
inc
cmpsb
in
cmp
push
setne
mov
sub
int
enter
loope
std
inc
fdivs
lahf
adc
sahf
subl
push
mov
and
mov
jnp
push
shr
fiaddl
rcrl
test
aaa
push
shlb
jp
ja
or
adc
adc
clc
mov
je
inc
adc
sarb
pusha
adc
jno,pt
repnz
push
pop
add
rorl
mov
sarb
pop
xor
xchg
icebp
cmc
pop
mov
mov
lods
shl
mov
pop
mov
sbb
addl
loop
mov
xor
inc
jo
stc
cmp
push
adc
clc
andl
aas
cmp
lock
mov
pop
mov
in
cwtl
mov
fisubl
hlt
std
xor
jnp
push
add
ss
jecxz
clc
rorw
ljmp
aam
push
inc
js
dec
out
fildll
add
fildl
pusha
jecxz
into
jo
xchg
jae
xchg
into
jo
mov
and
pop
cs
dec
lret
aam
push
push
popa
jb
pushf
or
std
pop
stc
dec
sub
sbb
mov
loop
cltd
loopne
mov
sub
lret
stos
dec
dec
addb
inc
mov
and
adc
fidivrs
test
pop
arpl
popa
xchg
cmp
mov
out
outsb
inc
inc
mov
repnz
mov
mov
clc
mov
and
sarl
or
push
daa
in
repz
loopne
lcall
ljmp
adc
xchg
loope
pop
jo
stos
in
xorb
pop
sub
xchg
mov
shlb
lods
sub
xchg
sbb
sub
enter
aam
mov
sbb
lahf
imul
lahf
push
ss
cmp
sub
pop
lea
inc
adc
and
stos
push
and
fldcw
mov
push
scas
add
lcall
push
ficomps
jg
mov
cmpsl
sbb
sbb
idivb
push
ret
xor
dec
pop
imul
cmp
insb
cld
add
jecxz
mov
mov
and
pop
pop
shl
adc
jbe
cmp
dec
into
sbb
les
mov
lahf
mov
enter
cs
pop
cmp
mov
add
rcr
xchg
faddl
and
lahf
movsb
jne
daa
loopne
mov
push
sbb
fs
dec
fsincos
pushf
push
sub
test
out
faddl
cmc
inc
lcall
sub
sub
mov
adc
xor
repz
fsubrl
or
xor
add
insl
cmpsb
into
xor
outsl
push
push
jg
loope
test
xchg
iret
or
dec
std
lret
xchg
cli
mov
mov
xchg
jle
pushf
xchg
mov
and
jmp
cmp
addr16
mov
loop
cs
pop
dec
push
addr16
popf
stos
jne
jmp
cltd
mov
inc
loope
cmc
les
xchg
xchg
mov
push
inc
jnp
cld
rorl
jp
push
cld
mov
mov
scas
in
shll
push
in
int3
stc
cmp
adc
add
mov
mov
sbb
sbb
shrl
or
pop
or
out
pushf
je
out
push
mov
add
cmc
mov
push
in
loope
imul
cmp
push
int3
pop
jle
fsubrl
stos
fimuls
insl
sbb
push
cmpsl
dec
lock
sbb
adc
mov
sbb
or
stc
orl
lret
sbb
arpl
loope
fldl
pop
jmp
test
int3
pop
jno
nop
imul
insb
adc
daa
push
popf
push
sahf
cmc
adc
adc
sbb
xor
addr16
xchg
xchg
xchg
into
scas
shl
lds
mov
je
mov
ds
test
ds
mov
adcb
jmp
inc
lahf
ret
int
int3
pushf
imul
scas
packssdw
movsw
sub
xor
xchg
stos
cwtl
aam
ds
xchg
pop
mov
xorl
mov
pop
das
adc
inc
mov
dec
addr16
out
sarb
ja
out
lock
push
inc
ja
out
insl
inc
cmp
or
testb
repz
pop
fbstp
js
inc
loope
mov
mov
or
xor
cmp
adc
mov
pop
pop
or
push
xor
aad
rorl
xlat
inc
int
outsb
pusha
push
out
push
gs
jno
sub
adc
stos
nop
inc
xor
add
popf
xchg
add
jbe
mull
adc
in
push
xor
sbb
ret
dec
mov
push
rcrb
adc
push
jge
inc
mov
sbb
sub
push
jle
dec
adc
sbb
gs
mov
sub
jge
mov
jnp
jne
xchg
pusha
mov
push
jle
lea
lahf
imul
sbb
or
nop
sub
mov
jge
popa
out
mov
inc
mov
stos
lret
cs
cli
jl
adc
pop
int
scas
jl
mov
cmpsl
jp
std
outsb
adc
out
shrl
fbstp
addb
mov
inc
or
jp
jb
stos
int
mov
push
arpl
fldcw
and
xchg
rcrl
push
sbb
mov
pushf
and
cmp
push
pusha
pop
popa
push
xchg
fisttpl
inc
xlat
xor
jno
pop
xor
mov
out
inc
pusha
jecxz
imul
jns
add
pop
sahf
mov
in
or
cltd
fsubp
mov
out
stc
enter
lea
xchg
jle
jge
insl
or
pop
lods
dec
mov
sbb
or
xchg
sub
xor
aas
adc
push
fcmovu
xor
mov
fidivrl
lahf
xchg
mov
lods
insl
pop
dec
and
leave
sub
out
mov
hlt
pop
repnz
xchg
popl
jp
adc
in
xor
dec
xchg
adc
mov
xor
lea
outsb
adc
neg
add
aas
pop
andl
pop
ret
adc
repnz
inc
jne
xor
inc
push
out
stos
sub
cs
mov
ficoml
movsl
inc
fidivrs
jge
testl
push
fnstsw
js
adc
or
mov
cli
adc
xchg
testl
xor
cli
cmp
adc
cli
insb
std
xor
mov
push
xchg
inc
gs
sbb
imul
xchg
mov
std
xchg
cmp
stos
sti
mov
lods
enter
sub
sbb
dec
pmulhuw
sbb
pop
xchg
sub
movl
mov
punpckhbw
movsb
inc
mov
hlt
jg
rol
decb
pusha
fwait
add
ja
mov
int3
dec
mov
adcl
ds
xor
icebp
jbe
push
lret
xor
out
jecxz
jno
and
push
loopne
mov
enter
aad
sbb
xchg
fwait
jne
xchg
mov
xchg
imul
push
dec
int
shl
pop
xor
pop
mov
out
pushl
aad
jmp
xchg
stos
adc
push
mov
or
repz
jg
mov
push
sub
mov
ficoml
inc
jp
les
adc
jbe
mov
mov
pop
jp
push
cmp
sub
ret
adc
mov
and
or
frstor
stos
ret
daa
imul
jb
inc
aas
test
sbb
daa
cmpsl
and
lods
outsb
push
test
cmp
cmc
xor
imul
jae
pushf
movsb
or
sub
clc
aam
mov
add
test
dec
out
out
cmp
jg
jb
mov
cmp
pop
pop
test
push
mov
test
mov
and
iret
jne
dec
jge
xchg
mov
add
jle
test
mov
mov
movl
mov
add
mov
mov
adc
mov
sbbl
mov
mov
subl
xor
subl
add
mov
lea
mov
mov
xor
sbbl
add
sbbl
mov
xorl
lea
push
sub
mov
orl
xor
xorl
add
xorl
push
xor
or
adc
mov
push
addl
pushl
subl
call
and
mov
movl
cmpl
je
cmpl
jbe
jmp
pushl
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
mov
movl
mov
mov
mov
sbb
mov
lea
or
mov
movzwl
sub
mov
movl
addl
mov
xor
mov
sub
mov
mov
movl
mov
mov
cmp
je
mov
xor
mov
xor
addl
xor
addl
lea
mov
decl
xor
subl
div
dec
mov
add
mov
xor
adcl
xor
addl
sub
movl
cmp
jne
addl
mov
andl
mov
inc
mov
cmpl
jle
jmp
push
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
movzwl
adc
mov
mov
movl
cmpl
je
cmpl
jg
jmp
pushl
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
xor
xor
add
sbbl
add
mov
cmp
jae
and
lea
xor
jmp
sub
std
sbb
cltd
cmpsb
cld
ss
sub
xlat
fstpl
cmp
jp
mov
icebp
fmuls
and
mov
xchg
leave
jns
daa
ret
imul
movsb
push
xchg
inc
adc
dec
adc
mov
ss
push
inc
xor
xchg
jne
pop
and
outsb
mov
ret
arpl
testl
sar
jge
orb
fxch
mov
cld
dec
daa
repz
xchg
bound
loopne
pusha
loop
mov
dec
mov
les
dec
push
les
jmp
push
sbb
ffreep
pop
push
mov
and
and
mov
movsb
jb,pt
lds
popf
cmp
adc
in
shl
scas
lret
dec
iret
sub
mov
ljmp
mov
push
cltd
mov
and
shll
dec
inc
push
mov
aam
mov
test
movl
shrl
daa
sub
test
and
icebp
je
sbb
lahf
pushl
in
jmp
add
imul
and
inc
add
jmp
cmp
sahf
cmp
sub
mov
in
cmpsb
dec
arpl
cmp
rcll
xchg
inc
add
das
mov
push
mov
das
and
mov
arpl
icebp
cld
repnz
add
adc
int
rorl
and
popf
outsb
pop
fdivrp
ret
popf
ror
hlt
sbb
aaa
jmp
and
and
gs
xchg
mov
mov
sub
cmpsl
sub
pop
mov
in
mov
cmp
add
movsb
in
xchg
add
jns
pop
jge
rolb
lcall
loopne
adc
xchg
xchg
add
add
jae
mov
sbb
arpl
jae
sbb
pop
ror
and
mov
mov
dec
and
push
add
sub
js
fwait
push
pop
loope
jmp
inc
mov
jbe
test
shl
xor
hlt
add
sti
icebp
je
push
sub
jg
xor
mov
arpl
add
inc
xchg
sti
rcrb
scas
mov
iret
pop
jle
hlt
or
pop
mov
cmp
jbe
test
js
dec
scas
repnz
push
aam
push
inc
clc
sub
nop
adc
jg
sbb
mov
jno
decb
mov
rorb
repnz
mov
push
aas
sbb
ret
andb
jae
sbb
les
or
lock
cli
aas
loope
cmpsl
and
ficompl
adc
fadds
add
jb
push
imul
shrl
int
popf
add
fidivrl
outsl
in
rcll
imulb
bound
add
jp
pushf
xchg
out
gs
inc
xlat
popl
mov
shl
loope
movl
push
cmp
mov
mov
jo
test
inc
popl
add
push
xchg
jns
lcall
push
push
cld
push
aas
push
sub
xchg
jae
and
lods
xchg
js
sarb
dec
adc
push
pop
jbe
jne
nop
and
out
mov
pop
loop
add
dec
fwait
pop
shrl
add
cmp
jp
add
imul
mov
inc
cmp
jp
imul
cmp
fisttpl
icebp
lahf
lret
add
inc
add
ss
jo
ficompl
scas
or
push
cmp
push
inc
shl
in
xor
movsl
push
sub
xchg
in
mov
jo
inc
or
and
cld
jb
scas
lahf
sbb
ljmp
push
das
loope
lds
aas
mov
lret
pop
cmp
aaa
and
push
jge
sub
xchg
mov
jo
lahf
sbb
jp
movsb
xchg
sub
sbb
jo
dec
flds
popa
and
jns
and
adc
adc
push
pop
clc
cmp
loop
test
xchg
fsubrs
hlt
sarl
dec
pop
fucomi
pop
dec
sub
sbb
sub
cld
xor
aaa
arpl
jle
mov
pop
rclb
call
repnz
mov
test
pop
frstor
push
pop
sbb
dec
addr16
imul
cmc
fwait
enter
imull
fstpl
mov
inc
mov
daa
cmpsb
mov
jne
ja
mov
and
mov
jl
xchg
mov
xchg
inc
aaa
mov
sub
les
popa
jbe
dec
bound
xorb
insl
int
mov
loop
fdivl
sub
and
mov
xchg
rcrb
test
imul
inc
mov
xlat
mov
add
jbe
in
cs
mov
cli
ja
loop
in
and
xor
jns
ja
or
mov
fadd
and
aad
incl
out
repz
or
adc
aam
dec
xchg
cmpsb
std
ret
xchg
fmul
and
inc
mov
jb
fidivl
inc
or
ds
ffree
jg
jno
les
push
fdivrl
andb
sahf
out
jl
ret
adc
cmp
js
or
jg
push
xchg
adc
xchg
dec
cmpb
xor
ljmp
mov
push
insl
pop
bound
add
sbb
jne
or
push
xchg
sti
add
pop
mov
cmp
loop
and
push
jns
fstpl
sahf
ss
jnp
rcrl
pop
lds
call
mov
shll
fiaddl
test
pop
adc
cmpsb
or
or
loope
mov
lods
mov
stc
fcmovnbe
decl
jle
lods
xchg
sahf
jle
enter
and
inc
rcll
jo
jb
sbb
adc
sub
xchg
fcmovnu
loopne
fmull
lret
adc
cltd
das
fdiv
mov
aam
pop
fcmove
nop
sub
cmpsb
inc
cmpsb
push
pop
inc
sub
test
xchg
lds
dec
pusha
xor
rolb
push
cmc
ret
and
push
lock
mov
fwait
jo
push
std
dec
mov
ss
sub
cld
loopne
jb
mov
sub
sbb
mov
cmp
cmpsb
xchg
hlt
inc
decl
xchg
pop
rclb
roll
insl
push
gs
sbb
loop
dec
jl
dec
or
or
test
fwait
xchg
push
ret
inc
lahf
mov
push
stos
mov
mulb
and
popf
cmp
sarl
leave
mov
out
imul
rcll
ds
test
push
push
dec
and
xor
in
pop
dec
fcoms
dec
leave
mov
adc
shl
lahf
jecxz
jmp
or
ljmp
push
lods
jae
nop
push
es
mov
push
dec
push
nop
ds
xchg
mov
jmp
lahf
dec
leave
lret
add
dec
nop
out
fbstp
cld
lea
cmp
cmp
inc
adc
mov
or
inc
push
mov
dec
add
mov
lcall
dec
and
inc
rorb
inc
or
dec
mov
dec
add
sbbl
push
test
mov
movsl
jbe
and
pop
xchg
ja
iret
push
dec
loop
daa
hlt
lea
sarb
or
in
pop
outsb
pop
jb
inc
loope
lods
cwtl
mov
addr16
imul
out
mov
loopne
mov
mov
shrb
in
jb
out
dec
je
movsb
mov
addr16
mov
fidivrl
lds
cwtl
cmp
fsts
movsb
jbe
xchg
fisubrs
pop
aad
aam
insl
jno
dec
mov
pop
sbb
xor
push
lock
mov
les
sub
popa
push
subb
mov
push
test
inc
xchg
rcrb
xchg
pushf
sti
and
adc
stos
jbe
lret
and
jbe
or
pop
cwtl
ud2
xchg
cli
adc
add
icebp
inc
sbb
out
lea
push
dec
xchg
ror
push
xchg
and
fwait
mov
adc
lea
out
arpl
loop
ja
pop
xchg
sarb
inc
out
ds
or
adc
xor
cmp
push
push
jl
jne
in
sbb
or
pop
mov
fstpt
fwait
aaa
push
arpl
inc
pop
mov
mov
ja
pushf
pop
int
push
stc
sub
dec
pop
sbb
popa
adcb
add
inc
push
mov
pop
and
push
iret
cmp
stc
xor
mov
ds
add
push
stos
ror
and
and
push
cmp
cmpsl
xchg
scas
fs
test
arpl
jmp
push
orb
jmp
aad
ror
stos
into
imul
popa
cmp
ret
int
push
adc
aad
lock
sub
inc
dec
and
pop
lods
std
bound
push
mov
or
xor
cmp
sahf
push
cmc
test
add
add
jp
xlat
dec
pop
shlb
sub
les
and
fsubrl
sub
lahf
in
jecxz
and
add
scas
aas
or
sarb
les
push
ja
dec
sub
lock
dec
jmp
mov
stos
in
scas
or
out
or
xchg
pop
inc
rorb
mov
rcrb
xchg
mov
divl
adc
stos
inc
mov
aaa
das
dec
lcall
xor
test
sar
aam
test
mov
shr
dec
xor
cmp
sub
repnz
adc
jns
cmpl
or
nop
ja
icebp
cld
mov
mov
and
mov
sbb
pop
out
pop
js
or
lret
inc
xlat
xchg
test
pop
dec
mov
es
mov
xlat
adc
aam
cmp
aaa
jo
sub
divl
cwtl
notb
inc
pop
outsl
les
and
sub
mov
add
adc
xor
xor
pop
shll
out
lret
sub
adcb
mov
je
pop
imul
inc
loope
jl
arpl
cmpsl
cmp
movsl
imul
jo
pop
xchg
mov
fucomp
std
andl
sbb
jp
pop
mov
fwait
cmc
jo
inc
test
in
gs
add
leave
mov
cmpb
pop
shlb
sbb
in
cmp
dec
sub
ljmp
sbb
dec
in
sub
sbb
cli
mov
dec
loope
sbb
xor
sarb
sbb
out
cmp
dec
bound
cmp
dec
cld
inc
xchg
std
outsl
cmp
mov
out
adc
cmp
lret
nop
ret
jge
pushf
add
jge
lea
inc
aam
sub
fdivrs
pop
imul
popf
dec
inc
lea
xchg
hlt
cmp
pop
mov
mov
and
mov
faddl
fadds
dec
push
push
push
and
or
jne
scas
test
stos
jl
rorb
call
das
cmpsb
jo
cmpsb
aas
or
cmp
lds
out
lock
leave
shll
arpl
dec
dec
inc
test
jb
push
inc
adc
mov
mov
mov
imul
dec
test
mov
sbb
fadds
nopl
pop
xor
std
cmp
pusha
sub
inc
jmp
loop
inc
leave
pop
test
sub
mov
pop
sub
pop
movsl
or
call
push
dec
lret
dec
xchg
imul
daa
or
push
insb
pop
xlat
into
out
pop
test
inc
lret
les
pop
test
add
aas
rolb
out
into
out
adc
call
jae
cs
inc
fwait
xor
cli
shl
push
inc
jle
in
movsb
test
out
movsb
jbe
ds
imul
daa
insb
cs
xor
std
cltd
cmp
push
js
aad
aam
jmp
pavgw
or
mov
adc
inc
stc
inc
sbb
mov
pop
push
sbb
ss
jns
jge
dec
nop
aaa
sbb
cli
push
xor
push
jne
sahf
movb
andl
or
in
xchg
addb
jecxz
adc
adc
mov
dec
fidivrs
pop
shl
sahf
addr16
out
and
out
inc
mov
jnp
cmp
dec
fsubl
mov
dec
inc
push
jmp
and
sahf
out
pop
mov
sti
xchg
add
addr16
pop
enter
cwtl
mov
and
push
mov
sub
dec
filds
test
outsb
cmp
add
sbb
mov
leave
ljmp
mov
jnp
imul
dec
outsb
shll
cmp
imul
out
jbe
add
ljmp
lcall
cmp
xchg
push
dec
dec
xor
cmc
orl
xchg
xchg
jmp
test
lock
xchg
orb
sbb
or
mov
xchg
dec
fsubl
dec
and
or
in
loop
jl
inc
scas
divb
addr16
insl
add
adc
xchg
mov
pop
out
sub
shll
dec
xchg
pop
push
fimull
pop
jg
xchg
cld
pop
sub
mov
ljmp
xchg
lret
pop
ss
psubusw
adc
sbb
pop
movsl
jnp
push
mov
sbb
xor
rol
jno
mov
jecxz
das
xor
mov
aas
push
mov
jmp
test
mov
mov
dec
lds
in
mov
inc
fisubrl
test
lods
xchg
popa
int3
inc
mov
into
repz
and
cld
push
call
pop
push
mov
pop
lods
lea
mov
ja
adc
in
div
sub
jmp
xchg
mov
in
adc
enter
cmc
pop
mov
pop
inc
pop
cmpsl
pop
movsl
jmp
add
mov
and
popf
test
cmpsl
cmp
cmp
cmpsl
out
sub
xchg
add
adc
mov
test
pushf
ja
imul
mov
pop
mov
mov
xor
rcr
mov
ss
push
jecxz
or
mov
movsb
mov
mov
arpl
pop
outsl
loop
mov
or
inc
xchg
int3
ljmp
fbld
push
mov
mov
mov
loop
roll
pop
aad
xor
jo
mov
test
bound
and
pop
xor
and
addl
into
push
add
outsl
rcl
iret
pop
xchg
xor
jp
mov
out
mov
bound
cmp
rcrb
lret
ljmp
xor
cmp
cltd
pushf
jb
negl
jle
aaa
push
mov
cmc
dec
and
sub
inc
add
repz
popf
xchg
cmp
shll
sub
sbb
les
add
fldl
movsb
mov
pop
jmp
push
shll
sbb
add
adc
call
stos
sbb
addr16
cmpsb
xchg
dec
into
sti
mov
outsb
shll
cmp
add
or
jl
sbb
mov
repz
lods
or
shll
xchg
push
sbb
jp
xchg
aad
inc
inc
or
sub
call
mov
pop
rcll
shl
les
pop
in
loop
push
cmc
sarl
fsubp
stc
or
pop
cmp
lret
lock
imul
cmp
dec
or
cs
dec
aaa
inc
fs
lea
aaa
lret
inc
in
cltd
out
in
sub
mov
rcrl
lret
add
mov
sti
mov
jle
std
and
lds
nop
add
rol
adc
arpl
aad
and
insb
jge
mov
lock
ds
lret
xor
loopne
pop
jecxz
inc
dec
pushf
pop
mov
cli
out
pop
or
push
adc
jmp
cmovae
imul
add
cmp
in
dec
mov
lea
mov
loopne
inc
mov
sbb
mov
out
sbb
sub
psubd
xchg
mov
out
and
dec
mov
and
dec
mov
mov
sbb
sub
daa
push
xor
mov
nop
pop
add
aad
es
mov
int3
cltd
imul
rcll
data16
outsb
and
mov
jo
and
test
mov
add
add
mov
xchg
movsl
test
movsl
subl
adc
and
lods
xchg
add
icebp
cmp
jo
fnsave
push
dec
inc
imul
adc
aas
mov
jp
leave
cmc
adc
pop
xor
std
and
es
mov
push
xlat
int3
sub
cmp
loopne
js
sahf
xchg
xchg
pusha
xchg
sbb
mov
dec
lock
in
leave
out
jl
or
jg
fisubrl
push
iret
lret
mov
fisttpl
test
sbb
shrb
adc
scas
in
idiv
mov
aas
stc
je
lcall
in
xchg
cmpsb
and
movsl
stos
mov
ljmp
dec
sti
out
adc
ja
in
or
clc
mov
pop
add
imul
xor
iret
xlat
dec
cwtl
sub
xchg
mov
mov
pop
cmp
cltd
push
decb
data16
out
std
imul
mov
pusha
int3
jb
ret
pop
and
data16
sti
and
imul
in
or
sub
push
in
mov
fisubrs
and
or
jbe
jmp
push
repz
in
add
cli
dec
rcrl
sub
cmpsb
rcrb
xchg
pop
fidivrl
pop
int3
push
popa
xor
cmp
jmp
cli
mov
iret
mov
jmp
sbbl
xor
mov
pop
and
outsb
call
testb
jp
push
test
push
or
jmp
mov
dec
lcall
das
pusha
call
mov
mov
std
push
sbbl
cmp
inc
cli
cmp
mov
lret
mov
jb
xchg
out
in
xor
adc
jo
testb
inc
mov
xor
aas
or
jmp
jo
xchg
mov
in
testl
call
popa
mov
lahf
xchg
pop
push
and
jmp
add
outsl
mov
dec
jle
sbb
cmpsb
movsb
mov
jbe
stc
and
imul
mulb
scas
push
cmp
fidivrs
inc
dec
fisubrs
mov
arpl
loopne
sub
mov
adc
adc
inc
test
push
incb
in
insb
cmpl
pop
mov
movsb
movsl
imul
adc
idivb
bound
jo
or
mov
in
out
clc
xchg
bnd
push
jno
cmpsl
scas
adc
push
pop
mov
push
jl
sub
lcall
add
in
sub
jle
mov
or
imul
imul
pop
pop
add
cli
xor
adc
nop
cmp
out
cvtpi2ps
jbe
stos
inc
lcall
sti
loop
cmp
mov
fsubs
std
jl
mov
jg
xorl
sub
adc
jae
and
ds
shll
sti
mov
and
fimull
dec
cmp
pop
imul
pop
xchg
mov
cli
add
cld
fwait
pop
test
mov
xor
fdivrs
push
ret
movsb
out
loop
ret
insl
jecxz
in
dec
hlt
inc
inc
jb
loopne
inc
jle
cmp
inc
das
mov
sbb
cmp
dec
jns
out
mov
dec
ljmp
dec
int3
pop
lods
cmc
xlat
xchg
adc
sub
daa
jg
dec
inc
out
aaa
and
movq
fists
sbb
or
rolb
scas
cmc
sub
cmp
push
xor
addb
xchg
sbbb
icebp
xor
jl
cltd
sbb
mov
adc
jg
sub
mov
jle
sub
inc
into
pop
jae
roll
lods
into
leave
in
mov
je
pop
js
sub
fildll
into
cmp
scas
insb
mov
test
mov
repz
and
fwait
scas
jne
mov
push
not
dec
push
pushf
dec
mov
stos
add
enter
sub
cmp
push
lods
dec
pop
daa
add
push
sbb
movq
sahf
cmp
mov
mov
sbb
xorb
jle
imul
xchg
stos
pusha
mov
mov
cmc
add
cmovo
xchg
and
push
nop
leave
bound
inc
pop
cmp
and
int
in
push
cmp
adc
enter
arpl
shr
inc
cmp
mov
ret
push
clc
push
cs
mov
xor
xchg
addr16
mov
movsl
jcxz
cmp
mov
dec
ljmp
outsb
mov
out
into
cld
xor
jbe
sub
xchg
outsl
clc
repz
addr16
rcll
jle
fs
xchg
clc
jae
mov
push
adc
or
jmp
sub
mov
and
std
mov
imul
insl
sub
loope
mov
cli
mov
fcmove
push
cwtl
mov
xor
xlat
ss
aaa
mov
push
xor
mov
push
loop
jb
mov
scas
jecxz
mov
out
sbb
cmp
and
cmp
scas
inc
sbb
lahf
loope
mov
push
movl
fidivs
aad
cmp
jnp
icebp
aam
sarl
push
popa
jecxz
ljmp
mov
dec
push
cmp
out
aam
dec
mov
cmp
xchg
sub
add
cmp
dec
xchg
and
cmp
mov
arpl
add
jge
or
idivb
mov
daa
lods
inc
aam
leave
fst
cmp
loopne
fists
pop
jmp
jns
add
repz
sbb
sti
leave
mov
mov
dec
cmp
sbb
or
cmpsl
push
pop
jb
lea
and
out
cltd
ret
popl
cmp
insb
push
sbb
mov
lods
repnz
loopne
test
jg
repz
xchg
add
jne
ret
mov
lcall
in
jne
mov
add
outsl
push
sbb
and
incl
popf
cmp
shr
orb
xor
int3
add
mov
jge
imul
testl
fisttpll
lock
adc
cs
es
out
vpcmpgtw
in
mov
add
out
jae
addr16
jne
sub
inc
jo
adc
push
icebp
add
pop
sarl
orl
xor
test
xchg
into
mov
cwtl
sub
lret
jb
stc
pop
mov
mov
mov
cld
cltd
icebp
insb
testl
or
loopne
adc
xor
push
xchg
out
addl
frstor
mov
sub
or
dec
fidivrs
pop
test
lock
push
pop
lods
arpl
inc
pop
sub
mov
lret
xorb
dec
sbb
lahf
mov
sub
sti
in
mov
ds
cmc
and
cld
out
in
fmull
dec
push
mov
jp
call
ljmp
adc
or
cmp
adc
fnstsw
iret
scas
js
jo
ret
stos
dec
adc
loope
fwait
sti
xlat
fsubs
fbstp
stos
push
xor
mov
mov
mov
sbb
push
popl
rcrb
jge
movsl
mov
fstpt
insl
call
ffreep
jns
rorl
inc
mov
inc
push
jns
iret
ss
dec
cmp
xchg
or
adc
or
cmp
mov
inc
push
je
pusha
inc
sub
add
sahf
leave
imul
fsubr
jb
jle
fsubs
push
jecxz
or
dec
mov
lcall
insb
jae
adc
pushf
dec
test
pop
inc
push
dec
imul
enter
inc
iret
adc
fcomps
scas
push
sbbb
ds
xor
lods
jecxz
sub
inc
rcl
or
sbb
push
aam
jle
xchg
fs
mov
mov
aaa
cmc
sbb
jae
mov
fistps
mov
push
xor
imul
xchg
fsubr
sub
cmpsl
jnp
jbe
notb
mov
pop
jno
inc
or
insl
dec
and
pop
scas
or
cmp
adc
and
std
popf
push
test
ja
or
test
pop
fnstenv
sub
add
lods
rorb
test
sub
xorb
jne
pop
loopne
adc
xor
push
mov
ret
ja
imul
jne
pop
jl
sahf
cli
cs
pop
xchg
cmp
cmp
dec
mov
cmp
inc
cmp
dec
pop
test
xor
ret
lret
jno
lea
sbb
clc
pop
ds
sahf
jg
jne
push
fiadds
mov
ja
jns
fs
lds
jg
fwait
mulb
xor
lret
push
leave
out
inc
rorl
sar
or
in
les
imul
jp
or
mov
add
test
xlat
mov
xor
mov
int
xor
hlt
push
xchg
lea
pop
add
fst
data16
push
xchg
xor
jge
push
data16
dec
xchg
arpl
sub
xchg
lods
loope
jmp
enter
mov
adc
enter
loopne
out
mov
dec
icebp
inc
cmp
outsl
daa
clc
fwait
orb
xchg
pop
xlat
dec
push
jae
out
insb
ret
nop
add
and
add
mov
call
fwait
loope
lret
xchg
mov
outsb
repz
icebp
fistpll
mov
cmc
xchg
in
pop
mov
into
inc
sbb
adc
adc
sbb
lods
fistpl
iret
inc
stos
lock
imul
adcb
insb
pop
push
adcl
dec
sbb
ret
mov
fcompl
dec
ljmp
test
lcall
aaa
lcall
int3
negb
adc
cmp
mov
mov
pop
jmp
scas
xor
pop
lahf
lahf
cmp
adc
insl
push
cmp
popa
fnstcw
xchg
inc
cmp
fidivl
sahf
sarl
fidivl
add
cli
jno
test
pop
jecxz
dec
cmp
js
inc
ret
sbb
rclb
loop
xchg
mov
or
adc
cli
mov
add
push
mov
leave
pop
or
or
mov
movsl
ret
mov
dec
addr16
stos
xor
insb
lret
fs
rolb
and
lcall
cltd
push
outsl
mov
es
xorl
sub
xchg
js
sub
mov
cmp
adc
pop
sbb
mov
push
push
fstps
and
xor
imul
dec
iret
jg
mov
xchg
in
fs
xlat
jno
pushf
lret
sbb
pop
sbb
gs
cs
mov
dec
and
dec
aam
jb
stos
xor
xor
inc
mov
iret
mov
jmp
imul
andb
jl
or
sub
in
xchg
inc
push
mov
ficoms
mov
xchg
fldenv
inc
sub
xor
inc
cmp
sub
and
cmp
xchg
lcall
jo
or
mov
jg
lods
int
xchg
mov
rorl
xchg
adc
inc
out
rcll
test
test
inc
std
add
repnz
pop
and
sbb
js
aam
jge
push
and
rorl
add
je
push
xor
pop
fidivl
les
add
lahf
gs
inc
jns
inc
cmp
lcall
fsts
add
mov
cmp
pusha
pop
jne
xchg
jbe
mov
fsubrs
sti
sbb
iret
sbb
movsl
jmp
bound
or
fidivs
mov
dec
lds
dec
lret
sbb
mov
push
outsb
jl
int
xchg
subl
jl
add
in
dec
jne
and
cmp
sbb
clc
jge
clc
pop
mov
pop
out
cltd
push
pop
ja
jno
ss
movsb
or
cmp
mov
fisttpll
iret
and
inc
sbb
inc
pop
mov
out
cwtl
out
hlt
outsb
sbb
ret
js
sbb
xchg
in
fs
rorw
std
pop
aaa
push
dec
leave
cvtdq2ps
sbb
xchg
in
push
dec
out
add
xor
pop
into
ficoml
lods
inc
push
test
jb
xchg
out
lods
fwait
jmp
mov
jne
mov
mov
jge
int3
cmp
inc
scas
repnz
daa
dec
add
movsb
jae
stc
dec
mov
loope
lods
sbb
lock
mov
sub
sbb
aaa
les
xlat
sbbl
pop
dec
adc
or
fiaddl
add
xchg
sarb
xchg
out
push
mov
jbe
pop
out
and
cmpsl
cli
iret
and
add
aad
pop
mov
mov
add
test
iret
sub
adc
add
daa
imul
pop
adc
loopne
mov
lds
out
jmp
in
xchg
inc
movsl
and
insl
subb
adc
clc
iret
and
push
jecxz
dec
jns
inc
data16
mov
enter
adcl
cld
xor
aas
jle
test
stc
dec
mov
xchg
test
addr16
push
or
pop
mov
sbbb
ret
hlt
andl
pop
mov
cmp
adc
and
xchg
or
popf
fdivr
jno
xchg
sub
push
xchg
fadds
pop
shrb
lds
out
inc
jmp
flds
outsl
fidivs
and
add
gs
or
repnz
movsl
scas
dec
jecxz
scas
cmp
mov
fdivrs
popa
and
int
ja
outsl
pop
and
push
pop
adc
lods
gs
data16
adc
test
xchg
popf
ds
test
mov
inc
push
fstps
jne
mov
cmc
cld
nop
bnd
jmp
cmpsb
cld
pop
jae
cmp
test
adc
cmc
or
mov
fs
gs
scas
mov
dec
std
pop
jp
stc
xor
sbb
jmp
lock
ja
mov
inc
adc
jo
inc
out
aaa
add
inc
shl
lret
or
cmp
repnz
push
mov
push
test
jb
fs
add
dec
sbb
iret
mov
push
cmp
test
rsqrtps
xchg
lods
inc
push
mov
mov
loop
push
xor
loop
cld
xor
lods
push
mov
and
nop
ds
push
xor
cmp
inc
jge
push
jl
cmp
xchg
int3
jne
mov
clc
mov
shll
fs
inc
js
les
xchg
push
mov
push
in
xor
addl
add
movl
lea
mov
movl
mov
movl
cmp
movl
jbe
subl
addl
jmp
orl
addl
sbb
mov
sbbl
xor
sbbl
inc
incl
add
movl
cmp
movl
jb
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jbe
jmp
push
pushl
push
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
xor
orl
mov
andl
sub
add
mov
xor
negl
sub
xorl
ror
xor
mov
add
mov
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jbe
jmp
pushl
call
cmpl
jne
xor
xor
inc
mov
jmp
mov
mov
sub
xor
cmp
jne
mov
mov
xor
xor
sub
sub
xor
mov
mov
xor
mov
sub
jmp
mov
xor
mov
sub
add
mov
mov
cmp
jne
movl
mov
xor
add
jmp
lea
mov
mov
sub
mov
mov
mov
mov
movl
mov
movl
mov
xor
add
mov
jmp
lds
lea
jns
jbe
lret
mov
es
movsb
clc
xor
cmp
jp
lods
jl
fwait
or
adc
stos
cmpsb
xchg
dec
xor
incb
loope
data16
cmpsl
pop
push
cmpb
mov
fisttps
jl
stos
shrb
aaa
cmp
test
cmp
out
push
int3
or
mov
and
sub
pop
es
ficompl
inc
add
mov
cmp
les
pop
xor
ror
cmp
movsl
push
repz
mov
popl
stc
lods
daa
sarb
movsb
daa
pop
scas
or
sti
mov
int
inc
mov
pop
xchg
xchg
and
mov
stos
or
sub
mov
dec
out
repnz
adc
std
cmp
add
or
lea
jecxz
sbb
dec
insl
test
aaa
into
push
dec
loope
popl
repnz
movsl
cmp
call
icebp
jmp
dec
out
ret
push
adc
sti
popa
adc
fsubs
jg
lcall
fsts
orl
lock
jne
jae
shlb
fwait
mov
xchg
popa
lds
movsl
add
dec
sbb
in
in
call
push
sbb
dec
rcrl
mov
inc
sahf
shll
adc
add
inc
jae
xchg
push
loop
xor
jne
orl
test
pop
aad
repnz
nop
mov
in
inc
leave
aad
jo
and
idivb
xchg
pop
adc
les
jns
fwait
or
nop
jge
cli
pop
repz
loop
jno
jno
pop
jae
pminub
or
xchg
dec
icebp
cmp
repz
mov
call
push
rorl
jb
fdivrp
popa
sbb
sbb
sbbl
mov
sti
out
pop
addl
iret
test
lea
jnp
andb
cs
xor
and
dec
push
and
mov
mov
jp
popf
mov
shlb
dec
jbe
popa
sub
movsb
and
pop
std
dec
lret
imul
negl
ss
jge
xchg
push
and
lds
insb
mov
jl
outsb
xchg
iret
cmp
jl
icebp
scas
or
std
inc
or
mov
mov
lea
dec
adc
xlat
idiv
outsl
lahf
fs
mov
and
push
out
push
nop
outsl
cmp
cmp
arpl
sub
or
loope
rcrl
xor
les
add
inc
movl
in
xchg
mov
pop
cmp
lods
sbbl
mov
test
dec
pusha
mov
adc
cmp
push
cmpsb
imul
mov
iret
pop
xor
and
icebp
gs
jno
jg
std
call
xchg
mov
and
mov
mov
loop
fcomps
and
dec
sbb
movsl
sub
and
stos
mov
adc
xorb
xor
xchg
pusha
test
push
add
mov
cmc
lds
popl
push
or
andb
jbe
push
loopne
xor
push
repnz
mov
in
add
cmp
nop
cs
mov
insl
in
pop
test
shl
fimuls
in
dec
xchg
and
rorb
xchg
jae
mov
jno
es
sbb
int3
rolb
jb
adc
out
push
cmp
and
inc
inc
xchg
shll
push
inc
shlb
cmp
add
push
mov
sbb
je
je
pop
adc
dec
and
and
inc
xchg
mov
inc
int
pop
insl
cmp
xchg
call
pop
sub
pushf
ficompl
std
push
lock
ja
or
mov
mov
mov
mov
dec
cld
push
inc
cwtl
sub
jbe
cmpl
outsb
xchg
inc
or
inc
mov
fcmovb
sbb
push
es
mov
lea
ret
mov
pop
out
xor
mov
mov
add
mov
insb
sub
jns
cmpb
push
subb
dec
nop
and
shlb
ret
in
popa
or
sub
or
dec
aaa
xor
sbb
adc
gs
mov
lahf
pop
dec
xor
xchg
loope
iret
decl
mov
shrl
add
sbb
pop
xorl
pop
inc
jo
cmp
push
mov
mov
push
pop
or
lods
mov
cmp
loop
mov
arpl
dec
pop
pop
mov
inc
pusha
adc
xlat
mov
loope
icebp
pop
mov
fildll
jl
ljmp
cmp
inc
mov
mov
dec
dec
addb
mov
cmp
mov
dec
dec
shlb
or
in
jmp
out
inc
mov
jno
je
pusha
mov
xor
iret
movsl
xor
lcall
push
stos
call
xchg
ret
jl
mov
out
aad
cmp
dec
xchg
iret
mov
ds
dec
mov
fnstenv
iret
mov
xchg
fldpi
loope
int
ret
outsl
sti
and
in
cmc
faddl
imul
sub
test
ret
push
sahf
inc
xchg
sub
ljmp
nop
xchg
lcall
ds
jmp
fisttps
add
pop
push
push
hlt
add
scas
sbb
pop
xor
rcr
aaa
or
int
pop
daa
jae
mov
inc
into
inc
insb
mov
scas
lret
and
mov
mov
mov
stos
pusha
jns
or
je
xor
and
mov
into
cmpsl
cs
pop
sbb
int3
add
sub
enter
out
mov
and
push
dec
dec
inc
lea
fisubl
jl
push
mov
das
push
and
cs
int
dec
adc
or
popf
add
push
push
std
adc
and
stc
notb
enter
repnz
sub
push
cmp
fs
cmp
pop
lods
jle
adc
scas
mov
mov
in
in
mov
mov
xor
cli
cltd
scas
imul
dec
test
xor
adc
sbb
and
rcll
mov
lods
rorl
pop
sbb
sub
adc
xlat
mov
xor
mov
into
dec
ret
xchg
fstps
mov
rol
enter
xchg
ss
in
in
int3
sti
pop
je
fiaddl
jno
neg
jge
mov
mov
sub
outsb
aad
xchg
push
push
test
mov
sub
inc
push
and
fidivrl
ds
repnz
jbe
outsb
sti
xor
mov
movsl
in
xchg
out
jbe
shrl
sbb
test
jns
add
js
sub
push
inc
xor
mov
mov
dec
mov
jg
push
mov
outsb
mov
cli
xchg
and
fmul
in
push
int3
pop
push
push
sbb
adc
jns
jne
dec
insb
ja
add
push
ss
mov
or
pop
pop
cmp
mov
movsb
xor
add
push
cli
mov
ret
cmp
ret
outsb
dec
insb
inc
add
push
jae
aam
push
loop
pop
in
mov
mov
cmovp
out
int
cmp
jg
sub
or
add
stos
sahf
lods
mov
mov
in
arpl
sahf
sbb
iretw
addr16
mov
inc
aas
pusha
xor
out
xchg
outsb
out
dec
pop
cltd
mov
and
test
stos
stc
cmc
repnz
lcall
ss
scas
aas
sbb
cli
mov
mov
push
out
jno
sbb
mov
xchg
lahf
scas
adc
cli
subb
lret
xor
sub
add
jb
lcall
dec
pop
inc
push
mov
cltd
and
fldcw
faddl
scas
insb
and
test
fs
div
ss
sub
pop
stc
call
in
gs
aas
decl
add
xor
into
fwait
mov
pop
lds
dec
pop
pushf
subl
pop
sbb
cld
ljmp
sarl
std
faddl
iret
sbb
into
test
pop
jp
push
das
mov
cs
scas
jmp
loop
mov
fmuls
movsb
addr16
mov
or
jbe
hlt
or
push
in
sub
fisubl
and
push
and
add
or
sub
lret
movsb
mov
push
sarb
lock
out
dec
dec
cli
sub
mov
or
int
fildl
popf
mov
add
xchg
insb
pusha
mov
sahf
in
xor
movsl
push
mov
xorl
es
xchg
adc
rorb
dec
cwtl
push
std
pop
and
test
cwtl
fmull
insb
pop
push
cld
aam
pop
mov
outsl
adc
lea
ret
xchg
in
push
jge
pusha
test
mov
call
xchg
les
insb
push
fcoms
leave
or
in
mov
push
faddl
fimuls
test
stos
movsl
push
sti
inc
sbb
insb
pusha
mov
lods
mov
cmp
ljmp
dec
xchg
xchg
push
adcl
xchg
aas
arpl
xlat
push
lret
scas
ljmp
or
es
mov
mov
scas
xchg
mov
fs
repnz
jns
mov
adc
lret
int
push
and
push
add
out
push
cmpb
dec
stc
je
addr16
jg
fstpt
lret
push
movsb
push
push
outsb
sub
inc
iret
jbe
cmp
fidivl
mov
daa
insb
adc
mov
mov
inc
mov
xchg
pop
and
push
dec
push
insb
or
into
xchg
cmc
adc
jge
inc
pop
jne
sub
mov
clc
ret
adc
push
jl
movsb
sbb
pusha
mov
repz
cltd
lret
fwait
mov
incl
xchg
or
add
orb
mov
outsl
add
and
push
sbb
test
call
scas
shl
imull
int3
cli
call
in
pop
pushf
lret
add
jbe
cmpsl
imul
leave
mov
popa
or
out
hlt
mov
push
sbb
and
mov
jmp
push
dec
pop
icebp
adc
shll
imul
or
add
inc
mov
mov
inc
dec
and
bound
ficomps
cli
push
mov
aam
xchg
fcompl
repnz
test
push
pop
sub
loopne
ljmp
sub
addr16
jge
inc
int3
jno
sbb
sbb
aas
add
lods
loope
mov
xchg
sub
popa
fs
and
jl
lcall
repz
sbb
jmp
xor
repnz
push
xorb
jns
inc
push
inc
mov
pop
shrl
pusha
cmovb
adc
cmp
jmp
frstpm(287
shlb
xor
add
xor
ds
cmp
adc
in
lods
jg
loopne
lret
out
in
and
sbb
mov
cmpsl
inc
bound
ja
inc
gs
ss
pushf
push
jle
cltd
xchg
fnstenv
cld
loopne
cltd
mov
fstl
pop
cmp
stos
jg
stos
mov
mov
lea
jns
jo
jge
push
mov
jle
xchg
js
inc
jp
aaa
pushl
jp
pushf
sti
pand
mov
mov
hlt
insb
cmp
enter
pop
mov
lret
xor
arpl
fidivrs
outsl
mov
rol
fnstcw
xor
cmp
mov
imul
inc
stos
lret
mov
dec
inc
insb
sbbb
xor
adc
sahf
sbb
pop
xor
jecxz,pn
test
enter
xchg
and
inc
adc
xchg
jmp
es
sbb
add
shrb
xchg
sbb
pushf
cmpsl
jo
fld
xchg
in
dec
scas
jb
gs
push
pusha
pop
xor
loop
sbb
hlt
adc
insl
repz
sahf
mov
imul
and
sub
sbb
cwtl
je
push
jle
fs
mov
pop
pop
xor
in
inc
loope
insb
or
out
xchg
add
cmp
mov
sahf
adc
in
jbe
fucomp
ljmp
arpl
imul
out
mov
sub
sub
mov
mov
int3
loop
in
or
push
cmpsl
xchg
int
data16
stc
loop
into
pop
push
imul
xor
mov
xor
lea
and
xchg
jp
pop
xchg
sar
sahf
sahf
jecxz
jo
mov
push
pop
fldcw
sub
or
shlb
adc
jmp
in
cmp
mov
cmpsl
adcb
sub
sub
leave
dec
ja
xchg
xlat
sbb
mov
inc
inc
in
or
adc
ret
ljmp
adc
movsl
dec
popf
inc
sbb
inc
jl
test
or
sub
sahf
sub
adc
les
icebp
mov
mov
pusha
pop
inc
or
xchg
pop
push
mov
fdivl
int
dec
push
in
leave
push
repz
or
test
and
repnz
push
insb
rcrb
das
or
addr16
mov
lahf
push
push
mov
daa
pop
inc
ret
pop
repz
mov
jp
cs
push
mov
cmpsb
xor
out
loop
lahf
adc
dec
outsb
pusha
lods
in
sbb
pop
inc
popf
xchg
cmc
and
pop
notb
pop
fstl
dec
jns
push
or
cmpsb
xor
adc
or
repz
or
adc
sahf
iret
inc
orl
add
sahf
mov
hlt
fsts
stos
js
in
ss
cmp
into
add
scas
stos
dec
cmc
mov
mov
and
mov
add
dec
pop
leave
inc
movsl
xchg
mov
add
mov
nop
fcompl
xchg
xchg
and
lds
inc
cld
jmp
mov
push
pop
sub
mov
mov
jp
xor
loopne
push
mov
push
push
movsl
lods
int3
and
das
and
adc
gs
popf
dec
inc
mov
outsb
inc
inc
pop
lret
ljmp
xchg
inc
pusha
push
bswap
loopne
pushf
pop
out
cli
cmp
ja
je
out
and
lret
rolb
das
js
or
sbb
xor
dec
jno
bound
pusha
mov
and
push
jb
popf
inc
out
imul
and
pop
sub
push
mov
mov
ficoml
xchg
int3
out
jle
imul
mov
jmp
push
roll
mov
mov
sub
xchg
hlt
adc
hlt
mov
stos
jno
movsb
lods
push
add
jge
pop
scas
xchg
mov
mov
movsb
sub
cmp
pusha
popfw
jecxz
std
push
cwtl
in
xchg
outsl
cwtl
and
insb
and
into
push
xor
mov
xchg
lods
xchg
xor
rcrl
xchg
dec
sub
or
jmp
inc
xor
insl
mov
ljmp
icebp
cmpsb
arpl
mov
arpl
push
jmp
jae
ljmp
es
inc
jo
pusha
sbb
test
stos
ss
sub
stos
lods
xchg
arpl
and
or
cmc
cs
std
mov
mov
or
bound
and
cmp
mov
mov
in
jp
and
or
out
cmp
mov
or
std
pusha
lea
mov
ja
pop
pusha
dec
add
or
or
call
pop
dec
aas
ss
imul
xchg
out
xchg
push
imul
call
data16
fisubrl
inc
fwait
jg
aad
mov
xlat
cmpsb
push
cli
leave
sub
or
lds
icebp
leave
clc
rcr
sub
push
outsl
add
pcmpeqd
test
xor
inc
lahf
and
addr16
inc
jnp
jle
mov
enter
sbb
add
out
sub
sarb
sbb
filds
xor
pop
xor
xchg
sub
jns
daa
jno
mov
subb
sbb
lock
adc
lock
adc
outsb
js
inc
cwtl
jne
cmpl
mov
sbb
stos
js
mov
hlt
push
daa
mov
cli
push
sbb
pop
jp
test
out
outsb
loope
dec
mov
lea
sarb
pop
dec
cltd
cmp
push
pop
mov
jbe
sbb
cwtl
loop
adc
sub
jo
fwait
and
mov
push
mov
xor
out
xor
movsl
dec
loopne
add
roll
imul
pop
lds
jo
xchg
stos
adc
lods
dec
jge
outsb
ds
dec
mov
dec
aad
pop
das
cmp
in
lcall
push
loope
inc
push
test
cmpsl
loopne
jno
mov
pusha
jg
lods
mov
test
sbb
xlat
fwait
insb
out
jge
jnp
inc
loop
mov
jo
int3
ja
xlat
std
mov
in
out
or
push
shll
jnp
fwait
push
xor
and
cli
enter
mov
cmc
inc
mov
fwait
and
ret
push
or
aas
int
xlat
jns
cmp
sub
sub
fnstenv
sahf
enter
add
mov
ja
inc
fbstp
lcall
stos
inc
xchg
mov
popf
xor
xchg
and
fdivrs
xchg
lock
outsb
or
int
repz
sub
aas
pop
adc
faddl
jnp
xorl
push
into
lret
rcll
xchg
or
jb
dec
push
xor
sub
jp
or
pushf
fsubrl
xchg
jl
lods
jle
sub
xchg
add
sub
inc
iret
or
sub
sub
mulb
es
divb
sub
jbe,pt
dec
addl
push
ficomps
push
cmp
fwait
and
sbb
xchg
jbe
jge
xor
lahf
pop
jmp
or
aas
rorb
jno
fsub
testl
adc
lcall
enter
sub
ret
lret
scas
into
js
jns
addl
insb
pop
ds
pop
rorl
and
mov
mov
pop
and
mov
lahf
mov
lahf
js
sti
and
popa
lcall
adc
in
pop
pop
inc
loop
or
jmp
into
aas
and
test
jecxz
fnclex
into
fsin
mov
enter
sahf
pop
out
hlt
sbb
test
push
xchg
les
loop
int3
pop
push
cmpsl
mov
and
add
or
mov
dec
movsl
jecxz
pop
mov
aad
xor
sbb
ds
test
test
xchg
pop
rclb
xor
xchg
outsl
in
lret
gs
ljmp
ljmp
or
sarb
cli
inc
lahf
or
xor
xchg
inc
das
dec
hlt
adc
loop
jae
jle
adc
mov
jp
rolb
shlb
xchg
xchg
push
xchg
lds
mov
sbb
rorb
add
sbb
cmp
jns
push
dec
xor
or
add
mov
nop
movsb
insl
jo
aam
lret
push
filds
mov
pop
lods
jb
cld
std
dec
bound
orl
test
xchg
and
cmc
imul
in
adc
inc
push
push
subl
dec
imul
push
insl
pop
out
jo
cmp
sub
sub
sbb
stos
adc
push
lret
rol
jmp
aam
mov
xchg
inc
pop
xlat
mov
shll
pop
sub
xchg
int3
test
rcll
sbb
bound
and
call
and
jmp
test
sbb
pop
dec
mov
push
loop
dec
adc
imul
lcall
lea
lds
dec
stos
data16
add
or
lahf
das
or
add
sub
add
push
adc
daa
movsl
pusha
xchg
cwtl
mov
push
xor
push
xchg
fimuls
xchg
movsl
pop
xor
lahf
xor
sub
push
xchg
mov
sahf
mov
inc
aaa
sub
and
pushf
aad
add
mov
mov
push
jmp
xor
sub
sub
js
shrl
nop
pop
cmc
xor
mov
mov
sub
in
dec
fwait
call
fwait
lret
stc
popa
test
add
sub
push
cmp
add
cmp
insl
test
xor
xchg
sbb
xchg
aas
mov
sbb
push
jle
xchg
inc
lods
fsubr
div
cwtl
bound
loope
outsb
xor
test
clc
negl
sub
pop
hlt
mov
push
lds
scas
dec
scas
bnd
sbb
loop
psraw
andl
xchg
jnp
cld
xchg
pushf
sub
inc
dec
add
adc
dec
lret
cli
sbb
sub
xchg
nop
mov
insl
mov
add
cmp
mov
je
ljmp
stc
pop
inc
bound
aas
cmp
fyl2x
adc
adc
mov
outsl
and
cmp
xor
or
adc
mov
push
test
add
dec
shll
imul
push
popf
lds
mov
pop
mov
jnp
flds
lock
push
in
sbb
lret
jl
les
mov
sti
outsb
cld
mov
out
cmpsl
push
cmp
negb
jne
and
into
popa
fistl
push
popa
sbb
hlt
hlt
mov
stos
les
inc
clc
mov
ds
xchg
roll
hlt
jmp
xchg
cmp
outsl
or
call
stos
adc
ret
cwtl
jle
das
mov
mov
ja
adc
scas
lea
pop
sub
rcrb
bound
test
fsub
push
sub
sarl
pop
insl
int
bound
or
mov
test
dec
or
xchg
lods
call
loope
adc
pop
loop
jge
ja
jbe
sbb
sbb
iret
inc
std
mov
jmp
test
mov
jae
out
enter
jbe
ss
inc
sub
xchg
xchg
out
enter
call
out
sti
or
adc
mov
mov
push
jbe
sub
jmp
and
pushf
xor
mov
test
dec
ljmp
loopne
push
test
rcrl
xchg
and
imul
lods
adc
cmpsl
xor
popf
jmp
popf
mov
xor
push
jmp
push
call
sub
mov
mov
data16
into
pushf
xor
int3
fs
add
frstor
cmpsb
repz
inc
ret
add
test
push
xchg
add
addr16
lods
dec
sub
mov
sbb
sahf
cvtdq2ps
fsubs
rcll
dec
jb
dec
xor
sbb
cmp
add
not
arpl
stos
sahf
xor
call
fstpl
dec
and
insb
out
pop
xor
adc
outsb
jns
push
adc
and
jo
out
lock
adc
or
daa
cmp
jl
jmp
in
fnstenv
gs
inc
mov
rcr
shlb
icebp
test
mov
inc
pop
hlt
jge
jge
xor
js
fimull
pop
lret
push
mov
xchg
mov
xchg
push
adc
inc
inc
add
push
arpl
adc
popf
cwtl
add
sbb
inc
ss
push
divb
imul
push
in
pop
mov
inc
cmp
fs
les
fsubrs
daa
clc
dec
in
mov
stc
in
jne
jp
sub
hlt
enter
loop
push
sub
pushf
adc
and
xchg
xchg
inc
lea
jne
mov
jns
jmp
lods
cmp
sbb
mov
mov
leave
adc
sbb
scas
popf
into
adc
pop
jae
cmpsb
xorl
cmc
enter
sbb
mov
stos
aad
mov
xchg
or
fbstp
sbb
insl
cmp
mov
cmp
push
das
mov
sub
fwait
imul
or
adc
mov
jp
addr16
or
movsb
jne
cmp
add
aam
jne
pop
lret
jecxz
cmp
out
shrb
mov
pop
pop
ror
fnstenv
movsb
push
cmc
adc
das
mov
outsb
add
add
das
aam
pop
packsswb
rcrl
test
out
ljmp
inc
ret
fwait
sub
aad
mov
pop
jo
jle
mov
sub
mov
out
and
pop
shl
roll
leave
subb
mov
add
mov
and
inc
fwait
mov
cmp
out
inc
xlat
push
cmc
adc
sub
lock
dec
mov
mov
add
movsb
mov
mov
inc
and
insl
adcb
jge
adc
inc
cs
bound
mov
mov
and
pop
insl
xor
aam
push
mov
xchg
dec
mov
out
inc
mov
mov
dec
sub
pop
rcrl
pop
lock
xor
add
loope
movsl
sarl
test
push
imul
jl
jmp
loope
lret
fldenv
push
jne
and
sub
lret
inc
sahf
pop
mov
mov
scas
arpl
idivb
jb
roll
dec
cmp
scas
xor
cmp
in
xchg
xchg
lea
mov
sbb
ret
mul
or
into
or
stos
inc
pop
xor
adc
inc
lock
mov
sar
mov
cmc
adc
lds
or
mov
imul
es
insb
mov
mov
sub
sbb
pop
adc
popa
dec
xor
push
jmp
adc
mov
mov
mov
fidivs
push
call
mov
sub
test
mov
bound
roll
lods
testl
cmc
mov
mov
fstl
mov
mov
stos
cld
and
ss
cmp
adc
iret
jno
je
cld
scas
idiv
ret
pop
outsl
in
sbb
xchg
cmp
pusha
dec
cmc
xchg
inc
jecxz
inc
inc
mov
scas
pop
rorb
push
addb
jns
rcll
push
into
add
test
push
icebp
div
mov
mov
sbb
lods
out
xor
or
or
lret
jb
pop
je
cmp
jae
out
out
xor
sbb
fsts
sub
lods
repz
lods
or
add
les
pop
rcrb
lret
and
dec
or
cmp
jp
loopne
faddl
push
loopne
jns
fildll
pop
jo
mov
push
fistpll
add
push
add
mov
stos
push
inc
inc
and
mov
loop
xor
rcr
jnp
jle
std
fmuls
jle
adc
popa
mov
jo
les
jnp
pop
mov
push
cld
lcall
loope
push
add
jns
mov
jmp
divb
push
add
das
iret
outsb
sbb
cli
test
adc
mov
xchg
pusha
lds
sbb
sbb
jp
mov
leave
cli
adc
jns
or
jmp
int3
inc
in
push
pop
out
outsl
cmc
sub
movsb
adc
mov
inc
push
stc
dec
cmp
sahf
push
cs
mov
sbb
out
or
ljmp
addl
mov
or
mov
subb
leave
pop
xchg
jne
mov
xchg
mov
dec
xor
int
add
xor
mov
inc
add
gs
push
fdivr
xor
cmp
movsl
mov
pop
rorb
test
lret
add
in
mov
and
xor
subb
rcr
jle
jno
add
or
push
or
inc
outsb
cmp
push
mov
push
add
xlat
icebp
mov
hlt
adc
push
hlt
stos
xchg
jp
push
jmp
test
nop
sub
stos
mov
cmp
push
push
aas
jo
jo
push
sbb
adc
int3
mov
js
mov
rdmsr
rcl
and
sbb
dec
pop
lods
pop
filds
in
pop
daa
mov
adc
pushf
loope
push
cmpsb
jnp
in
cltd
ret
in
jbe
aaa
pop
add
iret
nop
cmp
les
mov
mov
push
loopne
in
out
sub
loop
fwait
push
stos
mov
lcall
fsubs
push
xchg
adc
fwait
xor
cmc
cmovne
inc
and
mov
sbb
jns
aam
aad
repnz
mov
mov
leave
mov
das
shll
ret
inc
adc
sbb
arpl
out
push
fs
loopne
fstpt
lods
push
arpl
stc
jnp
xor
xchg
sub
cltd
jb
jp
out
or
add
adc
push
mov
pop
imul
cli
cmp
out
lea
xchg
jl
shl
pop
leave
lods
push
out
and
pop
in
fs
imul
ret
out
sar
xchg
addps
test
inc
add
test
xorb
fincstp
inc
adc
inc
xchg
mov
sarl
push
imul
cmc
arpl
fwait
cwtl
repz
sub
cmpsb
loop
icebp
aam
dec
adc
mov
dec
add
enter
push
mov
test
mov
jno
or
in
and
jmp
pop
xor
movsl
cwtl
push
lods
mov
out
lahf
mov
jnp
xchg
mov
movsl
ja
push
dec
aam
fisttps
push
and
mov
inc
insb
arpl
mov
jns
test
xor
cmp
dec
jg
std
and
mov
xor
cmp
push
sbb
bound
out
lock
in
dec
lods
sarl
pop
xor
mov
loop
mov
dec
xchg
daa
lahf
rcrl
xor
popf
push
inc
data16
push
in
jo
repnz
mov
jo
jns
cmp
jg
je
leave
pop
or
jmp
ljmp
push
ds
sahf
iret
out
pop
dec
adc
sub
xor
push
insb
inc
adc
mov
add
sbb
out
test
xor
push
sub
js
mov
jbe
xor
ficompl
rolb
scas
mov
out
push
mov
aaa
and
int3
das
mov
repnz
fisubrl
add
repnz
in
dec
add
std
lock
lds
fcomps
cmc
lods
arpl
test
in
lock
arpl
add
dec
or
or
pop
inc
loop
xor
adc
sub
cwtl
add
cmp
std
cmpsl
xchg
jo
fmull
add
mov
movl
movl
mov
mov
xor
add
cmp
je
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
ja
jmp
iret
xor
addl
adc
jle
or
pop
jp
xchg
sbb
jns
sbb
rol
clc
cmp
rorb
push
xchg
loop
mov
int3
or
mov
xchg
sub
out
outsl
repnz
jle
jmp
cwtl
cwtl
pop
add
adc
cmp
sub
push
push
or
xchg
stc
mov
or
pop
sbb
add
push
stc
fstl
cltd
das
das
stc
arpl
aaa
xchg
cmpsb
cld
shrb
xchg
xchg
lret
xor
cmp
xor
int3
das
cmp
lahf
xchg
jns
add
ret
mov
nop
inc
dec
sub
jmp
xchg
and
pop
jle
inc
push
jnp
add
movsb
mov
cwtl
ret
mov
insl
xor
outsl
mov
les
jg
pushf
jnp
dec
iret
sub
jmp
cmp
icebp
stos
add
jae
enter
sti
mov
xchg
es
xchg
jmp
inc
testl
js
insb
shll
int3
out
cmp
into
dec
mov
cmp
mov
push
pop
xorl
mov
sarl
aas
sbb
mov
push
sub
jo
lods
push
int
mov
aad
in
scas
imul
jmp
and
ret
sub
fs
cmp
or
xchg
ja
movsl
insl
sub
decb
rclb
lcall
jne
je
jo
popf
ret
jmp
mov
test
lcall
adc
or
jno
pop
adc
hlt
scas
dec
inc
mov
add
xchg
mov
push
test
mov
or
lods
push
in
popa
jnp
xor
je
outsl
ret
mov
mov
or
cmp
fchs
sub
push
sarb
fstl
scas
fdivrp
and
mov
ds
test
push
adc
fcom
xor
cmp
das
mov
mov
aam
dec
fbld
dec
cmp
lahf
sub
mov
cmp
nop
loope
inc
mov
inc
inc
rorb
pop
xchg
sahf
out
mov
xor
clc
les
outsl
push
mov
mov
movsb
jb
test
adc
adc
in
aam
pop
ds
js
pusha
xchg
push
or
std
mov
cmc
xor
sbb
faddl
dec
das
lret
cmp
shll
fsubr
add
add
xor
cmp
adc
jo
xchg
inc
dec
dec
pop
in
in
xchg
je
lret
adc
and
jecxz
nop
mov
jmp
fucom
inc
push
arpl
adc
push
jbe
push
fs
jmp
movsb
jne
ja
mov
mov
push
shlb
dec
icebp
and
mov
lock
add
mov
pusha
lods
mov
jns
mov
xor
lock
inc
loop
xchg
add
xor
cmp
loopne
test
inc
cmc
pop
jo
test
clc
sbb
xchg
popa
lea
insb
adc
jle
mov
ss
mov
cmpsl
cmpsl
sahf
mov
inc
pop
cltd
ret
scas
scas
mov
sub
push
push
or
fsubrl
xchg
cmpsl
movntq
and
int
insl
mov
cmp
jo
insl
mov
fmul
pop
out
lods
xchg
sbb
adc
idivl
popf
adc
mov
mov
push
sub
add
inc
mov
push
adc
adc
cmp
scas
xor
and
addb
fs
test
cld
aam
mov
push
mov
xlat
cmp
add
fwait
loopne
xor
shlb
out
jecxz
jne
popf
jp
leave
test
subl
cltd
xor
andb
ffreep
mov
xchg
das
jae
ljmp
lock
das
enter
seto
or
sub
in
ds
jno
test
mov
lcall
das
cltd
inc
mov
xor
cmc
into
or
xor
mov
mov
data16
xor
jno
pop
pop
outsb
ljmp
insb
inc
jmp
or
in
das
lods
and
call
jo
dec
xorb
inc
fistpl
loope
outsb
aad
pop
lods
mov
or
mov
sub
fdivrl
mov
pop
mov
call
xor
aam
pop
loop
jo
add
xorl
std
sbb
adc
mov
negl
or
jns
sub
push
pop
scas
cmc
iret
mov
lods
icebp
aas
pop
inc
push
pop
sbb
xchg
cmp
fwait
lret
add
cltd
shll
mov
xchg
aam
lods
cltd
or
jecxz
push
arpl
dec
xor
ret
pop
leave
subb
jl
inc
decl
lods
fildll
mov
loop
adc
xchg
cs
mov
adc
pop
rclb
mov
lea
cmp
adc
push
xchg
jmp
cmp
loop
xor
cmp
gs
xchg
inc
test
push
pushf
xchg
cmp
movsb
mov
mov
rol
add
or
push
pop
iret
dec
ds
inc
cmpsb
in
lock
jno
sbb
mov
stos
shl
scas
jb
xor
lods
std
imul
inc
push
mov
mov
pop
cmc
imul
in
fsubl
sub
jp
imul
cltd
psrld
sub
lock
add
mov
xchg
cmp
mov
mov
cltd
lret
pop
movsl
sbb
or
mov
jl
xor
mov
lahf
jp
test
jg
arpl
fsubr
xor
fcmovu
std
adc
push
inc
sub
mov
std
push
sbb
in
outsl
test
dec
pop
and
dec
pusha
in
and
leave
iret
dec
icebp
mov
lds
cld
pusha
adc
popf
pop
mov
cmp
ss
lret
push
movsl
push
arpl
cmp
pop
xchg
jp
xor
out
cmp
pop
add
enter
adc
faddl
lods
stc
add
mov
jmp
push
and
jg
into
ljmp
outsl
adc
inc
imul
pop
mov
mov
add
fldcw
jge
dec
lods
or
movsb
fcmovnu
inc
adc
je
xchg
jnp
xchg
incl
mov
arpl
nop
adc
adc
aad
mov
mov
xor
test
sbb
outsb
fs
sub
in
sbb
pusha
scas
mov
in
mov
add
sub
ss
xchg
es
shll
lcall
stos
mov
stc
pop
add
lcall
mov
sub
adc
idivb
frstor
pusha
fcmovnbe
hlt
test
push
pop
or
dec
lcall
in
jmp
hlt
call
aaa
daa
jb
mov
and
mov
gs
je
cwtl
std
push
pop
dec
mov
sbb
mov
lods
cwtl
adc
inc
mov
mov
mov
nop
std
fisubl
mov
jo
sbbl
ljmp
in
xchg
push
lock
or
push
leave
mov
jecxz
call
push
popf
test
jo
das
mov
daa
xchg
clc
pop
inc
jecxz
movsb
mov
xor
adc
scas
mov
cs
int3
cwtl
add
cli
xchg
aam
fcmovbe
xchg
sbb
sarl
mov
add
pop
lcall
sub
in
mov
sar
cwtl
fcoml
mov
mov
xchg
cmp
jno
push
pop
push
into
push
xor
aam
mov
scas
sub
xor
fs
dec
inc
popf
sub
imul
out
ljmp
insb
xor
orb
shrl
das
inc
pop
inc
sub
aas
mov
cmp
cmpsb
int3
jge
inc
cwtl
addr16
jb
cmc
xor
sti
out
stos
arpl
sub
inc
rcr
bound
mov
or
shll
iret
rolw
cs
movsb
inc
mov
mov
mov
test
addb
test
push
sbb
sbb
add
lahf
xchg
jge
cli
int3
stos
mov
dec
jbe
mov
pusha
push
mov
sub
popa
mov
jnp
jp
jl
sti
pop
xchg
pushf
xchg
sub
lcall
leave
pop
into
fldcw
cmc
and
mov
fildl
arpl
mov
imul
fs
and
rcll
outsl
cmp
sbb
mov
fadds
ds
pop
mov
stos
out
mov
aaa
cmp
fwait
xor
test
jno
xchg
stc
in
stos
ljmp
cld
dec
xor
mov
out
pop
jp
or
cmp
jnp
jbe
movsb
aad
add
add
or
xchg
aad
stos
in
cmpsl
sarl
mov
aaa
sbb
push
out
jmp
jmp
fs
out
fisubs
test
cmc
adcb
cmc
sbb
into
dec
lods
jo
push
mov
mov
mov
and
sahf
sbb
inc
jbe
or
jb
repnz
and
fsts
insl
or
cmp
out
out
gs
je
sbb
cmp
mov
ljmp
push
leave
cmpsb
dec
cmpb
loopne
stos
mov
pop
pop
imul
cmpsl
xor
jo
test
mov
sub
mov
mov
inc
push
adc
adc
cmpb
sub
inc
btrl
mov
ret
add
adc
pop
pop
subl
xor
pusha
shlb
subb
sub
test
stos
pop
mov
and
mov
ret
mov
jg
jp
jbe
sbb
arpl
sbb
aas
xchg
xlat
inc
xchg
sub
cmp
add
out
lcall
lahf
popf
xchg
xchg
add
or
sub
xchg
add
pop
stos
push
insl
adc
cwtl
adc
arpl
rol
test
and
cmp
cltd
xlat
add
cmc
loope
xchg
inc
sti
sbb
ds
fs
ret
dec
fdivs
sbb
daa
lahf
pop
popa
fadds
inc
jae
jns
jo
mov
fadd
test
mov
and
popa
shr
pop
jnp
cwtl
test
out
lds
int
push
in
lods
and
data16
or
pop
mov
pop
cmp
xchg
mov
mov
sbb
inc
nop
push
fs
jg
mov
ds
icebp
loope
hlt
xchg
push
daa
or
adc
jb
popf
xor
sbb
out
mov
xchg
mov
in
sbb
push
cmpl
mov
ret
or
arpl
std
sbb
jne
sbbl
test
or
dec
out
das
jo
sbb
sti
xorl
lock
lret
fscale
shl
incl
mov
and
mov
inc
pop
lods
shl
push
add
sub
mov
shl
dec
adc
dec
lcall
mov
outsb
out
mov
and
dec
inc
in
sbb
imul
fsubl
shll
jb
push
dec
inc
call
mov
ret
loopne
les
call
pop
push
mov
inc
in
pop
dec
pop
rorb
ret
int3
sub
imul
iret
jp
adc
sub
mov
js
xchg
lea
pusha
stc
inc
int3
xchg
mov
out
and
cmp
cwtl
mov
pop
mov
sahf
jg
inc
bound
mov
enter
ljmp
sbb
cmpsb
xorb
cmp
dec
sub
xor
mov
and
outsl
jne
adc
pop
pop
push
fsts
mov
cmpb
xor
mov
leave
aad
or
xchg
cmp
and
dec
sub
movsl
cmc
and
dec
mov
sub
adc
imul
lods
or
aas
pop
pop
or
cmp
stos
mov
jbe
dec
jp
js
je
lret
mov
rcrl
fdivrs
fisubs
loope
stc
cmp
mov
xchg
movsl
lock
rcrb
mov
adc
cmpsb
daa
imul
mov
and
xchg
cmp
push
xchg
cmpsb
sub
test
lds
cmpsb
jmp
xorb
or
iret
scas
adc
daa
mov
js
iret
pop
add
xchg
jecxz
dec
pusha
scas
inc
sub
mov
lret
sub
push
and
pop
movsl
and
cli
movsb
xlat
dec
scas
pop
mov
xchg
out
mov
mov
into
cmpsb
add
lret
push
lahf
add
dec
roll
cmc
fwait
cwtl
mov
add
cmp
vmovdqa
lret
std
inc
xchg
xchg
rcr
pop
inc
mov
dec
in
icebp
add
sbb
add
popa
les
pop
pop
sub
rolb
xor
enter
cmpsl
adcb
push
or
lret
ds
stos
outsb
sbb
popf
hlt
pushf
xor
lods
add
mov
dec
cmp
pop
aad
scas
sbb
lret
popa
sub
push
jp
mov
adc
pop
notb
fimuls
push
scas
xchg
mov
inc
movsb
sub
pop
cmp
sbb
xor
test
loope
ss
xchg
pop
xor
fcoml
lahf
ret
xor
push
mov
lods
ret
cmp
cmp
adc
pushf
mov
xor
in
push
dec
jg
sub
ficompl
jo,pn
popl
leave
and
aam
loope
cmpb
test
cmp
mov
ss
mov
fcoms
sahf
cmp
addl
sub
sahf
test
repz
pop
or
or
inc
sbb
mov
rorl
push
mov
dec
jnp
mov
pop
rol
iret
aaa
inc
ret
jne
push
add
jle
frstor
stc
test
outsl
sub
call
inc
popf
movsl
xchg
inc
cld
sbb
nop
in
push
aam
lds
push
sub
xchg
dec
or
push
adcl
xchg
ljmp
mov
addr16
and
add
cmp
and
inc
and
jp
andb
ret
push
xor
clc
loope
and
je
mov
popf
mov
xor
dec
and
fists
push
push
push
jp
and
xchg
shrb
add
dec
inc
mov
subl
cld
sub
mov
push
shll
pop
pop
jbe
or
scas
xor
and
fsub
add
jns
or
or
scas
jle
jmp
test
sahf
xor
sti
mov
enter
std
scas
shr
xor
lods
shrb
dec
mov
push
push
bound
lret
lods
pop
push
adc
or
mov
dec
pushf
xorb
and
iret
push
inc
xchg
push
cmp
mov
fistl
jle
test
rorl
les
mov
cmpsb
adc
lods
push
adc
sti
ss
jl
stos
cmp
cmpsb
mov
xchg
hlt
int3
mov
push
push
in
fcompl
sbb
sbb
pushf
je
xchg
scas
mov
xor
out
add
xorb
mov
ret
mov
inc
jno
arpl
cmp
lea
pop
test
icebp
pusha
pop
rclb
mov
mov
push
xchg
ret
imul
jo
push
push
out
test
sub
xor
and
and
stc
ror
xor
sub
mov
add
pop
aaa
lcall
dec
frstor
mov
lret
pusha
pop
sub
jns
iret
pop
jmp
push
xor
dec
mov
mov
mov
out
pop
ss
cmp
sahf
mov
clc
test
mov
enter
fwait
in
cli
fdivrp
ss
push
xchg
xchg
xchg
into
fcomp
fsubrl
nop
popa
add
mov
dec
mov
nop
enter
out
add
sub
outsb
mov
bound
adc
xor
into
dec
and
lods
out
xchg
sbb
or
mov
mov
repz
and
push
and
and
fsubl
aaa
nop
push
scas
push
mov
cmp
xor
sahf
dec
mov
popf
stos
jbe
dec
or
lock
xchg
cmpsl
xchg
or
popa
add
mov
imul
in
jbe
pushl
jg
and
fidivs
imul
jae
shll
sub
pop
push
testl
xchg
ja
roll
nop
inc
fdivs
jecxz
int
pushf
das
xchg
xlat
push
add
sub
cmp
or
mov
mov
xor
jp
das
imul
cmp
fsubr
sub
inc
out
leave
movsl
push
cmp
mov
xchg
hlt
adc
in
enter
lea
and
mov
adc
std
mov
and
xchg
cmpsl
js
insb
loope
xchg
xor
das
aas
daa
test
mov
and
add
dec
adc
dec
adc
mov
lds
inc
pop
xchg
stos
dec
sub
lret
xor
into
ret
adc
movsl
mov
mov
pop
sub
dec
xchg
cmp
or
mov
cmp
nop
mov
lds
mov
imul
imul
ss
add
aas
scas
iret
fwait
dec
pop
lods
fcoml
je
test
sbb
mov
xchg
cmp
cli
mov
mov
pop
rcll
aas
xchg
repz
mov
sbb
cmovg
xchg
push
int
lret
pop
mov
dec
sub
sbb
loope
xchg
jmp
push
jle
pop
pusha
push
push
out
divl
mov
loop
cld
cwtl
test
sub
jmp
nop
sbb
in
sub
push
movsb
pop
jle
negb
sbb
sbb
movsl
push
sub
jb
xchg
sbb
dec
pusha
dec
ret
and
popa
sbb
incb
ja
adc
fstpt
adc
mov
lods
shrl
jg
inc
jecxz
shlb
pop
mov
sti
test
stos
loop
dec
fstl
cmp
adcb
repnz
add
pop
adcl
xchg
movsl
clc
pop
enter
jae
out
imul
or
call
mov
xchg
roll
or
mov
cli
in
mov
call
cwtl
xor
ds
mov
mov
stc
pusha
cmp
pushf
push
std
in
imull
xor
cld
dec
gs
lahf
jl
sbb
mov
insb
push
jle
cmp
inc
cs
adc
das
lods
pop
shlb
dec
pop
rolb
mov
or
pop
jb
add
push
jne
push
mov
xor
inc
stc
test
pusha
xchg
imul
lock
push
scas
sbb
push
lea
mov
cs
addr16
add
mov
scas
fidivrl
daa
sbb
jne
inc
rclb
dec
mov
cmpsb
clc
mov
inc
fisubl
mov
push
pop
pop
fbld
mov
loope
test
ss
hlt
imul
xor
lds
add
lods
and
pop
movsl
in
mov
aam
mov
or
int
xor
cmpb
iret
iret
mov
push
fstl
mov
xor
jge
xchg
loopne
pop
rcll
movsb
repnz
imul
out
mov
std
jnp
mov
add
sarl
fdivrs
and
and
push
push
or
in
aas
clc
cmc
ficoml
mov
adc
scas
gs
lret
lods
cmp
pop
mov
mov
sub
fiadds
jno
bound
mov
mov
xchg
push
test
inc
jnp
push
out
or
or
sbb
xor
dec
insb
notb
rcll
rcrb
inc
fcomi
test
gs
inc
shll
movsl
cmp
xor
mov
sub
subb
mov
in
dec
sub
js
add
data16
sbb
sbb
dec
in
dec
jmp
mov
push
inc
shrb
mov
daa
or
mov
add
mov
cli
daa
pushf
inc
jb
insb
arpl
aam
mov
pushl
xchg
or
ljmp
std
sub
xchg
add
jnp
incb
psrlw
mov
add
call
jns
mov
testb
cmp
xor
cmpsb
mov
outsb
insl
jp
leave
scas
push
cwtl
inc
jge
movsl
ret
mov
inc
fisttpl
sub
cmp
jns
and
mov
or
jnp
jo
cltd
mov
xor
push
mov
lahf
push
sub
xor
jmp
out
push
jge
jmp
js
push
fdiv
sub
out
outsb
cmpsl
lock
jmp
icebp
push
aad
pop
sub
ret
sar
inc
mov
aam
int3
out
mov
movsb
xchg
adc
pushf
dec
sbb
and
xor
add
mov
out
pop
sbb
lret
stc
sahf
add
repz
cmp
mov
aas
sahf
push
pop
cmp
pop
dec
les
stc
and
add
cmp
repz
popa
fs
cmp
jp
lcall
pushf
pop
lds
addr16
addr16
lcall
sti
lahf
sbb
xchg
mov
dec
mov
rcll
sub
xor
je
insb
or
dec
hlt
ret
mov
sub
mov
add
stos
pop
repz
and
add
dec
inc
popa
sub
lock
push
loopne
fcomi
mov
xor
cld
fbld
or
shlb
mov
mov
adc
inc
aad
enter
data16
lea
insl
addb
bound
pop
jmp
jg
test
add
cltd
push
nop
cld
loopne
add
add
andl
and
lcall
jmp
and
sahf
outsb
mov
xchg
std
mov
fiadds
sbb
mov
fstpt
fimuls
and
adc
adc
hlt
xor
shr
loopne
xchg
cmp
mov
sub
adc
mov
xchg
out
mov
stos
inc
clc
lea
clc
int
ret
push
pop
inc
cltd
pusha
cmp
lods
adc
fwait
mov
data16
in
jne
or
call
js
repnz
test
int
insl
or
pop
sub
pop
xor
stos
jg
lock
fwait
clc
pop
jecxz
scas
das
mov
mov
mov
sbb
push
and
mov
push
fisubs
out
or
or
push
jge
xchg
push
in
ret
sbb
add
dec
and
loop
shll
xchg
push
pop
lods
test
xchg
adc
addr16
icebp
dec
insl
mov
mov
pop
add
rol
push
and
out
dec
jle
pop
and
add
ret
cmp
aad
in
gs
enter
sbb
lods
decb
shrb
add
popf
mov
push
cwtl
in
jb
in
in
dec
int3
pusha
sub
mov
push
lcall
mov
andl
jbe
dec
lret
mov
lret
mov
test
adc
mov
stc
jecxz
adc
lret
pop
add
out
fidivl
daa
inc
dec
gs
ss
mov
jns
xlat
arpl
sahf
sbb
hlt
jecxz
mov
sbb
push
aam
movsl
loope
sub
outsb
and
xchg
pop
mov
shlb
inc
rorl
fs
and
out
iret
mov
and
add
mov
cli
add
scas
or
xor
pusha
or
shr
out
push
cs
and
inc
int
push
out
add
gs
je
mov
jl
adc
sub
icebp
mov
jbe
ja
outsl
or
iret
mov
adc
and
push
or
adc
dec
cld
inc
jle
hlt
loop
out
jno
cli
xor
jno
ss
ds
insb
rorb
scas
negl
mov
lods
addr16
jg
addb
in
sub
mov
and
orb
add
test
imull
push
out
clc
dec
rcl
pop
in
ss
mov
pop
imul
xor
sub
ja
pop
clc
or
ja
jecxz
xchg
js
fsubs
mov
lods
int3
add
outsl
pop
adc
divl
inc
xor
icebp
mov
clc
dec
imul
add
loope
xor
loope
jnp
add
ja
jno
int3
ja
or
push
xchg
sarb
shrb
mov
dec
in
cmp
jne
cmp
imul
int
popa
xchg
xchg
outsb
adc
sub
sub
xchg
pop
sbb
cli
xor
rcrl
or
divb
dec
notb
jae
fyl2x
icebp
int
enter
inc
xor
adc
sbb
jb
xor
enter
jge
xchg
xchg
stos
push
movsb
inc
addr16
jb
fisubl
outsl
cs
aam
dec
jecxz
jg
adc
pop
movsb
xchg
cmpsl
aas
addl
loop
test
add
jb
or
into
mov
subb
adc
lea
lret
mov
mov
mov
sbb
and
xchg
xor
test
neg
icebp
mov
mov
stc
hlt
add
dec
dec
in
inc
jb
inc
mov
lods
pop
movaps
into
jb
stos
int
fistl
mov
sbb
push
cmp
mov
aaa
push
jl
mov
pop
out
lahf
jmp
cmp
cmp
int
test
orl
xchg
jl
mov
test
dec
sbb
push
enter
dec
cmp
shll
je
int3
adc
sbb
movsl
pop
cmpsl
lret
in
push
xor
cltd
or
dec
mov
dec
out
ds
dec
mov
aaa
dec
lods
and
inc
popa
insl
or
shll
or
dec
fnstsw
or
cld
xor
ds
shlb
fwait
mov
cltd
ss
into
sahf
cmpsb
aas
sub
pushf
xor
cmpsl
std
scas
sub
xorl
and
popf
fs
xchg
pop
fsubr
xor
into
leave
cmp
insb
lock
and
and
test
mov
xor
aaa
fldl
pop
orl
shlb
lret
clc
mov
xor
inc
arpl
cmpsl
cmp
lahf
lret
dec
test
or
mov
mov
into
insb
sub
movsb
or
push
loopne
mov
pop
and
pusha
mov
cli
insb
inc
mov
lea
and
jnp
mov
push
pop
mov
out
mov
mov
xor
data16
fxch
gs
aad
jo
push
cmpsl
xchg
cmp
out
xor
in
clc
aad
out
mull
fildll
sub
sti
sahf
mov
cmp
lods
dec
xlat
aad
pop
je
testl
leave
notl
loop
pop
mov
ficoms
in
pop
mov
jnp
in
cli
fildll
jno
insb
or
inc
jae
jg
push
fnstcw
xor
sub
cmp
push
jmp
ja
fsubrs
call
test
lods
xchg
scas
inc
push
and
pop
data16
mov
scas
aaa
lcall
xor
das
cmp
xor
mov
push
cmp
mov
lret
sub
mov
mov
shll
stos
cli
outsl
call
mov
fdivrl
enter
and
fst
jae
inc
add
lods
dec
mov
xlat
adc
cwtl
mov
shrb
sub
jp
fildl
out
dec
adc
daa
into
xor
mov
jae
divb
sub
and
in
loop
or
leave
aam
jns
mov
aam
sub
xor
inc
dec
test
jb
mov
xchg
pop
push
mov
lock
fdivrs
mov
popa
adc
jp
loopnew
aad
xor
mov
imul
push
testl
cmc
mov
xor
hlt
imul
out
in
push
lea
loop
and
cmp
in
lahf
dec
sbb
xor
fucom
push
adc
cmp
xchg
push
or
shll
outsl
and
push
popa
push
pop
jp
out
mov
lods
cmp
stos
ja
rdpmc
xlat
dec
xchg
movsb
mov
cmp
fildl
or
pop
rcrb
int
int3
sti
dec
dec
ret
dec
jg
adc
arpl
push
cmp
mov
or
sbb
jno
cmp
lock
cltd
popf
lods
test
pop
fsubrl
mov
ds
call
fs
in
pop
ficomps
call
and
into
loope
and
je
in
scas
add
adcb
jo
xchg
and
in
mov
fidivl
lds
stc
xchg
push
cld
mov
cmp
sbb
adc
mov
inc
dec
mov
and
jl
jns
cmp
lods
cmp
jo
imul
xchg
out
push
or
mov
sub
lods
hlt
add
cltd
aas
adc
inc
dec
test
fadds
movsb
or
repz
add
imul
cmp
dec
mov
clc
test
repz
and
pop
cs
xlat
imull
or
sub
add
xor
xchg
jecxz
adc
popf
sub
fildl
push
std
dec
xchg
idiv
cmp
jmp
fstps
mov
testl
pop
xor
pop
or
das
xor
leave
add
or
add
and
out
stos
sbb
jle
dec
sub
add
imul
in
add
cmp
mov
lods
and
mov
cmp
jmp
cmp
scas
gs
lret
fwait
xlat
sbb
ss
std
pop
dec
push
fucomi
push
add
mov
jns
rorb
push
aas
xchg
add
in
or
jb
shlb
xor
cld
movb
mov
insl
lds
inc
dec
mov
je
imul
jg
test
loope,pt
loope
sub
sbb
inc
dec
js
jne
mov
mov
lock
iret
imul
hlt
xchg
inc
out
inc
in
add
out
xorl
xor
add
mov
lcall
out
clc
and
mov
cmp
inc
add
pop
gs
add
inc
push
adc
jnp
or
inc
ret
push
loop
fldz
insb
xchg
loop
jo
aam
mov
stos
ja
pop
push
loopne
push
mov
les
js
nop
cmp
cwtl
mov
out
xchg
addl
adc
inc
mov
xor
or
popa
dec
mov
mov
mov
sub
xor
xor
add
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
jmp
pop
inc
mov
mov
clc
jge
sub
xchg
jp
cmp
jp
and
xchg
dec
push
mov
jp
je
jmp
cmc
mov
xor
xor
push
mov
sub
inc
mov
or
cli
sbb
fcoml
xor
mov
ffree
sub
push
inc
popf
mov
jb
stc
jae
push
stos
mov
push
les
repnz
cli
imul
sar
repnz
inc
mov
and
cmpl
iret
fists
jmp
jb
sub
aaa
pop
add
mov
adc
fdivrs
scas
adc
or
mov
aaa
xorb
and
cmp
and
cwtl
jns
adc
mov
mov
inc
int
movsl
popa
pop
push
rorb
pop
mov
ret
cmc
lods
arpl
jl
add
mov
je
dec
dec
or
pop
sbb
inc
add
ret
mov
pop
xchg
sti
jl
or
push
mov
inc
in
sbbl
cmp
clc
out
repnz
fildll
dec
pushf
add
push
xor
fs
movsb
popa
in
push
mov
push
add
sub
daa
and
sub
mov
mov
or
out
outsl
shl
push
mov
inc
add
jp
fldenv
jnp
push
call
pop
je
sbb
dec
adc
jno
mov
and
add
scas
mov
in
adc
xchg
xchg
mov
bound
lods
int3
dec
lock
aam
dec
sti
andl
xchg
cli
sti
push
cmp
sti
xor
dec
mov
and
je
push
or
pop
dec
sbb
mov
add
mov
pushf
fidivs
dec
rcrl
mov
lea
outsb
jge
pop
movsb
mov
ret
mov
pushf
aam
cmp
adc
sub
inc
adc
fsubp
fs
sub
data16
xor
flds
sub
repnz
pusha
push
das
push
shlb
ret
cwtl
out
pop
pop
pop
mov
mov
push
mov
mov
push
je
cmp
sbb
cs
mov
jno
ficompl
dec
inc
sbb
dec
dec
fists
inc
test
or
in
push
cs
add
dec
dec
sbb
mov
xlat
xchg
fists
cmovl
lret
pop
fbld
mov
dec
inc
cli
clc
and
add
mov
and
lods
cmp
imulb
push
incl
out
fstpt
xor
dec
pushf
jns
jg
jns
cmp
std
mov
adc
je
je
movsb
mov
ret
xor
sub
mov
inc
in
xchg
out
mov
and
jge
popa
rcl
cmp
sub
sub
int3
jno,pn
mov
sbbl
xchg
notl
inc
adc
and
lds
or
cmp
mov
adc
cld
rol
hlt
adc
xor
dec
cmp
push
in
sbb
mov
push
rolb
test
sub
jle
int
lds
bound
ja
pop
push
xor
sbb
insl
mov
das
adc
pop
insl
loop
add
pop
dec
or
arpl
test
ds
sbb
cmp
in
jp
leave
push
jmp
es
sub
push
cmp
popa
and
sbb
inc
or
pop
in
xchg
mov
lea
negl
lds
xchg
sbb
repz
mov
xlat
repnz
cmp
lea
std
push
orl
mov
xor
movsb
cmp
data16
push
or
adc
mov
insb
std
lret
mov
cmp
lock
xor
dec
sbb
cld
and
bnd
dec
adc
jo
mov
sub
dec
cmp
aaa
out
insl
popa
add
push
xlat
xchg
mov
sbb
lds
repnz
outsb
or
imul
add
pop
aaa
cmp
jnp
iret
stos
cld
push
jno
rcrb
test
add
cmp
mov
cmp
mov
sbb
incl
outsb
pop
imulb
xchg
push
scas
cmp
mov
jne
push
jmp
outsb
les
lret
repz
es
ds
es
or
cmp
jo
dec
stos
das
sub
stc
xchg
adc
mov
pop
lcall
daa
jno
repz
mov
leave
repnz
pop
jbe
pop
and
cmpsb
cli
sub
inc
popf
loope
loopne
dec
in
adc
sbb
arpl
mov
pop
jp
stc
data16
push
xchg
incl
sbb
rcrl
pop
mov
and
ljmp
icebp
lds
idivb
sbb
test
inc
fldl
imul
jecxz
inc
ret
decb
insl
xor
test
andl
fdiv
test
in
adc
mov
and
popf
adc
pop
shrl
loop
jns
int
jnp
ret
enter
jecxz
scas
xor
rol
inc
ja
sbb
fcmovne
in
insb
ljmp
movsb
sub
loop
inc
push
mov
adc
ds
fidivrl
iret
and
mov
das
imul
sbb
pop
xorl
dec
push
daa
aad
lret
lods
xlat
fabs
ficomps
pop
dec
push
cmp
sbb
xchg
fmull
pop
pushf
and
adc
and
lea
or
fisttpll
clc
incb
mov
int
clc
push
loop
pop
into
cli
popf
rcrl
lock
pop
mov
jae
inc
adc
xchg
jge
inc
xor
and
and
insl
lret
mov
cmpsb
gs
dec
sarb
cmp
mov
out
in
lods
bound
cmp
pushf
sbb
jmp
push
or
mov
cs
sub
shlb
sbb
out
push
repnz
addr16
or
pusha
push
fstps
decb
mov
pushf
ret
lahf
int
mov
call
into
dec
xchg
and
or
outsl
adc
or
pop
repnz
dec
lea
sub
js
mov
add
pop
cltd
test
test
sub
mov
fidivs
xchg
divb
dec
and
sub
rolb
sub
mov
scas
cmp
sbb
cltd
xor
and
sbb
inc
data16
mov
sub
xchg
scas
mov
sbb
ljmp
popa
pop
or
lret
std
jmp
and
push
adc
fs
pop
orl
jns
into
cld
pop
inc
dec
lahf
fildl
mov
sub
jne
out
cmp
scas
outsb
enter
negl
out
std
ret
sti
jg
add
out
repnz
jb
shrb
pusha
imul
dec
cmp
or
sbb
fdivs
pop
mov
pop
jle
aad
jge
cltd
xchg
mov
inc
in
dec
ror
pusha
dec
fwait
stos
aad
push
imul
mov
int
sub
mov
cmpsb
in
sub
xchg
out
xlat
ss
jbe
or
arpl
add
lds
mov
add
or
js
notl
cmp
push
sbb
pop
pop
in
sub
movsl
pop
loopne
ret
mov
insl
enter
repnz
jae
or
daa
cmpsb
sbb
stos
imul
in
lock
xor
pop
add
mov
test
mov
push
adc
sbb
inc
jl
not
imul
std
orl
inc
adc
mov
and
pusha
hlt
push
pop
test
ds
fldcw
jmp
xchg
jno
and
mov
inc
xor
mov
lea
add
daa
pop
jae
in
pop
loop
sbb
stc
adc
call
cli
and
and
fisubs
das
aaa
rcrb
jecxz
and
xor
mov
xchg
xchg
inc
iret
int3
into
pop
pop
xchg
arpl
cmp
xor
test
xor
dec
add
add
sub
lcall
stc
movsl
mov
xor
lret
push
xor
pop
mov
call
pop
jae
mov
mov
aad
inc
test
mov
push
jge
fmuls
imul
aad
in
or
inc
sti
add
lods
jae
loop
xlat
jecxz
dec
notb
adc
lret
mov
push
aam
xchg
lds
inc
jb
lea
shrb
xchg
mov
lret
ss
or
sbb
cmp
lods
mov
sub
lds
inc
mov
inc
sub
jno
push
jmp
push
adc
out
pop
and
sarl
sub
or
dec
mov
cmp
loope
fstpt
cltd
cmpsl
scas
mov
sub
cmp
in
subl
push
mov
cs
jge
pop
dec
xlat
adc
pop
in
dec
adc
adcl
sub
or
mov
loope,pn
ret
jns
imul
ds
pushf
mov
aam
jbe
mov
xor
outsl
sbb
pop
popf
xor
push
mov
xchg
repnz
bound
arpl
and
in
fcomps
jp
sbb
aad
xor
xchg
push
mov
shl
jl
ficomps
mov
and
arpl
add
fdivl
loop
xchg
rcrb
push
push
popl
xor
mov
mov
in
adc
cmpb
cmp
stos
pop
lahf
decb
push
aaa
mov
sub
sub
jge
sbb
shll
dec
add
sbb
cmp
mov
dec
add
inc
jge
xorl
outsl
movsl
xchg
xchg
cmp
adc
repnz
sti
mulb
xchg
in
jge
ror
push
aad
repz
pop
pop
jmp
into
jns
and
jg
stos
mov
movsb
pop
add
lock
mov
mov
and
pop
jp
push
add
pushf
movsl
xor
or
aas
in
cmpsl
xchg
mov
sub
add
mov
jle
in
addb
aaa
mov
pop
shl
test
sub
or
adc
inc
clc
jo
lds
push
cmp
cmp
pop
jle
fwait
jbe
scas
xchg
es
ret
mov
adc
dec
incl
call
fldl
lahf
in
xor
dec
ss
psrld
cmp
pop
mov
xchg
pop
push
fs
divb
push
bound
rorl
jo
aam
fcomps
dec
sub
and
stos
aad
imul
lock
xlat
xor
xchg
aad
add
mov
outsl
stos
xchg
cmpl
shll
into
cmp
addr16
fs
add
out
lods
xor
cmp
adc
cmp
enter
xor
cmp
mov
cmp
mov
fnstcw
push
pop
mov
outsl
cmp
gs
push
out
insb
sub
pop
pop
push
loope
subl
sahf
sub
aas
lea
scas
fisttpll
lahf
repnz
mov
jne
test
dec
adcl
repnz
mov
mov
mov
push
pop
hlt
push
and
push
and
adc
imul
push
cmpl
xchg
stos
sub
test
jg
loopne
jmp
ss
mov
in
gs
mov
xor
add
push
jae
sub
inc
add
inc
mov
inc
mov
sbb
or
xchg
aam
rol
xchg
mov
mov
cmp
push
aas
lret
lods
popa
imul
je
hlt
loopne
shr
push
pop
clc
mov
cmp
sbb
xchg
cmpsb
or
pop
xorb
lcall
inc
adc
and
shrl
dec
cmc
push
xor
ljmp
je
mov
ss
sbb
or
pop
pop
and
inc
cld
ljmp
mov
sbbl
push
add
jg
lret
addb
add
xchg
mov
pusha
lahf
jmp
inc
gs
cwtl
js
push
mov
cmpsl
sbb
dec
in
xor
pop
faddl
dec
iret
adc
cmc
jecxz
push
jo
shrb
sbb
inc
xchg
xchg
bound
xor
cmpsl
or
jo
out
cmpsl
lock
push
out
jmp
inc
loope
ret
cmc
out
jmp
mov
xor
xchg
jae
out
push
jnp
out
rcl
dec
sub
jle
out
repz
dec
xor
push
aam
mov
dec
inc
lcall
push
lahf
test
aas
add
jno
push
js
dec
loop
pop
enter
dec
std
jne
jns
pushf
dec
push
jo
and
xor
xor
push
add
cltd
ljmp
js
divl
daa
or
cmp
outsb
fwait
mov
rcrb
test
hlt
movsb
xor
push
add
out
scas
bound
stos
dec
cmpsl
fwait
test
dec
scas
sbb
in
mov
mov
push
ss
movsl
sub
mov
lds
std
mov
enter
add
out
adc
inc
adc
out
cmpsb
pop
add
sub
data16
jp
cli
frstor
gs
add
stos
das
cmpsb
loope
jno
mov
sahf
sub
mov
mov
xchg
jnp
test
test
jmp
fsubrs
sub
cltd
dec
mov
inc
xchg
add
imul
lret
div
jns
rclb
inc
jp
lret
mov
sub
test
loop
add
fbstp
dec
cmp
cmp
sbb
sarb
add
cmp
stos
in
stc
pop
test
hlt
enter
aas
mov
pop
mov
mov
imulb
adc
arpl
jmp
dec
mov
cmp
dec
je
orl
pop
dec
dec
std
jmp
rcr
loopne
inc
add
adc
pop
sbbb
push
dec
mov
pop
andl
xchg
xchg
and
stc
ret
div
dec
and
ljmp
cmp
aad
cmp
add
andl
mov
sbb
push
push
jno
pushf
mov
mov
xchg
push
xchg
mov
test
dec
mov
hlt
loope
outsb
addr16
adcl
cmp
mov
sahf
in
pop
push
clc
gs
test
insb
sbbl
fdiv
ja
inc
arpl
or
dec
mull
leave
add
jnp
pop
call
ja
pop
xchg
imul
es
in
mov
out
js
push
mov
pop
push
mov
aam
negb
xor
add
adc
jge
jae
or
orl
lret
inc
scas
stc
mov
sbb
fistps
ljmp
hlt
xchg
inc
int
in
addr16
out
inc
xchg
add
fimull
lahf
lcall
cmp
shl
jmp
fmul
out
imul
jg
push
push
sbb
pushf
dec
xchg
cmp
mov
out
push
aad
pusha
test
xchg
lock
fistpl
cs
out
cs
mov
cs
and
js
mov
cld
mov
push
scas
add
int
in
adc
dec
aaa
sub
push
shr
in
push
clc
push
lock
xchg
inc
add
ljmp
xor
fidivs
std
bound
sub
mov
dec
movsl
sbb
push
cmp
adc
rol
popf
movsb
dec
pusha
push
and
adc
mov
fdivrl
push
out
lcall
ljmp
adc
rcrl
add
imul
mov
cmp
lods
xor
xchg
or
sti
aaa
das
xor
mov
push
sahf
idiv
mov
mov
push
and
push
dec
ud1
sub
jge
pop
adc
mov
dec
data16
shrb
fmuls
mov
lock
pop
sbbb
int
mov
jp
rolb
pushf
xor
in
mov
lds
inc
rcll
lret
cs
pushf
sti
xchg
bound
add
add
mov
fs
pop
mov
int3
push
push
xchg
push
icebp
adc
adc
mov
adc
adc
insl
dec
stc
movsb
cmc
scas
xchg
pause
aaa
sbb
mov
xchg
scas
imul
sub
jno
adc
adc
cmp
sbb
std
cltd
cmp
push
adc
sub
sbb
push
rolb
clc
leave
arpl
enter
push
xchg
jb
sti
xchg
mov
xor
push
ds
mov
je
sub
push
mov
pop
stos
loop
int
outsl
rol
cmp
shll
or
dec
addb
aas
add
cmpsb
clc
pushf
jbe
pushf
addr16
dec
mov
and
test
cmp
xchg
inc
int3
or
pop
mov
jo
inc
push
push
out
lea
jnp
nop
mov
out
outsb
fimuls
sarb
cmp
push
lret
sbb
ja
andl
fcoms
cmc
dec
in
adc
sbb
mov
jnp
mov
pop
cmp
cmp
adc
in
or
or
ss
push
daa
and
dec
jp
push
sub
scas
test
aas
add
fldpi
inc
inc
cli
dec
sub
dec
in
dec
mov
jne
mov
sarb
imul
popa
mov
add
in
sub
es
adc
js
sub
pop
das
cmp
repnz
jns
mov
and
jge
inc
enter
sar
pop
inc
inc
aas
gs
pop
or
pusha
cmp
jnp
clc
addr16
idivl
movsl
lret
or
sub
sahf
icebp
push
push
xor
std
push
outsb
and
mov
lock
lods
dec
jle
je
test
loop
jns
add
ljmp
mov
add
jne
xchg
add
inc
orl
push
imul
jg
fnstcw
or
test
adc
sbb
xor
scas
adc
sub
fcompl
rol
test
cmp
mov
mulb
clc
repz
xchg
mov
inc
cmp
lahf
fdivl
insb
into
add
out
sbb
sub
fadd
push
fldcw
sbb
inc
cmp
mov
loop
mov
adc
mov
mov
jmp
mov
ss
nop
mov
jo
push
movsb
and
js
jae
pop
sub
jmp
test
pop
jae
xchg
mov
dec
fnsave
mov
and
shll
dec
stos
inc
mov
fsub
cmp
cld
cmc
aas
sbb
push
mov
out
outsb
jg
sub
rolb
fdivr
cmpsl
ficoml
pop
xor
in
stc
jb
cmp
push
lret
and
xchg
arpl
and
out
jb
mov
mov
adc
movsb
add
retw
lods
popf
push
outsb
subl
ss
xchg
lea
dec
xor
cltd
push
pop
mov
out
gs
sub
lock
add
mov
loop
add
and
inc
std
repnz
jmp
pop
xor
or
jae
mov
sbb
jecxz
stos
cmp
mov
mov
push
or
dec
pop
fidivrs
xorb
ret
ret
aad
inc
push
sti
sub
out
cmp
push
test
dec
mov
cltd
ret
push
lods
inc
stos
jl
mov
mov
call
loopne
mov
push
mov
ljmp
lea
mov
jno
gs
das
test
mov
push
popf
xor
xchg
cmpsb
stc
int
xor
das
jb
sub
sbb
popa
mov
jae
pop
in
push
stc
aas
int3
mov
adc
add
cmc
jl
pop
leave
cli
outsl
insb
test
rorl
cmp
nop
movsl
mov
sub
pop
pop
pop
inc
nop
cmp
push
adc
dec
sbb
sbb
mov
lds
xchg
fists
test
pop
sti
push
xchg
mov
adc
hlt
ljmp
fsubr
xchg
scas
cmp
fcomi
cs
xlat
dec
stos
pop
cmpsl
jl
inc
cmp
mov
push
mov
add
cmc
add
adc
pop
jno
stos
xchg
and
sub
jmp
nop
jae
xor
mov
daa
daa
aam
clc
ret
fmull
movsb
push
jns
xchg
out
in
out
pop
xchg
jno
cmp
sub
cmp
push
and
addr16
or
cli
push
pop
add
add
sbb
out
idivb
sbb
adc
sub
fcomip
xchg
mov
inc
pop
push
insb
jle
loop
xorl
adc
xchg
sti
div
pop
or
stc
cltd
divb
nop
jl
mov
fimuls
daa
out
push
leave
int
add
jle
arpl
fisttpl
mov
xlat
shll
xchg
repnz
data16
insb
fstp
xor
inc
lret
add
add
lock
sbb
nop
push
jne
add
into
push
pop
mov
inc
xchg
and
loopne
stc
stos
xchg
enter
sbb
enter
insb
iret
mov
or
adc
in
xor
jle
and
inc
adc
pop
mov
sbb
loope
or
jmp
mov
ror
pminub
jp
imul
inc
shl
popa
xor
dec
push
jg
jns
jmp
xchg
mov
rorb
cli
push
rcl
add
and
and
pop
xchg
jmp
cmp
jns
mov
or
mov
pop
nop
jmp
mov
lret
mov
shll
xor
outsl
ret
shl
mov
sbb
imul
scas
int
dec
mov
fildl
inc
fistpl
popl
hlt
test
cmp
dec
sub
lock
sub
fisubl
mov
pop
outsl
pop
cmp
aad
or
mov
sbb
pop
or
jge
adc
stos
imul
lret
aas
lret
add
dec
pop
lret
ret
mov
outsl
lods
mov
std
pop
xor
pop
dec
push
push
sub
mov
scas
pop
jno
and
inc
inc
xor
or
mov
pop
xchg
jge
jle
add
lods
pop
cmpsb
fbstp
pop
jb
test
in
add
popf
daa
adc
das
fdivp
sub
and
in
in
add
push
fidivl
push
add
push
or
icebp
or
adc
rorb
mov
shrl
dec
loopne
mov
fxch
lahf
repz
jg
dec
xchg
or
scas
nop
enter
in
mov
stc
add
and
or
push
adc
push
scas
cmc
jo
daa
scas
loopne
outsb
fistl
push
adc
addr16
js
jp
fwait
jl
sbb
lods
jo
mov
push
add
dec
jns
lock
mov
mov
sbb
or
popf
and
loop
dec
jnp
movsl
add
ss
mov
ja
stc
mov
out
sub
stos
mov
insl
lock
add
stos
adc
pop
xlat
push
int
enter
inc
jnp
push
mov
rcr
cld
pop
sbb
fwait
or
mov
mov
inc
rolb
int
call
and
inc
rol
jno
into
cmc
xor
lods
lret
push
mov
cmp
fsts
mov
adc
in
fldl
sbbb
dec
mov
lea
mov
mov
iret
jb
mov
into
shlb
xchg
jb
leave
mov
lea
adc
stos
xchg
pop
mov
mov
enter
in
push
xor
push
dec
mov
jno
notl
mov
and
ljmp
je
xchg
leave
add
shll
rorb
cmp
loope
mov
cwtl
jle
out
fildll
lahf
jp
dec
xor
testl
es
push
std
push
pusha
icebp
adc
cltd
jl
xchg
push
jmp
inc
add
mov
xor
mov
and
sub
dec
addr16
jl
insb
lret
jnp
mov
sbb
push
daa
test
pop
adc
out
in
and
cli
jnp
and
aam
pop
subb
mov
ret
lods
in
adc
or
int3
pop
xor
addr16
imul
nop
rorb
mov
and
mov
popl
sub
jb
push
movsl
stc
sub
push
mov
dec
mov
mov
and
push
inc
jnp
push
pushl
sub
sbb
sub
dec
pop
inc
test
dec
jno
repz
inc
mov
rolb
dec
xor
inc
out
adc
inc
jmp
rorl
ss
adc
call
mov
xchg
loope
mov
push
xchg
cmp
adc
pop
or
mov
or
js
enter
adc
sub
fbld
fwait
dec
and
cmp
iret
sbb
imul
cmpsl
shrb
sub
or
xchg
adcl
add
xor
cwtl
mov
push
stos
cmp
stos
dec
gs
sbb
pop
sti
dec
imul
push
mov
fwait
mov
sub
xlat
jge
cli
xlat
leave
mov
test
mov
xor
mov
mov
lcall
les
and
pushf
inc
jl,pn
shll
arpl
jecxz
xor
mov
cmp
mov
test
adc
pusha
popf
pop
movl
xchg
jnp
int
aas
decb
adc
stos
je
imul
test
xchg
sahf
push
inc
and
cmp
dec
fsubl
adc
cld
adc
push
shlb
sub
pop
std
xor
mov
sub
inc
push
xchg
or
inc
inc
out
xchg
and
mov
add
inc
sub
cmp
pusha
daa
dec
sbb
hlt
jb
jl
lret
mov
xchg
cmp
jp
out
xchg
or
xchg
cs
jns
push
inc
fwait
xor
xor
dec
mov
and
xor
xor
xchg
nop
dec
pusha
sub
jne
mov
xchg
test
xor
cmp
subps
mov
pop
inc
rcl
scas
pop
mov
sbb
test
test
lea
mov
xor
ss
mov
call
das
cmc
sbb
and
push
stc
subb
sarl
xor
rcrl
hlt
adc
test
aad
mov
outsb
and
in
and
push
mov
insb
stos
xor
cmp
mov
push
mov
dec
cli
out
xor
fsts
mov
roll
subb
inc
dec
ret
inc
in
fsubr
fnstcw
sbb
shll
mov
iret
xchg
ds
mov
mov
imul
ss
std
lret
mov
test
inc
inc
test
les
loop
int3
or
fiaddl
lahf
push
sbb
jmp
xor
roll
repnz
and
lahf
in
push
ret
lcall
xchg
mov
inc
into
sahf
mov
add
dec
pop
pusha
fcomip
sub
lds
adc
in
inc
xor
insb
jmp
ss
jmp
mov
xchg
dec
repnz
sbb
sub
and
scas
pop
pop
fidivs
inc
or
scas
shll
sti
add
lret
lahf
std
lret
outsl
and
stc
push
push
mov
push
in
sbb
pusha
cmp
sbb
imul
ret
jae
nop
adc
or
aad
or
fisubl
call
and
xchg
dec
cld
int3
sub
test
test
lret
stos
and
cmp
cmp
out
jns
xor
jnp
lret
das
jbe
outsl
jae
imul
lret
clts
cli
jg
and
f2xm1
gs
mov
adc
daa
mov
jns
mov
aam
xchg
mov
jnp
cli
test
pop
es
cmp
add
or
or
or
mov
insb
jb
and
dec
xchg
ret
lock
mov
fwait
pushf
lcall
outsb
sub
sub
or
push
push
and
sub
pop
jae
out
xlat
inc
movsb
adc
xchg
push
mov
fs
outsl
pop
cs
and
rclb
iret
jmp
fstpl
call
xchg
adc
mov
sub
inc
mov
fs
int3
xor
mov
cli
adc
adc
int
and
fcomps
inc
repnz
mov
into
and
inc
jl
ljmp
imul
inc
int
mov
pop
arpl
sub
or
dec
xchg
mov
mov
sbb
dec
push
inc
nop
dec
inc
sub
clc
mov
mov
xchg
movsl
and
imul
adc
push
sbb
mov
xor
pop
inc
ljmp
push
fdivrs
stos
lea
xor
xchg
push
push
jg
fcoms
lret
xor
and
mov
jmp
push
test
les
cltd
fidivrl
cmp
repnz
shll
pusha
push
push
fnstenv
adc
lock
cmp
test
adc
loop
lods
cmp
adc
aaa
fnstenv
sbb
out
mov
mov
mov
fcoml
mov
in
out
lcall
inc
jb
shlb
mov
fcoms
icebp
in
xchg
fsubl
daa
hlt
mov
mov
mov
in
mov
lea
fwait
lahf
int3
ljmp
mov
xchg
js
jns
in
loopne
jo
pop
lods
mov
and
pop
xor
sub
pop
sti
inc
cmpsb
leave
mov
push
adc
or
enter
pop
imul
xlat
cmpsl
pop
inc
pop
push
push
addb
test
aaa
je
cli
jmp
neg
iret
sub
sbb
cmc
pop
outsb
sub
stos
ds
xchg
aad
pop
jne
orl
dec
aam
outsl
jbe
pop
pop
stos
mov
test
pop
ss
loop
scas
adc
jo
clc
sahf
add
popf
sbb
out
and
iret
stos
xchg
xlat
loop
inc
call
shlb
dec
cmp
arpl
je
jnp
pop
call
pusha
gs
adc
cmp
insb
stos
xchg
push
push
add
cmp
je
mov
mov
mov
add
movl
mov
mov
mov
movl
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
jmp
mov
mov
xor
lea
lea
xor
cmp
jne
decl
jne
mov
mov
mov
xor
mov
xor
mov
xor
mov
mov
xor
mov
mov
xor
add
pop
pop
pop
leave
ret
xor
inc
ret
push
mov
sub
mov
sbb
movl
add
push
movl
xor
mov
push
mov
or
mov
mov
xorl
xor
andl
push
mov
add
orl
mov
sub
mov
sbbl
test
movl
je
mov
adc
mov
mov
mov
sub
xor
movl
cmpl
je
cmpl
jl
jmp
push
pushl
pushl
push
pushl
pushl
push
push
call
cmpl
jne
xor
add
dec
mov
mov
dec
mov
jmp
add
adc
mov
add
mov
xor
add
add
mov
mov
add
mov
xor
xor
add
or
mov
mov
addl
jmp
inc
mov
roll
sti
jne
stos
js
inc
lret
add
adc
movd
jbe
pushf
fnstcw
test
push
sub
jne
and
xchg
mov
ds
sbb
inc
fistl
mov
pop
xor
jnp
push
aas
xor
pop
jl
out
push
jnp
dec
icebp
in
jl
cmpsl
cwtl
ja
adc
push
xor
jne
dec
mov
ffreep
or
sub
pop
lret
loope
jle
jle
enter
hlt
imul
lods
test
fistps
mov
dec
jg,pt
xlat
add
cmp
pop
es
andl
push
pop
xor
sub
mov
and
inc
cmp
mov
or
adc
pop
mov
and
aas
jbe
push
in
aam
dec
lock
movsb
fwait
cmp
dec
xchg
dec
dec
inc
lea
outsl
lods
movsb
push
or
cmp
fists
adc
cld
jg
sbbl
push
mov
or
hlt
fimull
notl
aaa
popa
pop
aas
sub
xor
sarl
mov
cmp
pushf
rol
rcrb
cltd
dec
mov
inc
mov
dec
jnp
in
pop
int
data16
aad
adc
lcall
pushf
jg
test
add
xchg
adc
mov
pop
xor
lret
dec
add
mov
inc
dec
sbb
adc
sub
push
js
divb
and
xchg
mov
mov
insl
inc
sbb
testb
push
fstl
adc
add
aaa
xchg
sarl
inc
pop
sbb
mov
mov
jnp
jno
mov
cmp
scas
lcall
lods
jmp
hlt
stc
clc
cmpsb
mov
cmpsb
pop
test
cmp
in
jmp
push
jb
push
lock
aam
jmp
and
icebp
mov
xor
andl
jae
jo
push
xor
addr16
mov
push
sub
push
stc
or
mov
pop
gs
std
iret
xchg
je
sbb
pop
out
mov
cmp
ljmp
fsubl
or
add
lea
jne
int3
enter
popa
mov
enter
mov
pop
sbbl
inc
sub
imul
scas
sub
and
sub
test
push
lods
insb
or
lock
sub
lret
xchg
pusha
add
insb
and
pop
mov
xchg
aad
xor
jge
xchg
sub
fistl
cmp
call
xchg
ss
sub
dec
sub
push
adc
dec
push
ret
push
mov
adc
mov
sbb
insb
add
movsl
push
ljmp
mov
shlb
insb
mov
xlat
das
js
add
mov
xor
in
sti
lock
lea
mov
cltd
cli
insb
pop
dec
popf
jbe
inc
cwtl
adc
out
add
sbb
cltd
fwait
cmpsb
je
fldenv
add
push
imul
mov
aad
mov
push
sub
std
dec
stos
cmp
add
and
jecxz
pop
getsec
mov
in
out
out
add
ja
xor
ja
dec
xchg
je
push
xor
mov
pop
daa
cmpsb
add
push
cmp
scas
and
dec
add
pop
loope
repz
dec
out
pop
in
jnp
lods
int
push
pop
mov
data16
xchg
hlt
mov
jge
inc
fbstp
jl
adc
and
stos
mov
inc
decb
jae
cld
out
dec
cwtl
mov
sub
testb
mov
js
insb
ljmp
dec
mov
stos
xchg
xchg
enter
add
nop
xor
in
add
inc
pop
mov
inc
sti
or
add
testb
xor
iret
mov
pop
aaa
das
sbb
xchg
test
ret
stos
sbb
cmp
or
xchg
mov
repz
sbb
insb
pop
outsl
pop
inc
adc
jl
testb
or
out
mov
insb
adc
cli
mov
cmp
xor
cmpsl
and
pop
jmp
repz
inc
xor
inc
out
idivb
and
sbb
std
sbb
repz
ja
xchg
test
lods
int
inc
push
loop
mov
pop
mov
xor
out
and
jecxz
dec
sbb
jnp
stos
and
cld
push
lahf
divl
dec
fistl
jae
jne
jae
in
out
jnp
push
xchg
movnti
out
inc
mov
gs
jnp
movsb
pop
xchg
pop
cmp
ret
test
mov
sbb
aas
push
mov
loopne
and
test
sbb
and
jns
sub
add
adc
mov
mov
data16
popa
sub
mov
and
adc
inc
mov
inc
lcall
ret
bound
stos
sub
add
bound
dec
push
pop
sahf
mull
pusha
xor
mov
pop
ja
insl
pop
and
pushl
mov
jne
in
mov
adc
cmp
xor
mov
and
add
aam
int
xchg
mov
aam
fstps
arpl
bswap
mov
cmp
stc
inc
iret
fdivrs
cmp
sbb
cwtl
rclb
mov
adc
xchg
sbb
enter
inc
fiaddl
das
pop
cld
sub
pop
xlat
pop
daa
xchg
cmp
or
mov
push
mov
mov
aad
rorb
mov
fwait
mov
add
mov
mov
mov
jns
push
mov
sub
cmovnp
enter
dec
pop
or
inc
jge
std
lcall
loopne
neg
fwait
inc
lcall
jae
cmp
lret
testb
pop
push
sahf
jne
jp
rclb
push
xor
orl
arpl
nop
cmp
jmp
daa
pop
xor
jno
dec
call
adc
xorl
lods
dec
adc
push
idiv
cld
pop
push
lds
sar
dec
or
arpl
and
sti
scas
and
sti
pop
cmpsl
in
push
rorl
mov
mov
xor
leave
pop
dec
gs
inc
jle
std
cmp
in
push
sub
cmp
adcb
cwtl
jbe
jl
popf
mov
sub
stos
dec
incl
bound
push
cmpsl
sub
mov
daa
mov
aas
pop
test
inc
in
add
faddl
das
jle
mov
inc
cmc
notl
mov
jle
mov
std
push
push
shrl
mov
in
jno
push
movsb
outsl
outsb
xor
jb
hlt
mov
jns
pop
dec
in
mov
mov
push
cmpsl
mov
inc
lock
inc
fs
scas
imulb
jecxz
fwait
pop
mov
adc
dec
pop
mov
pop
fwait
stos
nop
xchg
shrl
das
lea
dec
xchg
mov
sahf
pop
lret
fcompl
fsubr
pop
add
outsb
icebp
inc
or
adc
shl
xchg
fadd
fdivl
shlb
movsb
jnp
and
test
shrl
mov
stos
sub
pusha
mov
ds
or
mov
cmc
pop
ds
loopne
into
ret
inc
je
dec
sub
int
outsb
or
repz
shrl
aaa
lock
push
fidivl
xchg
push
jg
ljmp
push
and
push
inc
jb
addl
lock
pushf
movsl
jmp
jle
cmp
pop
fstps
xchg
es
cmpw
repnz
into
cwtl
repnz
pop
hlt
aaa
sbb
and
push
jmp
adc
jno
xchg
add
dec
xchg
sti
orb
mov
mov
xor
xchg
sub
dec
bound
icebp
fwait
cwtl
test
pusha
js
fdivs
push
mov
pop
in
in
or
sahf
jp
sub
sbb
xchg
pop
sbb
test
sub
pop
sbb
fwait
sbb
insb
dec
dec
push
push
add
mov
sarl
sbb
les
add
lret
imul
sbb
inc
movsb
fmuls
pop
pop
loopne
xchg
jne,pn
adc
fldcw
pop
mov
xchg
adc
mov
vminps
inc
repz
cmp
fildll
push
leave
mov
rorl
pop
cmpl
pop
lods
dec
cmp
cmp
mov
icebp
jae
xlat
fnstsw
dec
sub
sub
int
in
test
cli
cld
int
cmp
in
btcl
sbb
movsb
sti
test
cmp
divl
xor
xor
or
dec
sbb
xchg
out
cmpb
mov
cmc
add
lods
pop
pop
idiv
add
xor
fsub
mov
in
pop
push
jecxz
sub
jae
cmp
aam
add
cmp
jns
mov
imul
outsb
je
addr16
adc
ds
sbb
loope
inc
fstpt
lds
mov
imul
inc
cltd
sbb
pop
xor
cmpsl
inc
xchg
add
push
xor
dec
repnz
mov
stc
fcoms
pop
test
iret
insb
gs
leave
and
mov
pop
xchg
push
stos
adc
cmp
sub
xor
movsl
das
sub
mov
arpl
ret
mov
cvttps2pi
sub
and
xchg
cmpsl
push
lea
or
mov
leave
push
and
adc
push
std
and
sub
cmp
mov
mov
fldt
std
and
or
jp
or
xchg
jmp
loopne
shl
jmp
mov
lret
xchg
wrmsr
sbb
xor
xchg
xlat
mov
enter
mov
out
sub
dec
rclb
fimuls
imul
xor
addr16
adc
and
cmpsb
out
cmpsb
leave
and
lods
icebp
jge
popf
out
adc
and
stos
lret
xchg
mov
sbb
cmp
rorb
pushf
int3
in
pop
lods
push
sbb
lcall
mov
cmp
cwtl
sub
cld
aaa
lcall
jno
test
adc
sbb
lea
ja
test
xor
cmpsl
popf
xchg
test
and
and
mov
mov
mov
add
sbb
dec
mov
xor
or
loopne
adc
push
add
les
push
xchg
dec
mov
mov
jge
cmp
dec
insl
hlt
js
in
lods
in
repnz
adc
clc
xor
mov
mov
push
pushl
out
pop
jg,pn
sarb
cmc
test
outsb
jns
and
mov
mov
ja
xchg
push
mov
lret
imul
push
and
test
sbb
add
mov
lret
pushf
add
pop
xor
sbb
in
lcall
pop
inc
or
push
jb
sbb
xor
lea
ror
in
xor
shlb
mov
in
xchg
adc
dec
hlt
or
nopl
das
imul
in
dec
pop
add
sub
push
scas
and
movsb
mov
pushf
inc
mov
push
scas
or
iret
jmp
jge
dec
repz
push
pop
cmp
cmp
imull
xchg
daa
hlt
jle
xchg
pop
or
out
imul
push
pop
lock
pop
sub
or
jp
cmc
faddl
dec
js
mov
dec
cmp
fs
mov
es
dec
pop
pop
adc
and
sub
sbb
clc
sbb
loopne
pop
inc
mov
loop
int
add
inc
sbb
orb
xlat
dec
or
inc
jbe
enter
sub
push
int
inc
rorl
daa
or
repnz
adc
sbb
mov
mov
out
rcrl
mov
mov
scas
dec
ljmp
punpcklbw
and
push
aas
and
add
adc
add
sahf
cmpsb
push
sub
ljmp
repz
cld
push
mov
sbb
fdiv
add
daa
mov
outsb
lea
inc
and
dec
lods
mov
jge
dec
sbbb
jecxz
pop
add
ljmp
pop
dec
and
and
test
idiv
les
ret
ja
iret
lret
jle
fyl2xp1
popa
in
jmp
iret
mov
inc
out
xor
push
adc
int3
inc
push
lods
and
mov
jle
jbe
or
cwtl
rclb
xor
add
dec
cwtl
mov
testb
add
or
std
dec
mov
mov
sub
fsubrl
dec
not
adc
mov
add
cmc
mov
mov
flds
jb
add
xchg
cmpsb
mov
mov
push
popa
push
jo
jns
jecxz
push
ror
cmp
call
jnp
fsqrt
sub
mov
lods
push
or
add
data16
idivl
jns
push
mov
int3
pop
and
pop
mov
mov
or
push
mov
dec
cmp
jae
and
push
rol
stos
push
out
test
dec
arpl
jns
pop
enter
inc
mov
add
insb
mov
neg
or
jg
jbe
dec
scas
jl
subb
sub
out
and
test
add
and
add
aaa
pop
movsl
inc
sbb
mov
imul
or
adc
add
pop
fidivs
and
lcall
sub
cld
movsb
inc
test
loope
fcmovb
cltd
dec
arpl
shrb
ret
jp
aam
xchg
xor
and
or
shrb
jnp
test
cmp
cmp
xchg
cltd
pop
aaa
js
das
xlat
xchg
mov
jp
mov
dec
mov
mov
lock
xchg
cltd
sbb
mov
sbb
lods
inc
adc
call
les
fs
cmp
outsb
movsl
jo
rolb
ss
dec
fidivl
or
loope
mov
mov
mov
iret
aaa
xor
and
shll
outsl
add
das
dec
call
push
test
inc
xchg
pusha
insb
mov
sahf
arpl
sub
mov
call
hlt
leave
and
sub
jl
mov
and
aad
xchg
insb
sbb
jae
xorl
adc
or
test
pop
mov
push
les
xchg
xor
enter
out
inc
lcall
insl
stos
push
rcr
cmp
jb
push
lahf
sti
scas
shll
test
stos
cltd
fstpt
push
sub
fdivrp
sbb
adc
push
call
xchg
in
dec
pushf
mov
lret
sbb
imul
sbb
hlt
cmpsb
int3
mov
repz
mov
add
rclb
jecxz
adc
std
aas
xchg
sbb
mov
xor
aaa
jp
outsl
xchg
popa
cltd
xor
or
rcll
jp
mov
call
mov
stc
inc
pushf
out
jne
dec
push
es
mov
lods
push
or
cmpsl
divl
push
sub
pop
mov
in
aad
cwtl
pop
sbb
clts
js
movsl
icebp
cmp
xor
aaa
sbb
icebp
sub
sbb
sbb
xchg
jge
popa
adc
sbb
sub
jns
movsl
sub
push
in
pop
adc
push
or
mov
push
lcall
jg
sub
pop
cmp
add
xor
stos
pushf
pop
daa
fistl
xchg
cmpsb
jecxz
jg
aam
fsubrs
xchg
lahf
inc
out
adc
xor
and
daa
jmp
push
shrl
inc
dec
outsl
pop
push
das
popf
mov
sbbb
arpl
in
fwait
dec
mov
mulb
dec
cmpsl
into
push
test
xchg
shll
xorl
push
xchg
add
imul
lret
jmp
js
sahf
inc
inc
mov
in
ret
negl
or
jno
mov
and
sbb
cmpsb
ret
mov
and
cmc
idivl
push
scas
or
inc
ljmp
xor
push
pop
lcall
jnp
out
xchg
sub
ror
lods
cmp
ret
ficoms
ficompl
lret
sub
aam
xchg
pop
arpl
leave
lahf
add
daa
mov
data16
xchg
xchg
repnz
fnstsw
pop
xor
rorb
cld
mov
inc
lods
hlt
mov
leave
das
clc
and
enter
mov
cmpsl
fnsave
in
jle
xchg
sub
lcall
mov
pop
xchg
movsb
mov
shrl
xor
bound
sbb
loope
adc
mov
cmp
xorl
loopne
ret
gs
pop
sub
test
lods
cmp
pop
popf
rclb
insb
es
inc
mov
repz
xor
dec
inc
dec
xchg
push
mov
add
fwait
add
fwait
xorl
adc
mov
cmp
scas
mov
pop
jl
lahf
cmp
out
adc
jnp
cmp
mov
lods
pop
xor
cmp
jbe
fs
or
xchg
or
sub
lea
cmp
mov
pop
in
xor
pusha
mov
mov
pop
dec
ficoms
je
outsb
icebp
mov
fbld
jne
test
sbb
adc
xchg
out
or
popa
pop
push
mov
in
lods
adc
push
idiv
lcall
push
sbb
mov
gs
push
dec
outsl
xor
stos
push
or
jp
loopne
push
and
arpl
push
in
adc
mov
pop
cmp
add
es
mov
and
adc
fs
leave
sti
cmpsb
and
push
push
pop
mov
sbb
xchg
xchg
mov
xchg
or
and
push
and
inc
push
push
pushf
ret
dec
jp,pn
sub
lods
mov
inc
xchg
lea
mov
lea
fsub
mov
lods
sub
pusha
mov
cmc
movsl
xor
push
pop
lds
das
cmp
fistps
stos
sub
mov
xchg
out
mov
or
cmp
out
call
xchg
sub
out
test
xor
sub
lcall
inc
or
stos
clc
xchg
sbbl
std
out
aas
pop
pop
scas
cmp
stos
movsb
insb
mov
cmpsb
and
mov
out
push
sub
mov
pop
sbb
or
or
fs
jp
fstps
dec
mov
js
dec
cmp
in
es
jns
dec
push
cmp
outsl
cli
xor
jb
aam
mov
pop
daa
sub
cmpsl
add
push
bnd
loop,pt
xor
or
pop
add
ficoml
and
aad
and
sub
test
sub
mov
and
loop
ficoml
addb
xlat
test
push
mov
dec
ficoml
jmp
int3
add
mov
mov
ret
xchg
sub
add
add
lcall
icebp
mov
testb
or
xchg
jge
or
jge
push
jmp
sahf
and
call
adc
or
mov
sbb
or
stos
ret
daa
in
mov
push
andb
jae
inc
data16
jb
add
loope
hlt
fiaddl
mov
repnz
inc
cmp
and
mov
into
mov
adc
lcall
sub
in
adc
jbe
ljmp
xchg
bnd
fbstp
adc
dec
dec
outsl
jne
pop
fimuls
inc
add
or
fsubrs
cmp
mov
dec
leave
insb
scas
push
sbb
jp
xchg
mov
mov
sti
push
mov
xchg
fistl
and
leave
cli
push
lret
add
fidivrl
daa
fldl
lods
sahf
adc
mov
jns
jne
sbb
mov
sub
scas
xlat
cmpsl
in
ret
es
inc
leave
add
out
push
sbb
ljmp
jmp
imul
movsl
flds
push
push
pusha
in
test
rcl
int
sbb
push
imul
out
xchg
clc
and
test
test
clc
std
cmp
inc
inc
push
ja
mov
add
jl
jge
sbb
insb
fldl
push
fidivl
mov
sbb
int3
loope
imul
jmp
jae
lret
inc
test
dec
mov
sub
sbb
cmp
sbb
in
pop
xchg
in
stc
mov
scas
cmp
jmp
pop
fcoms
dec
inc
xchg
cli
ss
push
mov
ss
sub
cmp
pushf
sbb
pushl
mov
cli
or
xchg
popw
test
imul
repnz
ret
or
inc
imul
mov
lret
xchg
mov
inc
jle
mov
adc
orl
movsl
xor
cmpsl
xchg
xchg
loopne
enter
addl
push
int3
nop
sarl
leave
out
inc
pop
xchg
repz
fmull
inc
xchg
push
stos
and
enter
pop
mov
cld
popa
test
xchg
cli
int3
ja
mov
fstpt
test
jnp
cli
mov
mov
dec
out
xlat
cmp
dec
addr16
pop
sbb
add
enter
cmpsb
mov
mov
xor
cld
add
fbstp
push
mov
xor
mov
xchg
add
sahf
pushf
aaa
push
jae
std
jl
out
cmc
inc
fxch
pusha
movsl
push
rorb
int
mov
dec
add
mov
fsubl
fcmove
pop
cmpsl
xchg
pusha
pop
ljmp
shll
mov
clc
aad
mov
insb
xchg
in
jnp
push
nop
das
sarl
dec
dec
rorl
mov
xchg
mov
mov
sub
fbstp
jmp
push
popa
test
pop
std
loopne
imul
mov
in
int3
into
hlt
cltd
repz
lods
pop
fwait
scas
mov
mov
add
test
mov
pop
jp
mov
add
mov
fiadds
cmp
or
fmull
icebp
mov
sbb
inc
xor
in
push
sbb
popf
add
jno
jns
outsb
jmp
cmpsl
xor
imul
xor
in
cli
mov
cwtl
xchg
decb
in
into
sbb
jmp
lea
js
cmp
sahf
mov
mov
in
or
scas
jnp
lret
js
xchg
aam
cmp
xor
iret
popa
in
outsl
dec
sarl
dec
fisttps
inc
mov
fst
add
adc
int
adc
out
mov
ficompl
inc
xchg
insl
push
sbbb
and
inc
or
test
out
xchg
mov
adc
mov
je
xchg
fcmove
loope
rol
push
jmp
lods
pop
mov
sti
cmp
or
subl
jl
shlb
and
adcl
dec
pop
enter
sub
lret
and
inc
sbb
push
loope
mov
call
popf
std
jp
jbe
js
mov
leave
push
cs
rcrb
mov
add
cltd
mov
cmp
lods
pop
ss
and
test
data16
lods
test
mov
jb
in
rcr
dec
insl
fsubl
mov
popf
xor
sbb
gs
inc
xchg
push
inc
add
or
inc
xchg
mov
mov
neg
sub
push
in
add
add
and
das
adc
push
push
sahf
aad
iret
lret
sbb
sbb
testb
sbb
les
inc
fistl
inc
test
roll
push
test
mov
bound
popa
dec
xor
movsb
jl
xlat
mov
and
fadd
insl
in
testl
or
jmp
lods
mov
or
dec
loop
cwtl
mov
and
and
mov
xor
pop
and
cmc
shll
arpl
mov
cmp
pop
test
sub
shll
jae
sub
jns
gs
mov
aad
push
loop
stos
rcrb
cmp
mov
and
add
pop
jp
push
add
xor
div
and
sar
popa
dec
sbb
fsubl
hlt
fsubr
test
inc
idivb
or
lcall
imul
adc
cmp
xchg
add
mov
sahf
mov
cmp
mov
or
scas
dec
pop
mov
scas
push
aad
int3
outsb
sbb
dec
push
xchg
jecxz
andl
sub
imul
or
ja
hlt
sub
push
xchg
jne
pop
int3
repz
shlb
lods
in
mov
fistps
sbb
daa
jnp
xor
shr
stos
xchg
repnz
mov
ret
or
add
mov
fiadds
push
ret
fidivrl
addr16
mov
sbb
movsb
xchg
repnz
and
das
js
mov
or
xor
test
sub
sar
sbb
ja,pt
stc
enter
clc
inc
dec
test
clc
adc
insb
push
ljmp
push
inc
pop
pop
dec
sbb
ret
xor
pop
push
mov
stos
inc
and
dec
cmp
or
loope
jge
lret
fadds
shl
jne
xor
flds
and
ja
mov
or
mov
xchg
loop
adc
jg
cwtl
pop
mov
ret
js
xchg
decl
or
push
aam
shl
fsub
xchg
rcrl
fnstenv
fwait
les
js
cwtl
push
pop
daa
les
mov
dec
fdivr
mov
mov
in
into
push
icebp
out
xor
jp
test
add
mov
sbb
xlat
aas
test
cld
fiaddl
inc
sub
cmp
hlt
jae
sub
xchg
push
cmp
mov
mov
cmp
sub
out
add
push
mov
mov
or
dec
or
ret
aas
sbb
inc
fiadds
in
push
push
jmp
sbb
test
sub
jle
cmp
addr16
lds
lahf
sub
sbb
insb
clc
pop
fnstsw
ja
and
and
adc
pushf
movsb
and
les
cmp
jg
xorl
adc
mov
cmp
jmp
mov
add
pop
mov
sub
mov
and
stc
pop
sbb
sbb
in
call
sub
sbb
xor
mov
out
sbb
stos
and
out
subb
push
mov
ljmp
aaa
mov
dec
sub
mov
xchg
out
xchg
addb
cli
xchg
sbb
leave
push
pushf
je
inc
add
ret
push
shrb
es
fmuls
and
outsb
pop
maxps
mov
inc
daa
insb
int3
dec
pop
out
fidivrl
repnz
divb
imul
mov
daa
jmp
and
mov
cmp
sbb
rcrl
lods
aas
out
push
dec
push
push
sbbl
push
cltd
dec
push
clc
mov
cmp
push
add
jae
xlat
sti
out
mov
aas
xchg
inc
inc
ret
mov
add
adc
int3
jns
jne
jb
lret
push
push
inc
aas
xchg
jle
mov
fisubs
push
adc
popa
adc
pop
cltd
mov
leave
or
std
add
pusha
sub
dec
mov
and
mov
daa
pushf
cmp
addr16
shl
xchg
mov
and
lock
arpl
adc
mov
jle
or
shll
sub
sub
mov
add
or
xchg
cli
mov
ret
lcall
jnp
mov
pop
jno
mov
inc
icebp
xor
aaa
push
sarb
push
dec
sbb
out
das
mov
or
inc
adc
push
cli
xor
test
std
push
mull
mov
push
dec
shlb
cmp
or
pop
inc
inc
rcr
dec
or
dec
sarl
mov
xor
ds
mov
cmp
mov
inc
vaddpd
or
lcall
sbb
mov
xor
aad
cmp
leave
or
leave
and
cmp
xchg
mov
lcall
roll
xchg
and
stos
jmp
cmpsl
mov
shlb
push
leave
cli
jo
test
mov
repz
ss
ret
in
out
and
aam
jae
ds
adc
fdivp
int
and
cmp
push
loope
aaa
inc
inc
push
add
loope
loop
mov
mov
add
hlt
mov
fstl
push
je
loopne
sbb
pop
dec
mov
loop
cmp
leave
jp
fldt
xor
stos
mov
dec
cwtl
add
js
mov
hlt
shll
xchg
inc
jns
cmp
add
rolb
jmp
testl
pop
mov
adc
jmp
outsb
repnz
out
popa
mov
ljmp
xor
pop
dec
push
aam
loope
testl
ja
pop
test
mov
jmp
jne
cmc
jo
mov
cmp
call
ret
pusha
pop
cltd
inc
pop
fcmovb
or
imul
add
popa
lods
loope
xor
cmp
int3
mov
inc
hlt
repz
hlt
pop
and
inc
mov
pop
push
insb
push
sar
add
nop
mov
adc
pop
mov
jne
lock
and
xor
test
repz
in
push
mov
mov
jl
and
xor
mov
pushf
push
sahf
inc
add
mov
outsb
pop
inc
sub
aaa
lret
push
cld
mov
sub
jmp
xchg
repnz
hlt
push
movsl
repnz
xor
dec
outsb
push
addl
mov
push
pop
xchg
mov
sbb
mov
xor
call
xlat
adc
nop
adc
mov
mov
or
mov
mov
sbb
repz
dec
sbb
sub
mov
push
mov
mov
cmc
adc
inc
lods
cmpb
lcall
add
xchg
pop
pushf
pop
shll
xchg
jne
ja
mov
jl
push
imul
rcll
sbb
inc
mov
pop
cs
or
fs
jg
fldenv
out
dec
mov
popf
sti
add
aad
mov
or
xchg
sbbl
dec
jnp
je
aam
imul
and
push
mov
imul
dec
enter
popa
in
or
xchg
xchg
add
call
iret
mov
mov
test
xchg
arpl
fmull
in
cltd
and
lods
push
mov
adc
pop
cmp
call
mov
inc
mov
fidivrs
pop
mov
mov
por
ret
and
cmpsb
loopne
nop
out
inc
mov
test
cs
leave
lea
xlat
mov
or
clc
push
mov
fiadds
add
rolb
add
andl
mov
inc
mov
cmpl
ja
jmp
pushl
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
sub
lea
movl
xor
orl
xor
movl
cmp
movl
je
andl
xor
add
inc
mov
cmpl
jg
jmp
push
push
call
cmpl
jb
mov
xor
subl
add
cmp
jne
pushl
call
mov
orl
mov
or
mov
adcl
xor
xorl
add
movl
cmp
je
pushl
orl
pushl
andl
call
dec
mov
xor
mov
adc
mov
subl
xor
adcl
add
movl
cmp
movl
je
xor
mov
mov
mov
subl
mov
movzwl
sbb
mov
add
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jb
jmp
push
push
call
jmp
mov
xor
mov
movl
cmpl
je
cmpl
jbe
jmp
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
incl
add
sbbl
mov
mov
mov
sub
mov
subl
add
mov
movl
jmp
sub
mov
mov
mov
adc
mov
andl
add
add
mov
xor
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jle
jmp
push
push
pushl
call
jmp
mov
andl
xor
incl
add
cmp
jmp
push
push
or
inc
xor
xor
je
adc
scas
jp
add
lods
mov
in
outsl
mov
mov
cmp
push
scas
mov
into
pop
jle
inc
cmp
test
nop
mov
rcrl
test
jo
pop
fnstsw
mov
adc
repnz
xchg
mov
adc
mov
xor
mov
pop
push
cld
xor
xchg
insl
adc
sti
push
shlb
and
mov
push
fnstenv
lahf
shlb
pop
sahf
xchg
mov
rorl
add
popa
nop
repz
lods
pushf
bound
jbe
les
hlt
cli
adc
mov
jae
mov
ss
scas
sti
cmp
sbb
pop
lds
das
adc
xor
popa
adcl
mov
jo
int
into
and
idivl
rep
or
pop
leave
pop
int
fadds
jl
xchg
push
lcall
sarb
pop
outsl
xor
lret
xor
pop
fnstcw
jecxz
pop
lea
clc
mov
into
test
shrd
mov
shll
leave
xchg
add
xor
cli
or
xor
int
fcmove
mov
outsb
insl
dec
jg
lock
xchg
movsb
in
int3
nop
lahf
daa
mov
roll
ja
js
xor
fmuls
mov
out
xlat
or
push
sbb
sbb
scas
add
jae
stos
xchg
pusha
cmp
xor
movsb
pop
jl
mov
aaa
sub
adc
lret
mov
dec
push
mov
repnz
jp
repz
mov
fisubl
adc
jmp
test
pop
stc
mov
or
lret
push
xlat
and
int
data16
lock
cltd
xchg
pusha
cmp
and
or
jp
jge
lods
xchg
mov
imul
cmpl
shl
repnz
clc
cltd
imul
ret
pusha
cmpsl
sub
pop
subl
into
in
loop
adc
outsb
scas
cld
adc
outsl
pop
push
xchg
call
sbb
scas
cmc
cmp
dec
adc
movsl
mov
jle
add
sub
es
xor
fists
mov
mov
loopne
psubd
shrb
and
insb
jo
movsb
xchg
popa
sar
repz
test
and
jmp
out
push
movsb
mov
sahf
inc
adc
rclb
insl
push
repnz
les
xlat
jnp
cli
aas
es
fs
pop
mov
ja
pop
sti
add
pushl
cltd
mov
mov
std
in
mov
push
dec
xchg
push
repz
out
adc
pop
nop
data16
jnp
jb
cmp
movsl
sbb
mov
inc
shlb
xor
imul
testb
xchg
add
pop
test
sub
scas
ret
mov
or
lea
out
xlat
aad
jb
cmp
jg
pop
adc
jbe
dec
out
pusha
jge
cmp
jns
int3
shlb
daa
push
and
into
pop
pop
or
pop
cmp
ljmp
lret
shl
insb
rolb
or
ds
push
fmul
jne
arpl
or
xchg
add
jb
pop
add
rcll
xchg
in
cmpsl
push
outsb
jp
or
inc
jmp
bswap
sbb
int3
loop
fsubr
inc
pusha
clc
aam
inc
gs
mov
jbe
aad
pop
imul
jno
pop
pushf
hlt
scas
mov
iret
shrl
aaa
rolb
cmp
loopne
mov
nop
lahf
insb
inc
test
jle
sbb
add
mov
add
add
and
dec
mov
jecxz
scas
mov
push
pusha
mull
notl
cli
jle
mov
shl
adc
inc
ljmp
addl
out
fistpl
ss
dec
cld
inc
xchg
jp
fisubrl
dec
rcl
scas
je
roll
mov
mov
mov
movsb
sbb
dec
dec
xor
xchg
mov
sub
daa
addl
mov
dec
pop
sbb
int
je
in
dec
nop
ja
incl
insb
clc
jno
mov
stc
push
aam
pop
mov
pop
mov
jg
cmp
ds
loopne
sub
pop
std
mov
in
and
mov
out
test
aad
mov
dec
roll
mov
ja
jecxz
fwait
adc
jnp
fucom
xchg
push
jmp
fadds
push
scas
int3
cld
shlb
adc
popf
and
push
cltd
xor
mov
inc
sub
stos
add
cmc
jo
push
in
std
or
xchg
jne
mov
xchg
out
inc
mov
mov
fdivrs
push
push
cmpsb
jnp
cmp
mov
inc
repnz
adc
fistps
push
and
push
mov
mov
push
mov
rcl
jl
loopne
pop
adc
mov
icebp
pop
loopne
ds
mov
adc
dec
mov
test
decl
outsl
dec
cmp
xor
repnz
daa
mov
popa
repnz
mov
cmpsl
gs
ds
mov
rcll
not
fxam
and
lret
xchg
test
and
pop
scas
je
imulb
inc
xchg
into
rcl
jns
lea
cmp
pop
mov
stos
movsl
jmp
aad
mov
xchg
push
sti
cmp
inc
xor
pop
lret
and
jbe
ficoms
addr16
mov
jle
mov
and
cwtl
or
fs
mov
insl
lock
scas
fisubs
lock
mov
in
xchg
inc
mov
sbb
enter
push
addr16
imul
ret
out
bound
mov
lret
sub
xor
out
xor
adc
loop
ja
add
and
dec
dec
push
pop
mov
and
mov
xor
inc
xchg
sub
xor
int
xchg
cmp
mov
aaa
push
cmp
rcll
ss
hlt
mov
fistl
lahf
mov
test
pusha
xchg
xchg
andl
mov
cmp
mov
fs
push
push
xor
insl
xchg
jge
dec
pop
movsb
mov
sarb
xorl
ss
mov
cmp
cli
mov
sub
scas
in
sub
dec
and
fldl
in
in
mov
ds
pop
shrb
out
dec
sub
push
repnz
ss
scas
ret
mov
icebp
testl
sbb
loope
sub
popa
and
bound
je
pop
stos
push
cmpsb
lcall
dec
push
sub
outsl
cmp
push
cwtl
fidivs
jp
push
dec
xchg
mov
cmp
enter
jmp
jne
and
mov
jno
dec
leave
add
jo
push
mov
outsb
ja
sbb
cmp
inc
int
fsub
das
arpl
pop
nop
push
icebp
lahf
idivb
scas
clc
adc
and
sub
rcrl
mov
cltd
or
out
ds
or
cmp
ds
jne
mov
pop
mov
in
gs
sarb
xor
in
and
pop
xor
sub
mov
push
mov
sub
js
leave
iret
in
cwtl
xchg
push
pop
in
and
sbb
pop
addr16
psrad
add
add
call
cmp
imul
in
std
enter
jo
in
and
mov
lcall
xor
outsb
and
incb
out
jg
pop
push
ja
mov
dec
adc
dec
push
mov
movsl
cmp
xchg
mov
flds
dec
outsl
adc
mov
data16
mulb
imul
xchg
insl
mov
xchg
shr
ret
add
and
and
xchg
push
add
into
cmp
dec
and
int
pushf
fxch
xlat
jns
pop
push
mov
aaa
je
inc
test
repz
sub
ljmp
cld
cmp
cs
ljmp
and
mov
loop
imul
fcmove
jp
stc
push
int3
push
mov
int3
addl
pop
call
je
rolb
push
inc
imul
mov
pop
jp
and
test
fdivr
mov
mov
push
xchg
or
sub
sub
mov
loopne
pop
jge
push
sub
inc
add
arpl
xor
sbb
or
push
and
xchg
es
test
popf
fnstcw
aad
xchg
cmpsb
mov
dec
aaa
decl
lahf
add
scas
out
push
outsb
mov
test
jg
ja
jo
enter
scas
xor
roll
aam
lahf
cmp
imul
lods
in
cld
scas
mov
in
scas
mov
in
inc
stos
lds
cmpsl
push
add
jmp
adc
cmp
jp
stos
cmp
add
fs
push
jo
cs
cmpsb
inc
jno
cld
cmp
mov
leave
xor
sbb
sbb
mov
hlt
and
sub
sbb
jb
in
mov
idiv
and
cmp
gs
insl
movsl
dec
push
movsl
and
fcomip
push
jb
inc
in
shl
pop
add
mov
mov
mov
aam
jbe
adc
lea
lret
sub
iret
lcall
pop
scas
xchg
stos
fsubs
pop
push
jns
push
cmp
push
pusha
sub
mov
out
mov
pop
lock
sti
push
adc
fs
out
and
scas
popa
ljmp
in
xchg
aas
pop
imul
mov
jne
and
adc
pushf
bnd
push
or
rorl
testb
into
adc
cwtl
jp
sub
add
sub
push
aam
dec
in
mov
or
mov
jne
out
xor
fwait
jns
xorl
adc
jecxz
pop
inc
movsb
xchg
movsb
js
pextrw
add
roll
ret
sub
pushf
aad
jnp
pop
stos
mov
scas
add
xchg
push
xor
mov
test
push
mov
in
int3
aam
xchg
mov
push
pushf
xchg
iret
cmpsl
cmp
iret
inc
iret
xchg
iret
in
mov
sbb
stc
inc
and
daa
push
mov
aas
add
xlat
push
gs
inc
mov
xor
sbb
lds
lods
mov
mov
or
mov
inc
cs
push
pop
cmpl
xor
mov
or
out
ds
lcall
repz
pop
jo
out
mov
xchg
push
xlat
lret
cmc
sbb
das
mov
sub
and
adc
in
pop
addr16
jecxz
dec
jle
lahf
push
and
push
or
adc
cmpsl
pusha
ljmp
xchg
pop
pop
adc
fucomi
ret
pop
push
lcall
push
dec
push
and
iret
ds
push
dec
pop
mov
adc
adc
xor
pop
add
and
bound
and
xchg
mov
lods
xor
loop
pop
cwtl
lods
movsb
mov
sbb
imulb
sub
mov
dec
test
mov
add
stc
mov
out
lret
mov
add
sahf
xlat
into
cmpsl
in
or
or
js,pn
sub
dec
add
sbb
sahf
xchg
js
xchg
lahf
sbb
ljmp
mov
popa
mov
xchg
inc
pop
inc
hlt
jp
mov
movsb
pushf
or
sub
pusha
pop
sbb
outsb
lods
roll
out
dec
popa
mov
adc
lcall
mov
movsl
push
outsb
popf
aad
push
mov
sbb
lret
xchg
inc
dec
pop
fnstsw
inc
mov
ja,pn
sbb
push
mov
or
jns
adc
xor
in
insl
add
sub
test
gs
loopne
mov
mov
in
jmp
mov
xor
push
int3
mov
insl
push
mov
nop
and
mov
rorb
jb
inc
jg
loop
cmp
repz
lahf
xchg
imul
mov
aad
aad
mov
mov
loope
pop
jne
lods
scas
pop
adc
add
dec
test
mov
sub
sti
stos
ja
test
pushf
adc
int
mov
push
cs
cmpsb
in
jmp
xchg
iret
pop
repz
cmp
and
out
fcompl
das
ss
test
dec
loope
dec
mov
sub
mov
cmp
xor
arpl
mov
pop
inc
xor
jns
imull
insb
pop
fnstenv
push
daa
daa
xlat
ss
test
rclb
inc
notb
mov
pop
movsb
in
fst
sub
pop
push
out
stos
mov
mov
xlat
faddl
add
or
jbe
fsub
cmc
sbb
ds
cli
sub
mov
in
or
mov
adc
push
xchg
lretw
cmpsb
or
add
and
repz
adc
pop
popf
imul
or
stc
std
sbb
outsl
out
movsl
jne
popf
xlat
insl
add
xchg
in
mov
jl
ret
leave
sub
xchg
lea
dec
cld
push
sbb
add
mov
mov
and
mov
pushf
jmp
out
adc
inc
or
mov
sub
push
push
xor
jns
mov
repnz
rcl
addr16
jmp
je
in
fwait
xor
xor
out
jo
bound
mov
jo
in
or
sbb
enter
mov
push
dec
in
std
es
jmp
inc
into
or
mov
jne
sbb
in
sbb
sub
imulb
xor
mov
into
sti
test
fisubl
push
pop
les
int3
sub
aad
push
push
int3
inc
xor
sbb
jae
push
sbb
test
inc
inc
dec
mov
mov
out
dec
push
cmp
cmp
aad
mov
movsl
aad
add
repz
in
cmp
roll
ficoms
loop
mov
das
nop
mov
aaa
out
mov
inc
cmp
gs
out
and
sub
sub
dec
into
lcall
dec
test
notb
stos
sub
xchg
dec
xor
xor
repz
or
lret
movsl
dec
aaa
ja
adc
add
ss
mov
mov
mov
pushf
out
add
push
inc
adc
loopne
sbb
push
lods
lock
imul
mov
mov
rorl
mov
fsub
pushf
pop
aaa
cmpsl
jl
xchg
or
bnd
mov
mov
mov
in
orl
add
loopne
jg
xor
inc
pusha
loop
hlt
iret
jmp
frstor
add
dec
add
insl
ja
push
fcompl
cwtl
incb
xor
fidivl
jne
outsb
push
test
gs
nop
iret
and
cld
aam
cmp
mov
inc
sbbb
jo
sub
imul
jge
adc
fwait
lods
mov
fistl
subb
xchg
mov
in
cmp
fistpl
arpl
pop
push
lock
cmp
es
dec
cs
dec
scas
sub
push
enter
adc
hlt
adc
mov
mov
je
lret
sar
push
fs
dec
fldl
lret
cwtl
insb
push
jbe
arpl
push
pop
gs
stos
and
filds
fsub
sub
and
add
pop
pop
push
dec
or
cmp
gs
xlat
cli
pop
ret
aas
cmp
pushf
jge
andl
lcall
test
or
test
mov
mov
and
sub
jl,pt
pop
mov
stos
adc
aaa
popf
incb
dec
lock
and
ficoms
jne
mov
xchg
mov
call
cmp
cltd
stos
jnp
in
mov
mov
and
gs
dec
cmp
shrb
fidivrs
outsl
push
aam
arpl
add
cmp
mov
or
fists
and
je
jge
add
or
cltd
cmp
bound
ret
into
push
xchg
stc
out
push
mov
std
leave
mov
jecxz
and
fidivrs
sbb
jmp
stc
js
jecxz
js
cmp
loop
ljmp
int3
stos
jae
mov
cs
jp
out
scas
mov
push
outsb
adc
jecxz
jne
xor
jle
or
mov
pop
dec
xchg
xor
or
pop
imul
in
adc
rclb
mov
sub
stc
sbb
mov
les
xchg
mov
dec
scas
insb
lods
test
int3
add
inc
xchg
int
rcll
jb
iret
pop
and
mov
mov
imul
icebp
stc
hlt
mov
pop
inc
das
and
test
adc
jo
inc
mov
fs
jnp
mov
nop
mov
sbbb
push
cmp
push
add
cmpsl
popa
xchg
sub
cwtl
ret
shr
cmp
shrl
and
pop
scas
lock
shll
xchg
popa
or
sbb
mov
cmp
mov
in
ja
jnp
es
push
xorb
std
xchg
lock
jae
add
arpl
xabort
cltd
in
xchg
stos
mov
xorb
pop
add
inc
and
sub
les
jge
bnd
pop
daa
xchg
mov
cmp
scas
lcall
xchg
add
inc
inc
sbb
rcrb
imul
cmp
nop
icebp
push
clc
imul
mov
ret
fwait
push
adc
mov
xchg
cmc
cmp
xchg
pop
push
push
jle
arpl
rcrl
fdivrs
jne
jne
cld
jecxz
adcb
loopne
sti
in
jl
lret
orl
jb
nop
inc
clc
push
mov
sti
fs
pop
sbb
push
adc
out
fistl
sub
sbb
in
and
pop
or
pop
sbbb
repz
mov
lods
xor
sbb
fiadds
outsl
hlt
shr
cmp
adc
jno
cmc
and
mov
or
lods
js
fiaddl
xor
cmp
xchg
sbb
jle
mov
aaa
pop
dec
cld
ja
push
sbb
fsubs
or
lahf
mov
out
es
push
negl
push
adc
jmp
add
stos
jo
insl
xor
mov
inc
pop
pop
out
adc
adc
aam
shl
xor
insl
mov
outsl
adc
and
mov
sbb
mov
addr16
xchg
add
inc
sub
repnz
test
mov
sahf
pop
pop
pop
mov
not
xor
pop
movsb
imul
out
js
in
cwtl
mov
push
enter
mov
leave
popa
icebp
addr16
adc
mov
jnp
movb
aad
ljmp
fistl
cmpsl
adc
adc
mov
mov
cmp
add
fsubrp
jge
loop
inc
out
sbb
movsl
ss
pop
into
ret
int
lret
js
xchg
dec
mov
test
jnp
pop
xchg
sub
loop
mov
push
popf
in
test
jge
pop
dec
insl
shld
daa
or
pop
xor
ret
imul
xor
fs
shr
inc
dec
pop
popf
lock
push
and
or
jo
xor
push
xor
movsl
cmc
pushf
pop
ret
jns
jmp
cmpsb
pop
loop
ljmp
ret
sbb
movsb
rcr
push
inc
sbb
cmpsb
and
and
lea
imul
and
fildl
xchg
jmp
daa
jmp
inc
cli
jno
loopne
sub
jbe
push
lea
mov
pushf
mov
repz
int
pop
mov
push
rorb
cwtl
jmp
mov
mov
inc
push
shll
mov
mov
cli
xchg
sbb
mov
mov
iret
aad
push
pop
dec
jmp
ja
xor
js
mov
ss
lods
aam
adc
jnp
dec
dec
out
dec
iret
sub
dec
push
gs
ds
jns
jne
nop
je
cli
cmp
xchg
inc
stc
jns,pt
mov
xor
sub
dec
jmp
adc
push
xor
jg
push
inc
or
pop
cmp
subb
lret
icebp
jle
cltd
sub
add
xchg
xorb
loop
divb
or
push
mov
xchg
fcomi
adc
sbb
scas
xor
nop
shl
scas
ret
in
xchg
imul
and
dec
jo
lods
lds
mov
jae
int
cld
mov
ret
xor
leave
jno
out
add
inc
arpl
cmpsb
int
cld
mov
or
cmp
push
mov
mov
hlt
mov
xchg
out
cmp
imul
jne
ficompl
fsubl
lret
aad
xchg
and
xor
inc
adc
and
data16
mov
je
pop
fldcw
cmp
sbbb
jecxz
test
dec
jns
int3
adc
mov
jbe
repz
xchg
mov
adc
sbbl
push
sbb
jns
cmc
dec
pop
dec
xor
xchg
cs
out
nop
lcall
pop
xchg
stc
je
pop
jae
add
mov
sarb
gs
pop
flds
fsub
pop
in
mov
js
into
test
andl
pop
xchg
enter
fistpll
inc
cs
ret
test
and
int3
xchg
mov
cmpb
lret
iret
hlt
mov
daa
fisubl
xchg
xchg
push
pop
jns
dec
mov
jmp
into
adc
addl
sahf
lods
stos
arpl
insb
adc
outsb
xor
jmp
pop
adcl
jle
jns
clc
cmpsb
ds
mull
rorl
icebp
jo
pop
cmc
insl
add
rorb
std
cmp
pop
scas
jl
or
and
test
cwtl
pop
repz
push
mov
vprotq
add
cld
pop
and
jbe
add
mov
xor
xor
jnp
inc
sub
mov
mov
and
push
ficomps
mov
dec
pop
ret
in
inc
jl
dec
add
pop
mov
mov
pop
test
sbb
pop
loop
int
mov
fdivs
mov
mov
pop
inc
add
dec
bound
ja
int3
arpl
sub
mov
fcmovb
ror
push
mov
lret
lret
stc
fidivrl
je
mov
stos
xor
cmpsl
outsb
or
mov
cld
std
dec
sub
pop
imul
adc
mov
adc
sub
fisubrs
and
jmp
push
mov
and
loop
gs
xor
repnz
loopne
movsl
adc
push
pop
mov
imul
lret
mov
fwait
add
sub
mov
jne
xchg
test
addr16
jb
test
popf
outsb
xchg
int
enter
inc
test
lds
cmpsl
ds
lods
sahf
pop
stc
fwait
push
int3
mov
pop
adc
pop
int3
out
or
loope
in
adc
jge
mov
mov
lods
sarb
mov
lcall
lahf
xor
inc
loop
cmp
jno
aad
add
sub
pop
add
fwait
cmc
xchg
sti
outsb
jle
aas
int
into
mov
outsb
add
xchg
insb
leave
inc
sub
push
rcll
das
mov
movsb
pushf
dec
sub
loopne
out
sub
jbe
rolb
outsl
sbb
push
pop
movsl
xor
lret
dec
imul
and
pop
test
rolb
or
mov
push
aas
int3
clc
call
repz
dec
insl
shll
mov
sbb
mov
xor
push
sahf
inc
xchg
inc
inc
sub
in
insb
xorl
pop
mov
mov
or
add
jp
cwtl
rolb
mov
sarb
cmp
adc
int
cld
push
jb
fwait
das
fnsave
ret
mov
ss
cli
aad
jecxz
lods
sarl
xor
pop
inc
add
cmpsl
sbb
mov
push
jecxz
lret
pop
fwait
cmp
dec
cmp
mov
out
cwtl
push
cmp
mov
push
iret
fnsave
and
mov
pop
cld
jp
sub
js
aas
repnz
jg
mov
xchg
je
mov
inc
scas
mov
push
sbb
fistps
dec
ja
out
sub
pop
dec
test
in
cs
inc
jmp
push
in
and
or
pop
ja
sbb
fdivl
xor
inc
and
jl
jbe
jae
push
mov
mov
arpl
lcall
push
dec
adc
xor
mov
or
hlt
mov
dec
lods
inc
std
stc
push
push
cmp
int3
inc
and
jno
cmp
mov
inc
mov
clc
pop
inc
in
pop
dec
setg
xor
push
cmpsl
mov
jle
xchg
jo
mov
add
pushf
xor
cmp
mov
aam
sbb
and
xor
adc
dec
bound
sbb
fadd
mov
icebp
enter
popa
andl
inc
lock
mov
fs
add
imul
cmp
pop
xor
mov
cmp
test
adc
dec
nop
sbb
insb
shrl
mov
adc
push
sub
stc
jns
jo
mov
aam
jb
rcrb
add
popa
fistps
out
data16
into
inc
dec
pop
rcl
data16
sub
pop
fisubl
push
orb
pop
xchg
fistl
ljmp
mov
xor
rcrb
data16
pop
loopne
sbb
js
out
sbb
sahf
or
insb
outsl
inc
addr16
push
pop
xrstor
leave
ljmp
shlb
xor
sar
push
sahf
lods
fimull
xchg
pop
xchg
and
sti
imulb
outsl
rorb
je
popf
sbb
dec
cmp
int3
test
xchg
pop
test
add
idivl
jnp
mov
xor
mov
sub
mov
mov
pop
icebp
inc
in
inc
pushf
xchg
cmpsl
jbe
es
dec
jbe
add
adc
xor
daa
cmc
movsb
cld
popf
lods
ja
xor
shll
jge
inc
or
sub
lea
xor
fsubs
xorl
cs
xchg
data16
cld
sbbl
jge
out
lock
daa
insb
js
add
inc
scas
lds
aaa
and
jo
lds
or
ss
jecxz
leave
add
adc
imul
imul
ja
jbe
dec
push
or
aas
mov
cmp
inc
loope
outsb
shll
jmp
insb
mov
jp
popf
sub
shrl
mov
dec
and
xchg
pop
mov
aam
sub
dec
cmp
mov
icebp
shlb
and
inc
fmull
ja
xor
adc
fistpl
pop
mov
ret
rol
push
movl
adc
imul
pop
loope
into
sub
and
iret
jge
lods
cwtl
sbb
jmp
inc
mov
pop
ljmp
pop
pop
jno
jmp
cli
out
xor
mov
imul
test
xor
xchg
or
pop
cltd
aam
add
xor
adc
es
cmp
test
data16
inc
add
add
sbb
inc
xlat
or
or
push
addr16
sbb
push
mov
sahf
movb
sbb
adc
pop
jns
out
xor
in
mov
xchg
push
jne
cmp
adc
pop
cmpsb
mul
movsl
pop
mov
dec
pop
mov
adc
pushf
int3
push
jge
sbb
test
or
scas
sub
fdivrl
mov
push
sub
dec
inc
xor
in
sub
scas
inc
mov
loope
xlat
or
pop
xlat
and
notl
test
pusha
scas
bound
add
add
cwtl
out
mov
stos
dec
pop
and
mov
mov
xchg
mov
js
mov
mov
inc
mov
mov
jecxz
xchg
fs
or
sub
jne
fmull
inc
pop
ss
stos
add
inc
inc
dec
add
adc
xor
dec
nop
pop
outsb
mov
fisubrl
sub
adc
arpl
scas
insl
clc
insb
dec
out
pop
imul
cmp
add
hlt
movsb
cmc
adc
mov
pushf
sub
sub
addl
xor
mov
icebp
push
sub
xchg
movsl
out
std
xor
loopne
insl
test
fcmovnu
inc
jnp
sub
push
inc
in
clc
jnp
in
push
imul
pop
jmp
or
push
pusha
add
cwtl
xchg
add
jl
daa
icebp
xlat
inc
mov
jae
jl
pushf
pushf
xchg
mov
in
add
push
xchg
and
daa
sbb
add
sbb
nop
mov
cld
test
in
jge
pop
add
jo
dec
pop
and
inc
dec
dec
or
push
and
repz
xor
inc
push
bound
movl
add
pop
sub
call
pop
xchg
les
stc
pop
push
andb
jae
pushf
daa
pusha
aam
jmp
leave
cmpsb
inc
fsubl
xchg
pop
sub
pop
mov
xor
adc
jnp
sub
incb
xor
fdivrs
cli
std
fdiv
ret
aaa
clc
and
test
pop
mov
dec
pop
in
ljmp
or
add
jl
iret
or
pop
sub
and
bound
inc
data16
outsb
sbb
adc
test
jmp
jbe
es
mov
jne
adc
adc
dec
stos
lock
cld
adc
lahf
add
push
adc
push
sbb
and
mov
pop
lret
lcall
xchg
or
es
sub
data16
xchg
push
fsubs
mov
loopne
out
or
inc
mov
int3
push
movsb
lcall
pop
sub
pop
testb
ja
loopne
in
int3
pop
sub
or
mov
cwtd
xchg
sbb
jno
mov
sub
out
jbe
pushl
pop
pushf
xchg
fcmovb
push
out
add
aad
test
add
and
outsb
jge
aad
jbe
sbb
vmaxss
inc
or
cwtl
lods
jns
inc
mov
or
mov
sahf
std
daa
jnp
adc
daa
lret
xchg
insb
sub
pop
sbb
fcoms
cmp
sbbb
mov
xchg
setns
out
lods
mov
pop
int3
add
dec
js
dec
jbe
and
mov
and
inc
push
mov
std
daa
mov
iret
lds
pop
arpl
jns
add
fimuls
push
lret
cmc
rorb
inc
in
mov
mov
int
std
mov
cmp
popf
dec
stc
pop
xchg
add
aaa
lret
insl
jg
pushf
jg
xchg
repnz
cmp
pop
aas
jmp
nop
jno
inc
sub
sub
add
mov
xlat
cmp
sbb
inc
sub
mov
test
and
out
pop
jae
push
fisubs
scas
mov
add
or
cld
mov
icebp
fwait
repnz
mov
stos
mov
fcompl
dec
lds
into
icebp
je
jmp
mov
mov
xor
add
cmp
mov
je
mov
xor
add
cmp
je
lea
push
pushl
pushl
call
mov
mov
xor
add
cmp
je
mov
movzwl
mov
mov
mov
jmp
mov
xor
lea
jmp
mov
xor
add
jmp
mov
add
mov
mov
test
jmp
js
jno
arpl
test
dec
cmpl
pop
jp
leave
xchg
mov
add
fs
xchg
dec
sub
mov
or
lds
inc
push
add
or
and
sbb
push
stc
in
mov
sarb
xchg
insl
or
rcr
ret
sub
aam
adc
inc
cs
aaa
rorb
or
stos
enter
cmp
xchg
mov
push
adc
add
inc
or
jecxz
fs
push
lret
xor
in
int
mov
cmc
push
test
push
repnz
push
xlat
jno
mov
xchg
mov
flds
addr16
ret
repnz
aas
push
jae
adc
aas
add
push
add
sub
das
mov
cwtl
xchg
cmpsl
xor
negb
push
out
dec
adc
mov
pop
push
push
cwtl
dec
in
ret
cmpsl
test
mov
insl
xlat
subl
mov
aas
fimull
inc
cmc
push
mov
in
mov
sub
mov
dec
mov
fdivrs
je
ret
ja
and
scas
fpatan
pop
jb
shr
add
pop
imul
addr16
stc
jmp
sub
sub
push
out
leave
adc
fisttpll
sbb
nop
sub
cld
es
adc
dec
clc
jg
push
out
stc
xchg
sti
sub
and
push
and
pusha
adc
dec
dec
mov
loopne
add
ds
xor
adc
sub
cs
pusha
mov
test
dec
dec
cmpsl
call
and
or
movb
and
ja
loopne
fadds
jmp
sbb
dec
fistl
lods
arpl
les
fwait
push
in
push
sahf
mov
inc
xor
xchg
mov
shlb
fldenv
jmp
jg
dec
push
sub
das
cmp
jns
ret
int3
data16
int
lcall
dec
jecxz
hlt
push
jl
je
or
cmpsl
sbbb
shrb
aas
xor
bound
lcall
inc
cmpl
add
jno
lods
and
loop
jns
sbb
cs
loop
sbb
int
aaa
and
mov
inc
into
mov
fwait
adc
jo
testb
push
xor
sarl
adc
fdivs
inc
in
jns
outsb
ret
xchg
pop
cmp
push
mov
arpl
mov
xchg
dec
stc
pusha
cmp
add
or
gs
stc
aam
mov
stos
jl
cmpsb
adc
jb
inc
movsb
dec
jecxz
inc
sbb
mov
dec
outsl
cmpsl
mov
adc
jo
jns
xchg
pop
push
and
js
push
push
cltd
test
xor
inc
jae
push
push
mov
mov
push
jnp
ror
iret
jge
movsl
xor
lret
inc
fwait
sub
mov
js
sbb
cli
adc
dec
sti
jno
xorl
ljmp
mov
dec
inc
das
es
int
repz
lret
pop
dec
out
mov
addr16
ja
aam
or
enter
or
jle
jb
jg
stc
dec
gs
mov
sbb
push
inc
test
jnp
icebp
pop
mov
test
orb
add
pushf
stc
and
aad
push
call
cmpsb
in
fsts
adc
lcall
pushf
shll
jbe
rcrb
mov
in
xchg
dec
adc
sub
lds
lcall
shlb
js
fistl
jmp
jbe
daa
cmp
rclb
mov
mov
js
jno
into
std
xchg
sub
pop
int
jle
enter
sub
rcll
ds
add
je
inc
inc
das
cmp
cmpb
inc
pop
add
repnz
add
sub
ja
test
add
xchg
aaa
ror
and
and
cmp
aam
aas
inc
pushf
or
jmp
inc
leave
add
pop
add
pop
mov
jmp
push
jl
lret
push
int3
lahf
mov
ret
or
sub
adc
push
and
mov
in
mov
cmp
jo
nop
xor
enter
subb
xor
dec
mov
clc
ljmp
push
lods
pop
out
popf
ljmp
sub
lahf
fldcw
mov
mov
and
cmpsl
outsl
sub
xchg
fs
jno
xor
ret
movsb
mov
scas
in
push
fs
lret
jecxz
sbb
inc
add
stc
notb
push
mov
ja
test
mov
sbb
leave
xchg
fimuls
sbb
xor
or
rolb
cmc
and
dec
push
pop
push
in
es
unpcklps
es
add
mov
jne
xchg
jle
add
push
mov
jne
aas
cmp
or
pop
fisubrs
mov
dec
sbb
inc
sarb
dec
in
test
scas
mov
cmc
mov
pop
xchg
test
enter
push
mov
adc
mov
and
pop
gs
cwtl
push
stos
mov
leave
fdivrl
inc
xchg
inc
inc
inc
fstpt
cltd
jge
sub
dec
lcall
std
fidivl
mov
mov
dec
jecxz
test
cmp
mov
push
in
sub
inc
xor
xchg
xor
mov
popa
sbb
mov
js
adc
movsb
inc
push
and
cmp
mov
push
mov
loop
sbb
movsl
push
pop
loopne
mov
push
sbb
mov
pushf
jne
inc
pushf
ficoml
pop
nop
dec
loope
pusha
mov
xor
xchg
fwait
mov
dec
pop
push
shr
shll
add
lahf
ja
jae
mov
out
out
jns
push
in
call
adc
pop
ljmp
lahf
pop
add
pop
rolb
dec
add
into
arpl
jnp
stc
repnz
jbe
call
sti
mov
fwait
cs
mov
je
or
jl
sbb
gs
pop
cmp
inc
scas
sub
push
sbb
and
lock
mov
push
jg
int3
rorb
push
cmp
cmp
mov
inc
add
pop
sub
xor
and
movsl
push
dec
test
push
jge
jl
and
test
pop
jle
cltd
in
jp
mov
test
mov
sahf
data16
and
mov
fnsave
jg
es
cmp
pop
fistps
nop
xor
or
push
mov
and
sbb
jge
cmc
and
xchg
xchg
mov
or
popa
cmc
jl
hlt
in
leave
pop
mov
dec
sbb
sbb
xchg
aaa
cmp
ret
and
push
cltd
adc
icebp
xchg
dec
xchg
shll
mov
pop
ror
adc
mov
push
and
lea
dec
push
push
adc
pop
clc
scas
outsb
inc
jle
mov
cmp
ss
loope
shll
les
cmp
mov
xchg
mov
dec
popf
scas
dec
shll
sti
cmp
int3
ja
push
jns
inc
stos
clc
adc
and
mov
pop
adc
cmpsl
dec
loopne
lods
jo
mov
fwait
in
xchg
nop
cmp
jge
pop
mov
mov
nop
add
call
pop
lret
xlat
cltd
cmp
gs
mov
xchg
xor
repz
jae
rorl
mov
popa
push
and
shrb
jae,pt
shlb
cli
lods
idivb
cli
dec
popf
mov
imul
mov
mov
cmc
loopne
adc
jae
mov
movsb
or
test
das
inc
inc
or
clc
cltd
pop
leave
xchg
out
xchg
pop
and
inc
lret
fmull
enter
hlt
or
aam
test
push
out
rcrb
and
xchg
fsubrs
movsl
add
sarb
lds
cmpb
and
scas
test
cli
pop
add
dec
cmp
xor
mov
pushf
aad
push
or
sub
jp
mov
shlb
lods
sahf
jge,pn
adc
test
test
jb
lret
add
and
scas
push
das
adc
js
jbe
mov
jno
xor
xor
lds
xor
cmpsb
loopne
lods
jno
jnp
dec
cmpsb
es
popa
and
ret
js
pusha
stc
jno
lcall
jns
jae
push
or
rcr
mov
test
cmp
fs
xor
cmp
push
push
test
jne
sbb
or
int
mov
mov
mov
mov
stc
lods
gs
inc
xchg
ds
ss
push
dec
xchg
inc
inc
pushf
rorl
adc
pop
add
push
push
cmpb
adc
stc
pushf
mov
pop
pop
adc
xchg
mov
les
sub
cmpsb
adc
push
out
lods
add
in
mov
sbb
cld
pusha
add
jnp
ljmp
das
push
loopne
cmc
or
inc
adc
or
pop
loope
int
pop
adc
or
stc
sbb
mov
mov
imul
jb
mov
and
add
cltd
sub
mov
lods
enter
push
cs
je
dec
mov
mov
mov
dec
ret
cltd
in
mov
push
cmp
mov
xchg
repnz
repz
insb
movsl
jmp
mov
inc
sbb
cmp
xor
ficoms
mov
das
xor
repz
xor
andb
sbb
xor
mull
fcomps
movsb
mov
jb
cli
ljmp
sti
loop
jo
fdivl
push
and
movsl
cs
sub
iret
repz
pop
lock
mov
and
and
cmpsl
int
std
add
xchg
or
cmpsb
icebp
lret
aas
das
push
cwtl
sub
or
into
test
ficomps
lock
in
outsl
sub
icebp
std
add
shl
cli
push
mov
loopne
inc
xchg
mov
getsec
iret
pop
sbbl
pop
fists
loope
enter
xchg
arpl
repnz
fwait
pop
mov
outsl
cld
hlt
mov
psrld
inc
push
inc
lods
mov
push
fsubr
sub
repnz
mov
cld
push
pop
xor
cmpsl
adc
push
xchg
mov
ljmp
mov
mov
xchg
jmp
mov
or
std
mov
imul
ss
lahf
imul
dec
adc
sub
iret
xchg
cmp
and
std
add
aaa
mov
xchg
ror
mov
dec
repz
jp
push
sub
int
xchg
or
sbb
test
and
lret
jp
mov
lcall
push
inc
jae
cmpsb
lea
jg
ja
mov
cmpsb
mov
jmp
int3
cmp
decl
xchg
das
outsl
int3
xchg
test
dec
or
pushf
sbb
and
iret
lcall
daa
fwait
pop
scas
mov
repnz
dec
popa
mov
test
scas
jnp
mov
int3
inc
dec
rcrb
out
shrl
jg
jp
loop
mov
enter
push
jnp
and
iret
movsb
push
shrl
roll
jo
shrl
push
sub
ret
jp
mov
adc
out
add
aas
jmp
inc
shll
pop
hlt
pop
rorl
rclb
ftst
jno
lcall
fsubrl
pop
mov
rolb
mov
jae
outsl
xor
adc
shll
data16
cmpsb
mov
cltd
cli
cmp
push
cmp
jg
sbb
movsl
outsb
jmp
dec
cmp
addr16
test
rcrl
xchg
lods
mov
adc
mov
mov
iret
cltd
mov
cmc
mov
cmpsb
imul
adc
sub
imul
mov
sbb
loop
jns
push
fdivs
dec
je
jecxz
pop
outsl
decl
arpl
bound
cmc
mov
andb
rcrl
jb
ds
push
fs
pop
push
scas
xlat
packuswb
mov
mov
stc
daa
lds
or
fmulp
hlt
sahf
cmp
hlt
or
dec
sub
sbb
imul
das
adc
and
dec
rorl
pushf
shlb
orb
dec
rolb
mov
in
outsb
push
fistpll
and
jge
popa
test
out
sub
dec
or
gs
fcompl
int3
adc
cmp
jp
mov
mov
mov
iret
jecxz
test
bound
fidivl
add
dec
and
push
pop
enter
inc
or
ret
addr16
lods
mov
out
push
fsubl
js
faddl
and
insl
scas
fstl
mov
mov
xchg
jmp
mov
out
int
push
cwtl
das
add
adc
cli
cmp
lcall
mov
aad
sbb
or
add
sub
jg
repz
xchg
cmp
aas
test
jmp
fnsave
and
mov
hlt
cmp
pop
push
push
xor
inc
xchg
mov
nop
rolb
xlat
push
or
fdivr
add
mov
in
fdivs
shlb
fadd
hlt
inc
lods
push
loop
nop
and
neg
lret
sarl
push
mov
in
das
cmp
leave
push
mov
mov
mov
jns
jnp
btc
mulb
mov
mov
shlb
enter
dec
rcrl
sbb
push
mov
and
int3
pushf
test
imul
xchg
cmpsb
pop
fistpll
adc
mov
sbb
pmaxub
sbbl
pop
in
mov
fucom
pop
cmp
pop
cwtl
leave
jne
push
mul
adc
and
xor
aaa
adc
jne
and
fisubs
int3
daa
fdivr
adcl
xor
addr16
iret
mov
push
orb
sti
push
int
ret
loop
inc
cmc
aas
xor
or
jns
or
push
xchg
xchg
add
hlt
in
mov
call
adc
mov
pop
mov
shll
sbb
inc
xchg
mov
hlt
push
push
aas
jmp
inc
insl
outsb
lret
sbb
cmc
mov
hlt
pushf
dec
mov
leave
mov
push
sbbl
xor
push
fcomip
sub
cmpb
inc
jmp
lods
sbb
lds
add
out
pop
cmp
mov
cmpsb
sbb
mov
loop
lods
movsb
nop
addl
insb
xor
adc
jge
add
loop
sbb
stos
pop
push
jae
into
ljmp
into
clc
dec
ljmp
cli
punpckhwd
mov
leave
pop
pop
lret
adc
cmc
adc
add
addl
push
stc
pop
mov
sbb
insl
ret
fldt
xor
sahf
icebp
outsb
clc
add
popf
or
fucomi
aam
fmull
pop
xchg
in
adc
mov
outsb
or
daa
inc
popa
and
mov
mov
loope
dec
sbb
mov
cmp
arpl
sub
inc
cld
adc
mov
inc
xchg
hlt
loopne
xor
aad
bnd
jl
ljmp
cmp
pop
testl
movsl
je
std
aam
lahf
mov
sub
ja
test
push
adc
xor
cmpsb
es
icebp
push
sub
xor
mov
push
rorl
xchg
sbb
xlat
sbb
imul
pop
xor
cmp
adc
or
fdivrs
jnp
sbb
pop
push
jg
dec
and
push
push
into
cmpsb
mov
jne
sbb
xlat
and
insb
push
mov
xchg
mov
inc
in
scas
sahf
sub
cmpsb
ret
mov
aad
pop
or
sarb
push
adc
stos
sbb
cmp
xchg
insb
insb
sbbb
out
fistpl
adc
xor
inc
push
rorb
dec
jecxz
nop
es
mov
xchg
fwait
push
and
mov
dec
inc
sub
addl
cmp
jp
cmpsl
jle
lock
add
aaa
lods
sbb
shrb
sub
push
out
lcall
js
xor
pop
ret
cltd
cli
mov
mov
jae
jbe
test
add
int3
xchg
fsubrs
into
into
dec
lret
adc
push
sub
dec
iret
xor
mov
xor
mov
mov
sahf
daa
aas
or
je
xlat
popf
push
das
test
popf
adc
lret
pop
adc
inc
push
insl
js
push
imul
jne
test
cli
jns
xor
mov
and
popf
xchg
inc
fwait
push
add
inc
arpl
stos
jl
insl
mov
xor
jne
enter
push
jns
dec
stos
repnz
cmpsb
int3
loop
mov
add
call
mov
outsb
out
imul
or
jmp
and
adc
xchg
cs
sub
xor
mov
sbb
fdivr
gs
xchg
sbb
pop
leave
pop
jns
or
dec
mov
pop
aad
mov
insl
lret
sarb
mov
xchg
adc
jg
mov
sbb
cmc
mov
jns
push
ljmp
push
bound
pop
fwait
subl
xorl
add
mov
pop
nop
xchg
outsb
xchg
mov
in
bound
insb
push
push
outsl
mov
ficoml
fwait
icebp
pushf
add
jnp
dec
es
in
and
and
cmpsb
sub
jecxz
cs
pop
and
sbb
cmp
fcompl
les
cmc
sti
add
and
push
adcb
dec
sarl
fwait
shll
movl
push
mov
test
mov
jge
lea
test
or
cld
push
lcall
jns
loope
push
jo
push
xchg
mov
icebp
pushf
in
bound
ficoml
shrb
fldenv
mov
jg
insl
xor
gs
inc
call
cmp
and
jg
test
movsb
daa
adc
xor
inc
dec
jns
movsl
imulb
xor
adc
insb
xor
imul
sbb
sub
adc
ret
or
xor
sbb
cmpsl
lds
push
xchg
jmp
aam
or
add
xchg
shrb
adc
iret
cld
frndint
nopl
jne
loopne
test
ljmp
jno
push
addb
sub
mov
sbb
icebp
cwtl
jnp
jl
push
mov
xor
jbe
lods
cli
and
sub
outsl
adc
sbb
cmpsb
int3
call
adc
shlb
mov
lods
rclb
and
les
cltd
or
adc
in
scas
adc
loopne
aam
cmpsb
mov
mov
neg
inc
adc
cmp
loope
xlat
cmpsl
xor
clc
icebp
sbb
inc
and
push
sbb
cld
pop
jns
lcall
jg
out
jmp
in
outsl
test
mov
pop
xor
inc
cmpsb
test
mov
pop
lret
mov
lea
xor
fsubr
out
stos
enter
jp
jns
mov
fistpl
mov
bound
lds
mov
pop
out
dec
aas
pop
mov
xor
das
sahf
mov
ljmp
or
in
jmp
jmp
shll
sbb
mov
fmuls
aaa
leave
aas
lret
jb
mov
and
push
or
sub
out
sub
mov
mov
mov
addr16
and
or
ja
call
inc
jmp
outsl
ja
mov
std
jecxz
lahf
jns
rcl
dec
imul
dec
outsb
movsb
movsb
xchg
mov
xchg
pushf
enter
adc
cwtl
pop
inc
adc
inc
rolb
jge
xor
loop
in
lret
xor
mov
dec
test
or
nop
stos
dec
int3
ret
adc
packssdw
clc
pop
jp
jae
lret
xor
jmp
aas
xor
mov
addr16
mov
gs
and
sahf
mov
or
push
cmc
push
push
test
and
subl
or
cmp
xchg
test
scas
repz
stos
stos
sahf
or
sbb
ret
xor
fcompl
pop
scas
mov
xchg
jecxz
sarb
jbe
dec
push
or
push
push
sbb
mov
pop
adc
lret
xchg
xor
mov
sbb
mov
or
adc
fwait
and
cmp
pop
jnp
sub
sbb
fdivr
pop
pop
data16
push
lahf
ss
jnp
xchg
mov
mov
add
fcomps
mov
pop
idiv
jp
xor
sbb
icebp
xor
push
mov
int3
xchg
stc
cltd
dec
ret
pushf
lods
jbe
lret
sahf
fcompl
test
fidivrl
mov
imul
sbb
dec
aas
pop
sahf
mov
sub
repnz
popf
add
fisubs
mov
mov
cmp
sbb
lods
and
outsb
inc
aaa
adc
jbe
insb
popf
pop
xchg
cmpl
add
pop
fs
mov
jl
fisttpl
fucomi
or
push
sbb
cmpsb
sub
sarb
mov
call
cmp
or
cwtl
mov
mulps
in
sub
fdivs
mov
jp
sub
jle
mov
or
lcall
add
outsb
pop
insb
cmpsl
mov
or
mov
adc
popa
aam
in
lcall
push
lret
sub
push
xor
bound
pusha
arpl
sbb
mov
scas
and
inc
add
outsb
aas
repz
xchg
clc
mov
out
pop
push
repz
popf
mov
push
lock
sub
inc
push
cmp
or
jmp
xchg
sbb
lahf
mov
ret
pushl
popa
insl
inc
dec
jmp
xor
cmp
mov
and
imul
cmc
mov
jnp
lods
xor
push
leave
mov
xor
ret
mov
ss
or
dec
jge
dec
mov
adc
inc
andb
mov
leave
aas
inc
xchg
mov
xchg
and
fs
mov
or
adc
add
xchg
rol
fcoms
push
xchg
stc
ret
enter
mov
jnp
mov
fwait
mov
ret
lea
or
out
and
rol
xor
fwait
mov
xchg
into
rcll
pop
ljmp
jmp
imul
aas
pop
xlat
and
jns
mov
fwait
and
rol
dec
and
jp
imul
insb
jae
movsl
daa
out
rclb
jae
stos
sbb
cmp
pop
loopne
jmp
ret
stc
mov
jecxz
adcl
xor
jns
leave
sub
jp
jo
cmp
sbb
out
daa
xchg
fadd
jp
jmp
cld
cld
xchg
xchg
dec
movsl
dec
sbb
cs
pop
dec
js
iret
orl
pop
jge
xchg
iret
mov
fldcw
xchg
gs
jo
sub
or
jecxz
xor
sub
test
pop
and
iret
dec
xor
and
cwtl
pop
stos
std
es
icebp
xor
adc
je
bound
js
daa
push
cmp
push
movsl
and
shlb
sbb
scas
sbb
daa
daa
out
inc
dec
clc
jmp
push
push
rcr
jge
dec
movsl
push
mov
test
sub
inc
mov
mov
adc
and
add
leave
jecxz
xor
mov
and
dec
into
fwait
mov
jno
bsf
mov
sub
inc
jmp
stc
cmpsl
jle
popa
test
bound
addr16
mov
xchg
sbb
dec
mov
mov
mov
int3
xchg
ljmp
into
daa
push
movsl
loopne
xchg
jns
cmp
fstpt
pop
cmp
sbb
test
ss
push
jo
in
mov
dec
dec
shlb
mov
dec
pop
test
lret
jge
xor
jmp
addr16
pop
pop
pushf
ret
add
in
or
jp
mov
cmpsl
xchg
fisubs
fcom
sub
stc
jle
sbb
push
mov
jle
xchg
out
mov
sbb
hlt
inc
xchg
ret
push
fldl
adc
xor
sub
or
lahf
pop
pop
sub
stos
or
sub
arpl
mov
jle
orl
mov
std
test
xchg
cmc
int
andl
dec
sub
jo
pushf
sub
jle
xchg
shlb
xor
xchg
sti
jno
or
icebp
jle
sub
jo
pop
dec
xchg
inc
and
jmp
push
dec
push
das
push
jb
push
inc
jbe
jmp
mov
cmpsl
lea
repz
dec
jecxz
pop
push
insl
push
xchg
jecxz
movsl
cmc
mov
xchg
push
inc
xchg
test
pop
lret
nop
sbb
lods
arpl
dec
leave
jecxz
xlat
adc
sub
jmp
and
arpl
popf
sbb
test
in
sbb
push
inc
push
mov
adc
clc
jmp
adc
repnz
cs
and
or
adc
and
jo
test
push
outsb
mov
cmpsl
inc
adc
test
add
sub
and
enter
push
cltd
les
sub
and
and
imul
dec
cmp
sarb
jl
sbb
shrb
xchg
push
loope
fidivs
sub
leave
jb
addr16
mov
push
pop
push
ss
clc
jmp
jb
int
jmp
xor
push
jbe
sbb
repz
rcl
fucomi
jo
mov
lods
pop
inc
mov
and
insl
jnp
ds
popf
xchg
mov
int3
fidivs
jg
rcl
jl
insl
test
mov
hlt
out
sub
cli
ficompl
push
aas
imul
outsb
mov
ds
mov
sti
push
lret
mov
sbb
inc
xchg
push
fstpt
inc
imul
gs
daa
cld
mov
cli
rorl
sub
add
push
adcl
rcll
sub
cmp
push
cmp
jns
call
or
lahf
clc
fs
dec
popl
mov
ja
in
adcb
loop
and
outsb
add
loope
cmpsl
cmp
insl
imul
and
aam
dec
ret
int3
je
cmpsl
data16
out
outsl
xor
filds
mov
xchg
xor
lock
pop
pop
sti
dec
dec
fs
xchg
fnstenv
lods
sbb
cmp
fucomp
pop
fsubrs
jecxz
pop
cmpsb
shll
add
jns
inc
loopne
dec
pop
cmp
cmp
adc
ss
out
sbb
jmp
pop
fwait
scas
loop
pop
jecxz
push
mov
cmpsl
push
push
xchg
repz
imul
inc
push
lock
cmpsl
movsl
insb
popa
xor
jns
adc
push
fnstenv
aad
push
or
pushf
enter
mulb
repnz
xchg
popf
cld
adc
pop
mov
ret
jg
add
out
mov
jl
fildl
xchg
sbb
test
jmp
repnz
test
test
fs
jl
jmp
sub
xor
pop
sbb
cmpsl
and
in
mov
cmpsl
xor
aas
loopne
sbb
scas
inc
filds
mov
rclb
adc
jecxz
cmp
mov
mov
xor
fmul
fcmovnbe
repz
or
mull
rcll
mov
sbb
mov
repnz
fidivrs
jp
xchg
jns
pop
and
sbb
scas
in
inc
mov
mov
cmp
ljmp
add
mov
clc
pop
ljmp
stos
jecxz
push
lahf
add
mov
push
pop
insl
popf
stos
or
das
neg
sub
jge
inc
mov
push
int3
mov
iret
cmpxchg
mov
dec
dec
call
shl
push
fs
and
mov
les
maxps
lret
test
xor
jl
mov
test
jge
lret
dec
mov
add
lods
jns
jl
pop
cli
ljmp
es
xchg
icebp
jmp
push
jno
shll
dec
add
in
ljmp
pop
add
mov
ffreep
jne
sbbl
jo
int
out
mov
push
call
dec
dec
jp
pop
xlat
scas
sub
hlt
sbb
or
push
xchg
push
dec
xchg
mov
cmp
push
mov
jb
mov
push
cli
out
and
movsb
lahf
fwait
dec
pop
mov
mov
pop
inc
xchg
ss
faddp
push
cmp
call
mov
sahf
outsb
mov
cmpb
jmp
test
mov
inc
bnd
js
call
ret
lea
out
test
push
jo
sahf
insb
bound
cmp
loop
sub
mov
ljmp
jl
mov
dec
mov
jno
inc
in
js
frstor
andw
push
fwait
out
jb
push
jno
fsub
mov
aaa
adc
adc
or
xchg
pushf
jb
loop
jns
mov
cmp
ja
xchg
xchg
dec
adc
xchg
imull
inc
lcall
call
jno
jmp
pop
mov
sbb
push
aas
push
mov
lret
jmp
mov
xor
daa
call
cmp
cmpsl
push
mov
pop
cmp
jle
cmpsl
or
mov
fsubr
xorb
cmp
shl
push
in
push
mov
popf
js
incl
pop
mov
or
out
sahf
cmp
aas
subl
pushf
pop
dec
add
int
jecxz
push
mov
cmp
mov
inc
out
cld
pusha
push
push
adc
test
test
sub
push
enter
fwait
das
xor
push
xor
push
mov
nop
movl
pop
cs
push
divl
add
hlt
sarl
jge
outsl
sti
push
sti
adc
dec
pop
std
xlat
sbb
add
aam
lods
push
fsubrs
mov
lods
test
push
shll
adc
mov
in
ja
out
popa
mov
lcall
arpl
adc
pop
pop
adc
sub
pop
or
shr
jae
jmp
inc
pop
les
lahf
out
or
repnz
mov
shr
push
xchg
or
mov
fnstcw
xchg
je
cmp
xor
bound
xchg
idivl
add
lods
hlt
test
outsb
dec
add
xchg
les
adc
cmpb
es
idiv
mov
push
in
mov
or
sbb
sbb
addr16
cli
int3
mov
gs
push
inc
jbe
gs
xchg
push
loop
jle
push
out
stc
and
sub
or
jmp
inc
lods
push
jmp
pop
dec
movsl
cli
or
inc
movsb
imul
ds
push
sub
pop
pop
ss
stc
scas
les
or
in
divb
cmp
mov
pushf
mov
pop
pop
je
movl
push
xor
pop
add
push
pop
push
dec
pop
dec
xchg
sub
xchg
dec
mov
imul
sub
mov
mov
xor
add
jmp
mov
mov
mov
mov
xor
add
xor
div
mov
xor
lea
mov
mov
mov
mov
jmp
pop
adc
test
fadds
add
dec
lret
jge
add
in
mov
and
inc
mov
jne
scas
xor
mov
sub
xor
push
std
jecxz
call
jae
pop
pop
test
xchg
pop
mov
dec
xlat
mov
dec
outsb
jae
or
cli
fldenv
dec
jno
rclb
push
mov
subb
imul
stc
mov
testb
stos
jecxz
pop
mov
movsb
imul
idivb
mov
or
sahf
or
sbb
cmp
int
push
cmp
push
mov
adc
mov
cmovge
push
mov
cmpsl
adc
loop
jge
movsb
pop
or
clc
mov
les
insl
lea
je
mov
or
xlat
leave
push
aad
cmpsl
idivb
lret
aas
inc
aas
js
cmpsl
aaa
popf
ja
in
pop
jl
das
neg
push
pop
in
cmpsl
mov
std
lods
in
mov
vpcmpeqd
or
and
aam
lods
mov
sub
jo
inc
xchg
and
fsubrl
push
negb
cmp
jae
adc
inc
test
loop
mov
xlat
fnsave
lods
cli
into
or
mov
mov
jne
js
add
xor
adc
and
cltd
incb
lret
inc
inc
push
push
clc
hlt
or
xor
in
cld
ds
pop
insl
popf
cmpsb
jnp
cmp
rorl
es
fimull
jae
loopne
sub
loop
repz
jne
daa
mov
lods
testb
notb
and
jl
aas
addr16
fabs
call
sub
jg
sahf
jns
pop
mov
mov
mov
mov
stc
dec
adc
pop
and
pusha
cmpsl
fnstsw
fstl
xchg
insl
jp
movsb
subb
arpl
adc
lds
mov
in
mov
add
ret
testb
dec
cmp
adc
mull
cli
adc
mov
mov
jae
xchg
scas
shrb
in
inc
xchg
dec
ret
sti
mov
cmp
repnz
stc
out
aaa
adc
inc
mov
aam
dec
js
fildll
push
xchg
jnp
dec
iret
push
pop
mov
jnp
lcall
push
stc
jle
bound
dec
sub
jns
and
xor
xor
or
mov
xchg
fldenv
or
xor
push
mov
pop
test
jl
bound
adc
ja
cmc
test
cmp
and
xchg
xor
insb
stos
dec
pop
rcrb
std
add
das
ja
mov
jno
lcall
sbb
mov
adc
cmc
adc
das
out
ret
push
arpl
add
stc
add
jge
sub
xor
or
add
in
cmp
mov
dec
aad
mov
mov
dec
aas
xor
mov
das
dec
jge
cmp
push
mov
add
or
xchg
mov
fdivs
dec
in
lds
dec
jl
mov
lcall
enter
push
fdivrl
inc
outsl
jnp
jmp
pop
dec
dec
cmp
and
stc
xchg
in
aad
mov
outsb
pop
es
or
xchg
int
orl
mov
push
test
fsubr
je
dec
xor
sub
lea
ret
add
mov
pop
cmp
lret
mov
fcmovnb
in
sub
fwait
lea
push
cmp
dec
nop
sub
and
jle
es
add
ret
push
pop
or
mov
mov
aas
sbb
divl
gs
cwtl
sbb
loopne
ja
sbb
add
cld
popf
call
scas
idivl
cli
mov
push
pop
add
cld
fsubp
mov
push
mov
addr16
adcb
adc
mov
std
ljmp
test
popf
push
jb
jecxz
push
stos
fucomip
aas
stos
scas
push
mov
sbb
push
lret
xor
test
jo
jno
mov
push
test
ds
inc
or
pop
loop
out
sbb
fwait
pop
push
movsb
sahf
lods
in
push
mov
pop
dec
mov
fwait
or
push
pop
sbb
popf
push
lahf
rcr
or
adc
or
scas
mov
lock
adc
xchg
mov
sahf
push
mov
aad
and
xlat
cld
repz
jle
xor
cmp
movsb
ret
and
or
bound
out
insb
clc
mov
mov
mov
loopne
and
enter
leave
loope
xor
xchg
sub
repz
ret
xor
inc
jp
mov
mov
jmp
pop
test
push
cmpsb
sbb
mov
dec
and
nop
and
dec
fisttps
push
or
xchg
jmp
pop
in
iret
out
std
clc
repz
fs
movsl
push
es
pushl
into
call
shll
add
dec
jnp
inc
inc
mov
xchg
add
and
mov
inc
data16
mov
iret
dec
push
mov
insl
ss
sbb
aad
pop
inc
adc
in
cli
pushf
cmp
cs
push
pop
adc
scas
mov
pop
jecxz
push
fdivrs
movsl
aas
mov
pop
push
rcll
push
rcl
insb
xor
aas
mov
dec
mov
jmp
add
push
dec
jg
pushf
or
and
cmc
mov
inc
clc
nop
rcrl
fucomip
imul
enter
and
in
jecxz
pop
hlt
mov
int3
add
leave
popf
repz
or
les
jg
mov
lahf
cmp
inc
ss
lahf
paddsw
and
push
push
jne
cmp
lret
inc
fistpl
mov
mov
jle
adc
inc
in
push
dec
mov
popa
shlb
aas
sub
xchg
jnp
ror
sbb
jmp
icebp
push
out
insl
inc
cmp
stos
cs
add
mov
jbe
inc
cld
je
adc
push
jbe
pop
mov
pop
mov
add
scas
bound
lret
iret
mov
clc
fmulp
inc
adc
or
sbb
inc
cmpsb
shlb
in
insb
cltd
and
lea
dec
jl
mov
fucomi
cmpsb
mov
add
sbb
test
aas
fsts
jno
sbb
adc
lods
mov
jge
pmulhuw
mov
iret
sub
je
scas
sbb
movsl
scas
dec
sub
jg
jle
and
mov
outsl
inc
sbb
mov
and
mov
mov
addb
pop
push
pop
out
inc
sub
je
inc
and
js
xchg
or
xchg
xchg
outsb
and
out
decl
push
sbbl
mov
jns
lds
add
and
push
jmp
lcall
pop
lahf
push
pusha
sub
cwtl
dec
cwtl
or
hlt
nop
xchg
inc
mov
lock
jne
std
icebp
xlat
jecxz
arpl
test
sbb
sbb
add
mov
stos
xchg
loopne
aam
mov
lahf
sti
cmp
jl,pt
sub
subb
adc
mov
enter
xchg
out
lock
fildll
mov
subl
mov
test
out
or
das
test
arpl
sub
ret
les
outsl
repnz
out
insl
lds
mov
lahf
pop
push
das
mov
filds
jns
xchg
push
mov
nop
pop
dec
sbbb
xchg
cmpsb
add
incl
adc
test
les
inc
adc
clc
or
pop
xchg
sbb
mov
inc
in
ja
dec
pusha
add
stc
or
rclb
mov
popf
sub
inc
icebp
neg
repz
mov
mov
roll
pushf
jl
popf
cs
pop
imul
fwait
repnz
int
insl
test
cwtl
and
popa
lock
incl
cmp
lcall
rolb
push
mov
inc
mov
jg
insb
into
and
loopw
xchg
mov
rcrl
icebp
inc
push
or
add
add
hlt
arpl
or
pop
mov
pusha
ret
cmp
xchg
fucomip
cli
xchg
pop
fwait
ds
rcrb
dec
sbb
fisubs
add
xchg
xlat
mov
sub
adc
mov
faddp
subl
lret
cltd
xor
xor
lret
into
insl
cmpb
jno
xchg
ret
popf
lahf
nop
sarb
xchg
lods
jecxz
aaa
sahf
lods
addr16
loopne
repnz
cmpsb
and
inc
iret
mov
add
adc
and
insb
add
hlt
dec
daa
sahf
pop
push
jbe
fcomps
cmpb
add
cli
mov
jl
xor
cmp
hlt
jne
roll
mov
mov
bound
shrb
jb
out
pop
jmp
outsb
cmpsb
push
xor
mov
bnd
js
pop
mov
cld
sbb
in
addl
jle
add
icebp
stos
xchg
mov
cmp
rorl
lret
std
inc
and
pop
jmp
jne
inc
jo
pusha
mov
mov
pop
out
aad
xor
in
cmpsb
mov
mov
rorb
ret
jbe
fcmovne
pop
pop
sub
out
jecxz
insb
ret
or
ret
push
xor
cmp
lock
push
adc
cli
push
sbb
leave
xchg
sbbb
xchg
inc
insb
jl
xchg
leave
iret
cmc
inc
cmpsl
fcmovnbe
mov
lock
and
mov
sbb
iret
or
add
fisubs
inc
inc
push
push
and
out
pusha
ljmp
add
xchg
dec
scas
lret
or
sub
test
repz
push
sbb
inc
fldcw
lods
orb
icebp
arpl
nop
ret
xor
fadd
or
and
push
stos
ljmp
push
enter
popa
push
mov
push
cmp
sahf
lret
add
cltd
mov
mov
pop
popa
and
mov
jecxz
dec
insb
notl
cwtl
inc
push
cmp
dec
cld
adc
add
sar
gs
sub
pop
sbb
sub
mov
int
daa
loope
sbb
add
test
mov
jmp
mov
cld
push
pop
adc
push
outsb
xor
adc
jg
sbb
aas
mov
mov
out
sbb
cmp
pop
xor
mov
nop
sbb
add
je
mov
push
rcll
jle
xor
lret
lahf
jne
mov
sahf
adc
inc
cmp
rolb
mov
or
out
out
mov
push
cmp
pop
sahf
mov
jmp
lret
mov
pop
xchg
mov
pop
aaa
insl
pop
stc
add
das
xchg
adc
jb
popa
dec
rcl
mov
movsb
cmovae
in
ret
adc
adc
call
push
js
into
test
dec
or
int
cmp
lock
aas
mov
cld
not
fsubr
bound
out
outsb
push
push
jle
nop
pop
sbb
into
mov
mov
cwtl
pop
cmpsl
ret
adcl
mov
mov
push
jl
rolb
pop
pop
push
outsl
push
add
cmp
push
sbb
scas
dec
sbb
lahf
or
lods
and
into
outsl
ds
mov
push
add
push
adcb
push
adc
mov
mov
jge
cmp
loop
push
shlb
inc
push
popa
jns
stc
sahf
ret
pop
cld
add
lret
mov
orb
push
cli
cmp
add
bound
sti
xor
pop
cli
jns
sbbl
pusha
or
imull
jo
mov
sub
push
aam
sbb
inc
jb
pusha
mov
sti
iret
test
arpl
addr16
test
out
xor
jg
xor
loope
in
out
pop
xor
or
mov
mov
jg
movsl
cmp
outsb
pop
jne
aas
xchg
int3
nop
shlb
std
jno
sub
inc
jp
test
push
mov
mov
outsl
sti
pop
insl
rcl
xchg
out
add
lret
repnz
add
out
lock
mov
test
out
pop
test
movsb
jmp
sub
pop
xchg
js
xchg
inc
mov
cld
cltd
jbe
and
jp
push
cmpsb
lods
test
insb
lret
pop
mov
addr16
cmp
sub
xor
sub
and
popf
and
cs
mov
insb
push
sub
sub
xor
add
or
push
dec
jb
jl
push
aaa
sub
fildl
movsl
dec
jle
adc
jge
mov
or
xchg
cmp
int3
loope
push
add
mov
mov
rorb
and
in
pushf
mov
push
fnsave
add
int3
stc
int
dec
sub
mov
and
aaa
jnp
dec
jl
mov
movsl
jle
sbb
xor
dec
mov
fldl
adc
pop
adc
inc
jle
fcomps
movsb
fists
test
lock
leave
add
test
out
int
insl
int3
sbb
dec
pushf
and
mov
cmp
incl
push
arpl
cltd
idivl
or
jge
daa
push
in
and
shrl
push
mov
cltd
cmpsb
in
jg
repnz
lods
add
scas
xor
test
or
daa
movsl
pop
outsl
cmp
mov
ss
sbb
aam
xchg
subl
ds
fs
in
mov
fwait
in
adc
jb
mov
insl
add
lea
push
mov
push
pop
sbb
dec
and
test
sub
xchg
sub
pop
imul
pop
jl
insb
inc
adc
loop
jne
pop
stc
push
cwtl
fidivrs
jne
fcmovb
arpl
adc
repnz
lods
jmp
dec
pop
or
sahf
popf
jae
hlt
jmp
loopne
sar
jl
sbb
push
je
cltd
sbb
loope
jmp
adc
mov
hlt
lahf
andb
pop
loope
cmp
push
mov
dec
mov
mov
lea
cmpsl
mov
stos
mov
leave
int
sar
pop
imul
fmull
dec
cwtl
inc
sub
pop
push
push
push
pop
push
pop
dec
hlt
sub
fists
ja
movsl
inc
inc
addr16
jo
in
ja
cs
lret
addps
sbb
jecxz
test
in
les
and
or
int3
insl
shl
mov
add
ja
inc
pop
xor
xor
insl
sub
lret
jl
jno
xor
fsubl
fadd
pushf
or
popa
in
test
aad
pusha
or
bound
xchg
xchg
iret
sub
inc
nop
leave
dec
mov
cli
lfs
testb
cmp
and
jmp
mov
jl
pop
pop
lret
icebp
pop
roll
std
mov
int
cmc
imul
xchg
push
fisttpll
fcoml
xchg
push
sbb
ret
inc
test
andl
push
or
adc
adc
sbb
push
sub
not
jno
stos
cwtl
movsb
insl
sbb
add
ret
jp
fisubl
cld
rorb
mov
shlb
jp
sub
inc
push
imul
popf
sub
push
xchg
mov
jecxz
ret
cmp
sbb
rcrl
xchg
int3
lods
mov
addr16
push
js
mov
pop
add
mov
fldt
and
fnsave
sbb
sbb
nop
lods
pop
add
in
aas
lret
push
mov
inc
push
popf
test
mov
and
popf
test
xorb
xchg
testl
mulb
insl
mov
jne
cmp
mov
leave
jp
pop
dec
ja
lods
sub
xchg
adc
out
in
mov
mov
test
mov
test
jg
insl
roll
dec
sbb
add
in
dec
adc
xchg
shlb
dec
mov
dec
jmp
les
and
cmp
test
jl
scas
push
xlat
repnz
mov
inc
enter
aad
inc
lods
pop
repnz
sbb
nop
mov
dec
xorb
outsl
sbb
cmp
mov
push
ret
xor
lods
push
xor
out
mov
sar
jmp
push
std
jae
ss
je
stc
lock
lcall
imul
fdivrs
shlb
xchg
enter
mov
or
sbb
lea
jl
sub
in
out
push
xor
scas
sbb
jbe
popa
aas
push
inc
push
jbe
lds
cs
fidivl
outsl
xor
ret
arpl
sub
jl
pop
or
daa
in
pop
pop
push
pop
pushf
cmpsl
aam
sti
inc
test
jne
push
xor
mov
mov
mov
ljmp
lods
mov
add
sahf
jp
lret
inc
jns
inc
daa
fnstsw
mov
shll
shrb
cld
dec
xor
sti
add
lea
negb
roll
jg
pop
in
sbb
dec
pop
aaa
scas
arpl
push
xchg
xchg
sbb
scas
pop
xchg
push
lcall
enter
in
sahf
arpl
xor
lret
dec
fwait
inc
jge
mov
imul
stos
jbe
pop
mov
jb
cli
mov
or
fxch
stos
dec
sbb
repz
jbe
mov
or
or
mov
in
pop
hlt
xchg
mov
jecxz
mov
lods
or
fwait
mov
jmp
es
mov
cmpl
pop
aam
and
ds
loopne
mov
mov
std
pop
mov
rorb
mov
sbb
xor
pop
add
dec
loop
dec
out
nop
out
hlt
bound
jnp
mov
pop
aad
enter
pop
sbb
cwtl
push
push
ljmp
lds
mov
das
gs
cmp
jmp
jnp
jl
xchg
testl
cmpsl
mov
fildll
jmp
xor
pushf
sarb
mov
loope
sti
adc
scas
cmp
ficompl
adc
dec
fdivrp
int
fcompl
add
dec
mov
fisubs
adc
jno
adc
addr16
andl
adc
push
xor
adc
cmpsl
je
nop
fisttpll
cmpb
cltd
bound
mov
fsubrs
dec
imul
pop
sbb
dec
dec
add
idivl
cld
mov
stc
sub
mov
jmp
hlt
pop
mov
in
pop
sbb
in
ffree
sbb
out
mov
cmc
sbb
outsl
test
xchg
xlat
insl
lds
inc
mov
sub
ja
insl
jnp
fstpl
push
test
mov
je
pop
out
test
outsb
je
into
push
jno
mov
loop
into
jmp
rolb
insb
je
fiaddl
sub
out
pusha
add
imul
pop
mov
push
mov
sub
mov
add
push
shrb
cmpsb
scas
mov
pop
fucomip
cmp
jle
inc
and
cmpsb
sub
loopne
daa
arpl
mov
jle
shll
test
jge
inc
loop
or
test
lods
roll
cmp
mov
jp
mov
sarb
mov
loop
rol
pop
sahf
pusha
out
sub
or
daa
inc
mov
jno
add
ret
hlt
repnz
mov
std
rolb
or
iret
ror
dec
dec
je
movsb
je
cmpsl
lahf
push
mov
bound
jnp
addr16
scas
add
shrb
aam
lods
aam
or
mov
je
cmp
adc
cmp
out
inc
xor
pop
mov
sbb
shrl
fs
jne
cs
fisttpll
jae
cmp
pop
lahf
stos
pop
aam
lods
and
mov
les
push
sbb
sbb
scas
xchg
xor
jmp
pop
push
cmpsl
cmp
shl
hlt
bound
push
lea
std
cmpsb
rcr
xlat
mov
loopne
iret
shlb
in
dec
fisubs
popa
pop
cmp
repnz
and
or
ret
das
in
pushf
mov
iret
push
imul
fwait
ds
sub
cli
in
push
in
sub
pop
pop
jb
inc
sub
js
lret
or
inc
and
push
push
addl
pop
sub
and
loopne
jb
lahf
cltd
js
pop
sbbb
aad
add
pusha
mov
out
lret
inc
das
shl
adc
cli
cmc
adc
popa
in
and
movb
test
and
addr16
jg
mov
cmpsl
inc
inc
in
scas
xchg
enter
or
dec
and
mov
lret
xchg
add
rcl
dec
insl
adc
jle
mov
es
out
mov
iret
pop
loopne
iret
pop
fcoms
mov
std
adc
push
jmp
jae
ds
mov
pushf
cltd
imul
cmp
jno
daa
push
push
mov
mov
sub
xchg
or
pusha
jecxz
xorl
add
cltd
les
sbbb
fsubr
and
nop
shll
lret
addr16
data16
jp
fldl2e
sbb
mov
and
inc
adc
add
push
sbb
aaa
xor
sbb
clc
out
xor
push
xor
ja
and
push
test
inc
or
add
push
inc
pusha
mov
test
jmp
push
pop
gs
adc
jmp
in
push
in
push
inc
cmp
mov
cmpsl
inc
pop
pop
data16
xor
lods
mov
add
inc
and
and
jg
out
inc
loopne
outsl
jge
dec
jo
cwtl
lret
shr
sti
pop
pop
xchg
jl
dec
cli
fldl
in
nop
out
icebp
jl
repnz
jg
pop
mov
mov
add
lock
push
pop
fiadds
push
test
imul
ljmp
ror
scas
out
stos
push
hlt
ret
repnz
je
lea
jmp
dec
movsb
mov
pusha
cld
in
repz
inc
inc
fsts
mov
shll
popa
cs
fimuls
dec
std
icebp
or
stc
rcrb
loop
pop
icebp
xorps
mov
das
or
mov
cmp
cmp
test
and
jmp
adcl
xchg
sub
mov
push
inc
dec
decl
add
arpl
xchg
ss
xchg
jns
clc
xor
mov
adc
add
stos
add
and
bound
and
pushf
jbe
fwait
and
shr
push
rcll
push
icebp
xor
dec
add
cmp
xchg
shll
movsb
cmp
cmp
xor
add
aas
rcrl
cmp
lods
aas
mov
lock
lock
out
ja
mov
insl
xchg
push
push
sbb
in
pop
xor
aas
movsl
xchg
popf
lret
pushf
imul
iretw
push
sub
jae
jle
adc
ds
stc
mov
jns
mov
mov
faddl
jae
add
sbb
test
insb
clc
gs
in
xchg
cmp
or
sub
dec
xchg
mov
addr16
les
mov
or
push
cmp
sbb
imul
mov
xor
push
mov
sbb
std
jne
loopne
mov
add
adc
mov
dec
pop
iret
addr16
std
xchg
sbb
cmp
std
mov
add
addb
cmpsb
sbb
in
jne
in
sbb
xchg
adc
out
popa
fdivl
adc
adc
lret
mov
jge
popa
and
mov
lods
in
insb
and
enter
jns
inc
xor
pop
pop
xor
sub
rolb
test
leave
rcr
fldenv
fsubrp
mov
cmp
and
jns
insb
xor
push
aam
fildl
stc
and
add
cmp
loopne
xor
cmpsl
inc
or
aad
addr16
clc
xchg
push
dec
ds
xchg
fnstcw
fcmovbe
shrb
fldcw
mov
adc
cltd
sbb
mov
xchg
mov
rclb
in
daa
push
sub
icebp
mov
popa
pop
scas
sub
jl
shlb
lahf
cli
xchg
pop
or
repz
ds
icebp
mov
mov
sub
vmwrite
lds
mov
scas
test
cmpsl
mov
add
ret
pop
jo
and
mov
sub
cmp
les
out
lret
push
jg
in
add
mov
xchg
add
cmp
out
xchg
inc
add
xchg
xchg
or
nop
sub
cmp
leave
shl
lret
lret
stc
or
icebp
cwtl
add
fisubrl
icebp
loopne
or
pushf
pop
xchg
and
pop
icebp
sbb
imul
add
shl
push
out
mov
cltd
jp
cmp
orb
pop
xchg
sbb
loope
xchg
jge
add
cmp
jne
mov
push
ja
dec
push
inc
mov
int3
pop
jns
dec
jp
jno
xchg
xchg
inc
and
push
pop
cmp
out
ljmp
push
test
outsl
pop
add
xlat
in
cmc
dec
xchg
lea
adc
icebp
repz
stc
mov
test
ficoms
popa
xchg
nop
hlt
mov
inc
push
std
jb
or
add
mov
sti
mov
lods
out
xchg
push
mov
stos
push
xchg
scas
adcl
repnz
xchg
cmp
lcall
movsb
mov
sarl
scas
js
lret
and
cltd
int3
xchg
outsb
and
popa
stc
sarb
or
sub
mov
adc
pop
or
xchg
mov
mov
cmpsl
xor
in
add
xor
in
sbb
fprem1
fcoms
adc
and
add
push
movl
pop
fiaddl
aam
sti
fists
dec
add
jg
add
push
or
fwait
sub
test
ret
popa
jns
out
cs
rcll
sbb
pop
aaa
decb
and
cwtl
fcoms
incl
ret
scas
popa
push
loopne
in
push
inc
ds
xor
out
push
das
faddp
xlat
jl
push
ds
addr16
cltd
and
movsl
outsl
and
push
daa
rcll
es
pop
dec
stc
push
lea
jbe
sub
add
adc
cmp
sbb
sarl
dec
lods
jle
movsb
ds
jle
pop
pop
mov
sbb
xchg
jno
call
push
push
mov
dec
addb
mov
push
pop
dec
cmp
add
leave
mov
push
notl
sub
aam
out
xchg
call
pop
inc
cwtl
add
jnp
add
fcoms
mov
mov
dec
repnz
in
dec
frndint
mov
sarb
jnp
push
sub
imul
je
pop
rcll
inc
sbb
push
jae
xchg
divb
leave
xchg
or
popa
sub
jge
inc
jg
aad
mov
insb
cmc
js
dec
mov
fistl
add
outsl
clc
cmpsl
leave
js
nop
sbb
adc
push
or
and
loop
push
aaa
mov
push
push
inc
imul
sub
cmp
cmpsb
mov
mov
aas
test
jg
mov
stos
jle
push
inc
adc
cmp
xor
outsl
dec
sarb
jle
loopne
bnd
mov
loop
repnz
mov
scas
cmpsb
mov
das
mov
test
mov
test
sub
cmp
push
sbb
mov
pop
fidivs
xchg
mov
hlt
les
jno
shlb
push
into
ror
scas
outsb
jae
into
mov
xchg
cmp
inc
push
push
sbb
into
jmp
repnz
or
jno
xchg
and
cmp
jne
dec
call
out
mov
jecxz
adcb
nop
mov
push
inc
xchg
dec
xchg
pop
lret
push
push
and
mov
rorb
cmp
push
fmuls
fwait
lahf
sbb
push
lods
hlt
dec
jno
adc
push
int3
ss
mov
jo
mov
outsb
mov
sub
clc
out
dec
pop
mov
cs
push
sub
fbld
pop
inc
lds
adc
adcb
xchg
lret
shll
loope
cmpsl
mov
in
idivb
xor
cwtl
fwait
push
or
pop
scas
insl
jp
xchg
jns
iret
nop
arpl
std
stos
jmp
movsl
fwait
scas
clc
jnp
icebp
xchg
pop
jb
ja
out
sbb
ret
sbb
outsl
cwtl
js
cli
cwtl
jnp
jg
inc
cmp
mov
dec
or
sbb
mov
jbe
test
push
outsl
test
push
loope
xchg
or
and
lods
push
mov
dec
loop
cmp
mov
dec
push
fists
adc
xor
daa
jg
arpl
add
mov
iret
lcall
cli
xor
xchg
jnp
xor
daa
int
xchg
xor
mov
fnstsw
xchg
pop
lock
sbb
inc
arpl
jb
fs
sub
add
xchg
sub
xor
adc
push
jnp
mov
sarb
mov
sbb
movsl
repnz
adc
stos
rorl
ljmp
jg
xchg
leave
lods
mov
out
movl
sbb
dec
or
test
and
jecxz
out
push
mov
xor
pop
and
pop
leave
add
cmpsb
sub
ret
jno
cmp
repz
xchg
or
cmp
pop
cwtl
jbe
mov
in
loopne,pn
or
mov
rcrl
push
mov
gs
adc
sbb
mov
aad
insl
ja
or
jb
imul
mov
js
test
andl
dec
cmp
mov
sbb
add
cmp
push
cmpsb
cmp
into
mov
daa
aas
cmp
in
insb
scas
ficoms
sub
inc
inc
aam
sub
dec
addr16
inc
rcl
pusha
cmp
push
nop
shlb
jb
mov
pop
outsb
push
outsb
fstps
test
in
test
sbb
cmp
std
adc
xchg
stos
lahf
adc
fildl
and
sar
mov
sahf
lds
inc
dec
adc
pop
clc
push
ret
test
les
dec
test
adc
jo
push
mov
xchg
inc
pop
pop
inc
sub
dec
sbb
and
xchg
adc
dec
ljmp
insb
pop
insl
jmp
dec
add
jo
cmpsb
xor
xchg
ja
mov
insl
mov
jge
jo
lods
xchg
jns
dec
jge
xchg
jnp
add
jbe
mov
pusha
fs
push
jmp
fwait
push
call
into
adc
add
mov
pop
cmpsb
movsb
mov
outsb
clc
arpl
sub
jmp
lea
loop
jle
outsb
or
push
xchg
mov
dec
or
stc
fisttps
test
push
fcomp
out
addr16
jbe
xlat
arpl
dec
xor
fs
xorb
inc
dec
jp
or
xlat
jle
fwait
pop
xor
das
sar
pop
cli
imul
push
lret
push
mov
fldenv
insl
shlb
mov
inc
mov
xchg
sub
xchg
push
jbe
xchg
lock
xchg
in
cmp
add
fwait
inc
pushf
pop
cmpsb
xchg
dec
cmp
mov
addb
jbe
inc
cmp
mov
ja
fnstenv
and
int3
icebp
lea
lea
mov
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jne
mov
xor
add
mov
mov
add
xchg
xor
push
mov
pop
mov
add
lea
add
add
push
inc
pop
dec
xchg
dec
xchg
dec
xchg
dec
push
mov
pop
dec
call
cmp
je
xchg
push
pop
push
pop
inc
xchg
sub
xchg
dec
dec
mov
imul
add
xchg
push
xor
mov
dec
inc
add
dec
xor
add
pop
mov
pop
pop
pop
leave
ret
push
mov
push
movl
and
mov
or
mov
dec
mov
xor
add
adcl
mov
sub
mov
andl
xor
add
inc
mov
cmpl
ja
jmp
pushl
pushl
push
push
push
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
xor
push
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
pop
leave
ret
push
mov
sub
movzbl
sbb
mov
mov
mov
xor
mov
xorl
add
movzwl
mov
andl
movb
adc
lea
movl
cmpl
je
cmpl
jbe
jmp
pushl
push
call
mov
dec
mov
jmp
mov
mov
subl
mov
xorl
xor
addl
sub
addl
mov
andl
xor
xor
inc
mov
cmpl
jge
jmp
pushl
push
call
cmpl
jne
xor
xor
inc
mov
cmpl
jb
movl
andl
push
notl
movl
mov
addl
push
movl
cmpl
je
cmpl
jl
jmp
push
push
push
call
mov
dec
mov
jmp
mov
andl
xor
mov
xor
mov
sbbl
push
add
movl
jmp
movl
mov
movl
mov
movl
inc
cmp
movl
jb
mov
xor
add
jmp
sub
mov
mov
or
mov
xor
mov
addl
add
adcl
movzwl
movl
mov
mov
movzwl
addl
xor
adcl
add
mov
mov
mov
inc
inc
mov
cmp
jmp
shl
inc
dec
cmp
push
mov
pop
cmp
xor
jp
jge
inc
push
imul
xchg
hlt
xchg
je
push
pop
push
shlb
jmp
movsl
aas
out
or
repnz
sbbl
dec
sarl
inc
xlat
aas
mov
cld
pop
pop
cli
js
jns
mov
sub
cmpsl
les
cld
inc
push
aaa
das
push
adc
out
sbbb
lea
cmp
pushl
sub
pop
pop
mov
inc
cmc
xchg
sbb
andl
add
push
in
xchg
fwait
mov
fistpll
je
cmc
or
rcr
sbbl
adcl
leave
es
les
push
or
mov
gs
ds
inc
adc
mov
dec
das
popa
out
cmp
add
xchg
movsl
rorl
push
sti
ja
repnz
add
fisttpll
in
iret
sub
cmp
aam
mov
das
and
pop
es
cmp
icebp
mov
mov
rorl
outsl
lds
test
repnz
je
fdivrp
cmp
jne
pusha
outsb
insl
xor
adc
mov
repnz
mov
cltd
sbb
iret
imul
cmpsl
push
sub
xchg
sub
enter
adc
or
dec
insl
lods
repz
mov
sbb
jecxz
in
push
push
mov
stc
pop
stos
test
aad
jo
scas
or
gs
mov
or
adc
arpl
pop
cmp
mov
ja
jnp
pop
daa
xchg
mov
push
jg
sub
inc
mov
loope
cmpsl
test
int3
xor
add
aaa
push
dec
mov
pop
js
cmp
jae
mov
inc
jecxz
xor
and
fsubr
arpl
into
or
testb
mov
fldcw
sarl
xorb
xchg
xlat
pop
push
cmp
dec
mov
mov
sub
les
shll
cmp
leave
js
xchg
jne
mov
rclb
jne
stos
mov
pop
push
loop
mov
loopne
int3
adc
jmp
and
or
test
aaa
or
push
imul
dec
out
lcall
out
pop
ja
pop
or
iret
iret
hlt
sub
pop
es
pop
jne
adc
push
xlat
jbe
jge
loope
je
mov
add
xchg
xchg
jne
xchg
mov
in
hlt
mov
jl
clc
adc
jnp
out
jnp
fsubp
or
xchg
pop
out
mov
mov
sub
and
ds
cli
out
push
xor
xchg
dec
mov
cmp
cmpsb
push
inc
mov
lock
sub
pusha
mov
call
cld
pop
dec
cmpsl
push
xor
imul
push
addr16
rcll
js
setg
add
pop
dec
jb
mov
mov
inc
idivl
pop
cmp
xchg
jno
mov
fnstenv
fs
popf
movaps
or
inc
inc
aaa
bound
fildll
int
mov
addl
lcall
pop
and
movsl
jle
sti
sub
lcall
adc
dec
dec
rol
loop
cmpsl
cwtl
outsb
lods
addr16
mov
in
xchg
inc
cli
imul
shr
mov
sarl
sbb
add
cltd
mov
loop
rorl
dec
sub
sbb
mov
pop
fldenv
xchg
jne
js
dec
ficompl
ljmp
pop
ret
lret
stos
jecxz
ds
xchg
cmp
xor
jnp
arpl
jg
inc
lret
mov
sbb
mov
popf
cmpsl
rcr
jne
pop
mov
neg
jecxz
or
lcall
into
out
repz
sbb
scas
enter
mov
adc
push
xor
xchg
cltd
in
push
jo
fdivrl
cmp
sbb
add
sarl
or
sub
es
mov
outsb
xchg
rorl
popf
jecxz
call
push
gs
pop
xor
mov
mov
xor
das
lods
popf
or
lods
xor
in
push
pop
cmp
cmpsl
jecxz
sub
pushw
add
fsts
std
cmp
cli
ja
icebp
push
fcomp
jno
clc
push
pop
xchg
mov
xchg
jnp
aam
mov
test
add
sahf
xchg
xor
dec
cmp
lods
pop
cli
xlat
nop
stos
andl
jnp
mov
cmp
aad
fcoms
mov
rcrl
adc
dec
cmp
cs
push
mov
pushf
dec
push
mov
and
push
fiadds
in
in
add
fwait
mov
jae
inc
mov
push
xchg
xchg
push
and
fwait
ret
push
xor
mov
ret
cmp
rcrl
clc
sar
push
adc
mov
ret
mov
jle
add
in
add
sbb
adc
mov
lcall
add
pop
sbb
mov
inc
sub
adc
mov
movsl
cmp
fwait
test
outsb
mov
int
mov
stos
adc
enter
push
rcl
and
shrl
arpl
sahf
jae
rcrl
adc
sub
idivb
sahf
xor
cmp
dec
loop
icebp
stc
mov
imul
jp
in
sbb
pop
pop
push
dec
out
in
out
gs
lds
and
xchg
mov
pop
ret
call
stc
arpl
test
mov
add
fsub
ret
inc
sub
fdivl
imul
mov
add
daa
and
insb
imul
xor
jmp
mov
lea
ja
test
rolb
sti
mov
cmp
pushf
ds
in
scas
and
inc
pop
or
pmuludq
dec
repz
vrcpps
aaa
out
loope
xor
roll
adc
lahf
jo
mov
mov
mov
mov
gs
stc
es
xor
xorb
mov
lock
lret
xlat
inc
mov
dec
and
add
aaa
pop
and
stos
fmull
out
fidivs
mov
adc
std
sub
std
xor
das
pusha
out
orb
test
dec
sbb
hlt
outsb
push
dec
add
dec
ja
xchg
pop
and
mov
jl
mov
leave
jbe
shll
std
loopne
pop
mov
lds
popa
mov
test
mov
add
dec
and
or
movsb
mov
pushf
arpl
pop
test
and
mov
jle
sbb
sarb
or
mov
pop
cld
push
stos
out
sbb
sub
xchg
ja
pop
xlat
xchg
sahf
mov
clc
push
adc
pop
sub
dec
push
mov
movsl
icebp
pop
add
ss
mulb
pop
xor
cmp
outsb
push
idivl
inc
loopne
sub
pop
sbb
mov
out
jge
mov
aam
add
fsubrs
test
and
ret
mov
push
arpl
mov
lock
js
movsb
add
shrb
loop
pop
cmp
daa
add
adc
hlt
scas
repz
faddl
scas
add
fistpl
idivl
ds
fildll
jns
imul
ficoms
repnz
cmp
fcoms
loopne
push
rol
mov
push
xor
insb
sahf
push
clc
push
fs
fadds
clc
sbb
sub
sbb
test
aaa
gs
js
sti
mov
ret
dec
jno
and
mov
hlt
xor
cmp
mov
fdivrl
lock
mov
cmp
mov
mov
scas
jne
inc
mov
ret
xor
fs
fwait
data16
pop
les
sti
icebp
int3
nop
clc
repnz
jae
sbb
push
inc
sbb
mov
pop
lret
test
inc
icebp
sbb
adc
mov
jnp
pop
rclb
pop
sahf
and
ja
imul
sahf
std
mov
addl
add
out
sub
roll
cmc
fists
hlt
mov
xor
jne,pn
xchg
jecxz
sbbl
pop
push
adc
data16
and
add
ds
fdivl
movsb
es
sbb
addr16
popf
pushf
ret
sub
jmp
call
jb
pop
pop
ds
into
jmp
cmp
insb
mov
or
push
clc
es
push
mov
or
inc
aam
inc
dec
jo
shl
icebp
xchg
pop
mov
sbb
or
lods
xchg
dec
jne
add
mov
adc
mov
mov
orl
test
mov
sub
iret
fldl
add
mov
add
pop
mov
lods
ss
pop
push
notb
push
jge
gs
lods
cmp
mov
adc
or
les
movsl
cmp
xchg
add
orb
sbb
jl
fidivl
mov
mov
mov
jmp
inc
or
add
test
jp
les
notb
push
repz
add
inc
int3
cmp
stos
mov
adc
pop
rcl
dec
jp
in
out
jmp
int
sahf
rorb
test
cmp
jecxz
jle
cmp
out
push
clc
xchg
mov
add
xor
sbb
int
add
mov
loope
outsb
cmp
add
sbb
push
jno
cmpsl
push
sub
xor
adc
jbe
pop
sub
cmp
ds
pop
jo
adc
mov
add
and
sub
imul
sbb
lahf
rcll
push
dec
push
pop
pop
sarl
mov
sub
jb
sub
mov
push
sub
aaa
jbe
add
lock
cmc
cli
mov
or
mov
idivb
jmp
fsubs
mov
bound
pop
dec
xlat
or
mov
imul
int
test
push
out
cmpb
adc
rorb
mov
add
sbb
sahf
insb
adc
mov
stc
sub
pop
mov
mov
jl
cmpsl
and
jae
mov
shll
dec
sub
ret
ljmp
out
pushf
push
js
jae
pop
jb
pop
aaa
jnp
inc
xor
push
dec
inc
shrb
and
scas
fnsave
mov
loopne
mov
fs
push
rolb
lods
mov
jl
push
hlt
xchg
out
stc
inc
movb
jo
sbb
mov
or
push
outsb
les
inc
sti
add
pop
icebp
xor
filds
decl
inc
pushf
pushf
inc
dec
cmp
ffree
leave
leave
xor
movsb
inc
push
lock
loop
dec
ss
ds
jno
and
aaa
icebp
lea
jno
andb
jl
int3
mov
int
dec
ficoml
mov
jp
gs
and
mov
push
jo
imul
shlb
adc
xchg
ret
add
lret
ds
xorb
dec
daa
addb
lods
adc
rclb
push
xor
cmp
pop
jmp
push
popa
pop
lods
out
xchg
pop
imul
arpl
fnstenv
out
pushl
sti
cmp
in
push
or
mov
dec
adc
mov
fnsave
lret
sbb
pop
mov
mov
jb
ret
pusha
jl
jmp
leave
pop
sahf
cmc
filds
icebp
xchg
pop
sub
std
inc
into
lods
lods
cmp
and
stc
adc
test
sbb
pop
mov
dec
and
mov
fs
push
scas
gs
cmp
into
fistl
cld
mov
mov
mov
push
arpl
mov
in
cmp
mov
scas
xor
jae
mov
or
dec
mov
ss
adc
adc
push
xor
movsl
xor
rorb
fs
sub
jo
dec
pop
out
pop
adc
ret
inc
rcrb
xchg
shl
jge
inc
imul
fsubrl
jmp
xlat
shrl
jp
sti
sub
lret
std
jnp
fcmovnbe
push
cmp
add
and
pop
dec
in
push
xchg
clc
jmp
mov
and
aam
xchg
cmpsl
xorl
xor
hlt
pop
sub
fidivl
test
ja
xchg
pushf
imull
push
or
pop
mov
stc
mov
sbb
inc
mov
ja
push
stc
mov
jno
arpl
lret
xchg
jns
movsl
mov
and
push
xchg
mov
jg
mov
lods
rclb
daa
mov
fimull
sahf
pop
dec
sahf
adc
pop
imul
lcall
mov
inc
dec
adc
cmp
mov
xchg
imul
jecxz
fwait
pop
mov
lret
xor
dec
outsb
adc
mov
popf
cmp
sbb
insb
jbe
add
stos
cmpsb
rcr
add
jbe
mov
repnz
adc
mov
cmc
inc
jns
notb
shlb
or
add
xor
dec
push
pminsw
js
mov
mov
pushf
pop
jnp
mov
add
push
xchg
inc
push
sti
jns
aam
pop
aad
fs
xchg
cmp
or
sbb
adc
mov
mov
scas
push
sub
aad
outsb
outsl
add
mov
jl
outsl
mov
loopne
cmc
cmc
mov
inc
ret
dec
adc
jne
popf
cmp
sub
loopne
push
sbb
cli
aas
cmpsb
xor
leave
movsl
ss
adc
push
pop
xor
std
gs
mov
insl
lock
mov
cmpsl
fmull
sbb
inc
mov
mov
std
xor
jae
inc
xchg
cmp
adc
or
mov
stos
mov
js
insl
insl
lods
lods
cs
lds
or
cltd
push
mov
insb
scas
loopne
mov
jae
dec
lods
pop
or
jecxz
mov
push
sahf
aad
and
popf
pop
mov
mov
sub
jge
enter
push
lret
xor
data16
xchg
mov
dec
mov
cwtl
or
dec
movsb
inc
stc
xor
jne
mov
xchg
push
sub
pop
adc
xor
das
fbld
jae
adc
cwtl
jg
idiv
ret
aaa
cwtl
mov
or
loope
mov
pop
pop
cmp
repz
daa
mov
sbb
iret
jmp
insl
mov
cmpsb
loop
jecxz
xor
mov
jne
or
cld
lahf
fcmovbe
outsb
sbb
xor
mov
aaa
mov
dec
int3
push
inc
clc
xchg
sti
xchg
inc
gs
movsb
or
roll
add
mov
xor
mov
divb
jle
insl
out
xchg
aas
mov
and
jae
jmp
mov
xchg
add
enter
jl
jle
lods
mov
jae
pushf
lods
inc
jnp
adcb
sbb
mov
rorb
outsl
cld
leave
mov
sbb
notb
sbb
ficoml
mov
cmp
ret
sub
mov
das
dec
arpl
cmp
push
xlat
loopne
aaa
add
stos
pusha
xor
mov
and
repnz
push
neg
mov
mov
lock
cwtl
mov
stc
pop
dec
cltd
push
jp
dec
mov
notb
xchg
push
pop
fst
frstor
mov
into
hlt
adc
or
push
pop
bound
pushf
imul
dec
call
leave
pinsrw
mov
xchg
inc
push
sti
ss
mov
jmp
aaa
mov
mov
push
jne
mov
lahf
cmpsl
push
lods
inc
inc
sub
mov
arpl
and
mov
sub
in
mov
or
cmp
jb
mov
outsb
sbb
push
loop
test
mov
outsb
std
sub
fnsave
loopne
in
dec
ds
aas
es
dec
xchg
aad
ds
aas
movsb
push
data16
xor
xchg
add
dec
pop
dec
sbb
gs
scas
icebp
sub
pop
mov
test
fdivl
jmp
jecxz
ficoms
imul
and
imulb
shl
in
ret
add
push
pushf
insl
imul
mov
cwtl
bound
mov
sub
fdivrs
lods
adc
outsl
movsl
xchg
lock
ret
loopne
cmp
sahf
add
sysret
int
adc
sub
pusha
into
xchg
push
imul
jne
pop
push
dec
adc
inc
jb
jae
notl
sbb
das
xor
repz
adc
dec
gs
int
xchg
nop
mov
add
mov
jbe
aad
popa
sbb
adc
cwtl
js
cs
scas
fmuls
mov
hlt
xchg
ret
sbbb
mov
or
push
or
mov
mov
fs
xor
es
push
push
fnstsw
xor
mov
inc
push
cli
movsl
int
sbb
dec
xchg
dec
sbb
cmp
daa
leave
jmp
xor
cmp
mov
gs
loop
jle
out
fdivr
icebp
jmp
pusha
mov
xchg
xchg
adc
lock
jae
xchg
pop
jg
mov
lahf
pop
sahf
lods
into
inc
adc
mov
loope
push
aam
outsb
xchg
xor
push
outsl
sub
xchg
out
std
dec
inc
sub
xorl
iret
sbb
rcrl
nop
pop
rcrb
fcom
jo
push
sbb
dec
popa
ja
loop
sahf
push
enter
fbld
dec
mov
test
or
daa
inc
stc
cmp
or
inc
popf
xchg
inc
scas
push
fimull
pop
ds
outsb
fwait
aam
xor
inc
lret
adc
fdivrl
and
xchg
mov
mov
testb
mov
push
mov
sub
popa
ret
stos
rorl
dec
and
xchg
or
inc
insb
je
pop
loopne
loop
stos
sub
mov
in
je
in
outsb
shlb
ret
mov
adc
pop
or
jns
fwait
cmpsl
roll
into
insb
daa
mov
adc
aas
fs
cli
lds
rorl
cs
dec
hlt
mov
jmp
in
lock
mov
push
ljmp
cmpsb
dec
out
cvttps2pi
cmp
fdivrp
xor
das
dec
dec
ds
cltd
and
sub
push
cmp
xor
movsl
fldcw
push
ljmp
jb
sbb
inc
inc
data16
pop
arpl
jecxz
jl
movsb
js
aam
push
mov
sahf
hlt
stos
xlat
mov
inc
repz
cli
dec
mov
mov
test
sub
aad
push
sub
mov
movl
sub
inc
jo
sahf
cmc
and
mov
mov
mov
mov
movsb
inc
repnz
inc
or
push
mov
hlt
or
mov
in
dec
insl
cmpsl
ja
lods
fucom
or
in
imul
jecxz
jmp
xchg
ss
movsb
cmp
pop
into
adc
or
out
clc
in
sub
and
idiv
jecxz
and
ret
lcall
push
test
push
mov
pop
sub
std
sbb
push
pop
cmc
inc
add
mov
sub
outsl
mov
mov
sbb
and
or
xor
cmp
sub
shll
jne
insb
fnstenv
dec
fmull
bound
inc
out
mov
xor
adc
subl
add
inc
lahf
and
cmp
adc
jae
mov
sbb
or
stos
mov
jno
adc
push
bound
mov
adcl
inc
pop
out
ja
repz
mov
push
les
lea
stos
jg
adc
dec
jmp
mov
incb
jp
aad
ss
inc
pop
dec
adc
pop
shr
add
arpl
mov
in
pop
test
fbstp
dec
xchg
adc
out
subb
int3
xchg
sbb
add
lods
jo
ss
and
pop
mov
insb
jmp
outsb
cmpl
pop
loopne
not
out
aas
sbb
mov
jg
aas
adcb
mov
cld
movsl
popa
cs
xor
es
xlat
subb
add
inc
jo
lahf
mov
clc
lahf
dec
out
out
push
adc
mov
adcb
in
xor
fidivrl
pop
or
test
cltd
fsubr
push
daa
fisttpll
sub
sub
adc
push
repnz
xchg
mov
popa
pop
fldcw
xchg
ret
adc
stos
pop
lahf
test
lahf
pop
cmp
icebp
subb
add
xor
cmp
fimull
test
int3
xlat
push
inc
out
fldt
fistps
and
inc
sbb
filds
jns
out
cmc
imul
pushf
stc
aaa
enter
jge
cltd
inc
lcall
or
xchg
popf
lea
sarw
mov
inc
inc
or
push
jb
mov
test
inc
stos
ret
aas
stos
int3
incb
jl
xor
or
stos
push
lahf
pop
and
push
repz
test
or
stos
sub
push
sub
sbb
jnp
ss
and
push
popa
roll
in
jg
rclb
out
inc
test
jae
mov
divl
push
mov
pop
push
cmp
mov
mov
mov
inc
push
cmp
pop
fbld
call
loope
add
fst
inc
aas
xchg
inc
dec
sbb
imul
and
jmp
xor
lret
fsubs
dec
out
aaa
jno
out
xchg
push
sub
mov
and
pop
push
icebp
inc
mov
mov
insb
jl
sbb
inc
pop
outsb
sti
loope
jmp
stos
mov
cmp
inc
cmp
inc
push
dec
addb
add
cmpsb
arpl
data16
cmp
xlat
fwait
cmp
cltd
mov
and
inc
jne
jmp
dec
imul
xchg
stos
jp
sti
inc
sar
int
in
cmp
flds
dec
mov
into
mov
jae
cmp
inc
ja
mov
test
mov
ljmp
dec
addr16
xor
lret
xor
pop
dec
jnp
and
adcl
ljmp
pop
es
mov
push
rorl
rcl
test
leave
mov
arpl
pop
aas
incl
jns
lods
xor
xor
mov
xchg
lret
inc
fstl
xchg
in
jae
fists
js
pop
adc
incl
adc
mov
dec
adc
iret
pop
dec
xlat
out
sti
lcall
jbe
jl
aaa
clc
add
mov
inc
loop
pop
test
dec
or
out
aad
or
nop
mov
into
aaa
sub
cld
push
sub
and
scas
std
add
aas
and
and
sti
xchg
jbe
rolb
xchg
lods
pusha
cld
push
loope
push
lret
js
inc
dec
out
flds
mov
or
in
lahf
mov
loope
and
jmp
ss
sarl
sarl
push
mov
enter
into
adc
jge
xorl
adc
xchg
cs
arpl
dec
out
mov
pushf
adcl
je
adc
scas
and
xchg
in
xchg
xor
and
sub
push
shll
or
pop
cmpsl
call
pop
jbe
xor
jno
mov
ss
rclb
dec
loopne
push
fldl
and
cld
stos
les
test
lcall
dec
mov
xor
xor
mov
jecxz
pop
inc
mov
jg
add
pop
jl
fcomps
outsl
lcall
add
out
push
ds
xchg
sub
ljmp
stc
and
sbb
sbb
sbb
orb
mov
test
lea
loopne
cmp
scas
aaa
sti
push
rcrb
rcl
clc
fcmovnu
mov
jbe
dec
jp
mov
inc
xor
sbb
sbbb
std
les
lcall
out
mov
or
lods
inc
adc
out
xor
inc
xchg
out
bsr
ds
pusha
xchg
cld
jno
cli
push
lods
xchg
ja
testb
in
loop
movsl
or
xchg
into
adc
add
xchg
mov
xor
push
dec
inc
fnstsw
pushf
gs
insb
pop
cmc
std
sbb
inc
out
jp
pushl
cwtl
lret
jg
jbe
leave
pop
mov
mov
lea
sbb
mov
mov
cli
rcrb
xchg
push
pop
dec
mov
out
jb
arpl
jecxz
imul
rolb
decl
lods
int
push
mov
xor
je
jle
movsb
mov
pop
ret
or
mov
pop
imulb
ds
dec
cltd
outsl
add
ss
sbb
jg
jae
in
movsl
inc
mov
in
outsl
xchg
mov
mov
ds
test
ss
adc
sbb
pop
adc
cmp
jl
cmc
push
mov
out
insb
sub
enter
inc
xchg
mov
push
add
test
dec
pushf
int3
mov
movsl
stc
pop
subb
cmp
repz
arpl
jp
sub
add
in
jae
arpl
jb
sarb
lcall
sbbl
mov
push
xchg
xchg
mov
insl
dec
cmp
push
cmp
dec
leave
push
mov
cli
mov
inc
xchg
sub
push
sbb
push
mov
cmp
dec
fwait
test
in
jp
mov
adc
pop
loope
in
imul
mov
and
cli
mov
lahf
outsl
scas
jae
mov
jecxz
divb
push
flds
loope
adc
jecxz
jp
jge
lods
push
pusha
rcr
jge
or
or
fmuls
push
sti
fnstenv
mov
dec
mov
add
aad
adc
test
arpl
shlb
adc
jmp
fsubrl
jmp
dec
pop
mov
mov
add
inc
inc
cmp
push
add
and
xchg
mov
mov
cmp
nop
xchg
dec
shrb
test
jecxz
cmpsb
scas
jne
mov
cwtl
lea
lds
adc
sub
cmp
sbb
pop
mov
std
sub
adc
call
add
or
arpl
xchg
pop
push
sbb
jno
scas
and
stos
cmp
push
arpl
and
sub
std
adc
cltd
push
sub
rolb
push
mov
jae
mov
das
inc
jae
in
fcoml
push
dec
jecxz
aas
jo
mov
mov
out
cmp
pop
pop
pushf
lods
xchg
dec
inc
cli
sbb
jl
mov
ret
jecxz
xlat
movsb
inc
aad
sti
mov
fistpll
push
jbe
inc
cmpsl
jns
repz
loopw
pop
mov
mov
repz
lds
ss
repnz
adc
and
cmp
scas
add
loopne
and
mov
mov
lea
pushf
loopne
lcall
mov
data16
sbb
int3
sbb
or
fistpll
rorb
popf
arpl
iret
in
pslld
mov
inc
clc
arpl
fxch
pop
xchg
scas
jg
shll
ret
or
pop
push
sbb
lods
and
pop
int
push
pop
mulb
sbb
mov
sub
notl
daa
sbb
and
repnz
cmpsl
inc
pop
mov
push
lahf
int3
in
popa
popf
out
adc
leave
pop
shll
xor
adc
sub
icebp
stc
mov
lret
shll
jp
add
icebp
mov
lea
cmp
jae
pop
xor
cs
sbb
push
in
sub
das
push
mov
xchg
inc
add
int3
jge
inc
pop
adc
cltd
add
movsl
xor
mov
je
pop
mul
js
jl
and
xchg
and
sbb
repnz
in
xor
mov
dec
movsb
inc
xor
mov
inc
leave
pop
mov
stos
cmc
push
cmpsw
clc
push
pop
mov
sbb
pop
and
int3
jecxz
sahf
into
and
ret
add
in
scas
in
xor
xchg
lods
adc
lcall
push
xchg
mov
cmp
mov
daa
cmpl
insb
pusha
pop
push
push
push
dec
sbb
jne
dec
ret
jne
lds
std
in
jmp
and
or
cmp
cltd
push
stos
lahf
ficoms
push
pop
mov
mov
mov
out
push
mov
in
fs
adc
insl
cmovae
mov
scas
mov
sbb
push
out
mov
inc
dec
in
mov
pop
outsl
adc
je
push
adc
sbb
push
test
mov
push
mov
notl
mov
mov
jo
mov
clc
cli
xor
sti
add
pop
and
int3
incb
push
mov
lahf
cltd
imul
imul
adc
dec
ds
sahf
or
push
xor
lock
iret
ss
in
jne
insb
sub
cmp
pop
push
daa
mov
fisubrs
ja
test
rorl
cmp
jns
popa
imul
data16
pop
push
add
inc
push
sub
push
adc
mov
sahf
fwait
and
popf
mov
insl
mov
cmp
mov
stos
in
pop
push
pusha
sarl
mov
add
jmp
mov
clc
outsb
jnp
ret
aam
cmpsl
cmp
inc
add
pop
int
dec
dec
iret
lock
xor
mov
pop
jb
ret
add
test
scas
and
out
dec
ss
int3
and
xor
fs
in
clc
sub
mov
jbe
je
arpl
mov
jns
icebp
test
push
mov
test
push
add
push
pusha
fnstenv
lock
in
mov
xor
movswl
add
adc
adc
fistl
lahf
mov
jo
xor
stos
mov
insb
push
pop
stos
into
push
pop
or
lret
leave
repnz
cwtl
push
rorl
and
aas
add
push
test
push
mov
and
add
ljmp
jg
cld
jmp
jb
inc
jbe
pop
dec
test
add
push
cmpl
dec
adc
xchg
adc
mov
outsl
out
hlt
sbb
roll
jle
inc
incl
sbb
pop
sahf
call
loopne
xchg
push
pop
fs
sbb
dec
mov
or
and
xchg
push
mov
jle
or
jno
es
sbb
int3
movsb
imul
dec
ds
loop
mull
stos
inc
mov
xor
mov
xor
cmp
add
ljmp
scas
xchg
jnp
repnz
push
mov
stc
jp
lret
das
bound
jae
jne
push
push
insl
pop
ret
mov
lods
test
inc
sub
test
fdivr
incl
add
xor
add
adc
cmp
xor
add
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
ja
jmp
pushl
push
call
jmp
mov
xor
xor
or
mov
xor
sub
add
movl
cmpl
je
cmpl
jl
jmp
push
push
push
call
cmpl
jne
mov
dec
mov
xor
or
dec
mov
jmp
mov
movl
movl
movl
xor
or
adc
mov
mov
add
mov
xor
adc
add
not
mov
movl
mov
je
movl
mov
andl
mov
inc
mov
cmpl
ja
jmp
push
call
cmpl
jb
mov
xor
xor
andl
sub
sub
xor
sbb
mov
xor
mov
andl
mov
inc
mov
cmpl
jg
jmp
pushl
pushl
push
push
pushl
pushl
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
sbbl
add
subl
imul
and
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
ja
jmp
push
pushl
push
call
jmp
mov
subl
add
or
and
mov
mov
xor
mov
addl
add
xorl
xor
mov
xor
mov
adc
mov
adcl
add
and
mov
xor
mov
mov
xorl
lea
mov
and
mov
adc
mov
sub
sub
add
incl
mov
mov
xor
xorl
add
jne
jmp
andl
xor
xor
inc
mov
cmpl
jbe
jmp
push
push
call
cmpl
jb
mov
mov
sub
mov
sub
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jg
jmp
push
push
call
cmpl
jne
mov
inc
mov
jmp
xor
decl
mov
sub
mov
or
mov
xor
xor
sub
xorl
sub
andl
xor
movl
mov
mov
mov
movl
jmp
mov
andl
mov
inc
mov
cmpl
jle
jmp
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
adcl
xor
andl
xor
andl
sub
sub
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jg
jmp
push
pushl
pushl
call
jmp
xor
or
mov
mov
mov
subl
add
addl
imul
movzbl
or
mov
mov
subl
mov
xorl
add
or
adc
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jb
jmp
push
push
push
push
pushl
push
pushl
call
jmp
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
mov
mov
mov
cmp
je
mov
mov
mov
mov
xor
cmp
jne
mov
mov
xor
movsbl
mov
xor
add
cmp
mov
mov
mov
je
xor
add
mov
je
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
jmp
stos
fsubrl
sti
mov
add
sti
inc
adc
jp
pop
xchg
data16
sbb
inc
push
dec
mov
test
scas
inc
mov
std
dec
inc
jo
mov
adc
lea
mov
popf
dec
fisubrl
push
mov
jbe
in
cmp
inc
cmp
sub
loop
xor
inc
or
jle
aad
frstor
cli
cmpsb
push
popa
pop
shrb
scas
subl
jecxz
lahf
bswap
mov
cmp
jo
pop
cmp
push
in
sub
push
mov
aad
nop
ret
pop
cmp
add
lahf
sub
pop
sub
ss
imul
mov
cli
ljmp
ss
inc
fisttps
jecxz
icebp
push
subb
aaa
xchg
scas
roll
fcompl
mov
imul
bound
jae
adc
xor
xor
aad
cmpsl
rcrl
mov
add
sub
out
loopne
into
push
rcll
insb
inc
dec
jnp
mov
sub
sub
test
or
add
inc
mov
notb
les
in
aas
lret
sbb
inc
iret
leave
int
push
jo
dec
bound
jb
fst
ret
enter
je
in
sahf
aam
xchg
cli
fldt
push
xchg
mov
outsl
les
and
mov
fldenv
cmpsb
dec
cmp
xor
xchg
mov
xchg
cmpsl
pop
fstpt
sbb
push
mov
shll
jbe
or
or
ficomps
stc
xchg
jp
add
cwtl
add
and
add
xor
jecxz
andl
push
inc
fdivl
stos
add
jbe
push
sbb
push
popf
mov
push
inc
jbe
lahf
mov
stos
repnz
lods
repz
or
inc
adc
cli
pop
jge
cli
mov
push
push
xchg
push
aas
scas
pop
lods
or
lock
cwtl
mov
out
sub
enter
adc
mov
ret
shrb
sbb
sub
jbe
jg
shrb
or
adc
lock
shlb
stos
adc
popf
jbe
call
jbe
in
cmpps
pushf
add
popa
js
in
xorb
sbb
outsl
add
mov
dec
jecxz
pop
mov
call
test
call
pusha
pop
in
rcrb
pop
out
iret
shlb
push
adc
aam
in
mov
jle
int
jg
jae
aas
push
jns
cs
lds
bound
pop
repz
cwtl
aam
fwait
mov
hlt
push
inc
or
movsl
dec
std
cmpb
repnz
fcmovu
cltd
xor
lret
mov
sub
mov
subb
push
hlt
pop
pop
xchg
push
test
xchg
out
lods
aaa
les
stos
dec
mov
je
shll
cmp
movsl
das
cmp
int
das
in
cli
inc
aad
xor
testl
add
adc
outsb
and
jl
mov
cmpsl
shlb
lahf
cmpsl
sbb
into
mov
repz
test
out
loope
insb
jl
jb
aad
mov
mov
aaa
or
mov
jae
sub
loope
mov
ss
pop
imul
mov
popf
jnp
xor
inc
jmp
xchg
mov
dec
into
gs
dec
cs
gs
js
and
pop
icebp
xor
insl
imul
xor
popf
pop
vmread
mov
cmp
stos
pop
inc
mov
arpl
mov
imul
bound
xchg
call
push
pop
std
jbe
inc
pop
inc
pop
inc
leave
pop
aad
jg
in
in
pop
ror
popf
and
fisubrs
sub
mov
or
negl
imul
fcoms
mov
jmp
add
in
out
push
aam
rolb
daa
movsl
flds
mov
insb
pusha
xor
fldcw
stos
aad
shlb
inc
out
adc
sbb
ja
xchg
fisubrl
mov
push
je
lahf
adc
dec
inc
cmpl
dec
shrb
xchg
xchg
pop
test
inc
lret
ljmp
add
mov
or
adc
xchg
mov
icebp
and
sub
scas
jmp
loopne
pop
mov
push
mov
mov
and
popa
sub
pusha
rcrb
and
xor
and
mov
lods
mov
mov
rcrl
stos
ljmp
sbb
ret
adc
jbe
sahf
or
hlt
aas
sbb
pop
add
pop
insb
popf
pushf
outsl
cmp
pop
scas
andb
test
inc
sti
cmp
mov
lea
insl
push
pop
or
pusha
dec
aaa
test
lahf
lcall
cmp
add
cmpsb
test
out
fisttpll
aad
imul
shr
stc
sti
sub
pop
add
pop
and
mov
icebp
sub
lods
aad
push
scas
mov
aam
mov
or
aam
inc
mov
je
lock
clc
divps
daa
and
imul
outsb
dec
dec
or
sub
dec
jo
adc
call
aam
xor
out
mov
mov
inc
cmp
or
lret
fmul
fildl
loop
inc
pop
psrad
xchg
sbb
cmp
sub
mov
mov
xchg
popl
stos
outsb
hlt
daa
fwait
mov
xchg
push
cmp
in
cmp
into
pop
mov
shlb
adcl
jno
pop
mov
cmp
in
cld
xchg
mov
and
dec
in
out
adc
dec
call
subl
scas
mov
test
js
pusha
icebp
aad
jb
and
pop
pusha
aad
pop
push
xor
es
xor
out
imul
mov
ret
wbinvd
popf
out
into
aad
stos
jno
xor
loope
inc
xchg
out
mov
fdivp
mov
daa
xchg
push
cmp
cwtl
pop
inc
sub
pop
pop
sub
leave
hlt
loopne
jnp
ss
cld
push
dec
mov
mov
data16
xchg
xchg
cmp
dec
pop
cmpsl
mov
dec
scas
cmp
js
adc
xlat
or
pop
iret
or
inc
pushf
pusha
rcrl
push
jne
scas
xchg
jmp
pop
test
jns
icebp
and
fisttps
lahf
shll
xor
add
mov
fnstcw
pop
xchg
in
pop
imul
mov
out
push
int
sbb
pop
or
lret
mov
pop
insl
fsub
mov
or
lea
std
pop
dec
lcall
push
fisttpl
clc
and
jno
add
cmp
adc
cmp
inc
cmp
rorl
jp
xor
sbb
aad
div
pop
push
cwtl
je
rep
mov
push
mov
pop
es
adc
icebp
adc
test
sahf
mov
pop
ljmp
jg
mov
mov
mov
lods
aas
mov
pusha
ficomps
inc
outsb
arpl
jecxz
fdiv
sarl
and
popf
cmp
add
inc
push
pop
daa
adc
fstp
cmp
pop
scas
push
clc
or
sbb
mov
pusha
sarl
or
inc
inc
les
jp
fcmovbe
fisubrs
add
cld
push
enter
sub
mov
dec
test
lods
outsb
sti
sbb
in
and
and
cltd
push
push
jle
cld
adcb
stc
imul
cld
rorl
stc
dec
gs
pop
cmp
xor
pop
pop
add
and
cmp
hlt
repz
arpl
incb
sub
pop
fidivrs
mov
int
movsb
pop
add
xchg
test
pushl
jae
or
adc
xchg
inc
movsb
jl
lea
idiv
sbb
dec
mov
xchg
sub
shll
add
pop
xchg
addr16
mov
xor
ja
repnz
push
and
add
push
cmp
ds
push
push
dec
mov
fs
pop
movsl
cmp
nop
push
and
add
dec
dec
xchg
hlt
mov
out
jge
inc
rcll
mov
pop
les
repz
add
notl
sti
test
nop
int3
add
sub
mov
cltd
xchg
jne
sarl
jecxz
ret
jno
movsl
cmp
xchg
aas
call
int
jge
lods
fs
mov
mov
fisubrs
insb
push
sti
shlb
jg
mov
out
test
dec
rorl
mov
jmp
into
pop
lods
xor
push
xorb
sahf
dec
aam
sub
pop
fs
jl
clc
movsb
jl
shrb
sub
shll
mov
vrsqrtss
inc
scas
popf
push
dec
push
push
dec
pop
fdivp
pop
xchg
arpl
mov
push
mov
pop
mov
add
mov
push
mov
insl
ja
adc
xorl
outsl
repz
scas
dec
repnz
xchg
fs
mov
jbe
gs
xchg
inc
arpl
ficomps
leave
test
pop
push
cmp
sub
cld
push
inc
aad
add
sub
dec
cmc
clc
je
lds
pop
test
xor
xchg
ret
pop
and
std
mov
ret
popa
in
dec
mov
xor
pop
jns
dec
stos
mov
ret
sub
mov
cmpsb
dec
movsl
jl
bound
ja
cmp
xor
sub
sub
jle
daa
out
jo
jne
test
mov
push
pop
cmpsb
test
mov
or
jmp
arpl
jae
lea
fstpl
xor
fwait
xor
jge
or
xchg
cmp
mov
and
fbstp
inc
and
aad
lock
xchg
stos
js
pusha
sub
out
out
push
incl
and
fidivrs
inc
nop
fistpl
mov
shl
into
add
or
lods
icebp
sub
movl
cwtl
rolb
into
scas
stos
pop
cmp
jae
dec
stc
or
add
cmp
aaa
inc
fsubs
fimull
ds
data16
outsl
out
mov
cmpsb
inc
mov
xor
sub
push
mov
xchg
outsb
xchg
jge
js
dec
mov
pushf
adc
sub
out
rorl
push
iret
aad
mov
mov
jge
jg
xchg
pop
inc
sub
inc
xchg
jecxz
std
mov
test
push
and
clc
add
or
jge
xor
test
popa
jle
je
sbb
sti
cmpsl
aas
push
mov
dec
sahf
mov
sti
pop
add
mov
inc
cs
shrl
subb
aaa
loope
ss
std
adcl
inc
lahf
cmp
cmp
stc
or
adc
xchg
dec
sub
push
mov
ja
lods
es
and
insl
cli
shrl
jmp
and
mov
xorl
mov
jp
and
dec
sti
data16
and
mov
dec
add
mov
std
mov
and
sub
dec
outsb
pop
and
pop
mov
xchg
cld
push
jg
sub
jge
scas
into
and
arpl
add
cli
xor
test
pop
mov
fwait
pop
or
int
cmp
shrl
sbb
scas
sbbl
pop
push
xchg
sbb
mov
psubusb
xchg
adc
or
sub
shlb
iret
adc
in
imul
adc
mov
stc
andb
stos
inc
jb
loopne
rcll
aas
dec
mov
push
push
outsl
push
jo
movsb
fcoml
sti
loop
arpl
or
enter
shl
sbb
loopne
sbb
in
aaa
pop
mov
push
lcall
jge
xor
push
mov
in
pop
cmp
cmp
mov
xchg
iret
arpl
cwtl
iret
aaa
jae
push
jge
sub
ds
push
mov
jmp
xchg
ss
sub
movsl
adc
in
push
stos
outsb
out
inc
ret
pop
and
mov
daa
mov
xchg
not
mov
push
mov
lock
stos
adc
in
add
xchg
lods
sbb
mov
loopne
ds
jmp
repz
jbe
cmp
mov
pop
scas
jp
inc
mov
fmull
dec
push
xchg
clc
es
les
jmp
inc
ss
aas
jae
fchs
jle
xchg
enter
push
mov
push
sub
gs
outsb
movsb
rolb
and
ljmp
xor
rcrl
fadds
int3
leave
cmp
push
mov
mov
test
stos
je
and
outsb
mov
dec
pmulhw
mov
pop
xlat
in
enter
pop
ss
push
nop
popf
dec
ret
in
std
pop
xor
dec
xor
fldl
inc
push
cld
mov
mov
push
mov
xchg
aas
mov
lret
dec
or
dec
test
jmp
nop
movw
cmp
bound
xchg
inc
cmp
test
mov
inc
xchg
mov
sgdtl
ja
mov
movsl
adc
aas
sti
imul
xor
mov
test
test
add
arpl
jnp
inc
mov
sub
test
and
icebp
mov
pop
pop
scas
pop
fdivp
push
push
sub
lds
insb
inc
mov
mov
and
pop
mov
pop
int
sbb
imul
mov
imul
mov
jg
sbb
mov
in
sub
lods
mov
popf
pop
repnz
lods
andl
jle
and
mov
mov
pop
loopne
jb
add
ljmp
ret
ficoms
js
nop
dec
push
out
jmp
dec
mov
jns
addb
pusha
mov
mov
xor
out
jb
mov
inc
sti
bound
clc
adc
sub
aad
daa
cld
je
mov
inc
es
mov
scas
mov
movsl
movsb
bound
cmp
clc
jmp
iret
daa
in
pushf
in
lods
xor
cli
or
mov
fwait
mov
xor
xor
pop
dec
mov
gs
lahf
adc
push
inc
push
pop
jne
adcl
test
insb
pop
dec
call
call
shl
xchg
jns
pop
pop
cli
int
int3
mov
mov
daa
insb
ret
mov
addr16
pop
sbb
add
scas
les
push
pusha
cs
inc
mov
add
jne
push
fs
stos
enter
dec
adc
mov
arpl
ljmp
ja
out
insb
loopne
jg
stc
xlat
into
icebp
pop
lods
push
dec
stos
mov
stos
fadds
or
iret
and
leave
mov
mov
int3
std
out
dec
pop
jnp
cltd
daa
adc
lds
in
jg
test
stos
jns
add
mov
fidivrs
aas
inc
and
cli
arpl
sar
jmp
pop
in
or
hlt
mov
dec
push
and
and
lcall
cmpsb
scas
pop
xor
mov
push
cmp
xchg
xchg
test
cmp
lcall
imul
jb
lcall
jne
add
in
pop
or
push
inc
jb
adc
adc
test
vmovsd
inc
and
xlat
fsubrs
mov
cli
shrl
xchg
cli
loopne
inc
jmp
ja
mov
jg
mov
mov
cld
popa
jp
ja
std
add
in
dec
pop
loop
out
xchg
mov
andl
push
jmp
mov
dec
stos
clc
pop
lea
or
cltd
sbb
pop
mov
sahf
push
stos
push
je
pop
sub
mov
nop
xchg
icebp
inc
mov
mov
mov
dec
insb
test
push
sbb
fisttpl
adc
cmpsl
jecxz
and
push
add
dec
inc
sbb
nop
jl
mov
xor
dec
and
fucom
leave
aas
dec
adc
jo
es
jecxz
imul
lods
dec
inc
xchg
fidivl
push
mov
mov
cmp
shrl
nop
jp
cmpsl
into
lock
test
and
xchg
lock
sbbb
ret
cli
mov
mov
sbb
adc
xor
sub
fcmovbe
inc
jp
fisttpll
xchg
mov
loopne
maxps
push
int3
inc
fsubrp
mov
jae
mov
sbb
mov
lret
sub
push
jge
mov
cmp
inc
data16
pop
scas
pop
mov
jl
call
dec
sarb
cltd
fwait
adc
inc
push
mov
lock
pop
popf
sub
xchg
xor
push
cmp
out
sub
sub
mov
mov
add
adc
stos
pop
addr16
mov
jns
in
lea
jg
iret
jnp
mov
sbb
sbb
addl
fdivrs
push
cmpl
cmp
mov
rcrb
roll
pusha
dec
jns
insb
lock
in
std
rep
daa
jb
fsts
add
mov
cvttps2pi
sub
mov
inc
sbb
subl
mov
mov
adc
and
in
sbb
mov
lods
sahf
aas
insb
push
icebp
lcall
movsb
into
insb
push
mov
xchg
pop
test
mov
pop
cmp
sub
in
scas
jmp
mov
ror
lret
adc
sarb
xor
fnstcw
ss
arpl
divb
push
gs
lods
mov
jae
addb
arpl
fdivr
cmp
ret
push
mul
and
pusha
jmp
imul
cli
pop
imulw
idivl
mov
or
push
fnstenv
int
inc
jno
or
ret
insb
popa
or
or
ret
xchg
jns
xor
xchg
adcb
dec
rcrb
add
aaa
dec
sub
insl
sahf
addb
leave
xchg
imul
fsubr
sahf
lahf
cmp
adc
inc
cmp
in
pop
aaa
mov
xchg
inc
aas
mov
jnp
inc
ffreep
xchg
ret
mov
orl
and
cmpsb
add
push
cmp
adc
cs
pop
inc
mov
adc
divb
mov
or
icebp
xchg
mov
jae
mov
sub
mov
mov
push
push
or
nop
pop
push
push
pop
int3
sub
aad
add
dec
adc
dec
cmpsb
pusha
sub
push
and
xchg
sbb
xor
loop
sub
outsl
and
jae
popa
push
scas
imul
xchg
mov
xchg
lahf
dec
rcll
mov
lret
lahf
adc
in
data16
jnp
cltd
shrb
js
aas
mov
xchg
stc
adc
or
cli
rcr
sbb
adc
aas
push
iret
sbb
mov
addr16
int
adc
pop
scas
clc
pop
iret
iret
test
mov
jge
out
cmpsb
mov
out
fldenv
cli
aad
ss
xor
test
sbb
xchg
cmpsb
out
and
sbb
cmp
xchg
push
jmp
sbb
pop
inc
add
push
iret
mov
jne
test
subb
rclb
inc
cmpsl
ficompl
call
pop
mov
ficoms
mov
push
lahf
pop
lods
lcall
xor
sub
sub
inc
inc
loopne
daa
cmp
stc
sub
add
or
add
jp
mov
jp
mov
scas
lea
mov
push
daa
dec
xor
fldt
sahf
mov
add
and
es
push
mov
imul
xlat
pop
cld
sahf
xor
mov
jmp
jmp
dec
fcomps
ljmp
fmul
mov
fs
nop
and
dec
orl
ficompl
roll
adcl
nop
loop
pushf
xor
loope
cli
mov
bound
test
sbb
test
inc
jns
jbe
aad
loop
inc
loope
sbb
inc
push
xor
mov
pop
add
cltd
mov
push
adcb
gs
sub
mov
call
sahf
sbb
ja
cli
ljmp
imul
fiaddl
inc
mov
sbb
inc
insl
std
push
inc
sub
das
and
sub
mov
pop
push
xchg
inc
cwtl
mov
insl
mov
gs
xor
mov
and
cmp
jbe
jne
pop
mov
addr16
push
mov
cmp
add
push
xor
shlb
mov
aas
mov
inc
push
movsl
cwtl
jo
cmp
push
cwtl
mov
jmp
xchg
gs
rol
imul
aad
dec
insl
gs
int3
pop
xchg
push
mov
mov
mov
ljmp
add
aaa
mov
cmpsl
pop
out
adcb
xor
cmp
cmp
lret
mov
mov
dec
adc
loope
push
xchg
subb
sub
in
xor
xchg
imul
lret
xchg
cmp
push
lea
dec
test
mov
jnp
xchg
mov
mov
adc
int
sub
jbe
into
fimuls
or
xor
pop
and
xor
ljmp
cmp
sti
imul
inc
or
in
xchg
sbb
popf
push
out
lods
sub
sbbb
cli
into
cwtl
xchg
in
or
cmpsl
push
test
xchg
sub
add
mov
movsl
fucomi
arpl
xchg
sub
jo
jl
or
cli
loop
add
int3
mov
daa
in
movsl
ds
cmp
out
mov
repnz
or
add
into
std
xchg
pop
notb
pop
outsb
xchg
sub
mov
insl
cmp
mov
sub
or
dec
xchg
xchg
add
or
jb
rcrb
add
add
loop
sub
push
jmp
out
fmull
jecxz
inc
fldcw
sbb
adc
imul
cmp
sti
push
jae
jle
fwait
stc
gs
in
fs
xor
fsubl
add
sub
add
cs
sub
mov
scas
movsl
push
mov
testb
dec
push
inc
add
lods
movsl
xchg
mov
lods
les
aam
leave
inc
pop
xchg
aam
ss
cmp
test
repz
mov
or
or
sub
cltd
xor
in
dec
xchg
inc
mov
fs
int
cmp
out
lea
add
dec
add
adc
xchg
imul
in
sub
cmpsb
pop
popa
cmp
daa
arpl
aad
add
cmp
mov
dec
cmp
shll
mov
adc
mov
sbb
popf
lahf
sbb
mov
call
dec
cmpl
popf
push
xchg
in
adc
aas
jge
js
or
into
xor
jecxz
notb
jnp
or
mov
rcrl
mov
or
mov
sarl
mov
insl
lods
shrb
js
fmuls
and
and
and
sub
adc
in
das
sbb
loop
adc
fdivs
mov
pop
fmuls
sbb
add
sbb
inc
or
push
fwait
sahf
jae
pop
les
pop
jmp
mov
push
push
out
cmp
movsl
xchg
dec
jg
xor
push
push
test
shl
aaa
cmp
mov
mov
xorl
and
add
das
cld
pop
cmp
mov
popf
mov
sti
cs
dec
and
sub
movsl
mov
repz
adc
shrb
ds
mov
add
xchg
lret
dec
cmp
cli
xor
mov
cli
paddq
lcall
jg
test
push
mov
std
cwtl
jno
arpl
inc
scas
lret
or
dec
cmc
push
pop
andb
add
mov
xor
clc
sbb
fnstcw
xchg
jecxz
stos
jae
push
adc
xor
lock
insb
lods
inc
mov
nop
rcrb
ret
sar
xor
scas
out
out
hlt
aam
sub
fs
repz
pop
jne
mov
sbb
mov
out
stc
popa
out
jl
mov
test
cmp
subb
iret
jae
fldl
xor
icebp
int3
cmp
loop
add
jp
cmpsl
rorb
repz
out
cld
subl
popa
ret
sub
lret
pop
add
stc
in
inc
je
adc
and
out
cwtl
loopne
push
cmpsb
jle
fistl
xchg
fimuls
jne
mov
stc
adc
add
stc
ficoms
cltd
daa
mov
sub
repnz
jbe
xchg
fnstcw
xor
xchg
out
jecxz
pusha
sti
shrl
dec
lcall
imul
mov
dec
loopne
mov
incb
xor
dec
mov
dec
sub
and
mov
js
pop
push
fbld
push
movb
sbb
mov
lahf
or
in
lods
or
sbb
xchg
jno
xor
mov
push
adc
mov
ja
ljmp
inc
iret
cmpsl
pusha
push
popa
aaa
and
push
mov
or
repnz
pop
test
clc
out
test
cmc
subb
insb
ja
and
fndisi(8087
sbb
inc
ret
repz
in
jbe
lret
cmp
or
sub
jno
sub
xchg
test
sub
xor
scas
mov
and
add
aaa
mov
jbe
pop
in
pushfw
or
mov
xchg
outsl
cmpsb
mov
add
mov
push
push
stc
jae
mov
call
dec
xor
dec
sysenter
mov
or
sub
in
jle
mov
xlat
out
cld
ds
outsl
inc
xchg
sbb
cld
adc
mov
fistl
pop
add
mov
xor
jg
shll
push
jo
sbb
and
xchg
cli
xor
mov
xor
lods
xchg
cmp
mov
loopne
imul
jns
add
hlt
inc
ds
inc
push
fs
push
ljmp
adc
xchg
aad
jb
pop
clc
aad
pop
or
lods
xchg
fiadds
xchg
cli
jb
cmp
mov
aad
lea
sub
sbb
std
pusha
pop
lahf
or
mov
shrl
mov
or
or
int3
stc
fldcw
mov
fwait
in
bound
and
pop
roll
push
outsb
outsl
inc
pop
mov
fdivl
loopne
loope
stc
les
lds
adc
add
inc
imul
ja
pop
test
add
cmc
xchg
mov
mov
gs
mov
sti
std
inc
sbb
add
mov
pop
xchg
push
push
in
add
aam
faddl
mov
jp
cmpsb
jecxz
pop
mov
dec
das
mov
or
test
dec
pop
or
and
pop
ss
insl
add
jle
roll
fucomip
sarl
movsl
cli
out
out
hlt
int
mov
mov
jp
rcll
orb
push
dec
and
mov
sahf
adc
or
repnz
inc
xchg
ljmp
pop
out
ficoms
iret
clc
and
pop
push
ds
outsl
sahf
push
fstps
push
lds
xor
jmp
pusha
repz
dec
lea
adc
out
dec
pop
hlt
inc
je
cmp
mov
nop
pusha
mov
fsubl
adc
pop
add
sti
pop
push
inc
paddd
repz
out
gs
inc
or
cmp
fstl
psrlw
xchg
nop
lods
mov
in
xchg
jle
jge
ret
in
inc
pop
aam
cmpsl
jg
andb
pop
sbb
mov
rorl
psubusb
cmp
lcall
gs
int
sbb
and
js
mov
aam
lcall
lcall
int3
test
popa
jge
in
rorl
cmc
in
arpl
lock
dec
xchg
lock
push
pop
inc
add
mov
inc
dec
into
rorb
jne
enter
jo
idiv
pushf
stos
xorb
jne
pop
and
dec
mov
loop
imul
mov
in
cli
xchg
jle
dec
inc
nop
mov
or
test
in
les
xor
imul
mov
js
fs
popl
mov
jecxz
pushf
aam
inc
sub
xchg
dec
scas
jl
iret
pusha
lret
iret
mov
adc
ret
jl
fwait
jecxz
mov
insl
sub
out
dec
inc
std
jnp
sbbb
or
outsl
push
stos
push
mov
mov
test
out
icebp
outsl
flds
in
fwait
jne
jnp
xor
mov
hlt
mov
cmp
daa
push
repz
dec
or
out
jle
sbb
movsl
data16
xor
xor
dec
or
aam
out
mov
ret
xor
and
push
xchg
dec
sub
test
shrb
inc
pop
jmp
lret
jo
or
ss
mull
subl
sub
lcall
lahf
mov
test
mov
lahf
or
xchg
test
mov
add
lret
outsl
adc
xchg
imul
mov
mull
add
push
xorl
jecxz
in
movsl
mov
add
filds
jno
dec
adc
cmp
pop
xor
movsl
stos
jmp
push
push
ret
dec
lahf
iret
data16
mov
or
add
xor
out
mov
das
sub
ljmp
test
jo
enter
add
fstpl
lret
add
cli
icebp
dec
mov
ja
aam
xor
movsl
rorb
mov
push
mov
push
lock
sbb
mov
inc
fistps
shrw
sbb
jg
xchg
and
out
or
jp
mov
push
mov
aaa
adc
xchg
fs
and
mov
lahf
stc
dec
add
or
imul
adc
sbb
outsb
or
cli
shl
fwait
iret
sub
inc
sub
and
cli
xchg
adc
movsl
bound
into
negl
out
sahf
cmc
fistl
inc
sub
push
pop
dec
or
lds
subl
adc
push
pop
add
sbbl
sub
out
mov
and
imul
push
loope
popf
cmp
loope
xor
lcall
rcll
jns
cli
nop
mov
jg
xor
mov
in
adc
jg
sub
lret
pop
mov
enter
clc
pusha
ss
lea
lods
sti
mov
iret
jp
test
lock
mov
shlb
and
sub
pop
movsl
pop
jmp
dec
and
xchg
fadds
mov
cmpsb
int
sbb
nop
imul
out
xor
out
mov
add
gs
inc
add
mov
or
mov
jmp
sub
pusha
in
mov
mov
adc
jle
add
mov
push
or
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
jmp
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
jmp
popa
cmc
cwtl
mov
pop
popa
mov
dec
dec
xor
xlat
jge
xor
jp
leave
mov
sbb
call
stos
jg
inc
inc
and
insb
adc
fwait
ret
add
dec
jb
add
xchg
mov
int3
cmc
jne
mov
in
pop
mov
divb
outsb
in
insb
call
cwtl
ja
dec
loop
sub
xchg
pop
jl
xchg
mov
sbb
nop
cmpsb
cmp
mov
inc
mov
mov
adc
mov
sbb
or
cli
or
sti
jb
je
pop
or
cmpsl
inc
inc
jne,pt
mov
push
icebp
aaa
xor
or
lea
cld
pop
jns
std
jns
incl
scas
out
rclb
jno
rorl
sbb
dec
inc
add
jle
sbb
cld
adc
fcmovnb
sahf
add
cltd
jns
pop
sbb
or
hlt
leave
xchg
stc
movsb
in
mov
xchg
ljmp
push
inc
xor
or
xlat
aas
xchg
xlat
nop
xor
in
xor
push
mov
push
loop
add
test
mov
sti
hlt
outsb
icebp
and
pop
mov
mov
sub
cmp
adc
movb
fsubrl
cltd
push
xor
fcmovb
push
dec
int
push
add
push
add
sub
fidivrl
call
push
mov
xchg
cs
mov
in
rorl
mov
adc
fdivs
pusha
shr
xchg
outsb
cwtl
mov
xchg
push
mov
xchg
mov
mov
call
xchg
mov
xchg
ljmp
mov
push
dec
mov
sub
popf
sub
mov
sbb
push
mov
jge
lock
loop
dec
sub
push
leave
mov
mov
sbb
int3
or
rcrb
out
mov
push
mov
out
inc
jle
mov
shll
push
and
xor
mov
andl
aad
ret
loope
xlat
push
std
xchg
jp
cmpsl
call
movsb
add
push
fcomps
adc
insb
xchg
cmp
les
in
pusha
jo
sti
into
repnz
sub
pop
sbb
mov
mov
cmpsb
sub
ficompl
mov
or
out
sahf
cmc
push
push
in
or
or
xchg
xlat
push
inc
cli
sub
mov
lods
dec
add
fidivrs
daa
mov
aaa
dec
out
nop
xor
repnz
imul
cmpsb
and
pop
add
nop
mov
ljmp
and
insl
mov
push
add
dec
daa
nop
mov
push
mov
ds
fld
ret
lahf
mov
or
imul
xchg
loope
mov
push
sub
mov
cs
inc
pop
leave
jae
int3
fistpll
jg
call
mov
inc
insl
out
lds
dec
mov
aam
cwtl
xchg
mov
adc
push
shll
inc
jp
push
fidivl
inc
fmuls
dec
test
adc
pushf
fcom
in
out
mov
cmp
dec
outsl
fcmovnu
icebp
mov
push
insb
popa
sub
repz
inc
dec
lds
push
jno
jge
adc
mov
add
fldl
lods
inc
rcll
pop
mov
pushf
inc
shlb
jge
icebp
out
iret
lds
push
lods
fcmovbe
test
inc
lds
leave
dec
sub
mov
cmp
mov
rclb
adc
or
ret
push
sbb
xchg
imul
fsubrl
inc
pop
js
mov
mov
and
adc
or
fldl
int
mov
xor
adc
lahf
sbb
lcall
loopne
neg
mov
fiadds
loopne
xor
jg
xchg
int
cld
mov
repz
cli
pop
testb
pop
push
gs
cwtl
aaa
pusha
adc
iret
adc
sbb
es
out
add
mov
bound
xor
test
rorb
orl
add
sub
cltd
lahf
xchg
xorb
pop
mov
sbb
iret
pop
sub
xchg
pop
inc
pop
leave
imul
addl
hlt
adc
inc
jbe
cmpsb
fldl
test
ficoms
sbb
dec
test
outsl
jo
in
mov
aam
cmp
jne
dec
pop
sbb
push
sub
or
popa
lea
clc
test
aaa
test
rclb
loope
pop
lea
repnz
xchg
xor
xchg
xchg
mov
cld
xchg
cmp
nop
call
in
xchg
or
aam
and
inc
clc
jmp
cmc
add
fdivs
push
mov
inc
hlt
negb
jb
sbb
rclb
inc
call
add
call
sarb
mov
adc
inc
popf
xor
jne
push
lea
cmp
inc
or
xchg
xor
jg
call
dec
inc
mov
daa
sbb
mov
mov
jp
pop
out
neg
cwtl
fildl
push
push
popl
lods
ljmp
shll
fdivp
push
dec
iret
and
push
fwait
push
dec
and
jecxz
sub
movsl
mov
adc
addr16
xchg
test
and
push
loope
mov
arpl
fiadds
push
push
dec
decl
dec
mov
inc
cmp
ficoml
xor
sahf
out
jns
push
add
pop
or
pop
test
or
add
mov
test
cwtl
fs
dec
mov
and
imul
sbbb
movsl
je
push
fdivrs
fldt
shll
mov
pop
mov
int
imul
test
xorl
jo
jg
pop
shll
add
push
sub
daa
stc
or
fisttpl
rcrb
adc
stos
inc
inc
jg
sbb
mov
push
inc
pop
xor
inc
std
inc
push
outsb
push
mov
dec
test
sbb
adc
mov
mov
or
lret
sub
loopne
ds
xchg
jle
rclb
loope
rcrb
shrl
jge
jg
test
jg
xchg
xlat
adc
in
in
orl
xchg
and
addr16
addb
pop
test
mov
cmpsl
inc
das
dec
mov
jle
jne
es
or
dec
add
jnp
jae
shrl
mov
xor
cld
jl
add
cmpsl
loope
push
sbb
and
jbe
ret
repz
mov
movl
stos
cli
add
sbb
inc
aaa
adc
mov
push
xchg
cmp
xlat
dec
lea
sarb
and
ret
mov
mov
clc
cli
xchg
push
mov
xlat
lods
adc
xchg
push
xor
adc
mov
jl
fisttpll
fidivl
jp
out
loopne
iret
fisttpl
test
out
push
out
inc
adc
push
div
push
and
mov
shrl
fwait
imul
push
jecxz
call
ss
xor
and
je
pushf
or
faddl
ljmp
cltd
mov
ror
sub
inc
outsb
push
or
jmp
pusha
xchg
cli
xchg
stos
jne
sub
push
rorb
dec
jnp
dec
iret
pop
into
sbb
jl
sub
mov
cmp
lea
int
outsl
mov
dec
adc
mov
fwait
repnz
push
test
cmp
mov
xlat
pop
stos
aaa
xchg
and
test
imul
repnz
pop
push
mov
stos
aaa
jo
aam
faddp
pusha
les
sahf
out
xchg
xchg
cmp
in
sub
inc
sbb
addl
gs
sub
mov
jle
pop
add
mov
jg
mov
mov
vmwrite
xor
gs
mov
jns
and
xor
fisubrl
icebp
and
push
push
je
das
jns
lods
rorl
cmp
in
pop
aas
enter
test
dec
pop
xchg
adc
inc
jnp
sbb
stos
xchg
popf
inc
mov
sbb
xchg
jmp
int
ds
jl
dec
fists
mov
mov
lret
mov
add
xchg
mov
int3
pop
add
cmpsl
mov
into
lock
adc
xchg
into
cmp
rol
hlt
stc
std
cmp
out
mov
mov
addb
push
inc
mov
dec
jno
loop
xor
xor
in
loopne
pop
cmp
adc
call
es
push
push
mov
aas
add
push
je
lret
mov
data16
xor
dec
jg
pop
in
out
bound
xchg
xchg
imul
cltd
mov
cmpsb
imulb
push
pop
hlt
nop
lret
push
sub
enter
in
xchg
xchg
outsb
mov
ret
xchg
xchg
dec
push
xchg
subl
ficomps
mov
jl
test
sbb
adc
int3
xor
ja
lds
push
fcmovnbe
mov
pushl
push
mov
mov
fbld
fcmovb
lea
mov
loop
push
imul
call
jmp
push
roll
cvtps2pi
rcrb
jmp
sahf
inc
insb
jl
outsl
rcr
jae
repz
and
mov
xor
push
shlb
movsl
xor
inc
adc
mov
sub
in
mov
pop
push
out
and
jo
stc
xorl
and
xor
imul
sbb
dec
rcl
sbb
jb
fmulp
mov
add
mov
push
int
add
mov
mov
out
sub
cmp
or
pop
inc
int3
lods
push
cmc
mov
jno
xor
call
int3
jmp
sti
in
and
dec
add
test
xlat
test
shlb
and
cmpsl
popf
stos
in
push
in
adc
adc
adc
icebp
pop
cmp
iret
cld
push
xchg
xchg
cmp
stos
lret
and
divb
push
ret
cld
add
sarl
out
cwtl
sbb
push
loope
push
pop
arpl
mov
dec
aaa
sbb
push
jmp
cmpsb
popa
sub
stc
cwtl
js
shlb
out
lods
shr
in
adc
mov
aaa
hlt
lea
es
negl
xchg
rcr
sbb
loopne
add
mov
repnz
mov
lea
xchg
mov
sbb
push
cmc
dec
shlb
cmp
fs
aas
fisubl
insb
nop
sub
pop
int
adc
enter
fwait
fs
jmp
xlat
pop
in
push
fsubrl
dec
cmp
and
pop
jl
jmp
test
xor
adc
sbb
xor
adc
popa
data16
out
out
repz
jg
dec
mov
fisubs
pop
jno
mov
pop
xchg
push
enter
in
ret
fwait
andl
inc
pop
push
pusha
xchg
cmc
add
add
rcl
xchg
test
push
movsb
jp
xor
popf
push
fidivrs
dec
std
stos
int3
pop
sbb
rcrb
sbb
xchg
aaa
mov
and
sub
pop
inc
xrelease
or
mov
loopne
loope
icebp
or
dec
add
movsl
lock
and
lds
mov
cmpsb
shl
subb
enter
mov
mov
add
push
xchg
push
lds
push
mov
not
ret
mov
jmp
cmp
jecxz
adc
sub
sahf
xor
jg
jae
mov
push
aaa
push
jne
scas
adc
int
sub
cmp
cmp
inc
sbb
add
xchg
mov
sbb
inc
orl
mov
mov
mov
orl
aaa
fcomp
fimull
and
xchg
add
push
add
in
jp
cmp
ss
cmp
fadd
mov
shrl
testb
pop
in
inc
rcrb
pop
out
gs
out
mov
fwait
jbe
xor
xchg
out
lods
scas
scas
xor
les
inc
pop
or
jno
and
sub
add
fiadds
ds
mov
mov
xchg
cmpb
dec
lea
movsl
mov
in
add
test
jae
push
xor
lahf
out
sbb
lock
jns
jp
ret
scas
nopl
imull
popf
jnp
xor
outsl
fwait
inc
adc
jae
sbb
sub
push
push
mov
mov
jle
xor
sbb
dec
push
lret
pop
sub
cld
push
adc
out
subb
hlt
ja
sub
je
aam
std
stc
or
mov
inc
xor
dec
pop
mov
cmp
mov
xor
cltd
lock
push
xchg
jge
jo
or
and
mov
les
xchg
imul
mov
push
xchg
pop
cmp
icebp
sub
sub
pop
sbb
xchg
pop
mov
in
popf
lcall
mov
stos
xor
loope
in
add
jae
nop
mul
fneni(8087
pop
sub
xor
dec
adc
roll
movsb
cmc
adc
mov
mov
mov
inc
mov
daa
and
test
mov
scas
sqrtps
outsb
pop
imul
mov
cmp
or
aam
jle
pop
aam
arpl
add
icebp
imul
mov
sti
out
popl
push
jne
mov
inc
fcoms
ret
adc
je
sbb
pop
cld
jl
int
in
push
or
fstl
cmpsb
mov
frstor
add
bound
xchg
xchg
pusha
clc
and
divl
mov
cmp
stos
or
xchg
sub
ds
nop
int3
mov
adc
adc
push
push
xor
jp
mov
mov
add
inc
cmp
test
mov
sbb
popa
test
mov
rcrl
mov
sti
sahf
mov
call
dec
repnz
mov
and
mov
cmpsb
jns
pop
inc
test
ds
sub
inc
pop
mov
xchg
push
xchg
inc
aaa
cltd
push
sbb
mov
mov
mov
in
mov
loope
push
pop
pop
dec
arpl
fiaddl
in
aam
bound
jbe
dec
inc
sti
mov
lret
push
arpl
mov
xchg
repnz
cmpsl
xchg
ds
add
les
loopne
icebp
xchg
sbb
lcall
xor
sub
mov
popf
mov
inc
sbb
test
imul
int
popa
mov
adc
mov
sbb
data16
shll
gs
popa
cmp
rcll
scas
adc
xor
and
out
pop
mov
mov
shlb
dec
or
xchg
sub
mov
and
jl
hlt
rcrb
es
and
hlt
push
mov
aaa
ljmp
inc
mov
mov
icebp
xchg
push
movsl
inc
fistpl
mov
jp
and
jbe
fsubp
ret
mov
pushf
repz
dec
xor
into
jg
dec
das
xchg
in
repz
dec
std
sub
incl
stc
xchg
pushf
jbe
test
loop
aad
xor
sbb
in
jnp
or
lods
dec
shrl
clc
lcall
inc
or
mov
xchg
cs
lods
cwtl
aam
sti
lea
dec
popa
movsl
or
mov
gs
add
rol
pop
in
mov
adc
cmpsb
in
mov
scas
mov
sub
out
fistps
in
jge
ret
adc
lds
std
or
loope
add
fstl
xchg
int3
mov
push
enter
jp
sub
xor
adc
xor
movsl
je
dec
add
push
addr16
adc
rcrl
les
xchg
xor
adcl
sbb
adc
fnstsw
je
pop
in
inc
test
mov
subl
xor
mov
outsb
mov
xor
stos
cmp
sub
movsl
add
xor
fisubs
dec
xchg
inc
cltd
out
lea
or
xor
inc
aad
sbb
mov
inc
push
leave
inc
lea
xor
fidivrs
decl
mov
fistps
mov
add
test
mov
pushf
xchg
popf
pop
xchg
sbbb
and
inc
mov
mov
sbb
out
inc
pop
pop
std
inc
sbb
mov
adc
in
aas
sar
ret
jne
adc
cmpsl
sti
jle
loopne
mov
sbb
inc
movsl
push
or
dec
lret
push
sar
fldcw
fwait
jb
dec
insb
mov
int
sub
or
or
cmp
push
int
push
push
es
mov
add
mov
mov
cmpb
js
mov
push
sbb
and
jge
ds
and
jge
push
inc
shll
mov
jae
mov
inc
mov
dec
xchg
push
sub
mov
sub
jns
xchg
sahf
imul
out
shl
and
xchg
ds
jg
andl
leave
pop
out
sbb
add
xchg
in
push
scas
jb
ror
das
jle
leave
bound
movsl
shl
aas
imul
pop
idiv
sub
jne
fdivs
mov
xchg
cmc
jg
and
mov
ret
cmp
in
jno
dec
in
outsl
xchg
dec
lahf
std
dec
clc
adc
test
xchg
clc
jl
pop
insl
rcr
cwtl
push
xchg
inc
lret
or
sbb
scas
cli
das
loope
pop
xchg
jge
pop
and
xor
add
divb
inc
clc
jp
cld
xchg
nop
setnp
clc
push
jg,pn
sbb
push
js
push
cltd
mov
dec
ja
cmp
movsl
inc
cmp
mov
sub
jge
imul
test
inc
gs
enter
mov
int
adc
imul
stc
mov
sub
add
push
clc
pop
into
aas
ss
ja
or
jne
or
push
adcl
std
shrl
pop
popf
cmpsl
stos
rcll
push
in
std
cmp
mov
sub
push
or
fisttpll
pop
loopne
inc
cld
mov
cld
negl
fidivrs
loopne
out
and
jmp
pop
and
cmp
pmulhuw
dec
movsl
or
jp
jl
inc
in
lahf
xor
mov
loope
inc
aaa
aaa
mov
adc
dec
mov
movsl
sub
mov
int3
mov
push
fisubrl
fistl
jns
mov
mov
adc
idivl
stos
movsl
pushf
xor
add
add
inc
push
push
ss
das
ficomps
inc
lods
out
mov
in
and
mov
test
faddl
imul
xor
dec
mov
push
into
add
jge
rolb
mov
push
test
loop
mov
pop
add
pop
mov
jg
push
andb
xor
cmp
lret
cwtl
sbb
loope
data16
push
and
mov
cmp
pop
scas
jae
clc
mov
in
rcr
xchg
ficoms
sti
jge
outsl
push
push
push
mov
push
cmp
iret
scas
xchg
loope
sub
dec
mov
ja
cmp
xor
sub
cmp
mov
int3
pop
in
sub
std
and
cltd
xor
jmp
xchg
xchg
mov
push
xchg
mov
leave
stc
mov
scas
in
adc
xor
adc
add
mov
ret
jb
sub
sub
or
pop
mov
pop
pop
and
movsl
js
mov
mov
or
mov
sub
add
pop
xchg
pop
pop
shl
cmp
ljmp
loope
movsb
loope
mov
cmpb
mov
lcall
insl
outsl
rorl
or
ret
xchg
pop
sahf
add
insl
in
pop
loop
rcrb
addl
adc
aam
incl
iret
fstps
and
das
fninit
daa
mov
cmp
dec
jge
iret
mov
rcrb
mov
or
call
mov
lds
ss
lods
fiaddl
jl
jns
jg
pminub
ror
repnz
je
leave
loopne
and
xchg
mov
mov
sti
mov
clc
out
or
mov
inc
inc
push
pusha
fadds
fadds
cmp
subl
xchg
cmpsb
push
push
outsb
into
pop
mov
pop
arpl
aam
flds
xchg
pop
cmpsl
dec
test
push
add
in
mov
push
repnz
jmp
jae
aas
enter
cmp
jnp
push
push
push
add
xor
push
out
cli
and
fs
cmc
or
mov
adc
lahf
into
pop
addr16
mov
pop
xchg
inc
jp
fsts
test
lret
icebp
add
and
mov
xchg
xorl
lahf
shl
orb
hlt
cmp
xor
leave
inc
fcomi
push
fucomip
mov
test
insb
xor
cmpsb
push
jecxz
sub
sub
add
test
ss
dec
pop
cwtl
imul
xor
add
lea
adc
sub
fistps
loopne
xor
pop
sahf
pushf
sub
sub
ja
fdivrs
int
or
imull
inc
mov
and
push
add
xor
push
lcall
or
sbb
inc
shll
shll
out
pushf
rcll
push
loope
mov
cmp
movsl
in
dec
jmp
fdiv
jge
inc
and
mov
adc
rclb
int
in
test
mov
ljmp
stc
stc
xor
sbb
insb
fcoml
in
xor
lret
inc
xchg
and
xor
mov
lods
in
mov
fsubp
icebp
or
imul
mov
test
popa
mov
mov
mov
or
sbb
js
lret
out
jmp
push
xchg
or
xor
dec
xor
test
subb
in
pusha
mov
xor
cli
les
fs
cwtl
jnp
cmpl
sahf
bound
leave
mov
cltd
dec
lahf
mov
sti
popa
pop
out
adc
inc
test
adc
pop
out
addr16
sbb
lods
xchg
sbb
dec
loope
mov
ljmp
pop
faddl
cmc
or
test
movsl
pop
loopne
and
cmpsb
cmpsb
jbe
or
test
or
jnp
mov
cmc
ret
sub
adc
xchg
data16
pusha
out
popf
lret
push
lds
cltd
mov
jo
subps
cmpsl
jl
mov
ds
bnd
pop
data16
stos
inc
cli
roll
pop
fbstp
repnz
jge
adc
dec
and
es
ss
pop
shl
stos
aaa
fsubp
gs
jne
rep
mov
fstps
shll
dec
lcall
lcall
adc
dec
lret
lcall
sbb
jno
leave
imul
xor
pop
repz
sbbl
ret
xchg
hlt
pop
jle
icebp
popa
cmpsl
mov
mov
insl
hlt
bound
sub
cmp
fistl
movsl
inc
shll
sti
ret
into
out
cwtl
stc
enter
js
rolb
int
xor
out
sub
subb
jne
imul
adc
daa
xor
xlat
pop
pop
sbb
add
xchg
rcrb
into
loopne
mov
stos
add
mov
jle
cwtl
inc
push
in
movsb
sbb
mov
sbb
test
dec
push
mov
addr16
out
bound
mov
scas
call
cs
pop
mov
mov
inc
fdivl
sbbl
int
xor
xor
lock
ret
ja
xor
and
pop
or
mov
jbe
scas
pop
pop
lea
addr16
mov
int
stos
rorl
dec
jbe
jg
add
or
lods
xor
push
and
xchg
popl
sahf
cltd
pinsrw
enter
mov
mov
mul
adc
jl
ljmp
call
xor
push
fisttpl
das
or
mov
mov
push
mov
cmp
repnz
movsl
stos
jae
sub
loope
pop
sahf
cmc
clc
xchg
lahf
push
pop
push
int3
mov
out
rcr
and
lds
pop
ds
xchg
push
push
xchg
adc
mov
xor
mov
pop
lcall
clc
xchg
xchg
jo
mov
xor
filds
or
scas
mov
push
xor
daa
mov
movzwl
enter
imul
sti
pop
inc
sbb
enter
pusha
cs
rcrb
dec
cmp
push
testb
adc
mov
in
pushf
add
and
push
pop
and
lcall
mov
mov
add
sub
lret
jno
dec
ret
stos
aas
pop
inc
sub
call
orl
sbb
adc
enter
push
dec
das
adc
and
loopne
lods
and
dec
dec
xchg
jnp
xchg
lcall
sub
call
sbb
in
loopne
adc
dec
inc
adcb
adc
sub
inc
cltd
cltd
in
icebp
lods
lret
adc
or
mov
js
clc
test
imul
pop
cltd
in
lods
jnp
add
iret
movsl
subb
gs
movsb
adcl
push
sbb
int3
adc
and
xor
fsubrl
add
lret
jb
aas
out
scas
mov
or
or
add
lea
xchg
imul
inc
cmp
xor
xchg
rorl
idivb
cmp
jno
adc
push
sub
ror
test
pop
imul
pop
gs
dec
lds
push
sub
sub
incl
out
mov
adc
leave
andl
outsb
inc
jg
mov
rdtsc
cmp
sbb
cld
dec
ret
flds
scas
push
mov
ret
mov
xor
mov
push
inc
inc
enter
test
jbe
push
or
pushf
add
jg
pop
push
lret
push
int
shrl
or
jb
call
shrb
xchg
sub
dec
mov
divb
push
cmp
jno
imul
arpl
or
xor
pop
cltd
push
or
and
jecxz
ds
xchg
mov
jge
jo
jg
out
lahf
pop
adc
es
pusha
ret
cltd
mov
mov
test
pop
mov
sub
icebp
movsl
sbb
pusha
ficomps
jbe
mov
add
in
les
jnp
or
add
in
sti
cmp
xchg
or
cmp
dec
jg
sbb
fs
imul
daa
mov
mov
test
arpl
adc
aam
int3
lahf
dec
cmp
mov
sahf
mov
lods
loopne
jns
push
push
clc
inc
dec
mov
xchg
adc
pop
out
in
insl
test
dec
fisttps
dec
xchg
push
movsl
scas
pop
pushf
loop
les
out
clc
pop
fmull
sahf
lret
lret
add
mov
and
loopne
pop
xchg
jmp
mov
add
pop
fstpt
mov
outsb
push
fwait
std
stos
dec
les
dec
scas
imull
cmp
inc
fistpll
add
fistl
mov
add
cmp
cwtl
fwait
sahf
jecxz
inc
dec
pushf
fucomi
fnstcw
xchg
push
mov
inc
inc
popf
ret
repnz
sbb
pop
add
jl
dec
mov
dec
fdivr
jmp
mov
inc
int3
push
out
cld
and
add
sarb
scas
imul
idivl
fnstcw
orl
inc
sbb
inc
dec
push
scas
mov
xchg
frstor
pop
lods
cltd
add
adc
sub
jnp
test
sub
fidivs
loopne
push
or
sub
out
pop
add
mov
dec
and
outsb
pop
mov
jo
in
mov
dec
dec
loop
icebp
lods
ret
add
aam
rcll
stos
insb
xor
adc
popl
inc
daa
jns
int
pushf
xchg
adc
ja
push
movsb
loop
xchg
aas
test
xchg
jbe
xor
in
sub
js
and
or
fadds
loopne
ret
mov
cmp
ret
or
ss
jno
push
xor
jecxz
push
fiadds
jmp
sub
adc
cmp
pop
out
xchg
call
push
push
sub
pop
insl
jp
in
sub
ja
in
cmpl
pop
inc
jecxz
outsb
pop
sarl
push
insb
ret
or
mov
inc
sbb
xchg
pushf
xor
ds
movb
pminsw
sbb
in
aam
pop
push
inc
jns
sub
lahf
mov
and
dec
mov
dec
xor
pop
xchg
shlb
mov
inc
je
push
dec
in
rcl
mov
movsb
inc
mov
add
xchg
jb
loop
cwtl
ds
shlb
in
xor
dec
jne
add
dec
mov
shll
gs
and
pop
out
push
cmpsb
sbb
fsubr
stc
out
clc
add
adc
fdivs
mov
push
loop
addr16
pop
loope
xor
lods
scas
lcall
or
jbe
jl
pop
jecxz
jl
out
out
jns
sub
add
fsubl
rcr
jb
mov
arpl
cmc
jmp
or
sub
in
add
adc
push
push
jo
adc
movsb
xchg
mov
push
cld
push
jge
call
sbb
aas
dec
jne
test
mov
call
adc
int
inc
push
mov
mov
sub
jmp
mov
shr
movsl
repz
and
push
ja
imul
xlat
stc
add
ss
mov
cltd
pop
ret
inc
pop
mov
mov
jecxz
sbb
pop
add
push
sahf
loope
pop
add
cmp
and
fnstenv
jl
xor
lret
jb
test
or
bound
adc
icebp
push
decl
push
inc
clc
jl
fstpt
int
sbb
add
xor
neg
arpl
shl
pop
imul
lahf
ret
lock
mov
ret
mov
fcoml
aas
hlt
cmc
je
mov
inc
into
movsb
or
roll
cmp
adc
xchg
push
xor
or
or
jnp
dec
out
pop
jmp
loope
xorb
cmp
lods
dec
xlat
out
xor
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
mov
mov
xor
lea
mov
mov
xor
add
jne
jmp
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
xor
add
jne
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
add
imul
mov
mov
mov
jmp
bound
push
fsubl
xchg
push
aas
fimuls
pop
jp
dec
xchg
ja
xchg
shll
rcrb
dec
mov
shll
mov
jmp
ja
lock
jne
dec
sbb
bound
bound
push
and
arpl
inc
xchg
jge
jmp
outsb
test
jbe
es
mov
lret
shr
pop
lret
or
push
mov
fildll
pop
in
mov
xchg
imul
clc
inc
xor
and
jg
fisttps
int3
pop
jnp
sbb
les
mov
ficoml
add
mov
shll
fldenv
pop
lret
cli
xchg
xor
ret
mov
packssdw
stos
mov
mov
loopne
outsb
int3
adc
cmpsb
movsb
lret
mov
pop
xchg
jmp
pop
rcl
dec
repnz
xor
aaa
sbb
and
push
fwait
cmp
addr16
xchg
incb
dec
add
loopne
adc
mov
das
fwait
jp
not
jno
inc
cmpsl
stos
js
lret
push
andb
cmpsb
lods
jg
aad
daa
in
push
aad
ds
pop
lret
test
jl
and
out
mov
jmp
jl
inc
es
inc
shrb
dec
test
loope
aas
outsl
lea
fldenv
gs
sahf
addl
dec
xor
lea
cld
mov
mov
lcall
in
aam
leave
cs
xchg
xor
xor
in
sbb
sbb
loope
adc
pop
out
inc
or
dec
push
test
je
sbb
pop
inc
inc
xor
xor
dec
lock
es
in
test
lock
in
pop
lcall
pop
iret
addr16
iret
xor
and
sub
xchg
mov
int3
push
lret
jns
scas
xlat
xchg
xchg
jae
repz
cld
lea
sarl
jae
cltd
daa
shl
cmp
adc
jbe
push
pop
fdivp
jge
inc
roll
jecxz
sub
repz
gs
jae
mov
mov
std
dec
cmp
das
sbb
cmp
and
repnz
pop
icebp
adc
cmp
push
xchg
inc
add
pop
xor
stos
xchg
aad
cld
lret
in
mov
mov
adc
insl
pop
add
hlt
mov
loopne
mov
mov
mov
lock
push
loope
jae
loope
push
scas
in
adc
sub
mov
sub
andl
xor
sbb
test
pop
mov
in
test
cli
aas
outsb
fsubrl
idivb
ss
lahf
jae
add
jne
xchg
sbb
jnp
int
loop
and
xchg
xchg
leave
hlt
imul
daa
add
ret
movsb
dec
jne
in
pop
add
aaa
cli
sbb
mov
adc
jbe
fcompl
xchg
sub
jbe
adc
push
insl
inc
fdivp
xchg
sub
negl
je
or
sbb
add
pushf
stc
mov
jp
inc
pop
pop
dec
out
into
xchg
mov
jno
xchg
inc
and
aas
add
dec
sarl
lret
dec
xchg
or
xchg
pop
and
loop
mov
sbb
jmp
in
insb
and
int
push
repz
jp
mov
pop
lea
and
mov
test
fistl
cmp
je
or
mov
popf
cmp
adc
ljmp
or
sub
push
aas
sbb
test
aas
or
add
cmp
fwait
or
jle
xorb
cmp
sub
fwait
push
xchg
inc
aas
push
fcmovb
stos
lods
push
adc
inc
mov
xchg
mov
pop
mov
insl
push
mov
vhsubpd
movl
add
sub
mov
aam
ja
sub
outsb
es
and
lock
sub
xor
flds
lret
jmp
fistpll
arpl
arpl
je
push
loop
pop
dec
cmc
addr16
jns
mov
jae
test
pop
add
sbb
cmp
out
mov
in
in
in
push
pop
xlat
xchg
pop
repz
roll
insl
popf
cmpsb
aaa
sahf
fucom
mov
test
lock
cmpb
sub
sbb
movsb
mov
jne
ret
mov
lods
jge
mov
pop
imul
push
leave
aad
cltd
les
fdivr
jbe
aad
stos
popf
cmp
movsb
pop
adc
aas
cwtl
imul
stos
test
jb
adc
stc
push
xor
out
pop
mov
push
stos
div
sti
fdivr
dec
notl
inc
xor
inc
dec
jg
cmp
cmp
inc
jae
outsb
jp
sub
dec
ret
or
cmp
ret
ljmp
lea
inc
leave
es
dec
ss
mov
jns
lds
popf
ds
std
rcll
pop
inc
shlb
xchg
dec
imulb
push
push
in
cmp
xor
fsubrl
clc
mov
or
lods
cmp
or
add
ljmp
mov
dec
xchg
jle
rcrb
pop
sub
scas
cmpsl
inc
mov
in
and
cmp
mov
insl
mov
in
ljmp
repz
out
xchg
call
or
sbb
and
inc
adc
js
insb
jle
js
mov
pop
xchg
sub
pop
and
mov
daa
fsubs
push
lods
in
cmpsl
aaa
loope
test
inc
fs
xchg
inc
xchg
sub
sbb
ds
push
loop
rcrl
xlat
insl
sbb
lds
or
or
lods
dec
pop
mov
push
pop
mov
adc
mov
scas
daa
insb
mov
xchg
jns
cld
pop
mov
xchg
mov
imul
sub
pop
xchg
orl
mov
xchg
fbstp
popf
and
cld
shll
out
pop
pop
jne
lods
cltd
or
add
and
into
popf
xor
sti
ficomps
mov
jge
movsl
lock
movsl
jo
push
mov
shrl
rorl
inc
xchg
ja
clc
mov
or
push
rorb
std
sbb
push
adc
mov
lret
and
ss
mov
push
inc
jl
es
fbstp
sahf
xor
mov
sub
fisubrl
sahf
mov
movsl
xor
and
filds
loopne
mov
push
mov
ret
lea
mov
jle
cmp
ja
test
push
inc
mov
pushf
add
push
stos
or
mov
or
cmp
or
mov
jge
cld
fs
push
mov
sbb
lods
ljmp
loopne
jo
or
push
and
testb
lret
mov
outsl
dec
imul
fsubp
cmp
mov
add
push
xor
or
mov
repz
mov
outsl
or
adc
leave
dec
xor
dec
dec
xchg
leave
inc
dec
loopne
test
sti
add
cmp
and
xor
sub
lahf
inc
or
mov
divb
pop
sub
xchg
jge
loopne
dec
mov
jg
add
mov
cld
add
cmpsb
mov
out
xor
xor
jo
inc
cmp
outsl
pop
cmp
mov
ljmp
xorb
orl
mov
cmp
clc
pop
or
aas
add
repz
lods
add
jmp
or
cld
jbe
mov
add
bound
iret
mov
insb
xchg
mov
adc
je
outsl
push
fnsave
test
xor
outsb
sti
call
dec
mov
pop
push
movsb
pop
cmp
mov
mov
aaa
xorl
dec
sub
mov
loop
push
fimull
mov
loopne
out
jbe
push
dec
popl
in
shrb
loope
jae
inc
addr16
sti
ret
negb
xchg
cld
mov
mov
xor
pop
insl
add
jno
fisttps
mov
fdivrp
push
xchg
or
repnz
add
loop
dec
sti
push
mov
movsb
inc
dec
jge
rolb
pop
in
adc
sbb
inc
push
outsb
ds
xor
loopne
pop
and
xchg
push
ds
shlb
add
mov
andl
jge
inc
scas
adc
sub
repnz
cld
jp
pop
lcall
adc
sub
mov
mov
insl
sar
mov
jne
orl
in
scas
jmp
sti
sbbl
xor
jge
sbb
mov
cs
lret
in
xchg
lea
daa
ficoml
or
cltd
push
cmp
mov
rcll
fmul
mov
xchg
xchg
nop
mov
adc
in
rcr
push
lods
enter
stc
ret
pop
shrl
mov
xchg
les
in
xchg
es
xor
neg
dec
xchg
shrb
enter
pop
and
std
cmp
sahf
or
jg
sahf
and
mov
cmpsl
sbb
add
push
ret
rcr
cwtl
ficompl
std
movb
mov
sbb
inc
add
jbe
ret
arpl
cli
les
dec
ficoms
decl
setns
sbb
into
push
push
inc
in
xorb
jae
inc
pop
add
popa
pop
repnz
push
cmp
outsl
leave
dec
pop
ret
fistl
add
leave
push
mov
lret
sub
dec
loope
ror
cmpsl
sub
xor
ja
inc
in
bound
shrd
pop
push
pop
js
scas
sahf
stos
cmp
mov
jmp
xlat
je
push
enter
sbb
add
test
out
cld
or
mov
sub
dec
out
outsb
lahf
pop
pop
adc
stc
ret
rclb
xchg
sub
pop
pop
push
pop
rol
dec
mov
cltd
mov
xor
repz
jl
jae
mov
jnp
and
ss
push
push
fwait
jmp
insb
mov
mov
push
imul
in
mov
pushf
or
push
hlt
mov
iret
inc
cmpsl
sti
cmp
xchg
xor
mov
dec
xor
xor
sbb
sub
and
int3
mov
movsl
out
cmp
jl
ffreep
mov
lods
inc
dec
sub
xor
out
push
mov
sub
ret
test
dec
in
push
aaa
scas
sbb
insb
fwait
push
pop
or
jnp
fwait
imul
sub
int
outsl
lret
sub
xchg
bound
pop
cld
nop
pop
rcll
in
jl
cwtl
repz
mov
push
xor
cwtl
add
jnp
data16
in
sub
movsb
pop
xor
adc
xchg
mov
xchg
mov
outsl
sub
dec
lock
inc
xchg
filds
cmp
out
rcll
sub
into
inc
or
clc
inc
test
pop
add
adc
popa
jmp
aas
xchg
pushf
or
psrlq
jge
xchg
sbb
mov
cmp
jg
loopne
inc
jo
sbb
dec
pop
jmp
jmp
insl
stc
xor
mov
mov
push
addb
movsl
xor
lea
lret
lahf
or
xchg
push
dec
and
out
lcall
es
jne
insl
pop
icebp
pop
xor
test
mov
ror
xor
popa
lahf
mov
mov
pop
mov
mov
xor
jl
xlat
enter
add
mov
add
xor
push
out
jo
lahf
pop
jecxz
into
inc
stos
loop
outsl
sub
xlat
in
mov
sbb
jae
add
scas
test
mov
in
pop
add
and
pop
mov
dec
add
leave
in
pushf
clc
in
mov
repnz
in
push
inc
or
xor
pop
jge
push
jns
in
xor
aaa
jbe
lret
xchg
jo
inc
insl
mov
cmc
lods
leave
hlt
adc
add
mov
pcmpgtw
cmp
std
lods
xor
cmc
xor
add
int
pop
scas
or
fdivp
data16
cmpsb
lock
inc
sub
mov
inc
sbb
ror
jb
pop
daa
xlat
ret
lods
pop
test
pop
jecxz
sbb
shll
or
pop
repnz
aam
ljmp
add
and
insl
shlb
sbb
fisubs
aad
cld
std
jmp
lds
or
imul
aad
inc
add
outsb
shll
iret
xchg
dec
cmp
aaa
les
into
scas
cmp
test
loopne
push
movsl
jbe
lahf
sahf
xor
dec
or
data16
cwtl
xchg
fcoms
inc
or
popa
mov
out
and
dec
inc
iret
push
out
cs
frstor
xchg
cmp
repnz
push
aaa
mov
push
movb
pop
sub
mov
fs
rol
xchg
sbb
lahf
lret
cld
scas
xchg
stos
cwtl
hlt
test
add
xchg
dec
jno
icebp
in
jno
inc
dec
inc
jae
das
jbe
mov
fwait
loope
fcoms
add
inc
cmp
int
cmpsl
test
xchg
push
outsb
sbb
add
icebp
sarb
mov
inc
bound
adc
pop
pop
adc
cmp
or
mov
lods
xchg
nop
scas
mov
stc
xchg
jmp
push
cld
cltd
imul
fisttps
xor
xchg
sbb
xchg
push
and
shr
into
sub
jg
pop
cmp
mov
mov
dec
and
and
pop
push
mov
stc
adc
dec
int
adc
clc
dec
and
push
add
mov
loopne
nop
fidivs
or
add
cmp
movsl
jmp
mov
stos
sub
pop
test
mov
in
add
adc
push
outsl
xchg
sbbl
inc
mov
notb
push
mov
data16
cld
sbb
jb
subl
aad
or
xor
jp
pop
jnp
mov
xlat
hlt
sbb
inc
inc
inc
mov
das
cmp
stc
js
fdivl
adc
jge
mov
cld
and
cmc
or
ljmp
jb
cmpsb
dec
jg
shl
dec
sbb
mov
jecxz
mov
or
shl
push
pushw
gs
lcall
mov
loope
cmpl
inc
js
xor
pop
xlat
loopne
stc
iret
inc
ret
popa
loop
popf
inc
out
iret
push
test
xor
pop
push
xor
bound
daa
hlt
mov
jno
mov
sbb
pop
cmp
push
mov
lahf
mov
xchg
sub
sub
mov
push
in
or
movsl
inc
sahf
or
lods
cmp
xchg
sbb
fadds
mov
jbe
call
adc
popf
stos
mov
stos
mov
cmp
lret
dec
xor
add
mov
ret
xorb
mov
mov
addr16
test
std
fwait
pop
mov
stos
cmpsb
xor
mov
outsb
loopne
or
jle
sahf
arpl
and
xlat
int3
lret
xorl
sbb
push
jle
leave
dec
lods
lods
test
rorb
sbbl
dec
loope
std
test
icebp
and
inc
mov
sub
mov
xchg
push
adc
pop
insb
add
mov
cwtl
add
hlt
psraw
test
subb
pop
mov
jo
mov
loope
mov
push
leave
and
rcrl
out
ja
ljmp
out
stos
jbe
mov
sbbl
mov
jecxz
and
xchg
outsl
mov
xor
push
sbb
sahf
adc
push
adc
sarl
fistps
inc
add
rclb
adc
cltd
cmp
pop
pop
mov
sub
fldcw
aas
shrl
mov
jmp
gs
ret
sahf
add
add
aaa
mov
and
filds
dec
mov
sbb
xorb
imul
pop
add
dec
lret
xchg
dec
xor
pop
test
int3
iret
push
mov
cmp
in
inc
std
sub
cltd
cwtl
and
sbb
add
push
stos
test
jle
mov
gs
fs
sti
push
outsl
repnz
in
mov
movsb
jbe
mov
mov
add
pop
jmp
sub
add
push
jno
add
arpl
jg
repnz
outsl
inc
popa
cmp
stos
pop
das
push
mov
sub
push
in
adc
inc
push
sbb
jo
ss
xor
mov
cmc
incb
test
mov
movsl
out
dec
pop
push
jno
pop
xor
dec
das
mov
fwait
mov
enter
jge
adc
sub
cmovae
lret
stc
outsl
out
rcrl
mov
or
pushf
mov
and
sti
outsl
xchg
and
push
pushf
pop
negb
add
fisttpll
pop
cmp
popl
cs
mov
pop
pop
xor
rorl
icebp
xchg
xchg
cmp
cli
or
int
ret
jmp
decb
not
cmp
mov
sub
cmp
movsb
and
in
pusha
cld
mov
mov
pop
dec
dec
bound
fwait
leave
xor
fmul
out
mov
sub
pop
pushf
loope
mov
push
and
inc
cltd
jae
daa
dec
inc
inc
jl
mull
and
push
dec
push
movsl
fwait
jp
xchg
stc
out
xchg
aaa
out
xchg
and
xchg
scas
imul
cs
je
cmp
test
and
int
jl
fsubr
xor
addps
scas
fs
adc
mov
leave
int
inc
and
addb
xor
cltd
dec
sbb
clc
dec
ss
xchg
scas
test
mov
or
dec
adc
dec
insb
fimull
jb
push
aaa
int3
out
mov
mov
ja
pop
inc
lock
fidivrs
sbb
cs
and
cmpsl
nop
mov
movzbl
jnp
test
insb
pop
push
fbld
mov
adc
pop
push
js
int
inc
add
adc
aad
pop
das
jge
in
xchg
fbstp
jbe
int
nop
add
adc
in
mov
popf
jne,pt
ss
out
lret
imul
loope
jo
sbb
and
rolb
xchg
lds
pop
ffreep
jp
add
add
out
xchg
test
jne
movsl
jp
scas
dec
sbb
mov
mov
pop
ljmp
dec
jbe
lods
pop
test
daa
push
ret
pop
lods
insb
xor
es
inc
or
mov
aaa
popa
jle
inc
add
or
cmp
lcall
movsb
add
loopne
leave
adc
adc
bound
jae
sbb
and
add
cmpsb
bound
test
lds
daa
xor
mov
adc
ljmp
cld
pop
inc
ss
jl
cwtl
es
xchg
and
xor
xchg
subb
std
in
xor
cmpl
hlt
inc
jno
push
inc
sbb
or
xchg
cmp
ss
nop
xchg
inc
in
fiaddl
xchg
pop
cmp
in
je
or
sub
push
push
stos
mov
or
daa
int
out
cltd
filds
add
jnp
mov
pop
inc
cmpsb
repnz
jns
pop
jae
xchg
sbb
loope
daa
pop
lahf
push
lock
xor
inc
out
jnp
ret
out
sbb
and
sub
mov
sub
icebp
fbstp
stc
sub
out
insl
int3
loopne
mov
mov
scas
inc
push
addl
and
stos
inc
mov
sahf
mov
jp
add
stos
flds
es
and
dec
fs
loopne
xor
lret
cmpsb
mov
or
add
test
in
leave
test
ljmp
push
fiadds
ja
fnstsw
pusha
add
js
dec
scas
jns
xchg
out
xor
sub
stos
mov
mov
cs
mov
sti
push
pusha
xor
out
xchg
ljmp
lods
sbb
jecxz
lahf
dec
addr16
sub
shlb
pop
imul
in
ja
cwtl
das
bnd
test
inc
aam
fadd
pop
xor
rclb
jne
push
pusha
arpl
jb
mov
fistps
cmp
addr16
pop
out
sar
or
insw
adc
lods
push
jmp
push
jp
icebp
pop
lcall
jp
vpmulhw
inc
nop
pop
bound
inc
mov
inc
fidivs
fildll
and
sbb
xchg
sbb
ja
xor
out
cmp
sbb
xor
adcb
cmp
adc
les
mov
jnp
clc
ds
imul
in
pop
movsl
inc
cmp
add
push
nop
fdivs
jecxz
ljmp
je
inc
adc
add
jae
je
or
or
mov
mov
push
sub
or
out
movsb
or
mov
adc
insb
ds
es
cmp
or
adc
or
add
dec
insl
cmp
je
adc
inc
fnstenv
xchg
mov
push
push
jne
fwait
loopne
dec
mov
mov
lods
mov
aam
cs
add
mov
mov
push
and
cmp
cmp
inc
orl
js
lret
inc
out
movsl
push
je
or
mov
fdivrl
insl
adc
jne
xchg
pop
push
fbstp
xor
push
in
sub
mov
movsl
imul
mov
sub
xor
and
test
cmc
mov
xchg
sub
jno
loope
or
cmp
sub
cmp
sahf
mov
lret
add
jnp
stos
pusha
fstl
ds
lds
ret
xchg
and
dec
push
fdivrp
ja
cld
mov
cmovle
fcmovu
imul
sbb
jecxz
roll
fmull
or
or
add
mov
xlat
lcall
jge
std
insb
fwait
inc
add
push
pop
pop
xchg
jno
arpl
scas
lcall
stc
imul
shll
bound
dec
push
ror
scas
jo
pop
pop
add
sbb
xlat
or
in
push
inc
inc
fistpll
mov
in
adc
js
xchg
sub
xor
push
mov
xchg
or
inc
cld
out
mov
mov
inc
mov
adc
lea
out
out
test
iret
jmp
pop
add
or
mov
aad
shrb
lods
stc
cmpsl
outsl
or
loope
fisubrs
add
mov
prefetchnta
ret
popa
push
dec
inc
data16
pop
and
cmpsb
imul
negl
ds
adc
bound
jne
xor
mov
testb
in
stos
into
mov
fiaddl
andb
popa
cmp
divl
or
loop
and
lret
stos
and
mov
sub
scas
arpl
scas
xchg
mov
adc
out
cmp
loope
xchg
xchg
into
or
les
das
cld
shlb
push
pop
into
pop
outsl
cmp
fs
ja
mov
shrl
mov
inc
push
jnp
mov
clc
into
out
mov
jnp
mov
add
xchg
mov
stos
jnp
sbb
xlat
sub
rcll
mov
xchg
out
pop
jmp
dec
sub
xchg
cmp
jle
aad
out
cmp
int
into
and
test
or
stos
arpl
mov
add
add
push
out
adc
test
out
mov
push
ds
dec
sub
repz
sbbl
sbb
fwait
sbb
aaa
lcall
je
or
mov
call
sub
shl
aas
mov
mov
xlat
ja
push
jg
dec
and
push
jne
add
gs
pushf
cmp
lods
add
push
insl
sahf
jne
fidivl
pop
push
lods
inc
stos
mov
nop
mov
iret
mov
jno
cld
mov
imul
loopne
cwtl
and
mov
leave
dec
xor
into
push
in
cli
adc
xchg
jl
xor
call
jecxz
fmul
push
cmp
adc
lea
divb
aad
mov
jl
xlat
mov
add
jne
xor
je
pusha
add
in
add
lret
push
dec
or
das
stos
jne
sahf
mov
pop
sub
ret
clc
lahf
and
lret
add
shl
icebp
popf
sarl
rcll
aaa
imul
pop
dec
div
mov
std
nop
repz
je
inc
arpl
movsb
xor
sti
jmp
or
addb
mov
or
jae
rcrb
pop
pop
stos
sbb
js
and
mov
sar
pop
xchg
lea
fstl
out
inc
add
shlb
jae
imul
and
aad
pop
cmpsl
test
les
and
push
lcall
cmp
test
mov
jg
mov
dec
es
cmp
addr16
stos
mov
mov
lea
shll
mov
xchg
or
mov
adc
movsb
cmp
das
adc
arpl
mov
mov
pop
mov
cmp
push
inc
rorb
mov
mov
xor
fnstsw
and
xor
and
or
data16
das
xchg
push
cmp
popl
mov
push
adc
aaa
push
ret
cwtl
into
dec
leave
lods
xor
or
popf
stos
scas
loopne
adc
sbb
mov
aam
pop
enter
and
movsl
and
out
push
lea
sahf
pop
mov
add
xor
mov
pop
scas
sbb
mov
test
adc
add
scas
call
mov
inc
pop
shlb
iret
jmp
repz
mov
dec
and
xchg
xor
clc
daa
shr
popa
cmp
aam
mov
mov
ret
push
mov
daa
sub
insb
mov
mov
stos
adc
imul
xchg
inc
inc
or
mov
lret
in
mov
xchg
in
fstpt
inc
xor
scas
mov
sbb
inc
inc
hlt
sbbb
xlat
mov
jg
or
subl
sub
jnp
stos
mov
jg
push
rcl
adc
sub
jno
ret
dec
jnp
jmp
adc
lcall
mov
sub
insb
dec
pop
mov
out
das
leave
xchg
fdivl
fsubrs
dec
push
cmp
shlb
push
aaa
mov
mov
popf
xchg
push
das
ja
imul
ret
cli
mov
repnz
inc
popl
pop
lcall
jno
mov
test
mov
mov
cli
push
cltd
lret
out
loop
jg
insl
xchg
icebp
cs
pop
dec
sbb
je
jp
cs
rcll
xor
aam
adc
fs
sub
mov
cwtl
jmp
jg
mov
mov
jg
adc
mov
jb
mov
pop
dec
xor
and
push
dec
outsb
mov
int3
jb
and
push
sbb
push
leave
mov
lods
mov
cmpb
jmp
movsb
jg
dec
jno
cwtl
out
fs
cmp
stc
xchg
xchg
inc
sbb
ficoms
push
pop
lds
add
sub
outsb
push
mov
mov
sub
dec
stos
jb
sub
mov
mov
mov
repnz
das
adc
lock
pushf
pushf
inc
test
sti
decb
andl
cmp
lcall
ds
mov
or
xor
lcall
out
dec
xor
sahf
jns
andl
insl
mov
int
ds
aas
ljmp
add
adc
add
fidivs
loop
adc
xchg
jl
sub
xchg
cltd
loope
xor
je
aad
and
lahf
xor
mov
inc
mov
loopne
cmp
push
jecxz
rorl
dec
ja
adc
mov
inc
sub
ds
insl
xchg
insl
test
xchg
lret
dec
xor
mov
aaa
mov
mov
pop
fmull
addr16
dec
clc
stos
mov
mov
xchg
mov
mov
sbb
fwait
sub
test
xchg
js
inc
adcl
xchg
es
nop
sbb
cmp
call
cmp
add
shr
adc
fs
push
loope
icebp
dec
int3
push
imul
or
es
scas
fs
sbb
sbb
add
xchg
insb
mov
jecxz
mov
xor
adc
cmp
pop
push
push
push
xor
cmp
dec
rol
in
and
xlat
ficomps
punpckldq
enter
cs
ss
adc
add
sub
jp
push
mov
add
mov
xchg
inc
aam
inc
std
add
and
mov
outsl
test
mov
bound
sbbb
sarl
movsb
pop
loopne
in
xor
pop
notb
sub
xor
orl
cli
cwtl
and
pop
jbe
out
sbb
mov
push
call
jp
jl
xor
xchg
repnz
ja
mov
ljmp
inc
inc
xlat
jmp
sbb
es
pop
or
push
cpuid
xchg
push
xor
jle
fwait
je
xor
mov
lea
or
inc
inc
subl
jg
xchg
jl
cmp
fucomp
movsl
jg
pop
adc
mov
out
shlb
outsl
add
sbb
pop
xchg
push
jmp
add
in
sub
push
ficomps
jns
sbb
and
lods
adc
or
dec
cmpsl
mov
inc
mov
dec
js
bound
xchg
push
loopne
js
push
jl
rclb
mov
xor
daa
outsb
push
inc
lods
xor
or
sarl
adc
mov
xor
sbb
mov
xchg
into
push
insb
lcall
sub
sbb
add
inc
in
xchg
mov
test
mov
adc
scas
mov
dec
adc
daa
imul
inc
idivb
das
in
inc
jg
ss
cmpsl
repnz
xor
and
add
xchg
and
testl
enter
dec
lock
lret
dec
add
sub
inc
adcb
clc
jge
xchg
and
outsb
test
add
mov
fdivrl
js
xor
cmp
or
xchg
cmp
xor
add
cld
adc
xor
daa
push
inc
cmpsl
pop
jle
or
jne
mov
icebp
ljmp
xchg
lock
push
jecxz
incb
jo
testb
imul
pop
test
mov
pop
pop
adc
jae
adc
std
dec
sub
mov
out
jo
es
jmp
or
sbb
sub
dec
sbbb
add
or
mov
mov
mov
add
xor
mov
mov
mov
add
and
mov
mov
mov
lea
mov
mov
mov
sub
add
mov
mov
jmp
loope
xchg
xchg
fisttpl
push
fldenv
jp
pop
jp
aam
cmp
out
dec
orl
and
jecxz
daa
sarb
xchg
mov
lahf
aas
mov
outsb
imul
xchg
lods
sti
pusha
dec
das
gs
lret
add
dec
es
lods
jle
pushl
mov
shll
mov
cs
jbe
jge
xor
dec
iret
xor
pushf
add
jae
daa
lret
xchg
pop
sti
test
ret
pop
lret
push
orl
xchg
lret
mov
jmp
cmp
mov
pushf
sub
push
jae
push
rolb
cltd
idivb
jmp
sbb
sbb
jns
das
sti
scas
or
push
fcmovu
adc
fdivs
loopne
cmp
xlat
je
fildll
loopne
inc
pop
cld
and
test
aam
les
or
outsb
mov
scas
insl
in
imull
or
or
dec
mov
xor
aaa
loopne
and
pop
sub
sbb
fldl
daa
mov
aaa
into
sub
or
int
out
sbb
dec
xchg
pop
aaa
pop
lea
pop
ja
stc
imul
lcall
xor
jmp
pop
fwait
sbbl
cs
push
out
repz
aaa
mov
stos
out
cmc
add
or
dec
test
leave
push
dec
popf
es
cmpsb
js
pop
xchg
lret
jo
subb
xor
frstor
sub
adc
or
data16
inc
ljmp
inc
jle
push
testl
sbb
data16
mov
repnz
jns
int
mov
mov
lahf
adc
push
out
aad
sub
mov
shrb
addl
stos
and
aam
retw
subb
or
pop
push
cmp
push
loop
movsb
rcll
xchg
in
lcall
push
dec
out
ds
outsb
mov
fstpl
xorl
and
iret
pushf
dec
out
dec
mov
pop
jle
jle
cld
dec
dec
dec
les
shrl
int
sarb
pop
int
repnz
test
nop
ljmp
mov
mov
cmp
inc
push
cmp
mov
lea
sub
mov
dec
sub
punpckldq
outsl
cmc
insl
lret
jne
pop
mov
jg
arpl
pop
popl
dec
sub
adc
andl
push
mov
daa
push
jbe
lds
ret
inc
ret
add
mov
jae
xchg
in
clc
rcrl
pop
test
adc
mov
pop
add
mov
push
out
pop
fs
sbb
popf
xor
inc
mov
sub
sarb
xor
push
int
adc
data16
adc
cli
clc
aaa
sti
add
mov
push
sub
push
insl
mov
add
or
rorl
sbb
in
in
stc
test
mov
mov
fs
or
mulb
daa
jge
mov
sbb
das
sub
outsl
mov
pop
pusha
das
pop
outsl
dec
add
and
mov
cmp
adc
mov
adc
xchg
mov
xchg
hlt
out
imul
xchg
sti
popf
xchg
fwait
sub
adc
inc
rorl
push
out
cmpl
or
test
pop
mov
inc
xor
push
mov
daa
lock
and
xor
xchg
push
shll
cmpsl
jmp
add
mov
inc
clc
in
mov
pop
test
mov
xor
nop
and
movsl
add
sbb
hlt
data16
popa
bound
data16
adc
popa
lds
pusha
and
mov
sarl
xor
sub
orl
addr16
sub
arpl
cmp
cli
jbe
xchg
je
imul
inc
pop
push
dec
inc
ljmp
lods
sub
addr16
push
mov
test
cltd
or
out
cmp
push
jbe
xchg
sbb
clc
and
jo
fisubs
lret
cmp
inc
and
rorb
mov
xor
lea
cli
test
sahf
and
lock
fldt
mov
sbb
pop
loopne
sub
or
push
xchg
fwait
cmpl
in
add
ret
hlt
ja
sub
push
jl
insb
shrb
or
sbb
pop
addr16
cmp
push
loopne
aam
pushf
inc
icebp
ds
imul
or
scas
sub
ret
in
sbb
jo
sub
jge
xor
push
jno
add
ljmp
push
mov
mov
or
hlt
imul
test
test
jo
shrb
xor
and
lds
movsl
ficoms
rcrl
out
push
cmp
mov
scas
jo
jp
fisubl
les
adc
or
xor
leave
fcmovu
mov
cmp
mov
jb
sahf
dec
bound
jb
pop
fildl
fimuls
test
adc
imulb
push
mov
push
jae
adc
fidivrs
mov
cmpb
mov
adc
xchg
inc
xor
movb
push
add
mov
sub
mov
pop
sbb
xchg
clc
repnz
xchg
lock
in
clc
mov
pop
lret
sbb
jbe
inc
sbb
inc
mov
push
dec
lock
inc
movsb
sti
mov
sbb
mov
xchg
dec
push
sub
dec
ja
int3
sub
test
shrb
sahf
lcall
out
mov
push
jmp
sbb
mov
sub
push
cld
xchg
push
sti
cmp
lret
cli
inc
stos
jae
or
lods
out
scas
push
paddusw
inc
or
inc
cwtl
xchg
xor
mov
mov
mov
in
lahf
aad
in
imul
aaa
sbb
pushf
push
inc
pop
mov
in
outsb
mov
cmpsb
pop
xor
lret
lcall
scas
inc
mov
cs
pop
dec
pop
arpl
jno
addb
repnz
cmp
ret
gs
dec
mov
mov
rcr
mov
sahf
fisttpll
pushw
cmp
mov
jle
cld
mov
jae
adc
push
clc
xchg
adc
pop
daa
arpl
test
jp
mov
aad
daa
out
cld
dec
mov
insb
rol
int
and
notb
mov
sahf
scas
add
lea
ret
das
sbb
dec
mov
push
xchg
or
aaa
and
and
aad
add
cmp
sub
and
cltd
pop
int3
adc
mov
inc
sbb
adc
arpl
ret
sbb
ja
mov
dec
dec
xor
mov
dec
movsl
push
int3
push
and
int
pop
gs
jg
out
push
inc
js
jbe
adc
cli
mov
pop
pop
push
pop
jns
jp
jge
mov
sub
sbb
inc
push
in
mov
punpckhwd
arpl
adc
xchg
inc
mov
pop
xor
in
test
filds
mov
mov
shlb
imul
addr16
pop
pop
fsubrs
mov
in
test
jb
lret
subb
dec
fldenv
mov
cmc
and
fwait
push
sbb
adc
inc
orl
jle
sub
mov
hlt
lock
adc
add
mov
push
ds
adc
ficomps
adc
dec
gs
mov
int
test
dec
and
sub
push
pop
jns
stc
lods
stos
outsb
pop
push
hlt
or
cwtl
push
stos
cld
pop
adc
aad
addr16
xor
and
jmp
cmp
stos
test
xor
sbb
stc
pop
test
aaa
and
pop
or
and
fstl
xor
or
dec
jb
pop
add
xchg
push
pop
push
ja
dec
das
push
xchg
lret
int3
and
lfs
sub
jge
pop
aaa
adc
jne
lods
nop
xor
or
mov
add
xchg
fisttps
lds
nop
adc
push
jmp
cmpsl
das
pop
shl
insb
sbb
xchg
repnz
mov
sub
dec
xor
cltd
ja
sar
rcrb
loop
mov
fwait
les
test
mov
mov
lret
jecxz
mov
lds
nop
pushf
loope
push
xor
lods
aad
dec
mov
mov
mov
fs
xor
xchg
inc
loope
ds
enter
lea
call
xchg
mov
shrb
test
mov
clc
dec
inc
lret
jo
and
loopne
scas
mov
iret
pop
add
addr16
xor
adc
fmull
lds
add
dec
push
pushf
cmpsb
pop
sbb
lods
pop
stos
mov
xlat
fistps
das
nop
add
cmc
std
aaa
pusha
clc
xchg
dec
jmp
jecxz
inc
mov
pop
sub
testb
repnz
cs
cmp
loope
movsl
std
lock
lods
and
jae
pop
jecxz
dec
fisubrs
inc
cmp
daa
cmpsl
loopne
sbb
fwait
push
cmp
test
lret
aam
sbb
sahf
and
jns
cmp
lret
cs
or
es
push
mov
cmp
or
aam
pop
test
lods
push
fidivrl
mov
imul
fldlg2
cmc
add
sub
add
pop
in
arpl
rorb
inc
rcrb
iret
adc
lea
pop
insb
pop
cmpb
int
ficomps
pop
cmc
xchg
popf
inc
enter
js
xorl
ret
xlat
mov
outsb
cwtl
imul
shr
movsb
inc
and
push
movsl
into
dec
push
aam
out
xor
sbb
mov
push
mov
aaa
movsb
and
sbb
orl
fdiv
jo
mov
add
dec
fmuls
fcoml
cld
test
daa
mov
hlt
fwait
aaa
dec
add
test
jl
sub
and
inc
push
test
aad
divb
popa
in
rcr
xchg
mov
movsb
lods
es
xchg
mov
jge
pop
scas
inc
xor
repnz
xchg
test
mov
data16
mov
and
imul
call
adc
xchg
sbb
pushf
xchg
imul
jmp
je
dec
xchg
sar
lock
dec
loopne
cltd
call
lcall
push
shrb
jl
fucomp
in
jle
xchg
repz
xor
mov
loop
or
inc
shll
arpl
add
jae
push
sbb
lods
pop
inc
mov
fwait
aam
repz
xchg
jne
push
jmp
mov
lahf
jmp
pop
xor
adc
iret
dec
dec
pop
jl
mov
jne
sub
fcom
enter
fdivl
or
mov
jl
add
xchg
pop
xchg
cmc
mov
out
cmp
sti
xor
xor
dec
cmp
ret
clc
insb
in
fsubrp
push
mov
lods
xor
aad
lret
sbb
pop
jecxz
mov
ret
call
cmp
xchg
mov
inc
clc
pop
xorb
iret
incl
sbb
jns
pop
mov
sbb
push
ss
sub
mov
inc
inc
adc
rcrl
push
or
push
aas
dec
dec
mov
mov
jo
xlat
push
movsb
xor
mov
inc
add
repnz
xor
pop
push
inc
rorl
cmpsl
shll
xchg
mov
or
adc
fs
xchg
mov
popf
pop
xchg
pop
or
xor
inc
test
js
dec
outsb
pop
jmp
iret
sub
inc
orl
adc
dec
imul
fwait
mov
imul
in
fldl2e
add
lods
iret
sbb
int
test
icebp
es
cmc
sti
fistpl
sub
out
mov
cmpsb
inc
cmp
dec
pop
mov
loope
add
cmp
fstpl
insb
jge
lea
sub
sub
mov
in
push
pop
pop
and
push
add
aaa
lods
sub
mov
mov
dec
in
or
mov
ja
int
push
dec
xor
adc
mov
jns
fstps
adc
or
mov
orb
popf
popa
jmp
gs
add
push
pop
xorb
pop
call
mov
push
pop
pop
pusha
or
push
xor
or
cs
scas
out
mov
pop
lods
adc
in
jns
push
mov
lcall
mov
out
scas
fidivl
adc
push
sub
fimuls
out
cld
rcrb
lret
test
insw
sbbb
xor
icebp
dec
or
mul
inc
sbb
cltd
sarb
mov
fucom
jb
mov
out
xchg
push
xor
jp
fbld
dec
mov
jg
add
ret
add
add
cmp
mov
and
mov
outsb
lods
ja
mov
repz
sbb
lahf
or
xchg
or
rol
pop
mov
out
mov
shll
cmp
scas
mov
jl
sar
and
iret
les
testl
jae
pusha
ss
dec
and
or
das
shl
inc
out
mov
or
adc
loope
outsb
out
and
cltd
fwait
lcall
lret
mov
xor
data16
popa
clc
fadds
pusha
sbb
repz
jmp
clc
out
stc
push
cmpsb
aaa
ret
jae
cmpsl
mov
popf
fs
jno
mov
cmp
mov
xchg
insl
test
adc
or
pop
call
mov
push
mov
push
rorb
inc
jb
ja
jle
aam
mov
pushf
mov
out
xchg
add
insl
mov
push
aaa
cmp
jmp
incl
and
push
or
cwtl
aaa
sbb
jecxz
cmp
mov
push
out
or
fnsave
add
push
add
dec
arpl
cmp
mov
outsl
add
aaa
mov
pop
pop
fstpt
lods
or
es
fstpl
out
bsf
cmp
pop
out
push
lret
lds
mov
xlat
push
aas
fwait
aas
jnp
add
jno
xor
popf
cmp
insl
out
cmp
fdivrs
movsb
mov
add
dec
mov
cmpsl
cwtl
adc
sub
jo
sahf
mov
mov
dec
frstor
mov
lret
scas
pop
fsts
int3
clc
adc
ficoms
jecxz
inc
add
and
ret
or
dec
in
enter
dec
stos
lahf
fbld
push
test
aas
or
mov
xchg
cmp
addr16
cmp
lahf
lcall
sub
test
inc
jbe
dec
and
mov
cs
cmpsl
pop
test
jge
push
stos
fadd
mov
push
je
cmp
ficompl
test
rolb
popa
add
and
or
push
dec
clc
sbb
data16
pop
dec
gs
sub
jno
cmp
outsl
xchg
dec
mov
mov
inc
aas
dec
mov
pop
sarl
inc
push
das
in
or
jbe
dec
dec
adc
mov
jl
adc
mov
roll
dec
mov
shl
clc
or
je
sub
push
xchg
or
jg
out
arpl
fsubl
push
mov
sub
mov
insl
push
mov
jne
mov
aaa
pop
insb
xchg
jbe
cltd
outsb
das
inc
jl
sbb
mov
mov
icebp
std
test
rclb
mov
push
ds
scas
call
movb
mov
mov
sbb
data16
es
test
pop
mov
sbb
inc
outsb
xchg
sbb
pop
jnp
pop
addb
bound
inc
shll
push
cld
test
jns
test
push
push
outsb
pop
stos
cmp
adc
jg
icebp
repz
mov
cmp
jecxz
xorb
lret
mov
repz
or
js
jp
push
sti
imul
inc
add
cmp
mov
ss
or
cwtl
and
aam
push
or
andb
push
mov
jbe
push
dec
in
jge
nop
popf
xchg
jl
pop
push
cli
or
mov
mov
pop
out
pop
fists
int3
mov
xchg
xchg
mov
pusha
imul
jb
xchg
mov
cmp
lcall
data16
ja
push
mov
cmp
ds
jne
orb
jnp
cs
iret
pop
pop
lods
ret
add
scas
insl
jmp
dec
mov
fst
mov
and
jl
movsl
outsl
popa
or
xchg
pop
pop
push
or
orl
jge
or
daa
lcall
inc
lods
or
mov
fnstenv
sub
or
jecxz
mov
pushl
cltd
mov
xchg
in
int
jge
sub
in
xchg
add
ret
je
les
inc
mov
jno
mov
pop
sub
lcall
cli
push
or
mov
arpl
add
sbb
insl
lcall
push
mov
ja
ret
cmp
pushf
push
jl
dec
outsl
mov
adc
das
shlb
xchg
loope
shl
mov
mov
out
std
ret
sahf
mov
aas
jg
repnz
pop
push
and
cmpsb
dec
rorb
js
add
psubusb
hlt
sub
mov
lahf
sbb
dec
jg
push
dec
jb
es
xchg
iret
gs
add
gs
sub
imul
es
jb
jg
das
pop
add
lret
xor
lret
jl
inc
subl
mov
in
loop
push
enter
sub
outsb
push
mov
inc
mov
pop
push
adc
cmc
and
mov
mov
pop
loop
push
adc
or
ret
fnstcw
cs
xor
out
mov
inc
and
fisttps
pop
pusha
push
dec
in
sbb
xchg
int
stos
pop
pusha
mov
push
push
mov
xor
or
cmp
jne
jno
shll
mov
fcmovnbe
sub
dec
xor
cs
sbb
push
dec
insl
aas
adc
xor
or
fsubs
ret
and
loope
cmp
xchg
fwait
and
xchg
and
fisubrl
mov
int
lea
push
sub
mov
push
fidivrl
in
les
xchg
sub
mov
andl
fbld
shl
jne
cld
pop
das
pop
cs
push
add
push
out
xchg
jb
lock
stc
sar
fiaddl
imul
sub
cmp
and
pushf
ljmp
iret
out
mov
mov
xor
cli
pusha
sub
in
pop
push
cmp
imul
adc
in
out
repnz
addl
in
dec
push
mov
mov
sub
lds
or
stos
data16
in
jo
jno
les
ss
dec
jns
jns
xchg
sub
adc
inc
mov
or
enter
int
sub
jmp
pushf
ljmp
push
mov
insb
push
xchg
push
inc
pusha
and
aad
push
push
dec
pusha
aad
mov
daa
je
sbb
adc
ret
mov
push
inc
mov
dec
outsb
fisubl
std
mov
mov
xlat
lret
adc
aam
xor
jmp
pop
lcall
imul
outsl
adc
outsl
mov
stos
push
inc
and
lock
or
sbb
xor
cmp
into
insl
add
aas
or
aam
xchg
imul
pop
pop
xor
mov
cs
lea
dec
inc
mov
in
dec
iret
jo
mov
das
icebp
pop
cmp
mov
es
aaa
cmp
aad
pop
in
es
lds
orl
dec
and
imul
test
adc
mov
inc
adc
pop
mov
sub
cwtl
cwtl
clc
pop
mov
mov
sti
mov
stc
cmp
jb
cmp
and
aad
insl
movsl
pop
icebp
shll
lret
or
push
int
xchg
jne
xor
aad
lock
xor
and
sub
sub
mov
lds
fs
add
pushf
repz
pop
iret
insb
push
sbbl
pop
ljmp
adc
mov
mov
mov
mov
lcall
out
xlat
xlat
pop
push
adc
lret
inc
loop
ljmp
mov
pop
jnp
int3
sub
sub
test
sahf
inc
dec
mov
sbb
mov
cltd
sub
inc
bound
cs
pop
insl
pop
pop
adc
test
pop
cmpl
dec
sub
mov
into
mov
cmp
inc
arpl
cmpsl
gs
test
sub
add
xor
adc
push
dec
or
dec
push
in
les
lret
or
mov
push
sub
cmp
pop
inc
jl
sahf
icebp
test
sbb
insl
int3
cmp
mov
rcr
xor
cmpl
in
subb
jp
mov
ja
xchg
xor
out
fbstp
or
ret
xchg
cmp
sub
mov
jb
or
or
add
push
popa
jle
cmpsb
cmp
popa
xchg
inc
sub
xchg
sub
dec
jge
adcl
lds
xor
shl
sahf
xlat
gs
out
lods
add
mov
out
mul
pop
mull
xor
mov
divb
jmp
cmc
mov
and
pop
incl
scas
adc
ret
add
in
inc
fldt
and
mov
sub
stos
cltd
xchg
js
add
fistl
into
mov
inc
test
rcrl
mov
fldenv
adc
fisubrl
and
pop
mov
adc
mov
push
out
jo
cld
js
stc
shlb
pushf
inc
adc
dec
cmp
xor
bound
enter
out
push
xchg
insb
pop
pop
jle
out
add
push
jl
es
lret
and
jno
cmp
jmp
fisubrs
outsb
stos
lret
shlb
lret
mov
dec
sub
lods
cmp
shlb
sti
movsl
cmp
cmp
loope
dec
push
leave
imul
lret
cltd
push
pop
sbb
jge
mov
in
mov
mov
pop
pop
icebp
arpl
sbb
movsl
sti
sbb
pop
mov
jmp
out
sub
lret
push
aam
pop
movsb
xor
pop
push
insb
jbe
jb
dec
or
mov
out
xor
test
cwtl
fsubp
xchg
bound
ficoml
xchg
xchg
dec
sub
rcrl
data16
add
sub
ds
dec
mov
lds
sbb
dec
and
jge
adc
movq
fs
adc
fs
jb
pusha
pop
pop
mov
das
jb
cmp
lahf
and
dec
sub
add
cmpsl
test
inc
mov
aaa
stc
xor
sub
andb
mov
push
scas
add
and
ret
in
sub
and
cmp
pop
jge
xchg
test
xor
xchg
or
inc
jecxz
jne
inc
inc
movsl
mov
jns
ret
pop
imul
sub
lds
jp
lea
xor
jp
and
mov
xchg
daa
mov
mov
outsl
imul
dec
adcl
shll
dec
sbb
mov
outsl
jg
adc
mov
xchg
add
lds
dec
leave
pusha
ja
addr16
cmp
js
xchg
lods
adc
adc
xchg
pop
sbb
adc
xchg
stos
jnp
inc
pop
jnp
outsl
sub
adc
out
mov
inc
and
std
jno
or
jp
std
mov
adc
xor
cwtl
fidivrl
push
jg
repz
fists
lcall
sti
les
clc
subl
into
mov
xor
cmp
push
sbb
out
lret
push
fidivrs
dec
ds
lret
test
jno
sbb
cmp
or
pop
sti
je
repnz
ret
pop
and
cs
push
arpl
push
repz
scas
lea
fiadds
sti
cld
lods
movsb
or
or
or
adc
push
enter
add
xchg
cs
push
jecxz
inc
pop
insl
notb
adc
dec
inc
mov
in
aad
inc
andl
ffree
fidivrl
in
repz
pop
out
sarb
xor
jecxz
cmp
mov
and
js
and
xor
push
inc
and
popa
loope
ljmp
cli
test
sbb
add
out
inc
push
int3
cmpsb
add
or
pushf
sti
pop
xchg
int3
fldcw
std
loop
scas
adc
sbb
ss
add
cmp
cmp
rolb
add
not
adc
test
test
enter
test
dec
daa
rcll
lods
push
shlb
xor
leave
pop
and
mov
mov
jb
jbe
pop
inc
jns
add
push
jne
xlat
loopne
pop
fistpll
fdivrs
movsl
push
fwait
int3
or
mov
popl
fistps
xlat
es
xor
popf
push
divb
mov
push
or
out
push
mov
add
xor
rorb
mov
sbb
sub
push
xchg
jb
pop
mov
sub
jbe
jae
and
in
shlb
cmp
mov
xchg
bound
repnz
scas
cmpsb
pop
mov
push
jns
in
test
dec
add
dec
test
in
mov
sub
mov
fs
xlat
outsb
daa
fsubrl
mov
jl
or
xor
pop
testb
push
or
fwait
test
ret
mov
push
nop
cmpsl
outsl
push
cmc
es
and
pop
insl
pop
test
mov
add
push
lods
mov
std
fldl
fldt
sti
jae
jl
and
aas
clc
sbb
int3
add
pop
out
loopne
insl
test
sbb
cmc
cli
addl
mov
mov
mov
int
sbb
fwait
sub
mov
pop
mov
in
and
mov
sub
mov
pop
test
sbb
cld
xchg
fldlg2
mov
mov
sbb
xchg
pusha
xchg
pop
call
in
xor
mov
pop
cwtl
and
pop
inc
call
jo
popa
rorl
pop
popf
lcall
test
adc
jl
push
push
in
lcall
loop
or
mov
int3
push
xor
cltd
mov
inc
in
aaa
xchg
lds
lds
mov
xor
push
int
pop
leave
xor
push
cmpsl
adc
xor
pop
pushw
and
fidivrs
cmp
sub
lret
xchg
add
mov
in
dec
das
xchg
or
mov
and
insb
push
mov
fucomi
or
je
addr16
sbb
fcoms
mov
cmpsb
sub
jl
xchg
xchg
xor
jl
cmpsb
sbbl
dec
pop
cmp
xchg
cmp
pop
inc
in
cmp
inc
dec
lret
or
cmpsb
ja
jbe
jle
ss
or
xchg
adc
cltd
jp
mov
test
std
std
add
sub
imul
mov
hlt
push
add
pop
add
xchg
aaa
idivb
mov
rclb
lret
inc
outsb
mov
lods
leave
jo
inc
in
outsb
arpl
ljmp
pop
sti
mov
enter
inc
nop
ret
adc
insb
mov
sub
xor
cld
mov
adc
daa
orb
cmpsb
inc
cmp
mov
xor
jmp
fidivrl
jbe
xchg
iret
sbb
fs
add
xor
aas
cld
roll
sbb
xlat
inc
icebp
pop
sahf
pop
nop
mov
fs
jb
lret
mov
xlat
mov
fcomip
pop
inc
jg
mov
fnstcw
stc
mov
sub
inc
popf
mov
and
xchg
and
sub
mov
jl
shlb
stc
inc
mov
nop
imul
inc
aas
sti
pop
aad
lock
testl
cmc
mov
add
jne
ret
add
or
mov
push
or
mov
dec
stos
pop
outsb
lods
and
aad
iret
data16
lcall
pop
mov
xor
add
adc
push
adc
popf
lret
cmp
stos
xor
iret
add
sub
aam
ss
sub
insl
push
fwait
ds
sub
test
cmp
xchg
pushf
push
mov
add
sahf
mov
and
xchg
xchg
push
pusha
mov
pop
int3
aam
push
cs
cmp
mov
sbb
dec
orb
test
sbb
lds
mov
ret
mov
clc
push
std
aas
push
insl
or
mov
xchg
ret
add
cld
inc
mov
scas
cmpb
leave
insb
les
xchg
inc
fcoml
loope
xor
inc
lcall
sbb
cmpsb
stos
hlt
or
mov
loopne
stos
sbb
mov
dec
mov
mov
adc
xor
test
sub
sub
out
notb
imul
push
cmp
jbe
lcall
ficoml
outsb
jno
cwtl
aaa
fldenv
iret
shll
xor
fimuls
aad
addb
insl
arpl
or
repnz
fiadds
and
sbb
iret
push
push
pop
iret
inc
xchg
lcall
pop
xchg
aaa
jp
xchg
fsubr
jp
mov
jbe
lods
insb
loop
sub
pop
out
stc
daa
negl
hlt
cli
sbb
jns
fwait
imul
jno
xchg
xlat
test
lcall
repnz
cmc
jg
inc
in
hlt
mov
jle
hlt
inc
orb
popa
in
sar
pop
call
not
mov
mov
pushf
call
out
movsl
fisubrl
inc
mov
movsb
bound
cmp
aad
push
jns
xor
mov
dec
arpl
or
adc
repz
mov
sub
out
jmp
and
add
xchg
xchg
mov
out
and
jae
and
aaa
pop
cmp
mov
add
sub
lds
ja
out
pushf
mov
jl
push
orl
inc
cmp
jae
imul
les
push
in
in
push
mov
lods
jns
jns
iretw
shl
les
jmp
push
xchg
sbb
leave
inc
inc
sub
jae
or
imul
je
out
push
fcompl
mov
mov
lods
outsl
fistpl
jb
adc
rolb
sbb
sbb
iret
cmc
lods
sbb
icebp
pop
popa
ss
add
jne
mov
xor
mov
add
mov
pop
pop
pop
leave
ret
push
mov
sub
push
sbb
push
mov
adc
mov
and
mov
adc
mov
mov
mov
sub
or
andl
sub
movl
movl
mov
mov
not
sub
mov
xor
mov
incl
xorl
xor
xor
mov
sub
mov
movl
cmpl
je
cmpl
jbe
jmp
push
push
call
cmpl
jne
mov
dec
mov
xor
add
dec
mov
jmp
mov
sub
mov
sub
orl
mov
mov
or
sub
mov
jmp
lea
test
in
add
inc
stc
mov
iret
imul
push
scas
push
jnp
or
imul
mov
movsb
in
out
orl
pop
addr16
pop
ret
mov
and
push
arpl
divl
xchg
inc
xchg
lcall
xor
cs
adc
or
insl
push
test
add
int
xor
out
mov
xor
push
out
mov
push
push
push
inc
sub
dec
imul
icebp
push
addl
test
xor
pop
aam
into
mov
mov
in
jns
jbe
or
sbb
aad
jne
sub
cwtl
or
in
xchg
rorb
leave
mov
cmp
pop
movl
inc
dec
dec
icebp
or
lcall
je
cmp
addb
pop
cmp
cwtl
sbb
notl
add
xor
jge
mov
subl
mov
mov
adc
add
imull
insb
xor
addr16
dec
div
movsw
divl
jno
cmp
xchg
pusha
out
test
inc
jmp
or
jb
xchg
cmp
push
lea
sbb
mov
add
pop
jmp
sub
cwtl
xchg
adc
scas
cmpsb
gs
sti
orl
rolb
shr
fistl
push
pop
stc
fcos
or
inc
and
jns
jne
inc
arpl
xchg
mov
das
testl
sub
gs
xor
ds
test
push
pop
jae
ja
fldl2t
adcb
les
ret
enter
je
negb
and
mov
sub
xor
mov
push
je
sbb
sahf
jno
cmpl
pop
out
pop
jne
out
sub
jg
andl
xlat
fists
lds
cmp
add
push
xor
sar
xor
adcl
aaa
xorl
or
mov
sub
jnp
loope
bound
mov
dec
int3
push
shlb
test
fincstp
fstp
add
daa
and
stos
add
mov
and
outsb
in
mov
orb
mov
sub
xchg
insb
pop
cmp
jb
pop
dec
fwait
pop
dec
jg
sarl
jno
repz
movsb
mov
sub
clts
loope
add
sbb
dec
mov
sub
adc
testb
fmuls
xor
stos
xor
cmp
push
and
pop
xor
js
insl
pushf
push
sti
je
addr16
push
rorl
pushw
push
jbe
lods
scas
stos
xor
mov
push
xchg
lea
dec
lret
test
int
push
mov
aaa
sub
mov
pop
adc
pop
push
xor
sbb
mov
fidivrl
adc
push
push
adc
mov
cmc
daa
das
in
xchg
scas
andl
ljmp
xorb
push
in
pop
sub
ret
sbb
mov
fnstsw
mov
push
test
repz
flds
push
cli
cmp
xchg
push
inc
inc
and
in
sbb
and
sub
cmp
mov
movups
rclb
sarb
xor
pop
jo
jno
bound
sahf
inc
fidivrl
lods
jno
adc
adc
aad
jge
fldcw
sbb
popf
insb
jno
cmp
xchg
fidivl
fcmovnbe
aad
out
xchg
popl
and
sub
sub
adc
inc
cmpsl
divb
pop
jb
jecxz
loope
nop
mov
leave
int3
add
or
fs
add
xor
jnp
outsb
jl
mov
ror
inc
sub
pop
fwait
pop
addr16
rcrl
cmp
lret
jge
popa
orb
je
inc
loop
pop
pop
and
psllw
lahf
icebp
xchg
mov
into
jmp
cli
add
push
mov
xchg
bound
dec
mov
sbb
push
std
sahf
jl
pop
dec
sbb
mov
xchg
and
mov
and
sar
scas
fidivl
in
cmp
jnp
clc
std
cmp
and
sbb
mov
xchg
in
pusha
mov
cmove
dec
negb
xchg
push
or
mov
inc
shlb
les
adc
jg
mov
ljmp
into
sub
pop
sbb
incb
dec
or
mov
xor
fisubl
out
pop
pop
sub
jmp
orb
sbb
inc
sub
outsl
xchg
xchg
stc
xchg
jo
sub
add
lea
sub
and
inc
pusha
enter
and
xchg
mov
dec
test
mov
mov
jns
dec
sbb
push
inc
sub
cld
xor
cmp
adc
jns
repnz
aaa
mov
sbb
mov
lds
addr16
cwtl
cmp
xor
mov
in
push
push
loopne
adc
dec
adc
inc
jnp
pop
fiadds
lods
mov
xchg
std
cmpsb
sbb
cld
jb
cmp
dec
jb
ja
cs
xchg
hlt
xchg
je
or
pop
jge
push
cmpsl
aam
pop
rclb
ficompl
daa
and
push
add
sarb
mov
mov
notl
dec
js
sbb
lock
ds
inc
lods
dec
addr16
xor
enter
jle
mov
loope
nop
dec
in
test
push
or
fadds
pop
jge
pop
jb
inc
fidivrs
in
sbb
and
test
xorl
push
mov
bound
cltd
mov
mov
mov
cwtl
pop
mov
movsb
mov
mov
in
add
jno
push
addb
rcll
pop
push
add
push
jne
clc
mov
adcb
clc
push
scas
bound
mov
pop
jl
movb
sbb
lret
push
mov
scas
popa
adc
adc
rclb
addr16
mov
rorl
pushf
rcl
leave
and
fwait
adc
pop
push
stos
popw
fwait
xchg
mov
aas
cmp
adc
into
cmc
sub
gs
rolb
cmp
sub
push
mov
add
lea
scas
pop
sub
mov
dec
mov
aaa
inc
sarl
or
inc
out
jp
inc
test
cmp
jp
outsb
cmp
cli
adc
lods
cmc
lods
adc
out
or
mov
movsl
in
mov
xchg
cmp
decl
xor
pop
adc
ds
xchg
pop
sub
push
into
dec
or
push
mov
hlt
cmc
mov
out
aad
pusha
outsl
pop
mov
inc
repz
loopne
jnp
jb
push
mov
pop
mov
xchg
inc
out
xor
andl
adc
cli
mov
and
sub
pop
xchg
mov
mov
clc
shrb
add
and
dec
or
shll
aaa
xor
sub
jo
sub
fdivs
fistpll
or
scas
pop
mov
xchg
or
test
xor
sbb
sub
mov
xchg
or
jge
cmc
nop
inc
jmp
inc
or
mov
lahf
std
sub
push
adc
jb
jne
dec
xchg
notl
fwait
xchg
mov
imul
sbb
or
mov
xchg
xchg
cli
repnz
mov
push
sbb
sub
inc
mov
inc
xchg
repz
mov
pop
jl
xchg
mov
fwait
jno
lock
jmp
cmp
mov
push
push
mov
pushf
aaa
dec
test
stc
inc
lret
add
leave
mov
xchg
rclb
inc
lcall
mov
out
repz
cmp
or
dec
jbe
arpl
repnz
inc
sub
rcrl
lahf
add
mov
push
cs
jle
and
inc
je
pop
dec
mov
nop
pushf
push
mov
and
add
adc
loopne
sbb
cmp
inc
divb
mov
ss
cmpsb
arpl
pop
scas
and
and
mov
xchg
shlb
testb
ljmp
rcll
jmp
scas
mov
lcall
mov
fucomip
pop
sub
or
mov
pop
cltd
insb
jmp
adc
sub
sub
cmpl
jnp
insb
mov
lods
dec
inc
cli
out
dec
repnz
push
arpl
xchg
dec
push
mov
inc
call
movsl
test
jb
xlat
in
stc
lods
fsubs
and
or
enter
cmpsl
pop
or
jno
or
mov
jns
xchg
xchg
dec
add
sub
jne
push
jg
and
mov
jge
cmpl
repnz
test
mov
out
ficompl
mov
pop
out
cmc
ss
into
ficoml
or
in
fisubrl
dec
aaa
test
add
mov
sti
sub
mov
jnp
stos
out
pusha
xchg
fcmovnbe
jne
xchg
lods
jecxz
cltd
add
stc
fcoml
rclb
outsl
aaa
mov
mov
xor
sub
jmp
and
mov
and
push
jae
shll
sbb
adc
xchg
scas
sub
faddl
dec
orb
cmp
jge
movl
xchg
cmp
and
xchg
lods
std
mov
mov
cmc
sbb
in
cwtl
sbb
test
push
inc
scas
xchg
add
mov
je
cld
addb
jecxz
add
out
lods
lret
sbb
arpl
jecxz
mov
mov
mov
xchg
mov
bswap
and
iret
cmp
movsb
dec
aas
adc
shrd
cmp
not
push
xchg
inc
sbb
flds
xor
imul
popa
sbb
push
mov
stos
movsl
xchg
sub
lods
into
mov
mov
imul
push
adc
daa
out
dec
out
ss
add
push
and
fcompl
sbbb
push
popf
cmp
data16
inc
call
pop
aas
and
insb
xor
xchg
xchg
aad
add
jne
shrb
test
cmp
jne
ss
mov
ja
push
loop
aam
iret
dec
test
cmp
js
pop
xor
sbb
adc
scas
jno
bound
aam
push
and
mov
sub
aaa
mov
inc
aad
mov
mov
pusha
inc
roll
sub
les
movsb
loope
lret
fadd
jp
inc
ljmp
or
das
pop
andb
vmread
lahf
and
mov
in
push
pop
push
mov
push
mov
ljmp
push
add
pop
ja
mov
add
ja,pn
imul
xor
iret
push
lret
push
xor
cli
or
shl
test
das
arpl
cmpsb
jmp
mov
fs
mov
out
scas
repz
and
pop
ffree
mov
in
cmp
lds
pop
clc
mov
loopne
cmpsl
dec
dec
adc
in
insb
mov
mov
bound
push
ja
cmpsb
movsl
xor
shlb
or
xor
in
mov
mov
int3
sahf
pusha
cs
paddsw
cmpb
insl
sti
stc
fisttpll
mov
sbb
jge
nop
pop
pop
push
popa
and
test
out
xor
in
icebp
or
mov
test
testb
shl
push
je
pop
ds
int
loopne
subb
mov
lcall
insl
ljmp
fs
sarb
pop
or
aam
xchg
inc
mov
fisttpl
lcall
icebp
mov
icebp
or
xchg
sbb
cltd
jnp
loope
push
sub
dec
add
sub
cmp
push
notl
mov
xchg
add
pop
lock
jb
or
mov
orl
or
mov
andl
mov
inc
mov
cmpl
jle
jmp
pushl
push
call
cmpl
jb
mov
movzwl
adc
sub
xor
xor
sub
mov
movl
cmpl
je
cmpl
jb
jmp
pushl
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
orl
mov
and
mov
mov
sub
mov
sub
mov
mov
sbb
mov
or
mov
xor
movl
cmpl
je
cmpl
ja
jmp
pushl
pushl
call
cmpl
jne
mov
dec
mov
xor
xor
dec
mov
jmp
mov
add
or
mov
mov
mov
sub
mov
orl
mov
xor
add
push
mov
xor
add
push
mov
xor
add
push
lea
push
pushl
pushl
call
test
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
lea
mov
mov
test
je
lea
mov
mov
mov
mov
mov
sub
mov
mov
xor
mov
sub
add
mov
mov
mov
mov
pushl
movb
mov
pushl
pushl
pushl
pushl
pushl
pushl
pushl
mov
call
mov
mov
add
pop
pop
leave
ret
push
mov
sub
add
movl
lea
mov
xor
add
add
push
mov
mov
movzbl
add
lea
or
mov
mov
and
mov
sbb
mov
adcl
xor
subl
add
mov
adc
mov
mov
mov
sbbl
add
movzbl
add
mov
push
movl
mov
and
mov
adc
mov
mov
andl
mov
inc
mov
cmpl
jb
jmp
push
push
push
call
cmpl
jb
xor
mov
add
mov
adcl
add
cmp
movl
je
mov
movl
jmp
mov
movl
cmp
jne
push
movl
jmp
mov
mov
movl
cmp
movl
jne
mov
xorl
xor
add
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
ja
jmp
push
call
jmp
mov
mov
addl
mov
andl
xor
adcl
add
imul
mov
xor
andl
add
cmp
notl
mov
movl
push
movl
je
adc
mov
add
sub
mov
andl
mov
xor
adcl
add
imul
mov
movl
jmp
adcl
mov
xor
mov
add
mov
mov
xor
xor
mov
mov
andl
sub
add
movzwl
adc
mov
or
mov
adcl
add
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jbe
jmp
pushl
pushl
push
push
pushl
pushl
push
push
call
cmpl
jne
xor
or
inc
mov
jmp
mov
mov
andl
xor
sbbl
xor
lea
xor
mov
xor
add
imul
mov
xor
sub
mov
add
cmp
mov
mov
jg
xor
mov
sub
add
jmp
xor
add
add
mov
mov
mov
xor
add
not
and
movsbw
mov
sub
mov
xor
mov
cmp
jne
movsbw
mov
sub
mov
xor
mov
cmp
je
mov
xor
mov
sub
add
jmp
mov
mov
mov
lea
mov
mov
mov
xor
add
mov
mov
mov
xor
add
pop
cmp
jne
mov
xor
mov
add
imul
mov
pushl
jmp
mov
add
mov
mov
mov
movsbw
mov
sub
mov
xor
mov
cmp
jne
mov
mov
mov
jmp
mov
cmp
jne
push
pushl
pushl
pushl
pushl
call
pop
pop
leave
ret
push
mov
sub
push
push
andl
call
mov
sbb
mov
sbbl
push
call
adcl
test
je
push
adcl
push
addl
push
andl
call
movl
jmp
push
xor
or
sub
mov
mov
addl
lea
push
xorl
push
decl
call
test
movl
je
push
movl
jmp
sbbl
push
call
test
movl
je
adcl
push
push
push
addl
call
jmp
xorl
lea
sbbl
push
negl
push
call
sbbl
test
movl
je
orl
push
subl
call
jmp
movl
mov
sbb
mov
mov
mov
movl
cmpl
je
cmpl
jbe
jmp
pushl
push
pushl
call
cmpl
jne
xor
add
dec
mov
mov
dec
mov
jmp
mov
mov
movl
lea
adc
mov
lea
sbb
mov
inc
mov
mov
add
mov
mov
mov
movl
xor
sbbl
push
sub
mov
adcl
add
movl
mov
mov
mov
cmp
jne
mov
incl
mov
andl
mov
inc
mov
cmpl
jg
jmp
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
and
xor
or
add
xor
mov
mov
adc
mov
mov
sbb
xor
movl
cmpl
je
cmpl
ja
jmp
push
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
add
mov
movzwl
and
mov
mov
adcl
mov
movl
cmpl
je
cmpl
ja
jmp
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jl
jmp
push
push
pushl
call
cmpl
jne
xor
add
inc
mov
jmp
mov
or
mov
mov
xor
mov
dec
mov
or
mov
movl
adc
mov
sbbl
xor
add
jmp
mov
addl
xor
subl
lea
andl
push
movl
mov
addl
xor
andl
lea
xorl
push
adcl
mov
addl
pushl
call
andl
mov
inc
mov
cmpl
jl
jmp
push
pushl
push
pushl
push
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
xor
movl
cmpl
je
cmpl
jle
jmp
pushl
pushl
call
xor
add
dec
mov
jmp
lea
neg
mov
adcl
mov
xorl
xor
andl
xor
add
mov
andl
xor
movl
lea
movl
cmp
movl
jbe
mov
mov
sub
mov
sub
mov
mov
or
mov
addl
sub
addl
xor
movl
mov
not
mov
movl
cmp
jne
xorl
lea
mov
sbbl
lea
mov
orl
mov
test
je
addl
push
call
addl
test
movl
je
push
push
movl
push
jmp
orl
lea
addl
push
xorl
push
orl
call
orl
test
je
movl
push
movl
jmp
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jbe
jmp
pushl
push
call
jmp
mov
not
mov
sbbl
mov
movl
cmpl
je
cmpl
jbe
jmp
push
push
push
call
mov
dec
mov
jmp
mov
xor
or
mov
sbb
mov
mov
mov
notl
mov
add
cltd
mov
dec
add
mov
adc
andl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jb
jmp
push
pushl
call
cmpl
jne
xor
add
inc
mov
jmp
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jl
jmp
push
push
pushl
call
jmp
mov
movl
cmpl
je
cmpl
jbe
jmp
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
mov
andl
mov
inc
mov
cmpl
ja
jmp
push
push
pushl
pushl
push
pushl
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
xor
add
mov
adcl
xor
mov
mov
xor
mov
cmp
jne
mov
cmp
je
mov
mov
mov
xor
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
xor
mov
mov
mov
jmp
mov
cmp
je
mov
mov
xor
add
cmp
je
push
call
test
je
push
push
push
jmp
lea
push
push
call
test
je
push
jmp
mov
mov
mov
mov
pushl
mov
pushl
add
mov
mov
pushl
call
mov
mov
mov
jmp
push
call
test
je
push
push
push
jmp
mov
lea
push
push
call
test
je
push
jmp
mov
mov
xor
add
cmp
jne
mov
mov
mov
xor
add
cmp
jne
push
call
test
je
push
push
push
jmp
lea
push
push
call
test
je
push
jmp
mov
push
xor
add
push
push
pushl
pushl
call
push
call
test
je
push
push
push
jmp
lea
push
push
call
test
je
push
jmp
pushl
pushl
call
mov
xor
add
mov
mov
xor
add
mov
lea
mov
lea
push
mov
call
test
je
push
push
push
jmp
lea
push
push
call
test
je
push
jmp
mov
test
je
push
call
test
je
push
push
push
jmp
mov
lea
push
push
call
test
je
push
jmp
movl
movl
movl
movl
call
push
call
test
je
push
push
push
jmp
lea
push
push
call
test
je
push
jmp
mov
mov
mov
mov
mov
mov
mov
mov
cltd
mov
add
adc
andl
xor
mov
mov
mov
mov
xor
add
mov
adcl
xor
mov
mov
xor
mov
cmp
jne
mov
cmp
je
mov
mov
mov
xor
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
xor
mov
mov
mov
add
mov
mov
xor
add
xor
add
adc
xor
xor
xor
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
mov
push
call
test
je
push
push
push
jmp
mov
lea
push
push
call
test
je
push
jmp
mov
push
add
push
lea
push
call
push
call
test
je
push
push
push
call
jmp
lea
push
push
call
test
je
push
call
jmp
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
add
mov
and
mov
mov
mov
sub
xor
movl
xor
xor
adc
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jg
jmp
pushl
pushl
push
call
jmp
push
dec
mov
xor
xor
orl
mov
push
decl
mov
adcl
add
cmp
movl
je
mov
adcl
mov
addl
xor
orl
xor
orl
add
xorl
add
movl
adc
sbbl
xor
xorl
mov
mov
xor
push
subl
xor
sub
xor
add
mov
sbbl
add
movl
adc
xor
xor
cmp
jne
cmp
je
jmp
mov
mov
mov
xor
add
mov
imul
mov
xor
add
mov
mov
mov
mov
xor
xor
add
adc
lea
xor
xor
xor
mov
add
adc
xor
xor
cmp
jne
cmp
jne
mov
pop
pop
pop
leave
ret
push
mov
push
xor
movl
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jg
jmp
push
push
call
jmp
mov
movsbl
mov
or
sub
mov
decl
xor
movl
cmp
movl
jne
mov
push
mov
add
mov
mov
mov
xor
add
cmp
pop
je
mov
jmp
mov
xor
add
leave
ret
push
mov
sub
sbb
push
add
mov
or
mov
movl
push
andl
mov
inc
mov
cmpl
jl
jmp
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
xor
or
adc
mov
mov
mov
not
mov
movl
cmpl
je
cmpl
jg
jmp
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
xor
xorl
xor
movl
mov
add
add
imul
mov
cmp
je
mov
mov
mov
xor
lea
mov
mov
mov
mov
xor
xor
add
add
imul
mov
cmp
je
mov
xor
mov
add
imul
add
mov
mov
jmp
mov
mov
xor
xor
add
add
imul
pop
pop
leave
ret
add
inc
add
nop
inc
add
inc
add
nop
inc
add
inc
add
nop
inc
add
inc
add
nop
inc
add
inc
add
nop
inc
add
mov
add
inc
add
mov
add
inc
add
mov
add
inc
add
mov
add
inc
add
mov
inc
add
mov
inc
add
mov
inc
add
mov
inc
add
add
add
add
add
add
add
add
add
inc
add
inc
add
rolb
rolb
rolb
rolb
rolb
rolb
add
add
inc
push
push
arpl
inc
xchg
enter
jnp
add
add
inc
cmp
insb
gs
and
popa
and
pop
inc
data16
jb
popa
jb
jns
mov
sub
push
mov
xchg
mov
cmp
jne
mov
cmp
jne
mov
mov
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
movb
push
movb
movb
xor
mov
lea
movzbl
xor
add
inc
mov
cmp
jb
xor
lea
movzbl
xor
add
inc
mov
cmp
jb
xor
lea
movzbl
xor
add
inc
mov
cmp
jb
lea
mov
mov
mov
mov
mov
push
mov
mov
cmp
jne
lea
mov
mov
mov
add
mov
lea
mov
add
mov
lea
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
lea
push
mov
mov
xor
add
push
mov
lea
mov
lea
push
mov
mov
mov
mov
mov
movl
movl
movl
movl
pushl
mov
call
mov
mov
test
je
xorl
jmp
mov
mov
mov
xor
cmp
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
push
mov
movl
movl
lea
pop
mov
xor
sub
mov
inc
dec
jne
lea
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
movl
pushl
mov
call
mov
xor
add
mov
cmp
jne
mov
or
mov
add
mov
mov
mov
mov
mov
mov
mov
lea
mov
add
mov
lea
mov
add
mov
lea
mov
mov
mov
mov
lea
mov
mov
mov
mov
add
mov
mov
add
mov
mov
mov
lea
mov
mov
mov
mov
movzwl
xor
add
xor
mov
mov
movzwl
xor
add
xor
mov
xor
mov
mov
mov
lea
lea
movl
mov
call
mov
lea
push
mov
xor
add
push
lea
push
pushl
mov
call
mov
lea
lea
mov
call
mov
mov
mov
pushl
pushl
pushl
pushl
pushl
pushl
pushl
call
test
je
add
pushl
lea
call
mov
mov
mov
xor
add
mov
jne
mov
mov
pushl
mov
call
jmp
mov
mov
add
pop
pop
pop
leave
ret
push
push
push
push
mov
mov
add
push
cld
mov
add
push
mov
lods
xchg
push
mov
or
shl
not
push
mov
or
shl
not
push
add
mov
sub
sub
inc
push
push
push
push
push
push
sub
push
or
mov
shl
lea
mov
shr
rep
push
pop
call
loop
lea
lea
mov
mov
sub
and
mov
mov
call
jne
mov
and
shl
sub
neg
shr
pop
add
pop
lea
shl
cmp
pop
lea
push
push
mov
push
mov
jb
mov
sub
movzbl
mov
shl
mov
and
add
lea
call
mov
shr
and
cmp
mov
jne
cmp
jb
jmp
mov
call
inc
inc
sub
sub
cmp
jb
pop
inc
cmp
dec
mov
jb
inc
cmp
dec
mov
dec
jb
mov
dec
sub
push
jmp
mov
dec
call
jne
pop
pop
pop
pop
pop
pop
pushl
push
push
mov
mov
jmp
mov
dec
call
jne
mov
dec
call
jne
pop
cmp
mov
jb
mov
push
mov
sub
cmp
jb
lods
mov
stos
jmp
mov
call
mov
je
mov
call
mov
je
mov
mov
mov
mov
mov
mov
mov
mov
pop
pop
pop
mov
mov
add
push
push
cmp
mov
jb
add
push
mov
call
jne
mov
mov
shl
sub
push
pop
lea
jmp
mov
add
call
jne
mov
mov
shl
push
pop
push
pop
lea
jmp
mov
add
push
pop
mov
mov
sub
inc
mov
call
mov
sub
jb
add
cmpl
jae
addl
mov
cmp
jb
push
pop
mov
shl
sub
inc
push
pop
lea
mov
call
mov
sub
jb
mov
mov
cmp
jb
mov
andl
shr
orl
dec
cmp
jae
mov
sub
mov
shlb
add
shl
add
mov
jmp
sub
call
shr
shll
cmp
jb
incl
sub
dec
jne
mov
add
mov
shll
push
pop
sub
inc
mov
mov
call
test
je
or
shl
dec
jne
jmp
incl
mov
add
mov
mov
sub
cmp
ja
mov
sub
mov
lods
stos
cmp
jae
dec
jne
mov
movzbl
cmp
jb
call
sub
lea
mov
mov
sub
mov
mov
mov
sub
mov
leave
pop
pop
pop
ret
pop
pop
sub
inc
jmp
cmp
jb
ret
shl
push
mov
cmp
jae
mov
shl
lods
mov
mov
aas
or
add
inc
mov
pop
mov
or
pop
adc
pop
or
pop
or
addl
lret
repz
dec
lret
ret
xchg
stc
sbb
cmp
cwtl
movsl
orb
repz
dec
xchg
xchg
sub
ret
lcall
push
cltd
mov
lret
ret
imul
sbb
push
lea
sbb
pop
lret
add
push
pop
aad
lret
ret
fnstenv
dec
aad
addl
add
lea
ret
push
mov
sub
push
push
push
movl
movl
mov
mov
mov
mov
xor
mov
add
mov
mov
xor
add
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
movl
push
pop
mov
mov
push
pop
mov
mov
movl
movl
mov
xor
add
mov
mov
xor
add
mov
movl
movl
movl
lea
lea
call
decl
jne
decl
jne
decl
jne
movl
mov
xor
mov
add
mov
mov
andl
xor
add
mov
mov
mov
mov
mov
mov
mov
mov
lea
mov
mov
lea
mov
mov
pushl
lea
mov
call
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
add
mov
mov
lea
push
mov
mov
mov
add
push
pushl
push
call
pushl
xor
movl
movl
movl
movb
lea
stos
stos
stos
xor
movl
movl
movl
movb
lea
stos
stos
stos
mov
mov
mov
movl
movl
movw
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
call
push
mov
mov
pushl
call
test
jne
mov
mov
mov
add
mov
mov
mov
call
push
mov
call
test
jne
mov
mov
mov
add
mov
mov
mov
call
push
mov
call
mov
mov
xor
add
cmp
je
mov
xor
mov
sub
add
mov
cmp
ja
movl
pushl
mov
mov
mov
call
push
mov
mov
pushl
call
mov
mov
mov
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
mov
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
andl
mov
mov
and
add
push
call
test
je
mov
push
xor
pop
div
add
movzbl
push
call
test
jne
mov
mov
mov
xor
lea
call
push
mov
mov
pushl
call
mov
jmp
andl
incl
cmpl
jb
mov
mov
xor
mov
add
lea
call
push
mov
mov
xor
add
lea
call
push
call
mov
xor
add
cmp
jne
movl
mov
mov
xor
lea
mov
mov
test
je
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
cmp
jbe
mov
mov
mov
cmp
jne
pushl
lea
push
call
mov
jmp
mov
mov
xor
add
xor
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
je
mov
xor
add
jmp
mov
mov
and
or
sub
add
mov
xor
lea
mov
cmp
jb
mov
mov
mov
movl
mov
mov
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
jmp
mov
mov
sub
mov
xor
add
xor
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
movl
mov
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
mov
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
push
mov
mov
xor
add
push
call
mov
mov
xor
add
cmp
je
mov
jmp
mov
xor
mov
mov
mov
xor
lea
xor
mov
sub
xor
cmp
jne
mov
mov
mov
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
mov
mov
mov
mov
xor
add
movl
movl
jmp
mov
mov
xor
mov
movsbl
xor
sub
movzbl
cmp
jne
mov
xor
lea
xor
cmp
jne
jmp
mov
xor
add
mov
xor
add
cmp
je
mov
mov
movl
movl
movl
movl
mov
mov
mov
xor
add
push
mov
mov
xor
add
push
mov
xor
add
push
mov
xor
add
push
call
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
mov
pushl
xor
add
push
call
mov
xor
add
mov
cmp
je
mov
xor
add
cmp
je
movl
movl
mov
xor
sub
mov
mov
xor
sub
mov
mov
xor
sub
mov
andl
andl
lea
push
pushl
push
lea
push
mov
pushl
mov
add
push
push
call
mov
mov
mov
mov
xor
add
push
mov
xor
add
push
push
call
mov
add
xor
cmp
mov
mov
mov
jne
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
mov
jmp
xor
add
push
mov
xor
add
push
pushl
call
mov
mov
mov
movl
mov
mov
mov
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
jmp
mov
mov
sub
mov
xor
add
xor
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
movl
mov
movl
mov
mov
xor
add
jmp
movl
movl
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
mov
xor
add
imul
mov
xor
add
mov
movzbl
mov
xor
lea
movzbl
xor
mov
mov
mov
mov
xor
add
imul
mov
mov
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
pushl
mov
pushl
lea
push
mov
mov
pushl
mov
mov
pushl
pushl
pushl
call
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
xor
add
push
mov
xor
add
push
pushl
call
pop
pop
pop
leave
ret
push
mov
push
push
lea
mov
push
mov
mov
mov
mov
cmp
pop
jne
movb
movb
movb
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
mov
movb
movb
movb
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
movb
mov
movb
movb
leave
ret
push
mov
push
push
lea
mov
push
mov
mov
mov
mov
cmp
pop
jne
movb
movw
movb
leave
ret
push
mov
push
push
lea
mov
mov
mov
mov
mov
cmp
jne
mov
movb
movb
movb
leave
ret
push
mov
call
mov
mov
movb
call
push
mov
movb
call
push
movb
call
movb
mov
jmp
push
mov
push
mov
push
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
movl
mov
movzwl
xor
add
pop
test
je
mov
movl
leave
ret
push
mov
sub
andl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
push
mov
mov
mov
mov
mov
push
mov
test
jne
pushl
mov
call
mov
mov
add
mov
mov
mov
mov
xor
mov
add
cmp
jne
mov
mov
mov
mov
mov
mov
xor
add
mov
mov
andl
xor
add
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
movl
pushl
mov
call
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
lea
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
movl
pushl
mov
call
test
je
andl
cmpl
jbe
mov
mov
sub
mov
incl
mov
mov
inc
cmp
jb
mov
mov
add
mov
mov
add
sub
add
mov
mov
mov
movl
jmp
add
shr
mov
je
lea
mov
mov
mov
mov
movzwl
mov
and
mov
mov
shr
add
xor
cmp
jne
mov
add
mov
cmpl
je
mov
add
mov
mov
mov
mov
addl
decl
jne
mov
add
mov
cmp
jae
add
mov
mov
test
jne
mov
mov
movl
mov
mov
mov
xor
add
mov
lea
mov
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
mov
call
mov
mov
add
mov
pushl
mov
pushl
pushl
call
mov
add
lea
mov
mov
mov
mov
mov
mov
mov
cmp
jb
mov
mov
mov
lea
mov
add
cmp
jae
mov
mov
mov
sub
add
mov
mov
jmp
xor
pop
pop
pop
leave
ret
push
mov
sub
push
mov
mov
cmpl
je
test
je
test
je
mov
test
je
cmpl
je
cmp
je
mov
andl
mov
sub
add
movzwl
mov
movzwl
add
je
lea
push
mov
mov
push
test
je
mov
andl
and
add
movzwl
movzwl
add
je
lea
mov
test
je
mov
andl
and
add
movzwl
movzwl
add
je
lea
mov
mov
mov
test
je
mov
add
movzwl
movzwl
incl
addl
add
cmp
jb
movzwl
movzwl
mov
incl
add
add
mov
cmp
jb
mov
movzwl
movzwl
incl
add
add
mov
cmp
jb
pop
pop
xor
inc
jmp
xor
pop
leave
ret
push
mov
mov
mov
sub
push
xor
push
push
cmp
je
cmp
je
cmp
jne
xor
inc
jmp
mov
add
mov
mov
mov
mov
add
add
mov
cmp
ja
mov
mov
cmp
jbe
cmp
jae
movzwl
jmp
mov
lea
mov
test
je
add
mov
cmp
jbe
mov
mov
add
cmp
jae
mov
jmp
sub
mov
mov
test
je
mov
inc
mov
cmp
jb
jmp
xor
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
movl
mov
mov
mov
mov
mov
mov
push
mov
push
mov
movl
mov
mov
push
mov
xor
xor
add
add
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
je
add
mov
mov
xor
add
mov
mov
cmp
je
mov
mov
imul
xor
add
cmp
jne
mov
mov
imul
xor
add
cmp
je
mov
mov
mov
imul
add
mov
add
xor
mov
mov
mov
xor
add
xor
mov
mov
add
add
cmp
je
add
mov
mov
xor
add
mov
lea
mov
movl
mov
pushl
mov
call
mov
xor
add
mov
cmp
jne
mov
pushl
mov
call
mov
movl
movl
mov
xor
add
cmp
jne
mov
mov
xor
xor
lea
mov
mov
add
imul
push
call
mov
xor
add
cmp
jne
mov
xor
add
cmp
jbe
mov
xor
add
cmp
jne
mov
mov
xor
lea
mov
jmp
movl
movl
mov
xor
add
jmp
mov
xor
add
mov
mov
xor
add
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
mov
xor
add
cmp
je
mov
mov
xor
add
shr
cmp
je
mov
mov
mov
movzwl
push
pushl
call
jmp
mov
add
mov
mov
add
push
pushl
call
mov
mov
mov
xor
add
cmp
mov
jne
mov
xor
lea
mov
jmp
mov
xor
add
imul
mov
mov
mov
xor
lea
mov
mov
xor
add
cmp
jne
mov
mov
mov
sub
xor
jmp
mov
xor
add
cmp
mov
jne
mov
jmp
mov
xor
add
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
mov
mov
push
mov
mov
mov
mov
xor
mov
add
cmp
je
mov
mov
add
push
mov
movl
mov
mov
mov
xor
xor
add
cmp
je
mov
mov
add
mov
mov
sub
mov
xor
add
mov
cmp
je
mov
xor
add
mov
push
movl
jmp
mov
xor
lea
add
shr
cmp
jae
sub
lea
mov
movzwl
and
mov
mov
mov
sub
add
movzwl
shr
xor
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
cmp
jne
mov
mov
add
add
decl
jne
mov
add
mov
mov
mov
xor
cmp
jae
add
mov
mov
xor
add
mov
cmp
jne
pop
mov
pop
jmp
mov
xor
add
pop
leave
ret
push
mov
sub
movl
movl
mov
push
push
mov
xor
push
mov
add
mov
mov
xor
add
mov
mov
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
mov
mov
xor
mov
addl
movl
mov
test
je
mov
test
je
mov
test
je
mov
mov
xor
add
cmp
jne
mov
xor
add
mov
mov
mov
mov
add
mov
mov
test
je
movl
mov
xor
add
mov
mov
mov
mov
mov
add
mov
mov
mov
mov
mov
cmp
jne
mov
lea
push
mov
xor
add
push
pushl
pushl
call
mov
mov
mov
sub
add
push
call
mov
mov
mov
mov
pushl
pushl
push
call
mov
mov
add
movzwl
lea
mov
mov
movzwl
xor
add
mov
cmp
je
mov
xor
add
mov
mov
movzwl
xor
sub
sub
cmp
ja
mov
add
mov
jmp
mov
mov
lea
mov
mov
test
je
not
and
add
mov
add
push
call
mov
mov
mov
xor
add
cmp
je
push
mov
add
mov
add
push
push
call
mov
mov
mov
add
xor
lea
mov
mov
mov
movzwl
xor
sub
mov
sub
mov
cmp
jbe
mov
mov
cmp
jne
mov
lea
push
mov
xor
add
push
mov
pushl
push
call
test
je
mov
mov
mov
xor
add
je
mov
xor
add
andl
mov
mov
mov
movl
movl
mov
mov
mov
movl
mov
mov
xor
mov
add
mov
incl
cmpl
mov
jb
mov
mov
mov
mov
mov
lea
mov
mov
mov
movl
mov
mov
movl
movl
movl
movl
movl
mov
movl
mov
movl
mov
movl
mov
movl
movl
xor
mov
xor
sub
mov
inc
cmp
jb
mov
lea
push
call
mov
lea
push
push
call
mov
lea
push
mov
pushl
mov
call
mov
xor
add
mov
mov
mov
xor
add
cmp
je
mov
jmp
mov
mov
mov
mov
cmp
je
mov
mov
cmp
jne
mov
mov
cmp
jne
mov
mov
mov
add
mov
mov
xor
add
mov
mov
push
push
pushl
call
test
je
pushl
mov
pushl
call
test
je
mov
mov
mov
call
test
je
push
pushl
call
test
je
mov
mov
cmp
jne
mov
lea
push
pushl
mov
pushl
push
call
mov
mov
mov
xor
add
je
mov
mov
movl
mov
pushl
xor
pushl
add
or
add
push
call
movl
jmp
mov
mov
add
call
mov
mov
mov
mov
movl
cmpl
jne
andl
mov
jmp
xor
pop
pop
pop
leave
ret
push
mov
movzwl
movzwl
push
push
xor
lea
test
je
mov
lea
cmp
jb
mov
add
add
cmp
jb
add
inc
cmp
jb
xor
pop
pop
pop
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
push
mov
xor
push
mov
mov
add
push
cmp
je
mov
mov
xor
add
cmp
je
mov
xor
add
mov
mov
xor
add
mov
mov
mov
mov
xor
mov
xor
add
add
sub
mov
jmp
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
mov
mov
je
cmp
je
mov
mov
xor
add
cmp
jb
mov
mov
xor
add
cmp
ja
movzwl
movzwl
add
mov
mov
mov
xor
add
cmp
jb
mov
mov
xor
add
cmp
ja
movzwl
movzwl
add
mov
mov
mov
cmp
jne
mov
mov
xor
lea
mov
mov
mov
xor
lea
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
imul
mov
jmp
mov
mov
xor
lea
mov
mov
sub
xor
mov
mov
sub
xor
mov
mov
mov
xor
add
xor
add
imul
mov
movzwl
mov
mov
xor
add
xor
add
imul
mov
movzwl
sub
sub
xor
xor
cmp
jne
mov
mov
xor
add
xor
add
imul
mov
movzwl
mov
sub
xor
cmp
mov
je
mov
pop
xor
pop
add
pop
leave
ret
push
mov
push
mov
push
mov
sub
mov
xor
mov
movl
mov
cmp
je
push
push
movzwl
mov
mov
mov
cmp
jne
mov
lea
xor
mov
xor
mov
mov
sub
mov
xor
mov
cmp
jne
mov
pop
pop
cmp
je
xor
lea
pop
leave
ret
push
mov
push
push
push
movl
mov
call
mov
mov
add
xor
cmp
je
mov
mov
mov
push
mov
mov
sub
mov
xor
mov
cmp
jne
mov
lea
xor
mov
xor
lea
mov
add
xor
cmp
jne
mov
pop
cmp
je
xor
xor
mov
mov
pop
pop
leave
ret
push
mov
push
push
movl
mov
call
mov
mov
sub
mov
xor
mov
cmp
je
push
push
movzwl
mov
mov
mov
cmp
jne
mov
lea
xor
mov
xor
mov
mov
sub
mov
xor
mov
cmp
jne
cmpl
pop
pop
je
xor
inc
jmp
xor
pop
leave
ret
push
mov
push
mov
movzwl
push
lea
mov
push
xor
mov
mov
cmp
je
mov
sub
mov
jmp
mov
mov
add
movzwl
mov
add
xor
mov
cmp
jne
xor
pop
mov
mov
pop
leave
ret
push
mov
sub
movl
movl
mov
push
mov
xor
mov
add
mov
movl
movl
push
movl
jmp
mov
mov
sub
mov
xor
add
cmp
jbe
mov
add
mov
add
mov
mov
mov
mov
mov
jmp
mov
mov
sub
mov
xor
add
cmp
mov
jbe
add
mov
add
mov
mov
mov
jmp
mov
sub
mov
xor
add
cmp
mov
jbe
add
mov
add
mov
mov
mov
mov
xor
lea
mov
jmp
add
mov
add
mov
mov
incl
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jb
pop
pop
leave
ret
push
mov
sub
movl
push
mov
movl
mov
mov
xor
mov
add
cmp
je
push
push
mov
mov
xor
mov
sub
add
lea
xor
mov
mov
mov
xor
sub
xor
mov
mov
xor
add
cmp
jne
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
mov
mov
mov
push
push
mov
xor
mov
add
cmp
mov
jne
xor
add
jmp
mov
xor
add
cmp
jne
mov
jmp
lea
mov
mov
mov
mov
xor
add
mov
mov
push
call
mov
mov
mov
jmp
mov
sub
mov
mov
mov
call
mov
pushl
mov
call
mov
xor
add
cmp
jne
mov
call
mov
xor
add
push
pushl
mov
call
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
add
cmp
jne
mov
xor
add
pop
pop
pop
leave
ret
mov
mov
jmp
push
mov
mov
sub
cmpl
push
push
push
je
test
je
movzwl
mov
mov
xor
and
mov
xor
add
mov
andl
xor
push
pop
cmp
jae
lea
xor
movzwl
mov
lea
cmp
jne
movzwl
mov
cmp
jne
mov
movzwl
cmpb
je
mov
movzwl
movsbw
mov
sub
xor
cmp
je
push
pop
incl
mov
cmp
jb
jmp
incl
push
pop
mov
movzwl
cmpb
je
inc
cmp
jne
xor
pop
pop
pop
leave
ret
mov
add
xor
xor
cmp
sete
jmp
push
mov
sub
push
mov
mov
cmpl
jne
xor
jmp
pushl
push
pop
call
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
mov
lea
push
mov
mov
call
push
mov
pushl
call
mov
test
je
mov
push
push
mov
add
mov
mov
mov
mov
add
mov
mov
add
add
mov
mov
mov
cmp
ja
mov
xor
mov
cmp
jbe
jmp
mov
mov
movzwl
cmp
jae
cmp
jae
mov
mov
mov
mov
lea
add
add
sub
movl
mov
mov
cmpl
jne
mov
pushl
push
call
mov
test
je
mov
mov
mov
addl
decl
jne
mov
inc
mov
cmp
jb
pop
pop
pop
leave
ret
push
mov
mov
push
pushl
lea
mov
call
mov
mov
mov
xor
cmp
pop
setne
mov
pop
ret
mov
push
jmp
xor
add
mov
add
add
movzwl
mov
cmp
jne
xor
mov
mov
pop
ret
push
mov
mov
shl
add
jmp
xor
sub
mov
inc
inc
mov
cmp
jne
movb
mov
add
pop
ret
push
mov
sub
movl
movl
mov
mov
movl
push
push
movl
mov
mov
mov
xor
mov
xor
add
add
imul
jmp
mov
mov
xor
xor
add
add
test
mov
mov
je
xor
xor
add
add
shr
mov
xor
add
xor
jmp
xor
xor
add
add
shr
mov
mov
xor
lea
mov
mov
xor
xor
sub
cmp
jbe
mov
pop
mov
mov
pop
leave
ret
push
mov
sub
push
mov
mov
lea
push
mov
mov
mov
mov
push
xor
mov
add
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
movl
mov
mov
mov
movl
mov
xor
mov
sub
sub
mov
mov
movl
jmp
mov
mov
xor
xor
lea
mov
xor
div
mov
mov
xor
xor
sub
cmp
jne
mov
mov
mov
mov
mov
xor
xor
add
add
cmp
jae
lea
mov
mov
xor
add
lea
mov
mov
cmp
jbe
addl
jmp
addl
mov
xor
inc
incl
add
cmp
jb
mov
cmpl
jne
xor
sub
jmp
mov
xor
mov
sub
add
mov
xor
sub
ror
xor
mov
mov
mov
mov
mov
sub
xor
cmp
jne
mov
mov
xor
xor
sub
mov
sub
xor
mov
mov
xor
sub
sub
jmp
mov
xor
mov
sub
add
mov
mov
cmp
jne
mov
jmp
mov
xor
add
pop
pop
pop
leave
ret
push
mov
sub
movl
movl
movl
push
movl
mov
push
mov
push
xor
mov
add
mov
movl
movl
movl
mov
mov
mov
xor
xor
add
add
imul
jmp
mov
sub
xor
mov
lea
call
mov
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
xor
sub
mov
cmp
jbe
mov
xor
add
mov
movl
mov
jmp
mov
mov
xor
add
shr
mov
mov
mov
mov
mov
mov
movzbl
xor
mov
mov
mov
xor
add
and
mov
mov
xor
mov
mov
xor
lea
mov
mov
xor
mov
sub
add
mov
mov
mov
xor
add
cmp
jne
mov
mov
xor
add
pop
pop
xor
pop
leave
ret
push
mov
mov
mov
mov
mov
mov
sub
push
push
push
mov
xor
mov
add
cmp
jne
orl
jmp
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
mov
mov
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
sub
mov
mov
mov
mov
dec
test
mov
je
mov
mov
mov
dec
not
and
mov
mov
add
jmp
mov
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
xor
add
mov
mov
movl
movl
movl
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jae
mov
xor
add
mov
mov
add
mov
pushl
mov
mov
call
mov
movl
mov
xor
lea
add
push
call
mov
test
je
mov
xor
add
push
pushl
lea
push
call
mov
mov
mov
mov
sub
mov
mov
mov
mov
add
mov
cmp
jb
mov
mov
mov
add
mov
sub
jmp
push
pushl
lea
push
call
mov
mov
movl
movl
movl
lea
mov
lea
mov
lea
mov
lea
mov
mov
xor
add
mov
jmp
cmp
je
mov
xor
mov
add
mov
mov
xor
lea
mov
mov
mov
xor
add
cmp
jne
mov
xor
add
push
push
lea
push
call
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
xor
movzbl
add
cmp
je
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
mov
mov
xor
mov
mov
mov
xor
mov
xor
mov
mov
xor
mov
or
mov
mov
xor
mov
cmp
jne
lea
push
call
mov
cmp
je
mov
xor
add
mov
mov
xor
lea
xor
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
jne
mov
mov
xor
lea
jmp
push
pushl
lea
push
call
mov
mov
xor
add
cmp
je
mov
xor
add
push
push
lea
push
call
mov
add
mov
pushl
pushl
mov
add
push
call
mov
mov
xor
add
cmp
je
push
pushl
mov
add
push
call
mov
mov
add
mov
add
mov
mov
mov
xor
add
imul
mov
mov
xor
lea
cmp
jb
mov
mov
mov
jmp
mov
mov
xor
xor
add
add
cmp
jne
mov
imul
mov
jmp
mov
xor
add
cmp
je
subl
jmp
andl
pop
pop
pop
leave
ret
push
mov
and
mov
sub
push
mov
push
push
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
mov
cmp
jne
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
mov
add
mov
mov
mov
mov
mov
mov
mov
add
mov
mov
mov
push
push
pushl
push
call
mov
mov
pushl
xor
add
mov
lea
push
push
pushl
pushl
pushl
call
mov
mov
xor
add
cmp
je
mov
mov
xor
add
imul
mov
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
jmp
mov
cmp
jne
push
pushl
pushl
push
pushl
pushl
pushl
call
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
mov
mov
movl
mov
xor
add
mov
mov
push
mov
pushl
lea
pushl
push
pushl
pushl
pushl
call
mov
mov
leave
ret
