push
mov
sub
movl
cmpl
je
cmpl
jne
push
pushl
push
call
cmpl
jne
xor
xor
dec
mov
mov
dec
mov
jmp
or
mov
mov
subl
mov
sub
mov
xor
movl
add
movl
sbb
mov
push
movzbl
sbb
mov
push
mov
xor
push
or
mov
add
andl
mov
movl
cmpl
je
cmpl
jne
pushl
call
cmpl
jne
mov
dec
mov
xor
add
dec
mov
jmp
mov
mov
sub
add
movl
movl
movl
orl
movl
mov
subl
xor
add
mov
sbbl
movl
movb
mov
xorl
xor
add
jmp
jb
fsubs
lock
push
in
or
add
jle
cli
jg
jle
xlat
cmp
rol
pop
add
add
add
xor
rcrb
adc
mov
push
out
mov
es
lods
fiadds
data16
outsl
or
pushf
js
inc
stos
push
sub
mov
stos
push
roll
jmp
mov
dec
out
inc
call
mov
and
jnp
ret
xchg
and
jmp
ret
lock
and
add
adc
xor
or
fisttpll
ds
or
fst
or
pop
fstps
jno
inc
dec
aaa
adc
sarl
dec
call
gs
lahf
mov
fistpl
jno
jnp
sbb
xor
addr16
hlt
rcll
hlt
out
loope
inc
xor
ja
sbb
jo
insl
dec
jae
fildll
insl
popa
adc
xchg
shrb
mov
addl
mov
in
es
in
mov
jge
mov
lods
push
push
or
leave
lea
adc
loop
mov
fidivl
fimuls
cli
orb
aad
cmp
outsl
int
fists
inc
mov
aad
icebp
pop
lahf
jo
imul
xor
pop
ret
out
movsb
iret
ds
icebp
sub
pop
fmull
out
xchg
push
mov
mul
call
loop
repnz
fisubs
call
insl
call
jge
imul
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
pushl
call
jmp
orl
jmp
dec
push
push
push
fistl
jle
cli
jg
jle
leave
xchg
mov
jae
ret
cmpsl
pop
pusha
and
and
adc
sub
sarl
popa
jb
push
mov
inc
scas
roll
fstpt
lsl
inc
or
xlat
xor
xchg
mov
icebp
test
in
pop
xor
into
sbb
push
rcrb
movsl
push
lret
or
lcall
xchg
push
jge
pop
std
cmp
out
cmp
add
insb
xchg
subb
pop
pop
lret
in
add
repz
lret
lds
js
pop
scas
sub
pushf
insb
cmpsb
push
scas
xor
jmp
xchg
fisubrl
enter
inc
lods
xchg
and
pop
sti
cmpsl
or
sub
arpl
adc
outsb
enter
lods
inc
outsb
cmp
jecxz
sub
mov
scas
mov
push
out
mov
lods
out
inc
cmp
and
js
test
xchg
jae
nop
inc
xor
adc
push
pushf
xor
inc
push
mov
sub
push
mov
push
jl
add
xchg
sbb
jnp
xor
mov
sub
mov
mov
out
in
jecxz
leave
out
shl
bound
pop
mov
mov
movsl
cmp
add
lahf
fs
push
mov
mov
repz
push
ficompl
insb
dec
div
mov
jnp
pop
sbb
push
dec
in
orb
ss
add
neg
jmp
cli
fcompl
jno
cmp
mov
jge
jle
jg
jle
mov
aam
clc
icebp
cmp
push
fs
movsb
in
imul
sbb
sub
push
ret
gs
push
bound
repnz
mov
cli
and
add
push
add
jnp
sub
mov
in
ljmp
ss
cmc
aam
mov
dec
fdiv
jge
sbb
fldl
sub
outsb
and
mov
inc
sbb
lods
add
mov
cmc
jg
xor
pop
inc
loopne
test
mov
lods
inc
lret
sbb
cmp
addl
jbe
xchg
push
insl
jae
ljmp
push
and
sahf
jno
fildll
or
xchg
cmpsb
cmp
xchg
dec
ss
ret
aas
cltd
cmp
cltd
fidivl
dec
out
stos
cmp
repnz
pop
outsl
jmp
sbb
adc
push
stos
repnz
inc
push
mul
mov
pop
pop
mov
jo
aaa
ja
and
mov
scas
push
sbb
in
outsb
loop
push
mov
xchg
push
dec
les
and
jo
fdiv
fadd
insb
mov
and
imul
or
subb
xchg
push
test
mov
sbb
dec
jmp
int
mov
jecxz
xor
loope
mov
sub
add
push
cmp
bound
add
and
or
addl
mov
mov
mov
xor
sbb
add
mov
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
cmpl
jne
xor
xor
inc
mov
jmp
xor
sbbl
add
decl
mov
lea
mov
movzwl
and
mov
mov
mov
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
pushl
push
push
call
cmpl
jne
mov
inc
mov
jmp
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jb
mov
xor
mov
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jne
push
pushl
pushl
push
push
push
call
cmpl
jne
mov
inc
mov
jmp
mov
jmp
or
out
jecxz
icebp
int
add
fs
cmpb
cli
jg
jle
jg
dec
mov
orb
cmp
cwtl
movsl
sub
mov
loop
mov
jb
sub
add
scas
sub
movsl
rorb
leave
sbb
add
or
out
pop
sub
pop
testb
xor
loopne
in
dec
loopne
xorl
out
shl
xchg
rcll
sarl
shrb
mov
push
jge
leave
cmpsl
aam
push
and
jp
ds
lea
lea
sbb
pushf
sub
add
outsl
insl
pop
dec
xlat
fbstp
into
mov
dec
jg
pushf
xchg
or
xchg
xor
imul
sbb
mov
hlt
dec
scas
mov
outsb
insl
fldt
xor
and
jge
mov
sti
in
adc
out
xchg
in
add
cmp
jb
inc
mov
aad
xchg
inc
push
or
lahf
cmp
lea
sub
dec
sbb
lcall
add
mov
or
push
pop
sub
lea
mov
mov
jmp
gs
or
outsl
or
mov
jno
int
addr16
inc
icebp
fimull
cs
out
lds
rorl
mov
pop
in
stos
or
popf
sub
ss
mov
pop
mov
pushf
add
add
jmp
push
dec
inc
out
pop
loope
js
jle
jg
jle
xor
das
cmc
cli
cmp
mov
sub
fsubrp
cmpxchg
fstpl
jb
inc
int3
pop
aad
aam
and
and
mov
dec
sub
adc
push
pop
addl
fiaddl
mov
fnstsw
sub
push
add
insb
sub
xor
add
rolb
lds
loope
stos
mov
xchg
lds
test
xlat
and
xchg
mov
or
popf
pop
xchg
sub
shll
imul
mov
pop
ljmp
adc
pop
jge
lcall
data16
fcoml
in
jns
inc
adc
and
or
mov
jb
xor
mov
les
add
mov
inc
fdivrs
jl
push
leave
adc
enter
mov
push
jo
std
xchg
adc
or
dec
or
stos
lret
testl
dec
loope
add
lcall
lahf
add
les
xchg
inc
xabort
mov
pop
fistpl
push
pop
out
mov
sbb
push
sub
mov
mov
sarb
inc
push
mov
rorl
mov
and
adcl
mov
lods
iret
lret
dec
and
inc
mov
inc
mov
dec
clc
xor
add
mov
mov
mov
xor
jmp
pop
xor
mov
mov
mov
lahf
cmc
xchg
je
sub
jle
jg
jle
lret
test
sbb
adc
imul
ja
dec
scas
jns
jmp
inc
into
inc
cmp
out
out
push
out
cmp
cmp
push
jp
out
sub
movsl
mov
call
test
xor
lcall
and
adc
xchg
movsl
filds
sti
cmp
mov
fisttpl
jge
hlt
dec
scas
pop
orb
jle
lea
into
sub
or
xchg
ret
push
scas
cwtl
jle
fs
mov
or
lret
mov
fldl
shr
adc
dec
add
mov
xchg
stos
jae
mov
sbb
mov
sarb
or
dec
insl
aad
pushf
fwait
subb
cmp
nop
faddp
jmp
xchg
mov
ljmp
cmp
mov
dec
test
jg
inc
std
out
lcall
cmc
repz
add
mov
test
stc
xor
mov
lds
daa
mov
shlb
sub
pop
sbb
jbe
hlt
leave
call
int
cwtl
push
stos
call
aaa
mov
jp
jb
in
add
jl
jmp
nop
cmpb
or
arpl
imul
rcrb
pop
sub
gs
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
jmp
mov
les
loopne
mov
xor
add
pop
jle
cli
jg
jle
cmp
adc
push
enter
xchg
jecxz
jl
dec
das
repz
mov
jl
push
rsqrtps
inc
adcl
sbb
test
jmp
sub
addr16
ret
scas
mov
and
xlat
cmp
stos
enter
aas
xchg
in
mov
call
xor
adc
hlt
and
fldenv
xchg
lret
push
aaa
mov
sbb
push
pop
jmp
adc
and
sbb
out
pusha
das
je
test
pop
push
in
or
js
dec
xchg
pop
sub
pop
imul
sti
adc
roll
jle
jo
jp
shlb
dec
cmpsl
pop
inc
push
movsb
rcll
jno
jae
mov
inc
mov
popa
mov
loopne
mov
or
adc
aaa
pop
fwait
xor
inc
pop
insb
adc
addr16
inc
subl
xchg
xlat
add
push
push
pusha
cmc
into
es
mov
pop
imul
in
jg
inc
adc
pop
mov
dec
repnz
jnp
std
inc
mov
jl
jg
xchg
fistpl
loop
int3
mov
adc
dec
js
add
xor
jbe
repz
dec
jmp
test
sub
bound
pop
imul
dec
or
inc
push
mov
lds
in
cld
xchg
ds
neg
fs
imul
cmp
test
add
lea
push
mov
xor
add
jmp
pop
and
aas
jno
imul
xchg
add
jle
jg
jle
push
arpl
outsb
mov
dec
cmp
lock
lods
lret
push
sbbb
clc
cli
sbb
test
lods
inc
jbe
loop
cmc
dec
rcrl
add
mov
inc
lahf
test
xor
mov
xor
ret
ja
pop
dec
add
int
push
fsubp
pop
xchg
mov
fbld
icebp
xchg
push
xor
sbb
sub
mov
mov
mov
movsl
fucomip
sarl
jne
dec
mov
in
mov
mov
push
scas
xchg
test
xchg
addr16
insb
sub
cwtl
callw
and
mov
pop
fcomps
and
pop
sbb
dec
das
and
lcall
xor
jnp
adc
mov
jle
pushf
cmc
inc
dec
xchg
pop
inc
idivb
mov
out
out
or
addr16
insb
or
mov
je
cmc
enter
data16
repz
push
push
dec
push
sub
pop
lcall
cltd
shll
and
ss
sbb
ret
lock
stc
stc
and
dec
ficomps
sbb
add
test
cmp
ret
imul
in
in
dec
adc
arpl
xchg
push
fwait
adc
sub
pushf
jmp
inc
and
jnp
leave
clc
fsubs
dec
je
xchg
mov
das
xor
pop
or
push
mov
add
jmp
cmc
dec
and
jno
push
mov
out
sbb
jle
jg
jle
fildll
xchg
xor
inc
or
decl
insb
push
fwait
adc
or
lods
add
push
shll
nop
lret
testb
pusha
nop
xor
aad
jbe
xchg
mov
or
jecxz
add
dec
mov
xchg
or
insl
xorb
int3
or
das
orl
sub
sub
clc
pop
icebp
cli
jnp
adc
outsb
mov
or
pop
int
scas
dec
shrb
aaa
xchg
bound
dec
ficoml
dec
sub
push
jl
mov
add
dec
inc
jnp
pusha
ss
push
in
lds
into
jge
insl
in
and
jp
clc
cmp
dec
fsts
out
mov
xor
lahf
and
imul
jns
scas
xor
stos
imul
inc
mov
xchg
mov
ds
adc
cmp
out
insb
jmp
cmp
cmp
data16
cld
inc
loopne
jmp
sbb
pop
sbb
xchg
ret
adc
adc
add
mov
out
mov
test
outsl
push
pop
mov
movsl
repnz
in
lcall
sub
enter
mov
jg
movsl
scas
jmp
divl
xor
sub
mov
mov
pushl
call
mov
cmpl
lea
mov
je
lea
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
lea
mov
jmp
mov
bound
fadds
lds
loop
lcall
jle
les
xor
lea
fbld
idiv
mov
jo
sub
mov
jb
je
ret
sub
add
inc
or
jnp
and
insb
ret
pop
test
or
dec
or
outsb
out
lret
loope
arpl
cld
mov
mov
fdivs
jbe
mov
pushf
and
push
shrb
dec
and
scas
imulb
faddl
jecxz
out
mov
xor
mov
sub
mov
cmpsl
adc
and
dec
leave
je
sbb
jnp
lcall
jbe
icebp
insl
xchg
out
cmp
das
jp
jae
mov
mov
xorb
mov
imul
ret
inc
outsl
daa
hlt
sub
pop
dec
std
or
xchg
lret
hlt
inc
call
mov
mov
or
mov
test
clc
enter
fildl
sub
lcall
push
test
push
inc
sbbl
inc
loope
sti
dec
stos
arpl
adc
jae
test
xor
xlat
ss
leave
insb
cmc
mov
pop
lock
cmpsb
into
in
or
mov
fwait
mov
sahf
push
shrl
daa
aaa
and
lret
adc
negb
pop
cmp
inc
lock
mov
mov
mov
mov
mov
jmp
push
shlb
push
stos
rol
push
paddd
cli
jg
jle
fsubr
mov
incl
adc
bound
aas
xchg
into
cld
fnstcw
mov
add
dec
sbb
pop
lods
mov
and
sub
addr16
pop
dec
and
mov
int3
mov
outsl
scas
ret
hlt
in
jl
imul
das
push
nop
leave
loopne
pop
aaa
out
dec
test
int3
dec
cmp
daa
cmp
out
xchg
inc
idivl
cmc
test
out
fcompl
imul
cmp
or
jns
js
aaa
mov
jno
xor
xchg
mov
arpl
in
dec
movsb
lea
jmp
test
xlat
xchg
mov
popf
mov
push
loopne
inc
aad
sbb
pop
popf
outsb
mov
mov
repz
mov
adc
cwtl
add
imul
mov
sub
dec
or
inc
jmp
enter
adcl
test
jnp
les
stos
aad
cmpsb
nop
or
push
dec
outsb
sub
dec
cld
ret
popf
xchg
mov
sub
fmull
cs
jmp
mov
push
mov
inc
adc
fs
popf
mov
add
sahf
out
adc
xlat
or
sub
sbb
mov
mov
add
out
ds
daa
nopl
mov
daa
int
pushf
push
xor
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
jmp
les
rorl
stos
pop
jo
push
jle
cli
jg
jle
test
dec
pop
cli
jmp
in
mov
mov
icebp
cmp
mov
popa
stos
mov
jne
enter
aam
test
sub
rorb
into
popa
ljmp
xor
test
lock
pop
inc
mov
inc
mov
repz
xor
std
std
mov
lret
xor
mov
mov
push
mov
pop
in
or
and
adc
ret
sub
push
subl
aas
outsl
jg
leave
push
insl
dec
sbb
hlt
dec
movsl
loope
cmp
fimull
clc
ljmp
jmp
sti
add
aam
arpl
or
lea
push
faddl
mov
stos
xchg
mov
jns
add
pop
sbb
call
stc
mov
adc
sbb
rorl
pop
test
test
aaa
gs
or
mov
outsb
jns
xor
xchg
idivl
cltd
das
enter
mov
dec
das
fildl
in
mov
pushf
mov
lahf
movups
adc
pushw
lods
and
loope
adc
ja
push
ret
shrb
lcall
cmpsb
and
flds
mov
negl
bound
xor
pop
jo
repz
mov
subl
sub
or
sub
push
jae
je
mov
dec
clc
mov
mov
mov
test
jmp
inc
push
jnp
or
push
adc
nop
dec
test
or
jle
jg
jle
cmp
cmp
xchg
jp
pop
fnsave
in
sub
outsb
popa
test
cli
xor
scas
or
xchg
dec
dec
das
lock
stos
cltd
push
into
jnp
pop
test
in
dec
ficompl
add
insl
mov
cltd
das
pop
push
shrl
inc
ljmp
xor
int
cmpsb
adc
popa
mov
test
stos
sub
loop
addr16
or
es
xchg
adc
add
frstor
dec
leave
lds
popf
inc
lods
sub
dec
push
and
scas
xor
add
xchg
sbb
pop
push
enter
shll
repnz
lcall
xor
push
loope
mov
repnz
jb
sti
fidivl
pushf
shll
sub
outsb
es
sub
pop
push
cmpsb
stos
loopne
lods
mov
out
lock
bound
cld
notl
sub
add
xor
mov
lods
insl
andb
pusha
cltd
je
or
sbb
inc
lods
push
add
push
fidivs
loop
jmp
pop
xchg
call
mov
sbb
shll
mov
data16
inc
test
arpl
shrb
push
cmp
mov
rcrl
xchg
push
aam
lret
cmpsl
cmp
dec
stc
push
das
mov
mov
mov
jne
mov
xor
add
jmp
or
lret
jecxz
jecxz
icebp
loop
mov
sbb
push
pop
stos
or
jle
xor
cli
out
mov
adc
mov
xchg
nop
xchg
jecxz
sub
inc
test
into
andl
pop
pop
add
jb
in
das
adc
push
aaa
or
push
push
push
outsl
inc
fmull
insb
add
lcall
out
mov
and
dec
in
lods
lods
jmp
jp
bound
pop
bound
cmpl
inc
mov
jbe
cmp
arpl
push
xchg
mov
repz
mov
repz
dec
bound
jecxz
pushf
cmc
mov
cld
sub
shll
xchg
push
jge
mov
cmpsl
in
or
pop
imull
mov
dec
int
gs
adc
pop
in
arpl
cmpl
pop
xchg
cmp
xchg
ds
imul
in
inc
sub
lods
jmp
xchg
sub
pushf
sbb
sub
mov
loop
push
mov
dec
xor
push
xlat
cmpsl
adc
movsb
or
xor
enter
mov
shrl
mov
cld
inc
das
int3
pop
jbe
adc
imul
add
fidivrs
jmp
sub
scas
and
arpl
lret
je
fldpi
xor
iret
xchg
fsubl
jb
and
add
add
call
inc
in
movb
push
mov
add
push
mov
mov
pushl
call
mov
xor
mov
sub
jmp
add
inc
dec
aas
cmp
out
adc
jle
jg
jle
jne
fsubrl
movsb
pusha
lods
adc
mov
mov
ss
jnp
push
lods
mov
and
xchg
mov
cwtl
mov
pop
ljmp
subl
out
loopne
test
arpl
xchg
into
jb
or
add
jb
mov
sbb
sub
dec
aas
xor
sub
dec
xchg
dec
je
mov
arpl
xor
cmpsl
aas
scas
mov
lret
or
mov
sub
hlt
xor
stc
scas
aaa
dec
inc
sub
popa
xlat
sbb
xchg
mov
loop
and
mov
mov
fmulp
scas
loope
inc
and
ss
lea
aas
xchg
xchg
popa
add
subl
les
jae
shrb
dec
fcmovb
cmp
mov
xlat
push
pop
mov
mov
push
ret
outsb
fistl
jmp
enter
jp
std
cli
mov
cmp
mov
push
sbb
xchg
mov
les
imul
push
and
sbb
loope
adc
xchg
sub
test
lcall
or
cmp
outsb
aas
test
cmp
sub
push
in
adc
mov
cltd
std
push
xchg
xchg
movsb
pop
xor
imulb
mov
test
ja
ja
dec
pop
inc
push
cmp
scas
test
mov
ret
call
aas
in
xor
es
inc
cld
mov
add
mov
mov
mov
mov
xor
sub
mov
lea
incb
inc
push
pop
dec
xchg
decb
pushl
mov
mov
pushl
jmp
jmp
xchg
push
arpl
nop
push
rorb
push
mov
or
cli
jg
jle
push
out
mov
adc
jle
cwtl
inc
sub
repz
pushf
lds
cmp
ds
sarl
lahf
movl
mov
jne
adc
xor
hlt
data16
repnz
and
sub
lret
push
movsl
push
jle
mov
js
dec
lods
dec
sbbb
cmp
orb
aad
jp
aaa
mov
push
shrl
xchg
fdivrl
in
push
sti
jnp
fwait
leave
rolb
mov
movsl
push
pop
jg
stos
pop
jno
std
ror
mov
rcrl
repnz
pop
adc
andl
inc
jb
mov
dec
push
pop
and
iret
inc
js
rcll
jmp
jns
cmp
dec
loop
push
xchg
xchg
test
dec
cwtl
lock
loopne
ds
in
mov
or
jl
testl
rcrb
xor
adc
mov
add
mov
jno
iret
push
xchg
and
out
add
arpl
andl
sub
notb
into
jp
repz
jo
loopew
fnsave
mov
pop
ret
sti
sub
ljmp
aaa
rolb
movsb
xchg
jge
int3
lds
rcll
cmp
adc
nop
ja
fidivs
stos
xor
jmp
add
pushl
lea
pushl
lea
pushl
lea
pushl
xchg
inc
inc
push
pop
jmp
cmc
mov
icebp
insl
sbb
sbb
push
jle
cli
jg
jle
or
dec
pop
pop
push
pop
cmp
inc
enter
xchg
or
mov
imul
mov
icebp
jecxz
inc
mov
loopne
mov
and
jp
dec
dec
and
rorb
rclb
sbb
and
mov
ds
fildl
push
fldl
cmp
push
jnp
cmp
cmc
loope
lea
inc
jge
mov
mov
loopne
pop
icebp
dec
xchg
push
mov
dec
pop
insl
inc
scas
or
flds
ret
xor
pop
fmull
daa
push
in
sub
test
dec
mov
gs
dec
add
test
add
rcl
mov
jecxz
daa
and
pop
div
cmp
mov
mov
mov
sub
push
xor
outsb
jno
add
dec
popf
shl
mov
aam
sti
into
hlt
nop
sub
mov
xchg
sub
cmpsb
mov
ds
xorb
div
add
dec
sub
fsub
ljmp
xor
and
loopne
xchg
pop
adc
jl
out
ss
or
mov
loope
pop
jns
mov
jg
scas
dec
inc
enter
xchg
mov
popf
scas
icebp
out
scas
jle
push
push
in
sbbl
fsubs
dec
call
mov
mov
add
pop
jmp
add
mov
adcb
xor
jg
jle
test
rcll
rcr
test
icebp
arpl
pop
clc
lea
push
popf
movl
insl
jecxz
jnp
xchg
ljmp
push
add
xchg
cld
jecxz
mov
repz
push
ljmp
xor
lret
adcb
mov
pop
sbb
mov
aas
mov
xlat
orb
das
sub
je
lcall
imul
call
mov
fsts
imul
stos
clc
sub
jecxz
mov
jo
hlt
inc
adc
or
int
pop
dec
or
test
dec
pop
popa
pushf
mov
pusha
mov
jge
dec
gs
mov
cmpb
ss
pop
push
pop
idivl
shl
mov
test
inc
xchg
test
dec
pusha
mov
ds
push
mov
mov
movb
xlat
push
or
push
cwtl
xor
fimuls
and
imul
inc
push
sbb
in
cmp
mov
inc
add
divb
xchg
in
out
mov
mov
mov
xor
sti
cmp
iret
mov
sbb
nop
or
dec
mov
push
cmp
cmp
mov
jbe
or
and
repz
adc
pop
stos
cmp
icebp
cmp
xchg
js
lcall
cmc
cli
popa
cmpsl
and
pop
pop
leave
ret
push
mov
sub
leave
ret
push
mov
sub
push
mov
andl
xor
add
inc
mov
cmpl
jne
push
call
cmpl
jb
not
mov
xorl
mov
sbbl
movl
mov
add
movl
xor
mov
movl
cmpl
je
cmpl
jne
pushl
call
cmpl
jne
mov
dec
mov
xor
add
dec
mov
jmp
mov
decl
mov
xor
mov
mov
sub
imul
mov
add
movl
cmpl
je
cmpl
jne
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
mov
and
mov
mov
sbbl
xor
add
not
mov
not
movl
movl
mov
adc
movl
adc
movl
movl
movl
cmpl
je
cmpl
jne
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
movl
and
jmp
sbb
add
lock
icebp
mov
fstpl
adc
jle
push
sub
cmp
mov
test
data16
mov
jbe
cmp
fwait
jne
push
loop
es
sbb
or
jp
mov
test
movsb
jb
imul
pop
jne
push
push
jno
repnz
rorl
test
pop
shll
push
or
xchg
jle
sbb
pusha
add
xchg
fsts
mov
ret
cmp
lcall
dec
mov
jno
sbbl
insb
pushf
test
pop
pop
xor
cmp
sbb
adc
jns
in
mov
aaa
test
js
dec
inc
sbb
cmp
xorb
gs
int3
pushf
sahf
loope
scas
pop
rcr
popf
outsl
in
into
sahf
xchg
jecxz
mov
mov
std
fcoms
cmp
and
xor
insb
cmp
mov
or
fidivs
and
mov
addl
mov
test
push
mov
mov
adcb
lods
or
cltd
mov
mov
stos
lods
cmp
shll
les
and
push
cltd
fwait
aaa
lret
das
jp
mov
mov
mov
dec
sub
int3
imul
push
jb
or
cmp
es
xchg
sahf
jp
xchg
mov
or
jnp
outsl
testl
loope
mov
ds
clc
icebp
fdivrp
adc
sbb
dec
aad
inc
xchg
xchg
xchg
cmp
hlt
popa
cmp
orl
mov
icebp
jae
or
int3
and
push
push
add
fldl
mov
test
mov
inc
mov
inc
fucomi
xchg
jl
fcompl
sahf
add
sbb
mov
cmp
or
mov
cwtl
aam
mov
mov
lret
iret
pop
stos
mov
adc
adc
loopne
xlat
mov
cmp
fsts
add
dec
add
jne
push
jg
xchg
sbb
mov
je
xlat
loope
std
dec
push
cmpsl
jp
or
xchg
xor
sahf
js
movsb
cmp
pop
push
push
jns
pop
inc
imul
sbb
mov
adc
repnz
jl
repz
jae
ret
test
mov
loopne
sbb
pop
insl
push
adc
add
fstps
out
push
test
cmp
lods
shll
sbb
fistl
pop
xor
rcrl
mov
xor
scas
ljmp
lret
sbb
fs
xchg
fwait
insl
push
in
shr
add
sbb
sbb
push
mov
sbb
movl
sbb
mov
sbb
xor
andl
xor
add
inc
mov
cmpl
jne
push
push
push
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
or
mov
subl
add
movl
cmp
movl
je
movl
push
jmp
xorl
mov
sub
mov
sub
xor
mov
xorl
xor
movl
add
cmp
jb
movl
cmpl
je
cmpl
jne
pushl
pushl
push
push
pushl
pushl
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
xor
mov
mov
sub
mov
mov
xor
movl
cmpl
je
cmpl
jne
pushl
call
xor
xor
dec
mov
jmp
negl
xor
andl
xor
or
inc
mov
cmpl
jne
push
call
cmpl
jb
add
add
movl
cmpl
je
cmpl
jne
push
call
mov
dec
mov
jmp
imul
mov
and
mov
sub
cmp
ja
mov
xor
add
jmp
mov
mov
xor
xor
add
add
imul
mov
jmp
pop
cli
mov
jno
gs
or
scas
loopne
test
shll
jle
pop
jl
jle
negb
fwait
ljmp
xchg
add
in
dec
cld
jo
test
addr16
fwait
cmp
or
inc
lcall
pop
push
mov
push
dec
out
xor
aam
stos
enter
dec
sub
fwait
mov
push
stos
sti
scas
ret
or
pop
lahf
pop
xchg
mov
xor
repz
fldenv
shlb
jne
loop
ficompl
xchg
pop
movsl
cmp
mov
mov
cmpsl
mov
and
mov
hlt
or
xor
in
rorl
sbb
mov
jmp
ret
cltd
mov
and
ljmp
pop
test
imul
or
jmp
inc
js
std
js
or
popf
testb
pop
inc
not
mov
sub
push
mov
lcall
nop
rol
nop
ret
in
xchg
jge
fmul
add
rorb
daa
push
sbb
sbb
add
in
adc
insb
jno
dec
pop
cltd
cltd
outsb
or
sub
dec
fs
cmp
push
inc
mov
mov
push
rcrl
pushf
xchg
shl
hlt
jmp
dec
pop
sbb
or
push
jmp
rcr
mov
inc
mov
cmpb
jne
test
lahf
xor
outsb
jl
in
movsl
pop
jno
inc
pop
sbb
insl
ljmp
gs
lods
xchg
icebp
insb
popa
sbb
mov
push
clc
ds
pop
mov
mov
andb
in
out
jne
xor
test
sub
mov
mov
sbb
and
and
hlt
adc
dec
inc
test
gs
jge
loopne
pop
jnp
dec
pop
mov
cmp
push
and
inc
jge
leave
cmp
add
daa
out
loopne
fimull
fidivrl
xlat
out
inc
mov
mov
ja
aas
xchg
mov
fnstcw
cmp
mov
jbe
xor
push
inc
lcall
hlt
add
mov
mov
inc
lret
sbb
les
shll
mov
push
mov
mov
mov
cmp
les
jnp
and
jo
lds
pusha
add
and
pop
dec
pop
les
pusha
jo
bound
ret
mov
mov
js
shll
push
int
xor
addl
test
xchg
and
jnp
rcll
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
jmp
mov
xchg
xorb
jno
cs
push
fmull
pop
jle
pop
jl
jle
xchg
pushf
gs
lods
mov
mov
stos
pop
xor
movsl
addb
int3
or
shl
ja
cmpsb
mov
mov
out
push
popa
shl
push
jmp
sti
xor
ret
jns
sub
test
pushf
js
sub
inc
or
or
or
shlb
push
mov
mov
and
xchg
negb
pusha
inc
or
push
negl
cli
shlb
jns
mov
adc
xchg
mov
aaa
xor
jne
xchg
inc
orl
mov
ficompl
adc
xor
mov
clc
push
cwtl
or
popf
stc
inc
and
std
pop
enter
jl
add
mov
xlat
mov
add
addr16
push
inc
push
test
pop
ret
aaa
lock
leave
dec
cmpsl
add
iret
lret
insl
mov
inc
sub
daa
jns
shll
fimull
and
fdivrs
iret
scas
negl
shlb
es
cmp
xchg
sub
out
dec
push
jae
icebp
jo
dec
fs
ljmp
icebp
lfs
test
outsl
or
lds
out
push
imul
loope
lods
xor
push
sar
pop
mov
and
call
dec
xchg
jle
nop
std
or
test
ficompl
dec
xor
fildl
repnz
fldt
mov
or
adc
movsb
dec
jl
xor
outsb
mov
shll
mov
out
adc
cmpsb
pop
aam
mov
loope
inc
fsub
stos
and
out
sbb
mull
aas
cmp
mov
das
fcoml
push
stos
addr16
cli
cmpsl
mov
repnz
dec
je
fdivp
lret
dec
lock
out
jge
mov
add
rep
fldl
das
and
or
in
add
shlb
xor
jno
pop
xchg
test
jno
pop
cmpb
ljmp
mov
mov
idivb
mov
ret
scas
jmp
mov
jnp
mov
pop
xchg
adc
cmp
pop
xchg
sbb
clc
ss
gs
dec
add
je
push
mov
and
jnp
push
adc
mov
inc
mov
stos
xor
lds
cmp
mov
fidivs
adc
mov
scas
mov
xchg
stos
jmp
mov
das
loope
push
pop
cs
sub
cmp
fbld
rol
repnz
orb
lcall
mov
add
iret
je
mov
ja
adc
call
inc
arpl
lds
sub
pop
and
fistpll
fimull
add
add
mov
mov
jmp
mov
aaa
or
mov
subl
xor
sbb
jle
ss
mov
hlt
stos
mov
fcomps
cmp
mov
push
sbb
xchg
mov
stos
mov
pushf
push
push
fsubp
or
sbbl
rol
or
mov
sbb
and
repnz
int
mov
and
inc
rcll
xor
pop
add
cld
mov
popf
aad
mov
jnp
jne
out
gs
xchg
arpl
rcrl
out
push
insl
mov
iret
jmp
mov
push
ss
loop
inc
push
push
cmp
addl
xchg
inc
pop
add
inc
jge
mov
mov
jl
test
das
push
push
mov
ljmp
repz
pop
jbe
jns,pt
das
ljmp
les
mov
daa
sub
clc
sbb
pop
iret
movsl
pop
insb
arpl
imull
into
adc
mov
xor
inc
xor
mov
xchg
icebp
lock
push
jp
mov
add
rcr
push
mov
push
aam
push
out
hlt
push
ljmp
lock
rclb
pop
rcrl
cmp
adc
in
push
push
jg
ss
fists
ficoml
inc
xchg
dec
adcl
mov
jecxz
sbb
mov
lods
das
xchg
inc
cmp
jecxz
push
mov
push
add
add
daa
or
lahf
bound
mov
stc
hlt
adcb
lcall
jle
or
adcl
jns
xor
clc
cmp
cmp
ljmp
insb
sub
test
sti
popf
xor
sbb
cmp
inc
in
ljmp
jg
test
in
mov
std
lahf
xor
push
das
sub
out
cld
jmp
jnp
testb
add
sbb
call
xor
jecxz
cwtl
cld
mov
lcall
adc
stos
xor
pop
data16
les
lea
ss
jg
push
loope
pusha
mov
or
lea
faddl
jne
sarl
ja
push
movsb
dec
cmp
push
aas
outsb
jae
loope
inc
andl
stos
inc
mov
loopne
cmp
dec
insl
jecxz
jnp
insl
cmpsl
mov
xchg
push
je
pop
xchg
repnz
aam
xchg
popa
mov
push
js
bound
aas
fcompl
mov
aad
addr16
fs
dec
test
fsts
in
rorb
jecxz
cs
or
clc
jmp
add
dec
popa
jno
jne
xor
jle
sub
jle
pop
jl
jle
dec
push
xor
xchg
adc
push
movl
jb
mov
jbe
popf
xchg
adc
xchg
or
push
pop
stc
push
sbb
repz
ffree
sbb
push
jle
sbb
cmpsb
xor
inc
addr16
std
into
pop
mov
add
dec
pop
or
jbe
mov
insl
mov
pop
mov
and
push
in
push
cld
nop
sarl
sbb
xchg
jno
sub
pop
es
xor
notb
fldcw
sbb
push
mov
in
xchg
fnstenv
mov
lahf
test
out
dec
adc
dec
inc
adc
ficompl
fcomps
jbe
lods
rcrb
dec
lods
repz
les
or
test
adc
jns
nop
mov
js
pop
jmp
cld
ret
enter
mov
ljmp
mov
jae
sbbb
mov
pusha
scas
daa
add
xor
leave
idivb
sbb
fisttps
cmpsl
insl
repnz
pop
adc
lods
rcll
dec
mov
lahf
imul
dec
cmp
icebp
movsb
jno
test
mov
rorb
lret
jns
ficompl
daa
pop
sub
xlat
fcmove
loop
das
into
xchg
mov
mov
adc
mov
mov
jb
xor
or
push
fs
or
mov
dec
sbb
aas
add
jmp
mov
hlt
mov
out
fwait
xchg
mov
mov
stc
dec
mov
outsl
sbb
shll
pop
repnz
jnp
jo
imul
fisubrs
and
aas
aad
nop
call
pop
fnstsw
test
xor
sub
aam
and
loopne
in
sub
inc
mov
inc
push
xchg
adc
xlat
or
jnp
cmp
add
mov
fs
popa
inc
pop
adc
push
or
inc
sub
popa
movsl
mov
mov
pop
adc
icebp
iret
mov
jp
jmp
pop
aaa
repz
inc
rolb
notl
out
or
mov
pop
pop
jle
sbb
inc
mov
mov
in
xor
jbe
int
out
mov
addr16
cmc
out
mov
fldenv
fwait
xchg
fimull
movsb
add
pop
jmp
pusha
jg
dec
lods
jbe
jle
xor
xor
lahf
jb
sahf
sarb
mov
das
pop
gs
lcall
mov
roll
inc
inc
int
jb
jne
stc
fildl
test
in
push
loope
pop
addr16
daa
inc
mov
lock
neg
adc
add
add
imul
mov
mov
mov
mov
add
movl
mov
jmp
sub
test
inc
rcl
mov
jl
jle
sarb
fdivr
movb
mov
cwtl
fidivl
outsb
pop
lods
mov
and
or
nop
cwtl
rcrl
shl
lahf
ret
jbe
cmpsl
sbb
lret
mov
push
and
out
adc
xchg
mov
iret
sahf
and
mov
add
mov
push
and
or
inc
push
sbb
sub
add
popaw
jmp
xor
jnp
ss
cmp
jg
fisubs
clc
shll
dec
insl
or
mov
loopne
push
test
pushf
fadds
sbb
nop
cmp
loop
out
test
repnz
push
mov
mov
fnstcw
xor
out
jae
inc
mov
xchg
popa
movsb
inc
nop
sarb
xor
dec
stc
and
dec
push
ljmp
insb
cmp
and
lea
mov
xchg
cli
cwtl
adc
js
cmp
je
das
call
mov
xlat
add
iret
int3
cld
out
js
sbb
je
mov
push
mov
daa
mov
fcmovne
pop
rcr
push
fs
out
int
es
pop
mov
das
push
sti
adc
adc
jne
sbb
mov
clc
or
repnz
loope
aaa
mov
xchg
xor
js
cmpsb
dec
adc
push
cmovbe
and
loope
insl
mov
cli
outsb
jge
fsub
push
and
leave
or
ficompl
sti
mov
fisubrs
xchg
mov
or
xlat
mov
movsl
push
xchg
and
xchg
fcmovnb
sbb
call
incb
test
sbb
xchg
or
or
or
jg
inc
stos
lcall
jb
mov
xchg
inc
mov
mov
xchg
push
loop
or
sub
std
fstsw
dec
mov
and
push
cli
rcl
mov
insl
xor
inc
aad
pop
mov
shrl
add
mov
fwait
in
fdivrl
cmovge
cmc
adcl
int3
mov
dec
les
push
xchg
sbb
enter
fwait
inc
fildll
ret
test
stos
fimull
fdivrs
jl
enter
sbb
mov
leave
mov
sti
and
dec
jb
and
outsb
notb
pop
dec
lods
or
sbb
pop
inc
pop
adc
imul
clc
jns
mov
data16
and
xor
mov
xorb
fsub
orb
xchg
rol
xchg
cmp
sbb
test
dec
into
and
imul
cmc
dec
gs
roll
lods
test
cmp
sbb
sbb
add
mov
mov
aas
movl
movl
mov
xor
add
jmp
mov
xor
add
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
xor
xor
add
jmp
xor
adc
shl
icebp
repz
sbb
mov
jl
jle
lds
jbe
cwtl
rcll
sbbb
push
loopne
or
xor
and
icebp
jge
ret
dec
movsb
out
cwtl
or
stos
pushf
out
popa
sub
je
dec
mov
jmp
ss
mov
mov
lret
pop
lret
add
movsl
ficomps
push
js
ficompl
xchg
and
xchg
sbb
sbb
jl
push
pop
add
stc
pop
mov
call
push
sub
lcall
lret
xor
cmp
sbb
inc
push
jno
xor
aaa
xchg
mov
mov
and
fisubl
inc
or
imul
cmp
gs
and
ss
cmpsb
fcomps
cld
mov
jmp
push
popl
hlt
aaa
outsl
leave
pop
cmp
pop
cmc
stos
cmpsb
mov
dec
mov
lods
jnp
daa
in
push
jp
inc
xchg
and
sahf
arpl
insl
je
cmp
scas
mov
das
mov
pop
mov
mov
mov
xchg
into
outsl
add
sti
push
adc
enter
cltd
icebp
and
xor
jecxz
jp
pop
sub
pop
std
mov
sub
and
xchg
pop
jo
mov
jne
aas
inc
mov
jl
mov
jmp
adc
and
mov
cltd
dec
adc
mov
fsubrl
cmp
mov
sbb
stc
xchg
faddl
imul
pop
outsl
je
push
jae
out
in
fcomps
adc
sbb
inc
inc
vpsrlw
lods
sub
sbb
movsl
add
insb
jb
cmp
or
push
scas
fldt
dec
xchg
cmp
sbb
dec
in
xchg
cltd
xchg
pop
mov
mov
cmp
xchg
xchg
jno
dec
frstor
xchg
sub
dec
stos
xor
rcrb
inc
pop
cli
push
ficomps
inc
outsb
ret
push
rcrl
into
cmp
pushf
cltd
push
xor
aaa
adc
daa
test
and
fistpl
sbb
dec
xor
dec
ja
faddl
adc
mov
bound
push
jmp
arpl
or
mov
sbb
in
aam
stos
stos
pusha
stos
xchg
push
jno
ficompl
das
roll
inc
jmp
call
imul
and
adc
cmp
ds
inc
sti
or
mov
jbe
ja
in
sar
scas
sbb
mov
and
push
adc
and
lods
stos
dec
das
or
pop
pop
sbb
add
imul
sbb
inc
add
imul
add
mov
mov
mov
xor
add
imul
mov
xor
sub
mov
mov
xor
add
jmp
xlat
pop
mov
jno
stc
hlt
jb
push
loop
mov
jle
pop
jl
jle
and
push
push
test
adc
jmp
test
or
mov
jle
push
lret
xchg
and
sub
or
in
mov
stos
jle
movl
add
lret
outsl
sbb
mov
int
call
imul
in
aad
test
insl
ja
sbb
out
inc
test
pop
sbb
fmull
leave
stos
jno
and
inc
and
mov
aam
sbbb
mov
jbe
dec
push
adc
faddp
into
outsl
add
cmpsb
movsb
sbb
rcr
sub
sub
inc
xchg
mov
mov
fsubrs
pop
arpl
stos
lret
aas
dec
push
xchg
ss
inc
sbb
cmpsb
fwait
push
mov
repz
inc
mov
imul
mov
mov
adc
fs
adcl
out
negl
add
add
add
xchg
dec
mov
push
frstor
mov
cltd
pcmpgtd
in
insl
mov
push
add
lahf
mov
enter
out
xchg
lahf
ja
lret
ss
rol
les
filds
daa
or
pop
pop
in
cmp
rcrb
xor
ja
mov
cmp
xor
popa
mov
pop
cmp
pop
mov
sar
fistps
push
dec
push
loopne
int3
fwait
loopne
cmp
dec
or
xchg
jne
aas
arpl
fwait
pop
mov
mov
in
subl
mov
or
add
inc
repz
popf
dec
clc
mov
mov
sub
push
hlt
pop
mov
movb
add
push
inc
and
sbb
dec
lcall
rorb
add
or
and
lock
call
lock
outsb
test
fstl
sub
lock
add
xchg
sub
movzwl
aad
popa
xchg
nop
popa
mov
aam
lods
cmp
push
or
aas
cmp
mov
add
adc
cmpsl
divl
arpl
xchg
mov
xchg
cs
daa
lods
icebp
sbb
cs
mov
addr16
add
outsb
std
add
andb
adcl
leave
int
aad
jo
and
js
push
in
lret
and
fstps
mov
rclb
or
pop
lds
mov
lret
push
sub
nop
jae
push
out
ja
or
sbb
or
idivl
or
cld
mov
xor
inc
xor
mov
sub
inc
imul
mov
xor
sub
lea
jmp
pusha
das
sti
pop
push
push
out
and
jle
pop
jl
jle
jb
pop
mov
ljmp
popa
out
and
lret
pop
repz
or
jecxz
adc
mov
icebp
fdivr
popl
cwtl
fwait
mov
fisttpl
xchg
cmp
xchg
inc
cmp
or
adc
cmpsl
adc
arpl
out
out
icebp
out
jo
int
arpl
pop
lock
and
sub
imul
mov
roll
jnp
adc
pusha
test
fbld
es
dec
lock
repnz
fsubrl
add
push
jmp
repz
jg
add
addr16
jns
xor
ret
inc
mov
cwtl
push
or
fdivs
or
movntq
out
inc
fcomp
cmp
mov
mov
cmc
add
clc
sbb
inc
cmp
and
cmpsl
push
add
jnp
mov
and
ret
stos
sbb
insb
pop
mov
sbb
lods
xchg
movsb
into
sub
mov
std
mov
ds
rcll
sbb
pusha
popa
push
push
mov
cmp
jno
mov
arpl
push
cmpsl
mov
push
addl
jp
mov
adc
adc
or
cmp
enter
inc
ja
xchg
aad
mov
int
insb
out
push
mov
cmp
cmp
test
dec
xor
fsubrs
fimull
xor
pop
cmc
repz
sub
bound
and
mov
popa
jb
inc
adc
ficomps
cmp
xchg
ficoml
ja
andl
lods
mov
popl
mov
jno
adc
xchg
pop
cmp
and
mov
push
in
testb
stos
fsubl
jno
btc
cmp
lds
data16
mov
in
mov
adc
out
aam
lds
in
or
insl
pop
xor
mov
push
add
add
mov
je
and
ret
or
cltd
adc
ss
jae
mov
add
pop
and
adc
jl
mov
cli
arpl
mov
cmp
mov
sub
xor
les
test
je
jecxz
pop
dec
fucomip
mov
dec
pop
xchg
xlat
push
adc
inc
jne
sub
jle
mov
xchg
shrb
push
outsl
inc
cli
pop
pop
inc
or
subb
inc
mov
inc
les
or
and
out
dec
sti
leave
pop
pop
cmp
xor
mov
pushf
mov
jae
mov
cmp
jbe
mov
mov
jmp
outsl
fisttpll
pop
fmull
jmp
jle
jl
jle
and
mov
jbe
xor
enter
sahf
ss
andb
jg
ss
fcmovbe
insl
stos
xchg
mov
fwait
in
cmp
inc
xchg
leave
scas
inc
sbb
popf
mov
rolb
rcr
lahf
divl
push
fiadds
hlt
mov
pop
push
inc
adc
movl
push
pop
mov
sahf
pop
jl
jl
mov
andl
cmp
je
stos
repz
aam
mov
fcmovne
pop
shlb
notb
or
push
lock
fisubl
lret
fisttpll
fstpt
sbb
jge
push
das
sbb
leave
mov
fmuls
das
stos
mov
je
hlt
fildll
insl
jns
mov
xchg
jl
cwtl
adc
fldt
pop
mov
andl
or
daa
xchg
cmp
push
aam
sti
adc
mov
test
mov
jg
ret
mov
call
xor
enter
adc
cld
mov
jge
push
mov
pop
stos
xchg
dec
pushf
push
and
mov
insl
and
push
cmp
pop
repz
mov
add
ret
andl
rolb
scas
and
xor
cs
popf
push
xor
out
sbb
lcall
mov
inc
xchg
sbb
jl
add
mov
adc
mov
lock
adc
jle
dec
adc
test
push
or
xor
jle
roll
testb
int
inc
jbe
gs
sahf
push
bound
xor
cmpsb
mov
or
notb
mov
and
push
loop
dec
and
loopne
add
int
pop
adc
push
mov
dec
sub
mov
sub
push
inc
xor
sbb
mov
fdivr
cmpl
in
enter
pusha
cmp
mov
std
xor
cmp
aas
repnz
daa
mov
xchg
add
out
bound
pop
popa
xchg
les
icebp
xlat
ds
imul
daa
jns
jecxz
or
pushf
sub
xor
jg
sub
mov
cld
push
push
or
jp,pt
inc
cld
aas
out
sub
cltd
or
into
mov
popa
stos
add
outsl
xchg
enter
sub
sbbl
popa
dec
cmp
paddq
mov
xchg
mov
xchg
add
lods
sub
imul
dec
gs
sub
or
rcrb
fcoms
jns
or
mov
test
jo
lcall
add
imul
mov
xor
add
mov
lea
mov
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
jbe
pop
pop
leave
ret
push
mov
push
mov
and
mov
xorl
xor
notl
add
jmp
scas
incb
jne
lods
jbe
loopne
mov
loop,pn
cmp
jle
sub
jle
xchg
adc
sub
xchg
pop
mov
mov
enter
inc
jno
hlt
lods
jnp
jmp
inc
sarl
dec
mov
inc
adc
ret
shlb
fmuls
jmp
cmpsl
jb
dec
testl
pop
xor
mov
mov
adc
inc
push
imul
mov
outsl
in
cmp
push
mov
sub
mov
test
pushf
add
dec
sahf
movsb
dec
cs
int3
and
jns
lahf
dec
inc
jmp
movsl
out
mov
cmp
adc
push
in
jle,pt
adc
pop
sub
lods
inc
xor
inc
xor
or
pushf
xchg
mov
in
cmp
dec
das
mov
cwtl
jle
mov
jg
fstp
aam
not
push
cltd
into
add
adc
adc
push
inc
fwait
sbb
lret
sarb
pop
mov
inc
gs
push
cmp
mov
test
adc
push
in
pop
dec
stos
mov
rcrl
fmul
scas
imul
or
jb
loope
sbb
out
lods
lods
push
jg
ret
cmp
push
cmpl
jmp
or
cmp
sarb
mov
xchg
repz
pusha
jg
dec
in
addr16
fucompp
jns
mov
cld
loop
ficoms
mov
inc
dec
es
mov
fbld
xchg
jle
adc
ja
jmp
pop
pop
jns
inc
test
fnstenv
xorb
push
imul
dec
shlb
in
lods
add
mov
add
adc
fmull
mov
mov
aaa
and
add
or
mov
pop
jae
loope
lock
cmp
xchg
xor
pop
and
dec
insb
adc
aam
iret
push
sub
pop
mov
clc
ja
pop
fcompl
cmp
mov
add
daa
dec
adc
or
je
call
addr16
mov
dec
addr16
sti
idivl
adc
sbb
imul
sbb
ret
pop
jg
and
mov
inc
pop
sbb
negb
dec
loope
xor
int
nop
dec
mov
or
jle
jnp
ja
add
cmp
pop
inc
adc
out
ljmp
arpl
dec
mov
mov
mov
pop
and
xchg
dec
sbb
int
dec
dec
fdivrs
add
imul
adc
mov
iret
inc
mov
fldenv
push
out
mov
or
push
fwait
xchg
aad
ljmp
xchg
mov
xor
call
jo
mov
sbb
clc
xchg
shlb
sub
ds
arpl
rorl
jp
aad
add
das
mov
xchg
lods
push
dec
adc
movl
movl
mov
push
mov
movl
mov
cmp
je
mov
xor
xorl
xor
lea
xor
cmp
jne
movl
jmp
add
mov
xor
add
movl
mov
mov
movl
jmp
jmp
fldcw
les
adc
call
jge
jle
add
mov
icebp
add
nop
jno
out
inc
push
xor
or
or
popa
sub
aaa
xchg
and
add
test
ret
cmp
fsubrl
mov
push
imul
loop
cmpb
ss
push
imul
int
in
stos
or
leave
lods
lea
add
xor
call
les
fcmove
push
loop
xor
jb
and
sub
incl
pop
aad
ficoms
adc
mov
mov
lcall
test
sub
mov
lcall
stos
mov
test
lea
cmc
mov
lret
adc
mov
mov
mov
inc
dec
out
imulb
sbb
fists
or
jle
leave
sbb
mov
les
push
jmp
mov
cltd
adc
inc
inc
subb
insl
mov
pop
adc
adc
lcall
mov
sub
in
cli
fcoml
sbb
int3
cmp
mov
add
sub
bound
outsb
sub
test
lock
outsl
fisubs
or
or
aad
mov
sub
dec
add
pop
in
jo
mov
std
movsl
insl
ds
imul
mov
mov
outsb
nop
xchg
shl
adc
add
xor
add
es
mov
dec
jmp
mov
sbb
cmp
loop
push
push
gs
sub
ja
inc
dec
das
rcr
outsb
inc
cmp
aaa
cmpsl
push
fistps
push
outsb
out
jmp
and
test
add
xchg
scas
lock
or
jmp
sahf
or
imul
bnd
mov
sbb
push
xchg
sub
call
in
idivl
sar
jbe
aam
hlt
pop
push
movsl
rolb
ljmp
inc
or
fstpt
add
xchg
push
lahf
mov
pop
mov
in
mov
mov
jecxz
jl
inc
cmp
sub
scas
ret
jg
or
push
ja
idivb
lahf
mov
fadds
cli
sub
andb
xchg
jns
xor
int
test
xchg
cmp
cmp
sbb
lret
sbb
jp
test
ret
adc
lcall
sbbl
stc
inc
repnz
test
xlat
ds
xchg
push
js
and
cld
jns
pop
lret
jmp
mov
jo
sbb
mov
dec
push
loop
pop
xlat
icebp
or
add
fsubs
bound
jmp
add
pushf
adc
mov
cmp
inc
push
push
jae
insl
dec
cld
sub
mov
pushl
adc
enter
dec
andl
ss
jo
jp
xor
neg
jmp
jne
sub
test
test
mov
xor
sub
jle
int
push
out
adc
push
xor
into
jle
scas
push
ss
dec
jne
xlat
in
mov
movl
xchg
jne
push
aaa
mov
int3
mov
cmp
fs
scas
fwait
aad
iret
mov
rolb
je
adc
adc
xchg
cmpsb
inc
mov
mov
adc
push
inc
out
cmp
cli
and
mov
mov
push
ljmp
push
scas
cmp
jae
pop
ret
push
add
lds
ffreep
dec
xor
cld
movsb
call
adc
jp
mov
pop
mov
xchg
jne
in
cmc
int
loope
jb
jb
jns
cmp
push
xchg
pop
aam
jno
pop
repnz
idivl
fisubl
push
pop
pushf
addb
and
xor
clc
sub
stos
pusha
inc
dec
mov
jbe
aaa
jge
mov
loopne
jmp
notl
inc
push
jb
xchg
dec
mov
scas
xchg
enter
and
or
stc
into
cmp
out
hlt
je
push
out
pop
clc
call
xchg
mov
push
adc
pop
addl
movsl
pop
xchg
adc
pop
jne
inc
iret
mov
test
dec
and
jno
pop
imul
cmp
dec
je
sarl
sbb
ffree
sub
or
xchg
pop
test
xchg
lahf
fimull
push
or
lcall
out
inc
pop
mov
mov
subl
std
outsb
jmp
andb
pushf
and
push
scas
sbb
pusha
dec
into
add
data16
adc
dec
xchg
pop
add
push
jmp
mov
jmp
ljmp
pop
pop
lods
cmp
hlt
lret
test
loop
xchg
aad
mov
cs
sub
inc
out
add
ffree
xchg
icebp
cmpsb
lea
xor
into
repnz
sub
test
cli
mov
and
jne
push
aas
push
into
and
pop
mov
insb
lds
fstps
jns
mov
xor
scas
add
add
orb
scas
sbb
popf
mov
mov
and
jmp
test
or
out
xor
jnp
je
pusha
movl
jns,pn
ja
xchg
in
jmp
insb
addr16
pop
es
fcomp
add
adc
xchg
mov
pushf
in
icebp
sbbl
in
into
inc
je
pmullw
aad
dec
sub
imul
outsb
xor
mov
or
xor
imul
cltd
mov
or
add
push
add
sarb
or
dec
dec
ds
pop
enter
jns
addb
out
mov
mov
pop
mov
inc
data16
cmpl
and
add
add
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
mov
mov
add
mov
mov
mov
pop
test
je
pushl
pushl
mov
pushl
mov
jmp
lahf
cmp
push
pop
fcomps
cmc
add
xor
jle
jge
jle
icebp
push
and
pop
pop
lahf
insb
push
fcmovbe
mov
out
adc
pop
pop
fildll
gs
mov
inc
pop
xor
addr16
popa
inc
cwtl
xlat
fdivl
cwtl
imul
addr16
cmp
xchg
adc
jb
dec
rclb
jge
outsl
cmp
cmp
pop
repnz
leave
arpl
xor
pop
xlat
and
push
lods
mov
test
sbb
push
incl
fadds
ja
push
add
in
popa
xchg
lret
adc
jb
call
scas
test
cs
dec
add
push
inc
cmpsb
sahf
cmc
in
mov
addl
add
fwait
nop
cli
push
add
xchg
jl
cmp
movsb
mov
in
lds
mov
popa
hlt
repz
stc
dec
popf
ss
mov
stos
pmullw
scas
imul
dec
stos
popa
sub
or
inc
sbb
jecxz
pop
std
mov
cli
mov
push
add
adc
nop
iret
mov
push
push
xor
ja
imul
movsl
in
idiv
mov
data16
lods
mov
add
push
dec
shlb
mov
add
push
stos
mov
jp
insb
ret
insb
xor
sbb
xor
outsb
ret
movsb
xchg
stc
sbb
testl
mov
bts
cmp
mov
jmp
cmp
shr
push
or
mov
cmp
pop
or
das
subps
sbb
insl
push
loope
das
popf
push
es
xchg
in
sub
ss
out
scas
sbb
jle
cmp
stc
orb
xchg
out
mov
inc
sbb
mov
shrb
mov
mov
cmp
lret
cltd
cmp
mov
fmulp
dec
mov
inc
ljmp
inc
sub
idivb
adc
adc
push
stc
ljmp
fbld
adc
loope
jne
in
aaa
roll
in
adc
fs
mov
push
or
mov
rep
into
jae
cld
add
and
pop
sub
mov
xchg
cmpsl
sub
add
and
and
push
jno
sub
inc
stos
mov
les
sub
and
lret
mov
mov
jno
rcrl
pop
add
xor
insb
adc
test
test
pop
push
cli
les
ljmp
push
cmp
jne
adc
popa
push
add
call
into
or
push
xchg
popf
shll
insl
pop
push
or
in
std
sbb
pop
pop
fbld
bound
popa
test
sbb
popf
xor
je
sbb
xchg
jno
xchg
les
addl
sbb
pop
push
push
es
outsb
outsl
cmpsl
jecxz
adc
add
xchg
lods
fmuls
cli
jg
add
rcrb
pop
clc
cmpsb
push
add
cmp
add
add
mov
leave
ret
push
mov
sub
push
call
movl
cmpw
jne
push
call
movl
cmpb
movl
jne
movl
movl
lea
mov
lea
andl
mov
inc
mov
cmpl
jne
push
pushl
push
call
cmpl
jne
xor
or
inc
mov
cmpl
jb
movzwl
and
mov
mov
adc
mov
sbb
mov
mov
sub
mov
push
xor
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
call
jmp
mov
subl
xor
adcl
push
mov
add
mov
mov
mov
cmp
mov
mov
je
or
mov
sbbl
xor
add
sbbl
imul
mov
movl
jmp
or
xor
and
add
xor
add
and
mov
mov
or
mov
addl
xor
and
add
mov
sub
mov
sbb
mov
and
mov
sbbl
xor
adcl
add
cmp
movl
jne
subl
push
orl
pushl
pushl
call
mov
mov
andl
mov
mov
mov
orl
mov
subl
mov
subl
movl
andl
mov
decl
movl
mov
adcl
xor
add
jmp
notl
mov
xor
lea
push
mov
xor
lea
push
adcl
mov
xorl
pushl
call
mov
add
xor
andl
mov
inc
mov
cmpl
jne
call
cmpl
jb
mov
adc
mov
lea
mov
mov
xor
xor
add
mov
xor
lea
cmp
jbe
mov
mov
mov
mov
mov
mov
pushl
sub
pushl
xor
mov
pushl
call
sub
xor
mov
mov
mov
xor
add
xor
div
mov
cmp
jne
call
lea
mov
mov
push
add
push
lea
push
call
mov
mov
mov
mov
mov
mov
sub
xor
cmp
je
mov
mov
sub
xor
cmp
jne
mov
add
jmp
mov
xor
add
mov
mov
xor
add
mov
jmp
mov
mov
mov
mov
add
mov
mov
pop
pop
pop
jmp
push
call
xor
leave
ret
push
mov
push
movl
push
mov
mov
mov
mov
movl
movl
movl
cmp
jne
or
mov
sbb
mov
movl
jmp
cwtl
sahf
inc
mov
ja
mov
movl
movb
jle
mov
imul
stc
mov
fldl
mov
add
sti
inc
aas
add
jecxz
mov
into
adc
cld
push
ret
aaa
push
leave
subl
lret
jg
jno
mov
mov
stos
sub
scas
cs
push
pop
gs
shlb
push
imul
ljmp
dec
fs
clc
pop
jbe
jecxz
mov
outsb
lock
leave
cmpl
push
pop
mov
inc
test
movsb
outsl
mov
xorl
lods
int3
inc
loop
jl
in
push
pop
dec
push
adc
cli
test
loop
arpl
idivb
mov
mov
sbb
pop
add
mull
mov
mov
rol
mov
scas
adc
pop
js
cmpsl
arpl
add
orb
jo
fwait
cmpsb
or
out
adc
jp
cmpsl
fnstcw
fidivrl
mov
adc
test
test
mov
add
das
lret
outsb
mov
repnz
cmp
stc
jno
sbb
mov
hlt
pop
shlb
and
and
lahf
fwait
pop
fdivrp
repz
jp
pop
sub
imulb
iret
cmp
mov
scas
xor
xchg
ljmp
dec
daa
in
aad
mov
out
or
jmp
notb
xchg
jg
sahf
cltd
cmp
inc
stos
shrd
push
dec
rcrb
outsl
jge
mov
cmp
aaa
push
push
lea
jne
subl
mov
loope
fwait
mov
rcll
sub
dec
sahf
and
lods
push
dec
jns
xchg
insb
xor
mov
sbbl
add
addl
mov
movzwl
sbbl
jmp
cmp
es
repz
movsl
pop
xor
scas
xor
jle
jg
jle
scas
sbb
stc
mov
xchg
and
mov
outsl
push
mov
repz
jg
jbe
mov
cltd
fadd
data16
test
cmp
cwtl
cltd
cmp
je
sbb
dec
nop
xor
jecxz
cld
mov
jl
cltd
sbb
flds
dec
pusha
pop
inc
lds
out
cmc
jns
popf
sub
sub
lock
mov
xchg
xchg
daa
sar
xchg
mov
sbb
rol
bound
mov
cmc
test
cmc
rcrl
aas
popf
aad
pusha
adc
lods
xchg
decl
mov
xchg
sbb
xor
sub
ds
cli
lock
dec
adc
push
movsl
subl
push
lods
ss
sti
pop
repnz
lret
das
xor
and
or
ret
inc
sar
bnd
jne
ja
mov
test
sti
stc
inc
das
int3
pop
inc
or
jge
mov
psubb
lods
and
cmpb
clc
js
cmp
dec
outsl
fisttpl
jge
dec
mov
cmp
cld
fwait
mov
mov
lds
mov
dec
in
push
sbb
ror
or
loopne
test
insb
fcomi
ret
dec
mov
xor
enter
dec
fwait
sbbl
enter
das
repnz
xchg
mov
cmp
inc
nop
cmp
sub
sbb
inc
movsb
mov
es
mov
out
scas
test
mov
sub
mov
dec
or
andl
and
mov
mov
jmp
xorl
mov
jmp
dec
rcrb
mov
push
loope
sahf
adc
mov
jle
mov
jecxz
decb
mov
jb
out
xchg
into
das
fstl
sub
into
and
stos
xchg
push
imul
dec
jmp
cmp
cmp
ror
xchg
xor
lret
mov
test
fbld
aam
in
push
or
push
xchg
insl
js
xor
lcall
or
lret
jmp
lahf
push
adc
imul
mov
adcl
add
inc
cmpsb
int
mov
fcoms
pop
lods
lea
xor
bound
cmpsb
subb
jne
jecxz
mov
stos
andb
inc
jg
sub
mov
lea
xchg
out
xchg
arpl
jns
pop
jns
xacquire
scas
cltd
or
add
add
sub
imul
insb
mov
sbb
xor
xchg
xchg
scas
mov
arpl
pop
lea
addr16
dec
movsl
pop
cmp
nop
mov
out
add
mov
insb
dec
inc
loopne
dec
fidivrl
inc
lods
sub
pusha
or
mov
sbb
mov
inc
les
push
rcll
or
es
xchg
jnp
stos
aas
or
push
inc
in
ficomps
test
aaa
and
pop
push
add
cmp
xor
push
adc
xor
mov
sub
mov
mov
addb
or
push
cld
repnz
sub
xchg
mov
call
jne
sar
add
mov
pop
popa
aaa
fildl
lcall
bound
sarl
cmpsb
cltd
inc
loopne
xor
in
fiadds
jne
call
test
jmp
and
in
popa
push
lret
xchg
inc
sub
int3
les
mov
adc
or
dec
pop
and
sbb
sub
in
scas
fidivrl
insb
aas
inc
jecxz
mov
insl
test
fimuls
jae
shl
loope
scas
popf
imul
jnp
inc
mov
cmp
int
inc
in
jae
sub
mov
lret
mov
mov
pop
std
push
jge
clc
jae
pop
jne
iret
sub
and
cmpsl
in
adcl
xchg
mov
mov
insl
cmp
mov
dec
xor
adc
out
jecxz
cmpsb
pop
or
fmulp
hlt
mov
push
cmc
iret
dec
enter
mov
jbe
mov
mul
arpl
jge
jno
inc
xchg
jae
sbb
dec
mov
push
push
imul
dec
pusha
dec
jne
fstpl
stc
adc
xchg
cltd
cmp
shll
clc
dec
gs
div
scas
jg
mov
lds
loopne
mov
mov
jge
cmpsl
inc
mov
jle
adc
sbb
out
imul
and
stos
cmp
cmpl
popa
dec
pop
popa
dec
push
hlt
movsb
rolb
pop
xchg
mov
jge
sarb
pop
fmul
iret
call
and
jae
xchg
fwait
xchg
ss
jl
inc
xchg
les
lods
hlt
pop
pop
out
mov
mov
fwait
push
jnp
insb
ja
inc
sbb
scas
push
jne
ja
std
dec
push
in
bnd
mov
ljmp
inc
mov
loope
popa
pop
scas
sbb
dec
push
or
stos
adc
sub
or
push
add
test
cld
dec
ret
push
mov
sub
andl
movl
mov
or
jmp
pop
cmp
inc
pop
arpl
js
push
loope
outsb
and
ret
add
test
aad
pop
jecxz
cmp
or
repnz
loopne
sarl
dec
pop
push
xlat
lock
rcr
xor
fcoms
in
outsl
xchg
push
ret
dec
cltd
clc
jae
movsb
mov
arpl
and
push
or
mov
mov
lods
mov
arpl
arpl
xchg
sti
in
jae
scas
cli
jne
lret
scas
pop
push
das
scas
leave
data16
fistpll
or
repnz
sub
add
and
dec
jp
xor
adc
test
fisubs
and
out
push
shrb
js
jb
stos
aaa
movsl
mov
mov
pop
push
xor
fdiv
cltd
scas
sub
sbb
cmp
sti
adc
push
in
dec
subl
jae
push
fs
lods
pushl
or
xchg
repnz
sub
cmp
pusha
cwtl
lods
int
movsl
imul
ds
pop
dec
or
dec
rcrb
addb
dec
js
xchg
cltd
pop
jmp
int
stos
cmp
push
aaa
or
mov
lds
push
dec
fsts
scas
popl
pop
push
scas
out
jge
cmp
stos
je
mov
into
cmp
mov
out
jo
and
push
mov
inc
bound
out
loopne
int
scas
xor
dec
dec
jae
mov
adc
pop
dec
xchg
xchg
push
sahf
jmp
call
dec
jge
adc
aad
pop
inc
push
bound
jge
push
pop
xchg
loopne
push
cmc
inc
mov
sbb
gs
adc
adcb
test
lock
dec
sar
sub
adc
and
pop
xchg
mov
jno
mov
aas
mov
ljmp
nop
call
negb
scas
dec
movsl
cmp
icebp
push
pop
cmp
inc
push
movl
xor
mov
mov
sub
mov
and
lea
sub
mov
mov
andl
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
pushl
push
pushl
call
jmp
xor
push
lea
mov
mov
jmp
aad
shlb
dec
js
js
dec
out
xor
jle
jl
jle
fdivs
cmp
and
mov
jbe
ret
dec
test
insb
cmp
cmp
dec
fstps
stos
les
mov
lods
and
shrb
inc
jg
dec
and
xor
mov
sbb
or
or
inc
sbb
mov
pop
cmpsb
cmpsl
pop
mov
test
scas
test
push
fs
mov
mov
xchg
xchg
fimuls
mov
mov
into
test
pinsrw
sub
fsub
cmpl
test
and
daa
mov
push
lds
test
dec
lahf
ss
and
jl
pop
mov
rolb
pop
movsl
lret
insl
xlat
out
mov
movb
das
shl
into
orb
mov
push
push
insl
sub
iret
xchg
shll
mov
jge
xchg
aaa
ss
pushf
test
pop
or
aaa
scas
or
mov
cmp
out
pop
bound
push
pop
lcall
inc
pop
icebp
imul
pop
adc
mov
jb
sbb
cmp
in
jno
gs
jbe
fistl
pusha
subl
sub
inc
sarb
lcall
ficomps
mov
mov
fidivrl
test
mov
dec
xchg
mov
sbbl
cmp
add
mov
sub
jp
sti
push
outsl
fs
out
ficoms
fcomps
pop
mov
sub
out
rcl
fmuls
sub
movsl
xor
push
ljmp
fnstsw
sub
stos
adc
mov
inc
lds
rcrl
fidivrl
push
pop
test
addr16
rcrl
outsb
loop
push
xchg
fbstp
fstps
sarl
into
push
mov
xorl
mov
movl
cmpl
je
cmpl
jne
pushl
pushl
call
mov
dec
mov
jmp
mov
mov
andl
xor
xor
inc
mov
cmpl
jne
pushl
call
cmpl
jb
xor
mov
neg
jmp
loopne
test
cmp
pop
out
jl
push
and
jle
add
push
inc
adc
ret
push
das
lock
test
push
xor
xor
sbb
cmp
mov
mov
xor
cmovb
frstor
push
fdivl
std
sbb
fdivrl
mov
push
pop
pop
xchg
insl
push
fistl
das
iret
lret
mov
ss
das
call
xchg
int
jbe
aad
sbb
scas
je
neg
pop
fadds
ljmp
stos
repnz
ja
loop
lea
mov
push
add
pop
jmp
sub
in
or
out
mov
jge
add
inc
bound
mov
mov
and
enter
aam
add
push
mov
xorb
dec
jbe
aam
xor
inc
rolb
mov
mov
add
addr16
mov
push
cmp
nop
test
xor
aaa
rclb
es
mov
inc
mov
inc
pop
in
sub
inc
add
jp
leave
lock
and
mov
add
and
cmp
jge
add
jne
pop
push
mov
std
mov
movsb
shll
rclb
lcall
out
push
push
stc
pop
imul
fwait
and
xor
in
mov
xchg
xor
pusha
aas
imul
popa
dec
cld
mov
push
es
add
std
shlb
in
lahf
dec
push
or
test
out
cmp
xchg
or
js
sub
daa
jle
adc
pop
inc
cmp
negb
sbb
xchg
ljmp
lret
dec
int3
out
pop
add
in
add
fwait
xchg
lds
mov
aam
pop
inc
or
or
repz
shrl
cltd
sub
and
clc
add
aam
in
lea
inc
and
and
loope
outsb
loope
test
roll
outsb
sbb
add
movl
xor
addl
xor
andl
add
negl
add
incl
div
mov
movl
movl
movl
cmp
je
movl
movl
andl
lea
xor
mov
and
mov
movl
cmpl
je
cmpl
jne
push
push
call
cmpl
jne
xor
add
dec
mov
mov
dec
mov
jmp
mov
imul
jmp
and
out
je
inc
adc
sbb
hlt
loope
jecxz
int3
jle
add
pushf
ja
leave
and
cmp
push
jbe
xor
mov
jns
test
fistl
sub
mov
subl
call
cld
cmp
rclb
sub
xchg
and
pop
mov
shlb
lock
pop
mov
jno
or
mov
dec
lcall
push
adc
xchg
dec
inc
test
or
out
sub
inc
mov
mov
shlb
xchg
add
int
cltd
rolb
and
jp
enter
mov
lods
fstpl
imul
out
aad
rcrb
sbb
pop
jns
mov
sub
icebp
sub
xor
mov
mov
adc
rcrl
pop
mov
aas
pop
xor
in
hlt
pop
adc
sub
stos
push
jno
xor
inc
in
adc
sbb
sahf
lock
js
sub
cltd
sub
mov
test
out
jb
into
mov
fnsave
cld
cld
sbb
nop
cmc
sbb
int
int
test
scas
hlt
mov
sbb
aam
scas
fdivs
xor
pop
xchg
std
cwtl
pop
push
pop
hlt
cmovge
outsb
adc
inc
loope
mov
addl
xor
and
fisubrl
inc
popa
ror
cs
add
push
nopl
ret
cli
rcr
test
movsl
xlat
mov
jge
add
mov
adcb
and
add
push
clc
das
in
or
scas
ds
mov
scas
jl
xor
add
outsb
ret
adc
xchg
sahf
notl
call
lods
loopne
xlat
cmp
in
scas
cld
sarl
lods
addr16
cld
mov
cld
jne
or
loope
loop
xchg
mov
inc
mov
mov
cmp
je
mov
orl
mov
xor
add
pop
pop
pop
leave
ret
mov
add
cmp
je
mov
andl
jmp
mov
mov
or
cmp
je
mov
xorl
jmp
mov
mov
mov
mov
xor
mov
add
cmp
je
mov
xor
add
mov
mov
mov
mov
xor
add
movzwl
mov
xor
lea
add
mov
mov
mov
xor
add
imul
sub
mov
jmp
mov
mov
xor
cmp
je
mov
addl
jmp
mov
cmp
je
mov
jmp
push
mov
sub
adc
mov
mov
movzbl
or
mov
orl
mov
mov
orl
push
xor
xor
sub
push
mov
sub
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
push
neg
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
sub
add
mov
addl
lea
not
mov
mov
mov
and
mov
andl
xor
add
mov
andl
xor
or
inc
mov
cmpl
jne
pushl
push
pushl
call
cmpl
jne
xor
add
inc
mov
cmpl
jb
movl
movl
cmpl
je
cmpl
jne
pushl
push
push
pushl
call
mov
dec
mov
jmp
lea
jmp
ss
lods
jmp
push
mov
mov
lret
and
jle
insb
mov
mov
ds
push
hlt
mov
popa
fbstp
pop
fcoms
je
shl
push
fwait
aam
sub
lcall
push
aaa
test
in
jo
add
xor
cmpl
push
and
popf
arpl
xchg
lock
xchg
ljmp
loopne
inc
cwtl
shlb
or
call
shrb
fstl
ljmp
add
mov
es
add
mov
push
sub
cmp
stc
mov
pop
imul
jecxz
out
decl
jae
fsts
dec
insl
nop
mov
sbb
pop
test
jge
lret
addr16
fwait
pop
nop
xchg
jle
les
mov
sbb
lods
inc
js
jg
out
adc
rsqrtps
mov
fmull
and
jb
in
mov
fldt
subb
mov
fisttpll
aam
mulb
cmp
dec
pusha
addb
pop
and
xor
out
or
testb
stc
inc
mov
popf
mov
insb
xchg
cmp
aad
adc
pop
out
push
add
cmp
xchg
clc
and
pop
scas
in
fstpt
les
mov
js
jbe
sbb
dec
lea
xor
pop
loopne
cld
inc
mov
adc
jge
call
in
sub
dec
fldz
insb
ds
ljmp
or
jmp
hlt
push
mov
aas
xchg
xchg
sti
ljmp
and
out
cmpsb
js
mov
je
sub
sbb
rcr
or
orl
mov
loope
call
xchg
jae
inc
push
imul
scas
decb
xor
cmp
js
int
xor
in
push
xor
sbb
lret
fisttpl
pop
mov
lods
lret
popf
xchg
add
xchg
pop
shlb
dec
push
out
testb
mov
inc
loopne
and
add
add
mov
inc
mov
cmpl
jne
pushl
push
call
cmpl
jne
xor
or
inc
mov
cmpl
jb
inc
mov
orl
mov
xor
xor
add
add
xor
mov
mov
adc
jmp
xchg
inc
in
mov
das
xchg
das
aad
in
jle
and
jle
lods
out
mov
js
jecxz
int
jnp
inc
mov
loop
push
pop
sbb
int3
sbb
lds
pop
sub
iret
sub
shll
addr16
test
jb
inc
mov
icebp
mov
mov
aaa
dec
icebp
push
add
add
pop
daa
in
movsl
cwtl
xor
lds
lcall
xor
bound
js
cmp
test
cld
psrlw
sub
subb
xchg
push
mov
or
sysret
cli
xchg
outsb
pop
mov
out
push
sti
mov
pusha
pop
icebp
push
outsl
adc
sub
mov
dec
inc
insb
inc
cmpsl
push
movsb
stos
int
push
int3
push
inc
pop
aaa
fs
and
jnp
and
inc
add
cwtl
dec
mov
das
pop
push
pop
lock
enter
nop
pop
and
repz
xor
fisttpll
pop
jno
adc
dec
cmp
xchg
out
mov
jp
insl
sahf
mov
mov
outsl
mov
push
sti
jo
inc
cs
call
popf
in
pop
push
test
jle
inc
push
nop
push
or
ds
push
incb
pop
sbb
call
std
std
cmpsl
dec
jno
dec
test
mov
je
out
jb
mov
aas
cmp
in
out
sub
pushl
adc
leave
sarb
xor
shll
test
insb
mov
or
int
pop
mov
aam
jnp
inc
sub
inc
test
gs
out
xchg
mov
or
rorb
dec
loope
sub
negl
je
pushf
in
inc
inc
das
scas
loopew
lock
out
or
xchg
mov
stos
imul
lea
and
jnp
cmp
adc
pop
pop
shlb
cmp
faddl
imul
inc
mov
cmp
push
xchg
aad
fadds
mov
imul
enter
lret
cmp
mov
adc
jnp
inc
add
outsl
aaa
inc
add
inc
add
add
jg
xor
add
push
and
jle
lret
cmp
fcompl
push
jns
xor
insb
sub
jp
pop
test
jp
imul
stos
adc
xor
mov
ret
jg
mov
adcl
xor
in
pop
mov
lahf
mov
mov
ret
decb
push
iret
push
xlat
ds
pop
out
int
in
mov
push
shlb
sbb
pop
dec
lods
jae
and
int3
xor
lock
cs
cmc
adc
cld
adc
push
mov
je
xor
jns
out
xor
jns
ss
mov
jmp
mov
pop
sub
loopne
mov
adc
repnz
inc
xor
std
cmpsb
ficomps
xchg
in
mov
jnp
xchg
lea
sbb
ror
into
rcrb
adc
je
sub
and
xorl
roll
cmpl
inc
add
adc
out
subl
lret
pop
sbb
mov
daa
cwtl
dec
mov
out
int
aas
sbb
sub
or
mov
imul
stos
ret
insb
mov
mov
arpl
in
sub
or
imul
mov
fnstenv
cld
and
push
in
into
sbb
mov
fisubs
sub
outsl
rol
cmp
aad
fs
rorb
add
out
test
xchg
mov
sahf
scas
cmpl
cmpsb
inc
lret
fcmovnbe
adc
in
pop
jb
mov
ret
ffree
pop
mov
fsubp
xlat
sti
mov
cmp
lea
mov
mul
mov
mov
mov
pop
in
mov
and
xchg
push
mov
xchg
ss
inc
push
add
lds
pop
leave
cli
into
out
test
outsb
sub
pop
dec
test
iret
push
addr16
add
hlt
popf
mov
xorl
mov
adcl
movzwl
xorl
add
notl
mov
mov
or
mov
xor
add
cmp
jne
dec
mov
mov
xor
add
cmp
jmp
stos
adc
inc
jno
stos
icebp
jl
and
mov
jle
and
jle
out
xchg
lods
loop
sti
shll
pop
jmp
pop
stc
aas
mov
nop
inc
scas
jcxz
js
dec
sub
frstor
in
imul
push
xchg
cmpsl
cli
or
mov
je
dec
es
inc
and
pop
mov
outsb
gs
fdivrp
jb
cmp
iret
mov
sub
mov
imul
dec
xor
adc
cmpsb
outsl
je
loope
nop
hlt
lret
pop
or
cmp
pop
jae
mov
adc
xor
dec
push
mov
inc
dec
divl
into
jge
mov
jb
mov
mov
fldcw
mov
mov
fmull
sbb
mov
ds
push
out
jle
add
popa
dec
fwait
insb
xor
jg
sbb
ret
sub
xor
inc
xor
pop
xchg
xor
les
jecxz
inc
js
mov
movsl
cmpb
nop
mov
mov
out
daa
push
jmp
xchg
aam
lea
cmp
xchg
mov
insb
test
push
push
out
push
cmp
stos
inc
add
inc
push
mov
das
or
cld
fcompl
enter
and
adc
lea
lods
mov
stc
mov
in
cmc
push
lcall
lret
jmp
std
push
push
pop
outsb
xor
shrb
fimuls
xchg
decl
in
in
sti
jne
clc
hlt
stc
icebp
pop
ds
loop
scas
out
jge
push
hlt
int
lods
test
lock
inc
mov
xchg
add
arpl
add
mov
add
sbb
mov
and
sti
sub
xchg
add
sub
rcll
mov
pushf
jmp
push
std
lods
adc
test
mov
icebp
push
sbb
push
or
mov
sub
fidivs
jno
stc
and
and
xchg
or
iret
dec
or
mov
push
idivl
jne
mov
mov
xor
add
mov
mov
mov
xor
mov
sub
add
mov
mov
mov
movzwl
add
mov
mov
mov
xor
add
xor
sub
jmp
xchg
or
jmp
rorb
pop
jg
sarb
and
jle
inc
pushf
pushl
aad
andl
inc
mov
push
mov
dec
push
mov
enter
stc
into
insb
scas
cmpl
inc
mov
sahf
xor
push
aad
push
mov
push
int3
loop
xchg
jecxz
or
sahf
sub
aas
xchg
test
push
sbb
scas
xlat
mov
mov
test
cmp
clc
out
shll
or
pop
jo
mov
push
xchg
xchg
lods
push
xor
push
or
loope
fadds
in
shlb
push
out
or
cmpl
lock
jae
or
mov
lods
xchg
jge
loop
test
sbb
dec
push
rcrb
nop
sbb
loopne
pop
xchg
inc
test
testb
sbb
push
cwtl
mov
scas
cld
mov
push
dec
lock
and
cmp
cmc
orb
aaa
stos
add
mov
loope
lods
and
cmp
mov
or
fs
dec
push
cmp
cmpl
lret
mov
push
loop
adc
or
mov
scas
stos
ret
or
scas
repz
movsl
mov
mov
dec
pop
test
sbb
dec
sahf
mov
push
push
inc
nop
cmpsl
sbb
mov
jge
in
pop
mov
enter
test
sbb
pusha
fmull
xor
sub
fbld
sbb
fnstsw
cmp
push
cmp
xlat
sub
jb
cwtl
and
jns
sbb
mov
push
jns
test
mov
mov
jb
iret
or
leave
setno
mov
push
nop
inc
mov
pop
pop
and
xchg
ret
shrb
mov
in
xor
jnp
rorl
popf
sub
movzwl
sub
cmp
mov
movzwl
jg
xor
sub
sub
mov
jmp
xor
lea
mov
mov
cmp
je
mov
movl
jmp
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
lea
add
mov
mov
mov
mov
mov
jmp
sbb
aam
je
and
adc
or
jle
and
jle
pushf
sub
lods
cwtl
sub
std
cmp
js
fsts
test
xchg
adc
out
pop
jne
pop
mov
and
sbb
leave
push
fcompp
mov
in
cmp
movsl
or
xor
ljmp
incb
sbb
insl
stos
ja
xchg
lcall
cmc
pop
sarl
lds
jmp
sbb
push
leave
mov
or
adc
fsts
gs
lods
mov
loope
xchg
imul
fisubrl
sbb
cs
cltd
jo
movl
jbe
scas
mov
cwtl
mov
pushf
xrelease
pusha
mov
mov
inc
fdivr
fldenv
mov
stc
adc
mov
push
pop
mov
shr
aas
aam
ja
jl
mov
out
je
lock
jecxz
push
and
std
dec
out
jno
call
sub
ret
mov
push
scas
scas
sti
mov
mov
out
shlb
sbb
out
les
jno
push
cmp
ret
cli
cmc
mov
dec
adc
int
xor
pop
pop
repz
lret
add
scas
sbb
fadds
jle
mov
scas
data16
stos
lods
mov
add
xchg
das
mov
sub
aaa
in
mov
aas
test
pop
or
mov
add
xchg
adc
sub
lock
mov
xor
addr16
lret
lds
sahf
sub
pushf
fimull
aas
fsub
or
ficomps
sbb
inc
mov
xor
mov
inc
sbb
ja
inc
xchg
mov
out
sub
cmp
cmp
aam
dec
pop
jl
fs
xor
negl
sti
mov
data16
out
ret
sub
xlat
stos
test
jo
fidivrl
imul
push
sbb
xchg
sbb
jne
loop
inc
arpl
mov
mov
mov
xor
add
cmp
je
mov
mov
add
mov
mov
mov
mov
mov
mov
add
xor
cmp
je
mov
mov
xor
add
mov
jmp
xorl
jmp
mov
mov
mov
jmp
sbb
outsl
jno
out
jne
mov
ret
xor
jle
and
jle
push
push
cwtl
std
repnz
testl
fldz
cmpsl
add
hlt
jmp
sub
ret
lods
lea
in
ss
xchg
push
mov
xor
addl
cmp
stos
roll
adc
inc
fisubrl
jp
arpl
adc
mov
jnp
inc
mov
iret
imul
mov
mov
jns
sub
ret
push
mov
roll
sbb
push
xchg
iret
es
insl
cld
icebp
mov
adc
orl
xor
into
mov
push
pop
shll
out
aad
mov
loopne
push
hlt
pop
in
dec
arpl
ja
mov
lock
xchg
cltd
or
popa
xor
sti
daa
jnp
sahf
lret
stos
into
xchg
pop
lret
sahf
testl
mov
xlat
mov
lahf
push
push
insb
into
push
jecxz
in
xchg
pusha
inc
add
dec
inc
test
sbb
adc
lds
popa
sub
stc
or
push
int
pop
out
mov
jmp
dec
ss
xchg
sbb
and
mov
cli
mov
adc
repnz
repz
or
jp
adc
pushf
xchg
incl
filds
pushf
inc
dec
cmpsl
adc
push
icebp
or
cmp
mov
mov
jecxz
jge
adc
bound
movhps
or
add
std
daa
xchg
dec
sbb
mov
jb
mov
and
add
jns
cmp
cmp
movsl
push
sbb
cltd
inc
jno
dec
jg
mov
pop
jne
loop
out
mov
jnp
cmp
push
push
fsubrl
sub
out
fs
sub
push
in
xor
shlb
cmpl
orb
jl
pop
mov
pop
jnp
jmp
cmp
in
orl
cmpsl
imul
mov
imul
sti
stos
fwait
push
mov
mov
mov
pushl
jmp
lods
mov
outsb
xorl
pop
insl
enter
jle
and
jle
ljmp
fs
mov
pop
jl
dec
loopne
dec
push
aaa
and
das
addr16
sbb
lahf
jo
jle
pop
mov
enter
lea
inc
pop
fcompl
dec
mov
movsb
mov
sub
jl
adc
pop
scas
cmpsb
fidivl
or
scas
out
pusha
aaa
jle
test
inc
pop
fs
add
dec
mov
jge
xor
xchg
ficoms
xor
bound
dec
jecxz
shll
inc
sub
add
outsl
ret
cmp
icebp
mov
cltd
cmpsb
mov
adc
add
fwait
lret
sarl
or
mov
mov
push
xor
ja
std
mov
sub
enter
sbb
addb
or
pushf
xchg
stos
mov
pop
roll
test
arpl
shrb
insl
mov
mov
add
roll
movsl
in
dec
popf
ffree
orl
sub
test
jp
mov
icebp
inc
dec
aam
stos
das
or
inc
mov
es
sub
fidivs
and
xlat
pop
dec
adc
sahf
rorl
inc
lcall
jl
scas
adc
lahf
subb
sahf
outsl
in
cs
arpl
das
lcall
add
jge
inc
inc
cmpsl
jnp
mov
pop
fwait
enter
test
dec
fstl
jo
xchg
sarl
or
and
xchg
int
add
mov
pushf
mov
jb
jg
ficoms
popf
int3
out
mov
xchg
cmp
mov
shll
fwait
sbb
std
popf
xchg
pop
sbb
sub
mov
dec
cmpsl
or
mov
incl
fwait
push
ret
jnp
cmp
mov
fs
jo
lock
push
pop
out
insb
shrb
pop
cmp
call
jmp
loope
ljmp
clc
ljmp
fstpt
and
jle
xor
push
push
dec
mov
adc
lcall
shlb
pop
mov
sar
sahf
pop
sbb
jp,pn
dec
and
inc
cltd
or
mov
jbe
xor
pop
loope
andb
jle
xchg
push
enter
cld
les
push
xchg
sbb
imul
fmuls
int
xor
mov
xchg
dec
notb
inc
jbe
push
pushf
inc
cmp
movsb
cmp
adc
sbb
jg
cmp
xchg
mov
fwait
or
adc
lods
dec
cmp
adc
push
imul
inc
cmp
jbe
cs
sbbb
cmp
mov
das
enter
xor
aam
js
test
shrb
fsts
sub
dec
adc
addb
lds
test
mov
in
cmp
sbbb
lret
aas
inc
mov
mov
lods
fsin
movsl
std
jmp
dec
cmp
testl
xor
mov
sub
add
lcall
test
stc
out
mov
jns
mov
in
sbb
movsl
fcomi
cmc
sub
push
sub
rcrb
inc
mov
pop
imul
pop
loopne
hlt
aas
sub
push
mov
lret
bound
lds
idivl
sub
fmulp
and
cmp
cmp
inc
or
sbb
push
psrld
fcompl
in
nop
out
mov
fs
mov
sahf
jg
inc
xchg
sub
sub
push
push
jae
mov
imul
sbb
scas
popf
mov
xlat
sub
add
lret
icebp
jg
out
lock
push
and
inc
jmp
mov
mov
inc
arpl
sbb
mov
dec
andl
mov
add
loop
nop
jns
aam
push
nop
sbb
cmp
jmp
das
or
bound
cs
lret
dec
lea
into
pop
adc
add
dec
orb
mov
cmp
je
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
movl
add
movl
xor
xor
xor
mov
push
sub
mov
addl
xor
mov
add
orl
mov
mov
sub
mov
jmp
shrl
stos
fadd
cwtl
pushf
jb
int
mov
jle
cmp
pop
sbbl
mov
add
adc
iret
fnstcw
push
xlat
out
sub
in
fldt
and
cmp
clc
cld
pusha
pushf
cli
sub
leave
push
outsl
mov
into
fadds
sub
dec
mov
jbe
daa
push
sub
jb
jns
adc
jecxz
in
out
les
sub
cmp
push
ret
xor
idivl
pusha
xor
repnz
xor
push
into
jl
lds
mov
out
cli
inc
fiadds
jae
out
aam
sub
cmp
mov
cltd
in
cmp
ljmp
ss
mov
inc
js
adc
data16
dec
ljmp
push
arpl
lcall
scas
inc
push
inc
iret
mov
ljmp
jge
ret
ja
push
xchg
in
inc
data16
mov
into
inc
arpl
mov
pop
in
mov
test
jp
xchg
lret
lahf
mov
js
xchg
adc
fsubrl
fs
iret
lea
negl
pop
sub
hlt
and
faddl
xor
and
out
and
test
pop
sub
aaa
addl
out
mov
cmp
jno
std
movsl
mov
out
mov
xchg
or
mov
xlat
cltd
mov
jmp
push
fadd
bound
js
fldcw
xor
pop
in
movsl
and
push
aam
add
imul
test
mov
and
in
scas
fwait
mov
pop
rcll
fdivrl
mov
mov
push
aam
mov
outsl
fdivl
add
or
pop
xor
mov
jo
push
adc
out
sub
emms
pop
or
push
xor
mov
adc
and
test
mov
add
adc
inc
aad
loope
pop
arpl
dec
push
das
negl
sub
lret
or
aam
int
jge
ljmp
xchg
push
push
sbbl
jmp
lds
popa
mov
fisttpll
or
jle
cmp
mov
mov
vmread
xchg
aam
add
leave
dec
shrl
adc
lret
jp
push
add
jmp
nop
adc
or
test
lods
popw
mov
and
iret
gs
sbb
lret
orl
fisubl
xor
xchg
mov
outsl
cmpsl
or
cmp
pop
and
in
add
lods
jbe
out
das
or
enter
out
pop
add
leave
sahf
popf
jle
or
int3
nop
pop
xlat
in
aaa
arpl
pop
in
push
xor
std
loop
cmp
mov
rcrb
aaa
mov
je
ds
enter
adc
scas
insb
rcrb
ficoml
fisttpll
push
jle
cmp
add
and
add
test
insb
fdivs
pop
test
or
loopne
inc
call
push
mov
and
mov
stc
and
or
iret
inc
inc
sub
adcb
xchg
popa
ret
ds
jno
lea
roll
and
hlt
ss
xchg
das
mov
addl
jl,pn
mov
int
mov
pop
pop
sbb
push
stos
dec
lods
jg
pop
cwtl
cmpsl
cmp
je
lret
pop
sahf
mov
pop
mov
in
cmc
hlt
movsb
or
dec
fsubs
add
mov
in
les
imul
int
dec
or
sbbl
cltd
dec
push
xchg
mov
add
xlat
in
sub
mov
xchg
aad
inc
loope
in
bound
pop
jns
stos
sarl
push
stos
add
adc
cmpsb
or
xchg
cmpsl
inc
std
js
in
inc
imul
stc
imul
pop
sbb
xor
clc
imul
pop
cmp
mov
add
outsl
je
add
loop
stc
cmpsb
pop
stos
pop
push
popf
cmp
iret
scas
adc
rolb
xor
adc
movsl
mov
outsl
xchg
cmpsl
repz
dec
or
mov
test
movl
je
mov
mov
sub
mov
mov
or
jmp
push
lcall
cmpsl
or
inc
pop
sub
loop
jle
jl
jle
outsl
push
sbb
out
jno
and
mov
repnz
dec
enter
sbb
fs
insb
dec
xor
aas
pop
fs
xorl
or
pop
adc
mov
push
fidivs
pop
inc
in
mov
loop
dec
das
pop
mov
out
jns
stc
xchg
dec
icebp
scas
mov
pushf
mov
xor
ss
push
out
xchg
loope
sbb
lcall
push
jne
xchg
adc
lret
lret
xor
jne
clc
sahf
movsb
cmp
ja
aas
sub
out
dec
sub
pusha
sub
and
add
mov
scas
sbb
cmp
stos
out
fdivs
push
xor
out
mov
mov
test
mov
xor
mov
sbb
mov
sti
or
fidivrl
bound
sbb
loopne
sbb
lret
lret
aad
stos
in
mov
mov
adc
scas
dec
xchg
mov
out
or
insb
xor
mov
mov
jnp
ret
xlat
nop
adc
mov
xchg
jle
inc
push
mov
adc
repz
push
int
mov
jne
out
or
mov
test
je
adc
mov
or
mov
ret
xor
outsl
xchg
add
stos
aam
int
sbb
xor
sub
pop
fsub
add
mov
cmp
mov
jb
mov
ja
in
jp
into
es
sub
jns
inc
dec
sahf
sbb
imul
cmc
jecxz
inc
or
pop
dec
sbb
arpl
test
pushf
push
pop
or
push
test
cld
xchg
push
or
je
ds
mov
dec
jge
cmpsb
jecxz
adc
pop
jge
incl
test
xchg
or
xorl
xchg
pop
add
lret
jge
es
mov
sarb
mov
sbb
add
mov
mov
xchg
adc
sub
and
xor
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jb
mov
movl
cmpl
je
cmpl
jne
pushl
push
pushl
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
adc
mov
mov
sub
mov
mov
orl
mov
jmp
mov
data16
gs
jmp
into
scas
sbb
cmp
movsl
je
mov
aas
leave
icebp
add
and
adc
bound
push
arpl
push
mov
stos
cwtl
mov
cli
out
popa
and
cmp
stos
push
test
sbb
enter
mov
xchg
stos
mov
mov
clc
mov
cmp
and
or
dec
nop
xor
jmp
xor
xchg
adc
movhps
rorl
dec
repnz
add
cmp
stc
jl
mov
mov
push
sbb
inc
fs
sbb
mov
sbb
aas
cmp
pop
push
in
ss
repz
pop
mov
jns
adc
fdivp
in
mov
stos
pop
fsub
jmp
aas
cmp
test
inc
xor
jne
push
shrl
mov
and
add
xlat
pop
push
es
aam
fcomip
lcall
ss
ficomps
cli
xchg
mov
sar
test
cmc
sti
push
push
fs
sbb
pushf
or
arpl
in
mov
xchg
aaa
rclb
push
stos
sar
sub
dec
orl
mov
push
pop
ss
push
ljmp
adc
sbb
imul
shll
add
inc
imul
aam
mov
cmc
mov
dec
add
iret
pop
dec
test
insl
fidivl
adc
popa
xchg
daa
repnz
imul
vmaxss
stos
mov
xchg
lahf
loope
fucomip
icebp
mov
xorb
imul
mov
testb
cltd
idivl
std
cmc
mov
sub
mov
in
xor
add
lret
jl
pushf
push
mov
ficompl
cwtl
jae
xlat
sub
enter
mov
push
stos
xchg
fldenv
shl
cmpsl
aas
xchg
data16
mov
push
pop
int3
add
cmp
gs
jbe
imul
movsl
pop
clc
or
mov
add
push
push
mov
mov
xor
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jne
pushl
push
pushl
push
push
pushl
push
push
call
jmp
xor
movl
cmpl
je
cmpl
jne
pushl
push
pushl
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
or
add
movl
mov
mov
mov
je
mov
xor
sbbl
add
movl
jmp
imul
jno
dec
test
pusha
dec
cwtl
sbb
dec
out
jle
cmp
into
pop
xor
movsb
dec
sarl
inc
insl
xor
sbb
das
addr16
add
fcomi
sbb
or
movsb
sarl
or
xlat
mov
lods
lcall
fcompl
out
incb
cmp
add
cmpsb
sti
add
addr16
loopne
dec
push
mov
pop
mov
or
mov
test
mov
xor
in
ret
call
cltd
mov
push
jg
sub
or
push
sub
sbb
pop
out
sub
outsl
sub
sbb
mov
pop
lds
in
fimuls
loopne
adc
lret
shll
les
or
xchg
xchg
pop
lock
int3
jp
ret
add
cld
adc
jno
cmp
les
aaa
sbb
and
lods
cmp
adc
sbb
xchg
les
fldl
push
sbb
adc
adc
loopne
adc
push
test
out
out
gs
push
pop
xchg
popf
adc
xor
pusha
in
loope
pop
mov
cmpsb
sbb
mov
push
xchg
push
and
push
xorb
ljmp
pop
and
fisttps
pop
pop
xchg
into
cltd
or
pushf
pop
aaa
clc
rclb
aaa
jle
jae
xor
and
sbb
aam
imul
call
push
sahf
stos
fisttps
das
ret
repz
lock
sbbl
push
mov
sub
inc
dec
xor
fcmovne
mov
sub
inc
xor
jp
das
and
pop
mov
sub
jl
pop
jnp
and
out
shrb
jb
cmp
js
int3
fcoms
jecxz
jo
outsb
xlat
cli
movsb
jne
fidivrl
das
cmpsl
js
pop
inc
sub
hlt
out
daa
imul
enter
aad
cmp
or
and
mov
cmpsb
in
sub
das
xor
sbb
iret
lcall
es
test
adc
dec
push
mov
test
mov
test
les
clc
movl
jne
adcl
pushl
addl
call
sbb
mov
mov
xor
xor
or
mov
mov
xor
addl
add
movl
cmp
movl
je
addl
pushl
xorl
pushl
decl
call
movzwl
sub
jmp
or
and
loopne
shl
sti
and
mov
push
in
jle
cmp
inc
sub
es
fldt
mov
das
cmc
divb
call
imul
xor
lcall
iret
or
daa
fisubrs
mov
dec
scas
stos
ds
push
pusha
out
and
mov
mov
xchg
icebp
pop
mov
ss
test
in
mov
adcl
sti
pop
adc
adc
xchg
dec
in
mov
jle
jecxz
add
ds
and
pushl
fwait
cwtl
outsl
test
popa
or
jp
and
cmpb
push
or
jbe
lock
movsb
scas
jle
shll
addr16
sub
dec
cld
sub
xor
xorb
addr16
repnz
ss
lret
out
das
and
mov
push
dec
addb
inc
adc
jnp
dec
sub
loope
cmp
cmp
bound
loope
popl
push
das
lcall
mov
out
arpl
dec
dec
pop
repnz
push
push
add
addr16
cmp
mov
push
insb
das
into
rcll
jmp
mov
xchg
clc
pop
divl
int3
cmp
mov
dec
out
ret
mov
cmpsl
or
xchg
push
jecxz
pop
mov
xor
or
mov
mov
ret
aaa
mov
shrl
daa
cmp
mov
cmp
inc
mov
lcall
jno
xor
pop
cwtl
call
bound
and
jb
xchg
mov
das
pop
repz
pop
icebp
xchg
push
fwait
outsb
mov
in
outsb
add
xor
jno
pushf
ficoms
aam
mov
idivb
inc
xor
rcrl
icebp
lods
arpl
nop
pop
ja
cmp
rcl
rorb
jnp
sbbb
and
jbe
sbb
into
inc
shl
fmuls
cld
dec
and
dec
jae
clc
jbe
into
fisubrl
xchg
insb
mov
mov
test
add
hlt
push
jle
xchg
outsb
jne
sbb
cld
xor
mov
xor
adcl
add
movl
jmp
dec
ret
xchg
push
nop
push
dec
ret
mov
pop
sbb
shr
jle
cmp
xor
or
jnp
and
into
pop
out
movsl
imul
add
rolb
in
ja
out
cmp
out
mov
nop
mov
and
das
cmpb
cltd
pop
xchg
pop
sub
lcall
popa
loop
loope
sbb
arpl
cmp
test
jo
std
dec
add
imul
aad
insl
jo
aam
mov
mov
jb
jl
cwtl
icebp
cmp
addr16
iret
aam
dec
dec
add
inc
dec
push
or
pop
cmp
test
dec
cmp
cmp
mov
xchg
xchg
loopne
movsb
arpl
pop
cmp
jmp
lods
jmp
lods
rolb
lcall
pop
push
push
xor
in
andb
sbb
add
ja
mov
test
mov
sbb
cmp
xorl
and
dec
fsubs
daa
cmp
jmp
mov
xor
rorb
punpckhdq
and
pop
rorl
mov
stc
cmpsl
jmp
pop
sub
cmp
add
cmpl
cmp
into
mov
inc
add
mov
dec
sbb
xor
pusha
aam
dec
int3
push
sbb
push
and
mov
mov
mov
adcl
sbb
cld
les
xchg
mov
adc
pop
stos
scas
cmpsb
out
inc
push
movsl
lret
shl
xchg
setno
fwait
pusha
out
mov
movsl
push
cmp
mov
mov
xor
roll
fdivs
stos
loope
cs
icebp
xchg
scas
lea
add
popa
pop
xor
mov
clc
mov
dec
sub
adc
cmp
mov
movd
sahf
aaa
lock
xchg
inc
icebp
imul
push
idiv
in
rorl
jl
dec
lret
test
ret
jecxz
sti
ret
imul
outsb
or
pop
jmp
and
push
aaa
ret
movsl
sub
idivl
loope
call
lcall
pop
mov
jbe
cmp
je
sbbl
mov
andl
xor
or
inc
mov
cmpl
jne
push
push
push
push
call
cmpl
jne
xor
or
inc
mov
cmpl
jb
adcl
jmp
stos
adc
imul
adc
lcall
jle
xor
mov
test
xchg
andb
dec
stc
int
xor
test
or
mov
sub
mov
xchg
jne
lds
jge
mov
in
push
add
xor
mov
push
nop
dec
xorb
pop
repnz
dec
fstl
aam
imul
xchg
dec
scas
lret
cmp
cmp
xor
data16
aas
inc
dec
in
pop
mov
mov
mov
cmp
cmp
dec
xchg
mov
push
ja
scas
mov
xor
pop
mov
add
sarl
jo
pop
xchg
pusha
stc
adc
add
jmp
jne
imul
aaa
dec
xor
sbb
rorl
imul
daa
xchg
inc
mov
loope
jbe
mov
or
hlt
daa
fistpl
xor
xchg
push
addr16
add
cmc
pop
fcomi
sti
hlt
jge
mov
ljmp
xchg
and
push
dec
adc
push
and
aas
xor
dec
push
pop
fisubrl
add
dec
test
or
into
xlat
cmpsb
dec
mov
int3
mov
pusha
xchg
mov
jns
add
add
mov
popf
mov
stos
daa
orl
add
adc
jb
adc
ret
fbld
aad
or
cli
clc
andb
jno
mov
adc
lods
and
out
jne
push
dec
sbb
data16
lock
ret
cmpsl
out
dec
xchg
test
call
inc
test
xor
pop
dec
stos
out
js
clc
and
subl
mov
pop
jmp
addb
push
xor
pop
imul
and
push
rolb
es
lock
and
in
cld
fcoml
sub
pop
pop
int3
sub
adc
mov
lods
xor
std
pushf
sbb
mov
add
fidivl
lock
imulb
fildll
testl
cmp
les
xchg
mov
mov
or
mov
mov
mov
notl
add
movzbl
sub
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
mov
inc
mov
jmp
xorl
jmp
push
fsubrs
push
mov
idivl
cmp
push
adc
je
les
in
mov
dec
sahf
push
mov
xchg
mov
orb
rcll
cmp
shll
les
aad
push
and
pop
and
dec
jns
adc
and
cmpsl
mov
lret
inc
lods
sub
test
shr
inc
inc
jmp
inc
cmpsl
push
mov
xchg
hlt
mov
push
inc
aaa
movsb
xchg
popf
rorl
push
and
arpl
in
and
push
sbb
pop
mov
mov
imul
fimuls
or
sbbb
xor
and
cmp
sub
cmp
xchg
xor
fldt
xchg
cmp
pop
add
mov
popa
push
es
and
push
pop
or
mov
daa
nop
fcomi
dec
mov
es
or
push
es
sub
jae
pushl
test
sub
xor
fcomps
cmpsl
outsb
test
mov
pop
inc
loop
xchg
enter
sbb
mov
es
lds
inc
push
xchg
insb
sbb
ss
push
xchg
pop
imul
cmpsl
cmc
cmpsb
fdivr
xchg
push
jnp
fldt
cmp
inc
negb
stc
je
mov
sahf
movsb
dec
xor
ja
inc
jnp
jo
lods
sbb
xsavec
aaa
call
imul
xchg
or
cli
outsl
or
bound
adc
mov
mov
mov
out
cli
fstpt
mov
and
lcall
fstl
inc
cmpsl
mov
dec
jbe
mov
arpl
mov
xor
xlat
pop
cmpsb
sarb
push
dec
xor
jl
and
mov
jecxz
push
loope
enter
sub
orb
loop
pop
and
cltd
outsl
dec
imul
test
and
hlt
push
jmp
les
xor
ljmp
pop
mov
test
shll
jle
xorb
scas
enter
shrl
daa
je
inc
in
mov
add
jmp
jno
push
clc
jno
jno
pop
repz
push
aam
cmp
bnd
cmp
lcall
xchg
xor
cmp
jmp
aas
out
inc
fadd
test
or
mov
enter
sub
es
add
lods
aad
mov
pop
mov
jl
push
jbe
dec
divb
insl
cmpsb
icebp
mov
or
lcall
dec
mov
jno
loop
mov
sub
jnp
test
push
push
out
addr16
hlt
call
adc
fildl
cmpsb
jecxz
jge
pop
dec
in
sbb
imul
dec
mov
aaa
and
iret
repz
rolb
sub
cli
add
and
cmp
repnz
cmp
xchg
mov
fimull
and
arpl
lods
mov
cmp
movsl
lret
xor
jae
mov
mov
mov
xchg
cmp
arpl
scas
xorb
cli
cmp
mov
jecxz
sti
js
adc
dec
hlt
mov
xchg
hlt
je
mov
cmp
in
cwtl
icebp
pop
jnp
out
and
ja
push
sbb
lret
inc
ds
and
mov
cmp
cmp
and
adc
sahf
cmp
xor
andb
jno
aas
adc
fiaddl
cs
pop
xchg
dec
inc
mov
mov
popa
lea
mov
jge
mov
rorb
mov
nop
loopne
mov
fnstenv
inc
jecxz
inc
rcrb
xchg
add
cmp
dec
fadds
pop
and
lret
xchg
cs
mov
mov
mov
lahf
xlat
xor
xor
ud2
or
and
dec
jge
stos
mov
sub
sub
add
rolb
in
int
cmpb
xchg
dec
push
test
inc
rcll
and
test
insl
xabort
mov
sarb
mov
sbb
sbb
in
sub
add
in
mov
add
xor
mov
mov
mov
add
lea
mov
push
jmp
pop
pop
sub
imul
push
pop
out
xor
lock
cmp
dec
in
rorl
incb
insb
jns
jne
push
mov
pop
pop
stos
imul
inc
repnz
sbb
cld
pop
sub
and
addr16
mov
ss
adc
lds
in
push
xor
stos
popa
sahf
inc
adc
pop
fs
inc
and
xlat
cld
dec
add
incb
adc
cld
adc
outsl
jns
push
nop
pop
gs
xchg
inc
scas
jg
lds
aad
shlb
stos
push
jbe
xchg
cmp
mov
fimuls
repz
frstor
scas
js
leave
push
xchg
aad
ljmp
fistl
mov
es
mov
call
hlt
mov
gs
stos
pop
and
or
dec
dec
inc
adc
jnp
sahf
stos
out
mov
add
dec
addr16
testl
fidivrs
daa
xchg
inc
push
mov
lods
sbb
mov
out
lahf
std
jecxz
xchg
call
pop
fwait
std
mov
jae
imul
imul
popf
inc
clc
adc
jg
and
fwait
in
dec
iret
test
dec
pusha
sarb
push
or
rolb
mov
punpckhdq
mov
push
adc
hlt
dec
int
insb
in
enter
ss
xchg
in
stos
dec
mov
jmp
stc
pusha
bound
inc
jle
jp
mov
mov
jg
xor
enter
xorb
mov
rol
lret
xchg
ret
rcr
loope
out
mov
xchg
jg
hlt
jae
icebp
or
cli
xchg
sbb
mov
arpl
inc
lcall
sbb
and
jne
adc
cmp
data16
adc
or
xlat
fcoms
cmpsb
popf
xchg
inc
pop
sbb
dec
xlat
fsubs
jg
and
in
push
test
cmp
sub
mov
std
xor
jo
int
pop
adcb
sub
mov
lds
je
mov
sti
lea
pushl
pushl
call
mov
mov
xor
add
cmp
jne
jmp
mov
jo
das
pushf
dec
je
mov
in
jle
cmp
cmpb
xchg
mov
insl
lods
out
les
mov
int3
rorl
leave
shrl
sbb
sbb
out
rcrl
mov
enter
cmp
and
push
lods
jmp
sbb
rcrb
and
xor
out
outsb
inc
sbb
pop
cmp
movsb
mov
fisttpll
push
fisubl
in
rcr
cwtl
mov
and
pop
xchg
in
xor
call
mov
call
ja
ja
or
cs
xchg
movsb
mov
mov
aad
pop
jmp
les
orb
clc
jbe
pop
cld
mov
sub
lret
xchg
imul
pop
mov
loope
sbb
inc
pop
lret
xchg
sub
shlb
scas
push
lret
data16
sti
sbb
leave
aam
ja
jne
mov
mov
push
mov
mov
pandn
pop
push
fstpl
call
xchg
add
mov
xor
cmpsb
cmp
mov
fxch
imul
lea
and
iret
cmc
xchg
fimull
pop
es
or
arpl
jl
jns
imul
aad
loopne
push
jnp
mov
in
lock
inc
je
outsb
pop
enter
or
popa
fidivrs
xchg
mov
add
std
ds
call
xchg
adc
sti
pop
stc
pop
fs
cltd
xor
hlt
mov
imul
in
daa
aas
mov
xor
and
aaa
sub
mov
jp
icebp
std
and
jl
lock
pop
jp
push
mov
inc
or
in
dec
testl
mov
adc
ss
push
aad
mov
jnp
xchg
push
test
jno
mov
aam
lock
jns
push
fidivl
movsl
js
fcmovb
mov
lods
imul
nop
repz
push
loope
inc
imul
xor
dec
lahf
iret
push
stc
mov
je
sbb
jl
sti
push
dec
xlat
jns
push
clc
fistpl
inc
cmp
jb
jmp
mov
xor
add
jmp
mov
jmp
test
popa
lahf
jno
inc
xor
into
in
jl
jle
cmp
in
jecxz
aas
jo
jmp
lret
int
and
popa
movhps
adc
push
mov
insl
cmp
jge
inc
imul
mov
jge
push
push
test
sub
test
or
stos
fs
popa
push
mov
ds
mov
js
outsl
and
lret
mov
or
insl
sub
mov
cmc
adc
jl
sbb
jns
iret
les
out
das
lcall
jmp
out
xor
jb
mov
mov
jmp
cmp
and
lods
fsubr
cmc
mov
pop
push
xor
test
cmpsl
sub
in
mov
pop
dec
jle
dec
push
pop
xor
or
push
mov
xchg
push
xchg
mov
adc
mov
mov
jnp
lret
jb
push
push
xor
ffreep
test
shlb
mov
xchg
negl
sub
adc
jmp
xor
andl
or
es
imul
jl
lret
cmp
nop
lods
lret
xchg
les
xor
cli
ljmp
into
xorl
ret
shl
sbb
daa
or
adc
movsl
mov
lret
insb
scas
addr16
adc
xchg
mov
decb
and
xor
insb
adc
dec
xchg
push
adc
aad
inc
push
push
mov
and
aad
sbb
into
sub
stos
xchg
inc
out
push
xchg
sbb
push
shll
lock
lcall
mov
sbb
in
loop
pushf
mov
data16
push
fldenv
call
mov
imul
push
inc
push
cmpsb
mov
push
mov
adc
rcrl
jb
jnp
cmp
push
inc
mov
jae
in
jg
adc
addr16
mov
adc
fmuls
mov
add
roll
mov
das
jecxz
fs
lcall
leave
daa
out
test
es
dec
lret
inc
jno
push
push
mov
shrl
adc
mov
js
dec
in
mov
mov
mov
mov
xor
add
cmp
jne
mov
jmp
into
mov
shlb
stos
mov
mov
sti
jle
cmp
movl
lret
movsl
sbb
decb
pop
push
sbb
cltd
push
sub
push
inc
fimuls
adc
out
adc
jmp
leave
icebp
lret
clc
fildll
out
or
sbb
lcall
add
xchg
lahf
ret
cmp
adc
stos
loope
jb
loopne,pn
aad
mov
in
cld
push
loop
and
sar
je
fs
fldenv
cltd
loope
lds
cmpsl
sti
or
jp
bound
cld
test
sarb
int3
int
pop
fwait
jbe
iret
out
push
jecxz
setb
mov
mov
or
xchg
stos
mov
aam
or
icebp
fnstenv
mov
daa
push
mov
arpl
dec
cmp
sbb
push
dec
mov
scas
inc
sub
mov
ljmp
mov
xor
test
ss
sub
in
cmc
dec
inc
movsb
call
pop
ss
test
sub
xchg
and
shlb
jb
xor
je
dec
js
push
cmp
popf
pop
add
xor
dec
jo
dec
and
mov
call
push
scas
ljmp
cs
and
or
mov
lret
into
jmp
or
data16
lods
xchg
fisttps
xor
sbb
iret
ficoml
and
push
mov
jnp
data16
cmp
mov
xor
mov
movsl
xor
sub
arpl
stos
insl
pop
inc
in
jp
add
mov
pop
hlt
shlb
pusha
dec
push
jne
pop
mov
push
sbb
mov
fnsave
mov
es
inc
jp
lret
pop
aaa
mov
enter
push
xchg
xchg
inc
stos
int
mov
sub
out
lahf
loope
xor
mov
in
fimull
mov
lcall
sub
gs
or
call
jge
mov
sbb
pop
je,pn
mov
xchg
pop
dec
push
pop
push
out
in
test
push
jbe
insb
xor
jmp
mov
add
mov
mov
test
je
mov
push
pop
push
dec
pop
xchg
sub
jmp
pop
jbe
push
scas
or
roll
jl
jle
inc
jecxz
adc
jbe
in
mov
mov
pop
ret
adc
int
mov
bound
push
ret
xor
icebp
xor
jno
xorl
inc
xor
pop
lods
shll
outsb
lods
lock
sbb
pop
je
sarb
jp
and
push
imul
repnz
xor
loope
dec
imul
pcmpgtb
pushf
fucom
nop
and
cmc
ja
xor
insl
jmp
sbb
cltd
jle
loope
jp
sbb
adc
mov
mov
inc
jns
mov
cwtl
or
adc
call
lcall
shrb
test
jne
aam
repz
nop
rep
pop
outsb
leave
push
mov
mov
and
sbb
scas
data16
xchg
push
add
imul
sub
clc
dec
or
push
ret
sti
mov
jnp
mulb
pop
push
incl
mov
dec
adc
sbb
mov
sti
not
xor
imul
xchg
pop
pop
push
sahf
sbb
sti
sar
je
jl
mov
jno
std
mov
hlt
lret
fwait
enter
cmp
push
aas
or
cmp
adc
std
push
mov
jnp
inc
and
sub
mov
or
mov
xchg
push
adc
adc
rcrl
lea
cld
inc
lock
das
mov
pop
out
insl
push
mov
mov
jne
adc
stos
enter
add
mov
sub
pusha
aam
mov
sub
mov
adc
pop
mov
jmp
pop
push
or
shll
push
dec
dec
inc
aas
cli
jo
aaa
jbe
sbb
cmp
xchg
loope
adcb
cmp
xor
push
rclb
rorb
sahf
sub
stos
pop
call
jb
xchg
aam
loopne
enter
lret
cli
inc
loope
lods
and
mov
cmc
xchg
dec
mov
imul
sub
mov
jmp
dec
loop
lds
push
jo
mov
sub
mov
jle
cmp
mov
movl
fisubs
nop
ds
fbld
bound
bound
movsb
cmpsl
popf
imul
jmp
ficomps
dec
xchg
clc
dec
adc
inc
loopne
mov
repz
rcrb
nop
xor
and
movb
xchg
or
mov
push
fcompl
in
loop
leave
dec
ret
dec
shrl
jbe
xor
jp
flds
cld
and
or
pop
push
out
hlt
movsl
xchg
xchg
cmp
ja
cmp
push
xor
mov
mov
cmpsl
rclb
xor
mov
orl
leave
stos
dec
loopne
scas
xchg
lahf
clc
bound
jge
push
movsb
jb
int
cwtl
test
test
adc
aas
popf
dec
cmp
and
imul
in
cmp
aas
shll
shll
rcrl
int3
or
mov
mov
daa
loop
dec
sub
adc
jbe
loope
xor
mov
cmp
or
fcomip
shrb
hlt
movsb
jbe
lock
shlb
into
mov
pusha
out
aam
pop
cmp
fildll
push
inc
and
adc
adc
mov
pusha
aaa
mov
push
mov
dec
ret
jle
sbb
or
adc
in
mov
aad
aad
xor
aas
adc
mov
imul
or
sbb
inc
popa
lcall
shr
scas
in
fiadds
lock
inc
sub
dec
jmp
push
xchg
mov
in
in
pop
sbb
setbe
pop
mov
aas
push
outsb
enter
ret
insb
bound
and
dec
mov
jb
pop
adc
xchg
aad
scas
dec
scas
bound
rclb
mov
ljmp
cmpsb
adcb
dec
lret
and
add
dec
lret
in
cwtl
xor
inc
mov
mov
xor
mov
add
mov
mov
xor
add
mov
imul
mov
xor
mov
lea
cmp
je
mov
mov
mov
mov
mov
xor
xor
jmp
dec
scas
push
pop
cmc
arpl
pop
clc
push
shll
movsb
mov
cmp
pop
rcl
scas
mov
sbb
aaa
xor
mov
or
mov
inc
in
lods
and
lds
repz
push
aad
insl
cmp
fcoms
sub
xchg
rcrl
leave
mov
mov
clc
xor
jne
notb
shll
jno
pop
int3
lahf
mov
push
out
push
xchg
cmc
es
repz
cld
mov
pusha
pusha
jmp
xchg
fs
cmc
push
sbb
ds
xchg
mov
or
push
push
push
jecxz
fnstenv
orb
jnp
jno
sub
fs
imul
sbb
loope
pop
call
imul
aam
lock
or
movsb
inc
mov
and
icebp
jle
adc
adcb
dec
mov
shlb
mov
rorb
mov
in
and
inc
xor
inc
mov
ret
inc
or
aaa
mov
js
dec
shlb
sub
clc
hlt
pmuludq
mov
adc
hlt
mov
mov
xchg
idivl
pop
ljmp
add
xor
aaa
mov
cltd
inc
adc
mov
pop
pop
sti
fisttpl
sbb
jecxz
movsl
inc
push
sub
fldl
xchg
fidivrl
mov
out
inc
out
cmp
jg
outsl
rcr
popa
sub
aaa
into
dec
mov
sbb
imul
stc
cli
subb
mov
sbb
jmp
iret
push
mov
mov
lods
pop
xchg
sbb
sub
in
lcall
xchg
push
inc
dec
test
pop
test
cld
fistl
mov
aaa
xchg
adc
xchg
push
pop
out
inc
push
push
fs
pop
sub
repz
icebp
cmpsb
out
arpl
and
add
push
sti
in
sahf
aas
jmp
fiaddl
cmp
push
dec
decl
out
fisubrs
jae
cmpsb
inc
sti
pop
cli
cmpsb
inc
mov
bound
and
cmp
out
loop
cltd
je
dec
rcrb
js
aam
sbb
xchg
sbb
addr16
inc
jecxz
pop
jmp
test
fwait
jb
add
div
mov
xor
lea
mov
mov
mov
mov
mov
xor
lea
mov
mov
jmp
leave
adc
cmp
xor
or
cmpb
jl
jle
jb
iret
fwait
inc
sub
dec
loopne
cmc
push
sub
and
sar
push
cmc
mov
aad
sub
mov
and
out
ds
mov
push
out
nop
jmp
push
lock
sbb
cmp
mov
cmp
dec
push
ss
push
mov
mov
lret
std
cmpsl
jbe
add
add
rol
cmc
jmp
andl
mov
mov
pop
aad
mov
push
mov
dec
cltd
movsb
jg
jno
icebp
push
mov
ja
cmpb
imul
push
hlt
cmp
cmp
shl
loop
mov
scas
push
push
adc
rclb
ja
inc
sbb
dec
pop
imul
cmp
xchg
sub
js
divb
mov
mov
jge,pt
push
out
pop
jg
das
adc
add
enter
lahf
pop
inc
ret
cwtl
mov
jbe
enter
sti
std
push
add
and
jb
enter
rolb
cwtl
pusha
cmpsl
inc
push
js
jb
mov
adc
leave
sub
xchg
aas
dec
aam
in
cmpsb
pop
mov
popf
rcr
cmp
mov
cltd
addr16
dec
loopne
into
iret
mov
pushf
sarb
out
or
cmpsl
in
mov
js
test
addr16
fbstp
pop
xchg
cmp
mov
testl
sbb
stos
pop
add
dec
inc
and
mov
pop
sbb
js
mov
ss
int3
pop
clc
inc
lea
imul
pop
or
jbe
xor
clc
stos
mov
pop
xchg
ja
xor
cmp
insl
sbb
push
push
ljmp
mov
rcrl
rorb
xchg
icebp
adc
fildl
mov
popa
mov
fdivl
test
inc
stc
enter
insl
mov
cmp
mov
out
mov
divl
icebp
mov
cwtl
mov
sub
adc
ds
cld
mov
ret
xlat
stos
jecxz
aam
lds
and
ficoms
push
adc
shr
add
add
mov
cwtl
mov
mov
cmp
je
cwtl
mov
cmp
jnp
fisttpl
imul
insb
add
ljmp
mov
outsb
xchg
push
and
xchg
push
sub
loop
scas
movsb
lret
enter
inc
into
mov
push
jb
xchg
cli
scas
mov
and
es
pushf
pop
adc
fbstp
in
inc
nop
dec
and
imul
outsb
inc
out
cmp
or
das
outsl
call
pop
xor
adc
push
push
inc
pop
or
out
sbb
xchg
call
jg
icebp
or
pop
roll
dec
xor
cmp
stos
or
scas
into
jg
rorl
mov
pop
cmp
test
adc
fmuls
jae
mov
add
aas
jbe
popa
data16
inc
xchg
cmp
imul
pop
cli
mov
outsl
jmp
inc
mov
jb
rorl
dec
inc
cmp
push
aam
lods
out
out
icebp
or
or
cmp
roll
arpl
xchg
sbb
movsl
push
mov
mov
mov
ficoml
push
dec
adc
lahf
mov
mov
mov
pop
xor
test
jecxz
pop
pop
js
jl
jae
fs
adc
jge
xor
outsl
pop
sub
push
xor
push
leave
pop
pop
cli
stos
mul
sti
sbb
out
hlt
push
dec
hlt
dec
out
inc
arpl
movsl
popa
ljmp
imul
push
cli
mov
inc
mov
aas
sar
lgs
ret
dec
lods
cmp
mov
inc
leave
adc
mov
int
adc
lods
jne
stc
negl
sub
cmp
xchg
push
sar
mov
xor
sti
jl
or
inc
add
gs
loope
insb
daa
adc
adc
pop
inc
or
adc
add
inc
push
xchg
cmp
mov
mov
sbb
and
xchg
xlat
mov
add
stc
es
cld
pusha
push
pop
pop
sbb
push
sub
imul
mov
xor
mov
lea
cmp
jne
mov
jmp
mov
mov
xor
add
mov
xor
lea
add
call
xor
inc
cmp
je
xchg
push
pop
push
pop
inc
xchg
jmp
imul
push
int3
xor
test
jle
cmp
jmp
sub
mov
bound
call
sub
lret
lahf
inc
add
jae
sahf
jbe
in
pop
sbb
adc
push
sub
mov
sbb
lea
xor
nop
add
add
pushf
mov
xchg
sbb
mov
mov
mov
dec
aad
rcrb
loop
mov
pop
lret
fdivrl
ret
or
in
dec
or
aad
jecxz
data16
aaa
sbb
or
dec
and
pushf
lock
lahf
ss
test
ja
mov
sub
inc
fcoms
mov
jg
fs
mov
and
pop
dec
stc
loop
cmc
stos
inc
mov
test
es
jb
bound
mov
pop
mov
mull
pop
pop
icebp
aaa
leave
cld
push
xor
das
cli
addr16
iret
int3
sub
imull
sbb
mov
ljmp
mov
add
push
std
orb
xchg
out
imul
cmp
and
adc
loope
das
mulb
inc
mov
lea
xor
scas
xor
push
pop
clc
mov
and
in
dec
adcb
and
lds
insb
cmp
mov
inc
out
subb
mov
inc
or
dec
sbb
xor
inc
add
ds
outsb
jecxz
sub
sub
fildll
jecxz
sub
arpl
ret
bound
xchg
or
sbb
pop
add
sub
in
pop
add
cmpl
out
inc
dec
mov
xchg
sbb
xchg
data16
insl
push
cmp
mov
adc
mov
mov
or
xchg
jmp
cmpsl
leave
push
push
add
inc
shrl
call
xor
and
or
mov
mov
cmp
add
shll
flds
add
push
std
dec
sahf
push
push
add
paddw
cvttps2pi
jle
shlb
mov
xchg
and
dec
repz
inc
inc
rorl
pop
xchg
push
add
aad
jns
fadds
sbbl
fdivl
jnp
int3
fnstsw
cmp
sbb
sub
fcomi
in
add
or
pop
cs
test
jne
cs
dec
xorl
in
gs
jecxz
frstor
mov
in
insb
jo
stos
push
xchg
push
mov
fs
xchg
loope
ret
add
lret
push
mov
cli
jg
into
push
push
xchg
cli
pop
mov
cmovp
fwait
push
jns
lahf
pop
out
outsl
fiadds
lock
mov
mov
pop
jbe
jns
daa
inc
jmp
stos
rorb
insw
push
lcall
or
mov
cmpb
into
mov
cmc
jp
mov
rcrb
popf
test
inc
repz
jge
xor
jle
ret
push
dec
fnsave
cmpsl
xor
out
xchg
cmp
adc
sub
sbb
add
dec
out
xor
aad
es
jmp
mov
pop
add
das
xchg
out
pop
imul
mov
jnp
or
pop
gs
and
stc
enter
or
roll
cmpsb
mov
sbb
push
movsb
mov
lret
ficompl
xchg
stos
mov
push
mov
pop
jmp
lock
pop
jb
xor
xor
stos
mov
sahf
enter
add
bound
pusha
jl
out
fdivr
pop
xorb
or
rclb
popa
in
jmp
stos
adc
inc
outsb
xor
lea
jnp
subb
jbe
jbe
xchg
pcmpeqb
jo
jbe
xchg
xor
loope
mov
popf
in
rcrb
es
jle
loope
mov
dec
add
jae
mov
mov
and
jge
idivb
dec
push
repnz
out
hlt
inc
insl
pop
xor
shl
cmp
cmp
aad
push
mov
imul
add
xchg
jmp
sahf
testb
push
repz
jae
ficoms
lds
icebp
testb
jle
inc
cmc
dec
mov
sbb
insl
push
das
push
sbb
sub
scas
repz
flds
shrb
adc
psubusb
jecxz
pop
push
repz
mov
cmp
or
lods
fwait
adc
push
cltd
pop
movsb
adc
pop
lds
sahf
cli
sbb
data16
fcoms
pushf
add
push
shlb
cwtl
repnz
mov
cld
inc
pop
inc
cwtl
mov
jbe
xchg
xor
movsb
bound
jg
insl
sahf
ss
gs
add
sub
sub
sahf
lret
lret
push
push
enter
mov
repnz
out
stos
ljmp
push
xchg
jle
sub
je
sbbb
out
jne
test
pop
mov
popf
inc
loop
hlt
ja
push
sbb
mov
sbb
push
adc
pop
repnz
sub
mov
in
pop
imul
xchg
jmp
lret
add
inc
repnz
in
int
sti
mov
mov
inc
and
sbbl
xlat
pop
jmp
test
aam
cmp
mov
add
sbb
adc
cwtl
stos
test
jne
ret
fnstenv
fistpll
push
das
sti
pusha
or
mov
iret
fstl
cmp
and
call
xchg
std
stc
xor
jb
out
out
movsb
adc
xchg
sub
xchg
lret
faddl
jnp
push
les
mov
fisttpll
mov
mov
xor
sti
sub
sbb
fstpl
ficoms
fistpll
mov
in
bound
jb
xchg
inc
insb
mov
cmpsb
pop
mov
lea
into
leave
pop
jno
jecxz
aaa
jo
xchg
jmp
shll
or
out
jp
stos
subb
cli
fbstp
mov
mov
sub
ret
bound
testb
loope
push
dec
and
dec
cmp
lock
repz
mov
std
clc
aam
lret
popa
add
add
dec
jmp
fwait
push
mov
mov
mov
pop
fwait
outsl
mov
mov
jle
cmp
arpl
push
sbb
mov
xchg
pop
aam
mov
push
dec
out
sub
xor
xadd
out
movsb
cmp
imulb
xchg
or
jne
inc
xchg
jecxz
sub
dec
sti
fnsave
addb
pop
xchg
les
and
pop
dec
push
or
add
and
sbb
movsb
sti
xorb
xchg
add
hlt
cld
mov
jecxz
aad
stos
or
loope
js
outsb
mov
xchg
je
scas
js
dec
addr16
mov
cmp
stc
push
pushf
out
jns
pushf
cmp
das
outsb
popf
enter
outsb
cmp
pop
sub
jbe
mov
call
xchg
xlat
and
inc
stos
mov
js
mov
xchg
push
xchg
sub
hlt
add
sbb
andb
test
rol
popa
fisubrs
int
mov
mov
add
insb
dec
test
ss
stc
cmp
arpl
fisubl
inc
mov
dec
cli
mov
mov
enter
rcrb
sub
jae
cmpsb
mov
fldcw
inc
mov
stc
adc
aam
push
inc
std
xor
dec
in
adc
xor
and
cmp
jbe
lcall
lock
sti
imull
push
in
sub
pop
mov
fsubrl
mov
or
pop
mov
jmp
inc
mov
ds
lret
flds
or
leave
xchg
imulb
jns
bound
push
loope
sbb
test
inc
into
sbb
inc
jnp
aaa
cld
adc
loope
aas
and
xchg
push
shll
sub
pushf
mov
movsb
jg
xchg
mov
inc
cs
and
xchg
push
not
lods
daa
cwtl
pop
or
in
mov
lcall
shlb
push
lock
popa
add
inc
leave
or
sbb
dec
pushf
or
or
int3
inc
cli
pop
es
jb
sub
push
sbb
ja
or
gs
sarl
adc
dec
sbb
xchg
jb
dec
add
orl
adcl
sbb
jo
add
dec
xor
add
pop
mov
pop
pop
pop
leave
ret
push
mov
push
not
push
mov
mov
movl
mov
push
movl
mov
movl
mov
push
not
mov
notl
mov
movl
cmp
movl
je
mov
mov
subl
xor
add
movl
cmp
movl
je
andl
mov
inc
mov
cmpl
jne
pushl
call
cmpl
jb
andl
xor
add
inc
mov
cmpl
jne
push
call
cmpl
jb
movzbl
add
mov
mov
xor
add
push
pushl
pushl
mov
call
mov
mov
jmp
mov
jo
adc
adcl
jl,pt
jle
xor
add
and
call
pop
jg
jl
scas
sbb
popa
mov
movsl
push
aad
jl
mov
xor
dec
lcall
jge
mov
cmp
fmuls
mov
fmull
dec
xchg
sti
xchg
jge
pop
mov
movsl
dec
lds
cltd
pop
push
or
test
sub
pop
shlb
nop
subb
add
or
decb
in
lahf
xor
and
cli
mov
int
cmp
push
inc
mov
push
insl
add
or
aad
adc
insb
scas
cmpsl
xchg
push
and
sbb
aas
in
fldcw
ss
push
push
jnp
inc
xchg
mov
pop
lds
cmc
xchg
dec
xchg
scas
fs
pop
jg
jmp
cmpsb
test
sub
outsl
mov
movsl
call
shll
into
xor
jo
lods
add
xchg
mov
lea
jo
jg
ret
cs
movsl
faddp
lock
or
call
mov
out
fs
mov
push
popl
or
mov
call
inc
mov
xchg
jne
pushf
fwait
popa
mov
mov
adc
jmp
mov
mov
cltd
mov
lahf
aaa
mov
or
into
mov
adc
popa
jb
push
dec
sbb
test
push
dec
loop
lods
pop
shll
mov
inc
cli
ret
jno
test
dec
push
or
nop
sti
lahf
sahf
mov
icebp
fbld
add
lcall
push
int
cmp
fcmovb
mov
jnp
add
adc
adc
sbb
xor
pop
and
mov
xchg
add
mov
lret
adc
nop
aas
mov
pop
in
repnz
fwait
dec
lahf
jg
shll
xchg
mov
add
mov
push
lahf
daa
push
fs
cmp
mov
mov
jmp
mov
mov
xor
add
jmp
orl
imul
mov
cmpb
jle
jl,pt
jle
add
jecxz
out
test
add
add
jl
jae
andl
jle
pop
repz
mov
dec
mov
mov
shlb
mov
cmpb
xchg
sub
push
and
sbb
js
sub
out
sub
jmp
ds
nop
int
sbb
andl
js
cmp
xchg
test
pop
mov
adc
out
stos
mov
mov
sub
xor
pop
xor
test
mov
mov
scas
dec
inc
push
adc
rorl
repnz
cld
nop
lcall
sbbb
rclb
sbb
push
mov
filds
jle
dec
pusha
testb
enter
dec
inc
ret
xor
dec
fsubl
jne
adc
jnp
aaa
test
jne
or
mov
adc
filds
cmp
imul
sbb
mov
pop
cld
aaa
inc
shrb
dec
rcrl
outsb
cwtl
hlt
leave
fistps
cmp
add
push
push
sar
pop
stc
ret
pop
cmp
mov
jbe
lods
dec
lea
insl
sbb
xchg
aad
fimuls
andl
cmp
sti
ja
fisttpll
push
push
test
imul
mov
fwait
cmp
incl
ss
int3
loop
push
cmc
sub
inc
je
jl
cli
inc
sub
jl
mov
fdivs
mov
out
pop
popa
jl
push
incl
xor
rorb
sarl
adc
mov
or
imul
mov
mov
add
pop
mov
adc
fnstcw
mov
pop
dec
mov
inc
cmp
inc
shl
test
iret
and
and
inc
out
xor
sti
sbb
and
ljmp
shlb
popf
pop
xor
or
dec
dec
cmp
sub
lret
sbb
bound
rorl
dec
popa
or
dec
fists
xchg
aad
rorl
addb
add
jmp
mov
loopne
adcl
sahf
jle
jl,pt
jle
sbb
mov
popa
loope
pop
jns
jecxz
push
out
mov
mov
mov
mov
sbb
cmpsl
sbb
push
pop
mov
or
dec
enter
fwait
stos
std
rclb
adc
mov
add
and
pop
mov
xor
ljmp
bound
jmp
jns
mov
stos
mov
outsl
movsl
in
aad
cmc
insl
imul
add
sbb
in
shrb
pcmpeqd
mov
xchg
fucom
clc
pop
xchg
pop
dec
iret
es
ja
movsb
push
adc
add
xor
aam
pop
pop
push
loope
xchg
stc
and
dec
out
mov
ficomps
adc
mov
push
sbb
or
add
pop
and
jmp
in
mov
sub
mov
adc
mov
jecxz
dec
ret
shll
aad
lds
push
stc
sti
mov
ja
daa
dec
sbb
fdivs
fsubp
mov
adc
cmp
stos
popa
int3
pop
xor
mov
out
cmp
in
mov
sub
jno
adc
imul
hlt
push
sarb
push
mov
pusha
xchg
mov
loop
dec
fldcw
dec
pop
inc
addr16
push
jns
loope
cli
test
jl
cmc
ljmp
shrb
leave
or
movsb
pop
fnstsw
and
addr16
std
sub
inc
hlt
push
pop
ss
xchg
outsb
or
stos
jne
sub
call
dec
ljmp
jl
or
mov
test
pop
adc
add
test
add
xchg
add
cmp
movsl
push
sbb
push
sub
dec
adc
in
inc
push
mov
xrelease
sbb
xor
testb
push
lds
push
mov
cmpsl
cmp
and
int
adc
repnz
pop
mov
cld
rcr
sub
mov
mov
xor
add
mov
pushl
pushl
call
mov
xor
pop
add
pop
leave
ret
push
mov
sub
andl
mov
inc
mov
cmpl
jne
pushl
pushl
call
cmpl
jb
xorl
jmp
push
inc
jb
jb
icebp
fisubrs
into
mull
sub
mov
jg
jle
out
cs
loop
pop
daa
mov
dec
lods
imul
xor
cwtl
jnp
sahf
arpl
and
je
xor
sub
ds
nop
das
push
lahf
push
add
pop
dec
inc
pusha
ja
nop
sub
dec
jmp
and
cmc
push
pop
outsl
xorl
das
sub
xor
cmp
jne
jb
mov
push
pop
repnz
push
jmp
leave
push
sbbb
dec
inc
and
dec
imul
xor
adc
imul
push
inc
xchg
mov
dec
inc
repnz
std
cmp
leave
daa
mov
sbb
gs
jl
cmpsb
inc
jl
dec
mov
call
push
mov
mov
mov
into
fsub
and
push
and
sbb
jle
pushf
mov
sub
cmp
test
test
fsubs
dec
jp
sti
in
aad
ljmp
lods
xor
mov
and
mov
divl
inc
jl
inc
or
add
subl
push
or
mov
jmp
cmp
shll
xor
stos
jae
sbbb
jle
adc
jle
jns
xor
jl
out
test
xchg
nop
cmp
fstpl
fiadds
jg
lds
or
scas
inc
shll
fs
in
cltd
xlat
das
push
pop
aaa
repz
dec
pushf
jno
lret
dec
call
dec
out
mov
and
and
insl
or
jno
icebp
and
pushl
outsb
loop
sub
repz
sbb
and
out
or
adc
mov
lahf
into
in
add
push
sbb
sbb
push
push
iret
jge
lods
sub
add
imul
or
and
jbe
jmp
dec
jmp
imul
mov
adc
sbb
and
jmp
mov
data16
xchg
xchg
sbb
in
sbb
in
push
push
xchg
adc
fimull
popa
inc
jecxz
jno
hlt
ja
mov
and
add
lods
icebp
fs
push
aam
icebp
bound
adc
mov
ljmp
xor
adcl
mov
xorl
add
push
jmp
pop
jecxz
call
and
out
lret
bound
jle
jg
jle
roll
jns
sub
mov
stc
pop
dec
insb
stos
cmpsl
out
imul
add
or
jo
nop
or
inc
xor
push
js
into
test
mov
or
out
aad
adc
pop
mov
mov
int3
popl
jo
int
sbb
mov
jge
dec
enter
xor
arpl
jge
xchg
dec
dec
int3
mov
push
dec
or
and
jbe
sub
jp
pop
xchg
faddl
je
mov
js
int
flds
aas
daa
pop
or
lock
push
sub
sub
jg
aam
mov
mov
mov
cld
mov
fcomps
out
xchg
add
push
in
mov
sbb
mov
push
dec
cmpb
push
mov
aaa
mov
jle
rol
pusha
pop
xor
aaa
sbb
mov
fs
lds
or
adc
mov
xor
xlat
stos
sarl
mov
mov
incl
xor
addl
movl
movl
decl
add
movl
jmp
cmp
jne
movzbl
mov
mov
movl
mov
movl
mov
movl
mov
movl
mov
movl
jmp
movl
cmp
movl
jne
xorl
andl
mov
addl
sub
xorl
push
sbbl
mov
movl
add
push
call
movl
incl
cmpl
movl
jb
movl
jmp
movl
cmp
movl
jne
movzbl
and
movl
addl
mov
mov
mov
mov
and
jmp
test
test
mov
jo
stc
ret
cs
jle
adc
jle
mov
test
imul
scas
jmp
push
and
add
and
push
add
add
rcr
mov
sub
outsb
lock
xorl
mov
imul
cld
jl
pop
aas
mov
adc
dec
jp
cli
in
mov
addl
mov
xchg
aam
push
push
pop
xchg
and
ja
add
aad
les
daa
jecxz
shll
add
sti
mov
xchg
adc
in
testb
dec
push
into
fisttpl
int
or
lret
pushfw
jge
pop
xchg
leave
stos
mov
sti
dec
push
jno
insb
jp
roll
icebp
mov
add
mov
jae
int3
lahf
cmpb
cwtl
pop
and
lahf
mov
and
out
push
xor
adc
test
pop
mov
cmpsl
test
xchg
subb
loopne
je
mov
orl
xor
add
sbbl
mov
lea
mov
mov
xor
add
mov
lea
push
mov
xor
add
push
mov
push
pushl
call
jmp
cmp
jne
mov
xor
add
mov
jmp
shlb
sub
cmpsb
stc
shrl
cltd
jle
adc
jle
jge
lea
nop
push
out
xor
push
movsl
in
push
xor
bound
jmp
rorb
out
nop
call
or
sub
inc
les
popf
sbb
gs
and
xor
imul
dec
leave
aas
sub
popl
test
rorl
add
cmpsb
push
enter
leave
jmp
outsl
lret
mov
test
jge
and
rolb
jae
stc
jno
mov
adc
lahf
stc
mov
ss
inc
lcall
mov
inc
pushf
outsl
jg
in
cmp
push
scas
dec
in
rcrl
test
into
imul
dec
ret
orl
imul
shlb
ds
push
stos
int3
js
test
fistpl
aad
cld
jl
fstps
or
jnp
xchg
push
clc
test
iret
cmc
mov
scas
push
xchg
sbb
stos
sub
mull
movsl
arpl
xor
inc
add
in
jmp
jb
lods
ljmp
mov
into
cmpsb
jle
adc
jle
adcb
rolb
loope
sbb
mov
cmc
in
push
shlb
jl
add
ror
mov
outsb
inc
jmp
sub
shll
push
inc
mov
stc
nop
ret
xchg
jb
sbb
inc
bswap
lods
addb
movsb
cli
mov
push
shlb
or
inc
and
movsb
lods
xor
notl
adc
and
cmp
data16
dec
lea
mov
dec
sub
dec
push
xchg
les
lock
dec
jo
test
push
inc
push
insb
andl
push
push
push
or
and
or
cli
popa
cmp
jb
cmp
add
rorl
aaa
mov
fisubl
or
lods
or
out
outsb
data16
lret
icebp
cmp
cmpsb
dec
push
daa
pop
add
ret
mov
cs
dec
xchg
sub
push
inc
mov
popa
mov
lret
mov
mov
je
lods
push
in
insl
jge
push
into
ss
sarb
inc
cld
mov
push
pop
sub
add
mov
mov
xor
lea
cmp
jmp
xor
xchg
das
push
jne
loope
jecxz
loope
fld
loop
jle
adc
jle
cli
pop
sub
jl
inc
cltd
icebp
xor
pop
adc
popa
out
inc
sbb
das
dec
test
sbb
dec
stos
cs
pop
xchg
xor
shrl
shl
xchg
sbb
jg
push
fidivs
loop
gs
mov
add
lret
xchg
adc
idivl
pop
and
hlt
pop
cld
xlat
sarl
mov
lods
jg
and
outsl
lret
sub
inc
push
pop
sahf
jns
inc
imulb
adcl
mov
xor
sbb
push
mov
cmp
scas
pop
fld
xchg
push
movd
sub
das
sbb
mov
adc
mov
mov
xor
cmp
imul
aas
enter
fisttpl
movsl
mov
mov
lods
xor
nop
aam
movsl
jo,pt
xor
inc
cmp
call
ds
leave
or
pusha
pop
sbb
add
mov
pop
mov
pop
test
shl
addr16
mov
aas
mov
repz
mov
pop
xor
pop
jmp
movsl
sbb
loope
icebp
mov
jns
add
xchg
jle
jb
mov
add
repz
je
ret
jecxz
push
sbb
mov
mov
adc
ret
push
sub
inc
ds
imul
adc
inc
jae
xchg
pop
mov
push
ljmp
into
mov
filds
in
sbb
into
icebp
int
fidivl
cltd
add
mov
sbb
cli
roll
add
pop
dec
sub
repz
mov
fcompl
add
mov
call
aaa
jo
mov
enter
pop
adc
ret
por
dec
pushf
jecxz
push
addr16
testl
jo
iret
addl
decl
jae
xor
pop
into
adc
pushf
pop
arpl
pop
scas
shlb
aaa
repz
rorb
or
sbb
xor
divl
dec
out
sub
adc
rorl
inc
fwait
mov
jbe
sahf
div
lods
mov
cmp
call
push
dec
pusha
add
pop
leave
ret
push
mov
push
movl
cmpl
je
cmpl
jne
push
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
movl
cmpl
je
cmpl
jne
pushl
pushl
push
call
mov
dec
mov
jmp
movl
push
movl
sbb
movl
mov
push
add
mov
adc
mov
jmp
imul
mov
jecxz
sbb
xor
lcall
jle
movsl
sub
inc
test
jb
sar
dec
cwtl
push
out
sub
mov
sbb
cmpsl
inc
leave
push
sbb
popf
cmp
add
icebp
jo
xlat
in
fwait
add
fimull
ret
pop
xlat
push
scas
jmp
mov
arpl
lea
aaa
pushf
add
and
push
mov
test
or
and
outsl
repnz
or
les
sbb
movsl
and
sbb
movb
iret
cmp
push
xchg
mov
fwait
pop
adc
mov
inc
ret
and
cli
and
jne
adc
repz
scas
push
adc
xchg
pop
lods
out
jp
aam
mov
imul
imul
sbb
testb
jle
xor
mov
fisubl
ds
or
stc
cmc
sbb
fs
pop
push
int
aaa
outsl
mov
cmp
push
lret
les
adc
jbe
and
mov
jnp
push
gs
and
sarb
jnp
popf
jnp
test
repz
mov
loopnew
inc
sbb
sbb
aas
mov
cltd
xlat
mov
orl
subl
rol
je
dec
mov
repz
cmp
and
mov
pushf
ss
mov
adc
movsb
mov
add
loope
cmp
mov
pop
dec
xor
xchg
add
sub
xor
out
scas
adc
dec
loop
loop
sbb
push
lea
mov
loop
and
cmpb
cmpsl
cmp
loop
outsb
ret
push
and
add
mov
inc
icebp
loopne
jmp
sbb
or
xor
movl
cmpl
je
cmpl
jne
pushl
pushl
push
push
push
call
mov
dec
mov
jmp
mov
add
add
imul
mov
cmp
jne
mov
mov
xor
xor
add
add
imul
jmp
mov
mov
mov
mov
mov
xor
xor
add
add
imul
mov
cmp
mov
je
xor
add
mov
imul
add
mov
jmp
mov
push
jno
mov
ja
sbb
lock
jle
in
mov
adc
jecxz
xorb
jnp
imul
xlat
sti
aas
mov
adc
sub
cmpsl
push
ja
psubq
mov
pop
imul
cmp
dec
inc
aad
cltd
pop
push
divb
xchg
xor
dec
jae
and
sub
add
pop
nop
ficoms
testl
gs
jb
stos
je
push
jmp
mov
and
inc
cmp
dec
mov
push
aaa
xor
popa
push
jne
loope
sub
mov
andl
pop
js
fnstenv
ret
xchg
aad
push
sbbb
cltd
dec
xor
lds
cmp
mov
loopne
xlat
mov
lret
xchg
lock
imul
mov
and
mov
out
iret
adc
loopne
adc
adc
dec
cmp
repnz
push
pop
mov
xchg
adc
mov
addr16
push
insb
movsb
fsubrl
jne
xchg
inc
and
popf
pop
sarl
iret
sub
push
xor
pushf
aam
and
jbe
xor
popf
pop
add
push
fstpl
loopne
xchg
jo
dec
test
arpl
jne
stos
xlat
sbb
pop
sahf
xchg
push
sub
and
xor
cmpsb
inc
rcll
cmc
call
repz
leave
mov
push
or
add
xchg
xchg
cli
sar
cmpsb
sub
adc
fadd
sub
xor
int3
in
add
xchg
loop
adc
aam
cwtl
cmp
adc
js
inc
inc
outsb
or
aam
xchg
adc
loop
mov
outsb
sub
pop
jae
sub
sbb
ret
push
mov
push
push
incl
jmp
inc
iret
scas
mov
jno
sub
xor
mov
jle
sub
adc
jb
sub
xchg
mov
mov
mov
bound
stos
or
movsb
outsb
int3
imul
and
mov
fimull
inc
fwait
lds
jl
adc
dec
push
and
mov
mov
xor
add
push
lock
adc
scas
pop
sub
insl
cmp
ljmp
ja
push
rorb
insb
int
jb
ret
xor
outsb
std
sub
push
xor
iret
cs
cs
cmp
jmp
cmp
adc
and
jp
xlat
push
adc
or
mov
sti
inc
sub
hlt
out
ja
clc
lods
mov
cmp
or
cmp
aaa
and
clc
or
in
or
dec
sub
mov
ja
ret
nop
and
mov
arpl
fimuls
add
ret
xor
roll
dec
nop
mov
aam
xchg
arpl
cwtl
cmp
cwtl
test
jecxz
and
in
aaa
jg
mov
pop
lahf
cmpsl
insl
inc
mov
push
enter
setl
aam
adc
or
jl
sbb
add
sbb
cmp
jmp
mov
xchg
jge
inc
xor
xchg
cmp
mov
sarb
fst
fistl
lds
popa
dec
add
subb
mov
shl
xchg
pushf
aad
mov
lea
mov
fstp
mov
pop
aaa
rcr
sahf
push
sub
dec
xor
jb
mov
xchg
lods
rclb
jns
in
inc
cld
gs
adc
dec
cmp
ds
push
test
imul
mov
lret
pop
mov
and
or
nop
lods
and
push
pop
and
repz
xor
pop
cmc
andb
cmp
cltd
repnz
mov
jno
cmp
mov
xchg
dec
push
cli
push
lods
pop
dec
xchg
xchg
inc
pushf
mov
push
cmc
mov
icebp
push
xor
cmp
push
cmpsl
lea
and
or
cmp
push
cmp
insl
and
cmp
add
out
adc
popa
xchg
mov
jae
or
xlat
cmp
mov
xor
shll
pop
or
add
in
push
mov
xchg
sbb
sbb
jo
mov
repnz
in
add
dec
out
jne
jno
test
je
dec
xchg
lods
lods
cli
aaa
out
mov
cmpsb
ds
xlat
fwait
inc
cmp
bound
sbb
mov
pusha
outsb
mov
subb
mov
insb
repnz
aam
out
adc
stc
fisubs
and
adc
andl
xor
xor
inc
mov
cmpl
jne
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
mov
sub
sub
mov
movl
cmpl
je
cmpl
jne
call
mov
dec
mov
jmp
andl
mov
inc
mov
cmpl
jne
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
andl
mov
inc
mov
cmpl
jne
push
push
push
push
call
cmpl
jb
mov
adc
movl
mov
push
mov
xor
mov
push
mov
add
cmp
je
mov
mov
xor
mov
sub
add
xor
add
cmp
ja
push
jmp
mov
mov
mov
jmp
and
sbb
push
jo
dec
add
mov
lods
jle
jl
jle
xchg
mov
lcall
mov
icebp
xchg
sub
lods
push
push
sub
sahf
adcb
hlt
ss
aaa
outsb
ret
loop
sub
dec
cs
sbb
mov
lahf
add
sbb
sub
dec
inc
dec
sub
insb
pop
js
pop
bound
add
xor
mov
xor
outsb
ds
sub
sarb
mov
imul
test
inc
fistpll
xchg
shl
inc
or
dec
mov
test
fistps
adc
js
inc
mov
dec
cmpl
sbb
xchg
roll
xor
outsb
xchg
adc
jne
movsl
imul
push
push
in
fsubrl
sbb
movsl
data16
out
cmp
mov
sbb
fwait
push
movsb
int
in
icebp
lcall
hlt
mov
test
mov
lock
pavgb
sub
inc
mov
insb
pop
fstps
jl
je,pt
push
inc
sub
mov
push
imul
mov
mov
dec
stc
push
mov
jns
in
sbb
mov
iret
sbb
mov
int
cmp
and
aam
xchg
push
pop
xor
pop
into
sahf
or
iret
add
mov
outsb
das
test
repz
aaa
loop
sbb
or
mov
repz
push
je
mov
enter
mov
xchg
aad
inc
rcl
or
sbb
aas
pop
sbb
mov
cmp
daa
sarb
lods
aam
mov
test
mov
movsl
adc
adc
push
lock
xor
mov
pop
lds
std
dec
jne
pop
cwtl
jnp
fsub
push
fdivrl
jne
repz
test
not
icebp
scas
mov
leave
popa
mov
movsb
movzwl
iret
adc
cmpsl
dec
sbb
rcl
mov
push
xlat
push
mov
adc
mov
repnz
imul
xchg
xor
xchg
mov
xchg
notl
mov
xchg
aaa
xchg
sbb
cmp
push
bswap
mov
cs
dec
repz
in
lods
outsl
mov
sub
std
lea
mov
negl
push
call
in
add
ret
popa
and
xchg
sub
pop
cld
fdivrs
imul
les
es
sti
lcall
mov
mov
pop
cmp
popf
push
dec
insl
add
xor
jmp
or
mov
mov
in
mov
and
nop
xlat
xchg
scas
or
sbb
insb
push
adc
stc
add
mov
imul
mov
xor
add
mov
mov
mov
xor
lea
mov
xor
mov
sub
add
cmp
jmp
andb
in
loope
arpl
adc
sahf
shrb
jle
sbb
fwait
dec
idivb
mov
and
lds
rorl
pop
std
pop
movsl
cmpb
fnstcw
push
or
adc
js
aas
stc
mov
rcpps
mov
lds
jecxz
mov
lret
pop
add
pop
push
xor
mov
daa
sub
xor
lods
pop
arpl
mov
xor
add
push
lahf
add
stos
push
jle
sub
lock
shl
ss
fcoml
cmc
cld
test
mov
jp
cmp
add
sbb
sub
enter
and
iret
or
push
sahf
jnp
or
imul
sub
fstps
cmp
sarb
jge
mov
notl
fcoms
ret
push
add
ret
test
insl
leave
mov
jnp
dec
push
lret
cmpl
imul
sub
mov
out
cmp
or
fimull
xor
push
movmskps
adc
cld
jnp
add
dec
dec
cmpsb
push
aad
inc
cli
mov
pop
push
pop
sbb
pop
fldenv
mov
dec
pop
insb
push
push
ljmp
cmpsl
pop
sub
int
xor
jns
mov
cmpsb
xlat
ds
subl
and
inc
addb
test
cmpsb
aad
and
jle
dec
div
push
fnstenv
out
ds
mov
incl
xor
jne
sbb
cmp
xchg
pop
rcrl
in
push
call
jnp
pop
in
mov
pop
adc
shlb
aad
jl
les
mov
fucomi
xor
fwait
ds
mov
out
add
out
mov
inc
addr16
cld
nop
daa
stos
fstpl
pop
inc
ljmp
popf
lahf
inc
sbb
test
or
fnsave
into
push
mov
mov
ljmp
cmpsb
push
sub
inc
fwait
push
inc
sub
decb
mov
jo
ljmp
ljmp
mov
jae
out
pop
jg
subl
or
pop
enter
inc
in
jno
cwtl
push
outsb
jne
xchg
in
aas
aaa
cmp
mov
cwtl
cmp
decb
nop
jp
pusha
and
jle
pop
push
call
pop
imul
movsl
lret
or
pop
je
aaa
ret
loope
pop
aad
lret
das
mov
mov
adc
stc
divl
xor
inc
jg
scas
test
out
cwtl
push
mov
in
xor
insl
and
cmp
add
pop
add
pop
sub
adc
in
dec
dec
or
jle
movsb
jbe
lret
inc
nop
rcrb
aaa
sub
stc
sub
scas
dec
mov
jbe
pop
mov
pop
pop
leave
ret
push
mov
jmp
shll
jno
aad
xor
jg
push
shlb
jle
and
sahf
test
mov
mov
xchg
rcll
mov
inc
jnp
dec
cmp
stos
stc
adc
fwait
and
mov
inc
and
loopne
bswap
mov
adc
sub
xor
adc
sbb
test
addr16
inc
xchg
cmp
or
lods
lret
jl
xor
cmp
sub
std
arpl
pusha
fdivs
std
or
mov
stos
sbb
sbb
je
inc
cwtl
push
pop
sahf
or
push
pop
pop
bswap
rcrb
add
jg
mov
neg
das
stos
sbb
addr16
mov
out
push
adc
cvttpd2pi
push
jecxz
out
ret
es
sbb
rcrb
xor
lds
mov
cli
sbb
adc
mov
outsl
movsb
dec
incb
xchg
aad
add
sub
mov
inc
ja
in
fimull
mov
es
fdivrl
add
insl
mov
subb
mov
lods
cs
pop
cmp
pop
lods
ficoml
or
adcb
xchg
cmp
sbb
inc
mov
sbb
adc
data16
pop
out
dec
xor
aad
int
lcall
iret
inc
mov
je
inc
in
pushf
iret
test
incb
or
sub
and
cmp
xchg
jle
add
mov
dec
xor
sub
xchg
cmc
xchg
xor
je
jp
jno
cmpsb
lock
inc
stos
dec
sub
addr16
cmpsb
iret
inc
loope
jmp
mov
int
stos
xchg
adc
inc
add
sub
xchg
rorb
pop
xlat
push
loope
adc
cmp
cld
mov
inc
jno
xor
jecxz
mov
pop
mov
xchg
adc
stos
xor
add
sarb
mov
emms
fs
rorb
call
dec
jb
outsl
gs
pusha
adc
nop
enter
add
mov
mov
push
movsb
aas
and
addl
sub
jl
dec
push
int3
stos
into
push
mov
xchg
xrelease
data16
nop
outsb
test
pusha
lock
and
pmulhuw
mov
xchg
and
dec
daa
jb
pop
inc
adc
rorl
ljmp
nop
or
je
mov
mov
pop
and
lahf
outsb
cwtl
push
loopne
sub
test
dec
adcb
push
sub
cmp
ja
sbb
pop
xchg
jle
popa
int3
mov
pop
mov
mov
sbb
push
movsl
cld
nop
fldt
cs
hlt
lds
mov
push
insl
aad
test
or
sub
inc
mov
xor
mov
jmp
or
pop
jno
xchg
add
pop
and
jl
jle
add
aam
mov
in
imul
lods
insb
das
fdivs
inc
xor
jne
mov
out
adc
les
xor
jge
ret
push
scas
sub
sbb
scas
mov
rcl
push
fldcw
xor
push
stc
inc
sub
xchg
jp
pop
mov
fstpt
jno
lods
cmpsb
shll
mov
mov
lret
loopne
xor
ret
sahf
lahf
cmpsb
push
je
fwait
mov
sub
adc
mov
stc
aas
in
in
andl
hlt
pushf
pop
or
and
sbb
adc
adc
sub
movsb
mov
outsl
inc
sbb
cmp
mov
sbb
jge
add
xor
fistpl
push
cwtl
fstps
dec
inc
mov
fnstcw
cmp
pusha
fisubs
dec
pop
cmp
dec
xlat
jg
into
iret
notb
ret
jmp
test
out
sub
xor
pop
stos
xlat
pop
and
inc
mov
push
mov
mov
ds
cli
jge
push
xchg
xchg
mov
fists
test
pop
xchg
adc
test
push
dec
aad
jge
in
sbb
or
inc
jge
push
cmp
arpl
sub
mov
rol
ret
test
adc
jo
shll
bound
ret
repnz
adc
lods
pop
jb
inc
cmp
enter
inc
pop
stos
cli
sub
rcr
pop
stos
loop
rorb
jns
inc
dec
les
test
rorb
cltd
jae
jmp
lea
scas
xchg
pusha
mov
adc
jo
daa
mov
push
and
mov
fidivl
inc
leave
rol
in
xor
cli
dec
lds
pop
add
push
nop
lret
std
test
cmp
outsl
call
mov
mov
sub
and
jmp
inc
jbe
sbbl
rcr
sbb
clc
pop
inc
fnstcw
orb
call
pop
xchg
pushf
xor
stos
fcmovnbe
jecxz
pop
push
sbb
xor
repnz
cmp
adc
stc
cmp
jno
jae
clc
dec
call
imull
popa
mov
std
insb
adc
out
stos
insl
xchg
in
cmp
repz
jmp
rcll
xor
sub
jmp
pop
ret
stos
xchg
push
popa
xchg
inc
in
rorl
pop
dec
mov
mov
aas
sbbl
or
cmp
aad
popa
test
shl
pop
xchg
jb
push
lods
push
jmp
lret
pushf
mov
add
jmp
les
dec
test
imul
sti
jmp
adc
enter
sbb
pop
ret
push
mov
sub
mov
adc
mov
and
mov
xor
sub
mov
orl
add
xorl
movzwl
and
mov
xor
xor
or
movb
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
push
push
pushl
call
cmpl
jne
xor
add
inc
mov
jmp
sbb
lea
mov
mov
mov
subl
xor
xorl
sub
mov
movzwl
sub
movl
movl
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jb
adc
mov
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jne
xor
xor
inc
mov
cmpl
jb
sub
mov
push
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jne
pushl
call
jmp
xor
mov
add
jmp
mov
mov
inc
cmp
jb
mov
mov
xor
add
cmp
je
push
push
mov
mov
xor
mov
add
movzwl
mov
mov
movzwl
xor
add
mov
mov
jmp
cltd
outsb
mov
outsl
or
push
out
outsb
lock
mov
jle
jl
jle
mov
inc
fldl
cmp
lods
mov
pop
push
iret
mov
pop
movsb
test
sbb
stos
xchg
jl
pop
jb
inc
ljmp
xchg
in
jp
cmpsb
mov
xor
int
cmovo
or
xor
outsl
jo
jmp
xchg
mov
inc
sub
adc
ret
sahf
pop
mov
sahf
adc
jmp
mov
push
outsb
cmp
repz
xchg
xor
sub
in
sbb
mov
enter
mov
loopne
xchg
lock
inc
push
dec
lret
scas
and
fst
sbb
mov
push
mov
out
arpl
and
cli
iret
inc
jle
aaa
repnz
adc
cmpsl
bound
sbb
stos
sbb
popf
mov
stos
popa
lods
outsl
pop
push
insb
aad
ret
stc
out
adc
xchg
add
ret
add
and
insb
xchg
ljmp
mov
dec
lret
out
mov
jnp
xor
pavgb
lock
xchg
sbbl
or
inc
or
and
stos
or
cld
dec
jecxz
sbb
sub
lret
mov
mov
xchg
sbb
mov
add
mov
nop
popf
inc
in
sahf
xchg
rcrb
add
sub
adc
and
lcall
rorb
mov
popf
subb
ret
xor
popf
dec
xchg
es
fldenv
fbstp
not
xlat
std
jl
xor
lcall
scas
scas
adc
sbb
mov
pop
daa
sbb
inc
out
aam
sbb
sub
rcrl
mov
lea
mov
sub
mov
add
inc
negb
xchg
outsl
mov
sahf
cmp
cmc
ret
lea
ret
mov
cmp
jmp
dec
arpl
lods
jmp
or
fstpl
pop
pop
and
push
inc
sbb
scas
rcrl
mov
push
pop
mov
loop
inc
push
mov
inc
std
lea
and
sub
je
icebp
outsl
xchg
lea
cwtl
adc
inc
pop
jbe
out
ljmp
dec
out
arpl
sub
push
add
or
cmp
mov
enter
inc
das
or
hlt
pushf
test
sbb
es
add
add
out
gs
mov
stc
xor
mov
les
and
inc
cmp
jne
pop
pop
mov
mov
xor
jmp
mov
icebp
mov
and
or
jl
jle
sbb
xchg
gs
das
sub
push
stos
xchg
add
inc
add
cld
jne
decb
mov
push
lea
lret
sub
jg
xor
pop
scas
jp
pop
cmpsb
xchg
call
xlat
inc
adc
filds
jo
adc
push
movsl
test
push
jle
test
push
pop
in
mov
jno
les
pushf
clc
cmp
xchg
pop
jnp
adc
mov
sub
leave
iret
xchg
jmp
pop
jl
stos
mov
sti
movsb
in
outsb
div
loop
cmpl
mov
inc
bnd
mov
idivl
cmpl
jl
inc
jmp
aas
inc
inc
mov
dec
xchg
mov
mov
lcall
and
lock
and
cmc
mov
dec
pop
mov
jge
jmp
push
hlt
icebp
loope
pop
test
jp
lret
push
cmp
fs
test
lcall
mov
jbe
enter
jg
mov
fdivs
inc
ja
aad
icebp
je
pop
push
addr16
mov
daa
dec
testb
mov
push
jno
push
cmp
scas
cmp
dec
out
shll
ds
enter
xor
adc
fwait
lcall
mov
out
bnd
les
stos
cmp
lock
jb
into
test
dec
scas
jecxz
loopne
sbb
inc
lds
push
mov
cli
adc
jo
xor
pushf
sub
cmp
and
push
enter
icebp
sbb
sbb
inc
xor
divl
xchg
in
lock
sub
imul
jbe
test
loop
flds
cmpsl
dec
cmp
or
xchg
xchg
subl
ja
mov
xchg
data16
mov
push
mov
fisubs
sbb
sti
aas
xor
stc
cmc
xor
ss
mov
imul
scas
or
sbb
push
outsl
jmp
cmpsl
xchg
sub
jno
hlt
imul
call
xor
loopne
mov
decl
iret
dec
and
bnd
xor
addr16
xor
dec
insl
sbb
xor
mov
pop
mov
loope
mov
cs
xor
cmp
dec
les
ret
daa
sbb
dec
mov
mov
mov
test
jnp
xlat
push
and
xchg
add
jmp
add
fdivl
lock
xchg
pop
dec
lahf
cmp
mov
jle
xchg
aaa
flds
dec
mov
or
data16
out
or
mov
outsb
jecxz
inc
xor
rolb
lods
mov
push
notl
sub
push
int3
add
loopne
jo
aas
mov
sub
test
imul
pop
aaa
pop
enter
inc
push
fld
idivl
fmull
inc
fidivrl
pusha
cmc
cmpsl
sbb
mov
mov
and
lret
test
pop
iret
js
mov
fwait
das
xor
mov
jle
cmp
ss
je
aad
pop
xchg
shll
xchg
fistpl
xchg
stos
repnz
jg
or
imul
loope
cmpb
cltd
bound
add
mov
adc
mov
add
arpl
mov
add
enter
cltd
mov
repnz
and
rol
cmpsb
ljmp
and
dec
or
outsl
mov
pop
push
test
lea
popf
jl
jae
les
jmp
lods
fnstcw
add
or
fbstp
mov
scas
cmp
sbb
jg
cwtl
clc
sbb
ljmp
xchg
pop
jg
scas
mov
repz
pushf
repz
daa
out
shlb
cmp
dec
mov
jb
fs
mov
icebp
int3
popf
xor
or
cltd
adc
adc
adc
sahf
into
fs
mov
movsl
mov
enter
jge
sbb
mov
jae
js
outsb
sbb
aas
dec
jge
jnp
push
xor
aas
mov
fisubs
lea
int3
sbb
mov
rclb
sub
or
ficoms
add
int
mov
sbb
ss
xchg
orl
jmp
inc
inc
leave
xchg
cmp
or
cmp
jnp
and
fistps
mov
xchg
fcompl
aas
sbb
adcl
or
arpl
gs
jge
cmpsb
xchg
cmc
rol
sub
pop
mov
jns
mov
pmaxsw
test
es
iret
xchg
mov
dec
mov
mov
cmpsl
mov
push
mov
pop
mov
je
mov
dec
lods
push
mov
mov
cmp
push
xlat
fsubs
xchg
inc
cs
inc
call
sbb
jne
and
pop
scas
std
mov
jmp
je
push
push
lock
outsb
dec
mov
arpl
mov
jle
ljmp
int
jmp
mov
sarl
hlt
pop
inc
pop
push
das
int3
fcoms
xor
lahf
std
test
add
mov
jne
movsl
jecxz
inc
inc
push
std
push
jg
in
pop
inc
fwait
dec
and
xchg
push
push
test
or
pop
sbb
push
test
js
mov
stos
sub
or
mov
icebp
inc
lcall
mov
sahf
sti
out
push
rcl
xchg
gs
test
xchg
mov
add
lea
sbb
inc
lahf
idivl
es
ljmp
lcall
mov
pusha
push
cmpsl
cmp
push
or
mov
or
add
sbb
js
xlat
in
jge
add
xchg
jmp
gs
bound
fwait
enter
lds
cmp
pop
adc
inc
xor
int
and
inc
xor
test
nop
push
adcb
subb
movsl
and
lods
cmp
sbb
ss
push
aad
adc
inc
jo
lcall
shlb
sub
push
mov
sarb
ja
imul
repnz
int3
ret
pop
push
cltd
shl
xchg
sbb
aad
xchg
cld
clc
aaa
cli
sbb
and
jb
fidivrs
and
scas
xchg
sub
cmp
popa
lods
aam
in
xor
pop
les
nop
test
scas
mov
icebp
mov
ja
push
aam
push
push
push
cmp
dec
push
ret
xchg
stc
mov
mov
push
and
pushf
dec
xchg
lahf
fsub
gs
lahf
ffree
movsb
mov
mov
mov
ljmp
lods
push
cmp
add
out
std
rcrl
sub
loopne
subl
jle
lahf
mov
mov
cmp
push
jg
movsl
mov
jo
xor
push
imul
cmc
cmc
ds
push
je
movsb
inc
test
addl
mov
or
xchg
inc
test
ss
mov
movsb
xchg
mov
insb
sar
push
xor
sub
fmuls
scas
sub
aad
push
jle
jecxz
mov
imul
mov
insl
pop
jae
divl
mov
adc
sbb
out
insl
mov
popf
je
pop
cli
xlat
xchg
out
mov
mov
push
fsincos
push
dec
push
mov
mov
mov
mov
cmp
je
mov
mov
mov
cmp
jne
mov
mov
movsbl
xor
add
cmp
jmp
jmp
push
dec
push
imul
and
loope
ficomps
jle
jl
jle
out
stos
cs
lods
mov
cli
hlt
push
push
add
leave
popf
sub
mov
mov
lock
inc
xor
out
pop
pop
daa
shrb
sub
ljmp
mov
add
hlt
cli
adc
lods
sbb
mov
sub
pop
in
push
testl
or
movsl
and
rcl
ret
and
aaa
sub
pop
xchg
or
and
sbb
fadd
push
rol
adcb
push
mov
mov
adc
shlb
jl
loop
jns
dec
popa
sti
jge
gs
jge
mov
ljmp
movsl
ret
imul
lcall
ds
std
fidivl
cmp
iret
stos
pusha
jne
xchg
jo
cmp
adc
out
jge
mov
rcrl
daa
ret
push
rcl
cwtl
es
mul
leave
sub
addr16
or
push
cmp
cmp
mov
xor
mov
mov
xchg
and
mov
lea
xor
sub
pop
sub
into
push
sbb
outsb
sbb
inc
mov
lods
lds
push
xor
lods
stc
pop
dec
push
les
jo
add
scas
sub
xchg
mov
call
sub
xchg
and
xor
ret
cld
mov
mov
and
mov
pop
xor
xor
arpl
push
test
call
insb
xchg
mov
es
ds
ret
fists
cmp
inc
repz
das
xor
ja
mov
nop
dec
or
cltd
cmc
sbb
jbe
js
pop
add
sbbb
pop
stos
pop
repz
inc
popf
fmuls
xor
lods
xor
mov
das
test
stos
insl
jnp
mov
or
mov
push
adc
ficoms
sbb
in
or
popa
jg
pop
sbb
leave
and
inc
getsec
inc
add
cmpsb
adc
pop
out
xlat
mov
rcr
data16
inc
pop
cli
sti
outsb
cmpsb
daa
daa
je
repnz
and
loopne
and
xchg
push
les
xchg
adc
sbb
loopne
lcall
test
mov
inc
outsb
mov
mov
dec
fwait
test
add
fucomi
dec
pusha
pop
movsl
or
lods
in
mov
and
sbb
jp
pushf
pop
pop
add
cmpl
es
fs
jae
iret
sub
test
add
add
inc
call
lea
mov
mov
addl
mov
jmp
sub
or
lock
inc
mov
repnz
pop
dec
inc
jle
scas
jl
jle
lcall
dec
std
mov
daa
cmp
add
and
pop
in
adc
lods
lret
and
xchg
leave
mov
push
ja
stos
inc
push
insb
in
loope
push
outsl
imulb
sbb
adc
ljmp
xchg
shrl
jg
popf
or
out
add
mov
or
outsl
and
pop
push
inc
xor
and
and
dec
shl
or
ret
dec
sbbb
outsl
dec
bound
mov
lahf
imul
adc
pop
es
gs
loope
sub
sbb
fs
out
fnclex
in
push
and
jb
mov
inc
test
mov
xor
shr
lcall
sahf
test
push
cli
mov
rcll
jg
lods
pushl
pop
mov
dec
les
mov
lock
adc
repz
sbb
or
enter
add
aas
push
lret
jb
hlt
lret
adc
xchg
mov
mov
ret
fpatan
lahf
js
scas
sbb
mov
lods
or
in
or
mov
add
in
cmpsl
dec
cli
icebp
ficoml
test
jb
cmp
jnp
and
xor
enter
or
mov
xchg
stos
push
test
rcll
subl
aad
rorl
and
out
outsl
pop
cmpsl
test
cmp
ficompl
icebp
sub
or
add
sbb
dec
xorb
pop
inc
mov
hlt
or
fdivl
push
dec
add
jmp
and
gs
iret
sbb
out
mov
imul
pop
or
shrl
in
shrb
sbb
inc
mov
ret
pop
mov
fbstp
mov
nop
and
adc
test
and
mov
and
xor
mov
xchg
mov
mov
je
std
and
test
jns
aaa
out
aam
in
jg
mov
pop
or
add
cmp
sub
adc
dec
in
test
cmpsl
sarb
xchg
lods
out
dec
in
hlt
fwait
js
lea
sbb
insl
and
and
jnp
dec
sti
or
mov
iret
in
push
fisttps
test
xor
lea
mov
incl
jmp
mov
xor
mov
add
mov
pop
leave
ret
push
mov
push
movl
jmp
mov
xor
in
leave
outsl
push
fs
xchg
jle
jg
jle
adc
dec
in
scas
xor
push
sbb
adc
cli
stos
mov
shll
push
loop
jne
cmc
xchg
pop
mov
aad
fwait
jne
lock
push
pop
aaa
sbb
cmc
shlb
jle
loope
or
out
or
outsl
shll
ljmp
and
sub
adc
fsubrl
mov
sub
dec
idivl
lret
std
leave
add
cwtl
pop
sub
cmp
push
test
jno
sbb
add
cltd
stos
jns
fistpl
ds
dec
mul
sbb
arpl
ja
shll
std
pop
adc
jg
mov
fistpl
xchg
les
xchg
mov
mov
mov
xchg
lea
data16
pop
loopne
bound
mov
jg
add
mov
imul
sbb
lcall
hlt
mov
daa
mov
mov
cmpsl
call
movsb
insl
xor
or
and
lcall
cld
out
inc
icebp
jecxz
sti
sub
cmpsb
test
aas
adc
dec
or
mov
jecxz
scas
les
shll
movsb
scas
and
push
add
pop
out
dec
xchg
mov
addb
pop
cmp
test
mov
cli
jmp
cmp
in
pusha
and
int
dec
mov
leave
fidivrl
lods
jg
shlb
xchg
pop
pop
hlt
scas
daa
leave
dec
cltd
adc
cmp
jns
loopne
and
sub
pop
std
mov
inc
and
pop
aas
call
mov
lods
aad
sarb
add
cmp
add
add
add
add
xorl
xor
movl
cmp
jne
and
mov
mov
add
andl
mov
andl
mov
inc
mov
cmpl
jne
push
push
push
push
push
pushl
pushl
pushl
push
pushl
pushl
pushl
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
mov
xor
push
mov
mov
add
cmp
pop
je
mov
jmp
mov
xor
jmp
mov
gs
stos
pop
add
jle
movsb
jg
jle
sub
outsb
push
repz
dec
mov
mov
icebp
aam
add
daa
addb
jg
shrb
push
and
lret
ja
cmp
lret
out
fucom
sub
jmp
repz
xchg
xchg
xor
adc
add
dec
pop
movsb
fdivs
outsb
es
push
push
inc
adc
cmpsl
outsl
push
inc
xchg
jecxz
stos
cli
orb
mov
inc
and
add
repz
adc
hlt
or
jge
lock
sti
jae
xchg
int3
and
inc
jg
aam
pop
and
rclb
lock
push
pushf
push
mov
jmp
inc
test
rol
fldenv
mov
jp
or
jne
push
or
pop
mov
push
sar
stos
dec
xchg
hlt
mov
cmpsb
sbb
sti
cmp
mov
in
jbe
iret
popa
jae
mov
call
push
sub
cld
mov
into
or
stos
fdivrl
sbb
and
xor
daa
adc
inc
mov
push
dec
divb
sub
insl
push
inc
push
cwtl
or
dec
jmp
mov
mov
adc
in
push
movsb
sarl
pop
dec
iret
in
push
lock
mov
jge
cmp
push
jns
lea
sbb
pop
jae
or
mov
scas
cli
adc
mov
das
scas
cmp
xor
mov
cltd
sub
inc
ja
shlb
add
fstpt
call
adcb
lock
push
dec
loopne
or
in
jecxz
lods
int3
sti
add
jmp
mov
xor
add
leave
ret
sub
add
sub
add
add
dec
sub
add
add
bound
add
insb
sub
add
add
mov
add
xchg
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
add
sub
add
add
dec
sub
add
add
sub
add
add
js
add
xchg
add
nop
sub
add
sub
add
add
shrb
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
add
add
sub
add
add
inc
sub
add
add
sub
add
add
nop
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
add
inc
sub
add
add
bound
add
add
test
add
sub
add
add
sub
add
sub
add
sub
add
sub
add
sub
add
dec
sub
add
je
add
subb
add
sub
add
shrb
add
imulb
add
adc
add
and
add
sub
add
ds
dec
add
pop
add
jo
add
jle
add
mov
add
lcall
add
add
aam
add
fisubrs
add
in
add
add
or
add
and
add
ss
add
dec
das
add
push
das
add
fs
add
js
add
mov
add
pushf
das
add
test
add
mov
das
add
fisubrs
add
repnz
add
das
add
or
add
push
xor
add
xor
add
xor
add
add
bound
add
outsb
xor
add
xor
add
add
mov
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
cmp
add
dec
xor
add
add
push
add
js
add
xchg
xor
add
add
shlb
add
in
add
cld
xor
add
xor
add
add
add
add
inc
xor
add
add
outsb
xor
add
xor
add
add
add
add
out
add
cli
xor
add
xor
add
xor
add
xor
add
add
add
pop
xor
add
add
je
add
xorb
add
add
ret
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
inc
xor
add
add
pop
xor
add
add
xchg
add
add
mov
add
enter
fidivl
add
xor
add
xor
add
add
push
xor
add
dec
xor
add
xor
je
add
mov
add
add
add
mov
xor
add
in
xor
add
adc
add
sub
add
ds
dec
add
pusha
add
insb
add
xorb
add
add
lret
add
add
out
add
add
adc
add
and
add
xor
add
inc
aaa
add
push
aaa
add
pusha
aaa
add
outsb
aaa
add
js
add
mov
add
xchg
aaa
add
test
add
mov
aaa
add
ljmp
add
cmp
add
cmp
add
add
dec
cmp
add
add
jo
add
jle
add
xchg
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
add
add
add
add
popf
dec
dec
add
add
add
add
inc
add
add
cmp
add
sub
add
add
add
add
add
add
add
add
add
add
pop
and
add
add
add
lock
add
add
add
outsb
push
popa
addr16
push
js
outsl
ss
je
jo
aas
inc
outsb
gs
je
push
gs
push
inc
inc
pop
inc
push
inc
dec
pop
dec
cmp
add
add
sbb
add
adc
add
add
add
shlb
add
add
add
and
add
mov
add
test
add
scas
xor
add
add
mov
add
add
add
add
and
add
add
add
cmp
add
and
add
mov
add
add
add
sub
add
sub
add
add
dec
sub
add
add
bound
add
insb
sub
add
add
mov
add
xchg
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
add
sub
add
add
dec
sub
add
add
sub
add
add
js
add
xchg
add
nop
sub
add
sub
add
add
shrb
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
add
add
sub
add
add
inc
sub
add
add
sub
add
add
nop
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
sub
add
add
inc
sub
add
add
bound
add
add
test
add
sub
add
add
sub
add
sub
add
sub
add
sub
add
sub
add
dec
sub
add
je
add
subb
add
sub
add
shrb
add
imulb
add
adc
add
and
add
sub
add
ds
dec
add
pop
add
jo
add
jle
add
mov
add
lcall
add
add
aam
add
fisubrs
add
in
add
add
or
add
and
add
ss
add
dec
das
add
push
das
add
fs
add
js
add
mov
add
pushf
das
add
test
add
mov
das
add
fisubrs
add
repnz
add
das
add
or
add
push
xor
add
xor
add
xor
add
add
bound
add
outsb
xor
add
xor
add
add
mov
xor
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
cmp
add
dec
xor
add
add
push
add
js
add
xchg
xor
add
add
shlb
add
in
add
cld
xor
add
xor
add
add
add
add
inc
xor
add
add
outsb
xor
add
xor
add
add
add
add
out
add
cli
xor
add
xor
add
xor
add
xor
add
add
add
pop
xor
add
add
je
add
xorb
add
add
ret
add
xor
add
xor
add
xor
add
xor
add
xor
add
add
inc
xor
add
add
pop
xor
add
add
xchg
add
add
mov
add
enter
fidivl
add
xor
add
xor
add
add
push
xor
add
dec
xor
add
xor
je
add
mov
add
add
add
mov
xor
add
in
xor
add
adc
add
sub
add
ds
dec
add
pusha
add
insb
add
xorb
add
add
lret
add
add
out
add
add
adc
add
and
add
xor
add
inc
aaa
add
push
aaa
add
pusha
aaa
add
outsb
aaa
add
js
add
mov
add
xchg
aaa
add
test
add
mov
aaa
add
ljmp
add
cmp
add
cmp
add
add
dec
cmp
add
add
jo
add
jle
add
xchg
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
cmp
add
add
add
add
add
add
add
xchg
add
imul
ja
jae
insl
jo
add
add
outsl
outsb
je
outsl
insb
data16
add
outsb
jbe
add
jb
push
jae
jb
arpl
add
add
jb
jo
add
mov
pop
pop
jae
je
popa
jo
pop
je
jo
add
lds
jo
imul
add
outsl
jb
add
data16
outsl
outsl
jb
lods
add
js
imul
add
jo
pop
insw
outsl
fs
xor
je
insb
add
or
je
ja
jo
gs
add
add
jb
arpl
add
pop
pop
arpl
insl
outsl
fs
push
add
imul
addr16
add
xor
arpl
outsl
imul
test
jae
popa
arpl
add
js
imul
pop
popa
insl
jae
pop
gs
je
add
add
arpl
jo
add
xchg
pop
imul
insl
add
outsb
jne
add
add
jb
bound
add
insl
bound
gs
add
sbb
jae
jo
imul
data16
add
pop
pop
arpl
inc
imul
ja
jae
arpl
add
add
js
je
imul
jae
add
call
js
je
add
add
je
add
fadds
jae
je
outsl
arpl
add
gs
jae
jb
popa
je
gs
add
mov
data16
imul
gs
outsl
jb
add
popa
je
insb
add
jb
pop
pop
addr16
popa
imul
sub
arpl
arpl
add
add
insl
outsl
jbe
add
dec
push
push
inc
push
push
cs
insb
add
mov
imul
outsl
ja
jo
popa
je
add
nop
add
arpl
outsl
jo
jo
outsb
jne
add
add
je
jne
jae
jb
mov
imul
popa
bound
add
outsb
fs
gs
popa
addr16
js
xchg
add
je
outsl
jns
arpl
insb
gs
je
jb
popa
bound
adc
inc
gs
outsl
jne
insb
gs
insb
imul
add
mov
imul
jae
bound
mov
dec
outsl
popa
fs
arpl
push
add
bound
jbe
outsb
je
test
fs
imul
add
je
arpl
add
outsb
fs
imul
inc
add
add
je
insb
popa
jae
dec
outsl
outsb
addr16
add
fs
outsb
jo
je
cltd
add
insb
outsl
addr16
outsl
js
outsb
imul
jb
insl
inc
add
jb
outsb
je
inc
add
imul
je
insb
popa
jae
dec
outsl
outsb
addr16
add
outsl
outsb
imul
gs
gs
inc
insb
addr16
jb
jne
dec
je
insl
add
ja
arpl
add
jmp
outsb
dec
outsb
jo
je
gs
je
jo
add
add
je
insb
imul
jb
movsb
add
pop
outsl
outsl
insl
gs
roll
outsb
popa
bound
imul
sub
inc
push
ja
jb
jne
push
add
inc
add
imul
arpl
outsb
add
add
inc
fs
jae
push
imul
arpl
add
icebp
add
jae
dec
gs
popa
addr16
add
out
add
imul
jae
addr16
add
dec
add
je
jb
jo
add
inc
add
outsl
jae
inc
gs
je
jo
add
add
jo
imul
imul
push
imul
popa
jae
inc
add
mov
dec
jae
push
jo
popa
dec
jne
gs
arpl
mov
dec
outsl
popa
fs
insl
popa
addr16
add
sahf
add
push
arpl
jo
jns
mov
push
outsl
push
outsb
imul
add
add
je
gs
popa
addr16
js
jb
dec
outsb
outsw
add
inc
gs
popa
jb
outsb
je
bound
inc
jb
popa
je
push
imul
inc
add
popa
insb
imul
je
add
push
gs
imul
outsb
addr16
add
adc
gs
jae
inc
inc
add
inc
push
dec
outsb
jne
add
add
arpl
outsb
jne
je
insl
add
add
outsb
dec
arpl
add
mov
imul
imul
add
jae
popa
addr16
outsl
js
add
ja
outsb
jne
popa
jb
inc
add
je
outsl
jb
addr16
jne
fs
imul
add
jae
jb
outsb
je
push
add
mov
imul
push
add
je
arpl
insb
insb
push
outsl
jae
add
add
je
jae
outsb
arpl
jns
je
je
add
or
inc
imul
jae
push
outsb
imul
jo
popa
je
push
imul
or
inc
gs
inc
inc
js
stos
add
fs
jne
jae
jb
add
gs
arpl
insb
insb
push
popa
outsb
add
cmp
inc
push
jo
jb
add
fwait
add
insb
outsl
popa
fs
gs
outsl
popa
jb
dec
popa
jns
jne
add
push
add
je
arpl
insb
insb
push
popa
outsb
add
insl
add
je
imul
outsb
addr16
add
addb
outsb
data16
popa
je
push
arpl
add
insl
outsl
jbe
dec
outsb
jne
add
ja
outsb
imul
arpl
das
add
je
arpl
gs
imul
add
insb
outsl
addr16
outsl
js
popa
jb
insl
inc
add
add
popa
insl
gs
arpl
add
inc
imul
jae
popa
addr16
add
xor
inc
push
gs
add
inc
outsl
jb
addr16
jne
fs
imul
add
imul
jne
dec
fs
add
push
add
je
jb
jo
add
dec
add
je
outsb
jne
scas
add
fs
jne
jae
jb
add
push
gs
jns
inc
outsl
insb
outsl
jb
add
xchg
add
outsb
jae
popa
je
inc
arpl
insb
gs
je
jb
add
push
imul
outsl
arpl
add
inc
jb
popa
je
push
outsl
jo
jo
outsb
jne
push
add
je
popa
jb
outsb
je
popf
add
insb
outsl
addr16
outsl
js
popa
jb
insl
push
add
gs
imul
sub
inc
push
ja
jb
add
out
add
imul
jae
addr16
add
jne
inc
gs
imul
js
inc
add
add
je
gs
popa
addr16
add
jb
gs
push
add
push
je
imul
push
push
outsb
outsl
ja
jae
outsb
arpl
add
popa
jb
jo
gs
add
sti
add
dec
outsb
push
arpl
sbb
inc
popa
insb
insb
push
imul
outsl
arpl
lahf
add
jo
je
push
popa
addr16
add
mov
push
popa
bound
fs
gs
dec
jne
push
add
sub
push
outsb
fs
gs
popa
addr16
add
add
je
jo
popa
je
push
outsb
add
mov
ja
je
je
push
add
sub
dec
outsb
jne
push
popa
jb
inc
imul
outsb
jae
add
fs
je
imul
push
gs
arpl
jo
jns
add
inc
jb
popa
je
inc
imul
imul
jb
insl
push
add
cmp
inc
push
jo
jb
jne
push
add
ja
inc
gs
imul
js
dec
outsb
addr16
push
add
xor
jb
outsl
dec
gs
push
add
dec
add
je
outsb
jne
gs
jne
je
je
insl
add
push
push
inc
push
xor
cs
insb
add
push
add
popa
addr16
imul
dec
arpl
push
imul
insl
popa
addr16
imul
je
add
dec
insl
popa
addr16
imul
insb
popa
arpl
arpl
add
add
popa
addr16
imul
ja
add
add
gs
je
push
jb
jo
jb
jns
push
popa
addr16
add
pop
add
outsl
jo
jb
jns
push
add
inc
dec
dec
inc
push
dec
xor
cs
insb
add
mov
inc
jb
popa
je
inc
outsl
insl
jo
je
bound
imul
add
gs
je
push
popa
insb
gs
add
gs
arpl
imul
into
add
insb
arpl
push
arpl
jp
inc
gs
jns
je
insl
push
popa
insb
gs
gs
jae
add
popa
je
inc
jb
jae
dec
outsb
imul
add
je
popa
jo
outsl
fs
pop
add
je
popa
jns
jne
add
add
je
imul
add
jbe
inc
inc
add
pop
add
je
popa
jo
outsl
fs
mov
popa
je
dec
inc
push
add
popa
je
inc
insb
insb
imul
outsb
dec
outsb
imul
add
gs
je
inc
outsl
outsb
je
add
outsb
jae
popa
je
inc
push
je
outsb
outsw
add
out
add
je
popa
insb
gs
gs
outsb
je
imul
gs
imul
outsb
jae
outsl
outsb
inc
js
add
add
jb
je
push
add
je
inc
imul
bound
imul
inc
gs
dec
inc
inc
outsl
insb
outsl
jb
popa
bound
add
gs
outsl
add
clc
add
je
gs
inc
insb
imul
push
popa
je
insb
je
add
inc
imul
test
inc
jb
popa
je
push
outsb
dec
outsb
imul
add
je
gs
inc
js
outsb
je
outsl
imul
aam
push
gs
imul
outsl
jb
add
add
je
dec
push
xor
stos
add
gs
je
push
outsl
insb
jns
outsl
outsb
push
outsb
add
xchg
inc
gs
gs
inc
js
outsb
je
outsl
imul
push
gs
imul
addr16
js
add
popa
je
push
outsb
add
push
imul
dec
jb
inc
js
add
add
arpl
add
mov
push
outsl
insb
jns
outsl
outsb
add
popa
je
push
arpl
outsb
add
gs
inc
js
outsb
je
outsl
imul
jo
inc
fs
outsl
outsb
je
gs
jne
arpl
add
inc
add
je
gs
arpl
popa
jo
add
inc
gs
imul
add
je
gs
dec
jne
push
add
popa
je
push
popa
je
gs
inc
jb
jae
add
into
add
arpl
gs
insb
imul
lds
inc
outsb
jne
inc
outsl
outsb
je
popa
insl
imul
inc
dec
xor
cs
insb
add
inc
outsl
insl
jo
je
jb
popa
insl
gs
add
sbb
dec
popa
outsb
fs
gs
outsl
jne
je
add
add
outsb
inc
imul
jb
popa
je
push
popa
imul
insl
gs
add
and
dec
popa
jo
imul
insb
add
push
gs
push
push
jb
outsl
jb
je
add
bound
inc
gs
je
insl
dec
popa
insl
gs
add
lret
add
inc
popa
fs
gs
fs
je
add
or
inc
gs
arpl
outsl
inc
outsl
outsb
je
outsl
insb
add
inc
imul
add
add
je
outsl
fs
gs
popa
outsb
fs
gs
add
inc
add
outsb
fs
gs
inc
push
dec
outsl
je
imul
outsl
outsb
add
xor
push
push
inc
data16
dec
popa
jae
add
add
je
jb
outsl
jb
je
inc
insb
popa
jae
add
sti
add
je
popa
jae
inc
jb
outsl
jb
add
add
imul
add
lret
add
je
jne
jb
outsb
je
imul
jns
add
mov
inc
jb
inc
imul
dec
push
dec
add
dec
popa
imul
outsw
add
add
gs
je
inc
jbe
outsb
je
add
outsb
add
outsb
fs
gs
jne
arpl
js
add
push
gs
fs
imul
gs
gs
jo
popa
je
inc
add
mov
inc
insb
outsl
bound
inc
insb
insb
outsl
arpl
xchg
add
imul
bound
inc
gs
gs
jo
popa
je
push
add
rolb
inc
jb
popa
je
inc
imul
gs
push
dec
outsl
arpl
add
add
jne
push
gs
jne
arpl
popa
insl
gs
add
repz
je
jne
insb
push
popa
je
dec
popa
insl
gs
add
push
add
insb
gs
imul
jae
gs
push
imul
inc
jb
popa
je
push
gs
outsl
je
push
push
add
jns
inc
gs
gs
imul
inc
gs
gs
inc
jb
je
arpl
push
arpl
outsb
add
add
je
outsl
fs
gs
imul
add
dec
add
jne
jo
outsb
fs
push
add
add
jae
jb
jo
outsb
push
add
add
je
popa
outsb
fs
gs
outsb
outsw
jb
popa
je
outsl
outsb
add
or
dec
outsl
arpl
inc
insb
insb
outsl
arpl
add
inc
gs
push
inc
outsl
outsb
je
js
add
ret
add
insb
push
outsb
ja
outsb
add
je
insl
dec
popa
insl
gs
add
ljmp
insb
gs
je
jb
bound
gs
js
add
inc
add
je
push
popa
je
dec
popa
insl
gs
add
add
popa
jb
push
inc
add
push
gs
imul
jne
push
imul
add
insl
outsl
jbe
inc
imul
jns
add
ret
add
jae
jb
insl
jo
add
dec
add
insb
gs
imul
arpl
inc
imul
cmpsb
add
outsb
arpl
push
popa
imul
insl
gs
dec
inc
push
dec
inc
dec
xor
cs
insb
add
inc
add
je
inc
imul
outsb
jae
outsl
outsb
inc
add
inc
add
je
inc
imul
outsb
jae
outsl
outsb
push
add
push
dec
dec
push
inc
push
dec
cs
insb
add
addr16
pop
dec
popa
jns
push
imul
je
inc
push
insb
pop
add
add
or
inc
add
inc
add
cmp
call
dec
ret
dec
cmp
dec
jp
cmp
dec
ss
add
dec
ret
dec
push
push
pop
push
cmp
dec
ret
dec
cmp
dec
jp
cmp
dec
ss
imul
dec
push
bound
arpl
dec
jns
ret
dec
cmp
dec
dec
dec
xor
ret
dec
push
jb
jae
orl
js
jns
aas
dec
jbe
ret
dec
ds
dec
dec
cmp
dec
xor
dec
push
sbbb
setae
nop
js
jns
aas
dec
jbe
ret
dec
ds
dec
dec
cmp
dec
xor
dec
push
xchg
pop
xchg
bt
mov
aas
dec
push
dec
cmp
dec
push
dec
xor
ret
dec
push
mov
or
aas
dec
push
dec
cmp
dec
pop
dec
cmp
dec
xor
mov
ret
or
js
jns
aas
dec
push
dec
cmp
dec
dec
dec
xor
ret
dec
push
ret
psrlq
sarb
jns
aas
dec
push
dec
cmp
dec
dec
dec
xor
ret
dec
push
rcrb
rorl
jecxz
loopne
lock
aas
dec
insl
dec
ret
dec
cmp
dec
ret
dec
push
loop
jecxz
repz
js
jns
js
jns
ds
jg
ret
dec
cmp
jb
ds
dec
dec
cmp
dec
xor
add
adc
adc
jns
aas
dec
add
mov
cmp
mov
ds
add
add
ds
add
cmp
add
inc
add
cmp
add
mov
inc
add
cmp
inc
add
inc
add
inc
add
cmp
mov
cmp
add
cmp
sbb
inc
add
test
sarb
add
or
inc
add
fnsave
inc
add
inc
inc
cli
jne
in
incb
mov
cmp
xor
pushf
clc
xor
pushf
clc
cmp
xchg
pushf
clc
aas
xchg
pushf
clc
cmp
pushf
clc
cmp
pushf
clc
in
stc
add
cmp
hlt
add
pop
dec
imul
pushf
clc
sahf
jmp
add
lods
cmp
pushf
or
addr16
add
inc
add
add
add
add
outsl
add
dec
add
add
add
inc
add
imul
add
dec
add
add
imul
jo
outsl
add
insl
add
add
insb
add
data16
imul
add
imul
outsl
add
add
push
add
add
add
add
inc
add
dec
add
imul
add
dec
add
add
insb
add
insb
add
add
dec
add
inc
add
imul
push
add
imul
add
add
imul
add
imul
add
add
dec
inc
dec
dec
push
fs
dec
dec
imul
push
inc
outsl
imul
data16
push
imul
add
add
add
add
inc
add
pop
dec
dec
dec
push
dec
pop
dec
push
dec
or
dec
add
pop
dec
pop
dec
pop
dec
or
dec
dec
dec
dec
dec
pop
dec
dec
dec
or
dec
add
dec
dec
pop
dec
push
dec
dec
dec
arpl
dec
pop
dec
ret
add
add
outsb
lea
outsb
lods
outsb
mov
outsb
in
outsb
std
outsb
or
outsb
cmp
outsb
jb
jae
jo
jno
jbe
ja
je
jne
mov
outsb
mov
outsb
mov
pop
jge
jge
jge
jns
mov
bound
add
mov
aaa
dec
jle
jno
mov
imul
inc
xlat
rcll
rcr
leave
xchg
fs
push
rcrl
shll
add
add
or
add
shll
and
inc
push
outsl
push
mov
cmp
add
add
add
popa
push
push
push
dec
je
push
jne
popa
jns
pop
je
push
jp
jp
js
imul
push
dec
dec
outsb
push
pop
dec
dec
dec
dec
je
add
add
insl
push
dec
jne
outsb
imul
pop
outsb
jbe
jns
dec
je
bound
push
arpl
push
imul
add
inc
jne
push
outsl
push
inc
inc
push
imul
push
jb
add
insb
jb
inc
push
push
inc
insb
inc
inc
jae
dec
inc
jo
data16
jp
insb
je
jns
popa
push
push
push
dec
imul
inc
jp
pop
inc
jae
dec
dec
gs
jne
add
cmc
jnp
jnp
cmc
lcall
and
cmp
or
roll
add
add
or
pushl
push
mov
adc
jnp
or
cs
xor
mov
aam
fbld
sub
push
mov
je
inc
mov
mov
sbb
pop
dec
out
mov
cs
cld
sbb
call
test
push
pop
nop
cli
jns
add
push
and
gs
inc
insb
adc
sti
inc
inc
test
mov
and
and
rcrb
jecxz
es
test
shll
inc
addr16
mov
adc
into
mov
xchg
int
cld
clc
fcmovne
xor
pushf
lret
mov
add
aas
fidivs
in
adc
subl
jne
cmp
jg
imul
lcall
add
fmull
rorb
repz
mov
sub
es
lret
ss
enter
out
rcrl
sbb
and
add
dec
cmp
add
pop
ficoml
in
jle
lcall
aas
loopne
add
add
add
hlt
mov
repz
xchg
jb
stos
mov
add
int
je
lret
popa
popf
add
bound
sbbb
inc
je
push
fists
fisubs
sbb
ja
or
push
inc
arpl
jns
mov
sub
and
push
inc
push
pushf
xor
inc
sarb
jp
pop
dec
cmp
jnp
imul
push
sub
inc
xchg
ljmp
add
sbb
arpl
push
test
arpl
adc
sub
mov
sbb
xlat
in
dec
stos
push
rcrb
inc
mov
push
pop
fistl
mov
add
mov
sub
mov
xchg
ficoml
sub
sub
icebp
pop
cmp
mov
sbb
int
push
inc
shl
test
jns
lret
test
js
ret
shrb
inc
dec
mov
push
inc
add
add
mov
push
sbb
roll
add
add
mov
test
inc
lahf
mov
xchg
sahf
xor
adc
shld
sbb
clc
lahf
jge
bound
ret
cld
push
cmp
cs
cs
dec
mov
iret
imul
ret
mov
insb
andb
cmp
add
add
movups
nop
xor
cmpsb
mov
int3
js
cmp
popa
jae
lea
ljmp
inc
enter
jmp
add
loop
mov
push
data16
movsb
xchg
insb
cmp
in
dec
iret
stos
push
fs
int3
dec
rorl
xorl
cmp
js
jl
mov
inc
or
pop
and
test
push
mov
icebp
dec
pop
rorl
mov
and
or
pop
inc
mov
mov
lret
pop
addr16
fildl
add
add
subl
roll
test
aam
add
add
xorl
mov
xor
inc
jle
out
ret
subl
or
inc
fld1
in
fisubrs
cmc
jb
call
fs
pop
push
dec
xor
andl
push
xor
ja
adc
mov
xchg
adc
cmp
subl
bound
pop
pop
pop
lret
gs
xchg
xor
fdiv
pop
xchg
mov
cli
rolb
dec
test
enter
xlat
sbb
popf
outsl
adc
push
inc
ret
retw
movsb
mov
xor
notb
popa
cld
aad
jmp
fstps
loop
cli
mov
mul
nop
pop
aas
lods
xchg
lds
sbb
not
mov
int
mov
sbb
cld
pand
sbb
xor
mov
stos
ret
popa
inc
add
xor
dec
nop
push
insl
filds
adc
add
add
inc
or
pop
dec
or
cmc
push
imul
add
add
add
js
rorl
icebp
repnz
pop
jnp
push
push
lahf
push
add
push
adc
adc
ret
sbb
sbb
dec
fdivp
mov
adc
xor
jl
xchg
fs
popa
pop
out
mov
push
add
aam
ret
fdiv
rorl
xor
test
inc
push
inc
xchg
in
push
lods
dec
ret
out
mov
mov
pop
pushf
push
repz
test
dec
mov
sbb
ss
loop
ja
repnz
xor
sbb
cmpsl
mov
repnz
fldl
dec
sub
mov
inc
dec
and
imul
outsl
xor
ret
pop
cltd
jnp
mov
lret
lcall
xor
mov
and
push
lock
fwait
dec
xor
sub
ret
sbb
adc
jnp
lret
scas
pop
pop
push
cli
loope
add
add
cmc
insl
cmc
out
lcall
enter
cmp
lock
add
add
add
sub
cli
aam
xor
dec
shr
movsl
push
push
inc
add
jnp
jns
jns
ficomps
cltd
pop
xchg
xchg
or
inc
out
xchg
push
mov
das
add
sbb
xchg
push
and
mov
loopne
int
pop
cmp
je
xchg
es
mov
into
inc
dec
les
js
int
cmpsl
cli
jmp
xlat
addb
into
and
popf
out
push
dec
dec
jne
push
sub
mov
xor
dec
mov
ljmp
test
push
lret
in
push
pop
adc
sbb
or
and
pop
xchg
in
cmp
popf
sub
std
fstl
lea
pop
and
adc
in
add
xor
or
div
fxch
js
enter
push
jmp
insb
ds
cmp
inc
vcomiss
mov
mov
int
mov
outsl
inc
mov
test
inc
sti
cmpsl
jge
insb
jp
cmpl
add
add
outsl
jle
aas
mov
cmp
hlt
xlat
add
add
add
dec
jge
jg
push
pop
push
mov
in
xor
std
cmp
mov
es
dec
jp
xchg
adc
rorl
out
sub
movsl
jge
aad
mov
jbe
data16
push
mov
push
sub
ljmp
adc
push
push
subb
repnz
out
mov
mov
negl
xchg
jnp
pusha
andb
pop
stos
fwait
pop
out
pop
scas
cmpsb
test
adc
jecxz
push
fwait
xchg
mov
dec
and
popf
sbb
fnstenv
mov
shlb
ljmp
push
jns
pop
pop
sbb
xchg
adc
push
push
mov
dec
or
dec
xor
sbb
pusha
mov
arpl
mov
imul
mov
les
jl
jns
ds
je
mov
jle
in
add
mov
jo
mov
test
inc
data16
add
or
and
scas
sti
jle
pop
push
pop
mov
fadds
add
add
xchg
push
popa
adc
sub
sbb
xor
insb
into
stos
sbb
and
jae
mov
ret
sti
jl
sbb
dec
jae
aad
insb
js
insb
adc
dec
fldt
sbb
cmp
add
mov
xor
xchg
dec
sbb
outsb
shrl
jp
lret
lods
cmc
shl
in
jl
lea
sbb
sbb
sub
setne
lods
jg
adc
test
hlt
and
lret
pushf
cmpsl
mov
dec
inc
inc
fs
mov
leave
jnp
xchg
lret
clc
js
jmp
jmp
push
cmpsl
cmp
jbe
scas
lods
inc
push
cmp
push
addb
jnp
std
movzbl
fnstsw
stos
test
or
fwait
pop
pop
outsb
sbb
addr16
fildl
mov
and
xchg
cs
lcall
jle
or
cmp
ja
cltd
cmp
add
lahf
fnstcw
ss
lahf
stc
bound
and
cld
flds
add
add
lret
in
pop
lea
adc
rclb
lcall
xchg
and
mov
ret
push
mov
mov
dec
push
cmpl
je
lret
inc
mov
pop
dec
sbb
dec
arpl
inc
add
adc
sbbb
mov
xor
data16
push
lods
test
ror
fwait
fwait
xor
adc
cmpsb
mov
xchg
xchg
jae
dec
lret
mov
xchg
mov
repnz
movsb
je
push
or
test
stos
jne
jns
push
sub
xor
movb
pop
jle
xor
out
pop
lahf
inc
cmp
and
mov
pushf
cmp
mov
ror
std
iret
xchg
mov
xor
and
mov
sub
test
lock
gs
dec
inc
sbb
add
push
aaa
iret
add
fsubr
stos
loop
xor
push
jl
jle
insb
out
adc
jno
add
add
add
add
stc
rsqrtps
arpl
sahf
shr
xchg
orl
getsec
int
push
or
cmp
sbb
daa
adc
in
pushf
mov
and
stc
pop
sub
fildll
adc
inc
loope
xchg
dec
lret
dec
mov
lret
mov
mov
push
clc
jb
xor
push
jmp
push
lahf
sbb
sbb
mov
and
mov
faddl
mov
xlat
ljmp
and
nop
stos
jmp
sbb
inc
add
repnz
cmpsl
int3
aad
pushf
imul
dec
mov
inc
lods
push
repz
mov
out
xor
out
xchg
adc
icebp
sub
cltd
movsl
mov
add
addb
dec
jbe
push
jbe
dec
rcll
mov
xor
sub
jg
push
xlat
mov
imul
movsb
ficompl
jmp
mov
sarb
mov
adc
in
xor
adc
add
add
add
add
mov
aad
call
popf
rorl
mov
inc
stos
in
pop
nop
xor
cli
xchg
pop
fnstcw
bound
faddl
sub
adc
push
lds
lret
cmc
and
mov
sbb
cmpsl
or
mov
insb
xchg
scas
int3
dec
imul
clc
stc
push
mov
aad
pop
int
xor
adc
sub
cli
inc
call
add
xor
je
stos
daa
int
dec
xor
cmp
dec
aas
jns
fcompl
loop
fcmovnu
jmp
pop
mov
mov
pop
or
test
xor
sbbb
clc
je
mov
push
mov
cmp
jbe
inc
add
mov
lea
push
or
mov
pushf
jno
sub
addr16
sahf
loop
movsl
test
mov
xchg
inc
sbb
dec
loop
mov
mov
cmp
add
aaa
data16
jne
mov
lcall
add
add
add
lret
jmp
xchg
push
sbb
test
xchg
cmp
sub
stos
xor
add
mov
sbb
mov
mov
mov
or
add
lcall
outsb
pop
pop
mov
insb
jb
lret
iret
dec
in
cmp
adc
loop
xor
mov
push
sbb
and
pushf
xchg
pushf
or
outsl
movsb
into
push
cmpsl
nop
xor
push
cmp
xor
jno
repz
fdivrl
stos
sub
push
or
mov
stc
mov
movsl
test
inc
icebp
aaa
push
sti
loop
and
lret
ljmp
adc
adc
pop
cmc
repnz
xchg
mov
andb
xchg
ret
xchg
add
out
pop
lods
sub
inc
inc
mov
cwtl
jmp
negb
cmp
add
lahf
bound
sub
inc
xor
loope
jnp
add
jnp
sti
xchg
lahf
mov
xchg
lcall
add
lret
adc
adc
mov
mov
test
xor
sarb
stos
jge
es
ss
jo
sarl
rorb
mov
dec
or
in
fwait
ljmp
ret
xchg
frstor
sub
sbbb
ret
idivl
pusha
fstps
fs
pop
inc
lcall
inc
ja
xor
mov
mov
outsl
test
movzwl
add
imul
je
pop
xor
and
push
mov
add
shr
sahf
adc
rcl
pushf
sub
cmpsl
out
cli
repz
mov
subl
adc
jl
lret
jno
mov
inc
into
pop
push
pop
push
fldenv
frstor
jb
jmp
ss
pop
repnz
out
leave
pop
lcall
addb
adc
push
mov
pop
movsb
shrb
xlat
push
or
add
pop
nop
pop
imul
aam
xor
sub
pop
sarl
mov
sub
filds
add
add
lret
imul
adc
es
daa
loop
mov
stos
ljmp
dec
jg
push
sub
outsl
mov
jecxz
add
push
sti
test
or
pop
shr
xchg
pusha
sub
ror
adc
fstpt
inc
adc
je
sahf
test
sbb
stc
dec
mov
cmp
jecxz
lcall
decb
rclb
subl
stc
repz
jae
xchg
mov
fwait
push
sub
xor
jo
and
xor
adc
add
aam
repnz
lods
jae
aam
mov
out
roll
test
mov
jle
fisubrl
loop
js
int3
xchg
pop
popf
stos
scas
bnd
push
dec
cld
dec
jno
pop
popa
mov
sub
mov
cmp
cmc
jg
jb
adc
imul
insl
lock
std
repz
inc
data16
add
add
add
xor
repz
and
ret
push
in
xchg
loope
lcall
out
mov
mov
shl
popf
jg
push
jnp
push
sbb
sahf
jge
je
cli
aaa
sub
int3
js
cmp
jbe
ret
push
lock
insl
sbb
or
aas
mov
daa
mov
cmpsb
inc
ret
mov
int
movsb
test
stos
stos
loope
call
outsb
xlat
dec
std
xchg
test
xchg
inc
mov
pusha
adc
xorl
jl
push
frstor
xchg
sbb
test
test
fists
sbb
adc
xchg
jno
jae
shll
dec
sbb
fwait
sbb
aaa
arpl
aad
rolb
xchg
inc
stos
lods
into
adc
and
test
inc
mov
push
push
push
es
push
sahf
or
mov
add
add
lock
cmp
arpl
je
jae
xchg
sbb
add
add
add
aad
push
jns
sti
push
gs
fsts
inc
sub
ficompl
out
and
aam
ja
or
loop
mov
cs
cmp
jae
std
pop
imul
fldl
pushf
aad
insl
fisttpl
sub
or
dec
addr16
in
xchg
adc
outsb
loopne
scas
add
sbb
int
pop
shr
mov
out
gs
call
cmpsl
daa
cmp
js
aas
mov
jmp
xor
popf
mov
jl
imul
cs
sbb
daa
shrl
xor
or
push
jnp
sub
jne
movlps
cmc
and
das
data16
and
lods
lahf
sarl
roll
stos
aas
sbb
fcmovnb
insl
mov
dec
jns
js
push
fwait
pop
fcmovnb
dec
stc
addr16
xchg
icebp
adc
add
add
mov
mov
lds
jg
loop
add
add
pop
mov
jecxz
pop
clc
sub
test
ja
subl
loopne
scas
cmp
movsl
test
push
mov
xchg
sbb
nop
ret
push
sbb
jecxz
aam
mov
jl
mov
xchg
mov
adc
cmp
pop
ds
dec
nop
subl
repnz
das
adc
push
nop
outsb
mov
fwait
add
out
in
sbb
add
mov
xchg
iret
mov
xor
and
mov
imul
fisubrl
pop
add
lcall
lods
mov
fistl
cli
mov
popa
jp
and
stos
ds
xor
or
pop
adc
mov
or
mov
dec
stc
daa
push
lods
popf
imul
repnz
ds
dec
xchg
out
dec
jbe
popa
scas
mov
xchg
jl
popf
movsb
cmp
rclb
rep
cmpsl
js
jle
lret
xchg
in
mov
incl
rcll
jecxz
add
add
iret
cmp
movsb
pusha
cmpsb
and
pushf
add
fdivrs
pop
int
sahf
jecxz
mov
test
loope
sbb
cmp
in
test
fs
push
ja
add
sub
outsl
cmp
mov
stos
mov
mov
mov
xchg
inc
sti
xor
pusha
xchg
mov
cld
push
sarl
and
xlat
and
mov
push
or
push
xchg
xchg
mov
sbb
push
adc
mov
insb
mov
mov
stos
mov
cmp
rclb
mov
sahf
jmp
dec
es
sahf
incb
mov
push
push
sub
push
insl
mov
pop
dec
mov
test
xchg
pop
movsb
cmp
sbb
popa
insb
sub
clc
idivl
mov
insb
enter
adcb
add
int
pop
cmp
jecxz
hlt
jge
je
leave
fldl
mov
add
inc
mov
in
negl
sub
movsb
pop
outsl
aad
and
add
add
add
adc
pop
and
iret
cmp
xchg
and
xchg
push
lret
popf
push
clc
push
mov
adc
push
inc
cwtl
mov
sbb
orl
cmp
and
mov
sub
inc
dec
pop
adc
pop
sub
mov
xor
and
stc
sbb
sub
adc
xchg
push
pop
adc
or
push
mov
sbb
mov
mov
pop
popf
mov
andb
pop
adc
fcoml
fwait
js
mov
aad
mov
fwait
shrb
or
movsl
das
clc
rorl
mov
sub
cli
pushf
outsl
insl
bound
scas
outsl
loop
divb
xchg
inc
or
ja
shrl
roll
fcomps
cmp
cmc
test
scas
pop
repnz
out
movsl
sub
add
mov
stc
dec
push
fcoml
fidivs
in
add
add
loopne
daa
mov
int
and
mov
icebp
jmp
imul
mov
insl
dec
cmpsl
sub
pop
mov
dec
enter
out
aam
stos
out
ja
push
mov
jecxz
push
adc
scas
scas
cmp
sbb
sarl
xchg
jne
lret
inc
imul
pop
lds
je
push
mov
lock
inc
sbb
jae
stc
pusha
fldenv
pushf
jne
lock
cmp
add
push
testb
ss
or
xor
in
mov
repnz
test
int3
in
sub
outsb
pushf
mov
jnp
mov
jbe
adc
int3
xchg
fidivrl
mov
sbb
or
inc
mov
fwait
imul
dec
bound
pop
or
jl
fs
xor
add
add
adc
push
push
push
mov
xchg
sub
add
add
add
pushf
sbb
jp
aam
mov
dec
adc
mov
int3
aad
loopne
shr
lret
fwait
int3
ds
dec
mov
jo
mov
fldcw
xor
mov
push
sbb
or
mov
stos
rcl
jb
cs
push
jno
push
mov
push
push
movsb
pop
mov
fistps
sbb
mov
repz
stos
es
or
jmp
xor
call
dec
sub
cmp
out
lret
mov
pop
loope
pop
adc
shlb
mov
mov
or
pop
cmp
sub
mov
add
mov
add
xsaves
cli
push
sti
sbb
scas
shrb
pop
mov
jg
cmp
xchg
stc
mov
gs
or
xchg
xchg
push
or
sub
push
mov
ds
lret
pop
shll
out
repnz
add
pop
lcall
les
mov
add
add
add
push
mov
add
fst
lods
test
lock
cltd
fwait
adc
push
inc
into
lret
jno
es
das
inc
lret
mov
insb
jo
adc
in
les
lcall
int3
stos
mov
push
mov
cmp
scas
pop
jle,pt
xor
dec
jnp
insl
sub
push
mov
mov
pop
scas
xlat
mov
stc
mov
ja
outsl
fsubrs
xchg
out
push
dec
pop
std
cmpsl
push
sub
mov
sbb
pop
jns
loop
mov
sbb
shr
sub
mov
jb
int
in
out
mov
movsl
dec
mov
ds
inc
dec
shll
loope
inc
push
mov
mov
mov
and
int
xor
jb
inc
and
ror
mov
test
in
adc
daa
xorb
std
dec
leave
test
pop
push
lea
xor
add
add
mov
push
decl
push
mov
aam
call
add
out
mov
mov
popf
bswap
mov
popa
jmp
mov
loop
sbbl
outsb
push
xlat
jbe
dec
test
sti
out
sahf
divb
test
push
sbb
int3
dec
out
adc
mov
mov
pop
jmp
sbb
js
xchg
jmp
jae
or
xor
enter
rolb
push
mov
shr
arpl
test
inc
cmp
hlt
jle
xor
mov
movsb
jne
mov
call
cmpsb
ret
mov
ror
lret
imul
jb
or
push
sub
xchg
bound
xchg
push
aam
xor
inc
jge
iret
or
push
lret
jns
add
xor
mov
pop
adc
clc
adc
jmp
outsb
pushf
pop
fsubrs
xor
or
xor
sub
outsb
and
cmp
sti
fsubp
inc
push
sub
jl
jmp
add
and
clc
rcr
xor
and
arpl
mov
and
outsb
cwtl
sbb
xor
into
test
sub
xchg
xchg
test
rclb
cld
push
shlb
adc
push
fbstp
xlat
clc
test
out
enterw
xor
push
incl
mov
dec
in
mov
cmp
and
test
das
jecxz
push
xlat
inc
xchg
decl
jl
xchg
or
stos
push
inc
add
and
pop
imul
xchg
cmpsl
ja
repnz
jns
xor
pushf
daa
mov
mov
xchg
lods
mov
inc
jne
mov
xchg
jmp
mov
lods
xchg
xchg
fsubrs
ja
dec
stc
lods
loop
cmp
sarb
movsl
inc
xchg
push
test
cld
mov
or
cltd
out
mov
das
jl
push
xlat
and
cmp
jae
jae
dec
push
dec
jl
push
jb
pop
test
and
and
mov
lcall
ljmp
add
jne
lcall
out
push
clc
push
std
jg
sbbl
dec
bound
outsl
nop
cmpsl
shll
in
jp
xchg
mov
lock
loop
push
mov
aam
inc
lods
in
andb
movsb
cmp
call
mov
mov
xchg
pop
pushf
mov
adc
sub
cmp
out
cmp
in
push
cmp
adc
bound
xchg
adc
mov
mov
xor
mov
cwtl
xchg
fidivrl
fwait
jbe
idiv
aaa
test
pusha
inc
out
gs
xchg
and
sbb
movsl
into
mov
es
sbb
stos
pop
inc
mov
dec
push
hlt
outsb
test
mov
pop
adc
movsl
adcl
ss
cli
mov
push
scas
cmpsb
adcl
das
jb
stos
fisubs
rcl
push
stc
icebp
repz
ror
lock
jnp
xor
xchg
and
mov
add
add
add
decl
outsl
cmp
nop
dec
add
in
fisubl
xchg
pop
mov
in
in
push
or
fisubl
xchg
stos
adc
into
add
mov
lcall
scas
andb
es
sub
and
xchg
ja
call
fcoms
movsl
mov
mov
add
mov
movsb
out
into
push
cmp
and
fmuls
sbb
clc
pop
pop
lock
int
mov
xchg
dec
dec
or
adc
adc
cs
sbb
dec
jne
insb
rcl
pop
cmp
loop
xchg
adc
xor
adcb
mov
aas
xchg
xchg
pop
orb
xchg
mov
outsl
js
icebp
mov
add
mov
mov
movsl
or
pop
pushf
je
mov
movsb
clc
lret
nop
les
fisubl
and
repz
fisubs
sti
sbb
inc
in
add
add
add
mov
cltd
or
outsb
dec
add
sbb
xlat
inc
ds
cmc
ret
mov
xchg
jle
loopne
outsb
xchg
jno
mov
test
xor
gs
out
and
xchg
loopne
or
test
outsb
fldl
adc
decl
push
dec
mov
scas
sbb
enter
xor
jb
mov
sbb
xchg
mov
test
xchg
adc
insl
pop
adc
fidivs
test
jae
fists
aad
xor
js
cli
sbb
add
xor
outsb
push
insl
push
mov
dec
and
jne
jl
push
data16
arpl
or
sbb
insl
add
mov
mov
dec
add
inc
cwtl
sub
shr
pop
repz
stos
test
dec
movsl
push
movsl
or
push
push
outsl
scas
xchg
pop
sub
mov
lret
aas
out
sbb
in
rclb
add
add
add
in
or
cmpsb
inc
aas
cmp
fisubrl
pop
jae
or
sti
mov
int
sbb
or
dec
xor
mov
xorl
stc
gs
int3
and
fs
roll
cmpsb
jge
data16
imul
scas
xchg
pop
or
mov
imul
clc
fwait
jge
mov
sbb
into
sbb
mov
scas
push
insb
xchg
test
icebp
gs
lret
dec
push
loopne
sub
jb
in
loopne
adc
xor
or
testb
xchg
frstor
sarb
push
outsl
out
lea
mov
jne
and
es
inc
scas
popa
ret
pusha
lods
sub
cmp
pop
loop
jae
xor
fdivrl
arpl
je
in
pusha
aad
pop
push
mov
repnz
adc
aad
jnp
call
add
shrl
cmc
scas
sub
mov
dec
out
add
add
add
pop
jo
and
mov
outsb
jecxz
pushf
fdivrp
test
scas
enter
icebp
mov
xor
mov
mov
jl
xor
aaa
repz
add
mov
insl
test
ja
insb
xchg
and
push
push
rcrb
fwait
rorl
cld
jbe
flds
jns
push
pop
out
inc
test
test
jmp
cmp
mov
sub
cmp
sti
in
xchg
jg
and
addr16
pop
push
lret
xchg
or
clc
pop
movsl
pop
rolb
push
stos
or
sub
xchg
adc
ds
cmc
dec
pop
sub
adc
lcall
adc
and
add
jmp
imul
jmp
test
xchg
push
jns
test
xor
adc
pop
pop
dec
dec
push
aad
fdivl
xchg
mov
and
jmp
jb
andl
add
add
pusha
rorb
cmpsb
mov
and
push
out
add
add
add
pop
and
push
or
ret
lcall
loop
loopne
lods
imul
enter
xchg
add
into
xlat
pop
pop
pop
push
sub
mov
test
mov
mov
test
add
insl
xchg
subb
mov
add
jo
jmp
xchg
insb
fistpll
adc
push
pop
cmpsl
icebp
cmpsl
sbb
mov
xlat
or
mov
hlt
dec
jl
adc
inc
icebp
jge
cli
mov
les
popf
cmpsl
nop
sbb
and
push
push
test
or
pushf
test
orb
dec
ret
pop
mov
jg
lods
addl
fs
xor
inc
mov
fldt
mov
sub
pusha
mov
push
ja
aad
xor
ljmp
push
stos
inc
jmp
mov
and
or
std
jbe
dec
in
sti
and
add
add
gs
testl
mov
add
add
add
leave
js
movsl
push
inc
gs
xchg
and
mov
sbb
jge
and
jns
loope
test
shl
pop
sbb
xchg
aas
lret
test
pop
aam
subb
sub
hlt
mov
dec
xchg
sub
add
xchg
lea
icebp
jae
or
pop
nop
mov
sub
xchg
xchg
mov
in
dec
push
in
shld
xor
imulb
and
call
mov
inc
fs
js
call
inc
xchg
sbb
lock
sub
cmp
fsub
jl
and
fisttps
mov
subl
stos
leave
lret
sbb
sti
mov
pop
jbe
mov
pop
std
loop
cmp
mov
outsl
mov
pop
jp
dec
push
std
sub
push
int3
sub
dec
pop
mov
lods
xor
scas
adc
sub
js
test
test
nop
mov
and
daa
lahf
mov
pop
das
cmp
je
pop
icebp
add
add
add
sbb
pop
add
js
jae
loopne
cmp
jno
aaa
cmpsl
add
shlb
and
xchg
push
ffree
enter
mov
sbb
mov
mov
ljmp
sbb
xor
mov
mov
enter
push
test
cmp
xor
jge
push
cmpsb
gs
lds
inc
or
fiaddl
cmpsl
add
xchg
out
xor
gs
fwait
mov
cmc
or
pop
xchg
xor
and
aaa
sahf
bound
adc
daa
insb
fistps
fsubr
sti
inc
int
incb
pop
repnz
sbb
add
movsl
int
repnz
loopne
pop
cmpl
mov
cwtl
lea
iret
push
out
pop
xchg
xchg
inc
in
mov
ja
jp
push
insb
xchg
ret
mov
mov
test
jmp
jae
dec
popf
pushf
cmpsl
flds
cld
das
push
sub
sub
push
inc
jl
sbb
add
add
fucomi
xor
and
add
add
jp
and
rorl
mov
repz
sub
sbb
pop
jae
push
push
and
sub
sbb
data16
pushf
jns
pop
mov
xor
jmp
mov
imul
jp
add
lds
inc
je
icebp
aaa
cwtl
fimull
jae
faddl
cmp
test
sub
jg
lea
xchg
mov
jmp
scas
das
jge
fldl2e
jmp
dec
jg
pop
dec
or
xor
lret
imul
pop
pop
adc
data16
mov
hlt
hlt
push
jge
mov
imul
jnp
xor
push
out
into
sbb
add
dec
jmp
cmp
daa
add
insl
out
xor
jmp
sub
popa
jg
cmpl
mov
adc
cmp
sub
mov
add
xor
bound
jbe
push
inc
pop
jns
aas
loopne
sub
mov
add
add
cmp
mov
fs
push
ret
mov
xchg
shr
mov
daa
dec
mov
test
lret
gs
xchg
dec
adc
add
pop
sub
aad
push
clc
push
jb
gs
jmp
repnz
insl
dec
mov
xor
scas
sub
inc
mov
push
test
inc
orb
adcb
js
lret
adc
mov
adc
lods
mov
test
fldt
inc
add
call
out
add
xchg
mov
stos
dec
dec
not
test
jb
push
push
daa
push
push
addr16
popf
pop
xor
ja
fcoml
loopne
ret
mov
cltd
fsubl
and
sahf
mov
test
bound
es
and
lret
push
gs
pusha
lock
mov
dec
cmp
out
fdivrs
xchg
aam
push
bound
in
ror
lock
mov
xchg
shlb
jb
lret
add
add
jnp
mov
sbb
in
hlt
add
add
add
inc
or
inc
repnz
mov
rcr
test
data16
xchg
xlat
pop
jno
movsl
ds
inc
dec
mov
movsl
push
ljmp
mov
push
test
jl
imul
sbb
add
movsl
mov
mov
fistl
outsb
les
sbb
inc
push
inc
test
mov
inc
aad
cmp
fadd
movsl
and
or
gs
dec
xchg
dec
fdivl
mov
cmc
lds
dec
and
popa
enter
fdivl
jg
inc
cwtd
inc
dec
fcoml
idivl
inc
stc
cmp
test
or
mov
push
mov
test
inc
sbb
out
and
rcrl
insl
lret
mov
nop
pop
or
out
and
fildll
jno
fsubrs
pop
mov
rorb
inc
add
add
imul
shrb
push
add
add
push
pop
fwait
adc
jl
mov
into
push
shlb
iret
addr16
dec
or
mov
lods
cmp
fsubrs
leave
dec
inc
lea
cmp
push
es
mov
cmp
mov
aas
adc
cmp
ret
lahf
idivb
mov
scas
in
in
pop
pusha
ds
add
pop
xchg
pop
sub
cmpl
jmp
jno
or
mov
gs
cmc
pop
nop
and
add
inc
mov
jo
mov
dec
jge
adc
pop
pop
fs
out
jp
sarb
pop
mov
mov
xorl
xor
xchg
pop
push
or
fwait
push
gs
subb
movb
add
sbb
jae
push
add
pop
in
and
push
daa
fisubrl
inc
jno
in
jg
xchg
adc
sbb
in
dec
sahf
xchg
xchg
mov
idivl
imul
add
int3
mov
add
stos
xchg
mov
pop
sub
int
test
xchg
aad
cmp
out
sbb
popf
jmpw
xor
in
jae
hlt
shlb
or
setne
adc
mov
iret
mov
cmp
inc
mov
and
pop
sahf
sub
inc
push
jle
cli
cmpl
insb
dec
lahf
shr
sub
cltd
mov
mov
out
sbb
inc
inc
mov
add
rcrb
addb
dec
test
rcrb
insb
fldl
cltd
xlat
jge
push
jbe
les
test
xlat
popa
lret
icebp
rcrl
out
xchg
mov
in
xor
lcall
cmp
cli
jne
push
movsl
xchg
and
lcall
dec
test
push
jo
dec
lods
hlt
cs
mov
xchg
dec
mov
xor
mov
inc
test
mov
ficompl
daa
sub
add
add
add
adc
xchg
and
add
pop
shr
out
or
pxor
push
mov
push
push
or
lea
lock
and
mov
or
test
pop
xor
loop
popa
dec
fidivrl
add
hlt
cmp
xchg
inc
mov
in
pop
xchg
lret
ret
mov
cwtl
ds
popf
stc
mov
xlat
cld
pop
mov
pop
push
pusha
mov
dec
ret
clc
popa
pushl
loope
xchg
out
push
mov
rcll
or
movsb
idivb
sahf
roll
or
fnstsw
cmpb
ja
mov
push
push
mov
stos
leave
xor
inc
scas
push
repnz
lea
data16
hlt
shll
andl
mov
xchg
adc
lods
and
sbbb
push
bnd
add
add
push
pop
push
jmp
shlb
clc
add
add
add
sub
push
movsl
sub
or
mul
mov
leave
les
ss
and
mov
popa
lea
or
mov
lods
mov
lcall
mov
dec
cmp
ss
int
in
or
arpl
scas
inc
nop
in
shll
in
ljmp
fsubl
jmp
mov
enter
adc
insl
mov
out
ret
stc
lret
sub
pop
and
pop
jecxz
enter
unpcklps
js
adc
inc
push
sub
nop
mov
mov
imul
lods
mov
daa
lods
sub
mov
mov
xlat
jmp
jbe
les
xchg
pop
out
xchg
cwtl
lret
imul
pop
loope
and
insb
push
push
xor
scas
stc
pop
fs
subl
enter
into
jecxz
pop
inc
pop
lods
pop
cli
cmc
cmpsb
lret
je
mov
add
add
stos
and
mov
xor
mov
mov
mov
out
stc
dec
lods
lods
push
pop
jle
mov
xor
mov
dec
cld
in
pop
inc
dec
jbe
test
in
mov
sub
test
leave
sbb
popf
xchg
shl
jp
mov
mov
cmp
fwait
aad
stc
repnz
pop
pop
push
pusha
imul
inc
shr
std
es
lods
inc
inc
std
adc
icebp
xor
xchg
cli
mov
xchg
or
shl
test
cld
push
fidivs
lea
xchg
int
cmp
or
adc
aas
push
mov
ret
push
inc
fsub
push
sahf
das
jmp
ss
outsb
test
push
adc
inc
ja
ret
and
or
daa
stc
cmp
js
push
dec
inc
enter
mov
leave
jg
pop
push
add
mov
cwtl
and
adc
das
stos
cltd
inc
popf
jae
out
xor
jl
add
add
add
mov
dec
scas
int
and
pop
mov
cmp
loopne
push
jmp
or
adc
pop
mov
in
push
fbstp
xor
inc
push
mov
adc
inc
arpl
mov
dec
inc
movsb
insb
mov
mov
addb
ljmp
imul
pop
std
shll
and
stc
mov
mov
mov
jmp
or
mov
pusha
or
dec
call
push
xor
pop
cmpsb
push
and
fnstcw
mov
inc
sub
sbb
in
cmpsl
fmull
enter
jne
psubusb
inc
or
cld
mov
or
inc
call
jle
jb
adc
push
mov
mov
mov
cltd
xorb
inc
lcall
aas
mov
bound
cmpl
or
es
jns
insl
cmp
in
pop
sub
in
mov
nop
test
aam
int
aaa
das
aam
sbb
mov
sti
add
add
add
push
xchg
test
daa
call
mov
mov
inc
sub
cs
rolb
fstps
aam
mov
das
or
mov
fucomip
andl
dec
and
pop
jle
fldln2
ret
js
scas
inc
push
lods
enter
fldcw
pop
gs
mov
xchg
or
aas
stos
shlb
xlat
das
mov
cmc
dec
jmp
jb
adc
pop
fnstcw
std
inc
pop
arpl
add
pop
xchg
dec
inc
cmp
add
ja
push
ret
frstor
jge
push
inc
ds
pop
mov
shlb
pop
pop
lret
fdivr
jecxz
and
cmp
stos
push
repz
mov
fadds
divl
adc
inc
in
sub
in
xchg
in
fidivl
in
jecxz
nop
dec
mov
jno
icebp
jle
xor
add
push
inc
mov
adc
or
mov
test
clc
outsb
lock
add
pop
arpl
addr16
sub
add
adcb
add
add
add
add
mov
popl
sub
fcompl
testl
jbe
push
mov
xchg
xchg
xchg
dec
mov
imul
pop
dec
mov
ficoms
push
aaa
mov
jge
inc
cmpsb
sub
imul
imul
fprem
out
jb
adc
out
pop
mov
sub
or
sbb
jg
jg
add
mov
jb
mov
mov
fcoms
nop
int3
mov
mov
cmpsl
jbe
dec
imul
ret
mov
stos
data16
cli
fldl
pop
push
mov
jle
add
and
ja
push
stos
push
arpl
gs
test
mov
cmp
pop
std
in
mov
inc
ljmp
mov
popa
jmp
clc
mov
and
aaa
out
cmp
cmp
pushl
xchg
xor
inc
clc
mov
std
add
add
add
sub
jae
sar
outsb
sarb
mov
cli
stos
repz
rorb
cmp
and
stos
sbb
cli
adc
xchg
cmpsl
jg
test
mov
or
mov
xlat
bound
popf
mov
xchg
scas
mov
lds
xchg
mov
movb
stos
lret
mov
in
pop
pop
fs
cltd
movsl
push
pop
es
loopne
jns
jle
mov
data16
sbb
push
sbb
lahf
mov
divb
cmp
lret
fadds
push
fildll
enter
imul
mov
mov
popf
fstps
outsb
pop
mov
ds
loop
push
mov
mov
push
jne
mov
xchg
lcall
ds
pop
sbb
jmp
dec
jb
xor
xchg
mov
sub
repnz
add
add
push
scas
mov
movsl
jns,pn
incb
add
add
adc
xor
add
stos
mov
inc
pusha
add
mov
push
imul
in
cmp
sarb
mov
jg
into
sbb
mov
xor
xchg
test
pop
jg
mov
mov
mov
movsb
or
sub
out
inc
jo
movsb
dec
pop
psrad
cmp
pop
add
add
dec
aas
lods
es
jmp
sbb
push
mov
test
xor
sti
fdivrs
daa
insb
pop
xchg
inc
mov
adc
push
outsl
shl
mov
mov
xlat
xor
pop
lds
lret
loope
cmpsl
xchg
inc
jne
cwtl
or
pop
push
add
icebp
scas
into
cli
mov
loop
mov
mov
rcll
inc
cltd
mov
ret
repnz
xchg
cmp
into
lods
mov
scas
repnz
ss
and
add
aaa
xchg
and
movsl
mov
mov
mov
pop
ljmp
add
cmp
hlt
mov
out
mov
jge
sub
adc
ja
mov
jb
jp
jle
push
xchg
xor
bound
scas
daa
dec
add
push
les
inc
push
push
push
cmp
inc
push
cli
jp
sbb
je
pop
jnp
ret
or
mov
and
pop
xor
movsl
mov
push
lret
lock
push
inc
adc
lret
sbb
xchg
pop
add
call
inc
jo
cmp
fs
adc
cltd
fwait
xor
pop
push
lods
inc
add
or
push
jns
shll
adc
bswap
les
mov
dec
mov
mov
clc
fs
leave
outsb
bound
push
ss
push
cmp
add
sbb
push
xor
mov
push
mov
add
mov
jne
je
bnd
les
fdivl
mov
mov
das
fsts
add
test
pop
inc
jmp
hlt
push
cld
push
lds
lahf
icebp
mov
cs
sub
jb
jnp
cwtl
mov
add
test
jno
aam
jo
xor
int3
xchg
sub
mov
push
jg
in
push
jne
inc
call
sub
in
out
inc
in
push
dec
rcrl
xchg
out
movsl
scas
out
outsl
mov
loope
xor
mov
jnp
or
bound
jnp
sub
push
pop
int
fdiv
xor
mov
movsb
lcall
cmp
cltd
adc
sahf
pop
xchg
js
cli
sub
jno,pn
dec
pop
sahf
cli
xchg
push
sub
mov
out
insb
daa
push
outsb
cmp
sarb
inc
adc
fisubs
cmp
out
std
ss
xchg
dec
jmp
sbb
aaa
sub
loopne
pop
cld
and
cs
rcrb
test
inc
stc
mov
mov
lods
imul
lcall
add
add
mov
jns
fwait
mov
jo
adc
enter
adc
add
pop
jne
push
cltd
pop
das
or
jbe
imul
xchg
dec
mov
dec
mov
pop
xor
sub
test
orl
lods
cmpsb
xchg
mov
sub
mov
js
pop
ljmp
pop
inc
mov
mov
jmp
mov
mov
add
aaa
std
movsb
bound
push
stc
cmp
xchg
mov
mov
in
add
mov
xor
ss
outsb
mov
sbb
push
enter
ja
dec
rorb
ja
jecxz
adc
and
aaa
inc
cmc
or
and
pop
stos
not
jmp
mov
ss
fdivrs
cli
or
aaa
shl
and
and
iret
das
inc
add
add
add
mov
cmp
add
mov
add
add
sbbl
dec
imul
repz
pop
addr16
mov
dec
cmpsl
mov
cmpsl
fcmovnu
loopne
xchg
pop
mov
mov
in
or
xor
aad
mov
jg
or
dec
mov
mov
jno
inc
xor
xor
ljmp
test
and
pop
push
inc
push
sub
mov
andb
cmpsb
sti
xchg
mov
cmpsb
add
jle
dec
xlat
movsl
scas
pop
inc
inc
xor
push
mov
ss
xor
or
in
data16
call
clc
cmp
mov
movsb
dec
xor
pop
push
repz
xchg
imul
mov
ljmp
cmpsb
sub
test
pop
outsb
pop
mov
pop
or
outsb
xchg
iret
enter
add
lret
pop
push
cmp
push
fmuls
add
int3
repz
sbb
outsb
fcomp
xchg
enter
push
fbld
and
mov
add
add
pushf
movsb
mov
and
notl
pop
push
clc
psrld
imul
lcall
inc
jb
push
inc
movntq
out
xor
mov
iret
shlb
adc
jle
aam
sarl
sahf
inc
imul
xchg
cmp
jp
and
js
add
aam
bound
pop
testb
outsb
jp
dec
js
cltd
fwait
out
fcomps
mov
jno
push
cmp
sub
add
iret
sub
dec
ret
xor
dec
enter
adcb
lret
xchg
cmp
fistl
inc
scas
mov
dec
push
arpl
das
in
outsl
mov
inc
lea
mov
sbb
or
xor
push
std
inc
inc
pop
movsb
push
mov
into
add
mov
and
shrb
dec
sbb
aaa
pop
jg
popa
outsb
jle
sbb
leave
dec
loopne
cmpsb
jge
adc
flds
add
add
into
fwait
add
mov
mov
add
add
add
sbb
inc
inc
pop
adc
adc
testl
outsb
clc
xchg
jae
mov
and
add
shll
push
jp
iret
or
sbb
mov
dec
xchg
cmpb
add
mov
divb
jno
jecxz
ss
loopne
cmp
inc
dec
jne
out
inc
and
dec
movsb
pop
sbb
mov
push
frstor
xchg
fidivl
jns
cmp
sub
sbb
cmpsb
dec
add
sub
and
imul
lret
mov
adc
mov
cmp
xor
out
stos
lods
xor
outsb
push
jae
sub
test
sbb
jmp
test
dec
adc
fisubrl
cmp
fwait
pop
loopne
add
xlat
outsl
or
mov
jecxz
cwtl
sub
mov
fcoms
repz
mov
mov
dec
stos
jp
aas
jl
test
out
mov
pop
sarb
in
or
test
add
add
add
push
add
adc
ret
mov
daa
adc
jp
cltd
sbb
in
dec
fsubs
lea
or
mov
scas
jp
or
aad
xor
fisubl
lcall
xor
and
xchg
jnp
push
std
bound
roll
aam
sahf
xchg
rorb
jnp
fsubrs
lds
sbbb
in
daa
inc
and
mov
mov
jno
aam
mov
in
mov
xorb
out
popa
or
xchg
xchg
push
sub
adc
mov
jmp
xchg
mov
out
jo
push
cmp
ret
pop
cmp
scas
or
icebp
das
inc
dec
mov
pop
or
into
inc
mov
push
out
push
xlat
lds
push
jle
or
clc
jmp
push
xor
jb
xor
in
sub
jl
sti
inc
out
aas
mov
sar
nop
lods
out
push
add
add
add
or
adc
out
push
mov
lea
sub
pop
sub
lcall
orl
mov
data16
movsb
sub
mov
ror
jecxz
mov
cld
ss
push
ret
stos
enter
dec
aas
stos
or
in
stos
xor
mov
adc
fsubrs
stos
je
cmp
ds
popl
jp
inc
mov
movsb
fisttpll
outsl
aam
and
pop
inc
pop
shrl
es
fisubl
sub
xchg
test
push
stc
scas
push
dec
jge
xchg
xchg
push
push
xor
cmpsl
les
cltd
dec
cmp
jl
movsl
cmp
addl
and
jae
jne
callw
ljmp
and
mov
add
sbb
pop
lds
mov
mov
cmpsb
pop
inc
pop
data16
in
add
add
bnd
dec
leave
and
pushf
lods
mov
add
add
add
push
adc
adc
dec
dec
sbb
xor
push
popa
loopne
movsl
iret
popa
fbstp
push
pop
add
insb
aam
leave
mov
outsl
ja
cmc
xor
mov
pop
lods
jae
add
arpl
stc
cmp
adc
xor
push
repz
ja
inc
push
rcrl
stos
add
dec
inc
fnstcw
outsl
sub
mov
shll
arpl
cld
jae
test
in
push
jecxz
cmc
inc
inc
imull
daa
sub
ljmp
loop
lds
cli
cmp
or
idivb
push
lret
xor
int3
add
jmp
push
mov
stc
mov
repnz
pushf
jns
ret
mov
add
loope
or
std
and
aad
outsb
xchg
stos
mov
mov
cmp
xor
adc
mov
add
add
in
out
ja
filds
mov
add
add
add
int3
ljmp
scas
mov
dec
loop
stos
mov
push
pop
cmp
cmc
movsb
inc
sbb
insl
add
xor
lcall
test
lods
jp
xor
fs
push
pusha
ret
subb
hlt
sub
mov
out
jnp
nop
or
data16
aad
sub
push
stc
mov
pop
or
bound
jmp
cs
dec
lret
scas
stc
insb
test
xor
imul
clc
and
addl
jl
fistps
scas
aam
cmpsl
mov
faddp
addl
fs
mov
movsl
lahf
adc
mov
inc
cld
jge
jmp
push
int
ds
lea
push
push
into
add
or
mov
cmp
adc
pop
jecxz
mov
test
dec
xchg
xchg
jne
das
xchg
subl
push
cmpsb
push
adc
jle
lret
fidivrl
inc
mov
mov
jbe
xchg
jne
cltd
scas
test
in
inc
push
or
dec
dec
loop
or
add
add
push
inc
fucom
out
test
sti
loopne
lret
sub
push
add
fs
dec
scas
int3
add
mov
lods
jle
scas
ja
add
ret
xchg
negl
jne
dec
fimull
ret
repz
xchg
pop
push
fistl
insl
inc
xchg
xor
and
inc
cmp
arpl
fwait
and
dec
lcall
jecxz
ror
push
pop
cmc
cs
xorb
add
dec
test
xor
outsl
adc
mov
test
lret
aam
je
dec
gs
pop
repz
or
add
and
push
xor
mov
mov
out
icebp
ja
mov
mov
iret
cmp
fcoml
dec
out
pop
mov
cmp
pop
and
fs
push
inc
push
mov
out
test
lret
add
mov
jg
neg
pop
daa
inc
es
xchg
mov
add
add
mov
lock
mov
dec
ret
push
mov
data16
ljmp
lds
sti
jns
add
pop
daa
and
mov
or
xor
loope
jb
cmp
cmp
sarb
add
imul
adc
jno
push
ds
push
hlt
stos
pop
scas
jle
scas
lea
scas
scas
adc
lock
jle
lret
or
sbb
scas
mov
ss
stc
xchg
xor
std
test
es
out
adc
dec
mov
dec
rcl
ret
movsl
mov
mov
cld
lahf
sbb
lret
push
mov
fs
xor
fwait
jl
mov
xor
push
dec
pop
hlt
aaa
push
stos
dec
add
cmpsb
pop
mov
inc
bnd
popf
ret
mov
loopne
inc
jae
or
pop
dec
es
filds
lods
sub
mov
pusha
pop
fisubs
push
xor
lcall
add
sti
jg
cmp
je
cmp
or
add
add
mov
mov
dec
arpl
push
cmpsl
push
lret
cld
mov
xor
cmp
test
cmpsb
cmpsb
fwait
mov
inc
adcl
stos
xchg
aaa
fisubs
int3
jg
xchg
push
lds
mov
stos
jne
xor
xchg
dec
lods
cmpsl
jb
push
inc
dec
dec
test
aad
divl
or
lcall
xchg
je
dec
lret
sub
mov
enter
lods
stc
loope
sbb
xchg
push
pop
aad
mov
add
mov
cmp
xor
ja
cmp
add
cld
outsb
xchg
jns
lock
mov
xor
popf
shll
mov
std
sub
xlat
jle
xadd
call
insb
andl
in
inc
movsl
repnz
pop
aas
jne
into
rcrb
subb
lcall
add
or
int
fs
cmc
dec
sub
cmp
in
mov
addb
add
scas
aam
jnp
fstp
fcompl
push
jbe
xchg
les
add
add
je
add
iret
add
jnp
fildll
mov
ret
repz
mov
pop
aaa
add
dec
dec
mov
subb
lret
or
test
cmpsl
inc
enter
mov
push
or
movsb
int3
pop
loop
xor
out
push
inc
jb
add
les
mov
pop
pushf
mov
push
xlat
mov
cmp
imul
lock
popa
popf
mov
mov
jecxz
and
mov
test
into
mov
xor
subl
sub
adc
movsl
lret
mov
xor
aaa
dec
aad
scas
xchg
repnz
mov
mov
repnz
scas
sbb
xchg
jbe
push
andl
ret
sbb
outsl
pop
and
mov
loope
loope
into
adcl
mov
std
je
inc
jo
mov
cmp
in
out
and
dec
loop
sbb
inc
call
add
add
outsl
mov
add
push
jecxz
enter
add
add
incl
xor
mov
scas
pop
enter
rorb
rcll
fs
pop
in
addl
xchg
icebp
mov
dec
out
bound
cmc
iret
idivb
xor
jns
pop
inc
iret
das
xchg
cld
popf
cmp
adc
xchg
xchg
hlt
xchg
sahf
cmpsl
fnstsw
aaa
xor
cld
push
ljmp
pop
stos
jle
xor
inc
lret
push
xchg
adc
jne
cmp
fnstenv
test
pop
rclb
push
stos
out
add
icebp
add
ficompl
repz
lret
shld
inc
sbb
pop
cmp
scas
stos
data16
negl
call
push
cmp
adc
adc
je
addr16
mov
iret
test
pop
mov
test
jbe
sbb
shl
jb
add
add
jmp
fst
rorl
cmp
push
add
add
add
shrl
shll
lea
in
lret
cmp
jo
fmull
rcll
out
test
out
ret
jns
adc
decl
sub
les
or
mov
and
cmp
ret
aas
iret
imul
inc
es
push
mov
daa
pop
xchg
add
leave
sbb
orb
insl
les
adc
pop
fldt
rcrl
ret
mov
je
sub
and
mov
bound
sub
and
fcmovnb
ds
mov
fcmove
mov
rclb
loop
into
call
ret
ret
movsl
push
cmp
pusha
stos
rorb
dec
add
pop
cmpsl
popa
xchg
pop
jmp
push
sahf
and
xchg
inc
jnp
sti
cmp
outsb
xor
inc
das
jle
xorb
cmp
add
iret
and
daa
jle
shll
ds
xor
xchg
lds
rcll
int3
rorb
add
add
add
xchg
sbb
jnp
les
std
sub
pop
icebp
sub
xor
enter
xlat
fsubrl
test
xor
adc
fisubl
jg
and
sub
dec
aaa
popf
add
pop
inc
imul
or
sub
adc
and
sahf
call
xlat
and
stos
cwtl
mov
push
shlb
sub
mov
xor
cmp
mov
dec
jge
ret
out
push
push
pop
mov
mov
test
push
cmpsb
pop
dec
icebp
hlt
xchg
into
punpckldq
cmp
jno
popa
fists
or
adc
cli
xchg
bnd
popa
cmp
outsl
stos
and
xor
or
stc
push
dec
sub
filds
aas
adc
lret
jo
push
mulb
or
add
decl
stos
cmc
cmc
xlat
mov
dec
and
ret
mov
jb
stc
stc
rolb
add
add
cli
inc
jg
int
xchg
lods
or
or
aam
add
add
add
inc
sbb
add
jbe
divl
cmpsb
inc
int
dec
icebp
lcall
inc
cltd
push
sub
ss
xor
mov
mov
xor
pop
push
jl
pop
sub
adc
rorl
inc
ret
leave
leave
xchg
add
int3
aaa
arpl
mov
inc
addr16
and
adc
sub
xchg
push
ja
mov
fbstp
jmp
iret
add
testb
repnz
mov
xchg
jo
arpl
mov
popa
adc
and
icebp
lods
popf
lods
pushf
fists
xor
scas
lcall
push
lods
jg
inc
pop
out
frstor
mov
xchg
cmp
xor
adc
mov
test
stc
dec
mov
sub
lcall
test
in
push
negl
pusha
push
or
jle
scas
sub
cwtl
pop
inc
and
pop
add
mov
add
xchg
std
cmp
jle
fistpll
fiaddl
add
add
add
adc
int3
aaa
sbb
lret
push
pop
jne
andl
pop
das
loopne
lea
cmp
repz
insb
xchg
fistpl
xchg
loope
fildll
fs
mov
xor
stc
and
mov
push
and
aad
push
push
sti
lret
dec
std
iret
cld
sti
andb
sub
cltd
xor
cs
jle
jns
pop
xchg
mov
std
jl
std
out
into
sub
loopne
xor
cmc
inc
inc
ret
xchg
push
xchg
scas
lods
ret
jmp
jbe
stos
dec
test
neg
in
rorl
pop
mov
pop
leave
dec
xchg
mov
call
jp
mov
adc
pop
subl
pop
ds
xor
mov
addb
push
adc
cmc
add
mov
pop
jmp
and
outsb
mov
jg
loop
pop
cmp
jecxz
mov
add
xchg
pop
lds
xlat
ficompl
inc
mov
adc
add
add
adc
cmp
dec
imul
mov
xchg
popa
hlt
adc
add
call
cmp
mov
mov
insb
xchg
push
enter
add
lret
movsl
mov
mov
add
test
inc
bound
xchg
jne
jbe
stos
jne
and
mov
mov
cmpsl
sti
xchg
sbbb
repz
pop
xor
int
cmpsb
jae
xchg
iret
movsw
jmp
pop
xchg
pop
imul
pop
mov
inc
daa
leave
cli
in
mov
jo
adc
mov
mov
test
sub
mov
test
fisubl
sub
sub
int
mov
mov
ljmp
push
dec
mov
sahf
add
xor
xor
cmp
lea
push
jecxz
test
cmp
cmp
imul
fbstp
ljmp
add
dec
jmp
dec
scas
iret
outsb
jmp
push
test
cwtl
or
add
add
xlat
addr16
int
cmpl
daa
jbe
stc
pop
sbb
pop
and
adc
mov
rorb
pop
pushf
xlat
push
push
movsl
mov
push
jl
outsb
mov
bound
adc
jp
adc
sbb
imul
pop
sub
les
adc
push
incb
fbstp
lea
push
inc
mov
dec
mov
std
subl
sub
dec
mov
rcll
xchg
std
sbb
out
push
and
and
pop
mov
dec
lahf
sub
push
xchg
jg
sbb
sbb
push
jnp
insl
and
imul
add
shll
lds
sbb
repz
jp
jge
cmc
push
lods
push
je
mov
mov
jnp
sbb
es
cmpsl
mov
mov
les
pop
add
fbstp
dec
lock
jmp
push
dec
sbb
std
sbb
stc
cld
or
jo
mov
add
add
push
mov
jmp
sahf
mov
inc
test
add
xchg
xor
or
scas
sahf
rcrl
loop
sahf
jecxz
nop
mov
or
or
ficomps
mov
pop
push
jmp
add
cwtl
imul
stc
cli
cvtdq2ps
sbb
inc
fs
fs
sbb
aaa
daa
lods
xchg
sub
mov
dec
adc
in
inc
mov
lret
imul
xchg
push
push
mov
sub
push
pop
insl
les
paddusb
mov
push
jp
daa
sbb
add
fstpt
divb
aad
aas
push
mov
add
gs
int
inc
fimull
mov
pop
sub
bound
mov
inc
pop
test
add
sbb
xchg
xchg
xlat
mov
mov
pop
aas
jne
divb
xor
add
lock
mov
aad
cmp
jecxz
xor
negl
adc
pop
xchg
cmpsb
dec
sbb
ds
add
add
test
xchg
sub
xchg
push
push
mov
cli
in
xchg
inc
in
add
cmpb
mov
add
enter
cltd
movsb
lcall
pop
cmp
add
jge
sbb
and
mov
adc
or
lods
daa
shlb
dec
push
psraw
dec
or
cwtl
pop
enter
sub
push
es
loopne
push
xlat
xchg
mov
les
xchg
mov
loop
sbb
pushf
push
pop
push
sbb
mov
xlat
jl
pop
add
test
or
sub
mov
mov
scas
or
clc
mov
ret
xchg
ss
mov
sbb
fwait
call
mov
pop
dec
sub
rcl
movsb
dec
int3
cwtl
jns
dec
pop
into
or
sub
jle
stos
movsl
pop
xor
jnp
adc
dec
inc
inc
dec
fbld
push
add
mov
dec
pushl
repz
jl
in
push
add
add
add
daa
cmp
sbb
inc
cmp
pop
daa
xchg
les
mov
cmpsl
mov
xchg
push
insb
incb
movsl
mov
aas
cld
xchg
adc
mov
outsl
shlb
mov
shlb
inc
insb
or
pop
push
hlt
xor
or
mov
div
ljmp
cld
int3
test
stc
icebp
cmp
lret
mov
pop
imul
dec
mov
aam
in
in
in
or
mov
les
xchg
add
cltd
rclb
mov
adc
and
repnz
push
std
dec
movsb
cs
xchg
cmp
call
and
bound
fsubr
dec
ret
out
sub
aad
jno
push
stc
adc
jle
pop
inc
pop
pop
ds
add
repz
push
jmp
jmp
push
cmpsl
mov
cmp
add
lret
aas
call
mov
or
cli
dec
add
mov
sub
add
add
inc
ja
pop
aas
dec
push
cmp
lock
add
add
add
or
mov
sbb
cmpsl
jg
addb
cld
inc
push
dec
popf
dec
shll
push
inc
inc
movq
les
int
xchg
jge
sbb
mov
push
adc
xchg
cmp
js
mov
inc
fucomi
xor
mov
gs
push
xchg
and
mov
inc
and
mov
ds
push
mov
mov
insl
adcl
sbb
and
inc
fisttpl
test
std
jnp
rorl
jo
mov
repz
aad
iret
popf
into
mov
das
lret
ret
push
cmp
test
cs
int3
and
add
adc
xchg
push
mov
aam
sbb
fstl
loop
push
pop
add
imul
lock
add
sbb
xchg
ss
cmpsb
imul
in
cmpsb
imul
adcl
xor
add
add
xchg
jae
ja
div
mov
push
xchg
xor
add
add
jo
and
cmp
jmp
les
lahf
mov
inc
addr16
and
mov
sbb
outsb
dec
and
ret
sub
pop
cmpsb
pusha
add
pop
aam
loopne
sub
pop
xor
mov
push
arpl
jmp
push
mov
and
xor
xchg
dec
std
and
ficomps
mov
xchg
push
js
cmpb
dec
add
push
orb
adc
mov
sti
adc
shlb
ss
fsubrl
les
enter
fdivs
scas
out
mov
orl
and
xor
push
hlt
subb
lret
lods
mov
les
push
out
pop
sbb
js
sbb
add
add
and
dec
ja
in
jns
int3
push
cmp
mov
dec
fisubs
scas
cs
mov
xor
cli
std
jg
push
pushf
dec
sbbb
add
add
stc
or
shll
shlb
xor
mov
push
pop
sbb
ss
cmc
out
popa
jne
addr16
sbb
pop
out
add
lret
rclb
mov
shrl
add
mov
fs
rcrl
cmp
in
shll
push
dec
jecxz
sub
pop
mov
mov
inc
pusha
and
sbb
paddusb
mov
fs
pop
shlb
outsb
sbb
sub
push
ds
lcall
ds
dec
ja
je
sbb
or
push
sbb
insl
xor
lret
inc
lds
test
lcall
pushf
lret
fwait
sbb
leave
or
pop
adc
mov
sub
fwait
add
push
fcoml
outsl
or
fidivl
mov
lcall
into
xor
xlat
pop
dec
lret
iret
lock
in
mov
jg
adc
testl
incl
sbb
jne
stos
cld
sbb
add
add
cltd
push
loop
and
jmp
dec
dec
push
icebp
jb
iret
mov
addr16
push
stos
lahf
sbbb
jo
ret
test
rcll
inc
jns
hlt
add
jno
int3
push
cmp
and
dec
push
xor
or
push
pop
push
or
or
test
stc
orb
lcall
movsl
mov
das
aas
in
xchg
add
sub
scas
xchg
mov
xchg
pop
stc
mov
mov
push
xchg
or
sahf
lock
inc
test
jmp
fs
inc
mov
pop
subl
fcoml
sub
aaa
fcmovnb
insl
mov
pusha
cmp
mov
sbb
stos
adc
insb
lods
aam
xor
je
xchg
dec
out
and
dec
clc
mov
sub
inc
xchg
aas
inc
mov
jge
jmp
sahf
imul
jecxz
mov
add
mov
push
es
jg
pop
or
xor
push
add
add
add
add
sbb
mov
xor
or
rcll
mov
mov
pop
mov
sub
sbbb
arpl
sub
das
inc
pop
data16
or
icebp
bound
xor
pop
fisubrs
fidivrl
push
fbld
hlt
sub
mov
loopne
pop
mov
ret
push
or
pop
add
bound
xchg
mov
mov
cmp
mov
cmpsb
out
cmp
arpl
xor
addl
push
and
or
rclb
jp
mov
and
jne
push
mov
test
and
xchg
test
imul
das
icebp
call
dec
mov
jns
and
and
sub
mov
push
add
bound
mov
pop
inc
jle
iret
pushf
cmp
mov
jns
xor
mov
pop
xor
push
clc
or
dec
push
cmp
sbb
add
sbb
push
jl
push
rclb
or
pop
mov
adc
test
ss
ret
or
push
imul
sbb
cmpsl
or
sbbl
int
jb
movsl
pop
aas
icebp
add
push
repnz
lock
nop
xchg
push
mov
jge
sub
jmp
cmpsl
ds
dec
push
mov
or
enter
scas
xchg
cmp
adc
lds
pop
leave
rclb
cli
cwtl
out
in
mov
and
mov
xchg
fstl
roll
pusha
inc
dec
xchg
sbb
xlat
pop
push
sub
repz
test
pop
leave
insl
add
int
push
pop
out
mov
rol
cltd
inc
xor
cmp
loopne
add
outsl
fwait
jge
shlb
popf
es
comiss
fwait
xchg
mov
adc
stc
dec
cwtl
push
mov
mov
cmp
cs
stos
inc
xor
cmc
std
hlt
ret
add
xor
mov
push
dec
or
add
add
add
call
jmp
push
outsl
lods
fdivrl
div
test
js
test
jmp
and
jb
andb
adc
outsl
jno
mov
cmpsb
and
cld
add
in
shl
sub
into
ljmp
push
xchg
sti
dec
cmp
jge
aam
adc
mov
out
ljmp
xor
pushf
lahf
in
pushf
dec
or
shll
sub
and
jp
lods
in
pop
aaa
jmp
adc
bound
pop
movsl
xor
gs
out
cld
jle
cmp
icebp
sub
jno
cmpsl
flds
dec
xchg
mov
or
sbb
pop
mov
sti
mov
adc
sbb
outsb
push
xor
mov
out
insl
fwait
lret
in
push
pop
insb
sub
pop
inc
or
insb
rol
sahf
mov
lods
push
icebp
xchg
add
ficoms
stos
sbb
call
mov
or
add
add
add
gs
data16
mov
dec
adc
sbb
sbb
ds
pop
adc
jno
sbb
fimull
and
jo
int
cmpsl
pop
enter
inc
je
pop
cwtl
or
pushf
push
fs
and
jne
pusha
mov
and
test
cltd
push
popa
xor
hlt
stos
cltd
cmp
rcr
scas
popf
pushf
inc
adc
adc
dec
sub
mov
in
mov
iret
fsubs
int
insl
fwait
sub
movsb
mov
stos
xchg
lcall
inc
into
or
std
adc
push
and
ret
or
push
fadds
clc
fst
jp
sarl
mov
xor
jmp
xor
push
and
push
push
data16
jns
icebp
pop
inc
and
dec
cmp
ret
imul
mull
bound
stos
and
subl
fstps
loope
in
in
mov
out
stos
jge
or
and
add
add
mov
bound
cmpsb
xlat
cld
inc
pop
xchg
std
or
mov
and
int3
push
pop
jmp
and
andl
sub
pop
push
cmp
enter
mov
jo
andb
add
ret
mulb
mov
jmp
sbb
inc
mov
loope
insb
cmc
push
cltd
push
stc
adcb
pop
icebp
cmpb
add
lods
jecxz
imul
lret
fildll
or
mov
fbstp
cwtl
je
daa
ss
cmpb
pop
pop
cwtl
notl
inc
mov
xor
popa
xor
mov
ja
sub
dec
jns
dec
stc
lock
add
fistpl
ret
cmp
sahf
loopne
lds
mov
push
sub
mov
or
jle
push
dec
jae
jae
and
mov
dec
or
out
xchg
iret
push
aas
loope
inc
push
adc
add
add
add
out
sbb
cmc
push
xchg
push
push
sub
sub
and
test
or
and
push
and
out
inc
inc
insb
fidivrl
enter
sbb
jle
fdivl
mov
arpl
pop
dec
xchg
ret
or
lret
enter
iret
test
mov
rclb
into
pop
nop
xchg
sahf
pop
movsb
ret
mov
xchg
shrb
add
mov
sarb
or
mov
jae
jmp
lret
mov
mov
shrl
sbb
jo
dec
fnstsw
les
pop
aaa
or
rcrb
xorl
les
iret
mov
pop
out
and
sub
add
add
rcrb
int3
shlb
jge
aaa
fcompl
jecxz
mov
int3
push
dec
mov
sahf
addr16
call
aam
add
cmp
out
loope
jns
out
or
xchg
and
add
add
xor
dec
dec
adc
lds
dec
push
or
roll
or
icebp
sti
pop
faddp
lahf
call
mov
or
mov
xchg
adc
repnz
mov
jge
shr
fwait
add
loop
push
cmc
xbegin
repz
fcoml
push
sub
xchg
fwait
out
pop
push
jg
fdivl
sub
push
js
or
movsl
cmp
cld
inc
cmpsl
add
xchg
stc
lods
xchg
lock
sub
jb
pop
or
cmpsl
test
mov
lock
cmp
les
and
jl
pushf
subl
xor
cmpl
mov
add
dec
xchg
test
das
add
das
push
lea
out
std
adc
dec
lods
js
ret
inc
ljmp
inc
jge
dec
cmp
fs
pop
rcrb
lds
test
sbb
sti
push
mov
jno
mov
sbb
add
add
add
xlat
push
cmp
xor
addl
cmpsl
sbb
jl
sbb
fnsave
iret
mov
xchg
mov
aad
inc
popa
or
xchg
mov
rcr
pop
aam
push
outsl
inc
loope
xlat
cmp
aad
inc
jb
jo
mov
mov
les
cli
dec
hlt
sub
jge
outsb
push
mov
jl
mov
jecxz
shll
fidivl
jecxz
adc
mov
test
sbb
loope
xor
and
xchg
push
pop
mov
movsb
or
sbb
mov
test
xchg
mov
inc
dec
push
pop
stc
mov
mov
mov
icebp
test
adc
inc
jns
cmp
rorb
push
xchg
inc
inc
sub
add
mov
dec
jecxz
and
mov
and
mov
sbb
jecxz
pop
inc
cmp
sub
bound
push
data16
bound
mov
adc
rorb
mov
dec
idivl
cld
ret
add
in
scas
and
add
add
mov
mov
mov
call
mov
testl
stos
dec
ljmp
fnsave
dec
iret
arpl
int
adc
repnz
fstp
out
inc
and
test
dec
imul
cmp
mov
sub
xor
pop
or
mov
imul
notb
test
xchg
int3
dec
nop
pop
stc
add
mov
shll
jmp
cld
mov
pop
popa
sbb
sbb
pop
xor
popa
wbinvd
fsubs
loop
movsb
cwtl
push
xor
mov
mov
pop
xor
mov
stc
jb
sbb
mov
mov
lahf
test
xor
xchg
aas
mov
jl
inc
and
mov
cmp
push
push
mov
iret
scas
adc
movsb
push
lcall
fistps
int
repz
add
ret
mov
iret
mov
jbe
aam
and
add
add
add
sbb
sub
mov
stos
cli
jge
pushf
enter
xchg
pushf
stos
jecxz
xchg
in
and
mov
or
sub
and
sbb
inc
jmp
popa
and
pop
dec
dec
mov
cmp
jle
incb
add
mov
adc
cld
pop
cmpsb
int
cmp
scas
and
ja
das
mov
pushf
inc
test
in
lret
cmpsl
movsl
and
lret
adc
lea
xor
add
fdivs
lock
out
pusha
out
popa
into
nop
mov
mov
insb
sub
sbb
push
adcl
sbb
clc
jp
sub
mov
test
out
mov
pop
inc
mov
sub
add
popf
sbbl
outsb
repnz
dec
inc
shlb
sbb
fldcw
sub
adc
in
nop
push
dec
pop
addb
add
mov
jg
arpl
lea
mov
add
add
add
loop
lahf
pop
jl
insl
jmp
xchg
and
sarl
int
lods
or
mov
sub
xor
cltd
cmpsl
xor
lcall
loope
inc
std
daa
test
lahf
aad
scas
pushf
jo
jnp
sahf
fdiv
adc
int
jnp
mov
push
jmp
and
ljmp
ret
sub
imul
jecxz
mov
or
cwtl
daa
inc
push
xchg
dec
loop
cmp
jae
leave
mov
sar
movl
mov
mov
inc
xchg
js
xor
sbb
je
adc
push
jns
stos
sbb
cmp
pushf
inc
jmp
lds
sub
jae
inc
loopne
in
dec
and
stos
push
xchg
jno
or
jbe
test
cmpsl
lock
xor
adc
scas
jl
call
jmp
or
add
xor
clc
cli
clc
sarb
sti
mov
mov
add
add
pop
sub
insl
nop
test
jmp
dec
outsb
add
in
jge
cmp
fucom
sysenter
xor
push
add
or
repnz
das
jbe
mov
xor
cmp
adc
cli
popf
sbbl
iret
cmp
pop
lds
mov
loopne
rol
ljmp
pop
push
sub
hlt
popa
xor
adc
icebp
or
push
into
pop
ret
mov
jbe
add
cwtl
testl
aaa
sbb
fwait
stc
cld
inc
mov
sbb
push
mov
aas
cwtl
mov
imul
mov
imul
pushf
icebp
leave
xor
data16
test
shrl
mov
xchg
add
clc
push
mov
mov
add
push
and
mov
cli
je
or
xchg
sub
jns
jecxz
push
sbb
add
add
jnp
out
mov
cmpb
add
add
in
mov
in
and
dec
jne
fwait
mov
pop
enter
mov
stos
outsl
push
cli
cmpsl
loopne
cltd
xlat
inc
adc
push
imul
hlt
push
insb
push
push
out
dec
les
out
mov
mov
fisubrl
inc
inc
push
adc
test
push
and
and
std
lods
arpl
mov
or
push
test
cld
xor
xchg
stc
roll
dec
idivb
cmp
jp
in
xorb
push
pop
push
sub
lahf
popf
push
mov
repnz
mov
sub
leave
dec
jge
fs
adc
push
divl
out
in
xchg
push
jne
popl
pop
xor
sbb
sbb
inc
and
cmp
pop
insb
cwtl
cltd
rcl
mov
or
in
fstpl
dec
flds
cli
xchg
cmp
test
std
fs
es
data16
insb
daa
mov
leave
xchg
pop
xorl
add
add
sub
adc
push
mov
test
mov
jp
push
mov
insl
push
add
test
push
inc
inc
enter
das
loope
pop
fwait
aam
push
jge
adc
xchg
les
test
lahf
imul
lret
pop
les
pushf
mov
mov
add
pop
adc
fucom
out
mov
out
dec
add
pop
xor
hlt
mov
push
cmc
jg
pusha
int3
out
jbe
es
inc
xor
fsubrs
jnp
jle
loop
jno
out
out
add
dec
push
xor
in
dec
out
jno
cmp
int
into
ret
add
call
insb
jg
jae
xchg
mov
pop
dec
imul
and
lahf
xor
cwtl
mov
inc
mov
push
pop
dec
xor
or
xor
add
js
add
add
add
dec
mov
imul
and
cmp
add
add
add
or
inc
lods
lcall
or
aas
push
insl
ss
inc
mov
inc
jno
pop
add
xchg
cmp
idivl
and
icebp
pop
inc
das
aas
mov
add
mov
rolb
add
into
stos
addb
sub
mov
mov
dec
sub
dec
leave
pop
test
mov
jo
sub
lret
inc
inc
arpl
iret
dec
xor
stc
cmp
lret
repnz
dec
lret
scas
repnz
aas
or
xchg
cmp
sub
sbb
jl,pt
cltd
sbb
aam
and
fnstsw
xchg
outsb
daa
dec
jle
testb
shl
pop
outsl
scas
xchg
pop
mov
in
push
xor
ljmp
movsl
outsb
sbbb
inc
loope
mov
or
pop
repz
shlb
outsl
or
lcall
loopne
aaa
es
push
lea
scas
fwait
dec
mov
ds
push
repz
push
sti
cmpsl
enter
dec
xor
add
add
arpl
push
out
push
sti
sti
pop
pusha
pop
dec
test
mov
pop
ss
int
or
divl
add
cmpsl
adc
fcmovu
sbb
mov
test
pop
pusha
inc
lods
sub
mov
mov
lock
std
cmp
lods
rcrb
repz
or
stos
pop
lea
jl
fcoml
mov
dec
insb
xchg
mov
repnz
or
ret
jmp
lods
clc
add
mov
sbb
and
add
dec
ret
or
add
mov
in
xchg
cmp
das
sbb
in
adc
xchg
xor
adc
clc
in
daa
jp
push
fs
xor
pop
mov
test
outsb
stc
outsb
xor
sub
scas
lahf
mov
outsb
sti
pop
mov
add
add
add
mov
std
mov
dec
push
ss
arpl
inc
sub
add
add
int
cli
cs
in
mov
and
xchg
ljmp
mov
arpl
and
mov
and
push
inc
jmp
clc
xor
mov
jmp
xor
aam
and
push
ds
aad
aad
or
or
mov
xchg
das
int3
fsubrs
iret
xchg
inc
pusha
adc
xor
xor
cld
loope
and
push
mov
fucomp
ret
mov
sbb
mov
jge
jle
and
mov
mov
xchg
in
sbb
mov
std
test
leave
xchg
pop
ficoms
xorl
in
aam
xchg
jns
mov
mov
add
mov
jecxz
push
in
popf
or
sbb
fiadds
cmp
and
fs
adc
lock
js
adc
fbstp
std
bound
push
jl
mov
adc
pop
mov
in
lds
xchg
and
inc
and
lcall
add
add
add
stc
mov
inc
cmp
testb
xor
push
ljmp
mov
jecxz
cmp
loope
push
jp
ret
je
inc
pop
pop
xlat
xlat
cmp
jne
ret
add
lahf
dec
xchg
cmp
in
aas
rcll
stos
lahf
lea
mov
xchg
or
inc
pusha
pushf
mov
movsb
xchg
pop
repz
pop
mov
adc
icebp
adc
inc
and
xchg
ljmp
loop
pop
ss
cmpsb
and
cmp
stc
mov
bound
lods
sub
and
sahf
mov
xor
or
hlt
lods
jecxz
insb
mov
mov
fmuls
shrb
mov
mov
enter
fisubs
test
mov
lock
push
bound
sub
out
adc
sbb
out
jg
dec
test
add
mov
xor
loope
clc
std
inc
mov
adc
push
fiaddl
ret
ficomps
cmp
lahf
scas
sahf
dec
add
add
add
movsl
std
pop
daa
sub
mull
jecxz
and
sbb
addr16
loopne
mov
xchg
fwait
sbb
push
sahf
sub
addb
add
je
xor
xchg
mov
fwait
sahf
mov
mov
mov
or
test
incb
push
pop
addr16
or
push
gs
rorb
push
push
mov
xor
ljmp
or
test
adc
lret
dec
adc
push
std
imul
jae
jbe
pusha
or
enter
inc
jg
pop
std
pop
out
cmp
mov
push
scas
in
out
addb
sahf
test
out
cmp
movsl
lahf
pop
ret
mov
push
cltd
sbb
aad
mov
xlat
add
enter
cs
and
in
mov
lret
jb
jns
sub
inc
lcall
iret
xor
jo
jne
xchg
cvtps2pi
dec
lret
add
add
lods
xor
mov
cmp
and
add
add
add
inc
add
push
xchg
in
int3
pop
inc
in
ret
sub
jmp
adcl
mov
mov
push
mov
pushf
dec
ja
fnstcw
in
fstl
repz
js
mov
xchg
mov
jbe
adc
mov
dec
imul
leave
pop
push
jge
push
sti
mov
mov
mov
ret
cmp
pop
push
jnp
cld
xchg
mov
data16
fbstp
fnstenv
jg
sub
bound
bound
inc
xlat
push
pop
mov
and
orb
loopne
and
jge
movsl
push
fs
push
sub
pop
leave
mov
xor
lods
mov
pusha
mov
bound
sbb
mov
push
stos
ret
cmp
sub
loopne
xchg
pop
xor
addl
rcrb
mov
cld
and
xor
hlt
inc
mov
mov
lock
mov
or
int
adc
push
xor
add
add
iret
popa
sbb
out
sbb
inc
lock
stc
mov
ss
jg
add
jnp
or
ljmp
rcl
in
cmpsb
inc
fldl
sub
out
lds
outsb
leave
in
fadds
add
xchg
repz
je
nop
fwait
push
in
or
pop
cmpsl
pop
sti
test
xorb
push
pop
ficomps
push
pop
cld
popa
hlt
add
popf
adc
xorl
xchg
push
lods
pop
push
rcr
cmpb
pop
mov
gs
mov
xchg
inc
lods
xchg
andb
andb
or
mov
push
scas
cs
roll
std
fld
cmp
fsubr
fsubr
in
cltd
jns
jbe
and
pushf
mov
inc
mov
sub
rcrb
fisubrs
es
shl
popf
loopne
and
divb
loopne
sub
xchg
cmp
sbb
or
add
sub
sti
pop
jge
neg
hlt
add
push
push
xor
add
add
pop
jge
jb
mov
push
adc
pop
adc
lds
mov
dec
dec
std
stos
or
je
jmp
sub
in
mov
xlat
jno
mov
lret
pop
mov
xlat
mov
and
scas
test
push
out
clc
mov
repnz
add
cwtl
pop
fsubl
pop
xor
cmp
cmpsb
sbb
add
cwtl
mov
push
cmp
outsl
push
and
lret
pop
dec
pop
xchg
icebp
rclb
ds
int3
push
sbb
mov
out
xchg
shlb
sub
js
push
or
dec
rcll
inc
stc
xor
or
xlat
jnp
subb
pop
pop
xchg
adc
je
or
cmp
stos
mov
addr16
pop
cs
mov
int3
mov
and
sub
dec
in
insl
pop
and
mov
cld
test
lock
fistps
add
add
fsub
std
in
popf
in
stc
jmp
rclb
fstps
add
add
add
fstl
nop
sbb
mov
jp
push
outsl
lods
daa
hlt
dec
xor
pop
or
add
cmp
shll
rcrb
fwait
adc
or
dec
and
or
shr
rorl
aas
lret
je
sub
cltd
push
add
xchg
mull
sbb
addr16
cwtl
cs
into
test
push
and
push
jg
cwtl
sbb
jmp
jns
sti
sbb
push
mov
or
mov
jnp
cmpsb
and
mov
data16
test
jb
enter
cmc
inc
in
inc
clc
subb
fistps
mov
mov
fcmovb
push
cs
lds
out
shll
mov
cltd
cmp
mov
pushf
sub
call
xchg
fisttpll
scas
call
loop
pop
adc
inc
mov
dec
dec
push
xchg
mov
add
add
jp
jnp
sti
xchg
jle
jp
lods
adc
push
pop
pop
xor
add
add
xchg
xlat
push
lock
dec
cmp
sub
ss
shrb
push
pusha
dec
lods
sar
call
push
inc
roll
cwtl
scas
add
add
sbb
xor
mov
leave
jnp
cli
ljmp
ret
rep
in
data16
add
gs
pop
mov
negb
insb
repnz
rcrl
mov
sti
mov
dec
sbb
mov
inc
xchg
lock
lahf
xchg
sahf
imul
inc
cmp
idivl
and
lret
out
pop
jae
jle
mov
adc
icebp
adc
adc
scas
jl
test
jb
scas
mov
or
add
adc
pop
dec
add
filds
adc
or
xor
jl
lret
sub
dec
into
mov
stos
sub
jge
jbe
mov
add
mov
push
sti
decb
mov
pop
pusha
xor
add
add
rcrb
or
sub
fdivr
loop
das
push
push
and
imul
xor
stos
and
jne
out
stc
mov
xor
fnstenv
cmp
push
test
xchg
xchg
xchg
mov
push
enter
mov
pop
xchg
adcl
xchg
adc
ljmp
dec
int
cmc
cli
add
ret
movsb
add
and
cmp
lahf
lret
loop
adc
incl
iret
les
in
int
stc
or
outsl
inc
sub
jo
insb
jmp
sbb
jg,pn
icebp
cmpsb
lcall
popa
adcl
cmc
jo
scas
das
loopne
jle
das
repz
sub
nop
adc
mov
fs
mov
scas
imul
negb
or
xchg
mov
cltd
leave
push
jbe
and
xor
dec
nop
sti
jae
cmp
and
mov
add
add
cmp
xor
hlt
adc
cmc
sub
add
add
sub
mov
gs
and
mov
aad
push
fs
jle
lret
cltd
jb
out
mov
cmp
xchg
dec
mov
les
pop
sub
push
mov
or
in
ss
push
and
cltd
pop
inc
iret
inc
jecxz
rcll
imul
add
pop
incl
cmc
and
inc
ret
pop
mov
in
out
xchg
decl
test
and
test
add
push
or
jp
loop
mov
xchg
adc
mov
mov
and
test
jno
or
pop
mov
stos
icebp
cli
mov
mov
and
test
mov
cli
sub
push
leave
addr16
xor
adc
adc
jmp
jne
fdivr
clc
jo
push
ljmp
imul
sub
xchg
inc
movsl
sub
mov
cmp
and
lea
add
incb
ljmp
or
or
add
add
add
sbb
push
aas
out
xchg
rcrb
mov
inc
add
mov
icebp
xor
je
dec
ss
sbb
push
push
mov
test
cmp
imul
jle
xlat
clc
ds
pushf
xor
aas
fimuls
lock
push
jge,pt
fcomps
test
rolb
dec
adc
lcall
pop
dec
imul
xchg
popa
adc
dec
mov
or
push
pop
or
mov
mov
je
sub
and
add
in
call
loopne
push
aaa
xchg
call
bound
fcmovbe
push
aas
push
jno
repnz
jne
adc
data16
dec
xchg
aaa
pop
fistpll
shlb
mov
add
mov
aaa
repnz
test
sub
hlt
or
jmp
sbb
add
add
rclb
nop
lcall
aaa
add
add
add
nop
xor
cmpl
loop
test
dec
jle
fisubrl
in
cmpb
push
push
pop
or
roll
fwait
jp
inc
and
daa
cltd
loopne
cmp
stos
pop
adc
mov
adc
xchg
or
push
ljmp
dec
dec
pop
scas
push
dec
mov
pop
cmp
jns
dec
out
adc
aad
clc
adc
xchg
movsl
sub
dec
aaa
push
aam
sub
mov
dec
test
test
enter
cmc
inc
call
push
loope
ja
cli
jno
mov
rcrb
adc
inc
lret
lods
pop
insl
mov
daa
add
aam
insb
out
fidivs
bnd
icebp
jl
daa
xchg
ss
loop
rolb
pop
in
ja
mov
sbb
fucomip
pushf
into
cwtl
pusha
test
into
cltd
push
lret
js
outsl
pop
in
sub
sbb
jmp
dec
mov
push
jmp
into
pop
jl
dec
jbe
idivl
or
inc
add
cmp
add
add
aas
xchg
addr16
xor
dec
pop
icebp
cmpsl
or
xchg
outsl
mov
dec
shl
and
xchg
pop
mov
movsl
xchg
loop
add
jp
lds
aaa
inc
incb
push
repnz
loope
pusha
test
add
jmp
out
int
clc
sub
stos
mov
cmc
mov
dec
jbe
es
shl
push
add
das
es
cmpsb
inc
xor
stos
mov
hlt
subb
in
stc
jns
pop
inc
mov
out
cwtl
mov
or
adc
add
xor
sbb
cmp
mov
icebp
pop
gs
insl
scas
push
mov
aaa
cmp
pop
and
jge
mov
daa
push
movsb
mov
gs
cmpsb
shrb
jns
lcall
sarb
mov
mov
pop
mov
dec
loope
mov
inc
pushl
enter
stos
or
outsb
adc
add
and
outsb
sub
stos
fs
jmp
leave
aas
sti
movsb
adc
add
add
mov
pop
sub
rorb
push
mov
inc
mov
cld
inc
xorb
mov
cmpsb
in
in
andl
jp
mov
or
push
mov
jns
pop
jbe
into
jnp
es
jae
scas
clc
cmpsb
fsubl
adc
inc
inc
int
or
shr
fsubrl
dec
flds
push
fsubs
push
add
hlt
repnz
inc
mov
sbb
nop
adc
ljmp
push
jno
xchg
sub
iret
loope
mov
xchg
cltd
shlb
jb
mov
adc
or
add
or
shlb
cmp
jle
lret
orl
mov
mov
nop
xchg
push
popf
lea
adc
loope
icebp
pushf
idiv
inc
xchg
mov
call
cmpsb
lock
dec
pop
clc
pop
jno
pop
push
cmpsb
les
scas
fistpll
outsl
sub
add
add
add
fwait
mov
arpl
xchg
das
jo
ljmp
lahf
and
in
pop
or
addb
out
cld
test
jmp
cmpsb
test
sub
and
int3
es
loopne
push
xchg
push
cli
imull
in
in
sbb
out
mov
xor
inc
mov
add
call
pop
andb
in
cmp
aad
add
mov
jne
add
out
fstps
jmp
xchg
adc
jmp
mov
addr16
or
cmp
aam
push
jg
fwait
xor
popf
sahf
loop
mov
aas
push
jmp
or
mov
inc
icebp
es
aad
and
fisttpll
mov
fdivl
out
cltd
adc
mov
pop
dec
xchg
or
mov
aad
mov
xchg
pop
cs
outsb
lret
imul
add
add
cmp
movsb
push
sbb
push
clc
jl
add
add
add
and
inc
ret
and
dec
mov
and
bound
pop
sub
mov
imul
and
push
push
cmp
sbb
shl
and
mov
or
cmp
ror
fisubs
mov
xchg
dec
sbb
scas
pop
aad
mov
lret
mov
aaa
xlat
cmp
adc
daa
xor
out
xchg
lret
dec
and
mov
les
outsb
outsb
addr16
cmp
ljmp
arpl
gs
pushf
outsl
repnz
iret
cmp
and
lods
loopne
jmp
dec
push
xchg
sahf
mov
imul
xorl
lock
stos
ret
fdivp
ljmp
enter
jbe
scas
out
xchg
lret
sbb
sub
xor
pushf
in
loop
jp
xchg
outsb
fidivrs
adc
loop
jne
insb
roll
xchg
pop
mov
shll
add
add
adc
jmp
insl
repnz
add
add
xor
data16
sbb
pusha
mov
popf
jl
loop
hlt
es
dec
fbld
and
in
mov
and
lock
std
xchg
xchg
popa
subl
sub
pop
jmp
lods
ret
jb
daa
call
add
pop
mov
add
push
mov
stos
adc
mov
in
fiadds
mov
scas
jecxz
jg
adc
in
push
inc
not
push
jno
dec
jge
aam
subb
mov
push
rcr
jb
pusha
adc
dec
out
iret
sbb
fisubl
mov
sub
scas
dec
pop
gs
or
les
and
je,pt
pusha
sbb
test
jnp
movsl
sbb
mov
je
pop
mov
add
jge
mov
test
mov
int
jge
sahf
xor
cs
mov
jge
push
push
xchg
inc
or
add
mov
add
add
repz
cmp
lods
repz
mov
mov
cmp
add
jns
daa
cmp
leave
outsl
pop
gs
add
mov
xor
push
inc
jle
jp
cmpsb
fst
sub
mov
outsb
sbb
arpl
push
in
mov
test
xor
mov
mov
pop
adcb
sub
sub
ficompl
xor
add
sub
jo
lods
aam
pop
int3
xchg
or
sub
pop
fwait
xchg
inc
es
cwtl
jecxz
in
xor
lds
test
cmc
outsb
daa
mov
in
clc
and
xlat
pop
out
jbe
mov
mov
decl
push
mov
push
dec
cmc
fcmovne
jecxz
push
pop
or
icebp
adc
scas
bound
mov
add
add
jne
cmc
cmp
enter
addb
fwait
mov
and
adc
jge
negl
pop
lods
cmp
in
push
sbb
shlb
mov
xchg
dec
push
movsb
sub
aas
daa
push
cld
push
std
jmp
dec
push
stc
dec
mov
add
add
add
mov
jg
mov
out
pusha
push
scas
cli
inc
mov
mov
cmp
jo
sub
xchg
fisubrl
popf
mov
inc
pop
stos
push
or
mov
sbb
scas
push
xchg
sub
jb
je
js
js
or
mov
loop
call
aad
pop
jae
loopne
or
xchg
cmp
adc
pop
mov
mov
jmp
sbb
jl
pop
and
loop,pt
or
xor
shlb
sti
xchg
inc
xchg
dec
mov
and
mov
mov
lret
xchg
xchg
push
lock
movsl
ror
push
xchg
jmp
stos
inc
mov
test
push
pop
jecxz
imul
mov
inc
test
filds
cmp
dec
call
les
mov
test
sbb
xor
jl
out
cltd
mov
outsl
push
add
sbb
dec
sub
xchg
mov
lret
and
push
dec
push
add
sbb
dec
push
out
aad
mov
pop
decb
add
std
ret
scas
lret
inc
cmp
xor
ret
mov
js
push
add
add
sbb
rorb
daa
mov
addr16
mov
stc
sti
loop
mov
ret
xlat
orb
adc
push
in
fiaddl
cmpsl
sub
sbb
mov
js
sbb
adcb
push
sub
adc
add
sub
in
adc
or
rorb
add
pop
cli
shr
jle
arpl
jns
sbb
aaa
imul
jp
jl
add
fidivs
gs
jge
cwtl
sar
sbb
leave
stc
lock
loopne,pn
mov
das
cltd
aad
das
mull
dec
insl
jne
cmpsl
gs
push
pop
outsl
cmp
push
inc
adc
pop
in
inc
dec
mov
inc
xor
dec
add
add
ror
dec
pop
fimull
fwait
pusha
dec
push
stos
add
push
mov
or
outsl
sbb
nop
inc
add
add
add
hlt
or
pop
mov
bound
in
push
lret
adcb
dec
mov
sbb
hlt
push
addr16
jnp
mov
imul
aad
cmp
xor
cld
xchg
aaa
sub
push
sub
pop
cli
jnp
pusha
push
repz
push
pop
or
lds
addr16
lods
fdivl
repnz
pop
mov
xor
cmp
or
out
sbb
cwtl
mov
lret
dec
out
xchg
push
test
jb
ljmp
and
push
cmc
aam
aas
mov
xchg
push
push
imul
inc
lret
jmp
popa
cltd
sbb
std
xchg
bound
insl
sub
lds
jo
data16
sub
into
in
mov
sub
cmp
sub
mov
cwtl
addr16
sahf
popa
call
pop
imul
add
mov
ja
jg
xchg
orl
mov
inc
add
add
add
aam
push
jmp
add
testl
inc
adc
mov
mov
insl
push
sbb
and
pop
in
data16
ljmp
je
enter
cmp
dec
cmpsl
das
into
lods
das
sarb
out
lahf
xor
into
cld
jae
lret
sub
add
mov
adc
jne
inc
aam
xchg
test
jbe,pt
or
gs
in
xchg
mov
pop
sub
sub
cmpsb
cmp
add
arpl
mov
jg
and
lret
jg
bndldx
cmpsb
push
jo
cmc
shlb
jno
mov
std
test
xchg
dec
xchg
pop
ss
scas
pushf
jmp
rol
and
add
lock
and
mov
sub
aad
insl
out
push
pop
fstl
xchg
pop
aaa
jecxz
lret
adc
inc
and
dec
lret
jmp
imul
aaa
je
loope
outsl
cwtl
inc
add
add
add
leave
out
jge
clc
out
lock
aam
pusha
out
cmpsb
sub
and
ja
in
popf
mov
fadd
bound
or
push
sub
fistpll
cmpsl
scas
push
xchg
and
sbb
adc
gs
mov
mov
adc
sbbl
xor
stc
ret
inc
in
mov
jecxz
ds
jcxz
outsb
ror
mov
dec
mov
xchg
sbb
mov
push
pop
ljmp
cmp
mov
pop
mov
xor
das
push
aad
mov
adc
movsb
cli
or
lock
dec
int3
mov
cs
inc
adc
stc
stos
in
pop
mov
sbb
push
cmpsb
call
out
or
push
subl
rcl
adc
fdivrl
cmp
cmp
push
shll
loope
mov
pop
fwait
in
mov
cmp
mov
lds
cmc
cwtl
xchg
push
sub
hlt
pop
pop
pushf
inc
add
add
add
jle
adc
xchg
push
adc
popa
lds
push
jge
pop
add
stos
pushf
and
sbb
addr16
jecxz
sbb
add
mov
add
je
std
and
jns
pop
push
iret
out
xlat
mov
and
loope
push
in
mov
sahf
insl
fldl2e
test
jg
mov
sub
pusha
dec
out
lds
inc
mov
test
mov
aas
mov
out
inc
xor
js
addb
pop
push
inc
into
dec
mov
gs
cmpl
dec
shrl
out
sti
mov
mov
fmull
and
dec
enter
das
out
std
addl
das
jno
sbb
jns
pusha
push
repnz
dec
cli
mov
xor
dec
jg
daa
xchg
xor
adc
addb
leave
lods
push
inc
andb
push
mov
shlb
add
sbb
shll
mov
add
add
jns
xor
jg
xor
add
add
add
scas
adc
lds
cli
push
insb
icebp
push
mov
mov
into
pusha
out
add
popf
push
fwait
mov
pop
jae
idivl
dec
pusha
or
icebp
push
rcl
fcomi
ret
mov
adc
rcrb
jns
jns
clc
sbb
and
movsb
ss
in
pop
dec
fldl
sub
outsl
sub
rcl
mov
mov
lret
and
add
pop
mov
inc
ds
sub
dec
ss
dec
or
aaa
xor
mov
jns
pop
jle
or
mov
or
lds
das
cmp
cmpsl
mov
xor
xchg
dec
jmp
lds
sti
es
loope
jne
std
gs
jmp
fwait
subl
xchg
sub
bound
ljmp
mov
jno
ret
cmpsl
lock
fwait
push
cmp
js
ret
jg
decl
rol
jno
jecxz
movsb
inc
add
add
add
cmc
mov
ljmp
daa
das
add
arpl
mov
hlt
cltd
push
scas
addr16
mov
xlat
sbb
pop
imul
jne
mov
mov
in
push
inc
cmpsl
jno
pop
outsb
cmpl
push
jl
and
sub
xor
sbb
call
mov
or
dec
cli
add
push
mov
lods
push
hlt
mov
and
imul
ss
cmp
xor
fmuls
cmc
dec
push
mov
cmpsl
mov
push
test
fisubs
push
pop
leave
dec
pushf
xor
aam
cmpl
jl
or
rorb
xlat
ret
movb
xchg
lcall
mov
cli
outsb
jae
lock
daa
ss
adc
or
cmpsb
dec
fmull
adc
inc
testb
inc
addb
inc
sbb
and
shrl
in
jmp
pop
adc
mov
out
aad
pop
movb
add
add
aaa
pop
cmc
scas
sbb
loopne
cmpsb
je
jns
test
out
adc
jno
pop
or
sub
mov
sbb
outsl
xchg
xchg
xor
jns
cmc
jg
cmp
dec
xor
pop
ljmp
inc
out
xor
xchg
mov
or
insb
xchg
dec
add
pop
hlt
movsl
sub
shl
sub
add
sub
enter
xor
jmp
cmp
in
call
dec
dec
mov
push
and
sub
aas
lret
jo
add
pop
push
mov
mov
xor
sbbb
pop
std
out
shrl
sub
xor
mov
jae
jno
push
ljmp
shl
orb
xchg
sub
incb
faddp
lea
xchg
rcrb
push
mov
add
pop
nop
jbe
push
push
adc
aad
lds
int
add
add
hlt
gs
dec
adc
cmp
inc
add
add
add
mov
mov
xor
dec
je
ret
and
dec
inc
mov
mov
jae
dec
pop
insl
mov
dec
push
pop
es
cmp
mov
and
inc
push
std
mov
sbb
xor
cltd
es
das
xorb
ficoml
adc
and
test
jb
or
gs
inc
ja
and
das
xchg
mov
sbb
jo
popf
mov
pop
cmp
es
insl
jne
xor
dec
cmc
xchg
sbb
inc
insb
je
or
xchg
mov
ret
sbb
into
popa
mov
loope
sub
idiv
jb
jns
fwait
cli
jp
flds
and
repz
addl
mov
push
std
push
mov
lahf
xchg
sbb
sbb
aam
shl
test
in
lret
adc
sub
add
add
aas
gs
pop
repnz
dec
add
add
add
lcall
jmp
mov
lret
sahf
mov
dec
adc
inc
xor
sbb
cmp
sbb
or
rcrb
cmp
gs
mov
cmp
dec
or
cmp
enter
negl
mov
jle
mov
loop
or
stos
cmp
lds
cli
fcomps
insb
and
ret
pop
and
cmp
mov
ja
ja
aad
cmp
mov
xchg
cmpsl
jecxz
and
pop
lcall
pop
sub
jbe
stc
xchg
inc
cwtl
adcl
cmpsl
aad
ret
cltd
cmp
xor
lock
scas
lods
sbb
out
aam
lods
icebp
xlat
adc
jmp
jne
or
pop
xor
mov
mov
leave
cmp
je
fisubrl
pop
cmp
hlt
mov
jbe
call
add
mov
out
fisttpll
lock
push
mov
add
add
add
xchg
daa
js
pop
sub
es
sbb
fcmovnbe
xlat
cmpl
inc
cmp
pushf
inc
mov
loop
jge
lret
sbb
mov
mov
cwtl
xchg
xchg
cld
bound
mov
mov
adc
hlt
dec
ret
pop
xchg
mov
into
or
int3
add
push
pop
sbb
xlat
loopne
sub
inc
add
add
ror
pop
pushf
daa
inc
mov
jae
add
lea
xchg
mov
xorl
jecxz
cld
sbb
pop
popa
xchg
push
push
lds
adc
fists
xchg
push
nopl
pop
cmc
or
adc
and
in
push
daa
stos
pop
xor
insl
jg
call
cs
scas
xchg
mov
mov
xchg
iret
add
cs
and
call
dec
fildll
mov
ljmp
add
add
add
in
dec
or
xchg
sub
fs
or
inc
dec
leave
inc
pop
xchg
pop
ss
mov
xlat
lock
arpl
clc
dec
psubusw
cmpl
lods
jno
lret
xchg
sub
xchg
iret
pop
enter
lods
adc
lea
fsubs
and
pop
out
ret
xor
out
lock
add
fs
lahf
fsubp
adc
push
adc
push
mov
fiadds
in
cld
movsb
or
push
shrb
in
push
test
repz
or
jbe
xchg
jmp
shr
jle
test
lahf
adc
or
iret
lods
sahf
cmpsl
add
push
ds
adc
decl
jmp
or
fldl
in
cltd
ret
outsb
cmc
mov
push
fidivl
jp
in
xchg
lds
stos
jle
xchg
adc
and
ret
adc
push
sbb
jmpw
fnstcw
jo
sahf
jb
add
add
add
mov
cltd
jb
int
out
mov
adc
pop
repnz
fwait
sub
pop
xor
loope
sbb
add
sti
jno
pop
xor
sub
cli
sbb
add
je
xchg
add
cltd
cltd
jae
ds
cmpsl
mov
jl
mov
xor
inc
xor
and
pop
mov
arpl
sub
and
test
roll
lods
clc
inc
cmp
shlb
outsb
or
dec
mov
movsb
adc
scas
aam
jne
das
leave
or
pop
inc
adc
push
addl
sbbb
jnp
cmc
in
lea
fs
aad
shll
fwait
and
xchg
cmp
out
pop
mov
pop
test
xor
dec
ss
jbe
push
rcrl
nop
sbb
pusha
clc
loope
cmp
pusha
ss
add
add
imul
out
mov
mov
or
sbb
dec
add
add
add
xchg
sub
imull
dec
stos
fsubs
shrl
pop
hlt
aad
or
mov
sahf
pop
ret
ficompl
fwait
adc
pop
inc
stc
push
mov
jmp
mov
mov
lret
push
push
mov
pop
dec
adc
cmpsl
lods
sbb
mov
cli
imul
js
push
xor
adc
jg
pusha
fdivp
mov
pop
mov
out
outsb
xor
xlat
push
sub
jg
mov
pop
mov
jnp
mov
sub
movsl
iret
aas
mov
jae
adc
mov
dec
cmc
inc
push
add
push
sub
cmp
adc
push
loope
shll
popf
sbb
mov
push
pusha
loopne
sub
cmp
jno
sbb
jbe
sbb
fstpt
cmp
jge
das
jbe
cmc
das
iret
push
push
mul
mov
out
dec
sub
mov
js
add
dec
stc
mov
ljmp
les
add
add
movsb
roll
imul
and
hlt
jo
cmpsb
pop
lds
and
daa
add
int3
push
movsl
push
shll
shll
adc
push
or
ss
and
push
xchg
mov
clc
sbb
out
mov
or
xor
adc
mov
and
pop
out
sbb
mov
lock
icebp
nop
cmp
insl
in
push
pop
pusha
jmp
mov
out
das
mov
cwtl
jno
jg
push
inc
aaa
in
out
das
aad
mov
jne
int3
push
in
push
cmp
psllw
inc
mov
mov
movsl
jle
shr
mov
mov
jbe
dec
in
xchg
scas
cwtl
test
daa
xor
pop
jle
mov
aaa
add
iret
adc
push
xor
mul
fdivr
scas
test
mov
roll
lea
cmp
fs
cltd
lret
and
xchg
cmp
jle
jg
cld
lcall
ret
add
add
add
data16
push
jp
loopne
add
dec
mov
fs
dec
mov
push
mov
in
xchg
sub
rcrb
lahf
scas
ljmp
fidivrl
scas
push
and
jmp
xlat
push
jmp
sbb
xchg
xchg
insb
loop
leave
stos
test
add
rorb
lret
push
cmp
daa
shl
dec
jp
inc
pop
fwait
mov
pop
sbb
sub
add
mov
inc
mov
dec
jbe
and
sbb
loope
add
shlb
xchg
mov
push
jg
leave
mov
add
mov
aas
cvtps2pi
mov
add
cmp
pop
sahf
mov
loopne
jp
pusha
inc
ss
xchg
subl
mov
shl
or
jb
add
add
or
frstor
or
cmpsb
mov
adc
stc
mov
mov
add
add
xchg
mov
pop
aaa
pop
push
adc
dec
add
add
add
and
addr16
lret
into
jecxz
inc
inc
push
jns
fstl
or
mov
push
ljmp
outsl
outsb
cltd
add
mov
sbb
jne
in
pop
repnz
inc
mov
lods
mov
popf
xchg
inc
push
ret
pop
cmp
sbb
out
mov
lods
bound
popf
cmovne
clc
adc
les
pop
add
jecxz
lods
mov
push
and
cltd
mov
dec
enter
hlt
sbb
test
add
sbb
mov
stc
pop
clc
jecxz
test
mov
mov
out
xor
daa
insl
cmp
leave
push
xlat
cs
inc
fnstenv
jg
outsb
jg
xlat
mov
adc
sahf
lock
iret
inc
cmp
jnp
cli
xchg
jno
insb
pop
sbb
mov
stos
lods
int3
lret
pop
dec
mov
dec
inc
popf
push
fmull
popa
mov
xchg
add
add
inc
mov
push
push
jmp
push
mov
xor
push
add
add
add
test
mov
lods
shll
movsl
mov
shr
sub
subb
in
add
stos
test
insl
cmp
gs
and
in
push
push
aam
cltd
adc
mov
repnz
sbb
mov
adc
and
add
jns
loopne
sbb
xchg
xchg
inc
subb
cwtl
dec
dec
adc
mov
dec
sub
adc
out
ret
call
xchg
pop
mov
rcrb
dec
push
and
jns
mov
ljmp
xchg
pushf
jge
test
mov
add
add
push
cli
mov
lret
adc
repnz
adc
or
lret
cmp
or
mov
xchg
xor
fiaddl
push
insb
psrad
pop
pop
in
mov
sti
mov
test
mov
divb
add
fsubrl
mov
out
cmp
ret
or
fs
push
add
add
add
mov
aam
mov
jmp
adc
dec
mov
add
xor
inc
xor
xchg
sbb
and
mov
cmp
mov
cmc
fcoms
sbb
test
jge
mov
call
clc
in
jno
aas
xchg
sbb
push
xchg
mov
mov
add
int
iret
bound
add
fwait
repz
and
scas
jnp
gs
mov
hlt
ljmp
push
test
ret
xchg
push
mov
cmpsl
mov
aaa
dec
repnz
jnp
sub
int
idivl
enter
lods
and
and
adc
ja
mov
inc
sub
in
popf
mov
jb
lret
xchg
lods
popf
cmp
scas
test
adc
pop
or
stos
test
ret
rclb
test
cmp
inc
aaa
fwait
mov
xchg
sub
dec
xchg
out
cmp
mov
push
mov
add
or
push
shll
out
pop
pop
pushf
push
push
pushf
or
fcoms
add
add
les
popa
jge
ljmp
ljmp
roll
push
push
in
inc
test
test
insb
test
fstl
and
jge
push
in
xlat
idivb
clc
les
nop
shl
mov
jp
lret
push
clc
or
sti
sub
in
popa
lds
fmuls
pop
and
xorb
mul
xor
add
ret
or
dec
adc
test
pop
add
cmc
push
push
rcr
ljmp
dec
push
mov
jb
les
int3
mov
cmp
hlt
adc
jp
dec
bsf
xor
cmp
cmp
lahf
mov
jecxz
xor
cs
jnp
pop
pushf
imul
jmp
inc
popf
fisubs
jl
inc
test
clc
icebp
leave
ss
and
dec
or
add
aas
fldenv
or
push
xor
stos
push
lcall
hlt
mov
icebp
and
add
add
aaa
or
xor
lcall
jbe
inc
enter
shr
daa
loopne
int
adc
mov
data16
inc
xchg
xchg
mov
or
aas
pop
and
inc
lret
xlat
jle
push
xchg
sub
ss
sub
adc
pop
mov
std
rcr
int
mov
hlt
hlt
pop
into
popa
movsl
cli
out
inc
mov
pushf
test
test
mov
fsubr
into
lods
cwtl
hlt
mov
mov
sub
je
add
lret
cmp
inc
push
jge
fwait
pushf
xor
inc
sbb
inc
sbb
gs
pop
jns
out
and
repnz
ss
int3
cmc
add
add
cmp
and
sbb
xchg
cli
ret
mov
xchg
xchg
shlb
mul
push
and
mov
incb
mov
outsb
and
push
pop
inc
jmp
inc
sbb
add
add
jbe
idiv
imul
imul
xor
push
add
add
add
adc
call
popa
sbb
out
mov
sbb
add
stc
sub
and
cs
xchg
mov
mov
push
fldl
dec
fdivrp
fwait
cld
test
mov
push
dec
inc
or
dec
lcall
int
push
inc
into
or
jmp
or
inc
mov
bound
mov
hlt
push
test
lret
das
in
jne
outsl
xchg
cltd
das
aas
iret
sahf
imul
arpl
mov
and
mov
shlb
jae
xor
fcmovbe
sbb
scas
jo
iret
inc
dec
imul
test
arpl
int
loopne
imul
ret
cmp
pop
or
jmp
push
sahf
adc
addr16
jae
xchg
loope
and
and
stos
mov
ja
call
sarb
jmp
jae
fwait
cmp
stos
sarb
in
add
add
add
mov
sub
into
xchg
subb
movsl
idivb
pop
orl
repnz
scas
mov
icebp
leave
test
ret
jmp
mov
aaa
faddl
stc
leave
fistpll
js
out
pop
push
repnz
push
xor
lods
lret
pop
mov
idivb
incb
imulb
xor
hlt
pusha
movsb
xor
adc
dec
mov
das
loop
xorb
inc
inc
push
out
imul
jmp
cs
mov
pop
sahf
jecxz
pop
xor
lods
test
dec
sub
mov
imul
aas
cmp
add
and
dec
sub
mov
sti
aas
inc
je
rorl
popa
adc
gs
outsl
sbb
mov
lods
in
mov
in
jnp
in
cli
pop
xchg
ss
inc
mov
push
cmc
inc
sub
lahf
popa
jne
inc
push
xchg
jne
pop
xchg
loop
dec
inc
fimuls
cvttps2pi
add
inc
push
clc
mov
and
hlt
fnstsw
mov
add
add
aaa
out
push
aas
loopne
mov
dec
xlat
xchg
inc
test
sub
or
inc
xchg
add
lret
dec
dec
inc
sahf
and
rcll
fcomip
hlt
xor
fisubl
push
add
pop
lea
insb
dec
mov
fcomps
int3
clc
sbb
mov
rolw
jle
mov
in
adc
ja
idiv
mul
test
or
pop
mov
dec
mov
imul
aaa
jne
lea
sbb
mov
sub
pop
jne
stos
jnp
popa
imul
sub
push
jo
mov
xlat
les
mov
fyl2xp1
inc
test
adc
outsl
push
mov
push
mov
adc
imul
mov
addr16
mov
jnp
jns
invd
lahf
mov
or
sub
adcl
adc
cmp
int
mov
fdiv
repnz
call
add
add
shr
mov
xchg
pop
pop
test
add
add
add
int
add
pushf
cwtl
lods
lds
push
push
out
xor
fidivs
adc
pop
or
add
popa
xchg
cmp
test
clc
aas
xorl
cmp
push
aad
in
pushf
adc
inc
pop
pop
or
pop
pop
inc
inc
mov
lahf
ret
mov
push
mov
dec
sahf
dec
ret
and
add
loope
push
inc
scas
pushf
jmp
and
bound
push
divb
mov
mov
xchg
pop
mov
movsl
ljmp
push
flds
add
out
and
leave
out
pop
cmp
pop
ds
adc
lea
add
fcoml
xlat
xchg
sbb
movsl
xchg
pushf
mov
push
mov
mov
add
dec
rcll
xchg
aam
mov
out
mov
lcall
mov
lds
insl
je
out
popa
ss
lret
mov
out
gs
pop
mov
dec
mov
fldcw
test
or
fdivs
xchg
repz
add
add
or
sarb
sti
cmpl
mov
adc
insw
push
mov
adc
mov
jmp
pop
xchg
xchg
mov
loopne,pt
inc
lea
pop
loope
and
fwait
jno
add
ja
mov
or
or
add
notb
mov
mull
or
outsb
mov
dec
sti
sub
cwtl
sbb
inc
lahf
lcall
popf
lahf
inc
gs
in
in
mov
adcl
call
test
inc
outsb
pop
pop
dec
out
jmp
sti
int3
dec
fstpl
add
lahf
add
cmp
mov
adc
shrl
adc
cmp
lods
out
aas
scas
cmp
aam
pop
dec
dec
ret
and
icebp
xchg
jb
mov
mov
or
cmp
adc
jae
mov
mov
mov
push
jns
jle
sti
sub
xor
pop
repz
stc
mov
subb
mov
add
mov
pusha
cltd
mov
add
add
add
xor
pop
cs
aad
jns
fcoms
arpl
das
and
add
ljmp
addr16
out
test
imul
aad
daa
loop
ret
cld
nop
sbb
push
mov
cltd
mov
mov
sub
test
into
dec
sbb
sub
data16
sarb
es
pop
rcll
pop
or
xchg
lock
ficoms
jl
testl
push
dec
fimuls
incl
leave
mov
movsl
fwait
pop
jecxz
sti
xor
and
pushf
dec
jne
and
rolb
fxch
popa
sub
shlb
or
sub
dec
aad
aam
nop
inc
cmp
xchg
aas
push
movsl
jp
movsb
push
sahf
jecxz
nopl
mov
sub
jb
scas
hlt
out
aas
cli
adc
jp
adcb
sub
mov
add
add
movsb
jae
jnp
mov
ja
mov
mov
add
add
add
cmp
imul
mov
mov
pop
jb
pushf
js
push
xchg
and
sub
mov
fcmovb
push
arpl
inc
inc
sarb
xchg
adc
fsubrl
inc
ja
fiadds
jge
lods
sbb
shrb
fs
sahf
sbb
arpl
mov
sub
gs
add
test
xchg
incb
int
cltd
dec
mov
adc
jmp
mov
sbb
push
jle
push
mov
dec
pop
lods
push
in
dec
mov
outsb
pop
cltd
or
inc
pop
imul
sahf
sbb
pop
inc
out
in
jle
and
and
repz
add
loopne
loope
dec
movsl
in
js
mov
sahf
push
cmp
lock
adc
test
jmp
jp,pt
push
out
out
out
push
fwait
lahf
adc
out
push
add
xor
xlat
out
cld
add
cld
pop
add
add
add
mov
lods
pop
xchg
stos
cmp
out
jge
add
aaa
popa
push
fs
mov
xor
shrb
mov
jne
pop
imul
cmpsb
xchg
or
jno
sbb
adc
in
adc
mov
and
jo
add
mov
push
cltd
icebp
pop
in
fucom
mov
loopne
ja
adc
hlt
mov
and
mov
jb
sbb
jb
fs
xchg
pop
xchg
iret
add
push
adc
xlat
xchg
mov
pop
aad
shl
jecxz
hlt
hlt
mov
outsb
and
xchg
in
cmp
roll
sub
jo
cmp
movb
fstp
sub
inc
or
sub
add
clc
pushf
add
shll
push
dec
dec
mov
aas
es
loopne
push
call
or
inc
invd
add
mov
add
mov
mov
in
nop
mov
add
add
add
outsb
clc
testb
lds
cmpsl
cmp
cmp
mov
xor
push
call
jo
and
dec
lret
cmp
sbb
jno
and
or
retw
frstor
pushf
jmp
outsb
sbb
push
ret
imul
cmpsb
sbb
sti
add
xor
sbb
sbb
cmp
pop
mov
leave
std
subl
jecxz
xlat
in
in
add
aad
push
fsubrl
repnz
xor
jge
push
shrl
into
push
lret
mov
adcl
adc
xchg
sub
cmp
out
sub
mov
cli
int
sarb
push
or
out
aam
idivb
xchg
push
cmpsl
push
sub
cld
das
sbbb
es
ret
push
inc
rep
jbe
js
or
add
add
push
into
push
push
inc
lahf
mov
add
add
add
add
cmpsb
push
cmp
mov
int3
stos
push
push
scas
call
dec
push
cmpsl
sbb
inc
push
mov
xchg
subb
out
scas
movsb
pop
mov
mov
addr16
dec
xchg
xor
jmp
lahf
sbb
cmp
pop
add
jno
fidivs
aam
or
dec
sbb
or
dec
pusha
jmp
sub
pop
sbb
test
shll
pandn
mov
adc
sub
imulb
cmpb
add
je
and
sub
test
in
add
sub
and
adc
mov
push
push
data16
cmpsb
stc
sbbl
inc
cmp
inc
or
std
inc
add
push
fnsave
das
daa
push
aaa
test
jns
rcrl
cwtl
jne
push
call
sbb
inc
sbb
inc
cld
or
fimull
dec
shl
adc
xchg
xchg
lret
test
and
mov
jg
or
or
add
add
and
test
enter
cmp
sbbb
cmpsl
nop
push
cmp
imul
push
arpl
add
scas
xchg
popa
add
js
mov
push
pushf
cmp
jge
xorl
pushf
test
lods
dec
scas
xchg
sbb
cmp
sub
inc
xchg
add
in
inc
mov
sarl
inc
insl
mov
std
aas
enter
dec
lea
loop
xor
mov
pop
rcrl
out
fidivl
movsl
sbb
movsl
push
inc
mov
xchg
dec
lds
mov
insb
dec
jl
imul
int3
inc
xorl
sbb
xchg
sbb
lock
xor
pop
adc
mov
cmpsl
cmp
mov
orb
js
adc
ljmp
ds
fisubrs
xchg
inc
jg
push
cmp
jl
outsb
mov
jnp
loope
rcll
add
lahf
pop
fcmovb
fcmovnb
lahf
pop
cmpsl
jne
mov
clc
push
stc
or
add
add
add
mul
jmp
into
adcb
in
xchg
mov
xor
es
insb
push
adc
sub
ds
hlt
subb
sub
adc
ret
mov
push
cmp
arpl
pop
mov
xchg
xor
fdivr
jle
popf
shlb
xchg
mov
test
daa
loope
jle
or
int
xor
fldenv
or
mov
mov
cli
cltd
int
shlb
in
jo
push
sub
sub
js
xlat
arpl
pop
pop
xor
xchg
fwait
ret
xchg
add
dec
mov
sub
andb
call
jl
sbb
mov
fwait
mov
repnz
loopne
jg
adc
xchg
popa
jo
add
inc
xchg
mov
in
sub
inc
sub
and
cmpsb
fcmovu
faddl
cmp
nop
outsb
sahf
pop
testl
pushf
das
add
popa
add
add
add
outsb
cld
jno
lahf
cld
and
sub
xchg
sub
adc
inc
xor
mov
pop
sub
xchg
daa
jns
mov
je
xchg
jge
lahf
and
mov
ss
inc
stos
out
rcll
jle
dec
bnd
test
fcoms
scas
rcrb
xor
loope
sbb
adc
enter
bnd
xchg
hlt
enter
js
dec
adc
leave
mov
add
xchg
stos
jno
andl
mov
rolb
jg
mov
add
cli
mov
shrl
enter
imul
jne
out
sub
sti
jnp
xor
xlat
out
jge
repz
push
pop
frstor
cmp
dec
imul
cmc
cmp
push
dec
mov
lea
stos
sub
lar
pop
push
data16
mov
add
add
pop
mov
fstps
push
dec
adc
add
add
add
int
in
aad
and
pop
pop
sbb
gs
loope
cmpsl
adc
push
push
cld
pop
dec
xchg
jp
dec
or
mov
pop
mov
push
mov
jne
jbe
sahf
mov
sub
sbb
mov
lahf
pop
stc
hlt
xchg
test
popa
sbb
loope
inc
or
inc
int
fisttps
bnd
push
pop
add
cmc
inc
xchg
std
jmp
sub
push
inc
jecxz
mov
sbb
push
add
push
push
cltd
movsb
push
dec
subb
outsb
mov
aam
mov
in
pop
mov
aaa
jl
cmpsl
cltd
or
or
add
insb
cltd
das
aad
sbb
xchg
aaa
sub
call
pop
mov
adc
cs
or
jle
dec
lods
fimull
push
cli
mov
adc
push
stos
out
dec
mov
jns
push
mov
cmpsb
add
jg
push
cli
loop
add
add
repnz
movsb
jle
arpl
iret
or
add
add
pushf
add
fldt
sahf
into
jg
push
testl
shrl
pop
js
scas
cld
aam
incl
push
movsl
ret
shrb
arpl
movl
adc
nopl
call
ja
cmp
mov
sbb
fwait
cmp
or
cmpl
push
scas
add
mov
insb
std
shrl
dec
aad
out
les
out
fimull
mov
xchg
mov
sub
test
pop
add
leave
in
jno
aaa
sub
pop
mov
inc
rol
mov
iret
repz
add
test
fs
jmp
test
insb
mov
sbb
mov
add
pop
mov
mov
mov
sub
mov
cwtl
add
popa
les
aaa
jne
adc
bound
lret
cmpsl
stos
sub
stos
out
jmp
sub
cld
cmc
sbb
add
add
add
aaa
lahf
rcrw
pop
aas
shrl
mov
cmp
add
in
jge
jb
das
and
mov
ret
dec
sbbl
rcrl
jne
xchg
sbb
push
arpl
jl
sub
ret
jmp
and
outsl
scas
ljmp
in
inc
and
adc
sahf
leave
in
es
xorl
jge
jp
sbb
mov
stc
mull
or
inc
hlt
iret
and
test
lret
notrack
test
fs
mov
dec
xchg
insb
arpl
and
outsb
add
pop
mov
out
inc
imul
jae
rcll
push
jae
scas
dec
xor
out
jle
add
dec
mov
bound
je
sub
stc
repnz
push
out
shll
pop
cli
inc
mov
xor
xor
mov
enter
mov
add
add
mov
fnstenv
loopne
repnz
add
add
add
xchg
cs
loope
cmpsl
int
ljmp
xor
dec
loopne
inc
fstpl
cli
or
loop
repnz
dec
mov
out
xor
mov
das
adc
pop
jmp
inc
mov
scas
mov
pusha
pop
mov
dec
push
adc
jle
sahf
js
cmp
repnz
popf
loop
push
icebp
lret
push
into
jmp
pushf
data16
gs
or
push
xchg
inc
cmp
cltd
loopne
fnstenv
inc
xor
pop
inc
inc
lods
cmpl
enter
mov
bound
ss
dec
cmp
aad
lods
les
add
jo
jl
in
mov
xchg
fsub
push
insb
mov
aaa
sti
push
or
jg
or
ja
xor
je
in
sbb
cmpsl
out
and
mov
pop
bound
sti
inc
subb
test
pop
jle
push
lods
test
sbb
pop
popf
fisubs
scas
jo
xchg
cld
je
jbe
jns
sbb
mov
add
add
add
sahf
mov
jo
je
out
adc
jb
xor
call
dec
sub
lret
shrb
jb
loope
int3
xor
pop
push
js
add
pop
daa
scas
into
mov
sbb
movsb
dec
sarl
daa
push
decl
pop
imul
xor
scas
arpl
fwait
clc
sub
insl
loopne
pop
cmp
jno
inc
aas
sar
scas
in
jne
test
lods
mov
scas
out
cltd
std
add
mov
jae
clc
jp
xchg
dec
dec
xchg
out
ja
stos
clc
int
scas
mulb
xchg
or
xor
lods
mov
ret
test
xchg
leave
cmp
xchg
sub
sub
mov
shll
mov
inc
mov
mov
inc
mov
dec
inc
fs
inc
lods
cmpl
xchg
mov
pushf
add
sarb
push
mov
push
cltd
jmp
fildl
or
add
add
add
mov
xchg
lods
sbb
jge
xchg
xor
or
movb
movsb
cmp
and
movl
push
stc
xchg
mov
adc
sub
addr16
or
cmp
mov
outsl
stos
insb
lods
jge
out
lahf
jnp
cltd
mov
lea
insb
test
inc
lcall
lods
sub
adc
pop
sbb
jns
adc
jb
inc
incl
jbe
int3
cwtl
dec
cmp
adc
jle
cld
push
push
insb
dec
adc
pop
cmp
inc
mov
lods
in
adcl
cmp
test
mov
jns
push
jnp
je
daa
jg
mov
stos
add
sbb
jbe
pop
push
ret
mov
and
pop
sub
sub
lcall
xchg
cld
es
fnsave
dec
push
push
enter
add
add
push
jg
dec
xchg
dec
dec
jbe
sub
add
add
add
popa
or
cwtl
add
jnp
jns
mov
jl
and
popf
sub
and
dec
rorb
das
cld
jg
add
pmaxub
sbb
insl
es
je
xor
jae
mov
sbb
hlt
fs
mov
rorb
pop
mov
movsb
sbb
dec
shlb
aas
cmp
flds
rclb
push
mov
mov
fdiv
scas
mov
pop
sbbl
cs
aam
mov
xor
adc
std
sbb
jbe
fs
ja
andb
adc
or
ja
imul
inc
dec
adc
push
inc
sub
mov
pop
jbe
mov
mov
pop
loopne
pusha
xor
xchg
in
cmp
push
sbb
je
popa
xor
stos
inc
push
outsl
ds
call
adc
vmwrite
hlt
insb
pop
iret
mov
fucomip
push
insb
xor
dec
jnp
sub
imul
add
out
dec
pop
shll
jae
dec
xchg
sarb
pop
jne
cmp
mov
ds
jle
stos
shr
adc
cld
mov
adc
jp
mov
jae
jecxz
lahf
fiaddl
inc
in
popf
and
mov
jns
inc
adc
pop
mov
pop
fstpt
aaa
mov
int3
push
cwtl
test
add
cs
cs
in
dec
lret
cmpsb
repz
xor
xchg
pop
mov
inc
cltd
divl
jnp
sarl
inc
rcr
xor
arpl
arpl
outsl
lret
fdivrl
iret
dec
insb
jbe
sub
test
push
rolb
dec
sbbb
push
insb
subb
int
or
loope
sbb
pushf
cs
cmp
insb
je
xlat
adc
test
insb
mov
add
lahf
repnz
adc
sbb
mov
cmp
inc
stc
pop
or
das
jle
fcoml
lea
add
dec
out
iret
jmp
aas
in
push
data16
mov
push
add
add
push
icebp
mov
lea
stos
scas
sti
dec
fcom
mov
xor
dec
xchg
or
or
cs
cmp
mov
sahf
mov
out
scas
popf
inc
clc
sbb
xchg
out
jp
xor
jmp
sbb
mov
repnz
lret
xlat
inc
dec
mov
dec
test
inc
mov
idivb
push
jne
mov
aaa
push
dec
call
or
fdivrl
xchg
cmp
push
sub
std
std
mov
and
xchg
add
push
sahf
iret
cmp
fdivrs
cmp
shlb
push
jbe
mov
xchg
imul
iret
xor
dec
icebp
fdivrl
testb
dec
xor
xchg
fisubrl
push
xchg
xchg
jno
fisubs
fstpt
adc
in
cs
mov
divb
push
cmpsb
push
jnp
std
cmpsb
pop
dec
sub
sub
pop
sub
cmp
add
add
dec
in
dec
out
lds
cli
xchg
cmp
imul
mov
lods
movsl
pop
cltd
push
xchg
mov
rcrl
mov
mov
out
sub
stos
add
add
jge
aas
push
cmc
arpl
icebp
clc
xchg
fldcw
mov
sub
test
pop
cmp
cmc
rolb
into
or
cmp
sub
jl
jns
popa
pop
je
inc
sahf
mov
cmp
and
iret
sub
out
mov
mov
in
insl
sub
inc
rclb
dec
ss
lcall
rclb
lods
add
scas
test
push
mov
mov
repz
cs
int3
inc
es
mov
or
xchg
xchg
dec
hlt
lods
test
fcoml
cmp
lods
ljmp
js
pop
outsb
rorl
cltd
fnstsw
jecxz
push
mov
outsb
mov
mov
lods
movsb
in
in
lods
imul
neg
std
sub
dec
add
sbb
cmp
add
add
add
leave
cmc
cmp
cld
lret
insl
sti
jp
mov
or
adc
mov
dec
push
fs
ja
sti
cld
push
mov
mov
push
push
mov
xor
xchg
pop
fwait
pop
insl
adc
lea
inc
subb
jmp
and
jge
push
int3
push
int3
rorl
cmp
mov
mov
hlt
jg
and
pop
and
arpl
pop
hlt
fmuls
dec
adc
out
shrl
nop
outsb
sub
lock
pop
iret
mov
and
mov
stos
loopne
cmp
fs
push
test
mov
jg
or
xor
out
sarb
ljmp
push
in
inc
fwait
insl
neg
fildl
repz
add
xchg
jle
jns
cmpsb
mov
and
mov
test
pop
test
xor
outsb
push
fdivr
and
add
push
subb
in
push
mov
inc
clc
lods
out
inc
insl
add
add
add
mov
lahf
add
ja
mov
push
jge
sub
ljmp
pop
and
lods
jl
pop
pop
fwait
rcrl
cmc
pop
jnp
xchg
enter
enter
cmp
and
mov
dec
fcomps
sbb
or
mov
movsb
jb
mov
dec
movsb
in
jo
lret
out
rorl
and
je,pn
pop
or
in
dec
add
or
mov
bound
xchg
movsl
es
insb
in
es
mov
loopne
daa
and
or
jl
popf
jle
pop
fnstenv
xchg
mov
cmp
inc
xchg
xor
jge
xchg
loope
jp
or
or
mov
jg
xlat
es
cld
sbb
jp
xchg
sbb
xor
and
sub
push
test
xchg
xor
je
mov
ret
add
ret
xorl
fs
testb
push
jge
add
add
ja
out
sbb
insb
sbb
add
add
aaa
sti
pop
mov
lcall
cmp
rcll
fsub
inc
fadds
imul
ret
nop
fwait
in
test
push
les
or
repz
imul
enter
out
ss
pop
push
nop
mov
or
or
inc
mov
les
insb
xor
or
add
fists
movsb
out
cmp
sti
inc
in
rcrb
xchg
push
inc
ss
cmp
test
jnp
push
js
inc
gs
lods
dec
sub
adc
fs
fsts
pop
sub
pop
data16
cmpb
orb
out
shl
imul
scas
icebp
adc
aaa
pop
loopne
cld
scas
je
mov
xchg
sub
cmpl
jbe
jno
mov
fldl
jnp
and
rcll
sarl
push
sub
and
cltd
push
push
pop
pop
fsts
daa
sub
ja
mov
sub
dec
outsl
add
add
add
cmp
pop
mov
and
les
out
lods
jns
int
jge
stos
mov
fnsave
iret
ds
insl
int3
mov
jp
mov
mov
and
rol
mov
lahf
and
sbb
fsubrl
iret
sbb
mov
xor
aas
ret
fmull
es
dec
lods
sbb
out
icebp
out
ss
outsl
fimull
shll
repnz
sbb
jne
cmp
or
xlat
popa
xchg
pop
pop
mov
dec
add
incb
dec
in
or
mov
lods
adc
hlt
shll
aaa
xchg
rclb
sub
jmp
pop
fldcw
mov
or
mov
and
adc
scas
xor
fisubl
sti
into
mov
xor
data16
ret
push
mov
jmp
lret
sub
mov
jo
push
adc
test
out
or
loopne
cltd
daa
push
sahf
dec
pop
ljmp
lods
sub
add
int
mov
jnp
outsl
cmpsb
loopne
and
mov
jo
add
add
in
inc
mov
jmp
dec
xor
dec
or
hlt
dec
sbb
pop
dec
push
push
pop
aam
pop
out
outsl
js
cwtl
std
mov
push
and
filds
rol
inc
push
pop
scas
push
pop
inc
xor
pop
cli
xchg
sbb
lock
ficoml
cld
stos
pop
lock
cmp
loope
adc
mov
ds
les
push
dec
aad
pop
lods
push
inc
outsl
xor
adc
fcomi
jmp
xor
scas
jns
loop
in
xchg
in
jmp
cmpsb
sbbb
sub
add
call
test
aad
inc
sbb
sar
hlt
cmp
imul
hlt
lods
stos
mov
push
ret
xchg
sahf
test
jae
push
out
shrl
mov
or
test
in
std
mov
idivb
dec
sub
pop
xchg
push
mov
cli
xchg
jle
push
je
inc
fistpll
jno
add
add
xor
cs
outsb
stc
or
mov
pushf
jno
xchg
push
xchg
adc
adc
outsb
xor
scas
sub
scas
cmp
adc
push
cmp
sub
insb
pop
xchg
jnp,pn
push
xchg
push
mov
rcrb
xchg
jne
ds
jns
or
jmp
mov
loopne
and
mov
adc
loope
inc
fisttps
bnd
cmp
lds
iret
xlat
int3
outsl
adc
into
subl
push
add
fadd
loope
dec
mov
pop
stc
rcrb
cwtl
and
cwtl
or
mov
or
add
lock
mov
nop
outsl
inc
enter
inc
loop
pop
jne
jo
int
test
in
lcall
stos
test
sbb
and
inc
daa
xchg
es
or
ret
out
lret
clc
pop
or
cld
mov
pushf
aam
xor
add
add
fwait
jnp
aad
sbb
inc
add
add
add
jnp
jle
xchg
icebp
mov
out
aaa
sbbl
mov
sub
push
cltd
aad
rclb
mov
leave
enter
and
mov
pop
sub
stos
cli
outsb
xchg
ja
cli
int
jmp
adc
add
jp
jno
push
and
sub
pop
sub
xchg
push
xchg
mov
lea
mov
xor
cmpsl
sub
sbb
aad
xchg
jg
lods
stos
arpl
fwait
popa
cli
fistl
push
cmp
andps
dec
mov
outsl
mov
imul
push
fsubs
popa
int
inc
or
sahf
loopne
jno
mov
sub
fdiv
lea
lcall
or
cmp
push
xor
stos
dec
shrl
jecxz
push
lds
les
loop
inc
divb
xor
test
clc
inc
out
add
add
mov
std
mov
sub
ds
add
add
ret
xor
cli
xlat
xchg
lods
dec
test
cmc
xor
int
loop
iret
add
jge
loopne
imul
aam
mov
dec
jmp
cmpsb
push
xor
pop
nop
pop
fld
push
inc
stc
add
mov
in
aaa
xchg
lock
fisubrs
add
iret
imul
pop
jg
fcoml
sbb
or
mov
nop
fildl
movsl
xchg
out
cmp
ljmp
pop
sbb
xor
adc
stc
ror
inc
pop
mov
fnstcw
jnp
aam
es
cmp
mov
je
xor
sub
icebp
jmp
out
loop
xchg
clc
xchg
imul
cmc
mov
add
popf
fcomps
jle
clc
das
adc
mov
cmc
or
aad
cmpb
ret
or
cltd
jns
mov
jbe
add
lods
dec
lahf
and
sbb
mov
enter
push
roll
js
inc
icebp
adcl
xchg
fisttps
mov
lahf
call
add
add
mov
in
les
lock
or
les
mull
sbb
inc
push
cmc
mov
aad
aad
fidivrl
ljmp
lss
mov
cmpsl
push
scas
rorb
adc
sub
fldt
pop
adc
enter
adc
stos
vpunpckhwd
push
test
push
into
sbb
nop
nop
repz
data16
cltd
xor
rcl
pop
sahf
stos
movsl
imul
lock
je
xchg
mov
jns
dec
pop
aam
in
dec
sahf
mov
cmp
int3
push
cmpsl
xchg
push
pop
pop
fwait
stc
xchg
or
sbb
inc
popa
mov
sbb
lahf
shll
jb
push
or
push
je
cs
cli
sub
push
mov
inc
xchg
in
fidivrs
or
aam
jae
mov
ret
arpl
or
scas
repz
sbb
push
scas
loop
add
add
bound
sub
sbb
jne
add
add
pop
int3
addr16
testb
int3
xor
push
push
push
push
movsl
sub
mov
push
cmpsl
fildl
pop
int
call
sub
sbb
pop
sbb
sahf
mov
push
fildll
jl
jmp
pop
push
out
pop
push
into
jbe
jmp
push
push
adc
cmp
jp
aam
cmp
xchg
xorb
xchg
mov
sarb
jo
stc
sahf
pop
push
adc
clc
insl
push
cmpsl
cmp
adc
sbb
sahf
mov
and
sarb
stc
and
pushf
sbb
cltd
ljmp
push
or
mov
in
mov
inc
pop
and
bound
pop
scas
sub
jecxz
mov
inc
lock
sbb
lds
lods
inc
xchg
jle
push
lcall
or
add
mov
xor
sbb
add
add
jns
divl
in
sub
fs
add
add
push
stos
sti
lock
mov
mov
aas
das
mov
or
cmp
push
jl
mov
push
dec
xor
cmp
pushf
addr16
fisubrl
scas
stos
sbb
enter
shll
js
sub
daa
mov
xor
ficoml
cs
inc
add
push
loope
pop
out
push
mov
mov
shll
cli
stc
and
xor
pusha
aas
inc
movsl
aas
push
mov
mov
std
jne
mov
out
je
shl
neg
lret
mov
xchg
xor
fsubrs
push
inc
ss
mov
cmp
fbstp
adc
into
insb
pop
jg
adcb
lock
pop
mov
cmp
add
mov
jecxz
add
mov
sub
jno
or
lds
add
clc
fisubs
mov
mov
lods
xchg
add
add
add
pusha
adc
or
fisttps
cmpsb
push
iret
movsl
cmpsb
cmp
out
push
add
rorb
push
pop
or
pop
cmp
xor
pop
pop
mov
lea
es
add
mov
leave
outsl
test
xchg
push
or
and
mov
mov
sub
inc
test
and
xor
dec
adc
add
push
mov
cli
mov
cmp
jl
lock
movsb
adc
adc
cltd
or
adc
ja
sbb
scas
adc
cs
pop
nop
rcrl
mov
gs
lock
mov
icebp
dec
nop
scas
sti
or
arpl
push
mov
inc
pop
fst
cltd
es
fstl
xchg
mov
mov
icebp
ja
xchg
push
jnp
in
gs
push
mov
jne
dec
fdivrs
cltd
jecxz
adcl
mov
outsl
shlb
mov
or
add
add
fildl
fisubs
fucomip
lods
das
les
mov
push
inc
aaa
sub
xor
xor
movsb
testb
inc
xor
push
lock
js
inc
sbb
push
fwait
cli
mov
inc
xchg
aaa
stc
xchg
out
inc
aaa
lods
sarb
lds
mov
jno
jno
stos
dec
ret
xchg
jle
test
mov
cmp
pop
jge
lods
stos
shll
push
cwtl
inc
mov
jmp
ret
push
xchg
outsb
adc
in
jl
cs
fstps
add
ljmp
mov
xchg
mov
adc
les
xchg
arpl
mov
pop
iret
sar
sbb
jns
leave
or
xor
scas
mov
in
scas
push
imul
dec
mov
jmp
xor
xchg
lods
out
mov
insl
repz
rolb
sbb
orb
ljmp
jl
lds
in
jo
add
add
add
pushf
and
or
push
mov
cltd
outsb
push
adc
movsb
add
out
lods
jle
lret
loopne
mov
cmc
loop,pn
add
shlb
das
lock
js
out
lcall
dec
ret
outsb
adc
hlt
xchg
std
data16
adc
xchg
into
push
adc
js
test
ret
or
lds
cs
fistpl
subl
test
mull
mov
and
stc
popf
jge
pop
scas
sub
jl
stos
mov
fwait
add
mov
xor
add
pushf
cltd
fstpt
or
sahf
test
or
inc
mov
enter
ljmp
sbb
pop
lahf
ficomps
push
movl
dec
ret
push
mov
rcrb
add
mov
push
and
daa
xor
jo
ja
std
stos
sbb
ljmp
add
add
add
mov
adcl
mov
jbe
xor
sar
cwtl
idiv
insb
aad
int3
push
xor
pop
stos
leave
xor
sbb
adc
jb
loop
xor
in
outsl
mov
lahf
dec
aaa
in
mov
cmp
cwtl
lea
cs
js
mov
lcall
das
lret
lahf
cmp
shrb
ret
mov
or
mov
mov
mov
test
scas
bswap
xor
cli
push
inc
sub
dec
into
sar
jns
push
mov
jno
lea
pop
lods
fildl
push
enter
imul
fldenv
popf
inc
dec
aam
sahf
call
les
jne
loopne
stos
adc
xchg
negl
and
imul
je
test
imul
repnz
outsl
popf
clc
seto
faddl
mov
neg
filds
add
add
cmpsb
push
sbb
scas
icebp
js
add
add
add
push
or
mov
inc
xor
inc
mov
data16
adc
loope
cwtl
mov
ljmp
mov
mov
pusha
sar
das
jae
cld
ljmp
add
mov
test
cmp
lock
fwait
add
cwtl
imull
mov
adc
jg
dec
mov
fs
pop
jnp
cmp
in
sub
sbb
leave
outsl
clc
jl
pop
scas
mov
add
fadds
lcall
loope
imul
lret
lods
push
and
mov
jge
pop
popf
and
mov
mov
je
lea
std
sbb
jae
pop
mov
xor
ret
jge
jb
pusha
sub
adc
xchg
in
orl
dec
mov
mov
inc
int
mov
cltd
push
xchg
mov
out
dec
movsl
repz
cmc
dec
adc
cmpsl
jae
jnp
ja
xor
cli
mov
jo
jl
add
add
add
mov
aad
sahf
or
lds
xlat
jmp
lea
mov
adc
daa
out
pop
xchg
jmp
cmpsb
cmovns
shlb
jb
add
inc
out
lcall
or
cmovbe
add
push
pop
lods
jno
and
mov
and
jecxz
mov
adc
adc
iret
js
mov
movl
flds
leave
fdivrs
lret
call
lock
shrl
lock
mov
pusha
sub
dec
push
cmpsl
cmc
lods
out
dec
in
arpl
in
adc
std
adc
sub
daa
pop
divl
xchg
push
fcoml
cwtl
out
push
mov
or
cmp
mov
decb
aaa
bnd
dec
inc
add
les
sbb
scas
sbb
and
and
push
push
xorl
out
ja
outsb
or
nop
ret
jle
mov
pop
and
loopne
std
test
lcall
jbe
aad
jge
add
add
clc
mov
outsb
out
jbe
sahf
movsl
pop
jae
xlat
mov
and
xor
dec
inc
and
inc
pop
push
ljmp
call
ja
pop
cmp
adc
aad
inc
and
xchg
push
out
clc
les
xchg
icebp
sbb
xor
pop
cmp
push
les
and
mov
xchg
stos
cmp
cmp
mov
rol
fldenv
cmpsl
bound
dec
or
pop
shrl
nop
push
movsl
out
and
jb
aam
dec
aas
fcmovne
adc
lahf
repz
dec
sbb
sub
dec
cs
repnz
loop,pt
and
test
and
mov
nop
cmp
mov
mov
mov
xchg
inc
icebp
mov
and
shll
shrb
ljmp
ds
xchg
stos
adc
sub
jg
xchg
pop
mov
add
add
testb
daa
mov
mov
add
dec
push
adc
movsl
and
push
dec
ret
pop
and
adc
or
mov
mov
cltd
sbb
gs
pop
sub
xchg
lahf
jo
iret
and
push
sub
inc
xchg
jbe
popf
mov
in
mov
es
rcr
jmp
pop
dec
inc
dec
inc
add
movsl
test
xlat
jp
or
stc
mov
or
ja
fdiv
jmp
and
mov
fwait
gs
dec
out
inc
inc
sub
stos
cmp
hlt
and
fmuls
jns
mov
cmc
pop
les
cwtl
jl
sbb
in
sbb
imul
and
mov
bound
test
mov
scas
pop
dec
push
and
sub
outsb
dec
push
test
shlb
mov
loop
jl
sub
outsb
inc
mov
cmpsb
mov
pop
mov
stos
imul
mov
jg
or
add
add
lcall
jge
decb
add
add
sub
push
jo
iret
jno
mov
jge
dec
push
mov
sbb
je
inc
out
daa
mov
pop
scas
jg
pop
and
xchg
fwait
mov
jl
adc
jg
mov
dec
sbb
inc
and
cmp
add
mov
fwait
sbb
imul
adc
psrld
xchg
sti
in
ljmp
add
je
into
and
push
imul
mov
incb
sarb
sub
das
and
les
in
adc
inc
fwait
inc
mov
ja
cmp
dec
push
mov
push
xlat
push
into
xchg
fstl
sub
mov
cli
xlat
mov
shll
popf
jmp
outsb
push
dec
push
dec
mov
jne
add
pop
mov
dec
cmp
xchg
add
icebp
adc
clc
sbb
push
mov
xchg
clc
sahf
test
jge
in
jae
add
add
mov
idiv
jne
iret
cmp
pop
sbb
add
mov
jo
mov
into
or
and
mov
js
stos
push
sbbl
cmp
test
sbb
mov
insl
cmp
dec
add
repnz
cmp
shll
js
dec
dec
cld
add
or
loope
xchg
pop
sbb
ret
ss
cs
adc
insl
pop
inc
sub
mov
inc
sub
xchg
paddd
pop
push
mov
aaa
and
or
or
outsl
or
or
repz
mov
mov
iret
cmpb
or
pop
dec
out
inc
mov
lods
mov
outsb
mov
add
sbb
in
adc
testl
and
mov
pop
inc
xchg
in
add
push
jnp
test
dec
mov
rclb
shlb
push
fcomps
inc
jb
mov
imul
and
add
add
pushl
sub
stos
test
mov
add
add
sbb
int3
mov
sahf
scas
gs
mov
enter
ja
fwait
xchg
jecxz
aaa
dec
shrl
sbb
rorl
push
sub
out
mov
and
mov
lea
pop
icebp
sbb
es
fbld
lret
popf
pop
push
fstpl
mov
rolb
out
cmp
rorl
popa
mov
icebp
jne
pop
scas
jbe
mov
add
and
push
cld
inc
fstl
jmp
cmpsl
xor
fisttpll
insb
push
mov
xor
les
dec
loope
insb
adc
shrd
mov
sarl
movsb
jmp
cmp
cld
les
or
adcl
arpl
push
inc
jge
sbb
loopne
shlb
sbb
pop
loope
lea
scas
xlat
mov
lods
dec
mov
sub
sbb
sub
add
add
sti
iret
ss
push
jno
mov
add
add
add
out
sti
cmp
jb
xchg
adc
and
cmp
jae
dec
cmp
xlat
pop
push
int
xchg
andl
ficoms
call
adc
mov
mov
bndldx
ret
pop
and
movsl
ja
xor
ljmp
sbb
mov
push
cld
ljmp
xor
push
xlat
dec
cmc
rcrb
xchg
pop
jp
adc
lahf
cmpsb
es
int
add
mov
negl
leave
dec
add
or
test
xchg
cs
xchg
xor
mov
mov
enter
aad
int3
dec
dec
pop
into
jno
mov
rorb
mov
dec
mov
inc
mov
or
repnz
or
int3
shrb
push
xchg
xor
fldcw
jo
xor
push
inc
es
sub
into
int
push
push
test
mov
in
sub
imull
sub
std
adc
loopne
xchg
inc
lahf
sti
hlt
out
dec
roll
pop
lahf
sub
add
add
sub
inc
mov
mov
scas
ds
imul
sbb
add
insl
fucom
ja
mov
mov
fstl
pushf
mov
lods
movsb
jmp
cmp
or
test
outsl
xchg
pop
sub
das
and
mov
scas
lcall
mov
adc
xor
test
adc
cwtl
je
icebp
and
jne
mov
cmp
jecxz
jle
cmp
pop
js
or
cmpsl
es
les
pop
push
adc
xlat
cmpsb
jl
call
mov
in
mov
popa
cmp
enter
fnstcw
or
je
mov
pop
push
push
pop
in
fs
adc
sub
cmpl
ja
inc
push
inc
sahf
pop
inc
push
lahf
in
and
shr
mov
mov
add
sahf
mov
sub
mov
cmp
mov
imul
add
mov
mov
mov
add
add
add
xchg
fs
cmp
dec
add
sti
mov
push
dec
loop
adc
pop
std
jno
mov
fidivrl
sbb
sbb
xor
faddl
mov
or
and
inc
scas
test
stos
mov
push
xor
adc
mov
out
cmc
dec
fisttps
pop
mov
dec
lds
mov
or
and
xchg
repz
lahf
cmpsl
out
fimuls
and
loope
pop
rcll
int
mov
jnp
cmp
leave
xor
rorb
cmp
mov
aam
dec
pop
scas
addr16
outsl
dec
add
loope
mov
push
andb
je
popa
cmp
mov
push
mov
or
adc
cmpl
pop
insb
pop
js
test
outsb
mov
dec
jns
icebp
push
lcall
pop
jle
shr
mov
fwait
mov
xchg
dec
and
out
ljmp
lock
xchg
push
popf
lcall
add
add
pop
mov
cmp
dec
inc
mov
jbe
cmpsl
dec
lds
inc
or
and
pop
cli
dec
lock
movsb
int
shlb
sbb
dec
mov
xor
nop
adc
test
sub
add
enter
inc
push
pop
js
ja
and
repnz
jno
repz
pop
dec
ja
xchg
mov
xchg
dec
fsubl
cli
jnp
scas
sub
jns
add
and
cmp
inc
add
fstp
pop
mov
jno
xchg
mov
jae
add
add
daa
xor
arpl
sbb
fiaddl
dec
fcmovb
aad
and
sub
and
daa
mov
sub
gs
and
xor
cmc
ljmp
jge
daa
ss
test
mov
shlb
pop
lds
mov
addb
add
imul
push
jnp
sbb
push
xor
iret
and
add
add
cmp
jge
lock
arpl
cmp
sbb
add
inc
push
sub
mov
sub
jecxz
fisubrl
inc
call
mov
pop
mov
js
cmc
shrl
mov
and
insb
and
dec
or
leave
int3
mov
lcall
cmpsb
or
xor
lcall
lcall
xor
jbe
dec
or
push
and
push
ds
popa
fistl
and
mov
or
out
pusha
mov
sbb
mov
repz
cli
hlt
aam
pop
mov
cmpsb
jae
test
or
sbb
pop
ss
pop
xor
mov
idivb
popa
icebp
mov
js
scas
xor
sti
xchg
xchg
add
push
or
adc
dec
loop
ja
mov
andl
push
inc
pop
fdiv
out
data16
insl
cmp
add
add
aas
or
mov
add
and
add
add
mov
cmp
jmp
xchg
add
fstl
mov
sub
mov
push
inc
mov
popf
push
dec
icebp
fdiv
test
xor
test
pushf
inc
ds
lcall
cmp
arpl
or
push
mov
pop
aaa
outsb
in
inc
loope
das
xchg
dec
mov
xchg
adc
push
negl
xor
cmp
sbb
dec
sub
sbb
mov
mov
adc
mov
imul
mov
adc
adc
sbb
inc
fs
mov
movsb
mov
adc
rorb
in
or
leave
xchg
mov
mov
insl
mov
push
jo
out
mov
dec
hlt
push
pop
sbb
dec
enter
sbb
cmp
mov
jnp
or
mov
xchg
mov
ret
inc
mov
int3
lret
mov
ja
adc
add
add
push
outsb
fisubs
test
call
mov
add
add
mov
mov
in
pop
and
cwtl
mov
push
jecxz
inc
pop
sbb
ficompl
sbb
adc
xor
and
popf
fnstsw
test
dec
out
test
mov
inc
mov
fdivr
push
jle
cmp
jl
into
lods
inc
or
ret
cmp
push
insl
push
or
loop
sti
jl
jo
orl
xchg
xor
inc
cmp
pop
push
adc
aad
movsb
and
xor
repnz
or
js
repnz
fisubs
add
nop
lahf
xchg
sub
popf
sarb
shl
addr16
popl
xor
fwait
adc
int
mov
sub
pop
pop
or
aam
cmc
cmp
mov
xor
rcrb
inc
xchg
pop
mov
addr16
xor
mov
pusha
fstpl
movsb
sub
jge
jae
cmpsl
in
xchg
out
xchg
cwtl
sar
fiadds
push
mov
lret
notl
movl
add
add
mov
jns
add
add
add
daa
and
and
ja
add
adc
subb
inc
aad
lds
or
mov
sbb
add
shrb
mov
stos
lds
fstl
sub
sahf
dec
jge
divb
xchg
adc
dec
pop
aad
xchg
stc
xchg
lods
sbb
xorb
dec
add
les
loop
push
sbb
jno
jmp
pop
jbe
push
jecxz
shlb
jnp
inc
mov
jne
push
fsubl
cmpsb
pop
mov
and
push
lock
mov
repnz
ds
lock
push
jp
subb
jns
int
aaa
addr16
fdivrp
mov
popf
jg
aad
scas
lods
insb
jl
sub
dec
add
jp
cmc
repz
sbb
rorl
cmp
sbb
xchg
sub
cmp
subps
dec
push
int
fstp
iret
push
cmpsb
fadd
dec
xchg
mov
inc
mov
add
add
add
sbbl
adc
jnp
jbe
cmpsb
mov
outsb
mov
fs
jmp
insl
sbbb
sbb
push
pop
dec
mov
loopne
cmp
lods
enter
cmp
adc
push
rol
and
xor
mov
loope
add
fcompl
pop
out
insl
out
sbb
sub
or
ret
shl
inc
shl
test
ja
lods
jmp
rcll
ds
shlb
or
xor
xchg
sub
js
jl
add
xchg
push
sbb
call
ret
sbb
pop
jge
pop
imul
push
and
cmp
in
pop
push
inc
push
lret
cmp
shl
xor
jmp
scas
mov
add
jmp
push
dec
lret
inc
push
and
and
mov
adc
add
mov
add
ficoms
lahf
and
scas
std
out
ljmp
mov
add
add
dec
inc
pushf
aam
jmp
mov
out
rorl
pop
and
mov
pop
in
scas
pop
dec
add
dec
test
push
fnstsw
nop
jb
dec
inc
popf
mov
inc
dec
lds
pop
adc
add
xor
lret
enter
repz
sbb
pusha
fcmovnb
xor
push
pop
push
sbb
cmpsl
pop
mulb
fdivrs
sbb
mov
mov
mov
test
inc
adc
mov
fs
mov
jmp
inc
call
ret
xchg
push
and
mov
mov
cwtl
stos
test
xlat
into
mov
sub
popa
and
in
in
and
mov
outsl
outsl
and
sbb
push
shll
add
fwait
cmpl
and
fstpt
fwait
adc
adc
iret
inc
add
xchg
stc
jmp
mov
ror
pop
in
lods
les
jnp
mov
icebp
pop
cmp
add
add
inc
mov
cmp
pop
jnp
rcll
xchg
and
pushl
into
das
ss
mov
pushf
mov
adc
mov
jmp
outsl
sbb
mov
mov
movsl
subb
lea
pop
imul
repz
cs
pop
sti
les
es
rolb
mov
out
xchg
cmpsb
repz
dec
pop
cmpsl
mov
sbb
push
sti
cmp
loop
aam
inc
add
jae
imul
fisubs
cmpsb
xor
and
pop
imul
sbb
pop
cmpsb
pop
les
pop
mov
pop
xor
mov
ljmp
or
aam
daa
adc
jne
stos
fisubrl
lods
fstl
inc
push
dec
adc
es
sub
divb
jmp
dec
movsl
into
negb
outsb
lret
cmpsb
hlt
inc
inc
or
test
fcomps
add
mov
rorb
add
jge
or
lock
ljmp
mov
scas
rolb
sbb
test
out
shll
jne
adc
jecxz
test
pop
sub
push
loop
push
pop
mov
outsb
sub
imul
cmpsb
cmpsb
push
daa
xor
push
inc
mov
pop
movsl
outsb
push
pop
stos
push
int
and
mov
loop
mov
cmp
xor
pop
imul
arpl
or
rorl
cmpsl
mov
xchg
push
ss
pop
cmp
insl
adcb
insb
out
cmp
cmp
addr16
addr16
ljmp
push
mov
and
mov
push
sar
mov
mov
inc
nop
sub
jmp
mov
fnstsw
and
cmp
fildl
aam
lcall
ja
mov
jbe
and
in
insl
mov
add
ljmp
dec
mov
add
add
add
adc
mov
aaa
or
rcrb
fmuls
in
les
aas
in
mov
adc
sub
ljmp
adc
pushf
pop
xchg
loopne
cli
arpl
dec
mov
cmpsb
inc
mov
pop
test
sbb
cmpsl
js
shll
lds
push
mov
es
cmpsb
imul
mov
inc
arpl
lods
inc
dec
xor
sbb
add
xorb
fwait
test
xchg
fs
mov
rorl
iretw
xchg
cltd
mov
dec
adc
loopne
out
out
or
sar
js
mov
rcr
xchg
sbb
lret
pop
add
pushf
int
test
pop
or
sbb
adc
xlat
loop
sbb
mov
int
js
testb
mov
inc
faddl
mov
in
and
movsb
jb
add
add
aaa
shlb
cmc
div
testl
pop
enter
add
add
fmull
dec
add
cmp
push
sub
jns
in
xor
and
inc
jno
dec
and
fwait
jecxz
or
call
iret
xchg
jno
dec
inc
push
and
std
cmp
or
jns
stos
sub
fdiv
repnz
pop
jg
aas
lret
data16
xchg
xor
test
andb
test
inc
testl
cmp
aaa
imul
mov
mov
out
sbb
js
pop
and
sahf
mov
es
mov
enter
shl
out
dec
fistpll
xchg
sub
fldt
inc
out
mov
sub
push
aas
dec
inc
xchg
or
sbb
hlt
mov
out
lods
nop
or
xor
add
push
fwait
sub
insb
dec
pop
outsl
pop
dec
mov
pop
mov
push
mov
add
add
push
sahf
rcr
pop
adcb
mov
nop
add
add
add
cmp
jecxz
or
call
pushf
mov
ficoms
movsb
aad
adc
lock
test
pop
mov
popa
mov
lcall
popa
popf
inc
enter
repnz
insb
daa
jge
adc
xadd
push
push
outsb
sub
cmp
jo
cs
mov
inc
dec
mov
inc
repz
ljmp
shll
fwait
pop
rolb
int
cmpsl
lretw
or
inc
cmpsl
and
cwtl
push
orl
pop
pop
test
adc
and
test
xchg
adc
iret
xchg
popa
cmp
sub
xlat
incl
test
scas
repnz
imul
jecxz
jnp
aam
mov
cmc
pop
mov
fisubrl
andl
jnp
mov
hlt
xlat
sahf
push
cli
dec
frstor
mov
mov
mov
out
xchg
shll
cmpsb
jcxz
fimull
rclb
add
cmp
jo
xchg
mov
aas
inc
das
lea
push
xor
mov
stos
mov
dec
daa
js
pop
popf
sahf
addr16
cwtl
out
in
pop
sub
mov
inc
cmp
or
mov
cmp
xchg
bound
test
mov
das
inc
in
lock
into
ljmp
test
rcrl
add
aad
addr16
insb
lcall
cmp
cs
xchg
mov
movsl
bound
outsb
cwtl
divl
pusha
hlt
pcmpgtb
inc
dec
pusha
mov
cmp
arpl
outsl
xchg
and
cli
inc
dec
xchg
jnp
dec
pushl
mov
test
lds
dec
aad
mov
imull
adc
std
pop
or
adc
testl
or
aam
je
sarb
pop
jle
pop
hlt
jnp
sahf
xchg
pop
xchg
out
ret
bound
clc
jnp
jg
in
cli
enter
xor
cmpl
push
dec
add
aaa
in
mov
js
clc
mov
cmpsl
aam
or
inc
lds
mov
bound
push
fwait
push
or
ja
mov
push
das
push
jo,pn
jge
push
mov
jecxz
cmp
push
pop
lahf
inc
inc
cmpsl
pop
cwtl
test
in
fmuls
cs
mov
mov
cmpb
shl
or
dec
scas
dec
push
push
and
add
cmp
adc
int
test
xchg
into
ljmp
xor
xorb
cld
sub
sbb
fnstenv
pop
xchg
int3
pop
pop
sub
push
imul
outsb
aam
in
fwait
lods
mov
icebp
and
es
shrl
int3
add
test
mov
ds
insb
pop
inc
adc
fdivrl
aas
lds
out
xchg
jmp
mov
ss
lret
pop
in
loope
repz
ljmp
cld
gs
mov
fcoms
add
testl
ja
and
inc
icebp
fcoml
jno
sub
inc
dec
inc
jmp
xchg
mov
sarl
lds
stc
push
pusha
adc
push
lret
push
pop
shr
jne
adc
jnp
insl
stos
je
sbb
loopne
inc
xchg
mov
repnz
add
mov
mov
nop
mov
ss
lods
mov
cmp
imull
cmp
js
mov
vcvtdq2pd
push
popl
xchg
adc
inc
mov
shl
daa
inc
je
pop
imul
jge
push
out
insb
mov
pop
mov
push
jle
xchg
mov
and
scas
scas
xor
scas
movsb
mov
jno
repz
fildll
push
mov
pop
pop
adc
jne
fdivl
movsb
shrl
mov
xlat
mov
inc
aaa
out
cmp
dec
sbb
enter
insb
jl
sar
std
jle
pop
popf
scas
pop
mov
fcoml
add
fwait
std
xor
lock
loope
frstor
xchg
jg
shr
lods
aas
rcr
pop
loopne
mov
jbe
adc
call
movb
dec
ljmp
inc
mov
repnz
xor
clc
out
fidivrl
nop
xor
cwtl
adc
jl
rcrl
pop
arpl
xchg
lret
add
mov
and
push
sbb
mov
adc
pop
int3
fstp
or
and
dec
sti
push
or
sbb
inc
push
or
mov
xlat
stc
dec
xchg
push
push
mov
push
es
sbb
or
mov
addr16
incb
lods
les
push
add
inc
fnstenv
pop
mov
sub
inc
sub
pop
xchg
xchg
or
popf
ljmp
cmp
xchg
pop
sub
sarl
jae
repz
cld
lahf
pop
and
cmpsl
dec
fmuls
inc
lds
add
add
cwtl
or
stos
xchg
cmp
in
dec
bound
xchg
add
add
add
je
out
mov
pop
adc
xchg
jl
out
xchg
add
sbb
cwtl
xchg
shlb
pop
add
idivb
sub
push
les
add
dec
mov
add
mov
or
cmpsl
cld
xchg
rorb
lock
rcrl
mov
push
xchg
stc
pop
in
or
push
xchg
std
and
cld
out
sub
iret
test
pop
add
mov
lea
shlb
subl
sbb
ljmp
lock
outsl
jno
or
xor
hlt
mov
jbe
xor
or
inc
leave
test
push
pop
mov
das
sub
xor
idivl
pop
imul
and
sbb
ja
mov
mov
shrb
stos
xchg
dec
inc
lret
inc
jle
push
repz
pop
adc
and
or
arpl
xchg
mov
or
fwait
and
popa
mov
xorl
in
add
add
add
add
and
test
ret
sbb
xchg
frstor
notl
fs
and
mov
push
xor
imul
mov
aas
jne
bound
sub
out
and
sbb
and
and
stos
aam
xchg
inc
cmp
sub
rcrl
jns
xchg
lock
iret
or
add
pop
lock
clc
lock
imul
call
lret
mov
sbb
xor
xchg
mov
sahf
test
xchg
xchg
lods
mov
adc
sbb
je
jge
lahf
sub
test
ja
sub
bndstx
xchg
test
clc
jo
arpl
imul
stc
shr
ds
test
jbe
cli
gs
sbb
aaa
xor
in
add
cli
daa
shrb
xor
xlat
mov
dec
inc
hlt
orl
hlt
popa
test
inc
push
and
xlat
aas
dec
sbb
or
call
add
add
rorl
or
popa
subb
div
adc
test
jle
faddl
lea
jle
lds
pop
ret
adc
push
mov
or
out
leave
scas
sub
mov
lret
sbb
mov
sbb
mov
cmp
jmp
add
jo
stc
xor
loope
add
mov
xlat
jg
inc
outsl
out
or
mov
dec
pop
jno
call
add
sbbb
lret
fisttpll
push
ds
pop
sub
mov
mov
dec
pop
and
out
test
mov
sarl
cwtl
cmp
and
pop
cmpsb
sub
jno
lods
xor
xchg
and
imul
sti
sahf
nop
addl
jae
adc
push
in
imul
ret
stos
imul
outsl
vmwrite
pop
in
cwtl
add
add
add
mov
xor
cli
js
outsl
adc
sbb
pop
ja
xchg
mov
xchg
mov
xchg
arpl
outsl
dec
adc
push
and
bound
sub
outsl
cli
add
mov
push
cs
jg
pop
sbb
mov
cmc
pushf
xorl
cmp
es
dec
loope
enter
lea
mov
subb
lahf
insb
pop
nop
pop
dec
or
push
insl
mov
push
jecxz
xor
hlt
cli
mov
sub
jg
es
sub
lret
cmp
push
pop
mov
std
jno
xor
jae
test
cmp
mov
aad
outsl
jns
and
inc
sbb
movsl
xor
pushl
jo
mov
push
lahf
aad
addb
int3
cmp
lea
lea
inc
fwait
sarl
stos
cmp
add
add
lret
sbbl
popl
popf
and
cltd
add
add
add
fisttps
xor
jp
push
xchg
or
stos
fidivl
inc
js
xchg
inc
push
mov
ljmp
subb
xor
inc
addr16
or
xor
adc
fcompl
jb
push
pop
loop
cwtl
add
xchg
dec
sub
ret
push
mov
jnp
testb
dec
ror
jae
dec
mov
mov
in
dec
sbb
cmc
pop
je
mov
std
and
in
popf
imul
xchg
mov
mov
dec
negl
pushl
mov
pop
mov
cmp
xchg
dec
pop
xchg
es
sbb
sub
lret
iret
out
inc
sub
adc
int3
fbstp
mov
and
sbb
sub
inc
add
ds
push
xorl
mov
sub
dec
jae
test
xchg
movsl
les
pop
das
sub
aaa
jbe
pop
mov
imul
movsb
and
mov
lcall
lods
test
pop
push
fisttpl
or
icebp
decl
in
sbb
adc
stc
sub
adc
dec
fldcw
push
add
push
lea
jg
movsl
scas
adc
fucom
xchg
ljmp
cmp
je
aam
mov
push
or
out
in
xchg
mov
int
lret
lods
adc
adc
add
rcl
pop
cwtl
adcl
pop
mov
stos
sub
fwait
sbb
mov
lcall
push
xchg
xchg
pop
ja
scas
fidivs
into
jne
ljmp
scas
pop
ret
ss
cmp
pop
int
bound
popa
and
roll
imul
das
pop
push
inc
jns
jno
or
jp
mov
stc
adc
es
jp
fsubs
test
test
out
push
aad
lret
jno
mov
pop
int
lods
lret
rcrl
scas
or
test
adc
add
mov
jge
jg
ljmp
in
lahf
mov
test
clc
fwait
add
add
add
push
xchg
scas
adc
mov
mov
js
add
negb
lahf
dec
xchg
jbe
jp
dec
loope
pop
adc
aas
jmp
fstl
mov
xchg
mov
cmpl
jmp
jp
push
movsl
mov
and
data16
fwait
sub
mov
or
sbb
jo
dec
xchg
cmpsb
call
and
pop
push
les
dec
jg
sahf
xor
outsl
loop
sub
fcmovu
insb
mov
outsb
xorb
stc
fsubrp
and
cmp
idivb
jmp
cmpsw
test
test
sub
inc
popf
rclb
ret
andb
pop
pop
adc
push
xchg
mov
xchg
test
mov
mov
ret
pop
loope
test
scas
fcmovnu
ret
push
sub
jno
add
bound
stc
mov
add
add
ja
out
inc
sub
or
xchg
fwait
icebp
cld
pushf
add
add
add
iret
bound
ds
pop
imul
jae
leave
imul
pop
lcall
xchg
xchg
mov
into
mov
jb
addr16
cmp
jnp
imul
push
nop
jl
cwtl
bndstx
insb
or
cmp
addl
sub
jno
xor
or
rclb
fdivrl
mov
test
cmp
mov
sbb
jle
cmp
push
push
mov
mov
ret
xchg
shl
test
mov
sbb
loop
pop
xorl
adcl
fs
adc
enter
mov
pop
addr16
pop
or
cltd
push
mov
ja
hlt
push
mov
xchg
xor
mov
sub
lods
inc
inc
dec
jo
movsb
inc
and
scas
mov
mov
sbb
inc
aam
or
out
mov
push
dec
mov
loop
test
mov
cld
mov
add
add
adc
inc
sub
pop
or
jecxz
sbb
cld
daa
pop
outsl
adc
adc
adc
pop
sbb
sbb
shlb
or
aad
dec
cmp
cmp
ljmp
cmp
pushf
or
andl
sub
adcl
pop
fcomp
dec
popa
xor
mov
lret
sbb
mov
cltd
xor
sahf
aam
aaa
jg
mov
inc
pushf
es
dec
mov
ja
sbb
inc
push
adc
mov
xlat
in
jnp
push
outsl
or
fisubs
icebp
or
clc
dec
or
repnz
mov
xchg
and
pop
sbb
test
out
pop
xor
mov
sbb
jle
outsl
cs
add
rclb
out
repz
cmp
incl
push
mov
mov
lods
dec
stos
leave
inc
add
add
mov
repz
repz
mov
inc
add
add
add
add
pusha
add
loopne
push
mov
and
xlat
inc
icebp
je
clc
loop
mov
sbb
push
cmpsl
xor
fadd
rcrl
clc
add
cmp
fiadds
lahf
cmpsb
test
cmpsl
and
adc
bound
out
ficomps
out
vcvtpd2psy
rcll
cmp
jns
cli
push
push
je
sbb
mov
stos
sbb
sub
xor
mov
movsb
push
sub
into
jg
test
pop
sub
jg
push
fsincos
sub
sub
inc
mov
mov
fs
cs
xchg
mov
inc
mov
out
push
adc
push
and
cmp
or
nop
mov
data16
ljmp
sbb
shrb
add
xlat
pop
scas
out
out
jg,pn
add
cmp
xchg
shrl
js
cwtl
clc
pop
dec
ss
aad
add
add
mov
inc
inc
add
mov
add
mov
imul
aas
and
sbb
mov
push
dec
stc
inc
adc
nop
and
adc
cli
scas
lret
std
or
out
mov
aad
out
imul
sahf
je
mov
out
test
addl
into
jbe
dec
xor
push
mov
pop
mov
mov
mov
mov
pop
ja
test
pop
leave
cmpsl
cs
in
lret
push
faddp
xor
frstor
cld
pop
mov
inc
inc
mov
test
or
xor
jle
jge
addr16
jl
lcall
jp
scas
sub
insb
mov
fisttpll
sbb
mov
sub
mov
push
pop
hlt
stc
jns
sbb
xor
inc
dec
aam
out
sub
xlat
lds
jp
jb
mov
pop
adc
ljmp
add
add
std
inc
mov
into
mov
add
add
cltd
test
js
aad
dec
xor
mov
mov
jge
mov
adc
push
jle
jne
mov
pushf
out
adc
xchg
cmp
movsl
mov
out
mov
pop
pop
mov
push
or
and
pop
inc
mov
aam
repnz
shll
mov
popf
subl
xorl
mov
and
jnp
pop
push
cmpsl
or
aaa
or
sti
jle
mov
xor
rcrb
push
mov
cmpsl
fstp
std
push
mov
es
popf
stos
repz
shlb
into
scas
in
add
sbb
cmp
jno
pusha
mov
ficompl
es
jmp
int
inc
or
fisttpll
xchg
jae
loopne
imul
cmpb
cltd
stc
mov
mov
dec
xchg
stos
or
cmp
inc
cmp
lds
in
je
cmp
fmulp
mov
add
add
inc
fdivl
push
dec
mov
adc
add
dec
in
ljmp
cmp
jmp
jecxz
incb
sbb
push
aam
clc
arpl
test
aad
add
test
mov
sub
lcall
sub
sub
gs
adcl
fists
push
mov
xchg
scas
outsl
out
and
adc
aaa
fisubrs
mov
pop
test
inc
inc
mov
stos
subl
adc
pop
adc
jmp
cmp
stos
jmp
push
xchg
pop
das
addr16
bound
mov
mov
cmpsl
js
sub
jae
fmuls
das
or
std
dec
xchg
mov
or
push
and
inc
adc
sbb
xor
outsl
jge
add
lds
add
out
cmpsb
mov
mov
mov
mov
xchg
and
push
and
enter
pusha
pop
bound
add
sbb
mov
sbb
cmp
fs
add
add
add
sub
xor
dec
dec
ds
mov
pop
xchg
fistl
mov
enter
loope
xor
out
push
mov
test
sub
dec
cmpl
scas
or
divl
ljmp
push
cwtl
je
stos
jne
out
loopne
dec
inc
jno
dec
cmp
iret
ja
outsl
popa
dec
inc
pop
pop
add
lods
ds
xchg
push
shlb
lock
cs
pop
jmp
push
cmpsl
loope
mov
inc
daa
inc
adc
repnz
shrl
outsb
scas
lret
push
pop
dec
jmp
sbb
cmc
int
jne
pop
mov
hlt
mov
cltd
push
sbb
inc
out
push
addr16
and
shl
adc
push
xor
enter
frstor
dec
push
xorb
stos
movsb
inc
and
nop
inc
dec
add
call
inc
scas
movsl
cmpsb
lds
pop
mov
js
pop
test
stos
hlt
jmp
cmp
jbe
sbb
add
add
add
jae
cmp
aaa
adc
ffree
cmpsl
lea
inc
push
add
and
je
mov
bound
lea
gs
mov
dec
cwtl
and
enter
dec
mov
xchg
out
sbb
dec
imul
ficoml
gs
push
xor
lret
loop
shlb
sbb
sbb
mov
loop
jg
loop
sub
hlt
sahf
ja
repnz
mov
lea
fstl
add
nop
aas
sbb
test
adc
mov
jae
inc
int3
test
movsl
scas
push
jo
mov
adc
or
pop
fsubrl
mov
jp
xchg
dec
movsl
in
or
mov
cmp
repz
xor
insb
inc
mov
or
fs
rcrb
nop
stc
out
loope
aam
and
xchg
outsl
push
jmp
fs
popa
and
pushf
xlat
sahf
icebp
jno
rolb
add
add
push
nop
out
xlat
out
jg
in
xor
fdecstp
jmp
sbbl
ret
icebp
pop
xchg
movsl
inc
shrb
jmp
mov
das
imul
das
mov
leave
and
lea
jmp
jle
loopne
stos
into
dec
mov
out
sbb
and
enter
mov
imul
inc
or
pop
cld
push
push
pop
mov
jb
adc
leave
xlat
xchg
mov
mov
cs
dec
test
and
sbb
rcrb
cld
push
xchg
notb
je
pop
adcb
lods
mov
cs
das
loop
incl
test
mov
inc
jno
jmp
cmp
test
aaa
movb
int3
xor
and
repz
negl
cmpsb
rcl
notb
inc
adc
mov
xchg
aaa
sub
mov
pop
int3
mov
jnp
mov
cmp
sub
xorb
or
sbb
pop
fbstp
fldl2e
dec
lock
dec
and
add
insb
in
sbb
dec
add
call
cmp
aaa
cmc
jne
sbb
sti
cli
movsb
push
and
das
sti
xor
lock
xchg
pop
leave
adc
roll
mov
push
sub
adc
mull
mov
lods
daa
adc
jbe
test
jecxz
mov
pop
inc
test
inc
jp
push
in
and
xor
pop
fistps
add
cmp
mov
fdivs
imul
xor
jmp
loopne
xchg
notb
mov
mov
jnp
adc
shlb
xchg
sbb
arpl
cs
and
cmpb
push
jns
hlt
inc
je
outsl
mov
jo
inc
jo
sbb
jae
xor
xchg
jecxz
jge
and
lcall
clc
aaa
push
dec
jo
sub
cmp
inc
mov
mov
cld
dec
mov
pushf
mov
dec
shrb
and
add
add
mov
fadds
and
add
add
add
mov
dec
cli
popf
sahf
xor
mov
push
jmp
jl
outsb
xchg
push
lcall
not
mov
xchg
add
mov
adc
cmp
cltd
and
ljmp
das
or
daa
lret
xor
mov
sbb
movsb
inc
shlb
push
and
inc
out
mov
andb
xor
xor
mov
les
cs
dec
sub
add
aaa
inc
push
xchg
repnz
insl
dec
xor
jle
xchg
jne
inc
shll
imul
imul
and
jne
jecxz
jns
roll
inc
mov
repnz
lcall
sbb
and
push
out
aaa
mov
or
cmc
xchg
daa
test
and
insl
into
inc
dec
xchg
ds
or
add
lret
jnp
sti
jmp
push
mov
notb
test
add
add
or
clc
sub
xor
lret
repnz
enter
push
mov
popf
stos
jo
shr
push
fnsave
inc
arpl
push
pop
jb
or
xchg
lcall
cmp
add
aas
pop
or
and
mov
call
rcrl
loop
or
js
sbb
in
mov
mov
lods
mov
add
dec
mov
jp
cmpsl
lahf
xchg
test
mov
mov
mov
pop
cwtl
ds
pop
dec
inc
stos
insb
daa
fnstenv
adc
ds
sbb
cmpsl
push
iret
imul
xlat
xchg
insb
sbb
cld
test
mov
xor
xor
arpl
rorl
mov
cs
and
sub
fildl
jno
xchg
out
xor
fistl
popa
test
orb
inc
push
leave
sbb
in
scas
subl
repz
stos
pusha
in
mov
push
dec
mov
jecxz
lock
mov
sub
add
add
add
inc
in
adc
cld
scas
dec
add
mov
pop
pop
mov
sub
shr
mov
adc
out
and
scas
cltd
out
mov
adc
add
push
testb
fists
xchg
add
sub
sbb
add
mov
testl
cmpsl
arpl
cmc
xlat
push
out
je
adc
mov
dec
pop
sub
sbb
jecxz
sbb
mov
push
testl
bound
pop
adc
pop
jnp
in
in
into
mov
inc
adc
movsl
fildl
sti
mov
xchg
xor
stc
mov
jb
repz
out
ja
push
push
repz
xchg
cmp
add
scas
mov
pop
mov
xchg
mov
ror
mov
addb
out
lea
add
add
cld
mov
leave
loop
jg
xor
add
adc
sub
inc
mov
cmpb
ret
and
fmul
mov
insl
sub
sbb
mov
icebp
mov
rorl
pop
cmp
pop
jge
cmp
loopne
push
cmpl
mov
inc
sbb
push
sbb
mov
mov
mov
je
leave
mov
leave
xor
outsb
repz
jo
shrb
push
pop
lea
jge
mov
fxch
rol
pop
and
stos
out
hlt
addb
lods
mov
icebp
dec
ficompl
sub
pop
cltd
sbb
jb
push
fistpl
repz
inc
sbb
pop
adc
sub
ret
push
sbb
jb
lret
popf
inc
mov
std
clc
pop
and
cltd
or
xchg
xor
in
push
sub
mov
fsubl
cmp
ss
xorb
and
add
add
out
cmc
mov
repz
pop
xor
add
add
add
fidivrl
pusha
jo
inc
cltd
mov
sub
xor
sub
pop
lods
mov
pop
pop
inc
aas
push
aam
dec
pushf
insb
test
pop
lret
xor
ficompl
jmp
mov
mov
jp
sbb
in
movsb
fildl
movsl
xor
xchg
int3
jne
mov
fidivrl
push
aaa
rorl
mov
push
mov
inc
jg
enter
mov
add
jle
scas
mov
addr16
fbstp
and
mov
xchg
aam
adc
push
clc
sbb
mov
js
push
cmp
movsl
into
hlt
hlt
or
stos
shr
mov
repz
rcrl
mov
or
imul
repnz
out
imul
jb
and
shll
icebp
test
push
outsb
xchg
pop
out
and
xor
sti
stc
inc
adc
fdivp
rcrb
add
add
out
std
dec
std
pop
lcall
xchg
pop
push
lahf
call
cmp
add
rcrb
pop
int3
aam
sub
dec
je,pn
mov
outsb
cs
adc
dec
or
and
xor
adc
jg
xchg
mov
mov
es
je
stos
popf
sarl
and
je
mov
mov
sub
mov
mov
sbb
das
lods
sbb
fisubrl
and
inc
push
fmull
aas
aaa
or
dec
push
rcrb
movsl
mov
scas
xchg
or
les
jge
cmpsb
xor
mov
mov
lods
push
js
dec
mov
inc
repz
pop
dec
or
dec
mov
cwtl
xchg
fistpl
popa
mov
out
xchg
lcall
imul
adc
push
push
les
pop
jg
pop
mov
mov
sbb
dec
nop
dec
dec
pandn
insl
test
push
dec
pop
mov
add
add
fidivs
loop
ljmp
sbb
pop
cmp
add
add
add
ret
dec
xor
enter
jp
mov
xchg
and
cmp
aaa
dec
jl,pn
dec
add
pop
adc
flds
hlt
xorb
push
jecxz
pusha
sti
fildl
xchg
fldenv
mov
jl
mov
repnz
mov
imul
ret
testl
stos
movb
fadds
mov
push
xchg
dec
not
mov
ret
and
xchg
and
add
leave
adc
fs
add
sub
and
std
add
dec
sub
xor
pushf
sahf
mov
flds
or
arpl
pop
bound
inc
das
dec
sarl
jne
js
out
xchg
push
ss
inc
lods
sar
js
push
xor
add
outsl
js
add
xchg
lea
and
in
cmp
fsubl
scas
add
mov
or
daa
and
or
add
xchg
jg
jmp
std
mov
jns
sub
add
add
add
cmp
je
or
xor
sarl
addb
jbe
sub
xor
cmp
ret
cwtl
add
fbstp
push
lcall
jb
sbb
stos
leave
incl
ret
xor
lods
adc
jns
inc
pop
push
shlb
fstpl
xor
repz
or
stc
cltd
mov
push
outsb
movsb
or
xchg
adc
lods
adc
push
mov
adc
lret
clc
xchg
push
jle
sub
mov
add
stos
imull
filds
fs
or
jbe
xchg
pop
outsb
mov
dec
sbb
ficoms
xchg
pushf
jle
push
sbb
cmp
ds
imul
xchg
add
inc
out
std
mov
xchg
pavgw
dec
xor
nop
test
outsl
cli
push
ja
mov
push
shrb
insb
push
out
push
divb
inc
mov
adc
scas
add
add
add
and
outsl
xchg
lock
xchg
aas
daa
sub
mov
jbe
ja
adc
ljmp
iret
cs
mov
push
pusha
or
ficomps
jb
dec
mov
call
aas
cmp
xchg
or
cmc
sbb
inc
add
mov
ret
shrb
xor
sbb
xchg
jbe
jno
fsubrs
xorb
cwtl
mov
jae
movsb
aas
cmpsl
and
mov
sub
arpl
pop
orl
push
add
cli
out
test
xchg
fmul
xchg
pop
dec
jae
mov
and
dec
subb
or
vmread
xchg
rcrl
mov
xchg
jmp
sub
push
push
out
lcall
in
enter
movsb
shrl
sahf
dec
jo
mov
or
ret
or
in
mov
sub
xor
cli
dec
push
mov
push
pop
xor
cmp
inc
call
loop
mov
add
add
pcmpeqb
push
bound
pusha
add
push
jne
roll
dec
in
shrb
jbe
mov
pop
cmp
loope
cs
dec
sub
insb
repz
mov
inc
sbb
mov
fdiv
push
mov
out
gs
jge
pusha
lret
inc
jae
mov
popf
cmp
and
pop
push
cmpsb
jecxz
cli
pop
imul
fmull
outsb
xor
sub
add
pop
inc
out
aas
and
jle
outsl
nop
scas
idiv
and
je
add
addr16
mov
xchg
sarb
dec
pop
je
out
mov
jl
scas
mov
lahf
mov
fimuls
rcrb
in
and
lds
leave
xchg
mov
test
and
dec
stos
add
push
loopne
push
pop
or
jecxz
dec
in
repnz
fsubrs
and
leave
pop
mov
std
test
jnp
subb
jno
imul
xor
es
les
mov
arpl
lods
dec
mov
add
add
cmp
ja
arpl
lret
pop
mov
fwait
in
xchg
add
jl
mov
outsb
insl
movsl
adc
jge
push
pop
imul
test
in
lcall
fcos
cli
enter
enter
je
and
mov
hlt
sub
mov
sub
vpacksswb
out
fcomp
lods
or
push
cmp
mov
testl
hlt
cmc
mov
sbb
loop
in
scas
adc
mov
fucomi
faddl
call
and
call
pop
scas
push
mov
mov
add
mov
xchg
and
sub
xchg
add
sub
lahf
jae
fimuls
dec
les
jo
inc
aad
xchg
mov
cmpsl
push
lods
rcll
push
mov
adc
in
int
mov
adc
cmpsb
pusha
shr
jnp
sbb
pop
hlt
lock
jnp
into
dec
or
pop
stc
out
push
pop
bound
in
push
mov
add
add
push
fwait
imul
xchg
scas
cmp
dec
lahf
mov
sbb
int3
imul
adc
push
mov
dec
add
out
rcrl
push
adc
aaa
cmpsb
add
clc
xchg
add
fistpll
sbb
movsl
add
decb
mov
pop
lret
ljmp
imul
or
test
jle
inc
lods
shll
pop
pop
inc
scas
jb
xchg
mov
cmp
jo
hlt
pop
dec
push
out
and
loop
adc
sbbb
dec
test
jne
sbb
js
imul
shlb
insb
xchg
jg
rclb
je
mov
nop
inc
dec
call
dec
push
push
xchg
adc
xor
js
and
nop
ret
adc
idiv
lds
out
mov
push
cmp
das
imulb
in
sub
lea
mov
jnp
mov
add
push
mov
lcall
push
push
mov
add
add
aas
adc
addb
fdivrs
ds
outsl
cmp
jae
sbb
sub
ret
adc
fimull
xor
jne
aaa
test
ud0
jle
push
and
insb
add
ret
adc
pop
scas
xchg
in
dec
or
adc
mov
in
nop
xchg
mov
jmp
or
out
xchg
adc
sbb
xlat
cmp
xchg
ja
inc
pop
orb
sbb
scas
sub
loop
ss
or
push
mov
les
repnz
inc
sbb
push
adc
push
sub
jmp
aaa
mov
aad
sub
fdivr
mov
testl
sub
or
sbb
fistl
xor
sahf
fmull
out
loopne
ss
adc
loop
loope
jmp
mov
addr16
test
add
jne
mov
int3
insb
lret
outsb
and
add
add
add
sahf
ss
pop
ret
push
xchg
pop
jmp
dec
jecxz
mov
push
add
dec
add
ret
cmc
fisubrs
insb
mov
ljmp
repz
cmp
jae
stos
and
aad
or
cmp
paddusb
cmp
icebp
add
sbb
sbb
gs
lods
fildll
je
inc
arpl
push
jo
outsl
lods
rorl
xchg
sbb
enter
aaa
data16
test
fsubr
add
or
std
lahf
std
add
sub
fcomi
xchg
out
push
bound
les
ja
xchg
pop
xchg
out
cmp
lcall
dec
push
lds
bound
test
adc
lods
pop
arpl
in
scas
pop
or
inc
scas
cmpsb
inc
jle
repnz
cld
cmp
and
pop
lcall
es
shlb
add
dec
pop
pop
sbbl
fstp
rorl
inc
es
pop
mov
add
add
sbb
push
mov
data16
xchg
sub
test
xor
cwtl
repz
cmp
dec
fldt
xchg
add
or
fdivrs
cmpsb
cwtl
cs
or
cs
cmp
jnp
sarl
pop
repz
inc
or
adc
inc
mov
dec
out
ljmp
pop
ret
pushf
jb
cmp
xor
scas
xor
lret
fsubrl
sub
movntq
out
pushf
data16
mov
je
jp
add
fsts
inc
push
pop
xchg
out
jle
notb
inc
iret
mov
loop
or
ret
dec
imul
aad
loope
mov
cmp
sarb
in
fwait
mov
mov
movsl
cmc
das
jecxz
aas
int
and
push
lods
adc
adc
movsb
neg
shlb
aaa
pop
jmp
push
add
jns
clc
loope
mov
jecxz
out
mov
js
fs
mov
add
add
mov
aaa
mov
jg
stos
jae
out
mov
dec
shll
movsl
les
es
jg
std
sub
int3
cwtl
and
sbb
clc
int
xor
sub
arpl
xchg
fcmovnu
mov
jge
add
push
push
es
cmpl
in
icebp
lret
push
sub
xchg
sub
mov
arpl
lds
bound
mov
cmpsl
dec
adc
mov
or
shll
lods
divl
and
pop
hlt
cmp
stos
mov
sti
lea
cmp
xchg
out
dec
mov
add
mov
and
push
ljmp
rorl
push
xchg
xchg
or
lcall
mov
push
dec
subb
and
inc
jp
pop
mov
insl
dec
faddp
in
stos
imul
ljmp
cmpsl
mov
pop
mov
push
in
add
add
add
std
test
jg
into
lret
orl
add
add
mov
mov
jmp
and
js
jmp
push
stos
xchg
mov
pusha
js
cltd
pop
mov
xchg
add
pop
popf
scas
jl
adc
mov
mov
and
sub
add
addl
imul
xlat
push
hlt
sbb
cld
push
xchg
inc
pop
out
adc
mov
loopne
pop
xor
and
outsl
lahf
in
jns
pop
jecxz
loopne
ret
push
arpl
repnz
imul
sti
divps
pop
negb
pop
leave
out
insb
in
lock
mov
mov
sbb
xor
frstor
push
xlat
std
movsl
orb
stc
inc
out
jmp
int
pushf
xchg
dec
cli
cmpsl
inc
dec
addr16
add
inc
mov
int3
xor
int
push
cmp
inc
aam
mov
push
hlt
inc
jmp
test
jnp
repz
fidivl
repnz
aaa
push
pop
sldt
add
lock
in
lcall
jae
dec
mov
fs
push
add
add
fdivrl
ja
mov
jge
std
loop
push
push
or
inc
jb
xchg
xor
dec
cmp
pop
insl
jp
pop
jecxz
cli
adc
imul
fs
mov
sub
sbb
mov
ss
das
stc
push
enter
mov
ljmp
adcb
mov
cmpsl
out
lods
sub
push
rolb
sub
mov
pop
adc
iret
daa
sbb
sbb
test
jno
cmp
fldcw
add
mov
add
xchg
adc
sbb
mov
lods
and
pop
mov
and
hlt
in
xchg
xchg
mov
andl
sbb
ret
add
mov
mov
jb
shl
aas
xchg
int3
jne
out
shrl
lcall
mov
out
in
and
ss
cld
add
sub
movsl
lret
or
mov
add
add
sub
jg,pt
dec
arpl
insb
mov
add
jnp
je
js
adc
dec
push
and
adc
movsl
fistps
mov
xor
push
push
jnp
addr16
mov
jbe
and
and
mov
jle
dec
andl
sub
sub
mov
sub
push
lods
add
jge
inc
jle
inc
push
jne
dec
or
ss
adc
insl
mul
adc
jns
jno
cmc
push
lcall
mov
loope
jo
test
add
adc
mov
sahf
pushl
mov
pushf
decb
stos
lods
ljmp
cltd
xchg
into
jge
push
iret
lods
dec
mov
push
fsubrl
xor
popf
xchg
dec
push
jge
iret
sbb
icebp
xchg
jae
and
aad
mov
testb
and
in
push
faddl
andl
inc
or
pop
jno
cmpsb
ljmp
incl
add
add
out
idiv
outsl
mov
les
test
add
add
jecxz
and
jge
aas
mov
sti
push
sub
stc
mov
data16
dec
sbb
sbb
mov
std
xor
fisttps
pop
xor
sbb
jo
sbb
outsl
cmp
push
push
xchg
mov
pusha
jp
movsb
add
fnstsw
lret
xchg
pop
movsb
mov
lea
mov
outsb
adc
xor
int3
xor
iret
mov
push
add
rcll
loope
es
fdivr
test
int
sbb
movsb
push
cli
xor
push
pop
mov
pop
inc
popf
pop
mov
or
dec
push
lods
test
mov
sbbb
xchg
cs
jnp
or
pop
enter
aaa
jno
cmpl
inc
and
pop
push
adc
xchg
pop
jbe
bound
adc
dec
pop
shrl
cmp
repz
xor
mov
pop
imul
add
add
rolb
pop
dec
mov
imul
out
fwait
lods
xchg
mov
out
jnp
lcall
jae
and
dec
outsb
mov
inc
mov
or
insl
aam
cmpsl
dec
dec
adc
outsl
jmp
push
jecxz
lock
frstor
pop
imul
inc
jo
sbb
and
mov
jle
daa
test
iret
mov
dec
stc
and
outsb
popf
jmp
mov
shlb
pop
xor
push
in
mov
sbb
sahf
loop
addr16
cs
ljmp
mov
es
mov
add
ret
daa
mov
mov
push
mov
mov
xchg
out
add
shlb
popa
test
sub
gs
dec
popa
push
mov
cmp
aaa
movsl
stos
sbb
and
mov
call
dec
out
ss
or
sbb
add
add
fistpll
call
pop
orb
js
add
add
add
adcl
jl
fnstenv
test
jns
aaa
dec
pushf
xchg
jge
sub
jle
inc
in
enter
mov
out
ds
dec
add
vmovaps
shr
pop
roll
out
xchg
pushf
filds
push
pop
aad
dec
jg
popf
ja
idivl
cmpsb
lea
subl
inc
sub
inc
repnz
mov
pushf
jno
mov
daa
inc
inc
fnstcw
fsubl
insl
cmp
cmp
sub
jbe
test
jnp
std
shrb
pop
add
pop
jg
test
fsubs
jae
das
cmpsb
repnz
movsl
or
lock
jns
xor
adc
mov
dec
sbb
int3
sub
cwtl
int3
jecxz
jae
sub
call
or
mov
stc
es
loop
pop
sbb
clc
shr
xor
push
ret
ja
mov
arpl
add
add
std
sti
leave
sti
iret
jmp
dec
inc
sub
mov
add
mov
enter
data16
je
int
sub
cmp
test
mov
je
mov
scas
repnz
lahf
push
out
shrl
add
out
adc
or
jmp
lock
sub
pop
pop
fsubrl
aas
mov
sub
pop
and
mov
ret
fcompl
js
addr16
out
aas
rcrb
sti
pop
mov
bnd
sub
jo
mov
add
push
ds
cmc
xchg
push
xor
test
push
lods
sbb
cmp
cmp
push
mov
popl
and
sub
xorb
lea
in
dec
mov
inc
fisttpl
iret
mov
or
mov
or
outsl
cmp
in
fisttps
inc
adc
xlat
fistpl
cmpsl
pop
sub
add
sub
sbb
push
sarl
lcall
add
add
mov
xor
jecxz
out
cmpb
add
div
pop
daa
ss
clc
push
push
das
sbb
inc
fadds
and
roll
test
in
xor
mov
je
hlt
hlt
fbstp
dec
xor
lods
pusha
cmpsl
push
jp
sti
test
out
sbb
jp
and
popf
sub
lret
pushf
dec
decl
cmp
sub
xor
push
xchg
test
pusha
adc
outsl
shlb
divl
lea
xchg
mov
movsl
and
push
inc
adc
ds
dec
movsb
outsl
xchg
in
bnd
addl
xor
lcall
jmp
inc
hlt
sbb
sub
sbb
or
pop
mov
roll
and
das
enter
dec
fstl
mov
cld
pushl
mov
cwtl
adc
lret
add
rolb
pop
fs
add
mov
scas
int
popf
scas
fwait
mov
or
jg
mov
sahf
loop
jo
insb
add
mov
add
add
adc
ret
or
sbb
pop
in
push
movsb
add
pop
pop
ljmp
mov
jnp
shlb
enter
ljmp
aad
mov
int
inc
add
xchg
stc
ret
sub
std
xchg
std
enter
std
inc
insl
cs
call
inc
mov
mov
lcall
in
outsb
es
add
js
pop
mov
pop
testl
and
xchg
inc
or
mov
test
sti
cmpl
dec
xchg
inc
mov
xchg
addr16
cmp
popa
es
imul
ficoms
out
sub
lea
les
imul
andb
cmp
inc
test
sbb
xor
sbbl
mov
lds
out
iret
pushf
xor
push
cld
pushl
cld
sbb
mov
add
add
add
cwtl
loop
adc
not
iret
dec
add
jmp
jbe
mov
nop
movsl
or
mov
xchg
in
ja
inc
lret
cmp
pop
sub
aam
dec
stos
push
adc
ja
idivb
sbb
outsl
scas
int
sbb
divb
add
jp
pop
add
mov
adc
arpl
stc
sahf
mov
push
push
add
push
add
mov
idivl
add
lea
arpl
shrl
lret
iret
pop
push
sahf
std
mov
call
in
push
inc
jo
pop
mov
sub
fidivrl
and
test
push
je
test
sbb
and
xor
add
lcall
cltd
incl
es
addr16
fists
dec
aad
mov
dec
cmp
push
sarl
adc
ret
ss
jge
inc
xlat
pushf
shrb
lcall
jl
push
xor
roll
add
add
js
js
mov
pop
dec
pop
movb
stos
shlb
xchg
mov
mov
dec
sub
cs
add
or
fs
lret
add
pop
aam
popa
ret
dec
ret
into
stos
ret
cmp
clc
pop
orl
push
movsl
aam
mov
push
xchg
push
pop
jl
mov
xlat
outsl
push
icebp
add
and
clc
dec
and
add
mov
cwtl
sub
dec
ja
mov
fwait
add
mov
cmp
in
movsb
lcall
jmp
imul
jne
sub
test
test
push
addb
out
sbb
ja
jb
mov
xchg
ljmp
push
notb
cmp
sub
shlb
push
testl
hlt
adc
add
test
push
in
and
add
add
test
mov
aas
scas
fnstenv
jne
ret
add
add
xor
sarl
pop
nop
fildl
and
cmpsb
inc
push
add
jg
ja
out
fisubrs
lea
sti
inc
sbb
leave
aad
repnz
cmp
jecxz
cmp
sub
mov
adc
jecxz
xchg
stos
push
in
inc
test
pop
jg
imul
dec
loop
adc
mov
jo
sbb
ljmp
imul
xor
stc
push
aaa
pop
pop
fidivl
push
out
xor
xchg
lcall
add
loope
cmp
pop
test
or
testb
test
dec
divl
testl
imulb
lahf
cltd
repnz
or
jmp
inc
enter
and
fisubrl
pop
jno
mov
imul
iret
push
popa
fbstp
cli
ss
stos
mov
jg
jne
jne
jg
loop
mov
mov
add
add
xorb
pop
fwait
repnz
or
adc
pop
jl
add
sarb
lea
jl
ja
jmp
loop
nop
pop
imulb
cmpsb
mov
cmpb
int3
and
sub
loop,pn
pop
inc
fnstsw
jo
fidivl
mov
mov
xor
fstpt
mov
push
inc
sub
aaa
int
movsl
jae
xor
inc
ret
jb
hlt
sbb
mov
filds
fimull
push
pop
pop
in
stc
mov
dec
or
into
es
dec
rcll
jle
sbb
jge
aas
roll
out
pop
or
push
dec
xor
cmp
cmp
into
lds
aas
lock
cmpsb
mov
mov
sub
std
mov
adc
inc
or
xchg
mov
dec
and
test
mov
mov
mov
sti
in
insl
adc
insb
or
pop
and
mov
testb
push
push
adc
sbb
mov
cmc
mov
cwtl
les
add
add
pop
jno
lret
repnz
push
mov
xchg
mov
int3
dec
sarl
jns
dec
dec
xchg
xchg
pop
loope
push
xchg
pop
imulb
mov
aas
rcrl
jle
ret
and
xchg
or
out
cmpsl
test
pop
aaa
push
sub
aas
int
push
mov
pushf
add
mov
mulb
push
mov
xchg
pop
add
inc
xor
popf
or
mov
mov
jne
mov
lods
mov
test
daa
aas
xchg
pop
cmpsb
and
aaa
rclb
mov
jnp
cmp
jg
loopne
xchg
sbb
pop
mov
jg
test
insl
or
and
inc
cmp
cmp
inc
push
cmpsl
pop
insl
cmp
icebp
cld
mov
sbb
inc
mov
push
hlt
inc
jnp
mov
and
pop
inc
or
mov
and
nop
jecxz
cmp
push
push
jne
inc
and
outsb
jle
lods
testl
lds
add
add
lret
xor
pop
sbb
jle
out
pop
dec
pop
aam
xor
xchg
and
shlb
lods
in
mov
lahf
inc
xchg
xchg
cmpsl
cmp
mov
or
sti
jl
xor
jns
in
call
dec
xchg
out
aam
enter
aaa
push
sub
and
or
aam
ficomps
mov
fwait
fwait
aad
push
mov
and
stos
mov
mov
inc
idivb
sbb
dec
cli
jge
jae
push
pop
daa
ret
jnp
mov
push
xchg
sahf
jge
leave
add
enter
lcall
pop
xorl
out
out
dec
add
stc
mov
sahf
or
and
pop
jbe
sbb
pop
jmp
mov
stos
sub
adc
dec
lds
xor
push
daa
jo
scas
fisubrl
mov
mov
mov
add
ficoml
mov
add
add
jp
add
imul
into
cmp
gs
dec
mov
cmp
inc
fcompl
in
enter
jp
push
inc
in
sysret
dec
repz
mov
ret
fwait
out
pop
mulb
push
or
pusha
int3
xchg
jle
das
insb
jne
sbb
pop
adc
jp
push
sub
vprotw
std
sbb
push
test
pusha
leave
mov
xchg
mov
cs
or
out
fistl
pop
adc
jl
scas
loope
imul
mov
dec
or
ja
sub
jp
lods
xchg
cld
insl
shlb
sbb
or
push
addr16
repnz
sbb
fsub
pop
stc
rorb
in
mov
fists
repnz
adc
sub
lock
mov
lods
mov
cld
mov
or
outsl
pushf
movsl
cmc
test
mov
xchg
mov
sub
andl
inc
mov
test
sbb
xlat
in
aad
ret
inc
movsb
movl
add
pop
mov
xor
pop
pop
cmc
or
ficompl
inc
xchg
stc
in
or
int
lahf
cltd
repnz
pop
pop
mov
push
aam
xor
cmc
and
sbb
push
dec
jl
mov
cmp
fxch
outsb
imul
xor
int3
inc
mov
inc
add
xchg
pop
cmpsl
pop
ljmp
in
hlt
int
mov
in
cmc
and
xor
loope
adc
and
sti
xor
pop
mov
das
ds
lock
or
cmp
int
pop
push
sbb
scas
sbb
ror
jl
mov
lret
mov
jno
loope
aam
adc
mov
push
xchg
je
push
leave
cld
nop
xchg
scas
push
adcb
jo
repz
add
pop
outsl
sbb
in
push
jle
or
ljmp
xlat
sbb
hlt
outsb
fmull
jg
aaa
or
cmpsb
ds
sub
cmp
jg
and
mov
pop
fcoms
add
add
lds
sti
int
xor
and
pop
push
cli
cmp
jl
jo
push
loop
test
sti
mov
cmp
das
adc
jbe
mov
cli
mov
fstps
in
cmp
pop
in
mov
lret
push
inc
adc
pop
jns
lahf
es
adc
pop
in
cs
sahf
out
or
cmp
inc
rclb
imul
into
add
xlat
repnz
cmpsb
mov
rcrb
pop
pop
xchg
cmpb
dec
pusha
inc
insl
cld
pop
sti
sbb
ds
jl
lret
adc
int3
and
jge
pusha
mov
inc
movsb
xchg
lea
stc
int3
leave
xor
dec
push
inc
mov
mov
jbe
sahf
into
in
test
call
mov
sub
out
adc
lret
pusha
mov
lods
sub
sbb
dec
pop
stos
xor
subl
jmp
ds
repz
fcoms
mov
leave
add
add
add
fcomps
testb
enter
pushf
scas
sub
mov
aaa
mov
ret
je
sub
ja
cmc
or
mov
pop
sbb
shrl
in
js
int3
cs
cmp
sbb
xor
add
ret
lock
add
or
inc
push
hlt
fisubrs
mov
inc
pop
xlat
into
pop
pop
int
popf
retw
xchg
sahf
imul
jmp
dec
in
cltd
test
cs
cmp
sub
and
mov
jb
jb
aad
insl
clc
out
jg
mov
push
sub
shrb
jae
inc
sub
gs
jns
loopne
test
mov
pushf
xchg
jp
test
cmpsl
movsl
js
imul
in
sar
mov
hlt
aad
mov
inc
pop
pop
sbb
std
mov
ret
out
push
stos
hlt
push
mov
call
xor
pop
mov
mov
mov
mov
lret
add
add
into
sub
clc
mov
into
js
mov
rcrb
sub
dec
ret
xor
add
mov
mov
cwtl
pushf
xchg
or
sbb
mov
sub
ds
cmp
adc
test
dec
xchg
addl
cmp
sub
jecxz
jecxz
xor
or
sti
outsl
mov
or
loope
cmp
pop
cltd
inc
inc
inc
mov
loope
pop
ss
out
xchg
inc
int
cmp
adc
fdivr
mov
jecxz
push
cmp
sahf
call
aas
jge
pop
push
or
xchg
popa
in
push
pop
adc
test
cmc
addr16
clc
sbb
gs
pop
fwait
movsb
cmp
xor
inc
fwait
int3
mov
aas
pop
std
in
sub
es
rcrb
paddusb
ffree
sub
in
sarl
mov
xchg
jne
cbtw
fwait
or
push
sbb
movsb
push
push
adc
in
mov
add
add
enter
in
sbb
push
inc
repz
hlt
mov
add
add
add
ja
xchg
pushf
clc
cmp
sbb
and
int
inc
out
dec
ds
in
lods
lods
jb
cmp
xorb
enter
mov
pushf
pushf
sub
mov
mov
jne
fprem
scas
enter
add
test
cmpsl
lock
mov
xchg
sbb
sub
dec
lahf
pop
mov
aad
pop
fmuls
jnp
and
ror
sub
in
call
shr
ljmp
xchg
sbb
mov
jg
mov
test
pusha
imul
cmp
int
adc
icebp
cld
cmpsl
xchg
in
pop
loopne
ret
push
push
pusha
mov
loop
das
pop
inc
lret
mov
mov
aad
out
add
sahf
cmp
hlt
pop
push
fiadds
not
jmp
dec
sbbb
mov
daa
push
jnp
xor
testl
add
jne
imul
cmc
call
inc
push
popa
fmull
mov
add
add
cmp
jo
add
into
test
push
call
pushf
icebp
push
mov
adc
sahf
inc
mov
loopne
test
lahf
fistl
outsl
sbb
pop
icebp
int3
jo
mov
add
test
xchg
or
add
mov
lods
pop
xchg
xor
xchg
dec
or
mov
lahf
mov
push
pop
les
pushf
test
mov
pop
mov
sub
int3
imul
fsubs
mov
js
stos
lods
call
jns
inc
sbb
pop
mov
aad
adc
mov
int3
cmpsl
or
imul
sbb
pop
push
mov
adc
mov
repnz
xchg
add
clc
imul
shlb
fcompl
int3
lods
bound
lahf
js
dec
mov
pop
mov
lds
mov
add
and
js
out
int3
in
dec
lods
fwait
fs
cli
roll
add
add
ja
iret
sub
add
mov
add
add
mov
push
out
movsl
sarl
mov
adc
dec
lods
in
std
adc
xchg
std
mov
dec
pop
lock
scas
mov
xor
out
adc
mov
out
dec
data16
cli
sub
inc
jmp
dec
adc
aaa
sub
negl
test
scas
mov
stc
les
out
ror
jno
xor
pushf
ds
ret
data16
and
xor
dec
adc
ret
cli
enter
movsb
mov
in
pop
mov
jle
pop
popa
and
daa
jge
je
sahf
stos
call
mov
sbb
adc
push
lret
cmp
pop
rep
jb
mov
out
jle
addr16
cmp
out
aam
int
mov
inc
inc
lods
push
fisubl
mov
shrl
add
add
sub
push
sti
fdivrs
push
mov
cmpsl
stos
mov
out
out
out
into
gs
cld
test
or
add
add
pusha
jb
insl
xor
cld
mov
lahf
sub
into
xor
adc
imul
mov
jbe
pop
cmp
or
sub
cmpsb
ss
insl
adc
jo
outsl
pop
or
jae
fnsave
mov
jle
pop
roll
test
sub
rorl
sbb
rcrl
inc
ljmp
aam
mov
hlt
lock
jmp
pop
and
arpl
in
out
rorl
stos
mov
push
jecxz
push
ret
adc
lahf
or
inc
and
addr16
out
lock
lock
sti
out
std
mov
daa
lret
inc
or
scas
cmp
inc
clc
cwtl
push
pop
cmp
sub
and
push
xor
imul
cmp
cmpb
push
stos
xchg
jmp
xor
aaa
outsb
push
loopne
and
je
out
mov
cli
fildl
add
add
pop
fildl
les
ret
popa
and
cwtl
inc
sbb
movsb
mov
sub
cmp
rep
je
bound
mov
daa
aaa
jg
xchg
jae
mov
fcompl
adc
fdivrl
in
cld
xchg
or
xchg
pop
lcall
icebp
data16
jg
cld
cld
pop
or
mov
mov
in
sarb
mov
or
shr
sub
dec
jge
arpl
je
dec
sbb
inc
lods
sub
fstpt
cmp
nop
jmp
mov
enter
xor
sarb
mov
xorl
insb
and
fnstenv
ret
loopne
leave
cmp
mov
mov
gs
push
les
shr
loop
vmovntpd
out
mov
decl
fs
iret
icebp
xchg
into
add
rep
adc
pop
pop
popf
xor
jne
jecxz
mov
cmp
adc
jns
scas
cmp
pop
push
sub
dec
inc
dec
daa
dec
das
outsb
imul
push
xchg
mov
rolb
add
add
jecxz
and
shll
popf
fldenv
jne
sbb
dec
fistpll
jns
add
or
clc
adc
out
test
cmp
test
jmp
or
add
jno
movsb
movsl
lods
pop
jmp
cmp
rsm
xchg
jl
fcmovb
pusha
jae
stos
shll
nop
add
repz
jb
sbb
cmp
lock
xchg
mov
mov
inc
mov
cmp
mov
xor
mov
popf
jne
scas
xchg
repz
mov
je
in
pop
out
movsb
subb
mov
rcll
dec
repz
inc
jp
enter
movb
mov
in
test
enter
push
xor
imul
push
and
cmp
iret
mov
in
sub
pushf
fucomip
scas
cmp
enter
sbb
stos
divl
dec
sub
mov
call
out
lahf
ret
or
add
add
add
loope
push
mov
lods
loopne
cli
cmp
add
cld
mov
pop
lret
push
cmp
mull
jg
or
cmc
sbb
fadds
mov
push
nop
cmpsb
or
mov
jp
or
sarb
into
sub
sbb
fldenv
mov
xorl
cmp
dec
mov
xor
insb
fcoml
aaa
cwtl
inc
xchg
sub
dec
push
add
adc
sbb
es
paddw
es
dec
push
xchg
repnz
mov
scas
dec
loop
jge
in
xchg
mov
sbb
fcomi
daa
or
dec
xlat
and
pop
les
jne
push
or
leave
pop
mov
inc
dec
test
push
pop
in
xor
popa
or
xchg
or
mov
fadd
xor
jp
in
cmp
lea
cwtl
ret
lds
popa
icebp
call
ja
dec
insb
pop
mov
lret
in
cltd
outsb
push
insl
push
fdivrs
dec
shrb
aaa
enter
sub
hlt
xor
add
add
neg
outsl
push
xchg
or
aam
ja
rolb
add
add
movb
repnz
pop
or
mov
testl
out
mov
xchg
dec
push
das
movl
mov
push
adc
jno
mov
cmp
leave
daa
and
sahf
mov
test
sti
and
add
cmp
push
fs
xchg
push
adc
inc
mov
mov
and
push
out
and
insl
insb
pop
int3
jb
and
out
ret
jb
pop
xchg
shrb
mov
xchg
addb
dec
subl
ja
jae
scas
outsb
shrl
mov
ljmp
lret
ret
and
out
mov
in
sub
aad
mov
xor
sbb
pushf
ret
push
lahf
sti
pop
push
icebp
lret
xlat
pop
mov
xchg
push
mov
and
sti
jns
fstps
lock
xor
add
sbb
sub
dec
cmovl
aam
add
add
add
xor
sbbl
jecxz
mov
mov
mull
pop
push
jnp
inc
js
inc
or
int3
je
adc
shll
push
pushf
cwtl
jle
dec
stos
fcoms
std
fcmovne
in
loope
pop
dec
ret
je
enter
fbld
pop
and
mov
cwtl
adc
push
sub
add
sbbb
jge
sbb
outsb
cmp
fidivrs
data16
vmwrite
adc
sbb
lahf
loop
lods
cmp
loope
sahf
adc
mov
push
mov
mov
test
sarb
sbb
ret
in
add
inc
popf
adc
mov
xchg
test
push
nop
inc
leave
js
xchg
addr16
jmp
sbb
aam
pusha
shrl
lods
rcr
cmpsb
leave
mov
imul
xchg
or
clc
je
fsts
and
mov
pushf
adc
ds
jae
push
and
aam
add
add
ret
xchg
adc
cmp
dec
cmp
lcall
jecxz
bound
fistps
int3
sub
jmp
jnp
aas
mov
call
mov
and
push
push
addr16
jae
xlat
mov
ljmp
pusha
adc
or
cmp
iret
cmp
sub
mov
mov
xchg
mov
pop
add
test
std
ds
imul
enter
mov
call
stc
push
ret
xchg
add
mov
add
shll
gs
cmp
mov
sub
and
cmp
mov
in
xchg
das
loopne
jne
adc
and
test
sbb
cmpsb
or
dec
or
push
sub
movl
jb
sbb
fildl
inc
cmpsl
xchg
ret
orb
push
popf
outsb
mov
add
lcall
jnp
movsb
xchg
push
add
add
add
dec
jp
pop
movsb
sbb
in
pop
lret
sbb
ficoms
pop
fs
nop
fs
mov
out
enter
sbb
adc
dec
mov
mov
inc
pop
jg
xchg
push
pop
sub
and
int3
xor
sbb
cmp
loop
mov
pop
sahf
shlb
pop
mov
iret
and
orl
dec
and
dec
xchg
iret
bound
iret
inc
sub
or
test
cmp
mov
mov
push
popa
push
xchg
imul
shlb
jb
lret
dec
jo
sub
pop
imulb
aad
cmp
xor
outsb
movsl
pusha
fsubrl
cmpl
xchg
xchg
idivb
fbstp
lahf
cwtl
inc
or
adc
mov
inc
xor
cs
dec
js
clc
inc
in
xchg
outsb
sub
int3
cs
imul
jbe
xchg
mov
xchg
xchg
ror
jp
cmp
cmp
stos
cmp
mov
push
push
inc
inc
movsb
pop
pop
cmp
jg
leave
or
pop
mov
add
add
add
pop
insb
test
xchg
dec
inc
pop
push
insb
mov
pop
lahf
out
sahf
pop
lret
add
shrb
aaa
fiadds
push
pop
push
jnp
pusha
ret
mov
in
dec
clc
sub
fwait
inc
ret
sub
and
ss
xchg
ret
cmp
and
mov
cmp
mulb
test
dec
sub
mov
ss
out
add
or
cmpsb
adc
pop
rorb
sbb
cmp
or
push
push
shl
mov
decb
xchg
fistps
add
jno
movsb
pop
push
mov
scas
cld
into
cmp
rorl
test
mov
sub
cmp
test
push
fbld
out
sahf
mov
cmpsl
das
dec
cmp
xlat
jl
in
dec
shrb
xchg
arpl
xor
lea
add
sbb
out
cmp
loop
std
sub
push
sahf
push
mov
dec
aad
sbb
imul
xchg
movsb
movsb
sub
cwtl
in
add
add
add
inc
xchg
mov
push
adc
fistps
xchg
not
push
jp
xchg
scas
out
mov
imul
jle
mov
or
dec
rcl
mulb
fimuls
gs
xchg
mov
andl
cli
sti
or
sub
dec
xchg
sbb
mov
dec
lods
inc
ret
dec
sti
loope
xchg
pop
mov
sbbl
or
mov
pop
pop
xor
loopne
push
xchg
enter
xor
sbb
add
sti
popa
pop
int
into
and
scas
xlat
mov
pop
mov
add
stos
aas
test
mov
nop
addb
lock
sub
sarb
in
cmp
stos
sub
pop
sub
jge
fwait
pop
rol
lcall
jno
insl
loop
mov
test
fdivs
lret
addb
xchg
mov
push
test
xchg
jl
out
fldcw
push
in
sub
call
add
add
orl
push
clc
or
sbb
pushf
and
addl
int3
dec
lret
ds
mov
push
in
push
sbb
sbb
mov
mov
and
xorb
fldl
jp
mov
or
out
push
movsl
dec
mov
jge
mov
std
std
outsl
pop
loop
inc
aad
jp
lds
push
divl
mov
adcb
xor
out
in
dec
jo
test
mov
cmpsl
sbb
repnz
loopne
xor
mov
in
mov
inc
push
lods
pop
cmpsl
mov
into
jnp
xchg
or
mov
cld
push
sub
adc
dec
int
fsubl
cltd
in
and
shll
mov
sub
mov
push
jl
mov
into
fidivrs
sub
mov
addl
add
add
in
sbb
sahf
cmc
fsubrp
jnp
sti
enter
cmp
add
add
scas
push
sti
jmp
mov
xchg
jnp
or
aaa
loop
push
jge
inc
add
stos
or
sbb
xchg
and
mov
mov
int3
mov
xchg
fisttpll
mov
mov
mov
sub
ret
mov
dec
mov
nop
fwait
shrl
shrl
sbb
jmp
cmp
popa
inc
xchg
pop
negl
lods
test
int3
ljmp
push
outsb
or
sub
dec
js
add
faddl
in
dec
dec
jl
jo
enter
outsb
xchg
push
aad
lea
xchg
xchg
dec
mov
xor
jnp
ficoms
xor
cmp
insb
in
gs
dec
ret
pop
cmpsl
cmpb
inc
out
popf
or
dec
cmp
dec
pop
dec
arpl
int
shlb
inc
shr
outsl
cmp
loopne
cld
jle
jbe
mov
fmulp
sbb
cmpsb
pusha
clc
popl
sub
cs
pop
dec
jle
jg
std
fstpt
scas
mov
add
add
scas
mov
popa
sbbb
adc
outsl
fcomps
xchg
cs
test
mov
fnstenv
vmread
aas
fs
xchg
push
ret
xor
mov
inc
or
out
lcall
test
rorb
aaa
or
int3
push
out
mov
jno
lods
jb
stos
cmp
add
sbb
jo
popa
sub
adc
adc
mov
pop
inc
mov
notl
mov
jno
cmp
cmpsb
shrd
test
adc
fisttps
in
push
dec
dec
mov
push
lods
lods
dec
sub
test
sarb
flds
push
aam
fistl
mov
fcmovnb
fdivrl
jbe
mov
push
mov
mov
lods
and
loop
mov
fsubrs
mov
shr
movb
jge
cmp
ljmp
fwait
adc
xor
add
add
add
jg
loop
fwait
push
out
cmp
mov
rorl
cs
mov
and
fnstsw
out
sti
pushf
or
jp
push
addb
jbe
push
xlat
and
inc
daa
inc
mov
test
push
xchg
add
movsb
iret
mov
test
sub
add
and
movsl
cmp
push
or
sbb
inc
push
scas
rcl
dec
mov
sbbl
push
bound
sub
pop
lods
jo
outsb
xchg
xchg
std
jns
gs
mov
pop
xor
push
ja
adc
mov
sarb
in
in
cmp
xchg
add
inc
fldl
loop
enter
fldenv
fnstsw
sbb
lcall
adcl
pusha
je
les
push
in
loope
mov
lcall
lret
jnp
out
mov
dec
or
or
jae
pop
adc
leave
jmp
scas
inc
call
clc
faddl
add
add
cmp
jb
dec
in
ja
jne
and
test
fs
mov
aas
out
sub
out
ss
pop
lods
inc
jecxz
mov
iret
add
popa
pushf
mov
jbe
push
test
push
lods
mov
mov
out
fsubl
pop
loop
lret
arpl
call
aas
arpl
sbb
add
rorl
arpl
push
xchg
in
xchg
scas
enter
mov
fisttpl
push
imulb
inc
cmc
aam
nop
imul
xchg
fwait
pop
pop
sarb
cmp
jnp
or
lods
pushf
adc
sarl
pop
lcall
jg
movsl
mov
lock
jl
mov
daa
arpl
push
addr16
and
sahf
mov
or
inc
sbb
jno
in
inc
push
jno
aas
sub
xchg
cmp
xchg
mov
outsl
and
cld
insb
sldt
add
cmpsl
fimull
faddl
or
cld
fldl
add
add
add
daa
or
and
pop
sub
or
cmovae
push
inc
xchg
jle
jecxz
jp
mov
paddusb
ds
data16
pop
cmp
mov
sahf
ja
das
push
jg
cmp
or
pop
xchg
add
xor
mov
sahf
fs
dec
dec
je
mov
lds
mov
cli
xchg
aam
mov
test
out
imul
push
push
rcrb
inc
pusha
loope
pop
imul
mov
push
pop
into
cltd
mov
inc
test
add
dec
push
mov
inc
inc
xchg
lahf
dec
cmp
push
lahf
xchg
scas
and
push
lea
xor
stos
ss
imul
sub
push
lahf
jo
push
add
mov
mov
loope
cmc
sub
or
cmp
movsb
fisttps
xor
fdivs
pushf
jg
mov
lcall
fisttps
or
add
add
add
add
inc
or
dec
push
test
mov
pop
es
cmp
iret
or
jge
pop
pop
cli
outsb
sub
es
inc
jnp
lods
fsub
les
sbb
sub
dec
lods
add
adc
mov
jne
pop
add
inc
dec
jg
mov
in
lahf
loopne
xor
rol
jge
mov
inc
sbb
bound
fs
fsub
sbb
jp
dec
add
jmp
daa
xor
mov
aam
scas
std
bswap
lret
push
ret
adc
cmp
ds
sub
cmp
mov
ljmp
or
dec
xor
push
insb
jae
jle
mov
ffree
hlt
push
lret
outsb
stos
iret
in
je
pop
scas
loop
mov
sub
nop
stc
cld
das
scas
xchg
pop
pop
mov
out
pop
inc
pusha
loop
mov
mov
adc
test
sbb
jns
xchg
xchg
mov
xor
cmp
add
add
add
mov
mov
mov
xchg
mov
es
outsb
divb
incb
jae
lods
jmp
inc
out
les
shll
lcall
jae
rorb
mov
push
div
mov
leave
sub
xchg
imul
iret
xor
imul
cmp
dec
fsubrs
xchg
mov
inc
rorb
orl
pop
or
es
cwtl
data16
icebp
fdivrl
push
push
push
add
aaa
aad
mov
dec
dec
lods
pop
popa
inc
call
icebp
mov
pop
cld
pop
stos
jg
out
cmp
lahf
aad
push
les
pop
in
fwait
daa
jb
pop
stos
sbb
stos
cmc
mov
push
addl
test
xor
xchg
dec
mov
mov
dec
daa
push
shll
test
daa
or
in
dec
mov
cli
cwtl
orb
repz
mov
cld
inc
lcall
add
fadd
fsubp
jnp
or
cld
les
loope
add
add
xchg
adc
in
bound
cmpsl
add
inc
js
mov
inc
lods
push
jae
enter
cmp
mov
imul
mov
push
xchg
bound
je
sbb
inc
pop
push
sahf
out
nop
add
enter
sbb
adc
jg
mov
add
scas
push
mov
stc
stos
fcoms
repz
sbb
xor
fdivs
test
fnstcw
fildl
inc
xchg
xorb
add
negb
lods
fadds
in
loope
decb
mov
pop
mov
xchg
mov
push
out
jb
or
inc
inc
or
gs
jl
jo
out
pusha
mov
in
mov
mov
scas
push
xor
cmp
gs
sbb
or
pop
loope
in
mov
lods
mov
jbe
ret
out
push
cld
loope
dec
test
jmp
xchg
jb
xor
pop
sub
push
cmp
sub
cld
cli
jle
dec
nop
xor
add
add
add
sbb
inc
fs
fsts
add
or
push
popa
and
sbb
xchg
in
dec
inc
das
sahf
jecxz
add
jecxz
ja
xlat
in
mov
add
fsts
out
jmp
es
jno
lcall
pop
loop
insl
and
xor
insb
pop
test
roll
in
mov
dec
cmpsl
xchg
mov
push
in
xlat
push
xor
and
ds
scas
jmp
fldl
mov
mov
test
dec
adc
pop
imul
sub
add
xchg
test
scas
je
lret
cmp
sbb
jb
cs
cmc
jmp
xor
xor
shlb
test
cmp
out
mov
jmp
sti
ret
fists
test
inc
jno
mov
aas
les
sub
dec
adc
pop
dec
xor
cmc
lea
pop
jbe
ja
sti
aaa
out
ja
lret
sarl
add
add
js
and
int
sbb
cmpsl
in
push
lock
and
dec
inc
imul
imul
in
test
sbbl
mov
mov
xorl
mov
xchg
aad
es
lock
cmp
movsl
adc
rorl
test
adc
inc
ljmp
stc
testl
and
lock
repz
arpl
mov
push
ret
es
or
inc
je
jecxz
push
hlt
cmp
xchg
into
xchg
iret
push
imul
movsl
scas
sbb
add
scas
movsb
addb
and
mov
push
in
dec
or
out
or
adc
sub
mov
outsb
adc
mov
mov
mov
or
ss
adc
mov
fldcw
pushf
xchg
mov
and
mov
ror
cltd
outsl
mov
aaa
pushf
mov
in
add
add
test
fsubrl
push
and
js
jb
cli
xchg
xor
pushf
flds
std
stos
psubusw
push
push
mov
lret
ljmp
mov
mov
movsb
xchg
mov
mov
ret
pop
lods
xchg
add
pop
mov
sar
xor
jns
mov
dec
mulb
sub
push
pop
js
push
sbb
inc
in
fwait
push
dec
fisttpll
lahf
rolb
imulb
mov
sub
lcall
cmp
out
pop
push
lahf
icebp
dec
xchg
addb
add
arpl
push
cmp
adc
dec
ret
and
ljmp
mov
loop
lret
mov
jecxz
dec
push
adc
cmp
mov
pop
bound
js
out
inc
mov
mov
xchg
pop
or
cltd
cmc
adcb
fcos
pop
mov
rcrb
add
add
add
scas
inc
push
inc
ret
mov
xor
test
or
inc
jbe
stc
movl
arpl
movsb
xchg
out
mov
sbb
movsb
sub
cmp
aas
adc
bnd
cmpl
popa
pop
and
inc
inc
ffree
mov
repnz
lret
mov
in
rcrb
cmp
insb
hlt
stos
mov
in
dec
jbe
pop
lret
xchg
lahf
pop
adc
ljmp
add
jne
or
lcall
stos
out
mov
pushf
ret
xor
mov
push
cltd
mov
adc
pop
imul
and
shll
cmp
pop
push
out
xchg
or
adc
cltd
shrb
adc
cwtl
mov
or
addr16
or
arpl
push
sti
lods
js
adc
scas
inc
inc
mov
pop
mov
add
push
jb
adc
add
add
add
lock
jg
in
and
xor
push
sbb
add
add
add
aad
mov
aad
sub
lcall
pop
out
sarl
sub
cmp
adc
xlat
scas
jp
mov
sbb
mov
lahf
sub
and
and
cmp
mov
pop
int
and
cli
or
mov
sbb
pop
pop
xchg
mov
stos
push
aaa
popl
cmpsl
ret
sbb
mov
aaa
mov
loop
inc
loope
test
popl
and
les
mov
ds
pop
and
dec
mov
mov
in
jmp
xchg
mov
popf
and
into
or
inc
lret
add
xchg
cmp
pop
jns
and
sbb
fdivr
clc
jle
dec
in
add
pop
sbb
cltd
test
push
dec
cld
jb
adc
das
into
jb
sbb
sahf
js
clc
sbb
push
jnp
jmp
cmp
or
add
push
lea
add
add
pop
xlat
fistpl
inc
dec
mov
add
add
add
inc
daa
adc
movsb
popf
insl
cmp
push
jno
push
clc
push
pop
cmp
sub
dec
rol
pop
xor
xchg
lds
je
mov
enter
push
xchg
pop
pop
cmp
fstpl
mov
mov
adc
pop
std
add
lret
dec
mov
inc
sbb
xchg
xor
outsb
ret
cld
inc
jmp
aam
jnp
nop
xor
pushf
mov
std
mov
xlat
icebp
scas
jbe
pop
lods
jge
push
roll
stos
mov
cmp
push
je
test
sub
inc
cmp
jne
lret
ror
ja
je
and
subb
adc
sub
jp
call
mov
and
hlt
clc
ret
mov
out
mov
outsl
rcrl
dec
cmp
and
stos
or
add
mov
push
mov
jb
add
add
mov
dec
js
stc
mov
dec
int
xor
in
and
add
add
add
pop
cmp
cmpl
fimuls
stc
mov
mov
xchg
cmp
data16
xchg
lret
pop
xchg
add
and
mov
test
clc
or
inc
lock
cwtl
mov
int3
sbb
hlt
push
aaa
add
xor
lcall
xchg
mov
fisttpl
cmp
aas
xor
gs
mov
sbb
adc
xchg
mov
aas
outsb
xchg
xchg
xor
jmp
sub
cmp
xlat
lods
cmpsb
rolb
mov
push
xor
lcall
idivl
adc
pop
ljmp
imul
fldl
dec
in
add
outsb
push
jle
mov
mov
xchg
imul
jle
rolb
push
outsb
mov
sbb
ja
mov
int
or
xor
cmpsb
scas
pushf
xlat
das
mov
and
jle
add
add
insl
repz
fwait
jns
jns
jne
mov
jmp
add
iret
jnp
fistl
outsb
sti
jnp
popf
int3
adc
pop
dec
pop
mov
xor
sub
cmp
cmp
mov
dec
mov
rep
test
test
mov
stos
sbbl
das
outsb
cmp
cwtl
nopl
inc
sub
daa
xor
cmp
mov
out
mov
pusha
xor
fcmovnb
push
add
scas
push
adc
xchg
add
pop
adc
jle
lock
jae
imull
int
inc
pop
insb
jae
mov
insl
cmc
jns
dec
mov
xor
mov
cmp
ret
ret
lcall
jmp
xor
push
push
xchg
pop
cmp
imul
adc
inc
pop
aad
out
outsb
jmp
dec
dec
cmpsl
out
test
cmp
adc
add
insl
lock
mov
mov
jae
movsl
cmp
jnp
adc
jne
insb
and
imulb
add
add
add
jle
fmull
aaa
aas
popa
mov
pop
loope,pt
cmp
sti
popf
xchg
mov
repz
dec
repz
bound
mulb
ss
fdivr
pop
gs
outsb
xor
outsb
push
push
test
mov
mov
add
mov
inc
add
push
jno
and
decb
lock
mov
mov
jno
mov
call
fistpl
add
adc
cmc
jge
dec
scas
gs
rclb
sub
movsb
rclb
ret
mov
xorl
ss
aad
xchg
aad
mov
dec
sub
jp
add
iret
jnp
sar
fildl
ja
xchg
and
in
xor
imul
mov
add
out
mov
add
mov
mov
les
inc
movsl
mov
incb
add
add
subb
fistl
das
jp
cltd
mov
add
add
fs
test
mov
mov
cmp
jp
dec
lods
mov
jge
add
sub
imul
xchg
mov
xchg
sarl
icebp
cmp
mov
loop
pop
inc
jle
adc
mov
out
cltd
imul
mov
inc
pop
mov
into
sbb
xor
fwait
lds
notb
push
or
test
icebp
mov
cli
in
mov
hlt
repz
or
orb
es
or
adcl
push
stos
cmp
ret
mov
popf
sub
xor
aad
outsl
sbb
fisubs
sbb
jo
aad
xchg
and
rcr
mov
cmp
out
lahf
test
mov
insl
cmpsl
outsb
mov
shlb
sbb
int
dec
scas
xlat
sbb
adc
lods
cld
mov
inc
not
or
loopne
sbbl
outsl
outsl
out
cmp
add
add
jb
scas
decb
fisttps
cltd
xor
xor
add
add
add
or
out
dec
sbb
mov
scas
in
or
or
in
cltd
ljmp
pop
call
mov
jbe
push
mov
es
hlt
mov
test
lods
ljmp
xchg
sub
in
dec
sbb
pop
repz
jb
adc
scas
add
push
sub
dec
xchg
cs
rcrb
arpl
fcmovbe
push
in
pushf
sub
mov
mov
cmpsl
add
pop
inc
scas
mov
mov
xchg
movsl
leave
fwait
cmpsl
jmp
xor
cmc
daa
inc
outsl
gs
push
std
lret
push
repnz
mov
dec
push
inc
in
push
add
enter
adcl
jo
push
cwtl
dec
mov
sbb
icebp
lock
add
push
xchg
test
adc
inc
pop
inc
sub
jo
cmp
insb
les
cwtl
lret
xchg
mov
rcll
sahf
sti
cmp
mov
xlat
mov
xchg
in
imul
add
add
jno
in
icebp
jle
loop
add
mov
and
call
dec
adc
mov
cmpsb
aaa
adc
push
pop
cld
and
pop
push
jne
lcall
pop
aaa
add
cmpsl
push
mov
sub
mov
fcoml
popf
rorl
cs
sbb
push
push
pop
xor
pop
fdivrs
aas
add
int3
and
add
scas
jle
mov
out
cmp
lock
mov
push
inc
test
out
lahf
pop
pop
movsl
insl
cld
push
push
add
cmpsl
ja
test
rcl
push
popf
fstpl
bnd
xchg
clc
cmpsb
cmp
inc
dec
and
pushf
jl
mov
mov
dec
xlat
mov
rolb
add
push
inc
mov
push
popw
push
std
pop
sbbl
dec
clc
pop
lahf
fucomip
sub
dec
cmpsl
adc
sbb
in
mov
insb
mov
aad
mov
int3
jecxz
in
sub
push
xchg
or
add
add
mov
aas
mov
and
add
add
add
pop
pop
jb
cmpsb
std
mov
pusha
mov
push
repnz
mov
pushl
daa
mov
lcall
pop
pmaxub
push
jg
push
insb
fists
or
push
push
mov
mov
push
inc
dec
sub
mov
jno
inc
lahf
out
or
enter
pop
data16
push
or
jbe
xor
pop
clc
imul
push
hlt
test
inc
mov
lahf
lret
push
cmp
push
repz
fiadds
jg
in
mov
inc
data16
test
xchg
jb
add
dec
sub
inc
es
mov
not
out
imul
jl
cld
cmpsl
pop
mov
xor
notl
pusha
and
sub
adc
cli
push
push
das
hlt
insb
jmp
pop
aad
shlb
push
add
test
jne
rclb
cmpl
mov
int
cmc
lcall
loop
fadd
sti
mov
addb
add
add
loop
push
hlt
add
dec
inc
fs
bound
dec
jno
mov
and
insb
mov
int3
pop
hlt
fstpt
enter
loope
xchg
in
xor
fidivs
push
daa
push
mov
sbb
aad
mov
inc
pop
std
mulb
push
push
and
jne
into
mov
mov
xor
fadds
jge
mov
data16
adc
aas
xchg
stos
sbb
add
push
jne
sub
das
jmp
pop
xor
or
es
in
and
out
cld
xor
subl
scas
jns
add
out
adc
jae
insb
int3
jecxz
mov
stos
adc
mov
in
sub
loope
sbb
jb
arpl
cmp
mov
inc
jmp
popa
sub
sti
repnz
mov
hlt
outsl
pushf
insl
push
cmp
adc
neg
jge
xchg
jns
int3
push
push
inc
lock
add
add
mov
jns
cltd
push
inc
and
jne
call
sti
scas
jp
cli
lods
lods
fsubl
lret
insl
loope
mov
sbb
fisubrl
gs
inc
iret
push
inc
outsb
xchg
daa
adc
comiss
push
push
add
jbe
mov
loopw
fs
pop
cmp
jg
andl
adc
inc
pop
cli
stos
je
adc
aaa
stos
int
mov
sbb
ljmp
xor
mov
push
shl
dec
inc
jmp
cmp
outsb
pop
add
sub
loopne
mov
push
pop
dec
mov
mov
mov
lods
dec
nop
mov
mov
pop
jae
nop
imul
sbb
scas
es
idivb
cltd
inc
lahf
adc
cltd
sub
cmpsl
cmpl
jecxz
add
add
mov
mov
push
inc
int3
xchg
xchg
mov
aas
inc
push
or
mov
pop
cmp
outsl
jg
jg
sub
fcmovb
jne
loop
icebp
add
add
add
loopne
or
dec
mov
cld
decb
mov
lret
adc
jmp
and
in
sub
je
add
lcall
inc
cld
mov
adc
push
jb
add
inc
cmp
lock
mov
mov
test
scas
lock
test
loop
xchg
jb
pusha
aas
adc
inc
adc
add
shll
sbb
imul
xchg
fists
push
mov
jbe
loope
jmp
adcl
out
arpl
xor
sti
sub
dec
loope
out
insl
stc
les
lock
enter
mov
ret
pop
sub
adc
lcall
jp
out
or
mov
pop
jae
adc
jae
test
dec
fs
sub
dec
add
jns
lahf
sbb
or
pop
ds
ret
ja
and
aaa
divl
out
dec
repnz
add
add
lock
jbe
push
mov
and
inc
pop
int3
mov
dec
fidivl
lcall
jecxz
ja
lds
or
data16
push
pop
cmp
pop
lahf
ds
jle
mov
inc
jmp
into
pop
and
loope
ss
xlat
jno
sbb
and
daa
inc
pop
je
pop
leave
push
jmp
filds
cld
xor
fisubrs
pushl
dec
cmpsb
mov
jbe
mov
jb
jb
imul
dec
rclb
subps
aas
lea
jp
dec
sub
mov
mov
mov
leave
lods
and
mov
jge
mov
push
sub
test
jge
mov
movsl
jp
insb
clc
lahf
stos
scas
adc
loopne
adcl
loope
mov
mov
push
push
cmp
pop
or
sbb
mov
in
xchg
jecxz
jmp
mov
or
repz
add
add
push
xchg
out
test
pop
and
lea
jge
push
es
loopne
or
mov
adc
sti
inc
pop
rclb
mov
jb
rol
aaa
cmp
sti
popf
mov
cmp
cltd
push
fistpl
int
ja
mov
lret
add
jl
mov
cli
jne
out
stos
push
xor
cmp
push
pop
xchg
xchg
je
adc
mov
or
test
sub
and
out
imul
inc
fmuls
sbb
loop
and
roll
lds
ljmp
push
adcl
loope
jo
sbb
movsl
jp
fldt
mov
and
xchg
in
mov
jl,pn
dec
or
aaa
xchg
subb
in
jle
jne
pusha
popf
pop
addl
add
add
push
mov
sti
lcall
push
jmpw
add
inc
orb
fcmovnu
sub
jle
adc
leave
mov
inc
rorb
shlb
fmul
leave
xchg
xchg
or
dec
sbb
add
and
xor
aad
leave
mov
jne
aad
push
mov
insb
push
aaa
ja
clc
xchg
pop
rorb
fcmovbe
inc
out
fdivs
cwtl
pushf
jmp
repnz
enter
dec
pusha
rorl
adc
sahf
xor
sbb
dec
inc
xor
adc
jmp
int
and
dec
inc
mov
testb
dec
insb
push
push
scas
or
js
pop
xabort
clc
sub
push
mov
std
push
shrb
xchg
rclb
mov
push
xorl
and
xor
lret
add
add
imulb
mul
xor
sub
add
add
add
sub
mov
call
jb
stos
xchg
cld
push
ja
shrl
outsb
iret
pop
and
jmp
push
lahf
aaa
adc
loopne
push
xor
pop
mov
mov
jo
mov
lock
jmp
xchg
int3
dec
into
mov
xchg
lods
out
out
jl
mov
mov
mov
mov
lea
push
pop
xchg
adc
sub
ds
aad
ret
sub
xchg
or
stc
movsb
adc
insb
mov
push
inc
and
or
ja
jb
jnp
jp
pop
mov
jno
leave
sub
jp
stc
xchg
dec
dec
lea
mov
call
or
shl
jbe
call
out
cmpsl
lds
inc
mov
push
rcll
mov
mov
pop
lock
addl
loop
cmp
xlat
or
roll
arpl
sahf
inc
ret
add
xor
jb
jae
outsl
adc
add
add
fidivrl
data16
push
daa
sub
xor
push
mov
or
les
rol
insl
or
mov
jo
add
sarb
es
cwtl
mov
sahf
mov
movsl
std
mov
xorb
scas
fwait
xlat
mov
push
jle
pop
andl
mov
into
fsubrs
add
enter
call
dec
ret
out
pop
xchg
out
mov
sti
and
push
adc
out
sub
pop
sub
mov
jmp
negb
test
sbb
xor
cmpsl
or
adcb
adc
xor
ds
pushf
les
fdivl
xchg
inc
sub
adc
imul
xchg
cmpsl
sub
jo
call
inc
pop
testl
in
cltd
clc
push
out
mov
add
add
ds
in
idivl
js
mov
dec
mov
jg
testl
add
adc
cmp
push
or
int3
dec
bound
mov
loopne
mov
push
cmp
les
sbb
jle
nop
pop
mov
clc
push
xchg
jns
mov
xorb
push
dec
faddl
js
jbe
mov
sbb
xor
cmp
jo
js
push
jb
addr16
fcomps
cltd
in
adc
inc
int3
pop
cltd
lret
xchg
icebp
xchg
insl
aas
or
mov
aad
sbb
cmc
adc
dec
pop
dec
stc
out
dec
push
xor
fstpt
stc
dec
ljmp
inc
stos
mov
dec
outsb
stos
mov
inc
nop
dec
pop
or
pushf
outsl
idiv
push
out
and
lea
out
xchg
addr16
push
sbb
in
out
jae
loop
dec
test
cmp
xchg
lret
pop
pop
jbe
test
push
subl
xchg
dec
sub
inc
push
rcll
add
pop
es
inc
cli
aas
into
lret
or
stos
sahf
fs
add
add
add
pop
rcrl
dec
test
xchg
sub
push
jg
js
rol
dec
jl
xor
loop
dec
fnstsw
imul
inc
es
jnp
movsb
mov
enter
mov
dec
divl
push
scas
xchg
push
cs
scas
mov
lahf
jle
in
sti
add
pop
xor
xchg
mov
inc
les
jge
and
add
mov
mov
mov
addr16
imull
stc
mov
inc
sbbl
adc
mov
int3
pop
cli
xchg
mov
inc
mov
outsb
ret
in
in
xchg
imul
cmp
nop
cld
add
add
push
jl
push
stos
pop
rcll
cmp
jne
dec
inc
aad
les
and
lods
mov
scas
or
or
stos
mov
add
add
lcall
sbb
pop
pushw
add
add
mov
mov
dec
insl
pushf
iret
jns
push
inc
sbb
pop
adc
jecxz
sub
xchg
test
repnz
ret
sub
incb
sub
mov
addr16
mov
ret
adc
js
sbb
push
xor
mov
cmp
daa
mov
xor
dec
jno
cmp
xor
and
jno
add
push
js
add
sbb
scas
jbe
clc
xchg
fs
pop
jp
loopne
les
sbb
jecxz
jb
out
sbb
shll
cs
mov
add
gs
sbb
xchg
pop
jmp
jg
dec
cmp
testb
lahf
addr16
push
ret
mov
frstor
sbb
stc
push
jno
bound
imul
xchg
push
gs
dec
adc
lods
cmp
jae
mov
push
cmp
inc
or
add
add
aaa
jae
cltd
dec
mov
jno
mov
lods
shrl
add
add
repnz
fiaddl
stos
addb
xchg
pop
test
push
or
sbb
mov
xchg
stc
lods
sub
mov
or
jg
push
dec
and
notl
and
pop
pushf
inc
in
test
sarb
add
int
inc
daa
dec
cmp
cmp
leave
push
mov
enter
xor
adc
clc
fists
pop
call
mov
test
mov
xchg
pop
jno
rcrl
push
xchg
aas
push
xor
add
jb
dec
fldcw
pop
stc
mov
cmc
mov
xor
add
jne
mov
sarb
sbb
jg
dec
dec
shr
dec
jecxz
out
and
dec
jnp
shlb
jg
repnz
push
add
clc
fwait
ds
ds
pop
push
das
xchg
mov
movl
fimuls
xchg
insl
ds
into
nop
out
cwtl
jle
push
sub
dec
sbb
mov
add
add
add
xor
jp
out
xor
lea
jle
dec
mov
movsl
mov
sub
sbb
sbb
jp
xchg
mov
add
dec
enter
mov
mov
andb
ja
inc
and
outsl
lods
dec
jg
daa
cmp
ja
or
inc
ffreep
push
repz
movsb
cmpsb
punpckhwd
sahf
les
in
fsubs
clc
ljmp
xor
outsl
dec
and
jp
dec
and
lods
cmp
xchg
fistpll
mov
mov
push
shll
outsl
cmp
inc
xchg
cltd
lcall
xor
lods
mov
fsubr
push
sbb
pop
rcr
and
les
stc
inc
jl
push
popa
sub
pop
dec
push
and
ljmp
cs
fsubrl
sub
or
cmpsb
movsb
xchg
leave
adc
sub
jp
insb
sub
shrb
xchg
in
jno
test
jg
push
pop
push
mov
je
add
add
add
js
mov
test
add
nop
lret
mov
adc
add
test
xchg
mov
fistps
jl
cmp
xchg
jle
mov
jle
mov
or
adc
popa
gs
pop
add
sub
rorl
jnp
push
cmp
gs
mov
insl
daa
adc
jb
push
xchg
cs
pop
mov
ds
mov
dec
push
dec
aam
outsl
and
xchg
sub
add
out
or
aad
pop
shlb
loopne
mov
mov
je
jecxz
scas
xor
pop
mov
sbb
iret
dec
or
sbb
movsl
jmp
adc
mov
inc
xchg
popf
adc
stos
and
les
jbe
fsts
add
das
loop
sub
dec
aaa
pop
aam
call
cmpsb
lods
insb
push
cmp
sbb
test
aaa
aaa
sub
add
add
movsb
push
in
cmc
jne
sbb
js
out
pushf
insl
js
add
add
add
xor
in
xchg
jge
sbb
jmp
hlt
lods
mov
xchg
sbb
jle
pop
mov
xor
add
cmp
and
push
lods
push
mov
je
dec
dec
clc
cld
insb
pop
push
popa
inc
stos
repz
outsb
popf
shrl
or
test
mov
push
nop
clc
in
or
leave
dec
inc
xor
dec
fadds
pop
add
movsl
or
adc
loope
mov
and
dec
inc
gs
stc
jb
cs
xchg
sbb
ret
xor
rorb
stos
stc
hlt
lods
xchg
sbb
push
jecxz
adc
push
lcall
aad
push
dec
dec
popa
stc
adc
jecxz
or
leave
jb
rorb
push
cwtl
movb
daa
adc
test
std
pop
sarl
dec
inc
add
leave
add
sahf
and
iret
aad
mov
mov
add
lret
add
mov
int
mov
inc
sarb
sbb
shlb
aas
out
int3
mov
push
imul
add
add
aaa
movsl
mov
xchg
sbb
dec
pop
jmp
push
xchg
ljmp
ja
dec
jecxz
adc
mov
repz
mov
push
std
addr16
insb
stc
out
pop
rcll
xor
std
adc
inc
sub
imul
sbb
movsb
aam
ds
pop
mov
dec
lret
push
pop
pop
push
sub
inc
pop
rcrl
stos
test
xchg
idivb
ficoms
dec
xchg
push
xor
xchg
push
sub
sub
and
or
mov
andl
pop
jmp
pop
lahf
jo
cmpsl
mov
jp
pop
inc
movsl
rolb
adc
sbb
jge
fdivs
stos
xorl
mov
out
cmp
inc
xlat
mov
or
insl
inc
jno
inc
sbb
add
adc
sbb
push
or
mov
addr16
test
add
add
mov
lcall
jmp
cmp
add
add
shlb
push
lret
and
ficomps
jmp
insb
push
test
ret
rcr
adc
aad
popf
mov
mov
rclb
mov
data16
jl
repz
jg
les
cmpb
mov
clc
js
cmp
loope
xchg
gs
xchg
xor
xor
fwait
rorl
pop
daa
add
inc
in
rcl
js
cwtl
mov
and
lcall
xchg
cs
inc
jmp
rorl
stc
jmp
sub
xor
jne
sbb
mov
push
and
js
push
jecxz
jns
mov
test
jp
es
sub
adc
jae
mov
dec
mov
mov
in
test
enter
inc
cmp
pop
inc
daa
aam
mov
cmp
mov
sub
outsb
outsb
in
push
test
shll
add
add
ret
bnd
cmc
inc
stos
repz
adc
add
add
add
test
push
dec
mov
nop
xor
xor
or
mov
loope
xchg
dec
jae
addr16
rep
xchg
popf
rcrl
mov
insw
test
aaa
and
dec
arpl
outsb
lahf
leave
out
imul
dec
pop
sub
arpl
pop
mov
jp
subb
mov
data16
sbb
push
out
fsts
mov
loopw
mov
aam
dec
jge
lahf
int
fldl
mov
push
pop
pop
pushf
outsl
xlat
js
inc
fiadds
push
insl
pop
in
xlat
inc
sub
adc
dec
pushf
inc
pop
sub
and
mov
add
lods
and
out
dec
jnp
ds
fsubrp
sbb
push
rcrl
xchg
mov
xor
jmp
push
jne
or
adcb
cmc
ds
mov
lds
lcall
mov
lea
add
std
aaa
mov
shll
ljmp
add
test
push
jo
mov
scas
adc
cmp
push
inc
push
mov
pop
in
xchg
dec
ss
testl
jne
outsb
movsb
mov
jbe
mov
mov
sbb
jb
jp
inc
sbb
cmc
sub
sbb
sbb
xchg
sbb
ss
movsb
xor
lahf
xchg
fistpl
push
loope
jno
pusha
jl
fcompl
in
daa
popa
movsl
jb
shl
sub
pusha
and
mov
sbb
add
cmpsl
inc
dec
mov
push
packssdw
sbb
and
sub
sub
ret
test
xchg
mov
adc
imul
into
mov
fs
cli
lock
adc
mov
cmp
jae
in
cmp
pusha
popa
outsl
mov
or
pusha
arpl
in
mov
dec
xlat
push
cltd
jle
std
lahf
xchg
rorb
dec
push
mov
mov
or
dec
add
add
add
movl
xor
test
enter
mov
hlt
test
pushf
enter
movl
inc
mov
dec
mov
call
mov
call
pop
ljmp
fwait
mov
xor
add
mov
mov
xor
lret
lret
add
enter
dec
sbb
add
decl
test
dec
incl
inc
enter
call
cld
decl
push
mov
and
pop
inc
mov
push
pop
movsb
dec
add
jne
lea
push
decl
mov
test
add
xor
add
mov
or
inc
mov
arpl
sub
incl
lea
or
incl
mov
cld
add
xchg
fdivr
inc
incl
mov
xor
add
enter
mov
hlt
add
mov
add
add
incl
sbb
jne
mov
mov
movl
incl
fisttpll
test
inc
aas
inc
lea
inc
mov
mov
cld
loop
inc
out
fisttps
jecxz
in
incl
out
aas
inc
ljmp
incl
movl
insb
test
pandn
aas
add
mov
incl
or
mov
xchg
fildl
mov
cmp
dec
leave
mov
fsubrs
add
lea
push
add
mov
mov
add
mov
add
push
decl
push
mov
call
mov
cld
add
test
loop
ljmp
fsub
add
mov
add
add
adc
add
push
inc
push
fisttps
test
out
shlb
jmp
fildl
inc
jle
test
call
out
test
in
mov
mov
add
call
rorb
add
add
xor
mov
cld
jle
add
add
inc
inc
mov
decl
add
inc
fmull
inc
add
mov
mov
inc
sub
add
rolb
jne
xor
incl
call
mov
call
xor
push
adc
fsub
ret
loopne
xorl
cmp
bswap
rolb
jmp
mov
add
cld
jne
xor
jb
add
push
fildl
mov
inc
add
or
inc
call
jge
adc
mov
fwait
mov
lea
xor
call
call
jne
xor
add
pushl
call
enter
mov
xor
add
xchg
call
mov
add
mov
mov
or
inc
test
je
mov
xor
push
or
inc
loopne
sub
int
sub
inc
push
cmp
movaps
cld
faddl
jne
push
loopne
inc
lea
xor
jmp
mov
xor
adcl
rclb
inc
lock
inc
xchg
ud0
incl
daa
jbe
mov
push
pop
mov
inc
lret
inc
iret
jb
mov
int3
inc
inc
add
add
xor
pushf
lea
add
inc
mov
xor
add
mov
fmull
xor
mov
roll
xor
mov
clc
enter
mov
test
clc
incl
mov
test
clc
pushf
inc
cmp
pushf
inc
mov
add
xor
cmovge
add
jmp
jb
add
xor
xor
add
clc
int3
add
push
xor
xor
add
add
lret
repnz
cli
fdivr
test
dec
inc
xor
add
mov
mov
clc
jne
mov
into
into
scas
dec
mov
sub
cmp
mov
mov
mov
add
xor
xor
lret
mov
inc
add
mov
lods
test
xor
mov
lock
bswap
lret
test
jmp
add
push
mov
test
push
clc
xor
xor
add
add
push
dec
mov
stc
roll
scas
mov
xor
xor
add
mov
clc
lret
into
mov
mov
mov
enter
xor
xor
add
mov
lock
stc
mov
or
jmp
dec
dec
mov
clc
test
clc
rorl
mov
in
scas
inc
mov
les
lret
ja
mov
dec
xor
mov
clc
push
lret
mov
adc
jb
add
in
jge
sub
mov
mov
mov
mov
in
ror
push
scas
mov
fwait
sub
cmp
lods
xor
add
mov
mov
cmp
jb
add
dec
scas
mov
shrl
into
cmp
mov
dec
dec
mov
lret
xor
add
imul
mov
xor
mov
add
mov
inc
rdtsc
xlat
pushf
jge
xor
sub
cmp
jb
add
rorl
xor
add
jmp
mov
dec
into
mov
fwait
shll
lret
or
add
call
fcoms
lret
jb
add
dec
sub
dec
xor
jge
mov
add
dec
decl
adcb
add
jge
push
push
shlb
xor
xor
inc
add
dec
or
jbe
mov
ror
enter
decl
push
lret
push
mov
mov
cld
subb
sti
add
push
lcall
mov
enter
mov
xor
movl
aas
push
inc
xor
add
mov
jmp
mov
rol
mov
mov
mov
cmp
mov
add
xor
fwait
lret
cmp
call
inc
inc
mov
mov
int3
pushf
add
add
add
clc
int3
inc
add
push
pushf
mov
enter
aas
clc
gs
add
push
xor
sub
dec
add
mov
or
cmp
dec
out
xor
mov
dec
add
push
push
add
sbb
mov
xor
dec
inc
xor
add
push
dec
mov
lret
into
sub
dec
adc
inc
push
test
unpcklps
jmp
add
movl
xor
rolb
clc
gs
mov
xor
sub
mov
add
sub
mov
mov
clc
addl
lcall
inc
decl
test
decl
push
add
dec
or
rorb
into
add
mov
sar
adc
clc
fadds
mov
push
adcb
add
lret
mov
cld
mov
into
add
jne
incl
rclb
push
mov
mov
sar
or
push
add
pushf
xor
pushf
mov
test
clc
inc
inc
mov
sub
mov
dec
xor
mov
xor
orl
shll
enter
clc
incl
cmp
pushf
pop
lods
incl
mov
rcrb
test
sbb
add
push
loopne
push
mov
cld
add
adc
add
jmp
add
mov
dec
push
cmp
unpcklps
jne
decl
mov
shlb
inc
add
lret
decl
stc
loopne
test
xor
mov
rolb
inc
add
clc
inc
lret
mov
loopne
lret
into
into
scas
dec
mov
sub
cmp
mov
enter
add
xor
xor
lret
mov
inc
add
mov
xor
mov
in
add
bswap
lret
test
jmp
add
push
mov
mov
lret
xor
add
add
push
dec
mov
stc
roll
scas
mov
xor
xor
add
mov
clc
lret
into
mov
test
push
jbe
mov
mov
push
add
rdpmc
lret
add
dec
stc
mov
or
jmp
dec
dec
mov
clc
test
clc
rorl
mov
lock
inc
mov
hlt
pushf
jge
sub
cmp
ja
mov
dec
xor
mov
clc
push
lret
mov
adc
jb
add
lock
sub
mov
mov
mov
mov
lock
ror
push
scas
mov
fwait
sub
cmp
movsb
xor
add
mov
mov
cmp
jb
add
dec
scas
mov
shrl
into
cmp
mov
dec
dec
mov
lret
xor
add
imul
mov
xor
mov
add
rolb
rdtsc
xlat
pushf
jge
xor
sub
cmp
dec
xchg
incl
jmp
mov
dec
into
mov
fwait
shll
lret
or
add
call
fcoml
lret
jb
add
dec
sub
dec
xor
jge
mov
add
dec
decl
inc
push
decl
lea
push
mov
push
mov
les
add
incl
mov
cld
lret
add
jne
jmp
ror
or
add
not
adc
inc
push
mov
push
mov
in
sti
sbb
pop
xchg
leave
fwait
add
push
cmp
sqrtps
decl
push
cld
xor
add
push
clc
xor
add
hlt
or
mov
hlt
dec
add
mov
add
leave
push
push
mov
fcoml
inc
xor
iret
cld
lret
loopne
mov
mov
mov
cld
jne
movb
add
test
inc
incl
mov
cld
add
leave
xor
in
mov
inc
add
int3
cld
jne
call
mov
test
je
mov
cld
add
add
fiaddl
movb
push
push
mov
pop
lea
ret
mov
xchg
mov
push
clc
jne
mov
push
or
cmp
pop
or
inc
leave
ljmp
leave
in
incl
fimull
inc
nop
loopne
ret
mov
add
push
pushl
mov
or
pushl
cmp
pop
ret
or
inc
push
jle
inc
inc
int
inc
sub
add
lret
adc
xchg
push
mov
rcll
jne
mov
roll
divl
cmp
pop
decb
in
inc
sub
inc
push
add
push
add
leave
adcl
add
inc
rorl
add
add
jmp
jne
mov
or
inc
stc
in
ss
aas
out
inc
mov
lock
and
add
aad
add
clts
call
hlt
iret
jge
roll
jmp
out
mov
pop
push
cmp
sar
incl
inc
loopne
push
push
push
add
add
push
add
sub
jne
lods
mov
dec
out
into
push
loopne
shrb
andl
roll
mov
cmpl
mov
push
push
push
sub
push
adc
insl
mov
add
rorb
add
add
roll
pop
or
cli
add
lea
mov
dec
inc
shrb
and
jne
pop
mov
call
and
push
add
dec
mov
jmp
mov
call
shrl
lock
adc
out
cmp
pop
or
push
cld
mov
and
xorb
add
mov
psubsw
add
rcr
mov
and
add
call
add
mov
aam
or
jne
mov
aam
dec
jne
cmp
jb
jmp
mov
int3
dec
orl
mov
cmp
jb
pop
push
cli
pop
mov
jb
addl
mov
int3
add
jmp
mov
call
add
pop
or
pop
inc
xor
push
mov
call
int3
sbb
inc
add
call
or
cmp
mov
jb
mov
push
add
add
add
int3
jne
movsbl
add
add
mov
add
add
mov
sub
jb
add
jge
add
addl
jne
je
mov
rorb
orl
mov
mov
fadds
inc
pop
lea
push
out
add
add
mov
jb
add
push
call
add
jae
icebp
inc
mov
int3
out
loopne
sub
push
pop
push
jl
add
xor
mov
rcrb
rorl
inc
shr
orl
push
pop
add
jmp
mov
fdivrl
push
pop
call
mov
in
rolb
call
pop
enter
repz
xorl
je
or
jne
jmp
pushl
push
pop
cmpl
jge
mov
sub
pop
inc
mov
sub
lods
add
enter
repz
stc
jge
jnp
call
fadd
dec
insb
stc
cmp
push
mov
jne
mov
mov
add
sub
and
cmp
sbb
pop
call
fsubr
sti
add
add
add
roll
mov
clc
jne
mov
loopne
loopne
lods
int3
inc
mov
add
sub
shrb
add
call
add
dec
insl
in
lea
inc
inc
sub
orl
and
rorl
or
mov
stos
adc
inc
add
jne
mov
cmp
sub
sar
ljmp
sub
mov
mov
and
jne
sub
sbb
dec
push
add
ret
mov
leave
sub
ret
pop
push
rolb
addl
jb
ret
in
jecxz
push
xchg
jne
cmp
jne
mov
rorl
mov
pop
nop
mov
les
add
inc
mov
mov
cmp
or
inc
inc
xor
cld
add
add
add
sbb
dec
je
mov
add
and
jae
mov
incl
push
shr
in
push
add
add
inc
mov
add
jmp
pushf
dec
mov
fsts
movb
sub
inc
add
mov
insb
movl
dec
jmp
inc
fnstcw
testb
rolb
lea
sbb
inc
add
add
mov
fdivl
mov
add
add
or
mov
add
add
push
movb
or
dec
lea
xor
movsl
repz
add
prefetcht0
xor
mov
pop
mov
or
cmpb
movb
add
mov
xorl
mov
sbb
inc
xrelease
clc
xor
lea
mov
fadd
dec
lds
out
inc
lea
enter
push
leave
xor
add
mov
mov
psubusw
add
addb
add
in
inc
inc
mov
addb
mov
sub
insl
inc
add
testb
movl
dec
pop
add
mov
in
incl
out
inc
mov
push
jmp
add
out
insb
inc
jmp
addl
mov
outsb
inc
mov
mov
fcos
mov
in
jb
decl
mov
fdivr
out
rclb
mov
std
cmp
jne
mov
in
outsb
pushf
add
incl
incl
jae
add
incl
mov
jl
add
cld
dec
addb
data16
mov
mov
inc
mov
incw
data16
inc
jge
add
lea
add
ljmpw
pushl
lea
shlb
test
incl
test
inc
push
xor
add
ret
mov
push
movl
add
pushl
incl
mov
or
jne
addl
mov
add
mov
orl
push
mov
ret
adcb
add
mov
ret
or
lea
loop
xchg
aam
out
mov
inc
dec
pop
mov
repnz
orb
repnz
mov
jmp
incl
addl
mov
cmpsb
pop
inc
data16
inc
xor
dec
push
inc
jge
mov
mov
add
add
test
incw
mov
call
mov
clc
ret
rol
mov
mov
pushf
pop
ljmp
add
inc
test
push
mov
mov
push
add
decl
add
cmp
decl
jmp
push
hlt
data16
dec
ret
mov
lea
jne
decl
decb
mov
push
jmp
inc
sbb
movsb
inc
test
inc
decl
test
mov
lods
push
inc
jne
decl
mov
sbb
mov
mov
movswl
xor
add
xor
xor
decb
mov
pushf
inc
decl
sar
decl
incl
addl
xlat
dec
add
mov
lea
call
inc
rdpmc
add
push
lea
js
add
push
lea
fmuls
jmp
dec
mov
mov
call
dec
inc
mov
push
into
test
call
lea
jmp
inc
jnp
add
incw
mov
inc
add
mov
decl
add
data16
inc
dec
test
cmp
add
mov
incl
mov
ljmp
push
incl
call
decl
mov
inc
mov
mov
add
inc
mov
mov
pop
test
clc
lea
cmp
push
lea
mov
hlt
lahf
push
mov
xor
add
mov
mov
rolb
mov
nop
push
add
mov
in
jge
test
jne
sbb
push
inc
call
add
mov
cmp
ud0
test
dec
incl
decl
dec
cld
test
icebp
add
test
incb
jne
mov
cld
xor
push
xor
add
add
add
add
or
jmp
nop
test
xor
mov
mov
add
decl
add
decl
movsl
add
add
rdpmc
addb
mov
add
decl
decl
push
jne
mov
cld
add
push
incl
add
add
mov
sbb
leave
test
jne
call
xor
mov
enter
mov
mov
cld
add
inc
dec
mov
inc
decl
add
xchg
ret
add
add
mov
lea
add
mov
inc
rdpmc
jne
add
inc
clc
add
mov
mov
in
add
test
incb
add
cmp
pushl
add
test
je
mov
sbb
test
js
add
sub
mov
add
dec
push
mov
mov
mov
sbb
or
dec
incl
push
add
mov
orl
add
push
cmp
inc
mov
in
add
xor
add
ljmp
decl
call
mov
lock
mov
mov
mov
mov
addl
mov
inc
push
ljmp
mov
clc
cmp
jne
mov
add
int3
inc
cmp
add
adc
add
mov
cmp
jmp
mov
inc
or
decl
jne
mov
mov
in
xchg
jmp
adc
inc
mov
push
sub
push
test
inc
dec
mov
movl
add
add
mov
push
roll
bound
xor
add
mov
test
call
loop
jnp
mov
cmp
cld
shr
add
push
lea
mov
cwtl
cli
add
or
inc
dec
incl
add
call
add
push
adc
mov
mov
addl
incl
inc
stos
mov
add
mov
cmp
movsb
mov
cld
jae
add
clc
add
mov
clc
pop
inc
xor
pushl
mov
jae
mov
sub
add
mov
mov
ret
mov
ret
mov
add
mov
add
incl
lea
hlt
sar
test
inc
add
testb
push
add
add
add
add
add
mov
mov
cld
fidivl
mov
xorb
add
sbb
jne
mov
sbb
mov
add
ret
dec
or
dec
cld
cmovne
add
seto
inc
adc
mov
cmp
xor
gs
je
push
sarb
mov
push
cmp
add
dec
mov
in
adc
pop
inc
leave
or
gs
add
into
in
enter
push
xorl
or
jnp
test
add
mov
ltr
decl
clc
out
add
cmp
jge
jb
je
pop
push
mov
in
roll
orl
cmpl
hlt
mov
push
jns
lock
ror
test
dec
rcpps
mov
inc
test
je
mov
adcl
and
jp
rcpps
add
sbb
add
je
cmp
js
add
jns
vmread
add
adc
jge
mov
add
or
push
push
mov
add
pop
add
mov
inc
pop
xorl
add
push
clc
mov
jp
add
divl
test
je
mov
or
decb
jbe
mov
add
cmp
add
je
mov
mov
hlt
orb
jb
jmp
xor
pop
pop
pop
ret
ret
mov
xorl
pushf
xor
rdmsr
test
dec
ret
mov
pop
dec
jne
xor
inc
dec
jbe
inc
pop
add
push
dec
push
mov
and
jo
mov
sbb
mov
nop
or
jne
cmp
cld
xor
add
cmp
js
jae
xor
jmp
mov
fdecstp
test
add
add
mov
cmp
adc
jge
mov
jl
clc
dec
jge
mov
jb
mov
mov
xor
add
mov
inc
pop
jge
cmp
mov
imul
fimuls
fists
in
jne
mov
imul
fdivrp
filds
test
inc
mov
mov
adc
rcll
mov
fiadds
mov
mov
xor
mov
xlat
into
ffreep
lret
iret
dec
inc
mov
fmull
dec
jnp
add
mov
inc
dec
lea
add
jb
add
inc
imul
cld
clc
mov
incl
or
sbb
lret
add
dec
add
enter
inc
pop
decl
add
add
mov
xor
or
pop
cltd
push
clc
mov
xor
add
cmp
hlt
cmp
or
mov
loopne
mov
cld
pushf
pop
fwait
mov
lock
adc
orb
xor
dec
mov
iret
inc
jne
mov
cmp
je
add
or
dec
inc
mov
cld
add
cmp
mov
or
mov
test
inc
xor
mov
jne
mov
fcomps
add
incl
cld
add
mov
cld
inc
fidivrs
fbstp
mov
adc
fadd
add
mov
inc
mov
loopne
sbb
sbb
pushf
add
mov
cwtl
inc
inc
jne
mov
clc
add
mov
or
inc
lea
add
inc
rorl
add
shufps
jmp
xor
hlt
mov
fadds
xor
add
cmp
pmuludq
jmp
mov
or
inc
mov
jne
mov
clc
add
xor
jne
pushl
add
mov
cld
add
xor
mov
adc
sub
lea
add
jb
add
inc
add
inc
mov
or
mov
in
scas
inc
mov
in
add
mov
dec
mov
mov
cld
push
dec
add
mov
in
cmp
mov
mov
mov
xor
cmpl
xor
jmp
add
xor
add
cmp
mov
mov
adc
jmp
mov
cld
mov
push
jne
dec
or
push
inc
in
add
or
dec
cld
mov
xorl
pushf
decl
mov
mov
xor
mov
inc
mov
mov
call
add
mov
or
jo
push
xor
pmulhuw
test
mov
mov
xor
xor
xor
add
inc
mov
movl
sub
lock
mov
mov
or
ja
mov
cld
cli
mov
cmp
bswap
mov
mov
clc
repnz
push
xor
cmp
pushf
pop
jmp
mov
xor
lea
xor
pushf
out
neg
insl
test
clc
pop
inc
or
xor
add
jne
mov
in
push
xor
add
cmp
add
mov
mov
add
mov
mov
fwait
pushf
xor
jne
mov
icebp
icebp
shl
mov
push
jne
mov
in
jmp
add
mov
or
inc
jne
mov
ret
or
jge
sub
xor
add
mov
clc
negl
xor
cmp
repz
xor
add
mov
mov
cld
lock
test
clc
add
fdivrp
test
jnp
add
jae
sub
shll
leave
call
in
in
add
mov
in
test
mov
xor
pushf
jnp
xor
loopne
jne
mov
add
xor
mov
cld
jb
add
jne
mov
jge
mov
lock
xor
mov
lock
jge
xor
dec
mov
loopne
jge
add
icebp
add
dec
hlt
xor
mov
in
jge
mov
dec
push
xor
inc
hlt
xor
mov
repnz
cmp
test
fistps
inc
mov
add
inc
test
add
add
ret
jnp
inc
inc
xor
fdivl
test
push
add
cmp
setnp
mov
call
or
inc
mov
and
lock
movl
mov
clc
xor
mov
inc
mov
mov
mov
mov
hlt
inc
rorl
mov
push
mov
in
jne
mov
addl
clc
mov
add
rolw
mov
jne
incl
inc
push
test
sub
add
and
add
mov
and
cmp
add
inc
push
add
push
enterw
mov
add
add
str
lea
sbb
dec
cmp
inc
push
mov
push
add
mov
inc
add
add
mov
loopne
dec
mov
cld
push
xchg
add
add
or
dec
loopne
xchg
push
add
dec
jmp
mov
sbb
inc
xor
add
push
divl
and
add
jno
incl
inc
push
push
mov
mov
push
inc
enter
push
call
pop
push
mov
mov
push
jo
incl
or
call
fmull
mov
mov
adc
dec
xor
mov
mov
mov
push
lret
movb
inc
movntps
lret
into
dec
lret
mov
mov
fdivl
mov
push
mov
sbb
dec
sarl
push
jne
mov
lea
call
sbb
add
push
mov
push
mov
test
xadd
pop
add
mov
or
push
add
add
and
call
add
mov
add
xor
add
inc
je
push
decb
add
or
inc
add
data16
subl
add
add
enter
int3
loopne
rolb
lea
data16
add
sbb
inc
cmp
add
xor
sub
mov
or
ror
dec
inc
cmp
cld
or
ret
lret
dec
mov
loopne
cmp
inc
daa
loopne
in
add
add
push
inc
xor
add
push
push
inc
in
push
inc
sbb
rorb
addb
ljmp
xor
mov
fmuls
add
lea
add
popl
add
push
incw
mov
add
xor
test
inc
mov
add
or
or
inc
mov
jne
mov
add
add
adc
adc
push
mov
mov
inc
mov
or
push
jne
call
inc
sarb
in
add
add
and
fs
incl
jle
leave
scas
inc
add
orb
call
shr
xchg
add
add
dec
and
push
decl
mov
mov
lea
mov
add
mov
push
shlb
inc
in
jno
push
mov
mov
je
mov
sbb
popl
add
add
adc
jmp
sub
jne
mov
in
popl
push
incl
adc
add
call
and
and
inc
test
sldt
xor
pushf
jmp
mov
or
inc
call
mov
loopne
inc
add
mov
add
add
cmp
test
sbbl
jne
call
leave
rcrb
add
add
add
inc
mov
fcom
add
lea
pushl
call
mov
fstps
push
pop
mov
addl
mov
xor
xor
pop
or
inc
push
in
or
movsl
xbegin
clc
adc
divb
or
test
add
add
adc
xchg
test
clc
data16
orl
rolb
mov
mov
push
add
jge
add
jne
mov
jmp
xor
pop
cvtdq2ps
ret
mov
xor
add
push
rdpmc
out
add
mov
ret
sbb
cmp
or
or
pop
inc
add
add
invd
jge
mov
cli
xor
mov
ret
mov
sub
inc
xor
pushf
inc
mov
hlt
test
mov
xor
dec
or
jne
mov
call
inc
mov
add
add
inc
mov
addl
inc
mov
lock
jge
mov
cli
xor
add
test
add
cmp
xadd
test
mov
xor
add
pop
loopne
inc
clc
xor
add
data16
mov
hlt
xor
add
data16
cmp
add
psubq
ltr
add
add
data16
mov
jge
data16
data16
mov
fdivl
data16
mov
mov
pop
or
clc
mov
lock
jge
invd
pop
add
cmp
data16
mov
pop
fbstp
test
add
add
jge
data16
pop
stc
bsf
mov
in
test
mov
call
cmp
add
mov
call
add
mov
jnp
mov
mov
call
mov
data16
xorl
fisttps
cld
jne
xor
mov
sti
repnz
data16
push
xor
mov
fwait
data16
mov
mov
fisttps
or
mov
hlt
mov
add
dec
or
mov
or
mov
fdivrl
xor
pop
lock
lea
icebp
jb
add
jge
mov
fsubr
pop
mov
in
rcrl
jb
add
jge
mov
in
pop
data16
cmp
mov
fdivrl
cmp
mov
mov
lock
mov
or
clc
cmp
je
push
loopne
dec
mov
int
mov
pcmpgtd
add
jmp
mov
lock
rorl
or
jb
add
loopne
jne
data16
mov
data16
add
add
retw
ret
lret
enterw
pop
jne
mov
call
xor
lea
repnz
add
xor
in
xor
movl
clc
add
pop
pushf
pop
call
mov
push
pop
mov
push
inc
add
popa
data16
into
gs
add
ret
add
add
add
cmp
add
into
ret
pop
adc
mov
mov
jne
lea
mov
sarl
test
mov
push
xorb
mov
xor
ss
fs
mov
je
xor
mov
ss
pop
cmp
jne
mov
cld
push
pop
inc
stc
xor
test
clc
test
cmp
fs
or
add
lret
xor
pushf
mov
ret
pop
dec
mov
push
add
xor
cmp
je
mov
lea
push
cmp
mov
add
sub
add
mov
jne
mov
xor
mov
push
cmp
jne
sbbl
clc
inc
pop
sti
add
cld
xor
mov
roll
mov
inc
in
add
mov
mov
push
mov
test
xor
pushf
sub
inc
sub
mov
inc
add
or
cmp
mov
cmp
je
push
dec
str
cmp
int
mov
mov
cld
add
data16
push
add
jne
movl
clc
xlat
inc
mov
push
pushf
in
add
add
add
cmp
add
lret
lock
clc
inc
lret
cmp
xor
pushf
test
je
xor
rorb
push
add
jb
add
dec
mov
push
push
adcl
xor
mov
scas
ret
jns
mov
dec
or
ret
lock
mov
or
mov
xorl
mov
adc
iret
inc
movl
incb
ret
adc
clc
dec
fisttps
add
ret
lea
add
xor
pushf
add
add
inc
test
xor
push
fwait
push
xor
inc
cmp
jbe
mov
or
inc
test
xor
in
hlt
push
push
push
push
mov
fwait
fwait
xor
mov
or
mov
clc
jb
add
orl
addl
mov
or
inc
dec
mov
orw
xor
mov
mov
mov
mov
inc
dec
add
add
mov
clc
or
mov
clc
popf
incl
ret
adc
mov
hlt
test
clc
or
xor
pushf
jb
add
inc
daa
inc
inc
xor
dec
fwait
add
clc
cmp
or
add
xor
or
lea
add
mov
cld
dec
push
sub
add
or
add
or
add
mov
inc
mov
cmp
xbegin
clc
or
xor
adc
lea
add
inc
add
add
je
push
or
dec
std
mov
mov
mov
or
inc
clc
mov
hlt
call
push
or
push
xor
mov
xor
pushf
inc
mov
or
add
inc
mov
or
inc
push
jmp
mov
mov
jne
jmp
mov
clc
lret
push
mov
mov
sub
decl
or
pop
ds
pushl
mov
mov
jmp
leave
jne
call
in
dec
add
add
inc
cmp
je
mov
or
add
or
adc
enter
rolb
mov
or
rorb
jmp
push
mov
cld
inc
inc
orl
push
push
mov
add
test
add
mov
mov
lock
fcoms
mov
push
enter
cmp
add
mov
call
cmp
jmp
push
call
mov
cld
or
call
add
xor
jne
cmp
jne
mov
or
pop
into
je
mov
or
mov
mov
mov
or
sar
xor
xor
pop
adc
ret
cld
inc
mov
cld
mov
push
pop
or
xorps
test
add
adc
addl
jmp
ror
inc
leave
xor
and
add
xor
xorl
mov
pcmpgtw
add
leave
mov
push
dec
mov
lea
xor
sysret
dec
rorb
pushw
jne
ud0
mov
lods
add
data16
iret
and
cli
inc
cmp
add
inc
pop
lea
mov
add
mov
mov
add
inc
data16
clc
int3
cmp
je
push
pop
xchg
data16
lea
jb
jmp
call
clc
xchg
mov
or
lea
push
inc
jge
mov
fdivs
incl
xor
xchg
ret
xor
cmp
data16
rolb
add
dec
xchg
push
jmp
push
add
add
mov
clc
dec
xchg
cmp
jne
xor
jmp
add
jne
call
clc
xchg
sti
add
add
xor
pop
mov
jmp
mov
cmp
cmp
lea
jle
jae
mov
lcall
inc
push
lea
mov
int3
push
xchg
add
add
inc
add
cld
mov
aam
xchg
mov
testb
mov
hlt
add
mov
decl
incl
mov
call
je
js
lock
mov
mov
sbb
clc
add
mov
rorb
dec
xchg
mov
in
jge
cmp
clc
pop
fistl
clc
add
mov
mov
mov
adc
add
adc
pop
sbbl
ret
cmp
mov
cld
add
add
add
sub
or
add
mov
push
push
clc
addl
out
add
jmp
cmp
jmp
je
mov
inc
add
add
add
pop
pop
push
inc
in
pop
in
cmp
xor
add
push
mov
in
dec
push
test
add
leave
inc
test
add
add
dec
push
mov
hlt
push
dec
leave
mov
clc
cmovge
mov
clc
popl
push
add
push
xor
cld
add
xor
add
add
int
mov
add
cmp
jne
xor
jmp
add
mov
or
mov
mov
mov
or
shl
icebp
addb
or
or
stc
shll
xor
inc
xchg
add
add
mov
test
sub
jmp
mov
lock
lea
mov
or
leave
add
dec
dec
test
paddb
add
dec
mov
mov
or
dec
xor
mov
adc
mov
call
mov
push
clc
or
push
lret
mov
mov
xor
cmp
lsl
call
or
dec
or
inc
xor
in
add
inc
pop
xor
testl
dec
sub
add
push
sub
mov
or
mov
xor
pushf
push
movl
dec
inc
cmpb
pushf
gs
shl
dec
xchg
shr
xlat
rol
mov
or
mov
or
push
mov
dec
enter
lret
ret
mov
or
into
add
add
bswap
ror
dec
add
mov
hlt
inc
inc
ret
mov
or
dec
xor
jne
inc
inc
mov
clc
pop
ret
mov
call
dec
add
adc
push
ret
in
call
push
add
xor
jmp
xor
add
shr
mov
mov
in
pushf
ret
fcomps
inc
in
xor
mov
cld
fmul
sbb
ljmp
jbe
mov
clc
add
mov
lea
mov
call
hlt
xor
mov
xor
mov
hlt
into
inc
scas
mov
cld
add
add
inc
shrl
xor
mov
clc
dec
inc
decl
ret
movb
scas
inc
jmp
mov
pop
xor
mov
clc
test
mov
cld
call
xor
add
fdivl
lret
in
inc
or
into
mov
call
cld
mov
xor
lea
mov
add
inc
mov
dec
mov
cld
xor
sub
int
sub
add
mov
call
incl
mov
cld
jne
mov
aam
dec
or
jb
add
rorl
xor
xor
sub
mov
xchg
inc
xor
clc
mov
nop
faddl
xchg
jmp
mov
fadds
inc
or
dec
add
dec
mov
inc
push
mov
xor
rolb
ret
inc
inc
mov
xor
add
mov
cmp
dec
inc
xor
inc
mov
clc
lea
add
xor
mov
push
enter
mov
mov
loopne
ret
push
enter
inc
cld
mov
clc
ret
ret
mov
cld
pop
mov
mov
dec
xor
pushf
add
fcoms
mov
adc
inc
mov
adc
cmp
inc
add
mov
nop
add
inc
mov
add
cmp
mov
clc
inc
inc
add
mov
in
jne
mov
clc
add
mov
in
mov
xor
cmp
fmuls
lea
clc
mov
cmp
test
inc
mov
ret
inc
decl
push
dec
test
dec
mov
mov
mov
fadds
dec
inc
sub
inc
xor
faddl
inc
or
dec
add
mov
mov
mov
mov
lock
inc
add
fsubr
test
clc
push
cmp
pushf
inc
push
fsubs
clc
mov
mov
mov
clc
mov
xor
mov
in
les
mov
or
dec
mov
in
dec
decl
fmuls
inc
mov
faddl
dec
push
xor
push
mov
push
mov
lock
inc
test
add
add
jne
lea
div
incl
xor
jb
add
mov
xor
mov
adc
mov
ret
push
push
lea
sti
add
or
mov
xor
mov
add
jne
lea
mov
call
shll
pushf
add
mov
xor
test
clc
dec
inc
xor
pushf
rorb
lea
int3
add
lea
lea
mov
xor
bswap
rorb
roll
add
xor
pushf
inc
jnp
mov
lock
lret
xor
mov
fmul
test
xor
mov
mov
mov
ret
add
dec
adc
add
inc
rcll
mov
xor
jb
add
mov
cld
mov
or
cmp
jne
mov
mov
xor
mov
mov
mov
xor
jb
add
add
mov
xor
mov
or
xor
mov
mov
xor
jb
add
enter
add
add
inc
mov
mov
add
dec
mov
add
cmp
add
mov
loopne
add
dec
or
in
or
mov
xor
add
enter
inc
mov
or
or
mov
cmp
add
roll
mov
or
xor
mov
mov
xor
mov
xor
mov
faddl
call
dec
dec
xor
or
loopne
or
iret
ret
mov
mov
call
fwait
add
mov
fmull
test
dec
add
cmp
dec
mov
xor
mov
in
or
dec
xor
lea
or
ja
sbb
cmp
jne
mov
faddl
mov
fadds
mov
in
or
iret
add
xor
sbb
decl
mov
in
mov
dec
mov
fmull
jne
or
add
cmp
jne
lea
inc
mov
mov
jne
mov
test
inc
mov
loop
pushl
mov
add
mov
lods
dec
inc
mov
lret
mov
adc
std
ret
ljmp
hlt
rol
ret
cld
enter
inc
pop
mov
ret
test
jmp
push
call
in
addb
add
add
icebp
mov
cld
pop
dec
shll
add
cmp
je
mov
inc
or
ljmp
sti
cwtl
call
or
push
sub
push
inc
mov
mov
test
inc
push
push
xor
add
dec
add
inc
add
push
decl
add
or
call
mov
mov
inc
dec
add
push
call
incl
mov
mov
or
cmp
cmovne
adc
adc
inc
adc
jne
call
dec
inc
mov
add
mov
push
or
dec
xorl
cmp
mov
pop
adc
ret
mov
clc
mov
pop
mov
mov
push
push
lock
mov
adc
or
ret
xor
add
or
jge
mov
and
cmp
mov
xchg
dec
add
mov
add
dec
into
mov
mov
das
add
add
mov
and
mov
and
xor
lea
xor
add
xor
orl
cmp
pushf
mov
or
jne
call
adc
mov
adc
movl
pop
and
and
call
in
jmp
je
call
and
call
and
push
or
pop
mov
and
mov
and
mov
jne
test
decl
sbb
jl
adc
dec
mov
mov
and
xor
or
add
clc
jmp
adc
inc
je
and
je
mov
decl
sbb
add
add
adc
mov
adc
add
add
adc
sub
add
imul
add
ss
add
inc
add
ss
add
ss
add
ss
add
ss
add
adc
add
jo
add
pop
adc
push
adc
add
insb
adc
jb
adc
shll
inc
add
ss
add
ss
add
ss
add
ss
add
ss
add
ss
add
ss
add
jge
add
or
add
sub
add
insb
adc
addr16
add
adc
lds
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
adc
clc
cmp
add
pop
adc
mov
adc
add
adc
cmp
shll
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
inc
add
adc
fwait
pop
adc
jnp
adc
pop
adc
popf
jno
add
inc
adc
sbb
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
aaa
inc
add
xor
aaa
pop
inc
dec
xor
push
add
xor
pop
inc
push
pop
dec
xor
push
add
cmp
xor
xor
pop
inc
add
dec
cmp
xor
pop
pop
xor
inc
add
inc
pop
cmp
push
inc
xor
xor
inc
inc
inc
cmp
dec
inc
add
push
xor
push
aaa
dec
pop
xor
dec
add
inc
xor
push
pop
push
inc
add
xor
cmp
push
push
push
pop
inc
push
push
add
inc
pop
pop
push
inc
pop
inc
add
cmp
inc
xor
pop
pop
cmp
inc
xor
dec
add
pop
cmp
xor
cmp
dec
dec
cmp
pop
dec
xor
xor
pop
inc
push
inc
inc
add
cmp
push
inc
xor
pop
dec
dec
ss
pop
push
cmp
pop
push
dec
add
inc
cmp
dec
xor
inc
xor
xor
push
add
xor
push
cmp
ss
pop
push
inc
xor
dec
inc
xor
dec
pop
push
add
inc
add
pop
add
add
add
xor
add
add
push
add
xor
add
inc
add
xor
pop
add
add
xor
add
xor
add
push
add
dec
add
push
add
push
add
pop
add
dec
add
push
add
pop
add
add
dec
add
cmp
pop
add
add
add
add
add
push
add
cmp
add
add
push
add
add
add
inc
add
inc
add
push
add
dec
add
add
dec
add
inc
add
dec
add
add
add
push
add
add
push
add
add
pop
add
add
inc
add
add
push
add
add
push
add
dec
add
add
aaa
add
add
pop
add
inc
add
xor
push
add
push
add
add
push
add
add
add
inc
push
movsb
jge
cli
gs
call
into
sbb
cmp
sbb
add
push
cmp
addr16
bound
outsb
pop
je
ja
imul
js
jp
jns
jp
je
jp
jo,pn
bound
