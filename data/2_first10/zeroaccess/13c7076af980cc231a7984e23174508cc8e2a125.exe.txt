push
mov
sub
and
mov
xor
mov
mov
sub
inc
push
mov
movl
mov
sbb
sbbl
mov
and
orl
orl
mov
or
mov
neg
mov
cmpl
mov
movl
mov
movl
jmp
mov
mov
jle
pushl
call
add
mov
or
or
or
sbb
add
cmpl
movzbl
mov
movzwl
jmp
movl
movl
jne
push
push
push
push
call
adcl
sbb
inc
adc
and
mov
addl
sub
mov
mov
sbb
mov
orl
orl
lea
xorl
mov
add
mov
and
mov
cmpl
not
movl
jmp
movl
movl
jle
push
call
andl
addl
add
sub
or
xor
xor
mov
sub
or
mov
add
mov
sbb
mov
mov
mov
shrd
cmpl
mov
mov
mov
mov
jmp
movl
movl
jge
pushl
push
pushl
push
call
addl
subl
movl
sub
dec
shr
mov
mov
xor
xor
subl
or
movzwl
or
mov
mov
movl
cmpl
movl
movl
movl
jmp
movl
mov
jbe
pushl
pushl
push
push
push
call
addl
adcl
movl
movl
cmpl
mov
movl
jmp
mov
jl
pushl
push
push
call
sbbl
xorl
notl
xorl
decl
cmpl
movl
movl
jmp
movzwl
jb
push
pushl
pushl
push
call
add
subl
andl
decl
andl
cmpl
movl
movl
jmp
movl
movl
jl
pushl
pushl
pushl
push
push
pushl
call
and
movl
subl
addl
orl
cmpl
movl
movl
movl
jmp
mov
jne
pushl
push
push
push
call
sbbl
xorl
adcl
addl
andl
sbbl
sbbl
sbb
jmp
push
lods
and
cmp
sub
pushf
jmp
mov
and
sbb
xor
mov
clc
out
or
push
mov
adc
pop
jno
sbb
mov
and
inc
mov
cld
clc
sub
dec
pop
push
and
fcompl
dec
inc
xchg
lret
xorb
jle
sti
xchg
mov
arpl
jmp
adc
out
push
pop
stc
adc
mov
dec
je
xchg
or
inc
add
fistpll
movsl
bswap
jae
in
stos
mov
mov
outsl
sub
aam
mov
xlat
dec
outsl
push
dec
mov
mov
dec
inc
lret
pop
popf
adc
mov
and
in
mov
lret
int3
aam
pop
push
sub
inc
and
data16
and
adc
dec
xchg
jecxz
enter
push
hlt
xor
fadd
sbb
int3
sub
and
cltd
imul
pop
popf
into
mov
cmp
adc
lahf
lea
test
push
or
lds
inc
cld
loope
push
adcl
scas
ror
js
stos
dec
xor
jge
call
pop
add
pop
js
lods
adc
inc
inc
sahf
mov
or
xchg
lret
push
addr16
stc
jl
loopne
mov
pusha
stos
fsubrs
aam
jmp
add
xor
cmp
mov
xchg
cbtw
clc
add
fnclex
dec
dec
push
loopne
mov
pop
pop
popa
jle
pop
fisubrl
mov
movsb
mov
pop
and
dec
push
sbb
jmp
jp
sub
mov
mov
mov
pusha
xor
push
jns
faddl
xchg
sbb
mov
and
xchg
rclb
repz
cmp
loop
sarl
jnp
pop
mov
mov
rcr
xchg
icebp
xchg
fidivrl
test
mov
test
and
or
xor
xchg
adcb
outsl
mov
push
pop
sbb
or
enter
and
pop
imul
pusha
imul
jno
mov
iret
dec
sub
and
sub
or
xchg
ss
or
pop
cmpsb
and
lock
jae
add
ds
inc
push
adc
mov
in
mov
push
outsl
enter
adc
push
inc
adc
lea
cmp
push
and
mov
scas
loop
ss
xchg
mov
pop
cmp
bound
test
adc
dec
pop
xchg
sbbb
cld
push
sub
jo
cwtl
push
inc
and
scas
imul
scas
jns
jge,pt
testb
lahf
repz
mov
in
sub
or
mov
pop
mov
add
outsl
das
or
in
pop
sub
outsl
inc
add
neg
movl
movl
movl
mov
add
movl
mov
add
movl
cmpl
movl
notl
jmp
movl
mov
jle
push
push
call
adcl
addl
subl
orl
mov
xor
movl
xor
movl
movzwl
adc
movl
adc
movl
cmpl
movl
mov
movl
jmp
mov
mov
je
push
pushl
pushl
pushl
call
sbbl
adcl
subl
andl
addl
movl
sub
movl
movl
addl
movl
movl
cmpl
mov
mov
mov
movl
jmp
mov
mov
ja
push
push
push
call
addl
subl
xorl
decl
and
or
mov
and
movl
movzwl
sbb
movl
or
movl
adcl
movl
movl
sub
movl
not
mov
shl
andl
mov
xorl
push
push
push
push
orl
call
cmpl
movzbl
movl
mov
movl
jmp
movl
jge
pushl
call
adc
orl
or
mov
mov
or
and
mov
mov
dec
xor
or
mov
mov
sub
cmpl
movzbl
mov
mov
jmp
movl
je
pushl
push
push
push
push
push
call
addl
sbb
or
or
not
mov
mov
sub
xor
sub
mov
lea
or
mov
mov
xorl
or
orl
and
mov
or
sbbl
xor
movl
cmp
jne
sub
mov
mov
orl
shrd
add
shr
mov
cmpl
mov
mov
jmp
notl
movl
jl
pushl
push
call
movzbl
sub
mov
mov
add
xor
add
mov
or
xor
or
adc
mov
dec
mov
adc
mov
addl
shl
xor
andl
xor
notl
or
mov
mov
cmp
movl
jne
mov
mov
xor
mov
xor
or
xor
xor
sub
or
mov
sbbl
mov
shrd
mov
xor
mov
andl
xor
shr
mov
xorl
xor
orl
or
shl
movl
sub
andl
mov
mov
mov
and
add
or
mov
sbb
mov
or
mov
shrd
shr
movzbl
sbb
mov
mov
mov
jmp
stc
dec
popa
test
mov
sbb
and
sbb
adc
sbb
idivl
or
bound
icebp
daa
fcomi
pop
sub
movsl
jecxz
out
gs
dec
popa
and
add
pusha
pop
int3
loope
jb
cwtl
fs
dec
mov
adc
rorb
and
xchg
outsb
or
dec
mov
test
fimuls
hlt
xchg
stos
fidivrs
xchg
aad
or
mov
mov
cltd
outsb
ret
adc
mov
sbb
and
js
scas
test
adc
push
arpl
or
jne
push
xchg
or
fdivrs
es
sbbl
jae
jl
cmp
sbb
xchg
pop
addr16
es
mov
mov
stos
scas
bound
inc
cmpsb
xlat
sub
inc
mov
fildl
pop
xchg
lret
push
fdivrp
pop
mov
in
xlat
xor
push
adc
in
inc
stos
xchg
adc
addr16
or
mov
adc
pusha
fildl
and
inc
lret
sahf
sub
jns
push
dec
xlat
outsb
mov
sbb
in
xchg
fcomi
adc
cmpsl
cld
mov
mov
adcb
fwait
mov
outsl
push
mov
cmc
fbld
or
xor
and
push
cmp
mov
arpl
mov
icebp
dec
fwait
inc
rcll
xchg
xrelease
cmp
dec
es
sub
adc
test
fadds
dec
das
jg
pop
adc
adc
cmp
and
pop
or
inc
dec
jmp
dec
ja
stos
repz
out
rorb
mov
sub
push
insb
int
and
xor
jecxz
pop
lock
insl
das
fstpt
jno
add
mov
mov
jae
repz
lahf
popf
lret
ret
divl
arpl
cmpsl
out
test
or
sbb
out
cltd
clc
and
sbb
hlt
mov
sbb
push
xchg
sbb
xor
ficoms
fucom
addr16
lahf
dec
rorb
lret
jp
jmp
and
loopne
inc
out
adc
rcl
pop
es
inc
aas
out
lds
sub
and
and
add
repz
aas
inc
pop
xlat
xchg
pop
xchg
int
sbbb
xor
stc
shr
mov
pop
mov
sub
xchg
xor
dec
mov
call
mov
roll
sub
mov
jno
jmp
imul
add
sub
popf
pcmpeqw
data16
cmp
dec
dec
fwait
ljmp
adc
add
jl
cs
add
fdiv
aad
pusha
cmc
sbb
xor
sub
shl
xor
mov
adc
or
add
mov
sub
mov
sbbl
shrd
xorl
shr
mov
sub
mov
addl
mov
xor
adcl
xor
or
shl
jmp
pop
sahf
pop
add
cmp
inc
inc
mov
sub
sbb
and
sbb
sub
movsb
mov
js
subl
adc
insb
out
scas
pop
rorb
xor
int
xchg
cmp
dec
jns
lods
nop
ja
jmp
mov
int
in
lods
es
iret
push
scas
mov
jle
adc
cmp
jmp
pop
mov
arpl
fldt
out
and
mov
ja
jb
mov
or
jle
mov
or
lods
adc
daa
pop
dec
push
inc
pusha
jle
aas
ss
lahf
lcall
ret
jbe
ljmpw
push
not
pop
out
jmp
mov
iret
sbb
add
mov
out
mov
xchg
xor
in
aad
xchg
cwtl
movsb
pushl
dec
cmpsb
mov
lcall
mov
out
jle
popa
inc
adc
xor
test
loope
psubq
imul
ret
je
xchg
es
fstps
in
or
addr16
stc
sti
outsl
mov
pop
dec
jne
ret
dec
mov
push
fimull
pop
test
fld
stos
mov
lahf
lock
and
jmp
or
fisubrl
cmpsb
and
sbb
lods
lods
out
mov
sbb
jp
jmp
xorl
in
outsl
lods
sbb
in
pop
pop
cmp
mov
cld
xchg
push
dec
insl
dec
pop
aam
jge
xchg
push
jge
adc
xor
arpl
cmp
push
add
rcll
jle
pop
bound
cld
lods
adc
ljmp
dec
adc
mov
mov
enter
pop
scas
xchg
fwait
roll
xor
jl
adc
in
lcall
filds
and
mov
cmp
lret
mov
cmp
or
cmc
in
pop
mov
pusha
xchg
sbb
hlt
bound
out
std
dec
xchg
add
fsubr
cmc
pop
pop
pusha
lahf
out
or
sbb
jo
cld
imul
jo
aam
xor
rolb
add
sub
ret
pop
add
cmp
fstl
sar
or
movsl
dec
bound
out
mov
push
inc
loope
add
push
and
jae
xchg
pop
mov
ret
jg
and
mov
fsubl
aam
push
push
xor
jmp
std
push
inc
data16
mov
call
hlt
sub
pushf
insl
add
and
push
lods
lea
pop
test
pop
ja
cmc
and
insb
stos
in
jae
cmp
push
mov
lock
les
call
xchg
sbb
insl
mov
in
sbb
jns
push
arpl
lret
call
jbe
sahf
push
arpl
iret
mov
sti
into
test
dec
es
lea
mov
mov
subl
shrd
subl
shr
cmpl
mov
movzwl
jmp
movl
jae
push
call
xor
not
movzbl
adc
xor
or
or
addl
adcl
mov
mov
mov
sbb
xor
sbbl
mov
xor
or
sbbl
shl
andl
imul
mov
orl
mov
shrd
mov
orl
mov
xor
shr
movzwl
sub
mov
mov
mov
adcl
xor
addl
or
shl
addl
sub
jmp
inc
ds
cmp
mov
jo
or
sbb
adc
sbb
jnp
xor
mov
movb
pop
pop
xlat
sbb
movsb
or
cltd
hlt
dec
pop
inc
sub
outsl
push
inc
and
inc
cmc
pop
sub
std
jp
add
icebp
les
out
adc
lcall
sub
add
insb
inc
dec
and
lods
sbb
xor
sbb
in
adc
movsb
sti
stc
jae
push
es
notl
cmc
adc
ror
sub
inc
out
jne
xchg
fmul
mov
pop
mov
lea
out
mov
mov
test
sbb
xchg
pushf
pop
cmpsl
ret
leave
jl
les
std
cli
loopne
push
sub
cld
mov
fcomps
dec
fisttps
loop
loop
mov
int
xchg
jge
repz
ret
fisubrs
loopne
pop
push
mov
sbb
xchg
fwait
mulb
fwait
add
mov
in
call
mov
mov
aaa
jmp
out
mov
mov
inc
test
jp
jo
mov
sbb
fimuls
mov
aam
pop
xor
adc
and
popf
pop
mov
enter
insb
mov
addr16
sbb
and
popa
ljmp
add
pop
push
out
adc
rcl
jbe
and
add
push
cmpb
aas
pop
xchg
dec
and
shlb
xchg
loop
jb
cmp
mov
fldenv
out
mov
push
repz
sbb
inc
push
mov
jmp
loope
cli
mov
mov
mov
mov
or
pop
pop
stc
jp
cmpl
adc
pushl
bnd
sub
icebp
inc
mov
stc
pusha
fbstp
rcrl
lret
mov
adc
ja
xchg
filds
sbb
cmovge
xchg
movsl
testl
sub
addl
add
arpl
xchg
test
xchg
fisttps
mov
sub
ds
mov
scas
es
push
adc
icebp
xor
test
notl
imul
fcomps
sub
push
es
iret
xchg
lods
movsl
mov
into
xlat
daa
or
mov
rcrb
sub
xchg
or
rcll
inc
mov
sub
jg
and
push
xchg
push
adc
xchg
mov
dec
gs
and
add
push
iret
inc
mov
cmp
mov
xchg
push
dec
jno
sub
cmp
pop
clc
push
xchg
ret
dec
cmpsb
roll
sub
fldenv
insl
fdivl
andb
xchg
orl
cltd
push
fdivs
xorb
jb
xor
imul
sub
xor
fcoml
insb
cli
push
xor
jmp
sub
jmp
mov
movl
cmp
movzbl
mov
jg
cmpl
mov
movl
mov
jmp
mov
movl
jae
push
push
pushl
push
push
pushl
call
and
and
sbb
negl
or
xor
xor
add
mov
inc
mov
subl
shrd
andl
mov
mov
xor
addl
shl
decl
xor
andl
or
shr
cmpl
notl
movl
jmp
movl
mov
jge
push
push
push
call
mov
mov
add
xor
xor
xor
not
and
adcl
mov
addl
mov
subl
mov
and
mov
shrd
jmp
dec
lods
adc
pop
movsl
cmp
stos
xor
repnz
add
sbb
adc
sbb
subl
loope
imul
lock
jg
sbb
loope
mov
pushf
out
and
mov
out
cli
outsl
sti
lods
push
cmc
or
sbb
and
dec
aad
test
mov
int
cmp
daa
adc
dec
jb
fistps
mov
jo
stos
mov
dec
outsb
inc
lods
or
repz
aas
push
rolb
inc
inc
lods
les
cmp
int
mov
imul
cmovo
push
sub
add
lret
cltd
fstl
ja
std
mov
and
push
xchg
mov
out
jg
test
and
out
fisttpl
fmull
jecxz
adc
push
cltd
test
int3
mov
dec
and
mov
dec
jle
ret
pop
outsl
fstpt
jb
push
mov
outsb
loopne
aad
cmp
loopne
xor
push
mov
push
mov
push
fidivrs
in
jnp
adc
mov
hlt
addl
or
xor
repnz
xor
jo
or
push
push
adc
lret
and
shl
sub
repz
mov
mov
sbb
stos
sub
sti
std
mov
rcrl
rcrb
fcomps
pop
pop
add
es
add
cmp
sbb
shrl
rorl
nop
jae
icebp
adc
mov
add
sub
xchg
stc
mov
push
push
std
int
std
jl
xchg
adc
int
adc
add
int
clc
mov
xor
scas
jbe
addl
sbb
xor
dec
push
outsb
and
sbb
or
decb
adc
sbb
push
jb
clc
in
in
filds
cli
scas
ret
nop
popf
sub
loope
mov
pop
jne
inc
jl
ja
mov
sbb
das
and
jmp
fdiv
in
addb
ficomps
inc
and
sarl
out
sbb
mov
int3
imul
pop
les
adc
testl
inc
xor
sub
rol
cmc
mov
xchg
add
clc
shll
push
jbe
push
sarl
stos
jno
add
cmp
in
adc
push
lea
cs
adc
stos
addr16
pop
lds
inc
mov
push
push
sti
or
orl
inc
cmp
mov
arpl
pop
xchg
out
xchg
in
or
pop
mov
mov
cmp
ja
mov
shrb
xor
push
smsw
cmpsb
mov
mov
xchg
jg
or
dec
adc
sub
ljmp
sub
add
sbb
add
add
ret
xor
sub
out
fnstsw
cmp
stos
inc
cld
sbb
and
sbb
push
sub
push
jge
lods
sbb
and
add
or
jmp
mov
and
xchg
inc
and
ficoml
rclb
inc
jle
lds
mulb
mov
call
pop
xor
shrb
lahf
sub
test
push
push
mov
push
out
inc
fcomp
ja
mov
insl
lahf
out
int3
in
scas
xor
cmpl
lods
sbb
push
scas
sbb
push
mov
sbb
pop
mov
pop
sbb
in
jle
mov
adc
pop
leave
out
call
test
fbstp
pop
clc
fcmovne
arpl
mov
dec
orl
inc
xchg
push
inc
mull
popa
divl
and
adc
push
insl
imul
sub
sahf
push
cwtl
and
loope
push
lds
jle
pop
cmp
negl
jb
ja
fs
orl
xchg
pop
inc
mov
xchg
sbb
lret
in
loope
sbb
push
and
scas
out
lahf
jp
cltd
fcmovu
lahf
test
shrl
aas
int3
imul
rorb
setle
mov
test
xor
mov
sar
gs
imul
dec
xchg
stc
push
mov
push
inc
repnz
movsb
and
ret
sub
sti
sub
cli
loop
fisubs
outsb
repnz
out
xor
data16
jns
test
cmp
xor
or
shl
inc
pushf
icebp
push
xchg
xchg
nop
dec
jnp
stos
mov
sub
mov
xchg
cmpsl
popf
gs
ss
mov
shl
xor
xchg
mov
adc
push
push
stc
sbb
movsb
add
fdivrs
out
dec
mov
dec
std
lcall
and
jbe
mov
cli
inc
jae
test
stos
jns
lea
pop
mulb
sbb
jnp
rorl
mov
mov
or
scas
mov
cmp
jns
adc
iret
jmp
jae
xchg
ds
rclb
pop
jge
dec
push
mov
push
cmp
fnstenv
ficompl
aaa
int
jnp
fwait
stos
jmp
mov
cmp
pop
push
jno
les
rclb
mov
shll
mov
jmp
push
enter
movsb
call
xor
adc
loope
jl
mov
ss
jecxz
jp
sarl
mov
sbbb
mov
in
mov
adc
lds
or
add
push
add
jge
sbbl
xor
adcl
or
shl
adcl
imul
sub
jmp
cmpl
movl
mov
mov
jmp
movl
jge
push
pushl
call
movzwl
and
adc
or
sub
xor
mov
mov
sbb
mov
cmpl
movl
movl
jmp
mov
jge
push
call
add
inc
xor
add
mov
adc
xor
cmpl
movl
mov
mov
jmp
movl
jle
push
pushl
push
push
call
mov
xor
andl
sbb
subl
mov
mov
and
mov
shrd
mov
mov
subl
xor
subl
shl
subl
xor
or
adcl
shr
mov
cmpl
movl
mov
mov
jmp
movl
jle
push
pushl
pushl
pushl
push
pushl
call
or
adc
or
inc
subl
mov
and
sbb
sub
mov
cmpl
movl
mov
mov
jmp
mov
jbe
pushl
pushl
pushl
push
pushl
call
adc
or
mov
xor
or
sub
xor
xor
or
mov
subl
mov
sbbl
shrd
shr
cmpl
movl
mov
mov
jmp
movl
movl
jb
push
pushl
call
xor
addl
inc
xor
neg
notl
cmpl
mov
mov
jmp
mov
jge
pushl
push
call
mov
add
mov
not
subl
mov
mov
xor
adcl
mov
sub
mov
addl
mov
cmpl
mov
movl
mov
jmp
movl
movl
jl
push
push
call
orl
sub
sub
movl
or
jmp
subl
cmp
leave
jl
rcrb
and
sbb
mov
adc
cmpsb
iret
pop
loope
in
mov
sub
lret
mov
dec
or
xorl
in
in
mov
rclb
sahf
daa
mov
push
aas
jg
sbb
std
sub
add
push
or
lahf
pusha
xchg
scas
push
jmp
in
cltd
push
and
xor
out
mov
cmp
adc
test
inc
mov
pop
push
call
out
cmp
jp
dec
mov
bound
xbegin
jbe
sub
xor
pop
jmp
sbb
and
jo
mov
mov
sahf
dec
push
iret
sub
loope
dec
int3
iret
popa
mov
adc
push
stos
pop
int3
dec
xchg
mov
fs
ret
push
int3
cmp
xor
enter
scas
jg
or
sub
mov
lret
add
in
add
mov
pop
lcall
imull
and
fsub
or
adc
inc
aaa
lcall
inc
enter
les
orb
cmpsb
cmp
push
xchg
jnp
dec
aas
fiadds
aas
insl
icebp
mov
sti
xor
mov
orb
mov
xchg
bound
push
loop
add
mov
and
push
call
add
pop
pop
mov
jg
or
cltd
mov
in
rcrl
adc
cli
mov
and
xchg
ja
adc
mov
mov
push
cmc
inc
fildl
and
jp
and
jbe
cmp
clc
test
mov
and
andl
mov
add
inc
or
sbb
mov
jae
stos
icebp
shlb
dec
lds
repnz
push
jl
lds
les
lock
mov
mov
outsb
inc
fdivl
cmp
pushw
js
daa
cwtl
and
cmpsl
jne
lcall
inc
mov
pop
sub
inc
push
mov
scas
push
and
jno
fwait
mov
frstor
add
mov
pop
cmpsb
stos
dec
subl
pusha
mov
pop
loopne
xor
xchg
cs
sbb
pop
test
cli
add
cmp
subb
mov
inc
mov
rolb
mov
arpl
out
or
cs
dec
in
in
mov
in
xchg
out
lods
and
cmp
fwait
loopne
fs
xor
push
dec
sub
or
mov
in
inc
mov
jmp
scas
push
repz
cmp
fisubrl
push
push
or
es
andl
movsb
test
call
pop
popa
ljmp
lret
pop
mov
lods
icebp
mov
mov
rolb
adc
xor
mov
mov
xor
adcl
xor
or
shl
add
add
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
movl
mov
mov
movl
mov
movl
mov
movl
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
lea
mov
mov
mov
shrd
shr
mov
mov
shl
mov
xor
xor
or
mov
mov
xor
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
lea
mov
mov
jmp
inc
mov
mov
and
loope
push
lock
and
sbb
stos
sub
mov
jns
scas
inc
mov
pop
clc
pop
je
jae
repnz
adc
jnp
in
or
pusha
add
cmp
xor
repz
stos
jmp
cmp
dec
outsl
aaa
mov
xor
das
fildl
xchg
mull
imul
ds
cs
or
push
push
jnp
andb
or
jae
add
ds
add
js
addb
addr16
shrl
mov
inc
jp
out
pop
rolb
icebp
mov
add
xor
push
loop
push
es
out
mov
mov
int3
inc
xor
adc
sub
lods
stc
and
push
xor
dec
es
cltd
adc
pop
sub
loop
inc
test
pusha
jge
out
inc
arpl
cmp
xchg
test
stos
xlat
mov
mov
mov
imull
out
add
add
dec
lods
push
pusha
lcall
dec
fs
ror
and
mov
pop
sbb
mov
pop
push
pop
xchg
inc
lahf
stos
sahf
gs
sub
data16
mov
xchg
cmp
shrl
jns
stos
or
js
sub
outsb
cmc
sarl
test
mov
sbb
pop
sbb
hlt
jmp
and
imul
imul
mov
in
xchg
lcall
in
fmulp
cs
xchg
sbb
pop
insb
xor
cmpsb
out
jne
xchg
mov
mov
jne
xor
fnstenv
clc
fistpl
in
sti
lcall
sub
push
inc
dec
pop
push
or
pop
test
xor
mov
popl
loope
hlt
mov
adc
adc
or
lea
movsb
popa
sub
add
bound
test
pop
scas
lods
shll
dec
mov
ret
push
mov
xchg
inc
loop
mov
inc
sbb
test
xchg
in
ljmp
lods
xchg
jp
mov
xor
dec
xchg
cmpsb
rorl
sahf
inc
adc
movsl
push
out
push
pop
xor
mov
fnstsw
mov
jns
pusha
addr16
jb
adc
pcmpeqb
xlat
jbe
fstpt
pop
cmpsb
jns
mov
xor
and
movsb
push
negb
fdivl
push
dec
dec
push
mov
imul
pop
loope
xchg
jecxz
adc
repnz
gs
cmpsl
in
int
xchg
fcoms
mov
mov
fsubl
mov
cmp
out
cwtl
in
mov
adc
ds
lret
popa
pushf
jmp
and
popf
add
ret
sub
mov
shrd
jmp
out
push
push
push
mov
ret
mov
pop
jmp
sbb
adc
sbb
mov
pop
sub
loope
cmp
ja
movsl
mov
xor
icebp
stc
inc
or
lods
pop
mov
ss
xor
pop
and
popa
xchg
mov
xor
adc
adc
fdivp
and
test
lret
sbb
into
cmp
adc
sub
sbb
testl
int
cld
cmp
cmp
xor
push
jmp
add
jge
or
xor
fldt
add
arpl
mov
pop
sub
adc
outsb
js
and
cltd
xchg
jae
jne
pop
jnp
and
mov
in
dec
fimull
xchg
stos
xchg
mov
add
mov
xor
dec
scas
add
clc
dec
fimull
sbb
xor
sbb
mov
xor
push
inc
mov
out
sub
mov
arpl
adc
mov
incb
lods
sbb
jbe
es
cmpsl
in
leave
inc
test
adc
and
es
mov
pop
aaa
arpl
push
xor
test
dec
cmp
cmp
jbe
or
mov
fwait
inc
sub
incb
int3
mov
sub
sub
lods
jae
enter
lret
jg
test
andl
push
cld
mov
ljmp
das
clc
xchg
icebp
fisubs
scas
xlat
push
xor
subl
lfs
inc
imul
mov
stos
stos
shrl
les
mov
or
dec
push
dec
cli
in
cld
add
xor
mulb
cmpsl
faddl
cli
sbb
pop
loop
loope
xchg
or
sub
sub
inc
mov
xor
jl
mov
cwtl
sbb
inc
jae
cmc
shll
negb
mov
or
pop
mov
and
fs
or
jae
mov
jno
sub
mov
jle
aad
hlt
sub
inc
jbe
andl
jns
mov
jmp
push
aad
or
int3
sbb
pop
jno
leave
cltd
dec
mov
testb
ret
mov
mov
in
roll
sbb
int
stos
adc
xlat
addr16
jp
les
lahf
pop
ret
aam
jle
call
and
mov
mov
popa
jno
int
call
cmp
sbb
mov
daa
mov
mov
or
loope
push
cltd
pop
orl
adc
jnp
mov
fistl
mov
adc
sbb
dec
add
ret
mov
fisttpl
mov
jmp
mov
shl
mov
xor
xor
or
mov
mov
or
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
lea
mov
mov
mov
shrd
shr
mov
mov
xor
shl
mov
xor
jmp
loopne
cwtl
xchg
mov
pop
add
outsl
mov
cwtl
pop
jo
in
sbb
adc
sbb
mov
lock
mov
sti
hlt
or
and
and
sahf
inc
addl
adc
daa
mov
pop
mov
adc
and
push
fcmovu
fs
dec
jnp
cs
cli
jg
mov
dec
pxor
mov
dec
int3
test
jp
pop
push
sbb
xchg
cmp
addl
push
insl
decl
popf
cmp
imulb
sbb
and
xchg
or
xor
add
outsb
loopne
gs
in
movsl
fwait
sar
pop
or
push
sbb
dec
mov
pop
jmp
repz
daa
leave
movsb
adc
push
or
sbb
mov
bound
lcall
outsb
jle
mov
jno
jne
adc
or
loop
rcrb
adc
xchg
mov
aam
dec
addr16
xchg
mov
or
cmp
stos
adc
pusha
cmpsl
mov
fxch
jo
inc
sti
fldcw
stos
sbb
push
dec
into
mov
icebp
out
push
lds
test
repnz
scas
int3
push
cmp
aas
fdivr
in
clc
orps
sub
aad
push
mov
std
daa
neg
mov
aas
outsb
into
iret
xor
jl
lods
data16
jl
pusha
xchg
jb
stc
sti
outsl
mov
outsb
cltd
outsl
dec
pop
je
push
movsb
stos
cmp
fsubl
sbb
adc
gs
sbb
shlb
cmpsl
fildl
popl
cli
aas
push
in
adc
outsb
pop
sub
dec
lods
push
fildl
movsl
mov
cs
cmp
or
pop
xor
mov
or
mov
mov
inc
aaa
cmp
popf
iret
sbb
fsubrs
cmc
jmp
in
sbb
mov
ds
fscale
add
test
stos
cld
or
stos
sbb
sbb
add
mov
cmpsb
mov
stc
and
shlb
or
or
dec
xor
repz
movsl
dec
test
sub
jge
fucomp
cltd
aaa
adc
adc
inc
mov
aas
jbe
push
arpl
adc
repz
nop
sbb
push
push
ret
mov
xor
cmp
dec
cmp
je
xchg
sbb
pop
mov
movsb
jns
adc
rorl
cmp
aas
jp
adc
xchg
xor
bound
xchg
in
scas
jne
and
ss
xchg
inc
dec
jbe
mov
mov
pop
xchg
adc
mov
cmpsb
cmpl
cmp
sti
or
pop
sub
je
and
mov
cmp
test
dec
popf
es
inc
leave
test
or
mov
mov
jmp
nop
dec
nop
add
lock
pop
mov
sbb
and
sbb
mov
insl
cld
sub
in
dec
jle
xchg
and
jmp
pop
mov
sti
test
mov
lret
mov
in
cli
mov
fistl
rolb
loope
test
sub
int3
push
cmp
pop
int3
or
shll
cli
adc
data16
cld
xor
cmc
inc
sbb
ret
and
out
jnp
mov
xchg
ljmp
jmp
subb
inc
xchg
jmp
sahf
xchg
dec
xor
pop
mov
into
inc
into
fisubl
aad
jb
jp
dec
lret
lahf
cld
das
jmp
sub
dec
fwait
adc
sub
xchg
shlb
fsubs
mov
lahf
or
fucompp
repnz
fstps
add
and
pusha
movsl
pusha
fisttps
push
lret
adc
cmp
inc
push
dec
ret
dec
and
cltd
iret
cmpsb
rcrl
test
dec
xor
movsb
cltd
pop
pushf
cmp
je
mov
sbb
movsb
rol
mov
fwait
mov
stos
in
scas
sub
pop
stos
iret
fs
jbe
roll
sbb
int
sbb
and
xchg
and
fs
cmovns
faddl
dec
and
in
pop
xor
jge
adc
mov
mov
and
jle
pop
lahf
sub
mov
scas
addr16
xchg
xchg
insb
pop
std
jo
add
lret
stc
xchg
loop
sbb
add
mov
sahf
mov
or
lcall
cmc
shll
sbb
sub
cld
add
push
popf
dec
std
cmp
push
pop
cmpsb
ja
ljmp
mov
and
jle
jns
add
pop
xor
lds
inc
cli
sub
mov
nop
aaa
fprem
jp
ss
pop
adc
insl
imul
push
xor
cs
xchg
sbb
dec
add
je
mov
outsb
sbb
xchg
sbbl
lahf
push
sub
mov
loopne
stc
lret
sbb
shll
adc
cmc
xchg
dec
scas
mov
push
mov
nop
out
nop
cmp
incb
mov
shlb
insl
loop
mov
mov
fdivs
xchg
into
sbb
mov
fcomps
push
jmp
push
lcall
and
imul
xchg
hlt
lock
out
pop
cmp
out
ljmp
jl
addb
subl
adcb
jns
fld
lcall
lahf
and
dec
std
in
cmp
in
insl
push
lea
mov
mov
incb
add
arpl
icebp
jbe
stos
xor
mov
lods
jmp
inc
sbb
push
xchg
pop
add
mov
mov
shrd
shr
mov
mov
xor
xor
jmp
and
xor
ficomps
mov
jo
sbb
and
sbb
int3
inc
fistpll
xchg
adc
adc
mov
dec
inc
fwait
and
into
push
xlat
das
mov
and
add
cmp
out
jl
sahf
fldt
adc
pop
jge
mov
inc
mov
shrl
outsb
test
jbe
jae
stos
lods
inc
cmpsb
push
jmp
ds
jns
les
xlat
jnp
arpl
pusha
enter
mov
cmp
cmpsl
add
imul
and
lcall
adc
mov
test
leave
xchg
into
cmp
mov
inc
and
sbb
lret
fdivrl
mov
xchg
mov
pop
fld
popa
mov
dec
and
bnd
cmpl
movsb
movsl
dec
sbbl
frstor
mov
out
test
sbb
lods
inc
pusha
enter
and
xor
nop
or
mov
outsb
test
dec
out
js
les
mov
mov
mov
cmpsl
jg
nop
outsl
fwait
bswap
stos
mov
and
cmpsl
add
dec
mov
jae,pn
push
sub
mov
lcall
jno
popf
mov
adc
ljmp
xchg
or
es
or
xchg
jns
push
sti
and
sbb
or
inc
ljmp
pop
sbb
fsubrp
sbb
out
xchg
bound
xchg
dec
jl
fbstp
cmp
sub
jae
sub
dec
add
daa
rclb
mov
pop
mov
mov
xchg
or
outsl
add
xbegin
push
xor
or
mov
in
xchg
xor
mov
pop
xlat
jmp
cmp
fnsave
pushw
dec
int
pop
mov
scas
pop
out
jmp
and
jo
sub
pop
mov
in
outsb
pop
pop
mov
orb
fisubl
jp
es
xor
mov
jmp
and
pop
push
cmp
xchg
stc
testl
adc
pop
pop
ret
lock
mov
xor
jbe
in
sbb
jo
lods
nop
xor
mov
or
adc
cld
add
adc
cmp
ss
and
mov
xor
xor
lods
pop
pop
add
sbb
out
pop
lret
pop
cmp
push
aaa
pop
pop
mov
jle
out
sahf
and
xor
pop
jo
insl
add
add
jle
push
and
data16
jnp
nop
aam
lahf
sub
ds
iret
ja
push
lahf
lret
mov
ss
add
or
lea
sbb
inc
or
lea
mov
mov
shl
mov
shrd
shr
mov
mov
xor
xor
or
mov
shl
mov
mov
mov
or
mov
mov
shrd
shl
shr
mov
mov
xor
mov
xor
or
mov
dec
not
and
xor
mov
mov
xor
or
mov
mov
shrd
jmp
fdiv
sub
mov
or
rcrl
sbb
adc
sbb
add
enter
jecxz
mov
cmovb
addb
inc
dec
cmpb
fadd
scas
inc
dec
enter
mov
sbb
xchg
sar
xchg
mov
push
and
leave
mov
inc
out
ret
sbb
clc
cld
bound
andnps
scas
push
pop
int3
sbb
or
fstpl
hlt
jno
ret
push
enter
andl
mov
sub
lods
cmp
inc
mov
int3
add
int
lods
std
cmpsl
xchg
jo
sub
dec
xchg
dec
mov
int3
sub
inc
cmp
cmpsb
lea
and
orb
std
or
cwtl
push
shrb
test
cmpsl
or
jns
sbb
mov
lret
push
lds
sar
lret
test
rorl
adc
mov
sbb
imul
pop
inc
pop
addb
sub
and
pop
scas
pop
mov
shlb
jl
or
inc
dec
cwtl
mov
repz
lea
dec
imul
sub
inc
das
add
incl
daa
add
jmp
icebp
lds
rolb
mov
or
mov
in
push
mov
addr16
jmp
and
adc
js
and
pop
inc
mov
add
daa
xchg
xor
sub
cmp
dec
inc
dec
inc
popf
popl
xcrypt-ctr
cmpsl
fiadds
mov
or
insl
push
cmp
fcmove
or
movsb
enter
cmc
push
stos
cmp
movsl
push
adc
adc
jne
fldl
inc
push
mov
sar
pop
in
xor
imul
jae
jecxz
stos
xchg
ret
mov
test
loopne
movsb
stos
addr16
fimuls
xchg
movl
mov
scas
or
cmp
mov
test
mov
lods
ds
mov
dec
mov
out
xchg
sarl
fsubp
sub
dec
orl
dec
sarb
cwtl
inc
jecxz
push
mov
mov
jg
dec
test
mov
cs
fistpl
add
pushf
stos
mov
mov
xchg
cli
mov
and
xor
xchg
mull
mov
lock
in
sbb
cmpsb
cmc
mov
add
shll
sarb
cli
push
out
stos
int3
andl
mov
mov
jno
jl
test
mov
sub
cmp
mov
mov
sbb
add
pop
xor
out
mov
mov
or
stos
xor
or
or
aas
dec
shr
mov
mov
mov
xor
mov
xor
shl
mov
or
jmp
out
mov
stos
mov
mov
int
sbb
adc
sbb
cld
fbstp
mov
nop
insb
repnz
sub
or
adc
addl
int3
imul
lods
mov
dec
inc
push
and
mov
test
imul
inc
aam
push
movsb
push
ucomiss
push
popf
cli
jo
jbe
push
mov
mov
fiadds
or
int
adc
rclb
ss
ljmp
cmp
push
push
inc
push
lahf
in
repnz
mov
jbe
jp
subb
adc
push
daa
inc
mov
pushf
mov
int3
insl
inc
push
jmp
push
mov
jns
movsl
lods
std
imul
ret
fisttps
jg
xlat
or
imul
xor
jo
sbb
sti
leave
cmpsb
js
push
inc
or
lcall
mov
cld
pop
lds
and
push
mov
add
or
ds
xchg
adc
dec
cmp
xchg
es
mov
outsb
int
ljmp
xchg
add
lea
fsubrl
push
outsb
pop
mov
and
xchg
mov
xchg
cwtl
and
mov
push
cli
or
inc
and
and
sbb
loope
mov
sbb
idiv
mov
jns
push
imul
mov
test
pop
add
and
and
jne
jecxz
xchg
dec
popa
shl
sub
cs
cwtl
ficoms
or
and
xchg
add
adc
inc
xchg
aad
add
xor
rol
aaa
insb
push
adc
cld
sub
arpl
pop
jnp
je
pop
addr16
pop
adc
arpl
jl
inc
mov
mov
push
xchg
mov
ljmp
push
dec
je
fistpl
mov
adc
cmp
jp
inc
push
pop
ret
icebp
cmp
ds
sbb
and
add
scas
imul
mov
or
es
jns
in
rclb
adc
mov
adc
ja
cmp
push
xor
adc
adc
add
aaa
cmp
and
add
and
rcrb
jmp
jae
lock
cmp
cwtl
xchg
daa
dec
scas
jp
scas
sbb
push
jne
jle
jno
rclb
test
pop
dec
cld
dec
adc
inc
les
sti
mov
xchg
lds
push
pop
movsb
xchg
push
scas
out
inc
mov
push
mov
or
outsb
cs
imul
lock
inc
pop
jae
lret
mov
cs
mov
cmp
je
mov
sub
mov
mov
jmp
dec
lret
repz
cmp
fildl
int
mov
sbb
and
sbb
dec
lret
cmpsb
jo
orb
jl
rcll
loopne
inc
sbb
pop
js
popf
fidivl
cmpsl
inc
cltd
or
xor
movsl
mov
mov
xchg
test
and
ja
shll
cmp
inc
divb
rcr
cmpsl
pop
out
lock
push
lahf
mov
adc
cmpsb
sub
repz
and
xor
cmp
fs
sbb
ss
and
mov
mov
pop
jne
jp
sub
push
dec
jbe
pop
inc
dec
and
bound
movsb
repz
or
into
mov
mov
pushf
mov
ffreep
test
cwtl
xchg
bound
lcall
inc
pop
cmc
pop
push
dec
or
pop
mov
inc
push
push
xor
xchg
bound
lcall
xor
dec
stos
movb
scas
test
or
sub
cmp
lcall
popf
pop
jbe
adc
daa
push
shlb
add
js
aaa
ror
cs
sub
cltd
scas
clc
mov
pop
and
enter
in
ret
sbb
xor
inc
mov
mov
mov
sahf
popf
addr16
jb
repz
cld
xchg
dec
pop
ret
scas
call
jle
pop
mov
mulb
int
lcall
in
int3
pop
push
outsl
repz
jne
dec
add
cmc
ret
inc
push
ljmp
sub
push
dec
pop
push
dec
fildl
mov
shrl
jge
leave
xchg
inc
sarl
jae
hlt
popf
jnp
cmc
push
outsl
pop
out
not
sub
xchg
inc
cmpl
xchg
dec
lret
repz
cmp
rcrl
inc
mov
out
xor
iret
call
mov
and
mov
movsl
ffreep
mov
add
push
or
lret
icebp
lret
push
jno
leave
nopl
nop
fs
call
es
enter
cli
jnp
adcb
or
scas
or
xor
pop
mov
je
arpl
sbb
cs
dec
cmc
jnp
das
jge
adc
lahf
pushf
and
push
insb
sti
cmp
xor
test
dec
nop
push
xchg
pop
ds
cmp
mov
lahf
fisubrl
dec
push
pop
jl
xchg
mov
lret
insb
adc
enter
cld
and
cmp
in
cmpl
mov
sbb
pop
rorb
xchg
imul
fimuls
mov
imul
sbb
aad
cmp
xchg
shl
cld
popa
inc
lea
out
cmp
jecxz
pop
mov
and
incb
xchg
inc
mov
sbb
push
pop
jo
enter
fistpll
cmpsl
int3
xor
xor
shrd
shr
mov
mov
mov
mov
xor
or
mov
mov
mov
xor
xor
mov
mov
mov
shrd
shl
xor
or
mov
mov
mov
shll
xorl
mov
mov
mov
xor
or
shr
or
cmp
jne
cmp
je
jmp
mov
mov
xor
xor
shrd
shr
mov
mov
mov
mov
xor
or
jmp
iret
xchg
ret
or
cmp
jo
dec
scas
mov
rcrl
and
sbb
push
jbe
out
inc
fldl
sbb
pop
adc
xor
inc
cmc
cld
or
mov
xchg
lods
jl
lods
mov
cmp
mov
sub
loopne
imul
outsb
jg
test
nop
sbb
dec
and
push
jecxz
loop
xor
xor
bound
les
push
pop
cltd
das
scas
ljmp
pusha
xor
xorb
daa
cmp
iret
cltd
push
xor
dec
inc
popl
mov
pop
lcall
push
pop
out
cmp
je
sahf
arpl
xchg
mov
sti
jbe
cmpsl
xor
inc
mov
aad
adc
inc
adc
lock
push
mov
seta
sarb
push
lret
sahf
mov
sbbl
mov
and
jg
out
dec
loop
push
add
pop
addr16
imul
inc
out
jecxz
xchg
jne
xor
aas
faddl
add
icebp
inc
sbb
leave
cmpsl
cmp
or
dec
push
test
push
fsubl
mov
pop
xchg
pop
and
clc
cli
int3
adc
cli
xchg
mov
pushf
stc
or
push
hlt
fisubrs
fisubrl
mov
test
xchg
mov
movsb
adcb
test
adc
in
vmovlpd
and
into
dec
mov
push
clc
pushl
or
push
pusha
xlat
xor
mov
push
mov
mov
inc
xor
adc
sub
inc
fsub
mov
ss
out
jmp
ret
aaa
mov
adc
jns
mov
andb
cmp
inc
or
push
cmp
daa
inc
cmp
pushl
int
stc
aad
push
bound
fistpll
sub
pop
push
adc
pop
out
xchg
sti
push
in
pop
cmpsl
movsb
lret
jg
or
insl
add
pushf
movsb
pop
push
addr16
push
fwait
dec
pop
insb
or
mov
ss
enter
int
leave
loop
and
mov
adc
sub
push
mov
sub
cmp
sub
pop
and
mov
test
sub
jae
pop
mov
jo
add
jp
sub
out
outsb
sub
inc
or
jo
inc
jecxz
ret
outsb
ja
mull
jo
ljmp
xchg
ss
push
rorb
cmc
mov
mov
cld
xor
jne
repz
cs
mov
hlt
or
add
jecxz
dec
dec
js
imul
shl
xor
or
mov
mov
xor
jmp
fstps
cmp
and
pop
xchg
rcrb
push
mov
sbb
decb
cwtl
inc
jl
pop
cmp
xor
scas
mov
repnz
adc
pop
rorl
adc
push
or
notb
data16
sub
out
jnp
sbb
ds
adc
sbb
scas
dec
push
cmp
hlt
add
fnstcw
add
push
inc
pop
inc
add
jle
mov
dec
mov
mov
cmp
push
mov
insl
cwtl
adc
cwtl
xor
mov
das
ret
fistpl
cmp
insb
cmp
mov
ljmp
lcall
ds
mov
das
adcl
jne
mov
inc
or
jecxz
adc
push
cltd
mov
inc
out
mov
lahf
call
sahf
popf
add
fwait
xchg
movsb
push
test
addb
and
mov
pusha
sti
mov
mov
enter
jnp
movsb
adc
or
jecxz
mov
mov
lret
xor
mov
ss
mov
or
stc
jne
icebp
outsb
cmc
inc
jo
dec
repz
gs
or
dec
aas
je
mov
bound
cmp
out
xor
jns
scas
sub
in
pop
popa
in
cmp
jb
jne
out
jp
dec
je
clc
jmp
dec
into
cwtl
dec
xor
or
push
or
or
addl
pushf
inc
xor
pusha
jle
sub
test
jge
dec
xchg
pop
popa
sahf
mov
adc
push
inc
pusha
addr16
xor
mov
frstor
es
or
aaa
xchg
jnp
ficompl
icebp
rorl
andl
cwtl
fs
rcrl
cs
loop
mov
add
sub
hlt
adc
add
mov
xor
bound
push
stos
mov
cmpsb
and
inc
sbb
mov
sub
cmpsl
fwait
movsl
imull
lahf
cltd
in
fbstp
sti
cli
jnp
xchg
xchg
xchg
adc
sbb
mov
sbb
xchg
cmp
pusha
xor
ffree
lds
and
inc
and
ss
dec
lds
cmp
pop
add
push
ljmp
xor
push
fcmovbe
ss
in
daa
loopne
dec
popf
mov
mov
and
xchg
mov
ljmp
sbb
jg
cmpsb
mov
xor
into
jle
or
loopne
mov
out
xchg
cmp
push
push
test
dec
int3
jae
test
jb,pn
daa
call
fsub
dec
or
adcb
mov
stc
fnstcw
xchg
cwtl
imul
dec
addr16
or
andb
xchg
cmp
mov
jp
ds
jnp
dec
mov
mov
mov
mov
xor
mov
mov
shrd
shr
mov
mov
mov
shll
xorl
xor
mov
or
mov
mov
mov
or
mov
mov
cmp
jne
mov
cmp
je
mov
mov
mov
mov
lea
mov
mov
mov
mov
mov
shrd
mov
mov
xor
jmp
daa
into
dec
cli
sbb
sub
xchg
jne
mov
adc
sbb
mov
ret
push
scas
es
cmpsb
repnz
sbb
js
andb
and
mov
cmpsb
in
jne
insb
mov
je
enter
jmp
jg
aad
sbb
movsb
mov
mov
cmp
daa
jae
adc
jge
nop
push
mov
dec
sub
sub
xchg
shrl
andl
push
pop
enter
je
outsl
ret
add
adc
data16
fadds
and
mov
mov
xchg
icebp
mov
jae
orb
mov
xor
mov
cmpb
je
decb
pusha
mov
jbe
sti
ss
lret
ficoms
jecxz
imul
pop
add
dec
pushf
and
shlb
adc
inc
aad
pop
pusha
and
pop
bound
shrb
add
cmp
sub
hlt
test
mov
fstl
addl
out
movsb
loop
jl
imul
fldl
xchg
dec
sbb
fwait
pop
bound
aas
test
xor
and
mov
mov
add
dec
push
fcompl
call
ret
jge
insb
xor
out
cmc
pushf
mov
sub
stos
gs
xchg
subb
xor
mov
cmpsb
test
xchg
jae
xor
arpl
lods
add
xor
ja
imul
jae
xchg
sbb
adc
dec
mov
and
movsl
xchg
add
xor
ljmp
mov
xor
repnz
dec
cmp
loopne
push
into
mov
xchg
fisubrl
js
and
adc
mov
adc
mov
out
lahf
pop
scas
aad
js
ret
test
or
adc
stos
push
roll
sbb
sub
mov
xchg
sbb
push
jno
ja
je
or
subb
imul
mov
outsl
ja
sti
arpl
in
fs
loopne
repz
mov
xchg
jge
mov
lds
in
adc
insb
imul
xchg
in
mov
inc
daa
sub
negl
push
add
aad
icebp
push
dec
imul
mov
cmp
cmp
cmp
ja
test
sbb
add
cmp
xor
adc
xor
mov
aad
and
and
jnp
xor
mov
mov
lret
sbb
cli
push
loopne
xchg
push
mov
popf
lds
scas
jecxz
out
jbe
ret
pop
je
xor
xor
push
fisttpll
pop
stc
mov
adc
dec
jbe
push
test
mov
xor
and
pop
pop
push
pop
shr
jmp
inc
inc
lret
dec
lret
inc
dec
and
mov
test
sbb
and
sbb
xlat
inc
int
mov
add
rdmsr
adc
mov
imul
sub
aas
dec
aas
or
xchg
push
or
imul
or
ret
mov
push
xchg
pop
push
movsb
test
push
pop
cmp
xor
lock
cli
jo
and
inc
adc
cmpsb
pop
sbb
add
cmc
addl
xor
decb
test
push
jnp
outsl
and
inc
dec
add
mov
or
or
in
lods
in
bnd
icebp
adcb
cmpb
sti
jbe
push
adc
jne
cmp
out
pop
mov
add
mov
aas
in
mov
add
cmp
mov
into
adc
mov
andb
push
cld
enter
int3
push
push
fidivrl
push
test
das
pushf
fcomps
xchg
fnstsw
jg
fcmovu
cltd
in
cltd
insb
and
push
mov
mov
bound
mov
fists
dec
inc
add
sti
pop
inc
xor
and
cmp
mov
cmp
jnp
stc
loope
add
ja
aam
sub
psubb
or
pop
sbb
pushf
push
cmc
dec
or
add
popa
dec
mov
push
loope
fdivrs
lret
cmp
push
out
pop
rol
cmp
add
push
sub
and
or
rclb
add
push
or
sub
pop
xor
or
push
jnp
ds
dec
add
lods
repnz
pop
lods
mov
xchg
jae
fsts
or
ret
bound
cwtl
jae
dec
mov
lcall
outsl
dec
xor
push
jne
call
sahf
push
xor
mov
push
push
add
bswap
cmp
cli
inc
repnz
push
mov
xchg
aas
mov
fimuls
pop
add
repz
sbb
stos
xchg
sbb
sub
aad
andl
sub
pop
rsqrtps
mov
sbb
pop
adc
dec
mov
inc
xchg
movsb
test
arpl
les
dec
inc
or
lods
out
mov
cmc
mov
mov
outsl
mov
stos
mov
push
fwait
add
in
in
mov
jne
loopne
sbb
sahf
mov
mov
cmpb
clc
jecxz
data16
inc
adc
cld
addr16
sbb
outsl
pop
xor
aad
add
bound
or
mov
add
xchg
adc
loop
repz
test
movsb
push
shrb
fcoml
mov
xor
shl
or
mov
mov
mov
xor
shld
xor
mov
mov
shl
mov
mov
xor
mov
cmp
jne
mov
jmp
mov
int3
xchg
sbb
dec
fstpt
adc
push
test
sbb
sahf
repz
js
dec
out
fwait
sbb
shrl
cmp
fldlg2
mov
jns
jecxz
or
jae
add
data16
jne
dec
lock
dec
out
push
and
out
and
xor
pop
mov
mov
in
jg
ja
fcmove
out
cmp
imul
lcall
add
jecxz
jl
mov
lret
int3
jo
mov
sub
dec
insb
lret
mov
xor
add
cmpsl
mov
insb
insl
nop
std
loop
mov
mov
inc
mov
pop
fisttpl
stos
xchg
xor
insl
mov
mov
ret
mov
sbb
sbb
out
pop
xchg
xorb
fcmovnb
out
pop
jno
test
sbb
fwait
jno
push
cmc
mov
testl
xchg
and
ret
pop
pop
cmp
cli
aam
mov
inc
or
mov
test
dec
cmpsb
pushf
jae
cs
testb
xchg
lahf
jmp
xor
repnz
sbb
mov
call
fisttpl
xor
push
sbb
es
pop
xlat
call
bound
stc
xchg
xchg
push
icebp
push
adc
mov
xor
xor
js
push
subb
stos
push
dec
mov
and
lcall
pop
out
scas
xor
test
push
pop
dec
jecxz
jecxz
jnp
dec
ret
mov
in
mov
sbb
lcall
push
mov
mov
or
ss
mov
fildl
add
lock
push
mov
adc
aas
arpl
adc
cmp
pop
arpl
in
jecxz
push
test
mov
fdivrp
dec
mov
shlb
xor
dec
sbb
into
fsub
out
sub
xchg
insl
sub
fiaddl
add
scas
lea
cld
movsb
sub
add
mov
arpl
pop
push
cmc
pop
in
mov
sarl
ljmp
imul
or
test
scas
push
mov
outsb
sbb
mov
sub
outsb
mov
and
ret
js
in
loopne
mov
push
jnp
ja
dec
sub
clc
add
mov
cld
out
and
bound
sbb
cltd
mov
scas
fcmovu
pusha
sti
jmp
in
leave
cmpb
fwait
xchg
or
add
repz
movsl
pop
sbb
dec
xchg
mov
mov
outsb
dec
aam
xor
sub
jnp
or
outsl
pop
lea
push
bound
mov
aas
into
add
push
gs
dec
jl
mov
or
stos
push
daa
les
push
add
out
js
insl
mov
cmp
xchg
js
ror
sbb
jns
out
inc
or
test
push
mov
mov
mov
xor
xor
mov
mov
shrd
shr
mov
mov
mov
mov
xor
or
mov
shl
xor
mov
mov
or
mov
push
pushl
push
push
call
mov
mov
shrd
shr
shr
xor
push
xor
mov
mov
mov
push
push
push
call
shld
mov
xor
or
mov
mov
shl
jmp
subl
pop
rclb
xchg
mov
and
sbb
push
shlb
mov
gs
and
rolb
lcall
lock
add
pop
mov
jmp
es
jne
lods
mov
fstp
vrcpss
xor
push
sbbl
pop
jnp
fmulp
popa
add
add
jbe,pt
xorb
inc
in
stos
rcrb
add
adc
dec
cld
push
xchg
loop
mov
popf
and
js
add
cmp
enter
mov
jb
add
lods
dec
sti
outsl
shrb
or
xchg
adc
jge
popl
mov
out
lret
mov
cwtl
aad
neg
sub
sub
lods
out
aas
xor
mov
das
in
sahf
inc
jae
add
std
sub
push
cmp
adc
clc
cli
cmp
mov
xlat
push
push
adc
in
xchg
jbe
and
in
inc
xor
push
popf
xor
out
es
mov
cmp
fwait
sahf
mov
sub
xchg
push
push
push
add
bound
pushf
in
movsl
pushf
js
adc
xchg
mov
icebp
into
jle
mov
add
push
sub
adc
jnp
cli
mov
flds
mov
sbb
ja
add
mov
mov
pop
movsb
sub
and
push
pop
je
shr
loope
pop
cmp
sahf
lcall
js
lds
test
shl
cs
scas
lock
ret
push
adc
inc
out
aad
lock
pusha
jl
jmp
lds
mov
lock
sarw
pop
shlb
cmp
or
jecxz
xchg
jbe
ss
xchg
inc
mov
sbbl
and
inc
cli
cmp
movsl
inc
shlb
popa
mov
dec
xor
fsubp
jmp
mov
movsl
push
or
pusha
pop
subb
xor
imul
inc
lret
test
sub
inc
push
leave
ja
dec
push
xchg
pushf
cmp
jno
loopne
push
loop
inc
jae
das
mov
insb
imul
dec
xchg
cmp
sub
cltd
mov
fwait
add
mov
mov
fisttpl
push
scas
add
insl
pusha
outsb
xorl
cmpsl
orl
out
insb
cmpsl
insb
dec
aaa
lds
shll
jge
xor
or
das
cmp
lahf
push
dec
push
inc
sub
and
imul
mov
js
sbbl
ljmp
stc
mov
xor
fsubr
cmpsl
mov
mov
mov
testl
xchg
mov
xor
xor
xor
xor
mov
mov
jmp
mov
add
mov
mov
mov
mov
mov
mov
movzwl
cltd
shld
xor
mov
mov
shl
mov
mov
xor
mov
cmp
jmp
lock
or
dec
loopne
pop
ret
cld
rcr
rcrb
sbb
mov
and
mov
loope
lea
mov
into
rolb
std
int
jp
fdiv
repnz
movsb
mov
sub
mov
dec
jnp
xor
sbb
jne
lret
out
mov
mov
dec
fstl
movl
pop
sub
lcall
inc
mov
xor
fs
add
pop
popl
ljmp
out
arpl
jmp
rcl
jl
stc
jns
or
mov
inc
adc
cmp
push
pop
ds
sub
mov
aam
mov
popa
mov
sahf
ljmp
iret
sub
mov
push
fidivl
mov
jo
sub
aaa
dec
scas
mov
in
adc
mov
mov
imul
mov
stos
ja
cli
add
pop
cmc
iret
add
fidivl
or
jp
test
add
mov
cmp
mov
cs
scas
push
fnsave
push
push
mov
sub
test
pop
loop
jnp
adc
popf
lret
jmp
sbb
jle
out
int
xchg
bndstx
inc
cld
int3
jno
push
mov
pop
mov
sbb
icebp
mov
and
stc
pop
and
lret
pop
mov
xchg
sbb
les
lods
inc
cld
call
pop
fs
rcl
pusha
stos
into
mov
inc
fsubrp
mov
loope
jecxz
sbb
or
inc
or
pop
lea
rolb
adc
fstpl
sbb
popa
add
ss
dec
iret
mov
or
lahf
cmp
sbb
xor
repz
inc
cmc
xchg
cltd
leave
rclb
sbb
sbb
adc
or
mov
xchg
out
in
imul
imul
and
or
fists
adc
fs
adc
sti
or
add
lods
adc
sbb
std
cmp
add
cli
adc
nop
leave
aaa
cmpsl
std
and
inc
push
adc
mov
jecxz
pop
test
leave
ss
mov
popl
adc
jl
cmp
xchg
shlb
push
pop
push
bnd
mov
sub
and
cmc
pop
sbb
fbstp
lea
sub
xchg
cmpsl
mov
lret
jbe
popf
dec
roll
xlat
clc
movl
sbb
pop
dec
in
xchg
mov
cltd
repz
popa
in
mov
sub
and
push
fisttpll
jg
loop
imul
xchg
gs
mov
lock
test
cmp
jne
movl
mov
movl
mov
movl
mov
movl
mov
mov
mov
shrd
shr
mov
jmp
fdivr
fists
ss
shlb
mov
and
sbb
out
or
dec
add
pushf
popa
xor
or
cmp
mov
insb
in
out
mov
dec
inc
jp
mov
or
sbb
pop
gs
mov
mov
xchg
cmp
nop
adc
aad
jl
xlat
rep
ljmp
pop
push
icebp
push
test
movsl
inc
data16
xchg
scas
and
pusha
mov
xchg
and
pop
jb
imul
fwait
jge,pt
cwtl
sti
cmpsb
push
pop
or
adc
pop
leave
and
mov
insl
lds
add
lds
xchg
dec
jge
sbb
pop
dec
inc
mov
leave
mov
mov
pop
fldcw
push
iret
sub
xchg
fnstcw
fimuls
call
push
incl
and
nop
jp
sub
lods
lret
test
mov
in
push
push
cltd
dec
sub
jno
loope
mov
jecxz
fwait
aad
outsl
cmpsl
mov
mov
xchg
push
dec
es
add
jno
pop
cmp
lea
cwtl
jg
mov
jl
inc
imul
stos
mov
imul
mov
adc
movsb
lock
out
cmp
or
lods
adcb
and
dec
adc
das
xchg
sbb
gs
stos
inc
push
fsubl
cmp
dec
dec
jle
daa
jmp
pop
outsl
das
xor
adc
sti
das
leave
les
addr16
adc
outsl
cltd
sbb
stos
repnz
das
sbb
mov
sbb
dec
jp
mov
sahf
inc
inc
lock
imul
and
mov
clc
mov
adc
jg
test
std
lahf
adc
dec
iret
jbe
inc
fstpl
and
into
inc
outsb
mov
or
cmp
xor
cmp
push
imul
decb
cs
mov
xchg
pop
jle
adc
fnstcw
insl
test
sub
ss
lods
jb
leave
adc
and
outsb
test
xchg
dec
xchg
lea
cmp
mov
dec
mov
inc
push
and
dec
imul
imul
test
mov
hlt
inc
mov
sub
push
pop
enter
andl
loopne
imul
and
xchg
mov
inc
push
cmpsb
fbld
xchg
push
aas
adc
sbb
sub
ret
sbb
mov
addr16
sub
sub
lock
dec
lret
out
test
xchg
inc
lods
pop
mov
xchg
or
cli
push
out
xchg
push
push
fimull
js
fs
iret
int3
jns
jmp
jmp
mov
add
stos
test
cltd
sub
mov
mov
add
add
sbb
push
push
out
push
lahf
jne
rclb
sbb
dec
dec
jge
lret
pop
jmp
cmpsl
fucomp
loope
fadd
jo
dec
out
divb
loopne
sarl
movsb
enter
jle
inc
pusha
sbb
das
inc
lret
xor
xlat
mov
sbb
jae
leave
scas
shll
popf
jns
sub
mov
nop
mov
cmp
outsl
or
hlt
dec
pop
inc
pop
mov
int
fldl
sbb
mov
loop
sub
nop
mov
es
and
or
mov
inc
out
pop
cwtl
sub
arpl
cmpsb
pushf
xor
test
negb
enter
pop
adc
pop
out
stos
inc
in
sbb
pop
scas
cmpsb
lcall
push
adc
mov
pushf
negl
sub
or
pushw
hlt
lods
movsl
and
mov
dec
adcb
pop
sub
mov
popa
daa
xchg
out
jb
loop
add
jns
test
push
in
movsb
xlat
add
movsb
in
mov
in
lods
jmp
push
and
mov
mov
repnz
ljmp
jae
gs
jl
jmp
dec
stc
dec
or
dec
cs
in
loopne
mov
clc
xchg
test
inc
push
imul
cs
mov
push
out
jle
add
test
pop
adc
pop
adcb
sti
jp
jo
imul
sub
outsb
sbb
mov
gs
out
push
dec
xchg
jmp
jae
push
in
pusha
gs
push
push
xchg
arpl
lock
popa
pop
push
cltd
sub
cli
cli
push
inc
or
cmpl
nop
mov
cmpl
gs
inc
fwait
sbb
arpl
je
and
stos
out
dec
popf
sti
imul
fsubrs
outsb
sahf
dec
xor
and
std
fadd
bound
scas
cli
jo
mov
ja
sahf
or
jle
cmpsb
daa
outsl
out
add
push
imul
push
mov
and
adc
jl
dec
mov
and
push
lcall
fiaddl
jno
xchg
jo
xor
aas
mov
out
pusha
xor
dec
mov
leave
jne
fistpll
xor
lahf
or
mov
repnz
push
add
nop
mov
push
push
movntps
cmpsb
adc
cmp
xchg
cmp
dec
jb
dec
push
fidivl
in
call
push
dec
xor
xchg
cmc
pop
rorl
push
fldl
xchg
shlb
jecxz
fildl
mov
bound
aaa
in
push
jbe
fst
je
mov
and
lcall
and
pusha
pusha
dec
les
sub
mov
add
stos
loope
aaa
xor
xor
or
add
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
xor
mov
jmp
push
sub
fldt
mov
mov
fmuls
sbb
pop
xlat
sub
call
push
jns
cmpsb
sub
inc
push
push
inc
int3
and
sbb
mov
sarl
mov
sbb
add
inc
pop
add
jb
sbb
sub
shlb
add
test
fnsave
xor
cld
add
cmp
inc
sub
leave
push
repnz
jae
scas
lret
mov
add
mov
xchg
xor
ret
mov
cmc
rorl
jl
idivl
mov
jmp
xchg
popf
cltd
xchg
push
out
pop
jl
cmp
lds
scas
pop
xchg
test
push
mov
dec
cmp
ja
lret
mov
xchg
mov
ret
sub
nop
or
pop
aad
inc
clc
inc
pop
xor
mov
inc
sbb
mov
shll
scas
dec
mov
xchg
test
push
xchg
rcll
push
and
icebp
dec
sarb
pop
scas
adc
mov
js
mov
test
cmp
mov
add
push
scas
or
add
inc
lods
cs
pop
push
or
call
loope
xor
jmp
jbe
dec
and
out
or
shll
dec
out
outsb
xor
mov
loop
xor
aaa
repnz
aad
jl
jns
pop
sar
pop
popf
cmp
mov
insl
mov
fwait
arpl
popa
jns
nop
mov
add
outsb
cmp
mov
inc
je
lret
dec
push
test
loop
add
mov
push
xor
adc
sbb
orl
ret
xor
int3
mov
and
aam
lret
dec
fdivr
xchg
aad
xchg
mov
push
lret
mov
and
xchg
and
add
mov
xchg
je
xchg
cmp
jo
push
mov
in
out
lcall
in
pop
cli
jo
popf
xlat
fldcw
sub
test
add
xchg
movsb
pop
call
sub
xlat
aaa
jmp
aaa
inc
jmp
and
push
loop
jg
ret
jmp
fs
repnz
aas
pop
xchg
add
pop
add
fsubrp
mov
je
push
mov
int
cmc
fmuls
ja
ret
sub
cli
cmp
inc
lahf
arpl
fnstsw
mov
movsb
mov
pushf
jnp
xor
addr16
xor
cmpsb
test
pop
jecxz
pusha
xor
outsb
arpl
jp
jmp
and
sub
cs
test
ja
stos
popa
pushl
in
inc
xor
lods
aaa
lds
or
mov
pushf
jl
enter
mov
repnz
shrd
shr
mov
mov
xor
shl
xor
or
add
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
jmp
imul
fs
leave
leave
jl
or
jl
test
sbb
adc
sbb
mov
jne
lcall
push
xor
shll
repz
xorb
lahf
xor
push
jl
out
outsl
data16
loopne
lods
inc
out
sub
mov
enter
test
jp
xchg
pop
push
lret
pushf
std
scas
insb
das
ror
lret
cmp
imul
mov
lcall
lcall
mov
cwtl
clc
arpl
or
cltd
movl
sub
mov
jmp
xor
mov
popa
insb
push
insb
mov
lret
lahf
sbb
out
push
mov
jno
scas
pop
sub
test
fs
mov
clc
es
adc
push
push
add
lea
dec
adc
sbb
in
int
shlb
js
and
inc
xchg
movsb
cmp
repnz
push
cltd
xchg
dec
stos
into
and
out
das
adc
and
mov
cmp
xchg
es
test
sbb
cmpsl
ret
mov
pop
push
adc
je
outsl
mov
mov
push
out
and
xor
mov
fistl
jae
imul
xchg
loop
nop
shlb
pop
je
xlat
sbb
pop
aam
dec
shll
pushf
aam
outsl
or
icebp
or
push
jecxz
sub
fs
int3
xor
push
mov
sbb
lret
mov
inc
sub
pop
outsb
outsb
mov
sub
andb
loope
jge
rolb
pop
cmpb
std
jb
mov
cmp
mov
xor
lea
xlat
dec
mov
add
jl
xchg
repnz
push
cmp
fdiv
fsts
icebp
mov
cld
jne
fwait
sbb
mov
or
inc
out
ss
rol
dec
imul
xchg
jo
in
and
jle
iret
and
xchg
into
sti
loopne
stc
shll
subl
orb
cmp
insl
and
mov
sbb
inc
out
xchg
and
sbb
jge
subl
shll
xor
push
cmp
movsl
or
mov
push
ret
cmpsl
bound
int
jo
adc
cmpsb
icebp
stc
xchg
pop
mov
pop
outsb
mov
shlb
xor
inc
push
repz
hlt
and
push
xchg
mov
jl
hlt
xor
sbb
sub
movsb
jbe
mov
sbb
inc
xlat
aas
push
or
outsb
rolb
jne
adcb
and
and
push
nop
mov
sub
ja
mov
pop
and
cmp
xor
ds
js
or
dec
test
or
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
shl
mov
mov
mov
shrd
shr
mov
mov
xor
shl
xor
or
mov
mov
add
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
shl
mov
mov
shrd
xor
shr
mov
mov
xor
or
mov
or
shl
jmp
dec
sbb
jmp
dec
mov
jle
jg
sbb
adc
sbb
push
jmp
pop
xor
adc
inc
mov
scas
jp
cmc
xchg
jns
aam
sbb
xor
arpl
test
dec
sarl
jo
or
sbb
flds
out
pop
out
lret
data16
push
cltd
mov
inc
bnd
shr
inc
test
push
cwtl
sub
loopne
adc
test
jge
and
inc
repnz
es
addb
mov
mov
mov
inc
mov
icebp
pop
ja
dec
add
sub
out
and
and
fcmovbe
mov
scas
mov
icebp
mov
leave
loop
xor
pop
lret
sbb
mov
loopne
jecxz
or
das
jmp
repnz
insl
xchg
mov
rol
shll
in
lahf
xorb
xorl
pop
inc
imul
dec
sub
inc
rolb
cltd
lea
mov
loopne,pt
ret
stc
lds
jne
ss
jae
fisubl
in
mov
fcoml
or
sbb
mov
cltd
psrlw
repz
inc
adcl
fwait
jl
mov
jecxz
mov
xor
inc
out
inc
jno
nop
lds
xchg
stos
push
js
inc
cmpl
loopne
push
scas
xor
jmp
std
jecxz
mov
je
push
xchg
pushf
mov
mov
clc
insl
es
daa
dec
xor
cltd
rolb
test
add
imul
jae
add
js
sub
out
or
mov
mov
jns
push
jmp
sbb
iret
adc
into
in
jo
aam
aam
icebp
test
movsb
into
lods
mov
xchg
or
popf
jbe
sub
mov
add
ja
cmp
lcall
xchg
push
pop
mov
inc
xor
cld
xor
mov
adc
lret
jge
es
cmp
stc
sub
inc
xor
lock
xchg
add
cld
je
sub
mull
pop
adc
inc
ret
clc
hlt
sahf
out
xor
movsb
push
mov
repz
xor
scas
jp
mov
pop
xchg
jns
fstpt
fistpll
lahf
cmp
sbb
jp
ret
dec
shl
outsb
cmpl
jmp
pushf
sub
setae
jge
mov
pushf
das
popa
clc
stos
or
or
aas
out
or
rorl
mov
mov
lea
mov
or
pop
cmc
adc
jo
jge
xor
movsb
popa
or
xchg
or
cmp
popf
jbe
jmp
push
mov
loope
pop
push
sub
aad
loope
cmp
shrb
jle
cmpsb
mov
xor
fistps
mov
mov
mov
mov
xor
xor
shrd
xor
or
mov
mov
mov
xor
xor
mov
mov
mov
shrd
shr
shl
jmp
mov
mov
sub
jle
repnz
sbb
and
sbb
js
fiadds
fldenv
xor
shll
test
stos
ret
cmp
imull
bound
sbb
jmp
xchg
fbstp
push
push
mov
fs
add
cmp
pop
ja
dec
adc
mov
js
sbb
dec
inc
dec
stc
push
roll
iret
fistpl
pop
test
mov
nop
in
lret
aas
mov
push
push
pop
out
jne
inc
arpl
adc
dec
aaa
sti
jae
sbb
mov
arpl
imul
push
scas
pop
pop
ficompl
repz
push
insl
inc
dec
cmc
pop
jecxz
inc
cwtl
sti
imul
cwtl
push
subb
pop
mov
lea
xor
outsb
arpl
mov
mov
mov
es
xchg
dec
push
xlat
xor
stos
cwtl
or
jmp
inc
xor
fnstcw
fdivl
lahf
dec
insl
sbb
gs
iret
aam
cmp
shll
lods
dec
lods
add
jge
ljmp
pop
lods
rclb
pop
push
jecxz
into
mov
in
and
push
or
out
lods
leave
and
mov
xor
jmp
stc
push
push
and
out
lods
mov
sub
sub
jb
jnp
add
cmpsl
add
dec
xor
xchg
jge
pushf
add
lcall
mov
popa
pop
rorb
adcl
clc
ret
outsl
icebp
repz
xlat
dec
shl
push
sti
out
push
lods
and
sbb
fwait
adc
dec
pop
sub
popa
xchg
sub
ljmp
push
fsubrl
jo
ss
lahf
dec
das
push
push
mov
addr16
stos
leavew
xchg
or
xorb
mov
add
cmc
lock
or
ffree
cld
pushf
rol
sub
inc
in
into
repnz
adc
mov
add
push
pop
mov
inc
scas
add
std
aad
test
dec
cs
inc
fwait
mov
rol
call
scas
xor
pop
xchg
movsb
outsb
pop
icebp
mov
movsb
ret
cs
insb
inc
pop
pushf
or
out
inc
jne
mov
sbb
icebp
mov
pop
push
rcrl
mov
add
or
and
xchg
xchg
add
stos
push
pop
jp
xchg
out
jge
aas
subl
push
xorl
shl
sub
incb
ds
into
sbb
mov
xchg
xchg
mov
in
leave
and
popf
imul
jne
mov
jmp
mov
pop
inc
test
mov
into
mov
pushf
mov
push
mov
pop
and
aas
push
push
rcl
lds
jp
loopne
mov
divl
daa
mov
cld
xchg
mov
lea
js
out
imul
repz
sub
mov
mov
mov
xor
or
mov
shll
xor
mov
mov
mov
xor
or
shr
or
cmp
jne
cmp
jne
jmp
mov
jmp
loope
fidivs
insb
pop
pop
dec
xlat
mov
stc
jae
sbb
adc
sbb
mov
jne
stos
xchg
dec
in
jne,pt
lea
lods
mov
mov
std
outsb
test
gs
rclb
mov
mov
cs
inc
xor
push
xor
movsb
cmp
mov
jne
or
mov
xchg
es
jmp
daa
cmp
adc
in
loop
cmp
sahf
sbb
or
dec
pop
or
inc
push
cmp
outsb
inc
insb
dec
or
stc
into
pop
and
mov
push
fstps
js
loopne
pop
mov
add
cmp
popf
mov
dec
mov
ja
add
dec
enter
imul
jg
fstp
push
mov
push
mov
xchg
xchg
daa
out
mov
push
stc
or
test
xor
mov
cmp
mov
mov
pop
jb
inc
fldcw
add
testl
xlat
xor
inc
sub
or
mov
push
lock
gs
ja
mov
movsb
rcll
mov
mov
sti
sbb
sbb
cmp
sub
sub
ss
dec
sub
ja
dec
je
ret
dec
js
rcrl
mov
push
pop
pop
mov
ret
push
ret
rcll
or
out
inc
push
cmp
push
adc
cmp
sbb
mov
mov
add
je
jp
and
mov
jns
mov
sarb
jecxz
xor
and
dec
testl
mov
iret
xchg
pop
fistps
lret
xor
adc
aaa
ss
stos
es
into
enter
sub
repnz
or
cs
aas
mov
mov
mov
mov
aam
inc
test
inc
adc
or
in
jmp
lods
dec
negb
or
cmp
mov
sbb
loope
scas
xor
in
mov
cmp
shll
sub
orb
mov
dec
js
push
scas
lret
inc
leave
mov
shrb
test
inc
int
mov
bound
mov
sub
sbb
sub
or
sti
pop
jg
test
sub
dec
xchg
fs
hlt
arpl
mov
fs
ds
dec
jbe
xlat
ja
push
mov
xchg
popf
jp
xor
or
and
cmc
stc
mov
inc
mov
cmp
xor
dec
in
cld
jmp
or
cld
xor
jg
popf
mov
fistpll
pop
and
pop
sub
add
call
jne
and
mov
lods
and
or
ljmp
jl
push
repnz
and
gs
rclb
lds
bound
mov
xor
xor
mov
mov
shrd
shr
mov
mov
mov
mov
xor
or
mov
shl
xor
mov
mov
or
mov
push
pushl
push
push
call
mov
mov
jmp
mov
pop
lcall
and
insl
sbb
and
sbb
xor
into
sub
cmp
test
lret
dec
mov
out
std
mov
pop
adcb
jecxz
adc
mov
jo
cmp
inc
add
loopne
pop
mov
orl
jge
inc
sti
add
jo
mov
push
sahf
neg
fisttps
pop
mov
test
bound
and
inc
sbb
mov
les
jns
scas
insl
mov
subl
sub
movsl
lahf
rorl
cs
sbb
push
xchg
pusha
xor
xor
adc
sub
add
ja
mov
mov
filds
mov
mov
add
in
cld
into
data16
test
clc
xor
in
push
out
aas
ds
out
cld
pop
or
or
mov
in
stos
xchg
cmp
ret
mov
and
mov
add
adc
inc
popf
lea
dec
inc
lahf
iret
adc
xor
dec
sub
fsubrp
fsubrp
xchg
jno
mov
or
mov
shlb
out
pushf
mov
repnz
fsubrl
cs
popf
inc
aas
push
inc
fucomp
fmull
mov
call
fs
mov
aad
orl
jmp
xchg
push
jno
ja
outsl
daa
imul
call
pop
xchg
cld
or
mov
js
xor
lods
mov
das
test
das
adc
adc
xor
mov
jl
and
mov
flds
mov
mov
ja
xor
mov
btr
test
movsl
rolb
xchg
pop
push
addr16
add
cwtl
jnp
dec
or
fstl
and
hlt
pop
movsl
mov
fcompl
in
cmp
lret
lods
push
pushf
or
lods
imul
push
test
popf
in
adc
lahf
hlt
aaa
js
cmp
pop
int3
mov
nop
xchg
movsb
cwtl
rorl
outsl
notl
lcall
jo
dec
mov
jns
sub
rcl
jae
cmpsl
adcl
mov
xor
repnz
inc
das
sti
or
lods
xchg
sub
sub
cmp
jg
in
clc
jl
test
inc
lock
and
test
adc
mov
xchg
stos
push
arpl
mov
jle
pop
lcall
xor
mov
pop
call
aas
out
pop
sub
bound
or
into
dec
mov
daa
popa
mov
add
sub
stos
mov
cld
xor
clc
push
xor
notb
push
mov
gs
scas
jp
pop
dec
cmp
or
push
jg
jne
pop
add
push
cld
inc
adc
lods
enter
add
ljmp
and
push
sbb
push
jl
mov
and
sbb
int3
push
loope
jb
cld
clc
xchg
push
test
cltd
or
mov
lock
dec
mov
cmp
mov
lods
sbb
test
iret
pop
jge
add
adcb
lcall
daa
sbb
pop
rcll
inc
mov
ret
outsb
mov
into
js
rcrl
lret
xchg
decl
cld
or
outsl
fs
popa
pop
adc
movsb
push
adc
test
lret
es
or
in
and
nop
mov
push
lods
icebp
mov
sbb
mov
cld
xor
dec
jnp
inc
or
push
lcall
lds
pop
lods
pop
arpl
jns
js
mov
mov
es
sub
cld
lods
or
adcb
xor
stc
mov
sub
bound
push
in
mov
fisttpll
sar
inc
lcall
test
in
xor
mov
shrb
loop
cmpsb
cmpb
cmp
jne
rorb
xor
jge
jge
shlb
xchg
mov
pop
jno
shlb
and
sarl
cmc
adc
or
outsl
hlt
sbb
pop
dec
bound
or
js
pop
sbb
dec
xchg
in
sar
cmpsb
dec
jp
fdivrs
lea
cmc
pop
mov
andb
adc
lds
and
cmp
pusha
xchg
mulb
mov
repnz
daa
adc
out
xor
out
xlat
dec
imul
jae
std
or
sbb
enter
cmpsb
jp
inc
fistpll
inc
push
push
mov
lods
mov
mov
int
cmpsl
icebp
in
in
jbe
cmc
xlat
cmp
daa
aam
outsl
int3
lcall
cld
mov
inc
inc
pop
int3
sbb
mov
or
xchg
mov
add
popa
inc
jl
sti
push
cmp
fmul
in
int
lret
push
fwait
lock
scas
icebp
mov
mov
imul
in
out
xchg
stc
shl
insb
iret
out
or
inc
ds
je
xchg
icebp
loope
add
dec
pusha
or
jae
fcmovne
sbb
xchg
sbb
lretw
cmp
mov
sub
popa
adc
or
addr16
inc
adcb
sub
push
xchg
negl
rcrl
dec
jo
cmp
mov
daa
ret
out
scas
xor
popa
push
cmp
cli
jne
push
lea
sub
shl
fdivrl
fildll
adc
lcall
std
es
mov
adc
jecxz
xor
lods
imul
sub
xchg
cmp
push
cmp
out
xor
mov
mov
mov
push
push
push
call
shld
shl
jmp
popf
xchg
dec
mulb
sbb
fdivs
jmp
sbb
adc
sbb
fmuls
adc
arpl
subl
loopne
xchg
rolb
xchg
sbb
xor
adc
or
lcall
ljmp
xor
mov
fcoms
cmpb
iret
sbb
mov
dec
ljmp
sbb
in
lret
cwtl
inc
mov
lahf
leave
mov
out
mov
js
pop
push
mov
or
int
push
and
bound
insb
into
cmpsl
scas
es
mov
or
push
scas
stos
aas
mov
mov
pop
jge
pop
popl
andb
push
xlat
jg
lock
enter
adc
shrb
mov
add
mov
cmp
push
push
cmp
mov
cmp
int3
dec
cmc
or
repz
shl
and
sti
sub
mov
mov
cmp
push
ljmp
ss
jb
pushf
pop
mov
jg
lret
or
imul
lods
test
adc
sbb
inc
xlat
in
dec
inc
pop
mov
pop
fidivl
fimull
push
xchg
mov
into
sub
inc
mov
xchg
xor
in
and
notb
fdivs
pop
add
push
push
adc
push
fimull
push
or
mov
push
inc
aam
inc
rcl
adc
pop
adc
mov
cmp
ficompl
mov
cmc
push
mov
mov
mov
cmp
xor
loopne
iret
add
fidivs
xor
jl
cmp
adcl
mov
cmpsl
in
lret
pop
xchg
ja
sbb
cmp
adcb
fsubrs
mov
or
push
cltd
lret
inc
clc
cld
or
adc
add
popf
addr16
xchg
ljmp
mov
ret
flds
leave
repz
push
les
inc
fucom
lds
cmpsl
cmpsl
lret
sti
sti
andb
fidivs
clc
sahf
xchg
sub
xchg
sahf
jecxz
xor
dec
rcll
add
push
pop
pop
jge
cmp
push
popa
fildl
jmp
fsubrs
add
adc
call
xchg
jl
les
mov
xor
push
outsl
ret
cwtl
or
add
sub
fidivrl
cs
cwtl
andb
mov
push
stc
add
stos
pop
out
ljmp
push
jo
sub
mov
xor
pop
jecxz
cwtl
fnop
lock
bound
sarb
fadds
xchg
adc
sti
cmp
mov
or
xor
or
xor
xor
mov
mov
jmp
xlat
cmp
jge
jle
add
sbb
and
sbb
lods
sub
dec
mov
mov
data16
movsl
sti
and
es
cld
ljmp
ljmp
lahf
js
xor
cmp
insl
mov
sub
scas
cmp
push
mov
mov
push
push
in
pop
rorl
and
pushf
sub
in
fcmovu
sbb
ret
aam
inc
cmp
push
lahf
subl
lds
or
lds
call
or
int3
and
test
sub
cmpsl
jo
int
xchg
lahf
jo
scas
imul
sub
stos
mov
or
call
jnp
orl
mov
rcll
ds
rcrl
sahf
push
sti
icebp
inc
push
repz
pop
sub
jge
mov
lahf
push
inc
inc
insb
sub
cld
jmp
insb
arpl
jb
xchg
fisttps
lock
outsb
sub
lret
jl
pop
mov
jb
and
pop
add
jno
cltd
mov
sbb
out
dec
mov
popf
enter
or
or
test
and
decl
adc
jg
orps
scas
dec
and
lret
mov
data16
and
cmp
and
stos
and
xchg
movsl
repz
in
test
out
dec
mov
pop
lret
fistps
fdivl
dec
cld
gs
push
js
test
lds
mov
dec
or
fidivrl
sbb
aam
mov
jmp
pop
inc
in
and
mov
into
mov
jns
int3
cmpsb
daa
scas
xor
mov
sbb
addr16
jmp
mov
inc
sub
ljmp
shlb
je
aaa
loope
push
sub
add
out
fs
inc
stos
cwtl
xor
push
inc
xor
mov
pop
lea
out
adc
sub
jo
idivb
sahf
cwtl
jns
daa
loop
xchg
das
add
jb
in
xchg
adc
jmp
pop
pop
dec
fwait
pusha
mov
scas
and
adc
add
inc
adc
out
cld
fisubs
pop
sub
sub
lret
pop
sbb
mov
fdiv
add
adc
mov
mov
xor
and
xchg
push
fsts
jbe
shlb
push
adc
and
push
in
sub
mov
call
or
push
add
popf
cvtdq2ps
dec
iret
ja
cmpsb
ds
mov
outsl
jnp
cmpsl
push
xchg
jb
sbb
fbstp
inc
add
lods
xor
cmp
mov
xor
int3
cmp
adc
pop
mov
mov
mov
mov
xor
xor
shrd
shr
mov
mov
mov
mov
xor
or
mov
mov
mov
xor
xor
shl
mov
mov
mov
shrd
xor
or
mov
mov
mov
mov
shl
xor
or
shr
xor
or
cmp
jne
cmp
je
pushl
pushl
jmp
fwait
ror
dec
mov
scas
in
mov
and
sbb
adc
sbb
adc
push
test
movsb
sahf
fwait
cmc
add
sbbl
jmp
shlb
xchg
mov
dec
dec
inc
cltd
mov
xor
push
roll
insb
jge
popa
dec
push
dec
or
out
shrb
pop
or
leave
xchg
and
test
mov
sub
jne
jbe
loope
and
mov
fsubl
xchg
inc
repnz
das
lods
lods
jno
mov
push
pop
pushf
bound
cltd
add
repz
jae
adc
mov
mov
leave
xchg
sub
rcll
mov
mov
mov
jae
andl
dec
lods
adc
xchg
enter
aas
mov
dec
xor
cmpsl
mov
mov
sbb
pop
push
mov
inc
sahf
mov
rolb
push
dec
and
pop
mov
std
into
popf
sarb
jne
shl
jl
ss
xchg
sbb
inc
fstps
mov
push
out
jo
mov
into
mov
in
xlat
imul
mov
dec
js
add
stos
mov
addr16
fld1
in
xchg
cltd
stos
dec
out
clc
in
arpl
out
sub
leave
sbb
divl
xchg
add
pop
ja
mov
cmp
xor
aaa
sahf
sbb
xchg
mov
adc
pop
jne
inc
sub
jmp
sub
adc
sub
jbe
mov
incb
jg
outsl
push
int
enter
pop
and
sub
repz
xchg
xchg
sbb
jg
rcrl
mov
shlb
dec
sub
inc
into
inc
sub
mov
sti
cli
loopne
addr16
testb
adc
mov
sbbl
loop
or
add
mov
or
cld
in
jne
mov
cld
daa
lods
cmp
or
dec
roll
inc
and
mov
mov
rclb
pop
mov
dec
cmc
xor
jecxz
mov
adc
mov
mov
sub
xchg
cmp
push
ljmp
mov
in
dec
adc
hlt
xor
pop
in
push
lds
gs
mov
movsl
nop
call
imul
xor
lds
pop
sub
dec
ds
push
negl
mov
jmp
and
push
inc
pop
and
andb
push
loop
mov
sub
mov
sahf
inc
push
ja
sub
or
xchg
test
fcoml
mov
stc
int
bswap
gs
and
aam
movsl
std
hlt
push
adc
pop
sbb
fcomps
jl
jne
push
push
call
jmp
mov
dec
jb
insl
fnstcw
dec
sbb
and
sbb
mov
mov
fmuls
sbbb
stos
mov
jecxz
shlb
add
push
or
sub
lock
pop
fucomip
stos
or
cmc
fbstp
pop
push
cmp
cmpsb
mov
push
inc
add
sub
and
cmp
pop
dec
test
adc
jmp
stc
xchg
or
ficoms
cld
mov
xchg
or
test
adc
pop
xchg
pop
lret
ljmp
or
mov
cli
mov
jg
jp
mov
rclb
cmp
sti
test
and
mov
cmp
dec
enter
sub
cmp
mov
cmp
jge
int
pop
inc
mov
mov
imulb
sub
cmp
mov
enter
push
mov
dec
jl
jnp
popf
cmpsl
test
fwait
movsb
mov
ss
pushf
aas
inc
addr16
inc
pop
jns
sub
jl
push
add
jge
sub
and
lahf
inc
outsl
pushf
push
test
or
enter
mov
adc
je
out
push
popl
mov
push
out
pop
ret
shlb
sbb
testl
arpl
dec
ret
es
pop
call
imul
mov
out
fcmovb
mov
adc
std
inc
sub
dec
inc
into
jmp
xchg
jmp
movsb
pushf
rolb
xor
iret
mov
xor
xrelease
ret
pop
inc
sub
inc
into
es
dec
mov
sbb
push
inc
hlt
add
clc
lds
lret
adc
inc
test
jge
pusha
lret
shrb
ja
sbb
ljmp
inc
xor
mov
xlat
push
cmpsb
mov
sub
dec
add
sbb
cmc
rcrl
lds
sub
jns
and
into
jo
mov
mov
jne
fwait
jl
mov
dec
pushw
mov
push
push
mov
loop
cmp
mov
popf
push
xchg
mov
xor
mov
adc
sub
cs
pop
add
pop
jecxz
mulb
daa
outsl
jge
xlat
or
mov
sahf
xchg
xor
sub
mov
pusha
ja
aas
dec
adcb
or
into
fiadds
test
shll
in
or
xor
inc
rorb
mov
mov
fwait
cmpsl
and
fstpl
mov
push
sbb
idivl
enter
add
shrb
repnz
into
inc
mov
dec
rclb
xor
dec
sbb
dec
jge
push
mov
cld
sbb
jle,pn
jne
push
inc
pop
outsb
pop
leave
ret
movl
cmp
movl
jae
movl
cmp
movl
jae
sbbl
shrd
movl
shr
ret
mov
xorl
xor
and
shr
ret
xor
xor
ret
push
mov
sub
sub
movl
mov
cmpl
movzbl
mov
movzbl
mov
jmp
mov
mov
jne
pushl
pushl
pushl
push
call
mov
and
xorl
add
not
sbb
adc
mov
movl
mov
movl
cmpl
mov
notl
mov
jmp
mov
mov
jbe
pushl
pushl
push
push
push
pushl
push
call
and
movzwl
add
not
mov
adc
andl
add
mov
sbb
movl
movl
push
movzwl
and
movl
cmpl
movl
mov
movzbl
jmp
movl
movl
jge
push
push
pushl
push
push
call
sbb
incl
xorl
add
movzwl
add
add
movl
xor
add
and
push
or
movl
cmpl
not
mov
jmp
movl
mov
jle
pushl
call
mov
mov
adc
not
sub
sbb
or
incl
mov
cmpl
not
mov
mov
not
jmp
movl
movl
jae
push
push
push
call
add
sub
mov
xor
sbb
neg
mov
push
push
sbbl
push
orl
call
jmp
inc
dec
cmpsb
movsb
lcall
mov
cmp
sbb
add
sbb
out
subl
fwait
xor
lods
jle
jle
mov
das
hlt
pop
sbb
ja
cmovs
dec
out
imul
insl
test
leave
push
add
mov
xchg
cmpsb
test
loopne
lock
push
loopne
and
and
outsb
shrl
insb
lahf
stos
aam
jae
sbb
jne
cmp
int3
xorb
ljmp
fs
rorb
out
adc
lretw
mov
sub
inc
jbe
mov
inc
pop
pop
adc
movsb
rol
dec
addr16
addr16
cwtl
imulb
inc
inc
and
sti
out
xchg
repnz
add
lods
xor
sub
aas
test
add
arpl
pop
ret
test
cwtl
or
mov
notl
sbb
xor
inc
mov
mov
out
mov
outsl
sbb
lret
outsb
dec
or
bound
add
lret
push
cmc
stos
lret
push
inc
mov
gs
push
test
mov
imul
add
stos
test
jle
push
xchg
add
pop
pop
push
pop
jnp
cli
frstor
add
in
std
iret
lret
push
jbe
pusha
movsl
popf
imul
xor
pop
fcmovnu
xchg
sti
push
ficomps
test
inc
out
mov
cs
cltd
inc
sub
les
jl
or
js
sub
mov
scas
testb
lods
out
add
ret
dec
sbb
push
shrb
fcoms
cmp
cld
insl
enter
xchg
test
push
sub
mov
adc
pop
ja
frstor
cmp
xor
imul
dec
cli
add
push
insb
jecxz
dec
jle
and
push
inc
inc
pushf
stos
cld
int
loop
ds
mov
idivb
test
lcall
out
dec
enter
in
addl
jge
insl
cmp
fdivrs
ds
daa
jnp
xchg
fidivs
fs
adc
mov
xor
pushf
fisubs
mov
push
pushf
rolb
sub
pop
aad
cwtl
sub
and
mov
mov
add
loope
xchg
inc
mov
adc
mov
fistpl
pushf
add
cmpsb
and
fcomip
imul
mov
mov
bound
push
pop
aas
xchg
mov
das
cmp
push
jo
mov
dec
iret
arpl
aad
je
jnp
mov
pop
jo
clc
daa
xchg
mov
sbb
mov
push
or
add
dec
mov
in
dec
adc
outsb
jno
movsl
loopne
pop
xorb
xchg
adc
jg
rcl
xor
sbb
jecxz
push
sarb
fs
das
pop
shrl
pushf
dec
pop
add
adc
adc
push
cmp
ror
lock
xlat
mov
leave
ss
mov
adc
icebp
mov
mov
push
orl
or
push
addl
or
sbbl
xor
xor
push
push
negl
call
mov
cmpl
not
movzwl
notl
jmp
movl
jb
push
pushl
pushl
call
adc
movzwl
or
xor
add
sbb
xor
mov
or
xor
neg
sbbl
mov
adcl
push
adcl
push
movl
push
push
decl
call
cmpl
mov
mov
jmp
movl
jae
pushl
call
sub
subl
xor
sbbl
sub
or
xorl
jmp
mov
sbb
sbb
sub
xor
xorl
push
inc
mov
xchg
push
stc
mov
js
push
xchg
mov
mov
and
mov
sub
sahf
cld
inc
mov
jp
negb
mov
mov
jns
and
imul
jae
aas
in
inc
lcall
int3
stc
subl
repnz
xchg
pusha
in
xor
sbb
mov
sahf
in
add
mov
clc
loop
pop
mov
cmp
jg
lods
inc
aaa
or
inc
sbb
fsubr
xlat
loope
sub
leave
out
push
sbb
repz
shll
and
xor
add
mov
and
xor
xor
lret
dec
or
lds
xchg
fmuls
cmp
out
push
jnp
mov
stos
inc
add
cmp
push
mov
enter
sub
jg
sub
pop
or
pushf
xor
push
out
stos
or
enter
std
push
and
ljmp
leave
xchg
dec
cs
or
pop
outsl
or
mov
testb
push
jg
inc
pop
jnp
mov
test
xchg
push
loope
or
xor
call
es
inc
repnz
aas
enter
xchg
test
adc
sub
add
xchg
xor
sti
jle
pop
xor
push
stos
pop
push
aam
scas
push
dec
mov
or
dec
mov
insl
fstpl
mov
xor
xor
pop
daa
push
scas
sub
jmp
cwtl
test
lods
je
push
pop
xor
cli
xchg
movsl
xor
mov
fcoms
imul
ja
push
repnz
pop
xor
imul
dec
pop
sbb
adc
jno
inc
movsl
jno
lea
sbbb
jne
fidivl
sbb
mov
movsl
xor
aam
sub
fildll
jle
divb
insb
dec
or
sbb
xor
loop
shlb
lock
push
adc
sub
addb
sahf
fwait
sbb
fdivrs
fistpl
in
xor
mov
pop
adc
fstl
sbb
sbb
sub
mov
cmp
fnstenv
out
push
mov
inc
add
add
mov
enter
sahf
movsl
mov
movsb
jg
hlt
jne
es
rcr
inc
adc
push
fs
imul
and
rol
and
mov
sub
jb
sbb
dec
push
mov
loope
lahf
lock
pop
int
mov
mov
psubd
stos
xchg
pop
insb
sub
lods
sahf
cmpsb
push
or
dec
cmp
imul
rcl
fwait
movsb
add
add
add
cmpsb
xchg
leave
jg
int3
sub
xor
mov
mov
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
add
adc
or
mov
or
mov
or
mov
or
mov
or
or
jmp
add
pop
mov
cmp
mov
sbb
adc
sbb
movsb
xor
cmp
pop
pop
dec
enter
std
cltd
mov
xchg
ss
xchg
stos
xchg
cwtl
sbb
icebp
inc
in
sbbl
mov
mov
xchg
jns
dec
enter
fidivs
xor
into
mov
mov
cltd
movsb
sbb
enter
cmc
push
sbb
scas
std
xor
dec
push
add
ss
push
out
int
insb
pop
pop
sbb
push
gs
fnstsw
mov
mov
mov
add
popa
outsl
mov
ljmp
mov
mov
int
push
sahf
pushf
cltd
xor
ffree
insb
push
ret
into
rcr
int3
mov
insl
insb
fisttps
imulb
push
add
pop
dec
adc
jb
add
mov
pusha
sbb
sbb
daa
pop
inc
push
sahf
xor
mov
jecxz
imul
xchg
push
cmp
adc
mov
push
dec
dec
mov
in
arpl
ret
push
lds
sbb
xchg
mov
fimull
nop
nop
fimuls
das
add
sub
and
cs
pop
inc
jae
stos
push
outsl
lcall
xlat
jnp
and
fsubs
xchg
mov
pop
test
pop
inc
cmp
adcb
pop
aas
adc
jge
cltd
or
pop
cli
lret
icebp
add
movsl
scas
repnz
nop
pushf
sbb
into
mov
adc
outsl
inc
adc
sbb
jne
lahf
jg
negl
dec
push
adc
loopne
outsl
add
aas
lea
lea
lret
jae
jb
jle
fadd
mov
stos
loopne
dec
jns
and
xor
and
push
cmpsb
pop
aam
mov
cmp
mov
push
pop
leave
xor
adc
sub
adc
and
aas
xchg
xor
pop
push
mov
lret
shrl
incl
xor
cmp
aam
lcall
fdivl
test
sbb
bndstx
dec
sbb
out
and
ljmp
jo
mov
xchg
mov
lret
dec
xchg
leave
and
xor
mov
lret
es
mov
shl
cmp
popf
pop
xor
mov
ss
mov
enter
pop
shl
mov
cmp
das
data16
sub
sbb
jmp
cmp
lds
cmc
cmp
jbe
jge
xlat
mov
ljmp
cmpsb
cmp
jae
mov
mov
in
mov
mov
insb
inc
inc
divb
shlb
lock
icebp
mov
add
push
mov
and
nop
inc
cmp
pop
les
cwtl
sub
xor
jecxz
jbe
add
cs
add
push
dec
pop
lcall
rorb
test
add
add
icebp
je
movl
movl
mov
mov
xor
xor
and
jmp
xor
jne
insb
sbb
push
out
int3
or
pop
jmp
sbb
adc
sbb
push
dec
sub
push
cmp
ljmp
cli
mov
aas
je
dec
push
jmp
ret
sbb
in
sbb
aaa
cltd
xlat
jge
or
add
fistps
cmc
aas
or
outsb
xchg
mov
xor
pop
xchg
int
movsl
fidivl
lea
pop
cmp
sarb
fucomp
lods
jge
test
fdivrl
ds
mov
ror
mov
fnsave
or
mov
dec
jnp
xor
roll
pop
fisubs
adc
stos
mov
dec
or
mov
rorl
jl
xorl
dec
mov
lcall
leave
pop
imul
push
pop
mov
add
xchg
or
inc
sbb
mov
repnz
jecxz
push
dec
pop
pop
not
jno
pushf
movsb
imul
fnstcw
imul
neg
pop
push
push
ffreep
add
arpl
xchg
movsl
ret
inc
hlt
mov
out
inc
pop
dec
dec
aas
iret
and
cli
dec
fisubrl
mov
lock
enter
in
adc
mov
pop
xchg
and
sbb
and
xchg
stc
xlat
stc
mov
or
jae
idivl
hlt
lret
mov
movsl
sarl
push
cmc
jle
mov
push
sub
imull
je
sbb
jae
push
inc
ficomps
es
or
fwait
cwtl
call
in
vprotw
les
push
xor
outsb
sbb
push
mov
inc
scas
cs
xor
xchg
adc
sbb
inc
rcrb
xor
cmp
xorb
xchg
xor
cs
test
mov
je
lds
mov
imul
lods
outsb
push
cmc
in
repz
xchg
clc
es
aam
data16
iret
fs
mov
sub
mov
rcl
dec
sbb
test
fwait
in
sbb
dec
xchg
mov
lods
mov
xor
addr16
mov
adc
and
dec
cmp
in
unpcklps
and
pop
push
and
mov
xor
adc
inc
ds
pop
ss
sar
jb
mov
out
subl
push
fs
outsb
sub
dec
test
out
jne
insb
sbb
or
xchg
dec
test
or
push
or
mov
mov
jo
lret
clc
xchg
adc
out
mov
in
adc
pop
insl
inc
rolb
stos
lahf
pop
lret
jnp
xchg
or
add
scas
mov
pop
sbb
mov
ss
mov
movsb
push
iret
rolb
jo
add
cwtl
xorb
lds
ljmp
mov
mov
or
lds
sbb
data16
mov
out
aas
and
mov
mov
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
add
mov
adc
mov
add
adc
xor
xor
add
mov
adc
mov
cmp
jne
cmp
je
movl
movl
movl
push
movl
mov
mov
jmp
in
mov
sub
push
mov
xor
sbb
adc
sbb
dec
jecxz
sub
jb
pop
movsb
push
testl
je
sbb
xlat
add
cs
mov
clc
nop
mov
pop
pop
xchg
cmpl
sbb
pop
outsb
pop
stc
fsubs
icebp
cld
jne
lret
adc
mov
mov
inc
adc
aas
call
xchg
popa
add
mov
pop
subl
sub
or
mov
jmp
xchg
ret
mov
cmp
add
push
xor
js
fnclex
cwtl
add
sub
fs
xchg
arpl
add
cmp
fdivrs
dec
or
mov
jge
jnp
rorl
sub
in
or
mov
in
cmp
pop
jp
mull
outsb
add
lds
pop
cmc
pop
xor
pop
pop
inc
pop
adc
mov
xor
adc
pushf
pop
aam
jne
nop
fs
adc
shr
jae
popf
in
pop
ds
mov
mov
testb
cmp
sarl
in
mov
in
int3
mov
mov
or
xor
cmp
in
movsl
js
popf
divl
jno
lods
sub
jmp
ss
add
sbb
adc
cmp
fisubs
xor
mov
daa
add
pop
push
dec
mov
jecxz
xchg
sub
mov
ficomps
test
mov
inc
imul
sbb
xor
sbb
icebp
xchg
sub
push
xchg
xchg
jne
sub
sbb
mov
mov
mov
and
mov
lahf
shlb
ret
dec
sub
into
pop
aaa
sbb
mov
xlat
pop
jecxz
aas
aaa
std
mov
xlat
mov
adc
or
jns
sub
jle
adc
imul
cmp
and
ret
lods
shrb
cltd
insl
stos
imul
imul
loope
jmp
sub
xchg
xchg
cld
repz
xor
notb
mov
pop
subl
clc
inc
dec
cwtl
and
je
mov
loopne
cmp
loopne
pop
clc
outsl
std
xchg
jbe
pop
ljmp
push
jge
mov
mov
stos
scas
addl
dec
xchg
repnz
dec
fimull
xor
cmp
cmp
xchg
lret
mov
in
jmp
int
ja
lea
pop
test
jb
mov
sbb
sti
push
insl
aas
fwait
jo
lock
adc
jmp
jle
mov
jecxz
out
mov
dec
or
dec
notb
xchg
ss
xor
fucomip
rcrb
pop
jne
fdivl
test
mov
sub
repz
push
jmp
add
push
sbb
ja
pop
test
push
sub
sbb
adc
sbb
mov
sub
popl
lahf
fidivrs
dec
je
mov
sbb
and
loopne
in
rorl
test
inc
lahf
xchg
out
mov
or
in
fsubrl
fxam
scas
popa
dec
test
add
les
dec
and
ss
inc
orb
or
cmp
mov
imull
dec
dec
push
loop
pop
subb
scas
fldcw
mov
arpl
mov
insl
push
nop
jmp
out
push
add
pop
adc
xlat
jb
adc
or
sbb
sbb
fsubs
movsb
push
in
icebp
xlat
imul
xor
adc
xchg
mov
inc
mov
fldl
xor
ret
jns
lock
dec
jae
fistps
xchg
aas
pop
xchg
mov
jno
push
insb
pop
loopne
imul
test
imul
mov
pushf
cltd
stos
sub
xchg
lret
loope
and
in
mov
pop
xor
fidivrl
sub
roll
pop
mov
outsb
cmc
arpl
xchg
cmpsl
sbb
mov
mov
orl
mov
push
arpl
adc
cltd
push
mov
sub
xor
scas
add
les
xchg
cli
sub
sarb
gs
and
popl
jns
fwait
cmpsb
shlb
test
icebp
ss
mov
jg
jmp
cmp
push
sbb
ds
stos
and
jo
in
dec
ret
cmp
xchg
jnp
mov
leave
popf
mov
ss
xor
mov
std
add
jmp
ret
jle
xor
sbb
icebp
ret
sub
jg
loopne
jno
cltd
jle
xlat
loope
mov
add
push
mov
mov
rcrl
mov
jg
je
out
jb
xchg
fwait
sar
jmp
xchg
sbb
repnz
lock
js
loope
dec
sub
fildl
push
into
repnz
inc
pop
shl
sbb
and
jb
cmp
xchg
jae
out
xor
xchg
test
sub
add
in
mov
xor
sbb
add
ret
inc
ja
mov
push
adc
cli
roll
nop
and
inc
cmp
aad
inc
out
mov
xchg
dec
or
out
xor
fwait
insl
push
movsl
shr
ret
aas
fldenv
pop
and
mov
test
insb
stos
pop
dec
dec
sub
orl
xchg
out
repnz
movb
inc
mov
shl
aaa
xor
imul
ffreep
addr16
and
jbe
pop
inc
sub
xor
or
add
xor
fcmovnbe
dec
mov
push
pusha
push
xchg
pop
mov
dec
aaa
mov
mov
iret
sahf
hlt
test
sbb
mov
call
mov
mov
push
push
and
and
push
jmp
addr16
bound
mov
ffree
jl
and
sbb
inc
dec
aam
es
jo
fnsave
addb
xor
mov
push
shrl
sub
mulb
mov
aaa
lcall
in
fstpl
sub
cmpb
xchg
sbb
sbbb
je
insl
in
xor
pop
push
xchg
out
imul
scas
loop
add
mov
cmpsl
bound
clc
push
fucom
mov
xchg
lock
xchg
jg
das
and
mov
icebp
lahf
pushf
cmpsb
xor
cli
pushf
adc
adc
dec
ds
pop
clc
popw
das
sub
add
outsl
into
stos
push
test
clc
repz
add
pop
jae
ficomps
cmc
imul
jns
inc
and
clc
iret
jne
cmpb
dec
inc
dec
xor
mov
mov
loop
leave
lock
push
sbb
in
pop
inc
dec
imul
pop
jae
xor
mov
pop
pop
pop
pushl
and
cld
cmp
push
bound
cld
notb
mov
inc
sahf
push
iret
fwait
fs
pop
xchg
adc
sub
jmp
sbb
aas
mov
sahf
xchg
xchg
dec
aas
leave
dec
and
shl
pop
add
out
add
aas
and
cmpsl
push
jecxz
jp
sbb
rolb
xorl
add
aaa
mov
iret
adc
stos
ficomps
cmp
pop
xor
in
cwtl
adc
aas
ret
and
ret
dec
pop
xchg
insb
jb
addr16
or
mov
das
popa
in
andb
cs
cmp
in
xor
ret
or
js
in
repz
sub
push
aas
adc
push
dec
push
pop
mov
add
mov
mov
daa
sarl
icebp
sbb
clc
int
insl
pop
nop
je
jae
push
jno
cmpsb
mov
dec
push
imul
nop
shl
pop
arpl
push
inc
aam
adc
push
sbb
inc
dec
mov
mov
aad
cmp
or
adc
dec
jg
mov
add
hlt
cmp
jecxz
repnz
inc
mov
push
sarb
daa
repz
icebp
dec
dec
push
sbb
cwtl
leave
xchg
aas
popf
cmpsl
into
retw
jmp
xchg
enter
lock
pop
jg
insb
popf
pop
inc
inc
jno
push
jae
cmp
in
cld
movsb
xlat
insl
test
or
inc
adc
movsb
test
lahf
or
sbb
dec
icebp
pushf
out
cmc
lods
jns
lret
cltd
mov
ja
stc
js
ds
mov
loop
hlt
inc
ret
cwtl
cmp
inc
sbb
loop
popa
and
jbe
out
push
and
lahf
call
add
outsl
mov
lret
jl
sub
cmp
push
mov
and
push
aam
add
mov
mov
mov
cmp
jne
mov
mov
mov
mov
shrd
shl
mov
mov
shr
xor
mov
xor
or
mov
mov
jmp
rcr
sub
sbb
loope
scas
mov
insb
aad
mov
sbb
add
sbb
jmp
inc
lret
sbb
daa
jns
rolb
setge
insl
sahf
dec
push
and
ret
or
jp
cmpsl
jp
lret
add
fwait
xchg
push
inc
lea
mov
addl
dec
test
stos
stos
dec
sbb
jbe
addr16
mov
mov
ja
rorb
es
lahf
mov
push
inc
fucomp
push
xor
inc
xorb
push
xor
mov
push
call
mov
mov
push
mov
insl
out
or
mov
outsl
add
adcb
or
cmp
pop
jns
mov
lods
cmp
nop
stos
fs
fucomp
push
sbb
hlt
outsb
dec
lea
filds
or
dec
out
jo
mov
cs
add
add
mov
std
dec
xchg
adc
push
fwait
lods
fucomi
push
movl
mov
sti
jge
fwait
pop
stos
mov
flds
cmp
xor
mov
stos
cmpsl
sub
push
inc
gs
pop
dec
push
test
mov
mov
cmpsl
pop
mov
popa
bound
stc
sbb
and
xchg
pop
mov
cmp
pop
mov
xor
loopne
sbb
bound
sbbb
jno
outsb
lds
push
hlt
push
cld
xchg
test
iret
mov
xor
mov
inc
or
in
pop
test
mov
xlat
jbe
mov
in
movl
xchg
fs
pop
jnp
std
lods
pushf
test
mov
add
inc
cmp
mov
testl
or
aam
mov
adc
and
sbb
inc
hlt
mov
je
and
shlb
or
xchg
fldl
mov
push
insb
ret
and
incb
jno
imul
push
mov
adc
add
fs
leave
push
aad
icebp
popf
pop
jb
mov
pop
cs
cmp
aam
cld
push
jns
inc
int3
xchg
and
and
pop
lcall
mov
mov
mov
subl
ljmp
nop
ljmp
cmc
push
mov
scas
mov
adc
lcall
loopne
dec
aad
lods
mov
dec
data16
clc
inc
popf
ffree
loop
je
and
sarb
mov
outsb
test
mov
jbe
xchg
push
cmp
leave
js
pop
xorl
mov
push
addr16
cld
out
inc
scas
in
out
fisttpll
mov
xchg
ds
call
ja
ret
jmp
je
fstpl
and
cmc
pop
sub
push
rcr
mov
pop
dec
in
sahf
out
loopne
xor
lret
popa
pop
xchg
int
push
add
and
enter
and
push
in
shrd
shr
mov
mov
xor
xor
or
mov
movb
movb
movzbl
jmp
adc
nop
dec
mov
mov
add
sbb
cmpl
ljmp
jge
jne
pop
push
pop
testl
push
das
cmpsl
sub
xchg
mov
xchg
sbb
cmc
je
inc
bound
sbb
or
mov
scas
sahf
sarl
mov
outsl
jl
popa
cmpsb
sbb
fnstsw
fmull
xlat
das
movsl
or
test
mov
mov
inc
mov
fwait
inc
rol
xor
push
dec
aam
jge
jo
push
cmp
sbb
and
jge
bound
cmp
jno
fimull
mov
inc
push
repz
dec
inc
cmpl
lret
cmpsl
jae
mov
jecxz
xchg
mov
aaa
notl
cld
push
std
repnz
pop
ja
pop
movsb
mov
into
gs
sbb
jle
out
rcrb
shlb
dec
push
sbb
out
int3
mov
push
inc
mul
pop
dec
inc
das
mov
sub
fdivr
jb
movsl
adc
stc
arpl
add
cltd
add
fidivrs
ja
and
test
fmul
rolb
in
je
mov
push
fstp
fidivl
loop
jge
sbb
ja
xchg
repz
inc
jg
inc
inc
loopne
jle
js
push
nop
push
inc
add
mov
pop
jge
and
or
std
fmul
mov
jge
xchg
outsb
push
mov
das
cmp
out
hlt
mov
dec
mov
jae
jmp
inc
les
inc
sbb
fcoms
aas
repz
cmp
dec
sahf
pop
pop
jecxz
mov
mov
repz
pushf
pop
mov
shrl
movsl
cmpsb
pop
pop
incb
shl
add
lcall
adcb
pusha
sub
jbe
mov
fsubr
mov
and
in
cli
push
mov
mov
dec
lea
loop
cmp
and
and
nop
pop
ficompl
jnp
jo
pop
ret
push
mov
add
in
les
fadds
inc
add
adc
xor
push
mov
lcall
push
pushf
inc
test
inc
mov
mov
mov
xchg
or
or
push
and
rcl
inc
sub
scas
mov
sbb
orb
lds
pop
sbb
cmp
jns
hlt
sbb
adc
adc
cwtl
stos
xor
mov
inc
sbb
mov
cwtl
fcomps
mov
fcmovu
divl
xchg
movsb
dec
sbb
pusha
in
mov
ljmp
jmp
sub
fcompl
jg
push
mov
in
mov
scas
sarb
push
lcall
xchg
mov
or
ss
push
mov
xor
add
push
add
mov
movb
pop
mov
movb
mov
movzbl
cltd
idiv
mov
add
mov
or
mov
add
cmp
jae
mov
mov
shrd
xor
mov
shr
mov
xor
shl
or
jmp
push
test
and
mov
sbb
add
sbb
mov
mov
dec
mov
jb
sti
mov
add
xchg
or
lret
jle
cld
icebp
jbe
iret
mov
loop
push
in
inc
cmovae
adc
and
test
xlat
push
mov
pushf
and
adc
popf
mov
push
jbe
enter
sub
out
arpl
lret
xor
les
pushf
loopne
int3
jns
or
and
popf
or
in
int
xor
jl
sub
cmovs
loope
adc
mov
out
mov
call
test
stc
xchg
add
aaa
pop
adc
push
mov
sub
cmc
dec
or
add
mov
leave
lahf
pushf
mov
sub
adc
mov
mov
jno
inc
push
mov
xor
and
scas
outsl
push
jns
pop
outsl
mov
xchg
repnz
fs
hlt
mov
mov
xchg
insl
icebp
or
aam
lcall
imul
enter
insb
rorl
add
imul
sub
mov
dec
adc
jb
jmp
out
out
pop
faddp
and
sub
lock
pop
je
hlt
adc
cld
int
lret
push
dec
stos
and
sbbb
js
scas
dec
mov
pop
mov
sbb
xor
dec
int
test
sbb
mov
test
mov
xchg
ljmp
inc
xchg
mov
das
nop
je
cmpb
mov
adc
sti
stos
outsw
jp
inc
fbld
or
in
out
dec
mov
dec
cmp
icebp
outsl
dec
dec
xchg
ja
clc
clc
jp
mov
enter
mov
addl
iret
pop
out
adc
enter
into
fisttps
xchg
aam
fadd
test
imul
push
enter
push
jno
into
inc
in
ret
jmp
sub
in
push
xchg
fisttps
testl
mov
adcb
xchg
ss
adc
dec
pushf
stos
popa
xor
aad
popf
cmp
pushf
aas
es
sbb
imul
and
inc
loop
xchg
jne
sbbb
insl
roll
cmpsl
insl
cmp
mov
adc
mov
je
mov
add
pop
fstpt
adc
adc
push
aas
repz
sub
jecxz
dec
cmp
shr
les
dec
cmpsb
mov
lods
imul
or
xchg
sarb
in
icebp
adc
mov
aaa
inc
pop
rcl
xor
loop
lds
call
fnstsw
and
test
fcomi
sub
mov
cmpsb
pop
mov
xor
adc
push
enter
mov
sub
add
ret
push
mov
sub
push
push
push
movl
jmp
push
lods
pop
inc
lret
jo
loope
jl
or
sbb
daa
cmp
loopne
and
mov
push
fldenv
movsb
adcb
jae
and
test
mov
push
dec
lods
mov
mov
cmpsb
cltd
in
sub
loope
std
mov
sbbb
pop
jmp
test
cs
sbb
dec
pop
in
sahf
movb
push
inc
adc
mov
addl
ret
addr16
sub
jl
fcompl
mov
pop
stos
decl
sub
inc
loop
ljmp
scas
pusha
int3
in
jge,pt
fwait
in
pop
jmp
stc
fistps
lock
aaa
out
scas
push
add
adc
pushf
mov
mov
divb
cmp
xor
pusha
adc
in
lahf
inc
or
arpl
push
shll
jno
or
out
pop
addl
gs
sti
cltd
push
out
jle
xor
pop
xchg
shrd
imul
popf
jae
ret
pop
sub
nop
cli
dec
stos
mov
sub
jp
and
enter
movsl
and
xor
scas
clc
hlt
fucompp
ret
pop
clc
popf
ja
sar
lods
push
call
dec
or
jge
inc
pop
mov
inc
sub
les
push
sub
lcall
jbe
imulb
insb
xor
sub
out
mov
jge
arpl
fimull
icebp
repz
call
push
push
xchg
sbb
inc
popf
pusha
icebp
xor
cmp
cmp
xchg
ficoms
out
loop
jmp
pop
rcrb
xlat
cmp
loopne
leave
rol
adc
adc
inc
stc
stos
leave
cltd
into
cmp
mov
sub
les
arpl
ret
xchg
inc
jge
lcall
pop
and
pop
xchg
nop
loop
mov
out
sub
imul
outsb
adc
arpl
repnz
and
imul
data16
outsb
test
test
sub
or
movsl
imul
push
inc
jl
sbb
push
repnz
adc
mov
mov
or
mov
cld
jle
adcl
mov
fistps
cs
jecxz
pop
add
jno
xor
shll
inc
fyl2xp1
in
test
sbbl
pop
inc
aad
inc
stc
mov
lods
mov
stos
scas
repz
push
cmp
mov
jo
mov
mov
mov
popa
aam
test
mov
mov
dec
xchg
out
jmp
rol
test
and
inc
cld
es
add
movl
movl
movl
movl
movl
movl
xor
inc
mov
movl
mov
mov
sub
add
add
imul
add
xor
movl
movl
movl
movl
mov
or
add
mov
and
mov
sub
mov
mov
mov
add
or
jmp
xchg
jne
je
es
je
mov
mov
sbb
sahf
jle
mov
or
jae,pn
dec
rcrb
sub
jg
imul
mov
insl
mov
bnd
lods
dec
test
inc
addb
pop
xorl
dec
mov
mov
imul
xchg
jmp
jbe
xchg
mov
push
int
fidivl
push
lret
push
enter
jl
add
jg
sbb
and
xor
sarb
jle
push
cmp
loope
mov
xchg
pop
js
add
push
lea
or
lods
inc
cmp
dec
push
out
clc
cmp
and
loop
shl
icebp
dec
xchg
les
out
add
je
ds
mov
test
imull
addb
lea
push
repz
jnp
leave
movsl
mov
aam
sti
mov
stos
jno
xchg
and
popf
loop
xor
or
push
sub
imul
out
add
jecxz
shll
push
pop
or
or
in
jecxz
lret
dec
lea
gs
cmp
fcmovbe
jmp
stc
add
xchg
mov
sub
cmpl
lret
loope
cmp
in
mov
shll
pusha
fidivrl
xor
dec
add
push
jae
aad
pop
lea
xlat
jp
lret
pop
aad
push
inc
subl
mov
jmp
xor
adc
push
xchg
or
fldcw
test
dec
dec
cltd
pop
repz
ret
push
stos
dec
sub
lcall
pusha
repnz
mov
dec
ja
test
aad
test
xchg
and
fisttps
add
jb
pushf
ret
popa
mov
sub
jae
sarl
fisubs
sub
dec
ret
inc
xor
jbe
cmpsb
stc
xchg
pop
adc
push
lret
sub
fldcw
iret
gs
scas
sahf
mov
cmpsb
mov
out
push
inc
es
mov
mov
out
push
dec
iret
in
addr16
fimull
leave
test
add
leave
mov
mov
pop
out
stos
fsubl
lahf
in
imulb
and
decl
pop
adc
dec
sub
mov
sbb
push
adc
fistpll
mov
push
inc
jo
add
sub
mov
mov
mov
mov
mov
and
xor
xor
div
lea
mov
add
mov
jmp
pop
dec
ficoms
daa
ss
push
leave
jg
popa
add
sbb
popf
mov
out
cmpsl
arpl
mov
jne
je
or
sub
es
or
icebp
data16
stc
or
jne
sub
xchg
xchg
jo
loop
jo
and
dec
xchg
xchg
pop
subb
dec
cltd
cmp
fldcw
addr16
fstps
mov
jae
cmpl
mov
pop
stos
cmpsl
dec
xor
cltd
push
movsl
lret
inc
push
fwait
scas
cmp
or
mov
or
pop
in
lock
lahf
mov
or
fsubl
test
ret
lock
cmc
or
int
cmp
fldl
push
notl
xor
in
adc
lcall
push
es
cwtl
dec
lret
test
adc
repnz
dec
jae
push
xchg
lods
retw
push
inc
test
cmp
pop
cs
or
sub
xchg
push
inc
push
pop
jno
out
xchg
cmpb
stos
adc
std
xlat
and
out
dec
sub
test
jl
jmp
add
pop
mov
pop
push
pop
notl
dec
pop
mov
test
xor
flds
dec
hlt
sub
cmp
add
sbb
adc
cmp
incl
rorl
push
pushf
icebp
sahf
xlat
gs
pop
and
int
mov
fsubrs
std
jno
sub
lret
and
mov
xchg
cmpsb
cmp
out
mov
fsubs
dec
sub
test
inc
jno
mov
out
mov
shl
out
or
clc
cmp
inc
das
sbb
mov
idivb
jae
mov
fnstsw
lret
lods
nop
sbb
popa
or
hlt
adc
test
pusha
ljmp
aad
jo
mov
out
data16
sub
not
jmp
in
push
adc
xchg
in
or
addr16
add
outsl
xchg
ds
incl
cltd
sub
jecxz
inc
rcl
out
and
dec
iret
cli
mov
jmp
add
cld
xchg
push
jmp
jno
xor
repnz
push
xchg
pmaddwd
pop
popf
jp
fmul
rclb
lret
shrb
dec
push
filds
test
outsb
sbb
push
push
fisttps
fidivs
add
mov
pop
imul
sub
inc
push
sahf
bound
pop
mov
push
in
subl
mulb
xchg
out
adc
test
dec
mov
sbb
lret
lahf
pop
mov
nop
into
cmp
shll
in
divl
mov
rolb
ds
inc
scas
xor
mov
int
cwtl
ds
dec
inc
pop
je
sub
mov
and
mov
imul
mov
sub
cmp
jbe
push
pop
mov
mov
movl
movl
movl
mov
movl
movl
xor
movl
mov
mov
sub
div
mov
xor
mov
div
mov
xor
div
xor
mov
mov
imul
mov
add
div
mov
mov
sub
sub
xor
div
mov
add
cmp
jae
jmp
sbb
dec
push
dec
and
and
xor
sbb
ja
loopne
cmc
sub
daa
xchg
test
add
icebp
mov
or
cs
in
sbb
xchg
adc
inc
out
aas
mov
dec
fstp
adcl
sbb
pop
mov
add
fimull
xor
xchg
cmp
scas
xor
addr16
mov
stos
cli
loope
xor
daa
xor
or
pop
or
sub
hlt
hlt
adcl
fsts
jae
dec
pop
jl
mov
cmpl
imul
cmp
jmp
push
push
fisubrs
sahf
repnz
and
test
mov
or
cmp
cli
jne
test
adc
add
lods
rcl
mov
inc
jns
pop
test
push
pop
jmp
add
or
rcr
iret
pop
mov
lret
jae
movsl
arpl
rcll
mov
test
pusha
inc
xchg
push
dec
or
jae
sahf
pop
aam
pop
cmpsb
mov
ss
push
mov
ljmp
xchg
mov
jl
jns
jns
out
lret
int
xor
mov
or
pop
push
fdivr
sarl
movsb
lods
ds
fucomp
adc
in
sar
adc
jge
fiadds
sub
inc
mov
dec
pop
push
hlt
sub
stos
lods
jp
imul
push
inc
mov
enter
push
xor
shll
clc
aaa
ret
fiaddl
int3
push
jne
or
roll
push
mov
push
sbb
sub
sbb
mov
ret
testb
fimull
sub
repz
sbb
push
mov
cs
cmp
dec
dec
addr16
push
cmpsb
stc
mov
aas
sbb
push
add
lcall
jle
div
mov
push
xor
mov
xor
js
xchg
leave
ljmp
out
xchg
and
pop
je
xchg
frstor
inc
xchg
ret
mov
ret
add
jno
xchg
pop
in
xlat
stc
xchg
xor
iret
dec
loop
add
xchg
xchg
jae
fmull
xchg
or
mov
imul
fidivs
imulb
push
addb
cmpsb
jmp
rolb
xchg
mov
mov
sarl
das
femms
push
xchg
ss
inc
shll
sti
cld
push
push
lods
or
push
lahf
insb
dec
lds
in
fsub
inc
lahf
dec
out
repz
aam
sahf
cwtl
mov
mov
js
sarl
sub
loopne
cmp
add
inc
fdivrl
cmp
add
inc
in
int
add
jmp
push
mov
fistpl
mov
negl
sbb
mov
sbb
in
xchg
lock
add
xchg
xchg
push
in
adc
decb
ljmp
rolb
push
dec
shl
and
jg
push
sbbb
or
mov
loope
xchg
test
insl
sub
ret
dec
popf
movsb
inc
jge
and
andl
pop
sti
test
or
pop
xchg
imul
xor
xchg
cmp
aam
arpl
jno
aam
jne
jge
sbb
fbld
ja
icebp
mov
scas
repz
xlat
outsb
pop
repnz
xor
push
and
inc
imul
xchg
dec
addr16
ret
iret
mov
sub
jge
inc
test
push
je
hlt
shrl
fists
sub
jnp
lea
sbbl
lcall
dec
dec
leave
add
mov
shrl
rorl
sub
inc
roll
push
jl
call
iret
out
dec
add
jb
add
test
mov
addl
push
sbb
in
outsl
or
add
leave
test
int3
test
inc
daa
add
stc
cmp
leave
add
sub
jecxz
mov
push
xchg
xchg
popa
cmpsl
aad
xchg
jo
xchg
pop
push
icebp
fists
add
fsubrs
sbbl
int
jmp
push
pop
xor
inc
fucom
sbb
mov
mov
das
or
ds
add
test
xchg
push
sbb
enter
in
xor
xchg
xor
xchg
ja
sub
push
mov
sbb
pop
pop
xor
loop
pop
test
pop
mov
mov
pusha
jecxz
dec
cwtl
add
ret
outsb
xchg
mov
jno
mov
leave
cmc
cmc
jno
dec
outsl
mov
xor
out
or
rclb
dec
ljmp
dec
std
faddl
jmp
add
and
inc
or
stos
movsb
push
ds
stc
xchg
rol
mov
sti
addr16
sti
popf
xchg
cmp
and
inc
push
mov
add
aam
stos
mov
call
outsl
cld
popa
addr16
dec
testl
push
std
test
out
cmpsb
dec
orb
mov
into
sub
xor
pop
mov
sub
pop
cmpsb
aaa
push
cwtl
xor
push
notb
jbe
out
mov
fistps
nop
sbb
dec
cld
fimuls
adc
les
rol
inc
call
movl
jmp
aas
mov
mov
dec
mov
xorl
push
sbb
movsl
aam
pop
fwait
clc
mov
das
pop
jp
sbb
ljmp
mov
cmpsb
call
and
jmp
pop
out
popf
add
enter
adc
mov
in
xchg
arpl
xchg
ja
pop
lahf
bound
lea
cmp
cmpsb
enter
lds
or
call
inc
adc
insl
stc
scas
ret
xchg
sti
inc
mov
mov
ret
push
adc
fstpl
inc
mov
jno
arpl
vmovq
jne
pop
jg
xchg
or
jne
dec
add
sbb
jmp
dec
inc
arpl
add
loope
lods
and
pop
test
incl
insb
adc
lods
mov
ds
add
int3
fsubs
sahf
fiaddl
adc
jns
imul
pop
mov
jl,pn
fs
xor
imul
lds
fstp
std
pop
jae
mov
adc
fldt
inc
shrb
mov
inc
je
popa
sbb
dec
sbb
stos
push
inc
sbb
out
nop
cs
testl
adc
rcrl
lret
mov
mov
in
jae
inc
inc
cmp
testb
subb
or
mov
arpl
and
mov
fcmovnbe
lret
xor
iret
je
scas
cmp
jge
out
push
incl
fs
icebp
xchg
jae
movl
sbb
pop
aam
std
add
xchg
test
ja
leave
das
lea
enter
sahf
jo
xor
mov
lods
loop
inc
dec
adc
call
stc
xchg
push
test
push
sub
mov
inc
cmc
cmp
cmp
mov
inc
mov
pop
ss
jno
mov
lcall
or
mov
cwtl
xor
data16
dec
pop
loope
add
mov
and
dec
cli
sub
dec
sub
sub
jbe
adc
mov
mov
pop
ljmp
in
sti
or
call
les
inc
xchg
lods
and
es
daa
insl
ljmp
cmc
bnd
sub
or
call
jne
loope
insb
dec
inc
rcr
outsl
not
and
stos
dec
jmp
cmp
adc
fwait
xchg
inc
xchg
lahf
adc
movsb
lahf
dec
inc
and
lods
inc
and
mov
fsubs
movzwl
lret
mov
push
pop
div
mov
jmp
lahf
ds
xor
lcall
xor
sbb
test
sbb
mov
fbld
add
cli
or
loope
mov
xchg
adc
xchg
push
cmp
mov
jo
jp
test
xor
inc
ljmp
adc
das
and
popa
jmp
inc
push
inc
and
nop
adc
pop
insl
aam
inc
push
jne
add
jb
loope
sahf
pop
mov
mov
mov
xchg
insl
cmp
in
and
adc
xchg
xchg
or
dec
out
cmpsb
inc
ljmp
sbb
outsb
adc
sbb
push
push
mov
mov
adc
sbb
sub
out
inc
xchg
inc
mov
or
mov
negb
xchg
fcoms
mov
stc
pop
mov
scas
inc
enter
mov
pusha
lea
jge
rcrl
stos
and
push
jnp
inc
fwait
dec
out
jo
test
sbb
imul
push
mov
ds
mov
rcl
sub
cld
mov
inc
ss
shll
mov
js
add
in
imul
ja
cli
adc
aam
in
insl
sbb
into
adc
sbb
jle
xor
addl
cs
jno
inc
pop
pop
inc
adc
xorl
sub
test
xor
sbb
into
pop
fnsave
outsb
mov
xchg
mov
xchg
imul
dec
jmp
out
push
pop
cld
sbb
add
cs
add
mov
and
mov
xchg
cmp
in
movl
dec
add
mov
mov
dec
mov
sahf
cld
dec
push
repnz
adc
mov
icebp
fistpl
sub
and
and
jle
movsl
mov
or
sub
addl
jne
call
loop
fmull
mov
xchg
push
hlt
dec
or
mov
mov
aam
std
pusha
ret
rol
cmp
dec
xchg
negb
mov
mov
push
jb
rcrl
in
cmp
push
ja
dec
pusha
mov
mov
outsb
jge
and
sahf
repz
sbb
xchg
dec
shlb
add
add
cmpsb
add
fsubrs
call
mov
inc
xor
xor
jecxz
arpl
fsubl
cmp
cmc
mov
inc
jmp
arpl
jnp
shlb
leave
lret
push
lock
xorb
lret
pop
mov
inc
add
add
ret
fmull
rorl
sub
add
and
mov
sub
mov
sub
mov
sub
mov
mov
mov
mov
xor
add
xor
and
lea
mov
mov
add
div
mov
mov
sub
xor
div
add
cmp
jb
xor
inc
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
add
and
xor
mov
sub
movl
movl
mov
movl
movl
mov
mov
imul
xor
or
xor
mov
sub
mov
mov
mov
jmp
push
push
push
scas
sbb
inc
pop
jns
jo
or
mov
out
sbb
or
or
out
iret
in
inc
push
push
add
in
fdivrl
jne
stc
loop
cmp
lock
sahf
push
xchg
and
and
push
sbb
pop
or
cltd
std
test
mov
dec
test
jle
test
mov
iret
ret
and
dec
rdmsr
xchg
dec
test
or
fs
or
pop
dec
add
or
push
mov
shrb
and
pop
jo
or
cld
dec
push
jno
add
pop
insb
add
mov
jle
stos
pop
cmpsl
lret
sti
les
loopne
stos
scas
sbb
jmp
fdivrs
push
pop
cmp
dec
dec
aam
xchg
mov
out
sub
filds
mov
xor
and
xor
inc
dec
loope
scas
pop
or
rorb
fadds
dec
std
push
inc
pop
cmp
sub
pop
sbb
repz
mov
xchg
loop
out
fwait
adc
pop
cmp
mov
lret
lods
bound
mov
dec
aas
push
lcall
sti
aam
dec
es
ret
dec
mov
cltd
push
dec
out
sbb
mov
aad
repnz
cmpsl
insl
sub
cmc
sub
dec
mov
ss
lea
movsb
pusha
xor
test
sbb
scas
inc
imul
mov
or
inc
rcr
push
mov
lods
fwait
add
sete
fimuls
outsw
jle
repz
test
rcl
in
stos
pushf
mov
shl
jnp
in
cmp
sti
les
and
mov
insl
jns
popf
js
adc
int3
push
pusha
push
pop
sarl
movsl
push
pushf
cmp
and
pop
jno
xchg
add
pop
cmp
cli
add
adc
mov
out
mov
sbb
push
push
xchg
push
loopne
inc
dec
imul
cmp
adc
pop
imul
sub
jle
xor
lods
daa
in
mov
mov
mov
pop
jmp
stos
leave
add
mov
xor
sahf
aam
jbe
test
and
push
mov
shlb
xor
js
cmp
add
cmp
xor
mul
jp
cmp
lahf
fdivrs
pop
push
mov
jl
mov
push
pop
int3
jo
ret
out
out
cld
outsl
mov
stc
inc
stos
mov
cmpsb
mov
dec
add
mov
push
fidivrl
or
mov
add
ret
div
mov
mov
sub
mov
mov
mov
jmp
jmp
push
and
cmp
mov
test
sbb
nop
and
cli
sbb
out
in
int
scas
testb
and
pop
insl
xor
dec
iret
mov
mov
push
in
adc
mov
insb
jo
lds
pop
shlb
add
cmpsl
sub
mov
dec
xor
jne
xchg
mov
adc
sbb
cwtl
loopne
test
call
sbb
dec
inc
inc
sub
push
fwait
dec
mov
in
mov
sub
roll
jae
inc
cld
in
xchg
jp
mov
sbb
xchg
sub
pop
aam
jnp
xchg
in
xchg
mov
imul
fiadds
lret
push
jg
aad
popf
test
cmpsb
pop
sub
rolb
jp
pop
push
icebp
jb
int
jl
xor
outsb
push
mov
sub
in
dec
sub
data16
mov
pusha
pop
add
stc
mov
mov
add
mov
gs
xlat
ljmp
mov
lret
dec
push
fprem1
pcmpeqd
pop
sti
out
data16
shrl
out
outsl
js
lcall
shll
push
fwait
outsl
in
push
insl
jo
test
int
aas
in
cs
dec
mov
sarb
xorb
jno
mov
xchg
and
sub
xchg
xor
mov
sub
adcl
xlat
inc
lret
std
jbe
push
adc
bswap
popf
xchg
ficompl
nop
test
mov
jp
shl
inc
popa
rcrb
and
push
subb
pop
cmc
add
movsb
fisubl
les
push
rcll
loope
cmp
adc
cmpsl
test
outsb
nop
xchg
inc
push
jle
insl
mov
mov
test
jp
xchg
and
test
insb
addr16
cmp
lret
push
cmp
inc
mov
imull
pop
jo
dec
or
data16
cwtl
mov
inc
sub
imul
push
or
add
stos
adc
jg
or
jecxz
inc
mov
lods
lret
cmp
xchg
std
mov
inc
sub
xchg
xlat
mov
sahf
es
ret
pop
inc
xchg
jge
mov
add
out
daa
jne
rolb
orb
out
ret
mov
out
add
adc
leave
popa
xchg
lret
sub
mov
jnp
mov
pushf
adc
mov
mov
mov
mov
sub
sbb
test
out
xor
xchg
xor
adc
xchg
mov
mov
imul
mov
imul
or
mov
or
xor
lea
mov
and
add
xor
add
cmp
jne
pop
pop
pop
leave
ret
push
mov
sub
push
push
movl
jmp
hlt
aam
adc
pop
and
cmp
sbb
push
ficompl
sbb
adc
sbb
into
adc
and
xor
pushf
inc
cmpb
xor
sbb
xchg
lret
mov
pminub
mov
xor
mov
test
jmp
mov
cmpsb
int3
fucomi
jbe
dec
stos
mov
jl
push
out
jno
push
and
sahf
jmp
pop
cwtl
and
popa
pop
dec
add
stc
iret
roll
out
xlat
cmp
inc
cmc
mov
sub
fldt
sti
dec
cmp
lcall
add
xor
jnp
dec
popa
xchg
shrb
insb
movsl
mov
rolb
jmp
mov
push
inc
and
xchg
mov
inc
rcl
sti
movsb
test
pushf
sub
lcallw
mull
in
xchg
popf
cwtl
dec
xor
and
push
xor
inc
andl
jno
je
pop
int3
sbb
jmp
je
stos
scas
mov
mov
and
int
adc
jp
lods
push
insb
cs
mov
subl
inc
mov
inc
add
stc
mov
adc
loope
ds
rol
add
xor
into
pop
outsl
ret
xchg
ljmp
daa
or
pop
leave
dec
loopne
xor
leave
test
add
arpl
mov
push
mov
adc
shlb
std
in
pop
int
out
es
mov
and
and
or
lds
cmp
cmp
subl
xchg
iret
mov
adc
fs
call
mov
imul
enter
lahf
stos
scas
outsl
and
aam
leave
jnp
sub
push
data16
xchg
je
insl
inc
dec
lock
xor
in
lret
popf
ja
adcb
jnp
dec
lea
and
cli
movsl
mov
jb
in
loop
add
dec
lods
add
ret
test
iret
insl
in
mov
mov
fwait
or
mov
cmp
mov
push
pop
jns
mov
stos
mov
cli
ljmp
adc
sub
inc
or
rorl
xchg
mov
mov
jbe
fiadds
gs
out
fwait
pop
cmpsl
jne
xchg
stc
sti
and
bound
adc
test
in
faddl
cmpsb
test
push
xor
mov
arpl
ret
xchg
push
in
push
cltd
fistpl
mov
mov
inc
xor
adc
jl
jge
sub
pop
jle
and
sbb
xchg
call
scas
push
jne
push
sbb
mov
dec
movsb
push
inc
daa
daa
jbe
jecxz
fwait
sub
jmp
dec
sbb
out
pop
xchg
or
loope
pop
pop
into
sub
jbe
test
lret
xor
rcll
mov
xor
mov
xor
fidivrs
je
xor
test
scas
adc
sbb
movsb
test
mov
hlt
ret
flds
in
test
mov
cld
loopne
cmp
dec
sub
nop
addr16
pop
dec
ror
jbe
sti
jle
fstp
xor
jbe
in
and
add
mov
scas
sub
mov
and
mov
inc
cld
ret
add
clc
add
or
mov
lea
jmp
lcall
ficomps
inc
dec
pop
jle
inc
sbb
sbb
adc
sbb
lods
push
divl
fistl
mov
in
pop
test
test
stos
rorb
stc
dec
js
outsl
push
cmp
pop
xor
adc
jle
push
cmp
pop
roll
jbe
roll
jns
xchg
sbb
inc
xorb
mov
pop
cli
inc
pop
push
add
das
mov
lret
sti
mov
dec
aad
push
push
mov
pop
lret
test
in
pop
mov
addr16
mov
imul
in
lret
dec
add
aas
pop
sbb
and
loopne
cltd
out
stos
sbbb
mov
cmp
jne
adc
pop
pop
loope
sub
sub
clc
arpl
scas
mov
push
cmpsl
and
es
lahf
mov
sbb
add
mov
aad
cmp
cmpb
sub
out
xor
test
mov
adc
jl
fldenv
and
mov
inc
ljmp
insb
ljmp
pop
cmp
adc
adc
out
mov
decb
pop
sub
jnp
jecxz
dec
in
add
or
int3
clc
ret
nop
inc
cmp
out
sarl
push
test
mulb
rcrl
jmp
sbb
cmp
es
jnp
test
sbb
mov
mov
xchg
xchg
adc
or
and
add
loope
je
imul
jge
das
loop
fstl
inc
or
mov
ret
lret
sub
test
push
es
lret
cmp
cmp
sub
movsl
sbb
shll
rcl
out
lods
push
pop
loop
or
and
aaa
adc
dec
mov
xchg
push
sbb
test
mov
cld
push
stos
rcrl
cmpsb
push
sub
orb
fsts
arpl
mov
shll
dec
mov
jb
sub
hlt
incb
xlat
push
fwait
enter
add
daa
outsb
sub
sbb
adc
and
mov
adc
cmp
add
mov
mov
cmp
xchg
or
adc
ret
push
loope
dec
pop
inc
aaa
dec
mov
mov
mov
inc
sub
sti
lret
fnstsw
inc
out
inc
add
push
adc
dec
orl
leave
jo
fcomps
cmp
or
sahf
inc
jmp
dec
mov
push
nop
dec
fiadds
sub
jecxz
std
cmp
xor
sbb
movsl
push
pop
in
enter
jecxz
enter
sub
mov
xchg
jbe
jbe
rcr
daa
sbb
pop
push
xor
mov
std
sbb
popf
icebp
inc
shrl
mov
inc
mov
scas
sub
lods
sti
sub
push
xlat
rcr
filds
pop
loop
mov
mov
mov
push
adc
xlat
hlt
xchg
icebp
cmp
inc
add
mov
out
add
test
ret
pop
es
std
xchg
xor
or
xor
scas
pop
jno
rcrb
cmp
leave
dec
mov
pop
mov
outsl
sub
jge
enter
and
ja
divb
shrl
shll
mov
xchg
mov
mov
movl
movl
mov
mov
and
xor
jmp
out
icebp
aaa
insb
aaa
sub
mov
or
sbb
jmp
imul
jnp
int
testl
ret
jne
cmpsl
out
xor
andb
hlt
mov
xchg
lods
xchg
test
and
sub
loopne
inc
cmp
bound
sbb
push
mov
sbb
rorl
mov
clc
mov
hlt
pusha
mov
test
mov
push
cmpsb
pop
lahf
dec
arpl
mov
lock
pop
fnstsw
add
jge
fwait
jge
and
cld
sub
outsb
popf
sti
out
or
jb
loope
out
out
sub
testb
push
cmp
xchg
jb
subb
xor
popf
inc
mov
pop
inc
add
mov
sarl
mov
rorb
push
push
push
jecxz
mov
xlat
push
jo
fisubs
leave
arpl
int
xchg
popa
add
cld
lds
mov
ljmp
cmp
mov
in
xchg
push
in
lahf
mov
or
sub
popa
push
adc
dec
push
dec
push
or
sbb
adc
notb
push
jg
lea
jmp
int
xor
pop
ja
jl
popa
out
in
xor
enter
sbb
sbb
mov
out
fiaddl
jle
fidivrs
iret
push
xlat
cltd
mov
mov
jge
add
adc
sbb
mov
xor
xchg
mov
adc
sbb
mov
dec
push
jae
movsl
mov
fwait
pop
inc
xor
sub
js
inc
into
loop
js
fnstsw
std
inc
jae
outsl
add
testb
ftst
mov
jb
cmp
ds
dec
and
lea
or
popa
pop
adc
icebp
mov
ret
inc
cmp
loope
ret
push
add
xlat
fstpl
dec
iret
inc
aas
idiv
inc
aam
or
and
and
stos
data16
and
jnp
faddl
sbb
lods
fwait
jl
push
xlat
mov
cmp
mov
adc
cmp
ds
les
mov
rcl
ss
mov
dec
lret
jg
inc
daa
adc
pop
xchg
fcomp
or
pusha
lock
stc
shl
dec
xchg
add
in
push
ret
and
push
out
aas
aas
int
mov
mov
sbb
pop
push
xchg
subb
or
cwtl
adc
xchg
xchg
pop
ss
adc
in
ret
mov
out
hlt
adc
scas
lods
sbb
xor
orl
sti
shl
loopne
adc
mov
sub
insb
xorl
push
imul
and
sub
adc
xlat
jnp
jle
push
push
inc
xor
pop
test
repnz
push
cmp
xchg
push
push
mov
mov
call
fisttpll
jns
ja
aam
cmp
xchg
cmc
push
adc
xchg
popf
in
sub
fcmovbe
jecxz
xor
lcall
sbb
add
sbb
shll
jmp
lcall
mov
sub
insb
leave
bnd
adc
mov
fdivs
jb
rolb
int3
adc
pushf
sbb
jge
adc
repz
imul
xor
lea
mov
movl
movl
mov
xor
push
pop
div
jmp
jb
pop
in
sbb
push
lret
rcrb
lea
mov
xor
sbb
mov
add
push
nop
push
scas
mov
mov
cmp
repz
ja
mov
out
gs
out
stos
lea
mov
in
ret
dec
sub
xchg
enter
xchg
cmp
jbe
in
ficoms
movsl
adc
mov
inc
cmp
sub
xchg
lahf
pop
adc
xchg
lcall
add
mov
ret
cli
xchg
jb
cli
cmp
sub
xor
decl
and
lret
xchg
shr
push
push
pop
rclb
inc
mov
insb
push
jae
popa
leave
lods
lds
rorb
hlt
bound
xor
jecxz
mov
pop
lcall
mov
adc
jg
es
stc
add
xchg
cmp
sahf
sub
stos
fsubs
imul
das
ds
mov
or
jg
cmp
andl
aad
orl
cmp
sti
mov
inc
or
sub
push
movsl
mov
daa
nop
movsb
or
push
mov
hlt
std
add
xor
outsb
xchg
cltd
sbb
movl
xor
push
cltd
je
int3
out
xchg
sub
rorl
arpl
push
push
fildl
jns
jmp
repnz
stc
sahf
cmp
mov
adc
and
enter
push
popf
adc
mov
inc
iret
cmpb
out
push
push
repnz
imulb
aaa
fnstcw
adc
push
mov
das
es
jg
out
push
add
jo
mov
mov
add
pusha
inc
inc
fdivrl
xor
jne
stos
xchg
imul
out
push
lods
cs
arpl
sbb
or
sub
scas
rol
xor
xor
hlt
daa
xlat
pop
mov
dec
xchg
iret
test
xchg
xchg
in
pop
dec
repz
lcall
out
out
push
fiadds
out
jno
pushf
mov
sbb
pop
out
inc
orl
push
in
pop
mov
adcb
test
sub
pop
cmpsb
movsl
out
in
loop
jno
movsb
out
mov
repz
xchg
jp
xor
xchg
adc
pop
xor
push
mov
lcall
xor
cltd
push
mov
and
push
xor
rorl
dec
ds
jno
sub
mov
inc
jae
cmpsb
arpl
cltd
sahf
lret
rorl
in
dec
and
xchg
sarb
insb
dec
sub
stos
leave
enter
xor
inc
fisubs
incb
and
xchg
and
mov
sbb
cmc
pop
popl
add
pop
fcmove
data16
xchg
mov
or
jmp
jecxz
push
out
dec
and
loopne
enter
add
adc
ss
repnz
dec
xchg
dec
das
mov
xchg
lret
pop
push
push
jecxz
mov
push
call
jns
jno
out
cwtl
cs
bound
mov
iret
movsl
scas
mov
outsb
out
sti
push
sub
stc
cmpl
int3
push
pop
sbb
vrsqrtss
push
daa
cwtl
xor
stos
push
push
popa
ret
lret
dec
cld
xor
push
add
and
mov
sub
mov
movl
movl
movl
mov
mov
lea
mov
div
mov
lea
mov
movl
movl
movl
mov
mov
xor
sub
mov
sub
xor
mov
movl
pop
mov
movl
movl
mov
mov
mov
xor
xor
div
mov
and
sub
mov
movl
movl
movl
movl
movl
movl
mov
add
mov
xor
mov
or
mov
or
mov
and
mov
sub
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
add
adc
or
mov
or
or
mov
mov
or
mov
sub
mov
sbb
mov
or
or
add
mov
adc
mov
movl
movl
movl
movl
movl
movl
movl
xor
inc
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
movl
mov
movl
movl
mov
or
add
mov
or
mov
sub
mov
sub
imul
add
mov
push
mov
lea
mov
xor
div
mov
lea
push
mov
mov
push
push
jmp
fmull
fiaddl
clc
push
mov
jle
mov
sbb
jbe
cmp
cld
lahf
cwtl
aas
clc
add
sarb
pop
xor
adc
xchg
js
push
fwait
xchg
enter
push
sbb
xchg
sub
nop
push
loope
jle
fsubs
mov
loope
xor
ss
add
xlat
cli
mov
out
clc
addr16
push
or
movsl
adc
ret
push
mov
xchg
jbe
icebp
loop
fwait
push
ss
or
mov
push
in
nop
pop
lcall
adc
jl
imul
mov
fmul
and
out
push
and
repz
and
sub
xchg
ja
lahf
arpl
xchg
sbb
cltd
aam
push
je
mov
dec
cmp
pop
fidivs
pusha
and
mov
test
cmp
xchg
aad
clc
xchg
sbb
cmpsb
popa
iret
imul
and
sbb
jae
adcl
jbe
mov
ds
enter
sub
loopne
imul
adc
leave
jae
test
mov
push
pop
in
outsl
inc
push
rcrb
cmp
jecxz
lret
stos
fbstp
xor
ds
jbe
xor
out
int3
add
xchg
mov
test
push
sub
lea
pop
mov
lahf
sub
je
int3
jno
fidivrs
out
lods
adc
in
lahf
adc
cld
mov
sbb
dec
das
cli
jmp
mov
pop
gs
inc
jp
jecxz
pop
mov
mov
mov
shlb
subl
jp
hlt
test
ljmp
jg
cmp
clc
jno
lret
mov
adc
mov
xor
stc
cmpsb
inc
cli
add
adc
enter
cmp
xor
sub
movhps
pushf
out
cmp
adc
mov
xor
adc
aad
jp
jae
pop
fldcw
adc
inc
shrl
lret
mov
sbb
popf
pop
fwait
sub
cld
addr16
mov
repnz
jne
xchg
cmp
cli
stc
push
call
mov
push
or
pop
jecxz
rorl
mov
adc
mov
and
imull
cmpl
or
aas
roll
cmp
push
add
mov
lock
lcall
in
cmp
and
fistl
cmp
or
mov
xchg
cltd
js
sbb
or
inc
test
faddl
pop
mov
lock
sbb
mov
push
popa
inc
shl
add
inc
pushf
and
xor
lret
mov
fs
add
push
stos
imul
dec
leave
ja
pop
pop
in
stos
sbb
jecxz
hlt
mov
cmp
int
mov
test
dec
dec
in
mov
test
movsb
cld
je
mov
adc
rclb
pop
mov
in
push
insb
mov
adc
fisttps
xchg
hlt
rclb
jae
xchg
pusha
leave
ret
sub
je
cmp
int3
arpl
shr
sub
fidivl
stos
adc
inc
add
sar
pop
sub
cmp
dec
mov
or
ljmp
ret
add
decl
call
or
or
push
push
call
mov
mov
xor
mov
mov
mov
and
jmp
xchg
fistl
sbb
sbbb
not
jo
mov
sbb
jg
in
xor
ret
xchg
xor
mov
dec
mull
loope
test
sti
or
sahf
pop
mov
sahf
arpl
sub
mov
pop
out
stc
jecxz
push
pushf
fnstcw
adc
mov
shlb
mov
testb
enter
in
mov
int3
call
pushf
push
add
push
call
ja
divb
xchg
testl
sub
shrb
adc
inc
push
pop
ror
add
mov
leave
or
cli
cwtl
lds
push
mov
movsl
mov
cld
lods
popa
jno
or
sub
xor
dec
fs
and
pop
int
push
test
add
fsubs
lds
imul
repz
cmpsb
repz
cs
je
cmp
pop
push
lods
mov
test
enter
mov
enter
jb
inc
shl
pop
sub
push
arpl
mov
push
fwait
sub
jmp
sahf
cmpsl
or
repnz
mov
in
imul
push
xchg
sbb
xchg
sub
push
mov
ljmp
push
xchg
cmp
jo
mov
int
cwtl
movsb
sub
repnz
mov
cmpsb
adc
xchg
int3
ds
lahf
les
cwtl
dec
xor
xor
jl
add
out
sub
add
sbb
pusha
dec
rorb
pop
loopne
leave
mov
adc
repnz
mov
and
in
jmp
lahf
pop
stos
ficomps
das
inc
cmp
fcmovbe
jecxz
popf
nop
fcmovne
icebp
das
lret
add
mov
movb
out
stos
push
cmp
cmpb
inc
cmp
dec
imulb
xlat
cmc
lods
mov
movsb
iret
repnz
push
xchg
inc
les
mov
push
xor
push
lcall
xor
push
push
daa
insb
imul
fsubrs
cltd
mov
mov
dec
adcl
iret
mov
inc
in
stos
repz
rorb
pop
lret
test
or
and
mov
mov
int3
scas
lea
loopne
rolb
out
cmp
lea
inc
push
mov
jmp
mov
clc
idivl
mov
inc
xchg
addr16
cmp
fdivs
inc
cs
pop
pop
rcrb
mov
inc
data16
shll
sbb
fidivrl
leave
mov
adc
inc
and
js
jmp
fwait
std
loopne
and
jnp
popf
test
add
pop
dec
mov
mov
enter
sub
sub
int
iret
int3
xor
xchg
lcall
adc
xor
jle
mov
adc
pop
movsl
sbb
inc
sbb
pop
je
hlt
ja
cmp
in
inc
sbb
or
mov
jl
inc
jno
rorb
inc
cmc
cmp
cmp
xor
out
je
cmc
jb
pop
inc
icebp
in
push
push
cltd
push
insb
xchg
or
in
add
pop
pop
addr16
in
lcall
sub
into
xor
cmpsl
cmp
pop
push
lret
outsl
add
lea
xor
push
lea
call
mov
mov
mov
sub
xor
imul
add
xor
xor
mov
div
cmp
jne
mov
xor
mov
div
mov
mov
xor
sub
mov
xor
sub
or
lea
push
mov
push
pop
div
mov
xor
div
mov
mov
xor
xor
div
imul
sub
push
mov
add
push
mov
sub
mov
pushl
call
mov
mov
lea
mov
incl
mov
mov
xor
shld
shl
mov
mov
xor
xor
cmp
jne
cmp
jne
mov
mov
jmp
lea
mov
mov
mov
mov
mov
sub
mov
mov
mov
sub
mov
movl
movl
mov
mov
mov
mov
pushl
pushl
pushl
pushl
pushl
push
push
pushl
mov
call
mov
mov
pushl
call
mov
push
add
push
push
jmp
mov
push
sbb
sbb
cmc
cmp
int
jl
mov
sbb
adc
sbb
aam
scas
dec
mov
iret
cld
pushf
mov
mov
cmpsl
out
pop
add
popf
fnstcw
je
das
call
mov
lcall
test
mov
lret
incl
or
popf
cmp
leave
mov
js
out
adc
movb
pop
divb
dec
or
mull
fs
outsb
icebp
js
hlt
cmp
daa
xchg
sbb
push
jae
mov
in
adc
xor
cld
sub
bound
clc
xchg
fcmovb
lret
mov
sbbb
cmp
sbb
xlat
iret
fsubs
aam
push
add
mov
daa
or
aas
movsb
cmp
dec
dec
adc
xlat
jnp
subl
int
dec
or
popf
mov
sub
aaa
insb
test
dec
aad
and
arpl
mov
aad
pop
fbld
fwait
pop
out
pop
jmp
xchg
je
jg
mov
jae
push
mov
add
frstor
pop
mov
add
rcl
cmp
dec
fdivrl
imul
aad
jns
movsl
sub
xor
leave
outsb
seta
addb
push
or
fsubr
outsl
out
sti
ljmp
dec
inc
ffree
push
cmp
js
mov
es
inc
pop
das
add
mov
mov
aaa
jl
xchg
dec
push
fs
int3
or
sbb
stos
scas
push
xorb
stos
xor
jle
imul
sub
mov
test
shlb
mov
xchg
xchg
movsl
cmc
dec
and
movsl
push
aam
mov
mov
jl
int
popf
pusha
fs
push
mov
loope
mov
loopne
or
mov
xchg
fimuls
or
je
aaa
gs
xor
cltd
cs
fnstsw
fstps
mov
mov
mov
cld
inc
push
add
out
bndldx
pop
int
ret
xlat
dec
mov
icebp
push
push
jno
mov
lret
incb
inc
adc
or
sub
leave
cltd
xchg
les
pusha
std
test
push
xor
sub
test
aad
jne
mov
and
dec
xorl
cwtl
arpl
rcrl
hlt
push
jg
inc
add
add
push
outsl
mov
test
and
outsl
add
in
pop
lds
ljmp
mov
mov
outsl
add
sub
lods
xchg
adc
push
rol
jns
pop
pushf
adc
push
inc
call
shr
fdivr
adc
shll
cmpsb
xorb
aad
add
push
or
push
mov
in
pop
and
test
mov
jb
std
je
dec
nop
adc
pop
cmpl
pop
xchg
xor
cmpsl
inc
adc
cld
push
repz
sbb
xor
dec
push
mov
stos
adc
push
es
mov
mov
outsl
ljmp
cmp
movsl
adc
in
pop
dec
xchg
insl
mov
ja
in
clc
loope
push
call
add
mov
jmp
mov
mov
pop
pop
leave
ret
push
mov
jmp
cmp
mov
xor
jl
lds
sbb
test
out
loopne
or
push
jge
rep
mov
fstpl
adc
leave
int3
pop
test
pop
adc
test
jg
sbb
sbb
inc
movsl
pop
or
enter
sub
imul
cmc
lret
dec
cmpsb
mov
repnz
js
dec
popa
mov
adc
jb
push
sbb
sub
cld
aam
fistl
not
or
xchg
imul
cmp
add
sub
sub
jnp
inc
xchg
sub
mov
mov
adcb
push
int
jecxz
sub
int3
push
outsb
xchg
outsb
push
inc
or
pop
and
pop
jecxz
out
aaa
addr16
cmpsl
mov
jmp
scas
arpl
shlb
mov
fwait
pop
dec
dec
mov
mov
jg
sbb
fdivs
push
cmpb
popa
call
jecxz
and
xlat
outsl
xor
sub
xor
pop
scas
push
insl
fdivrs
lret
dec
es
jne
and
lret
sbb
push
call
in
loope
dec
fsubrl
cmc
scas
mov
mov
rcrb
xorb
push
imul
outsb
sbb
scas
in
hlt
jae
inc
push
inc
das
jp
out
divb
inc
loop
sbb
cmp
lcall
sub
test
dec
mov
ja
add
arpl
sbb
xchg
std
add
lret
inc
aam
ret
insb
test
outsl
test
stos
cmp
movb
inc
mov
jbe
scas
adc
out
xchg
scas
jnp
pop
enter
sub
cmc
xchg
ljmp
pop
pop
and
aad
mov
loope
or
xchg
mov
addr16
dec
dec
xor
sbb
pop
and
pop
jge
cmpsb
jge
cmc
out
stos
in
les
inc
add
add
dec
sar
fs
mov
push
jbe
and
push
pop
int3
das
rolb
movl
movl
movl
movl
movl
movl
jmp
mov
xor
movsl
mov
mov
sbb
mov
icebp
inc
ja,pt
clc
mov
lcall
push
fwait
lea
clc
inc
les
add
adc
push
jnp
cs
sbbb
xor
jl
cmpsl
cmp
mov
pushf
aas
fldenv
loopne
inc
loope
in
xchg
leave
stc
repz
xchg
pop
mov
iret
push
shrl
or
aaa
inc
gs
pop
lods
mov
in
add
loopne
inc
in
fiadds
push
mov
pop
repz
lcall
sub
gs
scas
mov
xor
inc
call
subb
sbb
fdivrs
idivb
mov
jno
push
jnp
dec
pop
gs
pop
stc
and
xlat
rcll
lds
xor
and
dec
movsb
add
mov
enter
arpl
pop
test
das
xor
xchg
ret
and
and
adc
sub
jecxz
mov
in
icebp
adc
popa
or
out
clc
mov
scas
loope
icebp
fildll
out
in
rcrb
movsb
xchg
add
or
adc
xchg
pushw
test
cltd
rcll
cmp
sbb
and
bound
repnz
test
sbb
mov
js
daa
cmp
ficoml
cmp
jp
push
adc
push
push
jmp
fmuls
cmp
imulb
push
push
add
cli
push
add
xchg
pop
xlat
pop
pop
repz
inc
sub
mul
push
lret
fildll
jnp
test
push
dec
test
cmp
push
mov
mov
jp
and
leave
inc
subl
cmpsl
shlb
ficompl
daa
mov
divb
xorl
push
fisttpll
mov
sti
adc
cmp
je
out
or
mov
nop
xchg
scas
test
cs
sub
mov
imul
test
adc
or
pop
pop
xchg
sub
das
imul
mov
push
test
in
mov
mov
push
jmp
sub
and
jb
push
stos
mov
out
mov
test
mov
xchg
roll
adc
add
roll
or
jno
dec
or
int3
inc
inc
repz
fisttpl
dec
jns
aam
mov
aaa
or
mov
cltd
aam
lret
dec
pop
dec
imul
inc
xchg
lret
pop
sahf
mov
sub
and
fidivs
cmpsb
mov
nop
adc
js
les
adc
ret
aam
rcll
movb
push
movsb
xorb
and
cmpsl
push
sbb
xchg
gs
negb
xchg
and
lahf
jns
rorb
js
imul
ret
popw
push
jns
not
push
adc
imul
lcall
cmpl
stc
ljmp
cltd
fdivrs
and
lahf
jge
fwait
scas
paddq
les
jnp
cmp
jnp
popf
push
sub
add
hlt
mov
in
inc
or
mov
mov
lcall
jbe
pop
mov
jecxz
mov
data16
xor
add
lods
push
aam
jb
and
pusha
push
lea
xlat
push
push
jl
pusha
int
movsl
mov
out
in
int
test
mov
daa
adc
mov
movsl
add
test
mov
push
add
jmp
inc
mov
test
pop
popa
lods
xor
ds
and
cmp
test
mov
sbb
loope
cmpsl
add
pop
jb
dec
aaa
ljmp
cli
cs
mov
bound
sbb
jbe
les
stos
into
cli
xor
out
push
cmpsb
add
stc
lret
sub
mov
fwait
arpl
dec
hlt
jns
jb
adc
lret
cmp
sbb
mov
mov
xlat
inc
pushf
push
pop
or
loop
push
mov
int
jmp
and
les
pop
pop
mov
rolb
jp
and
lcall
into
movsb
loopne
jle
hlt
aas
data16
xchg
adc
test
dec
popa
std
jne
inc
lods
push
rcll
jne,pt
push
call
mov
mov
add
adc
and
push
and
or
push
or
xor
xor
push
push
call
mov
movl
movl
movl
movl
xor
jmp
leave
xchg
dec
sub
sub
mov
ja
mov
test
data16
int
dec
fsub
mov
shrb
xchg
add
imul
test
pushf
xor
inc
cmpsl
cld
je
inc
out
pusha
sbb
xor
pop
or
dec
xor
in
iret
mov
and
ljmp
dec
xlat
adc
sub
jnp
mov
adc
cld
and
mov
je
adc
ret
mov
iret
addr16
in
jp
add
jo
inc
sar
movsl
jle
add
lcall
clc
stc
cmp
add
inc
dec
pop
nop
xor
das
and
push
ret
pop
jmp
daa
jns
cmp
outsl
xlat
and
cmpb
push
sub
sbb
dec
add
mov
pop
xor
aaa
push
stc
mov
cld
test
daa
mov
add
xchg
loop
int3
or
pop
fcmovbe
push
faddl
sub
shll
xchg
aad
inc
inc
mov
lret
sahf
dec
mov
pop
jo
inc
imul
popf
sub
decl
sbb
js
add
sbb
jmp
lods
dec
sbb
addr16
in
xor
orl
xor
pop
push
icebp
ja
mov
mov
xor
mov
movsb
out
lods
inc
cs
xor
xchg
and
xor
das
sub
in
rcll
fs
add
sbb
jnp
pop
inc
mov
pop
xchg
dec
out
sbb
xlat
insb
imul
and
ljmp
add
mov
lods
pop
and
sbb
das
arpl
adc
mov
gs
mov
test
js
loopne
mov
push
xchg
jge
and
xchg
add
jae
cmp
mov
incb
xchg
cmp
adc
ss
mov
inc
les
lods
xchg
jmp
ljmp
and
std
aas
push
and
test
cmp
push
mov
pop
leave
push
iret
cli
jno
cmp
fimuls
jmp
enter
shrl
inc
hlt
pop
xor
add
or
add
jge
mov
mov
push
push
push
call
mov
mov
or
or
push
add
push
adc
push
push
call
mov
lea
xor
mov
jmp
insl
jmp
cwtl
xchg
popf
pusha
outsl
mov
sbb
stos
cmp
sbb
jns
aas
sub
lock
dec
add
sub
mov
es
sub
loop
clc
out
dec
pop
pop
mov
imul
adc
sub
adc
stc
jns
mov
dec
or
jge
adc
sub
inc
dec
push
es
cmp
push
adc
pop
xor
push
scas
insb
rcrl
pop
shlb
int
fwait
inc
dec
inc
dec
int3
lahf
outsl
pop
out
iret
xor
pop
mov
sbb
and
rolb
je
dec
cltd
sub
fmul
mov
mov
dec
out
mov
add
sub
jge
dec
scas
xor
dec
mov
or
and
xor
stos
dec
mov
pop
inc
mov
inc
lock
cmp
push
dec
cmc
push
fcomps
sub
xchg
xchg
cmc
mov
add
or
or
dec
orb
mov
xor
lds
inc
inc
std
lcall
sahf
stos
mov
bound
out
xchg
aaa
mov
push
das
cmpsb
iret
arpl
add
fimuls
int
rcrb
jge
ss
loope
and
lds
in
mov
icebp
ret
add
pop
mov
sbbb
aas
and
push
out
ja
lds
xchg
imulb
aam
sarl
jg
ljmp
stc
mov
jbe
jae
pop
push
cmp
filds
mov
add
mov
inc
into
xorb
inc
or
sub
out
adc
pop
sub
call
std
xchg
shll
sbb
pop
mov
jmp
mov
pushf
xchg
pop
into
int
inc
adc
enter
adc
js
xor
pop
mov
and
adc
inc
and
scas
ret
jmp
push
xor
lock
hlt
mov
lret
cltd
popf
fsubl
sbb
cltd
out
mov
push
movsl
nop
ljmp
mov
sub
mov
movl
mov
movl
mov
mov
sub
mov
xor
jmp
push
xchg
mov
and
int
mov
enter
test
cmp
loope
jae
loope
push
inc
push
cmp
mov
mov
mov
and
jp
add
mov
push
jno
inc
stos
in
movsb
pop
cmpsb
andb
pop
movsb
out
mov
pop
daa
pop
dec
pusha
adc
lret
add
cmp
das
fmuls
sbbb
ffree
popa
and
fdivrl
iret
icebp
xchg
mov
mov
and
stc
cmc
dec
inc
aas
xchg
mov
enter
sub
and
sahf
sti
test
test
dec
dec
ret
jge
cmp
lods
and
dec
inc
adc
xchg
movsb
xor
or
xchg
jno
sub
xchg
aaa
rcll
lcall
dec
sbb
mov
aas
sahf
addr16
jmp
mov
jbe
pop
cs
push
loope
xchg
fcmovnb
addr16
inc
or
and
and
lods
xor
adc
xchg
cmp
sti
enter
mov
push
mov
xchg
push
push
call
lahf
sahf
mov
fimuls
pop
mov
xor
std
pop
add
leave
sbb
push
aad
mov
lea
out
sahf
sbb
mov
push
loopne
push
ja
mov
sbb
dec
jmp
inc
shll
gs
jl
pop
popf
scas
push
imul
rcl
sbb
test
push
out
add
ret
std
pop
xchg
sub
xchg
jne
inc
dec
mov
inc
pop
mov
push
andl
incl
fstp
sbb
bound
cltd
sub
les
fdivp
fdivrs
pop
test
fcmovnbe
pop
push
rcll
icebp
lret
das
scas
sbb
mov
pop
lea
xor
push
or
jmp
xor
mov
test
mov
add
add
add
aas
add
and
sub
rclb
aas
and
pushf
mov
mov
call
lret
xor
sub
icebp
mov
xor
or
jmp
push
and
mov
mov
test
std
mov
mov
mov
sti
add
sbb
xor
lods
pop
cmp
jecxz
pop
pop
cltd
and
and
or
mov
sbbl
push
cmp
outsl
aaa
and
adc
mov
mov
or
cmp
adc
add
movsb
mov
and
xor
cmp
rcrl
add
cli
jns
enter
lock
jns
stc
test
jge
xlat
mov
mov
mov
add
sahf
ret
cmpb
sahf
mov
cld
jno
insl
into
test
lcall
adc
lea
lods
dec
aas
hlt
sub
rcrb
fucom
scas
adc
pop
inc
dec
jns
or
stos
push
ret
push
cmpsb
sub
push
xor
or
add
jne
ja
mov
fst
inc
cli
push
sub
or
fs
stc
lret
decb
jecxz,pt
adc
mov
call
add
mov
cmp
fcomps
ljmp
mov
xor
daa
pop
pop
adc
pop
jae
adc
pop
lods
lods
mov
fwait
test
cli
inc
mov
pop
push
sub
es
out
lret
lret
test
iret
out
adc
mov
test
xor
xor
les
jp
xor
sub
mov
and
mov
lret
mov
pusha
icebp
shlb
jecxz
lahf
hlt
es
sub
sbbl
push
push
mov
lods
jae
call
shlb
aad
mov
loopne
stc
push
jbe
fiadds
scas
inc
inc
sub
inc
negb
das
into
or
mov
in
push
sbb
adcl
or
pushf
ss
js
scas
enter
stc
pop
xor
dec
ja
fsin
dec
test
lahf
mov
pusha
mov
pop
jo
push
hlt
outsb
imul
dec
or
inc
inc
hlt
jg
add
movl
movl
mov
add
mov
and
lea
mov
mov
mov
movl
movl
movl
mov
mov
sub
add
xor
add
mov
div
mov
xor
pop
pop
or
mov
movl
movl
jmp
bound
and
lds
sbb
test
scas
or
or
pop
aad
mov
xorb
adcb
and
and
pusha
mov
rcrl
sti
adc
fsincos
shlb
mov
subl
add
leave
lret
popf
push
and
sti
sbb
or
scas
daa
inc
push
mov
xchg
fbstp
xchg
mov
mov
jne
dec
insb
xchg
idivl
push
fstp
in
cmpsl
mov
ss
imul
jb
pop
push
inc
jmp
arpl
cmp
sahf
in
ja
sub
fxch
lods
arpl
mov
or
mov
loop
out
xor
push
movsb
hlt
push
mov
jne
mov
icebp
cmp
inc
xchg
sti
jno
inc
mov
mov
mov
pop
mov
clc
mov
ja
decl
cmp
out
fdivrl
scas
or
sti
aas
daa
ljmp
pop
mov
pop
aaa
xor
lret
syscall
sbbl
adc
daa
or
dec
lods
aad
cmp
enter
dec
mov
xchg
push
sbb
cmpsb
mov
jns
push
push
xchg
ljmp
and
or
in
sbb
nop
xlat
mov
test
push
inc
add
rolb
xchg
adc
jmp
outsb
stc
cmp
cmp
fwait
xchg
cmp
loopne
out
dec
imul
inc
icebp
std
loopne
rcr
add
lock
mov
fisubs
and
jo
cmpl
pusha
jmp
push
mov
out
sub
fcomp
iret
push
inc
pop
jb
imul
rorb
jmp
lods
outsb
and
inc
fstpl
roll
dec
mov
je
enter
pushf
clc
rcrl
scas
insb
call
pushf
pop
jge
jmp
cmpsb
rol
rcrb
xchg
ljmp
mov
notb
adc
pusha
outsb
pop
cmp
inc
or
dec
or
shrl
sub
or
mov
imul
mov
div
leave
ret
push
mov
sub
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
jmp
dec
mov
aam
movsb
sub
bound
push
xchg
sbb
sbb
mov
mov
sbb
test
ret
sbb
rorl
mov
scas
add
push
sub
xchg
mov
lods
xor
into
adc
out
fldl
das
rolb
dec
scas
and
sbb
adc
cwtl
sahf
sarb
icebp
mov
xor
mov
fists
xchg
in
cltd
mov
adc
pop
cmp
add
les
pop
cld
cmp
dec
jnp
movsl
pop
inc
mov
jmp
aad
dec
fmul
lcall
leave
fdivl
jmp
inc
pop
fbld
rcrl
ret
jmp
lods
cltd
mov
stc
lds
push
subl
adc
inc
mov
push
test
movsl
fiaddl
sbb
cmpsl
mov
hlt
push
dec
xor
push
cmp
inc
push
out
or
inc
int3
add
xor
push
mov
jg
stos
sbb
pushf
cltd
ds
jle
out
lods
and
mov
loop
lock
lahf
test
leave
mov
push
in
cltd
jns
mov
or
cmp
xchg
in
stc
mov
mov
mov
int3
movntps
xor
fidivs
icebp
dec
sub
clc
sti
and
repz
mov
enter
xchg
inc
mov
mov
sub
xchg
or
fimuls
xchg
jg,pn
mov
dec
hlt
lret
mov
pop
enter
outsl
fsubrl
lret
or
mov
dec
mov
or
push
and
stc
and
icebp
out
cmp
pop
inc
dec
sbb
xchg
iret
mov
into
xchg
fldl
daa
cld
jns
mov
jl
mov
bound
addr16
inc
cmp
cmp
fstl
cmpsb
mov
push
xchg
adc
mov
out
pop
dec
sub
xchg
orl
push
push
loop
cmp
aaa
cli
cltd
xor
add
mov
icebp
mov
mov
rclb
sarb
xchg
data16
pushf
inc
jmp
jmp
bound
sbb
loop
sahf
xor
sahf
inc
xchg
frstor
andl
mov
addr16
sahf
jp
ror
or
lret
mov
shlb
das
rorl
cmp
icebp
ja
fxch
mov
cmpsl
and
or
addr16
daa
pop
mov
inc
push
add
data16
sbb
dec
stos
jo
mov
lods
into
mov
or
xlat
push
sub
inc
cmpsb
scas
sub
jl
inc
stos
ret
xor
dec
xchg
push
mov
outsl
cs
das
pop
or
sbb
icebp
jmp
jle
bound
add
mov
mov
dec
push
mov
leave
inc
subl
lahf
push
or
data16
faddl
outsl
xchg
cmpsl
iret
imul
sub
inc
sub
mov
movl
sub
lods
cs
loop
xor
push
push
movsb
jae
shll
cmp
cmp
repz
inc
fbstp
movl
jmp
into
jne
inc
sbb
pop
clc
push
aad
fadds
sbb
add
loope
mov
xor
pop
dec
aam
repnz
lods
add
pusha
or
inc
lcall
ja
mov
xchg
aaa
pusha
ret
mov
push
insb
in
and
mov
pushf
std
push
mov
fidivrs
lea
insb
shlb
ljmp
sti
jg
aaa
orl
cmc
sub
xlat
cmp
and
loop
mov
push
add
dec
ljmp
jns
adc
sub
pop
push
mov
or
dec
adc
cltd
add
xor
outsl
xchg
das
fprem
es
idivb
out
or
fnstsw
xor
mov
mov
fisubl
sbb
bound
inc
mov
or
in
pushf
adc
xor
das
xchg
push
bound
mov
xchg
loop
scas
jge
mov
sahf
cmpsl
aas
xchg
sbb
pop
jbe
dec
add
dec
adc
ljmp
xchg
sbb
flds
test
sbbb
loope
mov
arpl
and
sti
push
push
adc
and
jbe
push
das
popf
or
jmp
xchg
cmp
and
xor
insb
pushf
push
add
loopne
xlat
inc
idivl
sbb
sub
pop
mov
cmp
ss
in
xchg
sbb
xchg
cmc
push
in
cmp
xor
in
mov
jmp
shr
call
pop
add
js
fisttpl
add
xchg
cmp
popa
xchg
jno
out
cs
mov
lods
aas
fistl
cmpsl
inc
push
lcall
pop
imul
mov
lahf
jl
divl
loope
call
fldl
inc
cmp
sub
je
xchg
jp
mov
repnz
mov
cmp
mov
int
xchg
jmp
or
dec
pop
fcmovb
dec
std
popf
jb
pop
mov
nop
pop
inc
fldl2t
adc
pop
movsl
loop
mov
mov
push
scas
xchg
mov
hlt
add
mov
add
add
fstpl
sbb
xchg
arpl
pop
mov
ds
xchg
cld
popf
dec
repnz
jae
pop
fisttpll
xchg
xchg
insl
mov
dec
push
js
ret
jle
pusha
jp
xchg
ja
pop
push
or
das
sub
dec
out
push
adc
mov
test
xor
sub
xchg
adc
in
mov
jp
out
test
xor
roll
imul
and
jp
inc
ljmp
xor
pop
jp
mov
out
sbb
pop
mov
mov
repz
inc
lcall
imul
pusha
mov
pop
lret
mov
adc
fs
das
sub
push
jp
loope
xchg
pop
adc
mov
outsb
fwait
lcall
dec
and
sahf
inc
push
mov
inc
and
je
nop
push
push
cs
not
jl
inc
jae
add
or
and
adc
and
shlb
in
add
dec
inc
add
movl
movl
movl
movl
movl
movl
movl
movl
push
movl
mov
mov
push
push
push
call
mov
mov
xor
mov
mov
mov
jmp
das
ret
pop
sub
ret
xchg
mov
cmp
sbb
sbb
cmpsb
jbe
es
push
cld
mov
call
fucomip
sub
iret
ror
stc
pop
shrl
sbb
fdivrl
xor
adc
xorb
popa
cltd
popf
jp
sub
mov
cmpsl
push
xchg
push
pushf
es
fldenv
jnp
jnp,pt
shl
sahf
pop
insl
movsl
lods
sbbl
mov
add
mov
testl
push
pop
andl
dec
push
lods
daa
lcall
push
jge
cmpsl
xor
in
push
filds
clc
dec
mov
stos
push
sub
aad
movsl
xchg
sbb
arpl
mov
scas
mov
or
xchg
movsl
mov
inc
ficoms
push
adc
test
aam
es
sbb
mov
push
pusha
and
mov
pushf
je
mov
ret
outsb
addl
dec
add
xlat
cld
pop
and
insl
mov
lret
push
movsl
jg
scas
cmp
mov
cmpl
popa
mov
int
adc
sti
mov
movsl
lahf
mov
enter
inc
add
xor
mov
cmp
pop
aad
jmp
mov
mov
inc
gs
aam
das
cmpsb
arpl
ss
xlat
lea
dec
pop
xchg
pop
add
movsl
and
inc
inc
inc
cltd
mov
cmp
movsb
pushl
in
dec
push
adc
lock
sbb
enter
adcb
aam
mov
push
dec
mov
int3
jae
outsb
popa
or
lods
lods
jbe
nop
inc
mov
push
mov
stos
or
sub
pop
cmp
in
call
clc
mov
push
or
mov
mov
jg
rorb
shl
push
pop
in
xchg
hlt
inc
lock
adc
xchg
testb
pop
ficoml
insl
cmp
push
cld
fidivrs
shlb
xchg
loop
ja
adc
shrb
sub
call
adc
xor
int3
dec
jns
out
mov
adc
and
xlat
xor
xchg
int3
xchg
aad
stos
aas
jnp
arpl
enter
jg
sahf
pushl
data16
pusha
js
nop
add
jbe
push
adc
fnsave
fsts
dec
lods
adc
xchg
xchg
or
mov
rcrl
cwtl
dec
and
hlt
repz
das
mov
repnz
gs
int
and
mov
and
cmc
fcmovbe
mov
sub
mov
and
leave
bound
les
shlb
xor
clc
fs
ret
das
mov
xchg
jl
sub
lock
jne
daa
mov
xor
sahf
cmc
cli
mov
inc
lods
push
xor
jne
dec
loopne
adc
pop
adc
cld
jb
dec
rclb
add
das
out
imul
push
sahf
fadd
rorl
js
jb
inc
sbb
xchg
fucomi
add
lret
or
test
fsub
xchg
and
cli
jge
xor
cmp
mov
xor
or
mov
mov
mov
xor
or
add
cltd
adc
cmp
jne
cmp
je
mov
mov
mov
mov
add
adc
or
mov
or
mov
push
push
push
push
call
mov
mov
and
mov
mov
jmp
fs
cmp
cmpsb
dec
adc
cltd
jb
sbb
sbb
outsl
fldl
mov
mov
popf
push
mov
pop
fwait
out
xor
and
call
popl
xchg
daa
sub
xchg
cld
add
inc
mov
push
mov
mov
push
vpaddusw
mov
iret
pop
fiaddl
mov
xchg
dec
xor
mov
nop
data16
pop
pushf
enter
pop
lods
jne
inc
xor
sbb
cmp
jne
pop
cli
mov
jge
cmpsl
test
add
xor
dec
cmp
je
cmp
loopne
les
mov
xor
es
negb
push
int3
jne
inc
push
shll
adc
inc
fs
mov
insl
or
test
sub
adc
pop
ds
dec
outsb
adc
pop
js
sub
cwtl
mov
xchg
leave
mov
and
jmp
sub
in
outsl
jmp
push
mov
push
gs
mov
lods
cmp
cmp
pop
mov
mov
cltd
lret
mov
loopne
scas
mov
movsl
mov
ja
sbb
and
sub
call
pusha
ja
sbbl
leave
fdivr
leave
xchg
add
xchg
sahf
mov
in
cmpb
mov
movsl
shlb
dec
lea
test
pop
fwait
xor
ret
insl
int
mov
sbb
lock
push
negl
adcb
jno
push
xor
mov
movsb
pusha
dec
xchg
and
leave
sahf
fcmovb
inc
xor
in
xor
clc
shr
push
cmp
xor
leave
lods
sbb
adc
sbb
lds
push
inc
cli
je
pop
pop
and
mov
cli
cmp
call
mov
adc
xchg
cmp
gs
mov
pop
jl
jne
orl
cmpsb
jle
inc
popf
xor
xor
imull
dec
into
mov
xchg
mov
adc
push
xor
lcall
jge
sub
lea
jo
popf
fidivs
cli
add
aas
movntq
out
scas
je
notl
lret
imul
popa
add
add
sbb
stos
mov
divb
inc
cmp
movsl
dec
aad
fs
les
jp
fdiv
popa
imul
xlat
rorb
repz
ds
inc
je
leave
push
mov
aas
out
xchg
jbe
xchg
aam
gs
adc
mov
add
add
push
hlt
push
inc
test
or
negl
movsb
xor
lahf
mov
daa
dec
std
int
movsb
int3
add
aad
out
out
fcmovu
neg
mov
or
xor
cs
mov
loopne
adc
lret
and
pushf
mov
mov
fs
inc
stos
data16
rol
aad
fwait
mov
popl
cmp
jmp
pop
mov
jnp
push
and
or
test
divb
stos
jl
jno
inc
iret
mov
mov
mov
add
shrb
loop
push
inc
enter
xchg
sub
jecxz
or
pop
xchg
xlat
push
push
outsb
pop
cltd
xchg
mov
inc
stc
sbb
or
xor
xor
xor
cmp
jne
cmp
jne
mov
mov
add
or
mov
or
xor
lea
xor
mov
and
add
mov
xor
xor
div
mov
mov
xor
imul
mov
push
push
jmp
sbb
sbb
jo
or
jo
insb
sbb
jns
sbb
jle
in
in
mov
scas
aaa
addb
jp
out
out
lods
icebp
out
xchg
dec
cmp
fsubp
popf
cmp
aad
xor
sbb
mov
loopne
jl
cwtl
inc
outsb
xor
jno
xchg
adc
inc
frstor
pop
push
push
sub
subl
sbb
aaa
mov
xchg
aas
jmp
xor
outsl
cmp
cmpsl
jae
arpl
adc
data16
rolb
xchg
or
hlt
out
and
pop
arpl
xchg
or
clc
cwtl
je
xor
popf
ds
push
fcom
jo
test
push
mov
test
inc
call
cmc
pop
inc
cli
pop
xchg
lods
or
add
mov
fnstsw
cmp
dec
shll
not
test
or
in
dec
insl
cmpsl
sbb
sbb
mov
push
dec
in
call
inc
subl
insl
xchg
lret
inc
pop
mov
xor
sub
insl
das
outsl
dec
daa
fsubrl
insl
push
setns
repnz
js
sbb
fisubrs
pop
fistpll
jno
js
sbb
mov
orl
pop
fisubrl
fwait
test
adc
jp
ss
inc
test
ret
stos
mov
jb
mov
and
jns
icebp
xchg
jne
and
add
insl
addr16
rolb
mov
in
pop
jnp
sub
aad
outsb
mov
mov
xchg
popf
lea
pop
jmp
xor
lret
add
jb
jg
jno
xor
test
fwait
mov
dec
push
push
adc
pop
popf
sub
pop
xor
pop
xor
sbb
mov
pop
mov
sub
test
mov
mov
push
sahf
popf
out
std
jne
std
xchg
je
sbb
and
test
push
mov
bound
dec
jb
and
xorl
mov
sbb
int
sti
and
jg
push
fcom
or
inc
mov
aas
xchg
lods
push
mov
or
shlb
mov
je
cmp
fwait
leave
pop
aaa
cs
mov
in
xor
pop
out
or
xor
and
ljmp
cmp
dec
push
sub
xchg
movsb
cld
ret
cwtl
xor
movsb
xor
fs
push
das
fstl
push
int
push
mov
or
add
xchg
jg
adc
divb
insb
movsb
push
mov
xchg
divl
neg
push
shlb
jg
sub
loop
iret
adc
xor
enter
pop
sbb
and
outsl
mov
ljmp
lret
int3
test
xchg
sub
int3
popf
push
stos
mov
inc
mov
addr16
mov
and
adc
mov
dec
out
addl
fcmovb
pushf
push
cmp
adc
sbb
jbe
mov
pop
addr16
push
mov
and
sbb
pop
insl
in
xchg
popf
loop
inc
out
ret
fwait
mov
mov
lds
iret
sbb
and
mov
lea
mov
mov
lea
mov
mov
or
xor
div
mov
add
xor
add
mov
add
mov
mov
mov
mov
sub
mov
sbb
mov
xor
mov
xor
jmp
adc
xor
cmpsl
add
jns
sbb
nop
daa
lods
clc
jle
add
and
rclb
test
or
mov
jns
imul
jge
push
out
sbb
movsl
arpl
or
cld
add
mov
out
dec
push
jg
jle
jnp
es
fsubrl
mov
test
pop
loopne
adc
ljmp
ret
pop
jb
jbe
bound
in
xor
jo
aad
andl
pop
pop
nop
mov
inc
adc
push
adcl
lret
into
daa
xchg
xchg
movsl
push
lret
je
lcall
lret
outsb
inc
movsb
xor
jle
std
jb
iret
push
jle
sub
sysenter
in
inc
adc
xor
pop
adc
mov
cmpsb
lahf
pop
xor
fcomps
and
ja
xor
mov
cltd
push
dec
insb
data16
xor
xor
outsb
sub
loopne
rolb
push
mov
jp
leave
pop
ret
mov
retw
orl
mov
in
add
jmp
insb
lea
scas
dec
inc
jb
fsubrl
jge
dec
mov
cs
cwtl
xor
shr
and
test
stc
and
push
dec
insl
xchg
xchg
or
dec
add
shrl
or
repz
ret
sbb
push
xchg
add
scas
dec
gs
leave
push
add
loop
jp
push
fimuls
fs
test
mov
sub
or
jecxz
inc
cmc
adc
xchg
sbb
jbe
imul
pop
adc
lea
pminub
mov
add
mov
icebp
xor
xor
push
cmp
inc
xchg
cmp
sub
mov
in
or
xor
sbb
leave
ficoms
out
mov
or
adc
xchg
cltd
hlt
fstpt
repnz
xorl
rcll
hlt
jno
enter
sbb
or
sahf
ds
inc
ljmp
mov
ficoml
std
inc
out
lea
clc
mov
imul
jbe
inc
mov
mov
xchg
mov
push
sub
push
cmp
cli
lods
movsb
mov
nop
jp
fldl
mov
ss
cs
pop
lods
lcall
mov
shl
add
test
subl
xor
sti
data16
xlat
mov
out
mov
lcall
stc
clc
cmpsl
jge
lods
mov
jge
dec
pop
jecxz
aas
and
jp
int
scas
es
jbe
js
mov
fidivrl
pop
fsubrs
jns
shrl
loop
mov
fs
jb
dec
add
cmp
arpl
jne
or
cmp
out
adc
in
or
aaa
rcr
ret
xchg
lret
cmp
push
jnp
add
cmp
fistpl
xor
or
jle
mov
push
sub
arpl
dec
int
mov
add
adc
add
adc
push
push
call
mov
sub
push
pop
sbb
mov
xor
cmp
jne
cmp
jne
mov
mov
add
shr
or
mov
xor
xor
add
mov
jmp
or
hlt
add
fistpl
mov
stos
lcall
sbb
sbb
jns
push
sub
or
dec
cli
jno
sub
xorb
outsb
jns
into
sbb
mov
aam
lret
add
xchg
adc
nop
bound
inc
push
test
pushf
lret
fisubl
sub
mov
das
dec
ss
je
xchg
sbb
mov
pop
fisttps
cli
test
and
and
dec
into
fsubl
repz
and
pop
adc
xor
pop
xor
je
call
cltd
insl
mull
ficompl
subl
leave
psubb
pop
and
mov
xor
bound
ljmp
jmp
test
sahf
sbb
push
sbb
ja
jmp
jl
outsl
push
es
xchg
sti
xchg
testb
adc
int
imul
inc
add
test
lcall
sbb
lret
test
femms
shr
dec
stos
pop
sbb
pop
adc
sub
fs
dec
or
xchg
sub
jmp
femms
xorb
shll
insl
hlt
aad
and
inc
push
mov
xchg
mov
mov
aam
push
xor
mov
pop
pop
std
jecxz
sbb
cmp
mov
out
leave
loop
mov
outsl
cmp
lock
inc
mov
je
and
xlat
lods
sub
dec
push
adc
cmp
or
ror
stc
add
lcall
xchg
push
jl
jle
cmp
pop
cltd
xchg
and
stc
and
mov
mov
mov
cli
and
lret
jp
or
jp
jnp
aam
add
pop
lcall
in
jae
xchg
cmp
push
fldcw
adc
inc
pushf
test
xchg
cmp
clc
loop
xchg
xor
fwait
sbb
xor
mov
mov
popa
sub
es
xchg
cmp
adc
dec
movaps
js
sahf
test
lcall
push
jp
jne
sub
add
pop
loopne
leave
test
mov
xchg
std
inc
jae
rorb
popf
ret
insb
popa
loop
stos
pushf
mov
adc
scas
ljmp
push
mov
dec
in
dec
inc
popa
lea
scas
dec
pop
inc
fwait
loop
sti
adcl
or
add
mov
xchg
dec
mov
push
pop
imul
out
mov
call
icebp
test
test
mov
mov
fstpt
jmp
shrl
mov
aam
mov
aas
aas
nop
cmp
and
push
jle
pop
jp
push
out
pop
popf
prefetch
xchg
lret
leave
jno
je
xchg
sub
data16
jnp
imul
addr16
in
sbb
sub
insb
es
sub
mov
std
dec
jo
fcmovbe
test
aad
mov
data16
out
loopne
lret
test
push
jae
or
lods
mov
in
mov
pop
add
ret
push
mov
sub
push
push
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
movl
movl
movl
movl
movl
movl
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
add
mov
adc
mov
push
push
or
or
push
push
call
mov
mov
and
or
mov
mov
and
or
xor
xor
shld
shl
shr
xor
or
or
xor
mov
mov
xor
mov
jmp
aas
cmpl
mov
dec
arpl
adc
sbb
adc
add
cmpsb
call
aas
test
mov
js
inc
out
pop
out
movsb
ret
push
xchg
in
in
adc
ja
add
or
call
in
lea
pop
jle
jne
mov
xchg
test
add
mov
jmp
adc
aam
pop
cli
jecxz
xor
ja
sbb
and
je
push
lret
dec
ljmp
aas
lods
mov
mov
pop
xchg
push
stc
xor
and
movsl
clc
cmp
inc
cmpsl
out
roll
pop
test
add
shlb
ss
sub
xlat
test
mov
in
rorb
mov
les
rolb
mov
inc
cmp
mov
fidivrs
in
pop
mov
mov
mov
repz
int3
xor
mov
fldenv
sahf
lret
decb
xchg
gs
cmp
xchg
cmp
mov
dec
int3
das
mov
dec
js
arpl
pop
mov
xchg
repnz
lret
leave
loope
arpl
sti
jmp
push
xor
xor
lahf
insl
test
out
pop
call
jge
out
xlat
jo
mov
orb
pop
xchg
adc
mov
inc
scas
cmp
ss
push
mov
mov
or
add
roll
pop
jecxz
fdivl
xchg
fisttpl
inc
and
pushf
mov
gs
stos
aad
loope
lcall
sub
and
imul
outsl
sbb
or
hlt
pop
call
cmp
xchg
add
mov
push
add
in
push
popa
mov
and
inc
ljmp
sbb
xor
sbb
dec
push
sbb
scas
clc
enter
dec
jae
or
in
sbb
mov
imul
adc
pusha
inc
push
mov
sbbb
fs
inc
clc
sbb
loopne
adc
cli
push
bound
mov
mov
push
and
sbb
stos
shlb
fwait
pop
repnz
dec
xchg
sub
shll
mov
lret
arpl
es
adc
mov
jb
push
xchg
lods
cmp
fst
adc
mov
push
mov
cmpsl
or
test
add
cs
mov
outsb
jmp
out
roll
int3
addb
dec
xor
mov
inc
cli
into
sti
dec
bnd
push
inc
enter
mov
mov
push
push
push
push
call
add
adc
push
push
push
push
call
mov
mov
mov
xor
xor
xor
add
mov
adc
mov
mov
mov
mov
mov
sub
mov
mov
sbb
mov
sub
mov
sbb
add
mov
adc
push
xor
mov
pop
sub
mov
sub
mov
mov
mov
add
xor
shrd
xor
shl
xor
shr
or
xor
or
mov
push
mov
mov
mov
push
push
push
call
mov
mov
mov
or
mov
or
mov
add
mov
adc
mov
add
mov
adc
add
pop
adc
pop
mov
mov
pop
leave
ret
push
mov
sub
movl
jmp
imul
pop
jbe
mov
cmpl
sbb
adc
sbb
cld
ret
ficoms
inc
movl
popf
in
test
outsb
int
movsl
mov
fs
aas
or
lret
fwait
sub
lea
lock
cs
aas
xchg
mov
shl
lcall
jmp
aad
cltd
loop
xchg
popf
fisttpll
sbb
sbb
leave
cs
pop
sub
clc
xor
xchg
inc
inc
lahf
in
test
inc
sbb
and
mov
ss
jmp
dec
aad
cmp
imul
pop
in
subl
js
xlat
mov
arpl
push
cmc
int3
xchg
cmp
cs
aad
dec
sahf
adc
icebp
cmp
inc
pop
mov
movsl
mov
and
in
shrb
xchg
and
or
fucomi
out
call
inc
lods
into
push
sbb
xorl
clc
mov
mov
pop
sbb
push
ljmp
dec
pop
sub
xchg
out
mov
fsubrl
add
shr
mov
data16
stc
mov
imul
roll
pop
xor
push
add
fucomip
lea
pop
push
mov
pop
mov
sahf
xchg
mov
pop
mov
int
pop
mov
jb
sahf
movsb
ret
xchg
call
lea
mov
inc
cmp
ss
xor
push
jecxz
notl
xchg
int
ficoms
mov
pop
pop
in
das
pop
push
adc
rcrb
xor
rol
pushl
add
icebp
lods
stc
sbb
xchg
imul
ja
add
sub
push
sbb
sbb
or
jge
test
int
adc
add
jae
cld
sub
jl
mov
mov
pop
decl
mov
dec
das
ret
sub
adc
mov
test
push
xlat
aad
stos
xor
aas
test
rol
rcrl
nopl
ja
xchg
adc
push
scas
xchg
cmp
mov
bound
add
mov
scas
jecxz
dec
scas
dec
sbb
pop
push
inc
imul
cmpsb
arpl
out
sarb
pop
jno
call
ss
or
add
lods
mov
test
xor
mov
cmp
sbb
in
and
add
inc
call
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
and
add
mov
and
mov
sub
and
mov
mov
imul
add
add
xor
cmp
jne
mov
mov
mov
sub
add
mov
or
mov
imul
sub
add
mov
or
mov
mov
add
imul
add
mov
add
mov
mov
mov
and
mov
and
mov
imul
mov
or
mov
imul
mov
sub
cmp
je
mov
jmp
mov
sub
xor
add
jmp
movl
movl
mov
mov
imul
add
and
add
or
sub
leave
ret
push
mov
and
sub
push
push
lea
mov
mov
mov
mov
sub
sbb
mov
orl
orl
lea
push
lea
push
jmp
pushf
cmp
jl
enter
dec
sbb
scas
adc
sbb
rcr
xor
bnd
ret
push
je
icebp
cltd
enter
popf
pop
sbb
in
je
ss
sub
lds
inc
popf
in
inc
ljmp
jbe
jnp
cmp
ja
icebp
hlt
jne
nop
adc
mov
cmpsb
sti
andb
push
fdivs
pop
and
mov
inc
incb
mull
cmp
xor
pop
out
mov
xor
std
push
add
inc
ss
or
std
in
dec
insb
lcall
test
paddq
das
jne
inc
push
sub
shl
pop
insl
xchg
push
mov
les
stc
insl
in
fmul
aas
xchg
jbe
hlt
popf
jg
push
xlat
jg
cmp
jae
cmp
loopne
fmulp
xchg
hlt
sub
push
imul
pop
add
out
pop
adc
stos
call
lea
add
push
lret
cmp
out
lock
xchg
insl
and
jno
jp
bswap
icebp
dec
cmp
mov
pusha
fistpll
mov
dec
dec
sub
sarl
and
pushf
push
inc
ljmp
mov
xchg
push
pop
js
nop
mov
insl
pop
aaa
add
pop
in
test
andl
lods
sbb
mov
cltd
ror
mov
push
js
shl
scas
xchg
ret
in
cmpsb
add
jge
sbb
ret
loope
ror
xchg
pop
xchg
imul
sti
push
push
into
add
test
inc
xchg
stos
pop
and
pop
or
dec
pop
mov
stos
inc
pop
push
adc
add
and
xchg
aas
fdivrl
jmp
pop
jne
jle
int
dec
imul
mov
dec
xor
xchg
sarl
js
filds
pop
test
mov
mov
int
imul
push
mov
lock
mov
out
in
push
cmp
pop
sbb
call
jae
fbstp
arpl
adc
lods
js
push
mov
cmp
jge
add
shl
ficomps
scas
sub
imul
jo
sbb
mov
push
iret
and
scas
xlat
xchg
clc
inc
dec
mov
insb
sarb
lret
mov
fildl
shll
lds
loope
sahf
push
inc
pop
xchg
dec
jmp
hlt
vmptrld
xor
xchg
icebp
cld
pop
cmpsl
outsl
into
dec
add
xlat
aad
mov
std
xchg
in
sahf
jg
stc
adc
test
fdivp
or
push
push
push
daa
dec
aas
add
adc
mov
mov
adc
add
test
aas
jmp
hlt
out
push
sbb
jl
and
dec
mov
scas
out
jbe
and
mov
adc
repz
cs
cmp
push
or
and
sub
jo
popa
push
mov
push
shrb
in
subb
xchg
ljmp
jecxz
push
loope
int3
sti
sub
cwtl
cltd
sub
ret
into
pop
bnd
xchg
dec
int3
rcrl
leave
sbb
mov
mov
jo
mov
rcr
lahf
sub
inc
arpl
clc
pop
mov
jae
rol
sahf
fcoml
gs
xor
arpl
xor
push
xor
mov
jmp
leave
and
and
out
out
std
je
outsb
push
call
mov
mov
pushl
mov
pushl
mov
pushl
pushl
pushl
pushl
pushl
call
pop
jmp
roll
andb
sbb
loop
jl
imul
sbb
and
testl
push
les
xchg
test
pop
movsl
jmp
pop
in
mov
sub
scas
sub
xchg
neg
outsl
and
add
enter
xchg
shrb
xchg
lock
stos
aad
xor
mov
repz
xchg
push
sti
or
xchg
les
dec
movsl
scas
cmp
jns
or
testb
movsb
or
dec
adc
inc
xchg
int3
stc
add
lret
gs
jae
lods
xor
imul
cwtl
test
cwtl
inc
or
jl
shlb
scas
out
movsb
push
test
fisubl
into
mov
test
sbb
mov
stos
push
pusha
pop
lods
inc
and
push
mov
fsubrs
inc
add
mov
out
jp
ret
pop
dec
push
jmp
and
scas
mov
adcb
lods
mov
adc
xlat
xor
mov
rcrl
stc
xor
in
mov
enter
sub
stos
imul
cltd
push
mov
mov
mov
or
adc
or
pop
xlat
imul
das
test
cmp
sbb
push
lock
cwtl
push
xchg
daa
xor
adc
data16
out
or
sub
imul
dec
jmp
testb
lcall
adc
push
mov
lret
push
std
fistl
mov
insb
iret
test
hlt
mov
fcomps
mov
dec
cld
repnz
sbb
cwtl
or
push
aas
dec
xlat
xchg
clc
cmp
pop
ss
jne
dec
pop
mov
fwait
sbb
stos
pop
or
pop
xchg
or
mov
pop
fdiv
sbb
pusha
mov
inc
shl
dec
leave
mov
sti
pop
je
pop
repz
nop
jle
push
ror
shlb
jnp
inc
inc
out
pop
sbb
sbb
xchg
adc
mov
xchg
lock
shlb
out
scas
mov
popf
xchg
lret
push
cmpsl
push
mov
sub
push
js
xor
push
mov
inc
jle
dec
or
dec
cmpb
es
stos
mov
or
aas
out
sbb
dec
or
fsqrt
aad
pop
mov
jmp
sbb
mov
loopne
or
bound
push
jbe
mov
add
shl
push
scas
pop
jecxz
mov
sub
mov
stc
mov
dec
and
adc
setp
ljmp
xchg
sub
test
inc
sub
insl
push
lds
popa
fs
xor
sub
push
pop
cmpsb
mov
xchg
xchg
sub
dec
das
sbb
cmp
mov
in
test
xchg
jmp
out
xor
pop
xchg
enter
sti
lcall
jmp
std
out
inc
xchg
js
push
push
cwtl
mov
bound
sub
jae
push
pushf
std
mov
sbb
cmc
mov
inc
leave
scas
aas
loope
pop
aaa
ret
push
loop
loopne
push
out
subb
imul
dec
movsl
push
xor
xchg
cmpl
add
dec
xor
fiadds
out
mov
xchg
js
xor
sub
fcmovu
pop
cwtl
inc
push
inc
or
jnp
dec
scas
push
mov
popa
inc
adc
test
mov
rorl
loop
and
cmp
in
ret
push
mov
sub
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
add
xor
mov
and
imul
xor
push
movl
movl
movl
mov
mov
xor
sub
div
mov
mov
or
xor
mov
sub
mov
mov
mov
mov
mov
mov
mov
mov
imul
and
or
xor
add
mov
mov
sub
add
mov
xor
mov
and
mov
xor
sub
mov
mov
and
lea
mov
shr
or
mov
sub
add
cmp
jbe
pop
leave
ret
push
mov
sub
sub
push
push
push
adc
mov
cmpl
mov
mov
mov
mov
jmp
mov
jne
push
pushl
call
mov
mov
sub
and
and
xor
sbb
add
or
mov
or
shrd
shr
mov
and
mov
xor
mov
add
mov
sbbl
xor
xor
or
mov
add
or
mov
mov
adcl
shl
mov
and
shrd
add
xor
xorl
shr
adcl
mov
mov
xor
or
orl
mov
mov
xorl
mov
sbbl
mov
mov
cmpl
movl
notl
mov
movl
jmp
movl
jl
push
call
sbb
and
xor
xor
sbb
or
sbbl
xor
and
mov
sub
mov
mov
and
mov
dec
mov
cmpl
movl
movl
movl
jmp
movl
movl
jl
push
pushl
pushl
call
and
neg
and
adc
not
sbbl
shl
xor
shld
add
shl
mov
mov
mov
mov
addl
xor
xor
movl
movl
movl
mov
cmp
movl
jne
cmp
movl
je
sbb
mov
movzwl
xor
mov
mov
xor
xorl
shld
addl
shl
xorl
xor
mov
mov
adc
mov
xor
mov
mov
cmp
jne
cmp
jmp
push
inc
shlb
cmp
jo
add
jl
sbb
notb
sbb
scas
test
or
inc
sub
es
out
dec
xor
ja
push
ja
ret
push
stc
add
loopne
push
enter
mov
sub
dec
xchg
cltd
clc
clc
mov
ss
push
pushf
into
inc
jp
pusha
mov
fs
sbb
mov
ds
pop
sti
inc
dec
pop
sbb
xor
cwtl
inc
scas
out
into
sbb
sbb
outsl
rcr
std
mov
lret
fld
adc
paddusb
addr16
nop
dec
sub
sbb
mov
ss
jne
and
xor
mov
sahf
and
mov
dec
pop
or
push
fimull
xor
push
push
pop
mov
sbb
lea
sub
mov
shll
and
inc
std
fsts
push
movsb
mov
cli
aam
xchg
lods
sbb
pop
aad
adc
cmpsb
mov
adc
stos
mov
jg
das
movsl
push
jbe
cwtl
cmpsl
out
pop
data16
out
pop
aam
adc
fstl
repz
mov
mov
jle
out
mov
call
adc
stos
mov
andl
mov
insl
push
int
cmpsl
test
sub
test
lea
addr16
sub
mov
movsl
in
xor
jnp
iret
lea
sub
sbb
loop
dec
fdivrl
aad
mov
in
pop
adcl
cmp
insb
les
subl
mov
sahf
xchg
int3
icebp
lea
cmp
inc
mov
jbe
loope
fisubl
mov
jo
jp
leave
jbe
mov
or
mov
aas
sbb
aam
or
mov
ja
or
js
enter
mov
pop
sub
xchg
stc
pop
popf
inc
xor
pop
std
leave
xchg
inc
outsl
inc
xchg
adc
fstp
pop
pop
dec
mov
test
or
into
addb
inc
add
mov
cmpl
movl
mov
mov
movzwl
jmp
movl
jle
push
call
mov
mov
sub
add
xor
xor
xor
sub
mov
sbbl
adcl
orl
or
mov
push
cmpl
mov
mov
jmp
mov
mov
jge
push
call
mov
sbb
inc
and
and
orl
and
pop
xor
mov
add
shl
neg
mov
xor
notl
shr
or
mov
or
mov
cmpl
notl
mov
jmp
movl
jge
push
push
call
movzbl
add
mov
andl
andl
mov
sub
sub
inc
mov
adcl
mov
mov
cmpl
mov
movzwl
movl
movl
jmp
mov
movl
jle
pushl
call
or
addl
sub
xor
mov
adc
or
mov
push
cmpl
movl
movl
movl
jmp
movzbl
jle
push
call
orl
and
adc
orl
adc
subl
add
sub
pop
sub
adcl
mov
andl
add
subl
mov
sbbl
lea
addl
mov
xor
add
mov
adc
mov
mov
xor
mov
xor
xorl
xor
shr
orl
shl
incl
or
addl
mov
movzwl
adc
movl
mov
dec
mov
xor
subl
xor
xorl
shr
shl
or
adcl
push
lea
xorl
push
lea
adcl
push
andl
call
mov
mov
mov
xor
mov
xor
cmpl
mov
mov
not
jmp
mov
jne
pushl
push
push
pushl
call
sbb
mov
or
mov
or
inc
xorl
inc
xor
cmpl
mov
mov
movl
jmp
movl
movl
jbe
push
call
adc
add
sub
sbb
orl
sub
shr
movzwl
add
mov
shl
or
subl
push
andl
lea
push
mov
mov
shrd
shr
mov
mov
xor
jmp
rorl
lret
jb
jns
pusha
xor
cmp
sbb
adc
sbb
inc
xchg
sarl
test
cs
cmp
pop
sbb
mov
push
fcomps
fisttps
inc
jmp
adc
push
lods
data16
loope
les
xlat
mov
xor
fisttpll
fwait
notl
push
push
sbb
fwait
pop
jmp
push
xchg
in
or
aaa
fmuls
scas
mov
xor
out
mov
kortestb
nop
pop
scas
orl
test
mov
mov
xchg
pop
inc
sub
daa
jb
and
adc
rorb
cmp
cmp
inc
test
jl
or
push
push
mov
ljmp
divl
sahf
jb
filds
test
shrb
xor
lret
lods
push
adc
out
loope
pop
std
push
jmp
mov
adc
insl
cmpsb
cltd
mov
imul
xchg
mov
loope
cwtl
jns
scas
push
pop
int3
nop
push
mull
fs
mov
dec
push
or
fwait
popf
add
or
xchg
sbb
pop
lock
popa
push
mov
inc
cwtl
cmpsb
mov
or
adc
cli
fnstsw
dec
mov
movsl
jne
xor
jl
mov
repnz
int
ja
negb
sbb
aas
je
sub
sub
jae
outsb
jne
mov
outsl
cmp
cmc
sub
aaa
insb
push
push
cmp
xchg
rclb
sahf
sub
test
ljmp
rcrb
iret
xchg
addr16
loope
imul
test
jnp
sub
xchg
sbb
mov
pusha
sub
mov
mov
out
insb
lret
int
insb
out
cld
xor
jne
xchg
popa
imul
inc
in
repnz
fldt
test
fisubrl
xor
or
lea
push
shl
call
mov
mov
xor
xor
shr
shl
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
lea
push
shl
call
mov
mov
xor
xor
shl
shr
or
push
lea
push
mov
mov
shrd
shr
mov
mov
jmp
dec
shlb
sbb
ds
jns
imul
sbb
adc
sbb
and
or
das
cltd
xor
xchg
adc
loop
lret
mov
jnp
lret
jns
sub
cltd
stos
icebp
aam
jnp
rcrl
data16
pop
lock
and
mov
dec
or
data16
lret
cs
dec
fisttps
jg
inc
mov
loope
jns
aaa
push
sbb
cs
or
andb
vpmacssww
xchg
inc
clc
cmc
cmpsb
gs
jbe
cli
xchg
mov
std
out
cmp
lcall
lret
xor
mov
pop
lret
or
and
add
rcrl
shll
das
test
lret
repnz
push
clc
cltd
je
xor
mov
fs
ds
es
lcall
icebp
les
inc
xor
and
mov
jne
int
pop
out
jecxz
cmpl
ja
mov
movsb
mov
mov
pop
stc
fdivrs
adc
faddl
pop
mov
in
nop
xor
std
clc
pop
mov
xchg
stc
mov
imul
cmc
or
inc
jmp
jo
mov
push
or
jnp
push
nop
cmpsl
test
in
les
popf
sbb
sti
aad
imul
dec
outsb
jge
cmp
lret
in
ja
xchg
lret
cmp
arpl
inc
aaa
ret
inc
inc
sbbl
test
and
adc
dec
push
popf
data16
outsl
shll
ja
mov
mov
push
fidivl
adc
mov
push
cwtl
push
mov
es
add
adc
daa
xor
xchg
aas
test
mov
jp
mov
adc
dec
push
nop
adc
lcall
data16
jne
je
fs
push
jg
xor
lods
ret
mov
push
mov
mov
out
push
inc
push
mov
lock
pop
dec
out
xchg
mov
xor
xor
or
shl
mov
jmp
in
je
push
fimull
movsl
mov
inc
xor
sbb
adc
sbb
js
stc
pushf
lret
pop
dec
sarb
aas
scas
xor
fadd
dec
adc
cmpl
std
fcoml
mov
lods
lds
fidivrs
sbb
fdivs
mov
cwtl
hlt
shll
sbb
movsb
leave
ja
fnstsw
jae
ljmp
sbb
or
rorl
loope
push
or
and
mov
add
sti
push
outsl
js
loope
dec
in
sti
or
scas
out
addr16
orl
btc
bnd
xor
int
pop
cmp
test
in
in
faddl
adc
decb
popf
scas
repnz
cs
jge
test
xchg
jne
addb
xorb
cltd
lcall
xorb
mov
cs
push
and
ja
rol
sub
rcr
pushf
out
rol
gs
push
dec
push
test
cmpsb
ja
xchg
mov
and
jne
cmc
push
insl
push
xorl
add
pop
lcall
dec
dec
jl
mov
je
push
in
repnz
bound
addl
inc
fst
sbb
test
cmp
mov
add
cs
bound
stos
mov
and
pop
es
call
out
sahf
jecxz
andl
or
jl
rcrb
and
cmpsl
ss
adc
push
ds
fisttpll
rorb
and
popa
ret
testb
add
cmp
arpl
adc
mov
bnd
and
mov
and
adc
sti
sbb
dec
mov
hlt
pushf
mov
mov
test
mov
lods
roll
shr
mov
mov
xor
xor
or
add
lea
push
shl
call
mov
mov
xor
shl
xor
shr
or
push
lea
push
mov
mov
shrd
shr
mov
mov
xor
shl
mov
xor
or
mov
shrd
shr
mov
mov
xor
xor
or
shl
add
mov
mov
shrd
shr
xor
mov
mov
xor
or
add
lea
push
shl
call
mov
mov
xor
xor
shr
shl
or
mov
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
mov
mov
push
pushl
shl
call
lea
push
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
mov
push
pushl
shl
call
mov
mov
mov
mov
mov
mov
rol
mov
xor
cmp
je
mov
mov
xor
test
je
mov
mov
movzbl
sub
mov
rorb
mov
mov
inc
cmp
jb
dec
jne
mov
mov
shrd
shr
mov
mov
xor
xor
or
push
add
push
lea
push
shl
call
mov
mov
shrd
shr
mov
mov
xor
xor
or
add
push
push
mov
shl
mov
shrd
shr
mov
mov
xor
xor
or
add
push
shl
call
push
jmp
fdivrl
sbb
mov
mov
and
sbb
notb
sbb
mov
push
stc
jnp
pop
xor
sub
push
arpl
pushf
pop
cld
fdivs
iret
shll
sub
andl
sub
push
sub
xor
push
adc
pop
xchg
sbb
fistl
clc
and
inc
mov
cmc
xchg
adc
iret
pop
insl
out
push
test
cmp
lods
mov
test
xorb
rolb
sub
xchg
repz
stos
pop
insl
sub
out
and
insb
dec
mov
push
test
xchg
mov
clc
pop
mov
std
repz
scas
cld
lret
push
int
cmp
imul
sub
dec
pop
pop
cli
lock
mov
loopne
dec
jp
dec
jle
outsl
stos
stos
cmpsb
sub
in
add
mov
xor
cwtl
xlat
sti
sub
std
inc
fldenv
cmc
cmp
shl
sbb
mulb
repz
ficomps
push
arpl
lds
cmc
cld
mov
scas
stc
jp
in
adc
in
xchg
sbb
cmc
mov
loope
jge
push
bound
std
jae
test
ret
mov
push
and
dec
sub
xchg
or
jb
addps
and
lds
aad
sub
mov
fists
xchg
cmpsl
cs
aad
add
push
push
cmp
cltd
ljmp
inc
jp
mov
dec
inc
ljmp
inc
sbb
loope
sbb
mov
ljmp
sub
jge
mov
imul
jmp
pop
jge
adc
cmp
add
cs
sbb
adc
and
aam
dec
or
mov
enter
in
ss
push
or
lret
push
fcomps
xchg
push
pop
shrl
push
jns
xor
cmpsl
push
enter
ja
and
lea
push
mov
mov
jmp
aaa
and
dec
mov
push
out
lods
ret
ljmp
sbb
notb
sbb
mov
addl
and
xchg
hlt
xchg
adc
mov
jne
loopne
jo
sub
mov
shll
gs
fdivs
popa
jo
loop
ret
enter
inc
adcb
or
std
dec
mov
mov
mov
in
cmp
test
in
sbb
dec
xor
sbb
or
and
push
gs
and
out
xor
imul
or
jmp
outsl
mov
rorl
sub
cmp
adc
mov
leave
adc
dec
or
mov
lret
push
or
mov
lcall
xor
repz
stc
lcall
push
insl
pusha
or
test
push
es
mov
in
inc
jl
imul
cmp
jns
divl
mov
mov
mov
leave
fmuls
inc
jmp
sbb
mov
xor
testl
jg
mov
enter
sbb
ret
lock
inc
mov
and
adc
pop
mov
push
cli
sub
and
sbb
insl
clc
pop
cmp
js
sbbb
adcb
dec
shlb
lds
notl
push
or
inc
es
imul
enter
jne
std
popa
mov
or
xor
inc
int3
fldt
cs
test
mov
mov
scas
inc
xchg
aas
stos
test
xchg
mulb
pop
mov
clc
cmpsb
icebp
nop
xor
ret
in
imul
or
faddl
fisubrs
pop
int3
inc
and
aad
jns
add
mov
dec
notb
push
add
sbb
mov
mov
mov
dec
bound
subb
pop
cli
adc
sbb
pushf
sahf
shrd
shr
mov
mov
xor
xor
or
add
push
shl
call
mov
mov
shrd
shr
jmp
add
bound
cmp
push
fsub
xchg
mov
fsubl
sbb
notb
sbb
pop
mov
add
dec
push
fldl
mov
int
ret
and
lcall
jmp
call
fmull
incl
sub
repz
outsl
stos
movsb
enter
push
or
aam
and
add
xor
scas
scas
mov
push
in
in
in
dec
repnz
pop
xor
lahf
mov
scas
daa
popf
cmpsl
aam
add
cmp
dec
or
lret
push
mov
out
sahf
adc
ss
inc
rcrb
jne
cmpsb
fnstsw
mov
cwtl
jne
adcl
lret
xor
add
faddl
das
xchg
jl
or
mov
sar
popf
idivb
int3
dec
repz
int3
cli
es
rorb
into
inc
xchg
push
outsb
fcomps
addr16
lods
imul
lahf
or
div
push
scas
add
lea
notb
push
scas
call
push
call
aad
stos
jnp
fmul
shr
lds
outsl
sub
movsb
add
sbb
push
adc
xor
xchg
or
jmp
movsl
pop
aam
adc
mov
xchg
jp
push
repz
lea
or
inc
xchg
test
sub
aas
es
popf
push
mov
imull
shll
xor
jb
mov
rcrb
xchg
xor
shrl
call
divb
nop
sbb
and
mov
xchg
jmp
push
movsb
loopne
inc
sub
icebp
or
or
dec
push
popa
push
orl
rolb
stos
ret
xchg
cltd
popl
popf
cmp
mov
add
mov
dec
cld
xor
pusha
roll
jb
and
pop
or
or
jl
add
inc
cmc
daa
mov
stos
in
call
push
into
lods
loop
test
ja
dec
adc
xor
pop
shl
or
pop
leave
ret
mov
mov
xorl
or
mov
jne
mov
andl
mul
ret
push
orl
mul
cmpl
movl
movl
mov
jmp
mov
jbe
call
mov
sub
mov
sub
movzwl
or
add
adc
movzbl
or
add
mov
mov
mull
add
mov
mul
add
pop
ret
push
mov
sub
push
push
push
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
xor
div
mov
xor
mov
push
div
mov
xor
xor
sub
mov
lea
mov
mov
sub
xor
mov
xor
or
xor
mov
sub
mov
mov
xor
mov
sub
div
mov
pop
xor
sub
cmp
ja
jmp
mov
movl
movl
movl
movl
mov
mov
mov
sub
imul
xor
xor
div
mov
mov
push
and
mov
sub
sub
mov
jmp
ss
mov
in
movsl
mov
mov
adc
sbb
xchg
push
sub
pop
ja
daa
cmp
scas
cmpsl
insl
jne
call
int3
imul
sbb
icebp
negl
das
enter
or
ds
movl
daa
rclb
pop
sahf
addr16
jp
cmp
ja
and
subl
jge
inc
clc
pop
push
pop
stc
pop
cmp
cmpsb
loop
fwait
dec
push
mov
mov
inc
scas
aam
sbb
int
loop
or
jne
adc
fucomip
add
mov
cmpsl
pushl
cld
dec
fs
cmp
test
out
mov
ficompl
popa
jmp
es
repnz
pop
pop
shl
mov
sub
into
sub
and
or
popa
sub
insb
cltd
cltd
mov
inc
lret
sub
push
and
adc
jb
repnz
fwait
sbb
inc
xor
jge,pt
iret
adc
sub
scas
push
and
inc
xchg
push
pop
es
xchg
addl
xor
and
mov
dec
movsl
movsl
mov
sub
fs
scas
nop
std
stos
jo
dec
or
aas
push
orl
xor
push
test
jmp
xchg
roll
sub
push
mov
sahf
shlb
xchg
sub
mov
pop
adc
cmpsl
subb
pop
fildll
push
idiv
mov
xchg
in
cmp
test
inc
test
stos
popl
imul
inc
fiadds
sub
xchg
rcll
cmp
lahf
pop
and
les
jbe
pop
shl
fsubp
call
mov
sub
add
out
add
jne
popf
inc
xchg
stc
dec
gs
or
push
ret
lret
daa
mov
xlat
mov
push
js
xchg
adcb
pop
lock
stc
or
movsl
test
ret
sub
mov
adc
data16
mov
out
movsb
fistps
adc
sub
xor
test
xchg
loopne
int3
repnz
mov
mov
loope
inc
mov
and
fmull
jg
xchg
das
push
cmp
add
in
in
mov
movsb
les
inc
rorb
mov
xor
and
add
add
mov
mov
add
mov
xor
jmp
cli
push
test
adc
idivb
sbb
sbb
imul
or
test
xchg
push
ret
stos
push
out
xor
fstps
xor
mov
xor
sbbl
in
mov
into
test
outsl
adc
mov
imul
lods
add
xchg
mov
rcll
sarl
arpl
ja
cmc
stos
xchg
insb
testl
cmpsb
push
cmp
rorl
mov
iret
xchg
in
pop
js
outsb
mov
js
hlt
push
pop
roll
insl
mov
cmpsb
push
push
inc
adc
mov
popa
pop
add
ret
xchg
sub
movsl
add
std
imul
jae
push
addl
in
shr
in
xorb
test
mov
pop
jb
lahf
imul
sub
pop
hlt
clc
clc
cmp
fbld
sbb
pushf
jno
adc
cmp
cs
push
and
mov
pop
loop
push
jo
jo
dec
cmc
shl
es
mov
add
pop
mov
movsl
shll
test
sahf
fidivs
test
dec
add
fidivrl
aam
cli
pop
mov
pusha
sub
dec
nop
mov
adc
sti
push
and
in
call
aad
fadds
inc
ffree
int3
xchg
ds
jno
dec
jno
and
repz
pop
lods
inc
das
sahf
inc
int
stos
mov
and
xchg
ror
inc
xlat
push
dec
int
lea
or
mov
test
pop
jb
les
jg
jns
ds
repz
or
bound
mov
mov
dec
sti
dec
jne
out
or
gs
push
pop
add
faddl
and
inc
fs
add
xchg
dec
dec
cld
xchg
mov
mov
push
std
and
les
pop
shll
insl
lret
fsincos
xchg
aad
jl
clc
call
scas
xor
adc
andl
shrl
and
aas
lret
cmp
pop
pop
scas
and
mov
subb
sahf
mov
push
mov
popa
add
sub
mov
add
mov
sub
xor
mov
xor
or
xor
mov
sub
mov
mov
mov
xor
xor
sub
div
pop
xor
sub
cmp
jbe
pop
pop
pop
leave
ret
push
mov
and
mov
sub
push
push
push
push
pushl
call
mov
movzwl
push
call
test
jne
movl
xor
movl
jmp
subl
mov
cmpl
not
mov
jmp
not
mov
je
push
push
push
push
push
call
mov
add
movzwl
xor
adc
or
or
xor
cmpl
mov
mov
mov
mov
jmp
mov
movl
ja
push
push
call
add
or
or
mov
mov
sub
add
add
movl
movl
xor
or
sbb
mov
xor
or
adc
mov
orl
xor
xorl
imul
adcl
and
subl
sub
cmpl
movl
movl
movl
jmp
movl
jge
pushl
pushl
push
push
call
andl
add
mov
sbb
sub
and
xor
add
xor
movzbl
adc
xor
mov
add
movl
xor
add
mov
sub
and
movl
movl
sbb
movl
mov
movzwl
sbb
mov
sub
movzbl
or
mov
xorl
and
sbb
jmp
dec
test
and
ljmp
push
sbb
sbb
adc
sbb
rcrb
lcall
dec
dec
dec
pop
into
clc
shrl
ss
arpl
add
jns
mov
test
inc
loop
sub
dec
stc
add
into
xorb
test
mov
dec
movsl
in
mov
ficomps
sub
fildl
lret
outsb
mov
dec
pop
lods
fisubrl
cmpsl
mov
decl
and
test
lds
loop
pop
cmp
dec
pop
cld
dec
jne
rcrb
xor
or
fbstp
mov
test
or
adc
mov
out
testl
loop
mov
jnp
inc
call
dec
xor
mov
jle
movsb
push
sbb
scas
notl
filds
cmp
sbb
rclb
pop
fwait
cmp
jns
rorb
push
sbb
cmp
ja
ficoml
gs
sahf
les
push
jae
fadd
fwait
xor
xchg
arpl
daa
pop
lods
outsb
in
or
cmp
mov
ret
xlat
jecxz
cmp
mov
test
sub
addr16
push
sahf
mov
push
out
cmp
testl
dec
inc
sti
cmp
pop
inc
dec
fiaddl
dec
test
adc
xchg
xchg
rorl
bound
push
xor
addl
bswap
cmpsl
hlt
stos
jecxz
std
add
ret
lahf
dec
push
rcrb
dec
loope
pop
test
mov
or
xchg
fwait
xlat
mov
jmp
pop
add
scas
pop
or
and
jle
sub
pop
jne
mov
fstpt
cmp
lret
or
sub
jle
add
ljmp
xchg
call
pop
movsb
mov
popa
lods
xlat
icebp
fildl
pop
jnp
mov
mov
mov
dec
dec
pop
sbb
int
sahf
or
xor
or
xor
icebp
adc
arpl
lds
sbb
cmp
sbb
aad
sbb
jg
xchg
scas
xchg
call
mov
jmp
rep
stos
push
push
pop
shll
pop
sub
inc
push
add
and
fisubrl
add
or
mov
push
sahf
xor
mov
pop
int3
insl
cmp
jle
push
xchg
iret
or
rorl
mov
pop
cwtl
jno
xor
sub
dec
lahf
hlt
cld
push
lds
enter
pop
push
movsl
push
in
fdiv
test
fiaddl
fwait
mov
mov
lods
lcall
or
mov
or
mov
pushf
xchg
bound
pop
xlat
jmp
movsl
out
sub
fldenv
mov
cmp
pop
sub
adc
jl
xchg
movl
pusha
sahf
imul
cmp
mov
inc
scas
and
sub
adc
or
add
xor
jae
dec
inc
iret
sbb
aam
sbb
push
mov
xor
pusha
pop
add
push
lret
xchg
dec
stos
pop
mov
or
cmp
or
shl
and
inc
ret
mov
adc
cli
sub
mov
mov
mov
pop
enter
adc
adc
mov
add
xor
sub
imul
movl
mov
movl
cmp
jne
movl
xor
xor
sbb
movl
movl
movl
pushl
mov
or
movl
cmpl
mov
notl
movl
movzwl
jmp
movl
jne
pushl
call
xor
add
mov
sub
orl
mov
mov
adc
movl
movl
movl
sbb
movl
mov
xor
xor
sub
sub
movl
sbb
movl
or
mov
cmpl
movl
mov
jmp
movl
jb
push
call
sbb
add
sbbl
addl
sub
xor
subl
add
mov
notl
imul
movl
or
xor
xor
adcl
pushl
cmpl
movl
mov
mov
jmp
mov
movl
jl
push
push
pushl
call
add
mov
xor
andl
sbb
and
xor
mov
add
push
pop
xor
subl
div
andl
mov
xorl
xor
or
xor
mov
or
sbb
mov
adcl
div
xor
xor
xor
adcl
pushl
sbb
mov
xorl
mov
orl
pushl
movl
add
pushl
imul
pushl
add
mov
adcl
mov
addl
xor
mov
div
and
subl
or
movl
pushl
orl
call
andl
dec
movl
jne
movl
mov
mov
and
mov
mov
andl
movl
adcl
mov
call
mov
mov
sub
xor
lea
subl
mov
add
lea
mov
or
mov
mov
cmpl
mov
mov
jmp
movl
jbe
pushl
push
push
call
sub
or
add
xor
dec
incl
cmpl
movl
movl
movl
jmp
movl
mov
ja
push
pushl
push
pushl
push
push
pushl
push
call
mov
xor
mov
adc
sub
add
adc
mov
sbb
mov
and
mov
cmpl
movl
movl
movl
movl
jmp
mov
mov
ja
push
push
push
push
call
sbb
sub
mov
mov
sub
add
xor
or
add
xor
and
mov
xor
cmpl
not
mov
movl
movl
jmp
mov
movl
je
pushl
pushl
pushl
push
call
neg
add
sbb
xor
movl
and
xor
add
shl
shr
or
mov
cmpl
movzwl
mov
movl
jmp
movl
movl
jae
pushl
push
push
call
movzwl
sub
mov
adc
mov
adc
mov
mov
sub
imul
inc
xorl
and
andl
mov
mov
mov
and
mov
movl
mov
mov
xor
mov
shrd
neg
shr
addl
mov
mov
jmp
push
lcall
das
lea
inc
adc
sbb
adc
sbb
or
mov
mov
pusha
stos
push
pushf
mov
inc
sub
movsl
das
daa
pop
lahf
pop
inc
xchg
push
push
cmp
ja
out
mov
adc
jo
jne
pop
xchg
fstpl
xor
xchg
add
sbb
mov
rolb
repnz
or
push
add
jno
mov
mov
btc
jp
lods
and
test
fstps
mov
cli
adc
mov
xrelease
pusha
cmp
push
add
adc
xor
or
xor
mov
mov
sub
repz
inc
aad
add
add
jmp
pushf
adc
inc
cmpsb
fs
sahf
sub
mov
and
in
cld
inc
jmp
mov
stos
pop
push
cmpsb
xchg
stos
sbb
mov
jns
mov
cmp
movsb
repz
fs
dec
mov
or
sbb
xchg
pusha
enter
cld
movsb
not
aaa
pop
push
pop
xchg
dec
out
xor
js
into
xchg
push
outsb
pop
or
stos
xchg
pop
sbb
mov
hlt
mov
xchg
mov
stc
mov
out
jp
jp
sbb
movsl
test
imul
sub
ret
jae
or
xor
xor
test
jo
mov
mov
cwtl
inc
jbe
adc
xchg
shll
and
dec
orl
cld
jnp
lods
test
mov
xor
shrb
loop
dec
jl
enter
push
ror
pop
adc
into
fwait
xchg
ja
imul
mov
outsl
les
arpl
mov
clc
xor
and
out
pop
out
push
fstps
pop
jo
aaa
ljmp
inc
cmp
mov
sbb
and
mov
jmp
xor
xor
aaa
ljmp
xor
cwtl
mov
repnz
aas
add
sub
outsl
loope
mov
sbb
xor
mov
and
mov
out
test
sbb
cld
add
jle
sarl
arpl
push
add
adc
or
je
fldl
ljmp
and
pop
imul
xchg
jecxz
or
dec
push
lea
dec
inc
into
jae
and
pop
mov
daa
pop
push
add
enter
shlb
into
ret
pop
inc
add
cmpsb
rcrb
pop
jae
insb
inc
sbb
push
push
jno
or
pushl
xor
arpl
inc
mov
lea
mov
lret
inc
pop
pop
ret
pop
xchg
cli
fists
mov
jb
mov
mov
mov
cwtl
and
pop
adc
or
push
idivb
sbb
nop
xchg
int3
mov
bound
xchg
xor
mov
test
pop
pushf
add
mov
xchg
mov
in
repnz
xor
pushf
mov
lcall
fdivp
jmp
aas
and
and
outsl
stc
xor
sbb
es
xor
incl
xor
or
mov
push
pushl
lea
negl
push
andl
shl
call
subl
lea
orl
push
subl
mov
mov
subl
lea
push
mov
orl
lea
mov
xorl
mov
adcl
jmp
imul
inc
push
xor
push
sbb
adc
sbb
insl
push
iret
mov
imul
mov
pop
fisubrs
fcompl
mov
pop
mov
ja,pt
adc
mov
cmp
fisubs
sbb
sbb
push
cld
inc
add
insl
mov
cli
lods
js
fcoml
int
filds
test
lcall
adc
ljmp
pop
lods
mov
sub
dec
push
mov
pop
movsb
fiadds
stos
adc
push
enter
mov
xchg
dec
inc
pusha
add
inc
mov
jno
negl
inc
pop
andl
xor
bound
and
loopne
xor
ljmp
jnp
jno
scas
in
into
xchg
dec
dec
cmc
pop
push
jl
xchg
lahf
sub
jbe
out
add
add
sbb
clc
add
sbb
cmp
adc
gs
mov
outsl
push
mov
push
or
or
pop
jo
xor
sti
lock
movsl
rcll
xchg
mov
jmp
or
pop
ds
xor
and
adc
nop
pop
icebp
dec
pop
fwait
daa
popf
xchg
icebp
dec
test
cwtl
jmp
in
cld
lods
imul
mov
out
push
outsl
sbb
or
dec
mov
jl
mov
lods
ud2
mov
mov
shr
dec
jl
push
int
sahf
lret
fwait
fs
or
popf
popf
sbb
cmp
sub
sbb
pop
in
ret
pop
xchg
cmpsb
sti
inc
lahf
imul
xor
rorb
jae
or
jp
cmp
push
sbb
aam
inc
insb
lods
clc
mov
ljmp
pop
adc
cmp
pop
add
pop
push
lods
xor
cli
inc
and
mov
sub
jg
push
and
jmp
add
lcall
sbb
mov
push
or
push
stc
mov
xor
shrb
sti
xorb
fidivs
jbe
mov
cmc
cmp
mov
out
lea
or
inc
stos
jle
in
hlt
or
or
cmp
addr16
pop
testl
int
test
jo
and
mov
inc
lock
push
jno
xchg
test
cmp
imul
xor
popf
push
push
enter
lods
ss
mov
sub
fistl
dec
dec
dec
push
sbb
xor
aad
repz
insb
cmpl
fld
scas
je
pop
lods
jo
das
loop
cli
inc
ljmp
test
addr16
sbbl
xchg
or
jmp
iret
fcmove
sbb
scas
cmp
sbb
sahf
jb
mov
sub
testb
decb
jo
sub
or
aaa
cmpsb
xor
jae
mov
pop
outsl
cmp
xchg
mov
inc
push
cmpsb
mov
fstps
jl
sub
mov
int
mul
jnp
or
rcrb
cmpsl
mov
inc
sti
out
es
add
divl
cmpsl
xor
pop
sub
adc
das
cli
lahf
or
int3
cmpsb
inc
shlb
scas
ret
shlb
inc
fidivrl
xchg
sbbl
rcrl
cmp
mov
jno
test
mov
dec
bound
ficomps
test
je
sbb
sub
testb
add
mov
push
in
xor
dec
imul
adc
sbb
adc
das
xlat
mov
stos
hlt
sbb
imul
rcl
pop
push
sub
loop
or
and
dec
lds
mov
ja
push
int
das
adc
xor
out
cmpsb
pop
xchg
inc
icebp
cwtl
jle
les
ds
je
hlt
add
fcmovnb
dec
inc
xchg
fsubs
cmp
cs
dec
push
daa
sub
rcl
mov
into
xchg
test
sarb
out
mov
adc
jecxz
call
sub
cmc
inc
sub
dec
push
jae
andl
push
mov
out
pushf
jge
inc
negl
xlat
arpl
jge
outsb
or
ficoms
es
push
hlt
mov
dec
xchg
mov
inc
and
mov
icebp
hlt
push
sbb
in
cwtl
into
xor
add
sub
clc
sub
adc
xor
adc
mov
sub
in
add
adc
fmul
xor
into
movsb
jge
push
or
into
jp
and
cwtl
popf
shll
js
int
xchg
or
aam
sbb
jo
mov
dec
xchg
shll
int3
and
pop
mov
mov
inc
test
insl
sbb
loop,pt
pushf
repz
dec
out
nop
out
daa
push
das
and
push
call
dec
xor
test
fistpll
cmpsb
pop
arpl
out
das
adc
fidivl
lcall
push
adc
subb
xor
pextrw
scas
mov
sub
cli
jnp
cmp
xor
mov
pop
push
fst
push
cmp
or
faddl
in
fisubl
clc
pop
out
fistpl
mov
jmp
jno
sub
ret
inc
mov
sbb
mov
pushl
nop
int
or
and
out
dec
shll
sahf
test
ja
clc
scas
lock
inc
mov
ja
dec
pop
cltd
aaa
push
inc
leave
push
adc
push
pusha
adc
add
or
jp
fucomp
in
insb
jbe
or
out
das
jge
pop
jne
test
pop
mov
repz
and
lret
push
fsubl
icebp
stos
lds
fnstenv
mov
mov
daa
fnstsw
mov
in
xchg
jne
pop
add
push
pop
ljmp
cs
loop
add
xor
or
in
je
add
or
test
int
stos
adc
sub
fs
fisubrs
xchg
lods
sub
ss
arpl
mov
mov
inc
and
xor
jge
pop
cmc
pusha
insl
pop
push
icebp
inc
cs
jecxz
ret
inc
mov
xchg
sarl
sub
cmc
scas
aam
sbb
mov
adc
mov
psadbw
push
mov
in
cwtl
out
in
lods
xor
mov
in
rcll
leave
cmp
and
notb
mov
insl
jno
jb
mov
inc
cmp
lods
mov
cmp
testb
ja
imul
popf
inc
adc
int
or
insl
sub
mov
xor
dec
addb
add
xor
testb
inc
add
add
inc
add
je
adc
in
decl
dec
and
and
mov
neg
mov
shr
shl
or
mov
xor
add
sub
or
mov
xor
mov
sbb
lea
mov
xor
lea
sub
mov
mov
sub
mov
sub
mov
mov
xor
lea
movzbl
and
xor
cmpl
movl
not
jmp
mov
movl
jbe
push
call
sbb
add
sbbl
subl
movzbl
sub
mov
movl
sub
movl
movl
subl
movl
cmpl
mov
mov
movl
jmp
mov
jbe
pushl
call
sub
mov
sbb
adc
and
adcl
sbb
xor
mov
mov
xor
mov
movzbl
and
mov
xor
mov
add
movl
adc
subl
xor
cmpl
mov
mov
mov
jmp
movl
je
push
push
push
push
call
inc
and
orl
orl
xor
and
mov
mov
xor
mov
adc
and
mov
adc
movl
adc
movl
cmpl
mov
mov
movl
jmp
mov
jne
pushl
push
call
xor
sbb
sbb
movzwl
or
movl
movl
add
movl
movl
movl
notl
mov
movl
mov
cmpl
notl
movl
jmp
not
jg
pushl
push
pushl
push
push
pushl
call
xor
mov
or
sub
adcl
subl
mov
mov
push
push
or
or
push
push
call
mov
mov
sub
mov
jmp
je
or
pop
pop
mov
cmp
inc
cld
push
sbb
adc
sbb
cld
mov
jl
mov
dec
into
mov
add
jle
mov
addr16
jp
xchg
add
jb
mov
sub
inc
das
in
add
inc
movsl
rcll
or
push
je
test
lcall
cli
mov
repnz
iret
es
jae
test
fs
test
mov
jle
xlat
das
ficompl
std
mov
sbb
jno
jmp
shll
dec
lret
jo
fnstsw
stos
push
push
cmp
add
sub
pushf
push
mov
dec
nop
mov
sbb
rorb
sti
xchg
aam
pop
lods
cmpsb
mov
mov
add
test
movsb
lock
push
divb
jg
sub
xor
test
ljmp
cld
or
cld
stc
int3
ljmp
sbb
mov
int3
fdiv
repz
insb
in
repz
mov
push
mov
xchg
loop
cmp
mov
fsubr
enter
or
fisttpll
in
mov
mov
rcll
jo
add
xchg
lret
or
int3
inc
mov
sti
lret
ja
pop
cmp
or
add
xchg
xchg
int
pop
aas
mov
ja
mov
xor
test
jae
pop
fimull
push
leave
roll
movsl
mov
xchg
mov
mov
mov
mov
dec
popa
in
jne
sarl
xor
repnz
sbb
or
aas
fistpll
stos
imul
daa
loopne
and
push
iret
stc
jbe
xor
sbb
jge
pop
mov
pop
dec
scas
push
mov
repnz
daa
movsl
ret
imul
aam
and
popf
jb
inc
jg
sbb
push
fldt
sub
fcomps
mov
inc
rclb
das
daa
fs
pop
xchg
jns
jne
jg
push
adc
jne
out
push
cmp
jl
pop
repz
fsubrl
dec
sub
or
hlt
cli
and
or
adc
imul
cltd
sub
sub
icebp
jmp
dec
pop
pop
scas
and
out
inc
lahf
pop
mov
cmp
popf
xchg
dec
dec
jp
lds
jecxz
cmp
jbe
mov
xor
adc
mov
push
mov
rorb
mov
pusha
hlt
test
mov
mov
adc
and
lcall
or
sub
inc
fstpl
cmpsb
cmpsl
fcmovb
stc
popa
xor
inc
mov
or
aas
repz
stos
xor
mov
icebp
cld
pushf
adc
mov
fmuls
lret
cld
jb
adcl
imul
jnp
adc
incl
fmull
jp
roll
pop
sti
lahf
aam
rcll
lds
ljmp
out
out
xchg
iret
sbb
xchg
lds
mov
psubsw
jg
or
rcrl
xor
lahf
push
cmp
dec
movsl
adc
cmp
dec
pop
aaa
sbb
in
mov
adc
insb
inc
arpl
sub
xchg
out
push
sbb
mov
cmp
jne
cmp
je
movl
movl
movl
movl
mov
mov
mov
mov
add
adc
xor
xor
and
mov
and
mov
jmp
and
and
cmp
out
inc
notb
sbb
adc
sbb
cmpsb
push
sub
inc
jmp
xor
mov
xchg
jmp
les
sbb
adc
mov
push
std
jg
test
movsb
into
aam
push
cli
into
fstpt
jb
fildll
rcrl
lock
mov
dec
lahf
dec
test
mov
dec
push
nop
cmpsb
or
and
cmp
sub
cmp
inc
decb
mov
jbe
frstor
push
insl
jne
jae
fistps
mov
addr16
cwtl
movsl
add
clc
fists
and
cmpsl
sub
decb
push
push
mov
test
test
fcmovb
hlt
mov
mov
mov
adc
pop
daa
jno
fcomps
movsb
sbb
add
lahf
dec
scas
ficompl
adc
scas
outsb
lods
es
xor
push
jbe
imul
or
imul
loopne
mov
xor
std
or
cmp
out
xchg
push
push
cmp
cmpb
lock
pop
push
imul
loopne
adc
out
jp
adc
push
fmull
sahf
xchg
or
rcrb
dec
popf
fs
roll
rcrb
pop
push
mov
inc
adc
jb
mov
xchg
mov
decl
xor
add
mov
gs
mov
xlat
xor
adc
out
test
nop
ja
or
test
in
mov
and
mov
jnp
pop
fildll
lock
addb
mov
sbb
adc
adc
mov
js
cmpsl
test
xchg
inc
xor
idivb
xchg
xor
dec
testb
push
negl
jl
mov
jo
ljmp
outsl
outsb
mov
sbb
sarb
jns
xchg
repnz
pop
inc
js
jb
adcl
mov
sti
stos
fldcw
arpl
das
cli
push
jnp
mov
mov
enter
fcoml
mov
clc
mov
xchg
and
xchg
xor
push
sbb
mov
xor
inc
ret
jmp
pop
inc
xor
and
adc
and
imul
sbb
stos
in
js
enter
repz
mov
pop
jge
inc
in
jnp
xchg
adc
dec
cmp
out
test
lcall
xcrypt-cbc
mov
mov
xorl
mov
dec
cltd
jno
mov
add
jmp
sub
mov
ds
daa
in
insl
test
mov
push
out
ret
pop
or
in
adc
pop
inc
pop
mov
add
popa
and
jbe
pop
jns
jb
pusha
inc
fs
out
or
and
add
ds
xor
xchg
out
dec
pusha
or
cmp
lcall
test
lods
xor
inc
mov
jbe
popf
imulb
dec
js
xchg
push
rclb
lret
push
aad
fs
adcb
push
push
pop
pop
pop
jle
shl
les
add
inc
dec
cmpl
sub
roll
xorb
add
sbb
push
sbb
add
inc
and
mov
add
movl
movl
movl
movl
movl
movl
mov
jmp
push
pop
xlat
jns
cmp
mov
std
adc
inc
out
push
sbb
adc
sbb
popf
sbb
jns
push
andl
cli
sub
sbb
imul
xchg
je
pop
mov
jno
sbb
testl
sub
scas
mov
inc
pop
aaa
cmp
stos
or
fiaddl
lds
jns
jae
div
add
xchg
loop
cli
int3
hlt
mov
int3
xchg
iret
sbb
testl
fxch
movsl
pop
lods
ret
lret
sub
xchg
scas
xchg
les
push
dec
in
or
scas
ss
push
shll
idivl
call
dec
mov
nop
mov
andb
inc
add
push
mov
outsl
mov
mov
xchg
and
cmpsb
cld
insb
sub
push
xor
adc
cwtl
fcompl
xchg
sub
ljmp
jl
inc
adc
out
push
xchg
mov
mov
jno
cltd
daa
inc
clc
loope
jne
sub
pushf
mov
in
jo
jmp
js
lods
inc
int3
mov
mov
insb
movsb
into
xor
xchg
xor
insl
sbb
sti
mov
les
out
stos
out
stc
sub
imul
jge
insl
std
cs
sbb
outsb
pop
into
in
dec
lahf
inc
and
fnstsw
stc
push
sub
daa
ja
out
xchg
mov
adc
mov
push
sub
stc
xorl
xchg
clc
and
and
lcall
sbb
sub
cli
in
jmp
or
test
sub
mov
pop
and
adc
xlat
rcrb
mov
cwtl
xchg
push
inc
cmc
push
lcall
sub
test
xor
das
sub
mov
loope
adc
ja
cld
fstpt
push
stc
and
scas
dec
insb
fdivrs
push
push
or
pop
insb
in
add
out
pop
ret
add
adc
dec
xor
out
xchg
ja
jae
cmp
inc
mov
bound
add
lcall
cmc
xor
scas
je
jmp
mov
and
cld
xor
orl
cmc
ljmp
dec
and
hlt
sub
and
lret
cmp
enter
pop
and
iret
fnstcw
fisubl
push
cmpsl
mov
push
rcrl
and
shlb
fisubs
xor
popf
mov
movsb
std
mov
aad
out
dec
mov
mov
dec
addr16
arpl
xchg
add
xchg
jmp
imul
pop
lret
ss
sub
insl
mov
push
cltd
scas
mov
inc
stc
jb
mov
inc
push
pop
mov
xchg
push
clc
mov
or
pop
ljmp
and
jno
push
add
ret
sub
cmp
cli
jno
sar
xchg
shlb
sbb
movsb
and
mov
mov
lock
aaa
sub
sbb
lcall
ds
mov
mov
cmpsl
sbb
inc
es
stc
in
lods
hlt
scas
xchg
add
jae
outsb
mov
cwtl
pushf
mov
add
add
inc
fldenv
and
push
push
xor
xor
push
push
call
mov
mov
push
push
push
push
call
mov
mov
push
push
push
push
call
mov
mov
add
mov
adc
mov
cmp
jne
cmp
je
mov
mov
xor
shld
shl
jmp
sub
lds
and
ds
jno
stos
rcrl
sbb
adc
sbb
clc
sbb
add
jge
jmp
xchg
push
outsl
repnz
cmp
sbb
imul
pop
testl
mov
pop
lods
popa
jmp
int
stos
adc
adc
jae
xor
mov
mov
add
rorb
imull
jmp
popa
jmp
sbb
jo
push
testl
lea
xchg
cmp
or
lock
or
outsl
loop
jo
enter
shl
aas
mov
repz
repnz
mov
jo
aaa
or
fisubrl
and
or
pushf
sbb
sub
test
imul
adc
add
cmp
cmpsb
and
or
es
repnz
out
ret
addr16
inc
mov
and
je
sti
add
xlat
mov
jmp
stc
jbe
push
dec
xchg
xchg
pop
adc
jmp
xchg
divl
cmp
add
add
xor
sti
hlt
push
addr16
add
mov
mov
mov
rcr
int
jg
out
lds
push
repz
inc
hlt
mov
xchg
shrb
cwtl
xor
stos
shrb
xor
adc
push
popa
outsb
push
inc
into
mov
mov
subb
lcall
mov
lock
jae
out
ja
pop
cwtl
cmc
add
jne
aas
scas
clc
cli
mov
inc
aad
add
insb
xchg
lds
xchg
int3
push
dec
iret
sub
stos
sub
arpl
stos
stos
or
jns
lcall
or
mov
scas
sahf
fisubrs
addr16
sub
addb
and
or
adc
pop
jb
cmpsl
lret
dec
dec
inc
loopne
lahf
test
shlb
and
mov
stos
mov
xchg
push
pop
pop
add
sbb
mull
iret
push
adc
add
cmpsl
filds
dec
sarb
lods
pop
into
cmp
sub
jle
insb
dec
pop
mov
add
xchg
loop
xchg
mov
cltd
lret
cmp
push
insl
cmp
xchg
add
jae
aad
pop
or
scas
test
insb
es
cmpb
jmp
jbe
rcll
add
loop
sbb
les
inc
push
leave
and
adc
push
inc
test
inc
xchg
enter
loop
dec
icebp
inc
add
ret
mov
xor
push
lds
iret
push
cmc
pop
stos
add
sbb
add
lcall
ja
sub
cmpsl
repnz
int3
or
rcr
mov
lods
int
in
or
sub
mov
ljmp
xlat
sbb
sub
ds
in
mov
in
scas
es
mov
mov
jne
mov
cmp
jno
and
xchg
mov
cmp
cmp
into
outsl
and
mov
sbb
and
ja
sub
in
ror
xor
jecxz
xlat
cs
dec
scas
mov
das
ja
jecxz
out
mov
and
cmp
sub
fdivr
testl
lret
and
mov
xor
xor
mov
cmp
jne
cmp
je
mov
cmp
je
mov
mov
xor
xor
shrd
shr
mov
mov
mov
shl
xor
or
xor
mov
mov
or
cltd
cmp
jne
cmp
jne
movl
movl
mov
mov
mov
xor
shld
shl
mov
mov
xor
xor
mov
cmp
jne
cmp
jne
movl
mov
mov
shrd
shr
mov
mov
mov
mov
mov
shl
mov
xor
xor
or
cmp
jne
mov
mov
mov
mov
mov
mov
movzwl
mov
and
mov
or
mov
add
or
mov
mov
mov
jmp
cs
and
push
mov
cli
mov
sbb
sbb
xchg
push
movsl
clc
push
mov
iret
mov
mov
scas
pop
enter
adc
cmp
inc
sub
cltd
or
dec
cmc
rorb
mov
cmp
and
fmuls
pop
pop
out
mov
or
clc
lret
adc
sbb
dec
mov
cmpsl
jbe
or
cmc
or
imul
xchg
sub
mov
scas
cmc
lods
push
int
addr16
mov
mov
sub
sbb
sub
adc
inc
cltd
and
push
and
int
cmpsb
mov
push
inc
add
add
xor
xor
aas
lods
sahf
aad
jl
push
xor
loop
cmpsl
mov
add
popa
fsubs
stc
or
fstpt
sub
cltd
push
inc
inc
mov
xchg
js
sub
loop
aas
inc
or
xor
cmp
and
add
jl
das
lea
data16
push
sbb
pop
mov
adc
leave
aas
add
bound
jo
pop
xor
dec
pop
mov
in
fisubs
out
ret
call
xchg
loopne
dec
fnstenv
incb
lds
les
pop
dec
or
leave
xchg
bound
add
add
insb
mov
inc
pop
push
aad
sub
fsubl
fs
movsb
sub
mov
out
flds
xchg
dec
sbb
sbb
inc
push
mov
std
sub
lahf
adc
mov
or
and
adc
lret
add
and
shlb
sub
stos
data16
lcall
insl
test
mov
shrb
mov
xor
cs
stc
add
in
and
out
mov
ljmp
push
inc
dec
inc
add
mov
and
int
out
lret
stc
xchg
mov
rol
aam
pop
lea
pop
mov
inc
pop
fmuls
push
test
jnp
add
pop
daa
fwait
lods
mov
iret
lea
aam
sbb
mov
jmp
inc
pop
inc
sub
jge
sti
and
jge
inc
or
pushf
mov
mull
push
push
cs
inc
gs
lods
cltd
cld
repz
dec
push
out
pop
stos
mov
sahf
add
lret
xchg
sub
sbb
jnp
ds
pusha
clc
data16
movsl
or
mov
sub
mov
push
in
mov
cwtl
jo
lock
push
cmpsb
sbb
fmulp
jno
mov
add
cmp
add
lcall
mov
pop
sbb
ljmp
jb
rclb
aam
repz
sub
arpl
push
inc
repz
add
xor
ret
inc
cwtl
and
mov
ds
in
push
xor
cs
repnz
cmpsb
pop
sti
js
fldt
movsl
fdivs
mov
cmpsb
xor
push
sbb
fcmovnu
mov
ljmp
xchg
addb
repnz
iret
fisttpl
addl
dec
or
lock
dec
outsl
movsb
repnz
or
lcall
push
jno
and
add
mov
mov
mov
mov
mov
mov
mov
or
mov
or
mov
sub
mov
sub
mov
cmp
jbe
mov
mov
mov
mov
movzwl
mov
or
mov
sub
mov
or
imul
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
sub
mov
xor
mov
imul
mov
and
mov
and
jmp
cmp
cmp
xchg
xchg
dec
jle
fistl
sbb
adc
sbb
sti
ret
pusha
sub
add
shrb
push
xorw
in
addr16
dec
adc
jecxz
pop
dec
pop
add
jle
daa
daa
jnp
and
cmp
cmp
punpckldq
mov
mov
cmpsb
fmull
pop
int
adc
repz
push
call
pop
push
arpl
cmpsl
push
aaa
sbb
jle
push
mov
jmp
inc
push
add
pop
cmp
rcrl
xlat
cmp
loop
xor
test
out
stc
mov
pop
add
lahf
pop
or
scas
pop
pushf
jle
mov
in
mov
mov
adc
fisttps
test
ret
rclb
sub
rolb
mov
push
stos
es
cmp
sub
inc
inc
mov
sub
cmpsb
push
std
stc
sbb
pop
pop
aas
or
scas
jne
and
data16
mov
push
add
mov
imul
xor
jg
bound
out
xchg
sub
shl
cmpsl
jne
adc
orb
lahf
cmp
push
data16
mov
push
mov
je
pop
xor
xor
add
aad
cwtl
and
and
outsl
fwait
inc
pop
xchg
xchg
cmp
add
subl
flds
push
pop
divl
or
sbbb
xor
or
pop
shr
cmpsb
fldenv
ljmp
jecxz
fsubrl
mov
out
cmpsb
scas
push
in
mov
jae
push
adc
add
inc
dec
dec
repz
in
insl
jg
cwtl
fs
pop
push
sub
jns
jmp
ret
jp
pop
lret
aaa
push
inc
jnp
fsub
test
cli
push
push
negl
mov
test
mov
push
dec
xor
xor
mull
rorb
lahf
xchg
jae
mov
fnclex
xchg
pop
mov
pop
out
push
xchg
cmp
stos
mov
push
fstpt
frstor
inc
cmpsl
cmp
mov
std
inc
cwtl
adc
jb
scas
bswap
pop
leave
and
dec
dec
mov
repz
stos
xor
cmp
mov
insl
icebp
mov
dec
sarb
dec
fwait
in
or
mov
aas
push
push
mov
mov
dec
push
fnsetpm(287
stos
lds
int3
and
rorl
xorl
adc
jmp
adc
jns
inc
sub
dec
mov
and
jp
xor
adc
sub
mov
mov
leave
sti
fnstenv
mov
daa
sbb
cld
dec
int3
ss
arpl
subb
xor
jl
out
lahf
pop
leave
lcall
lods
or
movsb
jmp
stos
and
jbe
les
jp
sbb
in
adc
pop
push
shrb
or
test
pop
lds
pusha
mov
jbe
rorb
sub
sbb
aam
xor
xor
fwait
rolb
je
add
adc
xor
out
movsb
in
test
mov
out
stc
push
mov
daa
mov
mov
mov
xchg
inc
lret
push
mov
cmp
ja
mov
mov
shrd
xor
mov
shr
jmp
inc
inc
in
loop
cmp
pop
pop
or
cmp
push
rcll
sbb
adc
sbb
sub
lret
xchg
clc
sub
bound
pop
xchg
and
mov
pop
out
shrb
pop
shl
es
jnp
mov
js
jg
mov
sub
testb
jg
out
adc
mov
out
nop
aas
loope
fistl
fs
out
cmp
xor
xchg
in
dec
push
push
mov
aaa
lea
aam
mov
push
or
jbe
popa
shlb
add
pop
jo
loopne
jge
jge
ret
rol
and
arpl
dec
movsb
mov
jae
and
xchg
int
repz
sbb
inc
test
pop
cmpsl
mov
std
adc
stc
movsb
add
cmp
xorl
int
pop
cmpl
into
enter
insb
dec
scas
inc
mov
out
pop
mov
cmpsl
jae
ret
bswap
dec
repz
dec
adc
mov
aas
stos
fisubs
fidivrl
dec
mov
inc
xor
subl
cmp
dec
xchg
test
or
ja
mov
mov
jnp
out
pop
adc
fstps
out
push
and
aad
pop
ss
pop
cmp
test
imul
or
and
in
hlt
stc
hlt
dec
or
cltd
shll
out
lcall
insb
jg
lods
call
xchg
into
ds
fdivrl
repnz
mov
in
or
scas
push
jb
xchg
cmp
lret
inc
ret
mov
shl
add
pop
pushf
xchg
jl
pushf
into
fdivrl
sbb
xchg
push
jp
jmp
add
mov
out
int
loop
mov
mov
popa
out
jns
jb
imul
jnp
mov
mov
popf
add
clc
inc
pop
pop
pop
movsl
gs
mov
int3
loop
mov
or
mov
or
and
shl
lock
cltd
or
sub
cmp
adc
xchg
mov
ljmp
scas
inc
jae
loope
movsb
es
or
sti
iret
cmp
arpl
idivb
mov
ds
rcrb
jne
imul
mov
xor
jae
in
sub
xchg
shlb
jbe
sbbl
jg
mov
xchg
adc
jns
sbb
js
ds
inc
adc
sbb
jno
jmp
xchg
mov
std
movb
jmp
inc
ljmp
cld
imul
adc
sub
in
ret
mov
dec
and
or
popf
fdivrl
test
cmpsl
inc
add
ljmp
and
das
mov
cs
fcoms
jb
lahf
sub
movsl
mov
les
dec
pusha
inc
fimuls
mov
movups
add
repz
std
aad
outsb
mov
or
push
push
mov
shlb
adc
cwtl
mov
pop
jg
push
das
xchg
adc
xor
mov
or
push
dec
aas
sub
cmpsb
and
cmp
push
pop
and
push
push
ret
fbld
out
in
ja
push
mov
jmp
inc
mov
jb
jb
cmpsb
xchg
sbb
push
mov
inc
int
sbb
adc
sbb
lcall
pop
les
sbb
lds
leave
gs
fadds
rcrb
outsl
xchg
sub
inc
lock
jge
push
andl
pop
sbb
lock
adc
std
repz
fstp
push
pushf
mov
sub
ret
jno
mov
mov
push
add
out
aaa
mov
sbb
shl
mov
mov
scas
xchg
push
mov
or
inc
in
repnz
mov
fs
stos
leave
xor
lret
loopne
adc
dec
sti
cmp
pop
mov
inc
cmp
inc
iret
sub
cs
mov
ret
inc
cmp
stos
test
xor
sub
pop
mov
cld
dec
je
pop
int3
inc
movsl
out
xor
jno
and
mov
int
cmp
add
xor
xchg
out
sub
mov
mov
xlat
dec
adc
movsl
xor
out
mov
xor
pop
adc
xchg
mov
inc
jmp
push
jne
pop
mov
call
mov
jp
push
mov
add
ja
aam
ret
jle
cmp
fsts
aam
push
outsl
cmc
mov
cwtl
test
cmpsb
or
inc
es
fwait
mov
pop
push
insl
mov
mov
negl
cmp
fs
popa
cmp
inc
sarb
bound
xchg
enter
fwait
pop
popl
addl
lods
cli
pop
mov
jne
je
push
jb
mov
xor
adc
jns
add
mov
pop
cmp
add
popl
mov
mov
dec
dec
mov
add
mov
push
stos
fs
data16
add
mov
mov
add
dec
repz
idiv
scas
sahf
loopne
sub
dec
pop
xchg
stos
outsb
and
mov
lcall
dec
mov
push
push
xchg
bound
cmp
jno
add
loope
mov
es
lret
and
out
insl
cmp
test
jecxz
fidivs
ja
mov
jne
iret
and
jmp
dec
xlat
pop
cwtl
and
jns
dec
pop
out
fbld
stos
ret
jbe
scas
push
fcomps
mov
mov
jns
dec
sti
inc
xchg
sub
mov
xor
add
cmpl
inc
popf
mov
pushf
adc
scas
pushf
dec
push
jg
in
cmp
ss
testl
movsl
jge
cmp
pop
add
adc
cltd
sti
xchg
cmpsl
out
call
and
and
and
sub
mov
adc
into
adc
xchg
xor
out
lahf
div
xchg
stc
sbb
std
push
scas
out
stc
std
fistpll
push
xor
sahf
push
push
and
loopne
mov
pop
xor
inc
std
jge
aad
ret
pop
push
sub
or
int
xor
sahf
push
scas
fstps
add
rcrl
jg
add
leave
cmp
jecxz
int3
imul
push
mov
stc
pop
and
pop
cmp
sarl
pop
loope
xor
jmp
fisubs
cmp
fmul
je
rorb
loope
idivl
jne
hlt
insb
lret
push
insb
xor
or
push
push
shl
push
lea
push
lea
push
call
pushl
pushl
jmp
xor
fistpll
popf
jo
pop
xchg
mov
sbb
sbb
cmp
cmp
and
pop
pop
sub
stos
xlat
rcrl
es
aaa
pop
pop
sbb
jne
cwtl
xchg
dec
movsl
faddl
mov
mov
xchg
addl
imul
adc
mov
jnp
push
lods
pop
ret
jae
inc
and
int3
sarl
and
jb
icebp
fs
sti
repz
pop
popa
mov
pop
shll
and
fwait
pop
pop
popa
or
adc
and
cmp
push
sub
sbb
mov
mov
mov
loope
sbb
mov
adc
push
jae
pusha
sahf
lods
lds
negl
sbbl
sub
aad
sahf
and
mov
ret
mov
out
mov
stc
test
out
in
fsubr
aad
fdivr
pop
mov
test
sbb
fwait
add
int3
loopne
xchg
je
add
loope
in
inc
mov
sahf
ja
cmpsb
es
mov
sti
aad
mov
rorb
lds
imul
aaa
pop
mov
xchg
sbb
jo
test
and
mov
clc
arpl
faddl
jns
xchg
aam
add
sbb
jp
mov
mov
mov
int3
repnz
inc
ljmp
shll
es
out
jecxz
lods
lret
cs
add
int3
leave
pop
cmp
and
shrl
dec
jg
sahf
outsl
out
jmp
mov
into
popf
and
rcl
mov
jb
and
stc
adc
arpl
in
fnstenv
int
fcomi
mov
sbb
sbb
xor
push
cli
pop
inc
js
lds
stos
sbb
insl
aam
pop
bound
sarl
or
inc
mov
and
cwtl
je
cmc
lret
mov
loop
call
xor
jo
mov
ja
lcall
add
add
icebp
jl
dec
jp
mov
sub
gs
dec
adc
add
push
fldt
sub
mov
es
jecxz
mov
rorl
sbbb
adc
pop
mov
mov
mov
or
dec
test
movsb
push
mov
mov
and
cld
cmp
jmp
push
jo
pop
mov
and
dec
ret
adc
popf
lret
mov
push
dec
xchg
shrl
jnp
cmpsb
outsl
add
movsl
push
rcl
add
add
mov
or
shrb
inc
xor
add
fs
vpandn
or
add
mov
hlt
mov
inc
or
pop
movq
pop
mov
repnz
sub
nop
cwtl
dec
test
ljmp
push
loopne
clc
inc
jg
aad
mov
dec
mov
movsb
adcl
push
xchg
loopne
test
xchg
lea
sbb
push
push
mov
dec
ja
and
andb
inc
paddd
push
loope
mov
lcall
add
hlt
push
inc
jae
clc
rcll
shlb
pushl
pushl
call
mov
mov
mov
mov
shrd
shr
shl
xor
mov
xor
or
mov
mov
mov
mov
shrd
xor
mov
shl
shr
mov
xor
or
mov
mov
mov
mov
mov
cmp
jne
mov
mov
mov
cmp
jne
movb
movb
movb
movb
mov
mov
or
sub
mov
sub
jmp
jns
imul
pop
notl
jle
mov
sbb
out
sbb
bound
add
inc
shlb
push
jmp
clc
and
push
pop
lock
ret
mov
jbe
fsts
mov
push
xlat
mov
cs
cmp
xor
stc
pop
or
testb
sub
repnz
pop
and
in
pop
in
inc
cmpsb
xchg
dec
leave
inc
or
ds
inc
pop
enter
adc
test
dec
test
adc
ljmp
and
sti
sub
push
xor
jae
lret
adc
cmp
lret
mov
lahf
cs
aas
and
enter
insb
push
pop
mov
add
or
xchg
dec
pop
js
adc
loope
mov
and
cmp
jne
mov
fistps
push
scas
xchg
out
fs
mov
stc
rorl
std
inc
outsb
push
jp
push
addl
es
call
or
sbbb
push
pushf
xor
pop
mov
jge
fildl
lret
and
insb
stc
cmp
in
cmp
loope
xor
gs
scas
and
mov
cmp
xchg
lds
add
push
jmp
gs
mov
lret
mov
push
or
mov
mov
jb
imul
push
pop
hlt
insb
cmpsl
push
lock
adc
inc
leave
mov
loope
scas
inc
popa
mov
and
lock
sub
mov
jno
addr16
and
dec
adc
push
lds
and
pop
xorl
out
xlat
xor
mov
push
mov
fstpt
jne
loopne
inc
mov
sbb
lds
sub
fsubrs
jne
jbe
mov
std
ja
iret
pop
scas
cmp
scas
daa
lock
jmp
cwtl
loop
inc
sbb
rcl
cld
xor
inc
mov
xchg
adc
insl
sbb
add
ja
xchg
pop
and
mov
test
or
inc
popa
sub
fsubrs
iret
jmp
mov
mov
mov
icebp
xchg
cmp
sbb
or
mov
add
ret
or
fadd
jae
mov
fs
xchg
jmp
sub
ficoml
add
xchg
js
pop
in
inc
repz
popa
cli
daa
test
aad
out
add
lcall
shlb
fcmovb
jnp
mov
inc
mov
mov
fildl
gs
jecxz
adcl
mov
inc
sbb
jnp
imul
or
test
daa
ret
cmpsl
ss
data16
test
aam
ret
push
mov
andb
sarb
test
arpl
jl
and
leave
pop
and
imul
mov
sti
mov
rep
and
mov
les
iret
lcall
std
mov
rclb
pop
inc
stc
das
shrd
cmp
mov
cmp
lods
sbb
xchg
xchg
dec
ja
aas
scas
arpl
int
and
pop
aam
jbe
add
ret
leave
add
mov
movzbl
cltd
idiv
movzbl
or
mov
movb
movb
movb
movb
movb
mov
mov
or
and
mov
imul
mov
movzbl
movzbl
and
mov
movzbl
cltd
idiv
mov
cmp
je
lea
push
lea
call
cmp
jne
cmp
jne
jmp
mov
mov
mov
mov
add
adc
mov
mov
jmp
mov
push
push
lea
push
call
mov
push
pushl
lea
push
call
mov
mov
jmp
ss
cs
push
sub
loop
adc
inc
mov
sbb
adc
sbb
in
int
push
inc
stc
outsl
lods
mov
push
and
pop
mov
sbb
mov
ds
nop
xchg
cs
mov
adc
mov
insb
jo
cld
cld
mov
xchg
call
xchg
dec
add
adcl
or
add
add
or
pushf
mov
das
jnp
mov
sbb
loope
or
repz
pop
icebp
out
xorb
mull
mov
mov
js
add
xchg
xchg
or
and
mov
sub
mov
sbb
lret
js
adc
dec
lret
sti
jp
and
and
xor
test
mov
cltd
push
inc
popa
addr16
ret
shlb
insb
xchg
outsl
xchg
sbb
loop
mov
xor
mov
jle
or
pop
pop
das
movsl
mov
shrb
sahf
dec
aas
scas
int
sbb
jge
stc
add
adc
rorl
movsl
adc
scas
stos
nop
pop
popf
test
repnz
popf
cmp
cmpsb
int3
jl
sub
cmp
int
cmp
dec
imul
adc
fisttps
shrb
mov
and
outsb
sub
imul
test
sbb
pop
mov
into
jb
leave
fisubl
adc
insb
sahf
mov
adc
mov
je
mov
mov
lret
int
out
sbb
test
ret
adc
push
jnp
xchg
into
mov
shrl
push
in
test
xor
cmp
sbb
mov
xor
pop
iret
mov
test
jge
loope
pop
pop
dec
inc
dec
dec
jbe
mov
sbb
lret
xchg
aas
mov
xchg
xor
cwtl
mov
and
mov
cmpsl
sub
add
test
dec
fwait
ds
adc
ret
std
sti
lds
mov
push
or
adc
movsl
pop
pop
sbb
lea
mov
shll
arpl
or
mov
sbb
out
jae
adc
lahf
cvtps2pd
daa
je
push
mov
mov
cli
cwtl
std
or
cmpsl
inc
push
movsl
xor
aad
repz
pushf
insb
add
mov
shlb
mov
es
sub
adc
je
dec
dec
dec
outsb
sarl
lods
addb
es
jb
mov
push
and
ss
inc
pushf
cmp
ja
mov
sub
jg
pushf
enter
loope
dec
sbb
ss
xchg
dec
mov
movsb
mov
mov
jmp
adc
pcmpeqd
insb
xorl
push
rorb
pop
pop
pushf
es
adc
lcall
fcmovnu
shrb
jle
or
lods
mov
cwtl
cmc
test
and
xchg
inc
ja
push
mov
mov
adc
mov
in
bound
out
je
testl
add
rorb
outsb
mov
sbb
jb
jmp
adc
mov
and
bound
dec
and
mov
mov
mov
lea
mov
add
movl
movl
mov
and
add
and
jmp
fistpll
jne
sbb
sarl
mov
sbb
adc
sbb
pop
or
cmpsl
xchg
leave
mov
xchg
xor
pop
inc
pop
into
adc
dec
xchg
push
mov
lods
into
sbb
dec
fwait
pmaddwd
jnp
pop
pop
lods
loope
mov
es
std
sub
lea
pop
out
xchg
cmp
pop
jae
decl
clc
lds
cmp
arpl
and
stc
sub
cld
add
gs
xor
push
cmp
mov
pusha
mov
sbb
mov
das
daa
inc
cmp
push
mov
fdiv
out
xlat
xlat
add
xchg
and
mov
push
in
jne
push
push
fstps
bnd
out
fadds
mov
jo
mov
sbb
sbb
adc
mov
je
add
aaa
cmp
int3
or
aas
cmpsl
and
inc
xor
lds
shl
shlb
sarl
dec
fistpll
data16
mov
inc
addb
adc
arpl
orl
jo
jbe
xchg
int3
rcrl
mov
jg
fiadds
or
js
lret
dec
adc
or
adc
nop
lds
pop
mov
cwtl
popa
scas
jg
ss
inc
clc
mov
ja
xchg
mov
ja
je
dec
xchg
popa
push
shll
mov
mov
test
add
aas
mov
xchg
lret
add
push
sti
pop
adc
enter
nop
jne
mov
xchg
xlat
cmc
into
and
inc
fs
jae
mov
loopne
stc
jno
loope
xchg
pop
sub
icebp
stc
aaa
nop
call
add
je
cmpsl
xor
inc
addb
pop
int
jge
stos
mov
push
push
cmpb
mov
add
sub
or
mov
dec
xchg
inc
or
mov
jmp
push
add
ficoml
daa
pop
mov
dec
dec
mov
push
rcrl
arpl
leave
movb
xor
jg
lret
scas
adc
add
sbb
mov
push
and
sarl
out
cmp
into
pop
lock
or
ret
bound
ret
mov
dec
pop
ja
outsl
mov
mov
sub
cmc
popa
aas
cli
jg
jecxz
adc
sahf
iret
fmul
dec
int3
cmp
aas
addr16
out
xchg
or
mov
ljmp
addr16
xchg
jae
mov
aas
mov
movsl
scas
repnz
loope
and
mov
mov
imul
jb
add
jl
inc
xor
or
and
mov
outsb
lock
sbb
clc
dec
bound
dec
xor
add
decl
js
fsubr
lret
clc
pop
jne
sub
add
in
lret
pop
mov
mov
loopne
ficomps
dec
aad
imul
and
fwait
cmp
fiadds
mov
add
clc
in
cmp
rep
insl
sbbl
scas
dec
outsb
lock
dec
xchg
outsl
jp
and
push
cmp
cmp
mov
xchg
cs
iret
pop
xor
js
daa
xchg
pop
xchg
jb
push
and
fcompl
repz
jmp
rcrb
xchg
mov
popf
push
pop
stc
add
adc
sub
and
mov
movl
mov
mov
or
add
cmp
je
mov
mov
mov
xor
shld
shl
xor
xor
cmp
jne
cmp
je
mov
mov
mov
mov
xor
xor
shr
shl
or
xor
shld
shl
xor
xor
cmp
jne
cmp
je
mov
cltd
mov
mov
cltd
shld
shr
xor
shl
or
or
mov
mov
xor
xor
mov
cmp
jne
cmp
je
pushl
pushl
mov
mov
pushl
mov
call
mov
mov
mov
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
mov
pop
ret
push
mov
sub
and
jmp
sub
push
test
sbb
popa
popf
push
stos
inc
test
sbb
pusha
dec
add
enter
push
retw
dec
sti
movsb
xchg
cmp
mov
lcall
push
mov
rcr
sti
mov
les
sti
mov
ret
popf
fisubl
mov
cmp
ja
leave
clc
mov
or
sbb
sarb
out
cld
ret
mov
sub
in
pop
add
xor
xchg
bound
jg
cmc
mov
in
xchg
inc
adc
inc
xchg
fcmovnu
jae
arpl
cltd
mov
add
roll
mov
pop
mov
test
fiaddl
pmulhuw
ds
mov
fists
fdivs
outsl
sub
and
sub
sbb
mull
pop
sub
mov
arpl
aas
push
sub
das
adc
lea
mov
sub
xchg
inc
sub
inc
lret
jg
mov
out
jge
push
daa
daa
ja
fs
mov
adc
jle
nop
shr
push
xchg
fdivl
or
jnp
movups
nop
lret
cmp
jl
pop
scas
repnz
adc
jns
sub
scas
rol
ds
or
jne
pop
adc
out
sarb
imul
cmp
test
inc
aad
push
cmp
push
jmp
jl
jg
lahf
repnz
sbb
dec
ret
lahf
adc
xchg
adc
cmpsl
lea
jl
or
aas
es
outsb
loopne
jb
ja
fs
sbb
lock
adc
xor
jecxz
repz
inc
int
das
mov
adc
lods
jmp
dec
les
cmp
daa
pop
std
add
scas
test
ds
mov
push
sarb
in
scas
sub
arpl
fs
fisubl
ja
xor
hlt
adc
push
mov
fidivrs
cmp
dec
xor
mov
pushf
dec
and
mov
fcmovbe
clc
inc
mov
and
pop
je
and
jbe
adc
dec
jg
and
das
lea
mov
addb
in
in
mov
sbb
push
jns
mov
stos
cmc
xor
xchg
jl
out
shlb
je
sub
pop
or
out
xchg
ret
mov
sbb
pusha
mov
repz
push
dec
mov
jo
das
add
mov
aaa
inc
or
add
lods
jne
pop
aad
jle
mov
in
xchg
pop
and
fcmove
lahf
pushf
inc
out
hlt
imul
jo
iret
push
iret
ljmp
jo
rcrb
subb
pop
les
imul
scas
repz
sub
mov
mov
cli
je
cld
je
shrb
and
jge
sbb
sti
pop
ss
in
push
cmp
fstpl
xor
push
push
sbb
jmp
jne
ret
xchg
xor
inc
test
xor
imul
jns
arpl
ret
pushf
gs
adc
outsl
push
dec
push
neg
push
xor
add
mov
sub
or
movl
or
movl
sbbl
movl
add
mov
mov
movl
xor
div
imul
cmpl
mov
mov
movl
jmp
movl
je
pushl
push
push
push
push
pushl
pushl
call
negl
and
andl
not
sbb
adcl
mov
xor
movzbl
add
and
mov
subl
xor
sbbl
div
cmpl
mov
notl
mov
jmp
movl
jle
pushl
push
pushl
push
push
call
add
movl
xor
add
and
subl
add
sub
cmpl
mov
mov
mov
jmp
movl
je
pushl
push
call
adc
xor
sub
add
mov
mov
and
sub
mov
add
movl
movl
neg
movl
cmpl
not
mov
movl
mov
jmp
movl
jge
push
push
call
negl
mov
mov
sub
and
add
sbb
movzwl
adc
mov
and
add
xor
inc
xor
and
imul
mov
xor
add
adc
and
add
sub
incl
mov
movl
movl
movl
movl
cmpl
mov
movl
mov
jmp
mov
mov
jb
push
pushl
push
pushl
pushl
call
sub
orl
mov
mov
add
mov
mov
sub
or
mov
mov
adc
mov
mov
sub
sub
or
mov
imul
mov
cmpl
notl
mov
notl
mov
jmp
movl
ja
push
push
push
pushl
push
pushl
pushl
call
add
add
negl
mov
sbb
mov
sbb
xor
mov
sub
mov
movzbl
sub
imul
cmpl
not
notl
jmp
movl
not
jne
pushl
call
mov
mov
or
orl
subl
sbb
add
mov
and
mov
xor
imul
cmpl
movl
movl
jmp
movl
movl
jge
call
or
negl
mov
mov
sbb
orl
add
or
mov
and
or
movl
mov
addl
xor
andl
jmp
pop
push
testl
add
mov
and
sbb
loopne
arpl
and
xor
xor
ljmp
fisubrl
add
xor
shl
push
cmp
mov
sbb
lret
mov
and
test
in
add
adc
rcrl
loop
fsubr
aam
cmpl
sub
mov
adc
cld
test
add
repz
pop
dec
mov
fs
xchg
stos
pushf
nop
fwait
pop
fmul
in
movsb
stos
in
sbb
mov
cwtl
xor
filds
or
inc
dec
popf
mov
xor
bound
sbb
xor
loopne
call
ja
fcmovnb
lcall
push
pusha
dec
adc
sti
cmp
fcompl
inc
leave
xor
or
aad
sub
xor
das
lock
mov
sub
rol
test
xchg
stc
sahf
in
xor
lahf
scas
mov
dec
adc
out
out
lea
sbb
sbb
inc
fldcw
test
jo
push
data16
arpl
sub
aas
or
lcall
stos
arpl
test
push
aad
pop
loope
add
push
gs
push
test
jne
sub
mov
jl
sar
dec
sti
push
jae
loopne
pop
jp
inc
out
mov
cmp
mov
not
or
jbe
or
mov
nop
and
mov
insb
lods
push
pop
push
das
sbbl
adc
in
jecxz
popa
cwtl
jbe
lods
adc
xor
hlt
dec
inc
decb
addr16
in
cmpsl
dec
inc
cmp
cmp
add
cmp
data16
cmp
xchg
shrl
cmp
das
adc
cli
jne
iret
dec
add
int
sub
xchg
pop
test
movsb
mov
out
sub
pushf
clc
pop
sarl
lods
scas
ror
xor
xchg
fwait
adc
or
sbb
add
icebp
fwait
cmpb
loopne
lcall
div
jns
add
dec
rclb
outsl
push
rolb
bound
cmp
xlat
dec
dec
imul
or
cmp
jl
sbb
test
pop
out
rcr
mov
pop
clc
hlt
loopne
mov
or
inc
xchg
xchg
lretw
in
andl
loope
jo
fs
mov
xchg
out
push
ds
in
insb
lds
mov
out
pop
ret
and
sbb
sbb
ja
shlb
xor
shlb
test
xchg
imul
lret
ret
mov
incl
mov
iret
stc
xor
adc
or
cmp
add
pushf
sub
cmp
test
ss
stos
xor
iret
shlb
cmpsl
jmp
xor
push
pushf
je
pop
pusha
xor
fcmove
mov
mov
xchg
jl
leave
jge
jecxz
jno
jecxz
mov
add
inc
push
pop
jno
cli
popf
data16
add
in
outsw
addr16
mov
push
fucomip
pop
push
ret
push
scas
ss
dec
cmp
sub
enter
sub
sub
lret
dec
mov
in
add
jl
mov
out
orl
cld
andl
lea
mov
add
mov
mov
and
movl
subl
movl
movl
andl
mov
cmpl
mov
mov
jmp
movl
je
push
pushl
push
pushl
call
not
dec
sub
inc
adc
and
movzwl
sub
mov
xor
mov
or
xor
add
subl
mov
or
add
xor
xor
or
adc
mov
mov
mov
sub
sub
movl
movl
adc
movl
mov
cmpl
movl
mov
mov
movl
jmp
mov
jae
pushl
pushl
push
push
push
call
mov
add
add
adcl
decl
addl
sbb
orl
mov
or
add
cmpl
movl
movl
jmp
movl
jl
pushl
call
adcl
xor
xor
add
mov
adcl
sbb
movzwl
or
adc
xor
cmpl
movl
mov
jmp
movl
jae
push
pushl
call
xor
or
adc
mov
sub
movzwl
sub
mov
sbbl
addl
adc
mov
sub
xor
mov
lea
cmpl
mov
mov
jmp
movl
jg
pushl
push
pushl
call
xor
mov
or
mov
add
xor
add
add
and
or
dec
sub
not
mov
movl
movl
cmpl
mov
mov
jmp
mov
jl
pushl
pushl
push
call
add
or
or
and
mov
sbb
and
add
mov
and
add
sub
imul
mov
sbb
mov
imul
xor
mov
xor
mov
mov
div
andl
sub
movzbl
sub
mov
xor
movl
cmpl
movl
movl
mov
mov
jmp
movl
jne
pushl
push
push
push
push
call
xor
dec
add
xorl
add
subl
sub
movl
movl
cmpl
mov
mov
movl
movl
jmp
mov
movl
jle
pushl
push
push
call
add
xorl
or
movl
or
mov
cmpl
mov
mov
jmp
movl
movl
jbe
push
call
dec
add
movl
sbb
and
subl
mov
xor
sbbl
div
orl
imul
sub
add
or
mov
addl
xor
xor
mov
div
xor
movzbl
and
mov
cmpl
mov
mov
mov
jmp
movl
jne
push
call
orl
or
adc
andl
subl
subl
add
mov
mov
sub
and
movl
sbbl
movl
neg
movl
subl
mov
mov
sub
add
shr
sbb
sub
cmpl
movl
movl
movl
jmp
mov
jl
push
push
push
call
orl
xor
sub
addl
adcl
sbbl
mov
subl
imul
or
mov
and
adc
mov
subl
sub
movl
mov
cmpl
mov
movl
movzwl
jmp
movl
jle
pushl
push
push
call
and
or
mov
add
and
adc
movl
cmpl
movl
mov
jmp
mov
mov
jbe
pushl
pushl
push
call
mov
adc
sub
mov
and
mov
and
sub
movzbl
adc
movl
mov
sbb
or
mov
or
sub
sub
mov
movzwl
sbb
movl
movl
mov
mov
sub
or
movl
movl
inc
movl
movl
adc
movl
mov
and
mov
and
add
cmpl
movl
movl
mov
mov
jmp
movl
jbe
push
push
pushl
call
andl
mov
or
xorl
subl
add
dec
mov
add
movzwl
xor
mov
subl
sub
cmpl
mov
movl
mov
jmp
mov
mov
jae
push
push
push
pushl
call
movzbl
or
sbb
or
xor
sbb
or
xorl
movzwl
xor
mov
mov
imul
imul
and
mov
or
cmpl
mov
mov
not
jmp
movl
jl
push
push
pushl
push
call
or
mov
xor
mov
andl
or
mov
mov
and
mov
or
mov
add
xor
add
add
mov
mov
movl
lea
orl
push
xorl
call
adc
mov
adc
mov
sub
jmp
scas
dec
jb
pop
and
push
jne
mov
fwait
push
sbb
adc
sbb
push
pop
push
xor
stc
push
test
pop
sbb
mov
out
in
pop
in
mov
iret
xchg
inc
sbb
data16
les
divb
test
ja
mov
jbe
pop
test
repnz
iret
fmul
or
mov
inc
adc
mov
pushw
mov
adc
cmp
sahf
xchg
mov
repnz
sub
pop
push
pop
cmpsb
dec
loope
pop
icebp
jns
jno
add
ja
repnz
mov
mov
sti
dec
imull
mov
ret
aad
lds
shrl
jb
jge
inc
pop
add
xchg
sub
mov
in
mov
lods
aad
jnp
mov
jl
out
les
ret
outsl
mov
call
mov
outsl
rcr
inc
pushf
inc
icebp
es
jg
mov
fucomip
sbb
mov
ljmp
mov
add
cmp
popf
mov
dec
rcrl
jbe
lods
mov
add
jmp
xor
stos
sbb
lea
sahf
fisttpll
add
pusha
cmp
enter
xchg
pop
inc
adc
in
push
sub
mov
aad
jne
or
fistpl
xchg
mov
inc
add
loop
idivb
xor
lret
popf
and
and
pop
ds
pop
dec
cmp
and
pop
in
jg
fmuls
mov
out
mov
mov
mov
pop
ja
or
repnz
pop
dec
jl
or
adc
in
mov
loope
xchg
dec
jbe
rorb
daa
scas
in
lea
shrb
dec
add
sub
adc
rcll
xchg
outsb
dec
ficompl
mov
ret
dec
outsb
in
dec
and
jle
jecxz
adc
cmpsb
in
les
ljmp
mov
cli
insl
lret
jge
jb
sub
xchg
sub
in
rorl
es
lods
push
loop
movsb
loopne
movsb
ds
dec
pop
jge
push
loop
jb
rolb
testb
xor
dec
scas
cmp
in
fcomp
cld
cmp
sub
jge
idiv
out
ret
cmp
and
rclb
pop
shl
insl
adc
stos
add
mov
jmp
cmpsl
data16
enter
push
inc
sarb
test
lret
push
fistpl
xor
sbb
mov
test
aam
mov
insb
mov
cmpsl
test
stos
jae
out
aad
mov
mov
sub
mov
push
popa
rolb
and
add
test
imul
mov
repz
inc
adc
jecxz
jbe
jg
mov
lea
lock
ljmp
lods
imul
xchg
sbbl
es
adc
xchg
or
pop
or
mov
dec
mov
das
sub
adc
fs
lods
lock
hlt
cmp
add
imul
cmpl
movl
not
movl
jmp
movl
movl
jg
push
push
call
sub
add
xor
mov
and
or
add
sub
add
sbb
and
sub
xor
mov
andl
div
not
xor
add
mov
movl
dec
movl
movl
and
movl
cmpl
not
mov
jmp
movl
jae
push
call
not
orl
dec
sub
xor
movl
movl
mov
mov
sub
xor
movl
sbbl
movl
sub
movl
xorl
movl
movl
movl
mov
mov
cmpl
mov
not
not
jmp
movl
movl
jge
push
call
or
sub
xor
xor
add
add
add
and
mov
or
cmpl
mov
mov
jmp
movl
ja
pushl
push
pushl
pushl
pushl
push
push
call
mov
adc
mov
movzbl
xor
and
xor
or
xor
add
sub
xor
mov
mov
adc
mov
and
sbb
sub
sub
cmpl
movzwl
mov
jmp
mov
jg
push
call
mov
mov
sbb
adc
dec
sbbl
imul
mov
cmpl
movl
mov
mov
jmp
movl
jle
pushl
call
adc
mov
add
sub
addl
xor
add
sbb
mov
adc
lea
addl
mov
and
mov
adc
mov
mov
mov
xor
mov
xor
add
andl
mov
xor
lea
add
and
cmpl
movl
mov
movl
mov
jmp
movl
jge
push
push
call
and
or
xorl
add
mov
orl
sub
add
mov
movl
jmp
fidivrs
cli
sbb
dec
push
lret
fs
push
sbb
adc
sbb
sbb
stc
or
ret
push
es
xchg
fnstsw
fsubrp
in
test
sbb
add
mov
mov
aam
push
xor
jnp
lock
fisubrl
sbb
mov
lret
fldcw
arpl
mov
jl
fcompl
jae
shlb
sbb
adc
jae
test
pop
rcrl
std
clc
hlt
sub
sbb
icebp
mov
ret
pop
sbb
loope
xor
xchg
test
inc
rcrb
pushf
and
xchg
enter
or
pop
ret
jl
push
notl
push
mov
movsb
sti
xchg
stos
pop
cltd
pushf
jmp
ljmp
sahf
pusha
mov
pop
ret
mov
add
test
in
repnz
out
lret
dec
in
push
mov
cmc
mov
mov
test
dec
cld
mov
gs
push
dec
jne
mov
dec
push
dec
sti
lret
xor
jb
and
fists
or
pop
adc
sbb
pop
xlat
push
call
mov
pop
sbb
pusha
repnz
push
adc
rorb
pop
rol
dec
fidivrs
lret
push
jbe
xor
loope
push
insb
ds
fsubs
fistpll
stos
imul
insl
call
data16
cltd
jp
cmpsb
fcomps
and
push
in
addr16
aas
or
jl
ret
and
clc
pop
xchg
enter
sbb
and
mov
ror
bound
mov
inc
popa
inc
xlat
and
and
filds
negb
std
pop
lea
sub
mov
push
inc
shll
xchg
push
add
lret
jns
aad
test
push
inc
insl
xchg
mov
sub
xlat
add
fldl
and
dec
push
sbb
or
dec
push
lret
out
jmp
dec
cmp
jnp
xorl
mov
mov
fcmovnb
pop
inc
loop
xchg
sub
cmp
jmp
pop
aas
rcrl
jo
repnz
das
and
xchg
out
loop
sbb
inc
mov
rcll
mov
xlat
jecxz
sub
lea
push
repnz
decb
addr16
test
fs
mov
xchg
loopne
jg
mov
int
add
in
shll
outsl
push
mov
xchg
jns
add
mov
add
mov
test
sbb
in
push
cwtl
lret
cld
ds
adc
scas
loope
cmp
push
addl
inc
sub
cmp
loop
push
fidivl
movl
push
sub
inc
icebp
ret
aas
xor
jl
xlat
adc
pop
imul
and
inc
notb
into
and
inc
push
and
adc
add
push
lock
repnz
xor
xchg
stos
jbe
cmc
dec
dec
imul
push
int3
mov
sbb
enter
outsl
or
cmp
lds
sbb
pop
lds
call
test
jns
movl
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
jmp
movsb
add
sub
movsb
jp
int3
push
stos
sbb
push
sbb
adc
sbb
scas
xchg
pop
out
enter
and
jmp
xchg
jmp
push
lock
jne
popf
pop
push
mov
pop
pushf
stos
or
test
sub
or
test
push
and
mov
mov
jb
repz
sahf
jge
sar
not
dec
lcall
adc
fwait
mov
jae
fnstsw
push
stc
xchg
jl
xor
jns
dec
test
out
or
int3
lret
or
out
sbb
push
int3
inc
sbb
ds
ret
xchg
lods
inc
add
cmp
push
lahf
mov
loope
sbbl
cmp
push
cmc
add
jp
daa
cmp
mov
out
pop
adc
fisubrs
daa
imul
insl
rcrl
insb
scas
xor
int
cmp
dec
sbb
icebp
out
inc
add
mov
in
ret
mov
popl
cmp
xchg
imul
data16
mov
pop
jl
in
rorl
rcr
jns
mov
mov
lret
xor
in
pop
mov
js
mov
in
sub
xchg
jns
cmpsb
lods
fcoms
and
cmp
pop
cmp
fcoms
repz
outsb
and
stos
add
sub
jbe
lea
sbb
sub
bound
insb
sub
gs
test
inc
int
leave
xchg
mov
jno
adc
lahf
pop
iret
sub
pop
repz
lods
iret
sbb
adc
lds
gs
arpl
cld
outsl
or
lods
add
mov
or
imul
lret
outsb
xchg
mov
subb
mov
adc
xchg
nop
lret
aaa
cli
mov
mov
xchg
mov
jns
out
and
inc
divb
loope
dec
pop
lahf
jns
dec
test
dec
lret
out
mov
ja
out
shl
call
jle
divl
sub
mov
pop
sub
push
test
enter
icebp
in
int
sahf
mov
cmp
mov
jo
iret
pop
and
sbb
push
cmp
push
mov
jl
mov
push
xor
mov
lods
shrl
jbe
mov
mov
imul
hlt
test
sub
test
jbe
popa
jns
jns
ja
xor
fildl
jno
lock
add
pop
inc
loop
jbe
mov
pop
or
push
outsb
push
sub
insl
cltd
cmp
int3
pop
sub
jnp
mov
mov
imul
pop
je
cmc
and
xchg
in
scas
sbb
cs
jmp
jae
cli
cmp
and
dec
lock
or
movsb
mov
inc
cld
adc
and
mov
ret
jp
stc
and
xchg
out
push
imul
adc
or
in
push
and
int
ss
and
pop
insb
leave
push
shl
and
inc
ljmp
cltd
outsl
cmp
mov
add
and
sbb
mov
clc
repnz
popl
mov
mov
ljmp
jle
ja
and
push
repnz
cmpsb
or
mov
cmc
call
push
andl
pop
les
sub
adc
xchg
mov
pushl
xor
mov
call
or
or
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
mov
mov
mov
mov
call
mov
or
mov
or
push
push
push
push
jmp
loopne
add
sbb
fcomps
xor
jl
xchg
sbb
adc
sbb
fdivp
dec
mov
xchg
lock
pusha
mov
cmc
mov
iret
icebp
mov
or
movsb
add
mov
inc
mov
mov
pop
adc
movsb
inc
movsl
test
cld
dec
cmpsl
pop
xchg
stos
jle
dec
clc
sahf
pop
mov
mov
in
inc
insb
outsb
in
sub
inc
rcrb
lahf
add
pop
mov
fwait
mov
dec
xchg
jno
add
ds
push
nop
xchg
test
xchg
inc
add
in
lret
and
jmp
xchg
outsb
lds
scas
cwtl
mov
outsl
or
cmp
in
out
jae
fsubr
movsl
mov
add
jge
jmp
push
sub
shr
push
aas
shlb
push
pop
push
pop
add
push
mov
jmp
and
leave
ficoml
adc
imul
fmulp
aam
fs
mov
es
into
push
adc
add
fbld
sbbl
f2xm1
xchg
cli
sub
adc
ficoml
int
stc
mov
loop
cmp
sarl
in
mov
nop
jns
pop
jmp
jg
outsb
sbb
xchg
and
sub
cld
bound
inc
jo
push
daa
comiss
movsb
sarl
jg
xchg
pop
jmp
inc
popf
cld
sbb
lock
or
ss
mov
repnz
mov
sbb
bound
and
lret
mov
xchg
pop
mov
dec
mov
stos
xor
jne
rcrl
mov
mov
bound
jp
jecxz
lea
mov
cltd
and
fiadds
in
adc
mov
or
popf
std
in
cli
popa
push
pop
mov
leave
insb
into
dec
push
icebp
imul
in
add
sub
iret
mov
mov
mov
sbb
cs
cmp
cs
fdivrs
pop
sub
jno
enter
outsl
pushf
xchg
cmp
lret
add
inc
xchg
adc
call
cld
test
cmpsb
inc
cmpsb
jne
jmp
mov
pop
xchg
sub
scas
fldt
push
ljmp
repz
movsl
adc
sub
or
jp
and
in
jg
loope
sub
or
dec
mov
mov
mov
movsb
adc
inc
sbbl
lods
cmp
or
pop
cmp
adc
ljmp
xorb
mov
popa
mov
pop
cmp
sub
cmp
add
inc
push
and
iret
xchg
pushf
jmp
les
add
mov
or
cmpb
add
daa
dec
lock
push
into
or
in
jnp
cmc
test
sbb
add
fsub
movsb
aam
or
or
jae
and
sbb
push
imul
adc
je
or
fisubrs
jge
or
pop
inc
mov
cmp
push
repz
stos
jbe
or
jp
dec
and
ficomps
xchg
repnz
pop
jge
decl
cmp
jne
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
mov
mov
jmp
adc
pop
out
loop
loope
add
fwait
jo
jg
sbb
adc
sbb
xor
xor
add
daa
outsb
pusha
scas
enter
lock
pop
es
add
aaa
in
sub
inc
or
push
dec
and
mov
xchg
sbb
imul
xchg
imul
jecxz
aam
jnp
mov
ficoml
jge
add
inc
cwtl
addr16
lcall
xor
je
sbb
jnp
movsb
inc
clc
mov
inc
lods
mov
cmpsl
aaa
and
in
ja
pop
insb
out
enter
sbb
stos
xor
ss
ljmp
pop
insb
adc
mov
sub
mov
or
repz
outsl
sahf
les
push
ret
movsb
subl
dec
jl
ja
mov
dec
xchg
stc
stos
lret
lret
push
subl
pop
lock
sub
jns
sti
push
add
adc
in
fcoml
mov
jb
daa
pop
dec
movsb
and
cli
pop
add
dec
adc
sub
out
mov
mov
mov
sbb
imul
rcll
xchg
xor
or
cmpsb
sbb
sbb
les
and
jo
adc
movsl
dec
fidivs
inc
les
ret
adc
mov
xor
xchg
sbb
das
add
ljmp
lret
adc
test
sti
mov
mov
imul
pop
xchg
or
repnz
add
push
cmpsl
pushf
push
dec
adc
adc
sbb
dec
scas
cld
add
stc
arpl
in
pop
jns
inc
das
lds
jb
inc
sbb
cmp
shrl
clc
xchg
add
push
push
pop
iret
test
lret
loopne
movsb
xchg
sub
ja
dec
jge
mov
rcrb
cltd
repnz
cmp
aam
sub
xor
in
es
adc
cmpl
sahf
add
sbb
mov
dec
vmwrite
and
push
aaa
mov
cs
imul
xchg
aam
loope
or
fs
in
movsb
xchg
cld
sub
jb
sbb
aas
fsubs
cmp
xor
cmc
pusha
xchg
clc
xorb
pusha
adc
sub
jmp
call
dec
push
jle
sub
test
outsb
adc
scas
sub
lea
push
cmp
imul
inc
and
mov
xor
pop
pop
cmp
mov
fcompl
cmp
jmp
cwtl
nop
sub
or
sbb
adc
jae
jp
dec
cmp
pop
xchg
push
jbe
aam
leave
repz
push
aad
sub
mov
pop
test
test
jae
shl
pop
fsubl
xchg
lods
and
int
jo
push
jb
mov
jecxz
push
add
icebp
lahf
hlt
mov
add
insb
stc
es
push
lcall
dec
gs
dec
loopne
or
mov
jnp
jno
cld
mov
sub
sub
adcl
sbb
mov
ret
call
or
mov
or
push
push
push
push
call
mov
jmp
jmp
lea
mov
mov
movl
mov
xor
shr
mov
xor
shl
or
mov
mov
mov
jmp
mov
xor
sub
jmp
cmp
push
stos
mov
sbb
adc
sbb
ret
add
cmp
inc
dec
fimuls
in
andb
add
cmpsl
movsb
lret
pop
arpl
out
js
pop
stos
jle
cmpsl
ficoms
es
mov
xor
xchg
adc
xor
xor
mov
dec
into
push
in
dec
or
xchg
das
ja
xchg
out
cmp
sbb
repnz
adc
xchg
cmp
psraw
pushf
fisubl
loopne
inc
ljmp
std
push
sarb
push
xchg
sbb
outsl
mov
bndstx
cmc
sbb
popa
es
dec
mov
bound
int
xchg
mov
sbb
jecxz
ret
mov
repnz
aaa
sti
pop
fsubrl
call
cltd
ja
push
out
fsubrl
pushf
insl
sub
push
ret
movsb
ret
push
cmp
inc
jno
sub
daa
mov
pop
icebp
loopne
mov
jp
jno
ja
jns
jno
fcomps
lods
test
mov
fmulp
sub
fnsave
loop
test
fcom
std
in
sti
test
or
inc
or
sub
lret
dec
and
push
and
sub
fisttpl
pop
int3
pop
imul
incb
jae
fisubl
cmpsl
push
adc
push
sbb
mul
xchg
cmp
daa
stc
lret
ret
neg
pop
inc
and
mov
push
sub
popa
sbb
cmp
addb
arpl
adc
xchg
lods
pushf
rcrb
sbb
notb
adc
dec
rol
movsb
loope
into
test
nop
pop
sbb
ret
out
lret
arpl
ret
xchg
rclb
subl
xorl
das
cmp
call
js
mov
shl
jg
les
and
sahf
sbb
mov
cmp
cli
ss
push
mov
aam
pop
xchg
addr16
sti
test
mov
imul
jg
scas
sbb
mov
sub
sar
add
jle
dec
xchg
idivb
addl
jle
add
lods
jno
mov
jo
sub
mov
or
fildl
and
and
lret
mov
lock
pop
repnz
adc
xchg
sti
mov
mov
dec
in
gs
rcr
daa
or
aaa
call
or
fistl
push
daa
shl
mov
xor
imul
sbb
cld
test
fstpt
xchg
addr16
mov
outsl
adc
push
in
int3
xchg
jl
sbb
cmp
sub
sbb
out
jge
xchg
push
xchg
jg
test
push
mov
pop
lret
push
push
fidivrl
pusha
jg
jg
mov
cmp
xchg
mov
test
cwtl
lret
adc
xlat
push
add
mov
dec
icebp
mov
xorl
push
adc
mov
lea
lea
out
arpl
inc
jp
push
popa
fld
dec
cwtl
xor
jo
mov
adc
add
mov
xchg
pop
sbb
push
cmpl
mov
test
mov
pushl
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
jmp
jb
adc
or
xor
shll
cli
mov
and
sbb
dec
ret
or
mov
aam
rclb
lods
int
jno
into
movb
pop
fiaddl
jnp
daa
int3
jo
sahf
in
sub
mov
and
dec
data16
push
out
sti
cmp
cltd
inc
xor
mov
adc
les
sub
rorb
and
push
insl
scas
es
cmp
lods
test
inc
imul
clc
rclb
outsl
jg
mov
pop
sbb
scas
shll
pop
jg
adc
or
into
fnsave
push
push
push
pop
inc
xor
jno
iret
sbb
movsl
test
xorl
dec
jle
sub
adc
or
dec
bound
xor
sbb
bound
fsubr
push
divl
pushf
add
adc
jne
dec
test
sbb
mov
lods
lcall
movsl
aaa
jl
and
fildl
or
inc
xchg
mov
push
inc
sbb
push
mov
jno
es
mov
icebp
or
sbb
mov
cmp
adc
inc
add
fwait
xchg
inc
push
xor
cmp
xor
push
adc
in
loope
xor
push
shl
int
push
and
sub
pop
fiadds
sbb
lods
pop
and
cltd
mov
sbb
jne
or
xor
insl
subb
movsb
mov
in
add
sbb
xor
cli
ret
dec
mov
jns
cmp
in
push
mov
mov
dec
sbb
cmp
mov
testb
nop
dec
jp
jnp
cld
xchg
push
xchg
repz
inc
cld
cli
adc
popf
icebp
jmp
or
sbb
rol
repnz
xchg
int
out
and
popa
enter
shld
sbb
mov
das
jns
xor
jp
shlb
jbe
sub
fbstp
fnstcw
movsl
lahf
mov
out
es
loope
out
test
adcb
icebp
xorl
or
inc
xchg
es
pop
push
xchg
sets
shl
pop
push
das
test
fistpl
daa
push
addb
mov
lods
mov
cmp
fnsave
fwait
sbb
inc
fcom
rorb
mov
mov
pop
pop
xor
cmp
out
outsl
mov
jp
pop
test
test
mov
mov
xor
mov
call
mov
jmp
ja
fwait
mov
nop
xor
mov
cmp
xchg
orl
bound
push
or
daa
stc
mov
mov
xchg
mov
pop
fildl
in
das
testl
fists
pop
fstps
rcrb
mov
stc
insb
mov
out
insl
fidivs
out
loop
into
adc
mov
sbb
cmp
cmp
lock
dec
inc
stc
bound
cs
pop
jo
xor
pop
add
adc
jg
dec
dec
mov
cmpsb
mov
ljmp
mov
in
jle
push
aaa
adc
pop
jg
jecxz
xchg
pop
cli
jge
xchg
cmc
outsl
jp
ret
mov
mov
call
mov
or
mov
or
push
push
push
push
call
mov
cmp
je
jmp
add
jp
add
sub
mov
adc
sbb
lods
mov
xor
sub
mov
cwtl
mov
jecxz
leave
dec
dec
sbb
fildl
push
icebp
dec
cli
bound
out
push
jle
push
hlt
mov
add
push
or
rcll
xchg
fwait
and
mov
cmpsb
sahf
addr16
sbb
cmpsl
int
cs
int3
into
xchg
into
jle
sbb
pop
insl
sub
mov
mov
stc
lock
dec
adc
mov
jns
imul
mov
jecxz
shll
dec
jne
inc
cs
push
sti
iret
mov
adc
mov
ficoms
adc
js
leave
repnz
push
js
icebp
movsb
mov
cs
adc
adc
enter
das
inc
pop
in
mov
fs
cmp
es
mov
fistpll
xchg
lcall
xchg
push
jnp
cmp
pop
xor
mov
aam
ret
nop
mov
repz
xchg
cli
and
movsb
addb
je
in
add
xchg
repnz
or
ljmp
and
xor
mov
or
push
andl
in
jno
fnstenv
sub
and
dec
cmpsb
xchg
push
xorl
ds
negl
push
aam
mov
mov
test
and
xchg
xlat
shrb
jbe
push
mov
inc
mov
cmp
pushf
insb
test
and
cli
add
mov
pop
sub
int
pop
movzwl
push
addb
mov
notl
add
push
lret
popa
or
jecxz
fs
das
add
cmp
cmp
aad
hlt
sub
in
fisubl
sub
pop
pop
in
mov
and
les
lret
mov
leave
les
mov
subl
insl
pop
addr16
fcoms
hlt
ds
gs
sarb
ds
mov
adc
or
sbb
mov
repz
mov
stos
out
rcrb
lea
bound
ljmp
push
and
xchg
jl
mov
aam
stos
lcall
and
dec
lock
cli
mov
movb
fbstp
mov
in
loopne
stos
mov
std
push
xchg
mov
jmp
pushf
xor
sbb
lea
cmp
pop
repz
dec
out
std
fsubr
fistpl
lods
je
xor
sbb
push
jo
vpshlq
inc
das
addr16
aam
shl
and
imul
inc
jae
shrb
xchg
inc
mov
cmp
es
pusha
lds
aas
cwtl
shlb
adc
in
xor
loope
aaa
push
pop
call
loopne
pop
iret
das
jno
sub
xchg
dec
pop
lret
mov
ljmp
push
fidivrs
mov
push
in
shlb
fsubrs
push
shl
xchg
and
test
mov
pushl
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
jmp
loopne
xchg
es
mov
pop
jo
arpl
sbb
adc
sbb
and
popf
push
push
cmp
cmp
push
in
lods
pop
mov
iret
jb
shrl
jb
or
xor
adc
add
in
mov
addr16
popa
addr16
icebp
push
sbb
and
fsts
inc
xchg
arpl
mov
jo
jo
pusha
inc
or
cmp
leave
xorb
es
int3
lret
pop
lea
and
pop
call
or
or
push
mov
mov
pop
push
cmpsb
test
add
punpckhdq
addl
jmp
dec
lea
xor
mov
cli
jecxz
and
or
xchg
ficoml
push
inc
push
shrb
pop
push
mov
lret
movsb
jo
push
mov
shr
mov
lods
pop
push
and
loop
xchg
push
inc
mov
xchg
dec
in
jo
lock
stc
push
jno
insl
popa
fwait
jmp
inc
or
sbb
addl
int
push
fcmovnu
rcrb
aaa
jnp
mov
mov
notl
inc
inc
js
adc
mov
adc
inc
and
in
in
cmpsl
xorl
xchg
pop
or
adc
mov
sti
filds
cmp
pop
sub
imul
addr16
mov
push
imul
in
roll
dec
inc
and
aaa
aad
and
inc
test
and
out
mull
stc
fisttpl
pop
xor
mov
jmp
mov
stos
add
loope
dec
cmp
sarb
cmpsl
add
aaa
in
popl
sub
shrb
nop
push
outsl
mov
arpl
pop
mov
je
repz
xor
push
pop
dec
dec
mov
pop
cltd
sbb
sbb
addl
sbb
test
jecxz
mov
sub
in
push
movsl
outsl
sqrtps
add
enter
push
fimull
lret
jle
mov
mov
mov
loope
cmpsb
ficoms
dec
sbb
ss
push
movsl
insb
loop
fmuls
shr
loopne
lea
in
mov
faddl
inc
daa
push
pop
xor
jo
iret
or
and
loopne
shrb
cmp
cmpb
std
sbb
es
or
fisttpll
movl
xor
cld
fidivrs
mov
je
mov
insl
xchg
fldcw
sub
rcl
or
dec
movsb
std
dec
sub
call
inc
jmp
test
cmp
movsb
jno
xchg
sub
mov
lcall
dec
or
mov
int
pop
mov
and
nop
andb
lret
cmpsb
enter
mov
lahf
pop
xchg
mov
jg
std
push
lret
cmp
mov
xor
pushf
fimuls
xlat
js
inc
in
loope
cld
xchg
pop
and
imulb
aas
lods
cmp
movsl
add
mov
xchg
mov
out
int3
jns
sub
mov
dec
shl
and
in
push
push
push
or
fnsave
xchg
xor
jl
int3
and
cwtl
out
fidivl
add
jbe
mov
testb
or
cli
add
jne
repnz
lock
mov
imul
add
mov
mov
mov
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
xor
jmp
pop
scas
push
sub
push
ja
fstpt
pushf
jns
mov
push
sbb
adc
sbb
dec
xchg
fsubrp
mov
into
mov
out
cmp
adc
adc
movsl
xchg
dec
pop
subl
cmp
call
fstps
push
shlb
mov
ja
dec
xor
rolb
dec
sar
adc
ret
xchg
sahf
pusha
add
add
mov
hlt
adc
je
into
mov
leave
in
rorl
outsl
js
movsb
mov
inc
inc
dec
dec
xchg
arpl
lcall
ss
repz
xchg
test
jne
and
sub
and
gs
pushf
adc
nop
inc
xchg
cmpsb
rol
repnz
mov
loopne
xchg
aas
nop
mov
mov
jno
and
pop
cmp
add
test
dec
adc
in
adcl
aam
dec
inc
mov
and
push
outsb
sbb
les
bound
dec
ljmp
jnp
cmpsb
stos
or
jae
xchg
jnp
ljmp
xchg
mov
outsl
inc
rcrl
fstps
addr16
leave
lea
decl
aas
sbb
iret
fisubrl
xchg
push
call
xor
test
cs
ljmp
sbbl
adc
pop
ror
int3
popf
stos
ja
lea
call
stc
sub
and
lret
jp
out
pusha
mov
jl
push
or
test
pushf
test
cmp
pop
inc
push
js
lock
icebp
lds
jp
xchg
sub
pop
sbb
nop
lret
xor
iret
ret
shl
popa
shrl
inc
dec
hlt
pop
popa
xchg
loopne
aad
cmpsb
call
stos
sub
in
mov
pop
or
into
mov
sub
xor
shr
stos
xchg
pop
pusha
fcoml
notl
mov
fimuls
sbb
test
jge
das
out
loop
sbb
aam
setne
mov
hlt
mov
mov
push
loope
pop
repnz
bound
xlat
cmc
jo
mov
cs
fiaddl
test
int3
dec
leave
fsts
or
loope
jno
push
mov
jnp
stos
gs
cld
add
xchg
mov
fidivs
test
aaa
aam
or
inc
mov
daa
xbegin
mov
imul
mov
arpl
js
push
ds
mov
xor
repz
xchg
ja
adc
stc
movsl
outsl
add
pushf
cltd
addb
sub
jno
test
addr16
xorb
jnp
push
jnp
jb
jge
jp
fsubrl
jbe
repnz
cmc
mov
fsubl
fistpll
pop
call
mov
xor
lds
inc
cmp
into
pop
rcrl
and
test
insb
mov
sub
loope
mov
add
fiadds
in
std
std
mov
cmp
xchg
mov
into
mull
add
jg
lret
int3
mov
mov
rclb
pop
pop
cmp
xlat
std
xor
popf
xchg
adc
in
adc
sub
outsl
test
mov
xlat
addl
es
in
pop
loope
and
pushf
mov
call
mov
mov
mov
mov
xor
xor
mov
mov
mov
call
or
mov
or
push
push
push
push
call
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
xor
div
mov
and
add
mov
lea
xor
add
mov
movl
movl
movl
movl
movl
movl
movl
movl
movl
movl
mov
mov
jmp
shrl
into
and
fwait
outsb
mov
pop
jo
push
push
sbb
adc
sbb
imulb
iret
fwait
push
call
cmpsb
xchg
xchg
add
jne
mov
pop
stos
lcall
jle
iret
jns
out
sub
mov
add
out
pop
jmp
or
sbb
das
adc
jbe
dec
roll
movsl
mov
rolb
lods
icebp
xchg
jae
mov
cmp
and
jp
lea
ds
lock
dec
aam
push
push
aam
stos
mov
fdivrs
add
dec
iret
jmp
dec
popl
mov
movb
ds
mov
push
jl
movsb
adcb
mov
cli
cwtl
add
repnz
push
mov
fs
scas
lock
in
lods
nop
xchg
and
pop
sbb
sbb
scas
outsl
adc
xchg
lods
aas
stc
mov
xchg
jne
fildll
sub
and
sbb
jb
sbb
xlat
fwait
cli
lods
mov
notb
cmpsl
ret
mov
int
pop
iret
jp
repnz
loop
jae
pop
call
push
pop
mov
test
negb
inc
mov
mov
xchg
cwtl
popf
push
or
in
sbb
inc
shlb
push
or
scas
xchg
call
stc
and
inc
int
jo
inc
dec
into
push
lock
push
es
std
jle
fcoml
pop
xchg
add
rcll
fucomp
popa
xchg
xchg
push
pop
jo
sub
and
jmp
inc
out
cs
jae
imul
sub
mov
stos
fistps
jb
ficompl
xchg
bound
scas
imul
jno
notl
cmpsb
std
mov
mov
cmc
mov
fpatan
jo
and
lods
cmp
sbb
and
fwait
pushf
lods
int3
push
cmpsl
cmp
cmpsl
or
jge
popf
addr16
xor
mov
ds
aaa
outsl
arpl
imul
or
push
cld
fdivrl
ds
pusha
test
ds
and
sub
or
cmpsl
xor
loopne
push
sub
mov
cmp
cli
dec
scas
xchg
lock
dec
call
and
and
push
pop
mov
cmp
js
adc
xor
xchg
jmp
jae
divb
pusha
addl
xchg
rorb
shrb
aam
outsb
iret
jmp
sbb
movsb
jae
jecxz
mov
scas
xor
lcall
pop
idivb
sbb
sbb
rcrl
mov
in
stos
pop
ds
dec
pop
shrl
fldl
fcmovbe
cs
fiaddl
sbb
adc
add
hlt
shrb
negb
mov
cltd
push
sbb
incb
jmp
jle
lods
in
jae
push
gs
int3
dec
out
xchg
adc
shlb
cmc
outsl
mov
xchg
stc
mov
stc
fs
inc
iret
fisubs
push
pop
adc
test
js
jne,pt
test
xchg
inc
sub
jg
shll
jb
in
pop
inc
mov
mov
adc
xchg
stc
cmc
outsl
and
adc
xchg
movsb
es
int3
mov
out
sbb
xor
insl
lret
pusha
cltd
pop
push
test
xchg
push
xor
cltd
lods
xor
div
add
mov
and
xor
add
mov
mov
sub
mov
or
mov
and
mov
xor
mov
mov
sub
mov
imul
xor
xor
mov
mov
add
add
mov
movl
movl
movl
movl
movl
movl
mov
xor
mov
imul
mov
lea
mov
and
and
xor
push
pop
div
imul
mov
and
mov
or
add
imul
mov
xor
xor
mov
mov
add
add
jmp
arpl
bound
aam
push
jle
ljmp
and
sbb
mov
mov
cmp
mov
cmp
mov
inc
pop
pop
fs
insb
mov
dec
std
notb
sub
xchg
dec
mov
cmp
pop
sbb
or
leave
imul
jno
inc
mov
xchg
jne
cmp
data16
xor
in
sub
mov
mov
mov
xor
inc
pop
pop
loopne
inc
lea
and
or
adc
sub
sub
jno
aam
or
into
dec
repz
cmpsl
pop
push
xchg
xor
ss
add
enter
out
mov
add
lret
rcrb
push
cltd
rcll
ss
shll
movl
sub
push
adc
add
push
fsts
jp
add
imul
addr16
loop
add
xchg
push
ja
xor
pushf
add
mov
frstor
fdivrs
daa
jp
adc
out
sbb
sbb
pop
mov
xor
mov
dec
jne
push
xor
addr16
mov
dec
test
mov
inc
sbb
in
out
cltd
push
mov
popa
jecxz
lods
insl
pop
push
leave
shrb
lods
ret
pop
and
xor
cmp
pop
out
mov
xor
adc
jo
sahf
ret
pop
aam
add
add
adc
mov
mov
popa
pop
add
ficoml
subb
cltd
loopne
out
aam
outsb
je
loopne
add
adc
lret
inc
lea
gs
mov
mov
xor
xor
jae
jg
inc
popa
jnp
lods
mov
gs
mov
into
fwait
inc
testl
fimull
push
lock
xor
cmp
fstps
inc
add
cmp
inc
or
jp
pop
inc
sti
decb
or
inc
cmpsl
sub
bound
in
xchg
sub
lock
dec
out
push
lcall
out
sbb
mov
fidivs
loopne
into
cmp
push
pop
mov
xchg
sub
divl
adc
sbbl
mov
mov
and
movsl
mov
mov
and
add
repnz
shll
js
rcll
aaa
lahf
aam
jmp
mov
ss
xchg
or
dec
pop
shl
add
faddl
adc
inc
sti
out
adc
loop
push
xor
mov
pop
testb
or
leave
stc
leave
push
pop
and
pop
xchg
dec
adc
dec
addr16
push
sti
inc
sbb
push
mov
add
adc
sbb
mov
enter
ret
mov
xor
xor
or
stos
std
dec
push
mov
or
sub
shrl
xor
jnp
fistl
xor
aad
pop
xchg
test
inc
cmpsl
std
add
xor
sbb
rolb
orb
mov
mov
inc
imul
out
mov
out
cmp
lret
adc
fmuls
inc
inc
lods
add
add
jmp
int3
insb
fwait
jo
push
cmp
ret
lahf
jo
test
push
inc
push
sbb
adc
sbb
shrl
pop
mov
sbb
sub
ret
sbb
int
xchg
pop
clc
push
cmp
cltd
cltd
test
lods
add
push
ss
jne
leave
mov
push
xlat
lock
and
cmp
pusha
jno
fldcw
xor
lods
out
cmp
lea
xor
es
inc
sbb
rcrl
cmp
cmpsb
cmp
mov
mov
mov
imul
sbb
scas
negl
pop
add
mov
out
or
or
addl
cmc
pop
add
dec
sbb
pop
scas
jb
fmuls
aam
ja
enter
movsb
mov
in
mov
rorb
in
mov
test
cmp
and
xor
xor
hlt
pop
sbb
and
arpl
push
or
pusha
jne
adc
loopne
mov
inc
cmpsl
movsl
jl
scas
lea
lcall
xor
out
pushf
sbb
stos
enter
fsubrs
adc
data16
and
cmp
mov
loopne
mov
cmp
sti
out
andl
xchg
arpl
or
ds
push
jno
movsl
mov
inc
enter
xor
fdivrl
push
ffree
jp
inc
jecxz
ja
or
fidivl
mov
xchg
popa
lock
inc
dec
push
xor
jns
sub
pop
xor
lahf
call
scas
mov
pop
sub
nop
out
test
pop
lahf
loop
clc
dec
aaa
mov
xchg
shrb
scas
pop
push
aam
cli
sub
int3
pushf
dec
inc
mov
cmc
repnz
sbb
repz
out
add
mov
adc
mov
lds
pop
outsb
mov
out
mov
lock
inc
in
add
add
cltd
lods
jecxz
test
sbb
mov
call
ret
mov
out
je,pn
sarb
das
int3
jecxz
pop
inc
in
mov
and
cmp
xchg
jle
scas
out
cld
or
inc
mov
enter
mov
mov
daa
sbb
mov
lods
mov
push
inc
or
outsl
jnp
ja
fisttpl
jmp
inc
pop
fdivrs
jg
jmp
lahf
push
cmpsb
push
pop
dec
push
adc
or
pop
jmp
push
xor
push
pop
stos
call
sub
rorl
ret
sub
cmpl
mov
push
in
mov
sbb
mov
cmpsb
jle
mov
jp
add
mov
subb
adc
pop
jno
addr16
mov
aaa
idivb
jbe
mov
pop
cwtl
popl
mov
pop
pop
mov
sub
mov
mov
and
pop
sbb
push
lret
jg
outsb
shlb
subb
shrl
add
sti
movl
push
pushf
lret
imul
mov
dec
or
daa
jno
dec
push
push
mov
pop
or
adc
mov
cmp
or
outsb
push
mov
movl
movl
movl
movl
jmp
jecxz
xchg
sbb
sbb
ret
movsl
mov
faddl
sbb
adc
sbb
js
daa
aas
add
cmp
pop
sbb
nop
outsb
rcr
imull
and
inc
in
dec
inc
adcl
ss
dec
movsl
ja
mov
das
push
pop
incl
add
and
cmpl
mov
in
shlb
xor
jns
cmp
mov
lods
pop
push
scas
int
sub
ss
xchg
mov
lods
pop
int
mov
inc
ljmp
rol
xchg
cltd
insb
lds
insl
scas
push
mov
das
cld
xchg
insl
or
xor
testb
je
or
cmp
mov
push
pop
pop
push
stc
jmp
repnz
mulb
ja
stos
je
out
mov
xor
sti
add
ds
mov
out
sbbl
in
cmpsb
sbb
enter
pop
sahf
sahf
mov
xlat
fwait
jno
cmc
xor
inc
ficoml
mov
in
xchg
pop
ret
or
test
push
add
cmpsb
mov
outsb
jp
lods
inc
pop
inc
notb
repz
xchg
sbb
sub
outsb
clc
pop
in
xor
push
dec
arpl
mov
xchg
cld
mov
cmpsl
xorb
mov
mov
clc
into
mov
cmp
out
decl
aaa
sbb
addr16
and
subb
insl
incb
sub
add
jns
decb
cmp
gs
push
cmpsl
mov
add
pop
mov
frstor
mov
push
out
push
pop
inc
out
leave
repnz
dec
cs
in
pop
test
mov
mov
jnp
inc
movsb
cmp
stos
lods
popa
enter
addr16
fsubs
clc
add
cmp
sub
adcb
add
loopne
enter
xor
push
xorl
es
sbb
je
movsb
inc
xor
sti
jno
adc
mov
lods
or
enter
sub
xchg
cmp
pop
leave
jno
xchg
push
lock
repz
cmp
fmull
insb
out
cmc
push
adc
xchg
or
dec
dec
stos
lds
js
xchg
int3
add
iret
xor
out
fldl
push
in
cmpsb
test
loope
xchg
pop
push
or
jbe
and
sub
push
clc
dec
decb
and
push
and
jl
cli
or
addr16
mov
xchg
inc
cli
outsb
cmp
inc
out
jne
mov
cmp
pop
bound
negl
jmp
jno
xlat
jbe
sbbl
and
test
pop
pop
cmp
xor
xchg
jp
mov
rcl
lea
lods
lahf
push
jmp
dec
inc
mov
and
sbb
inc
and
mov
shl
push
psubusb
sub
aam
xor
popa
mov
xchg
dec
pushf
popf
addr16
lock
or
adc
xchg
pop
es
stc
inc
xor
sbb
or
push
inc
pop
adc
sub
sti
jnp
daa
in
sbbl
rolb
or
in
push
clc
dec
push
jb
popf
test
mov
out
xor
mov
lock
adc
sahf
cmp
sarl
push
out
sub
test
decl
and
add
push
pop
div
mov
or
mov
xor
div
jmp
and
popa
into
pop
dec
and
mov
jl
cmp
sbb
adc
sbb
mov
aaa
push
sub
adc
les
jbe
inc
or
mov
xor
jno
dec
adc
xchg
jne
in
cld
fildll
pop
push
scas
rcrl
not
outsb
cmpsb
cmp
int
mov
and
adc
add
test
jmp
out
dec
rolb
mov
mov
pusha
fs
lds
hlt
lds
mov
inc
cmc
jb
lods
shrb
jae
clc
lret
pop
subb
mov
mov
sbb
cmp
cmp
loop
pop
cmpsl
lea
movsb
push
sub
sarb
cmc
lock
call
pop
fiaddl
jb
scas
arpl
push
cltd
inc
ljmp
mov
mov
movsl
cwtl
es
mov
fidivrl
dec
mov
adc
mov
jg
stc
sbb
int3
adc
mov
scas
and
ds
xorl
cvttps2pi
sub
mov
xor
and
sub
cli
xor
adcb
or
repnz
sub
mov
and
popf
push
std
or
imul
orb
lea
dec
outsb
scas
mov
cmovns
fmuls
push
stc
push
jbe
cmpsb
mov
inc
cmp
xor
jo
out
xchg
or
xchg
icebp
fstps
xchg
movsb
pop
mov
xor
in
jae
cmp
call
fnstcw
add
fwait
add
ljmp
lcall
dec
add
loopne
adc
xlat
mov
xor
rcrl
add
push
mov
xchg
lea
push
add
lods
xchg
xchg
les
filds
loope
pop
mov
cmc
push
aas
xor
pushf
cld
loope
mov
mov
cwtl
sub
cwtl
imul
xor
inc
lcall
push
aas
mov
sbb
ja
inc
or
enter
movsl
xchg
pop
adcl
in
data16
and
rcl
sbb
insl
lock
pop
mov
pop
test
or
mov
scas
aam
jns
ljmp
outsb
and
or
adc
add
inc
mov
mov
xor
outsl
out
movsb
pop
cmp
ror
aam
add
cmpsb
dec
bound
ds
mov
inc
xlat
hlt
dec
sub
mov
or
dec
divl
clc
and
nop
add
lds
out
imul
mov
in
fsubrl
ss
sub
in
sbb
mov
cltd
xor
gs
fcomi
bound
mov
add
mov
xchg
sbb
mov
ja
adc
dec
mov
movl
std
jmp
mov
jbe
cli
inc
push
xchg
in
mov
decb
pusha
adc
or
sub
mov
mov
cmp
mov
pop
push
add
loopne
jecxz
cmp
pop
adc
scas
inc
gs
cli
jbe
mov
adc
sahf
imul
mov
lea
mov
and
and
sub
xor
mov
xor
mov
and
and
or
mov
mov
add
lea
mov
andl
jmp
mov
inc
mov
mov
mov
cmp
je
mov
mov
mov
add
mov
jmp
add
mov
mov
aad
jle
xor
sbb
adc
sbb
in
sbb
test
fists
cs
je
sub
popa
pop
mov
int3
push
adcb
add
mov
dec
out
loop
add
sub
outsb
mov
add
repnz
push
sbbl
xchg
loope
repnz
and
cmp
push
ret
xor
push
xor
ret
mov
aad
adc
addb
xor
lcall
inc
jp
fimull
movsl
movsl
push
daa
xor
popf
pop
outsb
movsb
subb
pop
jae
or
jbe
shll
inc
nop
jecxz
pop
pop
aam
call
je
sbb
dec
cmp
insl
in
das
test
mul
lods
pop
mov
add
imul
hlt
mov
pop
xchg
mov
mov
hlt
push
mov
sub
pushf
icebp
jmp
adc
es
or
sbb
inc
filds
test
inc
std
shlb
pusha
adc
shrb
adc
add
clc
jnp
mov
loop
pop
repz
lods
mov
cmp
xchg
add
adc
subb
add
inc
and
adc
add
pop
je
sbb
cmp
gs
fmull
mov
push
or
cmp
pop
cmp
lahf
lahf
pushl
mov
mov
popf
jl
push
repz
fnsave
add
mov
inc
add
push
add
sub
dec
shlb
add
into
push
aad
mov
pop
cltd
faddl
sub
add
in
xchg
lcall
sub
scas
dec
sbb
pusha
xor
fimuls
ljmp
mov
mov
dec
das
sbb
test
or
aas
incl
mov
push
sti
popa
inc
sbb
add
xor
jne
sbb
hlt
dec
mov
shll
adc
and
mov
add
mov
mov
dec
addr16
jnp
mov
ljmp
clc
push
loop
cwtl
xchg
lcall
pop
leave
les
lock
sub
cmpsb
hlt
mov
add
leave
stos
addl
jb
mov
ret
jbe
pop
insb
jg
shll
call
sub
dec
pop
inc
fistl
out
or
inc
push
adc
jle
inc
mov
sbbl
jge
outsl
push
xor
flds
mov
or
popf
lea
data16
pop
test
push
pop
testl
jno
outsb
lds
push
add
fucomip
outsl
jge
pushl
cmp
ficoms
pop
xor
das
std
mov
add
sub
or
pop
inc
add
test
mov
mov
stos
sub
arpl
in
jns
sbb
adc
js
xchg
pop
movsl
xchg
inc
pop
imul
scas
jnp
nop
and
rolb
lcall
test
and
stos
mov
xchg
mov
out
addr16
ljmp
das
xchg
iret
pop
repz
push
cmp
ss
cmp
mov
mov
mov
mov
movl
movl
movl
movl
lea
mov
mov
movzwl
xor
movzwl
sar
mov
movzwl
xor
movzwl
shl
or
movzwl
mov
mov
mov
mov
xor
jmp
imull
mov
mov
xchg
push
sub
sbb
adc
sbb
mov
movsb
icebp
mov
inc
inc
mov
ja
xor
lahf
mov
sub
inc
and
add
jmp
cmp
cmp
pop
sbb
subl
aaa
fiaddl
xor
loopne
mov
and
mov
cltd
cmpsb
adc
test
cmpsl
loop
xor
fstpt
jmp
sbb
mov
jl
jmp
je
push
jp
movsb
shrb
cmpsl
out
shll
xchg
mov
test
mov
popf
daa
push
jge
scas
inc
lret
bts
dec
xor
inc
xchg
cmpsb
dec
out
cmc
jbe
sbb
lret
mov
sbbl
je
push
inc
outsl
je
outsb
mov
or
or
mov
lea
ffree
rol
add
movsl
add
pop
nop
lcall
jo
subl
jmp
dec
or
repnz
loope
pushf
ss
mov
mov
int
xor
orb
add
mov
push
mov
fimuls
les
idivb
repz
in
mov
add
ds
sahf
cwtl
add
fisubs
movsl
push
and
insl
pop
mov
pop
popa
mov
fcoml
in
mov
push
sub
mov
jge
negb
cld
push
sub
push
popf
cmpsl
jbe
leave
sub
xchg
sti
xchg
push
mov
cmp
mov
icebp
les
jecxz
in
adc
lcall
sub
jnp
cmp
cmp
jl
pop
xchg
inc
fistl
insb
cli
or
into
dec
stc
push
in
inc
and
fnstenv
rcll
adc
mov
bound
aam
mov
cmp
pop
movsb
mov
int
lods
inc
and
in
std
jb
inc
sbb
test
sub
cmp
cmp
mov
daa
mov
or
lock
rclb
and
ds
sbbl
and
mov
jns
lea
int3
jns
cmp
cli
or
aam
call
addb
aas
movsb
lea
mov
push
xchg
push
inc
out
cmp
xor
sbb
xor
push
cmp
mov
dec
in
fucom
adc
fs
adc
mov
js
daa
lods
sbb
adc
ja
xor
push
shrb
jmp
xchg
mov
pop
mov
mov
mov
xor
dec
pop
fnstcw
cwtl
jmp
bound
sbb
inc
mov
mov
mov
mov
xor
push
jae
jns
clc
push
cmpsb
pusha
subl
lahf
mov
cltd
jmp
fwait
dec
shrd
imul
test
jmp
mov
mov
psllq
ja
push
test
xchg
xchg
jae
call
xchg
sub
jo
leave
repz
or
lods
fsub
push
subb
popf
addr16
fcompl
inc
cs
outsl
lock
lds
jmp
jno
inc
or
stos
lods
pop
pop
sub
mov
roll
pushf
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movzbl
push
lea
push
call
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
add
mov
mov
cmp
je
mov
mov
movzwl
xor
movzwl
sar
mov
mov
movzwl
xor
movzwl
shl
or
movzwl
mov
mov
mov
movzwl
xor
movzwl
sar
mov
mov
movzwl
xor
movzwl
shl
or
mov
mov
jmp
mov
mov
xor
xor
mov
call
mov
jmp
jecxz
enter
sbb
cltd
mov
lret
jo
and
sbb
aad
xor
mov
and
adc
insb
dec
ljmp
je
shr
je
cmc
insl
out
pop
adc
adc
mov
or
out
filds
and
mov
pop
push
add
inc
xorb
pop
xor
aad
loopne
movsb
mov
fwait
xchg
cld
xor
mov
push
or
mov
mov
pop
add
sbb
xor
rcll
add
push
jle
inc
pop
cmp
fidivs
add
xlat
jl
cs
dec
data16
and
js
sbb
or
mov
aam
xchg
pushf
stos
addr16
pop
dec
sub
jmp
jo
cli
rcl
mov
jo
js
out
push
mov
hlt
adc
push
fwait
jg
push
jmp
lods
out
out
push
sub
mov
sti
jge
cld
lcall
fistl
imul
push
and
ljmp
insl
cltd
push
xchg
ljmp
sbbb
push
addr16
xchg
repnz
repz
imul
ljmp
mov
ficompl
lret
sub
adc
addr16
mov
scas
adc
mov
cmp
ret
ja
mov
push
cmp
in
xor
lahf
xchg
lods
out
inc
jecxz
out
xchg
or
std
in
sub
les
push
sysenter
jmp
xchg
sbb
into
cs
outsb
jge
jb
cmp
sub
cmc
xor
leave
push
enter
add
andb
push
sbb
pop
jne
ljmp
inc
int3
hlt
js
divb
mov
out
mov
mov
adc
js
sarl
sbb
mov
pushf
int
push
lock
or
leave
aaa
sbb
push
push
and
loopne
dec
push
cmp
out
es
jnp
int
and
rcrl
inc
test
popa
fstps
inc
inc
xor
push
jno
ljmp
es
ret
xchg
test
test
or
inc
xchg
push
mov
cmp
dec
jbe
pushf
jne
or
jl
test
xlat
hlt
ret
ds
out
pushf
cltd
repnz
clc
pop
daa
popf
push
cltd
or
mov
dec
cmp
add
mov
push
or
jmp
cmpsb
das
out
test
cmc
fsts
shll
insb
lahf
or
lret
mov
fsubr
pop
adcb
jns
loop
leave
out
pop
sbb
mov
fwait
mov
imul
repz
lea
xor
pop
mov
xorl
in
sub
int3
add
cmp
scas
iret
aas
xor
mov
xor
ret
orl
pop
test
sub
adc
fisubrs
adc
pop
mov
push
out
mov
mov
dec
and
out
out
loope
out
in
imul
push
dec
mov
scas
cmp
cmpsl
stos
xor
js
gs
mov
cmp
movsb
scas
out
pop
or
mov
cli
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
or
je
lea
mov
mov
xor
mov
call
mov
mov
mov
xor
mov
call
or
or
xor
xor
mov
jmp
push
mov
and
push
or
stos
push
sbb
sbb
fsts
dec
daa
adc
ja
hlt
xchg
adc
ljmp
shrl
enter
lea
pop
lret
xchg
dec
inc
popa
lock
and
inc
push
mov
leave
pop
push
xchg
jp
mov
inc
repz
push
xor
cmp
imul
mov
mov
jecxz
adc
pop
and
loopne
aaa
adc
pop
add
sub
push
cwtl
scas
jecxz
mov
daa
aad
in
pop
adcb
add
lock
and
in
cmc
xchg
test
stos
and
mov
inc
incb
das
inc
hlt
mov
pop
push
insb
ds
int3
sbb
insb
jmp
push
pop
mov
lods
mov
mov
pop
cmp
dec
sbb
adc
out
add
push
push
lea
jle
fwait
out
ds
dec
xchg
fcmovnu
and
push
aad
int3
adc
or
pop
daa
andl
gs
mov
lahf
and
add
jno
push
repz
and
lret
cltd
jae
and
mov
xchg
xchg
or
test
lret
lcall
out
pusha
outsl
test
cs
dec
mov
int3
fiaddl
test
and
lds
arpl
enter
push
push
add
out
jbe
mov
push
add
aad
sub
xchg
sbb
loope
hlt
xchg
mov
lret
sub
loop
pusha
js
push
jnp
movl
in
loop
test
mov
loope
jo
fld
test
hlt
mov
out
jb
jle
mov
sub
xlat
outsb
jmp
add
jp
rolb
cltd
inc
cmp
ret
push
inc
adc
flds
sbb
lods
data16
imul
aaa
mov
push
lret
cmc
add
repnz
aam
xchg
scas
lock
out
dec
in
pop
pop
inc
out
popf
xor
popf
xchg
sub
mov
mov
pop
fsub
imul
mov
pop
mov
push
push
push
or
dec
in
dec
sub
cmp
cmpsb
jae
insl
fdivrl
sub
movsb
fsubs
ss
and
xor
or
pop
sarb
outsl
mov
lcall
leave
xchg
lret
out
mov
jbe
jl
cmp
or
sub
fbld
push
int3
ds
mov
mov
push
sahf
mov
or
push
nop
js
dec
xor
mov
lahf
test
popf
xor
cmp
jns
insl
in
fildll
loop
cmp
aas
xor
add
mov
hlt
orl
std
gs
rorb
insb
ja
dec
jno
mov
popf
cwtl
leave
or
fcmove
sti
xchg
cltd
and
pop
les
idivb
mov
rorl
add
clc
sub
sbb
dec
fcmove
push
pop
sbb
sbb
mov
out
icebp
jg
shlb
xor
scas
inc
xlat
ret
inc
mov
xor
inc
out
mov
mov
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movsbl
cmp
je
mov
movsbl
jmp
cmp
sub
pop
rcrl
jo
pop
push
sbb
adc
sbb
cmc
xor
pop
push
imul
cwtl
mov
js
inc
mov
mov
insb
mov
loop
xor
jge
cltd
jle
cmp
dec
lcall
mov
push
cwtl
div
sti
mov
fnsave
cmc
jne
or
xor
dec
xor
jle
xor
sbb
std
and
cli
sub
xchg
loop
mov
in
sub
in
adc
jo
mov
fsubp
mov
enter
adc
xor
push
jae
mov
xor
repz
bound
leave
testb
pop
pop
xor
jmp
stos
roll
sub
dec
out
jecxz
push
inc
mov
pop
pop
loop
sbb
add
dec
dec
and
xchg
in
mov
sub
das
jno
cmp
fisttpll
int3
es
rcll
pop
sarl
mov
sbb
lds
dec
and
dec
or
adc
inc
xlat
js
xchg
scas
loop
add
sbb
daa
jl
insb
outsb
adc
inc
stc
jb
xor
rcrl
std
mov
mov
shl
pushf
into
outsl
push
sub
push
push
ret
aad
xchg
inc
lcall
stc
xchg
push
cmp
and
shrl
lret
outsb
cmp
push
xchg
bound
incb
in
cmpsb
push
cmc
out
pop
lret
mov
adc
bound
fwait
jg
popa
test
pop
and
jns
adc
incl
jns
push
push
hlt
fimuls
adc
cs
add
jl
sahf
sub
or
pusha
cmp
xchg
cmp
movntps
mov
adc
sbb
pop
aad
loope
inc
fucomi
adc
int3
repnz
in
adc
xor
loope
jp
dec
push
push
add
packuswb
xor
aad
es
daa
loopne
js
mov
clc
sub
imulb
outsb
xchg
je
adc
daa
push
jae
pop
lds
or
sub
and
pushf
xchg
cmp
movsb
iret
iret
mov
ficoml
lods
sahf
mov
enter
in
pop
xor
and
scas
fs
iret
fcoms
cmc
addb
scas
cltd
or
inc
mov
insl
or
loope
mov
adc
int3
inc
add
adc
into
in
fs
and
mov
pop
push
or
std
cmpsl
adc
stos
cli
cld
lea
ficoml
scas
or
data16
ljmp
add
cmp
ret
pop
add
mov
and
and
test
data16
outsl
xchg
mov
cmp
add
pop
sbb
fisttpll
jnp
mov
and
je
push
sbb
xor
inc
push
lahf
repz
sahf
or
lahf
int
hlt
mov
add
cmp
pop
jp
int
push
pop
mov
cld
mov
xor
sub
and
jnp
jns
cmp
mov
call
adc
mov
jl
rcl
leave
cmp
mov
rclb
cltd
inc
test
cmp
pop
or
rcrl
aaa
popf
jmp
mov
icebp
sub
loope
xchg
cmp
loopne
ljmp
pop
add
test
std
decl
pushl
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
movsbl
cmp
je
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
movsbl
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
movsbl
cmp
jne
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
jmp
jp
inc
mov
mov
pop
push
popf
jo
inc
cmpsl
mov
adcl
loope
dec
sbb
cmc
sbb
rcrb
sub
lahf
stc
cmc
mov
psrad
push
sbb
sbb
add
sahf
adcl
int
outsl
call
mov
ja
push
sarl
sbb
adc
dec
mov
lds
cmpsl
aad
jecxz
scas
loop
and
push
pop
dec
lret
lea
adcl
xchg
arpl
imul
nop
str
aaa
sti
bound
adc
cli
aad
aas
adc
nop
cmp
orb
aas
in
jle
insb
adc
dec
sti
mov
daa
xchg
jne
inc
fisubs
jnp
dec
mov
mov
aad
fistl
ja
int3
jae
mov
cmp
mov
roll
out
lods
pop
fstl
add
sbb
gs
pop
mov
xchg
stos
stos
repnz
aaa
xchg
mov
in
jb
lret
fdivrp
sbb
jo
fimuls
pop
jmp
mov
cmp
or
sbb
mov
xchg
test
adc
scas
mov
xchg
or
shr
iret
mov
jb
mov
mov
ds
add
dec
pop
arpl
enter
lahf
add
nop
inc
push
out
cld
lds
cmpb
inc
lcall
jp
shlb
mov
fildll
mov
dec
cmp
push
inc
je
xchg
ja
sbb
add
test
fst
outsb
hlt
mov
sbb
mov
sub
pushf
push
and
jg
fcmove
ret
ja
scas
mov
je
push
inc
and
arpl
stos
cld
pop
fsubl
int
mov
dec
adc
sub
pop
leave
sarl
xchg
mov
loop
adc
das
mov
loop
sar
aam
pusha
int3
dec
mov
add
xchg
test
and
popa
push
movsb
xor
popf
cmpsb
adc
ljmp
gs
fwait
cltd
jp
out
jmp
mov
add
je
hlt
ds
cli
mov
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
add
mov
jmp
jmp
mov
mov
xor
xor
mov
call
mov
mov
mov
mov
xor
xor
mov
call
or
or
mov
mov
mov
cmpl
je
mov
mov
movzwl
mov
mov
mov
jmp
jmp
cmpl
jne
xor
jmp
mov
add
mov
movl
cmpl
je
cmpl
je
mov
shl
mov
movl
sub
mov
movl
mov
cmp
je
mov
mov
mov
mov
mov
mov
mov
inc
mov
jmp
movl
push
jmp
mov
mov
ret
dec
push
mov
sub
push
mov
or
jne
sub
mov
mov
mov
mov
sbb
xor
cmpl
mov
mov
jmp
movl
jl
push
pushl
push
push
call
addl
xor
mov
add
sub
mov
adc
mov
mov
mov
sbb
div
dec
mov
not
mov
div
mov
jmp
mov
mov
mov
mov
shr
rcr
shr
rcr
or
jne
div
mov
mull
mov
mov
mul
add
jb
cmp
ja
jb
cmp
jbe
dec
xor
mov
pop
pop
ret
sbbl
subl
movl
cmpl
movl
je
mov
mov
adc
add
mov
mov
pop
pop
pop
leave
ret
cmp
movl
jae
movl
cmp
movl
jae
subl
shld
movl
shl
ret
addl
mov
xorl
xor
and
shl
ret
xor
xor
ret
add
add
add
addb
add
add
add
add
add
add
test
add
faddl
add
add
add
lock
add
add
add
add
add
insb
mov
add
add
enter
jp
add
dec
xchg
add
int3
test
add
mov
add
popa
je
outsl
outsl
add
add
addr16
popa
je
jb
popa
je
jb
popa
je
jb
popa
je
jb
popa
je
jb
popa
je
jb
popa
je
jb
popa
je
jb
popa
je
jb
popa
je
add
insb
insb
push
gs
insb
push
gs
insb
push
gs
insb
push
gs
insb
push
gs
insb
push
gs
insb
add
add
mov
inc
add
add
jbe
add
push
add
add
push
add
add
push
add
add
push
add
add
push
add
add
push
add
add
push
add
add
push
add
add
int3
daa
inc
add
daa
inc
add
push
mov
movsb
popf
movsb
jno
xchg
movsb
or
movsb
sbb
movsb
roll
adc
movsb
popf
movsb
jno
xchg
movsb
or
movsb
xor
movsb
mov
in
xchg
movsb
adc
movsb
popf
movsb
sbb
movsb
fwait
movsb
xchg
sub
cs
push
adc
movsb
fwait
movsb
add
movsb
sbb
movsb
shll
shrl
or
push
pop
outsb
adc
movsb
fwait
movsb
add
movsb
xor
movsb
andl
imull
dec
adc
movsb
fwait
movsb
jae
popf
movsb
sbb
movsb
fwait
movsb
andl
testl
movsb
aaa
movsb
fwait
movsb
jae
popf
movsb
pop
movsb
xchg
movsb
push
movsb
mov
inc
rorl
imulb
xchg
movsb
aaa
movsb
fwait
movsb
jae
popf
movsb
cmp
movsb
fwait
movsb
xchg
mov
mov
out
adc
xchg
movsb
aaa
movsb
fwait
movsb
jae
popf
movsb
cmp
movsb
fwait
movsb
andl
imul
push
into
adc
xchg
movsb
cmp
movsb
popf
movsb
jnp
xchg
movsb
fwait
movsb
xchg
movsb
shl
shr
lock
test
cs
push
push
adc
xchg
movsb
adc
movsb
cmp
movsb
fwait
movsb
lea
or
push
push
outsb
adc
xchg
movsb
add
cmp
inc
add
inc
add
inc
add
daa
inc
add
inc
add
add
jg
add
add
daa
inc
add
es
add
inc
add
daa
inc
add
lret
push
movsb
scas
or
movsb
dec
es
add
es
add
daa
inc
add
inc
add
inc
add
inc
add
inc
add
daa
inc
add
inc
out
mov
inc
add
inc
add
loopne
jbe
pop
cmpsb
add
inc
add
rcl
pop
add
add
add
jno
cvtdq2ps
jbe
cmpsl
mov
xchg
test
es
add
fiadds
movsb
cmpsb
fiaddl
movsb
mov
fiaddl
movsb
mov
fiaddl
movsb
mov
push
movsb
mov
push
movsb
mov
push
movsb
out
fiaddl
movsb
decl
adc
xor
add
sub
add
add
scas
lcall
das
dec
add
sub
inc
add
inc
sbb
hlt
clc
sarb
sub
jle
add
add
add
add
lods
inc
add
push
movsb
jg
inc
movsb
push
movsb
inc
movsb
std
movsb
jmp
movsb
push
movsb
dec
movsb
std
movsb
jmp
movsb
push
movsb
jg
std
movsb
jmp
movsb
dec
movsb
inc
movsb
jne
pop
movsb
jnp
dec
movsb
fwait
movsb
xor
xor
xor
xor
inc
xor
xor
xor
xor
xor
inc
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
xor
push
shlb
rcll
into
xchg
dec
xor
sbb
push
je,pn
mov
imul
leave
daa
dec
out
pushf
mov
dec
xchg
lock
inc
or
js
popa
pop
jecxz
movb
cs
aas
inc
leave
testb
jl
xchg
inc
add
add
add
es
add
fbld
add
add
je
gs
jo
jo
outsl
insb
je
jae
outsl
popa
add
add
add
add
inc
insl
jns
outsl
js
jns
jb
popa
je
jne
gs
jae
gs
add
add
add
add
inc
jne
jp
outsb
add
add
imul
insb
outsl
add
push
popa
arpl
imul
add
outsb
imul
add
add
add
add
insb
insb
gs
add
add
add
gs
data16
jae
outsb
fs
popa
insb
imul
js
imul
add
add
addr16
insl
ja
jns
popa
jns
outsb
popa
bound
insl
outsl
jb
add
add
je
dec
add
add
add
add
addl
add
loopne
add
mov
add
xchg
in
jno
iret
jbe
or
cwtl
int
std
pop
fsubrs
dec
xor
stc
inc
adc
dec
sbb
mov
jns
dec
sbb
xchg
cmp
in
jno
iret
jbe
or
int
std
pop
jns
pop
xor
stc
inc
icebp
das
int
mov
mov
jns
xchg
lret
rolb
jno
jbe
or
int
std
pop
fdivs
int
stc
inc
icebp
test
mov
int
mov
addl
rolb
jno
jbe
or
cwtl
int
std
pop
ret
cmp
xchg
stc
inc
adc
test
ret
xchg
aad
lds
iret
jbe
or
int
std
pop
pop
insb
cmp
stc
inc
icebp
push
int
mov
mov
jns
test
lcall
jbe
xorl
sbb
and
int
adc
mov
add
add
lods
clc
icebp
jo
jge
aad
clc
icebp
jo
adc
incl
jo
jo
jo
xor
cwtl
add
add
xchg
or
addb
jecxz
hlt
scas
rolb
sub
iret
pop
iret
push
out
int
adc
out
sub
or
rolb
subb
sub
cmc
sub
in
aad
add
mov
fcmovnbe
out
pushf
xchg
test
fs
mov
iret
int3
call
jno
imul
int
std
xor
movsl
das
pop
push
or
sub
xchg
iret
les
addb
add
addl
adc
inc
jns
fldlg2
es
or
add
mov
add
addl
jns
insl
and
push
add
test
push
add
push
mov
test
lret
addb
in
outsl
rcl
jge
outsl
xchg
addb
sahf
mov
jno
popa
mov
addb
push
jge
push
xchg
addb
jge
push
xchg
addb
rorb
jo
std
xor
movsl
inc
xor
or
addl
addl
int
popf
aam
shlb
or
xchg
aam
int
icebp
int
xchg
or
or
or
pushf
stos
sahf
popa
mov
mov
mov
roll
int
or
adc
int
mov
lods
xchg
lret
rorb
in
push
int
or
daa
addl
or
mov
gs
addl
xchg
or
addb
xor
int
mov
int
xor
xor
lea
das
add
addb
int
mov
cli
test
int
jge
xacquire
insl
insb
shrb
outsl
lods
xchg
inc
addl
lea
cli
test
mov
and
xchg
mov
dec
ja
pop
rcll
int
fidivl
jecxz
xchg
or
in
inc
add
test
jecxz
jecxz
movsl
pop
cmpsb
lods
addb
lods
mov
mov
addb
shll
test
add
leave
int
or
cmpb
movsl
jecxz
mov
in
in
addb
movsl
int
mov
rcll
leave
xor
pop
jbe
jnp
int
xor
movsl
int
cmp
inc
inc
add
jle
clc
or
std
das
pop
adc
cmp
or
add
mov
xor
les
int
sub
stc
xor
sbb
inc
int
inc
int
std
xor
xor
pusha
lret
arpl
test
xor
in
popf
adc
addb
shl
mov
and
mov
jbe
shrl
lods
or
stc
test
int
jne
pop
insl
shl
test
in
xchg
pop
insl
xchg
int
jge
les
xor
les
adc
addb
mov
shll
xor
ja
lret
je
pop
shl
mov
xchg
xor
int
das
mov
push
das
rcll
pop
mov
ja
int
pop
orb
jmp
mov
insl
iret
les
test
mov
xor
mov
insl
add
or
cwtl
int
mov
int
int
jns
mov
sub
add
cwtl
int
jns
test
add
mov
jns
xchg
cmp
add
add
inc
addl
leave
jbe
inc
and
or
int
stc
int
stc
pop
cwtl
lcall
ljmp
cmp
sarl
jbe
int
stc
int
stc
cmp
sarl
ljmp
int
stc
int
stc
cmp
sarl
ljmp
int
stc
int
stc
cmp
sarl
ljmp
leave
jbe
dec
and
mov
and
sarb
jbe
or
sarb
ror
jbe
jo
addb
addb
stc
cmp
cmp
sarl
push
rorb
jbe
int
stc
int
stc
cmp
cmp
sarl
push
rorb
jbe
leave
jbe
arpl
lods
pop
addb
addb
add
iret
push
xchg
incl
add
add
lea
xchg
fcmove
jbe
dec
insb
addb
stc
cmp
sarl
cmp
shl
sub
or
int
stc
int
stc
add
cmc
cmpb
sarl
repnz
or
mov
sbb
addb
push
or
int
dec
or
int
mov
cmc
or
rolb
mov
in
or
push
addl
lea
or
pop
addl
stc
int
stc
cmp
cltd
shr
xchg
shr
sub
inc
jge
add
int
mov
add
mov
jbe
int
xor
addb
int
adc
adc
add
int
mov
mov
int
xchg
rolb
bound
jno
cmp
push
push
add
add
cmpsl
aad
leave
push
pop
add
add
adc
add
mov
push
insb
add
add
iret
outsb
add
add
insl
leave
push
sub
add
push
cmpsl
aad
leave
push
xor
add
push
xor
cmp
add
mov
push
inc
add
add
iret
addr16
add
add
jbe
int
adc
mov
int
mov
add
addb
mov
leave
jbe
mov
cmp
leave
jbe
xlat
sbb
push
les
add
push
cmpsl
aad
leave
push
nop
add
add
xlat
inc
leave
push
aam
add
cmp
jge
push
faddl
add
mov
shll
add
xlat
sbb
push
pushf
add
add
cmpsl
aad
leave
push
movsb
add
add
xlat
inc
leave
push
lods
add
add
dec
push
jge
push
mov
add
mov
shll
add
ret
sbb
jo
jbe
add
int
stc
int
stc
cmp
cmp
shl
sub
mov
lea
testb
int
mov
lds
psrlq
sub
mov
lea
insl
inc
shrl
or
addl
int
mov
rclb
addl
add
addb
jo
cwtl
xor
lea
addb
int
adc
mov
insl
iret
pop
pushf
add
add
jo
jbe
int
inc
addl
adc
pop
adc
mov
insl
iret
pop
les
add
mov
jo
jbe
int
inc
addl
mov
pop
adc
mov
insl
iret
pop
push
add
add
jo
jbe
int
inc
addl
pop
orb
xor
push
cmp
sahf
clc
add
shrb
pop
shlb
xchg
xor
int
pop
add
mov
adc
int
mov
pop
adc
mov
insl
iret
xchg
add
jo
jbe
int
cmp
push
add
in
test
or
add
pop
sub
sub
lea
ljmp
sarl
push
ror
pop
cmc
incl
add
jo
jbe
int
stc
int
mov
lds
lock
push
ror
pop
xchg
incl
add
jo
xchg
or
xchg
stc
cmp
jmp
shr
sub
inc
jge
mov
jbe
addl
cmp
sarl
repnz
xchg
or
int
cmp
int
mov
lea
sarl
push
roll
xchg
int
mov
lea
shl
sub
mov
lea
insl
inc
shrl
pop
push
incl
add
ljmp
lea
jge
xor
mov
jbe
jo
stc
jl
orb
jne
sbb
jbe
int
mov
xchg
mov
or
cltd
shr
xchg
shr
sub
push
mov
jbe
int
stc
cmp
cmp
shl
sub
mov
lea
shrl
add
int
stc
int
stc
cmp
cmp
shl
sub
mov
std
inc
shrl
add
int
stc
int
stc
cmp
cmp
sarl
push
shr
adc
lea
or
cltd
shr
xchg
shr
sub
xchg
int
std
inc
roll
or
int
jne
jbe
ret
dec
and
leave
jbe
inc
and
int
inc
cmp
cmp
sarl
push
rorl
jbe
int
inc
int
inc
cmp
cmp
sarl
push
rorl
jbe
leave
jbe
dec
and
ret
xor
lea
lds
psrlq
sub
mov
lea
push
xchg
addb
cmp
jns
or
lods
sub
jmp
push
jge
jbe
xor
cmp
clc
add
jbe
int
sbb
lds
psrlq
sub
mov
lea
int
sbb
lds
psrlq
push
rorl
jbe
int
cmp
lds
psrlq
push
ror
lea
jbe
int
inc
int
inc
cmp
cmp
shl
sub
mov
lea
pusha
xchg
addb
or
jbe
or
xchg
or
pop
inc
and
leave
jbe
cmp
xchg
and
int
xchg
int
xchg
cmp
cmp
sarl
push
rorl
jbe
int
jmp
addl
add
and
push
xchg
add
add
and
insl
int
icebp
int
icebp
cmp
cmp
sarl
push
ror
lea
rcl
int
insl
lret
or
int
int
icebp
int
icebp
cmp
cmp
shl
sub
mov
lea
rcl
int
adc
or
cltd
shr
xchg
shr
sub
xchg
int
insl
das
pop
dec
mov
push
jo
add
int
jo
add
cmp
cmp
ljmp
pop
lea
test
test
xchg
icebp
cmp
cltd
shr
sub
jmp
push
adc
xchg
jge
rcll
int
insl
or
icebp
int
icebp
cmp
cmp
sarl
push
ror
lea
rcl
int
insl
lret
or
int
int
icebp
int
icebp
cmp
sarl
repnz
int
jge
rcl
int
pop
int
pop
cmp
cltd
shr
xchg
shr
sub
xchg
int
insl
das
pop
dec
mov
push
xchg
add
add
pop
xchg
add
add
lds
cltd
sarl
push
rolb
test
test
test
xchg
icebp
cmp
cltd
shr
sub
jmp
push
adc
xchg
jge
rcll
int
insl
or
xor
sub
mov
lea
xchg
pop
cmp
cltd
shr
xchg
shr
sub
das
rcl
xchg
or
int
jge
lea
incl
add
jbe
int
pop
cmp
shl
sub
xchg
push
ror
lea
lea
xchg
push
ror
lea
sub
or
int
popf
int
popf
cmp
shl
sub
xchg
push
ror
lea
or
jmp
cmp
adc
xchg
in
sbb
jbe
int
popf
cmp
cmp
sarl
push
roll
push
int
popf
int
popf
cmp
sarl
repnz
int
lods
xor
jbe
int
popf
cmp
cmp
mov
xchg
push
das
rcl
inc
shrl
pop
adc
add
int
stc
int
stc
int
std
or
int
mov
lea
or
jmp
cmp
addb
jno
lea
xchg
cmp
cltd
shr
xchg
shr
sub
jno
stc
int
stc
add
xor
shr
xchg
shr
sub
jno
jo
int
stc
int
stc
cmp
cltd
shr
xchg
shr
sub
or
inc
jge
add
int
stc
in
int
or
push
cmpsb
lods
int
lods
shr
xchg
cmp
lods
sub
int
jne
dec
orl
mov
lea
or
cltd
shr
sub
jmp
push
adc
xchg
mov
jge
jbe
cmp
add
std
add
std
shr
sub
leave
int
std
int
std
shr
xchg
shr
sub
cmp
inc
rcl
mov
lea
add
addl
shr
sub
jno
stc
int
stc
cmp
cltd
shr
xchg
shr
sub
jno
jne
jo
int
or
int
xor
jbe
cmp
add
test
xor
jbe
int
mov
jbe
int
mov
jns
aad
lods
sub
repz
push
ror
xchg
jne
test
jbe
add
test
xlat
int
std
cmp
add
test
xor
jbe
int
mov
jbe
int
mov
jns
aad
lods
sub
repz
push
ror
xchg
jne
test
jbe
add
test
xlat
int
jne
jbe
int
mov
lea
shl
sub
mov
stc
or
leave
jbe
imul
imul
gs
into
and
addb
sarl
lds
jbe
rol
lods
xchg
or
int
cmp
lods
sub
lods
lret
int3
das
imul
lret
inc
rcl
jle
jbe
int
mov
jbe
int
mov
jns
or
lods
sub
jmp
push
jge
jbe
cmp
lods
sub
lods
cmp
xchg
jbe
add
std
add
std
shr
sub
lock
and
jbe
in
and
jbe
int
stc
cmp
cmp
sarl
push
ror
stc
int
stc
cmp
cltd
shr
xchg
shr
sub
inc
jge
add
int
or
out
leave
jbe
mov
xchg
and
dec
mov
lods
imul
and
xor
jbe
int
lods
int
lods
cmp
jmp
cmp
adc
lea
or
jmp
cmp
addb
jno
lea
xchg
cmp
cltd
shr
xchg
shr
sub
jno
lea
or
cltd
shr
xchg
shr
sub
jno
jo
or
int
mov
lea
or
jmp
cmp
addb
jno
lea
or
cltd
shr
xchg
shr
sub
jno
lea
cmp
shr
xchg
shr
sub
jno
jo
int
mov
jbe
int
mov
or
jns
jmp
shrl
jbe
inc
jge
add
int
mov
xchg
mov
or
cltd
shr
xchg
shr
sub
inc
lea
addb
and
add
mov
lea
add
lea
jmp
add
scas
or
aaa
sbb
add
addb
add
add
add
jno
cmp
add
add
lods
jno
lea
lea
shll
jno
mov
or
int
mov
lea
add
addl
shr
sub
jno
lea
or
cltd
shr
xchg
shr
sub
jno
add
int
rcl
insl
xchg
cmp
inc
leave
int
mov
lea
addb
cmp
cltd
shr
xchg
shr
sub
jno
lea
or
cltd
shr
xchg
shr
sub
jno
jne
jo
int
lods
or
int
cmp
cmp
or
cltd
shr
xchg
shr
sub
jno
lea
or
cltd
shr
xchg
shr
sub
jno
lods
add
int
std
or
int
jne
out
or
leave
jbe
inc
and
int
push
cmp
or
lods
sub
jmp
push
rorl
jbe
int
push
int
push
cmp
or
lods
sub
jmp
push
rorl
jbe
leave
jbe
dec
and
ret
xor
lea
jns
or
jmp
shrl
lea
push
xchg
addb
xchg
int
inc
cmp
cmp
sarl
push
jge
jbe
xor
cmp
clc
add
jbe
int
lods
int
lods
cmp
or
jmp
shrl
lea
int
lods
int
lods
cmp
or
lods
sub
jmp
push
rorl
jbe
int
xchg
int
xchg
cmp
or
lods
sub
jmp
push
ror
lea
jbe
int
push
int
push
cmp
or
jmp
shrl
lea
pusha
xchg
addb
or
jbe
or
cmp
inc
and
leave
jbe
cmp
xchg
and
int
cmp
jns
or
lods
sub
jmp
push
rorl
jbe
int
jmp
addl
add
and
push
jl
add
mull
xchg
int
icebp
int
icebp
cmp
or
lods
sub
jmp
push
ror
lea
rcl
int
pop
lret
or
int
int
icebp
int
icebp
cmp
jns
jmp
shrl
lea
rcl
int
gs
cmp
cmp
shl
sub
repz
push
adc
das
pop
dec
mov
push
mov
add
int
mov
add
cmp
aad
lods
sub
repz
push
rolb
loope
jge
loope
insl
lret
int
icebp
int
icebp
cmp
cmp
shl
xchg
shl
sub
int
jge
rcll
int
pop
or
icebp
int
icebp
cmp
or
lods
sub
jmp
push
ror
lea
rcl
int
pop
lret
or
int
int
icebp
int
icebp
cmp
lods
sub
or
jmp
push
ror
lea
rcl
int
insl
int
insl
cmp
cmp
shl
sub
repz
push
adc
das
pop
dec
mov
push
jl
add
int
jl
add
cmp
aad
lods
sub
repz
push
rolb
loope
jge
loope
insl
lret
int
icebp
int
icebp
cmp
cmp
shl
xchg
shl
sub
int
jge
rcll
int
pop
or
and
or
jns
jmp
shrl
lea
xchg
insl
cmp
cmp
shl
sub
repz
push
adc
rcl
xchg
or
int
jge
lea
incl
add
jbe
int
insl
cmp
jmp
cmp
lods
sub
int
or
lea
sub
int
cmp
xchg
push
rorl
jbe
int
popf
int
popf
cmp
jmp
cmp
lods
sub
int
popf
int
popf
cmp
shl
sub
aad
repz
push
adc
xchg
in
sbb
jbe
int
popf
cmp
or
lods
sub
jmp
push
roll
inc
int
popf
int
popf
cmp
lods
sub
or
jmp
push
ror
lea
popf
int
popf
cmp
aad
repz
shrl
xchg
inc
das
rcl
inc
shrl
pop
adc
add
int
mov
dec
iret
jbe
add
mov
jbe
int
xchg
addl
icebp
addl
jne
test
addb
stc
int
stc
cmp
cmp
shl
sub
mov
lea
rcl
push
int
mov
lea
add
addl
shr
sub
jno
stc
int
stc
cmp
cltd
shr
xchg
shr
sub
jno
jne
jo
stos
test
lret
rorb
add
and
int
int
sub
pop
subb
dec
addl
addb
das
add
int
or
das
add
add
int3
addb
addb
add
int
and
mov
or
xor
shrb
mov
mov
mov
das
add
iret
jl
pop
or
add
or
add
cmc
subb
xchg
das
mov
mov
mov
in
push
push
aam
int
add
stc
subb
xchg
mov
sahf
dec
xchg
aam
iret
ficoms
out
int
std
int
push
add
xchg
cmpsb
mov
and
das
mov
sahf
dec
add
add
std
mov
sbb
mov
mov
add
add
mov
pop
out
subb
jo
das
mov
adc
mov
pop
xchg
adc
or
arpl
insl
insb
in
xchg
cmp
lret
lds
sub
jbe
add
xor
fstpl
add
inc
pop
pushf
test
insl
insb
in
fmul
insb
faddl
and
jo
int
adc
fcompl
lea
std
inc
clc
jnp
or
std
or
fsub
inc
pushf
adc
xchg
mov
int
iret
push
ror
push
add
ds
mov
out
inc
stc
fdivs
int
dec
int
in
popf
inc
cld
ja
int
in
mov
out
or
adc
not
dec
int
stc
dec
or
sbbb
cmp
test
lret
rorb
add
push
pop
cwtl
pop
dec
and
leave
jbe
inc
and
int
std
lcall
psrlq
xchg
stos
cmp
shl
sub
or
int
std
int
std
int
std
int
std
int
std
int
std
int
std
int
std
int
std
leave
jbe
fadd
loope
int
std
int
std
cmp
cmp
shl
sub
jmp
push
or
cmpsb
dec
int
sub
push
das
add
int
std
int
std
cmp
cmp
shr
xchg
shl
sub
inc
adc
add
int
add
std
int
std
cmp
xchg
shl
sub
inc
adc
add
xchg
int
cmp
shl
xchg
shl
sub
or
inc
icebp
aam
int
std
int
std
cmp
cmp
ljmp
int
adc
adc
test
xor
jbe
int
std
cmp
cmp
ljmp
int
adc
adc
je
xor
add
int
std
int
std
int
std
int
std
cmp
cmp
in
xchg
push
popf
int
adc
adc
ror
jl
xchg
int
std
int
std
cmp
cmp
shr
xchg
shr
sub
int
std
or
lea
cltd
cmp
shl
sub
repz
push
jecxz
lea
xchg
int
std
int
std
cmp
cmp
shr
xchg
shr
sub
xchg
jbe
popa
and
or
in
int
dec
int
adc
xor
jbe
add
in
int
adc
dec
leave
jbe
popl
dec
pop
xchg
xchg
std
cmp
cmp
shr
xchg
shr
sub
or
inc
jge
pop
int
stc
int
stc
cmp
lock
sub
mov
lea
fnstcw
psrlq
sub
int
adc
xchg
push
jecxz
rcl
bound
jo
int
std
int
std
cmp
lock
push
roll
mov
and
jbe
int
popf
cmp
cmp
mov
push
jge
fldt
pop
xchg
add
add
jbe
int
std
cmp
lock
push
roll
mov
and
jbe
int
stc
cmp
lock
push
roll
addl
leave
jbe
fdivr
sbb
int
std
int
std
cmp
xchg
shrl
sbb
std
int
std
cmp
lock
push
rorl
jbe
int
std
int
std
cmp
lock
push
rorl
jbe
int
std
int
std
cmp
cmp
shrl
push
jge
jbe
inc
jge
xchg
test
jbe
int
sbb
jbe
int
std
cmp
lock
sub
mov
in
inc
rcl
push
int
std
int
std
cmp
cmp
repnz
mov
in
shr
sub
aam
int
in
int
dec
int
adc
lret
jno
mov
jo
in
push
int
cmc
xchg
int
dec
int
adc
xchg
jo
mov
jno
or
int
std
int
std
cmp
lock
sub
mov
cmc
inc
ror
jbe
int
stc
xor
jns
lock
push
roll
cmp
cmp
repnz
mov
cmc
das
rcl
int
lods
or
stc
cmp
lock
push
roll
int
std
cmp
cmp
repnz
mov
lea
push
or
add
int
adc
lea
insb
sarl
test
int
icebp
push
dec
and
add
int
std
int
std
cmp
lock
push
rcrl
mov
stc
int
stc
in
xchg
jbe
int
std
cmp
cmp
shl
sub
mov
arpl
rorb
add
xor
jbe
dec
and
inc
and
or
cwtl
int
int
std
int
std
sar
shll
xchg
cltd
shr
sub
mov
xchg
mov
das
add
int
mov
xchg
mov
xchg
cmc
leave
jbe
popa
and
int
stc
cmp
rcl
mov
xchg
std
int
std
cmp
cmp
shr
sub
repz
push
fxch
out
pop
xchg
leave
fsubrl
add
int
cmc
int
mov
or
mov
out
xor
pop
int
std
cmp
cmp
in
push
cld
or
add
int
std
int
std
cmp
cmp
shl
xchg
shr
sub
or
mov
xchg
out
cmp
cmp
shl
xchg
shr
sub
jmp
addb
std
add
cmp
sarl
push
cltd
iret
ja
jecxz
inc
cltd
das
add
addb
jo
or
mov
mov
das
addb
in
xchg
int
in
xchg
repz
mov
mov
adc
dec
and
or
int
in
cmp
add
call
repz
sarl
xchg
mov
xchg
in
int
dec
int
dec
cmp
add
call
mov
push
cltd
int
mov
int
dec
int
dec
cmp
add
call
mov
push
cltd
int
mov
int
in
int
movsl
addl
mov
push
xchg
add
add
stc
int
stc
cmp
add
call
mov
push
cltd
int
adc
out
inc
aam
in
sub
xchg
std
int
std
cmp
add
call
repz
sarl
cltd
int
test
das
push
test
add
arpl
jbe
cmp
int
lods
add
ljmp
std
cmp
int
std
cmp
shl
sub
mov
lret
rorb
adc
xchg
addb
and
inc
and
int
std
cwtl
lcall
xor
xchg
mov
sub
or
int
std
int
std
cmp
mov
repnz
or
int
and
jbe
int
in
cmp
or
adc
dec
mov
cmc
int
cmc
cmp
or
adc
dec
lahf
xchg
lea
cmp
or
adc
imul
mov
lea
mov
jbe
dec
and
hlt
mov
insl
das
add
int
dec
push
insl
das
add
int
sbb
insl
das
add
int
and
jbe
int
mov
mov
addb
addl
cmp
mov
repnz
or
int
std
int
std
int
mov
lea
outsb
jo
lea
insl
das
add
leave
jbe
dec
and
int
xchg
pop
int
xchg
cmp
loop
mov
push
popf
or
int
std
int
sub
xor
bound
int
std
int
std
int
and
sbb
xchg
dec
inc
fst
push
cmc
int
adc
lods
int
cmc
cmp
add
call
jmp
shr
sub
int
dec
bound
xchg
jo
add
int
dec
int
xchg
int
jo
jge
xchg
jo
dec
xchg
int
xor
sbb
xchg
xchg
add
mov
or
pop
fs
das
mov
xor
jbe
int
std
int
std
cmp
add
shl
sub
mov
mov
and
jge
add
int
std
int
std
cmp
add
shl
sub
mov
jbe
int
stc
int
stc
add
cmp
repnz
mov
mov
pop
lea
addb
mov
lea
xchg
lea
or
jl
icebp
aam
clc
icebp
sub
xchg
in
xchg
int
jo
outsb
test
test
int
mov
lea
xchg
std
cmp
add
call
jmp
shr
sub
pop
lea
mov
popf
int
test
lds
add
sbb
stc
int
stc
cmp
shr
xchg
add
incl
push
adc
and
jbe
int
stc
int
stc
add
cmp
repnz
mov
lea
mov
pop
lea
add
int
and
sbb
cmp
lea
int
adc
lods
int
adc
sti
call
jmp
shr
sub
int
dec
bound
xchg
xchg
pop
add
push
insl
das
add
int
and
or
or
cmp
add
call
jmp
shrl
add
int
std
int
std
cmp
add
sarl
push
rorl
jbe
pop
push
jl
or
leave
jbe
sbb
shr
lahf
xchg
jbe
dec
and
xchg
iret
inc
shl
xchg
adc
scas
cmp
lea
add
cli
xchg
xchg
add
or
mov
jbe
or
iret
outsb
std
iret
jno
or
or
leave
push
jo
add
sub
pushf
add
add
pop
movsb
add
add
push
lods
add
add
xchg
add
sbb
les
add
popa
lahf
xchg
add
sbb
aam
add
call
iret
faddl
add
leave
push
in
add
mov
add
jbe
and
or
jbe
inc
lahf
xchg
jbe
pusha
lahf
xchg
and
int3
push
jo
add
shr
xchg
add
scas
or
test
add
sbb
addl
add
int
adc
inc
add
add
add
or
iret
jbe
jo
or
push
int
jge
icebp
int
std
int
std
cmp
add
sarl
push
rorl
jbe
int
std
int
std
cmp
add
call
lods
sub
jmp
push
jge
jbe
inc
rcl
xchg
or
in
das
int
int
jne
jbe
int
mov
int
sbb
mov
addl
addl
int
sub
xchg
dec
int
cmp
xor
jo
int
stc
int
stc
cmp
add
sarl
push
rorl
jbe
int
and
pop
mov
push
insl
das
add
add
and
lock
mov
push
insl
das
add
int
and
lock
mov
push
insl
das
add
lcall
push
insl
das
add
int
and
sbb
sbb
or
addl
int
dec
add
and
or
or
cmp
add
call
jmp
shrl
dec
and
int
mov
jbe
shr
xchg
adc
scas
cmp
sbb
insb
cmp
lea
lds
outsb
adc
jbe
leave
addb
sub
pushf
test
jbe
int
sub
outsb
mov
jbe
int
sub
outsb
dec
in
adc
jbe
int
cmp
lea
lds
outsb
adc
jbe
add
or
icebp
addl
cmp
int
arpl
xchg
cmp
test
shlb
xchg
int
jno
das
mov
mov
mov
leave
jbe
dec
and
push
lret
aam
popa
shll
xchg
out
xchg
pop
out
orb
mov
pop
out
cmpb
std
int
std
cmp
add
call
jmp
in
xchg
push
cld
add
std
add
test
sub
adc
dec
and
int
std
int
std
cmp
add
call
jmp
shr
sub
inc
stc
xorb
rorb
add
push
leave
jbe
mov
jbe
xchg
addb
addb
test
lods
addb
addb
addb
addb
addb
addb
addb
mov
stc
cmp
clc
add
repnz
and
movb
addb
or
cmc
icebp
lea
jnp
addb
addb
std
ss
pushf
addb
int
push
jp
addb
int
std
xchg
int
std
xchg
xor
jbe
int
in
sbb
cmpb
int
mov
fadds
jbe
xchg
popa
fists
xor
xchg
int
xor
out
adc
mov
subb
int
xchg
adc
mov
addb
clc
int
icebp
push
out
addb
icebp
adc
pop
push
addb
add
add
adcb
pop
cwtl
lcall
or
adc
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
movsl
dec
bound
addb
dec
pop
and
pop
xchg
mov
stc
xor
jbe
int
stc
sub
int
cmc
dec
inc
outsl
addb
xor
int
in
push
sarb
fisubrl
ret
add
clc
test
push
addb
int
mov
leave
das
sarl
fisttpl
xchg
mov
popa
addb
push
addb
addb
addb
addb
pop
lcall
xchg
lods
int
mov
int
popf
xor
int
xchg
cmpsb
push
addb
mov
ret
jbe
int
icebp
int
or
int
xchg
xor
inc
test
inc
or
rol
addb
cmp
clc
hlt
int
gs
ss
push
addb
add
xchg
jbe
int
stc
sub
int
cmc
dec
inc
outsl
addb
xor
int
in
push
sarb
hlt
int
dec
xor
int
mov
leave
das
rol
int
xor
das
pop
pop
add
add
mov
in
jo
jbe
xchg
aaa
ficoms
pop
mov
jbe
leave
jbe
mov
jbe
leave
jbe
fidivs
ficoms
or
pop
leave
jbe
scas
aaa
ficoms
or
cwtl
lcall
adc
jbe
cmp
cmp
pop
dec
and
out
ficoms
jp
jbe
int
or
iret
xchg
addl
push
ror
je
ror
xor
pushf
test
inc
loop
shr
xchg
int
int
test
insl
adc
cmpsb
mov
or
xchg
in
inc
jbe
das
or
jbe
add
mov
int
stc
push
insl
aam
cmp
out
int
mov
fs
xchg
mov
lret
xchg
add
xchg
stc
xchg
lret
int
lods
or
lret
int
stc
xchg
int
mov
adc
int
cmc
insb
add
std
sarl
push
sarb
rorl
jbe
push
cmc
int
cmc
add
call
repz
shrl
xchg
stc
inc
rolb
int
adc
xchg
stc
int
mov
test
int
stc
iret
adc
int
dec
shl
sub
cmp
or
push
adc
xchg
adc
call
repz
shrl
xchg
stc
xchg
xor
or
inc
lds
pop
outsl
add
add
jbe
int
mov
ljmp
mov
ror
popf
int
cmp
in
or
or
add
in
xchg
or
test
lret
rorb
add
adc
jbe
leave
jbe
dec
and
inc
and
cwtl
or
leave
jbe
into
and
in
inc
sbb
int
std
sar
shll
xchg
repnz
adc
out
xchg
push
add
lea
int
adc
jge
jmp
shr
sub
das
roll
jmp
addb
xchg
stc
cmp
shr
sub
jge
jmp
push
adc
xchg
std
int
std
cmp
cmp
shl
xchg
shl
sub
push
adc
xchg
stc
int
stc
aam
cmp
shl
sub
icebp
shl
xchg
push
jecxz
std
int
std
cmp
loope
jmp
shl
sub
aad
int
in
int
in
cmp
loope
jmp
shl
sub
cmp
in
sub
lock
sub
icebp
shl
xchg
push
jecxz
std
int
std
cmp
loope
jmp
shl
sub
aad
or
int
std
cmp
jmp
shr
sub
xchg
int
cmc
int
cmc
cmp
cmp
ljmp
int
std
int
std
cmp
cmp
shl
sub
repz
push
aad
adc
das
pop
pop
add
add
jbe
int
mov
jbe
arpl
rolb
insl
pop
jbe
aam
pop
jbe
fdivs
lret
or
das
adc
in
addb
lea
lret
or
insb
inc
jbe
subb
stc
std
add
cmpsb
rorb
adc
cmp
addb
xchg
jbe
inc
and
dec
sub
jno
cli
arpl
jbe
int
adc
subl
repnz
or
leave
jbe
into
and
inc
sbb
mov
int
std
int
std
cmp
shl
sub
jns
mov
lea
int
adc
jmp
shr
sub
das
rcl
in
outsb
int
cmc
int
cmc
sarl
push
sarl
lds
jbe
iret
jbe
jo
mov
jbe
int
stc
int
cmc
or
add
jbe
int
std
cmp
lock
push
roll
cmc
int
in
int
in
cmp
shl
sub
jns
mov
std
int
std
cmp
cmp
shr
xchg
shr
sub
xor
int
cmc
inc
jge
mov
jbe
int
mov
jns
lock
push
rorl
jbe
leave
jbe
bound
xchg
addb
jbe
cmp
shrl
jmp
push
jge
jbe
aad
or
int
mov
orb
in
lret
int
stc
das
pop
insl
cmp
or
int
in
int
in
cmp
mov
repnz
int
cmc
sub
int
push
popf
cld
add
int
popf
cmp
or
int
std
int
std
cmp
lock
push
roll
std
int
std
cmp
lock
push
sarl
jbe
int
adc
lea
cmp
cmp
repnz
mov
lea
imul
add
jbe
int
mov
jns
lock
sub
mov
int
stc
test
shll
rolb
in
xor
lret
pop
lcall
addb
roll
cwtl
sub
lahf
xor
std
or
stc
mov
lret
cmp
leave
jbe
adc
addb
mov
jecxz
mov
stc
iret
dec
into
mov
pop
das
mov
mov
das
mov
mov
fs
adc
das
mov
mov
mov
jge
pop
cmc
aam
leave
jbe
sbb
stc
int
mov
jecxz
mov
inc
in
dec
add
leave
jbe
push
addb
int
mov
lret
pop
dec
sub
push
add
add
cmc
sbb
push
jb
add
cmp
arpl
rolb
jecxz
mov
mov
adc
int
add
mov
inc
add
mov
adc
iret
js
or
iret
js
or
iret
js
or
iret
pop
or
cmp
addb
or
jbe
iret
pop
out
addb
pop
xor
pop
iret
pop
inc
addl
pop
xchg
addl
addb
xchg
icebp
or
or
mov
adc
or
and
lea
out
cmp
adc
jnp
ficoms
das
inc
cli
xchg
rcll
xchg
or
mov
out
int
or
cmp
shl
sub
int
mov
addb
cld
push
lock
stc
das
add
adc
mov
or
and
jbe
mov
movsl
int
jge
or
cmpsb
or
jnp
ficoms
das
inc
add
out
xchg
cmp
cmp
push
or
clc
add
add
add
lea
or
lea
icebp
mov
dec
stc
pop
sbb
mov
xor
std
xor
icebp
mov
xchg
adc
add
mov
jmp
and
lea
cmpsb
or
shr
sub
notl
shr
xchg
push
lock
aaa
ficoms
or
or
or
cmpsb
or
jnp
ficoms
das
inc
add
out
xchg
cmp
cmp
push
or
clc
push
comiss
xor
add
int
stc
push
imull
add
int
fs
push
faddl
int
and
jp
int
sbb
cltd
or
xchg
xchg
in
or
or
xchg
cmpsb
cmc
cmp
or
fcom
in
xchg
jbe
int
or
inc
lcall
ja
int
mov
xchg
mov
and
or
xchg
sbb
mov
jbe
or
push
addb
pusha
adc
jo
jbe
int
xor
int
stc
int
in
push
insl
aam
int
std
or
std
test
lea
movsl
push
or
or
int
test
lret
rolb
int
mov
pop
adc
mov
int
cmp
lret
pop
mov
shll
fwait
sbb
cwtl
int
pop
lahf
xor
cmp
jecxz
mov
xchg
add
xchg
das
mov
repz
mov
sbb
lds
sbb
jmp
dec
add
addl
mov
lret
cli
sbb
adc
or
sbb
leave
stos
lds
mov
addb
and
cmc
xchg
aaa
ficoms
or
aaa
ficoms
or
jbe
dec
and
inc
and
out
ficoms
or
fidivs
ficoms
or
int
adc
inc
icebp
xchg
shl
xchg
int
in
int
adc
ljmp
cmp
cmp
push
jns
jbe
iret
jbe
or
int
or
xor
ficoms
or
std
int
std
cmp
shr
xchg
sar
cmp
shr
sub
int
std
int
std
cmp
popf
shl
sub
xchg
int
std
int
std
cmp
popf
shl
sub
xchg
int
std
int
std
cmp
popf
shl
sub
xchg
or
nop
add
add
lea
icebp
cmp
shr
sub
jmp
push
adc
xchg
mov
cltd
cmp
in
push
aad
int3
pop
aam
add
int
dec
int
int
std
int
std
int
jo
popf
cmp
in
push
aad
int3
pop
aam
add
int
xor
xchg
xor
icebp
cmp
shr
sub
jmp
push
adc
xchg
std
int
std
cmp
cltd
shl
xchg
shl
sub
int
std
cmp
mov
shl
sub
xchg
int
adc
int3
pop
aam
add
int
adc
add
shl
sub
jns
mov
std
int
std
add
cmp
shr
sub
jmp
push
adc
xchg
std
int
std
cmp
repz
shl
sub
xchg
int
std
int
std
cmp
in
shl
xchg
push
aad
adc
add
add
push
nop
add
add
jbe
int
std
sar
cmp
or
mov
push
shll
jbe
iret
or
addb
addb
int
push
or
lea
shr
xchg
int
lods
int
mov
leave
cmp
push
icebp
bound
xor
repnz
inc
mov
int
lods
int
mov
inc
jge
shr
xchg
int
lods
int
mov
leave
cmp
push
icebp
bound
push
shl
sub
cmp
inc
sti
add
int
std
int
std
cmp
repnz
jns
mov
std
int
std
cmp
shr
xchg
cmp
shr
sub
xchg
int
std
int
std
cmp
shr
xchg
cmp
shr
sub
xchg
int
std
int
std
cmp
shr
xchg
cmp
shr
sub
xchg
or
nop
add
add
jbe
int
int
mov
aad
jmp
shr
sub
or
add
jbe
int
int
std
int
std
cmp
shr
xchg
int
jo
aad
ljmp
aam
add
int
sbb
lea
or
repnz
jns
mov
std
int
std
cmp
cmp
shr
sub
jmp
push
adc
xchg
std
int
std
cmp
hlt
call
in
push
aad
adc
add
add
jbe
int
std
add
call
repnz
jns
mov
std
int
std
add
cmp
shr
sub
jmp
push
adc
int
std
add
cmp
shr
sub
jmp
push
adc
pop
nop
add
add
xchg
std
int
std
xchg
cmp
int3
push
aam
add
int
sub
hlt
call
repz
shl
sub
iret
or
addb
addb
xchg
and
insl
aam
int
in
int
adc
inc
jge
shr
xchg
int
int
int
in
int
adc
fidivrl
lock
push
adc
xor
jo
xchg
push
in
push
int
int
push
lret
or
int
cmc
int
stc
das
inc
jge
shr
xchg
int
cmc
int
stc
cmp
cmp
shl
sub
lea
push
lds
int
inc
jo
lea
or
xchg
xchg
push
int
dec
int
int
xchg
sbb
dec
xchg
sub
lea
int
int
push
xor
int
int
xchg
jbe
or
das
inc
jge
shr
xchg
int
in
int
adc
leave
cmp
shl
sub
or
int
xor
les
in
int
adc
inc
jge
shr
xchg
int
in
int
adc
repnz
lea
leave
cmp
add
stc
push
inc
shrl
add
addb
movsb
dec
mov
jge
cmpsb
xor
lea
xchg
das
inc
rcll
jbe
int
xchg
shrl
cmp
cmp
push
or
cmpsb
stc
das
inc
popf
xchg
or
int
cmc
push
out
add
dec
shr
xchg
int
stc
cmp
mov
int
cmc
int
stc
das
inc
or
shrl
shr
xchg
int
stc
cmp
shrl
cmp
push
fcmovne
lea
mov
ror
icebp
or
int
xchg
das
inc
rcll
jbe
int
xchg
shrl
das
mov
cmp
dec
or
rorl
mov
or
and
shrl
ficoms
cmp
fidivs
ficoms
ss
or
cs
int
xor
add
mov
int
xor
xchg
int
orl
push
and
add
in
test
int
adc
jbe
leave
jbe
scas
aaa
ficoms
or
int
jne
inc
jge
shr
xchg
int
insl
int
jne
repnz
lea
cmp
cmp
push
shl
int
inc
inc
mov
int
xor
xor
insb
test
jbe
int
in
int
adc
inc
jge
shr
xchg
int
in
int
adc
fnstsw
leave
push
sub
adc
push
mov
std
int
std
cmp
shr
xchg
sar
cmp
shr
sub
int
std
int
std
cmp
popf
shl
sub
xchg
int
std
int
std
cmp
popf
shl
sub
xchg
int
std
int
std
cmp
xchg
shl
sub
xchg
or
nop
add
add
lea
xchg
mov
cltd
cmp
in
push
aad
int3
pop
aam
add
int
dec
int
int
std
int
std
int
jo
cltd
cmp
in
push
aad
int3
pop
aam
add
int
sbb
xchg
sbb
icebp
shr
sub
psrlq
xchg
push
adc
xchg
std
int
std
cmp
cltd
shl
sub
repz
push
aad
cmpsb
std
cmp
hlt
call
mov
push
lds
aam
add
int
std
int
std
cmp
shr
xchg
sar
cmp
shr
sub
int
std
int
std
cmp
popf
shl
sub
xchg
int
std
int
std
cmp
popf
shl
sub
xchg
iret
xchg
movsl
or
add
iret
nop
add
add
std
int
std
cmp
int
sub
icebp
shr
xchg
shr
sub
jno
pop
out
addb
addl
add
dec
int
mov
mov
dec
int
cmc
int
stc
das
inc
jecxz
shl
xchg
int
cmc
int
stc
cmp
shr
sub
xchg
cmc
cmp
push
bswap
stc
das
inc
sti
xchg
shr
xchg
int
cmc
int
stc
cmp
cmp
push
aad
adc
xchg
cmc
sarl
das
inc
sti
xchg
shr
xchg
int
cmc
int
stc
cmp
cmp
push
aad
adc
xchg
cmc
sarl
das
inc
sti
xchg
shr
xchg
int
cmc
cmp
int
stc
cmp
push
flds
dec
sarl
add
int
or
rclb
xchg
int
add
inc
pop
cwtl
lcall
popf
aaa
ficoms
pop
mov
jbe
leave
jbe
xchg
aaa
ficoms
or
leave
jbe
dec
mov
cmc
dec
lahf
xchg
and
cmp
xchg
and
jbe
int
sbb
shlb
jbe
int
sbb
add
xor
pop
xchg
fs
popf
int
and
out
int
movsl
das
inc
add
out
int
movsl
adc
cmpsb
mov
shr
sub
pop
push
aad
nop
int
or
int
xor
xchg
dec
iret
xchg
lods
bound
stc
jno
cwtl
add
sbb
jbe
add
mov
cmc
add
adc
in
jo
jbe
jo
stos
clc
add
or
int
sbb
lea
outsb
adc
jbe
leave
addb
lods
int
and
outsb
test
jbe
int
and
outsb
mov
jbe
int
and
outsb
dec
int
and
insb
and
addb
sbb
lea
or
and
xorb
or
int
std
stos
test
lret
rcrb
xchg
int
int
dec
adc
cmp
cwtl
lcall
push
mov
jbe
inc
and
dec
addb
ficoms
pop
mov
jbe
leave
jbe
xchg
aaa
ficoms
or
int
mov
jbe
int
cmc
int
mov
or
or
pop
jle
addb
mov
insl
mov
sarl
xor
mov
nop
xchg
iret
sahf
int
mov
aad
or
mov
jno
int
mov
leave
xchg
mov
ficomps
or
pop
mov
or
lret
mov
or
insb
add
add
push
add
add
outsb
add
add
add
inc
mov
add
iret
outsb
xor
add
add
xor
add
mov
add
int
mov
add
int
in
int
adc
inc
jge
shr
xchg
int
in
int
adc
cmpsb
mov
cmp
shl
sub
in
outsb
iret
aam
mov
int
das
mov
cmp
sti
and
shl
das
push
adc
int3
test
lea
inc
jecxz
shl
xchg
int
mov
mov
push
psrlq
sub
popa
int
in
int
adc
inc
jge
shr
xchg
int
in
int
adc
leave
cmp
shl
sub
in
outsb
iret
aam
add
sbb
mov
sti
and
shl
das
push
adc
int3
test
incl
add
lea
inc
jecxz
shl
xchg
int
mov
mov
push
psrlq
sub
popa
int
in
int
adc
inc
jge
shr
xchg
int
in
int
adc
leave
cmp
shl
sub
in
je
push
jbe
add
add
sbb
mov
sti
and
shl
das
push
adc
int3
test
lea
inc
jecxz
shl
xchg
int
mov
mov
push
psrlq
sub
mov
add
or
int
stc
pop
inc
pop
inc
xchg
or
daa
or
int
mov
add
int
mov
mov
xor
pusha
addl
addb
mov
add
int
mov
add
pop
es
push
std
incl
add
xor
push
incl
add
xor
push
addb
add
or
xchg
add
add
jbe
pop
dec
xor
iret
test
add
add
bound
add
pop
push
xor
iret
mov
add
add
pushf
mov
add
int
mov
add
pop
add
addb
add
cmp
adc
cmpb
add
mov
addb
add
pop
lcall
adc
add
int
xor
call
repnz
or
adc
jbe
int
dec
cmp
mov
shl
sub
leave
add
add
add
incl
add
jbe
int
xor
jns
mov
shl
sub
jo
push
stc
incl
add
jbe
int
cmp
push
sbb
add
inc
lret
fwait
xor
adc
icebp
or
int
stc
push
insl
aam
adc
or
fmull
int
dec
int
dec
sar
setl
icebp
shr
sub
jmp
push
adc
xchg
cmc
int
and
dec
das
push
popa
test
int
dec
cmp
shr
xchg
cmp
shr
sub
int
cmc
int
in
addb
int
dec
cmp
shr
xchg
cmp
shr
sub
int
cmc
int
add
pop
xor
mov
add
int
mov
add
pop
es
iret
sub
add
pop
daa
xor
iret
xor
add
add
test
add
add
xor
iret
cmp
add
add
mov
or
cmp
add
pop
fwait
xor
iret
inc
add
add
or
or
inc
add
add
xor
iret
dec
add
add
pop
addb
add
pop
cmp
addb
add
jns
movsl
cmpsl
pop
pop
adc
iret
push
add
add
pop
mov
add
jns
fisttps
jbe
inc
jns
loope
pop
fcom
addb
add
jns
lods
push
pop
jnp
addb
add
jns
repnz
ljmp
mov
add
jns
in
int
xor
xchg
xor
icebp
shr
xchg
shr
sub
in
xchg
int
xor
out
cmp
stc
shr
sub
xor
das
pop
mov
int
xor
out
cmp
stc
shr
sub
int
stc
add
adcl
fwait
addb
movsw
int
xor
lea
cmp
sub
repz
push
jecxz
stc
xchg
int
xor
out
cmp
xchg
shr
sub
add
mov
stc
inc
adc
int
xor
icebp
shr
xchg
shr
sub
or
adc
lea
dec
cmp
cmp
shr
sub
jmp
push
adc
xchg
movsl
or
add
xor
mov
rcl
int
mov
loopne
mov
leave
test
loopne
mov
leave
loop
or
cmp
cli
mov
add
cld
mov
add
cli
mov
loopne
mov
leave
test
loopne
mov
leave
loop
or
popa
mov
or
or
int
dec
cmp
cmp
shr
sub
jmp
push
adc
xchg
dec
int
dec
cmp
mov
jmp
mov
or
int
dec
int
dec
cmp
cmp
shr
xchg
shr
sub
int
dec
iret
mov
out
shl
xchg
cmp
shr
sub
das
mov
or
int
dec
int
dec
cmp
shr
sub
psrlq
xchg
push
adc
xchg
dec
int
dec
cmp
stc
shr
sub
mov
incl
add
lea
dec
cmp
shr
sub
psrlq
xchg
push
adc
xchg
dec
int
dec
cmp
stc
shr
sub
mov
incl
add
lea
int
xor
icebp
cmp
shr
sub
jmp
push
adc
xchg
xor
out
cmp
xchg
shr
sub
xchg
or
adc
lea
dec
int
mov
icebp
cmp
shr
xchg
shr
sub
iret
push
nop
incl
add
add
add
jbe
mov
int
xor
xchg
xor
cmp
stos
cmp
shr
xchg
shr
sub
or
add
jbe
int
dec
cmp
mov
repnz
aam
iret
push
adc
int
xor
lea
cmp
mov
repnz
jo
push
and
add
jo
jbe
rolb
int
dec
cmp
lock
mov
mov
push
ror
iret
movsb
incl
add
int3
push
sbb
jbe
mov
int
xor
xchg
xor
psrlq
xchg
add
call
ljmp
sbb
sub
xor
push
jo
add
iret
mov
mov
add
pop
adc
push
bound
add
int
mov
add
int
mov
add
add
sub
jge
or
mov
mov
mov
add
add
pusha
mov
add
iret
mov
or
les
add
int
mov
add
iret
loopne
pop
add
iret
enter
iret
mov
mov
add
mov
add
add
stc
mov
add
int
pop
leave
xor
iret
addb
add
jge
or
aam
add
int
mov
add
cmp
or
add
add
addr16
add
leave
push
lods
add
add
xor
fadds
add
jae
jno
mov
int
xor
xchg
xor
call
repnz
jns
mov
lea
add
cmp
repz
push
jecxz
lret
add
sbb
lret
cmp
inc
cli
das
or
addb
das
add
addb
xchg
xor
psrlq
xchg
add
call
ljmp
aad
cmp
add
lea
int
xor
psrlq
xchg
add
call
jmp
jge
int
lea
add
mov
repnz
mov
jecxz
lea
int
xor
psrlq
xchg
add
call
jmp
jge
or
add
lea
int
xor
sti
call
jmp
shr
sub
int
xor
add
cmp
repz
push
jecxz
lret
add
sbb
lret
cmp
inc
cli
das
or
pop
pop
add
add
cmpsb
mov
jne
jbe
int
mov
or
insb
test
jbe
int
jge
inc
jge
shr
xchg
int
jne
xchg
jge
leave
cmp
push
icebp
int
cmc
bound
jo
push
cmc
incl
add
repnz
int
in
int
adc
inc
jge
shr
xchg
int
in
int
adc
repnz
iret
cmc
incl
add
mov
leave
cmp
push
rolb
das
push
push
addb
jbe
ficoms
pop
mov
jbe
or
int
xchg
int
popf
das
inc
jge
shr
xchg
int
xchg
int
popf
cmp
cmp
push
icebp
bound
xor
repnz
pop
xor
push
repnz
int
xchg
int
popf
das
inc
jge
shr
xchg
int
xchg
int
popf
cmp
cmp
push
icebp
bound
pop
xor
repnz
pop
sub
xchg
repnz
int
xor
mov
jle
xchg
lea
inc
rcll
jbe
int
icebp
cmp
shrl
ror
lea
push
jge
dec
int
popf
addl
jbe
int
xor
cmp
cmc
add
sub
and
sbb
adc
test
add
or
adc
add
int
cmp
fcoml
aam
int
cmp
fsubl
aam
int
adc
add
int
cmp
outsb
sbb
push
add
cmp
cmc
mov
stos
test
lret
shlb
xchg
int
jno
cwtl
leave
jbe
dec
and
inc
and
int
std
sar
shll
xchg
sti
sarl
push
jns
mov
int
std
aam
int
std
cmp
cmp
sarl
push
jns
dec
inc
adc
pop
int
xor
jbe
cmp
push
add
push
pop
lret
or
das
push
fcmovbe
dec
add
adcl
fwait
addb
dec
adc
in
addb
lea
lret
or
js
clc
orb
int
stc
cmp
int
stc
add
ljmp
std
cmp
int
std
cmp
shl
sub
mov
lret
rorb
int
add
leave
jbe
dec
and
xchg
jbe
or
int
adc
add
lea
addl
lea
std
cwtl
lcall
jns
mov
shl
sub
or
int
std
int
std
cmp
mov
repnz
or
int
mov
insb
jo
mov
int
mov
insb
pop
int
mov
push
outsb
xchg
int
mov
sbb
insb
pop
int
mov
jle
jl
icebp
sub
jbe
int
pop
xchg
in
xchg
insb
xchg
or
int
std
int
std
cmp
lock
push
rorl
jbe
int
std
int
std
cmp
lock
sub
mov
jbe
int
std
int
std
cmp
cmp
repnz
mov
lea
or
jbe
cmp
xchg
and
imul
xchg
int
std
cmp
lock
push
rorl
jbe
int
mov
jbe
add
popf
add
dec
int
mov
neg
add
or
int
adc
insl
aam
int
popf
or
int
movsl
int
dec
xor
or
int
adc
lea
dec
int
movsl
inc
jge
sbb
jbe
int
dec
int
adc
outsb
mov
lea
test
xchg
jbe
inc
and
cmp
xchg
and
or
iret
jbe
or
iret
jbe
or
iret
jbe
or
int
std
int
std
cmp
lock
push
rorl
jbe
jmp
xchg
and
xchg
popf
iret
jbe
jo
xlat
filds
add
jbe
int
stc
cmp
lock
sub
mov
jbe
or
int
xchg
sarl
in
push
popf
or
int
stc
cmp
shl
sub
jns
mov
stc
int
stc
cmp
cmp
shr
xchg
shr
sub
xchg
int
movsl
or
sub
jbe
int
stc
cmp
lock
push
shll
dec
iret
jbe
jo
sti
std
add
int
std
int
std
cmp
lock
sub
mov
lea
int
std
int
std
cmp
lock
push
shll
dec
iret
jbe
jo
mov
jbe
int
cmc
int
int
cmp
cmp
repnz
mov
je
ror
std
int
std
cmp
cmp
shr
xchg
shr
sub
pop
insl
push
adc
das
add
int
adc
lea
int
int
cmp
cmp
repnz
mov
je
ror
std
int
std
cmp
cmp
shr
xchg
shr
sub
pop
insl
push
adc
das
add
int
adc
lea
lock
repnz
mov
je
ror
std
int
std
cmp
cmp
shr
xchg
shr
sub
pop
insl
push
adc
das
add
int
in
int
in
int
int
cmp
cmp
repnz
mov
je
ror
std
int
std
cmp
cmp
shr
xchg
shr
sub
pop
insl
push
adc
das
add
int
adc
lea
int
int
cmp
shl
sub
jns
mov
je
ror
cmc
int
int
cmc
int
cmp
shr
xchg
cmp
shr
sub
lret
rolb
int
adc
mov
xchg
adc
and
psrlq
xchg
cmp
shr
sub
lret
rorb
int
cmc
int
int
cmc
int
cmp
cmp
shr
xchg
shr
sub
lret
push
pusha
jge
push
mov
jbe
int
adc
mov
cmpb
shl
sub
jns
mov
je
ror
lea
int
int
adc
and
psrlq
xchg
cmp
shr
sub
lret
rolb
int
in
int
int
in
int
cmp
shr
xchg
cmp
shr
sub
lret
rorb
int
adc
mov
xchg
adc
and
jmp
shr
sub
lret
push
pusha
jge
push
cmc
addb
in
int
int
cmp
shl
sub
jns
mov
je
ror
lea
int
cmp
shr
xchg
cmp
shr
sub
lret
rolb
int
cmc
int
int
cmc
int
cmp
shr
xchg
cmp
shr
sub
lret
rorb
int
adc
mov
xchg
adc
and
jmp
shr
sub
lret
push
pusha
jge
push
add
in
int
in
int
int
cmp
shl
sub
jns
mov
je
ror
cmc
int
int
cmc
int
cmp
shr
xchg
cmp
shr
sub
lret
rolb
int
adc
mov
xchg
adc
and
psrlq
xchg
cmp
shr
sub
lret
rorb
int
in
int
int
in
int
cmp
cmp
shr
xchg
shr
sub
lret
push
pusha
jge
xor
jbe
jo
outsl
lods
add
int
pop
inc
rcl
push
int
std
int
std
cmp
cmp
repnz
mov
jbe
int
stc
int
stc
int
stc
int
stc
cmp
xchg
shrl
cmpsb
gs
xchg
cmp
add
std
add
std
shr
sub
hlt
dec
and
int
std
cmp
cmp
repnz
mov
lea
push
std
add
int
std
int
std
cmp
lock
sub
mov
lea
int
stc
int
stc
cmp
lock
push
shr
jle
addb
popf
iret
jbe
jo
jge
add
int
std
int
std
cmp
lock
sub
mov
lea
int
stc
int
stc
cmp
lock
sub
mov
lea
int
stc
int
stc
cmp
lock
push
shll
iret
jbe
jo
das
cli
add
int
std
int
std
cmp
lock
push
shll
iret
jbe
jo
sti
stc
add
int
popf
xchg
or
add
cmp
jbe
xchg
jo
push
fildl
add
jbe
int
std
cmp
lock
sub
mov
lea
int
stc
int
stc
cmp
lock
sub
mov
lea
int
stc
int
stc
cmp
mov
repnz
jo
cmp
jbe
jo
add
jbe
int
std
cmp
mov
repnz
jo
cmp
jbe
jo
jb
add
int
inc
int
inc
cmp
cmp
shr
xchg
shrl
lea
addl
jo
cmp
lea
add
jbe
int
cmp
cmp
jbe
int
stc
int
stc
cmp
shl
sub
jns
mov
lea
std
int
std
cmp
cmp
shr
xchg
shr
sub
xchg
or
cli
add
int
mov
xor
in
adc
cwtl
lcall
add
xchg
mov
or
dec
int
mov
cmpsb
dec
or
pop
jnp
ficoms
cmp
pop
mov
adc
inc
sti
xchg
shr
sub
clc
addb
cmp
push
clc
int
sbb
aad
sbb
das
adc
je
push
ja
xchg
shr
addl
xchg
mov
dec
int
mov
dec
int
mov
cmpsb
dec
cmp
cmp
das
inc
sti
xchg
shr
sub
clc
addb
aad
out
xchg
push
clc
int
xor
cmpsb
adc
popf
int
xor
cli
int
adc
inc
loope
shrl
cli
push
addb
push
popf
int
mov
bswap
dec
int
xor
cmpsb
adc
lods
std
add
std
shr
sub
ficoml
aaa
ficoms
adc
mov
clc
aam
ficoms
adc
mov
leave
sbb
push
jge
cltd
pop
mov
add
aaa
ficoms
cmp
adc
out
ficoms
sbb
das
adc
das
stos
push
in
xchg
imul
and
addb
dec
int
mov
out
cmp
pop
jnp
ficoms
cmp
das
inc
sti
xchg
shr
xchg
cmp
shl
sub
cmc
push
fxch
out
imul
cmpsb
and
and
cmpsb
adc
xchg
fiaddl
aam
add
xor
and
sub
std
add
sub
add
or
or
mov
out
cmp
cmp
das
inc
add
out
int
mov
cmpsb
dec
shr
sub
dec
cmc
cmp
push
clc
int
xor
cli
push
aad
cmpsb
adc
popf
int
int
xor
or
cmpsb
adc
inc
jge
shr
sub
fst
jmp
adc
addb
lock
icebp
sbb
and
mov
cmpsl
cmp
sbb
jbe
int
dec
int
mov
dec
adc
mov
jnp
ficoms
das
inc
jge
int
cmp
cmp
sarl
jmp
adc
addb
divps
test
aam
adc
gs
jo
mov
ss
das
sbb
mov
test
lret
shrb
xchg
int
add
dec
int
mov
lea
jge
shr
xchg
int
mov
xchg
dec
cwtl
shl
sub
lea
cmpsb
mov
cmp
push
rorb
or
xor
mov
jbe
int
xor
addb
int
adc
adc
test
nop
jo
add
or
lea
jge
shr
xchg
int
mov
xchg
dec
add
and
jns
ficoml
or
iret
jbe
jo
add
sbb
repnz
adc
xor
dec
add
mov
int
mov
lea
jge
shr
xchg
int
mov
xchg
dec
cmp
fcmovbe
repnz
das
push
rolb
aam
int
xor
lea
inc
jge
shr
xchg
int
xor
xchg
adc
jns
fcmovbe
repnz
lea
shrb
shll
or
adcb
lcall
xchg
inc
int
and
mov
jnp
ficoms
inc
icebp
das
or
addb
test
jnp
inc
hlt
mov
das
add
adc
jno
ficoms
mov
das
add
adc
xchg
aaa
ficoms
mov
das
add
adc
cmpsb
aaa
ficoms
test
aam
adc
scas
aaa
ficoms
mov
das
add
adc
mov
ficoms
das
push
into
addl
sub
addl
adc
xor
dec
add
mov
jmp
addl
mov
das
add
adc
xchg
aaa
ficoms
mov
das
add
adc
aaa
ficoms
test
aam
adc
fidivs
ficoms
mov
das
add
adc
out
ficoms
in
iret
int
mov
dec
int
mov
cmpsb
dec
cmp
cmp
das
inc
sti
xchg
shr
sub
clc
addb
cmp
push
clc
int
mov
int
dec
xchg
sbb
or
int
mov
dec
int
mov
cmpsb
dec
cmp
cmp
das
inc
sti
xchg
shr
sub
fst
out
xchg
adc
addb
clc
ds
xor
adc
xchg
cmp
inc
int
xor
adc
xchg
xor
adc
out
int
adc
adc
jecxz
inc
sti
xchg
shr
sub
fstl
clc
addb
push
clc
int
cmp
aad
cmpsb
inc
cmp
cmp
lea
loope
cmp
shrl
subb
lea
shr
xchg
push
popf
xchg
int
adc
hlt
add
std
shr
sub
insl
adc
aam
ficoms
adc
mov
out
int
inc
add
std
adc
aam
ficoms
adc
mov
lock
and
aad
rclb
or
and
not
aaa
ficoms
cwtl
add
xor
sub
add
sbb
adc
xor
dec
add
mov
or
arpl
sarb
int
mov
dec
int
mov
cmpsb
dec
cmp
cmp
das
inc
sti
xchg
shr
sub
clc
addb
cmp
push
aad
clc
int
xor
cmpsb
adc
fsts
or
int
cmp
inc
int
xor
adc
xchg
mov
dec
int
mov
dec
int
mov
cmpsb
dec
cmp
cmp
das
inc
sti
xchg
shr
sub
clc
addb
aad
out
xchg
push
clc
int
xor
cmpsb
adc
cli
cmp
lea
inc
loope
cmp
push
cli
shrl
subb
push
popf
int
cmp
lea
int
cmp
hlt
int
inc
adc
mov
jnp
ficoms
das
inc
jge
shr
sub
jmp
cmp
adc
addb
lds
lea
out
int
adc
repnz
add
std
adc
aam
ficoms
adc
aam
ficoms
shr
sub
insl
adc
mov
hlt
mov
lock
jmp
incl
add
sbb
pop
aaa
ficoms
or
and
jbe
xchg
aaa
ficoms
or
int
adc
cmc
lcall
xchg
int
adc
out
jo
sti
cmpsb
mov
jno
xchg
std
int
dec
or
iret
jbe
add
mov
mov
dec
add
in
add
mov
adc
stos
or
int
std
test
rorb
add
stc
add
inc
cwtl
leave
je
xor
addb
addb
xor
xor
sub
and
sbb
adc
xor
dec
add
mov
int
mov
je
test
je
xor
insl
das
add
int
xor
push
insl
das
add
add
xor
add
xor
add
xor
int
xor
add
int
xor
int
xor
int
xor
iret
jbe
or
int
xor
xchg
or
int
xor
int
xor
int
xor
int
and
xor
aam
mov
add
sbb
or
xor
push
int
fs
xchg
sbb
push
int
xchg
pop
sbb
add
addl
dec
int
xor
xchg
or
or
xor
push
insl
das
push
cwtl
addl
addl
je
test
add
orb
xor
int
xor
int
or
int
or
int
xor
int
int3
addl
dec
int
xor
int
xor
int
popf
addl
or
imul
jns
add
sarl
push
jge
mov
leave
je
mov
je
xor
insl
aam
int
xor
add
adc
jl
cmp
and
add
xor
add
xor
add
xor
add
xor
int
xor
add
in
cmp
aam
and
aam
and
aam
and
je
push
add
in
and
aam
adc
je
cmp
icebp
in
xchg
je
xor
icebp
or
int
xor
push
insl
aam
int
xor
leave
add
and
mov
mov
int
movsl
addl
and
mov
mov
cmp
add
shl
sub
mov
mov
inc
rcl
and
je
test
mov
int
movsl
addl
addb
cmp
push
iret
jbe
or
int
xor
int
xor
int
in
addb
je
test
add
addl
or
or
adc
mov
int
in
addb
mov
sub
lds
gs
popa
ja
jne
outsl
insl
jne
add
jno
jb
bound
dec
popa
addr16
addr16
js
bound
insb
outsl
add
je
jo
outsl
outsl
push
gs
outsl
jae
jne
imul
jae
dec
jne
imul
gs
outsl
jbe
jae
insb
push
gs
push
outsl
data16
popa
jns
gs
jo
outsl
insb
insb
jo
imul
gs
jne
jae
addr16
jo
gs
outsl
ja
add
outsb
je
gs
popa
je
outsl
jo
insb
fs
arpl
dec
outsl
imul
push
imul
add
je
gs
insb
jne
add
imul
insl
jo
outsb
outsl
add
jae
outsb
add
push
add
add
arpl
push
add
add
push
add
js
jns
push
add
jb
arpl
add
outsl
add
dec
add
outsb
add
je
outsl
add
outsl
add
popa
add
add
dec
add
outsb
add
add
outsb
add
popa
add
add
inc
add
jne
jae
je
add
push
add
jb
jns
add
push
add
popa
add
push
add
insb
add
je
imul
add
add
jo
add
jns
je
push
add
outsl
add
push
add
jo
jns
add
bound
outsl
add
inc
add
popa
add
add
jae
add
add
or
add
xor
add
push
adc
xchg
adc
mov
and
adc
add
adc
add
adc
lcall
add
or
add
add
adc
or
pop
adc
out
adc
scas
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addl
mov
inc
add
addl
mov
addl
scas
addl
mov
inc
add
addl
mov
adc
pop
cmp
add
adc
jbe
adc
or
add
sbb
add
sub
add
adc
movsb
inc
adc
jecxz
adc
shlb
push
push
adc
pop
inc
adc
xchg
rcrl
add
je
add
adc
fldcw
add
pop
adc
nop
push
adc
scas
push
adc
hlt
jbe
add
pop
adc
mov
data16
pop
dec
adc
mov
adc
sub
adc
xchg
cmp
add
addl
into
addl
addl
fiadds
inc
add
addl
out
addl
testb
add
addl
push
adc
bound
adc
and
inc
adc
ss
adc
leave
jno
add
cmp
add
inc
adc
mov
pop
adc
dec
sub
add
xor
add
adc
jl
adc
xchg
jle
add
data16
inc
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
imul
mov
adc
addr16
add
add
cmp
add
adc
jecxz
adc
push
or
add
adc
push
dec
adc
mov
adc
sarl
add
add
adc
test
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addb
addl
add
je
dec
add
add
add
add
add
add
add
add
add
add
add
add
add
add
xor
add
push
test
add
add
jl
add
nop
test
add
add
mov
test
add
test
add
test
add
add
adc
add
xchg
add
xchg
add
add
pop
xchg
add
add
add
add
lahf
add
addb
add
xchg
xchg
add
xchg
add
xchg
add
xchg
add
xchg
add
xchg
add
xchg
add
xchg
add
add
cmp
add
pop
xchg
add
add
jb
add
test
add
cmpsb
xchg
add
add
loop
add
xacquire
add
xchg
add
mov
add
add
mov
add
add
add
jo
add
orb
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
add
xor
add
inc
mov
add
add
push
add
jp
add
mov
add
stos
mov
add
add
loop
add
add
add
cld
mov
add
mov
add
mov
add
mov
add
add
add
orb
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
add
add
je
add
mov
add
mov
add
mov
add
mov
add
mov
add
mov
add
add
mov
insb
imul
je
add
inc
add
je
dec
inc
inc
outsl
insb
outsl
jb
popa
bound
add
add
jb
popa
insb
imul
arpl
add
je
jb
arpl
imul
xchg
add
gs
je
inc
dec
inc
push
arpl
outsb
add
popl
inc
jb
popa
je
inc
inc
push
add
add
je
imul
je
js
add
add
je
arpl
outsb
add
fadds
push
gs
imul
add
inc
gs
bound
arpl
add
popa
je
inc
outsl
outsb
je
outsb
imul
xchg
inc
gs
gs
inc
js
outsb
je
outsl
imul
mov
popa
je
dec
inc
push
add
add
popa
jb
inc
outsl
arpl
add
push
gs
imul
addr16
js
add
outsl
dec
push
add
std
add
je
gs
inc
outsl
insb
outsl
jb
add
add
je
push
fs
xor
push
add
add
jne
inc
outsl
outsb
je
popa
insl
imul
add
je
dec
inc
imul
xor
fs
insb
add
inc
inc
push
push
xor
cs
insb
add
xchg
inc
gs
insb
addr16
jb
arpl
add
je
outsb
jne
je
insl
push
arpl
add
imul
je
gs
add
add
arpl
insb
addr16
jne
je
outsb
add
addb
push
outsb
outsl
ja
jae
outsb
arpl
add
imul
popa
jae
push
add
xchg
add
outsb
jae
popa
je
inc
arpl
insb
gs
je
jb
add
add
fs
imul
add
je
popa
jb
je
outsl
jae
scas
add
ja
fs
pop
add
gs
je
inc
imul
jb
insl
inc
add
out
inc
jb
insl
gs
arpl
add
je
jo
popa
je
push
arpl
add
je
inc
add
push
imul
outsl
arpl
add
add
imul
push
add
je
outsl
jb
outsb
jo
je
fs
add
hlt
add
jae
push
push
dec
gs
popa
addr16
add
xchg
add
outsb
jae
popa
je
dec
gs
popa
add
test
dec
outsb
jae
jb
dec
outsb
jne
je
insl
push
add
add
outsb
fs
imul
push
add
ja
gs
inc
add
add
je
insb
popa
jae
dec
outsl
outsb
addr16
add
imul
add
cmp
inc
gs
outsb
jne
je
imul
add
outsb
fs
gs
popa
addr16
imul
add
push
jo
popa
dec
jne
gs
arpl
or
inc
imul
jae
push
outsb
imul
outsb
fs
gs
popa
addr16
add
popf
add
insb
outsl
addr16
outsl
js
popa
jb
insl
push
add
push
gs
outsl
arpl
add
stos
add
fs
imul
add
je
insb
popa
jae
dec
outsb
outsw
inc
js
add
popa
insb
imul
add
inc
jb
popa
je
inc
imul
jb
insl
push
add
or
inc
gs
inc
inc
js
repz
je
popa
jb
je
outsl
jae
xchg
add
je
outsl
jns
arpl
insb
gs
je
jb
popa
bound
ret
jbe
jo
imul
lds
dec
jae
push
jo
popa
push
add
sti
add
je
insb
popa
jae
dec
popa
insl
gs
add
push
gs
outsb
jne
gs
jne
je
je
insl
add
pop
add
je
jns
inc
outsl
insb
outsl
jb
add
add
push
gs
ja
imul
cmp
arpl
popa
imul
outsb
add
xor
jb
outsl
dec
gs
push
add
jnp
push
push
jb
outsl
jb
add
add
je
arpl
gs
imul
add
arpl
outsl
jo
jo
outsb
jne
add
add
je
jae
outsb
arpl
jns
je
je
add
xchg
add
je
outsl
jns
arpl
add
inc
push
xor
cs
insb
add
add
addr16
gs
gs
push
popa
insb
jne
inc
add
push
gs
popa
insb
jne
inc
js
add
pop
add
jns
je
gs
jb
jns
gs
popl
push
gs
gs
popa
insb
jne
inc
js
add
das
add
je
data16
outsl
outsl
je
outsl
outsb
imul
je
jae
add
push
gs
insb
outsl
jae
dec
gs
inc
fs
jo
xor
cs
insb
add
arpl
cs
add
bound
push
gs
insb
insb
outsl
arpl
sbb
inc
jb
outsl
jb
outsl
fs
mov
inc
outsl
insl
jo
jb
push
je
imul
add
jae
jb
jo
inc
add
adc
inc
jne
insb
imul
outsb
fs
add
push
gs
push
inc
data16
dec
popa
jae
add
add
fs
imul
add
sub
dec
outsl
arpl
push
imul
push
jns
je
insl
push
imul
insb
gs
imul
inc
gs
gs
inc
jb
je
arpl
push
arpl
outsb
add
add
gs
popa
outsb
fs
gs
outsl
jne
je
add
push
jne
jb
push
gs
outsl
jb
popa
outsb
arpl
outsl
jne
je
jb
testl
imul
and
insl
push
gs
jne
arpl
jns
gs
add
lcall
insb
inc
gs
je
insl
dec
popa
insl
gs
add
loop
inc
jb
popa
je
dec
popa
insl
gs
imul
add
je
outsl
arpl
gs
outsb
outsw
inc
add
lar
je
outsl
fs
gs
imul
add
pop
add
popa
insb
push
imul
insb
gs
jb
outsl
insl
insl
inc
jb
popa
imul
pusha
add
outsb
fs
imul
gs
add
push
add
je
jne
bound
inc
outsl
jb
popa
je
add
dec
inc
push
dec
inc
dec
xor
cs
insb
