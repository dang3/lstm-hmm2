push
mov
sub
xorl
push
subl
push
xor
andl
inc
push
sbbl
push
adcl
call
test
movl
je
xor
movl
jmp
push
sbb
mov
push
andl
push
sbbl
call
movl
test
movl
jne
push
adcl
push
call
sbbl
test
jne
xorl
push
adcl
push
push
call
addl
test
movl
je
xor
movl
jmp
sbb
movl
and
mov
mov
sub
mov
mov
sub
movl
sbb
lea
mov
adc
lea
xor
or
and
mov
sbb
mov
mov
mov
sub
sub
mov
mov
mov
movzbl
add
mov
xor
andl
mov
add
mov
movl
mov
cmp
movl
jne
mov
mov
mov
xor
add
addl
mov
andl
jmp
xor
add
inc
mov
cmpl
jae
cmpl
jne
pushl
push
call
cmpl
jne
xor
add
inc
mov
jmp
mov
andl
mov
inc
mov
cmpl
jne
push
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
and
xor
movzbl
sub
mov
add
movl
cmpl
je
cmpl
jne
push
push
call
mov
dec
mov
jmp
mov
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
pushl
call
cmpl
jb
mov
mov
adcl
mov
andl
xor
or
inc
mov
cmpl
jne
pushl
push
pushl
call
cmpl
jne
xor
xor
inc
mov
cmpl
jb
movl
cmpl
je
cmpl
jne
call
xor
or
dec
mov
jmp
sub
push
or
mov
andl
mov
inc
mov
cmpl
jne
call
cmpl
jne
xor
xor
inc
mov
cmpl
jb
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
push
pushl
push
pushl
call
jmp
adcl
mov
sub
mov
movl
cmpl
je
cmpl
jne
pushl
push
call
cmpl
jne
mov
dec
mov
xor
or
dec
mov
jmp
mov
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jne
push
push
push
pushl
call
jmp
mov
xor
mov
movl
movl
andl
mov
mov
xor
or
and
mov
sbbl
xor
andl
xor
subl
add
sbb
mov
xorl
xor
xor
orl
add
lea
notl
mov
movl
cmp
ja
jmp
mov
mov
sub
and
mov
mov
subl
xor
lea
orl
push
subl
mov
andl
xor
xorl
lea
orl
push
orl
mov
andl
pushl
xorl
call
addl
mov
or
mov
neg
xor
sub
lea
mov
xor
mov
xor
addl
xor
adcl
add
mov
xor
lea
movl
mov
movl
cmp
movl
jbe
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jb
mov
sbb
mov
andl
mov
inc
mov
cmpl
jne
pushl
push
push
push
push
pushl
call
cmpl
jb
mov
sub
mov
andl
mov
inc
mov
cmpl
jne
call
cmpl
jb
add
mov
orl
mov
sub
negl
xor
movl
mov
mov
movl
mov
movl
cmp
jne
xorl
lea
adcl
mov
xorl
lea
subl
mov
mov
test
movl
je
xorl
mov
mov
mov
adc
mov
not
mov
mov
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jb
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
jmp
mov
negl
mov
sbb
cltd
adcl
mov
movl
cmpl
je
cmpl
jne
pushl
push
push
call
xor
or
dec
mov
jmp
movl
cmpl
je
cmpl
jne
push
push
call
xor
xor
dec
mov
jmp
and
mov
add
inc
adc
movl
cmpl
je
cmpl
jne
pushl
push
pushl
call
xor
xor
dec
mov
jmp
movl
cmpl
je
cmpl
jne
push
push
pushl
call
mov
dec
mov
jmp
andl
sbb
xor
xor
mov
adc
mov
mov
mov
xor
dec
add
mov
mov
adcl
orl
xor
addl
mov
mov
xor
mov
movl
cmp
jne
movl
mov
cmp
je
mov
mov
mov
xor
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
xor
mov
mov
mov
add
jmp
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
pushl
mov
pushl
add
mov
mov
pushl
call
mov
mov
mov
jmp
mov
mov
xor
add
cmp
jne
mov
mov
mov
xor
add
cmp
jne
push
mov
xor
add
push
push
pushl
pushl
call
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
mov
movl
mov
xor
add
mov
mov
mov
mov
mov
mov
push
pop
sub
add
movl
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
lea
mov
mov
xor
add
mov
lea
push
mov
xor
add
push
mov
push
pushl
call
mov
mov
mov
mov
xor
mov
add
jmp
lea
mov
mov
sub
mov
mov
mov
mov
movl
mov
movl
mov
xor
add
mov
mov
xor
add
mov
movl
movl
mov
mov
xor
add
cmp
je
mov
xor
mov
sub
add
mov
mov
xor
add
imul
cmp
ja
mov
mov
mov
sub
xor
xor
add
div
mov
mov
mov
xor
add
cmp
jbe
mov
xor
add
mov
mov
mov
xor
add
imul
mov
mov
mov
xor
add
cmp
je
mov
mov
mov
add
movl
mov
mov
mov
movl
movl
mov
mov
xor
add
jmp
mov
mov
xor
add
imul
mov
movb
mov
mov
xor
xor
add
add
imul
add
mov
mov
mov
cmp
jb
mov
mov
xor
add
imul
mov
xor
add
or
mov
xor
add
mov
xor
add
mov
lea
jmp
mov
mov
xor
lea
mov
jmp
mov
mov
xor
lea
lea
xor
cmp
jne
mov
mov
mov
xor
mov
xor
mov
xor
mov
mov
xor
mov
mov
mov
xor
add
mov
mov
xor
add
mov
lea
mov
lea
mov
mov
test
je
movl
movl
movl
movl
call
mov
mov
mov
mov
mov
mov
mov
mov
cltd
mov
mov
add
adc
andl
xor
mov
mov
mov
mov
xor
add
mov
adcl
xor
mov
mov
xor
mov
cmp
jne
mov
cmp
je
mov
mov
mov
xor
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
xor
mov
mov
mov
add
mov
mov
mov
xor
mov
add
xor
add
adc
xor
xor
xor
add
adc
xor
xor
cmp
jne
cmp
jne
mov
mov
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
leave
ret
xor
andl
inc
ret
push
mov
sub
andl
mov
inc
mov
cmpl
jne
call
cmpl
jne
mov
inc
mov
cmpl
jb
movl
cmpl
je
cmpl
jne
call
mov
dec
mov
jmp
movzbl
sbb
mov
andl
mov
mov
sub
mov
movl
mov
andl
mov
inc
mov
cmpl
jne
push
push
push
push
push
push
push
call
cmpl
jb
push
mov
xor
movl
cmpl
je
cmpl
jne
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
and
mov
push
mov
add
cmp
je
mov
mov
xor
xor
add
add
adc
xor
mov
push
xor
xor
mov
add
adc
xor
xor
cmp
jne
cmp
je
jmp
mov
mov
mov
xor
add
mov
imul
mov
xor
add
mov
mov
mov
mov
xor
xor
add
adc
lea
xor
xor
xor
mov
add
adc
xor
xor
cmp
jne
cmp
jne
mov
pop
pop
pop
leave
ret
push
mov
push
and
movl
adc
mov
addl
mov
add
adcl
xor
movl
cmp
movl
jne
movl
cmpl
je
cmpl
jne
push
push
pushl
pushl
call
mov
dec
mov
jmp
mov
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
push
push
call
jmp
mov
add
mov
mov
mov
xor
push
mov
mov
add
cmp
pop
je
mov
jmp
mov
xor
add
jmp
mov
xor
add
leave
ret
push
mov
sub
push
addl
push
adcl
push
adcl
push
lea
orl
push
push
subl
call
push
call
and
movl
andl
mov
inc
mov
cmpl
jne
pushl
push
push
push
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
movl
cmpl
je
cmpl
jne
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
movl
mov
andl
xor
add
inc
mov
cmpl
jne
push
call
cmpl
jb
mov
sbb
mov
xor
mov
or
mov
mov
decl
add
andl
mov
xor
xor
adc
mov
test
movl
je
sub
mov
mov
or
mov
andl
mov
imul
orl
mov
add
xchg
mov
orl
sub
mov
mov
or
mov
movl
cmpl
je
cmpl
jne
pushl
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
xor
add
mov
sbb
mov
xor
or
add
orl
mov
movl
cmpl
je
cmpl
jne
pushl
push
pushl
call
mov
dec
mov
jmp
sub
mov
mov
xor
xor
add
mov
sbb
mov
mov
xor
adc
add
mov
sub
movl
lea
orl
xor
subl
xor
cmp
movl
je
mov
andl
xor
add
movl
cmp
jne
addl
pushl
call
mov
mov
xor
xor
xor
add
sub
or
mov
add
xor
mov
add
movl
cmp
movl
je
addl
pushl
pushl
negl
call
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
xor
mov
adc
jmp
rcrl
mov
jno
sti
inc
scas
dec
imul
pop
jp
adc
and
imul
xor
fsub
push
dec
imul
pusha
insl
pop
iret
pop
dec
and
jg
jo
jg
mov
fdivr
push
jg
in
cmp
mov
mov
mulps
fldl
push
cli
sbb
imul
adc
cmpsb
jmp
enter
cli
js
arpl
cwtl
pop
mov
repz
cmp
jae
fisubrl
push
jecxz
mov
mov
in
push
dec
or
repz
rolb
push
push
movsl
stc
push
inc
in
mov
ror
pop
or
mov
sub
mov
dec
aad
ja
imul
dec
xor
sbb
imul
popl
jnp
jb
lret
sbb
mov
sbb
lahf
push
jo
mov
adc
idiv
xchg
cli
mov
sbb
aas
leave
rorb
add
into
in
sub
jmp
and
loope
jbe
xor
rcrb
cmpsb
xchg
sbbl
scas
pop
js
cwtl
movb
out
neg
into
mov
jne
sbb
ficompl
movsl
mov
or
in
dec
adc
cmp
add
ljmp
bound
iret
inc
push
or
rcll
lods
jmp
push
and
sbb
cwtl
mov
push
inc
not
push
into
and
scas
mov
and
aad
jmp
adc
inc
cmp
pop
shr
andps
mov
sbb
or
orl
ds
mov
jns
inc
pusha
adc
mov
xchg
xor
inc
pop
or
ror
xlat
xor
or
jnp
mov
add
cmc
insb
mov
repz
mov
mov
outsl
repz
adc
xor
cmc
mov
xor
out
inc
outsl
test
stc
jns
inc
lea
jno
jecxz
sub
inc
pop
popf
mov
bound
push
dec
inc
ljmp
pop
push
pushf
push
and
sbb
insb
and
and
int
in
pop
xor
xchg
idivl
pop
xor
in
test
sbb
jg
ja
or
xor
add
inc
jns
and
aad
jnp
xchg
imul
mov
scas
fsubrs
xchg
or
cmp
mov
fnstenv
push
inc
jg
pop
or
fnstcw
mov
adc
push
add
adc
and
in
xchg
inc
mov
ja
or
jns
js
jmp
mov
fldcw
adc
aas
icebp
jg
dec
jl
sbb
mov
pushf
xlat
inc
xor
cmpsl
out
addr16
jp
ret
mov
scas
jnp
adc
sub
sub
dec
xchg
and
inc
adc
dec
ret
mov
popf
adc
shr
fwait
mov
push
decl
loopne
out
ljmp
int3
mov
loope
jecxz
in
sub
int3
fsubs
popa
mov
nop
and
fsubr
icebp
rclb
pushf
lods
sbb
sbb
mov
int
int
aam
add
jg
or
test
mov
xor
xchg
arpl
push
mov
adc
out
fdivs
ja
popf
push
push
xrelease
sub
xor
pop
into
pusha
adc
jg
push
roll
mov
cmc
sti
sbb
jbe
test
imul
add
pushf
mov
mov
or
push
push
and
xchg
scas
cwtl
xchg
fwait
fwait
push
clc
shl
test
mov
in
push
pushf
stos
lods
push
xchg
sti
call
cmp
in
xchg
orl
cmc
test
int
push
jbe
mov
imulb
out
sbb
inc
call
ret
imull
xorl
popf
imull
aad
mov
xor
mov
push
pop
fcomps
dec
cmp
enter
test
ret
test
mulb
add
jne
pop
mov
mov
cmp
mov
xchg
sbb
mov
jae
sbb
add
and
xor
push
enter
pop
mov
divl
jl
clc
lea
mov
cmp
insb
xor
dec
loopne
and
ss
pop
fs
mov
inc
js
mov
inc
jbe,pn
and
in
push
xchg
test
rcl
cli
cmp
fildll
or
inc
jae
push
and
xor
and
int3
adc
mov
and
sub
arpl
mov
daa
push
addr16
stos
jbe
cmp
dec
pop
das
inc
inc
cmp
loopne
mov
xchg
push
ja
pusha
xchg
leave
sub
repz
mov
fucomi
mov
cmp
scas
jbe
out
in
mov
iret
aad
dec
in
push
dec
pop
popf
movswl
push
adc
cwtl
push
cmp
jl
loope
mov
cmp
mov
lret
je
in
daa
in
adcb
cmp
frstpm(287
fwait
cmp
mov
adc
out
out
push
pushf
insl
jg
sbb
sbb
dec
stos
pop
arpl
fbstp
pop
inc
hlt
jle
jns
int
cmp
popf
inc
mov
and
scas
mov
test
fwait
sti
xchg
xchg
adc
push
cld
mov
data16
pop
cwtl
sbb
js
movsb
mov
dec
scas
mov
jns
add
js
or
std
out
mov
stc
imul
loope
stos
into
imul
jne
adc
dec
shlb
aad
jle
ljmp
addl
mov
xor
rclb
pop
push
mov
out
rcrb
fsubr
or
bound
cmp
shll
int3
jns
aam
lock
or
ret
test
in
stos
cli
pmulhw
or
inc
jp
jae
outsl
mov
push
sti
xchg
pop
in
dec
pop
mov
push
sub
jbe
mov
imulb
test
xor
outsb
in
adc
xor
inc
mov
leave
iret
add
imul
popa
pop
lret
cmp
mov
sub
loope
mov
jns
lock
imul
sbb
test
subl
rcll
dec
dec
lcall
mov
or
inc
lods
icebp
xchg
adc
cmp
daa
test
mov
xlat
fdivr
dec
mov
jp
iret
inc
xchg
sbb
xlat
inc
adc
lods
aad
repz
mov
mov
or
fwait
aas
xchg
je
inc
test
push
in
lds
into
aas
pop
popa
push
mov
push
outsb
or
iret
int
bound
lret
repnz
scas
in
rorl
loope
add
mov
jp
sbb
sbb
aaa
jo
jns
fisttps
push
int3
fs
enter
mov
dec
xchg
fisttps
or
loope
dec
or
in
inc
inc
out
incb
insb
jns
push
mov
push
cmp
mov
mov
pop
mov
dec
mov
ds
push
inc
or
or
cmpb
add
in
ret
jg
aas
push
mov
imul
push
fcmovu
repz
adc
xor
cmp
incl
mov
sbb
xchg
jmp
sarb
sub
or
jecxz
xor
int3
les
xchg
inc
cwtd
or
pop
or
popl
xchg
xchg
aaa
sahf
outsb
jns
andl
mov
dec
aas
or
out
mov
jns
in
out
add
jg
push
mov
xchg
adc
fs
cltd
or
loop
cmp
pop
mov
xchg
repz
data16
lea
mov
test
sbb
push
insb
jp
movsb
push
repz
incb
fs
cli
push
dec
aas
stos
iret
sbb
bswap
or
arpl
std
inc
fidivrl
and
jns
inc
adc
xorl
xchg
rcr
test
dec
pop
or
pop
sub
jns
mov
int
addr16
xchg
cmp
push
mov
mov
push
xor
push
adc
pushf
dec
hlt
adc
insb
int
ret
adc
xor
icebp
data16
call
lods
jp
cwtl
jne
shl
and
jmp
nop
cmp
adc
xor
ret
xchg
xrelease
mov
rorl
imul
xor
ret
test
dec
mov
mov
rorb
pop
jg
xchg
cld
nop
cmpsl
xchg
push
aad
imul
adc
inc
mov
mov
nop
xor
idivl
fwait
outsl
adc
sbb
add
ret
scas
pusha
dec
xlat
push
pusha
mov
push
addr16
lcall
bnd
push
shll
mov
cmpsb
pop
jp
add
cmp
dec
add
stos
bound
lcall
mov
dec
adc
dec
jmp
jo
adc
hlt
in
in
push
clc
mov
repnz
push
ljmp
jbe
mov
jmp
fsubl
iret
cmp
dec
add
lcall
mov
sar
mov
imul
loop
pop
sbb
cmp
repz
mov
dec
sub
imul
mov
or
dec
cmp
call
cwtl
and
sub
es
cld
cwtl
pop
bound
adc
adc
sti
cli
faddl
adcb
dec
push
sbb
into
ss
dec
mov
pop
outsb
sub
ret
lods
pusha
mov
and
push
pop
inc
rcrl
cli
mov
mov
cmp
data16
adc
nop
cvtps2pd
out
repnz
jnp
mov
fcmove
mov
mov
xchg
fwait
ss
jne
adc
sarb
scas
jnp
popf
lods
add
or
repnz
adc
jae
xor
je
test
shr
out
leave
mov
test
inc
push
mov
js
dec
xor
out
push
sahf
nop
daa
xlat
xchg
pop
cli
mov
test
jl
movb
lods
adc
gs
inc
mov
aam
jle
dec
mov
push
lods
sbb
popa
ds
xlat
sub
fistps
ret
ds
inc
enter
shlb
sbbb
mov
push
enter
int
lods
sti
into
aad
movsl
cmc
nop
inc
add
leave
adc
aas
mov
aam
mov
cli
inc
dec
push
push
sti
pop
bound
out
ret
xlat
jl
mov
enter
inc
daa
hlt
mov
and
sbb
jmp
jle
jno
mov
add
cmp
add
fists
xchg
or
es
dec
xchg
out
mov
subl
push
mov
push
xor
sub
repnz
mov
dec
fidivs
pop
add
adc
and
into
hlt
das
jmp
mov
pop
fildll
mov
xchg
adc
and
cli
push
sti
xor
lods
lods
ror
xchg
or
roll
lea
jnp
mov
mov
xor
ficompl
jp
cmpsl
outsl
popa
mov
xchg
ljmp
adc
in
xor
pop
xchg
push
xor
xchg
lret
mov
lcall
xchg
rol
in
sbb
nop
jmp
sbbb
pop
adc
cmpl
or
xor
cs
test
pop
jl
add
push
pop
ja
sub
ret
cmpsl
imul
dec
maxps
int
icebp
sbb
or
adc
mov
das
out
cltd
or
inc
sub
rolb
add
insl
and
mov
mov
out
pop
push
pop
pop
repz
scas
jp
dec
inc
test
mov
lahf
ljmp
cmp
jmp
adc
icebp
pop
std
fmul
jp
popa
mov
clc
int
movsb
loope
or
and
das
test
sarl
or
ja
sub
ror
mov
arpl
dec
dec
pop
adc
addr16
push
push
adc
jl
push
jo
ds
in
cltd
sbbl
mov
jle
xlat
jns
bound
xchg
mov
cmp
shrb
and
cmp
in
scas
dec
icebp
out
clc
xchg
xchg
pop
add
adc
test
cmp
xor
sbbl
or
fwait
adc
xor
loopne
xchg
push
pushf
mov
inc
xchg
insl
jge
movlps
das
test
add
fildll
and
cmp
and
mov
imul
or
jns
cmp
test
add
mov
push
imulb
push
xchg
sbb
or
test
or
aam
ljmp
xchg
and
or
into
jno
pop
aas
mov
cmp
imul
jo
fistpll
push
mov
xor
movsb
lods
mov
sub
mov
f2xm1
sahf
pop
outsb
and
jle
out
mov
pusha
and
pop
or
push
mov
aad
or
and
das
lret
loop
fmull
or
out
push
in
push
inc
stos
les
adc
mov
jle
dec
adc
cmp
imull
mov
inc
jae
mov
add
mov
and
or
insl
dec
rorb
adc
inc
add
lods
scas
sub
or
inc
sbb
jmp
pop
mov
out
fwait
loop
popa
pop
push
pop
andb
xchg
pop
add
pop
roll
sti
or
mov
xchg
sbb
mov
fidivs
stc
push
lock
shll
mov
fldt
loop
cmc
sbb
inc
mov
sti
sbb
cld
fucom
or
adc
xor
push
or
imul
mov
jbe
out
test
int3
stos
jne
andb
or
mov
stos
and
adc
pop
mov
sahf
xchg
clc
ss
loop
xchg
rcrb
out
push
test
movsb
repz
fstpt
inc
sub
xchg
pop
in
xor
inc
arpl
xchg
xor
mov
sub
sbb
rorl
je
inc
mov
pop
inc
dec
cld
inc
pop
jno
push
aam
mov
iret
out
mov
jmp
pop
xchg
int3
iret
stos
push
bound
ret
jo
mov
add
movsl
ret
push
sti
bound
mov
sbb
or
pop
mov
mov
pushf
shll
xchg
fs
rorb
out
jecxz
loope
mov
cmpsl
enter
xchg
inc
push
or
loope
inc
jp
jge
jp
out
adc
leave
adc
repnz
repz
test
decl
sar
repz
adc
jno
insb
leave
lods
sub
cmp
imul
push
xor
outsl
add
mov
int
mov
mov
mov
or
inc
mov
mov
sbb
fidivrs
push
mov
mov
pop
or
movsl
xchg
push
sub
rcr
movsl
or
pop
leave
rol
push
mov
js
xchg
mov
int
jmp
and
mov
jmpw
mov
mov
out
or
jno
aas
jns
lods
dec
and
mov
mov
pushf
sub
push
xor
push
addr16
fidivrl
xor
notl
clc
test
mov
addb
popf
push
int
dec
pop
fs
into
mov
mov
mov
test
mov
test
add
jp
mov
enter
pop
cmp
sub
mov
sub
push
repnz
fsubrl
xor
inc
adc
push
in
negb
jbe
push
lret
repz
cmc
pushf
sbb
push
add
into
jmp
ds
je
in
xchg
jg
adc
cmp
ret
orb
lea
lds
ss
sub
inc
sbb
ds
cwtl
sub
ss
jl
add
ret
mov
jb
dec
out
dec
inc
mov
ja
test
inc
stc
add
and
mov
and
xchg
jl
or
inc
movsl
jmp
xchg
lret
push
push
pop
pop
push
fcmovnb
xchg
sar
in
jecxz
pop
icebp
mov
ss
dec
push
adc
sbb
dec
ja
cwtl
imul
aas
pop
push
adc
mov
xchg
int3
xchg
jae
pusha
stos
in
int
push
adcl
push
popa
ss
shlb
ficoms
jo
ljmp
jbe
adc
or
out
stc
call
fs
ja
out
jle
lahf
push
push
jecxz
outsb
clc
mov
mov
outsl
push
ja
outsb
add
ljmp
and
test
inc
xor
daa
add
clc
les
mov
or
mov
mov
adc
out
aad
popf
sbb
lcall
movsb
test
pop
in
test
enter
movsl
jl
xchg
jmp
lods
outsl
pop
mov
xchg
inc
das
cmp
or
mov
lret
pop
loope
into
push
cmpsl
dec
dec
mov
icebp
rclb
or
pop
pop
sub
adc
movsb
xor
call
aad
clc
std
push
mov
lret
or
imul
std
adc
stc
mov
xchg
inc
roll
jl
movsb
jns
push
shrl
push
cld
popf
inc
stos
xor
sub
and
adc
or
jmp
dec
dec
stos
test
xchg
sbb
mov
js
aam
mov
data16
aam
xchg
xlat
and
mov
scas
js
cmpsl
mov
cmpsb
sub
sub
lods
adc
dec
inc
sub
movsb
dec
int
es
pop
loop
cmp
mov
mov
fs
dec
cmc
repz
in
enter
leave
sbb
inc
sbb
pop
jbe
sub
js
pop
or
mov
push
popf
xchg
std
stos
cmp
jge
inc
out
pop
xchg
fimuls
sub
ljmp
jns
xor
add
push
pop
dec
xor
rol
mov
out
and
pop
jge
dec
arpl
in
lea
cmp
xchg
inc
out
xchg
jp
out
sub
mov
mov
pop
pop
pop
insl
cli
mov
jl
cmovo
mov
in
je
adc
inc
sbbl
or
divl
mov
retw
sub
sbb
inc
pop
ret
or
pusha
aaa
outsb
enter
ret
dec
fisubs
mov
adc
mov
bound
cmp
inc
xchg
fs
insl
mov
add
jae
xlat
imul
ljmp
mov
lcall
clc
cli
jge
sub
pop
mov
xor
mov
xchg
stos
add
test
sub
mov
or
mov
mov
xor
ss
adc
hlt
mov
mov
into
test
scas
mov
iret
mov
hlt
pop
pop
or
sti
ret
jp
adc
mov
push
out
bound
stc
loop
cwtl
scas
xor
cmp
push
and
xchg
dec
mov
roll
push
loopne
mov
xorb
jecxz
sbbb
out
jnp
fiaddl
inc
lock
sub
popa
xor
rolb
sbb
pop
stos
cltd
xchg
or
lock
cmc
mov
fnsave
jmp
ljmp
arpl
or
cltd
icebp
mov
sbb
ds
stc
in
rcll
xchg
cmp
push
push
dec
jl
loope
pushf
pop
push
jo
sbb
enter
rep
dec
dec
ret
jmp
dec
xlat
lretw
jle
inc
push
inc
mov
jg
push
dec
push
inc
hlt
pop
or
mov
mov
push
pop
insb
jns
mov
mov
push
xchg
mov
xchg
mov
sarb
adc
cmpsl
dec
mov
mov
movsl
mov
xor
mov
sbb
and
xlat
mov
dec
or
testl
sti
jge
add
dec
testb
clc
mov
push
movsb
aam
aas
pop
push
sub
push
mov
pop
je
mov
icebp
sub
sbb
mov
jne
cs
adc
xor
and
adc
xor
mov
fsubrs
iret
inc
push
xchg
pop
in
mov
test
inc
push
push
cmpsl
cmp
pusha
dec
js
js
jbe
mov
xor
mov
in
xorb
aam
jge
movsl
movsb
cld
mulb
xchg
ja
push
fildll
dec
push
fildll
data16
insl
mov
push
jge
and
in
xchg
inc
cmp
mov
sbb
jne
jns
pop
loopne
movsl
dec
mov
inc
and
sbb
xchg
cmp
dec
std
jmp
mull
sti
sbb
arpl
out
sub
shrb
sarb
out
xor
cmp
cmp
sbb
insb
cltd
mov
mov
addl
inc
dec
stos
pop
or
cmp
movsb
jge
pop
mov
adc
dec
or
rclb
xor
nop
es
xor
leave
es
mov
jecxz
xor
in
lods
jns
inc
inc
lahf
pusha
lret
lods
mov
pop
pop
dec
inc
sbb
lea
fdivp
inc
mov
jge
in
leave
loope
xor
repnz
push
push
mov
cmp
or
inc
call
outsb
sbb
leave
cmp
dec
pop
hlt
pop
mov
xchg
cs
mov
cli
cmp
insl
fldl
push
iret
in
orl
test
jne
movsl
add
cmp
lds
mov
or
das
fdivrs
pop
push
stos
and
mov
or
jno
cmp
adc
mov
cmp
mov
dec
push
insb
pushl
mov
xor
and
jecxz
jmp
and
cwtl
outsl
lret
iret
ds
addr16
mov
fsub
fprem1
cld
test
out
push
jmp
invd
push
inc
push
addr16
sbb
loopne
push
insl
shll
add
sbb
jb
notb
pop
lods
ljmp
fcmovbe
lcall
lods
inc
cmp
pusha
add
push
jbe
dec
mov
or
and
divps
push
jle
subl
dec
sub
or
sub
xor
cmp
std
sbb
loop
dec
xlat
insb
lods
cmp
jo
ljmp
jl
push
mov
mov
jo
les
adc
mov
rcll
inc
sub
cmc
push
adc
inc
out
adc
dec
aam
jb
sahf
repnz
xlat
sbb
pop
xor
adc
fcmovne
fisubrs
push
pop
add
lea
xor
imul
lret
loop
xor
shlb
adc
dec
cmp
ret
decb
outsb
ds
add
add
inc
imul
cmc
xchg
lock
sbb
aas
lods
lahf
adc
fwait
ret
ja
dec
mov
xor
not
out
out
and
mov
mov
cmp
mov
cli
and
mov
mov
cs
xchg
insl
jp
clc
adc
or
jno
cltd
aad
mov
addr16
movsl
in
mov
or
pop
adc
jp
inc
xchg
loop
orb
je
lock
repnz
pop
or
js
xchg
aad
in
aas
pushf
and
mov
adc
push
mov
push
xchg
mov
popf
cmp
hlt
lcall
and
cmpsb
or
mov
out
dec
aaa
xchg
ljmp
jno
mov
dec
jb
and
mov
inc
mov
inc
push
popf
or
add
xor
mov
inc
dec
imul
ret
dec
add
mov
push
and
fnstcw
addr16
cld
mov
in
add
mov
push
mov
push
into
int
inc
mov
test
adc
mov
cltd
testl
add
adc
arpl
and
test
adc
pop
adc
insb
mov
fstps
ja
push
or
rol
push
mov
sub
stc
adc
inc
loopne
out
push
insb
mov
dec
add
add
mov
cmpsb
jl
test
sti
cmp
aaa
adc
or
jae
lods
repz
jno
cmp
insl
movsb
sbb
jnp
stos
rcll
loopne
sarb
lock
xchg
mov
cmp
or
insb
xor
adc
mov
jl
lock
jns
movsl
xchg
addr16
imul
ja
loope
out
insb
dec
xchg
inc
dec
dec
shlb
lret
ffreep
and
pop
loop
test
imul
mov
andb
loopne
mov
pop
dec
sub
jge
mov
popa
xor
lods
aad
lods
gs
loopne
enter
push
jge
movb
rol
dec
mov
das
fcomps
ret
add
ja
ficoml
adc
lret
out
in
daa
jg
lret
sbbl
lds
add
aad
push
cmp
leave
sub
mov
inc
cs
addr16
inc
aam
mov
fninit
fs
cs
mov
nop
xor
sub
pop
adc
mov
adc
dec
cmpsb
lret
pop
popa
inc
and
notb
int3
sarl
aam
arpl
jae
adc
sbb
sahf
out
and
xor
enter
cltd
bnd
sub
push
xchg
pop
jmp
jbe
test
add
sub
sub
jg
jl
scas
lahf
test
sbb
cmp
js
cmpsb
mov
xchg
mov
mov
xchg
and
sub
loope
cmp
lea
sbb
or
pusha
insl
dec
ret
mov
dec
popa
inc
test
into
jmp
js
movsl
dec
pop
ret
cmpsb
mov
and
adc
push
fwait
push
cmpsb
sbbl
jnp
arpl
sti
fsub
mov
fidivrl
push
lret
mov
push
das
pop
or
sub
rorl
push
fwait
and
lret
xor
cld
jecxz
out
inc
daa
cmpsl
stc
dec
repnz
xchg
lock
lods
inc
dec
cmp
out
jb
dec
loope
xchg
jns
jne
jno
jo,pn
es
popf
sub
xchg
stos
rolb
ja
sub
pop
and
fwait
in
aam
sub
fidivrl
cmpsl
std
inc
cmp
imul
bound
aas
testl
into
jno
xor
or
aas
nop
pop
xor
outsb
lret
adc
int3
fwait
mov
int3
leave
cmp
ja
popa
adc
pop
iret
in
cs
push
cli
inc
sub
add
adc
push
inc
fimuls
push
mov
ret
enter
mov
lahf
push
cli
fwait
jno
sbb
sbb
enter
cs
sub
mov
pop
bound
mov
int3
push
fucomip
jg
mov
jb
mull
pminsw
scas
imul
push
adc
ljmp
push
xor
negl
addl
fists
testb
jecxz
jmp
sub
mov
ljmp
test
lret
sbb
dec
mov
imull
push
or
pop
insb
adc
es
hlt
cmpsl
roll
test
xchg
nop
mov
dec
in
pushf
stos
cs
pop
xor
add
aam
xchg
cmc
pop
lahf
jmp
jns
cmpsb
xchg
mov
cs
rcll
daa
sub
call
cmp
jp
or
fiaddl
mov
mov
out
xor
jns
nop
out
aaa
inc
xor
loopne
mov
popa
loop
push
or
push
adc
jecxz
pop
dec
ljmp
pop
inc
xchg
inc
push
lea
cmp
adc
cmp
cli
loop
push
mov
inc
mov
in
xlat
outsl
in
push
into
xchg
jle
test
mov
mov
mov
mov
mov
push
mov
das
jne
pop
stos
mov
out
dec
negb
shl
lods
ljmp
mov
test
divb
rcll
jp
loope
mov
mov
pushl
pop
stos
imul
lods
js
cltd
pop
dec
xchg
test
mov
in
jge
fwait
jg
lret
test
xor
mov
mov
push
std
cltd
and
cmp
dec
xlat
int
dec
dec
inc
xchg
and
lds
fadds
mov
mov
inc
and
xor
loop
nop
pcmpeqb
ss
and
xor
leave
sahf
gs
and
rcll
cmp
jbe
stos
cmp
out
push
cmp
mulb
or
idiv
mov
repnz
rcl
push
xchg
int
inc
mov
inc
lret
jp
std
les
jnp
fiadds
loope
cmp
jp
mov
mov
xchg
push
jmp
inc
jns
pop
bound
lcall
push
adc
cmp
pop
jg
in
inc
sbb
or
stos
inc
dec
ret
sbb
test
lods
mov
mov
sub
xchg
test
xchg
jl
push
in
int3
pop
insl
inc
or
rorl
mov
add
bound
sbb
xchg
mov
mov
cmp
insl
or
sbb
popa
fwait
insl
lcall
xor
mov
push
inc
mov
aam
xchg
inc
push
lock
jo
ret
fstl
lret
call
or
sub
adc
out
cld
divb
dec
data16
mov
arpl
and
insl
loop
jle
push
test
xor
sbb
cmp
pop
xor
dec
mov
sub
push
lret
or
out
push
ja
pop
jg
iret
loop
or
mov
mov
outsl
daa
out
pop
jge
test
std
fiadds
jo
ds
pusha
add
mov
aas
or
xchg
mov
jecxz
or
mov
and
inc
andb
sbb
js
push
and
jae
mov
imul
push
hlt
rcl
sahf
sbb
and
ljmp
sbb
sub
gs
cmc
std
fsubl
pop
out
add
test
leave
jp
je
mov
inc
daa
cmc
nop
cmp
vpsllq
mov
or
lahf
faddl
hlt
ss
in
sub
fldcw
lret
sbb
test
pop
xlat
outsb
mov
cmp
mov
or
movb
sbb
adc
and
xchg
shlb
xor
inc
lods
adc
and
cld
jnp
jo
adc
ljmp
pop
das
adc
pushf
test
push
jnp
adc
ret
lea
out
mov
aas
aad
adc
and
push
insb
push
xor
sbb
add
push
jp
inc
pop
mov
cwtl
std
les
xchg
xchg
addr16
stc
popa
xor
dec
in
sub
pop
sbbl
lret
lock
lcall
fisttpll
mov
xor
xor
xorb
fists
lea
pushf
pop
fisubrl
scas
fnstsw
push
mov
and
cmp
mov
mov
dec
call
cmp
je
mov
sbb
mov
mov
mov
decl
mov
mov
xor
mov
mov
add
mov
or
mov
mov
xorl
add
xor
add
xor
mov
mov
mov
xorl
add
mov
mov
movl
mov
movl
jmp
movl
cmpl
je
cmpl
jne
pushl
pushl
pushl
call
cmpl
jne
xor
add
dec
mov
mov
dec
mov
jmp
mov
xor
mov
addl
add
mov
movzbl
or
mov
mov
adcl
xor
add
cmp
movl
je
jmp
mov
mov
xor
add
cmp
je
mov
mov
xor
add
cmp
je
lea
push
pushl
pushl
call
mov
mov
mov
xor
add
cmp
je
mov
movzwl
mov
mov
mov
jmp
mov
xor
lea
jmp
mov
xor
add
jmp
mov
xor
add
jmp
mov
add
mov
mov
test
je
movl
push
xor
pop
add
push
pop
push
dec
pop
dec
xchg
sub
xchg
dec
mov
imul
sub
mov
mov
mov
jmp
lock
inc
push
mov
mov
fs
xor
pop
jp
or
jp
ret
add
sbb
iret
push
lret
mov
inc
aas
leave
and
mov
les
mov
int
or
push
int3
cmp
punpckhdq
mov
push
les
mov
fstl
int3
icebp
mov
in
or
aas
mov
cmpsl
jge
mov
push
testl
cmpsl
aad
or
cmc
repnz
lcall
popf
jg
cmp
push
sub
xchg
fcoml
mov
int3
push
sub
jmp
sbb
dec
xor
out
icebp
mov
aas
add
xchg
and
stc
test
jp
jne,pt
inc
notl
dec
aam
movsb
sub
sbbb
mov
push
insb
pop
std
xor
jns
jb
es
fimull
and
jae
adc
lahf
push
mov
rcr
in
mov
cmpsl
sbb
jne
xchg
sub
sub
jne
into
pop
mov
cwtl
test
inc
pop
jns
jbe
xchg
imul
pusha
mov
lods
test
dec
sti
xor
inc
je
scas
pop
pop
dec
pushl
imul
adc
xor
and
mov
sub
mov
push
xor
lahf
cs
xchg
xchg
loope
and
or
jb
ret
fwait
lret
les
jmp
sbb
pop
ret
mov
cs
clc
outsl
jns
clc
lret
je
jg
push
jecxz
lahf
adcl
jb
outsb
adc
sti
insb
clc
jp
mov
movsl
jae
dec
jmp
arpl
mov
shrl
cs
in
lahf
xor
jge
pop
xor
cs
and
aaa
pop
dec
divb
imul
stos
or
lea
mov
pop
mov
nop
push
jg
mov
push
cmpsb
push
movsl
lea
iret
inc
in
xor
aaa
mov
lret
xchg
and
sub
iret
icebp
inc
inc
test
sbb
adcl
rcl
clc
mov
adc
inc
pop
pushf
dec
ljmp
jb
stos
mov
adc
lock
dec
out
jne
test
lds
jne
pop
sub
push
pusha
aad
pop
in
and
mov
cmp
adc
pop
sub
in
in
cld
sub
or
dec
and
jmp
shrb
aas
jne
xlat
gs
rorb
jmp
cmp
fstps
inc
roll
jnp
add
dec
xchg
sbbl
popa
inc
dec
dec
lds
and
leave
adcl
mov
rcll
mov
out
ljmp
sub
adc
xchg
adc
jecxz
mov
fcmovnbe
lock
int
je
mulb
andb
push
add
pop
aas
adc
mov
fwait
in
data16
insl
rcrl
leave
popf
in
les
shrl
in
jno
mov
ds
pop
std
popf
fcmovbe
jl
call
mov
dec
fs
mov
or
lock
insb
jmp
movsb
xchg
mov
mov
jg
enter
gs
xchg
xor
sub
pop
insb
push
lods
ret
jnp
add
push
shlb
mov
scas
mov
nop
loopne
lock
pop
xor
xor
sahf
es
popa
test
clc
sahf
cmp
dec
lahf
fldt
add
lock
cbtw
mov
scas
test
lods
mov
cmpsb
loopne
jmp
or
mov
cmc
mov
cmp
sti
test
xchg
xchg
cld
pop
push
filds
daa
or
in
and
das
add
adc
jno
frstor
stos
es
adc
ret
xor
adc
push
pop
push
mov
xorb
xchg
lds
aaa
cmp
clc
xor
add
jmp
out
fdivl
inc
repz
test
mov
xchg
xlat
mov
sub
into
dec
xchg
mov
mov
sti
out
aas
or
inc
sub
pop
aam
ret
push
enter
or
mov
in
xorl
dec
cwtl
mov
imul
and
pop
setl
jno
int
xorl
dec
lahf
mov
in
fidivl
or
movzwl
xor
test
sub
in
jecxz
imul
test
test
shll
aas
js
enter
enter
outsb
test
mov
test
pusha
mov
mov
or
push
clc
rcrl
sub
fidivrl
mov
movsl
clc
std
or
push
imul
mov
dec
adc
cmpsb
cmp
jno
icebp
cmp
fidivrl
jg
inc
in
sbb
lods
pop
sbb
ja
je
inc
repnz
pop
test
leave
mov
inc
stos
jae
dec
mov
dec
mov
clc
bound
push
pop
stc
jnp
iret
pop
nop
aaa
adc
outsl
in
inc
jle
mov
jb
mov
insl
jne
push
movsl
inc
pop
and
mov
aam
jge
mov
dec
arpl
and
push
mov
cmp
cmpsb
inc
jle
es
cmp
lds
ret
or
push
icebp
stc
mov
shll
jl
fldl
jp
jno
sti
out
popl
outsb
cmp
fsubrl
xor
shlb
pop
jns
lods
stos
mov
adc
sub
leave
inc
ds
sub
push
shrb
pop
adc
sbb
arpl
fwait
xchg
mov
pop
sbb
add
ficompl
not
lods
or
sub
inc
cmp
test
jl
lahf
testb
add
dec
popa
cmp
xchg
lret
xor
xchg
xor
sub
stos
push
jge
inc
xchg
test
xor
int
mov
cli
pusha
pop
dec
or
and
dec
lock
dec
imull
pop
mov
ds
std
mov
pop
xor
ss
sbb
aaa
mov
jnp
mov
cltd
repz
mov
or
pop
or
daa
push
imul
imulb
push
ja
sarl
loope
push
adc
int3
xor
cmp
mov
daa
fisubs
fcompl
xor
mov
in
and
outsl
pushf
movsl
or
test
mov
jno
je
loopne
lret
in
jle
jg
mov
aas
shll
movsl
and
jbe
fstps
fwait
enter
sbb
dec
cltd
enter
dec
call
sbb
stos
rol
jge
aam
inc
mov
stos
leave
cmp
xorb
jns
jg
data16
mov
neg
stc
mov
push
dec
pop
xor
mov
pop
ljmp
cld
push
inc
and
adc
fadds
cli
xchg
aam
xlat
mov
rep
enter
in
push
jl
and
fwait
dec
dec
shl
dec
test
mov
leave
cmp
mov
or
xchg
cld
add
cmc
fbstp
mov
dec
cmc
fdivp
scas
pop
test
stc
pop
pop
and
adc
cmpsl
mov
iret
test
or
scas
push
xor
rcl
pop
and
cmpsb
lahf
in
dec
mov
dec
inc
or
gs
add
jle
xor
negl
mov
lret
pusha
adc
mov
mov
or
sub
ljmp
nop
data16
enter
cmp
sysenter
shrl
lods
add
mov
ljmp
xchg
adc
pop
outsb
fs
xchg
mov
pop
dec
adc
sbb
jae
push
push
mov
sub
lret
sbb
pop
fldt
aas
aaa
adc
pop
or
hlt
adc
xchg
mov
rclb
push
test
or
jnp
call
and
fnstenv
dec
cli
scas
popa
push
jmp
xchg
repz
xorb
push
add
cmpsl
sbb
iret
cli
pop
add
mov
daa
out
loope
push
popf
gs
lods
test
add
inc
xor
lahf
ljmp
xor
mov
cmpsb
push
roll
pop
loopne
stos
test
lea
and
cmc
adc
pop
or
sub
in
or
mov
sbb
push
popf
int
sub
xor
jl
dec
mov
sbb
inc
ror
dec
jns
sub
repnz
loop
mov
cwtl
xor
sbb
jnp
xor
lret
xor
inc
loopne
mov
bound
loop
and
xchg
aas
lahf
lock
dec
sbb
scas
std
xchg
scas
xchg
and
pushl
jae
and
add
out
adc
mov
xchg
mov
sub
rolb
flds
cld
iret
int3
inc
outsb
das
jbe
xor
int
ret
shl
ds
adc
mov
jg
add
cmpsl
push
sbb
mov
out
dec
les
mov
jnp
xchg
mov
pusha
insl
fcom
mul
and
pop
pop
jno
in
jge
lcall
imulb
scas
push
sbbl
test
rcrl
mov
pop
and
ljmp
push
push
cmpl
roll
xchg
add
adc
mov
pop
leave
cmp
enter
xchg
or
pop
add
sbb
addb
lds
nop
jmp
cmpsb
jmp
mov
mov
inc
leave
mov
hlt
fidivrl
push
nop
push
or
dec
fisttpl
xor
divb
movsb
push
jne
dec
jo
jo
inc
rcrb
adc
ljmp
push
mov
rorl
cmpsl
push
jecxz
fcoms
fistps
mov
inc
sahf
and
pop
mov
lock
or
pushf
jno
ja
sub
inc
cli
lock
sub
jle
mov
adc
jecxz
jle
jne
addb
xchg
cmp
lahf
push
adcb
mov
mov
dec
xchg
inc
test
mov
pushf
shrl
aas
cmp
call
pop
dec
adc
push
inc
scas
fidivrs
mov
jle
and
popa
sub
ror
jo
das
adc
push
imul
cwtl
xlat
and
and
test
movsl
sub
das
test
test
cmc
stos
dec
std
dec
rcrl
ror
mov
and
les
xchg
xchg
adc
and
pop
loopne
pop
mov
mov
ret
mov
icebp
mov
movsb
mov
add
mov
iret
pop
jl
push
ja
cmovle
out
mov
cmp
cmpsl
shlb
xchg
pop
and
inc
sbb
adc
sub
imul
add
inc
pop
jg
std
cmc
mov
sub
mov
fwait
xor
xchg
mov
repz
mov
mov
in
lods
xchg
std
in
mov
inc
mov
mov
adc
jl
fst
inc
add
cmp
adc
dec
inc
inc
les
sub
mov
iret
sub
loopne
and
dec
xor
lods
sbb
imul
int3
scas
movsb
sub
int3
call
ljmp
or
mov
bound
filds
dec
xchg
fwait
xor
push
imul
sahf
push
pushf
sbb
push
jle
cmp
lahf
js
ja
cmp
jnp
pusha
lods
insl
mov
cmp
mov
in
mov
mov
jge
pop
iret
inc
mov
arpl
pop
cwtl
dec
sub
inc
sbb
test
push
sbbl
mov
int3
mov
mov
mov
mov
inc
leave
repz
pop
cs
ret
fbstp
cmp
repnz
lret
sub
pop
pop
mov
jmp
dec
dec
sub
call
daa
or
hlt
jmp
in
inc
clc
mov
mov
lret
push
push
pop
out
cmp
aam
xor
push
leave
out
push
js
dec
cld
insb
adc
xchg
ret
lods
xchg
cltd
mov
xchg
fsubs
xchg
sahf
inc
sti
inc
arpl
cmc
lahf
rorl
dec
sbb
clc
push
inc
sub
xchg
xchg
mov
mov
ss
imul
inc
enter
push
push
cmp
mov
in
adc
cmp
adc
lcall
icebp
or
push
cmp
push
imul
adc
ret
lods
or
daa
cmp
dec
dec
mov
mov
orl
dec
outsb
outsb
jge
push
lcall
movsl
iret
in
and
push
fs
xor
push
lock
out
fimull
stos
imul
push
or
pushf
jbe
mov
sbb
and
xor
movsl
mov
fnsave
es
mov
push
mov
jmp
inc
xchg
lds
rcrl
sub
leave
xor
or
push
dec
hlt
daa
iret
push
mov
lock
sub
inc
fldcw
xor
fistps
and
sub
out
and
out
pop
jnp
or
cmpb
outsb
mov
shrl
mov
add
pop
mov
leave
cs
cmp
jo
dec
nop
lret
stos
mov
push
rolb
cld
xchg
iret
lret
mov
sbb
xlat
in
dec
lea
cli
push
roll
cmp
xor
xchg
popf
ss
lods
inc
mov
in
paddusw
mov
mov
orl
mov
addl
imul
jg
pop
jmp
jne
add
mov
cmp
sub
scas
xchg
sbb
movsl
aas
xchg
sub
movsb
xor
jle
jmp
test
setl
jp
in
int3
lcall
test
sub
and
int
sub
pop
xor
cmp
hlt
loop
das
mov
mov
clc
inc
andl
dec
pop
mov
into
fnstsw
pushf
nop
push
lcall
mov
je
pop
or
fs
cmp
and
or
xchg
je
cld
adc
sbb
outsb
test
rol
lahf
aam
or
testl
xchg
lret
shrl
adc
xor
loope
mov
xchg
insb
lods
push
out
mov
cmp
movsb
push
add
incb
mov
xorb
sbb
xchg
sbb
add
jge
and
mov
mov
lret
aad
inc
jbe
push
pop
fnstcw
lcall
cwtl
inc
dec
rorl
jns
xor
orl
ret
adc
les
dec
int
int
scas
mov
into
ror
fs
pop
sahf
adc
fstps
lcall
divl
nop
xchg
nop
aas
test
jns
pop
adc
test
cli
bound
test
xchg
adc
and
mov
ds
sub
dec
mov
lock
into
mov
sbb
dec
mov
mov
shlb
ds
dec
lret
pop
clc
push
sbb
fdiv
mov
pushf
and
in
movsl
push
mov
push
jnp
ret
das
mov
scas
jbe
sbb
stc
adcb
cs
outsl
xor
jae
add
lock
jbe
fadds
ret
fucomp
aas
jle
mov
xor
mov
gs
add
xchg
push
lods
push
cmp
mov
inc
scas
mov
sbbl
das
sbb
push
cli
shrb
scas
gs
outsb
rcr
xchg
push
jle
pop
inc
stos
push
or
adc
dec
mov
fs
cmpsl
adc
addb
cmp
xchg
sahf
es
outsl
std
ret
inc
pop
mov
add
cwtl
inc
push
lcall
ret
jo
jle
dec
imul
stc
sbb
add
xchg
decb
ficoms
xchg
outsl
cmp
loope
inc
test
int3
iret
mov
jmp
lcall
nop
mov
or
scas
xchg
cmp
dec
cvtdq2ps
pushf
xorb
fcmovb
ret
sti
int
cmp
out
stos
and
pop
xor
jo
dec
je
jb
test
mov
push
lock
add
and
xchg
xchg
xor
mov
popa
sub
xor
mov
mov
mov
ret
push
pop
outsl
mov
pop
lcall
shrl
call
sub
inc
xchg
push
shlb
ja
arpl
loop
ret
pushf
adc
cmp
call
popa
mov
adc
loope
dec
jb
hlt
fs
outsb
dec
js
out
xchg
es
mov
rcll
test
int3
lods
adc
push
push
popa
daa
cli
dec
ss
cmpsb
aad
sbb
sbb
inc
clc
sbb
dec
jp
loopne
add
pop
cwtl
scas
int3
aam
insb
or
stc
repnz
xchg
pop
in
pop
lahf
cmp
mov
xchg
in
sar
sbb
pop
sbb
jl
fistpl
push
mov
push
mov
repnz
das
cmp
or
popa
jnp
cmp
push
pop
cmp
dec
out
ja
in
mov
jne
outsl
in
mov
sbb
xchg
mov
fistpl
dec
pop
cmp
dec
mov
loope
or
and
mov
out
cmpsb
xor
repnz
jge
xor
jns
push
mov
in
popl
testb
xchg
inc
gs
or
sti
inc
pushf
lret
jmp
movsb
pop
mov
lock
cli
sub
add
stos
insb
inc
lret
adc
int
or
cld
add
popa
cmpsl
push
lcall
lods
lea
and
out
dec
out
clc
push
sbb
mov
enter
dec
inc
xor
jne
add
dec
fidivrs
es
mov
or
out
pop
jmp
mov
out
fsubrs
insl
add
push
xchg
inc
xchg
xchg
and
ljmp
lahf
add
pop
dec
xor
lods
pop
in
out
xchg
dec
mov
sti
sahf
xchg
add
shr
or
xor
jo
cmp
iret
lret
fildl
dec
cmp
mov
xlat
mov
int3
dec
pusha
fdivs
mull
add
pop
jmp
and
test
js
ja
dec
jle
loop
push
lds
daa
and
stos
jle
ja
mov
es
dec
xchg
shl
leave
push
roll
lea
lods
mov
fiaddl
inc
frstor
lahf
ja
sahf
pop
pop
xlat
sbbb
push
jg
shll
popa
xchg
xor
or
or
in
test
mov
testl
jl
js
pop
mov
sub
and
add
adc
adc
out
les
push
inc
and
or
cmpsl
cmp
push
lahf
sub
or
push
or
daa
xor
cmp
or
stos
and
mov
mov
test
in
xchg
mov
into
icebp
sbb
or
xor
mov
xchg
pushf
add
add
test
sbb
push
mov
xor
gs
mov
mov
test
pop
dec
imul
cmpsb
cli
scas
hlt
jge
out
hlt
mov
dec
loope
lea
dec
in
arpl
shl
pop
dec
pop
jnp
jg
pop
int3
mov
iret
jns
jg
xor
mov
fisubrs
fdivl
jecxz
lea
jle
xchg
repz
sub
mov
pushf
ds
lods
test
adc
mov
push
sub
mov
or
mov
pop
loope
adc
mov
cmp
pop
leave
leave
mov
mov
je
mov
jo
xchg
shll
scas
faddl
scas
pushf
inc
fwait
jg
fiadds
enter
aas
xchg
lret
mov
pop
add
xchg
aam
dec
stos
push
orb
lret
in
xchg
sub
xchg
loope
mov
insl
adc
xchg
dec
jle
outsl
test
repnz
dec
mov
cmp
adc
sarl
sbbl
sahf
outsb
rcll
daa
xor
jge
xor
out
pop
movsl
pop
outsl
xchg
sbb
push
jp
jo
sbbw
aad
lcall
pop
loopne
and
mov
lret
jge
mov
xchg
mov
int3
jnp
lret
mov
pop
mov
push
leave
mov
iret
dec
jl,pt
or
adc
xor
repnz
sub
adc
jo
stc
loope
call
dec
lret
mov
sbbl
adc
mov
pop
pop
imul
test
mov
or
shl
shl
jno
jno
into
jmp
cmp
dec
fidivs
int3
rcrl
daa
cmp
xchg
in
mov
cmp
mov
ss
xchg
aaa
loope
jg
mov
adc
jne
add
and
icebp
jo
adc
and
dec
cmpb
es
jns
push
pop
fs
fidivrl
sub
jne
sbb
adc
mov
sahf
rorb
cmp
pop
pop
jp
cs
data16
xchg
and
jp
sbb
outsl
cmp
cmp
dec
jns
push
movb
stos
mov
rcrl
ficompl
je
or
and
or
xchg
sub
sbb
outsb
repz
in
pushf
fdivrl
cs
mov
mov
sar
imul
push
jg
jp
mov
int
dec
dec
subl
stc
mov
cmp
loopne
adc
sub
test
dec
pop
fs
mov
fdivrs
pop
push
push
xor
repnz
mov
cmp
xchg
lcall
jne
lock
test
sub
loop
mov
loop
jecxz
dec
fs
add
lahf
mov
into
or
xchg
xchg
mov
pop
sarl
subl
mov
mov
stos
jo
std
cwtl
mov
imul
adc
cmc
repnz
inc
pop
data16
mov
orl
jg
fsubl
or
shr
mov
inc
mov
push
nop
mov
fxtract
icebp
push
rolb
and
lahf
xchg
nop
leave
mov
adc
popa
addb
xor
test
push
in
dec
dec
andb
aam
xchg
ljmp
lret
jae
in
sti
or
ljmp
and
mov
fnstcw
sub
or
add
sub
addb
push
scas
mov
mov
cwtl
outsl
and
popa
icebp
add
cwtl
jae
push
outsl
in
jmp
lods
mov
inc
sub
ljmp
mov
pop
imul
lret
mov
test
out
jne
test
orl
mov
push
sbb
xchg
ss
loope
sbb
pop
popf
aam
int3
lea
js
pop
add
cmp
lods
push
std
mov
popa
pop
movb
je
adc
push
and
cli
popf
es
mov
xor
push
jns
xchg
mov
stos
in
push
pop
out
jnp
repz
pusha
jmp
out
aas
jge
cmc
aad
mov
jo
out
aam
jp
xchg
rol
cli
cld
xchg
fildl
push
mov
into
pop
mov
pop
and
stos
imul
pusha
outsl
or
push
movb
insl
out
rcl
rolb
fildll
jmp
jg
insb
sbbb
or
push
or
mov
adc
hlt
shlb
inc
fstpl
inc
mov
cmp
push
int3
pop
dec
cmp
cld
or
add
lret
outsl
cwtl
clc
pop
inc
ror
mov
pop
enter
mov
cmp
add
pop
and
dec
dec
aas
push
add
int3
dec
shlb
repnz
loop
fcmovne
add
enter
add
lcall
insl
sub
and
sbb
jnp
fbld
push
loopne
or
repnz
add
inc
test
xor
fnsave
sub
mov
test
dec
movsb
add
xchg
xchg
sbb
lcall
jp
test
lcall
std
ja
and
punpckhbw
out
push
push
sbb
cmp
dec
in
xchg
sbb
in
cmp
dec
mov
mov
enter
add
jmp
in
loopne
lods
or
or
push
pop
or
test
aad
and
loope
add
add
push
jne
mov
push
sub
sub
pminsw
sub
add
movb
push
loopne
sbb
popa
xor
cmpsl
and
mov
inc
push
in
lea
jb
pop
pop
sti
xchg
lods
add
push
or
arpl
out
popf
leave
sub
xor
push
cmp
push
sub
int3
sti
xchg
sub
dec
lock
les
inc
mov
push
test
push
inc
and
push
movsl
mov
inc
divb
pop
loope
mov
rorl
cli
cmp
notl
lods
or
or
shrl
js
lcall
dec
movsb
mov
cld
jmp
push
ss
cltd
dec
push
push
lds
mov
rcrb
mov
sbb
jae
dec
test
enter
filds
pop
pop
xor
fildl
insl
xchg
ret
adc
lea
jp
pop
jnp
or
add
sub
cmp
mov
pusha
in
fidivs
shll
xchg
ret
mov
jl
xor
or
or
sub
insl
adc
xor
xorl
nop
mov
mov
movsl
dec
insl
fucomi
add
mov
fs
xchg
xor
sbb
or
cwtl
js
inc
push
adc
lods
addl
ds
xor
pop
inc
lahf
and
in
mov
andl
mov
jb
add
out
insl
loop
cmpsb
pushf
add
push
inc
jno
pop
inc
dec
mov
aas
dec
or
iret
jno
in
push
movsb
scas
sub
inc
push
iret
loop,pt
jmp
sub
xchg
sub
lods
jecxz
xor
dec
out
push
push
push
ja
cs
arpl
adc
mov
mov
das
cmp
inc
rcr
push
sahf
into
dec
rcrb
pop
loope
nop
mov
imulb
mull
sbbb
adc
gs
cmpsl
cli
test
add
rcll
add
xorb
mov
pop
insl
shrb
test
sahf
and
in
jmp
mov
popa
daa
pop
sbb
lods
xlat
cmp
stos
mov
pop
lods
xor
xchg
cmpsl
inc
adc
loopw
adc
xchg
sub
mov
fsubl
and
insb
cwtl
int
hlt
testl
cmp
and
xchg
call
cli
fs
mov
dec
and
mov
cmp
pusha
dec
cltd
stc
sub
mov
jb
or
cld
sbb
outsl
rorb
xchg
rclb
and
adc
push
sbb
je
add
sbb
in
jle
push
aad
pop
addl
xchg
push
xchg
js
or
mov
xchg
adc
nop
dec
sub
mov
mov
imull
sub
mov
decl
cmpsb
inc
out
roll
inc
dec
rclb
cwtl
ret
xchg
aad
add
cwtl
cmp
pop
pop
mov
outsl
push
out
inc
lods
lods
jp
sbb
xchg
cmp
xchg
gs
push
dec
bound
cld
xor
xchg
xor
xchg
cld
lret
cltd
inc
jbe
or
lods
rcll
aas
or
xor
rcrb
scas
inc
cmp
mov
mov
outsb
fstpl
lcall
adc
or
icebp
repz
jecxz
pop
mov
xchg
or
fidivrs
loope
xor
fadd
mov
pop
xlat
sub
mov
and
adc
arpl
mov
pop
adc
aaa
dec
xor
mov
dec
out
and
push
out
jns
clc
sbb
sbb
inc
bound
adcl
es
out
sti
sbb
or
inc
and
lods
jns
cmp
dec
mov
rorl
push
mov
or
mov
mov
test
cmc
jno
cli
addl
sbb
pop
add
add
out
in
xor
bound
addr16
jb
scas
mov
xor
mov
je
out
mov
pop
mov
pop
mov
xchg
or
xor
imul
cmp
jge
push
dec
in
insb
cld
jb
jecxz
mov
mov
xorl
lcall
mov
stc
lret
sti
xchg
mov
xchg
aaa
jbe
and
pop
loopne
mov
inc
inc
fwait
cwtl
xchg
jno
sbb
xor
sbb
push
pop
xor
pop
inc
je,pn
outsb
mov
inc
test
push
inc
sub
out
lods
aas
les
mov
adc
sbb
in
mov
push
add
jb
out
jbe
mov
rcr
push
adc
unpcklps
pusha
xor
xlat
xchg
xchg
cmp
loopne
lods
add
jne
mov
aad
mov
pop
mov
outsb
in
or
mov
xchg
sbb
nop
clc
inc
cld
xchg
stc
cld
pop
xchg
dec
sbb
aam
jmp
loope
int
mov
jge
lea
push
loop
cmp
je
sbb
fldl
inc
mov
loop
push
and
mov
sub
rcr
aas
and
cmp
ret
or
push
lods
enter
rclb
xchg
cmp
int
jmp
mov
sub
xchg
mov
mov
fidivl
mov
into
mov
cli
sbb
push
jmp
ja
divl
fs
scas
inc
and
testb
dec
out
out
dec
ficoml
adc
mov
or
mov
cmc
and
sbb
aad
push
int
mov
add
xchg
push
wrmsr
inc
pop
aaa
mov
pop
in
ret
pop
xchg
insl
movsl
jns
hlt
dec
pop
add
shl
dec
add
push
xchg
pop
scas
mov
mov
lcall
cli
mov
pop
jl
repz
out
cmp
sbbb
cmp
jbe
push
xchg
adc
fstp
or
outsb
inc
cmp
mov
dec
negb
dec
pusha
test
iret
into
in
jmp
lret
ret
xchg
dec
dec
das
jg
sub
jno
and
jmp
mov
sti
ss
xchg
mov
or
add
adc
mov
mov
push
adc
cmpb
scas
jno
or
xchg
push
jl
sbb
mov
pop
aam
ret
and
lods
outsb
in
push
mov
mov
mov
cmp
cmp
icebp
andl
xchg
lahf
mov
dec
fildll
mov
sbb
push
data16
pop
pop
dec
mov
nop
mov
or
jnp
xor
mov
fstl
cwtl
jmp
or
jmp
nop
je
inc
mov
fimuls
inc
inc
xchg
dec
xchg
sub
data16
lods
push
fistps
mov
jge
std
mov
test
cwtl
sbb
push
push
aas
aas
inc
fdivl
in
jp
jmp
or
push
movsl
into
mov
push
mov
push
inc
cmp
and
cmp
sub
mov
scas
popa
flds
cmc
filds
fstpt
cmpsl
aas
popa
fstenv
cli
adc
pop
fdivr
mov
insl
jg
xchg
xor
mov
add
mov
mov
xor
add
mov
imul
mov
xor
mov
lea
cmp
je
mov
mov
mov
mov
mov
xor
xor
mov
add
div
mov
xor
lea
mov
mov
mov
mov
mov
xor
lea
mov
mov
mov
xor
add
imul
mov
xor
mov
lea
cmp
jne
mov
jmp
mov
mov
mov
xor
add
mov
mov
add
xchg
xor
push
mov
pop
mov
add
lea
add
add
push
inc
pop
dec
xchg
dec
xchg
dec
xchg
dec
push
mov
pop
dec
call
cmp
je
xchg
push
pop
push
pop
inc
xchg
sub
xchg
dec
dec
mov
imul
add
xchg
push
xor
mov
dec
inc
add
dec
xor
add
pop
mov
pop
pop
pop
leave
ret
push
mov
sub
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
pushl
call
jmp
movl
cmpl
je
cmpl
jne
call
mov
dec
mov
jmp
adc
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
call
cmpl
jne
mov
inc
mov
jmp
sbb
push
mov
movl
cmpl
je
cmpl
jne
push
pushl
push
push
pushl
pushl
pushl
call
mov
dec
mov
jmp
mov
mov
xor
mov
and
andl
and
movl
adc
movl
mov
mov
sub
sub
mov
or
mov
andl
xor
xor
inc
mov
cmpl
jne
pushl
push
call
cmpl
jb
sub
andl
xor
or
inc
mov
cmpl
jne
push
push
pushl
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
jmp
mov
xorl
mov
mov
sub
mov
orl
mov
mov
sub
mov
orl
mov
mov
sub
mov
orl
mov
mov
sub
mov
mov
mov
mov
xor
mov
add
or
mov
mov
mov
sub
mov
orl
mov
xor
add
push
mov
xor
add
push
mov
xor
add
push
lea
push
pushl
pushl
call
test
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
lea
mov
mov
test
je
lea
mov
mov
mov
mov
mov
sub
mov
mov
xor
mov
sub
add
mov
mov
mov
mov
pushl
movb
mov
pushl
pushl
pushl
pushl
pushl
pushl
pushl
mov
call
mov
mov
add
pop
pop
leave
ret
push
mov
sub
movl
lea
mov
jmp
das
or
mov
in
jg
fs
lcall
jp
cmp
push
jmp
mov
lods
lods
cltd
xor
sti
lds
in
cmc
pop
jge
xchg
ljmp
adc
pop
pop
movsl
ret
lret
sbb
in
mov
mov
loopne
jmp
cwtl
divb
stos
inc
lret
dec
jg
add
fisttpll
jnp
fcom
jg
sbb
mov
jp
repnz
mov
push
or
adc
mov
out
enter
and
dec
cmp
inc
lret
sbb
jg
xchg
or
push
dec
outsb
sub
lcall
rcr
testl
adc
or
mov
jnp
insl
push
pop
push
mov
imul
jb
out
or
dec
lret
mov
dec
mov
cmc
add
movsl
iret
mov
push
js
lods
ss
clc
xchg
sti
and
dec
pusha
and
push
push
push
pop
icebp
jo
inc
int3
sub
inc
pop
pop
jnp
dec
push
loop
jg
loop
aad
shll
ss
fadds
stos
loop
fdivrl
mov
inc
jmp
sti
mov
jne
in
or
test
add
mov
mov
cwtl
fs
in
rclb
sahf
pop
add
loop
ljmp
stc
clc
sub
lcall
add
fdivrp
es
xor
lahf
mov
cmp
jl
sub
xlat
mov
fwait
mov
or
stos
hlt
fldenv
xchg
addr16
mov
mov
out
lahf
add
xor
adc
inc
cmp
lods
mov
mov
dec
pushf
movsl
test
jne
in
test
fs
std
js
imul
push
cmp
push
sti
in
in
sbb
pop
and
insb
cwtl
sarb
sbb
inc
push
pop
jb
dec
daa
jecxz
lods
ljmp
repz
repz
cs
cmp
dec
mov
int3
aam
pop
movsb
dec
cmpsl
jmp
push
jl
sbb
push
sub
jmp
movsb
fwait
add
mov
sub
bound
inc
mov
insl
fnstcw
and
mov
jne
out
ds
or
mov
fildll
or
stos
inc
jmp
imul
enter
jns
imul
fwait
test
xor
sub
mov
pusha
sahf
outsl
inc
jp
dec
pushf
cs
lret
aas
add
stos
xor
test
xchg
mov
stc
lahf
aad
decb
popa
mov
fiadds
jnp
jmp
dec
leave
andb
mov
cld
inc
mov
fdivrl
xlat
mov
insb
lahf
sbb
sarb
std
in
push
jp
or
icebp
addr16
out
mov
scas
das
pop
test
add
adc
cld
xor
push
sbb
pop
enter
out
out
pop
mov
push
and
bnd
stos
jbe
movsl
and
push
shlw
and
push
xchg
push
fcomip
jb
aas
stos
in
adc
or
pop
and
test
outsb
imul
mov
cmp
pop
pop
fs
mov
les
in
into
call
push
sbb
cmp
or
and
enter
leave
call
pushf
rcl
and
aad
cmpsb
inc
add
xor
mov
or
jl
inc
jb
sti
icebp
sarl
lock
not
add
push
sub
das
mulb
int
popa
lods
shl
sub
mov
repz
in
sbb
mov
pop
add
sub
mov
add
sbb
aam
mov
and
mov
sbb
sub
decb
aad
mov
jns
pusha
add
icebp
mov
pop
add
ret
ja
sub
add
pop
push
sub
and
push
cwtl
push
test
dec
lcall
pop
adc
out
adc
mov
mov
lea
xlat
sub
pop
xchg
pop
int3
into
add
pop
pop
aas
jp
push
loopne
out
int3
outsl
scas
adc
in
jo
lods
pop
jae
bound
add
mov
add
xor
inc
cld
cmpsb
pop
mov
jp
mov
lods
cmp
ss
popf
syscall
add
hlt
jge
es
ss
mov
je
jo
and
inc
and
arpl
rcrb
pop
xchg
xor
fisttpl
adc
xchg
shl
xchg
pop
jbe
push
incl
repz
pop
mov
imul
add
test
paddsw
clc
sbb
xor
or
xchg
mov
in
adc
cld
lock
in
stos
cmp
fstl
inc
loop
shlb
push
or
push
xchg
sbb
aas
cwtl
pop
sbb
rol
and
in
lret
icebp
push
pop
mov
int
test
pop
int3
xchg
pop
lret
jge
outsl
mov
mov
fucomip
enter
add
popa
cmp
lret
mov
arpl
push
mov
icebp
cmp
subl
out
into
xor
push
popa
xchg
scas
lcall
dec
dec
loop
movsl
adc
push
pop
pusha
loop
rolb
xchg
mov
sti
in
dec
sbb
or
xor
int
xor
fistpl
mov
sahf
xor
and
out
pop
fcoml
movsb
orb
frstpm(287
popa
xor
pop
shl
pop
jb
icebp
ret
mov
mov
xchg
into
loop
sub
imul
mov
mov
inc
cltd
push
outsl
mov
dec
xchg
jo
jmp
hlt
inc
shlb
notb
xchg
test
push
push
test
push
adc
pop
out
stos
push
cmpb
cltd
sbb
cwtl
jb
push
lcall
adc
mov
cmc
pop
mov
dec
iret
and
xor
int3
push
mov
fcomps
xchg
stc
add
popa
mov
int
sbb
fcmovbe
xchg
push
mov
outsb
fadds
add
fs
repnz
aas
adc
bound
push
jge
dec
xchg
xor
mov
loope
mov
adc
arpl
push
jge
mov
push
repz
scas
inc
in
stos
pushf
jb
js
lock
xor
dec
call
jecxz
fwait
mov
enter
ret
sub
daa
cld
and
test
pop
adc
pop
sbb
icebp
and
jbe
inc
shl
mov
and
sub
out
bound
shl
rep
in
pop
push
mov
mov
cli
xchg
fsqrt
hlt
out
cmp
add
outsb
outsb
push
imul
adc
std
movsl
lock
std
xchg
inc
cmpsb
push
push
push
decl
test
js
repnz
dec
iret
popa
out
mov
scas
fcoml
mov
aad
mov
dec
popf
jb
ljmp
adcl
cld
jne
pop
add
ds
movsb
push
fisubl
loope
adc
pop
add
or
aaa
mov
sub
shlw
pop
addr16
xchg
out
sbb
adc
sub
fmuls
xor
and
mov
xchg
push
aam
and
imul
sub
jns
mov
mov
sbb
jo
sub
sub
pop
jae
push
push
ret
idivl
inc
sbb
sub
ss
push
mov
mov
ret
ret
rolb
xchg
add
inc
ror
mov
mov
xchg
into
shl
gs
sbb
mov
fisubrs
iret
sub
aas
sbb
mov
xchg
andl
adc
add
ljmp
and
mov
lods
sbb
lods
lahf
xchg
xlat
rorl
jb
ss
rorl
inc
jnp
dec
add
loope
ret
ja
nop
xor
or
icebp
bound
sbb
imul
jno
add
mov
and
add
lds
xchg
dec
pop
lea
insl
and
negl
jbe
sub
mov
ds
push
notb
sbb
fidivl
mov
jnp
cld
or
cmp
inc
mov
out
xlat
add
push
std
insl
mov
dec
mov
cwtl
dec
jnp
aaa
cmpsb
movsb
adc
nop
or
das
imul
lcall
push
lock
push
hlt
sub
imul
xchg
or
mov
sbb
jle
lahf
pop
fnstsw
arpl
das
and
hlt
lods
push
daa
cmp
nop
jnp
scas
testl
fadd
cld
ret
mov
lret
mov
mov
sbb
test
xchg
and
pushf
ret
xchg
lret
test
addl
mov
or
aaa
enter
mov
push
adc
jg
or
jno
aam
data16
add
jge
and
pop
inc
jb
or
xchg
shll
nop
xchg
jb
sub
sub
nop
xchg
stos
xchg
xlat
pushl
cmpsl
xchg
imull
sti
push
xchg
gs
mov
ljmp
mov
mov
mov
dec
mov
inc
mov
sahf
fs
sub
mov
inc
xchg
adc
cmpsl
mov
pop
jno
mov
xor
shr
fwait
sbb
inc
dec
ds
jne
or
addr16
lock
mov
push
push
sub
fnstenv
or
add
sub
and
dec
dec
aam
outsl
ja
cmp
mov
mov
popf
pop
jne
push
xchg
jae
pushf
pop
sarb
js
test
xor
mov
cmp
mov
xor
cs
mov
or
mov
sti
cmc
add
cmp
mov
dec
mov
mov
inc
or
pop
dec
dec
xor
xlat
pop
or
cld
push
and
fnsave
jl
mov
nop
mov
and
fsubl
test
mov
clc
xchg
xchg
fcom
jg
sbb
ljmp
call
neg
xchg
jo
adc
sub
inc
cmp
sbb
jae
pop
push
inc
fs
or
lcall
movsb
and
fcmovnb
bound
mov
js
sbb
lret
popf
daa
mov
pop
pop
cwtl
xchg
ret
pop
inc
jae
xor
cli
or
or
out
scas
shlb
jb
dec
jo
pop
int3
loope
jecxz
lock
adc
stos
mov
sub
rcl
mov
push
jo
loopne
mov
stos
jmp
sbb
das
test
xor
jle
cmp
leave
and
mov
insl
xchg
iret
adc
sti
dec
and
mov
push
and
loope
int3
test
xchg
push
jg
lahf
ss
popa
addr16
shlb
cmp
add
arpl
int3
fwait
inc
fdivrs
lahf
inc
and
aam
adc
xor
lds
add
push
jge
xor
cmp
push
das
jbe,pt
mov
pop
adc
cld
mov
cmp
stos
lea
jp
sbb
jmp
adc
popf
add
cs
adc
addr16
jmp
test
push
bound
shlb
data16
aam
inc
fld
inc
into
lahf
hlt
in
repz
sbb
xor
inc
dec
test
in
call
aam
push
hlt
sub
das
fidivrs
add
adc
cmp
jmp
mov
xor
cmc
aaa
pushf
rcr
shlb
sarl
fbstp
cmp
push
popf
and
jg
mov
xor
addr16
pop
cld
xchg
lcall
insl
mov
ljmp
and
incl
xor
cmc
aad
sub
pop
shll
mov
orl
mov
push
enter
aam
mov
sbb
sarb
in
xchg
addb
adc
sub
cmp
cmp
stos
mov
xchg
mov
call
ljmp
lods
push
mov
jne
popa
movsw
xor
mov
in
and
jnp
test
out
xchg
inc
icebp
xchg
cwtl
sub
pop
pop
push
mov
dec
out
sub
xchg
testb
sub
jle
xor
jmp
and
cld
or
xor
add
and
sarb
imul
in
mov
mov
add
xchg
or
inc
mov
out
xchg
mov
nop
sahf
mov
cmc
mov
and
shlb
loopne
and
xchg
popf
xchg
xor
jno
xor
aas
test
mov
and
jne
in
int3
fcoms
push
mov
loopne
mov
and
fdivl
call
scas
stos
sub
jle
in
or
lret
push
in
test
out
push
cmc
add
pop
jge
aas
mov
push
aam
sahf
ss
fidivl
mov
mov
out
std
add
adc
xlat
loope
sub
xchg
cmovae
enter
and
cltd
mov
dec
aas
xor
imul
inc
dec
arpl
je
cmc
mov
jnp
inc
jnp
movsb
pop
pop
cmp
inc
adc
pop
aam
push
movl
pop
sub
and
jae
cwtl
pop
jnp,pn
cmp
add
leave
sub
in
add
cmp
imul
jl
push
leave
inc
fwait
cmp
add
xchg
add
sub
jbe
insl
pop
add
into
mov
mov
xor
inc
inc
out
lcall
mov
negl
pop
jle
in
lods
and
jl
or
jg
das
mov
int3
pop
das
frstor
mov
inc
xor
pusha
int3
repnz
mov
mov
sbb
sub
add
xchg
cmp
mov
cmpl
jb
mov
adc
mov
ljmp
int3
int3
xchg
adc
movsb
cmpl
in
jb
cmp
mov
add
fcmovnb
mov
xor
fnstsw
shll
lret
lret
cmpsl
xchg
icebp
fnstsw
fwait
mov
cmp
add
jns
testl
mov
jnp
inc
mov
in
mov
sbb
out
lcall
dec
adcb
pop
mov
mov
js
mov
fadds
ret
mov
shll
mov
jae
data16
add
mov
test
pop
negb
inc
out
andb
sbb
jecxz
mov
je
pop
mov
cmpsl
or
and
js
mov
sahf
mov
sub
jle
mov
mov
das
xor
fcmove
sub
xor
sub
push
adc
pop
pcmpeqd
push
sub
adc
jno
lock
imul
icebp
imul
adc
test
mov
fildl
stos
push
aam
outsl
jbe
cwtl
cltd
adc
push
jg
mov
sbb
fnstcw
in
subl
xor
addb
cmp
in
dec
mov
movl
pop
xor
mov
mov
push
nop
mov
lds
or
lods
mov
out
fcmovbe
mov
and
add
and
cmp
mov
inc
ja
pop
xor
outsl
fadds
xlat
imul
xor
in
and
in
cmpsb
in
mov
cmpsl
sub
and
jae
xchg
and
mov
cmp
faddl
rcrb
adc
insl
rcr
adc
aaa
frstor
mov
xlat
adc
jbe
or
stos
aad
das
and
data16
push
ljmp
mov
cltd
in
cwtl
int
clc
adc
and
dec
pop
adc
cmpsb
mov
cmc
xchg
pop
cs
dec
mov
daa
jecxz
jns
ja
mov
or
aad
lret
insb
xchg
xchg
imul
ljmp
imul
xchg
sti
daa
out
xchg
ss
shlb
sti
shlb
pop
inc
xchg
ror
loope
xchg
xchg
pop
jg
xchg
cmc
in
daa
mov
push
int3
fdivs
mov
into
outsl
sub
daa
xchg
rcrb
mov
mov
or
and
int3
incl
fbld
push
xor
mov
bswap
sub
lcall
fdivs
mov
sub
not
out
int3
loopne
push
pop
sbb
ret
jp
dec
hlt
repz
out
test
push
or
sub
out
push
movsb
mov
rolb
dec
cld
shrb
clc
aas
out
iret
fxam
lcall
add
mov
scas
push
xor
inc
dec
inc
into
shll
repz
ret
imul
pop
and
decl
in
cld
test
and
dec
jae
fildl
popf
xor
popa
movsl
pop
jmp
movsb
inc
dec
jl
movsl
and
dec
outsl
push
dec
dec
subb
test
cmpsl
jecxz
enter
mov
lods
adc
sub
xchg
pop
int
mov
imul
sbb
xchg
jmp
dec
fstpl
fwait
vmptrst
jns
push
popa
add
sbb
or
out
xchg
or
nop
mov
inc
adc
mov
push
push
push
ror
stc
aam
popf
popf
test
cmpsl
push
inc
ja
in
ds
add
mov
shlb
popa
cmp
and
test
jmp
dec
cmp
add
mov
xor
mov
xchg
adc
imul
push
pop
mov
xchg
mov
cmp
addb
das
call
mov
rcl
pop
hlt
or
add
lahf
fldcw
jbe
cmc
arpl
and
mov
xchg
lret
js
addr16
lcall
movl
or
repz
mov
lret
dec
mov
inc
inc
jmp
mov
dec
in
cmp
aas
ja
stos
loopne
cmpb
hlt
mov
cmp
flds
dec
jge
mov
std
inc
push
leave
inc
sbb
lret
daa
and
cmp
negb
sbbl
or
cltd
jnp
jecxz
clc
sub
les
and
pop
push
lods
push
xchg
fisttps
sbb
popf
mov
xor
popa
mov
mov
mov
xchg
mov
gs
cmp
stos
cli
aad
inc
xchg
and
jmp
and
cwtl
shll
cmp
out
mov
in
test
push
sub
loop
xlat
add
in
insb
sub
inc
into
int3
imul
mov
xchg
mov
pushf
push
inc
adc
pop
adc
cltd
push
fadds
aaa
adc
pop
les
outsb
xchg
lods
repnz
pop
call
in
push
xchg
sarl
movsl
gs
inc
lods
repz
fs
iret
inc
jmp
les
push
loop
xor
xchg
jo
or
pop
xchg
lea
mov
iret
add
pop
rcl
int3
inc
fstps
push
dec
sub
insb
out
xor
test
push
push
push
stc
sbb
stos
orl
or
inc
scas
sarb
cmp
pop
subb
jb
pop
sbb
push
shrl
add
aaa
mov
les
dec
imul
push
sarb
sub
pushf
ljmp
xor
iret
jl
sub
int3
mov
or
aas
aas
sahf
mov
int3
cld
jbe
push
ret
fadds
stos
pop
dec
les
adc
std
pop
call
adc
sbb
pop
popa
xchg
fisubl
push
jmp
hlt
test
jp
jle
dec
insl
outsl
mov
adc
push
push
sub
jmp
jmp
dec
cmpsl
insl
icebp
outsb
pop
and
pop
add
dec
pusha
fs
outsl
loopne
aam
mov
stc
gs
or
add
test
or
out
or
aam
mov
arpl
add
outsl
clc
fcoms
data16
pop
push
sbb
xchg
adcl
mov
in
daa
sahf
or
xchg
lcall
adc
and
and
popf
jno
inc
ja
scas
jmp
push
in
enter
leave
outsl
xor
xor
add
leave
inc
sub
inc
imul
aam
out
lret
xchg
mov
aaa
and
pop
xor
xchg
loop
xor
test
aas
shrb
cmp
les
mov
mov
and
mov
dec
mov
jge
leave
out
cmp
mov
inc
cwtl
xchg
ret
mov
sub
sbbb
jae
pop
adc
push
js
xor
out
xorl
push
mov
push
mov
add
mov
jecxz
and
mov
xchg
lds
iret
fdivs
cld
add
nop
or
jmp
pop
sub
adc
pusha
cmpsb
adc
aam
add
mov
cmpsl
daa
pushf
fwait
cmp
shlb
aas
sti
faddp
rol
and
repz
pop
jo
cmp
jle
ja
fisubs
outsb
pop
popf
mov
pop
mov
sbb
icebp
pop
jne
les
test
out
jge
rorl
mov
pop
jb
aaa
cltd
rcl
movsl
movsl
subb
sti
xchg
clc
xchg
xchg
mov
sbb
insb
and
dec
sub
cmp
xor
enter
scas
adc
xor
dec
je
stos
xchg
sub
xchg
rclb
test
enter
jne
mov
pusha
aad
outsl
rcl
push
push
sub
lcall
dec
inc
rorb
fsubl
pop
mov
daa
push
fnstenv
es
clc
mov
sbb
cmp
add
std
adc
mov
pusha
cld
mov
std
pop
std
gs
dec
cmp
insb
aaa
and
cmpsl
aad
cmp
push
pushf
popf
fdivrs
mov
jno
orl
cwtl
xchg
sbb
ret
inc
fidivrs
dec
maskmovq
testl
ret
or
stos
mov
repnz
mov
lret
lahf
dec
pop
cmpsb
mov
mov
mov
cmp
pop
xorl
lods
mov
les
sub
push
fwait
dec
loopne
dec
loop
sbb
xor
pop
fwait
jmp
sbb
pop
pop
add
jmp
call
fistps
xchg
inc
divb
and
pop
adc
mov
fistl
and
inc
loop
adc
sbbl
jecxz
jb
leave
clc
setb
repz
insb
jae
mov
movb
fists
push
and
into
mov
push
ljmp
sbb
mov
repz
insb
fisubl
jmp
mov
jae
inc
sub
add
rcrb
mov
lock
fisubs
testb
xchg
sub
jae
xchg
fiadds
push
xor
loopne
xor
dec
scas
push
and
in
lret
cwtl
iret
lea
jg
xor
sbb
ljmp
pop
inc
je
xchg
cmp
lret
mov
dec
enter
jnp
cld
les
jo
or
ds
fnstcw
pop
sbb
stos
add
lods
and
cld
jno
push
jle
shlb
in
iret
sub
loope
mov
mov
fisubrs
adc
sbb
inc
push
nop
daa
xor
pop
and
jl
pop
cltd
xor
pop
stc
bound
mov
iret
clc
mov
pop
shl
cmpsb
daa
sub
push
mov
aam
sub
cmp
lret
fildll
push
in
fdiv
sarb
js
jb
test
cmp
cmc
popf
mov
jg
int
and
inc
mov
stos
ret
mov
adc
xor
cwtl
rdtsc
shlb
test
outsl
bound
scas
adcl
jae
push
roll
int3
movsl
pop
loope
jmp
lock
nop
xchg
cmp
stos
adc
jl
jns
out
mov
mov
in
scas
insl
xchg
dec
push
inc
add
cld
xor
jl
mov
js
insl
and
fimull
rorl
push
adc
jecxz
rorb
pop
pop
int
push
stc
js
xchg
lahf
fwait
cli
rcrb
xchg
jbe
out
dec
sarb
aaa
xchg
lea
popf
call
cmp
or
aaa
aas
adc
jg
sub
imul
les
jae
inc
repnz
sbb
jmp
jns
cmp
add
and
jnp
out
loope
push
pop
in
fimuls
xor
fcmovnu
arpl
mov
mov
mov
dec
pop
mov
outsl
dec
or
mov
jns
mov
fcomp
and
mov
and
fistps
or
fs
jne
dec
loopne
dec
je
lods
push
inc
push
push
je
negb
jnp
jne
cld
mov
pop
sub
jmp
jno
shl
jecxz
cmp
gs
mov
xchg
inc
shll
fisttps
cmp
sub
mov
scas
xchg
mov
gs
dec
jno
dec
dec
inc
adc
cmp
daa
sub
sbb
push
pop
add
xor
or
fsubrs
add
aam
test
push
hlt
sbb
out
xrelease
ret
jge
cmpsl
push
gs
clc
andl
xlat
jne
inc
test
addb
push
xchg
mov
aad
out
cmp
jno
jmp
push
or
pushf
jmp
stos
add
daa
lds
and
or
je
add
lods
adc
ror
sbb
cld
out
mov
xchg
repz
jge
orl
mov
ret
xor
pushf
inc
xor
shrl
xor
cld
inc
pop
in
scas
push
cli
aad
test
int
decb
pusha
pop
and
rolb
xchg
ret
test
movb
in
popa
and
push
mov
sub
sub
sahf
mov
lods
das
movsl
in
push
in
mov
pop
leave
jb
push
test
mov
lock
adc
xor
lods
cli
mov
mov
mov
sbb
xchg
loopne
faddl
and
inc
loope
repz
lret
cmp
bound
mov
sbb
jle
or
adc
and
imul
dec
rorl
sbb
mov
jle
notl
inc
xchg
and
jge
test
std
ret
inc
lods
cmp
sub
gs
mov
push
xchg
and
out
pop
aam
pop
in
cmp
lods
mov
mov
imul
push
pop
push
fwait
cmp
js
and
sub
inc
ja
fadds
mov
push
mov
aaa
pop
out
sarb
pop
fisubl
repnz
lock
and
lret
lret
lock
ljmp
cmp
add
popf
loope
cmpsl
jmp
inc
add
pop
add
add
cli
lock
movsb
pop
adc
xor
pushf
mov
sub
sub
fldcw
adc
movsl
icebp
gs
nop
outsb
jmp
add
cmc
push
dec
mov
add
mov
popa
arpl
mov
push
xor
shr
test
sbb
fwait
jne
sbb
push
pusha
repz
xchg
lahf
push
cmpsl
pop
jmp
out
xor
ljmp
push
repz
xor
dec
or
pusha
push
inc
mov
sub
in
rorl
stos
jecxz
sub
movsl
in
pop
add
hlt
stos
add
push
dec
fwait
mov
call
fmul
xor
insl
vphaddbq
fistl
daa
scas
adc
push
imul
iret
fcomip
insl
data16
pop
test
mov
fst
pop
dec
popl
sti
or
adc
mov
lods
stc
inc
sar
int
scas
mov
outsl
mov
adc
inc
and
sub
cmp
addr16
push
and
lock
nop
mov
dec
cmp
in
out
sbb
dec
mov
sarl
ljmp
xchg
add
cwtl
mov
pop
inc
cli
xchg
scas
div
lret
jae
aam
ret
cld
xlat
sub
pop
lods
lock
lods
lahf
imul
dec
fdiv
hlt
xor
jbe
cli
mov
mov
mov
cmp
in
jl
loop
cmp
pop
mov
adc
push
adc
push
or
mov
inc
jne
lea
cld
shl
ljmp
mov
mov
test
jl
jne
into
jl
mov
dec
popa
daa
fldenv
lods
and
dec
mov
sub
jns
jno
xchg
mov
mov
and
jo
cs
std
inc
pop
js
mov
fmulp
ljmp
fcmovne
ja
dec
fildll
sahf
das
jl
push
jno
cltd
sub
ret
xor
push
inc
mov
les
stos
mov
fdivr
sbb
dec
push
jl
out
scas
cmp
jb
xchg
lods
add
jl
cmpsl
push
mov
xor
sub
mov
pop
and
sub
cmp
push
das
mov
test
je
test
sbb
out
push
cmpsb
cltd
pushf
mov
dec
jmp
and
ljmp
stc
sbb
push
lcall
push
sub
mov
shr
inc
fbstp
lcall
mov
sub
in
mov
adc
pop
test
cmpsl
daa
dec
xchg
or
or
cmpl
sub
es
push
mov
sbb
ror
cmpsl
sub
and
xor
or
testb
cmp
sub
sub
aam
dec
addr16
faddp
jge
dec
mov
inc
cmp
inc
sbb
inc
fs
and
sub
or
adc
dec
lods
or
push
dec
mov
arpl
or
daa
mov
out
ret
inc
and
repz
and
pop
mov
incb
es
add
add
or
push
ss
ret
fbld
call
es
jne
test
push
xchg
pusha
loopne
aam
fnstsw
jnp
insb
xchg
pop
xor
xor
sbb
and
xor
lahf
stc
add
cmp
sbb
es
das
shl
pushf
inc
aas
pop
mov
jbe
mov
insb
insb
and
fcomps
lahf
pop
adc
push
jmp
xor
jae
stos
int
xlat
movsb
xor
mov
inc
loopne
lods
jns
aam
rorl
dec
mov
cmp
lods
or
pusha
inc
call
pop
jecxz
or
jo
xchg
sbb
push
add
sub
cmp
adc
mov
inc
inc
lret
stos
mov
insl
jle
in
popa
sbbb
dec
int3
xchg
jbe
sub
pop
xchg
in
dec
push
xlat
in
dec
rolb
push
bound
ljmp
mov
jg
mov
push
xchg
xchg
push
out
dec
inc
enter
mov
xchg
dec
lret
mov
sub
adc
jb
stos
in
bound
shrl
add
jo
icebp
fs
ret
in
mov
lods
loopne
ret
fcomps
fnstcw
in
test
push
xor
cli
popa
enter
mov
and
dec
or
bound
lods
mov
addl
inc
add
or
mov
mov
mov
mov
mov
sub
sub
lea
or
mov
mov
mov
sbb
mov
xor
add
mov
mov
sbb
mov
mov
sbbl
mov
orl
add
push
mov
jmp
popa
dec
jmp
mov
jnp
js
cmc
aad
cmp
jp
pop
jp
bound
insb
mov
dec
pop
and
push
mov
test
dec
mov
ret
inc
jae
sub
sbb
dec
sbb
xchg
and
ret
mov
mov
lcall
cmp
andl
xor
cli
int3
out
sbb
jae
repz
call
imull
lods
fsubl
clc
jge
dec
mov
sbb
mov
push
lret
and
sbb
or
stc
aad
pop
bound
and
js
sti
adc
mov
xchg
mov
or
mov
push
js
dec
or
xchg
fisubl
cmp
add
mov
jle
nop
cmp
xor
mov
pop
fwait
lods
mov
dec
cli
popa
xor
ds
inc
je
sub
daa
roll
or
call
cmove
aad
scas
pop
aam
mov
pop
mov
cld
cmp
sub
push
sub
or
lcall
insb
mov
repz
and
sbb
sbb
aad
cmpsl
lea
lret
insl
jg
push
mov
jmp
and
test
shr
cmpsb
or
jbe
add
jmp
daa
imul
mov
add
lock
pop
mov
cmovnp
dec
incl
jno
pop
adcl
sub
mov
clc
and
adc
loopne
xor
pusha
pop
xchg
mov
rolb
jne
lret
push
fnstsw
inc
stos
pop
cmp
stos
xor
lods
int3
lds
adc
mov
ffree
fwait
jns
pop
sbb
loope
adc
sub
lods
imul
test
pop
clc
sbb
push
in
fnstenv
mov
cmpsl
cmp
jp
cmp
insl
repz
or
jecxz
sub
jbe
mov
push
adc
xchg
fisttps
shl
or
mov
dec
jbe
cld
popa
std
jecxz
scas
cmc
cmc
mov
push
dec
test
and
dec
hlt
ljmp
nop
mov
stos
sbb
ja
pop
mov
out
jae
push
jno
mov
in
jns
jo
push
adc
fcompl
repnz
mov
jmp
sub
sub
and
xchg
jno
out
addr16
pop
push
push
clc
push
repnz
mov
mov
es
frstor
push
ficompl
jg
xor
stc
dec
enter
xor
cmpl
xchg
cmpsb
aas
push
add
xchg
inc
push
mov
pop
xor
lods
push
fcomps
cwtl
psubb
adc
test
int3
adc
dec
inc
arpl
clc
shrl
push
arpl
xor
in
repnz
inc
xor
xorb
divb
dec
cmp
and
cmpsb
dec
les
lret
negl
jmp
and
rolb
ret
push
jbe
cmp
sub
das
jnp
jb
test
xlat
lahf
push
mov
dec
dec
pop
addb
add
push
or
xchg
dec
ljmp
jnp
ret
repnz
fs
mov
add
dec
xchg
sub
or
inc
add
push
in
lods
ret
jmp
inc
repnz
pusha
stc
sub
shlb
or
inc
or
dec
adcb
ljmp
pop
pop
cmp
xchg
xchg
push
pop
adc
cli
movsl
mov
push
outsl
mov
shlb
xor
jns
gs
mov
jno
lcall
pop
xor
push
lock
loop
fildl
stc
js
sbb
sub
ret
and
fcoms
outsb
cmp
xor
and
push
int
pop
xlat
cmpsl
idivl
imul
cmp
jae
shufps
and
stos
repnz
mov
xchg
mov
lock
jo
daa
leave
mov
sub
lods
test
xor
test
pop
xchg
lcall
adc
clc
jnp
cltd
outsw
mov
xchg
cld
fxch
inc
xchg
sub
into
ljmp
sahf
adc
jle
lret
pop
dec
addr16
loope
mov
and
ljmp
loope
and
jbe
lret
daa
push
or
mov
cmpsb
les
jp
lret
push
inc
inc
jnp
xchg
repz
mov
jb
jns
add
push
or
mov
lahf
sbb
mov
loopne
lds
push
mov
sti
adc
sbb
sbbb
sub
lds
imul
mov
lea
aad
jle
mov
push
int
addr16
xor
adcl
ss
sahf
jg
das
jno
mov
adc
repnz
in
out
mov
in
outsb
scas
dec
sarb
mov
adc
iret
xchg
jb
lods
push
push
adc
js
xor
or
add
or
xlat
in
mov
xchg
in
jmp
cmc
popa
stos
adc
xor
jecxz
int
jg
add
fs
in
movsl
pop
cld
int3
inc
jae
cmc
das
fwait
sbb
and
loope
xchg
pop
push
pop
lahf
mov
push
xor
and
int3
cwtl
pop
mov
insl
dec
movsl
sbb
in
add
adc
dec
lea
jno
dec
lcall
pop
dec
mov
adc
data16
in
mov
adc
xor
sub
dec
xor
pop
je
fsubs
fidivrs
into
lods
mov
pop
nop
subb
test
ja
mov
cli
fnstenv
shlb
adc
pop
movb
lret
xor
mov
add
mov
dec
jns
les
or
addr16
dec
jmp
icebp
mov
rol
loope
push
stc
fstpt
sbb
shlb
rorb
inc
pop
mov
xor
sbb
pop
adc
or
adc
in
rcll
xchg
cmp
inc
mov
cwtl
into
fsubrp
cmc
mov
shll
fldt
dec
ja
ds
lock
dec
jl
cld
pop
dec
sbb
cmc
cmp
mov
mov
mov
push
lock
mov
xchg
popf
lcall
mul
push
and
dec
sbb
dec
xor
pop
add
fidivs
mov
add
adc
adc
add
repnz
rcrl
adc
insl
ret
popa
push
stos
sbb
imul
jnp
test
pop
xchg
fcoms
mov
mov
mov
outsb
adc
xor
into
and
je
data16
ljmp
xor
xchg
call
push
pop
push
outsb
mov
cmp
xchg
arpl
dec
or
cmp
add
push
add
divl
sub
mov
cmp
out
jno
daa
popf
inc
repz
jo
sti
pop
out
jo
rorl
lock
sbb
pop
mov
sti
pusha
daa
jns
call
pop
pop
sti
sarl
aad
inc
sbb
mov
push
add
nop
mov
mov
or
sbbl
je
mov
push
pop
jecxz
mov
fsubl
push
and
arpl
sahf
mov
insl
fwait
sbb
aam
lods
sub
inc
push
pusha
xor
rol
int3
sub
cwtl
std
xor
xlat
add
add
or
pop
push
jb
dec
pop
mov
push
sbb
xchg
call
sarb
lock
ss
mov
fwait
cltd
add
popf
divl
test
lcall
or
xchg
xchg
cmp
jnp
fs
icebp
int3
mov
mov
aad
lds
aaa
inc
pop
int3
adcb
insl
adc
sti
enter
mov
mov
or
insb
push
loop
add
jmp
sbb
xor
jecxz
decb
add
hlt
cmp
or
jo
xchg
jl
mov
incb
pop
aas
xor
ljmp
mov
inc
int
push
xor
or
lock
dec
loope
and
into
lods
sbb
lods
iret
mov
xchg
stc
fisttpl
inc
sub
push
testl
inc
outsb
jmp
orl
addr16
xchg
insl
movsl
cmp
popa
and
in
xlat
jnp
pushl
adc
add
es
sub
js
push
insb
mov
or
icebp
inc
xchg
leave
jmp
dec
ret
fisubl
daa
ljmp
adc
mov
repz
push
int
xchg
push
sbb
pop
ss
sbb
imul
mov
dec
sub
adc
cmp
lds
pop
in
das
sub
jns
mov
mov
xchg
js
mov
jno
adc
outsb
mov
xchg
loopne
xchg
jge
sbb
jne
iret
jmp
xchg
pop
fs
iret
or
pop
push
push
sub
mov
daa
dec
notl
adc
andl
loop
sub
nop
ja
repnz
sbb
hlt
sbb
les
mov
into
or
pop
lods
mov
loop
out
or
shlb
inc
loop
je
rolb
mov
lock
shr
shlb
jp
sti
sbb
inc
pop
push
ds
push
subl
loope
cli
clc
sbb
std
lret
adc
cmc
and
out
test
arpl
add
cli
iret
call
arpl
stos
adc
ja
dec
xor
cwtl
ret
fcoms
mov
bound
out
pop
jmp
je
stc
sbb
pop
sub
sbb
lret
pushf
insl
mov
ds
inc
cli
adc
inc
sub
loope
xor
or
dec
xor
xor
adc
adc
mov
push
mov
movaps
lods
das
je
sub
rorl
mov
mov
sahf
pop
adc
loopne
aaa
test
jns
xchg
std
mov
shlb
mov
pop
sti
xchg
xor
xchg
dec
mov
negl
adc
sahf
pusha
jl
lret
and
xor
enter
ret
rcl
push
mov
sbb
add
shll
and
out
mov
popa
dec
lea
mov
popa
cmpsb
push
jle
cs
jno
xor
loopne
dec
add
imul
inc
xchg
in
or
dec
xchg
roll
sbb
ljmp
jmp
arpl
lods
fstpt
mov
jmp
loopne
xchg
xor
orl
enter
add
mov
or
icebp
shll
loop
xor
dec
mov
sbb
mov
scas
jae
dec
mov
xchg
dec
in
adc
add
jp
stos
or
divb
sub
pop
vshufps
push
and
cli
shrb
xchg
stos
ljmp
adc
mov
bound
mov
jmp
push
cld
dec
and
jbe
mov
iret
jae
sbb
loop
lret
jb
push
push
cmp
jnp
arpl
sub
stos
jp
xchg
add
push
jnp
hlt
add
mov
lahf
test
es
cmp
pop
mov
mov
jmp
mov
das
popf
ljmp
shrb
xor
add
pop
mov
loop
in
outsl
jecxz
mov
int3
pop
sbb
push
pop
sbb
mov
daa
xor
xor
jnp
xchg
mov
sub
mov
adc
das
aam
push
rcl
into
jne
dec
loope
ljmp
loop
shll
mov
adc
jg
cmp
ficompl
movsb
int
push
hlt
cmp
shlb
push
pop
and
dec
sbb
loope
adc
repz
add
ret
jp
mov
mov
and
xor
dec
jnp
xor
sub
mov
add
pushf
xor
popa
stos
and
fwait
mov
out
dec
jnp
jmp
std
ljmp
xchg
pop
lds
sbb
mov
or
add
cmp
cmp
push
or
mov
in
enter
sub
fsubr
jecxz
pop
es
and
sbb
jmp
stos
mov
dec
jl
loopne
jg
cmpb
pop
nop
sbb
or
push
mov
adc
std
cmp
cmp
jg
cmovp
pop
pusha
cmp
sub
add
lcall
pusha
xor
lret
rcll
sbb
ljmp
fistpl
jnp
push
mov
xor
xchg
sub
int
xchg
je
testl
mov
mov
push
cmp
sbb
lock
jbe
sub
mov
movl
mov
loope
lahf
mov
inc
jbe
mov
mov
cmp
pop
push
push
jecxz
sbb
arpl
rcll
iret
jo
and
cmp
movsl
mov
pop
and
enter
or
pop
mov
xor
dec
add
les
add
fstl
das
xor
pop
pop
jge
inc
add
data16
inc
jp
lock
imul
ret
call
cmp
in
call
aam
js
xchg
repz
aas
jae
fucom
sub
pop
aad
jno
jmp
push
scas
push
mov
xor
std
inc
ja
out
jb
loop
sbb
adcl
in
negl
pop
stos
xchg
sub
jecxz
mov
inc
cmc
mov
sbb
mov
push
out
ds
stos
mov
adc
mov
sti
mov
dec
sub
pop
lret
mov
testl
pusha
pop
mov
sbb
inc
adc
movsl
adc
fwait
mov
xor
ja
adcl
sub
aas
pop
adcb
jle
cmpsb
shlb
cwtl
int
out
dec
push
pop
das
xor
mov
inc
mov
jmp
xor
push
jmp
sbbb
mov
mov
andb
sub
mov
loopne
cld
cld
adc
cltd
pusha
mov
push
or
repz
inc
pop
pop
mov
lock
push
stc
pushw
cmp
dec
dec
push
mov
shrb
enter
stos
cmpsb
mov
call
loopne
cli
xor
jp
lea
cld
fs
mov
lods
neg
xchg
in
aam
inc
xchg
test
mov
xor
iret
sub
loopne
jbe
adc
jg
lcall
mov
popa
or
aad
fildl
sub
call
jge
js
cli
js
in
pop
aam
gs
std
test
jmp
mull
mov
subb
jnp
jae
xor
inc
in
xor
rcrb
jbe
mov
aam
pop
or
stos
clc
sbb
in
aam
inc
jnp
cmc
xor
addb
enter
sbb
xchg
and
pop
mov
push
xchg
cmovb
push
xor
or
pop
inc
popf
sbb
nop
rcrl
or
stc
mov
sti
test
mov
mov
mov
dec
dec
jnp
ret
das
sbb
and
subb
and
test
push
mov
jl,pn
inc
lcall
into
fcmovbe
dec
into
fidivrl
jns
aad
int3
or
call
add
lods
std
add
push
bound
push
cli
mov
inc
and
pop
mov
or
add
cmp
jge
lret
cmp
mov
pop
xor
loopne
out
mov
std
ds
and
dec
add
inc
sub
repz
sbb
pop
mov
jae
ret
and
es
inc
loope
out
jecxz
push
sahf
loop
scas
dec
sub
stos
pop
ja
cld
dec
cmc
lret
pop
repz
mov
add
pop
jbe
mov
aam
dec
into
add
sti
mov
pop
fdivp
jbe
push
sbb
lods
ss
arpl
push
stc
sub
pop
ja
scas
mov
rorl
adc
into
and
adc
ret
xchg
cmp
cmp
lea
sub
mov
out
data16
xchg
pushf
add
jae
and
cwtl
out
insb
sub
and
push
dec
mov
pusha
faddl
mov
sbbb
or
jmp
mov
lret
idiv
outsb
add
cmpsb
add
imul
data16
daa
data16
movsb
xchg
stos
addr16
mov
test
or
stc
jo
jb
sub
or
jbe
sub
imul
shll
pop
jae
mov
lret
mov
jge
fstl
dec
cli
repz
inc
lods
push
add
in
jg
int
xchg
xchg
psubsb
add
add
addr16
mov
daa
xchg
push
push
pop
push
lods
jno
sbb
push
add
scas
mov
push
hlt
popf
fimull
xor
fnsave
in
in
int
sahf
jmp
xchg
and
test
fucomi
and
dec
insb
mov
jno
xchg
add
out
jnp
test
push
and
movsb
xor
cmp
and
jge
adc
jno
aam
in
xchg
fiaddl
imul
dec
or
inc
or
cmp
mov
xchg
arpl
std
mov
insb
sub
pop
jne
or
out
and
pop
inc
int3
orb
lods
push
mov
out
push
push
das
hlt
add
push
in
js
fisttpl
out
sbb
stos
dec
cmp
popa
cmpsl
das
jl
mov
dec
push
ret
cli
sub
adc
inc
jbe
xchg
inc
push
xlat
xchg
jg
mov
or
sub
int
popa
mov
xlat
std
stos
stc
cmpb
pop
imul
test
shl
dec
lods
push
xchg
lcall
inc
outsb
test
sub
mov
xor
sub
cmpl
int3
and
in
cli
test
ss
cmp
pop
xchg
lahf
pop
adc
inc
mov
aam
push
xor
insb
test
inc
mov
jo
std
xchg
inc
inc
mov
add
push
adc
in
pusha
sub
sub
jp
dec
cwtl
stos
ret
push
jl
in
inc
ds
mov
add
std
mov
jge
xlat
mov
inc
clc
add
leave
mov
divl
je
inc
jge
xor
mov
inc
mov
cmp
ds
push
movsl
inc
lret
push
lcall
or
dec
cltd
insl
iret
test
sbb
mov
push
xor
mov
sub
push
push
comiss
sbb
insb
add
test
fdivl
pop
jp
mov
cmp
icebp
es
push
cld
push
shl
out
xchg
sbb
sub
stos
mov
cmp
pop
mov
movsl
dec
jnp
mov
sbb
mov
sbb
test
fwait
sub
jmp
mov
fildll
cmp
dec
xchg
mov
push
aam
mov
mov
cld
xchg
sbb
mov
sbb
adc
call
out
adc
ss
sub
out
jbe
and
cmp
or
frstor
daa
div
add
inc
pop
sub
std
movsl
fnsave
mov
shrl
scas
push
popf
or
mov
pop
pop
dec
and
pop
push
lsl
sbb
fbld
ljmp
lret
and
negl
lahf
dec
out
scas
mov
xor
and
aam
rcl
add
sbb
cmp
dec
gs
adc
jg
jnp
shlb
xchg
fdivr
pop
xor
dec
loopne
inc
mov
int3
xor
pop
mov
frstor
sti
and
mov
sbb
pop
fisubrs
ljmp
xor
lret
jecxz
jns
popf
mov
dec
imul
dec
fidivs
mov
jmp
pop
or
push
sarl
add
push
cmp
sub
cmp
inc
push
jns
je
test
sub
dec
mov
dec
in
cmpsb
out
stc
jge
push
fisubrs
dec
and
lods
cmpl
lahf
pop
jns
cli
lods
adc
int
es
outsl
ljmp
loopne
imul
jl
shl
lods
fs
das
inc
in
or
xchg
xorl
dec
outsl
jo
movsb
push
xchg
ds
addb
xchg
or
push
iret
mov
pop
lea
add
inc
sbb
sub
out
xchg
sti
rorb
rcrl
or
jecxz
push
lea
call
xor
mov
lock
push
fwait
mov
or
mov
movsb
adc
inc
insb
stc
mov
hlt
fcmovbe
add
and
sub
jle
add
xor
pop
repnz
loopw
jp
or
cmp
pop
inc
lret
push
daa
fimull
sub
mov
pop
js
cmp
or
pop
jp
or
and
movl
mov
add
jge
sbb
sbb
dec
adc
sub
sbb
sbb
mov
enter
ja
jp
xor
scas
push
jns
jl
adc
xchg
adc
sub
mov
test
repnz
mov
cmp
inc
cmp
mov
add
add
imul
lods
insl
and
push
fwait
and
aaa
aas
pusha
addb
jp
add
es
inc
jecxz
xor
int3
push
sub
bound
push
jbe
fs
mov
push
mov
adc
call
add
push
jb
xor
mulb
xchg
sti
xlat
fmulp
inc
pop
sbb
pop
mov
out
out
subl
add
std
or
sbb
mov
test
popa
mov
and
notb
adc
shr
push
xlat
mov
repz
gs
xchg
cmpsb
xchg
xchg
clc
xor
int
in
and
xchg
or
xlat
lods
and
shrb
dec
sub
or
xlat
cltd
bound
lods
sahf
push
pop
lods
mov
xlat
jp
inc
pop
push
or
test
cltd
pop
mov
sbb
pop
aaa
mov
mov
and
mov
pusha
jge
or
mov
and
push
mov
shll
cld
mov
jae
jge
jno
mov
subb
mov
ret
pop
jmp
cwtl
push
adc
gs
jb
stos
mov
adc
sub
ljmp
or
imul
testl
mov
or
lcall
xor
mov
xor
aad
lds
push
ficoms
outsb
adc
lret
call
outsb
push
xchg
or
rorb
imul
sub
imul
mov
loope
stos
lahf
cmpsb
cld
inc
daa
lahf
and
mov
xor
adc
xchg
bound
push
in
push
out
cld
mov
jmp
arpl
lcall
fistl
cmpsl
sub
sahf
lock
push
cmpl
jge
dec
jb
sbb
mov
repnz
jle
dec
xchg
sub
add
mov
xchg
cli
out
test
add
pop
fidivs
divb
mov
lods
and
or
sbb
test
sub
daa
xchg
push
push
xchg
ljmp
mov
pop
leave
jb
or
addl
fdivs
xchg
xlat
je
adc
jnp
fnstcw
push
divl
nop
jo
js
adc
ds
and
dec
nop
mov
cmp
pushf
pop
push
nop
mov
nop
and
xor
loopne
and
push
out
gs
cltd
jge
cmp
std
pop
sahf
jnp
or
sub
lods
add
nop
lods
leave
repz
fists
pop
scas
cmp
jp
arpl
pop
ja
imul
xor
fidivrl
and
dec
xchg
push
sbb
adc
xor
into
js
insb
jo
dec
or
shll
and
or
mov
mov
fldt
push
push
loop
adc
lock
test
sahf
imull
dec
inc
fcmovbe
popf
or
jmp
in
xor
mov
dec
jbe
inc
outsb
xlat
adc
jge
cmp
insb
sub
mov
cli
or
aad
jge
xorb
lahf
dec
scas
jg
or
negl
dec
cmp
pushf
mov
addl
xlat
sub
cwtl
iret
shll
cltd
xchg
xor
cmp
fidivrs
ret
dec
rorl
fmull
fcmovb
xor
and
loop
mov
ljmp
mov
push
int
jle
mov
jno
push
pop
inc
jle
add
rcrl
xchg
jne
repz
lahf
mov
mov
or
add
lret
dec
fwait
bnd
dec
jecxz
dec
cld
ss
es
iret
nop
xchg
mov
iret
sbbl
xlat
mov
jne
es
bound
ds
mov
push
xor
out
mov
pop
or
xor
mov
cmp
sbb
mov
push
pop
add
adc
les
je
outsl
or
je
jge
addr16
pop
frstor
sbb
cmp
xchg
mov
mov
imul
mov
in
dec
scas
addr16
in
ret
rolb
pop
jo,pn
sbb
jnp
jns
in
lret
adc
jg
jb
add
inc
push
mov
push
cmp
push
inc
movups
sbb
rorb
mov
and
add
jg
aad
adc
dec
push
outsl
mov
fs
lds
xchg
les
push
fldt
fdivrl
das
xchg
in
andb
shlb
call
jecxz
fidivrl
push
lds
aad
jge
ret
inc
and
pop
xchg
out
mov
mov
aad
push
inc
scas
jae
pop
loop
pop
push
adc
add
gs
stos
arpl
add
sti
or
je
stc
sub
sub
pop
jno
pusha
add
bound
adc
xchg
call
test
movsl
test
fistpll
iret
adc
aad
mov
es
rclb
jecxz
jl
adc
push
lock
push
sbb
icebp
push
jno
test
scas
dec
push
int3
icebp
cltd
stos
inc
jmp
fstl
decb
test
scas
lods
xchg
xor
in
call
movsb
xor
mov
bound
cmp
negl
fidivrs
cwtl
sub
inc
stos
aad
push
and
fdivrl
push
subb
xor
lcall
mov
ret
test
fidivs
pop
out
jne
jae
arpl
aas
sub
std
call
shll
cmpsl
adc
dec
insb
mov
test
decl
cmpsl
arpl
cmp
inc
push
push
inc
cmp
push
jae,pn
adc
add
mov
fldcw
lea
sub
popa
movb
out
cmc
xchg
xor
es
adc
lret
insl
ljmp
ftst
dec
xchg
push
dec
notl
or
loopne
push
testb
cld
sub
popl
jno
repz
mov
ret
in
fadd
pop
pushf
or
syscall
repnz
adcl
adc
inc
add
xchg
mov
jge
in
mov
dec
int3
xchg
sarb
sbb
movsb
lds
push
ret
lea
aad
ds
movsl
xchg
jnp
add
fsubl
mov
or
in
es
and
pop
cmpb
test
fisubs
arpl
mov
imul
xchg
push
fcmove
mov
xchg
fistps
jg
shlb
mov
ljmp
aam
in
scas
pop
mov
jb
jno
add
mov
cmc
sbb
cmpsl
inc
fstpt
or
jne
scas
mov
sahf
ss
cs
je
mov
leave
subb
jg
in
int
mov
fnstsw
mov
push
les
mov
mov
or
cli
loope
dec
add
addr16
dec
mov
xorl
inc
test
sbb
or
inc
push
add
das
jnp
out
dec
cmp
mov
daa
xchg
call
inc
js
push
pop
jne
dec
push
icebp
dec
push
pop
jbe
push
in
mov
ss
mov
lret
insb
inc
test
mov
xlat
lods
cmp
mov
les
mov
mov
mov
roll
clc
xchg
mov
loopne
sub
or
dec
jae
sub
call
jg
into
lcall
popa
cltd
in
xlat
jge
aas
ret
dec
loope
fidivrs
push
cmpsl
js
bnd
fildl
dec
lea
sub
mov
xchg
jb
rorl
cmp
xchg
and
lods
ja
mov
jns
inc
mov
push
mov
mov
daa
fists
cmp
cwtl
loopne
nop
pop
out
pop
or
sbb
inc
fimuls
push
push
lret
imul
sbb
or
xchg
imull
in
mov
jmp
mov
pop
std
xchg
sub
es
int3
fidivl
shlb
fldl
mov
mov
mov
xor
test
in
popf
cmp
and
mov
cmp
ds
rcrb
loop
pop
mov
xor
movsb
mov
pusha
xchg
std
jae
push
lahf
push
mov
out
mov
sarb
hlt
stos
xchg
aad
testl
adcl
call
shrb
repz
push
cmp
and
test
aaa
sarl
lret
rcl
jno
test
lock
sbb
adc
add
ja
lahf
mov
xor
cmp
js
imul
xchg
call
lock
lea
lcall
mov
in
xor
daa
fldcw
xchg
into
popf
mov
ja
pusha
mov
xchg
loope
out
jl
das
xorb
dec
subl
jb
iret
xor
ds
lea
mov
xor
ror
sub
xchg
rcrb
ds
mov
ja
paddusb
imul
mov
inc
jno
mov
jmp
jge
xor
push
jecxz
movsl
jo,pn
mov
mov
cmpsl
lea
inc
scas
push
pop
outsl
adc
jno
int3
bound
dec
mov
inc
lea
adc
repz
insl
sbb
imul
sub
mov
cmpsl
mov
les
push
xlat
inc
insl
jns
sbb
mov
jno
aaa
push
xor
sub
loopne,pt
jge
jno
or
sbb
negb
xchg
cmpsb
jg
and
jmp
cmp
inc
and
xlat
push
je
sbb
jne
lods
in
insb
orl
cs
dec
cwtl
test
push
xor
call
or
and
add
xchg
and
mov
lock
sbbb
in
dec
mov
jnp
dec
dec
shlb
enter
loopne
mov
mov
movl
cmpl
je
cmpl
jne
pushl
push
push
push
pushl
pushl
call
cmpl
jne
xor
xor
dec
mov
mov
dec
mov
jmp
mov
or
xor
xor
mov
orl
add
movl
cmp
je
movl
mov
jmp
movl
mov
cmp
movl
jne
push
jmp
mov
mov
movl
cmp
jne
mov
or
mov
mov
xor
subl
add
mov
and
mov
neg
mov
mov
xorl
xor
sbbl
jmp
push
mov
notl
lahf
aaa
jmp
jp
pop
jp
add
and
in
xchg
mov
outsb
or
inc
add
jmp
xchg
sbb
test
dec
mov
fldl
enter
out
fs
jl
lahf
iret
cmpsl
pop
js
fwait
xchg
mov
insb
push
xor
cmp
aam
in
das
adc
js
mov
cmp
arpl
xchg
out
adc
pop
lcall
xor
js
shll
popf
add
popf
sahf
aaa
mov
in
xor
jbe
mov
xlat
cli
outsl
sub
fucomip
adc
mov
mov
sub
movsb
sbb
cwtl
stos
and
insl
or
push
cmp
pop
ret
fdivl
je
jmp
mov
mov
ret
scas
mov
sbb
popa
fldt
int3
add
jae
jae
les
pop
mov
aaa
fdivs
cmc
adc
inc
mov
repnz
inc
pop
adc
pop
cmp
sbb
ror
or
sub
loop
and
test
sub
sbb
push
mov
xchg
cwtl
lahf
cmc
in
movsl
mov
lahf
ret
fsubl
sbb
xchg
cmp
aaa
imul
push
adc
pop
sbb
pusha
mov
mov
jge
repz
sbb
addb
shl
pop
xchg
inc
sbb
je
es
movsl
mov
sti
aam
popa
scas
loopne
popa
mov
adc
and
aad
sub
xor
gs
push
pop
and
mov
movsl
call
cmpsb
dec
or
sbb
inc
hlt
jno
inc
negb
mov
jbe
movsl
test
mov
push
std
and
xchg
push
cmp
js
sahf
icebp
jmp
sbbl
mov
jns
mov
addr16
ljmp
les
rcrb
xchg
pop
f2xm1
inc
iret
shlb
call
imul
sbb
bound
imul
xor
mov
stc
pop
jg
pushw
mov
mov
mov
test
jns
loopne,pn
adc
adc
mov
shl
dec
nop
jo
ficomps
mov
and
push
cmp
mov
daa
xchg
push
xor
adc
sbb
mov
inc
xor
and
movl
daa
mov
aas
nop
dec
or
cmp
jmp
rcrl
add
dec
jnp
fcomps
jno
cmp
faddl
lahf
sub
in
cld
stos
cmp
adc
rcll
sbb
mov
cmp
xchg
dec
lcall
or
mov
std
aas
movsl
dec
lods
packsswb
dec
dec
pushl
fcmovbe
pop
dec
xchg
mov
sub
ljmp
movsl
icebp
adc
enter
pop
cmpsb
out
icebp
imul
data16
mov
movsl
pop
mov
inc
sub
lods
jecxz
pop
clc
ds
mov
mov
sbb
dec
sbb
fnsave
inc
cltd
xchg
mov
out
adc
xorb
stc
sub
or
das
mov
adc
in
shrb
je
push
push
test
int3
sahf
lcall
pop
cmp
jb
and
push
test
dec
push
rcl
les
enter
insb
xchg
rorl
inc
mov
sub
add
lea
mov
xchg
cmp
mov
cmpsb
mov
inc
clc
daa
sti
dec
outsl
mov
pop
add
jle
adc
pop
xchg
mov
pop
pushf
hlt
inc
and
repz
push
add
call
les
mov
scas
dec
jae
jge
dec
inc
cwtl
cmp
push
cld
js
or
jno
aas
lds
sti
mov
mov
inc
insb
and
insl
add
push
add
les
and
inc
sub
nop
mov
data16
lret
mov
add
mov
cmc
jbe
pop
mov
lahf
jns
imul
imul
lahf
jmp
mov
fimuls
mov
into
in
jl
inc
test
loopne
pusha
in
iret
xchg
inc
fcmovnb
xchg
sbb
mull
inc
fsubs
bound
in
lret
push
int
lcall
loop
in
ret
mov
push
fcomi
imul
jo
xchg
lcall
push
sbbb
scas
push
dec
fsub
leave
bound
rcll
test
sbb
lret
push
add
hlt
sub
test
scas
mov
xor
jecxz
loop
cmp
and
lods
dec
jecxz
cmp
add
mov
lock
in
stc
jnp
cmp
jb
mov
add
insb
hlt
test
inc
dec
pop
gs
add
pop
mov
sbbl
jmp
mov
loop
and
mov
fisubs
ljmp
push
vhsubps
adc
dec
das
sbb
out
int3
lock
scas
push
and
add
push
xchg
lds
icebp
stos
push
cmp
mov
bound
in
mov
jecxz
inc
flds
imul
add
xor
sbb
fidivs
jno
jo
and
inc
das
jnp
aaa
xor
stc
xchg
push
push
mov
icebp
out
mov
mov
jle
and
jmp
inc
cwtl
mov
fwait
push
enter
sub
mov
es
and
lea
adc
inc
fisubs
push
ret
push
es
js
rcl
cli
sub
cmpsb
sbb
or
inc
inc
cmc
xchg
pop
and
arpl
rcrl
sbb
and
out
inc
fists
mov
clc
fdivrl
pop
mov
ljmp
rcrl
xchg
in
jb
pop
cwtl
mov
or
out
out
arpl
dec
insb
imul
adc
lret
pop
sbb
push
adc
push
roll
pop
add
push
fdivs
jb
mov
js
dec
sbb
inc
pusha
data16
sbbl
call
je
xchg
in
test
lret
mov
add
and
mov
out
push
sub
push
dec
adc
loopne
mov
les
inc
arpl
sub
mov
push
iret
loop
xchg
xor
xor
sbb
test
das
dec
dec
adc
pop
cld
test
and
cmp
fcomip
push
stos
addb
ljmp
xchg
imul
add
lea
arpl
push
sub
push
xor
mov
stos
push
js
test
rcrb
pop
je
hlt
lods
ljmp
sbbb
cmpsl
add
outsl
cmp
or
xchg
sbbl
cmc
ja
ss
jp
popf
push
call
fdivs
aas
cs
rcrl
nop
pop
cmp
lock
pop
adc
mov
mov
or
adc
arpl
dec
mov
je
mov
jo
pop
aaa
into
or
xor
dec
jge
nop
mov
stc
decb
xchg
cmp
mov
rolb
into
cld
cmpl
cld
xor
fldz
mov
mov
cltd
push
stos
ja
pop
adc
pop
loope
mov
in
jne
jo
push
xchg
rclb
repz
ret
xor
xor
jle
in
in
fs
adc
rolb
add
mov
leave
xchg
adc
xchg
or
lcall
mov
cmp
mov
pop
fmull
jne
add
push
push
idivl
push
stos
decl
add
cmpsl
jae
pop
fnstcw
popa
addr16
sbb
fisubrl
cmp
andl
inc
inc
ret
jp
imul
mov
cmp
not
cmp
fcompl
pop
movsl
add
ror
mov
test
push
push
adc
xchg
pop
xchg
rcrb
pop
popa
negl
mov
push
add
add
cmp
ds
loopne
fwait
mov
int3
mov
xchg
test
mov
sar
stos
xchg
pop
add
pop
cltd
nop
out
ficoml
mov
out
push
xlat
lea
pop
rorl
rcl
aas
rorl
mov
add
adc
jecxz
jp
push
ret
or
xor
sti
push
hlt
arpl
push
pop
sbb
orl
test
les
push
call
push
stos
push
cmp
pushf
rol
xor
jl
leave
mov
out
pop
dec
adcl
jp
ss
xchg
fdivrl
imul
lods
das
mov
in
add
xchg
shrb
pop
sub
test
ds
mov
insb
cmp
jo
pop
je
cltd
sub
sti
mov
jb
cld
and
sarb
jmp
fsubp
cmp
push
jl
mov
int3
into
outsb
ja
dec
or
cmp
std
or
fdivrs
in
mov
sub
dec
dec
sbb
cmc
mov
pop
push
loop
adc
js
imul
adc
outsl
push
out
es
pop
sarb
subl
sbb
xchg
scas
mov
push
jg
fs
adc
xchg
out
cmp
fsubrl
out
xor
push
imul
dec
cmp
inc
jbe
cmp
and
xor
jg
mov
fldenv
pmulhw
add
mov
sbb
push
pop
jo
rolb
cmpb
shl
xchg
mov
mov
jecxz
aaa
push
stc
xchg
or
out
mov
lods
mov
xchg
cwtl
dec
mov
test
pop
cmp
push
pop
push
icebp
lret
fwait
roll
pop
pop
scas
push
aad
inc
outsb
push
fldz
imul
pop
aaa
inc
ljmp
jae
pop
cmpsb
or
pushf
sub
jmp
mov
in
cld
pop
pop
ficoms
leave
push
jae
in
mov
out
dec
test
fs
aas
xor
out
mov
bound
sar
aaa
out
or
sbb
mov
pop
std
sti
inc
sub
sub
pop
cbtw
std
rorl
jge
shr
pop
lcall
adc
in
adcl
or
adc
fisttps
in
pop
lret
rcll
pop
jle
lods
iret
std
mov
insl
in
push
imul
rcl
and
push
rcl
stos
mov
cwtl
gs
cmp
add
jecxz
std
outsb
cs
mov
enter
sbb
sbb
cltd
push
mov
loop
pushf
js
out
lea
sub
and
add
xchg
push
testb
mov
cmpsb
and
inc
fisttpl
xchg
jmp
das
shll
ljmp
outsb
rol
push
out
adc
xchg
mov
loopne
or
mov
cmp
mov
dec
push
leave
loopne
sbb
loope
cmp
movsb
add
adc
sbb
pop
fdivrs
or
test
and
mov
mov
pop
out
pusha
popf
mov
insb
dec
mov
xchg
ljmp
mov
push
push
xchg
xor
in
iret
mov
dec
cmp
cmpsb
js
cmp
popa
or
cmp
cld
mov
jbe
sub
decb
or
inc
es
xchg
dec
dec
sti
inc
xchg
sub
inc
sbb
lret
test
out
sub
or
stos
popl
cli
es
push
jae
test
fs
push
bnd
xchg
dec
or
insl
jg
inc
and
mov
popa
cmp
fs
adcl
nop
pop
std
andl
cmpsl
mov
cmp
fcoml
arpl
sub
lahf
jb
or
stos
lds
pop
mov
pop
repnz
insb
pop
lret
loop
dec
add
xchg
jge
add
and
arpl
pop
in
iret
ja
insb
xlat
or
repnz
icebp
push
daa
mov
in
cmp
fwait
mov
jecxz
loope
std
and
pop
xchg
repnz
shlb
jne
movsl
push
mov
xchg
add
mov
pop
mov
sbb
inc
aam
aas
and
jb
jge
sub
pusha
add
or
stos
inc
roll
cmc
jno
inc
popa
xchg
xchg
adc
mov
insl
out
andb
jg
pop
add
cs
fisubrs
test
jmp
je
adc
mov
das
pop
jae
xchg
out
lea
lods
xchg
pushf
roll
fbld
jne
mov
aas
imul
pop
call
sbb
stc
imul
fldt
movl
mov
fstpl
insl
movsb
mov
inc
cltd
cmp
pop
sub
mov
scas
je
pop
jbe
movl
and
dec
movsl
jbe
ds
rcrl
or
mov
insl
xor
adc
jge
in
nop
stos
addr16
jl
jne
std
sbb
push
ret
out
lods
frstor
rclb
test
mov
pushf
push
xlat
xlat
scas
in
out
adc
push
inc
push
mov
ja
sbbb
daa
push
aad
cli
sub
xchg
cs
lods
pop
out
mov
ret
cltd
jo
shlb
ret
adc
mov
sbb
mov
lods
xlat
dec
std
das
xor
divl
xor
jmp
cwtl
sbbb
mov
jae
sti
lahf
cmp
sbb
mov
lods
pop
aad
or
dec
mov
lods
jmp
test
loopne
cmc
out
popf
mov
popf
rclb
mov
ret
js
pop
jbe
aam
dec
sbb
add
outsl
orl
adc
push
pop
dec
insl
call
mov
xchg
loop
xor
lods
lcall
push
imulb
xchg
in
push
stc
int3
xor
and
pop
push
or
mov
cmc
adcl
cld
popf
mov
imul
lahf
lahf
loopne
or
insb
ja
jmp
xor
in
mov
sub
cwtl
sarb
xor
out
dec
push
push
pusha
mov
dec
push
mov
stos
or
test
cmp
cmp
arpl
mov
add
xor
stos
bound
pop
call
sub
sbb
lcall
sbbl
lods
jne
inc
jmp
pop
and
lods
push
testl
or
lret
out
sbb
inc
jbe
mov
data16
into
push
cmp
cmp
mov
cmpsb
es
scas
push
mov
jmp
stc
es
and
cld
lea
lahf
pop
into
pop
sbb
daa
fldcw
mov
add
mov
cmp
es
dec
pop
pop
repnz
mov
jo
xor
jg
int
sbb
pop
or
mov
adc
push
rolb
aad
inc
ljmp
xchg
push
imull
out
popa
icebp
adc
add
and
pushf
iret
lds
orl
mov
xor
mov
adc
stos
fwait
push
add
mov
jg
cli
repz
ss
es
or
inc
fwait
sub
adc
loop
jne
movsb
jbe
or
dec
cltd
xchg
lret
fistpl
sub
in
popa
cmc
fidivrs
cmp
cmp
push
lds
sub
xchg
outsb
xor
push
mov
stos
push
ljmp
sub
push
leave
adc
daa
notb
cmp
xor
outsl
rorb
add
lcall
rcr
and
iret
xchg
in
mov
lahf
je
xchg
mov
mov
inc
adc
and
movl
and
fdivl
dec
push
mov
shll
shlb
xchg
lcall
test
pop
repz
add
cltd
fucomip
dec
jp
decl
sti
iret
jge
ja
inc
pop
jle
jge
imulb
shl
cmp
popa
jl
popf
lock
outsb
pop
std
idivb
adc
ljmp
sti
mov
xchg
xor
fs
dec
adc
xor
pop
xchg
xchg
push
inc
add
insl
rorl
inc
scas
nop
das
clc
jmp
pcmpeqw
fidivrs
add
data16
cmc
mov
std
lock
aaa
test
mov
mov
xchg
pop
pop
inc
subl
sbbl
mov
cmp
mov
daa
push
push
iret
xor
jo
xlat
sar
mov
cmp
mov
fxch
mov
push
fistpl
fadd
imul
jae
sti
icebp
data16
cmp
adc
jl
push
test
or
jecxz
ja
mov
rclb
or
ficompl
daa
jne
mov
aas
mov
pusha
dec
cli
cwtl
fidivs
pushf
fwait
and
xchg
cld
jmp
testl
test
lock
data16
mov
loope
mov
dec
push
shr
inc
rorb
pop
rcrl
sub
and
xor
fcmovnb
dec
lea
sub
pop
aas
xchg
pop
jnp
insb
dec
xchg
pop
sub
imul
mov
sbb
mov
sbb
dec
sbb
sbb
stos
dec
and
les
sbb
dec
je
imul
rcll
mov
sbb
into
or
outsb
xchg
out
mov
out
mov
lods
ret
test
pusha
call
or
xor
push
push
xchg
ss
mov
jae
pushf
out
pop
cli
outsb
jae
pop
sbb
pop
lods
jge
sub
mov
imul
mov
mov
icebp
stos
push
xor
mov
xchg
push
inc
xchg
cwtl
jns
mov
loopne
lods
out
rcll
cmp
ja
lcall
mov
ss
cmp
mov
inc
inc
inc
xor
je
pop
into
enter
loop
adc
cs
mov
inc
mov
shlb
jb
xor
adc
or
enter
jecxz
je
mov
fs
stos
lea
or
gs
pop
mov
mov
sub
loopne
and
aam
fistps
mov
jmp
adc
inc
lret
data16
cltd
sub
lahf
leave
cs
rorl
mov
mov
push
pop
stos
inc
aaa
or
mov
xchg
pushf
lret
jmp
mov
sbb
dec
ss
mov
dec
repz
lret
and
popa
outsl
repz
push
ret
fdivrs
scas
jno
andl
pop
punpckhwd
add
cmp
fcmovnu
pop
js
and
xchg
cmpl
int3
xor
and
pop
mov
aaa
out
test
pop
push
push
push
arpl
fsubs
jge
sbb
dec
lock
cmp
cmc
sarl
dec
push
hlt
pop
fadds
and
jl
sub
inc
pop
cli
add
inc
js
je
mov
and
ljmp
mov
jno
mov
negb
cmc
pop
mov
jbe
in
std
mov
jp
testl
cwtl
lret
mov
scas
pop
dec
ss
dec
loopne
sbb
dec
sbb
fwait
mov
int3
cmpsb
jno
jnp
inc
xor
aaa
xor
sbb
out
out
adcl
adc
fdivs
push
pop
xchg
add
inc
and
ss
mov
mov
arpl
fldl
xor
clc
test
insb
lahf
mulb
cltd
jnp
fidivrs
sub
std
ja
and
sbb
or
arpl
cmp
leave
ret
loop
cli
sub
aaa
aaa
mov
stos
jo
mov
dec
popa
sub
push
xor
fistl
xchg
xlat
xchg
movsb
push
jbe
push
movsb
mov
inc
cmp
stos
mov
push
add
pushf
jp
dec
fldt
xchg
shll
add
lret
cmpsb
dec
loop
lods
aam
lods
dec
pop
jbe
xchg
aam
fidivl
xor
popf
or
pop
xchg
sub
jecxz
fldt
dec
adc
xor
xchg
pop
psllq
rclb
pushf
push
dec
pop
mov
cmp
out
or
inc
jmp
jns
inc
outsl
xor
and
in
push
mov
in
fwait
inc
insb
pop
ds
out
xchg
jae
mov
mov
test
rorl
sbb
fs
jl
in
jecxz
fistps
or
add
add
sbb
leave
test
mov
jp
out
pop
pop
add
cmp
shrb
mov
mov
shlb
stos
mov
sarb
xor
aad
mov
fisttps
arpl
ret
sub
mov
test
mov
xor
daa
lods
aas
add
in
shll
push
insl
enter
stos
movsb
sub
cltd
mov
inc
lods
xorb
ret
mov
add
mov
in
aam
mov
mov
in
xlat
sbb
nop
mov
mov
cwtl
mov
test
push
stc
movsl
jbe
rcr
adc
loopne
mov
sbb
je
ljmp
shll
test
mov
and
push
ret
dec
cmpsl
jge
add
mov
xor
mov
maxps
leave
xor
mov
mov
sbb
adc
lods
cmp
adc
push
or
mov
fsubl
dec
push
out
mov
pop
pop
pop
cmpsl
push
enter
clc
cmp
ret
fsubp
je
cwtl
adc
cmpsb
sub
loopne
dec
mov
adcl
fnop
pop
out
jne
fsubl
push
sarb
xchg
out
hlt
andb
pop
or
mov
dec
adc
fs
mov
xchg
insl
and
pop
xor
cmp
mov
fnstenv
bound
repnz
lds
inc
pushf
in
inc
test
mov
rcrl
repnz
call
jns
mov
call
gs
pop
adc
pop
push
jmp
or
aad
cli
aad
outsb
int3
sarb
ss
push
xchg
out
fstpl
or
cltd
and
push
add
mov
inc
push
das
fdivrp
mov
push
or
pusha
and
adc
jbe
pop
shlb
leave
xchg
mov
fcompl
dec
adc
addl
jl
cmpsb
pop
rcrl
aaa
or
fsubrs
add
jbe
jg
jbe
add
inc
sbb
insl
je
adc
dec
and
int3
jno
sbb
ja
dec
dec
shl
mov
add
cli
mov
notl
in
jle
call
cmc
or
fsubl
sarl
aas
test
xor
dec
ficomps
adcl
fistpl
ja
lds
in
pop
ja
scas
cmp
push
xor
mov
and
lods
ljmp
pop
lods
jae
xor
sbb
orl
jmp
jne
ret
jl
mov
xchg
ret
xor
mov
dec
fs
and
mov
add
icebp
inc
mov
jne
gs
mov
cmp
xchg
add
pusha
adc
push
shlb
jmp
dec
cld
imul
add
adc
jge
jl
test
out
sbb
movsb
cmp
fsubp
adcb
add
adcl
sub
or
in
jo
push
loope
sub
mov
mov
jne
dec
cld
adc
fstp
sbb
jmp
int
xchg
inc
push
popf
lahf
out
lods
rcll
pop
jne
or
xor
pushf
loop
es
push
push
roll
sub
sti
rcl
xchg
xor
popf
dec
xlat
adc
mov
repz
fadds
testl
xchg
out
lods
xor
or
dec
nop
bound
jl
jae
sbb
and
xor
add
inc
mov
add
ja
popf
jb
mov
dec
push
add
sbb
xor
jmp
aaa
mov
out
and
aam
addr16
lea
pop
repz
outsb
dec
sbb
scas
or
jg
outsl
jne
sub
adc
sbb
add
pop
xor
sbb
pop
test
insl
out
pop
mov
bswap
mov
loopne
adc
mov
xor
in
mov
movsl
xchg
inc
add
mov
icebp
xor
push
scas
mov
jp
test
int
nop
push
mov
adc
add
adc
les
fistps
scas
orl
mov
pop
ljmp
clc
mov
dec
pop
jno
and
dec
add
inc
incb
aas
fists
and
aad
xor
mov
out
dec
std
shll
int3
xchg
xchg
fidivs
out
jmp
sub
scas
jnp
push
inc
mov
scas
cmpb
popf
shlb
pop
scas
out
shll
test
lret
inc
dec
imul
push
add
jmp
dec
pop
rcr
mov
sub
fs
lock
and
adc
rorl
repz
or
inc
jae
sbb
fucomi
cmp
and
scas
jg
sub
ja
stc
aas
icebp
xchg
hlt
lods
mov
lcall
testb
mov
imul
in
adc
jg
adcl
cmc
mov
insl
div
jnp
cmpsl
mov
mov
push
and
sub
push
push
fldenv
rol
xor
pop
sbb
inc
movsl
call
insl
pop
stos
push
pop
es
in
cwtl
andb
fs
cli
sbb
pop
lahf
nop
add
adc
inc
xchg
push
movsb
cmc
lahf
es
or
add
enter
ret
inc
xor
testl
repz
clc
and
add
int
adc
loop
or
and
jecxz
cltd
push
and
jl
mov
mov
sbb
push
or
sbb
fs
sub
xchg
int3
adc
cmpsl
xchg
inc
dec
sbb
mov
inc
out
and
xchg
add
add
fsubp
push
cmc
lret
jns
mov
pop
mov
push
pop
ret
lret
mov
jnp
fs
dec
test
mov
inc
pop
adc
cmp
mov
or
inc
cli
pop
lret
mov
subl
xor
xchg
cmp
mov
imul
int3
mov
std
mov
repnz
mov
inc
push
mov
rcr
ret
xchg
aaa
inc
sbb
mov
push
and
mov
pop
daa
rorl
mov
lahf
enter
xor
nop
pop
sti
adc
pop
data16
mov
stos
adc
in
sub
mov
inc
stos
cmpb
and
sbb
add
andb
push
adc
or
imul
or
bndldx
lcall
jne
cmpsb
jo
clc
rolb
icebp
push
bound
xchg
jno
dec
jmp
lds
fcomps
dec
subl
fsts
sbb
rorl
adc
xor
adc
aad
cmp
aas
gs
fmull
loope
loop
in
aad
loopne
jecxz
adc
fcmovnb
dec
cmp
sub
xchg
sub
mov
or
ret
push
lret
js
xor
and
xor
leave
popa
and
or
dec
movb
rorb
scas
inc
sarl
imul
sbb
inc
sbb
add
xchg
insl
and
push
mov
sub
nop
lahf
pop
clc
add
jns
push
aam
and
mov
push
in
push
negb
les
sbb
addr16
stos
andb
xchg
lcall
ja
mov
andl
adc
andl
fcmovb
outsl
ja
fiadds
push
inc
push
je
pop
test
mov
roll
fcomip
and
outsl
xchg
push
fidivrl
repnz
add
mov
cmp
dec
ss
xchg
cmpsb
arpl
addr16
lods
inc
in
into
int3
fsubp
mov
mov
mov
cld
adc
push
and
int3
mov
cltd
dec
lds
stos
xchg
dec
sahf
cs
int
cmp
movsb
xor
inc
int
or
sti
leave
sub
jnp
dec
mov
sbb
push
mov
shll
inc
and
stos
mov
std
cmc
pop
ja
scas
lret
mov
nop
ss
je
xchg
inc
ror
jmp
shll
dec
std
mov
into
rep
stos
mov
leave
cmp
std
sarb
leave
xor
andps
adc
ja
push
in
mov
or
jecxz
ja
scas
stc
jbe
add
test
push
mov
repz
outsb
ljmp
lock
ud0
xlat
test
mov
sub
xor
lds
rcll
imul
or
mov
lret
outsl
fnstsw
fwait
or
cmp
jbe
mov
fsubrs
mov
enter
lods
xor
mov
fists
scas
dec
hlt
arpl
xor
add
inc
clc
jp
mov
cltd
clc
xorb
xchg
pushf
repnz
repnz
lret
es
mov
and
xor
testl
mov
mov
bound
jo
sbb
subl
pop
dec
clc
fidivrl
orb
add
outsb
cmp
mov
push
jno
xchg
pusha
push
lcall
jmp
jmp
in
fmull
xor
pop
loope
adcl
jmp
mov
mov
in
stos
js
jb
arpl
adc
jecxz
lcall
fcoml
sarl
push
gs
loopne
dec
sub
repnz
cli
jns
loop
ss
cld
push
iret
fdivl
std
and
orb
xchg
push
pop
xor
roll
mov
loopne
sbb
in
fsubr
dec
popf
cwtl
ss
jle
adc
push
scas
add
cmp
xor
lea
inc
cmpb
out
shrb
dec
je
sub
pushf
pop
cmp
fmuls
push
insb
std
jbe
dec
pop
xor
ror
mov
les
dec
stc
pop
mov
push
cmpsb
push
sub
fcmovne
in
addr16
mov
je
add
hlt
cmp
inc
fmuls
rep
push
stc
je
je
dec
dec
xor
loope
push
or
mov
push
mov
xor
push
push
mov
mov
loop
leave
mov
mov
loopne
shrb
daa
mov
popf
shlb
push
das
pop
loop
xchg
add
imul
or
mov
orl
xor
andl
add
movl
cmp
mov
mov
push
movl
je
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
call
jmp
mov
add
add
mov
sub
mov
xorl
xor
add
sbbl
imul
movl
mov
movl
jmp
mov
andl
mov
inc
mov
cmpl
jne
push
call
cmpl
jb
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
xor
adc
mov
mov
mov
mov
sub
add
xor
mov
add
mov
inc
mov
sub
add
adc
mov
mov
xorl
add
mov
mov
mov
xor
xor
lea
mov
xor
add
imul
mov
xor
sub
mov
add
cmp
mov
mov
jg
xor
mov
sub
add
jmp
xor
add
add
mov
mov
mov
xor
add
not
and
movsbw
mov
sub
mov
xor
mov
cmp
jne
movsbw
mov
sub
mov
xor
mov
cmp
je
mov
xor
mov
sub
add
jmp
mov
mov
mov
lea
mov
mov
mov
xor
add
mov
mov
mov
xor
add
pop
cmp
jne
mov
xor
mov
add
imul
mov
pushl
jmp
mov
add
mov
mov
mov
movsbw
mov
sub
mov
xor
mov
jmp
stc
add
pop
push
sti
or
mov
jns
jae
jp
sbb
jp
sub
mov
movups
lret
mov
mov
mov
fwait
stc
out
adc
je
mov
inc
mov
scas
out
arpl
adc
dec
ja
jl
adc
fwait
jo
hlt
sub
mov
mulb
cmp
xchg
int
movsb
mov
lock
in
mov
inc
mov
mulb
out
out
adc
add
in
jno
dec
cltd
cmp
mov
mov
mov
bound
insb
out
and
lock
and
jbe
fdivs
xchg
xchg
loope
sub
xchg
or
push
movsb
mov
push
inc
movsl
mov
icebp
sbb
mov
push
sbb
cmp
mov
jmp
in
mov
or
mov
dec
lret
stc
xchg
mov
push
push
or
in
addl
clc
cmpsb
sbb
push
xor
sub
out
and
rcrb
cmpsl
sub
xchg
jle
add
enter
xchg
cli
popf
push
push
and
aas
int
add
mov
jecxz
jb
inc
mov
xchg
cmpsl
xor
xchg
nopl
add
push
int3
jge
pop
fildll
pop
mov
or
mov
sub
jnp
xchg
xlat
insl
add
xor
insl
mov
xchg
dec
and
rorb
test
or
mov
insb
mov
fimull
ret
sahf
mov
add
std
pop
xor
mov
or
sbbl
pusha
cmp
or
stc
out
or
enter
outsl
in
jg
and
push
xchg
out
cli
int3
shrb
fistps
mov
pushf
les
dec
sbb
in
dec
inc
push
movsb
leave
test
lret
movsl
mov
addr16
lods
test
sbb
fwait
aas
bound
push
cs
xlat
xor
gs
adc
and
add
test
mov
mov
fadd
push
dec
mov
sbb
mov
loopne
lea
jle
jle
adc
xor
cmpsb
mov
lret
in
cltd
push
aaa
stos
cs
sbb
shll
mov
dec
inc
int3
mov
cwtl
mov
xor
int3
pop
jg
aad
adc
int3
mov
out
leave
es
movsb
mov
or
out
je
push
xor
inc
fimull
insl
push
jb
cmp
adc
js
xchg
repz
jle
push
int3
cmpsb
sti
or
sbb
inc
rolb
jbe
daa
adc
pop
mov
mov
sbb
inc
jne
orl
int
repz
sbb
loopne
push
push
sahf
imul
cmp
lcall
dec
xchg
scas
jo
cmpb
xchg
xchg
mov
sbb
scas
push
jne
mov
mov
das
inc
fcmovb
add
sub
adc
ds
iret
and
and
mov
pushf
jnp
idivl
xchg
es
or
out
daa
loope
cs
inc
out
fistl
leave
pop
or
mov
push
mov
into
sub
imul
je
jecxz
adc
mov
mov
dec
aas
jl
xor
rclb
es
fiaddl
in
lret
stos
jo
ret
rcr
pop
mov
fs
loopne
insb
pop
sbb
sti
xchg
jns
mov
repnz
mov
sbb
andb
and
sahf
aam
mov
pop
adc
cmpsb
imul
fisttpll
lds
into
ficoml
pop
test
sbb
pop
jo
cmpsl
mov
xor
cwtl
lret
repz
add
push
lcall
adc
add
jbe
or
dec
ja
or
jno
jp
and
adc
dec
addl
aas
add
incl
movsl
pop
cmp
jbe
mulb
das
dec
inc
lret
pop
sub
ss
ss
mov
xor
test
adc
jecxz
aad
outsl
jae
scas
dec
push
adc
loopne
mov
fdivp
add
cmc
xchg
or
fsts
push
mov
push
mov
pop
imul
dec
rolb
lret
mov
or
insb
push
mov
sbb
xchg
pop
push
xor
sbb
add
in
inc
mov
int
outsl
mov
mov
pop
in
xor
clc
xchg
lcall
cmp
jge,pn
jbe
mov
std
sti
aad
ss
sbb
insl
imul
fisubrs
xchg
inc
mov
ficompl
xchg
loop
insl
cmp
shll
pusha
jp
dec
stos
bound
nop
jo
imul
scas
inc
inc
sub
sahf
push
imul
into
add
push
jge
inc
jae
xor
and
mov
div
arpl
ljmp
int
enter
sbb
pop
pop
daa
pop
cmp
scas
mov
out
add
andl
jns
mov
inc
inc
sub
mov
jle
cs
lods
in
test
fs
and
and
adc
lret
out
cmp
cld
and
sub
xor
adc
mov
adc
pop
push
ja
or
cmp
pop
mov
mov
cmp
cwtl
and
mov
rcrb
lret
dec
or
xchg
insl
sub
call
push
scas
mov
cs
jl
test
pop
dec
add
clc
enter
and
sbb
call
mov
loop
mov
fmulp
jb
push
sbb
push
test
js
jge
out
test
insl
sbb
das
pop
test
cmpsl
lds
sub
adc
cmpsl
es
fs
push
cmp
and
adc
les
lret
aaa
xor
int
jge
std
lock
sbb
mov
xchg
jl
out
pop
push
lds
dec
cmp
mov
lar
stc
aaa
daa
add
jg
or
push
cld
cmp
in
cwtl
jmp
nop
enter
adc
mov
xor
repz
popf
push
ret
mov
dec
aam
ret
je
adc
jecxz
das
insb
push
add
sbb
mov
enter
push
daa
pop
fidivs
dec
push
addl
pop
or
adc
mov
iret
bound
cs
xchg
scas
repnz
outsl
popa
aam
add
ljmp
insb
daa
adc
inc
pop
push
adc
dec
nop
mov
inc
jle
inc
inc
shll
sarb
pop
rclb
sbb
lret
cmp
sbb
lds
jp
xchg
imul
pop
dec
pop
movsl
sub
jne
aam
adc
fcomps
inc
out
cmp
pushf
stos
xchg
adc
xor
inc
and
cmp
out
in
xchg
dec
das
and
jg
in
cld
inc
pop
int
bound
dec
lds
cld
xor
in
mov
adc
add
dec
arpl
aas
sbb
inc
inc
or
xchg
sbbb
mov
lret
cld
xor
jno
enter
nop
mov
jne
or
pop
movsl
pop
jl
add
hlt
mov
fists
jb,pt
ds
dec
clc
inc
jl
jns
push
jnp
xchg
idivl
cli
jno
jo
testl
stc
adc
mov
push
cli
sarb
adc
cmp
mov
sbb
or
xchg
cmc
xlat
xchg
push
lret
popa
into
int
sahf
cltd
xchg
sbb
fldcw
mov
icebp
addr16
pop
mov
pop
clc
scas
jmp
jnp
xchg
sbb
idiv
fsts
lods
add
imul
in
cld
push
adc
popa
sbb
les
push
mov
xchg
mov
mov
lods
mov
arpl
dec
movsb
popf
pop
std
and
lea
ss
dec
cmp
jge
jl
xor
jns
loopne
int
inc
fcomp
dec
push
mov
and
cmp
in
dec
mov
pinsrw
cmpsl
mov
pop
mov
lahf
lcall
or
ret
lret
mov
lods
daa
mov
sbb
dec
xorl
addl
sahf
push
xchg
and
dec
xorl
ja
sub
insb
add
pop
cmp
addb
movl
inc
aaa
jb
clc
sub
outsl
jmp
cmpsb
sbb
push
ret
push
out
aaa
arpl
mov
and
dec
add
pushf
xchg
out
push
mov
fbstp
ljmp
add
mov
cwtl
lea
xchg
lahf
lcall
loopne
mov
repnz
sbb
outsb
cmc
std
lret
arpl
add
das
mov
jg
cld
jo
inc
gs
repz
or
fnstsw
pop
stos
fs
xchg
adc
jmp
lret
push
movsb
fcoml
sbb
push
addr16
inc
test
js
int3
lods
ja
int
call
mov
cmp
pop
pop
mov
in
mov
fists
jle
fdivrs
dec
xchg
insl
icebp
insl
sarb
adc
adc
jne
jb
into
adc
jcxz
imul
lods
sbb
inc
cltd
shl
ret
jbe
scas
xchg
dec
add
lea
and
out
pushf
pop
fisubrl
loope
imul
lods
lret
ss
lea
ja
add
fildl
push
in
movsl
adc
shll
fcoms
test
sahf
stc
sbb
xlat
es
inc
negl
shll
in
xor
loop
adc
cmp
lds
xor
stos
pop
sub
aaa
repz
sbb
inc
loopne
jg
vmwrite
or
out
les
add
jmp
je
add
in
xor
lret
sub
lret
rolb
sbbb
cmp
jae
pushf
std
add
cmp
sub
or
dec
and
enter
iret
test
ficoms
cmp
outsl
xchg
sbb
and
mov
cld
lahf
push
mov
add
in
or
xchg
xchg
iret
aad
lcall
subb
mov
xchg
sbb
pop
hlt
iret
push
adc
fs
sti
add
dec
movsl
jns
loope
mov
pusha
out
shll
xchg
and
stos
test
dec
and
push
xlat
dec
inc
or
decl
jno
push
in
lock
dec
push
xor
and
sbb
mov
mov
push
inc
push
cwtl
sarl
imul
scas
or
adc
cld
or
insb
popa
jb
mov
push
xchg
mov
ss
shl
test
xor
cwtl
sub
fidivrs
ror
and
das
int3
nop
push
repnz
daa
mov
or
xchg
testb
cmpsb
fucomip
mov
mov
pop
pop
test
cs
test
or
lcall
std
insb
ficomps
insl
xor
and
fcomp
scas
sub
ret
rcll
fidivrl
dec
idivl
mov
aam
lahf
jg
out
xlat
fwait
mov
lea
fbld
stos
je
jp
aaa
sub
sahf
xor
push
mov
jnp
jb
rorl
ljmp
mov
xor
mov
push
jg
jne
loop
cwtl
in
mov
mov
scas
loop
roll
push
pushf
das
dec
cmp
arpl
into
gs
inc
jmp
out
or
jl
arpl
jne
sub
sbbl
xchg
pop
sbb
movsl
adc
cmovle
pop
mov
dec
cld
cmc
aam
and
bnd
mov
mov
mov
into
xor
cltd
pop
adc
add
movsl
jb
and
outsl
les
jecxz
jecxz
mov
cmpsb
sahf
dec
pop
lods
pushw
xor
push
mov
test
mov
inc
shlb
xor
pop
aas
sarl
jmp
jl
push
test
inc
push
sub
insb
sbb
jge
push
repnz
sub
orb
repz
push
push
and
imul
outsb
movsl
or
mov
push
xchg
or
icebp
mov
mov
xor
mov
imul
lock
gs
inc
push
cmp
sbb
jmp
mov
and
or
out
push
xchg
or
in
test
mov
xchg
sub
ds
in
call
insl
pop
jnp
dec
clc
sbb
in
pop
mov
xorl
enter
push
inc
mov
cmpsb
inc
add
nop
rcl
and
mov
repz
cmp
cmp
push
int
add
sarl
push
sar
pushf
cmc
jne
mov
jl
jle
int
shrb
mov
jbe
scas
test
das
lds
cmp
jo
gs
mov
sbb
or
dec
add
mov
cld
fidivs
jmp
aad
and
sub
push
jae
repnz
xchg
ljmp
fs
cmp
xor
dec
pop
or
push
xor
daa
dec
mov
pushf
cmpsb
out
jae
jo
aad
repnz
aad
fistps
pusha
sbb
adc
insl
stos
xor
inc
pop
mov
test
push
pop
jp
insl
hlt
pop
add
and
test
sbb
pop
aad
in
leave
inc
adc
xor
jmp
test
fldenv
leave
shl
sub
fbstp
jae
imul
iret
in
aad
test
push
lods
pop
xor
jle
jle
push
mov
dec
outsl
nop
sbb
dec
rolb
jnp
jne
sahf
imul
stos
out
add
es
mov
jecxz
jl
push
xchg
clc
imul
pop
dec
mov
fcom
xchg
cmp
cmc
push
ja
and
outsb
pop
in
and
js
or
mov
sbb
or
or
sti
or
ljmp
arpl
clc
pop
mov
pop
sub
cld
xchg
sub
cmp
inc
aad
push
sysenter
mov
aaa
mov
add
xor
cmp
je
or
std
dec
or
mov
mov
cmp
and
test
ss
push
fiaddl
cltd
lret
popa
jle
jne
in
xlat
insb
adcb
jb
dec
out
and
loop
cmp
popa
add
out
mov
lret
in
nop
sub
orl
insb
lods
mov
and
xor
xor
mov
mov
mov
push
pop
or
dec
mov
gs
lods
or
xchg
out
pop
in
pushf
sub
ja
push
push
out
fsubrl
ja
inc
mov
and
pop
lret
nop
outsl
and
xchg
fdivrs
lret
pop
cmp
or
and
ds
fidivl
xchg
jle
fistpll
iret
jl
mov
push
pop
or
jne
inc
or
mov
add
or
outsb
popa
xor
pop
ljmp
xor
mov
sub
mov
sti
pusha
nop
xchg
cmpsb
mov
pop
fistpl
sbb
pop
adc
js
insl
mov
push
cwtl
jg
fadd
sub
test
mov
orb
std
lods
push
je
mov
sahf
test
pop
sbb
mov
rol
lcall
mov
jno
mov
mov
mov
decb
sbb
push
mov
out
and
lahf
fucomi
jl
push
mov
cli
rcrl
inc
mov
popf
incl
jle
push
ffreep
ficomps
push
cltd
jmp
mov
jle
jecxz
xchg
sub
out
inc
lock
sbb
jmp
and
ret
jmp
pop
sub
outsl
jnp
mov
inc
push
mov
test
subb
cmp
mov
push
imul
icebp
neg
jecxz
clc
imul
shlb
in
mov
mov
or
push
das
or
ret
clc
pop
add
gs
mov
push
cwtl
adc
xchg
test
ret
adc
mov
cmp
inc
lcall
movl
mov
mov
stos
mov
test
sub
test
jmp
cmpsb
clc
xor
push
mov
inc
cvtdq2ps
loopne
fnsave
popf
or
push
test
aam
or
lods
imul
pop
and
jo
cmpsb
addr16
dec
fs
xorb
bound
push
dec
push
inc
inc
push
je
adc
xor
add
mov
out
scas
rorb
sar
lods
and
push
xchg
push
das
push
fisubs
cs
lret
add
inc
mov
dec
jno
xor
jle
cltd
inc
scas
enter
popa
fcmove
loopne
push
pop
shll
pop
ficoml
out
inc
in
jl
lea
inc
lret
push
adc
stc
add
aaa
sahf
pop
out
lcall
or
add
push
jae
cmp
xchg
stc
jge
add
and
jge
mov
and
or
xchg
adc
cmp
and
outsl
scas
std
cmp
cmp
xchg
loop
and
cmovp
adc
adc
push
fwait
push
cmp
jecxz
xor
aaa
jge
or
adc
jp
pop
pusha
adc
push
loop
mov
outsl
mov
out
bound
icebp
inc
pop
ret
xor
ret
inc
pop
mov
mov
cmp
push
sbb
sub
and
mov
ret
jns
mov
jp
adc
insl
cmp
add
cmc
les
cmp
jle
int3
adc
xor
sub
aas
subb
loop
dec
flds
mov
and
scas
subb
adc
cmp
mov
adcb
cmp
add
cmpb
mov
out
out
mov
mov
add
adc
iret
dec
sarl
push
jne
mov
fdivrs
lahf
shl
pusha
xchg
sub
dec
shll
or
jne
xor
cmc
sub
fadds
adc
lcall
xlat
insl
outsb
leave
jb
cmp
mov
adc
sub
test
nop
pop
out
cmp
movsb
mov
xchg
cmpsl
pop
aam
pop
test
fnsetpm(287
xchg
mov
loopne
mov
aaa
cs
pop
clc
and
imul
inc
insb
rorl
je
sbb
decl
cmp
push
add
and
mov
adc
pusha
dec
loop
xchg
mov
mov
xchg
mov
jb
sub
test
sbb
mov
jp
mov
or
dec
dec
mov
jg
arpl
call
push
adc
out
dec
cs
jecxz
sub
aad
test
adcb
decl
ret
insl
cli
cld
and
push
sub
dec
adc
mov
dec
lahf
jecxz
cmp
inc
xchg
sbbb
dec
mov
and
aaa
mov
mov
add
cmp
fnstenv
pop
sbb
mov
sbb
loop
cmp
ffreep
in
add
aam
pop
pop
pop
mov
xor
xchg
cmpb
gs
movsl
mov
adc
pop
shlb
int3
cli
lcall
and
push
and
mov
xor
dec
es
sbb
and
mov
cltd
adc
push
pop
xchg
dec
pop
popf
sub
push
and
fs
pop
scas
fcmovu
pop
fwait
sbb
aaa
sbb
jecxz
lods
xchg
dec
xchg
sbb
out
add
and
jl
popa
ficoms
xlat
in
cmp
cli
cltd
imul
adc
xchg
mov
push
sarb
lahf
cmp
or
xchg
test
cmp
inc
mov
roll
lds
fstpt
cmpsb
icebp
je
test
mov
jae
push
push
dec
scas
jmp
inc
sahf
adc
fsub
dec
enter
inc
mov
call
scas
insb
fwait
or
sahf
repnz
fisubs
push
sbb
jle
xlat
lcall
psrld
inc
mov
sahf
mov
decl
jmp
sub
push
jg
or
mov
push
mov
das
cs
xorl
lods
inc
jno
adc
mov
orb
pop
sbb
cltd
inc
call
lret
int
repz
icebp
test
xchg
out
mov
pusha
push
or
in
and
sbb
inc
adcl
jp
add
xor
xchg
add
aas
xchg
jg
ds
sarb
mov
push
xchg
sbb
xchg
xlat
push
pop
clc
and
dec
push
xor
fistpll
lcall
rcrb
ljmp
inc
fmuls
pop
sbb
jo
mov
push
movsl
mov
and
roll
addb
dec
loop
push
fcom
and
sbbb
pop
fisttpll
adc
call
mov
push
xchg
push
mov
jo
fists
inc
mov
lret
mov
xchg
or
or
push
add
daa
aaa
scas
add
sub
adc
ljmp
jge
push
fidivrl
inc
push
push
jno
ss
push
daa
mov
scas
xchg
in
mov
bound
insb
push
push
jns
test
sub
test
ja
ror
xor
lahf
leave
sbb
int3
adc
data16
xchg
pop
push
mov
enter
enter
es
in
shlb
jnp
cli
das
mov
or
aaa
inc
pop
xchg
in
dec
outsb
or
mov
sbb
cmp
scas
shlb
adc
std
mov
push
xor
imul
push
jle
mov
jl
enter
hlt
rcrb
pop
rcll
mov
sti
mov
aas
dec
xchg
fs
mov
jnp
cmp
dec
push
mov
imul
sbb
dec
lods
dec
movsb
adc
and
fidivl
lcall
jo
lods
cs
js
push
pushl
movl
and
dec
loopne
cld
and
push
inc
fdivrp
movsb
push
add
push
mov
test
test
pusha
inc
xor
jp
int
sar
cli
xchg
outsb
bnd
xor
and
jb
jle
ljmp
stos
sbb
push
sbb
mov
cltd
and
cmp
aas
and
xchg
ret
int
scas
sbb
ret
sbb
fwait
push
mov
adc
sub
xor
fnsave
inc
sub
jnp
or
mov
and
adc
loop
cltd
shll
sub
jecxz
addb
mov
ss
fmul
out
out
xchg
pushl
adc
shll
adc
sbb
and
stos
aas
test
xor
aad
inc
xchg
add
cmp
in
mov
mov
dec
addb
fnsetpm(287
lret
sub
inc
xchg
adc
add
loopne
inc
hlt
and
xchg
shrl
popa
xchg
push
xchg
leave
lods
leave
push
add
xchg
pop
stc
test
mov
pushf
cltd
cmc
and
js
mov
cltd
inc
mov
sub
add
cmp
and
mov
jno
pop
inc
lret
aad
mov
inc
mov
cli
mov
jb
push
mov
sub
sub
add
fsubs
or
mov
shll
mov
cld
lcall
ljmp
imul
push
fwait
inc
sub
test
loope
jg
cmp
data16
fdivrs
jmp
xchg
leave
push
lahf
bound
into
sub
or
sbb
iret
fcmovbe
dec
xchg
xchg
fidivrl
int
jmp
mov
jle
dec
cmp
jg
push
push
sti
ficoms
mov
out
pop
xor
mov
sbb
sub
inc
and
test
mov
notl
inc
cwtl
mov
repz
adc
daa
aam
xchg
xlat
fs
mov
inc
lds
nop
cmpsb
das
add
scas
mov
fdivrs
nop
loop
ja
and
mov
cld
push
popf
fcmovne
in
xchg
inc
incl
xor
sbb
sahf
xor
stos
pop
push
pop
cltd
fbstp
filds
stos
dec
outsl
fdivl
and
mov
push
push
stos
jle
in
push
push
pop
popf
mov
xchg
jne
lcall
sbb
loop
pop
pop
arpl
aaa
jp
xchg
cmp
push
sub
jnp
adc
lods
cmp
add
sub
clc
push
adc
outsb
xlat
push
lock
mov
sbb
mov
cmpsb
lock
shll
dec
or
mov
fs
mov
fsubrs
and
lret
outsl
cmpsl
inc
adc
out
mov
sahf
push
adc
mov
sbb
sti
int
dec
lahf
pusha
mov
out
mov
imul
dec
cmp
sahf
or
xchg
mov
repz
pop
das
rorw
mov
je
scas
xorl
inc
xchg
fistpll
fs
xor
pop
loop,pn
pop
dec
mov
addr16
outsl
push
add
pop
pusha
lea
imul
cltd
inc
jl
fwait
loop
or
or
aad
xchg
cmpsl
xor
loop
push
mov
sti
cmp
sbb
ljmp
xor
mov
mov
pop
test
sbb
jg
ds
sbb
xlat
mov
rcrb
sub
outsl
cld
xchg
sbb
sarl
fnstcw
mov
jne
xchg
inc
std
out
iret
jno
out
push
sbb
stc
flds
cmp
cmp
imul
movsl
pop
mov
dec
xchg
fidivs
push
fcoml
dec
leave
mov
pop
ret
adc
data16
push
lods
jne
jae
loope
push
or
jle
push
dec
mov
mov
jno
ret
scas
mov
jb
movsb
pusha
jbe
mov
shr
dec
mov
mov
inc
xchg
nop
rcrl
pop
push
xchg
cmp
lods
adc
add
fimull
aam
loope
lea
cmp
push
jmp
lock
ja
add
ss
fiadds
pop
data16
inc
pop
sbb
xchg
fimull
cli
rol
fistl
sub
jns
and
sub
push
fucom
or
push
iret
and
dec
and
dec
fsts
xor
mov
test
pop
out
mov
xor
sub
pop
jbe
std
mov
mov
xchg
lahf
lods
fistps
cmpsb
sub
mov
mov
clc
loope
mov
jb
aas
jno
jb
xchg
fldt
xor
adc
addr16
clc
mov
cli
mov
addr16
stos
dec
enter
insl
pop
mov
cltd
mov
ss
xchg
push
data16
dec
inc
outsb
cwtl
adc
push
pop
pop
iret
cmpl
ljmp
ret
in
dec
pop
and
mov
pusha
ficoms
sub
xchg
xor
jno
push
push
sbb
push
xor
mov
sarb
push
fstl
xor
push
pop
data16
mov
jnp
push
pop
dec
mov
sahf
scas
jne
cmp
inc
pop
add
adcl
loopne
stos
add
aam
xlat
and
pushf
stos
and
addl
fstpl
aaa
pop
xchg
divb
mov
pop
push
or
test
push
mov
push
dec
or
pop
add
mov
jmp
lahf
aam
pusha
iret
jo
adc
jb
inc
fbld
inc
mov
add
lret
call
pushf
and
sbb
push
and
rclb
bound
iret
adc
jle
loope
pop
sbb
and
jg
ds
in
fcmovnbe
xchg
lret
jb
jbe
pop
enter
arpl
test
jnp
mov
push
pop
jp
pop
lock
pushl
xor
pop
push
and
dec
mov
orb
or
fisubl
push
outsl
scas
in
or
ljmp
sbb
out
mov
mov
aam
mov
jno
mov
dec
push
cmp
add
fcomp
mov
push
mov
into
popa
sbb
xor
addl
dec
push
add
test
mov
fsts
loop
push
inc
loopne
pop
cmc
mov
adc
ds
mov
shlb
pop
loope
jae
stos
dec
jne
mov
pop
mov
jmp
sub
fwait
dec
test
loopne
mov
dec
cmp
jno,pn
popa
js
insb
dec
dec
xor
jle
sub
mov
sbbl
jge
adc
pop
cld
or
push
inc
aas
dec
push
repnz
insl
repz
dec
arpl
push
mov
ljmp
insl
adc
or
push
push
aaa
push
mov
mov
push
jbe
in
mov
jns
fwait
mov
cmpsl
iret
dec
adc
js
js
lods
mov
or
xchg
mov
xchg
mov
in
testb
dec
jns
xchg
bound
pop
inc
mov
push
mov
pop
mov
sub
stc
int
xchg
and
icebp
dec
cmp
dec
cmp
outsl
daa
mov
sub
jp
ja
add
popa
adc
xor
in
idivb
push
mov
inc
mov
js
pop
in
xor
daa
inc
enter
mov
jb
jb
into
mov
and
fnsave
jb
add
jnp
daa
inc
and
and
and
data16
int
cwtl
loope
insl
mov
aad
nop
cmp
and
ds
fs
negl
dec
cwtl
xchg
pop
mov
outsb
mov
mov
or
dec
aas
lock
rolb
mov
ja
inc
in
mull
lock
test
inc
dec
mov
adc
dec
mov
js
cmp
out
pop
xchg
cli
sub
inc
add
std
mov
popa
lea
xchg
cmp
sub
fwait
loop
daa
fwait
cmp
cmc
js
int3
xchg
lcall
jo
repnz
and
out
imul
in
inc
push
iret
out
jae
ljmp
leave
fs
notl
mov
adc
out
clc
mov
mov
dec
test
mov
push
dec
xchg
fldlg2
ret
sub
ret
adc
movsb
cld
push
insl
cmp
xchg
mov
pop
xchg
ja
sti
repz
pop
xchg
push
mov
mov
sub
orb
cmp
repz
cwtl
call
sarb
movsb
leave
dec
xor
test
adc
fld
and
test
pop
push
pop
stc
pop
cmp
out
int3
inc
xchg
adc
in
jmp
subb
je
cli
cli
dec
outsb
adc
mov
sbb
pop
in
ret
push
push
mov
xor
ss
push
cmp
inc
jl
out
mov
imulb
pop
xchg
aam
gs
shl
mov
js
cltd
xor
adc
int
popf
sbb
pop
fdivrl
mov
add
fwait
imul
arpl
cld
mov
lret
xchg
sti
sub
xor
add
sbb
notl
mov
push
sbb
fwait
test
pop
dec
in
pop
push
pop
dec
rcrb
push
xchg
cltd
mov
mov
cld
insb
cltd
xor
pop
dec
inc
mov
into
inc
jno
rorb
insl
adc
test
decl
add
add
add
mov
cmp
jne
push
pushl
pushl
pushl
pushl
call
pop
pop
leave
ret
push
mov
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
push
call
cmpl
jne
xor
add
inc
mov
jmp
xor
push
movl
xor
xor
adc
movl
neg
mov
mov
adc
push
mov
mov
mov
sub
xor
mov
movl
cmpl
je
cmpl
jne
push
push
call
xor
or
dec
mov
jmp
xor
xor
mov
add
add
imul
mov
cmp
jne
mov
mov
xor
xor
add
add
imul
jmp
mov
mov
mov
mov
mov
xor
xor
add
add
imul
mov
cmp
mov
je
xor
add
mov
imul
add
mov
mov
pop
leave
ret
push
mov
push
andl
mov
inc
mov
cmpl
jne
push
pushl
pushl
call
cmpl
jne
xor
or
inc
mov
cmpl
jb
orl
movl
mov
mov
sbb
mov
mov
mov
sub
mov
xor
add
mov
mov
xor
push
mov
mov
add
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
mov
xor
add
pop
leave
ret
push
mov
sub
or
mov
mov
xor
mov
andl
add
movzwl
andl
mov
inc
mov
cmpl
jne
pushl
push
pushl
call
cmpl
jne
xor
add
inc
mov
cmpl
jb
mov
movb
sub
lea
andl
xor
or
inc
mov
cmpl
jne
call
cmpl
jb
mov
or
mov
sub
mov
xor
sbbl
sub
addl
mov
sbb
movl
neg
push
and
movl
not
mov
andl
mov
inc
mov
cmpl
jne
call
cmpl
jne
mov
inc
mov
cmpl
jb
or
push
mov
xor
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
pushl
push
push
pushl
call
jmp
xor
mov
push
adcl
add
jmp
movl
mov
mov
inc
movl
cmp
movl
jb
mov
adc
mov
addl
xor
orl
add
movl
jmp
mov
adc
mov
mov
neg
mov
movl
xor
xorl
mov
sbbl
add
addl
movzwl
subl
mov
mov
addl
movzwl
xor
andl
add
mov
movl
mov
inc
mov
mov
movl
cmp
movl
jne
mov
add
mov
sbbl
xor
andl
add
jmp
lods
mov
jae
sbbb
adc
scas
jp
or
jp
cmc
inc
mov
push
in
sub
xor
mov
mov
out
jae
stc
push
in
sbb
cmpsl
add
mov
fbld
and
xlat
mov
imul
imul
dec
cli
sbb
jge
int
add
insl
aam
aas
cmpsb
dec
push
notl
pop
shlb
and
push
sbb
cmp
cmp
sti
push
aaa
lea
jb
push
or
gs
dec
pusha
cmpsb
sbb
in
add
jmp
cmp
push
sti
testl
lock
loop
push
xchg
xorb
xchg
scas
in
push
addb
je
push
cmp
into
sbb
stc
xchg
repz
push
mov
push
loope
jmp
loope
out
cmp
das
add
ret
sbb
sahf
incl
push
subb
cmp
mov
mov
rol
and
mov
ja
xchg
jae
mov
xchg
jo
aaa
pop
aam
ljmp
repz
inc
mov
fbstp
aas
adc
or
mov
push
shrb
xor
out
sahf
sub
xchg
sbb
or
adcl
jno
mov
je
cmp
or
in
xchg
icebp
xor
js
adc
pop
mov
sub
daa
andl
mov
adc
sub
scas
push
movsl
jne
mov
and
jle
jo
jmp
call
cmp
mov
out
mov
lret
loope
cmovl
test
add
inc
mov
mov
push
inc
jbe
mov
negl
sar
mov
cli
fimull
or
jmp
mov
fsubrl
fstl
dec
inc
ficoml
adc
stos
outsb
jo
ror
push
dec
out
xchg
flds
push
inc
and
je
xchg
gs
mov
pop
xor
jne
out
ja
vpackssdw
push
cmpsb
push
adcl
cmp
pop
outsb
push
xor
shll
mov
dec
mov
je
lcall
adc
movsb
jecxz
xor
and
out
std
sbb
jae
rolb
loopne
notb
mov
cld
mov
ja
ret
add
fcmovbe
cmp
pop
and
sarl
and
and
cmp
popa
repz
out
aaa
loopne
and
mov
pop
mov
cmp
fisubs
cli
leave
movd
stos
jne
pop
dec
or
jl
shrl
aaa
xchg
push
les
int3
push
jge
xchg
mov
lock
nop
and
sbb
sti
or
lret
and
outsb
adc
add
or
adc
dec
mov
loopne
push
out
pop
sbb
cmp
add
cwtl
add
cmp
imul
and
push
repz
loop
cmp
mov
mov
jl
pop
xchg
rcrb
pop
aad
or
inc
shrl
int3
or
jno
push
inc
xchg
or
and
loope
push
shlb
adc
and
push
or
and
js
sub
xor
jecxz
xor
adc
out
jb
xchg
das
lcall
add
dec
js
daa
pop
sub
jo
jmp
call
in
hlt
clc
mov
pinsrw
sub
mov
data16
pop
lret
fs
inc
icebp
xor
sub
mov
loope
lcall
lcall
mov
roll
inc
jb
out
sti
into
dec
and
cmc
xchg
mov
adc
aas
ljmp
stos
popa
fstpt
mov
dec
lock
addr16
fcoml
test
pushf
aaa
test
dec
lcall
add
mov
pushf
or
jno
out
push
subb
adc
mov
push
xor
mov
loope
dec
hlt
pop
jecxz
ss
sub
and
mov
add
mov
pop
mov
xchg
adc
dec
dec
pop
fcoms
insb
mov
mov
sub
inc
dec
mov
subb
pop
aam
inc
int
lahf
jecxz
jmp
popa
push
mov
es
lret
daa
sbb
add
jne
adc
push
gs
adc
cmp
cmpl
stc
in
push
jle
sar
push
test
push
cmpsl
jmp
int
xchg
adc
xor
fists
cmpsl
pop
push
shl
adc
sbb
lds
fiadds
xchg
xor
mov
pop
jno
jo
aas
xchg
xsha256
cmpsb
adc
xor
scas
jle
mov
cltd
in
or
sbb
pop
aam
jae
jmp
xchg
lds
and
aad
mov
fiaddl
out
sahf
dec
fwait
std
mov
int
arpl
addb
add
aad
imulb
aad
jmp
cltd
mov
xchg
mov
shll
push
stos
insb
sub
fistpll
sbb
xchg
push
les
lods
xchg
test
push
pop
pop
cmp
push
mov
in
inc
cld
or
and
subb
loop
cld
iret
hlt
and
jne
ja
adc
dec
and
aam
fwait
lods
mov
and
dec
inc
or
aas
or
test
shll
xchg
test
ja
xchg
push
push
cli
jg
in
push
pop
xor
dec
call
pushf
addb
nop
gs
pop
add
jmp
aas
shlb
dec
sbb
imul
and
into
cmp
adcl
jl
jmp
add
jg
xchg
push
add
scas
xor
cmp
rep
pushf
shl
or
lds
nop
sub
inc
or
das
cmpb
push
xchg
mov
cwtl
sbb
movsl
mov
and
mov
xchg
outsb
leave
inc
lea
push
xor
xchg
ljmp
mov
test
jmp
stos
jne
adc
sbb
call
clc
and
hlt
bnd
loop
stos
sarl
push
rcr
mov
ficoml
sbbb
mov
sbb
icebp
lcall
mov
pop
repz
xor
in
sbb
add
mov
pop
into
jl
xchg
add
lcall
mov
and
jecxz
test
inc
or
popf
dec
xorl
inc
mov
xor
es
push
rcr
cs
xor
lret
shrb
inc
pop
outsb
push
sub
stos
jnp
push
movb
out
jbe
jae
lods
subl
jge
adc
push
insb
test
inc
sbb
add
divb
sbb
cmpsl
insb
ret
outsb
cltd
lods
jmp
lret
js
js
sahf
mov
fistpll
or
pop
in
test
popa
notb
xchg
and
xor
rol
hlt
adc
addr16
xchg
xchg
test
mov
jge
and
fidivrl
int
pop
test
in
pop
xchg
dec
jmp
lods
ret
mov
icebp
jae
jns
inc
mov
sbb
nop
arpl
fidivrs
in
aas
lret
mov
xor
mov
push
or
in
jb
adc
mov
sub
jmp
cmp
cmc
jae
lahf
idivb
repnz
xor
mov
cli
aam
shll
adc
js
mov
adc
aas
xchg
loopne
fs
lahf
jbe,pt
add
lret
add
fsubrs
enter
cmp
insl
and
mov
pop
ja
pop
jecxz
jge
fcomps
js
mov
xor
sbb
in
sbbb
pop
xchg
ret
subl
sbb
jg
int3
inc
push
addr16
out
ljmp
in
fidivl
adc
push
mov
fistps
adc
fmuls
jns
mov
adc
fwait
sub
sarb
cmpsb
aas
mov
cmp
arpl
icebp
subb
sti
jge
xorl
lods
or
cld
lahf
movsl
jns
sub
jno
data16
mov
lahf
je
in
bound
or
lods
rcll
and
push
dec
lea
lret
fnstsw
movsb
cld
rcrl
xor
sbb
mov
cwtl
xor
sti
rorb
mov
jnp,pt
sbb
popa
dec
jl
xor
lods
call
sub
into
scas
loopne
scas
nop
push
push
sub
sahf
cmp
rcl
xor
jecxz
mov
mov
xchg
xchg
mov
mov
xlat
adc
es
hlt
and
subb
pop
xor
movb
pop
pop
cmp
movsl
ljmp
daa
mov
push
cmp
xor
rorl
dec
pop
and
test
fiaddl
mov
std
notl
out
cs
sti
pop
outsl
ljmp
decb
xor
adc
arpl
jle
dec
add
subl
in
push
fwait
sahf
mov
movsl
sbb
out
dec
lahf
cmp
cs
rcl
sahf
loopne
cmp
dec
jnp
movsl
in
int3
cs
pop
rep
lds
jno
xor
rclb
lret
pop
or
inc
mov
dec
sahf
mov
ja
outsb
mov
mov
out
stc
es
add
xchg
cmpsb
aam
cli
mov
sub
sub
or
out
aam
xlat
add
or
mov
outsb
lcall
addl
fadds
dec
jno
jbe
dec
and
pop
cmp
sub
sub
mov
jl
inc
lahf
dec
stos
aad
cmp
and
and
sbb
mov
fnstsw
push
sbb
sbb
add
jne
ficomps
sub
mov
push
sub
cwtl
adc
inc
mov
jp
fiadds
mov
xchg
push
ljmp
cld
mov
pop
jg
mov
jp
push
jp
addr16
push
out
out
scas
loop
shll
xor
dec
inc
fwait
cmp
inc
mov
imul
insb
lcall
mov
dec
icebp
ret
sub
push
inc
lds
sbb
pop
rcll
and
ficoms
shrl
int3
pushf
xor
cwtl
fbld
xchg
cli
adc
and
adc
or
or
sbb
add
push
adc
shrb
aaa
mov
repz
push
cmpsb
fs
int
sbb
in
pop
stos
fimuls
aaa
cld
inc
insb
adc
cltd
icebp
loope
jle
es
insl
addr16
mov
test
rcrl
push
and
pop
stc
push
arpl
aad
inc
inc
push
fsubp
sahf
loop
pop
add
idivb
cmp
add
sub
jns
push
push
in
pushf
fildll
sub
sahf
stos
mov
addr16
xchg
mov
int3
and
cwtl
mov
dec
mov
xor
out
mov
or
ret
icebp
push
ret
mov
xorl
pop
int3
sbb
stos
loopne
adc
icebp
push
lock
xor
adc
jno
xchg
push
mov
push
xchg
xchg
pop
push
sbb
into
ljmp
jno
je
inc
pop
adc
pop
divl
cmc
stos
test
xor
push
pop
test
in
shll
popa
mov
ss
xchg
cmpsb
test
adcb
shrb
jecxz
loop
xor
rolb
cmpsl
lods
and
lahf
mov
push
iret
push
pop
lea
jecxz
aam
fildl
mov
leave
aaa
inc
ja
and
sarl
sbb
cltd
outsl
adc
mov
das
cwtl
push
int3
dec
jle
in
sbb
scas
das
jle
dec
or
jo
imul
inc
test
jns
fstpt
dec
inc
cmc
sub
stc
call
testl
dec
dec
dec
mov
imul
lock
es
cs
out
not
je
je
pop
addr16
xor
xchg
loopne
out
iret
jnp
mov
xchg
jp
js
cmpsl
xchg
loop
xchg
lret
mov
inc
push
fwait
aaa
push
push
outsb
shll
scas
xchg
lea
add
mull
out
lahf
mov
adc
dec
xor
push
dec
arpl
pop
dec
fildl
cmpsb
dec
out
and
enter
sub
lret
out
mov
cmp
inc
push
int
stos
subl
adc
xchg
mov
out
jmp
fisttpll
mov
iret
mov
cmc
in
mov
scas
push
adc
sbb
push
lods
cmp
push
lock
mulb
sbb
add
xor
pop
mov
scas
inc
jle
imul
arpl
fistl
adc
mov
or
loopne
hlt
jl
jecxz
xor
pushl
push
jle
push
cltd
pop
test
cmpsb
pushl
out
jne
jae
cmp
jbe
xor
add
into
xchg
sub
sub
xor
mov
pop
sbbb
cld
mov
mov
cmc
xchg
sub
test
sub
idivl
fmul
jg
xchg
inc
test
sub
loopne
mov
sub
mov
pop
rcrb
mov
push
es
adc
adc
lods
push
mov
aad
or
fisttpl
xchg
in
loop
dec
adc
repnz
jbe
ja
dec
mov
addb
repnz
mov
rcr
mov
aaa
pusha
xchg
addb
push
lock
jmp
cmc
ss
xchg
sbb
mov
mov
mov
and
pop
or
out
jge
in
nop
ss
mov
ret
stos
test
mov
lret
xchg
cmpsl
push
sarl
push
or
adc
and
faddl
mov
inc
push
daa
pushf
scas
cwtl
into
adc
std
mov
in
shll
adcb
mov
push
movsb
mov
pop
dec
xor
jne
lret
xor
out
adc
int3
inc
sbb
mov
adc
xchg
inc
xor
or
mov
xchg
fidivrl
fwait
or
shl
xchg
imul
mov
mov
push
cmc
ja
xchg
dec
add
and
sahf
push
xchg
inc
push
xchg
inc
cmp
pop
adc
sbb
and
push
mov
sbbb
ss
fiadds
pop
shl
movsb
fbstp
sbb
fsubl
repnz
xor
inc
fists
push
pop
adc
push
movl
mov
xlat
enter
imul
sub
mov
js
hlt
fimull
cltd
dec
adc
orb
sbb
push
push
xchg
or
jae
loope
push
sub
sbb
clc
add
sub
movsw
insl
std
aad
sub
cmp
daa
lods
loopne
jo
cld
add
sbb
mov
lret
jp
popf
aaa
add
ds
lods
aad
bnd
sbb
lea
pop
popa
adc
loope
pop
int3
sbb
aad
mov
movsb
pop
xor
xchg
add
sbb
pop
mov
jne
xlat
pop
repz
cltd
std
divb
sbb
xchg
add
sarb
aad
inc
add
or
popa
jmp
inc
inc
jg
les
mov
xchg
stos
jge
movsb
bound
cli
in
and
mov
jo
das
adc
jge
and
in
ljmp
aaa
lock
inc
push
jbe
and
in
jae
stos
sub
subl
test
push
and
mov
sbb
loope
mov
out
lods
pop
shl
sub
stos
aad
outsl
mov
outsb
ret
mov
mov
test
in
rcll
iret
std
jge
ljmp
xor
cmp
rcr
push
mov
loop
leave
addr16
movsl
mov
lcall
sub
jo
dec
dec
push
into
lods
push
xor
lods
loop
rcll
insb
loope
fsubrs
jge
xor
mov
sub
ret
pop
rclb
add
mov
mov
xchg
and
fcomp
fwait
mov
call
mov
dec
add
movsl
adc
xchg
in
push
imul
sbb
ret
pop
fwait
jle
cmc
std
test
push
arpl
idivl
shl
test
jmp
sbb
pop
mov
jp
jb
xor
mov
nop
dec
scas
aam
nop
je
mov
movsl
clc
cmp
cmpsl
lret
add
sbb
std
bound
jae
sub
sub
out
jecxz
imull
sub
fbld
xchg
aad
imul
xchg
sbb
enter
lret
out
pop
loopne
ds
fidivrs
orb
pop
push
sahf
push
fwait
mov
add
jae
icebp
shrb
cmpsl
xor
scas
cmp
in
sbb
sbb
mov
and
cmp
inc
or
pusha
rcrl
sbb
das
orb
and
adc
adc
pop
inc
mov
add
and
mov
xchg
aaa
addb
lret
mov
enter
orb
jecxz
leave
mov
mov
aaa
mov
stos
pop
scas
js
nop
sub
dec
fadd
comiss
mov
scas
sbb
rorl
inc
bnd
das
test
dec
cwtl
xchg
movsb
cmp
stos
sub
dec
cs
mov
mov
mov
mov
sbb
fistpl
mov
push
sub
in
cmp
cmp
sbb
dec
mov
sub
sbb
or
cmp
pop
jno
push
popa
mov
out
std
rcr
sbb
inc
xchg
xchg
fisubl
rcrb
mov
sbb
pushf
add
je
sbb
in
in
in
ret
sbb
sahf
adc
or
pop
sub
lods
pushf
into
pavgw
and
adc
inc
icebp
outsl
movsb
ud1
ret
push
scas
insl
lahf
and
push
jne
pushf
cmp
lret
lcall
xlat
mov
xchg
jge
jmp
mov
jo
jae
in
lahf
stos
jb
sbb
scas
repz
decb
sub
mov
das
es
or
dec
push
inc
dec
out
scas
push
addl
adc
rorl
lret
push
xor
and
sub
fimuls
inc
pop
out
pop
and
xor
mov
sbb
cmc
stos
cmpsb
push
rclb
add
mov
mulb
inc
cltd
nop
mov
sbb
rclb
cltd
clc
out
jnp
push
popf
mov
jg
ja
jbe
pop
push
cmc
jl
aad
mov
fwait
arpl
jb
pushf
pushf
sub
mov
dec
std
mov
push
outsl
call
xlat
in
loop
xor
push
dec
xchg
ljmp
int3
add
insl
cmp
popl
enter
mov
jnp
xchg
jmp
cli
xor
inc
fcoms
shlb
cwtl
stos
ret
ja
mov
xor
lods
cmp
and
dec
mov
pushf
btc
inc
add
pop
cmc
outsl
imulb
lods
xchg
pop
mov
push
lret
sub
nop
pop
mov
push
xchg
enter
mov
inc
les
mov
xchg
inc
popl
inc
repnz
xchg
fcoms
inc
fstl
test
add
in
add
pop
jnp
gs
loopne
mov
adc
sub
daa
pop
add
jns
sbb
mov
xor
mov
ret
pop
push
cmp
movsl
in
adc
stc
xchg
imul
jnp
mov
push
sub
inc
jbe
lock
pop
mov
paddw
inc
es
mov
mov
mov
loopne
gs
daa
std
stc
jns
xor
push
loopne
lea
rorb
jno
repnz
mov
xchg
scas
sbb
adc
movsl
psubsb
and
sub
cs
arpl
add
rolb
bound
or
lcall
popa
cld
dec
cmp
lds
inc
inc
arpl
repz
xlat
fldcw
nop
and
ljmp
outsl
cmpsl
rorl
scas
or
cmp
push
bound
lret
jmp
jp
notl
repnz
mov
mov
aam
mov
inc
mov
push
out
testl
and
insl
mov
mov
es
ss
lods
cmpsl
mov
push
ficomps
lahf
sub
adc
int
cs
stos
lcall
stos
mov
frndint
xchg
sbb
pushw
andb
mov
clc
lahf
add
lcall
xor
add
jb
scas
scas
test
neg
lods
pop
jae
roll
jae
add
or
mov
loopne
out
push
aaa
in
loopne
loopne
and
stos
inc
insl
add
in
mov
xchg
in
fdiv
adc
push
mov
shl
or
clc
cmp
jl
outsb
imul
mov
inc
icebp
jns
sahf
rcr
dec
xlat
dec
inc
mov
pop
cmpsb
xor
js
xchg
repz
insl
adc
movsl
into
or
mov
push
or
daa
std
push
or
out
push
loopne
pop
sti
fsubr
xchg
xor
inc
lret
std
jae
loopne
jg
pushf
imul
jnp
inc
out
out
es
out
and
mov
mov
xor
loop
rorb
sub
lret
sbb
and
loopne
mov
aaa
xlat
insb
test
and
inc
std
push
idivl
pop
out
insl
aaa
inc
push
dec
dec
dec
xchg
inc
repnz
cmp
fbstp
pushf
xchg
cwtl
insl
dec
push
xchg
pop
das
out
xor
adc
ja
push
push
pop
fcomp
mov
pop
jbe
stos
xor
xor
push
outsl
push
sbb
pop
dec
adc
jle
mov
pop
mov
mov
fimull
dec
xchg
xchg
sbb
fldenv
sbb
or
mov
ret
mov
icebp
jnp
lds
xchg
or
in
int
int
sti
dec
mov
pop
xor
adcl
push
decb
icebp
jp
testb
hlt
mulb
out
dec
xchg
popf
jle
jns
movlhps
push
es
sub
nop
xor
push
adc
ja
mov
neg
movsl
sbb
add
pop
popf
pop
mov
call
sarl
inc
push
or
ds
jo
xor
scas
inc
mov
scas
cli
stc
push
pmullw
es
rorb
stos
stos
int
jno
aaa
add
popf
js
popa
ret
xor
popa
adc
clc
push
pop
xchg
enter
push
xchg
das
or
shrb
dec
mov
dec
inc
popf
pushf
sbb
mov
push
jecxz
xor
lea
fimull
mov
mov
rclb
inc
mov
mull
cltd
cli
and
fsubrs
adc
dec
les
int
test
sbb
lods
lds
lahf
lahf
xchg
push
and
jl
lcall
pop
adc
inc
sbb
dec
incb
mov
sahf
pop
mov
xlat
jno
nop
out
popa
mov
nop
rolb
icebp
dec
insb
adc
in
mov
mov
in
adc
pop
outsl
push
ja
cmc
mov
sbb
je
cmp
xor
rcl
pop
insl
mov
ss
add
inc
adc
int3
testb
pop
inc
int
xchg
jge
out
jbe
adc
out
jp
sub
add
mov
xor
mov
fistpl
daa
scas
sbb
std
enter
sub
movsb
jb
fnstsw
cmp
push
sarl
lock
or
mov
pop
test
jne
mov
sbb
xorb
push
pop
mov
cmp
repz
les
cmp
out
and
add
lcall
mov
jg
inc
insb
cmpsb
cmp
lahf
mov
jnp
pop
in
fistps
lods
sub
inc
jns
add
enter
cmpsb
jno
fistps
outsb
lahf
testl
fucomi
cmp
adc
jle
ss
int
addr16
in
nop
mov
fstl
sbb
scas
fdiv
mov
mov
jo
lret
pop
sti
movsb
pop
sub
sbb
ror
sub
mov
xor
enter
mov
test
gs
cmp
xchg
inc
mov
mov
pop
and
imul
adc
int3
mov
dec
mov
scas
push
add
and
int
fbstp
daa
rcll
movsb
movsl
mov
sti
in
cmp
push
mov
ja
outsl
jmp
inc
outsl
fdivs
sub
mov
lds
insb
lcall
jns
xor
add
xor
mov
in
aad
adc
sub
mov
xchg
pop
add
sub
imul
imul
pusha
sbb
das
or
sbb
mov
jl
push
mov
fdivrl
jns
mov
stc
xchg
in
dec
gs
int3
push
aas
mov
mov
sarl
inc
push
mov
adc
sbb
fdivs
jmp
mov
fldenv
push
sbb
outsb
xor
fistl
sbb
inc
movsb
mov
mov
or
mov
or
loop
out
inc
pop
mov
in
mov
jb
fldenv
pop
sbb
cmp
mov
jmp
scas
inc
xchg
lret
and
lods
out
sub
pusha
cmp
inc
testl
movsb
sbb
enter
movsb
inc
cmp
cli
outsb
push
pop
sub
jge
mov
fadd
push
sbb
les
xchg
divl
sti
push
jae
jne
stos
or
or
stos
icebp
and
push
aad
mov
mov
xor
jo
ret
push
push
movsl
ss
loope
mov
dec
lret
sub
push
push
shl
mov
incl
icebp
dec
jecxz
sbb
cmp
mov
jns
inc
rcr
jmp
mov
push
pop
sub
cmovne
inc
mov
loop
cmpsl
mov
jo
dec
lods
das
xor
xchg
insl
adc
mov
out
mov
dec
push
inc
aaa
test
lock
mov
mov
pop
sti
test
xor
jns
cld
jo
inc
ficoml
repz
jae
mov
and
jp
mov
mov
stos
jne
mov
les
push
stos
xor
fistpl
or
lock
sbb
or
sbb
sub
out
subl
mov
and
aas
int
dec
add
in
add
pop
aaa
enter
rol
lret
repnz
adc
mov
dec
xchg
int
and
in
xchg
fbstp
and
fisttps
int
jne
enter
xorl
push
or
adc
repz
je
xchg
in
dec
repz
rcl
stos
lock
and
test
and
nop
addr16
inc
and
pop
add
fisubl
cmp
jl
iret
push
cmp
arpl
inc
or
sub
cmp
or
popf
insb
cs
fsts
mov
dec
sarl
lret
adc
dec
push
test
cmp
je
popf
push
outsb
out
daa
movsl
mov
xorl
dec
js
xchg
test
sub
mov
sbb
mov
inc
mov
loope
mov
mov
cwtl
mov
inc
push
movsb
mov
mov
pushf
std
popf
rcrb
les
pusha
aas
dec
das
sub
rclb
push
sub
ror
mov
out
cli
cmpsb
jae
imulb
cmp
popf
lds
and
jp
movsl
lea
sub
dec
add
daa
xchg
or
cmp
mov
shrl
cs
loope
add
out
and
fs
nop
insl
fsubrp
sub
iret
xchg
push
add
and
jl
aaa
insb
fiaddl
loopne
in
dec
pop
xor
iret
mov
outsl
cmpsl
xor
in
mov
adc
and
inc
into
mov
jns
jge
xor
dec
dec
push
push
mov
xlat
invlpg
mov
adc
xchg
in
add
icebp
pop
insl
xor
stos
and
mov
mov
xchg
jmp
loop
mov
fcoml
lods
cmpsl
and
push
inc
mov
cmpl
ret
pop
inc
xor
jge
mov
ss
pop
sub
add
push
outsl
nop
mov
or
push
loope
mov
cmp
mov
ds
mov
iret
xchg
leave
jge
stos
xor
adc
sbb
shlb
cmp
cmp
pop
cmp
inc
push
dec
and
xchg
fistpll
aaa
mov
sbbl
mov
cwtl
into
in
sbb
mov
iret
jle
xor
ficoml
dec
in
idiv
test
bound
addb
cli
sbb
pusha
or
inc
pop
mov
mov
mov
mov
mov
popa
fyl2xp1
idivl
std
or
jp
mov
test
adcl
mov
mov
js
mov
add
cld
pushf
repnz
je
jecxz
movb
rorb
inc
sahf
xchg
mov
fwait
sbb
enter
loop
mov
pop
aas
fcompl
xchg
adc
add
pop
rorl
cmp
jle
popf
hlt
out
imul
add
mov
sub
out
out
je
ljmp
xchg
pop
and
stos
ficoms
mov
in
pop
cmpsb
jo
inc
mov
xchg
cmc
pop
pop
addr16
aaa
out
lods
in
jp
fldenv
sub
inc
fisubs
clc
test
push
in
sti
bound
sub
jp
mov
outsb
xor
jge
and
pop
out
int3
fildll
adc
mov
inc
out
pop
mov
stc
or
cmp
js
xchg
mov
inc
sub
aad
push
dec
or
adc
in
test
fistps
lret
fwait
dec
mov
outsb
jb
mov
sahf
adc
mov
lods
add
and
shlb
sbb
sub
out
adc
lds
xchg
sbb
stc
insl
inc
fisubrs
jecxz
sub
inc
mov
es
and
push
pop
mov
scas
sbb
dec
psadbw
subps
test
shrb
jmp
int3
pop
xor
xor
cmp
ljmp
aad
lcall
stc
ja
cmpsb
push
dec
adc
lods
addr16
inc
inc
pusha
add
xor
push
cwtl
insb
bound
movsl
in
das
jmp
je
sbb
xchg
push
std
out
adc
rorl
push
jo,pt
adc
cmc
popf
movsl
push
adc
sub
xchg
cmp
pop
push
mov
dec
stc
inc
xlat
xchg
pop
lahf
inc
sub
and
hlt
jle
out
jo
lret
fwait
push
sub
enter
add
push
add
add
add
je
cmpl
jne
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
sbb
mov
andl
xor
adcl
add
mov
movl
mov
movl
movl
mov
mov
mov
movl
jmp
xor
mov
subl
mov
subl
xor
sbbl
xor
xorl
sub
sub
xor
andl
mov
inc
mov
cmpl
jne
push
push
pushl
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
dec
mov
add
mov
addl
lea
andl
mov
inc
mov
cmpl
jne
push
pushl
call
cmpl
jb
orl
mov
mov
mov
lea
mov
mov
mov
adc
mov
sbbl
lea
andl
jmp
xor
xor
inc
mov
cmpl
jae
cmpl
jne
pushl
push
pushl
push
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
neg
mov
andl
mov
inc
mov
cmpl
jne
call
cmpl
jb
adc
mov
mov
lea
xor
mov
mov
xorl
mov
lea
add
mov
or
mov
mov
incl
lea
andl
mov
inc
mov
adcl
xor
andl
add
movl
jne
jmp
mov
mov
mov
sub
mov
xorl
xor
xor
sbbl
sub
xorl
sub
xor
mov
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
imul
xor
add
lea
mov
add
mov
mov
xor
jmp
js
inc
iret
aaa
jae
test
pop
sahf
lret
and
or
jp
scas
mov
push
rcrb
insl
mov
and
imul
ds
movsb
pop
sbb
in
inc
cltd
jmp
pusha
ljmp
and
sbb
rcll
cmpsb
cs
mov
test
clc
stos
aas
add
movsl
or
sbb
ds
mov
cmp
xor
xor
stos
push
mov
add
xchg
andl
shl
and
xchg
lahf
repnz
out
xchg
xchg
pop
add
cmp
rolb
dec
cmp
ret
xor
ds
jo
jecxz
jb
push
add
bound
loope
push
mov
mov
push
out
adc
jg
scas
mov
dec
sbb
pop
daa
cmp
push
mov
dec
cs
scas
fmul
inc
cli
push
add
xchg
cmp
xor
and
out
lock
xor
mov
jb
pushf
or
adc
or
in
pop
dec
fcom
inc
and
fs
inc
lds
mov
inc
mov
aas
rclb
pusha
mov
daa
cs
sbb
adc
scas
mov
insb
es
test
inc
pop
ret
fstp
adc
add
lcall
dec
loop
bound
cmp
pusha
mov
or
dec
jbe
jnp
outsl
jmp
in
cmp
adc
push
repnz
lret
jmp
add
jno
addb
jnp
jne
mov
xchg
xor
dec
adc
inc
fldcw
in
sub
cli
nop
ljmp
out
jb
lock
icebp
int3
insb
inc
int
xlat
lahf
push
cmp
fcmovu
pusha
out
imul
push
jbe
lods
addl
stos
mov
pop
jl
add
add
jecxz
mov
movsb
jg,pt
aam
push
call
repnz
aam
popa
inc
xor
cmp
sti
aad
pop
jns
or
pop
mov
mov
lret
push
negb
dec
out
repnz
cmc
ss
dec
stos
cmpb
mov
lret
ja
xor
push
adc
ja
minps
mov
out
cmp
push
jecxz
jbe
fnstsw
fidivrs
movsl
cwtl
inc
in
or
cmpl
out
nop
inc
fxch
testb
aad
std
add
imul
sbb
xor
repnz
icebp
in
std
movsb
pop
fnstcw
roll
js
aaa
dec
dec
push
popf
fdivr
mov
mov
mov
sarb
jle
pop
les
les
sub
adc
jecxz
push
mov
sahf
cmp
and
or
into
call
xchg
in
das
mov
add
inc
or
loopne
movsl
roll
fstps
adc
xchg
stc
or
jae
lret
arpl
enter
xchg
jmp
adc
ret
stc
and
and
daa
jo
adc
ret
xor
jp
mov
jmp
fwait
imulb
inc
push
shl
lcall
sub
lret
fidivrl
lahf
and
inc
push
inc
scas
dec
repnz
push
cmpsb
mov
jnp
ljmp
or
adc
rcll
pop
test
cmp
mov
mov
fmul
and
or
mov
push
sarb
lods
inc
popa
lock
imul
aam
mov
and
hlt
or
xchg
loope
jg
lods
orb
mov
fcom
hlt
xchg
aam
gs
pop
sbb
jg
je
pusha
mov
test
sub
pop
fdivrl
mov
lock
fistpll
jp
cmp
cltd
roll
ds
mov
pusha
sbb
ja,pt
out
inc
adc
ljmp
xlat
pop
sbb
cltd
repz
es
imul
adc
out
xchg
or
ret
xchg
jo
cmc
cwtl
add
pop
es
js
mov
push
sbb
sbb
push
pop
xchg
add
clc
dec
add
sahf
mov
test
imul
inc
fldcw
int3
cmc
in
xor
scas
mov
adc
lret
xor
push
sub
fbld
mov
cmpsl
das
or
mov
inc
stos
lods
dec
imul
jnp
inc
adc
jne
cmc
or
jge
stc
pop
mov
xorb
cmpsb
fisubs
cmp
lock
dec
mov
decb
xor
in
jg
add
imulb
test
and
or
mov
in
loopne
add
ret
mov
adc
lret
mov
es
addr16
adc
mov
std
cld
icebp
jp
and
in
add
xchg
cmpb
push
push
cmpsb
dec
das
mov
lret
push
or
int
cld
js
sub
dec
cmpsb
or
int
rcll
mov
mov
push
lock
mov
sub
cwtl
xchg
imul
adc
insl
outsb
shrl
xor
xor
sbb
ror
push
fnsave
and
dec
std
jecxz
mov
enter
int3
jo
popf
push
xchg
inc
xor
in
fisttpll
mov
pop
fmul
dec
dec
leave
out
scas
jp
adc
sub
adc
push
mov
nop
enter
mov
mov
mov
mov
cmp
repnz
ja
inc
sar
xor
pop
mov
sbb
aad
out
cmp
xchg
add
pop
dec
clc
jmp
xchg
mov
lret
icebp
jae
mov
jne
mov
frstor
stos
push
stc
sbb
mov
pop
sbb
xchg
sbb
cmp
enter
xor
jg
jno
fwait
cwtl
les
mov
sbb
sub
or
pop
add
sar
dec
test
in
out
sbb
xchg
aaa
push
dec
ja
fidivrs
add
shl
sbb
outsl
ret
mov
xchg
jecxz
outsb
shlb
int
xor
loop
pop
fwait
lods
cmp
sbb
pop
pop
jge
jmp
scas
outsb
lods
push
sahf
mov
mov
lods
cmp
adc
push
cld
xchg
stos
or
hlt
inc
pop
or
sub
cmp
cmp
fsts
fldenv
imul
fwait
and
lcall
aam
dec
inc
ljmp
xchg
in
mov
insl
mov
scas
jae
lds
data16
lcall
sti
pushf
stc
mov
cld
js
shll
lret
jl
aaa
or
sub
inc
rorb
pop
outsl
xchg
lret
movsb
inc
fsts
mov
and
add
mov
fnsave
rcpps
adc
repnz
nop
mov
sub
repz
mov
or
fisubs
add
sub
add
add
xor
fucompp
push
fwait
je
sbb
jmp
cmp
rolb
jmp
sbb
mov
call
sbb
sbb
lret
cmpl
mov
lds
cmp
stc
faddp
pop
pop
js
popa
js
ds
add
lods
popf
sub
jecxz
fs
mov
inc
daa
aas
rcl
add
sub
add
or
jg
orb
inc
leave
lds
iret
push
loopne
or
jl
fwait
mov
scas
ja
push
jle
adc
gs
lock
cld
je
pop
cmp
adc
and
mov
outsl
push
bound
jo
or
aad
orl
into
jne
repz
in
jne
push
adc
and
or
fidivrl
popa
mov
shlb
fnstcw
sub
mov
dec
sbb
outsb
testl
dec
loopne
stos
out
cmc
jae
lcall
fwait
xor
aas
das
or
arpl
xchg
xchg
mov
mov
mov
scas
xchg
cld
test
mov
push
sbb
push
stos
inc
imul
sbb
sbb
ljmp
shlb
sahf
fcoml
pop
movsb
jbe
cmpsb
test
scas
mov
add
push
xchg
jbe
xchg
call
xorb
xchg
shr
add
xchg
mov
shll
sbb
aas
and
outsl
cltd
out
dec
add
add
jg
push
stos
and
fwait
mov
pop
mov
xchg
test
xlat
jae
in
shll
cwtl
cld
add
fstl
push
dec
mov
xchg
lret
xchg
orb
push
js
pop
dec
mov
cmpsb
insb
xor
sub
xor
imul
xchg
dec
adc
leave
pop
and
push
xchg
dec
sti
ljmp
xor
stos
jmp
xchg
mov
scas
lods
jne
push
pop
jge
int3
and
push
cs
mov
pop
dec
xchg
or
cmc
or
je
imul
mov
add
ret
ja
sti
cmc
loop
jne
sub
push
and
inc
sbb
mov
inc
inc
adc
mov
stos
out
mov
and
daa
adcb
sahf
inc
leave
cld
mov
cmp
inc
adc
mov
or
pop
add
cmp
push
dec
fwait
adc
mov
sbb
mov
sbb
stc
push
push
ret
xor
mov
pop
pop
jns
in
movsb
mov
mov
stos
xlat
cmp
out
lock
pop
in
outsl
mov
push
shll
mov
aam
jae
clc
fs
jg
nop
cltd
inc
inc
mov
imul
cmpsb
jmp
xchg
mov
mov
rol
xchg
repz
xor
xlat
leave
out
xchg
ja
test
push
idivl
dec
jg
xchg
xchg
dec
xor
int3
adc
das
xchg
jmp
out
outsl
jecxz
inc
dec
in
fiadds
flds
andb
and
xchg
cmpsb
add
scas
int3
inc
fcomp
mov
xchg
adc
adc
or
inc
sbb
aad
jmp
lret
sbb
in
cmp
dec
cmp
lea
or
pushf
lods
mov
aaa
or
mov
fwait
inc
inc
mov
pop
sub
push
arpl
sti
and
dec
mov
lds
adc
jl
pusha
aad
xor
sbb
notl
mov
cltd
dec
daa
movsl
addr16
cs
jl
adc
imul
sub
mov
int3
cli
xlat
pop
ja
xchg
pop
jns
inc
xchg
pop
aaa
cs
push
xchg
inc
push
cmpsl
jae
and
out
incl
mov
sarb
sub
mov
imul
sub
ljmp
loop
push
adc
xchg
repnz
push
test
or
jne
sub
test
add
push
ljmp
sub
stos
aam
sbb
mov
cmp
xor
push
cmp
mov
int3
lret
push
fsubr
stos
popf
mov
sbbb
ret
nop
sub
leave
std
repnz
xor
push
es
xor
mov
insb
test
dec
ja
mov
stos
stos
ret
ja
pop
cmp
stos
jmp
jns
jb
adc
lock
push
mov
cmp
imul
mov
insl
lcall
fs
call
pop
sbb
push
in
aas
cmpsl
daa
inc
ss
and
imul
incb
sti
add
das
repz
jecxz
or
add
mov
cmp
repz
adc
ret
jno
outsl
mov
imul
jb
sti
push
int
out
inc
mov
iret
notl
js
pop
mov
stos
lret
in
sbb
jp
jmp
loopne
popf
sti
popa
fsubrl
ja
js
das
or
sbb
mov
push
and
clc
loop
push
mov
daa
in
xchg
sarl
cmp
sbb
call
ds
mov
aad
sub
js
in
pop
mov
repz
inc
aad
lods
aaa
dec
push
push
js
sub
sahf
movsl
push
xchg
cmpsb
aad
mov
cltd
roll
lods
inc
scas
shll
add
test
jo
rolb
dec
gs
pop
sub
xor
inc
ss
jle
lods
mov
mov
jnp
xor
add
sub
mov
xchg
int
iret
pop
or
lods
cmp
rclb
dec
mov
inc
lea
mov
addl
inc
mov
mov
shlb
push
pop
push
add
mov
or
mov
and
xor
pop
movsl
hlt
mov
push
mov
sbbb
cmpsb
faddl
jo
rcll
cmpsb
xor
popa
cltd
mov
imul
adc
pop
jne
or
mov
test
insb
test
push
pop
cmp
sub
sub
in
push
pop
pop
stos
sbb
das
adc
dec
scas
mov
xchg
mov
pop
addl
xchg
push
imulb
lret
inc
setl
loop
and
cmc
in
cmp
cmc
cmp
fldt
repz
xchg
and
into
out
bound
and
and
sub
lret
mov
and
in
xchg
xor
nop
lcall
or
movsb
cltd
enter
scas
loope
rcr
xor
adc
pop
stc
outsb
mov
fnstsw
jmp
or
fwait
mov
mov
ljmp
push
daa
adc
xor
mov
shll
mov
icebp
sbbl
out
cmp
add
in
xlat
mov
sub
stc
mov
jg
cs
jns
mov
fidivrs
into
pop
insl
push
mov
xchg
fsub
xor
inc
dec
lods
lcall
adcb
inc
xchg
mov
push
push
imul
mov
xchg
jo
pop
sub
lods
jp
push
jo
call
mov
fwait
mov
adc
imul
mov
jo
pop
xor
jns
push
lock
cld
jno
cs
push
stos
or
dec
push
fmulp
push
daa
pop
mov
cmpsb
mov
xlat
sbb
cmp
in
fisubs
fsub
inc
mov
fwait
sti
inc
fdivs
ret
nop
sbb
fdivl
xor
inc
ror
in
out
push
adc
out
xor
jg
cmpsl
gs
inc
enter
imul
shrb
shlb
jns
mov
stc
xor
stc
xor
push
pop
movsb
push
jp
pop
mov
mov
ret
dec
add
pop
inc
out
out
dec
rorb
and
das
andb
pop
mov
insl
hlt
sbb
test
pop
adc
in
inc
jno
js
scas
push
sub
lcall
jecxz
push
icebp
jb
dec
in
scas
das
mov
pop
mov
or
mov
aad
subl
iret
into
outsb
sbb
sbb
cwtl
movsl
sub
fwait
mov
ja
inc
in
push
leave
sub
int3
lock
hlt
bound
or
adc
mov
fisttps
js
ret
jmp
and
lret
cld
pusha
aad
scas
cs
pop
jge
xchg
sub
add
and
mov
adc
or
jnp
in
sub
aad
push
nop
mov
jns
scas
adc
fisubs
loope
stos
pop
ret
insl
adc
pop
insl
ds
or
loopne
movsl
jge
imul
test
sub
adc
out
jne
and
adc
call
dec
in
out
aaa
test
fldenv
jmp
lock
jne
jge
mov
mov
popf
add
mov
imul
test
pushf
lea
ds
mov
inc
or
scas
xchg
lock
pop
push
mov
inc
dec
xchg
push
movsl
mov
xchg
and
or
adc
adc
jge
push
pop
cmp
xchg
dec
sbb
push
pop
mov
pop
add
jno
xchg
mov
dec
and
xchg
pushf
pop
pop
lcall
inc
jno
ret
in
sahf
andb
mov
sub
add
jno
lods
mov
xchg
sbb
xor
dec
jnp
out
sub
xor
push
cwtl
nop
adc
xor
cmpsb
nop
adc
inc
out
push
loop
mov
or
mov
lds
cmp
push
push
mov
out
orb
adcb
jmp
xor
insl
out
gs
or
fiaddl
addr16
xor
leave
ret
dec
imul
pop
cltd
add
clc
add
fidivrs
push
xchg
mov
data16
shrb
test
mov
inc
loop
adc
outsl
adc
int3
insb
lods
imul
lahf
shlb
push
cld
ss
cmp
cmp
xlat
in
cmc
aas
int3
dec
sbb
cmc
cmc
leave
rorb
xlat
popa
mov
xchg
dec
xchg
or
xchg
xor
insl
int3
lock
dec
jbe
into
lock
cld
jl
inc
idiv
ja
out
mul
add
ret
push
and
cs
loopne
or
iret
sbb
in
mov
mov
sbb
mov
sub
ss
scas
mov
cmpsb
int
shr
imul
sbb
mov
out
aas
movl
dec
mull
xor
jl
es
mov
push
and
aaa
sub
lock
or
push
movsb
cmp
dec
lock
mov
in
sbb
sti
add
mov
or
lret
fists
cmp
jae
or
xchg
test
andb
pop
xchg
push
add
mov
mov
adc
pusha
lret
dec
mov
sbb
mov
int3
es
push
enter
jmp
in
mov
pop
pop
xchg
das
bound
or
int3
fbstp
mov
sub
jle
mov
mov
cld
mov
addr16
and
mov
dec
insl
cs
pop
loop
mov
jo
lock
push
xchg
inc
sbb
mov
xor
stos
or
pop
jg
orb
test
cs
jae
rcrl
scas
jae
sbb
mov
call
call
mov
inc
fwait
popa
les
xchg
fstp
gs
mov
data16
shll
rcrb
or
ds
adc
test
xchg
push
dec
and
bound
int3
fsub
cmp
mov
subl
mov
jnp
stc
mov
jg
bound
mov
mov
lret
push
sarl
xor
aam
inc
imul
xchg
rcrb
sahf
sbb
ds
push
sti
cmp
ds
mov
bound
cmpsl
ja
push
cmp
xchg
int3
and
and
mov
clc
mov
push
jns
adc
rol
pop
cld
xchg
push
xor
jecxz
mov
fcomps
nop
mov
sahf
inc
sub
push
fwait
popa
enter
xor
call
push
mov
stc
and
mov
xchg
and
jg
jnp
cmp
ds
notl
lods
pop
cmp
repz
jp
and
repz
inc
ret
mov
inc
test
stc
push
out
shl
xor
adc
mov
pusha
push
push
cmpsb
leave
jl
inc
xchg
stos
push
je
pop
jne
sub
dec
and
repz
out
xchg
loope
in
mov
xorb
fistl
ret
aad
pop
pop
pop
js
icebp
js
mov
push
aam
ja
push
or
loope
or
addl
jno
dec
xor
sub
dec
xor
addr16
inc
js
das
jb
jne
shlb
push
jae
mov
out
movsl
dec
nop
mov
inc
mov
sub
or
sarb
inc
int3
cmp
sub
shll
or
mov
pop
ret
mov
ret
loopne
mov
roll
cs
ret
popf
adc
cld
push
xchg
cmp
sub
or
popa
pusha
xchg
xchg
push
push
sub
pop
dec
setno
in
out
int3
mov
dec
push
jnp
nop
movsb
sub
mov
mov
xchg
lcall
inc
dec
stos
mov
and
in
jge
mov
dec
adc
aam
push
mov
cmpsl
enter
or
in
decb
pop
into
cmpsl
js
cs
cmp
push
insb
daa
stos
and
fimull
rorl
adc
andl
test
adc
or
ljmp
pushf
into
leave
push
pop
pop
clc
lock
mov
push
dec
sub
sahf
sub
and
aaa
xor
dec
sbb
sahf
mov
jb
aam
mov
xchg
or
dec
dec
jp
rcl
sub
xor
mov
mov
and
pop
xchg
adc
adc
int
icebp
jo
mov
inc
lret
jmp
aam
or
ret
xor
mov
sub
xchg
cmp
push
movsl
mov
xchg
or
mov
mov
add
orl
sarb
push
mov
out
xchg
xchg
jne
lods
loope
cmc
jle
add
dec
ret
dec
and
fs
fnsave
sarb
sbb
leave
and
pusha
ret
jmp
cmp
lods
push
mov
loope
inc
in
addr16
mov
push
adc
sub
aad
pushf
stc
xchg
popf
and
iret
cmp
stc
les
adc
mov
das
inc
inc
repnz
test
push
pusha
subl
sbb
add
inc
int
cmpsl
jl
repnz
pextrw
movsb
mov
fsubrs
dec
decl
fadds
cwtl
mull
mov
loope
adc
fdiv
cltd
lods
in
dec
loopne
mov
shrb
out
aas
dec
and
sbb
jbe
pop
lahf
clc
mov
cmp
and
dec
cs
dec
call
icebp
test
jbe
ljmp
or
add
je
xchg
frstor
test
pop
cli
add
je
jns
add
ljmp
idivl
aam
adc
clc
je
mov
ds
imul
movsb
adc
ljmp
rcll
push
mov
dec
inc
jno
jnp
pop
inc
mov
mov
cmpl
push
scas
xchg
sub
dec
clc
inc
dec
or
dec
push
jns
gs
addl
and
xchg
lea
mov
mov
fs
push
push
jg
jno
jge
sub
mov
aam
repz
pop
cld
out
popf
and
and
mov
mov
rolb
loope
sub
into
inc
mov
lret
cwtl
and
andb
std
cmp
and
out
xchg
xchg
push
or
mov
mov
sub
sti
sub
jae
dec
testb
jae
and
pop
fsubs
mov
add
push
sub
xor
pusha
cmc
and
and
jo
std
lcall
sub
pop
out
in
das
ljmp
pop
jmp
movsb
and
mov
jno
lret
jb
push
sub
leave
sti
or
loopne
fstpt
rcr
sub
xor
cmp
or
jns
adc
push
mov
add
mov
sbb
xchg
subb
push
iret
mov
cmpsb
loope,pt
xchg
fcomps
push
push
shrb
cmpsl
lds
nop
mov
jge
mov
xor
mov
adc
pushf
repnz
mov
push
addr16
in
add
xor
push
fs
jecxz
adc
sub
jmp
push
popa
loopne
add
and
xchg
mov
xchg
ret
adc
shl
adc
adc
cmp
into
mov
mov
mov
mov
test
sbb
std
hlt
inc
rcrb
cmpsl
test
ret
in
xchg
dec
aam
and
repz
xor
inc
xchg
cltd
dec
pop
jg
cltd
jbe
mov
out
loopne
in
sub
rcll
pop
xor
jmp
xor
and
dec
jmp
outsl
gs
push
or
out
pop
nop
daa
xor
dec
lahf
aaa
lahf
mov
movsl
pop
repz
movsb
xchg
sti
aaa
mov
dec
filds
cmp
cmp
popf
jge
push
ret
adcl
out
or
je
movsl
out
dec
cmpsl
push
sbb
fimuls
xchg
sub
ret
mov
lods
and
mov
pop
ljmp
jno
xor
lcall
adc
add
lods
lock
shl
jp
repz
lds
fxch
cmp
frstor
add
inc
call
mov
jbe
out
pop
add
add
insb
out
repnz
dec
pop
call
xor
sub
pop
push
movsl
roll
filds
mov
dec
fistl
sbb
fwait
scas
mov
and
data16
test
add
mov
gs
lock
jno
and
std
xchg
adc
pop
leave
push
lcall
ljmpw
or
cltd
dec
pop
bound
pop
lret
mov
sbb
add
in
lahf
outsb
mov
inc
aaa
dec
cmp
insb
jg
push
lds
xor
subl
fnstcw
arpl
sub
in
gs
jae
scas
sub
fwait
jp
lods
adc
in
adc
call
inc
daa
cmpsl
ret
adc
dec
cld
pop
dec
inc
and
and
std
push
pop
test
sub
loop
cs
or
jbe
mov
addr16
insl
jns,pt
imul
aas
mov
inc
mov
in
outsl
sahf
jecxz
ret
xor
push
jecxz
out
and
dec
clc
int3
loop
aas
inc
stos
in
ficomps
sub
mov
ds
movsb
adc
cltd
popf
pop
xchg
lods
inc
cltd
mov
mov
push
cmc
lahf
mov
mov
stc
jge
fwait
xor
sub
imul
jmp
arpl
jecxz
pop
mov
pop
lds
int3
push
xorb
rclb
jle
xor
mov
aad
sbb
lods
mov
sub
cwtl
clc
sub
cld
sbbl
int3
sbb
iret
stc
popf
mov
add
fstp
or
mov
mov
testb
xchg
or
dec
icebp
jg
movsb
mov
push
bound
or
dec
orl
adc
out
lret
xchg
lcall
push
loopne
test
fisubl
mov
insl
neg
loopne
inc
dec
sbb
inc
fstpl
cmp
in
lds
test
and
cld
rcr
pop
sub
pop
data16
or
jmp
or
sbb
cmpsl
xchg
lock
insb
xlat
dec
pop
ss
cmp
sbb
mov
imul
jmp
xchg
pop
mov
and
ror
loope
mov
xchg
xchg
xchg
pusha
mov
push
inc
das
dec
jne
mov
test
test
xchg
fwait
pop
inc
dec
int3
int3
scas
mov
lock
xchg
jmp
inc
dec
call
rcr
popa
mov
push
cwtl
pop
imul
push
xor
mov
insb
jmp
roll
push
mov
loopne
lret
smsw
xor
frstor
ficoms
shll
adc
icebp
test
pop
jmp
ret
push
jb
iret
lret
orl
aad
mov
js
lods
add
inc
test
fildll
add
xor
pusha
movl
testl
cmp
sub
pop
cmpsb
fbld
in
mov
test
dec
push
adc
in
je
lcall
xor
push
popf
jecxz
repz
arpl
jg
pop
dec
repnz
mov
add
ret
add
mov
ds
outsb
or
inc
call
push
fsubs
adc
push
lcall
sub
add
sub
mov
stc
ret
mov
rcr
lret
xor
jo
outsl
divb
add
mov
test
cmpsb
test
cmp
cmp
enter
ljmp
in
dec
rorl
lcall
push
daa
fldcw
fsts
ret
mov
leave
jmp
cwtl
inc
cwtl
mov
mov
jne
xchg
fcoml
aad
repz
add
ret
push
inc
in
fxch
scas
cmc
dec
mov
stos
movsb
repnz
js
adc
pop
sbb
pop
mov
cwtl
mov
in
pop
data16
jns
imulb
les
sahf
push
or
loope
or
inc
loope
mov
lods
aas
push
lret
dec
sub
aad
stos
lods
jmp
xchg
movsb
nop
or
stc
mov
scas
cs
movsl
cmp
xchg
xchg
fwait
pop
repnz
subb
sti
cmp
xchg
shll
dec
dec
mov
sub
mov
dec
lock
out
cmpsl
add
dec
cli
mov
push
sbb
push
popa
test
inc
or
test
sbb
jb
lods
jp
ret
push
and
inc
push
dec
lods
or
push
jb
xor
add
push
hlt
sub
cltd
filds
push
ret
frndint
roll
jbe
flds
clc
out
subl
int
mov
push
outsl
adc
pop
mov
aas
xor
dec
sbb
out
and
test
cltd
push
pop
hlt
and
cli
insb
jl
add
mov
std
cmpsl
inc
arpl
cli
shll
sti
daa
cli
jae
push
mov
lods
xchg
sbb
lods
iret
pop
xchg
adc
sbb
sti
xor
outsb
fdivrs
jne
jnp
movsbl
mov
cmp
ja
and
out
sbb
ret
inc
mov
into
push
pop
ljmp
cmp
mov
mov
xor
mov
ret
mov
jmp
or
jnp
fcomi
out
and
fs
mov
jno
or
add
ljmp
inc
rsqrtps
shll
stos
sarl
push
push
jmp
out
pop
imul
xchg
mov
sub
push
test
mov
jl
mov
sbb
jecxz
push
imul
inc
scas
sar
xor
lods
cmpsl
hlt
xchg
mov
sbb
push
add
xchg
sbb
pop
add
jmp
lret
pop
fiadds
mov
imul
fxtract
iret
push
xchg
stos
push
lea
in
mov
inc
pop
aad
xor
test
cmp
sti
ds
test
adc
lods
test
sbb
inc
sbb
outsl
loop
xchg
jae
lret
sub
or
inc
std
and
xchg
lods
inc
out
movsl
xor
xchg
in
int
xor
rclb
aas
fnstenv
dec
clc
pop
pop
jns
sub
sysenter
sbb
mov
rolb
mov
sub
fdivs
in
stos
cmpsb
stos
fcoms
fucomp
push
rcll
out
or
cmp
jle
addl
mov
mov
dec
xchg
test
cmp
scas
and
into
jne
mov
mov
mov
cmp
je
jmp
jb
or
mov
xchg
aaa
rcl
push
jge
or
jp
cli
repnz
repnz
inc
cmp
push
mov
pop
mov
rcll
cmp
jno
xchg
lret
fstps
lock
scas
mov
insl
cli
das
jbe
leave
jb
dec
inc
push
push
and
repnz
add
cmpsl
dec
aas
aaa
aaa
jno
sub
push
js
ja
adc
js
inc
divl
les
cmpsl
inc
nop
jns
arpl
push
aad
ficompl
je
hlt
repz
mov
cmp
aaa
mov
int
or
sub
imul
lret
dec
and
vcmpss
test
adc
mov
iret
loopne
cmpl
push
and
pop
xchg
jae
out
dec
add
xchg
and
pop
sbb
decb
int
leave
xchg
jns
mov
sub
sub
push
pop
and
adc
aas
lret
iret
fbstp
shlb
clc
js
lret
or
outsl
out
pop
xor
push
mov
sarl
call
pop
stc
push
test
xor
jnp
jl,pn
and
dec
test
es
out
pop
mov
bts
lea
xchg
mov
fs
pop
cltd
in
sbb
sbb
sbb
xchg
lods
dec
xor
shlb
dec
leave
imul
push
aas
test
jnp
xchg
test
lods
dec
ret
outsl
or
pop
in
jl
fldl
shlb
mov
inc
mov
and
push
lea
push
pop
sub
shrl
add
jmp
es
adc
push
push
fcoms
jb
adc
mov
iret
pusha
jae
and
and
pop
aaa
mov
dec
sbb
jbe
sub
cmp
pop
dec
fisttps
cmp
ljmp
test
or
add
cmp
push
xchg
dec
aam
das
stos
push
leave
mov
inc
xchg
sbb
mov
lock
gs
lods
jmp
mov
xlat
mov
or
popf
aaa
push
loop
js
xchg
push
xchg
mov
jge
jbe
cmpb
lods
ficoms
stos
cltd
mov
pop
std
rorl
into
push
xchg
das
adc
in
push
mov
sbb
mov
or
ror
sub
or
or
push
pop
push
iret
mov
mov
imul
dec
lock
daa
pushf
jle
jecxz
jge
nop
mov
cs
pop
push
out
pop
stos
in
scas
test
sbbl
scas
loop
leave
sahf
les
jnp
sbbb
call
icebp
or
sarb
pop
lods
add
xor
jb
dec
call
inc
mov
data16
jae
std
push
sub
mov
sti
jns
cltd
pushf
and
inc
bound
ret
in
pushf
mov
int
jge
mov
inc
or
int
dec
movsl
and
and
loopne
stos
test
stos
cmpsl
mov
or
lret
and
ficoml
adc
jbe
add
into
loopne
pop
and
mov
jmp
push
inc
dec
hlt
into
adc
ljmp
stc
sub
inc
adc
jnp
scas
ror
cwtl
orl
mov
insb
adc
movsl
mov
loop
xchg
stos
pop
lock
leave
push
fldenv
jnp
mov
pop
aam
xchg
push
jle
cmp
jno
das
arpl
aas
mov
fsubrl
cli
ljmp
xor
mov
sbb
jle
xchg
mov
test
dec
sbb
adc
dec
sub
in
inc
testb
sbb
in
mov
out
scas
push
jbe
push
xchg
nop
mov
cld
fnsave
stos
sub
adc
inc
imul
imul
insb
fldt
mov
cmp
bound
sub
repnz
nop
mov
lods
push
nop
lret
sbb
xchg
sub
and
or
and
dec
cs
ljmp
test
mov
mov
sub
mov
das
adc
cli
mov
lcall
adcw
adc
pop
iret
and
insl
scas
jge
jp
sbb
mov
mov
in
or
rcl
iret
xchg
cwtl
cmp
pop
inc
inc
pop
cltd
cmc
ret
sbb
mov
int
popa
mov
sbb
test
addl
sub
inc
cltd
xchg
lcall
mov
mov
lahf
sub
sbb
add
shl
xor
cmpb
push
bound
dec
les
mov
xor
in
stc
test
aam
sahf
adc
lods
data16
cs
xor
or
dec
js
insb
and
mov
adcb
mov
or
mov
sub
xchg
xchg
cwtl
push
mov
rcl
ja
push
sub
push
sti
cli
fwait
pop
cmp
fdivrl
cwtl
stc
mov
adc
sbbl
jg
fstl
adc
aad
and
call
imul
bound
das
xchg
mov
inc
mov
enter
pop
fnop
pushf
xchg
call
sbb
or
add
fsubrs
int3
jne
outsl
roll
mov
mov
sarl
lock
cld
mov
insb
sub
xchg
push
sub
pop
insl
lock
mov
mov
cld
sarb
lcall
in
insb
test
adc
movsl
inc
fcompl
adc
loope
dec
fidivl
rol
push
cs
jge
sbb
mov
fisubl
cmp
xchg
sub
mov
or
jg
pop
aas
or
jg
in
ljmp
out
push
pop
in
pop
pop
pop
arpl
arpl
shl
scas
add
std
inc
push
out
popf
and
inc
fimull
sub
fwait
jmp
dec
cmpsb
sbb
out
rclb
sub
xor
sbb
sbb
jle
sahf
push
hlt
js
pop
test
cli
xchg
cmp
sub
popa
add
lret
test
dec
lret
jns
cmpsb
jl
xchg
mov
lret
mov
mov
pushf
mov
pop
jmp
inc
xor
xchg
lods
add
scas
outsl
mov
test
sbb
push
mov
mov
mov
jg
pop
cltd
jecxz
mov
ret
push
xchg
mov
es
sahf
mov
jg
push
and
mov
lret
movsb
adc
sub
pop
sbb
into
insl
mov
fcoml
ljmp
lret
and
aad
pop
scas
and
aad
sarl
scas
cwtl
push
jmp
cmc
stos
pop
shlb
stos
rol
cmpl
aad
jbe
add
fisttpll
mov
pop
sub
add
dec
mov
outsb
fldt
gs
mov
in
mov
ret
fbstp
lock
push
rcr
es
testb
cmp
into
jge
push
add
orl
sub
mov
mov
cwtl
mov
lcall
out
lahf
mov
rcl
enter
jecxz
xor
cmp
insl
ss
movsl
xchg
adc
aad
int
dec
mov
adc
mov
pusha
pop
xor
or
sub
pop
in
cmp
jl
fxtract
xor
pop
and
adc
iret
push
into
add
and
or
jg
ds
mov
cmpsl
test
pop
push
mov
dec
xchg
int3
or
dec
cmp
rorl
sub
mov
push
push
pop
mov
pop
xor
or
pop
mov
mov
inc
add
aam
and
out
rorb
cmp
ljmp
iret
outsb
xchg
inc
out
xchg
add
test
sysret
xchg
sbb
loopne
enter
pop
cwtl
mov
xchg
sbb
mov
movsb
dec
enter
mov
and
xchg
xchg
stos
push
shl
jmp
mov
jecxz
aad
sbb
lret
pop
jae
mov
pop
mov
push
inc
push
adc
mov
inc
rclb
nop
ds
mov
lods
jl
out
jecxz
jo
jl
mov
xchg
jle
je
xchg
adc
iret
je
xchg
nop
ja
xor
andl
rcll
inc
or
lock
mov
pop
icebp
stos
iret
jmp
cmp
std
lods
pop
mov
push
xor
or
sbb
adc
ss
sbb
stos
lock
enter
iret
cmp
jno
mov
mov
pop
addr16
sub
lds
outsb
push
pushf
dec
xchg
add
notb
mov
xchg
mov
adc
sbb
jp
pop
dec
ret
sahf
pusha
xor
add
or
fdivrs
pop
das
test
ret
cltd
mov
jle
cli
mov
icebp
loop
daa
dec
sahf
pusha
pop
repnz
sti
scas
push
pushf
mov
cltd
xor
jno
rol
mov
lret
test
ja
scas
lahf
push
inc
das
fcmovu
clc
mov
mov
ja
sbb
cmp
or
adc
mov
cmp
adc
sub
jae
lahf
and
add
cltd
lret
mov
mov
xor
call
pop
dec
inc
inc
mov
dec
cmp
pop
iret
sti
mov
movsl
push
outsb
loopne
dec
jns
imull
inc
inc
ficoms
mov
jg
jge
jecxz
data16
movsb
dec
adc
pop
test
test
adc
insb
cs
add
adc
xor
sub
cmp
xchg
sbb
mov
lock
sti
jmp
testb
cmp
sub
in
loope
test
xor
pop
pop
std
add
or
push
pop
arpl
addb
clc
xchg
inc
cmp
mov
xor
jns
or
ror
cmp
gs
add
jae
sub
lret
call
and
mov
sbb
adc
andb
stos
psrlq
mov
movb
xchg
aaa
pop
ret
adc
rol
ja,pt
cmpsl
test
mov
jbe
daa
or
aam
push
scas
add
rclb
and
jle
jmp
inc
push
pushf
stos
and
rcl
loope
lea
stos
bound
fsubrs
out
mov
dec
cli
enter
mov
sbb
cli
pop
dec
fildl
sub
push
lods
and
pop
jge
in
test
aas
outsl
adc
std
ss
lahf
pop
js
sbb
or
cmp
lods
mov
push
xchg
and
ficoms
cmp
fsubr
push
lahf
incb
push
lods
shl
sarb
mov
or
inc
addr16
jne
xor
movsb
and
test
sbb
cld
cmp
lret
addb
jle
repnz
aad
pop
jmp
sub
jne
fisttpl
push
xor
mov
icebp
shll
lret
int3
jmp
shrb
fnstsw
inc
pop
jno
sub
push
rcrl
lret
mov
int3
pop
dec
test
roll
and
dec
sub
sbb
faddl
inc
cmp
shl
shll
sbb
fsubrs
fstl
je
arpl
sub
xchg
push
js
je
loopne
pushf
out
fists
fs
mov
test
push
inc
into
shll
lea
inc
mov
and
add
es
lahf
jge
lret
fsub
xchg
scas
jecxz
pop
cmpsb
xchg
fincstp
lods
jns
inc
adc
mov
jns
sbb
rorl
cwtl
in
pushf
insl
fcoml
sub
iret
nop
stos
aad
inc
lret
mov
push
sub
and
cwtl
jecxz
mov
cwtl
mov
jmp
push
push
lret
pop
enter
into
fcmovnu
pop
arpl
lods
push
leave
insb
es
movsb
or
mov
pop
jns
es
mov
mov
mov
inc
add
clc
xchg
aaa
cmp
nop
adc
jb
or
jb
lock
or
xor
xor
iret
lcall
icebp
xchg
xor
ss
jb
jnp
jl
xlat
push
push
mov
and
fwait
dec
mov
cmp
jmp
dec
stos
cmpsb
nop
sub
push
enter
inc
outsb
fxam
cli
dec
add
in
decb
mov
addr16
in
push
and
jo
aad
xchg
clc
xor
sahf
pushf
jbe
jp
jge
scas
add
sub
pop
and
stc
ret
inc
fidivrl
and
cmpsb
mov
pusha
rclb
lret
cld
mov
stos
icebp
lret
cmp
xor
mov
pop
jae
dec
xchg
lret
out
pop
movsl
mov
out
lods
adc
sub
pushf
add
sbb
mov
sti
ljmp
in
out
out
mov
push
subl
adc
rcr
ficompl
fwait
repz
rolb
sbb
push
push
pop
loope
push
lret
push
mov
add
shrl
mov
adc
ds
sub
jno
jno
jo
pop
sbb
in
sbb
mov
sub
cmp
js
les
mov
or
adc
sub
jnp
lret
mov
inc
pop
cs
lea
jmp
mov
sub
and
add
xor
xchg
lock
or
cmp
js
adc
clc
xor
add
pop
mov
jp
pop
push
mov
inc
scas
and
ret
pop
lea
stos
movsb
mov
dec
add
jnp
fcomps
fs
fcomps
imul
mov
inc
mov
jge
repz
fbstp
ret
mov
lret
push
and
iret
jns
das
cmp
mov
sub
adcl
push
push
fdiv
dec
das
push
push
jbe
jp
cmc
loopne
mov
inc
es
mov
sub
jmp
lcall
ret
imul
lret
repz
fwait
int
in
cmp
and
or
jp
js
clc
xchg
enter
loop
xor
push
dec
cmpsl
inc
cltd
das
push
orl
leave
nop
call
inc
mov
or
xor
test
data16
repz
insl
pop
push
lcall
jo
xchg
or
mov
push
cmpsl
or
jp
mov
fisttps
xorl
test
lods
mov
xor
pusha
inc
in
mov
inc
outsl
nop
outsl
mov
lods
and
sub
cli
cmpsb
scas
call
jmp
loop
testb
outsb
int
xchg
lods
mov
imul
mov
mov
popf
cmpsb
std
jge
push
pop
xor
sub
popa
daa
cwtl
or
dec
push
jecxz
or
inc
movsb
xchg
mov
les
inc
xor
es
jl
repnz
out
pause
jns
arpl
mov
cmp
cmpl
iret
push
es
push
ds
or
sbb
add
call
push
pop
sub
ret
cmp
roll
cwtl
ret
jno
cmp
jbe
int3
add
ret
scas
or
push
pop
dec
pop
rclb
fstpl
and
popf
mov
fsubs
inc
push
arpl
loope
jnp
pop
addr16
cwtl
scas
add
adc
movsl
mov
ret
movsl
out
pshufw
fists
lds
loope
mov
or
sub
add
daa
mov
ss
adc
insb
and
test
ja
test
xor
neg
xor
jne
dec
scas
jo
lahf
push
xchg
pop
inc
jno
aad
xchg
insb
fldl
inc
out
daa
sbb
clc
out
xor
in
cli
dec
cmp
inc
lods
xchg
imul
stos
adc
rsm
dec
setno
or
add
pop
fmuls
mov
mov
insb
rcll
enter
mov
orb
rol
xchg
dec
cmp
jp
inc
mov
or
nop
inc
rolb
push
fmuls
pop
ret
imul
jns
xlat
pop
imul
lea
test
cwtl
mov
sub
insb
xor
cmpsl
mov
je
mov
xor
push
pop
push
mov
decb
mov
lcall
xchg
mov
ds
outsb
arpl
ret
movsb
int3
jb
arpl
inc
lods
insl
test
push
inc
sbb
popa
lea
jge
jecxz
mov
lods
cld
xchg
js
out
repnz
adc
jg
jge
jbe
pop
lret
mov
data16
push
lods
dec
inc
pop
mov
xor
gs
mov
out
jl
cmp
ljmp
mov
mov
cmp
mov
stos
outsb
filds
out
sbb
lahf
stc
loopne
and
dec
mov
lahf
jl
out
or
and
mov
mov
ret
and
and
dec
lods
aas
mov
call
add
mov
arpl
bound
sub
nop
ja
sub
mov
cmp
in
fadd
fwait
es
scas
rorb
arpl
cld
fs
in
testl
inc
mov
das
cmp
mov
sub
out
lock
data16
dec
or
add
inc
pop
and
adc
jae
inc
mov
ss
sbb
add
jmp
cmp
push
lahf
push
cmp
ja
jno
push
ja
pushf
pop
stc
push
dec
mov
mov
lock
push
repnz
inc
ret
add
fmuls
mov
out
shll
jbe
sbb
push
sbb
jne
push
and
jp
inc
std
stos
sub
mov
xchg
xchg
scas
mov
pusha
mov
pop
loop
adc
ljmp
lahf
fcmovu
iret
and
and
jbe
push
out
jno
push
fwait
scas
mov
pop
testl
xchg
xchg
xor
cld
mov
jbe
js
sub
dec
mov
or
push
ss
lahf
ret
es
hlt
movsl
add
sub
adc
sub
into
xor
lret
pop
mov
addr16
ljmp
jmp
nop
mov
ljmp
rcrb
ja
rcll
clc
enter
add
aam
jnp
frstor
jbe
in
mov
cli
lea
xchg
pusha
dec
jae
fdivs
add
aaa
fcompl
ds
jae
lea
movsb
dec
xchg
rolb
push
mov
insb
push
aas
lahf
push
cmpsb
mov
dec
out
mov
js
cmc
fldcw
mov
in
adc
dec
idiv
outsb
lret
pop
mov
xchg
push
adc
call
lret
iret
jge
xchg
cltd
adc
push
mov
ret
jl
int
lock
cmc
mov
mov
int3
lahf
dec
xchg
xchg
push
out
cmc
xlat
mov
movl
cmpsb
mov
adc
and
sbb
push
pop
cmc
or
adc
xchg
sub
pop
add
arpl
pop
lcall
mov
pusha
jmp
push
repz
leave
aam
popf
mov
pop
cmpsb
jns
notl
push
cmp
dec
int3
cs
shl
call
fnsave
jnp
daa
xchg
bound
mov
inc
paddq
pusha
scas
jg
sbbb
adc
mov
filds
sbb
movsl
mov
leave
leave
and
cmpsb
sub
mov
mov
lcall
dec
outsb
push
leave
xor
andl
cwtl
push
ss
mov
dec
je
mov
mov
stos
hlt
pushf
fisttpl
rclb
mov
sarl
popf
cmp
ret
ds
adc
sti
xor
loop
out
js
rorl
and
test
hlt
push
fstpt
dec
mov
xchg
xchg
inc
pop
ljmp
or
shll
subb
lahf
push
push
repz
es
call
push
rcrb
iret
mov
mov
divb
cld
dec
add
in
jg
jecxz
ja
inc
jmp
dec
mov
pop
nop
hlt
mov
fidivl
leave
rcl
add
ret
push
sbb
jp
fld1
outsl
fidivrs
fidivrl
mov
xlat
push
jae
mov
pop
or
inc
insb
mov
and
mov
mov
loop
pop
pusha
jb
test
loop
mov
xchg
adcl
testb
jo
cmpsl
out
and
pop
mov
into
cld
xor
test
addl
fnstcw
jne
and
adc
xor
or
mov
jg
adc
xchg
bound
pop
fldcw
movsl
test
sbb
mov
es
jl
jecxz
pop
xchg
orb
or
adcl
dec
aas
cli
push
mov
fidivrl
neg
lods
pop
pop
fstps
cmp
push
aas
aaa
pop
jnp
outsl
add
jns
push
dec
cmp
fwait
aad
push
sahf
test
fwait
nop
jns
arpl
mov
inc
jecxz
cmc
or
sbb
inc
xchg
outsl
xor
loope
pop
cs
pop
xchg
sub
ds
push
pop
sbb
mov
cmp
mov
push
je
pop
stos
into
mov
imul
sub
push
push
cmp
xchg
in
mov
push
jecxz
sbb
addl
cwtl
scas
or
sbb
mov
pop
jmp
xchg
cmpb
push
out
bound
sahf
adc
ror
nop
sbb
test
or
dec
cmc
pop
ljmp
cltd
sarb
jae
std
pop
push
cltd
imul
push
ficoml
bound
adc
or
outsl
repnz
aaa
dec
stc
inc
adc
adc
cmp
cmp
ljmp
insb
mov
enter
xlat
adc
test
jle
xchg
or
xchg
cs
jnp
out
xchg
mov
push
inc
fiaddl
xor
in
push
pop
fsts
jmp
mov
pop
jo
stc
clc
mov
dec
call
mov
ja
inc
or
test
jg
jecxz
push
mov
pop
xchg
xchg
imull
sahf
sbbl
clc
sbb
xchg
jle
out
push
cwtl
fldenv
ret
xor
jne
lock
leave
aam
inc
or
ds
lcall
ffree
mov
jg
fists
jo
add
mov
fucomi
stc
out
inc
dec
xor
aam
cltd
inc
dec
jp
les
movsb
clc
push
lods
enter
iret
xor
fcomi
hlt
icebp
xchg
test
pop
insl
fcomps
sub
xor
popa
mov
divl
add
xor
xor
pusha
cmp
sbb
dec
push
in
insl
add
loope
dec
mov
movsl
mov
push
push
xchg
jo
sarl
call
jne
pop
or
sbb
loop
popf
push
nop
ret
in
sahf
out
ret
xchg
mov
add
mov
pusha
jle
add
rcl
das
sbb
mul
movl
jns
xor
xchg
sbb
in
out
outsb
jb
inc
pusha
leave
xchg
sbb
mulb
js
jmp
xchg
cmpl
cmp
icebp
inc
lds
inc
and
dec
rep
and
lcall
je
testl
fwait
lahf
dec
lret
mov
popf
lret
leave
mov
je
outsb
scas
push
lods
fidivrl
mov
fisubl
mov
div
push
dec
mov
std
dec
outsb
nopl
pop
sbb
fistpll
clc
andl
fucomi
idivl
jbe
push
or
mov
pop
jns
fiadds
mov
push
cld
cwtl
xor
mov
push
daa
xchg
fsubrl
inc
std
stos
add
mov
or
mov
mov
iret
mov
sbb
sub
lock
out
das
scas
cmp
or
jb
rorb
imul
dec
pop
inc
pop
jl
mov
test
pop
inc
push
shll
mov
rcll
hlt
fwait
dec
jecxz
fs
push
inc
popf
das
push
jb
mov
mov
aam
and
mov
inc
sub
test
leave
lret
lock
mov
xor
test
jae,pt
and
pop
adc
xor
insl
int
notl
out
dec
je
addl
inc
cmp
or
cmpsb
push
dec
pop
sbb
xchg
jnp
mov
push
and
adc
clc
stc
dec
dec
rcr
icebp
jno
xchg
stc
push
mov
mov
repz
out
sahf
call
push
repnz
enter
sub
insl
cmpsl
icebp
xor
test
es
mov
sarl
sub
mov
cmp
shll
cli
cmp
pusha
dec
xor
xchg
inc
push
pop
push
je
add
cmp
ret
insb
cmpsl
sub
fwait
clc
xor
mov
clc
je
xchg
mov
out
pop
push
mov
dec
inc
movsl
pop
in
sub
or
add
xchg
lock
or
xor
add
dec
xorb
mov
in
push
cmp
or
popf
push
repz
add
push
insb
fcomps
out
test
and
out
cmpl
popf
mov
ffree
imulb
pusha
push
xlat
imul
mov
int3
jb
pop
xor
fcompl
aaa
dec
movsl
pop
lds
mov
cmpsb
sbb
mov
mov
hlt
sbb
inc
xor
pop
inc
dec
mov
inc
fdivs
push
jo
xor
or
incl
push
mov
xlat
xchg
int
mov
mov
and
int
cld
ja
push
es
fidivl
mov
test
ficomps
inc
lcall
mov
gs
push
push
sti
pop
roll
fisubl
loope
mov
inc
adc
xchg
pop
inc
mov
stos
lds
xor
jecxz
or
in
scas
shlb
xchg
repnz
repz
lods
jl
xor
sbb
xor
pop
mov
push
mov
stos
subb
pop
dec
gs
aad
mov
jne
sub
jecxz
int
xlat
out
pop
inc
jl
xchg
dec
mov
sahf
aaa
push
adc
push
lods
lock
loop
sbb
and
inc
stos
out
idivl
nop
outsb
nop
mov
push
lahf
aaa
andl
in
mov
roll
inc
cs
fldt
and
mov
outsl
enter
cmp
push
loop
out
stc
test
mov
filds
add
cmp
cmpsl
nop
push
fmuls
cmpsl
inc
fs
aam
mov
test
sub
jmp
xor
cmc
aad
jne
jne
outsl
leave
pop
daa
js
sti
in
and
sti
dec
and
stos
in
icebp
popa
lds
mov
icebp
sub
mov
movsb
push
and
xor
adc
pop
or
mov
sahf
sbb
cmp
pop
or
pop
xchg
xor
cmp
jecxz
or
push
push
inc
iretw
std
arpl
jns
jnp
pop
jae
loopne
and
and
test
push
mov
or
pop
lock
incl
aad
jno
mov
es
xor
xchg
cmc
aaa
inc
stc
xor
orb
pop
stos
aad
sbb
and
daa
add
jae
jmp
in
xchg
pusha
or
mov
in
fidivl
rcll
sub
rcrl
add
mov
cmc
lods
insb
sbb
outsl
or
pop
inc
mov
aad
jns
and
mov
in
mov
xor
mov
aam
xor
popf
push
add
es
cs
loop
xor
fs
mov
stos
call
arpl
mov
mov
jge
push
sbb
fsubrs
or
mov
popa
testb
push
pop
cmc
and
push
mov
popf
cltd
or
sub
jp
mov
push
sbb
ficompl
adc
mov
pop
divl
out
and
push
aad
xchg
jb
xchg
push
int3
inc
jnp
dec
sub
roll
sbb
jg
and
adc
in
cmpsb
or
cmc
shrb
sbb
sub
fs
sbb
repz
and
test
mov
inc
ljmp
lcall
jo
mov
ss
xchg
dec
inc
push
fisubl
test
in
sti
jb
add
pop
inc
fs
int
jno
xor
fisttpl
sbb
xchg
negl
fistl
clc
in
xchg
lahf
or
cmp
jp
clc
js
pusha
add
xor
add
push
sub
fcmovbe
add
cmp
and
cltd
test
rcll
shrb
sahf
jp
arpl
add
fucom
adc
adc
dec
push
sbb
pop
mov
int3
mov
push
imul
xlat
in
pop
and
div
add
xor
pusha
repz
int
add
or
mov
dec
ss
icebp
insb
jne
mov
aad
mov
out
sub
pop
nop
out
mov
out
pushf
jl
bound
xor
adc
testl
mov
push
daa
in
pusha
les
inc
push
fisubl
int3
les
imulb
loop
xchg
fstps
push
das
fs
mov
aad
movsb
xchg
aaa
push
iret
jg
mov
inc
cld
out
sti
adc
lret
mov
lret
mov
mov
inc
or
aad
or
jb
fwait
push
hlt
fcmovnbe
bound
pop
ret
and
es
mov
fcmovnb
in
in
ret
das
stc
ljmp
push
mov
cwtl
xchg
js
xlat
out
push
pop
pop
pop
out
repz
aam
outsb
ret
movsl
mov
rcrb
daa
loop
popf
pop
hlt
sbb
lahf
xchg
or
rcrl
mov
pusha
iret
sbb
jns
dec
mov
xlat
cmp
pop
in
sahf
mov
mov
repnz
mov
jl
shll
movb
clc
lock
pop
pop
inc
lcall
and
jp
dec
mov
sbb
movsl
mov
out
push
push
shrl
test
sub
or
xlat
sahf
xchg
jmp
repz
scas
test
aam
loope
sub
out
cmp
mov
repnz
sbb
test
fcoms
mov
daa
das
lods
into
fwait
xchg
xchg
jae
inc
add
fcomi
outsb
cs
add
pusha
aam
inc
adc
mov
dec
repz
mov
xchg
je
dec
cli
sahf
mov
arpl
push
faddl
stos
fcomip
lock
loop
gs
mov
push
push
lret
jne
push
in
fucom
mov
jns
sub
mov
int3
lods
cmp
loope
inc
call
ljmp
adc
fsts
popa
push
sbb
mov
arpl
popa
dec
enter
rclb
pop
dec
sub
jb
adc
and
stc
movsb
adc
xchg
scas
jae
sbb
mov
lock
jge
adc
hlt
xor
adc
jbe
lock
pop
fdivl
cmp
push
mulb
cmc
in
inc
mov
lret
out
ja
outsb
sarb
gs
jecxz
popl
imul
fcompl
inc
pop
mov
loopne
dec
das
sbb
sub
dec
lods
pop
out
outsl
sbb
push
or
and
int3
add
and
add
inc
mulb
loope
cmp
add
mov
mov
cmp
jne
mov
mov
movsbl
xor
add
jmp
cmp
mov
stc
mov
fxch
pop
lcall
pop
jp
decl
loopne
ljmp
mov
fmulp
dec
push
or
push
in
es
lods
sub
cmc
jbe
in
jnp
das
push
jns
movsb
xchg
cltd
aaa
iret
xor
lcall
rclb
in
sub
adc
pop
enter
sub
sbb
mov
push
adc
jne
pop
outsl
mov
and
xchg
out
sub
pop
call
ds
gs
pop
in
je
in
sar
push
xor
cmp
adc
iret
push
jp
mov
ficoml
jle
rep
fwait
sbb
out
cmp
jge
mov
and
pop
pop
or
and
out
xorl
dec
dec
test
cmpsb
cmp
iret
out
sbb
push
ret
mov
and
andb
addb
repz
add
mov
daa
movsb
lods
outsb
xchg
push
shll
inc
sub
in
mov
bound
movsl
lahf
stos
mov
movsb
push
hlt
popa
and
popfw
pop
and
push
scas
aam
lret
mov
movsl
fdivp
push
ja
jnp
inc
jne
jl
pop
loopne
sub
or
xor
mov
jle
bound
mov
push
in
or
sub
add
stos
inc
push
mov
dec
pop
push
pop
out
lds
inc
xchg
sub
push
mov
or
cmp
dec
pop
sub
test
mov
arpl
icebp
jle
pop
scas
subb
push
enter
sti
mov
dec
shlb
jns
jp
pop
xlat
add
sub
pushf
mov
outsl
out
sti
cmc
mov
cmp
mov
xchg
imul
ja
ds
mov
push
mov
xchg
jp
mov
mov
jmp
movsl
xchg
mov
movsl
xchg
jecxz
cmp
idivl
test
adc
cwtl
es
pop
inc
mov
adc
mov
or
add
in
scas
loope
adc
icebp
into
cmp
ror
lcall
cmpsb
jecxz
popa
xor
lahf
stos
gs
jae
daa
mov
mov
and
pop
mov
pop
cltd
shrb
sub
fwait
adc
cmp
addl
dec
adc
mov
shll
or
adc
mov
pop
sbb
je
mov
xor
loop
cwtl
fmul
jl
sbb
lods
xor
or
push
xchg
and
fs
sahf
mov
repz
fsts
pop
ss
push
imul
loopne
pop
in
out
push
data16
call
jnp
rorb
enter
lret
cli
scas
mov
dec
and
sbb
sub
push
fimull
and
push
shlb
sbbl
fwait
pop
push
popf
ljmp
xor
add
adc
mov
cmp
jp
clc
daa
pushf
jmp
scas
fs
fdivrl
rcrl
push
mov
mov
stos
outsb
adc
addr16
sub
stos
jg
adcl
jnp
xchg
dec
jae
into
jp
mov
test
xchg
and
aad
in
cmpsl
dec
enter
nop
mov
dec
mov
xchg
xor
xor
inc
aas
pop
lods
mov
ss
xchg
test
and
push
xor
mov
push
in
mov
movsb
in
and
hlt
std
cltd
clc
ficoml
push
outsb
or
pop
xor
push
pop
inc
lahf
repz
xchg
enter
sub
xor
xlat
pop
repz
imul
xchg
rcrb
dec
push
pusha
jno
adc
rcr
in
mov
xor
in
push
fs
loop
jo
lods
push
push
sub
xor
xor
add
ja
sub
cmp
idivb
xor
stos
stos
xchg
mov
push
repnz
xchg
cmp
xorb
dec
add
inc
adc
sbb
icebp
lock
and
int3
xchg
shll
or
gs
movsb
mov
outsl
sbb
cltd
push
in
push
jmp
cmp
and
cmp
sbb
push
ljmp
scas
pop
inc
cmp
push
jnp
ljmp
dec
cmp
repz
mov
pop
lods
scas
repz
lret
or
shl
aad
jg
push
inc
adc
jmp
mov
shr
cwtl
int3
and
cwtl
pop
fstl
or
mov
movsb
mov
push
int3
fnstsw
mov
mov
sbb
mull
xlat
dec
in
cmp
jmp
pop
rol
pslld
xchg
mov
or
testl
int
dec
and
int
insb
jp
cld
cmp
aam
xor
cli
daa
mov
aas
add
cld
daa
xchg
mov
out
and
add
loop
and
in
mov
pop
out
add
les
pop
sub
stos
out
out
mov
stc
pop
ret
mov
pop
jbe
inc
mov
xchg
xor
dec
xor
add
test
mov
jnp
jl
ja
fidivrs
cmp
xchg
xchg
rolb
cwtl
push
jnp
outsb
mov
test
cmp
xchg
pop
mov
cmp
cli
int3
leave
repnz
mov
out
insl
testl
test
stos
push
sbb
add
lahf
shr
xor
sti
shrl
adcb
rcll
stos
or
dec
jno
xor
push
movb
fwait
stos
mov
sbb
imul
pop
lea
xlat
les
xchg
clc
xchg
xorl
jle
sbb
rcrb
cmpsl
lods
jb
sub
fucom
adc
mov
subb
ficoms
jl
fiadds
cmpsb
or
or
pop
fdivrs
cmpsl
sub
pop
adc
xor
push
shlb
mov
pop
mov
sub
in
inc
movb
cli
mov
movsl
dec
sbb
sbb
pop
sub
push
jmp
stc
push
filds
arpl
push
or
mov
jbe
clc
push
mov
jbe
fld
push
movsb
push
jle
xchg
shrb
xor
jle
icebp
xchg
sbb
imul
dec
test
add
mov
popa
push
push
mov
mov
test
xor
jp
jne
push
dec
mov
inc
ljmp
xor
pop
daa
add
rclb
daa
mov
push
imulb
stc
test
pop
ss
mov
inc
out
out
scas
jg
ja
inc
pop
xlat
fs
stos
inc
mov
aaa
mov
out
ret
leave
je
movsb
sbb
cltd
pop
pop
sub
sub
hlt
mov
rorb
push
ds
push
std
popa
sbb
mov
outsb
xor
cmpsl
movsb
cmp
dec
js
mov
out
add
sbb
les
and
dec
and
ret
fistps
or
shl
mov
dec
sub
mov
xor
scas
dec
sbb
in
aas
imul
sbb
jbe
push
testb
ss
ja
out
adc
out
push
sbb
xor
cmp
aas
popa
add
mov
andb
stos
arpl
or
in
inc
mov
inc
jmp
enter
jle
loop
xor
mov
mov
mov
popa
sub
movsl
mov
push
xchg
insl
cltd
lahf
dec
add
testl
in
std
lods
adc
push
test
repz
mov
inc
scas
fisubl
fistl
cmp
sbb
push
fwait
xchg
jmp
sub
pop
jp
sbb
fxch
xchg
and
jnp
orl
insl
push
push
orb
stos
mov
ret
adc
xlat
mov
sub
adc
loope
outsb
leave
mov
sahf
insl
les
aam
sub
jb
pop
and
sahf
pop
mov
aas
ret
cli
rorb
cli
inc
inc
lds
stc
jbe
dec
jae
bound
sbb
push
cs
mov
fisttpll
fwait
xor
adc
sarl
test
loopne
insb
cmp
ret
inc
filds
xchg
xchg
outsl
and
fsqrt
dec
movb
mov
mov
jo
xchg
out
mov
cld
sti
icebp
mov
fnstsw
push
or
std
popf
fs
ret
lds
ljmp
sub
rolb
pop
clc
adc
pop
push
push
add
xchg
mov
jnp
fwait
sbb
add
dec
test
jecxz
push
loopne
lahf
jo
sub
lds
lods
cmc
loopne
stc
test
sar
lods
sti
and
shl
jae
fisubrs
daa
out
jecxz
xchg
imul
cmp
pop
mov
sahf
push
push
aaa
xchg
inc
lods
pop
add
daa
xchg
xor
mov
xchg
rcl
push
push
and
mov
out
clc
cmp
mov
sub
rcll
mov
or
mov
movsb
cmc
push
bound
mov
sbb
fsubrs
jecxz
test
mov
repnz
lahf
push
xchg
repnz
pop
icebp
dec
xor
test
popa
iret
insl
mov
xchg
dec
pop
cmp
jne
mov
lods
mov
jo
lods
je
mov
fildll
adc
xchg
lahf
add
xor
sub
repz
inc
and
rcr
adc
xlat
fs
jecxz
rorb
dec
xor
in
rol
pop
int
popf
scas
es
cmc
and
push
mov
mov
dec
sti
fcomip
test
mov
jg
rclb
push
popa
xor
lret
or
ficomps
je
out
lahf
scas
pop
mov
jmp
jl
ret
in
push
in
add
inc
mov
call
xor
sbb
pusha
cmp
and
scas
mov
xchg
ljmp
and
fisttpll
mov
adc
fdiv
add
rcr
jp
push
stos
push
mov
movsb
leave
mov
arpl
xlat
incb
pop
mov
jg
pusha
push
pop
gs
shlb
inc
mov
aaa
mov
outsl
mov
or
mov
roll
cmp
clc
mov
js
add
lods
decl
or
call
pop
push
push
fucomip
clc
lds
lahf
cmpb
mov
scas
das
out
loopne
rcll
mov
push
push
jb
pop
aad
mov
or
int3
adc
jns
pop
in
mov
int3
imul
scas
cmp
lods
inc
add
inc
in
push
pusha
add
and
fisttpl
gs
je
cmp
test
je
sbb
mov
add
aad
jecxz
sub
enter
fwait
into
jbe
cmp
cmp
arpl
in
ljmp
xchg
jae
xchg
xchg
lods
mov
movsl
mov
push
pop
fistps
sbb
sbb
jnp
mov
mov
inc
sbb
aad
jmp
pop
mov
mov
int
cs
mov
fstl
mov
cli
test
jae
pop
jecxz
mov
cmc
ss
push
xor
push
js
data16
push
mov
xchg
les
add
loope
xchg
fbstp
ret
mov
jmp
mov
mov
loopne
push
pop
btc
push
mov
inc
xorb
inc
or
ds
ret
push
repz
push
sbbb
sbb
mov
adc
xchg
faddl
loopne
inc
jo
mov
inc
mull
out
imul
cwtl
dec
and
mov
rol
mov
mov
and
or
ds
out
dec
mov
rolb
jnp
inc
add
push
xchg
stos
ret
jge
out
jnp
inc
jg
fwait
int3
inc
imul
mov
push
stos
jbe
adc
in
adc
call
mov
ss
lea
cmp
push
pop
pop
daa
ja
add
fwait
sub
mov
in
into
adc
std
and
mov
scas
sbb
push
jae
ljmp
xor
fildll
data16
aad
lods
push
arpl
xor
push
xchg
rolb
inc
jo
adcl
hlt
push
pop
aaa
sbb
fiaddl
in
mov
pushf
enter
fadd
pop
or
mov
mov
cwtd
xor
inc
fsubrp
push
mov
inc
daa
mov
aaa
sbb
dec
add
mov
adc
clc
sti
divb
pop
pop
into
cltd
mov
rcll
ds
pop
mov
cli
xchg
sbbl
shll
popl
adc
out
lock
ljmp
adc
adc
js
cmp
mov
mov
lods
jbe
lods
adc
jno
xor
mov
dec
fidivs
xchg
or
push
xchg
jge
sbb
invlpg
mov
mov
xor
lahf
test
adc
adc
mov
mov
or
or
leave
ret
test
shrb
sbb
adc
or
sub
push
fs
or
outsb
stos
lahf
cmp
add
push
aam
and
or
clc
cmc
into
xchg
adc
mov
out
cmp
cmpsb
xchg
mov
mov
iret
or
lods
xchg
popa
jle
call
xor
mov
fimull
shrb
mov
ja
cmp
cld
imull
fwait
lret
aas
and
add
push
in
mov
imul
or
inc
xchg
mov
js
cmp
out
in
not
es
repz
test
cmp
fists
cmp
mov
shll
sbb
mov
pop
push
push
inc
xorl
jecxz
add
ljmp
inc
and
mov
test
add
inc
loope
inc
mov
rclb
popf
movsb
cli
shrl
mov
xor
fadds
jmp
daa
enter
mov
jge
stos
lods
gs
jg
sub
jo
cmp
sub
out
pop
out
adc
jno
mov
push
subb
stos
xchg
sub
ret
fcom
clc
mov
or
push
mov
cmp
jnp
sbb
ja
sub
xchg
push
xlat
jmp
mov
out
adc
pushf
sar
jmp
lds
je
xor
pop
mov
in
popf
gs
mov
popa
aas
push
ret
enter
clc
mov
mov
push
jg
pop
dec
push
lds
xchg
popa
add
andb
dec
lods
push
xor
sbb
xchg
mov
icebp
rorl
sub
xor
xor
movsl
fdivrs
sub
dec
mov
je
mov
jno
mov
cmp
addr16
mov
cmpsl
lcall
aaa
add
test
out
dec
sub
dec
movsb
add
fs
dec
rol
add
faddl
jbe
xchg
mov
movsl
jbe
push
das
arpl
insb
pop
xchg
pop
stos
scas
inc
iret
aam
adc
pop
push
dec
pusha
call
dec
adc
adc
aaa
rclb
add
and
ljmp
fdivrl
fneni(8087
and
fldenv
aad
xchg
lahf
fistps
mov
xor
incb
jbe
jecxz
push
pop
xchg
sbb
push
push
addb
push
lds
xchg
jb
mov
ja
dec
adc
fdivrs
sarb
icebp
clc
fsubr
cmp
in
push
gs
push
mov
jne
jb
push
sub
in
pop
aam
insb
mov
testl
je
sbb
sub
xor
xchg
cmp
imul
ret
fs
aam
pop
pop
mov
dec
mov
push
sarl
js
mov
rcrl
jmp
leave
inc
push
mov
icebp
adc
sbb
or
push
cwtl
testb
ret
mov
add
les
push
push
xchg
cwtl
scas
lret
or
inc
test
push
xchg
jmp
or
push
int
roll
and
or
jo
rclb
cmp
dec
mov
daa
mov
out
jge
pop
icebp
fidivrl
inc
mov
insb
jb
pop
sbb
les
nop
stos
mov
pop
jp
scas
push
jle
lea
loope
stos
adc
scas
fstpl
popf
rclb
in
dec
mov
inc
aaa
ja
sbb
add
jp
xor
push
mov
pop
je
xor
sbb
call
call
xchg
test
pop
clc
xor
jmp
sub
xor
data16
aaa
inc
and
arpl
xlat
sbb
or
fildl
je
sahf
sub
test
xorl
or
out
jno
stc
loope
out
add
mov
mov
mov
ret
dec
je
hlt
jns
cmp
iret
ficoms
add
orl
xlat
sarl
add
mov
imulb
jl
test
adc
jle
xlat
inc
imull
fisttpll
fistl
ss
jb
mov
shll
out
pop
xor
jae
ficomps
bnd
or
out
bound
call
aam
mov
xorl
push
lea
xor
mov
pushf
sub
mov
inc
imulb
lock
push
mov
lcall
movsb
mov
push
es
loope
pusha
push
mov
std
mov
and
or
cli
daa
inc
add
pusha
in
icebp
sub
dec
mov
stc
mov
or
pop
hlt
xor
int3
rcrb
les
rol
sbb
mov
fcmovne
or
xchg
xorl
outsl
nop
xchg
icebp
ja
dec
cmpsb
push
cmpsl
dec
pop
inc
call
imul
int
pop
ret
xchg
test
in
and
sahf
dec
les
xor
lret
push
xchg
aaa
movsl
mov
int3
push
inc
push
cmp
and
mov
add
movb
gs
lods
pop
xchg
in
jmp
adc
rclb
data16
mov
mov
sti
cmpsb
mov
daa
insb
push
scas
ret
ds
inc
mov
pop
movsl
sub
xor
add
shl
lock
mov
xchg
cs
aas
jle
xchg
aaa
stos
bound
loop
and
cmp
call
dec
push
jno
fisubrl
jmp
lea
cltd
adc
dec
mov
stos
sahf
aad
in
mov
fcmovu
xchg
xor
mov
fwait
add
gs
outsb
dec
sahf
js
nop
sbb
in
jne
adc
mov
push
int
xchg
cmp
jnp
shll
xor
sub
test
add
popa
cmp
in
push
mov
and
dec
jp
cmp
mov
xor
pop
and
pop
sub
mov
xchg
push
push
test
ret
divb
cltd
stc
mov
push
dec
dec
push
sub
xor
lahf
cmc
imul
notl
jle
dec
sar
mov
or
lods
jp
mov
in
jl
pop
sbb
pop
adc
jp
aaa
stos
inc
fidivrs
in
data16
aas
mov
mov
or
push
jmp
pop
pop
sbbb
test
daa
dec
push
sub
cs
js
pop
add
fwait
sbb
mov
pop
push
sahf
loopne
push
push
push
cs
and
int
pop
jo
mov
lret
inc
pop
test
cmp
rorb
cltd
jge
addr16
dec
jle
adcb
shlb
cmp
xchg
mul
test
jecxz
pop
mov
push
nop
mov
push
fiadds
mov
int3
imul
leave
dec
add
out
and
or
or
adc
inc
push
xchg
imul
pop
sub
jne
mov
imulb
rol
call
xorl
clc
shl
out
push
mov
mov
mov
xchg
fst
dec
ss
adc
outsl
mov
popf
fadds
sbb
sbb
enter
sahf
mov
loop
pop
xchg
test
fsubrl
scas
fnstsw
mov
mov
scas
sub
jmp
sbb
jecxz
ja
mov
push
in
pusha
daa
shlb
dec
incl
xchg
fnstsw
shll
aad
daa
add
imulb
stc
sbb
cmc
mov
or
mov
pop
mov
js
xlat
outsb
jle
add
adc
and
movsb
cmp
ja
prefetch
mov
dec
je
rorl
mov
popf
sbb
mov
push
cmp
into
jne
imul
loop
pop
jne
sbb
sub
mov
pop
cmp
mov
and
inc
hlt
je
add
xlat
sbb
movsb
mov
pusha
out
dec
inc
mov
repz
lcall
sub
popa
add
data16
lcall
in
mov
repz
push
inc
sbb
shll
xor
mov
js
sbb
and
cld
stc
test
sarl
scas
cld
mov
stos
add
sbb
push
push
sub
jg
pop
push
dec
mov
xlat
lods
push
ss
cmp
mov
sbb
push
mov
je
mov
aad
ror
push
sub
movsl
sub
test
leave
mov
jns
jecxz
clc
leave
xor
dec
mov
cmp
xor
push
cli
xor
pusha
aas
ficompl
movb
mov
rol
jl
fsubrs
and
or
push
and
and
and
mov
cmpsl
loop
sub
and
jnp
ret
dec
enter
aad
push
push
leave
xchg
stos
mov
mulb
sub
in
fldl
jle
xorl
jno
cwtl
outsl
mov
cmp
loopne
dec
push
xchg
cmp
jle
ror
xor
imul
ficoms
mov
outsl
arpl
mov
mov
xor
inc
and
push
aad
mov
mov
into
dec
push
jne
fdivrs
lret
clc
cmpsb
outsl
nop
or
add
jne
rcll
hlt
sti
add
ror
dec
adc
pop
and
movsb
and
in
xchg
cltd
and
pop
cltd
mov
cmpsb
xor
int
cmp
sub
cmp
dec
aad
mov
and
bound
cmpsl
adc
inc
bound
repnz
outsl
mov
dec
imul
imul
push
dec
push
ss
xchg
sbb
lahf
lods
mov
mov
orb
mov
lret
data16
shl
lret
and
stc
sbb
sahf
addr16
mov
data16
pusha
std
das
aam
push
std
repz
inc
xchg
sbb
outsb
add
dec
test
adc
hlt
imul
insb
dec
or
subl
rolb
loopne
dec
cmp
and
dec
lods
jo
lods
js
pop
mov
les
pop
xchg
scas
cmp
out
fstps
stc
mov
jge
or
andb
hlt
int3
leave
leave
sbb
push
mov
pop
ss
xchg
movsb
test
jmp
xchg
out
add
sbb
ret
mov
mov
jge
lcall
pop
sarb
in
inc
and
jecxz
ds
std
mov
pushf
fs
jge
out
sub
xchg
mov
xchg
mov
pop
push
shrb
xchg
cmc
insb
cmpsl
in
pop
sub
subb
in
pop
int3
fcomi
or
hlt
loope
push
jmp
push
mov
dec
or
cltd
add
in
sub
sbb
sti
sti
mov
frstor
mov
pop
in
push
or
arpl
mov
mov
sahf
fsubs
push
jnp
pop
xor
jo
das
imul
jns
pop
xchg
jns
adc
cmp
pop
in
xchg
ret
xor
jg
adc
jnp
jmp
cli
fwait
xchg
push
or
jo
push
in
fnstsw
inc
daa
jne
popf
sbb
enter
shlb
in
scas
rclb
push
jne
mov
stos
dec
sub
or
inc
sub
mov
orl
add
test
mov
push
push
mov
out
movsb
dec
cmp
inc
lcall
subb
pop
inc
mov
mov
popa
fidivrs
aaa
fmull
call
mov
movsb
mov
fdivrs
js
enter
mov
jmp
movsl
xor
dec
cmpsb
dec
or
push
dec
subb
inc
fistps
mov
mov
sbb
pop
sbb
sub
pop
adc
xlat
enter
std
sub
pop
jno
mov
xchg
pop
movsl
pop
jle
pop
sub
add
pop
jo
adc
pop
or
xor
iret
xchg
call
shll
mov
lcall
dec
ret
mov
mov
pop
or
pop
mov
fs
mov
pop
loope
test
jo
xchg
or
sti
aas
push
clc
andb
xchg
sbb
cwtl
leave
imul
sub
push
jp
push
js
in
xchg
push
arpl
testl
adc
mov
sub
pop
jbe
xor
mov
adc
pop
jle
xchg
lods
sbb
inc
pushf
call
scas
xor
mov
dec
in
xchg
jno
idiv
cwtl
jb
mov
lret
dec
in
imul
call
sbb
pop
lods
insl
in
insb
pop
push
jae
sti
mov
popf
adc
adc
lret
and
inc
sbb
sub
iret
dec
popa
cli
sbb
jo
jl
sbb
out
mov
xor
test
movsl
push
inc
faddl
hlt
int
movsb
jle
sbb
dec
and
mov
in
pop
jb
sti
lods
jno
adc
mov
out
stos
sbb
fnstcw
imul
xor
ss
jns
inc
shrb
and
cmp
mov
imul
outsl
sahf
push
loopne
leave
jle
or
xchg
call
ror
sbb
xor
ss
jle
movb
cli
add
mov
mov
dec
jb
notl
js
mov
adc
fwait
dec
pop
cmp
lcall
adc
xchg
aas
pop
pop
or
call
cmc
sub
push
test
add
aad
popf
stc
add
cmc
jmp
in
fwait
mov
inc
dec
stos
jle
sti
das
jb
bound
dec
out
and
pushf
push
mov
imul
inc
repz
jmp
faddl
mov
mov
sub
or
cmc
mov
scas
repnz
inc
out
or
mov
dec
xor
pop
test
adcb
and
jp
sbb
mov
push
push
inc
pop
jno
clc
scas
jae
stos
sub
aad
mov
jg
lcall
lds
ret
ficomps
cmpsb
out
out
scas
movb
xchg
and
xor
jecxz
std
pop
jmp
and
insb
ds
pop
aaa
mov
pop
sub
vandnps
or
imul
push
stos
imul
lret
pop
push
fs
lret
jmp
sahf
inc
hlt
mov
repz
test
mov
push
lahf
in
jns
addr16
jae
or
mov
stos
dec
sbb
mov
leave
fldt
inc
xchg
adc
lods
fwait
push
xchg
jnp
lret
imulb
jbe
movl
adc
sbb
iretw
push
adc
or
jae
fmuls
mov
gs
inc
xor
push
int
loop
out
pop
in
sbb
test
adc
out
lods
jb
xor
pop
push
gs
xor
icebp
push
les
sbb
into
push
push
sbb
scas
inc
cs
sbb
push
out
daa
dec
push
xor
aam
adc
in
out
cmp
scas
rcll
stc
mov
iret
xchg
jae
mov
orl
int
mov
out
jg
fwait
mov
pop
les
lret
jno
dec
jb
in
jecxz
loopne
repnz
jg
ljmp
daa
inc
push
shll
mov
nop
cmpsl
mov
sahf
lock
ja
call
xchg
mov
add
jp
mov
outsb
shrl
arpl
cmpsl
scas
stos
mov
mov
popf
inc
cmp
and
daa
arpl
pushl
jo
push
fnstenv
pop
std
mov
lea
ja
add
int
aam
pop
mov
cmp
mov
and
jmp
in
movsb
dec
lahf
mov
leave
loope
enter
mov
jbe
int3
data16
sbb
fisttpll
xor
sub
lcall
adc
cmpsb
popf
mov
ret
std
pop
loop
jno
mov
out
and
jns
push
pop
pop
movsb
and
in
pop
mov
fbld
sahf
jecxz
insb
sub
jmp
jmp
pop
cmp
push
testb
sub
test
hlt
dec
mov
xchg
inc
adc
adc
std
sti
lods
lret
jg
nop
jnp
jmp
arpl
movsl
adc
pop
dec
cmp
int
out
pusha
dec
in
dec
xchg
out
adc
push
push
leave
and
fnstsw
sbb
add
jle
insb
or
push
stc
es
jp
pop
sub
call
mov
shrl
fs
cmc
es
inc
outsb
sub
rcl
or
icebp
dec
in
mov
jo
mov
pop
je
rcrb
shr
push
mov
daa
dec
sub
jl
push
mov
or
daa
mov
imulb
int3
lret
fdivl
repnz
inc
insl
inc
push
rcrb
ror
push
sub
lahf
adc
push
sti
ret
push
cmp
jns
cmp
jne
hlt
stc
jle
xor
inc
in
ljmp
jle
test
pop
jnp
sbb
push
dec
out
mov
aas
lret
into
iret
adc
sub
push
mov
mov
dec
cmp
shl
jl
icebp
lods
add
jmp
movsl
lods
push
flds
aaa
rorb
and
aaa
fwait
scas
cmpsl
in
ljmp
and
push
in
in
mov
pop
xor
shlb
pushf
pop
ret
fisubrs
jmp
ror
dec
xor
push
pop
jp
fcmovbe
pop
fs
sbb
pop
es
mov
adc
inc
inc
jns
mov
add
mov
enter
sub
ret
pop
adcl
loopne
out
js
sbb
fdivr
mov
xchg
push
xor
out
ret
xor
or
xor
dec
stos
aad
sub
jecxz
enter
repnz
lahf
jl
sbb
mov
ficompl
mov
mov
mov
je
jmp
mov
mov
jmp
cmp
ja
ja
xchg
xchg
sub
into
push
ret
outsb
sbb
jp
pop
jp
mov
cmpsl
iret
jbe
mov
out
ds
lahf
stos
mov
push
aam
lret
rorl
mov
mov
ret
gs
add
and
inc
int3
adc
inc
sarb
sub
outsb
mov
enter
mov
stos
enter
sub
mov
aas
mov
dec
adc
sub
pusha
mov
mov
pop
pop
pop
jns
movsb
mov
and
xchg
int3
out
cltd
cli
popf
sar
lahf
push
adc
cmp
sbb
jge
inc
rclb
xorl
push
pop
out
xchg
pop
xchg
cmp
adc
aaa
jg
adc
pop
mov
cmp
insl
mov
ds
mov
mov
adc
out
fwait
sub
inc
cli
scas
jns
les
sub
mov
dec
add
jmp
mov
inc
jns
xor
mov
dec
dec
sbb
inc
decb
sub
inc
loope
jo
lods
or
pop
jmp
ss
sub
jecxz
xor
repz
insb
movhps
repz
push
mov
pop
cmp
jmp
ljmp
sbb
mov
sbb
jecxz
xor
popa
sarl
inc
insl
pop
dec
sarl
mov
ret
es
fldl
in
inc
inc
xchg
sar
sub
rol
dec
jp
xchg
pop
sbb
mov
add
incl
inc
push
mov
mov
js
jbe
push
rcr
mov
cmc
or
movsb
pop
dec
roll
ja
or
out
mov
lret
and
movsb
and
fimull
mov
mov
sub
bound
sub
mov
mov
sub
fisttps
push
or
xchg
ficoms
iret
mov
je
adc
stos
push
jns
mov
jg
scas
popw
arpl
sub
add
mov
out
test
mov
mov
mov
adc
psubsb
adc
cmp
and
test
cmp
repz
je
pop
fdivrl
mov
cmp
js
mov
and
xchg
and
je
cmpsl
out
scas
fsubr
inc
stos
mov
lods
and
cmp
or
std
mov
imul
xchg
mov
cmp
sub
xor
push
imul
lock
dec
jno
repnz
xor
mov
bound
rcrb
aam
bound
aaa
push
lds
in
and
sti
sti
xorl
mov
and
inc
sar
mov
mov
in
imul
jae
cmp
pop
or
jno
imul
cmpsb
push
fsubl
lcall
les
pop
loopne
add
xor
popf
rcr
jo
pop
jae
imul
pop
push
mov
in
in
push
mov
lret
lret
cmp
xor
cltd
jp
stos
inc
stos
mov
aad
mov
aas
jecxz
mov
shr
es
test
mov
pushf
addr16
fiaddl
dec
mov
insb
mov
mov
imul
jae
bound
fldcw
mov
or
mov
sub
ss
fbld
add
icebp
add
inc
ds
inc
sbb
xchg
push
lds
popf
add
mov
mov
pop
xchg
inc
push
rcrb
pop
jne
jmp
test
mov
xor
int
and
mov
fcmovnbe
mov
inc
and
xor
mov
gs
je
pushf
dec
or
sbb
dec
in
lds
std
xchg
test
jecxz
and
mov
rolb
dec
les
test
lret
pop
clc
jo
cmp
push
sbb
jns
dec
push
hlt
push
sti
xor
mov
jg
jp
jmp
popa
dec
xor
icebp
dec
pop
sbb
pop
jne
adc
fnstcw
ljmp
dec
jno
mov
cmp
ss
xor
mov
bound
sbb
lea
jb
add
or
setge
jns
mov
xchg
push
adc
arpl
jo
cs
or
negb
bound
or
jae
add
inc
aas
mov
ror
mov
pmullw
fwait
stos
sub
xor
jl
pop
dec
sub
cmova
pop
mov
xor
inc
pop
dec
dec
imul
repnz
rorl
mov
inc
insb
clc
iret
xor
and
mov
das
jbe
outsl
cwtl
or
push
xchg
inc
fmul
mov
dec
cmp
xchg
pusha
or
ficompl
lahf
in
insl
mov
insb
jmp
test
sub
loopne
pop
xchg
lret
add
out
stos
mov
lahf
adc
mov
in
xchg
push
sbb
fbld
mov
cwtl
jae
mov
adc
jecxz
enter
pop
sub
cwtl
das
or
mov
popf
lods
leave
sti
lret
push
jecxz
sub
dec
lcall
sub
fmul
stc
ret
outsl
iret
xor
sbb
mov
pop
pop
push
int3
dec
in
ret
add
xor
popa
mov
pusha
push
call
push
in
dec
sbb
pushf
orl
popf
sbb
mov
xchg
push
outsl
mov
enter
adc
insb
popa
sti
and
jns
fisubs
xchg
in
fistpl
jl
push
fwait
and
in
xor
push
mov
push
sub
adc
add
pop
jb
fdivrp
iret
dec
ss
repz
or
bound
sbb
jg
pop
jae
jmp
jns
leave
jp
out
mov
in
shll
xchg
mov
cltd
cmp
jmp
push
xchg
cmp
sub
ja
and
fisubrs
addb
lret
sti
cmp
xchg
fcomps
push
mov
push
or
jg
sahf
push
sbb
push
cmp
std
icebp
dec
out
call
arpl
fs
jne
mov
data16
mov
mov
in
sahf
inc
jae
mov
mov
leave
leave
mov
test
mov
sbb
cmp
pusha
lock
jl
test
test
mov
mov
in
hlt
pop
jmp
ja
mov
ljmp
push
out
sti
mov
add
add
imul
pop
and
jecxz
lods
js
mov
add
lret
sti
inc
pop
mov
in
inc
adc
adc
movsl
adc
cmp
xlat
adc
mov
inc
sub
repnz
mov
cld
lret
mov
shrl
cmp
fisttpl
pop
mov
neg
pop
xor
leave
je
dec
hlt
add
aaa
push
cmp
imul
ja
inc
idivb
rcl
dec
xchg
lods
shlb
jp
rcrb
filds
out
aaa
inc
xor
cld
jecxz
movsb
imul
loopne
xchg
testl
mov
push
cs
repnz
jmp
test
jne
addr16
sub
xorb
xor
and
lds
adc
pop
mov
mov
lea
xor
xchg
insl
cltd
push
pop
pushf
rcll
adcl
adc
shll
add
adc
mov
repz
push
cmpsl
xor
out
push
adcb
mov
push
movsb
jg
test
pop
hlt
imul
pop
add
notb
jno
mov
sub
jns
sub
daa
fldcw
add
mov
mov
xchg
stos
jg
mov
jg
push
mov
jg
into
xchg
pop
mov
push
dec
aad
xor
call
scas
inc
js
push
sti
ret
mov
daa
ret
xor
adc
sbb
mov
outsl
dec
xchg
adcb
outsl
and
xor
lods
scas
repz
inc
sbb
mov
fnop
outsb
clc
mov
outsl
adc
xor
and
push
jns
mov
add
inc
decb
dec
in
push
xchg
push
cmp
add
pop
stc
push
imul
inc
mov
mov
mov
ds
lea
hlt
push
rcrb
test
out
push
mov
inc
xor
xor
rcl
rolb
nop
aad
mov
inc
mov
test
add
mov
in
jle
imul
filds
es
mov
out
mov
push
imul
mov
add
mov
dec
std
pop
push
sbb
scas
pop
loop
jge
jne
addr16
cltd
movsl
jae
popf
push
cmp
sbb
sti
loopne
add
mov
push
fbld
shrb
pop
jb
bound
push
loop
add
xor
lds
popl
setg
popa
in
add
pop
aaa
mov
adc
jnp
mov
fldenv
sub
jnp
sub
lret
xchg
mov
cld
dec
daa
cmp
loope
insb
iret
mov
cmp
or
leave
adc
cmpsb
and
mov
pop
sbb
and
xchg
in
stos
adc
ret
movsb
mov
movsl
fimuls
add
scas
leave
andb
arpl
push
push
adc
test
lods
loop
lods
iret
push
mov
ss
mov
in
jecxz
pop
cltd
and
push
je
push
add
adcl
inc
add
inc
out
mov
cmp
in
inc
movsb
imul
loop
push
inc
mov
pusha
jmp
and
ret
push
push
cmp
leave
pop
nop
sarl
repz
mov
xchg
cmp
add
push
xor
pop
jl
cmp
xor
mov
out
sti
add
nop
and
pushf
xor
xor
stos
bound
jmp
clc
ljmp
pushf
or
cltd
inc
cs
movsb
ja
push
dec
push
mov
mov
in
or
jg
enter
popf
flds
push
jno
xchg
push
or
test
fwait
sub
xor
gs
cmpsl
test
mov
lret
push
xlat
mov
les
mov
jl
sub
jmp
xlat
orb
adc
lcall
jno
pop
gs
push
mov
lds
sarb
mov
push
iret
xor
adc
pop
mov
inc
push
and
das
mov
cs
pandn
xchg
into
inc
cmp
and
fnstcw
mov
incl
mov
jae
jae
into
or
sub
mov
test
ret
pop
mov
dec
push
adc
jo
xor
sti
push
cmc
sbb
iret
xor
cwtl
in
mov
cwtl
xchg
notb
add
pop
jmp
sbb
in
and
repz
les
imul
lock
xlat
xor
fs
subb
dec
out
mov
cld
lods
cltd
sub
push
scas
push
push
jb
and
movsl
pop
js
jg
cmpsb
jecxz
repz
lret
cwtl
lcall
or
rol
sti
push
daa
mov
dec
addb
nop
std
xchg
sbb
lock
decl
mov
inc
mov
sbb
inc
xchg
pop
push
insl
jmp
xchg
sub
fisttpl
inc
dec
sub
cmp
es
imul
and
mov
mov
xchg
in
dec
sbb
mov
out
int3
pusha
cmpsl
xor
out
mov
mov
fs
mov
out
mov
jno
sbb
daa
outsb
mov
inc
xchg
call
xchg
jle
pop
xchg
jmp
inc
lcall
mov
cmp
pop
gs
scas
std
sub
mov
mov
lods
push
mov
cltd
push
mov
call
push
inc
and
outsb
mov
cld
mov
mov
fcompl
or
incl
xor
loopne
sbb
mov
mov
outsb
enter
pop
aad
sbbb
out
jne
ror
out
cmp
xchg
dec
repnz
inc
cmp
fsubrs
mov
pop
repnz
out
pop
lock
fimuls
mov
add
nop
sub
hlt
lea
sub
addr16
testb
jns
fisubs
cld
inc
fidivrs
sub
adc
xchg
inc
js
pop
test
or
stos
rcrl
jae
or
lods
call
in
enter
in
repz
addr16
cmp
mov
scas
push
addr16
movsl
ljmp
cmp
add
sti
push
xchg
test
stos
mov
cmpsl
add
sub
jle
aam
js
sbb
add
add
push
pop
rolb
clc
cmpb
cmp
movsb
dec
ja
add
sub
mov
ret
fstps
mov
and
jo
push
mov
push
pop
pop
enter
stos
ljmp
mov
bound
rcrb
arpl
dec
push
sub
inc
enter
insb
jo
cwtl
xchg
std
out
xchg
mov
mov
xlat
add
sti
addr16
ljmp
cmpsb
dec
and
ret
fidivrl
mov
xor
clc
cmp
es
sub
cmp
and
pop
scas
and
int
sub
rclb
mov
mov
jnp
push
inc
jg
imul
mov
cmp
std
cwtl
aaa
pop
in
enter
test
hlt
insl
out
ss
dec
pusha
mov
clc
imul
testb
xor
mov
sbb
xor
xchg
data16
repnz
cmpsb
jecxz
jns
das
scas
shl
stc
jne
repz
sub
or
decb
add
jmp
xchg
cli
mov
or
out
xlat
mov
fisubrs
sub
inc
popa
outsl
lret
sbb
push
mov
loop
imul
aas
cltd
jle
das
das
pop
arpl
ljmp
dec
push
mov
add
fdivrs
xchg
notb
xchg
mov
xchg
fildl
imul
jge
das
mov
in
loope
sbb
imul
ja
mov
xchg
pop
sub
in
mov
pop
cmp
inc
movsb
outsb
add
or
repz
fwait
cli
sbb
sub
fdivrl
sbb
loope
loopne
fldt
lds
pop
dec
xchg
pop
adc
adc
lcall
inc
dec
jmp
aad
pop
mov
pusha
xchg
mov
js
iret
mov
es
cmp
adc
jmp
roll
sub
or
lods
orb
pop
lret
inc
mov
add
xchg
pop
leave
leave
cmp
lret
mov
pop
inc
sbb
aad
push
int3
call
pop
leave
jne
loop
adc
cmpsl
sbb
aam
pop
shll
xor
jne
mov
xor
xchg
mov
arpl
jbe
gs
fstpl
enter
neg
and
iret
jbe
mov
push
push
jg
mov
lods
push
gs
push
mov
and
sarb
cs
cltd
dec
loopne
ljmp
sbb
xchg
dec
dec
scas
out
jae
xchg
xchg
lahf
ret
and
sti
mov
dec
push
icebp
insl
jnp
pop
mov
cmp
movsl
push
bound
loop
or
pop
push
scas
fstpt
pavgb
cmp
xchg
rcl
dec
jae
rolb
dec
adc
outsl
stos
call
out
out
jl,pt
pop
add
les
adc
lret
ss
inc
fs
lcall
inc
push
mov
loop,pt
pop
push
loop
call
es
push
jne
enter
mov
or
sbb
fcoms
dec
mov
rolb
sbb
das
movsb
aas
inc
aam
test
pop
mov
dec
cmp
loopne
jge
mov
loope
xchg
outsb
pop
popf
aas
fwait
cmpsb
in
fadds
xlat
mov
dec
popa
das
sbb
sti
cmp
push
dec
jnp
jge
cmp
cmovns
push
fcoml
pushl
push
enter
xor
pop
mov
in
mov
mull
insl
lods
dec
mov
xchg
cli
gs
xchg
pop
ficomps
rcrl
dec
xor
adc
pop
and
inc
arpl
orb
mov
outsb
ja
iret
xor
adc
insl
jnp
movsb
add
mov
ret
pop
lds
daa
mov
sub
shll
repz
pusha
cmp
sbb
pop
xorb
sub
enter
mov
add
rorl
sbb
fdivl
fnsave
push
mov
push
mov
inc
out
rorb
sub
test
fs
mulb
pop
jbe
inc
mov
ss
cmp
and
fwait
add
lods
xchg
jp
shll
push
push
inc
xchg
stos
fisttpll
lea
xchg
push
int3
movsl
push
sub
xchg
sub
add
cmpsb
cmpsb
in
mov
jno
mov
mov
lock
bound
sbb
lcall
nop
repz
sub
mov
cmc
les
mov
pop
dec
call
scas
scas
jno
sub
ljmp
mov
in
fidivrl
mov
pop
xlat
call
test
push
test
ljmp
test
insl
testb
jae
pop
inc
loop
rcll
sub
inc
insl
pop
rcl
inc
mov
daa
fadds
xchg
inc
jns
mov
loope
push
cmp
rcl
inc
cmpb
pop
mov
popa
jp
stos
mov
xor
int3
adc
sub
xlat
nop
or
repnz
int
gs
out
inc
lcall
mov
aas
add
icebp
jnp
cmpsl
frstor
bound
sub
dec
cmp
fisttpl
int
mov
cltd
test
call
xchg
fists
lea
lea
mov
imul
adc
pop
std
mov
cmpsl
daa
lock
cld
xchg
sbb
cmp
xor
lahf
xchg
std
or
or
mov
mov
aas
sub
out
mov
je
xchg
jne
pop
pop
aaa
in
je
jb
das
inc
nop
divb
fcmovnbe
add
shll
cwtl
push
sub
mov
sub
fdivs
pop
fsts
subl
pop
lret
dec
xchg
lea
out
inc
inc
clc
xchg
es
push
dec
push
pop
jmp
mov
mov
and
sub
mov
cmp
mov
incb
mov
shr
movsb
xlat
cmp
or
add
xor
inc
in
fidivrs
enter
adc
push
xchg
mov
and
in
cmp
mov
pop
je
sub
adc
ds
xor
lret
dec
jbe
jno
cld
mov
and
mov
add
push
call
cs
mov
mov
sbb
cmpsb
xchg
inc
ror
inc
jb
cmovs
pop
fistpll
cmp
and
scas
decl
sub
dec
add
enter
rol
or
xchg
lcall
cli
jb
push
pop
inc
sub
rcll
dec
and
dec
aas
push
ss
or
jae
dec
bound
addr16
and
mov
pop
fs
inc
insb
icebp
int
xchg
test
sbb
push
or
add
jl
push
mov
pop
sub
mov
test
lds
daa
shrb
jmp
mov
adc
not
insb
dec
and
dec
shrl
push
lods
arpl
cmp
xchg
mov
scas
cmpsb
cmc
dec
ss
mov
mov
cli
adc
mov
aaa
int3
sub
out
outsl
mov
sbb
pop
aaa
mov
hlt
xchg
sbb
sub
jle
mov
lock
xor
dec
rorl
into
push
mov
mov
shl
aad
repz
sub
or
loopne
mov
inc
and
dec
jmp
add
xor
jns
bound
mov
sbb
dec
jp
xor
mov
mov
fistps
xor
stos
aaa
es
lcall
ljmp
ret
xor
outsl
push
ljmp
sbb
and
add
mov
cmp
xlat
shll
jle
mov
mov
and
jno
hlt
xor
jmp
xchg
lods
cmc
xchg
push
jae
movsb
push
lods
cwtl
aaa
clc
xor
shrl
shl
mov
loopne
mov
popa
add
adc
adc
daa
pop
fdivrp
movsb
in
add
adc
fstps
sbb
add
and
aam
outsl
cmc
dec
pop
jnp
xor
in
inc
add
ds
lock
stos
xor
pop
out
mov
push
cmp
outsl
nop
js
jb
push
pop
int3
stos
cwtl
and
push
jns
inc
push
inc
cmpl
aad
lods
scas
push
mov
mov
add
add
stc
adc
rcll
inc
cmp
mov
push
push
ds
clc
leave
scas
stos
add
xor
notb
mov
daa
inc
xchg
out
push
mov
and
dec
mov
inc
pushf
mov
xchg
xchg
mov
adc
jp
cmp
push
add
pop
xchg
imul
cwtl
mov
rorl
sub
clc
mov
hlt
ret
in
jecxz
loope
push
adc
divl
outsb
mov
cmpsb
mov
outsl
push
push
andb
cmp
xchg
push
push
scas
jecxz
subl
mov
adc
roll
sub
xor
rolb
cmp
inc
sub
xchg
rcrb
into
mov
movsb
sahf
fsubs
enter
xchg
pop
jg
mov
jae
pushf
and
nop
lahf
lock
and
leave
insb
roll
out
push
aam
sti
daa
mov
xorb
leave
ss
sub
in
out
add
xchg
xor
ja
mov
ja
aas
mov
repnz
dec
jb
int
inc
push
in
lods
aam
or
out
int3
in
addr16
test
movsl
cltd
add
fstl
dec
in
xor
sub
pop
bound
fidivs
inc
mov
and
cmp
push
or
and
lods
sti
fs
popa
adc
cmc
mov
jnp
xchg
scas
mov
xor
jg
push
dec
sub
subl
sub
rcrl
cmp
adc
aam
movsl
xchg
jmp
dec
std
inc
or
lods
or
xor
nop
xchg
adc
shlb
xchg
stos
mov
cmp
movl
rcrb
mov
xchg
and
hlt
cmc
rorl
je
in
imulb
xlat
inc
rcl
mov
enter
or
movsb
xchg
inc
mov
mov
xor
stc
sub
push
dec
into
mov
push
xor
stos
mov
inc
xchg
push
cltd
mov
popa
sub
nop
sbb
jg
inc
inc
sub
or
pop
xor
cmp
loop
xchg
mov
lret
stos
jae
icebp
subb
and
fcomps
leave
int
xchg
mov
test
rcr
add
dec
rcl
pop
pop
dec
or
sub
stos
adc
js
push
pop
mov
push
xchg
xor
outsl
gs
shr
dec
popf
mov
mov
sub
xchg
sub
repz
mov
pop
arpl
imul
xor
fbld
mov
fdivr
sub
mov
xor
icebp
repz
fwait
cmovge
lahf
dec
cmp
lds
mov
popa
sub
test
fisubs
xchg
pop
mov
lock
stc
dec
and
xchg
jg
out
xchg
test
ljmp
mov
test
imul
into
mov
xchg
mov
jle
ja
push
or
addb
sbb
inc
inc
xlat
jmp
or
out
push
add
shrb
movsb
scas
push
lods
sub
mov
jns
pop
scas
xchg
dec
dec
repz
push
jp
lcall
cs
sbb
cmpsb
ds
or
testb
sub
outsb
loop
xchg
adc
push
ret
cli
inc
sbb
iret
sbb
mov
mov
xchg
outsl
or
mov
shll
icebp
jo
icebp
into
orb
dec
loopne
testl
jnp
sub
hlt
cmp
enter
mov
outsb
adc
or
loope
push
sub
dec
bnd
jecxz
test
jbe
jp
or
add
dec
out
rorl
bound
out
xor
out
xchg
pop
cld
mov
mov
lret
mov
or
push
push
cwtl
popa
aas
leave
fbstp
or
in
mov
xchg
ficompl
rorb
push
scas
lods
push
mov
lahf
and
adc
push
cmp
imul
adc
ss
push
mov
pop
push
push
out
push
arpl
xchg
dec
dec
jp
inc
rorb
mov
cmpb
sti
clc
inc
sbb
jge
jle
jno
bound
mov
call
dec
pop
push
mov
cmp
sbb
out
jns
cmp
aaa
rorb
cwtl
fsubs
jae
adc
inc
addr16
jge
add
xor
lahf
pop
mov
pop
test
cs
pop
jbe
xchg
nop
sarl
lahf
ja
and
stos
adc
xchg
push
xchg
iret
push
fs
fwait
mov
and
in
mov
nop
shlb
mov
jmp
jbe
movsb
cmp
or
sti
cmpsl
ss
push
jo
mull
fs
adc
cmp
add
pop
out
fs
jnp
clc
mov
je
lret
add
push
movsl
xor
push
jae
sbb
xor
adc
repz
fbld
cli
mov
lret
mov
or
xchg
and
push
cmp
in
mov
scas
scas
cmc
dec
push
in
in
les
sbb
adc
jmp
inc
pop
ds
mov
in
fs
fwait
mov
jae
andb
sub
push
sbb
mov
aaa
notl
xor
hlt
ja
shll
xlat
pop
dec
addl
dec
mov
xor
fldcw
jne
mov
push
imul
push
cmc
pop
arpl
mov
insb
shll
nop
dec
test
mov
jo
insb
add
sbb
mov
mov
mov
xchg
and
sbb
xor
pop
cmp
inc
xor
mov
add
pop
inc
lods
rcrl
mov
mov
add
outsb
mov
dec
mov
mov
je
int
in
add
lea
pop
jae
loope
in
xor
add
test
nop
xchg
fucomp
scas
sbb
and
sbb
rcrb
dec
out
cltd
jmp
jb
repnz
js
movsb
aad
ret
shrb
cmpsb
lods
sub
add
loop
sti
pusha
dec
cmp
leave
sbb
cltd
cld
sbb
mov
ss
mov
pop
push
dec
add
call
push
xchg
imul
inc
cs
sbb
lea
sbb
cmp
inc
push
add
mov
dec
lods
shll
arpl
push
cmp
mov
xor
dec
push
repnz
cmp
mov
nop
jno
ja
xor
stos
push
jmp
sahf
mov
cs
jno
ret
mov
dec
jmp
pop
mov
out
mov
sbb
imul
push
test
xor
repz
xor
xchg
sbb
lock
rcl
enter
out
pushf
ljmp
stc
adc
lret
cmp
aas
movsb
inc
mov
dec
mov
rclb
cmc
loop
out
sarl
sbb
mov
repz
hlt
std
mov
push
lret
mov
in
aaa
xchg
and
imulb
sub
xchg
insl
cli
mov
pop
inc
clc
fwait
adc
sbb
jns
cmp
negb
mov
cwtl
jmp
jle
xchg
sub
clc
push
dec
or
mov
dec
shll
adc
dec
and
insb
dec
shll
imul
mov
adc
dec
inc
das
sti
mov
orl
sub
xchg
jmp
pop
fsubs
lds
sahf
adc
fisubrs
test
jnp
adc
decl
cmp
addr16
dec
out
gs
xlat
xchg
pop
xchg
inc
fxam
jb
imul
sti
shl
js
sbb
je
subb
fwait
push
and
std
push
std
jecxz
mov
dec
inc
mov
dec
mov
imul
test
xchg
cld
ror
daa
jae
movsb
mov
pop
insl
pop
xor
sub
pop
mov
test
xor
fsubr
shl
sub
pop
lahf
test
imul
mov
xchg
int
fbstp
xchg
call
aam
call
stos
test
push
insl
mov
adc
xchg
inc
into
dec
cmp
pop
pop
mov
je
mov
ret
jae
lcall
testl
mov
test
or
lcall
mov
jg
mov
add
orb
ja
or
scas
sbb
in
cwtl
lods
shrl
mov
xor
push
lahf
xor
in
lods
outsb
fisubs
loopne
pop
lcall
ss
jne
faddp
jg
nop
in
sahf
mov
mov
in
les
ret
mov
add
movsb
xlat
shlb
out
xor
sbb
test
sbb
dec
in
sysret
mov
inc
pop
in
mov
out
dec
inc
sub
cmp
rolb
push
and
cli
lods
repnz
and
in
mov
mov
xchg
dec
loop
or
imul
js
iret
add
stos
xor
cmp
ss
call
xchg
jge
icebp
fwait
js
or
dec
in
cs
cmc
xchg
mov
mov
inc
les
fiaddl
dec
mov
mov
mov
push
add
dec
inc
and
mov
jb
add
xchg
scas
fidivrs
mov
sbb
pushf
inc
out
adc
scas
dec
repz
xchg
stos
sbb
sbb
xchg
dec
divl
sub
fistps
repnz
mov
jns
arpl
arpl
je
jp
test
xor
jl
cmp
or
stos
xchg
lods
adc
daa
movsb
les
int3
inc
adc
jmp
cmp
arpl
and
shrl
xor
add
repz
jne
jp
scas
lret
clc
pop
inc
cltd
fwait
push
dec
notb
xchg
ljmp
cmp
sub
loope
pop
adc
mov
sbb
and
cmp
sbbb
pop
mov
imull
lock
lret
mov
xchg
std
cmp
mov
mov
inc
pop
insb
sbb
outsb
int3
loope
mov
push
xchg
rep
aam
aas
push
push
cmc
cmc
jo
mov
xchg
xor
xor
sub
sub
xor
mov
mov
mov
xor
imul
add
lea
mov
add
mov
mov
xor
add
jne
mov
mov
xor
jmp
js
pop
out
jnp
rep
pop
jns
pop
mov
jge
or
jp
mov
sahf
add
sub
push
or
add
mov
mov
ret
mov
fdiv
xor
sub
add
xchg
cld
push
push
stc
mov
insb
stos
push
je
jge
push
flds
sub
je
xlat
fistps
dec
ss
outsb
ss
call
jnp
aam
push
adc
sub
sub
dec
xor
adc
ja
mov
ror
mov
xor
mov
push
sub
cmp
fnstsw
inc
fistpl
popf
mov
fsubs
add
mov
and
pop
movsb
adc
pop
inc
sub
jl
push
sbb
jecxz
mov
insb
dec
jne
stos
scas
arpl
cmpsl
cmp
fwait
lods
jg
jno
test
mov
call
fs
inc
sbb
addr16
ds
mov
xor
mov
ja
sahf
lock
out
mov
out
stc
pop
sbb
fistps
xor
xchg
jbe
or
push
sahf
lods
clc
xchg
nop
xchg
xor
lea
push
xchg
rcrl
stos
pop
push
add
xor
dec
imulb
or
and
dec
das
jb
lret
cmp
popa
mov
data16
fisubs
fadds
mov
inc
push
push
repz
arpl
ficoms
sbb
or
ja
sbb
push
dec
sets
decl
repz
adc
and
mov
cmc
lret
push
jge
dec
xor
xor
sub
aam
rcrb
mov
dec
xchg
outsl
push
insl
jle
xchg
das
rcrb
pop
les
or
popa
and
sbb
roll
xchg
and
pop
shll
dec
fdivl
rcrl
xor
inc
scas
dec
mov
dec
das
and
shll
clc
inc
in
aaa
sti
test
ret
pop
sub
icebp
xchg
rcr
jne
mov
daa
sub
cmp
pop
mov
mov
push
sub
pop
jge
lods
push
cltd
out
push
int3
aad
push
mov
test
push
cltd
jae
ret
repz
mov
arpl
in
clc
cmc
aad
ja
lcall
sub
hlt
sbb
xchg
stos
popf
xchg
inc
add
aas
dec
sub
xor
fsubrp
push
shl
ljmp
stos
cmp
add
lods
nop
jmp
and
stc
sub
or
jae
das
or
mov
lea
fldt
jbe
std
aad
ret
and
sbb
shll
jg
int3
ret
in
sbb
pop
inc
shl
inc
or
cs
mov
std
lods
loope
int
clc
mov
or
xchg
subb
mov
movsl
ss
insl
arpl
in
jns
insl
je
in
jne
mov
push
jp
pop
mov
cmp
out
out
cmpsl
lret
dec
sub
jmp
dec
push
ds
sbb
fdivr
das
addr16
jge
rorl
cmpsl
xor
in
out
leave
pop
mov
imul
popf
or
insl
inc
jle
das
sbb
lods
outsl
gs
loopne
enter
sbb
imul
scas
sub
pop
push
lahf
or
mov
xchg
inc
adc
push
pop
and
push
ss
aas
dec
pop
stos
adc
sub
mov
mov
cs
jp
lcall
mov
cld
shrb
ret
jmp
repnz
pop
adc
pop
and
pop
xchg
sub
je
in
xor
adc
lret
jnp
jo
adc
lods
xchg
cmpsl
adc
sub
push
and
xchg
in
pushf
sub
sti
push
add
ret
notb
or
dec
js
popa
fxch
icebp
loope
adc
cmp
mov
aam
mov
cmc
mov
and
loopne
jle
sbb
call
shlb
ficompl
lds
jbe
jb
jo
inc
adc
push
imul
dec
push
lahf
mov
mov
lock
out
and
add
dec
sub
arpl
aad
add
cmp
sub
cmp
sbb
mov
push
adc
xor
or
inc
cltd
pop
jg
dec
sahf
jg
cmp
push
pop
sub
std
mov
cmpsl
mov
inc
cmp
ret
xchg
pusha
dec
pop
test
std
pop
bound
lahf
push
cmpsl
ja
xor
shll
and
ss
mov
or
pop
call
xchg
daa
adc
sub
inc
sti
stos
or
xchg
dec
jb
pop
adc
sub
lahf
add
inc
cmp
rcl
push
add
rdpmc
push
adc
pop
rolb
test
lea
xchg
sub
jp
push
mov
dec
adc
push
ja
jle
lods
int
std
xor
addl
popa
insl
mov
cld
jmp
cmp
jnp
fsub
ljmp
xlat
repz
in
jmp
sub
pop
mov
fldenv
test
sub
pop
dec
shrb
lcall
icebp
aaa
test
cmp
cld
das
sub
int3
scas
pop
nop
push
pushf
leave
leave
jle
into
test
xchg
mov
xor
bound
daa
mov
int3
lock
imul
ret
pop
mov
push
lods
xor
out
pop
clc
xchg
mov
icebp
pop
inc
imul
mov
das
mov
mov
pop
outsb
push
scas
aas
mov
mov
jns
xchg
adc
push
punpcklwd
sbbb
push
rclb
js
push
sbb
pop
sub
test
mov
jl
hlt
mov
adc
in
mov
push
out
loopne
outsb
xchg
mov
sub
cmpsl
fs
sub
out
or
add
das
adc
or
pop
outsb
jmp
cmpb
jns
adc
inc
mov
xor
dec
imul
movsl
imul
xchg
or
sub
insl
cmp
add
mov
xchg
dec
push
cld
and
add
fimull
movsl
mov
adc
mov
mov
out
nop
daa
addb
sbb
xchg
lock
outsl
mov
sub
pop
aas
push
sbb
jle
sbb
int
hlt
out
dec
sbb
sbb
jnp
cmpsb
inc
push
xor
mov
inc
jle
add
cmp
dec
jecxz
fidivl
aas
or
fwait
pop
inc
pop
inc
jmp
cmp
sub
je
xchg
xlat
lret
or
scas
ret
mov
add
popf
dec
out
sbb
gs
adc
xor
aam
and
orb
fisttpll
xor
lock
lcall
push
push
out
mov
repz
and
xchg
into
out
arpl
or
ljmp
iret
stc
xor
mov
add
dec
icebp
je
loope,pt
adc
mov
jns
test
cmp
icebp
xlat
adc
imul
xor
sbb
push
sbb
fxch
cmp
aas
pusha
clc
cmp
xor
mov
int
loopne
mov
push
add
xchg
popa
popa
lods
cld
mov
mov
enter
ljmp
lret
das
sub
sbb
or
ret
sbb
gs
jne
pop
lahf
mov
jmp
push
in
sub
pop
push
call
jo
fwait
inc
push
sub
mov
jnp
cltd
and
push
jne
jmp
push
enter
daa
inc
movb
subl
iret
sub
movsl
jecxz
inc
adc
push
mov
in
pop
mov
cli
fwait
mov
pop
dec
ss
and
adc
sub
add
cmp
les
sbb
ja
xchg
popf
test
lret
push
dec
cmp
pop
ss
stos
fbstp
std
popa
stos
add
mov
subb
sub
jae
dec
cld
mulb
mov
es
imul
inc
cmp
out
std
mov
inc
pop
sub
sbb
in
lret
push
mov
in
cmc
cs
mov
imul
mov
jg
cld
lret
sbb
inc
int3
mov
xchg
mov
mov
mov
test
push
test
xchg
adc
popl
lods
mov
mov
jno
jp
scas
pop
lret
inc
rcll
sub
idivl
fistpll
push
mov
add
je
sub
aam
cmp
dec
insl
mov
push
mov
stos
shlb
das
pusha
push
out
sbb
and
xor
fnstsw
xchg
mov
inc
ds
fidivrl
add
mov
sub
rolb
fcompl
xor
pop
pop
push
mov
mov
out
jecxz
stos
adc
mov
mov
imul
iret
push
sub
adc
push
movsl
jno
inc
inc
icebp
cmp
shld
mov
fstps
inc
sub
ret
js
notb
rcrl
or
xchg
in
push
js
xchg
inc
adc
hlt
inc
add
push
dec
in
int
aam
negl
adc
xor
into
jmp
fidivrs
add
pop
push
ja
jecxz
push
mov
popa
and
mov
je
cli
sbb
xor
add
mov
adc
xlat
dec
inc
jb
aaa
push
sub
pop
popf
inc
and
ss
cmp
std
pop
data16
xor
dec
dec
mov
filds
jl
push
xor
sub
push
shl
iret
jbe
inc
stos
xorl
or
jle
sub
sbb
mov
ret
es
lret
test
sbb
jg
xchg
adcb
jge
push
mov
mov
mov
push
arpl
cmp
jne
ljmp
dec
popf
nop
cmc
sbb
mov
clc
repnz
fdivrl
cmpsl
shrb
sub
mov
jno
mov
xchg
inc
ljmp
aam
xchg
push
xchg
and
add
flds
jno
negb
lods
pop
out
add
inc
dec
arpl
lods
movsl
std
stc
add
xchg
xchg
out
outsl
and
inc
fdivs
test
xor
jl
mov
scas
int3
push
fwait
cmp
xchg
or
fdivrs
aad
jae
insl
xchg
into
jne
push
fwait
sarl
je
roll
push
push
repz
rcrb
arpl
cmp
pop
dec
test
imul
xchg
mov
fsubrl
add
mov
fstps
inc
mov
xor
outsl
sbb
pop
xchg
xchg
push
test
enter
in
sti
jecxz
add
add
dec
stc
mov
or
xchg
aam
mov
mov
rolb
in
lock
hlt
dec
mov
ja
in
lods
les
xor
test
pushf
add
repz
xor
pop
mov
push
mov
ljmp
lds
xchg
aaa
les
xchg
out
inc
lea
xchg
dec
and
cs
jge
out
fdivs
sub
pop
push
jbe
jp
mov
or
daa
mov
std
xchg
divl
notl
test
inc
mov
daa
cwtl
add
fists
or
enter
and
rorl
jns
push
xor
das
jno
cmp
pop
add
add
sub
and
xor
inc
or
push
mov
call
jo
push
ficoml
popa
imul
push
cmp
fisubs
mov
inc
dec
fcoml
movsb
jl
cwtl
dec
and
xor
fidivs
mov
xchg
orb
mov
lret
imul
je
mov
outsb
ljmp
movsb
flds
ret
add
adcl
dec
testl
jb
bound
lea
dec
mov
add
push
cmp
and
ficompl
bound
cmpsl
subl
jg
ds
loope
and
dec
fwait
push
loop
sbbl
int3
pop
and
arpl
and
mov
ljmp
loope
pushf
push
add
stos
xor
push
fadd
cmp
cmp
xchg
imul
ja
mov
fsubr
mov
arpl
pop
imul
inc
lds
push
test
pop
adc
ret
add
cmp
push
add
sbb
lds
rcll
cld
loope
jl
das
es
mov
sub
hlt
sub
out
and
xchg
pop
inc
xor
cmpl
inc
enter
jns
cli
inc
insb
xchg
jns
pop
mov
outsl
adc
jecxz
ljmp
and
insl
mov
fildll
sub
add
or
add
jle
pushf
scas
int
xchg
cmp
pop
rorb
lock
pop
pusha
inc
or
jns
adc
pushf
ja
insb
mov
push
pop
mov
mov
mov
mov
gs
mov
outsl
aaa
pop
shll
jne
mov
mov
test
lea
adc
jmp
lcall
das
movsl
imul
fdivr
pushf
iret
pusha
mov
fildl
out
xchg
push
in
insb
sti
daa
ret
cmc
out
cwtl
movsb
xlat
jmp
mov
loopne
fstpl
xchg
insb
pop
into
mov
lahf
js
shll
or
dec
sahf
gs
call
mov
and
sbb
cmp
lock
test
fwait
hlt
imul
jno
sub
mov
or
xchg
xchg
xchg
mov
add
pop
mov
jbe
outsb
xor
into
mov
es
mov
fucom
xchg
sahf
fstpl
int3
add
ds
sahf
fisubrl
dec
xor
lret
mov
out
lret
cmp
mov
push
cmpsb
mov
rclb
adc
pop
dec
sbb
sbb
sbb
mov
clc
aad
xchg
clc
vpunpcklwd
ret
pop
faddl
xor
pop
mov
fstps
sub
sub
adc
xchg
enter
sti
fsts
xchg
mov
sahf
or
sub
adc
inc
add
adc
jl
pxor
in
push
push
pop
insb
push
add
push
cmp
lret
jns
test
sti
ffreep
js
test
mov
cmp
hlt
sti
lcall
sub
mov
addl
push
push
cmp
xor
pop
dec
add
or
inc
aad
dec
lds
lcall
inc
or
or
inc
mov
sbb
mov
repnz
sbbl
jp
arpl
mov
xorb
inc
lcall
pop
or
idiv
xor
popf
jge
in
and
xor
adc
inc
sarl
lock
int
sbb
lods
push
outsl
insb
out
test
fisubrs
pop
iret
in
loopne
pop
loope
loop
cmpsl
mov
adc
dec
pop
add
lahf
popa
pop
out
mov
nop
add
pushf
mov
cmp
push
movsl
jnp
mov
addr16
sub
mov
ret
lret
push
repz
icebp
mov
test
test
or
pop
pop
in
out
fwait
out
arpl
stc
daa
adc
insl
jnp
test
sbb
push
push
lcall
daa
test
and
add
fnstcw
and
dec
shll
jno
adc
out
mov
ret
cmp
pusha
push
incl
sub
xchg
cmpsl
cwtl
mov
xchg
test
cli
ret
shrb
out
jp
lret
xor
jle
sbb
push
repnz
iret
cmp
clc
fwait
add
push
mov
std
xchg
dec
xor
dec
lds
fwait
arpl
jp
jne
call
iret
stc
or
fisubs
aad
push
loope
push
add
leave
test
lock
dec
dec
ret
enter
fisubrs
fsubrp
and
lahf
adc
cmpl
pop
sahf
or
sub
pusha
es
shlb
xor
stos
fnstenv
xchg
inc
loopne
mulb
inc
idivb
jp
mov
jb
stc
cmc
repz
mov
inc
dec
sbb
stc
cs
enter
sbb
shrl
sub
stos
and
jo
cmc
subb
mov
xchg
loop
test
mov
sub
inc
pop
shll
pop
push
dec
jbe
pop
mov
shll
mov
cmp
mov
ljmp
mov
mov
pop
sti
push
stos
sub
and
inc
test
das
mov
cmpsb
pop
cltd
movsb
fsubrs
pop
fs
mov
xchg
insl
lret
mov
je
jae
call
or
sbb
xchg
inc
jl
stos
mov
sbb
mov
pop
cmpsb
add
push
jnp
mov
test
in
mov
or
mov
pusha
out
test
ja
push
stos
shlb
aam
frstor
xlat
gs
dec
push
sub
xchg
rolb
rcpps
andb
pop
push
jne
xchg
mov
sbbb
es
push
cmp
adc
aad
add
xor
pop
into
pop
xor
enter
popf
sbb
mov
test
and
dec
jnp
sub
mov
add
mov
add
mov
sahf
mov
mov
sub
xchg
and
sbb
std
test
or
sahf
insb
xor
cli
negl
jl
sub
les
xlat
mov
jge
sbb
xchg
stc
adc
sti
or
mov
mov
jl
cmpsb
or
addr16
pop
pop
lods
je
push
dec
jmp
cwtl
fadds
leave
sbb
xor
cmp
jns
ret
mov
adc
bound
lods
fmulp
cmp
push
jb
loop
mov
jg
and
xor
pusha
fidivs
and
inc
pop
outsl
pop
xchg
addl
sub
push
dec
jge
and
out
mov
inc
cmpl
pushf
add
sbb
fmuls
jo
in
mov
adc
fists
mov
xor
fstpl
into
bound
shll
xor
inc
fnstcw
mov
jo
clc
aas
or
xchg
sbb
shl
pop
sarl
sub
test
gs
pusha
sbb
out
loope
push
and
repz
jns
popa
mov
add
dec
rolb
mov
ss
insb
cmp
repnz
sbb
or
jnp
pop
mov
setle
push
aad
add
xor
sbb
lahf
daa
dec
lds
xor
repz
xchg
cmp
pop
out
push
jmp
mov
inc
test
dec
ret
or
orb
fmull
inc
cmp
xchg
addr16
cmp
jbe
subb
inc
or
and
mov
push
repnz
cmp
sbb
fnstsw
std
or
lahf
push
mov
pop
repnz
subl
mov
dec
clc
in
loopne
ja
adc
mov
sbb
vpunpckhdq
inc
dec
push
aaa
sbb
int
aaa
rorl
mov
in
mov
sbb
rcr
mov
fdivs
andb
outsb
cmp
in
inc
in
inc
xchg
testb
push
and
mov
in
mov
lods
pusha
repz
xchg
inc
dec
sub
iret
dec
adc
sub
cmp
push
inc
cmpsb
push
cmp
out
push
jae
daa
scas
int3
mov
xchg
aas
loope
aas
in
cs
jo
sbb
lock
test
add
popf
and
cmpsl
mov
pop
hlt
inc
int3
mov
gs
push
inc
mov
in
push
mov
cmp
mov
hlt
sub
cmc
out
and
popa
ja
aaa
jmp
mov
aam
fdivr
outsl
cld
lds
jmp
lahf
int3
repnz
or
xor
mov
loope
cmp
mov
and
mov
cs
pop
out
insl
ljmp
mov
jae
cs
mov
call
in
out
aam
dec
cmp
or
repz
adc
mov
mov
hlt
mov
mov
xchg
por
into
icebp
aaa
cwtl
mov
loope
mov
sar
mov
inc
lock
xor
hlt
fs
cmp
xor
in
cli
out
cs
mov
js
rcrl
mov
lods
filds
sbb
push
xor
inc
rorl
test
jl
sti
inc
or
pusha
iret
and
push
and
lcall
pop
ret
sbb
cmp
imul
cmpsl
aaa
mov
out
bound
push
add
shrb
inc
push
fistpll
pushf
xor
cwtl
pop
hlt
dec
cld
cmp
stc
insl
mov
or
pop
pop
adcb
jmp
sbb
pop
push
lea
jne
cmp
lds
mov
movsl
push
test
imul
jbe
mov
mov
inc
mov
movsb
and
daa
or
adc
xchg
xor
movsb
ds
aam
xlat
jmp
sub
lock
and
mov
dec
dec
mov
inc
and
xchg
ss
cmp
icebp
jne
ljmp
sub
mov
jge
into
ret
fbstp
stos
push
cmp
test
push
pop
adc
cwtl
ficoms
jl
cmp
jl
and
test
lds
lea
adc
xor
pop
push
jmp
bnd
push
faddp
xor
inc
sti
jmp
sti
aad
and
call
outsl
rcll
or
out
shlb
ss
mov
popf
outsb
xor
adc
aaa
inc
jae
sub
mov
xor
lods
popf
cltd
inc
rclb
fadds
sub
aas
push
int3
test
dec
fcompl
sbb
dec
sub
fucomi
pmullw
fiaddl
or
jno
cmp
movsb
xchg
fsubl
adc
or
push
mov
pop
test
or
xor
aaa
sbb
mov
addr16
cmpsl
or
shll
mov
dec
mov
push
cmpsb
out
into
cmpsb
roll
cmp
dec
mov
xchg
mov
mov
adc
inc
cmp
or
adc
cmp
orb
and
es
es
push
push
sbb
pop
outsl
call
adc
sbb
cmc
jo
bound
jne
mov
lock
push
add
repnz
push
mov
xchg
push
sbb
cmp
mov
pusha
push
mov
shrb
sub
mov
cmp
loope
fsubrs
add
inc
pop
imul
cs
xor
lock
or
mov
mov
jo
dec
test
test
cmpsl
pop
cmpsb
fiadds
lds
xorl
mov
nop
cmp
lret
fwait
outsb
push
movsb
sbb
jnp
loope
hlt
stos
testl
call
jle
sbb
xor
push
push
ds
pop
xchg
push
xchg
fidivrs
mov
pushf
adc
in
out
int
ss
jne
mov
mov
sub
das
jge
lret
lods
outsb
mov
adc
in
jb
push
aad
or
or
sbb
inc
inc
bswap
lds
orl
clc
or
cmp
fstl
aad
std
mov
iret
outsl
jle
dec
cmp
xchg
test
mov
imul
mov
fidivrl
pop
or
lret
iret
xchg
outsb
fwait
jo
sbb
sub
vmread
test
cmp
popf
inc
push
pop
loopne
xchg
jmp
push
cmp
xor
push
sbb
ror
sub
inc
addl
add
mov
outsb
iret
cmp
jnp,pt
jge
cmpl
add
in
jae
cltd
cs
pop
push
xor
stc
pop
dec
js
lock
in
adc
push
dec
cmp
aad
add
fists
aad
push
push
xchg
add
xlat
xchg
shlb
nop
out
fs
imul
jb
jg
in
and
jmp
lahf
and
mov
rorl
faddl
neg
aam
rcrl
flds
scas
lods
jge
pushf
movsb
mov
pushf
aad
lods
push
push
iret
and
add
cmc
cmp
pop
sub
stos
xor
xchg
xchg
and
jo
xchg
xchg
mov
pop
aad
les
xchg
push
jnp
inc
adc
jge
add
jmp
imul
pop
fcomi
idivb
leave
fidivrl
sbb
fs
inc
sarl
inc
pop
arpl
mov
cmpl
lea
jmp
push
mov
add
aad
stc
pop
push
stos
lds
pop
mov
aam
sbb
fsubs
nop
dec
inc
adc
jle
ss
icebp
push
fsub
mov
pop
lret
sbb
loop
sub
ljmp
pushf
or
hlt
popa
push
dec
mov
xchg
loope
jge
mov
cmc
inc
pop
inc
and
scas
adc
je
push
push
jno
movsb
gs
push
in
push
push
data16
in
adc
push
sub
out
pop
push
movsb
outsb
dec
dec
bound
int
jae
xor
movsl
dec
notl
and
push
cmp
cld
fs
hlt
jno
add
sahf
test
and
stc
inc
stc
aad
inc
jg
and
add
sbb
jge
lcall
in
push
xor
xor
mov
lds
inc
adc
mov
dec
and
add
stc
imul
cwtl
rcll
je
loopne
mov
test
fs
das
rcr
push
push
push
out
xchg
rep
pop
std
js
pop
add
rclb
inc
call
lods
xor
cmp
lea
mov
gs
add
add
in
into
lods
aas
or
scas
div
repz
hlt
scas
cmp
mov
pop
out
inc
add
sub
scas
sub
or
es
ljmp
das
testb
xchg
mov
or
xor
mov
sub
sbb
cli
ja
adc
ds
outsb
jae
scas
dec
sbb
dec
cmpsb
sub
sub
mov
lea
andl
mov
incl
mov
xchg
imul
or
jp
sub
call
pop
add
push
cmpsb
js
jl
add
mov
ds
decb
aad
mov
ljmp
fcomi
shrb
icebp
xchg
xchg
cmp
aas
mov
ror
stos
fs
mov
ds
aam
xchg
or
inc
xor
adc
xor
pusha
xchg
stc
jo
lret
mov
cmp
gs
lods
xchg
pop
fwait
jecxz
cmp
aas
xchg
scas
sub
inc
cli
and
mov
aad
adc
mov
cli
jecxz
rcl
pop
xor
hlt
out
cwtl
xor
mov
insb
cmpsl
pop
sbb
inc
out
adc
es
addr16
cs
mov
rcl
mov
jmp
mov
idivl
lds
pop
in
ds
outsb
movsl
paddw
pop
shlb
popa
rcl
jae
mov
mov
inc
iret
add
dec
xchg
fucomi
mov
push
pusha
cs
jg
ss
push
push
sbb
insl
daa
inc
cld
lods
fsubrs
stos
inc
cli
mov
pop
or
mov
cmpsl
cmc
push
mov
out
cmp
cmp
pusha
add
mov
sub
es
add
daa
fstpt
repz
aad
lock
mov
fcoml
pop
pop
pop
mov
pop
or
mov
mov
sub
cmp
push
and
mov
and
pop
dec
xor
cmc
or
fstl
adc
dec
xor
dec
jmp
sbb
dec
lret
xchg
dec
push
mov
and
loop
pop
or
adc
cmpb
or
cmp
sbb
sarl
jo
fildl
sbb
jg
mov
jl
clc
je
add
inc
sti
adc
lret
adc
mov
subb
xchg
cmpsb
cmp
ss
dec
mov
imul
sub
sahf
outsb
aam
sub
mov
mov
nop
decl
ret
xor
mov
push
and
xchg
pop
fdivrl
loop
xchg
mov
cs
jns
repz
xor
iret
in
pop
repz
lock
pusha
faddl
dec
cs
fincstp
shl
mov
mov
and
mov
aaa
xchg
add
inc
sti
flds
pusha
roll
dec
insb
cmc
add
mov
lret
jbe
jecxz
jle
mov
cmpsb
mov
and
stc
addr16
pcmpgtb
loop
pushf
and
test
and
mov
data16
mov
pop
inc
sub
jg
mov
push
mov
jecxz
and
xor
pop
stc
jne
xor
das
ja
jecxz
cltd
jno
call
ret
dec
cmpsl
add
pop
inc
or
dec
adc
mov
push
mov
mov
pusha
mov
enter
xor
sbb
jecxz
icebp
test
iret
jmp
xor
xchg
mov
jbe
outsb
and
fwait
outsl
jle
mov
loop
cmc
mov
sub
fisttps
adc
mov
movsb
xor
std
add
jmp
mov
cmp
js
xchg
test
sub
push
add
in
rcrl
sbb
call
dec
imul
es
pushf
and
ret
cld
in
sbbl
int3
dec
and
sbbb
cmp
mov
push
loope
pusha
inc
jbe
sahf
and
jmp
insl
popa
mov
test
pushf
pop
lea
popf
repnz
xor
int3
imul
or
mov
dec
pop
imul
out
pop
mov
sub
mov
and
jns
xor
nop
andb
js
mov
test
push
fsubrs
test
mov
cmp
ds
push
cmpl
jbe
outsl
xchg
test
inc
fdivr
adc
or
or
ds
mov
lahf
jl
cmp
js
pop
adc
cmp
shl
loopne
daa
cli
inc
xchg
das
or
push
pop
inc
xchg
loopne
popf
shll
sbb
fs
fldcw
stc
pop
xor
cmp
add
dec
testl
jp
xchg
and
push
adc
enter
jmp
mov
jp
lcall
aam
inc
dec
les
pop
inc
inc
xor
add
add
cmp
jae
lea
mov
mov
movl
lea
mov
mov
addl
mov
xor
add
lea
mov
jmp
add
jnp
jnp
jbe
cs
ret
or
jp
mov
cmp
mov
mov
mov
pop
out
mov
adc
notb
ss
mov
test
cmova
into
push
mov
sbb
xchg
scas
popa
mov
inc
aas
cld
fstl
sbb
pop
xchg
std
pushf
std
lret
jb
cmp
push
sbb
in
mov
rol
dec
shll
jmp
cmpsl
add
xchg
sbb
repnz
push
rolb
cli
xor
in
push
fimull
mov
push
dec
lea
fcmovb
and
jb
movups
jae
dec
out
adc
push
xchg
pop
inc
sbb
daa
loopne
or
jl
sbb
cltd
adc
xchg
sub
sbb
sub
sub
jno
xor
inc
add
xor
out
xor
stc
das
and
mov
inc
popl
jl
push
jp
add
mov
insb
ss
pusha
mov
or
pop
divb
sub
gs
push
repz
inc
jecxz
mov
push
int
sarl
push
subl
jle
aad
mov
jmp
mov
push
sbb
push
or
les
adc
loop
add
cmpsb
incb
or
xlat
xor
adcb
pop
je
push
mov
xchg
int
lods
xor
push
dec
xor
mov
sub
mov
lods
dec
adc
test
or
push
rolb
push
cli
jbe
dec
and
stos
jl
pusha
adc
dec
fisttpll
out
mov
mov
dec
test
cmc
pop
lock
sbb
fiaddl
jecxz
mov
mov
mov
es
push
xor
bound
pop
or
jno
lea
hlt
pop
push
xor
add
daa
loope
into
call
cmpsb
sub
insb
mov
fidivl
pushl
or
mov
je
xchg
jmp
mov
sub
imull
xor
sti
scas
xor
imulb
mov
push
adc
sbb
pop
xchg
push
mov
push
pop
repnz
add
sbb
scas
jnp
aaa
into
push
lahf
dec
add
mov
pop
mov
js
loop
fisubrl
das
pushf
mov
cmp
js
loopne
cmp
sbb
inc
and
and
repnz
stos
mov
pop
fwait
cli
prefetch
rclb
in
xor
ret
mov
jg
fwait
pop
mov
jg
scas
int3
movsb
movsb
into
pop
jae
and
or
sub
ret
inc
ret
sub
add
out
push
sub
xchg
stos
in
lcall
pop
pop
cld
or
mov
pop
cmp
cmpsl
and
repz
xchg
pop
arpl
xchg
cmp
jl
mov
je
pop
inc
imul
push
push
mov
lcall
mov
cwtl
add
call
stc
mov
rclb
push
xor
jmp
shll
scas
add
dec
in
xor
int3
enter
sbb
insb
imul
add
lods
call
mov
sbb
jb
mov
jo
loopne
clc
out
xchg
rcr
push
xor
add
inc
jo
jno
xor
das
xchg
test
push
icebp
dec
jg
lods
notb
arpl
nop
mov
mov
mov
aaa
fistl
outsb
ret
add
rcl
and
mov
in
test
cmp
cmp
sbb
xor
ljmp
pop
mov
cmp
fldenv
push
cmp
xchg
pop
dec
and
data16
pop
cmpsb
cmpsb
cmp
adc
js
outsl
lea
jns,pt
loop
testb
jecxz
sarb
aaa
out
lahf
or
add
orl
pop
sbb
push
cli
imul
or
repz
test
lea
aad
jns
or
sbb
pop
push
push
andl
inc
mov
xchg
adc
ja
stos
xchg
or
roll
mov
xchg
inc
or
pop
push
out
xchg
add
sahf
jle
iret
scas
pop
lods
jne
dec
out
nop
loopne
xor
ss
out
ret
pop
outsb
jg
mov
mov
cmpsl
xorl
inc
sub
in
leave
and
and
out
jnp
jecxz
adc
add
shl
lods
imul
dec
push
adc
xchg
lock
xchg
repz
call
out
idivl
hlt
fistl
gs
lods
test
in
dec
xchg
pop
push
xchg
pop
int
imul
add
fnsave
cmpsb
das
add
fldenv
fisubs
insl
add
out
sub
push
mov
addr16
jb
loopne
sbb
insl
repz
or
xchg
mov
push
inc
outsb
cmp
jno
andps
inc
mov
pusha
mov
addr16
ja
into
jns
cmp
shrl
dec
jo
stc
lods
das
adc
push
dec
push
pop
pop
pop
lret
sbb
std
push
enter
into
push
mov
out
leave
push
xchg
dec
or
fimuls
add
adc
cmp
pop
xchg
sbb
inc
inc
pop
into
adc
sbb
hlt
mov
xor
cmpsl
mov
cmpsb
xlat
xchg
jl
stc
push
add
mov
scas
fptan
dec
imul
and
mov
xor
int
xchg
xchg
into
call
imul
fcmovnu
adc
in
outsl
lods
sbb
and
push
dec
xchg
and
scas
inc
pop
hlt
mov
sub
outsb
ret
xor
flds
jecxz
push
lret
mov
call
jge
popa
call
push
into
mov
jbe
daa
adc
push
jp
add
push
or
in
jge
xchg
sbb
mov
lods
pop
out
and
push
jno
gs
js
scas
sbb
ret
cli
pop
sub
subb
inc
xor
xor
lods
mov
mov
xchg
xchg
sub
adc
lret
fnstcw
push
mov
jmp
inc
pop
fdivr
adc
subb
push
into
pop
jge
mov
aad
mov
cltd
push
mov
mov
xchg
iret
cmp
sbb
pop
add
into
inc
das
sahf
inc
loop
bswap
aaa
add
out
ljmp
push
bound
loope
or
adc
push
jle
loop
in
pusha
mov
mov
mov
hlt
cmp
fwait
out
lods
sub
mov
inc
ljmp
xchg
xor
sahf
mov
and
cli
mov
in
sub
push
popa
jge
adc
xor
lods
cmpsl
lods
mov
aam
inc
jno
lods
push
push
mov
lea
pop
loopne
sbb
mov
mov
call
in
movsb
mov
addl
sub
jnp
negb
ds
rol
loope
xor
cmp
add
sub
xchg
mov
xorb
dec
mov
push
fwait
test
notl
xlat
nop
adc
xchg
cmp
out
scas
xor
mov
sahf
jno
and
mov
je
divl
inc
imul
xchg
push
jno
iret
sti
mov
sbb
lret
mov
xchg
int
xor
ret
ljmp
push
rcl
push
lds
mov
mov
ljmp
and
dec
je
inc
das
cmp
cmc
jbe
decl
test
xchg
cmp
je
or
ret
addr16
jecxz
mov
ffree
loop
sahf
sarb
xor
outsl
lds
insl
lea
push
sub
jp
push
lret
mov
mov
imul
ss
in
fucompp
fwait
cmc
mov
iret
and
orl
jecxz
xor
pop
jg
dec
dec
push
xlat
mov
pushf
aam
sub
imull
pop
popf
add
fmull
dec
mov
cmpb
sub
adc
sub
pop
data16
adc
xor
in
lea
mov
std
xor
cmp
js
cli
addb
jmp
or
pop
mov
fsub
mov
sbb
jns
into
pushl
and
stc
hlt
sub
adc
cld
and
jg
cwtl
pop
mov
inc
jecxz
dec
ljmp
hlt
add
push
cmp
xchg
add
iret
xchg
add
lret
daa
jns
inc
mov
adc
sub
les
cmp
bound
or
stos
xor
sahf
call
cltd
pop
or
cmpsb
aas
rcll
call
outsb
ds
and
jge
jnp
imul
mov
addr16
gs
pop
decb
dec
cmpsb
cltd
nop
iret
ret
out
ja
repnz
mov
jg
push
inc
mov
sbb
jnp
jae
pusha
cmpsb
xchg
out
push
out
pop
sbb
push
js
or
aam
mov
in
sbb
loopne
mov
cld
mov
xor
cmc
shlb
inc
pushl
jmp
pop
push
pop
dec
sbb
es
sub
or
or
jo
mov
ret
cli
jecxz
pop
pop
add
lods
jge
call
xchg
popf
insb
add
pushl
ret
push
jno
lcall
inc
aaa
jns
push
pop
loope
mov
jns
sub
lods
pop
mov
mov
jl
and
imul
dec
icebp
jns
sti
fiadds
pop
out
mov
js
jae
or
inc
dec
movsb
aas
aaa
stc
adc
stc
xor
js
xchg
arpl
adc
sub
scas
jecxz
jae
imul
hlt
fwait
andb
nop
pop
pushf
out
pop
sbb
push
stos
xor
inc
and
testl
mov
add
mov
xchg
adc
adc
mov
add
in
or
cli
out
xor
adc
cmpsl
les
rcll
sub
add
and
jns
sbb
inc
or
inc
xchg
cltd
lret
sbb
jne
cmp
shrl
and
ljmp
mov
lods
lret
sub
inc
cmp
add
or
sub
jb
mov
data16
cmp
and
imul
push
xor
inc
cmp
inc
mov
xchg
pop
adc
jge
lea
clc
dec
pop
mov
loopne
ss
imull
mov
jb
pop
mov
xor
jle
fiaddl
lds
jae
ficomps
dec
adc
jmp
ficomps
arpl
jmp
testb
mov
lcall
int
mov
fistl
fwait
rcrl
fisttps
cmp
xchg
int3
or
fidivrs
test
in
push
jns
sarb
lds
mov
mov
imul
sub
push
ret
orl
pop
adc
and
jg
repnz
andl
adc
gs
add
movsl
jle
pop
inc
dec
fwait
cmp
push
xchg
shl
and
dec
pop
movsl
sbb
pop
mov
shlb
inc
aaa
fdivs
adc
dec
outsl
orb
mov
mov
cmp
and
negl
adc
clc
push
fcmovne
mov
test
jg
xor
lret
mov
ret
ret
jge
lret
cmp
jle
jmp
shlb
jbe
data16
cmp
repnz
in
ja
xor
add
and
jno
test
cmp
dec
mov
imul
and
rcrb
inc
fwait
mov
jge
inc
sbb
mov
jb
inc
repnz
je
jne
fdiv
pop
jecxz
and
xchg
xor
fucomip
or
dec
clc
mov
in
hlt
xor
in
jb
sub
push
xor
mov
int
out
sahf
jno
fldt
mov
xchg
jne
xchg
ret
pop
outsl
and
push
adc
sti
push
inc
pushf
lock
adc
data16
sbb
push
push
jle
pop
test
cld
ljmp
fs
cs
aaa
adc
shll
dec
je
test
xchg
dec
repnz
sbbb
xchg
inc
mov
pop
das
les
stos
in
mov
or
sub
mov
or
adc
cmpsb
mov
cmp
lods
jae
daa
cmp
adc
in
inc
or
sub
adc
les
xor
and
fwait
rcrl
mov
movsb
add
push
ja
bound
mov
je
cli
or
sbb
or
int3
jno
sbb
rcr
clc
pop
xchg
sbb
push
xor
mov
jg
je
mov
xchg
adc
les
loopne
mov
js
lea
fadds
icebp
sahf
lcall
push
push
dec
lahf
std
push
inc
into
inc
lret
insb
mov
ljmp
roll
adc
test
stc
and
push
inc
inc
jle
arpl
imul
in
push
mov
leave
flds
mov
dec
int
inc
enter
pop
divl
xchg
loop
xchg
mov
xor
cmp
fwait
arpl
cmp
andl
mov
jno
jg
mov
mov
movsb
lds
mov
aaa
fldcw
arpl
scas
adc
ret
fists
mov
les
jo
int3
jnp
push
mov
adc
sahf
mov
jecxz
dec
inc
pusha
icebp
sub
mov
xor
ret
sub
test
mov
pusha
xlat
cmpsl
jp
shr
ds
xorb
inc
lods
sub
dec
and
adc
sbb
loop
cmp
pop
mov
outsb
xchg
sub
inc
jne
adc
pop
ficomps
js
cmp
inc
cmp
dec
ds
xchg
orl
xor
pop
adc
pop
iret
and
popa
xor
jecxz
jecxz
mov
push
dec
push
and
mov
fsubr
mov
and
mov
movsb
add
pop
popl
mov
ret
loope
enter
push
idivl
mov
arpl
pop
xor
decl
sar
add
popf
cwtl
fwait
scas
idivb
ja
jmp
iret
jge
aam
dec
lret
adc
sub
repnz
inc
sarb
and
pushf
loope
std
bound
aam
inc
fldcw
inc
lea
jmp
dec
xchg
outsb
xorl
adcl
pop
and
cli
or
mov
jmp
out
push
cwtl
pop
mov
mov
xchg
stos
aam
cmp
and
xor
pusha
push
mov
xchg
xchg
hlt
cmp
cwtl
insl
adc
xchg
mov
and
sbb
xor
pop
aas
out
cmp
rcrl
movsb
mov
repz
data16
pop
mov
push
outsl
cmp
jle
sbb
push
and
xor
stc
icebp
jp
add
or
das
aam
inc
push
push
push
leave
pop
lret
cmpsb
xchg
inc
out
xor
xor
push
aad
js
mov
or
push
sub
add
xor
pop
movsb
mov
outsb
lock
in
ljmp
jge
jns
fsubp
ss
jg
xor
out
or
adc
pop
xchg
hlt
rolb
test
sub
mov
add
pop
cmp
lret
jge
and
aam
insl
shll
sbb
jecxz
lahf
movsb
leave
push
pop
les
pusha
mov
ret
push
int3
mov
mov
fisubrs
iret
fstpt
ret
add
push
push
dec
fcoml
mov
iret
ja
mov
popf
test
and
in
aas
xchg
xchg
sub
fwait
andl
shll
test
fisttps
dec
ds
mov
in
inc
shrb
cmp
mov
lcall
sub
pop
sbb
inc
sub
sub
adc
pop
and
adc
in
imul
notl
sbb
fisttpl
insl
rcrb
pop
inc
sti
rol
cmpsb
or
outsb
mov
loop
mov
cmp
popf
cmp
aas
adc
xor
fwait
add
leave
mov
loopne
inc
jae
sub
sub
fdivr
push
or
push
xchg
insl
cmc
xor
out
mov
mov
jmp
enter
daa
cld
jb
mov
jp
pop
dec
mov
aam
enter
mov
mov
mov
ret
clc
icebp
adc
add
imul
adc
int
push
decb
sbb
ljmp
psllw
dec
nop
fs
rcr
mov
sub
ds
jbe
mov
fildll
mov
fisubl
and
pop
cmp
ja
mov
ds
js
mov
sub
add
xchg
lea
loop
cwtl
xchg
fistl
push
jp
ret
pop
in
jae
subl
fsubrl
sti
xorl
out
sub
cli
mov
push
mov
out
adc
jmp
add
enter
cld
mov
sarb
push
addr16
ds
into
mov
test
movsl
test
bound
xor
and
dec
dec
and
pop
cs
cs
jmp
or
out
pop
jmp
cmpsb
xchg
stos
bound
inc
test
pop
cmp
inc
or
adc
movsl
popa
lret
movsb
in
outsb
lods
sti
out
mov
lock
dec
push
push
xchg
popl
test
aas
dec
cmc
pop
mov
dec
xchg
mov
pusha
sahf
sub
hlt
or
shrl
inc
jns
push
jae
xchg
xor
pop
movsb
fst
and
lods
cmc
xchg
pusha
pop
lods
std
sarb
sar
addr16
and
xchg
fistpll
ds
int3
fistps
test
pushf
ja
jmp
dec
lds
popa
pop
push
inc
mov
std
dec
jno
or
enter
loop
add
xor
leave
out
pop
test
inc
and
pop
sub
arpl
aad
adc
sub
push
inc
addr16
jle
push
ret
das
jo
inc
xchg
pop
int3
repz
jmp
add
pop
push
pusha
jb
pusha
jecxz
imul
insb
lds
mov
cli
ja
cwtl
sarl
mov
sub
aas
jl
cmp
jle
stos
sub
push
xlat
mov
mov
mov
icebp
cmp
mov
add
xor
lea
jp
jg
jmp
mov
cmp
dec
js
lds
ret
mov
inc
dec
pop
roll
cltd
lea
or
leave
cmp
mov
testb
dec
scas
mov
dec
stos
int
add
jle
sub
pop
jmp
shll
aam
adc
arpl
pop
scas
fcoms
fisubrs
stc
pop
fcomps
call
sub
adc
scas
sbb
call
mov
pop
mov
or
fsubrl
pop
lods
fcmovbe
aaa
add
pop
imul
rcl
outsl
push
or
jno
mov
int3
ja
pop
push
jbe
mov
xchg
push
fmuls
add
shll
scas
jb
mov
jp
inc
pushf
mov
xchg
push
xor
clc
sahf
mov
lret
mov
popa
jecxz
nop
test
in
out
push
dec
pusha
into
inc
xorb
xchg
js
les
mov
int
jle
lds
stos
sbb
or
data16
andl
cmp
aas
add
pop
fwait
cmp
sbb
mov
inc
jge
jno
or
pop
les
mov
je
add
mov
mov
cltd
pop
in
lret
xchg
insb
push
lock
pop
sbb
stc
loope
ja
xor
or
es
push
xchg
call
mov
mov
xor
repnz
in
icebp
fsubrs
push
jl
or
fs
adc
into
mov
testb
mov
push
adc
xor
cmp
insb
mov
mov
mov
adc
xor
xchg
insb
inc
mov
imul
jb
inc
insb
inc
mov
mov
lcall
stc
inc
mov
mov
addr16
cmpsb
cli
push
pmulhw
shrl
nop
inc
xchg
cmp
mov
aam
mov
jl
and
and
mov
sbb
dec
aas
in
xchg
notl
sub
push
push
jg
adc
mov
daa
sti
repz
add
lret
daa
mov
repnz
and
mov
jle
inc
push
psubq
jp
jnp
dec
sbb
sub
test
test
mov
push
jne
arpl
sbb
repz
lods
sti
dec
outsl
popf
fistpl
ret
insb
in
sti
outsl
add
push
sti
test
ss
aad
xchg
xchg
je
int
mov
cmp
jb
out
push
aas
ret
shr
dec
in
ret
pop
repnz
jnp
or
shlb
cmp
fldcw
jl
imul
lods
scas
test
cmpsl
loope
xchg
repnz
in
in
ret
or
mov
or
xor
pop
push
sbb
into
cld
sub
test
and
mov
jp
xchg
jns
pop
shrl
adc
mov
mov
dec
add
pushf
in
pop
test
pushf
mov
gs
ret
jge
and
in
xor
movsl
xchg
idivl
outsb
test
xchg
imul
xor
mov
int
cmp
icebp
sbb
inc
movsl
add
lock
popf
add
dec
addr16
xchg
mov
pop
xchg
mov
fsubrl
adc
xchg
xor
xor
pop
int
loopne
scas
les
adc
lock
das
sbb
jp
and
popa
mov
je
push
pop
mov
inc
dec
jmp
into
in
fstpt
adc
add
xor
mov
push
ret
mov
cmc
mov
ljmp
lds
sqrtps
cmp
mov
out
aaa
jbe
inc
add
jae
mov
push
xlat
dec
inc
cli
dec
add
pop
pop
test
ror
pushf
jae
adc
xor
pop
dec
repnz
ds
in
sbb
rorb
stos
inc
cmp
data16
cmpsl
and
jno
mov
add
je
roll
aas
clc
in
dec
fnstsw
shrb
mov
stc
add
dec
hlt
fildl
std
xchg
sarb
into
mov
pop
mov
fadds
cld
mov
lahf
rorl
dec
inc
xchg
adc
rol
dec
ss
aas
ss
xchg
push
inc
pop
dec
cmp
xor
test
addr16
mov
cmpsl
xchg
mov
push
push
ds
shr
ret
or
movsb
add
dec
in
movsl
rcll
mov
jne
inc
aaa
sbb
in
test
mov
adc
in
test
inc
aas
pop
cli
mov
xorl
out
mov
jnp
in
hlt
push
push
and
rcl
lret
xchg
int3
cli
gs
adc
outsl
add
popf
popf
lret
mov
jp
sbb
mov
lret
jge
mov
test
push
sti
pop
xor
jno
data16
pushf
adc
je
or
mov
pop
das
sbb
push
adc
add
add
lret
mov
mov
or
push
inc
insl
push
imul
rorl
sbb
mov
mov
cmp
test
pop
aad
mov
pop
inc
dec
push
outsb
adc
pop
push
imul
sbb
mov
xlat
shr
xchg
cmp
cmp
push
xor
cmpsb
or
mov
jne
cld
idivl
gs
jne
dec
add
mov
rol
cmp
jnp
sbb
jmp
cwtl
dec
je
cltd
jns
mov
ret
fcoml
sbb
or
in
arpl
sub
mov
mov
xchg
mov
mov
sarb
jp
inc
adc
adc
ret
and
mov
mov
jp
iret
sbb
push
lret
pop
addb
iret
repz
insl
enter
test
xlat
cmp
cmp
lock
add
cmpsl
faddl
dec
jg
push
test
mov
mov
jo
test
push
cmp
popa
xchg
lea
and
dec
xchg
mov
cmp
xorl
js
pop
adc
repz
roll
mov
cwtl
jae
pusha
inc
imul
jmp
nop
std
dec
mov
cmp
iret
mov
xor
repnz
push
mul
mov
out
mov
mov
mov
push
jno
dec
xchg
daa
test
push
mov
push
imul
cmpsb
pop
or
fisubs
or
insl
jecxz
rcl
pushf
int
rcrl
pop
es
push
push
aad
mov
shlb
add
sbb
adc
sub
call
mov
push
adc
clc
divb
ja
mov
mov
push
pop
ror
and
int
xchg
ja
leave
mov
insl
pop
dec
inc
xor
sbb
push
rorl
jae
sti
leave
add
adc
mov
int3
xchg
xor
out
inc
dec
xchg
push
mov
xchg
jp
pop
jns
shl
xchg
push
adc
aas
imul
scas
lcall
test
in
inc
mov
sti
add
or
fisubrs
cwtl
in
std
or
bound
loop
push
lret
inc
js
arpl
scas
fwait
ret
lods
pusha
mov
das
aam
sti
dec
pop
and
push
cld
mov
lock
jno
insl
ds
pushf
sub
sahf
mov
jl
cli
push
mov
sub
push
ljmp
test
adc
inc
dec
mov
push
cmp
mov
push
mov
push
sbb
fcmovnbe
sar
xor
gs
cmp
add
pop
push
mov
lods
mov
sub
daa
insl
jmp
je
scas
int
mov
pop
popf
jp
mov
inc
pop
jne
jbe
les
sub
sbb
hlt
loopne
mov
cs
inc
sub
adc
push
push
sbb
add
inc
ja
dec
fldenv
xchg
ds
jle
xchg
mov
mov
fwait
xchg
xchg
push
push
sbb
pushl
popa
add
dec
sub
sbb
andb
dec
push
sub
sub
loopne
lea
mov
cli
aad
mov
cmp
inc
xchg
stos
addr16
inc
push
das
dec
sub
sbbl
cmp
and
dec
mov
lahf
adc
mov
cmpsb
in
adc
fidivs
push
jecxz
inc
outsl
and
mov
add
movsl
mov
add
rolb
xor
cmpsb
test
mov
xlat
sbb
sbb
or
std
dec
or
jno
add
movsl
mov
popl
jae
sbb
cmpsl
xchg
jbe
sub
shlb
mov
sbb
fwait
divl
add
or
arpl
ljmp
mov
adc
mov
aam
add
jmp
pop
pushf
adc
mov
popf
pop
aam
sarl
jns
xchg
es
rsqrtps
cli
sub
cmc
jg
push
aam
daa
outsl
mov
push
xchg
push
pop
loope
dec
jns
cmp
into
iret
adcl
arpl
mov
pop
push
adc
lea
not
xlat
cltd
dec
cmp
pminsw
sub
nop
ljmp
mov
cwtl
mov
in
sbb
scas
stos
insb
sub
xor
sbb
shlb
lods
fcompl
or
insl
sbb
arpl
cwtl
add
jnp
xchg
scas
dec
pusha
loopne
xchg
pop
xchg
mov
and
and
fstps
ss
xor
mov
pop
in
pop
pop
cmp
and
jmp
cmp
in
mov
mov
adc
adc
sub
insb
mov
fldl
loop
lds
mov
jne
mov
and
xor
in
inc
add
adc
push
adcb
pop
or
fistpll
call
in
mov
inc
test
mov
mov
lods
test
nop
and
loopne
inc
into
dec
or
pop
scas
pop
cli
push
dec
js
or
pop
lods
xor
cmp
pop
pushf
jl
imul
and
je
roll
jnp
mov
xor
push
mov
sbb
pushf
sti
aam
xor
pop
into
jl
pop
imul
xchg
mov
clc
mov
lods
lods
andl
inc
add
cmpsl
mov
aad
pop
mov
xchg
mov
stos
xor
cmpsb
iret
or
std
call
mov
loop
lods
leave
mov
or
cwtl
add
mov
sub
push
stc
inc
aad
sub
cmc
and
mov
mov
cli
inc
add
xchg
jle
sbb
xchg
push
icebp
push
aaa
and
pushf
lds
les
sub
pop
fs
iret
mov
stos
push
mov
fldlg2
lock
lea
iret
push
push
mov
stos
out
addr16
mov
stos
test
lea
in
cs
jl
mov
out
stos
flds
inc
xor
mov
jecxz
fiadds
fistpl
roll
sub
jb
shlb
push
bound
jmp
or
outsl
jge
or
testb
fwait
bound
inc
sbb
lock
popf
or
or
test
push
add
sarl
inc
pop
push
sbb
mov
dec
in
clc
addr16
jo
ss
xchg
jecxz
and
xor
addr16
in
dec
pushf
gs
jno
mov
xchg
out
and
cmp
dec
pop
and
pop
sub
imul
mov
loop
in
xchg
lods
mov
cli
mov
imul
add
pop
mov
scas
pop
dec
pushf
xor
loopne
lods
insb
cld
pop
daa
cmp
call
cmpsl
lahf
pop
popl
xchg
push
andb
cli
add
mov
hlt
cld
lret
out
mov
pop
cmp
daa
cmp
adc
orb
push
xchg
jecxz
lahf
sbb
jl
mov
mov
jmp
loopne
rcl
imul
out
xlat
cs
sbb
icebp
sub
dec
cld
xor
mov
inc
cmc
rcr
cmp
pop
jmp
lret
cmpsl
subl
and
dec
dec
es
ja
lret
mov
xchg
roll
js
pop
fstpl
inc
mov
lock
dec
pusha
rolb
push
std
adc
push
push
fmuls
js
out
add
jecxz
jnp
fdivl
push
push
mov
inc
outsl
pop
fmul
pop
xor
inc
popf
popl
and
imul
test
sbb
fiadds
adc
xchg
out
and
aad
xchg
daa
dec
call
jo
jns
adc
test
stos
push
sub
xchg
outsl
sbb
loopne
mov
sub
daa
xchg
pop
lahf
xlat
jecxz
pop
xor
fcomi
xchg
imul
mov
xor
inc
incl
add
cmp
jb
jmp
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
imul
xor
add
lea
mov
add
mov
mov
xor
add
jne
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
imul
xor
add
lea
mov
add
mov
mov
xor
add
jne
mov
mov
xor
lea
mov
incl
mov
xor
add
jne
jmp
mov
mov
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
imul
xor
add
lea
mov
add
mov
mov
xor
add
jne
jmp
mov
mov
xor
xor
sub
sub
xor
mov
mov
mov
xor
imul
add
lea
mov
add
mov
mov
xor
add
jne
mov
xor
mov
add
mov
pop
pop
pop
leave
ret
dec
and
adc
call
add
adc
cld
insb
adc
movsb
js
add
adc
dec
jae
add
sub
adc
cmp
adc
cwtl
cmovb
pushf
cmovb
mov
cmovb
test
inc
add
inc
add
dec
aam
dec
add
add
add
add
cmp
lar
rolb
add
adc
pop
sbb
add
sub
adc
mov
push
adc
ret
add
inc
add
inc
add
push
inc
add
push
inc
add
push
inc
add
push
inc
add
cmovb
pop
cmovb
pusha
cmovb
cmovb
push
cmovb
jo
inc
add
add
cmp
add
adc
fldt
adc
xchg
sub
add
aaa
adc
and
xor
add
push
inc
add
push
inc
add
push
inc
add
push
inc
add
push
inc
add
cmovb
add
inc
add
cmovb
adc
add
push
adc
xchg
xor
adc
stos
jo
add
inc
adc
pop
pop
adc
fildll
adc
push
push
inc
push
xorl
dec
mov
in
xor
add
add
inc
cmp
jb
outsb
je
popa
je
pop
dec
outsl
imul
insb
imul
dec
gs
add
add
add
add
mov
add
add
xor
add
add
add
add
add
add
add
sub
add
sub
add
xor
add
mov
adc
add
add
insl
bound
imul
inc
insb
outsl
jae
push
imul
popa
je
outsl
outsb
inc
insb
outsl
jae
push
.byte
