push
mov
sub
mov
movzbl
mov
mov
movl
movl
cmp
movl
jne
or
mov
adc
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
add
mov
xor
sub
mov
movl
cmpl
je
cmpl
jne
push
pushl
push
pushl
call
cmpl
jne
xor
xor
dec
mov
mov
dec
mov
jmp
andl
mov
inc
mov
cmpl
jne
push
pushl
call
cmpl
jne
xor
add
inc
mov
cmpl
jb
movl
cmpl
je
cmpl
jne
push
pushl
push
push
push
push
pushl
pushl
call
xor
or
dec
mov
jmp
add
push
xor
or
adc
mov
mov
add
movl
cmpl
je
cmpl
jne
pushl
push
push
call
xor
or
dec
mov
jmp
movzwl
not
and
mov
movl
cmpl
je
cmpl
jne
push
push
pushl
pushl
push
call
mov
dec
mov
jmp
mov
mov
mov
push
mov
movzwl
mov
mov
mov
movl
movl
mov
jmp
sbbb
cltd
js
mov
jge
test
jo
jo
jo
jo
rcl
aad
ror
rol
pop
push
add
push
add
xor
ret
adc
mov
add
mov
sbb
lods
sarb
or
sahf
jp
inc
lods
push
sub
mov
stos
js
roll
jmp
mov
dec
fcomps
pop
test
sub
mov
pusha
nop
mov
and
jmp
out
repnz
xchg
xor
jbe
xlat
and
add
adc
xor
or
fldl
xor
pop
push
or
pop
fstps
jno
mov
ja
sbb
xor
int
rolb
pusha
and
mov
push
jge
inc
jl
mov
push
bound
mulb
sbb
pop
xor
test
mov
cld
sti
mov
add
aad
inc
xchg
jp
dec
push
add
test
jno
push
fldt
and
dec
out
bound
sbb
xor
frstor
scas
mov
inc
mov
out
imul
fs
sbb
dec
fimull
inc
inc
clc
jb
in
leave
or
rol
add
mov
repnz
cmpsl
push
aad
pop
sbb
fisubl
adc
adcl
mov
lods
xchg
lahf
inc
push
push
cltd
aam
cmp
lods
add
jno
pusha
adc
insl
lods
inc
cmp
aam
mov
adc
lods
fiaddl
int
out
cmp
lcall
iret
or
sahf
adc
mov
test
out
daa
popf
mov
in
popa
sbb
inc
shll
pop
push
mov
mov
pushf
or
subl
arpl
inc
and
mov
cmp
add
pop
inc
repz
shl
mov
jl
xchg
cmpl
jnp
xchg
lret
fldcw
dec
sbb
push
lret
xchg
push
jecxz
jge
xor
push
mov
add
mov
jmp
clc
icebp
mov
icebp
ficompl
push
inc
jo
jo
jo
jo
call
aad
test
stc
stos
pushf
ja
inc
pop
cmp
jnp
push
xchg
mov
ficoml
es
fildl
idivl
daa
cmp
dec
xor
xchg
shll
and
push
jae
inc
pop
insb
in
xor
mov
ret
adc
mov
roll
and
jg
bound
popa
jno
cmc
push
mov
or
mov
lods
clc
cltd
dec
out
mov
lds
ret
and
jne
lea
adc
sbb
cmp
push
and
movsl
int3
scas
test
subb
iret
inc
push
mov
jg
mov
movsb
cld
pusha
popa
cltd
jnp
das
movsl
jb
push
mov
fsub
lds
pop
enter
insb
leave
in
ret
es
xor
sub
fsubs
ja
or
cwtl
stc
cmp
iret
rclb
sbb
dec
movsb
je
mov
adc
xchg
dec
outsl
jns
icebp
pop
mov
aad
sbb
adc
lahf
pop
add
mov
sub
test
mov
aas
fdivl
push
mov
in
fwait
shll
mov
js
adc
cmp
inc
add
xchg
jns
repnz
jecxz
dec
stos
jp
loop
xor
ljmp
cmp
xchg
rcll
nop
lahf
jmp
add
jmp
fisubrs
pop
out
sub
inc
and
mov
in
pop
test
nop
push
push
fwait
mov
mov
imul
daa
add
gs
adc
or
enter
test
push
sub
cmp
pop
mov
jmp
je
loopne
mov
inc
adc
dec
push
popa
test
sbb
inc
sbb
loop
dec
outsl
inc
int
dec
jg
pop
push
or
mov
inc
int3
mov
mov
lea
jmp
dec
iret
lods
dec
lods
imul
dec
data16
jl
jo
jle
jo
jns
mov
cmp
push
movsl
imul
out
cltd
mov
xor
rcr
lret
idivb
xchg
jae
lods
jmp
outsl
dec
data16
mov
mov
push
pop
adc
mov
sbb
rcll
jecxz
mov
jmp
data16
out
xchg
and
xor
mov
pop
jl
fistps
adc
subb
bound
xchg
mov
pop
xor
pmovmskb
pop
dec
pop
inc
dec
test
lds
sbb
pop
sub
or
lock
jge
mov
sahf
stc
lahf
mov
sub
inc
out
xchg
push
test
cltd
mov
sbb
xchg
lea
jno
cwtl
jns
cwtl
rolb
and
xchg
dec
stc
sub
out
pushf
pop
bound
mov
stos
pop
insb
adc
jne
loopne
negb
sub
pop
mov
mov
pop
in
or
dec
mov
fs
loope
push
mov
adcl
xlat
add
mov
les
stos
shl
fsubr
inc
hlt
cmpsb
sbb
in
xchg
hlt
xor
je
rcrb
cmc
lods
xor
ds
cmovl
out
gs
cmpb
aas
daa
fdiv
mov
adc
jae
stc
out
or
pop
jae
mov
aas
or
sbb
fs
shll
adcb
mov
jns
xorl
loope
lahf
pop
or
and
or
sub
fisubl
inc
mov
cmp
xlat
sti
loop
jae
dec
jb
repz
pand
fisubs
cmpsb
cli
xchg
aaa
in
sbb
jecxz
cmpsb
mov
push
mov
inc
in
inc
in
add
inc
in
mov
xor
xor
xor
add
add
div
mov
cmp
je
movl
lea
mov
jmp
int3
sub
push
mov
das
jecxz
jp
jo
jle
jo
xor
mov
outsb
dec
dec
cwtl
dec
fst
cmpsb
ret
fcmovb
inc
sbb
out
shrb
dec
mov
mov
sub
push
cmp
and
iret
fwait
stc
bound
add
lods
mov
arpl
jg
mov
dec
adc
call
mov
and
jnp
and
sbb
adc
test
pop
ficompl
je
and
push
jne
adc
lock
sub
sub
pop
lahf
xor
xchg
adc
fiadds
cmp
cmp
lea
and
loopne
lods
mov
jmp
add
mov
inc
ss
cmp
dec
scas
sbb
xlat
mov
pop
xor
int3
lret
nop
mov
pop
mov
ja
add
jnp
shr
push
ret
popf
sub
test
push
jno
xor
lahf
lcall
jne
pop
xor
in
aad
frstor
inc
mov
and
in
je
sbb
test
xlat
sbb
mov
out
and
fsubs
loop
push
or
sbb
push
cmpb
inc
bound
stos
pop
mov
stc
ljmp
or
lcall
jge
je
test
ret
xor
mov
adc
mov
mov
outsb
pop
out
jmp
shr
push
jae
fstl
dec
testb
jae
rolb
xchg
cmpsl
inc
test
daa
sbb
mov
adc
es
jo
jb
negb
scas
push
fisubs
cmp
pop
loope
xor
outsb
push
aas
push
out
mov
jb
stos
cmp
lahf
test
dec
sbb
test
push
rcrl
cwtd
pop
push
std
aam
sub
and
mov
mov
imul
mov
mov
cmp
je
mov
orl
jmp
mov
jmp
popa
ja
add
xorl
adc
mov
dec
mov
jo
jle
jo
adcb
jo
fnstenv
dec
ja
sarb
arpl
imul
xor
dec
inc
in
inc
and
cmpsb
repz
adc
aas
push
dec
in
arpl
pusha
out
push
pop
lret
mov
cwtl
int
dec
sbb
inc
push
and
lahf
add
hlt
or
out
nop
and
and
cmp
xorl
cmp
pop
dec
and
fisttps
pop
ja
inc
les
lahf
std
jbe
push
xor
mov
jg
rclb
imul
aaa
push
pusha
sub
or
mov
lods
xor
push
jb
pop
stos
pop
mov
fldl
lods
movsl
sub
enter
dec
pop
pop
jb
mov
hlt
fbstp
js
dec
fs
sub
stos
mov
js
push
imul
jno
mov
in
and
addr16
jno
add
adcb
adc
and
pop
stos
mov
pushf
pop
pusha
iret
jp
cmp
mov
and
cmp
push
nop
and
adc
sar
add
xlat
sbb
cmp
hlt
in
xchg
pop
jp
repz
notb
lds
insl
cs
roll
pmullw
stos
fdivl
mov
or
and
js
scas
test
scas
inc
loop
push
adc
shll
push
mov
xchg
stc
add
xor
inc
loope
testb
xchg
test
push
cmpsb
mov
ljmp
ret
andb
dec
shr
cmp
push
mov
sbb
dec
das
popf
pusha
repnz
in
arpl
cmp
lcall
adcl
ds
cwtl
add
mov
xor
jo
fisubrl
repz
push
jecxz
or
adc
push
add
cmp
je
mov
andl
jmp
mov
mov
or
cmp
je
mov
xorl
jmp
mov
mov
xor
jmp
cld
test
jb
stos
inc
inc
cmp
repz
jo
jo
jo
rorl
mov
cmpsb
int3
outsl
jg
or
call
pushf
sbb
cmp
iret
push
cwtl
jge
rolb
cltd
dec
aas
shll
divl
out
mov
sti
in
js
inc
js
hlt
add
mov
cwtl
mov
jp
push
sub
xchg
add
into
call
cmp
pop
lods
mov
dec
data16
sub
cmp
pop
fucomp
push
pop
test
les
pop
jo
mov
cltd
sbb
xchg
mov
cmp
lahf
sbb
mov
loope
push
fimuls
and
testb
out
lcall
push
mov
ret
pop
mov
testb
dec
mov
pcmpgtw
gs
pop
xor
adc
dec
movsl
cmp
addb
jecxz
jecxz
sbb
loop
add
out
mov
mov
inc
cmpsb
fisttpl
dec
lahf
ret
fidivs
mov
movsb
in
lahf
scas
arpl
out
inc
std
mov
cmp
scas
in
pusha
subl
insl
xchg
nop
or
lret
pop
mov
test
add
mov
sub
sbb
fisttpl
jmp
scas
lods
mov
sbb
test
add
test
out
mov
fists
xchg
jns
sbb
hlt
stos
cmp
push
mov
add
dec
mov
daa
ret
cmpsb
popa
or
mov
loope
jmp
cmpl
pop
insb
sahf
and
or
in
test
sub
adc
je,pn
inc
lds
push
arpl
daa
push
adc
push
push
adc
fdivrp
add
jp
and
and
insb
test
inc
mov
mov
lea
fmuls
jno
les
fcomi
enter
scas
popa
and
inc
mov
mov
add
cmp
jmp
ret
gs
cmpsl
insb
sbb
divb
jo
jo
jo
pop
js
cmp
ror
jno
loop
and
fistpl
mov
add
inc
std
mov
mov
std
lcall
and
adc
icebp
sti
shlb
arpl
stc
sub
mov
or
xchg
cmp
xor
mov
ficompl
adc
xchg
sbb
adc
pop
add
pushf
and
sbb
mov
push
sub
ljmp
add
push
push
jmp
mov
sahf
push
lods
sarl
std
shll
bnd
push
and
cmpsb
push
fstpt
es
jp
jmp
stos
ss
test
les
dec
movsb
fstps
or
out
mov
sbb
pop
rolb
or
xor
fnstcw
insl
pop
mov
test
xor
ds
hlt
call
push
popf
jmp
enter
xor
aam
frstor
test
sub
dec
sub
jmp
and
mov
and
and
mov
incl
out
inc
jmp
push
fwait
xchg
shlb
decb
mov
lods
je
mov
push
push
mov
xchg
test
or
int3
mov
sbb
imul
repz
ss
xchg
adc
xchg
push
push
lcall
dec
aad
mov
iret
fimull
cmp
cmp
subl
or
mov
movsl
mov
imull
cwtl
repz
jo
sahf
in
popa
cld
pop
imul
sub
sbb
std
out
fistpl
inc
jns
rorl
icebp
dec
push
inc
jmp
addl
or
adc
adc
mov
lahf
fstl
push
jg
das
std
mov
add
mov
xor
add
mov
mov
jmp
jp
sbb
cltd
ja
jno
sbb
sub
add
jo
jo
xor
cmp
fisttpl
or
scas
into
orb
ja
stc
pop
inc
aaa
fisubl
popa
iret
or
mov
push
outsb
popf
xorl
loopne
push
cmp
xchg
je
xchg
punpckldq
inc
sub
leave
scas
loopne
mov
sbbl
pop
mov
ret
outsl
mov
lea
inc
test
push
jo
jae
jae
lea
xor
pop
xchg
jmp
mov
js
xchg
pushf
xchg
outsl
adc
push
fimull
andb
das
sahf
push
fs
jp
pop
clc
sbb
into
clc
cltd
cmpsb
mov
adc
aas
xchg
ret
cwtl
inc
jle
pop
inc
push
jns
xchg
orl
lds
jmp
icebp
mov
les
outsb
divl
popa
mov
jns
push
mov
push
push
leave
push
pushf
push
lahf
clc
fidivrl
scas
jo
or
sub
cmp
std
xor
pushl
mov
jp
imul
jnp
mov
les
sbb
mov
dec
cmc
test
dec
jo
clc
lock
shll
cmpsb
movsl
outsb
out
popl
push
cmp
ljmp
shll
mov
jp
push
cmpsl
inc
adc
or
cmc
push
mov
dec
stos
xchg
or
pop
xchg
pop
in
pop
xor
das
lret
pop
add
mov
cwtl
and
insl
push
shlb
fsubr
jnp
mov
mov
ss
out
mov
push
inc
push
dec
pop
test
xlat
or
mov
pop
pop
je
dec
fwait
lcall
mov
in
push
pop
mov
xchg
testb
jecxz
lahf
xchg
xchg
scas
mov
mov
cltd
clc
sbb
sub
add
popf
push
in
pop
cli
ds
push
aam
and
ficoms
inc
or
mov
mov
xor
mov
add
movzwl
xor
lea
add
mov
mov
mov
xor
add
imul
sub
mov
jmp
jmp
and
jae
xor
and
jo
jo
icebp
out
push
sub
sub
mov
or
ss
mov
jl
pop
cli
stos
es
sub
decb
rcll
sbb
out
pop
sbb
mov
sbb
daa
adc
and
nop
jmp
xchg
icebp
or
je
or
aaa
dec
xchg
and
jecxz
mov
inc
cwtl
ja
jp
outsb
xchg
mov
test
dec
das
in
push
add
aam
mov
call
cltd
jno
sub
mov
out
pop
arpl
stos
ret
in
rol
lds
test
or
or
and
fwait
or
dec
push
in
lds
push
test
jno
mov
inc
inc
cmp
cmpsb
sbb
inc
cmp
orl
stos
push
mov
call
xchg
and
push
in
or
out
scas
arpl
psllw
loop
xor
das
cmpsb
nop
dec
lahf
cmpsl
dec
sub
iret
js
sbb
movsb
leavew
imul
imul
mov
stos
sub
fldcw
xchg
cli
mov
sbb
pushf
jmp
rcll
jl
std
sub
cmp
add
dec
and
movsl
es
dec
out
mov
addr16
in
arpl
test
push
mov
bound
sbb
inc
out
mov
or
cld
ret
pop
dec
ds
push
push
call
xor
or
sbb
pushw
pop
sbb
pop
nop
shrl
pop
nop
pushf
mov
cld
sub
dec
mov
enter
js
sub
cmp
rsqrtps
jo
mov
xchg
xchg
xlat
movsb
stos
lods
push
test
pusha
sub
add
sbb
sbb
mov
xor
cmp
je
mov
addl
jmp
mov
cmpl
jne
mov
xor
add
test
jne
xorl
jmp
pop
pop
jmp
cs
add
popa
push
in
jno
imul
jo
jo
jo
jo
enter
mov
movsl
int3
iret
cmpsl
aaa
push
add
imul
out
sub
xchg
xorl
and
xchg
stos
mov
test
enter
xchg
dec
pop
mov
loop
ds
inc
cmc
push
xor
lock
addb
arpl
sahf
imul
sbb
int
sub
xchg
daa
mov
xor
or
call
popf
xchg
stos
cmpsl
sahf
pop
sub
lds
xchg
outsl
push
insl
subl
cmp
incl
or
sbb
push
call
repz
adc
mov
icebp
adc
sbb
add
jb
adc
cli
aaa
fnstenv
fnsave
das
pop
mov
inc
out
xor
inc
ss
aad
xchg
mov
xchg
inc
rcrl
xchg
xchg
adc
pop
inc
cmpsl
xchg
bound
cwtd
loope
pop
sbb
pop
push
mov
loop
cld
icebp
dec
push
push
je
fisubrs
stc
stos
lea
adc
push
dec
xchg
mov
jl
insl
ret
jp
aaa
push
or
lret
dec
sbb
push
cmp
push
cltd
mov
jge
repnz
pop
inc
imul
fdivp
jmp
enter
sbb
in
subl
add
ljmp
jge
mov
arpl
gs
push
subl
sti
jg
lcall
xchg
adc
xchg
mov
sub
stc
sbb
xchg
fisubs
test
daa
js
sbb
ficompl
fnstenv
mov
les
jmp
push
pop
sub
in
jno
test
inc
int3
shl
out
ja
lahf
and
test
dec
mov
pop
mov
xchg
jecxz
adc
sub
cmp
testl
ja
inc
sbbb
rcrb
ret
push
mov
sub
leave
ret
push
mov
push
or
push
movzwl
sbb
mov
movl
cmpl
je
cmpl
jne
push
push
push
call
mov
dec
mov
jmp
movl
cmpl
je
cmpl
jne
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
movl
mov
mov
mov
xor
push
mov
or
xor
sbb
mov
sbbl
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
mov
add
cmp
je
mov
mov
xor
mov
sub
add
xor
jmp
imul
cmp
jae
jl
dec
mov
jo
jo
mov
push
mov
lods
mov
mov
add
fsubrs
fucom
or
xchg
packuswb
jecxz
pop
cli
sub
repnz
outsl
mov
rcl
in
shll
xchg
out
mov
mov
inc
lret
or
in
mov
test
or
push
orl
imul
pop
test
cs
cmpb
cmp
push
xchg
xor
jge
cmpl
dec
pop
movsb
icebp
fneni(8087
iret
call
arpl
sahf
sbb
or
bound
or
jae
aaa
jp
adc
lcall
rcll
aam
test
dec
fisubrs
xchg
pop
out
in
xlat
fcompl
popa
aad
mov
jbe
hlt
shll
imul
shll
xchg
cs
lahf
adc
inc
enter
lret
mov
out
shll
push
iret
inc
push
jns
inc
jp
bound
ss
push
add
fdivl
stos
pop
mov
xchg
scas
sub
mov
xchg
push
adc
gs
mov
pop
mov
test
enter
xchg
out
add
pop
adc
push
push
inc
ficomps
jae
imul
and
sarl
ljmp
scas
push
mov
push
ret
loope
lds
dec
and
cwtl
sbb
sahf
ficoml
cmp
js
fisubl
cmpsl
enter
jp
push
add
int3
sub
adc
dec
add
xchg
mov
sub
test
xchg
sub
out
sbb
sub
cld
int3
jns
adc
sub
inc
push
push
push
xor
aad
int
cmp
inc
sbb
int
push
mov
mov
jo
inc
sahf
mov
in
std
inc
jle
and
mov
stos
xchg
push
cmpsl
movsl
pop
mov
pop
fdivp
cld
xor
cmp
test
test
adc
xor
out
lret
mov
js
mov
sbb
ret
pop
insb
mull
sbb
cmpsl
arpl
icebp
fstl
orl
outsl
addr16
mov
mov
jbe
test
and
jle
and
or
pop
mov
jg
cmc
jae
or
or
pop
mov
cli
cmpsb
scas
mov
frstor
mov
mov
enter
jb
mov
and
es
outsl
and
inc
jne
adc
pop
test
int
jmp
int
pop
xor
ja
push
jmp
jmp
mov
ja
push
aas
xchg
out
jnp
sub
jle
jo
mov
pushf
push
ja
sub
jecxz
mov
movb
inc
in
and
push
xor
jne
js
and
push
gs
cwtl
mov
adc
out
adc
bound
mov
cmp
imull
cld
and
mov
cwtl
stos
iret
cld
jae
xor
psubb
jmp
rcrb
sub
push
mov
mov
mov
in
sbb
cmpsl
gs
and
sub
mov
rcrl
mov
mov
test
popf
lret
adc
bound
xor
push
ficompl
insl
push
es
inc
dec
les
xor
scas
jle
inc
dec
push
xor
flds
mov
mov
dec
idivl
jmp
cwtl
scas
imul
pop
sbb
cmp
dec
pop
jne
mov
mov
cld
ss
shlb
lods
inc
jmp
jo
or
mov
and
int3
pop
imul
sub
pop
repnz
ja
inc
int
lcall
fs
addr16
inc
loopne
mov
push
cmp
xchg
lret
out
mov
fsubl
dec
data16
outsb
lods
mov
pop
fcompl
pop
push
stc
out
cs
rcr
insl
subb
cmpsb
fisttpll
and
inc
mov
adc
pop
sbb
ror
std
push
sbb
sbb
jecxz
test
clc
jg
push
movsb
xor
inc
mov
or
ss
dec
xchg
pop
mov
jns
or
pop
pop
sarl
mov
iret
xchg
push
jno
hlt
test
push
dec
cs
add
std
mov
xchg
stos
mov
push
pop
xor
fs
aas
adc
rorb
push
dec
hlt
xor
sub
pop
dec
or
jecxz
pop
xchg
mov
bound
inc
popf
push
ljmp
add
icebp
cmp
cmp
mov
push
mov
nop
push
add
add
add
mov
dec
mov
lret
mov
jb
jne
mov
sub
decl
pop
stos
cltd
and
and
scas
fucomi
fldt
ficomps
std
add
es
xlat
xchg
and
add
out
sbb
sti
repz
dec
gs
test
aam
mov
in
add
lret
lock
lret
outsb
or
mov
stos
jge
jb
call
cmpsl
movhps
mov
and
pop
xchg
fidivrs
mov
mov
xor
add
jmp
fistl
loope
lds
add
rolb
cld
pop
jo
mov
or
mov
les
xchg
repnz
jbe
push
data16
xor
cmpsl
jae
push
dec
iret
sbb
dec
sub
mov
stc
ds
lcall
je
dec
mov
and
out
mov
pushf
xor
jnp
in
in
loope
in
add
push
pop
and
fsubp
sbb
orl
sub
add
rclb
jle
idivb
mov
mov
lods
xor
jge
test
cmp
stos
aam
stc
cmp
sbb
xchg
inc
cmp
xchg
call
push
test
jno
mov
dec
inc
pop
and
ss
jb
rcrl
mov
int
pop
rcr
mov
inc
sbb
sbb
int3
jb
xchg
pop
and
ljmp
js,pn
mov
rdtsc
add
dec
sub
mov
divl
mov
imul
sub
and
fldenv
sub
cmp
mov
leave
jns
ss
popa
mov
mov
xchg
ljmp
inc
popa
dec
rcrl
dec
pop
add
imul
mov
rcl
wrmsr
jae
mov
mov
mov
mov
jbe
push
and
out
notl
mov
pop
xor
lods
dec
mov
je
call
xchg
popa
into
sar
or
mov
cld
in
mov
sub
cli
sahf
jecxz
inc
or
scas
mov
add
or
test
out
gs
repnz
arpl
push
jle
cmp
or
cmp
mull
xchg
mov
push
pop
lret
rcr
mov
inc
or
sub
out
add
mov
add
je
imul
test
push
stos
cmp
add
push
jg
dec
scas
lods
pop
roll
lea
fbld
jl
cmp
mov
xor
jno
ficomps
or
inc
jmp
adc
repz
inc
cmpsl
sub
fcomi
or
and
sbb
push
or
dec
sbb
out
and
mov
repz
xchg
inc
mov
fs
adc
mov
inc
pop
divl
in
adc
out
dec
or
mov
pop
cmc
dec
sub
int3
mov
mov
test
insl
inc
inc
pop
and
inc
mov
vpmaddwd
add
fnstsw
icebp
pop
inc
rolb
js
mulb
mov
imul
mov
xor
add
jmp
jecxz
fcoms
out
icebp
icebp
pop
xchg
aaa
aas
xor
sti
push
cmp
jo
jle
jo
xlat
push
aad
movsb
mov
in
loop
stos
stos
decl
xchg
dec
sbb
lret
or
iret
xchg
ljmp
fwait
es
int3
add
andl
aam
inc
fwait
lcall
cmp
mov
data16
add
rcrb
mov
fs
xchg
xchg
loopne
mov
ror
xchg
pop
push
arpl
repz
xchg
dec
subb
jo
cmp
lock
or
int
loope
inc
adc
lods
shrl
xchg
mov
data16
dec
push
nop
mov
icebp
lods
out
cmp
hlt
fstpt
jg
mov
jne
loop
pop
enter
dec
out
push
xchg
ret
xchg
popf
shll
lds
stos
data16
lods
pop
leave
addr16
xchg
or
cli
test
pop
pop
add
lds
scas
in
pop
xchg
sbbb
inc
popf
popa
dec
mov
ljmp
sbb
fadds
jg
insl
xchg
mov
add
nop
and
mov
out
xchg
cmp
cmp
ret
jmp
jge
add
mov
loopne
aam
xlat
movsl
sub
ret
mov
xor
pop
mov
call
and
cmp
into
pusha
and
test
adc
out
cmc
mov
xchg
cmp
mov
into
adc
scas
in
cltd
adc
je
jb
bound
out
ds
cmc
cmp
add
add
xchg
ss
mov
push
cmp
or
ljmp
adc
imul
xchg
nop
js
jo
ret
and
dec
pop
mov
or
mov
addr16
icebp
pusha
sub
and
mov
sub
mov
add
jmp
push
add
daa
testl
nop
xor
push
or
out
pop
jno
mov
xchg
stos
test
sahf
cmp
or
ss
mov
adc
or
out
es
mov
imul
or
data16
inc
pop
or
mov
inc
pop
push
stos
sub
dec
inc
lea
popl
cmp
loopne
in
dec
pop
pop
fimuls
push
add
push
adc
add
aad
mov
mov
inc
fstpl
mov
jnp
cli
pop
cwtl
icebp
sub
pushf
jb
add
cld
xor
lea
mov
xor
mov
sub
add
cmp
jbe
pop
mov
pop
pop
leave
ret
push
mov
sub
movl
cmpl
je
cmpl
jne
push
push
push
call
cmpl
jne
xor
or
dec
mov
mov
dec
mov
jmp
adc
mov
addl
mov
adcl
xor
adc
mov
andl
add
movl
movzwl
mov
orl
movb
not
lea
mov
or
jmp
out
out
jno
in
or
and
mov
jo
jge
jo
js
sbb
sbb
xchg
or
push
or
adc
xor
pusha
sub
cmp
or
int
jle
rolb
mov
or
cli
in
ss
test
cmp
int
xor
or
rcll
or
call
cltd
sbb
jbe
iret
pop
push
xchg
out
or
dec
imul
jp
out
fwait
sub
jmp
loopne
sbb
mov
dec
jns
cmc
sub
fsubs
lahf
inc
out
aas
sub
ds
out
inc
cmp
addr16
add
xchg
sbb
lret
test
movsb
or
cmpsb
mov
sub
fstpt
hlt
inc
xor
lahf
movsb
ds
out
arpl
jno
xchg
dec
xchg
stos
pop
xchg
mov
insb
shrl
lcall
mov
jne
popa
outsb
pop
pop
shl
add
push
or
pusha
fsubs
push
pop
idivb
adc
dec
jg
in
sub
clc
xchg
movsb
cwtl
out
andl
pop
scas
lock
mov
movl
xor
das
sbb
stos
cs
sti
mov
or
dec
inc
outsl
add
shl
xlat
xor
iret
repnz
hlt
das
push
adc
add
lea
adc
pop
repz
add
dec
jmp
jmp
mov
jle
jo
mov
pop
aam
daa
add
sbb
xor
icebp
inc
ret
sahf
pop
test
push
pop
pop
and
icebp
xchg
jo,pn
fcom
shl
dec
sti
sub
jmp
mov
jo
test
fsub
dec
add
jae
in
loop
fnstsw
fs
shll
push
pop
sub
iret
mov
jb
icebp
sbb
inc
push
cmp
int3
mov
mov
inc
sub
repz
jl
or
mov
lock
arpl
movq
adcb
pop
push
sahf
lock
repz
cmp
sarl
xlat
rclb
push
sbb
data16
mov
mov
loopne
pop
sbb
mov
mov
shlb
pop
fucomi
sti
movsb
aam
jle
xchg
pop
bound
dec
cld
push
sbb
pop
sbb
add
add
ficoml
jno
ret
push
pop
push
mov
cmp
fs
cmc
cmpl
scas
xor
sub
xor
mov
es
sbb
jo
adc
push
fcmovbe
mov
pop
fstps
cmp
sti
hlt
sti
pop
std
pop
dec
jle
shll
and
rcrb
movsb
out
xchg
dec
pusha
mov
stc
pop
dec
arpl
jno
loop
add
mov
fs
cmc
cwtl
mov
nop
pop
ljmp
and
xchg
imul
inc
fsubs
cmc
and
lods
aas
ret
outsb
faddl
sbb
inc
dec
pop
sub
insl
push
aas
xchg
mov
scas
push
mov
insb
jmp
sub
sub
xlat
mov
movzwl
adc
mov
subl
xor
sub
andl
mov
negl
movl
jmp
fists
cltd
mov
addr16
push
and
arpl
push
jo
cmp
decb
jo
repz
inc
aam
dec
js
inc
pop
xorb
inc
fisttpll
lock
aas
or
jns
add
repz
gs
in
js
mov
xchg
lods
lods
jno
andb
adcl
fmul
inc
in
dec
ds
xor
push
les
dec
mov
ljmp
dec
jle
xchg
jnp
ror
lds
or
loopne
mov
int3
dec
mov
mov
push
hlt
movsb
call
pop
and
push
icebp
popf
push
test
sbb
aas
dec
xchg
aad
fcompl
add
repnz
mov
in
stos
jbe
cmp
call
je
mov
or
jge
inc
fidivrl
sarl
fdivl
or
pop
push
mov
xchg
add
fwait
xor
jle
add
jmp
push
sbb
add
aaa
add
sbb
icebp
rcrb
imul
lods
mov
push
aaa
mov
je
jl,pn
mov
gs
scas
pushf
imul
test
cmp
adc
dec
pop
push
cwtl
mov
sub
loop
pop
call
mov
and
scas
mov
popf
push
jp
in
pop
pop
cli
jno
test
jp
ret
or
ljmp
in
pop
nop
enter
mov
ljmp
mov
pushf
outsl
dec
dec
fnsave
push
cli
xor
cmpb
xor
frstpm(287
sub
cmpl
xchg
pop
mov
subl
jae
dec
mov
mov
aas
dec
movsl
sub
xchg
mov
mov
inc
out
addl
cltd
mov
xchg
js
or
mov
inc
and
test
aaa
test
mov
out
icebp
packsswb
frstor
mov
mov
or
mov
out
pusha
or
mov
outsb
leave
adc
aad
push
jl
and
popf
add
ds
pop
movsb
sbb
adc
ss
mov
add
sbb
icebp
push
cld
loop
ret
addr16
ret
andl
dec
pop
fisttpll
adc
sbbl
sub
out
ret
mov
rolb
sub
add
xor
jecxz
sti
fnstcw
xor
lock
fildl
daa
ss
pop
rorl
out
gs
xor
dec
mov
mov
imul
inc
insl
jmp
int
xchg
sahf
pop
mov
outsl
sbb
inc
sub
inc
cmp
mov
movsb
sub
sub
sub
test
pop
sbb
mov
pushf
rclb
addr16
ss
lock
jo
sub
push
clc
or
test
outsb
jne
mov
inc
aad
pusha
or
cld
arpl
inc
lock
clc
mov
push
xor
mov
adc
mov
add
movl
jmp
mov
movl
mov
movl
jmp
jge
lret
in
icebp
ss
mov
cmp
or
dec
dec
or
mov
cmp
and
mov
sub
mov
push
adc
xlat
in
ja
mov
fcompl
inc
int3
xlat
jnp
lret
jbe
xor
mov
orb
lds
xor
adc
xor
sbb
fnstsw
mov
rorb
dec
subb
xlat
pop
mov
rcrb
aaa
test
mov
mov
and
lret
stos
mov
inc
push
xlat
stos
ret
shl
movsb
add
lea
roll
inc
in
outsb
add
addr16
cli
sahf
jge
push
out
jl
push
cld
mov
push
xor
push
pop
xchg
test
xchg
mov
in
notb
xor
in
shrl
pop
in
jecxz
shrl
pushf
mov
cld
ljmp
pop
iret
cmp
repz
loopne
mov
les
inc
sarl
adc
inc
jne
ret
push
cmp
hlt
mov
cmpsl
ret
bound
mov
mov
push
loope
xor
aas
mov
pop
dec
pusha
pusha
mov
pop
sub
dec
push
sub
and
push
pop
ds
push
loope
ret
nop
mul
add
xor
imul
lcall
xchg
lock
or
sub
push
mov
xchg
scas
xchg
jl
test
pushf
gs
movhlps
adc
sbb
shlb
mov
aam
inc
scas
or
dec
fdivs
sub
pusha
xor
arpl
cltd
mov
push
mov
outsl
out
cmp
xchg
push
add
xchg
push
imul
xor
movsb
sub
repnz
or
inc
das
scas
dec
cmp
xchg
cmp
test
cld
mov
mov
jmp
wbinvd
dec
xchg
cmp
addb
bound
pop
add
bnd
fstl
mov
test
movsl
aaa
sbb
pop
or
mov
pop
mov
fmul
inc
dec
sub
pop
xchg
ljmp
jae
insl
inc
sbb
mov
add
stc
rorl
out
push
pop
loopne
xor
or
int3
mov
frstor
repnz
mov
test
jmp
movsb
mov
add
inc
add
adc
add
and
dec
insl
mov
aam
cld
cwtl
adc
jecxz
pusha
and
je
xor
pop
sub
inc
jo
movsb
gs
movsl
leave
and
rcll
rorb
ret
daa
imul
test
sbb
pushf
mov
rcll
sub
aas
mov
ret
lods
pop
test
lea
cwtl
scas
jle
es
sub
jnp
xor
xor
lods
xor
ret
and
mov
cmp
pusha
inc
add
dec
jb
sbb
sub
clc
inc
movl
jmp
leave
daa
rclb
repnz
jecxz
cmpsb
dec
pmaxub
push
jg
sbb
cmp
push
dec
add
sbb
ds
pop
pusha
sbb
sbbl
jb
mov
adc
out
jmp
mov
iret
mov
or
push
jnp
loop
addr16
add
mov
aam
hlt
jmp
sub
mov
nop
out
jb
rcll
jmp
ljmp
aaa
add
pusha
sub
fwait
out
jo
jb
fcoms
test
out
add
and
xchg
sbb
xor
std
lahf
mov
inc
sub
in
arpl
iret
js
ret
jbe
jge
stos
push
imul
cwtl
jmp
clc
test
cmpl
imul
rorl
lea
mov
xchg
test
cmp
cltd
sarl
out
hlt
movsl
loop
mov
cmp
and
adc
js
mov
lret
inc
lret
enter
mov
xor
pop
rolb
inc
push
xchg
shll
daa
out
push
mov
jge
adc
and
cwtl
repnz
or
add
push
mov
ret
push
or
mov
fdiv
out
int3
out
cmpsl
sub
cmpsl
mov
push
inc
fidivrs
xor
jne
into
jg
and
mov
xor
int3
inc
mov
cmp
xchg
sti
sbb
inc
js
inc
jg
fnstsw
mov
fistps
scas
push
adc
jmpw
pop
xchg
outsb
jno
xor
cmc
inc
cltd
repnz
es
cmp
mov
out
enter
repz
aam
sbb
cltd
cmp
pop
adc
popf
mov
insb
imul
push
ror
cmp
mov
ret
or
dec
lret
pop
repnz
xor
push
lock
nop
fninit
and
cmc
pop
fcmovnbe
clc
jg
cmp
shrl
stos
sbb
lret
loopne
movsl
cs
out
adc
mov
loopne
pop
lret
xor
fcoms
sbb
icebp
popa
push
imul
gs
lock
inc
sub
fidivrl
mov
aas
cs
xor
ffree
arpl
ret
imul
ret
sarl
popf
js
or
popf
mov
bound
icebp
mov
pop
scas
push
xor
dec
repz
inc
fwait
decb
out
incb
loop
aam
sub
mov
lahf
pop
mov
and
outsb
ret
add
fsub
mov
pop
aad
push
in
mov
out
mov
pop
fwait
mov
cmp
pop
mov
repz
jg
xlat
setle
icebp
jge
fisttpl
sahf
mov
imul
mov
jne
fwait
rclb
jmp
xor
sbb
mov
jae
fists
popa
jns
xor
jp
ret
mov
into
fs
mov
fs
out
sub
rcll
orb
mov
test
loope
jno
stos
jo
lahf
repnz
dec
subb
sti
cmpsb
out
dec
aam
inc
movsl
and
jmp
ljmp
inc
jmp
loop
stc
dec
stos
jne
mov
adc
jmp
adc
mov
jmp
push
jge
add
jb
inc
sbb
mov
js
or
jo
cmp
dec
lods
mov
sbb
in
adc
lods
popf
push
xchg
popf
loopne
cmp
dec
pusha
inc
inc
cmc
pop
dec
pop
gs
pop
fwait
xor
gs
inc
dec
pop
nop
cmp
das
in
test
push
adc
testl
adc
xchg
cmp
mov
fcoms
out
lahf
push
popf
dec
jno
test
push
sbb
and
inc
loopne
add
pop
and
out
pop
push
fwait
movsl
or
into
inc
dec
jl
adc
mov
inc
fistl
pop
push
aad
std
jo
mov
mov
lcall
pop
and
pop
mov
cmp
xor
push
das
rcrl
testb
mov
dec
or
std
cmp
movsl
xchg
call
dec
bound
lret
into
sbb
xchg
mov
pushf
loope
cmp
scas
pop
das
jl
mov
aas
inc
xchg
and
xchg
mov
aam
cmc
mov
fs
push
jge
test
mov
int3
test
das
das
hlt
xchg
cmp
push
mov
push
gs
adc
in
pop
pusha
cmp
iret
add
inc
mov
push
cmp
dec
pop
lds
loop
dec
mov
fs
mov
jecxz
lahf
xor
aas
cmp
sub
insb
mov
call
mov
inc
fs
mov
jge
xchg
es
and
fbstp
stc
pop
sahf
inc
movsb
push
pusha
fidivl
cmpsb
sub
add
pushf
or
loope
loope
inc
fdivr
sahf
rcll
push
movsl
mov
aas
cltd
cmp
out
loop
repz
lret
pop
mov
popf
mov
ds
iret
push
push
mov
cmpb
in
xchg
push
leave
int3
cli
mov
iret
jno
mov
popf
lret
outsb
inc
jg
cmp
dec
cltd
imul
add
xchg
lcall
cmpsb
fidivl
dec
jo
sub
xor
repnz
mov
sbb
clc
dec
fdivs
insl
pusha
popf
pop
mov
jae
jg
pop
inc
imul
cmpl
mov
int
mulb
sub
or
push
fnsave
mov
xchg
sub
add
in
stos
pop
filds
add
mov
loopne
fisubl
cmp
sti
ss
pop
jno
lret
call
push
ljmp
rcrl
jnp
xchg
mov
xor
jne
dec
data16
or
mov
pop
lret
and
aad
cmp
insl
daa
jecxz
mov
add
leave
in
sbb
inc
ret
xchg
mov
int3
jle
imul
lea
xlat
inc
mov
push
xchg
pushf
or
nop
fistpl
shlb
and
sub
add
lar
cwtl
rcr
rcll
sbb
icebp
sbb
icebp
test
in
imul
push
pusha
hlt
xchg
mov
hlt
xor
add
cmp
movl
je
add
push
adc
push
mov
mov
andl
xor
mov
add
addl
movzwl
andl
mov
sbbl
mov
addl
movzwl
sbbl
xor
addl
jmp
fdivl
dec
rsqrtps
icebp
inc
sub
pushf
sub
sbb
and
cmp
xor
sbb
cmp
mov
cli
arpl
add
les
jbe
and
mov
insl
shlb
and
es
mov
xchg
cmc
sub
int
jge
mov
adc
movsb
popa
insb
into
ja
int
and
les
into
inc
sub
adc
rcrl
adc
add
adc
fs
xlat
jbe
cmp
hlt
and
mul
push
rcrb
ljmp
cmpsl
adc
addr16
arpl
je
in
mov
inc
dec
clflush
sbb
shll
xchg
fwait
and
js
and
jno
jb
stos
mov
loopne
and
pop
mov
inc
push
repnz
and
insl
xor
xor
call
mov
in
hlt
or
cmovae
pushl
cli
push
scas
popa
push
stos
mov
adc
aam
data16
shlb
mov
mov
je
cmp
add
adc
push
in
aas
movsb
fdivr
pushf
inc
mov
daa
clc
push
push
jno
fiaddl
dec
jae
sub
cmp
test
inc
xlat
mov
in
jecxz
pop
fcmovnu
mov
push
and
or
bound
xchg
lret
clc
inc
out
sbb
int
cmp
nop
dec
sub
lea
scas
mov
mov
fimuls
repnz
push
orl
loop
and
dec
mov
ss
loopne
out
inc
jbe
dec
gs
lret
pop
push
adc
div
lock
pusha
int
cmc
call
sub
adc
jl
repnz
inc
das
imul
outsb
popl
pop
sar
push
push
sbb
ret
arpl
lock
xchg
lea
cmpsl
cmp
sahf
rorl
fldl
jae
push
stos
cmp
inc
cmc
sbb
gs
add
in
lahf
inc
adc
cld
inc
adc
pop
icebp
and
repnz
cmp
cmp
shlb
inc
dec
iret
pop
cli
adc
pop
and
push
cmp
push
xchg
dec
shlb
lret
js
mov
xchg
les
jg
loopne
je
ja
mov
outsl
mov
cmp
jge
dec
or
mov
loopne
xor
loope
or
gs
mov
in
lret
divb
cmp
inc
mov
lds
adc
dec
sub
push
push
test
add
mov
shl
jge
adc
divb
js
test
jno
cmp
int3
fsubs
out
mov
dec
out
dec
sbb
mov
mov
shrb
mov
pop
faddl
seta
adc
repnz
pop
repnz
stos
mov
loop
xchg
mov
jmp
in
mov
cmp
add
xchg
and
sub
faddl
mov
add
add
mov
movl
mov
jmp
or
daa
arpl
fisttpll
popf
mov
jo
jge
jo
push
jne
lahf
xchg
rcl
jmp
cmp
push
xchg
ret
inc
out
sti
loope
push
jmp
mov
lcall
pop
adc
mov
sub
pop
inc
fcoms
ds
push
stos
outsl
xlat
pushf
clc
inc
sahf
loopne
pushf
nop
dec
sbb
dec
dec
and
push
nop
pop
push
add
mov
pop
push
enter
popa
dec
inc
lods
aam
jo
inc
pushf
loope
sti
mov
or
repz
jb
pushl
adc
fmul
pop
fs
and
hlt
push
cmpsl
pop
lods
jl
in
jle
mov
jnp
and
jne
pushf
adc
adc
xchg
xor
add
pop
pusha
imul
insb
sti
inc
inc
inc
in
dec
xchg
push
and
addl
jbe
pop
test
mov
popf
bound
add
push
xchg
lcall
andb
movsl
sub
ds
bound
fstp
pushf
dec
xor
bound
and
pop
fistpll
sbb
inc
stos
sbb
outsb
clc
jle
shl
jae
dec
into
mov
or
lock
rolb
fidivs
push
jg
bound
int
xchg
scas
shrl
pop
and
xor
mov
sarl
popa
xor
mov
push
es
inc
xchg
push
push
je
cli
cmp
mov
mov
lret
lock
sbb
mov
std
fdivp
insl
xor
sub
cmp
add
cmp
xchg
mov
je
stos
push
xor
xor
adc
and
xchg
ret
jle
fcomps
sub
fwait
aaa
icebp
daa
addr16
lods
fcmovnbe
inc
mov
outsb
pop
xchg
rcr
movsb
int
inc
fs
adc
xchg
adc
push
in
out
sbb
lods
inc
mov
jle
inc
cmpsl
pop
pop
or
addr16
push
lea
test
jno
jl
pop
in
mov
vphaddubd
pop
sti
loopne
sbb
cmpsl
test
sarb
dec
xlat
mov
in
clc
bsr
inc
pop
and
shrb
in
adc
mov
lcall
aad
loope
pop
mov
add
fdivp
mov
movsl
test
shr
mov
ffreep
mov
push
clc
insl
dec
jg
pop
xchg
or
dec
xchg
inc
mov
test
stos
out
test
xlat
loop
push
xchg
aam
push
fsubr
js
xor
pop
cmp
cwtl
push
inc
and
fs
test
movsl
test
loopne
clc
add
pusha
aaa
push
call
jae
jb
icebp
xor
xchg
or
iret
das
outsb
adc
scas
mov
or
add
lds
mov
push
add
adc
sub
in
lea
les
cwtl
xor
out
xor
mov
leave
sbb
dec
push
stos
jns
test
ret
mov
inc
cmp
jne
pop
pop
mov
mov
xor
add
mov
mov
xor
add
mov
mov
mov
mov
cmp
je
mov
mov
mov
cmp
jne
mov
mov
movsbl
xor
add
cmp
je
movl
lea
mov
mov
addl
mov
mov
xor
lea
mov
incl
jmp
mov
xor
mov
add
mov
jmp
xchg
roll
icebp
lods
add
rcl
mov
push
sub
cmp
jecxz
insb
outsb
loopne
popf
mov
cltd
add
add
js
push
push
cmp
xchg
sbb
mov
inc
inc
ret
pop
incb
fbstp
es
pushf
dec
icebp
mov
iret
cmp
fldt
dec
hlt
xchg
mov
divb
cmpsb
call
mov
bound
lea
or
cs
js
cli
cltd
rep
xchg
xchg
or
iret
pop
or
mov
inc
outsb
test
sbb
fimull
jo
jb
fimuls
inc
test
mov
in
jbe
jnp
add
shrl
push
je
pop
into
push
jbe
fimuls
cmp
pusha
in
stos
and
pop
push
jg
cmp
sub
ljmp
or
jmp
cwtl
pop
xor
and
stos
or
das
lock
stc
push
push
inc
cmp
out
pop
pop
push
scas
test
fwait
test
cmp
mov
add
aaa
repz
call
in
mov
aas
jnp
mov
jge
pop
lea
and
scas
jno
mov
cld
mov
cmp
data16
scas
leave
shrl
loopne
mov
dec
std
filds
xchg
shl
push
test
scas
xor
push
scas
dec
jae
jnp
pop
cmpsb
inc
cs
adc
je
lcall
pop
sarl
add
xchg
push
push
leave
add
xor
stos
stc
pop
popa
add
dec
in
scas
cld
push
test
shl
push
adc
cmove
mov
and
push
bound
rcll
shrl
push
inc
sub
xchg
ffree
jnp
pop
inc
push
xor
mov
loopne
cmp
fmuls
fwait
sbb
jae
aas
xor
jo
xor
in
push
jmp
jo
dec
js
or
movsl
xchg
mov
sub
into
mov
inc
add
cmp
dec
jb
or
outsb
dec
rolb
xrelease
xorb
icebp
sub
inc
out
xor
adc
jmp
jns
xchg
or
loop
inc
add
stc
les
mov
into
leave
call
lcall
xchg
insl
jb
sbbb
mov
dec
add
mov
repz
mov
imul
imul
mov
sub
mov
lds
repnz
jmp
enter
loope
and
daa
xchg
adc
adc
outsb
dec
push
int
lods
lret
push
adc
lcall
dec
jmp
cmp
push
aaa
data16
jnp
fmull
dec
repnz
and
cld
jnp
and
out
sbb
call
in
sbb
mov
lods
shlb
popa
in
jo
subl
clc
sahf
add
mov
xchg
sbb
fisttpl
or
loopne
mov
push
or
cltd
lds
ret
push
mov
push
mov
mov
sbb
jmp
pop
scas
sbb
push
pop
mov
sub
pop
adc
aaa
jo
stos
jle
jo
popf
xchg
in
sbb
fiaddl
cmp
pop
in
out
mov
pop
jmp
ljmp
pop
and
icebp
xchg
je
pop
mov
pop
adc
mov
pop
jne
movsb
jmp
lods
cli
push
cltd
pop
sbb
pop
imul
jp
aas
mov
ja
mov
adc
pop
in
loope
sti
fwait
loop
xchg
rcll
jp
push
push
aas
ficompl
loop
fimull
lods
add
jno
int3
inc
stos
incl
in
jmp
jns
negb
daa
pop
mov
cwtl
add
xchg
fisubs
aas
pop
or
push
jmp
and
mov
sti
mov
xor
xchg
inc
mov
add
push
loop
jmp
mov
test
push
loop
add
fiaddl
jle,pn
sbb
inc
stc
fsubl
enter
mov
nop
rcrl
mov
mov
jp
xor
imul
jmp
iret
ret
cmc
into
je
sub
ja
inc
cmc
sti
int3
mov
push
or
cwtl
push
sub
cmpsb
fs
movsl
sbb
ftst
push
stc
fdivp
xchg
div
in
inc
push
dec
stos
in
mov
and
inc
hlt
sbb
sti
test
xchg
inc
push
std
pusha
stos
mov
inc
hlt
sub
add
or
mov
lsl
pop
pop
arpl
push
adc
inc
xorb
push
aam
iret
mov
mov
mov
popa
xchg
inc
mov
xchg
mov
and
sub
mov
js
das
fnstsw
fildll
fucomp
nop
xchg
mov
aam
add
bound
sub
lds
adc
cmpsb
inc
pop
lret
pusha
call
ds
or
rolb
and
imul
mov
mov
xchg
fiaddl
or
jnp
lret
add
jae
xor
outsl
sbb
lock
inc
ja
sub
imul
out
in
aaa
mov
jl
push
out
sbb
clc
lock
loopne
mov
mov
and
lea
mov
cltd
jge
js
push
call
jb
jae
pop
inc
add
mov
jb
fwait
xor
pop
ror
jnp
pop
scas
xchg
mov
ljmp
stos
std
push
flds
jle
sti
icebp
mov
das
movl
fs
push
movzwl
and
mov
jmp
ja
and
dec
xchg
push
pop
dec
xor
jo
inc
es
stc
aad
sti
jp
mov
xor
hlt
rolb
cs
lock
pop
mov
or
pop
movsl
popf
mov
fadd
push
pop
sahf
xlat
jge
enter
cmp
jle
inc
je
inc
xor
sub
outsl
scas
setg
jno
jnp
and
push
in
lret
xor
ja
pop
insl
mov
imul
sbb
pop
scas
xor
and
outsl
inc
fwait
je
mov
leave
cmp
xchg
lret
pop
sbb
fwait
adc
pop
pop
xor
adc
mov
movsl
mov
dec
fsubrl
xchg
hlt
jecxz
addb
out
mov
and
iret
cmp
arpl
sbb
push
mov
dec
jmp
cmp
fwait
je
dec
in
xchg
cs
pop
cmpsl
hlt
xchg
pop
fisttpl
addr16
hlt
pop
rclb
andb
inc
push
stos
and
mov
test
mov
mov
xlat
hlt
arpl
or
mov
pop
push
rorl
shll
cmp
dec
in
movsb
xor
or
push
enter
hlt
dec
pop
and
je
dec
stc
fildll
pop
lock
out
cmc
mov
xchg
dec
rcrl
push
push
ja
mov
pop
movsl
lods
push
mov
push
cltd
cmp
lds
lods
cmpsb
xchg
jge
xchg
jno
and
call
std
imul
xor
jg
inc
dec
loop
je
cs
sub
fwait
aas
mov
mov
push
aas
cltd
inc
sub
pop
shl
xchg
roll
clc
xor
shrb
sub
aam
mov
loope
push
add
dec
popa
mov
jae
xlat
push
lods
jmp
ret
jp
add
fidivs
push
out
mov
inc
icebp
push
lcall
popa
adc
dec
aam
data16
pop
pop
mov
arpl
into
sarb
jbe
adc
mov
imul
add
cmp
arpl
in
jnp
xchg
sbb
outsb
mov
inc
xor
ret
mov
mov
lret
call
cmc
xchg
adc
sub
xlat
fists
stos
mov
addr16
jg
jl
cmp
push
outsb
jmp
lret
xchg
popa
ss
out
or
ja
cmp
out
movsb
add
inc
push
subl
leave
and
cmpsl
pop
aam
pop
movl
and
movl
and
mov
sbb
push
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
pushl
call
jmp
movl
cmpl
je
cmpl
jne
pushl
push
pushl
pushl
push
call
xor
xor
dec
mov
jmp
mov
add
xor
and
xor
mov
add
add
imul
mov
cmp
jne
mov
mov
xor
xor
add
add
imul
jmp
mov
mov
mov
mov
mov
xor
xor
add
add
imul
mov
cmp
mov
je
jmp
xchg
imul
jmp
jo
jle
jo
pop
mov
notb
xor
rorl
xchg
mov
and
fsubs
add
add
cmp
rolb
xchg
ds
pusha
cmp
sub
jbe
insl
sbb
sub
sbb
movsl
leave
je
pop
out
sub
ljmp
pop
test
mov
int
lods
cmp
lcall
xchg
jge
or
in
scas
cmpsb
fidivl
xchg
mov
mov
pushl
daa
addl
sub
in
lcall
fildl
stos
mov
in
push
cmp
lret
mov
popa
xor
add
jle
inc
xchg
mov
inc
pop
sbb
lea
pop
push
es
mov
xchg
mov
ror
cmpsl
adcl
daa
and
jmp
dec
sub
test
fisubl
jnp
adc
lods
jecxz
adc
mov
out
fsubs
or
aam
daa
repnz
test
ds
inc
push
lock
adc
add
stc
les
movq
cmp
fwait
push
ret
mov
lds
push
push
popf
leave
adc
jae
ja
dec
rclb
in
dec
loopne
sbb
mov
jmp
fistps
les
pusha
lret
rcrl
dec
in
xchg
dec
jne
loop
popa
dec
xchg
push
jle
xor
xor
jp
sub
in
inc
stc
and
rolb
mov
test
int
in
and
pop
lods
subb
xchg
out
enter
mov
rcll
jmp
mov
pop
adc
mov
mov
mov
cmp
pop
movsl
rcr
sbb
add
cmp
ljmp
mov
jns
rcrb
das
and
or
shlb
loopne
loope
mov
rol
or
jp
push
pusha
sbb
pushf
sti
pop
testb
addr16
pop
out
xor
insb
jle
jne
pop
lods
cld
mov
imul
or
xchg
fdiv
cmp
fmuls
scas
cmp
xor
insb
cmpsb
mov
and
mov
cli
int3
sbb
mov
outsl
std
daa
mov
movsl
or
push
or
adc
lock
pop
push
pop
sub
es
pusha
jno
lcall
mov
icebp
lahf
int3
rcll
sahf
pop
pushf
rorb
repnz
mov
test
dec
rcrl
cld
xor
add
mov
imul
add
mov
mov
pop
leave
ret
push
mov
push
addl
movl
mov
mov
adcl
mov
xorl
xor
jmp
fidivl
jle
jne
jb
sub
cmp
cmpsl
jg
jo
addr16
stos
into
push
mov
test
enter
pop
pop
or
mov
das
nop
sub
xchg
div
out
dec
mov
mov
pop
mul
lcall
jp
out
stos
clc
insb
sub
lretw
fs
cwtl
xlat
push
push
addr16
sbb
in
jo
sub
pop
ljmp
daa
sub
mov
xor
cmp
insb
stos
ja
popl
js
mov
leave
push
movsl
mov
pop
jge
mov
fwait
mov
std
push
shl
out
aad
loopne
dec
in
jg
jmp
ficompl
jne
mov
jb
xchg
xchg
stc
inc
mov
rclb
lcall
mov
sbb
popa
jb
sbb
mov
sbb
mov
in
cs
inc
push
cmp
mov
loopne
outsb
xchg
inc
xchg
jnp
jg
pop
dec
mov
dec
and
cmp
add
aas
xchg
adc
push
push
cmp
xor
fisubrl
test
sti
gs
pop
popa
mov
cmp
adc
nop
fdivrs
cmp
mov
gs
andl
jmp
mov
imul
push
and
adc
cmp
test
pushf
in
xlat
std
or
lret
xchg
sbb
ja
sub
sub
push
outsl
icebp
sbb
xor
fstps
mov
or
sbb
or
ret
lods
xchg
in
jo
rol
jne
stos
std
sub
orl
mov
mov
xor
push
sbb
mov
or
mov
sbbl
add
adcl
mov
sbb
mov
adcl
mov
subl
mov
or
jmp
out
hlt
arpl
popa
xchg
insl
hlt
pop
xor
jne
jo,pt
cmpsl
jg
jo
jne
inc
inc
bound
ds
lea
pusha
pop
mov
cmpsb
repnz
pop
mov
fidivs
inc
dec
jg
imul
sbb
adc
jl
inc
or
lcall
inc
lock
and
xchg
sub
lds
jno
ficoms
icebp
ljmp
mov
fwait
lea
or
ret
fisttpll
movsl
jg
fcomi
add
test
scas
push
mov
pop
cmp
das
aad
jmp
sbb
es
xor
ja
psraw
push
mov
pop
and
inc
xor
inc
stc
push
xlat
dec
movsb
jnp
adc
sub
and
lret
into
jle
and
arpl
scas
mov
inc
lgs
jle
pop
pop
les
into
or
cmp
call
clc
pop
dec
jns
add
lock
adc
and
cltd
clc
cltd
nop
loope
sub
inc
push
pop
dec
mov
adc
ret
bound
jg
adcb
xchg
out
or
movsb
sub
popa
jno
jns
push
push
push
cs
sbb
pop
bnd
addb
lcall
cwtl
push
popa
dec
or
outsb
push
mov
scas
cmp
mov
test
scas
sbb
push
xchg
test
cmpb
push
fisttpl
jbe
xor
jg
xlat
dec
xchg
mov
cmp
dec
inc
repnz
dec
pop
jae
or
inc
cmpsl
add
add
jno
pop
xor
insb
ljmp
jne
subl
mov
or
mov
movl
cmpl
je
cmpl
jne
push
pushl
pushl
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
mov
mov
mov
xor
add
jmp
jge
gs
gs
sti
ret
pusha
jo
mov
mov
mov
jo
jg
jo
test
out
test
mov
cmpsl
add
mov
xchg
lock
cmpsb
jno
push
lods
jo
data16
lret
mov
and
pop
je
movsb
out
call
fsubs
in
mov
popl
lret
adc
neg
rolb
cmc
leave
lds
push
hlt
data16
loop
lret
fstpt
mov
jl
sarl
sub
or
mov
push
out
sub
mov
gs
popa
dec
dec
or
xor
cmp
push
sbb
orb
mov
addb
pop
pop
rorb
stos
mov
rorl
leave
jmp
scas
int
fs
mov
movsl
mov
daa
insb
mov
shl
sub
out
cli
in
add
pop
loope
sarl
mov
sbb
xchg
jge
cs
jecxz
inc
ss
insl
pop
or
cmp
mov
adc
decb
adc
inc
jne
lods
fcomps
cmp
and
mov
orb
xorl
test
jle
or
int3
shll
test
push
cld
jno
je
pop
insl
test
xchg
pop
jne
jns
outsl
xchg
sub
jae
jp
mov
test
aam
mov
inc
cmp
sbb
stos
ja
cmp
jmp
push
sbb
cmp
push
and
gs
dec
push
inc
and
and
int
mov
push
push
push
leave
ret
iret
jg
imul
in
xor
pop
leave
ret
push
mov
mov
xor
mov
div
mov
and
or
mov
pop
ret
push
mov
push
adc
movl
mov
sbb
mov
mov
xor
add
mov
sub
mov
sub
mov
andl
mov
mov
jmp
mov
jg
inc
rorl
jae
pop
dec
int
lahf
push
xor
jo
loop
jo
outsb
pop
xor
mov
mov
rcr
inc
lret
push
aaa
mov
rorl
fxch
pop
xlat
sbb
push
clc
idivb
pop
enter
insl
dec
sub
and
mov
or
popf
movsl
cwtl
jnp
out
pop
sbb
or
jo
mov
aaa
les
inc
hlt
sub
int
pop
sbb
jno
mov
mov
idivb
add
shl
mov
popa
adc
mov
cs
jne
cltd
inc
aam
dec
in
jb
xor
adc
in
dec
pop
inc
loop
loope
xlat
pop
push
das
faddl
sub
mov
pop
inc
push
ljmp
mov
loop
insb
dec
dec
loope
je
xchg
fisubrl
xor
fwait
pop
xchg
lods
mov
insb
les
mov
mov
int3
in
and
or
xor
dec
sahf
pop
sbb
fdivrs
fidivl
sub
push
jns
adc
mov
pop
adc
jl
sbb
lods
sahf
mov
mov
iret
sti
into
dec
xchg
gs
cmp
xchg
mov
das
sub
out
aad
pop
clc
dec
adc
out
or
stc
mov
jne
fdivrl
popa
push
cmp
push
xchg
lcall
inc
test
push
fs
sbb
xchg
mov
inc
outsb
daa
insb
daa
pop
cs
lods
std
mov
cmpsl
sti
nop
out
in
imul
je
add
into
arpl
psraw
cli
xchg
stos
mov
sbb
sbb
outsl
rolb
push
jp
mov
cmp
or
push
ss
in
aam
pop
jnp
cmpsb
repz
jmp
fcoms
test
add
ret
mov
loopne
jb
and
roll
imulb
dec
movsb
mov
js
shll
out
sub
sbb
loopne
inc
sarb
loope
mov
out
flds
shrl
jmp
imul
and
jecxz
or
xchg
sbb
jge
mov
cmp
push
inc
sarb
arpl
adc
add
scas
sub
psrlq
mov
mov
xor
mov
mov
adcl
mov
mov
orl
mov
subl
mov
andl
mov
mov
test
mov
jne
mov
jmp
sub
test
pushf
hlt
repz
movsl
cmp
loop
jo
mov
or
mov
add
aaa
stc
xor
pop
ss
and
adc
inc
mov
fwait
cmpsb
add
out
in
std
cmpsl
cmp
jmp
adc
sbb
fbld
xchg
rorl
out
fsubrs
dec
pop
ficompl
or
pop
or
call
scas
fadds
les
lret
pop
std
pop
arpl
sbb
inc
sub
dec
negl
add
fstpl
adc
or
dec
sbb
mov
pop
jg
xlat
ret
jmp
fwait
std
ja
cmpsb
test
aas
fcmovu
fwait
mov
pop
pop
sub
add
mov
cli
push
mul
xor
xchg
push
sub
into
adc
clts
fisttps
mov
loope
idivb
mov
push
mov
mov
and
pop
lds
mov
out
and
adc
push
jp
and
mov
idiv
cltd
jp
shll
arpl
xchg
xchg
hlt
sbb
sbb
xchg
dec
xchg
sti
movsl
outsb
inc
js
shll
enter
pop
out
mov
mov
mov
rcr
stos
arpl
pop
lcall
dec
jo
stc
movsl
and
xor
loope
sbb
inc
inc
cmp
repz
dec
fidivrs
mov
adc
loopne
gs
mov
cwtl
in
in
inc
mov
mov
cmp
rolb
adc
sub
lcall
scas
mov
movsb
out
mov
fldl
stos
mov
xor
or
stc
ja
inc
outsb
or
fadds
mov
pop
sahf
out
mov
repnz
lahf
sub
mull
aam
mov
jmp
pop
fisttpl
pop
outsl
mov
sub
ret
fmull
lods
test
addr16
pushf
mov
pop
pop
cltd
dec
jae
fs
je
and
push
inc
mov
jmp
adc
and
rcl
xorl
and
adc
pop
cmp
mov
mov
fs
jge
xchg
or
std
adc
imul
push
pop
xor
add
leave
ret
push
mov
sub
mov
mov
mov
subl
mov
xorl
movl
incl
movl
subl
mov
push
push
push
movzwl
and
mov
mov
movl
cmpl
je
cmpl
jne
pushl
pushl
call
mov
dec
mov
jmp
movl
cmpl
je
cmpl
jne
pushl
push
push
pushl
call
mov
dec
mov
jmp
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
pushl
call
jmp
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
xor
sub
mov
add
xorl
mov
movl
jmp
inc
jae
pop
sub
jae
and
mov
dec
mov
jo
jge
jo
insl
mov
jle
sub
rolb
scas
push
cmp
les
and
lods
pop
and
sbb
xchg
dec
lea
fsubs
in
fsts
sbb
dec
push
lds
fisttpll
outsb
cmp
test
xor
xchg
cmp
cld
cmp
stc
fldl
cmp
test
xlat
mov
outsl
adc
xor
mov
add
js
mov
jne
std
jae
adc
pop
sub
mov
cmp
leave
orl
xchg
jbe
aaa
mov
pop
out
mov
lahf
fldenv
hlt
pop
pop
test
jne
xlat
or
mov
jmp
popl
in
fisubs
push
jmp
jg
sub
add
mov
cli
rorb
jae
addl
sub
aas
loop
adc
adc
ja
jl
adc
adc
sub
icebp
cmp
inc
fidivs
cmp
shrb
xchg
std
mov
jle
and
mov
mov
inc
cmp
push
leave
frstor
mov
jno
inc
jg
or
es
xlat
dec
jp
fimuls
imul
clc
dec
ja
insl
push
loopne
jmp
xor
jmp
mov
pop
or
fcomps
out
jne
insb
js
clc
xchg
daa
jge
lock
jecxz
mov
jl
gs
sti
js
sbb
sub
outsl
push
fistps
sbb
pop
stos
push
sbb
aas
xchg
imul
push
mov
test
xchg
push
push
xor
movsb
add
adcb
cli
adc
dec
stos
xchg
mov
out
ljmp
or
stc
movsl
xchg
jne
shrl
dec
add
stc
test
ret
cmp
es
test
fidivl
mov
sub
andl
fs
xlat
dec
cmp
test
int
andb
xchg
mov
sti
sar
ficomps
and
gs
jle
andb
cmc
push
rcrl
pop
mov
mov
xor
sbb
or
xlat
sbb
mov
movsl
sbb
mov
mov
cmpsb
jecxz
add
adc
notb
test
cld
cmp
mov
adc
bound
test
mov
push
das
fstl
fldt
lds
add
lock
shll
rcr
js
lret
jg
sbb
pop
pop
mov
nop
imul
addl
mov
loopne
cwtl
cmp
adc
push
mov
pop
test
cltd
dec
sub
inc
cmp
adc
push
mov
mov
insl
clc
flds
rcll
popf
push
addr16
cmp
shrl
mov
test
sbb
fdivl
pop
dec
xchg
fsubr
mov
push
cmpsl
jbe
sti
xchg
mov
cmc
mov
bound
stc
lock
test
movl
adcl
movl
movl
add
jmp
sbb
sarl
lahf
popa
sti
arpl
outsb
popf
sub
ret
and
jo
test
or
or
arpl
mov
mov
test
push
pushf
dec
inc
ficoms
fcompl
sbb
pop
scas
dec
mov
movsb
ljmp
stc
and
orps
cmpsb
popa
inc
push
bound
xor
lods
jecxz
inc
xlat
pop
push
scas
in
xlat
sbb
arpl
aaa
out
pop
jg
idivb
cmp
out
cmp
push
jae
ss
or
cmp
imul
cmp
sub
mov
gs
push
mov
sbb
stos
push
cmp
out
out
repnz
out
pop
mov
out
push
fdivs
popa
jecxz
xchg
adc
lds
fidivl
daa
mov
movsb
add
inc
jno
or
popa
js
pop
push
insb
pusha
in
test
inc
jecxz
cmpl
dec
jp
sub
xchg
fisubl
dec
mov
mov
and
mov
lahf
ret
lcall
jno
add
inc
adc
sbb
fdivl
xchg
js
or
push
xor
jle
or
xchg
ret
fs
xor
notl
leave
cmpsb
mov
ret
pushl
arpl
pop
jecxz
pop
ret
cltd
jns
icebp
inc
xchg
scas
or
and
mov
lret
mov
fstpt
mov
or
loopne
cltd
jo
stos
inc
fnstsw
push
lock
sti
lock
cmpsl
push
nop
jbe
adc
push
fsubp
sub
adc
sub
add
imul
and
mov
leave
test
dec
push
cli
lea
out
or
test
cmpsl
xor
lcall
stc
test
loop
in
mov
aad
xchg
push
test
aad
pop
popa
adc
jle
inc
or
repnz
jbe
pop
inc
mov
les
mov
into
out
stos
ficoml
aam
in
sub
xchg
push
jp
data16
sti
sbb
divb
push
lcall
cmp
xchg
push
adc
outsb
pop
add
mov
adc
out
and
or
gs
pop
ret
push
mov
mov
adc
lcall
jo
je
pop
sub
xchg
sbb
cmp
add
mov
adc
push
data16
aam
mov
mov
es
cmc
gs
jbe
and
xor
adc
daa
xchg
int3
sub
sub
shrb
mov
jo
loope
add
cmp
ret
xor
cmc
je
scas
adc
xchg
mov
xor
nop
mov
repz
and
sub
addr16
pop
cmpb
mov
dec
aad
flds
mov
ret
daa
mov
nop
jnp
jle
push
mov
or
lock
pusha
mov
push
dec
jne
test
pop
mov
addl
xor
addl
add
xorl
mov
movl
movb
andl
mov
inc
mov
cmpl
jne
call
cmpl
jne
mov
inc
mov
cmpl
jb
mov
xor
andl
add
orl
mov
adc
jmp
or
rcl
cmp
pop
jns
popa
mov
iret
jo
and
jo
fimuls
je
divl
mov
inc
adc
jb
das
popa
sub
pop
ja
pop
iret
outsl
push
and
lock
jge
decl
icebp
inc
movsl
mov
dec
loopne
negl
adcl
icebp
xor
and
push
pop
jge
sbb
sub
xlat
push
aas
andb
sarb
and
mov
pop
int
jns
cmp
jmp
fildl
inc
add
jnp
cli
xchg
test
mov
add
loope
mov
or
shl
xor
insb
enter
pop
pop
jne
scas
insl
sub
bound
jne
push
sarl
cmp
rcrb
ja
add
rolb
push
pop
mov
and
cmc
mov
xchg
out
das
repz
lret
sbb
push
daa
push
add
out
rorb
jb
mov
pop
movsb
int
daa
stos
sbb
das
lock
roll
ljmp
cmp
gs
push
adc
mov
pop
mov
in
inc
sbb
push
pop
jl
push
sbb
lcall
lret
push
in
shr
cltd
add
std
sbb
clc
adcl
dec
addr16
repnz
out
mov
decb
mov
push
pop
pop
cmc
test
adc
movsb
jbe
ret
dec
cmp
popa
mov
aas
xchg
cmp
push
add
jno
nop
cmc
mov
jmp
and
and
jl
sub
cmp
xchg
outsb
add
out
enter
jmp
jg
mov
test
dec
fisttpll
mov
xor
daa
ret
jo
jb
inc
xchg
inc
nop
dec
hlt
inc
sbb
lcall
jbe
push
stc
aaa
xchg
lcall
push
daa
inc
pop
fcomp
mov
in
loopne
negl
lret
sub
adcl
mov
mov
pop
sbb
sbb
out
out
xchg
mov
and
push
adc
and
add
in
das
pusha
iret
xchg
pushl
add
jge
push
xchg
pop
mov
jmp
jl
jno
xchg
add
cmp
sub
push
jb
mov
jecxz
lock
cmp
dec
stc
imul
ss
mov
add
scas
add
push
inc
insb
xchg
push
cmp
adc
xor
movsl
pop
xorb
adc
mov
jg
adc
das
add
mov
jnp
sub
divl
xor
daa
inc
cmp
mov
mov
fbld
mov
cmp
mov
jns
aaa
stos
dec
inc
sahf
xchg
push
lock
jp
sbb
mov
pop
jl
fidivs
fbld
jge
mov
push
jns
or
dec
stc
lods
jmp
movsb
lock
enter
xchg
in
lahf
mov
push
shll
jecxz
sbb
jnp
out
sbb
lahf
in
fs
and
inc
fdivl
movb
adcl
push
inc
mov
sbbl
xor
add
push
mov
orl
xor
addl
add
xorl
push
lea
push
addl
pushl
adcl
pushl
call
adcl
test
je
lea
sbbl
push
mov
jmp
xlat
and
insb
push
aaa
pop
push
push
sahf
out
fistps
jge
jo
cs
xchg
xor
scas
call
lret
pop
dec
fs
mov
sub
cwtl
shll
rolb
idivl
mov
int
hlt
xchg
aad
inc
sbb
push
jge
push
data16
jg
nop
in
mov
push
jmp
pop
inc
jg
add
lret
or
pop
shl
test
inc
push
dec
lea
scas
add
mov
adc
iret
jge
xor
cli
cmpsl
adc
sub
mov
xchg
mov
mov
rclb
adc
mov
sub
addr16
xchg
out
mov
lret
cmpsl
xlat
dec
push
icebp
js
pop
iret
fsts
lds
pushf
sbb
adc
pop
mov
or
loopne
mov
sub
push
pop
leave
jno
fwait
pop
mov
mov
inc
pushf
mov
mov
dec
cmc
mov
fstp
int
inc
into
aad
outsb
scas
mov
add
enter
aaa
sub
lahf
dec
scas
mov
mov
dec
dec
push
and
push
cmc
mov
pusha
pusha
ds
pop
loop
test
pusha
or
mov
nop
adc
test
dec
jl
add
ljmp
call
xor
aas
flds
les
push
dec
jnp
mov
fdivr
in
push
adc
and
cltd
inc
iret
or
aad
add
ljmp
aas
mov
ret
test
mov
movsl
or
dec
mov
dec
aad
js
pop
mov
mov
je
mov
outsb
xchg
dec
pop
push
daa
cld
sbb
jns
mov
call
jecxz
cltd
faddl
rcrb
sub
inc
cmp
lahf
ds
fs
in
mov
dec
mov
adc
lds
sti
sti
hlt
call
pop
rclb
mov
scas
xchg
je
jg
iret
mov
rolb
scas
test
pop
mov
or
lds
ss
xacquire
fcmovnbe
dec
lret
es
loopne
fmuls
jmp
sbb
cmc
cmp
cmpsb
je
scas
jge
cmp
in
cmp
fnstcw
dec
xchg
stc
out
lcall
or
jae
test
cmp
repz
ret
outsb
add
adc
xchg
in
inc
dec
lahf
insl
or
mov
or
scas
pushf
pop
out
inc
xor
movsb
into
mov
jnp
mov
pop
rcl
jmp
cmp
add
mov
mov
out
adc
cmpsl
scas
mov
shrb
popa
lods
sub
js
lods
imul
add
pusha
les
popf
xor
jle
xor
jl
dec
movsb
pop
push
in
test
dec
fisubl
jno
xlat
cmp
add
imul
ds
fiaddl
dec
mov
inc
cmp
in
mov
pop
add
cmp
movsl
xchg
out
xor
push
mov
add
push
mov
mov
pushl
jmp
sahf
das
or
mov
mov
pop
mov
mov
leave
jo
and
jo
cmc
pop
dec
dec
aas
mov
imul
dec
cmpsl
dec
push
cs
jp
cmovne
mov
test
lret
add
jmp
add
and
inc
sbb
imul
mov
or
sub
pop
repnz
imul
ret
push
xchg
cs
fisubrs
push
adc
mov
mov
push
rcl
jp
jmp
sub
push
add
cmpsb
xchg
and
fdivrs
xor
or
lret
imul
es
nop
not
mov
mov
mov
and
jo
mov
pop
test
sub
lods
popa
nop
or
xchg
ret
jp
push
repz
lcall
imul
out
dec
rcrb
aam
push
shll
push
jge
jp
xor
adc
test
mov
aam
xlat
xor
outsb
push
outsb
cs
and
loopne
pop
add
pop
xchg
data16
sbb
sub
movsl
das
mov
movsb
pop
ret
cmp
xchg
jl
lea
testl
jb
repnz
jnp
addr16
lcall
xchg
jnp
or
sarl
mov
xor
fwait
inc
dec
test
add
ja
sahf
loopne
jp
add
push
mov
pop
pushf
push
mov
dec
and
pop
int3
gs
mov
daa
fcom
jge
stos
mov
xchg
mov
inc
shrb
or
movl
leave
fisubrs
and
aam
inc
xchg
inc
pop
jne
mov
je
cld
stc
into
and
sbb
out
cmp
push
mov
imul
dec
mov
lock
int
scas
xor
sub
mull
xor
jae
jp
mov
xchg
in
or
lods
test
inc
in
dec
push
xor
adc
sbb
cmp
xor
dec
jmp
fisubs
test
bound
insl
sti
adc
jle
push
xorl
mov
push
adc
lahf
jg
in
repz
mov
pushf
and
enter
test
push
gs
inc
jecxz
scas
fists
outsb
cmpsb
das
callw
sbb
adc
aaa
rclb
xlat
xchg
cltd
xlat
lahf
add
sar
aad
mov
sbb
or
lret
jmp
movsb
mov
mov
xor
mov
or
cltd
aad
outsl
inc
push
adc
sbb
popf
inc
sahf
repz
inc
lret
scas
shl
lcall
fimull
mov
sbb
cmpl
incl
outsb
cmp
inc
cmc
mov
xor
mov
fcmovnbe
jp
pushf
xchg
mov
out
xchg
ja
cmp
push
mov
or
jp
aaa
aam
mov
fildl
lret
xor
call
mov
cmpl
jmp
in
outsl
pop
outsl
jne
data16
test
pushf
add
jo
and
jo
inc
aaa
inc
scas
out
sub
pushf
cwtl
js
faddl
pushf
mov
sub
or
dec
sahf
cmc
jle
xor
dec
jo
adc
push
stos
lret
arpl
sub
adc
fs
sti
cmp
add
pop
xchg
sbb
add
mov
jb
adc
pop
popa
mov
in
mov
fbstp
mov
mulb
insb
nop
push
adc
sub
push
lock
jmp
repz
sti
pop
fst
pop
cli
lock
cmova
push
xorb
dec
xor
jnp
dec
mov
sub
sbb
rorb
jbe
pop
pop
loope
mov
mov
cld
lret
xchg
jmp
push
lds
cmp
pusha
cmp
mov
fdivl
lods
or
jmp
inc
push
xor
popa
xor
rclb
push
cmp
imul
into
test
pop
data16
push
push
leave
out
and
pushf
xor
cmp
xor
das
push
cli
mov
and
shrb
outsl
sbb
jge
sbb
lods
xchg
inc
pushf
xchg
cmp
push
or
int3
insb
enter
ss
in
mov
adc
mov
imul
sahf
aam
xchg
test
adc
pop
xor
add
scas
jne
jo
or
stos
es
test
gs
in
xor
or
hlt
xchg
mov
xchg
daa
inc
sbb
fwait
cmp
jmp
dec
add
rol
lods
shrb
int
adc
test
div
cld
push
mov
adc
or
lods
xor
add
ss
imul
pop
cwtl
xor
jno
sbb
int
xorl
xchg
push
addr16
lods
xor
movsb
movsl
add
addb
popa
sub
jp
insb
inc
lock
mov
sub
dec
pop
fiadds
inc
sbb
popf
sub
in
dec
sub
out
jecxz
push
cmc
or
push
int3
movsl
adc
icebp
mov
rep
and
push
aaa
insb
pusha
lea
jecxz
sbb
leave
out
inc
jp
mov
inc
xor
test
xchg
lret
fnstenv
mov
xchg
sub
sbb
dec
jae
iret
sbb
push
adc
mov
cwtl
xor
sbbl
ret
mov
push
and
push
mov
sbb
xor
or
ret
pop
pop
mov
test
xchg
mov
jle
adc
test
into
stc
pop
out
adc
jg
sti
sub
xor
sbb
or
cltd
xchg
test
xchg
aad
inc
xchg
mov
movsb
inc
ficoms
insl
lcall
mov
mov
mov
shrl
call
mov
orb
and
xchg
push
loope
movsl
outsb
imull
inc
loopne
test
call
xor
add
push
mov
xor
add
push
pushl
lea
push
pushl
pushl
call
test
je
lea
push
mov
xor
add
push
mov
add
push
mov
mov
pushl
call
mov
xor
mov
sub
sub
mov
add
mov
mov
mov
mov
xor
sub
jmp
ja
mov
mov
ret
loop
movsl
aaa
shlb
and
jo
cmp
jp
cmp
rcll
in
data16
lods
xchg
daa
mov
shrb
pop
lods
clc
sub
in
loope
test
faddp
dec
fs
popa
rorl
arpl
push
dec
repnz
mov
repnz
pusha
fwait
jecxz
loope
fucom
push
dec
lret
xor
push
mov
lahf
pop
lahf
rolb
xchg
call
lahf
adc
xchg
mov
fwait
sub
push
test
scas
adc
lcall
jmp
add
shrb
jp
mov
imul
pop
clc
pushf
add
flds
test
sbb
jecxz
inc
imul
cmp
mov
add
movsl
mov
ds
jge
scas
call
fidivs
into
sub
cmp
fadds
bound
inc
dec
or
push
xor
mulb
jge
cmp
fwait
or
dec
or
stc
pop
hlt
test
imul
xchg
sub
fildl
mov
das
pusha
shrl
mov
std
in
ds
in
xor
sahf
mov
xchg
mov
test
lods
jae
inc
push
jb
andl
inc
mov
or
loope
inc
repz
jb
inc
rolb
sub
adc
inc
mov
xchg
cmp
mov
cwtl
fistpll
fsts
mov
iret
test
push
push
mov
xchg
es
pop
rorb
cwtl
mov
xor
inc
es
pop
mov
rolb
fcmovne
jmp
imul
hlt
aam
mov
push
js
div
das
int3
cmpsb
or
div
fnstsw
bound
loope
cmc
mov
xor
fisttps
imul
pop
inc
rcrl
inc
pop
outsl
mov
sub
push
popf
push
fstl
pop
jns
ds
jns
add
pop
sbb
sub
pop
rorb
aas
fwait
in
fsubp
or
mov
sbb
popf
divb
stos
je
jge
lods
aaa
pop
mov
test
fdivp
scas
dec
and
cld
xor
lea
iret
fsubrs
mov
addl
xchg
enter
dec
stc
pushf
aad
lcall
jbe
ds
aam
std
pop
cmp
cltd
adc
push
pop
cltd
outsl
sbb
and
or
aad
int3
les
lods
psubq
or
lock
sarl
adcb
imulb
movsb
arpl
idivb
cmp
jae
in
mov
xchg
addr16
add
jg
add
hlt
mov
fnstsw
jg
or
jbe
inc
cmp
repnz
or
jecxz
inc
test
sbb
mov
mov
and
push
and
xor
sbb
cwtl
sbbb
into
mov
shlb
cmp
daa
mov
lock
int3
xor
mov
popf
jns
add
mov
dec
add
add
fisttpl
jp
xchg
mov
out
jo
and
jo
add
pop
jnp
push
je
subb
sarl
bound
hlt
dec
adc
clc
cmc
or
mov
cmp
les
jbe
push
lret
xchg
ja
push
mov
out
add
cmc
fnclex
imul
adc
push
jne
jecxz
adc
cs
push
inc
enter
inc
and
ja
cmp
outsl
ss
mov
movsb
daa
pop
aad
lahf
iret
mov
sbb
je
mov
popa
xlat
mov
ja
lods
sbb
insb
mov
jle
movsl
sbb
decl
xchg
fldcw
cmp
sub
scas
inc
or
test
sub
cmp
popl
push
popa
or
out
clc
ret
cmp
fsubrp
mov
nop
mov
pop
sti
and
sbb
in
cli
iret
nop
outsb
pop
hlt
outsl
mov
jo
xchg
pop
mov
push
pop
sub
pop
dec
imul
sbb
add
push
fidivs
adc
jnp
push
popa
cmp
int3
ret
das
xor
testl
cmpsb
xor
and
or
inc
dec
roll
fmull
aas
hlt
jno
je
adc
push
inc
cltd
and
shlb
addr16
ret
clc
inc
cmp
xchg
pop
lea
jbe
jmp
inc
jmp
mov
je
and
mov
cmpsb
cmp
or
rcll
nop
sub
dec
aaa
xor
add
push
loope
xor
ficompl
ror
sbb
popf
and
lods
int
xor
ja
shlb
scas
adc
dec
sbb
fwait
cld
lods
jae
mov
xchg
insb
fwait
scas
xchg
dec
add
jae
popf
insl
sbbb
enter
sub
loop
iret
jbe
lods
xlat
xor
test
xor
jne
data16
leave
pop
pop
ja
js
aaa
lea
dec
jb
dec
inc
sbb
cmpsb
enter
iret
mov
mov
ja
add
mov
dec
adc
mov
pushf
sub
or
mov
and
jne
sub
push
adc
stc
jno
insb
push
int3
popa
and
xlat
dec
cmp
jge
in
cmp
pop
lret
je
jb
cld
pop
and
or
jns
fadds
xchg
sub
sbb
test
ret
cmc
js
add
stc
insb
pusha
or
sbb
sahf
adc
loopne
repz
cmp
and
mov
add
lret
arpl
jl
xchg
stos
sti
in
xor
or
dec
mov
or
iret
mov
mov
xchg
stos
es
lds
loope
cmpsl
pop
or
loop
cmp
and
std
jns
or
scas
rdpmc
jns
and
push
sub
lahf
test
js
mov
sub
sbb
shrb
jae
adc
lods
ret
or
rdpmc
cmp
out
inc
bnd
call
clc
incb
inc
push
jmp
mov
fwait
xchg
fwait
jae
roll
mov
xchg
fdivl
and
jo
mov
xor
push
or
jp
scas
cmovae
aas
std
push
aam
add
adc
dec
pusha
cwtl
pop
aas
imul
mov
outsb
push
scas
mov
and
lret
inc
lret
mov
daa
scas
xlat
xchg
jns
loopne
pop
jbe
clc
dec
sbb
inc
data16
sahf
adcb
rorl
popf
ljmp
jge
fs
xchg
jno
xchg
fisubrs
pop
mov
xor
popa
stos
fsubr
mov
fs
and
fidivl
mov
cld
mov
mov
cmpsb
mov
xchg
sbb
repnz
loop
call
pop
notl
mov
push
add
adc
push
fimuls
les
sbb
mov
stos
stc
shl
push
mov
mov
mov
mov
adc
loop
out
in
inc
mov
cwtl
out
dec
in
nop
loopne
mov
aad
pop
adc
adc
xchg
test
cmc
pop
out
pop
inc
mov
outsb
enter
and
pop
rcrb
xchg
icebp
in
xor
pop
pop
mov
dec
or
inc
in
jle
fnstenvs
adc
add
inc
dec
mov
dec
push
push
lcall
lock
arpl
mov
mov
or
repnz
fwait
sarb
mov
mov
mov
adc
mov
push
adc
gs
icebp
sbb
sub
push
aaa
xlat
scas
sahf
movsb
push
rcl
cld
bound
adc
scas
sub
mov
paddsb
jp
sbb
aad
add
mov
push
mov
push
aaa
cmp
cmpsl
loop
mov
mov
xchg
sbb
push
ja
std
adc
inc
cmc
aam
jns
sbb
icebp
push
jmp
repnz
shlb
mov
stos
stos
xchg
jo,pt
test
mov
psrld
incl
les
sahf
add
int3
sub
test
xchg
je
cwtl
gs
and
jbe
cld
insl
mov
faddl
pop
mov
and
pop
sahf
rorl
shrl
dec
inc
aam
sub
insb
push
bound
push
sbb
push
sbb
cli
lret
jo
inc
out
xor
repnz
xchg
es
inc
mov
in
push
movsb
xor
orb
xchg
or
scas
add
jecxz
xor
icebp
test
inc
ret
pop
jb
inc
xlat
pop
or
ss
outsb
movsl
js
lds
xor
mov
and
jle
inc
push
lcall
not
jns
ret
push
mov
lahf
mov
push
cmc
jecxz
jle
mov
adc
xchg
fstl
push
cld
scas
test
jbe
fildl
mov
mov
push
roll
or
je
fwait
sbb
outsl
pop
out
das
pop
lea
rol
mov
in
adc
test
mov
leave
aam
arpl
xchg
decb
pushl
mov
mov
pushl
lea
jmp
mov
push
mov
bound
fnstenv
and
jo
jnp
test
inc
jge
pusha
gs
jp
ljmp
repz
inc
push
sub
mov
and
mov
jmp
out
sub
pop
insl
cs
mov
cmpsb
or
add
mov
jno
pop
out
push
jo
or
out
repz
ret
pop
nop
scas
mov
adc
lret
shr
inc
pusha
fwait
ja
mov
stos
push
mov
mov
adc
ret
push
push
idivb
jle
test
or
push
add
negb
inc
jnp
pusha
xchg
push
add
lock
scas
pop
fsubp
add
mov
adc
enter
pop
scas
xchg
adc
shlb
add
xchg
das
pop
in
push
lea
test
or
cmpsl
scas
fidivs
cmp
je
out
lods
stc
clc
push
jmp
mov
push
sbb
aaa
adc
xchg
scas
dec
or
or
mov
or
add
adc
push
repnz
ret
stc
arpl
fcmovnb
ret
cmpsl
out
sub
jno
jnp
inc
mov
sbb
jmp
dec
mov
cmp
pop
sbb
int3
aas
mov
adc
pop
mov
hlt
cmp
data16
fildl
xor
dec
movsl
sub
aaa
jp
sbb
or
call
rorl
sahf
cs
pop
pop
xor
outsl
mov
xchg
outsl
xchg
sub
jmp
mov
fstl
sarl
fincstp
adc
roll
adcb
jo
sahf
mov
fistps
sub
jne
loope
sbb
dec
enter
add
mov
add
pop
xor
add
ficomps
int3
pusha
test
pop
lcall
out
mov
cmp
ret
sub
cmp
xor
test
cs
adc
push
jo
insb
or
xchg
je
jl
or
loopne
mov
fimull
idivb
hlt
adc
enter
cmp
repz
test
mov
mov
xchg
iret
in
inc
shll
dec
out
sar
sub
jmp
cmp
outsl
std
in
sti
cmp
cli
lods
fadd
jno
fldl
push
enter
int
and
pop
pop
inc
out
cs
cwtl
and
and
pop
bound
sbb
jne
data16
scas
shr
js
dec
adc
mov
inc
xor
or
jnp
shlb
outsb
mov
pusha
dec
fs
shll
aam
xchg
cmp
add
mov
lret
pop
add
mov
clc
lods
das
add
gs
push
movsb
pop
mov
xchg
std
inc
mov
pop
xchg
jl
lods
sub
sub
scas
out
pop
push
add
lds
dec
dec
push
jne
fldenv
jbe
adcb
fwait
pop
ja
sbb
lds
movsb
mov
movsl
aam
xchg
pushl
lea
jmp
add
out
out
xor
call
in
ret
pop
ja
jo
and
jo
ss
push
push
lret
add
mov
es
loop
cmp
xchg
push
outsl
xlat
lcall
xlat
pop
call
ds
lcall
int
adc
pop
test
data16
sbb
cmc
cmp
push
sahf
dec
icebp
int
push
inc
subb
inc
clc
or
xor
pop
movsb
jns
arpl
ds
push
insl
bnd
loopne
mov
out
xor
out
std
inc
sti
sub
push
movsl
test
sub
popa
into
cmp
mov
lods
cmpsb
in
pop
imul
add
lea
sbb
dec
cltd
test
cmpsb
push
jle
add
pusha
shlb
mov
les
shl
out
inc
cmp
inc
cmp
adc
repnz
rcll
lods
fmull
testl
sub
scas
inc
imul
cmp
cmp
mov
lret
mov
dec
cmp
xor
repnz
push
mov
mov
and
xor
pop
push
cli
sub
push
stc
adcb
sub
imul
jge,pt
dec
std
cltd
mov
in
idivb
clc
jge
add
call
or
or
and
testl
scas
pop
fadds
mov
mov
mov
cmc
lods
loop
mov
pop
push
mov
cwtl
scas
nop
and
or
cli
lea
inc
push
fs
jge
jne
gs
pop
mov
popa
loop
subb
lret
ret
adc
mov
movsl
mov
adc
je
mov
add
mov
nop
fdivp
aas
jns
push
mov
ja
test
xor
imul
add
dec
scas
cmp
std
in
std
cld
mov
push
out
mov
jg
outsl
subb
add
imul
fwait
mov
clc
shlb
xchg
sub
test
mov
call
fsub
push
mov
into
or
test
std
sub
or
fucomp
cmpsb
xchg
cmpsl
enter
js
inc
dec
imul
push
or
fstpl
push
or
inc
xchg
pop
cmpsb
mov
lcall
mov
sbb
stc
js
or
test
push
pop
xchg
insb
mul
movsl
sbb
cmc
frstor
fldcw
outsl
enter
pop
mov
les
call
hlt
add
in
sbb
hlt
or
insb
push
xchg
adc
stos
hlt
jg
in
js
mov
ror
fnsave
mov
sbb
mov
sub
ret
jns
lods
jp
mov
lcallw
sub
lahf
repnz
sbb
gs
add
icebp
out
push
in
sub
or
adc
jne
fnstenv
pushl
lea
pushl
lea
pushl
xchg
inc
inc
sub
push
pop
jmp
cmpsb
jnp
or
lahf
jo
mov
pop
push
daa
loop
jo
jge
jo
cmp
xchg
push
mov
popa
pusha
push
cmp
je
push
aaa
cmp
leave
jo
test
mov
dec
lods
test
loopne
movsl
fdivp
pop
mull
out
sub
adc
pop
cli
dec
cmp
punpckhdq
lods
jno
jne
test
mov
bound
mov
push
nop
pop
and
jmp
in
cmp
pop
ret
shr
or
mov
sbb
or
shl
addr16
xchg
notb
inc
pop
add
int3
mov
sbb
pushf
aam
pop
out
sahf
icebp
out
xor
inc
insb
out
js
aas
icebp
lea
ds
adc
push
add
aas
imul
clc
nop
dec
xchg
push
inc
sar
mov
sbbl
jnp
out
mov
stc
out
mov
in
dec
or
push
sub
cmp
scas
jl
jl
push
jbe
lea
xlat
jmp
mov
pop
insb
pushf
or
mov
add
mov
fs
mov
mov
rcrb
enter
mov
pop
sbb
aad
dec
jmp
push
in
jge
jo
outsb
nop
xchg
xor
in
cmp
push
test
aam
dec
inc
mov
xor
aaa
and
shll
fcoml
insl
cltd
add
lahf
push
hlt
sbb
adc
jl
and
xor
mov
jbe
fiaddl
push
inc
mov
inc
out
xor
cmpsb
pusha
jb
jl
mov
in
inc
andl
xor
sub
jnp
out
adc
xchg
jo
dec
mov
jle
jle
in
cmp
insb
lret
xchg
cltd
rep
fists
push
mov
xchg
test
pop
xor
sbb
mov
mov
push
push
out
jne
fcompl
out
add
test
mov
subb
rcl
and
shrb
xlat
arpl
jl
jb
adcb
gs
sbb
lret
fsts
sub
jle
or
popa
imul
subb
sub
pop
xor
fnstcw
dec
add
movsl
inc
mov
je
sahf
cld
xlat
push
leave
xchg
hlt
je
in
xor
lcall
scas
cmp
push
add
lahf
push
pop
ror
outsb
rolb
push
or
test
divl
int3
lods
sbb
cmp
das
mov
sbb
scas
stc
sbb
mov
fs
fcmovnb
mov
movsl
pop
inc
lock
jb
jge
push
pop
cmp
ss
out
xchg
push
movsl
cld
fisubs
loop
and
push
lds
inc
jmp
aas
xor
dec
xor
icebp
xchg
push
xor
imul
pcmpgtw
int3
into
sub
pusha
cmp
insb
add
bound
call
mov
mov
jmp
out
mov
ja
add
xchg
test
out
jo
and
jo
pop
lock
jno
pop
inc
inc
xchg
fldl
pop
lahf
ds
mov
dec
jae
insb
push
aaa
insb
adcb
ficompl
stc
lods
mov
pop
insb
imul
test
or
test
sub
push
dec
cmp
enter
out
inc
mov
out
call
push
repnz
das
loopne
push
loope
incl
mov
push
and
int3
pop
pop
push
std
stos
sbb
dec
sbb
mov
mov
cmp
inc
inc
jl
mov
in
sbb
das
jb
jmp
out
push
adc
ret
cmpsb
push
push
repz
or
movsb
aad
loopne
xlat
sti
lret
xor
daa
xlat
in
push
enter
push
rorl
out
adcl
rcrl
leave
fisttpl
pop
leave
xchg
xchg
daa
xor
aaa
cmp
inc
bound
lret
imul
inc
jmp
mov
or
mov
rcrl
int
xor
jbe
sti
inc
sub
add
leave
into
lds
icebp
sub
mov
sub
out
adc
cmc
stc
xlat
inc
ss
stc
stos
cli
mov
push
cmc
xchg
jmp
cli
xor
cmp
ss
sbb
nop
mov
pop
sub
pop
xor
or
mov
sub
cmp
jle
les
stc
outsb
lds
dec
pop
cli
test
pop
pop
sti
mov
or
push
jo
add
es
pop
imul
mov
imul
hlt
dec
mov
and
lods
cmpsl
mov
jne
jp
out
call
lock
in
lea
jmp
movsb
stc
xchg
mov
mov
mov
jg
xor
add
mov
out
es
in
sbb
cwtl
and
enter
loop
jae
pop
outsb
xchg
scas
mov
mov
lret
jo
pop
cmp
mov
pop
fidivl
push
mov
dec
lods
sbb
sub
insl
in
in
out
mov
int
outsb
rol
cwtl
jle
xlat
das
into
and
dec
lret
pop
jnp
lods
add
pop
in
in
out
add
sbb
add
mov
pop
subb
out
test
add
dec
pushf
faddl
into
loopne
lock
push
dec
js
jno
lea
lods
and
mov
inc
push
adc
add
mov
fbld
lods
fisttps
mov
shlb
adc
mov
mov
jb
mov
iret
cmc
mov
push
imul
ljmp
mov
add
sub
popf
jns
stos
into
jo
cld
or
push
fldt
push
sub
and
push
rorl
cld
inc
movzbl
push
mov
jecxz
xchg
cmpb
cmpsl
cmpsb
js
fimuls
inc
sub
test
xchg
cmc
int3
nop
sbb
mov
call
pop
leave
ret
push
mov
sub
push
subl
mov
sbb
mov
mov
mov
sub
imul
mov
movl
neg
movl
mov
mov
or
mov
add
mov
adcl
mov
xor
xor
mov
sbb
mov
jmp
arpl
cmc
xchg
cmc
arpl
pop
das
notl
or
xchg
jo
lahf
jge
jo
das
fdivs
mov
mov
loopne
dec
mov
add
mov
nop
cmp
pop
sbb
in
mov
outsl
das
js
mov
jae
sub
sub
fdivrs
lods
add
cmpsl
imul
adc
inc
xchg
lods
xchg
mov
inc
pop
loopne
inc
mov
subb
jecxz
jp
loope
jo
sahf
cli
mov
lret
sbb
or
mov
jne
scas
mov
lods
xor
inc
dec
into
subb
push
push
adc
jbe
jp
dec
repnz
cmp
sub
pop
inc
push
loope
jno
arpl
and
inc
or
rep
sti
jg
inc
mov
lret
lcall
sarb
add
jne
vmaxss
push
adc
mov
leave
stc
adc
push
adc
out
das
ror
pop
xor
aad
arpl
shl
cmp
lret
mov
jmp
mov
out
xchg
mov
jp
stos
ss
sub
push
loopne
jecxz
dec
fxtract
lahf
mov
xor
pop
cmp
sbbl
fcompl
stos
fwait
bndldx
cmpsl
push
aad
adc
rcll
rorb
rol
fstl
ds
cs
adc
pop
aaa
and
add
push
cmp
sub
cld
ja
inc
push
pop
movsb
adc
fsubr
add
repnz
xchg
adc
ja
mov
ja
jp
cmpsl
ficoml
adc
orb
pop
jge
xchg
add
cmp
clc
cli
leave
int
fwait
mov
or
sti
mov
idiv
test
lods
inc
fwait
out
lock
cmp
mov
lock
dec
mov
in
scas
scas
adc
ljmp
std
add
dec
inc
addr16
sub
mov
pushf
test
outsl
sbb
daa
pushf
cs
cmp
sub
sarb
in
sti
mov
addr16
in
jno
xchg
add
int3
mov
jb
insl
sub
pusha
xchg
imul
xor
into
dec
adc
cld
mov
push
push
dec
pusha
out
dec
lock
leave
addr16
push
rorl
jmp
sub
push
stos
sub
sub
mov
jle
pop
push
je
jmp
imul
xlat
push
push
or
lods
sub
add
push
repnz
push
in
jmp
add
imul
sbb
jo
ret
mov
arpl
add
adc
xchg
std
mov
mov
cmp
rorb
imull
bound
mov
and
xorl
sbb
dec
sarl
imul
push
xchg
aas
or
mov
mov
cmp
sub
mov
jne
filds
jmp
aad
jbe
and
mov
xor
std
les
nop
mov
enter
mov
push
mov
push
call
es
lret
bound
or
sbb
xor
test
out
dec
pushf
xor
out
ds
pop
cmp
aad
arpl
pop
clc
aas
rorb
scas
pop
pop
xor
xlat
int
das
pop
call
jge
xchg
lds
fcomps
aaa
or
scas
xor
shll
or
mov
mov
and
xor
adc
add
movl
cmpl
je
cmpl
jne
pushl
call
mov
dec
mov
jmp
mov
adcl
jmp
xlat
mov
mull
mov
pop
and
push
es
jo
div
dec
mov
jg
jns
je
or
das
imul
sbb
mov
in
pop
out
icebp
mov
and
leave
sbb
lea
movsb
jecxz
pop
aaa
mov
arpl
jmp
int3
aam
dec
push
mov
mov
shl
lds
inc
pop
lcall
mov
cmp
cmpb
sahf
mov
inc
lcall
add
int3
lea
mov
mov
jbe
fidivs
mov
into
lret
ss
lock
shl
enter
push
jp
les
mov
cs
lcall
ds
lods
mov
xor
or
add
pop
pushf
repz
add
mov
xlat
out
cmpsl
test
in
cwtl
cmpsb
enter
popf
xchg
dec
orl
sub
lods
iret
dec
cmp
lods
inc
cmp
mov
mov
test
mov
sbb
mov
out
mov
cmp
pusha
dec
pop
jb
jo
lahf
inc
xchg
push
push
stos
adc
subb
out
aam
fcompl
dec
aam
sub
cmp
pop
scas
or
xchg
fs
out
inc
movsb
jge
mov
aas
clc
jae
xor
mov
out
nop
psubw
sub
xlat
and
or
mov
outsb
lods
jnp
pop
lds
gs
test
repnz
add
mov
pop
push
jae
xor
mov
aaa
cmpsl
imul
push
lret
ret
jno
cmp
cmc
fsubr
adc
add
or
inc
pop
imul
xor
mov
mov
das
insb
jbe
mov
push
or
sahf
cmpsl
jb
shr
mov
iret
adc
or
lahf
les
sbb
fnstcw
pushf
out
lcall
cmpl
test
adc
dec
sbb
mov
pushf
inc
inc
or
sub
sub
ds
sub
cwtl
xor
xor
shr
dec
and
adc
les
cmpsl
decb
mov
in
fstpt
jbe
roll
ljmp
shrl
cmp
fmuls
sub
iret
lea
int3
mov
stos
gs
sbb
stc
popf
fwait
inc
xchg
jns
in
sbb
lods
push
xor
rorl
xor
enter
jg
jae
sbb
lds
jge
mov
fs
jp
test
cmp
push
mov
or
imul
outsl
mov
movsl
loop
cmp
adc
in
cli
add
sbb
ret
pushf
mov
xchg
mov
adc
icebp
xlat
inc
mov
push
pusha
mov
push
mov
jno
stos
adc
xchg
xchg
test
and
pop
mov
pop
push
rsm
mov
in
pop
in
aad
xor
dec
xlat
or
mov
mov
pop
int3
int
fstpt
sbb
mul
stc
or
repz
cmp
lock
push
mov
lahf
sbb
push
repnz
out
repz
shlb
or
sub
fcomps
test
fdivrp
stos
xor
fcmovnbe
sub
mov
mov
sarl
ret
xchg
mov
rorb
cld
roll
fdivs
test
aam
test
inc
add
add
add
sldt
add
rorb
adc
inc
mov
cmpl
jae
cmpl
jne
push
push
push
push
call
jmp
add
movl
andl
jmp
into
iret
cmpsb
cmp
sbb
cmc
and
jo
lahf
jge
jo
shl
push
das
add
neg
mov
xor
dec
adc
shlb
imul
dec
ljmp
fldl
pop
lea
mov
add
fs
das
sbb
pop
inc
fisubl
inc
aaa
and
fldcw
icebp
testl
lods
jle
aas
push
lock
pop
das
adc
xor
sti
cmp
xchg
in
adc
and
xor
mov
je
int3
test
nop
fs
aaa
push
js
adc
imulb
inc
jp
rol
aam
es
dec
hlt
pop
xchg
add
cmc
push
jle
jno
rorb
repnz
and
cmp
fs
xlat
lds
lds
fadds
addr16
stos
sti
mov
and
mov
inc
ljmp
mov
test
jmp
cmpsb
or
arpl
mov
adc
pop
pop
les
dec
sbb
loopne
adcb
pop
xchg
sbb
lock
aam
sbb
xor
adcl
dec
in
fisubrs
iret
iret
lcall
mov
jmp
xor
fs
loope
push
cmpsb
stos
enter
cli
shlb
incl
popf
pop
lret
or
movsb
xor
inc
pusha
fcomps
shrl
mov
lds
jge
jge
inc
adc
aad
repz
and
lret
popf
cld
sti
push
test
les
push
xor
in
call
inc
std
jl
repnz
lock
jns
sub
jle
jb
loopne
sub
inc
sahf
xor
or
sbb
or
or
xor
pop
js
loope
addr16
sbb
fsubrs
xor
push
stos
frndint
out
jnp
aam
ss
sbb
mov
jns
sti
xor
xchg
mov
pusha
cmp
push
and
out
negb
int3
mov
inc
pop
push
testl
dec
lea
inc
popf
or
mov
push
lods
sbb
lea
fistpll
cltd
mov
or
aaa
fucomp
pop
dec
shll
enter
mov
or
sbb
or
add
jp
dec
xchg
mov
inc
jle
or
jbe
test
repz
sbb
stc
std
lret
xor
and
mov
lock
and
jmp
fsubp
ret
add
cltd
sbb
lds
outsl
je
or
mov
loope
sbb
enter
jecxz
cmpsb
ret
arpl
rcrl
or
leave
dec
jmp
push
push
scas
and
out
and
test
sbb
xor
mov
ds
int3
ja
push
into
loop
pop
xchg
jge
push
sti
out
pop
test
lods
push
stos
cmc
dec
aam
adc
jbe
loop
push
dec
xor
dec
mov
lret
call
out
ljmp
add
sub
push
dec
jge
sub
sub
shl
add
lods
leavew
ja
cmp
xchg
nop
std
aaa
push
std
lods
pop
inc
xchg
adc
jo
iret
sbb
xor
je
ljmp
cmpsb
or
loop
in
pop
xchg
pop
sbb
mov
sti
scas
add
mov
xor
and
movl
movl
andl
xor
or
inc
mov
cmpl
jne
pushl
pushl
push
pushl
pushl
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
push
call
cmpl
jne
xor
add
inc
mov
jmp
mov
xor
mov
movl
adc
mov
xor
sub
mov
add
movl
cmp
movl
je
movl
push
movl
jmp
mov
movl
cmpl
je
cmpl
jne
pushl
push
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
xorl
sub
mov
add
mov
jmp
addr16
xchg
jno
ja
dec
in
std
mov
icebp
jo
lahf
jge
jo
mov
mov
int
in
cmp
loop
jp
ds
pusha
sbb
adcb
clc
outsb
mov
bound
jnp
pop
and
adc
jge
negb
push
add
cmp
jecxz
push
inc
sbbl
cmp
pusha
pop
popf
inc
add
sahf
sub
and
xchg
add
pushf
sub
test
outsl
jg
popf
int
xchg
test
jg
fildl
mov
mov
pop
xchg
and
inc
lret
pop
adc
xchg
dec
or
cltd
arpl
mov
jg
cmp
and
xor
sarb
out
add
mov
leave
test
dec
int3
fwait
daa
sbb
cmpsl
adc
dec
and
ja
hlt
adc
sub
lret
adc
mov
dec
xor
inc
add
inc
dec
stc
push
mov
pop
sub
pop
xor
xchg
push
addr16
fcompl
pop
cli
and
pop
sub
mov
clc
mov
pop
xor
in
xor
gs
daa
les
cmp
adc
leave
loop
mov
imul
cmp
mov
and
mov
inc
bound
adc
dec
and
bound
lock
rorb
pop
daa
testl
shrl
pop
lahf
jae
or
add
test
gs
pop
shll
mov
adc
call
push
push
and
ja
cmp
pop
fstl
out
xor
mov
mov
ds
arpl
negb
dec
xchg
mov
je
insb
sahf
xchg
jne
mov
cmpsb
sub
das
lea
cmp
adc
popf
sub
sub
cwtl
inc
cmp
daa
xor
fucomp
mov
ss
jmp
jbe
xchg
ret
out
jp
push
push
popf
xchg
push
jmp
jae
imul
nop
sub
std
or
jmp
adc
add
jmp
mov
push
lret
cmc
cltd
inc
imul
mov
pop
popa
and
cmpsb
jmp
xor
add
or
push
lea
cmc
pop
sbbl
mov
jge
cmp
repnz
je
push
popa
xchg
or
aam
xchg
jo
mov
inc
push
mov
data16
enter
clc
ds
insb
lret
fdiv
sbb
xor
shlb
sarl
cld
add
fcompp
lret
out
xor
jp
jl
pop
mov
sbb
ss
data16
mov
xchg
shlb
push
and
xchg
int3
jge
daa
sub
cli
jmp
or
cltd
out
inc
aaa
js
ljmp
xchg
lods
cmp
sbb
jae
inc
lahf
and
imul
add
adcb
scas
insb
adc
xchg
imul
fbstp
inc
sbb
addr16
push
pop
loopne
mov
stos
lods
pop
xchg
push
fimuls
ja
push
pop
call
adc
mov
scas
lcall
and
push
inc
xchg
cmp
sbb
imul
fidivl
fnstcw
rolb
add
out
add
rol
add
fwait
sbb
add
cli
movl
jb
mov
sbb
mov
xor
sub
xor
movl
cmpl
je
cmpl
jne
pushl
push
pushl
push
pushl
call
mov
dec
mov
jmp
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
cmpl
jne
mov
inc
mov
jmp
adc
add
sbb
add
imul
sub
mov
movl
cmpl
je
cmpl
jne
pushl
push
call
mov
dec
mov
jmp
mov
sub
cmp
ja
mov
xor
add
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
jmp
xor
mov
mov
jae
jg
ja
fsubr
mov
lahf
jge
jo
or
push
pop
hlt
outsl
jae
rorb
int3
push
mov
call
xchg
mov
mov
jne
and
push
mov
sub
clc
cmp
mov
mov
hlt
cmp
dec
stc
mov
mov
ret
push
lcall
inc
xchg
ds
fdivs
pop
fistl
push
xor
ja
or
data16
cmc
mov
push
fnsave
push
add
imul
or
mov
outsb
insl
xlat
dec
add
mov
dec
jmp
call
sub
stos
xor
leave
in
scas
xchg
xor
and
fimull
in
les
sbb
sbb
insb
aas
push
daa
or
es
ds
adcl
mov
mov
jg
jbe
push
stc
je
lea
lds
inc
cli
and
dec
push
sub
xchg
pop
rorl
mov
out
or
lret
jmp
sbb
jb
mov
pop
pop
ss
push
xchg
jecxz
fsts
mov
pop
mov
iret
pop
mov
roll
ss
cld
xchg
aas
pushl
mov
mov
std
xchg
sbb
mov
outsl
xchg
push
int
jle
lods
pop
cltd
xor
lahf
les
adc
push
imul
addr16
mov
shl
mov
and
inc
jne
out
xorb
fs
movsb
in
lret
xchg
push
sbb
mov
xchg
movsl
and
insl
pop
jge
xlat
scas
out
lcall
push
mov
push
sti
mov
movq
sbb
cmc
outsl
mov
push
xchg
pushf
jmp
xchg
jg
daa
fmull
scas
ja
adc
pop
push
pop
cmp
mov
pop
sbb
js
cmp
adc
sub
aas
mov
xchg
or
mov
pop
add
aas
jbe
push
cld
sub
mov
mov
xchg
shll
xor
jmp
push
pop
ss
jg
sti
cmp
add
insb
push
loop
mov
add
imul
sub
test
push
ret
xor
mov
addr16
es
orl
dec
cmc
fsubs
pop
cmpsl
jnp
cmp
out
sub
jle
fmuls
pop
or
repz
pop
push
xor
or
mov
or
pop
mov
mov
push
add
arpl
cwtl
mov
lret
push
shrl
jb
das
pop
push
push
cmc
scas
xchg
jae
jge
pop
inc
xor
add
orl
leave
dec
inc
fcmove
xchg
xchg
in
push
insw
rcl
popf
rolb
add
fnstcw
jb
sub
xchg
mov
and
xor
jns
bound
push
aad
jmp
ds
fs
inc
andl
fiadds
or
rcrb
add
in
and
lock
sbb
inc
imul
movsb
mov
ret
pop
push
leave
mov
cmpl
mov
ret
movsb
insb
pop
test
pop
jge
mov
cmp
cld
and
dec
sbb
lock
cltd
nop
push
sbb
mov
stos
mov
leave
test
aad
dec
out
das
adc
add
jmp
shlb
sub
lret
adc
jo
lahf
jge
jo
sbb
dec
imul
mov
mov
pop
adc
push
jp
cmpsb
pop
or
pop
pop
or
dec
aas
xor
fwait
andb
lea
notl
aam
mov
cmpsb
nop
sub
inc
and
out
pop
fisubrs
xchg
sub
sahf
je
mov
in
push
pop
aad
inc
mov
lods
cli
imul
clc
xor
or
add
test
xor
sub
clc
fmulp
mov
mov
subb
iret
cmp
imul
insb
jle
xchg
popf
divb
fs
ja
xor
xor
imul
in
loope
or
enter
flds
or
sbb
jb
lret
mov
out
dec
jnp
pop
imul
bound
inc
loope
es
push
lahf
js
xlat
cmp
jmp
gs
push
js
mov
ja
cmc
mov
sbb
out
fsts
pop
and
push
mov
jbe
jge
sbb
adc
mov
out
scas
lods
movsb
js
xchg
or
xchg
test
and
xor
pop
out
loope
enter
push
imul
lret
fldenv
jae
scas
inc
add
cmp
in
shlb
inc
dec
aam
adc
xchg
sbb
ljmp
add
nop
jne
imul
mov
cmc
mov
dec
adc
and
dec
push
push
jge
mov
mov
aas
xchg
loop
xchg
ret
imul
insb
xchg
mov
div
ret
adc
jg
inc
fs
mov
in
xor
lret
jns
add
aas
xchg
sub
test
test
sbb
pop
pop
ret
adc
mov
shll
ja
pop
adc
loop
cltd
lods
push
decl
sahf
pusha
lret
sbb
test
inc
pusha
adc
push
fcmovu
mov
outsb
data16
rorl
dec
mov
jne
xor
cmp
and
fdivl
aad
or
fucomi
loope
push
inc
xchg
int
jns
jmp
dec
out
enter
push
lahf
mov
add
popf
ss
jne
aaa
or
fs
push
inc
addr16
iret
sbb
iret
add
mov
mov
leave
std
jae
inc
sahf
in
mov
test
mov
push
pop
adc
aaa
leave
push
sbb
push
enter
aaa
jmp
push
mov
cmp
jbe
sub
insl
mov
mov
sti
lea
repnz
dec
jle
push
dec
cmp
mov
insb
add
sub
xchg
dec
lcall
hlt
inc
xchg
mov
lods
push
xor
jne
les
push
push
adc
add
xchg
pop
xchg
and
stos
out
fstl
add
inc
into
lea
and
jb
fucomp
in
vpsubw
mov
fisttpll
xor
std
cld
pop
jno
pop
jp
mov
adc
popf
push
inc
test
in
or
adc
inc
push
adc
adc
inc
push
rclb
incb
sub
scas
xlat
mov
mov
sub
cmp
ja
mov
jmp
mov
jmp
cmp
mov
loope
loop
pop
cmp
pushf
rol
jo
lahf
jge
jo
sbb
scas
mov
pop
mov
hlt
call
add
dec
mov
dec
xchg
add
pop
push
cltd
test
and
pop
into
mov
dec
leave
jmp
jbe
jnp
jecxz
xor
lods
mov
adc
enter
pop
push
jne
shrb
jo
xlat
in
mov
fidivrs
and
mov
xchg
mov
mov
in
jns
out
jbe
and
add
dec
jecxz
imul
push
rcll
in
xchg
mov
or
and
lods
sub
xorb
icebp
dec
xchg
push
add
test
pop
mov
cmp
xor
jmp
shll
jnp
push
cld
or
jmp
je
popa
inc
mov
sbb
push
nop
das
sbb
arpl
idivb
sub
sub
adc
aas
loope
push
data16
push
imul
pop
nop
lret
ljmp
stc
in
enter
bound
sti
pop
out
cmp
mov
jmp
mov
or
pop
push
or
test
les
std
or
dec
jl
and
sti
mov
sbbb
inc
into
lret
lods
and
andl
test
loope
stc
lock
and
mov
cltd
cmp
arpl
ficoml
mov
subb
pop
lahf
imul
js
aam
sahf
inc
mov
int
out
mov
loope
jne
push
popf
icebp
mov
clc
mov
inc
or
pop
sarl
loope
fnstenv
jb
mov
enter
push
lods
mov
or
addb
std
sbb
xor
hlt
sub
inc
mov
out
je
fcoms
loope
in
mov
push
outsl
jb
stc
jp
inc
hlt
sub
cltd
aas
lds
lods
shll
dec
enter
add
pop
lds
aad
popf
and
mov
jbe
jmp
pop
lds
mov
mov
xchg
jp
xor
dec
mov
jl
xchg
into
repnz
mov
sub
popa
mov
mov
mov
mov
add
test
movsl
inc
test
push
cld
xchg
aas
insl
mov
in
cmp
sbb
inc
mov
jae
mov
rorb
insl
sub
pop
ret
dec
xlat
dec
popl
jno
xchg
or
add
rcll
les
and
lcall
xchg
incl
lcall
test
xor
cld
enter
dec
jbe
inc
xchg
or
call
mov
int
mov
stc
cmp
jp
or
lret
inc
mov
test
scas
data16
jge
faddp
push
mov
ret
mov
or
and
xchg
test
cmc
movsl
jecxz
xor
mov
out
stos
pop
mov
stos
pop
adc
pop
lock
xchg
adc
mov
xor
aaa
inc
sbb
cli
jbe
dec
lods
xchg
xlat
outsl
adc
inc
enter
aam
out
mov
or
aam
adc
sti
add
jp
test
mov
xor
shlb
mov
jmp
aad
push
dec
xchg
mov
loop
mov
into
mov
jmp
mov
movsb
out
pop
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
jmp
xchg
fcomi
push
jb
mov
shlb
and
pusha
xorl
jge
jo
dec
push
mov
sub
ss
insb
mov
xchg
outsl
jno
mov
dec
insb
push
pop
les
repz
mov
mov
and
push
inc
add
clc
aam
xchg
inc
or
clc
sahf
add
aaa
test
clc
rcrb
xchg
push
jbe
pop
dec
jne
test
jae
imul
lret
adc
pop
inc
fstl
repz
inc
daa
enter
pop
adc
ja
cmp
jmp
inc
jne
sub
inc
dec
lds
push
mov
lret
xor
push
jg
ds
icebp
sbb
inc
adc
out
adc
ja
icebp
lcall
xlat
mov
xchg
cmp
int3
cmp
loope
xchg
or
data16
add
cmp
daa
je
loop
sbb
cmp
push
subl
mov
aam
icebp
add
sar
adc
or
cmpsb
stos
aam
xchg
into
into
or
sbb
sbb
imul
xorl
sub
xchg
outsl
cmp
push
aaa
push
dec
jge
cmp
mov
push
adc
jnp
pop
jo
xchg
imul
cld
add
mov
out
int3
les
sbb
pop
roll
sbb
mov
pusha
or
xor
lods
jno
cmp
aaa
fildll
pop
dec
out
mov
cs
aad
push
enter
cmc
jb
out
mov
sbb
jno
in
mov
popf
dec
popa
cmpsl
dec
scas
repz
xchg
xor
mov
adcl
or
push
xlat
ss
lahf
jmp
mov
stos
and
ds
dec
adcb
subb
data16
popa
xchg
and
inc
and
clc
cli
imul
fisubrl
mov
fneni(8087
rorl
sbb
xor
push
aad
and
push
call
pop
mov
mov
cmovg
and
outsb
fldcw
into
add
and
dec
xlat
cltd
add
pop
mov
mov
jmp
push
push
push
dec
and
dec
or
lret
stos
pop
iret
xchg
or
mov
xchg
dec
arpl
mov
popf
rcrl
das
mov
pop
mov
mov
cmp
inc
std
fbstp
adc
xor
sub
shll
inc
adc
cwtl
pop
sub
ret
mov
pop
dec
xchg
dec
stos
sub
sahf
fs
jge
mov
jae
scas
pop
notl
shlb
int
cmp
add
cltd
ss
sbb
push
mov
test
adc
sub
sbb
cmp
jmp
test
mov
stc
rclb
inc
pop
mov
stos
enter
mov
add
sbb
and
push
test
add
repnz
sub
lock
orl
sbb
dec
adc
dec
sbb
push
inc
xor
jbe
dec
jl
ss
xor
inc
xchg
cmpsb
cmpsl
sbbb
out
fldl
xlat
sub
xchg
out
scas
fdivrp
roll
rorb
cmp
ja
mov
jmp
mov
mov
xor
xor
add
add
imul
mov
mov
sub
cmp
mov
jbe
jmp
xchg
dec
inc
inc
inc
push
xchg
dec
fdivs
adc
jo
lahf
jge
jo
rcrl
aad
xchg
aam
add
enter
imul
cmp
test
xor
loope
sahf
pop
inc
add
aaa
add
sub
cld
lods
out
mov
ds
inc
jp
jnp
gs
sub
jbe
cmp
loop
fcoms
cwtl
or
daa
sbb
or
inc
fildll
sahf
adc
sbb
cmp
xchg
mov
out
sub
fsubl
popa
imul
mov
sahf
xchg
jb
pushf
rcrl
inc
es
mov
in
mov
idivb
cmp
adc
adc
das
fcomps
inc
xor
add
cld
outsl
jns
jo
fwait
dec
cli
inc
aaa
jae
and
mov
inc
sbb
fcmovb
mov
add
pushf
xchg
xor
test
jecxz
test
or
add
mov
popf
lahf
inc
lret
or
jmp
mov
out
xchg
and
leave
in
test
mov
out
gs
mov
rorl
ret
lods
push
cld
incb
je
pop
outsb
mov
jp
es
mov
cli
sub
mov
push
leave
pop
leave
ss
lds
dec
in
cmpsl
hlt
addl
fdivl
cs
ss
push
stos
lods
jle
data16
adc
adc
inc
pop
adc
repnz
mull
rcrl
xor
or
lea
test
fbstp
push
and
xchg
push
xor
es
push
cs
and
scas
aad
pushf
mov
ret
popa
dec
in
mov
xchg
shl
mov
insl
jno
aam
push
jmp
cmc
pop
or
adc
out
stos
mov
imul
pop
xor
call
sub
fldcw
push
xchg
xchg
test
rcrb
xor
dec
and
shr
loopne
mov
mov
nop
xor
lret
test
mov
jp
inc
and
stc
cmp
shll
mov
xchg
or
mov
lods
xchg
xchg
dec
mov
mov
cmp
imul
sub
fcmovnb
out
pop
add
jg
push
inc
inc
dec
push
test
fcomip
syscall
inc
jbe
ljmp
mov
xor
inc
xor
sub
subl
scas
mov
sub
mov
add
faddl
gs
sub
sbb
mov
cltd
cmp
int
jbe
stos
sbb
sti
lcall
aaa
jno
pushl
cmp
mov
icebp
movsb
shll
ljmp
fs
xchg
stos
sub
dec
imul
popf
icebp
inc
aad
fldcw
sub
inc
or
jl
shrb
cltd
jno
daa
stc
or
std
fs
jns
cmp
insl
in
cli
push
cmpsl
in
xor
xor
pushl
jne
dec
cmp
add
repnz
xchg
negb
in
cmp
in
or
pop
fldcw
addr16
push
mov
dec
jmp
loop
jno
popa
test
and
xor
test
mov
addr16
and
sbb
jae
cmp
jecxz
ret
outsb
dec
fisubrs
jecxz
jp
mov
jge
xor
xor
add
add
imul
mov
mov
mov
mov
add
movl
mov
movl
movl
mov
xor
add
jmp
mov
jmp
lcall
out
mov
mov
lahf
jge
jo
out
pop
pop
jmp
pop
xor
xchg
icebp
xlat
sbb
into
cbtw
sub
jle
movsl
dec
gs
push
dec
sbbb
dec
ret
ja
das
sub
dec
or
dec
xchg
fidivrs
cs
inc
sbb
pop
xchg
out
mov
dec
int
aad
xlat
mov
inc
pop
stos
adc
jp
inc
xchg
insb
add
mov
fadd
loop
sub
xor
dec
push
xchg
pop
les
jmp
jp
loopne
lret
pusha
mov
xor
jg
cmpsl
xor
jnp
inc
mov
cs
imul
xchg
pop
mov
stos
in
mov
mov
xor
mov
xchg
imul
pop
pop
lods
imul
loop
cmpsl
or
push
nop
pushf
adc
test
cltd
movsl
cmpsl
push
sbb
push
and
pop
xor
pop
scas
fmuls
push
jge
push
fldl
insb
enter
sahf
jb
or
push
sahf
lcall
mov
pusha
sbbb
inc
add
pop
lahf
enter
sub
fwait
and
jecxz
jbe
mov
jne
fcmovu
movsl
dec
push
fmuls
std
movsb
popl
cmp
inc
xor
dec
sub
dec
rclb
and
fwait
imulb
xchg
stc
xor
jb
push
xor
popa
pop
and
jnp
xchg
inc
cmp
mov
push
ret
mov
sbb
and
pop
mov
jp
fst
cmp
std
xchg
sub
adc
xchg
repnz
popa
lahf
pop
or
cmp
cs
inc
int
out
stos
loop
lock
adc
adc
or
dec
jne
rep
popa
nop
adc
mov
mov
mov
add
movsl
insb
or
mov
sub
sbb
dec
cmp
xchg
faddl
shll
mov
jo
nop
add
test
call
addr16
sub
lret
sti
mov
adc
pusha
inc
aaa
repnz
inc
add
sbb
popa
ds
cltd
scas
mov
je
icebp
shrl
mov
es
ficoms
repnz
and
rcll
imul
test
push
jge
push
mov
jns
stc
lods
cmp
das
push
lea
inc
cmp
xor
xor
mov
repnz
clc
xlat
or
mov
mov
push
clc
lret
pushf
cld
repz
pop
pop
js
push
jnp
push
mov
jno
push
sbb
ljmp
ja
std
popf
lds
xor
xor
ljmp
fcoms
imul
adc
adc
jae
in
push
xor
cmpb
aad
ret
sahf
mov
int3
popf
sbb
mov
mov
push
sub
fcomi
lret
in
stos
adc
movsb
and
in
cmc
stos
add
adc
rolb
stos
rolb
jge
pop
jns
xchg
push
lahf
arpl
iret
mov
fisttpll
sub
push
es
pop
push
cmp
insl
mov
mov
call
es
mov
pushf
pop
jle
rsqrtps
lretw
push
clc
push
shlb
test
jle
or
add
into
mov
mov
in
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
jmp
xchg
dec
push
adc
push
xchg
dec
lock
pop
pop
js
mov
lahf
jge
jo
out
dec
xchg
pop
outsl
cmp
rclb
mov
repnz
addr16
test
repnz
scas
cmc
xchg
cmp
data16
dec
cmpsb
lock
xchg
jg
dec
lahf
lds
mov
or
gs
mov
scas
jg
mov
push
mov
lods
subl
xchg
inc
xchg
mov
push
addl
fwait
adc
clc
icebp
add
push
inc
clc
dec
add
outsb
xor
fstl
out
lds
dec
int
loopne
mov
stc
and
jl
jbe
stos
lds
insb
dec
lods
sbb
ss
fisttps
fwait
scas
aas
insl
mov
push
xchg
roll
data16
mov
pop
xchg
jno
mov
outsl
push
mov
out
sub
stc
xlat
sbb
inc
repnz
movsb
pop
push
pop
scas
or
fstpt
fisttpll
imul
xchg
or
test
and
insb
mov
outsb
or
jl
insb
fadd
mov
mov
push
xor
lods
lods
rol
daa
mov
pop
xor
xchg
and
add
in
add
and
inc
inc
arpl
xchg
xchg
lahf
cltd
orl
push
fmuls
into
mov
in
popa
adc
xchg
pop
mov
inc
stos
mov
inc
jmp
nop
daa
xchg
mov
mov
scas
mov
mov
popf
inc
fmul
xchg
or
push
sub
fcom
xchg
test
cmp
dec
cmp
loop
cwtl
pop
mov
arpl
cmp
push
repnz
adc
or
push
mov
mov
pop
out
cmpsb
jo
sbb
mov
adcl
insb
int
pop
gs
jns
nop
jae
loop
inc
fdivs
jne
sub
lret
mov
sbb
lods
insl
mov
push
pop
sti
cmp
in
xchg
push
inc
das
in
or
mov
sbb
xcrypt-ecb
cmpsl
or
imul
dec
push
lahf
fptan
imul
js
sbb
mov
or
xor
xchg
lea
aaa
cli
sbb
and
push
ds
ret
xor
pop
mov
loopne
pop
cmp
mov
pop
mov
bound
xchg
xchg
and
sti
xchg
xor
pushf
add
mov
push
test
pusha
repnz
nop
dec
outsl
push
jae
test
outsl
or
jge
jl
outsl
inc
mov
js
jg
nop
lds
adc
lds
lret
hlt
jae
sysenter
insb
pop
mov
push
popf
lea
sbb
outsl
mov
ljmp
hlt
ljmp
jg
add
ret
mov
jo
push
cmpsl
inc
mov
fiadds
jbe
sub
pop
xchg
cli
inc
orl
mov
or
sub
add
mov
sti
arpl
push
iret
or
pop
addr16
jge
int3
push
fisubl
in
push
std
or
or
xor
dec
movsl
sbb
es
scas
mov
dec
ja
cltd
xor
add
sbbl
jp
jp
fidivl
pop
jge
fdivs
add
das
outsl
cwtl
enter
jge
xor
and
jae
inc
mov
xor
add
mov
mov
mov
mov
xor
jmp
sbb
pop
pop
pop
pop
sbb
adc
inc
pop
sbb
in
xchg
jo
lahf
jge
jo
dec
fs
adc
shl
sub
lods
pop
movsl
pop
in
mov
dec
adc
mov
push
add
into
ljmp
movsb
mov
sbb
imul
jle
aad
pop
push
or
adc
mov
mov
in
les
js
lds
sub
cli
push
mov
sub
xlat
pop
shrl
sbb
scas
push
ret
sbb
into
imul
jmp
fdivl
add
fs
cmp
cmp
test
push
mov
cld
pushf
popa
push
jb
roll
jp
imul
addr16
call
mov
and
js
and
sahf
data16
or
in
mov
cmpsl
lahf
lcall
mov
push
add
mov
jnp
ret
lods
mov
decl
mov
xchg
xchg
or
and
lcall
and
xlat
sub
cld
pop
insl
xchg
icebp
test
cmp
inc
imul
cmc
push
push
dec
mov
out
je
jg
sbb
cmp
push
aad
loop
or
pop
push
mov
loop
xor
and
andl
ret
in
inc
xor
outsb
enter
test
cmp
cmp
movsl
fdiv
ror
pop
negl
shrb
pop
inc
push
cmpsl
and
jmp
inc
jle
sbb
fldcw
cmp
mov
cmpsb
cmp
cmp
add
in
outsl
xor
add
and
or
sbb
cmp
adc
movsb
pop
jo
lock
or
repz
push
push
cs
xchg
dec
dec
jbe
insl
gs
mov
ds
outsl
pop
xchg
sarb
mov
call
sar
les
cwtl
jne
push
add
jg
movsl
mov
xchg
jmp
aas
lahf
jp,pt
jecxz
cmc
add
dec
push
or
sbb
inc
pop
mov
push
sbb
jae
jns
cmp
jle
adc
add
insl
sbb
movb
fistl
xchg
mov
sbb
mov
jle
push
mov
push
int3
xchg
mov
sbb
repnz
xchg
mov
and
lea
rorl
xchg
les
adc
sub
jne
rcll
les
sub
inc
stc
dec
cmc
pop
inc
test
or
and
sbb
pushf
mov
xor
cmp
loopne
or
ret
test
xchg
daa
xchg
push
cmpsb
addr16
fs
mov
in
push
jmp
push
xchg
out
rol
outsb
lret
mov
push
push
jg
sub
dec
mull
mov
cmp
pushf
xor
inc
push
xchg
sbb
sbb
popf
mov
loope
cld
xor
push
pop
mov
fisttps
sbb
fs
test
push
sbb
bound
pop
test
mov
jp
in
jg
stos
mov
aam
adc
jge
mov
mov
push
lods
push
out
mov
js
and
mov
repnz
jno
lods
shlb
push
out
loop
rorl
outsl
pop
or
or
adc
lods
lcall
mov
cmp
fcmovbe
or
es
fs
mov
push
dec
cld
or
hlt
cltd
scas
jle
push
sub
add
add
imul
add
mov
mov
mov
xor
add
imul
mov
xor
sub
mov
mov
xor
add
imul
mov
xor
sub
lea
cmp
jmp
mov
popa
jbe
xchg
orl
jo
lahf
jge
jo
lret
dec
fsubs
push
mov
stc
dec
lods
cmp
outsb
sub
adc
xor
sti
cwtl
xchg
push
sbb
cmp
or
subl
add
lea
fwait
enter
arpl
outsl
fwait
and
dec
xor
inc
pop
sub
push
out
aad
pushf
cmpsb
addl
ja
push
push
mov
cwtl
pop
dec
and
popf
inc
xlat
leave
sub
ffree
xlat
mov
roll
or
sub
jns
arpl
sub
lods
cmpsb
fistl
mov
pop
lret
sub
rorb
jle
shr
or
sub
cltd
dec
or
mov
leave
popf
pop
shlb
push
jmp
fs
roll
push
js
jle
push
sarl
lods
jns
xchg
pop
mov
inc
outsb
mov
lods
add
and
mov
mov
add
jmp
jbe
loopne
adc
ret
lock
test
addl
mov
adc
and
cmp
add
nop
xchg
rcll
cli
jge
aaa
int
fisubrs
fs
mull
xor
data16
lret
jg
rcll
pushf
xor
lcall
aad
cs
in
call
ficomps
inc
xchg
test
jecxz
cld
sub
icebp
sbb
aaa
push
rclb
fistpl
stc
cmp
loop
aad
lea
sub
jle
ret
jae
dec
mov
arpl
fs
jne
mov
sub
mov
jno
xchg
aas
out
xchg
mov
cli
push
cld
hlt
pop
lods
pushf
enter
mov
sbb
add
out
hlt
jl
mov
mov
mov
insb
fistl
add
or
fwait
pusha
jmp
repnz
gs
out
add
adc
ljmp
fisubrs
sahf
lret
mov
sahf
push
fwait
movsl
push
adc
std
test
dec
push
sarl
into
clc
jno,pt
cmc
in
push
cmp
jg
dec
into
and
out
cwtl
aaa
mov
bnd
out
repnz
and
pop
scas
xor
xor
mov
push
mov
loopne
xor
pusha
push
popa
or
icebp
pushf
push
inc
jne
test
and
repnz
stos
pusha
dec
pushf
mov
or
pop
out
mov
arpl
pop
dec
rorl
stc
jle
iret
xchg
xchg
movsl
jne
mov
pop
cs
lock
hlt
jb
push
fldl
adc
outsl
in
inc
outsb
or
xchg
lcall
fnsave
dec
fisubrs
cmpsb
add
sub
jl
adc
cmp
push
out
scas
push
and
jb
leave
lods
stos
inc
insb
movsb
sbb
lds
mov
add
fyl2xp1
or
fcoms
andl
mov
sub
or
test
ja
jo
inc
bound
mov
dec
mov
jp
sbb
sahf
cltd
sub
mov
out
insl
sbb
call
inc
loope
pop
int3
sti
xchg
xorb
lfs
or
cmpsl
mov
pop
lcall
pop
fsubl
cmp
push
pop
je
dec
pop
jo
stos
addr16
out
pusha
dec
push
inc
int
sbb
pop
cs
push
out
jbe
push
dec
incl
inc
ret
data16
decl
fdivl
rolb
rorl
scas
xlat
mov
xor
add
jmp
xor
out
icebp
xor
cmp
lods
hlt
inc
hlt
stos
popf
jo
lahf
jge
jo
test
mov
xchg
and
inc
push
fsubrs
mov
popa
sub
pop
stc
test
mov
roll
sbb
xchg
pop
pop
aaa
mov
hlt
cmp
sarb
loope
adc
push
lock
outsb
loop
inc
jb
ret
mov
ja
or
imul
dec
dec
and
and
cli
adc
add
push
mov
jge
out
pop
pop
hlt
je
xor
jbe
push
ss
xchg
mov
imul
lret
js
aam
xchg
sbb
push
push
leave
jbe
sbbb
std
adc
out
loop
push
or
xor
outsl
and
les
lcall
outsb
sub
mov
fwait
sbb
jge
xchg
fcoml
bound
loope
sbb
and
fldenv
or
pop
dec
out
dec
lock
pushl
push
push
icebp
xor
cld
mov
push
lahf
pop
mov
out
push
mov
xchg
daa
mov
mov
add
mov
pop
sub
and
in
mov
outsl
sbb
mov
aam
rorl
mov
cmpsl
pop
mov
sti
testb
in
or
mov
mov
jl
sub
push
mov
test
mov
out
pop
iret
lcall
sub
xorb
pop
mov
jmp
push
mov
cltd
dec
decb
lret
cmp
and
inc
pop
push
ja
lea
push
cltd
add
inc
or
jo
jns
and
fsts
jecxz
jecxz
aas
or
rcll
cwtl
arpl
test
jg
mov
pop
dec
gs
pop
sbb
lock
mov
pop
mov
add
cld
mov
or
or
mov
lods
inc
stos
inc
sub
icebp
test
jb
aas
pop
xor
push
stc
dec
or
ljmp
stc
pushf
cmp
test
sbb
jl
dec
adc
jae
mov
mov
sbb
jb
pop
rcrb
outsb
insl
xor
inc
cmp
mov
jnp
popa
inc
imul
dec
mov
jp
fistps
push
or
out
lods
std
mov
push
test
jmp
ds
test
loope
pop
cmp
lret
cmpb
std
out
outsl
mov
cbtw
test
or
enter
cmp
push
adc
jns
mov
xchg
xchg
js
insb
sub
push
stos
movsl
lods
push
adc
sbb
lods
out
iret
inc
dec
push
jo
hlt
jbe
mov
jle
xor
pop
pop
mov
or
pop
fsubrl
or
push
test
add
cwtl
push
aas
lcall
movsb
enter
outsl
pop
pop
fdivrl
dec
and
stos
call
jmp
or
push
hlt
pop
mov
mov
ljmp
jg
lcall
jge
cmp
push
fcoms
jmp
dec
mov
add
bound
add
sbb
sub
xor
rcrl
xchg
aas
mov
xor
das
adc
iret
not
cmp
jno
lret
js
jb
mov
movsb
out
inc
lcall
adc
es
out
stos
fwait
or
std
mov
lea
mov
mov
xor
mov
sub
jmp
out
inc
push
jno
ljmp
addr16
out
cltd
jo
lahf
jge
jo
mov
lcall
jmp
dec
lds
push
mov
mov
mov
stc
lock
aam
and
out
xchg
jo
xor
into
dec
scas
sub
movsb
pusha
in
xor
scas
ja
outsl
or
into
sahf
pop
outsb
jbe
test
lock
cs
sbb
out
cmpsb
clc
arpl
pop
lahf
insb
lock
sub
adc
addr16
pop
jne
sbb
sub
in
ret
or
ja
rcll
imul
add
inc
add
loope
stos
aaa
lcall
mov
int3
mov
fdiv
ret
jb
or
lods
bound
mov
mov
insb
mov
xlat
xor
lods
fs
mov
lock
inc
mov
in
test
push
push
cld
or
inc
inc
jnp
das
jb
out
sti
clc
in
xchg
scas
xchg
mov
arpl
adc
mov
popf
ret
inc
jle
inc
into
cwtl
sbb
mov
shll
cmp
fistl
dec
sbb
sbb
push
and
adc
jl
push
in
movsb
daa
sub
cmp
divl
add
pusha
add
fdivs
mul
dec
inc
mov
jb
fnstcw
stos
sub
fisubrl
outsl
lret
sbb
inc
stos
jecxz
outsb
dec
push
and
pop
popa
fsubrl
push
pushf
cmp
in
bound
dec
hlt
push
loop
cmp
sarl
fucomp
pushl
fwait
out
lea
pop
mov
adc
arpl
push
dec
jae
std
scas
push
cltd
and
mov
pop
jne
repnz
push
mov
push
mov
out
int
shlb
call
jae
testb
repnz
lods
xchg
and
add
mov
mov
xor
jge
fwait
xor
adc
lcall
repnz
fwait
mov
jl
inc
push
push
cmc
sub
sbb
cli
stos
jno
pop
or
mov
imul
jnp
add
popf
movsl
int
xor
mov
jb
test
pop
pop
repz
js
adc
js
push
dec
mov
stc
clc
dec
cmp
int3
or
sub
mov
pop
outsl
inc
pop
lods
push
pop
dec
in
scas
cmp
inc
aad
dec
fcmovnbe
test
repnz
jo
lods
xchg
or
pushl
sub
int3
xchg
inc
jne
sub
rorl
xchg
mov
mov
pop
clc
push
lret
jae
and
lds
enter
lret
arpl
sub
idivb
mov
push
dec
cmpsl
mov
outsb
jae
dec
pushf
dec
cmp
mov
fwait
adc
inc
pusha
ss
inc
pusha
subl
fwait
stc
and
movsl
rcrl
add
sub
add
or
pop
sbb
cmp
mov
sbb
incl
sub
sbbl
adc
popa
push
mov
inc
sub
test
rol
push
push
adc
testb
jge
fptan
mov
xor
lahf
mov
mov
loop
cld
loopne
sub
imul
sahf
fs
push
fldcw
rcrb
xor
fcomps
jle
stos
sbbb
mov
pop
das
sub
add
pop
add
mov
mov
xor
add
imul
cmp
jbe
pop
pop
leave
ret
push
mov
sub
orl
push
sbbl
call
andl
test
jne
xor
movl
jmp
adcl
push
call
sbbl
test
movl
je
call
cltd
movl
cmp
jne
movl
cmp
jne
push
push
adcl
push
push
push
push
push
xorl
push
orl
call
movl
jmp
push
call
test
je
sbbl
push
andl
call
movl
jmp
push
mov
add
mov
andl
mov
inc
mov
cmpl
jne
push
push
push
pushl
push
pushl
call
cmpl
jne
mov
inc
mov
cmpl
jb
addl
movl
lea
adc
mov
adcl
lea
movl
cmpl
je
cmpl
jne
pushl
pushl
call
xor
add
dec
mov
jmp
movl
cmpl
je
cmpl
jne
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
movl
cmpl
je
cmpl
jne
push
push
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
movl
cmpl
je
cmpl
jne
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
or
mov
or
mov
or
mov
mov
push
mov
subl
xor
push
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
pushl
push
push
call
jmp
mov
add
mov
mov
mov
movl
cmp
mov
movl
je
movl
cmpl
je
cmpl
jne
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
sbbl
xor
andl
add
imul
mov
movl
jmp
sbb
xor
add
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
or
xor
sub
add
mov
mov
mov
xor
add
movl
cmp
jne
subl
pushl
andl
pushl
adcl
call
mov
sbb
mov
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jb
mov
mov
or
mov
movl
cmpl
je
cmpl
jne
pushl
pushl
call
mov
dec
mov
jmp
mov
mov
mov
mov
mov
mov
mov
movl
mov
mov
mov
xor
xor
add
mov
xor
xor
add
lea
cmp
ja
mov
xor
lea
push
mov
xor
lea
push
mov
pushl
call
mov
xor
lea
mov
mov
xor
xor
add
mov
xor
lea
cmp
jbe
mov
mov
mov
mov
mov
mov
mov
sub
xor
mov
mov
cmp
je
mov
mov
xor
add
cmp
je
mov
mov
mov
mov
pushl
mov
pushl
add
mov
mov
pushl
call
mov
mov
mov
jmp
mov
mov
xor
add
cmp
jne
mov
xor
add
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
mov
mov
mov
mov
movl
mov
xor
add
mov
mov
mov
mov
mov
mov
push
pop
sub
add
movl
mov
mov
mov
mov
mov
mov
mov
xor
add
mov
lea
mov
mov
xor
add
mov
lea
push
mov
xor
add
push
mov
push
pushl
call
xor
mov
sub
push
mov
add
push
call
inc
cmp
jb
mov
call
lea
mov
mov
mov
pushl
lea
push
call
mov
push
add
push
lea
push
call
mov
mov
pop
pop
pop
leave
ret
push
mov
sub
mov
mov
mov
adc
mov
mov
xorl
push
push
mov
xor
not
push
mov
add
sbb
jmp
sub
gs
mov
fstps
cmc
dec
push
jg
jo
jb
andb
inc
pop
cli
std
pop
aas
into
repz
sarl
cmp
mov
pop
div
push
pop
mov
cmp
push
fsubs
sbb
mov
iret
sub
or
cmpsb
inc
jns
cmp
and
fstps
lods
jb
inc
repz
xchg
push
fcoms
shrl
inc
and
cmp
xchg
or
mov
repnz
xchg
cli
add
and
and
nop
push
ljmp
mov
out
out
cmp
fs
or
cmpl
push
arpl
test
fs
je
cmp
adc
loopne
adc
pop
leave
mov
testb
inc
cs
add
pop
repnz
cmp
pop
xchg
dec
pusha
mov
jecxz
clc
aad
mov
jb
xchg
cli
xchg
imul
sub
int
xor
dec
arpl
ja
adc
andb
aaa
mov
lods
jns
mov
mov
inc
cmp
movsb
loope
cmc
push
lret
loop
mov
mov
add
mov
lea
andl
mov
inc
mov
cmpl
jne
pushl
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
pushl
push
call
cmpl
jne
mov
inc
mov
jmp
mov
mov
sub
imul
mov
sub
mov
and
mov
sbb
xor
add
mov
jmp
icebp
ja
pop
inc
scas
icebp
jno
push
inc
movsl
jg
loop
cmp
jo
cmp
jg
aaa
out
cmp
in
test
xor
pop
mov
sbb
in
xchg
and
cltd
cltd
rolb
mov
jecxz
mov
cld
mov
dec
repnz
xchg
add
push
insb
test
stos
or
dec
jecxz
xchg
shll
subb
flds
scas
cmp
xor
mov
mov
and
aam
sbb
ret
cmp
test
je
push
mov
mov
xchg
jge
and
out
mov
jne
add
jo
aam
shll
or
pusha
cmp
cltd
and
cmc
push
lods
cmp
adc
in
out
xor
stos
inc
sbb
fdivp
hlt
mov
jns
dec
stc
mov
cmp
lcall
mov
pusha
add
int3
mov
out
push
mov
sbb
test
out
mov
roll
testl
adc
test
sbb
dec
lahf
pop
inc
icebp
inc
inc
xor
shl
imul
inc
pusha
in
push
adc
stc
daa
in
cld
mov
ljmp
mov
dec
sti
jl
add
int3
mov
andl
jle
dec
add
adc
mov
mov
xchg
jle
cwtl
mov
adc
inc
call
and
lea
mov
jmp
rorl
sbb
jbe
mov
jo
das
jg
sbb
sub
xor
frstor
adc
sub
jmp
xchg
mov
bound
and
aam
jecxz
call
fimull
shl
out
icebp
scas
sbb
inc
sahf
dec
mov
movsb
movsb
negl
jecxz
xchg
mov
mov
xchg
mov
adc
xchg
outsl
pop
rclb
dec
adc
dec
xchg
imul
or
sub
rcl
dec
add
testb
mov
mov
hlt
ja
jnp
ja
lea
cld
scas
mov
push
cwtl
enter
inc
add
and
dec
daa
sub
mov
shrb
aaa
movsb
adc
add
out
iret
adc
dec
or
mov
mov
lds
stc
stos
sbb
cld
sub
cltd
loopne
add
lock
lcall
sub
mov
mov
ds
jne
adc
shlb
adc
dec
dec
aaa
push
jl
popa
clc
inc
adc
xchg
fisubs
cmc
jmp
lahf
cmp
mov
shr
dec
jae
sbb
cmp
insb
dec
xor
jns
or
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
jmp
neg
mov
add
xor
add
sub
mov
mov
adc
mov
mov
adcl
jmp
cmp
in
fcomi
jecxz
icebp
xor
iret
cmpsb
add
jecxz
push
mov
jo
je
xchg
xorb
cmp
sarb
or
ret
cmp
mov
lea
xchg
in
or
adc
xchg
push
jbe
aam
sbb
sbb
push
lods
dec
xchg
stos
test
fnstenv
add
sub
adc
fcom
je
add
ds
loop
mov
pusha
imul
pushf
mov
jo
or
push
cmpsl
and
mov
loop
sub
or
jecxz
cltd
ja
repnz
call
scas
std
push
push
sbb
xorb
cld
outsb
cmpsl
jp
push
xchg
push
in
inc
test
or
sbb
and
fisttpl
adc
pop
jnp
push
inc
xchg
call
dec
js
daa
outsb
cmpsl
inc
jnp
add
lds
dec
xor
sarb
or
arpl
fld
js
call
stos
xchg
outsl
add
popl
out
mov
outsb
fiaddl
inc
dec
scas
mov
lds
cli
sbbl
push
push
and
mov
cmpsl
adc
in
test
pop
cli
fisubl
lea
test
fcmovb
xor
add
aaa
mov
sub
leave
sbb
cld
inc
add
add
mov
xorl
movzwl
add
neg
movl
sbb
mov
mov
sbb
mov
xorl
xor
andl
add
cmp
jne
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
push
call
cmpl
jne
xor
add
inc
mov
jmp
movzbl
adc
mov
xorl
mov
andl
xor
notl
add
movl
cmp
movl
jmp
fistpl
shlb
jbe
icebp
shll
jo
jg
jo
dec
fistpl
ror
cs
rcll
rcrb
mov
cmc
and
adc
test
cmpsl
lea
push
jae
arpl
mov
mov
push
nop
in
out
mov
lret
push
mov
inc
test
fs
sahf
jno
jmp
std
add
xor
cmp
cmp
sbb
push
xchg
push
mov
cmp
mov
dec
outsl
mov
sets
add
out
jno
jmp
rcll
push
mov
dec
xchg
dec
jmp
or
mov
push
and
test
js
fisubrs
imul
repz
fistpl
adc
xchg
cwtl
icebp
fisubrs
int
fwait
pop
mov
cwtl
add
arpl
test
jnp
and
cltd
into
jg
push
mov
add
js
or
pop
sbb
sub
lods
out
mov
inc
pop
movsb
mov
insl
push
xorb
pop
pop
xor
adc
out
or
lea
adc
lahf
cmp
pop
leave
jmp
mull
dec
movsl
imul
scas
fmul
mov
movsl
jl
xchg
sub
jne
adc
jmp
add
add
mov
sbb
mov
adc
xor
add
mov
sbb
mov
adc
mov
movl
cmpl
je
cmpl
jne
push
push
push
pushl
push
call
cmpl
jne
xor
or
dec
mov
mov
dec
mov
jmp
xor
mov
sub
add
mov
mov
mov
movzwl
add
mov
mov
mov
xor
lea
xor
sub
mov
movzwl
jmp
or
shrb
mov
inc
pop
mov
pop
jecxz
imull
jo
ret
mov
lcall
mov
xor
movsl
dec
dec
inc
xchg
mov
xchg
ss
and
ja
xor
out
inc
adc
sbb
cmp
xor
and
xchg
xor
lds
pop
jnp
xchg
and
mov
fisubs
fildl
fnsave
push
dec
jb
enter
outsl
test
cmp
add
fs
das
adc
adc
mov
pop
pop
clc
aas
fcmovb
add
mov
cwtl
cmp
cmp
popa
dec
in
xor
mov
add
jp
sbb
cmpsl
cmpsl
iret
and
clc
rcrl
xor
pushl
and
mov
cs
in
lea
push
sub
jp
jno
mov
adc
adc
nop
iret
mov
sub
mov
push
stos
ljmp
push
aaa
jbe
pusha
pop
gs
add
aad
dec
ret
and
lahf
mov
pop
int3
jmp
jmp
nop
je
mov
movsb
xorb
fldt
test
adc
xchg
in
outsb
sbb
aas
shrb
loope
and
in
int
adc
rorl
cld
jmp
movntps
push
rep
mov
push
jle
popa
mov
jo
jg
jo
mov
aad
add
xchg
jbe
pop
cmp
insl
mov
js
or
dec
pop
mov
rcrl
pop
or
aad
jbe
jecxz
or
scas
mov
jg
es
push
xchg
push
mov
dec
mov
dec
mov
dec
shlb
cli
mov
leave
out
xchg
dec
xor
mov
into
insb
push
leave
loope
cmpsl
ret
push
pop
pop
jnp
cmpsb
and
jb
pop
push
loopne
insl
jmp
lock
mov
jl
out
test
mov
lods
or
loop
movsb
in
jp
sub
pop
pop
into
cmp
pop
jle
mov
dec
inc
lret
mov
cmpsb
mov
cmp
or
call
test
add
add
hlt
adc
addr16
repnz
jbe
test
xor
enter
lea
scas
in
jns
jmp
mov
cld
cmp
or
push
in
femms
pusha
or
scas
mov
sub
push
les
test
sbb
cmp
mov
sbb
repnz
xor
out
xor
test
test
cmp
inc
sti
xor
jns
add
xor
sub
sub
mov
jmp
jmp
int3
push
icebp
xchg
icebp
je
in
pop
mov
push
jge
or
jg
jo
rcr
je
in
ret
aaa
iret
test
inc
fwait
adc
stos
ret
push
out
test
addb
mov
lea
xor
loopne
mov
stc
loop
sti
testl
inc
loop
jns
mov
out
out
jns
ficomps
add
or
cs
clc
jmp
cli
sbb
jecxz
stc
push
popa
rolb
sub
xor
adc
mov
xchg
or
insb
bound
pop
js
int
mov
cli
bound
int
fucom
push
in
nop
dec
mov
ds
dec
xor
sbb
rorl
les
jg
cli
sbb
loop
in
add
pop
xchg
sbb
inc
ret
and
ret
std
cltd
inc
jle
lods
test
icebp
outsl
dec
jp
mov
or
testl
pop
sbb
ljmp
jle
jl
add
clc
jmp
scas
outsl
loope
add
lods
mov
test
filds
mov
int3
jns
jne
gs
jmp
and
push
dec
cld
push
adc
addr16
gs
and
jl
js
arpl
pop
movsl
mov
movsl
xor
lea
mov
mov
cmp
jmp
mov
enter
lea
leave
inc
inc
daa
mov
shrb
jo
xchg
scas
inc
imul
les
mov
add
pop
push
hlt
rclb
call
or
dec
pop
test
popa
je
mov
adc
adc
cmp
ds
ficoml
in
dec
imul
sahf
sbb
hlt
adc
cmp
cmpsb
pop
aas
addr16
xor
fcomip
cmp
mov
aam
or
pushf
xor
gs
jge
jp
or
test
jns
int3
mov
dec
call
loope
insb
or
pop
sub
test
pop
into
js
es
outsb
jne
out
stos
pop
adc
xor
faddp
adc
push
xchg
dec
js
inc
es
push
xchg
cs
mull
lcall
leave
aaa
and
inc
and
mov
inc
imul
insb
loopne
scas
cmpsl
std
fcomi
pop
repnz
lcall
repz
pop
cli
cli
jmp
pusha
imul
ja
mov
je
leave
xchg
xbegin
dec
push
test
into
xor
xlat
outsl
loop
fisttps
and
lcall
and
push
push
lea
push
mov
jl
pop
cmp
push
outsb
inc
push
aas
je
mov
jmp
lods
ret
jno
insl
popa
fdivrs
xchg
test
stos
jo
ret
jg
jo
push
clc
test
xchg
stc
rcrl
adcl
sbb
fistpll
scas
fisubrs
sub
fnstsw
out
stos
lods
fcoml
cli
add
mov
fcoms
mov
clc
sub
repz
sbb
in
sub
mov
movb
lods
mov
movsl
les
lret
cli
pop
int3
xorl
dec
mov
xor
es
lods
outsl
cmc
stc
xor
mov
inc
and
les
rol
xor
adc
call
xchg
pop
out
sub
or
outsl
aam
int3
sbb
add
into
stc
pop
popf
xor
fldcw
inc
or
iret
lock
cmp
fnstenv
leave
imul
jns
notb
mov
and
mov
ret
mov
jbe
lret
or
xor
xchg
dec
xor
dec
cmp
dec
sbbb
pop
fsubs
addr16
scas
inc
into
mov
dec
in
jo
pushf
movsb
sbb
out
jae
loop
cltd
jmp
cmp
inc
cld
insb
repnz
ret
inc
sbb
stc
dec
movl
jmp
mov
mov
xor
add
cmp
je
mov
jmp
dec
int3
cmp
mov
add
rcrb
gs
jbe
jo
ret
jg
jo
fsubrs
xchg
add
rolb
dec
jge
sbb
inc
mov
fmull
push
popa
sbb
dec
sub
mov
les
cmpsl
sub
not
inc
xchg
ss
in
in
jne
add
jl
fildll
inc
jge
out
mov
enter
jg
lahf
fldcw
and
push
mov
jmp
cs
inc
stos
ret
mov
and
and
incb
nop
lahf
es
pop
jp
mov
popa
es
lahf
test
sarb
pop
jns
shrb
rclb
sbb
cld
popa
clc
and
pop
add
mov
popf
push
in
outsb
fwait
aam
mov
jb
dec
bound
scas
dec
ljmp
in
jmp
mov
jg
rcrl
int
jns
xchg
dec
fldl
mov
add
jbe
add
add
cmp
jno
inc
push
pushl
dec
arpl
pop
ds
pop
lret
inc
xlat
adc
adc
shlb
in
cmp
dec
paddq
in
mov
pop
inc
mov
fldl
jl
lods
mov
jmp
inc
gs
icebp
imul
sub
cs
cmp
jo
lock
inc
mov
ja
in
lret
je
add
stos
cmp
ret
inc
mov
add
or
push
push
sub
mov
lods
adc
aaa
jl
pop
fmull
mov
mov
xchg
rolb
lods
add
cld
out
cmp
out
jge
popa
inc
mov
fistpll
add
adc
movsl
and
mov
adc
push
addb
jp
xlat
sti
dec
adc
and
int
and
jbe
gs
pop
ftst
daa
xchg
mov
cltd
push
jge
cwtl
mov
clc
pop
xlat
xor
and
enter
ret
dec
mov
xchg
scas
pushf
aad
mov
dec
insl
test
and
repnz
arpl
pusha
imul
mov
imul
test
jb
mov
adc
pop
push
sar
popl
addr16
pop
pop
lahf
loop
rcrl
jb
push
mov
push
out
and
xchg
popf
insb
pop
imul
inc
in
pop
les
dec
shl
or
mov
ret
decb
enter
cld
jae
pop
cltd
mov
cmp
or
js
add
add
mov
mov
mov
mov
mov
xor
add
mov
mov
mov
xor
add
cmp
je
jmp
pop
out
dec
mov
mov
testb
dec
jp
sub
mov
jo
fnstenv
leave
pslld
pop
test
cmp
sub
in
xor
mov
dec
js
clc
call
je
pop
daa
add
mov
call
push
je
xchg
push
cmp
shld
xchg
xor
ret
sbb
and
mov
and
stos
push
rclb
jnp
bnd
fwait
sbb
js
mov
mov
and
adc
mov
pop
rolb
jb
xchg
in
jne
pop
mov
or
and
stos
fcomp
and
mov
scas
inc
add
in
sbb
mov
or
je
cmp
push
adcl
or
add
mov
or
lods
xchg
fisubrl
add
cmc
adc
mov
dec
push
cmc
cmpsb
inc
loopne
jns
jbe
xchg
inc
add
icebp
cmp
int
in
adc
rorb
daa
and
sarb
xor
sub
mov
and
test
xchg
test
ret
fcomip
mov
mov
mov
add
mov
mov
mov
mov
mov
mov
add
xor
cmp
je
mov
mov
xor
add
mov
jmp
xorl
jmp
mov
mov
mov
mov
mov
mov
pushl
call
mov
cmp
je
mov
mov
pop
pop
pop
leave
ret
push
mov
jmp
ds
adc
dec
xor
mov
pop
mov
jo
jge
jo
pop
cmpps
in
or
sbb
stos
mov
ficomps
mov
mov
and
mov
mov
mov
sbb
icebp
mov
pop
mov
sbb
mov
sbb
aam
xchg
lahf
mov
bound
in
insb
fs
xor
pop
cmp
push
cltd
jge
push
cli
repz
jle
pop
lock
cmp
sub
and
push
pop
mov
inc
ret
jnp
movsl
ljmp
inc
jge
hlt
rolb
sti
pop
paddusw
mov
jecxz
leave
push
in
cvtdq2ps
aad
insb
dec
call
adc
xchg
fidivrs
lret
jg
movsl
add
in
mov
mov
add
andl
lcall
pop
adc
sarb
lret
into
jo
cmpsl
mov
in
repnz
mov
sti
inc
scas
xchg
pop
mov
jecxz
test
adc
mov
addr16
imul
push
cmp
fcompl
call
hlt
dec
out
pop
inc
and
in
mov
and
jmp
adc
jb
insl
repnz
das
and
adc
pop
adc
popa
test
insb
pop
sahf
scas
adc
push
push
popa
jae
int3
mov
xchg
pop
les
or
mov
adc
sbb
out
adc
inc
mov
orb
sub
loop
repz
push
pop
lea
popf
addr16
test
pop
jmp
jle
cmp
outsl
mov
mov
mov
mov
mov
fldlg2
lahf
stos
out
in
dec
dec
cmc
jl
pop
push
and
fwait
push
cmp
hlt
rcrl
jecxz
sbb
fimuls
adc
data16
xor
lods
lock
cltd
or
xor
stos
clc
movsb
mov
lds
stos
and
int3
in
xor
and
xorb
repnz
fs
loope
es
loop
cli
pop
jb
add
cmp
sbb
gs
in
inc
jb
lcall
xchg
xchg
stos
lret
scas
popa
add
fcomp
iret
arpl
sub
push
mov
sub
in
dec
push
jb
test
mov
mov
cmc
out
dec
mov
jle
scas
sub
xchg
popa
out
cmpsl
ljmp
inc
mov
push
ja
add
pop
mov
push
cwtl
lea
pop
push
addr16
dec
adc
shrb
je
cmp
jecxz
push
inc
lahf
mov
sahf
cmp
and
in
fidivrl
insb
sbb
int3
imul
addr16
fstl
insb
lcall
sbb
xor
clc
std
cmc
push
jp
pop
cli
push
movsb
dec
ret
or
lret
dec
cmp
pop
lea
pop
dec
or
push
or
push
hlt
fistl
xlat
test
pop
les
repnz
cs
push
cmpsl
cli
and
cs
lret
hlt
jno,pn
sbb
and
mulb
inc
int3
push
lret
xchg
lea
jnp
sub
inc
ret
xchg
pop
mov
fs
mov
mov
lcall
pusha
xor
adc
imul
flds
imul
aaa
and
lds
add
and
iret
aad
dec
imul
in
jg
mov
sbb
jmp
mov
cli
xor
testb
pop
in
xorb
jo
add
popf
inc
sbb
xor
mov
roll
popa
outsl
mov
mov
or
mov
out
push
cwtl
fldt
adc
lahf
pop
ss
push
sub
or
xor
push
lods
pop
pop
pop
lock
add
lods
xlat
subl
adc
fnstenv
inc
shr
test
pushf
xchg
stos
and
lret
pushf
out
hlt
pusha
xchg
mov
push
pop
and
leave
and
jb
scas
call
fldl
jg
divb
xor
mov
aad
scas
adc
push
fldt
mov
test
outsb
mov
mov
fisubrl
bound
dec
inc
imul
xchg
test
setne
inc
das
push
and
scas
movsl
stc
divl
test
pushf
jecxz
orl
pop
cmp
xor
pop
sbb
push
in
stos
dec
xchg
adc
test
cmc
les
xchg
mov
push
sarl
nop
arpl
mov
or
adc
and
addb
push
ret
mov
insb
rorl
negb
push
lods
loope
int
out
leave
rcl
or
add
inc
dec
vmptrst
xchg
add
test
inc
xor
jg
and
frstor
ss
out
push
jmp
adc
mov
mov
mov
jne
icebp
mov
int3
inc
sub
adc
adc
add
add
das
icebp
inc
addr16
mov
pop
stos
push
mov
ret
fwait
push
and
rcrb
mov
std
int3
jg
pop
lods
push
add
in
jmp
and
shrb
nop
mov
jnp
pop
pop
push
xor
iret
cmp
movsl
pop
jbe,pt
xor
pop
in
adc
push
jecxz
pop
xchg
add
in
mov
mov
rcr
imul
inc
sub
mov
hlt
add
add
imul
mov
cmc
jns
lahf
call
and
inc
jo
pop
fcomps
leave
jnp
jb
outsl
cwtl
in
pop
sub
sbb
rcl
cmp
sub
aas
shlb
cmpsl
mov
mov
fs
push
insb
jge
lea
mov
mov
cmp
jmp
fwait
inc
adc
stos
das
jno
mov
enter
xor
hlt
xor
fs
mov
cmp
jg
xor
sub
testb
mov
jp
jmp
fbld
push
xlat
add
fcmove
inc
jne
dec
repnz
inc
add
ret
orl
mov
adc
dec
dec
roll
mov
adc
or
cmp
fstpl
push
jbe
fists
adc
mov
pop
push
mov
add
cli
jae
pushf
repz
xchg
and
ds
mov
sbb
pop
cmp
movsb
insl
jg
cmp
inc
xchg
cwtl
dec
loope
int
fildl
fcoml
dec
xor
outsb
ret
sub
jge
loopne
jb
jmp
push
dec
mov
cwtl
mov
loop
mov
mov
je
sbb
xchg
adc
xchg
popf
mov
jb
cmp
leave
push
cli
dec
lcall
popa
pop
mov
clc
or
in
cmp
push
xor
or
loope
add
cmp
add
xorl
xor
movl
cmp
jne
mov
mov
and
mov
mov
movl
add
mov
jmp
fcmovnbe
aam
repz
push
jae
xchg
popf
aad
xor
jge
jo
cmp
or
test
xlat
cmpsl
xor
or
shrb
into
pop
add
or
jbe
jp
jnp
mov
outsl
jge,pt
aaa
fnsave
dec
push
lahf
enter
pop
and
and
pusha
rorl
mov
push
sahf
aam
in
and
push
cltd
sbb
push
inc
sub
sbb
sub
cs
xchg
push
xor
mov
je
cmp
fisttpll
ds
mov
ret
dec
sbb
fwait
push
scas
insb
aaa
imul
repz
add
cmp
popa
subl
inc
test
cmp
inc
jp
push
addb
lret
lods
cli
out
das
dec
cmp
push
and
out
mov
pop
push
xchg
xor
xchg
push
scas
lret
in
test
inc
ret
int3
pop
scas
sbb
jl
or
mov
pop
aaa
pusha
lcall
mov
push
jmp
and
xor
les
mov
xor
movsl
in
fmuls
mov
inc
lods
shr
out
sbb
inc
insl
add
sub
popa
aaa
cmpsl
in
inc
and
js
jno
outsb
pushf
add
lods
bt
xor
test
jne
fidivrs
mov
jb
imul
aam
sbb
adc
mov
fsubrp
inc
cld
push
pop
mov
sbb
xor
cli
sub
sbb
mov
dec
in
out
jecxz
push
daa
pop
mov
add
cmp
std
stos
lods
adc
addb
mov
imull
popf
mov
subb
rclb
cmp
and
repnz
pop
ljmp
ficoms
bnd
jmp
jno
aaa
or
cs
and
jnp
fs
xchg
rol
in
cmpb
lret
sub
fmulp
dec
pop
icebp
mov
popa
mov
bound
fstpt
xchg
out
jne
xor
xor
das
mov
xchg
add
and
push
fs
iret
jne
lcall
lcall
jmp
mov
mov
push
jae
in
cld
cltd
push
lret
ss
and
ljmp
std
das
mov
lret
sbb
fwait
and
and
inc
movsb
add
aam
cmpsl
and
jb
data16
fsubrl
shl
sub
cs
mov
mov
btc
test
daa
cs
jp
adc
in
incl
adc
shll
mov
nop
mov
mov
sbb
imulb
jg
int3
into
and
mov
add
or
popf
pusha
enter
push
out
mov
sbb
imul
inc
jmp
int3
xlat
xor
sahf
fwait
or
ss
inc
imul
jno
je
push
enter
js
add
push
adc
or
std
push
les
cmp
mov
and
or
daa
clc
sbb
xchg
mov
push
pop
loopne
stc
movsl
fnsave
shrl
xchg
sub
movsb
sub
out
das
cld
hlt
sub
push
stc
jo,pt
mov
out
pop
clc
dec
mov
or
pop
int
and
mov
push
mov
lret
mov
add
mov
mov
add
mov
xor
sub
push
sbb
jmp
lods
das
mov
mov
lcall
pop
mov
jo
pop
jbe
insl
aam
inc
push
xchg
data16
mov
inc
daa
ror
and
subl
mov
jnp
xchg
add
repz
mov
mov
sbb
push
xor
mov
shrb
sbb
mov
fistpll
jno
scas
mov
mov
and
fucomi
mov
push
jmp
lock
in
sti
xchg
fsubs
mov
inc
add
ret
cltd
mov
pop
adc
jno
mov
xchg
add
sub
fists
fistl
and
adc
out
scas
in
push
xlat
or
push
das
fidivrs
or
ds
arpl
icebp
ret
sahf
lock
jg
out
out
cwtl
ja
and
jo
lea
sbb
test
dec
aad
loopne
mov
push
and
lods
xor
pop
daa
sahf
shlb
lcall
out
int3
insb
adc
int
xchg
incl
cmc
and
sub
mov
into
sahf
enter
cmp
push
push
scas
mov
mov
jae
mov
fsubrs
imul
mov
cmpsl
sub
out
lock
repnz
mov
fwait
es
aad
cmp
cwtl
aam
cmp
sub
or
insl
inc
cli
cli
cltd
cmp
sub
mov
dec
jae
adc
push
mov
xlat
stc
push
jge
jb
scas
push
std
sbb
xor
mov
int3
shlb
mov
dec
pop
mov
jg
add
es
adc
push
dec
mov
adc
out
into
adc
push
and
loope
out
icebp
repnz
mov
add
inc
push
xor
fidivrl
repz
loopne
insl
cmp
xchg
repz
sarb
mov
mov
scas
jb
xchg
push
test
jne
jbe
shll
and
mov
stc
lods
add
push
add
sub
loop
push
and
addr16
sbb
movsl
pop
in
movsl
pop
fs
or
in
mov
pop
adc
push
rol
jl
ja
or
or
ljmp
cld
cmp
daa
jmp
mov
loop
pop
js
pop
xlat
ja
fwait
scas
mov
scas
aad
inc
sbb
lea
mov
mov
negl
arpl
out
or
sub
inc
je
pop
push
sub
in
inc
inc
push
sub
inc
xor
dec
int
mov
std
and
adc
cmp
cmc
add
popa
fldl
or
or
sub
insb
sbb
and
cmpsl
aam
mov
push
and
push
and
iret
mov
mov
je
cmpl
push
add
stos
add
outsb
out
sarb
adcb
jg
ret
gs
or
dec
cmp
mov
movsb
aam
or
add
mov
movsb
mov
ret
push
xor
cmpsb
xbegin
es
or
in
jne
mov
mov
mov
cmpsl
pop
jmp
loop
faddl
cmp
xchg
jl
lods
cmp
je
pop
divl
aam
inc
outsb
lret
mov
dec
cmp
xchg
ljmp
jecxz
iret
mov
xlat
mov
mov
cmpsb
aam
mov
and
int3
cs
test
imul
jne
sbb
mov
add
jmp
outsl
mov
or
imul
mov
inc
jo
mov
xchg
xchg
punpckhwd
xchg
js
sub
xchg
mov
push
adc
outsb
inc
imul
mov
xor
jbe
imul
dec
je
mov
iret
mov
mov
cmpl
pop
mov
fbstp
vprotd
loopne
pusha
lds
in
out
add
inc
mov
add
pop
gs
cltd
cwtl
sub
pop
cmp
ret
mov
or
ljmp
mov
add
rolb
out
push
shll
inc
jbe
xor
iret
and
jg
pop
cmp
push
out
add
cmp
jge
pop
jl
add
push
mov
rcrb
lahf
sbb
mov
imul
movsl
jmp
or
push
sub
mov
jp
lods
lret
add
jb
scas
es
movsb
xor
jge
pushf
mov
xlat
sbb
rorb
mov
add
pop
movsl
pop
cli
add
dec
sarl
repnz
insl
cmp
aaa
hlt
sub
push
xchg
adcb
jae
xchg
out
call
or
test
add
das
ss
cmpsl
jnp
imull
or
jae
or
or
cld
adc
bound
mov
dec
pop
mov
ja
out
rcll
xor
add
xlat
pop
mov
stos
xchg
inc
xchg
pusha
mov
mov
cwtl
mov
loope
aad
repnz
xor
lods
ret
rolb
scas
das
int3
cs
adcl
insb
sbb
pop
inc
push
or
adc
pop
pop
mov
fs
scas
xlat
dec
sbb
movsb
inc
add
mov
mov
jns
mov
lea
xchg
imul
lods
jno
sub
add
or
or
pop
lods
or
out
or
push
pushf
inc
jne
or
mov
xchg
mov
out
adc
pop
jne
mov
dec
je
clc
fcomps
movsb
xor
or
mov
mov
loopne
stos
addr16
mov
xor
call
and
jb
lret
test
adc
or
jmp
jge
xchg
mov
pop
sbb
adc
je
jbe
mov
xchg
mov
aaa
pop
data16
add
sub
popa
icebp
pop
testb
inc
fisubs
jl
lret
push
in
cmpsb
push
aas
cs
gs
outsl
cmc
mov
lahf
test
pop
inc
js
or
popf
outsb
pop
mov
dec
fldlg2
ds
pop
das
lcall
add
or
mov
aad
dec
movsl
insl
out
cltd
mov
mov
or
push
popa
pop
pop
lods
mov
xor
push
movsl
daa
push
xor
inc
test
pop
in
sbbb
in
mov
out
cmpsb
xlat
jo
sahf
out
xor
punpckhbw
call
divb
add
sub
fucomi
outsb
inc
mov
or
dec
fsub
mov
arpl
or
rcrl
iret
test
lcall
shrl
push
daa
pop
aas
and
add
lahf
mov
dec
jbe
sti
mov
ljmp
nop
sbb
mov
add
adc
dec
mov
or
cwtl
push
repnz
das
sarl
xor
inc
push
pop
je
mov
jmp
mov
xor
add
jmp
mov
xor
add
leave
ret
push
mov
jmp
outsl
mov
jae
dec
cmpsl
repz
jo
pop
jge
jo
cmc
sbb
adc
call
stc
insl
and
sub
adc
lea
imulb
xchg
cmp
or
jg
dec
mov
scas
and
scas
pusha
mov
icebp
loop
ret
pop
loopne
jns
stos
ret
pop
xchg
into
push
jg
orl
cltd
and
adc
inc
inc
dec
cmp
outsl
fnstsw
aas
add
sbb
push
loope
fwait
movsb
mov
ret
mov
inc
cli
insl
subl
loope
nop
sbb
or
int
or
push
popa
enter
adc
cmpsb
mov
dec
mov
outsl
xor
sti
xchg
cmc
cwtl
and
pop
in
push
stos
xor
sub
mov
shlb
cmp
sbb
in
mov
xlat
cmpsb
pop
inc
call
push
jne
loop
sub
push
pop
jb
xchg
pop
faddl
mov
xchg
inc
pop
pop
mov
mov
add
pop
repz
inc
arpl
clc
test
inc
inc
mov
imul
mov
inc
cmpsb
mov
pop
cmp
cmp
mov
mov
jnp
bound
lahf
aaa
pushf
mov
lods
push
add
scas
fistpll
push
and
cmp
lea
push
push
mov
cmp
push
imul
aad
mov
mov
mov
jnp
pop
cld
push
test
inc
jns
push
cli
insb
notl
test
dec
add
fistpl
imul
sarb
mov
sub
push
jno
inc
aaa
in
jnp
jns
or
mov
daa
ljmp
or
xor
jno
imul
stos
rorb
leave
sqrtps
call
push
mov
test
push
pop
mov
mov
xchg
fildll
xchg
dec
xchg
dec
popa
dec
push
mov
adc
push
mov
push
push
pop
aad
jmp
or
int
loop
aaa
shll
xor
rol
das
arpl
sbb
pop
insl
and
sahf
fcmovu
push
mov
cmp
adc
ficomps
push
mov
dec
aad
sarl
pop
mov
out
mov
mov
jmp
test
out
lahf
sub
ljmp
outsb
or
sbb
popf
cld
call
or
mov
popf
movsb
jl
flds
sub
sub
mov
out
sub
jl
adc
dec
sahf
call
loope
jns
lret
add
lret
mov
cmp
jbe
pop
int
add
repz
out
div
xorb
sbb
popf
inc
jbe
outsl
aad
insb
loope
clc
push
rcll
adc
cltd
stos
retw
std
mov
xchg
dec
jge
pop
fldcw
fdivrs
test
dec
pop
cmp
pop
inc
stos
or
sbb
and
les
out
or
jno
mov
mov
hlt
xchg
outsb
scas
push
jg
cltd
mov
aad
mov
mov
mov
in
lock
cmp
arpl
cmp
jnp
push
inc
lea
std
out
add
movsb
push
data16
movl
aas
fmull
stos
or
or
or
mov
mov
add
xchg
cmp
jp
adc
inc
inc
outsl
xorl
out
mov
rcl
dec
cmp
cmpsb
outsl
pop
xor
out
mov
dec
sbb
pop
je
jmp
push
imul
test
jmp
xor
sahf
mov
mov
add
sub
adc
mov
push
mov
xor
movl
jmp
xchg
shll
push
paddsw
es
jo
pop
jge
jo
mov
fcmovbe
adc
push
jl
lcall
add
mov
insb
addl
es
jmp
add
inc
adc
cmpb
sbb
push
inc
cmc
dec
pop
dec
sbb
jl
jp
adcl
jb
push
and
lahf
cmpsb
sahf
mov
das
stc
push
cmpsl
push
sub
mov
imul
je
pusha
ss
imull
inc
push
dec
xor
pop
mov
xchg
inc
mov
xor
xchg
stos
cmpsl
stos
or
mov
and
xor
je
js
std
inc
and
out
push
call
xchg
inc
xlat
mov
adc
aas
mov
in
pop
mov
stos
movsl
and
dec
pop
rcll
mov
jle
and
sub
fsubr
out
gs
xorl
int3
adc
dec
insl
dec
pop
ret
mov
shrb
rcrb
dec
or
imul
repnz
xlat
xchg
jmp
adc
jb
mov
sub
cmpsl
fistps
push
inc
jbe
inc
filds
mov
int
int
lcall
add
jno
mov
jae
inc
enter
inc
mov
shl
jl
mov
push
imul
stc
jecxz
add
test
divl
push
sub
push
in
and
pop
das
sbb
push
addr16
xchg
and
lods
or
xchg
fsubl
inc
pop
bound
nop
dec
cmpsl
jle
pop
movsl
pushf
std
xor
cltd
adc
mov
daa
and
stc
sbb
std
stos
popf
pop
xor
inc
fs
je
or
dec
add
aam
or
dec
or
ret
xchg
dec
lret
push
das
mov
cld
add
pop
imul
or
cmp
sbb
rclb
mov
or
cmpsl
mov
fdivrl
ja
ret
lods
outsl
dec
add
insl
into
rorb
js
je
outsl
jne
gs
lret
inc
mov
lcall
ljmp
cld
xor
outsl
mov
rolb
insl
pop
pop
push
mov
cmp
adc
cld
data16
and
fs
scas
popa
ret
xchg
in
stc
outsb
in
cmpsl
repz
into
and
fidivs
pop
out
into
stos
in
sar
lock
rep
jge
jp
out
cld
dec
iret
jnp
pop
popf
mov
mov
repnz
out
aam
loope
in
jno
es
or
imul
inc
les
adc
ja
dec
je
xor
pop
sub
adc
add
lea
movsb
fists
lds
cmc
jno
dec
pop
das
add
fwait
and
push
mov
shll
add
shrl
sub
out
leave
mov
dec
daa
mov
and
cli
loopne
pop
and
in
jmp
lahf
dec
enter
push
sub
addr16
lahf
fldenv
call
dec
jmp
or
fbstp
xchg
call
shrb
movsl
movsb
jle
arpl
sbb
movsb
inc
call
lock
jmp
mov
fnstenv
bound
loopne
or
sbb
xor
aam
div
dec
inc
movsb
movsl
adc
and
xor
movsl
popf
testl
mov
add
data16
negb
add
int
sub
mov
push
xor
jl
jp
mov
jnp
add
dec
add
push
inc
mov
mov
pop
pop
icebp
shl
mov
xor
or
mov
icebp
cld
inc
add
js
add
test
or
add
andl
mov
inc
mov
cmpl
jne
push
push
call
cmpl
jne
mov
inc
mov
cmpl
jb
jmp
and
leave
adc
adc
call
cmp
out
push
dec
jo
pop
jge
jo
pop
mov
mov
fcoml
add
inc
xchg
pusha
ljmp
xchg
loopne
cmpsb
jno
addb
sub
inc
loop
cmp
pop
and
fnstcw
pop
xchg
je
cmpsl
cs
ja
pop
xchg
push
pop
jo
cli
push
xor
jae
fs
or
and
outsl
push
xchg
add
stc
andb
xor
xchg
lret
xor
push
loop
fwait
push
push
outsb
sbb
push
xor
lods
mov
sbbb
sub
push
mov
push
lcall
data16
or
loop
ja
rcll
push
push
lea
xchg
repnz
fisubrs
repnz
pusha
jle
mov
je
push
int
pop
cmp
nop
mov
add
mov
add
test
movsl
mov
scas
adc
xchg
fwait
sbb
xor
push
cmp
sbb
out
and
add
fsubl
subl
frstor
jbe
cmpsb
pop
lret
lret
pop
mov
scas
data16
mov
cmp
pusha
repz
repz
mov
mov
test
xchg
imul
adc
xor
data16
push
jecxz
mov
ss
rclb
cmp
fwait
popf
xchg
and
and
insl
shrb
dec
and
mov
push
inc
and
mov
fucomip
fstpt
cmc
mov
dec
jno
popf
sub
out
in
sahf
insl
test
cmp
xorb
and
push
out
jle
cmp
aam
add
stos
out
sbbl
inc
mov
js
into
stc
lea
in
icebp
in
pop
ret
jb
icebp
xor
pop
ret
adc
in
hlt
dec
addl
mov
adc
movsl
pop
mov
and
hlt
pushf
adc
jecxz
ljmp
lea
mov
jle
aas
shrl
adc
daa
test
fadds
mov
fprem1
clc
inc
shlb
insl
mov
orb
popf
std
cmpb
jmp
lret
adc
push
fcomps
scas
ficoms
inc
loope
pop
sbb
sbbl
or
jmp
insb
scas
loopne
and
dec
dec
mov
mov
mov
lret
sbb
or
lret
out
add
sbb
ret
scas
mov
int
data16
pminub
push
ljmp
pop
test
outsb
xchg
sbb
sub
vdivss
cmp
call
mov
sbb
jnp
mov
push
and
sbb
pop
push
jne
out
jnp
pop
int3
les
js
or
cmpsb
insb
mov
xchg
mov
adc
scas
loop
xchg
add
jno
mov
repnz
mov
ret
pop
sbb
test
out
fs
nop
pop
mov
in
mov
sub
gs
out
outsb
popf
sbb
pop
in
mov
jb
ja
xchg
adc
int
xchg
stos
push
repz
jmp
push
addr16
aaa
fdivrs
ret
sub
sbb
stc
iret
lds
inc
push
pushf
add
imull
js
mov
loopne
push
fs
fildl
xchg
aam
sti
xlat
fnstsw
push
sub
or
fimull
cmp
jo
adc
je
scas
icebp
mov
sub
addl
xor
movl
cmp
movl
jne
jmp
js
stos
loopne
jae
cmc
pop
sub
cmp
pop
jge
jo
dec
daa
xor
xchg
jl
aas
imul
cs
scas
push
imul
or
jbe
xor
loop
ss
and
inc
dec
out
lds
xchg
jg
nop
ds
js
cmpsl
mov
orb
push
fdivr
mov
int3
mov
inc
dec
adc
stc
pushf
push
sub
dec
dec
loop
and
pop
movsb
icebp
dec
repz
dec
cmp
data16
xlat
or
mov
js
cmp
test
xor
add
dec
les
mov
fcmovb
inc
add
lret
popa
in
inc
scas
mov
fstpt
push
hlt
fsubrl
mov
inc
push
cltd
mov
xchg
leave
divl
ja
cmp
scas
fisubs
adc
loop
fwait
test
movsl
or
xor
jge
shrb
stc
dec
ja
mov
orb
scas
in
cltd
adc
ja
call
mov
mov
sbb
xchg
dec
cmp
jmp
push
aaa
sarl
ljmp
push
sub
mov
adc
test
mov
dec
push
inc
lods
push
lcallw
push
or
sub
lods
cmp
push
fidivrs
sbb
mov
mov
adc
jb
movsl
data16
mov
enter
lret
push
jb
cmp
adc
pop
pop
ja
in
aaa
jecxz
cmp
ucomiss
push
sbb
add
adc
xchg
or
leave
les
pop
sub
sahf
sbb
xchg
pop
in
bound
gs
cltd
lock
xor
addr16
jg
fwait
int3
sub
push
mov
dec
loopne
test
pusha
imul
popa
sub
icebp
sbb
xchg
adc
nop
sbb
pushf
mov
push
pop
dec
stos
mov
aaa
mov
sub
stos
cmpsl
pop
orl
pop
jmp
add
dec
push
scas
mov
rcrb
push
popa
sub
dec
dec
xor
jbe
lods
es
andb
cmc
push
loope
fucomip
or
xchg
or
xlat
and
ss
out
aad
shlb
push
es
cmp
aas
notb
scas
cmpl
add
cmp
hlt
je
clc
dec
cmpsb
push
push
mov
push
sub
cmp
call
and
hlt
sub
mov
sbb
cmc
test
adc
pop
cltd
dec
xchg
jp
xor
sub
insl
cwtl
je
xor
xor
data16
or
ja
je
jmp
insb
testl
ljmp
pop
loop
mov
push
or
push
sarb
jns
cmp
faddl
repnz
cmovb
xor
or
leave
ljmp
mov
test
bound
lods
fwait
std
add
int
cmpl
sub
test
inc
pop
int3
push
arpl
jl
cmp
inc
dec
out
aaa
xchg
loope
add
pop
loop
shll
push
mov
ret
insb
mov
loop
push
lret
xor
mov
shll
movsl
mov
mov
mov
out
call
jo
jecxz
aad
xor
jmp
pop
jbe
shlb
fsubl
mov
test
xchg
loopne
in
pop
int
mov
push
jne
shlb
add
or
ficomps
push
mov
loop
mov
popf
push
adc
xchg
fs
fiadds
jecxz
add
sub
inc
add
add
jmp
mov
xor
add
mov
mov
xor
add
mov
jmp
mov
mov
jmp
mov
cwtl
test
jb
jb
xchg
adc
sbb
jo
pop
jge
jo
cli
sbb
mov
cmpsl
xor
jmp
sub
fdivr
call
sub
cmp
call
repnz
or
cmp
icebp
jbe
test
aas
fsubs
scas
gs
pushf
pop
jno
inc
jno
leave
test
out
lock
lea
out
inc
inc
aad
es
in
inc
cmpsl
mov
xor
xchg
mov
jnp,pt
cmp
jb
test
inc
jnp
shlw
pop
ret
scas
in
adc
adc
inc
push
xlat
fimuls
jbe
jbe
pop
sub
mov
test
icebp
out
jle
iret
out
cs
ret
inc
pand
repz
les
and
mov
cmp
cwtl
or
fistps
loop
mov
in
add
xlat
inc
adc
mov
scas
jo
dec
inc
les
ja
repnz
inc
cli
jb
mov
fwait
sbb
in
inc
test
mov
xchg
cmp
mov
out
lods
lock
inc
fadd
scas
jmp
mov
jmp
in
mov
sarb
cmpsb
sub
sbb
test
outsl
outsl
and
test
pushf
xchg
scas
inc
arpl
loope
push
ficomps
mov
out
ljmp
test
loope
icebp
xchg
imul
jo
insl
jne
in
int3
cltd
and
or
rcrb
xchg
push
gs
jge
dec
insb
repnz
ficompl
loop
fidivl
loope
frstor
push
add
mov
sub
inc
mov
jl
jl
lret
xor
add
lret
daa
sbb
call
xchg
cs
push
push
jno
leave
or
sbb
mov
adc
add
xor
loope
lods
daa
mov
repnz
into
das
xchg
loope
xor
rcll
inc
repz
gs
imul
cmpsb
inc
adc
push
scas
call
mov
cs
dec
negb
and
pop
cmp
pop
enter
mov
and
sub
pop
insb
test
enter
jb
mov
sbb
xor
ljmp
movsl
push
call
lods
jne
jns
pop
scas
incl
jecxz
std
pop
push
cmp
aaa
xorb
pop
lcall
xor
add
jo
sub
sbb
sub
fcmovnu
or
leave
sub
pop
ret
movsb
cmc
jns
in
xor
xchg
ficompl
pop
mov
sub
int3
pushf
pushf
or
out
xchg
jne
scas
pop
xchg
cwtl
inc
clc
pop
mov
lock
insl
pop
push
cld
les
popf
sar
mov
xchg
fistps
and
sbb
xchg
outsl
inc
in
fidivl
mov
sbb
xchg
outsl
push
push
sub
loopne
movsl
inc
outsl
adc
adcb
or
xor
test
das
js
mov
stos
bnd
ror
insl
mov
int3
mov
loopne
sub
xchg
out
or
jge
lds
cmpsl
cli
rol
inc
data16
mov
fldt
and
push
or
movsb
pushf
sub
fdiv
push
mov
popa
and
cmpsb
dec
push
and
sub
aam
rcll
addr16
mov
stc
push
add
inc
in
insl
gs
dec
mov
divb
sbb
jecxz
imull
push
inc
add
xor
push
aam
movsl
sub
les
scas
in
cmp
stos
pop
movsl
scas
mov
lds
inc
movsb
add
into
push
inc
inc
adc
mov
pop
mov
mov
mov
add
pop
pop
ret
push
mov
sub
and
movl
mov
adc
movl
sbbl
mov
subl
push
movl
cmpl
je
cmpl
jne
push
push
push
call
mov
dec
mov
jmp
mov
xor
sub
mov
sbbl
jmp
mov
mov
pop
dec
xor
push
pop
jo
mov
sbb
fs
aad
adc
stos
out
adc
mov
sub
aas
push
mov
or
dec
inc
push
fs
add
xor
push
outsb
lods
cwtl
mov
sub
stc
popf
jg
lds
or
ds
jne
xor
sub
mov
ret
bnd
lock
sahf
xchg
xor
fisttps
sbb
aam
ljmp
jl
mov
push
xchg
scas
jp
xor
rcl
inc
adc
or
fistps
out
fs
push
push
sub
cmp
dec
divl
enter
lret
in
sbb
jbe
and
jns
jno
push
icebp
insl
scas
orl
int3
sub
inc
or
adc
les
inc
inc
jecxz
clc
mov
mov
push
sysenter
das
gs
jge
or
ret
repnz
cld
mov
sbb
jo
ret
rorl
fs
mov
ss
pop
xchg
in
jo
mov
or
data16
push
mov
ss
movsb
or
dec
inc
ja
xor
imul
xor
xchg
sbb
scas
mov
lcall
xchg
popf
mul
cmp
das
lock
push
gs
sbb
subl
jp
jle
scas
out
lods
nop
jl
inc
jmp
sbb
dec
push
imul
stos
pop
insb
shll
in
je
push
call
mov
nop
scas
xor
out
dec
movsl
inc
cmp
iret
loopne
mov
jmp
pop
push
adc
mov
pop
pop
clc
fstl
ret
jns
or
cmp
push
sub
sub
pop
dec
xchg
cmpsl
out
pushf
rcll
jbe
aaa
jecxz
popf
inc
ljmp
cld
push
sbb
lahf
mov
push
lret
xor
mov
int
fdivl
add
aaa
cmp
rcrl
movsl
jae
push
aad
mov
or
sub
jp
and
clc
xor
mov
test
mov
xchg
negb
cli
das
outsl
fadds
mov
jae
scas
mov
cmp
fwait
in
pop
dec
icebp
inc
leave
cltd
inc
xor
or
and
xchg
fcomp
jo
outsl
xchg
mov
jns
xchg
mov
popf
sti
std
jp
and
adc
xor
cmp
cmp
fstpl
stos
cli
dec
push
adc
sbb
loop
inc
or
jg
das
ficompl
inc
or
push
mov
xor
mov
sub
xchg
sldt
jmp
hlt
xor
fwait
repz
inc
xchg
aaa
andb
pop
jo
mov
mov
add
mov
dec
int3
xor
inc
sarl
xor
sub
inc
mov
adc
pop
and
js
fs
fistps
data16
in
pop
xchg
xchg
and
roll
push
jne
addr16
aas
jp
push
outsl
negl
mov
pop
jle
decl
fists
pop
or
pop
and
sbb
or
test
xchg
call
xchg
cmpsl
icebp
out
mov
inc
xchg
cltd
xor
dec
xchg
and
mov
daa
stc
inc
jo
int
push
mov
ret
arpl
ljmp
mov
insb
scas
jb
pop
loope
cli
push
outsb
sub
fistpl
inc
mov
das
sub
mov
jge
subb
imul
in
jg
xchg
lds
fisttpll
jp
sbb
daa
lret
mov
leave
rolb
imul
mov
lods
push
mov
cltd
jge
xor
mov
into
testl
lods
push
sarl
std
cmp
int3
adc
and
xchg
lock
mov
and
mov
in
pop
mov
imul
popa
ret
dec
fisubrl
jne
nop
xor
push
jbe
test
xor
sub
jmp
push
xchg
jb
lret
jecxz
stc
dec
fwait
sub
lret
cmpsb
in
sti
mov
cmp
pop
push
fcoml
cli
dec
cmp
push
lock
ljmp
mov
adc
sahf
lods
cmpsb
push
dec
sub
xchg
sbb
insl
jnp
loopne
fistps
loope
in
pop
mov
daa
sub
sub
test
jmp
mov
sub
pop
xor
jae
adc
shufps
fldt
sahf
xchg
pop
lcall
pop
or
je
mov
mov
and
cmp
stos
mov
xchg
xor
in
dec
dec
mov
adc
leave
in
push
ja
scas
or
or
outsl
push
test
dec
lds
pop
sbb
js
add
dec
push
cmp
push
push
cmpsl
xchg
dec
dec
insl
xchg
adc
jp
insl
out
jae
xchg
lock
dec
insl
aas
enter
or
fbld
fdivs
cmpb
xor
and
repz
iret
popa
xchg
lret
testb
dec
addr16
stos
loop
mov
aaa
insl
imul
andl
jmp
xor
or
inc
mov
cmpl
jae
cmpl
jne
push
pushl
pushl
call
cmpl
jne
mov
inc
mov
jmp
mov
push
xorl
push
test
jmp
mov
mov
jne
jne
sub
dec
pushl
enter
mov
push
and
sub
lds
sbb
out
jne
jns
rcl
sahf
lods
cltd
fsubrl
arpl
andl
dec
jge
inc
push
cmpsb
cmp
insl
test
mov
out
sbb
mov
shl
ret
adc
imul
mov
jne
rcl
jecxz
cmp
and
mov
in
adc
cltd
xchg
adc
ficoml
fbld
mov
sub
sub
mov
into
movl
popa
out
inc
shrl
cmp
in
gs
sbb
jg
dec
sahf
cmpsl
mov
xchg
mov
in
enter
or
pop
mov
stc
enter
std
sbb
or
movsb
jp
cli
in
pop
adcl
jnp
je
or
ss
or
pushf
dec
hlt
loop
xchg
cmp
hlt
xor
movsb
cli
sbb
adc
into
icebp
add
jp
xlat
dec
push
mov
clc
jecxz
test
cmp
mov
test
ds
mov
sub
mov
inc
loopne
popa
adc
inc
push
pop
stos
out
test
lea
mov
jbe
dec
mov
pop
push
shll
dec
mov
ret
mov
adc
xchg
cmp
sbb
fstpl
int
jecxz
stos
mov
sti
out
lds
xchg
cs
ljmp
adc
pusha
rorl
sbb
movsl
fstpt
jmp
addr16
dec
ds
or
dec
adc
fchs
jbe
mov
test
add
jno
imull
ss
stos
lods
aas
sbb
outsb
add
outsb
ror
sub
ret
dec
push
add
hlt
loope
pop
inc
pushf
mov
pusha
mov
add
orl
jae
data16
dec
sbb
inc
push
out
cmpsl
push
cld
std
push
adcb
jnp
pop
push
imul
cs
cmp
shlb
fnstsw
into
xchg
std
cltd
in
inc
xchg
orl
jmp
out
sahf
fistpll
int
jno
push
imull
pop
call
fwait
cmp
mov
in
dec
mov
shrb
lahf
xchg
cmpsl
xchg
pop
int3
movsl
xchg
scas
mov
testl
pop
rcrl
or
pop
xchg
test
aas
mov
pushf
in
mulb
xchg
mov
aad
loope
add
mov
jmp
les
test
add
add
and
inc
add
dec
in
add
pop
add
add
add
je
cmpl
jne
push
push
push
push
pushl
push
push
call
mov
dec
mov
jmp
and
imul
mov
add
add
mov
sub
mov
jmp
lret
sbb
inc
loopne
push
mov
rorb
ja
mov
or
mov
cmp
outsl
mov
aas
push
push
cld
loope
inc
xor
xor
inc
dec
dec
stc
dec
hlt
lret
int
int3
lods
jns
icebp
xchg
fwait
std
ss
mov
cmp
aas
fucomi
push
cmove
inc
lods
sub
sbb
sub
inc
adc
cmp
pusha
dec
lock
test
clc
shll
into
pop
in
and
pop
xor
js
sti
lcall
cmc
movsb
xchg
pop
ja
xor
les
or
lret
ss
cltd
in
mov
in
jle
shlb
mov
sub
icebp
or
mov
outsb
imulb
xor
mov
cmp
jmp
push
roll
add
dec
and
rclb
lahf
jl
mov
roll
ja
cmc
fwait
rorb
and
sub
xchg
daa
dec
or
fucom
mov
jne
xlat
pushf
cwtl
dec
test
sbb
cmc
shlb
data16
xor
loop
sbb
movsl
sbb
fnstsw
scas
aaa
movsl
mov
xchg
imul
and
inc
shlb
pop
or
enter
sti
cmp
xchg
and
outsl
add
xor
in
lods
movl
and
gs
xchg
adc
not
daa
inc
dec
pushf
adc
outsl
fldt
jl
stos
lods
sub
call
lahf
nop
and
and
cmp
cwtl
xor
mov
or
xchg
xchg
iret
xor
addr16
arpl
mov
xchg
sbb
out
dec
daa
jno
jecxz
fdivrs
sbb
stos
jl
sahf
mov
and
pop
test
negl
jmp
jb
jbe
cmp
fninit
push
push
inc
push
and
roll
call
in
xor
cmp
push
push
stos
sarl
jb
repnz
ja
cmpsb
push
outsl
cmp
fsubrl
and
mov
push
xlat
enter
jg
mov
cmc
push
jne
movntq
popf
jp
xor
mov
cltd
testl
mov
aam
enter
lret
or
mov
sbb
pop
or
dec
rcrb
mov
jecxz
jle
les
xchg
test
stos
adc
sbb
cwtd
mov
cmpsb
inc
mov
add
jl
sbb
inc
pop
pop
sub
shrb
and
add
loope
add
add
add
sldt
add
leave
add
inc
mov
cmpl
jae
cmpl
jne
push
pushl
call
jmp
xor
sub
xor
jmp
call
jno
popa
push
xchg
arpl
inc
jmp
pop
fs
mov
lcall
bnd
clc
pop
cltd
testb
jg
in
xchg
jb
jbe
divb
enter
lods
in
push
mov
lock
arpl
test
bound
push
ss
xchg
stc
movsl
or
hlt
pushf
js
lret
loopne
adc
jecxz
jae
mov
mov
mov
pop
repnz
adcw
push
repz
daa
insl
fldt
push
cmpsb
jle
lea
addr16
stc
pop
mov
leave
aaa
adc
pop
mov
or
in
ret
cmpsb
lret
mov
lahf
jg
pop
mov
push
aas
push
xchg
leave
push
test
xchg
jge
cwtl
cli
lahf
popa
sti
or
or
icebp
push
inc
int3
push
or
dec
and
xor
lods
and
sahf
lock
sub
insl
mov
cs
dec
or
cmp
popf
adcl
mov
cmp
scas
popa
sbb
bound
mov
mov
cmpsb
mov
lods
xor
add
arpl
lock
int3
dec
in
mov
pop
inc
sbb
out
in
and
nop
vmread
push
and
cmp
cmpl
and
jl
mov
mov
in
push
int3
shl
push
outsb
aam
aas
inc
xor
sub
mov
pop
nop
cs
dec
sbb
insl
pop
out
faddp
stos
pop
ljmp
pop
xor
test
mov
or
mov
fnstenv
loope
lea
xchg
jb
mov
cmp
in
push
lods
shlb
xor
insb
mov
icebp
push
outsb
mov
push
add
fidivrs
bnd
push
dec
adc
push
movsb
xchg
rcrl
mov
xor
add
pop
pop
and
inc
sbbb
pop
pushf
jg
or
xor
mov
push
inc
mov
sub
mov
sbb
orb
sub
mov
jo
loop
sub
jns
adc
cld
xor
js
push
cmp
jle
mov
jp
mov
test
insb
lds
mov
dec
or
xor
shlb
push
scas
xor
inc
jno
imul
enter
xchg
adc
fnstsw
shrb
xchg
sbb
mov
js
mov
jns
popa
addr16
arpl
xchg
sbb
into
fdivrp
push
add
shr
ret
inc
jbe
or
fmuls
in
adc
mov
xor
mov
xor
adc
xor
jmp
push
popa
jne
add
cmp
cmpsb
fnstsw
jo
jle
jo
xchg
in
outsl
mov
xorb
test
and
imul
fcoms
cmp
mov
dec
outsl
test
shlb
sub
lods
daa
mov
lea
add
cmp
pop
jne
add
cmp
xchg
xor
mov
mov
ds
dec
mov
out
shlb
das
into
addr16
fsubs
xchg
ret
aas
add
fidivl
xor
or
xchg
xchg
xor
cmp
out
lcall
cs
imulb
push
rcrl
pop
jmp
jge
js
lahf
stc
stos
loopne
adc
sbb
gs
xor
idivl
xchg
enter
mov
inc
jl
aas
xlat
mov
mov
mov
rorb
dec
out
sbb
cmp
test
outsl
mov
and
scas
push
mov
sarb
mov
rcrl
repnz
mov
pusha
cltd
rcll
into
dec
adc
dec
inc
aas
f2xm1
mov
sub
jnp
scas
mov
xor
push
xchg
mov
stc
out
xor
cwtl
sub
ror
adc
xchg
ds
loope
test
sbb
mov
ss
fldcw
xor
mov
adc
pop
test
popa
ljmp
es
fwait
lcall
dec
dec
sbb
aas
rol
sbb
cmp
xor
push
fisubrs
movsl
cwtl
pop
adc
ficoml
inc
inc
cmpsl
test
addb
decl
loopne
aas
nop
cmp
pop
js
xchg
stc
stos
cmpsb
popa
int
lcall
mov
ljmp
frstor
push
mov
outsl
lods
aad
loopne
adc
call
ret
mov
jbe
and
outsb
adc
das
js
aam
jb
ds
test
insb
push
lea
lea
and
adc
iret
ljmp
jb
jl
push
insw
loop
into
fimull
xchg
jo
insb
in
bound
and
std
in
insb
cmpsb
ret
out
cmp
popf
ror
loope
cmpsb
jecxz
cmp
in
mull
sub
cmp
add
popf
mov
dec
cs
sahf
arpl
test
fistps
ljmp
and
xor
fsubl
mov
test
nop
cltd
cmp
pushf
lds
mov
inc
mov
loop
push
lret
mov
mov
mov
je
notl
mov
xor
xorl
add
jmp
inc
mov
jp
adcb
mov
clc
in
outsb
jo
mov
mov
push
xchg
xchg
push
fisttpl
mov
ja
sti
or
scas
sub
ret
int3
fstpt
mov
mov
addb
cmc
pop
mov
and
das
cmpsl
movsl
aaa
pop
call
std
sub
mov
decb
dec
int3
mov
frstor
jl
dec
sbb
cmp
push
leave
cltd
inc
pop
out
add
mov
imul
rclb
jo
lcall
xchg
cwtl
xor
mov
test
mov
movb
rolb
pop
add
or
das
and
shll
cld
ljmp
sub
outsl
inc
lods
xor
outsb
ljmp
pop
sbb
dec
jns
adc
imul
test
fdivs
push
dec
rclb
sub
in
push
adc
lock
int
pusha
inc
mov
aad
cmp
inc
mov
cwtl
push
insb
bound
stc
pop
sub
pop
pop
scas
xor
mov
mov
sti
movsb
stc
sbb
cmp
inc
dec
push
mov
and
jno
lods
push
push
loope
jmp
cs
je
mov
sub
stos
sahf
cwtl
pop
pop
addr16
iret
push
cmp
xchg
loopne
cli
xorb
movb
shld
fisttpl
call
std
add
mov
movsl
dec
dec
jnp
outsl
xlat
push
sbb
flds
das
jmp
pop
filds
push
out
xchg
les
xor
and
cli
daa
mov
and
jg
xchg
jp
push
xlat
int3
add
xchg
push
inc
add
fsubrs
jno
test
adc
data16
mov
icebp
pop
mov
call
into
add
xchg
push
insl
cmpl
aas
sbb
out
push
int3
xchg
sub
or
push
jnp
ja
cwtl
mov
jae
lahf
push
fnsave
notb
cmp
jmp
or
fbld
mov
xchg
popa
sbb
sbb
hlt
cmovno
sahf
adc
and
mov
adc
mov
or
or
inc
xor
lcall
xchg
mov
aaa
fsubrl
repz
and
push
decb
pusha
scas
jnp
rolb
pop
inc
ja
mov
lods
lock
adc
sahf
sbb
pop
shl
mov
xchg
pushf
lret
outsl
mov
pop
xchg
and
adc
sub
push
and
gs
and
clc
jne
pushl
jmp
and
lods
shrb
in
push
pusha
loope
xor
jle
jo
mov
jg
scas
pop
insb
mov
movsb
sbb
jno
xor
xchg
repnz
sub
mov
in
push
popa
jnp
gs
faddp
mov
jecxz
sbb
add
fldt
addr16
jo
dec
xchg
jno
jmp
int3
push
repnz
into
mov
sbb
arpl
hlt
test
mov
dec
sub
jecxz
fsubs
push
push
cmp
xor
sub
push
xchg
mov
insl
sbbb
out
ret
mov
icebp
gs
leave
sbb
imul
sahf
push
xlat
sbb
insl
in
jb
xor
shll
test
ljmp
pop
xor
rclb
jne
es
inc
mov
sti
lods
mov
mov
mov
mov
sub
push
or
mov
lahf
pop
int3
testl
in
arpl
or
jno
fistps
aas
movb
jmp
imul
sbb
ds
add
fdivrl
fwait
icebp
dec
mov
dec
out
mov
or
mov
repz
negb
push
or
sub
dec
lods
lcall
test
sub
lret
sbb
lcall
test
je
sub
lock
adc
nop
dec
cmp
and
adc
movsb
xor
sbb
mov
add
or
popa
call
mov
loopne
into
mov
mov
lods
xchg
jle
outsb
movsb
and
insl
or
xchg
testb
addr16
push
jbe
loop
add
inc
iret
cmpsb
lods
dec
fimuls
dec
sarb
pusha
sub
iret
jno
testb
and
xchg
lods
test
xor
out
pushf
xchg
iret
adc
outsb
xchg
dec
pop
inc
sbb
rcrb
out
jg
adc
cli
das
ret
inc
mov
sub
leave
aad
out
cmp
sahf
test
add
dec
dec
mov
adc
cmc
out
rcl
jp
rorl
jg
xor
cmc
adc
bound
dec
inc
ret
push
sbb
popa
or
jnp
dec
cwtl
cmpb
cmpsl
or
jmp
adcb
sub
and
scas
aam
loop
mov
js
push
push
add
das
sbb
daa
and
je
mov
jae
and
je
inc
pop
cmpb
inc
push
in
roll
xchg
cli
sub
daa
push
es
aad
inc
sub
cmp
mov
push
dec
mov
pop
js
dec
pop
sub
mov
add
add
and
xor
insl
jp
or
jl
cltd
scas
jle
jo
mov
xchg
fs
xchg
stos
push
mov
xchg
aaa
shl
jp
loop
sarb
ljmp
int
mov
les
cld
cld
cmpsl
repz
leave
subb
push
sbb
std
lds
push
jo
pop
pop
push
lods
daa
out
jge
int3
cli
cmp
add
push
nop
sbb
test
imull
movsl
pusha
push
xchg
dec
jno
out
imul
xchg
fs
cmpb
sti
mov
pop
mov
mov
push
push
and
xor
daa
jl
jb
out
ret
mov
pop
inc
push
lods
or
sahf
rcr
insb
xor
cmp
gs
pushf
cmpsb
repnz
bound
mov
lods
jp
into
add
ficomps
nop
pop
mov
lods
add
push
pop
or
mov
cs
fistpl
mov
and
mov
xor
mov
js
mov
push
in
sbb
lock
bound
aaa
cmp
inc
lods
and
pop
add
sbb
xchg
pushf
inc
out
jns
test
fdivs
jb
dec
jg
nop
insb
iret
xchg
addr16
push
push
arpl
inc
push
xchg
push
adc
lret
cmp
jae
les
loope
pop
xchg
mov
add
push
dec
popa
daa
iret
iret
add
hlt
xor
sbb
pusha
pop
pop
cmp
pusha
mul
into
mov
lcall
push
jb
dec
subb
inc
movb
sahf
mov
stos
leave
adc
jp
cmp
mov
call
add
jmp
out
and
and
loopne
dec
dec
fsubrs
aaa
jp
xchg
int3
jb
sbb
loop
out
nop
scas
aaa
daa
cmc
cmp
out
clc
and
or
ret
outsb
xchg
outsl
sub
iret
nop
arpl
xchg
mov
gs
pop
xchg
adc
jle
mov
push
dec
dec
jmp
out
adc
cltd
mov
shlb
dec
into
aam
repnz
in
enter
mov
cmp
dec
scas
mov
mov
or
repz
mov
adc
into
idivl
aam
xchg
and
mov
ljmp
jmp
cs
ret
jp
mov
adc
enter
jmp
outsl
mov
inc
add
mov
sbb
imul
and
enter
pusha
clc
jnp
in
push
outsb
mov
mov
mov
sub
mov
movl
cmpl
je
cmpl
jne
pushl
push
push
pushl
call
cmpl
jne
mov
dec
mov
mov
dec
mov
jmp
mov
orl
xor
add
cmp
movl
je
pushl
decl
pushl
xorl
call
mov
andl
jmp
mov
inc
mov
cmpl
jae
cmpl
jne
call
jmp
sub
mov
or
mov
adcl
xor
decl
add
movl
cmp
je
not
mov
mov
mov
xorl
jmp
lods
mov
loopne
outsb
push
repz
scas
popl
push
jbe
jo
jle
jo
hlt
push
cli
fsts
add
ljmp
hlt
cltd
repnz
adc
push
dec
out
or
divl
jecxz
cpuid
lods
dec
imul
xor
and
cld
arpl
fst
mov
fsubl
movb
mov
adc
ficoms
lock
cmp
jmp
movsb
or
adc
add
mov
sub
and
sbb
std
mull
or
mov
repz
xchg
stc
inc
dec
add
fsubs
mov
bound
cmpsb
pushf
hlt
cmpsl
lds
nop
repz
xchg
test
cmc
mov
test
pusha
ficomps
jbe
sub
cmp
sbb
xchg
icebp
ja
push
jp
pushl
xor
lods
les
push
push
jle
pusha
rol
inc
xor
push
aad
jge
ss
outsb
stc
scas
push
sub
inc
stc
in
addr16
or
push
cmp
fisttpll
pop
sbb
in
xchg
pop
jae
outsl
cmp
cmp
cmp
add
js
stos
and
test
dec
fildll
leave
shr
nop
aam
push
mov
mov
jns
push
movsl
jg
adc
les
popl
and
bound
aas
das
popa
movsb
and
std
test
push
xchg
ret
xchg
mov
repz
cmp
inc
pop
insl
les
data16
dec
ss
cmp
sbb
jl
outsb
cmp
jnp
add
cwtl
dec
xchg
jae
daa
jecxz
lea
sbb
and
sar
or
aaa
mov
xchg
lret
bound
pop
cld
sbb
fcmovne
jl
sub
clc
xchg
test
jp
clc
into
cmpsb
int3
rorl
add
popf
ja
enter
pop
push
lahf
leave
out
cwtl
sub
fdivr
inc
pop
aas
add
les
sbb
aas
or
mov
ds
hlt
cmp
les
lret
lcall
jge
add
sahf
outsb
sbb
mov
cli
jns
xorb
pushfw
test
cmp
jne
or
mov
out
std
and
sbb
sbb
mov
mov
mov
fstpt
ss
out
subl
sbb
loope
sbb
pop
mov
pusha
push
popa
cmp
lcall
jle
js
orb
dec
pushf
mov
mov
push
adc
ret
xchg
in
les
sbb
sbb
imul
and
sub
aad
inc
add
add
add
add
or
cmpl
jne
call
cmpl
jb
mov
orl
add
mov
or
mov
mov
sbb
mov
addl
add
add
mov
mov
mov
add
neg
xor
and
mov
or
mov
andl
mov
inc
mov
cmpl
jne
pushl
pushl
push
pushl
push
pushl
pushl
call
cmpl
jne
xor
add
inc
mov
cmpl
jb
mov
add
lea
mov
push
jmp
add
xor
inc
cld
xchg
loop
push
ja
xorb
mov
jno
mov
negl
imul
push
mov
jmp
xor
lcall
xchg
aad
mov
stc
sub
mov
sub
jecxz
add
lods
cmp
pusha
push
push
sbb
pop
adc
stos
jl
shr
dec
lds
sub
jae
mov
clc
enter
jle
jo
xor
xchg
repnz
sbb
push
push
lock
pop
xor
sub
xor
xchg
scas
out
add
cmpsl
lods
pop
pushf
or
call
inc
jge
in
les
jns
insb
lret
into
sbb
faddl
dec
inc
xor
and
es
xchg
and
jbe
pop
lret
inc
xchg
jecxz
sub
adc
mov
jns
sub
mov
mov
mov
popf
xor
std
scas
mov
insl
mov
sbb
rorb
xor
lods
lds
jbe
andl
mov
sub
mov
out
lcall
pop
daa
jg
cld
out
rorl
or
jle
jp
cmp
add
jp
mov
fwait
mov
cmpsb
aaa
insb
dec
pop
leave
push
push
repz
loopne
lea
int3
pop
mull
adc
iret
inc
adc
cwtl
sahf
hlt
jb
jbe
xchg
aaa
push
jmp
loopne
mov
dec
es
inc
push
lea
jne
stos
fwait
mov
imul
and
mov
jno
inc
push
hlt
jl
or
jo
pop
mov
inc
dec
leave
mov
mov
xchg
dec
mov
lcall
push
jo
xchg
flds
and
cmp
push
mov
mov
mul
push
mov
test
shl
bound
mov
or
or
xchg
test
sbb
inc
flds
inc
fwait
dec
jg
imul
xor
mov
fbstp
sti
pop
cmp
neg
aaa
push
int
mov
xchg
add
stos
outsb
add
push
mov
popa
add
in
jae
icebp
incl
lock
and
jae
ja
test
pop
mov
test
mov
popa
ror
sub
mov
rorl
sub
sarl
mov
xchg
insb
repnz
xor
xchg
push
mov
mov
add
xchg
fnstsw
sbb
shl
imul
dec
and
shll
fldenv
add
pushl
pushl
call
mov
jmp
ret
sbb
sub
jno
pop
or
shlb
jle
jo
lds
sub
sub
and
push
push
cmp
sub
nop
sbb
loop
or
icebp
and
push
lahf
imull
aas
cltd
and
fmul
lret
xor
ja
mov
imul
push
push
aas
repz
pop
push
jmp
aaa
and
ret
xchg
dec
fstpl
pop
adc
notl
inc
push
push
in
dec
and
inc
cmpsb
fnstenv
js
mov
test
and
aas
push
xchg
test
push
out
dec
push
int3
enter
inc
mov
pop
inc
lods
jmp
sbb
mov
aas
lcall
jne
dec
lahf
sub
pushf
pop
push
je
sub
movd
mov
sbb
arpl
xchg
jnp
push
dec
mov
testl
loopne
jne
aaa
inc
mov
pop
lcall
scas
cwtl
es
ds
xchg
iret
inc
sbb
mov
out
mov
mov
inc
sahf
popa
movsb
jne
roll
push
or
in
daa
iret
stos
sbb
ja
outsl
jg
out
jne
pop
mov
iret
inc
jp
jmp
ret
mov
icebp
les
adc
lea
ret
insb
pop
xlat
shl
dec
js
and
sub
ds
sahf
daa
dec
jno
pop
dec
sbb
xor
sahf
sub
mov
popa
pop
or
inc
sbb
mov
ret
xchg
mov
hlt
daa
xorb
jne
adc
push
mov
mov
adc
add
xlat
xor
inc
lods
sarb
xor
lds
jbe
js
pop
movsb
jne
insb
out
and
cmpsl
mov
es
mov
push
or
aad
test
and
les
or
mov
fs
pop
and
iret
jge
xchg
sub
not
mov
shll
fsubs
mov
aaa
lret
cmp
sub
mov
jbe
shrb
xor
aaa
cltd
sub
inc
sbb
xchg
jbe
jmp
mov
pop
insb
jle
lea
and
lret
in
xchg
xor
mov
stos
jg
inc
jp
jns
and
mov
xchg
xor
mov
mov
push
test
and
pop
addb
in
in
mov
mov
mov
movsb
cmp
jg
xchg
xchg
stc
enter
dec
push
out
cmp
int
mov
aad
addr16
xor
pop
cmp
xchg
add
fldl
and
inc
dec
adc
cwtl
shlb
ret
int
push
cmpsl
mov
dec
clc
xor
jmp
add
mov
jb
jge
jge
push
push
adc
jo
jle
jo
dec
push
push
dec
cmpsb
cmc
cmp
adc
cld
into
sti
dec
inc
jge
cmc
call
sbb
leave
insl
jecxz
loopne
pop
loopne
pop
iret
jae
shll
loopne
push
loop
idivb
test
mov
xchg
mov
pop
xor
mov
iret
lods
jno
fs
lock
mov
sbb
arpl
hlt
sub
ss
bound
adcl
jo
rolb
movsl
jb
mov
dec
jns
pushf
mov
lods
lods
sub
sub
sbb
stos
idiv
xor
fucomi
lea
inc
pop
sub
mov
outsl
jbe
pop
ds
xchg
sbb
push
sti
xchg
sbbl
setg
test
mov
mov
jmp
cwtl
jae
sub
mov
or
cmpl
push
test
dec
adc
shrb
inc
test
jno
dec
movsl
add
push
imul
js
rolb
lret
std
sub
out
mov
jp
addr16
lods
sub
sbb
into
cmpsb
mov
into
mov
xor
sti
or
mov
ljmp
shl
mov
push
inc
into
repz
fwait
lock
adc
jmp
dec
rcrl
movsb
add
in
ss
cltd
call
push
cmp
dec
xor
pusha
pusha
mov
jle
in
idivl
jge
lcall
fstps
jge
mov
ss
sarb
xor
jle
into
inc
inc
ficoml
mov
nop
aaa
hlt
cmp
sbb
and
movl
out
fs
mov
cwtl
lcall
sarb
andl
jle
mov
xor
pop
add
loopne
out
fidivrl
jae
lret
sti
data16
cmp
inc
shll
jno
or
xor
outsb
gs
out
loop
and
stos
mov
hlt
iret
mov
into
sbb
mov
fstl
cmp
adc
lods
divl
repnz
fdivrs
aaa
sbb
lea
mov
addr16
cmp
aad
pop
dec
sub
pop
cmpsl
or
cmp
dec
pop
inc
or
jo
into
jns
pop
mov
stc
cli
or
das
lds
outsb
push
pop
inc
mov
xlat
fistl
insb
loop
stos
pop
jo
ss
mov
mov
jno
push
stos
fidivs
mov
outsb
scas
push
add
repnz
inc
inc
push
jl,pn
imul
add
cmp
jne
mov
inc
cmp
jb
jmp
mov
xor
add
jmp
mov
movzwl
mov
mov
mov
mov
mov
xor
add
cmp
jne
mov
xor
jmp
mov
add
mov
mov
test
je
mov
push
jmp
icebp
sbb
imul
outsl
stc
inc
inc
out
fcompl
jg
mov
mov
rclb
fsubrp
sub
mov
fsubl
push
push
push
int3
and
pop
lcall
popf
fisubrs
xchg
std
jecxz
loopne
jle
inc
mov
shlb
jmp
push
in
inc
call
loope
sub
sub
push
xchg
pop
sahf
pop
jp
fwait
sub
dec
testl
sarl
lret
ror
shrb
jle
scas
repz
push
pop
pop
adc
rcl
std
xchg
dec
mov
stos
out
cmpsl
lcall
into
xchg
and
push
jecxz
in
sbb
and
jbe
sub
pusha
out
mov
cmp
cmc
xchg
sub
ds
pop
movsl
sbb
push
cld
mov
std
xchg
cld
jns
mov
lea
jb
stc
in
aaa
push
sub
ja
rorb
adc
add
or
lahf
pushf
pushf
imul
cld
mov
int
dec
cmpsb
es
mov
xchg
cmp
push
jecxz
jp
pop
dec
pushf
mov
pop
pop
and
xor
cmpsb
pop
clc
xchg
xchg
leave
xchg
popf
jns
das
inc
push
loop
and
pop
test
addr16
cli
faddp
sub
mov
imul
dec
lods
and
mov
cmp
adc
call
mov
fildl
pop
or
rol
mov
push
gs
enter
shl
mov
loop
push
fucomi
jb
inc
dec
dec
or
and
mov
popf
mov
push
adc
call
sbb
push
loopne
je
mov
rcl
das
rorb
push
inc
add
aas
mov
lea
mov
addr16
out
dec
inc
mov
xchg
xchg
mov
jmp
push
in
and
movsl
push
inc
sbb
cmp
push
add
mov
push
dec
pop
mov
inc
xchg
outsl
pop
repnz
lret
cmpb
ret
jge
dec
pop
movsl
ja
loop
cmp
sbb
icebp
xor
mov
mov
subb
cmp
mov
jp
pop
xchg
inc
stc
jbe
insb
xchg
jb
aas
scas
mov
cwtl
sub
push
lea
inc
fdivs
pop
xor
jns
cmpsb
xchg
in
cmpsb
and
jo
xchg
fwait
inc
adc
push
adc
inc
mov
push
ret
and
lock
fcomps
std
lcall
add
stc
lods
mov
inc
inc
mov
les
pop
xchg
sub
xchg
dec
mov
imul
jmp
aas
fidivrl
sbb
bound
sub
dec
das
sbb
js
jo
jle
jo
sbb
adc
push
adc
jnp
mov
ret
jmp
sub
mov
lcall
xchg
lret
add
jno
cwtl
sahf
outsb
push
xchg
sub
js
xchg
vunpckhps
inc
dec
in
addb
js
subb
leave
sub
pop
push
in
mov
gs
inc
mov
int3
mov
in
cltd
out
ja
sbb
mov
cwtl
int3
mov
mov
jae
dec
and
ret
rclb
aaa
mov
rolb
xchg
cmc
mov
lods
jns
test
dec
pop
cmp
and
js
fnstenv
pop
cmp
mov
inc
nop
leave
xor
mov
loope
sub
cmp
sub
scas
jb
sub
cmpsb
int
mov
sbb
mov
ret
inc
sub
fsubr
sahf
daa
ja
movl
sub
or
cs
test
add
rorb
adc
sbb
mov
xchg
vpmadcsswd
bound
mov
fisubs
es
int3
test
or
inc
lds
pop
out
arpl
pop
lds
fucomip
xchg
mov
inc
gs
ss
pop
daa
push
jo
mov
ret
in
stos
sub
movsl
je
pop
fimull
sbb
rolb
int3
or
and
adc
dec
mov
xchg
jo
add
adc
lahf
and
inc
sub
adc
pop
sub
fsincos
aam
cmp
xchg
int
je
in
and
bound
out
data16
lods
fidivl
xchg
daa
add
xchg
jmp
rolb
sub
test
cmp
ljmp
adc
and
or
sar
arpl
pop
dec
mov
fists
pop
cltd
jb
cmp
sti
dec
ja
fwait
mov
mov
std
jmp
cmpsl
mov
rol
sub
cmp
ds
movsl
xor
popf
icebp
and
sbb
jo
les
aad
js
mov
push
mov
xlat
add
mov
or
add
mov
andb
cmp
mov
fdivrl
insb
ret
loop
pop
adc
aas
je
or
jae
adc
es
movups
push
dec
mov
ds
lds
pushl
fsubrs
sahf
das
and
mov
mov
mov
xor
mov
jmp
mov
jne
pop
push
fnstcw
sarl
jle
jo
clc
mov
cli
in
aas
push
stos
pop
inc
push
stos
popf
ljmp
fwait
or
and
test
xchg
cmp
test
lahf
scas
push
pop
jb
xor
or
fwait
sbb
and
mov
xchg
es
gs
test
lahf
jge
daa
cmc
lock
out
shr
sub
daa
outsb
sarb
sbb
icebp
mov
jecxz
add
mov
mov
xor
hlt
jecxz
or
dec
jg
outsl
aad
cs
leave
jmp
mov
push
cmp
or
dec
cmc
xchg
add
ljmp
adcl
stos
pop
ds
iret
sub
sub
push
pop
je
dec
lahf
int3
pop
rol
or
adc
and
inc
ja
add
in
xchg
dec
or
pop
pop
cmpsb
xor
iret
in
ss
jne
out
inc
push
jmp
cmp
in
andb
jecxz
lahf
rolb
pop
jno
jmp
repz
lret
lods
jle
add
fidivs
sbb
or
rorl
and
push
push
aad
lcall
test
cmp
lahf
fisubl
pushl
mov
lods
jmp
add
lea
out
inc
inc
pop
jb
dec
js
sbb
es
enter
in
add
fstps
jle
sub
xchg
sub
pop
jns
xor
xorb
addl
and
adc
cld
mov
lea
mov
pop
jecxz
lods
jp
cmp
fdivrl
sbb
out
in
pop
adc
adc
adcb
jo
inc
dec
xchg
insb
mov
jbe
and
or
insb
sbb
xor
inc
testb
inc
add
filds
or
push
cmp
ljmp
dec
sub
inc
xchg
aaa
popa
cmpsb
cmp
jb
data16
or
jmp
pop
je
pop
dec
mov
push
push
scas
cs
xor
jb
jl
xchg
loope
in
int
inc
into
adc
roll
add
xchg
sbb
push
push
popl
sub
xchg
mov
in
push
xchg
pop
push
rep
mov
inc
inc
int
push
test
sbb
jae
iret
idivb
jg
icebp
dec
mov
cmp
movb
ficomps
sub
jle
jmp
or
inc
aas
cmpb
pop
push
fwait
repnz
cmp
lock
fsubrp
cli
xor
mov
or
cmp
ret
or
add
mov
imul
mov
xor
mov
lea
cmp
je
mov
mov
mov
mov
mov
xor
xor
jmp
sub
sub
xchg
push
mov
les
add
mov
out
jae
pushf
and
pop
fldl
cs
sbb
xchg
iret
insl
pop
out
pop
jecxz
mov
jnp
pop
mov
xor
cmp
imul
add
dec
mov
fcompl
movsb
test
xor
scas
ret
mov
sbb
sarl
push
imulb
scas
mov
inc
mov
scas
cli
add
push
and
mov
js
push
and
dec
ret
stc
popf
or
xor
add
sbb
dec
sub
xchg
jecxz
lahf
rolb
pop
shlb
jae
test
ret
stc
fidivl
xchg
mov
lahf
ss
adc
sub
pop
adc
and
cld
lods
xchg
pop
mov
mov
or
lahf
jge
insb
and
mov
insb
xchg
ds
lock
and
and
cmc
xchg
aaa
fst
cwtl
pop
push
add
inc
add
imul
mov
loope
fnsave
pop
fwait
jp
lock
pop
in
or
mov
out
sar
mov
aas
jbe,pn
test
mov
roll
or
mov
shlb
pop
scas
inc
rcll
xor
dec
pop
xchg
lock
js
insl
adc
sbb
inc
stc
and
js
xor
bound
repnz
jnp
out
ret
cwtl
push
ror
scas
mov
xor
out
or
dec
in
dec
mov
imul
add
incb
addr16
jno
imul
fwait
in
pusha
mov
aam
test
add
pop
scas
iret
mov
addr16
push
mov
fbstp
sub
test
in
mov
sub
mov
ret
inc
lcall
add
cmc
inc
lea
cmp
fdivrs
lahf
jne
pop
pop
stc
cld
out
shl
add
stos
mov
js
aaa
dec
in
andb
mov
xchg
imul
pop
xor
icebp
filds
adc
add
sarl
inc
sbb
in
test
dec
aad
ret
in
rcrb
jns
push
call
pop
mov
iret
std
or
leave
aaa
enter
cwtl
and
xchg
inc
pop
fidivrs
popa
sub
loopne
jl
addr16
push
scas
mulb
xor
sbb
dec
sbb
mov
outsb
cmpsl
pop
shll
in
cmp
shlb
jbe,pt
mov
pushf
mov
subl
ss
jae
std
adc
frstor
pop
loop
mov
add
div
mov
jmp
adc
inc
rolb
xchg
int
rcll
test
inc
cld
jg
jg
mov
mov
xor
bound
lds
dec
mov
sahf
in
iret
dec
add
mov
mov
xor
mov
test
xor
aam
shrb
dec
icebp
cmp
shrl
aas
pop
pop
sbb
mov
jne
cli
imul
jns
adc
gs
cwtl
dec
fdiv
inc
ss
hlt
inc
sarl
xchg
mov
mov
xchg
rcr
jl
mov
mov
dec
xor
mov
outsl
fcomip
pushf
and
jne
inc
xor
and
fidivrl
mov
jecxz
out
mov
imul
jl
mov
js
fistl
testb
call
mov
fiadds
clc
lods
cwtl
mov
ret
push
xchg
addr16
xchg
gs
mov
mov
sarb
lcall
divl
in
iret
or
or
addr16
jns
subl
xor
je
push
xchg
in
mov
lock
imul
test
pop
rcrb
sbb
rolb
ret
sub
sub
int3
sbb
insl
xchg
add
mov
and
sub
sti
cmp
jo
pop
lahf
mov
repz
sbb
mov
outsl
pop
iret
sahf
push
in
jno
mov
adc
lret
fsubl
popa
add
cmpsb
xchg
rcll
adc
pusha
loopne
mov
pop
cmp
mov
jbe
push
xchg
lcall
pushf
inc
xchg
add
lret
mov
sbb
aad
sbb
subl
push
fstpl
cld
mov
cmp
cmc
xorb
dec
inc
int3
add
mov
adc
fsubrs
out
hlt
xor
xchg
sti
cs
or
ja
addl
imul
cmp
mov
dec
xchg
aam
ds
jae
pop
in
fistps
les
jg
test
dec
jmp
push
dec
mov
pop
pop
mulb
xor
sub
mov
adc
add
in
sub
clc
mov
inc
sbb
es
sbb
repnz
stos
imul
stos
jno
cmpsl
mov
fdivrl
push
mov
insb
pop
sub
ret
fisttpl
je
aad
aad
mov
add
pop
mov
cwtl
daa
mov
jns
pop
xchg
in
fdivrs
and
test
push
mov
xorb
mov
mov
sub
in
outsb
popf
dec
xchg
or
sbbb
cmp
cmpl
jbe
fs
rolb
shlb
lea
jmp
sub
mov
popa
pop
xchg
aas
cmc
call
jg
mov
out
sti
and
movsb
mov
cs
pop
dec
pop
insb
sahf
mov
int
pop
adc
shlb
mov
ret
enter
lret
int
pop
test
lret
dec
mov
arpl
test
in
inc
adcb
je
sbb
xchg
js
cmp
inc
mov
jmp
and
mov
in
cs
jnp
jecxz
das
leave
popa
cmp
pop
push
fstpl
les
inc
out
mov
cmp
lret
int3
mov
inc
jns
mov
int3
pop
or
lret
test
xchg
je
pop
fcompl
xchg
lret
insl
and
movsl
rcll
jecxz
faddp
subl
pop
sbb
hlt
xchg
jb
add
stos
and
jp
or
cmp
popf
ficomps
push
aas
repnz
scas
inc
jno
or
cld
daa
fwait
test
fcomp
jp
je
fcompl
in
cmp
add
pop
ds
mov
outsb
sub
pop
aad
ds
add
inc
rorb
adc
js
outsl
inc
sub
aaa
das
scas
xchg
inc
arpl
and
mov
pop
add
mov
or
and
out
mov
cli
cmp
jns
mov
lds
bound
cwtl
andb
cmpsl
ret
iret
jns
call
pop
in
shll
decl
dec
cmp
ret
aas
in
push
xor
fisttpll
adc
and
jge
pop
test
repnz
mov
in
mov
into
sub
dec
add
movsl
loope
pop
sub
jp
mov
ds
sub
xchg
and
mov
add
cld
inc
in
mov
divl
test
sub
rep
inc
movsb
ljmp
cmpsb
dec
clc
dec
repnz
jne
xchg
mov
stos
scas
mov
pop
rorl
in
sbb
or
or
hlt
mov
cmp
xor
lods
daa
repnz
jge
out
or
xor
mov
dec
std
dec
mov
or
or
rorl
in
lods
outsl
adc
sub
pop
addl
dec
or
lock
push
outsb
test
inc
scas
fnstsw
add
jmp
les
stos
pushf
jns
sub
dec
inc
mov
adc
sub
pushf
clc
xchg
push
insl
mov
mov
sarl
int3
push
clc
inc
or
inc
aad
cmpsl
in
push
mov
push
or
xchg
mov
jmp
dec
fistpll
arpl
pop
jp
adc
data16
jle
jo
inc
pop
push
movb
aas
push
push
scas
frstor
cmpsl
xchg
push
mov
sbb
fsubrl
mov
inc
xchg
mov
subb
adc
xor
movsb
jg
xchg
jno
pop
pop
fcomi
xchg
pop
pop
pop
inc
iret
ret
rolb
and
inc
xor
mov
out
cwtl
repz
and
dec
inc
adc
xor
pushf
jle
mov
aaa
popf
shl
lahf
mov
inc
das
cli
sub
je
pop
inc
movsl
in
dec
mov
add
push
jle
sti
lods
leave
ljmp
pop
mov
test
sbb
and
jl
adc
push
cmp
int
notb
in
pop
fimuls
lds
fisubrs
pop
sbb
in
or
mov
pop
movups
jmp
leave
sub
dec
nop
adc
fucom
clc
and
sub
in
xchg
in
aaa
ret
pop
in
aas
cld
sbb
orl
mov
test
rclb
lock
add
out
sub
jmp
add
mov
cwtl
clc
sahf
mov
popf
test
in
mov
insl
in
xchg
iret
das
adc
fstps
aam
push
nop
jp
aaa
fmuls
xchg
jb
cltd
adc
stos
jmp
pop
data16
pop
filds
xor
xchg
ret
jmp
icebp
xchg
rcrb
cmp
cmp
pop
movsl
popa
fs
fcmovb
jbe
xor
ljmp
mov
call
cmp
les
cld
push
or
or
popf
ret
int3
and
mov
sti
adc
jnp
or
adc
ljmp
or
push
xor
pop
pop
dec
sub
jge
push
sbb
divb
aas
mov
fdivs
shll
and
dec
hlt
xorb
lea
mov
add
in
das
pop
pop
sub
sub
dec
jb
lret
adc
jb
adc
xchg
inc
test
xchg
mov
daa
stos
add
cmpsl
sbb
mov
adc
pushfw
mov
jno
ret
enter
insb
sbb
adc
and
test
xchg
popa
sub
insb
xchg
inc
js
fidivrl
lods
arpl
outsb
scas
sarb
adc
dec
inc
mov
adc
pop
in
les
cli
fs
scas
fistps
xchg
mov
jnp
push
dec
dec
imul
aam
mov
xor
lea
mov
mov
mov
xor
add
imul
mov
xor
jmp
adc
iret
cmpsl
aad
jae
jl
jge,pn
xchg
insb
lret
jo
jle
jo
inc
sbb
sub
inc
scas
push
dec
ret
and
mov
adc
adc
sub
loop
es
movsl
inc
push
mov
test
push
outsb
ss
sbb
and
adc
les
sbb
in
lret
cmpsl
sub
cmp
add
int3
push
es
dec
out
sbb
out
push
jmp
aam
int3
inc
mov
not
imull
push
adc
fcompp
mov
mov
mov
stc
std
jecxz
outsb
adc
xor
es
ds
cs
pushf
jl
xchg
insl
divb
mov
std
gs
xchg
and
ljmp
ret
cmpsl
fildll
xchg
inc
ja
and
into
mov
mov
pop
xor
cmp
cs
inc
rorl
cmp
xor
fcoms
mov
mov
ret
hlt
fcmovne
inc
mov
jne
call
out
sub
mov
in
fisubrl
mull
and
mov
das
out
pop
jbe
lcall
out
jp
jne
mov
sub
mov
add
cmovl
and
loopne
jo
jo
push
roll
sahf
inc
data16
inc
dec
mov
cmpsb
mov
hlt
test
outsl
pop
dec
mov
stc
jle
xchg
in
mov
mov
ror
bound
mov
aad
cli
ja
inc
inc
fwait
movsl
jb
jmp
and
inc
cmc
mov
subl
lods
jle
addr16
pushf
cmp
and
cmpsl
add
popa
inc
std
loop
dec
mov
call
sbb
cmpsb
out
es
dec
fistl
add
jns
icebp
cmp
lods
test
mov
enter
inc
jne
cs
sahf
cmpsl
inc
pop
xor
xorb
sti
rclb
inc
enter
pop
push
add
ljmp
pop
flds
aaa
pop
xchg
pop
mov
sbb
inc
jecxz
test
pusha
mov
leave
mov
jne
pop
sub
andl
add
jecxz
jp
out
int
or
inc
shl
jge
in
cmpsb
and
imul
push
das
scas
pusha
popa
into
jae
adc
xchg
inc
sbb
xor
loop
insb
push
inc
inc
stos
mov
xchg
and
movsl
and
sub
ffree
je
sar
xchg
jns
and
ds
mov
and
xor
and
enter
push
out
popa
jbe
out
cltd
mov
lea
cmp
jne
mov
jmp
mov
mov
xor
add
mov
xor
lea
add
call
xor
inc
cmp
je
jmp
or
shll
jno
jmp
lds
cmp
adc
jo
jle
jo
fs
sub
test
mov
cmp
or
fisttps
lods
aaa
fldl
mov
push
lds
out
xor
imul
ja
add
mov
js
sbb
sbb
popa
or
pop
xlat
and
xor
ret
xlat
pop
pop
jge
stc
xor
mov
mov
cmpsb
jle
jge
popf
adc
push
addb
in
mov
push
jb
fcomps
pop
xlat
jb
and
lock
in
lea
ds
cmc
and
jle
add
inc
cmp
ret
mov
lahf
cmpsb
xor
jp
sub
ja
cvtdq2ps
int
pushf
push
lahf
sub
cmc
adcl
xchg
sysret
mov
push
repnz
adc
sub
fnsave
xor
jns
fs
and
fwait
outsl
mul
add
out
rorl
adc
cwtl
adc
pop
inc
mov
ja
mov
push
sti
pop
jne
rcl
sub
fsubrp
mov
sub
into
mov
mov
cwtl
xor
or
inc
and
add
std
cmpsb
mov
sub
ret
jbe
xchg
cwtl
leave
xor
jmp
mov
test
jp,pt
in
cmpsb
mov
mov
pop
or
xor
ss
push
xchg
mov
popa
outsl
and
push
xor
mov
or
add
xor
add
fcmovnu
inc
push
push
push
xor
lret
inc
jo
clc
outsl
arpl
and
inc
into
mov
test
adc
and
inc
jge
loop
popa
push
lock
xchg
cltd
add
sbb
or
fldt
gs
add
popf
mov
or
or
mov
stc
adc
shrl
movl
fildll
mov
in
loop
jb
fcompl
ret
pop
ja
and
addr16
lods
adc
aam
xchg
stc
enter
mov
mov
inc
icebp
movsl
bnd
sarb
add
add
jnp
dec
push
lahf
add
sub
les
add
mulb
hlt
enter
fldt
or
ret
in
jp
jnp
or
mov
fiadds
es
mov
cmp
xchg
xor
bound
adc
inc
xchg
subl
call
repz
fsubl
pop
hlt
add
test
cmpsl
dec
sbb
xchg
outsb
mov
es
stc
push
push
dec
mov
fs
mov
dec
fwait
jnp
lret
or
add
inc
xchg
sub
jmp
cmc
icebp
lret
mov
test
jnp
sbb
test
adc
mov
divb
xorl
jge
shrb
mov
cwtl
and
dec
pop
xchg
icebp
lea
cltd
mov
adc
jns
dec
mov
iret
xchg
and
inc
mov
mov
stc
lods
dec
mov
adc
mov
ljmp
push
arpl
xchg
lea
push
cmp
sub
mov
sti
and
je
push
mov
pop
cmp
lock
push
or
mov
pop
and
scas
sbb
movsb
xchg
out
cmp
or
aad
sub
jb
scas
pop
mov
aaa
lds
mov
shll
or
aad
mov
or
cld
daa
lcall
ds
mov
jb
inc
mov
shlb
xchg
push
jno
jnp
repnz
xchg
fnstsw
loopne
cmp
or
and
inc
data16
cld
push
mov
xor
icebp
adc
jmp
pop
bound
mov
push
scas
mov
jns
test
dec
jnp
out
rolb
mov
cmc
mov
mov
call
test
call
sbb
int3
xchg
lahf
add
mov
push
and
adc
dec
xor
push
mov
xchg
mov
mov
push
call
gs
aam
aaa
addl
fisubrs
mov
mov
push
in
pop
mov
stos
test
and
fs
into
js
adc
push
aaa
mov
push
push
sahf
push
pop
lcall
or
inc
ljmp
add
aad
add
imul
cmpsb
mov
inc
mov
out
mov
aad
pop
inc
call
aas
push
mov
push
sub
fisubs
imul
out
mov
int
cmp
dec
aaa
repnz
mov
xchg
sbb
cmpsl
rcr
mov
imul
push
and
mov
push
sarl
fwait
sub
repnz
mov
inc
loope
fiadds
aam
pop
jb
adc
fstl
pop
or
lret
nop
imul
lods
sbb
inc
scas
sahf
arpl
xchg
pop
sarl
insl
ss
fidivs
xor
jle
mov
cmp
add
js
loopne
sti
stos
sub
inc
push
inc
inc
roll
xchg
pop
and
mov
dec
test
mov
lahf
test
adc
pop
pop
mov
xchg
jae
test
mov
addl
ss
dec
jl
insl
aaa
xchg
jmp
cmc
std
fs
jno
mov
lods
call
jg
mov
out
sbb
sar
imul
insb
inc
or
or
mov
sub
rolb
popf
pop
enter
movsb
dec
out
sub
int
adc
sti
cmpl
jmp
jno
jns
roll
sbb
outsb
and
mov
test
and
mov
ficoml
push
lock
rcr
push
mov
pop
cs
leave
dec
cwtl
lahf
dec
mov
fs
mov
out
addr16
sub
sub
loop
dec
insb
mov
fcompl
insb
call
pop
jo
pop
sub
and
adc
jns
push
mov
ss
sbbb
fstpt
shll
hlt
jge
xor
or
jns
mov
cs
adc
repnz
mov
rorl
cmpsb
jp
mov
shlb
andb
daa
daa
adc
gs
inc
mov
movsl
fs
push
cli
in
aas
push
or
in
xchg
dec
les
mov
jne
mov
dec
je
cmp
inc
push
jge
adc
sub
pushf
mov
jb
cmpsb
mov
fsts
jne
add
pop
pop
fstpl
push
mov
cmp
pop
sub
add
jbe
xchg
inc
int
shll
sub
in
lds
xor
pushf
movsl
jb
pusha
mov
jmp
cmpsl
nop
mov
icebp
stc
bound
iret
push
pop
shr
cmpsb
outsb
imul
jns
cmp
xor
outsl
outsl
xlat
loop
jo
mov
clc
lret
insl
popa
sub
cmp
pop
inc
aaa
test
sub
adc
dec
insb
sahf
imul
lds
rep
scas
mov
adc
imul
mov
shrl
add
insl
inc
insb
rcll
ja
gs
xor
jbe
outsl
mov
stos
sbb
push
inc
outsb
das
hlt
push
cld
imul
xor
int
pushf
xchg
sbb
and
pop
jo
outsl
push
jo
test
pop
push
mov
ss
lahf
ret
pop
xchg
shlb
inc
mov
inc
inc
sarb
sub
adc
add
push
sbb
and
inc
xchg
add
movsb
jge
aas
sti
into
jmp
sbb
push
inc
stos
mov
ds
fwait
jge
adc
data16
bound
mov
jno
mov
push
cmpsb
sbb
out
xchg
popa
xchg
jmp
lods
scas
in
sbb
scas
sub
shll
mov
push
mov
jmp
outsb
ds
loopne
outsb
outsb
mov
mov
sub
sbb
jo
jle
jo
shlb
pop
lock
add
adc
pop
pop
xor
adc
repnz
in
shrb
mov
ja
jnp
data16
lods
cmpsl
inc
aad
dec
push
sub
fistps
push
dec
cmp
notl
jl
subb
fcoms
mov
rep
out
jno
shll
loopne
xchg
das
mulb
add
jno
jl
mov
pusha
jp
fnstsw
mov
in
dec
add
insl
inc
sub
pop
out
aas
mov
mov
mov
dec
mov
sbb
pushf
dec
jnp
and
data16
pop
pusha
push
rolb
out
xor
jl
sub
test
pop
inc
and
lret
insb
lret
xor
push
mov
mov
loopne
mov
jmp
add
negb
add
add
and
mov
pop
pushf
jo
js
iret
sub
arpl
rcr
decl
inc
inc
aaa
and
mov
cld
jge
shrb
lcall
adc
ss
std
out
mov
fmuls
in
xchg
cmp
mov
es
cmp
gs
sub
imul
xor
sbb
out
sbb
cmp
mov
jmp
mov
lds
scas
out
sbb
jl
or
pushf
notb
pop
clc
lret
jg
or
iret
jno
out
das
jno
das
fiaddl
pop
mov
cmpsl
pop
fistpl
cld
hlt
cmp
std
adc
cmp
mov
lret
inc
jmp
push
stos
sub
cmp
jle
mov
lahf
xor
fidivl
xlat
cmp
push
pop
xor
fnstcw
add
lret
sbb
inc
jb
jo
xor
jl
pop
test
loop
inc
sub
jecxz
lahf
addl
popf
pop
mov
jge
pop
push
into
mov
sbb
push
mov
nop
stos
mov
mov
jae
and
idivl
lret
data16
stc
in
inc
imul
inc
in
cwtl
mov
stos
outsb
jle
imul
mov
shlb
mov
mov
xlat
daa
fwait
jnp
cmpsb
rclb
mov
imull
test
imul
imul
jbe
dec
movsl
sahf
inc
imul
scas
roll
xchg
push
xor
mov
jmp
cmp
push
add
data16
and
inc
lds
aaa
sbb
mov
lods
cmp
sbb
movsl
jl
bound
scas
lret
push
mov
pop
addr16
mov
repnz
lods
sub
insl
fnstsw
mov
pop
pop
pop
adc
notb
xchg
mov
pop
loope
cltd
mov
int
or
nop
cmp
scas
mov
inc
or
insl
fsts
mov
outsl
fstl
mov
pop
imull
sbbl
test
add
xor
jo
mov
fistpll
mov
fsub
mov
mov
mov
cmpb
jmp
out
inc
addr16
xchg
sub
sahf
adc
jne
adc
cmpsl
cmp
mov
mov
fadds
push
inc
adc
mov
or
xchg
negl
aam
out
dec
fcoms
loop
clc
stos
jp
add
and
fldcw
inc
jle
ja
aaa
fidivl
cld
ds
mov
and
inc
bound
shlb
xchg
popa
xchg
repz
pop
repnz
fistpll
pop
mov
add
mov
push
pop
aas
cmp
orb
pop
subb
push
ret
mull
movsl
mov
dec
xchg
ret
pop
aad
push
pop
inc
fcoml
jmp
add
dec
mov
enter
sbb
dec
pop
imul
jp
mov
iret
or
mov
lds
xchg
scas
cld
cwtl
mov
loop
stos
sti
jbe
movsl
mov
inc
sub
scas
pop
lahf
add
inc
icebp
popf
loopne
jnp
mov
sbb
mov
into
idiv
and
sub
cld
aas
rcl
push
jecxz
cmpsl
fstl
mov
adc
mov
lock
outsb
add
jp
ljmp
dec
jle
gs
shlb
jle
pop
out
mov
adc
fsubrp
push
shl
clc
jae
test
dec
sbb
mov
push
lods
repz
rolb
push
xor
pop
dec
cwtl
jmp
pushf
adc
into
dec
cmp
or
xchg
fstpt
sbb
icebp
and
repnz
and
mov
xchg
idivb
xchg
enter
ror
sbb
push
leave
bound
imul
aas
cmp
sub
lods
out
popa
loope
cmc
add
inc
jle
scas
scas
filds
lret
ret
stos
popa
divb
fucomip
hlt
adc
fisubrl
mov
mov
js
repz
jnp
popa
ja
cmp
add
dec
jmp
fsubp
stos
mov
insb
leave
pop
sub
sbb
pushf
jo
jg
mov
lret
insl
pop
lock
xchg
add
fdivl
dec
or
adc
mov
mov
push
aam
sub
pusha
outsb
add
repz
pusha
adc
clc
pop
mov
xor
out
xchg
sub
fcomps
and
test
sti
incb
popa
dec
push
daa
cltd
rorb
outsl
dec
jbe
inc
insb
xchg
mov
sbb
adc
jb
dec
outsl
add
and
int3
cld
mov
aad
das
lods
mov
cs
mov
stos
lods
ja
xchg
imul
out
mov
pop
or
test
ja
test
jnp
cmc
xchg
loope
test
fistpl
push
lahf
and
pop
dec
inc
bound
jns
lahf
data16
sbb
and
movsb
fistpll
mov
xchg
das
mov
xchg
call
imul
test
or
outsl
adc
xchg
sbb
mov
es
xorl
js
inc
xor
lcall
dec
fldl
mov
enter
xchg
test
sbb
mov
imul
insl
addr16
sbb
stos
xchg
cmp
imul
fidivrl
into
cmp
movsb
aaa
loopne
dec
sub
xlat
cmc
mov
pop
cmpsb
pusha
dec
or
test
sub
scas
add
cs
mov
test
popa
jle
mov
mov
nop
loop
inc
stc
adc
sbb
add
lret
push
scas
or
outsl
inc
push
dec
add
jl
mull
mov
xchg
lods
bound
pop
push
add
fwait
gs
imul
xlat
jle
mov
mov
dec
fsubs
or
outsb
cmp
sbb
xlat
das
divb
xchg
push
or
push
sub
rcr
fst
movsl
sub
arpl
sub
lcall
subl
mov
lods
mov
push
mov
mov
pop
mov
js
rcr
ja
push
lret
out
outsb
cmp
mov
and
mov
test
cmp
stos
lret
fldenv
fadds
imul
fcomp
out
push
mov
mov
movsb
shll
mov
cmpsl
xor
push
testl
push
and
xchg
test
mov
xor
out
mov
mov
or
sti
inc
pmaddwd
subl
mov
mov
in
mov
lret
shrb
jbe
dec
scas
fbld
iret
sub
xchg
movsl
or
hlt
pop
mov
pop
jmp
cld
pop
cmpsl
addr16
gs
mov
shl
mov
jle
jo
aam
sbbl
mov
jp
push
sbb
enter
lock
mov
sub
jno
mov
xor
xor
xchg
xor
test
movsb
loope
repnz
scas
hlt
sub
xor
ds
daa
dec
and
lcall
mov
pop
jecxz
mov
and
imul
push
cli
dec
pop
mov
mov
dec
add
test
pop
ja
mov
xchg
adc
mov
daa
push
inc
sbb
in
aas
xlat
cmp
sbb
pop
div
jg
jo
sti
aad
mov
out
hlt
sbb
add
adc
xor
pop
outsb
mov
stc
push
pop
test
adc
leave
dec
mov
loop
xchg
push
sbb
dec
push
inc
pop
cmp
sub
jb
xor
stos
xchg
push
ret
ljmp
dec
ja
jmp
mov
pop
fldl
inc
cmp
andb
jl
loop
pop
push
clc
adc
addb
imul
icebp
pop
imul
and
dec
scas
add
out
int
mov
rolb
xor
sbb
jge
fmull
andb
and
mov
sbb
push
ss
add
std
sbb
loop
scas
cwtl
orb
cmp
xchg
lods
popf
mov
pop
adc
addl
scas
repnz
lret
js
fneni(8087
clc
cld
inc
lcall
or
add
jnp
jmp
ljmp
mov
add
int
push
testl
sbb
xchg
hlt
mov
fs
xchg
arpl
out
stos
xchg
rcl
in
repnz
sub
loop
shl
fnstcw
js
pop
iret
add
sub
sbb
push
pop
lret
xchg
mov
stos
mov
loope
xchg
xchg
or
mov
mov
adc
stos
or
nop
rol
repnz
jo
pop
inc
cmpsb
add
add
cld
ljmp
jne
test
sbb
mov
dec
adc
mov
bound
inc
and
jecxz
lds
lret
pop
lods
in
cmp
lock
push
inc
mov
and
insb
mov
pop
mov
mov
test
xchg
int3
out
sti
xchg
into
or
test
jo
mov
mov
es
jecxz
ror
mov
es
decl
xchg
in
das
aad
lods
in
cld
xchg
pop
pop
leave
ret
dec
push
mov
mov
or
dec
add
add
add
movl
xor
test
enter
mov
hlt
test
pushf
enter
movl
inc
inc
cld
xor
or
mov
call
pop
mov
dec
mov
pushl
or
ljmp
dec
loopne
rorb
add
mov
hlt
add
enter
dec
add
mov
orl
xor
lret
enter
mov
lea
push
mov
fs
decl
push
and
pop
inc
mov
push
pop
cld
dec
lea
mov
add
movl
decl
xor
cld
dec
jne
lea
push
mov
or
add
sub
add
rolb
inc
add
add
mov
incl
lea
call
add
jne
decl
dec
add
xchg
loopne
inc
incl
mov
xor
add
enter
mov
hlt
add
mov
add
add
incl
sbb
jne
mov
mov
movl
incl
fisttpll
test
inc
aas
inc
lea
inc
mov
mov
cld
in
inc
jmp
fisttps
jecxz
out
incl
out
aas
inc
ljmp
incl
movl
insb
test
pandn
aas
add
mov
incl
or
mov
xchg
fildl
mov
cmp
dec
leave
mov
fsubrs
add
lea
push
add
mov
mov
add
mov
cld
push
decl
push
mov
call
mov
cld
add
test
in
in
cld
jge
mov
fsub
add
mov
add
add
mov
inc
push
fisttps
test
fadds
jmp
fildl
inc
jo
test
jmp
incl
in
add
jne
mov
cld
incl
mov
mov
add
call
ret
cld
incl
out
xor
mov
cld
jo
or
add
push
add
mov
decl
add
inc
orb
add
mov
mov
inc
sub
add
rolb
jne
xor
incl
call
mov
call
xor
push
adc
loopne
ret
loopne
xorl
cmp
bswap
rolb
jmp
mov
add
cld
jne
xor
push
add
add
inc
add
mov
test
add
incl
jmp
adc
mov
pushf
mov
lea
xor
call
call
jne
xor
add
pushl
call
int3
incl
mov
xor
add
xchg
in
add
add
add
mov
mov
or
inc
test
je
mov
xor
push
or
inc
in
mov
mov
fmul
add
mov
cld
loopne
inc
push
cmp
movaps
cld
fadds
jne
push
in
jne
lea
das
mov
mov
mov
xor
adcl
rclb
inc
lock
inc
xchg
ud0
incl
lret
jbe
mov
push
pop
mov
inc
lret
inc
iret
jb
mov
enter
xor
pushf
mov
xor
dec
add
inc
mov
xor
add
mov
fmuls
xor
mov
roll
xor
mov
clc
enter
mov
test
clc
incl
cmp
pushf
or
enter
xor
pushf
inc
ds
pushf
inc
mov
lock
add
mov
sarb
adc
dec
adc
add
jmp
jb
add
xor
xor
add
clc
enter
pop
mov
push
push
xor
xor
add
add
lret
repnz
cli
fdivr
test
dec
inc
xor
add
mov
mov
clc
jne
mov
into
into
scas
dec
mov
sub
cmp
mov
mov
mov
add
xor
xor
lret
mov
inc
add
mov
lods
test
xor
mov
lock
bswap
lret
test
jmp
add
push
mov
test
push
clc
xor
xor
add
add
push
dec
mov
stc
roll
scas
mov
xor
xor
add
mov
clc
lret
into
mov
mov
mov
int3
add
xor
xor
add
mov
lock
stc
mov
or
jmp
dec
dec
mov
clc
test
clc
rorl
mov
call
les
lret
ja
mov
dec
xor
mov
clc
push
lret
mov
adc
jb
add
call
cmp
movsb
pushf
inc
xor
mov
clc
dec
lret
mov
call
scas
mov
pushf
sub
cmp
lods
xor
add
mov
mov
cmp
jb
add
dec
scas
mov
shrl
into
cmp
mov
dec
dec
mov
lret
xor
add
imul
mov
xor
mov
add
mov
inc
rdtsc
xlat
pushf
jge
xor
sub
cmp
jb
add
rorl
xor
add
jmp
mov
dec
into
mov
pushf
shll
lret
or
add
in
push
mov
fs
dec
sub
dec
xor
jge
mov
add
dec
decl
adcb
add
jge
push
push
shlb
xor
xor
inc
add
dec
or
jbe
mov
ror
enter
decl
push
lret
push
mov
mov
cld
subb
sti
add
push
lcall
bswap
pop
inc
decl
push
xor
movl
aas
push
inc
xor
add
mov
jmp
mov
les
mov
mov
cmp
mov
add
xor
pushf
lret
cmp
call
inc
inc
mov
mov
enter
add
add
clc
enter
push
pushf
mov
int3
or
test
clc
gs
add
push
xor
sub
dec
add
mov
or
cmp
dec
out
xor
mov
dec
add
push
push
add
sbb
mov
xor
dec
inc
xor
add
push
dec
mov
lret
into
sub
dec
adc
inc
push
test
unpcklps
jmp
add
movl
xor
rolb
clc
fs
mov
xor
sub
mov
add
sub
mov
mov
clc
addl
lcall
inc
decl
test
decl
push
add
dec
or
rorb
into
add
mov
sar
adc
clc
fadds
mov
push
adcb
add
lret
mov
cld
mov
into
add
jne
incl
rclb
push
mov
mov
sar
or
push
add
pushf
xor
pushf
mov
test
clc
inc
inc
mov
sub
mov
dec
xor
mov
xor
orl
shll
int3
lea
push
xor
pop
lods
incl
mov
pushf
jo
cmpl
inc
add
push
in
inc
push
mov
cld
add
adc
add
jmp
add
mov
dec
push
cmp
unpcklps
jne
decl
mov
shlb
inc
add
lret
decl
stc
in
or
dec
clc
xor
mov
rolb
inc
add
clc
inc
lret
mov
in
lret
into
into
scas
dec
mov
sub
cmp
mov
int3
test
xor
xor
lret
mov
inc
add
mov
xor
mov
call
lret
test
jmp
add
push
mov
mov
lret
xor
add
add
push
dec
mov
stc
roll
scas
mov
xor
xor
add
mov
clc
lret
into
mov
test
push
jbe
mov
mov
push
add
rdpmc
lret
add
dec
stc
mov
or
jmp
dec
dec
mov
clc
test
clc
rorl
mov
lock
inc
mov
hlt
pushf
jge
sub
cmp
ja
mov
dec
xor
mov
clc
push
lret
mov
adc
jb
add
lock
sub
mov
mov
mov
mov
lock
ror
push
scas
mov
pushf
sub
cmp
movsb
xor
add
mov
mov
cmp
jb
add
dec
scas
mov
shrl
into
cmp
mov
dec
dec
mov
lret
xor
add
imul
mov
xor
mov
add
rolb
rdtsc
xlat
pushf
jge
xor
sub
cmp
dec
xchg
incl
jmp
mov
dec
into
mov
pushf
shll
lret
or
add
in
push
mov
fs
dec
sub
dec
xor
jge
mov
add
dec
decl
inc
push
decl
lea
mov
push
mov
les
add
incl
mov
cld
lret
add
jne
in
ror
scas
into
add
not
adc
inc
push
mov
push
mov
fdivr
sti
sbb
pop
xchg
leave
pushf
add
push
cmp
sqrtps
decl
push
cld
xor
lret
clc
xor
add
hlt
or
mov
hlt
dec
add
leave
mov
push
roll
mov
mov
lar
push
lret
jne
mov
or
mov
cld
inc
mov
add
in
test
fdivr
ret
cld
mov
clc
xor
mov
loopne
mov
mov
clc
jne
call
and
je
mov
cld
or
push
add
add
inc
push
mov
pop
mov
ret
push
mov
clc
lock
jne
jne
mov
faddl
jne
cmp
pop
mov
push
inc
lea
inc
inc
int
inc
cld
jo
inc
xchg
mov
mov
or
inc
inc
mov
cld
jmp
mov
mov
rclb
iret
inc
leave
decl
mov
mov
mov
push
nop
incl
push
leave
iret
add
push
jmp
inc
push
mov
in
push
sbb
add
mov
cmp
jne
push
pop
push
mov
or
add
sub
int3
jne
add
sbb
mov
lea
push
enter
testl
enter
negl
or
inc
loope
sub
inc
loope
add
push
push
imul
adcl
add
lea
mov
cmp
jne
mov
in
add
out
inc
aas
jmp
lock
and
mov
call
push
add
ud0
hlt
add
cmp
flds
out
call
cmp
shl
pop
fisttpll
push
add
add
push
add
sub
jne
lods
mov
dec
out
into
push
loopne
shrb
xorl
roll
mov
cmpl
mov
push
push
push
sub
push
adc
insl
mov
add
inc
mov
pop
addl
add
add
roll
cli
push
pop
lret
add
decb
sub
and
dec
inc
shll
add
pop
add
pop
dec
jmp
and
push
out
jmp
jmp
mov
decb
add
pop
icebp
mov
insb
adc
mov
or
mov
cld
jge
aas
and
adc
mov
and
dec
add
add
fadds
stc
enter
sbb
sbb
in
in
add
jne
cmp
jb
jmp
mov
add
add
jb
pop
faddl
or
inc
or
xlat
dec
push
add
leave
roll
add
mov
int3
jmp
mov
jne
mov
call
pop
add
pop
or
push
mov
int3
add
jae
int
enter
add
mov
push
pop
add
push
lea
mov
jb
mov
push
add
add
add
int3
jne
movsbl
add
add
mov
add
add
mov
sub
jb
add
jge
add
addl
jne
je
mov
rorb
orl
mov
mov
fadds
inc
pop
lea
push
out
add
add
mov
jb
add
push
call
add
jae
icebp
inc
mov
int3
out
loopne
sub
push
pop
push
jl
add
xor
mov
rcrb
rorl
inc
shr
orl
push
pop
add
jmp
mov
fdivrl
push
pop
call
mov
in
rolb
call
pop
enter
repz
xorl
je
or
jne
jmp
pushl
push
pop
cmpl
jge
mov
sub
pop
inc
mov
sub
lods
add
enter
repz
stc
jge
jnp
call
fadd
dec
insb
stc
cmp
push
mov
jne
mov
mov
add
sub
and
cmp
sbb
pop
call
fsubr
sti
add
add
add
roll
mov
clc
jne
mov
loopne
loopne
lods
int3
inc
mov
add
sub
shrb
add
call
add
dec
insl
in
lea
inc
inc
sub
orl
and
rorl
or
mov
stos
adc
inc
add
jne
mov
cmp
sub
sar
ljmp
sub
mov
mov
and
jne
sub
sbb
dec
push
add
ret
mov
leave
sub
ret
pop
push
rolb
addl
jb
ret
in
jecxz
push
xchg
jne
cmp
jne
mov
rorl
mov
pop
nop
mov
les
add
inc
mov
mov
cmp
or
inc
inc
xor
cld
add
add
add
sbb
dec
je
mov
add
and
jae
mov
incl
push
shr
in
push
add
add
inc
mov
add
push
cmovne
xor
push
pop
xor
pushf
add
rcr
inc
add
add
out
inc
inc
sub
dec
and
jo
leave
add
lea
ret
mov
xor
mov
sbb
stc
mov
ss
add
add
add
add
movb
or
dec
lea
or
movsl
fiadds
jae
or
in
pushf
inc
xor
pop
inc
shl
inc
sub
inc
add
add
loopne
inc
ret
inc
mov
leave
and
add
mov
sbb
sbb
stc
test
lea
mov
dec
sarb
add
inc
ljmp
or
jge
mov
clc
leave
inc
add
rdpmc
sbb
mov
cmovne
jmp
inc
mov
sbb
mov
add
out
add
sub
add
jo
leave
movl
inc
add
inc
out
stc
int3
jb
xor
or
dec
mov
movb
loopne
inc
lea
push
movb
xor
lea
inc
jae
ficomps
addb
test
incl
inc
add
test
jne
orl
jmp
inc
jne
mov
mov
shlb
push
mov
gs
add
inc
dec
into
mov
jl
add
inc
mov
add
add
inc
or
inc
in
fsub
inc
add
add
call
pop
test
dec
jmp
pushl
loopne
movl
push
incl
mov
cwtl
movl
sbb
rorb
inc
rorb
test
add
add
push
add
mov
incw
add
xor
push
cli
popw
push
xchg
sbb
test
callw
adcl
mov
mov
push
fsubl
dec
inc
mov
lret
fistl
ljmp
jmp
in
lock
mov
xor
add
stos
data16
incl
data16
inc
shlb
add
addl
mov
add
push
lea
addb
jge
mov
rol
mov
rorb
orb
test
push
mov
orb
push
xor
aam
test
cmp
data16
dec
test
xor
lahf
mov
mov
data16
sbb
dec
mov
mov
add
jne
test
jne
sti
sbb
cld
jmp
inc
mov
data16
push
incl
test
sbb
lock
pushl
xorb
add
xor
movw
mov
sbb
mov
add
add
xor
inc
add
add
inc
jmp
addl
or
jmp
push
in
test
xor
mov
mov
push
add
decl
add
decl
movsl
add
add
push
xor
xor
mov
push
push
jne
mov
sbb
jne
incl
add
add
mov
sbb
leave
test
jne
call
xor
mov
enter
mov
mov
sbb
sbb
mov
inc
decl
add
xchg
ret
add
add
mov
lea
add
mov
inc
rdpmc
jne
add
inc
call
add
orb
ret
incl
add
cmp
pushl
add
test
je
mov
sbb
test
js
add
sub
mov
add
dec
push
mov
mov
mov
cld
or
dec
incl
push
add
mov
orl
add
push
xor
inc
mov
push
incl
inc
add
addb
mov
lea
je
decl
call
mov
hlt
call
mov
cwtl
mov
mov
addl
mov
inc
jmp
ljmp
mov
and
pushl
lcall
add
enter
add
adc
add
mov
xor
jmp
mov
in
inc
or
decl
jne
mov
mov
lock
xchg
jmp
adc
inc
mov
push
sub
push
test
inc
dec
mov
movl
add
add
mov
push
roll
bound
xor
sub
push
lea
jne
incl
jnp
mov
fs
sbb
out
or
ret
inc
decl
test
clc
lcall
or
inc
dec
incl
add
call
add
push
adc
mov
mov
addl
incl
inc
stos
mov
add
mov
cmp
movsb
mov
sbb
addb
call
xor
pop
inc
xor
pushl
mov
pushl
mov
sub
add
mov
mov
ret
mov
ret
mov
add
mov
xor
sar
test
inc
add
testb
push
add
add
add
add
add
mov
mov
sbb
jne
mov
xorb
add
cld
add
mov
cld
add
lret
add
sbb
dec
or
dec
sbb
inc
dec
mov
sbb
nop
scas
add
add
mov
add
mov
cmp
xor
gs
je
push
sarb
mov
push
cmp
add
dec
mov
in
adc
pop
inc
leave
or
gs
add
into
in
enter
push
xorl
or
jnp
test
add
mov
ltr
decl
clc
out
add
cmp
jge
jb
je
pop
push
mov
in
roll
orl
cmpl
hlt
mov
push
jns
lock
ror
test
dec
rcpps
mov
inc
test
je
mov
adcl
and
jp
rcpps
add
sbb
add
je
cmp
js
add
jns
vmread
add
adc
jge
mov
add
or
push
push
mov
add
pop
add
mov
inc
pop
xorl
add
push
clc
mov
jp
add
divl
test
je
mov
or
decb
jbe
mov
add
cmp
add
je
mov
mov
hlt
orb
jb
jmp
xor
pop
pop
pop
ret
ret
mov
xorl
pushf
xor
wrmsr
test
dec
ret
mov
pop
dec
jne
xor
inc
dec
jbe
inc
pop
add
push
dec
push
mov
and
jo
mov
sbb
mov
nop
or
jne
cmp
xor
add
cmp
js
jae
xor
jmp
mov
fdecstp
test
add
add
mov
cmp
adc
jge
mov
jl
clc
dec
jge
mov
jb
mov
mov
xor
add
mov
inc
pop
jge
cmp
mov
imul
fimuls
fists
in
jne
mov
imul
fdivrp
filds
test
inc
mov
mov
adc
rcll
mov
fiadds
mov
mov
xor
mov
xlat
into
ffreep
lret
iret
dec
inc
mov
fmull
dec
jnp
add
mov
inc
dec
lea
add
jb
add
inc
imul
cld
clc
mov
incl
or
sbb
lret
add
dec
add
enter
inc
pop
decl
add
add
mov
xor
or
pop
cltd
push
clc
mov
xor
add
cmp
hlt
cmp
or
mov
loopne
mov
cld
pushf
pop
pushf
mov
lock
adc
orb
xor
dec
mov
iret
inc
jne
mov
cmp
je
add
or
dec
inc
mov
cld
add
cmp
mov
or
mov
or
inc
xor
pushf
call
jne
mov
fcomps
add
incl
cld
add
mov
cld
inc
fidivrs
fbstp
mov
adc
fadd
add
mov
inc
mov
loopne
sbb
sbb
pushf
add
mov
cwtl
inc
inc
jne
mov
clc
add
mov
or
inc
lea
add
inc
rorl
add
shufps
jmp
xor
hlt
mov
fadds
xor
add
cmp
pmuludq
jmp
mov
or
inc
mov
jne
mov
clc
add
xor
jne
pushl
add
mov
cld
add
xor
mov
adc
sub
lea
add
jb
add
inc
add
inc
mov
or
mov
in
scas
inc
mov
in
add
mov
dec
mov
mov
cld
push
dec
add
mov
in
cmp
mov
mov
mov
xor
cmpl
xor
jmp
add
xor
add
cmp
mov
mov
adc
jmp
mov
cld
mov
push
jne
dec
or
push
inc
in
add
or
dec
cld
mov
xorl
pushf
decl
mov
mov
xor
mov
inc
mov
mov
call
add
call
push
xor
pmulhuw
test
mov
mov
xor
xor
xor
add
inc
mov
movl
sub
lock
mov
mov
or
ja
mov
cld
cli
mov
cmp
bswap
mov
mov
clc
repnz
push
xor
xor
pop
jmp
mov
xor
lea
xor
pushf
out
neg
insl
test
clc
pop
inc
or
xor
add
jne
mov
in
push
xor
add
cmp
add
mov
mov
add
mov
mov
pushf
pushf
xor
jne
mov
icebp
icebp
shl
mov
pop
jne
mov
in
jmp
add
mov
or
inc
jne
mov
ret
or
jge
sub
xor
add
mov
clc
negl
xor
cmp
repz
xor
add
mov
mov
cld
lock
test
clc
add
fdivrp
test
jnp
add
jae
sub
shll
leave
call
in
in
add
mov
in
test
mov
xor
pushf
jnp
xor
push
loopne
jne
mov
add
xor
mov
cld
jb
add
jne
mov
jge
mov
lock
xor
mov
lock
jge
xor
dec
mov
loopne
jge
add
icebp
add
dec
hlt
xor
mov
in
jge
mov
dec
pop
xor
inc
hlt
xor
mov
repnz
cmp
test
fistps
inc
mov
add
inc
test
add
add
ret
jnp
inc
inc
xor
fdivl
test
push
add
cmp
setl
mov
call
or
inc
mov
and
lock
movl
mov
clc
xor
mov
inc
mov
mov
mov
mov
hlt
inc
rorl
mov
push
mov
in
jne
mov
addl
clc
mov
add
rolw
mov
jne
incl
inc
push
test
sub
add
and
add
mov
and
adc
inc
inc
push
add
add
enter
mov
add
add
str
lea
sbb
dec
cmp
inc
push
mov
push
add
mov
inc
add
add
mov
loopne
dec
mov
cld
push
xchg
add
add
or
dec
loopne
xchg
push
add
dec
jmp
mov
sbb
inc
xor
add
push
divl
and
add
jno
incl
inc
push
push
mov
mov
push
inc
enter
push
call
pop
push
mov
mov
push
jo
incl
or
call
fmull
mov
mov
adc
dec
xor
mov
mov
mov
push
lret
movb
inc
movntps
lret
into
dec
lret
mov
mov
fdivl
mov
push
mov
sbb
dec
sarl
push
jne
mov
lea
call
sbb
add
push
mov
push
mov
test
xadd
pop
add
mov
or
push
add
add
and
call
add
mov
add
xor
add
inc
je
push
cli
dec
mov
or
inc
add
data16
subl
add
add
enter
int3
loopne
rolb
lea
data16
add
sbb
inc
lldt
xor
sub
add
ror
dec
inc
cmp
cld
or
into
out
lret
dec
mov
loop
cmp
inc
daa
loop
out
add
add
push
inc
xor
add
push
push
inc
in
push
inc
sbb
rorb
addb
ljmp
xor
mov
fmuls
add
lea
add
popl
add
push
incw
mov
add
xor
test
inc
mov
add
or
or
inc
mov
jne
mov
add
add
adc
adc
push
mov
mov
inc
mov
or
push
jne
call
inc
sarb
out
add
add
and
fs
incl
jo
leave
scas
inc
add
orb
call
shr
xchg
add
add
dec
and
push
decl
mov
mov
lea
mov
add
mov
push
shlb
inc
in
jno
push
mov
mov
je
mov
sbb
popl
add
add
adc
jmp
sub
jne
mov
in
popl
push
incl
adc
add
call
and
and
inc
test
sldt
xor
pushf
jmp
mov
or
inc
call
mov
loopne
inc
add
mov
add
add
cmp
test
sbbl
jne
call
leave
rcrb
add
add
add
inc
mov
fcom
add
lea
pushl
call
mov
fstps
push
pop
mov
addl
mov
xor
xor
pop
or
inc
push
in
or
movsl
xbegin
clc
adc
divb
or
test
jno
add
adc
xchg
test
clc
data16
orl
rolb
mov
mov
push
add
push
jge
add
jne
mov
jmp
xor
pop
cvtdq2ps
ret
mov
xor
add
push
rdpmc
out
add
mov
ret
sbb
cmp
or
or
pop
inc
add
add
invd
jge
mov
cli
xor
mov
ret
mov
sub
inc
xor
pushf
inc
mov
hlt
test
mov
xor
dec
or
jne
mov
call
inc
mov
add
add
inc
mov
addl
inc
mov
lock
jge
mov
cli
xor
add
test
add
cmp
xadd
test
mov
xor
add
pop
loopne
inc
clc
xor
add
data16
mov
hlt
xor
data16
data16
cmp
ja
psubq
ltr
add
add
data16
mov
jge
data16
data16
mov
fdivl
data16
mov
mov
pop
or
clc
mov
lock
jge
invd
pop
add
cmp
data16
mov
pop
fbstp
test
add
add
jge
data16
pop
stc
bsf
mov
in
test
mov
call
ds
add
mov
call
add
mov
jnp
mov
mov
call
mov
data16
xorl
fisttps
cld
jne
xor
mov
sti
repnz
data16
push
xor
mov
pushf
data16
mov
mov
fisttps
or
mov
hlt
mov
add
dec
or
mov
or
mov
fdivrl
xor
pop
lock
lea
icebp
jb
add
jge
mov
fsubr
pop
mov
in
rcrl
jb
add
jge
mov
in
pop
data16
cmp
mov
fdivrl
cmp
mov
mov
lock
mov
or
clc
cmp
je
push
loopne
dec
mov
icebp
mov
pcmpgtd
add
jmp
mov
lock
rorl
or
jb
add
loopne
jne
data16
mov
data16
add
data16
retw
ret
lret
enterw
pop
jne
mov
call
xor
lea
repnz
add
xor
in
xor
movl
clc
add
pop
pushf
pop
call
mov
push
pop
mov
push
inc
add
add
into
fs
mov
ret
add
add
add
ds
add
into
ret
pop
adc
add
add
jne
lea
mov
sarl
test
mov
push
xorb
mov
xor
cmp
pop
mov
je
xor
mov
cmp
pop
cmp
jne
mov
cld
push
pop
inc
stc
test
clc
test
cmp
fs
or
add
add
push
lret
add
clc
add
dec
mov
push
add
xor
cmp
je
mov
push
lea
push
cmp
mov
add
sub
add
mov
jne
mov
xor
mov
push
cmp
jne
sbbl
clc
inc
pop
sti
add
cld
xor
mov
roll
mov
inc
in
add
mov
mov
push
mov
test
xor
pushf
sub
inc
sub
mov
inc
add
or
cmp
mov
cmp
je
push
dec
str
cmp
xor
mov
add
data16
push
add
jne
movl
clc
xlat
inc
mov
push
pushf
in
add
add
add
add
add
lret
lock
clc
inc
lret
cmp
ss
pushf
test
je
xor
rorb
push
add
jb
add
dec
mov
push
push
adcl
xor
mov
scas
ret
jns
mov
dec
or
ret
lock
mov
or
mov
xorl
mov
adc
iret
inc
movl
incb
ret
adc
clc
dec
fisttps
add
ret
lea
add
xor
pushf
add
add
inc
test
xor
push
pushf
push
xor
inc
cmp
jbe
mov
or
inc
test
xor
in
hlt
push
push
push
push
mov
pushf
pushf
xor
mov
or
mov
clc
jb
add
orl
addl
mov
or
inc
dec
mov
orw
xor
mov
mov
mov
mov
inc
dec
add
add
mov
clc
or
mov
clc
popf
incl
ret
adc
mov
hlt
test
clc
or
xor
pushf
jb
add
inc
daa
inc
inc
xor
dec
pushf
add
clc
cmp
or
add
xor
or
lea
or
enter
mov
cld
dec
push
sub
add
or
add
or
add
mov
inc
mov
cmp
xbegin
clc
or
xor
adc
lea
add
inc
add
add
je
push
or
dec
std
mov
mov
mov
or
inc
clc
mov
hlt
call
push
or
push
xor
mov
xor
pushf
inc
mov
or
add
inc
mov
or
inc
push
jmp
mov
mov
jne
jmp
mov
clc
lret
push
mov
mov
sub
decl
or
pop
ds
pushl
mov
mov
jmp
leave
jne
call
in
dec
add
add
inc
cmp
je
mov
or
add
or
adc
enter
rolb
mov
or
rorb
jmp
push
mov
cld
inc
inc
orl
push
push
mov
add
test
mov
adc
mov
mov
lock
fcoms
mov
push
enter
cmp
add
mov
call
cmp
jmp
push
call
mov
cld
or
call
add
xor
jne
cmp
jne
mov
or
pop
into
je
mov
or
mov
mov
mov
or
sar
xor
xor
pop
adc
ret
cld
inc
mov
cld
mov
push
pop
or
xorps
test
add
adc
addl
jmp
ror
inc
leave
xor
and
add
xor
xorl
mov
pcmpgtw
add
leave
mov
push
dec
mov
lea
xor
sysret
dec
rorb
pushw
jne
ud0
mov
lods
add
data16
iret
and
cli
inc
cmp
add
inc
pop
lea
mov
add
mov
mov
add
inc
data16
clc
int3
cmp
je
push
pop
xchg
data16
lea
jb
jmp
call
clc
xchg
mov
or
lea
push
inc
jge
mov
fdivs
incl
xor
xchg
ret
xor
cmp
data16
rolb
add
dec
xchg
push
jmp
push
add
add
mov
clc
dec
xchg
cmp
jne
xor
jmp
add
jne
call
clc
xchg
sti
add
add
xor
pop
mov
jmp
mov
cmp
cmp
lea
jle
jae
mov
lcall
inc
push
lea
mov
int3
push
xchg
add
add
inc
add
cld
mov
aam
xchg
mov
testb
mov
hlt
add
mov
decl
incl
mov
call
je
js
lock
mov
mov
sbb
clc
add
mov
rorb
dec
xchg
mov
in
jge
cmp
clc
pop
fistl
clc
add
mov
mov
mov
adc
add
adc
pop
sbbl
ret
cmp
mov
cld
add
add
add
sub
or
add
mov
push
push
clc
addl
out
add
jmp
cmp
jmp
je
mov
inc
add
add
add
pop
pop
push
inc
in
pop
in
cmp
xor
add
push
mov
in
dec
push
test
add
leave
inc
test
add
add
dec
push
mov
hlt
push
dec
leave
mov
clc
cmovge
mov
clc
popl
push
add
push
xor
cld
add
add
pushfw
add
add
mov
cmp
jne
xor
jmp
add
mov
or
mov
mov
mov
or
shl
icebp
addb
or
or
stc
shll
xor
inc
xchg
add
add
mov
test
sub
jmp
mov
lock
lea
mov
or
leave
add
dec
dec
test
paddb
add
dec
mov
mov
or
dec
xor
mov
adc
mov
call
mov
push
clc
or
push
lret
mov
mov
xor
cmp
lsl
call
or
dec
or
inc
xor
in
add
inc
pop
xor
testl
dec
adc
inc
xor
sub
test
clc
inc
add
hlt
leave
test
clc
inc
push
aaa
inc
pop
rorl
orb
mov
push
clc
ret
xor
xor
js
dec
push
mov
lock
lret
jne
mov
enter
lret
into
out
dec
dec
jmp
xor
xor
mov
sub
add
or
dec
mov
xor
jb
add
dec
pop
mov
cld
mov
call
stc
add
pop
leave
add
in
mov
xor
movl
mov
xor
pushf
inc
cmp
pushf
xchg
mov
ljmp
push
push
push
push
push
xor
mov
add
mov
clc
lret
cmp
pushf
mov
clc
cld
jne
xor
xor
or
add
hlt
dec
dec
je
xor
xor
add
add
rol
mov
in
inc
enter
icebp
mov
clc
lock
enter
lret
inc
jne
mov
cld
dec
enter
pushf
sti
xor
mov
mov
xor
xor
mov
mov
push
shr
in
cmp
add
pushf
mov
call
xor
pushf
popa
push
dec
inc
mov
clc
pushf
into
mov
in
call
pop
or
or
or
push
inc
cmpxchg8b
leave
loopne
test
mov
rcll
xor
add
and
mov
leave
sti
inc
decl
mov
clc
dec
iret
xor
jb
add
inc
mov
xabort
loopne
ljmp
mov
clc
lock
dec
mov
loopne
incl
mov
hlt
jne
mov
in
dec
or
jb
add
xor
add
mov
subl
mov
xor
pushf
mov
clc
add
mov
adc
inc
mov
mov
loopne
inc
mov
mov
nop
roll
mov
mov
dec
push
mov
xor
mov
mov
in
into
inc
iret
xor
add
mov
dec
mov
mov
mov
mov
xor
mov
clc
enter
mov
lock
mov
cmp
rol
enter
inc
adc
inc
clc
xor
add
mov
roll
add
push
mov
fsubr
inc
mov
adc
add
inc
test
xor
fmuls
test
cld
or
dec
ret
push
inc
dec
mov
mov
push
jne
mov
call
mov
mov
clc
mov
xor
adcl
inc
push
mov
clc
incl
mov
clc
rolb
je
mov
jne
lea
mulb
decl
fadds
inc
jmp
mov
roll
mov
lock
dec
ret
mov
mov
mov
fadd
enter
inc
cld
mov
xor
add
sub
xor
pushf
add
or
jne
clc
mov
call
jmp
mov
xor
xor
enter
clc
inc
inc
pushl
in
pushf
jne
mov
clc
dec
out
dec
mov
lea
cmp
lea
mov
cld
iret
mov
jmp
test
je
mov
fdivr
movl
lock
inc
lock
lret
imul
testl
dec
mov
fmuls
fmuls
enter
inc
dec
xor
add
mov
inc
inc
push
mov
lock
mov
fadds
rol
test
dec
push
decl
push
mov
add
cmp
add
loopne
add
dec
xor
pushf
mov
cld
iret
test
mov
in
dec
add
add
dec
mov
fmull
add
testl
test
add
add
mov
cld
mov
hlt
mov
add
cmp
add
mov
mov
call
dec
add
cmp
cld
iret
mov
dec
push
lea
mov
call
iret
inc
mov
or
or
xor
cmp
je
mov
mov
xor
mov
mov
xor
bswap
rorb
add
mov
xor
or
mov
xor
bswap
rorb
add
add
xor
mov
add
dec
dec
xor
mov
lock
iret
rorl
inc
mov
iret
add
xor
mov
or
push
shll
cmp
fmull
test
dec
dec
xor
or
dec
enter
add
mov
xor
or
mov
mov
xor
mov
cmp
jne
lea
sti
or
cmp
je
mov
ret
or
call
add
mov
cld
mov
xor
add
dec
jnp
mov
xor
add
mov
mov
xor
rorl
jb
add
ja
sbb
cwtl
enter
inc
decl
fadds
rorl
inc
xor
mov
or
inc
rcll
mov
xor
jb
add
shll
mov
xor
add
repz
inc
mov
xor
inc
mov
mov
jne
mov
test
inc
mov
mov
lea
xor
add
mov
lods
dec
inc
mov
lret
mov
adc
std
ret
ljmp
hlt
push
xor
enter
inc
add
cld
test
pushf
inc
xor
pop
push
incl
in
mov
push
inc
cmpsl
mov
or
add
add
add
icebp
je
mov
cld
rol
ret
add
lea
cwtl
jne
clc
or
incl
cmp
incl
lcall
or
push
mov
test
inc
mov
imul
dec
mov
push
dec
push
xor
add
push
incl
lods
inc
inc
mov
xchg
or
call
adc
orb
inc
inc
add
mov
call
push
push
dec
jo
push
dec
mov
cmp
cmovne
call
mov
lcall
leave
inc
adc
jne
call
dec
inc
mov
add
mov
push
or
dec
xorl
cmp
mov
pop
adc
ret
mov
clc
mov
pop
mov
mov
push
push
lock
mov
adc
or
push
ret
xor
mov
mov
cmpb
add
cmp
mov
xchg
dec
add
mov
add
dec
into
mov
mov
das
add
add
mov
and
mov
and
xor
lea
xor
add
xor
orl
xor
pushf
mov
or
jne
call
adc
mov
adc
movl
pop
dec
and
call
in
call
adc
pushf
pop
mov
and
push
add
mov
test
decl
and
cli
and
or
sbb
adc
jmp
mov
adc
dec
adc
mov
and
xor
add
pcmpeqb
jmp
decl
je
mov
pop
adc
pushf
mov
jge
decl
